
ed951cfa6045da2ade1900e01b00ece04428f9b621dd50780f4b76ca5fb235d0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    r11,rsp
   14000100b:	mov    QWORD PTR [r11+0x18],r8
   14000100f:	mov    QWORD PTR [r11+0x20],r9
   140001013:	push   rbx
   140001014:	push   rbp
   140001015:	push   rsi
   140001016:	push   rdi
   140001017:	sub    rsp,0x38
   14000101b:	xor    ebp,ebp
   14000101d:	lea    rax,[rdx-0x1]
   140001021:	cmp    rax,0x7ffffffe
   140001027:	mov    rsi,rcx
   14000102a:	mov    edi,ebp
   14000102c:	mov    ecx,0x80070057
   140001031:	cmova  edi,ecx
   140001034:	test   edi,edi
   140001036:	js     0x140001073
   140001038:	lea    rbx,[rdx-0x1]
   14000103c:	mov    r9,r8
   14000103f:	lea    rax,[r11+0x20]
   140001043:	mov    r8,rbx
   140001046:	mov    rcx,rsi
   140001049:	mov    QWORD PTR [r11-0x38],rax
   14000104d:	mov    edi,ebp
   14000104f:	call   QWORD PTR [rip+0x6303]        # 0x140007358
   140001055:	test   eax,eax
   140001057:	js     0x140001068
   140001059:	cdqe   
   14000105b:	cmp    rax,rbx
   14000105e:	ja     0x140001068
   140001060:	jne    0x14000107b
   140001062:	mov    WORD PTR [rsi+rbx*2],bp
   140001066:	jmp    0x14000107b
   140001068:	mov    WORD PTR [rsi+rbx*2],bp
   14000106c:	mov    edi,0x8007007a
   140001071:	jmp    0x14000107b
   140001073:	test   rdx,rdx
   140001076:	je     0x14000107b
   140001078:	mov    WORD PTR [rsi],bp
   14000107b:	mov    eax,edi
   14000107d:	add    rsp,0x38
   140001081:	pop    rdi
   140001082:	pop    rsi
   140001083:	pop    rbp
   140001084:	pop    rbx
   140001085:	ret    
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x8],rbx
   140001095:	push   rdi
   140001096:	sub    rsp,0x20
   14000109a:	mov    r10,QWORD PTR [rsp+0x60]
   14000109f:	xor    edi,edi
   1400010a1:	test   r10,r10
   1400010a4:	je     0x14000119a
   1400010aa:	test   edx,edx
   1400010ac:	je     0x140001157
   1400010b2:	sub    edx,0x1
   1400010b5:	jne    0x14000119a
   1400010bb:	mov    r11d,edi
   1400010be:	mov    rax,QWORD PTR [rsp+0x50]
   1400010c3:	mov    QWORD PTR [r10+0x10],r9
   1400010c7:	lea    r9d,[rdi+0x1]
   1400010cb:	mov    DWORD PTR [r10+0x24],r9d
   1400010cf:	mov    BYTE PTR [r10+0x28],r8b
   1400010d3:	mov    QWORD PTR [r10+0x18],rax
   1400010d7:	cmp    di,WORD PTR [r10+0x2a]
   1400010dc:	jae    0x14000119a
   1400010e2:	mov    rax,QWORD PTR [r10+0x38]
   1400010e6:	mov    dl,BYTE PTR [r10+0x28]
   1400010ea:	mov    ebx,r11d
   1400010ed:	mov    rcx,QWORD PTR [rax+rbx*8]
   1400010f1:	mov    rax,QWORD PTR [r10+0x40]
   1400010f5:	cmp    BYTE PTR [rbx+rax*1],dl
   1400010f8:	jbe    0x1400010fe
   1400010fa:	test   dl,dl
   1400010fc:	jne    0x140001116
   1400010fe:	test   rcx,rcx
   140001101:	je     0x140001131
   140001103:	test   QWORD PTR [r10+0x10],rcx
   140001107:	je     0x140001116
   140001109:	mov    rax,QWORD PTR [r10+0x18]
   14000110d:	and    rax,rcx
   140001110:	cmp    rax,QWORD PTR [r10+0x18]
   140001114:	je     0x140001131
   140001116:	mov    r8,QWORD PTR [r10+0x30]
   14000111a:	mov    ecx,r11d
   14000111d:	and    ecx,0x1f
   140001120:	shr    rbx,0x5
   140001124:	mov    edx,r9d
   140001127:	shl    edx,cl
   140001129:	not    edx
   14000112b:	and    DWORD PTR [r8+rbx*4],edx
   14000112f:	jmp    0x140001148
   140001131:	mov    r8,QWORD PTR [r10+0x30]
   140001135:	mov    ecx,r11d
   140001138:	and    ecx,0x1f
   14000113b:	shr    rbx,0x5
   14000113f:	mov    edx,r9d
   140001142:	shl    edx,cl
   140001144:	or     DWORD PTR [r8+rbx*4],edx
   140001148:	movzx  eax,WORD PTR [r10+0x2a]
   14000114d:	add    r11d,r9d
   140001150:	cmp    r11d,eax
   140001153:	jb     0x1400010e2
   140001155:	jmp    0x14000119a
   140001157:	mov    DWORD PTR [r10+0x24],edi
   14000115b:	mov    BYTE PTR [r10+0x28],dil
   14000115f:	mov    QWORD PTR [r10+0x10],rdi
   140001163:	mov    QWORD PTR [r10+0x18],rdi
   140001167:	cmp    WORD PTR [r10+0x2a],di
   14000116c:	jbe    0x14000119a
   14000116e:	movzx  eax,WORD PTR [r10+0x2a]
   140001173:	mov    r9d,0x1
   140001179:	mov    rcx,QWORD PTR [r10+0x30]
   14000117d:	sub    eax,r9d
   140001180:	cdq    
   140001181:	and    edx,0x1f
   140001184:	add    eax,edx
   140001186:	xor    edx,edx
   140001188:	sar    eax,0x5
   14000118b:	add    eax,r9d
   14000118e:	movsxd r8,eax
   140001191:	shl    r8,0x2
   140001195:	call   0x1400060ce
   14000119a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000119f:	add    rsp,0x20
   1400011a3:	pop    rdi
   1400011a4:	ret    
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	cmp    QWORD PTR [rip+0x94dc],0x0        # 0x14000a690
   1400011b4:	je     0x1400011b9
   1400011b6:	xor    eax,eax
   1400011b8:	ret    
   1400011b9:	lea    r9,[rip+0x94d0]        # 0x14000a690
   1400011c0:	lea    r8,[rip+0x8e79]        # 0x14000a040
   1400011c7:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x140001090
   1400011ce:	lea    rcx,[rip+0x67ab]        # 0x140007980
   1400011d5:	rex.W jmp QWORD PTR [rip+0x60b4]        # 0x140007290
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	int3   
   1400011e1:	int3   
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	sub    rsp,0x28
   1400011e8:	mov    rcx,QWORD PTR [rip+0x94a1]        # 0x14000a690
   1400011ef:	test   rcx,rcx
   1400011f2:	jne    0x1400011f8
   1400011f4:	xor    eax,eax
   1400011f6:	jmp    0x140001206
   1400011f8:	call   QWORD PTR [rip+0x60a2]        # 0x1400072a0
   1400011fe:	and    QWORD PTR [rip+0x948a],0x0        # 0x14000a690
   140001206:	add    rsp,0x28
   14000120a:	ret    
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	rex push rbx
   140001216:	sub    rsp,0x60
   14000121a:	mov    rax,QWORD PTR [rip+0x8de7]        # 0x14000a008
   140001221:	xor    rax,rsp
   140001224:	mov    QWORD PTR [rsp+0x50],rax
   140001229:	or     rcx,0xffffffffffffffff
   14000122d:	xor    ebx,ebx
   14000122f:	mov    r10d,0xa
   140001235:	test   r8,r8
   140001238:	je     0x140001250
   14000123a:	mov    rax,rcx
   14000123d:	inc    rax
   140001240:	cmp    WORD PTR [r8+rax*2],bx
   140001245:	jne    0x14000123d
   140001247:	lea    edx,[rax*2+0x2]
   14000124e:	jmp    0x140001253
   140001250:	mov    edx,r10d
   140001253:	test   r8,r8
   140001256:	mov    DWORD PTR [rsp+0x28],edx
   14000125a:	lea    r11,[rip+0x63cf]        # 0x140007630
   140001261:	mov    DWORD PTR [rsp+0x2c],ebx
   140001265:	mov    rax,r11
   140001268:	cmovne rax,r8
   14000126c:	mov    QWORD PTR [rsp+0x20],rax
   140001271:	test   r9,r9
   140001274:	je     0x14000128b
   140001276:	inc    rcx
   140001279:	cmp    WORD PTR [r9+rcx*2],bx
   14000127e:	jne    0x140001276
   140001280:	lea    r10d,[rcx*2+0x2]
   140001288:	test   r9,r9
   14000128b:	mov    rcx,QWORD PTR [rip+0x93fe]        # 0x14000a690
   140001292:	lea    rax,[rsp+0x90]
   14000129a:	cmovne r11,r9
   14000129e:	mov    QWORD PTR [rsp+0x40],rax
   1400012a3:	lea    r9,[rsp+0x20]
   1400012a8:	mov    QWORD PTR [rsp+0x30],r11
   1400012ad:	mov    r8d,0x3
   1400012b3:	mov    DWORD PTR [rsp+0x38],r10d
   1400012b8:	lea    rdx,[rip+0x66a1]        # 0x140007960
   1400012bf:	mov    DWORD PTR [rsp+0x3c],ebx
   1400012c3:	mov    QWORD PTR [rsp+0x48],0x4
   1400012cc:	call   QWORD PTR [rip+0x5fc6]        # 0x140007298
   1400012d2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400012d7:	xor    rcx,rsp
   1400012da:	call   0x140005910
   1400012df:	add    rsp,0x60
   1400012e3:	pop    rbx
   1400012e4:	ret    
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400012f1:	push   rdi
   1400012f2:	sub    rsp,0x50
   1400012f6:	mov    rax,QWORD PTR [rip+0x8d0b]        # 0x14000a008
   1400012fd:	xor    rax,rsp
   140001300:	mov    QWORD PTR [rsp+0x40],rax
   140001305:	or     rcx,0xffffffffffffffff
   140001309:	xor    edi,edi
   14000130b:	mov    rbx,rdx
   14000130e:	mov    r10d,0xa
   140001314:	test   r8,r8
   140001317:	je     0x14000132f
   140001319:	mov    rax,rcx
   14000131c:	inc    rax
   14000131f:	cmp    WORD PTR [r8+rax*2],di
   140001324:	jne    0x14000131c
   140001326:	lea    edx,[rax*2+0x2]
   14000132d:	jmp    0x140001332
   14000132f:	mov    edx,r10d
   140001332:	test   r8,r8
   140001335:	mov    DWORD PTR [rsp+0x28],edx
   140001339:	lea    r11,[rip+0x62f0]        # 0x140007630
   140001340:	mov    DWORD PTR [rsp+0x2c],edi
   140001344:	mov    rax,r11
   140001347:	cmovne rax,r8
   14000134b:	mov    QWORD PTR [rsp+0x20],rax
   140001350:	test   r9,r9
   140001353:	je     0x14000136a
   140001355:	inc    rcx
   140001358:	cmp    WORD PTR [r9+rcx*2],di
   14000135d:	jne    0x140001355
   14000135f:	lea    r10d,[rcx*2+0x2]
   140001367:	test   r9,r9
   14000136a:	mov    rcx,QWORD PTR [rip+0x931f]        # 0x14000a690
   140001371:	cmovne r11,r9
   140001375:	lea    r9,[rsp+0x20]
   14000137a:	mov    QWORD PTR [rsp+0x30],r11
   14000137f:	mov    r8d,0x2
   140001385:	mov    DWORD PTR [rsp+0x38],r10d
   14000138a:	mov    rdx,rbx
   14000138d:	mov    DWORD PTR [rsp+0x3c],edi
   140001391:	call   QWORD PTR [rip+0x5f01]        # 0x140007298
   140001397:	mov    rcx,QWORD PTR [rsp+0x40]
   14000139c:	xor    rcx,rsp
   14000139f:	call   0x140005910
   1400013a4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400013a9:	add    rsp,0x50
   1400013ad:	pop    rdi
   1400013ae:	ret    
   1400013af:	int3   
   1400013b0:	int3   
   1400013b1:	int3   
   1400013b2:	int3   
   1400013b3:	int3   
   1400013b4:	int3   
   1400013b5:	int3   
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400013bd:	push   rbp
   1400013be:	lea    rbp,[rsp-0x37]
   1400013c3:	sub    rsp,0x90
   1400013ca:	mov    rax,QWORD PTR [rip+0x8c37]        # 0x14000a008
   1400013d1:	xor    rax,rsp
   1400013d4:	mov    QWORD PTR [rbp+0x27],rax
   1400013d8:	or     rcx,0xffffffffffffffff
   1400013dc:	xor    ebx,ebx
   1400013de:	mov    edx,0xa
   1400013e3:	test   r8,r8
   1400013e6:	je     0x1400013ff
   1400013e8:	mov    rax,rcx
   1400013eb:	inc    rax
   1400013ee:	cmp    WORD PTR [r8+rax*2],bx
   1400013f3:	jne    0x1400013eb
   1400013f5:	lea    r10d,[rax*2+0x2]
   1400013fd:	jmp    0x140001402
   1400013ff:	mov    r10d,edx
   140001402:	test   r8,r8
   140001405:	mov    DWORD PTR [rbp-0x31],r10d
   140001409:	lea    r11,[rip+0x6220]        # 0x140007630
   140001410:	mov    DWORD PTR [rbp-0x2d],ebx
   140001413:	mov    rax,r11
   140001416:	cmovne rax,r8
   14000141a:	mov    QWORD PTR [rbp-0x39],rax
   14000141e:	test   r9,r9
   140001421:	je     0x14000143a
   140001423:	mov    rax,rcx
   140001426:	inc    rax
   140001429:	cmp    WORD PTR [r9+rax*2],bx
   14000142e:	jne    0x140001426
   140001430:	lea    r8d,[rax*2+0x2]
   140001438:	jmp    0x14000143d
   14000143a:	mov    r8d,edx
   14000143d:	test   r9,r9
   140001440:	mov    DWORD PTR [rbp-0x21],r8d
   140001444:	mov    r8,QWORD PTR [rbp+0x67]
   140001448:	mov    rax,r11
   14000144b:	cmovne rax,r9
   14000144f:	mov    DWORD PTR [rbp-0x1d],ebx
   140001452:	mov    QWORD PTR [rbp-0x29],rax
   140001456:	test   r8,r8
   140001459:	je     0x140001472
   14000145b:	mov    rax,rcx
   14000145e:	inc    rax
   140001461:	cmp    WORD PTR [r8+rax*2],bx
   140001466:	jne    0x14000145e
   140001468:	lea    r9d,[rax*2+0x2]
   140001470:	jmp    0x140001475
   140001472:	mov    r9d,edx
   140001475:	test   r8,r8
   140001478:	mov    DWORD PTR [rbp-0x11],r9d
   14000147c:	mov    rax,r11
   14000147f:	mov    DWORD PTR [rbp-0xd],ebx
   140001482:	cmovne rax,r8
   140001486:	mov    QWORD PTR [rbp-0x19],rax
   14000148a:	mov    rax,QWORD PTR [rbp+0x6f]
   14000148e:	test   rax,rax
   140001491:	je     0x1400014a6
   140001493:	inc    rcx
   140001496:	cmp    WORD PTR [rax+rcx*2],bx
   14000149a:	jne    0x140001493
   14000149c:	lea    edx,[rcx*2+0x2]
   1400014a3:	test   rax,rax
   1400014a6:	mov    rcx,QWORD PTR [rip+0x91e3]        # 0x14000a690
   1400014ad:	lea    r9,[rbp-0x39]
   1400014b1:	cmovne r11,rax
   1400014b5:	mov    DWORD PTR [rbp-0x1],edx
   1400014b8:	lea    rax,[rbp+0x77]
   1400014bc:	mov    QWORD PTR [rbp-0x9],r11
   1400014c0:	mov    QWORD PTR [rbp+0x7],rax
   1400014c4:	lea    rdx,[rip+0x643d]        # 0x140007908
   1400014cb:	lea    rax,[rbp+0x7f]
   1400014cf:	mov    DWORD PTR [rbp+0x3],ebx
   1400014d2:	mov    r8d,0x6
   1400014d8:	mov    QWORD PTR [rbp+0x17],rax
   1400014dc:	mov    QWORD PTR [rbp+0xf],0x4
   1400014e4:	mov    QWORD PTR [rbp+0x1f],0x4
   1400014ec:	call   QWORD PTR [rip+0x5da6]        # 0x140007298
   1400014f2:	mov    rcx,QWORD PTR [rbp+0x27]
   1400014f6:	xor    rcx,rsp
   1400014f9:	call   0x140005910
   1400014fe:	mov    rbx,QWORD PTR [rsp+0xa0]
   140001506:	add    rsp,0x90
   14000150d:	pop    rbp
   14000150e:	ret    
   14000150f:	int3   
   140001510:	int3   
   140001511:	int3   
   140001512:	int3   
   140001513:	int3   
   140001514:	int3   
   140001515:	int3   
   140001516:	int3   
   140001517:	int3   
   140001518:	sub    rsp,0x38
   14000151c:	and    QWORD PTR [rsp+0x20],0x0
   140001522:	movzx  r9d,dx
   140001526:	mov    edx,0x2b
   14000152b:	call   QWORD PTR [rip+0x5d3f]        # 0x140007270
   140001531:	add    rsp,0x38
   140001535:	ret    
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	mov    r11,rsp
   14000153f:	mov    DWORD PTR [r11+0x20],r9d
   140001543:	sub    rsp,0x48
   140001547:	and    QWORD PTR [r11-0x18],0x0
   14000154c:	lea    rax,[r11+0x20]
   140001550:	mov    edx,0xa
   140001555:	mov    QWORD PTR [r11-0x20],0x4
   14000155d:	movzx  r9d,dx
   140001561:	lea    r8,[rip+0x63c0]        # 0x140007928
   140001568:	mov    edx,0x2b
   14000156d:	mov    QWORD PTR [r11-0x28],rax
   140001571:	call   QWORD PTR [rip+0x5cf9]        # 0x140007270
   140001577:	add    rsp,0x48
   14000157b:	ret    
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	mov    r11,rsp
   140001587:	mov    DWORD PTR [r11+0x20],r9d
   14000158b:	sub    rsp,0x48
   14000158f:	and    QWORD PTR [r11-0x18],0x0
   140001594:	lea    rax,[r11+0x20]
   140001598:	mov    edx,0xe
   14000159d:	mov    QWORD PTR [r11-0x20],0x4
   1400015a5:	movzx  r9d,dx
   1400015a9:	lea    r8,[rip+0x6378]        # 0x140007928
   1400015b0:	mov    edx,0x2b
   1400015b5:	mov    QWORD PTR [r11-0x28],rax
   1400015b9:	call   QWORD PTR [rip+0x5cb1]        # 0x140007270
   1400015bf:	add    rsp,0x48
   1400015c3:	ret    
   1400015c4:	int3   
   1400015c5:	int3   
   1400015c6:	int3   
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015da:	push   rdi
   1400015db:	sub    rsp,0x20
   1400015df:	and    DWORD PTR [r8],0x0
   1400015e3:	mov    rbx,rdx
   1400015e6:	sub    ecx,0x4
   1400015e9:	je     0x140001600
   1400015eb:	cmp    ecx,0x1
   1400015ee:	je     0x1400015f7
   1400015f0:	mov    eax,0x57
   1400015f5:	jmp    0x14000163f
   1400015f7:	xor    edi,edi
   1400015f9:	xor    eax,eax
   1400015fb:	xor    sil,sil
   1400015fe:	jmp    0x140001621
   140001600:	mov    rcx,r9
   140001603:	call   QWORD PTR [rip+0x5c77]        # 0x140007280
   140001609:	mov    rcx,rax
   14000160c:	mov    rdi,rax
   14000160f:	call   QWORD PTR [rip+0x5c53]        # 0x140007268
   140001615:	mov    rcx,rdi
   140001618:	mov    sil,al
   14000161b:	call   QWORD PTR [rip+0x5c3f]        # 0x140007260
   140001621:	test   BYTE PTR [rbx+0x1a],0x2
   140001625:	je     0x140001632
   140001627:	mov    rcx,QWORD PTR [rbx+0x10]
   14000162b:	test   rcx,rcx
   14000162e:	cmovne rbx,rcx
   140001632:	mov    QWORD PTR [rbx+0x10],rdi
   140001636:	mov    BYTE PTR [rbx+0x19],sil
   14000163a:	mov    DWORD PTR [rbx+0x1c],eax
   14000163d:	xor    eax,eax
   14000163f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001644:	mov    rsi,QWORD PTR [rsp+0x38]
   140001649:	add    rsp,0x20
   14000164d:	pop    rdi
   14000164e:	ret    
   14000164f:	int3   
   140001650:	int3   
   140001651:	int3   
   140001652:	int3   
   140001653:	int3   
   140001654:	int3   
   140001655:	int3   
   140001656:	int3   
   140001657:	int3   
   140001658:	int3   
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	sub    rsp,0x48
   140001664:	test   r8,r8
   140001667:	lea    r10,[rip+0x608a]        # 0x1400076f8
   14000166e:	mov    r11,r10
   140001671:	cmovne r11,r8
   140001675:	test   r9,r9
   140001678:	cmovne r10,r9
   14000167c:	test   BYTE PTR [rip+0x8ffd],0x80        # 0x14000a680
   140001683:	je     0x1400016ab
   140001685:	mov    eax,DWORD PTR [rsp+0x78]
   140001689:	mov    r9,rdx
   14000168c:	mov    r8,QWORD PTR [rcx+0x10]
   140001690:	mov    DWORD PTR [rsp+0x38],eax
   140001694:	mov    eax,DWORD PTR [rsp+0x70]
   140001698:	mov    DWORD PTR [rsp+0x30],eax
   14000169c:	mov    QWORD PTR [rsp+0x28],r10
   1400016a1:	mov    QWORD PTR [rsp+0x20],r11
   1400016a6:	call   0x1400013b8
   1400016ab:	xor    eax,eax
   1400016ad:	add    rsp,0x48
   1400016b1:	ret    
   1400016b2:	int3   
   1400016b3:	int3   
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	rex push rbx
   1400016c2:	sub    rsp,0x20
   1400016c6:	lea    rax,[rip+0x626b]        # 0x140007938
   1400016cd:	mov    rbx,rcx
   1400016d0:	mov    QWORD PTR [rcx],rax
   1400016d3:	mov    DWORD PTR [rcx+0xc],0xc0000001
   1400016da:	test   dl,0x1
   1400016dd:	je     0x1400016f1
   1400016df:	mov    r8,rcx
   1400016e2:	xor    edx,edx
   1400016e4:	mov    rcx,QWORD PTR [rip+0x902d]        # 0x14000a718
   1400016eb:	call   QWORD PTR [rip+0x5ca7]        # 0x140007398
   1400016f1:	mov    rax,rbx
   1400016f4:	add    rsp,0x20
   1400016f8:	pop    rbx
   1400016f9:	ret    
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	sub    rsp,0x28
   140001704:	xor    ecx,ecx
   140001706:	call   QWORD PTR [rip+0x592c]        # 0x140007038
   14000170c:	test   eax,eax
   14000170e:	je     0x140001719
   140001710:	mov    ecx,eax
   140001712:	call   QWORD PTR [rip+0x5c38]        # 0x140007350
   140001718:	int3   
   140001719:	xor    r8d,r8d
   14000171c:	lea    rcx,[rip+0x6aad]        # 0x1400081d0
   140001723:	xor    edx,edx
   140001725:	call   QWORD PTR [rip+0x5915]        # 0x140007040
   14000172b:	test   eax,eax
   14000172d:	je     0x140001738
   14000172f:	mov    ecx,eax
   140001731:	call   QWORD PTR [rip+0x5c19]        # 0x140007350
   140001737:	int3   
   140001738:	add    rsp,0x28
   14000173c:	ret    
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	int3   
   140001741:	int3   
   140001742:	int3   
   140001743:	int3   
   140001744:	mov    QWORD PTR [rsp+0x8],rbx
   140001749:	mov    QWORD PTR [rsp+0x10],rsi
   14000174e:	mov    QWORD PTR [rsp+0x20],rdi
   140001753:	push   rbp
   140001754:	push   r12
   140001756:	push   r13
   140001758:	push   r14
   14000175a:	push   r15
   14000175c:	mov    rbp,rsp
   14000175f:	sub    rsp,0x70
   140001763:	xor    edi,edi
   140001765:	mov    r12,r9
   140001768:	mov    QWORD PTR [rbp-0x38],rdi
   14000176c:	mov    r14,r8
   14000176f:	mov    r13,rdx
   140001772:	mov    r15,rcx
   140001775:	test   r8,r8
   140001778:	je     0x1400017a6
   14000177a:	mov    esi,0x103
   14000177f:	mov    r11,r8
   140001782:	mov    r10d,esi
   140001785:	mov    eax,edi
   140001787:	cmp    WORD PTR [r11],di
   14000178b:	je     0x140001797
   14000178d:	add    r11,0x2
   140001791:	sub    r10,0x1
   140001795:	jne    0x140001787
   140001797:	test   r10,r10
   14000179a:	jne    0x1400017a1
   14000179c:	mov    rsi,rdi
   14000179f:	jmp    0x1400017aa
   1400017a1:	sub    rsi,r10
   1400017a4:	jmp    0x1400017af
   1400017a6:	mov    rsi,QWORD PTR [rbp+0x40]
   1400017aa:	mov    eax,0x80070057
   1400017af:	test   eax,eax
   1400017b1:	js     0x14000182f
   1400017b3:	mov    rax,QWORD PTR [rcx]
   1400017b6:	mov    rbx,QWORD PTR [rax+0x38]
   1400017ba:	mov    rcx,rbx
   1400017bd:	call   QWORD PTR [rip+0x5c7d]        # 0x140007440
   1400017c3:	lea    rax,[rbp-0x40]
   1400017c7:	mov    rdx,r12
   1400017ca:	lea    r9,[rbp+0x40]
   1400017ce:	mov    QWORD PTR [rsp+0x20],rax
   1400017d3:	lea    r8,[rbp-0x38]
   1400017d7:	mov    rcx,r15
   1400017da:	call   rbx
   1400017dc:	test   eax,eax
   1400017de:	js     0x14000182f
   1400017e0:	mov    rcx,QWORD PTR [r13+0x0]
   1400017e4:	lea    eax,[rsi+0x1]
   1400017e7:	mov    DWORD PTR [rbp-0x28],eax
   1400017ea:	mov    rax,QWORD PTR [rbp-0x38]
   1400017ee:	mov    QWORD PTR [rbp-0x20],rax
   1400017f2:	mov    eax,DWORD PTR [rbp+0x40]
   1400017f5:	mov    rbx,QWORD PTR [rcx+0x20]
   1400017f9:	mov    DWORD PTR [rbp-0x18],eax
   1400017fc:	mov    rcx,rbx
   1400017ff:	mov    eax,DWORD PTR [rbp-0x40]
   140001802:	mov    DWORD PTR [rbp-0x8],eax
   140001805:	mov    QWORD PTR [rbp-0x30],r14
   140001809:	mov    QWORD PTR [rbp-0x10],r12
   14000180d:	call   QWORD PTR [rip+0x5c2d]        # 0x140007440
   140001813:	lea    rdx,[rbp-0x30]
   140001817:	mov    rcx,r13
   14000181a:	call   rbx
   14000181c:	mov    rcx,QWORD PTR [rbp-0x38]
   140001820:	mov    ebx,eax
   140001822:	call   QWORD PTR [rip+0x5870]        # 0x140007098
   140001828:	test   ebx,ebx
   14000182a:	cmovs  edi,ebx
   14000182d:	mov    eax,edi
   14000182f:	lea    r11,[rsp+0x70]
   140001834:	mov    rbx,QWORD PTR [r11+0x30]
   140001838:	mov    rsi,QWORD PTR [r11+0x38]
   14000183c:	mov    rdi,QWORD PTR [r11+0x48]
   140001840:	mov    rsp,r11
   140001843:	pop    r15
   140001845:	pop    r14
   140001847:	pop    r13
   140001849:	pop    r12
   14000184b:	pop    rbp
   14000184c:	ret    
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	int3   
   140001851:	int3   
   140001852:	int3   
   140001853:	int3   
   140001854:	int3   
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	mov    QWORD PTR [rsp+0x8],rbx
   140001865:	push   rbp
   140001866:	mov    rbp,rsp
   140001869:	sub    rsp,0x40
   14000186d:	mov    rbx,r9
   140001870:	lea    rax,[rbp-0x8]
   140001874:	mov    r9d,0x20019
   14000187a:	mov    QWORD PTR [rsp+0x20],rax
   14000187f:	xor    r8d,r8d
   140001882:	lea    rdx,[rip+0x5dc7]        # 0x140007650
   140001889:	mov    rcx,0xffffffff80000002
   140001890:	call   QWORD PTR [rip+0x594a]        # 0x1400071e0
   140001896:	test   eax,eax
   140001898:	je     0x1400018d6
   14000189a:	mov    rcx,QWORD PTR [rip+0x87e7]        # 0x14000a088
   1400018a1:	lea    rdx,[rip+0x87e0]        # 0x14000a088
   1400018a8:	cmp    rcx,rdx
   1400018ab:	je     0x140001a04
   1400018b1:	test   BYTE PTR [rcx+0x44],0x1
   1400018b5:	je     0x140001a04
   1400018bb:	cmp    BYTE PTR [rcx+0x41],0x2
   1400018bf:	jb     0x140001a04
   1400018c5:	mov    rcx,QWORD PTR [rcx+0x38]
   1400018c9:	mov    r9d,eax
   1400018cc:	call   0x14000153c
   1400018d1:	jmp    0x140001a04
   1400018d6:	mov    rcx,QWORD PTR [rbp-0x8]
   1400018da:	lea    rax,[rbp-0x10]
   1400018de:	mov    QWORD PTR [rsp+0x28],rax
   1400018e3:	lea    r9,[rbp-0xc]
   1400018e7:	lea    rax,[rbp+0x28]
   1400018eb:	mov    DWORD PTR [rbp-0x10],0x4
   1400018f2:	xor    r8d,r8d
   1400018f5:	mov    QWORD PTR [rsp+0x20],rax
   1400018fa:	mov    rdx,rbx
   1400018fd:	call   QWORD PTR [rip+0x58ed]        # 0x1400071f0
   140001903:	test   eax,eax
   140001905:	jne    0x14000194c
   140001907:	mov    eax,DWORD PTR [rbp+0x28]
   14000190a:	cmp    eax,0x1
   14000190d:	jne    0x14000194c
   14000190f:	mov    rcx,QWORD PTR [rip+0x8772]        # 0x14000a088
   140001916:	lea    rdx,[rip+0x876b]        # 0x14000a088
   14000191d:	cmp    rcx,rdx
   140001920:	je     0x140001943
   140001922:	test   BYTE PTR [rcx+0x44],al
   140001925:	je     0x140001943
   140001927:	cmp    BYTE PTR [rcx+0x41],0x4
   14000192b:	jb     0x140001943
   14000192d:	mov    rcx,QWORD PTR [rcx+0x38]
   140001931:	lea    edx,[rax+0xa]
   140001934:	lea    r8,[rip+0x5fed]        # 0x140007928
   14000193b:	call   0x140001518
   140001940:	mov    eax,DWORD PTR [rbp+0x28]
   140001943:	mov    ecx,eax
   140001945:	call   QWORD PTR [rip+0x584d]        # 0x140007198
   14000194b:	int3   
   14000194c:	mov    rcx,QWORD PTR [rbp-0x8]
   140001950:	lea    rax,[rbp-0x10]
   140001954:	mov    QWORD PTR [rsp+0x28],rax
   140001959:	lea    r9,[rbp-0xc]
   14000195d:	lea    rax,[rbp+0x28]
   140001961:	mov    DWORD PTR [rbp-0x10],0x4
   140001968:	xor    r8d,r8d
   14000196b:	mov    QWORD PTR [rsp+0x20],rax
   140001970:	lea    rdx,[rip+0x5d69]        # 0x1400076e0
   140001977:	call   QWORD PTR [rip+0x5873]        # 0x1400071f0
   14000197d:	test   eax,eax
   14000197f:	jne    0x1400019c6
   140001981:	mov    eax,DWORD PTR [rbp+0x28]
   140001984:	cmp    eax,0x1
   140001987:	jne    0x1400019c6
   140001989:	mov    rcx,QWORD PTR [rip+0x86f8]        # 0x14000a088
   140001990:	lea    rdx,[rip+0x86f1]        # 0x14000a088
   140001997:	cmp    rcx,rdx
   14000199a:	je     0x1400019bd
   14000199c:	test   BYTE PTR [rcx+0x44],al
   14000199f:	je     0x1400019bd
   1400019a1:	cmp    BYTE PTR [rcx+0x41],0x4
   1400019a5:	jb     0x1400019bd
   1400019a7:	mov    rcx,QWORD PTR [rcx+0x38]
   1400019ab:	lea    edx,[rax+0xb]
   1400019ae:	lea    r8,[rip+0x5f73]        # 0x140007928
   1400019b5:	call   0x140001518
   1400019ba:	mov    eax,DWORD PTR [rbp+0x28]
   1400019bd:	mov    ecx,eax
   1400019bf:	call   QWORD PTR [rip+0x57d3]        # 0x140007198
   1400019c5:	int3   
   1400019c6:	mov    rcx,QWORD PTR [rip+0x86bb]        # 0x14000a088
   1400019cd:	lea    rdx,[rip+0x86b4]        # 0x14000a088
   1400019d4:	cmp    rcx,rdx
   1400019d7:	je     0x1400019fa
   1400019d9:	test   BYTE PTR [rcx+0x44],0x1
   1400019dd:	je     0x1400019fa
   1400019df:	cmp    BYTE PTR [rcx+0x41],0x4
   1400019e3:	jb     0x1400019fa
   1400019e5:	mov    rcx,QWORD PTR [rcx+0x38]
   1400019e9:	lea    r8,[rip+0x5f38]        # 0x140007928
   1400019f0:	mov    edx,0xd
   1400019f5:	call   0x140001518
   1400019fa:	mov    rcx,QWORD PTR [rbp-0x8]
   1400019fe:	call   QWORD PTR [rip+0x57f4]        # 0x1400071f8
   140001a04:	xor    eax,eax
   140001a06:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a0b:	add    rsp,0x40
   140001a0f:	pop    rbp
   140001a10:	ret    
   140001a11:	int3   
   140001a12:	int3   
   140001a13:	int3   
   140001a14:	int3   
   140001a15:	int3   
   140001a16:	int3   
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    QWORD PTR [rsp+0x8],rbx
   140001a25:	push   rbp
   140001a26:	push   rsi
   140001a27:	push   rdi
   140001a28:	push   r12
   140001a2a:	push   r13
   140001a2c:	push   r14
   140001a2e:	push   r15
   140001a30:	lea    rbp,[rsp-0x270]
   140001a38:	sub    rsp,0x370
   140001a3f:	mov    rax,QWORD PTR [rip+0x85c2]        # 0x14000a008
   140001a46:	xor    rax,rsp
   140001a49:	mov    QWORD PTR [rbp+0x260],rax
   140001a50:	mov    rcx,QWORD PTR [rbp+0x2f8]
   140001a57:	mov    rax,r9
   140001a5a:	mov    rbx,QWORD PTR [rbp+0x2f0]
   140001a61:	xor    r9d,r9d
   140001a64:	mov    r13,QWORD PTR [rbp+0x2e0]
   140001a6b:	mov    r14,r8
   140001a6e:	mov    QWORD PTR [rbp+0x0],rcx
   140001a72:	mov    edi,r9d
   140001a75:	mov    cl,r9b
   140001a78:	mov    QWORD PTR [rbp-0x78],rax
   140001a7c:	mov    BYTE PTR [rsp+0x42],cl
   140001a80:	lea    r15d,[r9+0x5]
   140001a84:	mov    BYTE PTR [rbp-0x50],cl
   140001a87:	mov    esi,r9d
   140001a8a:	lea    ecx,[r9+0x2]
   140001a8e:	mov    QWORD PTR [rbp-0x10],rax
   140001a92:	mov    rax,QWORD PTR [rbp+0x2d0]
   140001a99:	mov    DWORD PTR [rsp+0x64],ecx
   140001a9d:	mov    DWORD PTR [rbp-0x4c],ecx
   140001aa0:	mov    DWORD PTR [rbp-0x48],ecx
   140001aa3:	mov    cl,r9b
   140001aa6:	mov    QWORD PTR [rbp-0x80],rax
   140001aaa:	mov    rax,QWORD PTR [rbp+0x2d8]
   140001ab1:	mov    BYTE PTR [rsp+0x40],cl
   140001ab5:	mov    BYTE PTR [rbp-0x60],cl
   140001ab8:	lea    ecx,[r9+0x7]
   140001abc:	mov    DWORD PTR [rsp+0x68],ecx
   140001ac0:	mov    DWORD PTR [rbp-0x6c],ecx
   140001ac3:	mov    DWORD PTR [rsp+0x70],ecx
   140001ac7:	mov    DWORD PTR [rbp-0x68],ecx
   140001aca:	mov    QWORD PTR [rbp-0x38],rax
   140001ace:	mov    QWORD PTR [rbp+0x20],rbx
   140001ad2:	mov    QWORD PTR [rbp+0x8],r9
   140001ad6:	mov    QWORD PTR [rsp+0x48],r9
   140001adb:	mov    BYTE PTR [rsp+0x41],r9b
   140001ae0:	mov    DWORD PTR [rsp+0x44],r9d
   140001ae5:	mov    DWORD PTR [rsp+0x6c],r15d
   140001aea:	mov    DWORD PTR [rbp-0x5c],r15d
   140001aee:	mov    DWORD PTR [rbp-0x58],r15d
   140001af2:	mov    BYTE PTR [rbp-0x70],r9b
   140001af6:	mov    QWORD PTR [rbp-0x30],r9
   140001afa:	mov    DWORD PTR [rsp+0x60],r9d
   140001aff:	mov    DWORD PTR [rsp+0x50],r9d
   140001b04:	mov    BYTE PTR [rsp+0x78],r9b
   140001b09:	mov    DWORD PTR [rsp+0x7c],r9d
   140001b0e:	test   rax,rax
   140001b11:	je     0x140001b2c
   140001b13:	mov    r12d,DWORD PTR [rbp+0x2e8]
   140001b1a:	test   r13,r13
   140001b1d:	je     0x140001bf6
   140001b23:	test   r12d,r12d
   140001b26:	jne    0x140001bff
   140001b2c:	mov    r15d,0x80070057
   140001b32:	xor    ebx,ebx
   140001b34:	mov    eax,DWORD PTR [rsp+0x68]
   140001b38:	cmp    DWORD PTR [rsp+0x70],eax
   140001b3c:	je     0x140001b49
   140001b3e:	mov    edx,eax
   140001b40:	lea    rcx,[rbp-0x70]
   140001b44:	call   0x1400053a8
   140001b49:	cmp    BYTE PTR [rsp+0x40],bl
   140001b4d:	je     0x140001b5c
   140001b4f:	mov    edx,DWORD PTR [rsp+0x6c]
   140001b53:	lea    rcx,[rbp-0x60]
   140001b57:	call   0x1400052c4
   140001b5c:	cmp    BYTE PTR [rsp+0x42],bl
   140001b60:	je     0x140001b6f
   140001b62:	mov    edx,DWORD PTR [rsp+0x64]
   140001b66:	lea    rcx,[rbp-0x50]
   140001b6a:	call   0x140005488
   140001b6f:	test   rsi,rsi
   140001b72:	je     0x140001b8b
   140001b74:	mov    rax,QWORD PTR [rsi]
   140001b77:	mov    rbx,QWORD PTR [rax+0x10]
   140001b7b:	mov    rcx,rbx
   140001b7e:	call   QWORD PTR [rip+0x58bc]        # 0x140007440
   140001b84:	mov    rcx,rsi
   140001b87:	call   rbx
   140001b89:	xor    ebx,ebx
   140001b8b:	mov    rsi,QWORD PTR [rsp+0x48]
   140001b90:	test   rsi,rsi
   140001b93:	je     0x140001baf
   140001b95:	mov    QWORD PTR [rsp+0x48],rbx
   140001b9a:	mov    rax,QWORD PTR [rsi]
   140001b9d:	mov    rbx,QWORD PTR [rax+0x10]
   140001ba1:	mov    rcx,rbx
   140001ba4:	call   QWORD PTR [rip+0x5896]        # 0x140007440
   140001baa:	mov    rcx,rsi
   140001bad:	call   rbx
   140001baf:	test   rdi,rdi
   140001bb2:	je     0x140001bc9
   140001bb4:	mov    rcx,QWORD PTR [rdi]
   140001bb7:	mov    rbx,QWORD PTR [rcx+0x10]
   140001bbb:	mov    rcx,rbx
   140001bbe:	call   QWORD PTR [rip+0x587c]        # 0x140007440
   140001bc4:	mov    rcx,rdi
   140001bc7:	call   rbx
   140001bc9:	mov    eax,r15d
   140001bcc:	mov    rcx,QWORD PTR [rbp+0x260]
   140001bd3:	xor    rcx,rsp
   140001bd6:	call   0x140005910
   140001bdb:	mov    rbx,QWORD PTR [rsp+0x3b0]
   140001be3:	add    rsp,0x370
   140001bea:	pop    r15
   140001bec:	pop    r14
   140001bee:	pop    r13
   140001bf0:	pop    r12
   140001bf2:	pop    rdi
   140001bf3:	pop    rsi
   140001bf4:	pop    rbp
   140001bf5:	ret    
   140001bf6:	test   r12d,r12d
   140001bf9:	jne    0x140001b2c
   140001bff:	mov    eax,0x1
   140001c04:	test   al,dl
   140001c06:	jne    0x140001c57
   140001c08:	xor    edx,edx
   140001c0a:	lea    rcx,[rbp-0x50]
   140001c0e:	call   0x140005488
   140001c13:	mov    edx,0x2
   140001c18:	lea    rcx,[rbp-0x60]
   140001c1c:	call   0x1400052c4
   140001c21:	mov    edx,r15d
   140001c24:	lea    rcx,[rbp-0x70]
   140001c28:	call   0x1400053a8
   140001c2d:	mov    eax,DWORD PTR [rbp-0x4c]
   140001c30:	mov    DWORD PTR [rsp+0x64],eax
   140001c34:	mov    al,BYTE PTR [rbp-0x50]
   140001c37:	mov    BYTE PTR [rsp+0x42],al
   140001c3b:	mov    eax,DWORD PTR [rbp-0x5c]
   140001c3e:	mov    DWORD PTR [rsp+0x6c],eax
   140001c42:	mov    al,BYTE PTR [rbp-0x60]
   140001c45:	mov    BYTE PTR [rsp+0x40],al
   140001c49:	mov    eax,DWORD PTR [rbp-0x68]
   140001c4c:	mov    DWORD PTR [rsp+0x70],eax
   140001c50:	mov    eax,DWORD PTR [rbp-0x6c]
   140001c53:	mov    DWORD PTR [rsp+0x68],eax
   140001c57:	mov    edx,0x2
   140001c5c:	xor    ecx,ecx
   140001c5e:	call   QWORD PTR [rip+0x541c]        # 0x140007080
   140001c64:	xor    r9d,r9d
   140001c67:	mov    r15d,eax
   140001c6a:	test   eax,eax
   140001c6c:	js     0x140001b32
   140001c72:	xor    eax,eax
   140001c74:	mov    QWORD PTR [rbp-0x8],r9
   140001c78:	cmp    r9d,ebx
   140001c7b:	jne    0x140001c82
   140001c7d:	cmp    eax,DWORD PTR [rbp+0x24]
   140001c80:	je     0x140001cc7
   140001c82:	mov    rax,QWORD PTR [rbp-0x78]
   140001c86:	lea    rcx,[rbp-0x30]
   140001c8a:	mov    DWORD PTR [rsp+0x38],r9d
   140001c8f:	xor    r8d,r8d
   140001c92:	mov    DWORD PTR [rsp+0x30],r9d
   140001c97:	mov    rdx,rbx
   140001c9a:	mov    QWORD PTR [rsp+0x28],r9
   140001c9f:	lea    r9,[rip+0xfffffffffffffbba]        # 0x140001860
   140001ca6:	mov    QWORD PTR [rsp+0x20],rax
   140001cab:	call   QWORD PTR [rip+0x573f]        # 0x1400073f0
   140001cb1:	xor    r9d,r9d
   140001cb4:	mov    r15d,eax
   140001cb7:	test   eax,eax
   140001cb9:	jns    0x140001cc7
   140001cbb:	bts    r15d,0x1c
   140001cc0:	xor    ebx,ebx
   140001cc2:	jmp    0x140002275
   140001cc7:	mov    rcx,QWORD PTR [rip+0x836a]        # 0x14000a038
   140001cce:	or     rax,0xffffffffffffffff
   140001cd2:	mov    r8,rax
   140001cd5:	inc    r8
   140001cd8:	cmp    WORD PTR [rcx+r8*2],r9w
   140001cdd:	jne    0x140001cd5
   140001cdf:	mov    rbx,QWORD PTR [rbp-0x80]
   140001ce3:	inc    rax
   140001ce6:	cmp    WORD PTR [rbx+rax*2],r9w
   140001ceb:	jne    0x140001ce3
   140001ced:	cmp    r8,rax
   140001cf0:	ja     0x140001d1a
   140001cf2:	add    r8,r8
   140001cf5:	mov    rdx,rbx
   140001cf8:	call   0x1400060b6
   140001cfd:	xor    r9d,r9d
   140001d00:	test   eax,eax
   140001d02:	mov    ecx,r9d
   140001d05:	sete   cl
   140001d08:	test   ecx,ecx
   140001d0a:	je     0x140001d1a
   140001d0c:	mov    eax,DWORD PTR [rip+0x831e]        # 0x14000a030
   140001d12:	lea    rbx,[rbx+rax*2]
   140001d16:	mov    QWORD PTR [rbp-0x80],rbx
   140001d1a:	mov    r15d,r9d
   140001d1d:	test   r12d,r12d
   140001d20:	je     0x140001d73
   140001d22:	mov    rbx,r13
   140001d25:	mov    rcx,QWORD PTR [rbx]
   140001d28:	test   rcx,rcx
   140001d2b:	je     0x140001fe3
   140001d31:	lea    r8,[rbp+0x28]
   140001d35:	xor    edx,edx
   140001d37:	call   QWORD PTR [rip+0x53cb]        # 0x140007108
   140001d3d:	xor    r9d,r9d
   140001d40:	test   eax,eax
   140001d42:	je     0x140001fc7
   140001d48:	cmp    DWORD PTR [rbp+0x44],r9d
   140001d4c:	jne    0x140001fbc
   140001d52:	mov    ecx,DWORD PTR [rbp+0x48]
   140001d55:	add    ecx,DWORD PTR [rsp+0x50]
   140001d59:	cmp    ecx,DWORD PTR [rsp+0x50]
   140001d5d:	jb     0x140001fb1
   140001d63:	inc    r15d
   140001d66:	mov    DWORD PTR [rsp+0x50],ecx
   140001d6a:	add    rbx,0x8
   140001d6e:	cmp    r15d,r12d
   140001d71:	jb     0x140001d25
   140001d73:	lea    rdx,[rbp-0x18]
   140001d77:	mov    QWORD PTR [rbp+0x10],r9
   140001d7b:	mov    ecx,0x60
   140001d80:	mov    QWORD PTR [rbp-0x18],r9
   140001d84:	call   0x140005058
   140001d89:	mov    r15,QWORD PTR [rbp-0x18]
   140001d8d:	xor    ebx,ebx
   140001d8f:	test   r15,r15
   140001d92:	je     0x140001e0b
   140001d94:	mov    r12,QWORD PTR [rip+0x896d]        # 0x14000a708
   140001d9b:	lea    eax,[rbx+0x1]
   140001d9e:	mov    DWORD PTR [r15+0x14],eax
   140001da2:	lea    rax,[rip+0x5e6f]        # 0x140007c18
   140001da9:	mov    QWORD PTR [r15],rax
   140001dac:	lea    rax,[rip+0x5e25]        # 0x140007bd8
   140001db3:	lea    rdi,[r15+0x8]
   140001db7:	mov    QWORD PTR [rdi],rax
   140001dba:	test   r12,r12
   140001dbd:	je     0x140001dd7
   140001dbf:	mov    rax,QWORD PTR [r12]
   140001dc3:	mov    rbx,QWORD PTR [rax+0x8]
   140001dc7:	mov    rcx,rbx
   140001dca:	call   QWORD PTR [rip+0x5670]        # 0x140007440
   140001dd0:	mov    rcx,r12
   140001dd3:	call   rbx
   140001dd5:	xor    ebx,ebx
   140001dd7:	lea    rax,[rip+0x5eda]        # 0x140007cb8
   140001dde:	mov    QWORD PTR [r15],rax
   140001de1:	lea    rax,[rip+0x5e90]        # 0x140007c78
   140001de8:	mov    QWORD PTR [rdi],rax
   140001deb:	mov    QWORD PTR [r15+0x18],rbx
   140001def:	mov    QWORD PTR [r15+0x20],rbx
   140001df3:	mov    QWORD PTR [r15+0x28],rbx
   140001df7:	mov    QWORD PTR [r15+0x30],rbx
   140001dfb:	mov    QWORD PTR [r15+0x38],rbx
   140001dff:	mov    QWORD PTR [r15+0x40],rbx
   140001e03:	mov    QWORD PTR [r15+0x48],rbx
   140001e07:	mov    DWORD PTR [r15+0x50],ebx
   140001e0b:	mov    rax,rdi
   140001e0e:	neg    rax
   140001e11:	sbb    r15d,r15d
   140001e14:	not    r15d
   140001e17:	and    r15d,0x8007000e
   140001e1e:	js     0x140002275
   140001e24:	lea    rax,[rbp-0x40]
   140001e28:	mov    DWORD PTR [rbp-0x40],0x4
   140001e2f:	mov    QWORD PTR [rsp+0x30],rax
   140001e34:	lea    r8,[rip+0x58d5]        # 0x140007710
   140001e3b:	lea    rax,[rbp-0x3c]
   140001e3f:	mov    r9d,0x20000010
   140001e45:	mov    QWORD PTR [rsp+0x28],rax
   140001e4a:	lea    rdx,[rip+0x591f]        # 0x140007770
   140001e51:	mov    rcx,0xffffffff80000002
   140001e58:	mov    QWORD PTR [rsp+0x20],rbx
   140001e5d:	call   QWORD PTR [rip+0x5385]        # 0x1400071e8
   140001e63:	mov    rax,QWORD PTR [rdi]
   140001e66:	mov    r15d,ebx
   140001e69:	cmp    DWORD PTR [rbp-0x3c],ebx
   140001e6c:	mov    r12d,0x1
   140001e72:	cmovne r15d,r12d
   140001e76:	mov    rbx,QWORD PTR [rax+0x18]
   140001e7a:	mov    rcx,rbx
   140001e7d:	call   QWORD PTR [rip+0x55bd]        # 0x140007440
   140001e83:	mov    r8,r14
   140001e86:	mov    edx,r15d
   140001e89:	mov    rcx,rdi
   140001e8c:	call   rbx
   140001e8e:	xor    ebx,ebx
   140001e90:	mov    r15d,eax
   140001e93:	test   eax,eax
   140001e95:	js     0x140002275
   140001e9b:	lea    rdx,[rbp-0x10]
   140001e9f:	mov    BYTE PTR [rsp+0x41],r12b
   140001ea4:	lea    rcx,[rbp-0x28]
   140001ea8:	call   0x140002928
   140001ead:	lea    rcx,[rbp+0x18]
   140001eb1:	cmp    rcx,rax
   140001eb4:	je     0x140001ebc
   140001eb6:	mov    rsi,QWORD PTR [rax]
   140001eb9:	mov    QWORD PTR [rax],rbx
   140001ebc:	mov    r15,QWORD PTR [rbp-0x28]
   140001ec0:	test   r15,r15
   140001ec3:	je     0x140001ee0
   140001ec5:	mov    QWORD PTR [rbp-0x28],rbx
   140001ec9:	mov    rax,QWORD PTR [r15]
   140001ecc:	mov    rbx,QWORD PTR [rax+0x10]
   140001ed0:	mov    rcx,rbx
   140001ed3:	call   QWORD PTR [rip+0x5567]        # 0x140007440
   140001ed9:	mov    rcx,r15
   140001edc:	call   rbx
   140001ede:	xor    ebx,ebx
   140001ee0:	test   rsi,rsi
   140001ee3:	je     0x14000226f
   140001ee9:	mov    rax,QWORD PTR [rdi]
   140001eec:	mov    rbx,QWORD PTR [rax+0x28]
   140001ef0:	mov    rcx,rbx
   140001ef3:	call   QWORD PTR [rip+0x5547]        # 0x140007440
   140001ef9:	lea    r9,[rsp+0x60]
   140001efe:	mov    r8,rsi
   140001f01:	lea    rdx,[rip+0x6030]        # 0x140007f38
   140001f08:	mov    rcx,rdi
   140001f0b:	call   rbx
   140001f0d:	xor    ebx,ebx
   140001f0f:	mov    r15d,eax
   140001f12:	test   eax,eax
   140001f14:	js     0x140002275
   140001f1a:	mov    r15,QWORD PTR [rsp+0x48]
   140001f1f:	test   r15,r15
   140001f22:	je     0x140001f40
   140001f24:	mov    QWORD PTR [rsp+0x48],rbx
   140001f29:	mov    rax,QWORD PTR [r15]
   140001f2c:	mov    rbx,QWORD PTR [rax+0x10]
   140001f30:	mov    rcx,rbx
   140001f33:	call   QWORD PTR [rip+0x5507]        # 0x140007440
   140001f39:	mov    rcx,r15
   140001f3c:	call   rbx
   140001f3e:	xor    ebx,ebx
   140001f40:	lea    rdx,[rbp-0x20]
   140001f44:	mov    QWORD PTR [rbp-0x20],rbx
   140001f48:	mov    ecx,0x40
   140001f4d:	call   0x140005058
   140001f52:	mov    rcx,QWORD PTR [rbp-0x20]
   140001f56:	test   rcx,rcx
   140001f59:	je     0x14000226f
   140001f5f:	call   0x140003e1c
   140001f64:	mov    r12,rax
   140001f67:	test   rax,rax
   140001f6a:	je     0x14000226f
   140001f70:	mov    rcx,QWORD PTR [rax]
   140001f73:	mov    rbx,QWORD PTR [rcx]
   140001f76:	mov    rcx,rbx
   140001f79:	call   QWORD PTR [rip+0x54c1]        # 0x140007440
   140001f7f:	lea    r8,[rsp+0x48]
   140001f84:	mov    rcx,r12
   140001f87:	lea    rdx,[rip+0x5fba]        # 0x140007f48
   140001f8e:	call   rbx
   140001f90:	mov    r15d,eax
   140001f93:	test   eax,eax
   140001f95:	mov    rax,QWORD PTR [r12]
   140001f99:	mov    rbx,QWORD PTR [rax+0x10]
   140001f9d:	mov    rcx,rbx
   140001fa0:	jns    0x140001ff0
   140001fa2:	call   QWORD PTR [rip+0x5498]        # 0x140007440
   140001fa8:	mov    rcx,r12
   140001fab:	call   rbx
   140001fad:	xor    ebx,ebx
   140001faf:	jmp    0x140002000
   140001fb1:	mov    r15d,0x80070216
   140001fb7:	jmp    0x140001b32
   140001fbc:	mov    r15d,0x800710f0
   140001fc2:	jmp    0x140001b32
   140001fc7:	call   QWORD PTR [rip+0x50eb]        # 0x1400070b8
   140001fcd:	movzx  r15d,ax
   140001fd1:	or     r15d,0x80070000
   140001fd8:	test   eax,eax
   140001fda:	cmovle r15d,eax
   140001fde:	jmp    0x140001b32
   140001fe3:	xor    ebx,ebx
   140001fe5:	mov    r15d,0x80070057
   140001feb:	jmp    0x140002275
   140001ff0:	call   QWORD PTR [rip+0x544a]        # 0x140007440
   140001ff6:	mov    rcx,r12
   140001ff9:	call   rbx
   140001ffb:	xor    ebx,ebx
   140001ffd:	mov    r15d,ebx
   140002000:	test   r15d,r15d
   140002003:	js     0x140002275
   140002009:	mov    rbx,QWORD PTR [rsp+0x48]
   14000200e:	mov    rax,QWORD PTR [rbx]
   140002011:	mov    r15,QWORD PTR [rax+0x18]
   140002015:	mov    rcx,r15
   140002018:	call   QWORD PTR [rip+0x5422]        # 0x140007440
   14000201e:	mov    edx,DWORD PTR [rsp+0x50]
   140002022:	mov    rcx,rbx
   140002025:	mov    r9d,DWORD PTR [rbp+0x2e8]
   14000202c:	mov    r8,QWORD PTR [rbp-0x38]
   140002030:	mov    DWORD PTR [rsp+0x20],edx
   140002034:	mov    rdx,r14
   140002037:	call   r15
   14000203a:	xor    ebx,ebx
   14000203c:	mov    r15d,eax
   14000203f:	test   eax,eax
   140002041:	js     0x140002275
   140002047:	mov    r12d,ebx
   14000204a:	cmp    DWORD PTR [rbp+0x2e8],ebx
   140002050:	jbe    0x140002169
   140002056:	mov    rcx,QWORD PTR [rip+0x7fdb]        # 0x14000a038
   14000205d:	or     rax,0xffffffffffffffff
   140002061:	mov    QWORD PTR [rsp+0x58],rbx
   140002066:	mov    r8,rax
   140002069:	mov    rbx,QWORD PTR [r13+0x0]
   14000206d:	xor    r14d,r14d
   140002070:	inc    r8
   140002073:	cmp    WORD PTR [rcx+r8*2],r14w
   140002078:	jne    0x140002070
   14000207a:	inc    rax
   14000207d:	cmp    WORD PTR [rbx+rax*2],r14w
   140002082:	jne    0x14000207a
   140002084:	cmp    r8,rax
   140002087:	ja     0x1400020aa
   140002089:	add    r8,r8
   14000208c:	mov    rdx,rbx
   14000208f:	call   0x1400060b6
   140002094:	test   eax,eax
   140002096:	mov    ecx,r14d
   140002099:	sete   cl
   14000209c:	test   ecx,ecx
   14000209e:	je     0x1400020aa
   1400020a0:	mov    eax,DWORD PTR [rip+0x7f8a]        # 0x14000a030
   1400020a6:	lea    rbx,[rbx+rax*2]
   1400020aa:	xor    r8d,r8d
   1400020ad:	lea    r9,[rsp+0x58]
   1400020b2:	mov    rcx,rbx
   1400020b5:	lea    edx,[r8+0x4]
   1400020b9:	call   QWORD PTR [rip+0x5369]        # 0x140007428
   1400020bf:	xor    ebx,ebx
   1400020c1:	mov    r15d,eax
   1400020c4:	test   eax,eax
   1400020c6:	js     0x140002242
   1400020cc:	mov    rdx,QWORD PTR [rsp+0x58]
   1400020d1:	lea    r9,[rbp+0x50]
   1400020d5:	mov    rcx,QWORD PTR [rbp-0x80]
   1400020d9:	call   0x140003c7c
   1400020de:	mov    r15d,eax
   1400020e1:	test   eax,eax
   1400020e3:	js     0x140002242
   1400020e9:	mov    r9,QWORD PTR [r13+0x0]
   1400020ed:	lea    r8,[rbp+0x50]
   1400020f1:	mov    rdx,QWORD PTR [rsp+0x48]
   1400020f6:	mov    rcx,rdi
   1400020f9:	call   0x140001744
   1400020fe:	cmp    eax,0x80020201
   140002103:	jne    0x1400021bd
   140002109:	test   DWORD PTR [rip+0x856d],0x400        # 0x14000a680
   140002113:	je     0x140002129
   140002115:	mov    r9,QWORD PTR [r13+0x0]
   140002119:	lea    rdx,[rip+0x57c8]        # 0x1400078e8
   140002120:	mov    r8,QWORD PTR [rbp-0x78]
   140002124:	call   0x1400012ec
   140002129:	mov    r15d,0x1
   14000212f:	mov    r14,QWORD PTR [rsp+0x58]
   140002134:	test   r14,r14
   140002137:	je     0x140002155
   140002139:	mov    QWORD PTR [rsp+0x58],rbx
   14000213e:	mov    rax,QWORD PTR [r14]
   140002141:	mov    rbx,QWORD PTR [rax+0x10]
   140002145:	mov    rcx,rbx
   140002148:	call   QWORD PTR [rip+0x52f2]        # 0x140007440
   14000214e:	mov    rcx,r14
   140002151:	call   rbx
   140002153:	xor    ebx,ebx
   140002155:	add    r12d,r15d
   140002158:	add    r13,0x8
   14000215c:	cmp    r12d,DWORD PTR [rbp+0x2e8]
   140002163:	jb     0x140002056
   140002169:	mov    rbx,QWORD PTR [rsp+0x48]
   14000216e:	mov    rax,QWORD PTR [rbx]
   140002171:	mov    r14,QWORD PTR [rax+0x28]
   140002175:	mov    rcx,r14
   140002178:	call   QWORD PTR [rip+0x52c2]        # 0x140007440
   14000217e:	mov    rcx,rbx
   140002181:	call   r14
   140002184:	xor    ebx,ebx
   140002186:	mov    r15d,eax
   140002189:	test   eax,eax
   14000218b:	js     0x140002275
   140002191:	mov    rax,QWORD PTR [rbp-0x80]
   140002195:	lea    rcx,[rsp+0x78]
   14000219a:	movzx  edx,WORD PTR [rax]
   14000219d:	call   0x140004d18
   1400021a2:	cmp    BYTE PTR [rsp+0x78],bl
   1400021a6:	je     0x1400021b5
   1400021a8:	mov    edx,DWORD PTR [rsp+0x7c]
   1400021ac:	mov    rcx,QWORD PTR [rbp-0x38]
   1400021b0:	call   0x140004de4
   1400021b5:	mov    r15d,ebx
   1400021b8:	jmp    0x140002275
   1400021bd:	cmp    eax,0x8007065e
   1400021c2:	jne    0x1400021f5
   1400021c4:	mov    r15d,0x1
   1400021ca:	add    DWORD PTR [rsp+0x44],r15d
   1400021cf:	test   BYTE PTR [rip+0x84aa],0x80        # 0x14000a680
   1400021d6:	je     0x14000212f
   1400021dc:	mov    r9,QWORD PTR [r13+0x0]
   1400021e0:	lea    rdx,[rip+0x59e1]        # 0x140007bc8
   1400021e7:	mov    r8,QWORD PTR [rbp-0x78]
   1400021eb:	call   0x1400012ec
   1400021f0:	jmp    0x14000212f
   1400021f5:	cmp    eax,0x80020101
   1400021fa:	jne    0x14000220c
   1400021fc:	mov    r15d,0x1
   140002202:	add    DWORD PTR [rsp+0x44],r15d
   140002207:	jmp    0x14000212f
   14000220c:	test   eax,eax
   14000220e:	jns    0x140002129
   140002214:	mov    r15d,0x1
   14000221a:	add    DWORD PTR [rsp+0x44],r15d
   14000221f:	test   BYTE PTR [rip+0x845a],0x80        # 0x14000a680
   140002226:	je     0x14000212f
   14000222c:	mov    r9,QWORD PTR [r13+0x0]
   140002230:	mov    r8,QWORD PTR [rbp-0x78]
   140002234:	mov    DWORD PTR [rsp+0x20],eax
   140002238:	call   0x140001214
   14000223d:	jmp    0x14000212f
   140002242:	mov    r14,QWORD PTR [rsp+0x58]
   140002247:	test   r14,r14
   14000224a:	je     0x140001b34
   140002250:	mov    QWORD PTR [rsp+0x58],rbx
   140002255:	mov    rax,QWORD PTR [r14]
   140002258:	mov    rbx,QWORD PTR [rax+0x10]
   14000225c:	mov    rcx,rbx
   14000225f:	call   QWORD PTR [rip+0x51db]        # 0x140007440
   140002265:	mov    rcx,r14
   140002268:	call   rbx
   14000226a:	jmp    0x140001b32
   14000226f:	mov    r15d,0x8007000e
   140002275:	mov    rcx,QWORD PTR [rbp-0x38]
   140002279:	call   QWORD PTR [rip+0x4e99]        # 0x140007118
   14000227f:	cmp    BYTE PTR [rsp+0x41],bl
   140002283:	je     0x1400022be
   140002285:	mov    r14d,DWORD PTR [rsp+0x60]
   14000228a:	test   r14d,r14d
   14000228d:	je     0x1400022a7
   14000228f:	mov    rax,QWORD PTR [rdi]
   140002292:	mov    rbx,QWORD PTR [rax+0x30]
   140002296:	mov    rcx,rbx
   140002299:	call   QWORD PTR [rip+0x51a1]        # 0x140007440
   14000229f:	mov    edx,r14d
   1400022a2:	mov    rcx,rdi
   1400022a5:	call   rbx
   1400022a7:	mov    rax,QWORD PTR [rdi]
   1400022aa:	mov    rbx,QWORD PTR [rax+0x20]
   1400022ae:	mov    rcx,rbx
   1400022b1:	call   QWORD PTR [rip+0x5189]        # 0x140007440
   1400022b7:	mov    rcx,rdi
   1400022ba:	call   rbx
   1400022bc:	xor    ebx,ebx
   1400022be:	test   r15d,r15d
   1400022c1:	js     0x1400022cd
   1400022c3:	mov    rcx,QWORD PTR [rbp+0x0]
   1400022c7:	mov    eax,DWORD PTR [rsp+0x44]
   1400022cb:	mov    DWORD PTR [rcx],eax
   1400022cd:	call   QWORD PTR [rip+0x4db5]        # 0x140007088
   1400022d3:	mov    rcx,QWORD PTR [rbp-0x30]
   1400022d7:	test   rcx,rcx
   1400022da:	je     0x140001b34
   1400022e0:	call   QWORD PTR [rip+0x5112]        # 0x1400073f8
   1400022e6:	test   eax,eax
   1400022e8:	jns    0x140001b34
   1400022ee:	mov    rcx,QWORD PTR [rip+0x7d93]        # 0x14000a088
   1400022f5:	lea    rdx,[rip+0x7d8c]        # 0x14000a088
   1400022fc:	cmp    rcx,rdx
   1400022ff:	je     0x140001b34
   140002305:	test   BYTE PTR [rcx+0x44],0x1
   140002309:	je     0x140001b34
   14000230f:	cmp    BYTE PTR [rcx+0x41],0x2
   140002313:	jb     0x140001b34
   140002319:	mov    rcx,QWORD PTR [rcx+0x38]
   14000231d:	mov    r9d,eax
   140002320:	call   0x140001584
   140002325:	jmp    0x140001b34
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    QWORD PTR [rsp+0x8],rbx
   140002335:	push   rbp
   140002336:	push   rsi
   140002337:	push   rdi
   140002338:	lea    rbp,[rsp-0x1b0]
   140002340:	sub    rsp,0x2b0
   140002347:	mov    rax,QWORD PTR [rip+0x7cba]        # 0x14000a008
   14000234e:	xor    rax,rsp
   140002351:	mov    QWORD PTR [rbp+0x1a0],rax
   140002358:	movups xmm0,XMMWORD PTR [rip+0x54d1]        # 0x140007830
   14000235f:	mov    eax,DWORD PTR [rip+0x54fb]        # 0x140007860
   140002365:	lea    rcx,[rbp-0x60]
   140002369:	movups xmm1,XMMWORD PTR [rip+0x54d0]        # 0x140007840
   140002370:	and    QWORD PTR [rsp+0x40],0x0
   140002376:	mov    rsi,r8
   140002379:	and    QWORD PTR [rsp+0x48],0x0
   14000237f:	lea    r8,[rsp+0x68]
   140002384:	movups XMMWORD PTR [rsp+0x68],xmm0
   140002389:	mov    DWORD PTR [rbp-0x68],eax
   14000238c:	mov    edx,0x100
   140002391:	movups xmm0,XMMWORD PTR [rip+0x54b8]        # 0x140007850
   140002398:	movzx  eax,WORD PTR [rip+0x54c5]        # 0x140007864
   14000239f:	xor    ebx,ebx
   1400023a1:	movups XMMWORD PTR [rsp+0x78],xmm1
   1400023a6:	mov    WORD PTR [rbp-0x64],ax
   1400023aa:	movups XMMWORD PTR [rbp-0x78],xmm0
   1400023ae:	call   0x140001008
   1400023b3:	mov    edi,eax
   1400023b5:	test   eax,eax
   1400023b7:	js     0x1400024c1
   1400023bd:	lea    r9,[rsp+0x50]
   1400023c2:	lea    r8,[rsp+0x48]
   1400023c7:	lea    edx,[rbx+0x1]
   1400023ca:	lea    rcx,[rbp-0x60]
   1400023ce:	call   QWORD PTR [rip+0x4efc]        # 0x1400072d0
   1400023d4:	test   eax,eax
   1400023d6:	jne    0x1400023e3
   1400023d8:	call   QWORD PTR [rip+0x4cda]        # 0x1400070b8
   1400023de:	jmp    0x1400024bf
   1400023e3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400023e8:	lea    rcx,[rip+0x7c31]        # 0x14000a020
   1400023ef:	xor    r8d,r8d
   1400023f2:	mov    DWORD PTR [rsp+0x58],0x1
   1400023fa:	mov    r9,rbx
   1400023fd:	mov    QWORD PTR [rsp+0x60],rsi
   140002402:	mov    QWORD PTR [rip+0x82f7],rsi        # 0x14000a700
   140002409:	lea    edx,[r8+0xa]
   14000240d:	call   QWORD PTR [rip+0x4c35]        # 0x140007048
   140002413:	mov    edi,eax
   140002415:	test   eax,eax
   140002417:	jne    0x1400024c1
   14000241d:	mov    rax,QWORD PTR [rsp+0x48]
   140002422:	lea    r9d,[rdi+0x1]
   140002426:	mov    QWORD PTR [rsp+0x38],rax
   14000242b:	lea    rcx,[rip+0x5d9e]        # 0x1400081d0
   140002432:	and    QWORD PTR [rsp+0x30],0x0
   140002438:	xor    r8d,r8d
   14000243b:	or     DWORD PTR [rsp+0x28],0xffffffff
   140002440:	mov    rdx,rsi
   140002443:	mov    DWORD PTR [rsp+0x20],0x4d2
   14000244b:	call   QWORD PTR [rip+0x4bc7]        # 0x140007018
   140002451:	mov    edi,eax
   140002453:	test   eax,eax
   140002455:	jne    0x1400024c1
   140002457:	mov    rdx,rsi
   14000245a:	mov    rcx,rsi
   14000245d:	call   QWORD PTR [rip+0x4bad]        # 0x140007010
   140002463:	mov    edi,eax
   140002465:	test   eax,eax
   140002467:	jne    0x1400024c1
   140002469:	lea    rcx,[rsp+0x40]
   14000246e:	call   QWORD PTR [rip+0x4bbc]        # 0x140007030
   140002474:	mov    edi,eax
   140002476:	test   eax,eax
   140002478:	jne    0x1400024c1
   14000247a:	mov    rdx,QWORD PTR [rsp+0x40]
   14000247f:	lea    r8,[rsp+0x58]
   140002484:	xor    r9d,r9d
   140002487:	lea    rcx,[rip+0x5d42]        # 0x1400081d0
   14000248e:	call   QWORD PTR [rip+0x4b94]        # 0x140007028
   140002494:	mov    edi,eax
   140002496:	test   eax,eax
   140002498:	jne    0x1400024c1
   14000249a:	cmp    QWORD PTR [rsp+0x40],0x0
   1400024a0:	je     0x1400024ad
   1400024a2:	lea    rcx,[rsp+0x40]
   1400024a7:	call   QWORD PTR [rip+0x4bbb]        # 0x140007068
   1400024ad:	xor    r8d,r8d
   1400024b0:	mov    edx,0x4d2
   1400024b5:	lea    ecx,[r8+0x1]
   1400024b9:	call   QWORD PTR [rip+0x4ba1]        # 0x140007060
   1400024bf:	mov    edi,eax
   1400024c1:	test   rbx,rbx
   1400024c4:	je     0x1400024cf
   1400024c6:	mov    rcx,rbx
   1400024c9:	call   QWORD PTR [rip+0x4d79]        # 0x140007248
   1400024cf:	mov    eax,edi
   1400024d1:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400024d8:	xor    rcx,rsp
   1400024db:	call   0x140005910
   1400024e0:	mov    rbx,QWORD PTR [rsp+0x2d0]
   1400024e8:	add    rsp,0x2b0
   1400024ef:	pop    rdi
   1400024f0:	pop    rsi
   1400024f1:	pop    rbp
   1400024f2:	ret    
   1400024f3:	int3   
   1400024f4:	int3   
   1400024f5:	int3   
   1400024f6:	int3   
   1400024f7:	int3   
   1400024f8:	int3   
   1400024f9:	int3   
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	rex push rbx
   1400024fe:	sub    rsp,0xa0
   140002505:	mov    rax,QWORD PTR [rip+0x7afc]        # 0x14000a008
   14000250c:	xor    rax,rsp
   14000250f:	mov    QWORD PTR [rsp+0x90],rax
   140002517:	and    QWORD PTR [rsp+0x38],0x0
   14000251d:	mov    rbx,rcx
   140002520:	mov    DWORD PTR [rsp+0x30],0x4c
   140002528:	call   QWORD PTR [rip+0x4c62]        # 0x140007190
   14000252e:	lea    r8,[rsp+0x38]
   140002533:	mov    edx,0x8
   140002538:	mov    rcx,rax
   14000253b:	call   QWORD PTR [rip+0x4c6f]        # 0x1400071b0
   140002541:	test   eax,eax
   140002543:	je     0x14000256d
   140002545:	mov    r9d,DWORD PTR [rsp+0x30]
   14000254a:	lea    rax,[rsp+0x30]
   14000254f:	mov    rcx,QWORD PTR [rsp+0x38]
   140002554:	lea    r8,[rsp+0x40]
   140002559:	mov    edx,0x1f
   14000255e:	mov    QWORD PTR [rsp+0x20],rax
   140002563:	call   QWORD PTR [rip+0x4d47]        # 0x1400072b0
   140002569:	test   eax,eax
   14000256b:	jne    0x140002583
   14000256d:	call   QWORD PTR [rip+0x4b45]        # 0x1400070b8
   140002573:	movzx  ebx,ax
   140002576:	or     ebx,0x80070000
   14000257c:	test   eax,eax
   14000257e:	cmovle ebx,eax
   140002581:	jmp    0x140002598
   140002583:	mov    rcx,QWORD PTR [rsp+0x40]
   140002588:	mov    rdx,rbx
   14000258b:	call   0x140004ff0
   140002590:	mov    ebx,eax
   140002592:	test   eax,eax
   140002594:	js     0x140002598
   140002596:	xor    ebx,ebx
   140002598:	mov    rcx,QWORD PTR [rsp+0x38]
   14000259d:	lea    rdx,[rcx-0x1]
   1400025a1:	cmp    rdx,0xfffffffffffffffd
   1400025a5:	ja     0x1400025ad
   1400025a7:	call   QWORD PTR [rip+0x4b6b]        # 0x140007118
   1400025ad:	mov    eax,ebx
   1400025af:	mov    rcx,QWORD PTR [rsp+0x90]
   1400025b7:	xor    rcx,rsp
   1400025ba:	call   0x140005910
   1400025bf:	add    rsp,0xa0
   1400025c6:	pop    rbx
   1400025c7:	ret    
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    r11,rsp
   1400025d3:	mov    QWORD PTR [r11+0x18],rbx
   1400025d7:	mov    QWORD PTR [r11+0x20],rbp
   1400025db:	push   rsi
   1400025dc:	push   rdi
   1400025dd:	push   r14
   1400025df:	sub    rsp,0x80
   1400025e6:	mov    rax,QWORD PTR [rip+0x7a1b]        # 0x14000a008
   1400025ed:	xor    rax,rsp
   1400025f0:	mov    QWORD PTR [rsp+0x78],rax
   1400025f5:	xor    ebp,ebp
   1400025f7:	mov    QWORD PTR [r11-0x50],rbp
   1400025fb:	mov    esi,ebp
   1400025fd:	mov    DWORD PTR [rsp+0x40],ebp
   140002601:	mov    DWORD PTR [rsp+0x50],ebp
   140002605:	test   ecx,ecx
   140002607:	jle    0x140002766
   14000260d:	movsxd rax,ecx
   140002610:	mov    rcx,QWORD PTR [rdx+rax*8-0x8]
   140002615:	test   rcx,rcx
   140002618:	je     0x140002766
   14000261e:	cmp    WORD PTR [rcx],bp
   140002621:	je     0x140002766
   140002627:	lea    rdx,[r11-0x30]
   14000262b:	call   QWORD PTR [rip+0x49ef]        # 0x140007020
   140002631:	mov    edi,eax
   140002633:	test   eax,eax
   140002635:	jne    0x14000276b
   14000263b:	lea    rcx,[rsp+0x40]
   140002640:	call   0x1400024fc
   140002645:	mov    edi,eax
   140002647:	test   eax,eax
   140002649:	jns    0x140002655
   14000264b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002650:	jmp    0x14000276b
   140002655:	call   0x1400011ac
   14000265a:	lea    rax,[rip+0x8067]        # 0x14000a6c8
   140002661:	mov    QWORD PTR [rip+0x8048],rbp        # 0x14000a6b0
   140002668:	mov    QWORD PTR [rip+0x8031],rax        # 0x14000a6a0
   14000266f:	lea    rbx,[rip+0x802a]        # 0x14000a6a0
   140002676:	lea    rax,[rip+0x529b]        # 0x140007918
   14000267d:	mov    QWORD PTR [rip+0x8030],0x1        # 0x14000a6b8
   140002688:	mov    QWORD PTR [rip+0x8061],rax        # 0x14000a6f0
   14000268f:	lea    rdi,[rip+0x805a]        # 0x14000a6f0
   140002696:	lea    rax,[rip+0x525b]        # 0x1400078f8
   14000269d:	mov    QWORD PTR [rip+0x8034],rbp        # 0x14000a6d8
   1400026a4:	mov    QWORD PTR [rip+0x804d],rax        # 0x14000a6f8
   1400026ab:	mov    QWORD PTR [rip+0x8016],rbp        # 0x14000a6c8
   1400026b2:	mov    QWORD PTR [rip+0x8023],0x1        # 0x14000a6e0
   1400026bd:	mov    QWORD PTR [rip+0x79c4],rbx        # 0x14000a088
   1400026c4:	mov    r8,QWORD PTR [rdi]
   1400026c7:	lea    rax,[rbx+0x8]
   1400026cb:	mov    QWORD PTR [rsp+0x38],rax
   1400026d0:	lea    rcx,[rip+0xffffffffffffeef9]        # 0x1400015d0
   1400026d7:	mov    QWORD PTR [rsp+0x30],rbp
   1400026dc:	lea    rax,[rsp+0x58]
   1400026e1:	mov    QWORD PTR [rsp+0x58],r8
   1400026e6:	lea    rdi,[rdi+0x8]
   1400026ea:	mov    QWORD PTR [rsp+0x60],rbp
   1400026ef:	mov    r9d,0x1
   1400026f5:	mov    QWORD PTR [rsp+0x28],rbp
   1400026fa:	mov    rdx,rbx
   1400026fd:	mov    QWORD PTR [rsp+0x20],rax
   140002702:	mov    QWORD PTR [rbx+0x20],r8
   140002706:	call   QWORD PTR [rip+0x4b4c]        # 0x140007258
   14000270c:	mov    rbx,QWORD PTR [rbx]
   14000270f:	test   rbx,rbx
   140002712:	jne    0x1400026c4
   140002714:	mov    rsi,QWORD PTR [rsp+0x48]
   140002719:	lea    r8,[rsp+0x68]
   14000271e:	mov    r9,rsi
   140002721:	call   0x140002330
   140002726:	mov    rbx,QWORD PTR [rip+0x795b]        # 0x14000a088
   14000272d:	lea    r14,[rip+0x7954]        # 0x14000a088
   140002734:	mov    edi,eax
   140002736:	cmp    rbx,r14
   140002739:	je     0x14000275f
   14000273b:	jmp    0x140002753
   14000273d:	mov    rcx,QWORD PTR [rbx+0x8]
   140002741:	test   rcx,rcx
   140002744:	je     0x140002750
   140002746:	call   QWORD PTR [rip+0x4b2c]        # 0x140007278
   14000274c:	mov    QWORD PTR [rbx+0x8],rbp
   140002750:	mov    rbx,QWORD PTR [rbx]
   140002753:	test   rbx,rbx
   140002756:	jne    0x14000273d
   140002758:	mov    QWORD PTR [rip+0x7929],r14        # 0x14000a088
   14000275f:	call   0x1400011e4
   140002764:	jmp    0x14000276b
   140002766:	mov    edi,0x57
   14000276b:	test   rsi,rsi
   14000276e:	je     0x140002782
   140002770:	mov    rcx,QWORD PTR [rip+0x7fa1]        # 0x14000a718
   140002777:	mov    r8,rsi
   14000277a:	xor    edx,edx
   14000277c:	call   QWORD PTR [rip+0x4c16]        # 0x140007398
   140002782:	mov    eax,edi
   140002784:	mov    rcx,QWORD PTR [rsp+0x78]
   140002789:	xor    rcx,rsp
   14000278c:	call   0x140005910
   140002791:	lea    r11,[rsp+0x80]
   140002799:	mov    rbx,QWORD PTR [r11+0x30]
   14000279d:	mov    rbp,QWORD PTR [r11+0x38]
   1400027a1:	mov    rsp,r11
   1400027a4:	pop    r14
   1400027a6:	pop    rdi
   1400027a7:	pop    rsi
   1400027a8:	ret    
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400027ba:	push   rdi
   1400027bb:	sub    rsp,0x20
   1400027bf:	xor    edi,edi
   1400027c1:	mov    rsi,rcx
   1400027c4:	mov    QWORD PTR [r8],rdi
   1400027c7:	cmp    DWORD PTR [rdx],edi
   1400027c9:	jne    0x1400027ec
   1400027cb:	mov    eax,DWORD PTR [rip+0x510b]        # 0x1400078dc
   1400027d1:	cmp    DWORD PTR [rdx+0x4],eax
   1400027d4:	jne    0x1400027ec
   1400027d6:	mov    eax,DWORD PTR [rip+0x5104]        # 0x1400078e0
   1400027dc:	cmp    DWORD PTR [rdx+0x8],eax
   1400027df:	jne    0x1400027ec
   1400027e1:	mov    eax,DWORD PTR [rip+0x50fd]        # 0x1400078e4
   1400027e7:	cmp    DWORD PTR [rdx+0xc],eax
   1400027ea:	je     0x140002815
   1400027ec:	cmp    DWORD PTR [rdx],0x56c25c53
   1400027f2:	jne    0x14000282f
   1400027f4:	mov    eax,DWORD PTR [rip+0x517a]        # 0x140007974
   1400027fa:	cmp    DWORD PTR [rdx+0x4],eax
   1400027fd:	jne    0x14000282f
   1400027ff:	mov    eax,DWORD PTR [rip+0x5173]        # 0x140007978
   140002805:	cmp    DWORD PTR [rdx+0x8],eax
   140002808:	jne    0x14000282f
   14000280a:	mov    eax,DWORD PTR [rip+0x516c]        # 0x14000797c
   140002810:	cmp    DWORD PTR [rdx+0xc],eax
   140002813:	jne    0x14000282f
   140002815:	mov    QWORD PTR [r8],rcx
   140002818:	mov    rax,QWORD PTR [rcx]
   14000281b:	mov    rbx,QWORD PTR [rax+0x8]
   14000281f:	mov    rcx,rbx
   140002822:	call   QWORD PTR [rip+0x4c18]        # 0x140007440
   140002828:	mov    rcx,rsi
   14000282b:	call   rbx
   14000282d:	jmp    0x140002834
   14000282f:	mov    edi,0x80004002
   140002834:	mov    rbx,QWORD PTR [rsp+0x30]
   140002839:	mov    eax,edi
   14000283b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002840:	add    rsp,0x20
   140002844:	pop    rdi
   140002845:	ret    
   140002846:	int3   
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	mov    eax,0x1
   140002855:	lock xadd DWORD PTR [rcx+0xc],eax
   14000285a:	inc    eax
   14000285c:	ret    
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	int3   
   140002861:	int3   
   140002862:	int3   
   140002863:	int3   
   140002864:	int3   
   140002865:	int3   
   140002866:	int3   
   140002867:	int3   
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	mov    QWORD PTR [rsp+0x8],rbx
   140002875:	mov    QWORD PTR [rsp+0x10],rsi
   14000287a:	push   rdi
   14000287b:	sub    rsp,0x20
   14000287f:	mov    rsi,rcx
   140002882:	or     edi,0xffffffff
   140002885:	lock xadd DWORD PTR [rcx+0xc],edi
   14000288a:	sub    edi,0x1
   14000288d:	jne    0x1400028cd
   14000288f:	test   rcx,rcx
   140002892:	je     0x1400028ac
   140002894:	mov    rax,QWORD PTR [rcx]
   140002897:	mov    rbx,QWORD PTR [rax+0x20]
   14000289b:	mov    rcx,rbx
   14000289e:	call   QWORD PTR [rip+0x4b9c]        # 0x140007440
   1400028a4:	lea    edx,[rdi+0x1]
   1400028a7:	mov    rcx,rsi
   1400028aa:	call   rbx
   1400028ac:	mov    rsi,QWORD PTR [rip+0x7e55]        # 0x14000a708
   1400028b3:	test   rsi,rsi
   1400028b6:	je     0x1400028cd
   1400028b8:	mov    rdx,QWORD PTR [rsi]
   1400028bb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400028bf:	mov    rcx,rbx
   1400028c2:	call   QWORD PTR [rip+0x4b78]        # 0x140007440
   1400028c8:	mov    rcx,rsi
   1400028cb:	call   rbx
   1400028cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028d2:	mov    eax,edi
   1400028d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400028d9:	add    rsp,0x20
   1400028dd:	pop    rdi
   1400028de:	ret    
   1400028df:	int3   
   1400028e0:	int3   
   1400028e1:	int3   
   1400028e2:	int3   
   1400028e3:	int3   
   1400028e4:	int3   
   1400028e5:	int3   
   1400028e6:	int3   
   1400028e7:	int3   
   1400028e8:	int3   
   1400028e9:	int3   
   1400028ea:	int3   
   1400028eb:	int3   
   1400028ec:	int3   
   1400028ed:	int3   
   1400028ee:	int3   
   1400028ef:	int3   
   1400028f0:	rex push rbx
   1400028f2:	sub    rsp,0x20
   1400028f6:	mov    DWORD PTR [rcx+0xc],0xc0000001
   1400028fd:	mov    rbx,rcx
   140002900:	test   dl,0x1
   140002903:	je     0x140002917
   140002905:	mov    r8,rcx
   140002908:	xor    edx,edx
   14000290a:	mov    rcx,QWORD PTR [rip+0x7e07]        # 0x14000a718
   140002911:	call   QWORD PTR [rip+0x4a81]        # 0x140007398
   140002917:	mov    rax,rbx
   14000291a:	add    rsp,0x20
   14000291e:	pop    rbx
   14000291f:	ret    
   140002920:	int3   
   140002921:	int3   
   140002922:	int3   
   140002923:	int3   
   140002924:	int3   
   140002925:	int3   
   140002926:	int3   
   140002927:	int3   
   140002928:	mov    rax,rsp
   14000292b:	mov    QWORD PTR [rax+0x10],rbx
   14000292f:	mov    QWORD PTR [rax+0x18],rbp
   140002933:	push   rsi
   140002934:	push   rdi
   140002935:	push   r14
   140002937:	sub    rsp,0x20
   14000293b:	and    QWORD PTR [rcx],0x0
   14000293f:	mov    rbp,rdx
   140002942:	and    QWORD PTR [rax+0x8],0x0
   140002947:	lea    rdx,[rax+0x8]
   14000294b:	mov    rsi,rcx
   14000294e:	mov    ecx,0x18
   140002953:	call   0x140005058
   140002958:	mov    rdi,QWORD PTR [rsp+0x40]
   14000295d:	test   rdi,rdi
   140002960:	je     0x1400029c6
   140002962:	mov    rbp,QWORD PTR [rbp+0x0]
   140002966:	lea    rax,[rip+0x4efb]        # 0x140007868
   14000296d:	mov    r14,QWORD PTR [rip+0x7d94]        # 0x14000a708
   140002974:	mov    DWORD PTR [rdi+0xc],0x1
   14000297b:	mov    QWORD PTR [rdi],rax
   14000297e:	test   r14,r14
   140002981:	je     0x140002998
   140002983:	mov    rax,QWORD PTR [r14]
   140002986:	mov    rbx,QWORD PTR [rax+0x8]
   14000298a:	mov    rcx,rbx
   14000298d:	call   QWORD PTR [rip+0x4aad]        # 0x140007440
   140002993:	mov    rcx,r14
   140002996:	call   rbx
   140002998:	lea    rax,[rip+0x4f99]        # 0x140007938
   14000299f:	mov    QWORD PTR [rdi+0x10],rbp
   1400029a3:	mov    QWORD PTR [rdi],rax
   1400029a6:	mov    r14,QWORD PTR [rsi]
   1400029a9:	test   r14,r14
   1400029ac:	je     0x1400029c3
   1400029ae:	mov    rax,QWORD PTR [r14]
   1400029b1:	mov    rbx,QWORD PTR [rax+0x10]
   1400029b5:	mov    rcx,rbx
   1400029b8:	call   QWORD PTR [rip+0x4a82]        # 0x140007440
   1400029be:	mov    rcx,r14
   1400029c1:	call   rbx
   1400029c3:	mov    QWORD PTR [rsi],rdi
   1400029c6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400029cb:	mov    rax,rsi
   1400029ce:	mov    rbp,QWORD PTR [rsp+0x50]
   1400029d3:	add    rsp,0x20
   1400029d7:	pop    r14
   1400029d9:	pop    rdi
   1400029da:	pop    rsi
   1400029db:	ret    
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	int3   
   1400029e1:	int3   
   1400029e2:	int3   
   1400029e3:	int3   
   1400029e4:	int3   
   1400029e5:	int3   
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	mov    rax,QWORD PTR [rsp+0x28]
   1400029f5:	test   rax,rax
   1400029f8:	je     0x1400029fe
   1400029fa:	and    QWORD PTR [rax],0x0
   1400029fe:	test   r9,r9
   140002a01:	je     0x140002a07
   140002a03:	and    QWORD PTR [r9],0x0
   140002a07:	mov    eax,0x8002802b
   140002a0c:	ret    
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	int3   
   140002a11:	int3   
   140002a12:	int3   
   140002a13:	int3   
   140002a14:	int3   
   140002a15:	int3   
   140002a16:	int3   
   140002a17:	int3   
   140002a18:	int3   
   140002a19:	int3   
   140002a1a:	int3   
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	mov    eax,0x80004001
   140002a25:	ret    
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	sub    rsp,0x48
   140002a30:	xor    r8d,r8d
   140002a33:	test   r9,r9
   140002a36:	je     0x140002a5c
   140002a38:	cmp    WORD PTR [r9],r8w
   140002a3c:	jne    0x140002a44
   140002a3e:	lea    eax,[r8+0xe]
   140002a42:	jmp    0x140002a61
   140002a44:	or     rax,0xffffffffffffffff
   140002a48:	inc    rax
   140002a4b:	cmp    WORD PTR [r9+rax*2],r8w
   140002a50:	jne    0x140002a48
   140002a52:	lea    rax,[rax*2+0x2]
   140002a5a:	jmp    0x140002a61
   140002a5c:	mov    eax,0xa
   140002a61:	test   r9,r9
   140002a64:	je     0x140002a77
   140002a66:	cmp    WORD PTR [r9],r8w
   140002a6a:	lea    rdx,[rip+0x5407]        # 0x140007e78
   140002a71:	cmove  r9,rdx
   140002a75:	jmp    0x140002a7e
   140002a77:	lea    r9,[rip+0x4bb2]        # 0x140007630
   140002a7e:	mov    QWORD PTR [rsp+0x30],r8
   140002a83:	mov    edx,0xc
   140002a88:	mov    QWORD PTR [rsp+0x28],rax
   140002a8d:	lea    r8,[rip+0x5494]        # 0x140007f28
   140002a94:	mov    QWORD PTR [rsp+0x20],r9
   140002a99:	movzx  r9d,dx
   140002a9d:	mov    edx,0x2b
   140002aa2:	call   QWORD PTR [rip+0x47c8]        # 0x140007270
   140002aa8:	add    rsp,0x48
   140002aac:	ret    
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	int3   
   140002ab1:	int3   
   140002ab2:	int3   
   140002ab3:	int3   
   140002ab4:	mov    QWORD PTR [rsp+0x8],rbx
   140002ab9:	mov    QWORD PTR [rsp+0x10],rsi
   140002abe:	mov    QWORD PTR [rsp+0x18],rdi
   140002ac3:	push   r14
   140002ac5:	sub    rsp,0x80
   140002acc:	mov    rdx,QWORD PTR [rsp+0xb8]
   140002ad4:	mov    esi,0xa
   140002ad9:	or     r8,0xffffffffffffffff
   140002add:	xor    edi,edi
   140002adf:	mov    rbx,rcx
   140002ae2:	lea    r10d,[rsi+0x4]
   140002ae6:	test   rdx,rdx
   140002ae9:	je     0x140002b0b
   140002aeb:	cmp    WORD PTR [rdx],di
   140002aee:	jne    0x140002af5
   140002af0:	mov    r11d,r10d
   140002af3:	jmp    0x140002b0e
   140002af5:	mov    rax,r8
   140002af8:	inc    rax
   140002afb:	cmp    WORD PTR [rdx+rax*2],di
   140002aff:	jne    0x140002af8
   140002b01:	lea    r11,[rax*2+0x2]
   140002b09:	jmp    0x140002b0e
   140002b0b:	mov    r11,rsi
   140002b0e:	lea    r14,[rip+0x5363]        # 0x140007e78
   140002b15:	test   rdx,rdx
   140002b18:	je     0x140002b23
   140002b1a:	cmp    WORD PTR [rdx],di
   140002b1d:	cmove  rdx,r14
   140002b21:	jmp    0x140002b2a
   140002b23:	lea    rdx,[rip+0x4b06]        # 0x140007630
   140002b2a:	mov    rax,QWORD PTR [rsp+0xb0]
   140002b32:	test   rax,rax
   140002b35:	je     0x140002b57
   140002b37:	cmp    WORD PTR [rax],di
   140002b3a:	jne    0x140002b41
   140002b3c:	mov    rcx,r10
   140002b3f:	jmp    0x140002b5a
   140002b41:	mov    rcx,r8
   140002b44:	inc    rcx
   140002b47:	cmp    WORD PTR [rax+rcx*2],di
   140002b4b:	jne    0x140002b44
   140002b4d:	lea    rcx,[rcx*2+0x2]
   140002b55:	jmp    0x140002b5a
   140002b57:	mov    rcx,rsi
   140002b5a:	test   rax,rax
   140002b5d:	je     0x140002b68
   140002b5f:	cmp    WORD PTR [rax],di
   140002b62:	cmove  rax,r14
   140002b66:	jmp    0x140002b6f
   140002b68:	lea    rax,[rip+0x4ac1]        # 0x140007630
   140002b6f:	test   r9,r9
   140002b72:	je     0x140002b8e
   140002b74:	cmp    WORD PTR [r9],di
   140002b78:	je     0x140002b91
   140002b7a:	inc    r8
   140002b7d:	cmp    WORD PTR [r9+r8*2],di
   140002b82:	jne    0x140002b7a
   140002b84:	lea    r10,[r8*2+0x2]
   140002b8c:	jmp    0x140002b91
   140002b8e:	mov    r10,rsi
   140002b91:	test   r9,r9
   140002b94:	je     0x140002ba0
   140002b96:	cmp    WORD PTR [r9],di
   140002b9a:	cmove  r9,r14
   140002b9e:	jmp    0x140002ba7
   140002ba0:	lea    r9,[rip+0x4a89]        # 0x140007630
   140002ba7:	mov    QWORD PTR [rsp+0x70],rdi
   140002bac:	lea    r8,[rsp+0xc8]
   140002bb4:	mov    esi,0xb
   140002bb9:	lea    edi,[rsi-0x7]
   140002bbc:	mov    QWORD PTR [rsp+0x68],rdi
   140002bc1:	mov    QWORD PTR [rsp+0x60],r8
   140002bc6:	lea    r8,[rsp+0xc0]
   140002bce:	mov    QWORD PTR [rsp+0x58],rdi
   140002bd3:	mov    QWORD PTR [rsp+0x50],r8
   140002bd8:	lea    r8,[rip+0x5349]        # 0x140007f28
   140002bdf:	mov    QWORD PTR [rsp+0x48],r11
   140002be4:	mov    QWORD PTR [rsp+0x40],rdx
   140002be9:	lea    edx,[rsi+0x20]
   140002bec:	mov    QWORD PTR [rsp+0x38],rcx
   140002bf1:	mov    rcx,rbx
   140002bf4:	mov    QWORD PTR [rsp+0x30],rax
   140002bf9:	mov    QWORD PTR [rsp+0x28],r10
   140002bfe:	mov    QWORD PTR [rsp+0x20],r9
   140002c03:	movzx  r9d,si
   140002c07:	call   QWORD PTR [rip+0x4663]        # 0x140007270
   140002c0d:	lea    r11,[rsp+0x80]
   140002c15:	mov    rbx,QWORD PTR [r11+0x10]
   140002c19:	mov    rsi,QWORD PTR [r11+0x18]
   140002c1d:	mov    rdi,QWORD PTR [r11+0x20]
   140002c21:	mov    rsp,r11
   140002c24:	pop    r14
   140002c26:	ret    
   140002c27:	int3   
   140002c28:	int3   
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    QWORD PTR [rsp+0x8],rbx
   140002c35:	mov    QWORD PTR [rsp+0x10],rsi
   140002c3a:	mov    QWORD PTR [rsp+0x18],rdi
   140002c3f:	push   r14
   140002c41:	sub    rsp,0x20
   140002c45:	mov    rdi,rcx
   140002c48:	mov    rcx,QWORD PTR [rcx+0x8]
   140002c4c:	test   rcx,rcx
   140002c4f:	je     0x140002c57
   140002c51:	call   QWORD PTR [rip+0x43a9]        # 0x140007000
   140002c57:	mov    rcx,QWORD PTR [rdi+0x10]
   140002c5b:	test   rcx,rcx
   140002c5e:	je     0x140002c66
   140002c60:	call   QWORD PTR [rip+0x439a]        # 0x140007000
   140002c66:	mov    rcx,QWORD PTR [rdi+0x18]
   140002c6a:	test   rcx,rcx
   140002c6d:	je     0x140002c75
   140002c6f:	call   QWORD PTR [rip+0x438b]        # 0x140007000
   140002c75:	xor    edx,edx
   140002c77:	mov    rcx,rdi
   140002c7a:	lea    r8d,[rdx+0x40]
   140002c7e:	call   0x1400060ce
   140002c83:	mov    rcx,QWORD PTR [rdi+0x50]
   140002c87:	call   QWORD PTR [rip+0x440b]        # 0x140007098
   140002c8d:	xor    esi,esi
   140002c8f:	cmp    DWORD PTR [rdi+0x58],esi
   140002c92:	jbe    0x140002cd3
   140002c94:	mov    rcx,QWORD PTR [rdi+0x60]
   140002c98:	mov    ebx,esi
   140002c9a:	shl    rbx,0x5
   140002c9e:	mov    rcx,QWORD PTR [rcx+rbx*1+0x8]
   140002ca3:	call   QWORD PTR [rip+0x43ef]        # 0x140007098
   140002ca9:	mov    rax,QWORD PTR [rdi+0x60]
   140002cad:	mov    r14,QWORD PTR [rax+rbx*1+0x18]
   140002cb2:	test   r14,r14
   140002cb5:	je     0x140002ccc
   140002cb7:	mov    rax,QWORD PTR [r14]
   140002cba:	mov    rbx,QWORD PTR [rax+0x10]
   140002cbe:	mov    rcx,rbx
   140002cc1:	call   QWORD PTR [rip+0x4779]        # 0x140007440
   140002cc7:	mov    rcx,r14
   140002cca:	call   rbx
   140002ccc:	inc    esi
   140002cce:	cmp    esi,DWORD PTR [rdi+0x58]
   140002cd1:	jb     0x140002c94
   140002cd3:	mov    rcx,QWORD PTR [rdi+0x60]
   140002cd7:	test   rcx,rcx
   140002cda:	je     0x140002ce2
   140002cdc:	call   QWORD PTR [rip+0x43b6]        # 0x140007098
   140002ce2:	xor    eax,eax
   140002ce4:	xor    edx,edx
   140002ce6:	mov    QWORD PTR [rdi+0x58],rax
   140002cea:	mov    rcx,rdi
   140002ced:	mov    QWORD PTR [rdi+0x60],rax
   140002cf1:	lea    r8d,[rax+0x68]
   140002cf5:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cfa:	mov    rsi,QWORD PTR [rsp+0x38]
   140002cff:	mov    rdi,QWORD PTR [rsp+0x40]
   140002d04:	add    rsp,0x20
   140002d08:	pop    r14
   140002d0a:	jmp    0x1400060ce
   140002d0f:	int3   
   140002d10:	int3   
   140002d11:	int3   
   140002d12:	int3   
   140002d13:	int3   
   140002d14:	int3   
   140002d15:	int3   
   140002d16:	int3   
   140002d17:	int3   
   140002d18:	int3   
   140002d19:	int3   
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	mov    QWORD PTR [rsp+0x8],rbx
   140002d25:	push   rdi
   140002d26:	sub    rsp,0x20
   140002d2a:	mov    ebx,edx
   140002d2c:	mov    rdi,rcx
   140002d2f:	call   0x140002d64
   140002d34:	test   bl,0x1
   140002d37:	je     0x140002d50
   140002d39:	test   rdi,rdi
   140002d3c:	je     0x140002d50
   140002d3e:	mov    rcx,QWORD PTR [rip+0x79d3]        # 0x14000a718
   140002d45:	mov    r8,rdi
   140002d48:	xor    edx,edx
   140002d4a:	call   QWORD PTR [rip+0x4648]        # 0x140007398
   140002d50:	mov    rax,rdi
   140002d53:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d58:	add    rsp,0x20
   140002d5c:	pop    rdi
   140002d5d:	ret    
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	int3   
   140002d61:	int3   
   140002d62:	int3   
   140002d63:	int3   
   140002d64:	mov    QWORD PTR [rsp+0x8],rbx
   140002d69:	mov    QWORD PTR [rsp+0x10],rsi
   140002d6e:	push   rdi
   140002d6f:	sub    rsp,0x20
   140002d73:	lea    rax,[rip+0x4f3e]        # 0x140007cb8
   140002d7a:	mov    rdi,rcx
   140002d7d:	mov    QWORD PTR [rcx],rax
   140002d80:	lea    rax,[rip+0x4ef1]        # 0x140007c78
   140002d87:	mov    QWORD PTR [rcx+0x8],rax
   140002d8b:	mov    rcx,QWORD PTR [rcx+0x48]
   140002d8f:	test   rcx,rcx
   140002d92:	je     0x140002d9a
   140002d94:	call   QWORD PTR [rip+0x42fe]        # 0x140007098
   140002d9a:	mov    rcx,QWORD PTR [rdi+0x40]
   140002d9e:	test   rcx,rcx
   140002da1:	je     0x140002da9
   140002da3:	call   QWORD PTR [rip+0x43c7]        # 0x140007170
   140002da9:	mov    rcx,QWORD PTR [rdi+0x38]
   140002dad:	lea    rax,[rcx-0x1]
   140002db1:	cmp    rax,0xfffffffffffffffd
   140002db5:	ja     0x140002dbd
   140002db7:	call   QWORD PTR [rip+0x435b]        # 0x140007118
   140002dbd:	mov    rcx,QWORD PTR [rdi+0x30]
   140002dc1:	lea    rax,[rcx-0x1]
   140002dc5:	cmp    rax,0xfffffffffffffffd
   140002dc9:	ja     0x140002dd1
   140002dcb:	call   QWORD PTR [rip+0x4347]        # 0x140007118
   140002dd1:	mov    rsi,QWORD PTR [rdi+0x28]
   140002dd5:	test   rsi,rsi
   140002dd8:	je     0x140002df4
   140002dda:	and    QWORD PTR [rdi+0x28],0x0
   140002ddf:	mov    rax,QWORD PTR [rsi]
   140002de2:	mov    rbx,QWORD PTR [rax+0x10]
   140002de6:	mov    rcx,rbx
   140002de9:	call   QWORD PTR [rip+0x4651]        # 0x140007440
   140002def:	mov    rcx,rsi
   140002df2:	call   rbx
   140002df4:	mov    rsi,QWORD PTR [rdi+0x20]
   140002df8:	test   rsi,rsi
   140002dfb:	je     0x140002e17
   140002dfd:	and    QWORD PTR [rdi+0x20],0x0
   140002e02:	mov    rax,QWORD PTR [rsi]
   140002e05:	mov    rbx,QWORD PTR [rax+0x10]
   140002e09:	mov    rcx,rbx
   140002e0c:	call   QWORD PTR [rip+0x462e]        # 0x140007440
   140002e12:	mov    rcx,rsi
   140002e15:	call   rbx
   140002e17:	mov    rsi,QWORD PTR [rdi+0x18]
   140002e1b:	test   rsi,rsi
   140002e1e:	je     0x140002e3a
   140002e20:	and    QWORD PTR [rdi+0x18],0x0
   140002e25:	mov    rax,QWORD PTR [rsi]
   140002e28:	mov    rbx,QWORD PTR [rax+0x10]
   140002e2c:	mov    rcx,rbx
   140002e2f:	call   QWORD PTR [rip+0x460b]        # 0x140007440
   140002e35:	mov    rcx,rsi
   140002e38:	call   rbx
   140002e3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e3f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002e44:	mov    DWORD PTR [rdi+0x14],0xc0000001
   140002e4b:	add    rsp,0x20
   140002e4f:	pop    rdi
   140002e50:	ret    
   140002e51:	int3   
   140002e52:	int3   
   140002e53:	int3   
   140002e54:	int3   
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	mov    QWORD PTR [rsp+0x10],rbx
   140002e65:	mov    QWORD PTR [rsp+0x18],r8
   140002e6a:	push   rbp
   140002e6b:	push   rsi
   140002e6c:	push   rdi
   140002e6d:	push   r12
   140002e6f:	push   r13
   140002e71:	push   r14
   140002e73:	push   r15
   140002e75:	mov    rbp,rsp
   140002e78:	sub    rsp,0x80
   140002e7f:	xor    eax,eax
   140002e81:	xor    r13d,r13d
   140002e84:	mov    r12d,edx
   140002e87:	mov    r14,rcx
   140002e8a:	mov    QWORD PTR [rbp+0x58],r13
   140002e8e:	mov    QWORD PTR [rbp+0x40],r13
   140002e92:	mov    WORD PTR [rbp-0x50],r13w
   140002e97:	mov    QWORD PTR [rbp-0x4e],rax
   140002e9b:	mov    QWORD PTR [rbp-0x46],rax
   140002e9f:	mov    DWORD PTR [rbp-0x3e],eax
   140002ea2:	mov    WORD PTR [rbp-0x3a],ax
   140002ea6:	mov    WORD PTR [rbp-0x38],r13w
   140002eab:	mov    QWORD PTR [rbp-0x36],rax
   140002eaf:	mov    QWORD PTR [rbp-0x2e],rax
   140002eb3:	mov    DWORD PTR [rbp-0x26],eax
   140002eb6:	mov    WORD PTR [rbp-0x22],ax
   140002eba:	cmp    DWORD PTR [rcx+0x48],r13d
   140002ebe:	je     0x140002eca
   140002ec0:	mov    edi,0x8000ffff
   140002ec5:	jmp    0x14000318c
   140002eca:	movabs rcx,0x6000400000000
   140002ed4:	lea    r15,[r14+0x10]
   140002ed8:	cmp    r8,rcx
   140002edb:	lea    rsi,[rip+0x5036]        # 0x140007f18
   140002ee2:	lea    rcx,[rip+0x501f]        # 0x140007f08
   140002ee9:	setae  al
   140002eec:	test   eax,eax
   140002eee:	mov    DWORD PTR [r14+0x4c],eax
   140002ef2:	mov    rdi,QWORD PTR [r15]
   140002ef5:	cmovne rsi,rcx
   140002ef9:	test   rdi,rdi
   140002efc:	je     0x140002f16
   140002efe:	mov    QWORD PTR [r15],r13
   140002f01:	mov    rax,QWORD PTR [rdi]
   140002f04:	mov    rbx,QWORD PTR [rax+0x10]
   140002f08:	mov    rcx,rbx
   140002f0b:	call   QWORD PTR [rip+0x452f]        # 0x140007440
   140002f11:	mov    rcx,rdi
   140002f14:	call   rbx
   140002f16:	xor    edx,edx
   140002f18:	mov    QWORD PTR [rsp+0x20],r15
   140002f1d:	lea    r9,[rip+0x4fd4]        # 0x140007ef8
   140002f24:	mov    rcx,rsi
   140002f27:	lea    r8d,[rdx+0x1]
   140002f2b:	call   QWORD PTR [rip+0x415f]        # 0x140007090
   140002f31:	mov    edi,eax
   140002f33:	test   eax,eax
   140002f35:	js     0x14000318c
   140002f3b:	mov    rdi,QWORD PTR [rbp+0x40]
   140002f3f:	test   rdi,rdi
   140002f42:	je     0x140002f5d
   140002f44:	mov    QWORD PTR [rbp+0x40],r13
   140002f48:	mov    rax,QWORD PTR [rdi]
   140002f4b:	mov    rbx,QWORD PTR [rax+0x10]
   140002f4f:	mov    rcx,rbx
   140002f52:	call   QWORD PTR [rip+0x44e8]        # 0x140007440
   140002f58:	mov    rcx,rdi
   140002f5b:	call   rbx
   140002f5d:	mov    rdi,QWORD PTR [r15]
   140002f60:	mov    rax,QWORD PTR [rdi]
   140002f63:	mov    rbx,QWORD PTR [rax]
   140002f66:	mov    rcx,rbx
   140002f69:	call   QWORD PTR [rip+0x44d1]        # 0x140007440
   140002f6f:	lea    r8,[rbp+0x40]
   140002f73:	mov    rcx,rdi
   140002f76:	lea    rdx,[rip+0x4f4b]        # 0x140007ec8
   140002f7d:	call   rbx
   140002f7f:	mov    edi,eax
   140002f81:	test   eax,eax
   140002f83:	js     0x14000318c
   140002f89:	mov    eax,0x3
   140002f8e:	mov    DWORD PTR [rbp-0x30],0x2
   140002f95:	mov    WORD PTR [rbp-0x38],ax
   140002f99:	mov    WORD PTR [rbp-0x50],ax
   140002f9d:	mov    eax,0x15
   140002fa2:	mov    WORD PTR [rbp-0x20],ax
   140002fa6:	movabs rax,0x6000300000000
   140002fb0:	cmp    QWORD PTR [rbp+0x50],rax
   140002fb4:	jae    0x140002fc9
   140002fb6:	mov    DWORD PTR [rbp-0x48],0x4
   140002fbd:	movabs rax,0x6000200010000
   140002fc7:	jmp    0x140002fe0
   140002fc9:	movabs rcx,0x6000400000000
   140002fd3:	cmp    QWORD PTR [rbp+0x50],rcx
   140002fd7:	jae    0x140002fe6
   140002fd9:	mov    DWORD PTR [rbp-0x48],0x5
   140002fe0:	mov    QWORD PTR [rbp-0x18],rax
   140002fe4:	jmp    0x140002ff1
   140002fe6:	mov    DWORD PTR [rbp-0x48],0x6
   140002fed:	mov    QWORD PTR [rbp-0x18],rcx
   140002ff1:	mov    rbx,QWORD PTR [rbp+0x40]
   140002ff5:	mov    rax,QWORD PTR [rbx]
   140002ff8:	mov    rdi,QWORD PTR [rax+0x20]
   140002ffc:	mov    rcx,rdi
   140002fff:	call   QWORD PTR [rip+0x443b]        # 0x140007440
   140003005:	lea    r9,[rbp-0x50]
   140003009:	xor    r8d,r8d
   14000300c:	mov    edx,0x4000
   140003011:	mov    rcx,rbx
   140003014:	call   rdi
   140003016:	mov    edi,eax
   140003018:	test   eax,eax
   14000301a:	js     0x14000318c
   140003020:	mov    rbx,QWORD PTR [rbp+0x40]
   140003024:	mov    rax,QWORD PTR [rbx]
   140003027:	mov    rdi,QWORD PTR [rax+0x20]
   14000302b:	mov    rcx,rdi
   14000302e:	call   QWORD PTR [rip+0x440c]        # 0x140007440
   140003034:	lea    r9,[rbp-0x38]
   140003038:	xor    r8d,r8d
   14000303b:	mov    edx,0x5000
   140003040:	mov    rcx,rbx
   140003043:	call   rdi
   140003045:	mov    edi,eax
   140003047:	test   eax,eax
   140003049:	js     0x14000318c
   14000304f:	mov    rbx,QWORD PTR [rbp+0x40]
   140003053:	mov    rax,QWORD PTR [rbx]
   140003056:	mov    rdi,QWORD PTR [rax+0x20]
   14000305a:	mov    rcx,rdi
   14000305d:	call   QWORD PTR [rip+0x43dd]        # 0x140007440
   140003063:	lea    r9,[rbp-0x20]
   140003067:	xor    r8d,r8d
   14000306a:	mov    edx,0x5003
   14000306f:	mov    rcx,rbx
   140003072:	call   rdi
   140003074:	mov    edi,eax
   140003076:	test   eax,eax
   140003078:	js     0x14000318c
   14000307e:	mov    rsi,QWORD PTR [r15]
   140003081:	mov    rax,QWORD PTR [rsi]
   140003084:	mov    rdi,QWORD PTR [rax+0x18]
   140003088:	mov    rcx,rdi
   14000308b:	call   QWORD PTR [rip+0x43af]        # 0x140007440
   140003091:	lea    rdx,[r14-0x8]
   140003095:	mov    rcx,rsi
   140003098:	call   rdi
   14000309a:	mov    edi,eax
   14000309c:	test   eax,eax
   14000309e:	js     0x14000318c
   1400030a4:	lea    rsi,[r14+0x18]
   1400030a8:	mov    rdi,QWORD PTR [rsi]
   1400030ab:	test   rdi,rdi
   1400030ae:	je     0x1400030c8
   1400030b0:	mov    QWORD PTR [rsi],r13
   1400030b3:	mov    rax,QWORD PTR [rdi]
   1400030b6:	mov    rbx,QWORD PTR [rax+0x10]
   1400030ba:	mov    rcx,rbx
   1400030bd:	call   QWORD PTR [rip+0x437d]        # 0x140007440
   1400030c3:	mov    rcx,rdi
   1400030c6:	call   rbx
   1400030c8:	mov    rdi,QWORD PTR [r15]
   1400030cb:	mov    rax,QWORD PTR [rdi]
   1400030ce:	mov    rbx,QWORD PTR [rax]
   1400030d1:	mov    rcx,rbx
   1400030d4:	call   QWORD PTR [rip+0x4366]        # 0x140007440
   1400030da:	mov    r8,rsi
   1400030dd:	lea    rdx,[rip+0x4dd4]        # 0x140007eb8
   1400030e4:	mov    rcx,rdi
   1400030e7:	call   rbx
   1400030e9:	mov    edi,eax
   1400030eb:	test   eax,eax
   1400030ed:	js     0x14000318c
   1400030f3:	mov    rdi,QWORD PTR [rbp+0x58]
   1400030f7:	test   rdi,rdi
   1400030fa:	je     0x140003115
   1400030fc:	mov    QWORD PTR [rbp+0x58],r13
   140003100:	mov    rax,QWORD PTR [rdi]
   140003103:	mov    rbx,QWORD PTR [rax+0x10]
   140003107:	mov    rcx,rbx
   14000310a:	call   QWORD PTR [rip+0x4330]        # 0x140007440
   140003110:	mov    rcx,rdi
   140003113:	call   rbx
   140003115:	mov    rdi,QWORD PTR [r15]
   140003118:	mov    rax,QWORD PTR [rdi]
   14000311b:	mov    rbx,QWORD PTR [rax]
   14000311e:	mov    rcx,rbx
   140003121:	call   QWORD PTR [rip+0x4319]        # 0x140007440
   140003127:	lea    r8,[rbp+0x58]
   14000312b:	mov    rcx,rdi
   14000312e:	lea    rdx,[rip+0x4d73]        # 0x140007ea8
   140003135:	call   rbx
   140003137:	mov    edi,eax
   140003139:	test   eax,eax
   14000313b:	js     0x14000318c
   14000313d:	mov    rbx,QWORD PTR [rbp+0x58]
   140003141:	mov    rax,QWORD PTR [rbx]
   140003144:	mov    rdi,QWORD PTR [rax+0x18]
   140003148:	mov    rcx,rdi
   14000314b:	call   QWORD PTR [rip+0x42ef]        # 0x140007440
   140003151:	mov    rcx,rbx
   140003154:	call   rdi
   140003156:	mov    edi,eax
   140003158:	test   eax,eax
   14000315a:	js     0x14000318c
   14000315c:	mov    rdi,QWORD PTR [r15]
   14000315f:	mov    rax,QWORD PTR [rdi]
   140003162:	mov    rbx,QWORD PTR [rax+0x28]
   140003166:	mov    rcx,rbx
   140003169:	call   QWORD PTR [rip+0x42d1]        # 0x140007440
   14000316f:	mov    esi,0x1
   140003174:	mov    rcx,rdi
   140003177:	mov    edx,esi
   140003179:	call   rbx
   14000317b:	mov    edi,eax
   14000317d:	test   eax,eax
   14000317f:	js     0x14000318c
   140003181:	and    r12d,esi
   140003184:	mov    DWORD PTR [r14+0x48],esi
   140003188:	mov    DWORD PTR [r14+0x50],r12d
   14000318c:	mov    rsi,QWORD PTR [rbp+0x40]
   140003190:	test   rsi,rsi
   140003193:	je     0x1400031ae
   140003195:	mov    QWORD PTR [rbp+0x40],r13
   140003199:	mov    rax,QWORD PTR [rsi]
   14000319c:	mov    rbx,QWORD PTR [rax+0x10]
   1400031a0:	mov    rcx,rbx
   1400031a3:	call   QWORD PTR [rip+0x4297]        # 0x140007440
   1400031a9:	mov    rcx,rsi
   1400031ac:	call   rbx
   1400031ae:	mov    rsi,QWORD PTR [rbp+0x58]
   1400031b2:	test   rsi,rsi
   1400031b5:	je     0x1400031d0
   1400031b7:	mov    QWORD PTR [rbp+0x58],r13
   1400031bb:	mov    rdx,QWORD PTR [rsi]
   1400031be:	mov    rbx,QWORD PTR [rdx+0x10]
   1400031c2:	mov    rcx,rbx
   1400031c5:	call   QWORD PTR [rip+0x4275]        # 0x140007440
   1400031cb:	mov    rcx,rsi
   1400031ce:	call   rbx
   1400031d0:	mov    eax,edi
   1400031d2:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400031da:	add    rsp,0x80
   1400031e1:	pop    r15
   1400031e3:	pop    r14
   1400031e5:	pop    r13
   1400031e7:	pop    r12
   1400031e9:	pop    rdi
   1400031ea:	pop    rsi
   1400031eb:	pop    rbp
   1400031ec:	ret    
   1400031ed:	int3   
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	int3   
   1400031f1:	int3   
   1400031f2:	int3   
   1400031f3:	int3   
   1400031f4:	int3   
   1400031f5:	int3   
   1400031f6:	int3   
   1400031f7:	int3   
   1400031f8:	int3   
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	mov    QWORD PTR [rsp+0x10],rbx
   140003205:	mov    QWORD PTR [rsp+0x18],rbp
   14000320a:	mov    QWORD PTR [rsp+0x20],rsi
   14000320f:	push   rdi
   140003210:	sub    rsp,0x20
   140003214:	mov    rdi,QWORD PTR [rcx+0x18]
   140003218:	xor    ebp,ebp
   14000321a:	mov    rsi,rcx
   14000321d:	test   rdi,rdi
   140003220:	je     0x14000323b
   140003222:	and    QWORD PTR [rcx+0x18],rbp
   140003226:	mov    rax,QWORD PTR [rdi]
   140003229:	mov    rbx,QWORD PTR [rax+0x10]
   14000322d:	mov    rcx,rbx
   140003230:	call   QWORD PTR [rip+0x420a]        # 0x140007440
   140003236:	mov    rcx,rdi
   140003239:	call   rbx
   14000323b:	mov    rdi,QWORD PTR [rsi+0x10]
   14000323f:	test   rdi,rdi
   140003242:	je     0x1400032ae
   140003244:	mov    rax,QWORD PTR [rdi]
   140003247:	mov    rbx,QWORD PTR [rax+0x30]
   14000324b:	mov    rcx,rbx
   14000324e:	call   QWORD PTR [rip+0x41ec]        # 0x140007440
   140003254:	lea    rdx,[rsp+0x30]
   140003259:	mov    rcx,rdi
   14000325c:	call   rbx
   14000325e:	mov    ebp,eax
   140003260:	test   eax,eax
   140003262:	js     0x14000328b
   140003264:	cmp    DWORD PTR [rsp+0x30],0x4
   140003269:	je     0x14000328b
   14000326b:	mov    rdi,QWORD PTR [rsi+0x10]
   14000326f:	mov    rax,QWORD PTR [rdi]
   140003272:	mov    rbx,QWORD PTR [rax+0x28]
   140003276:	mov    rcx,rbx
   140003279:	call   QWORD PTR [rip+0x41c1]        # 0x140007440
   14000327f:	mov    edx,0x4
   140003284:	mov    rcx,rdi
   140003287:	call   rbx
   140003289:	mov    ebp,eax
   14000328b:	mov    rdi,QWORD PTR [rsi+0x10]
   14000328f:	test   rdi,rdi
   140003292:	je     0x1400032ae
   140003294:	and    QWORD PTR [rsi+0x10],0x0
   140003299:	mov    rax,QWORD PTR [rdi]
   14000329c:	mov    rbx,QWORD PTR [rax+0x10]
   1400032a0:	mov    rcx,rbx
   1400032a3:	call   QWORD PTR [rip+0x4197]        # 0x140007440
   1400032a9:	mov    rcx,rdi
   1400032ac:	call   rbx
   1400032ae:	and    DWORD PTR [rsi+0x48],0x0
   1400032b2:	mov    eax,ebp
   1400032b4:	mov    rbp,QWORD PTR [rsp+0x40]
   1400032b9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400032be:	mov    rbx,QWORD PTR [rsp+0x38]
   1400032c3:	add    rsp,0x20
   1400032c7:	pop    rdi
   1400032c8:	ret    
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	rex push rbp
   1400032d2:	push   rbx
   1400032d3:	push   rsi
   1400032d4:	push   rdi
   1400032d5:	push   r13
   1400032d7:	push   r14
   1400032d9:	push   r15
   1400032db:	lea    rbp,[rsp-0x27]
   1400032e0:	sub    rsp,0xc0
   1400032e7:	xor    edi,edi
   1400032e9:	mov    r14,rdx
   1400032ec:	mov    QWORD PTR [rbp-0x59],rdi
   1400032f0:	mov    r15,rcx
   1400032f3:	mov    rcx,QWORD PTR [rip+0x6d8e]        # 0x14000a088
   1400032fa:	lea    r13,[rip+0x6d87]        # 0x14000a088
   140003301:	cmp    rcx,r13
   140003304:	je     0x140003329
   140003306:	test   BYTE PTR [rcx+0x1c],0x1
   14000330a:	je     0x140003329
   14000330c:	cmp    BYTE PTR [rcx+0x19],0x4
   140003310:	jb     0x140003329
   140003312:	mov    rcx,QWORD PTR [rcx+0x10]
   140003316:	lea    edx,[rdi+0xa]
   140003319:	lea    r8,[rip+0x4c08]        # 0x140007f28
   140003320:	call   0x140001518
   140003325:	mov    rdi,QWORD PTR [rbp-0x59]
   140003329:	xor    edx,edx
   14000332b:	lea    rcx,[rbp-0x49]
   14000332f:	lea    r8d,[rdx+0x68]
   140003333:	call   0x1400060ce
   140003338:	test   rdi,rdi
   14000333b:	je     0x140003357
   14000333d:	and    QWORD PTR [rbp-0x59],0x0
   140003342:	mov    rax,QWORD PTR [rdi]
   140003345:	mov    rbx,QWORD PTR [rax+0x10]
   140003349:	mov    rcx,rbx
   14000334c:	call   QWORD PTR [rip+0x40ee]        # 0x140007440
   140003352:	mov    rcx,rdi
   140003355:	call   rbx
   140003357:	mov    rax,QWORD PTR [r14]
   14000335a:	mov    rbx,QWORD PTR [rax]
   14000335d:	mov    rcx,rbx
   140003360:	call   QWORD PTR [rip+0x40da]        # 0x140007440
   140003366:	lea    r8,[rbp-0x59]
   14000336a:	mov    rcx,r14
   14000336d:	lea    rdx,[rip+0x4b74]        # 0x140007ee8
   140003374:	call   rbx
   140003376:	mov    esi,eax
   140003378:	test   eax,eax
   14000337a:	js     0x1400034c6
   140003380:	mov    rax,QWORD PTR [r14]
   140003383:	and    QWORD PTR [rbp+0x7f],0x0
   140003388:	mov    rbx,QWORD PTR [rax]
   14000338b:	mov    rcx,rbx
   14000338e:	call   QWORD PTR [rip+0x40ac]        # 0x140007440
   140003394:	lea    r8,[rbp+0x7f]
   140003398:	mov    rcx,r14
   14000339b:	lea    rdx,[rip+0x4b36]        # 0x140007ed8
   1400033a2:	call   rbx
   1400033a4:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400033a8:	mov    esi,eax
   1400033aa:	test   eax,eax
   1400033ac:	js     0x1400034a7
   1400033b2:	test   rdi,rdi
   1400033b5:	jne    0x1400033c1
   1400033b7:	mov    esi,0x80004002
   1400033bc:	jmp    0x1400034a7
   1400033c1:	mov    rax,QWORD PTR [rdi]
   1400033c4:	mov    rbx,QWORD PTR [rax+0x30]
   1400033c8:	mov    rcx,rbx
   1400033cb:	call   QWORD PTR [rip+0x406f]        # 0x140007440
   1400033d1:	lea    r9,[rbp+0x6f]
   1400033d5:	mov    rcx,rdi
   1400033d8:	lea    r8,[rbp+0x77]
   1400033dc:	lea    rdx,[rbp-0x51]
   1400033e0:	call   rbx
   1400033e2:	mov    esi,eax
   1400033e4:	test   eax,eax
   1400033e6:	js     0x1400034a3
   1400033ec:	mov    rbx,QWORD PTR [rbp-0x59]
   1400033f0:	inc    DWORD PTR [rbp+0x77]
   1400033f3:	inc    DWORD PTR [rbp+0x6f]
   1400033f6:	mov    r14,QWORD PTR [rbp-0x51]
   1400033fa:	mov    rax,QWORD PTR [rbx]
   1400033fd:	mov    rdi,QWORD PTR [rax+0x30]
   140003401:	mov    rcx,rdi
   140003404:	call   QWORD PTR [rip+0x4036]        # 0x140007440
   14000340a:	lea    rdx,[rbp-0x49]
   14000340e:	mov    rcx,rbx
   140003411:	call   rdi
   140003413:	mov    esi,eax
   140003415:	test   eax,eax
   140003417:	js     0x1400034a3
   14000341d:	mov    rdi,QWORD PTR [r15+0x28]
   140003421:	test   rdi,rdi
   140003424:	je     0x140003456
   140003426:	mov    rax,QWORD PTR [rdi]
   140003429:	mov    rbx,QWORD PTR [rax+0x18]
   14000342d:	mov    rcx,rbx
   140003430:	call   QWORD PTR [rip+0x400a]        # 0x140007440
   140003436:	mov    eax,DWORD PTR [rbp+0x6f]
   140003439:	mov    rdx,r14
   14000343c:	mov    r9,QWORD PTR [rbp-0x39]
   140003440:	mov    rcx,rdi
   140003443:	mov    r8,QWORD PTR [rbp+0x7]
   140003447:	mov    DWORD PTR [rsp+0x28],eax
   14000344b:	mov    eax,DWORD PTR [rbp+0x77]
   14000344e:	mov    DWORD PTR [rsp+0x20],eax
   140003452:	call   rbx
   140003454:	jmp    0x14000349a
   140003456:	mov    rcx,QWORD PTR [rip+0x6c2b]        # 0x14000a088
   14000345d:	cmp    rcx,r13
   140003460:	je     0x14000349a
   140003462:	test   BYTE PTR [rcx+0x1c],0x1
   140003466:	je     0x14000349a
   140003468:	cmp    BYTE PTR [rcx+0x19],0x4
   14000346c:	jb     0x14000349a
   14000346e:	mov    eax,DWORD PTR [rbp+0x6f]
   140003471:	mov    r9,r14
   140003474:	mov    rcx,QWORD PTR [rcx+0x10]
   140003478:	mov    DWORD PTR [rsp+0x38],eax
   14000347c:	mov    eax,DWORD PTR [rbp+0x77]
   14000347f:	mov    DWORD PTR [rsp+0x30],eax
   140003483:	mov    rax,QWORD PTR [rbp-0x39]
   140003487:	mov    QWORD PTR [rsp+0x28],rax
   14000348c:	mov    rax,QWORD PTR [rbp+0x7]
   140003490:	mov    QWORD PTR [rsp+0x20],rax
   140003495:	call   0x140002ab4
   14000349a:	lea    rcx,[rbp-0x49]
   14000349e:	call   0x140002c30
   1400034a3:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400034a7:	test   rdi,rdi
   1400034aa:	je     0x1400034c6
   1400034ac:	and    QWORD PTR [rbp+0x7f],0x0
   1400034b1:	mov    rax,QWORD PTR [rdi]
   1400034b4:	mov    rbx,QWORD PTR [rax+0x10]
   1400034b8:	mov    rcx,rbx
   1400034bb:	call   QWORD PTR [rip+0x3f7f]        # 0x140007440
   1400034c1:	mov    rcx,rdi
   1400034c4:	call   rbx
   1400034c6:	mov    rdi,QWORD PTR [rbp-0x59]
   1400034ca:	test   rdi,rdi
   1400034cd:	je     0x1400034e9
   1400034cf:	and    QWORD PTR [rbp-0x59],0x0
   1400034d4:	mov    rdx,QWORD PTR [rdi]
   1400034d7:	mov    rbx,QWORD PTR [rdx+0x10]
   1400034db:	mov    rcx,rbx
   1400034de:	call   QWORD PTR [rip+0x3f5c]        # 0x140007440
   1400034e4:	mov    rcx,rdi
   1400034e7:	call   rbx
   1400034e9:	mov    eax,esi
   1400034eb:	add    rsp,0xc0
   1400034f2:	pop    r15
   1400034f4:	pop    r14
   1400034f6:	pop    r13
   1400034f8:	pop    rdi
   1400034f9:	pop    rsi
   1400034fa:	pop    rbx
   1400034fb:	pop    rbp
   1400034fc:	ret    
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	int3   
   140003501:	int3   
   140003502:	int3   
   140003503:	int3   
   140003504:	int3   
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	mov    rax,rsp
   140003513:	mov    QWORD PTR [rax+0x8],rbx
   140003517:	mov    QWORD PTR [rax+0x10],rsi
   14000351b:	mov    QWORD PTR [rax+0x18],rdi
   14000351f:	mov    QWORD PTR [rax+0x20],r14
   140003523:	push   r15
   140003525:	sub    rsp,0x20
   140003529:	lea    rsi,[rcx+0x20]
   14000352d:	mov    r14,r9
   140003530:	cmp    QWORD PTR [rsi],0x0
   140003534:	mov    r15,r8
   140003537:	je     0x140003540
   140003539:	mov    eax,0x80040201
   14000353e:	jmp    0x1400035ac
   140003540:	mov    rax,QWORD PTR [rdx]
   140003543:	cmp    rax,QWORD PTR [rip+0x49ee]        # 0x140007f38
   14000354a:	jne    0x1400035a7
   14000354c:	mov    rax,QWORD PTR [rdx+0x8]
   140003550:	cmp    rax,QWORD PTR [rip+0x49e9]        # 0x140007f40
   140003557:	jne    0x1400035a7
   140003559:	mov    rdi,QWORD PTR [rsi]
   14000355c:	test   rdi,rdi
   14000355f:	je     0x14000357a
   140003561:	and    QWORD PTR [rsi],0x0
   140003565:	mov    rax,QWORD PTR [rdi]
   140003568:	mov    rbx,QWORD PTR [rax+0x10]
   14000356c:	mov    rcx,rbx
   14000356f:	call   QWORD PTR [rip+0x3ecb]        # 0x140007440
   140003575:	mov    rcx,rdi
   140003578:	call   rbx
   14000357a:	mov    rax,QWORD PTR [r15]
   14000357d:	mov    rbx,QWORD PTR [rax]
   140003580:	mov    rcx,rbx
   140003583:	call   QWORD PTR [rip+0x3eb7]        # 0x140007440
   140003589:	mov    r8,rsi
   14000358c:	lea    rdx,[rip+0x43dd]        # 0x140007970
   140003593:	mov    rcx,r15
   140003596:	call   rbx
   140003598:	test   eax,eax
   14000359a:	js     0x1400035a7
   14000359c:	mov    DWORD PTR [r14],0x5
   1400035a3:	xor    eax,eax
   1400035a5:	jmp    0x1400035ac
   1400035a7:	mov    eax,0x80040202
   1400035ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035b1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035b6:	mov    rdi,QWORD PTR [rsp+0x40]
   1400035bb:	mov    r14,QWORD PTR [rsp+0x48]
   1400035c0:	add    rsp,0x20
   1400035c4:	pop    r15
   1400035c6:	ret    
   1400035c7:	int3   
   1400035c8:	int3   
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035d5:	push   rdi
   1400035d6:	sub    rsp,0x20
   1400035da:	cmp    edx,0x5
   1400035dd:	jne    0x140003606
   1400035df:	mov    rdi,QWORD PTR [rcx+0x20]
   1400035e3:	test   rdi,rdi
   1400035e6:	je     0x140003602
   1400035e8:	and    QWORD PTR [rcx+0x20],0x0
   1400035ed:	mov    rax,QWORD PTR [rdi]
   1400035f0:	mov    rbx,QWORD PTR [rax+0x10]
   1400035f4:	mov    rcx,rbx
   1400035f7:	call   QWORD PTR [rip+0x3e43]        # 0x140007440
   1400035fd:	mov    rcx,rdi
   140003600:	call   rbx
   140003602:	xor    eax,eax
   140003604:	jmp    0x14000360b
   140003606:	mov    eax,0x80040200
   14000360b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003610:	add    rsp,0x20
   140003614:	pop    rdi
   140003615:	ret    
   140003616:	int3   
   140003617:	int3   
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	mov    rax,rsp
   140003623:	mov    QWORD PTR [rax+0x10],rbx
   140003627:	mov    QWORD PTR [rax+0x18],rsi
   14000362b:	mov    QWORD PTR [rax+0x20],rdi
   14000362f:	push   rbp
   140003630:	push   r12
   140003632:	push   r13
   140003634:	push   r14
   140003636:	push   r15
   140003638:	lea    rbp,[rax-0x57]
   14000363c:	sub    rsp,0xa0
   140003643:	xor    r13d,r13d
   140003646:	mov    r12,r8
   140003649:	mov    r14,rdx
   14000364c:	mov    QWORD PTR [rbp-0x29],r13
   140003650:	mov    rdi,rcx
   140003653:	mov    QWORD PTR [rbp-0x21],r13
   140003657:	xor    edx,edx
   140003659:	mov    WORD PTR [rbp-0x11],r13w
   14000365e:	lea    r8d,[r13+0x3e]
   140003662:	mov    r15,r9
   140003665:	lea    rcx,[rbp-0xf]
   140003669:	call   0x1400060ce
   14000366e:	mov    rcx,QWORD PTR [rip+0x6a13]        # 0x14000a088
   140003675:	lea    rax,[rip+0x6a0c]        # 0x14000a088
   14000367c:	cmp    rcx,rax
   14000367f:	je     0x140003699
   140003681:	test   BYTE PTR [rcx+0x1c],0x1
   140003685:	je     0x140003699
   140003687:	cmp    BYTE PTR [rcx+0x19],0x5
   14000368b:	jb     0x140003699
   14000368d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003691:	mov    r9,r14
   140003694:	call   0x140002a2c
   140003699:	cmp    DWORD PTR [rdi+0x50],r13d
   14000369d:	je     0x1400036a9
   14000369f:	mov    ebx,0x80020201
   1400036a4:	jmp    0x14000378e
   1400036a9:	lea    rsi,[rdi-0x8]
   1400036ad:	mov    rdx,r14
   1400036b0:	mov    rcx,rsi
   1400036b3:	lea    r9,[rbp+0x5f]
   1400036b7:	lea    r8,[rbp-0x21]
   1400036bb:	call   0x1400037c8
   1400036c0:	mov    ebx,eax
   1400036c2:	test   eax,eax
   1400036c4:	js     0x14000378e
   1400036ca:	mov    rdi,QWORD PTR [rdi+0x18]
   1400036ce:	mov    rax,QWORD PTR [rdi]
   1400036d1:	mov    rbx,QWORD PTR [rax+0x18]
   1400036d5:	mov    rcx,rbx
   1400036d8:	call   QWORD PTR [rip+0x3d62]        # 0x140007440
   1400036de:	mov    r8,QWORD PTR [rbp-0x21]
   1400036e2:	lea    rax,[rbp-0x31]
   1400036e6:	mov    QWORD PTR [rsp+0x38],rax
   1400036eb:	xor    r9d,r9d
   1400036ee:	lea    rax,[rbp-0x29]
   1400036f2:	mov    rcx,rdi
   1400036f5:	mov    QWORD PTR [rsp+0x30],rax
   1400036fa:	lea    rax,[rbp-0x11]
   1400036fe:	mov    QWORD PTR [rsp+0x28],rax
   140003703:	mov    QWORD PTR [rsp+0x20],r14
   140003708:	mov    r14d,DWORD PTR [rbp+0x5f]
   14000370c:	mov    edx,r14d
   14000370f:	call   rbx
   140003711:	mov    ebx,eax
   140003713:	cmp    DWORD PTR [rsi+0x54],r13d
   140003717:	je     0x14000375e
   140003719:	mov    rcx,QWORD PTR [rsi+0x30]
   14000371d:	lea    rax,[rcx-0x1]
   140003721:	cmp    rax,0xfffffffffffffffd
   140003725:	ja     0x14000372d
   140003727:	call   QWORD PTR [rip+0x39eb]        # 0x140007118
   14000372d:	mov    QWORD PTR [rsi+0x30],r13
   140003731:	mov    rcx,QWORD PTR [rsi+0x38]
   140003735:	lea    rax,[rcx-0x1]
   140003739:	cmp    rax,0xfffffffffffffffd
   14000373d:	ja     0x140003745
   14000373f:	call   QWORD PTR [rip+0x39d3]        # 0x140007118
   140003745:	mov    QWORD PTR [rsi+0x38],r13
   140003749:	mov    rcx,QWORD PTR [rsi+0x40]
   14000374d:	test   rcx,rcx
   140003750:	je     0x140003758
   140003752:	call   QWORD PTR [rip+0x3a18]        # 0x140007170
   140003758:	mov    QWORD PTR [rsi+0x40],r13
   14000375c:	jmp    0x140003771
   14000375e:	mov    rcx,QWORD PTR [rsi+0x48]
   140003762:	test   rcx,rcx
   140003765:	je     0x14000376d
   140003767:	call   QWORD PTR [rip+0x392b]        # 0x140007098
   14000376d:	mov    QWORD PTR [rsi+0x48],r13
   140003771:	test   ebx,ebx
   140003773:	js     0x14000378e
   140003775:	mov    rax,QWORD PTR [rbp-0x29]
   140003779:	mov    ecx,DWORD PTR [rbp-0x31]
   14000377c:	mov    QWORD PTR [r12],rax
   140003780:	mov    DWORD PTR [r15],ecx
   140003783:	mov    rcx,QWORD PTR [rbp+0x7f]
   140003787:	mov    QWORD PTR [rbp-0x29],r13
   14000378b:	mov    DWORD PTR [rcx],r14d
   14000378e:	mov    rcx,QWORD PTR [rbp-0x29]
   140003792:	test   rcx,rcx
   140003795:	je     0x14000379d
   140003797:	call   QWORD PTR [rip+0x38fb]        # 0x140007098
   14000379d:	lea    r11,[rsp+0xa0]
   1400037a5:	mov    eax,ebx
   1400037a7:	mov    rbx,QWORD PTR [r11+0x38]
   1400037ab:	mov    rsi,QWORD PTR [r11+0x40]
   1400037af:	mov    rdi,QWORD PTR [r11+0x48]
   1400037b3:	mov    rsp,r11
   1400037b6:	pop    r15
   1400037b8:	pop    r14
   1400037ba:	pop    r13
   1400037bc:	pop    r12
   1400037be:	pop    rbp
   1400037bf:	ret    
   1400037c0:	int3   
   1400037c1:	int3   
   1400037c2:	int3   
   1400037c3:	int3   
   1400037c4:	int3   
   1400037c5:	int3   
   1400037c6:	int3   
   1400037c7:	int3   
   1400037c8:	mov    r11,rsp
   1400037cb:	mov    QWORD PTR [r11+0x8],rbx
   1400037cf:	mov    QWORD PTR [r11+0x20],r9
   1400037d3:	mov    QWORD PTR [r11+0x18],r8
   1400037d7:	push   rbp
   1400037d8:	push   rsi
   1400037d9:	push   rdi
   1400037da:	push   r12
   1400037dc:	push   r13
   1400037de:	push   r14
   1400037e0:	push   r15
   1400037e2:	sub    rsp,0x50
   1400037e6:	mov    rax,rdx
   1400037e9:	xor    ebx,ebx
   1400037eb:	and    QWORD PTR [r11-0x58],rbx
   1400037ef:	mov    r14,rcx
   1400037f2:	mov    DWORD PTR [rsp+0x28],0x80
   1400037fa:	xor    r9d,r9d
   1400037fd:	mov    edx,0x80000000
   140003802:	mov    DWORD PTR [rsp+0x20],0x3
   14000380a:	lea    r8d,[rbx+0x1]
   14000380e:	mov    rcx,rax
   140003811:	xor    esi,esi
   140003813:	xor    edi,edi
   140003815:	call   QWORD PTR [rip+0x38d5]        # 0x1400070f0
   14000381b:	test   rax,rax
   14000381e:	je     0x14000382d
   140003820:	mov    rbx,rax
   140003823:	cmp    rax,0xffffffffffffffff
   140003827:	je     0x1400039c8
   14000382d:	lea    rdx,[rsp+0x40]
   140003832:	mov    rcx,rbx
   140003835:	call   0x140003c20
   14000383a:	mov    ebp,eax
   14000383c:	test   eax,eax
   14000383e:	js     0x1400039dc
   140003844:	mov    r13d,DWORD PTR [rsp+0x40]
   140003849:	cmp    r13d,0x3
   14000384d:	ja     0x140003859
   14000384f:	mov    ebp,0x8007065e
   140003854:	jmp    0x1400039dc
   140003859:	cmp    r13d,0xfffffffa
   14000385d:	jbe    0x140003869
   14000385f:	mov    ebp,0x800710f0
   140003864:	jmp    0x1400039dc
   140003869:	and    QWORD PTR [rsp+0x28],rsi
   14000386e:	xor    r9d,r9d
   140003871:	and    DWORD PTR [rsp+0x20],esi
   140003875:	xor    edx,edx
   140003877:	mov    rcx,rbx
   14000387a:	lea    r8d,[r9+0x2]
   14000387e:	call   QWORD PTR [rip+0x38e4]        # 0x140007168
   140003884:	mov    r12,rax
   140003887:	test   rax,rax
   14000388a:	je     0x1400039c8
   140003890:	mov    rsi,rax
   140003893:	cmp    rax,0xffffffffffffffff
   140003897:	je     0x1400039c8
   14000389d:	and    QWORD PTR [rsp+0x20],rdi
   1400038a2:	xor    r9d,r9d
   1400038a5:	xor    r8d,r8d
   1400038a8:	mov    rcx,rax
   1400038ab:	lea    edx,[r9+0x4]
   1400038af:	call   QWORD PTR [rip+0x38c3]        # 0x140007178
   1400038b5:	mov    r15,rax
   1400038b8:	test   rax,rax
   1400038bb:	je     0x1400039c8
   1400038c1:	mov    rdi,rax
   1400038c4:	cmp    rax,0xffffffffffffffff
   1400038c8:	je     0x1400039c8
   1400038ce:	cmp    BYTE PTR [rax],0xef
   1400038d1:	jne    0x14000384f
   1400038d7:	cmp    BYTE PTR [rax+0x1],0xbb
   1400038db:	jne    0x14000384f
   1400038e1:	cmp    BYTE PTR [rax+0x2],0xbf
   1400038e5:	jne    0x14000384f
   1400038eb:	cmp    DWORD PTR [r14+0x54],0x0
   1400038f0:	je     0x140003953
   1400038f2:	mov    rcx,QWORD PTR [r14+0x30]
   1400038f6:	mov    rdi,rbx
   1400038f9:	xor    ebx,ebx
   1400038fb:	cmp    rcx,rdi
   1400038fe:	je     0x140003914
   140003900:	lea    rax,[rcx-0x1]
   140003904:	cmp    rax,0xfffffffffffffffd
   140003908:	ja     0x140003910
   14000390a:	call   QWORD PTR [rip+0x3808]        # 0x140007118
   140003910:	mov    QWORD PTR [r14+0x30],rdi
   140003914:	mov    rcx,QWORD PTR [r14+0x38]
   140003918:	xor    esi,esi
   14000391a:	cmp    rcx,r12
   14000391d:	je     0x140003933
   14000391f:	lea    rax,[rcx-0x1]
   140003923:	cmp    rax,0xfffffffffffffffd
   140003927:	ja     0x14000392f
   140003929:	call   QWORD PTR [rip+0x37e9]        # 0x140007118
   14000392f:	mov    QWORD PTR [r14+0x38],r12
   140003933:	mov    rcx,QWORD PTR [r14+0x40]
   140003937:	xor    edi,edi
   140003939:	cmp    rcx,r15
   14000393c:	je     0x14000394d
   14000393e:	test   rcx,rcx
   140003941:	je     0x140003949
   140003943:	call   QWORD PTR [rip+0x3827]        # 0x140007170
   140003949:	mov    QWORD PTR [r14+0x40],r15
   14000394d:	mov    rax,QWORD PTR [r14+0x40]
   140003951:	jmp    0x1400039b0
   140003953:	lea    ecx,[r13+0x5]
   140003957:	call   QWORD PTR [rip+0x371b]        # 0x140007078
   14000395d:	mov    rcx,QWORD PTR [r14+0x48]
   140003961:	mov    r12,rax
   140003964:	cmp    rcx,rax
   140003967:	je     0x140003978
   140003969:	test   rcx,rcx
   14000396c:	je     0x140003974
   14000396e:	call   QWORD PTR [rip+0x3724]        # 0x140007098
   140003974:	mov    QWORD PTR [r14+0x48],r12
   140003978:	mov    rcx,QWORD PTR [r14+0x48]
   14000397c:	test   rcx,rcx
   14000397f:	jne    0x140003988
   140003981:	mov    ebp,0x8007000e
   140003986:	jmp    0x1400039dc
   140003988:	mov    rdx,r13
   14000398b:	mov    r9,r13
   14000398e:	mov    r8,r15
   140003991:	call   QWORD PTR [rip+0x3971]        # 0x140007308
   140003997:	xor    edx,edx
   140003999:	mov    rax,QWORD PTR [r14+0x48]
   14000399d:	lea    ecx,[rdx+r13*1]
   1400039a1:	inc    edx
   1400039a3:	mov    BYTE PTR [rcx+rax*1],0x0
   1400039a7:	cmp    edx,0x5
   1400039aa:	jl     0x140003999
   1400039ac:	mov    rax,QWORD PTR [r14+0x48]
   1400039b0:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400039b8:	mov    QWORD PTR [rcx],rax
   1400039bb:	mov    rax,QWORD PTR [rsp+0xa8]
   1400039c3:	mov    DWORD PTR [rax],r13d
   1400039c6:	jmp    0x1400039dc
   1400039c8:	call   QWORD PTR [rip+0x36ea]        # 0x1400070b8
   1400039ce:	movzx  ebp,ax
   1400039d1:	or     ebp,0x80070000
   1400039d7:	test   eax,eax
   1400039d9:	cmovle ebp,eax
   1400039dc:	test   rdi,rdi
   1400039df:	je     0x1400039ea
   1400039e1:	mov    rcx,rdi
   1400039e4:	call   QWORD PTR [rip+0x3786]        # 0x140007170
   1400039ea:	lea    rax,[rsi-0x1]
   1400039ee:	cmp    rax,0xfffffffffffffffd
   1400039f2:	ja     0x1400039fd
   1400039f4:	mov    rcx,rsi
   1400039f7:	call   QWORD PTR [rip+0x371b]        # 0x140007118
   1400039fd:	lea    rcx,[rbx-0x1]
   140003a01:	cmp    rcx,0xfffffffffffffffd
   140003a05:	ja     0x140003a10
   140003a07:	mov    rcx,rbx
   140003a0a:	call   QWORD PTR [rip+0x3708]        # 0x140007118
   140003a10:	mov    eax,ebp
   140003a12:	mov    rbx,QWORD PTR [rsp+0x90]
   140003a1a:	add    rsp,0x50
   140003a1e:	pop    r15
   140003a20:	pop    r14
   140003a22:	pop    r13
   140003a24:	pop    r12
   140003a26:	pop    rdi
   140003a27:	pop    rsi
   140003a28:	pop    rbp
   140003a29:	ret    
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	mov    QWORD PTR [rsp+0x8],rbx
   140003a35:	mov    QWORD PTR [rsp+0x10],rsi
   140003a3a:	push   rdi
   140003a3b:	sub    rsp,0x20
   140003a3f:	xor    esi,esi
   140003a41:	mov    rdi,rcx
   140003a44:	mov    QWORD PTR [r8],rsi
   140003a47:	cmp    DWORD PTR [rdx],esi
   140003a49:	jne    0x140003a74
   140003a4b:	mov    eax,DWORD PTR [rip+0x3e8b]        # 0x1400078dc
   140003a51:	cmp    DWORD PTR [rdx+0x4],eax
   140003a54:	jne    0x140003a74
   140003a56:	mov    eax,DWORD PTR [rip+0x3e84]        # 0x1400078e0
   140003a5c:	cmp    DWORD PTR [rdx+0x8],eax
   140003a5f:	jne    0x140003a74
   140003a61:	mov    eax,DWORD PTR [rip+0x3e7d]        # 0x1400078e4
   140003a67:	cmp    DWORD PTR [rdx+0xc],eax
   140003a6a:	jne    0x140003a74
   140003a6c:	mov    QWORD PTR [r8],rcx
   140003a6f:	mov    rax,QWORD PTR [rcx]
   140003a72:	jmp    0x140003ad8
   140003a74:	cmp    DWORD PTR [rdx],0xdb01a1e3
   140003a7a:	jne    0x140003aa2
   140003a7c:	mov    eax,DWORD PTR [rip+0x441a]        # 0x140007e9c
   140003a82:	cmp    DWORD PTR [rdx+0x4],eax
   140003a85:	jne    0x140003aa2
   140003a87:	mov    eax,DWORD PTR [rip+0x4413]        # 0x140007ea0
   140003a8d:	cmp    DWORD PTR [rdx+0x8],eax
   140003a90:	jne    0x140003aa2
   140003a92:	mov    eax,DWORD PTR [rip+0x440c]        # 0x140007ea4
   140003a98:	cmp    DWORD PTR [rdx+0xc],eax
   140003a9b:	jne    0x140003aa2
   140003a9d:	mov    QWORD PTR [r8],rcx
   140003aa0:	jmp    0x140003ad2
   140003aa2:	cmp    DWORD PTR [rdx],0x315b01a8
   140003aa8:	jne    0x140003aec
   140003aaa:	mov    eax,DWORD PTR [rip+0x43dc]        # 0x140007e8c
   140003ab0:	cmp    DWORD PTR [rdx+0x4],eax
   140003ab3:	jne    0x140003aec
   140003ab5:	mov    eax,DWORD PTR [rip+0x43d5]        # 0x140007e90
   140003abb:	cmp    DWORD PTR [rdx+0x8],eax
   140003abe:	jne    0x140003aec
   140003ac0:	mov    eax,DWORD PTR [rip+0x43ce]        # 0x140007e94
   140003ac6:	cmp    DWORD PTR [rdx+0xc],eax
   140003ac9:	jne    0x140003aec
   140003acb:	lea    rax,[rcx+0x8]
   140003acf:	mov    QWORD PTR [r8],rax
   140003ad2:	mov    rdi,QWORD PTR [r8]
   140003ad5:	mov    rax,QWORD PTR [rdi]
   140003ad8:	mov    rbx,QWORD PTR [rax+0x8]
   140003adc:	mov    rcx,rbx
   140003adf:	call   QWORD PTR [rip+0x395b]        # 0x140007440
   140003ae5:	mov    rcx,rdi
   140003ae8:	call   rbx
   140003aea:	jmp    0x140003af1
   140003aec:	mov    esi,0x80004002
   140003af1:	mov    rbx,QWORD PTR [rsp+0x30]
   140003af6:	mov    eax,esi
   140003af8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003afd:	add    rsp,0x20
   140003b01:	pop    rdi
   140003b02:	ret    
   140003b03:	int3   
   140003b04:	int3   
   140003b05:	int3   
   140003b06:	int3   
   140003b07:	int3   
   140003b08:	int3   
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	mov    eax,0x1
   140003b15:	lock xadd DWORD PTR [rcx+0x14],eax
   140003b1a:	inc    eax
   140003b1c:	ret    
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	int3   
   140003b21:	int3   
   140003b22:	int3   
   140003b23:	int3   
   140003b24:	int3   
   140003b25:	int3   
   140003b26:	int3   
   140003b27:	int3   
   140003b28:	int3   
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    QWORD PTR [rsp+0x8],rbx
   140003b35:	mov    QWORD PTR [rsp+0x10],rsi
   140003b3a:	push   rdi
   140003b3b:	sub    rsp,0x20
   140003b3f:	mov    rsi,rcx
   140003b42:	or     edi,0xffffffff
   140003b45:	lock xadd DWORD PTR [rcx+0x14],edi
   140003b4a:	sub    edi,0x1
   140003b4d:	jne    0x140003b8d
   140003b4f:	test   rcx,rcx
   140003b52:	je     0x140003b6c
   140003b54:	mov    rax,QWORD PTR [rcx]
   140003b57:	mov    rbx,QWORD PTR [rax+0x58]
   140003b5b:	mov    rcx,rbx
   140003b5e:	call   QWORD PTR [rip+0x38dc]        # 0x140007440
   140003b64:	lea    edx,[rdi+0x1]
   140003b67:	mov    rcx,rsi
   140003b6a:	call   rbx
   140003b6c:	mov    rsi,QWORD PTR [rip+0x6b95]        # 0x14000a708
   140003b73:	test   rsi,rsi
   140003b76:	je     0x140003b8d
   140003b78:	mov    rdx,QWORD PTR [rsi]
   140003b7b:	mov    rbx,QWORD PTR [rdx+0x10]
   140003b7f:	mov    rcx,rbx
   140003b82:	call   QWORD PTR [rip+0x38b8]        # 0x140007440
   140003b88:	mov    rcx,rsi
   140003b8b:	call   rbx
   140003b8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b92:	mov    eax,edi
   140003b94:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b99:	add    rsp,0x20
   140003b9d:	pop    rdi
   140003b9e:	ret    
   140003b9f:	int3   
   140003ba0:	int3   
   140003ba1:	int3   
   140003ba2:	int3   
   140003ba3:	int3   
   140003ba4:	int3   
   140003ba5:	int3   
   140003ba6:	int3   
   140003ba7:	int3   
   140003ba8:	int3   
   140003ba9:	int3   
   140003baa:	int3   
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	rex push rbx
   140003bb2:	sub    rsp,0x20
   140003bb6:	mov    DWORD PTR [rcx+0x14],0xc0000001
   140003bbd:	mov    rbx,rcx
   140003bc0:	test   dl,0x1
   140003bc3:	je     0x140003bd7
   140003bc5:	mov    r8,rcx
   140003bc8:	xor    edx,edx
   140003bca:	mov    rcx,QWORD PTR [rip+0x6b47]        # 0x14000a718
   140003bd1:	call   QWORD PTR [rip+0x37c1]        # 0x140007398
   140003bd7:	mov    rax,rbx
   140003bda:	add    rsp,0x20
   140003bde:	pop    rbx
   140003bdf:	ret    
   140003be0:	int3   
   140003be1:	int3   
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	sub    rcx,0x8
   140003bf4:	jmp    0x140003b10
   140003bf9:	int3   
   140003bfa:	int3   
   140003bfb:	int3   
   140003bfc:	int3   
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	sub    rcx,0x8
   140003c04:	jmp    0x140003a30
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	sub    rcx,0x8
   140003c14:	jmp    0x140003b30
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	rex push rbx
   140003c22:	sub    rsp,0x20
   140003c26:	and    DWORD PTR [rsp+0x40],0x0
   140003c2b:	mov    rbx,rdx
   140003c2e:	and    DWORD PTR [rsp+0x44],0x0
   140003c33:	lea    rdx,[rsp+0x40]
   140003c38:	call   QWORD PTR [rip+0x34ba]        # 0x1400070f8
   140003c3e:	test   eax,eax
   140003c40:	jne    0x140003c59
   140003c42:	call   QWORD PTR [rip+0x3470]        # 0x1400070b8
   140003c48:	mov    ecx,eax
   140003c4a:	movzx  eax,ax
   140003c4d:	or     eax,0x80070000
   140003c52:	test   ecx,ecx
   140003c54:	cmovle eax,ecx
   140003c57:	jmp    0x140003c6f
   140003c59:	cmp    DWORD PTR [rsp+0x44],0x0
   140003c5e:	je     0x140003c67
   140003c60:	mov    eax,0x800705b6
   140003c65:	jmp    0x140003c6f
   140003c67:	mov    eax,DWORD PTR [rsp+0x40]
   140003c6b:	mov    DWORD PTR [rbx],eax
   140003c6d:	xor    eax,eax
   140003c6f:	add    rsp,0x20
   140003c73:	pop    rbx
   140003c74:	ret    
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	mov    QWORD PTR [rsp+0x18],rbx
   140003c81:	push   rbp
   140003c82:	push   rsi
   140003c83:	push   rdi
   140003c84:	mov    eax,0x1060
   140003c89:	call   0x140006110
   140003c8e:	sub    rsp,rax
   140003c91:	mov    rax,QWORD PTR [rip+0x6370]        # 0x14000a008
   140003c98:	xor    rax,rsp
   140003c9b:	mov    QWORD PTR [rsp+0x1050],rax
   140003ca3:	or     rdi,0xffffffffffffffff
   140003ca7:	mov    rbx,r9
   140003caa:	xor    ebp,ebp
   140003cac:	mov    rax,rdx
   140003caf:	mov    rsi,rcx
   140003cb2:	inc    rdi
   140003cb5:	cmp    WORD PTR [rcx+rdi*2],bp
   140003cb9:	jne    0x140003cb2
   140003cbb:	mov    ecx,0xffffffff
   140003cc0:	cmp    rdi,rcx
   140003cc3:	jbe    0x140003ced
   140003cc5:	mov    eax,0x80070216
   140003cca:	mov    rcx,QWORD PTR [rsp+0x1050]
   140003cd2:	xor    rcx,rsp
   140003cd5:	call   0x140005910
   140003cda:	mov    rbx,QWORD PTR [rsp+0x1090]
   140003ce2:	add    rsp,0x1060
   140003ce9:	pop    rdi
   140003cea:	pop    rsi
   140003ceb:	pop    rbp
   140003cec:	ret    
   140003ced:	xor    r8d,r8d
   140003cf0:	mov    QWORD PTR [rsp+0x30],rbp
   140003cf5:	lea    rcx,[rsp+0x40]
   140003cfa:	mov    QWORD PTR [rsp+0x28],rcx
   140003cff:	lea    r9,[rsp+0x50]
   140003d04:	mov    rcx,rax
   140003d07:	mov    DWORD PTR [rsp+0x20],0x800
   140003d0f:	lea    edx,[r8+0x9]
   140003d13:	call   QWORD PTR [rip+0x3717]        # 0x140007430
   140003d19:	test   eax,eax
   140003d1b:	js     0x140003cca
   140003d1d:	mov    eax,DWORD PTR [rsp+0x40]
   140003d21:	add    rax,rax
   140003d24:	cmp    rax,0x1000
   140003d2a:	jae    0x140003db4
   140003d30:	mov    WORD PTR [rsp+rax*1+0x50],bp
   140003d35:	cmp    edi,DWORD PTR [rsp+0x40]
   140003d39:	jb     0x140003d42
   140003d3b:	mov    ecx,0x80070103
   140003d40:	jmp    0x140003dad
   140003d42:	mov    r9d,edi
   140003d45:	mov    DWORD PTR [rsp+0x20],0x1
   140003d4d:	lea    r8,[rsp+0x50]
   140003d52:	mov    edx,edi
   140003d54:	mov    rcx,rsi
   140003d57:	call   QWORD PTR [rip+0x34b3]        # 0x140007210
   140003d5d:	cmp    eax,0x2
   140003d60:	jne    0x140003d3b
   140003d62:	mov    eax,edi
   140003d64:	lea    r8,[rsp+0x50]
   140003d69:	add    rax,rax
   140003d6c:	mov    edx,0x104
   140003d71:	sub    rax,rbx
   140003d74:	mov    ecx,ebp
   140003d76:	add    r8,rax
   140003d79:	lea    rax,[rdx+0x7ffffefa]
   140003d80:	test   rax,rax
   140003d83:	je     0x140003d9c
   140003d85:	movzx  eax,WORD PTR [r8+rbx*1]
   140003d8a:	test   ax,ax
   140003d8d:	je     0x140003d9c
   140003d8f:	mov    WORD PTR [rbx],ax
   140003d92:	add    rbx,0x2
   140003d96:	sub    rdx,0x1
   140003d9a:	jne    0x140003d79
   140003d9c:	test   rdx,rdx
   140003d9f:	jne    0x140003daa
   140003da1:	sub    rbx,0x2
   140003da5:	mov    ecx,0x8007007a
   140003daa:	mov    WORD PTR [rbx],bp
   140003dad:	mov    eax,ecx
   140003daf:	jmp    0x140003cca
   140003db4:	call   0x140005e28
   140003db9:	int3   
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	int3   
   140003dbd:	int3   
   140003dbe:	int3   
   140003dbf:	int3   
   140003dc0:	test   rcx,rcx
   140003dc3:	je     0x140003e13
   140003dc5:	push   rbx
   140003dc6:	sub    rsp,0x20
   140003dca:	mov    r8,QWORD PTR [rcx+0x18]
   140003dce:	mov    rbx,rcx
   140003dd1:	test   r8,r8
   140003dd4:	je     0x140003de5
   140003dd6:	mov    rcx,QWORD PTR [rip+0x693b]        # 0x14000a718
   140003ddd:	xor    edx,edx
   140003ddf:	call   QWORD PTR [rip+0x35b3]        # 0x140007398
   140003de5:	mov    r8,QWORD PTR [rbx]
   140003de8:	test   r8,r8
   140003deb:	je     0x140003dfc
   140003ded:	mov    rcx,QWORD PTR [rip+0x6924]        # 0x14000a718
   140003df4:	xor    edx,edx
   140003df6:	call   QWORD PTR [rip+0x359c]        # 0x140007398
   140003dfc:	mov    rcx,QWORD PTR [rip+0x6915]        # 0x14000a718
   140003e03:	mov    r8,rbx
   140003e06:	xor    edx,edx
   140003e08:	call   QWORD PTR [rip+0x358a]        # 0x140007398
   140003e0e:	add    rsp,0x20
   140003e12:	pop    rbx
   140003e13:	ret    
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	mov    QWORD PTR [rsp+0x8],rbx
   140003e21:	mov    QWORD PTR [rsp+0x10],rsi
   140003e26:	push   rdi
   140003e27:	sub    rsp,0x20
   140003e2b:	mov    rsi,QWORD PTR [rip+0x68d6]        # 0x14000a708
   140003e32:	lea    rax,[rip+0x3edf]        # 0x140007d18
   140003e39:	mov    DWORD PTR [rcx+0xc],0x1
   140003e40:	mov    rdi,rcx
   140003e43:	mov    QWORD PTR [rcx],rax
   140003e46:	test   rsi,rsi
   140003e49:	je     0x140003e60
   140003e4b:	mov    rax,QWORD PTR [rsi]
   140003e4e:	mov    rbx,QWORD PTR [rax+0x8]
   140003e52:	mov    rcx,rbx
   140003e55:	call   QWORD PTR [rip+0x35e5]        # 0x140007440
   140003e5b:	mov    rcx,rsi
   140003e5e:	call   rbx
   140003e60:	lea    rax,[rip+0x3ee9]        # 0x140007d50
   140003e67:	mov    QWORD PTR [rdi],rax
   140003e6a:	and    QWORD PTR [rdi+0x10],0x0
   140003e6f:	and    QWORD PTR [rdi+0x20],0x0
   140003e74:	mov    BYTE PTR [rdi+0x18],0x0
   140003e78:	mov    rcx,QWORD PTR [rdi+0x10]
   140003e7c:	test   rcx,rcx
   140003e7f:	je     0x140003e8b
   140003e81:	call   0x140004ce8
   140003e86:	and    QWORD PTR [rdi+0x10],0x0
   140003e8b:	and    DWORD PTR [rdi+0x2c],0x0
   140003e8f:	and    DWORD PTR [rdi+0x30],0x0
   140003e93:	and    DWORD PTR [rdi+0x34],0x0
   140003e97:	and    DWORD PTR [rdi+0x38],0x0
   140003e9b:	and    DWORD PTR [rdi+0x28],0x0
   140003e9f:	mov    rcx,QWORD PTR [rdi+0x20]
   140003ea3:	test   rcx,rcx
   140003ea6:	je     0x140003eb9
   140003ea8:	cmp    rcx,0xffffffffffffffff
   140003eac:	je     0x140003eb4
   140003eae:	call   QWORD PTR [rip+0x3264]        # 0x140007118
   140003eb4:	and    QWORD PTR [rdi+0x20],0x0
   140003eb9:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ebe:	mov    rax,rdi
   140003ec1:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ec6:	mov    BYTE PTR [rdi+0x3c],0x0
   140003eca:	add    rsp,0x20
   140003ece:	pop    rdi
   140003ecf:	ret    
   140003ed0:	int3   
   140003ed1:	int3   
   140003ed2:	int3   
   140003ed3:	int3   
   140003ed4:	int3   
   140003ed5:	int3   
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ee5:	push   rdi
   140003ee6:	sub    rsp,0x20
   140003eea:	mov    ebx,edx
   140003eec:	mov    rdi,rcx
   140003eef:	call   0x140003f24
   140003ef4:	test   bl,0x1
   140003ef7:	je     0x140003f10
   140003ef9:	test   rdi,rdi
   140003efc:	je     0x140003f10
   140003efe:	mov    rcx,QWORD PTR [rip+0x6813]        # 0x14000a718
   140003f05:	mov    r8,rdi
   140003f08:	xor    edx,edx
   140003f0a:	call   QWORD PTR [rip+0x3488]        # 0x140007398
   140003f10:	mov    rax,rdi
   140003f13:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f18:	add    rsp,0x20
   140003f1c:	pop    rdi
   140003f1d:	ret    
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	int3   
   140003f21:	int3   
   140003f22:	int3   
   140003f23:	int3   
   140003f24:	rex push rbx
   140003f26:	sub    rsp,0x20
   140003f2a:	lea    rax,[rip+0x3e1f]        # 0x140007d50
   140003f31:	mov    BYTE PTR [rcx+0x18],0x0
   140003f35:	mov    QWORD PTR [rcx],rax
   140003f38:	mov    rbx,rcx
   140003f3b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f3f:	test   rcx,rcx
   140003f42:	je     0x140003f49
   140003f44:	call   0x140004ba8
   140003f49:	cmp    QWORD PTR [rbx+0x20],0x0
   140003f4e:	je     0x140003f69
   140003f50:	mov    rcx,QWORD PTR [rbx+0x20]
   140003f54:	lea    rax,[rcx-0x1]
   140003f58:	cmp    rax,0xfffffffffffffffd
   140003f5c:	ja     0x140003f64
   140003f5e:	call   QWORD PTR [rip+0x31b4]        # 0x140007118
   140003f64:	and    QWORD PTR [rbx+0x20],0x0
   140003f69:	mov    rcx,QWORD PTR [rbx+0x10]
   140003f6d:	test   rcx,rcx
   140003f70:	je     0x140003f7c
   140003f72:	call   0x140004ce8
   140003f77:	and    QWORD PTR [rbx+0x10],0x0
   140003f7c:	and    DWORD PTR [rbx+0x2c],0x0
   140003f80:	and    DWORD PTR [rbx+0x30],0x0
   140003f84:	and    DWORD PTR [rbx+0x34],0x0
   140003f88:	and    DWORD PTR [rbx+0x38],0x0
   140003f8c:	and    DWORD PTR [rbx+0x28],0x0
   140003f90:	mov    rcx,QWORD PTR [rbx+0x20]
   140003f94:	test   rcx,rcx
   140003f97:	je     0x140003faa
   140003f99:	cmp    rcx,0xffffffffffffffff
   140003f9d:	je     0x140003fa5
   140003f9f:	call   QWORD PTR [rip+0x3173]        # 0x140007118
   140003fa5:	and    QWORD PTR [rbx+0x20],0x0
   140003faa:	mov    rcx,QWORD PTR [rbx+0x20]
   140003fae:	mov    BYTE PTR [rbx+0x3c],0x0
   140003fb2:	lea    rax,[rcx-0x1]
   140003fb6:	cmp    rax,0xfffffffffffffffd
   140003fba:	ja     0x140003fc2
   140003fbc:	call   QWORD PTR [rip+0x3156]        # 0x140007118
   140003fc2:	mov    rcx,QWORD PTR [rbx+0x10]
   140003fc6:	call   0x140004ce8
   140003fcb:	mov    DWORD PTR [rbx+0xc],0xc0000001
   140003fd2:	add    rsp,0x20
   140003fd6:	pop    rbx
   140003fd7:	ret    
   140003fd8:	int3   
   140003fd9:	int3   
   140003fda:	int3   
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	mov    rax,rsp
   140003fe3:	mov    QWORD PTR [rax+0x10],rbx
   140003fe7:	mov    QWORD PTR [rax+0x18],rbp
   140003feb:	mov    QWORD PTR [rax+0x20],rsi
   140003fef:	push   rdi
   140003ff0:	push   r12
   140003ff2:	push   r13
   140003ff4:	push   r14
   140003ff6:	push   r15
   140003ff8:	sub    rsp,0x50
   140003ffc:	xor    ebp,ebp
   140003ffe:	mov    rsi,r8
   140004001:	mov    r14,rcx
   140004004:	mov    QWORD PTR [rax+0x8],rbp
   140004008:	mov    ebx,ebp
   14000400a:	cmp    BYTE PTR [rcx+0x18],bpl
   14000400e:	je     0x14000401a
   140004010:	mov    ecx,0x8000ffff
   140004015:	jmp    0x1400041ec
   14000401a:	test   r8,r8
   14000401d:	je     0x140004025
   14000401f:	cmp    r8,0xffffffffffffffff
   140004023:	jne    0x14000402f
   140004025:	mov    ecx,0x80070057
   14000402a:	jmp    0x1400041ec
   14000402f:	cmp    r9d,0xffff
   140004036:	jbe    0x140004042
   140004038:	mov    ecx,0x80070004
   14000403d:	jmp    0x1400041ec
   140004042:	mov    r15d,DWORD PTR [rsp+0xa0]
   14000404a:	mov    r13d,0xfa00000
   140004050:	cmp    r15d,r13d
   140004053:	jbe    0x14000405f
   140004055:	mov    ecx,0x800710f0
   14000405a:	jmp    0x1400041ec
   14000405f:	movabs rax,0x6000400000000
   140004069:	mov    DWORD PTR [rcx+0x28],r9d
   14000406d:	cmp    rdx,rax
   140004070:	setb   al
   140004073:	mov    BYTE PTR [rcx+0x3c],al
   140004076:	lea    eax,[r9+r9*2]
   14000407a:	imul   ecx,r9d,0x208
   140004081:	lea    r12d,[rax*8+0x4]
   140004089:	mov    DWORD PTR [r14+0x34],ecx
   14000408d:	lea    eax,[rcx+r12*1]
   140004091:	cmp    eax,r12d
   140004094:	jb     0x1400041e2
   14000409a:	lea    rdx,[rsp+0x40]
   14000409f:	mov    DWORD PTR [r14+0x38],eax
   1400040a3:	mov    ecx,0x78
   1400040a8:	mov    QWORD PTR [rsp+0x40],rbp
   1400040ad:	call   0x140005058
   1400040b2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400040b7:	test   rdi,rdi
   1400040ba:	je     0x1400040fe
   1400040bc:	lea    rax,[rip+0xfffffffffffffcfd]        # 0x140003dc0
   1400040c3:	mov    QWORD PTR [rdi+0x68],rbp
   1400040c7:	lea    rdx,[rip+0x982]        # 0x140004a50
   1400040ce:	mov    QWORD PTR [rdi+0x70],rax
   1400040d2:	test   rdx,rdx
   1400040d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400040da:	lea    rax,[rip+0xb5f]        # 0x140004c40
   1400040e1:	mov    rcx,rdi
   1400040e4:	cmove  rdx,rax
   1400040e8:	lea    r9,[rip+0xbd1]        # 0x140004cc0
   1400040ef:	lea    r8,[rip+0xb9a]        # 0x140004c90
   1400040f6:	call   QWORD PTR [rip+0x32e4]        # 0x1400073e0
   1400040fc:	jmp    0x140004101
   1400040fe:	mov    rdi,rbp
   140004101:	test   rdi,rdi
   140004104:	je     0x140004110
   140004106:	xor    ecx,ecx
   140004108:	call   0x140004ce8
   14000410d:	mov    rbx,rdi
   140004110:	call   QWORD PTR [rip+0x307a]        # 0x140007190
   140004116:	mov    rdi,rax
   140004119:	call   QWORD PTR [rip+0x3071]        # 0x140007190
   14000411f:	mov    DWORD PTR [rsp+0x30],0x2
   140004127:	lea    r9,[rsp+0x80]
   14000412f:	mov    rcx,rax
   140004132:	mov    DWORD PTR [rsp+0x28],ebp
   140004136:	mov    r8,rdi
   140004139:	mov    DWORD PTR [rsp+0x20],ebp
   14000413d:	mov    rdx,rsi
   140004140:	call   QWORD PTR [rip+0x2fda]        # 0x140007120
   140004146:	test   eax,eax
   140004148:	jne    0x140004163
   14000414a:	call   QWORD PTR [rip+0x2f68]        # 0x1400070b8
   140004150:	movzx  ecx,ax
   140004153:	or     ecx,0x80070000
   140004159:	test   eax,eax
   14000415b:	cmovle ecx,eax
   14000415e:	jmp    0x1400041ec
   140004163:	mov    eax,DWORD PTR [r14+0x34]
   140004167:	lea    ecx,[rax+r15*2]
   14000416b:	mov    rax,QWORD PTR [r14]
   14000416e:	cmp    ecx,r13d
   140004171:	cmova  ecx,r13d
   140004175:	mov    rsi,QWORD PTR [rax+0x40]
   140004179:	lea    edi,[r12+rcx*1]
   14000417d:	mov    rcx,rsi
   140004180:	call   QWORD PTR [rip+0x32ba]        # 0x140007440
   140004186:	mov    rdx,QWORD PTR [rsp+0x80]
   14000418e:	mov    r8d,edi
   140004191:	mov    rcx,r14
   140004194:	call   rsi
   140004196:	mov    rdi,QWORD PTR [rsp+0x80]
   14000419e:	mov    rcx,QWORD PTR [r14+0x20]
   1400041a2:	mov    QWORD PTR [rsp+0x80],rbp
   1400041aa:	cmp    rcx,rdi
   1400041ad:	je     0x1400041c3
   1400041af:	lea    rax,[rcx-0x1]
   1400041b3:	cmp    rax,0xfffffffffffffffd
   1400041b7:	ja     0x1400041bf
   1400041b9:	call   QWORD PTR [rip+0x2f59]        # 0x140007118
   1400041bf:	mov    QWORD PTR [r14+0x20],rdi
   1400041c3:	mov    rcx,QWORD PTR [r14+0x10]
   1400041c7:	mov    rdi,rbx
   1400041ca:	mov    rbx,rbp
   1400041cd:	cmp    rcx,rdi
   1400041d0:	je     0x1400041db
   1400041d2:	call   0x140004ce8
   1400041d7:	mov    QWORD PTR [r14+0x10],rdi
   1400041db:	mov    BYTE PTR [r14+0x18],0x1
   1400041e0:	jmp    0x1400041ee
   1400041e2:	or     DWORD PTR [r14+0x38],0xffffffff
   1400041e7:	mov    ecx,0x80070216
   1400041ec:	mov    ebp,ecx
   1400041ee:	mov    rcx,rbx
   1400041f1:	call   0x140004ce8
   1400041f6:	mov    rcx,QWORD PTR [rsp+0x80]
   1400041fe:	lea    rdx,[rcx-0x1]
   140004202:	cmp    rdx,0xfffffffffffffffd
   140004206:	ja     0x14000420e
   140004208:	call   QWORD PTR [rip+0x2f0a]        # 0x140007118
   14000420e:	lea    r11,[rsp+0x50]
   140004213:	mov    eax,ebp
   140004215:	mov    rbx,QWORD PTR [r11+0x38]
   140004219:	mov    rbp,QWORD PTR [r11+0x40]
   14000421d:	mov    rsi,QWORD PTR [r11+0x48]
   140004221:	mov    rsp,r11
   140004224:	pop    r15
   140004226:	pop    r14
   140004228:	pop    r13
   14000422a:	pop    r12
   14000422c:	pop    rdi
   14000422d:	ret    
   14000422e:	int3   
   14000422f:	int3   
   140004230:	int3   
   140004231:	int3   
   140004232:	int3   
   140004233:	int3   
   140004234:	int3   
   140004235:	int3   
   140004236:	int3   
   140004237:	int3   
   140004238:	int3   
   140004239:	int3   
   14000423a:	int3   
   14000423b:	int3   
   14000423c:	int3   
   14000423d:	int3   
   14000423e:	int3   
   14000423f:	int3   
   140004240:	mov    QWORD PTR [rsp+0x10],rbx
   140004245:	mov    QWORD PTR [rsp+0x18],rsi
   14000424a:	mov    QWORD PTR [rsp+0x20],rdi
   14000424f:	push   rbp
   140004250:	push   r12
   140004252:	push   r13
   140004254:	push   r14
   140004256:	push   r15
   140004258:	mov    rbp,rsp
   14000425b:	sub    rsp,0x30
   14000425f:	xor    r13d,r13d
   140004262:	mov    r15,rdx
   140004265:	mov    r14,rcx
   140004268:	mov    ebx,r13d
   14000426b:	cmp    BYTE PTR [rcx+0x18],r13b
   14000426f:	je     0x14000459e
   140004275:	cmp    QWORD PTR [rcx+0x20],r13
   140004279:	je     0x14000459e
   14000427f:	cmp    QWORD PTR [rdx],r13
   140004282:	jne    0x14000428e
   140004284:	mov    edi,0x80070057
   140004289:	jmp    0x1400045a3
   14000428e:	cmp    QWORD PTR [rdx+0x10],r13
   140004292:	je     0x140004284
   140004294:	cmp    QWORD PTR [rdx+0x20],r13
   140004298:	je     0x140004284
   14000429a:	mov    eax,DWORD PTR [rdx+0x8]
   14000429d:	dec    eax
   14000429f:	cmp    eax,0x103
   1400042a4:	ja     0x140004284
   1400042a6:	mov    eax,DWORD PTR [rdx+0x18]
   1400042a9:	mov    ecx,0xf9fffff
   1400042ae:	dec    eax
   1400042b0:	cmp    eax,ecx
   1400042b2:	ja     0x140004284
   1400042b4:	mov    eax,DWORD PTR [rdx+0x28]
   1400042b7:	dec    eax
   1400042b9:	cmp    eax,ecx
   1400042bb:	ja     0x140004284
   1400042bd:	mov    rcx,QWORD PTR [r14+0x10]
   1400042c1:	call   QWORD PTR [rip+0x3111]        # 0x1400073d8
   1400042c7:	cmp    eax,DWORD PTR [r14+0x28]
   1400042cb:	jb     0x1400042d7
   1400042cd:	mov    edi,0x80070004
   1400042d2:	jmp    0x1400045a3
   1400042d7:	mov    edx,DWORD PTR [r14+0x30]
   1400042db:	add    edx,DWORD PTR [r14+0x2c]
   1400042df:	mov    r8d,DWORD PTR [r14+0x34]
   1400042e3:	cmp    edx,DWORD PTR [r14+0x2c]
   1400042e7:	jb     0x1400042f7
   1400042e9:	lea    eax,[rdx+r8*1]
   1400042ed:	or     ecx,0xffffffff
   1400042f0:	cmp    eax,edx
   1400042f2:	cmovae ecx,eax
   1400042f5:	jmp    0x1400042fa
   1400042f7:	mov    ecx,DWORD PTR [rbp+0x30]
   1400042fa:	cmp    BYTE PTR [r14+0x3c],r13b
   1400042fe:	je     0x140004306
   140004300:	mov    edx,DWORD PTR [r15+0x28]
   140004304:	jmp    0x140004309
   140004306:	mov    edx,r13d
   140004309:	add    edx,DWORD PTR [r15+0x18]
   14000430d:	cmp    edx,DWORD PTR [r15+0x18]
   140004311:	jb     0x14000431e
   140004313:	mov    r8d,0xfa00000
   140004319:	cmp    edx,r8d
   14000431c:	jbe    0x140004328
   14000431e:	mov    edi,0x800710f0
   140004323:	jmp    0x1400045a3
   140004328:	lea    eax,[rdx+rcx*1]
   14000432b:	cmp    eax,ecx
   14000432d:	jb     0x14000431e
   14000432f:	cmp    eax,r8d
   140004332:	ja     0x14000431e
   140004334:	mov    edi,0x28
   140004339:	mov    QWORD PTR [rbp+0x30],r13
   14000433d:	mov    ecx,edi
   14000433f:	lea    rdx,[rbp+0x30]
   140004343:	call   0x140005058
   140004348:	mov    r12,QWORD PTR [rbp+0x30]
   14000434c:	test   r12,r12
   14000434f:	je     0x140004360
   140004351:	mov    r8d,edi
   140004354:	xor    edx,edx
   140004356:	mov    rcx,r12
   140004359:	call   0x1400060ce
   14000435e:	jmp    0x140004363
   140004360:	mov    r12,r13
   140004363:	test   r12,r12
   140004366:	je     0x140004597
   14000436c:	xor    ecx,ecx
   14000436e:	call   0x140003dc0
   140004373:	mov    eax,DWORD PTR [r15+0x8]
   140004377:	mov    rbx,r12
   14000437a:	mov    ecx,eax
   14000437c:	mov    DWORD PTR [r12+0x8],eax
   140004381:	mov    eax,0x2
   140004386:	mov    QWORD PTR [rbp+0x30],r13
   14000438a:	mul    rcx
   14000438d:	mov    rcx,0xffffffffffffffff
   140004394:	lea    rdx,[rbp+0x30]
   140004398:	cmovo  rax,rcx
   14000439c:	mov    rcx,rax
   14000439f:	call   0x140005058
   1400043a4:	mov    r8,QWORD PTR [rbp+0x30]
   1400043a8:	test   r8,r8
   1400043ab:	je     0x140004597
   1400043b1:	mov    ecx,DWORD PTR [r12+0x8]
   1400043b6:	mov    r9d,0x7ffffffe
   1400043bc:	mov    r10,QWORD PTR [r15]
   1400043bf:	mov    esi,r13d
   1400043c2:	mov    edi,0x80070057
   1400043c7:	lea    rax,[rcx-0x1]
   1400043cb:	cmp    rax,r9
   1400043ce:	cmova  esi,edi
   1400043d1:	test   esi,esi
   1400043d3:	js     0x14000441a
   1400043d5:	mov    rdx,r8
   1400043d8:	mov    esi,r13d
   1400043db:	test   rcx,rcx
   1400043de:	je     0x14000440b
   1400043e0:	sub    r9,rcx
   1400043e3:	sub    r10,r8
   1400043e6:	lea    rax,[rcx+r9*1]
   1400043ea:	test   rax,rax
   1400043ed:	je     0x140004406
   1400043ef:	movzx  eax,WORD PTR [rdx+r10*1]
   1400043f4:	test   ax,ax
   1400043f7:	je     0x140004406
   1400043f9:	mov    WORD PTR [rdx],ax
   1400043fc:	add    rdx,0x2
   140004400:	sub    rcx,0x1
   140004404:	jne    0x1400043e6
   140004406:	test   rcx,rcx
   140004409:	jne    0x140004414
   14000440b:	sub    rdx,0x2
   14000440f:	mov    esi,0x8007007a
   140004414:	mov    WORD PTR [rdx],r13w
   140004418:	jmp    0x140004423
   14000441a:	test   rcx,rcx
   14000441d:	je     0x140004423
   14000441f:	mov    WORD PTR [r8],r13w
   140004423:	test   esi,esi
   140004425:	jns    0x14000443b
   140004427:	mov    rcx,QWORD PTR [rip+0x62ea]        # 0x14000a718
   14000442e:	xor    edx,edx
   140004430:	call   QWORD PTR [rip+0x2f62]        # 0x140007398
   140004436:	jmp    0x1400045a5
   14000443b:	mov    QWORD PTR [r12],r8
   14000443f:	or     rcx,0xffffffffffffffff
   140004443:	mov    eax,DWORD PTR [r14+0x38]
   140004447:	mov    r13,rcx
   14000444a:	add    eax,0x7
   14000444d:	and    eax,0xfffffff8
   140004450:	mov    DWORD PTR [r14+0x38],eax
   140004454:	xor    esi,esi
   140004456:	mov    DWORD PTR [r12+0xc],eax
   14000445b:	mov    eax,DWORD PTR [r15+0x18]
   14000445f:	mov    DWORD PTR [r12+0x10],eax
   140004464:	mov    rax,QWORD PTR [r15+0x20]
   140004468:	inc    r13
   14000446b:	cmp    WORD PTR [rax+r13*2],si
   140004470:	jne    0x140004468
   140004472:	inc    r13
   140004475:	mov    QWORD PTR [rbp+0x30],rsi
   140004479:	mov    eax,0x2
   14000447e:	mul    r13
   140004481:	lea    rdx,[rbp+0x30]
   140004485:	cmovo  rax,rcx
   140004489:	mov    rcx,rax
   14000448c:	call   0x140005058
   140004491:	mov    rdx,QWORD PTR [rbp+0x30]
   140004495:	test   rdx,rdx
   140004498:	je     0x140004597
   14000449e:	mov    eax,DWORD PTR [r15+0x28]
   1400044a2:	mov    r9d,0x7ffffffe
   1400044a8:	mov    DWORD PTR [r12+0x20],eax
   1400044ad:	lea    rax,[r13-0x1]
   1400044b1:	mov    r8,QWORD PTR [r15+0x20]
   1400044b5:	cmp    rax,r9
   1400044b8:	cmova  esi,edi
   1400044bb:	xor    edi,edi
   1400044bd:	test   esi,esi
   1400044bf:	js     0x140004504
   1400044c1:	mov    rcx,rdx
   1400044c4:	mov    esi,edi
   1400044c6:	test   r13,r13
   1400044c9:	je     0x1400044f6
   1400044cb:	sub    r9,r13
   1400044ce:	sub    r8,rdx
   1400044d1:	lea    rax,[r9+r13*1]
   1400044d5:	test   rax,rax
   1400044d8:	je     0x1400044f1
   1400044da:	movzx  eax,WORD PTR [rcx+r8*1]
   1400044df:	test   ax,ax
   1400044e2:	je     0x1400044f1
   1400044e4:	mov    WORD PTR [rcx],ax
   1400044e7:	add    rcx,0x2
   1400044eb:	sub    r13,0x1
   1400044ef:	jne    0x1400044d1
   1400044f1:	test   r13,r13
   1400044f4:	jne    0x1400044ff
   1400044f6:	sub    rcx,0x2
   1400044fa:	mov    esi,0x8007007a
   1400044ff:	mov    WORD PTR [rcx],di
   140004502:	jmp    0x14000450c
   140004504:	test   r13,r13
   140004507:	je     0x14000450c
   140004509:	mov    WORD PTR [rdx],di
   14000450c:	test   esi,esi
   14000450e:	jns    0x140004518
   140004510:	mov    r8,rdx
   140004513:	jmp    0x140004427
   140004518:	mov    QWORD PTR [r12+0x18],rdx
   14000451d:	mov    r9d,DWORD PTR [r14+0x38]
   140004521:	mov    r8d,DWORD PTR [r15+0x18]
   140004525:	mov    rdx,QWORD PTR [r15+0x10]
   140004529:	mov    rcx,QWORD PTR [r14+0x20]
   14000452d:	call   0x140004940
   140004532:	mov    esi,eax
   140004534:	test   eax,eax
   140004536:	js     0x1400045a5
   140004538:	mov    rax,QWORD PTR [r12]
   14000453c:	lea    r9,[rbp+0x30]
   140004540:	mov    rcx,QWORD PTR [r14+0x10]
   140004544:	lea    rdx,[rbp-0x10]
   140004548:	mov    r8d,0x10
   14000454e:	mov    QWORD PTR [rbp-0x10],rax
   140004552:	mov    QWORD PTR [rbp-0x8],r12
   140004556:	call   QWORD PTR [rip+0x2e74]        # 0x1400073d0
   14000455c:	test   rax,rax
   14000455f:	je     0x140004597
   140004561:	cmp    BYTE PTR [rbp+0x30],dil
   140004565:	jne    0x14000456e
   140004567:	mov    esi,0x800702ba
   14000456c:	jmp    0x1400045a5
   14000456e:	mov    eax,DWORD PTR [r12+0x10]
   140004573:	add    DWORD PTR [r14+0x38],eax
   140004577:	mov    eax,DWORD PTR [r12+0x10]
   14000457c:	add    DWORD PTR [r14+0x2c],eax
   140004580:	cmp    BYTE PTR [r14+0x3c],dil
   140004584:	je     0x14000458c
   140004586:	mov    eax,DWORD PTR [r15+0x28]
   14000458a:	jmp    0x14000458e
   14000458c:	mov    eax,edi
   14000458e:	add    DWORD PTR [r14+0x30],eax
   140004592:	mov    rbx,rdi
   140004595:	jmp    0x1400045a3
   140004597:	mov    esi,0x8007000e
   14000459c:	jmp    0x1400045a5
   14000459e:	mov    edi,0x8000ffff
   1400045a3:	mov    esi,edi
   1400045a5:	mov    rcx,rbx
   1400045a8:	call   0x140003dc0
   1400045ad:	mov    rbx,QWORD PTR [rsp+0x68]
   1400045b2:	mov    eax,esi
   1400045b4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400045b9:	mov    rdi,QWORD PTR [rsp+0x78]
   1400045be:	add    rsp,0x30
   1400045c2:	pop    r15
   1400045c4:	pop    r14
   1400045c6:	pop    r13
   1400045c8:	pop    r12
   1400045ca:	pop    rbp
   1400045cb:	ret    
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	int3   
   1400045d1:	int3   
   1400045d2:	int3   
   1400045d3:	int3   
   1400045d4:	int3   
   1400045d5:	int3   
   1400045d6:	int3   
   1400045d7:	int3   
   1400045d8:	int3   
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400045e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400045ea:	mov    QWORD PTR [rsp+0x20],rdi
   1400045ef:	push   rbp
   1400045f0:	push   r12
   1400045f2:	push   r13
   1400045f4:	push   r14
   1400045f6:	push   r15
   1400045f8:	mov    rbp,rsp
   1400045fb:	sub    rsp,0x70
   1400045ff:	mov    rax,QWORD PTR [rip+0x5a02]        # 0x14000a008
   140004606:	xor    rax,rsp
   140004609:	mov    QWORD PTR [rbp-0x8],rax
   14000460d:	mov    r14d,DWORD PTR [rcx+0x38]
   140004611:	xor    r13d,r13d
   140004614:	mov    rsi,rcx
   140004617:	cmp    BYTE PTR [rcx+0x18],r13b
   14000461b:	jne    0x140004627
   14000461d:	mov    eax,0x8000ffff
   140004622:	jmp    0x14000479f
   140004627:	cmp    QWORD PTR [rcx+0x20],r13
   14000462b:	je     0x14000461d
   14000462d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004631:	mov    edi,0x4
   140004636:	mov    WORD PTR [rbp-0x50],di
   14000463a:	call   QWORD PTR [rip+0x2d98]        # 0x1400073d8
   140004640:	mov    rcx,QWORD PTR [rsi+0x20]
   140004644:	lea    rdx,[rbp-0x50]
   140004648:	xor    r9d,r9d
   14000464b:	mov    WORD PTR [rbp-0x4e],ax
   14000464f:	mov    r8d,edi
   140004652:	call   0x140004940
   140004657:	mov    ebx,eax
   140004659:	test   eax,eax
   14000465b:	js     0x14000476d
   140004661:	mov    eax,DWORD PTR [rsi+0x28]
   140004664:	lea    ecx,[rax+rax*2]
   140004667:	mov    rax,QWORD PTR [rsi]
   14000466a:	lea    r15d,[rcx*8+0x4]
   140004672:	mov    rbx,QWORD PTR [rax+0x38]
   140004676:	mov    rcx,rbx
   140004679:	call   QWORD PTR [rip+0x2dc1]        # 0x140007440
   14000467f:	lea    edx,[rdi-0x3]
   140004682:	jmp    0x14000472c
   140004687:	mov    eax,DWORD PTR [rbp-0x40]
   14000468a:	lea    rdx,[rbp-0x20]
   14000468e:	mov    DWORD PTR [rbp-0x1c],eax
   140004691:	mov    r9d,edi
   140004694:	mov    eax,DWORD PTR [rbp-0x38]
   140004697:	mov    r8d,0x18
   14000469d:	mov    DWORD PTR [rbp-0x14],eax
   1400046a0:	mov    eax,DWORD PTR [rbp-0x3c]
   1400046a3:	mov    DWORD PTR [rbp-0x18],eax
   1400046a6:	mov    eax,DWORD PTR [rbp-0x28]
   1400046a9:	mov    DWORD PTR [rbp-0xc],eax
   1400046ac:	mov    al,BYTE PTR [rsi+0x3c]
   1400046af:	neg    al
   1400046b1:	mov    DWORD PTR [rbp-0x20],r15d
   1400046b5:	sbb    ecx,ecx
   1400046b7:	and    ecx,r14d
   1400046ba:	mov    DWORD PTR [rbp-0x10],ecx
   1400046bd:	mov    rcx,QWORD PTR [rsi+0x20]
   1400046c1:	call   0x140004940
   1400046c6:	mov    ebx,eax
   1400046c8:	test   eax,eax
   1400046ca:	js     0x14000476d
   1400046d0:	mov    eax,DWORD PTR [rbp-0x40]
   1400046d3:	mov    r9d,r15d
   1400046d6:	mov    rdx,QWORD PTR [rbp-0x48]
   1400046da:	mov    rcx,QWORD PTR [rsi+0x20]
   1400046de:	lea    r12d,[rax+rax*1]
   1400046e2:	mov    r8d,r12d
   1400046e5:	call   0x140004940
   1400046ea:	mov    ebx,eax
   1400046ec:	test   eax,eax
   1400046ee:	js     0x14000476d
   1400046f0:	cmp    BYTE PTR [rsi+0x3c],r13b
   1400046f4:	je     0x140004714
   1400046f6:	mov    r8d,DWORD PTR [rbp-0x28]
   1400046fa:	mov    r9d,r14d
   1400046fd:	mov    rdx,QWORD PTR [rbp-0x30]
   140004701:	mov    rcx,QWORD PTR [rsi+0x20]
   140004705:	call   0x1400047d0
   14000470a:	mov    ebx,eax
   14000470c:	test   eax,eax
   14000470e:	js     0x14000476d
   140004710:	add    r14d,DWORD PTR [rbp-0x28]
   140004714:	mov    rax,QWORD PTR [rsi]
   140004717:	add    edi,0x18
   14000471a:	add    r15d,r12d
   14000471d:	mov    rbx,QWORD PTR [rax+0x38]
   140004721:	mov    rcx,rbx
   140004724:	call   QWORD PTR [rip+0x2d16]        # 0x140007440
   14000472a:	xor    edx,edx
   14000472c:	lea    r8,[rbp-0x48]
   140004730:	mov    rcx,rsi
   140004733:	call   rbx
   140004735:	mov    ebx,eax
   140004737:	test   eax,eax
   140004739:	je     0x140004687
   14000473f:	cmp    eax,0x80070103
   140004744:	jne    0x14000476d
   140004746:	mov    rax,QWORD PTR [rsi]
   140004749:	mov    rbx,QWORD PTR [rsi+0x20]
   14000474d:	mov    rdi,QWORD PTR [rax+0x40]
   140004751:	mov    rcx,rdi
   140004754:	call   QWORD PTR [rip+0x2ce6]        # 0x140007440
   14000475a:	mov    r8d,r14d
   14000475d:	mov    rdx,rbx
   140004760:	mov    rcx,rsi
   140004763:	call   rdi
   140004765:	test   eax,eax
   140004767:	mov    ebx,eax
   140004769:	cmovns ebx,r13d
   14000476d:	mov    rcx,QWORD PTR [rsi+0x20]
   140004771:	lea    rax,[rcx-0x1]
   140004775:	cmp    rax,0xfffffffffffffffd
   140004779:	ja     0x140004781
   14000477b:	call   QWORD PTR [rip+0x2997]        # 0x140007118
   140004781:	mov    QWORD PTR [rsi+0x20],r13
   140004785:	mov    rcx,r13
   140004788:	test   r13,r13
   14000478b:	je     0x14000479d
   14000478d:	cmp    rcx,0xffffffffffffffff
   140004791:	je     0x140004799
   140004793:	call   QWORD PTR [rip+0x297f]        # 0x140007118
   140004799:	mov    QWORD PTR [rsi+0x20],r13
   14000479d:	mov    eax,ebx
   14000479f:	mov    rcx,QWORD PTR [rbp-0x8]
   1400047a3:	xor    rcx,rsp
   1400047a6:	call   0x140005910
   1400047ab:	lea    r11,[rsp+0x70]
   1400047b0:	mov    rbx,QWORD PTR [r11+0x38]
   1400047b4:	mov    rsi,QWORD PTR [r11+0x40]
   1400047b8:	mov    rdi,QWORD PTR [r11+0x48]
   1400047bc:	mov    rsp,r11
   1400047bf:	pop    r15
   1400047c1:	pop    r14
   1400047c3:	pop    r13
   1400047c5:	pop    r12
   1400047c7:	pop    rbp
   1400047c8:	ret    
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    r11,rsp
   1400047d3:	mov    QWORD PTR [r11+0x8],rbx
   1400047d7:	mov    QWORD PTR [r11+0x10],rbp
   1400047db:	mov    QWORD PTR [r11+0x18],rsi
   1400047df:	mov    QWORD PTR [r11+0x20],rdi
   1400047e3:	push   r12
   1400047e5:	push   r14
   1400047e7:	push   r15
   1400047e9:	sub    rsp,0x50
   1400047ed:	and    DWORD PTR [rsp+0x40],0x0
   1400047f2:	mov    rax,rdx
   1400047f5:	xor    ebx,ebx
   1400047f7:	mov    r15d,r9d
   1400047fa:	and    QWORD PTR [r11-0x38],rbx
   1400047fe:	mov    r14d,r8d
   140004801:	mov    r12,rcx
   140004804:	mov    DWORD PTR [rsp+0x28],0x80
   14000480c:	xor    r9d,r9d
   14000480f:	mov    DWORD PTR [rsp+0x20],0x3
   140004817:	lea    r8d,[rbx+0x1]
   14000481b:	mov    edx,0x80000000
   140004820:	mov    rcx,rax
   140004823:	xor    esi,esi
   140004825:	xor    edi,edi
   140004827:	call   QWORD PTR [rip+0x28c3]        # 0x1400070f0
   14000482d:	test   rax,rax
   140004830:	je     0x14000483f
   140004832:	mov    rbx,rax
   140004835:	cmp    rax,0xffffffffffffffff
   140004839:	je     0x1400048ce
   14000483f:	lea    rdx,[rsp+0x40]
   140004844:	mov    rcx,rbx
   140004847:	call   0x140003c20
   14000484c:	mov    ebp,eax
   14000484e:	test   eax,eax
   140004850:	js     0x1400048e2
   140004856:	cmp    DWORD PTR [rsp+0x40],r14d
   14000485b:	je     0x140004864
   14000485d:	mov    ebp,0x800706ab
   140004862:	jmp    0x1400048e2
   140004864:	and    QWORD PTR [rsp+0x28],rsi
   140004869:	xor    r9d,r9d
   14000486c:	and    DWORD PTR [rsp+0x20],esi
   140004870:	xor    edx,edx
   140004872:	mov    rcx,rbx
   140004875:	lea    r8d,[r9+0x2]
   140004879:	call   QWORD PTR [rip+0x28e9]        # 0x140007168
   14000487f:	test   rax,rax
   140004882:	je     0x1400048ce
   140004884:	mov    rsi,rax
   140004887:	cmp    rax,0xffffffffffffffff
   14000488b:	je     0x1400048ce
   14000488d:	and    QWORD PTR [rsp+0x20],rdi
   140004892:	xor    r9d,r9d
   140004895:	xor    r8d,r8d
   140004898:	mov    rcx,rax
   14000489b:	lea    edx,[r9+0x4]
   14000489f:	call   QWORD PTR [rip+0x28d3]        # 0x140007178
   1400048a5:	test   rax,rax
   1400048a8:	je     0x1400048ce
   1400048aa:	mov    rdi,rax
   1400048ad:	cmp    rax,0xffffffffffffffff
   1400048b1:	je     0x1400048ce
   1400048b3:	mov    r9d,r15d
   1400048b6:	mov    r8d,r14d
   1400048b9:	mov    rdx,rax
   1400048bc:	mov    rcx,r12
   1400048bf:	call   0x140004940
   1400048c4:	mov    ebp,eax
   1400048c6:	test   eax,eax
   1400048c8:	js     0x1400048e2
   1400048ca:	xor    ebp,ebp
   1400048cc:	jmp    0x1400048e2
   1400048ce:	call   QWORD PTR [rip+0x27e4]        # 0x1400070b8
   1400048d4:	movzx  ebp,ax
   1400048d7:	or     ebp,0x80070000
   1400048dd:	test   eax,eax
   1400048df:	cmovle ebp,eax
   1400048e2:	test   rdi,rdi
   1400048e5:	je     0x1400048f0
   1400048e7:	mov    rcx,rdi
   1400048ea:	call   QWORD PTR [rip+0x2880]        # 0x140007170
   1400048f0:	lea    rax,[rsi-0x1]
   1400048f4:	cmp    rax,0xfffffffffffffffd
   1400048f8:	ja     0x140004903
   1400048fa:	mov    rcx,rsi
   1400048fd:	call   QWORD PTR [rip+0x2815]        # 0x140007118
   140004903:	lea    rcx,[rbx-0x1]
   140004907:	cmp    rcx,0xfffffffffffffffd
   14000490b:	ja     0x140004916
   14000490d:	mov    rcx,rbx
   140004910:	call   QWORD PTR [rip+0x2802]        # 0x140007118
   140004916:	lea    r11,[rsp+0x50]
   14000491b:	mov    eax,ebp
   14000491d:	mov    rbx,QWORD PTR [r11+0x20]
   140004921:	mov    rbp,QWORD PTR [r11+0x28]
   140004925:	mov    rsi,QWORD PTR [r11+0x30]
   140004929:	mov    rdi,QWORD PTR [r11+0x38]
   14000492d:	mov    rsp,r11
   140004930:	pop    r15
   140004932:	pop    r14
   140004934:	pop    r12
   140004936:	ret    
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    r11,rsp
   140004943:	sub    rsp,0x58
   140004947:	and    QWORD PTR [r11-0x28],0x0
   14000494c:	xor    eax,eax
   14000494e:	mov    QWORD PTR [r11-0x18],rax
   140004952:	mov    QWORD PTR [r11-0x20],rax
   140004956:	mov    QWORD PTR [r11-0x10],rax
   14000495a:	lea    rax,[r11-0x28]
   14000495e:	mov    DWORD PTR [r11-0x18],r9d
   140004962:	lea    r9,[r11+0x20]
   140004966:	mov    QWORD PTR [r11-0x38],rax
   14000496a:	call   QWORD PTR [rip+0x2790]        # 0x140007100
   140004970:	test   eax,eax
   140004972:	jne    0x14000498b
   140004974:	call   QWORD PTR [rip+0x273e]        # 0x1400070b8
   14000497a:	mov    ecx,eax
   14000497c:	movzx  eax,ax
   14000497f:	or     eax,0x80070000
   140004984:	test   ecx,ecx
   140004986:	cmovle eax,ecx
   140004989:	jmp    0x14000498d
   14000498b:	xor    eax,eax
   14000498d:	add    rsp,0x58
   140004991:	ret    
   140004992:	int3   
   140004993:	int3   
   140004994:	int3   
   140004995:	int3   
   140004996:	int3   
   140004997:	int3   
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	rex push rbx
   1400049a2:	sub    rsp,0x20
   1400049a6:	mov    eax,r8d
   1400049a9:	mov    rbx,rdx
   1400049ac:	mov    edx,eax
   1400049ae:	mov    rcx,rbx
   1400049b1:	xor    r9d,r9d
   1400049b4:	xor    r8d,r8d
   1400049b7:	call   QWORD PTR [rip+0x272b]        # 0x1400070e8
   1400049bd:	cmp    eax,0xffffffff
   1400049c0:	jne    0x1400049d9
   1400049c2:	call   QWORD PTR [rip+0x26f0]        # 0x1400070b8
   1400049c8:	mov    ecx,eax
   1400049ca:	movzx  eax,ax
   1400049cd:	or     eax,0x80070000
   1400049d2:	test   ecx,ecx
   1400049d4:	cmovle eax,ecx
   1400049d7:	jmp    0x1400049e8
   1400049d9:	mov    rcx,rbx
   1400049dc:	call   QWORD PTR [rip+0x26fe]        # 0x1400070e0
   1400049e2:	test   eax,eax
   1400049e4:	je     0x1400049c2
   1400049e6:	xor    eax,eax
   1400049e8:	add    rsp,0x20
   1400049ec:	pop    rbx
   1400049ed:	ret    
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	int3   
   1400049f1:	int3   
   1400049f2:	int3   
   1400049f3:	int3   
   1400049f4:	int3   
   1400049f5:	int3   
   1400049f6:	int3   
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	rex push rbx
   140004a02:	sub    rsp,0x20
   140004a06:	mov    rcx,QWORD PTR [rcx+0x10]
   140004a0a:	test   edx,edx
   140004a0c:	mov    rbx,r8
   140004a0f:	setne  dl
   140004a12:	call   QWORD PTR [rip+0x29d0]        # 0x1400073e8
   140004a18:	test   rax,rax
   140004a1b:	jne    0x140004a24
   140004a1d:	mov    eax,0x80070103
   140004a22:	jmp    0x140004a42
   140004a24:	mov    rax,QWORD PTR [rax+0x8]
   140004a28:	movups xmm0,XMMWORD PTR [rax]
   140004a2b:	movups XMMWORD PTR [rbx],xmm0
   140004a2e:	movups xmm1,XMMWORD PTR [rax+0x10]
   140004a32:	movups XMMWORD PTR [rbx+0x10],xmm1
   140004a36:	movsd  xmm0,QWORD PTR [rax+0x20]
   140004a3b:	xor    eax,eax
   140004a3d:	movsd  QWORD PTR [rbx+0x20],xmm0
   140004a42:	add    rsp,0x20
   140004a46:	pop    rbx
   140004a47:	ret    
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	sub    rsp,0x38
   140004a54:	mov    rcx,QWORD PTR [rdx]
   140004a57:	or     edx,0xffffffff
   140004a5a:	mov    r8,QWORD PTR [r8]
   140004a5d:	mov    r9d,edx
   140004a60:	mov    DWORD PTR [rsp+0x20],0x1
   140004a68:	call   QWORD PTR [rip+0x27a2]        # 0x140007210
   140004a6e:	mov    ecx,eax
   140004a70:	xor    eax,eax
   140004a72:	sub    ecx,0x2
   140004a75:	js     0x140004a7e
   140004a77:	test   ecx,ecx
   140004a79:	setle  al
   140004a7c:	inc    eax
   140004a7e:	add    rsp,0x38
   140004a82:	ret    
   140004a83:	int3   
   140004a84:	int3   
   140004a85:	int3   
   140004a86:	int3   
   140004a87:	int3   
   140004a88:	int3   
   140004a89:	int3   
   140004a8a:	int3   
   140004a8b:	int3   
   140004a8c:	int3   
   140004a8d:	int3   
   140004a8e:	int3   
   140004a8f:	int3   
   140004a90:	mov    QWORD PTR [rsp+0x8],rbx
   140004a95:	mov    QWORD PTR [rsp+0x10],rsi
   140004a9a:	push   rdi
   140004a9b:	sub    rsp,0x20
   140004a9f:	xor    edi,edi
   140004aa1:	mov    rsi,rcx
   140004aa4:	mov    QWORD PTR [r8],rdi
   140004aa7:	cmp    DWORD PTR [rdx],edi
   140004aa9:	jne    0x140004acc
   140004aab:	mov    eax,DWORD PTR [rip+0x2e2b]        # 0x1400078dc
   140004ab1:	cmp    DWORD PTR [rdx+0x4],eax
   140004ab4:	jne    0x140004acc
   140004ab6:	mov    eax,DWORD PTR [rip+0x2e24]        # 0x1400078e0
   140004abc:	cmp    DWORD PTR [rdx+0x8],eax
   140004abf:	jne    0x140004acc
   140004ac1:	mov    eax,DWORD PTR [rip+0x2e1d]        # 0x1400078e4
   140004ac7:	cmp    DWORD PTR [rdx+0xc],eax
   140004aca:	je     0x140004af5
   140004acc:	cmp    DWORD PTR [rdx],0x1da92ba1
   140004ad2:	jne    0x140004b0f
   140004ad4:	mov    eax,DWORD PTR [rip+0x3472]        # 0x140007f4c
   140004ada:	cmp    DWORD PTR [rdx+0x4],eax
   140004add:	jne    0x140004b0f
   140004adf:	mov    eax,DWORD PTR [rip+0x346b]        # 0x140007f50
   140004ae5:	cmp    DWORD PTR [rdx+0x8],eax
   140004ae8:	jne    0x140004b0f
   140004aea:	mov    eax,DWORD PTR [rip+0x3464]        # 0x140007f54
   140004af0:	cmp    DWORD PTR [rdx+0xc],eax
   140004af3:	jne    0x140004b0f
   140004af5:	mov    QWORD PTR [r8],rcx
   140004af8:	mov    rax,QWORD PTR [rcx]
   140004afb:	mov    rbx,QWORD PTR [rax+0x8]
   140004aff:	mov    rcx,rbx
   140004b02:	call   QWORD PTR [rip+0x2938]        # 0x140007440
   140004b08:	mov    rcx,rsi
   140004b0b:	call   rbx
   140004b0d:	jmp    0x140004b14
   140004b0f:	mov    edi,0x80004002
   140004b14:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b19:	mov    eax,edi
   140004b1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b20:	add    rsp,0x20
   140004b24:	pop    rdi
   140004b25:	ret    
   140004b26:	int3   
   140004b27:	int3   
   140004b28:	int3   
   140004b29:	int3   
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	mov    QWORD PTR [rsp+0x8],rbx
   140004b35:	mov    QWORD PTR [rsp+0x10],rsi
   140004b3a:	push   rdi
   140004b3b:	sub    rsp,0x20
   140004b3f:	mov    rsi,rcx
   140004b42:	or     edi,0xffffffff
   140004b45:	lock xadd DWORD PTR [rcx+0xc],edi
   140004b4a:	sub    edi,0x1
   140004b4d:	jne    0x140004b8d
   140004b4f:	test   rcx,rcx
   140004b52:	je     0x140004b6c
   140004b54:	mov    rax,QWORD PTR [rcx]
   140004b57:	mov    rbx,QWORD PTR [rax+0x30]
   140004b5b:	mov    rcx,rbx
   140004b5e:	call   QWORD PTR [rip+0x28dc]        # 0x140007440
   140004b64:	lea    edx,[rdi+0x1]
   140004b67:	mov    rcx,rsi
   140004b6a:	call   rbx
   140004b6c:	mov    rsi,QWORD PTR [rip+0x5b95]        # 0x14000a708
   140004b73:	test   rsi,rsi
   140004b76:	je     0x140004b8d
   140004b78:	mov    rdx,QWORD PTR [rsi]
   140004b7b:	mov    rbx,QWORD PTR [rdx+0x10]
   140004b7f:	mov    rcx,rbx
   140004b82:	call   QWORD PTR [rip+0x28b8]        # 0x140007440
   140004b88:	mov    rcx,rsi
   140004b8b:	call   rbx
   140004b8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b92:	mov    eax,edi
   140004b94:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b99:	add    rsp,0x20
   140004b9d:	pop    rdi
   140004b9e:	ret    
   140004b9f:	int3   
   140004ba0:	int3   
   140004ba1:	int3   
   140004ba2:	int3   
   140004ba3:	int3   
   140004ba4:	int3   
   140004ba5:	int3   
   140004ba6:	int3   
   140004ba7:	int3   
   140004ba8:	mov    QWORD PTR [rsp+0x10],rbx
   140004bad:	mov    QWORD PTR [rsp+0x18],rbp
   140004bb2:	mov    QWORD PTR [rsp+0x20],rsi
   140004bb7:	push   rdi
   140004bb8:	sub    rsp,0x20
   140004bbc:	mov    rbx,rcx
   140004bbf:	and    QWORD PTR [rsp+0x30],0x0
   140004bc5:	lea    rdx,[rsp+0x30]
   140004bca:	mov    rcx,rbx
   140004bcd:	call   QWORD PTR [rip+0x27f5]        # 0x1400073c8
   140004bd3:	test   rax,rax
   140004bd6:	je     0x140004c1b
   140004bd8:	mov    rsi,QWORD PTR [rax]
   140004bdb:	mov    rdx,rax
   140004bde:	mov    rbp,QWORD PTR [rax+0x8]
   140004be2:	mov    rcx,rbx
   140004be5:	call   QWORD PTR [rip+0x27d5]        # 0x1400073c0
   140004beb:	mov    rdi,QWORD PTR [rbx+0x68]
   140004bef:	test   rdi,rdi
   140004bf2:	je     0x140004c02
   140004bf4:	mov    rcx,rdi
   140004bf7:	call   QWORD PTR [rip+0x2843]        # 0x140007440
   140004bfd:	mov    rcx,rsi
   140004c00:	call   rdi
   140004c02:	mov    rdi,QWORD PTR [rbx+0x70]
   140004c06:	test   rdi,rdi
   140004c09:	je     0x140004bbf
   140004c0b:	mov    rcx,rdi
   140004c0e:	call   QWORD PTR [rip+0x282c]        # 0x140007440
   140004c14:	mov    rcx,rbp
   140004c17:	call   rdi
   140004c19:	jmp    0x140004bbf
   140004c1b:	mov    rbx,QWORD PTR [rsp+0x38]
   140004c20:	mov    rbp,QWORD PTR [rsp+0x40]
   140004c25:	mov    rsi,QWORD PTR [rsp+0x48]
   140004c2a:	add    rsp,0x20
   140004c2e:	pop    rdi
   140004c2f:	ret    
   140004c30:	int3   
   140004c31:	int3   
   140004c32:	int3   
   140004c33:	int3   
   140004c34:	int3   
   140004c35:	int3   
   140004c36:	int3   
   140004c37:	int3   
   140004c38:	int3   
   140004c39:	int3   
   140004c3a:	int3   
   140004c3b:	int3   
   140004c3c:	int3   
   140004c3d:	int3   
   140004c3e:	int3   
   140004c3f:	int3   
   140004c40:	mov    r11,rsp
   140004c43:	sub    rsp,0x58
   140004c47:	mov    rax,QWORD PTR [r8]
   140004c4a:	xor    ecx,ecx
   140004c4c:	mov    r8,QWORD PTR [rdx]
   140004c4f:	or     r9d,0xffffffff
   140004c53:	mov    QWORD PTR [r11-0x18],rcx
   140004c57:	xor    edx,edx
   140004c59:	mov    QWORD PTR [r11-0x20],rcx
   140004c5d:	mov    QWORD PTR [r11-0x28],rcx
   140004c61:	mov    DWORD PTR [r11-0x30],r9d
   140004c65:	mov    QWORD PTR [r11-0x38],rax
   140004c69:	call   QWORD PTR [rip+0x2599]        # 0x140007208
   140004c6f:	mov    ecx,eax
   140004c71:	cmp    eax,0x3
   140004c74:	jne    0x140004c7b
   140004c76:	lea    eax,[rcx-0x2]
   140004c79:	jmp    0x140004c84
   140004c7b:	dec    ecx
   140004c7d:	neg    ecx
   140004c7f:	sbb    eax,eax
   140004c81:	and    eax,0x2
   140004c84:	add    rsp,0x58
   140004c88:	ret    
   140004c89:	int3   
   140004c8a:	int3   
   140004c8b:	int3   
   140004c8c:	int3   
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	sub    rsp,0x28
   140004c94:	and    QWORD PTR [rsp+0x40],0x0
   140004c9a:	mov    ecx,edx
   140004c9c:	lea    rdx,[rsp+0x40]
   140004ca1:	call   0x140005058
   140004ca6:	mov    rax,QWORD PTR [rsp+0x40]
   140004cab:	add    rsp,0x28
   140004caf:	ret    
   140004cb0:	int3   
   140004cb1:	int3   
   140004cb2:	int3   
   140004cb3:	int3   
   140004cb4:	int3   
   140004cb5:	int3   
   140004cb6:	int3   
   140004cb7:	int3   
   140004cb8:	int3   
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	int3   
   140004cbd:	int3   
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	sub    rsp,0x28
   140004cc4:	test   rdx,rdx
   140004cc7:	je     0x140004cdb
   140004cc9:	mov    rcx,QWORD PTR [rip+0x5a48]        # 0x14000a718
   140004cd0:	mov    r8,rdx
   140004cd3:	xor    edx,edx
   140004cd5:	call   QWORD PTR [rip+0x26bd]        # 0x140007398
   140004cdb:	add    rsp,0x28
   140004cdf:	ret    
   140004ce0:	int3   
   140004ce1:	int3   
   140004ce2:	int3   
   140004ce3:	int3   
   140004ce4:	int3   
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	test   rcx,rcx
   140004ceb:	je     0x140004d11
   140004ced:	push   rbx
   140004cee:	sub    rsp,0x20
   140004cf2:	mov    rbx,rcx
   140004cf5:	call   0x140004ba8
   140004cfa:	mov    rcx,QWORD PTR [rip+0x5a17]        # 0x14000a718
   140004d01:	mov    r8,rbx
   140004d04:	xor    edx,edx
   140004d06:	call   QWORD PTR [rip+0x268c]        # 0x140007398
   140004d0c:	add    rsp,0x20
   140004d10:	pop    rbx
   140004d11:	ret    
   140004d12:	int3   
   140004d13:	int3   
   140004d14:	int3   
   140004d15:	int3   
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	mov    r11,rsp
   140004d1b:	mov    QWORD PTR [r11+0x10],rbx
   140004d1f:	mov    QWORD PTR [r11+0x18],rbp
   140004d23:	mov    QWORD PTR [r11+0x20],rsi
   140004d27:	push   rdi
   140004d28:	sub    rsp,0x40
   140004d2c:	mov    rax,QWORD PTR [rip+0x52d5]        # 0x14000a008
   140004d33:	xor    rax,rsp
   140004d36:	mov    QWORD PTR [rsp+0x30],rax
   140004d3b:	and    DWORD PTR [rsp+0x20],0x0
   140004d40:	movzx  ebp,dx
   140004d43:	mov    rsi,rcx
   140004d46:	movabs rax,0x5c003a0058
   140004d50:	xor    edx,edx
   140004d52:	mov    QWORD PTR [r11-0x20],rax
   140004d56:	lea    rcx,[rip+0x31fb]        # 0x140007f58
   140004d5d:	xor    r8d,r8d
   140004d60:	call   QWORD PTR [rip+0x23da]        # 0x140007140
   140004d66:	mov    rbx,rax
   140004d69:	test   rax,rax
   140004d6c:	je     0x140004dbc
   140004d6e:	lea    rdx,[rip+0x31fb]        # 0x140007f70
   140004d75:	mov    rcx,rax
   140004d78:	call   QWORD PTR [rip+0x23d2]        # 0x140007150
   140004d7e:	mov    rdi,rax
   140004d81:	test   rax,rax
   140004d84:	je     0x140004db3
   140004d86:	mov    rcx,rax
   140004d89:	mov    WORD PTR [rsp+0x28],bp
   140004d8e:	call   QWORD PTR [rip+0x26ac]        # 0x140007440
   140004d94:	lea    rdx,[rsp+0x20]
   140004d99:	lea    rcx,[rsp+0x28]
   140004d9e:	call   rdi
   140004da0:	cmp    eax,0x1
   140004da3:	sete   al
   140004da6:	mov    BYTE PTR [rsi],al
   140004da8:	test   al,al
   140004daa:	je     0x140004db3
   140004dac:	mov    eax,DWORD PTR [rsp+0x20]
   140004db0:	mov    DWORD PTR [rsi+0x4],eax
   140004db3:	mov    rcx,rbx
   140004db6:	call   QWORD PTR [rip+0x238c]        # 0x140007148
   140004dbc:	mov    rcx,QWORD PTR [rsp+0x30]
   140004dc1:	xor    rcx,rsp
   140004dc4:	call   0x140005910
   140004dc9:	mov    rbx,QWORD PTR [rsp+0x58]
   140004dce:	mov    rbp,QWORD PTR [rsp+0x60]
   140004dd3:	mov    rsi,QWORD PTR [rsp+0x68]
   140004dd8:	add    rsp,0x40
   140004ddc:	pop    rdi
   140004ddd:	ret    
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	int3   
   140004de1:	int3   
   140004de2:	int3   
   140004de3:	int3   
   140004de4:	mov    r11,rsp
   140004de7:	sub    rsp,0x78
   140004deb:	mov    rax,QWORD PTR [rip+0x5216]        # 0x14000a008
   140004df2:	xor    rax,rsp
   140004df5:	mov    QWORD PTR [rsp+0x60],rax
   140004dfa:	xor    r8d,r8d
   140004dfd:	mov    DWORD PTR [rsp+0x54],edx
   140004e01:	mov    QWORD PTR [r11-0x40],r8
   140004e05:	mov    edx,0x9030c
   140004e0a:	mov    DWORD PTR [r11-0x38],r8d
   140004e0e:	mov    DWORD PTR [rsp+0x4c],0x2
   140004e16:	lea    eax,[r8+0x1]
   140004e1a:	mov    DWORD PTR [rsp+0x48],eax
   140004e1e:	lea    r9d,[r8+0x14]
   140004e22:	mov    DWORD PTR [rsp+0x50],eax
   140004e26:	xor    eax,eax
   140004e28:	mov    DWORD PTR [rsp+0x58],eax
   140004e2c:	lea    rax,[r11-0x38]
   140004e30:	mov    QWORD PTR [r11-0x48],rax
   140004e34:	mov    DWORD PTR [r11-0x50],r8d
   140004e38:	mov    QWORD PTR [r11-0x58],r8
   140004e3c:	lea    r8,[r11-0x30]
   140004e40:	call   QWORD PTR [rip+0x22ea]        # 0x140007130
   140004e46:	mov    rcx,QWORD PTR [rsp+0x60]
   140004e4b:	xor    rcx,rsp
   140004e4e:	call   0x140005910
   140004e53:	add    rsp,0x78
   140004e57:	ret    
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	mov    QWORD PTR [rsp+0x8],rbx
   140004e65:	mov    QWORD PTR [rsp+0x10],rbp
   140004e6a:	mov    QWORD PTR [rsp+0x20],rsi
   140004e6f:	push   rdi
   140004e70:	sub    rsp,0x20
   140004e74:	mov    edi,edx
   140004e76:	mov    rbx,rcx
   140004e79:	cmp    edx,0x3fffffff
   140004e7f:	jbe    0x140004e88
   140004e81:	mov    eax,0x80070503
   140004e86:	jmp    0x140004ef1
   140004e88:	xor    ebp,ebp
   140004e8a:	test   edx,edx
   140004e8c:	jne    0x140004eaf
   140004e8e:	mov    r8,QWORD PTR [rcx+0x8]
   140004e92:	test   r8,r8
   140004e95:	je     0x140004eaa
   140004e97:	mov    rcx,QWORD PTR [rip+0x587a]        # 0x14000a718
   140004e9e:	call   QWORD PTR [rip+0x24f4]        # 0x140007398
   140004ea4:	mov    QWORD PTR [rbx+0x8],rbp
   140004ea8:	mov    DWORD PTR [rbx],ebp
   140004eaa:	mov    DWORD PTR [rbx+0x10],ebp
   140004ead:	jmp    0x140004eef
   140004eaf:	lea    esi,[rdi+0x1]
   140004eb2:	cmp    esi,DWORD PTR [rcx+0x10]
   140004eb5:	je     0x140004eef
   140004eb7:	mov    rcx,QWORD PTR [rcx+0x8]
   140004ebb:	lea    r8,[rsp+0x40]
   140004ec0:	mov    edx,esi
   140004ec2:	add    rdx,rdx
   140004ec5:	call   0x1400050ac
   140004eca:	test   eax,eax
   140004ecc:	js     0x140004ef1
   140004ece:	mov    rcx,QWORD PTR [rsp+0x40]
   140004ed3:	mov    QWORD PTR [rbx+0x8],rcx
   140004ed7:	mov    DWORD PTR [rbx+0x10],esi
   140004eda:	cmp    DWORD PTR [rbx],edi
   140004edc:	jbe    0x140004ee6
   140004ede:	mov    DWORD PTR [rbx],edi
   140004ee0:	mov    WORD PTR [rcx+rdi*2],bp
   140004ee4:	jmp    0x140004eef
   140004ee6:	jae    0x140004eef
   140004ee8:	cmp    DWORD PTR [rbx],ebp
   140004eea:	jne    0x140004eef
   140004eec:	mov    WORD PTR [rcx],bp
   140004eef:	xor    eax,eax
   140004ef1:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ef6:	mov    rbp,QWORD PTR [rsp+0x38]
   140004efb:	mov    rsi,QWORD PTR [rsp+0x48]
   140004f00:	add    rsp,0x20
   140004f04:	pop    rdi
   140004f05:	ret    
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	mov    rax,rsp
   140004f0f:	mov    QWORD PTR [rax+0x8],rbx
   140004f13:	mov    QWORD PTR [rax+0x10],rbp
   140004f17:	mov    QWORD PTR [rax+0x18],rsi
   140004f1b:	mov    QWORD PTR [rax+0x20],rdi
   140004f1f:	push   r14
   140004f21:	sub    rsp,0x20
   140004f25:	mov    ebx,r8d
   140004f28:	mov    rsi,rdx
   140004f2b:	mov    rdi,rcx
   140004f2e:	lea    ebp,[rbx+rbx*1]
   140004f31:	cmp    r8d,0x7fffffff
   140004f38:	jbe    0x140004f44
   140004f3a:	mov    eax,0x80070216
   140004f3f:	jmp    0x140004fce
   140004f44:	mov    eax,DWORD PTR [rcx+0x10]
   140004f47:	xor    r14d,r14d
   140004f4a:	mov    ecx,r14d
   140004f4d:	test   eax,eax
   140004f4f:	je     0x140004f54
   140004f51:	lea    ecx,[rax-0x1]
   140004f54:	cmp    ebx,ecx
   140004f56:	ja     0x140004f63
   140004f58:	test   eax,eax
   140004f5a:	je     0x140004f87
   140004f5c:	dec    eax
   140004f5e:	cmp    eax,0x20
   140004f61:	jbe    0x140004f87
   140004f63:	cmp    ebx,0x20
   140004f66:	jbe    0x140004f6c
   140004f68:	mov    edx,ebx
   140004f6a:	jmp    0x140004f7b
   140004f6c:	mov    edx,0x8
   140004f71:	cmp    ebx,edx
   140004f73:	jbe    0x140004f7b
   140004f75:	add    edx,edx
   140004f77:	cmp    edx,ebx
   140004f79:	jb     0x140004f75
   140004f7b:	mov    rcx,rdi
   140004f7e:	call   0x140004e60
   140004f83:	test   eax,eax
   140004f85:	js     0x140004fce
   140004f87:	mov    eax,DWORD PTR [rdi+0x10]
   140004f8a:	test   eax,eax
   140004f8c:	jne    0x140004f93
   140004f8e:	mov    eax,r14d
   140004f91:	jmp    0x140004f95
   140004f93:	dec    eax
   140004f95:	cmp    ebx,eax
   140004f97:	jbe    0x140004fa7
   140004f99:	mov    edx,ebx
   140004f9b:	mov    rcx,rdi
   140004f9e:	call   0x140004e60
   140004fa3:	test   eax,eax
   140004fa5:	js     0x140004fce
   140004fa7:	mov    DWORD PTR [rdi],ebx
   140004fa9:	test   ebx,ebx
   140004fab:	je     0x140004fb6
   140004fad:	mov    rax,QWORD PTR [rdi+0x8]
   140004fb1:	mov    WORD PTR [rax+rbx*2],r14w
   140004fb6:	mov    eax,r14d
   140004fb9:	test   eax,eax
   140004fbb:	js     0x140004fce
   140004fbd:	mov    rcx,QWORD PTR [rdi+0x8]
   140004fc1:	mov    rdx,rsi
   140004fc4:	mov    r8d,ebp
   140004fc7:	call   0x1400060c2
   140004fcc:	xor    eax,eax
   140004fce:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fd3:	mov    rbp,QWORD PTR [rsp+0x38]
   140004fd8:	mov    rsi,QWORD PTR [rsp+0x40]
   140004fdd:	mov    rdi,QWORD PTR [rsp+0x48]
   140004fe2:	add    rsp,0x20
   140004fe6:	pop    r14
   140004fe8:	ret    
   140004fe9:	int3   
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	rex push rbx
   140004ff2:	sub    rsp,0x30
   140004ff6:	mov    rbx,rdx
   140004ff9:	test   rcx,rcx
   140004ffc:	jne    0x140005005
   140004ffe:	mov    eax,0x80070057
   140005003:	jmp    0x14000504a
   140005005:	test   rdx,rdx
   140005008:	je     0x140004ffe
   14000500a:	mov    rdx,rcx
   14000500d:	mov    r8b,0x1
   140005010:	lea    rcx,[rsp+0x20]
   140005015:	call   QWORD PTR [rip+0x239d]        # 0x1400073b8
   14000501b:	test   eax,eax
   14000501d:	jns    0x140005025
   14000501f:	bts    eax,0x1c
   140005023:	jmp    0x14000504a
   140005025:	movzx  r8d,WORD PTR [rsp+0x20]
   14000502b:	mov    rcx,rbx
   14000502e:	mov    rdx,QWORD PTR [rsp+0x28]
   140005033:	shr    r8d,1
   140005036:	call   0x140004f0c
   14000503b:	lea    rcx,[rsp+0x20]
   140005040:	mov    ebx,eax
   140005042:	call   QWORD PTR [rip+0x2368]        # 0x1400073b0
   140005048:	mov    eax,ebx
   14000504a:	add    rsp,0x30
   14000504e:	pop    rbx
   14000504f:	ret    
   140005050:	int3   
   140005051:	int3   
   140005052:	int3   
   140005053:	int3   
   140005054:	int3   
   140005055:	int3   
   140005056:	int3   
   140005057:	int3   
   140005058:	rex push rbx
   14000505a:	sub    rsp,0x20
   14000505e:	mov    r8,rcx
   140005061:	mov    rbx,rdx
   140005064:	mov    rcx,QWORD PTR [rip+0x56ad]        # 0x14000a718
   14000506b:	test   rcx,rcx
   14000506e:	jne    0x140005084
   140005070:	mov    rax,QWORD PTR gs:0x60
   140005079:	mov    rcx,QWORD PTR [rax+0x30]
   14000507d:	mov    QWORD PTR [rip+0x5694],rcx        # 0x14000a718
   140005084:	xor    edx,edx
   140005086:	call   QWORD PTR [rip+0x231c]        # 0x1400073a8
   14000508c:	test   rax,rax
   14000508f:	jne    0x140005098
   140005091:	mov    eax,0x8007000e
   140005096:	jmp    0x14000509d
   140005098:	mov    QWORD PTR [rbx],rax
   14000509b:	xor    eax,eax
   14000509d:	add    rsp,0x20
   1400050a1:	pop    rbx
   1400050a2:	ret    
   1400050a3:	int3   
   1400050a4:	int3   
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	int3   
   1400050a9:	int3   
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	rex push rbx
   1400050ae:	sub    rsp,0x20
   1400050b2:	mov    rbx,r8
   1400050b5:	mov    r8,rcx
   1400050b8:	mov    rcx,QWORD PTR [rip+0x5659]        # 0x14000a718
   1400050bf:	test   rcx,rcx
   1400050c2:	jne    0x1400050d8
   1400050c4:	mov    rax,QWORD PTR gs:0x60
   1400050cd:	mov    rcx,QWORD PTR [rax+0x30]
   1400050d1:	mov    QWORD PTR [rip+0x5640],rcx        # 0x14000a718
   1400050d8:	test   r8,r8
   1400050db:	jne    0x1400050ea
   1400050dd:	mov    r8,rdx
   1400050e0:	xor    edx,edx
   1400050e2:	call   QWORD PTR [rip+0x22c0]        # 0x1400073a8
   1400050e8:	jmp    0x1400050f5
   1400050ea:	mov    r9,rdx
   1400050ed:	xor    edx,edx
   1400050ef:	call   QWORD PTR [rip+0x22ab]        # 0x1400073a0
   1400050f5:	mov    QWORD PTR [rbx],rax
   1400050f8:	neg    rax
   1400050fb:	sbb    eax,eax
   1400050fd:	not    eax
   1400050ff:	and    eax,0x8007000e
   140005104:	add    rsp,0x20
   140005108:	pop    rbx
   140005109:	ret    
   14000510a:	int3   
   14000510b:	int3   
   14000510c:	int3   
   14000510d:	int3   
   14000510e:	int3   
   14000510f:	int3   
   140005110:	rex push rbx
   140005112:	sub    rsp,0x20
   140005116:	mov    rbx,rcx
   140005119:	mov    rcx,QWORD PTR [rcx+0x8]
   14000511d:	test   rcx,rcx
   140005120:	je     0x140005142
   140005122:	call   QWORD PTR [rip+0x2190]        # 0x1400072b8
   140005128:	test   eax,eax
   14000512a:	jne    0x140005132
   14000512c:	call   0x1400052b8
   140005131:	int3   
   140005132:	mov    rcx,QWORD PTR [rbx+0x8]
   140005136:	call   0x140005f3e
   14000513b:	and    QWORD PTR [rbx+0x8],0x0
   140005140:	jmp    0x14000515c
   140005142:	cmp    DWORD PTR [rbx+0x4],0x0
   140005146:	je     0x14000515c
   140005148:	call   QWORD PTR [rip+0x2172]        # 0x1400072c0
   14000514e:	test   eax,eax
   140005150:	jne    0x140005158
   140005152:	call   0x1400052b8
   140005157:	int3   
   140005158:	and    DWORD PTR [rbx+0x4],0x0
   14000515c:	and    DWORD PTR [rbx],0x0
   14000515f:	add    rsp,0x20
   140005163:	pop    rbx
   140005164:	ret    
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	mov    QWORD PTR [rsp+0x8],rbx
   140005171:	push   rdi
   140005172:	sub    rsp,0x20
   140005176:	mov    rbx,rcx
   140005179:	add    rcx,0x8
   14000517d:	call   0x1400051b8
   140005182:	test   eax,eax
   140005184:	js     0x1400051a5
   140005186:	cmp    QWORD PTR [rbx+0x8],0x0
   14000518b:	je     0x14000519d
   14000518d:	call   QWORD PTR [rip+0x212d]        # 0x1400072c0
   140005193:	test   eax,eax
   140005195:	jne    0x14000519d
   140005197:	call   0x1400052b8
   14000519c:	int3   
   14000519d:	mov    DWORD PTR [rbx],0x1
   1400051a3:	xor    eax,eax
   1400051a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051aa:	add    rsp,0x20
   1400051ae:	pop    rdi
   1400051af:	ret    
   1400051b0:	int3   
   1400051b1:	int3   
   1400051b2:	int3   
   1400051b3:	int3   
   1400051b4:	int3   
   1400051b5:	int3   
   1400051b6:	int3   
   1400051b7:	int3   
   1400051b8:	rex push rbx
   1400051ba:	sub    rsp,0x20
   1400051be:	mov    rax,QWORD PTR gs:0x30
   1400051c7:	mov    rbx,rcx
   1400051ca:	cmp    DWORD PTR [rax+0x179c],0x0
   1400051d1:	jne    0x1400051df
   1400051d3:	and    QWORD PTR [rcx],0x0
   1400051d7:	xor    eax,eax
   1400051d9:	add    rsp,0x20
   1400051dd:	pop    rbx
   1400051de:	ret    
   1400051df:	call   QWORD PTR [rip+0x1fc3]        # 0x1400071a8
   1400051e5:	mov    edx,0xc
   1400051ea:	mov    r9,rbx
   1400051ed:	mov    rcx,rax
   1400051f0:	lea    r8d,[rdx-0xb]
   1400051f4:	call   QWORD PTR [rip+0x1fa6]        # 0x1400071a0
   1400051fa:	test   eax,eax
   1400051fc:	jne    0x1400051d7
   1400051fe:	call   0x140005f32
   140005203:	mov    ecx,eax
   140005205:	cmp    eax,0x3f0
   14000520a:	je     0x1400051d7
   14000520c:	movzx  eax,ax
   14000520f:	or     eax,0x80070000
   140005214:	test   ecx,ecx
   140005216:	cmovle eax,ecx
   140005219:	jmp    0x1400051d9
   14000521b:	int3   
   14000521c:	int3   
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	int3   
   140005221:	int3   
   140005222:	int3   
   140005223:	int3   
   140005224:	sub    rsp,0x68
   140005228:	mov    rax,QWORD PTR [rip+0x4dd9]        # 0x14000a008
   14000522f:	xor    rax,rsp
   140005232:	mov    QWORD PTR [rsp+0x50],rax
   140005237:	mov    WORD PTR [rsp+0x20],0x0
   14000523e:	xor    r9d,r9d
   140005241:	lea    r8d,[r9+0x2]
   140005245:	lea    rdx,[rsp+0x20]
   14000524a:	lea    ecx,[r9+0x23]
   14000524e:	call   QWORD PTR [rip+0x2134]        # 0x140007388
   140005254:	cmp    BYTE PTR [rsp+0x20],0x0
   140005259:	jne    0x14000526a
   14000525b:	mov    rax,QWORD PTR gs:0x60
   140005264:	cmp    BYTE PTR [rax+0x2],0x0
   140005268:	je     0x140005271
   14000526a:	call   QWORD PTR [rip+0x1e38]        # 0x1400070a8
   140005270:	nop
   140005271:	mov    QWORD PTR [rsp+0x38],0x2
   14000527a:	and    QWORD PTR [rsp+0x40],0x0
   140005280:	and    QWORD PTR [rsp+0x48],0x0
   140005286:	lea    r9,[rsp+0x38]
   14000528b:	mov    edx,0x1
   140005290:	lea    ecx,[rdx+0x3]
   140005293:	lea    r8d,[rdx+0x2]
   140005297:	call   QWORD PTR [rip+0x1e33]        # 0x1400070d0
   14000529d:	jmp    0x14000529f
   14000529f:	mov    rcx,QWORD PTR [rsp+0x50]
   1400052a4:	xor    rcx,rsp
   1400052a7:	call   0x140005910
   1400052ac:	add    rsp,0x68
   1400052b0:	ret    
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	jmp    0x140005224
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	int3   
   1400052c1:	int3   
   1400052c2:	int3   
   1400052c3:	int3   
   1400052c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c9:	push   rbp
   1400052ca:	push   rsi
   1400052cb:	push   rdi
   1400052cc:	mov    rbp,rsp
   1400052cf:	sub    rsp,0x50
   1400052d3:	xor    eax,eax
   1400052d5:	mov    esi,edx
   1400052d7:	and    DWORD PTR [rbp-0x20],eax
   1400052da:	mov    rdi,rcx
   1400052dd:	mov    DWORD PTR [rbp+0x38],eax
   1400052e0:	xor    ebx,ebx
   1400052e2:	mov    DWORD PTR [rbp+0x30],eax
   1400052e5:	call   QWORD PTR [rip+0x1ebd]        # 0x1400071a8
   1400052eb:	mov    rcx,rax
   1400052ee:	lea    r9d,[rbx+0x4]
   1400052f2:	lea    rax,[rbp-0x20]
   1400052f6:	lea    r8,[rbp+0x30]
   1400052fa:	mov    QWORD PTR [rsp+0x20],rax
   1400052ff:	lea    edx,[rbx+0x18]
   140005302:	call   QWORD PTR [rip+0x2078]        # 0x140007380
   140005308:	test   eax,eax
   14000530a:	jns    0x140005312
   14000530c:	bts    eax,0x1c
   140005310:	jmp    0x140005317
   140005312:	mov    ebx,DWORD PTR [rbp+0x30]
   140005315:	xor    eax,eax
   140005317:	test   eax,eax
   140005319:	js     0x140005395
   14000531b:	cmp    BYTE PTR [rdi],0x0
   14000531e:	mov    DWORD PTR [rdi+0x8],ebx
   140005321:	jne    0x140005329
   140005323:	mov    DWORD PTR [rdi+0x4],ebx
   140005326:	mov    BYTE PTR [rdi],0x1
   140005329:	cmp    ebx,esi
   14000532b:	jne    0x140005331
   14000532d:	xor    eax,eax
   14000532f:	jmp    0x140005395
   140005331:	and    DWORD PTR [rbp-0x18],0x0
   140005335:	lea    rcx,[rbp-0x18]
   140005339:	and    DWORD PTR [rbp-0x14],0x0
   14000533d:	and    QWORD PTR [rbp-0x10],0x0
   140005342:	mov    DWORD PTR [rbp+0x38],esi
   140005345:	call   0x14000516c
   14000534a:	mov    ebx,eax
   14000534c:	test   eax,eax
   14000534e:	js     0x140005384
   140005350:	call   QWORD PTR [rip+0x1e52]        # 0x1400071a8
   140005356:	mov    r9d,0x4
   14000535c:	lea    r8,[rbp+0x38]
   140005360:	mov    rcx,rax
   140005363:	lea    edx,[r9+0x14]
   140005367:	call   QWORD PTR [rip+0x20ab]        # 0x140007418
   14000536d:	mov    ebx,eax
   14000536f:	test   eax,eax
   140005371:	jns    0x140005379
   140005373:	bts    ebx,0x1c
   140005377:	jmp    0x140005384
   140005379:	lea    rcx,[rbp-0x18]
   14000537d:	call   0x140005110
   140005382:	xor    ebx,ebx
   140005384:	cmp    DWORD PTR [rbp-0x18],0x0
   140005388:	je     0x140005393
   14000538a:	lea    rcx,[rbp-0x18]
   14000538e:	call   0x140005110
   140005393:	mov    eax,ebx
   140005395:	mov    rbx,QWORD PTR [rsp+0x70]
   14000539a:	add    rsp,0x50
   14000539e:	pop    rdi
   14000539f:	pop    rsi
   1400053a0:	pop    rbp
   1400053a1:	ret    
   1400053a2:	int3   
   1400053a3:	int3   
   1400053a4:	int3   
   1400053a5:	int3   
   1400053a6:	int3   
   1400053a7:	int3   
   1400053a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400053ad:	mov    QWORD PTR [rsp+0x20],rdi
   1400053b2:	mov    DWORD PTR [rsp+0x10],edx
   1400053b6:	push   rbp
   1400053b7:	mov    rbp,rsp
   1400053ba:	sub    rsp,0x40
   1400053be:	xor    ebx,ebx
   1400053c0:	mov    rdi,rcx
   1400053c3:	and    DWORD PTR [rbp+0x20],ebx
   1400053c6:	call   QWORD PTR [rip+0x1ddc]        # 0x1400071a8
   1400053cc:	and    QWORD PTR [rsp+0x20],rbx
   1400053d1:	lea    r9d,[rbx+0x4]
   1400053d5:	mov    rcx,rax
   1400053d8:	lea    r8,[rbp+0x20]
   1400053dc:	lea    edx,[rbx+0x19]
   1400053df:	call   QWORD PTR [rip+0x1f9b]        # 0x140007380
   1400053e5:	test   eax,eax
   1400053e7:	jns    0x1400053ef
   1400053e9:	bts    eax,0x1c
   1400053ed:	jmp    0x1400053f4
   1400053ef:	mov    ebx,DWORD PTR [rbp+0x20]
   1400053f2:	xor    eax,eax
   1400053f4:	test   eax,eax
   1400053f6:	js     0x140005470
   1400053f8:	cmp    BYTE PTR [rdi],0x0
   1400053fb:	mov    DWORD PTR [rdi+0x8],ebx
   1400053fe:	jne    0x140005406
   140005400:	mov    DWORD PTR [rdi+0x4],ebx
   140005403:	mov    BYTE PTR [rdi],0x1
   140005406:	cmp    ebx,DWORD PTR [rbp+0x18]
   140005409:	jne    0x14000540f
   14000540b:	xor    eax,eax
   14000540d:	jmp    0x140005470
   14000540f:	and    DWORD PTR [rbp-0x10],0x0
   140005413:	lea    rcx,[rbp-0x10]
   140005417:	and    DWORD PTR [rbp-0xc],0x0
   14000541b:	and    QWORD PTR [rbp-0x8],0x0
   140005420:	call   0x14000516c
   140005425:	mov    ebx,eax
   140005427:	test   eax,eax
   140005429:	js     0x14000545f
   14000542b:	call   QWORD PTR [rip+0x1d77]        # 0x1400071a8
   140005431:	mov    r9d,0x4
   140005437:	lea    r8,[rbp+0x18]
   14000543b:	mov    rcx,rax
   14000543e:	lea    edx,[r9+0x15]
   140005442:	call   QWORD PTR [rip+0x1fd0]        # 0x140007418
   140005448:	mov    ebx,eax
   14000544a:	test   eax,eax
   14000544c:	jns    0x140005454
   14000544e:	bts    ebx,0x1c
   140005452:	jmp    0x14000545f
   140005454:	lea    rcx,[rbp-0x10]
   140005458:	call   0x140005110
   14000545d:	xor    ebx,ebx
   14000545f:	cmp    DWORD PTR [rbp-0x10],0x0
   140005463:	je     0x14000546e
   140005465:	lea    rcx,[rbp-0x10]
   140005469:	call   0x140005110
   14000546e:	mov    eax,ebx
   140005470:	mov    rbx,QWORD PTR [rsp+0x50]
   140005475:	mov    rdi,QWORD PTR [rsp+0x68]
   14000547a:	add    rsp,0x40
   14000547e:	pop    rbp
   14000547f:	ret    
   140005480:	int3   
   140005481:	int3   
   140005482:	int3   
   140005483:	int3   
   140005484:	int3   
   140005485:	int3   
   140005486:	int3   
   140005487:	int3   
   140005488:	mov    QWORD PTR [rsp+0x8],rbx
   14000548d:	push   rbp
   14000548e:	push   rsi
   14000548f:	push   rdi
   140005490:	mov    rbp,rsp
   140005493:	sub    rsp,0x50
   140005497:	xor    eax,eax
   140005499:	mov    esi,edx
   14000549b:	and    DWORD PTR [rbp-0x20],eax
   14000549e:	mov    rdi,rcx
   1400054a1:	mov    DWORD PTR [rbp+0x38],eax
   1400054a4:	mov    DWORD PTR [rbp+0x30],eax
   1400054a7:	lea    ebx,[rax+0x2]
   1400054aa:	call   QWORD PTR [rip+0x1cf8]        # 0x1400071a8
   1400054b0:	mov    rcx,rax
   1400054b3:	lea    r9d,[rbx+0x2]
   1400054b7:	lea    rax,[rbp-0x20]
   1400054bb:	lea    r8,[rbp+0x30]
   1400054bf:	mov    QWORD PTR [rsp+0x20],rax
   1400054c4:	lea    edx,[rbx+0x14]
   1400054c7:	call   QWORD PTR [rip+0x1eb3]        # 0x140007380
   1400054cd:	test   eax,eax
   1400054cf:	jns    0x1400054d7
   1400054d1:	bts    eax,0x1c
   1400054d5:	jmp    0x1400054dc
   1400054d7:	mov    ebx,DWORD PTR [rbp+0x30]
   1400054da:	xor    eax,eax
   1400054dc:	test   eax,eax
   1400054de:	js     0x14000555a
   1400054e0:	cmp    BYTE PTR [rdi],0x0
   1400054e3:	mov    DWORD PTR [rdi+0x8],ebx
   1400054e6:	jne    0x1400054ee
   1400054e8:	mov    DWORD PTR [rdi+0x4],ebx
   1400054eb:	mov    BYTE PTR [rdi],0x1
   1400054ee:	cmp    ebx,esi
   1400054f0:	jne    0x1400054f6
   1400054f2:	xor    eax,eax
   1400054f4:	jmp    0x14000555a
   1400054f6:	and    DWORD PTR [rbp-0x18],0x0
   1400054fa:	lea    rcx,[rbp-0x18]
   1400054fe:	and    DWORD PTR [rbp-0x14],0x0
   140005502:	and    QWORD PTR [rbp-0x10],0x0
   140005507:	call   0x14000516c
   14000550c:	mov    ebx,eax
   14000550e:	test   eax,eax
   140005510:	js     0x140005549
   140005512:	mov    DWORD PTR [rbp+0x38],esi
   140005515:	call   QWORD PTR [rip+0x1c8d]        # 0x1400071a8
   14000551b:	mov    r9d,0x4
   140005521:	lea    r8,[rbp+0x38]
   140005525:	mov    rcx,rax
   140005528:	lea    edx,[r9+0x12]
   14000552c:	call   QWORD PTR [rip+0x1ee6]        # 0x140007418
   140005532:	mov    ebx,eax
   140005534:	test   eax,eax
   140005536:	jns    0x14000553e
   140005538:	bts    ebx,0x1c
   14000553c:	jmp    0x140005549
   14000553e:	lea    rcx,[rbp-0x18]
   140005542:	call   0x140005110
   140005547:	xor    ebx,ebx
   140005549:	cmp    DWORD PTR [rbp-0x18],0x0
   14000554d:	je     0x140005558
   14000554f:	lea    rcx,[rbp-0x18]
   140005553:	call   0x140005110
   140005558:	mov    eax,ebx
   14000555a:	mov    rbx,QWORD PTR [rsp+0x70]
   14000555f:	add    rsp,0x50
   140005563:	pop    rdi
   140005564:	pop    rsi
   140005565:	pop    rbp
   140005566:	ret    
   140005567:	int3   
   140005568:	int3   
   140005569:	int3   
   14000556a:	int3   
   14000556b:	int3   
   14000556c:	int3   
   14000556d:	int3   
   14000556e:	int3   
   14000556f:	int3   
   140005570:	sub    rsp,0x28
   140005574:	and    QWORD PTR [rsp+0x38],0x0
   14000557a:	lea    rdx,[rsp+0x38]
   14000557f:	call   0x140005058
   140005584:	mov    rax,QWORD PTR [rsp+0x38]
   140005589:	add    rsp,0x28
   14000558d:	ret    
   14000558e:	int3   
   14000558f:	int3   
   140005590:	int3   
   140005591:	int3   
   140005592:	int3   
   140005593:	int3   
   140005594:	int3   
   140005595:	int3   
   140005596:	int3   
   140005597:	int3   
   140005598:	int3   
   140005599:	int3   
   14000559a:	int3   
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	sub    rsp,0x28
   1400055a4:	test   rcx,rcx
   1400055a7:	je     0x1400055bb
   1400055a9:	mov    r8,rcx
   1400055ac:	xor    edx,edx
   1400055ae:	mov    rcx,QWORD PTR [rip+0x5163]        # 0x14000a718
   1400055b5:	call   QWORD PTR [rip+0x1ddd]        # 0x140007398
   1400055bb:	add    rsp,0x28
   1400055bf:	ret    
   1400055c0:	int3   
   1400055c1:	int3   
   1400055c2:	int3   
   1400055c3:	int3   
   1400055c4:	int3   
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	sub    rsp,0x28
   1400055d4:	mov    eax,0x5a4d
   1400055d9:	cmp    WORD PTR [rip+0xffffffffffffaa20],ax        # 0x140000000
   1400055e0:	je     0x1400055e6
   1400055e2:	xor    eax,eax
   1400055e4:	jmp    0x140005635
   1400055e6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffaa4f]        # 0x14000003c
   1400055ed:	lea    rax,[rip+0xffffffffffffaa0c]        # 0x140000000
   1400055f4:	add    rcx,rax
   1400055f7:	cmp    DWORD PTR [rcx],0x4550
   1400055fd:	jne    0x1400055e2
   1400055ff:	movzx  eax,WORD PTR [rcx+0x18]
   140005603:	cmp    eax,0x10b
   140005608:	je     0x140005624
   14000560a:	cmp    eax,0x20b
   14000560f:	jne    0x1400055e2
   140005611:	xor    eax,eax
   140005613:	cmp    DWORD PTR [rcx+0x84],0xe
   14000561a:	jbe    0x140005635
   14000561c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005622:	jmp    0x140005632
   140005624:	xor    eax,eax
   140005626:	cmp    DWORD PTR [rcx+0x74],0xe
   14000562a:	jbe    0x140005635
   14000562c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005632:	setne  al
   140005635:	mov    ecx,0x1
   14000563a:	mov    DWORD PTR [rip+0x4aa0],eax        # 0x14000a0e0
   140005640:	call   0x140005a18
   140005645:	mov    ecx,eax
   140005647:	call   QWORD PTR [rip+0x1cd3]        # 0x140007320
   14000564d:	mov    rcx,QWORD PTR [rip+0x1c9c]        # 0x1400072f0
   140005654:	or     rax,0xffffffffffffffff
   140005658:	mov    QWORD PTR [rip+0x50c9],rax        # 0x14000a728
   14000565f:	mov    QWORD PTR [rip+0x50ca],rax        # 0x14000a730
   140005666:	mov    eax,DWORD PTR [rip+0x4a88]        # 0x14000a0f4
   14000566c:	mov    DWORD PTR [rcx],eax
   14000566e:	mov    rcx,QWORD PTR [rip+0x1cf3]        # 0x140007368
   140005675:	mov    eax,DWORD PTR [rip+0x4a6d]        # 0x14000a0e8
   14000567b:	mov    DWORD PTR [rcx],eax
   14000567d:	call   0x140005c30
   140005682:	cmp    DWORD PTR [rip+0x4977],0x0        # 0x14000a000
   140005689:	jne    0x140005698
   14000568b:	lea    rcx,[rip+0x59e]        # 0x140005c30
   140005692:	call   QWORD PTR [rip+0x1c48]        # 0x1400072e0
   140005698:	xor    eax,eax
   14000569a:	add    rsp,0x28
   14000569e:	ret    
   14000569f:	int3   
   1400056a0:	int3   
   1400056a1:	int3   
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	int3   
   1400056a5:	int3   
   1400056a6:	int3   
   1400056a7:	int3   
   1400056a8:	int3   
   1400056a9:	int3   
   1400056aa:	int3   
   1400056ab:	int3   
   1400056ac:	int3   
   1400056ad:	int3   
   1400056ae:	int3   
   1400056af:	int3   
   1400056b0:	sub    rsp,0x38
   1400056b4:	mov    eax,DWORD PTR [rip+0x4a36]        # 0x14000a0f0
   1400056ba:	lea    r8,[rip+0x4a17]        # 0x14000a0d8
   1400056c1:	mov    r9d,DWORD PTR [rip+0x4a24]        # 0x14000a0ec
   1400056c8:	lea    rdx,[rip+0x4a01]        # 0x14000a0d0
   1400056cf:	mov    DWORD PTR [rip+0x4a0f],eax        # 0x14000a0e4
   1400056d5:	lea    rcx,[rip+0x49ec]        # 0x14000a0c8
   1400056dc:	lea    rax,[rip+0x4a01]        # 0x14000a0e4
   1400056e3:	mov    QWORD PTR [rsp+0x20],rax
   1400056e8:	call   QWORD PTR [rip+0x1c3a]        # 0x140007328
   1400056ee:	mov    DWORD PTR [rip+0x49d8],eax        # 0x14000a0cc
   1400056f4:	add    rsp,0x38
   1400056f8:	ret    
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    rax,rsp
   140005703:	mov    QWORD PTR [rax+0x8],rbx
   140005707:	mov    QWORD PTR [rax+0x10],rsi
   14000570b:	mov    QWORD PTR [rax+0x18],rdi
   14000570f:	mov    QWORD PTR [rax+0x20],r12
   140005713:	push   r14
   140005715:	sub    rsp,0x30
   140005719:	mov    rax,QWORD PTR gs:0x30
   140005722:	mov    rbx,QWORD PTR [rax+0x8]
   140005726:	xor    r14d,r14d
   140005729:	xor    eax,eax
   14000572b:	lock cmpxchg QWORD PTR [rip+0x5004],rbx        # 0x14000a738
   140005734:	je     0x140005752
   140005736:	cmp    rax,rbx
   140005739:	jne    0x140005745
   14000573b:	mov    ebx,0x1
   140005740:	mov    r14d,ebx
   140005743:	jmp    0x140005757
   140005745:	mov    ecx,0x3e8
   14000574a:	call   QWORD PTR [rip+0x1ad0]        # 0x140007220
   140005750:	jmp    0x140005729
   140005752:	mov    ebx,0x1
   140005757:	mov    eax,DWORD PTR [rip+0x4fe3]        # 0x14000a740
   14000575d:	cmp    eax,ebx
   14000575f:	jne    0x14000576d
   140005761:	mov    ecx,0x1f
   140005766:	call   0x140005a64
   14000576b:	jmp    0x1400057d6
   14000576d:	mov    eax,DWORD PTR [rip+0x4fcd]        # 0x14000a740
   140005773:	test   eax,eax
   140005775:	jne    0x1400057d0
   140005777:	mov    DWORD PTR [rip+0x4fc3],ebx        # 0x14000a740
   14000577d:	lea    r12,[rip+0x1cfc]        # 0x140007480
   140005784:	lea    rdi,[rip+0x1cdd]        # 0x140007468
   14000578b:	mov    QWORD PTR [rsp+0x28],rdi
   140005790:	mov    DWORD PTR [rsp+0x20],eax
   140005794:	cmp    rdi,r12
   140005797:	jae    0x1400057c2
   140005799:	test   eax,eax
   14000579b:	jne    0x1400057c6
   14000579d:	mov    rsi,QWORD PTR [rdi]
   1400057a0:	test   rsi,rsi
   1400057a3:	je     0x1400057b7
   1400057a5:	mov    rcx,rsi
   1400057a8:	mov    rax,QWORD PTR [rip+0x1c91]        # 0x140007440
   1400057af:	call   rax
   1400057b1:	call   rsi
   1400057b3:	mov    DWORD PTR [rsp+0x20],eax
   1400057b7:	add    rdi,0x8
   1400057bb:	mov    QWORD PTR [rsp+0x28],rdi
   1400057c0:	jmp    0x140005794
   1400057c2:	test   eax,eax
   1400057c4:	je     0x1400057d6
   1400057c6:	mov    eax,0xff
   1400057cb:	jmp    0x1400058b7
   1400057d0:	mov    DWORD PTR [rip+0x48ee],ebx        # 0x14000a0c4
   1400057d6:	mov    eax,DWORD PTR [rip+0x4f64]        # 0x14000a740
   1400057dc:	cmp    eax,ebx
   1400057de:	jne    0x1400057fd
   1400057e0:	lea    rdx,[rip+0x1c79]        # 0x140007460
   1400057e7:	lea    rcx,[rip+0x1c62]        # 0x140007450
   1400057ee:	call   0x140005c3a
   1400057f3:	mov    DWORD PTR [rip+0x4f43],0x2        # 0x14000a740
   1400057fd:	test   r14d,r14d
   140005800:	jne    0x14000580b
   140005802:	xor    eax,eax
   140005804:	xchg   QWORD PTR [rip+0x4f2d],rax        # 0x14000a738
   14000580b:	cmp    QWORD PTR [rip+0x4f35],0x0        # 0x14000a748
   140005813:	je     0x140005843
   140005815:	lea    rcx,[rip+0x4f2c]        # 0x14000a748
   14000581c:	call   0x140005ac0
   140005821:	test   eax,eax
   140005823:	je     0x140005843
   140005825:	mov    rbx,QWORD PTR [rip+0x4f1c]        # 0x14000a748
   14000582c:	mov    rcx,rbx
   14000582f:	mov    rax,QWORD PTR [rip+0x1c0a]        # 0x140007440
   140005836:	call   rax
   140005838:	xor    r8d,r8d
   14000583b:	lea    edx,[r8+0x2]
   14000583f:	xor    ecx,ecx
   140005841:	call   rbx
   140005843:	mov    r8,QWORD PTR [rip+0x488e]        # 0x14000a0d8
   14000584a:	mov    rdx,QWORD PTR [rip+0x487f]        # 0x14000a0d0
   140005851:	mov    ecx,DWORD PTR [rip+0x4871]        # 0x14000a0c8
   140005857:	call   0x1400025d0
   14000585c:	mov    DWORD PTR [rip+0x485e],eax        # 0x14000a0c0
   140005862:	cmp    DWORD PTR [rip+0x4877],0x0        # 0x14000a0e0
   140005869:	jne    0x140005873
   14000586b:	mov    ecx,eax
   14000586d:	call   QWORD PTR [rip+0x1add]        # 0x140007350
   140005873:	cmp    DWORD PTR [rip+0x484a],0x0        # 0x14000a0c4
   14000587a:	jne    0x140005888
   14000587c:	call   QWORD PTR [rip+0x1a66]        # 0x1400072e8
   140005882:	mov    eax,DWORD PTR [rip+0x4838]        # 0x14000a0c0
   140005888:	jmp    0x1400058b7
   14000588a:	mov    DWORD PTR [rip+0x4830],eax        # 0x14000a0c0
   140005890:	cmp    DWORD PTR [rip+0x4849],0x0        # 0x14000a0e0
   140005897:	jne    0x1400058a2
   140005899:	mov    ecx,eax
   14000589b:	call   QWORD PTR [rip+0x1a77]        # 0x140007318
   1400058a1:	int3   
   1400058a2:	cmp    DWORD PTR [rip+0x481b],0x0        # 0x14000a0c4
   1400058a9:	jne    0x1400058b7
   1400058ab:	call   QWORD PTR [rip+0x1a37]        # 0x1400072e8
   1400058b1:	mov    eax,DWORD PTR [rip+0x4809]        # 0x14000a0c0
   1400058b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058bc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400058c1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400058c6:	mov    r12,QWORD PTR [rsp+0x58]
   1400058cb:	add    rsp,0x30
   1400058cf:	pop    r14
   1400058d1:	ret    
   1400058d2:	int3   
   1400058d3:	int3   
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	int3   
   1400058d7:	int3   
   1400058d8:	int3   
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	sub    rsp,0x28
   1400058e4:	call   0x140005b54
   1400058e9:	add    rsp,0x28
   1400058ed:	jmp    0x140005700
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	int3   
   1400058f5:	int3   
   1400058f6:	int3   
   1400058f7:	int3   
   1400058f8:	int3   
   1400058f9:	int3   
   1400058fa:	int3   
   1400058fb:	int3   
   1400058fc:	int3   
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	int3   
   140005901:	int3   
   140005902:	int3   
   140005903:	int3   
   140005904:	int3   
   140005905:	int3   
   140005906:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005910:	cmp    rcx,QWORD PTR [rip+0x46f1]        # 0x14000a008
   140005917:	jne    0x140005929
   140005919:	rol    rcx,0x10
   14000591d:	test   cx,0xffff
   140005922:	jne    0x140005925
   140005924:	ret    
   140005925:	ror    rcx,0x10
   140005929:	jmp    0x140005cb0
   14000592e:	int3   
   14000592f:	int3   
   140005930:	int3   
   140005931:	int3   
   140005932:	int3   
   140005933:	int3   
   140005934:	int3   
   140005935:	int3   
   140005936:	int3   
   140005937:	int3   
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	jmp    QWORD PTR [rip+0x19ba]        # 0x140007300
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	sub    rsp,0x28
   140005954:	mov    rax,QWORD PTR [rcx]
   140005957:	cmp    DWORD PTR [rax],0xe06d7363
   14000595d:	jne    0x140005982
   14000595f:	cmp    DWORD PTR [rax+0x18],0x4
   140005963:	jne    0x140005982
   140005965:	mov    ecx,DWORD PTR [rax+0x20]
   140005968:	lea    eax,[rcx-0x19930520]
   14000596e:	cmp    eax,0x2
   140005971:	jbe    0x14000597b
   140005973:	cmp    ecx,0x1994000
   140005979:	jne    0x140005982
   14000597b:	call   QWORD PTR [rip+0x1977]        # 0x1400072f8
   140005981:	int3   
   140005982:	xor    eax,eax
   140005984:	add    rsp,0x28
   140005988:	ret    
   140005989:	int3   
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	sub    rsp,0x28
   140005994:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005950
   14000599b:	call   QWORD PTR [rip+0x171f]        # 0x1400070c0
   1400059a1:	xor    eax,eax
   1400059a3:	add    rsp,0x28
   1400059a7:	ret    
   1400059a8:	int3   
   1400059a9:	int3   
   1400059aa:	int3   
   1400059ab:	int3   
   1400059ac:	int3   
   1400059ad:	int3   
   1400059ae:	jmp    QWORD PTR [rip+0x1984]        # 0x140007338
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	sub    rsp,0x18
   1400059c0:	xor    edx,edx
   1400059c2:	lea    rax,[rcx-0x1]
   1400059c6:	cmp    rax,0xfffffffffffffffd
   1400059ca:	ja     0x140005a08
   1400059cc:	mov    eax,0x5a4d
   1400059d1:	cmp    WORD PTR [rcx],ax
   1400059d4:	jne    0x140005a00
   1400059d6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400059d9:	jl     0x140005a00
   1400059db:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400059e2:	jae    0x140005a00
   1400059e4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400059e8:	add    rax,rcx
   1400059eb:	mov    QWORD PTR [rsp],rax
   1400059ef:	cmp    DWORD PTR [rax],0x4550
   1400059f5:	cmovne rax,rdx
   1400059f9:	mov    rdx,rax
   1400059fc:	mov    QWORD PTR [rsp],rax
   140005a00:	jmp    0x140005a08
   140005a02:	xor    edx,edx
   140005a04:	mov    QWORD PTR [rsp],rdx
   140005a08:	mov    rax,rdx
   140005a0b:	add    rsp,0x18
   140005a0f:	ret    
   140005a10:	int3   
   140005a11:	int3   
   140005a12:	int3   
   140005a13:	int3   
   140005a14:	int3   
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	rex push rbx
   140005a1a:	sub    rsp,0x20
   140005a1e:	mov    ebx,ecx
   140005a20:	xor    ecx,ecx
   140005a22:	call   QWORD PTR [rip+0x1730]        # 0x140007158
   140005a28:	test   rax,rax
   140005a2b:	je     0x140005a55
   140005a2d:	mov    rcx,rax
   140005a30:	call   0x1400059bc
   140005a35:	test   rax,rax
   140005a38:	je     0x140005a55
   140005a3a:	mov    ecx,0x2
   140005a3f:	cmp    WORD PTR [rax+0x5c],cx
   140005a43:	jne    0x140005a49
   140005a45:	mov    eax,ecx
   140005a47:	jmp    0x140005a57
   140005a49:	cmp    WORD PTR [rax+0x5c],0x3
   140005a4e:	mov    eax,0x1
   140005a53:	je     0x140005a57
   140005a55:	mov    eax,ebx
   140005a57:	add    rsp,0x20
   140005a5b:	pop    rbx
   140005a5c:	ret    
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	int3   
   140005a61:	int3   
   140005a62:	int3   
   140005a63:	int3   
   140005a64:	jmp    QWORD PTR [rip+0x18c6]        # 0x140007330
   140005a6a:	int3   
   140005a6b:	int3   
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005a74:	xor    r9d,r9d
   140005a77:	add    r8,rcx
   140005a7a:	mov    r10,rdx
   140005a7d:	movzx  eax,WORD PTR [r8+0x14]
   140005a82:	movzx  r11d,WORD PTR [r8+0x6]
   140005a87:	add    rax,0x18
   140005a8b:	add    rax,r8
   140005a8e:	test   r11d,r11d
   140005a91:	je     0x140005ab1
   140005a93:	mov    edx,DWORD PTR [rax+0xc]
   140005a96:	cmp    r10,rdx
   140005a99:	jb     0x140005aa5
   140005a9b:	mov    ecx,DWORD PTR [rax+0x8]
   140005a9e:	add    ecx,edx
   140005aa0:	cmp    r10,rcx
   140005aa3:	jb     0x140005ab3
   140005aa5:	inc    r9d
   140005aa8:	add    rax,0x28
   140005aac:	cmp    r9d,r11d
   140005aaf:	jb     0x140005a93
   140005ab1:	xor    eax,eax
   140005ab3:	ret    
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	int3   
   140005ab9:	int3   
   140005aba:	int3   
   140005abb:	int3   
   140005abc:	int3   
   140005abd:	int3   
   140005abe:	int3   
   140005abf:	int3   
   140005ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ac5:	push   rdi
   140005ac6:	sub    rsp,0x20
   140005aca:	mov    rbx,rcx
   140005acd:	lea    rdi,[rip+0xffffffffffffa52c]        # 0x140000000
   140005ad4:	mov    rcx,rdi
   140005ad7:	call   0x140005b20
   140005adc:	test   eax,eax
   140005ade:	je     0x140005b02
   140005ae0:	sub    rbx,rdi
   140005ae3:	mov    rdx,rbx
   140005ae6:	mov    rcx,rdi
   140005ae9:	call   0x140005a70
   140005aee:	test   rax,rax
   140005af1:	je     0x140005b02
   140005af3:	mov    eax,DWORD PTR [rax+0x24]
   140005af6:	shr    eax,0x1f
   140005af9:	not    eax
   140005afb:	and    eax,0x1
   140005afe:	jmp    0x140005b02
   140005b00:	xor    eax,eax
   140005b02:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b07:	add    rsp,0x20
   140005b0b:	pop    rdi
   140005b0c:	ret    
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	int3   
   140005b11:	int3   
   140005b12:	int3   
   140005b13:	int3   
   140005b14:	int3   
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	mov    rax,rcx
   140005b23:	mov    ecx,0x5a4d
   140005b28:	cmp    WORD PTR [rax],cx
   140005b2b:	je     0x140005b30
   140005b2d:	xor    eax,eax
   140005b2f:	ret    
   140005b30:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005b34:	add    rcx,rax
   140005b37:	xor    eax,eax
   140005b39:	cmp    DWORD PTR [rcx],0x4550
   140005b3f:	jne    0x140005b4d
   140005b41:	mov    edx,0x20b
   140005b46:	cmp    WORD PTR [rcx+0x18],dx
   140005b4a:	sete   al
   140005b4d:	ret    
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	int3   
   140005b51:	int3   
   140005b52:	int3   
   140005b53:	int3   
   140005b54:	mov    QWORD PTR [rsp+0x20],rbx
   140005b59:	push   rbp
   140005b5a:	mov    rbp,rsp
   140005b5d:	sub    rsp,0x20
   140005b61:	and    QWORD PTR [rbp+0x18],0x0
   140005b66:	movabs rbx,0x2b992ddfa232
   140005b70:	mov    rax,QWORD PTR [rip+0x4491]        # 0x14000a008
   140005b77:	cmp    rax,rbx
   140005b7a:	jne    0x140005c0f
   140005b80:	lea    rcx,[rbp+0x18]
   140005b84:	call   QWORD PTR [rip+0x16a6]        # 0x140007230
   140005b8a:	mov    rax,QWORD PTR [rbp+0x18]
   140005b8e:	mov    QWORD PTR [rbp+0x10],rax
   140005b92:	call   QWORD PTR [rip+0x15f0]        # 0x140007188
   140005b98:	mov    eax,eax
   140005b9a:	xor    QWORD PTR [rbp+0x10],rax
   140005b9e:	call   QWORD PTR [rip+0x1614]        # 0x1400071b8
   140005ba4:	mov    eax,eax
   140005ba6:	xor    QWORD PTR [rbp+0x10],rax
   140005baa:	call   QWORD PTR [rip+0x1688]        # 0x140007238
   140005bb0:	mov    eax,eax
   140005bb2:	shl    rax,0x18
   140005bb6:	xor    QWORD PTR [rbp+0x10],rax
   140005bba:	call   QWORD PTR [rip+0x1678]        # 0x140007238
   140005bc0:	mov    eax,eax
   140005bc2:	lea    rcx,[rbp+0x10]
   140005bc6:	xor    rax,QWORD PTR [rbp+0x10]
   140005bca:	xor    rax,rcx
   140005bcd:	lea    rcx,[rbp+0x20]
   140005bd1:	mov    QWORD PTR [rbp+0x10],rax
   140005bd5:	call   QWORD PTR [rip+0x15f5]        # 0x1400071d0
   140005bdb:	mov    eax,DWORD PTR [rbp+0x20]
   140005bde:	movabs rcx,0xffffffffffff
   140005be8:	shl    rax,0x20
   140005bec:	xor    rax,QWORD PTR [rbp+0x20]
   140005bf0:	xor    rax,QWORD PTR [rbp+0x10]
   140005bf4:	and    rax,rcx
   140005bf7:	movabs rcx,0x2b992ddfa233
   140005c01:	cmp    rax,rbx
   140005c04:	cmove  rax,rcx
   140005c08:	mov    QWORD PTR [rip+0x43f9],rax        # 0x14000a008
   140005c0f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005c14:	not    rax
   140005c17:	mov    QWORD PTR [rip+0x43f2],rax        # 0x14000a010
   140005c1e:	add    rsp,0x20
   140005c22:	pop    rbp
   140005c23:	ret    
   140005c24:	int3   
   140005c25:	int3   
   140005c26:	int3   
   140005c27:	int3   
   140005c28:	int3   
   140005c29:	int3   
   140005c2a:	int3   
   140005c2b:	int3   
   140005c2c:	int3   
   140005c2d:	int3   
   140005c2e:	int3   
   140005c2f:	int3   
   140005c30:	xor    eax,eax
   140005c32:	ret    
   140005c33:	int3   
   140005c34:	int3   
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	int3   
   140005c39:	int3   
   140005c3a:	jmp    QWORD PTR [rip+0x16d0]        # 0x140007310
   140005c40:	int3   
   140005c41:	int3   
   140005c42:	int3   
   140005c43:	int3   
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	jmp    QWORD PTR [rip+0x1714]        # 0x140007360
   140005c4c:	int3   
   140005c4d:	int3   
   140005c4e:	int3   
   140005c4f:	int3   
   140005c50:	int3   
   140005c51:	int3   
   140005c52:	int3   
   140005c53:	int3   
   140005c54:	int3   
   140005c55:	int3   
   140005c56:	int3   
   140005c57:	int3   
   140005c58:	int3   
   140005c59:	int3   
   140005c5a:	int3   
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	ret    0x0
   140005c63:	int3   
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	rex push rbx
   140005c6e:	sub    rsp,0x20
   140005c72:	mov    rbx,rcx
   140005c75:	xor    ecx,ecx
   140005c77:	call   QWORD PTR [rip+0x1443]        # 0x1400070c0
   140005c7d:	mov    rcx,rbx
   140005c80:	call   QWORD PTR [rip+0x1442]        # 0x1400070c8
   140005c86:	call   QWORD PTR [rip+0x1504]        # 0x140007190
   140005c8c:	mov    rcx,rax
   140005c8f:	mov    edx,0xc0000409
   140005c94:	add    rsp,0x20
   140005c98:	pop    rbx
   140005c99:	rex.W jmp QWORD PTR [rip+0x1520]        # 0x1400071c0
   140005ca0:	int3   
   140005ca1:	int3   
   140005ca2:	int3   
   140005ca3:	int3   
   140005ca4:	int3   
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	int3   
   140005ca9:	int3   
   140005caa:	int3   
   140005cab:	int3   
   140005cac:	int3   
   140005cad:	int3   
   140005cae:	int3   
   140005caf:	int3   
   140005cb0:	mov    QWORD PTR [rsp+0x8],rcx
   140005cb5:	sub    rsp,0x88
   140005cbc:	lea    rcx,[rip+0x44dd]        # 0x14000a1a0
   140005cc3:	call   QWORD PTR [rip+0x173f]        # 0x140007408
   140005cc9:	mov    rax,QWORD PTR [rip+0x45c8]        # 0x14000a298
   140005cd0:	mov    QWORD PTR [rsp+0x48],rax
   140005cd5:	xor    r8d,r8d
   140005cd8:	lea    rdx,[rsp+0x50]
   140005cdd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005ce2:	call   QWORD PTR [rip+0x1728]        # 0x140007410
   140005ce8:	mov    QWORD PTR [rsp+0x40],rax
   140005ced:	cmp    QWORD PTR [rsp+0x40],0x0
   140005cf3:	je     0x140005d37
   140005cf5:	mov    QWORD PTR [rsp+0x38],0x0
   140005cfe:	lea    rax,[rsp+0x58]
   140005d03:	mov    QWORD PTR [rsp+0x30],rax
   140005d08:	lea    rax,[rsp+0x60]
   140005d0d:	mov    QWORD PTR [rsp+0x28],rax
   140005d12:	lea    rax,[rip+0x4487]        # 0x14000a1a0
   140005d19:	mov    QWORD PTR [rsp+0x20],rax
   140005d1e:	mov    r9,QWORD PTR [rsp+0x40]
   140005d23:	mov    r8,QWORD PTR [rsp+0x48]
   140005d28:	mov    rdx,QWORD PTR [rsp+0x50]
   140005d2d:	xor    ecx,ecx
   140005d2f:	call   QWORD PTR [rip+0x16cb]        # 0x140007400
   140005d35:	jmp    0x140005d5a
   140005d37:	mov    rax,QWORD PTR [rip+0x44fa]        # 0x14000a238
   140005d3e:	mov    rax,QWORD PTR [rax]
   140005d41:	mov    QWORD PTR [rip+0x4550],rax        # 0x14000a298
   140005d48:	mov    rax,QWORD PTR [rip+0x44e9]        # 0x14000a238
   140005d4f:	add    rax,0x8
   140005d53:	mov    QWORD PTR [rip+0x44de],rax        # 0x14000a238
   140005d5a:	mov    rax,QWORD PTR [rip+0x4537]        # 0x14000a298
   140005d61:	mov    QWORD PTR [rip+0x43a8],rax        # 0x14000a110
   140005d68:	mov    rax,QWORD PTR [rsp+0x90]
   140005d70:	mov    QWORD PTR [rip+0x44a9],rax        # 0x14000a220
   140005d77:	mov    DWORD PTR [rip+0x437f],0xc0000409        # 0x14000a100
   140005d81:	mov    DWORD PTR [rip+0x4379],0x1        # 0x14000a104
   140005d8b:	mov    DWORD PTR [rip+0x4383],0x3        # 0x14000a118
   140005d95:	mov    eax,0x8
   140005d9a:	imul   rax,rax,0x0
   140005d9e:	lea    rcx,[rip+0x437b]        # 0x14000a120
   140005da5:	mov    QWORD PTR [rcx+rax*1],0x2
   140005dad:	mov    eax,0x8
   140005db2:	imul   rax,rax,0x1
   140005db6:	lea    rcx,[rip+0x4363]        # 0x14000a120
   140005dbd:	mov    rdx,QWORD PTR [rip+0x4244]        # 0x14000a008
   140005dc4:	mov    QWORD PTR [rcx+rax*1],rdx
   140005dc8:	mov    eax,0x8
   140005dcd:	imul   rax,rax,0x2
   140005dd1:	lea    rcx,[rip+0x4348]        # 0x14000a120
   140005dd8:	mov    rdx,QWORD PTR [rip+0x4231]        # 0x14000a010
   140005ddf:	mov    QWORD PTR [rcx+rax*1],rdx
   140005de3:	mov    eax,0x8
   140005de8:	imul   rax,rax,0x0
   140005dec:	mov    rcx,QWORD PTR [rip+0x4215]        # 0x14000a008
   140005df3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005df8:	mov    eax,0x8
   140005dfd:	imul   rax,rax,0x1
   140005e01:	mov    rcx,QWORD PTR [rip+0x4208]        # 0x14000a010
   140005e08:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005e0d:	lea    rcx,[rip+0x174c]        # 0x140007560
   140005e14:	call   0x140005c6c
   140005e19:	add    rsp,0x88
   140005e20:	ret    
   140005e21:	int3   
   140005e22:	int3   
   140005e23:	int3   
   140005e24:	int3   
   140005e25:	int3   
   140005e26:	int3   
   140005e27:	int3   
   140005e28:	sub    rsp,0x78
   140005e2c:	lea    rcx,[rip+0x436d]        # 0x14000a1a0
   140005e33:	call   QWORD PTR [rip+0x15cf]        # 0x140007408
   140005e39:	mov    rax,QWORD PTR [rip+0x4458]        # 0x14000a298
   140005e40:	mov    QWORD PTR [rsp+0x48],rax
   140005e45:	xor    r8d,r8d
   140005e48:	lea    rdx,[rsp+0x50]
   140005e4d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e52:	call   QWORD PTR [rip+0x15b8]        # 0x140007410
   140005e58:	mov    QWORD PTR [rsp+0x40],rax
   140005e5d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005e63:	je     0x140005ea7
   140005e65:	mov    QWORD PTR [rsp+0x38],0x0
   140005e6e:	lea    rax,[rsp+0x58]
   140005e73:	mov    QWORD PTR [rsp+0x30],rax
   140005e78:	lea    rax,[rsp+0x60]
   140005e7d:	mov    QWORD PTR [rsp+0x28],rax
   140005e82:	lea    rax,[rip+0x4317]        # 0x14000a1a0
   140005e89:	mov    QWORD PTR [rsp+0x20],rax
   140005e8e:	mov    r9,QWORD PTR [rsp+0x40]
   140005e93:	mov    r8,QWORD PTR [rsp+0x48]
   140005e98:	mov    rdx,QWORD PTR [rsp+0x50]
   140005e9d:	xor    ecx,ecx
   140005e9f:	call   QWORD PTR [rip+0x155b]        # 0x140007400
   140005ea5:	jmp    0x140005eca
   140005ea7:	mov    rax,QWORD PTR [rip+0x438a]        # 0x14000a238
   140005eae:	mov    rax,QWORD PTR [rax]
   140005eb1:	mov    QWORD PTR [rip+0x43e0],rax        # 0x14000a298
   140005eb8:	mov    rax,QWORD PTR [rip+0x4379]        # 0x14000a238
   140005ebf:	add    rax,0x8
   140005ec3:	mov    QWORD PTR [rip+0x436e],rax        # 0x14000a238
   140005eca:	mov    rax,QWORD PTR [rip+0x43c7]        # 0x14000a298
   140005ed1:	mov    QWORD PTR [rip+0x4238],rax        # 0x14000a110
   140005ed8:	mov    DWORD PTR [rip+0x421e],0xc0000409        # 0x14000a100
   140005ee2:	mov    DWORD PTR [rip+0x4218],0x1        # 0x14000a104
   140005eec:	mov    DWORD PTR [rip+0x4222],0x1        # 0x14000a118
   140005ef6:	mov    eax,0x8
   140005efb:	imul   rax,rax,0x0
   140005eff:	lea    rcx,[rip+0x421a]        # 0x14000a120
   140005f06:	mov    QWORD PTR [rcx+rax*1],0x8
   140005f0e:	lea    rcx,[rip+0x164b]        # 0x140007560
   140005f15:	call   0x140005c6c
   140005f1a:	add    rsp,0x78
   140005f1e:	ret    
   140005f1f:	int3   
   140005f20:	int3   
   140005f21:	int3   
   140005f22:	int3   
   140005f23:	int3   
   140005f24:	int3   
   140005f25:	int3   
   140005f26:	jmp    QWORD PTR [rip+0x1264]        # 0x140007190
   140005f2c:	int3   
   140005f2d:	int3   
   140005f2e:	int3   
   140005f2f:	int3   
   140005f30:	int3   
   140005f31:	int3   
   140005f32:	jmp    QWORD PTR [rip+0x1180]        # 0x1400070b8
   140005f38:	int3   
   140005f39:	int3   
   140005f3a:	int3   
   140005f3b:	int3   
   140005f3c:	int3   
   140005f3d:	int3   
   140005f3e:	jmp    QWORD PTR [rip+0x11d4]        # 0x140007118
   140005f44:	int3   
   140005f45:	int3   
   140005f46:	int3   
   140005f47:	int3   
   140005f48:	int3   
   140005f49:	int3   
   140005f4a:	jmp    QWORD PTR [rip+0x1270]        # 0x1400071c0
   140005f50:	int3   
   140005f51:	int3   
   140005f52:	int3   
   140005f53:	int3   
   140005f54:	int3   
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	int3   
   140005f59:	int3   
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	jmp    QWORD PTR [rip+0x10ea]        # 0x140007050
   140005f66:	int3   
   140005f67:	int3   
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	jmp    QWORD PTR [rip+0x10e2]        # 0x140007058
   140005f76:	int3   
   140005f77:	int3   
   140005f78:	int3   
   140005f79:	int3   
   140005f7a:	int3   
   140005f7b:	int3   
   140005f7c:	sub    rsp,0x28
   140005f80:	mov    r8,QWORD PTR [r9+0x38]
   140005f84:	mov    rcx,rdx
   140005f87:	mov    rdx,r9
   140005f8a:	call   0x140005fa0
   140005f8f:	mov    eax,0x1
   140005f94:	add    rsp,0x28
   140005f98:	ret    
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	rex push rbx
   140005fa2:	sub    rsp,0x20
   140005fa6:	mov    r11d,DWORD PTR [r8]
   140005fa9:	mov    rbx,rdx
   140005fac:	and    r11d,0xfffffff8
   140005fb0:	mov    r9,rcx
   140005fb3:	test   BYTE PTR [r8],0x4
   140005fb7:	mov    r10,rcx
   140005fba:	je     0x140005fcf
   140005fbc:	mov    eax,DWORD PTR [r8+0x8]
   140005fc0:	movsxd r10,DWORD PTR [r8+0x4]
   140005fc4:	neg    eax
   140005fc6:	add    r10,rcx
   140005fc9:	movsxd rcx,eax
   140005fcc:	and    r10,rcx
   140005fcf:	movsxd rax,r11d
   140005fd2:	mov    rdx,QWORD PTR [rax+r10*1]
   140005fd6:	mov    rax,QWORD PTR [rbx+0x10]
   140005fda:	mov    ecx,DWORD PTR [rax+0x8]
   140005fdd:	add    rcx,QWORD PTR [rbx+0x8]
   140005fe1:	test   BYTE PTR [rcx+0x3],0xf
   140005fe5:	je     0x140005ff3
   140005fe7:	movzx  eax,BYTE PTR [rcx+0x3]
   140005feb:	and    eax,0xfffffff0
   140005fee:	cdqe   
   140005ff0:	add    r9,rax
   140005ff3:	xor    r9,rdx
   140005ff6:	mov    rcx,r9
   140005ff9:	add    rsp,0x20
   140005ffd:	pop    rbx
   140005ffe:	jmp    0x140005910
   140006003:	int3   
   140006004:	int3   
   140006005:	int3   
   140006006:	int3   
   140006007:	int3   
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	mov    rax,rsp
   14000600f:	mov    QWORD PTR [rax+0x8],rbx
   140006013:	mov    QWORD PTR [rax+0x10],rbp
   140006017:	mov    QWORD PTR [rax+0x18],rsi
   14000601b:	mov    QWORD PTR [rax+0x20],rdi
   14000601f:	push   r14
   140006021:	sub    rsp,0x20
   140006025:	mov    r10,QWORD PTR [r9+0x38]
   140006029:	mov    rsi,rdx
   14000602c:	mov    r14,r8
   14000602f:	mov    rbp,rcx
   140006032:	mov    rdx,r9
   140006035:	mov    rcx,rsi
   140006038:	mov    rdi,r9
   14000603b:	mov    ebx,DWORD PTR [r10]
   14000603e:	shl    rbx,0x4
   140006042:	add    rbx,r10
   140006045:	lea    r8,[rbx+0x4]
   140006049:	call   0x140005fa0
   14000604e:	mov    r11d,DWORD PTR [rbx+0x4]
   140006052:	mov    edx,0x1
   140006057:	mov    r10d,DWORD PTR [rbp+0x4]
   14000605b:	mov    eax,r11d
   14000605e:	and    eax,edx
   140006060:	and    r11d,0x2
   140006064:	and    r10b,0x66
   140006068:	cmove  r11d,eax
   14000606c:	test   r11d,r11d
   14000606f:	je     0x140006085
   140006071:	mov    r9,rdi
   140006074:	mov    r8,r14
   140006077:	mov    rdx,rsi
   14000607a:	mov    rcx,rbp
   14000607d:	call   QWORD PTR [rip+0x12dd]        # 0x140007360
   140006083:	mov    edx,eax
   140006085:	mov    rbx,QWORD PTR [rsp+0x30]
   14000608a:	mov    eax,edx
   14000608c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006091:	mov    rsi,QWORD PTR [rsp+0x40]
   140006096:	mov    rdi,QWORD PTR [rsp+0x48]
   14000609b:	add    rsp,0x20
   14000609f:	pop    r14
   1400060a1:	ret    
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	int3   
   1400060b1:	int3   
   1400060b2:	int3   
   1400060b3:	int3   
   1400060b4:	int3   
   1400060b5:	int3   
   1400060b6:	jmp    QWORD PTR [rip+0x128c]        # 0x140007348
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	int3   
   1400060c1:	int3   
   1400060c2:	jmp    QWORD PTR [rip+0x1278]        # 0x140007340
   1400060c8:	int3   
   1400060c9:	int3   
   1400060ca:	int3   
   1400060cb:	int3   
   1400060cc:	int3   
   1400060cd:	int3   
   1400060ce:	jmp    QWORD PTR [rip+0x129c]        # 0x140007370
   1400060d4:	int3   
   1400060d5:	int3   
   1400060d6:	int3   
   1400060d7:	int3   
   1400060d8:	int3   
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	int3   
   1400060e1:	int3   
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	int3   
   1400060e5:	int3   
   1400060e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400060f0:	jmp    rax
   1400060f2:	int3   
   1400060f3:	int3   
   1400060f4:	int3   
   1400060f5:	int3   
   1400060f6:	int3   
   1400060f7:	int3   
   1400060f8:	int3   
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	int3   
   1400060ff:	int3   
   140006100:	int3   
   140006101:	int3   
   140006102:	int3   
   140006103:	int3   
   140006104:	int3   
   140006105:	int3   
   140006106:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006110:	sub    rsp,0x10
   140006114:	mov    QWORD PTR [rsp],r10
   140006118:	mov    QWORD PTR [rsp+0x8],r11
   14000611d:	xor    r11,r11
   140006120:	lea    r10,[rsp+0x18]
   140006125:	sub    r10,rax
   140006128:	cmovb  r10,r11
   14000612c:	mov    r11,QWORD PTR gs:0x10
   140006135:	cmp    r10,r11
   140006138:	jae    0x14000614f
   14000613a:	and    r10w,0xf000
   140006140:	lea    r11,[r11-0x1000]
   140006147:	test   BYTE PTR [r11],r11b
   14000614a:	cmp    r10,r11
   14000614d:	jne    0x140006140
   14000614f:	mov    r10,QWORD PTR [rsp]
   140006153:	mov    r11,QWORD PTR [rsp+0x8]
   140006158:	add    rsp,0x10
   14000615c:	ret    
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	int3   
   140006161:	int3   
   140006162:	int3   
   140006163:	int3   
   140006164:	int3   
   140006165:	int3   
   140006166:	rex push rbp
   140006168:	sub    rsp,0x20
   14000616c:	mov    rbp,rdx
   14000616f:	mov    QWORD PTR [rbp+0x30],rcx
   140006173:	mov    QWORD PTR [rbp+0x28],rcx
   140006177:	mov    rdx,QWORD PTR [rbp+0x28]
   14000617b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000617f:	xor    r8d,r8d
   140006182:	mov    rdx,QWORD PTR [rdx+0x8]
   140006186:	mov    rcx,QWORD PTR [rcx]
   140006189:	call   QWORD PTR [rip+0x1201]        # 0x140007390
   14000618f:	call   0x140005f26
   140006194:	mov    rcx,rax
   140006197:	mov    edx,0xc0000421
   14000619c:	call   0x140005f4a
   1400061a1:	xor    eax,eax
   1400061a3:	add    rsp,0x20
   1400061a7:	pop    rbp
   1400061a8:	ret    
   1400061a9:	int3   
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	rex push rbp
   1400061b2:	sub    rsp,0x20
   1400061b6:	mov    rbp,rdx
   1400061b9:	mov    rax,QWORD PTR [rcx]
   1400061bc:	mov    rdx,rcx
   1400061bf:	mov    ecx,DWORD PTR [rax]
   1400061c1:	call   0x1400059ae
   1400061c6:	nop
   1400061c7:	add    rsp,0x20
   1400061cb:	pop    rbp
   1400061cc:	ret    
   1400061cd:	int3   
   1400061ce:	int3   
   1400061cf:	int3   
   1400061d0:	int3   
   1400061d1:	int3   
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	int3   
   1400061d9:	int3   
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	rex push rbp
   1400061e2:	sub    rsp,0x20
   1400061e6:	mov    rbp,rdx
   1400061e9:	mov    rax,QWORD PTR [rcx]
   1400061ec:	xor    ecx,ecx
   1400061ee:	cmp    DWORD PTR [rax],0xc0000005
   1400061f4:	sete   cl
   1400061f7:	mov    eax,ecx
   1400061f9:	add    rsp,0x20
   1400061fd:	pop    rbp
   1400061fe:	ret    
   1400061ff:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	(bad)  
   140007001:	add    BYTE PTR [rax],al
   140007003:	add    BYTE PTR [rax],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rax],0x0
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax],al
   140007010:	add    dl,BYTE PTR [rbx+0x0]
   140007016:	add    BYTE PTR [rax],al
   140007018:	jp     0x140006fae
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	add    BYTE PTR [rax],al
   14000701e:	add    BYTE PTR [rax],al
   140007020:	xor    BYTE PTR [rax+rax*1+0x0],dl
   140007027:	add    BYTE PTR [rdx-0x6d],ah
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	(bad)  
   140007031:	xchg   edx,eax
   140007032:	add    BYTE PTR [rax],al
   140007034:	add    BYTE PTR [rax],al
   140007036:	add    BYTE PTR [rax],al
   140007038:	je     0x140006fcd
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	movabs ds:0xca00000000000094,al
   140007049:	xchg   esp,eax
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	mov    al,0x9b
   140007052:	add    BYTE PTR [rax],al
   140007054:	add    BYTE PTR [rax],al
   140007056:	add    BYTE PTR [rax],al
   140007058:	ret    0x9b
   14000705b:	add    BYTE PTR [rax],al
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rdx],bh
   140007061:	xchg   ebx,eax
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	lock xchg ebx,eax
	...
   140007076:	add    BYTE PTR [rax],al
   140007078:	pop    rsi
   140007079:	(bad)  
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	in     al,0x94
   140007082:	add    BYTE PTR [rax],al
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	(bad)  
   140007089:	xchg   edx,eax
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	(bad)  
   140007091:	(bad)  
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	and    BYTE PTR [rax+rax*1+0x0],dl
	...
   1400070a7:	add    BYTE PTR [rax+0x9b],dl
	...
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    al,dl
   1400070b9:	xchg   ebx,eax
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    BYTE PTR [rax],al
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	pop    rsi
   1400070c1:	xchg   ebp,eax
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	add    BYTE PTR [rsi+0x0],dl
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	sahf   
   1400070d1:	fwait
	...
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	enter  0x9a,0x0
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	mov    dh,0x9a
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	sub    bl,BYTE PTR [rdx+0x0]
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	jo     0x140007094
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	stos   BYTE PTR es:[rdi],al
   140007101:	(bad)  
   140007102:	add    BYTE PTR [rax],al
   140007104:	add    BYTE PTR [rax],al
   140007106:	add    BYTE PTR [rax],al
   140007108:	or     al,0x95
	...
   140007116:	add    BYTE PTR [rax],al
   140007118:	and    al,0x95
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	cwde   
   140007121:	(bad)  
	...
   14000712e:	add    BYTE PTR [rax],al
   140007130:	and    BYTE PTR [rbx+0x0],bl
	...
   14000713e:	add    BYTE PTR [rax],al
   140007140:	cld    
   140007141:	(bad)  
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	xor    bl,BYTE PTR [rbx+0x0]
   14000714e:	add    BYTE PTR [rax],al
   140007150:	(bad)  
   140007151:	fwait
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	jl     0x1400070ef
	...
   140007166:	add    BYTE PTR [rax],al
   140007168:	cmp    BYTE PTR [rdx+0x0],bl
   14000716e:	add    BYTE PTR [rax],al
   140007170:	(bad)  
   140007171:	(bad)  
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    BYTE PTR [rax],al
   140007176:	add    BYTE PTR [rax],al
   140007178:	rex.WRX (bad) 
	...
   140007186:	add    BYTE PTR [rax],al
   140007188:	stos   BYTE PTR es:[rdi],al
   140007189:	xchg   ebp,eax
   14000718a:	add    BYTE PTR [rax],al
   14000718c:	add    BYTE PTR [rax],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	(bad)  
   140007191:	xchg   edx,eax
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	xchg   edx,eax
   140007199:	xchg   edx,eax
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	add    BYTE PTR [rax],al
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	rex
   1400071a1:	fwait
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	push   rdx
   1400071a9:	fwait
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	movabs al,ds:0xc000000000000092
   1400071b9:	xchg   ebp,eax
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	sbb    al,0x96
	...
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	nop
   1400071d1:	xchg   ebp,eax
	...
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	xchg   edx,eax
   1400071e1:	xchg   esp,eax
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	add    BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	loopne 0x14000717d
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    BYTE PTR [rax],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	xchg   edx,eax
   1400071f1:	xchg   ebx,eax
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	xor    dl,BYTE PTR [rbp+0x0]
	...
   140007206:	add    BYTE PTR [rax],al
   140007208:	fcomp  DWORD PTR [rdx+0x0]
   14000720e:	add    BYTE PTR [rax],al
   140007210:	sbb    BYTE PTR [rdx+0x0],0x0
	...
   14000721f:	add    BYTE PTR [rsi-0x6b],dl
	...
   14000722e:	add    BYTE PTR [rax],al
   140007230:	(bad)  
   140007231:	xchg   ebp,eax
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	lock xchg ebp,eax
	...
   140007246:	add    BYTE PTR [rax],al
   140007248:	mov    ah,0x91
	...
   140007256:	add    BYTE PTR [rax],al
   140007258:	rex xchg ebp,eax
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	add    BYTE PTR [rax],al
   14000725e:	add    BYTE PTR [rax],al
   140007260:	rex.WR xchg rbx,rax
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	not    BYTE PTR [rax+rax*1+0x0]
   14000726f:	add    BYTE PTR [rdx+rdx*4+0x0],dh
   140007276:	add    BYTE PTR [rax],al
   140007278:	or     BYTE PTR [rax+rax*1+0x0],dl
   14000727f:	add    BYTE PTR [rax+0x93],bh
	...
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rdx+0x94],bh
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rbx+rdx*4],ch
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400072a1:	xchg   ebx,eax
	...
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	(bad)  
   1400072b1:	xchg   ebx,eax
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	data16 fwait
   1400072ba:	add    BYTE PTR [rax],al
   1400072bc:	add    BYTE PTR [rax],al
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	sbb    BYTE PTR [rbx+0x0],0x0
	...
   1400072cf:	add    BYTE PTR [rdx-0x6c],al
	...
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	rex.RX xchg ecx,eax
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	add    BYTE PTR [rax],al
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	cmp    al,0x91
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	add    BYTE PTR [rax],al
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	jle    0x140007283
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	add    BYTE PTR [rax],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	movabs al,ds:0xd000000000000091
   140007301:	nop
   140007302:	add    BYTE PTR [rax],al
   140007304:	add    BYTE PTR [rax],al
   140007306:	add    BYTE PTR [rax],al
   140007308:	(bad)  
   140007309:	cwde   
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	pop    rdx
   140007311:	xchg   ecx,eax
   140007312:	add    BYTE PTR [rax],al
   140007314:	add    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	xor    al,0x91
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    BYTE PTR [rax],al
   14000731e:	add    BYTE PTR [rax],al
   140007320:	and    dl,BYTE PTR [rcx+0x0]
   140007326:	add    BYTE PTR [rax],al
   140007328:	adc    BYTE PTR [rcx+0x0],dl
   14000732e:	add    BYTE PTR [rax],al
   140007330:	add    dl,BYTE PTR [rcx+0x0]
   140007336:	add    BYTE PTR [rax],al
   140007338:	hlt    
   140007339:	nop
   14000733a:	add    BYTE PTR [rax],al
   14000733c:	add    BYTE PTR [rax],al
   14000733e:	add    BYTE PTR [rax],al
   140007340:	mov    BYTE PTR [rax+rax*1+0x0],bl
   140007347:	add    BYTE PTR [rsi-0x64],bh
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	add    BYTE PTR [rax],al
   14000734e:	add    BYTE PTR [rax],al
   140007350:	in     al,dx
   140007351:	nop
   140007352:	add    BYTE PTR [rax],al
   140007354:	add    BYTE PTR [rax],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	fcom   QWORD PTR [rax+0x0]
   14000735e:	add    BYTE PTR [rax],al
   140007360:	xchg   cx,ax
   140007362:	add    BYTE PTR [rax],al
   140007364:	add    BYTE PTR [rax],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	mov    BYTE PTR [rcx+0x0],dl
   14000736e:	add    BYTE PTR [rax],al
   140007370:	xchg   edx,eax
   140007371:	pushf  
	...
   14000737e:	add    BYTE PTR [rax],al
   140007380:	loopne 0x14000731b
   140007382:	add    BYTE PTR [rax],al
   140007384:	add    BYTE PTR [rax],al
   140007386:	add    BYTE PTR [rax],al
   140007388:	(bad)  
   140007389:	cdq    
   14000738a:	add    BYTE PTR [rax],al
   14000738c:	add    BYTE PTR [rax],al
   14000738e:	add    BYTE PTR [rax],al
   140007390:	scas   al,BYTE PTR es:[rdi]
   140007391:	cdq    
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	movabs al,ds:0x8c00000000000099
   1400073a1:	cdq    
   1400073a2:	add    BYTE PTR [rax],al
   1400073a4:	add    BYTE PTR [rax],al
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	jp     0x140007343
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	add    BYTE PTR [rax],al
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	(bad)  
   1400073b1:	cdq    
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	add    BYTE PTR [rax],al
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	rex.X cdq 
   1400073ba:	add    BYTE PTR [rax],al
   1400073bc:	add    BYTE PTR [rax],al
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	and    BYTE PTR [rcx+0x0],bl
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	repnz cwde 
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	add    BYTE PTR [rax],al
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	rcr    BYTE PTR [rax+0x0],1
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	lods   al,BYTE PTR ds:[rsi]
   1400073d9:	cwde   
   1400073da:	add    BYTE PTR [rax],al
   1400073dc:	add    BYTE PTR [rax],al
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	mov    WORD PTR [rax+0x0],ds
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	outs   dx,BYTE PTR ds:[rsi]
   1400073e9:	cwde   
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	add    BYTE PTR [rax],al
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	(bad)  
   1400073f1:	xchg   ecx,eax
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	add    BYTE PTR [rax],al
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	adc    al,0x92
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	add    BYTE PTR [rax],al
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	je     0x140007394
   140007402:	add    BYTE PTR [rax],al
   140007404:	add    BYTE PTR [rax],al
   140007406:	add    BYTE PTR [rax],al
   140007408:	rex.RX xchg edx,eax
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	add    BYTE PTR [rax],al
   14000740e:	add    BYTE PTR [rax],al
   140007410:	pop    rdx
   140007411:	xchg   edx,eax
   140007412:	add    BYTE PTR [rax],al
   140007414:	add    BYTE PTR [rax],al
   140007416:	add    BYTE PTR [rax],al
   140007418:	cld    
   140007419:	cdq    
	...
   140007426:	add    BYTE PTR [rax],al
   140007428:	rex.WX cdqe 
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	add    BYTE PTR [rax],al
   14000742e:	add    BYTE PTR [rax],al
   140007430:	push   0x9c
	...
   14000743d:	add    BYTE PTR [rax],al
   14000743f:	add    BYTE PTR [rax+0x5c],ah
   140007442:	add    BYTE PTR [rax+0x1],al
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    al,dh
   140007449:	(bad)  
   14000744a:	add    BYTE PTR [rax+0x1],al
	...
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rax+0x1400056],dh
	...
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    al,dl
   140007471:	push   rbp
   140007472:	add    BYTE PTR [rax+0x1],al
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rax+0x1400059],dl
	...
   140007485:	add    BYTE PTR [rax],al
   140007487:	add    BYTE PTR [rax-0x2ffffff0],dl
   14000748d:	adc    eax,0x16600000
   140007492:	add    BYTE PTR [rax],al
   140007494:	rcl    BYTE PTR [rsi],0x0
   140007497:	add    BYTE PTR [rax],al
   140007499:	(bad)  
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	(bad)  
   14000749d:	sbb    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rax],ah
   1400074a1:	sbb    al,BYTE PTR [rax]
   1400074a3:	add    BYTE PTR [rax+0x50000027],dh
   1400074a9:	sub    BYTE PTR [rax],al
   1400074ab:	add    BYTE PTR [rax+0x28],dh
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	lock sub BYTE PTR [rax],al
   1400074b3:	add    al,dh
   1400074b5:	sub    DWORD PTR [rax],eax
   1400074b7:	add    BYTE PTR [rax],ah
   1400074b9:	sub    al,BYTE PTR [rax]
   1400074bb:	add    BYTE PTR [rax],ah
   1400074bd:	sub    eax,0x2e600000
   1400074c2:	add    BYTE PTR [rax],al
   1400074c4:	add    BYTE PTR [rdx],dh
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	shl    BYTE PTR [rdx],1
   1400074ca:	add    BYTE PTR [rax],al
   1400074cc:	adc    BYTE PTR [rip+0x35d00000],dh        # 0x175d074d2
   1400074d2:	add    BYTE PTR [rax],al
   1400074d4:	and    BYTE PTR [rsi],dh
   1400074d6:	add    BYTE PTR [rax],al
   1400074d8:	xor    BYTE PTR [rdx],bh
   1400074da:	add    BYTE PTR [rax],al
   1400074dc:	adc    BYTE PTR [rbx],bh
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	xor    BYTE PTR [rbx],bh
   1400074e2:	add    BYTE PTR [rax],al
   1400074e4:	mov    al,0x3b
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	lock cmp eax,DWORD PTR [rax]
   1400074eb:	add    BYTE PTR [rax],al
   1400074ed:	cmp    al,0x0
   1400074ef:	add    BYTE PTR [rax],dl
   1400074f1:	cmp    al,0x0
   1400074f3:	add    al,al
   1400074f5:	cmp    eax,0x3ee00000
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	loopne 0x14000753d
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	rex
   140007501:	rex.X add BYTE PTR [rax],al
   140007504:	loopne 0x14000754b
   140007506:	add    BYTE PTR [rax],al
   140007508:	movabs al,ds:0x5000004a00000049
   140007511:	rex.WX add BYTE PTR [rax],al
   140007514:	nop
   140007515:	rex.WX add BYTE PTR [rax],al
   140007518:	xor    BYTE PTR [rbx+0x0],cl
   14000751b:	add    BYTE PTR [rax+0x4c],al
   14000751e:	add    BYTE PTR [rax],al
   140007520:	nop
   140007521:	rex.WR add BYTE PTR [rax],r8b
   140007524:	ror    BYTE PTR [rax+rax*1+0x0],0x70
   140007529:	push   rbp
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	movabs al,ds:0xb0000055d0000055
   140007535:	push   rsi
   140007536:	add    BYTE PTR [rax],al
   140007538:	loopne 0x140007592
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	rex pop rcx
   14000753e:	add    BYTE PTR [rax],al
   140007540:	push   rax
   140007541:	pop    rcx
   140007542:	add    BYTE PTR [rax],al
   140007544:	nop
   140007545:	pop    rcx
   140007546:	add    BYTE PTR [rax],al
   140007548:	xor    BYTE PTR [rax+rax*1+0x0],bl
   14000754c:	(bad)  
   14000754d:	pop    rsp
   14000754e:	add    BYTE PTR [rax],al
   140007550:	mov    al,0x5c
   140007552:	add    BYTE PTR [rax],al
   140007554:	(bad)  
   140007555:	pop    rdi
   140007556:	add    BYTE PTR [rax],al
   140007558:	jo     0x1400075b9
   14000755a:	add    BYTE PTR [rax],al
   14000755c:	add    BYTE PTR [rax],al
   14000755e:	add    BYTE PTR [rax],al
   140007560:	add    BYTE PTR [rcx+0x14000],ah
   140007566:	add    BYTE PTR [rax],al
   140007568:	movabs al,ds:0x4a000000014000a1
   140007571:	add    BYTE PTR [rax+rax*1+0x0],cl
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rax+0x1400075],dl
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rdx+0x0],cl
   140007582:	rex.WR add BYTE PTR [rax],r8b
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    al,ah
   140007589:	jne    0x14000758b
   14000758b:	rex add DWORD PTR [rax],eax
   14000758e:	add    BYTE PTR [rax],al
   140007590:	add    BYTE PTR gs:[rax+0x0],bh
   140007594:	je     0x140007596
   140007596:	sub    eax,0x73006d00
   14000759b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900eca1
   1400075a1:	add    BYTE PTR [rsi+0x0],ch
   1400075a4:	sub    eax,0x70006100
   1400075a9:	add    BYTE PTR [rax+0x0],dh
   1400075ac:	ins    DWORD PTR es:[rdi],dx
   1400075ad:	add    BYTE PTR [rdi+0x0],ch
   1400075b0:	add    BYTE PTR fs:[rbp+0x0],ah
   1400075b4:	ins    BYTE PTR es:[rdi],dx
   1400075b5:	add    BYTE PTR [rip+0x65006400],ch        # 0x1a500d9bb
   1400075bb:	add    BYTE PTR [rax+0x0],dh
   1400075be:	ins    BYTE PTR es:[rdi],dx
   1400075bf:	add    BYTE PTR [rdi+0x0],ch
   1400075c2:	jns    0x1400075c4
   1400075c4:	ins    DWORD PTR es:[rdi],dx
   1400075c5:	add    BYTE PTR [rbp+0x0],ah
   1400075c8:	outs   dx,BYTE PTR ds:[rsi]
   1400075c9:	add    BYTE PTR [rax+rax*1+0x2d],dh
   1400075cd:	add    BYTE PTR [rax+rax*1+0x31],ch
   1400075d1:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00a6d7
   1400075d7:	add    BYTE PTR [rax],dh
   1400075d9:	add    BYTE PTR [rax],al
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rbp+0x0],ah
   1400075e2:	js     0x1400075e4
   1400075e4:	je     0x1400075e6
   1400075e6:	sub    eax,0x73006d00
   1400075eb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900ecf1
   1400075f1:	add    BYTE PTR [rsi+0x0],ch
   1400075f4:	sub    eax,0x70006100
   1400075f9:	add    BYTE PTR [rax+0x0],dh
   1400075fc:	ins    DWORD PTR es:[rdi],dx
   1400075fd:	add    BYTE PTR [rdi+0x0],ch
   140007600:	add    BYTE PTR fs:[rbp+0x0],ah
   140007604:	ins    BYTE PTR es:[rdi],dx
   140007605:	add    BYTE PTR [rip+0x65006400],ch        # 0x1a500da0b
   14000760b:	add    BYTE PTR [rax+0x0],dh
   14000760e:	ins    BYTE PTR es:[rdi],dx
   14000760f:	add    BYTE PTR [rdi+0x0],ch
   140007612:	jns    0x140007614
   140007614:	ins    DWORD PTR es:[rdi],dx
   140007615:	add    BYTE PTR [rbp+0x0],ah
   140007618:	outs   dx,BYTE PTR ds:[rsi]
   140007619:	add    BYTE PTR [rax+rax*1+0x2d],dh
   14000761d:	add    BYTE PTR [rax+rax*1+0x31],ch
   140007621:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00a727
   140007627:	add    BYTE PTR [rcx],dh
   140007629:	add    BYTE PTR [rax],al
   14000762b:	add    BYTE PTR [rax],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rsi+0x0],cl
   140007632:	push   rbp
   140007633:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000763f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140007643:	add    BYTE PTR [rdi],bh
   140007645:	add    BYTE PTR [rax+rax*1+0x0],bl
   140007649:	add    BYTE PTR [rax],al
   14000764b:	add    BYTE PTR [rax],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rbx+0x0],dl
   140007652:	outs   dx,DWORD PTR ds:[rsi]
   140007653:	add    BYTE PTR [rsi+0x0],ah
   140007656:	je     0x140007658
   140007658:	ja     0x14000765a
   14000765a:	(bad)  
   14000765b:	add    BYTE PTR [rdx+0x0],dh
   14000765e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140007663:	add    BYTE PTR [rcx+0x0],ch
   140007666:	movsxd eax,DWORD PTR [rax]
   140007668:	jb     0x14000766a
   14000766a:	outs   dx,DWORD PTR ds:[rsi]
   14000766b:	add    BYTE PTR [rbx+0x0],dh
   14000766e:	outs   dx,DWORD PTR ds:[rsi]
   14000766f:	add    BYTE PTR [rsi+0x0],ah
   140007672:	je     0x140007674
   140007674:	pop    rsp
   140007675:	add    BYTE PTR [rdi+0x0],dl
   140007678:	imul   eax,DWORD PTR [rax],0x64006e
   14000767e:	outs   dx,DWORD PTR ds:[rsi]
   14000767f:	add    BYTE PTR [rdi+0x0],dh
   140007682:	jae    0x140007684
   140007684:	pop    rsp
   140007685:	add    BYTE PTR [rbx+0x0],al
   140007688:	jne    0x14000768a
   14000768a:	jb     0x14000768c
   14000768c:	jb     0x14000768e
   14000768e:	add    BYTE PTR gs:[rsi+0x0],ch
   140007692:	je     0x140007694
   140007694:	push   rsi
   140007695:	add    BYTE PTR [rbp+0x0],ah
   140007698:	jb     0x14000769a
   14000769a:	jae    0x14000769c
   14000769c:	imul   eax,DWORD PTR [rax],0x6e006f
   1400076a2:	pop    rsp
   1400076a3:	add    BYTE PTR [rcx+0x0],al
   1400076a6:	jo     0x1400076a8
   1400076a8:	jo     0x1400076aa
   1400076aa:	pop    rax
   1400076ab:	add    BYTE PTR [rax+rax*1+0x4e],bl
   1400076af:	add    BYTE PTR [rbp+0x0],ah
   1400076b2:	ja     0x1400076b4
   1400076b4:	add    BYTE PTR [rbp+0x0],r12b
   1400076b8:	jo     0x1400076ba
   1400076ba:	ins    BYTE PTR es:[rdi],dx
   1400076bb:	add    BYTE PTR [rdi+0x0],ch
   1400076be:	jns    0x1400076c0
   1400076c0:	ins    DWORD PTR es:[rdi],dx
   1400076c1:	add    BYTE PTR [rbp+0x0],ah
   1400076c4:	outs   dx,BYTE PTR ds:[rsi]
   1400076c5:	add    BYTE PTR [rax+rax*1+0x4f],dh
   1400076c9:	add    BYTE PTR [rax+0x0],dh
   1400076cc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400076d0:	(bad)  
   1400076d1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400076d5:	add    BYTE PTR [rdi+0x0],ch
   1400076d8:	outs   dx,BYTE PTR ds:[rsi]
   1400076d9:	add    BYTE PTR [rax],al
   1400076db:	add    BYTE PTR [rax],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rcx+0x0],al
   1400076e2:	ins    BYTE PTR es:[rdi],dx
   1400076e3:	add    BYTE PTR [rax+rax*1+0x50],ch
   1400076e7:	add    BYTE PTR [rcx+0x0],ah
   1400076ea:	movsxd eax,DWORD PTR [rax]
   1400076ec:	imul   eax,DWORD PTR [rax],0x61
   1400076ef:	add    BYTE PTR [rdi+0x0],ah
   1400076f2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	cmp    al,0x0
   1400076fa:	add    BYTE PTR gs:[rbp+0x0],ch
   1400076fe:	jo     0x140007700
   140007700:	je     0x140007702
   140007702:	jns    0x140007704
   140007704:	add    BYTE PTR ds:[rax],al
	...
   14000770f:	add    BYTE PTR [rdi+0x0],al
   140007712:	add    BYTE PTR gs:[rsi+0x0],ch
   140007716:	add    BYTE PTR gs:[rdx+0x0],dh
   14000771a:	(bad)  
   14000771b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000771f:	add    BYTE PTR [rdx+0x0],al
   140007722:	jns    0x140007724
   140007724:	je     0x140007726
   140007726:	add    BYTE PTR gs:[rbx+0x0],al
   14000772a:	outs   dx,DWORD PTR ds:[rsi]
   14000772b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000772f:	add    BYTE PTR [rdx+0x0],al
   140007732:	jne    0x140007734
   140007734:	data16 add BYTE PTR [rsi+0x0],ah
   140007738:	add    BYTE PTR gs:[rdx+0x0],dh
   14000773c:	push   rdx
   14000773d:	add    BYTE PTR [rbp+0x0],ah
   140007740:	je     0x140007742
   140007742:	jne    0x140007744
   140007744:	jb     0x140007746
   140007746:	outs   dx,BYTE PTR ds:[rsi]
   140007747:	add    BYTE PTR [rbx+0x0],dh
   14000774a:	rex.XB add BYTE PTR [r9+0x0],spl
   14000774e:	outs   dx,BYTE PTR ds:[rsi]
   14000774f:	add    BYTE PTR [rax+rax*1+0x47],dh
   140007753:	add    BYTE PTR [rbp+0x0],ah
   140007756:	outs   dx,BYTE PTR ds:[rsi]
   140007757:	add    BYTE PTR [rbp+0x0],ah
   14000775a:	jb     0x14000775c
   14000775c:	(bad)  
   14000775d:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   14000776d:	add    BYTE PTR [rax],al
   14000776f:	add    BYTE PTR [rbx+0x0],dl
   140007772:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140007776:	push   rsp
   140007777:	add    BYTE PTR [rdi+0x0],dl
   14000777a:	add    BYTE PTR [r10+0x0],dl
   14000777e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140007783:	add    BYTE PTR [rcx+0x0],ch
   140007786:	movsxd eax,DWORD PTR [rax]
   140007788:	jb     0x14000778a
   14000778a:	outs   dx,DWORD PTR ds:[rsi]
   14000778b:	add    BYTE PTR [rbx+0x0],dh
   14000778e:	outs   dx,DWORD PTR ds:[rsi]
   14000778f:	add    BYTE PTR [rsi+0x0],ah
   140007792:	je     0x140007794
   140007794:	pop    rsp
   140007795:	add    BYTE PTR [rdi+0x0],dl
   140007798:	imul   eax,DWORD PTR [rax],0x64006e
   14000779e:	outs   dx,DWORD PTR ds:[rsi]
   14000779f:	add    BYTE PTR [rdi+0x0],dh
   1400077a2:	jae    0x1400077a4
   1400077a4:	and    BYTE PTR [rax],al
   1400077a6:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   1400077ab:	add    BYTE PTR [rbx+0x0],al
   1400077ae:	jne    0x1400077b0
   1400077b0:	jb     0x1400077b2
   1400077b2:	jb     0x1400077b4
   1400077b4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400077b8:	je     0x1400077ba
   1400077ba:	push   rsi
   1400077bb:	add    BYTE PTR [rbp+0x0],ah
   1400077be:	jb     0x1400077c0
   1400077c0:	jae    0x1400077c2
   1400077c2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400077c8:	pop    rsp
   1400077c9:	add    BYTE PTR [rcx+0x0],cl
   1400077cc:	ins    DWORD PTR es:[rdi],dx
   1400077cd:	add    BYTE PTR [rcx+0x0],ah
   1400077d0:	add    BYTE PTR [ebp+0x0],ah
   1400077d4:	and    BYTE PTR [rax],al
   1400077d6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400077da:	ins    BYTE PTR es:[rdi],dx
   1400077db:	add    BYTE PTR [rbp+0x0],ah
   1400077de:	and    BYTE PTR [rax],al
   1400077e0:	add    BYTE PTR [r8+0x0],r15b
   1400077e4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400077e8:	jne    0x1400077ea
   1400077ea:	je     0x1400077ec
   1400077ec:	imul   eax,DWORD PTR [rax],0x6e006f
   1400077f2:	and    BYTE PTR [rax],al
   1400077f4:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   1400077f8:	je     0x1400077fa
   1400077fa:	imul   eax,DWORD PTR [rax],0x6e006f
   140007800:	jae    0x140007802
   140007802:	pop    rsp
   140007803:	add    BYTE PTR [rdx+0x0],al
   140007806:	jns    0x140007808
   140007808:	je     0x14000780a
   14000780a:	add    BYTE PTR gs:[rbx+0x0],al
   14000780e:	outs   dx,DWORD PTR ds:[rsi]
   14000780f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140007813:	add    BYTE PTR [rdi+0x0],al
   140007816:	add    BYTE PTR gs:[rsi+0x0],ch
   14000781a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000781e:	(bad)  
   14000781f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140007823:	add    BYTE PTR [rdx+0x0],dh
   140007826:	add    BYTE PTR cs:[rbp+0x0],ah
   14000782a:	js     0x14000782c
   14000782c:	add    BYTE PTR gs:[rax],al
   14000782f:	add    BYTE PTR [rax+rax*1+0x3a],al
   140007833:	add    BYTE PTR [rax],ch
   140007835:	add    BYTE PTR [rcx+0x0],al
   140007838:	cmp    eax,DWORD PTR [rax]
   14000783a:	cmp    eax,DWORD PTR [rax]
   14000783c:	rex.RXB add BYTE PTR [r9+0x0],r8b
   140007840:	cmp    eax,DWORD PTR [rax]
   140007842:	cmp    eax,DWORD PTR [rax]
   140007844:	cmp    eax,DWORD PTR [rax]
   140007846:	push   rbx
   140007847:	add    BYTE PTR [rcx+0x0],bl
   14000784a:	sub    DWORD PTR [rax],eax
   14000784c:	sub    BYTE PTR [rax],al
   14000784e:	add    BYTE PTR [r11],dil
   140007851:	add    BYTE PTR [rbx],bh
   140007853:	add    BYTE PTR [rdi+0x0],al
   140007856:	push   rdx
   140007857:	add    BYTE PTR [rbx],bh
   140007859:	add    BYTE PTR [rbx],bh
   14000785b:	add    BYTE PTR [rbx],bh
   14000785d:	add    BYTE PTR [rip+0x29007300],ah        # 0x16900eb63
   140007863:	add    BYTE PTR [rax],al
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax+0x1400027],dh
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rax+0x28],dl
   140007872:	add    BYTE PTR [rax+0x1],al
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    BYTE PTR [rax+0x28],dh
   14000787a:	add    BYTE PTR [rax+0x1],al
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    BYTE PTR [rax+0x59],al
   140007882:	add    BYTE PTR [rax+0x1],al
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    al,dh
   140007889:	sub    BYTE PTR [rax],al
   14000788b:	rex add DWORD PTR [rax],eax
   14000788e:	add    BYTE PTR [rax],al
   140007890:	add    al,BYTE PTR [rbx+rax*1]
   140007893:	add    al,BYTE PTR [rsp+rax*1]
   140007896:	add    al,BYTE PTR [rdx]
   140007898:	add    al,0x4
   14000789a:	add    al,0x3
   14000789c:	add    eax,DWORD PTR [rsp+rax*1]
   14000789f:	add    al,0x0
   1400078a1:	add    al,0x2
   1400078a3:	add    al,BYTE PTR [rdx+rax*1]
   1400078a6:	add    al,0x3
   1400078a8:	add    al,BYTE PTR [rdx]
   1400078aa:	add    al,BYTE PTR [rdx]
   1400078ac:	add    al,BYTE PTR [rdx]
   1400078ae:	add    al,BYTE PTR [rbx]
   1400078b0:	add    al,BYTE PTR [rdx]
   1400078b2:	add    al,BYTE PTR [rbx+rax*1]
   1400078b5:	add    al,BYTE PTR [rdx]
   1400078b7:	add    eax,DWORD PTR [rdx]
   1400078b9:	add    eax,DWORD PTR [rdx]
   1400078bb:	add    al,BYTE PTR [rbx]
   1400078bd:	add    al,0x4
   1400078bf:	add    al,BYTE PTR [rdx]
   1400078c1:	add    al,BYTE PTR [rdx]
   1400078c3:	add    al,BYTE PTR [rdx]
   1400078c5:	add    al,BYTE PTR [rdx]
   1400078c7:	add    eax,DWORD PTR [rsp+rax*1]
   1400078ca:	add    al,0x4
   1400078cc:	add    al,0x2
   1400078ce:	add    al,BYTE PTR [rdx]
   1400078d0:	add    al,BYTE PTR [rdx]
   1400078d2:	add    al,BYTE PTR [rdx]
   1400078d4:	add    al,BYTE PTR [rdx]
   1400078d6:	add    al,BYTE PTR [rax]
	...
   1400078e0:	rol    BYTE PTR [rax],0x0
   1400078e3:	add    BYTE PTR [rax],al
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	rex.RX and eax,0x4110002
   1400078ed:	add    BYTE PTR [rbx],al
   1400078ef:	add    BYTE PTR [rcx],al
   1400078f1:	add    BYTE PTR [rax],al
   1400078f3:	add    BYTE PTR [rax],al
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	in     al,dx
   1400078f9:	sub    ebx,ecx
   1400078fb:	jle    0x140007904
   1400078fd:	mov    eax,esi
   1400078ff:	rex.WRXB (bad) 
   140007901:	rex.X mov ebx,0x20421a7d
   140007907:	cmp    DWORD PTR [rcx],esp
   140007909:	add    al,BYTE PTR [rax]
   14000790b:	adc    DWORD PTR [rdx],eax
   14000790d:	add    BYTE PTR [rbx],al
   14000790f:	add    BYTE PTR [rcx],al
   140007911:	add    BYTE PTR [rax],al
   140007913:	add    BYTE PTR [rax],al
   140007915:	add    BYTE PTR [rax],al
   140007917:	rex sti 
   140007919:	push   0x6f2dd8b0
   14000791e:	stos   DWORD PTR es:[rdi],eax
   14000791f:	rex.WRX mov r8b,BYTE PTR [rbp-0x6d]
   140007923:	je     0x140007972
   140007925:	mov    ecx,0x3ebf59ee
   14000792a:	and    dl,BYTE PTR cs:[rax+0x1b2acd0]
   140007931:	jnp    0x14000798c
   140007933:	icebp  
   140007934:	add    al,0x41
   140007936:	(bad)  [rax+0x400027b0]
   14000793c:	add    DWORD PTR [rax],eax
   14000793e:	add    BYTE PTR [rax],al
   140007940:	push   rax
   140007941:	sub    BYTE PTR [rax],al
   140007943:	rex add DWORD PTR [rax],eax
   140007946:	add    BYTE PTR [rax],al
   140007948:	jo     0x140007972
   14000794a:	add    BYTE PTR [rax+0x1],al
   14000794d:	add    BYTE PTR [rax],al
   14000794f:	add    BYTE PTR [rax+0x16],ah
   140007952:	add    BYTE PTR [rax+0x1],al
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    al,al
   140007959:	(bad)  
   14000795a:	add    BYTE PTR [rax+0x1],al
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rdx+rax*1],ah
   140007962:	add    BYTE PTR [rcx],dl
   140007964:	add    al,BYTE PTR [rax]
   140007966:	add    eax,DWORD PTR [rax]
   140007968:	add    DWORD PTR [rax],eax
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax+0x53],al
   140007971:	pop    rsp
   140007972:	ret    0x7e56
   140007975:	mov    esi,DWORD PTR [rdi+0x46]
   140007978:	sub    DWORD PTR [rdx+rcx*2-0x68],0xffffff95
   14000797d:	adc    BYTE PTR [rbp+riz*1+0x39],cl
   140007981:	adc    DWORD PTR [rdi+0x3f],eax
   140007984:	mov    bh,0xac
   140007986:	add    DWORD PTR [rdx-0x49],ecx
   140007989:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000798a:	call   FWORD PTR [rbp-0x5c]
   14000798d:	mov    edx,0x4432d
   140007992:	add    BYTE PTR [rax],al
   140007994:	add    BYTE PTR [rax],al
   140007996:	add    BYTE PTR [rax+0x4],al
   140007999:	add    BYTE PTR [rax],al
   14000799b:	add    BYTE PTR [rax],al
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    al,0x0
   1400079a2:	add    BYTE PTR [rax],al
   1400079a4:	add    BYTE PTR [rax],al
   1400079a6:	add    BYTE PTR [rax+0x4],al
   1400079a9:	add    BYTE PTR [rax],al
   1400079ab:	add    BYTE PTR [rax],al
   1400079ad:	add    BYTE PTR [rax],al
   1400079af:	and    BYTE PTR [rax+rax*1],al
   1400079b2:	add    BYTE PTR [rax],al
   1400079b4:	add    BYTE PTR [rax],al
   1400079b6:	add    BYTE PTR [rax],ah
   1400079b8:	add    DWORD PTR [rax],eax
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	add    BYTE PTR [rax+0x0],al
   1400079bf:	rex add DWORD PTR [rax],eax
   1400079c2:	add    BYTE PTR [rax],al
   1400079c4:	add    BYTE PTR [rax+0x0],al
   1400079c7:	rex add DWORD PTR [rax],eax
   1400079ca:	add    BYTE PTR [rax],al
   1400079cc:	add    BYTE PTR [rax],al
   1400079ce:	add    BYTE PTR [rax+0x1],al
   1400079d1:	add    BYTE PTR [rax],al
   1400079d3:	add    BYTE PTR [rax],al
   1400079d5:	add    BYTE PTR [rax],al
   1400079d7:	and    BYTE PTR [rcx],al
   1400079d9:	add    BYTE PTR [rax],al
   1400079db:	add    BYTE PTR [rax],al
   1400079dd:	add    BYTE PTR [rax],spl
   1400079e0:	add    DWORD PTR [rax],eax
   1400079e2:	add    BYTE PTR [rax],al
   1400079e4:	add    BYTE PTR [rax],al
   1400079e6:	add    BYTE PTR [rax+0x1],al
   1400079e9:	add    BYTE PTR [rax],al
   1400079eb:	add    BYTE PTR [rax],al
   1400079ed:	add    BYTE PTR [rax],al
   1400079ef:	rex add DWORD PTR [rax],eax
   1400079f2:	add    BYTE PTR [rax],al
   1400079f4:	add    BYTE PTR [rax],al
   1400079f6:	add    BYTE PTR [rax],ah
   1400079f8:	add    DWORD PTR [rax],eax
   1400079fa:	add    BYTE PTR [rax],al
   1400079fc:	add    BYTE PTR [rax+0x0],al
   1400079ff:	add    BYTE PTR [rax+rax*1],0x8
   140007a03:	add    BYTE PTR [rax],al
   140007a05:	add    BYTE PTR [rax],al
   140007a07:	add    BYTE PTR [rcx],0x0
   140007a0a:	or     BYTE PTR [rax],al
   140007a0c:	add    BYTE PTR [rax],al
   140007a0e:	add    BYTE PTR [rax+0x0],al
   140007a14:	add    BYTE PTR [rax],al
   140007a16:	add    DWORD PTR [rax+0x2],eax
   140007a1c:	add    BYTE PTR [rax],al
   140007a1e:	add    BYTE PTR [rax],ah
   140007a20:	add    al,BYTE PTR [rax]
   140007a22:	add    BYTE PTR [rax],al
   140007a24:	add    BYTE PTR [rax],al
   140007a26:	add    BYTE PTR [rax+0x2],al
   140007a29:	add    BYTE PTR [rax],al
   140007a2b:	add    BYTE PTR [rax],al
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	and    BYTE PTR [rdx],al
   140007a31:	add    BYTE PTR [rax],al
   140007a33:	add    BYTE PTR [rax],al
   140007a35:	add    BYTE PTR [rax],al
   140007a37:	adc    BYTE PTR [rax],al
   140007a3a:	add    BYTE PTR [rax],al
   140007a3c:	add    BYTE PTR [rax],al
   140007a3e:	add    BYTE PTR [rax+0x8],al
   140007a41:	add    BYTE PTR [rax],al
   140007a43:	add    BYTE PTR [rax],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	and    BYTE PTR [rax],cl
   140007a49:	add    BYTE PTR [rax],al
   140007a4b:	add    BYTE PTR [rax],al
   140007a4d:	add    BYTE PTR [rax],al
   140007a4f:	or     BYTE PTR [rax],al
   140007a52:	add    BYTE PTR [rax],al
   140007a54:	add    BYTE PTR [rax],al
   140007a56:	add    BYTE PTR [rax+0x0],al
   140007a59:	add    DWORD PTR [rax],eax
   140007a5b:	add    BYTE PTR [rax],al
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    BYTE PTR [rax],al
   140007a62:	add    BYTE PTR [rax],al
   140007a64:	add    BYTE PTR [rax],al
   140007a66:	add    BYTE PTR [rax+0x0],al
   140007a69:	add    BYTE PTR [rax],al
   140007a6c:	add    BYTE PTR [rax],al
   140007a6e:	add    BYTE PTR [rax+0x0],al
   140007a71:	add    al,BYTE PTR [rax]
   140007a73:	add    BYTE PTR [rax],al
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    BYTE PTR [rax],al
   140007a7a:	adc    BYTE PTR [rax],al
   140007a7c:	add    BYTE PTR [rax],al
   140007a7e:	add    BYTE PTR [rax+0x0],al
   140007a81:	add    BYTE PTR [rax],al
   140007a83:	and    BYTE PTR [rax],al
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    BYTE PTR [rax],al
   140007a8a:	add    BYTE PTR [rax],ah
   140007a8c:	add    BYTE PTR [rax],al
   140007a8e:	add    BYTE PTR [rax+0x20],al
   140007a91:	add    BYTE PTR [rax],al
   140007a93:	add    BYTE PTR [rax],al
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	and    BYTE PTR [rax],al
   140007a9a:	add    BYTE PTR [rax],al
   140007a9c:	add    BYTE PTR [rax],al
   140007a9e:	add    BYTE PTR [rax],ah
   140007aa0:	add    BYTE PTR [rax],0x0
   140007aa3:	add    BYTE PTR [rax],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	rex add BYTE PTR [rax],0x0
   140007aab:	add    BYTE PTR [rax],al
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	rex add BYTE PTR [rax],0x0
   140007ab3:	add    BYTE PTR [rax],al
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rax+rax*1],al
   140007abb:	add    BYTE PTR [rax],al
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rax],dl
   140007ac2:	add    BYTE PTR [rax],al
   140007ac4:	add    BYTE PTR [rax],al
   140007ac6:	add    BYTE PTR [rax+0x0],al
   140007ac9:	adc    BYTE PTR [rax],al
   140007acb:	add    BYTE PTR [rax],al
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rax],spl
   140007ad2:	add    BYTE PTR [rax],al
   140007ad4:	add    BYTE PTR [rax],al
   140007ad6:	add    BYTE PTR [rax+0x0],al
   140007ad9:	and    BYTE PTR [rax],al
   140007adb:	add    BYTE PTR [rax],al
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    BYTE PTR [rax+0x0],al
   140007ae6:	add    BYTE PTR [rax+0x0],al
   140007ae9:	add    BYTE PTR [rcx],al
   140007aeb:	add    BYTE PTR [rax],al
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rax],al
   140007af2:	add    DWORD PTR [rax],eax
   140007af4:	add    BYTE PTR [rax],al
   140007af6:	add    BYTE PTR [rax+0x0],al
   140007af9:	add    BYTE PTR [rcx],al
   140007afb:	add    BYTE PTR [rax],al
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	and    BYTE PTR [rax],al
   140007b01:	add    BYTE PTR [rcx],al
   140007b03:	add    BYTE PTR [rax],al
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    BYTE PTR [rax],0x0
   140007b0a:	add    al,BYTE PTR [rax]
   140007b0c:	add    BYTE PTR [rax],al
   140007b0e:	add    BYTE PTR [rax+0x0],al
   140007b11:	add    BYTE PTR [rax+rax*1],al
   140007b14:	add    BYTE PTR [rax],al
   140007b16:	add    BYTE PTR [rax+0x0],al
   140007b19:	or     BYTE PTR [rax],al
   140007b1b:	add    BYTE PTR [rax],al
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    BYTE PTR [rax],al
   140007b22:	and    BYTE PTR [rax],al
   140007b24:	add    BYTE PTR [rax],al
   140007b26:	add    BYTE PTR [rax+0x0],al
   140007b29:	add    BYTE PTR [rax+0x0],al
   140007b2c:	add    BYTE PTR [rax],al
   140007b2e:	add    BYTE PTR [rax+0x0],al
   140007b31:	add    BYTE PTR [rax+0x0],al
   140007b37:	add    BYTE PTR [rax],al
   140007b3a:	add    BYTE PTR [rax+rax*1],al
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rax],al
   140007b42:	add    BYTE PTR [rcx],al
   140007b44:	add    BYTE PTR [rax],al
   140007b46:	add    BYTE PTR [rax+0x0],al
   140007b49:	add    BYTE PTR [rax],al
   140007b4b:	add    al,BYTE PTR [rax]
   140007b4d:	add    BYTE PTR [rax],al
   140007b4f:	add    BYTE PTR [rax],al
   140007b52:	add    BYTE PTR [rax],dl
   140007b54:	add    BYTE PTR [rax],al
   140007b56:	add    BYTE PTR [rax],ah
   140007b58:	add    al,0x0
   140007b5a:	or     BYTE PTR [rax],dl
   140007b5c:	add    BYTE PTR [rax],al
   140007b5e:	add    BYTE PTR [rax+0x8000000],al
   140007b64:	add    BYTE PTR [rax],al
   140007b66:	add    BYTE PTR [rax],ah
   140007b68:	add    BYTE PTR [rax],al
   140007b6a:	add    BYTE PTR [rax],cl
   140007b6c:	add    BYTE PTR [rax],al
   140007b6e:	add    BYTE PTR [rax+0x0],al
   140007b74:	adc    BYTE PTR [rax],al
   140007b76:	add    BYTE PTR [rax+0x40000000],al
   140007b7c:	add    BYTE PTR [rax],al
   140007b7e:	add    BYTE PTR [rax+0x0],al
   140007b81:	add    BYTE PTR [rax],al
   140007b83:	add    BYTE PTR [rax],0x0
   140007b86:	add    BYTE PTR [rax+0x0],al
   140007b89:	add    BYTE PTR [rax],al
   140007b8b:	add    BYTE PTR [rcx],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rax],al
   140007b92:	add    BYTE PTR [rax],al
   140007b94:	add    al,BYTE PTR [rax]
   140007b96:	add    BYTE PTR [rax+0x0],al
   140007b99:	add    BYTE PTR [rax],al
   140007b9b:	add    BYTE PTR [rax+rax*1],al
   140007b9e:	add    BYTE PTR [rax+0x0],al
   140007ba1:	add    BYTE PTR [rax],al
   140007ba3:	add    BYTE PTR [rax],cl
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rax],al
   140007baa:	add    BYTE PTR [rax],al
   140007bac:	and    BYTE PTR [rax],al
   140007bae:	add    BYTE PTR [rax+0x0],al
   140007bb1:	add    BYTE PTR [rax],al
   140007bb3:	add    BYTE PTR [rax+0x0],al
   140007bb6:	add    BYTE PTR [rax+0x0],al
   140007bb9:	add    BYTE PTR [rax],al
   140007bbb:	add    BYTE PTR [rax+0x400000],al
   140007bc1:	add    BYTE PTR [rax],al
   140007bc3:	add    BYTE PTR [rax],al
   140007bc5:	add    DWORD PTR [rax],eax
   140007bc7:	and    BYTE PTR [rdx],al
   140007bca:	add    BYTE PTR [rcx],dl
   140007bcc:	add    al,BYTE PTR [rax]
   140007bce:	add    eax,DWORD PTR [rax]
   140007bd0:	add    DWORD PTR [rax],eax
   140007bd2:	add    BYTE PTR [rax],al
   140007bd4:	add    BYTE PTR [rax],al
   140007bd6:	add    BYTE PTR [rax+0x0],al
   140007bd9:	cmp    al,0x0
   140007bdb:	rex add DWORD PTR [rax],eax
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	lock cmp eax,DWORD PTR [rax]
   140007be3:	rex add DWORD PTR [rax],eax
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	adc    BYTE PTR [rax+rax*1],bh
   140007beb:	rex add DWORD PTR [rax],eax
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	rex pop rcx
   140007bf2:	add    BYTE PTR [rax+0x1],al
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rax+0x59],al
   140007bfa:	add    BYTE PTR [rax+0x1],al
   140007bfd:	add    BYTE PTR [rax],al
   140007bff:	add    BYTE PTR [rax+0x59],al
   140007c02:	add    BYTE PTR [rax+0x1],al
   140007c05:	add    BYTE PTR [rax],al
   140007c07:	add    BYTE PTR [rax+0x59],al
   140007c0a:	add    BYTE PTR [rax+0x1],al
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    BYTE PTR [rax+0x59],al
   140007c12:	add    BYTE PTR [rax+0x1],al
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    BYTE PTR [rax],dh
   140007c19:	cmp    al,BYTE PTR [rax]
   140007c1b:	rex add DWORD PTR [rax],eax
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	adc    BYTE PTR [rbx],bh
   140007c22:	add    BYTE PTR [rax+0x1],al
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rax],dh
   140007c29:	cmp    eax,DWORD PTR [rax]
   140007c2b:	rex add DWORD PTR [rax],eax
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	rex pop rcx
   140007c32:	add    BYTE PTR [rax+0x1],al
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    BYTE PTR [rax+0x59],al
   140007c3a:	add    BYTE PTR [rax+0x1],al
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    BYTE PTR [rax+0x59],al
   140007c42:	add    BYTE PTR [rax+0x1],al
   140007c45:	add    BYTE PTR [rax],al
   140007c47:	add    BYTE PTR [rax+0x59],al
   140007c4a:	add    BYTE PTR [rax+0x1],al
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rax+0x59],al
   140007c52:	add    BYTE PTR [rax+0x1],al
   140007c55:	add    BYTE PTR [rax],al
   140007c57:	add    BYTE PTR [rax+0x59],al
   140007c5a:	add    BYTE PTR [rax+0x1],al
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rax+0x59],al
   140007c62:	add    BYTE PTR [rax+0x1],al
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rax+0x59],al
   140007c6a:	add    BYTE PTR [rax+0x1],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rax+0x140003b],dh
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rax],al
   140007c79:	cmp    al,0x0
   140007c7b:	rex add DWORD PTR [rax],eax
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	lock cmp eax,DWORD PTR [rax]
   140007c83:	rex add DWORD PTR [rax],eax
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	adc    BYTE PTR [rax+rax*1],bh
   140007c8b:	rex add DWORD PTR [rax],eax
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	(bad)  
   140007c91:	add    BYTE PTR cs:[rax+0x1],al
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    BYTE PTR [rax],al
   140007c99:	xor    al,BYTE PTR [rax]
   140007c9b:	rex add DWORD PTR [rax],eax
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	adc    BYTE PTR [rip+0x14000],dh        # 0x14001bca6
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	shl    BYTE PTR [rip+0x14000],1        # 0x14001bcae
   140007cae:	add    BYTE PTR [rax],al
   140007cb0:	and    BYTE PTR [rsi],dh
   140007cb2:	add    BYTE PTR [rax+0x1],al
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rax],dh
   140007cb9:	cmp    al,BYTE PTR [rax]
   140007cbb:	rex add DWORD PTR [rax],eax
   140007cbe:	add    BYTE PTR [rax],al
   140007cc0:	adc    BYTE PTR [rbx],bh
   140007cc2:	add    BYTE PTR [rax+0x1],al
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rax],dh
   140007cc9:	cmp    eax,DWORD PTR [rax]
   140007ccb:	rex add DWORD PTR [rax],eax
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	and    BYTE PTR [rdx],ch
   140007cd2:	add    BYTE PTR [rax+0x1],al
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    al,dh
   140007cd9:	sub    DWORD PTR [rax],eax
   140007cdb:	rex add DWORD PTR [rax],eax
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	and    BYTE PTR [rdx],ch
   140007ce2:	add    BYTE PTR [rax+0x1],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rax],ah
   140007ce9:	sub    al,BYTE PTR [rax]
   140007ceb:	rex add DWORD PTR [rax],eax
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	and    BYTE PTR [rdx],ch
   140007cf2:	add    BYTE PTR [rax+0x1],al
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    al,dl
   140007cf9:	xor    al,BYTE PTR [rax]
   140007cfb:	rex add DWORD PTR [rax],eax
   140007cfe:	add    BYTE PTR [rax],al
   140007d00:	and    BYTE PTR [rdx],ch
   140007d02:	add    BYTE PTR [rax+0x1],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    BYTE PTR [rax],ah
   140007d09:	sub    al,BYTE PTR [rax]
   140007d0b:	rex add DWORD PTR [rax],eax
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	and    BYTE PTR [rip+0x14000],ch        # 0x14001bd16
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	nop
   140007d19:	rex.WX add BYTE PTR [rax+0x1],al
   140007d1d:	add    BYTE PTR [rax],al
   140007d1f:	add    BYTE PTR [rax+0x28],dl
   140007d22:	add    BYTE PTR [rax+0x1],al
   140007d25:	add    BYTE PTR [rax],al
   140007d27:	add    BYTE PTR [rax],dh
   140007d29:	rex.WXB add BYTE PTR [r8+0x1],al
   140007d2d:	add    BYTE PTR [rax],al
   140007d2f:	add    BYTE PTR [rax+0x59],al
   140007d32:	add    BYTE PTR [rax+0x1],al
   140007d35:	add    BYTE PTR [rax],al
   140007d37:	add    BYTE PTR [rax+0x59],al
   140007d3a:	add    BYTE PTR [rax+0x1],al
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    BYTE PTR [rax+0x59],al
   140007d42:	add    BYTE PTR [rax+0x1],al
   140007d45:	add    BYTE PTR [rax],al
   140007d47:	add    al,dh
   140007d49:	sub    BYTE PTR [rax],al
   140007d4b:	rex add DWORD PTR [rax],eax
   140007d4e:	add    BYTE PTR [rax],al
   140007d50:	nop
   140007d51:	rex.WX add BYTE PTR [rax+0x1],al
   140007d55:	add    BYTE PTR [rax],al
   140007d57:	add    BYTE PTR [rax+0x28],dl
   140007d5a:	add    BYTE PTR [rax+0x1],al
   140007d5d:	add    BYTE PTR [rax],al
   140007d5f:	add    BYTE PTR [rax],dh
   140007d61:	rex.WXB add BYTE PTR [r8+0x1],al
   140007d65:	add    BYTE PTR [rax],al
   140007d67:	add    al,ah
   140007d69:	(bad)  
   140007d6a:	add    BYTE PTR [rax+0x1],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rax+0x42],al
   140007d72:	add    BYTE PTR [rax+0x1],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    al,ah
   140007d79:	add    BYTE PTR [r8+0x1],r8b
   140007d7d:	add    BYTE PTR [rax],al
   140007d7f:	add    al,ah
   140007d81:	add    BYTE PTR ds:[rax+0x1],al
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rax],al
   140007d89:	rex.WX add BYTE PTR [rax+0x1],al
   140007d8d:	add    BYTE PTR [rax],al
   140007d8f:	add    BYTE PTR [rax+0x1400049],ah
   140007d95:	add    BYTE PTR [rax],al
   140007d97:	add    BYTE PTR [rax],al
   140007d99:	(bad)  
   140007d9a:	add    BYTE PTR [rax+0x1],al
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rax],ah
   140007da1:	sbb    al,BYTE PTR [rax]
   140007da3:	rex add DWORD PTR [rax],eax
   140007da6:	add    BYTE PTR [rax],al
   140007da8:	(bad)  
   140007da9:	pop    rdi
   140007daa:	add    BYTE PTR [rax+0x1],al
   140007dad:	add    BYTE PTR [rax],al
   140007daf:	add    BYTE PTR [rax+0x5f],ah
   140007db2:	add    BYTE PTR [rax+0x1],al
	...
   140007dbd:	add    BYTE PTR [rax],al
   140007dbf:	add    BYTE PTR [rax+0x5f],dh
   140007dc2:	add    BYTE PTR [rax+0x1],al
   140007dc5:	add    BYTE PTR [rax],al
   140007dc7:	add    BYTE PTR [rax+0x5f],dh
   140007dca:	add    BYTE PTR [rax+0x1],al
	...
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    al,dl
   140007de1:	add    DWORD PTR [rax],0x140
   140007de7:	add    BYTE PTR [rax+0x55],dh
   140007dea:	add    BYTE PTR [rax+0x1],al
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rax+0x1400055],ah
	...
   140007e1d:	add    BYTE PTR [rax],al
   140007e1f:	add    BYTE PTR [rdx+0x140007f],dl
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rcx],al
   140007e29:	add    BYTE PTR [rax],al
   140007e2b:	add    BYTE PTR [rax],al
   140007e2d:	add    BYTE PTR [rdx],cl
	...
   140007e37:	add    BYTE PTR [rbp+0x2],ah
   140007e3a:	add    BYTE PTR [rax],cl
	...
   140007e58:	add    DWORD PTR [rax],eax
   140007e5a:	add    BYTE PTR [rdx],al
	...
   140007e68:	jo     0x140007dec
   140007e6a:	add    BYTE PTR [rax+0x1],al
	...
   140007e75:	add    BYTE PTR [rax],al
   140007e77:	add    BYTE PTR [rax+rax*1],bh
   140007e7a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140007e7e:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140007e83:	add    BYTE PTR [rax],al
   140007e85:	add    BYTE PTR [rax],al
   140007e87:	add    BYTE PTR [rax-0x70cea4ff],ch
   140007e8d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007e8e:	rex.RB
   140007e8f:	rex lahf 
   140007e91:	outs   dx,BYTE PTR ds:[rsi]
   140007e92:	cmp    BYTE PTR [rdx+0x4c],dh
   140007e95:	rex.RB
   140007e96:	repz (bad) 
   140007e98:	jrcxz  0x140007e3b
   140007e9a:	add    ebx,ebx
   140007e9c:	sub    esp,DWORD PTR [rdi+rcx*8+0x208f11]
   140007ea3:	sbb    BYTE PTR [rdi+0x2c],0xd0
   140007ea7:	fs pop rax
   140007ea9:	jbe    0x140007e9a
   140007eab:	(bad)  
   140007eac:	out    dx,al
   140007ead:	loope  0x140007ebd
   140007eaf:	xchg   rdi,rax
   140007eb1:	(bad)  
   140007eb2:	(bad)  
   140007eb3:	sub    al,0xb4
   140007eb5:	xlat   BYTE PTR ds:[rbx]
   140007eb6:	ins    DWORD PTR es:[rdi],dx
   140007eb7:	(bad)  
   140007eb8:	sub    eax,0xc9bf70a4
   140007ebd:	add    eax,0xcaad4858
   140007ec2:	rex jae 0x140007eef
   140007ec5:	repz sub al,0xd6
   140007ec8:	shl    al,1
   140007eca:	push   rsp
   140007ecb:	rex.WB (bad) 
   140007ecd:	sti    
   140007ece:	rcl    DWORD PTR [rcx],1
   140007ed0:	test   BYTE PTR [rax],dl
   140007ed2:	add    BYTE PTR [rax+0x8],ah
   140007ed5:	ret    
   140007ed6:	sti    
   140007ed7:	cld    
   140007ed8:	movabs eax,ds:0x8c49635b8fb21fb2
   140007ee1:	and    DWORD PTR [rcx],esp
   140007ee3:	rex.RB je 0xf1fafed7
   140007eea:	mov    bh,0xa2
   140007eec:	fcom   QWORD PTR cs:[rcx+0x2becbe40]
   140007ef3:	rex.RXB sub eax,0xe1acfd66
   140007ef9:	sub    bl,BYTE PTR [rdx]
   140007efb:	mov    ebx,0x11cfa4f9
   140007f00:	(bad)  
   140007f01:	and    BYTE PTR [rax],al
   140007f03:	sbb    BYTE PTR [rdi+0x2c],0xd0
   140007f07:	fs xchg edi,eax
   140007f09:	fnstcw WORD PTR [rbx+rbx*1-0x1]
   140007f0d:	in     eax,0x32
   140007f0f:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140007f11:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007f12:	sub    bl,BYTE PTR [rsi-0x7a5c929d]
   140007f18:	jns    0x140007f2f
   140007f1a:	(bad)  
   140007f1b:	(bad)  
   140007f1c:	or     esp,DWORD PTR [rbx+0x76a24c8b]
   140007f22:	pmuludq mm3,mm4
   140007f25:	rex.B out 0x55,eax
   140007f28:	fs (bad) 
   140007f2a:	jp     0x140007f1c
   140007f2c:	add    DWORD PTR [rcx],ebp
   140007f2e:	loope  0x140007f31
   140007f30:	sbb    esi,ebp
   140007f32:	fld    DWORD PTR [rbp-0x2812cf1d]
   140007f38:	push   rbx
   140007f39:	pop    rsp
   140007f3a:	ret    0x7e56
   140007f3d:	mov    esi,DWORD PTR [rdi+0x46]
   140007f40:	sub    DWORD PTR [rdx+rcx*2-0x68],0xffffff95
   140007f45:	adc    BYTE PTR [rbp+riz*1-0x5f],cl
   140007f49:	sub    ebp,DWORD PTR [rcx-0x65fd97e3]
   140007f4f:	rex.WRXB xchg r13,rax
   140007f51:	mov    esi,0xdf7255d2
   140007f56:	or     BYTE PTR [rcx],0x77
   140007f59:	add    BYTE PTR [rdi+0x0],ch
   140007f5c:	data16 add BYTE PTR [rbp+0x0],dh
   140007f60:	je     0x140007f62
   140007f62:	imul   eax,DWORD PTR [rax],0x2e006c
   140007f68:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rdi+0x6f],dl
   140007f72:	push   bx
   140007f74:	push   0x646c756f
   140007f79:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007f7b:	ins    DWORD PTR es:[rdi],dx
   140007f7c:	jo     0x140007ff0
   140007f7e:	gs jae 0x140007ff4
   140007f81:	rex.X imul ebp,DWORD PTR [rsi+0x61],0x73656972
	...
   140007f91:	add    BYTE PTR [rax],al
   140007f93:	add    BYTE PTR [rip+0xb000807],dl        # 0x14b0087a0
   140007f99:	pop    rbx
   140007f9a:	adc    DWORD PTR [rax],ecx
   140007f9c:	and    eax,0x220125c
   140007fa1:	add    BYTE PTR [rcx],ah
   140007fa3:	add    eax,DWORD PTR [rax]
   140007fa5:	add    BYTE PTR [rcx],ch
   140007fa7:	add    BYTE PTR [rax],bh
   140007fa9:	add    BYTE PTR [rax],al
   140007fab:	add    bh,bh
   140007fad:	(bad)  
   140007fae:	(bad)  
   140007faf:	inc    DWORD PTR [rax]
   140007fb1:	add    BYTE PTR [rdx],dl
   140007fb3:	or     BYTE PTR [rip+0x1d5b5c5c],ah        # 0x15d5bdc15
   140007fb9:	add    ecx,DWORD PTR [rax]
   140007fbb:	add    BYTE PTR [rax],cl
   140007fbd:	pop    rbx
   140007fbe:	adc    eax,0x4c000803
   140007fc3:	add    ah,dh
   140007fc5:	call   FWORD PTR [rbx+rbx*2+0x11]
   140007fc9:	or     al,0x8
   140007fcb:	pop    rsp
   140007fcc:	add    BYTE PTR [rax],al
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	add    BYTE PTR [rcx+rax*1],bpl
   140007fd4:	pop    rax
   140007fd5:	add    BYTE PTR [rax],al
   140007fd7:	add    BYTE PTR [rax+0x0],ah
   140007fda:	add    BYTE PTR [rax],al
   140007fdc:	sub    BYTE PTR [rax],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	add    BYTE PTR [rax],al
   140007fe2:	add    BYTE PTR [rax],al
   140007fe4:	or     al,BYTE PTR [rax]
   140007fe6:	or     BYTE PTR [rax],al
   140007fe8:	jb     0x140007fea
   140007fea:	add    BYTE PTR [rax],al
   140007fec:	add    BYTE PTR [rax],al
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	rol    BYTE PTR [rcx+0x14000],0x0
   140007ff7:	add    al,cl
   140007ff9:	add    BYTE PTR [rax],al
   140007ffb:	add    BYTE PTR [rax],cl
   140007ffd:	add    BYTE PTR [rax],al
   140007fff:	add    BYTE PTR [rax-0x7e],dl
   140008002:	add    BYTE PTR [rax+0x1],al
   140008005:	add    BYTE PTR [rax],al
   140008007:	add    BYTE PTR [rdx+0x10000000],cl
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rcx+rax*4+0x14000],bh
   140008016:	add    BYTE PTR [rax],al
   140008018:	or     eax,DWORD PTR [rcx]
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	sbb    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	mov    esp,0x1400081
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rbx],cl
   140008029:	add    DWORD PTR [rax],eax
   14000802b:	add    BYTE PTR [rax],ah
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rax],dh
   140008031:	(bad)  
   140008032:	add    BYTE PTR [rax+0x1],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    al,cl
   140008039:	add    BYTE PTR [rax],al
   14000803b:	add    BYTE PTR [rax],ch
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    BYTE PTR [rax+0x1400080],dl
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    BYTE PTR [rbx],cl
   140008049:	add    BYTE PTR [rax],al
   14000804b:	add    BYTE PTR [rax],dh
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    al,al
   140008051:	add    DWORD PTR [rax],0x140
   140008057:	add    al,cl
   140008059:	add    BYTE PTR [rax],al
   14000805b:	add    BYTE PTR [rax],bh
   14000805d:	add    BYTE PTR [rax],al
   14000805f:	add    BYTE PTR [rax-0x7d],dl
   140008062:	add    BYTE PTR [rax+0x1],al
   140008065:	add    BYTE PTR [rax],al
   140008067:	add    BYTE PTR [rdx+0x40000000],cl
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    al,al
   140008071:	add    DWORD PTR [rax],0x140
   140008077:	add    BYTE PTR [rax-0x7f],dl
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	rex.W add BYTE PTR [rax],al
   14000807f:	add    al,al
   140008081:	add    DWORD PTR [rax],0x140
   140008087:	add    al,dh
   140008089:	add    BYTE PTR [rax],al
   14000808b:	add    BYTE PTR [rax+0x0],dl
   14000808e:	add    BYTE PTR [rax],al
   140008090:	and    DWORD PTR [rax],esp
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	rol    BYTE PTR [rax+0x14000],0x0
   14000809f:	add    BYTE PTR [rdx],al
   1400080a1:	add    BYTE PTR [rax],al
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    al,al
   1400080a9:	jge    0x1400080ab
   1400080ab:	rex add DWORD PTR [rax],eax
	...
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	rex.B (bad) 
   1400080c2:	add    DWORD PTR [rax],eax
   1400080c4:	or     BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	mov    al,0x81
   1400080ca:	add    BYTE PTR [rax+0x1],al
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rdx+0x8000000],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rax],al
   1400080d9:	add    BYTE PTR [rax],al
   1400080db:	add    BYTE PTR [rcx],al
	...
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    BYTE PTR [rcx],ah
   1400080e9:	add    BYTE PTR [rax],al
   1400080eb:	add    BYTE PTR [rax],al
   1400080ed:	add    BYTE PTR [rax],al
   1400080ef:	add    BYTE PTR [rcx+rax*4+0x14000],bh
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	xchg   ebx,eax
   1400080f9:	add    BYTE PTR [rax],al
   1400080fb:	add    BYTE PTR [rax],al
   1400080fd:	add    BYTE PTR [rax],al
   1400080ff:	add    BYTE PTR [rax],cl
   140008101:	add    BYTE PTR [rax],al
   140008103:	add    BYTE PTR [rax],al
   140008105:	add    BYTE PTR [rax],al
   140008107:	add    BYTE PTR [rcx+rax*4+0x14000],bh
   14000810e:	add    BYTE PTR [rax],al
   140008110:	add    al,0x5d
   140008112:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   140008118:	lahf   
   140008119:	call   0x1502b8126
   14000811e:	rex.W (bad) 
   140008120:	add    al,BYTE PTR [rax]
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	cmp    BYTE PTR [rdx+0x14000],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	rol    BYTE PTR [rdx+0x14000],cl
   140008136:	add    BYTE PTR [rax],al
   140008138:	(bad)
   14000813c:	add    DWORD PTR [rax],eax
   14000813e:	add    BYTE PTR [rax],al
   140008140:	xchg   edx,eax
   140008141:	jg     0x140008143
   140008143:	rex add DWORD PTR [rax],eax
	...
   14000815e:	add    BYTE PTR [rax],al
   140008160:	xor    eax,DWORD PTR [rip+0xffffffffbeba7171]        # 0xfebaf2d7
   140008166:	(bad)  
   140008167:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   14000816b:	fucomi st,st(7)
   14000816d:	pushf  
   14000816e:	int3   
   14000816f:	add    DWORD PTR ss:[rax],eax
   140008172:	add    BYTE PTR [rax],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	movabs al,ds:0x1400080
   140008181:	add    BYTE PTR [rax],al
   140008183:	add    BYTE PTR [rax],al
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rax-0x7e],bl
   14000818a:	add    BYTE PTR [rax+0x1],al
	...
   1400081b1:	add    BYTE PTR [rax],al
   1400081b3:	add    BYTE PTR [rbx],al
   1400081b5:	(bad)  
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	cmp    BYTE PTR [rax],al
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR fs:[rdx],al
   1400081bf:	add    BYTE PTR [rip+0x0],al        # 0x1400081c5
   1400081c5:	add    BYTE PTR [rsi],bl
	...
   1400081cf:	add    BYTE PTR [rax+0x0],ah
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	ret    0xd210
   1400081d7:	rex.XB sti 
   1400081d9:	rex.WRB rol BYTE PTR [r11+rbp*4+0x40],1
   1400081de:	xor    DWORD PTR [rdx-0xc7f164e],ebp
   1400081e4:	add    DWORD PTR [rax],eax
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	add    al,0x5d
   1400081ea:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   1400081f0:	lahf   
   1400081f1:	call   0x1502b81fe
   1400081f6:	rex.W (bad) 
   1400081f8:	add    al,BYTE PTR [rax]
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	cmp    BYTE PTR [rdx+0x14000],al
	...
   14000821e:	add    BYTE PTR [rax],al
   140008220:	jo     0x1400081a4
   140008222:	add    BYTE PTR [rax+0x1],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rax],al
   140008229:	add    BYTE PTR [rax],al
   14000822b:	(bad)  
   14000822c:	add    BYTE PTR [rax],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	(bad)  
   140008231:	add    BYTE PTR [rax],al
   140008233:	add    BYTE PTR [rax],al
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    BYTE PTR [rdx],al
   140008239:	add    BYTE PTR [rax],al
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax+0x140007d],ch
	...
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rax],dh
   140008251:	(bad)  
   140008252:	add    BYTE PTR [rax],al
   140008254:	or     BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	pop    rax
   140008259:	add    DWORD PTR [rax],0x40
   14000825c:	add    DWORD PTR [rax],eax
   14000825e:	add    BYTE PTR [rax],al
   140008260:	sar    BYTE PTR [rdi+0x0],1
   140008263:	rex add DWORD PTR [rax],eax
	...
   14000826e:	add    BYTE PTR [rax],al
   140008270:	loopne 0x1400082ef
   140008272:	add    BYTE PTR [rax+0x1],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rax+0x140007d],bl
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    dl,dl
   140008281:	(bad)  
   140008282:	add    BYTE PTR [rax+0x1],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    ah,al
   140008289:	add    DWORD PTR [rax],0x140
	...
   140008297:	add    BYTE PTR [rax+0x1400082],dh
   14000829d:	add    BYTE PTR [rax],al
   14000829f:	add    BYTE PTR [rdx],al
   1400082a1:	add    BYTE PTR [rax],al
   1400082a3:	add    BYTE PTR [rax],al
   1400082a5:	add    BYTE PTR [rax],al
   1400082a7:	add    BYTE PTR [rax],dl
   1400082a9:	add    DWORD PTR [rax],0x140
   1400082af:	add    BYTE PTR [rbx],dh
   1400082b1:	add    eax,0xbeba7171
   1400082b6:	(bad)  
   1400082b7:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   1400082bb:	fucomi st,st(7)
   1400082bd:	pushf  
   1400082be:	int3   
   1400082bf:	add    DWORD PTR ss:[rax],eax
	...
   1400082d2:	add    BYTE PTR [rax+0x0],cl
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rax],al
   1400082d9:	add    BYTE PTR [rax],cl
   1400082db:	add    BYTE PTR [rdx],dh
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rax],al
   1400082e1:	add    BYTE PTR [rax],al
   1400082e3:	add    BYTE PTR [rax+0x0],al
   1400082e6:	or     al,BYTE PTR [rcx]
	...
   1400082f0:	add    BYTE PTR [rax+0x0],cl
   1400082f3:	add    BYTE PTR [rax],al
   1400082f5:	add    BYTE PTR [rcx],al
   1400082f7:	add    BYTE PTR [rax+0x0],bl
   1400082fa:	xor    al,BYTE PTR [rax]
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	push   rsi
   1400082ff:	add    BYTE PTR [rax+rax*1],ah
   140008302:	rex.RX or r9b,BYTE PTR [rdx]
   140008305:	add    eax,0x10000
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	rex.W add BYTE PTR [rax],cl
   140008311:	add    BYTE PTR [rip+0x10008a00],cl        # 0x150010d17
   140008317:	add    BYTE PTR [rdx],al
   140008319:	add    BYTE PTR [rbx],cl
   14000831b:	add    DWORD PTR [rax],ebx
   14000831d:	add    BYTE PTR [rdx],cl
   14000831f:	add    BYTE PTR [rbx],cl
   140008321:	add    DWORD PTR [rax],esp
   140008323:	add    BYTE PTR [rdx],cl
   140008325:	add    BYTE PTR [rax+0x0],cl
   140008328:	sub    BYTE PTR [rax],al
   14000832a:	mov    ecx,0x30000b00
   14000832f:	add    BYTE PTR [rax+rax*1],cl
   140008332:	rex.W add BYTE PTR [rax],dil
   140008335:	add    BYTE PTR [rax],cl
   140008337:	add    BYTE PTR [rdx+0x2c004000],cl
   14000833d:	add    BYTE PTR [rax+0x21],dl
   140008340:	rex.W add BYTE PTR [rax],cl
   140008343:	add    BYTE PTR [rax+0x0],dh
   140008346:	push   rax
   140008347:	add    BYTE PTR [rax],cl
   140008349:	add    BYTE PTR [rax],al
   14000834b:	add    BYTE PTR [rax],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rax],dh
   140008351:	add    eax,DWORD PTR [rax]
   140008353:	add    BYTE PTR [rax],cl
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    BYTE PTR [rax+0x0],al
   14000835a:	add    BYTE PTR [rcx],al
   14000835c:	or     BYTE PTR [rax],al
	...
   14000836e:	or     BYTE PTR [rax],al
   140008370:	jb     0x140008372
	...
   140008382:	add    BYTE PTR [rax],al
   140008384:	cmp    QWORD PTR [r15+0x55],r11
   14000838b:	add    BYTE PTR [rdx],al
   14000838d:	add    BYTE PTR [rax],al
   14000838f:	add    BYTE PTR [rsi],ch
   140008391:	add    BYTE PTR [rax],al
   140008393:	add    BYTE PTR [rax-0x7fffff7c],al
   140008399:	push   0x0
   14000839b:	add    BYTE PTR [rax],al
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    BYTE PTR [rbp+0x39],cl
   1400083a2:	lahf   
   1400083a3:	push   rbp
   1400083a4:	add    BYTE PTR [rax],al
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	or     eax,0xe0000000
   1400083ad:	add    DWORD PTR [rax],eax
   1400083af:	add    ah,al
   1400083b1:	test   BYTE PTR [rax],al
   1400083b3:	add    ah,al
   1400083b5:	push   0x0
	...
   1400083df:	add    BYTE PTR [rax+0x0],ah
	...
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rax],cl
   140008439:	movabs al,ds:0x14000
	...
   14000844e:	add    BYTE PTR [rax],al
   140008450:	rex je 0x140008453
   140008453:	rex add DWORD PTR [rax],eax
   140008456:	add    BYTE PTR [rax],al
   140008458:	rex.W je 0x14000845b
   14000845b:	rex add DWORD PTR [rax],eax
   14000845e:	add    BYTE PTR [rax],al
   140008460:	mov    BYTE PTR [rax+rax*1+0x40],dh
   140008464:	add    DWORD PTR [rax],eax
   140008466:	add    BYTE PTR [rax],al
   140008468:	xor    eax,0x0
   14000846d:	add    BYTE PTR [rax],al
   14000846f:	add    BYTE PTR [rax],al
   140008471:	xor    eax,0x0
	...
   14000847e:	add    BYTE PTR [rax],al
   140008480:	push   rdx
   140008481:	push   rbx
   140008482:	rex.R push rbx
   140008484:	add    al,0x33
   140008486:	jge    0x140008478
   140008488:	xor    DWORD PTR [rcx-0x2a67be7c],ebx
   14000848e:	ja     0x1400084ad
   140008490:	mov    bh,0x57
   140008492:	scas   eax,DWORD PTR es:[rdi]
   140008493:	cdq    
   140008494:	add    DWORD PTR [rax],eax
   140008496:	add    BYTE PTR [rax],al
   140008498:	rex.X jns 0x14000850f
   14000849b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000849e:	fs gs rex.RXB
   1400084a1:	outs   dx,BYTE PTR gs:[rsi]
   1400084a3:	gs jb  0x140008507
   1400084a6:	je     0x140008517
   1400084a8:	jb     0x1400084d8
   1400084aa:	jo     0x140008510
   1400084ac:	(bad)  
	...
   1400084c1:	add    BYTE PTR [rax],al
   1400084c3:	add    BYTE PTR [rdi+0x43],al
   1400084c6:	push   rsp
   1400084c7:	rex.WR add BYTE PTR [rax],r10b
   1400084ca:	add    BYTE PTR [rax],al
   1400084cc:	(bad)  
   1400084cd:	push   rax
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	cs je  0x140008538
   1400084d3:	js     0x140008549
   1400084d5:	and    al,0x6d
   1400084d7:	outs   dx,BYTE PTR ds:[rsi]
   1400084d8:	add    BYTE PTR [rax],al
   1400084da:	add    BYTE PTR [rax],al
   1400084dc:	loopne 0x14000853e
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	jge    0x1400084e2
   1400084e2:	add    BYTE PTR [rax],al
   1400084e4:	cs je  0x14000854c
   1400084e7:	js     0x14000855d
   1400084e9:	and    al,0x6d
   1400084eb:	outs   dx,BYTE PTR ds:[rsi]
   1400084ec:	and    al,0x30
   1400084ee:	xor    BYTE PTR [rax],al
   1400084f0:	(bad)  
   1400084f1:	(bad)  
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	movabs al,ds:0x747865742e000000
   1400084fd:	and    al,0x78
   1400084ff:	add    BYTE PTR [rax],al
   140008501:	jo     0x140008503
   140008503:	add    BYTE PTR [rax+0x4],al
   140008506:	add    BYTE PTR [rax],al
   140008508:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140008511:	add    BYTE PTR [rax],al
   140008513:	add    BYTE PTR [rax+0x74],al
   140008516:	add    BYTE PTR [rax],al
   140008518:	adc    BYTE PTR [rax],al
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	xor    BYTE PTR cs:[rax],dh
   14000851f:	movsxd esp,DWORD PTR [rsi+0x67]
   140008522:	add    BYTE PTR [rax],al
   140008524:	push   rax
   140008525:	je     0x140008527
   140008527:	add    BYTE PTR [rax],cl
   140008529:	add    BYTE PTR [rax],al
   14000852b:	add    BYTE PTR [rsi],ch
   14000852d:	rex.XB push r10
   14000852f:	push   rsp
   140008530:	and    al,0x58
   140008532:	rex.XB
   140008533:	add    BYTE PTR [r8],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	pop    rax
   140008539:	je     0x14000853b
   14000853b:	add    BYTE PTR [rax],cl
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    BYTE PTR [rsi],ch
   140008541:	rex.XB push r10
   140008543:	push   rsp
   140008544:	and    al,0x58
   140008546:	rex.XB
   140008547:	rex.B
   140008548:	add    BYTE PTR [r8],al
   14000854b:	add    BYTE PTR [rax+0x74],ah
   14000854e:	add    BYTE PTR [rax],al
   140008550:	or     BYTE PTR [rax],al
   140008552:	add    BYTE PTR [rax],al
   140008554:	cs rex.XB push r10
   140008557:	push   rsp
   140008558:	and    al,0x58
   14000855a:	rex.XB pop r10
   14000855c:	add    BYTE PTR [rax],al
   14000855e:	add    BYTE PTR [rax],al
   140008560:	push   0x8000074
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rsi],ch
   140008569:	rex.XB push r10
   14000856b:	push   rsp
   14000856c:	and    al,0x58
   14000856e:	rex.WB
   14000856f:	add    BYTE PTR [r8],al
   140008572:	add    BYTE PTR [rax],al
   140008574:	jo     0x1400085ea
   140008576:	add    BYTE PTR [rax],al
   140008578:	or     BYTE PTR [rax],al
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	cs rex.XB push r10
   14000857f:	push   rsp
   140008580:	and    al,0x58
   140008582:	rex.WB
   140008583:	rex.B
   140008584:	add    BYTE PTR [r8],al
   140008587:	add    BYTE PTR [rax+0x74],bh
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	or     BYTE PTR [rax],al
   14000858e:	add    BYTE PTR [rax],al
   140008590:	cs rex.XB push r10
   140008593:	push   rsp
   140008594:	and    al,0x58
   140008596:	rex.WB pop r9
   140008598:	add    BYTE PTR [rax],al
   14000859a:	add    BYTE PTR [rax],al
   14000859c:	xor    BYTE PTR [rax+rax*1+0x0],0x8
   1400085a1:	add    BYTE PTR [rax],al
   1400085a3:	add    BYTE PTR [rsi],ch
   1400085a5:	rex.XB push r10
   1400085a7:	push   rsp
   1400085a8:	and    al,0x58
   1400085aa:	rex.WB pop r10
   1400085ac:	add    BYTE PTR [rax],al
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	mov    BYTE PTR [rax+rax*1+0x0],dh
   1400085b4:	(bad)  
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    BYTE PTR [rsi],ch
   1400085b9:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400085c1:	add    BYTE PTR [rax],al
   1400085c3:	add    BYTE PTR [rax+0x75],ah
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	and    BYTE PTR [rdi],cl
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	cs jb  0x140008633
   1400085cf:	(bad)  
   1400085d0:	je     0x140008633
   1400085d2:	add    BYTE PTR [rax],al
   1400085d4:	add    BYTE PTR [rax+rax*1+0x22400],0x0
   1400085dc:	cs jb  0x140008643
   1400085df:	(bad)  
   1400085e0:	je     0x140008643
   1400085e2:	and    al,0x7a
   1400085e4:	jp     0x140008660
   1400085e6:	fs (bad) 
   1400085e8:	add    BYTE PTR [eax],al
   1400085eb:	add    BYTE PTR [rax-0xfffff7a],ch
   1400085f1:	add    eax,DWORD PTR [rax]
   1400085f3:	add    BYTE PTR [rsi],ch
   1400085f5:	js     0x14000865b
   1400085f7:	(bad)  
   1400085f8:	je     0x14000865b
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	cwde   
   1400085fd:	mov    al,BYTE PTR [rax]
   1400085ff:	add    al,ah
   140008601:	add    DWORD PTR [rax],eax
   140008603:	add    BYTE PTR [rsi],ch
   140008605:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    BYTE PTR [rax-0x74],bh
   140008612:	add    BYTE PTR [rax],al
   140008614:	adc    al,0x0
   140008616:	add    BYTE PTR [rax],al
   140008618:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140008621:	add    BYTE PTR [rax],al
   140008623:	add    BYTE PTR [rax+0x4000008c],dl
   140008629:	add    al,0x0
   14000862b:	add    BYTE PTR [rsi],ch
   14000862d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    al,dl
   140008639:	nop
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	int3   
   14000863d:	or     eax,DWORD PTR [rax]
   14000863f:	add    BYTE PTR [rsi],ch
   140008641:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140008649:	add    BYTE PTR [rax],al
   14000864b:	add    BYTE PTR [rax],al
   14000864d:	movabs al,ds:0x642e000000900000
   140008656:	(bad)  
   140008657:	je     0x1400086ba
   140008659:	add    BYTE PTR [rax],al
   14000865b:	add    al,al
   14000865d:	movabs al,ds:0x622e000006900000
   140008666:	jae    0x1400086db
   140008668:	add    BYTE PTR [rax],al
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    BYTE PTR [rax+0x48c0000],dh
   140008672:	add    BYTE PTR [rax],al
   140008674:	cs jo  0x1400086db
   140008677:	(bad)  
   140008678:	je     0x1400086db
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    al,al
   14000867e:	add    BYTE PTR [rax],al
   140008680:	movabs al,ds:0x637273722e000000
   140008689:	and    al,0x30
   14000868b:	xor    DWORD PTR [rax],eax
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    BYTE PTR [rax+0x680000c0],ah
   140008695:	(bad)  
   140008696:	add    BYTE PTR [rax],al
   140008698:	cs jb  0x14000870e
   14000869b:	jb     0x140008700
   14000869d:	and    al,0x30
   14000869f:	xor    al,BYTE PTR [rax]
   1400086a1:	add    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rax],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    BYTE PTR [rcx],al
   1400086a9:	adc    eax,DWORD PTR [rip+0xf621300]        # 0x14f6299af
   1400086af:	jo     0x1400086bf
   1400086b1:	(bad)  
   1400086b2:	or     eax,0x300c50
   1400086b7:	add    BYTE PTR [rcx],al
   1400086b9:	or     al,BYTE PTR [rax+rax*1]
   1400086bc:	or     dh,BYTE PTR [rsi+rax*1]
   1400086bf:	add    BYTE PTR [rdx],cl
   1400086c1:	xor    al,BYTE PTR [rsi]
   1400086c3:	jo     0x1400086c6
   1400086c5:	add    al,0x1
   1400086c7:	add    BYTE PTR [rdx+rax*2],al
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	sbb    DWORD PTR [rip+0xffffffffb2060002],edx        # 0xf20686d4
   1400086d2:	add    dh,BYTE PTR [rax]
   1400086d4:	jl     0x140008735
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	push   rax
   1400086d9:	add    BYTE PTR [rax],al
   1400086db:	add    BYTE PTR [rcx],bl
   1400086dd:	sbb    DWORD PTR [rax+rax*1],eax
   1400086e0:	or     dh,BYTE PTR [rsp+rcx*1]
   1400086e3:	add    BYTE PTR [rdx],cl
   1400086e5:	xchg   edx,eax
   1400086e6:	(bad)  
   1400086e7:	jo     0x140008765
   1400086e9:	pop    rdi
   1400086ea:	add    BYTE PTR [rax],al
   1400086ec:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rcx],bl
   1400086f1:	and    BYTE PTR [rip+0x14341200],al        # 0x1543498f7
   1400086f7:	add    BYTE PTR [rdx],dl
   1400086f9:	add    DWORD PTR [rdx],edx
   1400086fb:	add    BYTE PTR [rsi],al
   1400086fd:	push   rax
   1400086fe:	add    BYTE PTR [rax],al
   140008700:	jl     0x140008761
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],0x0
   140008707:	add    BYTE PTR [rcx],al
   140008709:	add    al,0x1
   14000870b:	add    BYTE PTR [rdx+riz*2],al
   14000870e:	add    BYTE PTR [rax],al
   140008710:	add    DWORD PTR [rbx],ecx
   140008712:	add    DWORD PTR [rax],eax
   140008714:	or     eax,DWORD PTR [rdx+0xf010000]
   14000871a:	(bad)  
   14000871b:	add    BYTE PTR [rdi],cl
   14000871d:	fs (bad) 
   14000871f:	add    BYTE PTR [rdi],cl
   140008721:	xor    al,0x6
   140008723:	add    BYTE PTR [rdi],cl
   140008725:	xor    cl,BYTE PTR [rbx]
   140008727:	jo     0x14000872a
   140008729:	add    al,0x1
   14000872b:	add    BYTE PTR [rdx+rax*4],al
   14000872e:	add    BYTE PTR [rax],al
   140008730:	add    DWORD PTR [rsi],eax
   140008732:	add    al,BYTE PTR [rax]
   140008734:	(bad)  
   140008735:	xor    al,BYTE PTR [rdx]
   140008737:	xor    BYTE PTR [rcx],al
   140008739:	(bad)  
   14000873a:	or     al,0x0
   14000873c:	(bad)  
   14000873d:	je     0x140008756
   14000873f:	add    BYTE PTR [rdi],bl
   140008741:	fs adc eax,0x14341f00
   140008747:	add    BYTE PTR [rdi],bl
   140008749:	rcr    BYTE PTR [rax],cl
   14000874b:	lock (bad) 
   14000874d:	loopne 0x140008763
   14000874f:	rcl    BYTE PTR [rdx],1
   140008751:	rcl    BYTE PTR [rax],0x50
   140008754:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d875e
   14000875a:	or     al,BYTE PTR [rax]
   14000875c:	or     eax,0x19500672
   140008761:	xor    BYTE PTR [rbx],cl
   140008763:	add    BYTE PTR [rdi],bl
   140008765:	xor    al,0x76
   140008767:	add    BYTE PTR [rdi],bl
   140008769:	add    DWORD PTR [rsi+0x0],ebp
   14000876c:	adc    al,dh
   14000876e:	(bad)  
   14000876f:	loopne 0x14000877d
   140008771:	ror    BYTE PTR [rdx],1
   140008773:	ror    BYTE PTR [rax],0x70
   140008776:	(bad)  
   140008777:	(bad)  
   140008778:	(bad)  
   140008779:	push   rax
   14000877a:	add    BYTE PTR [rax],al
   14000877c:	jl     0x1400087dd
   14000877e:	add    BYTE PTR [rax],al
   140008780:	(bad)  
   140008781:	add    eax,DWORD PTR [rax]
   140008783:	add    BYTE PTR [rcx],bl
   140008785:	sub    BYTE PTR [rdi],al
   140008787:	add    BYTE PTR [rdi],dl
   140008789:	xor    al,0x5a
   14000878b:	add    BYTE PTR [rdi],dl
   14000878d:	add    DWORD PTR [rsi+0x0],edx
   140008790:	or     BYTE PTR [rax+0x7],dh
   140008793:	(bad)  
   140008794:	(bad)  
   140008795:	push   rax
   140008796:	add    BYTE PTR [rax],al
   140008798:	jl     0x1400087f9
   14000879a:	add    BYTE PTR [rax],al
   14000879c:	movabs al,ds:0x900031b19000002
   1400087a5:	add    DWORD PTR [rax+rax*1],edx
   1400087a8:	add    dh,BYTE PTR [rax]
   1400087aa:	add    BYTE PTR [rax],al
   1400087ac:	jl     0x14000880d
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	nop
   1400087b1:	add    BYTE PTR [rax],al
   1400087b3:	add    BYTE PTR [rcx],bl
   1400087b5:	and    eax,0x54160008
   1400087ba:	(bad)  
   1400087bb:	add    BYTE PTR [rsi],dl
   1400087bd:	xor    al,0x16
   1400087bf:	add    BYTE PTR [rsi],dl
   1400087c1:	repnz (bad)
   1400087c4:	or     eax,0x7c600c70
   1400087c9:	pop    rdi
   1400087ca:	add    BYTE PTR [rax],al
   1400087cc:	js     0x1400087ce
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	add    DWORD PTR [rbx],edx
   1400087d2:	or     BYTE PTR [rax],al
   1400087d4:	adc    edx,DWORD PTR [rdx+rcx*1+0x0]
   1400087d8:	adc    esi,DWORD PTR [rcx+rcx*1]
   1400087db:	add    BYTE PTR [rbx],dl
   1400087dd:	xor    cl,BYTE PTR [rdi]
   1400087df:	loopne 0x1400087ee
   1400087e1:	jo     0x1400087ef
   1400087e3:	(bad)  
   1400087e4:	add    DWORD PTR [rax],ebx
   1400087e6:	or     BYTE PTR [rax],al
   1400087e8:	sbb    BYTE PTR [rsp+rdx*1+0x0],dh
   1400087ec:	sbb    BYTE PTR [rbx+rdx*1+0x0],ah
   1400087f0:	sbb    BYTE PTR [rdx+rdx*1],dh
   1400087f3:	add    BYTE PTR [rax],bl
   1400087f5:	repnz adc eax,esp
   1400087f8:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4158806
   1400087fe:	or     BYTE PTR [rax],al
   140008800:	adc    eax,0x15000764
   140008805:	xor    al,0x6
   140008807:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0993f
   14000880d:	(bad)  
   14000880e:	or     al,BYTE PTR [rax]
   140008810:	(bad)  
   140008811:	xor    al,0x19
   140008813:	add    BYTE PTR [rdi],bl
   140008815:	repnz adc eax,0x11e013f0
   14000881b:	ror    BYTE PTR [rdi],1
   14000881d:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b609494
   140008824:	add    DWORD PTR [rax+rcx*1],edx
   140008827:	add    BYTE PTR [rsp+riz*2],dl
   14000882a:	or     DWORD PTR [rax],eax
   14000882c:	adc    al,0x54
   14000882e:	or     BYTE PTR [rax],al
   140008830:	adc    al,0x34
   140008832:	(bad)  
   140008833:	add    BYTE PTR [rdx+rsi*1],dl
   140008836:	adc    BYTE PTR [rax+0x1],dh
   140008839:	(bad)  
   14000883a:	or     DWORD PTR [rax],eax
   14000883c:	(bad)  
   14000883d:	add    DWORD PTR [rax],ebx
   14000883f:	add    BYTE PTR [rbx],cl
   140008841:	lock or eax,esp
   140008844:	(bad)  
   140008845:	rol    BYTE PTR [rip+0x3600470],1        # 0x143608cbb
   14000884b:	xor    BYTE PTR [rdx],al
   14000884d:	push   rax
   14000884e:	add    BYTE PTR [rax],al
   140008850:	add    DWORD PTR [rcx],ebx
   140008852:	or     al,BYTE PTR [rax]
   140008854:	sbb    esp,esp
   140008856:	or     DWORD PTR [rax],eax
   140008858:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   14000885c:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140008860:	sbb    DWORD PTR [rsi+rax*1],esi
   140008863:	add    BYTE PTR [rcx],bl
   140008865:	xor    dl,BYTE PTR [rip+0xd2301f0]        # 0x14d238a5b
   14000886b:	add    BYTE PTR [rbx],ah
   14000886d:	je     0x14000888c
   14000886f:	add    BYTE PTR [rbx],ah
   140008871:	fs sbb al,0x0
   140008874:	and    esi,DWORD PTR [rbx+rbx*1]
   140008877:	add    BYTE PTR [rbx],ah
   140008879:	add    DWORD PTR [rax+rax*1],edx
   14000887c:	sbb    al,dh
   14000887e:	(bad)  
   14000887f:	loopne 0x140008895
   140008881:	rcl    BYTE PTR [rdx],1
   140008883:	rcl    BYTE PTR [rax],0x50
   140008886:	add    BYTE PTR [rax],al
   140008888:	add    DWORD PTR [rsi],ebx
   14000888a:	or     al,BYTE PTR [rax]
   14000888c:	(bad)  
   14000888d:	xor    al,0x12
   14000888f:	add    BYTE PTR [rsi],bl
   140008891:	xchg   edx,eax
   140008892:	sbb    dh,al
   140008894:	sbb    al,ah
   140008896:	(bad)  
   140008897:	rcl    BYTE PTR [rax+rax*8],1
   14000889a:	adc    dh,BYTE PTR [rax+0x11]
   14000889d:	(bad)  
   14000889e:	adc    BYTE PTR [rax+0x19],dl
   1400088a1:	(bad)  
   1400088a2:	(bad)  
   1400088a3:	add    BYTE PTR [rip+0x15021234],dl        # 0x155029add
   1400088a9:	add    DWORD PTR [rdx+rax*1],ecx
   1400088ac:	or     BYTE PTR [rax+0x7],dh
   1400088af:	(bad)  
   1400088b0:	(bad)  
   1400088b1:	push   rax
   1400088b2:	add    BYTE PTR [rax],al
   1400088b4:	jl     0x140008915
   1400088b6:	add    BYTE PTR [rax],al
   1400088b8:	push   rax
   1400088b9:	adc    BYTE PTR [rax],al
   1400088bb:	add    BYTE PTR [rcx],al
   1400088bd:	or     al,BYTE PTR [rdx]
   1400088bf:	add    BYTE PTR [rdx],cl
   1400088c1:	xor    al,BYTE PTR [rsi]
   1400088c3:	xor    BYTE PTR [rcx],al
   1400088c5:	sbb    al,0xc
   1400088c7:	add    BYTE PTR [rsp+riz*2],bl
   1400088ca:	adc    eax,DWORD PTR [rax]
   1400088cc:	sbb    al,0x54
   1400088ce:	adc    al,BYTE PTR [rax]
   1400088d0:	sbb    al,0x34
   1400088d2:	adc    DWORD PTR [rax],eax
   1400088d4:	sbb    al,0x92
   1400088d6:	sbb    al,dh
   1400088d8:	(bad)  
   1400088d9:	loopne 0x1400088ef
   1400088db:	rcl    BYTE PTR [rdx],1
   1400088dd:	rcl    BYTE PTR [rax],0x70
   1400088e0:	add    DWORD PTR [rdi],ebx
   1400088e2:	or     al,0x0
   1400088e4:	(bad)  
   1400088e5:	je     0x1400088f6
   1400088e7:	add    BYTE PTR [rdi],bl
   1400088e9:	fs (bad) 
   1400088eb:	add    BYTE PTR [rdi],bl
   1400088ed:	xor    al,0xd
   1400088ef:	add    BYTE PTR [rdi],bl
   1400088f1:	push   rdx
   1400088f2:	sbb    al,dh
   1400088f4:	(bad)  
   1400088f5:	loopne 0x14000890b
   1400088f7:	rcl    BYTE PTR [rdx],1
   1400088f9:	rcl    BYTE PTR [rax],0x50
   1400088fc:	sbb    DWORD PTR [rip+0x741f000c],ebp        # 0x1b41f890e
   140008902:	(bad)  
   140008903:	add    BYTE PTR [rdi],bl
   140008905:	fs (bad) 
   140008907:	add    BYTE PTR [rdi],bl
   140008909:	xor    al,0x15
   14000890b:	add    BYTE PTR [rdi],bl
   14000890d:	rcr    BYTE PTR [rax],cl
   14000890f:	lock (bad) 
   140008911:	loopne 0x140008927
   140008913:	rcl    BYTE PTR [rdx],1
   140008915:	rcl    BYTE PTR [rax],0x50
   140008918:	jl     0x140008979
   14000891a:	add    BYTE PTR [rax],al
   14000891c:	push   0x1000000
   140008921:	sbb    eax,0x741d000c
   140008926:	adc    DWORD PTR [rax],eax
   140008928:	sbb    eax,0x1d001064
   14000892d:	push   rsp
   14000892e:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d009769
   140008935:	xchg   edx,eax
   140008936:	sbb    eax,esi
   140008938:	(bad)  
   140008939:	loopne 0x140008950
   14000893b:	rol    BYTE PTR [rcx],0x7
   14000893e:	add    DWORD PTR [rax],eax
   140008940:	(bad)  
   140008941:	movabs ds:0x6414000823190000,al
   14000894a:	or     eax,0xc541400
   14000894f:	add    BYTE PTR [rsp+rsi*1],dl
   140008952:	or     eax,DWORD PTR [rax]
   140008954:	adc    al,0x72
   140008956:	adc    BYTE PTR [rax+0x7c],dh
   140008959:	pop    rdi
   14000895a:	add    BYTE PTR [rax],al
   14000895c:	xor    BYTE PTR [rax],al
   14000895e:	add    BYTE PTR [rax],al
   140008960:	sbb    DWORD PTR [rsi],edx
   140008962:	add    DWORD PTR [rax],eax
   140008964:	(bad)  
   140008965:	loop   0x140008967
   140008967:	add    BYTE PTR [rdi+rbx*2+0x0],bh
   14000896b:	add    BYTE PTR [rax+0x0],ah
   14000896e:	add    BYTE PTR [rax],al
   140008970:	add    DWORD PTR [rax+rcx*1],edx
   140008973:	add    BYTE PTR [rsp+riz*2],dl
   140008976:	or     DWORD PTR [rax],eax
   140008978:	adc    al,0x54
   14000897a:	(bad)  
   14000897b:	add    BYTE PTR [rsp+rsi*1],dl
   14000897e:	(bad)  
   14000897f:	add    BYTE PTR [rdx+rsi*1],dl
   140008982:	adc    BYTE PTR [rax+0x1],dh
   140008985:	sbb    DWORD PTR [rdx],ecx
   140008987:	add    BYTE PTR [rcx],bl
   140008989:	je     0x140008994
   14000898b:	add    BYTE PTR [rcx],bl
   14000898d:	or     BYTE PTR fs:[rax],al
   140008990:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008994:	sbb    DWORD PTR [rsi+rax*1],esi
   140008997:	add    BYTE PTR [rcx],bl
   140008999:	xor    dl,BYTE PTR [rip+0x20601e0]        # 0x142068b7f
   14000899f:	add    BYTE PTR [rsi],al
   1400089a1:	push   rdx
   1400089a2:	add    dh,BYTE PTR [rax]
   1400089a4:	sbb    DWORD PTR [rbx],edx
   1400089a6:	add    DWORD PTR [rax],eax
   1400089a8:	add    al,0xc2
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	or     al,0x60
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	add    DWORD PTR [rax],eax
   1400089b2:	add    BYTE PTR [rax],al
   1400089b4:	jno    0x140008a08
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	lahf   
   1400089b9:	push   rdx
   1400089ba:	add    BYTE PTR [rax],al
   1400089bc:	data16 (bad) 
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	lahf   
   1400089c1:	push   rdx
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	push   rcx
   1400089c5:	add    BYTE PTR [rax],al
   1400089c7:	add    BYTE PTR [rcx],al
   1400089c9:	(bad)  
   1400089ca:	add    al,BYTE PTR [rax]
   1400089cc:	(bad)  
   1400089cd:	xor    al,BYTE PTR [rdx]
   1400089cf:	push   rax
   1400089d0:	add    DWORD PTR [rdi],ecx
   1400089d2:	(bad)  
   1400089d3:	add    BYTE PTR [rdi],cl
   1400089d5:	xor    al,0xe
   1400089d7:	add    BYTE PTR [rdi],cl
   1400089d9:	xchg   edx,eax
   1400089da:	or     BYTE PTR [rax+0x7],dh
   1400089dd:	(bad)  
   1400089de:	(bad)  
   1400089df:	push   rax
   1400089e0:	add    DWORD PTR [rsi],edx
   1400089e2:	(bad)  
   1400089e3:	add    BYTE PTR [rsi],dl
   1400089e5:	je     0x1400089f4
   1400089e7:	add    BYTE PTR [rsi],dl
   1400089e9:	xor    al,0xa
   1400089eb:	add    BYTE PTR [rsi],dl
   1400089ed:	jb     0x1400089fe
   1400089ef:	push   rax
   1400089f0:	or     DWORD PTR [rcx],ebx
   1400089f2:	or     al,BYTE PTR [rax]
   1400089f4:	sbb    esp,eax
   1400089f6:	or     eax,DWORD PTR [rax]
   1400089f8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400089fc:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008a00:	sbb    DWORD PTR [rax+rcx*1],esi
   140008a03:	add    BYTE PTR [rcx],bl
   140008a05:	push   rdx
   140008a06:	adc    eax,0x5c46e0
   140008a0b:	add    BYTE PTR [rcx],al
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rcx],bl
   140008a11:	push   rdi
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	mov    bl,BYTE PTR [rax+0x0]
   140008a17:	add    BYTE PTR [rax-0x75ffff9f],dh
   140008a1d:	pop    rax
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	add    DWORD PTR [rax],eax
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	or     DWORD PTR [rcx+rax*1],eax
   140008a27:	add    BYTE PTR [rdx+riz*1],al
   140008a2a:	add    BYTE PTR [rax],al
   140008a2c:	rex.RX pop rsp
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	add    DWORD PTR [rax],eax
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	int3   
   140008a35:	pop    rcx
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	add    bl,BYTE PTR [rdx+0x0]
   140008a3b:	add    BYTE PTR [rcx],al
   140008a3d:	add    BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rdx],al
   140008a41:	pop    rdx
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	or     DWORD PTR [rdx],ecx
   140008a46:	add    al,0x0
   140008a48:	or     dh,BYTE PTR [rsi+rax*1]
   140008a4b:	add    BYTE PTR [rdx],cl
   140008a4d:	xor    al,BYTE PTR [rsi]
   140008a4f:	jo     0x140008a97
   140008a51:	pop    rsp
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	add    DWORD PTR [rax],eax
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	int    0x5a
   140008a5a:	add    BYTE PTR [rax],al
   140008a5c:	add    BYTE PTR [rbx+0x0],bl
   140008a5f:	add    al,ah
   140008a61:	(bad)  
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	add    BYTE PTR [rbx+0x0],bl
   140008a67:	add    BYTE PTR [rcx],al
   140008a69:	or     eax,0x340d0004
   140008a6e:	or     DWORD PTR [rax],eax
   140008a70:	or     eax,0x1500632
   140008a75:	add    al,0x1
   140008a77:	add    BYTE PTR [rdx+riz*8],al
   140008a7a:	add    BYTE PTR [rax],al
   140008a7c:	add    DWORD PTR [rdx+rax*1],ecx
   140008a7f:	add    BYTE PTR [rcx+rax*1],cl
   140008a82:	adc    DWORD PTR [rax],eax
   140008a84:	add    BYTE PTR [rax],al
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	add    DWORD PTR [rax],eax
   140008a8a:	add    BYTE PTR [rax],al
   140008a8c:	add    BYTE PTR [rax],al
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	add    DWORD PTR [rcx+rax*1],eax
   140008a93:	add    BYTE PTR [rdx+rdx*1],al
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	jo     0x140008a29
	...
   140008aa2:	add    BYTE PTR [rax],al
   140008aa4:	xchg   esp,eax
   140008aa5:	xchg   ecx,eax
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	loopne 0x140008b1c
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	fmul   DWORD PTR [rsi+0x0]
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    BYTE PTR [rax],al
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	rcl    BYTE PTR [rcx+0x72480000],0x0
   140008abf:	add    BYTE PTR [rax],dl
   140008ac1:	nop
	...
   140008aca:	add    BYTE PTR [rax],al
   140008acc:	mov    BYTE PTR [rdx+0x73800000],dl
   140008ad2:	add    BYTE PTR [rax],al
   140008ad4:	sbb    BYTE PTR [rsi+0x0],cl
   140008ada:	add    BYTE PTR [rax],al
   140008adc:	add    BYTE PTR [rax],al
   140008ade:	add    BYTE PTR [rax],al
   140008ae0:	xor    BYTE PTR [rsi+0x71880000],dl
   140008ae6:	add    BYTE PTR [rax],al
   140008ae8:	call   0x140008b7b
   140008aed:	add    BYTE PTR [rax],al
   140008aef:	add    BYTE PTR [rax],al
   140008af1:	add    BYTE PTR [rax],al
   140008af3:	add    BYTE PTR [rdx-0x6a],bl
   140008af6:	add    BYTE PTR [rax],al
   140008af8:	pop    rax
   140008af9:	jb     0x140008afb
   140008afb:	add    BYTE PTR [rax],cl
   140008afd:	lea    eax,[rax]
	...
   140008b07:	add    BYTE PTR [rdx+0x78000096],cl
   140008b0d:	jo     0x140008b0f
   140008b0f:	add    BYTE PTR [rax+0x8c],ah
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    BYTE PTR [rax],al
   140008b19:	add    BYTE PTR [rax],al
   140008b1b:	add    BYTE PTR [rdx+0x10000096],ch
   140008b21:	jo     0x140008b23
   140008b23:	add    BYTE PTR [rax-0x71],al
	...
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	mov    dh,0x96
   140008b32:	add    BYTE PTR [rax],al
   140008b34:	mov    al,0x72
   140008b36:	add    BYTE PTR [rax],al
   140008b38:	and    BYTE PTR [rdi+0x0],cl
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	add    BYTE PTR [rax],al
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	ficom  DWORD PTR [rsi+0x72900000]
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	jo     0x140008adc
	...
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	add    dl,BYTE PTR [rdi+0x71e00000]
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	lea    rax,[rax]
	...
   140008b6b:	add    BYTE PTR [rsi],ah
   140008b6d:	xchg   edi,eax
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	mov    eax,0x60000070
   140008b75:	pop    QWORD PTR [rax]
	...
   140008b7f:	add    BYTE PTR [rax-0x69],dl
   140008b82:	add    BYTE PTR [rax],al
   140008b84:	shl    BYTE PTR [rdx+0x0],1
   140008b87:	add    BYTE PTR [rax-0x73],dh
	...
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	je     0x140008b2d
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	loopne 0x140008c0a
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	test   al,0x8d
	...
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	xchg   esp,eax
   140008ba9:	xchg   edi,eax
   140008baa:	add    BYTE PTR [rax],al
   140008bac:	sbb    BYTE PTR [rcx+0x0],dh
   140008baf:	add    BYTE PTR [rax+0x8e],dh
   140008bb5:	add    BYTE PTR [rax],al
   140008bb7:	add    BYTE PTR [rax],al
   140008bb9:	add    BYTE PTR [rax],al
   140008bbb:	add    BYTE PTR [rsi+0x20000097],dh
   140008bc1:	jb     0x140008bc3
   140008bc3:	add    al,dl
   140008bc5:	lea    eax,[rax]
	...
   140008bcf:	add    al,bl
   140008bd1:	xchg   edi,eax
   140008bd2:	add    BYTE PTR [rax],al
   140008bd4:	rex jno 0x140008bd7
   140008bd7:	add    BYTE PTR [rax-0x72],ah
	...
   140008be2:	add    BYTE PTR [rax],al
   140008be4:	add    bl,BYTE PTR [rax+0x71d00000]
   140008bea:	add    BYTE PTR [rax],al
   140008bec:	ror    BYTE PTR [rsi+0x0],0x0
   140008bf3:	add    BYTE PTR [rax],al
   140008bf5:	add    BYTE PTR [rax],al
   140008bf7:	add    BYTE PTR [rsi],ah
   140008bf9:	cwde   
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	xor    BYTE PTR [rdx+0x0],dh
   140008bff:	add    BYTE PTR [rax+0x90],bh
   140008c05:	add    BYTE PTR [rax],al
   140008c07:	add    BYTE PTR [rax],al
   140008c09:	add    BYTE PTR [rax],al
   140008c0b:	add    BYTE PTR [rsi-0x68],dl
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	sub    BYTE PTR [rax+rax*1+0x0],dh
   140008c14:	nop
   140008c15:	mov    WORD PTR [rax],es
	...
   140008c1f:	add    dh,dl
   140008c21:	fwait
   140008c22:	add    BYTE PTR [rax],al
   140008c24:	add    BYTE PTR [rax+0x0],dh
   140008c27:	add    al,bh
   140008c29:	lea    eax,[rax]
	...
   140008c33:	add    ah,ah
   140008c35:	fwait
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	push   0xffffffff98000071
   140008c3d:	mov    es,WORD PTR [rax]
	...
   140008c47:	add    BYTE PTR [rsi],al
   140008c49:	pushf  
   140008c4a:	add    BYTE PTR [rax],al
   140008c4c:	or     BYTE PTR [rdx+0x0],dh
   140008c4f:	add    al,al
   140008c51:	lea    eax,[rax]
	...
   140008c5b:	add    BYTE PTR [rax],ch
   140008c5d:	pushf  
   140008c5e:	add    BYTE PTR [rax],al
   140008c60:	xor    BYTE PTR [rcx+0x0],dh
   140008c63:	add    BYTE PTR [rax],bh
   140008c65:	lea    eax,[rax]
	...
   140008c6f:	add    BYTE PTR [rsi-0x64],al
   140008c72:	add    BYTE PTR [rax],al
   140008c74:	test   al,0x70
	...
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	(bad)  
   140008c91:	add    BYTE PTR [rax],al
   140008c93:	add    BYTE PTR [rax],al
   140008c95:	add    BYTE PTR [rax],al
   140008c97:	add    BYTE PTR [rax],0x0
   140008c9a:	add    BYTE PTR [rax],al
   140008c9c:	add    BYTE PTR [rax],al
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	add    dl,BYTE PTR [rbx+0x0]
   140008ca6:	add    BYTE PTR [rax],al
   140008ca8:	jp     0x140008c3e
   140008caa:	add    BYTE PTR [rax],al
   140008cac:	add    BYTE PTR [rax],al
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	xor    BYTE PTR [rax+rax*1+0x0],dl
   140008cb7:	add    BYTE PTR [rdx-0x6d],ah
   140008cba:	add    BYTE PTR [rax],al
   140008cbc:	add    BYTE PTR [rax],al
   140008cbe:	add    BYTE PTR [rax],al
   140008cc0:	(bad)  
   140008cc1:	xchg   edx,eax
   140008cc2:	add    BYTE PTR [rax],al
   140008cc4:	add    BYTE PTR [rax],al
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	je     0x140008c5d
   140008cca:	add    BYTE PTR [rax],al
   140008ccc:	add    BYTE PTR [rax],al
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	movabs ds:0xca00000000000094,al
   140008cd9:	xchg   esp,eax
   140008cda:	add    BYTE PTR [rax],al
   140008cdc:	add    BYTE PTR [rax],al
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	mov    al,0x9b
   140008ce2:	add    BYTE PTR [rax],al
   140008ce4:	add    BYTE PTR [rax],al
   140008ce6:	add    BYTE PTR [rax],al
   140008ce8:	ret    0x9b
   140008ceb:	add    BYTE PTR [rax],al
   140008ced:	add    BYTE PTR [rax],al
   140008cef:	add    BYTE PTR [rdx],bh
   140008cf1:	xchg   ebx,eax
   140008cf2:	add    BYTE PTR [rax],al
   140008cf4:	add    BYTE PTR [rax],al
   140008cf6:	add    BYTE PTR [rax],al
   140008cf8:	lock xchg ebx,eax
	...
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	pop    rsi
   140008d09:	(bad)  
   140008d0a:	add    BYTE PTR [rax],al
   140008d0c:	add    BYTE PTR [rax],al
   140008d0e:	add    BYTE PTR [rax],al
   140008d10:	in     al,0x94
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    BYTE PTR [rax],al
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	(bad)  
   140008d19:	xchg   edx,eax
   140008d1a:	add    BYTE PTR [rax],al
   140008d1c:	add    BYTE PTR [rax],al
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	(bad)  
   140008d21:	(bad)  
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	add    BYTE PTR [rax],al
   140008d26:	add    BYTE PTR [rax],al
   140008d28:	and    BYTE PTR [rax+rax*1+0x0],dl
	...
   140008d37:	add    BYTE PTR [rax+0x9b],dl
	...
   140008d45:	add    BYTE PTR [rax],al
   140008d47:	add    al,dl
   140008d49:	xchg   ebx,eax
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	pop    rsi
   140008d51:	xchg   ebp,eax
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	add    BYTE PTR [rax],al
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	add    BYTE PTR [rsi+0x0],dl
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	sahf   
   140008d61:	fwait
	...
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	enter  0x9a,0x0
   140008d74:	add    BYTE PTR [rax],al
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	mov    dh,0x9a
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	add    BYTE PTR [rax],al
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	sub    bl,BYTE PTR [rdx+0x0]
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	jo     0x140008d24
   140008d8a:	add    BYTE PTR [rax],al
   140008d8c:	add    BYTE PTR [rax],al
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	stos   BYTE PTR es:[rdi],al
   140008d91:	(bad)  
   140008d92:	add    BYTE PTR [rax],al
   140008d94:	add    BYTE PTR [rax],al
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	or     al,0x95
	...
   140008da6:	add    BYTE PTR [rax],al
   140008da8:	and    al,0x95
   140008daa:	add    BYTE PTR [rax],al
   140008dac:	add    BYTE PTR [rax],al
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	cwde   
   140008db1:	(bad)  
	...
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	and    BYTE PTR [rbx+0x0],bl
	...
   140008dce:	add    BYTE PTR [rax],al
   140008dd0:	cld    
   140008dd1:	(bad)  
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	add    BYTE PTR [rax],al
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	xor    bl,BYTE PTR [rbx+0x0]
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	(bad)  
   140008de1:	fwait
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	add    BYTE PTR [rax],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	jl     0x140008d7f
	...
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	cmp    BYTE PTR [rdx+0x0],bl
   140008dfe:	add    BYTE PTR [rax],al
   140008e00:	(bad)  
   140008e01:	(bad)  
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	add    BYTE PTR [rax],al
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	rex.WRX (bad) 
	...
   140008e16:	add    BYTE PTR [rax],al
   140008e18:	stos   BYTE PTR es:[rdi],al
   140008e19:	xchg   ebp,eax
   140008e1a:	add    BYTE PTR [rax],al
   140008e1c:	add    BYTE PTR [rax],al
   140008e1e:	add    BYTE PTR [rax],al
   140008e20:	(bad)  
   140008e21:	xchg   edx,eax
   140008e22:	add    BYTE PTR [rax],al
   140008e24:	add    BYTE PTR [rax],al
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	xchg   edx,eax
   140008e29:	xchg   edx,eax
   140008e2a:	add    BYTE PTR [rax],al
   140008e2c:	add    BYTE PTR [rax],al
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	rex
   140008e31:	fwait
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	add    BYTE PTR [rax],al
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	push   rdx
   140008e39:	fwait
   140008e3a:	add    BYTE PTR [rax],al
   140008e3c:	add    BYTE PTR [rax],al
   140008e3e:	add    BYTE PTR [rax],al
   140008e40:	movabs al,ds:0xc000000000000092
   140008e49:	xchg   ebp,eax
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	add    BYTE PTR [rax],al
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	sbb    al,0x96
	...
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	nop
   140008e61:	xchg   ebp,eax
	...
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	xchg   edx,eax
   140008e71:	xchg   esp,eax
   140008e72:	add    BYTE PTR [rax],al
   140008e74:	add    BYTE PTR [rax],al
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	loopne 0x140008e0d
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	add    BYTE PTR [rax],al
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	xchg   edx,eax
   140008e81:	xchg   ebx,eax
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	xor    dl,BYTE PTR [rbp+0x0]
	...
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	fcomp  DWORD PTR [rdx+0x0]
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	sbb    BYTE PTR [rdx+0x0],0x0
	...
   140008eaf:	add    BYTE PTR [rsi-0x6b],dl
	...
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	(bad)  
   140008ec1:	xchg   ebp,eax
   140008ec2:	add    BYTE PTR [rax],al
   140008ec4:	add    BYTE PTR [rax],al
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	lock xchg ebp,eax
	...
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	mov    ah,0x91
	...
   140008ee6:	add    BYTE PTR [rax],al
   140008ee8:	rex xchg ebp,eax
   140008eea:	add    BYTE PTR [rax],al
   140008eec:	add    BYTE PTR [rax],al
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	rex.WR xchg rbx,rax
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	add    BYTE PTR [rax],al
   140008ef6:	add    BYTE PTR [rax],al
   140008ef8:	not    BYTE PTR [rax+rax*1+0x0]
   140008eff:	add    BYTE PTR [rdx+rdx*4+0x0],dh
   140008f06:	add    BYTE PTR [rax],al
   140008f08:	or     BYTE PTR [rax+rax*1+0x0],dl
   140008f0f:	add    BYTE PTR [rax+0x93],bh
	...
   140008f1d:	add    BYTE PTR [rax],al
   140008f1f:	add    BYTE PTR [rdx+0x94],bh
   140008f25:	add    BYTE PTR [rax],al
   140008f27:	add    BYTE PTR [rbx+rdx*4],ch
   140008f2a:	add    BYTE PTR [rax],al
   140008f2c:	add    BYTE PTR [rax],al
   140008f2e:	add    BYTE PTR [rax],al
   140008f30:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008f31:	xchg   ebx,eax
	...
   140008f3e:	add    BYTE PTR [rax],al
   140008f40:	(bad)  
   140008f41:	xchg   ebx,eax
   140008f42:	add    BYTE PTR [rax],al
   140008f44:	add    BYTE PTR [rax],al
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	data16 fwait
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	add    BYTE PTR [rax],al
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	sbb    BYTE PTR [rbx+0x0],0x0
	...
   140008f5f:	add    BYTE PTR [rdx-0x6c],al
	...
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	rex.RX xchg ecx,eax
   140008f72:	add    BYTE PTR [rax],al
   140008f74:	add    BYTE PTR [rax],al
   140008f76:	add    BYTE PTR [rax],al
   140008f78:	cmp    al,0x91
   140008f7a:	add    BYTE PTR [rax],al
   140008f7c:	add    BYTE PTR [rax],al
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	jle    0x140008f13
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	add    BYTE PTR [rax],al
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	movabs al,ds:0xd000000000000091
   140008f91:	nop
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	add    BYTE PTR [rax],al
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	(bad)  
   140008f99:	cwde   
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	pop    rdx
   140008fa1:	xchg   ecx,eax
   140008fa2:	add    BYTE PTR [rax],al
   140008fa4:	add    BYTE PTR [rax],al
   140008fa6:	add    BYTE PTR [rax],al
   140008fa8:	xor    al,0x91
   140008faa:	add    BYTE PTR [rax],al
   140008fac:	add    BYTE PTR [rax],al
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	and    dl,BYTE PTR [rcx+0x0]
   140008fb6:	add    BYTE PTR [rax],al
   140008fb8:	adc    BYTE PTR [rcx+0x0],dl
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	add    dl,BYTE PTR [rcx+0x0]
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	hlt    
   140008fc9:	nop
   140008fca:	add    BYTE PTR [rax],al
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	mov    BYTE PTR [rax+rax*1+0x0],bl
   140008fd7:	add    BYTE PTR [rsi-0x64],bh
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	add    BYTE PTR [rax],al
   140008fde:	add    BYTE PTR [rax],al
   140008fe0:	in     al,dx
   140008fe1:	nop
   140008fe2:	add    BYTE PTR [rax],al
   140008fe4:	add    BYTE PTR [rax],al
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	fcom   QWORD PTR [rax+0x0]
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	xchg   cx,ax
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	mov    BYTE PTR [rcx+0x0],dl
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	xchg   edx,eax
   140009001:	pushf  
	...
   14000900e:	add    BYTE PTR [rax],al
   140009010:	loopne 0x140008fab
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	(bad)  
   140009019:	cdq    
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	scas   al,BYTE PTR es:[rdi]
   140009021:	cdq    
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	movabs al,ds:0x8c00000000000099
   140009031:	cdq    
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	jp     0x140008fd3
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	add    BYTE PTR [rax],al
   14000903e:	add    BYTE PTR [rax],al
   140009040:	(bad)  
   140009041:	cdq    
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    BYTE PTR [rax],al
   140009048:	rex.X cdq 
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	and    BYTE PTR [rcx+0x0],bl
   140009056:	add    BYTE PTR [rax],al
   140009058:	repnz cwde 
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	rcr    BYTE PTR [rax+0x0],1
   140009066:	add    BYTE PTR [rax],al
   140009068:	lods   al,BYTE PTR ds:[rsi]
   140009069:	cwde   
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	mov    WORD PTR [rax+0x0],ds
   140009076:	add    BYTE PTR [rax],al
   140009078:	outs   dx,BYTE PTR ds:[rsi]
   140009079:	cwde   
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    BYTE PTR [rax],al
   140009080:	(bad)  
   140009081:	xchg   ecx,eax
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	adc    al,0x92
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	je     0x140009024
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	rex.RX xchg edx,eax
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	pop    rdx
   1400090a1:	xchg   edx,eax
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	cld    
   1400090a9:	cdq    
	...
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	rex.WX cdqe 
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	push   0x9c
	...
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    BYTE PTR [rsi+0x75705f02],bl
   1400090d5:	jb     0x14000913c
   1400090d7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400090da:	ins    BYTE PTR es:[rdi],dx
   1400090db:	add    BYTE PTR [rbx+0x3],ch
   1400090de:	pop    rdi
   1400090df:	jbe    0x140009154
   1400090e1:	outs   dx,BYTE PTR ds:[rsi]
   1400090e2:	ja     0x140009154
   1400090e4:	jb     0x14000914f
   1400090e6:	outs   dx,BYTE PTR ds:[rsi]
   1400090e7:	je     0x14000914f
   1400090e9:	pop    rdi
   1400090ea:	jae    0x1400090ec
   1400090ec:	xor    al,BYTE PTR [riz*2+0x746978]
   1400090f3:	add    BYTE PTR [rbp+0x0],dl
   1400090f6:	pop    rdi
   1400090f7:	pop    rax
   1400090f8:	movsxd esi,DWORD PTR [rax+0x74]
   1400090fb:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140009104:	pop    rdi
   140009105:	(bad)  
   140009106:	ins    DWORD PTR es:[rdi],dx
   140009107:	jae    0x140009170
   140009109:	pop    rdi
   14000910a:	gs js  0x140009176
   14000910d:	je     0x14000910f
   14000910f:	add    BYTE PTR [rbp+0x775f5f00],bl
   140009115:	addr32 gs je 0x140009186
   140009119:	(bad)  
   14000911a:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140009121:	add    BYTE PTR [rsi+0x735f5f00],cl
   140009127:	gs je  0x140009189
   14000912a:	(bad)  
   14000912b:	jo     0x14000919d
   14000912d:	pop    rdi
   14000912e:	je     0x1400091a9
   140009130:	jo     0x140009197
   140009132:	add    BYTE PTR [rax],al
   140009134:	(bad)  
   140009135:	add    DWORD PTR [rdi+0x65],ebx
   140009138:	js     0x1400091a3
   14000913a:	je     0x14000913c
   14000913c:	rol    DWORD PTR [rax],0x5f
   14000913f:	movsxd esp,DWORD PTR [rbp+0x78]
   140009142:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000914a:	jae    0x1400091b1
   14000914c:	je     0x1400091c3
   14000914e:	jae    0x1400091b5
   140009150:	jb     0x1400091bf
   140009152:	(bad)  
   140009153:	je     0x1400091bd
   140009155:	gs jb  0x1400091ca
   140009158:	add    BYTE PTR [rax],al
   14000915a:	jge    0x14000915d
   14000915c:	pop    rdi
   14000915d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140009164:	ins    DWORD PTR es:[rdi],dx
   140009165:	add    BYTE PTR [rdi+0x0],dl
   140009168:	pop    rdi
   140009169:	pop    rdi
   14000916a:	rex.XB pop r15
   14000916c:	jae    0x1400091de
   14000916e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140009172:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140009179:	ins    BYTE PTR es:[rdi],dx
   14000917a:	gs jb  0x14000917d
   14000917d:	add    BYTE PTR [rdi],ah
   14000917f:	add    DWORD PTR [rdi+0x66],ebx
   140009182:	ins    DWORD PTR es:[rdi],dx
   140009183:	outs   dx,DWORD PTR ds:[rsi]
   140009184:	fs add BYTE PTR gs:[rax],al
   140009188:	rol    BYTE PTR [rax],cl
   14000918a:	pop    rdi
   14000918b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000918e:	ins    DWORD PTR es:[rdi],dx
   14000918f:	outs   dx,DWORD PTR ds:[rsi]
   140009190:	fs add BYTE PTR gs:[rax],al
   140009194:	ins    DWORD PTR es:[rdi],dx
   140009195:	jae    0x14000920d
   140009197:	movsxd esi,DWORD PTR [rdx+0x74]
   14000919a:	cs fs ins BYTE PTR es:[rdi],dx
   14000919d:	ins    BYTE PTR es:[rdi],dx
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	(bad)  
   1400091a1:	add    BYTE PTR [rdi],bh
   1400091a3:	je     0x14000920a
   1400091a5:	jb     0x140009214
   1400091a7:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400091ae:	pop    rcx
   1400091af:	pop    r8
   1400091b1:	pop    rax
   1400091b2:	pop    rdx
   1400091b3:	add    BYTE PTR [rcx+0x0],dl
   1400091b6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400091b8:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400091bb:	rex.RX jb 0x140009223
   1400091be:	add    BYTE PTR gs:[rcx+0x70],ah
   1400091c2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x642d6e69        # 0x1b72e0539
   1400091cc:	outs   dx,DWORD PTR ds:[rsi]
   1400091cd:	ja     0x14000923d
   1400091cf:	ins    BYTE PTR es:[rdi],dx
   1400091d0:	gs jbe 0x140009238
   1400091d3:	ins    BYTE PTR es:[rdi],dx
   1400091d4:	sub    eax,0x6e72656b
   1400091d9:	gs ins BYTE PTR es:[rdi],dx
   1400091db:	xor    esi,DWORD PTR [rdx]
   1400091dd:	sub    eax,0x312d326c
   1400091e2:	sub    eax,0x6c642e30
   1400091e7:	ins    BYTE PTR es:[rdi],dx
   1400091e8:	add    BYTE PTR [rax],al
   1400091ea:	ds add eax,0x536c7452
   1400091f0:	jne    0x140009254
   1400091f2:	jae    0x140009257
   1400091f4:	jb     0x14000925f
   1400091f6:	(bad)  
   1400091f7:	gs push rdi
   1400091f9:	outs   dx,BYTE PTR ds:[rsi]
   1400091fa:	push   bx
   1400091fc:	je     0x14000925f
   1400091fe:	je     0x140009265
   140009200:	rex.XB push 0x65676e61
   140009206:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009208:	je     0x140009273
   14000920a:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140009210:	outs   dx,DWORD PTR ds:[rsi]
   140009211:	outs   dx,BYTE PTR ds:[rsi]
   140009212:	add    BYTE PTR [rax],al
   140009214:	outs   dx,DWORD PTR ds:[rsi]
   140009215:	add    eax,0x556c7452
   14000921a:	outs   dx,BYTE PTR ds:[rsi]
   14000921b:	jae    0x140009292
   14000921d:	(bad)  
   14000921f:	movsxd esi,DWORD PTR [rdx+0x69]
   140009222:	(bad)  
   140009223:	gs push rdi
   140009225:	outs   dx,BYTE PTR ds:[rsi]
   140009226:	data16 rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009229:	je     0x140009294
   14000922b:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140009231:	outs   dx,DWORD PTR ds:[rsi]
   140009232:	outs   dx,BYTE PTR ds:[rsi]
   140009233:	push   rdi
   140009234:	(bad)  
   140009235:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6d6f4372
   14000923d:	jo     0x1400092ab
   14000923f:	gs je  0x1400092ab
   140009242:	outs   dx,DWORD PTR ds:[rsi]
   140009243:	outs   dx,BYTE PTR ds:[rsi]
   140009244:	add    BYTE PTR [rax],al
   140009246:	mov    BYTE PTR [rdx],0x52
   140009249:	je     0x1400092b7
   14000924b:	rex.XB (bad) 
   14000924d:	jo     0x1400092c3
   14000924f:	jne    0x1400092c3
   140009251:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009254:	outs   dx,BYTE PTR ds:[rsi]
   140009255:	je     0x1400092bc
   140009257:	js     0x1400092cd
   140009259:	add    BYTE PTR [rdi+0x4],dh
   14000925c:	push   rdx
   14000925d:	je     0x1400092cb
   14000925f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009261:	outs   dx,DWORD PTR ds:[rsi]
   140009262:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009266:	jne    0x1400092d6
   140009268:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000926c:	outs   dx,BYTE PTR ds:[rsi]
   14000926d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000926f:	je     0x1400092e3
   140009271:	jns    0x140009273
   140009273:	add    BYTE PTR [rbx+0x6c745205],cl
   140009279:	push   rsi
   14000927a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140009281:	outs   dx,BYTE PTR ds:[rsi]
   140009282:	ja     0x1400092ed
   140009284:	outs   dx,BYTE PTR ds:[rsi]
   140009285:	add    BYTE PTR fs:[rax],al
   140009288:	outs   dx,BYTE PTR ds:[rsi]
   140009289:	je     0x1400092ef
   14000928b:	ins    BYTE PTR es:[rdi],dx
   14000928c:	ins    BYTE PTR es:[rdi],dx
   14000928d:	cs fs ins BYTE PTR es:[rdi],dx
   140009290:	ins    BYTE PTR es:[rdi],dx
   140009291:	add    BYTE PTR [rax],cl
   140009293:	add    BYTE PTR [rbp+0x78],al
   140009296:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   14000929e:	jae    0x1400092a0
   1400092a0:	xor    BYTE PTR [rax],al
   1400092a2:	rex.WRXB jo 0x14000930a
   1400092a5:	outs   dx,BYTE PTR ds:[rsi]
   1400092a6:	push   rax
   1400092a7:	jb     0x140009318
   1400092a9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400092ac:	jae    0x140009302
   1400092ae:	outs   dx,DWORD PTR ds:[rsi]
   1400092af:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400092b3:	add    BYTE PTR [rip+0x61725400],al        # 0x1a172e6b9
   1400092b9:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400092bc:	gs jae 0x140009332
   1400092bf:	(bad)  
   1400092c0:	add    BYTE PTR gs:[eax],al
   1400092c4:	rex.X add BYTE PTR [rbx+0x6f],al
   1400092c8:	push   rbp
   1400092c9:	outs   dx,BYTE PTR ds:[rsi]
   1400092ca:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400092d1:	imul   edi,DWORD PTR [rdx+0x65],0xc0000
   1400092d8:	rex.RXB
   1400092d9:	gs je  0x14000931f
   1400092dc:	jne    0x140009350
   1400092de:	jb     0x140009345
   1400092e0:	outs   dx,BYTE PTR ds:[rsi]
   1400092e1:	je     0x140009333
   1400092e3:	jb     0x140009354
   1400092e5:	movsxd esp,DWORD PTR [rbp+0x73]
   1400092e8:	jae    0x1400092ea
   1400092ea:	mov    DWORD PTR [rcx],0x53637052
   1400092f0:	gs jb  0x140009369
   1400092f3:	gs jb  0x14000933f
   1400092f6:	outs   dx,BYTE PTR ds:[rsi]
   1400092f7:	jno    0x14000933b
   1400092f9:	imul   ebp,DWORD PTR [rsi+0x64],0x73676e69
   140009300:	add    BYTE PTR [rax],al
   140009302:	mov    esi,0x63705201
   140009307:	rex.WRXB (bad) 
   140009309:	push   0x65
   14000930b:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
   14000930f:	je     0x140009365
   140009311:	jns    0x140009383
   140009313:	add    BYTE PTR gs:[rax],al
   140009316:	add    BYTE PTR [rdi+0x65],al
   14000931a:	je     0x140009370
   14000931c:	outs   dx,DWORD PTR ds:[rsi]
   14000931d:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   140009321:	outs   dx,BYTE PTR ds:[rsi]
   140009322:	outs   dx,WORD PTR ds:[rsi]
   140009324:	jb     0x140009393
   140009326:	(bad)  
   140009327:	je     0x140009392
   140009329:	outs   dx,DWORD PTR ds:[rsi]
   14000932a:	outs   dx,BYTE PTR ds:[rsi]
   14000932b:	add    BYTE PTR [rsi],al
   14000932d:	add    BYTE PTR [rbp+0x76],al
   140009330:	outs   dx,BYTE PTR gs:[rsi]
   140009332:	je     0x14000938b
   140009334:	jb     0x14000939f
   140009336:	je     0x14000939d
   140009338:	add    BYTE PTR [rax],al
   14000933a:	rol    DWORD PTR [rcx],cl
   14000933c:	push   rdx
   14000933d:	jo     0x1400093a2
   14000933f:	push   rbx
   140009340:	gs jb  0x1400093b9
   140009343:	gs jb  0x140009392
   140009346:	imul   esi,DWORD PTR [rbx+0x74],0x6e65
   14000934d:	add    BYTE PTR [rdi+0x65],al
   140009350:	je     0x1400093a6
   140009352:	jb     0x1400093b5
   140009354:	movsxd esp,DWORD PTR [rbp+0x45]
   140009357:	outs   dx,BYTE PTR ds:[rsi]
   140009358:	(bad)  
   140009359:	(bad)  
   14000935a:	ins    BYTE PTR es:[rdi],dx
   14000935b:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000935e:	(bad)  
   14000935f:	addr32 jae 0x140009362
   140009362:	mov    es,WORD PTR [rcx]
   140009364:	push   rdx
   140009365:	jo     0x1400093ca
   140009367:	rex.RB jo 0x1400093bc
   14000936a:	imul   esi,DWORD PTR gs:[ebx+0x74],0x577265
   140009373:	add    BYTE PTR [rcx+rax*1+0x4d637052],dh
   14000937a:	ins    DWORD PTR es:[edi],dx
   14000937c:	je     0x1400093d1
   14000937e:	je     0x1400093ef
   140009380:	jo     0x1400093d5
   140009382:	gs jb  0x1400093fb
   140009385:	gs jb  0x1400093d4
   140009388:	imul   esi,DWORD PTR [rbx+0x74],0x6e696e65
   14000938f:	add    BYTE PTR [eax],al
   140009392:	and    eax,DWORD PTR [rax]
   140009394:	push   rdx
   140009395:	gs addr32 push rcx
   140009398:	jne    0x1400093ff
   14000939a:	jb     0x140009415
   14000939c:	push   rsi
   14000939d:	(bad)  
   14000939e:	ins    BYTE PTR es:[rdi],dx
   14000939f:	jne    0x140009406
   1400093a1:	rex.RB js 0x1400093fb
   1400093a4:	add    BYTE PTR [rax],al
   1400093a6:	add    eax,0x65764500
   1400093ab:	outs   dx,BYTE PTR ds:[rsi]
   1400093ac:	je     0x140009403
   1400093ae:	outs   dx,BYTE PTR ds:[rsi]
   1400093af:	jb     0x140009416
   1400093b1:	imul   esi,DWORD PTR [ebx+0x74],0x2007265
   1400093b9:	add    BYTE PTR [rdi+0x65],al
   1400093bc:	je     0x140009412
   1400093be:	jb     0x140009421
   1400093c0:	movsxd esp,DWORD PTR [rbp+0x4c]
   1400093c3:	outs   dx,DWORD PTR ds:[rsi]
   1400093c4:	addr32 addr32 gs jb 0x140009411
   1400093c9:	(bad)  
   1400093ca:	outs   dx,BYTE PTR ds:[rsi]
   1400093cb:	fs ins BYTE PTR es:[rdi],dx
   1400093cd:	add    BYTE PTR gs:[rax],al
   1400093d0:	add    eax,0x74654700
   1400093d5:	rex.WR (bad) 
   1400093d7:	jae    0x14000944d
   1400093d9:	rex.RB jb 0x14000944e
   1400093dc:	outs   dx,DWORD PTR ds:[rsi]
   1400093dd:	jb     0x1400093df
   1400093df:	add    BYTE PTR [rax+rax*1],dl
   1400093e2:	push   rdx
   1400093e3:	gs addr32 rex.RXB
   1400093e6:	gs je  0x14000943f
   1400093e9:	(bad)  
   1400093ea:	ins    BYTE PTR es:[rdi],dx
   1400093eb:	jne    0x140009452
   1400093ed:	push   rdi
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	test   DWORD PTR [rcx],eax
   1400093f2:	push   rdx
   1400093f3:	jo     0x140009458
   1400093f5:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x56676e69
   1400093fd:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140009402:	rex.RX jb 0x14000946a
   140009405:	add    BYTE PTR gs:[rax],al
   140009408:	(bad)  
   140009409:	add    BYTE PTR [rbp+0x6e],dl
   14000940c:	jb     0x140009473
   14000940e:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   140009416:	(bad)  
   140009417:	movsxd esp,DWORD PTR [rbp+0x47]
   14000941a:	jne    0x140009485
   14000941c:	fs jae 0x14000941f
   14000941f:	add    BYTE PTR [rdi],bh
   140009421:	add    BYTE PTR [rbx+0x6f],al
   140009424:	push   rsp
   140009425:	(bad)  
   140009426:	jae    0x140009493
   140009428:	rex.WRB
   140009429:	gs ins DWORD PTR es:[rdi],dx
   14000942b:	rex.RX jb 0x140009493
   14000942e:	add    BYTE PTR gs:[rdx],bl
   140009431:	add    dl,BYTE PTR [rbp+0x75]
   140009434:	imul   esp,DWORD PTR [rsi+rax*2+0x72],0x74536d6f
   14000943c:	jb     0x1400094a7
   14000943e:	outs   dx,BYTE PTR ds:[rsi]
   14000943f:	addr32 push rdi
   140009441:	add    BYTE PTR [rdx],al
   140009443:	add    BYTE PTR [rbx+0x6f],al
   140009446:	outs   dx,BYTE PTR ds:[rsi]
   140009447:	jbe    0x1400094ae
   140009449:	jb     0x1400094bf
   14000944b:	push   rbx
   14000944c:	je     0x1400094c0
   14000944e:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   140009455:	jb     0x1400094c0
   140009457:	je     0x1400094d2
   140009459:	rex.R
   14000945a:	gs jae 0x1400094c0
   14000945d:	jb     0x1400094c8
   14000945f:	jo     0x1400094d5
   140009461:	outs   dx,DWORD PTR ds:[rsi]
   140009462:	jb     0x1400094b8
   140009464:	outs   dx,DWORD PTR ds:[rsi]
   140009465:	push   rbx
   140009466:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000946a:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140009472:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   140009479:	add    al,bl
   14000947b:	add    DWORD PTR [rdx+0x70],edx
   14000947e:	movsxd edx,DWORD PTR [rbx+0x65]
   140009481:	jb     0x1400094f9
   140009483:	gs jb  0x1400094d8
   140009486:	imul   esi,DWORD PTR gs:[ebx+0x74],0x66497265
   14000948f:	xor    eax,DWORD PTR [rax]
   140009491:	add    BYTE PTR [rsi],bl
   140009493:	add    BYTE PTR [rdx+0x65],dl
   140009496:	addr32 rex.WRXB jo 0x1400094ff
   14000949a:	outs   dx,BYTE PTR ds:[rsi]
   14000949b:	rex.WXB
   14000949c:	gs jns 0x1400094e4
   14000949f:	js     0x1400094f8
   1400094a1:	add    ah,bl
   1400094a3:	add    DWORD PTR [rdx+0x70],edx
   1400094a6:	movsxd edx,DWORD PTR [rbx+0x65]
   1400094a9:	jb     0x140009521
   1400094ab:	gs jb  0x140009503
   1400094ae:	outs   dx,BYTE PTR ds:[rsi]
   1400094af:	jb     0x140009516
   1400094b1:	imul   esi,DWORD PTR [ebx+0x74],0x66497265
   1400094b9:	add    BYTE PTR [rbx],al
   1400094bb:	add    BYTE PTR [rbp+0x76],al
   1400094be:	outs   dx,BYTE PTR gs:[rsi]
   1400094c0:	je     0x140009514
   1400094c2:	imul   esi,DWORD PTR gs:[ebx+0x74],0xe7007265
   1400094cb:	add    DWORD PTR [rdx+0x70],edx
   1400094ce:	movsxd edx,DWORD PTR [rbx+0x65]
   1400094d1:	jb     0x140009549
   1400094d3:	gs jb  0x14000952b
   1400094d6:	jae    0x14000953d
   1400094d8:	push   rax
   1400094d9:	jb     0x14000954a
   1400094db:	je     0x140009550
   1400094dd:	gs jno 0x140009525
   1400094e0:	jo     0x140009539
   1400094e2:	add    BYTE PTR [rax],al
   1400094e4:	add    BYTE PTR es:[rbx+0x6f],al
   1400094e8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400094ea:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400094f2:	rex.RB js 0x1400094f5
   1400094f5:	add    BYTE PTR [rcx],al
   1400094f7:	add    BYTE PTR [rdi+0x65],al
   1400094fa:	je     0x140009550
   1400094fc:	jb     0x14000955f
   1400094fe:	movsxd esp,DWORD PTR [rbp+0x45]
   140009501:	outs   dx,BYTE PTR ds:[rsi]
   140009502:	(bad)  
   140009503:	(bad)  
   140009504:	ins    BYTE PTR es:[rdi],dx
   140009505:	gs rex.WR
   140009507:	gs jbe 0x14000956f
   14000950a:	ins    BYTE PTR es:[rdi],dx
   14000950b:	add    BYTE PTR [rcx],ch
   14000950d:	add    BYTE PTR [rdi+0x65],al
   140009510:	je     0x140009558
   140009512:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000951a:	(bad)  
   14000951b:	jne    0x140009591
   14000951d:	gs jae 0x140009565
   140009520:	js     0x140009579
   140009522:	add    BYTE PTR [rax],al
   140009524:	add    BYTE PTR [rax],al
   140009526:	rex.XB ins BYTE PTR es:[rdi],dx
   140009528:	outs   dx,DWORD PTR ds:[rsi]
   140009529:	jae    0x140009590
   14000952b:	rex.W (bad) 
   14000952d:	outs   dx,BYTE PTR ds:[rsi]
   14000952e:	fs ins BYTE PTR es:[rdi],dx
   140009530:	add    BYTE PTR gs:[rax],al
   140009533:	add    BYTE PTR [rdx+0x65],dl
   140009536:	rex.XB ins BYTE PTR es:[edi],dx
   140009539:	outs   dx,DWORD PTR ds:[rsi]
   14000953a:	jae    0x1400095a1
   14000953c:	rex.WXB
   14000953d:	gs jns 0x140009540
   140009540:	add    eax,DWORD PTR [rax]
   140009542:	push   rdx
   140009543:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000954c:	(bad)  
   14000954d:	movsxd esp,DWORD PTR [rbp+0x47]
   140009550:	jne    0x1400095bb
   140009552:	fs jae 0x1400095ac
   140009555:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56ce85b
   14000955b:	gs jo  0x14000955e
   14000955e:	lldt   WORD PTR [rbx+0x65]
   140009562:	je     0x1400095b9
   140009564:	outs   dx,BYTE PTR ds:[rsi]
   140009565:	push   0x6c646e61
   14000956a:	gs fs rex.RB js 0x1400095d2
   14000956f:	gs jo  0x1400095e6
   140009572:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009579:	gs jb  0x14000957c
   14000957c:	adc    eax,DWORD PTR [rax]
   14000957e:	rex.RXB
   14000957f:	gs je  0x1400095cf
   140009582:	outs   dx,DWORD PTR ds:[rsi]
   140009583:	fs jne 0x1400095f2
   140009586:	gs rex.W (bad) 
   140009589:	outs   dx,BYTE PTR ds:[rsi]
   14000958a:	fs ins BYTE PTR es:[rdi],dx
   14000958c:	gs push rdi
   14000958e:	add    BYTE PTR [rax],al
   140009590:	add    BYTE PTR [rax],al
   140009592:	push   rcx
   140009593:	jne    0x1400095fa
   140009595:	jb     0x140009610
   140009597:	push   rax
   140009598:	gs jb  0x140009601
   14000959b:	outs   dx,DWORD PTR ds:[rsi]
   14000959c:	jb     0x14000960b
   14000959e:	(bad)  
   14000959f:	outs   dx,BYTE PTR ds:[rsi]
   1400095a0:	movsxd esp,DWORD PTR [rbp+0x43]
   1400095a3:	outs   dx,DWORD PTR ds:[rsi]
   1400095a4:	jne    0x140009614
   1400095a6:	je     0x14000960d
   1400095a8:	jb     0x1400095aa
   1400095aa:	or     eax,0x74654700
   1400095af:	rex.XB jne 0x140009624
   1400095b2:	jb     0x140009619
   1400095b4:	outs   dx,BYTE PTR ds:[rsi]
   1400095b5:	je     0x140009607
   1400095b7:	jb     0x140009628
   1400095b9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400095bc:	jae    0x140009607
   1400095be:	add    BYTE PTR fs:[rcx],dl
   1400095c1:	add    BYTE PTR [rdi+0x65],al
   1400095c4:	je     0x140009609
   1400095c6:	jne    0x14000963a
   1400095c8:	jb     0x14000962f
   1400095ca:	outs   dx,BYTE PTR ds:[rsi]
   1400095cb:	je     0x140009621
   1400095cd:	push   0x64616572
   1400095d2:	rex.WB
   1400095d3:	add    BYTE PTR fs:[rax],al
   1400095d6:	adc    al,0x0
   1400095d8:	rex.RXB
   1400095d9:	gs je  0x14000962f
   1400095dc:	jns    0x140009651
   1400095de:	je     0x140009645
   1400095e0:	ins    DWORD PTR es:[rdi],dx
   1400095e1:	push   rsp
   1400095e2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400095e9:	ins    BYTE PTR es:[rdi],dx
   1400095ea:	gs push rsp
   1400095ec:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   1400095f3:	gs je  0x14000964a
   1400095f6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400095fd:	je     0x1400095ff
   1400095ff:	add    BYTE PTR [rcx],dl
   140009601:	add    BYTE PTR [rbp+0x6e],dl
   140009604:	push   0x6c646e61
   140009609:	gs fs rex.RB js 0x140009671
   14000960e:	gs jo  0x140009685
   140009611:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009618:	gs jb  0x14000961b
   14000961b:	add    BYTE PTR [rbx+0x0],cl
   14000961e:	push   rsp
   14000961f:	gs jb  0x14000968f
   140009622:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140009629:	outs   dx,DWORD PTR ds:[rsi]
   14000962a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000962d:	jae    0x14000962f
   14000962f:	add    BYTE PTR [rcx+0x70],ah
   140009632:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e09a9
   14000963c:	outs   dx,DWORD PTR ds:[rsi]
   14000963d:	jb     0x1400096a4
   14000963f:	sub    eax,0x636f7270
   140009644:	gs jae 0x1400096ba
   140009647:	je     0x1400096b1
   140009649:	jb     0x1400096b0
   14000964b:	(bad)  
   14000964c:	fs jae 0x14000967c
   14000964f:	ins    BYTE PTR es:[rdi],dx
   140009650:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32c387
   140009656:	fs ins BYTE PTR es:[rdi],dx
   140009658:	ins    BYTE PTR es:[rdi],dx
   140009659:	add    BYTE PTR [rcx+0x70],ah
   14000965c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e09d3
   140009666:	jbe    0x1400096cd
   140009668:	outs   dx,BYTE PTR ds:[rsi]
   140009669:	je     0x1400096d4
   14000966b:	outs   dx,BYTE PTR ds:[rsi]
   14000966c:	addr32 sub eax,0x73616c63
   140009672:	jae    0x1400096dd
   140009674:	movsxd esi,DWORD PTR [rax+0x72]
   140009677:	outs   dx,DWORD PTR ds:[rsi]
   140009678:	jbe    0x1400096e3
   14000967a:	fs gs jb 0x1400096ab
   14000967e:	ins    BYTE PTR es:[rdi],dx
   14000967f:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30c3b6
   140009685:	fs ins BYTE PTR es:[rdi],dx
   140009687:	ins    BYTE PTR es:[rdi],dx
   140009688:	add    BYTE PTR [rax],al
   14000968a:	(bad)  
   14000968b:	jo     0x1400096f6
   14000968d:	sub    eax,0x772d736d
   140009692:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009699:	sub    eax,0x2d6d6f63
   14000969e:	ins    BYTE PTR es:[rdi],dx
   14000969f:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c3d6
   1400096a5:	fs ins BYTE PTR es:[rdi],dx
   1400096a7:	ins    BYTE PTR es:[rdi],dx
   1400096a8:	add    BYTE PTR [rax],al
   1400096aa:	push   rdx
   1400096ab:	push   rax
   1400096ac:	rex.XB push r10
   1400096ae:	push   rsp
   1400096af:	xor    al,0x2e
   1400096b1:	fs ins BYTE PTR es:[rdi],dx
   1400096b3:	ins    BYTE PTR es:[rdi],dx
   1400096b4:	add    BYTE PTR [rax],al
   1400096b6:	(bad)  
   1400096b7:	jo     0x140009722
   1400096b9:	sub    eax,0x772d736d
   1400096be:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   1400096c5:	jb     0x140009730
   1400096c7:	je     0x140009742
   1400096c9:	sub    eax,0x65736162
   1400096ce:	sub    eax,0x322d316c
   1400096d3:	sub    eax,0x6c642e30
   1400096d8:	ins    BYTE PTR es:[rdi],dx
   1400096d9:	add    BYTE PTR [rcx+0x70],ah
   1400096dc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e0a53
   1400096e6:	jbe    0x14000974d
   1400096e8:	outs   dx,BYTE PTR ds:[rsi]
   1400096e9:	je     0x140009754
   1400096eb:	outs   dx,BYTE PTR ds:[rsi]
   1400096ec:	addr32 sub eax,0x766f7270
   1400096f2:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   1400096fa:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64c530
   140009700:	ins    BYTE PTR es:[rdi],dx
   140009701:	add    BYTE PTR [rcx+0x70],ah
   140009704:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0a7b
   14000970e:	outs   dx,DWORD PTR ds:[rsi]
   14000970f:	jb     0x140009776
   140009711:	sub    eax,0x69676572
   140009716:	jae    0x14000978c
   140009718:	jb     0x140009793
   14000971a:	sub    eax,0x312d316c
   14000971f:	sub    eax,0x6c642e30
   140009724:	ins    BYTE PTR es:[rdi],dx
   140009725:	add    BYTE PTR [rcx+0x70],ah
   140009728:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0a9f
   140009732:	outs   dx,DWORD PTR ds:[rsi]
   140009733:	jb     0x14000979a
   140009735:	sub    eax,0x6f727265
   14000973a:	jb     0x1400097a4
   14000973c:	(bad)  
   14000973d:	outs   dx,BYTE PTR ds:[rsi]
   14000973e:	fs ins BYTE PTR es:[rdi],dx
   140009740:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140009747:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c57e
   14000974d:	ins    BYTE PTR es:[rdi],dx
   14000974e:	add    BYTE PTR [rax],al
   140009750:	(bad)  
   140009751:	jo     0x1400097bc
   140009753:	sub    eax,0x772d736d
   140009758:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   14000975f:	jb     0x1400097ca
   140009761:	je     0x1400097dc
   140009763:	sub    eax,0x6c646473
   140009768:	sub    eax,0x312d316c
   14000976d:	sub    eax,0x6c642e30
   140009772:	ins    BYTE PTR es:[rdi],dx
   140009773:	add    BYTE PTR [rcx+0x70],ah
   140009776:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0aed
   140009780:	outs   dx,DWORD PTR ds:[rsi]
   140009781:	jb     0x1400097e8
   140009783:	sub    eax,0x656c6966
   140009788:	sub    eax,0x322d316c
   14000978d:	sub    eax,0x6c642e31
   140009792:	ins    BYTE PTR es:[rdi],dx
   140009793:	add    BYTE PTR [rcx+0x70],ah
   140009796:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0b0d
   1400097a0:	outs   dx,DWORD PTR ds:[rsi]
   1400097a1:	jb     0x140009808
   1400097a3:	sub    eax,0x646e6168
   1400097a8:	ins    BYTE PTR es:[rdi],dx
   1400097a9:	gs sub eax,0x312d316c
   1400097af:	sub    eax,0x6c642e30
   1400097b4:	ins    BYTE PTR es:[rdi],dx
   1400097b5:	add    BYTE PTR [rcx+0x70],ah
   1400097b8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0b2f
   1400097c2:	outs   dx,DWORD PTR ds:[rsi]
   1400097c3:	jb     0x14000982a
   1400097c5:	sub    eax,0x636e7973
   1400097ca:	push   0x2d316c2d
   1400097cf:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c605
   1400097d5:	ins    BYTE PTR es:[rdi],dx
   1400097d6:	add    BYTE PTR [rax],al
   1400097d8:	(bad)  
   1400097d9:	jo     0x140009844
   1400097db:	sub    eax,0x772d736d
   1400097e0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400097e7:	sub    eax,0x7262696c
   1400097ec:	(bad)  
   1400097ed:	jb     0x140009868
   1400097ef:	ins    BYTE PTR es:[rdi],dx
   1400097f0:	outs   dx,DWORD PTR ds:[rsi]
   1400097f1:	(bad)  
   1400097f2:	fs gs jb 0x140009823
   1400097f6:	ins    BYTE PTR es:[rdi],dx
   1400097f7:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30c52f
   1400097fd:	fs ins BYTE PTR es:[rdi],dx
   1400097ff:	ins    BYTE PTR es:[rdi],dx
   140009800:	add    BYTE PTR [rax],al
   140009802:	(bad)  
   140009803:	jo     0x14000986e
   140009805:	sub    eax,0x772d736d
   14000980a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009811:	sub    eax,0x666f7270
   140009816:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000981e:	sub    eax,0x6c642e30
   140009823:	ins    BYTE PTR es:[rdi],dx
   140009824:	add    BYTE PTR [rax],al
   140009826:	(bad)  
   140009827:	jo     0x140009892
   140009829:	sub    eax,0x772d736d
   14000982e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009835:	sub    eax,0x69737973
   14000983a:	outs   dx,BYTE PTR ds:[rsi]
   14000983b:	outs   dx,WORD PTR ds:[rsi]
   14000983d:	sub    eax,0x322d316c
   140009842:	sub    eax,0x6c642e31
   140009847:	ins    BYTE PTR es:[rdi],dx
   140009848:	add    BYTE PTR [rax],al
   14000984a:	sub    al,0x0
   14000984c:	rex.XB jb 0x1400098b4
   14000984f:	(bad)  
   140009850:	je     0x1400098b7
   140009852:	push   rbp
   140009853:	jb     0x1400098be
   140009855:	add    BYTE PTR [rbp+0x72],dh
   140009858:	ins    BYTE PTR es:[rdi],dx
   140009859:	ins    DWORD PTR es:[rdi],dx
   14000985a:	outs   dx,DWORD PTR ds:[rsi]
   14000985b:	outs   dx,BYTE PTR ds:[rsi]
   14000985c:	cs fs ins BYTE PTR es:[rdi],dx
   14000985f:	ins    BYTE PTR es:[rdi],dx
   140009860:	add    BYTE PTR [rax],al
   140009862:	xchg   ebx,eax
   140009863:	add    al,0x6d
   140009865:	gs ins DWORD PTR es:[rdi],dx
   140009867:	movsxd esi,DWORD PTR [rax+0x79]
   14000986a:	pop    rdi
   14000986b:	jae    0x14000986d
   14000986d:	add    BYTE PTR [rdx+0x3],dh
   140009870:	push   rdx
   140009871:	je     0x1400098df
   140009873:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009875:	jne    0x1400098e4
   140009877:	gs jb  0x1400098db
   14000987a:	je     0x1400098e1
   14000987c:	rex.RXB
   14000987d:	outs   dx,BYTE PTR gs:[rsi]
   14000987f:	gs jb  0x1400098eb
   140009882:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   140009886:	ins    BYTE PTR es:[rdi],dx
   140009887:	gs rex.B jbe 0x1400098f7
   14000988b:	add    BYTE PTR [rdx],bl
   14000988d:	add    al,0x52
   14000988f:	je     0x1400098fd
   140009891:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009893:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000989b:	rex.RXB
   14000989c:	outs   dx,BYTE PTR gs:[rsi]
   14000989e:	gs jb  0x14000990a
   1400098a1:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   1400098a5:	ins    BYTE PTR es:[rdi],dx
   1400098a6:	gs rex.B jbe 0x140009916
   1400098aa:	add    BYTE PTR [rax],al
   1400098ac:	mov    es,WORD PTR [rdx+rdx*2]
   1400098af:	je     0x14000991d
   1400098b1:	rex.WRX jne 0x140009921
   1400098b4:	(bad)  
   1400098b5:	gs jb  0x1400098ff
   1400098b8:	outs   dx,BYTE PTR gs:[rsi]
   1400098ba:	gs jb  0x140009926
   1400098bd:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   1400098c1:	ins    BYTE PTR es:[rdi],dx
   1400098c2:	gs rex.RB ins BYTE PTR es:[rdi],dx
   1400098c5:	gs ins DWORD PTR es:[rdi],dx
   1400098c7:	outs   dx,BYTE PTR gs:[rsi]
   1400098c9:	je     0x14000993e
   1400098cb:	rex.B jbe 0x14000993a
   1400098ce:	add    BYTE PTR [rax],al
   1400098d0:	and    al,0x4
   1400098d2:	push   rdx
   1400098d3:	je     0x140009941
   1400098d5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400098d7:	jae    0x14000993e
   1400098d9:	jb     0x14000994f
   1400098db:	rex.RB ins BYTE PTR es:[rdi],dx
   1400098dd:	gs ins DWORD PTR es:[rdi],dx
   1400098df:	outs   dx,BYTE PTR gs:[rsi]
   1400098e1:	je     0x14000992a
   1400098e3:	outs   dx,BYTE PTR gs:[rsi]
   1400098e5:	gs jb  0x140009951
   1400098e8:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   1400098ec:	ins    BYTE PTR es:[rdi],dx
   1400098ed:	gs rex.B jbe 0x14000995d
   1400098f1:	add    BYTE PTR [rbp+0x3],dh
   1400098f4:	push   rdx
   1400098f5:	je     0x140009963
   1400098f7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400098f9:	jne    0x140009968
   1400098fb:	gs jb  0x14000995f
   1400098fe:	je     0x140009965
   140009900:	rex.RXB
   140009901:	outs   dx,BYTE PTR gs:[rsi]
   140009903:	gs jb  0x14000996f
   140009906:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000990a:	ins    BYTE PTR es:[rdi],dx
   14000990b:	gs push rdi
   14000990d:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x70537475
   140009915:	ins    BYTE PTR es:[rdi],dx
   140009916:	(bad)  
   140009917:	jns    0x140009982
   140009919:	outs   dx,BYTE PTR ds:[rsi]
   14000991a:	addr32 rex.B jbe 0x14000998a
   14000991e:	add    BYTE PTR [rax],al
   140009920:	cmp    BYTE PTR [rbx],al
   140009922:	push   rdx
   140009923:	je     0x140009991
   140009925:	rex.R
   140009926:	gs ins BYTE PTR es:[rdi],dx
   140009928:	gs je  0x140009990
   14000992b:	rex.RB ins BYTE PTR es:[rdi],dx
   14000992d:	gs ins DWORD PTR es:[rdi],dx
   14000992f:	outs   dx,BYTE PTR gs:[rsi]
   140009931:	je     0x14000997a
   140009933:	outs   dx,BYTE PTR gs:[rsi]
   140009935:	gs jb  0x1400099a1
   140009938:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000993c:	ins    BYTE PTR es:[rdi],dx
   14000993d:	gs rex.B jbe 0x1400099ad
   140009941:	add    dh,ch
   140009943:	add    dl,BYTE PTR [rdx+0x74]
   140009946:	ins    BYTE PTR es:[rdi],dx
   140009947:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009949:	outs   dx,BYTE PTR ds:[rsi]
   14000994a:	jbe    0x1400099b1
   14000994c:	jb     0x1400099c2
   14000994e:	push   rbx
   14000994f:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x63696e55
   140009957:	outs   dx,DWORD PTR ds:[rsi]
   140009958:	fs gs push rbx
   14000995b:	je     0x1400099cf
   14000995d:	imul   ebp,DWORD PTR [rsi+0x67],0x3b00000
   140009964:	push   rdx
   140009965:	je     0x1400099d3
   140009967:	rex.RX jb 0x1400099cf
   14000996a:	gs push rbp
   14000996c:	outs   dx,BYTE PTR ds:[rsi]
   14000996d:	imul   esp,DWORD PTR [rbx+0x6f],0x74536564
   140009974:	jb     0x1400099df
   140009976:	outs   dx,BYTE PTR ds:[rsi]
   140009977:	add    BYTE PTR [eax],al
   14000997a:	stos   BYTE PTR es:[rdi],al
   14000997b:	add    dl,BYTE PTR [rdx+0x74]
   14000997e:	ins    BYTE PTR es:[rdi],dx
   14000997f:	rex.B ins BYTE PTR es:[rdi],dx
   140009981:	ins    BYTE PTR es:[rdi],dx
   140009982:	outs   dx,DWORD PTR ds:[rsi]
   140009983:	movsxd esp,DWORD PTR [rcx+0x74]
   140009986:	gs rex.W
   140009988:	gs (bad) 
   14000998a:	jo     0x14000998c
   14000998c:	rol    DWORD PTR [rdx+rdx*2],1
   14000998f:	je     0x1400099fd
   140009991:	push   rdx
   140009992:	gs rex.B ins BYTE PTR es:[rdi],dx
   140009995:	ins    BYTE PTR es:[rdi],dx
   140009996:	outs   dx,DWORD PTR ds:[rsi]
   140009997:	movsxd esp,DWORD PTR [rcx+0x74]
   14000999a:	gs rex.W
   14000999c:	gs (bad) 
   14000999e:	jo     0x1400099a0
   1400099a0:	stos   DWORD PTR es:[rdi],eax
   1400099a1:	add    edx,DWORD PTR [rdx+0x74]
   1400099a4:	ins    BYTE PTR es:[rdi],dx
   1400099a5:	rex.RX jb 0x140009a0d
   1400099a8:	gs rex.W
   1400099aa:	gs (bad) 
   1400099ac:	jo     0x1400099ae
   1400099ae:	(bad)  
   1400099af:	add    al,0x52
   1400099b1:	je     0x140009a1f
   1400099b3:	push   rdx
   1400099b4:	gs jo  0x140009a26
   1400099b7:	jb     0x140009a2d
   1400099b9:	rex.RB js 0x140009a1f
   1400099bc:	gs jo  0x140009a33
   1400099bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x1d40000
   1400099c6:	rex.WRX je 0x140009a1a
   1400099c9:	jne    0x140009a30
   1400099cb:	jb     0x140009a46
   1400099cd:	push   rbx
   1400099ce:	jns    0x140009a43
   1400099d0:	je     0x140009a37
   1400099d2:	ins    DWORD PTR es:[rdi],dx
   1400099d3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400099d5:	outs   dx,WORD PTR ds:[rsi]
   1400099d7:	jb     0x140009a46
   1400099d9:	(bad)  
   1400099da:	je     0x140009a45
   1400099dc:	outs   dx,DWORD PTR ds:[rsi]
   1400099dd:	outs   dx,BYTE PTR ds:[rsi]
   1400099de:	add    BYTE PTR [rax],al
   1400099e0:	mov    ebx,0x51744e01
   1400099e5:	jne    0x140009a4c
   1400099e7:	jb     0x140009a62
   1400099e9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400099eb:	outs   dx,WORD PTR ds:[rsi]
   1400099ed:	jb     0x140009a5c
   1400099ef:	(bad)  
   1400099f0:	je     0x140009a5b
   1400099f2:	outs   dx,DWORD PTR ds:[rsi]
   1400099f3:	outs   dx,BYTE PTR ds:[rsi]
   1400099f4:	push   rsp
   1400099f5:	push   0x64616572
   1400099fa:	add    BYTE PTR [rax],al
   1400099fc:	and    al,0x2
   1400099fe:	rex.WRX je 0x140009a54
   140009a01:	gs je  0x140009a4d
   140009a04:	outs   dx,BYTE PTR ds:[rsi]
   140009a05:	outs   dx,WORD PTR ds:[rsi]
   140009a07:	jb     0x140009a76
   140009a09:	(bad)  
   140009a0a:	je     0x140009a75
   140009a0c:	outs   dx,DWORD PTR ds:[rsi]
   140009a0d:	outs   dx,BYTE PTR ds:[rsi]
   140009a0e:	push   rsp
   140009a0f:	push   0x64616572
   140009a14:	add    BYTE PTR [rax],al
   140009a16:	or     BYTE PTR [rax],al
   140009a18:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009a1a:	rex.XB jb 0x140009a82
   140009a1d:	(bad)  
   140009a1e:	je     0x140009a85
   140009a20:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009a22:	jae    0x140009a98
   140009a24:	(bad)  
   140009a25:	outs   dx,BYTE PTR ds:[rsi]
   140009a26:	movsxd esp,DWORD PTR [rbp+0x0]
   140009a29:	add    BYTE PTR [rsi],al
   140009a2b:	add    BYTE PTR [rbx+0x72],al
   140009a2e:	gs (bad) 
   140009a30:	je     0x140009a97
   140009a32:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43000400
   140009a3b:	jb     0x140009aa2
   140009a3d:	(bad)  
   140009a3e:	je     0x140009aa5
   140009a40:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140009a49:	outs   dx,BYTE PTR ds:[rsi]
   140009a4a:	addr32 push rdi
   140009a4c:	add    BYTE PTR [rax],al
   140009a4e:	str    WORD PTR [rbp+0x61]
   140009a52:	jo     0x140009aaa
   140009a54:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140009a5b:	ins    BYTE PTR es:[rdi],dx
   140009a5c:	add    BYTE PTR gs:[rsi],bh
   140009a5f:	add    BYTE PTR [rbx+0x6f],al
   140009a62:	push   rsp
   140009a63:	(bad)  
   140009a64:	jae    0x140009ad1
   140009a66:	rex.WRB
   140009a67:	gs ins DWORD PTR es:[rdi],dx
   140009a69:	rex.B ins BYTE PTR es:[rdi],dx
   140009a6b:	ins    BYTE PTR es:[rdi],dx
   140009a6c:	outs   dx,DWORD PTR ds:[rsi]
   140009a6d:	movsxd eax,DWORD PTR [rax]
   140009a6f:	add    BYTE PTR [rip+0x74654700],ch        # 0x1b465e175
   140009a75:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x45657a69
   140009a7e:	js     0x140009a80
   140009a80:	add    DWORD PTR [rax],eax
   140009a82:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009a84:	ins    DWORD PTR es:[rdi],dx
   140009a85:	jo     0x140009ae8
   140009a87:	jb     0x140009aee
   140009a89:	push   rbx
   140009a8a:	je     0x140009afe
   140009a8c:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   140009a93:	outs   dx,BYTE PTR ds:[rsi]
   140009a94:	(bad)  
   140009a95:	ins    BYTE PTR es:[rdi],dx
   140009a96:	add    BYTE PTR [rax],al
   140009a98:	add    al,BYTE PTR [rax]
   140009a9a:	rex.R jne 0x140009b0d
   140009a9d:	ins    BYTE PTR es:[rdi],dx
   140009a9e:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   140009aa5:	outs   dx,BYTE PTR ds:[rsi]
   140009aa6:	fs ins BYTE PTR es:[rdi],dx
   140009aa8:	add    BYTE PTR gs:[rcx+0x0],bl
   140009aac:	push   rdi
   140009aad:	jb     0x140009b18
   140009aaf:	je     0x140009b16
   140009ab1:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65530053
   140009aba:	je     0x140009b02
   140009abc:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140009ac4:	gs jb  0x140009ac7
   140009ac7:	add    BYTE PTR [rax+rax*1+0x53],cl
   140009acb:	gs je  0x140009b13
   140009ace:	outs   dx,BYTE PTR ds:[rsi]
   140009acf:	fs rex.WRXB
   140009ad1:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x0
   140009ad9:	add    BYTE PTR [rbx+0x6f],al
   140009adc:	ins    DWORD PTR es:[rdi],dx
   140009add:	jo     0x140009b40
   140009adf:	jb     0x140009b46
   140009ae1:	push   rbx
   140009ae2:	je     0x140009b56
   140009ae4:	imul   ebp,DWORD PTR [rsi+0x67],0x1e007845
   140009aeb:	add    BYTE PTR [rbp+0x6e],dl
   140009aee:	ins    DWORD PTR es:[rdi],dx
   140009aef:	(bad)  
   140009af0:	jo     0x140009b48
   140009af2:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140009af9:	ins    BYTE PTR es:[rdi],dx
   140009afa:	add    BYTE PTR gs:[rdi],dl
   140009afd:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   140009b01:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140009b0a:	js     0x140009b63
   140009b0c:	add    BYTE PTR [rax],al
   140009b0e:	adc    al,0x0
   140009b10:	rex.RXB
   140009b11:	gs je  0x140009b64
   140009b14:	jb     0x140009b85
   140009b16:	movsxd eax,DWORD PTR [rcx+0x64]
   140009b19:	fs jb  0x140009b81
   140009b1c:	jae    0x140009b91
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	add    al,0x0
   140009b22:	rex.R
   140009b23:	gs jbe 0x140009b8f
   140009b26:	movsxd esp,DWORD PTR [rbp+0x49]
   140009b29:	outs   dx,DWORD PTR ds:[rsi]
   140009b2a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009b2c:	outs   dx,BYTE PTR ds:[rsi]
   140009b2d:	je     0x140009ba1
   140009b2f:	outs   dx,DWORD PTR ds:[rsi]
   140009b30:	ins    BYTE PTR es:[rdi],dx
   140009b31:	add    BYTE PTR [rbx],cl
   140009b33:	add    BYTE PTR [rsi+0x72],al
   140009b36:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140009b40:	xor    al,BYTE PTR [rax]
   140009b42:	rex.WRXB jo 0x140009baa
   140009b45:	outs   dx,BYTE PTR ds:[rsi]
   140009b46:	push   rsp
   140009b47:	push   0x64616572
   140009b4c:	push   rsp
   140009b4d:	outs   dx,DWORD PTR ds:[rsi]
   140009b4e:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009b52:	adc    BYTE PTR [rax],al
   140009b54:	rex.RXB
   140009b55:	gs je  0x140009b9b
   140009b58:	jne    0x140009bcc
   140009b5a:	jb     0x140009bc1
   140009b5c:	outs   dx,BYTE PTR ds:[rsi]
   140009b5d:	je     0x140009bb3
   140009b5f:	push   0x64616572
   140009b64:	add    BYTE PTR [rax],al
   140009b66:	rex.XB add BYTE PTR [r9+0x6d],cl
   140009b6a:	jo     0x140009bd1
   140009b6c:	jb     0x140009be1
   140009b6e:	outs   dx,DWORD PTR ds:[rsi]
   140009b6f:	outs   dx,BYTE PTR ds:[rsi]
   140009b70:	(bad)  
   140009b71:	je     0x140009bd8
   140009b73:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009b75:	addr32 gs rex.WRXB outs dx,BYTE PTR fs:[esi]
   140009b7b:	push   rbp
   140009b7c:	jae    0x140009be3
   140009b7e:	jb     0x140009b80
   140009b80:	push   rdi
   140009b81:	add    BYTE PTR [rdx+0x65],dl
   140009b84:	jbe    0x140009beb
   140009b86:	jb     0x140009bfc
   140009b88:	push   rsp
   140009b89:	outs   dx,DWORD PTR ds:[rsi]
   140009b8a:	push   rbx
   140009b8b:	gs ins BYTE PTR es:[rdi],dx
   140009b8d:	data16 add BYTE PTR [rax],al
   140009b90:	add    al,0x0
   140009b92:	rex.R
   140009b93:	gs (bad) 
   140009b95:	jne    0x140009bfe
   140009b97:	rex.X jb 0x140009bff
   140009b9a:	(bad)  
   140009b9b:	imul   eax,DWORD PTR [rax],0x0
   140009b9e:	(bad)  
   140009b9f:	add    BYTE PTR [rdx+0x61],dl
   140009ba2:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140009ba9:	jo     0x140009c1f
   140009bab:	imul   ebp,DWORD PTR [rdi+0x6e],0x12a0000
   140009bb2:	rex.WRX
   140009bb3:	fs jb  0x140009c09
   140009bb6:	gs jb  0x140009c2f
   140009bb9:	gs jb  0x140009bff
   140009bbc:	(bad)  
   140009bbd:	ins    BYTE PTR es:[rdi],dx
   140009bbe:	ins    BYTE PTR es:[rdi],dx
   140009bbf:	xor    al,BYTE PTR [rax]
   140009bc1:	add    BYTE PTR [rbx],ch
   140009bc3:	add    DWORD PTR [rsi+0x64],ecx
   140009bc6:	jb     0x140009c1b
   140009bc8:	gs jb  0x140009c41
   140009bcb:	gs jb  0x140009c11
   140009bce:	(bad)  
   140009bcf:	ins    BYTE PTR es:[rdi],dx
   140009bd0:	ins    BYTE PTR es:[rdi],dx
   140009bd1:	rex.B ins BYTE PTR es:[rdi],dx
   140009bd3:	ins    BYTE PTR es:[rdi],dx
   140009bd4:	add    BYTE PTR [rax],al
   140009bd6:	rex.WRXB
   140009bd7:	rex.WR
   140009bd8:	rex.RB
   140009bd9:	push   r13
   140009bdb:	push   rsp
   140009bdc:	xor    esi,DWORD PTR [rdx]
   140009bde:	cs fs ins BYTE PTR es:[rdi],dx
   140009be1:	ins    BYTE PTR es:[rdi],dx
   140009be2:	add    BYTE PTR [rax],al
   140009be4:	(bad)  
   140009be5:	jo     0x140009c50
   140009be7:	sub    eax,0x772d736d
   140009bec:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009bf3:	sub    eax,0x6f6d656d
   140009bf8:	jb     0x140009c73
   140009bfa:	sub    eax,0x312d316c
   140009bff:	sub    eax,0x6c642e32
   140009c04:	ins    BYTE PTR es:[rdi],dx
   140009c05:	add    BYTE PTR [rcx+0x70],ah
   140009c08:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0f7f
   140009c12:	outs   dx,DWORD PTR ds:[rsi]
   140009c13:	jb     0x140009c7a
   140009c15:	sub    eax,0x69727473
   140009c1a:	outs   dx,BYTE PTR ds:[rsi]
   140009c1b:	addr32 sub eax,0x312d316c
   140009c21:	sub    eax,0x6c642e30
   140009c26:	ins    BYTE PTR es:[rdi],dx
   140009c27:	add    BYTE PTR [rcx+0x70],ah
   140009c2a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0fa1
   140009c34:	outs   dx,DWORD PTR ds:[rsi]
   140009c35:	jb     0x140009c9c
   140009c37:	sub    eax,0x6c2d6f69
   140009c3c:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c973
   140009c42:	fs ins BYTE PTR es:[rdi],dx
   140009c44:	ins    BYTE PTR es:[rdi],dx
   140009c45:	add    BYTE PTR [rcx+0x70],ah
   140009c48:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0fbf
   140009c52:	outs   dx,DWORD PTR ds:[rsi]
   140009c53:	jb     0x140009cba
   140009c55:	sub    eax,0x75626564
   140009c5a:	addr32 sub eax,0x312d316c
   140009c60:	sub    eax,0x6c642e31
   140009c65:	ins    BYTE PTR es:[rdi],dx
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	sbb    eax,DWORD PTR [rax]
   140009c6a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009c6c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009c6e:	je     0x140009cd5
   140009c70:	jb     0x140009ce0
   140009c72:	gs je  0x140009cc5
   140009c75:	(bad)  
   140009c76:	jb     0x140009ceb
   140009c78:	gs rex.WB push r13
   140009c7b:	jb     0x140009ce6
   140009c7d:	add    BYTE PTR [rcx+0x6d656d04],dl
   140009c83:	movsxd ebp,DWORD PTR [rbp+0x70]
   140009c86:	add    BYTE PTR [rax],al
   140009c88:	xchg   edx,eax
   140009c89:	add    al,0x6d
   140009c8b:	gs ins DWORD PTR es:[rdi],dx
   140009c8d:	movsxd esi,DWORD PTR [rax+0x79]
   140009c90:	add    BYTE PTR [rax],al
   140009c92:	xchg   esi,eax
   140009c93:	add    al,0x6d
   140009c95:	gs ins DWORD PTR es:[rdi],dx
   140009c97:	jae    0x140009cfe
   140009c99:	je     0x140009c9b
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rsi+0x0],ch
   14000a022:	movsxd eax,DWORD PTR [rax]
   14000a024:	(bad)  
   14000a025:	add    BYTE PTR [rax+rax*1+0x72],ch
   14000a029:	add    BYTE PTR [rax+0x0],dh
   14000a02c:	movsxd eax,DWORD PTR [rax]
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	add    al,0x0
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	rex jbe 0x14000a03b
   14000a03b:	rex add DWORD PTR [rax],eax
	...
   14000a06a:	rex.RXB add BYTE PTR [r8],r8b
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rax+0x14000a6],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rax+0x1400079],dl
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rax+0x1400078],dl
   14000a085:	add    BYTE PTR [rax],al
   14000a087:	add    BYTE PTR [rax+0x14000a0],cl
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	xchg   BYTE PTR [rax],dl
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	test   al,0x86
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	nop
   14000b00d:	adc    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rbp-0x47ffffef],ah
   14000b015:	xchg   BYTE PTR [rax],al
   14000b017:	add    ah,ah
   14000b019:	adc    DWORD PTR [rax],eax
   14000b01b:	add    BYTE PTR [rbx],cl
   14000b01d:	adc    al,BYTE PTR [rax]
   14000b01f:	add    ah,al
   14000b021:	xchg   BYTE PTR [rax],al
   14000b023:	add    BYTE PTR [rdx+rdx*1],dl
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	in     eax,0x12
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	int3   
   14000b02d:	xchg   BYTE PTR [rax],al
   14000b02f:	add    ah,ch
   14000b031:	adc    al,BYTE PTR [rax]
   14000b033:	add    BYTE PTR [rdi-0x23ffffed],ch
   14000b039:	xchg   BYTE PTR [rax],al
   14000b03b:	add    BYTE PTR [rax+0xf000013],bh
   14000b041:	adc    eax,0x86f00000
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	sbb    BYTE PTR [rip+0x15360000],dl        # 0x15536b04e
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	or     BYTE PTR [rdi+0x153c0000],al
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	jl     0x14000b06f
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	adc    BYTE PTR [rdi+0x15840000],al
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	(bad)  
   14000b065:	adc    eax,0x87100000
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	rcl    BYTE PTR [rip+0x164f0000],1        # 0x1564fb072
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	sbb    BYTE PTR [rdi+0x16600000],al
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	mov    dl,0x16
   14000b07e:	add    BYTE PTR [rax],al
   14000b080:	sub    BYTE PTR [rdi+0x16c00000],al
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	cli    
   14000b089:	(bad)  
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	xor    BYTE PTR [rdi+0x17000000],al
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	cmp    eax,0xc4000017
   14000b099:	xchg   BYTE PTR [rax],al
   14000b09b:	add    BYTE PTR [rdi+rdx*1+0x0],al
   14000b09f:	add    BYTE PTR [rbp+0x18],cl
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	cmp    BYTE PTR [rdi+0x18600000],al
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	adc    DWORD PTR [rdx],ebx
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	push   rsp
   14000b0b1:	xchg   DWORD PTR [rax],eax
   14000b0b3:	add    BYTE PTR [rax],ah
   14000b0b5:	sbb    al,BYTE PTR [rax]
   14000b0b7:	add    BYTE PTR [rdx],ch
   14000b0b9:	and    eax,DWORD PTR [rax]
   14000b0bb:	add    BYTE PTR [rax-0x79],ah
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	xor    BYTE PTR [rbx],ah
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	repz and al,0x0
   14000b0c7:	add    BYTE PTR [rdi+rax*4+0x24fc0000],al
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	enter  0x25,0x0
   14000b0d4:	movabs al,ds:0xa9000025d0000087
   14000b0dd:	(bad)  
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	mov    ah,0x87
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	mov    al,0x27
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	rex.RX sub BYTE PTR [rax],r8b
   14000b0eb:	add    BYTE PTR [rax],bl
   14000b0ed:	xchg   DWORD PTR [rax],eax
   14000b0ef:	add    BYTE PTR [rax+0x28],dh
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	fild   QWORD PTR [rax]
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	sbb    BYTE PTR [rdi+0x28f00000],al
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	and    BYTE PTR [rcx],ch
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	xor    BYTE PTR [rdi+0x29280000],al
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	fsubr  QWORD PTR [rcx]
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	rol    BYTE PTR [rdi+0x2a2c0000],1
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	lods   eax,DWORD PTR ds:[rsi]
   14000b119:	sub    al,BYTE PTR [rax]
   14000b11b:	add    BYTE PTR [rax],ch
   14000b11d:	xchg   DWORD PTR [rax],eax
   14000b11f:	add    BYTE PTR [rdx+rbp*1+0x2c270000],dh
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	in     al,0x87
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	xor    BYTE PTR [rax+rax*1],ch
   14000b12f:	add    BYTE PTR [rdi],cl
   14000b131:	sub    eax,0x87f80000
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	and    BYTE PTR [rip+0x2d5e0000],ch        # 0x16d5eb13e
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	mov    eax,0x64000086
   14000b145:	sub    eax,0x2e510000
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	sbb    BYTE PTR [rdi+0x2e600000],al
   14000b152:	add    BYTE PTR [rax],al
   14000b154:	in     eax,dx
   14000b155:	xor    DWORD PTR [rax],eax
   14000b157:	add    BYTE PTR [rax+rcx*4],cl
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    BYTE PTR [rdx],dh
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	leave  
   14000b161:	xor    al,BYTE PTR [rax]
   14000b163:	add    BYTE PTR [rax+rcx*4],ah
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	shl    BYTE PTR [rdx],1
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	std    
   14000b16d:	xor    al,0x0
   14000b16f:	add    BYTE PTR [rax],bh
   14000b171:	mov    BYTE PTR [rax],al
   14000b173:	add    BYTE PTR [rax],dl
   14000b175:	xor    eax,0x35c70000
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	push   rax
   14000b17d:	mov    BYTE PTR [rax],al
   14000b17f:	add    al,dl
   14000b181:	xor    eax,0x36160000
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	mov    eax,0x20000086
   14000b18d:	add    BYTE PTR ss:[rax],al
   14000b190:	shl    BYTE PTR [rdi],0x0
   14000b193:	add    BYTE PTR [rax-0x78],ch
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	enter  0x37,0x0
   14000b19c:	sub    bh,BYTE PTR [rdx]
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	mov    BYTE PTR [rax+0x3a300000],cl
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	add    edi,DWORD PTR [rbx]
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	sbb    BYTE PTR [rdi+0x3b300000],al
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	lahf   
   14000b1b5:	cmp    eax,DWORD PTR [rax]
   14000b1b7:	add    BYTE PTR [rax],bl
   14000b1b9:	xchg   DWORD PTR [rax],eax
   14000b1bb:	add    BYTE PTR [rax-0x1fffffc5],dh
   14000b1c1:	cmp    eax,DWORD PTR [rax]
   14000b1c3:	add    BYTE PTR [rax],dh
   14000b1c5:	xchg   DWORD PTR [rax],eax
   14000b1c7:	add    BYTE PTR [rax],ah
   14000b1c9:	cmp    al,0x0
   14000b1cb:	add    BYTE PTR [rbp+0x3c],dh
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	xor    BYTE PTR [rdi+0x3c7c0000],al
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	mov    edx,0xa000003d
   14000b1dd:	mov    BYTE PTR [rax],al
   14000b1df:	add    al,al
   14000b1e1:	cmp    eax,0x3e140000
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	mov    esp,0x1c000088
   14000b1ed:	add    BYTE PTR ds:[rax],al
   14000b1f0:	sar    BYTE PTR [rsi],1
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	sbb    BYTE PTR [rdi+0x3ee00000],al
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	(bad)  
   14000b1fd:	(bad)  
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	mov    eax,0x24000086
   14000b205:	(bad)  
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	fdivr  DWORD PTR [rdi]
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	xor    BYTE PTR [rdi+0x3fe00000],al
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	rex.X add BYTE PTR cs:[rax],al
   14000b218:	(bad)  
   14000b219:	mov    BYTE PTR [rax],al
   14000b21b:	add    BYTE PTR [rax+0x42],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	int3   
   14000b221:	add    BYTE PTR [r8],r8b
   14000b224:	loopne 0x14000b1ae
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	loopne 0x14000b26f
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	leave  
   14000b22d:	rex.RXB add BYTE PTR [r8],r8b
   14000b230:	cld    
   14000b231:	mov    BYTE PTR [rax],al
   14000b233:	add    al,dl
   14000b235:	rex.RXB add BYTE PTR [r8],r8b
   14000b238:	(bad)  
   14000b239:	rex.WB add BYTE PTR [r8],al
   14000b23c:	and    BYTE PTR [rcx+0x49400000],cl
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	xchg   edx,eax
   14000b245:	rex.WB add BYTE PTR [r8],al
   14000b248:	cmp    al,0x89
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	movabs al,ds:0x30000049ee000049
   14000b255:	xchg   DWORD PTR [rax],eax
   14000b257:	add    BYTE PTR [rax],al
   14000b259:	rex.WX add BYTE PTR [rax],al
   14000b25c:	rex.W
   14000b25d:	rex.WX add BYTE PTR [rax],al
   14000b260:	xor    BYTE PTR [rdi+0x4a500000],al
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	or     DWORD PTR [rdx+0x0],0x0
   14000b26c:	or     BYTE PTR [rdi+0x4a900000],al
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	rex.WXB add BYTE PTR es:[r8],al
   14000b278:	sbb    BYTE PTR [rdi+0x4b300000],al
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	lahf   
   14000b281:	rex.WXB add BYTE PTR [r8],al
   14000b284:	sbb    BYTE PTR [rdi+0x4ba80000],al
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	xor    BYTE PTR [rax+rax*1+0x0],cl
   14000b290:	and    al,0x88
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	rex
   14000b295:	rex.WR add BYTE PTR [rax],r8b
   14000b298:	mov    DWORD PTR [rax+rax*1+0x0],ecx
   14000b29c:	cmp    al,0x89
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	nop
   14000b2a1:	rex.WR add BYTE PTR [rax],r8b
   14000b2a4:	mov    al,0x4c
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	(bad)  
   14000b2a9:	xchg   BYTE PTR [rax],al
   14000b2ab:	add    al,al
   14000b2ad:	rex.WR add BYTE PTR [rax],r8b
   14000b2b0:	loopne 0x14000b2fe
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	(bad)  
   14000b2b5:	xchg   BYTE PTR [rax],al
   14000b2b7:	add    al,ch
   14000b2b9:	rex.WR add BYTE PTR [rax],r8b
   14000b2bc:	adc    cl,BYTE PTR [rbp+0x0]
   14000b2bf:	add    BYTE PTR [rax+rcx*4+0x4d180000],bh
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	fimul  WORD PTR [rbp+0x0]
   14000b2cb:	add    BYTE PTR [rcx+rcx*4+0x0],al
   14000b2cf:	add    ah,ah
   14000b2d1:	rex.WRB add BYTE PTR [r8],r8b
   14000b2d4:	pop    rax
   14000b2d5:	rex.WRX add BYTE PTR [rax],r8b
   14000b2d8:	(bad)  
   14000b2d9:	mov    DWORD PTR [rax],eax
   14000b2db:	add    BYTE PTR [rax+0x4e],ah
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	(bad)  
   14000b2e1:	rex.WRXB add BYTE PTR [r8],r8b
   14000b2e4:	jo     0x14000b26f
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	or     al,0x4f
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	jmp    0xc400b340
   14000b2f1:	mov    DWORD PTR [rax],eax
   14000b2f3:	add    al,dh
   14000b2f5:	rex.WRXB add BYTE PTR [r8],r8b
   14000b2f8:	push   rax
   14000b2f9:	push   rax
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	pushf  
   14000b2fd:	mov    DWORD PTR [rax],eax
   14000b2ff:	add    BYTE PTR [rax+0x50],bl
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	movabs ds:0xac00008730000050,eax
   14000b30d:	push   rax
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	or     dl,BYTE PTR [rcx+0x0]
   14000b313:	add    BYTE PTR [rax],dh
   14000b315:	xchg   DWORD PTR [rax],eax
   14000b317:	add    BYTE PTR [rax],dl
   14000b319:	push   rcx
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	gs push rcx
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	xor    BYTE PTR [rdi+0x516c0000],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	mov    al,0x51
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	mov    eax,0xb8000086
   14000b331:	push   rcx
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	sbb    edx,DWORD PTR [rdx+0x0]
   14000b337:	add    BYTE PTR [rax],dh
   14000b339:	xchg   DWORD PTR [rax],eax
   14000b33b:	add    BYTE PTR [rdx+rdx*2],ah
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	mov    cl,0x52
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b345:	mov    DWORD PTR [rax],eax
   14000b347:	add    ah,al
   14000b349:	push   rdx
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	movabs ds:0xa8000089d0000053,al
   14000b355:	push   rbx
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	adc    BYTE PTR [rax+rax*1+0x0],0xe0
   14000b35d:	mov    DWORD PTR [rax],eax
   14000b35f:	add    BYTE PTR [rax+0x67000054],cl
   14000b365:	push   rbp
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	ror    BYTE PTR [rcx+0x55700000],1
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	mov    ss,WORD PTR [rbp+0x0]
   14000b373:	add    ah,al
   14000b375:	xchg   BYTE PTR [rax],al
   14000b377:	add    BYTE PTR [rax-0x3fffffab],ah
   14000b37d:	push   rbp
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	(bad)  
   14000b381:	xchg   BYTE PTR [rax],al
   14000b383:	add    al,dl
   14000b385:	push   rbp
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	lahf   
   14000b389:	push   rsi
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	(bad)  
   14000b38d:	xchg   BYTE PTR [rax],al
   14000b38f:	add    BYTE PTR [rax-0x6ffffaa],dh
   14000b395:	push   rsi
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	or     BYTE PTR [rdi+0x57000000],al
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	rcr    BYTE PTR [rax+0x0],cl
   14000b3a3:	add    al,dh
   14000b3a5:	mov    DWORD PTR [rax],eax
   14000b3a7:	add    al,ah
   14000b3a9:	pop    rax
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	repnz pop rax
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	(bad)  
   14000b3b1:	xchg   BYTE PTR [rax],al
   14000b3b3:	add    BYTE PTR [rax],dl
   14000b3b5:	pop    rcx
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	cs pop rcx
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	and    BYTE PTR [rdx+0x59500000],cl
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	mov    DWORD PTR [rcx+0x0],ebx
   14000b3c7:	add    ah,al
   14000b3c9:	xchg   BYTE PTR [rax],al
   14000b3cb:	add    BYTE PTR [rax-0x57ffffa7],dl
   14000b3d1:	pop    rcx
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	(bad)  
   14000b3d5:	xchg   BYTE PTR [rax],al
   14000b3d7:	add    BYTE PTR [rcx+rbx*2+0x5a100000],bh
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	and    al,0x8a
   14000b3e2:	add    BYTE PTR [rax],al
   14000b3e4:	sbb    BYTE PTR [rdx+0x0],bl
   14000b3e7:	add    BYTE PTR [rbp+0x5a],bl
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	xor    BYTE PTR [rdi+0x5ac00000],al
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	or     eax,0x4400005b
   14000b3f9:	mov    al,BYTE PTR [rax]
   14000b3fb:	add    BYTE PTR [rbx+rbx*2+0x0],dl
   14000b3ff:	add    BYTE PTR [rsp+rbx*2],ah
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	push   0x6c00008a
   14000b409:	pop    rsp
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	movabs al,ds:0xb00000873000005c
   14000b415:	pop    rsp
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	and    DWORD PTR [rsi+0x0],ebx
   14000b41b:	add    BYTE PTR [rdx+rcx*4+0x0],bh
   14000b41f:	add    BYTE PTR [rax],ch
   14000b421:	pop    rsi
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	(bad)  
   14000b425:	pop    rdi
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	je     0x14000b3b4
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	jl     0x14000b48d
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	cdq    
   14000b431:	pop    rdi
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	(bad)  
   14000b435:	xchg   BYTE PTR [rax],al
   14000b437:	add    BYTE PTR [rax+0x300005f],ah
   14000b43d:	(bad)  
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	xor    BYTE PTR [rdi+0x600c0000],al
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	movabs ds:0xf000008984000060,al
   14000b451:	(bad)  
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	repnz (bad) 
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	mov    BYTE PTR [rdx+0x61100000],cl
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	pop    rbp
   14000b461:	(bad)  
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	nop
   14000b465:	mov    al,BYTE PTR [rax]
   14000b467:	add    BYTE PTR [rsi+0x61],ah
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	stos   BYTE PTR es:[rdi],al
   14000b46d:	(bad)  
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	enter  0x89,0x0
   14000b474:	mov    al,0x61
   14000b476:	add    BYTE PTR [rax],al
   14000b478:	(bad)  
   14000b479:	(bad)  
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	enter  0x89,0x0
   14000b480:	loopne 0x14000b4e3
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	add    BYTE PTR [rdx+0x0],ah
   14000b487:	add    al,cl
   14000b489:	mov    DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	adc    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	and    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x18],al
   14000c01c:	cmp    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax+0x0],al
	...
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax+0x28000000],dl
   14000c081:	ret    
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	fadd   QWORD PTR [rbx]
	...
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	movabs al,ds:0x2840000c0
   14000c099:	add    BYTE PTR [rax],al
   14000c09b:	add    BYTE PTR [rax],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000c0a2:	js     0x14000c111
   14000c0a4:	ins    BYTE PTR es:[rdi],dx
   14000c0a5:	and    BYTE PTR [rsi+0x65],dh
   14000c0a8:	jb     0x14000c11d
   14000c0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c0b1:	xor    BYTE PTR [rdx],ah
   14000c0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000c0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c0c0:	rex.RX sub eax,0x73202238
   14000c0c6:	je     0x14000c129
   14000c0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c0c9:	fs (bad) 
   14000c0cb:	ins    BYTE PTR es:[rdi],dx
   14000c0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000c0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ce:	gs cmp eax,0x73657922
   14000c0d4:	and    bh,BYTE PTR [rdi]
   14000c0d6:	ds or  eax,0x2d213c0a
   14000c0dc:	sub    eax,0x706f4320
   14000c0e1:	jns    0x14000c155
   14000c0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c0ea:	sub    DWORD PTR [rax],esp
   14000c0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c0f4:	je     0x14000c116
   14000c0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c0f8:	jb     0x14000c16a
   14000c0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c0fb:	jb     0x14000c15e
   14000c0fd:	je     0x14000c168
   14000c0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000c100:	outs   dx,BYTE PTR ds:[rsi]
   14000c101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff34
   14000c107:	cmp    al,0x61
   14000c109:	jae    0x14000c17e
   14000c10b:	gs ins DWORD PTR es:[rdi],dx
   14000c10d:	(bad)  
   14000c10e:	ins    BYTE PTR es:[rdi],dx
   14000c10f:	jns    0x14000c131
   14000c111:	js     0x14000c180
   14000c113:	ins    BYTE PTR es:[rdi],dx
   14000c114:	outs   dx,BYTE PTR ds:[rsi]
   14000c115:	jae    0x14000c154
   14000c117:	and    dh,BYTE PTR [rbp+0x72]
   14000c11a:	outs   dx,BYTE PTR ds:[rsi]
   14000c11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c11e:	push   0x73616d65
   14000c123:	sub    eax,0x7263696d
   14000c128:	outs   dx,DWORD PTR ds:[rsi]
   14000c129:	jae    0x14000c19a
   14000c12b:	data16 je 0x14000c15b
   14000c12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c134:	ins    DWORD PTR es:[rdi],dx
   14000c135:	cs jbe 0x14000c169
   14000c138:	and    ah,BYTE PTR [rax]
   14000c13a:	ins    DWORD PTR es:[rdi],dx
   14000c13b:	(bad)  
   14000c13c:	outs   dx,BYTE PTR ds:[rsi]
   14000c13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c144:	jb     0x14000c1b9
   14000c146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c14d:	xor    BYTE PTR [rdx],ah
   14000c14f:	ds or  eax,0x73613c0a
   14000c155:	jae    0x14000c1bc
   14000c157:	ins    DWORD PTR es:[rdi],dx
   14000c158:	(bad)  
   14000c159:	ins    BYTE PTR es:[rdi],dx
   14000c15a:	jns    0x14000c1a5
   14000c15c:	fs outs dx,BYTE PTR gs:[rsi]
   14000c15f:	je     0x14000c1ca
   14000c161:	je     0x14000c1dc
   14000c163:	or     eax,0x2020200a
   14000c168:	and    BYTE PTR [rsi+0x65],dh
   14000c16b:	jb     0x14000c1e0
   14000c16d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c174:	xor    DWORD PTR [rsi],ebp
   14000c176:	xor    BYTE PTR [rsi],ch
   14000c178:	xor    BYTE PTR [rdx],ah
   14000c17a:	or     eax,0x2020200a
   14000c17f:	and    BYTE PTR [rax+0x72],dh
   14000c182:	outs   dx,DWORD PTR ds:[rsi]
   14000c183:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c186:	jae    0x14000c1f7
   14000c188:	jb     0x14000c1cb
   14000c18a:	jb     0x14000c1ef
   14000c18c:	push   0x63657469
   14000c191:	je     0x14000c208
   14000c193:	jb     0x14000c1fa
   14000c195:	cmp    eax,0x646d6122
   14000c19a:	ss xor al,0x22
   14000c19d:	or     eax,0x2020200a
   14000c1a2:	and    BYTE PTR [rsi+0x61],ch
   14000c1a5:	ins    DWORD PTR es:[rdi],dx
   14000c1a6:	gs cmp eax,0x74794222
   14000c1ac:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000c1af:	fs gs rex.RXB
   14000c1b2:	outs   dx,BYTE PTR gs:[rsi]
   14000c1b4:	gs jb  0x14000c218
   14000c1b7:	je     0x14000c228
   14000c1b9:	jb     0x14000c1dd
   14000c1bb:	or     eax,0x2020200a
   14000c1c0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c1c4:	gs cmp eax,0x6e697722
   14000c1ca:	xor    esi,DWORD PTR [rdx]
   14000c1cc:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ef0dc
   14000c1d2:	or     bh,BYTE PTR [rsp+riz*2]
   14000c1d5:	gs jae 0x14000c23b
   14000c1d8:	jb     0x14000c243
   14000c1da:	jo     0x14000c250
   14000c1dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x7479423e
   14000c1e3:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   14000c1e7:	and    BYTE PTR gs:[rdi+0x65],al
   14000c1eb:	outs   dx,BYTE PTR ds:[rsi]
   14000c1ec:	gs jb  0x14000c250
   14000c1ef:	je     0x14000c260
   14000c1f1:	jb     0x14000c22f
   14000c1f3:	(bad)  
   14000c1f4:	fs gs jae 0x14000c25b
   14000c1f8:	jb     0x14000c263
   14000c1fa:	jo     0x14000c270
   14000c1fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000c203:	je     0x14000c277
   14000c205:	jne    0x14000c27a
   14000c207:	je     0x14000c252
   14000c209:	outs   dx,BYTE PTR ds:[rsi]
   14000c20a:	outs   dx,WORD PTR ds:[rsi]
   14000c20c:	and    BYTE PTR [rax+0x6d],bh
   14000c20f:	ins    BYTE PTR es:[rdi],dx
   14000c210:	outs   dx,BYTE PTR ds:[rsi]
   14000c211:	jae    0x14000c250
   14000c213:	and    dh,BYTE PTR [rbp+0x72]
   14000c216:	outs   dx,BYTE PTR ds:[rsi]
   14000c217:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c21a:	push   0x73616d65
   14000c21f:	sub    eax,0x7263696d
   14000c224:	outs   dx,DWORD PTR ds:[rsi]
   14000c225:	jae    0x14000c296
   14000c227:	data16 je 0x14000c257
   14000c22a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c22d:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c230:	ins    DWORD PTR es:[rdi],dx
   14000c231:	cs jbe 0x14000c267
   14000c234:	and    bh,BYTE PTR [rsi]
   14000c236:	or     eax,0x2020200a
   14000c23b:	and    BYTE PTR [rbx+rsi*2],bh
   14000c23e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c242:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c24a:	and    BYTE PTR [rax],ah
   14000c24c:	and    BYTE PTR [rax],ah
   14000c24e:	and    BYTE PTR [rax],ah
   14000c250:	and    BYTE PTR [rdx+rsi*2],bh
   14000c253:	gs jno 0x14000c2cb
   14000c256:	gs jae 0x14000c2cd
   14000c259:	gs fs push rax
   14000c25c:	jb     0x14000c2c7
   14000c25e:	jbe    0x14000c2c9
   14000c260:	ins    BYTE PTR es:[rdi],dx
   14000c261:	gs addr32 gs jae 0x14000c2a4
   14000c266:	or     eax,0x2020200a
   14000c26b:	and    BYTE PTR [rax],ah
   14000c26d:	and    BYTE PTR [rax],ah
   14000c26f:	and    BYTE PTR [rax],ah
   14000c271:	and    BYTE PTR [rax],ah
   14000c273:	and    BYTE PTR [rax],ah
   14000c275:	cmp    al,0x72
   14000c277:	gs jno 0x14000c2ef
   14000c27a:	gs jae 0x14000c2f1
   14000c27d:	gs fs rex.RB js 0x14000c2e7
   14000c282:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c285:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c28c:	ins    BYTE PTR es:[rdi],dx
   14000c28d:	or     eax,0x2020200a
   14000c292:	and    BYTE PTR [rax],ah
   14000c294:	and    BYTE PTR [rax],ah
   14000c296:	and    BYTE PTR [rax],ah
   14000c298:	and    BYTE PTR [rax],ah
   14000c29a:	and    BYTE PTR [rax],ah
   14000c29c:	and    BYTE PTR [rax],ah
   14000c29e:	and    BYTE PTR [rax],ah
   14000c2a0:	ins    BYTE PTR es:[rdi],dx
   14000c2a1:	gs jbe 0x14000c309
   14000c2a4:	ins    BYTE PTR es:[rdi],dx
   14000c2a5:	cmp    eax,0x49736122
   14000c2aa:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ab:	jbe    0x14000c31c
   14000c2ad:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c2b1:	or     eax,0x2020200a
   14000c2b6:	and    BYTE PTR [rax],ah
   14000c2b8:	and    BYTE PTR [rax],ah
   14000c2ba:	and    BYTE PTR [rax],ah
   14000c2bc:	and    BYTE PTR [rax],ah
   14000c2be:	and    BYTE PTR [rax],ah
   14000c2c0:	and    BYTE PTR [rax],ah
   14000c2c2:	and    BYTE PTR [rax],ah
   14000c2c4:	jne    0x14000c32f
   14000c2c6:	movsxd esp,DWORD PTR [r11+0x65]
   14000c2ca:	jae    0x14000c33f
   14000c2cc:	cmp    eax,0x6c616622
   14000c2d1:	jae    0x14000c338
   14000c2d3:	and    ch,BYTE PTR [rdi]
   14000c2d5:	ds or  eax,0x2020200a
   14000c2db:	and    BYTE PTR [rax],ah
   14000c2dd:	and    BYTE PTR [rax],ah
   14000c2df:	and    BYTE PTR [rdi+rbp*1],bh
   14000c2e2:	jb     0x14000c349
   14000c2e4:	jno    0x14000c35b
   14000c2e6:	gs jae 0x14000c35d
   14000c2e9:	gs fs push rax
   14000c2ec:	jb     0x14000c357
   14000c2ee:	jbe    0x14000c359
   14000c2f0:	ins    BYTE PTR es:[rdi],dx
   14000c2f1:	gs addr32 gs jae 0x14000c334
   14000c2f6:	or     eax,0x2020200a
   14000c2fb:	and    BYTE PTR [rdi+rbp*1],bh
   14000c2fe:	jae    0x14000c365
   14000c300:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c303:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c30b:	je     0x14000c37f
   14000c30d:	jne    0x14000c382
   14000c30f:	je     0x14000c35a
   14000c311:	outs   dx,BYTE PTR ds:[rsi]
   14000c312:	outs   dx,WORD PTR ds:[rsi]
   14000c314:	ds or  eax,0x612f3c0a
   14000c31a:	jae    0x14000c38f
   14000c31c:	gs ins DWORD PTR es:[rdi],dx
   14000c31e:	(bad)  
   14000c31f:	ins    BYTE PTR es:[rdi],dx
   14000c320:	jns    0x14000c360
   14000c322:	or     eax,0xa
   14000c327:	add    ah,bl
   14000c329:	add    esi,DWORD PTR [rax+rax*1]
   14000c32c:	add    BYTE PTR [rax],al
   14000c32e:	push   rsi
   14000c32f:	add    BYTE PTR [rbx+0x0],dl
   14000c332:	pop    rdi
   14000c333:	add    BYTE PTR [rsi+0x0],dl
   14000c336:	add    BYTE PTR [r10+0x0],r10b
   14000c33a:	push   rbx
   14000c33b:	add    BYTE PTR [rcx+0x0],cl
   14000c33e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c342:	pop    rdi
   14000c343:	add    BYTE PTR [rcx+0x0],cl
   14000c346:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c34a:	rex.WRXB add BYTE PTR [r8],r8b
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c355:	add    BYTE PTR [rcx],al
   14000c357:	add    BYTE PTR [rax],al
   14000c359:	add    BYTE PTR [rdx],cl
   14000c35b:	add    BYTE PTR [rax],al
   14000c35d:	add    BYTE PTR [rax],bpl
   14000c360:	add    BYTE PTR [rax],al
   14000c362:	or     al,BYTE PTR [rax]
   14000c364:	add    BYTE PTR [rax+0x0],al
   14000c367:	sub    BYTE PTR [rdi],bh
   14000c369:	add    BYTE PTR [rax],al
   14000c36b:	add    BYTE PTR [rax],al
   14000c36d:	add    BYTE PTR [rax],al
   14000c36f:	add    BYTE PTR [rax+rax*1],al
   14000c372:	add    al,0x0
   14000c374:	add    al,BYTE PTR [rax]
	...
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	cmp    al,BYTE PTR [rbx]
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	add    DWORD PTR [rax],eax
   14000c38a:	push   rbx
   14000c38b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c38f:	add    BYTE PTR [rcx+0x0],ch
   14000c392:	outs   dx,BYTE PTR ds:[rsi]
   14000c393:	add    BYTE PTR [rdi+0x0],ah
   14000c396:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c39a:	ins    BYTE PTR es:[rdi],dx
   14000c39b:	add    BYTE PTR [rbp+0x0],ah
   14000c39e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c3a2:	data16 add BYTE PTR [rdi+0x0],ch
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	(bad)  
   14000c3a9:	add    eax,DWORD PTR [rax]
   14000c3ab:	add    BYTE PTR [rcx],al
   14000c3ad:	add    BYTE PTR [rax],dh
   14000c3af:	add    BYTE PTR [rax+rax*1],dh
   14000c3b2:	xor    BYTE PTR [rax],al
   14000c3b4:	cmp    DWORD PTR [rax],eax
   14000c3b6:	xor    BYTE PTR [rax],al
   14000c3b8:	xor    al,0x0
   14000c3ba:	rex.X add BYTE PTR [rax],sil
   14000c3bd:	add    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c3c3:	add    BYTE PTR [rcx],al
   14000c3c5:	add    BYTE PTR [rbx+0x0],al
   14000c3c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c3c9:	add    BYTE PTR [rbp+0x0],ch
   14000c3cc:	jo     0x14000c3ce
   14000c3ce:	(bad)  
   14000c3cf:	add    BYTE PTR [rsi+0x0],ch
   14000c3d2:	jns    0x14000c3d4
   14000c3d4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c3d8:	ins    DWORD PTR es:[rdi],dx
   14000c3d9:	add    BYTE PTR [rbp+0x0],ah
   14000c3dc:	add    BYTE PTR [rax],al
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c3e4:	movsxd eax,DWORD PTR [rax]
   14000c3e6:	jb     0x14000c3e8
   14000c3e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c3e9:	add    BYTE PTR [rbx+0x0],dh
   14000c3ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ed:	add    BYTE PTR [rsi+0x0],ah
   14000c3f0:	je     0x14000c3f2
   14000c3f2:	and    BYTE PTR [rax],al
   14000c3f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c3f8:	jb     0x14000c3fa
   14000c3fa:	jo     0x14000c3fc
   14000c3fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c3fd:	add    BYTE PTR [rdx+0x0],dh
   14000c400:	(bad)  
   14000c401:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c405:	add    BYTE PTR [rdi+0x0],ch
   14000c408:	outs   dx,BYTE PTR ds:[rsi]
   14000c409:	add    BYTE PTR [rax],al
   14000c40b:	add    BYTE PTR [rsi+0x0],dh
   14000c40e:	(bad)  
   14000c40f:	add    BYTE PTR [rcx],al
   14000c411:	add    BYTE PTR [rsi+0x0],al
   14000c414:	imul   eax,DWORD PTR [rax],0x65006c
   14000c41a:	add    BYTE PTR [rbp+0x0],r12b
   14000c41e:	jae    0x14000c420
   14000c420:	movsxd eax,DWORD PTR [rax]
   14000c422:	jb     0x14000c424
   14000c424:	imul   eax,DWORD PTR [rax],0x740070
   14000c42a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c430:	add    BYTE PTR [rax],al
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [r8+0x0],sil
   14000c438:	jo     0x14000c43a
   14000c43a:	pop    rax
   14000c43b:	add    BYTE PTR [rax],ah
   14000c43d:	add    BYTE PTR [rax+rax*1+0x65],al
   14000c441:	add    BYTE PTR [rax+0x0],dh
   14000c444:	ins    BYTE PTR es:[rdi],dx
   14000c445:	add    BYTE PTR [rdi+0x0],ch
   14000c448:	jns    0x14000c44a
   14000c44a:	ins    DWORD PTR es:[rdi],dx
   14000c44b:	add    BYTE PTR [rbp+0x0],ah
   14000c44e:	outs   dx,BYTE PTR ds:[rsi]
   14000c44f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000c453:	add    BYTE PTR [rdx+0x0],al
   14000c456:	jns    0x14000c458
   14000c458:	je     0x14000c45a
   14000c45a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c45e:	outs   dx,DWORD PTR ds:[rsi]
   14000c45f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c463:	add    BYTE PTR [rax],ah
   14000c465:	add    BYTE PTR [rdi+0x0],al
   14000c468:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c46c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c470:	(bad)  
   14000c471:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c475:	add    BYTE PTR [rdx+0x0],dh
   14000c478:	and    BYTE PTR [rax],al
   14000c47a:	add    BYTE PTR [r8+0x0],r11b
   14000c47e:	add    BYTE PTR [r8],r8b
   14000c481:	add    BYTE PTR [rax],al
   14000c483:	add    BYTE PTR [rsi+0x0],ah
   14000c486:	and    eax,DWORD PTR [rax]
   14000c488:	add    DWORD PTR [rax],eax
   14000c48a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c48e:	ins    BYTE PTR es:[rdi],dx
   14000c48f:	add    BYTE PTR [rbp+0x0],ah
   14000c492:	push   rsi
   14000c493:	add    BYTE PTR [rbp+0x0],ah
   14000c496:	jb     0x14000c498
   14000c498:	jae    0x14000c49a
   14000c49a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c4a0:	add    BYTE PTR [rax],al
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	xor    DWORD PTR [rax],eax
   14000c4a6:	xor    BYTE PTR [rax],al
   14000c4a8:	add    BYTE PTR cs:[rax],dh
   14000c4ab:	add    BYTE PTR [rsi],ch
   14000c4ad:	add    BYTE PTR [rcx],dh
   14000c4af:	add    BYTE PTR [rax],dh
   14000c4b1:	add    BYTE PTR [rdx],dh
   14000c4b3:	add    BYTE PTR [rax+rax*1],dh
   14000c4b6:	xor    BYTE PTR [rax],al
   14000c4b8:	add    BYTE PTR cs:[rcx],dh
   14000c4bb:	add    BYTE PTR [rsi],dh
   14000c4bd:	add    BYTE PTR [rbx],dh
   14000c4bf:	add    BYTE PTR [rax],bh
   14000c4c1:	add    BYTE PTR [rax+rax*1],dh
   14000c4c4:	and    BYTE PTR [rax],al
   14000c4c6:	sub    BYTE PTR [rax],al
   14000c4c8:	je     0x14000c4ca
   14000c4ca:	push   0x2e003100
   14000c4cf:	add    BYTE PTR [rcx],dh
   14000c4d1:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f4d7
   14000c4d7:	add    BYTE PTR [rax],dh
   14000c4d9:	add    BYTE PTR [rcx],bh
   14000c4db:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f5e1
   14000c4e1:	add    BYTE PTR [rax],dh
   14000c4e3:	add    BYTE PTR [rax],dh
   14000c4e5:	add    BYTE PTR [rcx],ch
   14000c4e7:	add    BYTE PTR [rax],al
   14000c4e9:	add    BYTE PTR [rax],al
   14000c4eb:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c4ef:	add    BYTE PTR [rcx],al
   14000c4f1:	add    BYTE PTR [rcx+0x0],cl
   14000c4f4:	outs   dx,BYTE PTR ds:[rsi]
   14000c4f5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c4f9:	add    BYTE PTR [rdx+0x0],dh
   14000c4fc:	outs   dx,BYTE PTR ds:[rsi]
   14000c4fd:	add    BYTE PTR [rcx+0x0],ah
   14000c500:	ins    BYTE PTR es:[rdi],dx
   14000c501:	add    BYTE PTR [rsi+0x0],cl
   14000c504:	(bad)  
   14000c505:	add    BYTE PTR [rbp+0x0],ch
   14000c508:	add    BYTE PTR gs:[rax],al
   14000c50b:	add    BYTE PTR [rdx+0x0],al
   14000c50e:	jns    0x14000c510
   14000c510:	je     0x14000c512
   14000c512:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c516:	outs   dx,DWORD PTR ds:[rsi]
   14000c517:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c51b:	add    BYTE PTR [rdi+0x0],al
   14000c51e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c522:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c526:	(bad)  
   14000c527:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c52b:	add    BYTE PTR [rdx+0x0],dh
   14000c52e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c532:	js     0x14000c534
   14000c534:	add    BYTE PTR gs:[rax],al
   14000c537:	add    BYTE PTR [rax+0x1002e00],al
   14000c53d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c541:	add    BYTE PTR [rdi+0x0],ah
   14000c544:	(bad)  
   14000c545:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c549:	add    BYTE PTR [rdi+0x0],ch
   14000c54c:	jo     0x14000c54e
   14000c54e:	jns    0x14000c550
   14000c550:	jb     0x14000c552
   14000c552:	imul   eax,DWORD PTR [rax],0x680067
   14000c558:	je     0x14000c55a
   14000c55a:	add    BYTE PTR [rax],al
   14000c55c:	test   eax,0x4d002000
   14000c561:	add    BYTE PTR [rcx+0x0],ch
   14000c564:	movsxd eax,DWORD PTR [rax]
   14000c566:	jb     0x14000c568
   14000c568:	outs   dx,DWORD PTR ds:[rsi]
   14000c569:	add    BYTE PTR [rbx+0x0],dh
   14000c56c:	outs   dx,DWORD PTR ds:[rsi]
   14000c56d:	add    BYTE PTR [rsi+0x0],ah
   14000c570:	je     0x14000c572
   14000c572:	and    BYTE PTR [rax],al
   14000c574:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c578:	jb     0x14000c57a
   14000c57a:	jo     0x14000c57c
   14000c57c:	outs   dx,DWORD PTR ds:[rsi]
   14000c57d:	add    BYTE PTR [rdx+0x0],dh
   14000c580:	(bad)  
   14000c581:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c585:	add    BYTE PTR [rdi+0x0],ch
   14000c588:	outs   dx,BYTE PTR ds:[rsi]
   14000c589:	add    BYTE PTR [rsi],ch
   14000c58b:	add    BYTE PTR [rax],ah
   14000c58d:	add    BYTE PTR [rcx+0x0],al
   14000c590:	ins    BYTE PTR es:[rdi],dx
   14000c591:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c595:	add    BYTE PTR [rdx+0x0],dh
   14000c598:	imul   eax,DWORD PTR [rax],0x680067
   14000c59e:	je     0x14000c5a0
   14000c5a0:	jae    0x14000c5a2
   14000c5a2:	and    BYTE PTR [rax],al
   14000c5a4:	jb     0x14000c5a6
   14000c5a6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c5aa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c5ae:	jbe    0x14000c5b0
   14000c5b0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c5b5:	add    BYTE PTR [rax],al
   14000c5b7:	add    BYTE PTR [rax+rax*1+0x16],dl
   14000c5bb:	add    BYTE PTR [rcx],al
   14000c5bd:	add    BYTE PTR [rdi+0x0],cl
   14000c5c0:	jb     0x14000c5c2
   14000c5c2:	imul   eax,DWORD PTR [rax],0x690067
   14000c5c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c9:	add    BYTE PTR [rcx+0x0],ah
   14000c5cc:	ins    BYTE PTR es:[rdi],dx
   14000c5cd:	add    BYTE PTR [rsi+0x0],al
   14000c5d0:	imul   eax,DWORD PTR [rax],0x65006c
   14000c5d6:	outs   dx,BYTE PTR ds:[rsi]
   14000c5d7:	add    BYTE PTR [rcx+0x0],ah
   14000c5da:	ins    DWORD PTR es:[rdi],dx
   14000c5db:	add    BYTE PTR [rbp+0x0],ah
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	rex.X add BYTE PTR [rcx+0x0],dil
   14000c5e4:	je     0x14000c5e6
   14000c5e6:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c5ea:	outs   dx,DWORD PTR ds:[rsi]
   14000c5eb:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c5ef:	add    BYTE PTR [rdi+0x0],al
   14000c5f2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c5f6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c5fa:	(bad)  
   14000c5fb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000c5ff:	add    BYTE PTR [rdx+0x0],dh
   14000c602:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c606:	js     0x14000c608
   14000c608:	add    BYTE PTR gs:[rax],al
   14000c60b:	add    BYTE PTR [rdx+0x0],ch
   14000c60e:	and    eax,0x50000100
   14000c613:	add    BYTE PTR [rdx+0x0],dh
   14000c616:	outs   dx,DWORD PTR ds:[rsi]
   14000c617:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c61b:	add    BYTE PTR [rbx+0x0],ah
   14000c61e:	je     0x14000c620
   14000c620:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c624:	ins    DWORD PTR es:[rdi],dx
   14000c625:	add    BYTE PTR [rbp+0x0],ah
   14000c628:	add    BYTE PTR [rax],al
   14000c62a:	add    BYTE PTR [rax],al
   14000c62c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c630:	movsxd eax,DWORD PTR [rax]
   14000c632:	jb     0x14000c634
   14000c634:	outs   dx,DWORD PTR ds:[rsi]
   14000c635:	add    BYTE PTR [rbx+0x0],dh
   14000c638:	outs   dx,DWORD PTR ds:[rsi]
   14000c639:	add    BYTE PTR [rsi+0x0],ah
   14000c63c:	je     0x14000c63e
   14000c63e:	scas   al,BYTE PTR es:[rdi]
   14000c63f:	add    BYTE PTR [rax],ah
   14000c641:	add    BYTE PTR [rdi+0x0],dl
   14000c644:	imul   eax,DWORD PTR [rax],0x64006e
   14000c64a:	outs   dx,DWORD PTR ds:[rsi]
   14000c64b:	add    BYTE PTR [rdi+0x0],dh
   14000c64e:	jae    0x14000c650
   14000c650:	scas   al,BYTE PTR es:[rdi]
   14000c651:	add    BYTE PTR [rax],ah
   14000c653:	add    BYTE PTR [rdi+0x0],cl
   14000c656:	jo     0x14000c658
   14000c658:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c65c:	(bad)  
   14000c65d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c661:	add    BYTE PTR [rsi+0x0],ch
   14000c664:	add    BYTE PTR [eax],ah
   14000c667:	add    BYTE PTR [rbx+0x0],dl
   14000c66a:	jns    0x14000c66c
   14000c66c:	jae    0x14000c66e
   14000c66e:	je     0x14000c670
   14000c670:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c674:	add    BYTE PTR [rax],al
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	rex.RX add BYTE PTR [rcx],r10b
   14000c67b:	add    BYTE PTR [rcx],al
   14000c67d:	add    BYTE PTR [rax+0x0],dl
   14000c680:	jb     0x14000c682
   14000c682:	outs   dx,DWORD PTR ds:[rsi]
   14000c683:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c687:	add    BYTE PTR [rbx+0x0],ah
   14000c68a:	je     0x14000c68c
   14000c68c:	push   rsi
   14000c68d:	add    BYTE PTR [rbp+0x0],ah
   14000c690:	jb     0x14000c692
   14000c692:	jae    0x14000c694
   14000c694:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c69a:	add    BYTE PTR [rax],al
   14000c69c:	xor    DWORD PTR [rax],eax
   14000c69e:	xor    BYTE PTR [rax],al
   14000c6a0:	add    BYTE PTR cs:[rax],dh
   14000c6a3:	add    BYTE PTR [rsi],ch
   14000c6a5:	add    BYTE PTR [rcx],dh
   14000c6a7:	add    BYTE PTR [rax],dh
   14000c6a9:	add    BYTE PTR [rdx],dh
   14000c6ab:	add    BYTE PTR [rax+rax*1],dh
   14000c6ae:	xor    BYTE PTR [rax],al
   14000c6b0:	add    BYTE PTR cs:[rcx],dh
   14000c6b3:	add    BYTE PTR [rsi],dh
   14000c6b5:	add    BYTE PTR [rbx],dh
   14000c6b7:	add    BYTE PTR [rax],bh
   14000c6b9:	add    BYTE PTR [rax+rax*1],dh
   14000c6bc:	add    BYTE PTR [rax],al
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	add    BYTE PTR [rax],r8b
   14000c6c3:	add    BYTE PTR [rcx],al
   14000c6c5:	add    BYTE PTR [rsi+0x0],dl
   14000c6c8:	(bad)  
   14000c6c9:	add    BYTE PTR [rdx+0x0],dh
   14000c6cc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c6d0:	ins    BYTE PTR es:[rdi],dx
   14000c6d1:	add    BYTE PTR [rbp+0x0],ah
   14000c6d4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c6d8:	data16 add BYTE PTR [rdi+0x0],ch
   14000c6dc:	add    BYTE PTR [rax],al
   14000c6de:	add    BYTE PTR [rax],al
   14000c6e0:	and    al,0x0
   14000c6e2:	add    al,0x0
   14000c6e4:	add    BYTE PTR [rax],al
   14000c6e6:	push   rsp
   14000c6e7:	add    BYTE PTR [rdx+0x0],dh
   14000c6ea:	(bad)  
   14000c6eb:	add    BYTE PTR [rsi+0x0],ch
   14000c6ee:	jae    0x14000c6f0
   14000c6f0:	ins    BYTE PTR es:[rdi],dx
   14000c6f1:	add    BYTE PTR [rcx+0x0],ah
   14000c6f4:	je     0x14000c6f6
   14000c6f6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c6fc:	add    BYTE PTR [rax],al
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	or     DWORD PTR [rax+rsi*4],eax
   14000c703:	add    al,0x0
   14000c705:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],dh
   14000d003:	add    BYTE PTR [rax+0x40000000],bh
   14000d009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d00a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d00c:	pop    rax
   14000d00d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d00e:	jo     0x14000cfb4
   14000d010:	js     0x14000cfb6
   14000d012:	(bad)  
   14000d013:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d014:	push   0xffffffff88a578a5
   14000d019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d01a:	push   0x78a870a8
   14000d01f:	test   al,0x80
   14000d021:	test   al,0x88
   14000d023:	test   al,0x38
   14000d025:	test   eax,0xa948a940
   14000d02a:	push   rax
   14000d02b:	test   eax,0xabd8a958
   14000d030:	loopne 0x14000cfdd
   14000d032:	call   0x138acc0e2
   14000d037:	stos   DWORD PTR es:[rdi],eax
   14000d038:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14000d03f:	lods   al,BYTE PTR ds:[rsi]
   14000d040:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14000d047:	lods   al,BYTE PTR ds:[rsi]
   14000d048:	lods   al,BYTE PTR ds:[rsi]
   14000d04a:	rex.W lods al,BYTE PTR ds:[rsi]
   14000d04c:	push   rax
   14000d04d:	lods   al,BYTE PTR ds:[rsi]
   14000d04e:	pop    rax
   14000d04f:	lods   al,BYTE PTR ds:[rsi]
   14000d050:	(bad)  
   14000d051:	lods   al,BYTE PTR ds:[rsi]
   14000d052:	push   0x78ac70ac
   14000d057:	lods   al,BYTE PTR ds:[rsi]
   14000d058:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14000d060:	movabs al,ds:0xc0acb8acb0aca8ac
   14000d069:	lods   al,BYTE PTR ds:[rsi]
   14000d06a:	enter  0xd0ac,0xac
   14000d06e:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14000d075:	lods   al,BYTE PTR ds:[rsi]
   14000d076:	clc    
   14000d077:	lods   al,BYTE PTR ds:[rsi]
   14000d078:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14000d07e:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14000d084:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14000d08a:	lods   rax,QWORD PTR ds:[rsi]
   14000d08c:	push   rax
   14000d08d:	lods   eax,DWORD PTR ds:[rsi]
   14000d08e:	pop    rax
   14000d08f:	lods   eax,DWORD PTR ds:[rsi]
   14000d090:	(bad)  
   14000d091:	lods   eax,DWORD PTR ds:[rsi]
   14000d092:	push   0x78ad70ad
   14000d097:	lods   eax,DWORD PTR ds:[rsi]
   14000d098:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14000d09f:	lods   eax,DWORD PTR ds:[rsi]
   14000d0a0:	movabs al,ds:0xc8adc0adb0ada8ad
   14000d0a9:	lods   eax,DWORD PTR ds:[rsi]
   14000d0aa:	loopne 0x14000d059
   14000d0ac:	call   0x160aec15e
   14000d0b1:	scas   al,BYTE PTR es:[rdi]
   14000d0b2:	push   0xaff0ae
   14000d0b7:	add    BYTE PTR [rax],al
   14000d0b9:	add    BYTE PTR [rax],0x0
   14000d0bc:	push   rax
   14000d0bd:	add    BYTE PTR [rax],al
   14000d0bf:	add    BYTE PTR [rax],al
   14000d0c1:	movabs al,ds:0xa040a030a020a010
   14000d0ca:	push   rax
   14000d0cb:	movabs al,ds:0xa098a080a070a060
   14000d0d4:	test   al,0xa0
   14000d0d6:	enter  0xf0a0,0xa0
   14000d0da:	or     BYTE PTR [rcx-0x5ecf5ed8],ah
   14000d0e0:	cmp    BYTE PTR [rcx-0x5e875ec0],ah
   14000d0e6:	mov    BYTE PTR [rcx-0x5ddf5e00],ah
   14000d0ec:	movabs ds:0xa278a270a260a258,al
   14000d0f6:	and    BYTE PTR [rdx-0x5d675d78],0xa8
   14000d0fd:	movabs ds:0xa460a458a450a438,al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	add    BYTE PTR [rax+0x140000],ah
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	cmp    BYTE PTR [rax-0x5f875f90],ah
   14000d116:	.byte 0x80
   14000d117:	.byte 0xa0
   14000d118:	.byte 0x88
   14000d119:	.byte 0xa0
	...
