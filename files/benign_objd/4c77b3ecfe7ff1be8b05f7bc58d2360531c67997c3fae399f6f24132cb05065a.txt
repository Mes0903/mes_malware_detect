
4c77b3ecfe7ff1be8b05f7bc58d2360531c67997c3fae399f6f24132cb05065a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x63dc9]        # 0x140064dd0
   140001007:	ret    
   140001008:	int3   
   140001009:	int3   
   14000100a:	int3   
   14000100b:	int3   
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	rex push rbx
   140001012:	sub    rsp,0x20
   140001016:	xor    edx,edx
   140001018:	mov    rbx,rcx
   14000101b:	call   0x14001bb34
   140001020:	lea    r11,[rip+0x63e01]        # 0x140064e28
   140001027:	mov    rax,rbx
   14000102a:	mov    QWORD PTR [rbx],r11
   14000102d:	add    rsp,0x20
   140001031:	pop    rbx
   140001032:	ret    
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	jmp    0x14001ac50
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	jmp    0x140001000
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	mov    QWORD PTR [rsp+0x8],rbx
   140001065:	push   rdi
   140001066:	sub    rsp,0x20
   14000106a:	mov    ebx,edx
   14000106c:	mov    rdi,rcx
   14000106f:	call   0x14001bcac
   140001074:	test   bl,0x1
   140001077:	je     0x140001081
   140001079:	mov    rcx,rdi
   14000107c:	call   0x14001ac50
   140001081:	mov    rax,rdi
   140001084:	mov    rbx,QWORD PTR [rsp+0x30]
   140001089:	add    rsp,0x20
   14000108d:	pop    rdi
   14000108e:	ret    
   14000108f:	int3   
   140001090:	sub    rsp,0x28
   140001094:	mov    rdx,QWORD PTR [rcx]
   140001097:	sub    rdx,0x18
   14000109b:	or     eax,0xffffffff
   14000109e:	lock xadd DWORD PTR [rdx+0x10],eax
   1400010a3:	add    eax,0xffffffff
   1400010a6:	test   eax,eax
   1400010a8:	jg     0x1400010b3
   1400010aa:	mov    rcx,QWORD PTR [rdx]
   1400010ad:	mov    rax,QWORD PTR [rcx]
   1400010b0:	call   QWORD PTR [rax+0x8]
   1400010b3:	add    rsp,0x28
   1400010b7:	ret    
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	sub    rsp,0x28
   1400010c4:	mov    rdx,QWORD PTR [rcx]
   1400010c7:	sub    rdx,0x18
   1400010cb:	or     eax,0xffffffff
   1400010ce:	lock xadd DWORD PTR [rdx+0x10],eax
   1400010d3:	add    eax,0xffffffff
   1400010d6:	test   eax,eax
   1400010d8:	jg     0x1400010e3
   1400010da:	mov    rcx,QWORD PTR [rdx]
   1400010dd:	mov    rax,QWORD PTR [rcx]
   1400010e0:	call   QWORD PTR [rax+0x8]
   1400010e3:	add    rsp,0x28
   1400010e7:	ret    
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	lea    r9,[rip+0xffffffffffffffc9]        # 0x1400010c0
   1400010f7:	mov    edx,0x8
   1400010fc:	mov    r8d,0x258
   140001102:	jmp    0x140045b20
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	mov    QWORD PTR [rsp+0x8],rcx
   140001115:	push   rbx
   140001116:	sub    rsp,0x30
   14000111a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001123:	mov    rbx,rcx
   140001126:	add    rcx,0xeb140
   14000112d:	call   0x14001ef28
   140001132:	nop
   140001133:	lea    rcx,[rbx+0x4c0]
   14000113a:	lea    r9,[rip+0xffffffffffffffaf]        # 0x1400010f0
   140001141:	mov    edx,0x12c8
   140001146:	mov    r8d,0xc8
   14000114c:	call   0x140045b20
   140001151:	nop
   140001152:	mov    rdx,QWORD PTR [rbx+0x290]
   140001159:	sub    rdx,0x18
   14000115d:	or     eax,0xffffffff
   140001160:	lock xadd DWORD PTR [rdx+0x10],eax
   140001165:	add    eax,0xffffffff
   140001168:	test   eax,eax
   14000116a:	jg     0x140001176
   14000116c:	mov    rcx,QWORD PTR [rdx]
   14000116f:	mov    rax,QWORD PTR [rcx]
   140001172:	call   QWORD PTR [rax+0x8]
   140001175:	nop
   140001176:	lea    rcx,[rbx+0xf0]
   14000117d:	lea    r9,[rip+0xffffffffffffff3c]        # 0x1400010c0
   140001184:	mov    edx,0x8
   140001189:	lea    r8d,[rdx+0x2a]
   14000118d:	call   0x140045b20
   140001192:	nop
   140001193:	mov    rcx,rbx
   140001196:	add    rsp,0x30
   14000119a:	pop    rbx
   14000119b:	jmp    0x14001df14
   1400011a0:	rex push rbp
   1400011a2:	sub    rsp,0x20
   1400011a6:	mov    rbp,rdx
   1400011a9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400011ad:	call   0x14001df14
   1400011b2:	add    rsp,0x20
   1400011b6:	pop    rbp
   1400011b7:	ret    
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	rex push rbp
   1400011c2:	sub    rsp,0x20
   1400011c6:	mov    rbp,rdx
   1400011c9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400011cd:	add    rcx,0xf0
   1400011d4:	lea    r9,[rip+0xfffffffffffffee5]        # 0x1400010c0
   1400011db:	mov    r8d,0x32
   1400011e1:	mov    edx,0x8
   1400011e6:	call   0x140045b20
   1400011eb:	add    rsp,0x20
   1400011ef:	pop    rbp
   1400011f0:	ret    
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	rex push rbp
   140001202:	sub    rsp,0x20
   140001206:	mov    rbp,rdx
   140001209:	mov    rcx,QWORD PTR [rbp+0x40]
   14000120d:	add    rcx,0x290
   140001214:	call   0x1400010c0
   140001219:	add    rsp,0x20
   14000121d:	pop    rbp
   14000121e:	ret    
   14000121f:	int3   
   140001220:	rex push rbp
   140001222:	sub    rsp,0x20
   140001226:	mov    rbp,rdx
   140001229:	mov    rcx,QWORD PTR [rbp+0x40]
   14000122d:	add    rcx,0x4c0
   140001234:	lea    r9,[rip+0xfffffffffffffeb5]        # 0x1400010f0
   14000123b:	mov    r8d,0xc8
   140001241:	mov    edx,0x12c8
   140001246:	call   0x140045b20
   14000124b:	add    rsp,0x20
   14000124f:	pop    rbp
   140001250:	ret    
   140001251:	int3   
   140001252:	int3   
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	rex push rbx
   140001262:	mov    eax,0xeb230
   140001267:	call   0x140063500
   14000126c:	sub    rsp,rax
   14000126f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001278:	mov    rax,QWORD PTR [rip+0x85af1]        # 0x140086d70
   14000127f:	xor    rax,rsp
   140001282:	mov    QWORD PTR [rsp+0xeb220],rax
   14000128a:	mov    rbx,rcx
   14000128d:	xor    ecx,ecx
   14000128f:	call   0x14001fe70
   140001294:	xor    edx,edx
   140001296:	lea    rcx,[rsp+0x30]
   14000129b:	call   0x140004540
   1400012a0:	nop
   1400012a1:	lea    rax,[rsp+0x30]
   1400012a6:	mov    QWORD PTR [rbx+0x40],rax
   1400012aa:	lea    rcx,[rsp+0x30]
   1400012af:	call   0x14001ea14
   1400012b4:	nop
   1400012b5:	lea    rcx,[rsp+0xeb170]
   1400012bd:	call   0x14001ef28
   1400012c2:	nop
   1400012c3:	lea    r9,[rip+0xfffffffffffffe26]        # 0x1400010f0
   1400012ca:	mov    edx,0x12c8
   1400012cf:	mov    r8d,0xc8
   1400012d5:	lea    rcx,[rsp+0x4f0]
   1400012dd:	call   0x140045b20
   1400012e2:	nop
   1400012e3:	mov    rdx,QWORD PTR [rsp+0x2c0]
   1400012eb:	add    rdx,0xffffffffffffffe8
   1400012ef:	or     eax,0xffffffff
   1400012f2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400012f7:	add    eax,0xffffffff
   1400012fa:	test   eax,eax
   1400012fc:	jg     0x140001308
   1400012fe:	mov    rcx,QWORD PTR [rdx]
   140001301:	mov    rax,QWORD PTR [rcx]
   140001304:	call   QWORD PTR [rax+0x8]
   140001307:	nop
   140001308:	lea    r9,[rip+0xfffffffffffffdb1]        # 0x1400010c0
   14000130f:	mov    edx,0x8
   140001314:	lea    r8d,[rdx+0x2a]
   140001318:	lea    rcx,[rsp+0x120]
   140001320:	call   0x140045b20
   140001325:	nop
   140001326:	lea    rcx,[rsp+0x30]
   14000132b:	call   0x14001df14
   140001330:	xor    eax,eax
   140001332:	mov    rcx,QWORD PTR [rsp+0xeb220]
   14000133a:	xor    rcx,rsp
   14000133d:	call   0x140046470
   140001342:	add    rsp,0xeb230
   140001349:	pop    rbx
   14000134a:	ret    
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	rex push rbp
   140001352:	sub    rsp,0x20
   140001356:	mov    rbp,rdx
   140001359:	lea    rcx,[rbp+0x30]
   14000135d:	call   0x140001110
   140001362:	add    rsp,0x20
   140001366:	pop    rbp
   140001367:	ret    
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	rex push rbp
   140001372:	sub    rsp,0x20
   140001376:	mov    rbp,rdx
   140001379:	lea    rcx,[rbp+0x30]
   14000137d:	call   0x14001df14
   140001382:	add    rsp,0x20
   140001386:	pop    rbp
   140001387:	ret    
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	rex push rbp
   140001392:	sub    rsp,0x20
   140001396:	mov    rbp,rdx
   140001399:	lea    rcx,[rbp+0x30]
   14000139d:	add    rcx,0xf0
   1400013a4:	lea    r9,[rip+0xfffffffffffffd15]        # 0x1400010c0
   1400013ab:	mov    r8d,0x32
   1400013b1:	mov    edx,0x8
   1400013b6:	call   0x140045b20
   1400013bb:	add    rsp,0x20
   1400013bf:	pop    rbp
   1400013c0:	ret    
   1400013c1:	int3   
   1400013c2:	int3   
   1400013c3:	int3   
   1400013c4:	int3   
   1400013c5:	int3   
   1400013c6:	int3   
   1400013c7:	int3   
   1400013c8:	int3   
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	rex push rbp
   1400013d2:	sub    rsp,0x20
   1400013d6:	mov    rbp,rdx
   1400013d9:	lea    rcx,[rbp+0x30]
   1400013dd:	add    rcx,0x290
   1400013e4:	call   0x1400010c0
   1400013e9:	add    rsp,0x20
   1400013ed:	pop    rbp
   1400013ee:	ret    
   1400013ef:	int3   
   1400013f0:	rex push rbp
   1400013f2:	sub    rsp,0x20
   1400013f6:	mov    rbp,rdx
   1400013f9:	lea    rcx,[rbp+0x30]
   1400013fd:	add    rcx,0x4c0
   140001404:	lea    r9,[rip+0xfffffffffffffce5]        # 0x1400010f0
   14000140b:	mov    r8d,0xc8
   140001411:	mov    edx,0x12c8
   140001416:	call   0x140045b20
   14000141b:	add    rsp,0x20
   14000141f:	pop    rbp
   140001420:	ret    
   140001421:	int3   
   140001422:	int3   
   140001423:	int3   
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	sub    rsp,0x28
   140001434:	cmp    ecx,0x8007000e
   14000143a:	jne    0x140001442
   14000143c:	call   0x1400208b0
   140001441:	int3   
   140001442:	call   0x140020a44
   140001447:	int3   
   140001448:	int3   
   140001449:	int3   
   14000144a:	int3   
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	mov    QWORD PTR [rsp+0x10],rbp
   140001455:	mov    QWORD PTR [rsp+0x18],rsi
   14000145a:	push   rdi
   14000145b:	sub    rsp,0x20
   14000145f:	mov    edi,r8d
   140001462:	mov    rsi,rdx
   140001465:	mov    rbp,rcx
   140001468:	call   QWORD PTR [rip+0x631ba]        # 0x140064628
   14000146e:	test   rax,rax
   140001471:	jne    0x140001483
   140001473:	mov    rbp,QWORD PTR [rsp+0x38]
   140001478:	mov    rsi,QWORD PTR [rsp+0x40]
   14000147d:	add    rsp,0x20
   140001481:	pop    rdi
   140001482:	ret    
   140001483:	mov    rcx,rax
   140001486:	mov    QWORD PTR [rsp+0x30],rbx
   14000148b:	call   QWORD PTR [rip+0x6319f]        # 0x140064630
   140001491:	test   rax,rax
   140001494:	mov    rbx,rax
   140001497:	je     0x1400014c7
   140001499:	mov    rdx,rsi
   14000149c:	mov    rcx,rbp
   14000149f:	call   QWORD PTR [rip+0x63193]        # 0x140064638
   1400014a5:	mov    r11d,eax
   1400014a8:	add    r11,rbx
   1400014ab:	and    edi,0xf
   1400014ae:	jbe    0x1400014c2
   1400014b0:	cmp    rbx,r11
   1400014b3:	jae    0x1400014c7
   1400014b5:	add    edi,0xffffffff
   1400014b8:	movzx  eax,WORD PTR [rbx]
   1400014bb:	lea    rbx,[rbx+rax*2+0x2]
   1400014c0:	jne    0x1400014b0
   1400014c2:	cmp    rbx,r11
   1400014c5:	jb     0x1400014cb
   1400014c7:	xor    eax,eax
   1400014c9:	jmp    0x1400014d7
   1400014cb:	xor    eax,eax
   1400014cd:	cmp    WORD PTR [rbx],ax
   1400014d0:	cmove  rbx,rax
   1400014d4:	mov    rax,rbx
   1400014d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014dc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400014e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400014e6:	add    rsp,0x20
   1400014ea:	pop    rdi
   1400014eb:	ret    
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	ret    0x0
   1400014f3:	int3   
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	mov    rcx,QWORD PTR [rcx+0x40]
   140001504:	xor    edx,edx
   140001506:	rex.W jmp QWORD PTR [rip+0x6363b]        # 0x140064b48
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	mov    rcx,QWORD PTR [rcx+0x40]
   140001514:	mov    edx,0x1
   140001519:	rex.W jmp QWORD PTR [rip+0x63628]        # 0x140064b48
   140001520:	mov    QWORD PTR [rsp+0x8],rbx
   140001525:	push   rdi
   140001526:	sub    rsp,0x20
   14000152a:	mov    ebx,edx
   14000152c:	mov    rdi,rcx
   14000152f:	call   0x14001ef28
   140001534:	test   bl,0x1
   140001537:	je     0x140001541
   140001539:	mov    rcx,rdi
   14000153c:	call   0x14001ac50
   140001541:	mov    rax,rdi
   140001544:	mov    rbx,QWORD PTR [rsp+0x30]
   140001549:	add    rsp,0x20
   14000154d:	pop    rdi
   14000154e:	ret    
   14000154f:	int3   
   140001550:	mov    rax,rdx
   140001553:	lea    r8,[rcx+0xeb140]
   14000155a:	mov    edx,0x3e8
   14000155f:	mov    rcx,rax
   140001562:	jmp    0x14002a66c
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	rex push rsi
   140001572:	sub    rsp,0xb0
   140001579:	mov    rax,QWORD PTR [rip+0x857f0]        # 0x140086d70
   140001580:	xor    rax,rsp
   140001583:	mov    QWORD PTR [rsp+0xa0],rax
   14000158b:	mov    rsi,rcx
   14000158e:	mov    rcx,QWORD PTR [rcx+0x40]
   140001592:	call   QWORD PTR [rip+0x635d0]        # 0x140064b68
   140001598:	test   eax,eax
   14000159a:	je     0x140001653
   1400015a0:	lea    rcx,[rsp+0x30]
   1400015a5:	mov    rdx,rsi
   1400015a8:	mov    QWORD PTR [rsp+0xc8],rbx
   1400015b0:	mov    QWORD PTR [rsp+0xd0],rdi
   1400015b8:	call   0x14002b38c
   1400015bd:	mov    r8,QWORD PTR [rsp+0x38]
   1400015c2:	mov    rcx,QWORD PTR [rsi+0x40]
   1400015c6:	xor    r9d,r9d
   1400015c9:	lea    edx,[r9+0x27]
   1400015cd:	call   QWORD PTR [rip+0x6359d]        # 0x140064b70
   1400015d3:	mov    ecx,0xb
   1400015d8:	call   QWORD PTR [rip+0x63562]        # 0x140064b40
   1400015de:	mov    ecx,0xc
   1400015e3:	mov    edi,eax
   1400015e5:	call   QWORD PTR [rip+0x63555]        # 0x140064b40
   1400015eb:	mov    rcx,QWORD PTR [rsi+0x40]
   1400015ef:	lea    rdx,[rsp+0x20]
   1400015f4:	mov    ebx,eax
   1400015f6:	call   QWORD PTR [rip+0x63564]        # 0x140064b60
   1400015fc:	mov    eax,DWORD PTR [rsp+0x2c]
   140001600:	mov    r9,QWORD PTR [rsi+0xeb1e8]
   140001607:	sub    eax,DWORD PTR [rsp+0x24]
   14000160b:	mov    rcx,QWORD PTR [rsp+0x38]
   140001610:	sub    eax,ebx
   140001612:	add    eax,0x1
   140001615:	cdq    
   140001616:	sub    eax,edx
   140001618:	sar    eax,1
   14000161a:	mov    r8d,eax
   14000161d:	mov    eax,DWORD PTR [rsp+0x28]
   140001621:	sub    eax,DWORD PTR [rsp+0x20]
   140001625:	sub    eax,edi
   140001627:	add    eax,0x1
   14000162a:	cdq    
   14000162b:	sub    eax,edx
   14000162d:	sar    eax,1
   14000162f:	mov    edx,eax
   140001631:	call   QWORD PTR [rip+0x63541]        # 0x140064b78
   140001637:	lea    rcx,[rsp+0x30]
   14000163c:	call   0x14002b404
   140001641:	mov    rdi,QWORD PTR [rsp+0xd0]
   140001649:	mov    rbx,QWORD PTR [rsp+0xc8]
   140001651:	jmp    0x14000165b
   140001653:	mov    rcx,rsi
   140001656:	call   0x14001df6c
   14000165b:	mov    rcx,QWORD PTR [rsp+0xa0]
   140001663:	xor    rcx,rsp
   140001666:	call   0x140046470
   14000166b:	add    rsp,0xb0
   140001672:	pop    rsi
   140001673:	ret    
   140001674:	int3   
   140001675:	int3   
   140001676:	int3   
   140001677:	int3   
   140001678:	int3   
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	mov    rax,QWORD PTR [rcx+0xeb1e8]
   140001687:	ret    
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	cmp    DWORD PTR [rip+0x8715d],0x0        # 0x1400887f4
   140001697:	jne    0x14000169e
   140001699:	jmp    0x140023ad8
   14000169e:	xor    eax,eax
   1400016a0:	ret    
   1400016a1:	int3   
   1400016a2:	int3   
   1400016a3:	int3   
   1400016a4:	int3   
   1400016a5:	int3   
   1400016a6:	int3   
   1400016a7:	int3   
   1400016a8:	int3   
   1400016a9:	int3   
   1400016aa:	int3   
   1400016ab:	int3   
   1400016ac:	int3   
   1400016ad:	int3   
   1400016ae:	int3   
   1400016af:	int3   
   1400016b0:	jmp    0x14001e0c8
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	rex push rbx
   1400016c2:	push   rbp
   1400016c3:	push   r12
   1400016c5:	push   r13
   1400016c7:	sub    rsp,0x4a8
   1400016ce:	mov    rax,QWORD PTR [rip+0x8569b]        # 0x140086d70
   1400016d5:	xor    rax,rsp
   1400016d8:	mov    QWORD PTR [rsp+0x490],rax
   1400016e0:	xor    r13d,r13d
   1400016e3:	mov    rbp,r8
   1400016e6:	mov    r8d,DWORD PTR [r8+0x14]
   1400016ea:	mov    rbx,rdx
   1400016ed:	lea    rcx,[rsp+0x40]
   1400016f2:	lea    rdx,[rsp+0x44]
   1400016f7:	xor    r9d,r9d
   1400016fa:	mov    r12d,r13d
   1400016fd:	mov    DWORD PTR [rsp+0x40],r13d
   140001702:	mov    DWORD PTR [rsp+0x44],r13d
   140001707:	mov    DWORD PTR [rsp+0x48],r13d
   14000170c:	mov    QWORD PTR [rsp+0x20],r13
   140001711:	call   QWORD PTR [rip+0x63029]        # 0x140064740
   140001717:	mov    r11d,DWORD PTR [rsp+0x40]
   14000171c:	bt     r11d,0xa
   140001721:	jae    0x14000172e
   140001723:	cmp    DWORD PTR [rsp+0x44],0x16
   140001728:	je     0x1400018a6
   14000172e:	test   r11b,0x8
   140001732:	je     0x1400018a6
   140001738:	xor    r9d,r9d
   14000173b:	lea    rax,[rsp+0x70]
   140001740:	mov    QWORD PTR [rsp+0x30],r13
   140001745:	lea    r8d,[r9+0x4]
   140001749:	mov    rdx,rbp
   14000174c:	mov    rcx,rbx
   14000174f:	mov    DWORD PTR [rsp+0x28],0x208
   140001757:	mov    QWORD PTR [rsp+0x20],rax
   14000175c:	call   QWORD PTR [rip+0x62fe6]        # 0x140064748
   140001762:	lea    rdx,[rip+0x63b4f]        # 0x1400652b8
   140001769:	lea    rcx,[rsp+0x70]
   14000176e:	call   0x140046660
   140001773:	test   rax,rax
   140001776:	jne    0x140001792
   140001778:	lea    rdx,[rip+0x63b11]        # 0x140065290
   14000177f:	lea    rcx,[rsp+0x70]
   140001784:	call   0x140046660
   140001789:	test   rax,rax
   14000178c:	je     0x1400018a9
   140001792:	mov    ecx,0x7d0
   140001797:	mov    QWORD PTR [rsp+0x4d0],rsi
   14000179f:	mov    QWORD PTR [rsp+0x4e8],rdi
   1400017a7:	call   0x14001ac58
   1400017ac:	lea    r8,[rip+0x63835]        # 0x140064fe8
   1400017b3:	xor    r9d,r9d
   1400017b6:	mov    DWORD PTR [rax],0x8
   1400017bc:	mov    rdi,rax
   1400017bf:	lea    rax,[rsp+0x50]
   1400017c4:	mov    rdx,rbp
   1400017c7:	mov    rcx,rbx
   1400017ca:	mov    DWORD PTR [rsp+0x50],0x20
   1400017d2:	mov    QWORD PTR [rsp+0x20],rax
   1400017d7:	mov    esi,r13d
   1400017da:	call   QWORD PTR [rip+0x62f70]        # 0x140064750
   1400017e0:	test   eax,eax
   1400017e2:	je     0x14000188e
   1400017e8:	mov    QWORD PTR [rsp+0x4a0],r14
   1400017f0:	mov    r14d,0x1
   1400017f6:	data16 data16 xchg ax,ax
   1400017fa:	data16 xchg ax,ax
   1400017fd:	data16 xchg ax,ax
   140001800:	lea    rax,[rsp+0x48]
   140001805:	lea    rdx,[rsp+0x50]
   14000180a:	mov    r9d,0x7d0
   140001810:	mov    r8,rdi
   140001813:	mov    rcx,rbx
   140001816:	mov    QWORD PTR [rsp+0x28],r13
   14000181b:	mov    QWORD PTR [rsp+0x20],rax
   140001820:	call   QWORD PTR [rip+0x62f32]        # 0x140064758
   140001826:	test   eax,eax
   140001828:	je     0x14000185b
   14000182a:	lea    r8,[rdi+0x4]
   14000182e:	lea    rcx,[rsp+0x280]
   140001836:	mov    edx,0x100
   14000183b:	call   0x140047080
   140001840:	lea    rdx,[rip+0x63a39]        # 0x140065280
   140001847:	lea    rcx,[rsp+0x280]
   14000184f:	call   0x140046660
   140001854:	test   rax,rax
   140001857:	cmovne r12d,r14d
   14000185b:	lea    rax,[rsp+0x50]
   140001860:	add    esi,r14d
   140001863:	lea    r8,[rip+0x6377e]        # 0x140064fe8
   14000186a:	mov    rdx,rbp
   14000186d:	mov    rcx,rbx
   140001870:	mov    r9d,esi
   140001873:	mov    QWORD PTR [rsp+0x20],rax
   140001878:	call   QWORD PTR [rip+0x62ed2]        # 0x140064750
   14000187e:	test   eax,eax
   140001880:	jne    0x140001800
   140001886:	mov    r14,QWORD PTR [rsp+0x4a0]
   14000188e:	mov    rcx,rdi
   140001891:	call   0x14001ac50
   140001896:	mov    rdi,QWORD PTR [rsp+0x4e8]
   14000189e:	mov    rsi,QWORD PTR [rsp+0x4d0]
   1400018a6:	mov    eax,r12d
   1400018a9:	mov    rcx,QWORD PTR [rsp+0x490]
   1400018b1:	xor    rcx,rsp
   1400018b4:	call   0x140046470
   1400018b9:	add    rsp,0x4a8
   1400018c0:	pop    r13
   1400018c2:	pop    r12
   1400018c4:	pop    rbp
   1400018c5:	pop    rbx
   1400018c6:	ret    
   1400018c7:	int3   
   1400018c8:	int3   
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	jmp    0x140024d08
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400018e5:	push   rdi
   1400018e6:	sub    rsp,0x270
   1400018ed:	mov    rax,QWORD PTR [rip+0x8547c]        # 0x140086d70
   1400018f4:	xor    rax,rsp
   1400018f7:	mov    QWORD PTR [rsp+0x260],rax
   1400018ff:	xor    ebx,ebx
   140001901:	xor    r8d,r8d
   140001904:	xor    edx,edx
   140001906:	lea    r9d,[rbx+0x6]
   14000190a:	xor    ecx,ecx
   14000190c:	call   QWORD PTR [rip+0x62e0e]        # 0x140064720
   140001912:	cmp    rax,0xffffffffffffffff
   140001916:	mov    rdi,rax
   140001919:	je     0x1400019b3
   14000191f:	lea    r8,[rsp+0x30]
   140001924:	xor    edx,edx
   140001926:	mov    rcx,rax
   140001929:	mov    QWORD PTR [rsp+0x280],rsi
   140001931:	mov    DWORD PTR [rsp+0x30],0x20
   140001939:	mov    esi,ebx
   14000193b:	call   QWORD PTR [rip+0x62de7]        # 0x140064728
   140001941:	test   eax,eax
   140001943:	je     0x1400019a2
   140001945:	data16 data16 xchg ax,ax
   140001949:	data16 xchg ax,ax
   14000194c:	data16 data16 xchg ax,ax
   140001950:	lea    r8,[rsp+0x50]
   140001955:	lea    rdx,[rsp+0x30]
   14000195a:	mov    r9d,0x104
   140001960:	mov    rcx,rdi
   140001963:	mov    QWORD PTR [rsp+0x20],rbx
   140001968:	call   QWORD PTR [rip+0x62dc2]        # 0x140064730
   14000196e:	lea    rdx,[rip+0x6397b]        # 0x1400652f0
   140001975:	lea    rcx,[rsp+0x50]
   14000197a:	call   0x140046660
   14000197f:	test   rax,rax
   140001982:	jne    0x14000199d
   140001984:	add    esi,0x1
   140001987:	lea    r8,[rsp+0x30]
   14000198c:	mov    rcx,rdi
   14000198f:	mov    edx,esi
   140001991:	call   QWORD PTR [rip+0x62d91]        # 0x140064728
   140001997:	test   eax,eax
   140001999:	jne    0x140001950
   14000199b:	jmp    0x1400019a2
   14000199d:	mov    ebx,0x1
   1400019a2:	mov    rcx,rdi
   1400019a5:	call   QWORD PTR [rip+0x62d8d]        # 0x140064738
   1400019ab:	mov    rsi,QWORD PTR [rsp+0x280]
   1400019b3:	mov    eax,ebx
   1400019b5:	mov    rcx,QWORD PTR [rsp+0x260]
   1400019bd:	xor    rcx,rsp
   1400019c0:	call   0x140046470
   1400019c5:	mov    rbx,QWORD PTR [rsp+0x288]
   1400019cd:	add    rsp,0x270
   1400019d4:	pop    rdi
   1400019d5:	ret    
   1400019d6:	int3   
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	cmp    DWORD PTR [rip+0x86e0d],0x0        # 0x1400887f4
   1400019e7:	jne    0x1400019fb
   1400019e9:	mov    r9d,r8d
   1400019ec:	mov    r8,rdx
   1400019ef:	mov    rdx,rcx
   1400019f2:	xor    ecx,ecx
   1400019f4:	rex.W jmp QWORD PTR [rip+0x6313d]        # 0x140064b38
   1400019fb:	xor    eax,eax
   1400019fd:	ret    
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	rex push rbx
   140001a02:	sub    rsp,0x280
   140001a09:	mov    rax,QWORD PTR [rip+0x85360]        # 0x140086d70
   140001a10:	xor    rax,rsp
   140001a13:	mov    QWORD PTR [rsp+0x270],rax
   140001a1b:	xor    eax,eax
   140001a1d:	mov    rbx,rdx
   140001a20:	lea    rdx,[rsp+0x40]
   140001a25:	mov    DWORD PTR [rsp+0x30],eax
   140001a29:	mov    DWORD PTR [rsp+0x34],eax
   140001a2d:	mov    DWORD PTR [rsp+0x40],0x230
   140001a35:	call   QWORD PTR [rip+0x62cdd]        # 0x140064718
   140001a3b:	test   eax,eax
   140001a3d:	je     0x140001a6e
   140001a3f:	mov    rax,QWORD PTR [rsp+0x58]
   140001a44:	mov    r8d,DWORD PTR [rbx+0x14]
   140001a48:	lea    rdx,[rsp+0x34]
   140001a4d:	lea    rcx,[rsp+0x30]
   140001a52:	xor    r9d,r9d
   140001a55:	mov    QWORD PTR [rsp+0x20],rax
   140001a5a:	call   QWORD PTR [rip+0x62ce0]        # 0x140064740
   140001a60:	test   eax,eax
   140001a62:	jne    0x140001a6e
   140001a64:	movzx  eax,BYTE PTR [rsp+0x30]
   140001a69:	and    eax,0x8
   140001a6c:	jmp    0x140001a70
   140001a6e:	xor    eax,eax
   140001a70:	mov    rcx,QWORD PTR [rsp+0x270]
   140001a78:	xor    rcx,rsp
   140001a7b:	call   0x140046470
   140001a80:	add    rsp,0x280
   140001a87:	pop    rbx
   140001a88:	ret    
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	mov    QWORD PTR [rsp+0x20],rbx
   140001a95:	push   rbp
   140001a96:	push   rsi
   140001a97:	push   rdi
   140001a98:	sub    rsp,0x2c0
   140001a9f:	mov    rax,QWORD PTR [rip+0x852ca]        # 0x140086d70
   140001aa6:	xor    rax,rsp
   140001aa9:	mov    QWORD PTR [rsp+0x2b0],rax
   140001ab1:	xor    eax,eax
   140001ab3:	mov    ebx,edx
   140001ab5:	mov    ebp,ecx
   140001ab7:	mov    edx,0x7f02
   140001abc:	xor    ecx,ecx
   140001abe:	mov    rsi,r8
   140001ac1:	mov    DWORD PTR [rsp+0x24],eax
   140001ac5:	mov    DWORD PTR [rsp+0x28],eax
   140001ac9:	mov    DWORD PTR [rsp+0x2c],eax
   140001acd:	mov    DWORD PTR [rsp+0x30],eax
   140001ad1:	mov    DWORD PTR [rsp+0x3c],eax
   140001ad5:	mov    DWORD PTR [rsp+0x40],eax
   140001ad9:	mov    DWORD PTR [rsp+0x44],eax
   140001add:	mov    DWORD PTR [rsp+0x48],eax
   140001ae1:	mov    DWORD PTR [rsp+0x4c],eax
   140001ae5:	mov    DWORD PTR [rsp+0x50],eax
   140001ae9:	mov    DWORD PTR [rsp+0x54],eax
   140001aed:	mov    DWORD PTR [rsp+0x20],0x8
   140001af5:	mov    DWORD PTR [rsp+0x38],0x20
   140001afd:	call   QWORD PTR [rip+0x63025]        # 0x140064b28
   140001b03:	mov    rcx,rax
   140001b06:	call   QWORD PTR [rip+0x63024]        # 0x140064b30
   140001b0c:	lea    r8,[rsp+0x38]
   140001b11:	mov    edx,ebx
   140001b13:	mov    rcx,rsi
   140001b16:	mov    rdi,rax
   140001b19:	call   QWORD PTR [rip+0x62c09]        # 0x140064728
   140001b1f:	test   eax,eax
   140001b21:	je     0x140001c00
   140001b27:	xor    ebx,ebx
   140001b29:	lea    r8,[rsp+0x20]
   140001b2e:	lea    rdx,[rsp+0x38]
   140001b33:	lea    r9d,[rbx+0x14]
   140001b37:	mov    rcx,rsi
   140001b3a:	mov    DWORD PTR [rsp+0x20],0x8
   140001b42:	mov    DWORD PTR [rsp+0x24],0x12
   140001b4a:	mov    DWORD PTR [rsp+0x2c],0x1
   140001b52:	mov    DWORD PTR [rsp+0x28],ebp
   140001b56:	mov    DWORD PTR [rsp+0x30],ebx
   140001b5a:	call   QWORD PTR [rip+0x62ba0]        # 0x140064700
   140001b60:	test   eax,eax
   140001b62:	je     0x140001bf7
   140001b68:	lea    r9d,[rbx+0x14]
   140001b6c:	lea    r8,[rsp+0x20]
   140001b71:	lea    rdx,[rsp+0x38]
   140001b76:	mov    rcx,rsi
   140001b79:	mov    DWORD PTR [rsp+0x20],0x8
   140001b81:	mov    DWORD PTR [rsp+0x24],0x12
   140001b89:	mov    DWORD PTR [rsp+0x2c],0x2
   140001b91:	mov    DWORD PTR [rsp+0x28],ebp
   140001b95:	mov    DWORD PTR [rsp+0x30],ebx
   140001b99:	call   QWORD PTR [rip+0x62b61]        # 0x140064700
   140001b9f:	test   eax,eax
   140001ba1:	je     0x140001bf7
   140001ba3:	lea    r8,[rsp+0x38]
   140001ba8:	lea    ecx,[rbx+0x12]
   140001bab:	mov    rdx,rsi
   140001bae:	call   QWORD PTR [rip+0x62b54]        # 0x140064708
   140001bb4:	test   eax,eax
   140001bb6:	je     0x140001bf7
   140001bb8:	lea    r8,[rsp+0x60]
   140001bbd:	lea    rdx,[rsp+0x38]
   140001bc2:	mov    rcx,rsi
   140001bc5:	mov    DWORD PTR [rsp+0x60],0x248
   140001bcd:	call   QWORD PTR [rip+0x62b3d]        # 0x140064710
   140001bd3:	test   eax,eax
   140001bd5:	je     0x140001c25
   140001bd7:	test   DWORD PTR [rsp+0x64],0x180
   140001bdf:	je     0x140001c25
   140001be1:	lea    rdx,[rip+0x63760]        # 0x140065348
   140001be8:	lea    rcx,[rip+0x63739]        # 0x140065328
   140001bef:	xor    r8d,r8d
   140001bf2:	call   0x1400019e0
   140001bf7:	mov    rcx,rdi
   140001bfa:	call   QWORD PTR [rip+0x62f30]        # 0x140064b30
   140001c00:	xor    eax,eax
   140001c02:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140001c0a:	xor    rcx,rsp
   140001c0d:	call   0x140046470
   140001c12:	mov    rbx,QWORD PTR [rsp+0x2f8]
   140001c1a:	add    rsp,0x2c0
   140001c21:	pop    rdi
   140001c22:	pop    rsi
   140001c23:	pop    rbp
   140001c24:	ret    
   140001c25:	mov    eax,0x1
   140001c2a:	jmp    0x140001c02
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    QWORD PTR [rsp+0x8],rbx
   140001c35:	mov    QWORD PTR [rsp+0x10],rbp
   140001c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140001c3f:	mov    QWORD PTR [rsp+0x20],rdi
   140001c44:	push   r12
   140001c46:	sub    rsp,0x40
   140001c4a:	mov    rdi,QWORD PTR [rsp+0x70]
   140001c4f:	mov    rbx,r9
   140001c52:	mov    esi,r8d
   140001c55:	mov    eax,DWORD PTR [rdi]
   140001c57:	mov    QWORD PTR [rsp+0x30],rdi
   140001c5c:	mov    rbp,rdx
   140001c5f:	mov    DWORD PTR [rsp+0x28],eax
   140001c63:	mov    rax,QWORD PTR [r9]
   140001c66:	xor    r9d,r9d
   140001c69:	mov    QWORD PTR [rsp+0x20],rax
   140001c6e:	mov    r12,rcx
   140001c71:	call   QWORD PTR [rip+0x62ad1]        # 0x140064748
   140001c77:	test   eax,eax
   140001c79:	jne    0x140001cdf
   140001c7b:	xchg   ax,ax
   140001c7d:	data16 xchg ax,ax
   140001c80:	call   QWORD PTR [rip+0x6297a]        # 0x140064600
   140001c86:	cmp    eax,0x7a
   140001c89:	jne    0x140001cab
   140001c8b:	mov    rcx,QWORD PTR [rbx]
   140001c8e:	test   rcx,rcx
   140001c91:	je     0x140001c99
   140001c93:	call   QWORD PTR [rip+0x62977]        # 0x140064610
   140001c99:	mov    edx,DWORD PTR [rdi]
   140001c9b:	mov    ecx,0x40
   140001ca0:	call   QWORD PTR [rip+0x62952]        # 0x1400645f8
   140001ca6:	mov    QWORD PTR [rbx],rax
   140001ca9:	jmp    0x140001cb6
   140001cab:	call   QWORD PTR [rip+0x6294f]        # 0x140064600
   140001cb1:	cmp    eax,0xd
   140001cb4:	je     0x140001cff
   140001cb6:	mov    eax,DWORD PTR [rdi]
   140001cb8:	mov    QWORD PTR [rsp+0x30],rdi
   140001cbd:	xor    r9d,r9d
   140001cc0:	mov    DWORD PTR [rsp+0x28],eax
   140001cc4:	mov    rax,QWORD PTR [rbx]
   140001cc7:	mov    r8d,esi
   140001cca:	mov    rdx,rbp
   140001ccd:	mov    rcx,r12
   140001cd0:	mov    QWORD PTR [rsp+0x20],rax
   140001cd5:	call   QWORD PTR [rip+0x62a6d]        # 0x140064748
   140001cdb:	test   eax,eax
   140001cdd:	je     0x140001c80
   140001cdf:	mov    eax,0x1
   140001ce4:	mov    rbx,QWORD PTR [rsp+0x50]
   140001ce9:	mov    rbp,QWORD PTR [rsp+0x58]
   140001cee:	mov    rsi,QWORD PTR [rsp+0x60]
   140001cf3:	mov    rdi,QWORD PTR [rsp+0x68]
   140001cf8:	add    rsp,0x40
   140001cfc:	pop    r12
   140001cfe:	ret    
   140001cff:	xor    eax,eax
   140001d01:	jmp    0x140001ce4
   140001d03:	int3   
   140001d04:	int3   
   140001d05:	int3   
   140001d06:	int3   
   140001d07:	int3   
   140001d08:	int3   
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	rex push rbx
   140001d12:	push   rbp
   140001d13:	push   rsi
   140001d14:	push   rdi
   140001d15:	push   r12
   140001d17:	sub    rsp,0x240
   140001d1e:	mov    rax,QWORD PTR [rip+0x8504b]        # 0x140086d70
   140001d25:	xor    rax,rsp
   140001d28:	mov    QWORD PTR [rsp+0x230],rax
   140001d30:	mov    rbx,rcx
   140001d33:	mov    esi,edx
   140001d35:	lea    rcx,[rsp+0x20]
   140001d3a:	mov    edx,0x104
   140001d3f:	mov    r12,r9
   140001d42:	mov    rbp,r8
   140001d45:	call   QWORD PTR [rip+0x62885]        # 0x1400645d0
   140001d4b:	cmp    DWORD PTR [rip+0x86aca],0x0        # 0x14008881c
   140001d52:	jne    0x140001d6f
   140001d54:	cmp    DWORD PTR [rip+0x86ac5],0x0        # 0x140088820
   140001d5b:	jne    0x140001d6f
   140001d5d:	cmp    DWORD PTR [rip+0x86ac0],0x0        # 0x140088824
   140001d64:	jne    0x140001d6f
   140001d66:	cmp    DWORD PTR [rip+0x86abb],0x0        # 0x140088828
   140001d6d:	je     0x140001d81
   140001d6f:	lea    rdx,[rip+0x635fa]        # 0x140065370
   140001d76:	lea    rcx,[rsp+0x20]
   140001d7b:	call   QWORD PTR [rip+0x62857]        # 0x1400645d8
   140001d81:	lea    rdx,[rip+0x635c8]        # 0x140065350
   140001d88:	lea    rcx,[rsp+0x20]
   140001d8d:	call   QWORD PTR [rip+0x62845]        # 0x1400645d8
   140001d93:	lea    rcx,[rsp+0x20]
   140001d98:	call   QWORD PTR [rip+0x62842]        # 0x1400645e0
   140001d9e:	test   rax,rax
   140001da1:	mov    rdi,rax
   140001da4:	je     0x140001dc4
   140001da6:	lea    rdx,[rip+0x635db]        # 0x140065388
   140001dad:	mov    rcx,rax
   140001db0:	call   QWORD PTR [rip+0x62832]        # 0x1400645e8
   140001db6:	test   rax,rax
   140001db9:	jne    0x140001dc9
   140001dbb:	mov    rcx,rdi
   140001dbe:	call   QWORD PTR [rip+0x6282c]        # 0x1400645f0
   140001dc4:	or     eax,0xffffffff
   140001dc7:	jmp    0x140001de3
   140001dc9:	mov    r9,r12
   140001dcc:	mov    r8,rbp
   140001dcf:	mov    edx,esi
   140001dd1:	mov    rcx,rbx
   140001dd4:	call   rax
   140001dd6:	mov    rcx,rdi
   140001dd9:	mov    ebx,eax
   140001ddb:	call   QWORD PTR [rip+0x6280f]        # 0x1400645f0
   140001de1:	mov    eax,ebx
   140001de3:	mov    rcx,QWORD PTR [rsp+0x230]
   140001deb:	xor    rcx,rsp
   140001dee:	call   0x140046470
   140001df3:	add    rsp,0x240
   140001dfa:	pop    r12
   140001dfc:	pop    rdi
   140001dfd:	pop    rsi
   140001dfe:	pop    rbp
   140001dff:	pop    rbx
   140001e00:	ret    
   140001e01:	int3   
   140001e02:	int3   
   140001e03:	int3   
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    QWORD PTR [rsp+0x18],rbx
   140001e15:	push   rbp
   140001e16:	push   rsi
   140001e17:	push   rdi
   140001e18:	sub    rsp,0x270
   140001e1f:	mov    rax,QWORD PTR [rip+0x84f4a]        # 0x140086d70
   140001e26:	xor    rax,rsp
   140001e29:	mov    QWORD PTR [rsp+0x260],rax
   140001e31:	mov    r8,rdx
   140001e34:	movzx  edx,cx
   140001e37:	xor    ecx,ecx
   140001e39:	call   QWORD PTR [rip+0x627e1]        # 0x140064620
   140001e3f:	xor    ecx,ecx
   140001e41:	mov    rdx,rax
   140001e44:	mov    rbx,rax
   140001e47:	call   QWORD PTR [rip+0x627db]        # 0x140064628
   140001e4d:	mov    rcx,rax
   140001e50:	mov    rdi,rax
   140001e53:	call   QWORD PTR [rip+0x627d7]        # 0x140064630
   140001e59:	mov    rdx,rbx
   140001e5c:	xor    ecx,ecx
   140001e5e:	mov    rsi,rax
   140001e61:	call   QWORD PTR [rip+0x627d1]        # 0x140064638
   140001e67:	test   rbx,rbx
   140001e6a:	mov    ebp,eax
   140001e6c:	je     0x140001f14
   140001e72:	test   rdi,rdi
   140001e75:	je     0x140001f14
   140001e7b:	test   rsi,rsi
   140001e7e:	je     0x140001f14
   140001e84:	test   eax,eax
   140001e86:	je     0x140001f14
   140001e8c:	lea    rcx,[rsp+0x50]
   140001e91:	mov    edx,0x104
   140001e96:	call   QWORD PTR [rip+0x62734]        # 0x1400645d0
   140001e9c:	lea    rdx,[rip+0x634ad]        # 0x140065350
   140001ea3:	lea    rcx,[rsp+0x50]
   140001ea8:	call   QWORD PTR [rip+0x6272a]        # 0x1400645d8
   140001eae:	xor    ebx,ebx
   140001eb0:	lea    rcx,[rsp+0x50]
   140001eb5:	mov    QWORD PTR [rsp+0x30],rbx
   140001eba:	xor    r9d,r9d
   140001ebd:	xor    r8d,r8d
   140001ec0:	mov    edx,0x40000000
   140001ec5:	mov    DWORD PTR [rsp+0x28],0x80
   140001ecd:	mov    DWORD PTR [rsp+0x20],0x2
   140001ed5:	call   QWORD PTR [rip+0x626dd]        # 0x1400645b8
   140001edb:	cmp    rax,0xffffffffffffffff
   140001edf:	mov    rdi,rax
   140001ee2:	je     0x140001f0c
   140001ee4:	lea    r9,[rsp+0x40]
   140001ee9:	mov    r8d,ebp
   140001eec:	mov    rdx,rsi
   140001eef:	mov    rcx,rax
   140001ef2:	mov    QWORD PTR [rsp+0x20],rbx
   140001ef7:	call   QWORD PTR [rip+0x626c3]        # 0x1400645c0
   140001efd:	mov    rcx,rdi
   140001f00:	mov    ebx,eax
   140001f02:	call   QWORD PTR [rip+0x626c0]        # 0x1400645c8
   140001f08:	mov    eax,ebx
   140001f0a:	jmp    0x140001f16
   140001f0c:	mov    ebx,DWORD PTR [rsp+0x40]
   140001f10:	mov    eax,ebx
   140001f12:	jmp    0x140001f16
   140001f14:	xor    eax,eax
   140001f16:	mov    rcx,QWORD PTR [rsp+0x260]
   140001f1e:	xor    rcx,rsp
   140001f21:	call   0x140046470
   140001f26:	mov    rbx,QWORD PTR [rsp+0x2a0]
   140001f2e:	add    rsp,0x270
   140001f35:	pop    rdi
   140001f36:	pop    rsi
   140001f37:	pop    rbp
   140001f38:	ret    
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    QWORD PTR [rsp+0x10],rbx
   140001f45:	mov    QWORD PTR [rsp+0x18],rbp
   140001f4a:	mov    QWORD PTR [rsp+0x20],rsi
   140001f4f:	push   rdi
   140001f50:	sub    rsp,0x150
   140001f57:	mov    rax,QWORD PTR [rip+0x84e12]        # 0x140086d70
   140001f5e:	xor    rax,rsp
   140001f61:	mov    QWORD PTR [rsp+0x140],rax
   140001f69:	mov    rbx,rcx
   140001f6c:	lea    rcx,[rip+0x6343d]        # 0x1400653b0
   140001f73:	call   QWORD PTR [rip+0x62617]        # 0x140064590
   140001f79:	lea    rdx,[rip+0x63420]        # 0x1400653a0
   140001f80:	mov    rcx,rax
   140001f83:	call   QWORD PTR [rip+0x6265f]        # 0x1400645e8
   140001f89:	xor    ebp,ebp
   140001f8b:	test   rax,rax
   140001f8e:	mov    rdi,rax
   140001f91:	mov    DWORD PTR [rbx+0x2c],ebp
   140001f94:	je     0x140001fa5
   140001f96:	call   QWORD PTR [rip+0x625fc]        # 0x140064598
   140001f9c:	lea    rdx,[rbx+0x2c]
   140001fa0:	mov    rcx,rax
   140001fa3:	call   rdi
   140001fa5:	lea    rcx,[rsp+0x20]
   140001faa:	mov    DWORD PTR [rbx],ebp
   140001fac:	mov    DWORD PTR [rbx+0x4],ebp
   140001faf:	mov    DWORD PTR [rbx+0x8],ebp
   140001fb2:	mov    DWORD PTR [rbx+0xc],ebp
   140001fb5:	mov    DWORD PTR [rbx+0x10],ebp
   140001fb8:	mov    DWORD PTR [rbx+0x14],ebp
   140001fbb:	mov    DWORD PTR [rbx+0x18],ebp
   140001fbe:	mov    DWORD PTR [rbx+0x1c],ebp
   140001fc1:	mov    DWORD PTR [rbx+0x20],ebp
   140001fc4:	mov    DWORD PTR [rbx+0x24],ebp
   140001fc7:	mov    DWORD PTR [rbx+0x28],ebp
   140001fca:	mov    DWORD PTR [rbx+0x30],ebp
   140001fcd:	mov    DWORD PTR [rbx+0x34],ebp
   140001fd0:	mov    DWORD PTR [rbx+0x38],ebp
   140001fd3:	mov    DWORD PTR [rbx+0x3c],ebp
   140001fd6:	mov    DWORD PTR [rsp+0x20],0x11c
   140001fde:	call   QWORD PTR [rip+0x625bc]        # 0x1400645a0
   140001fe4:	cmp    DWORD PTR [rsp+0x30],0x2
   140001fe9:	jne    0x1400020f0
   140001fef:	mov    edx,DWORD PTR [rsp+0x24]
   140001ff3:	mov    ecx,DWORD PTR [rsp+0x28]
   140001ff7:	mov    eax,DWORD PTR [rsp+0x2c]
   140001ffb:	cmp    edx,0x5
   140001ffe:	mov    DWORD PTR [rbx],edx
   140002000:	mov    DWORD PTR [rbx+0x4],ecx
   140002003:	mov    DWORD PTR [rbx+0x8],eax
   140002006:	jne    0x140002031
   140002008:	test   ecx,ecx
   14000200a:	jne    0x140002015
   14000200c:	mov    DWORD PTR [rbx+0xc],0x1
   140002013:	jmp    0x140002081
   140002015:	cmp    ecx,0x1
   140002018:	jne    0x14000201f
   14000201a:	mov    DWORD PTR [rbx+0x10],ecx
   14000201d:	jmp    0x140002081
   14000201f:	cmp    ecx,0x2
   140002022:	jne    0x1400020f0
   140002028:	mov    DWORD PTR [rbx+0x14],0x1
   14000202f:	jmp    0x140002081
   140002031:	cmp    edx,0x6
   140002034:	jne    0x140002070
   140002036:	test   ecx,ecx
   140002038:	jne    0x140002043
   14000203a:	mov    DWORD PTR [rbx+0x18],0x1
   140002041:	jmp    0x140002081
   140002043:	cmp    ecx,0x1
   140002046:	jne    0x14000204d
   140002048:	mov    DWORD PTR [rbx+0x1c],ecx
   14000204b:	jmp    0x140002081
   14000204d:	cmp    ecx,0x2
   140002050:	jne    0x14000205b
   140002052:	mov    DWORD PTR [rbx+0x20],0x1
   140002059:	jmp    0x140002081
   14000205b:	cmp    ecx,0x3
   14000205e:	jne    0x140002069
   140002060:	mov    DWORD PTR [rbx+0x24],0x1
   140002067:	jmp    0x140002081
   140002069:	cmp    ecx,0x4
   14000206c:	jb     0x140002081
   14000206e:	jmp    0x14000207a
   140002070:	cmp    edx,0xa
   140002073:	je     0x14000207a
   140002075:	cmp    edx,0x7
   140002078:	jb     0x1400020f0
   14000207a:	mov    DWORD PTR [rbx+0x28],0x1
   140002081:	movzx  eax,BYTE PTR [rsp+0x13a]
   140002089:	cmp    al,0x3
   14000208b:	je     0x140002091
   14000208d:	cmp    al,0x2
   14000208f:	jne    0x140002098
   140002091:	mov    DWORD PTR [rbx+0x30],0x1
   140002098:	cmp    DWORD PTR [rbx+0x14],ebp
   14000209b:	je     0x1400020b1
   14000209d:	cmp    DWORD PTR [rbx+0x30],ebp
   1400020a0:	jne    0x1400020b1
   1400020a2:	cmp    DWORD PTR [rbx+0x2c],ebp
   1400020a5:	je     0x1400020b1
   1400020a7:	mov    DWORD PTR [rbx+0x14],ebp
   1400020aa:	mov    DWORD PTR [rbx+0x10],0x1
   1400020b1:	movzx  ecx,WORD PTR [rsp+0x134]
   1400020b9:	mov    DWORD PTR [rbx+0x38],ecx
   1400020bc:	movzx  ecx,WORD PTR [rsp+0x136]
   1400020c4:	mov    DWORD PTR [rbx+0x3c],ecx
   1400020c7:	mov    ecx,0x57
   1400020cc:	call   QWORD PTR [rip+0x62a6e]        # 0x140064b40
   1400020d2:	mov    DWORD PTR [rbx+0x34],eax
   1400020d5:	call   QWORD PTR [rip+0x624cd]        # 0x1400645a8
   1400020db:	mov    WORD PTR [rbx+0x40],ax
   1400020df:	call   QWORD PTR [rip+0x624cb]        # 0x1400645b0
   1400020e5:	mov    WORD PTR [rbx+0x42],ax
   1400020e9:	mov    eax,0x1
   1400020ee:	jmp    0x1400020f2
   1400020f0:	xor    eax,eax
   1400020f2:	mov    rcx,QWORD PTR [rsp+0x140]
   1400020fa:	xor    rcx,rsp
   1400020fd:	call   0x140046470
   140002102:	lea    r11,[rsp+0x150]
   14000210a:	mov    rbx,QWORD PTR [r11+0x18]
   14000210e:	mov    rbp,QWORD PTR [r11+0x20]
   140002112:	mov    rsi,QWORD PTR [r11+0x28]
   140002116:	mov    rsp,r11
   140002119:	pop    rdi
   14000211a:	ret    
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	mov    QWORD PTR [rsp+0x8],rbx
   140002125:	mov    QWORD PTR [rsp+0x10],rbp
   14000212a:	mov    QWORD PTR [rsp+0x18],rsi
   14000212f:	push   rdi
   140002130:	sub    rsp,0x30
   140002134:	mov    rbp,rcx
   140002137:	lea    rcx,[rip+0x632a2]        # 0x1400653e0
   14000213e:	mov    ebx,r9d
   140002141:	mov    rdi,r8
   140002144:	mov    rsi,rdx
   140002147:	call   QWORD PTR [rip+0x62493]        # 0x1400645e0
   14000214d:	test   rax,rax
   140002150:	jne    0x140002156
   140002152:	xor    eax,eax
   140002154:	jmp    0x140002187
   140002156:	lea    rdx,[rip+0x6326b]        # 0x1400653c8
   14000215d:	mov    rcx,rax
   140002160:	call   QWORD PTR [rip+0x62482]        # 0x1400645e8
   140002166:	test   rax,rax
   140002169:	mov    r11,rax
   14000216c:	je     0x140002152
   14000216e:	mov    rax,QWORD PTR [rsp+0x60]
   140002173:	mov    r9d,ebx
   140002176:	mov    r8,rdi
   140002179:	mov    rdx,rsi
   14000217c:	mov    rcx,rbp
   14000217f:	mov    QWORD PTR [rsp+0x20],rax
   140002184:	call   r11
   140002187:	mov    rbx,QWORD PTR [rsp+0x40]
   14000218c:	mov    rbp,QWORD PTR [rsp+0x48]
   140002191:	mov    rsi,QWORD PTR [rsp+0x50]
   140002196:	add    rsp,0x30
   14000219a:	pop    rdi
   14000219b:	ret    
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	sub    rsp,0x28
   1400021a4:	mov    ecx,0x8007000e
   1400021a9:	call   0x140001430
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400021ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400021bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400021c4:	push   r12
   1400021c6:	sub    rsp,0x20
   1400021ca:	mov    rbx,QWORD PTR [rcx]
   1400021cd:	mov    rsi,rcx
   1400021d0:	mov    edi,edx
   1400021d2:	mov    rcx,QWORD PTR [rbx-0x18]
   1400021d6:	mov    ebp,DWORD PTR [rbx-0x10]
   1400021d9:	mov    rax,QWORD PTR [rcx]
   1400021dc:	call   QWORD PTR [rax+0x20]
   1400021df:	mov    r8d,0x2
   1400021e5:	mov    edx,edi
   1400021e7:	mov    r9,QWORD PTR [rax]
   1400021ea:	mov    rcx,rax
   1400021ed:	call   QWORD PTR [r9]
   1400021f0:	test   rax,rax
   1400021f3:	mov    r12,rax
   1400021f6:	jne    0x1400021fe
   1400021f8:	call   0x1400021a0
   1400021fd:	int3   
   1400021fe:	cmp    ebp,edi
   140002200:	mov    r8,rbx
   140002203:	cmovl  edi,ebp
   140002206:	add    edi,0x1
   140002209:	movsxd rdx,edi
   14000220c:	lea    rdi,[rax+0x18]
   140002210:	add    rdx,rdx
   140002213:	mov    rcx,rdi
   140002216:	mov    r9,rdx
   140002219:	call   0x1400466d0
   14000221e:	mov    DWORD PTR [r12+0x8],ebp
   140002223:	or     eax,0xffffffff
   140002226:	lock xadd DWORD PTR [rbx-0x8],eax
   14000222b:	add    eax,0xffffffff
   14000222e:	test   eax,eax
   140002230:	jg     0x140002240
   140002232:	mov    rcx,QWORD PTR [rbx-0x18]
   140002236:	lea    rdx,[rbx-0x18]
   14000223a:	mov    rax,QWORD PTR [rcx]
   14000223d:	call   QWORD PTR [rax+0x8]
   140002240:	mov    rbx,QWORD PTR [rsp+0x30]
   140002245:	mov    rbp,QWORD PTR [rsp+0x38]
   14000224a:	mov    QWORD PTR [rsi],rdi
   14000224d:	mov    rsi,QWORD PTR [rsp+0x40]
   140002252:	mov    rdi,QWORD PTR [rsp+0x48]
   140002257:	add    rsp,0x20
   14000225b:	pop    r12
   14000225d:	ret    
   14000225e:	int3   
   14000225f:	int3   
   140002260:	rex push rbx
   140002262:	sub    rsp,0x20
   140002266:	mov    r8d,edx
   140002269:	mov    rdx,QWORD PTR [rcx]
   14000226c:	mov    rbx,rcx
   14000226f:	mov    rcx,QWORD PTR [rdx-0x18]
   140002273:	sub    rdx,0x18
   140002277:	cmp    DWORD PTR [rdx+0xc],r8d
   14000227b:	jge    0x1400022a6
   14000227d:	test   r8d,r8d
   140002280:	jle    0x1400022a6
   140002282:	mov    rax,QWORD PTR [rcx]
   140002285:	mov    r9d,0x2
   14000228b:	call   QWORD PTR [rax+0x10]
   14000228e:	test   rax,rax
   140002291:	jne    0x140002299
   140002293:	call   0x1400021a0
   140002298:	int3   
   140002299:	add    rax,0x18
   14000229d:	mov    QWORD PTR [rbx],rax
   1400022a0:	add    rsp,0x20
   1400022a4:	pop    rbx
   1400022a5:	ret    
   1400022a6:	call   0x1400021a0
   1400022ab:	int3   
   1400022ac:	int3   
   1400022ad:	int3   
   1400022ae:	int3   
   1400022af:	int3   
   1400022b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400022b5:	mov    QWORD PTR [rsp+0x18],r8
   1400022ba:	mov    QWORD PTR [rsp+0x20],r9
   1400022bf:	sub    rsp,0x28
   1400022c3:	mov    r8,rdx
   1400022c6:	lea    r9,[rsp+0x40]
   1400022cb:	mov    edx,0x104
   1400022d0:	call   0x140046da0
   1400022d5:	add    rsp,0x28
   1400022d9:	ret    
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400022e5:	mov    QWORD PTR [rsp+0x18],r8
   1400022ea:	mov    QWORD PTR [rsp+0x20],r9
   1400022ef:	sub    rsp,0x28
   1400022f3:	mov    r8,rdx
   1400022f6:	lea    r9,[rsp+0x40]
   1400022fb:	mov    edx,0x40
   140002300:	call   0x140046da0
   140002305:	add    rsp,0x28
   140002309:	ret    
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	mov    QWORD PTR [rsp+0x10],rdx
   140002315:	mov    QWORD PTR [rsp+0x18],r8
   14000231a:	mov    QWORD PTR [rsp+0x20],r9
   14000231f:	sub    rsp,0x28
   140002323:	mov    r8,rdx
   140002326:	lea    r9,[rsp+0x40]
   14000232b:	mov    edx,0x80
   140002330:	call   0x140046da0
   140002335:	add    rsp,0x28
   140002339:	ret    
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	mov    QWORD PTR [rsp+0x8],rbx
   140002345:	push   rbp
   140002346:	push   rsi
   140002347:	push   rdi
   140002348:	push   r12
   14000234a:	push   r13
   14000234c:	push   r14
   14000234e:	push   r15
   140002350:	mov    eax,0x4a10
   140002355:	call   0x140063500
   14000235a:	sub    rsp,rax
   14000235d:	mov    rax,QWORD PTR [rip+0x84a0c]        # 0x140086d70
   140002364:	xor    rax,rsp
   140002367:	mov    QWORD PTR [rsp+0x4a00],rax
   14000236f:	mov    r15,QWORD PTR [rsp+0x4a70]
   140002377:	xor    r13d,r13d
   14000237a:	mov    rsi,r9
   14000237d:	mov    rcx,r15
   140002380:	mov    QWORD PTR [rsp+0x50],r9
   140002385:	mov    rdi,r8
   140002388:	mov    QWORD PTR [rsp+0x48],r8
   14000238d:	mov    QWORD PTR [rsp+0x38],rdx
   140002392:	mov    DWORD PTR [rsp+0x470],r13d
   14000239a:	mov    DWORD PTR [rsp+0x474],r13d
   1400023a2:	mov    DWORD PTR [rsp+0x888],r13d
   1400023aa:	mov    DWORD PTR [rsp+0x88c],r13d
   1400023b2:	mov    DWORD PTR [rsp+0xca0],r13d
   1400023ba:	mov    DWORD PTR [rsp+0xca4],r13d
   1400023c2:	mov    DWORD PTR [rsp+0x10b8],r13d
   1400023ca:	mov    DWORD PTR [rsp+0x10bc],r13d
   1400023d2:	mov    DWORD PTR [rsp+0x14d0],r13d
   1400023da:	mov    DWORD PTR [rsp+0x14d4],r13d
   1400023e2:	mov    DWORD PTR [rsp+0x18e8],r13d
   1400023ea:	mov    DWORD PTR [rsp+0x18ec],r13d
   1400023f2:	mov    DWORD PTR [rsp+0x1d00],r13d
   1400023fa:	mov    DWORD PTR [rsp+0x1d04],r13d
   140002402:	mov    DWORD PTR [rsp+0x2118],r13d
   14000240a:	mov    DWORD PTR [rsp+0x211c],r13d
   140002412:	mov    DWORD PTR [rsp+0x2530],r13d
   14000241a:	mov    DWORD PTR [rsp+0x2534],r13d
   140002422:	mov    DWORD PTR [rsp+0x2948],r13d
   14000242a:	mov    DWORD PTR [rsp+0x294c],r13d
   140002432:	mov    DWORD PTR [rsp+0x30],r13d
   140002437:	mov    DWORD PTR [rsp+0x34],r13d
   14000243c:	mov    r14d,r13d
   14000243f:	call   QWORD PTR [rip+0x622a3]        # 0x1400646e8
   140002445:	lea    rcx,[rsp+0x35b0]
   14000244d:	mov    ebp,eax
   14000244f:	mov    eax,0xa
   140002454:	mov    r8,rdi
   140002457:	cmp    ebp,eax
   140002459:	mov    edx,0x104
   14000245e:	cmovg  ebp,eax
   140002461:	call   0x140047080
   140002466:	mov    ebx,0x1
   14000246b:	cmp    ebp,ebx
   14000246d:	jle    0x1400024b6
   14000246f:	nop
   140002470:	movsxd rax,ebx
   140002473:	lea    r8,[rip+0x62ece]        # 0x140065348
   14000247a:	mov    edx,0x104
   14000247f:	imul   rax,rax,0x208
   140002486:	lea    rdi,[rsp+rax*1+0x35b0]
   14000248e:	mov    rcx,rdi
   140002491:	call   0x140047080
   140002496:	add    ebx,0x1
   140002499:	mov    r9d,0x104
   14000249f:	mov    r8,rdi
   1400024a2:	mov    rcx,r15
   1400024a5:	mov    edx,ebx
   1400024a7:	mov    QWORD PTR [rsp+0x20],r13
   1400024ac:	call   QWORD PTR [rip+0x6223e]        # 0x1400646f0
   1400024b2:	cmp    ebx,ebp
   1400024b4:	jl     0x140002470
   1400024b6:	test   rsi,rsi
   1400024b9:	je     0x1400024cf
   1400024bb:	lea    r8,[rip+0x62e86]        # 0x140065348
   1400024c2:	mov    edx,0x104
   1400024c7:	mov    rcx,rsi
   1400024ca:	call   0x140047080
   1400024cf:	lea    r8,[rip+0x62f2a]        # 0x140065400
   1400024d6:	lea    rcx,[rsp+0x33a0]
   1400024de:	mov    edx,0x104
   1400024e3:	call   0x140047080
   1400024e8:	lea    r8,[rsp+0x35b0]
   1400024f0:	lea    rcx,[rsp+0x2b60]
   1400024f8:	mov    edx,0x104
   1400024fd:	call   0x140047080
   140002502:	mov    esi,0x1
   140002507:	movsxd rbp,ebp
   14000250a:	cmp    rbp,rsi
   14000250d:	jle    0x1400026d4
   140002513:	lea    rbx,[rsp+0x474]
   14000251b:	add    rbp,0xffffffffffffffff
   14000251f:	nop
   140002520:	movsxd rax,esi
   140002523:	lea    rcx,[rsp+0x3190]
   14000252b:	mov    edx,0x104
   140002530:	imul   rax,rax,0x208
   140002537:	lea    r12,[rsp+rax*1+0x35b0]
   14000253f:	mov    r8,r12
   140002542:	call   0x140047080
   140002547:	lea    rcx,[rsp+0x3190]
   14000254f:	mov    edx,0x104
   140002554:	call   0x140046a70
   140002559:	lea    rdx,[rsp+0x33a0]
   140002561:	lea    rcx,[rsp+0x3190]
   140002569:	call   0x140046660
   14000256e:	test   rax,rax
   140002571:	mov    r11,rax
   140002574:	je     0x1400026c0
   14000257a:	or     rcx,0xffffffffffffffff
   14000257e:	xor    eax,eax
   140002580:	lea    rdi,[rsp+0x33a0]
   140002588:	repnz scas ax,WORD PTR es:[rdi]
   14000258b:	mov    edx,0x104
   140002590:	not    rcx
   140002593:	lea    r8,[r11+rcx*2]
   140002597:	lea    rcx,[rsp+0x2d70]
   14000259f:	call   0x140047080
   1400025a4:	lea    rdx,[rip+0x62e4d]        # 0x1400653f8
   1400025ab:	lea    rcx,[rsp+0x2d70]
   1400025b3:	call   0x140046660
   1400025b8:	test   rax,rax
   1400025bb:	mov    r13,rax
   1400025be:	je     0x140002662
   1400025c4:	lea    rax,[rsp+0x2d70]
   1400025cc:	lea    r8,[rsp+0x2d70]
   1400025d4:	lea    rcx,[rsp+0x2f80]
   1400025dc:	sub    r13,rax
   1400025df:	mov    edx,0x104
   1400025e4:	sar    r13,1
   1400025e7:	mov    r9,r13
   1400025ea:	call   0x140047200
   1400025ef:	lea    rdx,[rsp+0x40]
   1400025f4:	lea    rcx,[rsp+0x2f80]
   1400025fc:	mov    r8d,0xa
   140002602:	call   0x1400476d0
   140002607:	or     rcx,0xffffffffffffffff
   14000260b:	lea    rdi,[rsp+0x2d70]
   140002613:	mov    DWORD PTR [rbx-0x4],eax
   140002616:	xor    eax,eax
   140002618:	lea    r8,[rsp+r13*2+0x2d72]
   140002620:	repnz scas ax,WORD PTR es:[rdi]
   140002623:	mov    edx,0x104
   140002628:	not    rcx
   14000262b:	lea    r9,[rcx-0x1]
   14000262f:	lea    rcx,[rsp+0x2f80]
   140002637:	sub    r9,r13
   14000263a:	add    r9,0xffffffffffffffff
   14000263e:	call   0x140047200
   140002643:	lea    rdx,[rsp+0x40]
   140002648:	lea    rcx,[rsp+0x2f80]
   140002650:	mov    r8d,0xa
   140002656:	call   0x1400476d0
   14000265b:	xor    r13d,r13d
   14000265e:	mov    DWORD PTR [rbx],eax
   140002660:	jmp    0x140002683
   140002662:	lea    rdx,[rsp+0x40]
   140002667:	lea    rcx,[rsp+0x2d70]
   14000266f:	mov    r8d,0xa
   140002675:	call   0x1400476d0
   14000267a:	xor    r13d,r13d
   14000267d:	mov    DWORD PTR [rbx-0x4],eax
   140002680:	mov    DWORD PTR [rbx],r13d
   140002683:	lea    eax,[rsi-0x1]
   140002686:	mov    r8,r12
   140002689:	mov    edx,0x104
   14000268e:	movsxd rdi,eax
   140002691:	imul   rdi,rdi,0x418
   140002698:	lea    rcx,[rsp+rdi*1+0x268]
   1400026a0:	call   0x140047080
   1400026a5:	lea    rcx,[rsp+rdi*1+0x60]
   1400026aa:	lea    r8,[rsp+0x2d70]
   1400026b2:	mov    edx,0x104
   1400026b7:	call   0x140047080
   1400026bc:	add    r14d,0x1
   1400026c0:	add    esi,0x1
   1400026c3:	add    rbx,0x418
   1400026ca:	sub    rbp,0x1
   1400026ce:	jne    0x140002520
   1400026d4:	test   r14d,r14d
   1400026d7:	mov    esi,r13d
   1400026da:	mov    r12d,r13d
   1400026dd:	mov    ebx,r13d
   1400026e0:	mov    rbp,r13
   1400026e3:	movsxd r13,r14d
   1400026e6:	jle    0x14000290a
   1400026ec:	lea    rdi,[rsp+0x470]
   1400026f4:	data16 data16 xchg ax,ax
   1400026f8:	data16 data16 xchg ax,ax
   1400026fc:	data16 data16 xchg ax,ax
   140002700:	mov    eax,DWORD PTR [rip+0x860fa]        # 0x140088800
   140002706:	cmp    DWORD PTR [rdi],eax
   140002708:	jne    0x1400027df
   14000270e:	mov    eax,DWORD PTR [rip+0x860f0]        # 0x140088804
   140002714:	cmp    DWORD PTR [rdi+0x4],eax
   140002717:	jne    0x1400027df
   14000271d:	lea    r8,[rsp+0x2b60]
   140002725:	lea    rcx,[rsp+0x2950]
   14000272d:	mov    edx,0x104
   140002732:	call   0x140047080
   140002737:	lea    r8,[rip+0x62cba]        # 0x1400653f8
   14000273e:	lea    rcx,[rsp+0x2950]
   140002746:	mov    edx,0x104
   14000274b:	call   0x140047130
   140002750:	movsxd rdx,ebx
   140002753:	lea    rcx,[rsp+0x2950]
   14000275b:	imul   rdx,rdx,0x418
   140002762:	lea    r8,[rsp+rdx*1+0x268]
   14000276a:	mov    edx,0x104
   14000276f:	call   0x140047130
   140002774:	mov    r14,QWORD PTR [rsp+0x38]
   140002779:	lea    rdx,[rsp+0x2950]
   140002781:	mov    rcx,r14
   140002784:	mov    r9,r15
   140002787:	xor    r8d,r8d
   14000278a:	call   QWORD PTR [rip+0x61f68]        # 0x1400646f8
   140002790:	test   eax,eax
   140002792:	je     0x1400027e4
   140002794:	lea    r8,[rip+0x62c5d]        # 0x1400653f8
   14000279b:	lea    rcx,[rsp+0x2b60]
   1400027a3:	mov    edx,0x104
   1400027a8:	call   0x140047130
   1400027ad:	movsxd rdx,ebx
   1400027b0:	lea    rcx,[rsp+0x2b60]
   1400027b8:	imul   rdx,rdx,0x418
   1400027bf:	lea    r8,[rsp+rdx*1+0x268]
   1400027c7:	mov    edx,0x104
   1400027cc:	call   0x140047130
   1400027d1:	lea    edi,[rbx+0x1]
   1400027d4:	mov    r14d,0x1
   1400027da:	jmp    0x140002918
   1400027df:	mov    r14,QWORD PTR [rsp+0x38]
   1400027e4:	mov    eax,DWORD PTR [rdi]
   1400027e6:	cmp    eax,esi
   1400027e8:	jg     0x1400027fa
   1400027ea:	jne    0x1400028a5
   1400027f0:	cmp    DWORD PTR [rdi+0x4],r12d
   1400027f4:	jle    0x1400028a5
   1400027fa:	mov    ecx,DWORD PTR [rip+0x86000]        # 0x140088800
   140002800:	cmp    eax,ecx
   140002802:	jl     0x140002819
   140002804:	jne    0x1400028a5
   14000280a:	mov    eax,DWORD PTR [rip+0x85ff4]        # 0x140088804
   140002810:	cmp    DWORD PTR [rdi+0x4],eax
   140002813:	jge    0x1400028a5
   140002819:	lea    r8,[rsp+0x2b60]
   140002821:	lea    rcx,[rsp+0x2950]
   140002829:	mov    edx,0x104
   14000282e:	call   0x140047080
   140002833:	lea    r8,[rip+0x62bbe]        # 0x1400653f8
   14000283a:	lea    rcx,[rsp+0x2950]
   140002842:	mov    edx,0x104
   140002847:	call   0x140047130
   14000284c:	movsxd rdx,ebx
   14000284f:	lea    rcx,[rsp+0x2950]
   140002857:	imul   rdx,rdx,0x418
   14000285e:	lea    r8,[rsp+rdx*1+0x268]
   140002866:	mov    edx,0x104
   14000286b:	call   0x140047130
   140002870:	lea    rdx,[rsp+0x2950]
   140002878:	mov    r9,r15
   14000287b:	xor    r8d,r8d
   14000287e:	mov    rcx,r14
   140002881:	call   QWORD PTR [rip+0x61e71]        # 0x1400646f8
   140002887:	test   eax,eax
   140002889:	je     0x1400028a5
   14000288b:	mov    esi,DWORD PTR [rdi]
   14000288d:	mov    r12d,DWORD PTR [rdi+0x4]
   140002891:	lea    eax,[rbx+0x1]
   140002894:	mov    r14d,0x1
   14000289a:	mov    DWORD PTR [rsp+0x34],eax
   14000289e:	mov    DWORD PTR [rsp+0x30],r14d
   1400028a3:	jmp    0x1400028aa
   1400028a5:	mov    r14d,DWORD PTR [rsp+0x30]
   1400028aa:	add    rbp,0x1
   1400028ae:	add    ebx,0x1
   1400028b1:	add    rdi,0x418
   1400028b8:	cmp    rbp,r13
   1400028bb:	jl     0x140002700
   1400028c1:	test   r14d,r14d
   1400028c4:	je     0x140002914
   1400028c6:	lea    r8,[rip+0x62b2b]        # 0x1400653f8
   1400028cd:	lea    rcx,[rsp+0x2b60]
   1400028d5:	mov    edx,0x104
   1400028da:	call   0x140047130
   1400028df:	movsxd rdi,DWORD PTR [rsp+0x34]
   1400028e4:	lea    rcx,[rsp+0x2b60]
   1400028ec:	mov    rdx,rdi
   1400028ef:	imul   rdx,rdx,0x208
   1400028f6:	lea    r8,[rsp+rdx*1+0x35b0]
   1400028fe:	mov    edx,0x104
   140002903:	call   0x140047130
   140002908:	jmp    0x140002918
   14000290a:	mov    r14d,DWORD PTR [rsp+0x30]
   14000290f:	mov    edi,r14d
   140002912:	jmp    0x140002918
   140002914:	mov    edi,DWORD PTR [rsp+0x34]
   140002918:	lea    r8,[rsp+0x2b60]
   140002920:	lea    rcx,[rsp+0x2950]
   140002928:	mov    edx,0x104
   14000292d:	call   0x140047080
   140002932:	mov    rbx,QWORD PTR [rsp+0x38]
   140002937:	lea    rdx,[rsp+0x2950]
   14000293f:	mov    rcx,rbx
   140002942:	mov    r9,r15
   140002945:	xor    r8d,r8d
   140002948:	call   QWORD PTR [rip+0x61daa]        # 0x1400646f8
   14000294e:	test   eax,eax
   140002950:	jne    0x140002987
   140002952:	lea    r8,[rsp+0x35b0]
   14000295a:	lea    rcx,[rsp+0x2950]
   140002962:	mov    edx,0x104
   140002967:	call   0x140047080
   14000296c:	lea    rdx,[rsp+0x2950]
   140002974:	mov    r9,r15
   140002977:	xor    r8d,r8d
   14000297a:	mov    rcx,rbx
   14000297d:	call   QWORD PTR [rip+0x61d75]        # 0x1400646f8
   140002983:	test   eax,eax
   140002985:	je     0x1400029ce
   140002987:	mov    rcx,QWORD PTR [rsp+0x50]
   14000298c:	test   rcx,rcx
   14000298f:	je     0x1400029b2
   140002991:	test   r14d,r14d
   140002994:	je     0x1400029b2
   140002996:	movsxd rax,edi
   140002999:	mov    edx,0x104
   14000299e:	imul   rax,rax,0x208
   1400029a5:	lea    r8,[rsp+rax*1+0x35b0]
   1400029ad:	call   0x140047080
   1400029b2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400029b7:	lea    r8,[rsp+0x2950]
   1400029bf:	mov    edx,0x104
   1400029c4:	call   0x140047080
   1400029c9:	mov    eax,0x1
   1400029ce:	mov    rcx,QWORD PTR [rsp+0x4a00]
   1400029d6:	xor    rcx,rsp
   1400029d9:	call   0x140046470
   1400029de:	mov    rbx,QWORD PTR [rsp+0x4a50]
   1400029e6:	add    rsp,0x4a10
   1400029ed:	pop    r15
   1400029ef:	pop    r14
   1400029f1:	pop    r13
   1400029f3:	pop    r12
   1400029f5:	pop    rdi
   1400029f6:	pop    rsi
   1400029f7:	pop    rbp
   1400029f8:	ret    
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	mov    QWORD PTR [rsp+0x10],rbx
   140002a05:	push   rsi
   140002a06:	sub    rsp,0x380
   140002a0d:	mov    rax,QWORD PTR [rip+0x8435c]        # 0x140086d70
   140002a14:	xor    rax,rsp
   140002a17:	mov    QWORD PTR [rsp+0x370],rax
   140002a1f:	xor    esi,esi
   140002a21:	lea    rcx,[rsp+0x72]
   140002a26:	xor    edx,edx
   140002a28:	mov    r8d,0xfe
   140002a2e:	mov    QWORD PTR [rsp+0x48],rsi
   140002a33:	mov    DWORD PTR [rsp+0x40],esi
   140002a37:	mov    WORD PTR [rsp+0x70],si
   140002a3c:	call   0x140047720
   140002a41:	lea    r9d,[rsi+0x6]
   140002a45:	lea    rdx,[rip+0x629dc]        # 0x140065428
   140002a4c:	xor    r8d,r8d
   140002a4f:	xor    ecx,ecx
   140002a51:	call   QWORD PTR [rip+0x61cc9]        # 0x140064720
   140002a57:	cmp    rax,0xffffffffffffffff
   140002a5b:	mov    rbx,rax
   140002a5e:	jne    0x140002a67
   140002a60:	xor    eax,eax
   140002a62:	jmp    0x140002b4c
   140002a67:	lea    r8,[rsp+0x50]
   140002a6c:	xor    edx,edx
   140002a6e:	mov    rcx,rax
   140002a71:	mov    QWORD PTR [rsp+0x390],rdi
   140002a79:	mov    DWORD PTR [rsp+0x50],0x20
   140002a81:	mov    edi,esi
   140002a83:	call   QWORD PTR [rip+0x61c9f]        # 0x140064728
   140002a89:	test   eax,eax
   140002a8b:	je     0x140002b39
   140002a91:	lea    r8,[rsp+0x170]
   140002a99:	lea    rdx,[rsp+0x50]
   140002a9e:	mov    r9d,0x100
   140002aa4:	mov    rcx,rbx
   140002aa7:	mov    QWORD PTR [rsp+0x20],rsi
   140002aac:	call   QWORD PTR [rip+0x61c7e]        # 0x140064730
   140002ab2:	lea    r11,[rsp+0x40]
   140002ab7:	lea    r9,[rsp+0x48]
   140002abc:	lea    rdx,[rsp+0x50]
   140002ac1:	mov    r8d,0x4
   140002ac7:	mov    rcx,rbx
   140002aca:	mov    QWORD PTR [rsp+0x20],r11
   140002acf:	call   0x140001c30
   140002ad4:	test   eax,eax
   140002ad6:	je     0x140002b1e
   140002ad8:	mov    rcx,QWORD PTR [rsp+0x48]
   140002add:	lea    rdx,[rip+0x6292c]        # 0x140065410
   140002ae4:	call   0x140046660
   140002ae9:	test   rax,rax
   140002aec:	je     0x140002b1e
   140002aee:	xor    r9d,r9d
   140002af1:	lea    rax,[rsp+0x70]
   140002af6:	mov    QWORD PTR [rsp+0x30],rsi
   140002afb:	lea    rdx,[rsp+0x50]
   140002b00:	lea    r8d,[r9+0x9]
   140002b04:	mov    rcx,rbx
   140002b07:	mov    DWORD PTR [rsp+0x28],0x80
   140002b0f:	mov    QWORD PTR [rsp+0x20],rax
   140002b14:	call   QWORD PTR [rip+0x61c2e]        # 0x140064748
   140002b1a:	test   eax,eax
   140002b1c:	jne    0x140002b6d
   140002b1e:	add    edi,0x1
   140002b21:	lea    r8,[rsp+0x50]
   140002b26:	mov    rcx,rbx
   140002b29:	mov    edx,edi
   140002b2b:	call   QWORD PTR [rip+0x61bf7]        # 0x140064728
   140002b31:	test   eax,eax
   140002b33:	jne    0x140002a91
   140002b39:	mov    rcx,rbx
   140002b3c:	call   QWORD PTR [rip+0x61bf6]        # 0x140064738
   140002b42:	xor    eax,eax
   140002b44:	mov    rdi,QWORD PTR [rsp+0x390]
   140002b4c:	mov    rcx,QWORD PTR [rsp+0x370]
   140002b54:	xor    rcx,rsp
   140002b57:	call   0x140046470
   140002b5c:	mov    rbx,QWORD PTR [rsp+0x398]
   140002b64:	add    rsp,0x380
   140002b6b:	pop    rsi
   140002b6c:	ret    
   140002b6d:	mov    rcx,rbx
   140002b70:	call   QWORD PTR [rip+0x61bc2]        # 0x140064738
   140002b76:	mov    eax,0x1
   140002b7b:	jmp    0x140002b44
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    QWORD PTR [rsp+0x18],rbx
   140002b85:	mov    QWORD PTR [rsp+0x20],rbp
   140002b8a:	push   rdi
   140002b8b:	push   r12
   140002b8d:	push   r13
   140002b8f:	sub    rsp,0x260
   140002b96:	mov    rax,QWORD PTR [rip+0x841d3]        # 0x140086d70
   140002b9d:	xor    rax,rsp
   140002ba0:	mov    QWORD PTR [rsp+0x250],rax
   140002ba8:	xor    r13d,r13d
   140002bab:	mov    rbp,rcx
   140002bae:	mov    r12,rdx
   140002bb1:	lea    rcx,[rip+0x62430]        # 0x140064fe8
   140002bb8:	lea    r9d,[r13+0x12]
   140002bbc:	xor    r8d,r8d
   140002bbf:	xor    edx,edx
   140002bc1:	mov    edi,r13d
   140002bc4:	call   QWORD PTR [rip+0x61b56]        # 0x140064720
   140002bca:	cmp    rax,0xffffffffffffffff
   140002bce:	mov    rbx,rax
   140002bd1:	je     0x140002c79
   140002bd7:	lea    r8,[rsp+0x30]
   140002bdc:	xor    edx,edx
   140002bde:	mov    rcx,rax
   140002be1:	mov    QWORD PTR [rsp+0x280],rsi
   140002be9:	mov    DWORD PTR [rsp+0x30],0x20
   140002bf1:	mov    esi,r13d
   140002bf4:	call   QWORD PTR [rip+0x61b2e]        # 0x140064728
   140002bfa:	test   eax,eax
   140002bfc:	je     0x140002c68
   140002bfe:	xchg   ax,ax
   140002c00:	lea    r8,[rsp+0x50]
   140002c05:	lea    rdx,[rsp+0x30]
   140002c0a:	mov    r9d,0x100
   140002c10:	mov    rcx,rbx
   140002c13:	mov    QWORD PTR [rsp+0x20],r13
   140002c18:	call   QWORD PTR [rip+0x61b12]        # 0x140064730
   140002c1e:	lea    rcx,[rsp+0x50]
   140002c23:	call   QWORD PTR [rip+0x61ef7]        # 0x140064b20
   140002c29:	lea    rcx,[rsp+0x50]
   140002c2e:	mov    rdx,r12
   140002c31:	call   0x140046660
   140002c36:	test   rax,rax
   140002c39:	je     0x140002c51
   140002c3b:	lea    r8,[rsp+0x30]
   140002c40:	mov    rdx,rbx
   140002c43:	mov    rcx,rbp
   140002c46:	call   0x1400016c0
   140002c4b:	test   eax,eax
   140002c4d:	mov    edi,eax
   140002c4f:	jne    0x140002c68
   140002c51:	add    esi,0x1
   140002c54:	lea    r8,[rsp+0x30]
   140002c59:	mov    rcx,rbx
   140002c5c:	mov    edx,esi
   140002c5e:	call   QWORD PTR [rip+0x61ac4]        # 0x140064728
   140002c64:	test   eax,eax
   140002c66:	jne    0x140002c00
   140002c68:	mov    rcx,rbx
   140002c6b:	call   QWORD PTR [rip+0x61ac7]        # 0x140064738
   140002c71:	mov    rsi,QWORD PTR [rsp+0x280]
   140002c79:	mov    eax,edi
   140002c7b:	mov    rcx,QWORD PTR [rsp+0x250]
   140002c83:	xor    rcx,rsp
   140002c86:	call   0x140046470
   140002c8b:	lea    r11,[rsp+0x260]
   140002c93:	mov    rbx,QWORD PTR [r11+0x30]
   140002c97:	mov    rbp,QWORD PTR [r11+0x38]
   140002c9b:	mov    rsp,r11
   140002c9e:	pop    r13
   140002ca0:	pop    r12
   140002ca2:	pop    rdi
   140002ca3:	ret    
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cb5:	push   rdi
   140002cb6:	sub    rsp,0x20
   140002cba:	mov    rax,QWORD PTR [rcx]
   140002cbd:	mov    rbx,rcx
   140002cc0:	cmp    DWORD PTR [rax-0x10],0x0
   140002cc4:	mov    rdi,QWORD PTR [rax-0x18]
   140002cc8:	lea    rdx,[rax-0x18]
   140002ccc:	je     0x140002d27
   140002cce:	cmp    DWORD PTR [rdx+0x10],0x0
   140002cd2:	jge    0x140002cff
   140002cd4:	cmp    DWORD PTR [rax-0xc],0x0
   140002cd8:	jge    0x140002ce5
   140002cda:	mov    ecx,0x80070057
   140002cdf:	call   0x140001430
   140002ce4:	int3   
   140002ce5:	mov    DWORD PTR [rax-0x10],0x0
   140002cec:	mov    rax,QWORD PTR [rcx]
   140002cef:	mov    WORD PTR [rax],0x0
   140002cf4:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cf9:	add    rsp,0x20
   140002cfd:	pop    rdi
   140002cfe:	ret    
   140002cff:	or     eax,0xffffffff
   140002d02:	lock xadd DWORD PTR [rdx+0x10],eax
   140002d07:	add    eax,0xffffffff
   140002d0a:	test   eax,eax
   140002d0c:	jg     0x140002d17
   140002d0e:	mov    rcx,QWORD PTR [rdx]
   140002d11:	mov    rax,QWORD PTR [rcx]
   140002d14:	call   QWORD PTR [rax+0x8]
   140002d17:	mov    rax,QWORD PTR [rdi]
   140002d1a:	mov    rcx,rdi
   140002d1d:	call   QWORD PTR [rax+0x18]
   140002d20:	add    rax,0x18
   140002d24:	mov    QWORD PTR [rbx],rax
   140002d27:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d2c:	add    rsp,0x20
   140002d30:	pop    rdi
   140002d31:	ret    
   140002d32:	int3   
   140002d33:	int3   
   140002d34:	int3   
   140002d35:	int3   
   140002d36:	int3   
   140002d37:	int3   
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	sub    rsp,0x28
   140002d44:	mov    r8d,edx
   140002d47:	mov    rdx,QWORD PTR [rcx]
   140002d4a:	mov    eax,DWORD PTR [rdx-0x10]
   140002d4d:	cmp    eax,r8d
   140002d50:	cmovg  r8d,eax
   140002d54:	cmp    DWORD PTR [rdx-0x8],0x1
   140002d58:	jle    0x140002d66
   140002d5a:	mov    edx,r8d
   140002d5d:	add    rsp,0x28
   140002d61:	jmp    0x1400021b0
   140002d66:	mov    edx,DWORD PTR [rdx-0xc]
   140002d69:	cmp    edx,r8d
   140002d6c:	jge    0x140002d9a
   140002d6e:	cmp    edx,0x400
   140002d74:	jle    0x140002d8c
   140002d76:	add    edx,0x400
   140002d7c:	cmp    edx,r8d
   140002d7f:	cmovl  edx,r8d
   140002d83:	add    rsp,0x28
   140002d87:	jmp    0x140002260
   140002d8c:	add    edx,edx
   140002d8e:	cmp    edx,r8d
   140002d91:	cmovl  edx,r8d
   140002d95:	call   0x140002260
   140002d9a:	add    rsp,0x28
   140002d9e:	ret    
   140002d9f:	int3   
   140002da0:	mov    QWORD PTR [rsp+0x8],rbx
   140002da5:	push   rdi
   140002da6:	sub    rsp,0x20
   140002daa:	mov    rbx,rcx
   140002dad:	mov    rcx,QWORD PTR [rcx]
   140002db0:	mov    rax,QWORD PTR [rcx]
   140002db3:	call   QWORD PTR [rax+0x20]
   140002db6:	cmp    DWORD PTR [rbx+0x10],0x0
   140002dba:	mov    rcx,rax
   140002dbd:	jl     0x140002dda
   140002dbf:	cmp    rax,QWORD PTR [rbx]
   140002dc2:	jne    0x140002dda
   140002dc4:	mov    rdi,rbx
   140002dc7:	lock add DWORD PTR [rbx+0x10],0x1
   140002dcc:	mov    rax,rbx
   140002dcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140002dd4:	add    rsp,0x20
   140002dd8:	pop    rdi
   140002dd9:	ret    
   140002dda:	mov    rax,QWORD PTR [rax]
   140002ddd:	mov    edx,DWORD PTR [rbx+0x8]
   140002de0:	mov    r8d,0x2
   140002de6:	call   QWORD PTR [rax]
   140002de8:	test   rax,rax
   140002deb:	mov    rdi,rax
   140002dee:	jne    0x140002df6
   140002df0:	call   0x1400021a0
   140002df5:	int3   
   140002df6:	mov    eax,DWORD PTR [rbx+0x8]
   140002df9:	lea    r8,[rbx+0x18]
   140002dfd:	lea    rcx,[rdi+0x18]
   140002e01:	mov    DWORD PTR [rdi+0x8],eax
   140002e04:	mov    eax,DWORD PTR [rbx+0x8]
   140002e07:	add    eax,0x1
   140002e0a:	movsxd rdx,eax
   140002e0d:	add    rdx,rdx
   140002e10:	mov    r9,rdx
   140002e13:	call   0x1400466d0
   140002e18:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e1d:	mov    rax,rdi
   140002e20:	add    rsp,0x20
   140002e24:	pop    rdi
   140002e25:	ret    
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	rex push rbx
   140002e32:	sub    rsp,0x20
   140002e36:	mov    rbx,rcx
   140002e39:	call   0x14002b874
   140002e3e:	test   rax,rax
   140002e41:	mov    rcx,rax
   140002e44:	jne    0x140002e51
   140002e46:	mov    ecx,0x80004005
   140002e4b:	call   0x140001430
   140002e50:	int3   
   140002e51:	mov    rax,QWORD PTR [rax]
   140002e54:	call   QWORD PTR [rax+0x18]
   140002e57:	add    rax,0x18
   140002e5b:	mov    QWORD PTR [rbx],rax
   140002e5e:	mov    rax,rbx
   140002e61:	add    rsp,0x20
   140002e65:	pop    rbx
   140002e66:	ret    
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	int3   
   140002e6d:	int3   
   140002e6e:	int3   
   140002e6f:	int3   
   140002e70:	mov    edx,0x8
   140002e75:	lea    r9,[rip+0xffffffffffffe244]        # 0x1400010c0
   140002e7c:	lea    r8d,[rdx+0x5c]
   140002e80:	jmp    0x140045b20
   140002e85:	int3   
   140002e86:	int3   
   140002e87:	int3   
   140002e88:	int3   
   140002e89:	int3   
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	int3   
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	mov    QWORD PTR [rsp+0x8],rbx
   140002e95:	mov    QWORD PTR [rsp+0x10],rbp
   140002e9a:	mov    QWORD PTR [rsp+0x18],rsi
   140002e9f:	mov    QWORD PTR [rsp+0x20],rdi
   140002ea4:	push   r12
   140002ea6:	sub    rsp,0x20
   140002eaa:	xor    r12d,r12d
   140002ead:	lea    rsi,[rcx+0x320]
   140002eb4:	mov    rbp,rdx
   140002eb7:	cmp    DWORD PTR [rsi],r12d
   140002eba:	mov    rbx,rcx
   140002ebd:	mov    edi,r12d
   140002ec0:	jle    0x140002efc
   140002ec2:	mov    rdx,QWORD PTR [rbp+0x0]
   140002ec6:	test   rdx,rdx
   140002ec9:	je     0x140002ee9
   140002ecb:	mov    rcx,QWORD PTR [rbx]
   140002ece:	cmp    DWORD PTR [rcx-0x10],r12d
   140002ed2:	jl     0x140002ee9
   140002ed4:	call   0x140046660
   140002ed9:	test   rax,rax
   140002edc:	je     0x140002ee9
   140002ede:	sub    rax,QWORD PTR [rbx]
   140002ee1:	sar    rax,1
   140002ee4:	cmp    eax,0xffffffff
   140002ee7:	jne    0x140002ef6
   140002ee9:	add    edi,0x1
   140002eec:	add    rbx,0x8
   140002ef0:	cmp    edi,DWORD PTR [rsi]
   140002ef2:	jl     0x140002ec2
   140002ef4:	jmp    0x140002efc
   140002ef6:	mov    r12d,0x1
   140002efc:	mov    rdx,QWORD PTR [rbp+0x0]
   140002f00:	sub    rdx,0x18
   140002f04:	or     ecx,0xffffffff
   140002f07:	lock xadd DWORD PTR [rdx+0x10],ecx
   140002f0c:	add    ecx,0xffffffff
   140002f0f:	test   ecx,ecx
   140002f11:	jg     0x140002f1d
   140002f13:	mov    rcx,QWORD PTR [rdx]
   140002f16:	mov    r8,QWORD PTR [rcx]
   140002f19:	call   QWORD PTR [r8+0x8]
   140002f1d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f22:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f27:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f2c:	mov    rdi,QWORD PTR [rsp+0x48]
   140002f31:	mov    eax,r12d
   140002f34:	add    rsp,0x20
   140002f38:	pop    r12
   140002f3a:	ret    
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    rax,rsp
   140002f43:	mov    QWORD PTR [rax+0x8],rcx
   140002f47:	push   rdi
   140002f48:	sub    rsp,0x60
   140002f4c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002f55:	mov    QWORD PTR [rax+0x10],rbx
   140002f59:	mov    QWORD PTR [rax+0x18],rsi
   140002f5d:	mov    rsi,rcx
   140002f60:	lea    rcx,[rax-0x40]
   140002f64:	call   0x14002bda0
   140002f69:	nop
   140002f6a:	xor    edi,edi
   140002f6c:	xor    r8d,r8d
   140002f6f:	mov    rdx,QWORD PTR [rsi]
   140002f72:	lea    rcx,[rsp+0x28]
   140002f77:	call   0x14002bec0
   140002f7c:	test   eax,eax
   140002f7e:	je     0x140002fa9
   140002f80:	lea    rcx,[rsp+0x28]
   140002f85:	call   0x14002b9ec
   140002f8a:	mov    ebx,eax
   140002f8c:	mov    edx,0x10
   140002f91:	lea    rcx,[rsp+0x28]
   140002f96:	mov    r8,QWORD PTR [rsp+0x28]
   140002f9b:	call   QWORD PTR [r8+0x70]
   140002f9f:	mov    edi,eax
   140002fa1:	test   eax,eax
   140002fa3:	jne    0x140002fa9
   140002fa5:	test   ebx,ebx
   140002fa7:	jne    0x140002f80
   140002fa9:	lea    rcx,[rsp+0x28]
   140002fae:	call   0x14002b918
   140002fb3:	nop
   140002fb4:	lea    rcx,[rsp+0x28]
   140002fb9:	call   0x14002bdf8
   140002fbe:	nop
   140002fbf:	mov    rdx,QWORD PTR [rsi]
   140002fc2:	sub    rdx,0x18
   140002fc6:	or     eax,0xffffffff
   140002fc9:	lock xadd DWORD PTR [rdx+0x10],eax
   140002fce:	add    eax,0xffffffff
   140002fd1:	test   eax,eax
   140002fd3:	jg     0x140002fe2
   140002fd5:	mov    rcx,QWORD PTR [rdx]
   140002fd8:	mov    rax,QWORD PTR [rcx]
   140002fdb:	call   QWORD PTR [rax+0x8]
   140002fde:	mov    eax,edi
   140002fe0:	jmp    0x140002fe4
   140002fe2:	mov    eax,edi
   140002fe4:	mov    rbx,QWORD PTR [rsp+0x78]
   140002fe9:	mov    rsi,QWORD PTR [rsp+0x80]
   140002ff1:	add    rsp,0x60
   140002ff5:	pop    rdi
   140002ff6:	ret    
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	rex push rbp
   140003002:	sub    rsp,0x20
   140003006:	mov    rbp,rdx
   140003009:	mov    rcx,QWORD PTR [rbp+0x70]
   14000300d:	call   0x1400010c0
   140003012:	add    rsp,0x20
   140003016:	pop    rbp
   140003017:	ret    
   140003018:	int3   
   140003019:	int3   
   14000301a:	int3   
   14000301b:	int3   
   14000301c:	int3   
   14000301d:	int3   
   14000301e:	int3   
   14000301f:	int3   
   140003020:	rex push rbp
   140003022:	sub    rsp,0x20
   140003026:	mov    rbp,rdx
   140003029:	lea    rcx,[rbp+0x28]
   14000302d:	call   0x14002bdf8
   140003032:	add    rsp,0x20
   140003036:	pop    rbp
   140003037:	ret    
   140003038:	int3   
   140003039:	int3   
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	mov    QWORD PTR [rsp+0x18],rbx
   140003045:	push   rdi
   140003046:	sub    rsp,0x270
   14000304d:	mov    rax,QWORD PTR [rip+0x83d1c]        # 0x140086d70
   140003054:	xor    rax,rsp
   140003057:	mov    QWORD PTR [rsp+0x260],rax
   14000305f:	mov    rdi,rdx
   140003062:	mov    rdx,QWORD PTR [rdx]
   140003065:	lea    rax,[rsp+0x48]
   14000306a:	xor    ebx,ebx
   14000306c:	mov    r9d,0xf003f
   140003072:	xor    r8d,r8d
   140003075:	mov    DWORD PTR [rsp+0x40],ebx
   140003079:	mov    QWORD PTR [rsp+0x20],rax
   14000307e:	call   QWORD PTR [rip+0x60fd4]        # 0x140064058
   140003084:	test   eax,eax
   140003086:	jne    0x1400030d3
   140003088:	mov    rcx,QWORD PTR [rsp+0x48]
   14000308d:	mov    QWORD PTR [rsp+0x38],rbx
   140003092:	mov    QWORD PTR [rsp+0x30],rbx
   140003097:	lea    r9,[rsp+0x40]
   14000309c:	lea    r8,[rsp+0x50]
   1400030a1:	xor    edx,edx
   1400030a3:	mov    QWORD PTR [rsp+0x28],rbx
   1400030a8:	mov    DWORD PTR [rsp+0x40],0x208
   1400030b0:	mov    QWORD PTR [rsp+0x20],rbx
   1400030b5:	call   QWORD PTR [rip+0x60fa5]        # 0x140064060
   1400030bb:	mov    ecx,0x1
   1400030c0:	cmp    eax,0x103
   1400030c5:	cmove  ebx,ecx
   1400030c8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400030cd:	call   QWORD PTR [rip+0x60f95]        # 0x140064068
   1400030d3:	mov    rdx,QWORD PTR [rdi]
   1400030d6:	sub    rdx,0x18
   1400030da:	or     ecx,0xffffffff
   1400030dd:	lock xadd DWORD PTR [rdx+0x10],ecx
   1400030e2:	add    ecx,0xffffffff
   1400030e5:	test   ecx,ecx
   1400030e7:	jg     0x1400030f3
   1400030e9:	mov    rcx,QWORD PTR [rdx]
   1400030ec:	mov    r8,QWORD PTR [rcx]
   1400030ef:	call   QWORD PTR [r8+0x8]
   1400030f3:	mov    eax,ebx
   1400030f5:	mov    rcx,QWORD PTR [rsp+0x260]
   1400030fd:	xor    rcx,rsp
   140003100:	call   0x140046470
   140003105:	mov    rbx,QWORD PTR [rsp+0x290]
   14000310d:	add    rsp,0x270
   140003114:	pop    rdi
   140003115:	ret    
   140003116:	int3   
   140003117:	int3   
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	mov    QWORD PTR [rsp+0x8],rbx
   140003125:	mov    QWORD PTR [rsp+0x10],rsi
   14000312a:	push   rdi
   14000312b:	sub    rsp,0x20
   14000312f:	mov    rbx,QWORD PTR [rdx]
   140003132:	mov    rsi,rcx
   140003135:	mov    rcx,QWORD PTR [rbx-0x18]
   140003139:	mov    rax,QWORD PTR [rcx]
   14000313c:	call   QWORD PTR [rax+0x20]
   14000313f:	cmp    DWORD PTR [rbx-0x8],0x0
   140003143:	mov    rcx,rax
   140003146:	jl     0x140003159
   140003148:	cmp    rax,QWORD PTR [rbx-0x18]
   14000314c:	jne    0x140003159
   14000314e:	lea    rdi,[rbx-0x18]
   140003152:	lock add DWORD PTR [rbx-0x8],0x1
   140003157:	jmp    0x140003196
   140003159:	mov    rax,QWORD PTR [rax]
   14000315c:	mov    edx,DWORD PTR [rbx-0x10]
   14000315f:	mov    r8d,0x2
   140003165:	call   QWORD PTR [rax]
   140003167:	test   rax,rax
   14000316a:	mov    rdi,rax
   14000316d:	jne    0x140003175
   14000316f:	call   0x1400021a0
   140003174:	int3   
   140003175:	mov    eax,DWORD PTR [rbx-0x10]
   140003178:	lea    rcx,[rdi+0x18]
   14000317c:	mov    r8,rbx
   14000317f:	mov    DWORD PTR [rdi+0x8],eax
   140003182:	mov    eax,DWORD PTR [rbx-0x10]
   140003185:	add    eax,0x1
   140003188:	movsxd rdx,eax
   14000318b:	add    rdx,rdx
   14000318e:	mov    r9,rdx
   140003191:	call   0x1400466d0
   140003196:	mov    rbx,QWORD PTR [rsp+0x30]
   14000319b:	lea    rax,[rdi+0x18]
   14000319f:	mov    QWORD PTR [rsi],rax
   1400031a2:	mov    rax,rsi
   1400031a5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400031aa:	add    rsp,0x20
   1400031ae:	pop    rdi
   1400031af:	ret    
   1400031b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400031ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400031bf:	push   rdi
   1400031c0:	sub    rsp,0x20
   1400031c4:	mov    edi,r8d
   1400031c7:	xor    r8d,r8d
   1400031ca:	mov    ebx,r9d
   1400031cd:	test   edi,edi
   1400031cf:	mov    eax,0x7fffffff
   1400031d4:	mov    rsi,rdx
   1400031d7:	cmovs  edi,r8d
   1400031db:	test   r9d,r9d
   1400031de:	mov    rbp,rcx
   1400031e1:	cmovs  ebx,r8d
   1400031e5:	sub    eax,edi
   1400031e7:	mov    DWORD PTR [rsp+0x40],r8d
   1400031ec:	cmp    eax,ebx
   1400031ee:	jl     0x140003350
   1400031f4:	mov    rdx,QWORD PTR [rcx]
   1400031f7:	lea    eax,[rdi+rbx*1]
   1400031fa:	mov    ecx,DWORD PTR [rdx-0x10]
   1400031fd:	cmp    eax,ecx
   1400031ff:	jle    0x140003205
   140003201:	mov    ebx,ecx
   140003203:	sub    ebx,edi
   140003205:	cmp    edi,ecx
   140003207:	cmovg  ebx,r8d
   14000320b:	test   edi,edi
   14000320d:	jne    0x14000329d
   140003213:	cmp    ebx,ecx
   140003215:	jne    0x14000329d
   14000321b:	mov    rcx,QWORD PTR [rdx-0x18]
   14000321f:	lea    rbx,[rdx-0x18]
   140003223:	mov    rax,QWORD PTR [rcx]
   140003226:	call   QWORD PTR [rax+0x20]
   140003229:	cmp    DWORD PTR [rbx+0x10],edi
   14000322c:	mov    rcx,rax
   14000322f:	jl     0x140003240
   140003231:	cmp    rax,QWORD PTR [rbx]
   140003234:	jne    0x140003240
   140003236:	mov    rdi,rbx
   140003239:	lock add DWORD PTR [rbx+0x10],0x1
   14000323e:	jmp    0x14000327e
   140003240:	mov    rax,QWORD PTR [rax]
   140003243:	mov    edx,DWORD PTR [rbx+0x8]
   140003246:	mov    r8d,0x2
   14000324c:	call   QWORD PTR [rax]
   14000324e:	test   rax,rax
   140003251:	mov    rdi,rax
   140003254:	jne    0x14000325c
   140003256:	call   0x1400021a0
   14000325b:	int3   
   14000325c:	mov    eax,DWORD PTR [rbx+0x8]
   14000325f:	lea    r8,[rbx+0x18]
   140003263:	lea    rcx,[rdi+0x18]
   140003267:	mov    DWORD PTR [rdi+0x8],eax
   14000326a:	mov    eax,DWORD PTR [rbx+0x8]
   14000326d:	add    eax,0x1
   140003270:	movsxd rdx,eax
   140003273:	add    rdx,rdx
   140003276:	mov    r9,rdx
   140003279:	call   0x1400466d0
   14000327e:	lea    rax,[rdi+0x18]
   140003282:	mov    QWORD PTR [rsi],rax
   140003285:	mov    rbx,QWORD PTR [rsp+0x30]
   14000328a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000328f:	mov    rax,rsi
   140003292:	mov    rsi,QWORD PTR [rsp+0x48]
   140003297:	add    rsp,0x20
   14000329b:	pop    rdi
   14000329c:	ret    
   14000329d:	mov    rcx,QWORD PTR [rdx-0x18]
   1400032a1:	test   rcx,rcx
   1400032a4:	je     0x1400032b4
   1400032a6:	mov    rax,QWORD PTR [rcx]
   1400032a9:	call   QWORD PTR [rax+0x20]
   1400032ac:	test   rax,rax
   1400032af:	mov    r11,rax
   1400032b2:	jne    0x1400032c5
   1400032b4:	call   0x14002b874
   1400032b9:	mov    rcx,rax
   1400032bc:	mov    rdx,QWORD PTR [rax]
   1400032bf:	call   QWORD PTR [rdx+0x20]
   1400032c2:	mov    r11,rax
   1400032c5:	test   r11,r11
   1400032c8:	mov    rcx,QWORD PTR [rbp+0x0]
   1400032cc:	movsxd rdx,edi
   1400032cf:	lea    rdi,[rcx+rdx*2]
   1400032d3:	jne    0x1400032e0
   1400032d5:	mov    ecx,0x80004005
   1400032da:	call   0x140001430
   1400032df:	int3   
   1400032e0:	test   rdi,rdi
   1400032e3:	jne    0x1400032f4
   1400032e5:	test   ebx,ebx
   1400032e7:	je     0x1400032f4
   1400032e9:	mov    ecx,0x80070057
   1400032ee:	call   0x140001430
   1400032f3:	int3   
   1400032f4:	mov    rax,QWORD PTR [r11]
   1400032f7:	mov    r8d,0x2
   1400032fd:	mov    edx,ebx
   1400032ff:	mov    rcx,r11
   140003302:	call   QWORD PTR [rax]
   140003304:	test   rax,rax
   140003307:	jne    0x14000330f
   140003309:	call   0x1400021a0
   14000330e:	int3   
   14000330f:	add    rax,0x18
   140003313:	test   ebx,ebx
   140003315:	mov    QWORD PTR [rsi],rax
   140003318:	js     0x140003345
   14000331a:	cmp    ebx,DWORD PTR [rax-0xc]
   14000331d:	jg     0x140003345
   14000331f:	mov    DWORD PTR [rax-0x10],ebx
   140003322:	movsxd rax,ebx
   140003325:	mov    r8,rdi
   140003328:	lea    rdx,[rax+rax*1]
   14000332c:	mov    rax,QWORD PTR [rsi]
   14000332f:	mov    WORD PTR [rdx+rax*1],0x0
   140003335:	mov    rcx,QWORD PTR [rsi]
   140003338:	mov    r9,rdx
   14000333b:	call   0x1400466d0
   140003340:	jmp    0x140003285
   140003345:	mov    ecx,0x80070057
   14000334a:	call   0x140001430
   14000334f:	int3   
   140003350:	mov    ecx,0x80070057
   140003355:	call   0x140001430
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    QWORD PTR [rsp+0x10],rbx
   140003365:	push   rsi
   140003366:	push   rdi
   140003367:	push   r12
   140003369:	sub    rsp,0x20
   14000336d:	xor    eax,eax
   14000336f:	test   r8d,r8d
   140003372:	mov    rdi,rcx
   140003375:	mov    rcx,QWORD PTR [rcx]
   140003378:	mov    ebx,r8d
   14000337b:	mov    rsi,rdx
   14000337e:	movsxd r12,DWORD PTR [rcx-0x10]
   140003382:	cmovs  ebx,eax
   140003385:	mov    DWORD PTR [rsp+0x50],eax
   140003389:	cmp    ebx,r12d
   14000338c:	jl     0x140003424
   140003392:	lea    rbx,[rcx-0x18]
   140003396:	mov    rcx,QWORD PTR [rcx-0x18]
   14000339a:	mov    rax,QWORD PTR [rcx]
   14000339d:	call   QWORD PTR [rax+0x20]
   1400033a0:	cmp    DWORD PTR [rbx+0x10],0x0
   1400033a4:	mov    rcx,rax
   1400033a7:	jl     0x1400033ce
   1400033a9:	cmp    rax,QWORD PTR [rbx]
   1400033ac:	jne    0x1400033ce
   1400033ae:	mov    rdi,rbx
   1400033b1:	lock add DWORD PTR [rbx+0x10],0x1
   1400033b6:	lea    rax,[rbx+0x18]
   1400033ba:	mov    QWORD PTR [rsi],rax
   1400033bd:	mov    rax,rsi
   1400033c0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400033c5:	add    rsp,0x20
   1400033c9:	pop    r12
   1400033cb:	pop    rdi
   1400033cc:	pop    rsi
   1400033cd:	ret    
   1400033ce:	mov    rax,QWORD PTR [rax]
   1400033d1:	mov    edx,DWORD PTR [rbx+0x8]
   1400033d4:	mov    r8d,0x2
   1400033da:	call   QWORD PTR [rax]
   1400033dc:	test   rax,rax
   1400033df:	mov    rdi,rax
   1400033e2:	jne    0x1400033ea
   1400033e4:	call   0x1400021a0
   1400033e9:	int3   
   1400033ea:	mov    eax,DWORD PTR [rbx+0x8]
   1400033ed:	lea    r8,[rbx+0x18]
   1400033f1:	lea    rcx,[rdi+0x18]
   1400033f5:	mov    DWORD PTR [rdi+0x8],eax
   1400033f8:	mov    eax,DWORD PTR [rbx+0x8]
   1400033fb:	add    eax,0x1
   1400033fe:	movsxd rdx,eax
   140003401:	add    rdx,rdx
   140003404:	mov    r9,rdx
   140003407:	call   0x1400466d0
   14000340c:	lea    rax,[rdi+0x18]
   140003410:	mov    QWORD PTR [rsi],rax
   140003413:	mov    rax,rsi
   140003416:	mov    rbx,QWORD PTR [rsp+0x48]
   14000341b:	add    rsp,0x20
   14000341f:	pop    r12
   140003421:	pop    rdi
   140003422:	pop    rsi
   140003423:	ret    
   140003424:	mov    rcx,QWORD PTR [rcx-0x18]
   140003428:	mov    QWORD PTR [rsp+0x40],rbp
   14000342d:	test   rcx,rcx
   140003430:	je     0x140003440
   140003432:	mov    rax,QWORD PTR [rcx]
   140003435:	call   QWORD PTR [rax+0x20]
   140003438:	test   rax,rax
   14000343b:	mov    r11,rax
   14000343e:	jne    0x140003451
   140003440:	call   0x14002b874
   140003445:	mov    rcx,rax
   140003448:	mov    rdx,QWORD PTR [rax]
   14000344b:	call   QWORD PTR [rdx+0x20]
   14000344e:	mov    r11,rax
   140003451:	mov    rcx,QWORD PTR [rdi]
   140003454:	movsxd rbp,ebx
   140003457:	mov    rdx,r12
   14000345a:	sub    rdx,rbp
   14000345d:	test   r11,r11
   140003460:	lea    rdi,[rcx+rdx*2]
   140003464:	jne    0x140003471
   140003466:	mov    ecx,0x80004005
   14000346b:	call   0x140001430
   140003470:	int3   
   140003471:	test   rdi,rdi
   140003474:	jne    0x140003485
   140003476:	test   ebx,ebx
   140003478:	je     0x140003485
   14000347a:	mov    ecx,0x80070057
   14000347f:	call   0x140001430
   140003484:	int3   
   140003485:	mov    rax,QWORD PTR [r11]
   140003488:	mov    r8d,0x2
   14000348e:	mov    edx,ebx
   140003490:	mov    rcx,r11
   140003493:	call   QWORD PTR [rax]
   140003495:	test   rax,rax
   140003498:	jne    0x1400034a0
   14000349a:	call   0x1400021a0
   14000349f:	int3   
   1400034a0:	add    rax,0x18
   1400034a4:	test   ebx,ebx
   1400034a6:	mov    QWORD PTR [rsi],rax
   1400034a9:	js     0x1400034e5
   1400034ab:	cmp    ebx,DWORD PTR [rax-0xc]
   1400034ae:	jg     0x1400034e5
   1400034b0:	mov    DWORD PTR [rax-0x10],ebx
   1400034b3:	mov    rax,QWORD PTR [rsi]
   1400034b6:	lea    rdx,[rbp+rbp*1+0x0]
   1400034bb:	mov    WORD PTR [rdx+rax*1],0x0
   1400034c1:	mov    rcx,QWORD PTR [rsi]
   1400034c4:	mov    r9,rdx
   1400034c7:	mov    r8,rdi
   1400034ca:	call   0x1400466d0
   1400034cf:	mov    rbp,QWORD PTR [rsp+0x40]
   1400034d4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400034d9:	mov    rax,rsi
   1400034dc:	add    rsp,0x20
   1400034e0:	pop    r12
   1400034e2:	pop    rdi
   1400034e3:	pop    rsi
   1400034e4:	ret    
   1400034e5:	mov    ecx,0x80070057
   1400034ea:	call   0x140001430
   1400034ef:	int3   
   1400034f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400034f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400034fa:	push   rdi
   1400034fb:	sub    rsp,0x20
   1400034ff:	xor    eax,eax
   140003501:	test   r8d,r8d
   140003504:	mov    rsi,rcx
   140003507:	mov    rcx,QWORD PTR [rcx]
   14000350a:	mov    ebx,r8d
   14000350d:	mov    rdi,rdx
   140003510:	cmovs  ebx,eax
   140003513:	mov    DWORD PTR [rsp+0x40],eax
   140003517:	cmp    ebx,DWORD PTR [rcx-0x10]
   14000351a:	jl     0x14000359a
   14000351c:	lea    rbx,[rcx-0x18]
   140003520:	mov    rcx,QWORD PTR [rcx-0x18]
   140003524:	mov    rax,QWORD PTR [rcx]
   140003527:	call   QWORD PTR [rax+0x20]
   14000352a:	cmp    DWORD PTR [rbx+0x10],0x0
   14000352e:	mov    rcx,rax
   140003531:	jl     0x140003542
   140003533:	cmp    rax,QWORD PTR [rbx]
   140003536:	jne    0x140003542
   140003538:	mov    rsi,rbx
   14000353b:	lock add DWORD PTR [rbx+0x10],0x1
   140003540:	jmp    0x140003580
   140003542:	mov    rax,QWORD PTR [rax]
   140003545:	mov    edx,DWORD PTR [rbx+0x8]
   140003548:	mov    r8d,0x2
   14000354e:	call   QWORD PTR [rax]
   140003550:	test   rax,rax
   140003553:	mov    rsi,rax
   140003556:	jne    0x14000355e
   140003558:	call   0x1400021a0
   14000355d:	int3   
   14000355e:	mov    eax,DWORD PTR [rbx+0x8]
   140003561:	lea    r8,[rbx+0x18]
   140003565:	lea    rcx,[rsi+0x18]
   140003569:	mov    DWORD PTR [rsi+0x8],eax
   14000356c:	mov    eax,DWORD PTR [rbx+0x8]
   14000356f:	add    eax,0x1
   140003572:	movsxd rdx,eax
   140003575:	add    rdx,rdx
   140003578:	mov    r9,rdx
   14000357b:	call   0x1400466d0
   140003580:	lea    rax,[rsi+0x18]
   140003584:	mov    QWORD PTR [rdi],rax
   140003587:	mov    rax,rdi
   14000358a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000358f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003594:	add    rsp,0x20
   140003598:	pop    rdi
   140003599:	ret    
   14000359a:	mov    rcx,QWORD PTR [rcx-0x18]
   14000359e:	test   rcx,rcx
   1400035a1:	je     0x1400035b1
   1400035a3:	mov    rax,QWORD PTR [rcx]
   1400035a6:	call   QWORD PTR [rax+0x20]
   1400035a9:	test   rax,rax
   1400035ac:	mov    rcx,rax
   1400035af:	jne    0x1400035c2
   1400035b1:	call   0x14002b874
   1400035b6:	mov    rcx,rax
   1400035b9:	mov    rdx,QWORD PTR [rax]
   1400035bc:	call   QWORD PTR [rdx+0x20]
   1400035bf:	mov    rcx,rax
   1400035c2:	test   rcx,rcx
   1400035c5:	mov    rsi,QWORD PTR [rsi]
   1400035c8:	jne    0x1400035d5
   1400035ca:	mov    ecx,0x80004005
   1400035cf:	call   0x140001430
   1400035d4:	int3   
   1400035d5:	test   rsi,rsi
   1400035d8:	jne    0x1400035e9
   1400035da:	test   ebx,ebx
   1400035dc:	je     0x1400035e9
   1400035de:	mov    ecx,0x80070057
   1400035e3:	call   0x140001430
   1400035e8:	int3   
   1400035e9:	mov    rax,QWORD PTR [rcx]
   1400035ec:	mov    r8d,0x2
   1400035f2:	mov    edx,ebx
   1400035f4:	call   QWORD PTR [rax]
   1400035f6:	test   rax,rax
   1400035f9:	jne    0x140003601
   1400035fb:	call   0x1400021a0
   140003600:	int3   
   140003601:	add    rax,0x18
   140003605:	test   ebx,ebx
   140003607:	mov    QWORD PTR [rdi],rax
   14000360a:	js     0x140003645
   14000360c:	cmp    ebx,DWORD PTR [rax-0xc]
   14000360f:	jg     0x140003645
   140003611:	mov    DWORD PTR [rax-0x10],ebx
   140003614:	movsxd rax,ebx
   140003617:	mov    r8,rsi
   14000361a:	lea    rdx,[rax+rax*1]
   14000361e:	mov    rax,QWORD PTR [rdi]
   140003621:	mov    WORD PTR [rdx+rax*1],0x0
   140003627:	mov    rcx,QWORD PTR [rdi]
   14000362a:	mov    r9,rdx
   14000362d:	call   0x1400466d0
   140003632:	mov    rbx,QWORD PTR [rsp+0x30]
   140003637:	mov    rsi,QWORD PTR [rsp+0x38]
   14000363c:	mov    rax,rdi
   14000363f:	add    rsp,0x20
   140003643:	pop    rdi
   140003644:	ret    
   140003645:	mov    ecx,0x80070057
   14000364a:	call   0x140001430
   14000364f:	int3   
   140003650:	mov    QWORD PTR [rsp+0x8],rbx
   140003655:	mov    QWORD PTR [rsp+0x10],rbp
   14000365a:	mov    QWORD PTR [rsp+0x18],rsi
   14000365f:	mov    QWORD PTR [rsp+0x20],rdi
   140003664:	push   r12
   140003666:	sub    rsp,0x20
   14000366a:	mov    eax,r8d
   14000366d:	mov    rbp,rdx
   140003670:	mov    ebx,r8d
   140003673:	shr    eax,0x4
   140003676:	mov    rsi,rcx
   140003679:	mov    r8d,0x6
   14000367f:	add    ax,0x1
   140003683:	mov    rcx,rbp
   140003686:	movzx  edx,ax
   140003689:	call   QWORD PTR [rip+0x60f91]        # 0x140064620
   14000368f:	test   rax,rax
   140003692:	mov    r12,rax
   140003695:	je     0x1400037b2
   14000369b:	mov    rdx,rax
   14000369e:	mov    rcx,rbp
   1400036a1:	call   QWORD PTR [rip+0x60f81]        # 0x140064628
   1400036a7:	test   rax,rax
   1400036aa:	je     0x1400037b2
   1400036b0:	mov    rcx,rax
   1400036b3:	call   QWORD PTR [rip+0x60f77]        # 0x140064630
   1400036b9:	test   rax,rax
   1400036bc:	mov    rdi,rax
   1400036bf:	je     0x1400037b2
   1400036c5:	mov    rdx,r12
   1400036c8:	mov    rcx,rbp
   1400036cb:	call   QWORD PTR [rip+0x60f67]        # 0x140064638
   1400036d1:	mov    r11d,eax
   1400036d4:	add    r11,rdi
   1400036d7:	and    ebx,0xf
   1400036da:	jbe    0x1400036f6
   1400036dc:	data16 data16 xchg ax,ax
   1400036e0:	cmp    rdi,r11
   1400036e3:	jae    0x1400037b2
   1400036e9:	add    ebx,0xffffffff
   1400036ec:	movzx  eax,WORD PTR [rdi]
   1400036ef:	lea    rdi,[rdi+rax*2+0x2]
   1400036f4:	jne    0x1400036e0
   1400036f6:	cmp    rdi,r11
   1400036f9:	jae    0x1400037b2
   1400036ff:	movzx  eax,WORD PTR [rdi]
   140003702:	test   ax,ax
   140003705:	je     0x1400037b2
   14000370b:	movzx  ebx,ax
   14000370e:	mov    rax,QWORD PTR [rsi]
   140003711:	mov    ecx,0x1
   140003716:	sub    ecx,DWORD PTR [rax-0x8]
   140003719:	mov    eax,DWORD PTR [rax-0xc]
   14000371c:	sub    eax,ebx
   14000371e:	or     ecx,eax
   140003720:	jge    0x14000372c
   140003722:	mov    edx,ebx
   140003724:	mov    rcx,rsi
   140003727:	call   0x140002d40
   14000372c:	movzx  ecx,WORD PTR [rdi]
   14000372f:	lea    r8,[rdi+0x2]
   140003733:	cmp    ecx,0xffffffff
   140003736:	jne    0x140003749
   140003738:	or     rcx,0xffffffffffffffff
   14000373c:	xor    eax,eax
   14000373e:	mov    rdi,r8
   140003741:	repnz scas ax,WORD PTR es:[rdi]
   140003744:	not    rcx
   140003747:	and    ecx,ecx
   140003749:	movsxd r9,ecx
   14000374c:	mov    rcx,QWORD PTR [rsi]
   14000374f:	lea    rdi,[rbx+rbx*1]
   140003753:	mov    rdx,rdi
   140003756:	add    r9,r9
   140003759:	call   0x1400466d0
   14000375e:	test   eax,eax
   140003760:	je     0x140003788
   140003762:	cmp    eax,0xc
   140003765:	je     0x140003782
   140003767:	cmp    eax,0x16
   14000376a:	je     0x14000377c
   14000376c:	cmp    eax,0x22
   14000376f:	je     0x14000377c
   140003771:	cmp    eax,0x50
   140003774:	je     0x140003788
   140003776:	call   0x1400208f8
   14000377b:	int3   
   14000377c:	call   0x1400208f8
   140003781:	int3   
   140003782:	call   0x1400208b0
   140003787:	int3   
   140003788:	test   ebx,ebx
   14000378a:	js     0x1400037a7
   14000378c:	mov    rcx,QWORD PTR [rsi]
   14000378f:	cmp    ebx,DWORD PTR [rcx-0xc]
   140003792:	jg     0x1400037a7
   140003794:	mov    DWORD PTR [rcx-0x10],ebx
   140003797:	mov    rcx,QWORD PTR [rsi]
   14000379a:	mov    eax,0x1
   14000379f:	mov    WORD PTR [rdi+rcx*1],0x0
   1400037a5:	jmp    0x1400037b4
   1400037a7:	mov    ecx,0x80070057
   1400037ac:	call   0x140001430
   1400037b1:	int3   
   1400037b2:	xor    eax,eax
   1400037b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037b9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037be:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037c3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400037c8:	add    rsp,0x20
   1400037cc:	pop    r12
   1400037ce:	ret    
   1400037cf:	int3   
   1400037d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400037d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400037da:	push   rdi
   1400037db:	sub    rsp,0x20
   1400037df:	test   r8d,r8d
   1400037e2:	movsxd rdi,r8d
   1400037e5:	mov    rbp,rdx
   1400037e8:	mov    rbx,rcx
   1400037eb:	jne    0x140003874
   1400037f1:	mov    rax,QWORD PTR [rcx]
   1400037f4:	cmp    DWORD PTR [rax-0x10],r8d
   1400037f8:	mov    rdi,QWORD PTR [rax-0x18]
   1400037fc:	lea    rdx,[rax-0x18]
   140003800:	je     0x140003909
   140003806:	cmp    DWORD PTR [rdx+0x10],r8d
   14000380a:	jge    0x14000383c
   14000380c:	cmp    DWORD PTR [rax-0xc],r8d
   140003810:	jge    0x14000381d
   140003812:	mov    ecx,0x80070057
   140003817:	call   0x140001430
   14000381c:	int3   
   14000381d:	mov    DWORD PTR [rax-0x10],0x0
   140003824:	mov    rax,QWORD PTR [rcx]
   140003827:	mov    WORD PTR [rax],0x0
   14000382c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003831:	mov    rbp,QWORD PTR [rsp+0x48]
   140003836:	add    rsp,0x20
   14000383a:	pop    rdi
   14000383b:	ret    
   14000383c:	or     eax,0xffffffff
   14000383f:	lock xadd DWORD PTR [rdx+0x10],eax
   140003844:	add    eax,0xffffffff
   140003847:	test   eax,eax
   140003849:	jg     0x140003854
   14000384b:	mov    rcx,QWORD PTR [rdx]
   14000384e:	mov    rax,QWORD PTR [rcx]
   140003851:	call   QWORD PTR [rax+0x8]
   140003854:	mov    rax,QWORD PTR [rdi]
   140003857:	mov    rcx,rdi
   14000385a:	call   QWORD PTR [rax+0x18]
   14000385d:	add    rax,0x18
   140003861:	mov    QWORD PTR [rbx],rax
   140003864:	mov    rbx,QWORD PTR [rsp+0x40]
   140003869:	mov    rbp,QWORD PTR [rsp+0x48]
   14000386e:	add    rsp,0x20
   140003872:	pop    rdi
   140003873:	ret    
   140003874:	test   rdx,rdx
   140003877:	jne    0x140003884
   140003879:	mov    ecx,0x80070057
   14000387e:	call   0x140001430
   140003883:	int3   
   140003884:	mov    rax,QWORD PTR [rcx]
   140003887:	mov    QWORD PTR [rsp+0x30],rsi
   14000388c:	mov    QWORD PTR [rsp+0x38],r12
   140003891:	mov    esi,DWORD PTR [rax-0x10]
   140003894:	mov    r12,rdx
   140003897:	mov    ecx,0x1
   14000389c:	sub    ecx,DWORD PTR [rax-0x8]
   14000389f:	sub    r12,rax
   1400038a2:	mov    eax,DWORD PTR [rax-0xc]
   1400038a5:	sub    eax,edi
   1400038a7:	sar    r12,1
   1400038aa:	or     ecx,eax
   1400038ac:	jge    0x1400038b8
   1400038ae:	mov    edx,edi
   1400038b0:	mov    rcx,rbx
   1400038b3:	call   0x140002d40
   1400038b8:	cmp    r12,rsi
   1400038bb:	mov    rcx,QWORD PTR [rbx]
   1400038be:	ja     0x1400038d5
   1400038c0:	lea    rsi,[rdi+rdi*1]
   1400038c4:	lea    r8,[rcx+r12*2]
   1400038c8:	mov    r9,rsi
   1400038cb:	mov    rdx,rsi
   1400038ce:	call   0x1400467a0
   1400038d3:	jmp    0x1400038e7
   1400038d5:	lea    rsi,[rdi+rdi*1]
   1400038d9:	mov    r8,rbp
   1400038dc:	mov    r9,rsi
   1400038df:	mov    rdx,rsi
   1400038e2:	call   0x1400466d0
   1400038e7:	test   edi,edi
   1400038e9:	mov    r12,QWORD PTR [rsp+0x38]
   1400038ee:	js     0x140003919
   1400038f0:	mov    rax,QWORD PTR [rbx]
   1400038f3:	cmp    edi,DWORD PTR [rax-0xc]
   1400038f6:	jg     0x140003919
   1400038f8:	mov    DWORD PTR [rax-0x10],edi
   1400038fb:	mov    rax,QWORD PTR [rbx]
   1400038fe:	mov    WORD PTR [rsi+rax*1],0x0
   140003904:	mov    rsi,QWORD PTR [rsp+0x30]
   140003909:	mov    rbx,QWORD PTR [rsp+0x40]
   14000390e:	mov    rbp,QWORD PTR [rsp+0x48]
   140003913:	add    rsp,0x20
   140003917:	pop    rdi
   140003918:	ret    
   140003919:	mov    ecx,0x80070057
   14000391e:	call   0x140001430
   140003923:	int3   
   140003924:	int3   
   140003925:	int3   
   140003926:	int3   
   140003927:	int3   
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	mov    QWORD PTR [rsp+0x8],rbx
   140003935:	mov    QWORD PTR [rsp+0x10],rbp
   14000393a:	mov    QWORD PTR [rsp+0x18],rsi
   14000393f:	mov    QWORD PTR [rsp+0x20],rdi
   140003944:	push   r12
   140003946:	sub    rsp,0x30
   14000394a:	or     esi,0xffffffff
   14000394d:	test   rdx,rdx
   140003950:	mov    r12,rdx
   140003953:	mov    rdi,rcx
   140003956:	je     0x1400039f0
   14000395c:	call   QWORD PTR [rip+0x84d1e]        # 0x140088680
   140003962:	mov    r9d,esi
   140003965:	mov    r8,r12
   140003968:	xor    edx,edx
   14000396a:	mov    ecx,eax
   14000396c:	mov    DWORD PTR [rsp+0x28],0x0
   140003974:	mov    QWORD PTR [rsp+0x20],0x0
   14000397d:	call   QWORD PTR [rip+0x60c95]        # 0x140064618
   140003983:	lea    ebp,[rax-0x1]
   140003986:	test   ebp,ebp
   140003988:	jle    0x1400039f0
   14000398a:	mov    rcx,QWORD PTR [rdi]
   14000398d:	mov    edx,0x1
   140003992:	sub    edx,DWORD PTR [rcx-0x8]
   140003995:	mov    ecx,DWORD PTR [rcx-0xc]
   140003998:	sub    ecx,ebp
   14000399a:	or     edx,ecx
   14000399c:	jge    0x1400039a8
   14000399e:	mov    edx,ebp
   1400039a0:	mov    rcx,rdi
   1400039a3:	call   0x140002d40
   1400039a8:	mov    rbx,QWORD PTR [rdi]
   1400039ab:	call   QWORD PTR [rip+0x84ccf]        # 0x140088680
   1400039b1:	mov    r9d,esi
   1400039b4:	mov    r8,r12
   1400039b7:	xor    edx,edx
   1400039b9:	mov    ecx,eax
   1400039bb:	mov    DWORD PTR [rsp+0x28],ebp
   1400039bf:	mov    QWORD PTR [rsp+0x20],rbx
   1400039c4:	call   QWORD PTR [rip+0x60c4e]        # 0x140064618
   1400039ca:	mov    r11,QWORD PTR [rdi]
   1400039cd:	cmp    ebp,DWORD PTR [r11-0xc]
   1400039d1:	jg     0x1400039e5
   1400039d3:	mov    DWORD PTR [r11-0x10],ebp
   1400039d7:	mov    rax,QWORD PTR [rdi]
   1400039da:	movsxd rcx,ebp
   1400039dd:	mov    WORD PTR [rax+rcx*2],0x0
   1400039e3:	jmp    0x140003a4e
   1400039e5:	mov    ecx,0x80070057
   1400039ea:	call   0x140001430
   1400039ef:	int3   
   1400039f0:	mov    rax,QWORD PTR [rdi]
   1400039f3:	cmp    DWORD PTR [rax-0x10],0x0
   1400039f7:	mov    rbx,QWORD PTR [rax-0x18]
   1400039fb:	lea    rdx,[rax-0x18]
   1400039ff:	je     0x140003a4e
   140003a01:	cmp    DWORD PTR [rdx+0x10],0x0
   140003a05:	jge    0x140003a29
   140003a07:	cmp    DWORD PTR [rax-0xc],0x0
   140003a0b:	jge    0x140003a18
   140003a0d:	mov    ecx,0x80070057
   140003a12:	call   0x140001430
   140003a17:	int3   
   140003a18:	mov    DWORD PTR [rax-0x10],0x0
   140003a1f:	mov    rax,QWORD PTR [rdi]
   140003a22:	mov    WORD PTR [rax],0x0
   140003a27:	jmp    0x140003a4e
   140003a29:	lock xadd DWORD PTR [rdx+0x10],esi
   140003a2e:	add    esi,0xffffffff
   140003a31:	test   esi,esi
   140003a33:	jg     0x140003a3e
   140003a35:	mov    rcx,QWORD PTR [rdx]
   140003a38:	mov    rax,QWORD PTR [rcx]
   140003a3b:	call   QWORD PTR [rax+0x8]
   140003a3e:	mov    rax,QWORD PTR [rbx]
   140003a41:	mov    rcx,rbx
   140003a44:	call   QWORD PTR [rax+0x18]
   140003a47:	add    rax,0x18
   140003a4b:	mov    QWORD PTR [rdi],rax
   140003a4e:	mov    rbx,QWORD PTR [rsp+0x40]
   140003a53:	mov    rbp,QWORD PTR [rsp+0x48]
   140003a58:	mov    rsi,QWORD PTR [rsp+0x50]
   140003a5d:	mov    rax,rdi
   140003a60:	mov    rdi,QWORD PTR [rsp+0x58]
   140003a65:	add    rsp,0x30
   140003a69:	pop    r12
   140003a6b:	ret    
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	mov    QWORD PTR [rsp+0x18],r8
   140003a75:	mov    QWORD PTR [rsp+0x8],rcx
   140003a7a:	push   rbx
   140003a7b:	push   rbp
   140003a7c:	push   rdi
   140003a7d:	push   r14
   140003a7f:	sub    rsp,0x68
   140003a83:	test   rdx,rdx
   140003a86:	mov    rbp,rdx
   140003a89:	mov    rbx,rcx
   140003a8c:	je     0x140003d9d
   140003a92:	or     rcx,0xffffffffffffffff
   140003a96:	xor    eax,eax
   140003a98:	mov    rdi,rdx
   140003a9b:	repnz scas ax,WORD PTR es:[rdi]
   140003a9e:	not    rcx
   140003aa1:	sub    rcx,0x1
   140003aa5:	test   ecx,ecx
   140003aa7:	mov    r14,rcx
   140003aaa:	je     0x140003d9d
   140003ab0:	test   r8,r8
   140003ab3:	mov    QWORD PTR [rsp+0x60],rsi
   140003ab8:	mov    QWORD PTR [rsp+0x58],r12
   140003abd:	mov    QWORD PTR [rsp+0x48],r15
   140003ac2:	je     0x140003ae2
   140003ac4:	or     rcx,0xffffffffffffffff
   140003ac8:	mov    rdi,r8
   140003acb:	repnz scas ax,WORD PTR es:[rdi]
   140003ace:	not    rcx
   140003ad1:	sub    rcx,0x1
   140003ad5:	mov    r15,rcx
   140003ad8:	mov    QWORD PTR [rsp+0xa8],rcx
   140003ae0:	jmp    0x140003aed
   140003ae2:	xor    r15d,r15d
   140003ae5:	mov    QWORD PTR [rsp+0xa8],r15
   140003aed:	mov    rbx,QWORD PTR [rbx]
   140003af0:	xor    r12d,r12d
   140003af3:	mov    QWORD PTR [rsp+0x50],r13
   140003af8:	movsxd rax,DWORD PTR [rbx-0x10]
   140003afc:	lea    rsi,[rbx+rax*2]
   140003b00:	cmp    rbx,rsi
   140003b03:	jae    0x140003d4d
   140003b09:	data16 xchg ax,ax
   140003b0c:	data16 data16 xchg ax,ax
   140003b10:	mov    rdx,rbp
   140003b13:	mov    rcx,rbx
   140003b16:	call   0x140046660
   140003b1b:	test   rax,rax
   140003b1e:	je     0x140003b48
   140003b20:	movsxd rdi,r14d
   140003b23:	nop
   140003b24:	data16 data16 xchg ax,ax
   140003b28:	data16 data16 xchg ax,ax
   140003b2c:	data16 data16 xchg ax,ax
   140003b30:	lea    rbx,[rax+rdi*2]
   140003b34:	mov    rdx,rbp
   140003b37:	add    r12d,0x1
   140003b3b:	mov    rcx,rbx
   140003b3e:	call   0x140046660
   140003b43:	test   rax,rax
   140003b46:	jne    0x140003b30
   140003b48:	test   rbx,rbx
   140003b4b:	je     0x140003b62
   140003b4d:	or     rcx,0xffffffffffffffff
   140003b51:	xor    eax,eax
   140003b53:	mov    rdi,rbx
   140003b56:	repnz scas ax,WORD PTR es:[rdi]
   140003b59:	not    rcx
   140003b5c:	sub    rcx,0x1
   140003b60:	jmp    0x140003b64
   140003b62:	xor    ecx,ecx
   140003b64:	lea    eax,[rcx+0x1]
   140003b67:	movsxd rcx,eax
   140003b6a:	lea    rbx,[rbx+rcx*2]
   140003b6e:	cmp    rbx,rsi
   140003b71:	jb     0x140003b10
   140003b73:	test   r12d,r12d
   140003b76:	jle    0x140003d4d
   140003b7c:	mov    r8,QWORD PTR [rsp+0x90]
   140003b84:	mov    edi,r15d
   140003b87:	mov    ecx,0x1
   140003b8c:	mov    rax,QWORD PTR [r8]
   140003b8f:	sub    edi,r14d
   140003b92:	movsxd r13,DWORD PTR [rax-0x10]
   140003b96:	imul   edi,r12d
   140003b9a:	add    edi,r13d
   140003b9d:	mov    edx,r13d
   140003ba0:	cmp    edi,r13d
   140003ba3:	mov    DWORD PTR [rsp+0x98],edi
   140003baa:	cmovg  edx,edi
   140003bad:	sub    ecx,DWORD PTR [rax-0x8]
   140003bb0:	mov    eax,DWORD PTR [rax-0xc]
   140003bb3:	sub    eax,edx
   140003bb5:	or     ecx,eax
   140003bb7:	jge    0x140003bc9
   140003bb9:	mov    rcx,r8
   140003bbc:	call   0x140002d40
   140003bc1:	mov    r8,QWORD PTR [rsp+0x90]
   140003bc9:	mov    r15,QWORD PTR [r8]
   140003bcc:	movsxd rsi,DWORD PTR [rsp+0xa8]
   140003bd4:	lea    rax,[r15+r13*2]
   140003bd8:	mov    QWORD PTR [rsp+0x30],r15
   140003bdd:	mov    rbx,r15
   140003be0:	cmp    r15,rax
   140003be3:	mov    QWORD PTR [rsp+0x38],rax
   140003be8:	mov    QWORD PTR [rsp+0x20],rsi
   140003bed:	jae    0x140003d32
   140003bf3:	mov    rdx,rbp
   140003bf6:	mov    rcx,rbx
   140003bf9:	call   0x140046660
   140003bfe:	test   rax,rax
   140003c01:	mov    rdi,rax
   140003c04:	je     0x140003cf2
   140003c0a:	movsxd r8,r14d
   140003c0d:	add    rsi,rsi
   140003c10:	mov    QWORD PTR [rsp+0x28],r8
   140003c15:	data16 data16 xchg ax,ax
   140003c19:	data16 xchg ax,ax
   140003c1c:	data16 data16 xchg ax,ax
   140003c20:	mov    ecx,r13d
   140003c23:	mov    rax,rdi
   140003c26:	lea    rbx,[rsi+rdi*1]
   140003c2a:	sub    rax,r15
   140003c2d:	lea    r8,[rdi+r8*2]
   140003c31:	sar    rax,1
   140003c34:	sub    ecx,eax
   140003c36:	sub    ecx,r14d
   140003c39:	movsxd r15,ecx
   140003c3c:	mov    rcx,rbx
   140003c3f:	lea    rdx,[r15+r15*1]
   140003c43:	mov    r9,rdx
   140003c46:	call   0x1400467a0
   140003c4b:	test   eax,eax
   140003c4d:	je     0x140003c73
   140003c4f:	cmp    eax,0xc
   140003c52:	je     0x140003d7a
   140003c58:	cmp    eax,0x16
   140003c5b:	je     0x140003d74
   140003c61:	cmp    eax,0x22
   140003c64:	je     0x140003d74
   140003c6a:	cmp    eax,0x50
   140003c6d:	jne    0x140003d6e
   140003c73:	mov    r8,QWORD PTR [rsp+0xa0]
   140003c7b:	mov    r9,rsi
   140003c7e:	mov    rdx,rsi
   140003c81:	mov    rcx,rdi
   140003c84:	call   0x1400466d0
   140003c89:	test   eax,eax
   140003c8b:	je     0x140003cb1
   140003c8d:	cmp    eax,0xc
   140003c90:	je     0x140003d8c
   140003c96:	cmp    eax,0x16
   140003c99:	je     0x140003d86
   140003c9f:	cmp    eax,0x22
   140003ca2:	je     0x140003d86
   140003ca8:	cmp    eax,0x50
   140003cab:	jne    0x140003d80
   140003cb1:	mov    rax,QWORD PTR [rsp+0x20]
   140003cb6:	mov    rdx,rbp
   140003cb9:	mov    rcx,rbx
   140003cbc:	add    rax,r15
   140003cbf:	mov    WORD PTR [rdi+rax*2],0x0
   140003cc5:	mov    eax,DWORD PTR [rsp+0xa8]
   140003ccc:	sub    eax,r14d
   140003ccf:	add    r13d,eax
   140003cd2:	call   0x140046660
   140003cd7:	mov    r8,QWORD PTR [rsp+0x28]
   140003cdc:	test   rax,rax
   140003cdf:	mov    r15,QWORD PTR [rsp+0x30]
   140003ce4:	mov    rdi,rax
   140003ce7:	jne    0x140003c20
   140003ced:	mov    rsi,QWORD PTR [rsp+0x20]
   140003cf2:	test   rbx,rbx
   140003cf5:	je     0x140003d0c
   140003cf7:	or     rcx,0xffffffffffffffff
   140003cfb:	xor    eax,eax
   140003cfd:	mov    rdi,rbx
   140003d00:	repnz scas ax,WORD PTR es:[rdi]
   140003d03:	not    rcx
   140003d06:	sub    rcx,0x1
   140003d0a:	jmp    0x140003d0e
   140003d0c:	xor    ecx,ecx
   140003d0e:	lea    eax,[rcx+0x1]
   140003d11:	movsxd rcx,eax
   140003d14:	lea    rbx,[rbx+rcx*2]
   140003d18:	cmp    rbx,QWORD PTR [rsp+0x38]
   140003d1d:	jb     0x140003bf3
   140003d23:	mov    edi,DWORD PTR [rsp+0x98]
   140003d2a:	mov    r8,QWORD PTR [rsp+0x90]
   140003d32:	test   edi,edi
   140003d34:	js     0x140003d92
   140003d36:	mov    rax,QWORD PTR [r8]
   140003d39:	cmp    edi,DWORD PTR [rax-0xc]
   140003d3c:	jg     0x140003d92
   140003d3e:	mov    DWORD PTR [rax-0x10],edi
   140003d41:	mov    rax,QWORD PTR [r8]
   140003d44:	movsxd rcx,edi
   140003d47:	mov    WORD PTR [rax+rcx*2],0x0
   140003d4d:	mov    r13,QWORD PTR [rsp+0x50]
   140003d52:	mov    rsi,QWORD PTR [rsp+0x60]
   140003d57:	mov    r15,QWORD PTR [rsp+0x48]
   140003d5c:	mov    eax,r12d
   140003d5f:	mov    r12,QWORD PTR [rsp+0x58]
   140003d64:	add    rsp,0x68
   140003d68:	pop    r14
   140003d6a:	pop    rdi
   140003d6b:	pop    rbp
   140003d6c:	pop    rbx
   140003d6d:	ret    
   140003d6e:	call   0x1400208f8
   140003d73:	int3   
   140003d74:	call   0x1400208f8
   140003d79:	int3   
   140003d7a:	call   0x1400208b0
   140003d7f:	int3   
   140003d80:	call   0x1400208f8
   140003d85:	int3   
   140003d86:	call   0x1400208f8
   140003d8b:	int3   
   140003d8c:	call   0x1400208b0
   140003d91:	int3   
   140003d92:	mov    ecx,0x80070057
   140003d97:	call   0x140001430
   140003d9c:	int3   
   140003d9d:	xor    eax,eax
   140003d9f:	add    rsp,0x68
   140003da3:	pop    r14
   140003da5:	pop    rdi
   140003da6:	pop    rbp
   140003da7:	pop    rbx
   140003da8:	ret    
   140003da9:	int3   
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	mov    QWORD PTR [rsp+0x8],rbx
   140003db5:	push   rdi
   140003db6:	sub    rsp,0x20
   140003dba:	mov    rax,QWORD PTR [rcx]
   140003dbd:	mov    edx,0x1
   140003dc2:	mov    rdi,rcx
   140003dc5:	sub    edx,DWORD PTR [rax-0x8]
   140003dc8:	movsxd rbx,DWORD PTR [rax-0x10]
   140003dcc:	mov    eax,DWORD PTR [rax-0xc]
   140003dcf:	sub    eax,ebx
   140003dd1:	or     edx,eax
   140003dd3:	jge    0x140003ddc
   140003dd5:	mov    edx,ebx
   140003dd7:	call   0x140002d40
   140003ddc:	mov    rcx,QWORD PTR [rdi]
   140003ddf:	lea    eax,[rbx+0x1]
   140003de2:	movsxd rdx,eax
   140003de5:	call   0x140046a70
   140003dea:	test   ebx,ebx
   140003dec:	js     0x140003e10
   140003dee:	mov    rax,QWORD PTR [rdi]
   140003df1:	cmp    ebx,DWORD PTR [rax-0xc]
   140003df4:	jg     0x140003e10
   140003df6:	mov    DWORD PTR [rax-0x10],ebx
   140003df9:	mov    rax,QWORD PTR [rdi]
   140003dfc:	mov    WORD PTR [rax+rbx*2],0x0
   140003e02:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e07:	mov    rax,rdi
   140003e0a:	add    rsp,0x20
   140003e0e:	pop    rdi
   140003e0f:	ret    
   140003e10:	mov    ecx,0x80070057
   140003e15:	call   0x140001430
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x8],rcx
   140003e25:	push   rsi
   140003e26:	push   rdi
   140003e27:	push   r12
   140003e29:	push   r13
   140003e2b:	push   r14
   140003e2d:	sub    rsp,0x30
   140003e31:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003e3a:	mov    QWORD PTR [rsp+0x70],rbx
   140003e3f:	mov    QWORD PTR [rsp+0x78],rbp
   140003e44:	mov    rbp,r8
   140003e47:	mov    rdi,rdx
   140003e4a:	mov    rsi,rcx
   140003e4d:	xor    ebx,ebx
   140003e4f:	mov    DWORD PTR [rsp+0x68],ebx
   140003e53:	mov    rax,QWORD PTR [rdx]
   140003e56:	mov    rcx,QWORD PTR [rax-0x18]
   140003e5a:	test   rcx,rcx
   140003e5d:	je     0x140003e6d
   140003e5f:	mov    rax,QWORD PTR [rcx]
   140003e62:	call   QWORD PTR [rax+0x20]
   140003e65:	mov    rcx,rax
   140003e68:	test   rax,rax
   140003e6b:	jne    0x140003e7e
   140003e6d:	call   0x14002b874
   140003e72:	mov    rdx,QWORD PTR [rax]
   140003e75:	mov    rcx,rax
   140003e78:	call   QWORD PTR [rdx+0x20]
   140003e7b:	mov    rcx,rax
   140003e7e:	test   rcx,rcx
   140003e81:	setne  bl
   140003e84:	test   ebx,ebx
   140003e86:	jne    0x140003e93
   140003e88:	mov    ecx,0x80004005
   140003e8d:	call   0x140001430
   140003e92:	int3   
   140003e93:	mov    rax,QWORD PTR [rcx]
   140003e96:	call   QWORD PTR [rax+0x18]
   140003e99:	add    rax,0x18
   140003e9d:	mov    QWORD PTR [rsi],rax
   140003ea0:	mov    ecx,0x1
   140003ea5:	mov    DWORD PTR [rsp+0x68],ecx
   140003ea9:	mov    r13,QWORD PTR [rbp+0x0]
   140003ead:	movsxd r12,DWORD PTR [r13-0x10]
   140003eb1:	mov    r14,QWORD PTR [rdi]
   140003eb4:	movsxd rbx,DWORD PTR [r14-0x10]
   140003eb8:	lea    ebp,[rbx+r12*1]
   140003ebc:	sub    ecx,DWORD PTR [rax-0x8]
   140003ebf:	mov    eax,DWORD PTR [rax-0xc]
   140003ec2:	sub    eax,ebp
   140003ec4:	or     eax,ecx
   140003ec6:	jge    0x140003ed2
   140003ec8:	mov    edx,ebp
   140003eca:	mov    rcx,rsi
   140003ecd:	call   0x140002d40
   140003ed2:	mov    rdi,QWORD PTR [rsi]
   140003ed5:	add    rbx,rbx
   140003ed8:	mov    r9,rbx
   140003edb:	mov    r8,r14
   140003ede:	mov    rdx,rbx
   140003ee1:	mov    rcx,rdi
   140003ee4:	call   0x1400466d0
   140003ee9:	mov    rdx,r12
   140003eec:	add    rdx,rdx
   140003eef:	lea    rcx,[rbx+rdi*1]
   140003ef3:	mov    r9,rdx
   140003ef6:	mov    r8,r13
   140003ef9:	call   0x1400466d0
   140003efe:	test   ebp,ebp
   140003f00:	js     0x140003f1e
   140003f02:	mov    rax,QWORD PTR [rsi]
   140003f05:	cmp    ebp,DWORD PTR [rax-0xc]
   140003f08:	jg     0x140003f1e
   140003f0a:	mov    DWORD PTR [rax-0x10],ebp
   140003f0d:	movsxd rcx,ebp
   140003f10:	mov    rax,QWORD PTR [rsi]
   140003f13:	mov    WORD PTR [rax+rcx*2],0x0
   140003f19:	mov    rax,rsi
   140003f1c:	jmp    0x140003f29
   140003f1e:	mov    ecx,0x80070057
   140003f23:	call   0x140001430
   140003f28:	nop
   140003f29:	mov    rbx,QWORD PTR [rsp+0x70]
   140003f2e:	mov    rbp,QWORD PTR [rsp+0x78]
   140003f33:	add    rsp,0x30
   140003f37:	pop    r14
   140003f39:	pop    r13
   140003f3b:	pop    r12
   140003f3d:	pop    rdi
   140003f3e:	pop    rsi
   140003f3f:	ret    
   140003f40:	int3   
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	rex push rbp
   140003f52:	sub    rsp,0x20
   140003f56:	mov    rbp,rdx
   140003f59:	mov    eax,DWORD PTR [rbp+0x68]
   140003f5c:	and    eax,0x1
   140003f5f:	test   eax,eax
   140003f61:	je     0x140003f70
   140003f63:	and    DWORD PTR [rbp+0x68],0xfffffffe
   140003f67:	mov    rcx,QWORD PTR [rbp+0x60]
   140003f6b:	call   0x1400010c0
   140003f70:	add    rsp,0x20
   140003f74:	pop    rbp
   140003f75:	ret    
   140003f76:	int3   
   140003f77:	int3   
   140003f78:	int3   
   140003f79:	int3   
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	mov    QWORD PTR [rsp+0x8],rcx
   140003f85:	push   rsi
   140003f86:	push   rdi
   140003f87:	push   r12
   140003f89:	push   r13
   140003f8b:	push   r14
   140003f8d:	sub    rsp,0x30
   140003f91:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003f9a:	mov    QWORD PTR [rsp+0x70],rbx
   140003f9f:	mov    QWORD PTR [rsp+0x78],rbp
   140003fa4:	mov    r13,r8
   140003fa7:	mov    rbx,rdx
   140003faa:	mov    rsi,rcx
   140003fad:	xor    r12d,r12d
   140003fb0:	mov    DWORD PTR [rsp+0x68],r12d
   140003fb5:	mov    rax,QWORD PTR [rdx]
   140003fb8:	mov    rcx,QWORD PTR [rax-0x18]
   140003fbc:	test   rcx,rcx
   140003fbf:	je     0x140003fcf
   140003fc1:	mov    rax,QWORD PTR [rcx]
   140003fc4:	call   QWORD PTR [rax+0x20]
   140003fc7:	mov    rdx,rax
   140003fca:	test   rax,rax
   140003fcd:	jne    0x140003fe0
   140003fcf:	call   0x14002b874
   140003fd4:	mov    rdx,QWORD PTR [rax]
   140003fd7:	mov    rcx,rax
   140003fda:	call   QWORD PTR [rdx+0x20]
   140003fdd:	mov    rdx,rax
   140003fe0:	mov    ecx,r12d
   140003fe3:	test   rdx,rdx
   140003fe6:	setne  cl
   140003fe9:	test   ecx,ecx
   140003feb:	jne    0x140003ff8
   140003fed:	mov    ecx,0x80004005
   140003ff2:	call   0x140001430
   140003ff7:	int3   
   140003ff8:	mov    rax,QWORD PTR [rdx]
   140003ffb:	mov    rcx,rdx
   140003ffe:	call   QWORD PTR [rax+0x18]
   140004001:	lea    r8,[rax+0x18]
   140004005:	mov    QWORD PTR [rsi],r8
   140004008:	mov    edx,0x1
   14000400d:	mov    DWORD PTR [rsp+0x68],edx
   140004011:	test   r13,r13
   140004014:	je     0x140004029
   140004016:	xor    eax,eax
   140004018:	or     rcx,0xffffffffffffffff
   14000401c:	mov    rdi,r13
   14000401f:	repnz scas ax,WORD PTR es:[rdi]
   140004022:	not    rcx
   140004025:	lea    r12,[rcx-0x1]
   140004029:	mov    r14,QWORD PTR [rbx]
   14000402c:	movsxd rdi,DWORD PTR [r14-0x10]
   140004030:	lea    ebp,[r12+rdi*1]
   140004034:	sub    edx,DWORD PTR [r8-0x8]
   140004038:	mov    eax,DWORD PTR [r8-0xc]
   14000403c:	sub    eax,ebp
   14000403e:	or     eax,edx
   140004040:	jge    0x14000404c
   140004042:	mov    edx,ebp
   140004044:	mov    rcx,rsi
   140004047:	call   0x140002d40
   14000404c:	mov    rbx,QWORD PTR [rsi]
   14000404f:	add    rdi,rdi
   140004052:	mov    r9,rdi
   140004055:	mov    r8,r14
   140004058:	mov    rdx,rdi
   14000405b:	mov    rcx,rbx
   14000405e:	call   0x1400466d0
   140004063:	movsxd rdx,r12d
   140004066:	add    rdx,rdx
   140004069:	lea    rcx,[rdi+rbx*1]
   14000406d:	mov    r9,rdx
   140004070:	mov    r8,r13
   140004073:	call   0x1400466d0
   140004078:	test   ebp,ebp
   14000407a:	js     0x140004098
   14000407c:	mov    rax,QWORD PTR [rsi]
   14000407f:	cmp    ebp,DWORD PTR [rax-0xc]
   140004082:	jg     0x140004098
   140004084:	mov    DWORD PTR [rax-0x10],ebp
   140004087:	movsxd rcx,ebp
   14000408a:	mov    rax,QWORD PTR [rsi]
   14000408d:	mov    WORD PTR [rax+rcx*2],0x0
   140004093:	mov    rax,rsi
   140004096:	jmp    0x1400040a3
   140004098:	mov    ecx,0x80070057
   14000409d:	call   0x140001430
   1400040a2:	nop
   1400040a3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400040a8:	mov    rbp,QWORD PTR [rsp+0x78]
   1400040ad:	add    rsp,0x30
   1400040b1:	pop    r14
   1400040b3:	pop    r13
   1400040b5:	pop    r12
   1400040b7:	pop    rdi
   1400040b8:	pop    rsi
   1400040b9:	ret    
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	rex push rbp
   1400040c2:	sub    rsp,0x20
   1400040c6:	mov    rbp,rdx
   1400040c9:	mov    eax,DWORD PTR [rbp+0x68]
   1400040cc:	and    eax,0x1
   1400040cf:	test   eax,eax
   1400040d1:	je     0x1400040e0
   1400040d3:	and    DWORD PTR [rbp+0x68],0xfffffffe
   1400040d7:	mov    rcx,QWORD PTR [rbp+0x60]
   1400040db:	call   0x1400010c0
   1400040e0:	add    rsp,0x20
   1400040e4:	pop    rbp
   1400040e5:	ret    
   1400040e6:	int3   
   1400040e7:	int3   
   1400040e8:	int3   
   1400040e9:	int3   
   1400040ea:	int3   
   1400040eb:	int3   
   1400040ec:	int3   
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400040f5:	push   rdi
   1400040f6:	sub    rsp,0x20
   1400040fa:	mov    rdx,QWORD PTR [rdx]
   1400040fd:	mov    rbx,rcx
   140004100:	mov    rdi,QWORD PTR [rbx]
   140004103:	lea    rcx,[rdx-0x18]
   140004107:	sub    rdi,0x18
   14000410b:	cmp    rcx,rdi
   14000410e:	je     0x14000416d
   140004110:	cmp    DWORD PTR [rdi+0x10],0x0
   140004114:	jl     0x140004161
   140004116:	mov    rax,QWORD PTR [rdi]
   140004119:	cmp    QWORD PTR [rcx],rax
   14000411c:	jne    0x140004161
   14000411e:	mov    QWORD PTR [rsp+0x30],rsi
   140004123:	call   0x140002da0
   140004128:	or     ecx,0xffffffff
   14000412b:	mov    rsi,rax
   14000412e:	lock xadd DWORD PTR [rdi+0x10],ecx
   140004133:	add    ecx,0xffffffff
   140004136:	test   ecx,ecx
   140004138:	jg     0x140004147
   14000413a:	mov    rcx,QWORD PTR [rdi]
   14000413d:	mov    rdx,rdi
   140004140:	mov    r8,QWORD PTR [rcx]
   140004143:	call   QWORD PTR [r8+0x8]
   140004147:	lea    rax,[rsi+0x18]
   14000414b:	mov    rsi,QWORD PTR [rsp+0x30]
   140004150:	mov    QWORD PTR [rbx],rax
   140004153:	mov    rax,rbx
   140004156:	mov    rbx,QWORD PTR [rsp+0x38]
   14000415b:	add    rsp,0x20
   14000415f:	pop    rdi
   140004160:	ret    
   140004161:	mov    r8d,DWORD PTR [rdx-0x10]
   140004165:	mov    rcx,rbx
   140004168:	call   0x1400037d0
   14000416d:	mov    rax,rbx
   140004170:	mov    rbx,QWORD PTR [rsp+0x38]
   140004175:	add    rsp,0x20
   140004179:	pop    rdi
   14000417a:	ret    
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	mov    QWORD PTR [rsp+0x10],rdx
   140004185:	mov    QWORD PTR [rsp+0x18],r8
   14000418a:	mov    QWORD PTR [rsp+0x20],r9
   14000418f:	push   rbp
   140004190:	push   rsi
   140004191:	push   rdi
   140004192:	sub    rsp,0x30
   140004196:	test   rdx,rdx
   140004199:	mov    rsi,rdx
   14000419c:	mov    rdi,rcx
   14000419f:	lea    rbp,[rsp+0x60]
   1400041a4:	jne    0x1400041b1
   1400041a6:	mov    ecx,0x80070057
   1400041ab:	call   0x140001430
   1400041b0:	int3   
   1400041b1:	mov    rdx,rbp
   1400041b4:	mov    rcx,rsi
   1400041b7:	mov    QWORD PTR [rsp+0x28],rbx
   1400041bc:	call   0x140046b50
   1400041c1:	mov    rcx,QWORD PTR [rdi]
   1400041c4:	mov    edx,0x1
   1400041c9:	sub    edx,DWORD PTR [rcx-0x8]
   1400041cc:	mov    ecx,DWORD PTR [rcx-0xc]
   1400041cf:	movsxd rbx,eax
   1400041d2:	sub    ecx,ebx
   1400041d4:	or     edx,ecx
   1400041d6:	jge    0x1400041e2
   1400041d8:	mov    edx,ebx
   1400041da:	mov    rcx,rdi
   1400041dd:	call   0x140002d40
   1400041e2:	mov    rcx,QWORD PTR [rdi]
   1400041e5:	lea    eax,[rbx+0x1]
   1400041e8:	mov    r9,rbp
   1400041eb:	movsxd rdx,eax
   1400041ee:	mov    r8,rsi
   1400041f1:	call   0x140046da0
   1400041f6:	test   ebx,ebx
   1400041f8:	js     0x14000421b
   1400041fa:	mov    rax,QWORD PTR [rdi]
   1400041fd:	cmp    ebx,DWORD PTR [rax-0xc]
   140004200:	jg     0x14000421b
   140004202:	mov    DWORD PTR [rax-0x10],ebx
   140004205:	mov    rax,QWORD PTR [rdi]
   140004208:	mov    WORD PTR [rax+rbx*2],0x0
   14000420e:	mov    rbx,QWORD PTR [rsp+0x28]
   140004213:	add    rsp,0x30
   140004217:	pop    rdi
   140004218:	pop    rsi
   140004219:	pop    rbp
   14000421a:	ret    
   14000421b:	mov    ecx,0x80070057
   140004220:	call   0x140001430
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	int3   
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	mov    QWORD PTR [rsp+0x8],rcx
   140004235:	push   rdi
   140004236:	push   r12
   140004238:	push   r13
   14000423a:	sub    rsp,0x40
   14000423e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140004247:	mov    QWORD PTR [rsp+0x68],rbx
   14000424c:	mov    QWORD PTR [rsp+0x70],rbp
   140004251:	mov    QWORD PTR [rsp+0x78],rsi
   140004256:	mov    r12,rcx
   140004259:	lea    rax,[rip+0xffffffffffffce60]        # 0x1400010c0
   140004260:	mov    QWORD PTR [rsp+0x20],rax
   140004265:	lea    r9,[rip+0xffffffffffffebc4]        # 0x140002e30
   14000426c:	mov    edx,0x8
   140004271:	mov    r8d,0x258
   140004277:	call   0x140047810
   14000427c:	nop
   14000427d:	xor    r13d,r13d
   140004280:	mov    rbp,r13
   140004283:	mov    rdi,r12
   140004286:	call   QWORD PTR [rip+0x843f4]        # 0x140088680
   14000428c:	mov    DWORD PTR [rsp+0x28],r13d
   140004291:	mov    QWORD PTR [rsp+0x20],r13
   140004296:	or     r9d,0xffffffff
   14000429a:	lea    r8,[rip+0x6122f]        # 0x1400654d0
   1400042a1:	xor    edx,edx
   1400042a3:	mov    ecx,eax
   1400042a5:	call   QWORD PTR [rip+0x6036d]        # 0x140064618
   1400042ab:	lea    esi,[rax-0x1]
   1400042ae:	test   esi,esi
   1400042b0:	jle    0x140004311
   1400042b2:	mov    rcx,QWORD PTR [rdi]
   1400042b5:	mov    edx,0x1
   1400042ba:	sub    edx,DWORD PTR [rcx-0x8]
   1400042bd:	mov    ecx,DWORD PTR [rcx-0xc]
   1400042c0:	sub    ecx,esi
   1400042c2:	or     ecx,edx
   1400042c4:	jge    0x1400042d0
   1400042c6:	mov    edx,esi
   1400042c8:	mov    rcx,rdi
   1400042cb:	call   0x140002d40
   1400042d0:	mov    rbx,QWORD PTR [rdi]
   1400042d3:	call   QWORD PTR [rip+0x843a7]        # 0x140088680
   1400042d9:	mov    ecx,eax
   1400042db:	mov    DWORD PTR [rsp+0x28],esi
   1400042df:	mov    QWORD PTR [rsp+0x20],rbx
   1400042e4:	or     r9d,0xffffffff
   1400042e8:	lea    r8,[rip+0x611e1]        # 0x1400654d0
   1400042ef:	xor    edx,edx
   1400042f1:	call   QWORD PTR [rip+0x60321]        # 0x140064618
   1400042f7:	mov    r11,QWORD PTR [rdi]
   1400042fa:	cmp    esi,DWORD PTR [r11-0xc]
   1400042fe:	jg     0x140004378
   140004300:	mov    DWORD PTR [r11-0x10],esi
   140004304:	movsxd rcx,esi
   140004307:	mov    rax,QWORD PTR [rdi]
   14000430a:	mov    WORD PTR [rax+rcx*2],r13w
   14000430f:	jmp    0x140004362
   140004311:	mov    rax,QWORD PTR [rdi]
   140004314:	lea    rdx,[rax-0x18]
   140004318:	mov    rbx,QWORD PTR [rdx]
   14000431b:	cmp    DWORD PTR [rdx+0x8],r13d
   14000431f:	je     0x140004362
   140004321:	cmp    DWORD PTR [rdx+0x10],r13d
   140004325:	jge    0x14000433a
   140004327:	cmp    DWORD PTR [rax-0xc],r13d
   14000432b:	jl     0x140004383
   14000432d:	mov    DWORD PTR [rax-0x10],r13d
   140004331:	mov    rax,QWORD PTR [rdi]
   140004334:	mov    WORD PTR [rax],r13w
   140004338:	jmp    0x140004362
   14000433a:	or     eax,0xffffffff
   14000433d:	lock xadd DWORD PTR [rdx+0x10],eax
   140004342:	add    eax,0xffffffff
   140004345:	test   eax,eax
   140004347:	jg     0x140004352
   140004349:	mov    rcx,QWORD PTR [rdx]
   14000434c:	mov    rax,QWORD PTR [rcx]
   14000434f:	call   QWORD PTR [rax+0x8]
   140004352:	mov    rax,QWORD PTR [rbx]
   140004355:	mov    rcx,rbx
   140004358:	call   QWORD PTR [rax+0x18]
   14000435b:	add    rax,0x18
   14000435f:	mov    QWORD PTR [rdi],rax
   140004362:	add    rbp,0x1
   140004366:	add    rdi,0x8
   14000436a:	cmp    rbp,0x258
   140004371:	jge    0x14000438e
   140004373:	jmp    0x140004286
   140004378:	mov    ecx,0x80070057
   14000437d:	call   0x140001430
   140004382:	int3   
   140004383:	mov    ecx,0x80070057
   140004388:	call   0x140001430
   14000438d:	int3   
   14000438e:	mov    DWORD PTR [r12+0x12c0],r13d
   140004396:	mov    DWORD PTR [r12+0x12c4],r13d
   14000439e:	mov    rax,r12
   1400043a1:	mov    rbx,QWORD PTR [rsp+0x68]
   1400043a6:	mov    rbp,QWORD PTR [rsp+0x70]
   1400043ab:	mov    rsi,QWORD PTR [rsp+0x78]
   1400043b0:	add    rsp,0x40
   1400043b4:	pop    r13
   1400043b6:	pop    r12
   1400043b8:	pop    rdi
   1400043b9:	ret    
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	rex push rbp
   1400043c2:	sub    rsp,0x20
   1400043c6:	mov    rbp,rdx
   1400043c9:	lea    r9,[rip+0xffffffffffffccf0]        # 0x1400010c0
   1400043d0:	mov    r8d,0x258
   1400043d6:	mov    edx,0x8
   1400043db:	mov    rcx,QWORD PTR [rbp+0x60]
   1400043df:	call   0x140045b20
   1400043e4:	add    rsp,0x20
   1400043e8:	pop    rbp
   1400043e9:	ret    
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	mov    QWORD PTR [rsp+0x10],rbp
   1400043f5:	mov    QWORD PTR [rsp+0x18],rsi
   1400043fa:	push   rdi
   1400043fb:	push   r12
   1400043fd:	push   r13
   1400043ff:	sub    rsp,0x30
   140004403:	xor    r13d,r13d
   140004406:	mov    r12,rcx
   140004409:	mov    rdi,rcx
   14000440c:	mov    rbp,r13
   14000440f:	mov    QWORD PTR [rsp+0x50],rbx
   140004414:	call   QWORD PTR [rip+0x84266]        # 0x140088680
   14000441a:	lea    r8,[rip+0x610af]        # 0x1400654d0
   140004421:	or     r9d,0xffffffff
   140004425:	xor    edx,edx
   140004427:	mov    ecx,eax
   140004429:	mov    DWORD PTR [rsp+0x28],r13d
   14000442e:	mov    QWORD PTR [rsp+0x20],r13
   140004433:	call   QWORD PTR [rip+0x601df]        # 0x140064618
   140004439:	lea    esi,[rax-0x1]
   14000443c:	test   esi,esi
   14000443e:	jle    0x1400044a3
   140004440:	mov    rcx,QWORD PTR [rdi]
   140004443:	mov    edx,0x1
   140004448:	sub    edx,DWORD PTR [rcx-0x8]
   14000444b:	mov    ecx,DWORD PTR [rcx-0xc]
   14000444e:	sub    ecx,esi
   140004450:	or     edx,ecx
   140004452:	jge    0x14000445e
   140004454:	mov    edx,esi
   140004456:	mov    rcx,rdi
   140004459:	call   0x140002d40
   14000445e:	mov    rbx,QWORD PTR [rdi]
   140004461:	call   QWORD PTR [rip+0x84219]        # 0x140088680
   140004467:	lea    r8,[rip+0x61062]        # 0x1400654d0
   14000446e:	mov    ecx,eax
   140004470:	or     r9d,0xffffffff
   140004474:	xor    edx,edx
   140004476:	mov    DWORD PTR [rsp+0x28],esi
   14000447a:	mov    QWORD PTR [rsp+0x20],rbx
   14000447f:	call   QWORD PTR [rip+0x60193]        # 0x140064618
   140004485:	mov    r11,QWORD PTR [rdi]
   140004488:	cmp    esi,DWORD PTR [r11-0xc]
   14000448c:	jg     0x140004528
   140004492:	mov    DWORD PTR [r11-0x10],esi
   140004496:	mov    rax,QWORD PTR [rdi]
   140004499:	movsxd rcx,esi
   14000449c:	mov    WORD PTR [rax+rcx*2],r13w
   1400044a1:	jmp    0x1400044f5
   1400044a3:	mov    rax,QWORD PTR [rdi]
   1400044a6:	cmp    DWORD PTR [rax-0x10],r13d
   1400044aa:	mov    rbx,QWORD PTR [rax-0x18]
   1400044ae:	lea    rdx,[rax-0x18]
   1400044b2:	je     0x1400044f5
   1400044b4:	cmp    DWORD PTR [rdx+0x10],r13d
   1400044b8:	jge    0x1400044cd
   1400044ba:	cmp    DWORD PTR [rax-0xc],r13d
   1400044be:	jl     0x140004533
   1400044c0:	mov    DWORD PTR [rax-0x10],r13d
   1400044c4:	mov    rax,QWORD PTR [rdi]
   1400044c7:	mov    WORD PTR [rax],r13w
   1400044cb:	jmp    0x1400044f5
   1400044cd:	or     eax,0xffffffff
   1400044d0:	lock xadd DWORD PTR [rdx+0x10],eax
   1400044d5:	add    eax,0xffffffff
   1400044d8:	test   eax,eax
   1400044da:	jg     0x1400044e5
   1400044dc:	mov    rcx,QWORD PTR [rdx]
   1400044df:	mov    rax,QWORD PTR [rcx]
   1400044e2:	call   QWORD PTR [rax+0x8]
   1400044e5:	mov    rax,QWORD PTR [rbx]
   1400044e8:	mov    rcx,rbx
   1400044eb:	call   QWORD PTR [rax+0x18]
   1400044ee:	add    rax,0x18
   1400044f2:	mov    QWORD PTR [rdi],rax
   1400044f5:	add    rbp,0x1
   1400044f9:	add    rdi,0x8
   1400044fd:	cmp    rbp,0x64
   140004501:	jl     0x140004414
   140004507:	mov    rbx,QWORD PTR [rsp+0x50]
   14000450c:	mov    rbp,QWORD PTR [rsp+0x58]
   140004511:	mov    rsi,QWORD PTR [rsp+0x60]
   140004516:	mov    DWORD PTR [r12+0x320],r13d
   14000451e:	add    rsp,0x30
   140004522:	pop    r13
   140004524:	pop    r12
   140004526:	pop    rdi
   140004527:	ret    
   140004528:	mov    ecx,0x80070057
   14000452d:	call   0x140001430
   140004532:	int3   
   140004533:	mov    ecx,0x80070057
   140004538:	call   0x140001430
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	mov    QWORD PTR [rsp+0x8],rcx
   140004545:	push   rdi
   140004546:	sub    rsp,0x40
   14000454a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140004553:	mov    QWORD PTR [rsp+0x58],rbx
   140004558:	mov    rdi,rcx
   14000455b:	mov    r8,rdx
   14000455e:	mov    edx,0x66
   140004563:	call   0x14001e01c
   140004568:	nop
   140004569:	lea    rax,[rip+0x60f98]        # 0x140065508
   140004570:	mov    QWORD PTR [rdi],rax
   140004573:	lea    rcx,[rdi+0xf0]
   14000457a:	lea    rax,[rip+0xffffffffffffcb3f]        # 0x1400010c0
   140004581:	mov    QWORD PTR [rsp+0x20],rax
   140004586:	lea    r9,[rip+0xffffffffffffe8a3]        # 0x140002e30
   14000458d:	mov    edx,0x8
   140004592:	lea    r8d,[rdx+0x2a]
   140004596:	call   0x140047810
   14000459b:	nop
   14000459c:	call   0x14002b874
   1400045a1:	mov    r11,rax
   1400045a4:	xor    ecx,ecx
   1400045a6:	test   rax,rax
   1400045a9:	setne  cl
   1400045ac:	test   ecx,ecx
   1400045ae:	jne    0x1400045bb
   1400045b0:	mov    ecx,0x80004005
   1400045b5:	call   0x140001430
   1400045ba:	int3   
   1400045bb:	mov    rax,QWORD PTR [rax]
   1400045be:	mov    rcx,r11
   1400045c1:	call   QWORD PTR [rax+0x18]
   1400045c4:	add    rax,0x18
   1400045c8:	mov    QWORD PTR [rdi+0x290],rax
   1400045cf:	lea    rcx,[rdi+0x4c0]
   1400045d6:	lea    rax,[rip+0xffffffffffffcb13]        # 0x1400010f0
   1400045dd:	mov    QWORD PTR [rsp+0x20],rax
   1400045e2:	lea    r9,[rip+0xfffffffffffffc47]        # 0x140004230
   1400045e9:	mov    edx,0x12c8
   1400045ee:	mov    r8d,0xc8
   1400045f4:	call   0x140047810
   1400045f9:	nop
   1400045fa:	lea    rcx,[rdi+0xeb140]
   140004601:	call   0x1400236c4
   140004606:	lea    r11,[rip+0x609fb]        # 0x140065008
   14000460d:	mov    QWORD PTR [rdi+0xeb140],r11
   140004614:	call   0x140021a70
   140004619:	call   0x140021a70
   14000461e:	mov    edx,0x80
   140004623:	mov    rcx,QWORD PTR [rax+0x18]
   140004627:	call   QWORD PTR [rip+0x60523]        # 0x140064b50
   14000462d:	mov    QWORD PTR [rdi+0xeb1e8],rax
   140004634:	mov    rax,rdi
   140004637:	mov    rbx,QWORD PTR [rsp+0x58]
   14000463c:	add    rsp,0x40
   140004640:	pop    rdi
   140004641:	ret    
   140004642:	int3   
   140004643:	int3   
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	rex push rbp
   140004652:	sub    rsp,0x20
   140004656:	mov    rbp,rdx
   140004659:	mov    rcx,QWORD PTR [rbp+0x50]
   14000465d:	call   0x14001df14
   140004662:	add    rsp,0x20
   140004666:	pop    rbp
   140004667:	ret    
   140004668:	int3   
   140004669:	int3   
   14000466a:	int3   
   14000466b:	int3   
   14000466c:	int3   
   14000466d:	int3   
   14000466e:	int3   
   14000466f:	int3   
   140004670:	rex push rbp
   140004672:	sub    rsp,0x20
   140004676:	mov    rbp,rdx
   140004679:	mov    rcx,QWORD PTR [rbp+0x50]
   14000467d:	add    rcx,0xf0
   140004684:	lea    r9,[rip+0xffffffffffffca35]        # 0x1400010c0
   14000468b:	mov    r8d,0x32
   140004691:	mov    edx,0x8
   140004696:	call   0x140045b20
   14000469b:	add    rsp,0x20
   14000469f:	pop    rbp
   1400046a0:	ret    
   1400046a1:	int3   
   1400046a2:	int3   
   1400046a3:	int3   
   1400046a4:	int3   
   1400046a5:	int3   
   1400046a6:	int3   
   1400046a7:	int3   
   1400046a8:	int3   
   1400046a9:	int3   
   1400046aa:	int3   
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	rex push rbp
   1400046b2:	sub    rsp,0x20
   1400046b6:	mov    rbp,rdx
   1400046b9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400046bd:	add    rcx,0x290
   1400046c4:	call   0x1400010c0
   1400046c9:	add    rsp,0x20
   1400046cd:	pop    rbp
   1400046ce:	ret    
   1400046cf:	int3   
   1400046d0:	rex push rbp
   1400046d2:	sub    rsp,0x20
   1400046d6:	mov    rbp,rdx
   1400046d9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400046dd:	add    rcx,0x4c0
   1400046e4:	lea    r9,[rip+0xffffffffffffca05]        # 0x1400010f0
   1400046eb:	mov    r8d,0xc8
   1400046f1:	mov    edx,0x12c8
   1400046f6:	call   0x140045b20
   1400046fb:	add    rsp,0x20
   1400046ff:	pop    rbp
   140004700:	ret    
   140004701:	int3   
   140004702:	int3   
   140004703:	int3   
   140004704:	int3   
   140004705:	int3   
   140004706:	int3   
   140004707:	int3   
   140004708:	int3   
   140004709:	int3   
   14000470a:	int3   
   14000470b:	int3   
   14000470c:	int3   
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	rex push rbp
   140004712:	sub    rsp,0x20
   140004716:	mov    rbp,rdx
   140004719:	mov    rcx,QWORD PTR [rbp+0x50]
   14000471d:	add    rcx,0xeb140
   140004724:	call   0x14001ef28
   140004729:	add    rsp,0x20
   14000472d:	pop    rbp
   14000472e:	ret    
   14000472f:	int3   
   140004730:	movzx  edx,dx
   140004733:	jmp    0x14001edb0
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	mov    QWORD PTR [rsp+0x8],rcx
   140004745:	push   rdi
   140004746:	sub    rsp,0x30
   14000474a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004753:	mov    QWORD PTR [rsp+0x48],rbx
   140004758:	mov    edi,edx
   14000475a:	mov    rbx,rcx
   14000475d:	add    rcx,0xeb140
   140004764:	call   0x14001ef28
   140004769:	nop
   14000476a:	lea    rcx,[rbx+0x4c0]
   140004771:	lea    r9,[rip+0xffffffffffffc978]        # 0x1400010f0
   140004778:	mov    edx,0x12c8
   14000477d:	mov    r8d,0xc8
   140004783:	call   0x140045b20
   140004788:	nop
   140004789:	mov    rdx,QWORD PTR [rbx+0x290]
   140004790:	sub    rdx,0x18
   140004794:	or     eax,0xffffffff
   140004797:	lock xadd DWORD PTR [rdx+0x10],eax
   14000479c:	add    eax,0xffffffff
   14000479f:	test   eax,eax
   1400047a1:	jg     0x1400047ad
   1400047a3:	mov    rcx,QWORD PTR [rdx]
   1400047a6:	mov    rax,QWORD PTR [rcx]
   1400047a9:	call   QWORD PTR [rax+0x8]
   1400047ac:	nop
   1400047ad:	lea    rcx,[rbx+0xf0]
   1400047b4:	lea    r9,[rip+0xffffffffffffc905]        # 0x1400010c0
   1400047bb:	mov    edx,0x8
   1400047c0:	lea    r8d,[rdx+0x2a]
   1400047c4:	call   0x140045b20
   1400047c9:	nop
   1400047ca:	mov    rcx,rbx
   1400047cd:	call   0x14001df14
   1400047d2:	test   dil,0x1
   1400047d6:	je     0x1400047e5
   1400047d8:	mov    rcx,rbx
   1400047db:	call   0x14001ac50
   1400047e0:	mov    rax,rbx
   1400047e3:	jmp    0x1400047e8
   1400047e5:	mov    rax,rbx
   1400047e8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400047ed:	add    rsp,0x30
   1400047f1:	pop    rdi
   1400047f2:	ret    
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	rex push rbp
   140004802:	sub    rsp,0x20
   140004806:	mov    rbp,rdx
   140004809:	mov    rcx,QWORD PTR [rbp+0x40]
   14000480d:	call   0x14001df14
   140004812:	add    rsp,0x20
   140004816:	pop    rbp
   140004817:	ret    
   140004818:	int3   
   140004819:	int3   
   14000481a:	int3   
   14000481b:	int3   
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	rex push rbp
   140004822:	sub    rsp,0x20
   140004826:	mov    rbp,rdx
   140004829:	mov    rcx,QWORD PTR [rbp+0x40]
   14000482d:	add    rcx,0xf0
   140004834:	lea    r9,[rip+0xffffffffffffc885]        # 0x1400010c0
   14000483b:	mov    r8d,0x32
   140004841:	mov    edx,0x8
   140004846:	call   0x140045b20
   14000484b:	add    rsp,0x20
   14000484f:	pop    rbp
   140004850:	ret    
   140004851:	int3   
   140004852:	int3   
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	rex push rbp
   140004862:	sub    rsp,0x20
   140004866:	mov    rbp,rdx
   140004869:	mov    rcx,QWORD PTR [rbp+0x40]
   14000486d:	add    rcx,0x290
   140004874:	call   0x1400010c0
   140004879:	add    rsp,0x20
   14000487d:	pop    rbp
   14000487e:	ret    
   14000487f:	int3   
   140004880:	rex push rbp
   140004882:	sub    rsp,0x20
   140004886:	mov    rbp,rdx
   140004889:	mov    rcx,QWORD PTR [rbp+0x40]
   14000488d:	add    rcx,0x4c0
   140004894:	lea    r9,[rip+0xffffffffffffc855]        # 0x1400010f0
   14000489b:	mov    r8d,0xc8
   1400048a1:	mov    edx,0x12c8
   1400048a6:	call   0x140045b20
   1400048ab:	add    rsp,0x20
   1400048af:	pop    rbp
   1400048b0:	ret    
   1400048b1:	int3   
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	rex push rbp
   1400048c2:	push   rsi
   1400048c3:	push   rdi
   1400048c4:	push   r12
   1400048c6:	push   r13
   1400048c8:	push   r14
   1400048ca:	push   r15
   1400048cc:	sub    rsp,0x270
   1400048d3:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400048dc:	mov    QWORD PTR [rsp+0x2b0],rbx
   1400048e4:	mov    r13,rdx
   1400048e7:	mov    r14,rcx
   1400048ea:	call   0x14002b874
   1400048ef:	mov    rcx,rax
   1400048f2:	xor    esi,esi
   1400048f4:	mov    r8d,esi
   1400048f7:	test   rax,rax
   1400048fa:	setne  r8b
   1400048fe:	test   r8d,r8d
   140004901:	jne    0x14000490e
   140004903:	mov    ecx,0x80004005
   140004908:	call   0x140001430
   14000490d:	int3   
   14000490e:	mov    rax,QWORD PTR [rax]
   140004911:	call   QWORD PTR [rax+0x18]
   140004914:	lea    rbx,[rax+0x18]
   140004918:	mov    QWORD PTR [rsp+0x30],rbx
   14000491d:	mov    r15d,0xa
   140004923:	mov    DWORD PTR [rsp+0x2c0],r15d
   14000492b:	call   0x14002b874
   140004930:	mov    r11,rax
   140004933:	mov    ecx,esi
   140004935:	test   rax,rax
   140004938:	setne  cl
   14000493b:	test   ecx,ecx
   14000493d:	jne    0x14000494a
   14000493f:	mov    ecx,0x80004005
   140004944:	call   0x140001430
   140004949:	int3   
   14000494a:	mov    rax,QWORD PTR [rax]
   14000494d:	mov    rcx,r11
   140004950:	call   QWORD PTR [rax+0x18]
   140004953:	lea    rdi,[rax+0x18]
   140004957:	mov    QWORD PTR [rsp+0x48],rdi
   14000495c:	call   QWORD PTR [rip+0x83d1e]        # 0x140088680
   140004962:	mov    DWORD PTR [rsp+0x28],esi
   140004966:	mov    QWORD PTR [rsp+0x20],rsi
   14000496b:	or     ebp,0xffffffff
   14000496e:	mov    r9d,ebp
   140004971:	lea    r8,[rip+0x60eb0]        # 0x140065828
   140004978:	xor    edx,edx
   14000497a:	mov    ecx,eax
   14000497c:	call   QWORD PTR [rip+0x5fc96]        # 0x140064618
   140004982:	lea    r12d,[rax-0x1]
   140004986:	test   r12d,r12d
   140004989:	jle    0x1400049f3
   14000498b:	mov    edx,0x1
   140004990:	sub    edx,DWORD PTR [rbx-0x8]
   140004993:	mov    ecx,DWORD PTR [rbx-0xc]
   140004996:	sub    ecx,r12d
   140004999:	or     ecx,edx
   14000499b:	jge    0x1400049af
   14000499d:	mov    edx,r12d
   1400049a0:	lea    rcx,[rsp+0x30]
   1400049a5:	call   0x140002d40
   1400049aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049af:	call   QWORD PTR [rip+0x83ccb]        # 0x140088680
   1400049b5:	mov    ecx,eax
   1400049b7:	mov    DWORD PTR [rsp+0x28],r12d
   1400049bc:	mov    QWORD PTR [rsp+0x20],rbx
   1400049c1:	mov    r9d,ebp
   1400049c4:	lea    r8,[rip+0x60e5d]        # 0x140065828
   1400049cb:	xor    edx,edx
   1400049cd:	call   QWORD PTR [rip+0x5fc45]        # 0x140064618
   1400049d3:	cmp    r12d,DWORD PTR [rbx-0xc]
   1400049d7:	jg     0x1400049e8
   1400049d9:	mov    DWORD PTR [rbx-0x10],r12d
   1400049dd:	movsxd rax,r12d
   1400049e0:	mov    WORD PTR [rbx+rax*2],0x0
   1400049e6:	jmp    0x140004a50
   1400049e8:	mov    ecx,0x80070057
   1400049ed:	call   0x140001430
   1400049f2:	int3   
   1400049f3:	lea    rdx,[rbx-0x18]
   1400049f7:	mov    r12,QWORD PTR [rdx]
   1400049fa:	cmp    DWORD PTR [rdx+0x8],0x0
   1400049fe:	je     0x140004a50
   140004a00:	cmp    DWORD PTR [rdx+0x10],0x0
   140004a04:	jge    0x140004a21
   140004a06:	cmp    DWORD PTR [rbx-0xc],0x0
   140004a0a:	jge    0x140004a17
   140004a0c:	mov    ecx,0x80070057
   140004a11:	call   0x140001430
   140004a16:	int3   
   140004a17:	mov    DWORD PTR [rbx-0x10],esi
   140004a1a:	mov    WORD PTR [rbx],0x0
   140004a1f:	jmp    0x140004a50
   140004a21:	mov    eax,ebp
   140004a23:	lock xadd DWORD PTR [rdx+0x10],eax
   140004a28:	add    eax,0xffffffff
   140004a2b:	test   eax,eax
   140004a2d:	jg     0x140004a38
   140004a2f:	mov    rcx,QWORD PTR [rdx]
   140004a32:	mov    rax,QWORD PTR [rcx]
   140004a35:	call   QWORD PTR [rax+0x8]
   140004a38:	mov    rax,QWORD PTR [r12]
   140004a3c:	mov    rcx,r12
   140004a3f:	call   QWORD PTR [rax+0x18]
   140004a42:	lea    rbx,[rax+0x18]
   140004a46:	mov    QWORD PTR [rsp+0x30],rbx
   140004a4b:	mov    rdi,QWORD PTR [rsp+0x48]
   140004a50:	lea    rax,[rsp+0x40]
   140004a55:	mov    QWORD PTR [rsp+0x20],rax
   140004a5a:	mov    r9d,0xf003f
   140004a60:	xor    r8d,r8d
   140004a63:	mov    rdx,rbx
   140004a66:	mov    ecx,0x80000002
   140004a6b:	call   QWORD PTR [rip+0x5f5e7]        # 0x140064058
   140004a71:	test   eax,eax
   140004a73:	jne    0x140004ac7
   140004a75:	mov    DWORD PTR [rsp+0x38],0x4
   140004a7d:	mov    DWORD PTR [rsp+0x2c8],0x4
   140004a88:	lea    rax,[rsp+0x2c8]
   140004a90:	mov    QWORD PTR [rsp+0x28],rax
   140004a95:	lea    rax,[rsp+0x2c0]
   140004a9d:	mov    QWORD PTR [rsp+0x20],rax
   140004aa2:	lea    r9,[rsp+0x38]
   140004aa7:	xor    r8d,r8d
   140004aaa:	lea    rdx,[rip+0x60d5f]        # 0x140065810
   140004ab1:	mov    rcx,QWORD PTR [rsp+0x40]
   140004ab6:	call   QWORD PTR [rip+0x5f594]        # 0x140064050
   140004abc:	mov    rcx,QWORD PTR [rsp+0x40]
   140004ac1:	call   QWORD PTR [rip+0x5f5a1]        # 0x140064068
   140004ac7:	mov    eax,DWORD PTR [rsp+0x2c0]
   140004ace:	test   eax,eax
   140004ad0:	cmove  eax,r15d
   140004ad4:	mov    DWORD PTR [rsp+0x2c0],eax
   140004adb:	test   eax,eax
   140004add:	jle    0x140004b1b
   140004adf:	nop
   140004ae0:	lea    rcx,[rsp+0x60]
   140004ae5:	mov    rdx,r13
   140004ae8:	mov    r8d,0x20c
   140004aee:	call   0x1400478c0
   140004af3:	lea    rdx,[rsp+0x60]
   140004af8:	mov    rcx,r14
   140004afb:	call   0x1400018e0
   140004b00:	test   eax,eax
   140004b02:	jne    0x140004b1b
   140004b04:	mov    ecx,0x3e8
   140004b09:	call   QWORD PTR [rip+0x5fa79]        # 0x140064588
   140004b0f:	add    esi,0x1
   140004b12:	cmp    esi,DWORD PTR [rsp+0x2c0]
   140004b19:	jl     0x140004ae0
   140004b1b:	lea    rdx,[rdi-0x18]
   140004b1f:	mov    eax,ebp
   140004b21:	lock xadd DWORD PTR [rdx+0x10],eax
   140004b26:	add    eax,0xffffffff
   140004b29:	test   eax,eax
   140004b2b:	jg     0x140004b37
   140004b2d:	mov    rcx,QWORD PTR [rdx]
   140004b30:	mov    rax,QWORD PTR [rcx]
   140004b33:	call   QWORD PTR [rax+0x8]
   140004b36:	nop
   140004b37:	mov    rdx,QWORD PTR [rsp+0x30]
   140004b3c:	add    rdx,0xffffffffffffffe8
   140004b40:	lock xadd DWORD PTR [rdx+0x10],ebp
   140004b45:	add    ebp,0xffffffff
   140004b48:	test   ebp,ebp
   140004b4a:	jg     0x140004b55
   140004b4c:	mov    rcx,QWORD PTR [rdx]
   140004b4f:	mov    rax,QWORD PTR [rcx]
   140004b52:	call   QWORD PTR [rax+0x8]
   140004b55:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140004b5d:	add    rsp,0x270
   140004b64:	pop    r15
   140004b66:	pop    r14
   140004b68:	pop    r13
   140004b6a:	pop    r12
   140004b6c:	pop    rdi
   140004b6d:	pop    rsi
   140004b6e:	pop    rbp
   140004b6f:	ret    
   140004b70:	rex push rbp
   140004b72:	sub    rsp,0x20
   140004b76:	mov    rbp,rdx
   140004b79:	lea    rcx,[rbp+0x30]
   140004b7d:	call   0x1400010c0
   140004b82:	add    rsp,0x20
   140004b86:	pop    rbp
   140004b87:	ret    
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	rex push rbp
   140004b92:	sub    rsp,0x20
   140004b96:	mov    rbp,rdx
   140004b99:	lea    rcx,[rbp+0x48]
   140004b9d:	call   0x1400010c0
   140004ba2:	add    rsp,0x20
   140004ba6:	pop    rbp
   140004ba7:	ret    
   140004ba8:	int3   
   140004ba9:	int3   
   140004baa:	int3   
   140004bab:	int3   
   140004bac:	int3   
   140004bad:	int3   
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	mov    QWORD PTR [rsp+0x10],rbp
   140004bb5:	mov    QWORD PTR [rsp+0x18],rsi
   140004bba:	push   rdi
   140004bbb:	push   r12
   140004bbd:	push   r13
   140004bbf:	sub    rsp,0x30
   140004bc3:	xor    r13d,r13d
   140004bc6:	mov    r12,rcx
   140004bc9:	mov    rdi,rcx
   140004bcc:	mov    rbp,r13
   140004bcf:	mov    QWORD PTR [rsp+0x50],rbx
   140004bd4:	call   QWORD PTR [rip+0x83aa6]        # 0x140088680
   140004bda:	lea    r8,[rip+0x608ef]        # 0x1400654d0
   140004be1:	or     r9d,0xffffffff
   140004be5:	xor    edx,edx
   140004be7:	mov    ecx,eax
   140004be9:	mov    DWORD PTR [rsp+0x28],r13d
   140004bee:	mov    QWORD PTR [rsp+0x20],r13
   140004bf3:	call   QWORD PTR [rip+0x5fa1f]        # 0x140064618
   140004bf9:	lea    esi,[rax-0x1]
   140004bfc:	test   esi,esi
   140004bfe:	jle    0x140004c63
   140004c00:	mov    rcx,QWORD PTR [rdi]
   140004c03:	mov    edx,0x1
   140004c08:	sub    edx,DWORD PTR [rcx-0x8]
   140004c0b:	mov    ecx,DWORD PTR [rcx-0xc]
   140004c0e:	sub    ecx,esi
   140004c10:	or     edx,ecx
   140004c12:	jge    0x140004c1e
   140004c14:	mov    edx,esi
   140004c16:	mov    rcx,rdi
   140004c19:	call   0x140002d40
   140004c1e:	mov    rbx,QWORD PTR [rdi]
   140004c21:	call   QWORD PTR [rip+0x83a59]        # 0x140088680
   140004c27:	lea    r8,[rip+0x608a2]        # 0x1400654d0
   140004c2e:	mov    ecx,eax
   140004c30:	or     r9d,0xffffffff
   140004c34:	xor    edx,edx
   140004c36:	mov    DWORD PTR [rsp+0x28],esi
   140004c3a:	mov    QWORD PTR [rsp+0x20],rbx
   140004c3f:	call   QWORD PTR [rip+0x5f9d3]        # 0x140064618
   140004c45:	mov    r11,QWORD PTR [rdi]
   140004c48:	cmp    esi,DWORD PTR [r11-0xc]
   140004c4c:	jg     0x140004ce8
   140004c52:	mov    DWORD PTR [r11-0x10],esi
   140004c56:	mov    rax,QWORD PTR [rdi]
   140004c59:	movsxd rcx,esi
   140004c5c:	mov    WORD PTR [rax+rcx*2],r13w
   140004c61:	jmp    0x140004cb5
   140004c63:	mov    rax,QWORD PTR [rdi]
   140004c66:	cmp    DWORD PTR [rax-0x10],r13d
   140004c6a:	mov    rbx,QWORD PTR [rax-0x18]
   140004c6e:	lea    rdx,[rax-0x18]
   140004c72:	je     0x140004cb5
   140004c74:	cmp    DWORD PTR [rdx+0x10],r13d
   140004c78:	jge    0x140004c8d
   140004c7a:	cmp    DWORD PTR [rax-0xc],r13d
   140004c7e:	jl     0x140004cf3
   140004c80:	mov    DWORD PTR [rax-0x10],r13d
   140004c84:	mov    rax,QWORD PTR [rdi]
   140004c87:	mov    WORD PTR [rax],r13w
   140004c8b:	jmp    0x140004cb5
   140004c8d:	or     eax,0xffffffff
   140004c90:	lock xadd DWORD PTR [rdx+0x10],eax
   140004c95:	add    eax,0xffffffff
   140004c98:	test   eax,eax
   140004c9a:	jg     0x140004ca5
   140004c9c:	mov    rcx,QWORD PTR [rdx]
   140004c9f:	mov    rax,QWORD PTR [rcx]
   140004ca2:	call   QWORD PTR [rax+0x8]
   140004ca5:	mov    rax,QWORD PTR [rbx]
   140004ca8:	mov    rcx,rbx
   140004cab:	call   QWORD PTR [rax+0x18]
   140004cae:	add    rax,0x18
   140004cb2:	mov    QWORD PTR [rdi],rax
   140004cb5:	add    rbp,0x1
   140004cb9:	add    rdi,0x8
   140004cbd:	cmp    rbp,0x64
   140004cc1:	jl     0x140004bd4
   140004cc7:	mov    rbx,QWORD PTR [rsp+0x50]
   140004ccc:	mov    rbp,QWORD PTR [rsp+0x58]
   140004cd1:	mov    rsi,QWORD PTR [rsp+0x60]
   140004cd6:	mov    DWORD PTR [r12+0x320],r13d
   140004cde:	add    rsp,0x30
   140004ce2:	pop    r13
   140004ce4:	pop    r12
   140004ce6:	pop    rdi
   140004ce7:	ret    
   140004ce8:	mov    ecx,0x80070057
   140004ced:	call   0x140001430
   140004cf2:	int3   
   140004cf3:	mov    ecx,0x80070057
   140004cf8:	call   0x140001430
   140004cfd:	int3   
   140004cfe:	int3   
   140004cff:	int3   
   140004d00:	mov    QWORD PTR [rsp+0x8],rcx
   140004d05:	push   rdi
   140004d06:	sub    rsp,0x30
   140004d0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004d13:	mov    QWORD PTR [rsp+0x48],rbx
   140004d18:	mov    rdi,rdx
   140004d1b:	mov    rbx,rcx
   140004d1e:	call   0x14002b874
   140004d23:	mov    rcx,rax
   140004d26:	xor    r8d,r8d
   140004d29:	test   rax,rax
   140004d2c:	setne  r8b
   140004d30:	test   r8d,r8d
   140004d33:	jne    0x140004d40
   140004d35:	mov    ecx,0x80004005
   140004d3a:	call   0x140001430
   140004d3f:	int3   
   140004d40:	mov    rax,QWORD PTR [rax]
   140004d43:	call   QWORD PTR [rax+0x18]
   140004d46:	add    rax,0x18
   140004d4a:	mov    QWORD PTR [rbx],rax
   140004d4d:	test   rdi,rdi
   140004d50:	je     0x140004d7a
   140004d52:	test   rdi,0xffffffffffff0000
   140004d59:	jne    0x140004d7a
   140004d5b:	movzx  edi,di
   140004d5e:	mov    ecx,edi
   140004d60:	call   0x14002b860
   140004d65:	test   rax,rax
   140004d68:	je     0x140004d86
   140004d6a:	mov    r8d,edi
   140004d6d:	mov    rdx,rax
   140004d70:	mov    rcx,rbx
   140004d73:	call   0x140003650
   140004d78:	jmp    0x140004d86
   140004d7a:	mov    rdx,rdi
   140004d7d:	mov    rcx,rbx
   140004d80:	call   0x140003930
   140004d85:	nop
   140004d86:	mov    rax,rbx
   140004d89:	mov    rbx,QWORD PTR [rsp+0x48]
   140004d8e:	add    rsp,0x30
   140004d92:	pop    rdi
   140004d93:	ret    
   140004d94:	int3   
   140004d95:	int3   
   140004d96:	int3   
   140004d97:	int3   
   140004d98:	int3   
   140004d99:	int3   
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	rex push rbp
   140004da2:	sub    rsp,0x20
   140004da6:	mov    rbp,rdx
   140004da9:	mov    rcx,QWORD PTR [rbp+0x40]
   140004dad:	call   0x140001090
   140004db2:	add    rsp,0x20
   140004db6:	pop    rbp
   140004db7:	ret    
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	mov    QWORD PTR [rsp+0x10],rbx
   140004dc5:	push   rdi
   140004dc6:	sub    rsp,0x20
   140004dca:	mov    rdx,QWORD PTR [rdx]
   140004dcd:	mov    rbx,rcx
   140004dd0:	mov    rdi,QWORD PTR [rbx]
   140004dd3:	lea    rcx,[rdx-0x18]
   140004dd7:	sub    rdi,0x18
   140004ddb:	cmp    rcx,rdi
   140004dde:	je     0x140004e3d
   140004de0:	cmp    DWORD PTR [rdi+0x10],0x0
   140004de4:	jl     0x140004e31
   140004de6:	mov    rax,QWORD PTR [rdi]
   140004de9:	cmp    QWORD PTR [rcx],rax
   140004dec:	jne    0x140004e31
   140004dee:	mov    QWORD PTR [rsp+0x30],rsi
   140004df3:	call   0x140002da0
   140004df8:	or     ecx,0xffffffff
   140004dfb:	mov    rsi,rax
   140004dfe:	lock xadd DWORD PTR [rdi+0x10],ecx
   140004e03:	add    ecx,0xffffffff
   140004e06:	test   ecx,ecx
   140004e08:	jg     0x140004e17
   140004e0a:	mov    rcx,QWORD PTR [rdi]
   140004e0d:	mov    rdx,rdi
   140004e10:	mov    r8,QWORD PTR [rcx]
   140004e13:	call   QWORD PTR [r8+0x8]
   140004e17:	lea    rax,[rsi+0x18]
   140004e1b:	mov    rsi,QWORD PTR [rsp+0x30]
   140004e20:	mov    QWORD PTR [rbx],rax
   140004e23:	mov    rax,rbx
   140004e26:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e2b:	add    rsp,0x20
   140004e2f:	pop    rdi
   140004e30:	ret    
   140004e31:	mov    r8d,DWORD PTR [rdx-0x10]
   140004e35:	mov    rcx,rbx
   140004e38:	call   0x1400037d0
   140004e3d:	mov    rax,rbx
   140004e40:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e45:	add    rsp,0x20
   140004e49:	pop    rdi
   140004e4a:	ret    
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	mov    QWORD PTR [rsp+0x10],rdx
   140004e55:	push   rdi
   140004e56:	push   r12
   140004e58:	push   r13
   140004e5a:	sub    rsp,0x30
   140004e5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004e67:	mov    QWORD PTR [rsp+0x50],rbx
   140004e6c:	mov    QWORD PTR [rsp+0x60],rbp
   140004e71:	mov    QWORD PTR [rsp+0x68],rsi
   140004e76:	mov    r13,rdx
   140004e79:	mov    rsi,rcx
   140004e7c:	movsxd rax,DWORD PTR [rcx+0x12c0]
   140004e83:	lea    rbp,[rcx+rax*8]
   140004e87:	mov    rdx,QWORD PTR [rdx]
   140004e8a:	lea    rcx,[rdx-0x18]
   140004e8e:	mov    rdi,QWORD PTR [rbp+0x0]
   140004e92:	sub    rdi,0x18
   140004e96:	or     ebx,0xffffffff
   140004e99:	cmp    rcx,rdi
   140004e9c:	je     0x140004ee5
   140004e9e:	cmp    DWORD PTR [rdi+0x10],0x0
   140004ea2:	jl     0x140004ed9
   140004ea4:	mov    rax,QWORD PTR [rdi]
   140004ea7:	cmp    QWORD PTR [rcx],rax
   140004eaa:	jne    0x140004ed9
   140004eac:	call   0x140002da0
   140004eb1:	mov    r12,rax
   140004eb4:	mov    ecx,ebx
   140004eb6:	lock xadd DWORD PTR [rdi+0x10],ecx
   140004ebb:	add    ecx,ebx
   140004ebd:	test   ecx,ecx
   140004ebf:	jg     0x140004ece
   140004ec1:	mov    rcx,QWORD PTR [rdi]
   140004ec4:	mov    r8,QWORD PTR [rcx]
   140004ec7:	mov    rdx,rdi
   140004eca:	call   QWORD PTR [r8+0x8]
   140004ece:	lea    rax,[r12+0x18]
   140004ed3:	mov    QWORD PTR [rbp+0x0],rax
   140004ed7:	jmp    0x140004ee5
   140004ed9:	mov    r8d,DWORD PTR [rdx-0x10]
   140004edd:	mov    rcx,rbp
   140004ee0:	call   0x1400037d0
   140004ee5:	add    DWORD PTR [rsi+0x12c0],0x1
   140004eec:	mov    rdx,QWORD PTR [r13+0x0]
   140004ef0:	sub    rdx,0x18
   140004ef4:	lock xadd DWORD PTR [rdx+0x10],ebx
   140004ef9:	add    ebx,0xffffffff
   140004efc:	test   ebx,ebx
   140004efe:	jg     0x140004f09
   140004f00:	mov    rcx,QWORD PTR [rdx]
   140004f03:	mov    rax,QWORD PTR [rcx]
   140004f06:	call   QWORD PTR [rax+0x8]
   140004f09:	mov    rbx,QWORD PTR [rsp+0x50]
   140004f0e:	mov    rbp,QWORD PTR [rsp+0x60]
   140004f13:	mov    rsi,QWORD PTR [rsp+0x68]
   140004f18:	add    rsp,0x30
   140004f1c:	pop    r13
   140004f1e:	pop    r12
   140004f20:	pop    rdi
   140004f21:	ret    
   140004f22:	int3   
   140004f23:	int3   
   140004f24:	int3   
   140004f25:	int3   
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	rex push rbp
   140004f32:	sub    rsp,0x20
   140004f36:	mov    rbp,rdx
   140004f39:	mov    rcx,QWORD PTR [rbp+0x58]
   140004f3d:	call   0x1400010c0
   140004f42:	add    rsp,0x20
   140004f46:	pop    rbp
   140004f47:	ret    
   140004f48:	int3   
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	mov    QWORD PTR [rsp+0x10],rdx
   140004f55:	push   rdi
   140004f56:	push   r12
   140004f58:	push   r13
   140004f5a:	sub    rsp,0x30
   140004f5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004f67:	mov    QWORD PTR [rsp+0x50],rbx
   140004f6c:	mov    QWORD PTR [rsp+0x60],rbp
   140004f71:	mov    QWORD PTR [rsp+0x68],rsi
   140004f76:	mov    r13,rdx
   140004f79:	mov    rsi,rcx
   140004f7c:	movsxd rax,DWORD PTR [rcx+0x320]
   140004f83:	lea    rbp,[rcx+rax*8]
   140004f87:	mov    rdx,QWORD PTR [rdx]
   140004f8a:	lea    rcx,[rdx-0x18]
   140004f8e:	mov    rdi,QWORD PTR [rbp+0x0]
   140004f92:	sub    rdi,0x18
   140004f96:	or     ebx,0xffffffff
   140004f99:	cmp    rcx,rdi
   140004f9c:	je     0x140004fe5
   140004f9e:	cmp    DWORD PTR [rdi+0x10],0x0
   140004fa2:	jl     0x140004fd9
   140004fa4:	mov    rax,QWORD PTR [rdi]
   140004fa7:	cmp    QWORD PTR [rcx],rax
   140004faa:	jne    0x140004fd9
   140004fac:	call   0x140002da0
   140004fb1:	mov    r12,rax
   140004fb4:	mov    ecx,ebx
   140004fb6:	lock xadd DWORD PTR [rdi+0x10],ecx
   140004fbb:	add    ecx,ebx
   140004fbd:	test   ecx,ecx
   140004fbf:	jg     0x140004fce
   140004fc1:	mov    rcx,QWORD PTR [rdi]
   140004fc4:	mov    r8,QWORD PTR [rcx]
   140004fc7:	mov    rdx,rdi
   140004fca:	call   QWORD PTR [r8+0x8]
   140004fce:	lea    rax,[r12+0x18]
   140004fd3:	mov    QWORD PTR [rbp+0x0],rax
   140004fd7:	jmp    0x140004fe5
   140004fd9:	mov    r8d,DWORD PTR [rdx-0x10]
   140004fdd:	mov    rcx,rbp
   140004fe0:	call   0x1400037d0
   140004fe5:	add    DWORD PTR [rsi+0x320],0x1
   140004fec:	mov    rdx,QWORD PTR [r13+0x0]
   140004ff0:	sub    rdx,0x18
   140004ff4:	lock xadd DWORD PTR [rdx+0x10],ebx
   140004ff9:	add    ebx,0xffffffff
   140004ffc:	test   ebx,ebx
   140004ffe:	jg     0x140005009
   140005000:	mov    rcx,QWORD PTR [rdx]
   140005003:	mov    rax,QWORD PTR [rcx]
   140005006:	call   QWORD PTR [rax+0x8]
   140005009:	mov    rbx,QWORD PTR [rsp+0x50]
   14000500e:	mov    rbp,QWORD PTR [rsp+0x60]
   140005013:	mov    rsi,QWORD PTR [rsp+0x68]
   140005018:	add    rsp,0x30
   14000501c:	pop    r13
   14000501e:	pop    r12
   140005020:	pop    rdi
   140005021:	ret    
   140005022:	int3   
   140005023:	int3   
   140005024:	int3   
   140005025:	int3   
   140005026:	int3   
   140005027:	int3   
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	rex push rbp
   140005032:	sub    rsp,0x20
   140005036:	mov    rbp,rdx
   140005039:	mov    rcx,QWORD PTR [rbp+0x58]
   14000503d:	call   0x1400010c0
   140005042:	add    rsp,0x20
   140005046:	pop    rbp
   140005047:	ret    
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	mov    rax,rsp
   140005053:	push   rsi
   140005054:	push   rdi
   140005055:	push   r12
   140005057:	sub    rsp,0x280
   14000505e:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140005067:	mov    QWORD PTR [rax+0x8],rbx
   14000506b:	mov    QWORD PTR [rax+0x20],rbp
   14000506f:	mov    rax,QWORD PTR [rip+0x81cfa]        # 0x140086d70
   140005076:	xor    rax,rsp
   140005079:	mov    QWORD PTR [rsp+0x270],rax
   140005081:	mov    r12,r8
   140005084:	mov    rbp,rdx
   140005087:	mov    QWORD PTR [rsp+0x68],r8
   14000508c:	xor    ebx,ebx
   14000508e:	mov    DWORD PTR [rsp+0x30],ebx
   140005092:	call   0x14002b874
   140005097:	mov    rcx,rax
   14000509a:	mov    eax,ebx
   14000509c:	test   rcx,rcx
   14000509f:	setne  al
   1400050a2:	test   eax,eax
   1400050a4:	jne    0x1400050b1
   1400050a6:	mov    ecx,0x80004005
   1400050ab:	call   0x140001430
   1400050b0:	int3   
   1400050b1:	mov    rax,QWORD PTR [rcx]
   1400050b4:	call   QWORD PTR [rax+0x18]
   1400050b7:	add    rax,0x18
   1400050bb:	mov    QWORD PTR [rsp+0x38],rax
   1400050c0:	lea    rdx,[rip+0x60409]        # 0x1400654d0
   1400050c7:	test   rdx,0xffffffffffff0000
   1400050ce:	jne    0x1400050f1
   1400050d0:	movzx  edi,dx
   1400050d3:	mov    ecx,edi
   1400050d5:	call   0x14002b860
   1400050da:	test   rax,rax
   1400050dd:	je     0x1400050fc
   1400050df:	mov    r8d,edi
   1400050e2:	mov    rdx,rax
   1400050e5:	lea    rcx,[rsp+0x38]
   1400050ea:	call   0x140003650
   1400050ef:	jmp    0x1400050fc
   1400050f1:	lea    rcx,[rsp+0x38]
   1400050f6:	call   0x140003930
   1400050fb:	nop
   1400050fc:	call   0x14002b874
   140005101:	mov    rcx,rax
   140005104:	mov    eax,ebx
   140005106:	test   rcx,rcx
   140005109:	setne  al
   14000510c:	test   eax,eax
   14000510e:	jne    0x14000511b
   140005110:	mov    ecx,0x80004005
   140005115:	call   0x140001430
   14000511a:	int3   
   14000511b:	mov    rax,QWORD PTR [rcx]
   14000511e:	call   QWORD PTR [rax+0x18]
   140005121:	add    rax,0x18
   140005125:	mov    QWORD PTR [rsp+0x40],rax
   14000512a:	call   0x14002b874
   14000512f:	mov    rcx,rax
   140005132:	test   rax,rax
   140005135:	setne  bl
   140005138:	test   ebx,ebx
   14000513a:	jne    0x140005147
   14000513c:	mov    ecx,0x80004005
   140005141:	call   0x140001430
   140005146:	int3   
   140005147:	mov    rax,QWORD PTR [rax]
   14000514a:	call   QWORD PTR [rax+0x18]
   14000514d:	lea    rbx,[rax+0x18]
   140005151:	mov    QWORD PTR [rsp+0x48],rbx
   140005156:	mov    edx,0x200
   14000515b:	lea    rcx,[rsp+0x70]
   140005160:	call   QWORD PTR [rip+0x5f46a]        # 0x1400645d0
   140005166:	mov    rdx,QWORD PTR [r12]
   14000516a:	lea    rcx,[rsp+0x70]
   14000516f:	call   QWORD PTR [rip+0x5f463]        # 0x1400645d8
   140005175:	lea    rdx,[rsp+0x30]
   14000517a:	lea    rcx,[rsp+0x70]
   14000517f:	call   0x14001abe8
   140005184:	mov    esi,eax
   140005186:	mov    edx,eax
   140005188:	mov    ecx,0x40
   14000518d:	call   QWORD PTR [rip+0x5f3e5]        # 0x140064578
   140005193:	mov    rdi,rax
   140005196:	test   rax,rax
   140005199:	je     0x14000530e
   14000519f:	mov    r9,rax
   1400051a2:	mov    r8d,esi
   1400051a5:	mov    edx,DWORD PTR [rsp+0x30]
   1400051a9:	lea    rcx,[rsp+0x70]
   1400051ae:	call   0x14001abe2
   1400051b3:	test   eax,eax
   1400051b5:	je     0x140005305
   1400051bb:	lea    r9,[rsp+0x58]
   1400051c0:	lea    r8,[rsp+0x50]
   1400051c5:	lea    rdx,[rip+0x60744]        # 0x140065910
   1400051cc:	mov    rcx,rdi
   1400051cf:	call   0x14001abdc
   1400051d4:	test   eax,eax
   1400051d6:	je     0x14000530e
   1400051dc:	mov    rax,QWORD PTR [rsp+0x50]
   1400051e1:	mov    ecx,DWORD PTR [rax+0xc]
   1400051e4:	mov    r8d,DWORD PTR [rax+0x8]
   1400051e8:	movzx  eax,cx
   1400051eb:	shr    ecx,0x10
   1400051ee:	movzx  r9d,r8w
   1400051f2:	shr    r8d,0x10
   1400051f6:	mov    DWORD PTR [rsp+0x28],eax
   1400051fa:	mov    DWORD PTR [rsp+0x20],ecx
   1400051fe:	lea    rdx,[rip+0x606f3]        # 0x1400658f8
   140005205:	lea    rcx,[rsp+0x38]
   14000520a:	call   0x140004180
   14000520f:	mov    rdi,QWORD PTR [rsp+0x38]
   140005214:	mov    rcx,QWORD PTR [rdi-0x18]
   140005218:	mov    rax,QWORD PTR [rcx]
   14000521b:	call   QWORD PTR [rax+0x20]
   14000521e:	mov    rcx,rax
   140005221:	cmp    DWORD PTR [rdi-0x8],0x0
   140005225:	jl     0x14000523d
   140005227:	cmp    rax,QWORD PTR [rdi-0x18]
   14000522b:	jne    0x14000523d
   14000522d:	lea    rsi,[rdi-0x18]
   140005231:	lock add DWORD PTR [rdi-0x8],0x1
   140005236:	mov    rbx,QWORD PTR [rsp+0x48]
   14000523b:	jmp    0x14000527b
   14000523d:	mov    rax,QWORD PTR [rax]
   140005240:	mov    r8d,0x2
   140005246:	mov    edx,DWORD PTR [rdi-0x10]
   140005249:	call   QWORD PTR [rax]
   14000524b:	mov    rsi,rax
   14000524e:	test   rax,rax
   140005251:	jne    0x140005259
   140005253:	call   0x1400021a0
   140005258:	int3   
   140005259:	mov    eax,DWORD PTR [rdi-0x10]
   14000525c:	mov    DWORD PTR [rsi+0x8],eax
   14000525f:	mov    eax,DWORD PTR [rdi-0x10]
   140005262:	add    eax,0x1
   140005265:	movsxd rdx,eax
   140005268:	lea    r9,[rdx+rdx*1]
   14000526c:	mov    r8,rdi
   14000526f:	add    rdx,rdx
   140005272:	lea    rcx,[rsi+0x18]
   140005276:	call   0x1400466d0
   14000527b:	lea    rax,[rsi+0x18]
   14000527f:	mov    QWORD PTR [rbp+0x0],rax
   140005283:	lea    rdx,[rbx-0x18]
   140005287:	or     ebx,0xffffffff
   14000528a:	mov    eax,ebx
   14000528c:	lock xadd DWORD PTR [rdx+0x10],eax
   140005291:	add    eax,ebx
   140005293:	test   eax,eax
   140005295:	jg     0x1400052a1
   140005297:	mov    rcx,QWORD PTR [rdx]
   14000529a:	mov    rax,QWORD PTR [rcx]
   14000529d:	call   QWORD PTR [rax+0x8]
   1400052a0:	nop
   1400052a1:	mov    rdx,QWORD PTR [rsp+0x40]
   1400052a6:	add    rdx,0xffffffffffffffe8
   1400052aa:	mov    eax,ebx
   1400052ac:	lock xadd DWORD PTR [rdx+0x10],eax
   1400052b1:	add    eax,0xffffffff
   1400052b4:	test   eax,eax
   1400052b6:	jg     0x1400052c2
   1400052b8:	mov    rcx,QWORD PTR [rdx]
   1400052bb:	mov    rax,QWORD PTR [rcx]
   1400052be:	call   QWORD PTR [rax+0x8]
   1400052c1:	nop
   1400052c2:	mov    eax,ebx
   1400052c4:	lock xadd DWORD PTR [rdi-0x8],eax
   1400052c9:	add    eax,0xffffffff
   1400052cc:	test   eax,eax
   1400052ce:	jg     0x1400052df
   1400052d0:	mov    rcx,QWORD PTR [rdi-0x18]
   1400052d4:	mov    rax,QWORD PTR [rcx]
   1400052d7:	lea    rdx,[rdi-0x18]
   1400052db:	call   QWORD PTR [rax+0x8]
   1400052de:	nop
   1400052df:	mov    rdx,QWORD PTR [r12]
   1400052e3:	sub    rdx,0x18
   1400052e7:	lock xadd DWORD PTR [rdx+0x10],ebx
   1400052ec:	add    ebx,0xffffffff
   1400052ef:	test   ebx,ebx
   1400052f1:	jg     0x1400052fd
   1400052f3:	mov    rcx,QWORD PTR [rdx]
   1400052f6:	mov    r8,QWORD PTR [rcx]
   1400052f9:	call   QWORD PTR [r8+0x8]
   1400052fd:	mov    rax,rbp
   140005300:	jmp    0x1400053fe
   140005305:	mov    rcx,rdi
   140005308:	call   QWORD PTR [rip+0x5f272]        # 0x140064580
   14000530e:	mov    rdi,QWORD PTR [rsp+0x38]
   140005313:	mov    rcx,QWORD PTR [rdi-0x18]
   140005317:	mov    rax,QWORD PTR [rcx]
   14000531a:	call   QWORD PTR [rax+0x20]
   14000531d:	mov    rcx,rax
   140005320:	cmp    DWORD PTR [rdi-0x8],0x0
   140005324:	jl     0x14000533c
   140005326:	cmp    rax,QWORD PTR [rdi-0x18]
   14000532a:	jne    0x14000533c
   14000532c:	lea    rsi,[rdi-0x18]
   140005330:	lock add DWORD PTR [rdi-0x8],0x1
   140005335:	mov    rbx,QWORD PTR [rsp+0x48]
   14000533a:	jmp    0x14000537a
   14000533c:	mov    rax,QWORD PTR [rax]
   14000533f:	mov    r8d,0x2
   140005345:	mov    edx,DWORD PTR [rdi-0x10]
   140005348:	call   QWORD PTR [rax]
   14000534a:	mov    rsi,rax
   14000534d:	test   rax,rax
   140005350:	jne    0x140005358
   140005352:	call   0x1400021a0
   140005357:	int3   
   140005358:	mov    eax,DWORD PTR [rdi-0x10]
   14000535b:	mov    DWORD PTR [rsi+0x8],eax
   14000535e:	mov    eax,DWORD PTR [rdi-0x10]
   140005361:	add    eax,0x1
   140005364:	movsxd rdx,eax
   140005367:	lea    r9,[rdx+rdx*1]
   14000536b:	mov    r8,rdi
   14000536e:	add    rdx,rdx
   140005371:	lea    rcx,[rsi+0x18]
   140005375:	call   0x1400466d0
   14000537a:	lea    rax,[rsi+0x18]
   14000537e:	mov    QWORD PTR [rbp+0x0],rax
   140005382:	lea    rdx,[rbx-0x18]
   140005386:	or     ebx,0xffffffff
   140005389:	mov    eax,ebx
   14000538b:	lock xadd DWORD PTR [rdx+0x10],eax
   140005390:	add    eax,ebx
   140005392:	test   eax,eax
   140005394:	jg     0x1400053a0
   140005396:	mov    rcx,QWORD PTR [rdx]
   140005399:	mov    rax,QWORD PTR [rcx]
   14000539c:	call   QWORD PTR [rax+0x8]
   14000539f:	nop
   1400053a0:	mov    rdx,QWORD PTR [rsp+0x40]
   1400053a5:	add    rdx,0xffffffffffffffe8
   1400053a9:	mov    eax,ebx
   1400053ab:	lock xadd DWORD PTR [rdx+0x10],eax
   1400053b0:	add    eax,0xffffffff
   1400053b3:	test   eax,eax
   1400053b5:	jg     0x1400053c1
   1400053b7:	mov    rcx,QWORD PTR [rdx]
   1400053ba:	mov    rax,QWORD PTR [rcx]
   1400053bd:	call   QWORD PTR [rax+0x8]
   1400053c0:	nop
   1400053c1:	mov    eax,ebx
   1400053c3:	lock xadd DWORD PTR [rdi-0x8],eax
   1400053c8:	add    eax,0xffffffff
   1400053cb:	test   eax,eax
   1400053cd:	jg     0x1400053de
   1400053cf:	mov    rcx,QWORD PTR [rdi-0x18]
   1400053d3:	mov    rax,QWORD PTR [rcx]
   1400053d6:	lea    rdx,[rdi-0x18]
   1400053da:	call   QWORD PTR [rax+0x8]
   1400053dd:	nop
   1400053de:	mov    rdx,QWORD PTR [r12]
   1400053e2:	sub    rdx,0x18
   1400053e6:	lock xadd DWORD PTR [rdx+0x10],ebx
   1400053eb:	add    ebx,0xffffffff
   1400053ee:	test   ebx,ebx
   1400053f0:	jg     0x1400053fb
   1400053f2:	mov    rcx,QWORD PTR [rdx]
   1400053f5:	mov    rax,QWORD PTR [rcx]
   1400053f8:	call   QWORD PTR [rax+0x8]
   1400053fb:	mov    rax,rbp
   1400053fe:	mov    rcx,QWORD PTR [rsp+0x270]
   140005406:	xor    rcx,rsp
   140005409:	call   0x140046470
   14000540e:	lea    r11,[rsp+0x280]
   140005416:	mov    rbx,QWORD PTR [r11+0x20]
   14000541a:	mov    rbp,QWORD PTR [r11+0x38]
   14000541e:	mov    rsp,r11
   140005421:	pop    r12
   140005423:	pop    rdi
   140005424:	pop    rsi
   140005425:	ret    
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	rex push rbp
   140005432:	sub    rsp,0x20
   140005436:	mov    rbp,rdx
   140005439:	mov    rcx,QWORD PTR [rbp+0x68]
   14000543d:	call   0x1400010c0
   140005442:	add    rsp,0x20
   140005446:	pop    rbp
   140005447:	ret    
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	rex push rbp
   140005452:	sub    rsp,0x20
   140005456:	mov    rbp,rdx
   140005459:	lea    rcx,[rbp+0x38]
   14000545d:	call   0x140001090
   140005462:	add    rsp,0x20
   140005466:	pop    rbp
   140005467:	ret    
   140005468:	int3   
   140005469:	int3   
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	int3   
   14000546d:	int3   
   14000546e:	int3   
   14000546f:	int3   
   140005470:	rex push rbp
   140005472:	sub    rsp,0x20
   140005476:	mov    rbp,rdx
   140005479:	lea    rcx,[rbp+0x38]
   14000547d:	call   0x1400010c0
   140005482:	add    rsp,0x20
   140005486:	pop    rbp
   140005487:	ret    
   140005488:	int3   
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	rex push rbp
   140005492:	sub    rsp,0x20
   140005496:	mov    rbp,rdx
   140005499:	lea    rcx,[rbp+0x40]
   14000549d:	call   0x1400010c0
   1400054a2:	add    rsp,0x20
   1400054a6:	pop    rbp
   1400054a7:	ret    
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	rex push rbp
   1400054b2:	sub    rsp,0x20
   1400054b6:	mov    rbp,rdx
   1400054b9:	lea    rcx,[rbp+0x48]
   1400054bd:	call   0x1400010c0
   1400054c2:	add    rsp,0x20
   1400054c6:	pop    rbp
   1400054c7:	ret    
   1400054c8:	int3   
   1400054c9:	int3   
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	int3   
   1400054cd:	int3   
   1400054ce:	int3   
   1400054cf:	int3   
   1400054d0:	mov    rax,rsp
   1400054d3:	push   rsi
   1400054d4:	push   rdi
   1400054d5:	push   r12
   1400054d7:	sub    rsp,0x100
   1400054de:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400054e7:	mov    QWORD PTR [rax+0x10],rbx
   1400054eb:	mov    QWORD PTR [rax+0x18],rbp
   1400054ef:	mov    rax,QWORD PTR [rip+0x8187a]        # 0x140086d70
   1400054f6:	xor    rax,rsp
   1400054f9:	mov    QWORD PTR [rsp+0xf0],rax
   140005501:	mov    r12,rcx
   140005504:	call   0x14002b874
   140005509:	mov    rcx,rax
   14000550c:	xor    esi,esi
   14000550e:	mov    edx,esi
   140005510:	test   rax,rax
   140005513:	setne  dl
   140005516:	test   edx,edx
   140005518:	jne    0x140005525
   14000551a:	mov    ecx,0x80004005
   14000551f:	call   0x140001430
   140005524:	int3   
   140005525:	mov    rax,QWORD PTR [rax]
   140005528:	call   QWORD PTR [rax+0x18]
   14000552b:	add    rax,0x18
   14000552f:	mov    QWORD PTR [rsp+0x40],rax
   140005534:	call   0x14002b874
   140005539:	mov    r11,rax
   14000553c:	mov    ecx,esi
   14000553e:	test   rax,rax
   140005541:	setne  cl
   140005544:	test   ecx,ecx
   140005546:	jne    0x140005553
   140005548:	mov    ecx,0x80004005
   14000554d:	call   0x140001430
   140005552:	int3   
   140005553:	mov    rax,QWORD PTR [rax]
   140005556:	mov    rcx,r11
   140005559:	call   QWORD PTR [rax+0x18]
   14000555c:	add    rax,0x18
   140005560:	mov    QWORD PTR [rsp+0x58],rax
   140005565:	call   0x14002b874
   14000556a:	mov    r11,rax
   14000556d:	mov    ecx,esi
   14000556f:	test   rax,rax
   140005572:	setne  cl
   140005575:	test   ecx,ecx
   140005577:	jne    0x140005584
   140005579:	mov    ecx,0x80004005
   14000557e:	call   0x140001430
   140005583:	int3   
   140005584:	mov    rax,QWORD PTR [rax]
   140005587:	mov    rcx,r11
   14000558a:	call   QWORD PTR [rax+0x18]
   14000558d:	lea    rbx,[rax+0x18]
   140005591:	mov    QWORD PTR [rsp+0x30],rbx
   140005596:	mov    rcx,r12
   140005599:	call   0x140002a00
   14000559e:	or     edi,0xffffffff
   1400055a1:	test   eax,eax
   1400055a3:	je     0x140005814
   1400055a9:	lea    rdx,[rip+0x603d0]        # 0x140065980
   1400055b0:	lea    rcx,[rsp+0x40]
   1400055b5:	call   0x140003930
   1400055ba:	mov    rbx,QWORD PTR [rsp+0x40]
   1400055bf:	mov    rcx,QWORD PTR [rbx-0x18]
   1400055c3:	mov    rax,QWORD PTR [rcx]
   1400055c6:	call   QWORD PTR [rax+0x20]
   1400055c9:	mov    rcx,rax
   1400055cc:	cmp    DWORD PTR [rbx-0x8],0x0
   1400055d0:	jl     0x1400055e3
   1400055d2:	cmp    rax,QWORD PTR [rbx-0x18]
   1400055d6:	jne    0x1400055e3
   1400055d8:	lea    rbp,[rbx-0x18]
   1400055dc:	lock add DWORD PTR [rbx-0x8],0x1
   1400055e1:	jmp    0x140005621
   1400055e3:	mov    rax,QWORD PTR [rax]
   1400055e6:	mov    r8d,0x2
   1400055ec:	mov    edx,DWORD PTR [rbx-0x10]
   1400055ef:	call   QWORD PTR [rax]
   1400055f1:	mov    rbp,rax
   1400055f4:	test   rax,rax
   1400055f7:	jne    0x1400055ff
   1400055f9:	call   0x1400021a0
   1400055fe:	int3   
   1400055ff:	mov    eax,DWORD PTR [rbx-0x10]
   140005602:	mov    DWORD PTR [rbp+0x8],eax
   140005605:	mov    eax,DWORD PTR [rbx-0x10]
   140005608:	add    eax,0x1
   14000560b:	movsxd rdx,eax
   14000560e:	lea    r9,[rdx+rdx*1]
   140005612:	mov    r8,rbx
   140005615:	add    rdx,rdx
   140005618:	lea    rcx,[rbp+0x18]
   14000561c:	call   0x1400466d0
   140005621:	lea    rax,[rbp+0x18]
   140005625:	mov    QWORD PTR [rsp+0x50],rax
   14000562a:	lea    r8,[rsp+0x50]
   14000562f:	lea    rdx,[rsp+0x60]
   140005634:	mov    rcx,r12
   140005637:	call   0x140005050
   14000563c:	mov    r9,QWORD PTR [rax]
   14000563f:	lea    r8,[rip+0x60332]        # 0x140065978
   140005646:	mov    edx,0x32
   14000564b:	lea    rcx,[rsp+0x80]
   140005653:	call   0x140047c00
   140005658:	mov    rdx,QWORD PTR [rsp+0x60]
   14000565d:	add    rdx,0xffffffffffffffe8
   140005661:	mov    eax,edi
   140005663:	lock xadd DWORD PTR [rdx+0x10],eax
   140005668:	add    eax,0xffffffff
   14000566b:	test   eax,eax
   14000566d:	jg     0x140005678
   14000566f:	mov    rcx,QWORD PTR [rdx]
   140005672:	mov    rax,QWORD PTR [rcx]
   140005675:	call   QWORD PTR [rax+0x8]
   140005678:	cmp    DWORD PTR [r12+0xeb12c],0x0
   140005681:	jne    0x1400057ab
   140005687:	call   0x14002b874
   14000568c:	mov    rcx,rax
   14000568f:	test   rax,rax
   140005692:	setne  sil
   140005696:	test   esi,esi
   140005698:	jne    0x1400056a5
   14000569a:	mov    ecx,0x80004005
   14000569f:	call   0x140001430
   1400056a4:	int3   
   1400056a5:	mov    rax,QWORD PTR [rax]
   1400056a8:	call   QWORD PTR [rax+0x18]
   1400056ab:	add    rax,0x18
   1400056af:	mov    QWORD PTR [rsp+0x38],rax
   1400056b4:	lea    rdx,[rip+0x602a5]        # 0x140065960
   1400056bb:	test   rdx,0xffffffffffff0000
   1400056c2:	jne    0x1400056e5
   1400056c4:	movzx  ebx,dx
   1400056c7:	mov    ecx,ebx
   1400056c9:	call   0x14002b860
   1400056ce:	test   rax,rax
   1400056d1:	je     0x1400056f0
   1400056d3:	mov    r8d,ebx
   1400056d6:	mov    rdx,rax
   1400056d9:	lea    rcx,[rsp+0x38]
   1400056de:	call   0x140003650
   1400056e3:	jmp    0x1400056f0
   1400056e5:	lea    rcx,[rsp+0x38]
   1400056ea:	call   0x140003930
   1400056ef:	nop
   1400056f0:	lea    rdx,[r12+0x290]
   1400056f8:	lea    r8,[rsp+0x38]
   1400056fd:	lea    rcx,[rsp+0x68]
   140005702:	call   0x140003e20
   140005707:	nop
   140005708:	mov    rdx,QWORD PTR [rax]
   14000570b:	lea    rcx,[rdx-0x18]
   14000570f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005714:	add    rbx,0xffffffffffffffe8
   140005718:	cmp    rcx,rbx
   14000571b:	je     0x140005768
   14000571d:	cmp    DWORD PTR [rbx+0x10],0x0
   140005721:	jl     0x140005759
   140005723:	mov    rax,QWORD PTR [rbx]
   140005726:	cmp    QWORD PTR [rcx],rax
   140005729:	jne    0x140005759
   14000572b:	call   0x140002da0
   140005730:	mov    rsi,rax
   140005733:	mov    ecx,edi
   140005735:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000573a:	add    ecx,0xffffffff
   14000573d:	test   ecx,ecx
   14000573f:	jg     0x14000574e
   140005741:	mov    rcx,QWORD PTR [rbx]
   140005744:	mov    r8,QWORD PTR [rcx]
   140005747:	mov    rdx,rbx
   14000574a:	call   QWORD PTR [r8+0x8]
   14000574e:	lea    rax,[rsi+0x18]
   140005752:	mov    QWORD PTR [rsp+0x30],rax
   140005757:	jmp    0x140005768
   140005759:	mov    r8d,DWORD PTR [rdx-0x10]
   14000575d:	lea    rcx,[rsp+0x30]
   140005762:	call   0x1400037d0
   140005767:	nop
   140005768:	mov    rdx,QWORD PTR [rsp+0x68]
   14000576d:	add    rdx,0xffffffffffffffe8
   140005771:	mov    eax,edi
   140005773:	lock xadd DWORD PTR [rdx+0x10],eax
   140005778:	add    eax,0xffffffff
   14000577b:	test   eax,eax
   14000577d:	jg     0x140005789
   14000577f:	mov    rcx,QWORD PTR [rdx]
   140005782:	mov    rax,QWORD PTR [rcx]
   140005785:	call   QWORD PTR [rax+0x8]
   140005788:	nop
   140005789:	mov    rdx,QWORD PTR [rsp+0x38]
   14000578e:	add    rdx,0xffffffffffffffe8
   140005792:	mov    eax,edi
   140005794:	lock xadd DWORD PTR [rdx+0x10],eax
   140005799:	add    eax,0xffffffff
   14000579c:	test   eax,eax
   14000579e:	jg     0x1400057bc
   1400057a0:	mov    rcx,QWORD PTR [rdx]
   1400057a3:	mov    rax,QWORD PTR [rcx]
   1400057a6:	call   QWORD PTR [rax+0x8]
   1400057a9:	jmp    0x1400057bc
   1400057ab:	lea    rdx,[rip+0x60076]        # 0x140065828
   1400057b2:	lea    rcx,[rsp+0x30]
   1400057b7:	call   0x140003930
   1400057bc:	lea    r8,[rsp+0x48]
   1400057c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057c6:	mov    rdx,rbx
   1400057c9:	mov    ecx,0x80000002
   1400057ce:	call   QWORD PTR [rip+0x5e86c]        # 0x140064040
   1400057d4:	test   eax,eax
   1400057d6:	jne    0x140005814
   1400057d8:	mov    DWORD PTR [rsp+0x28],0x64
   1400057e0:	lea    rax,[rsp+0x80]
   1400057e8:	mov    QWORD PTR [rsp+0x20],rax
   1400057ed:	mov    r9d,0x1
   1400057f3:	xor    r8d,r8d
   1400057f6:	lea    rdx,[rip+0x60143]        # 0x140065940
   1400057fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005802:	call   QWORD PTR [rip+0x5e840]        # 0x140064048
   140005808:	mov    rcx,QWORD PTR [rsp+0x48]
   14000580d:	call   QWORD PTR [rip+0x5e855]        # 0x140064068
   140005813:	nop
   140005814:	lea    rdx,[rbx-0x18]
   140005818:	mov    eax,edi
   14000581a:	lock xadd DWORD PTR [rdx+0x10],eax
   14000581f:	add    eax,0xffffffff
   140005822:	test   eax,eax
   140005824:	jg     0x140005830
   140005826:	mov    rcx,QWORD PTR [rdx]
   140005829:	mov    rax,QWORD PTR [rcx]
   14000582c:	call   QWORD PTR [rax+0x8]
   14000582f:	nop
   140005830:	mov    rdx,QWORD PTR [rsp+0x58]
   140005835:	add    rdx,0xffffffffffffffe8
   140005839:	mov    eax,edi
   14000583b:	lock xadd DWORD PTR [rdx+0x10],eax
   140005840:	add    eax,0xffffffff
   140005843:	test   eax,eax
   140005845:	jg     0x140005851
   140005847:	mov    rcx,QWORD PTR [rdx]
   14000584a:	mov    rax,QWORD PTR [rcx]
   14000584d:	call   QWORD PTR [rax+0x8]
   140005850:	nop
   140005851:	mov    rdx,QWORD PTR [rsp+0x40]
   140005856:	add    rdx,0xffffffffffffffe8
   14000585a:	lock xadd DWORD PTR [rdx+0x10],edi
   14000585f:	add    edi,0xffffffff
   140005862:	test   edi,edi
   140005864:	jg     0x14000586f
   140005866:	mov    rcx,QWORD PTR [rdx]
   140005869:	mov    rax,QWORD PTR [rcx]
   14000586c:	call   QWORD PTR [rax+0x8]
   14000586f:	mov    rcx,QWORD PTR [rsp+0xf0]
   140005877:	xor    rcx,rsp
   14000587a:	call   0x140046470
   14000587f:	lea    r11,[rsp+0x100]
   140005887:	mov    rbx,QWORD PTR [r11+0x28]
   14000588b:	mov    rbp,QWORD PTR [r11+0x30]
   14000588f:	mov    rsp,r11
   140005892:	pop    r12
   140005894:	pop    rdi
   140005895:	pop    rsi
   140005896:	ret    
   140005897:	int3   
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	rex push rbp
   1400058a2:	sub    rsp,0x20
   1400058a6:	mov    rbp,rdx
   1400058a9:	lea    rcx,[rbp+0x40]
   1400058ad:	call   0x1400010c0
   1400058b2:	add    rsp,0x20
   1400058b6:	pop    rbp
   1400058b7:	ret    
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	int3   
   1400058bd:	int3   
   1400058be:	int3   
   1400058bf:	int3   
   1400058c0:	rex push rbp
   1400058c2:	sub    rsp,0x20
   1400058c6:	mov    rbp,rdx
   1400058c9:	lea    rcx,[rbp+0x58]
   1400058cd:	call   0x1400010c0
   1400058d2:	add    rsp,0x20
   1400058d6:	pop    rbp
   1400058d7:	ret    
   1400058d8:	int3   
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	rex push rbp
   1400058e2:	sub    rsp,0x20
   1400058e6:	mov    rbp,rdx
   1400058e9:	lea    rcx,[rbp+0x30]
   1400058ed:	call   0x1400010c0
   1400058f2:	add    rsp,0x20
   1400058f6:	pop    rbp
   1400058f7:	ret    
   1400058f8:	int3   
   1400058f9:	int3   
   1400058fa:	int3   
   1400058fb:	int3   
   1400058fc:	int3   
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	rex push rbp
   140005902:	sub    rsp,0x20
   140005906:	mov    rbp,rdx
   140005909:	lea    rcx,[rbp+0x38]
   14000590d:	call   0x140001090
   140005912:	add    rsp,0x20
   140005916:	pop    rbp
   140005917:	ret    
   140005918:	int3   
   140005919:	int3   
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	rex push rbp
   140005922:	sub    rsp,0x20
   140005926:	mov    rbp,rdx
   140005929:	lea    rcx,[rbp+0x38]
   14000592d:	call   0x1400010c0
   140005932:	add    rsp,0x20
   140005936:	pop    rbp
   140005937:	ret    
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	rex push rbp
   140005942:	sub    rsp,0x20
   140005946:	mov    rbp,rdx
   140005949:	lea    rcx,[rbp+0x68]
   14000594d:	call   0x1400010c0
   140005952:	add    rsp,0x20
   140005956:	pop    rbp
   140005957:	ret    
   140005958:	int3   
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	rex push rdi
   140005962:	sub    rsp,0x40
   140005966:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000596f:	mov    QWORD PTR [rsp+0x60],rbx
   140005974:	cmp    DWORD PTR [rcx+0x298],0x0
   14000597b:	je     0x140005a5c
   140005981:	call   0x14002b874
   140005986:	mov    r11,rax
   140005989:	xor    ecx,ecx
   14000598b:	test   rax,rax
   14000598e:	setne  cl
   140005991:	test   ecx,ecx
   140005993:	jne    0x1400059a0
   140005995:	mov    ecx,0x80004005
   14000599a:	call   0x140001430
   14000599f:	int3   
   1400059a0:	mov    rax,QWORD PTR [rax]
   1400059a3:	mov    rcx,r11
   1400059a6:	call   QWORD PTR [rax+0x18]
   1400059a9:	lea    rbx,[rax+0x18]
   1400059ad:	mov    QWORD PTR [rsp+0x50],rbx
   1400059b2:	lea    rdx,[rip+0x60067]        # 0x140065a20
   1400059b9:	test   rdx,0xffffffffffff0000
   1400059c0:	jne    0x1400059e8
   1400059c2:	movzx  edi,dx
   1400059c5:	mov    ecx,edi
   1400059c7:	call   0x14002b860
   1400059cc:	test   rax,rax
   1400059cf:	je     0x1400059f7
   1400059d1:	mov    r8d,edi
   1400059d4:	mov    rdx,rax
   1400059d7:	lea    rcx,[rsp+0x50]
   1400059dc:	call   0x140003650
   1400059e1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400059e6:	jmp    0x1400059f7
   1400059e8:	lea    rcx,[rsp+0x50]
   1400059ed:	call   0x140003930
   1400059f2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400059f7:	lea    rax,[rsp+0x58]
   1400059fc:	mov    QWORD PTR [rsp+0x20],rax
   140005a01:	mov    r9d,0xf003f
   140005a07:	xor    r8d,r8d
   140005a0a:	mov    rdx,rbx
   140005a0d:	mov    ecx,0x80000002
   140005a12:	call   QWORD PTR [rip+0x5e640]        # 0x140064058
   140005a18:	test   eax,eax
   140005a1a:	sete   dil
   140005a1e:	lea    rdx,[rbx-0x18]
   140005a22:	or     eax,0xffffffff
   140005a25:	lock xadd DWORD PTR [rdx+0x10],eax
   140005a2a:	add    eax,0xffffffff
   140005a2d:	test   eax,eax
   140005a2f:	jg     0x140005a3a
   140005a31:	mov    rcx,QWORD PTR [rdx]
   140005a34:	mov    rax,QWORD PTR [rcx]
   140005a37:	call   QWORD PTR [rax+0x8]
   140005a3a:	test   dil,dil
   140005a3d:	je     0x140005a5c
   140005a3f:	lea    rdx,[rip+0x5ff8a]        # 0x1400659d0
   140005a46:	mov    rcx,QWORD PTR [rsp+0x58]
   140005a4b:	call   QWORD PTR [rip+0x5e5e7]        # 0x140064038
   140005a51:	mov    rcx,QWORD PTR [rsp+0x58]
   140005a56:	call   QWORD PTR [rip+0x5e60c]        # 0x140064068
   140005a5c:	mov    eax,0x1
   140005a61:	mov    rbx,QWORD PTR [rsp+0x60]
   140005a66:	add    rsp,0x40
   140005a6a:	pop    rdi
   140005a6b:	ret    
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	rex push rbp
   140005a72:	sub    rsp,0x20
   140005a76:	mov    rbp,rdx
   140005a79:	lea    rcx,[rbp+0x50]
   140005a7d:	call   0x140001090
   140005a82:	add    rsp,0x20
   140005a86:	pop    rbp
   140005a87:	ret    
   140005a88:	int3   
   140005a89:	int3   
   140005a8a:	int3   
   140005a8b:	int3   
   140005a8c:	int3   
   140005a8d:	int3   
   140005a8e:	int3   
   140005a8f:	int3   
   140005a90:	mov    rax,rsp
   140005a93:	mov    QWORD PTR [rax+0x18],r8
   140005a97:	mov    QWORD PTR [rax+0x10],rdx
   140005a9b:	push   rsi
   140005a9c:	push   rdi
   140005a9d:	push   r12
   140005a9f:	push   r13
   140005aa1:	push   r14
   140005aa3:	sub    rsp,0x100
   140005aaa:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   140005ab6:	mov    QWORD PTR [rax+0x8],rbx
   140005aba:	mov    QWORD PTR [rax+0x20],rbp
   140005abe:	mov    rbp,r9
   140005ac1:	mov    r13,r8
   140005ac4:	mov    r12,rdx
   140005ac7:	call   0x14002b874
   140005acc:	mov    r11,rax
   140005acf:	xor    r14d,r14d
   140005ad2:	mov    ecx,r14d
   140005ad5:	test   rax,rax
   140005ad8:	setne  cl
   140005adb:	test   ecx,ecx
   140005add:	jne    0x140005aea
   140005adf:	mov    ecx,0x80004005
   140005ae4:	call   0x140001430
   140005ae9:	int3   
   140005aea:	mov    rax,QWORD PTR [rax]
   140005aed:	mov    rcx,r11
   140005af0:	call   QWORD PTR [rax+0x18]
   140005af3:	add    rax,0x18
   140005af7:	mov    QWORD PTR [rsp+0x50],rax
   140005afc:	call   0x14002b874
   140005b01:	mov    r11,rax
   140005b04:	mov    ecx,r14d
   140005b07:	test   rax,rax
   140005b0a:	setne  cl
   140005b0d:	test   ecx,ecx
   140005b0f:	jne    0x140005b1c
   140005b11:	mov    ecx,0x80004005
   140005b16:	call   0x140001430
   140005b1b:	int3   
   140005b1c:	mov    rax,QWORD PTR [rax]
   140005b1f:	mov    rcx,r11
   140005b22:	call   QWORD PTR [rax+0x18]
   140005b25:	add    rax,0x18
   140005b29:	mov    QWORD PTR [rsp+0x70],rax
   140005b2e:	mov    r8,QWORD PTR [r12]
   140005b32:	lea    rdx,[rip+0x5ff4f]        # 0x140065a88
   140005b39:	lea    rcx,[rsp+0x50]
   140005b3e:	call   0x140004180
   140005b43:	mov    r8,r13
   140005b46:	lea    rdx,[rsp+0x50]
   140005b4b:	lea    rcx,[rsp+0x78]
   140005b50:	call   0x140003e20
   140005b55:	nop
   140005b56:	mov    rdx,QWORD PTR [rax]
   140005b59:	lea    rcx,[rdx-0x18]
   140005b5d:	mov    rdi,QWORD PTR [rsp+0x50]
   140005b62:	add    rdi,0xffffffffffffffe8
   140005b66:	or     ebx,0xffffffff
   140005b69:	cmp    rcx,rdi
   140005b6c:	je     0x140005bb8
   140005b6e:	cmp    DWORD PTR [rdi+0x10],0x0
   140005b72:	jl     0x140005ba9
   140005b74:	mov    rax,QWORD PTR [rdi]
   140005b77:	cmp    QWORD PTR [rcx],rax
   140005b7a:	jne    0x140005ba9
   140005b7c:	call   0x140002da0
   140005b81:	mov    rsi,rax
   140005b84:	mov    ecx,ebx
   140005b86:	lock xadd DWORD PTR [rdi+0x10],ecx
   140005b8b:	add    ecx,ebx
   140005b8d:	test   ecx,ecx
   140005b8f:	jg     0x140005b9e
   140005b91:	mov    rcx,QWORD PTR [rdi]
   140005b94:	mov    r8,QWORD PTR [rcx]
   140005b97:	mov    rdx,rdi
   140005b9a:	call   QWORD PTR [r8+0x8]
   140005b9e:	lea    rax,[rsi+0x18]
   140005ba2:	mov    QWORD PTR [rsp+0x50],rax
   140005ba7:	jmp    0x140005bb8
   140005ba9:	mov    r8d,DWORD PTR [rdx-0x10]
   140005bad:	lea    rcx,[rsp+0x50]
   140005bb2:	call   0x1400037d0
   140005bb7:	nop
   140005bb8:	mov    rdx,QWORD PTR [rsp+0x78]
   140005bbd:	add    rdx,0xffffffffffffffe8
   140005bc1:	mov    eax,ebx
   140005bc3:	lock xadd DWORD PTR [rdx+0x10],eax
   140005bc8:	add    eax,0xffffffff
   140005bcb:	test   eax,eax
   140005bcd:	jg     0x140005bd8
   140005bcf:	mov    rcx,QWORD PTR [rdx]
   140005bd2:	mov    rax,QWORD PTR [rcx]
   140005bd5:	call   QWORD PTR [rax+0x8]
   140005bd8:	xor    edx,edx
   140005bda:	lea    r8d,[rdx+0x68]
   140005bde:	lea    rcx,[rsp+0x90]
   140005be6:	call   0x140047720
   140005beb:	mov    DWORD PTR [rsp+0x90],0x68
   140005bf6:	mov    edi,0x1
   140005bfb:	cmp    DWORD PTR [rsp+0x158],0x0
   140005c03:	je     0x140005c16
   140005c05:	mov    DWORD PTR [rsp+0xcc],edi
   140005c0c:	mov    WORD PTR [rsp+0xd0],0x0
   140005c16:	xor    eax,eax
   140005c18:	mov    QWORD PTR [rsp+0x58],rax
   140005c1d:	mov    QWORD PTR [rsp+0x60],rax
   140005c22:	mov    QWORD PTR [rsp+0x68],rax
   140005c27:	lea    rax,[rsp+0x58]
   140005c2c:	mov    QWORD PTR [rsp+0x48],rax
   140005c31:	lea    rax,[rsp+0x90]
   140005c39:	mov    QWORD PTR [rsp+0x40],rax
   140005c3e:	mov    QWORD PTR [rsp+0x38],r14
   140005c43:	mov    QWORD PTR [rsp+0x30],r14
   140005c48:	mov    DWORD PTR [rsp+0x28],r14d
   140005c4d:	mov    DWORD PTR [rsp+0x20],r14d
   140005c52:	xor    r9d,r9d
   140005c55:	xor    r8d,r8d
   140005c58:	mov    rdx,QWORD PTR [rsp+0x50]
   140005c5d:	xor    ecx,ecx
   140005c5f:	call   QWORD PTR [rip+0x5e8fb]        # 0x140064560
   140005c65:	test   eax,eax
   140005c67:	je     0x140005ca7
   140005c69:	cmp    DWORD PTR [rsp+0x150],0x0
   140005c71:	je     0x140005c8f
   140005c73:	or     edx,0xffffffff
   140005c76:	mov    rcx,QWORD PTR [rsp+0x58]
   140005c7b:	call   QWORD PTR [rip+0x5e8e7]        # 0x140064568
   140005c81:	mov    rdx,rbp
   140005c84:	mov    rcx,QWORD PTR [rsp+0x58]
   140005c89:	call   QWORD PTR [rip+0x5e8e1]        # 0x140064570
   140005c8f:	mov    rcx,QWORD PTR [rsp+0x58]
   140005c94:	call   QWORD PTR [rip+0x5e92e]        # 0x1400645c8
   140005c9a:	mov    rcx,QWORD PTR [rsp+0x60]
   140005c9f:	call   QWORD PTR [rip+0x5e923]        # 0x1400645c8
   140005ca5:	jmp    0x140005cb3
   140005ca7:	call   QWORD PTR [rip+0x5e953]        # 0x140064600
   140005cad:	mov    DWORD PTR [rbp+0x0],eax
   140005cb0:	mov    edi,r14d
   140005cb3:	mov    rdx,QWORD PTR [rsp+0x70]
   140005cb8:	add    rdx,0xffffffffffffffe8
   140005cbc:	mov    eax,ebx
   140005cbe:	lock xadd DWORD PTR [rdx+0x10],eax
   140005cc3:	add    eax,0xffffffff
   140005cc6:	test   eax,eax
   140005cc8:	jg     0x140005cd4
   140005cca:	mov    rcx,QWORD PTR [rdx]
   140005ccd:	mov    rax,QWORD PTR [rcx]
   140005cd0:	call   QWORD PTR [rax+0x8]
   140005cd3:	nop
   140005cd4:	mov    rdx,QWORD PTR [rsp+0x50]
   140005cd9:	add    rdx,0xffffffffffffffe8
   140005cdd:	mov    eax,ebx
   140005cdf:	lock xadd DWORD PTR [rdx+0x10],eax
   140005ce4:	add    eax,0xffffffff
   140005ce7:	test   eax,eax
   140005ce9:	jg     0x140005cf5
   140005ceb:	mov    rcx,QWORD PTR [rdx]
   140005cee:	mov    rax,QWORD PTR [rcx]
   140005cf1:	call   QWORD PTR [rax+0x8]
   140005cf4:	nop
   140005cf5:	mov    rdx,QWORD PTR [r12]
   140005cf9:	sub    rdx,0x18
   140005cfd:	mov    eax,ebx
   140005cff:	lock xadd DWORD PTR [rdx+0x10],eax
   140005d04:	add    eax,0xffffffff
   140005d07:	test   eax,eax
   140005d09:	jg     0x140005d15
   140005d0b:	mov    rcx,QWORD PTR [rdx]
   140005d0e:	mov    rax,QWORD PTR [rcx]
   140005d11:	call   QWORD PTR [rax+0x8]
   140005d14:	nop
   140005d15:	mov    rdx,QWORD PTR [r13+0x0]
   140005d19:	sub    rdx,0x18
   140005d1d:	lock xadd DWORD PTR [rdx+0x10],ebx
   140005d22:	add    ebx,0xffffffff
   140005d25:	test   ebx,ebx
   140005d27:	jg     0x140005d33
   140005d29:	mov    rcx,QWORD PTR [rdx]
   140005d2c:	mov    r8,QWORD PTR [rcx]
   140005d2f:	call   QWORD PTR [r8+0x8]
   140005d33:	mov    eax,edi
   140005d35:	lea    r11,[rsp+0x100]
   140005d3d:	mov    rbx,QWORD PTR [r11+0x30]
   140005d41:	mov    rbp,QWORD PTR [r11+0x48]
   140005d45:	mov    rsp,r11
   140005d48:	pop    r14
   140005d4a:	pop    r13
   140005d4c:	pop    r12
   140005d4e:	pop    rdi
   140005d4f:	pop    rsi
   140005d50:	ret    
   140005d51:	int3   
   140005d52:	int3   
   140005d53:	int3   
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	int3   
   140005d59:	int3   
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	rex push rbp
   140005d62:	sub    rsp,0x20
   140005d66:	mov    rbp,rdx
   140005d69:	mov    rcx,QWORD PTR [rbp+0x140]
   140005d70:	call   0x1400010c0
   140005d75:	add    rsp,0x20
   140005d79:	pop    rbp
   140005d7a:	ret    
   140005d7b:	int3   
   140005d7c:	int3   
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	rex push rbp
   140005d82:	sub    rsp,0x20
   140005d86:	mov    rbp,rdx
   140005d89:	mov    rcx,QWORD PTR [rbp+0x138]
   140005d90:	call   0x1400010c0
   140005d95:	add    rsp,0x20
   140005d99:	pop    rbp
   140005d9a:	ret    
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	rex push rbp
   140005da2:	sub    rsp,0x20
   140005da6:	mov    rbp,rdx
   140005da9:	lea    rcx,[rbp+0x50]
   140005dad:	call   0x1400010c0
   140005db2:	add    rsp,0x20
   140005db6:	pop    rbp
   140005db7:	ret    
   140005db8:	int3   
   140005db9:	int3   
   140005dba:	int3   
   140005dbb:	int3   
   140005dbc:	int3   
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	rex push rbp
   140005dc2:	sub    rsp,0x20
   140005dc6:	mov    rbp,rdx
   140005dc9:	lea    rcx,[rbp+0x70]
   140005dcd:	call   0x1400010c0
   140005dd2:	add    rsp,0x20
   140005dd6:	pop    rbp
   140005dd7:	ret    
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	rex push rbp
   140005de2:	sub    rsp,0x20
   140005de6:	mov    rbp,rdx
   140005de9:	lea    rcx,[rbp+0x78]
   140005ded:	call   0x1400010c0
   140005df2:	add    rsp,0x20
   140005df6:	pop    rbp
   140005df7:	ret    
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	rex push rbp
   140005e02:	push   rsi
   140005e03:	push   rdi
   140005e04:	sub    rsp,0x50
   140005e08:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140005e11:	mov    QWORD PTR [rsp+0x70],rbx
   140005e16:	mov    rsi,rcx
   140005e19:	call   0x14002b874
   140005e1e:	mov    rcx,rax
   140005e21:	xor    edx,edx
   140005e23:	test   rax,rax
   140005e26:	setne  dl
   140005e29:	test   edx,edx
   140005e2b:	jne    0x140005e38
   140005e2d:	mov    ecx,0x80004005
   140005e32:	call   0x140001430
   140005e37:	int3   
   140005e38:	mov    rax,QWORD PTR [rax]
   140005e3b:	call   QWORD PTR [rax+0x18]
   140005e3e:	add    rax,0x18
   140005e42:	mov    QWORD PTR [rsp+0x80],rax
   140005e4a:	lea    rbp,[rip+0x5f67f]        # 0x1400654d0
   140005e51:	mov    rdi,rbp
   140005e54:	shr    rdi,0x10
   140005e58:	jne    0x140005e7e
   140005e5a:	movzx  ebx,bp
   140005e5d:	mov    ecx,ebx
   140005e5f:	call   0x14002b860
   140005e64:	test   rax,rax
   140005e67:	je     0x140005e8f
   140005e69:	mov    r8d,ebx
   140005e6c:	mov    rdx,rax
   140005e6f:	lea    rcx,[rsp+0x80]
   140005e77:	call   0x140003650
   140005e7c:	jmp    0x140005e8f
   140005e7e:	mov    rdx,rbp
   140005e81:	lea    rcx,[rsp+0x80]
   140005e89:	call   0x140003930
   140005e8e:	nop
   140005e8f:	call   0x14002b874
   140005e94:	mov    r11,rax
   140005e97:	xor    ecx,ecx
   140005e99:	test   rax,rax
   140005e9c:	setne  cl
   140005e9f:	test   ecx,ecx
   140005ea1:	jne    0x140005eae
   140005ea3:	mov    ecx,0x80004005
   140005ea8:	call   0x140001430
   140005ead:	int3   
   140005eae:	mov    rax,QWORD PTR [rax]
   140005eb1:	mov    rcx,r11
   140005eb4:	call   QWORD PTR [rax+0x18]
   140005eb7:	add    rax,0x18
   140005ebb:	mov    QWORD PTR [rsp+0x78],rax
   140005ec0:	test   rdi,rdi
   140005ec3:	jne    0x140005ee6
   140005ec5:	movzx  ebx,bp
   140005ec8:	mov    ecx,ebx
   140005eca:	call   0x14002b860
   140005ecf:	test   rax,rax
   140005ed2:	je     0x140005ef4
   140005ed4:	mov    r8d,ebx
   140005ed7:	mov    rdx,rax
   140005eda:	lea    rcx,[rsp+0x78]
   140005edf:	call   0x140003650
   140005ee4:	jmp    0x140005ef4
   140005ee6:	mov    rdx,rbp
   140005ee9:	lea    rcx,[rsp+0x78]
   140005eee:	call   0x140003930
   140005ef3:	nop
   140005ef4:	call   0x14002b874
   140005ef9:	mov    r11,rax
   140005efc:	xor    ecx,ecx
   140005efe:	test   rax,rax
   140005f01:	setne  cl
   140005f04:	test   ecx,ecx
   140005f06:	jne    0x140005f13
   140005f08:	mov    ecx,0x80004005
   140005f0d:	call   0x140001430
   140005f12:	int3   
   140005f13:	mov    rax,QWORD PTR [rax]
   140005f16:	mov    rcx,r11
   140005f19:	call   QWORD PTR [rax+0x18]
   140005f1c:	lea    rbx,[rax+0x18]
   140005f20:	mov    QWORD PTR [rsp+0x88],rbx
   140005f28:	test   rdi,rdi
   140005f2b:	jne    0x140005f59
   140005f2d:	movzx  edi,bp
   140005f30:	mov    ecx,edi
   140005f32:	call   0x14002b860
   140005f37:	test   rax,rax
   140005f3a:	je     0x140005f71
   140005f3c:	mov    r8d,edi
   140005f3f:	mov    rdx,rax
   140005f42:	lea    rcx,[rsp+0x88]
   140005f4a:	call   0x140003650
   140005f4f:	mov    rbx,QWORD PTR [rsp+0x88]
   140005f57:	jmp    0x140005f71
   140005f59:	mov    rdx,rbp
   140005f5c:	lea    rcx,[rsp+0x88]
   140005f64:	call   0x140003930
   140005f69:	mov    rbx,QWORD PTR [rsp+0x88]
   140005f71:	cmp    DWORD PTR [rsi+0xeb114],0x0
   140005f78:	jne    0x1400061f9
   140005f7e:	mov    rcx,QWORD PTR [rsi+0x40]
   140005f82:	call   QWORD PTR [rip+0x5ebd0]        # 0x140064b58
   140005f88:	mov    ecx,0x87
   140005f8d:	call   0x14002b860
   140005f92:	test   rax,rax
   140005f95:	je     0x140005fae
   140005f97:	mov    r8d,0x87
   140005f9d:	mov    rdx,rax
   140005fa0:	lea    rcx,[rsp+0x78]
   140005fa5:	call   0x140003650
   140005faa:	test   eax,eax
   140005fac:	jne    0x140005fbf
   140005fae:	lea    rdx,[rip+0x5fbbb]        # 0x140065b70
   140005fb5:	lea    rcx,[rsp+0x78]
   140005fba:	call   0x140003930
   140005fbf:	mov    ecx,0x88
   140005fc4:	call   0x14002b860
   140005fc9:	test   rax,rax
   140005fcc:	je     0x140005fe8
   140005fce:	mov    r8d,0x88
   140005fd4:	mov    rdx,rax
   140005fd7:	lea    rcx,[rsp+0x88]
   140005fdf:	call   0x140003650
   140005fe4:	test   eax,eax
   140005fe6:	jne    0x140005ffc
   140005fe8:	lea    rdx,[rip+0x5fb49]        # 0x140065b38
   140005fef:	lea    rcx,[rsp+0x88]
   140005ff7:	call   0x140003930
   140005ffc:	mov    rbx,QWORD PTR [rsp+0x88]
   140006004:	mov    r9,rbx
   140006007:	mov    r8,QWORD PTR [rsp+0x78]
   14000600c:	lea    rdx,[rip+0x5fb15]        # 0x140065b28
   140006013:	lea    rcx,[rsp+0x80]
   14000601b:	call   0x140004180
   140006020:	mov    r9d,0x34
   140006026:	lea    r8,[rip+0x5fabb]        # 0x140065ae8
   14000602d:	mov    rdx,QWORD PTR [rsp+0x80]
   140006035:	mov    rcx,rsi
   140006038:	call   0x140001690
   14000603d:	cmp    eax,0x6
   140006040:	jne    0x1400061f9
   140006046:	call   QWORD PTR [rip+0x5e54c]        # 0x140064598
   14000604c:	mov    rcx,rax
   14000604f:	lea    r8,[rsp+0x30]
   140006054:	mov    edx,0x28
   140006059:	call   QWORD PTR [rip+0x5dfc1]        # 0x140064020
   14000605f:	test   eax,eax
   140006061:	jne    0x1400060ca
   140006063:	lea    rdx,[rbx-0x18]
   140006067:	or     ebx,0xffffffff
   14000606a:	mov    eax,ebx
   14000606c:	lock xadd DWORD PTR [rdx+0x10],eax
   140006071:	add    eax,ebx
   140006073:	test   eax,eax
   140006075:	jg     0x140006081
   140006077:	mov    rcx,QWORD PTR [rdx]
   14000607a:	mov    rax,QWORD PTR [rcx]
   14000607d:	call   QWORD PTR [rax+0x8]
   140006080:	nop
   140006081:	mov    rdx,QWORD PTR [rsp+0x78]
   140006086:	add    rdx,0xffffffffffffffe8
   14000608a:	mov    eax,ebx
   14000608c:	lock xadd DWORD PTR [rdx+0x10],eax
   140006091:	add    eax,0xffffffff
   140006094:	test   eax,eax
   140006096:	jg     0x1400060a2
   140006098:	mov    rcx,QWORD PTR [rdx]
   14000609b:	mov    rax,QWORD PTR [rcx]
   14000609e:	call   QWORD PTR [rax+0x8]
   1400060a1:	nop
   1400060a2:	mov    rdx,QWORD PTR [rsp+0x80]
   1400060aa:	add    rdx,0xffffffffffffffe8
   1400060ae:	lock xadd DWORD PTR [rdx+0x10],ebx
   1400060b3:	add    ebx,0xffffffff
   1400060b6:	test   ebx,ebx
   1400060b8:	jg     0x1400060c3
   1400060ba:	mov    rcx,QWORD PTR [rdx]
   1400060bd:	mov    rax,QWORD PTR [rcx]
   1400060c0:	call   QWORD PTR [rax+0x8]
   1400060c3:	xor    eax,eax
   1400060c5:	jmp    0x14000625f
   1400060ca:	lea    r8,[rsp+0x44]
   1400060cf:	lea    rdx,[rip+0x5f9ea]        # 0x140065ac0
   1400060d6:	xor    ecx,ecx
   1400060d8:	call   QWORD PTR [rip+0x5df4a]        # 0x140064028
   1400060de:	mov    DWORD PTR [rsp+0x40],0x1
   1400060e6:	mov    DWORD PTR [rsp+0x4c],0x2
   1400060ee:	mov    QWORD PTR [rsp+0x28],0x0
   1400060f7:	mov    QWORD PTR [rsp+0x20],0x0
   140006100:	xor    r9d,r9d
   140006103:	lea    r8,[rsp+0x40]
   140006108:	xor    edx,edx
   14000610a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000610f:	call   QWORD PTR [rip+0x5df1b]        # 0x140064030
   140006115:	call   QWORD PTR [rip+0x5e4e5]        # 0x140064600
   14000611b:	test   eax,eax
   14000611d:	je     0x140006186
   14000611f:	lea    rdx,[rbx-0x18]
   140006123:	or     ebx,0xffffffff
   140006126:	mov    eax,ebx
   140006128:	lock xadd DWORD PTR [rdx+0x10],eax
   14000612d:	add    eax,ebx
   14000612f:	test   eax,eax
   140006131:	jg     0x14000613d
   140006133:	mov    rcx,QWORD PTR [rdx]
   140006136:	mov    rax,QWORD PTR [rcx]
   140006139:	call   QWORD PTR [rax+0x8]
   14000613c:	nop
   14000613d:	mov    rdx,QWORD PTR [rsp+0x78]
   140006142:	add    rdx,0xffffffffffffffe8
   140006146:	mov    eax,ebx
   140006148:	lock xadd DWORD PTR [rdx+0x10],eax
   14000614d:	add    eax,0xffffffff
   140006150:	test   eax,eax
   140006152:	jg     0x14000615e
   140006154:	mov    rcx,QWORD PTR [rdx]
   140006157:	mov    rax,QWORD PTR [rcx]
   14000615a:	call   QWORD PTR [rax+0x8]
   14000615d:	nop
   14000615e:	mov    rdx,QWORD PTR [rsp+0x80]
   140006166:	add    rdx,0xffffffffffffffe8
   14000616a:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000616f:	add    ebx,0xffffffff
   140006172:	test   ebx,ebx
   140006174:	jg     0x14000617f
   140006176:	mov    rcx,QWORD PTR [rdx]
   140006179:	mov    rax,QWORD PTR [rcx]
   14000617c:	call   QWORD PTR [rax+0x8]
   14000617f:	xor    eax,eax
   140006181:	jmp    0x14000625f
   140006186:	xor    edx,edx
   140006188:	lea    ecx,[rdx+0x6]
   14000618b:	call   QWORD PTR [rip+0x5e987]        # 0x140064b18
   140006191:	test   eax,eax
   140006193:	jne    0x1400061f9
   140006195:	lea    rdx,[rbx-0x18]
   140006199:	or     ebx,0xffffffff
   14000619c:	mov    eax,ebx
   14000619e:	lock xadd DWORD PTR [rdx+0x10],eax
   1400061a3:	add    eax,ebx
   1400061a5:	test   eax,eax
   1400061a7:	jg     0x1400061b3
   1400061a9:	mov    rcx,QWORD PTR [rdx]
   1400061ac:	mov    rax,QWORD PTR [rcx]
   1400061af:	call   QWORD PTR [rax+0x8]
   1400061b2:	nop
   1400061b3:	mov    rdx,QWORD PTR [rsp+0x78]
   1400061b8:	add    rdx,0xffffffffffffffe8
   1400061bc:	mov    eax,ebx
   1400061be:	lock xadd DWORD PTR [rdx+0x10],eax
   1400061c3:	add    eax,0xffffffff
   1400061c6:	test   eax,eax
   1400061c8:	jg     0x1400061d4
   1400061ca:	mov    rcx,QWORD PTR [rdx]
   1400061cd:	mov    rax,QWORD PTR [rcx]
   1400061d0:	call   QWORD PTR [rax+0x8]
   1400061d3:	nop
   1400061d4:	mov    rdx,QWORD PTR [rsp+0x80]
   1400061dc:	add    rdx,0xffffffffffffffe8
   1400061e0:	lock xadd DWORD PTR [rdx+0x10],ebx
   1400061e5:	add    ebx,0xffffffff
   1400061e8:	test   ebx,ebx
   1400061ea:	jg     0x1400061f5
   1400061ec:	mov    rcx,QWORD PTR [rdx]
   1400061ef:	mov    rax,QWORD PTR [rcx]
   1400061f2:	call   QWORD PTR [rax+0x8]
   1400061f5:	xor    eax,eax
   1400061f7:	jmp    0x14000625f
   1400061f9:	lea    rdx,[rbx-0x18]
   1400061fd:	or     ebx,0xffffffff
   140006200:	mov    eax,ebx
   140006202:	lock xadd DWORD PTR [rdx+0x10],eax
   140006207:	add    eax,ebx
   140006209:	test   eax,eax
   14000620b:	jg     0x140006217
   14000620d:	mov    rcx,QWORD PTR [rdx]
   140006210:	mov    rax,QWORD PTR [rcx]
   140006213:	call   QWORD PTR [rax+0x8]
   140006216:	nop
   140006217:	mov    rdx,QWORD PTR [rsp+0x78]
   14000621c:	add    rdx,0xffffffffffffffe8
   140006220:	mov    eax,ebx
   140006222:	lock xadd DWORD PTR [rdx+0x10],eax
   140006227:	add    eax,0xffffffff
   14000622a:	test   eax,eax
   14000622c:	jg     0x140006238
   14000622e:	mov    rcx,QWORD PTR [rdx]
   140006231:	mov    rax,QWORD PTR [rcx]
   140006234:	call   QWORD PTR [rax+0x8]
   140006237:	nop
   140006238:	mov    rdx,QWORD PTR [rsp+0x80]
   140006240:	add    rdx,0xffffffffffffffe8
   140006244:	lock xadd DWORD PTR [rdx+0x10],ebx
   140006249:	add    ebx,0xffffffff
   14000624c:	test   ebx,ebx
   14000624e:	jg     0x14000625a
   140006250:	mov    rcx,QWORD PTR [rdx]
   140006253:	mov    r8,QWORD PTR [rcx]
   140006256:	call   QWORD PTR [r8+0x8]
   14000625a:	mov    eax,0x1
   14000625f:	mov    rbx,QWORD PTR [rsp+0x70]
   140006264:	add    rsp,0x50
   140006268:	pop    rdi
   140006269:	pop    rsi
   14000626a:	pop    rbp
   14000626b:	ret    
   14000626c:	int3   
   14000626d:	int3   
   14000626e:	int3   
   14000626f:	int3   
   140006270:	rex push rbp
   140006272:	sub    rsp,0x20
   140006276:	mov    rbp,rdx
   140006279:	lea    rcx,[rbp+0x80]
   140006280:	call   0x140001090
   140006285:	add    rsp,0x20
   140006289:	pop    rbp
   14000628a:	ret    
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	rex push rbp
   140006292:	sub    rsp,0x20
   140006296:	mov    rbp,rdx
   140006299:	lea    rcx,[rbp+0x80]
   1400062a0:	call   0x1400010c0
   1400062a5:	add    rsp,0x20
   1400062a9:	pop    rbp
   1400062aa:	ret    
   1400062ab:	int3   
   1400062ac:	int3   
   1400062ad:	int3   
   1400062ae:	int3   
   1400062af:	int3   
   1400062b0:	rex push rbp
   1400062b2:	sub    rsp,0x20
   1400062b6:	mov    rbp,rdx
   1400062b9:	lea    rcx,[rbp+0x78]
   1400062bd:	call   0x140001090
   1400062c2:	add    rsp,0x20
   1400062c6:	pop    rbp
   1400062c7:	ret    
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	int3   
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	rex push rbp
   1400062d2:	sub    rsp,0x20
   1400062d6:	mov    rbp,rdx
   1400062d9:	lea    rcx,[rbp+0x78]
   1400062dd:	call   0x1400010c0
   1400062e2:	add    rsp,0x20
   1400062e6:	pop    rbp
   1400062e7:	ret    
   1400062e8:	int3   
   1400062e9:	int3   
   1400062ea:	int3   
   1400062eb:	int3   
   1400062ec:	int3   
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	rex push rbp
   1400062f2:	sub    rsp,0x20
   1400062f6:	mov    rbp,rdx
   1400062f9:	lea    rcx,[rbp+0x88]
   140006300:	call   0x140001090
   140006305:	add    rsp,0x20
   140006309:	pop    rbp
   14000630a:	ret    
   14000630b:	int3   
   14000630c:	int3   
   14000630d:	int3   
   14000630e:	int3   
   14000630f:	int3   
   140006310:	rex push rbp
   140006312:	sub    rsp,0x20
   140006316:	mov    rbp,rdx
   140006319:	lea    rcx,[rbp+0x88]
   140006320:	call   0x1400010c0
   140006325:	add    rsp,0x20
   140006329:	pop    rbp
   14000632a:	ret    
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	rex push rbx
   140006332:	push   rbp
   140006333:	push   rsi
   140006334:	push   rdi
   140006335:	push   r12
   140006337:	sub    rsp,0x70
   14000633b:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140006344:	mov    rsi,rcx
   140006347:	call   0x140025870
   14000634c:	call   0x14002b874
   140006351:	mov    rcx,rax
   140006354:	xor    r12d,r12d
   140006357:	mov    edx,r12d
   14000635a:	test   rax,rax
   14000635d:	setne  dl
   140006360:	test   edx,edx
   140006362:	jne    0x14000636f
   140006364:	mov    ecx,0x80004005
   140006369:	call   0x140001430
   14000636e:	int3   
   14000636f:	mov    rax,QWORD PTR [rax]
   140006372:	call   QWORD PTR [rax+0x18]
   140006375:	add    rax,0x18
   140006379:	mov    QWORD PTR [rsp+0xb8],rax
   140006381:	lea    rbp,[rip+0x5f148]        # 0x1400654d0
   140006388:	mov    rdi,rbp
   14000638b:	shr    rdi,0x10
   14000638f:	jne    0x1400063b5
   140006391:	movzx  ebx,bp
   140006394:	mov    ecx,ebx
   140006396:	call   0x14002b860
   14000639b:	test   rax,rax
   14000639e:	je     0x1400063c6
   1400063a0:	mov    r8d,ebx
   1400063a3:	mov    rdx,rax
   1400063a6:	lea    rcx,[rsp+0xb8]
   1400063ae:	call   0x140003650
   1400063b3:	jmp    0x1400063c6
   1400063b5:	mov    rdx,rbp
   1400063b8:	lea    rcx,[rsp+0xb8]
   1400063c0:	call   0x140003930
   1400063c5:	nop
   1400063c6:	call   0x14002b874
   1400063cb:	mov    r11,rax
   1400063ce:	mov    ecx,r12d
   1400063d1:	test   rax,rax
   1400063d4:	setne  cl
   1400063d7:	test   ecx,ecx
   1400063d9:	jne    0x1400063e6
   1400063db:	mov    ecx,0x80004005
   1400063e0:	call   0x140001430
   1400063e5:	int3   
   1400063e6:	mov    rax,QWORD PTR [rax]
   1400063e9:	mov    rcx,r11
   1400063ec:	call   QWORD PTR [rax+0x18]
   1400063ef:	add    rax,0x18
   1400063f3:	mov    QWORD PTR [rsp+0xb0],rax
   1400063fb:	test   rdi,rdi
   1400063fe:	jne    0x140006424
   140006400:	movzx  ebx,bp
   140006403:	mov    ecx,ebx
   140006405:	call   0x14002b860
   14000640a:	test   rax,rax
   14000640d:	je     0x140006435
   14000640f:	mov    r8d,ebx
   140006412:	mov    rdx,rax
   140006415:	lea    rcx,[rsp+0xb0]
   14000641d:	call   0x140003650
   140006422:	jmp    0x140006435
   140006424:	mov    rdx,rbp
   140006427:	lea    rcx,[rsp+0xb0]
   14000642f:	call   0x140003930
   140006434:	nop
   140006435:	call   0x14002b874
   14000643a:	mov    r11,rax
   14000643d:	mov    ecx,r12d
   140006440:	test   rax,rax
   140006443:	setne  cl
   140006446:	test   ecx,ecx
   140006448:	jne    0x140006455
   14000644a:	mov    ecx,0x80004005
   14000644f:	call   0x140001430
   140006454:	int3   
   140006455:	mov    rax,QWORD PTR [rax]
   140006458:	mov    rcx,r11
   14000645b:	call   QWORD PTR [rax+0x18]
   14000645e:	lea    rbx,[rax+0x18]
   140006462:	mov    QWORD PTR [rsp+0xa8],rbx
   14000646a:	test   rdi,rdi
   14000646d:	jne    0x14000649b
   14000646f:	movzx  edi,bp
   140006472:	mov    ecx,edi
   140006474:	call   0x14002b860
   140006479:	test   rax,rax
   14000647c:	je     0x1400064b3
   14000647e:	mov    r8d,edi
   140006481:	mov    rdx,rax
   140006484:	lea    rcx,[rsp+0xa8]
   14000648c:	call   0x140003650
   140006491:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006499:	jmp    0x1400064b3
   14000649b:	mov    rdx,rbp
   14000649e:	lea    rcx,[rsp+0xa8]
   1400064a6:	call   0x140003930
   1400064ab:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400064b3:	or     edi,0xffffffff
   1400064b6:	cmp    DWORD PTR [rsi+0xeb108],0x0
   1400064bd:	jne    0x1400064c8
   1400064bf:	cmp    DWORD PTR [rsi+0xeb110],0x0
   1400064c6:	je     0x1400064e7
   1400064c8:	cmp    DWORD PTR [rsi+0xeb11c],0x0
   1400064cf:	je     0x1400064e7
   1400064d1:	cmp    DWORD PTR [rsi+0x2b0],0x0
   1400064d8:	je     0x1400064e7
   1400064da:	mov    rcx,rsi
   1400064dd:	call   0x140005e00
   1400064e2:	jmp    0x140006ae3
   1400064e7:	call   0x14002b874
   1400064ec:	mov    r11,rax
   1400064ef:	mov    ecx,r12d
   1400064f2:	test   rax,rax
   1400064f5:	setne  cl
   1400064f8:	test   ecx,ecx
   1400064fa:	jne    0x140006507
   1400064fc:	mov    ecx,0x80004005
   140006501:	call   0x140001430
   140006506:	int3   
   140006507:	mov    rax,QWORD PTR [rax]
   14000650a:	mov    rcx,r11
   14000650d:	call   QWORD PTR [rax+0x18]
   140006510:	add    rax,0x18
   140006514:	mov    QWORD PTR [rsp+0x38],rax
   140006519:	lea    rdx,[rip+0x5f740]        # 0x140065c60
   140006520:	test   rdx,0xffffffffffff0000
   140006527:	jne    0x14000654a
   140006529:	movzx  ebx,dx
   14000652c:	mov    ecx,ebx
   14000652e:	call   0x14002b860
   140006533:	test   rax,rax
   140006536:	je     0x140006555
   140006538:	mov    r8d,ebx
   14000653b:	mov    rdx,rax
   14000653e:	lea    rcx,[rsp+0x38]
   140006543:	call   0x140003650
   140006548:	jmp    0x140006555
   14000654a:	lea    rcx,[rsp+0x38]
   14000654f:	call   0x140003930
   140006554:	nop
   140006555:	lea    rdx,[rsi+0x290]
   14000655c:	lea    r8,[rsp+0x38]
   140006561:	lea    rcx,[rsp+0x48]
   140006566:	call   0x140003e20
   14000656b:	lea    r8,[rsp+0x30]
   140006570:	mov    rdx,QWORD PTR [rax]
   140006573:	mov    ecx,0x80000002
   140006578:	call   QWORD PTR [rip+0x5da92]        # 0x140064010
   14000657e:	test   eax,eax
   140006580:	sete   bl
   140006583:	mov    rdx,QWORD PTR [rsp+0x48]
   140006588:	add    rdx,0xffffffffffffffe8
   14000658c:	mov    eax,edi
   14000658e:	lock xadd DWORD PTR [rdx+0x10],eax
   140006593:	add    eax,0xffffffff
   140006596:	test   eax,eax
   140006598:	jg     0x1400065a4
   14000659a:	mov    rcx,QWORD PTR [rdx]
   14000659d:	mov    rax,QWORD PTR [rcx]
   1400065a0:	call   QWORD PTR [rax+0x8]
   1400065a3:	nop
   1400065a4:	mov    rdx,QWORD PTR [rsp+0x38]
   1400065a9:	add    rdx,0xffffffffffffffe8
   1400065ad:	mov    eax,edi
   1400065af:	lock xadd DWORD PTR [rdx+0x10],eax
   1400065b4:	add    eax,0xffffffff
   1400065b7:	test   eax,eax
   1400065b9:	jg     0x1400065c4
   1400065bb:	mov    rcx,QWORD PTR [rdx]
   1400065be:	mov    rax,QWORD PTR [rcx]
   1400065c1:	call   QWORD PTR [rax+0x8]
   1400065c4:	test   bl,bl
   1400065c6:	je     0x140006adb
   1400065cc:	lea    rdx,[rip+0x5f67d]        # 0x140065c50
   1400065d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400065d8:	call   QWORD PTR [rip+0x5da3a]        # 0x140064018
   1400065de:	test   eax,eax
   1400065e0:	je     0x14000666c
   1400065e6:	lea    rdx,[rip+0x5f64b]        # 0x140065c38
   1400065ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400065f2:	call   QWORD PTR [rip+0x5da20]        # 0x140064018
   1400065f8:	test   eax,eax
   1400065fa:	je     0x14000666c
   1400065fc:	lea    rdx,[rip+0x5f625]        # 0x140065c28
   140006603:	mov    rcx,QWORD PTR [rsp+0x30]
   140006608:	call   QWORD PTR [rip+0x5da0a]        # 0x140064018
   14000660e:	test   eax,eax
   140006610:	je     0x14000666c
   140006612:	lea    rdx,[rip+0x5f5f7]        # 0x140065c10
   140006619:	mov    rcx,QWORD PTR [rsp+0x30]
   14000661e:	call   QWORD PTR [rip+0x5d9f4]        # 0x140064018
   140006624:	test   eax,eax
   140006626:	je     0x14000666c
   140006628:	lea    rdx,[rip+0x5f5d1]        # 0x140065c00
   14000662f:	mov    rcx,QWORD PTR [rsp+0x30]
   140006634:	call   QWORD PTR [rip+0x5d9de]        # 0x140064018
   14000663a:	test   eax,eax
   14000663c:	je     0x14000666c
   14000663e:	lea    rdx,[rip+0x5f5a3]        # 0x140065be8
   140006645:	mov    rcx,QWORD PTR [rsp+0x30]
   14000664a:	call   QWORD PTR [rip+0x5d9c8]        # 0x140064018
   140006650:	test   eax,eax
   140006652:	je     0x14000666c
   140006654:	mov    rcx,QWORD PTR [rsp+0x30]
   140006659:	call   QWORD PTR [rip+0x5da09]        # 0x140064068
   14000665f:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006667:	jmp    0x140006ae3
   14000666c:	mov    rcx,QWORD PTR [rsp+0x30]
   140006671:	call   QWORD PTR [rip+0x5d9f1]        # 0x140064068
   140006677:	cmp    DWORD PTR [rsi+0xeb114],0x0
   14000667e:	jne    0x140006906
   140006684:	mov    ecx,0x87
   140006689:	call   0x14002b860
   14000668e:	test   rax,rax
   140006691:	je     0x1400066ad
   140006693:	mov    r8d,0x87
   140006699:	mov    rdx,rax
   14000669c:	lea    rcx,[rsp+0xb0]
   1400066a4:	call   0x140003650
   1400066a9:	test   eax,eax
   1400066ab:	jne    0x1400066c1
   1400066ad:	lea    rdx,[rip+0x5f4bc]        # 0x140065b70
   1400066b4:	lea    rcx,[rsp+0xb0]
   1400066bc:	call   0x140003930
   1400066c1:	mov    ecx,0x88
   1400066c6:	call   0x14002b860
   1400066cb:	test   rax,rax
   1400066ce:	je     0x1400066ea
   1400066d0:	mov    r8d,0x88
   1400066d6:	mov    rdx,rax
   1400066d9:	lea    rcx,[rsp+0xa8]
   1400066e1:	call   0x140003650
   1400066e6:	test   eax,eax
   1400066e8:	jne    0x1400066fe
   1400066ea:	lea    rdx,[rip+0x5f447]        # 0x140065b38
   1400066f1:	lea    rcx,[rsp+0xa8]
   1400066f9:	call   0x140003930
   1400066fe:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006706:	mov    r9,rbx
   140006709:	mov    r8,QWORD PTR [rsp+0xb0]
   140006711:	lea    rdx,[rip+0x5f410]        # 0x140065b28
   140006718:	lea    rcx,[rsp+0xb8]
   140006720:	call   0x140004180
   140006725:	mov    r9d,0x34
   14000672b:	lea    r8,[rip+0x5f3b6]        # 0x140065ae8
   140006732:	mov    rdx,QWORD PTR [rsp+0xb8]
   14000673a:	mov    rcx,rsi
   14000673d:	call   0x140001690
   140006742:	cmp    eax,0x6
   140006745:	jne    0x140006ae3
   14000674b:	call   QWORD PTR [rip+0x5de47]        # 0x140064598
   140006751:	mov    rcx,rax
   140006754:	lea    r8,[rsp+0x40]
   140006759:	mov    edx,0x28
   14000675e:	call   QWORD PTR [rip+0x5d8bc]        # 0x140064020
   140006764:	test   eax,eax
   140006766:	jne    0x1400067d2
   140006768:	lea    rdx,[rbx-0x18]
   14000676c:	mov    eax,edi
   14000676e:	lock xadd DWORD PTR [rdx+0x10],eax
   140006773:	add    eax,0xffffffff
   140006776:	test   eax,eax
   140006778:	jg     0x140006784
   14000677a:	mov    rcx,QWORD PTR [rdx]
   14000677d:	mov    rax,QWORD PTR [rcx]
   140006780:	call   QWORD PTR [rax+0x8]
   140006783:	nop
   140006784:	mov    rdx,QWORD PTR [rsp+0xb0]
   14000678c:	add    rdx,0xffffffffffffffe8
   140006790:	mov    eax,edi
   140006792:	lock xadd DWORD PTR [rdx+0x10],eax
   140006797:	add    eax,0xffffffff
   14000679a:	test   eax,eax
   14000679c:	jg     0x1400067a8
   14000679e:	mov    rcx,QWORD PTR [rdx]
   1400067a1:	mov    rax,QWORD PTR [rcx]
   1400067a4:	call   QWORD PTR [rax+0x8]
   1400067a7:	nop
   1400067a8:	mov    rdx,QWORD PTR [rsp+0xb8]
   1400067b0:	add    rdx,0xffffffffffffffe8
   1400067b4:	lock xadd DWORD PTR [rdx+0x10],edi
   1400067b9:	add    edi,0xffffffff
   1400067bc:	test   edi,edi
   1400067be:	jg     0x140006b44
   1400067c4:	mov    rcx,QWORD PTR [rdx]
   1400067c7:	mov    rax,QWORD PTR [rcx]
   1400067ca:	call   QWORD PTR [rax+0x8]
   1400067cd:	jmp    0x140006b44
   1400067d2:	lea    r8,[rsp+0x5c]
   1400067d7:	lea    rdx,[rip+0x5f2e2]        # 0x140065ac0
   1400067de:	xor    ecx,ecx
   1400067e0:	call   QWORD PTR [rip+0x5d842]        # 0x140064028
   1400067e6:	mov    DWORD PTR [rsp+0x58],0x1
   1400067ee:	mov    DWORD PTR [rsp+0x64],0x2
   1400067f6:	mov    QWORD PTR [rsp+0x28],r12
   1400067fb:	mov    QWORD PTR [rsp+0x20],r12
   140006800:	xor    r9d,r9d
   140006803:	lea    r8,[rsp+0x58]
   140006808:	xor    edx,edx
   14000680a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000680f:	call   QWORD PTR [rip+0x5d81b]        # 0x140064030
   140006815:	call   QWORD PTR [rip+0x5dde5]        # 0x140064600
   14000681b:	test   eax,eax
   14000681d:	je     0x140006889
   14000681f:	lea    rdx,[rbx-0x18]
   140006823:	mov    eax,edi
   140006825:	lock xadd DWORD PTR [rdx+0x10],eax
   14000682a:	add    eax,0xffffffff
   14000682d:	test   eax,eax
   14000682f:	jg     0x14000683b
   140006831:	mov    rcx,QWORD PTR [rdx]
   140006834:	mov    rax,QWORD PTR [rcx]
   140006837:	call   QWORD PTR [rax+0x8]
   14000683a:	nop
   14000683b:	mov    rdx,QWORD PTR [rsp+0xb0]
   140006843:	add    rdx,0xffffffffffffffe8
   140006847:	mov    eax,edi
   140006849:	lock xadd DWORD PTR [rdx+0x10],eax
   14000684e:	add    eax,0xffffffff
   140006851:	test   eax,eax
   140006853:	jg     0x14000685f
   140006855:	mov    rcx,QWORD PTR [rdx]
   140006858:	mov    rax,QWORD PTR [rcx]
   14000685b:	call   QWORD PTR [rax+0x8]
   14000685e:	nop
   14000685f:	mov    rdx,QWORD PTR [rsp+0xb8]
   140006867:	add    rdx,0xffffffffffffffe8
   14000686b:	lock xadd DWORD PTR [rdx+0x10],edi
   140006870:	add    edi,0xffffffff
   140006873:	test   edi,edi
   140006875:	jg     0x140006b44
   14000687b:	mov    rcx,QWORD PTR [rdx]
   14000687e:	mov    rax,QWORD PTR [rcx]
   140006881:	call   QWORD PTR [rax+0x8]
   140006884:	jmp    0x140006b44
   140006889:	xor    edx,edx
   14000688b:	lea    ecx,[rdx+0x6]
   14000688e:	call   QWORD PTR [rip+0x5e284]        # 0x140064b18
   140006894:	test   eax,eax
   140006896:	jne    0x140006ae3
   14000689c:	lea    rdx,[rbx-0x18]
   1400068a0:	mov    eax,edi
   1400068a2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400068a7:	add    eax,0xffffffff
   1400068aa:	test   eax,eax
   1400068ac:	jg     0x1400068b8
   1400068ae:	mov    rcx,QWORD PTR [rdx]
   1400068b1:	mov    rax,QWORD PTR [rcx]
   1400068b4:	call   QWORD PTR [rax+0x8]
   1400068b7:	nop
   1400068b8:	mov    rdx,QWORD PTR [rsp+0xb0]
   1400068c0:	add    rdx,0xffffffffffffffe8
   1400068c4:	mov    eax,edi
   1400068c6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400068cb:	add    eax,0xffffffff
   1400068ce:	test   eax,eax
   1400068d0:	jg     0x1400068dc
   1400068d2:	mov    rcx,QWORD PTR [rdx]
   1400068d5:	mov    rax,QWORD PTR [rcx]
   1400068d8:	call   QWORD PTR [rax+0x8]
   1400068db:	nop
   1400068dc:	mov    rdx,QWORD PTR [rsp+0xb8]
   1400068e4:	add    rdx,0xffffffffffffffe8
   1400068e8:	lock xadd DWORD PTR [rdx+0x10],edi
   1400068ed:	add    edi,0xffffffff
   1400068f0:	test   edi,edi
   1400068f2:	jg     0x140006b44
   1400068f8:	mov    rcx,QWORD PTR [rdx]
   1400068fb:	mov    rax,QWORD PTR [rcx]
   1400068fe:	call   QWORD PTR [rax+0x8]
   140006901:	jmp    0x140006b44
   140006906:	cmp    DWORD PTR [rsi+0xeb118],0x0
   14000690d:	je     0x140006adb
   140006913:	call   QWORD PTR [rip+0x5dc7f]        # 0x140064598
   140006919:	mov    rcx,rax
   14000691c:	lea    r8,[rsp+0x40]
   140006921:	mov    edx,0x28
   140006926:	call   QWORD PTR [rip+0x5d6f4]        # 0x140064020
   14000692c:	test   eax,eax
   14000692e:	jne    0x1400069a2
   140006930:	mov    rdx,QWORD PTR [rsp+0xa8]
   140006938:	add    rdx,0xffffffffffffffe8
   14000693c:	mov    eax,edi
   14000693e:	lock xadd DWORD PTR [rdx+0x10],eax
   140006943:	add    eax,0xffffffff
   140006946:	test   eax,eax
   140006948:	jg     0x140006954
   14000694a:	mov    rcx,QWORD PTR [rdx]
   14000694d:	mov    rax,QWORD PTR [rcx]
   140006950:	call   QWORD PTR [rax+0x8]
   140006953:	nop
   140006954:	mov    rdx,QWORD PTR [rsp+0xb0]
   14000695c:	add    rdx,0xffffffffffffffe8
   140006960:	mov    eax,edi
   140006962:	lock xadd DWORD PTR [rdx+0x10],eax
   140006967:	add    eax,0xffffffff
   14000696a:	test   eax,eax
   14000696c:	jg     0x140006978
   14000696e:	mov    rcx,QWORD PTR [rdx]
   140006971:	mov    rax,QWORD PTR [rcx]
   140006974:	call   QWORD PTR [rax+0x8]
   140006977:	nop
   140006978:	mov    rdx,QWORD PTR [rsp+0xb8]
   140006980:	add    rdx,0xffffffffffffffe8
   140006984:	lock xadd DWORD PTR [rdx+0x10],edi
   140006989:	add    edi,0xffffffff
   14000698c:	test   edi,edi
   14000698e:	jg     0x140006b44
   140006994:	mov    rcx,QWORD PTR [rdx]
   140006997:	mov    rax,QWORD PTR [rcx]
   14000699a:	call   QWORD PTR [rax+0x8]
   14000699d:	jmp    0x140006b44
   1400069a2:	lea    r8,[rsp+0x5c]
   1400069a7:	lea    rdx,[rip+0x5f112]        # 0x140065ac0
   1400069ae:	xor    ecx,ecx
   1400069b0:	call   QWORD PTR [rip+0x5d672]        # 0x140064028
   1400069b6:	mov    DWORD PTR [rsp+0x58],0x1
   1400069be:	mov    DWORD PTR [rsp+0x64],0x2
   1400069c6:	mov    QWORD PTR [rsp+0x28],r12
   1400069cb:	mov    QWORD PTR [rsp+0x20],r12
   1400069d0:	xor    r9d,r9d
   1400069d3:	lea    r8,[rsp+0x58]
   1400069d8:	xor    edx,edx
   1400069da:	mov    rcx,QWORD PTR [rsp+0x40]
   1400069df:	call   QWORD PTR [rip+0x5d64b]        # 0x140064030
   1400069e5:	call   QWORD PTR [rip+0x5dc15]        # 0x140064600
   1400069eb:	test   eax,eax
   1400069ed:	je     0x140006a61
   1400069ef:	mov    rdx,QWORD PTR [rsp+0xa8]
   1400069f7:	add    rdx,0xffffffffffffffe8
   1400069fb:	mov    eax,edi
   1400069fd:	lock xadd DWORD PTR [rdx+0x10],eax
   140006a02:	add    eax,0xffffffff
   140006a05:	test   eax,eax
   140006a07:	jg     0x140006a13
   140006a09:	mov    rcx,QWORD PTR [rdx]
   140006a0c:	mov    rax,QWORD PTR [rcx]
   140006a0f:	call   QWORD PTR [rax+0x8]
   140006a12:	nop
   140006a13:	mov    rdx,QWORD PTR [rsp+0xb0]
   140006a1b:	add    rdx,0xffffffffffffffe8
   140006a1f:	mov    eax,edi
   140006a21:	lock xadd DWORD PTR [rdx+0x10],eax
   140006a26:	add    eax,0xffffffff
   140006a29:	test   eax,eax
   140006a2b:	jg     0x140006a37
   140006a2d:	mov    rcx,QWORD PTR [rdx]
   140006a30:	mov    rax,QWORD PTR [rcx]
   140006a33:	call   QWORD PTR [rax+0x8]
   140006a36:	nop
   140006a37:	mov    rdx,QWORD PTR [rsp+0xb8]
   140006a3f:	add    rdx,0xffffffffffffffe8
   140006a43:	lock xadd DWORD PTR [rdx+0x10],edi
   140006a48:	add    edi,0xffffffff
   140006a4b:	test   edi,edi
   140006a4d:	jg     0x140006b44
   140006a53:	mov    rcx,QWORD PTR [rdx]
   140006a56:	mov    rax,QWORD PTR [rcx]
   140006a59:	call   QWORD PTR [rax+0x8]
   140006a5c:	jmp    0x140006b44
   140006a61:	xor    edx,edx
   140006a63:	lea    ecx,[rdx+0x6]
   140006a66:	call   QWORD PTR [rip+0x5e0ac]        # 0x140064b18
   140006a6c:	test   eax,eax
   140006a6e:	jne    0x140006adb
   140006a70:	mov    rdx,QWORD PTR [rsp+0xa8]
   140006a78:	add    rdx,0xffffffffffffffe8
   140006a7c:	mov    eax,edi
   140006a7e:	lock xadd DWORD PTR [rdx+0x10],eax
   140006a83:	add    eax,0xffffffff
   140006a86:	test   eax,eax
   140006a88:	jg     0x140006a94
   140006a8a:	mov    rcx,QWORD PTR [rdx]
   140006a8d:	mov    rax,QWORD PTR [rcx]
   140006a90:	call   QWORD PTR [rax+0x8]
   140006a93:	nop
   140006a94:	mov    rdx,QWORD PTR [rsp+0xb0]
   140006a9c:	add    rdx,0xffffffffffffffe8
   140006aa0:	mov    eax,edi
   140006aa2:	lock xadd DWORD PTR [rdx+0x10],eax
   140006aa7:	add    eax,0xffffffff
   140006aaa:	test   eax,eax
   140006aac:	jg     0x140006ab8
   140006aae:	mov    rcx,QWORD PTR [rdx]
   140006ab1:	mov    rax,QWORD PTR [rcx]
   140006ab4:	call   QWORD PTR [rax+0x8]
   140006ab7:	nop
   140006ab8:	mov    rdx,QWORD PTR [rsp+0xb8]
   140006ac0:	add    rdx,0xffffffffffffffe8
   140006ac4:	lock xadd DWORD PTR [rdx+0x10],edi
   140006ac9:	add    edi,0xffffffff
   140006acc:	test   edi,edi
   140006ace:	jg     0x140006b44
   140006ad0:	mov    rcx,QWORD PTR [rdx]
   140006ad3:	mov    rax,QWORD PTR [rcx]
   140006ad6:	call   QWORD PTR [rax+0x8]
   140006ad9:	jmp    0x140006b44
   140006adb:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006ae3:	lea    rdx,[rbx-0x18]
   140006ae7:	mov    eax,edi
   140006ae9:	lock xadd DWORD PTR [rdx+0x10],eax
   140006aee:	add    eax,0xffffffff
   140006af1:	test   eax,eax
   140006af3:	jg     0x140006aff
   140006af5:	mov    rcx,QWORD PTR [rdx]
   140006af8:	mov    rax,QWORD PTR [rcx]
   140006afb:	call   QWORD PTR [rax+0x8]
   140006afe:	nop
   140006aff:	mov    rdx,QWORD PTR [rsp+0xb0]
   140006b07:	add    rdx,0xffffffffffffffe8
   140006b0b:	mov    eax,edi
   140006b0d:	lock xadd DWORD PTR [rdx+0x10],eax
   140006b12:	add    eax,0xffffffff
   140006b15:	test   eax,eax
   140006b17:	jg     0x140006b23
   140006b19:	mov    rcx,QWORD PTR [rdx]
   140006b1c:	mov    rax,QWORD PTR [rcx]
   140006b1f:	call   QWORD PTR [rax+0x8]
   140006b22:	nop
   140006b23:	mov    rdx,QWORD PTR [rsp+0xb8]
   140006b2b:	add    rdx,0xffffffffffffffe8
   140006b2f:	lock xadd DWORD PTR [rdx+0x10],edi
   140006b34:	add    edi,0xffffffff
   140006b37:	test   edi,edi
   140006b39:	jg     0x140006b44
   140006b3b:	mov    rcx,QWORD PTR [rdx]
   140006b3e:	mov    rax,QWORD PTR [rcx]
   140006b41:	call   QWORD PTR [rax+0x8]
   140006b44:	add    rsp,0x70
   140006b48:	pop    r12
   140006b4a:	pop    rdi
   140006b4b:	pop    rsi
   140006b4c:	pop    rbp
   140006b4d:	pop    rbx
   140006b4e:	ret    
   140006b4f:	int3   
   140006b50:	rex push rbp
   140006b52:	sub    rsp,0x20
   140006b56:	mov    rbp,rdx
   140006b59:	lea    rcx,[rbp+0xb8]
   140006b60:	call   0x140001090
   140006b65:	add    rsp,0x20
   140006b69:	pop    rbp
   140006b6a:	ret    
   140006b6b:	int3   
   140006b6c:	int3   
   140006b6d:	int3   
   140006b6e:	int3   
   140006b6f:	int3   
   140006b70:	rex push rbp
   140006b72:	sub    rsp,0x20
   140006b76:	mov    rbp,rdx
   140006b79:	lea    rcx,[rbp+0xb8]
   140006b80:	call   0x1400010c0
   140006b85:	add    rsp,0x20
   140006b89:	pop    rbp
   140006b8a:	ret    
   140006b8b:	int3   
   140006b8c:	int3   
   140006b8d:	int3   
   140006b8e:	int3   
   140006b8f:	int3   
   140006b90:	rex push rbp
   140006b92:	sub    rsp,0x20
   140006b96:	mov    rbp,rdx
   140006b99:	lea    rcx,[rbp+0xb0]
   140006ba0:	call   0x140001090
   140006ba5:	add    rsp,0x20
   140006ba9:	pop    rbp
   140006baa:	ret    
   140006bab:	int3   
   140006bac:	int3   
   140006bad:	int3   
   140006bae:	int3   
   140006baf:	int3   
   140006bb0:	rex push rbp
   140006bb2:	sub    rsp,0x20
   140006bb6:	mov    rbp,rdx
   140006bb9:	lea    rcx,[rbp+0xb0]
   140006bc0:	call   0x1400010c0
   140006bc5:	add    rsp,0x20
   140006bc9:	pop    rbp
   140006bca:	ret    
   140006bcb:	int3   
   140006bcc:	int3   
   140006bcd:	int3   
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	rex push rbp
   140006bd2:	sub    rsp,0x20
   140006bd6:	mov    rbp,rdx
   140006bd9:	lea    rcx,[rbp+0xa8]
   140006be0:	call   0x140001090
   140006be5:	add    rsp,0x20
   140006be9:	pop    rbp
   140006bea:	ret    
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	rex push rbp
   140006bf2:	sub    rsp,0x20
   140006bf6:	mov    rbp,rdx
   140006bf9:	lea    rcx,[rbp+0xa8]
   140006c00:	call   0x1400010c0
   140006c05:	add    rsp,0x20
   140006c09:	pop    rbp
   140006c0a:	ret    
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	rex push rbp
   140006c12:	sub    rsp,0x20
   140006c16:	mov    rbp,rdx
   140006c19:	lea    rcx,[rbp+0x38]
   140006c1d:	call   0x140001090
   140006c22:	add    rsp,0x20
   140006c26:	pop    rbp
   140006c27:	ret    
   140006c28:	int3   
   140006c29:	int3   
   140006c2a:	int3   
   140006c2b:	int3   
   140006c2c:	int3   
   140006c2d:	int3   
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	rex push rbp
   140006c32:	sub    rsp,0x20
   140006c36:	mov    rbp,rdx
   140006c39:	lea    rcx,[rbp+0x38]
   140006c3d:	call   0x1400010c0
   140006c42:	add    rsp,0x20
   140006c46:	pop    rbp
   140006c47:	ret    
   140006c48:	int3   
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	int3   
   140006c4d:	int3   
   140006c4e:	int3   
   140006c4f:	int3   
   140006c50:	mov    rax,rsp
   140006c53:	push   rdi
   140006c54:	push   r12
   140006c56:	push   r13
   140006c58:	sub    rsp,0x2a0
   140006c5f:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140006c68:	mov    QWORD PTR [rax+0x10],rbx
   140006c6c:	mov    QWORD PTR [rax+0x18],rbp
   140006c70:	mov    QWORD PTR [rax+0x20],rsi
   140006c74:	mov    rax,QWORD PTR [rip+0x800f5]        # 0x140086d70
   140006c7b:	xor    rax,rsp
   140006c7e:	mov    QWORD PTR [rsp+0x290],rax
   140006c86:	mov    rsi,rcx
   140006c89:	xor    ebp,ebp
   140006c8b:	call   0x14002b874
   140006c90:	mov    rcx,rax
   140006c93:	mov    eax,ebp
   140006c95:	test   rcx,rcx
   140006c98:	setne  al
   140006c9b:	test   eax,eax
   140006c9d:	jne    0x140006caa
   140006c9f:	mov    ecx,0x80004005
   140006ca4:	call   0x140001430
   140006ca9:	int3   
   140006caa:	mov    rax,QWORD PTR [rcx]
   140006cad:	call   QWORD PTR [rax+0x18]
   140006cb0:	lea    rbx,[rax+0x18]
   140006cb4:	mov    QWORD PTR [rsp+0x30],rbx
   140006cb9:	mov    eax,DWORD PTR [rsi+0x2a8]
   140006cbf:	test   eax,eax
   140006cc1:	je     0x140006ccc
   140006cc3:	cmp    DWORD PTR [rsi+0x2ac],0x0
   140006cca:	jne    0x140006cd8
   140006ccc:	test   eax,eax
   140006cce:	jne    0x140006cfb
   140006cd0:	cmp    DWORD PTR [rsi+0x2ac],eax
   140006cd6:	jne    0x140006cfb
   140006cd8:	lea    rdx,[rbx-0x18]
   140006cdc:	or     edi,0xffffffff
   140006cdf:	lock xadd DWORD PTR [rdx+0x10],edi
   140006ce4:	add    edi,0xffffffff
   140006ce7:	test   edi,edi
   140006ce9:	jg     0x140006cf4
   140006ceb:	mov    rcx,QWORD PTR [rdx]
   140006cee:	mov    rax,QWORD PTR [rcx]
   140006cf1:	call   QWORD PTR [rax+0x8]
   140006cf4:	xor    eax,eax
   140006cf6:	jmp    0x14000714d
   140006cfb:	or     edi,0xffffffff
   140006cfe:	cmp    DWORD PTR [rsi+0xeb12c],0x0
   140006d05:	jne    0x140006e2c
   140006d0b:	call   0x14002b874
   140006d10:	mov    rcx,rax
   140006d13:	mov    eax,ebp
   140006d15:	test   rcx,rcx
   140006d18:	setne  al
   140006d1b:	test   eax,eax
   140006d1d:	jne    0x140006d2a
   140006d1f:	mov    ecx,0x80004005
   140006d24:	call   0x140001430
   140006d29:	int3   
   140006d2a:	mov    rax,QWORD PTR [rcx]
   140006d2d:	call   QWORD PTR [rax+0x18]
   140006d30:	add    rax,0x18
   140006d34:	mov    QWORD PTR [rsp+0x48],rax
   140006d39:	lea    rdx,[rip+0x5ec20]        # 0x140065960
   140006d40:	test   rdx,0xffffffffffff0000
   140006d47:	jne    0x140006d6c
   140006d49:	movzx  r12d,dx
   140006d4d:	mov    ecx,r12d
   140006d50:	call   0x14002b860
   140006d55:	test   rax,rax
   140006d58:	je     0x140006d77
   140006d5a:	mov    r8d,r12d
   140006d5d:	mov    rdx,rax
   140006d60:	lea    rcx,[rsp+0x48]
   140006d65:	call   0x140003650
   140006d6a:	jmp    0x140006d77
   140006d6c:	lea    rcx,[rsp+0x48]
   140006d71:	call   0x140003930
   140006d76:	nop
   140006d77:	lea    rdx,[rsi+0x290]
   140006d7e:	lea    r8,[rsp+0x48]
   140006d83:	lea    rcx,[rsp+0x68]
   140006d88:	call   0x140003e20
   140006d8d:	nop
   140006d8e:	mov    rdx,QWORD PTR [rax]
   140006d91:	lea    rcx,[rdx-0x18]
   140006d95:	add    rbx,0xffffffffffffffe8
   140006d99:	cmp    rcx,rbx
   140006d9c:	je     0x140006de9
   140006d9e:	cmp    DWORD PTR [rbx+0x10],0x0
   140006da2:	jl     0x140006dda
   140006da4:	mov    rax,QWORD PTR [rbx]
   140006da7:	cmp    QWORD PTR [rcx],rax
   140006daa:	jne    0x140006dda
   140006dac:	call   0x140002da0
   140006db1:	mov    r12,rax
   140006db4:	mov    eax,edi
   140006db6:	lock xadd DWORD PTR [rbx+0x10],eax
   140006dbb:	add    eax,0xffffffff
   140006dbe:	test   eax,eax
   140006dc0:	jg     0x140006dce
   140006dc2:	mov    rcx,QWORD PTR [rbx]
   140006dc5:	mov    rax,QWORD PTR [rcx]
   140006dc8:	mov    rdx,rbx
   140006dcb:	call   QWORD PTR [rax+0x8]
   140006dce:	lea    rax,[r12+0x18]
   140006dd3:	mov    QWORD PTR [rsp+0x30],rax
   140006dd8:	jmp    0x140006de9
   140006dda:	mov    r8d,DWORD PTR [rdx-0x10]
   140006dde:	lea    rcx,[rsp+0x30]
   140006de3:	call   0x1400037d0
   140006de8:	nop
   140006de9:	mov    rdx,QWORD PTR [rsp+0x68]
   140006dee:	add    rdx,0xffffffffffffffe8
   140006df2:	mov    eax,edi
   140006df4:	lock xadd DWORD PTR [rdx+0x10],eax
   140006df9:	add    eax,0xffffffff
   140006dfc:	test   eax,eax
   140006dfe:	jg     0x140006e0a
   140006e00:	mov    rcx,QWORD PTR [rdx]
   140006e03:	mov    rax,QWORD PTR [rcx]
   140006e06:	call   QWORD PTR [rax+0x8]
   140006e09:	nop
   140006e0a:	mov    rdx,QWORD PTR [rsp+0x48]
   140006e0f:	add    rdx,0xffffffffffffffe8
   140006e13:	mov    eax,edi
   140006e15:	lock xadd DWORD PTR [rdx+0x10],eax
   140006e1a:	add    eax,0xffffffff
   140006e1d:	test   eax,eax
   140006e1f:	jg     0x140006e3d
   140006e21:	mov    rcx,QWORD PTR [rdx]
   140006e24:	mov    rax,QWORD PTR [rcx]
   140006e27:	call   QWORD PTR [rax+0x8]
   140006e2a:	jmp    0x140006e3d
   140006e2c:	lea    rdx,[rip+0x5e9f5]        # 0x140065828
   140006e33:	lea    rcx,[rsp+0x30]
   140006e38:	call   0x140003930
   140006e3d:	lea    r8,[rsp+0x60]
   140006e42:	mov    rdx,QWORD PTR [rsp+0x30]
   140006e47:	mov    ecx,0x80000002
   140006e4c:	call   QWORD PTR [rip+0x5d1ee]        # 0x140064040
   140006e52:	test   eax,eax
   140006e54:	jne    0x14000712c
   140006e5a:	cmp    DWORD PTR [rsi+0x2a8],eax
   140006e60:	je     0x140006fa5
   140006e66:	call   0x14002b874
   140006e6b:	mov    rcx,rax
   140006e6e:	mov    eax,ebp
   140006e70:	test   rcx,rcx
   140006e73:	setne  al
   140006e76:	test   eax,eax
   140006e78:	jne    0x140006e85
   140006e7a:	mov    ecx,0x80004005
   140006e7f:	call   0x140001430
   140006e84:	int3   
   140006e85:	mov    rax,QWORD PTR [rcx]
   140006e88:	call   QWORD PTR [rax+0x18]
   140006e8b:	lea    rbx,[rax+0x18]
   140006e8f:	mov    QWORD PTR [rsp+0x58],rbx
   140006e94:	lea    r13,[rip+0x5ee6d]        # 0x140065d08
   140006e9b:	mov    r12,r13
   140006e9e:	shr    r12,0x10
   140006ea2:	jne    0x140006ecb
   140006ea4:	movzx  esi,r13w
   140006ea8:	mov    ecx,esi
   140006eaa:	call   0x14002b860
   140006eaf:	test   rax,rax
   140006eb2:	je     0x140006edd
   140006eb4:	mov    r8d,esi
   140006eb7:	mov    rdx,rax
   140006eba:	lea    rcx,[rsp+0x58]
   140006ebf:	call   0x140003650
   140006ec4:	mov    rbx,QWORD PTR [rsp+0x58]
   140006ec9:	jmp    0x140006edd
   140006ecb:	mov    rdx,r13
   140006ece:	lea    rcx,[rsp+0x58]
   140006ed3:	call   0x140003930
   140006ed8:	mov    rbx,QWORD PTR [rsp+0x58]
   140006edd:	mov    r8,rbx
   140006ee0:	lea    rdx,[rip+0x5ea91]        # 0x140065978
   140006ee7:	lea    rcx,[rsp+0x80]
   140006eef:	call   0x1400022b0
   140006ef4:	lea    rdx,[rbx-0x18]
   140006ef8:	mov    eax,edi
   140006efa:	lock xadd DWORD PTR [rdx+0x10],eax
   140006eff:	add    eax,0xffffffff
   140006f02:	test   eax,eax
   140006f04:	jg     0x140006f0f
   140006f06:	mov    rcx,QWORD PTR [rdx]
   140006f09:	mov    rax,QWORD PTR [rcx]
   140006f0c:	call   QWORD PTR [rax+0x8]
   140006f0f:	call   0x14002b874
   140006f14:	mov    rcx,rax
   140006f17:	mov    eax,ebp
   140006f19:	test   rcx,rcx
   140006f1c:	setne  al
   140006f1f:	test   eax,eax
   140006f21:	jne    0x140006f2e
   140006f23:	mov    ecx,0x80004005
   140006f28:	call   0x140001430
   140006f2d:	int3   
   140006f2e:	mov    rax,QWORD PTR [rcx]
   140006f31:	call   QWORD PTR [rax+0x18]
   140006f34:	lea    rbx,[rax+0x18]
   140006f38:	mov    QWORD PTR [rsp+0x50],rbx
   140006f3d:	test   r12,r12
   140006f40:	jne    0x140006f69
   140006f42:	movzx  esi,r13w
   140006f46:	mov    ecx,esi
   140006f48:	call   0x14002b860
   140006f4d:	test   rax,rax
   140006f50:	je     0x140006f7b
   140006f52:	mov    r8d,esi
   140006f55:	mov    rdx,rax
   140006f58:	lea    rcx,[rsp+0x50]
   140006f5d:	call   0x140003650
   140006f62:	mov    rbx,QWORD PTR [rsp+0x50]
   140006f67:	jmp    0x140006f7b
   140006f69:	mov    rdx,r13
   140006f6c:	lea    rcx,[rsp+0x50]
   140006f71:	call   0x140003930
   140006f76:	mov    rbx,QWORD PTR [rsp+0x50]
   140006f7b:	mov    eax,DWORD PTR [rbx-0x10]
   140006f7e:	lea    esi,[rax+rax*1]
   140006f81:	lea    rdx,[rbx-0x18]
   140006f85:	mov    eax,edi
   140006f87:	lock xadd DWORD PTR [rdx+0x10],eax
   140006f8c:	add    eax,0xffffffff
   140006f8f:	test   eax,eax
   140006f91:	jg     0x1400070ee
   140006f97:	mov    rcx,QWORD PTR [rdx]
   140006f9a:	mov    rax,QWORD PTR [rcx]
   140006f9d:	call   QWORD PTR [rax+0x8]
   140006fa0:	jmp    0x1400070ee
   140006fa5:	cmp    DWORD PTR [rsi+0x2ac],0x0
   140006fac:	je     0x1400070ea
   140006fb2:	call   0x14002b874
   140006fb7:	mov    rcx,rax
   140006fba:	mov    eax,ebp
   140006fbc:	test   rcx,rcx
   140006fbf:	setne  al
   140006fc2:	test   eax,eax
   140006fc4:	jne    0x140006fd1
   140006fc6:	mov    ecx,0x80004005
   140006fcb:	call   0x140001430
   140006fd0:	int3   
   140006fd1:	mov    rax,QWORD PTR [rcx]
   140006fd4:	call   QWORD PTR [rax+0x18]
   140006fd7:	lea    rbx,[rax+0x18]
   140006fdb:	mov    QWORD PTR [rsp+0x38],rbx
   140006fe0:	lea    r13,[rip+0x5ecf9]        # 0x140065ce0
   140006fe7:	mov    r12,r13
   140006fea:	shr    r12,0x10
   140006fee:	jne    0x140007017
   140006ff0:	movzx  esi,r13w
   140006ff4:	mov    ecx,esi
   140006ff6:	call   0x14002b860
   140006ffb:	test   rax,rax
   140006ffe:	je     0x140007029
   140007000:	mov    r8d,esi
   140007003:	mov    rdx,rax
   140007006:	lea    rcx,[rsp+0x38]
   14000700b:	call   0x140003650
   140007010:	mov    rbx,QWORD PTR [rsp+0x38]
   140007015:	jmp    0x140007029
   140007017:	mov    rdx,r13
   14000701a:	lea    rcx,[rsp+0x38]
   14000701f:	call   0x140003930
   140007024:	mov    rbx,QWORD PTR [rsp+0x38]
   140007029:	mov    r8,rbx
   14000702c:	lea    rdx,[rip+0x5e945]        # 0x140065978
   140007033:	lea    rcx,[rsp+0x80]
   14000703b:	call   0x1400022b0
   140007040:	lea    rdx,[rbx-0x18]
   140007044:	mov    eax,edi
   140007046:	lock xadd DWORD PTR [rdx+0x10],eax
   14000704b:	add    eax,0xffffffff
   14000704e:	test   eax,eax
   140007050:	jg     0x14000705b
   140007052:	mov    rcx,QWORD PTR [rdx]
   140007055:	mov    rax,QWORD PTR [rcx]
   140007058:	call   QWORD PTR [rax+0x8]
   14000705b:	call   0x14002b874
   140007060:	mov    rcx,rax
   140007063:	mov    eax,ebp
   140007065:	test   rcx,rcx
   140007068:	setne  al
   14000706b:	test   eax,eax
   14000706d:	jne    0x14000707a
   14000706f:	mov    ecx,0x80004005
   140007074:	call   0x140001430
   140007079:	int3   
   14000707a:	mov    rax,QWORD PTR [rcx]
   14000707d:	call   QWORD PTR [rax+0x18]
   140007080:	lea    rbx,[rax+0x18]
   140007084:	mov    QWORD PTR [rsp+0x40],rbx
   140007089:	test   r12,r12
   14000708c:	jne    0x1400070b5
   14000708e:	movzx  esi,r13w
   140007092:	mov    ecx,esi
   140007094:	call   0x14002b860
   140007099:	test   rax,rax
   14000709c:	je     0x1400070c7
   14000709e:	mov    r8d,esi
   1400070a1:	mov    rdx,rax
   1400070a4:	lea    rcx,[rsp+0x40]
   1400070a9:	call   0x140003650
   1400070ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400070b3:	jmp    0x1400070c7
   1400070b5:	mov    rdx,r13
   1400070b8:	lea    rcx,[rsp+0x40]
   1400070bd:	call   0x140003930
   1400070c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400070c7:	mov    eax,DWORD PTR [rbx-0x10]
   1400070ca:	lea    esi,[rax+rax*1]
   1400070cd:	lea    rdx,[rbx-0x18]
   1400070d1:	mov    eax,edi
   1400070d3:	lock xadd DWORD PTR [rdx+0x10],eax
   1400070d8:	add    eax,0xffffffff
   1400070db:	test   eax,eax
   1400070dd:	jg     0x1400070ee
   1400070df:	mov    rcx,QWORD PTR [rdx]
   1400070e2:	mov    rax,QWORD PTR [rcx]
   1400070e5:	call   QWORD PTR [rax+0x8]
   1400070e8:	jmp    0x1400070ee
   1400070ea:	mov    esi,DWORD PTR [rsp+0x30]
   1400070ee:	mov    DWORD PTR [rsp+0x28],esi
   1400070f2:	lea    rax,[rsp+0x80]
   1400070fa:	mov    QWORD PTR [rsp+0x20],rax
   1400070ff:	mov    r9d,0x1
   140007105:	xor    r8d,r8d
   140007108:	lea    rdx,[rip+0x5eba1]        # 0x140065cb0
   14000710f:	mov    rcx,QWORD PTR [rsp+0x60]
   140007114:	call   QWORD PTR [rip+0x5cf2e]        # 0x140064048
   14000711a:	test   eax,eax
   14000711c:	sete   bpl
   140007120:	mov    rcx,QWORD PTR [rsp+0x60]
   140007125:	call   QWORD PTR [rip+0x5cf3d]        # 0x140064068
   14000712b:	nop
   14000712c:	mov    rdx,QWORD PTR [rsp+0x30]
   140007131:	add    rdx,0xffffffffffffffe8
   140007135:	lock xadd DWORD PTR [rdx+0x10],edi
   14000713a:	add    edi,0xffffffff
   14000713d:	test   edi,edi
   14000713f:	jg     0x14000714b
   140007141:	mov    rcx,QWORD PTR [rdx]
   140007144:	mov    r8,QWORD PTR [rcx]
   140007147:	call   QWORD PTR [r8+0x8]
   14000714b:	mov    eax,ebp
   14000714d:	mov    rcx,QWORD PTR [rsp+0x290]
   140007155:	xor    rcx,rsp
   140007158:	call   0x140046470
   14000715d:	lea    r11,[rsp+0x2a0]
   140007165:	mov    rbx,QWORD PTR [r11+0x28]
   140007169:	mov    rbp,QWORD PTR [r11+0x30]
   14000716d:	mov    rsi,QWORD PTR [r11+0x38]
   140007171:	mov    rsp,r11
   140007174:	pop    r13
   140007176:	pop    r12
   140007178:	pop    rdi
   140007179:	ret    
   14000717a:	int3   
   14000717b:	int3   
   14000717c:	int3   
   14000717d:	int3   
   14000717e:	int3   
   14000717f:	int3   
   140007180:	rex push rbp
   140007182:	sub    rsp,0x20
   140007186:	mov    rbp,rdx
   140007189:	lea    rcx,[rbp+0x30]
   14000718d:	call   0x1400010c0
   140007192:	add    rsp,0x20
   140007196:	pop    rbp
   140007197:	ret    
   140007198:	int3   
   140007199:	int3   
   14000719a:	int3   
   14000719b:	int3   
   14000719c:	int3   
   14000719d:	int3   
   14000719e:	int3   
   14000719f:	int3   
   1400071a0:	rex push rbp
   1400071a2:	sub    rsp,0x20
   1400071a6:	mov    rbp,rdx
   1400071a9:	lea    rcx,[rbp+0x48]
   1400071ad:	call   0x140001090
   1400071b2:	add    rsp,0x20
   1400071b6:	pop    rbp
   1400071b7:	ret    
   1400071b8:	int3   
   1400071b9:	int3   
   1400071ba:	int3   
   1400071bb:	int3   
   1400071bc:	int3   
   1400071bd:	int3   
   1400071be:	int3   
   1400071bf:	int3   
   1400071c0:	rex push rbp
   1400071c2:	sub    rsp,0x20
   1400071c6:	mov    rbp,rdx
   1400071c9:	lea    rcx,[rbp+0x48]
   1400071cd:	call   0x1400010c0
   1400071d2:	add    rsp,0x20
   1400071d6:	pop    rbp
   1400071d7:	ret    
   1400071d8:	int3   
   1400071d9:	int3   
   1400071da:	int3   
   1400071db:	int3   
   1400071dc:	int3   
   1400071dd:	int3   
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	rex push rbp
   1400071e2:	sub    rsp,0x20
   1400071e6:	mov    rbp,rdx
   1400071e9:	lea    rcx,[rbp+0x68]
   1400071ed:	call   0x1400010c0
   1400071f2:	add    rsp,0x20
   1400071f6:	pop    rbp
   1400071f7:	ret    
   1400071f8:	int3   
   1400071f9:	int3   
   1400071fa:	int3   
   1400071fb:	int3   
   1400071fc:	int3   
   1400071fd:	int3   
   1400071fe:	int3   
   1400071ff:	int3   
   140007200:	rex push rbp
   140007202:	sub    rsp,0x20
   140007206:	mov    rbp,rdx
   140007209:	lea    rcx,[rbp+0x58]
   14000720d:	call   0x140001090
   140007212:	add    rsp,0x20
   140007216:	pop    rbp
   140007217:	ret    
   140007218:	int3   
   140007219:	int3   
   14000721a:	int3   
   14000721b:	int3   
   14000721c:	int3   
   14000721d:	int3   
   14000721e:	int3   
   14000721f:	int3   
   140007220:	rex push rbp
   140007222:	sub    rsp,0x20
   140007226:	mov    rbp,rdx
   140007229:	lea    rcx,[rbp+0x50]
   14000722d:	call   0x140001090
   140007232:	add    rsp,0x20
   140007236:	pop    rbp
   140007237:	ret    
   140007238:	int3   
   140007239:	int3   
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	int3   
   14000723d:	int3   
   14000723e:	int3   
   14000723f:	int3   
   140007240:	rex push rbp
   140007242:	sub    rsp,0x20
   140007246:	mov    rbp,rdx
   140007249:	lea    rcx,[rbp+0x38]
   14000724d:	call   0x140001090
   140007252:	add    rsp,0x20
   140007256:	pop    rbp
   140007257:	ret    
   140007258:	int3   
   140007259:	int3   
   14000725a:	int3   
   14000725b:	int3   
   14000725c:	int3   
   14000725d:	int3   
   14000725e:	int3   
   14000725f:	int3   
   140007260:	rex push rbp
   140007262:	sub    rsp,0x20
   140007266:	mov    rbp,rdx
   140007269:	lea    rcx,[rbp+0x40]
   14000726d:	call   0x140001090
   140007272:	add    rsp,0x20
   140007276:	pop    rbp
   140007277:	ret    
   140007278:	int3   
   140007279:	int3   
   14000727a:	int3   
   14000727b:	int3   
   14000727c:	int3   
   14000727d:	int3   
   14000727e:	int3   
   14000727f:	int3   
   140007280:	rex push rbx
   140007282:	push   rsi
   140007283:	push   rdi
   140007284:	sub    rsp,0x70
   140007288:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140007291:	mov    rsi,rcx
   140007294:	xor    ebx,ebx
   140007296:	mov    DWORD PTR [rsp+0xa8],ebx
   14000729d:	mov    DWORD PTR [rsp+0x30],ebx
   1400072a1:	call   0x14002b874
   1400072a6:	mov    rcx,rax
   1400072a9:	mov    edx,ebx
   1400072ab:	test   rax,rax
   1400072ae:	setne  dl
   1400072b1:	test   edx,edx
   1400072b3:	jne    0x1400072c0
   1400072b5:	mov    ecx,0x80004005
   1400072ba:	call   0x140001430
   1400072bf:	int3   
   1400072c0:	mov    rax,QWORD PTR [rax]
   1400072c3:	call   QWORD PTR [rax+0x18]
   1400072c6:	add    rax,0x18
   1400072ca:	mov    QWORD PTR [rsp+0x40],rax
   1400072cf:	lea    rdx,[rip+0x5ea32]        # 0x140065d08
   1400072d6:	test   rdx,0xffffffffffff0000
   1400072dd:	jne    0x140007300
   1400072df:	movzx  edi,dx
   1400072e2:	mov    ecx,edi
   1400072e4:	call   0x14002b860
   1400072e9:	test   rax,rax
   1400072ec:	je     0x14000730b
   1400072ee:	mov    r8d,edi
   1400072f1:	mov    rdx,rax
   1400072f4:	lea    rcx,[rsp+0x40]
   1400072f9:	call   0x140003650
   1400072fe:	jmp    0x14000730b
   140007300:	lea    rcx,[rsp+0x40]
   140007305:	call   0x140003930
   14000730a:	nop
   14000730b:	call   0x14002b874
   140007310:	mov    rcx,rax
   140007313:	test   rax,rax
   140007316:	setne  bl
   140007319:	test   ebx,ebx
   14000731b:	jne    0x140007328
   14000731d:	mov    ecx,0x80004005
   140007322:	call   0x140001430
   140007327:	int3   
   140007328:	mov    rax,QWORD PTR [rax]
   14000732b:	call   QWORD PTR [rax+0x18]
   14000732e:	add    rax,0x18
   140007332:	mov    QWORD PTR [rsp+0x38],rax
   140007337:	lea    rdx,[rip+0x5ea5a]        # 0x140065d98
   14000733e:	test   rdx,0xffffffffffff0000
   140007345:	jne    0x140007368
   140007347:	movzx  ebx,dx
   14000734a:	mov    ecx,ebx
   14000734c:	call   0x14002b860
   140007351:	test   rax,rax
   140007354:	je     0x140007373
   140007356:	mov    r8d,ebx
   140007359:	mov    rdx,rax
   14000735c:	lea    rcx,[rsp+0x38]
   140007361:	call   0x140003650
   140007366:	jmp    0x140007373
   140007368:	lea    rcx,[rsp+0x38]
   14000736d:	call   0x140003930
   140007372:	nop
   140007373:	lea    rdx,[rsi+0x290]
   14000737a:	lea    r8,[rsp+0x38]
   14000737f:	lea    rcx,[rsp+0x58]
   140007384:	call   0x140003e20
   140007389:	nop
   14000738a:	lea    r8,[rsp+0x40]
   14000738f:	mov    rdx,rax
   140007392:	lea    rcx,[rsp+0x50]
   140007397:	call   0x140003e20
   14000739c:	lea    rcx,[rsp+0x48]
   1400073a1:	mov    QWORD PTR [rsp+0x20],rcx
   1400073a6:	mov    r9d,0xf003f
   1400073ac:	xor    r8d,r8d
   1400073af:	mov    rdx,QWORD PTR [rax]
   1400073b2:	mov    ecx,0x80000002
   1400073b7:	call   QWORD PTR [rip+0x5cc9b]        # 0x140064058
   1400073bd:	test   eax,eax
   1400073bf:	sete   dil
   1400073c3:	mov    rdx,QWORD PTR [rsp+0x50]
   1400073c8:	add    rdx,0xffffffffffffffe8
   1400073cc:	or     ebx,0xffffffff
   1400073cf:	mov    eax,ebx
   1400073d1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400073d6:	add    eax,ebx
   1400073d8:	test   eax,eax
   1400073da:	jg     0x1400073e6
   1400073dc:	mov    rcx,QWORD PTR [rdx]
   1400073df:	mov    rax,QWORD PTR [rcx]
   1400073e2:	call   QWORD PTR [rax+0x8]
   1400073e5:	nop
   1400073e6:	mov    rdx,QWORD PTR [rsp+0x58]
   1400073eb:	add    rdx,0xffffffffffffffe8
   1400073ef:	mov    eax,ebx
   1400073f1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400073f6:	add    eax,0xffffffff
   1400073f9:	test   eax,eax
   1400073fb:	jg     0x140007407
   1400073fd:	mov    rcx,QWORD PTR [rdx]
   140007400:	mov    rax,QWORD PTR [rcx]
   140007403:	call   QWORD PTR [rax+0x8]
   140007406:	nop
   140007407:	mov    rdx,QWORD PTR [rsp+0x38]
   14000740c:	add    rdx,0xffffffffffffffe8
   140007410:	mov    eax,ebx
   140007412:	lock xadd DWORD PTR [rdx+0x10],eax
   140007417:	add    eax,0xffffffff
   14000741a:	test   eax,eax
   14000741c:	jg     0x140007428
   14000741e:	mov    rcx,QWORD PTR [rdx]
   140007421:	mov    rax,QWORD PTR [rcx]
   140007424:	call   QWORD PTR [rax+0x8]
   140007427:	nop
   140007428:	mov    rdx,QWORD PTR [rsp+0x40]
   14000742d:	add    rdx,0xffffffffffffffe8
   140007431:	lock xadd DWORD PTR [rdx+0x10],ebx
   140007436:	add    ebx,0xffffffff
   140007439:	test   ebx,ebx
   14000743b:	jg     0x140007446
   14000743d:	mov    rcx,QWORD PTR [rdx]
   140007440:	mov    rax,QWORD PTR [rcx]
   140007443:	call   QWORD PTR [rax+0x8]
   140007446:	test   dil,dil
   140007449:	je     0x1400074f5
   14000744f:	mov    DWORD PTR [rsp+0xa0],0x4
   14000745a:	mov    DWORD PTR [rsp+0x98],0x4
   140007465:	lea    rax,[rsp+0x98]
   14000746d:	mov    QWORD PTR [rsp+0x28],rax
   140007472:	lea    rax,[rsp+0xa8]
   14000747a:	mov    QWORD PTR [rsp+0x20],rax
   14000747f:	lea    r9,[rsp+0xa0]
   140007487:	xor    r8d,r8d
   14000748a:	lea    rdx,[rip+0x5e8e7]        # 0x140065d78
   140007491:	mov    rcx,QWORD PTR [rsp+0x48]
   140007496:	call   QWORD PTR [rip+0x5cbb4]        # 0x140064050
   14000749c:	test   eax,eax
   14000749e:	jne    0x1400074ea
   1400074a0:	mov    DWORD PTR [rsp+0xa0],0x4
   1400074ab:	mov    DWORD PTR [rsp+0x98],0x4
   1400074b6:	lea    rax,[rsp+0x98]
   1400074be:	mov    QWORD PTR [rsp+0x28],rax
   1400074c3:	lea    rax,[rsp+0x30]
   1400074c8:	mov    QWORD PTR [rsp+0x20],rax
   1400074cd:	lea    r9,[rsp+0xa0]
   1400074d5:	xor    r8d,r8d
   1400074d8:	lea    rdx,[rip+0x5e879]        # 0x140065d58
   1400074df:	mov    rcx,QWORD PTR [rsp+0x48]
   1400074e4:	call   QWORD PTR [rip+0x5cb66]        # 0x140064050
   1400074ea:	mov    rcx,QWORD PTR [rsp+0x48]
   1400074ef:	call   QWORD PTR [rip+0x5cb73]        # 0x140064068
   1400074f5:	mov    eax,DWORD PTR [rsp+0xa8]
   1400074fc:	shl    eax,0x10
   1400074ff:	or     eax,DWORD PTR [rsp+0x30]
   140007503:	add    rsp,0x70
   140007507:	pop    rdi
   140007508:	pop    rsi
   140007509:	pop    rbx
   14000750a:	ret    
   14000750b:	int3   
   14000750c:	int3   
   14000750d:	int3   
   14000750e:	int3   
   14000750f:	int3   
   140007510:	rex push rbp
   140007512:	sub    rsp,0x20
   140007516:	mov    rbp,rdx
   140007519:	lea    rcx,[rbp+0x40]
   14000751d:	call   0x140001090
   140007522:	add    rsp,0x20
   140007526:	pop    rbp
   140007527:	ret    
   140007528:	int3   
   140007529:	int3   
   14000752a:	int3   
   14000752b:	int3   
   14000752c:	int3   
   14000752d:	int3   
   14000752e:	int3   
   14000752f:	int3   
   140007530:	rex push rbp
   140007532:	sub    rsp,0x20
   140007536:	mov    rbp,rdx
   140007539:	lea    rcx,[rbp+0x40]
   14000753d:	call   0x1400010c0
   140007542:	add    rsp,0x20
   140007546:	pop    rbp
   140007547:	ret    
   140007548:	int3   
   140007549:	int3   
   14000754a:	int3   
   14000754b:	int3   
   14000754c:	int3   
   14000754d:	int3   
   14000754e:	int3   
   14000754f:	int3   
   140007550:	rex push rbp
   140007552:	sub    rsp,0x20
   140007556:	mov    rbp,rdx
   140007559:	lea    rcx,[rbp+0x38]
   14000755d:	call   0x140001090
   140007562:	add    rsp,0x20
   140007566:	pop    rbp
   140007567:	ret    
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	int3   
   14000756d:	int3   
   14000756e:	int3   
   14000756f:	int3   
   140007570:	rex push rbp
   140007572:	sub    rsp,0x20
   140007576:	mov    rbp,rdx
   140007579:	lea    rcx,[rbp+0x38]
   14000757d:	call   0x1400010c0
   140007582:	add    rsp,0x20
   140007586:	pop    rbp
   140007587:	ret    
   140007588:	int3   
   140007589:	int3   
   14000758a:	int3   
   14000758b:	int3   
   14000758c:	int3   
   14000758d:	int3   
   14000758e:	int3   
   14000758f:	int3   
   140007590:	rex push rbp
   140007592:	sub    rsp,0x20
   140007596:	mov    rbp,rdx
   140007599:	lea    rcx,[rbp+0x58]
   14000759d:	call   0x1400010c0
   1400075a2:	add    rsp,0x20
   1400075a6:	pop    rbp
   1400075a7:	ret    
   1400075a8:	int3   
   1400075a9:	int3   
   1400075aa:	int3   
   1400075ab:	int3   
   1400075ac:	int3   
   1400075ad:	int3   
   1400075ae:	int3   
   1400075af:	int3   
   1400075b0:	mov    rax,rsp
   1400075b3:	push   rdi
   1400075b4:	sub    rsp,0x80
   1400075bb:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400075c4:	mov    QWORD PTR [rax+0x8],rbx
   1400075c8:	mov    QWORD PTR [rax+0x10],rbp
   1400075cc:	mov    QWORD PTR [rax+0x18],rsi
   1400075d0:	mov    rsi,r8
   1400075d3:	mov    rbp,rdx
   1400075d6:	xor    edi,edi
   1400075d8:	mov    QWORD PTR [rax-0x30],rdi
   1400075dc:	mov    DWORD PTR [rax-0x40],edi
   1400075df:	call   0x14002b874
   1400075e4:	mov    rcx,rax
   1400075e7:	mov    eax,edi
   1400075e9:	test   rcx,rcx
   1400075ec:	setne  al
   1400075ef:	test   eax,eax
   1400075f1:	jne    0x1400075fe
   1400075f3:	mov    ecx,0x80004005
   1400075f8:	call   0x140001430
   1400075fd:	int3   
   1400075fe:	mov    rax,QWORD PTR [rcx]
   140007601:	call   QWORD PTR [rax+0x18]
   140007604:	add    rax,0x18
   140007608:	mov    QWORD PTR [rsp+0x30],rax
   14000760d:	lea    rdx,[rip+0x5debc]        # 0x1400654d0
   140007614:	test   rdx,0xffffffffffff0000
   14000761b:	jne    0x14000763e
   14000761d:	movzx  ebx,dx
   140007620:	mov    ecx,ebx
   140007622:	call   0x14002b860
   140007627:	test   rax,rax
   14000762a:	je     0x140007649
   14000762c:	mov    r8d,ebx
   14000762f:	mov    rdx,rax
   140007632:	lea    rcx,[rsp+0x30]
   140007637:	call   0x140003650
   14000763c:	jmp    0x140007649
   14000763e:	lea    rcx,[rsp+0x30]
   140007643:	call   0x140003930
   140007648:	nop
   140007649:	mov    DWORD PTR [rsp+0xa8],edi
   140007650:	mov    DWORD PTR [rsp+0x3c],edi
   140007654:	mov    DWORD PTR [rsp+0x38],edi
   140007658:	lea    rax,[rsp+0x48]
   14000765d:	mov    QWORD PTR [rsp+0x20],rax
   140007662:	lea    r9,[rsp+0x58]
   140007667:	mov    r8d,0x9
   14000766d:	mov    rdx,rsi
   140007670:	mov    rcx,rbp
   140007673:	call   0x140001c30
   140007678:	or     ebx,0xffffffff
   14000767b:	test   eax,eax
   14000767d:	je     0x14000786f
   140007683:	lea    rdx,[rip+0x5e796]        # 0x140065e20
   14000768a:	lea    rcx,[rsp+0x30]
   14000768f:	call   0x140003930
   140007694:	call   0x14002b874
   140007699:	mov    rcx,rax
   14000769c:	mov    eax,edi
   14000769e:	test   rcx,rcx
   1400076a1:	setne  al
   1400076a4:	test   eax,eax
   1400076a6:	jne    0x1400076b3
   1400076a8:	mov    ecx,0x80004005
   1400076ad:	call   0x140001430
   1400076b2:	int3   
   1400076b3:	mov    rax,QWORD PTR [rcx]
   1400076b6:	call   QWORD PTR [rax+0x18]
   1400076b9:	add    rax,0x18
   1400076bd:	mov    QWORD PTR [rsp+0x40],rax
   1400076c2:	lea    rdx,[rip+0x5e747]        # 0x140065e10
   1400076c9:	test   rdx,0xffffffffffff0000
   1400076d0:	jne    0x1400076f3
   1400076d2:	movzx  esi,dx
   1400076d5:	mov    ecx,esi
   1400076d7:	call   0x14002b860
   1400076dc:	test   rax,rax
   1400076df:	je     0x1400076fe
   1400076e1:	mov    r8d,esi
   1400076e4:	mov    rdx,rax
   1400076e7:	lea    rcx,[rsp+0x40]
   1400076ec:	call   0x140003650
   1400076f1:	jmp    0x1400076fe
   1400076f3:	lea    rcx,[rsp+0x40]
   1400076f8:	call   0x140003930
   1400076fd:	nop
   1400076fe:	mov    r8,QWORD PTR [rsp+0x58]
   140007703:	lea    rdx,[rsp+0x30]
   140007708:	lea    rcx,[rsp+0x68]
   14000770d:	call   0x140003f80
   140007712:	nop
   140007713:	lea    r8,[rsp+0x40]
   140007718:	mov    rdx,rax
   14000771b:	lea    rcx,[rsp+0x60]
   140007720:	call   0x140003e20
   140007725:	nop
   140007726:	mov    rdx,QWORD PTR [rax]
   140007729:	lea    rcx,[rdx-0x18]
   14000772d:	mov    rsi,QWORD PTR [rsp+0x30]
   140007732:	add    rsi,0xffffffffffffffe8
   140007736:	cmp    rcx,rsi
   140007739:	je     0x140007785
   14000773b:	cmp    DWORD PTR [rsi+0x10],0x0
   14000773f:	jl     0x140007776
   140007741:	mov    rax,QWORD PTR [rsi]
   140007744:	cmp    QWORD PTR [rcx],rax
   140007747:	jne    0x140007776
   140007749:	call   0x140002da0
   14000774e:	mov    rbp,rax
   140007751:	mov    eax,ebx
   140007753:	lock xadd DWORD PTR [rsi+0x10],eax
   140007758:	add    eax,0xffffffff
   14000775b:	test   eax,eax
   14000775d:	jg     0x14000776b
   14000775f:	mov    rcx,QWORD PTR [rsi]
   140007762:	mov    rax,QWORD PTR [rcx]
   140007765:	mov    rdx,rsi
   140007768:	call   QWORD PTR [rax+0x8]
   14000776b:	lea    rax,[rbp+0x18]
   14000776f:	mov    QWORD PTR [rsp+0x30],rax
   140007774:	jmp    0x140007785
   140007776:	mov    r8d,DWORD PTR [rdx-0x10]
   14000777a:	lea    rcx,[rsp+0x30]
   14000777f:	call   0x1400037d0
   140007784:	nop
   140007785:	mov    rdx,QWORD PTR [rsp+0x60]
   14000778a:	add    rdx,0xffffffffffffffe8
   14000778e:	mov    eax,ebx
   140007790:	lock xadd DWORD PTR [rdx+0x10],eax
   140007795:	add    eax,0xffffffff
   140007798:	test   eax,eax
   14000779a:	jg     0x1400077a6
   14000779c:	mov    rcx,QWORD PTR [rdx]
   14000779f:	mov    rax,QWORD PTR [rcx]
   1400077a2:	call   QWORD PTR [rax+0x8]
   1400077a5:	nop
   1400077a6:	mov    rdx,QWORD PTR [rsp+0x68]
   1400077ab:	add    rdx,0xffffffffffffffe8
   1400077af:	mov    eax,ebx
   1400077b1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400077b6:	add    eax,0xffffffff
   1400077b9:	test   eax,eax
   1400077bb:	jg     0x1400077c7
   1400077bd:	mov    rcx,QWORD PTR [rdx]
   1400077c0:	mov    rax,QWORD PTR [rcx]
   1400077c3:	call   QWORD PTR [rax+0x8]
   1400077c6:	nop
   1400077c7:	mov    rdx,QWORD PTR [rsp+0x40]
   1400077cc:	add    rdx,0xffffffffffffffe8
   1400077d0:	mov    eax,ebx
   1400077d2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400077d7:	add    eax,0xffffffff
   1400077da:	test   eax,eax
   1400077dc:	jg     0x1400077e7
   1400077de:	mov    rcx,QWORD PTR [rdx]
   1400077e1:	mov    rax,QWORD PTR [rcx]
   1400077e4:	call   QWORD PTR [rax+0x8]
   1400077e7:	lea    rax,[rsp+0x50]
   1400077ec:	mov    QWORD PTR [rsp+0x20],rax
   1400077f1:	mov    r9d,0x20019
   1400077f7:	xor    r8d,r8d
   1400077fa:	mov    rdx,QWORD PTR [rsp+0x30]
   1400077ff:	mov    ecx,0x80000002
   140007804:	call   QWORD PTR [rip+0x5c84e]        # 0x140064058
   14000780a:	test   eax,eax
   14000780c:	jne    0x14000786f
   14000780e:	mov    DWORD PTR [rsp+0x3c],0x4
   140007816:	mov    DWORD PTR [rsp+0xa8],0x4
   140007821:	lea    rax,[rsp+0xa8]
   140007829:	mov    QWORD PTR [rsp+0x28],rax
   14000782e:	lea    rax,[rsp+0x38]
   140007833:	mov    QWORD PTR [rsp+0x20],rax
   140007838:	lea    r9,[rsp+0x3c]
   14000783d:	xor    r8d,r8d
   140007840:	lea    rdx,[rip+0x5e5a9]        # 0x140065df0
   140007847:	mov    rcx,QWORD PTR [rsp+0x50]
   14000784c:	call   QWORD PTR [rip+0x5c7fe]        # 0x140064050
   140007852:	test   eax,eax
   140007854:	jne    0x140007863
   140007856:	mov    eax,0x1
   14000785b:	cmp    DWORD PTR [rsp+0x38],0x0
   140007860:	cmovne edi,eax
   140007863:	mov    rcx,QWORD PTR [rsp+0x50]
   140007868:	call   QWORD PTR [rip+0x5c7fa]        # 0x140064068
   14000786e:	nop
   14000786f:	mov    rdx,QWORD PTR [rsp+0x30]
   140007874:	add    rdx,0xffffffffffffffe8
   140007878:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000787d:	add    ebx,0xffffffff
   140007880:	test   ebx,ebx
   140007882:	jg     0x14000788e
   140007884:	mov    rcx,QWORD PTR [rdx]
   140007887:	mov    r8,QWORD PTR [rcx]
   14000788a:	call   QWORD PTR [r8+0x8]
   14000788e:	mov    eax,edi
   140007890:	lea    r11,[rsp+0x80]
   140007898:	mov    rbx,QWORD PTR [r11+0x10]
   14000789c:	mov    rbp,QWORD PTR [r11+0x18]
   1400078a0:	mov    rsi,QWORD PTR [r11+0x20]
   1400078a4:	mov    rsp,r11
   1400078a7:	pop    rdi
   1400078a8:	ret    
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	int3   
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	rex push rbp
   1400078b2:	sub    rsp,0x20
   1400078b6:	mov    rbp,rdx
   1400078b9:	lea    rcx,[rbp+0x30]
   1400078bd:	call   0x140001090
   1400078c2:	add    rsp,0x20
   1400078c6:	pop    rbp
   1400078c7:	ret    
   1400078c8:	int3   
   1400078c9:	int3   
   1400078ca:	int3   
   1400078cb:	int3   
   1400078cc:	int3   
   1400078cd:	int3   
   1400078ce:	int3   
   1400078cf:	int3   
   1400078d0:	rex push rbp
   1400078d2:	sub    rsp,0x20
   1400078d6:	mov    rbp,rdx
   1400078d9:	lea    rcx,[rbp+0x30]
   1400078dd:	call   0x1400010c0
   1400078e2:	add    rsp,0x20
   1400078e6:	pop    rbp
   1400078e7:	ret    
   1400078e8:	int3   
   1400078e9:	int3   
   1400078ea:	int3   
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	rex push rbp
   1400078f2:	sub    rsp,0x20
   1400078f6:	mov    rbp,rdx
   1400078f9:	lea    rcx,[rbp+0x40]
   1400078fd:	call   0x140001090
   140007902:	add    rsp,0x20
   140007906:	pop    rbp
   140007907:	ret    
   140007908:	int3   
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	rex push rbp
   140007912:	sub    rsp,0x20
   140007916:	mov    rbp,rdx
   140007919:	lea    rcx,[rbp+0x40]
   14000791d:	call   0x1400010c0
   140007922:	add    rsp,0x20
   140007926:	pop    rbp
   140007927:	ret    
   140007928:	int3   
   140007929:	int3   
   14000792a:	int3   
   14000792b:	int3   
   14000792c:	int3   
   14000792d:	int3   
   14000792e:	int3   
   14000792f:	int3   
   140007930:	rex push rbp
   140007932:	sub    rsp,0x20
   140007936:	mov    rbp,rdx
   140007939:	lea    rcx,[rbp+0x68]
   14000793d:	call   0x1400010c0
   140007942:	add    rsp,0x20
   140007946:	pop    rbp
   140007947:	ret    
   140007948:	int3   
   140007949:	int3   
   14000794a:	int3   
   14000794b:	int3   
   14000794c:	int3   
   14000794d:	int3   
   14000794e:	int3   
   14000794f:	int3   
   140007950:	rex push rbp
   140007952:	sub    rsp,0x20
   140007956:	mov    rbp,rdx
   140007959:	lea    rcx,[rbp+0x60]
   14000795d:	call   0x1400010c0
   140007962:	add    rsp,0x20
   140007966:	pop    rbp
   140007967:	ret    
   140007968:	int3   
   140007969:	int3   
   14000796a:	int3   
   14000796b:	int3   
   14000796c:	int3   
   14000796d:	int3   
   14000796e:	int3   
   14000796f:	int3   
   140007970:	mov    QWORD PTR [rsp+0x8],rbx
   140007975:	mov    QWORD PTR [rsp+0x20],rbp
   14000797a:	push   rsi
   14000797b:	push   rdi
   14000797c:	push   r12
   14000797e:	sub    rsp,0x240
   140007985:	mov    rax,QWORD PTR [rip+0x7f3e4]        # 0x140086d70
   14000798c:	xor    rax,rsp
   14000798f:	mov    QWORD PTR [rsp+0x230],rax
   140007997:	mov    rbp,r8
   14000799a:	mov    rsi,rdx
   14000799d:	mov    rdi,rcx
   1400079a0:	lea    r8,[rsp+0x30]
   1400079a5:	xor    r12d,r12d
   1400079a8:	mov    r9d,0x100
   1400079ae:	mov    rdx,rbp
   1400079b1:	mov    rcx,rsi
   1400079b4:	mov    QWORD PTR [rsp+0x20],r12
   1400079b9:	call   QWORD PTR [rip+0x5cd71]        # 0x140064730
   1400079bf:	lea    rdx,[rsp+0x30]
   1400079c4:	mov    rcx,rdi
   1400079c7:	call   0x140002b80
   1400079cc:	mov    r8,rbp
   1400079cf:	mov    rdx,rsi
   1400079d2:	mov    rcx,rdi
   1400079d5:	mov    ebx,eax
   1400079d7:	call   0x1400075b0
   1400079dc:	test   ebx,ebx
   1400079de:	je     0x1400079eb
   1400079e0:	mov    ecx,0x1
   1400079e5:	test   eax,eax
   1400079e7:	cmovne r12d,ecx
   1400079eb:	mov    eax,r12d
   1400079ee:	mov    rcx,QWORD PTR [rsp+0x230]
   1400079f6:	xor    rcx,rsp
   1400079f9:	call   0x140046470
   1400079fe:	lea    r11,[rsp+0x240]
   140007a06:	mov    rbx,QWORD PTR [r11+0x20]
   140007a0a:	mov    rbp,QWORD PTR [r11+0x38]
   140007a0e:	mov    rsp,r11
   140007a11:	pop    r12
   140007a13:	pop    rdi
   140007a14:	pop    rsi
   140007a15:	ret    
   140007a16:	int3   
   140007a17:	int3   
   140007a18:	int3   
   140007a19:	int3   
   140007a1a:	int3   
   140007a1b:	int3   
   140007a1c:	int3   
   140007a1d:	int3   
   140007a1e:	int3   
   140007a1f:	int3   
   140007a20:	rex push rbp
   140007a22:	push   rsi
   140007a23:	push   rdi
   140007a24:	sub    rsp,0x480
   140007a2b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140007a34:	mov    QWORD PTR [rsp+0x4a0],rbx
   140007a3c:	mov    rax,QWORD PTR [rip+0x7f32d]        # 0x140086d70
   140007a43:	xor    rax,rsp
   140007a46:	mov    QWORD PTR [rsp+0x470],rax
   140007a4e:	mov    rbp,r9
   140007a51:	mov    rsi,r8
   140007a54:	mov    rbx,rdx
   140007a57:	mov    QWORD PTR [rsp+0x48],rdx
   140007a5c:	mov    DWORD PTR [rsp+0x38],0x0
   140007a64:	call   0x14002b874
   140007a69:	mov    rcx,rax
   140007a6c:	xor    eax,eax
   140007a6e:	test   rcx,rcx
   140007a71:	setne  al
   140007a74:	test   eax,eax
   140007a76:	jne    0x140007a83
   140007a78:	mov    ecx,0x80004005
   140007a7d:	call   0x140001430
   140007a82:	int3   
   140007a83:	mov    rax,QWORD PTR [rcx]
   140007a86:	call   QWORD PTR [rax+0x18]
   140007a89:	add    rax,0x18
   140007a8d:	mov    QWORD PTR [rbx],rax
   140007a90:	lea    rdx,[rip+0x5da39]        # 0x1400654d0
   140007a97:	test   rdx,0xffffffffffff0000
   140007a9e:	jne    0x140007abf
   140007aa0:	movzx  edi,dx
   140007aa3:	mov    ecx,edi
   140007aa5:	call   0x14002b860
   140007aaa:	test   rax,rax
   140007aad:	je     0x140007ac8
   140007aaf:	mov    r8d,edi
   140007ab2:	mov    rdx,rax
   140007ab5:	mov    rcx,rbx
   140007ab8:	call   0x140003650
   140007abd:	jmp    0x140007ac8
   140007abf:	mov    rcx,rbx
   140007ac2:	call   0x140003930
   140007ac7:	nop
   140007ac8:	mov    DWORD PTR [rsp+0x38],0x1
   140007ad0:	mov    DWORD PTR [rsp+0x34],0x0
   140007ad8:	mov    DWORD PTR [rsp+0x30],0x0
   140007ae0:	mov    DWORD PTR [rsp+0x28],0x20019
   140007ae8:	mov    DWORD PTR [rsp+0x20],0x2
   140007af0:	xor    r9d,r9d
   140007af3:	lea    r8d,[r9+0x1]
   140007af7:	mov    rdx,rbp
   140007afa:	mov    rcx,rsi
   140007afd:	call   QWORD PTR [rip+0x5cbdd]        # 0x1400646e0
   140007b03:	cmp    rax,0xffffffffffffffff
   140007b07:	je     0x140007b78
   140007b09:	mov    DWORD PTR [rsp+0x30],0x1
   140007b11:	mov    DWORD PTR [rsp+0x34],0x208
   140007b19:	lea    rcx,[rsp+0x34]
   140007b1e:	mov    QWORD PTR [rsp+0x28],rcx
   140007b23:	lea    rcx,[rsp+0x50]
   140007b28:	mov    QWORD PTR [rsp+0x20],rcx
   140007b2d:	lea    r9,[rsp+0x30]
   140007b32:	xor    r8d,r8d
   140007b35:	lea    rdx,[rip+0x5e34c]        # 0x140065e88
   140007b3c:	mov    rcx,rax
   140007b3f:	call   QWORD PTR [rip+0x5c50b]        # 0x140064050
   140007b45:	test   eax,eax
   140007b47:	jne    0x140007b78
   140007b49:	mov    edx,0x104
   140007b4e:	lea    rcx,[rsp+0x260]
   140007b56:	call   QWORD PTR [rip+0x5ca74]        # 0x1400645d0
   140007b5c:	lea    r9,[rsp+0x50]
   140007b61:	lea    r8,[rsp+0x260]
   140007b69:	lea    rdx,[rip+0x5e300]        # 0x140065e70
   140007b70:	mov    rcx,rbx
   140007b73:	call   0x140004180
   140007b78:	mov    rax,rbx
   140007b7b:	mov    rcx,QWORD PTR [rsp+0x470]
   140007b83:	xor    rcx,rsp
   140007b86:	call   0x140046470
   140007b8b:	mov    rbx,QWORD PTR [rsp+0x4a0]
   140007b93:	add    rsp,0x480
   140007b9a:	pop    rdi
   140007b9b:	pop    rsi
   140007b9c:	pop    rbp
   140007b9d:	ret    
   140007b9e:	int3   
   140007b9f:	int3   
   140007ba0:	rex push rbp
   140007ba2:	sub    rsp,0x20
   140007ba6:	mov    rbp,rdx
   140007ba9:	mov    rcx,QWORD PTR [rbp+0x48]
   140007bad:	call   0x140001090
   140007bb2:	add    rsp,0x20
   140007bb6:	pop    rbp
   140007bb7:	ret    
   140007bb8:	int3   
   140007bb9:	int3   
   140007bba:	int3   
   140007bbb:	int3   
   140007bbc:	int3   
   140007bbd:	int3   
   140007bbe:	int3   
   140007bbf:	int3   
   140007bc0:	rex push rbp
   140007bc2:	sub    rsp,0x20
   140007bc6:	mov    rbp,rdx
   140007bc9:	mov    eax,DWORD PTR [rbp+0x38]
   140007bcc:	and    eax,0x1
   140007bcf:	test   eax,eax
   140007bd1:	je     0x140007be0
   140007bd3:	and    DWORD PTR [rbp+0x38],0xfffffffe
   140007bd7:	mov    rcx,QWORD PTR [rbp+0x48]
   140007bdb:	call   0x1400010c0
   140007be0:	add    rsp,0x20
   140007be4:	pop    rbp
   140007be5:	ret    
   140007be6:	int3   
   140007be7:	int3   
   140007be8:	int3   
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	int3   
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	rex push rbp
   140007bf2:	push   rsi
   140007bf3:	push   rdi
   140007bf4:	sub    rsp,0xf0
   140007bfb:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140007c04:	mov    QWORD PTR [rsp+0x120],rbx
   140007c0c:	mov    rax,QWORD PTR [rip+0x7f15d]        # 0x140086d70
   140007c13:	xor    rax,rsp
   140007c16:	mov    QWORD PTR [rsp+0xe0],rax
   140007c1e:	mov    edi,edx
   140007c20:	mov    rbp,rcx
   140007c23:	call   0x14002b874
   140007c28:	mov    rcx,rax
   140007c2b:	xor    esi,esi
   140007c2d:	mov    edx,esi
   140007c2f:	test   rax,rax
   140007c32:	setne  dl
   140007c35:	test   edx,edx
   140007c37:	jne    0x140007c44
   140007c39:	mov    ecx,0x80004005
   140007c3e:	call   0x140001430
   140007c43:	int3   
   140007c44:	mov    rax,QWORD PTR [rax]
   140007c47:	call   QWORD PTR [rax+0x18]
   140007c4a:	lea    rbx,[rax+0x18]
   140007c4e:	mov    QWORD PTR [rsp+0x38],rbx
   140007c53:	mov    r8d,edi
   140007c56:	lea    rdx,[rip+0x5e28b]        # 0x140065ee8
   140007c5d:	lea    rcx,[rsp+0x60]
   140007c62:	call   0x1400022e0
   140007c67:	or     edi,0xffffffff
   140007c6a:	cmp    DWORD PTR [rbp+0xeb12c],0x0
   140007c71:	jne    0x140007d95
   140007c77:	call   0x14002b874
   140007c7c:	mov    rcx,rax
   140007c7f:	test   rax,rax
   140007c82:	setne  sil
   140007c86:	test   esi,esi
   140007c88:	jne    0x140007c95
   140007c8a:	mov    ecx,0x80004005
   140007c8f:	call   0x140001430
   140007c94:	int3   
   140007c95:	mov    rax,QWORD PTR [rax]
   140007c98:	call   QWORD PTR [rax+0x18]
   140007c9b:	add    rax,0x18
   140007c9f:	mov    QWORD PTR [rsp+0x30],rax
   140007ca4:	lea    rdx,[rip+0x5dcb5]        # 0x140065960
   140007cab:	test   rdx,0xffffffffffff0000
   140007cb2:	jne    0x140007cd5
   140007cb4:	movzx  esi,dx
   140007cb7:	mov    ecx,esi
   140007cb9:	call   0x14002b860
   140007cbe:	test   rax,rax
   140007cc1:	je     0x140007ce0
   140007cc3:	mov    r8d,esi
   140007cc6:	mov    rdx,rax
   140007cc9:	lea    rcx,[rsp+0x30]
   140007cce:	call   0x140003650
   140007cd3:	jmp    0x140007ce0
   140007cd5:	lea    rcx,[rsp+0x30]
   140007cda:	call   0x140003930
   140007cdf:	nop
   140007ce0:	lea    rdx,[rbp+0x290]
   140007ce7:	lea    r8,[rsp+0x30]
   140007cec:	lea    rcx,[rsp+0x48]
   140007cf1:	call   0x140003e20
   140007cf6:	nop
   140007cf7:	mov    rdx,QWORD PTR [rax]
   140007cfa:	lea    rcx,[rdx-0x18]
   140007cfe:	add    rbx,0xffffffffffffffe8
   140007d02:	cmp    rcx,rbx
   140007d05:	je     0x140007d52
   140007d07:	cmp    DWORD PTR [rbx+0x10],0x0
   140007d0b:	jl     0x140007d43
   140007d0d:	mov    rax,QWORD PTR [rbx]
   140007d10:	cmp    QWORD PTR [rcx],rax
   140007d13:	jne    0x140007d43
   140007d15:	call   0x140002da0
   140007d1a:	mov    rsi,rax
   140007d1d:	mov    ecx,edi
   140007d1f:	lock xadd DWORD PTR [rbx+0x10],ecx
   140007d24:	add    ecx,0xffffffff
   140007d27:	test   ecx,ecx
   140007d29:	jg     0x140007d38
   140007d2b:	mov    rcx,QWORD PTR [rbx]
   140007d2e:	mov    r8,QWORD PTR [rcx]
   140007d31:	mov    rdx,rbx
   140007d34:	call   QWORD PTR [r8+0x8]
   140007d38:	lea    rax,[rsi+0x18]
   140007d3c:	mov    QWORD PTR [rsp+0x38],rax
   140007d41:	jmp    0x140007d52
   140007d43:	mov    r8d,DWORD PTR [rdx-0x10]
   140007d47:	lea    rcx,[rsp+0x38]
   140007d4c:	call   0x1400037d0
   140007d51:	nop
   140007d52:	mov    rdx,QWORD PTR [rsp+0x48]
   140007d57:	add    rdx,0xffffffffffffffe8
   140007d5b:	mov    eax,edi
   140007d5d:	lock xadd DWORD PTR [rdx+0x10],eax
   140007d62:	add    eax,0xffffffff
   140007d65:	test   eax,eax
   140007d67:	jg     0x140007d73
   140007d69:	mov    rcx,QWORD PTR [rdx]
   140007d6c:	mov    rax,QWORD PTR [rcx]
   140007d6f:	call   QWORD PTR [rax+0x8]
   140007d72:	nop
   140007d73:	mov    rdx,QWORD PTR [rsp+0x30]
   140007d78:	add    rdx,0xffffffffffffffe8
   140007d7c:	mov    eax,edi
   140007d7e:	lock xadd DWORD PTR [rdx+0x10],eax
   140007d83:	add    eax,0xffffffff
   140007d86:	test   eax,eax
   140007d88:	jg     0x140007da6
   140007d8a:	mov    rcx,QWORD PTR [rdx]
   140007d8d:	mov    rax,QWORD PTR [rcx]
   140007d90:	call   QWORD PTR [rax+0x8]
   140007d93:	jmp    0x140007da6
   140007d95:	lea    rdx,[rip+0x5da8c]        # 0x140065828
   140007d9c:	lea    rcx,[rsp+0x38]
   140007da1:	call   0x140003930
   140007da6:	lea    r8,[rsp+0x40]
   140007dab:	mov    rbx,QWORD PTR [rsp+0x38]
   140007db0:	mov    rdx,rbx
   140007db3:	mov    ecx,0x80000002
   140007db8:	call   QWORD PTR [rip+0x5c282]        # 0x140064040
   140007dbe:	test   eax,eax
   140007dc0:	jne    0x140007dfb
   140007dc2:	mov    DWORD PTR [rsp+0x28],0x80
   140007dca:	lea    rax,[rsp+0x60]
   140007dcf:	mov    QWORD PTR [rsp+0x20],rax
   140007dd4:	mov    r9d,0x1
   140007dda:	xor    r8d,r8d
   140007ddd:	lea    rdx,[rip+0x5e0dc]        # 0x140065ec0
   140007de4:	mov    rcx,QWORD PTR [rsp+0x40]
   140007de9:	call   QWORD PTR [rip+0x5c259]        # 0x140064048
   140007def:	mov    rcx,QWORD PTR [rsp+0x40]
   140007df4:	call   QWORD PTR [rip+0x5c26e]        # 0x140064068
   140007dfa:	nop
   140007dfb:	lea    rdx,[rbx-0x18]
   140007dff:	lock xadd DWORD PTR [rdx+0x10],edi
   140007e04:	add    edi,0xffffffff
   140007e07:	test   edi,edi
   140007e09:	jg     0x140007e14
   140007e0b:	mov    rcx,QWORD PTR [rdx]
   140007e0e:	mov    rax,QWORD PTR [rcx]
   140007e11:	call   QWORD PTR [rax+0x8]
   140007e14:	mov    rcx,QWORD PTR [rsp+0xe0]
   140007e1c:	xor    rcx,rsp
   140007e1f:	call   0x140046470
   140007e24:	mov    rbx,QWORD PTR [rsp+0x120]
   140007e2c:	add    rsp,0xf0
   140007e33:	pop    rdi
   140007e34:	pop    rsi
   140007e35:	pop    rbp
   140007e36:	ret    
   140007e37:	int3   
   140007e38:	int3   
   140007e39:	int3   
   140007e3a:	int3   
   140007e3b:	int3   
   140007e3c:	int3   
   140007e3d:	int3   
   140007e3e:	int3   
   140007e3f:	int3   
   140007e40:	rex push rbp
   140007e42:	sub    rsp,0x20
   140007e46:	mov    rbp,rdx
   140007e49:	lea    rcx,[rbp+0x38]
   140007e4d:	call   0x1400010c0
   140007e52:	add    rsp,0x20
   140007e56:	pop    rbp
   140007e57:	ret    
   140007e58:	int3   
   140007e59:	int3   
   140007e5a:	int3   
   140007e5b:	int3   
   140007e5c:	int3   
   140007e5d:	int3   
   140007e5e:	int3   
   140007e5f:	int3   
   140007e60:	rex push rbp
   140007e62:	sub    rsp,0x20
   140007e66:	mov    rbp,rdx
   140007e69:	lea    rcx,[rbp+0x30]
   140007e6d:	call   0x140001090
   140007e72:	add    rsp,0x20
   140007e76:	pop    rbp
   140007e77:	ret    
   140007e78:	int3   
   140007e79:	int3   
   140007e7a:	int3   
   140007e7b:	int3   
   140007e7c:	int3   
   140007e7d:	int3   
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	rex push rbp
   140007e82:	sub    rsp,0x20
   140007e86:	mov    rbp,rdx
   140007e89:	lea    rcx,[rbp+0x30]
   140007e8d:	call   0x1400010c0
   140007e92:	add    rsp,0x20
   140007e96:	pop    rbp
   140007e97:	ret    
   140007e98:	int3   
   140007e99:	int3   
   140007e9a:	int3   
   140007e9b:	int3   
   140007e9c:	int3   
   140007e9d:	int3   
   140007e9e:	int3   
   140007e9f:	int3   
   140007ea0:	rex push rbp
   140007ea2:	sub    rsp,0x20
   140007ea6:	mov    rbp,rdx
   140007ea9:	lea    rcx,[rbp+0x48]
   140007ead:	call   0x1400010c0
   140007eb2:	add    rsp,0x20
   140007eb6:	pop    rbp
   140007eb7:	ret    
   140007eb8:	int3   
   140007eb9:	int3   
   140007eba:	int3   
   140007ebb:	int3   
   140007ebc:	int3   
   140007ebd:	int3   
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	rex push rbp
   140007ec2:	push   rsi
   140007ec3:	push   rdi
   140007ec4:	sub    rsp,0xf0
   140007ecb:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140007ed4:	mov    QWORD PTR [rsp+0x120],rbx
   140007edc:	mov    rax,QWORD PTR [rip+0x7ee8d]        # 0x140086d70
   140007ee3:	xor    rax,rsp
   140007ee6:	mov    QWORD PTR [rsp+0xe0],rax
   140007eee:	mov    edi,edx
   140007ef0:	mov    rbp,rcx
   140007ef3:	call   0x14002b874
   140007ef8:	mov    rcx,rax
   140007efb:	xor    esi,esi
   140007efd:	mov    edx,esi
   140007eff:	test   rax,rax
   140007f02:	setne  dl
   140007f05:	test   edx,edx
   140007f07:	jne    0x140007f14
   140007f09:	mov    ecx,0x80004005
   140007f0e:	call   0x140001430
   140007f13:	int3   
   140007f14:	mov    rax,QWORD PTR [rax]
   140007f17:	call   QWORD PTR [rax+0x18]
   140007f1a:	lea    rbx,[rax+0x18]
   140007f1e:	mov    QWORD PTR [rsp+0x38],rbx
   140007f23:	mov    r8d,edi
   140007f26:	lea    rdx,[rip+0x5dfbb]        # 0x140065ee8
   140007f2d:	lea    rcx,[rsp+0x60]
   140007f32:	call   0x1400022e0
   140007f37:	or     edi,0xffffffff
   140007f3a:	cmp    DWORD PTR [rbp+0xeb12c],0x0
   140007f41:	jne    0x140008065
   140007f47:	call   0x14002b874
   140007f4c:	mov    rcx,rax
   140007f4f:	test   rax,rax
   140007f52:	setne  sil
   140007f56:	test   esi,esi
   140007f58:	jne    0x140007f65
   140007f5a:	mov    ecx,0x80004005
   140007f5f:	call   0x140001430
   140007f64:	int3   
   140007f65:	mov    rax,QWORD PTR [rax]
   140007f68:	call   QWORD PTR [rax+0x18]
   140007f6b:	add    rax,0x18
   140007f6f:	mov    QWORD PTR [rsp+0x30],rax
   140007f74:	lea    rdx,[rip+0x5d9e5]        # 0x140065960
   140007f7b:	test   rdx,0xffffffffffff0000
   140007f82:	jne    0x140007fa5
   140007f84:	movzx  esi,dx
   140007f87:	mov    ecx,esi
   140007f89:	call   0x14002b860
   140007f8e:	test   rax,rax
   140007f91:	je     0x140007fb0
   140007f93:	mov    r8d,esi
   140007f96:	mov    rdx,rax
   140007f99:	lea    rcx,[rsp+0x30]
   140007f9e:	call   0x140003650
   140007fa3:	jmp    0x140007fb0
   140007fa5:	lea    rcx,[rsp+0x30]
   140007faa:	call   0x140003930
   140007faf:	nop
   140007fb0:	lea    rdx,[rbp+0x290]
   140007fb7:	lea    r8,[rsp+0x30]
   140007fbc:	lea    rcx,[rsp+0x48]
   140007fc1:	call   0x140003e20
   140007fc6:	nop
   140007fc7:	mov    rdx,QWORD PTR [rax]
   140007fca:	lea    rcx,[rdx-0x18]
   140007fce:	add    rbx,0xffffffffffffffe8
   140007fd2:	cmp    rcx,rbx
   140007fd5:	je     0x140008022
   140007fd7:	cmp    DWORD PTR [rbx+0x10],0x0
   140007fdb:	jl     0x140008013
   140007fdd:	mov    rax,QWORD PTR [rbx]
   140007fe0:	cmp    QWORD PTR [rcx],rax
   140007fe3:	jne    0x140008013
   140007fe5:	call   0x140002da0
   140007fea:	mov    rsi,rax
   140007fed:	mov    ecx,edi
   140007fef:	lock xadd DWORD PTR [rbx+0x10],ecx
   140007ff4:	add    ecx,0xffffffff
   140007ff7:	test   ecx,ecx
   140007ff9:	jg     0x140008008
   140007ffb:	mov    rcx,QWORD PTR [rbx]
   140007ffe:	mov    r8,QWORD PTR [rcx]
   140008001:	mov    rdx,rbx
   140008004:	call   QWORD PTR [r8+0x8]
   140008008:	lea    rax,[rsi+0x18]
   14000800c:	mov    QWORD PTR [rsp+0x38],rax
   140008011:	jmp    0x140008022
   140008013:	mov    r8d,DWORD PTR [rdx-0x10]
   140008017:	lea    rcx,[rsp+0x38]
   14000801c:	call   0x1400037d0
   140008021:	nop
   140008022:	mov    rdx,QWORD PTR [rsp+0x48]
   140008027:	add    rdx,0xffffffffffffffe8
   14000802b:	mov    eax,edi
   14000802d:	lock xadd DWORD PTR [rdx+0x10],eax
   140008032:	add    eax,0xffffffff
   140008035:	test   eax,eax
   140008037:	jg     0x140008043
   140008039:	mov    rcx,QWORD PTR [rdx]
   14000803c:	mov    rax,QWORD PTR [rcx]
   14000803f:	call   QWORD PTR [rax+0x8]
   140008042:	nop
   140008043:	mov    rdx,QWORD PTR [rsp+0x30]
   140008048:	add    rdx,0xffffffffffffffe8
   14000804c:	mov    eax,edi
   14000804e:	lock xadd DWORD PTR [rdx+0x10],eax
   140008053:	add    eax,0xffffffff
   140008056:	test   eax,eax
   140008058:	jg     0x140008076
   14000805a:	mov    rcx,QWORD PTR [rdx]
   14000805d:	mov    rax,QWORD PTR [rcx]
   140008060:	call   QWORD PTR [rax+0x8]
   140008063:	jmp    0x140008076
   140008065:	lea    rdx,[rip+0x5d7bc]        # 0x140065828
   14000806c:	lea    rcx,[rsp+0x38]
   140008071:	call   0x140003930
   140008076:	lea    r8,[rsp+0x40]
   14000807b:	mov    rbx,QWORD PTR [rsp+0x38]
   140008080:	mov    rdx,rbx
   140008083:	mov    ecx,0x80000002
   140008088:	call   QWORD PTR [rip+0x5bfb2]        # 0x140064040
   14000808e:	test   eax,eax
   140008090:	jne    0x1400080cb
   140008092:	mov    DWORD PTR [rsp+0x28],0x80
   14000809a:	lea    rax,[rsp+0x60]
   14000809f:	mov    QWORD PTR [rsp+0x20],rax
   1400080a4:	mov    r9d,0x1
   1400080aa:	xor    r8d,r8d
   1400080ad:	lea    rdx,[rip+0x5de6c]        # 0x140065f20
   1400080b4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400080b9:	call   QWORD PTR [rip+0x5bf89]        # 0x140064048
   1400080bf:	mov    rcx,QWORD PTR [rsp+0x40]
   1400080c4:	call   QWORD PTR [rip+0x5bf9e]        # 0x140064068
   1400080ca:	nop
   1400080cb:	lea    rdx,[rbx-0x18]
   1400080cf:	lock xadd DWORD PTR [rdx+0x10],edi
   1400080d4:	add    edi,0xffffffff
   1400080d7:	test   edi,edi
   1400080d9:	jg     0x1400080e4
   1400080db:	mov    rcx,QWORD PTR [rdx]
   1400080de:	mov    rax,QWORD PTR [rcx]
   1400080e1:	call   QWORD PTR [rax+0x8]
   1400080e4:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400080ec:	xor    rcx,rsp
   1400080ef:	call   0x140046470
   1400080f4:	mov    rbx,QWORD PTR [rsp+0x120]
   1400080fc:	add    rsp,0xf0
   140008103:	pop    rdi
   140008104:	pop    rsi
   140008105:	pop    rbp
   140008106:	ret    
   140008107:	int3   
   140008108:	int3   
   140008109:	int3   
   14000810a:	int3   
   14000810b:	int3   
   14000810c:	int3   
   14000810d:	int3   
   14000810e:	int3   
   14000810f:	int3   
   140008110:	rex push rbp
   140008112:	sub    rsp,0x20
   140008116:	mov    rbp,rdx
   140008119:	lea    rcx,[rbp+0x38]
   14000811d:	call   0x1400010c0
   140008122:	add    rsp,0x20
   140008126:	pop    rbp
   140008127:	ret    
   140008128:	int3   
   140008129:	int3   
   14000812a:	int3   
   14000812b:	int3   
   14000812c:	int3   
   14000812d:	int3   
   14000812e:	int3   
   14000812f:	int3   
   140008130:	rex push rbp
   140008132:	sub    rsp,0x20
   140008136:	mov    rbp,rdx
   140008139:	lea    rcx,[rbp+0x30]
   14000813d:	call   0x140001090
   140008142:	add    rsp,0x20
   140008146:	pop    rbp
   140008147:	ret    
   140008148:	int3   
   140008149:	int3   
   14000814a:	int3   
   14000814b:	int3   
   14000814c:	int3   
   14000814d:	int3   
   14000814e:	int3   
   14000814f:	int3   
   140008150:	rex push rbp
   140008152:	sub    rsp,0x20
   140008156:	mov    rbp,rdx
   140008159:	lea    rcx,[rbp+0x30]
   14000815d:	call   0x1400010c0
   140008162:	add    rsp,0x20
   140008166:	pop    rbp
   140008167:	ret    
   140008168:	int3   
   140008169:	int3   
   14000816a:	int3   
   14000816b:	int3   
   14000816c:	int3   
   14000816d:	int3   
   14000816e:	int3   
   14000816f:	int3   
   140008170:	rex push rbp
   140008172:	sub    rsp,0x20
   140008176:	mov    rbp,rdx
   140008179:	lea    rcx,[rbp+0x48]
   14000817d:	call   0x1400010c0
   140008182:	add    rsp,0x20
   140008186:	pop    rbp
   140008187:	ret    
   140008188:	int3   
   140008189:	int3   
   14000818a:	int3   
   14000818b:	int3   
   14000818c:	int3   
   14000818d:	int3   
   14000818e:	int3   
   14000818f:	int3   
   140008190:	mov    rax,rsp
   140008193:	push   rsi
   140008194:	push   rdi
   140008195:	push   r12
   140008197:	sub    rsp,0x170
   14000819e:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400081a7:	mov    QWORD PTR [rax+0x10],rbx
   1400081ab:	mov    QWORD PTR [rax+0x20],rbp
   1400081af:	mov    rax,QWORD PTR [rip+0x7ebba]        # 0x140086d70
   1400081b6:	xor    rax,rsp
   1400081b9:	mov    QWORD PTR [rsp+0x160],rax
   1400081c1:	mov    esi,r8d
   1400081c4:	mov    edi,edx
   1400081c6:	mov    r12,rcx
   1400081c9:	call   0x14002b874
   1400081ce:	mov    rcx,rax
   1400081d1:	xor    ebp,ebp
   1400081d3:	mov    r8d,ebp
   1400081d6:	test   rax,rax
   1400081d9:	setne  r8b
   1400081dd:	test   r8d,r8d
   1400081e0:	jne    0x1400081ed
   1400081e2:	mov    ecx,0x80004005
   1400081e7:	call   0x140001430
   1400081ec:	int3   
   1400081ed:	mov    rax,QWORD PTR [rax]
   1400081f0:	call   QWORD PTR [rax+0x18]
   1400081f3:	lea    rbx,[rax+0x18]
   1400081f7:	mov    QWORD PTR [rsp+0x38],rbx
   1400081fc:	sub    edi,0x1
   1400081ff:	je     0x140008252
   140008201:	sub    edi,0x1
   140008204:	je     0x14000823c
   140008206:	sub    edi,0x1
   140008209:	je     0x140008226
   14000820b:	cmp    edi,0x1
   14000820e:	jne    0x140008266
   140008210:	mov    r8d,esi
   140008213:	lea    rdx,[rip+0x5dea6]        # 0x1400660c0
   14000821a:	lea    rcx,[rsp+0x60]
   14000821f:	call   0x140002310
   140008224:	jmp    0x140008266
   140008226:	mov    r8d,esi
   140008229:	lea    rdx,[rip+0x5de30]        # 0x140066060
   140008230:	lea    rcx,[rsp+0x60]
   140008235:	call   0x140002310
   14000823a:	jmp    0x140008266
   14000823c:	mov    r8d,esi
   14000823f:	lea    rdx,[rip+0x5ddba]        # 0x140066000
   140008246:	lea    rcx,[rsp+0x60]
   14000824b:	call   0x140002310
   140008250:	jmp    0x140008266
   140008252:	mov    r8d,esi
   140008255:	lea    rdx,[rip+0x5dd54]        # 0x140065fb0
   14000825c:	lea    rcx,[rsp+0x60]
   140008261:	call   0x140002310
   140008266:	or     edi,0xffffffff
   140008269:	cmp    DWORD PTR [r12+0xeb12c],0x0
   140008272:	jne    0x140008397
   140008278:	call   0x14002b874
   14000827d:	mov    rcx,rax
   140008280:	test   rax,rax
   140008283:	setne  bpl
   140008287:	test   ebp,ebp
   140008289:	jne    0x140008296
   14000828b:	mov    ecx,0x80004005
   140008290:	call   0x140001430
   140008295:	int3   
   140008296:	mov    rax,QWORD PTR [rax]
   140008299:	call   QWORD PTR [rax+0x18]
   14000829c:	add    rax,0x18
   1400082a0:	mov    QWORD PTR [rsp+0x30],rax
   1400082a5:	lea    rdx,[rip+0x5d6b4]        # 0x140065960
   1400082ac:	test   rdx,0xffffffffffff0000
   1400082b3:	jne    0x1400082d6
   1400082b5:	movzx  esi,dx
   1400082b8:	mov    ecx,esi
   1400082ba:	call   0x14002b860
   1400082bf:	test   rax,rax
   1400082c2:	je     0x1400082e1
   1400082c4:	mov    r8d,esi
   1400082c7:	mov    rdx,rax
   1400082ca:	lea    rcx,[rsp+0x30]
   1400082cf:	call   0x140003650
   1400082d4:	jmp    0x1400082e1
   1400082d6:	lea    rcx,[rsp+0x30]
   1400082db:	call   0x140003930
   1400082e0:	nop
   1400082e1:	lea    rdx,[r12+0x290]
   1400082e9:	lea    r8,[rsp+0x30]
   1400082ee:	lea    rcx,[rsp+0x48]
   1400082f3:	call   0x140003e20
   1400082f8:	nop
   1400082f9:	mov    rdx,QWORD PTR [rax]
   1400082fc:	lea    rcx,[rdx-0x18]
   140008300:	add    rbx,0xffffffffffffffe8
   140008304:	cmp    rcx,rbx
   140008307:	je     0x140008354
   140008309:	cmp    DWORD PTR [rbx+0x10],0x0
   14000830d:	jl     0x140008345
   14000830f:	mov    rax,QWORD PTR [rbx]
   140008312:	cmp    QWORD PTR [rcx],rax
   140008315:	jne    0x140008345
   140008317:	call   0x140002da0
   14000831c:	mov    rsi,rax
   14000831f:	mov    ecx,edi
   140008321:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008326:	add    ecx,0xffffffff
   140008329:	test   ecx,ecx
   14000832b:	jg     0x14000833a
   14000832d:	mov    rcx,QWORD PTR [rbx]
   140008330:	mov    r8,QWORD PTR [rcx]
   140008333:	mov    rdx,rbx
   140008336:	call   QWORD PTR [r8+0x8]
   14000833a:	lea    rax,[rsi+0x18]
   14000833e:	mov    QWORD PTR [rsp+0x38],rax
   140008343:	jmp    0x140008354
   140008345:	mov    r8d,DWORD PTR [rdx-0x10]
   140008349:	lea    rcx,[rsp+0x38]
   14000834e:	call   0x1400037d0
   140008353:	nop
   140008354:	mov    rdx,QWORD PTR [rsp+0x48]
   140008359:	add    rdx,0xffffffffffffffe8
   14000835d:	mov    eax,edi
   14000835f:	lock xadd DWORD PTR [rdx+0x10],eax
   140008364:	add    eax,0xffffffff
   140008367:	test   eax,eax
   140008369:	jg     0x140008375
   14000836b:	mov    rcx,QWORD PTR [rdx]
   14000836e:	mov    rax,QWORD PTR [rcx]
   140008371:	call   QWORD PTR [rax+0x8]
   140008374:	nop
   140008375:	mov    rdx,QWORD PTR [rsp+0x30]
   14000837a:	add    rdx,0xffffffffffffffe8
   14000837e:	mov    eax,edi
   140008380:	lock xadd DWORD PTR [rdx+0x10],eax
   140008385:	add    eax,0xffffffff
   140008388:	test   eax,eax
   14000838a:	jg     0x1400083a8
   14000838c:	mov    rcx,QWORD PTR [rdx]
   14000838f:	mov    rax,QWORD PTR [rcx]
   140008392:	call   QWORD PTR [rax+0x8]
   140008395:	jmp    0x1400083a8
   140008397:	lea    rdx,[rip+0x5d48a]        # 0x140065828
   14000839e:	lea    rcx,[rsp+0x38]
   1400083a3:	call   0x140003930
   1400083a8:	lea    r8,[rsp+0x40]
   1400083ad:	mov    rbx,QWORD PTR [rsp+0x38]
   1400083b2:	mov    rdx,rbx
   1400083b5:	mov    ecx,0x80000002
   1400083ba:	call   QWORD PTR [rip+0x5bc80]        # 0x140064040
   1400083c0:	test   eax,eax
   1400083c2:	jne    0x1400083fd
   1400083c4:	mov    DWORD PTR [rsp+0x28],0x100
   1400083cc:	lea    rax,[rsp+0x60]
   1400083d1:	mov    QWORD PTR [rsp+0x20],rax
   1400083d6:	mov    r9d,0x1
   1400083dc:	xor    r8d,r8d
   1400083df:	lea    rdx,[rip+0x5db9a]        # 0x140065f80
   1400083e6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400083eb:	call   QWORD PTR [rip+0x5bc57]        # 0x140064048
   1400083f1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400083f6:	call   QWORD PTR [rip+0x5bc6c]        # 0x140064068
   1400083fc:	nop
   1400083fd:	lea    rdx,[rbx-0x18]
   140008401:	lock xadd DWORD PTR [rdx+0x10],edi
   140008406:	add    edi,0xffffffff
   140008409:	test   edi,edi
   14000840b:	jg     0x140008416
   14000840d:	mov    rcx,QWORD PTR [rdx]
   140008410:	mov    rax,QWORD PTR [rcx]
   140008413:	call   QWORD PTR [rax+0x8]
   140008416:	mov    rcx,QWORD PTR [rsp+0x160]
   14000841e:	xor    rcx,rsp
   140008421:	call   0x140046470
   140008426:	lea    r11,[rsp+0x170]
   14000842e:	mov    rbx,QWORD PTR [r11+0x28]
   140008432:	mov    rbp,QWORD PTR [r11+0x38]
   140008436:	mov    rsp,r11
   140008439:	pop    r12
   14000843b:	pop    rdi
   14000843c:	pop    rsi
   14000843d:	ret    
   14000843e:	int3   
   14000843f:	int3   
   140008440:	rex push rbp
   140008442:	sub    rsp,0x20
   140008446:	mov    rbp,rdx
   140008449:	lea    rcx,[rbp+0x38]
   14000844d:	call   0x1400010c0
   140008452:	add    rsp,0x20
   140008456:	pop    rbp
   140008457:	ret    
   140008458:	int3   
   140008459:	int3   
   14000845a:	int3   
   14000845b:	int3   
   14000845c:	int3   
   14000845d:	int3   
   14000845e:	int3   
   14000845f:	int3   
   140008460:	rex push rbp
   140008462:	sub    rsp,0x20
   140008466:	mov    rbp,rdx
   140008469:	lea    rcx,[rbp+0x30]
   14000846d:	call   0x140001090
   140008472:	add    rsp,0x20
   140008476:	pop    rbp
   140008477:	ret    
   140008478:	int3   
   140008479:	int3   
   14000847a:	int3   
   14000847b:	int3   
   14000847c:	int3   
   14000847d:	int3   
   14000847e:	int3   
   14000847f:	int3   
   140008480:	rex push rbp
   140008482:	sub    rsp,0x20
   140008486:	mov    rbp,rdx
   140008489:	lea    rcx,[rbp+0x30]
   14000848d:	call   0x1400010c0
   140008492:	add    rsp,0x20
   140008496:	pop    rbp
   140008497:	ret    
   140008498:	int3   
   140008499:	int3   
   14000849a:	int3   
   14000849b:	int3   
   14000849c:	int3   
   14000849d:	int3   
   14000849e:	int3   
   14000849f:	int3   
   1400084a0:	rex push rbp
   1400084a2:	sub    rsp,0x20
   1400084a6:	mov    rbp,rdx
   1400084a9:	lea    rcx,[rbp+0x48]
   1400084ad:	call   0x1400010c0
   1400084b2:	add    rsp,0x20
   1400084b6:	pop    rbp
   1400084b7:	ret    
   1400084b8:	int3   
   1400084b9:	int3   
   1400084ba:	int3   
   1400084bb:	int3   
   1400084bc:	int3   
   1400084bd:	int3   
   1400084be:	int3   
   1400084bf:	int3   
   1400084c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400084c5:	push   rbx
   1400084c6:	sub    rsp,0x40
   1400084ca:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400084d3:	mov    rbx,rcx
   1400084d6:	lea    rax,[rip+0xffffffffffff8be3]        # 0x1400010c0
   1400084dd:	mov    QWORD PTR [rsp+0x20],rax
   1400084e2:	lea    r9,[rip+0xffffffffffffa947]        # 0x140002e30
   1400084e9:	mov    edx,0x8
   1400084ee:	lea    r8d,[rdx+0x5c]
   1400084f2:	call   0x140047810
   1400084f7:	nop
   1400084f8:	mov    rcx,rbx
   1400084fb:	call   0x140004bb0
   140008500:	nop
   140008501:	mov    rax,rbx
   140008504:	add    rsp,0x40
   140008508:	pop    rbx
   140008509:	ret    
   14000850a:	int3   
   14000850b:	int3   
   14000850c:	int3   
   14000850d:	int3   
   14000850e:	int3   
   14000850f:	int3   
   140008510:	rex push rbp
   140008512:	sub    rsp,0x20
   140008516:	mov    rbp,rdx
   140008519:	lea    r9,[rip+0xffffffffffff8ba0]        # 0x1400010c0
   140008520:	mov    r8d,0x64
   140008526:	mov    edx,0x8
   14000852b:	mov    rcx,QWORD PTR [rbp+0x50]
   14000852f:	call   0x140045b20
   140008534:	add    rsp,0x20
   140008538:	pop    rbp
   140008539:	ret    
   14000853a:	int3   
   14000853b:	int3   
   14000853c:	int3   
   14000853d:	int3   
   14000853e:	int3   
   14000853f:	int3   
   140008540:	mov    QWORD PTR [rsp+0x10],rdx
   140008545:	push   rdi
   140008546:	push   r12
   140008548:	push   r13
   14000854a:	sub    rsp,0x30
   14000854e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008557:	mov    QWORD PTR [rsp+0x50],rbx
   14000855c:	mov    QWORD PTR [rsp+0x60],rbp
   140008561:	mov    QWORD PTR [rsp+0x68],rsi
   140008566:	mov    r13,rdx
   140008569:	mov    rsi,rcx
   14000856c:	movsxd rax,DWORD PTR [rcx+0x320]
   140008573:	lea    rbp,[rcx+rax*8]
   140008577:	mov    rdx,QWORD PTR [rdx]
   14000857a:	lea    rcx,[rdx-0x18]
   14000857e:	mov    rdi,QWORD PTR [rbp+0x0]
   140008582:	sub    rdi,0x18
   140008586:	or     ebx,0xffffffff
   140008589:	cmp    rcx,rdi
   14000858c:	je     0x1400085d5
   14000858e:	cmp    DWORD PTR [rdi+0x10],0x0
   140008592:	jl     0x1400085c9
   140008594:	mov    rax,QWORD PTR [rdi]
   140008597:	cmp    QWORD PTR [rcx],rax
   14000859a:	jne    0x1400085c9
   14000859c:	call   0x140002da0
   1400085a1:	mov    r12,rax
   1400085a4:	mov    ecx,ebx
   1400085a6:	lock xadd DWORD PTR [rdi+0x10],ecx
   1400085ab:	add    ecx,ebx
   1400085ad:	test   ecx,ecx
   1400085af:	jg     0x1400085be
   1400085b1:	mov    rcx,QWORD PTR [rdi]
   1400085b4:	mov    r8,QWORD PTR [rcx]
   1400085b7:	mov    rdx,rdi
   1400085ba:	call   QWORD PTR [r8+0x8]
   1400085be:	lea    rax,[r12+0x18]
   1400085c3:	mov    QWORD PTR [rbp+0x0],rax
   1400085c7:	jmp    0x1400085d5
   1400085c9:	mov    r8d,DWORD PTR [rdx-0x10]
   1400085cd:	mov    rcx,rbp
   1400085d0:	call   0x1400037d0
   1400085d5:	add    DWORD PTR [rsi+0x320],0x1
   1400085dc:	mov    rdx,QWORD PTR [r13+0x0]
   1400085e0:	sub    rdx,0x18
   1400085e4:	lock xadd DWORD PTR [rdx+0x10],ebx
   1400085e9:	add    ebx,0xffffffff
   1400085ec:	test   ebx,ebx
   1400085ee:	jg     0x1400085f9
   1400085f0:	mov    rcx,QWORD PTR [rdx]
   1400085f3:	mov    rax,QWORD PTR [rcx]
   1400085f6:	call   QWORD PTR [rax+0x8]
   1400085f9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400085fe:	mov    rbp,QWORD PTR [rsp+0x60]
   140008603:	mov    rsi,QWORD PTR [rsp+0x68]
   140008608:	add    rsp,0x30
   14000860c:	pop    r13
   14000860e:	pop    r12
   140008610:	pop    rdi
   140008611:	ret    
   140008612:	int3   
   140008613:	int3   
   140008614:	int3   
   140008615:	int3   
   140008616:	int3   
   140008617:	int3   
   140008618:	int3   
   140008619:	int3   
   14000861a:	int3   
   14000861b:	int3   
   14000861c:	int3   
   14000861d:	int3   
   14000861e:	int3   
   14000861f:	int3   
   140008620:	rex push rbp
   140008622:	sub    rsp,0x20
   140008626:	mov    rbp,rdx
   140008629:	mov    rcx,QWORD PTR [rbp+0x58]
   14000862d:	call   0x1400010c0
   140008632:	add    rsp,0x20
   140008636:	pop    rbp
   140008637:	ret    
   140008638:	int3   
   140008639:	int3   
   14000863a:	int3   
   14000863b:	int3   
   14000863c:	int3   
   14000863d:	int3   
   14000863e:	int3   
   14000863f:	int3   
   140008640:	rex push rbx
   140008642:	push   rbp
   140008643:	push   rsi
   140008644:	push   rdi
   140008645:	push   r12
   140008647:	sub    rsp,0x110
   14000864e:	mov    QWORD PTR [rsp+0x100],0xfffffffffffffffe
   14000865a:	mov    r12,rcx
   14000865d:	call   0x14002b874
   140008662:	mov    rcx,rax
   140008665:	xor    ebp,ebp
   140008667:	mov    edx,ebp
   140008669:	test   rax,rax
   14000866c:	setne  dl
   14000866f:	test   edx,edx
   140008671:	jne    0x14000867e
   140008673:	mov    ecx,0x80004005
   140008678:	call   0x140001430
   14000867d:	int3   
   14000867e:	mov    rax,QWORD PTR [rax]
   140008681:	call   QWORD PTR [rax+0x18]
   140008684:	add    rax,0x18
   140008688:	mov    QWORD PTR [rsp+0x148],rax
   140008690:	call   0x14002b874
   140008695:	mov    r11,rax
   140008698:	mov    ecx,ebp
   14000869a:	test   rax,rax
   14000869d:	setne  cl
   1400086a0:	test   ecx,ecx
   1400086a2:	jne    0x1400086af
   1400086a4:	mov    ecx,0x80004005
   1400086a9:	call   0x140001430
   1400086ae:	int3   
   1400086af:	mov    rax,QWORD PTR [rax]
   1400086b2:	mov    rcx,r11
   1400086b5:	call   QWORD PTR [rax+0x18]
   1400086b8:	lea    rbx,[rax+0x18]
   1400086bc:	mov    QWORD PTR [rsp+0x150],rbx
   1400086c4:	call   QWORD PTR [rip+0x7ffb6]        # 0x140088680
   1400086ca:	mov    DWORD PTR [rsp+0x28],ebp
   1400086ce:	mov    QWORD PTR [rsp+0x20],rbp
   1400086d3:	or     edi,0xffffffff
   1400086d6:	mov    r9d,edi
   1400086d9:	lea    r8,[rip+0x5dcc8]        # 0x1400663a8
   1400086e0:	xor    edx,edx
   1400086e2:	mov    ecx,eax
   1400086e4:	call   QWORD PTR [rip+0x5bf2e]        # 0x140064618
   1400086ea:	lea    esi,[rax-0x1]
   1400086ed:	test   esi,esi
   1400086ef:	jle    0x14000875a
   1400086f1:	mov    edx,0x1
   1400086f6:	sub    edx,DWORD PTR [rbx-0x8]
   1400086f9:	mov    ecx,DWORD PTR [rbx-0xc]
   1400086fc:	sub    ecx,esi
   1400086fe:	or     ecx,edx
   140008700:	jge    0x140008719
   140008702:	mov    edx,esi
   140008704:	lea    rcx,[rsp+0x150]
   14000870c:	call   0x140002d40
   140008711:	mov    rbx,QWORD PTR [rsp+0x150]
   140008719:	call   QWORD PTR [rip+0x7ff61]        # 0x140088680
   14000871f:	mov    ecx,eax
   140008721:	mov    DWORD PTR [rsp+0x28],esi
   140008725:	mov    QWORD PTR [rsp+0x20],rbx
   14000872a:	mov    r9d,edi
   14000872d:	lea    r8,[rip+0x5dc74]        # 0x1400663a8
   140008734:	xor    edx,edx
   140008736:	call   QWORD PTR [rip+0x5bedc]        # 0x140064618
   14000873c:	cmp    esi,DWORD PTR [rbx-0xc]
   14000873f:	jg     0x14000874f
   140008741:	mov    DWORD PTR [rbx-0x10],esi
   140008744:	movsxd rax,esi
   140008747:	mov    WORD PTR [rbx+rax*2],0x0
   14000874d:	jmp    0x1400087b4
   14000874f:	mov    ecx,0x80070057
   140008754:	call   0x140001430
   140008759:	int3   
   14000875a:	lea    rdx,[rbx-0x18]
   14000875e:	mov    rsi,QWORD PTR [rdx]
   140008761:	cmp    DWORD PTR [rdx+0x8],0x0
   140008765:	je     0x1400087b4
   140008767:	cmp    DWORD PTR [rdx+0x10],0x0
   14000876b:	jge    0x140008788
   14000876d:	cmp    DWORD PTR [rbx-0xc],0x0
   140008771:	jge    0x14000877e
   140008773:	mov    ecx,0x80070057
   140008778:	call   0x140001430
   14000877d:	int3   
   14000877e:	mov    DWORD PTR [rbx-0x10],ebp
   140008781:	mov    WORD PTR [rbx],0x0
   140008786:	jmp    0x1400087b4
   140008788:	mov    eax,edi
   14000878a:	lock xadd DWORD PTR [rdx+0x10],eax
   14000878f:	add    eax,0xffffffff
   140008792:	test   eax,eax
   140008794:	jg     0x14000879f
   140008796:	mov    rcx,QWORD PTR [rdx]
   140008799:	mov    rax,QWORD PTR [rcx]
   14000879c:	call   QWORD PTR [rax+0x8]
   14000879f:	mov    rax,QWORD PTR [rsi]
   1400087a2:	mov    rcx,rsi
   1400087a5:	call   QWORD PTR [rax+0x18]
   1400087a8:	add    rax,0x18
   1400087ac:	mov    QWORD PTR [rsp+0x150],rax
   1400087b4:	call   0x14002b874
   1400087b9:	mov    rcx,rax
   1400087bc:	test   rax,rax
   1400087bf:	setne  bpl
   1400087c3:	test   ebp,ebp
   1400087c5:	jne    0x1400087d2
   1400087c7:	mov    ecx,0x80004005
   1400087cc:	call   0x140001430
   1400087d1:	int3   
   1400087d2:	mov    rax,QWORD PTR [rax]
   1400087d5:	call   QWORD PTR [rax+0x18]
   1400087d8:	lea    rbx,[rax+0x18]
   1400087dc:	mov    QWORD PTR [rsp+0x158],rbx
   1400087e4:	lea    rdx,[rip+0x5db95]        # 0x140066380
   1400087eb:	test   rdx,0xffffffffffff0000
   1400087f2:	jne    0x140008820
   1400087f4:	movzx  esi,dx
   1400087f7:	mov    ecx,esi
   1400087f9:	call   0x14002b860
   1400087fe:	test   rax,rax
   140008801:	je     0x140008835
   140008803:	mov    r8d,esi
   140008806:	mov    rdx,rax
   140008809:	lea    rcx,[rsp+0x158]
   140008811:	call   0x140003650
   140008816:	mov    rbx,QWORD PTR [rsp+0x158]
   14000881e:	jmp    0x140008835
   140008820:	lea    rcx,[rsp+0x158]
   140008828:	call   0x140003930
   14000882d:	mov    rbx,QWORD PTR [rsp+0x158]
   140008835:	mov    rdx,rbx
   140008838:	mov    rcx,r12
   14000883b:	call   QWORD PTR [rip+0x5bf4f]        # 0x140064790
   140008841:	lea    rdx,[rbx-0x18]
   140008845:	mov    eax,edi
   140008847:	lock xadd DWORD PTR [rdx+0x10],eax
   14000884c:	add    eax,0xffffffff
   14000884f:	test   eax,eax
   140008851:	jg     0x14000885c
   140008853:	mov    rcx,QWORD PTR [rdx]
   140008856:	mov    rax,QWORD PTR [rcx]
   140008859:	call   QWORD PTR [rax+0x8]
   14000885c:	lea    r8,[rip+0x5db0d]        # 0x140066370
   140008863:	lea    rdx,[rsp+0x150]
   14000886b:	lea    rcx,[rsp+0x38]
   140008870:	call   0x140003f80
   140008875:	nop
   140008876:	mov    rdx,QWORD PTR [rax]
   140008879:	lea    rcx,[rdx-0x18]
   14000887d:	mov    rbx,QWORD PTR [rsp+0x148]
   140008885:	add    rbx,0xffffffffffffffe8
   140008889:	cmp    rcx,rbx
   14000888c:	je     0x1400088df
   14000888e:	cmp    DWORD PTR [rbx+0x10],0x0
   140008892:	jl     0x1400088cd
   140008894:	mov    rax,QWORD PTR [rbx]
   140008897:	cmp    QWORD PTR [rcx],rax
   14000889a:	jne    0x1400088cd
   14000889c:	call   0x140002da0
   1400088a1:	mov    rsi,rax
   1400088a4:	mov    ecx,edi
   1400088a6:	lock xadd DWORD PTR [rbx+0x10],ecx
   1400088ab:	add    ecx,0xffffffff
   1400088ae:	test   ecx,ecx
   1400088b0:	jg     0x1400088bf
   1400088b2:	mov    rcx,QWORD PTR [rbx]
   1400088b5:	mov    r8,QWORD PTR [rcx]
   1400088b8:	mov    rdx,rbx
   1400088bb:	call   QWORD PTR [r8+0x8]
   1400088bf:	lea    rax,[rsi+0x18]
   1400088c3:	mov    QWORD PTR [rsp+0x148],rax
   1400088cb:	jmp    0x1400088df
   1400088cd:	mov    r8d,DWORD PTR [rdx-0x10]
   1400088d1:	lea    rcx,[rsp+0x148]
   1400088d9:	call   0x1400037d0
   1400088de:	nop
   1400088df:	mov    rdx,QWORD PTR [rsp+0x38]
   1400088e4:	add    rdx,0xffffffffffffffe8
   1400088e8:	mov    eax,edi
   1400088ea:	lock xadd DWORD PTR [rdx+0x10],eax
   1400088ef:	add    eax,0xffffffff
   1400088f2:	test   eax,eax
   1400088f4:	jg     0x1400088ff
   1400088f6:	mov    rcx,QWORD PTR [rdx]
   1400088f9:	mov    rax,QWORD PTR [rcx]
   1400088fc:	call   QWORD PTR [rax+0x8]
   1400088ff:	mov    rbx,QWORD PTR [rsp+0x148]
   140008907:	mov    rdx,rbx
   14000890a:	mov    rcx,r12
   14000890d:	call   QWORD PTR [rip+0x5be7d]        # 0x140064790
   140008913:	lea    r8,[rip+0x5da46]        # 0x140066360
   14000891a:	lea    rdx,[rsp+0x150]
   140008922:	lea    rcx,[rsp+0xe8]
   14000892a:	call   0x140003f80
   14000892f:	nop
   140008930:	mov    rdx,QWORD PTR [rax]
   140008933:	lea    rcx,[rdx-0x18]
   140008937:	add    rbx,0xffffffffffffffe8
   14000893b:	cmp    rcx,rbx
   14000893e:	je     0x140008991
   140008940:	cmp    DWORD PTR [rbx+0x10],0x0
   140008944:	jl     0x14000897f
   140008946:	mov    rax,QWORD PTR [rbx]
   140008949:	cmp    QWORD PTR [rcx],rax
   14000894c:	jne    0x14000897f
   14000894e:	call   0x140002da0
   140008953:	mov    rsi,rax
   140008956:	mov    ecx,edi
   140008958:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000895d:	add    ecx,0xffffffff
   140008960:	test   ecx,ecx
   140008962:	jg     0x140008971
   140008964:	mov    rcx,QWORD PTR [rbx]
   140008967:	mov    r8,QWORD PTR [rcx]
   14000896a:	mov    rdx,rbx
   14000896d:	call   QWORD PTR [r8+0x8]
   140008971:	lea    rax,[rsi+0x18]
   140008975:	mov    QWORD PTR [rsp+0x148],rax
   14000897d:	jmp    0x140008991
   14000897f:	mov    r8d,DWORD PTR [rdx-0x10]
   140008983:	lea    rcx,[rsp+0x148]
   14000898b:	call   0x1400037d0
   140008990:	nop
   140008991:	mov    rdx,QWORD PTR [rsp+0xe8]
   140008999:	add    rdx,0xffffffffffffffe8
   14000899d:	mov    eax,edi
   14000899f:	lock xadd DWORD PTR [rdx+0x10],eax
   1400089a4:	add    eax,0xffffffff
   1400089a7:	test   eax,eax
   1400089a9:	jg     0x1400089b4
   1400089ab:	mov    rcx,QWORD PTR [rdx]
   1400089ae:	mov    rax,QWORD PTR [rcx]
   1400089b1:	call   QWORD PTR [rax+0x8]
   1400089b4:	mov    rbx,QWORD PTR [rsp+0x148]
   1400089bc:	mov    rdx,rbx
   1400089bf:	mov    rcx,r12
   1400089c2:	call   QWORD PTR [rip+0x5bdc8]        # 0x140064790
   1400089c8:	lea    r8,[rip+0x5d979]        # 0x140066348
   1400089cf:	lea    rdx,[rsp+0x150]
   1400089d7:	lea    rcx,[rsp+0x48]
   1400089dc:	call   0x140003f80
   1400089e1:	nop
   1400089e2:	mov    rdx,QWORD PTR [rax]
   1400089e5:	lea    rcx,[rdx-0x18]
   1400089e9:	add    rbx,0xffffffffffffffe8
   1400089ed:	cmp    rcx,rbx
   1400089f0:	je     0x140008a43
   1400089f2:	cmp    DWORD PTR [rbx+0x10],0x0
   1400089f6:	jl     0x140008a31
   1400089f8:	mov    rax,QWORD PTR [rbx]
   1400089fb:	cmp    QWORD PTR [rcx],rax
   1400089fe:	jne    0x140008a31
   140008a00:	call   0x140002da0
   140008a05:	mov    rsi,rax
   140008a08:	mov    ecx,edi
   140008a0a:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008a0f:	add    ecx,0xffffffff
   140008a12:	test   ecx,ecx
   140008a14:	jg     0x140008a23
   140008a16:	mov    rcx,QWORD PTR [rbx]
   140008a19:	mov    r8,QWORD PTR [rcx]
   140008a1c:	mov    rdx,rbx
   140008a1f:	call   QWORD PTR [r8+0x8]
   140008a23:	lea    rax,[rsi+0x18]
   140008a27:	mov    QWORD PTR [rsp+0x148],rax
   140008a2f:	jmp    0x140008a43
   140008a31:	mov    r8d,DWORD PTR [rdx-0x10]
   140008a35:	lea    rcx,[rsp+0x148]
   140008a3d:	call   0x1400037d0
   140008a42:	nop
   140008a43:	mov    rdx,QWORD PTR [rsp+0x48]
   140008a48:	add    rdx,0xffffffffffffffe8
   140008a4c:	mov    eax,edi
   140008a4e:	lock xadd DWORD PTR [rdx+0x10],eax
   140008a53:	add    eax,0xffffffff
   140008a56:	test   eax,eax
   140008a58:	jg     0x140008a63
   140008a5a:	mov    rcx,QWORD PTR [rdx]
   140008a5d:	mov    rax,QWORD PTR [rcx]
   140008a60:	call   QWORD PTR [rax+0x8]
   140008a63:	mov    rbx,QWORD PTR [rsp+0x148]
   140008a6b:	mov    rdx,rbx
   140008a6e:	mov    rcx,r12
   140008a71:	call   QWORD PTR [rip+0x5bd19]        # 0x140064790
   140008a77:	lea    r8,[rip+0x5d8ba]        # 0x140066338
   140008a7e:	lea    rdx,[rsp+0x150]
   140008a86:	lea    rcx,[rsp+0xa8]
   140008a8e:	call   0x140003f80
   140008a93:	nop
   140008a94:	mov    rdx,QWORD PTR [rax]
   140008a97:	lea    rcx,[rdx-0x18]
   140008a9b:	add    rbx,0xffffffffffffffe8
   140008a9f:	cmp    rcx,rbx
   140008aa2:	je     0x140008af5
   140008aa4:	cmp    DWORD PTR [rbx+0x10],0x0
   140008aa8:	jl     0x140008ae3
   140008aaa:	mov    rax,QWORD PTR [rbx]
   140008aad:	cmp    QWORD PTR [rcx],rax
   140008ab0:	jne    0x140008ae3
   140008ab2:	call   0x140002da0
   140008ab7:	mov    rsi,rax
   140008aba:	mov    ecx,edi
   140008abc:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008ac1:	add    ecx,0xffffffff
   140008ac4:	test   ecx,ecx
   140008ac6:	jg     0x140008ad5
   140008ac8:	mov    rcx,QWORD PTR [rbx]
   140008acb:	mov    r8,QWORD PTR [rcx]
   140008ace:	mov    rdx,rbx
   140008ad1:	call   QWORD PTR [r8+0x8]
   140008ad5:	lea    rax,[rsi+0x18]
   140008ad9:	mov    QWORD PTR [rsp+0x148],rax
   140008ae1:	jmp    0x140008af5
   140008ae3:	mov    r8d,DWORD PTR [rdx-0x10]
   140008ae7:	lea    rcx,[rsp+0x148]
   140008aef:	call   0x1400037d0
   140008af4:	nop
   140008af5:	mov    rdx,QWORD PTR [rsp+0xa8]
   140008afd:	add    rdx,0xffffffffffffffe8
   140008b01:	mov    eax,edi
   140008b03:	lock xadd DWORD PTR [rdx+0x10],eax
   140008b08:	add    eax,0xffffffff
   140008b0b:	test   eax,eax
   140008b0d:	jg     0x140008b18
   140008b0f:	mov    rcx,QWORD PTR [rdx]
   140008b12:	mov    rax,QWORD PTR [rcx]
   140008b15:	call   QWORD PTR [rax+0x8]
   140008b18:	mov    rbx,QWORD PTR [rsp+0x148]
   140008b20:	mov    rdx,rbx
   140008b23:	mov    rcx,r12
   140008b26:	call   QWORD PTR [rip+0x5bc64]        # 0x140064790
   140008b2c:	lea    r8,[rip+0x5d7ed]        # 0x140066320
   140008b33:	lea    rdx,[rsp+0x150]
   140008b3b:	lea    rcx,[rsp+0x58]
   140008b40:	call   0x140003f80
   140008b45:	nop
   140008b46:	mov    rdx,QWORD PTR [rax]
   140008b49:	lea    rcx,[rdx-0x18]
   140008b4d:	add    rbx,0xffffffffffffffe8
   140008b51:	cmp    rcx,rbx
   140008b54:	je     0x140008ba7
   140008b56:	cmp    DWORD PTR [rbx+0x10],0x0
   140008b5a:	jl     0x140008b95
   140008b5c:	mov    rax,QWORD PTR [rbx]
   140008b5f:	cmp    QWORD PTR [rcx],rax
   140008b62:	jne    0x140008b95
   140008b64:	call   0x140002da0
   140008b69:	mov    rsi,rax
   140008b6c:	mov    ecx,edi
   140008b6e:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008b73:	add    ecx,0xffffffff
   140008b76:	test   ecx,ecx
   140008b78:	jg     0x140008b87
   140008b7a:	mov    rcx,QWORD PTR [rbx]
   140008b7d:	mov    r8,QWORD PTR [rcx]
   140008b80:	mov    rdx,rbx
   140008b83:	call   QWORD PTR [r8+0x8]
   140008b87:	lea    rax,[rsi+0x18]
   140008b8b:	mov    QWORD PTR [rsp+0x148],rax
   140008b93:	jmp    0x140008ba7
   140008b95:	mov    r8d,DWORD PTR [rdx-0x10]
   140008b99:	lea    rcx,[rsp+0x148]
   140008ba1:	call   0x1400037d0
   140008ba6:	nop
   140008ba7:	mov    rdx,QWORD PTR [rsp+0x58]
   140008bac:	add    rdx,0xffffffffffffffe8
   140008bb0:	mov    eax,edi
   140008bb2:	lock xadd DWORD PTR [rdx+0x10],eax
   140008bb7:	add    eax,0xffffffff
   140008bba:	test   eax,eax
   140008bbc:	jg     0x140008bc7
   140008bbe:	mov    rcx,QWORD PTR [rdx]
   140008bc1:	mov    rax,QWORD PTR [rcx]
   140008bc4:	call   QWORD PTR [rax+0x8]
   140008bc7:	mov    rbx,QWORD PTR [rsp+0x148]
   140008bcf:	mov    rdx,rbx
   140008bd2:	mov    rcx,r12
   140008bd5:	call   QWORD PTR [rip+0x5bbb5]        # 0x140064790
   140008bdb:	lea    r8,[rip+0x5d726]        # 0x140066308
   140008be2:	lea    rdx,[rsp+0x150]
   140008bea:	lea    rcx,[rsp+0xd8]
   140008bf2:	call   0x140003f80
   140008bf7:	nop
   140008bf8:	mov    rdx,QWORD PTR [rax]
   140008bfb:	lea    rcx,[rdx-0x18]
   140008bff:	add    rbx,0xffffffffffffffe8
   140008c03:	cmp    rcx,rbx
   140008c06:	je     0x140008c59
   140008c08:	cmp    DWORD PTR [rbx+0x10],0x0
   140008c0c:	jl     0x140008c47
   140008c0e:	mov    rax,QWORD PTR [rbx]
   140008c11:	cmp    QWORD PTR [rcx],rax
   140008c14:	jne    0x140008c47
   140008c16:	call   0x140002da0
   140008c1b:	mov    rsi,rax
   140008c1e:	mov    ecx,edi
   140008c20:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008c25:	add    ecx,0xffffffff
   140008c28:	test   ecx,ecx
   140008c2a:	jg     0x140008c39
   140008c2c:	mov    rcx,QWORD PTR [rbx]
   140008c2f:	mov    r8,QWORD PTR [rcx]
   140008c32:	mov    rdx,rbx
   140008c35:	call   QWORD PTR [r8+0x8]
   140008c39:	lea    rax,[rsi+0x18]
   140008c3d:	mov    QWORD PTR [rsp+0x148],rax
   140008c45:	jmp    0x140008c59
   140008c47:	mov    r8d,DWORD PTR [rdx-0x10]
   140008c4b:	lea    rcx,[rsp+0x148]
   140008c53:	call   0x1400037d0
   140008c58:	nop
   140008c59:	mov    rdx,QWORD PTR [rsp+0xd8]
   140008c61:	add    rdx,0xffffffffffffffe8
   140008c65:	mov    eax,edi
   140008c67:	lock xadd DWORD PTR [rdx+0x10],eax
   140008c6c:	add    eax,0xffffffff
   140008c6f:	test   eax,eax
   140008c71:	jg     0x140008c7c
   140008c73:	mov    rcx,QWORD PTR [rdx]
   140008c76:	mov    rax,QWORD PTR [rcx]
   140008c79:	call   QWORD PTR [rax+0x8]
   140008c7c:	mov    rbx,QWORD PTR [rsp+0x148]
   140008c84:	mov    rdx,rbx
   140008c87:	mov    rcx,r12
   140008c8a:	call   QWORD PTR [rip+0x5bb00]        # 0x140064790
   140008c90:	lea    r8,[rip+0x5d669]        # 0x140066300
   140008c97:	lea    rdx,[rsp+0x150]
   140008c9f:	lea    rcx,[rsp+0x68]
   140008ca4:	call   0x140003f80
   140008ca9:	nop
   140008caa:	mov    rdx,QWORD PTR [rax]
   140008cad:	lea    rcx,[rdx-0x18]
   140008cb1:	add    rbx,0xffffffffffffffe8
   140008cb5:	cmp    rcx,rbx
   140008cb8:	je     0x140008d0b
   140008cba:	cmp    DWORD PTR [rbx+0x10],0x0
   140008cbe:	jl     0x140008cf9
   140008cc0:	mov    rax,QWORD PTR [rbx]
   140008cc3:	cmp    QWORD PTR [rcx],rax
   140008cc6:	jne    0x140008cf9
   140008cc8:	call   0x140002da0
   140008ccd:	mov    rsi,rax
   140008cd0:	mov    ecx,edi
   140008cd2:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008cd7:	add    ecx,0xffffffff
   140008cda:	test   ecx,ecx
   140008cdc:	jg     0x140008ceb
   140008cde:	mov    rcx,QWORD PTR [rbx]
   140008ce1:	mov    r8,QWORD PTR [rcx]
   140008ce4:	mov    rdx,rbx
   140008ce7:	call   QWORD PTR [r8+0x8]
   140008ceb:	lea    rax,[rsi+0x18]
   140008cef:	mov    QWORD PTR [rsp+0x148],rax
   140008cf7:	jmp    0x140008d0b
   140008cf9:	mov    r8d,DWORD PTR [rdx-0x10]
   140008cfd:	lea    rcx,[rsp+0x148]
   140008d05:	call   0x1400037d0
   140008d0a:	nop
   140008d0b:	mov    rdx,QWORD PTR [rsp+0x68]
   140008d10:	add    rdx,0xffffffffffffffe8
   140008d14:	mov    eax,edi
   140008d16:	lock xadd DWORD PTR [rdx+0x10],eax
   140008d1b:	add    eax,0xffffffff
   140008d1e:	test   eax,eax
   140008d20:	jg     0x140008d2b
   140008d22:	mov    rcx,QWORD PTR [rdx]
   140008d25:	mov    rax,QWORD PTR [rcx]
   140008d28:	call   QWORD PTR [rax+0x8]
   140008d2b:	mov    rbx,QWORD PTR [rsp+0x148]
   140008d33:	mov    rdx,rbx
   140008d36:	mov    rcx,r12
   140008d39:	call   QWORD PTR [rip+0x5ba51]        # 0x140064790
   140008d3f:	lea    r8,[rip+0x5d5aa]        # 0x1400662f0
   140008d46:	lea    rdx,[rsp+0x150]
   140008d4e:	lea    rcx,[rsp+0xb8]
   140008d56:	call   0x140003f80
   140008d5b:	nop
   140008d5c:	mov    rdx,QWORD PTR [rax]
   140008d5f:	lea    rcx,[rdx-0x18]
   140008d63:	add    rbx,0xffffffffffffffe8
   140008d67:	cmp    rcx,rbx
   140008d6a:	je     0x140008dbd
   140008d6c:	cmp    DWORD PTR [rbx+0x10],0x0
   140008d70:	jl     0x140008dab
   140008d72:	mov    rax,QWORD PTR [rbx]
   140008d75:	cmp    QWORD PTR [rcx],rax
   140008d78:	jne    0x140008dab
   140008d7a:	call   0x140002da0
   140008d7f:	mov    rsi,rax
   140008d82:	mov    ecx,edi
   140008d84:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008d89:	add    ecx,0xffffffff
   140008d8c:	test   ecx,ecx
   140008d8e:	jg     0x140008d9d
   140008d90:	mov    rcx,QWORD PTR [rbx]
   140008d93:	mov    r8,QWORD PTR [rcx]
   140008d96:	mov    rdx,rbx
   140008d99:	call   QWORD PTR [r8+0x8]
   140008d9d:	lea    rax,[rsi+0x18]
   140008da1:	mov    QWORD PTR [rsp+0x148],rax
   140008da9:	jmp    0x140008dbd
   140008dab:	mov    r8d,DWORD PTR [rdx-0x10]
   140008daf:	lea    rcx,[rsp+0x148]
   140008db7:	call   0x1400037d0
   140008dbc:	nop
   140008dbd:	mov    rdx,QWORD PTR [rsp+0xb8]
   140008dc5:	add    rdx,0xffffffffffffffe8
   140008dc9:	mov    eax,edi
   140008dcb:	lock xadd DWORD PTR [rdx+0x10],eax
   140008dd0:	add    eax,0xffffffff
   140008dd3:	test   eax,eax
   140008dd5:	jg     0x140008de0
   140008dd7:	mov    rcx,QWORD PTR [rdx]
   140008dda:	mov    rax,QWORD PTR [rcx]
   140008ddd:	call   QWORD PTR [rax+0x8]
   140008de0:	mov    rbx,QWORD PTR [rsp+0x148]
   140008de8:	mov    rdx,rbx
   140008deb:	mov    rcx,r12
   140008dee:	call   QWORD PTR [rip+0x5b99c]        # 0x140064790
   140008df4:	lea    r8,[rip+0x5d4dd]        # 0x1400662d8
   140008dfb:	lea    rdx,[rsp+0x150]
   140008e03:	lea    rcx,[rsp+0x78]
   140008e08:	call   0x140003f80
   140008e0d:	nop
   140008e0e:	mov    rdx,QWORD PTR [rax]
   140008e11:	lea    rcx,[rdx-0x18]
   140008e15:	add    rbx,0xffffffffffffffe8
   140008e19:	cmp    rcx,rbx
   140008e1c:	je     0x140008e6f
   140008e1e:	cmp    DWORD PTR [rbx+0x10],0x0
   140008e22:	jl     0x140008e5d
   140008e24:	mov    rax,QWORD PTR [rbx]
   140008e27:	cmp    QWORD PTR [rcx],rax
   140008e2a:	jne    0x140008e5d
   140008e2c:	call   0x140002da0
   140008e31:	mov    rsi,rax
   140008e34:	mov    ecx,edi
   140008e36:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008e3b:	add    ecx,0xffffffff
   140008e3e:	test   ecx,ecx
   140008e40:	jg     0x140008e4f
   140008e42:	mov    rcx,QWORD PTR [rbx]
   140008e45:	mov    r8,QWORD PTR [rcx]
   140008e48:	mov    rdx,rbx
   140008e4b:	call   QWORD PTR [r8+0x8]
   140008e4f:	lea    rax,[rsi+0x18]
   140008e53:	mov    QWORD PTR [rsp+0x148],rax
   140008e5b:	jmp    0x140008e6f
   140008e5d:	mov    r8d,DWORD PTR [rdx-0x10]
   140008e61:	lea    rcx,[rsp+0x148]
   140008e69:	call   0x1400037d0
   140008e6e:	nop
   140008e6f:	mov    rdx,QWORD PTR [rsp+0x78]
   140008e74:	add    rdx,0xffffffffffffffe8
   140008e78:	mov    eax,edi
   140008e7a:	lock xadd DWORD PTR [rdx+0x10],eax
   140008e7f:	add    eax,0xffffffff
   140008e82:	test   eax,eax
   140008e84:	jg     0x140008e8f
   140008e86:	mov    rcx,QWORD PTR [rdx]
   140008e89:	mov    rax,QWORD PTR [rcx]
   140008e8c:	call   QWORD PTR [rax+0x8]
   140008e8f:	mov    rbx,QWORD PTR [rsp+0x148]
   140008e97:	mov    rdx,rbx
   140008e9a:	mov    rcx,r12
   140008e9d:	call   QWORD PTR [rip+0x5b8ed]        # 0x140064790
   140008ea3:	lea    r8,[rip+0x5d416]        # 0x1400662c0
   140008eaa:	lea    rdx,[rsp+0x150]
   140008eb2:	lea    rcx,[rsp+0xf8]
   140008eba:	call   0x140003f80
   140008ebf:	nop
   140008ec0:	mov    rdx,QWORD PTR [rax]
   140008ec3:	lea    rcx,[rdx-0x18]
   140008ec7:	add    rbx,0xffffffffffffffe8
   140008ecb:	cmp    rcx,rbx
   140008ece:	je     0x140008f21
   140008ed0:	cmp    DWORD PTR [rbx+0x10],0x0
   140008ed4:	jl     0x140008f0f
   140008ed6:	mov    rax,QWORD PTR [rbx]
   140008ed9:	cmp    QWORD PTR [rcx],rax
   140008edc:	jne    0x140008f0f
   140008ede:	call   0x140002da0
   140008ee3:	mov    rsi,rax
   140008ee6:	mov    ecx,edi
   140008ee8:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008eed:	add    ecx,0xffffffff
   140008ef0:	test   ecx,ecx
   140008ef2:	jg     0x140008f01
   140008ef4:	mov    rcx,QWORD PTR [rbx]
   140008ef7:	mov    r8,QWORD PTR [rcx]
   140008efa:	mov    rdx,rbx
   140008efd:	call   QWORD PTR [r8+0x8]
   140008f01:	lea    rax,[rsi+0x18]
   140008f05:	mov    QWORD PTR [rsp+0x148],rax
   140008f0d:	jmp    0x140008f21
   140008f0f:	mov    r8d,DWORD PTR [rdx-0x10]
   140008f13:	lea    rcx,[rsp+0x148]
   140008f1b:	call   0x1400037d0
   140008f20:	nop
   140008f21:	mov    rdx,QWORD PTR [rsp+0xf8]
   140008f29:	add    rdx,0xffffffffffffffe8
   140008f2d:	mov    eax,edi
   140008f2f:	lock xadd DWORD PTR [rdx+0x10],eax
   140008f34:	add    eax,0xffffffff
   140008f37:	test   eax,eax
   140008f39:	jg     0x140008f44
   140008f3b:	mov    rcx,QWORD PTR [rdx]
   140008f3e:	mov    rax,QWORD PTR [rcx]
   140008f41:	call   QWORD PTR [rax+0x8]
   140008f44:	mov    rbx,QWORD PTR [rsp+0x148]
   140008f4c:	mov    rdx,rbx
   140008f4f:	mov    rcx,r12
   140008f52:	call   QWORD PTR [rip+0x5b838]        # 0x140064790
   140008f58:	lea    r8,[rip+0x5d349]        # 0x1400662a8
   140008f5f:	lea    rdx,[rsp+0x150]
   140008f67:	lea    rcx,[rsp+0x88]
   140008f6f:	call   0x140003f80
   140008f74:	nop
   140008f75:	mov    rdx,QWORD PTR [rax]
   140008f78:	lea    rcx,[rdx-0x18]
   140008f7c:	add    rbx,0xffffffffffffffe8
   140008f80:	cmp    rcx,rbx
   140008f83:	je     0x140008fd6
   140008f85:	cmp    DWORD PTR [rbx+0x10],0x0
   140008f89:	jl     0x140008fc4
   140008f8b:	mov    rax,QWORD PTR [rbx]
   140008f8e:	cmp    QWORD PTR [rcx],rax
   140008f91:	jne    0x140008fc4
   140008f93:	call   0x140002da0
   140008f98:	mov    rsi,rax
   140008f9b:	mov    ecx,edi
   140008f9d:	lock xadd DWORD PTR [rbx+0x10],ecx
   140008fa2:	add    ecx,0xffffffff
   140008fa5:	test   ecx,ecx
   140008fa7:	jg     0x140008fb6
   140008fa9:	mov    rcx,QWORD PTR [rbx]
   140008fac:	mov    r8,QWORD PTR [rcx]
   140008faf:	mov    rdx,rbx
   140008fb2:	call   QWORD PTR [r8+0x8]
   140008fb6:	lea    rax,[rsi+0x18]
   140008fba:	mov    QWORD PTR [rsp+0x148],rax
   140008fc2:	jmp    0x140008fd6
   140008fc4:	mov    r8d,DWORD PTR [rdx-0x10]
   140008fc8:	lea    rcx,[rsp+0x148]
   140008fd0:	call   0x1400037d0
   140008fd5:	nop
   140008fd6:	mov    rdx,QWORD PTR [rsp+0x88]
   140008fde:	add    rdx,0xffffffffffffffe8
   140008fe2:	mov    eax,edi
   140008fe4:	lock xadd DWORD PTR [rdx+0x10],eax
   140008fe9:	add    eax,0xffffffff
   140008fec:	test   eax,eax
   140008fee:	jg     0x140008ff9
   140008ff0:	mov    rcx,QWORD PTR [rdx]
   140008ff3:	mov    rax,QWORD PTR [rcx]
   140008ff6:	call   QWORD PTR [rax+0x8]
   140008ff9:	mov    rbx,QWORD PTR [rsp+0x148]
   140009001:	mov    rdx,rbx
   140009004:	mov    rcx,r12
   140009007:	call   QWORD PTR [rip+0x5b783]        # 0x140064790
   14000900d:	lea    r8,[rip+0x5d27c]        # 0x140066290
   140009014:	lea    rdx,[rsp+0x150]
   14000901c:	lea    rcx,[rsp+0xc8]
   140009024:	call   0x140003f80
   140009029:	nop
   14000902a:	mov    rdx,QWORD PTR [rax]
   14000902d:	lea    rcx,[rdx-0x18]
   140009031:	add    rbx,0xffffffffffffffe8
   140009035:	cmp    rcx,rbx
   140009038:	je     0x14000908b
   14000903a:	cmp    DWORD PTR [rbx+0x10],0x0
   14000903e:	jl     0x140009079
   140009040:	mov    rax,QWORD PTR [rbx]
   140009043:	cmp    QWORD PTR [rcx],rax
   140009046:	jne    0x140009079
   140009048:	call   0x140002da0
   14000904d:	mov    rsi,rax
   140009050:	mov    ecx,edi
   140009052:	lock xadd DWORD PTR [rbx+0x10],ecx
   140009057:	add    ecx,0xffffffff
   14000905a:	test   ecx,ecx
   14000905c:	jg     0x14000906b
   14000905e:	mov    rcx,QWORD PTR [rbx]
   140009061:	mov    r8,QWORD PTR [rcx]
   140009064:	mov    rdx,rbx
   140009067:	call   QWORD PTR [r8+0x8]
   14000906b:	lea    rax,[rsi+0x18]
   14000906f:	mov    QWORD PTR [rsp+0x148],rax
   140009077:	jmp    0x14000908b
   140009079:	mov    r8d,DWORD PTR [rdx-0x10]
   14000907d:	lea    rcx,[rsp+0x148]
   140009085:	call   0x1400037d0
   14000908a:	nop
   14000908b:	mov    rdx,QWORD PTR [rsp+0xc8]
   140009093:	add    rdx,0xffffffffffffffe8
   140009097:	mov    eax,edi
   140009099:	lock xadd DWORD PTR [rdx+0x10],eax
   14000909e:	add    eax,0xffffffff
   1400090a1:	test   eax,eax
   1400090a3:	jg     0x1400090ae
   1400090a5:	mov    rcx,QWORD PTR [rdx]
   1400090a8:	mov    rax,QWORD PTR [rcx]
   1400090ab:	call   QWORD PTR [rax+0x8]
   1400090ae:	mov    rbx,QWORD PTR [rsp+0x148]
   1400090b6:	mov    rdx,rbx
   1400090b9:	mov    rcx,r12
   1400090bc:	call   QWORD PTR [rip+0x5b6ce]        # 0x140064790
   1400090c2:	lea    r8,[rip+0x5d1af]        # 0x140066278
   1400090c9:	lea    rdx,[rsp+0x150]
   1400090d1:	lea    rcx,[rsp+0x98]
   1400090d9:	call   0x140003f80
   1400090de:	nop
   1400090df:	mov    rdx,QWORD PTR [rax]
   1400090e2:	lea    rcx,[rdx-0x18]
   1400090e6:	add    rbx,0xffffffffffffffe8
   1400090ea:	cmp    rcx,rbx
   1400090ed:	je     0x140009140
   1400090ef:	cmp    DWORD PTR [rbx+0x10],0x0
   1400090f3:	jl     0x14000912e
   1400090f5:	mov    rax,QWORD PTR [rbx]
   1400090f8:	cmp    QWORD PTR [rcx],rax
   1400090fb:	jne    0x14000912e
   1400090fd:	call   0x140002da0
   140009102:	mov    rsi,rax
   140009105:	mov    ecx,edi
   140009107:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000910c:	add    ecx,0xffffffff
   14000910f:	test   ecx,ecx
   140009111:	jg     0x140009120
   140009113:	mov    rcx,QWORD PTR [rbx]
   140009116:	mov    r8,QWORD PTR [rcx]
   140009119:	mov    rdx,rbx
   14000911c:	call   QWORD PTR [r8+0x8]
   140009120:	lea    rax,[rsi+0x18]
   140009124:	mov    QWORD PTR [rsp+0x148],rax
   14000912c:	jmp    0x140009140
   14000912e:	mov    r8d,DWORD PTR [rdx-0x10]
   140009132:	lea    rcx,[rsp+0x148]
   14000913a:	call   0x1400037d0
   14000913f:	nop
   140009140:	mov    rdx,QWORD PTR [rsp+0x98]
   140009148:	add    rdx,0xffffffffffffffe8
   14000914c:	mov    eax,edi
   14000914e:	lock xadd DWORD PTR [rdx+0x10],eax
   140009153:	add    eax,0xffffffff
   140009156:	test   eax,eax
   140009158:	jg     0x140009163
   14000915a:	mov    rcx,QWORD PTR [rdx]
   14000915d:	mov    rax,QWORD PTR [rcx]
   140009160:	call   QWORD PTR [rax+0x8]
   140009163:	mov    rbx,QWORD PTR [rsp+0x148]
   14000916b:	mov    rdx,rbx
   14000916e:	mov    rcx,r12
   140009171:	call   QWORD PTR [rip+0x5b619]        # 0x140064790
   140009177:	lea    r8,[rip+0x5d0ea]        # 0x140066268
   14000917e:	lea    rdx,[rsp+0x150]
   140009186:	lea    rcx,[rsp+0x30]
   14000918b:	call   0x140003f80
   140009190:	nop
   140009191:	mov    rdx,QWORD PTR [rax]
   140009194:	lea    rcx,[rdx-0x18]
   140009198:	add    rbx,0xffffffffffffffe8
   14000919c:	cmp    rcx,rbx
   14000919f:	je     0x1400091f2
   1400091a1:	cmp    DWORD PTR [rbx+0x10],0x0
   1400091a5:	jl     0x1400091e0
   1400091a7:	mov    rax,QWORD PTR [rbx]
   1400091aa:	cmp    QWORD PTR [rcx],rax
   1400091ad:	jne    0x1400091e0
   1400091af:	call   0x140002da0
   1400091b4:	mov    rsi,rax
   1400091b7:	mov    ecx,edi
   1400091b9:	lock xadd DWORD PTR [rbx+0x10],ecx
   1400091be:	add    ecx,0xffffffff
   1400091c1:	test   ecx,ecx
   1400091c3:	jg     0x1400091d2
   1400091c5:	mov    rcx,QWORD PTR [rbx]
   1400091c8:	mov    r8,QWORD PTR [rcx]
   1400091cb:	mov    rdx,rbx
   1400091ce:	call   QWORD PTR [r8+0x8]
   1400091d2:	lea    rax,[rsi+0x18]
   1400091d6:	mov    QWORD PTR [rsp+0x148],rax
   1400091de:	jmp    0x1400091f2
   1400091e0:	mov    r8d,DWORD PTR [rdx-0x10]
   1400091e4:	lea    rcx,[rsp+0x148]
   1400091ec:	call   0x1400037d0
   1400091f1:	nop
   1400091f2:	mov    rdx,QWORD PTR [rsp+0x30]
   1400091f7:	add    rdx,0xffffffffffffffe8
   1400091fb:	mov    eax,edi
   1400091fd:	lock xadd DWORD PTR [rdx+0x10],eax
   140009202:	add    eax,0xffffffff
   140009205:	test   eax,eax
   140009207:	jg     0x140009212
   140009209:	mov    rcx,QWORD PTR [rdx]
   14000920c:	mov    rax,QWORD PTR [rcx]
   14000920f:	call   QWORD PTR [rax+0x8]
   140009212:	mov    rbx,QWORD PTR [rsp+0x148]
   14000921a:	mov    rdx,rbx
   14000921d:	mov    rcx,r12
   140009220:	call   QWORD PTR [rip+0x5b56a]        # 0x140064790
   140009226:	lea    r8,[rip+0x5d02b]        # 0x140066258
   14000922d:	lea    rdx,[rsp+0x150]
   140009235:	lea    rcx,[rsp+0x40]
   14000923a:	call   0x140003f80
   14000923f:	nop
   140009240:	mov    rdx,QWORD PTR [rax]
   140009243:	lea    rcx,[rdx-0x18]
   140009247:	add    rbx,0xffffffffffffffe8
   14000924b:	cmp    rcx,rbx
   14000924e:	je     0x1400092a1
   140009250:	cmp    DWORD PTR [rbx+0x10],0x0
   140009254:	jl     0x14000928f
   140009256:	mov    rax,QWORD PTR [rbx]
   140009259:	cmp    QWORD PTR [rcx],rax
   14000925c:	jne    0x14000928f
   14000925e:	call   0x140002da0
   140009263:	mov    rsi,rax
   140009266:	mov    ecx,edi
   140009268:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000926d:	add    ecx,0xffffffff
   140009270:	test   ecx,ecx
   140009272:	jg     0x140009281
   140009274:	mov    rcx,QWORD PTR [rbx]
   140009277:	mov    r8,QWORD PTR [rcx]
   14000927a:	mov    rdx,rbx
   14000927d:	call   QWORD PTR [r8+0x8]
   140009281:	lea    rax,[rsi+0x18]
   140009285:	mov    QWORD PTR [rsp+0x148],rax
   14000928d:	jmp    0x1400092a1
   14000928f:	mov    r8d,DWORD PTR [rdx-0x10]
   140009293:	lea    rcx,[rsp+0x148]
   14000929b:	call   0x1400037d0
   1400092a0:	nop
   1400092a1:	mov    rdx,QWORD PTR [rsp+0x40]
   1400092a6:	add    rdx,0xffffffffffffffe8
   1400092aa:	mov    eax,edi
   1400092ac:	lock xadd DWORD PTR [rdx+0x10],eax
   1400092b1:	add    eax,0xffffffff
   1400092b4:	test   eax,eax
   1400092b6:	jg     0x1400092c1
   1400092b8:	mov    rcx,QWORD PTR [rdx]
   1400092bb:	mov    rax,QWORD PTR [rcx]
   1400092be:	call   QWORD PTR [rax+0x8]
   1400092c1:	mov    rbx,QWORD PTR [rsp+0x148]
   1400092c9:	mov    rdx,rbx
   1400092cc:	mov    rcx,r12
   1400092cf:	call   QWORD PTR [rip+0x5b4bb]        # 0x140064790
   1400092d5:	lea    r8,[rip+0x5cf64]        # 0x140066240
   1400092dc:	lea    rdx,[rsp+0x150]
   1400092e4:	lea    rcx,[rsp+0x50]
   1400092e9:	call   0x140003f80
   1400092ee:	nop
   1400092ef:	mov    rdx,QWORD PTR [rax]
   1400092f2:	lea    rcx,[rdx-0x18]
   1400092f6:	add    rbx,0xffffffffffffffe8
   1400092fa:	cmp    rcx,rbx
   1400092fd:	je     0x140009350
   1400092ff:	cmp    DWORD PTR [rbx+0x10],0x0
   140009303:	jl     0x14000933e
   140009305:	mov    rax,QWORD PTR [rbx]
   140009308:	cmp    QWORD PTR [rcx],rax
   14000930b:	jne    0x14000933e
   14000930d:	call   0x140002da0
   140009312:	mov    rsi,rax
   140009315:	mov    ecx,edi
   140009317:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000931c:	add    ecx,0xffffffff
   14000931f:	test   ecx,ecx
   140009321:	jg     0x140009330
   140009323:	mov    rcx,QWORD PTR [rbx]
   140009326:	mov    r8,QWORD PTR [rcx]
   140009329:	mov    rdx,rbx
   14000932c:	call   QWORD PTR [r8+0x8]
   140009330:	lea    rax,[rsi+0x18]
   140009334:	mov    QWORD PTR [rsp+0x148],rax
   14000933c:	jmp    0x140009350
   14000933e:	mov    r8d,DWORD PTR [rdx-0x10]
   140009342:	lea    rcx,[rsp+0x148]
   14000934a:	call   0x1400037d0
   14000934f:	nop
   140009350:	mov    rdx,QWORD PTR [rsp+0x50]
   140009355:	add    rdx,0xffffffffffffffe8
   140009359:	mov    eax,edi
   14000935b:	lock xadd DWORD PTR [rdx+0x10],eax
   140009360:	add    eax,0xffffffff
   140009363:	test   eax,eax
   140009365:	jg     0x140009370
   140009367:	mov    rcx,QWORD PTR [rdx]
   14000936a:	mov    rax,QWORD PTR [rcx]
   14000936d:	call   QWORD PTR [rax+0x8]
   140009370:	mov    rbx,QWORD PTR [rsp+0x148]
   140009378:	mov    rdx,rbx
   14000937b:	mov    rcx,r12
   14000937e:	call   QWORD PTR [rip+0x5b40c]        # 0x140064790
   140009384:	lea    r8,[rip+0x5cea5]        # 0x140066230
   14000938b:	lea    rdx,[rsp+0x150]
   140009393:	lea    rcx,[rsp+0x60]
   140009398:	call   0x140003f80
   14000939d:	nop
   14000939e:	mov    rdx,QWORD PTR [rax]
   1400093a1:	lea    rcx,[rdx-0x18]
   1400093a5:	add    rbx,0xffffffffffffffe8
   1400093a9:	cmp    rcx,rbx
   1400093ac:	je     0x1400093ff
   1400093ae:	cmp    DWORD PTR [rbx+0x10],0x0
   1400093b2:	jl     0x1400093ed
   1400093b4:	mov    rax,QWORD PTR [rbx]
   1400093b7:	cmp    QWORD PTR [rcx],rax
   1400093ba:	jne    0x1400093ed
   1400093bc:	call   0x140002da0
   1400093c1:	mov    rsi,rax
   1400093c4:	mov    ecx,edi
   1400093c6:	lock xadd DWORD PTR [rbx+0x10],ecx
   1400093cb:	add    ecx,0xffffffff
   1400093ce:	test   ecx,ecx
   1400093d0:	jg     0x1400093df
   1400093d2:	mov    rcx,QWORD PTR [rbx]
   1400093d5:	mov    r8,QWORD PTR [rcx]
   1400093d8:	mov    rdx,rbx
   1400093db:	call   QWORD PTR [r8+0x8]
   1400093df:	lea    rax,[rsi+0x18]
   1400093e3:	mov    QWORD PTR [rsp+0x148],rax
   1400093eb:	jmp    0x1400093ff
   1400093ed:	mov    r8d,DWORD PTR [rdx-0x10]
   1400093f1:	lea    rcx,[rsp+0x148]
   1400093f9:	call   0x1400037d0
   1400093fe:	nop
   1400093ff:	mov    rdx,QWORD PTR [rsp+0x60]
   140009404:	add    rdx,0xffffffffffffffe8
   140009408:	mov    eax,edi
   14000940a:	lock xadd DWORD PTR [rdx+0x10],eax
   14000940f:	add    eax,0xffffffff
   140009412:	test   eax,eax
   140009414:	jg     0x14000941f
   140009416:	mov    rcx,QWORD PTR [rdx]
   140009419:	mov    rax,QWORD PTR [rcx]
   14000941c:	call   QWORD PTR [rax+0x8]
   14000941f:	mov    rbx,QWORD PTR [rsp+0x148]
   140009427:	mov    rdx,rbx
   14000942a:	mov    rcx,r12
   14000942d:	call   QWORD PTR [rip+0x5b35d]        # 0x140064790
   140009433:	lea    r8,[rip+0x5cdde]        # 0x140066218
   14000943a:	lea    rdx,[rsp+0x150]
   140009442:	lea    rcx,[rsp+0x70]
   140009447:	call   0x140003f80
   14000944c:	nop
   14000944d:	mov    rdx,QWORD PTR [rax]
   140009450:	lea    rcx,[rdx-0x18]
   140009454:	add    rbx,0xffffffffffffffe8
   140009458:	cmp    rcx,rbx
   14000945b:	je     0x1400094ae
   14000945d:	cmp    DWORD PTR [rbx+0x10],0x0
   140009461:	jl     0x14000949c
   140009463:	mov    rax,QWORD PTR [rbx]
   140009466:	cmp    QWORD PTR [rcx],rax
   140009469:	jne    0x14000949c
   14000946b:	call   0x140002da0
   140009470:	mov    rsi,rax
   140009473:	mov    ecx,edi
   140009475:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000947a:	add    ecx,0xffffffff
   14000947d:	test   ecx,ecx
   14000947f:	jg     0x14000948e
   140009481:	mov    rcx,QWORD PTR [rbx]
   140009484:	mov    r8,QWORD PTR [rcx]
   140009487:	mov    rdx,rbx
   14000948a:	call   QWORD PTR [r8+0x8]
   14000948e:	lea    rax,[rsi+0x18]
   140009492:	mov    QWORD PTR [rsp+0x148],rax
   14000949a:	jmp    0x1400094ae
   14000949c:	mov    r8d,DWORD PTR [rdx-0x10]
   1400094a0:	lea    rcx,[rsp+0x148]
   1400094a8:	call   0x1400037d0
   1400094ad:	nop
   1400094ae:	mov    rdx,QWORD PTR [rsp+0x70]
   1400094b3:	add    rdx,0xffffffffffffffe8
   1400094b7:	mov    eax,edi
   1400094b9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400094be:	add    eax,0xffffffff
   1400094c1:	test   eax,eax
   1400094c3:	jg     0x1400094ce
   1400094c5:	mov    rcx,QWORD PTR [rdx]
   1400094c8:	mov    rax,QWORD PTR [rcx]
   1400094cb:	call   QWORD PTR [rax+0x8]
   1400094ce:	mov    rbx,QWORD PTR [rsp+0x148]
   1400094d6:	mov    rdx,rbx
   1400094d9:	mov    rcx,r12
   1400094dc:	call   QWORD PTR [rip+0x5b2ae]        # 0x140064790
   1400094e2:	lea    r8,[rip+0x5cd17]        # 0x140066200
   1400094e9:	lea    rdx,[rsp+0x150]
   1400094f1:	lea    rcx,[rsp+0x80]
   1400094f9:	call   0x140003f80
   1400094fe:	nop
   1400094ff:	mov    rdx,QWORD PTR [rax]
   140009502:	lea    rcx,[rdx-0x18]
   140009506:	add    rbx,0xffffffffffffffe8
   14000950a:	cmp    rcx,rbx
   14000950d:	je     0x140009560
   14000950f:	cmp    DWORD PTR [rbx+0x10],0x0
   140009513:	jl     0x14000954e
   140009515:	mov    rax,QWORD PTR [rbx]
   140009518:	cmp    QWORD PTR [rcx],rax
   14000951b:	jne    0x14000954e
   14000951d:	call   0x140002da0
   140009522:	mov    rsi,rax
   140009525:	mov    ecx,edi
   140009527:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000952c:	add    ecx,0xffffffff
   14000952f:	test   ecx,ecx
   140009531:	jg     0x140009540
   140009533:	mov    rcx,QWORD PTR [rbx]
   140009536:	mov    r8,QWORD PTR [rcx]
   140009539:	mov    rdx,rbx
   14000953c:	call   QWORD PTR [r8+0x8]
   140009540:	lea    rax,[rsi+0x18]
   140009544:	mov    QWORD PTR [rsp+0x148],rax
   14000954c:	jmp    0x140009560
   14000954e:	mov    r8d,DWORD PTR [rdx-0x10]
   140009552:	lea    rcx,[rsp+0x148]
   14000955a:	call   0x1400037d0
   14000955f:	nop
   140009560:	mov    rdx,QWORD PTR [rsp+0x80]
   140009568:	add    rdx,0xffffffffffffffe8
   14000956c:	mov    eax,edi
   14000956e:	lock xadd DWORD PTR [rdx+0x10],eax
   140009573:	add    eax,0xffffffff
   140009576:	test   eax,eax
   140009578:	jg     0x140009583
   14000957a:	mov    rcx,QWORD PTR [rdx]
   14000957d:	mov    rax,QWORD PTR [rcx]
   140009580:	call   QWORD PTR [rax+0x8]
   140009583:	mov    rbx,QWORD PTR [rsp+0x148]
   14000958b:	mov    rdx,rbx
   14000958e:	mov    rcx,r12
   140009591:	call   QWORD PTR [rip+0x5b1f9]        # 0x140064790
   140009597:	lea    r8,[rip+0x5cc52]        # 0x1400661f0
   14000959e:	lea    rdx,[rsp+0x150]
   1400095a6:	lea    rcx,[rsp+0x90]
   1400095ae:	call   0x140003f80
   1400095b3:	nop
   1400095b4:	mov    rdx,QWORD PTR [rax]
   1400095b7:	lea    rcx,[rdx-0x18]
   1400095bb:	add    rbx,0xffffffffffffffe8
   1400095bf:	cmp    rcx,rbx
   1400095c2:	je     0x140009615
   1400095c4:	cmp    DWORD PTR [rbx+0x10],0x0
   1400095c8:	jl     0x140009603
   1400095ca:	mov    rax,QWORD PTR [rbx]
   1400095cd:	cmp    QWORD PTR [rcx],rax
   1400095d0:	jne    0x140009603
   1400095d2:	call   0x140002da0
   1400095d7:	mov    rsi,rax
   1400095da:	mov    ecx,edi
   1400095dc:	lock xadd DWORD PTR [rbx+0x10],ecx
   1400095e1:	add    ecx,0xffffffff
   1400095e4:	test   ecx,ecx
   1400095e6:	jg     0x1400095f5
   1400095e8:	mov    rcx,QWORD PTR [rbx]
   1400095eb:	mov    r8,QWORD PTR [rcx]
   1400095ee:	mov    rdx,rbx
   1400095f1:	call   QWORD PTR [r8+0x8]
   1400095f5:	lea    rax,[rsi+0x18]
   1400095f9:	mov    QWORD PTR [rsp+0x148],rax
   140009601:	jmp    0x140009615
   140009603:	mov    r8d,DWORD PTR [rdx-0x10]
   140009607:	lea    rcx,[rsp+0x148]
   14000960f:	call   0x1400037d0
   140009614:	nop
   140009615:	mov    rdx,QWORD PTR [rsp+0x90]
   14000961d:	add    rdx,0xffffffffffffffe8
   140009621:	mov    eax,edi
   140009623:	lock xadd DWORD PTR [rdx+0x10],eax
   140009628:	add    eax,0xffffffff
   14000962b:	test   eax,eax
   14000962d:	jg     0x140009638
   14000962f:	mov    rcx,QWORD PTR [rdx]
   140009632:	mov    rax,QWORD PTR [rcx]
   140009635:	call   QWORD PTR [rax+0x8]
   140009638:	mov    rbx,QWORD PTR [rsp+0x148]
   140009640:	mov    rdx,rbx
   140009643:	mov    rcx,r12
   140009646:	call   QWORD PTR [rip+0x5b144]        # 0x140064790
   14000964c:	lea    r8,[rip+0x5cb8d]        # 0x1400661e0
   140009653:	lea    rdx,[rsp+0x150]
   14000965b:	lea    rcx,[rsp+0xa0]
   140009663:	call   0x140003f80
   140009668:	nop
   140009669:	mov    rdx,QWORD PTR [rax]
   14000966c:	lea    rcx,[rdx-0x18]
   140009670:	add    rbx,0xffffffffffffffe8
   140009674:	cmp    rcx,rbx
   140009677:	je     0x1400096ca
   140009679:	cmp    DWORD PTR [rbx+0x10],0x0
   14000967d:	jl     0x1400096b8
   14000967f:	mov    rax,QWORD PTR [rbx]
   140009682:	cmp    QWORD PTR [rcx],rax
   140009685:	jne    0x1400096b8
   140009687:	call   0x140002da0
   14000968c:	mov    rsi,rax
   14000968f:	mov    ecx,edi
   140009691:	lock xadd DWORD PTR [rbx+0x10],ecx
   140009696:	add    ecx,0xffffffff
   140009699:	test   ecx,ecx
   14000969b:	jg     0x1400096aa
   14000969d:	mov    rcx,QWORD PTR [rbx]
   1400096a0:	mov    r8,QWORD PTR [rcx]
   1400096a3:	mov    rdx,rbx
   1400096a6:	call   QWORD PTR [r8+0x8]
   1400096aa:	lea    rax,[rsi+0x18]
   1400096ae:	mov    QWORD PTR [rsp+0x148],rax
   1400096b6:	jmp    0x1400096ca
   1400096b8:	mov    r8d,DWORD PTR [rdx-0x10]
   1400096bc:	lea    rcx,[rsp+0x148]
   1400096c4:	call   0x1400037d0
   1400096c9:	nop
   1400096ca:	mov    rdx,QWORD PTR [rsp+0xa0]
   1400096d2:	add    rdx,0xffffffffffffffe8
   1400096d6:	mov    eax,edi
   1400096d8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400096dd:	add    eax,0xffffffff
   1400096e0:	test   eax,eax
   1400096e2:	jg     0x1400096ed
   1400096e4:	mov    rcx,QWORD PTR [rdx]
   1400096e7:	mov    rax,QWORD PTR [rcx]
   1400096ea:	call   QWORD PTR [rax+0x8]
   1400096ed:	mov    rbx,QWORD PTR [rsp+0x148]
   1400096f5:	mov    rdx,rbx
   1400096f8:	mov    rcx,r12
   1400096fb:	call   QWORD PTR [rip+0x5b08f]        # 0x140064790
   140009701:	lea    r8,[rip+0x5cac0]        # 0x1400661c8
   140009708:	lea    rdx,[rsp+0x150]
   140009710:	lea    rcx,[rsp+0xb0]
   140009718:	call   0x140003f80
   14000971d:	nop
   14000971e:	mov    rdx,QWORD PTR [rax]
   140009721:	lea    rcx,[rdx-0x18]
   140009725:	add    rbx,0xffffffffffffffe8
   140009729:	cmp    rcx,rbx
   14000972c:	je     0x14000977f
   14000972e:	cmp    DWORD PTR [rbx+0x10],0x0
   140009732:	jl     0x14000976d
   140009734:	mov    rax,QWORD PTR [rbx]
   140009737:	cmp    QWORD PTR [rcx],rax
   14000973a:	jne    0x14000976d
   14000973c:	call   0x140002da0
   140009741:	mov    rsi,rax
   140009744:	mov    ecx,edi
   140009746:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000974b:	add    ecx,0xffffffff
   14000974e:	test   ecx,ecx
   140009750:	jg     0x14000975f
   140009752:	mov    rcx,QWORD PTR [rbx]
   140009755:	mov    r8,QWORD PTR [rcx]
   140009758:	mov    rdx,rbx
   14000975b:	call   QWORD PTR [r8+0x8]
   14000975f:	lea    rax,[rsi+0x18]
   140009763:	mov    QWORD PTR [rsp+0x148],rax
   14000976b:	jmp    0x14000977f
   14000976d:	mov    r8d,DWORD PTR [rdx-0x10]
   140009771:	lea    rcx,[rsp+0x148]
   140009779:	call   0x1400037d0
   14000977e:	nop
   14000977f:	mov    rdx,QWORD PTR [rsp+0xb0]
   140009787:	add    rdx,0xffffffffffffffe8
   14000978b:	mov    eax,edi
   14000978d:	lock xadd DWORD PTR [rdx+0x10],eax
   140009792:	add    eax,0xffffffff
   140009795:	test   eax,eax
   140009797:	jg     0x1400097a2
   140009799:	mov    rcx,QWORD PTR [rdx]
   14000979c:	mov    rax,QWORD PTR [rcx]
   14000979f:	call   QWORD PTR [rax+0x8]
   1400097a2:	mov    rbx,QWORD PTR [rsp+0x148]
   1400097aa:	mov    rdx,rbx
   1400097ad:	mov    rcx,r12
   1400097b0:	call   QWORD PTR [rip+0x5afda]        # 0x140064790
   1400097b6:	lea    r8,[rip+0x5c9f3]        # 0x1400661b0
   1400097bd:	lea    rdx,[rsp+0x150]
   1400097c5:	lea    rcx,[rsp+0xc0]
   1400097cd:	call   0x140003f80
   1400097d2:	nop
   1400097d3:	mov    rdx,QWORD PTR [rax]
   1400097d6:	lea    rcx,[rdx-0x18]
   1400097da:	add    rbx,0xffffffffffffffe8
   1400097de:	cmp    rcx,rbx
   1400097e1:	je     0x140009834
   1400097e3:	cmp    DWORD PTR [rbx+0x10],0x0
   1400097e7:	jl     0x140009822
   1400097e9:	mov    rax,QWORD PTR [rbx]
   1400097ec:	cmp    QWORD PTR [rcx],rax
   1400097ef:	jne    0x140009822
   1400097f1:	call   0x140002da0
   1400097f6:	mov    rsi,rax
   1400097f9:	mov    ecx,edi
   1400097fb:	lock xadd DWORD PTR [rbx+0x10],ecx
   140009800:	add    ecx,0xffffffff
   140009803:	test   ecx,ecx
   140009805:	jg     0x140009814
   140009807:	mov    rcx,QWORD PTR [rbx]
   14000980a:	mov    r8,QWORD PTR [rcx]
   14000980d:	mov    rdx,rbx
   140009810:	call   QWORD PTR [r8+0x8]
   140009814:	lea    rax,[rsi+0x18]
   140009818:	mov    QWORD PTR [rsp+0x148],rax
   140009820:	jmp    0x140009834
   140009822:	mov    r8d,DWORD PTR [rdx-0x10]
   140009826:	lea    rcx,[rsp+0x148]
   14000982e:	call   0x1400037d0
   140009833:	nop
   140009834:	mov    rdx,QWORD PTR [rsp+0xc0]
   14000983c:	add    rdx,0xffffffffffffffe8
   140009840:	mov    eax,edi
   140009842:	lock xadd DWORD PTR [rdx+0x10],eax
   140009847:	add    eax,0xffffffff
   14000984a:	test   eax,eax
   14000984c:	jg     0x140009857
   14000984e:	mov    rcx,QWORD PTR [rdx]
   140009851:	mov    rax,QWORD PTR [rcx]
   140009854:	call   QWORD PTR [rax+0x8]
   140009857:	mov    rbx,QWORD PTR [rsp+0x148]
   14000985f:	mov    rdx,rbx
   140009862:	mov    rcx,r12
   140009865:	call   QWORD PTR [rip+0x5af25]        # 0x140064790
   14000986b:	lea    r8,[rip+0x5c92e]        # 0x1400661a0
   140009872:	lea    rdx,[rsp+0x150]
   14000987a:	lea    rcx,[rsp+0xd0]
   140009882:	call   0x140003f80
   140009887:	nop
   140009888:	mov    rdx,QWORD PTR [rax]
   14000988b:	lea    rcx,[rdx-0x18]
   14000988f:	add    rbx,0xffffffffffffffe8
   140009893:	cmp    rcx,rbx
   140009896:	je     0x1400098e9
   140009898:	cmp    DWORD PTR [rbx+0x10],0x0
   14000989c:	jl     0x1400098d7
   14000989e:	mov    rax,QWORD PTR [rbx]
   1400098a1:	cmp    QWORD PTR [rcx],rax
   1400098a4:	jne    0x1400098d7
   1400098a6:	call   0x140002da0
   1400098ab:	mov    rsi,rax
   1400098ae:	mov    ecx,edi
   1400098b0:	lock xadd DWORD PTR [rbx+0x10],ecx
   1400098b5:	add    ecx,0xffffffff
   1400098b8:	test   ecx,ecx
   1400098ba:	jg     0x1400098c9
   1400098bc:	mov    rcx,QWORD PTR [rbx]
   1400098bf:	mov    r8,QWORD PTR [rcx]
   1400098c2:	mov    rdx,rbx
   1400098c5:	call   QWORD PTR [r8+0x8]
   1400098c9:	lea    rax,[rsi+0x18]
   1400098cd:	mov    QWORD PTR [rsp+0x148],rax
   1400098d5:	jmp    0x1400098e9
   1400098d7:	mov    r8d,DWORD PTR [rdx-0x10]
   1400098db:	lea    rcx,[rsp+0x148]
   1400098e3:	call   0x1400037d0
   1400098e8:	nop
   1400098e9:	mov    rdx,QWORD PTR [rsp+0xd0]
   1400098f1:	add    rdx,0xffffffffffffffe8
   1400098f5:	mov    eax,edi
   1400098f7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400098fc:	add    eax,0xffffffff
   1400098ff:	test   eax,eax
   140009901:	jg     0x14000990c
   140009903:	mov    rcx,QWORD PTR [rdx]
   140009906:	mov    rax,QWORD PTR [rcx]
   140009909:	call   QWORD PTR [rax+0x8]
   14000990c:	mov    rbx,QWORD PTR [rsp+0x148]
   140009914:	mov    rdx,rbx
   140009917:	mov    rcx,r12
   14000991a:	call   QWORD PTR [rip+0x5ae70]        # 0x140064790
   140009920:	lea    r8,[rip+0x5c861]        # 0x140066188
   140009927:	lea    rdx,[rsp+0x150]
   14000992f:	lea    rcx,[rsp+0xe0]
   140009937:	call   0x140003f80
   14000993c:	nop
   14000993d:	mov    rdx,QWORD PTR [rax]
   140009940:	lea    rcx,[rdx-0x18]
   140009944:	add    rbx,0xffffffffffffffe8
   140009948:	cmp    rcx,rbx
   14000994b:	je     0x14000999e
   14000994d:	cmp    DWORD PTR [rbx+0x10],0x0
   140009951:	jl     0x14000998c
   140009953:	mov    rax,QWORD PTR [rbx]
   140009956:	cmp    QWORD PTR [rcx],rax
   140009959:	jne    0x14000998c
   14000995b:	call   0x140002da0
   140009960:	mov    rsi,rax
   140009963:	mov    ecx,edi
   140009965:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000996a:	add    ecx,0xffffffff
   14000996d:	test   ecx,ecx
   14000996f:	jg     0x14000997e
   140009971:	mov    rcx,QWORD PTR [rbx]
   140009974:	mov    r8,QWORD PTR [rcx]
   140009977:	mov    rdx,rbx
   14000997a:	call   QWORD PTR [r8+0x8]
   14000997e:	lea    rax,[rsi+0x18]
   140009982:	mov    QWORD PTR [rsp+0x148],rax
   14000998a:	jmp    0x14000999e
   14000998c:	mov    r8d,DWORD PTR [rdx-0x10]
   140009990:	lea    rcx,[rsp+0x148]
   140009998:	call   0x1400037d0
   14000999d:	nop
   14000999e:	mov    rdx,QWORD PTR [rsp+0xe0]
   1400099a6:	add    rdx,0xffffffffffffffe8
   1400099aa:	mov    eax,edi
   1400099ac:	lock xadd DWORD PTR [rdx+0x10],eax
   1400099b1:	add    eax,0xffffffff
   1400099b4:	test   eax,eax
   1400099b6:	jg     0x1400099c1
   1400099b8:	mov    rcx,QWORD PTR [rdx]
   1400099bb:	mov    rax,QWORD PTR [rcx]
   1400099be:	call   QWORD PTR [rax+0x8]
   1400099c1:	mov    rdx,QWORD PTR [rsp+0x148]
   1400099c9:	mov    rcx,r12
   1400099cc:	call   QWORD PTR [rip+0x5adbe]        # 0x140064790
   1400099d2:	mov    rbx,QWORD PTR [rsp+0x150]
   1400099da:	lea    rsi,[rbx-0x18]
   1400099de:	mov    rcx,QWORD PTR [rsi]
   1400099e1:	mov    rax,QWORD PTR [rcx]
   1400099e4:	call   QWORD PTR [rax+0x20]
   1400099e7:	mov    rcx,rax
   1400099ea:	cmp    DWORD PTR [rsi+0x10],0x0
   1400099ee:	jl     0x140009a07
   1400099f0:	cmp    rax,QWORD PTR [rsi]
   1400099f3:	jne    0x140009a07
   1400099f5:	mov    rbp,rsi
   1400099f8:	lock add DWORD PTR [rsi+0x10],0x1
   1400099fd:	mov    rbx,QWORD PTR [rsp+0x150]
   140009a05:	jmp    0x140009a46
   140009a07:	mov    rax,QWORD PTR [rax]
   140009a0a:	mov    r8d,0x2
   140009a10:	mov    edx,DWORD PTR [rsi+0x8]
   140009a13:	call   QWORD PTR [rax]
   140009a15:	mov    rbp,rax
   140009a18:	test   rax,rax
   140009a1b:	jne    0x140009a23
   140009a1d:	call   0x1400021a0
   140009a22:	int3   
   140009a23:	mov    eax,DWORD PTR [rsi+0x8]
   140009a26:	mov    DWORD PTR [rbp+0x8],eax
   140009a29:	mov    eax,DWORD PTR [rsi+0x8]
   140009a2c:	add    eax,0x1
   140009a2f:	movsxd rdx,eax
   140009a32:	lea    r9,[rdx+rdx*1]
   140009a36:	lea    r8,[rsi+0x18]
   140009a3a:	add    rdx,rdx
   140009a3d:	lea    rcx,[rbp+0x18]
   140009a41:	call   0x1400466d0
   140009a46:	lea    rax,[rbp+0x18]
   140009a4a:	mov    QWORD PTR [rsp+0xf0],rax
   140009a52:	lea    rdx,[rsp+0xf0]
   140009a5a:	mov    rcx,r12
   140009a5d:	call   0x140003040
   140009a62:	test   eax,eax
   140009a64:	je     0x140009a73
   140009a66:	mov    rdx,rbx
   140009a69:	mov    rcx,r12
   140009a6c:	call   QWORD PTR [rip+0x5ad1e]        # 0x140064790
   140009a72:	nop
   140009a73:	mov    eax,edi
   140009a75:	lock xadd DWORD PTR [rsi+0x10],eax
   140009a7a:	add    eax,0xffffffff
   140009a7d:	test   eax,eax
   140009a7f:	jg     0x140009a8e
   140009a81:	mov    rcx,QWORD PTR [rsi]
   140009a84:	mov    rax,QWORD PTR [rcx]
   140009a87:	mov    rdx,rsi
   140009a8a:	call   QWORD PTR [rax+0x8]
   140009a8d:	nop
   140009a8e:	mov    rdx,QWORD PTR [rsp+0x148]
   140009a96:	add    rdx,0xffffffffffffffe8
   140009a9a:	lock xadd DWORD PTR [rdx+0x10],edi
   140009a9f:	add    edi,0xffffffff
   140009aa2:	test   edi,edi
   140009aa4:	jg     0x140009aaf
   140009aa6:	mov    rcx,QWORD PTR [rdx]
   140009aa9:	mov    rax,QWORD PTR [rcx]
   140009aac:	call   QWORD PTR [rax+0x8]
   140009aaf:	add    rsp,0x110
   140009ab6:	pop    r12
   140009ab8:	pop    rdi
   140009ab9:	pop    rsi
   140009aba:	pop    rbp
   140009abb:	pop    rbx
   140009abc:	ret    
   140009abd:	int3   
   140009abe:	int3   
   140009abf:	int3   
   140009ac0:	rex push rbp
   140009ac2:	sub    rsp,0x20
   140009ac6:	mov    rbp,rdx
   140009ac9:	lea    rcx,[rbp+0x148]
   140009ad0:	call   0x1400010c0
   140009ad5:	add    rsp,0x20
   140009ad9:	pop    rbp
   140009ada:	ret    
   140009adb:	int3   
   140009adc:	int3   
   140009add:	int3   
   140009ade:	int3   
   140009adf:	int3   
   140009ae0:	rex push rbp
   140009ae2:	sub    rsp,0x20
   140009ae6:	mov    rbp,rdx
   140009ae9:	lea    rcx,[rbp+0x150]
   140009af0:	call   0x1400010c0
   140009af5:	add    rsp,0x20
   140009af9:	pop    rbp
   140009afa:	ret    
   140009afb:	int3   
   140009afc:	int3   
   140009afd:	int3   
   140009afe:	int3   
   140009aff:	int3   
   140009b00:	rex push rbp
   140009b02:	sub    rsp,0x20
   140009b06:	mov    rbp,rdx
   140009b09:	lea    rcx,[rbp+0x158]
   140009b10:	call   0x140001090
   140009b15:	add    rsp,0x20
   140009b19:	pop    rbp
   140009b1a:	ret    
   140009b1b:	int3   
   140009b1c:	int3   
   140009b1d:	int3   
   140009b1e:	int3   
   140009b1f:	int3   
   140009b20:	rex push rbp
   140009b22:	sub    rsp,0x20
   140009b26:	mov    rbp,rdx
   140009b29:	lea    rcx,[rbp+0x38]
   140009b2d:	call   0x1400010c0
   140009b32:	add    rsp,0x20
   140009b36:	pop    rbp
   140009b37:	ret    
   140009b38:	int3   
   140009b39:	int3   
   140009b3a:	int3   
   140009b3b:	int3   
   140009b3c:	int3   
   140009b3d:	int3   
   140009b3e:	int3   
   140009b3f:	int3   
   140009b40:	rex push rbp
   140009b42:	sub    rsp,0x20
   140009b46:	mov    rbp,rdx
   140009b49:	lea    rcx,[rbp+0xe8]
   140009b50:	call   0x1400010c0
   140009b55:	add    rsp,0x20
   140009b59:	pop    rbp
   140009b5a:	ret    
   140009b5b:	int3   
   140009b5c:	int3   
   140009b5d:	int3   
   140009b5e:	int3   
   140009b5f:	int3   
   140009b60:	rex push rbp
   140009b62:	sub    rsp,0x20
   140009b66:	mov    rbp,rdx
   140009b69:	lea    rcx,[rbp+0x48]
   140009b6d:	call   0x1400010c0
   140009b72:	add    rsp,0x20
   140009b76:	pop    rbp
   140009b77:	ret    
   140009b78:	int3   
   140009b79:	int3   
   140009b7a:	int3   
   140009b7b:	int3   
   140009b7c:	int3   
   140009b7d:	int3   
   140009b7e:	int3   
   140009b7f:	int3   
   140009b80:	rex push rbp
   140009b82:	sub    rsp,0x20
   140009b86:	mov    rbp,rdx
   140009b89:	lea    rcx,[rbp+0xa8]
   140009b90:	call   0x1400010c0
   140009b95:	add    rsp,0x20
   140009b99:	pop    rbp
   140009b9a:	ret    
   140009b9b:	int3   
   140009b9c:	int3   
   140009b9d:	int3   
   140009b9e:	int3   
   140009b9f:	int3   
   140009ba0:	rex push rbp
   140009ba2:	sub    rsp,0x20
   140009ba6:	mov    rbp,rdx
   140009ba9:	lea    rcx,[rbp+0x58]
   140009bad:	call   0x1400010c0
   140009bb2:	add    rsp,0x20
   140009bb6:	pop    rbp
   140009bb7:	ret    
   140009bb8:	int3   
   140009bb9:	int3   
   140009bba:	int3   
   140009bbb:	int3   
   140009bbc:	int3   
   140009bbd:	int3   
   140009bbe:	int3   
   140009bbf:	int3   
   140009bc0:	rex push rbp
   140009bc2:	sub    rsp,0x20
   140009bc6:	mov    rbp,rdx
   140009bc9:	lea    rcx,[rbp+0xd8]
   140009bd0:	call   0x1400010c0
   140009bd5:	add    rsp,0x20
   140009bd9:	pop    rbp
   140009bda:	ret    
   140009bdb:	int3   
   140009bdc:	int3   
   140009bdd:	int3   
   140009bde:	int3   
   140009bdf:	int3   
   140009be0:	rex push rbp
   140009be2:	sub    rsp,0x20
   140009be6:	mov    rbp,rdx
   140009be9:	lea    rcx,[rbp+0x68]
   140009bed:	call   0x1400010c0
   140009bf2:	add    rsp,0x20
   140009bf6:	pop    rbp
   140009bf7:	ret    
   140009bf8:	int3   
   140009bf9:	int3   
   140009bfa:	int3   
   140009bfb:	int3   
   140009bfc:	int3   
   140009bfd:	int3   
   140009bfe:	int3   
   140009bff:	int3   
   140009c00:	rex push rbp
   140009c02:	sub    rsp,0x20
   140009c06:	mov    rbp,rdx
   140009c09:	lea    rcx,[rbp+0xb8]
   140009c10:	call   0x1400010c0
   140009c15:	add    rsp,0x20
   140009c19:	pop    rbp
   140009c1a:	ret    
   140009c1b:	int3   
   140009c1c:	int3   
   140009c1d:	int3   
   140009c1e:	int3   
   140009c1f:	int3   
   140009c20:	rex push rbp
   140009c22:	sub    rsp,0x20
   140009c26:	mov    rbp,rdx
   140009c29:	lea    rcx,[rbp+0x78]
   140009c2d:	call   0x1400010c0
   140009c32:	add    rsp,0x20
   140009c36:	pop    rbp
   140009c37:	ret    
   140009c38:	int3   
   140009c39:	int3   
   140009c3a:	int3   
   140009c3b:	int3   
   140009c3c:	int3   
   140009c3d:	int3   
   140009c3e:	int3   
   140009c3f:	int3   
   140009c40:	rex push rbp
   140009c42:	sub    rsp,0x20
   140009c46:	mov    rbp,rdx
   140009c49:	lea    rcx,[rbp+0xf8]
   140009c50:	call   0x1400010c0
   140009c55:	add    rsp,0x20
   140009c59:	pop    rbp
   140009c5a:	ret    
   140009c5b:	int3   
   140009c5c:	int3   
   140009c5d:	int3   
   140009c5e:	int3   
   140009c5f:	int3   
   140009c60:	rex push rbp
   140009c62:	sub    rsp,0x20
   140009c66:	mov    rbp,rdx
   140009c69:	lea    rcx,[rbp+0x88]
   140009c70:	call   0x1400010c0
   140009c75:	add    rsp,0x20
   140009c79:	pop    rbp
   140009c7a:	ret    
   140009c7b:	int3   
   140009c7c:	int3   
   140009c7d:	int3   
   140009c7e:	int3   
   140009c7f:	int3   
   140009c80:	rex push rbp
   140009c82:	sub    rsp,0x20
   140009c86:	mov    rbp,rdx
   140009c89:	lea    rcx,[rbp+0xc8]
   140009c90:	call   0x1400010c0
   140009c95:	add    rsp,0x20
   140009c99:	pop    rbp
   140009c9a:	ret    
   140009c9b:	int3   
   140009c9c:	int3   
   140009c9d:	int3   
   140009c9e:	int3   
   140009c9f:	int3   
   140009ca0:	rex push rbp
   140009ca2:	sub    rsp,0x20
   140009ca6:	mov    rbp,rdx
   140009ca9:	lea    rcx,[rbp+0x98]
   140009cb0:	call   0x1400010c0
   140009cb5:	add    rsp,0x20
   140009cb9:	pop    rbp
   140009cba:	ret    
   140009cbb:	int3   
   140009cbc:	int3   
   140009cbd:	int3   
   140009cbe:	int3   
   140009cbf:	int3   
   140009cc0:	rex push rbp
   140009cc2:	sub    rsp,0x20
   140009cc6:	mov    rbp,rdx
   140009cc9:	lea    rcx,[rbp+0x30]
   140009ccd:	call   0x1400010c0
   140009cd2:	add    rsp,0x20
   140009cd6:	pop    rbp
   140009cd7:	ret    
   140009cd8:	int3   
   140009cd9:	int3   
   140009cda:	int3   
   140009cdb:	int3   
   140009cdc:	int3   
   140009cdd:	int3   
   140009cde:	int3   
   140009cdf:	int3   
   140009ce0:	rex push rbp
   140009ce2:	sub    rsp,0x20
   140009ce6:	mov    rbp,rdx
   140009ce9:	lea    rcx,[rbp+0x40]
   140009ced:	call   0x1400010c0
   140009cf2:	add    rsp,0x20
   140009cf6:	pop    rbp
   140009cf7:	ret    
   140009cf8:	int3   
   140009cf9:	int3   
   140009cfa:	int3   
   140009cfb:	int3   
   140009cfc:	int3   
   140009cfd:	int3   
   140009cfe:	int3   
   140009cff:	int3   
   140009d00:	rex push rbp
   140009d02:	sub    rsp,0x20
   140009d06:	mov    rbp,rdx
   140009d09:	lea    rcx,[rbp+0x50]
   140009d0d:	call   0x1400010c0
   140009d12:	add    rsp,0x20
   140009d16:	pop    rbp
   140009d17:	ret    
   140009d18:	int3   
   140009d19:	int3   
   140009d1a:	int3   
   140009d1b:	int3   
   140009d1c:	int3   
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	rex push rbp
   140009d22:	sub    rsp,0x20
   140009d26:	mov    rbp,rdx
   140009d29:	lea    rcx,[rbp+0x60]
   140009d2d:	call   0x1400010c0
   140009d32:	add    rsp,0x20
   140009d36:	pop    rbp
   140009d37:	ret    
   140009d38:	int3   
   140009d39:	int3   
   140009d3a:	int3   
   140009d3b:	int3   
   140009d3c:	int3   
   140009d3d:	int3   
   140009d3e:	int3   
   140009d3f:	int3   
   140009d40:	rex push rbp
   140009d42:	sub    rsp,0x20
   140009d46:	mov    rbp,rdx
   140009d49:	lea    rcx,[rbp+0x70]
   140009d4d:	call   0x1400010c0
   140009d52:	add    rsp,0x20
   140009d56:	pop    rbp
   140009d57:	ret    
   140009d58:	int3   
   140009d59:	int3   
   140009d5a:	int3   
   140009d5b:	int3   
   140009d5c:	int3   
   140009d5d:	int3   
   140009d5e:	int3   
   140009d5f:	int3   
   140009d60:	rex push rbp
   140009d62:	sub    rsp,0x20
   140009d66:	mov    rbp,rdx
   140009d69:	lea    rcx,[rbp+0x80]
   140009d70:	call   0x1400010c0
   140009d75:	add    rsp,0x20
   140009d79:	pop    rbp
   140009d7a:	ret    
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	rex push rbp
   140009d82:	sub    rsp,0x20
   140009d86:	mov    rbp,rdx
   140009d89:	lea    rcx,[rbp+0x90]
   140009d90:	call   0x1400010c0
   140009d95:	add    rsp,0x20
   140009d99:	pop    rbp
   140009d9a:	ret    
   140009d9b:	int3   
   140009d9c:	int3   
   140009d9d:	int3   
   140009d9e:	int3   
   140009d9f:	int3   
   140009da0:	rex push rbp
   140009da2:	sub    rsp,0x20
   140009da6:	mov    rbp,rdx
   140009da9:	lea    rcx,[rbp+0xa0]
   140009db0:	call   0x1400010c0
   140009db5:	add    rsp,0x20
   140009db9:	pop    rbp
   140009dba:	ret    
   140009dbb:	int3   
   140009dbc:	int3   
   140009dbd:	int3   
   140009dbe:	int3   
   140009dbf:	int3   
   140009dc0:	rex push rbp
   140009dc2:	sub    rsp,0x20
   140009dc6:	mov    rbp,rdx
   140009dc9:	lea    rcx,[rbp+0xb0]
   140009dd0:	call   0x1400010c0
   140009dd5:	add    rsp,0x20
   140009dd9:	pop    rbp
   140009dda:	ret    
   140009ddb:	int3   
   140009ddc:	int3   
   140009ddd:	int3   
   140009dde:	int3   
   140009ddf:	int3   
   140009de0:	rex push rbp
   140009de2:	sub    rsp,0x20
   140009de6:	mov    rbp,rdx
   140009de9:	lea    rcx,[rbp+0xc0]
   140009df0:	call   0x1400010c0
   140009df5:	add    rsp,0x20
   140009df9:	pop    rbp
   140009dfa:	ret    
   140009dfb:	int3   
   140009dfc:	int3   
   140009dfd:	int3   
   140009dfe:	int3   
   140009dff:	int3   
   140009e00:	rex push rbp
   140009e02:	sub    rsp,0x20
   140009e06:	mov    rbp,rdx
   140009e09:	lea    rcx,[rbp+0xd0]
   140009e10:	call   0x1400010c0
   140009e15:	add    rsp,0x20
   140009e19:	pop    rbp
   140009e1a:	ret    
   140009e1b:	int3   
   140009e1c:	int3   
   140009e1d:	int3   
   140009e1e:	int3   
   140009e1f:	int3   
   140009e20:	rex push rbp
   140009e22:	sub    rsp,0x20
   140009e26:	mov    rbp,rdx
   140009e29:	lea    rcx,[rbp+0xe0]
   140009e30:	call   0x1400010c0
   140009e35:	add    rsp,0x20
   140009e39:	pop    rbp
   140009e3a:	ret    
   140009e3b:	int3   
   140009e3c:	int3   
   140009e3d:	int3   
   140009e3e:	int3   
   140009e3f:	int3   
   140009e40:	rex push rdi
   140009e42:	sub    rsp,0x30
   140009e46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009e4f:	mov    QWORD PTR [rsp+0x48],rbx
   140009e54:	mov    QWORD PTR [rsp+0x50],rsi
   140009e59:	mov    rdi,rdx
   140009e5c:	mov    rsi,rcx
   140009e5f:	mov    rax,QWORD PTR [rcx]
   140009e62:	mov    rcx,QWORD PTR [rax-0x18]
   140009e66:	test   rcx,rcx
   140009e69:	je     0x140009e79
   140009e6b:	mov    rax,QWORD PTR [rcx]
   140009e6e:	call   QWORD PTR [rax+0x20]
   140009e71:	mov    r11,rax
   140009e74:	test   rax,rax
   140009e77:	jne    0x140009e8a
   140009e79:	call   0x14002b874
   140009e7e:	mov    rdx,QWORD PTR [rax]
   140009e81:	mov    rcx,rax
   140009e84:	call   QWORD PTR [rdx+0x20]
   140009e87:	mov    r11,rax
   140009e8a:	xor    ecx,ecx
   140009e8c:	test   r11,r11
   140009e8f:	setne  cl
   140009e92:	test   ecx,ecx
   140009e94:	jne    0x140009ea1
   140009e96:	mov    ecx,0x80004005
   140009e9b:	call   0x140001430
   140009ea0:	int3   
   140009ea1:	mov    rax,QWORD PTR [r11]
   140009ea4:	mov    rcx,r11
   140009ea7:	call   QWORD PTR [rax+0x18]
   140009eaa:	lea    rbx,[rax+0x18]
   140009eae:	mov    QWORD PTR [rsp+0x40],rbx
   140009eb3:	test   rdi,rdi
   140009eb6:	je     0x140009ee7
   140009eb8:	test   rdi,0xffffffffffff0000
   140009ebf:	jne    0x140009ee7
   140009ec1:	movzx  edi,di
   140009ec4:	mov    ecx,edi
   140009ec6:	call   0x14002b860
   140009ecb:	test   rax,rax
   140009ece:	je     0x140009ef9
   140009ed0:	mov    r8d,edi
   140009ed3:	mov    rdx,rax
   140009ed6:	lea    rcx,[rsp+0x40]
   140009edb:	call   0x140003650
   140009ee0:	mov    rbx,QWORD PTR [rsp+0x40]
   140009ee5:	jmp    0x140009ef9
   140009ee7:	mov    rdx,rdi
   140009eea:	lea    rcx,[rsp+0x40]
   140009eef:	call   0x140003930
   140009ef4:	mov    rbx,QWORD PTR [rsp+0x40]
   140009ef9:	test   rbx,rbx
   140009efc:	jne    0x140009f09
   140009efe:	mov    ecx,0x80004005
   140009f03:	call   0x140001430
   140009f08:	int3   
   140009f09:	mov    rax,QWORD PTR [rsi]
   140009f0c:	mov    r8,rbx
   140009f0f:	sub    r8,rax
   140009f12:	movzx  edx,WORD PTR [rax]
   140009f15:	movzx  ecx,WORD PTR [rax+r8*1]
   140009f1a:	sub    edx,ecx
   140009f1c:	jne    0x140009f26
   140009f1e:	add    rax,0x2
   140009f22:	test   ecx,ecx
   140009f24:	jne    0x140009f12
   140009f26:	test   edx,edx
   140009f28:	sete   dil
   140009f2c:	lea    rdx,[rbx-0x18]
   140009f30:	or     ecx,0xffffffff
   140009f33:	lock xadd DWORD PTR [rdx+0x10],ecx
   140009f38:	add    ecx,0xffffffff
   140009f3b:	test   ecx,ecx
   140009f3d:	jg     0x140009f49
   140009f3f:	mov    rcx,QWORD PTR [rdx]
   140009f42:	mov    r8,QWORD PTR [rcx]
   140009f45:	call   QWORD PTR [r8+0x8]
   140009f49:	mov    al,dil
   140009f4c:	mov    rbx,QWORD PTR [rsp+0x48]
   140009f51:	mov    rsi,QWORD PTR [rsp+0x50]
   140009f56:	add    rsp,0x30
   140009f5a:	pop    rdi
   140009f5b:	ret    
   140009f5c:	int3   
   140009f5d:	int3   
   140009f5e:	int3   
   140009f5f:	int3   
   140009f60:	rex push rbp
   140009f62:	sub    rsp,0x20
   140009f66:	mov    rbp,rdx
   140009f69:	lea    rcx,[rbp+0x40]
   140009f6d:	call   0x140001090
   140009f72:	add    rsp,0x20
   140009f76:	pop    rbp
   140009f77:	ret    
   140009f78:	int3   
   140009f79:	int3   
   140009f7a:	int3   
   140009f7b:	int3   
   140009f7c:	int3   
   140009f7d:	int3   
   140009f7e:	int3   
   140009f7f:	int3   
   140009f80:	rex push rdi
   140009f82:	sub    rsp,0x30
   140009f86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009f8f:	mov    QWORD PTR [rsp+0x48],rbx
   140009f94:	mov    QWORD PTR [rsp+0x50],rsi
   140009f99:	mov    rdi,rdx
   140009f9c:	mov    rsi,rcx
   140009f9f:	mov    rax,QWORD PTR [rcx]
   140009fa2:	mov    rcx,QWORD PTR [rax-0x18]
   140009fa6:	test   rcx,rcx
   140009fa9:	je     0x140009fb9
   140009fab:	mov    rax,QWORD PTR [rcx]
   140009fae:	call   QWORD PTR [rax+0x20]
   140009fb1:	mov    r11,rax
   140009fb4:	test   rax,rax
   140009fb7:	jne    0x140009fca
   140009fb9:	call   0x14002b874
   140009fbe:	mov    rdx,QWORD PTR [rax]
   140009fc1:	mov    rcx,rax
   140009fc4:	call   QWORD PTR [rdx+0x20]
   140009fc7:	mov    r11,rax
   140009fca:	xor    ecx,ecx
   140009fcc:	test   r11,r11
   140009fcf:	setne  cl
   140009fd2:	test   ecx,ecx
   140009fd4:	jne    0x140009fe1
   140009fd6:	mov    ecx,0x80004005
   140009fdb:	call   0x140001430
   140009fe0:	int3   
   140009fe1:	mov    rax,QWORD PTR [r11]
   140009fe4:	mov    rcx,r11
   140009fe7:	call   QWORD PTR [rax+0x18]
   140009fea:	lea    rbx,[rax+0x18]
   140009fee:	mov    QWORD PTR [rsp+0x40],rbx
   140009ff3:	test   rdi,rdi
   140009ff6:	je     0x14000a027
   140009ff8:	test   rdi,0xffffffffffff0000
   140009fff:	jne    0x14000a027
   14000a001:	movzx  edi,di
   14000a004:	mov    ecx,edi
   14000a006:	call   0x14002b860
   14000a00b:	test   rax,rax
   14000a00e:	je     0x14000a039
   14000a010:	mov    r8d,edi
   14000a013:	mov    rdx,rax
   14000a016:	lea    rcx,[rsp+0x40]
   14000a01b:	call   0x140003650
   14000a020:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a025:	jmp    0x14000a039
   14000a027:	mov    rdx,rdi
   14000a02a:	lea    rcx,[rsp+0x40]
   14000a02f:	call   0x140003930
   14000a034:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a039:	test   rbx,rbx
   14000a03c:	jne    0x14000a049
   14000a03e:	mov    ecx,0x80004005
   14000a043:	call   0x140001430
   14000a048:	int3   
   14000a049:	mov    rax,QWORD PTR [rsi]
   14000a04c:	mov    r8,rbx
   14000a04f:	sub    r8,rax
   14000a052:	movzx  edx,WORD PTR [rax]
   14000a055:	movzx  ecx,WORD PTR [rax+r8*1]
   14000a05a:	sub    edx,ecx
   14000a05c:	jne    0x14000a066
   14000a05e:	add    rax,0x2
   14000a062:	test   ecx,ecx
   14000a064:	jne    0x14000a052
   14000a066:	test   edx,edx
   14000a068:	setne  dil
   14000a06c:	lea    rdx,[rbx-0x18]
   14000a070:	or     ecx,0xffffffff
   14000a073:	lock xadd DWORD PTR [rdx+0x10],ecx
   14000a078:	add    ecx,0xffffffff
   14000a07b:	test   ecx,ecx
   14000a07d:	jg     0x14000a089
   14000a07f:	mov    rcx,QWORD PTR [rdx]
   14000a082:	mov    r8,QWORD PTR [rcx]
   14000a085:	call   QWORD PTR [r8+0x8]
   14000a089:	mov    al,dil
   14000a08c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a091:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a096:	add    rsp,0x30
   14000a09a:	pop    rdi
   14000a09b:	ret    
   14000a09c:	int3   
   14000a09d:	int3   
   14000a09e:	int3   
   14000a09f:	int3   
   14000a0a0:	rex push rbp
   14000a0a2:	sub    rsp,0x20
   14000a0a6:	mov    rbp,rdx
   14000a0a9:	lea    rcx,[rbp+0x40]
   14000a0ad:	call   0x140001090
   14000a0b2:	add    rsp,0x20
   14000a0b6:	pop    rbp
   14000a0b7:	ret    
   14000a0b8:	int3   
   14000a0b9:	int3   
   14000a0ba:	int3   
   14000a0bb:	int3   
   14000a0bc:	int3   
   14000a0bd:	int3   
   14000a0be:	int3   
   14000a0bf:	int3   
   14000a0c0:	rex push rdi
   14000a0c2:	sub    rsp,0x30
   14000a0c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a0cf:	mov    QWORD PTR [rsp+0x40],rbx
   14000a0d4:	mov    QWORD PTR [rsp+0x50],rbp
   14000a0d9:	mov    QWORD PTR [rsp+0x58],rsi
   14000a0de:	mov    rbp,rcx
   14000a0e1:	call   0x14002b874
   14000a0e6:	mov    rcx,rax
   14000a0e9:	xor    edi,edi
   14000a0eb:	mov    edx,edi
   14000a0ed:	test   rax,rax
   14000a0f0:	setne  dl
   14000a0f3:	test   edx,edx
   14000a0f5:	jne    0x14000a102
   14000a0f7:	mov    ecx,0x80004005
   14000a0fc:	call   0x140001430
   14000a101:	int3   
   14000a102:	mov    rax,QWORD PTR [rax]
   14000a105:	call   QWORD PTR [rax+0x18]
   14000a108:	add    rax,0x18
   14000a10c:	mov    QWORD PTR [rsp+0x48],rax
   14000a111:	mov    DWORD PTR [rbp+0xeb104],edi
   14000a117:	mov    DWORD PTR [rbp+0xeb108],edi
   14000a11d:	mov    DWORD PTR [rbp+0xeb10c],edi
   14000a123:	mov    DWORD PTR [rbp+0xeb110],edi
   14000a129:	mov    DWORD PTR [rbp+0xeb114],edi
   14000a12f:	mov    DWORD PTR [rbp+0xeb118],edi
   14000a135:	mov    DWORD PTR [rbp+0xeb11c],edi
   14000a13b:	mov    DWORD PTR [rbp+0xeb120],edi
   14000a141:	mov    DWORD PTR [rbp+0xeb124],edi
   14000a147:	mov    DWORD PTR [rbp+0xeb128],edi
   14000a14d:	mov    DWORD PTR [rbp+0xeb12c],edi
   14000a153:	mov    DWORD PTR [rbp+0xeb130],edi
   14000a159:	mov    DWORD PTR [rbp+0xeb134],edi
   14000a15f:	mov    DWORD PTR [rbp+0xeb138],edi
   14000a165:	call   QWORD PTR [rip+0x5a3ed]        # 0x140064558
   14000a16b:	mov    rdx,rax
   14000a16e:	or     rbx,0xffffffffffffffff
   14000a172:	test   rax,rax
   14000a175:	je     0x14000a189
   14000a177:	xor    eax,eax
   14000a179:	mov    rcx,rbx
   14000a17c:	mov    rdi,rdx
   14000a17f:	repnz scas ax,WORD PTR es:[rdi]
   14000a182:	not    rcx
   14000a185:	lea    rdi,[rcx-0x1]
   14000a189:	mov    r8d,edi
   14000a18c:	lea    rcx,[rsp+0x48]
   14000a191:	call   0x1400037d0
   14000a196:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a19b:	cmp    DWORD PTR [rdi-0x10],0x1
   14000a19f:	jge    0x14000a1a5
   14000a1a1:	mov    esi,ebx
   14000a1a3:	jmp    0x14000a1c7
   14000a1a5:	lea    rcx,[rdi+0x2]
   14000a1a9:	lea    rdx,[rip+0x5b198]        # 0x140065348
   14000a1b0:	call   0x140046660
   14000a1b5:	mov    rsi,rax
   14000a1b8:	test   rax,rax
   14000a1bb:	jne    0x14000a1c1
   14000a1bd:	mov    esi,ebx
   14000a1bf:	jmp    0x14000a1c7
   14000a1c1:	sub    rsi,rdi
   14000a1c4:	sar    rsi,1
   14000a1c7:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a1cb:	jge    0x14000a1d1
   14000a1cd:	mov    eax,ebx
   14000a1cf:	jmp    0x14000a1ef
   14000a1d1:	lea    rdx,[rip+0x5c300]        # 0x1400664d8
   14000a1d8:	mov    rcx,rdi
   14000a1db:	call   0x140046660
   14000a1e0:	test   rax,rax
   14000a1e3:	jne    0x14000a1e9
   14000a1e5:	mov    eax,ebx
   14000a1e7:	jmp    0x14000a1ef
   14000a1e9:	sub    rax,rdi
   14000a1ec:	sar    rax,1
   14000a1ef:	cmp    eax,esi
   14000a1f1:	jle    0x14000a1fd
   14000a1f3:	mov    DWORD PTR [rbp+0xeb104],0x1
   14000a1fd:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a201:	jge    0x14000a207
   14000a203:	mov    eax,ebx
   14000a205:	jmp    0x14000a225
   14000a207:	lea    rdx,[rip+0x5c2c2]        # 0x1400664d0
   14000a20e:	mov    rcx,rdi
   14000a211:	call   0x140046660
   14000a216:	test   rax,rax
   14000a219:	jne    0x14000a21f
   14000a21b:	mov    eax,ebx
   14000a21d:	jmp    0x14000a225
   14000a21f:	sub    rax,rdi
   14000a222:	sar    rax,1
   14000a225:	cmp    eax,esi
   14000a227:	jle    0x14000a233
   14000a229:	mov    DWORD PTR [rbp+0xeb108],0x1
   14000a233:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a237:	jge    0x14000a23d
   14000a239:	mov    eax,ebx
   14000a23b:	jmp    0x14000a25b
   14000a23d:	lea    rdx,[rip+0x5c284]        # 0x1400664c8
   14000a244:	mov    rcx,rdi
   14000a247:	call   0x140046660
   14000a24c:	test   rax,rax
   14000a24f:	jne    0x14000a255
   14000a251:	mov    eax,ebx
   14000a253:	jmp    0x14000a25b
   14000a255:	sub    rax,rdi
   14000a258:	sar    rax,1
   14000a25b:	cmp    eax,esi
   14000a25d:	jle    0x14000a269
   14000a25f:	mov    DWORD PTR [rbp+0xeb10c],0x1
   14000a269:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a26d:	jge    0x14000a273
   14000a26f:	mov    eax,ebx
   14000a271:	jmp    0x14000a291
   14000a273:	lea    rdx,[rip+0x5c246]        # 0x1400664c0
   14000a27a:	mov    rcx,rdi
   14000a27d:	call   0x140046660
   14000a282:	test   rax,rax
   14000a285:	jne    0x14000a28b
   14000a287:	mov    eax,ebx
   14000a289:	jmp    0x14000a291
   14000a28b:	sub    rax,rdi
   14000a28e:	sar    rax,1
   14000a291:	cmp    eax,esi
   14000a293:	jle    0x14000a29f
   14000a295:	mov    DWORD PTR [rbp+0xeb110],0x1
   14000a29f:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a2a3:	jge    0x14000a2a9
   14000a2a5:	mov    eax,ebx
   14000a2a7:	jmp    0x14000a2c7
   14000a2a9:	lea    rdx,[rip+0x5c208]        # 0x1400664b8
   14000a2b0:	mov    rcx,rdi
   14000a2b3:	call   0x140046660
   14000a2b8:	test   rax,rax
   14000a2bb:	jne    0x14000a2c1
   14000a2bd:	mov    eax,ebx
   14000a2bf:	jmp    0x14000a2c7
   14000a2c1:	sub    rax,rdi
   14000a2c4:	sar    rax,1
   14000a2c7:	cmp    eax,esi
   14000a2c9:	jle    0x14000a2d5
   14000a2cb:	mov    DWORD PTR [rbp+0xeb114],0x1
   14000a2d5:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a2d9:	jge    0x14000a2df
   14000a2db:	mov    eax,ebx
   14000a2dd:	jmp    0x14000a2fd
   14000a2df:	lea    rdx,[rip+0x5c1ca]        # 0x1400664b0
   14000a2e6:	mov    rcx,rdi
   14000a2e9:	call   0x140046660
   14000a2ee:	test   rax,rax
   14000a2f1:	jne    0x14000a2f7
   14000a2f3:	mov    eax,ebx
   14000a2f5:	jmp    0x14000a2fd
   14000a2f7:	sub    rax,rdi
   14000a2fa:	sar    rax,1
   14000a2fd:	cmp    eax,esi
   14000a2ff:	jle    0x14000a30b
   14000a301:	mov    DWORD PTR [rbp+0xeb118],0x1
   14000a30b:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a30f:	jge    0x14000a315
   14000a311:	mov    eax,ebx
   14000a313:	jmp    0x14000a333
   14000a315:	lea    rdx,[rip+0x5c18c]        # 0x1400664a8
   14000a31c:	mov    rcx,rdi
   14000a31f:	call   0x140046660
   14000a324:	test   rax,rax
   14000a327:	jne    0x14000a32d
   14000a329:	mov    eax,ebx
   14000a32b:	jmp    0x14000a333
   14000a32d:	sub    rax,rdi
   14000a330:	sar    rax,1
   14000a333:	cmp    eax,esi
   14000a335:	jle    0x14000a341
   14000a337:	mov    DWORD PTR [rbp+0xeb11c],0x1
   14000a341:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a345:	jge    0x14000a34b
   14000a347:	mov    eax,ebx
   14000a349:	jmp    0x14000a369
   14000a34b:	lea    rdx,[rip+0x5c14e]        # 0x1400664a0
   14000a352:	mov    rcx,rdi
   14000a355:	call   0x140046660
   14000a35a:	test   rax,rax
   14000a35d:	jne    0x14000a363
   14000a35f:	mov    eax,ebx
   14000a361:	jmp    0x14000a369
   14000a363:	sub    rax,rdi
   14000a366:	sar    rax,1
   14000a369:	cmp    eax,esi
   14000a36b:	jle    0x14000a377
   14000a36d:	mov    DWORD PTR [rbp+0xeb120],0x1
   14000a377:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a37b:	jge    0x14000a381
   14000a37d:	mov    eax,ebx
   14000a37f:	jmp    0x14000a39f
   14000a381:	lea    rdx,[rip+0x5c110]        # 0x140066498
   14000a388:	mov    rcx,rdi
   14000a38b:	call   0x140046660
   14000a390:	test   rax,rax
   14000a393:	jne    0x14000a399
   14000a395:	mov    eax,ebx
   14000a397:	jmp    0x14000a39f
   14000a399:	sub    rax,rdi
   14000a39c:	sar    rax,1
   14000a39f:	cmp    eax,esi
   14000a3a1:	jle    0x14000a3ad
   14000a3a3:	mov    DWORD PTR [rbp+0xeb124],0x1
   14000a3ad:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a3b1:	jge    0x14000a3b7
   14000a3b3:	mov    eax,ebx
   14000a3b5:	jmp    0x14000a3d5
   14000a3b7:	lea    rdx,[rip+0x5c0ca]        # 0x140066488
   14000a3be:	mov    rcx,rdi
   14000a3c1:	call   0x140046660
   14000a3c6:	test   rax,rax
   14000a3c9:	jne    0x14000a3cf
   14000a3cb:	mov    eax,ebx
   14000a3cd:	jmp    0x14000a3d5
   14000a3cf:	sub    rax,rdi
   14000a3d2:	sar    rax,1
   14000a3d5:	cmp    eax,esi
   14000a3d7:	jle    0x14000a3e3
   14000a3d9:	mov    DWORD PTR [rbp+0xeb128],0x1
   14000a3e3:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a3e7:	jge    0x14000a3ed
   14000a3e9:	mov    eax,ebx
   14000a3eb:	jmp    0x14000a40b
   14000a3ed:	lea    rdx,[rip+0x5c07c]        # 0x140066470
   14000a3f4:	mov    rcx,rdi
   14000a3f7:	call   0x140046660
   14000a3fc:	test   rax,rax
   14000a3ff:	jne    0x14000a405
   14000a401:	mov    eax,ebx
   14000a403:	jmp    0x14000a40b
   14000a405:	sub    rax,rdi
   14000a408:	sar    rax,1
   14000a40b:	cmp    eax,esi
   14000a40d:	jle    0x14000a419
   14000a40f:	mov    DWORD PTR [rbp+0xeb12c],0x1
   14000a419:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a41d:	jge    0x14000a423
   14000a41f:	mov    eax,ebx
   14000a421:	jmp    0x14000a441
   14000a423:	lea    rdx,[rip+0x5c036]        # 0x140066460
   14000a42a:	mov    rcx,rdi
   14000a42d:	call   0x140046660
   14000a432:	test   rax,rax
   14000a435:	jne    0x14000a43b
   14000a437:	mov    eax,ebx
   14000a439:	jmp    0x14000a441
   14000a43b:	sub    rax,rdi
   14000a43e:	sar    rax,1
   14000a441:	cmp    eax,esi
   14000a443:	jle    0x14000a44f
   14000a445:	mov    DWORD PTR [rbp+0xeb130],0x1
   14000a44f:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a453:	jge    0x14000a459
   14000a455:	mov    eax,ebx
   14000a457:	jmp    0x14000a477
   14000a459:	lea    rdx,[rip+0x5bff0]        # 0x140066450
   14000a460:	mov    rcx,rdi
   14000a463:	call   0x140046660
   14000a468:	test   rax,rax
   14000a46b:	jne    0x14000a471
   14000a46d:	mov    eax,ebx
   14000a46f:	jmp    0x14000a477
   14000a471:	sub    rax,rdi
   14000a474:	sar    rax,1
   14000a477:	cmp    eax,esi
   14000a479:	jle    0x14000a485
   14000a47b:	mov    DWORD PTR [rbp+0xeb134],0x1
   14000a485:	cmp    DWORD PTR [rdi-0x10],0x0
   14000a489:	jge    0x14000a48f
   14000a48b:	mov    eax,ebx
   14000a48d:	jmp    0x14000a4ad
   14000a48f:	lea    rdx,[rip+0x5bfaa]        # 0x140066440
   14000a496:	mov    rcx,rdi
   14000a499:	call   0x140046660
   14000a49e:	test   rax,rax
   14000a4a1:	jne    0x14000a4a7
   14000a4a3:	mov    eax,ebx
   14000a4a5:	jmp    0x14000a4ad
   14000a4a7:	sub    rax,rdi
   14000a4aa:	sar    rax,1
   14000a4ad:	cmp    eax,esi
   14000a4af:	jle    0x14000a4bb
   14000a4b1:	mov    DWORD PTR [rbp+0xeb138],0x1
   14000a4bb:	lea    rdx,[rdi-0x18]
   14000a4bf:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000a4c4:	add    ebx,0xffffffff
   14000a4c7:	test   ebx,ebx
   14000a4c9:	jg     0x14000a4d4
   14000a4cb:	mov    rcx,QWORD PTR [rdx]
   14000a4ce:	mov    rax,QWORD PTR [rcx]
   14000a4d1:	call   QWORD PTR [rax+0x8]
   14000a4d4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a4d9:	mov    rbp,QWORD PTR [rsp+0x50]
   14000a4de:	mov    rsi,QWORD PTR [rsp+0x58]
   14000a4e3:	add    rsp,0x30
   14000a4e7:	pop    rdi
   14000a4e8:	ret    
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	int3   
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	rex push rbp
   14000a4f2:	sub    rsp,0x20
   14000a4f6:	mov    rbp,rdx
   14000a4f9:	lea    rcx,[rbp+0x48]
   14000a4fd:	call   0x1400010c0
   14000a502:	add    rsp,0x20
   14000a506:	pop    rbp
   14000a507:	ret    
   14000a508:	int3   
   14000a509:	int3   
   14000a50a:	int3   
   14000a50b:	int3   
   14000a50c:	int3   
   14000a50d:	int3   
   14000a50e:	int3   
   14000a50f:	int3   
   14000a510:	rex push rbp
   14000a512:	push   rsi
   14000a513:	push   rdi
   14000a514:	push   r12
   14000a516:	push   r13
   14000a518:	push   r14
   14000a51a:	push   r15
   14000a51c:	sub    rsp,0x270
   14000a523:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000a52c:	mov    QWORD PTR [rsp+0x2b0],rbx
   14000a534:	mov    rax,QWORD PTR [rip+0x7c835]        # 0x140086d70
   14000a53b:	xor    rax,rsp
   14000a53e:	mov    QWORD PTR [rsp+0x260],rax
   14000a546:	mov    r14,r9
   14000a549:	mov    r15,r8
   14000a54c:	mov    QWORD PTR [rsp+0x28],rdx
   14000a551:	mov    r13,QWORD PTR [rsp+0x2d0]
   14000a559:	xor    ebp,ebp
   14000a55b:	call   0x14002b874
   14000a560:	mov    rcx,rax
   14000a563:	mov    eax,ebp
   14000a565:	test   rcx,rcx
   14000a568:	setne  al
   14000a56b:	test   eax,eax
   14000a56d:	jne    0x14000a57a
   14000a56f:	mov    ecx,0x80004005
   14000a574:	call   0x140001430
   14000a579:	int3   
   14000a57a:	mov    rax,QWORD PTR [rcx]
   14000a57d:	call   QWORD PTR [rax+0x18]
   14000a580:	add    rax,0x18
   14000a584:	mov    QWORD PTR [rsp+0x20],rax
   14000a589:	lea    rdx,[rip+0x5af40]        # 0x1400654d0
   14000a590:	test   rdx,0xffffffffffff0000
   14000a597:	jne    0x14000a5ba
   14000a599:	movzx  edi,dx
   14000a59c:	mov    ecx,edi
   14000a59e:	call   0x14002b860
   14000a5a3:	test   rax,rax
   14000a5a6:	je     0x14000a5c5
   14000a5a8:	mov    r8d,edi
   14000a5ab:	mov    rdx,rax
   14000a5ae:	lea    rcx,[rsp+0x20]
   14000a5b3:	call   0x140003650
   14000a5b8:	jmp    0x14000a5c5
   14000a5ba:	lea    rcx,[rsp+0x20]
   14000a5bf:	call   0x140003930
   14000a5c4:	nop
   14000a5c5:	mov    r8,r14
   14000a5c8:	mov    edx,0x104
   14000a5cd:	lea    rcx,[rsp+0x50]
   14000a5d2:	call   0x140047080
   14000a5d7:	or     r12,0xffffffffffffffff
   14000a5db:	test   r13,r13
   14000a5de:	jne    0x14000a5e4
   14000a5e0:	mov    ecx,ebp
   14000a5e2:	jmp    0x14000a5f6
   14000a5e4:	xor    eax,eax
   14000a5e6:	mov    rcx,r12
   14000a5e9:	mov    rdi,r13
   14000a5ec:	repnz scas ax,WORD PTR es:[rdi]
   14000a5ef:	not    rcx
   14000a5f2:	sub    rcx,0x1
   14000a5f6:	mov    r8d,ecx
   14000a5f9:	mov    rdx,r13
   14000a5fc:	lea    rcx,[rsp+0x20]
   14000a601:	call   0x1400037d0
   14000a606:	xor    r11d,r11d
   14000a609:	lea    rdi,[rip+0x5ad38]        # 0x140065348
   14000a610:	mov    rbx,QWORD PTR [rsp+0x20]
   14000a615:	mov    rsi,rbx
   14000a618:	mov    ecx,0x1
   14000a61d:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000a620:	je     0x14000a629
   14000a622:	sbb    r11d,r11d
   14000a625:	sbb    r11d,0xffffffff
   14000a629:	test   r11d,r11d
   14000a62c:	setne  al
   14000a62f:	test   al,al
   14000a631:	je     0x14000a65b
   14000a633:	lea    r8,[rip+0x5adbe]        # 0x1400653f8
   14000a63a:	mov    edx,0x104
   14000a63f:	lea    rcx,[rsp+0x50]
   14000a644:	call   0x140047130
   14000a649:	mov    r8,r13
   14000a64c:	mov    edx,0x104
   14000a651:	lea    rcx,[rsp+0x50]
   14000a656:	call   0x140047130
   14000a65b:	lea    r9,[rsp+0x30]
   14000a660:	xor    r8d,r8d
   14000a663:	lea    rdx,[rsp+0x50]
   14000a668:	mov    rdi,QWORD PTR [rsp+0x28]
   14000a66d:	mov    rcx,rdi
   14000a670:	call   QWORD PTR [rip+0x5a082]        # 0x1400646f8
   14000a676:	test   eax,eax
   14000a678:	je     0x14000a684
   14000a67a:	mov    ebp,0x1
   14000a67f:	jmp    0x14000a74a
   14000a684:	mov    r8,r14
   14000a687:	mov    edx,0x104
   14000a68c:	lea    rcx,[rsp+0x50]
   14000a691:	call   0x140047080
   14000a696:	lea    r9,[rsp+0x30]
   14000a69b:	xor    r8d,r8d
   14000a69e:	lea    rdx,[rsp+0x50]
   14000a6a3:	mov    rcx,rdi
   14000a6a6:	call   QWORD PTR [rip+0x5a04c]        # 0x1400646f8
   14000a6ac:	test   eax,eax
   14000a6ae:	je     0x14000a6ba
   14000a6b0:	mov    ebp,0x1
   14000a6b5:	jmp    0x14000a74a
   14000a6ba:	mov    r8,r14
   14000a6bd:	mov    edx,0x104
   14000a6c2:	lea    rcx,[rsp+0x50]
   14000a6c7:	call   0x140047080
   14000a6cc:	lea    r8,[rip+0x5be3d]        # 0x140066510
   14000a6d3:	mov    edx,0x104
   14000a6d8:	lea    rcx,[rsp+0x50]
   14000a6dd:	call   0x140047130
   14000a6e2:	lea    r9,[rsp+0x30]
   14000a6e7:	xor    r8d,r8d
   14000a6ea:	lea    rdx,[rsp+0x50]
   14000a6ef:	mov    rcx,rdi
   14000a6f2:	call   QWORD PTR [rip+0x5a000]        # 0x1400646f8
   14000a6f8:	test   eax,eax
   14000a6fa:	je     0x14000a703
   14000a6fc:	mov    ebp,0x1
   14000a701:	jmp    0x14000a74a
   14000a703:	mov    r8,r14
   14000a706:	mov    edx,0x104
   14000a70b:	lea    rcx,[rsp+0x50]
   14000a710:	call   0x140047080
   14000a715:	lea    r8,[rip+0x5bdec]        # 0x140066508
   14000a71c:	mov    edx,0x104
   14000a721:	lea    rcx,[rsp+0x50]
   14000a726:	call   0x140047130
   14000a72b:	lea    r9,[rsp+0x30]
   14000a730:	xor    r8d,r8d
   14000a733:	lea    rdx,[rsp+0x50]
   14000a738:	mov    rcx,rdi
   14000a73b:	call   QWORD PTR [rip+0x59fb7]        # 0x1400646f8
   14000a741:	test   eax,eax
   14000a743:	je     0x14000a75e
   14000a745:	mov    ebp,0x1
   14000a74a:	lea    r8,[rsp+0x50]
   14000a74f:	mov    edx,0x104
   14000a754:	mov    rcx,r15
   14000a757:	call   0x140047080
   14000a75c:	jmp    0x14000a773
   14000a75e:	lea    r8,[rip+0x5abe3]        # 0x140065348
   14000a765:	mov    edx,0x104
   14000a76a:	mov    rcx,r15
   14000a76d:	call   0x140047080
   14000a772:	nop
   14000a773:	lea    rdx,[rbx-0x18]
   14000a777:	lock xadd DWORD PTR [rdx+0x10],r12d
   14000a77d:	add    r12d,0xffffffff
   14000a781:	test   r12d,r12d
   14000a784:	jg     0x14000a78f
   14000a786:	mov    rcx,QWORD PTR [rdx]
   14000a789:	mov    rax,QWORD PTR [rcx]
   14000a78c:	call   QWORD PTR [rax+0x8]
   14000a78f:	mov    eax,ebp
   14000a791:	mov    rcx,QWORD PTR [rsp+0x260]
   14000a799:	xor    rcx,rsp
   14000a79c:	call   0x140046470
   14000a7a1:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14000a7a9:	add    rsp,0x270
   14000a7b0:	pop    r15
   14000a7b2:	pop    r14
   14000a7b4:	pop    r13
   14000a7b6:	pop    r12
   14000a7b8:	pop    rdi
   14000a7b9:	pop    rsi
   14000a7ba:	pop    rbp
   14000a7bb:	ret    
   14000a7bc:	int3   
   14000a7bd:	int3   
   14000a7be:	int3   
   14000a7bf:	int3   
   14000a7c0:	rex push rbp
   14000a7c2:	sub    rsp,0x20
   14000a7c6:	mov    rbp,rdx
   14000a7c9:	lea    rcx,[rbp+0x20]
   14000a7cd:	call   0x140001090
   14000a7d2:	add    rsp,0x20
   14000a7d6:	pop    rbp
   14000a7d7:	ret    
   14000a7d8:	int3   
   14000a7d9:	int3   
   14000a7da:	int3   
   14000a7db:	int3   
   14000a7dc:	int3   
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	rex push rbp
   14000a7e2:	sub    rsp,0x20
   14000a7e6:	mov    rbp,rdx
   14000a7e9:	lea    rcx,[rbp+0x20]
   14000a7ed:	call   0x1400010c0
   14000a7f2:	add    rsp,0x20
   14000a7f6:	pop    rbp
   14000a7f7:	ret    
   14000a7f8:	int3   
   14000a7f9:	int3   
   14000a7fa:	int3   
   14000a7fb:	int3   
   14000a7fc:	int3   
   14000a7fd:	int3   
   14000a7fe:	int3   
   14000a7ff:	int3   
   14000a800:	mov    QWORD PTR [rsp+0x10],rdx
   14000a805:	push   rbp
   14000a806:	push   rsi
   14000a807:	push   rdi
   14000a808:	push   r12
   14000a80a:	push   r13
   14000a80c:	push   r14
   14000a80e:	push   r15
   14000a810:	sub    rsp,0xd0
   14000a817:	mov    QWORD PTR [rsp+0xc8],0xfffffffffffffffe
   14000a823:	mov    QWORD PTR [rsp+0x110],rbx
   14000a82b:	mov    r14,rdx
   14000a82e:	mov    r15,rcx
   14000a831:	call   0x14002b874
   14000a836:	mov    rcx,rax
   14000a839:	xor    r12d,r12d
   14000a83c:	mov    r8d,r12d
   14000a83f:	test   rax,rax
   14000a842:	setne  r8b
   14000a846:	test   r8d,r8d
   14000a849:	jne    0x14000a856
   14000a84b:	mov    ecx,0x80004005
   14000a850:	call   0x140001430
   14000a855:	int3   
   14000a856:	mov    rax,QWORD PTR [rax]
   14000a859:	call   QWORD PTR [rax+0x18]
   14000a85c:	lea    rbx,[rax+0x18]
   14000a860:	mov    QWORD PTR [rsp+0x128],rbx
   14000a868:	mov    esi,r12d
   14000a86b:	mov    rdx,QWORD PTR [r14]
   14000a86e:	lea    rcx,[rdx-0x18]
   14000a872:	lea    rdi,[rbx-0x18]
   14000a876:	or     r13d,0xffffffff
   14000a87a:	cmp    rcx,rdi
   14000a87d:	je     0x14000a8d8
   14000a87f:	cmp    DWORD PTR [rdi+0x10],r12d
   14000a883:	jl     0x14000a8bf
   14000a885:	mov    rax,QWORD PTR [rdi]
   14000a888:	cmp    QWORD PTR [rcx],rax
   14000a88b:	jne    0x14000a8bf
   14000a88d:	call   0x140002da0
   14000a892:	mov    rbx,rax
   14000a895:	mov    ecx,r13d
   14000a898:	lock xadd DWORD PTR [rdi+0x10],ecx
   14000a89d:	add    ecx,r13d
   14000a8a0:	test   ecx,ecx
   14000a8a2:	jg     0x14000a8b1
   14000a8a4:	mov    rcx,QWORD PTR [rdi]
   14000a8a7:	mov    r8,QWORD PTR [rcx]
   14000a8aa:	mov    rdx,rdi
   14000a8ad:	call   QWORD PTR [r8+0x8]
   14000a8b1:	add    rbx,0x18
   14000a8b5:	mov    QWORD PTR [rsp+0x128],rbx
   14000a8bd:	jmp    0x14000a8d8
   14000a8bf:	mov    r8d,DWORD PTR [rdx-0x10]
   14000a8c3:	lea    rcx,[rsp+0x128]
   14000a8cb:	call   0x1400037d0
   14000a8d0:	mov    rbx,QWORD PTR [rsp+0x128]
   14000a8d8:	movsxd rdi,DWORD PTR [rbx-0x10]
   14000a8dc:	mov    ecx,0x1
   14000a8e1:	sub    ecx,DWORD PTR [rbx-0x8]
   14000a8e4:	mov    eax,DWORD PTR [rbx-0xc]
   14000a8e7:	sub    eax,edi
   14000a8e9:	or     eax,ecx
   14000a8eb:	jge    0x14000a904
   14000a8ed:	mov    edx,edi
   14000a8ef:	lea    rcx,[rsp+0x128]
   14000a8f7:	call   0x140002d40
   14000a8fc:	mov    rbx,QWORD PTR [rsp+0x128]
   14000a904:	lea    eax,[rdi+0x1]
   14000a907:	movsxd rdx,eax
   14000a90a:	mov    rcx,rbx
   14000a90d:	call   0x140046a70
   14000a912:	test   edi,edi
   14000a914:	js     0x14000b568
   14000a91a:	cmp    edi,DWORD PTR [rbx-0xc]
   14000a91d:	jg     0x14000b568
   14000a923:	lea    rbp,[rbx-0x10]
   14000a927:	mov    DWORD PTR [rbp+0x0],edi
   14000a92a:	mov    WORD PTR [rbx+rdi*2],si
   14000a92e:	lea    rdi,[rip+0x5bd2b]        # 0x140066660
   14000a935:	cmp    DWORD PTR [rbp+0x0],esi
   14000a938:	jl     0x14000aa88
   14000a93e:	lea    rdx,[rip+0x5bd03]        # 0x140066648
   14000a945:	mov    rcx,rbx
   14000a948:	call   0x140046660
   14000a94d:	test   rax,rax
   14000a950:	je     0x14000aa88
   14000a956:	sub    rax,rbx
   14000a959:	sar    rax,1
   14000a95c:	cmp    eax,0xffffffff
   14000a95f:	je     0x14000aa88
   14000a965:	lea    rax,[rsp+0x78]
   14000a96a:	mov    QWORD PTR [rsp+0x30],rax
   14000a96f:	call   0x14002b874
   14000a974:	mov    r11,rax
   14000a977:	mov    ecx,r12d
   14000a97a:	test   rax,rax
   14000a97d:	setne  cl
   14000a980:	test   ecx,ecx
   14000a982:	jne    0x14000a98f
   14000a984:	mov    ecx,0x80004005
   14000a989:	call   0x140001430
   14000a98e:	int3   
   14000a98f:	mov    rax,QWORD PTR [rax]
   14000a992:	mov    rcx,r11
   14000a995:	call   QWORD PTR [rax+0x18]
   14000a998:	add    rax,0x18
   14000a99c:	mov    QWORD PTR [rsp+0x78],rax
   14000a9a1:	test   rdi,0xffffffffffff0000
   14000a9a8:	jne    0x14000a9cb
   14000a9aa:	movzx  edi,di
   14000a9ad:	mov    ecx,edi
   14000a9af:	call   0x14002b860
   14000a9b4:	test   rax,rax
   14000a9b7:	je     0x14000a9d9
   14000a9b9:	mov    r8d,edi
   14000a9bc:	mov    rdx,rax
   14000a9bf:	lea    rcx,[rsp+0x78]
   14000a9c4:	call   0x140003650
   14000a9c9:	jmp    0x14000a9d9
   14000a9cb:	mov    rdx,rdi
   14000a9ce:	lea    rcx,[rsp+0x78]
   14000a9d3:	call   0x140003930
   14000a9d8:	nop
   14000a9d9:	mov    rdi,QWORD PTR [r14]
   14000a9dc:	mov    rcx,QWORD PTR [rdi-0x18]
   14000a9e0:	mov    rax,QWORD PTR [rcx]
   14000a9e3:	call   QWORD PTR [rax+0x20]
   14000a9e6:	mov    rcx,rax
   14000a9e9:	cmp    DWORD PTR [rdi-0x8],0x0
   14000a9ed:	jl     0x14000aa08
   14000a9ef:	cmp    rax,QWORD PTR [rdi-0x18]
   14000a9f3:	jne    0x14000aa08
   14000a9f5:	lea    rsi,[rdi-0x18]
   14000a9f9:	lock add DWORD PTR [rdi-0x8],0x1
   14000a9fe:	mov    rbx,QWORD PTR [rsp+0x128]
   14000aa06:	jmp    0x14000aa46
   14000aa08:	mov    rax,QWORD PTR [rax]
   14000aa0b:	mov    r8d,0x2
   14000aa11:	mov    edx,DWORD PTR [rdi-0x10]
   14000aa14:	call   QWORD PTR [rax]
   14000aa16:	mov    rsi,rax
   14000aa19:	test   rax,rax
   14000aa1c:	jne    0x14000aa24
   14000aa1e:	call   0x1400021a0
   14000aa23:	int3   
   14000aa24:	mov    eax,DWORD PTR [rdi-0x10]
   14000aa27:	mov    DWORD PTR [rsi+0x8],eax
   14000aa2a:	mov    eax,DWORD PTR [rdi-0x10]
   14000aa2d:	add    eax,0x1
   14000aa30:	movsxd rdx,eax
   14000aa33:	lea    r9,[rdx+rdx*1]
   14000aa37:	mov    r8,rdi
   14000aa3a:	add    rdx,rdx
   14000aa3d:	lea    rcx,[rsi+0x18]
   14000aa41:	call   0x1400466d0
   14000aa46:	lea    rax,[rsi+0x18]
   14000aa4a:	mov    QWORD PTR [rsp+0x80],rax
   14000aa52:	mov    DWORD PTR [rsp+0x28],0x1
   14000aa5a:	mov    DWORD PTR [rsp+0x20],0x1
   14000aa62:	lea    r9,[rsp+0x120]
   14000aa6a:	lea    r8,[rsp+0x78]
   14000aa6f:	lea    rdx,[rsp+0x80]
   14000aa77:	mov    rcx,r15
   14000aa7a:	call   0x140005a90
   14000aa7f:	mov    esi,eax
   14000aa81:	lea    rdi,[rip+0x5bbd8]        # 0x140066660
   14000aa88:	cmp    DWORD PTR [rbp+0x0],0x0
   14000aa8c:	jl     0x14000abd5
   14000aa92:	lea    rdx,[rip+0x5bb8f]        # 0x140066628
   14000aa99:	mov    rcx,rbx
   14000aa9c:	call   0x140046660
   14000aaa1:	test   rax,rax
   14000aaa4:	je     0x14000abd5
   14000aaaa:	sub    rax,rbx
   14000aaad:	sar    rax,1
   14000aab0:	cmp    eax,0xffffffff
   14000aab3:	je     0x14000abd5
   14000aab9:	lea    rax,[rsp+0x70]
   14000aabe:	mov    QWORD PTR [rsp+0x30],rax
   14000aac3:	call   0x14002b874
   14000aac8:	mov    r11,rax
   14000aacb:	mov    ecx,r12d
   14000aace:	test   rax,rax
   14000aad1:	setne  cl
   14000aad4:	test   ecx,ecx
   14000aad6:	jne    0x14000aae3
   14000aad8:	mov    ecx,0x80004005
   14000aadd:	call   0x140001430
   14000aae2:	int3   
   14000aae3:	mov    rax,QWORD PTR [rax]
   14000aae6:	mov    rcx,r11
   14000aae9:	call   QWORD PTR [rax+0x18]
   14000aaec:	add    rax,0x18
   14000aaf0:	mov    QWORD PTR [rsp+0x70],rax
   14000aaf5:	test   rdi,0xffffffffffff0000
   14000aafc:	jne    0x14000ab1f
   14000aafe:	movzx  edi,di
   14000ab01:	mov    ecx,edi
   14000ab03:	call   0x14002b860
   14000ab08:	test   rax,rax
   14000ab0b:	je     0x14000ab2d
   14000ab0d:	mov    r8d,edi
   14000ab10:	mov    rdx,rax
   14000ab13:	lea    rcx,[rsp+0x70]
   14000ab18:	call   0x140003650
   14000ab1d:	jmp    0x14000ab2d
   14000ab1f:	mov    rdx,rdi
   14000ab22:	lea    rcx,[rsp+0x70]
   14000ab27:	call   0x140003930
   14000ab2c:	nop
   14000ab2d:	mov    rdi,QWORD PTR [r14]
   14000ab30:	mov    rcx,QWORD PTR [rdi-0x18]
   14000ab34:	mov    rax,QWORD PTR [rcx]
   14000ab37:	call   QWORD PTR [rax+0x20]
   14000ab3a:	mov    rcx,rax
   14000ab3d:	cmp    DWORD PTR [rdi-0x8],0x0
   14000ab41:	jl     0x14000ab5c
   14000ab43:	cmp    rax,QWORD PTR [rdi-0x18]
   14000ab47:	jne    0x14000ab5c
   14000ab49:	lea    rsi,[rdi-0x18]
   14000ab4d:	lock add DWORD PTR [rdi-0x8],0x1
   14000ab52:	mov    rbx,QWORD PTR [rsp+0x128]
   14000ab5a:	jmp    0x14000ab9a
   14000ab5c:	mov    rax,QWORD PTR [rax]
   14000ab5f:	mov    r8d,0x2
   14000ab65:	mov    edx,DWORD PTR [rdi-0x10]
   14000ab68:	call   QWORD PTR [rax]
   14000ab6a:	mov    rsi,rax
   14000ab6d:	test   rax,rax
   14000ab70:	jne    0x14000ab78
   14000ab72:	call   0x1400021a0
   14000ab77:	int3   
   14000ab78:	mov    eax,DWORD PTR [rdi-0x10]
   14000ab7b:	mov    DWORD PTR [rsi+0x8],eax
   14000ab7e:	mov    eax,DWORD PTR [rdi-0x10]
   14000ab81:	add    eax,0x1
   14000ab84:	movsxd rdx,eax
   14000ab87:	lea    r9,[rdx+rdx*1]
   14000ab8b:	mov    r8,rdi
   14000ab8e:	add    rdx,rdx
   14000ab91:	lea    rcx,[rsi+0x18]
   14000ab95:	call   0x1400466d0
   14000ab9a:	lea    rax,[rsi+0x18]
   14000ab9e:	mov    QWORD PTR [rsp+0xb8],rax
   14000aba6:	mov    DWORD PTR [rsp+0x28],0x1
   14000abae:	mov    DWORD PTR [rsp+0x20],0x1
   14000abb6:	lea    r9,[rsp+0x120]
   14000abbe:	lea    r8,[rsp+0x70]
   14000abc3:	lea    rdx,[rsp+0xb8]
   14000abcb:	mov    rcx,r15
   14000abce:	call   0x140005a90
   14000abd3:	mov    esi,eax
   14000abd5:	lea    rdi,[rip+0x5ba44]        # 0x140066620
   14000abdc:	cmp    DWORD PTR [rbp+0x0],0x0
   14000abe0:	jl     0x14000ad30
   14000abe6:	lea    rdx,[rip+0x5ba1b]        # 0x140066608
   14000abed:	mov    rcx,rbx
   14000abf0:	call   0x140046660
   14000abf5:	test   rax,rax
   14000abf8:	je     0x14000ad30
   14000abfe:	sub    rax,rbx
   14000ac01:	sar    rax,1
   14000ac04:	cmp    eax,0xffffffff
   14000ac07:	je     0x14000ad30
   14000ac0d:	lea    rax,[rsp+0x60]
   14000ac12:	mov    QWORD PTR [rsp+0x30],rax
   14000ac17:	call   0x14002b874
   14000ac1c:	mov    r11,rax
   14000ac1f:	mov    ecx,r12d
   14000ac22:	test   rax,rax
   14000ac25:	setne  cl
   14000ac28:	test   ecx,ecx
   14000ac2a:	jne    0x14000ac37
   14000ac2c:	mov    ecx,0x80004005
   14000ac31:	call   0x140001430
   14000ac36:	int3   
   14000ac37:	mov    rax,QWORD PTR [rax]
   14000ac3a:	mov    rcx,r11
   14000ac3d:	call   QWORD PTR [rax+0x18]
   14000ac40:	add    rax,0x18
   14000ac44:	mov    QWORD PTR [rsp+0x60],rax
   14000ac49:	test   rdi,0xffffffffffff0000
   14000ac50:	jne    0x14000ac73
   14000ac52:	movzx  edi,di
   14000ac55:	mov    ecx,edi
   14000ac57:	call   0x14002b860
   14000ac5c:	test   rax,rax
   14000ac5f:	je     0x14000ac81
   14000ac61:	mov    r8d,edi
   14000ac64:	mov    rdx,rax
   14000ac67:	lea    rcx,[rsp+0x60]
   14000ac6c:	call   0x140003650
   14000ac71:	jmp    0x14000ac81
   14000ac73:	mov    rdx,rdi
   14000ac76:	lea    rcx,[rsp+0x60]
   14000ac7b:	call   0x140003930
   14000ac80:	nop
   14000ac81:	mov    rdi,QWORD PTR [r14]
   14000ac84:	mov    rcx,QWORD PTR [rdi-0x18]
   14000ac88:	mov    rax,QWORD PTR [rcx]
   14000ac8b:	call   QWORD PTR [rax+0x20]
   14000ac8e:	mov    rcx,rax
   14000ac91:	cmp    DWORD PTR [rdi-0x8],0x0
   14000ac95:	jl     0x14000acb0
   14000ac97:	cmp    rax,QWORD PTR [rdi-0x18]
   14000ac9b:	jne    0x14000acb0
   14000ac9d:	lea    rsi,[rdi-0x18]
   14000aca1:	lock add DWORD PTR [rdi-0x8],0x1
   14000aca6:	mov    rbx,QWORD PTR [rsp+0x128]
   14000acae:	jmp    0x14000acee
   14000acb0:	mov    rax,QWORD PTR [rax]
   14000acb3:	mov    r8d,0x2
   14000acb9:	mov    edx,DWORD PTR [rdi-0x10]
   14000acbc:	call   QWORD PTR [rax]
   14000acbe:	mov    rsi,rax
   14000acc1:	test   rax,rax
   14000acc4:	jne    0x14000accc
   14000acc6:	call   0x1400021a0
   14000accb:	int3   
   14000accc:	mov    eax,DWORD PTR [rdi-0x10]
   14000accf:	mov    DWORD PTR [rsi+0x8],eax
   14000acd2:	mov    eax,DWORD PTR [rdi-0x10]
   14000acd5:	add    eax,0x1
   14000acd8:	movsxd rdx,eax
   14000acdb:	lea    r9,[rdx+rdx*1]
   14000acdf:	mov    r8,rdi
   14000ace2:	add    rdx,rdx
   14000ace5:	lea    rcx,[rsi+0x18]
   14000ace9:	call   0x1400466d0
   14000acee:	lea    rax,[rsi+0x18]
   14000acf2:	mov    QWORD PTR [rsp+0x90],rax
   14000acfa:	mov    DWORD PTR [rsp+0x28],0x1
   14000ad02:	mov    DWORD PTR [rsp+0x20],0x1
   14000ad0a:	lea    r9,[rsp+0x120]
   14000ad12:	lea    r8,[rsp+0x60]
   14000ad17:	lea    rdx,[rsp+0x90]
   14000ad1f:	mov    rcx,r15
   14000ad22:	call   0x140005a90
   14000ad27:	mov    esi,eax
   14000ad29:	lea    rdi,[rip+0x5b8f0]        # 0x140066620
   14000ad30:	cmp    DWORD PTR [rbp+0x0],0x0
   14000ad34:	jl     0x14000ae7d
   14000ad3a:	lea    rdx,[rip+0x5b8a7]        # 0x1400665e8
   14000ad41:	mov    rcx,rbx
   14000ad44:	call   0x140046660
   14000ad49:	test   rax,rax
   14000ad4c:	je     0x14000ae7d
   14000ad52:	sub    rax,rbx
   14000ad55:	sar    rax,1
   14000ad58:	cmp    eax,0xffffffff
   14000ad5b:	je     0x14000ae7d
   14000ad61:	lea    rax,[rsp+0x50]
   14000ad66:	mov    QWORD PTR [rsp+0x30],rax
   14000ad6b:	call   0x14002b874
   14000ad70:	mov    r11,rax
   14000ad73:	mov    ecx,r12d
   14000ad76:	test   rax,rax
   14000ad79:	setne  cl
   14000ad7c:	test   ecx,ecx
   14000ad7e:	jne    0x14000ad8b
   14000ad80:	mov    ecx,0x80004005
   14000ad85:	call   0x140001430
   14000ad8a:	int3   
   14000ad8b:	mov    rax,QWORD PTR [rax]
   14000ad8e:	mov    rcx,r11
   14000ad91:	call   QWORD PTR [rax+0x18]
   14000ad94:	add    rax,0x18
   14000ad98:	mov    QWORD PTR [rsp+0x50],rax
   14000ad9d:	test   rdi,0xffffffffffff0000
   14000ada4:	jne    0x14000adc7
   14000ada6:	movzx  edi,di
   14000ada9:	mov    ecx,edi
   14000adab:	call   0x14002b860
   14000adb0:	test   rax,rax
   14000adb3:	je     0x14000add5
   14000adb5:	mov    r8d,edi
   14000adb8:	mov    rdx,rax
   14000adbb:	lea    rcx,[rsp+0x50]
   14000adc0:	call   0x140003650
   14000adc5:	jmp    0x14000add5
   14000adc7:	mov    rdx,rdi
   14000adca:	lea    rcx,[rsp+0x50]
   14000adcf:	call   0x140003930
   14000add4:	nop
   14000add5:	mov    rdi,QWORD PTR [r14]
   14000add8:	mov    rcx,QWORD PTR [rdi-0x18]
   14000addc:	mov    rax,QWORD PTR [rcx]
   14000addf:	call   QWORD PTR [rax+0x20]
   14000ade2:	mov    rcx,rax
   14000ade5:	cmp    DWORD PTR [rdi-0x8],0x0
   14000ade9:	jl     0x14000ae04
   14000adeb:	cmp    rax,QWORD PTR [rdi-0x18]
   14000adef:	jne    0x14000ae04
   14000adf1:	lea    rsi,[rdi-0x18]
   14000adf5:	lock add DWORD PTR [rdi-0x8],0x1
   14000adfa:	mov    rbx,QWORD PTR [rsp+0x128]
   14000ae02:	jmp    0x14000ae42
   14000ae04:	mov    rax,QWORD PTR [rax]
   14000ae07:	mov    r8d,0x2
   14000ae0d:	mov    edx,DWORD PTR [rdi-0x10]
   14000ae10:	call   QWORD PTR [rax]
   14000ae12:	mov    rsi,rax
   14000ae15:	test   rax,rax
   14000ae18:	jne    0x14000ae20
   14000ae1a:	call   0x1400021a0
   14000ae1f:	int3   
   14000ae20:	mov    eax,DWORD PTR [rdi-0x10]
   14000ae23:	mov    DWORD PTR [rsi+0x8],eax
   14000ae26:	mov    eax,DWORD PTR [rdi-0x10]
   14000ae29:	add    eax,0x1
   14000ae2c:	movsxd rdx,eax
   14000ae2f:	lea    r9,[rdx+rdx*1]
   14000ae33:	mov    r8,rdi
   14000ae36:	add    rdx,rdx
   14000ae39:	lea    rcx,[rsi+0x18]
   14000ae3d:	call   0x1400466d0
   14000ae42:	lea    rax,[rsi+0x18]
   14000ae46:	mov    QWORD PTR [rsp+0xb0],rax
   14000ae4e:	mov    DWORD PTR [rsp+0x28],0x1
   14000ae56:	mov    DWORD PTR [rsp+0x20],0x1
   14000ae5e:	lea    r9,[rsp+0x120]
   14000ae66:	lea    r8,[rsp+0x50]
   14000ae6b:	lea    rdx,[rsp+0xb0]
   14000ae73:	mov    rcx,r15
   14000ae76:	call   0x140005a90
   14000ae7b:	mov    esi,eax
   14000ae7d:	cmp    DWORD PTR [rbp+0x0],0x0
   14000ae81:	jl     0x14000afce
   14000ae87:	lea    rdx,[rip+0x5b73a]        # 0x1400665c8
   14000ae8e:	mov    rcx,rbx
   14000ae91:	call   0x140046660
   14000ae96:	test   rax,rax
   14000ae99:	je     0x14000afce
   14000ae9f:	sub    rax,rbx
   14000aea2:	sar    rax,1
   14000aea5:	cmp    eax,0xffffffff
   14000aea8:	je     0x14000afce
   14000aeae:	lea    rax,[rsp+0x38]
   14000aeb3:	mov    QWORD PTR [rsp+0x30],rax
   14000aeb8:	call   0x14002b874
   14000aebd:	mov    r11,rax
   14000aec0:	mov    ecx,r12d
   14000aec3:	test   rax,rax
   14000aec6:	setne  cl
   14000aec9:	test   ecx,ecx
   14000aecb:	jne    0x14000aed8
   14000aecd:	mov    ecx,0x80004005
   14000aed2:	call   0x140001430
   14000aed7:	int3   
   14000aed8:	mov    rax,QWORD PTR [rax]
   14000aedb:	mov    rcx,r11
   14000aede:	call   QWORD PTR [rax+0x18]
   14000aee1:	add    rax,0x18
   14000aee5:	mov    QWORD PTR [rsp+0x38],rax
   14000aeea:	lea    rdx,[rip+0x5b72f]        # 0x140066620
   14000aef1:	test   rdx,0xffffffffffff0000
   14000aef8:	jne    0x14000af1b
   14000aefa:	movzx  edi,dx
   14000aefd:	mov    ecx,edi
   14000aeff:	call   0x14002b860
   14000af04:	test   rax,rax
   14000af07:	je     0x14000af26
   14000af09:	mov    r8d,edi
   14000af0c:	mov    rdx,rax
   14000af0f:	lea    rcx,[rsp+0x38]
   14000af14:	call   0x140003650
   14000af19:	jmp    0x14000af26
   14000af1b:	lea    rcx,[rsp+0x38]
   14000af20:	call   0x140003930
   14000af25:	nop
   14000af26:	mov    rdi,QWORD PTR [r14]
   14000af29:	mov    rcx,QWORD PTR [rdi-0x18]
   14000af2d:	mov    rax,QWORD PTR [rcx]
   14000af30:	call   QWORD PTR [rax+0x20]
   14000af33:	mov    rcx,rax
   14000af36:	cmp    DWORD PTR [rdi-0x8],0x0
   14000af3a:	jl     0x14000af55
   14000af3c:	cmp    rax,QWORD PTR [rdi-0x18]
   14000af40:	jne    0x14000af55
   14000af42:	lea    rsi,[rdi-0x18]
   14000af46:	lock add DWORD PTR [rdi-0x8],0x1
   14000af4b:	mov    rbx,QWORD PTR [rsp+0x128]
   14000af53:	jmp    0x14000af93
   14000af55:	mov    rax,QWORD PTR [rax]
   14000af58:	mov    r8d,0x2
   14000af5e:	mov    edx,DWORD PTR [rdi-0x10]
   14000af61:	call   QWORD PTR [rax]
   14000af63:	mov    rsi,rax
   14000af66:	test   rax,rax
   14000af69:	jne    0x14000af71
   14000af6b:	call   0x1400021a0
   14000af70:	int3   
   14000af71:	mov    eax,DWORD PTR [rdi-0x10]
   14000af74:	mov    DWORD PTR [rsi+0x8],eax
   14000af77:	mov    eax,DWORD PTR [rdi-0x10]
   14000af7a:	add    eax,0x1
   14000af7d:	movsxd rdx,eax
   14000af80:	lea    r9,[rdx+rdx*1]
   14000af84:	mov    r8,rdi
   14000af87:	add    rdx,rdx
   14000af8a:	lea    rcx,[rsi+0x18]
   14000af8e:	call   0x1400466d0
   14000af93:	lea    rax,[rsi+0x18]
   14000af97:	mov    QWORD PTR [rsp+0xa0],rax
   14000af9f:	mov    DWORD PTR [rsp+0x28],0x1
   14000afa7:	mov    DWORD PTR [rsp+0x20],0x1
   14000afaf:	lea    r9,[rsp+0x120]
   14000afb7:	lea    r8,[rsp+0x38]
   14000afbc:	lea    rdx,[rsp+0xa0]
   14000afc4:	mov    rcx,r15
   14000afc7:	call   0x140005a90
   14000afcc:	mov    esi,eax
   14000afce:	lea    rdi,[rip+0x5b5eb]        # 0x1400665c0
   14000afd5:	cmp    DWORD PTR [rbp+0x0],0x0
   14000afd9:	jl     0x14000b129
   14000afdf:	lea    rdx,[rip+0x5b5c2]        # 0x1400665a8
   14000afe6:	mov    rcx,rbx
   14000afe9:	call   0x140046660
   14000afee:	test   rax,rax
   14000aff1:	je     0x14000b129
   14000aff7:	sub    rax,rbx
   14000affa:	sar    rax,1
   14000affd:	cmp    eax,0xffffffff
   14000b000:	je     0x14000b129
   14000b006:	lea    rax,[rsp+0x40]
   14000b00b:	mov    QWORD PTR [rsp+0x30],rax
   14000b010:	call   0x14002b874
   14000b015:	mov    r11,rax
   14000b018:	mov    ecx,r12d
   14000b01b:	test   rax,rax
   14000b01e:	setne  cl
   14000b021:	test   ecx,ecx
   14000b023:	jne    0x14000b030
   14000b025:	mov    ecx,0x80004005
   14000b02a:	call   0x140001430
   14000b02f:	int3   
   14000b030:	mov    rax,QWORD PTR [rax]
   14000b033:	mov    rcx,r11
   14000b036:	call   QWORD PTR [rax+0x18]
   14000b039:	add    rax,0x18
   14000b03d:	mov    QWORD PTR [rsp+0x40],rax
   14000b042:	test   rdi,0xffffffffffff0000
   14000b049:	jne    0x14000b06c
   14000b04b:	movzx  edi,di
   14000b04e:	mov    ecx,edi
   14000b050:	call   0x14002b860
   14000b055:	test   rax,rax
   14000b058:	je     0x14000b07a
   14000b05a:	mov    r8d,edi
   14000b05d:	mov    rdx,rax
   14000b060:	lea    rcx,[rsp+0x40]
   14000b065:	call   0x140003650
   14000b06a:	jmp    0x14000b07a
   14000b06c:	mov    rdx,rdi
   14000b06f:	lea    rcx,[rsp+0x40]
   14000b074:	call   0x140003930
   14000b079:	nop
   14000b07a:	mov    rdi,QWORD PTR [r14]
   14000b07d:	mov    rcx,QWORD PTR [rdi-0x18]
   14000b081:	mov    rax,QWORD PTR [rcx]
   14000b084:	call   QWORD PTR [rax+0x20]
   14000b087:	mov    rcx,rax
   14000b08a:	cmp    DWORD PTR [rdi-0x8],0x0
   14000b08e:	jl     0x14000b0a9
   14000b090:	cmp    rax,QWORD PTR [rdi-0x18]
   14000b094:	jne    0x14000b0a9
   14000b096:	lea    rsi,[rdi-0x18]
   14000b09a:	lock add DWORD PTR [rdi-0x8],0x1
   14000b09f:	mov    rbx,QWORD PTR [rsp+0x128]
   14000b0a7:	jmp    0x14000b0e7
   14000b0a9:	mov    rax,QWORD PTR [rax]
   14000b0ac:	mov    r8d,0x2
   14000b0b2:	mov    edx,DWORD PTR [rdi-0x10]
   14000b0b5:	call   QWORD PTR [rax]
   14000b0b7:	mov    rsi,rax
   14000b0ba:	test   rax,rax
   14000b0bd:	jne    0x14000b0c5
   14000b0bf:	call   0x1400021a0
   14000b0c4:	int3   
   14000b0c5:	mov    eax,DWORD PTR [rdi-0x10]
   14000b0c8:	mov    DWORD PTR [rsi+0x8],eax
   14000b0cb:	mov    eax,DWORD PTR [rdi-0x10]
   14000b0ce:	add    eax,0x1
   14000b0d1:	movsxd rdx,eax
   14000b0d4:	lea    r9,[rdx+rdx*1]
   14000b0d8:	mov    r8,rdi
   14000b0db:	add    rdx,rdx
   14000b0de:	lea    rcx,[rsi+0x18]
   14000b0e2:	call   0x1400466d0
   14000b0e7:	lea    rax,[rsi+0x18]
   14000b0eb:	mov    QWORD PTR [rsp+0xc0],rax
   14000b0f3:	mov    DWORD PTR [rsp+0x28],0x1
   14000b0fb:	mov    DWORD PTR [rsp+0x20],0x1
   14000b103:	lea    r9,[rsp+0x120]
   14000b10b:	lea    r8,[rsp+0x40]
   14000b110:	lea    rdx,[rsp+0xc0]
   14000b118:	mov    rcx,r15
   14000b11b:	call   0x140005a90
   14000b120:	mov    esi,eax
   14000b122:	lea    rdi,[rip+0x5b497]        # 0x1400665c0
   14000b129:	cmp    DWORD PTR [rbp+0x0],0x0
   14000b12d:	jl     0x14000b276
   14000b133:	lea    rdx,[rip+0x5b44e]        # 0x140066588
   14000b13a:	mov    rcx,rbx
   14000b13d:	call   0x140046660
   14000b142:	test   rax,rax
   14000b145:	je     0x14000b276
   14000b14b:	sub    rax,rbx
   14000b14e:	sar    rax,1
   14000b151:	cmp    eax,0xffffffff
   14000b154:	je     0x14000b276
   14000b15a:	lea    rax,[rsp+0x48]
   14000b15f:	mov    QWORD PTR [rsp+0x30],rax
   14000b164:	call   0x14002b874
   14000b169:	mov    r11,rax
   14000b16c:	mov    ecx,r12d
   14000b16f:	test   rax,rax
   14000b172:	setne  cl
   14000b175:	test   ecx,ecx
   14000b177:	jne    0x14000b184
   14000b179:	mov    ecx,0x80004005
   14000b17e:	call   0x140001430
   14000b183:	int3   
   14000b184:	mov    rax,QWORD PTR [rax]
   14000b187:	mov    rcx,r11
   14000b18a:	call   QWORD PTR [rax+0x18]
   14000b18d:	add    rax,0x18
   14000b191:	mov    QWORD PTR [rsp+0x48],rax
   14000b196:	test   rdi,0xffffffffffff0000
   14000b19d:	jne    0x14000b1c0
   14000b19f:	movzx  edi,di
   14000b1a2:	mov    ecx,edi
   14000b1a4:	call   0x14002b860
   14000b1a9:	test   rax,rax
   14000b1ac:	je     0x14000b1ce
   14000b1ae:	mov    r8d,edi
   14000b1b1:	mov    rdx,rax
   14000b1b4:	lea    rcx,[rsp+0x48]
   14000b1b9:	call   0x140003650
   14000b1be:	jmp    0x14000b1ce
   14000b1c0:	mov    rdx,rdi
   14000b1c3:	lea    rcx,[rsp+0x48]
   14000b1c8:	call   0x140003930
   14000b1cd:	nop
   14000b1ce:	mov    rdi,QWORD PTR [r14]
   14000b1d1:	mov    rcx,QWORD PTR [rdi-0x18]
   14000b1d5:	mov    rax,QWORD PTR [rcx]
   14000b1d8:	call   QWORD PTR [rax+0x20]
   14000b1db:	mov    rcx,rax
   14000b1de:	cmp    DWORD PTR [rdi-0x8],0x0
   14000b1e2:	jl     0x14000b1fd
   14000b1e4:	cmp    rax,QWORD PTR [rdi-0x18]
   14000b1e8:	jne    0x14000b1fd
   14000b1ea:	lea    rsi,[rdi-0x18]
   14000b1ee:	lock add DWORD PTR [rdi-0x8],0x1
   14000b1f3:	mov    rbx,QWORD PTR [rsp+0x128]
   14000b1fb:	jmp    0x14000b23b
   14000b1fd:	mov    rax,QWORD PTR [rax]
   14000b200:	mov    r8d,0x2
   14000b206:	mov    edx,DWORD PTR [rdi-0x10]
   14000b209:	call   QWORD PTR [rax]
   14000b20b:	mov    rsi,rax
   14000b20e:	test   rax,rax
   14000b211:	jne    0x14000b219
   14000b213:	call   0x1400021a0
   14000b218:	int3   
   14000b219:	mov    eax,DWORD PTR [rdi-0x10]
   14000b21c:	mov    DWORD PTR [rsi+0x8],eax
   14000b21f:	mov    eax,DWORD PTR [rdi-0x10]
   14000b222:	add    eax,0x1
   14000b225:	movsxd rdx,eax
   14000b228:	lea    r9,[rdx+rdx*1]
   14000b22c:	mov    r8,rdi
   14000b22f:	add    rdx,rdx
   14000b232:	lea    rcx,[rsi+0x18]
   14000b236:	call   0x1400466d0
   14000b23b:	lea    rax,[rsi+0x18]
   14000b23f:	mov    QWORD PTR [rsp+0x88],rax
   14000b247:	mov    DWORD PTR [rsp+0x28],0x1
   14000b24f:	mov    DWORD PTR [rsp+0x20],0x1
   14000b257:	lea    r9,[rsp+0x120]
   14000b25f:	lea    r8,[rsp+0x48]
   14000b264:	lea    rdx,[rsp+0x88]
   14000b26c:	mov    rcx,r15
   14000b26f:	call   0x140005a90
   14000b274:	mov    esi,eax
   14000b276:	lea    rdi,[rip+0x5b303]        # 0x140066580
   14000b27d:	cmp    DWORD PTR [rbp+0x0],0x0
   14000b281:	jl     0x14000b3d1
   14000b287:	lea    rdx,[rip+0x5b2da]        # 0x140066568
   14000b28e:	mov    rcx,rbx
   14000b291:	call   0x140046660
   14000b296:	test   rax,rax
   14000b299:	je     0x14000b3d1
   14000b29f:	sub    rax,rbx
   14000b2a2:	sar    rax,1
   14000b2a5:	cmp    eax,0xffffffff
   14000b2a8:	je     0x14000b3d1
   14000b2ae:	lea    rax,[rsp+0x58]
   14000b2b3:	mov    QWORD PTR [rsp+0x30],rax
   14000b2b8:	call   0x14002b874
   14000b2bd:	mov    r11,rax
   14000b2c0:	mov    ecx,r12d
   14000b2c3:	test   rax,rax
   14000b2c6:	setne  cl
   14000b2c9:	test   ecx,ecx
   14000b2cb:	jne    0x14000b2d8
   14000b2cd:	mov    ecx,0x80004005
   14000b2d2:	call   0x140001430
   14000b2d7:	int3   
   14000b2d8:	mov    rax,QWORD PTR [rax]
   14000b2db:	mov    rcx,r11
   14000b2de:	call   QWORD PTR [rax+0x18]
   14000b2e1:	add    rax,0x18
   14000b2e5:	mov    QWORD PTR [rsp+0x58],rax
   14000b2ea:	test   rdi,0xffffffffffff0000
   14000b2f1:	jne    0x14000b314
   14000b2f3:	movzx  edi,di
   14000b2f6:	mov    ecx,edi
   14000b2f8:	call   0x14002b860
   14000b2fd:	test   rax,rax
   14000b300:	je     0x14000b322
   14000b302:	mov    r8d,edi
   14000b305:	mov    rdx,rax
   14000b308:	lea    rcx,[rsp+0x58]
   14000b30d:	call   0x140003650
   14000b312:	jmp    0x14000b322
   14000b314:	mov    rdx,rdi
   14000b317:	lea    rcx,[rsp+0x58]
   14000b31c:	call   0x140003930
   14000b321:	nop
   14000b322:	mov    rdi,QWORD PTR [r14]
   14000b325:	mov    rcx,QWORD PTR [rdi-0x18]
   14000b329:	mov    rax,QWORD PTR [rcx]
   14000b32c:	call   QWORD PTR [rax+0x20]
   14000b32f:	mov    rcx,rax
   14000b332:	cmp    DWORD PTR [rdi-0x8],0x0
   14000b336:	jl     0x14000b351
   14000b338:	cmp    rax,QWORD PTR [rdi-0x18]
   14000b33c:	jne    0x14000b351
   14000b33e:	lea    rsi,[rdi-0x18]
   14000b342:	lock add DWORD PTR [rdi-0x8],0x1
   14000b347:	mov    rbx,QWORD PTR [rsp+0x128]
   14000b34f:	jmp    0x14000b38f
   14000b351:	mov    rax,QWORD PTR [rax]
   14000b354:	mov    r8d,0x2
   14000b35a:	mov    edx,DWORD PTR [rdi-0x10]
   14000b35d:	call   QWORD PTR [rax]
   14000b35f:	mov    rsi,rax
   14000b362:	test   rax,rax
   14000b365:	jne    0x14000b36d
   14000b367:	call   0x1400021a0
   14000b36c:	int3   
   14000b36d:	mov    eax,DWORD PTR [rdi-0x10]
   14000b370:	mov    DWORD PTR [rsi+0x8],eax
   14000b373:	mov    eax,DWORD PTR [rdi-0x10]
   14000b376:	add    eax,0x1
   14000b379:	movsxd rdx,eax
   14000b37c:	lea    r9,[rdx+rdx*1]
   14000b380:	mov    r8,rdi
   14000b383:	add    rdx,rdx
   14000b386:	lea    rcx,[rsi+0x18]
   14000b38a:	call   0x1400466d0
   14000b38f:	lea    rax,[rsi+0x18]
   14000b393:	mov    QWORD PTR [rsp+0x98],rax
   14000b39b:	mov    DWORD PTR [rsp+0x28],0x1
   14000b3a3:	mov    DWORD PTR [rsp+0x20],0x1
   14000b3ab:	lea    r9,[rsp+0x120]
   14000b3b3:	lea    r8,[rsp+0x58]
   14000b3b8:	lea    rdx,[rsp+0x98]
   14000b3c0:	mov    rcx,r15
   14000b3c3:	call   0x140005a90
   14000b3c8:	mov    esi,eax
   14000b3ca:	lea    rdi,[rip+0x5b1af]        # 0x140066580
   14000b3d1:	cmp    DWORD PTR [rbp+0x0],0x0
   14000b3d5:	jl     0x14000b51a
   14000b3db:	lea    rdx,[rip+0x5b16e]        # 0x140066550
   14000b3e2:	mov    rcx,rbx
   14000b3e5:	call   0x140046660
   14000b3ea:	test   rax,rax
   14000b3ed:	je     0x14000b51a
   14000b3f3:	sub    rax,rbx
   14000b3f6:	sar    rax,1
   14000b3f9:	cmp    eax,0xffffffff
   14000b3fc:	je     0x14000b51a
   14000b402:	lea    rax,[rsp+0x68]
   14000b407:	mov    QWORD PTR [rsp+0x30],rax
   14000b40c:	call   0x14002b874
   14000b411:	mov    rcx,rax
   14000b414:	test   rax,rax
   14000b417:	setne  r12b
   14000b41b:	test   r12d,r12d
   14000b41e:	jne    0x14000b42b
   14000b420:	mov    ecx,0x80004005
   14000b425:	call   0x140001430
   14000b42a:	int3   
   14000b42b:	mov    rax,QWORD PTR [rax]
   14000b42e:	call   QWORD PTR [rax+0x18]
   14000b431:	add    rax,0x18
   14000b435:	mov    QWORD PTR [rsp+0x68],rax
   14000b43a:	test   rdi,0xffffffffffff0000
   14000b441:	jne    0x14000b464
   14000b443:	movzx  edi,di
   14000b446:	mov    ecx,edi
   14000b448:	call   0x14002b860
   14000b44d:	test   rax,rax
   14000b450:	je     0x14000b472
   14000b452:	mov    r8d,edi
   14000b455:	mov    rdx,rax
   14000b458:	lea    rcx,[rsp+0x68]
   14000b45d:	call   0x140003650
   14000b462:	jmp    0x14000b472
   14000b464:	mov    rdx,rdi
   14000b467:	lea    rcx,[rsp+0x68]
   14000b46c:	call   0x140003930
   14000b471:	nop
   14000b472:	mov    rdi,QWORD PTR [r14]
   14000b475:	mov    rcx,QWORD PTR [rdi-0x18]
   14000b479:	mov    rax,QWORD PTR [rcx]
   14000b47c:	call   QWORD PTR [rax+0x20]
   14000b47f:	mov    rcx,rax
   14000b482:	cmp    DWORD PTR [rdi-0x8],0x0
   14000b486:	jl     0x14000b4a1
   14000b488:	cmp    rax,QWORD PTR [rdi-0x18]
   14000b48c:	jne    0x14000b4a1
   14000b48e:	lea    rsi,[rdi-0x18]
   14000b492:	lock add DWORD PTR [rdi-0x8],0x1
   14000b497:	mov    rbx,QWORD PTR [rsp+0x128]
   14000b49f:	jmp    0x14000b4df
   14000b4a1:	mov    rax,QWORD PTR [rax]
   14000b4a4:	mov    r8d,0x2
   14000b4aa:	mov    edx,DWORD PTR [rdi-0x10]
   14000b4ad:	call   QWORD PTR [rax]
   14000b4af:	mov    rsi,rax
   14000b4b2:	test   rax,rax
   14000b4b5:	jne    0x14000b4bd
   14000b4b7:	call   0x1400021a0
   14000b4bc:	int3   
   14000b4bd:	mov    eax,DWORD PTR [rdi-0x10]
   14000b4c0:	mov    DWORD PTR [rsi+0x8],eax
   14000b4c3:	mov    eax,DWORD PTR [rdi-0x10]
   14000b4c6:	add    eax,0x1
   14000b4c9:	movsxd rdx,eax
   14000b4cc:	lea    r9,[rdx+rdx*1]
   14000b4d0:	mov    r8,rdi
   14000b4d3:	add    rdx,rdx
   14000b4d6:	lea    rcx,[rsi+0x18]
   14000b4da:	call   0x1400466d0
   14000b4df:	lea    rax,[rsi+0x18]
   14000b4e3:	mov    QWORD PTR [rsp+0xa8],rax
   14000b4eb:	mov    DWORD PTR [rsp+0x28],0x1
   14000b4f3:	mov    DWORD PTR [rsp+0x20],0x1
   14000b4fb:	lea    r9,[rsp+0x120]
   14000b503:	lea    r8,[rsp+0x68]
   14000b508:	lea    rdx,[rsp+0xa8]
   14000b510:	mov    rcx,r15
   14000b513:	call   0x140005a90
   14000b518:	mov    esi,eax
   14000b51a:	test   esi,esi
   14000b51c:	je     0x14000b52a
   14000b51e:	mov    ecx,0x7d0
   14000b523:	call   QWORD PTR [rip+0x5905f]        # 0x140064588
   14000b529:	nop
   14000b52a:	lea    rdx,[rbx-0x18]
   14000b52e:	mov    eax,r13d
   14000b531:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b536:	add    eax,0xffffffff
   14000b539:	test   eax,eax
   14000b53b:	jg     0x14000b547
   14000b53d:	mov    rcx,QWORD PTR [rdx]
   14000b540:	mov    rax,QWORD PTR [rcx]
   14000b543:	call   QWORD PTR [rax+0x8]
   14000b546:	nop
   14000b547:	mov    rdx,QWORD PTR [r14]
   14000b54a:	sub    rdx,0x18
   14000b54e:	lock xadd DWORD PTR [rdx+0x10],r13d
   14000b554:	add    r13d,0xffffffff
   14000b558:	test   r13d,r13d
   14000b55b:	jg     0x14000b573
   14000b55d:	mov    rcx,QWORD PTR [rdx]
   14000b560:	mov    rax,QWORD PTR [rcx]
   14000b563:	call   QWORD PTR [rax+0x8]
   14000b566:	jmp    0x14000b573
   14000b568:	mov    ecx,0x80070057
   14000b56d:	call   0x140001430
   14000b572:	nop
   14000b573:	mov    rbx,QWORD PTR [rsp+0x110]
   14000b57b:	add    rsp,0xd0
   14000b582:	pop    r15
   14000b584:	pop    r14
   14000b586:	pop    r13
   14000b588:	pop    r12
   14000b58a:	pop    rdi
   14000b58b:	pop    rsi
   14000b58c:	pop    rbp
   14000b58d:	ret    
   14000b58e:	int3   
   14000b58f:	int3   
   14000b590:	rex push rbp
   14000b592:	sub    rsp,0x20
   14000b596:	mov    rbp,rdx
   14000b599:	mov    rcx,QWORD PTR [rbp+0x118]
   14000b5a0:	call   0x1400010c0
   14000b5a5:	add    rsp,0x20
   14000b5a9:	pop    rbp
   14000b5aa:	ret    
   14000b5ab:	int3   
   14000b5ac:	int3   
   14000b5ad:	int3   
   14000b5ae:	int3   
   14000b5af:	int3   
   14000b5b0:	rex push rbp
   14000b5b2:	sub    rsp,0x20
   14000b5b6:	mov    rbp,rdx
   14000b5b9:	lea    rcx,[rbp+0x128]
   14000b5c0:	call   0x1400010c0
   14000b5c5:	add    rsp,0x20
   14000b5c9:	pop    rbp
   14000b5ca:	ret    
   14000b5cb:	int3   
   14000b5cc:	int3   
   14000b5cd:	int3   
   14000b5ce:	int3   
   14000b5cf:	int3   
   14000b5d0:	rex push rbp
   14000b5d2:	sub    rsp,0x20
   14000b5d6:	mov    rbp,rdx
   14000b5d9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b5dd:	call   0x140001090
   14000b5e2:	add    rsp,0x20
   14000b5e6:	pop    rbp
   14000b5e7:	ret    
   14000b5e8:	int3   
   14000b5e9:	int3   
   14000b5ea:	int3   
   14000b5eb:	int3   
   14000b5ec:	int3   
   14000b5ed:	int3   
   14000b5ee:	int3   
   14000b5ef:	int3   
   14000b5f0:	rex push rbp
   14000b5f2:	sub    rsp,0x20
   14000b5f6:	mov    rbp,rdx
   14000b5f9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b5fd:	call   0x1400010c0
   14000b602:	add    rsp,0x20
   14000b606:	pop    rbp
   14000b607:	ret    
   14000b608:	int3   
   14000b609:	int3   
   14000b60a:	int3   
   14000b60b:	int3   
   14000b60c:	int3   
   14000b60d:	int3   
   14000b60e:	int3   
   14000b60f:	int3   
   14000b610:	rex push rbp
   14000b612:	sub    rsp,0x20
   14000b616:	mov    rbp,rdx
   14000b619:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b61d:	call   0x140001090
   14000b622:	add    rsp,0x20
   14000b626:	pop    rbp
   14000b627:	ret    
   14000b628:	int3   
   14000b629:	int3   
   14000b62a:	int3   
   14000b62b:	int3   
   14000b62c:	int3   
   14000b62d:	int3   
   14000b62e:	int3   
   14000b62f:	int3   
   14000b630:	rex push rbp
   14000b632:	sub    rsp,0x20
   14000b636:	mov    rbp,rdx
   14000b639:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b63d:	call   0x1400010c0
   14000b642:	add    rsp,0x20
   14000b646:	pop    rbp
   14000b647:	ret    
   14000b648:	int3   
   14000b649:	int3   
   14000b64a:	int3   
   14000b64b:	int3   
   14000b64c:	int3   
   14000b64d:	int3   
   14000b64e:	int3   
   14000b64f:	int3   
   14000b650:	rex push rbp
   14000b652:	sub    rsp,0x20
   14000b656:	mov    rbp,rdx
   14000b659:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b65d:	call   0x140001090
   14000b662:	add    rsp,0x20
   14000b666:	pop    rbp
   14000b667:	ret    
   14000b668:	int3   
   14000b669:	int3   
   14000b66a:	int3   
   14000b66b:	int3   
   14000b66c:	int3   
   14000b66d:	int3   
   14000b66e:	int3   
   14000b66f:	int3   
   14000b670:	rex push rbp
   14000b672:	sub    rsp,0x20
   14000b676:	mov    rbp,rdx
   14000b679:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b67d:	call   0x1400010c0
   14000b682:	add    rsp,0x20
   14000b686:	pop    rbp
   14000b687:	ret    
   14000b688:	int3   
   14000b689:	int3   
   14000b68a:	int3   
   14000b68b:	int3   
   14000b68c:	int3   
   14000b68d:	int3   
   14000b68e:	int3   
   14000b68f:	int3   
   14000b690:	rex push rbp
   14000b692:	sub    rsp,0x20
   14000b696:	mov    rbp,rdx
   14000b699:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b69d:	call   0x140001090
   14000b6a2:	add    rsp,0x20
   14000b6a6:	pop    rbp
   14000b6a7:	ret    
   14000b6a8:	int3   
   14000b6a9:	int3   
   14000b6aa:	int3   
   14000b6ab:	int3   
   14000b6ac:	int3   
   14000b6ad:	int3   
   14000b6ae:	int3   
   14000b6af:	int3   
   14000b6b0:	rex push rbp
   14000b6b2:	sub    rsp,0x20
   14000b6b6:	mov    rbp,rdx
   14000b6b9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b6bd:	call   0x1400010c0
   14000b6c2:	add    rsp,0x20
   14000b6c6:	pop    rbp
   14000b6c7:	ret    
   14000b6c8:	int3   
   14000b6c9:	int3   
   14000b6ca:	int3   
   14000b6cb:	int3   
   14000b6cc:	int3   
   14000b6cd:	int3   
   14000b6ce:	int3   
   14000b6cf:	int3   
   14000b6d0:	rex push rbp
   14000b6d2:	sub    rsp,0x20
   14000b6d6:	mov    rbp,rdx
   14000b6d9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b6dd:	call   0x140001090
   14000b6e2:	add    rsp,0x20
   14000b6e6:	pop    rbp
   14000b6e7:	ret    
   14000b6e8:	int3   
   14000b6e9:	int3   
   14000b6ea:	int3   
   14000b6eb:	int3   
   14000b6ec:	int3   
   14000b6ed:	int3   
   14000b6ee:	int3   
   14000b6ef:	int3   
   14000b6f0:	rex push rbp
   14000b6f2:	sub    rsp,0x20
   14000b6f6:	mov    rbp,rdx
   14000b6f9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b6fd:	call   0x1400010c0
   14000b702:	add    rsp,0x20
   14000b706:	pop    rbp
   14000b707:	ret    
   14000b708:	int3   
   14000b709:	int3   
   14000b70a:	int3   
   14000b70b:	int3   
   14000b70c:	int3   
   14000b70d:	int3   
   14000b70e:	int3   
   14000b70f:	int3   
   14000b710:	rex push rbp
   14000b712:	sub    rsp,0x20
   14000b716:	mov    rbp,rdx
   14000b719:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b71d:	call   0x140001090
   14000b722:	add    rsp,0x20
   14000b726:	pop    rbp
   14000b727:	ret    
   14000b728:	int3   
   14000b729:	int3   
   14000b72a:	int3   
   14000b72b:	int3   
   14000b72c:	int3   
   14000b72d:	int3   
   14000b72e:	int3   
   14000b72f:	int3   
   14000b730:	rex push rbp
   14000b732:	sub    rsp,0x20
   14000b736:	mov    rbp,rdx
   14000b739:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b73d:	call   0x1400010c0
   14000b742:	add    rsp,0x20
   14000b746:	pop    rbp
   14000b747:	ret    
   14000b748:	int3   
   14000b749:	int3   
   14000b74a:	int3   
   14000b74b:	int3   
   14000b74c:	int3   
   14000b74d:	int3   
   14000b74e:	int3   
   14000b74f:	int3   
   14000b750:	rex push rbp
   14000b752:	sub    rsp,0x20
   14000b756:	mov    rbp,rdx
   14000b759:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b75d:	call   0x140001090
   14000b762:	add    rsp,0x20
   14000b766:	pop    rbp
   14000b767:	ret    
   14000b768:	int3   
   14000b769:	int3   
   14000b76a:	int3   
   14000b76b:	int3   
   14000b76c:	int3   
   14000b76d:	int3   
   14000b76e:	int3   
   14000b76f:	int3   
   14000b770:	rex push rbp
   14000b772:	sub    rsp,0x20
   14000b776:	mov    rbp,rdx
   14000b779:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b77d:	call   0x1400010c0
   14000b782:	add    rsp,0x20
   14000b786:	pop    rbp
   14000b787:	ret    
   14000b788:	int3   
   14000b789:	int3   
   14000b78a:	int3   
   14000b78b:	int3   
   14000b78c:	int3   
   14000b78d:	int3   
   14000b78e:	int3   
   14000b78f:	int3   
   14000b790:	rex push rbp
   14000b792:	sub    rsp,0x20
   14000b796:	mov    rbp,rdx
   14000b799:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b79d:	call   0x140001090
   14000b7a2:	add    rsp,0x20
   14000b7a6:	pop    rbp
   14000b7a7:	ret    
   14000b7a8:	int3   
   14000b7a9:	int3   
   14000b7aa:	int3   
   14000b7ab:	int3   
   14000b7ac:	int3   
   14000b7ad:	int3   
   14000b7ae:	int3   
   14000b7af:	int3   
   14000b7b0:	rex push rbp
   14000b7b2:	sub    rsp,0x20
   14000b7b6:	mov    rbp,rdx
   14000b7b9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b7bd:	call   0x1400010c0
   14000b7c2:	add    rsp,0x20
   14000b7c6:	pop    rbp
   14000b7c7:	ret    
   14000b7c8:	int3   
   14000b7c9:	int3   
   14000b7ca:	int3   
   14000b7cb:	int3   
   14000b7cc:	int3   
   14000b7cd:	int3   
   14000b7ce:	int3   
   14000b7cf:	int3   
   14000b7d0:	rex push rbp
   14000b7d2:	sub    rsp,0x20
   14000b7d6:	mov    rbp,rdx
   14000b7d9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b7dd:	call   0x140001090
   14000b7e2:	add    rsp,0x20
   14000b7e6:	pop    rbp
   14000b7e7:	ret    
   14000b7e8:	int3   
   14000b7e9:	int3   
   14000b7ea:	int3   
   14000b7eb:	int3   
   14000b7ec:	int3   
   14000b7ed:	int3   
   14000b7ee:	int3   
   14000b7ef:	int3   
   14000b7f0:	rex push rbp
   14000b7f2:	sub    rsp,0x20
   14000b7f6:	mov    rbp,rdx
   14000b7f9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000b7fd:	call   0x1400010c0
   14000b802:	add    rsp,0x20
   14000b806:	pop    rbp
   14000b807:	ret    
   14000b808:	int3   
   14000b809:	int3   
   14000b80a:	int3   
   14000b80b:	int3   
   14000b80c:	int3   
   14000b80d:	int3   
   14000b80e:	int3   
   14000b80f:	int3   
   14000b810:	rex push rbp
   14000b812:	push   rsi
   14000b813:	push   rdi
   14000b814:	push   r12
   14000b816:	push   r13
   14000b818:	push   r14
   14000b81a:	push   r15
   14000b81c:	sub    rsp,0x2b0
   14000b823:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   14000b82f:	mov    QWORD PTR [rsp+0x300],rbx
   14000b837:	mov    rax,QWORD PTR [rip+0x7b532]        # 0x140086d70
   14000b83e:	xor    rax,rsp
   14000b841:	mov    QWORD PTR [rsp+0x2a0],rax
   14000b849:	mov    rsi,rdx
   14000b84c:	mov    r14,rcx
   14000b84f:	mov    QWORD PTR [rsp+0x88],rdx
   14000b857:	xor    r12d,r12d
   14000b85a:	mov    DWORD PTR [rsp+0x60],r12d
   14000b85f:	call   0x14002b874
   14000b864:	mov    rcx,rax
   14000b867:	mov    eax,r12d
   14000b86a:	test   rcx,rcx
   14000b86d:	setne  al
   14000b870:	test   eax,eax
   14000b872:	jne    0x14000b87f
   14000b874:	mov    ecx,0x80004005
   14000b879:	call   0x140001430
   14000b87e:	int3   
   14000b87f:	mov    rax,QWORD PTR [rcx]
   14000b882:	call   QWORD PTR [rax+0x18]
   14000b885:	add    rax,0x18
   14000b889:	mov    QWORD PTR [rsi],rax
   14000b88c:	lea    r15,[rip+0x59c3d]        # 0x1400654d0
   14000b893:	test   r15,0xffffffffffff0000
   14000b89a:	jne    0x14000b8bc
   14000b89c:	movzx  edi,r15w
   14000b8a0:	mov    ecx,edi
   14000b8a2:	call   0x14002b860
   14000b8a7:	test   rax,rax
   14000b8aa:	je     0x14000b8c8
   14000b8ac:	mov    r8d,edi
   14000b8af:	mov    rdx,rax
   14000b8b2:	mov    rcx,rsi
   14000b8b5:	call   0x140003650
   14000b8ba:	jmp    0x14000b8c8
   14000b8bc:	mov    rdx,r15
   14000b8bf:	mov    rcx,rsi
   14000b8c2:	call   0x140003930
   14000b8c7:	nop
   14000b8c8:	mov    DWORD PTR [rsp+0x60],0x1
   14000b8d0:	call   0x14002b874
   14000b8d5:	mov    rcx,rax
   14000b8d8:	mov    eax,r12d
   14000b8db:	test   rcx,rcx
   14000b8de:	setne  al
   14000b8e1:	test   eax,eax
   14000b8e3:	jne    0x14000b8f0
   14000b8e5:	mov    ecx,0x80004005
   14000b8ea:	call   0x140001430
   14000b8ef:	int3   
   14000b8f0:	mov    rax,QWORD PTR [rcx]
   14000b8f3:	call   QWORD PTR [rax+0x18]
   14000b8f6:	add    rax,0x18
   14000b8fa:	mov    QWORD PTR [rsp+0x68],rax
   14000b8ff:	cmp    DWORD PTR [r14+0xeb12c],0x0
   14000b907:	jne    0x14000bb9b
   14000b90d:	call   0x14002b874
   14000b912:	mov    rcx,rax
   14000b915:	mov    eax,r12d
   14000b918:	test   rcx,rcx
   14000b91b:	setne  al
   14000b91e:	test   eax,eax
   14000b920:	jne    0x14000b92d
   14000b922:	mov    ecx,0x80004005
   14000b927:	call   0x140001430
   14000b92c:	int3   
   14000b92d:	mov    rax,QWORD PTR [rcx]
   14000b930:	call   QWORD PTR [rax+0x18]
   14000b933:	add    rax,0x18
   14000b937:	mov    QWORD PTR [rsp+0x58],rax
   14000b93c:	lea    rdx,[rip+0x5a01d]        # 0x140065960
   14000b943:	test   rdx,0xffffffffffff0000
   14000b94a:	jne    0x14000b96d
   14000b94c:	movzx  edi,dx
   14000b94f:	mov    ecx,edi
   14000b951:	call   0x14002b860
   14000b956:	test   rax,rax
   14000b959:	je     0x14000b978
   14000b95b:	mov    r8d,edi
   14000b95e:	mov    rdx,rax
   14000b961:	lea    rcx,[rsp+0x58]
   14000b966:	call   0x140003650
   14000b96b:	jmp    0x14000b978
   14000b96d:	lea    rcx,[rsp+0x58]
   14000b972:	call   0x140003930
   14000b977:	nop
   14000b978:	lea    rdx,[r14+0x290]
   14000b97f:	lea    r8,[rsp+0x58]
   14000b984:	lea    rcx,[rsp+0x70]
   14000b989:	call   0x140003e20
   14000b98e:	lea    r8,[rsp+0x38]
   14000b993:	mov    rdx,QWORD PTR [rax]
   14000b996:	mov    r13d,0x80000002
   14000b99c:	mov    rcx,r13
   14000b99f:	call   QWORD PTR [rip+0x5866b]        # 0x140064010
   14000b9a5:	test   eax,eax
   14000b9a7:	sete   dil
   14000b9ab:	mov    rdx,QWORD PTR [rsp+0x70]
   14000b9b0:	add    rdx,0xffffffffffffffe8
   14000b9b4:	or     rbx,0xffffffffffffffff
   14000b9b8:	mov    eax,ebx
   14000b9ba:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b9bf:	add    eax,ebx
   14000b9c1:	test   eax,eax
   14000b9c3:	jg     0x14000b9cf
   14000b9c5:	mov    rcx,QWORD PTR [rdx]
   14000b9c8:	mov    rax,QWORD PTR [rcx]
   14000b9cb:	call   QWORD PTR [rax+0x8]
   14000b9ce:	nop
   14000b9cf:	mov    rdx,QWORD PTR [rsp+0x58]
   14000b9d4:	add    rdx,0xffffffffffffffe8
   14000b9d8:	mov    eax,ebx
   14000b9da:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b9df:	add    eax,0xffffffff
   14000b9e2:	test   eax,eax
   14000b9e4:	jg     0x14000b9ef
   14000b9e6:	mov    rcx,QWORD PTR [rdx]
   14000b9e9:	mov    rax,QWORD PTR [rcx]
   14000b9ec:	call   QWORD PTR [rax+0x8]
   14000b9ef:	test   dil,dil
   14000b9f2:	je     0x14000ba70
   14000b9f4:	mov    DWORD PTR [rsp+0x30],0x1
   14000b9fc:	mov    DWORD PTR [rsp+0x34],0x208
   14000ba04:	lea    rax,[rsp+0x34]
   14000ba09:	mov    QWORD PTR [rsp+0x28],rax
   14000ba0e:	lea    rax,[rsp+0x90]
   14000ba16:	mov    QWORD PTR [rsp+0x20],rax
   14000ba1b:	lea    r9,[rsp+0x30]
   14000ba20:	xor    r8d,r8d
   14000ba23:	lea    rdx,[rip+0x5ac86]        # 0x1400666b0
   14000ba2a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ba2f:	call   QWORD PTR [rip+0x5861b]        # 0x140064050
   14000ba35:	test   eax,eax
   14000ba37:	jne    0x14000ba60
   14000ba39:	xor    eax,eax
   14000ba3b:	mov    rcx,rbx
   14000ba3e:	lea    rdi,[rsp+0x90]
   14000ba46:	repnz scas ax,WORD PTR es:[rdi]
   14000ba49:	not    rcx
   14000ba4c:	lea    r8d,[rcx-0x1]
   14000ba50:	lea    rdx,[rsp+0x90]
   14000ba58:	mov    rcx,rsi
   14000ba5b:	call   0x1400037d0
   14000ba60:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ba65:	call   QWORD PTR [rip+0x585fd]        # 0x140064068
   14000ba6b:	jmp    0x14000be20
   14000ba70:	call   0x14002b874
   14000ba75:	mov    rcx,rax
   14000ba78:	mov    eax,r12d
   14000ba7b:	test   rcx,rcx
   14000ba7e:	setne  al
   14000ba81:	test   eax,eax
   14000ba83:	jne    0x14000ba90
   14000ba85:	mov    ecx,0x80004005
   14000ba8a:	call   0x140001430
   14000ba8f:	int3   
   14000ba90:	mov    rax,QWORD PTR [rcx]
   14000ba93:	call   QWORD PTR [rax+0x18]
   14000ba96:	lea    rdi,[rax+0x18]
   14000ba9a:	mov    QWORD PTR [rsp+0x48],rdi
   14000ba9f:	lea    rdx,[rip+0x59d82]        # 0x140065828
   14000baa6:	test   rdx,0xffffffffffff0000
   14000baad:	jne    0x14000bad5
   14000baaf:	movzx  ebp,dx
   14000bab2:	mov    ecx,ebp
   14000bab4:	call   0x14002b860
   14000bab9:	test   rax,rax
   14000babc:	je     0x14000bae4
   14000babe:	mov    r8d,ebp
   14000bac1:	mov    rdx,rax
   14000bac4:	lea    rcx,[rsp+0x48]
   14000bac9:	call   0x140003650
   14000bace:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bad3:	jmp    0x14000bae4
   14000bad5:	lea    rcx,[rsp+0x48]
   14000bada:	call   0x140003930
   14000badf:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bae4:	lea    r8,[rsp+0x38]
   14000bae9:	mov    rdx,rdi
   14000baec:	mov    rcx,r13
   14000baef:	call   QWORD PTR [rip+0x5851b]        # 0x140064010
   14000baf5:	test   eax,eax
   14000baf7:	sete   bpl
   14000bafb:	lea    rdx,[rdi-0x18]
   14000baff:	mov    eax,ebx
   14000bb01:	lock xadd DWORD PTR [rdx+0x10],eax
   14000bb06:	add    eax,0xffffffff
   14000bb09:	test   eax,eax
   14000bb0b:	jg     0x14000bb16
   14000bb0d:	mov    rcx,QWORD PTR [rdx]
   14000bb10:	mov    rax,QWORD PTR [rcx]
   14000bb13:	call   QWORD PTR [rax+0x8]
   14000bb16:	test   bpl,bpl
   14000bb19:	je     0x14000be20
   14000bb1f:	mov    DWORD PTR [rsp+0x30],0x1
   14000bb27:	mov    DWORD PTR [rsp+0x34],0x208
   14000bb2f:	lea    rax,[rsp+0x34]
   14000bb34:	mov    QWORD PTR [rsp+0x28],rax
   14000bb39:	lea    rax,[rsp+0x90]
   14000bb41:	mov    QWORD PTR [rsp+0x20],rax
   14000bb46:	lea    r9,[rsp+0x30]
   14000bb4b:	xor    r8d,r8d
   14000bb4e:	lea    rdx,[rip+0x5ab5b]        # 0x1400666b0
   14000bb55:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bb5a:	call   QWORD PTR [rip+0x584f0]        # 0x140064050
   14000bb60:	test   eax,eax
   14000bb62:	jne    0x14000bb8b
   14000bb64:	xor    eax,eax
   14000bb66:	mov    rcx,rbx
   14000bb69:	lea    rdi,[rsp+0x90]
   14000bb71:	repnz scas ax,WORD PTR es:[rdi]
   14000bb74:	not    rcx
   14000bb77:	lea    r8d,[rcx-0x1]
   14000bb7b:	lea    rdx,[rsp+0x90]
   14000bb83:	mov    rcx,rsi
   14000bb86:	call   0x1400037d0
   14000bb8b:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bb90:	call   QWORD PTR [rip+0x584d2]        # 0x140064068
   14000bb96:	jmp    0x14000be20
   14000bb9b:	call   0x14002b874
   14000bba0:	mov    rcx,rax
   14000bba3:	mov    eax,r12d
   14000bba6:	test   rcx,rcx
   14000bba9:	setne  al
   14000bbac:	test   eax,eax
   14000bbae:	jne    0x14000bbbb
   14000bbb0:	mov    ecx,0x80004005
   14000bbb5:	call   0x140001430
   14000bbba:	int3   
   14000bbbb:	mov    rax,QWORD PTR [rcx]
   14000bbbe:	call   QWORD PTR [rax+0x18]
   14000bbc1:	lea    rdi,[rax+0x18]
   14000bbc5:	mov    QWORD PTR [rsp+0x40],rdi
   14000bbca:	lea    rdx,[rip+0x59c57]        # 0x140065828
   14000bbd1:	test   rdx,0xffffffffffff0000
   14000bbd8:	jne    0x14000bc00
   14000bbda:	movzx  ebx,dx
   14000bbdd:	mov    ecx,ebx
   14000bbdf:	call   0x14002b860
   14000bbe4:	test   rax,rax
   14000bbe7:	je     0x14000bc0f
   14000bbe9:	mov    r8d,ebx
   14000bbec:	mov    rdx,rax
   14000bbef:	lea    rcx,[rsp+0x40]
   14000bbf4:	call   0x140003650
   14000bbf9:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bbfe:	jmp    0x14000bc0f
   14000bc00:	lea    rcx,[rsp+0x40]
   14000bc05:	call   0x140003930
   14000bc0a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bc0f:	lea    r8,[rsp+0x38]
   14000bc14:	mov    rdx,rdi
   14000bc17:	mov    r13d,0x80000002
   14000bc1d:	mov    rcx,r13
   14000bc20:	call   QWORD PTR [rip+0x583ea]        # 0x140064010
   14000bc26:	test   eax,eax
   14000bc28:	sete   bpl
   14000bc2c:	lea    rdx,[rdi-0x18]
   14000bc30:	or     rbx,0xffffffffffffffff
   14000bc34:	mov    eax,ebx
   14000bc36:	lock xadd DWORD PTR [rdx+0x10],eax
   14000bc3b:	add    eax,ebx
   14000bc3d:	test   eax,eax
   14000bc3f:	jg     0x14000bc4a
   14000bc41:	mov    rcx,QWORD PTR [rdx]
   14000bc44:	mov    rax,QWORD PTR [rcx]
   14000bc47:	call   QWORD PTR [rax+0x8]
   14000bc4a:	test   bpl,bpl
   14000bc4d:	je     0x14000bccb
   14000bc4f:	mov    DWORD PTR [rsp+0x30],0x1
   14000bc57:	mov    DWORD PTR [rsp+0x34],0x208
   14000bc5f:	lea    rax,[rsp+0x34]
   14000bc64:	mov    QWORD PTR [rsp+0x28],rax
   14000bc69:	lea    rax,[rsp+0x90]
   14000bc71:	mov    QWORD PTR [rsp+0x20],rax
   14000bc76:	lea    r9,[rsp+0x30]
   14000bc7b:	xor    r8d,r8d
   14000bc7e:	lea    rdx,[rip+0x5aa2b]        # 0x1400666b0
   14000bc85:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bc8a:	call   QWORD PTR [rip+0x583c0]        # 0x140064050
   14000bc90:	test   eax,eax
   14000bc92:	jne    0x14000bcbb
   14000bc94:	xor    eax,eax
   14000bc96:	mov    rcx,rbx
   14000bc99:	lea    rdi,[rsp+0x90]
   14000bca1:	repnz scas ax,WORD PTR es:[rdi]
   14000bca4:	not    rcx
   14000bca7:	lea    r8d,[rcx-0x1]
   14000bcab:	lea    rdx,[rsp+0x90]
   14000bcb3:	mov    rcx,rsi
   14000bcb6:	call   0x1400037d0
   14000bcbb:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bcc0:	call   QWORD PTR [rip+0x583a2]        # 0x140064068
   14000bcc6:	jmp    0x14000be20
   14000bccb:	call   0x14002b874
   14000bcd0:	mov    rcx,rax
   14000bcd3:	mov    eax,r12d
   14000bcd6:	test   rcx,rcx
   14000bcd9:	setne  al
   14000bcdc:	test   eax,eax
   14000bcde:	jne    0x14000bceb
   14000bce0:	mov    ecx,0x80004005
   14000bce5:	call   0x140001430
   14000bcea:	int3   
   14000bceb:	mov    rax,QWORD PTR [rcx]
   14000bcee:	call   QWORD PTR [rax+0x18]
   14000bcf1:	add    rax,0x18
   14000bcf5:	mov    QWORD PTR [rsp+0x50],rax
   14000bcfa:	lea    rdx,[rip+0x59c5f]        # 0x140065960
   14000bd01:	test   rdx,0xffffffffffff0000
   14000bd08:	jne    0x14000bd2b
   14000bd0a:	movzx  edi,dx
   14000bd0d:	mov    ecx,edi
   14000bd0f:	call   0x14002b860
   14000bd14:	test   rax,rax
   14000bd17:	je     0x14000bd36
   14000bd19:	mov    r8d,edi
   14000bd1c:	mov    rdx,rax
   14000bd1f:	lea    rcx,[rsp+0x50]
   14000bd24:	call   0x140003650
   14000bd29:	jmp    0x14000bd36
   14000bd2b:	lea    rcx,[rsp+0x50]
   14000bd30:	call   0x140003930
   14000bd35:	nop
   14000bd36:	lea    rdx,[r14+0x290]
   14000bd3d:	lea    r8,[rsp+0x50]
   14000bd42:	lea    rcx,[rsp+0x78]
   14000bd47:	call   0x140003e20
   14000bd4c:	lea    r8,[rsp+0x38]
   14000bd51:	mov    rdx,QWORD PTR [rax]
   14000bd54:	mov    rcx,r13
   14000bd57:	call   QWORD PTR [rip+0x582b3]        # 0x140064010
   14000bd5d:	test   eax,eax
   14000bd5f:	sete   dil
   14000bd63:	mov    rdx,QWORD PTR [rsp+0x78]
   14000bd68:	add    rdx,0xffffffffffffffe8
   14000bd6c:	mov    eax,ebx
   14000bd6e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000bd73:	add    eax,0xffffffff
   14000bd76:	test   eax,eax
   14000bd78:	jg     0x14000bd84
   14000bd7a:	mov    rcx,QWORD PTR [rdx]
   14000bd7d:	mov    rax,QWORD PTR [rcx]
   14000bd80:	call   QWORD PTR [rax+0x8]
   14000bd83:	nop
   14000bd84:	mov    rdx,QWORD PTR [rsp+0x50]
   14000bd89:	add    rdx,0xffffffffffffffe8
   14000bd8d:	mov    eax,ebx
   14000bd8f:	lock xadd DWORD PTR [rdx+0x10],eax
   14000bd94:	add    eax,0xffffffff
   14000bd97:	test   eax,eax
   14000bd99:	jg     0x14000bda4
   14000bd9b:	mov    rcx,QWORD PTR [rdx]
   14000bd9e:	mov    rax,QWORD PTR [rcx]
   14000bda1:	call   QWORD PTR [rax+0x8]
   14000bda4:	test   dil,dil
   14000bda7:	je     0x14000be20
   14000bda9:	mov    DWORD PTR [rsp+0x30],0x1
   14000bdb1:	mov    DWORD PTR [rsp+0x34],0x208
   14000bdb9:	lea    rax,[rsp+0x34]
   14000bdbe:	mov    QWORD PTR [rsp+0x28],rax
   14000bdc3:	lea    rax,[rsp+0x90]
   14000bdcb:	mov    QWORD PTR [rsp+0x20],rax
   14000bdd0:	lea    r9,[rsp+0x30]
   14000bdd5:	xor    r8d,r8d
   14000bdd8:	lea    rdx,[rip+0x5a8d1]        # 0x1400666b0
   14000bddf:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bde4:	call   QWORD PTR [rip+0x58266]        # 0x140064050
   14000bdea:	test   eax,eax
   14000bdec:	jne    0x14000be15
   14000bdee:	xor    eax,eax
   14000bdf0:	mov    rcx,rbx
   14000bdf3:	lea    rdi,[rsp+0x90]
   14000bdfb:	repnz scas ax,WORD PTR es:[rdi]
   14000bdfe:	not    rcx
   14000be01:	lea    r8d,[rcx-0x1]
   14000be05:	lea    rdx,[rsp+0x90]
   14000be0d:	mov    rcx,rsi
   14000be10:	call   0x1400037d0
   14000be15:	mov    rcx,QWORD PTR [rsp+0x38]
   14000be1a:	call   QWORD PTR [rip+0x58248]        # 0x140064068
   14000be20:	mov    rdx,r15
   14000be23:	mov    rcx,rsi
   14000be26:	call   0x140009e40
   14000be2b:	test   al,al
   14000be2d:	je     0x14000bedc
   14000be33:	mov    r8d,0x104
   14000be39:	lea    rdx,[rsp+0x90]
   14000be41:	xor    ecx,ecx
   14000be43:	call   QWORD PTR [rip+0x58707]        # 0x140064550
   14000be49:	test   eax,eax
   14000be4b:	je     0x14000becc
   14000be4d:	mov    dx,0x5c
   14000be51:	lea    rcx,[rsp+0x90]
   14000be59:	call   0x140046630
   14000be5e:	mov    rbp,rax
   14000be61:	test   rax,rax
   14000be64:	je     0x14000be78
   14000be66:	xor    eax,eax
   14000be68:	mov    rcx,rbx
   14000be6b:	mov    rdi,rbp
   14000be6e:	repnz scas ax,WORD PTR es:[rdi]
   14000be71:	not    rcx
   14000be74:	lea    r12,[rcx-0x1]
   14000be78:	mov    r8d,r12d
   14000be7b:	mov    rdx,rbp
   14000be7e:	lea    rcx,[rsp+0x68]
   14000be83:	call   0x1400037d0
   14000be88:	lea    rdx,[rsp+0x90]
   14000be90:	sub    rbp,rdx
   14000be93:	sar    rbp,1
   14000be96:	movsxd rax,ebp
   14000be99:	mov    WORD PTR [rsp+rax*2+0x90],0x0
   14000bea3:	xor    eax,eax
   14000bea5:	mov    rcx,rbx
   14000bea8:	lea    rdi,[rsp+0x90]
   14000beb0:	repnz scas ax,WORD PTR es:[rdi]
   14000beb3:	not    rcx
   14000beb6:	lea    r8d,[rcx-0x1]
   14000beba:	lea    rdx,[rsp+0x90]
   14000bec2:	mov    rcx,rsi
   14000bec5:	call   0x1400037d0
   14000beca:	jmp    0x14000bedc
   14000becc:	lea    rdx,[rip+0x5a7bd]        # 0x140066690
   14000bed3:	mov    rcx,rsi
   14000bed6:	call   0x140003930
   14000bedb:	nop
   14000bedc:	mov    rdx,QWORD PTR [rsp+0x68]
   14000bee1:	add    rdx,0xffffffffffffffe8
   14000bee5:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000beea:	add    ebx,0xffffffff
   14000beed:	test   ebx,ebx
   14000beef:	jg     0x14000befa
   14000bef1:	mov    rcx,QWORD PTR [rdx]
   14000bef4:	mov    rax,QWORD PTR [rcx]
   14000bef7:	call   QWORD PTR [rax+0x8]
   14000befa:	mov    rax,rsi
   14000befd:	mov    rcx,QWORD PTR [rsp+0x2a0]
   14000bf05:	xor    rcx,rsp
   14000bf08:	call   0x140046470
   14000bf0d:	mov    rbx,QWORD PTR [rsp+0x300]
   14000bf15:	add    rsp,0x2b0
   14000bf1c:	pop    r15
   14000bf1e:	pop    r14
   14000bf20:	pop    r13
   14000bf22:	pop    r12
   14000bf24:	pop    rdi
   14000bf25:	pop    rsi
   14000bf26:	pop    rbp
   14000bf27:	ret    
   14000bf28:	int3   
   14000bf29:	int3   
   14000bf2a:	int3   
   14000bf2b:	int3   
   14000bf2c:	int3   
   14000bf2d:	int3   
   14000bf2e:	int3   
   14000bf2f:	int3   
   14000bf30:	rex push rbp
   14000bf32:	sub    rsp,0x20
   14000bf36:	mov    rbp,rdx
   14000bf39:	mov    rcx,QWORD PTR [rbp+0x88]
   14000bf40:	call   0x140001090
   14000bf45:	add    rsp,0x20
   14000bf49:	pop    rbp
   14000bf4a:	ret    
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	rex push rbp
   14000bf52:	sub    rsp,0x20
   14000bf56:	mov    rbp,rdx
   14000bf59:	mov    eax,DWORD PTR [rbp+0x60]
   14000bf5c:	and    eax,0x1
   14000bf5f:	test   eax,eax
   14000bf61:	je     0x14000bf73
   14000bf63:	and    DWORD PTR [rbp+0x60],0xfffffffe
   14000bf67:	mov    rcx,QWORD PTR [rbp+0x88]
   14000bf6e:	call   0x1400010c0
   14000bf73:	add    rsp,0x20
   14000bf77:	pop    rbp
   14000bf78:	ret    
   14000bf79:	int3   
   14000bf7a:	int3   
   14000bf7b:	int3   
   14000bf7c:	int3   
   14000bf7d:	int3   
   14000bf7e:	int3   
   14000bf7f:	int3   
   14000bf80:	rex push rbp
   14000bf82:	sub    rsp,0x20
   14000bf86:	mov    rbp,rdx
   14000bf89:	lea    rcx,[rbp+0x68]
   14000bf8d:	call   0x1400010c0
   14000bf92:	add    rsp,0x20
   14000bf96:	pop    rbp
   14000bf97:	ret    
   14000bf98:	int3   
   14000bf99:	int3   
   14000bf9a:	int3   
   14000bf9b:	int3   
   14000bf9c:	int3   
   14000bf9d:	int3   
   14000bf9e:	int3   
   14000bf9f:	int3   
   14000bfa0:	rex push rbp
   14000bfa2:	sub    rsp,0x20
   14000bfa6:	mov    rbp,rdx
   14000bfa9:	lea    rcx,[rbp+0x58]
   14000bfad:	call   0x140001090
   14000bfb2:	add    rsp,0x20
   14000bfb6:	pop    rbp
   14000bfb7:	ret    
   14000bfb8:	int3   
   14000bfb9:	int3   
   14000bfba:	int3   
   14000bfbb:	int3   
   14000bfbc:	int3   
   14000bfbd:	int3   
   14000bfbe:	int3   
   14000bfbf:	int3   
   14000bfc0:	rex push rbp
   14000bfc2:	sub    rsp,0x20
   14000bfc6:	mov    rbp,rdx
   14000bfc9:	lea    rcx,[rbp+0x58]
   14000bfcd:	call   0x1400010c0
   14000bfd2:	add    rsp,0x20
   14000bfd6:	pop    rbp
   14000bfd7:	ret    
   14000bfd8:	int3   
   14000bfd9:	int3   
   14000bfda:	int3   
   14000bfdb:	int3   
   14000bfdc:	int3   
   14000bfdd:	int3   
   14000bfde:	int3   
   14000bfdf:	int3   
   14000bfe0:	rex push rbp
   14000bfe2:	sub    rsp,0x20
   14000bfe6:	mov    rbp,rdx
   14000bfe9:	lea    rcx,[rbp+0x48]
   14000bfed:	call   0x140001090
   14000bff2:	add    rsp,0x20
   14000bff6:	pop    rbp
   14000bff7:	ret    
   14000bff8:	int3   
   14000bff9:	int3   
   14000bffa:	int3   
   14000bffb:	int3   
   14000bffc:	int3   
   14000bffd:	int3   
   14000bffe:	int3   
   14000bfff:	int3   
   14000c000:	rex push rbp
   14000c002:	sub    rsp,0x20
   14000c006:	mov    rbp,rdx
   14000c009:	lea    rcx,[rbp+0x40]
   14000c00d:	call   0x140001090
   14000c012:	add    rsp,0x20
   14000c016:	pop    rbp
   14000c017:	ret    
   14000c018:	int3   
   14000c019:	int3   
   14000c01a:	int3   
   14000c01b:	int3   
   14000c01c:	int3   
   14000c01d:	int3   
   14000c01e:	int3   
   14000c01f:	int3   
   14000c020:	rex push rbp
   14000c022:	sub    rsp,0x20
   14000c026:	mov    rbp,rdx
   14000c029:	lea    rcx,[rbp+0x50]
   14000c02d:	call   0x140001090
   14000c032:	add    rsp,0x20
   14000c036:	pop    rbp
   14000c037:	ret    
   14000c038:	int3   
   14000c039:	int3   
   14000c03a:	int3   
   14000c03b:	int3   
   14000c03c:	int3   
   14000c03d:	int3   
   14000c03e:	int3   
   14000c03f:	int3   
   14000c040:	rex push rbp
   14000c042:	sub    rsp,0x20
   14000c046:	mov    rbp,rdx
   14000c049:	lea    rcx,[rbp+0x50]
   14000c04d:	call   0x1400010c0
   14000c052:	add    rsp,0x20
   14000c056:	pop    rbp
   14000c057:	ret    
   14000c058:	int3   
   14000c059:	int3   
   14000c05a:	int3   
   14000c05b:	int3   
   14000c05c:	int3   
   14000c05d:	int3   
   14000c05e:	int3   
   14000c05f:	int3   
   14000c060:	rex push rbp
   14000c062:	push   rsi
   14000c063:	push   rdi
   14000c064:	push   r12
   14000c066:	push   r13
   14000c068:	push   r14
   14000c06a:	push   r15
   14000c06c:	sub    rsp,0x270
   14000c073:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000c07c:	mov    QWORD PTR [rsp+0x2b0],rbx
   14000c084:	mov    rax,QWORD PTR [rip+0x7ace5]        # 0x140086d70
   14000c08b:	xor    rax,rsp
   14000c08e:	mov    QWORD PTR [rsp+0x260],rax
   14000c096:	mov    r15,r9
   14000c099:	mov    r13,r8
   14000c09c:	mov    QWORD PTR [rsp+0x28],rdx
   14000c0a1:	mov    r14,QWORD PTR [rsp+0x2d0]
   14000c0a9:	xor    r12d,r12d
   14000c0ac:	call   0x14002b874
   14000c0b1:	mov    rcx,rax
   14000c0b4:	mov    eax,r12d
   14000c0b7:	test   rcx,rcx
   14000c0ba:	setne  al
   14000c0bd:	test   eax,eax
   14000c0bf:	jne    0x14000c0cc
   14000c0c1:	mov    ecx,0x80004005
   14000c0c6:	call   0x140001430
   14000c0cb:	int3   
   14000c0cc:	mov    rax,QWORD PTR [rcx]
   14000c0cf:	call   QWORD PTR [rax+0x18]
   14000c0d2:	add    rax,0x18
   14000c0d6:	mov    QWORD PTR [rsp+0x20],rax
   14000c0db:	lea    rdx,[rip+0x593ee]        # 0x1400654d0
   14000c0e2:	test   rdx,0xffffffffffff0000
   14000c0e9:	jne    0x14000c10c
   14000c0eb:	movzx  edi,dx
   14000c0ee:	mov    ecx,edi
   14000c0f0:	call   0x14002b860
   14000c0f5:	test   rax,rax
   14000c0f8:	je     0x14000c117
   14000c0fa:	mov    r8d,edi
   14000c0fd:	mov    rdx,rax
   14000c100:	lea    rcx,[rsp+0x20]
   14000c105:	call   0x140003650
   14000c10a:	jmp    0x14000c117
   14000c10c:	lea    rcx,[rsp+0x20]
   14000c111:	call   0x140003930
   14000c116:	nop
   14000c117:	mov    r8,r15
   14000c11a:	mov    edx,0x104
   14000c11f:	lea    rcx,[rsp+0x50]
   14000c124:	call   0x140047080
   14000c129:	or     rbp,0xffffffffffffffff
   14000c12d:	test   r14,r14
   14000c130:	jne    0x14000c137
   14000c132:	mov    ecx,r12d
   14000c135:	jmp    0x14000c149
   14000c137:	xor    eax,eax
   14000c139:	mov    rcx,rbp
   14000c13c:	mov    rdi,r14
   14000c13f:	repnz scas ax,WORD PTR es:[rdi]
   14000c142:	not    rcx
   14000c145:	sub    rcx,0x1
   14000c149:	mov    r8d,ecx
   14000c14c:	mov    rdx,r14
   14000c14f:	lea    rcx,[rsp+0x20]
   14000c154:	call   0x1400037d0
   14000c159:	xor    r11d,r11d
   14000c15c:	lea    rdi,[rip+0x591e5]        # 0x140065348
   14000c163:	mov    rbx,QWORD PTR [rsp+0x20]
   14000c168:	mov    rsi,rbx
   14000c16b:	mov    ecx,0x1
   14000c170:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000c173:	je     0x14000c17c
   14000c175:	sbb    r11d,r11d
   14000c178:	sbb    r11d,0xffffffff
   14000c17c:	test   r11d,r11d
   14000c17f:	setne  al
   14000c182:	test   al,al
   14000c184:	je     0x14000c1ae
   14000c186:	lea    r8,[rip+0x5926b]        # 0x1400653f8
   14000c18d:	mov    edx,0x104
   14000c192:	lea    rcx,[rsp+0x50]
   14000c197:	call   0x140047130
   14000c19c:	mov    r8,r14
   14000c19f:	mov    edx,0x104
   14000c1a4:	lea    rcx,[rsp+0x50]
   14000c1a9:	call   0x140047130
   14000c1ae:	lea    r8,[rip+0x5a563]        # 0x140066718
   14000c1b5:	mov    edx,0x104
   14000c1ba:	lea    rcx,[rsp+0x50]
   14000c1bf:	call   0x140047130
   14000c1c4:	lea    r9,[rsp+0x38]
   14000c1c9:	xor    r8d,r8d
   14000c1cc:	lea    rdx,[rsp+0x50]
   14000c1d1:	mov    rdi,QWORD PTR [rsp+0x28]
   14000c1d6:	mov    rcx,rdi
   14000c1d9:	call   QWORD PTR [rip+0x58519]        # 0x1400646f8
   14000c1df:	test   eax,eax
   14000c1e1:	je     0x14000c200
   14000c1e3:	lea    r8,[rsp+0x50]
   14000c1e8:	mov    edx,0x104
   14000c1ed:	mov    rcx,r13
   14000c1f0:	call   0x140047080
   14000c1f5:	mov    r12d,0x1
   14000c1fb:	jmp    0x14000c2cd
   14000c200:	mov    r8,r15
   14000c203:	mov    edx,0x104
   14000c208:	lea    rcx,[rsp+0x50]
   14000c20d:	call   0x140047080
   14000c212:	lea    r8,[rip+0x5a4ff]        # 0x140066718
   14000c219:	mov    edx,0x104
   14000c21e:	lea    rcx,[rsp+0x50]
   14000c223:	call   0x140047130
   14000c228:	lea    r9,[rsp+0x38]
   14000c22d:	xor    r8d,r8d
   14000c230:	lea    rdx,[rsp+0x50]
   14000c235:	mov    rcx,rdi
   14000c238:	call   QWORD PTR [rip+0x584ba]        # 0x1400646f8
   14000c23e:	test   eax,eax
   14000c240:	je     0x14000c25c
   14000c242:	lea    r8,[rsp+0x50]
   14000c247:	mov    edx,0x104
   14000c24c:	mov    rcx,r13
   14000c24f:	call   0x140047080
   14000c254:	mov    r12d,0x1
   14000c25a:	jmp    0x14000c2cd
   14000c25c:	mov    r8,r15
   14000c25f:	mov    edx,0x104
   14000c264:	lea    rcx,[rsp+0x50]
   14000c269:	call   0x140047080
   14000c26e:	lea    r8,[rip+0x5a483]        # 0x1400666f8
   14000c275:	mov    edx,0x104
   14000c27a:	lea    rcx,[rsp+0x50]
   14000c27f:	call   0x140047130
   14000c284:	lea    r9,[rsp+0x38]
   14000c289:	xor    r8d,r8d
   14000c28c:	lea    rdx,[rsp+0x50]
   14000c291:	mov    rcx,rdi
   14000c294:	call   QWORD PTR [rip+0x5845e]        # 0x1400646f8
   14000c29a:	test   eax,eax
   14000c29c:	je     0x14000c2b8
   14000c29e:	lea    r8,[rsp+0x50]
   14000c2a3:	mov    edx,0x104
   14000c2a8:	mov    rcx,r13
   14000c2ab:	call   0x140047080
   14000c2b0:	mov    r12d,0x1
   14000c2b6:	jmp    0x14000c2cd
   14000c2b8:	lea    r8,[rip+0x59089]        # 0x140065348
   14000c2bf:	mov    edx,0x104
   14000c2c4:	mov    rcx,r13
   14000c2c7:	call   0x140047080
   14000c2cc:	nop
   14000c2cd:	lea    rdx,[rbx-0x18]
   14000c2d1:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000c2d6:	add    ebp,0xffffffff
   14000c2d9:	test   ebp,ebp
   14000c2db:	jg     0x14000c2e6
   14000c2dd:	mov    rcx,QWORD PTR [rdx]
   14000c2e0:	mov    rax,QWORD PTR [rcx]
   14000c2e3:	call   QWORD PTR [rax+0x8]
   14000c2e6:	mov    eax,r12d
   14000c2e9:	mov    rcx,QWORD PTR [rsp+0x260]
   14000c2f1:	xor    rcx,rsp
   14000c2f4:	call   0x140046470
   14000c2f9:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14000c301:	add    rsp,0x270
   14000c308:	pop    r15
   14000c30a:	pop    r14
   14000c30c:	pop    r13
   14000c30e:	pop    r12
   14000c310:	pop    rdi
   14000c311:	pop    rsi
   14000c312:	pop    rbp
   14000c313:	ret    
   14000c314:	int3   
   14000c315:	int3   
   14000c316:	int3   
   14000c317:	int3   
   14000c318:	int3   
   14000c319:	int3   
   14000c31a:	int3   
   14000c31b:	int3   
   14000c31c:	int3   
   14000c31d:	int3   
   14000c31e:	int3   
   14000c31f:	int3   
   14000c320:	rex push rbp
   14000c322:	sub    rsp,0x20
   14000c326:	mov    rbp,rdx
   14000c329:	lea    rcx,[rbp+0x20]
   14000c32d:	call   0x140001090
   14000c332:	add    rsp,0x20
   14000c336:	pop    rbp
   14000c337:	ret    
   14000c338:	int3   
   14000c339:	int3   
   14000c33a:	int3   
   14000c33b:	int3   
   14000c33c:	int3   
   14000c33d:	int3   
   14000c33e:	int3   
   14000c33f:	int3   
   14000c340:	rex push rbp
   14000c342:	sub    rsp,0x20
   14000c346:	mov    rbp,rdx
   14000c349:	lea    rcx,[rbp+0x20]
   14000c34d:	call   0x1400010c0
   14000c352:	add    rsp,0x20
   14000c356:	pop    rbp
   14000c357:	ret    
   14000c358:	int3   
   14000c359:	int3   
   14000c35a:	int3   
   14000c35b:	int3   
   14000c35c:	int3   
   14000c35d:	int3   
   14000c35e:	int3   
   14000c35f:	int3   
   14000c360:	mov    QWORD PTR [rsp+0x8],rcx
   14000c365:	push   rdi
   14000c366:	sub    rsp,0x30
   14000c36a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c373:	mov    QWORD PTR [rsp+0x48],rbx
   14000c378:	mov    QWORD PTR [rsp+0x50],rsi
   14000c37d:	mov    rbx,rdx
   14000c380:	mov    rsi,rcx
   14000c383:	call   0x14002b874
   14000c388:	mov    rcx,rax
   14000c38b:	xor    eax,eax
   14000c38d:	test   rcx,rcx
   14000c390:	setne  al
   14000c393:	test   eax,eax
   14000c395:	jne    0x14000c3a2
   14000c397:	mov    ecx,0x80004005
   14000c39c:	call   0x140001430
   14000c3a1:	int3   
   14000c3a2:	mov    rax,QWORD PTR [rcx]
   14000c3a5:	call   QWORD PTR [rax+0x18]
   14000c3a8:	add    rax,0x18
   14000c3ac:	mov    QWORD PTR [rsi],rax
   14000c3af:	test   rbx,rbx
   14000c3b2:	je     0x14000c3f1
   14000c3b4:	test   rbx,0xffffffffffff0000
   14000c3bb:	jne    0x14000c3dc
   14000c3bd:	movzx  edi,bx
   14000c3c0:	mov    ecx,edi
   14000c3c2:	call   0x14002b860
   14000c3c7:	test   rax,rax
   14000c3ca:	je     0x14000c402
   14000c3cc:	mov    r8d,edi
   14000c3cf:	mov    rdx,rax
   14000c3d2:	mov    rcx,rsi
   14000c3d5:	call   0x140003650
   14000c3da:	jmp    0x14000c402
   14000c3dc:	xor    eax,eax
   14000c3de:	or     rcx,0xffffffffffffffff
   14000c3e2:	mov    rdi,rbx
   14000c3e5:	repnz scas ax,WORD PTR es:[rdi]
   14000c3e8:	not    rcx
   14000c3eb:	sub    rcx,0x1
   14000c3ef:	jmp    0x14000c3f3
   14000c3f1:	xor    ecx,ecx
   14000c3f3:	mov    r8d,ecx
   14000c3f6:	mov    rdx,rbx
   14000c3f9:	mov    rcx,rsi
   14000c3fc:	call   0x1400037d0
   14000c401:	nop
   14000c402:	mov    rax,rsi
   14000c405:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c40a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c40f:	add    rsp,0x30
   14000c413:	pop    rdi
   14000c414:	ret    
   14000c415:	int3   
   14000c416:	int3   
   14000c417:	int3   
   14000c418:	int3   
   14000c419:	int3   
   14000c41a:	int3   
   14000c41b:	int3   
   14000c41c:	int3   
   14000c41d:	int3   
   14000c41e:	int3   
   14000c41f:	int3   
   14000c420:	rex push rbp
   14000c422:	sub    rsp,0x20
   14000c426:	mov    rbp,rdx
   14000c429:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c42d:	call   0x140001090
   14000c432:	add    rsp,0x20
   14000c436:	pop    rbp
   14000c437:	ret    
   14000c438:	int3   
   14000c439:	int3   
   14000c43a:	int3   
   14000c43b:	int3   
   14000c43c:	int3   
   14000c43d:	int3   
   14000c43e:	int3   
   14000c43f:	int3   
   14000c440:	rex push rbp
   14000c442:	push   rsi
   14000c443:	push   rdi
   14000c444:	push   r12
   14000c446:	push   r13
   14000c448:	push   r14
   14000c44a:	push   r15
   14000c44c:	sub    rsp,0xf10
   14000c453:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000c45c:	mov    QWORD PTR [rsp+0xf60],rbx
   14000c464:	mov    rax,QWORD PTR [rip+0x7a905]        # 0x140086d70
   14000c46b:	xor    rax,rsp
   14000c46e:	mov    QWORD PTR [rsp+0xf00],rax
   14000c476:	mov    r14,rdx
   14000c479:	mov    rbx,rcx
   14000c47c:	mov    QWORD PTR [rsp+0x78],rdx
   14000c481:	mov    r13d,0x1
   14000c487:	xor    r9d,r9d
   14000c48a:	xor    edx,edx
   14000c48c:	lea    r8d,[r13+0x1]
   14000c490:	mov    rcx,QWORD PTR [r14]
   14000c493:	call   QWORD PTR [rip+0x58227]        # 0x1400646c0
   14000c499:	mov    r12,rax
   14000c49c:	xor    r15d,r15d
   14000c49f:	or     rsi,0xffffffffffffffff
   14000c4a3:	cmp    rax,rsi
   14000c4a6:	je     0x14000ca15
   14000c4ac:	lea    r9,[rsp+0x40]
   14000c4b1:	xor    r8d,r8d
   14000c4b4:	lea    rdx,[rip+0x5a2fd]        # 0x1400667b8
   14000c4bb:	mov    rcx,rax
   14000c4be:	call   QWORD PTR [rip+0x58234]        # 0x1400646f8
   14000c4c4:	test   eax,eax
   14000c4c6:	je     0x14000ca0c
   14000c4cc:	mov    QWORD PTR [rsp+0x20],r15
   14000c4d1:	mov    r9d,0x104
   14000c4d7:	lea    r8,[rsp+0x4b0]
   14000c4df:	mov    edx,r13d
   14000c4e2:	lea    rcx,[rsp+0x40]
   14000c4e7:	call   QWORD PTR [rip+0x58203]        # 0x1400646f0
   14000c4ed:	test   eax,eax
   14000c4ef:	je     0x14000ca0c
   14000c4f5:	lea    rax,[rsp+0x40]
   14000c4fa:	mov    QWORD PTR [rsp+0x20],rax
   14000c4ff:	lea    r9,[rsp+0xae0]
   14000c507:	lea    r8,[rsp+0x4b0]
   14000c50f:	mov    rdx,r12
   14000c512:	mov    rcx,rbx
   14000c515:	call   0x140002340
   14000c51a:	test   eax,eax
   14000c51c:	jne    0x14000c54e
   14000c51e:	mov    rcx,r12
   14000c521:	call   QWORD PTR [rip+0x581a1]        # 0x1400646c8
   14000c527:	nop
   14000c528:	mov    rdx,QWORD PTR [r14]
   14000c52b:	sub    rdx,0x18
   14000c52f:	or     rsi,rsi
   14000c532:	lock xadd DWORD PTR [rdx+0x10],esi
   14000c537:	add    esi,0xffffffff
   14000c53a:	test   esi,esi
   14000c53c:	jg     0x14000c547
   14000c53e:	mov    rcx,QWORD PTR [rdx]
   14000c541:	mov    rax,QWORD PTR [rcx]
   14000c544:	call   QWORD PTR [rax+0x8]
   14000c547:	xor    eax,eax
   14000c549:	jmp    0x14000ca5d
   14000c54e:	lea    r9,[rsp+0x40]
   14000c553:	xor    r8d,r8d
   14000c556:	lea    rdx,[rsp+0x4b0]
   14000c55e:	mov    rcx,r12
   14000c561:	call   QWORD PTR [rip+0x58191]        # 0x1400646f8
   14000c567:	test   eax,eax
   14000c569:	je     0x14000ca0c
   14000c56f:	mov    QWORD PTR [rsp+0x20],r15
   14000c574:	mov    r9d,0x104
   14000c57a:	lea    r8,[rsp+0xcf0]
   14000c582:	mov    edx,r13d
   14000c585:	lea    rcx,[rsp+0x40]
   14000c58a:	call   QWORD PTR [rip+0x58160]        # 0x1400646f0
   14000c590:	test   eax,eax
   14000c592:	je     0x14000ca0c
   14000c598:	lea    rax,[rsp+0xae0]
   14000c5a0:	mov    QWORD PTR [rsp+0x20],rax
   14000c5a5:	lea    r9,[rsp+0xcf0]
   14000c5ad:	lea    r8,[rsp+0x8d0]
   14000c5b5:	mov    rdx,r12
   14000c5b8:	mov    rcx,rbx
   14000c5bb:	call   0x14000a510
   14000c5c0:	lea    r9,[rsp+0x58]
   14000c5c5:	lea    r8,[rip+0x5a1d4]        # 0x1400667a0
   14000c5cc:	lea    rdx,[rsp+0x8d0]
   14000c5d4:	mov    rcx,r12
   14000c5d7:	call   QWORD PTR [rip+0x5811b]        # 0x1400646f8
   14000c5dd:	test   eax,eax
   14000c5df:	je     0x14000c7d9
   14000c5e5:	mov    QWORD PTR [rsp+0x20],r15
   14000c5ea:	mov    r9d,0x104
   14000c5f0:	lea    r8,[rsp+0x2a0]
   14000c5f8:	mov    edx,r13d
   14000c5fb:	lea    rcx,[rsp+0x58]
   14000c600:	call   QWORD PTR [rip+0x580ea]        # 0x1400646f0
   14000c606:	test   eax,eax
   14000c608:	je     0x14000c7d9
   14000c60e:	mov    ebp,r13d
   14000c611:	mov    QWORD PTR [rsp+0x28],r15
   14000c616:	mov    DWORD PTR [rsp+0x20],0x104
   14000c61e:	lea    r9,[rsp+0x6c0]
   14000c626:	lea    r8,[rsp+0x2a0]
   14000c62e:	xor    edx,edx
   14000c630:	mov    rcx,r12
   14000c633:	call   QWORD PTR [rip+0x58097]        # 0x1400646d0
   14000c639:	lea    r9,[rsp+0x40]
   14000c63e:	xor    r8d,r8d
   14000c641:	lea    rdx,[rsp+0x2a0]
   14000c649:	mov    rcx,r12
   14000c64c:	call   QWORD PTR [rip+0x580a6]        # 0x1400646f8
   14000c652:	test   eax,eax
   14000c654:	je     0x14000c7a2
   14000c65a:	data16 xchg ax,ax
   14000c65d:	data16 xchg ax,ax
   14000c660:	mov    QWORD PTR [rsp+0x20],r15
   14000c665:	mov    r9d,0x104
   14000c66b:	lea    r8,[rsp+0x4b0]
   14000c673:	xor    edx,edx
   14000c675:	lea    rcx,[rsp+0x40]
   14000c67a:	call   QWORD PTR [rip+0x58070]        # 0x1400646f0
   14000c680:	test   eax,eax
   14000c682:	je     0x14000c78a
   14000c688:	lea    r8,[rsp+0x6c0]
   14000c690:	mov    edx,0x104
   14000c695:	lea    rcx,[rsp+0x90]
   14000c69d:	call   0x140047080
   14000c6a2:	lea    r8,[rip+0x59267]        # 0x140065910
   14000c6a9:	mov    edx,0x104
   14000c6ae:	lea    rcx,[rsp+0x90]
   14000c6b6:	call   0x140047130
   14000c6bb:	lea    r8,[rsp+0x4b0]
   14000c6c3:	mov    edx,0x104
   14000c6c8:	lea    rcx,[rsp+0x90]
   14000c6d0:	call   0x140047130
   14000c6d5:	lea    rdx,[rsp+0x38]
   14000c6da:	mov    QWORD PTR [rsp+0x30],rdx
   14000c6df:	call   0x14002b874
   14000c6e4:	mov    rcx,rax
   14000c6e7:	mov    eax,r15d
   14000c6ea:	test   rcx,rcx
   14000c6ed:	setne  al
   14000c6f0:	test   eax,eax
   14000c6f2:	je     0x14000c7ce
   14000c6f8:	mov    rax,QWORD PTR [rcx]
   14000c6fb:	call   QWORD PTR [rax+0x18]
   14000c6fe:	add    rax,0x18
   14000c702:	mov    QWORD PTR [rsp+0x38],rax
   14000c707:	lea    rcx,[rsp+0x90]
   14000c70f:	lea    rax,[rsp+0x90]
   14000c717:	test   rax,0xffffffffffff0000
   14000c71d:	jne    0x14000c740
   14000c71f:	movzx  edi,cx
   14000c722:	mov    ecx,edi
   14000c724:	call   0x14002b860
   14000c729:	test   rax,rax
   14000c72c:	je     0x14000c76a
   14000c72e:	mov    r8d,edi
   14000c731:	mov    rdx,rax
   14000c734:	lea    rcx,[rsp+0x38]
   14000c739:	call   0x140003650
   14000c73e:	jmp    0x14000c76a
   14000c740:	xor    eax,eax
   14000c742:	mov    rcx,rsi
   14000c745:	lea    rdi,[rsp+0x90]
   14000c74d:	repnz scas ax,WORD PTR es:[rdi]
   14000c750:	not    rcx
   14000c753:	lea    r8d,[rcx-0x1]
   14000c757:	lea    rdx,[rsp+0x90]
   14000c75f:	lea    rcx,[rsp+0x38]
   14000c764:	call   0x1400037d0
   14000c769:	nop
   14000c76a:	movsxd rax,DWORD PTR [rbx+0xeb100]
   14000c771:	imul   rax,rax,0x12c8
   14000c778:	lea    rcx,[rax+rbx*1+0x4c0]
   14000c780:	lea    rdx,[rsp+0x38]
   14000c785:	call   0x140004e50
   14000c78a:	lea    rdx,[rsp+0x40]
   14000c78f:	lea    rcx,[rsp+0x40]
   14000c794:	call   QWORD PTR [rip+0x57f3e]        # 0x1400646d8
   14000c79a:	test   eax,eax
   14000c79c:	jne    0x14000c660
   14000c7a2:	add    ebp,0x1
   14000c7a5:	mov    QWORD PTR [rsp+0x20],r15
   14000c7aa:	mov    r9d,0x104
   14000c7b0:	lea    r8,[rsp+0x2a0]
   14000c7b8:	mov    edx,ebp
   14000c7ba:	lea    rcx,[rsp+0x58]
   14000c7bf:	call   QWORD PTR [rip+0x57f2b]        # 0x1400646f0
   14000c7c5:	test   eax,eax
   14000c7c7:	je     0x14000c7d9
   14000c7c9:	jmp    0x14000c611
   14000c7ce:	mov    ecx,0x80004005
   14000c7d3:	call   0x140001430
   14000c7d8:	int3   
   14000c7d9:	lea    r8,[rip+0x59fa0]        # 0x140066780
   14000c7e0:	mov    edx,0x104
   14000c7e5:	lea    rcx,[rsp+0x8d0]
   14000c7ed:	call   0x140047130
   14000c7f2:	lea    r9,[rsp+0x58]
   14000c7f7:	lea    r8,[rip+0x59fa2]        # 0x1400667a0
   14000c7fe:	lea    rdx,[rsp+0x8d0]
   14000c806:	mov    rcx,r12
   14000c809:	call   QWORD PTR [rip+0x57ee9]        # 0x1400646f8
   14000c80f:	test   eax,eax
   14000c811:	je     0x14000ca0c
   14000c817:	mov    QWORD PTR [rsp+0x20],r15
   14000c81c:	mov    r9d,0x104
   14000c822:	lea    r8,[rsp+0x2a0]
   14000c82a:	mov    edx,r13d
   14000c82d:	lea    rcx,[rsp+0x58]
   14000c832:	call   QWORD PTR [rip+0x57eb8]        # 0x1400646f0
   14000c838:	test   eax,eax
   14000c83a:	je     0x14000ca0c
   14000c840:	mov    ebp,r13d
   14000c843:	mov    QWORD PTR [rsp+0x28],r15
   14000c848:	mov    DWORD PTR [rsp+0x20],0x104
   14000c850:	lea    r9,[rsp+0x6c0]
   14000c858:	lea    r8,[rsp+0x2a0]
   14000c860:	xor    edx,edx
   14000c862:	mov    rcx,r12
   14000c865:	call   QWORD PTR [rip+0x57e65]        # 0x1400646d0
   14000c86b:	lea    r9,[rsp+0x40]
   14000c870:	xor    r8d,r8d
   14000c873:	lea    rdx,[rsp+0x2a0]
   14000c87b:	mov    rcx,r12
   14000c87e:	call   QWORD PTR [rip+0x57e74]        # 0x1400646f8
   14000c884:	test   eax,eax
   14000c886:	je     0x14000c9d5
   14000c88c:	data16 data16 xchg ax,ax
   14000c890:	mov    QWORD PTR [rsp+0x20],r15
   14000c895:	mov    r9d,0x104
   14000c89b:	lea    r8,[rsp+0x4b0]
   14000c8a3:	xor    edx,edx
   14000c8a5:	lea    rcx,[rsp+0x40]
   14000c8aa:	call   QWORD PTR [rip+0x57e40]        # 0x1400646f0
   14000c8b0:	test   eax,eax
   14000c8b2:	je     0x14000c9bd
   14000c8b8:	lea    r8,[rsp+0x6c0]
   14000c8c0:	mov    edx,0x104
   14000c8c5:	lea    rcx,[rsp+0x90]
   14000c8cd:	call   0x140047080
   14000c8d2:	lea    r8,[rip+0x59037]        # 0x140065910
   14000c8d9:	mov    edx,0x104
   14000c8de:	lea    rcx,[rsp+0x90]
   14000c8e6:	call   0x140047130
   14000c8eb:	lea    r8,[rsp+0x4b0]
   14000c8f3:	mov    edx,0x104
   14000c8f8:	lea    rcx,[rsp+0x90]
   14000c900:	call   0x140047130
   14000c905:	lea    rdx,[rsp+0x30]
   14000c90a:	mov    QWORD PTR [rsp+0x80],rdx
   14000c912:	call   0x14002b874
   14000c917:	mov    rcx,rax
   14000c91a:	mov    eax,r15d
   14000c91d:	test   rcx,rcx
   14000c920:	setne  al
   14000c923:	test   eax,eax
   14000c925:	je     0x14000ca01
   14000c92b:	mov    rax,QWORD PTR [rcx]
   14000c92e:	call   QWORD PTR [rax+0x18]
   14000c931:	add    rax,0x18
   14000c935:	mov    QWORD PTR [rsp+0x30],rax
   14000c93a:	lea    rcx,[rsp+0x90]
   14000c942:	lea    rax,[rsp+0x90]
   14000c94a:	test   rax,0xffffffffffff0000
   14000c950:	jne    0x14000c973
   14000c952:	movzx  edi,cx
   14000c955:	mov    ecx,edi
   14000c957:	call   0x14002b860
   14000c95c:	test   rax,rax
   14000c95f:	je     0x14000c99d
   14000c961:	mov    r8d,edi
   14000c964:	mov    rdx,rax
   14000c967:	lea    rcx,[rsp+0x30]
   14000c96c:	call   0x140003650
   14000c971:	jmp    0x14000c99d
   14000c973:	xor    eax,eax
   14000c975:	mov    rcx,rsi
   14000c978:	lea    rdi,[rsp+0x90]
   14000c980:	repnz scas ax,WORD PTR es:[rdi]
   14000c983:	not    rcx
   14000c986:	lea    r8d,[rcx-0x1]
   14000c98a:	lea    rdx,[rsp+0x90]
   14000c992:	lea    rcx,[rsp+0x30]
   14000c997:	call   0x1400037d0
   14000c99c:	nop
   14000c99d:	movsxd rax,DWORD PTR [rbx+0xeb100]
   14000c9a4:	imul   rax,rax,0x12c8
   14000c9ab:	lea    rcx,[rax+rbx*1+0x4c0]
   14000c9b3:	lea    rdx,[rsp+0x30]
   14000c9b8:	call   0x140004e50
   14000c9bd:	lea    rdx,[rsp+0x40]
   14000c9c2:	lea    rcx,[rsp+0x40]
   14000c9c7:	call   QWORD PTR [rip+0x57d0b]        # 0x1400646d8
   14000c9cd:	test   eax,eax
   14000c9cf:	jne    0x14000c890
   14000c9d5:	add    ebp,0x1
   14000c9d8:	mov    QWORD PTR [rsp+0x20],r15
   14000c9dd:	mov    r9d,0x104
   14000c9e3:	lea    r8,[rsp+0x2a0]
   14000c9eb:	mov    edx,ebp
   14000c9ed:	lea    rcx,[rsp+0x58]
   14000c9f2:	call   QWORD PTR [rip+0x57cf8]        # 0x1400646f0
   14000c9f8:	test   eax,eax
   14000c9fa:	je     0x14000ca0c
   14000c9fc:	jmp    0x14000c843
   14000ca01:	mov    ecx,0x80004005
   14000ca06:	call   0x140001430
   14000ca0b:	int3   
   14000ca0c:	mov    rcx,r12
   14000ca0f:	call   QWORD PTR [rip+0x57cb3]        # 0x1400646c8
   14000ca15:	movsxd rcx,DWORD PTR [rbx+0xeb100]
   14000ca1c:	mov    rax,rcx
   14000ca1f:	imul   rax,rax,0x12c8
   14000ca26:	cmp    DWORD PTR [rax+rbx*1+0x1780],0x0
   14000ca2e:	je     0x14000ca3b
   14000ca30:	lea    eax,[rcx+0x1]
   14000ca33:	mov    DWORD PTR [rbx+0xeb100],eax
   14000ca39:	jmp    0x14000ca3e
   14000ca3b:	mov    r13d,r15d
   14000ca3e:	mov    rdx,QWORD PTR [r14]
   14000ca41:	sub    rdx,0x18
   14000ca45:	lock xadd DWORD PTR [rdx+0x10],esi
   14000ca4a:	add    esi,0xffffffff
   14000ca4d:	test   esi,esi
   14000ca4f:	jg     0x14000ca5a
   14000ca51:	mov    rcx,QWORD PTR [rdx]
   14000ca54:	mov    rax,QWORD PTR [rcx]
   14000ca57:	call   QWORD PTR [rax+0x8]
   14000ca5a:	mov    eax,r13d
   14000ca5d:	mov    rcx,QWORD PTR [rsp+0xf00]
   14000ca65:	xor    rcx,rsp
   14000ca68:	call   0x140046470
   14000ca6d:	mov    rbx,QWORD PTR [rsp+0xf60]
   14000ca75:	add    rsp,0xf10
   14000ca7c:	pop    r15
   14000ca7e:	pop    r14
   14000ca80:	pop    r13
   14000ca82:	pop    r12
   14000ca84:	pop    rdi
   14000ca85:	pop    rsi
   14000ca86:	pop    rbp
   14000ca87:	ret    
   14000ca88:	int3   
   14000ca89:	int3   
   14000ca8a:	int3   
   14000ca8b:	int3   
   14000ca8c:	int3   
   14000ca8d:	int3   
   14000ca8e:	int3   
   14000ca8f:	int3   
   14000ca90:	rex push rbp
   14000ca92:	sub    rsp,0x20
   14000ca96:	mov    rbp,rdx
   14000ca99:	mov    rcx,QWORD PTR [rbp+0x78]
   14000ca9d:	call   0x1400010c0
   14000caa2:	add    rsp,0x20
   14000caa6:	pop    rbp
   14000caa7:	ret    
   14000caa8:	int3   
   14000caa9:	int3   
   14000caaa:	int3   
   14000caab:	int3   
   14000caac:	int3   
   14000caad:	int3   
   14000caae:	int3   
   14000caaf:	int3   
   14000cab0:	rex push rbp
   14000cab2:	sub    rsp,0x20
   14000cab6:	mov    rbp,rdx
   14000cab9:	mov    rcx,QWORD PTR [rbp+0x30]
   14000cabd:	call   0x140001090
   14000cac2:	add    rsp,0x20
   14000cac6:	pop    rbp
   14000cac7:	ret    
   14000cac8:	int3   
   14000cac9:	int3   
   14000caca:	int3   
   14000cacb:	int3   
   14000cacc:	int3   
   14000cacd:	int3   
   14000cace:	int3   
   14000cacf:	int3   
   14000cad0:	rex push rbp
   14000cad2:	sub    rsp,0x20
   14000cad6:	mov    rbp,rdx
   14000cad9:	mov    rcx,QWORD PTR [rbp+0x80]
   14000cae0:	call   0x140001090
   14000cae5:	add    rsp,0x20
   14000cae9:	pop    rbp
   14000caea:	ret    
   14000caeb:	int3   
   14000caec:	int3   
   14000caed:	int3   
   14000caee:	int3   
   14000caef:	int3   
   14000caf0:	rex push rbp
   14000caf2:	push   rsi
   14000caf3:	push   rdi
   14000caf4:	push   r12
   14000caf6:	push   r13
   14000caf8:	push   r14
   14000cafa:	push   r15
   14000cafc:	sub    rsp,0x50
   14000cb00:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000cb09:	mov    QWORD PTR [rsp+0x90],rbx
   14000cb11:	mov    r14,rcx
   14000cb14:	call   0x14002b874
   14000cb19:	mov    rcx,rax
   14000cb1c:	xor    edx,edx
   14000cb1e:	test   rax,rax
   14000cb21:	setne  dl
   14000cb24:	test   edx,edx
   14000cb26:	jne    0x14000cb33
   14000cb28:	mov    ecx,0x80004005
   14000cb2d:	call   0x140001430
   14000cb32:	int3   
   14000cb33:	mov    rax,QWORD PTR [rax]
   14000cb36:	call   QWORD PTR [rax+0x18]
   14000cb39:	add    rax,0x18
   14000cb3d:	mov    QWORD PTR [rsp+0xa8],rax
   14000cb45:	xor    edx,edx
   14000cb47:	mov    DWORD PTR [rsp+0xa0],edx
   14000cb4e:	or     edi,0xffffffff
   14000cb51:	cmp    DWORD PTR [r14+0xeb100],edx
   14000cb58:	jle    0x14000cde4
   14000cb5e:	mov    r12d,0x98
   14000cb64:	mov    QWORD PTR [rsp+0x20],r12
   14000cb69:	lea    rax,[r14+0x1780]
   14000cb70:	mov    rcx,rax
   14000cb73:	mov    QWORD PTR [rsp+0x28],rax
   14000cb78:	data16 data16 xchg ax,ax
   14000cb7c:	data16 data16 xchg ax,ax
   14000cb80:	cmp    DWORD PTR [rcx+0x4],0x0
   14000cb84:	je     0x14000cda8
   14000cb8a:	mov    DWORD PTR [rsp+0x98],0x0
   14000cb95:	xor    r15d,r15d
   14000cb98:	cmp    DWORD PTR [rcx],r15d
   14000cb9b:	jle    0x14000cda8
   14000cba1:	data16 xchg ax,ax
   14000cba4:	data16 data16 xchg ax,ax
   14000cba8:	data16 data16 xchg ax,ax
   14000cbac:	data16 data16 xchg ax,ax
   14000cbb0:	xor    r13d,r13d
   14000cbb3:	cmp    DWORD PTR [r14+0xeb100],r13d
   14000cbba:	jle    0x14000cccd
   14000cbc0:	mov    rbp,rax
   14000cbc3:	cmp    DWORD PTR [rbp+0x4],0x0
   14000cbc7:	jne    0x14000ccb5
   14000cbcd:	lea    rax,[r12+r15*1]
   14000cbd1:	mov    rbx,QWORD PTR [r14+rax*8]
   14000cbd5:	mov    rcx,QWORD PTR [rbx-0x18]
   14000cbd9:	mov    rax,QWORD PTR [rcx]
   14000cbdc:	call   QWORD PTR [rax+0x20]
   14000cbdf:	mov    rcx,rax
   14000cbe2:	cmp    DWORD PTR [rbx-0x8],0x0
   14000cbe6:	jl     0x14000cbf9
   14000cbe8:	cmp    rax,QWORD PTR [rbx-0x18]
   14000cbec:	jne    0x14000cbf9
   14000cbee:	lea    rdi,[rbx-0x18]
   14000cbf2:	lock add DWORD PTR [rbx-0x8],0x1
   14000cbf7:	jmp    0x14000cc35
   14000cbf9:	mov    rax,QWORD PTR [rax]
   14000cbfc:	mov    r8d,0x2
   14000cc02:	mov    edx,DWORD PTR [rbx-0x10]
   14000cc05:	call   QWORD PTR [rax]
   14000cc07:	mov    rdi,rax
   14000cc0a:	test   rax,rax
   14000cc0d:	je     0x14000cdd8
   14000cc13:	mov    ecx,DWORD PTR [rbx-0x10]
   14000cc16:	mov    DWORD PTR [rax+0x8],ecx
   14000cc19:	mov    ecx,DWORD PTR [rbx-0x10]
   14000cc1c:	add    ecx,0x1
   14000cc1f:	movsxd rdx,ecx
   14000cc22:	lea    r9,[rdx+rdx*1]
   14000cc26:	mov    r8,rbx
   14000cc29:	add    rdx,rdx
   14000cc2c:	lea    rcx,[rax+0x18]
   14000cc30:	call   0x1400466d0
   14000cc35:	lea    rbx,[rdi+0x18]
   14000cc39:	mov    QWORD PTR [rsp+0x40],rbx
   14000cc3e:	xor    r12d,r12d
   14000cc41:	xor    esi,esi
   14000cc43:	cmp    DWORD PTR [rbp+0x0],esi
   14000cc46:	jle    0x14000cc8a
   14000cc48:	lea    rdi,[rbp-0x12c0]
   14000cc4f:	nop
   14000cc50:	test   rbx,rbx
   14000cc53:	je     0x14000cc76
   14000cc55:	mov    rcx,QWORD PTR [rdi]
   14000cc58:	cmp    DWORD PTR [rcx-0x10],r12d
   14000cc5c:	jl     0x14000cc76
   14000cc5e:	mov    rdx,rbx
   14000cc61:	call   0x140046660
   14000cc66:	test   rax,rax
   14000cc69:	je     0x14000cc76
   14000cc6b:	sub    rax,QWORD PTR [rdi]
   14000cc6e:	sar    rax,1
   14000cc71:	cmp    eax,0xffffffff
   14000cc74:	jne    0x14000cc84
   14000cc76:	add    esi,0x1
   14000cc79:	add    rdi,0x8
   14000cc7d:	cmp    esi,DWORD PTR [rbp+0x0]
   14000cc80:	jge    0x14000cc8a
   14000cc82:	jmp    0x14000cc50
   14000cc84:	mov    r12d,0x1
   14000cc8a:	lea    rdx,[rbx-0x18]
   14000cc8e:	or     edi,0xffffffff
   14000cc91:	mov    eax,edi
   14000cc93:	lock xadd DWORD PTR [rdx+0x10],eax
   14000cc98:	add    eax,edi
   14000cc9a:	test   eax,eax
   14000cc9c:	jg     0x14000cca7
   14000cc9e:	mov    rcx,QWORD PTR [rdx]
   14000cca1:	mov    rax,QWORD PTR [rcx]
   14000cca4:	call   QWORD PTR [rax+0x8]
   14000cca7:	test   r12d,r12d
   14000ccaa:	jne    0x14000cd6e
   14000ccb0:	mov    r12,QWORD PTR [rsp+0x20]
   14000ccb5:	add    r13d,0x1
   14000ccb9:	add    rbp,0x12c8
   14000ccc0:	cmp    r13d,DWORD PTR [r14+0xeb100]
   14000ccc7:	jl     0x14000cbc3
   14000cccd:	lea    rsi,[r12+r15*1]
   14000ccd1:	mov    rbx,QWORD PTR [r14+rsi*8]
   14000ccd5:	mov    rcx,QWORD PTR [rbx-0x18]
   14000ccd9:	mov    rax,QWORD PTR [rcx]
   14000ccdc:	call   QWORD PTR [rax+0x20]
   14000ccdf:	mov    rcx,rax
   14000cce2:	cmp    DWORD PTR [rbx-0x8],0x0
   14000cce6:	jl     0x14000ccf9
   14000cce8:	cmp    rax,QWORD PTR [rbx-0x18]
   14000ccec:	jne    0x14000ccf9
   14000ccee:	lea    rdi,[rbx-0x18]
   14000ccf2:	lock add DWORD PTR [rbx-0x8],0x1
   14000ccf7:	jmp    0x14000cd35
   14000ccf9:	mov    rax,QWORD PTR [rax]
   14000ccfc:	mov    r8d,0x2
   14000cd02:	mov    edx,DWORD PTR [rbx-0x10]
   14000cd05:	call   QWORD PTR [rax]
   14000cd07:	mov    rdi,rax
   14000cd0a:	test   rax,rax
   14000cd0d:	je     0x14000cdde
   14000cd13:	mov    ecx,DWORD PTR [rbx-0x10]
   14000cd16:	mov    DWORD PTR [rax+0x8],ecx
   14000cd19:	mov    ecx,DWORD PTR [rbx-0x10]
   14000cd1c:	add    ecx,0x1
   14000cd1f:	movsxd rdx,ecx
   14000cd22:	lea    r9,[rdx+rdx*1]
   14000cd26:	mov    r8,rbx
   14000cd29:	add    rdx,rdx
   14000cd2c:	lea    rcx,[rax+0x18]
   14000cd30:	call   0x1400466d0
   14000cd35:	lea    rax,[rdi+0x18]
   14000cd39:	mov    QWORD PTR [rsp+0x30],rax
   14000cd3e:	lea    rdx,[rsp+0x30]
   14000cd43:	mov    rcx,r14
   14000cd46:	call   0x14000a800
   14000cd4b:	mov    rcx,QWORD PTR [r14+rsi*8]
   14000cd4f:	call   QWORD PTR [rip+0x577eb]        # 0x140064540
   14000cd55:	test   eax,eax
   14000cd57:	jne    0x14000cd75
   14000cd59:	xor    edx,edx
   14000cd5b:	lea    r8d,[rax+0x4]
   14000cd5f:	mov    rcx,QWORD PTR [r14+rsi*8]
   14000cd63:	call   QWORD PTR [rip+0x577df]        # 0x140064548
   14000cd69:	or     edi,0xffffffff
   14000cd6c:	jmp    0x14000cd78
   14000cd6e:	mov    r12,QWORD PTR [rsp+0x20]
   14000cd73:	jmp    0x14000cd78
   14000cd75:	or     edi,0xffffffff
   14000cd78:	mov    eax,DWORD PTR [rsp+0x98]
   14000cd7f:	add    eax,0x1
   14000cd82:	mov    DWORD PTR [rsp+0x98],eax
   14000cd89:	add    r15,0x1
   14000cd8d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000cd92:	cmp    eax,DWORD PTR [rcx]
   14000cd94:	lea    rax,[r14+0x1780]
   14000cd9b:	jl     0x14000cbb0
   14000cda1:	mov    edx,DWORD PTR [rsp+0xa0]
   14000cda8:	add    edx,0x1
   14000cdab:	mov    DWORD PTR [rsp+0xa0],edx
   14000cdb2:	add    rcx,0x12c8
   14000cdb9:	mov    QWORD PTR [rsp+0x28],rcx
   14000cdbe:	add    r12,0x259
   14000cdc5:	mov    QWORD PTR [rsp+0x20],r12
   14000cdca:	cmp    edx,DWORD PTR [r14+0xeb100]
   14000cdd1:	jge    0x14000cde4
   14000cdd3:	jmp    0x14000cb80
   14000cdd8:	call   0x1400021a0
   14000cddd:	int3   
   14000cdde:	call   0x1400021a0
   14000cde3:	int3   
   14000cde4:	lea    r8,[r14+0x2b4]
   14000cdeb:	lea    rdx,[rip+0x59a4e]        # 0x140066840
   14000cdf2:	lea    rcx,[rsp+0xa8]
   14000cdfa:	call   0x140004180
   14000cdff:	xor    edx,edx
   14000ce01:	lea    r8d,[rdx+0x4]
   14000ce05:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000ce0d:	call   QWORD PTR [rip+0x57735]        # 0x140064548
   14000ce13:	lea    r8,[r14+0x2b4]
   14000ce1a:	lea    rdx,[rip+0x599f7]        # 0x140066818
   14000ce21:	lea    rcx,[rsp+0xa8]
   14000ce29:	call   0x140004180
   14000ce2e:	xor    edx,edx
   14000ce30:	lea    r8d,[rdx+0x4]
   14000ce34:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000ce3c:	call   QWORD PTR [rip+0x57706]        # 0x140064548
   14000ce42:	lea    r8,[r14+0x2b4]
   14000ce49:	lea    rdx,[rip+0x599b0]        # 0x140066800
   14000ce50:	lea    rcx,[rsp+0xa8]
   14000ce58:	call   0x140004180
   14000ce5d:	xor    edx,edx
   14000ce5f:	lea    r8d,[rdx+0x4]
   14000ce63:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000ce6b:	mov    rcx,rbx
   14000ce6e:	call   QWORD PTR [rip+0x576d4]        # 0x140064548
   14000ce74:	nop
   14000ce75:	lea    rdx,[rbx-0x18]
   14000ce79:	lock xadd DWORD PTR [rdx+0x10],edi
   14000ce7e:	add    edi,0xffffffff
   14000ce81:	test   edi,edi
   14000ce83:	jg     0x14000ce8e
   14000ce85:	mov    rcx,QWORD PTR [rdx]
   14000ce88:	mov    rax,QWORD PTR [rcx]
   14000ce8b:	call   QWORD PTR [rax+0x8]
   14000ce8e:	mov    rbx,QWORD PTR [rsp+0x90]
   14000ce96:	add    rsp,0x50
   14000ce9a:	pop    r15
   14000ce9c:	pop    r14
   14000ce9e:	pop    r13
   14000cea0:	pop    r12
   14000cea2:	pop    rdi
   14000cea3:	pop    rsi
   14000cea4:	pop    rbp
   14000cea5:	ret    
   14000cea6:	int3   
   14000cea7:	int3   
   14000cea8:	int3   
   14000cea9:	int3   
   14000ceaa:	int3   
   14000ceab:	int3   
   14000ceac:	int3   
   14000cead:	int3   
   14000ceae:	int3   
   14000ceaf:	int3   
   14000ceb0:	rex push rbp
   14000ceb2:	sub    rsp,0x20
   14000ceb6:	mov    rbp,rdx
   14000ceb9:	lea    rcx,[rbp+0xa8]
   14000cec0:	call   0x1400010c0
   14000cec5:	add    rsp,0x20
   14000cec9:	pop    rbp
   14000ceca:	ret    
   14000cecb:	int3   
   14000cecc:	int3   
   14000cecd:	int3   
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	rex push rsi
   14000ced2:	push   rdi
   14000ced3:	push   r12
   14000ced5:	sub    rsp,0x50
   14000ced9:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000cee2:	mov    QWORD PTR [rsp+0x70],rbx
   14000cee7:	mov    QWORD PTR [rsp+0x78],rbp
   14000ceec:	mov    rsi,rdx
   14000ceef:	call   0x14002b874
   14000cef4:	mov    rdx,rax
   14000cef7:	xor    ebx,ebx
   14000cef9:	mov    ecx,ebx
   14000cefb:	test   rax,rax
   14000cefe:	setne  cl
   14000cf01:	test   ecx,ecx
   14000cf03:	jne    0x14000cf10
   14000cf05:	mov    ecx,0x80004005
   14000cf0a:	call   0x140001430
   14000cf0f:	int3   
   14000cf10:	mov    rax,QWORD PTR [rax]
   14000cf13:	mov    rcx,rdx
   14000cf16:	call   QWORD PTR [rax+0x18]
   14000cf19:	add    rax,0x18
   14000cf1d:	mov    QWORD PTR [rsp+0x30],rax
   14000cf22:	lea    r12,[rip+0x5841f]        # 0x140065348
   14000cf29:	or     rbp,0xffffffffffffffff
   14000cf2d:	test   r12,0xffffffffffff0000
   14000cf34:	jne    0x14000cf58
   14000cf36:	movzx  edi,r12w
   14000cf3a:	mov    ecx,edi
   14000cf3c:	call   0x14002b860
   14000cf41:	test   rax,rax
   14000cf44:	je     0x14000cf78
   14000cf46:	mov    r8d,edi
   14000cf49:	mov    rdx,rax
   14000cf4c:	lea    rcx,[rsp+0x30]
   14000cf51:	call   0x140003650
   14000cf56:	jmp    0x14000cf78
   14000cf58:	xor    eax,eax
   14000cf5a:	mov    rcx,rbp
   14000cf5d:	mov    rdi,r12
   14000cf60:	repnz scas ax,WORD PTR es:[rdi]
   14000cf63:	not    rcx
   14000cf66:	lea    r8d,[rcx-0x1]
   14000cf6a:	mov    rdx,r12
   14000cf6d:	lea    rcx,[rsp+0x30]
   14000cf72:	call   0x1400037d0
   14000cf77:	nop
   14000cf78:	lea    rax,[rsp+0x38]
   14000cf7d:	mov    QWORD PTR [rsp+0x20],rax
   14000cf82:	mov    r9d,0xf003f
   14000cf88:	xor    r8d,r8d
   14000cf8b:	lea    rdx,[rip+0x5990e]        # 0x1400668a0
   14000cf92:	mov    ecx,0x80000002
   14000cf97:	call   QWORD PTR [rip+0x570bb]        # 0x140064058
   14000cf9d:	test   eax,eax
   14000cf9f:	jne    0x14000d04c
   14000cfa5:	mov    DWORD PTR [rsp+0x88],0x1
   14000cfb0:	mov    DWORD PTR [rsp+0x80],0x104
   14000cfbb:	lea    rax,[rsp+0x80]
   14000cfc3:	mov    QWORD PTR [rsp+0x28],rax
   14000cfc8:	mov    QWORD PTR [rsp+0x20],rsi
   14000cfcd:	lea    r9,[rsp+0x88]
   14000cfd5:	xor    r8d,r8d
   14000cfd8:	lea    rdx,[rip+0x596d1]        # 0x1400666b0
   14000cfdf:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cfe4:	call   QWORD PTR [rip+0x57066]        # 0x140064050
   14000cfea:	test   eax,eax
   14000cfec:	jne    0x14000d040
   14000cfee:	test   rsi,rsi
   14000cff1:	jne    0x14000cff7
   14000cff3:	mov    ecx,ebx
   14000cff5:	jmp    0x14000d009
   14000cff7:	xor    eax,eax
   14000cff9:	mov    rcx,rbp
   14000cffc:	mov    rdi,rsi
   14000cfff:	repnz scas ax,WORD PTR es:[rdi]
   14000d002:	not    rcx
   14000d005:	sub    rcx,0x1
   14000d009:	mov    r8d,ecx
   14000d00c:	mov    rdx,rsi
   14000d00f:	lea    rcx,[rsp+0x30]
   14000d014:	call   0x1400037d0
   14000d019:	xor    r11d,r11d
   14000d01c:	mov    rdi,r12
   14000d01f:	mov    rsi,QWORD PTR [rsp+0x30]
   14000d024:	mov    ecx,0x1
   14000d029:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000d02c:	je     0x14000d035
   14000d02e:	sbb    r11d,r11d
   14000d031:	sbb    r11d,0xffffffff
   14000d035:	test   r11d,r11d
   14000d038:	sete   al
   14000d03b:	test   al,al
   14000d03d:	sete   bl
   14000d040:	mov    rcx,QWORD PTR [rsp+0x38]
   14000d045:	call   QWORD PTR [rip+0x5701d]        # 0x140064068
   14000d04b:	nop
   14000d04c:	mov    rdx,QWORD PTR [rsp+0x30]
   14000d051:	add    rdx,0xffffffffffffffe8
   14000d055:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000d05a:	add    ebp,0xffffffff
   14000d05d:	test   ebp,ebp
   14000d05f:	jg     0x14000d06a
   14000d061:	mov    rcx,QWORD PTR [rdx]
   14000d064:	mov    rax,QWORD PTR [rcx]
   14000d067:	call   QWORD PTR [rax+0x8]
   14000d06a:	mov    eax,ebx
   14000d06c:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d071:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d076:	add    rsp,0x50
   14000d07a:	pop    r12
   14000d07c:	pop    rdi
   14000d07d:	pop    rsi
   14000d07e:	ret    
   14000d07f:	int3   
   14000d080:	rex push rbp
   14000d082:	sub    rsp,0x20
   14000d086:	mov    rbp,rdx
   14000d089:	lea    rcx,[rbp+0x30]
   14000d08d:	call   0x140001090
   14000d092:	add    rsp,0x20
   14000d096:	pop    rbp
   14000d097:	ret    
   14000d098:	int3   
   14000d099:	int3   
   14000d09a:	int3   
   14000d09b:	int3   
   14000d09c:	int3   
   14000d09d:	int3   
   14000d09e:	int3   
   14000d09f:	int3   
   14000d0a0:	rex push rbp
   14000d0a2:	sub    rsp,0x20
   14000d0a6:	mov    rbp,rdx
   14000d0a9:	lea    rcx,[rbp+0x30]
   14000d0ad:	call   0x1400010c0
   14000d0b2:	add    rsp,0x20
   14000d0b6:	pop    rbp
   14000d0b7:	ret    
   14000d0b8:	int3   
   14000d0b9:	int3   
   14000d0ba:	int3   
   14000d0bb:	int3   
   14000d0bc:	int3   
   14000d0bd:	int3   
   14000d0be:	int3   
   14000d0bf:	int3   
   14000d0c0:	rex push rdi
   14000d0c2:	push   r12
   14000d0c4:	push   r13
   14000d0c6:	sub    rsp,0x30
   14000d0ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d0d3:	mov    QWORD PTR [rsp+0x50],rbx
   14000d0d8:	mov    QWORD PTR [rsp+0x58],rbp
   14000d0dd:	mov    QWORD PTR [rsp+0x60],rsi
   14000d0e2:	movsxd r12,r8d
   14000d0e5:	mov    rbp,rdx
   14000d0e8:	mov    r13,rcx
   14000d0eb:	xor    edi,edi
   14000d0ed:	mov    DWORD PTR [rsp+0x68],edi
   14000d0f1:	call   0x14002b874
   14000d0f6:	mov    rcx,rax
   14000d0f9:	test   rax,rax
   14000d0fc:	setne  dil
   14000d100:	test   edi,edi
   14000d102:	jne    0x14000d10f
   14000d104:	mov    ecx,0x80004005
   14000d109:	call   0x140001430
   14000d10e:	int3   
   14000d10f:	mov    rax,QWORD PTR [rax]
   14000d112:	call   QWORD PTR [rax+0x18]
   14000d115:	lea    rdi,[rax+0x18]
   14000d119:	mov    QWORD PTR [rsp+0x68],rdi
   14000d11e:	lea    rdx,[rip+0x58223]        # 0x140065348
   14000d125:	or     rbx,0xffffffffffffffff
   14000d129:	test   rdx,0xffffffffffff0000
   14000d130:	jne    0x14000d158
   14000d132:	movzx  esi,dx
   14000d135:	mov    ecx,esi
   14000d137:	call   0x14002b860
   14000d13c:	test   rax,rax
   14000d13f:	je     0x14000d179
   14000d141:	mov    r8d,esi
   14000d144:	mov    rdx,rax
   14000d147:	lea    rcx,[rsp+0x68]
   14000d14c:	call   0x140003650
   14000d151:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d156:	jmp    0x14000d179
   14000d158:	xor    eax,eax
   14000d15a:	mov    rcx,rbx
   14000d15d:	mov    rdi,rdx
   14000d160:	repnz scas ax,WORD PTR es:[rdi]
   14000d163:	not    rcx
   14000d166:	lea    r8d,[rcx-0x1]
   14000d16a:	lea    rcx,[rsp+0x68]
   14000d16f:	call   0x1400037d0
   14000d174:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d179:	cmp    r12d,DWORD PTR [r13+0x320]
   14000d180:	jl     0x14000d212
   14000d186:	mov    rcx,QWORD PTR [rdi-0x18]
   14000d18a:	mov    rax,QWORD PTR [rcx]
   14000d18d:	call   QWORD PTR [rax+0x20]
   14000d190:	mov    rcx,rax
   14000d193:	cmp    DWORD PTR [rdi-0x8],0x0
   14000d197:	jl     0x14000d1aa
   14000d199:	cmp    rax,QWORD PTR [rdi-0x18]
   14000d19d:	jne    0x14000d1aa
   14000d19f:	lea    rsi,[rdi-0x18]
   14000d1a3:	lock add DWORD PTR [rdi-0x8],0x1
   14000d1a8:	jmp    0x14000d1e8
   14000d1aa:	mov    rax,QWORD PTR [rax]
   14000d1ad:	mov    r8d,0x2
   14000d1b3:	mov    edx,DWORD PTR [rdi-0x10]
   14000d1b6:	call   QWORD PTR [rax]
   14000d1b8:	mov    rsi,rax
   14000d1bb:	test   rax,rax
   14000d1be:	jne    0x14000d1c6
   14000d1c0:	call   0x1400021a0
   14000d1c5:	int3   
   14000d1c6:	mov    eax,DWORD PTR [rdi-0x10]
   14000d1c9:	mov    DWORD PTR [rsi+0x8],eax
   14000d1cc:	mov    eax,DWORD PTR [rdi-0x10]
   14000d1cf:	add    eax,0x1
   14000d1d2:	movsxd rdx,eax
   14000d1d5:	lea    r9,[rdx+rdx*1]
   14000d1d9:	mov    r8,rdi
   14000d1dc:	add    rdx,rdx
   14000d1df:	lea    rcx,[rsi+0x18]
   14000d1e3:	call   0x1400466d0
   14000d1e8:	lea    rax,[rsi+0x18]
   14000d1ec:	mov    QWORD PTR [rbp+0x0],rax
   14000d1f0:	lock xadd DWORD PTR [rdi-0x8],ebx
   14000d1f5:	add    ebx,0xffffffff
   14000d1f8:	test   ebx,ebx
   14000d1fa:	jg     0x14000d20a
   14000d1fc:	mov    rcx,QWORD PTR [rdi-0x18]
   14000d200:	mov    rax,QWORD PTR [rcx]
   14000d203:	lea    rdx,[rdi-0x18]
   14000d207:	call   QWORD PTR [rax+0x8]
   14000d20a:	mov    rax,rbp
   14000d20d:	jmp    0x14000d2f9
   14000d212:	mov    rdx,QWORD PTR [r13+r12*8+0x0]
   14000d217:	lea    rcx,[rdx-0x18]
   14000d21b:	lea    rsi,[rdi-0x18]
   14000d21f:	cmp    rcx,rsi
   14000d222:	je     0x14000d272
   14000d224:	cmp    DWORD PTR [rsi+0x10],0x0
   14000d228:	jl     0x14000d25f
   14000d22a:	mov    rax,QWORD PTR [rsi]
   14000d22d:	cmp    QWORD PTR [rcx],rax
   14000d230:	jne    0x14000d25f
   14000d232:	call   0x140002da0
   14000d237:	mov    rdi,rax
   14000d23a:	mov    ecx,ebx
   14000d23c:	lock xadd DWORD PTR [rsi+0x10],ecx
   14000d241:	add    ecx,0xffffffff
   14000d244:	test   ecx,ecx
   14000d246:	jg     0x14000d254
   14000d248:	mov    rcx,QWORD PTR [rsi]
   14000d24b:	mov    rax,QWORD PTR [rcx]
   14000d24e:	mov    rdx,rsi
   14000d251:	call   QWORD PTR [rax+0x8]
   14000d254:	add    rdi,0x18
   14000d258:	mov    QWORD PTR [rsp+0x68],rdi
   14000d25d:	jmp    0x14000d272
   14000d25f:	mov    r8d,DWORD PTR [rdx-0x10]
   14000d263:	lea    rcx,[rsp+0x68]
   14000d268:	call   0x1400037d0
   14000d26d:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d272:	mov    rcx,QWORD PTR [rdi-0x18]
   14000d276:	mov    rax,QWORD PTR [rcx]
   14000d279:	call   QWORD PTR [rax+0x20]
   14000d27c:	mov    rcx,rax
   14000d27f:	cmp    DWORD PTR [rdi-0x8],0x0
   14000d283:	jl     0x14000d296
   14000d285:	cmp    rax,QWORD PTR [rdi-0x18]
   14000d289:	jne    0x14000d296
   14000d28b:	lea    rsi,[rdi-0x18]
   14000d28f:	lock add DWORD PTR [rdi-0x8],0x1
   14000d294:	jmp    0x14000d2d4
   14000d296:	mov    rax,QWORD PTR [rax]
   14000d299:	mov    r8d,0x2
   14000d29f:	mov    edx,DWORD PTR [rdi-0x10]
   14000d2a2:	call   QWORD PTR [rax]
   14000d2a4:	mov    rsi,rax
   14000d2a7:	test   rax,rax
   14000d2aa:	jne    0x14000d2b2
   14000d2ac:	call   0x1400021a0
   14000d2b1:	int3   
   14000d2b2:	mov    eax,DWORD PTR [rdi-0x10]
   14000d2b5:	mov    DWORD PTR [rsi+0x8],eax
   14000d2b8:	mov    eax,DWORD PTR [rdi-0x10]
   14000d2bb:	add    eax,0x1
   14000d2be:	movsxd rdx,eax
   14000d2c1:	lea    r9,[rdx+rdx*1]
   14000d2c5:	mov    r8,rdi
   14000d2c8:	add    rdx,rdx
   14000d2cb:	lea    rcx,[rsi+0x18]
   14000d2cf:	call   0x1400466d0
   14000d2d4:	lea    rax,[rsi+0x18]
   14000d2d8:	mov    QWORD PTR [rbp+0x0],rax
   14000d2dc:	lock xadd DWORD PTR [rdi-0x8],ebx
   14000d2e1:	add    ebx,0xffffffff
   14000d2e4:	test   ebx,ebx
   14000d2e6:	jg     0x14000d2f6
   14000d2e8:	mov    rcx,QWORD PTR [rdi-0x18]
   14000d2ec:	mov    rax,QWORD PTR [rcx]
   14000d2ef:	lea    rdx,[rdi-0x18]
   14000d2f3:	call   QWORD PTR [rax+0x8]
   14000d2f6:	mov    rax,rbp
   14000d2f9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d2fe:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d303:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d308:	add    rsp,0x30
   14000d30c:	pop    r13
   14000d30e:	pop    r12
   14000d310:	pop    rdi
   14000d311:	ret    
   14000d312:	int3   
   14000d313:	int3   
   14000d314:	int3   
   14000d315:	int3   
   14000d316:	int3   
   14000d317:	int3   
   14000d318:	int3   
   14000d319:	int3   
   14000d31a:	int3   
   14000d31b:	int3   
   14000d31c:	int3   
   14000d31d:	int3   
   14000d31e:	int3   
   14000d31f:	int3   
   14000d320:	rex push rbp
   14000d322:	sub    rsp,0x20
   14000d326:	mov    rbp,rdx
   14000d329:	lea    rcx,[rbp+0x68]
   14000d32d:	call   0x140001090
   14000d332:	add    rsp,0x20
   14000d336:	pop    rbp
   14000d337:	ret    
   14000d338:	int3   
   14000d339:	int3   
   14000d33a:	int3   
   14000d33b:	int3   
   14000d33c:	int3   
   14000d33d:	int3   
   14000d33e:	int3   
   14000d33f:	int3   
   14000d340:	rex push rbp
   14000d342:	sub    rsp,0x20
   14000d346:	mov    rbp,rdx
   14000d349:	lea    rcx,[rbp+0x68]
   14000d34d:	call   0x1400010c0
   14000d352:	add    rsp,0x20
   14000d356:	pop    rbp
   14000d357:	ret    
   14000d358:	int3   
   14000d359:	int3   
   14000d35a:	int3   
   14000d35b:	int3   
   14000d35c:	int3   
   14000d35d:	int3   
   14000d35e:	int3   
   14000d35f:	int3   
   14000d360:	push   r12
   14000d362:	sub    rsp,0x40
   14000d366:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000d36f:	mov    QWORD PTR [rsp+0x50],rbx
   14000d374:	mov    QWORD PTR [rsp+0x58],rbp
   14000d379:	mov    QWORD PTR [rsp+0x60],rsi
   14000d37e:	mov    QWORD PTR [rsp+0x68],rdi
   14000d383:	mov    rsi,r9
   14000d386:	mov    rbp,r8
   14000d389:	mov    rdi,rdx
   14000d38c:	mov    rbx,rcx
   14000d38f:	mov    QWORD PTR [rsp+0x20],r9
   14000d394:	mov    r9,r8
   14000d397:	mov    r8d,0xc
   14000d39d:	call   0x140001c30
   14000d3a2:	test   eax,eax
   14000d3a4:	jne    0x14000d4d1
   14000d3aa:	mov    QWORD PTR [rsp+0x20],rsi
   14000d3af:	mov    r9,rbp
   14000d3b2:	xor    r8d,r8d
   14000d3b5:	mov    rdx,rdi
   14000d3b8:	mov    rcx,rbx
   14000d3bb:	call   0x140001c30
   14000d3c0:	test   eax,eax
   14000d3c2:	jne    0x14000d4d1
   14000d3c8:	mov    QWORD PTR [rsp+0x20],rsi
   14000d3cd:	mov    r9,rbp
   14000d3d0:	lea    r8d,[rax+0x7]
   14000d3d4:	mov    rdx,rdi
   14000d3d7:	mov    rcx,rbx
   14000d3da:	call   0x140001c30
   14000d3df:	test   eax,eax
   14000d3e1:	jne    0x14000d4d1
   14000d3e7:	mov    QWORD PTR [rsp+0x20],rsi
   14000d3ec:	mov    r9,rbp
   14000d3ef:	lea    r8d,[rax+0x8]
   14000d3f3:	mov    rdx,rdi
   14000d3f6:	mov    rcx,rbx
   14000d3f9:	call   0x140001c30
   14000d3fe:	test   eax,eax
   14000d400:	jne    0x14000d4d1
   14000d406:	mov    DWORD PTR [rsi],0x22
   14000d40c:	lea    edx,[rax+0x22]
   14000d40f:	lea    ecx,[rax+0x40]
   14000d412:	call   QWORD PTR [rip+0x571e0]        # 0x1400645f8
   14000d418:	mov    QWORD PTR [rbp+0x0],rax
   14000d41c:	call   0x14002b874
   14000d421:	mov    rdx,rax
   14000d424:	xor    ecx,ecx
   14000d426:	test   rax,rax
   14000d429:	setne  cl
   14000d42c:	test   ecx,ecx
   14000d42e:	jne    0x14000d43b
   14000d430:	mov    ecx,0x80004005
   14000d435:	call   0x140001430
   14000d43a:	int3   
   14000d43b:	mov    rax,QWORD PTR [rax]
   14000d43e:	mov    rcx,rdx
   14000d441:	call   QWORD PTR [rax+0x18]
   14000d444:	lea    rdi,[rax+0x18]
   14000d448:	mov    QWORD PTR [rsp+0x30],rdi
   14000d44d:	lea    rdx,[rip+0x594f4]        # 0x140066948
   14000d454:	or     rbx,0xffffffffffffffff
   14000d458:	test   rdx,0xffffffffffff0000
   14000d45f:	jne    0x14000d489
   14000d461:	movzx  r12d,dx
   14000d465:	mov    ecx,r12d
   14000d468:	call   0x14002b860
   14000d46d:	test   rax,rax
   14000d470:	je     0x14000d4aa
   14000d472:	mov    r8d,r12d
   14000d475:	mov    rdx,rax
   14000d478:	lea    rcx,[rsp+0x30]
   14000d47d:	call   0x140003650
   14000d482:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d487:	jmp    0x14000d4aa
   14000d489:	xor    eax,eax
   14000d48b:	mov    rcx,rbx
   14000d48e:	mov    rdi,rdx
   14000d491:	repnz scas ax,WORD PTR es:[rdi]
   14000d494:	not    rcx
   14000d497:	lea    r8d,[rcx-0x1]
   14000d49b:	lea    rcx,[rsp+0x30]
   14000d4a0:	call   0x1400037d0
   14000d4a5:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d4aa:	mov    edx,DWORD PTR [rsi]
   14000d4ac:	mov    r8,rdi
   14000d4af:	mov    rcx,QWORD PTR [rbp+0x0]
   14000d4b3:	call   0x140047080
   14000d4b8:	lea    rdx,[rdi-0x18]
   14000d4bc:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000d4c1:	add    ebx,0xffffffff
   14000d4c4:	test   ebx,ebx
   14000d4c6:	jg     0x14000d4d1
   14000d4c8:	mov    rcx,QWORD PTR [rdx]
   14000d4cb:	mov    rax,QWORD PTR [rcx]
   14000d4ce:	call   QWORD PTR [rax+0x8]
   14000d4d1:	mov    eax,0x1
   14000d4d6:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d4db:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d4e0:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d4e5:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d4ea:	add    rsp,0x40
   14000d4ee:	pop    r12
   14000d4f0:	ret    
   14000d4f1:	int3   
   14000d4f2:	int3   
   14000d4f3:	int3   
   14000d4f4:	int3   
   14000d4f5:	int3   
   14000d4f6:	int3   
   14000d4f7:	int3   
   14000d4f8:	int3   
   14000d4f9:	int3   
   14000d4fa:	int3   
   14000d4fb:	int3   
   14000d4fc:	int3   
   14000d4fd:	int3   
   14000d4fe:	int3   
   14000d4ff:	int3   
   14000d500:	rex push rbp
   14000d502:	sub    rsp,0x20
   14000d506:	mov    rbp,rdx
   14000d509:	lea    rcx,[rbp+0x30]
   14000d50d:	call   0x140001090
   14000d512:	add    rsp,0x20
   14000d516:	pop    rbp
   14000d517:	ret    
   14000d518:	int3   
   14000d519:	int3   
   14000d51a:	int3   
   14000d51b:	int3   
   14000d51c:	int3   
   14000d51d:	int3   
   14000d51e:	int3   
   14000d51f:	int3   
   14000d520:	mov    rax,rsp
   14000d523:	push   rdi
   14000d524:	push   r12
   14000d526:	push   r13
   14000d528:	push   r14
   14000d52a:	push   r15
   14000d52c:	sub    rsp,0x480
   14000d533:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000d53c:	mov    QWORD PTR [rax+0x10],rbx
   14000d540:	mov    QWORD PTR [rax+0x18],rbp
   14000d544:	mov    QWORD PTR [rax+0x20],rsi
   14000d548:	mov    rax,QWORD PTR [rip+0x79821]        # 0x140086d70
   14000d54f:	xor    rax,rsp
   14000d552:	mov    QWORD PTR [rsp+0x470],rax
   14000d55a:	mov    r15,rcx
   14000d55d:	mov    QWORD PTR [rsp+0x40],rcx
   14000d562:	xor    esi,esi
   14000d564:	mov    DWORD PTR [rsp+0x28],esi
   14000d568:	call   0x14002b874
   14000d56d:	mov    rcx,rax
   14000d570:	xor    eax,eax
   14000d572:	test   rcx,rcx
   14000d575:	setne  al
   14000d578:	test   eax,eax
   14000d57a:	jne    0x14000d587
   14000d57c:	mov    ecx,0x80004005
   14000d581:	call   0x140001430
   14000d586:	int3   
   14000d587:	mov    rax,QWORD PTR [rcx]
   14000d58a:	call   QWORD PTR [rax+0x18]
   14000d58d:	lea    rbx,[rax+0x18]
   14000d591:	mov    QWORD PTR [rsp+0x20],rbx
   14000d596:	lea    rdx,[rip+0x57dab]        # 0x140065348
   14000d59d:	or     r12,0xffffffffffffffff
   14000d5a1:	test   rdx,0xffffffffffff0000
   14000d5a8:	jne    0x14000d5d0
   14000d5aa:	movzx  edi,dx
   14000d5ad:	mov    ecx,edi
   14000d5af:	call   0x14002b860
   14000d5b4:	test   rax,rax
   14000d5b7:	je     0x14000d5f1
   14000d5b9:	mov    r8d,edi
   14000d5bc:	mov    rdx,rax
   14000d5bf:	lea    rcx,[rsp+0x20]
   14000d5c4:	call   0x140003650
   14000d5c9:	mov    rbx,QWORD PTR [rsp+0x20]
   14000d5ce:	jmp    0x14000d5f1
   14000d5d0:	xor    eax,eax
   14000d5d2:	mov    rcx,r12
   14000d5d5:	mov    rdi,rdx
   14000d5d8:	repnz scas ax,WORD PTR es:[rdi]
   14000d5db:	not    rcx
   14000d5de:	lea    r8d,[rcx-0x1]
   14000d5e2:	lea    rcx,[rsp+0x20]
   14000d5e7:	call   0x1400037d0
   14000d5ec:	mov    rbx,QWORD PTR [rsp+0x20]
   14000d5f1:	xor    r14d,r14d
   14000d5f4:	xor    r13d,r13d
   14000d5f7:	mov    r8,QWORD PTR [r15]
   14000d5fa:	mov    edx,0x104
   14000d5ff:	lea    rcx,[rsp+0x260]
   14000d607:	call   0x140047080
   14000d60c:	lea    r8,[rip+0x59429]        # 0x140066a3c
   14000d613:	lea    rdx,[rsp+0x260]
   14000d61b:	lea    rcx,[rsp+0x30]
   14000d620:	call   0x140048050
   14000d625:	mov    r8,QWORD PTR [rsp+0x30]
   14000d62a:	test   r8,r8
   14000d62d:	jne    0x14000d672
   14000d62f:	lea    rdx,[rbx-0x18]
   14000d633:	mov    eax,r12d
   14000d636:	lock xadd DWORD PTR [rdx+0x10],eax
   14000d63b:	add    eax,0xffffffff
   14000d63e:	test   eax,eax
   14000d640:	jg     0x14000d64c
   14000d642:	mov    rcx,QWORD PTR [rdx]
   14000d645:	mov    rax,QWORD PTR [rcx]
   14000d648:	call   QWORD PTR [rax+0x8]
   14000d64b:	nop
   14000d64c:	mov    rdx,QWORD PTR [r15]
   14000d64f:	sub    rdx,0x18
   14000d653:	lock xadd DWORD PTR [rdx+0x10],r12d
   14000d659:	add    r12d,0xffffffff
   14000d65d:	test   r12d,r12d
   14000d660:	jg     0x14000d66b
   14000d662:	mov    rcx,QWORD PTR [rdx]
   14000d665:	mov    rax,QWORD PTR [rcx]
   14000d668:	call   QWORD PTR [rax+0x8]
   14000d66b:	xor    eax,eax
   14000d66d:	jmp    0x14000daf0
   14000d672:	mov    edx,0x104
   14000d677:	lea    rcx,[rsp+0x50]
   14000d67c:	call   0x140047da0
   14000d681:	test   rax,rax
   14000d684:	je     0x14000d864
   14000d68a:	data16 xchg ax,ax
   14000d68d:	data16 xchg ax,ax
   14000d690:	cmp    WORD PTR [rsp+0x50],0xff
   14000d697:	jne    0x14000d6ab
   14000d699:	cmp    WORD PTR [rsp+0x52],0xfe
   14000d6a0:	jne    0x14000d6ab
   14000d6a2:	test   r13d,r13d
   14000d6a5:	je     0x14000d832
   14000d6ab:	add    r13d,0x1
   14000d6af:	xor    eax,eax
   14000d6b1:	mov    rcx,r12
   14000d6b4:	lea    rdi,[rsp+0x50]
   14000d6b9:	repnz scas ax,WORD PTR es:[rdi]
   14000d6bc:	not    rcx
   14000d6bf:	sub    rcx,0x1
   14000d6c3:	mov    rdi,rcx
   14000d6c6:	test   ecx,ecx
   14000d6c8:	jne    0x14000d722
   14000d6ca:	lea    rdx,[rbx-0x18]
   14000d6ce:	mov    rdi,QWORD PTR [rdx]
   14000d6d1:	cmp    DWORD PTR [rdx+0x8],eax
   14000d6d4:	je     0x14000d7a5
   14000d6da:	cmp    DWORD PTR [rdx+0x10],eax
   14000d6dd:	jge    0x14000d6f3
   14000d6df:	cmp    DWORD PTR [rbx-0xc],eax
   14000d6e2:	jl     0x14000d83e
   14000d6e8:	mov    DWORD PTR [rbx-0x10],eax
   14000d6eb:	mov    WORD PTR [rbx],ax
   14000d6ee:	jmp    0x14000d7a5
   14000d6f3:	mov    eax,r12d
   14000d6f6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000d6fb:	add    eax,0xffffffff
   14000d6fe:	test   eax,eax
   14000d700:	jg     0x14000d70b
   14000d702:	mov    rcx,QWORD PTR [rdx]
   14000d705:	mov    rax,QWORD PTR [rcx]
   14000d708:	call   QWORD PTR [rax+0x8]
   14000d70b:	mov    rax,QWORD PTR [rdi]
   14000d70e:	mov    rcx,rdi
   14000d711:	call   QWORD PTR [rax+0x18]
   14000d714:	lea    rbx,[rax+0x18]
   14000d718:	mov    QWORD PTR [rsp+0x20],rbx
   14000d71d:	jmp    0x14000d7a5
   14000d722:	mov    esi,DWORD PTR [rbx-0x10]
   14000d725:	lea    rbp,[rsp+0x50]
   14000d72a:	sub    rbp,rbx
   14000d72d:	sar    rbp,1
   14000d730:	mov    ecx,0x1
   14000d735:	sub    ecx,DWORD PTR [rbx-0x8]
   14000d738:	mov    eax,DWORD PTR [rbx-0xc]
   14000d73b:	sub    eax,edi
   14000d73d:	or     eax,ecx
   14000d73f:	jge    0x14000d752
   14000d741:	mov    edx,edi
   14000d743:	lea    rcx,[rsp+0x20]
   14000d748:	call   0x140002d40
   14000d74d:	mov    rbx,QWORD PTR [rsp+0x20]
   14000d752:	cmp    rbp,rsi
   14000d755:	ja     0x14000d772
   14000d757:	movsxd rax,edi
   14000d75a:	lea    rsi,[rax+rax*1]
   14000d75e:	lea    r8,[rbx+rbp*2]
   14000d762:	mov    r9,rsi
   14000d765:	mov    rdx,rsi
   14000d768:	mov    rcx,rbx
   14000d76b:	call   0x1400467a0
   14000d770:	jmp    0x14000d78c
   14000d772:	movsxd rax,edi
   14000d775:	lea    rsi,[rax+rax*1]
   14000d779:	mov    r9,rsi
   14000d77c:	lea    r8,[rsp+0x50]
   14000d781:	mov    rdx,rsi
   14000d784:	mov    rcx,rbx
   14000d787:	call   0x1400466d0
   14000d78c:	test   edi,edi
   14000d78e:	js     0x14000d859
   14000d794:	cmp    edi,DWORD PTR [rbx-0xc]
   14000d797:	jg     0x14000d859
   14000d79d:	mov    DWORD PTR [rbx-0x10],edi
   14000d7a0:	mov    WORD PTR [rsi+rbx*1],r14w
   14000d7a5:	cmp    DWORD PTR [rbx-0x10],r14d
   14000d7a9:	jl     0x14000d814
   14000d7ab:	lea    rdx,[rip+0x5926e]        # 0x140066a20
   14000d7b2:	mov    rcx,rbx
   14000d7b5:	call   0x140046660
   14000d7ba:	test   rax,rax
   14000d7bd:	je     0x14000d814
   14000d7bf:	sub    rax,rbx
   14000d7c2:	sar    rax,1
   14000d7c5:	cmp    eax,0xffffffff
   14000d7c8:	je     0x14000d814
   14000d7ca:	cmp    DWORD PTR [rbx-0x10],r14d
   14000d7ce:	jl     0x14000d7ef
   14000d7d0:	lea    rdx,[rip+0x59211]        # 0x1400669e8
   14000d7d7:	mov    rcx,rbx
   14000d7da:	call   0x140046660
   14000d7df:	test   rax,rax
   14000d7e2:	je     0x14000d7ef
   14000d7e4:	sub    rax,rbx
   14000d7e7:	sar    rax,1
   14000d7ea:	cmp    eax,0xffffffff
   14000d7ed:	jne    0x14000d849
   14000d7ef:	cmp    DWORD PTR [rbx-0x10],r14d
   14000d7f3:	jl     0x14000d814
   14000d7f5:	lea    rdx,[rip+0x591bc]        # 0x1400669b8
   14000d7fc:	mov    rcx,rbx
   14000d7ff:	call   0x140046660
   14000d804:	test   rax,rax
   14000d807:	je     0x14000d814
   14000d809:	sub    rax,rbx
   14000d80c:	sar    rax,1
   14000d80f:	cmp    eax,0xffffffff
   14000d812:	jne    0x14000d849
   14000d814:	mov    r8,QWORD PTR [rsp+0x30]
   14000d819:	mov    edx,0x104
   14000d81e:	lea    rcx,[rsp+0x50]
   14000d823:	call   0x140047da0
   14000d828:	test   rax,rax
   14000d82b:	je     0x14000d854
   14000d82d:	jmp    0x14000d690
   14000d832:	mov    r14d,0x1
   14000d838:	mov    esi,DWORD PTR [rsp+0x28]
   14000d83c:	jmp    0x14000d864
   14000d83e:	mov    ecx,0x80070057
   14000d843:	call   0x140001430
   14000d848:	int3   
   14000d849:	mov    esi,0x1
   14000d84e:	mov    DWORD PTR [rsp+0x28],esi
   14000d852:	jmp    0x14000d864
   14000d854:	mov    esi,r14d
   14000d857:	jmp    0x14000d864
   14000d859:	mov    ecx,0x80070057
   14000d85e:	call   0x140001430
   14000d863:	int3   
   14000d864:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d869:	call   0x140047d00
   14000d86e:	test   r14d,r14d
   14000d871:	je     0x14000dab2
   14000d877:	test   esi,esi
   14000d879:	jne    0x14000dab2
   14000d87f:	lea    r8,[rip+0x59112]        # 0x140066998
   14000d886:	mov    rdx,QWORD PTR [r15]
   14000d889:	lea    rcx,[rsp+0x30]
   14000d88e:	call   0x140048050
   14000d893:	mov    r8,QWORD PTR [rsp+0x30]
   14000d898:	test   r8,r8
   14000d89b:	jne    0x14000d8e0
   14000d89d:	lea    rdx,[rbx-0x18]
   14000d8a1:	mov    eax,r12d
   14000d8a4:	lock xadd DWORD PTR [rdx+0x10],eax
   14000d8a9:	add    eax,0xffffffff
   14000d8ac:	test   eax,eax
   14000d8ae:	jg     0x14000d8ba
   14000d8b0:	mov    rcx,QWORD PTR [rdx]
   14000d8b3:	mov    rax,QWORD PTR [rcx]
   14000d8b6:	call   QWORD PTR [rax+0x8]
   14000d8b9:	nop
   14000d8ba:	mov    rdx,QWORD PTR [r15]
   14000d8bd:	sub    rdx,0x18
   14000d8c1:	lock xadd DWORD PTR [rdx+0x10],r12d
   14000d8c7:	add    r12d,0xffffffff
   14000d8cb:	test   r12d,r12d
   14000d8ce:	jg     0x14000d8d9
   14000d8d0:	mov    rcx,QWORD PTR [rdx]
   14000d8d3:	mov    rax,QWORD PTR [rcx]
   14000d8d6:	call   QWORD PTR [rax+0x8]
   14000d8d9:	xor    eax,eax
   14000d8db:	jmp    0x14000daf0
   14000d8e0:	mov    edx,0x104
   14000d8e5:	lea    rcx,[rsp+0x50]
   14000d8ea:	call   0x140047da0
   14000d8ef:	test   rax,rax
   14000d8f2:	je     0x14000daa7
   14000d8f8:	data16 data16 xchg ax,ax
   14000d8fc:	data16 data16 xchg ax,ax
   14000d900:	xor    eax,eax
   14000d902:	mov    rcx,r12
   14000d905:	lea    rdi,[rsp+0x50]
   14000d90a:	repnz scas ax,WORD PTR es:[rdi]
   14000d90d:	not    rcx
   14000d910:	sub    rcx,0x1
   14000d914:	mov    rdi,rcx
   14000d917:	test   ecx,ecx
   14000d919:	jne    0x14000d973
   14000d91b:	lea    rdx,[rbx-0x18]
   14000d91f:	mov    rdi,QWORD PTR [rdx]
   14000d922:	cmp    DWORD PTR [rdx+0x8],eax
   14000d925:	je     0x14000d9f7
   14000d92b:	cmp    DWORD PTR [rdx+0x10],eax
   14000d92e:	jge    0x14000d944
   14000d930:	cmp    DWORD PTR [rbx-0xc],eax
   14000d933:	jl     0x14000da84
   14000d939:	mov    DWORD PTR [rbx-0x10],eax
   14000d93c:	mov    WORD PTR [rbx],ax
   14000d93f:	jmp    0x14000d9f7
   14000d944:	mov    eax,r12d
   14000d947:	lock xadd DWORD PTR [rdx+0x10],eax
   14000d94c:	add    eax,0xffffffff
   14000d94f:	test   eax,eax
   14000d951:	jg     0x14000d95c
   14000d953:	mov    rcx,QWORD PTR [rdx]
   14000d956:	mov    rax,QWORD PTR [rcx]
   14000d959:	call   QWORD PTR [rax+0x8]
   14000d95c:	mov    rax,QWORD PTR [rdi]
   14000d95f:	mov    rcx,rdi
   14000d962:	call   QWORD PTR [rax+0x18]
   14000d965:	lea    rbx,[rax+0x18]
   14000d969:	mov    QWORD PTR [rsp+0x20],rbx
   14000d96e:	jmp    0x14000d9f7
   14000d973:	mov    esi,DWORD PTR [rbx-0x10]
   14000d976:	lea    rbp,[rsp+0x50]
   14000d97b:	sub    rbp,rbx
   14000d97e:	sar    rbp,1
   14000d981:	mov    ecx,0x1
   14000d986:	sub    ecx,DWORD PTR [rbx-0x8]
   14000d989:	mov    eax,DWORD PTR [rbx-0xc]
   14000d98c:	sub    eax,edi
   14000d98e:	or     eax,ecx
   14000d990:	jge    0x14000d9a3
   14000d992:	mov    edx,edi
   14000d994:	lea    rcx,[rsp+0x20]
   14000d999:	call   0x140002d40
   14000d99e:	mov    rbx,QWORD PTR [rsp+0x20]
   14000d9a3:	cmp    rbp,rsi
   14000d9a6:	ja     0x14000d9c3
   14000d9a8:	movsxd rax,edi
   14000d9ab:	lea    rsi,[rax+rax*1]
   14000d9af:	lea    r8,[rbx+rbp*2]
   14000d9b3:	mov    r9,rsi
   14000d9b6:	mov    rdx,rsi
   14000d9b9:	mov    rcx,rbx
   14000d9bc:	call   0x1400467a0
   14000d9c1:	jmp    0x14000d9dd
   14000d9c3:	movsxd rax,edi
   14000d9c6:	lea    rsi,[rax+rax*1]
   14000d9ca:	mov    r9,rsi
   14000d9cd:	lea    r8,[rsp+0x50]
   14000d9d2:	mov    rdx,rsi
   14000d9d5:	mov    rcx,rbx
   14000d9d8:	call   0x1400466d0
   14000d9dd:	test   edi,edi
   14000d9df:	js     0x14000da9c
   14000d9e5:	cmp    edi,DWORD PTR [rbx-0xc]
   14000d9e8:	jg     0x14000da9c
   14000d9ee:	mov    DWORD PTR [rbx-0x10],edi
   14000d9f1:	mov    WORD PTR [rsi+rbx*1],0x0
   14000d9f7:	cmp    DWORD PTR [rbx-0x10],0x0
   14000d9fb:	jl     0x14000da66
   14000d9fd:	lea    rdx,[rip+0x5901c]        # 0x140066a20
   14000da04:	mov    rcx,rbx
   14000da07:	call   0x140046660
   14000da0c:	test   rax,rax
   14000da0f:	je     0x14000da66
   14000da11:	sub    rax,rbx
   14000da14:	sar    rax,1
   14000da17:	cmp    eax,0xffffffff
   14000da1a:	je     0x14000da66
   14000da1c:	cmp    DWORD PTR [rbx-0x10],0x0
   14000da20:	jl     0x14000da41
   14000da22:	lea    rdx,[rip+0x58fbf]        # 0x1400669e8
   14000da29:	mov    rcx,rbx
   14000da2c:	call   0x140046660
   14000da31:	test   rax,rax
   14000da34:	je     0x14000da41
   14000da36:	sub    rax,rbx
   14000da39:	sar    rax,1
   14000da3c:	cmp    eax,0xffffffff
   14000da3f:	jne    0x14000da8f
   14000da41:	cmp    DWORD PTR [rbx-0x10],0x0
   14000da45:	jl     0x14000da66
   14000da47:	lea    rdx,[rip+0x58f6a]        # 0x1400669b8
   14000da4e:	mov    rcx,rbx
   14000da51:	call   0x140046660
   14000da56:	test   rax,rax
   14000da59:	je     0x14000da66
   14000da5b:	sub    rax,rbx
   14000da5e:	sar    rax,1
   14000da61:	cmp    eax,0xffffffff
   14000da64:	jne    0x14000da8f
   14000da66:	mov    r8,QWORD PTR [rsp+0x30]
   14000da6b:	mov    edx,0x104
   14000da70:	lea    rcx,[rsp+0x50]
   14000da75:	call   0x140047da0
   14000da7a:	test   rax,rax
   14000da7d:	je     0x14000da96
   14000da7f:	jmp    0x14000d900
   14000da84:	mov    ecx,0x80070057
   14000da89:	call   0x140001430
   14000da8e:	int3   
   14000da8f:	mov    esi,0x1
   14000da94:	jmp    0x14000daa7
   14000da96:	mov    esi,DWORD PTR [rsp+0x28]
   14000da9a:	jmp    0x14000daa7
   14000da9c:	mov    ecx,0x80070057
   14000daa1:	call   0x140001430
   14000daa6:	int3   
   14000daa7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000daac:	call   0x140047d00
   14000dab1:	nop
   14000dab2:	lea    rdx,[rbx-0x18]
   14000dab6:	mov    eax,r12d
   14000dab9:	lock xadd DWORD PTR [rdx+0x10],eax
   14000dabe:	add    eax,0xffffffff
   14000dac1:	test   eax,eax
   14000dac3:	jg     0x14000dacf
   14000dac5:	mov    rcx,QWORD PTR [rdx]
   14000dac8:	mov    rax,QWORD PTR [rcx]
   14000dacb:	call   QWORD PTR [rax+0x8]
   14000dace:	nop
   14000dacf:	mov    rdx,QWORD PTR [r15]
   14000dad2:	sub    rdx,0x18
   14000dad6:	lock xadd DWORD PTR [rdx+0x10],r12d
   14000dadc:	add    r12d,0xffffffff
   14000dae0:	test   r12d,r12d
   14000dae3:	jg     0x14000daee
   14000dae5:	mov    rcx,QWORD PTR [rdx]
   14000dae8:	mov    rax,QWORD PTR [rcx]
   14000daeb:	call   QWORD PTR [rax+0x8]
   14000daee:	mov    eax,esi
   14000daf0:	mov    rcx,QWORD PTR [rsp+0x470]
   14000daf8:	xor    rcx,rsp
   14000dafb:	call   0x140046470
   14000db00:	lea    r11,[rsp+0x480]
   14000db08:	mov    rbx,QWORD PTR [r11+0x38]
   14000db0c:	mov    rbp,QWORD PTR [r11+0x40]
   14000db10:	mov    rsi,QWORD PTR [r11+0x48]
   14000db14:	mov    rsp,r11
   14000db17:	pop    r15
   14000db19:	pop    r14
   14000db1b:	pop    r13
   14000db1d:	pop    r12
   14000db1f:	pop    rdi
   14000db20:	ret    
   14000db21:	int3   
   14000db22:	int3   
   14000db23:	int3   
   14000db24:	int3   
   14000db25:	int3   
   14000db26:	int3   
   14000db27:	int3   
   14000db28:	int3   
   14000db29:	int3   
   14000db2a:	int3   
   14000db2b:	int3   
   14000db2c:	int3   
   14000db2d:	int3   
   14000db2e:	int3   
   14000db2f:	int3   
   14000db30:	rex push rbp
   14000db32:	sub    rsp,0x20
   14000db36:	mov    rbp,rdx
   14000db39:	mov    rcx,QWORD PTR [rbp+0x40]
   14000db3d:	call   0x1400010c0
   14000db42:	add    rsp,0x20
   14000db46:	pop    rbp
   14000db47:	ret    
   14000db48:	int3   
   14000db49:	int3   
   14000db4a:	int3   
   14000db4b:	int3   
   14000db4c:	int3   
   14000db4d:	int3   
   14000db4e:	int3   
   14000db4f:	int3   
   14000db50:	rex push rbp
   14000db52:	sub    rsp,0x20
   14000db56:	mov    rbp,rdx
   14000db59:	lea    rcx,[rbp+0x20]
   14000db5d:	call   0x140001090
   14000db62:	add    rsp,0x20
   14000db66:	pop    rbp
   14000db67:	ret    
   14000db68:	int3   
   14000db69:	int3   
   14000db6a:	int3   
   14000db6b:	int3   
   14000db6c:	int3   
   14000db6d:	int3   
   14000db6e:	int3   
   14000db6f:	int3   
   14000db70:	rex push rbp
   14000db72:	sub    rsp,0x20
   14000db76:	mov    rbp,rdx
   14000db79:	lea    rcx,[rbp+0x20]
   14000db7d:	call   0x1400010c0
   14000db82:	add    rsp,0x20
   14000db86:	pop    rbp
   14000db87:	ret    
   14000db88:	int3   
   14000db89:	int3   
   14000db8a:	int3   
   14000db8b:	int3   
   14000db8c:	int3   
   14000db8d:	int3   
   14000db8e:	int3   
   14000db8f:	int3   
   14000db90:	rex push rbp
   14000db92:	push   rsi
   14000db93:	push   rdi
   14000db94:	push   r12
   14000db96:	push   r13
   14000db98:	push   r14
   14000db9a:	push   r15
   14000db9c:	mov    eax,0x1b20
   14000dba1:	call   0x140063500
   14000dba6:	sub    rsp,rax
   14000dba9:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
   14000dbb5:	mov    QWORD PTR [rsp+0x1b70],rbx
   14000dbbd:	mov    rax,QWORD PTR [rip+0x791ac]        # 0x140086d70
   14000dbc4:	xor    rax,rsp
   14000dbc7:	mov    QWORD PTR [rsp+0x1b10],rax
   14000dbcf:	mov    rdi,rdx
   14000dbd2:	mov    QWORD PTR [rsp+0x58],rdx
   14000dbd7:	mov    r12,rcx
   14000dbda:	mov    QWORD PTR [rsp+0x78],rcx
   14000dbdf:	xor    r14d,r14d
   14000dbe2:	mov    r13d,r14d
   14000dbe5:	mov    DWORD PTR [rsp+0x60],r14d
   14000dbea:	call   0x14002b874
   14000dbef:	mov    rcx,rax
   14000dbf2:	mov    eax,r14d
   14000dbf5:	test   rcx,rcx
   14000dbf8:	setne  al
   14000dbfb:	test   eax,eax
   14000dbfd:	jne    0x14000dc0a
   14000dbff:	mov    ecx,0x80004005
   14000dc04:	call   0x140001430
   14000dc09:	int3   
   14000dc0a:	mov    rax,QWORD PTR [rcx]
   14000dc0d:	call   QWORD PTR [rax+0x18]
   14000dc10:	lea    rbp,[rax+0x18]
   14000dc14:	mov    QWORD PTR [rsp+0x40],rbp
   14000dc19:	call   0x14002b874
   14000dc1e:	mov    rdx,rax
   14000dc21:	mov    ecx,r14d
   14000dc24:	test   rax,rax
   14000dc27:	setne  cl
   14000dc2a:	test   ecx,ecx
   14000dc2c:	jne    0x14000dc39
   14000dc2e:	mov    ecx,0x80004005
   14000dc33:	call   0x140001430
   14000dc38:	int3   
   14000dc39:	mov    rax,QWORD PTR [rax]
   14000dc3c:	mov    rcx,rdx
   14000dc3f:	call   QWORD PTR [rax+0x18]
   14000dc42:	lea    rsi,[rax+0x18]
   14000dc46:	mov    QWORD PTR [rsp+0x48],rsi
   14000dc4b:	call   0x14002b874
   14000dc50:	mov    rdx,rax
   14000dc53:	mov    ecx,r14d
   14000dc56:	test   rax,rax
   14000dc59:	setne  cl
   14000dc5c:	test   ecx,ecx
   14000dc5e:	jne    0x14000dc6b
   14000dc60:	mov    ecx,0x80004005
   14000dc65:	call   0x140001430
   14000dc6a:	int3   
   14000dc6b:	mov    rax,QWORD PTR [rax]
   14000dc6e:	mov    rcx,rdx
   14000dc71:	call   QWORD PTR [rax+0x18]
   14000dc74:	lea    rbx,[rax+0x18]
   14000dc78:	mov    QWORD PTR [rsp+0x50],rbx
   14000dc7d:	mov    DWORD PTR [rsp+0x70],r14d
   14000dc82:	mov    DWORD PTR [rsp+0x68],r14d
   14000dc87:	mov    DWORD PTR [rsp+0x64],r14d
   14000dc8c:	lea    rcx,[rsp+0xf0]
   14000dc94:	call   0x1400084c0
   14000dc99:	nop
   14000dc9a:	mov    r9d,0x6
   14000dca0:	xor    r8d,r8d
   14000dca3:	xor    edx,edx
   14000dca5:	xor    ecx,ecx
   14000dca7:	call   QWORD PTR [rip+0x56a73]        # 0x140064720
   14000dcad:	mov    QWORD PTR [rsp+0x90],rax
   14000dcb5:	cmp    rax,0xffffffffffffffff
   14000dcb9:	jne    0x14000dd47
   14000dcbf:	lea    r9,[rip+0xffffffffffff33fa]        # 0x1400010c0
   14000dcc6:	lea    edx,[rax+0x9]
   14000dcc9:	lea    r8d,[rax+0x65]
   14000dccd:	lea    rcx,[rsp+0xf0]
   14000dcd5:	call   0x140045b20
   14000dcda:	nop
   14000dcdb:	lea    rdx,[rbx-0x18]
   14000dcdf:	or     r15,0xffffffffffffffff
   14000dce3:	mov    eax,r15d
   14000dce6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000dceb:	add    eax,r15d
   14000dcee:	test   eax,eax
   14000dcf0:	jg     0x14000dcfc
   14000dcf2:	mov    rcx,QWORD PTR [rdx]
   14000dcf5:	mov    rax,QWORD PTR [rcx]
   14000dcf8:	call   QWORD PTR [rax+0x8]
   14000dcfb:	nop
   14000dcfc:	mov    rdx,QWORD PTR [rsp+0x48]
   14000dd01:	add    rdx,0xffffffffffffffe8
   14000dd05:	mov    eax,r15d
   14000dd08:	lock xadd DWORD PTR [rdx+0x10],eax
   14000dd0d:	add    eax,0xffffffff
   14000dd10:	test   eax,eax
   14000dd12:	jg     0x14000dd1e
   14000dd14:	mov    rcx,QWORD PTR [rdx]
   14000dd17:	mov    rax,QWORD PTR [rcx]
   14000dd1a:	call   QWORD PTR [rax+0x8]
   14000dd1d:	nop
   14000dd1e:	mov    rdx,QWORD PTR [rsp+0x40]
   14000dd23:	add    rdx,0xffffffffffffffe8
   14000dd27:	mov    ecx,r15d
   14000dd2a:	lock xadd DWORD PTR [rdx+0x10],ecx
   14000dd2f:	add    ecx,0xffffffff
   14000dd32:	test   ecx,ecx
   14000dd34:	jg     0x14000dd3f
   14000dd36:	mov    rcx,QWORD PTR [rdx]
   14000dd39:	mov    rax,QWORD PTR [rcx]
   14000dd3c:	call   QWORD PTR [rax+0x8]
   14000dd3f:	mov    eax,r15d
   14000dd42:	jmp    0x14000ec43
   14000dd47:	xor    edx,edx
   14000dd49:	mov    r8d,0x250
   14000dd4f:	lea    rcx,[rsp+0x440]
   14000dd57:	call   0x140047720
   14000dd5c:	mov    r8,rdi
   14000dd5f:	mov    edx,0x208
   14000dd64:	lea    rcx,[rsp+0xab0]
   14000dd6c:	call   0x140047080
   14000dd71:	lea    r8,[rip+0x58e28]        # 0x140066ba0
   14000dd78:	mov    edx,0x208
   14000dd7d:	lea    rcx,[rsp+0xab0]
   14000dd85:	call   0x140047130
   14000dd8a:	lea    rdx,[rsp+0x440]
   14000dd92:	lea    rcx,[rsp+0xab0]
   14000dd9a:	call   QWORD PTR [rip+0x56788]        # 0x140064528
   14000dda0:	mov    QWORD PTR [rsp+0xb8],rax
   14000dda8:	or     r15,0xffffffffffffffff
   14000ddac:	lea    r14d,[r15+0x2]
   14000ddb0:	cmp    rax,r15
   14000ddb3:	je     0x14000eb69
   14000ddb9:	data16 xchg ax,ax
   14000ddbc:	data16 data16 xchg ax,ax
   14000ddc0:	mov    r8,rdi
   14000ddc3:	mov    edx,0x208
   14000ddc8:	lea    rcx,[rsp+0xab0]
   14000ddd0:	call   0x140047080
   14000ddd5:	lea    r8,[rip+0x57b34]        # 0x140065910
   14000dddc:	mov    edx,0x208
   14000dde1:	lea    rcx,[rsp+0xab0]
   14000dde9:	call   0x140047130
   14000ddee:	lea    r8,[rsp+0x46c]
   14000ddf6:	mov    edx,0x208
   14000ddfb:	lea    rcx,[rsp+0xab0]
   14000de03:	call   0x140047130
   14000de08:	xor    r9d,r9d
   14000de0b:	xor    edx,edx
   14000de0d:	lea    r8d,[r9+0x2]
   14000de11:	lea    rcx,[rsp+0xab0]
   14000de19:	call   QWORD PTR [rip+0x568a1]        # 0x1400646c0
   14000de1f:	mov    r13,rax
   14000de22:	mov    QWORD PTR [rsp+0x88],rax
   14000de2a:	cmp    rax,0xffffffffffffffff
   14000de2e:	je     0x14000ead2
   14000de34:	lea    r9,[rsp+0xa0]
   14000de3c:	xor    r8d,r8d
   14000de3f:	lea    rdx,[rip+0x58972]        # 0x1400667b8
   14000de46:	mov    rcx,rax
   14000de49:	call   QWORD PTR [rip+0x568a9]        # 0x1400646f8
   14000de4f:	test   eax,eax
   14000de51:	je     0x14000ead2
   14000de57:	mov    QWORD PTR [rsp+0x20],0x0
   14000de60:	mov    r9d,0x104
   14000de66:	lea    r8,[rsp+0x8a0]
   14000de6e:	mov    edx,r14d
   14000de71:	lea    rcx,[rsp+0xa0]
   14000de79:	call   QWORD PTR [rip+0x56871]        # 0x1400646f0
   14000de7f:	test   eax,eax
   14000de81:	je     0x14000ead2
   14000de87:	xor    eax,eax
   14000de89:	mov    rcx,r15
   14000de8c:	lea    rdi,[rsp+0x8a0]
   14000de94:	repnz scas ax,WORD PTR es:[rdi]
   14000de97:	not    rcx
   14000de9a:	sub    rcx,0x1
   14000de9e:	mov    rdi,rcx
   14000dea1:	test   ecx,ecx
   14000dea3:	jne    0x14000df08
   14000dea5:	lea    rdx,[rbp-0x18]
   14000dea9:	mov    rdi,QWORD PTR [rdx]
   14000deac:	cmp    DWORD PTR [rdx+0x8],eax
   14000deaf:	je     0x14000dfa0
   14000deb5:	cmp    DWORD PTR [rdx+0x10],eax
   14000deb8:	jge    0x14000decf
   14000deba:	cmp    DWORD PTR [rbp-0xc],eax
   14000debd:	jl     0x14000eafd
   14000dec3:	mov    DWORD PTR [rbp-0x10],eax
   14000dec6:	mov    WORD PTR [rbp+0x0],ax
   14000deca:	jmp    0x14000dfa0
   14000decf:	mov    eax,r15d
   14000ded2:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ded7:	add    eax,0xffffffff
   14000deda:	test   eax,eax
   14000dedc:	jg     0x14000dee7
   14000dede:	mov    rcx,QWORD PTR [rdx]
   14000dee1:	mov    rax,QWORD PTR [rcx]
   14000dee4:	call   QWORD PTR [rax+0x8]
   14000dee7:	mov    rax,QWORD PTR [rdi]
   14000deea:	mov    rcx,rdi
   14000deed:	call   QWORD PTR [rax+0x18]
   14000def0:	lea    rbp,[rax+0x18]
   14000def4:	mov    QWORD PTR [rsp+0x40],rbp
   14000def9:	mov    rsi,QWORD PTR [rsp+0x48]
   14000defe:	mov    rbx,QWORD PTR [rsp+0x50]
   14000df03:	jmp    0x14000dfa0
   14000df08:	mov    r12d,DWORD PTR [rbp-0x10]
   14000df0c:	lea    r13,[rsp+0x8a0]
   14000df14:	sub    r13,rbp
   14000df17:	sar    r13,1
   14000df1a:	mov    ecx,r14d
   14000df1d:	sub    ecx,DWORD PTR [rbp-0x8]
   14000df20:	mov    eax,DWORD PTR [rbp-0xc]
   14000df23:	sub    eax,edi
   14000df25:	or     eax,ecx
   14000df27:	jge    0x14000df3a
   14000df29:	mov    edx,edi
   14000df2b:	lea    rcx,[rsp+0x40]
   14000df30:	call   0x140002d40
   14000df35:	mov    rbp,QWORD PTR [rsp+0x40]
   14000df3a:	cmp    r13,r12
   14000df3d:	ja     0x14000df5b
   14000df3f:	movsxd rax,edi
   14000df42:	lea    r12,[rax+rax*1]
   14000df46:	lea    r8,[rbp+r13*2+0x0]
   14000df4b:	mov    r9,r12
   14000df4e:	mov    rdx,r12
   14000df51:	mov    rcx,rbp
   14000df54:	call   0x1400467a0
   14000df59:	jmp    0x14000df78
   14000df5b:	movsxd rax,edi
   14000df5e:	lea    r12,[rax+rax*1]
   14000df62:	mov    r9,r12
   14000df65:	lea    r8,[rsp+0x8a0]
   14000df6d:	mov    rdx,r12
   14000df70:	mov    rcx,rbp
   14000df73:	call   0x1400466d0
   14000df78:	test   edi,edi
   14000df7a:	js     0x14000eb50
   14000df80:	cmp    edi,DWORD PTR [rbp-0xc]
   14000df83:	jg     0x14000eb50
   14000df89:	mov    DWORD PTR [rbp-0x10],edi
   14000df8c:	mov    WORD PTR [r12+rbp*1],0x0
   14000df93:	mov    r12,QWORD PTR [rsp+0x78]
   14000df98:	mov    r13,QWORD PTR [rsp+0x88]
   14000dfa0:	movsxd rdi,DWORD PTR [rbp-0x10]
   14000dfa4:	mov    ecx,r14d
   14000dfa7:	sub    ecx,DWORD PTR [rbp-0x8]
   14000dfaa:	mov    eax,DWORD PTR [rbp-0xc]
   14000dfad:	sub    eax,edi
   14000dfaf:	or     eax,ecx
   14000dfb1:	jge    0x14000dfc4
   14000dfb3:	mov    edx,edi
   14000dfb5:	lea    rcx,[rsp+0x40]
   14000dfba:	call   0x140002d40
   14000dfbf:	mov    rbp,QWORD PTR [rsp+0x40]
   14000dfc4:	lea    eax,[rdi+0x1]
   14000dfc7:	movsxd rdx,eax
   14000dfca:	mov    rcx,rbp
   14000dfcd:	call   0x140046a70
   14000dfd2:	test   edi,edi
   14000dfd4:	js     0x14000eb45
   14000dfda:	cmp    edi,DWORD PTR [rbp-0xc]
   14000dfdd:	jg     0x14000eb45
   14000dfe3:	mov    DWORD PTR [rbp-0x10],edi
   14000dfe6:	mov    WORD PTR [rbp+rdi*2+0x0],0x0
   14000dfed:	lea    rdx,[rip+0x58b9c]        # 0x140066b90
   14000dff4:	mov    rcx,rbp
   14000dff7:	call   0x140046660
   14000dffc:	test   rax,rax
   14000dfff:	jne    0x14000e015
   14000e001:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e006:	test   BYTE PTR [rdi+0x214],0x8
   14000e00d:	jne    0x14000eadb
   14000e013:	jmp    0x14000e01a
   14000e015:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e01a:	lea    rdx,[rip+0x58b5f]        # 0x140066b80
   14000e021:	mov    rcx,rbp
   14000e024:	call   0x140046660
   14000e029:	test   rax,rax
   14000e02c:	jne    0x14000e04c
   14000e02e:	mov    eax,DWORD PTR [rdi+0x214]
   14000e034:	test   al,0x1
   14000e036:	jne    0x14000eadb
   14000e03c:	test   al,0x2
   14000e03e:	jne    0x14000eadb
   14000e044:	test   al,0x4
   14000e046:	jne    0x14000eadb
   14000e04c:	lea    rax,[rsp+0xa0]
   14000e054:	mov    QWORD PTR [rsp+0x20],rax
   14000e059:	xor    r9d,r9d
   14000e05c:	lea    r8,[rsp+0x8a0]
   14000e064:	mov    rdx,r13
   14000e067:	mov    rcx,r12
   14000e06a:	call   0x140002340
   14000e06f:	test   eax,eax
   14000e071:	jne    0x14000e081
   14000e073:	mov    rcx,r13
   14000e076:	call   QWORD PTR [rip+0x5664c]        # 0x1400646c8
   14000e07c:	jmp    0x14000eadb
   14000e081:	lea    r9,[rsp+0xa0]
   14000e089:	xor    r8d,r8d
   14000e08c:	lea    rdx,[rsp+0x8a0]
   14000e094:	mov    rcx,r13
   14000e097:	call   QWORD PTR [rip+0x5665b]        # 0x1400646f8
   14000e09d:	test   eax,eax
   14000e09f:	je     0x14000ead2
   14000e0a5:	data16 data16 xchg ax,ax
   14000e0a9:	data16 xchg ax,ax
   14000e0ac:	data16 data16 xchg ax,ax
   14000e0b0:	xor    r13d,r13d
   14000e0b3:	mov    QWORD PTR [rsp+0x20],r13
   14000e0b8:	mov    r9d,0x104
   14000e0be:	lea    r8,[rsp+0x8a0]
   14000e0c6:	lea    edx,[r13+0x2]
   14000e0ca:	lea    rcx,[rsp+0xa0]
   14000e0d2:	call   QWORD PTR [rip+0x56618]        # 0x1400646f0
   14000e0d8:	test   eax,eax
   14000e0da:	je     0x14000ea3a
   14000e0e0:	xor    eax,eax
   14000e0e2:	mov    rcx,r15
   14000e0e5:	lea    rdi,[rsp+0x8a0]
   14000e0ed:	repnz scas ax,WORD PTR es:[rdi]
   14000e0f0:	not    rcx
   14000e0f3:	sub    rcx,0x1
   14000e0f7:	mov    rdi,rcx
   14000e0fa:	test   ecx,ecx
   14000e0fc:	jne    0x14000e161
   14000e0fe:	lea    rdx,[rsi-0x18]
   14000e102:	mov    rdi,QWORD PTR [rdx]
   14000e105:	cmp    DWORD PTR [rdx+0x8],eax
   14000e108:	je     0x14000e1ee
   14000e10e:	cmp    DWORD PTR [rdx+0x10],eax
   14000e111:	jge    0x14000e128
   14000e113:	cmp    DWORD PTR [rsi-0xc],eax
   14000e116:	jl     0x14000eb08
   14000e11c:	mov    DWORD PTR [rsi-0x10],r13d
   14000e120:	mov    WORD PTR [rsi],ax
   14000e123:	jmp    0x14000e1ee
   14000e128:	mov    eax,r15d
   14000e12b:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e130:	add    eax,0xffffffff
   14000e133:	test   eax,eax
   14000e135:	jg     0x14000e140
   14000e137:	mov    rcx,QWORD PTR [rdx]
   14000e13a:	mov    rax,QWORD PTR [rcx]
   14000e13d:	call   QWORD PTR [rax+0x8]
   14000e140:	mov    rax,QWORD PTR [rdi]
   14000e143:	mov    rcx,rdi
   14000e146:	call   QWORD PTR [rax+0x18]
   14000e149:	lea    rsi,[rax+0x18]
   14000e14d:	mov    QWORD PTR [rsp+0x48],rsi
   14000e152:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e157:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e15c:	jmp    0x14000e1ee
   14000e161:	mov    r12d,DWORD PTR [rsi-0x10]
   14000e165:	lea    r13,[rsp+0x8a0]
   14000e16d:	sub    r13,rsi
   14000e170:	sar    r13,1
   14000e173:	mov    ecx,r14d
   14000e176:	sub    ecx,DWORD PTR [rsi-0x8]
   14000e179:	mov    eax,DWORD PTR [rsi-0xc]
   14000e17c:	sub    eax,edi
   14000e17e:	or     eax,ecx
   14000e180:	jge    0x14000e193
   14000e182:	mov    edx,edi
   14000e184:	lea    rcx,[rsp+0x48]
   14000e189:	call   0x140002d40
   14000e18e:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e193:	cmp    r13,r12
   14000e196:	ja     0x14000e1b3
   14000e198:	movsxd rax,edi
   14000e19b:	lea    r12,[rax+rax*1]
   14000e19f:	lea    r8,[rsi+r13*2]
   14000e1a3:	mov    r9,r12
   14000e1a6:	mov    rdx,r12
   14000e1a9:	mov    rcx,rsi
   14000e1ac:	call   0x1400467a0
   14000e1b1:	jmp    0x14000e1d0
   14000e1b3:	movsxd rax,edi
   14000e1b6:	lea    r12,[rax+rax*1]
   14000e1ba:	mov    r9,r12
   14000e1bd:	lea    r8,[rsp+0x8a0]
   14000e1c5:	mov    rdx,r12
   14000e1c8:	mov    rcx,rsi
   14000e1cb:	call   0x1400466d0
   14000e1d0:	test   edi,edi
   14000e1d2:	js     0x14000eb3a
   14000e1d8:	cmp    edi,DWORD PTR [rsi-0xc]
   14000e1db:	jg     0x14000eb3a
   14000e1e1:	mov    DWORD PTR [rsi-0x10],edi
   14000e1e4:	mov    WORD PTR [r12+rsi*1],0x0
   14000e1eb:	xor    r13d,r13d
   14000e1ee:	movsxd rdi,DWORD PTR [rsi-0x10]
   14000e1f2:	mov    ecx,r14d
   14000e1f5:	sub    ecx,DWORD PTR [rsi-0x8]
   14000e1f8:	mov    eax,DWORD PTR [rsi-0xc]
   14000e1fb:	sub    eax,edi
   14000e1fd:	or     eax,ecx
   14000e1ff:	jge    0x14000e212
   14000e201:	mov    edx,edi
   14000e203:	lea    rcx,[rsp+0x48]
   14000e208:	call   0x140002d40
   14000e20d:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e212:	lea    eax,[rdi+0x1]
   14000e215:	movsxd rdx,eax
   14000e218:	mov    rcx,rsi
   14000e21b:	call   0x140046a70
   14000e220:	test   edi,edi
   14000e222:	js     0x14000eb2f
   14000e228:	cmp    edi,DWORD PTR [rsi-0xc]
   14000e22b:	jg     0x14000eb2f
   14000e231:	mov    DWORD PTR [rsi-0x10],edi
   14000e234:	mov    WORD PTR [rsi+rdi*2],0x0
   14000e23a:	lea    rcx,[rsi-0x18]
   14000e23e:	lea    rdi,[rbx-0x18]
   14000e242:	cmp    rcx,rdi
   14000e245:	je     0x14000e2a3
   14000e247:	cmp    DWORD PTR [rdi+0x10],0x0
   14000e24b:	jl     0x14000e28d
   14000e24d:	mov    rax,QWORD PTR [rdi]
   14000e250:	cmp    QWORD PTR [rcx],rax
   14000e253:	jne    0x14000e28d
   14000e255:	call   0x140002da0
   14000e25a:	mov    rbx,rax
   14000e25d:	mov    ecx,r15d
   14000e260:	lock xadd DWORD PTR [rdi+0x10],ecx
   14000e265:	add    ecx,0xffffffff
   14000e268:	test   ecx,ecx
   14000e26a:	jg     0x14000e278
   14000e26c:	mov    rcx,QWORD PTR [rdi]
   14000e26f:	mov    rax,QWORD PTR [rcx]
   14000e272:	mov    rdx,rdi
   14000e275:	call   QWORD PTR [rax+0x8]
   14000e278:	add    rbx,0x18
   14000e27c:	mov    QWORD PTR [rsp+0x50],rbx
   14000e281:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e286:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e28b:	jmp    0x14000e2a3
   14000e28d:	mov    r8d,DWORD PTR [rsi-0x10]
   14000e291:	mov    rdx,rsi
   14000e294:	lea    rcx,[rsp+0x50]
   14000e299:	call   0x1400037d0
   14000e29e:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e2a3:	movsxd r12,DWORD PTR [rbx-0x10]
   14000e2a7:	mov    ecx,r14d
   14000e2aa:	sub    ecx,DWORD PTR [rbx-0x8]
   14000e2ad:	mov    eax,DWORD PTR [rbx-0xc]
   14000e2b0:	sub    eax,r12d
   14000e2b3:	or     eax,ecx
   14000e2b5:	jge    0x14000e2c9
   14000e2b7:	mov    edx,r12d
   14000e2ba:	lea    rcx,[rsp+0x50]
   14000e2bf:	call   0x140002d40
   14000e2c4:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e2c9:	mov    rcx,rbx
   14000e2cc:	mov    rdx,rbx
   14000e2cf:	lea    r11,[rbx+r12*2]
   14000e2d3:	cmp    rbx,r11
   14000e2d6:	jae    0x14000e324
   14000e2d8:	data16 data16 xchg ax,ax
   14000e2dc:	data16 data16 xchg ax,ax
   14000e2e0:	lea    r10,[rcx+0x2]
   14000e2e4:	cmp    WORD PTR [rcx],0x2a
   14000e2e8:	je     0x14000e31c
   14000e2ea:	mov    r8,r10
   14000e2ed:	sub    r8,rcx
   14000e2f0:	sar    r8,1
   14000e2f3:	lea    r9,[rdx+r8*2]
   14000e2f7:	mov    rdi,r13
   14000e2fa:	cmp    rdx,r9
   14000e2fd:	je     0x14000e31c
   14000e2ff:	nop
   14000e300:	cmp    rdi,r8
   14000e303:	jae    0x14000e31c
   14000e305:	movzx  eax,WORD PTR [rcx]
   14000e308:	mov    WORD PTR [rdx],ax
   14000e30b:	add    rcx,0x2
   14000e30f:	add    rdx,0x2
   14000e313:	add    rdi,0x1
   14000e317:	cmp    rdx,r9
   14000e31a:	jne    0x14000e300
   14000e31c:	mov    rcx,r10
   14000e31f:	cmp    r10,r11
   14000e322:	jb     0x14000e2e0
   14000e324:	mov    WORD PTR [rdx],0x0
   14000e329:	sub    rcx,rdx
   14000e32c:	sar    rcx,1
   14000e32f:	sub    r12d,ecx
   14000e332:	js     0x14000eb24
   14000e338:	cmp    r12d,DWORD PTR [rbx-0xc]
   14000e33c:	jg     0x14000eb24
   14000e342:	mov    DWORD PTR [rbx-0x10],r12d
   14000e346:	movsxd rax,r12d
   14000e349:	mov    WORD PTR [rbx+rax*2],0x0
   14000e34f:	lea    rdx,[rip+0x5881a]        # 0x140066b70
   14000e356:	mov    rcx,rsi
   14000e359:	call   0x140046660
   14000e35e:	test   rax,rax
   14000e361:	jne    0x14000e373
   14000e363:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e368:	test   BYTE PTR [rdi+0x218],0x1
   14000e36f:	jne    0x14000e395
   14000e371:	jmp    0x14000e378
   14000e373:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e378:	lea    rdx,[rip+0x587f1]        # 0x140066b70
   14000e37f:	mov    rcx,rsi
   14000e382:	call   0x140046660
   14000e387:	test   rax,rax
   14000e38a:	je     0x14000e3a2
   14000e38c:	test   BYTE PTR [rdi+0x218],0x2
   14000e393:	je     0x14000e3a2
   14000e395:	cmp    DWORD PTR [rdi+0x210],0x0
   14000e39c:	je     0x14000ea3a
   14000e3a2:	lea    rdx,[rip+0x587af]        # 0x140066b58
   14000e3a9:	mov    rcx,rsi
   14000e3ac:	call   0x140046660
   14000e3b1:	test   rax,rax
   14000e3b4:	jne    0x14000e3eb
   14000e3b6:	lea    rdx,[rip+0x5878b]        # 0x140066b48
   14000e3bd:	mov    rcx,rsi
   14000e3c0:	call   0x140046660
   14000e3c5:	test   rax,rax
   14000e3c8:	jne    0x14000e3eb
   14000e3ca:	lea    rdx,[rip+0x5875f]        # 0x140066b30
   14000e3d1:	mov    rcx,rsi
   14000e3d4:	call   0x140046660
   14000e3d9:	test   rax,rax
   14000e3dc:	jne    0x14000e3eb
   14000e3de:	test   BYTE PTR [rdi+0x214],0x1
   14000e3e5:	jne    0x14000ea3a
   14000e3eb:	lea    rdx,[rip+0x5871e]        # 0x140066b10
   14000e3f2:	mov    rcx,rsi
   14000e3f5:	call   0x140046660
   14000e3fa:	test   rax,rax
   14000e3fd:	jne    0x14000e40c
   14000e3ff:	test   BYTE PTR [rdi+0x214],0x4
   14000e406:	jne    0x14000ea3a
   14000e40c:	lea    rdx,[rip+0x586cd]        # 0x140066ae0
   14000e413:	mov    rcx,rsi
   14000e416:	call   0x140046660
   14000e41b:	test   rax,rax
   14000e41e:	jne    0x14000e42d
   14000e420:	test   BYTE PTR [rdi+0x214],0x2
   14000e427:	jne    0x14000ea3a
   14000e42d:	cmp    DWORD PTR [rdi+0x210],0x0
   14000e434:	jne    0x14000ea59
   14000e43a:	mov    DWORD PTR [rsp+0x420],0x20
   14000e445:	mov    DWORD PTR [rsp+0x80],r13d
   14000e44d:	lea    r8,[rsp+0x420]
   14000e455:	xor    edx,edx
   14000e457:	mov    r12,QWORD PTR [rsp+0x90]
   14000e45f:	mov    rcx,r12
   14000e462:	call   QWORD PTR [rip+0x562c0]        # 0x140064728
   14000e468:	test   eax,eax
   14000e46a:	je     0x14000ea3a
   14000e470:	jmp    0x14000e483
   14000e472:	xchg   ax,ax
   14000e474:	data16 data16 xchg ax,ax
   14000e478:	data16 data16 xchg ax,ax
   14000e47c:	data16 data16 xchg ax,ax
   14000e480:	xor    r13d,r13d
   14000e483:	lea    rcx,[rsp+0xf0]
   14000e48b:	call   0x140004bb0
   14000e490:	lea    rax,[rsp+0x6c]
   14000e495:	mov    QWORD PTR [rsp+0x30],rax
   14000e49a:	xor    eax,eax
   14000e49c:	mov    DWORD PTR [rsp+0x28],eax
   14000e4a0:	mov    QWORD PTR [rsp+0x20],rax
   14000e4a5:	xor    r9d,r9d
   14000e4a8:	mov    r8d,r14d
   14000e4ab:	lea    rdx,[rsp+0x420]
   14000e4b3:	mov    rcx,r12
   14000e4b6:	call   QWORD PTR [rip+0x5628c]        # 0x140064748
   14000e4bc:	mov    ecx,DWORD PTR [rsp+0x6c]
   14000e4c0:	call   0x1400480c0
   14000e4c5:	mov    r14,rax
   14000e4c8:	test   rax,rax
   14000e4cb:	je     0x14000e9ee
   14000e4d1:	lea    rax,[rsp+0x6c]
   14000e4d6:	mov    QWORD PTR [rsp+0x30],rax
   14000e4db:	mov    ecx,DWORD PTR [rsp+0x6c]
   14000e4df:	mov    DWORD PTR [rsp+0x28],ecx
   14000e4e3:	mov    QWORD PTR [rsp+0x20],r14
   14000e4e8:	xor    r9d,r9d
   14000e4eb:	lea    r8d,[r9+0x1]
   14000e4ef:	lea    rdx,[rsp+0x420]
   14000e4f7:	mov    rcx,r12
   14000e4fa:	call   QWORD PTR [rip+0x56248]        # 0x140064748
   14000e500:	mov    r12,r14
   14000e503:	cmp    WORD PTR [r14],0x0
   14000e508:	je     0x14000e68f
   14000e50e:	xchg   ax,ax
   14000e510:	mov    r8,r12
   14000e513:	mov    edx,0x104
   14000e518:	lea    rcx,[rsp+0x690]
   14000e520:	call   0x140047080
   14000e525:	mov    edx,0x104
   14000e52a:	lea    rcx,[rsp+0x690]
   14000e532:	call   0x140046a70
   14000e537:	mov    rdx,rsi
   14000e53a:	lea    rcx,[rsp+0x690]
   14000e542:	call   0x140046660
   14000e547:	test   rax,rax
   14000e54a:	jne    0x14000e561
   14000e54c:	mov    rdx,rbx
   14000e54f:	lea    rcx,[rsp+0x690]
   14000e557:	call   0x140046660
   14000e55c:	test   rax,rax
   14000e55f:	je     0x14000e567
   14000e561:	mov    r13d,0x1
   14000e567:	test   BYTE PTR [rdi+0x218],0x2
   14000e56e:	je     0x14000e631
   14000e574:	lea    rax,[rsp+0x98]
   14000e57c:	mov    QWORD PTR [rsp+0xe8],rax
   14000e584:	call   0x14002b874
   14000e589:	xor    ecx,ecx
   14000e58b:	test   rax,rax
   14000e58e:	setne  cl
   14000e591:	test   ecx,ecx
   14000e593:	je     0x14000eb13
   14000e599:	mov    rdx,QWORD PTR [rax]
   14000e59c:	mov    rcx,rax
   14000e59f:	call   QWORD PTR [rdx+0x18]
   14000e5a2:	add    rax,0x18
   14000e5a6:	mov    QWORD PTR [rsp+0x98],rax
   14000e5ae:	lea    rcx,[rsp+0x690]
   14000e5b6:	lea    rax,[rsp+0x690]
   14000e5be:	test   rax,0xffffffffffff0000
   14000e5c4:	jne    0x14000e5ea
   14000e5c6:	movzx  edi,cx
   14000e5c9:	mov    ecx,edi
   14000e5cb:	call   0x14002b860
   14000e5d0:	test   rax,rax
   14000e5d3:	je     0x14000e617
   14000e5d5:	mov    r8d,edi
   14000e5d8:	mov    rdx,rax
   14000e5db:	lea    rcx,[rsp+0x98]
   14000e5e3:	call   0x140003650
   14000e5e8:	jmp    0x14000e617
   14000e5ea:	xor    eax,eax
   14000e5ec:	mov    rcx,r15
   14000e5ef:	lea    rdi,[rsp+0x690]
   14000e5f7:	repnz scas ax,WORD PTR es:[rdi]
   14000e5fa:	not    rcx
   14000e5fd:	lea    r8d,[rcx-0x1]
   14000e601:	lea    rdx,[rsp+0x690]
   14000e609:	lea    rcx,[rsp+0x98]
   14000e611:	call   0x1400037d0
   14000e616:	nop
   14000e617:	lea    rdx,[rsp+0x98]
   14000e61f:	lea    rcx,[rsp+0xf0]
   14000e627:	call   0x140008540
   14000e62c:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e631:	test   BYTE PTR [rdi+0x218],0x1
   14000e638:	je     0x14000e66d
   14000e63a:	lea    rdx,[rip+0x5852f]        # 0x140066b70
   14000e641:	lea    rcx,[rsp+0x690]
   14000e649:	call   0x140046660
   14000e64e:	test   rax,rax
   14000e651:	je     0x14000e66d
   14000e653:	lea    r8,[rsp+0x690]
   14000e65b:	mov    edx,0x104
   14000e660:	lea    rcx,[rsp+0x12e0]
   14000e668:	call   0x140047080
   14000e66d:	xor    eax,eax
   14000e66f:	mov    rcx,r15
   14000e672:	mov    rdi,r12
   14000e675:	repnz scas ax,WORD PTR es:[rdi]
   14000e678:	not    rcx
   14000e67b:	lea    r12,[r12+rcx*2]
   14000e67f:	cmp    WORD PTR [r12],ax
   14000e684:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e689:	jne    0x14000e510
   14000e68f:	mov    rcx,r14
   14000e692:	call   0x14001ac50
   14000e697:	test   r13d,r13d
   14000e69a:	je     0x14000e9f6
   14000e6a0:	test   BYTE PTR [rdi+0x218],0x2
   14000e6a7:	je     0x14000e835
   14000e6ad:	xor    r13d,r13d
   14000e6b0:	mov    ebx,r13d
   14000e6b3:	lea    r14d,[r13+0x1]
   14000e6b7:	data16 xchg ax,ax
   14000e6ba:	data16 xchg ax,ax
   14000e6bd:	data16 xchg ax,ax
   14000e6c0:	mov    r8d,ebx
   14000e6c3:	lea    rdx,[rsp+0xc0]
   14000e6cb:	lea    rcx,[rsp+0xf0]
   14000e6d3:	call   0x14000d0c0
   14000e6d8:	nop
   14000e6d9:	mov    rdx,QWORD PTR [rax]
   14000e6dc:	lea    rcx,[rdx-0x18]
   14000e6e0:	add    rbp,0xffffffffffffffe8
   14000e6e4:	cmp    rcx,rbp
   14000e6e7:	je     0x14000e736
   14000e6e9:	cmp    DWORD PTR [rbp+0x10],0x0
   14000e6ed:	jl     0x14000e727
   14000e6ef:	mov    rax,QWORD PTR [rbp+0x0]
   14000e6f3:	cmp    QWORD PTR [rcx],rax
   14000e6f6:	jne    0x14000e727
   14000e6f8:	call   0x140002da0
   14000e6fd:	mov    rdi,rax
   14000e700:	mov    ecx,r15d
   14000e703:	lock xadd DWORD PTR [rbp+0x10],ecx
   14000e708:	add    ecx,0xffffffff
   14000e70b:	test   ecx,ecx
   14000e70d:	jg     0x14000e71c
   14000e70f:	mov    rcx,QWORD PTR [rbp+0x0]
   14000e713:	mov    rax,QWORD PTR [rcx]
   14000e716:	mov    rdx,rbp
   14000e719:	call   QWORD PTR [rax+0x8]
   14000e71c:	lea    rax,[rdi+0x18]
   14000e720:	mov    QWORD PTR [rsp+0x40],rax
   14000e725:	jmp    0x14000e736
   14000e727:	mov    r8d,DWORD PTR [rdx-0x10]
   14000e72b:	lea    rcx,[rsp+0x40]
   14000e730:	call   0x1400037d0
   14000e735:	nop
   14000e736:	mov    rdx,QWORD PTR [rsp+0xc0]
   14000e73e:	add    rdx,0xffffffffffffffe8
   14000e742:	mov    eax,r15d
   14000e745:	lock xadd DWORD PTR [rdx+0x10],eax
   14000e74a:	add    eax,0xffffffff
   14000e74d:	test   eax,eax
   14000e74f:	jg     0x14000e75a
   14000e751:	mov    rcx,QWORD PTR [rdx]
   14000e754:	mov    rax,QWORD PTR [rcx]
   14000e757:	call   QWORD PTR [rax+0x8]
   14000e75a:	xor    eax,eax
   14000e75c:	lea    rdi,[rip+0x56be5]        # 0x140065348
   14000e763:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e768:	mov    rsi,rbp
   14000e76b:	mov    rcx,r14
   14000e76e:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000e771:	je     0x14000e778
   14000e773:	sbb    eax,eax
   14000e775:	sbb    eax,0xffffffff
   14000e778:	test   eax,eax
   14000e77a:	sete   al
   14000e77d:	test   al,al
   14000e77f:	jne    0x14000e824
   14000e785:	add    ebx,0x1
   14000e788:	mov    rcx,QWORD PTR [rbp-0x18]
   14000e78c:	mov    rax,QWORD PTR [rcx]
   14000e78f:	call   QWORD PTR [rax+0x20]
   14000e792:	mov    rcx,rax
   14000e795:	cmp    DWORD PTR [rbp-0x8],0x0
   14000e799:	jl     0x14000e7b1
   14000e79b:	cmp    rax,QWORD PTR [rbp-0x18]
   14000e79f:	jne    0x14000e7b1
   14000e7a1:	lea    rsi,[rbp-0x18]
   14000e7a5:	lock add DWORD PTR [rbp-0x8],0x1
   14000e7aa:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e7af:	jmp    0x14000e7ed
   14000e7b1:	mov    rax,QWORD PTR [rax]
   14000e7b4:	mov    r8d,0x2
   14000e7ba:	mov    edx,DWORD PTR [rbp-0x10]
   14000e7bd:	call   QWORD PTR [rax]
   14000e7bf:	mov    rsi,rax
   14000e7c2:	test   rax,rax
   14000e7c5:	je     0x14000eb1e
   14000e7cb:	mov    ecx,DWORD PTR [rbp-0x10]
   14000e7ce:	mov    DWORD PTR [rax+0x8],ecx
   14000e7d1:	mov    ecx,DWORD PTR [rbp-0x10]
   14000e7d4:	add    ecx,0x1
   14000e7d7:	movsxd rdx,ecx
   14000e7da:	lea    r9,[rdx+rdx*1]
   14000e7de:	mov    r8,rbp
   14000e7e1:	add    rdx,rdx
   14000e7e4:	lea    rcx,[rax+0x18]
   14000e7e8:	call   0x1400466d0
   14000e7ed:	lea    rax,[rsi+0x18]
   14000e7f1:	mov    QWORD PTR [rsp+0xc8],rax
   14000e7f9:	lea    rdx,[rsp+0xc8]
   14000e801:	lea    rcx,[rip+0x7a048]        # 0x140088850
   14000e808:	call   0x140002e90
   14000e80d:	test   eax,eax
   14000e80f:	je     0x14000e6c0
   14000e815:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e81a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e81f:	jmp    0x14000e9fc
   14000e824:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e829:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e82e:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e833:	jmp    0x14000e83e
   14000e835:	mov    r14d,0x1
   14000e83b:	xor    r13d,r13d
   14000e83e:	add    DWORD PTR [rsp+0x68],0x1
   14000e843:	mov    r8,rsi
   14000e846:	mov    edx,0x104
   14000e84b:	lea    rcx,[rsp+0x10d0]
   14000e853:	call   0x140047080
   14000e858:	lea    r8,[rsp+0xab0]
   14000e860:	mov    edx,0x208
   14000e865:	lea    rcx,[rsp+0x14f0]
   14000e86d:	call   0x140047080
   14000e872:	lea    r11,[rsp+0x70]
   14000e877:	mov    QWORD PTR [rsp+0x20],r11
   14000e87c:	mov    r9d,r14d
   14000e87f:	lea    r8,[rsp+0x14f0]
   14000e887:	lea    rdx,[rsp+0x10d0]
   14000e88f:	xor    ecx,ecx
   14000e891:	call   0x14001abd6
   14000e896:	test   eax,eax
   14000e898:	jne    0x14000e8b1
   14000e89a:	call   QWORD PTR [rip+0x55d60]        # 0x140064600
   14000e8a0:	mov    edx,eax
   14000e8a2:	mov    rcx,QWORD PTR [rsp+0x78]
   14000e8a7:	call   0x140007bf0
   14000e8ac:	jmp    0x14000e997
   14000e8b1:	cmp    DWORD PTR [rsp+0x70],0x0
   14000e8b6:	je     0x14000e98d
   14000e8bc:	test   BYTE PTR [rdi+0x214],0x1
   14000e8c3:	je     0x14000e98d
   14000e8c9:	mov    r12,QWORD PTR [rsp+0x78]
   14000e8ce:	cmp    DWORD PTR [r12+0xeb134],0x0
   14000e8d7:	je     0x14000e98d
   14000e8dd:	mov    edx,0x208
   14000e8e2:	lea    rcx,[rsp+0xec0]
   14000e8ea:	call   QWORD PTR [rip+0x55ce0]        # 0x1400645d0
   14000e8f0:	lea    rdx,[rip+0x581c1]        # 0x140066ab8
   14000e8f7:	lea    rcx,[rsp+0xec0]
   14000e8ff:	call   QWORD PTR [rip+0x55cd3]        # 0x1400645d8
   14000e905:	mov    DWORD PTR [rsp+0x28],r13d
   14000e90a:	mov    QWORD PTR [rsp+0x20],r13
   14000e90f:	lea    r9,[rip+0x58182]        # 0x140066a98
   14000e916:	lea    r8,[rsp+0xec0]
   14000e91e:	lea    rdx,[rip+0x58163]        # 0x140066a88
   14000e925:	xor    ecx,ecx
   14000e927:	call   QWORD PTR [rip+0x55e3b]        # 0x140064768
   14000e92d:	lea    r11,[rsp+0x70]
   14000e932:	mov    QWORD PTR [rsp+0x20],r11
   14000e937:	mov    r9d,r14d
   14000e93a:	lea    r8,[rsp+0x14f0]
   14000e942:	lea    rdx,[rsp+0x10d0]
   14000e94a:	xor    ecx,ecx
   14000e94c:	call   0x14001abd6
   14000e951:	test   eax,eax
   14000e953:	jne    0x14000e965
   14000e955:	call   QWORD PTR [rip+0x55ca5]        # 0x140064600
   14000e95b:	mov    edx,eax
   14000e95d:	mov    rcx,r12
   14000e960:	call   0x140007bf0
   14000e965:	mov    DWORD PTR [rsp+0x28],r13d
   14000e96a:	mov    QWORD PTR [rsp+0x20],r13
   14000e96f:	lea    r9,[rip+0x580f2]        # 0x140066a68
   14000e976:	lea    r8,[rsp+0xec0]
   14000e97e:	lea    rdx,[rip+0x58103]        # 0x140066a88
   14000e985:	xor    ecx,ecx
   14000e987:	call   QWORD PTR [rip+0x55ddb]        # 0x140064768
   14000e98d:	mov    DWORD PTR [rsp+0x60],r14d
   14000e992:	add    DWORD PTR [rsp+0x64],0x1
   14000e997:	test   BYTE PTR [rdi+0x218],0x1
   14000e99e:	je     0x14000e9fc
   14000e9a0:	lea    rdx,[rsp+0x12e0]
   14000e9a8:	lea    rcx,[rsp+0xe0]
   14000e9b0:	call   0x14000c360
   14000e9b5:	mov    rdx,rax
   14000e9b8:	lea    rcx,[rip+0x79e91]        # 0x140088850
   14000e9bf:	call   0x140002e90
   14000e9c4:	test   eax,eax
   14000e9c6:	jne    0x14000e9fc
   14000e9c8:	lea    rdx,[rsp+0x12e0]
   14000e9d0:	lea    rcx,[rsp+0xd0]
   14000e9d8:	call   0x14000c360
   14000e9dd:	mov    rdx,rax
   14000e9e0:	lea    rcx,[rip+0x79e69]        # 0x140088850
   14000e9e7:	call   0x140008540
   14000e9ec:	jmp    0x14000e9fc
   14000e9ee:	mov    r14d,0x1
   14000e9f4:	jmp    0x14000e9fc
   14000e9f6:	mov    r14d,0x1
   14000e9fc:	mov    eax,DWORD PTR [rsp+0x80]
   14000ea03:	add    eax,0x1
   14000ea06:	mov    DWORD PTR [rsp+0x80],eax
   14000ea0d:	lea    r8,[rsp+0x420]
   14000ea15:	mov    edx,eax
   14000ea17:	mov    rcx,QWORD PTR [rsp+0x90]
   14000ea1f:	call   QWORD PTR [rip+0x55d03]        # 0x140064728
   14000ea25:	test   eax,eax
   14000ea27:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ea2c:	mov    r12,QWORD PTR [rsp+0x90]
   14000ea34:	jne    0x14000e480
   14000ea3a:	lea    rdx,[rsp+0xa0]
   14000ea42:	lea    rcx,[rsp+0xa0]
   14000ea4a:	call   QWORD PTR [rip+0x55c88]        # 0x1400646d8
   14000ea50:	test   eax,eax
   14000ea52:	je     0x14000eac5
   14000ea54:	jmp    0x14000e0b0
   14000ea59:	mov    QWORD PTR [rsp+0x38],r13
   14000ea5e:	mov    QWORD PTR [rsp+0x30],r13
   14000ea63:	mov    DWORD PTR [rsp+0x28],0x104
   14000ea6b:	lea    rax,[rsp+0x1900]
   14000ea73:	mov    QWORD PTR [rsp+0x20],rax
   14000ea78:	xor    r9d,r9d
   14000ea7b:	mov    r8d,r14d
   14000ea7e:	xor    edx,edx
   14000ea80:	lea    rcx,[rsp+0xab0]
   14000ea88:	call   QWORD PTR [rip+0x55c2a]        # 0x1400646b8
   14000ea8e:	test   eax,eax
   14000ea90:	jne    0x14000eab1
   14000ea92:	call   QWORD PTR [rip+0x55b68]        # 0x140064600
   14000ea98:	mov    edx,eax
   14000ea9a:	mov    r12,QWORD PTR [rsp+0x78]
   14000ea9f:	mov    rcx,r12
   14000eaa2:	call   0x140007bf0
   14000eaa7:	mov    r13,QWORD PTR [rsp+0x88]
   14000eaaf:	jmp    0x14000ead2
   14000eab1:	mov    DWORD PTR [rsp+0x60],r14d
   14000eab6:	mov    r12,QWORD PTR [rsp+0x78]
   14000eabb:	mov    r13,QWORD PTR [rsp+0x88]
   14000eac3:	jmp    0x14000ead2
   14000eac5:	mov    r12,QWORD PTR [rsp+0x78]
   14000eaca:	mov    r13,QWORD PTR [rsp+0x88]
   14000ead2:	mov    rcx,r13
   14000ead5:	call   QWORD PTR [rip+0x55bed]        # 0x1400646c8
   14000eadb:	lea    rdx,[rsp+0x440]
   14000eae3:	mov    r13,QWORD PTR [rsp+0xb8]
   14000eaeb:	mov    rcx,r13
   14000eaee:	call   QWORD PTR [rip+0x55a3c]        # 0x140064530
   14000eaf4:	test   eax,eax
   14000eaf6:	je     0x14000eb5b
   14000eaf8:	jmp    0x14000ddc0
   14000eafd:	mov    ecx,0x80070057
   14000eb02:	call   0x140001430
   14000eb07:	int3   
   14000eb08:	mov    ecx,0x80070057
   14000eb0d:	call   0x140001430
   14000eb12:	int3   
   14000eb13:	mov    ecx,0x80004005
   14000eb18:	call   0x140001430
   14000eb1d:	int3   
   14000eb1e:	call   0x1400021a0
   14000eb23:	int3   
   14000eb24:	mov    ecx,0x80070057
   14000eb29:	call   0x140001430
   14000eb2e:	int3   
   14000eb2f:	mov    ecx,0x80070057
   14000eb34:	call   0x140001430
   14000eb39:	int3   
   14000eb3a:	mov    ecx,0x80070057
   14000eb3f:	call   0x140001430
   14000eb44:	int3   
   14000eb45:	mov    ecx,0x80070057
   14000eb4a:	call   0x140001430
   14000eb4f:	int3   
   14000eb50:	mov    ecx,0x80070057
   14000eb55:	call   0x140001430
   14000eb5a:	int3   
   14000eb5b:	mov    rcx,r13
   14000eb5e:	call   QWORD PTR [rip+0x559d4]        # 0x140064538
   14000eb64:	mov    r13d,DWORD PTR [rsp+0x60]
   14000eb69:	mov    rcx,QWORD PTR [rsp+0x90]
   14000eb71:	call   QWORD PTR [rip+0x55bc1]        # 0x140064738
   14000eb77:	mov    edx,DWORD PTR [rsp+0x68]
   14000eb7b:	mov    DWORD PTR [rdi+0x208],edx
   14000eb81:	mov    eax,DWORD PTR [rsp+0x64]
   14000eb85:	mov    DWORD PTR [rdi+0x20c],eax
   14000eb8b:	mov    ecx,0xfffffffe
   14000eb90:	test   edx,edx
   14000eb92:	jne    0x14000eb9b
   14000eb94:	lea    esi,[rdx+0x1]
   14000eb97:	xor    edx,edx
   14000eb99:	jmp    0x14000ebb2
   14000eb9b:	cmp    edx,eax
   14000eb9d:	je     0x14000eba8
   14000eb9f:	mov    esi,0xfffffffd
   14000eba4:	xor    edx,edx
   14000eba6:	jmp    0x14000ebb2
   14000eba8:	xor    edx,edx
   14000ebaa:	mov    esi,edx
   14000ebac:	test   r13d,r13d
   14000ebaf:	cmove  esi,ecx
   14000ebb2:	cmp    DWORD PTR [rdi+0x210],0x0
   14000ebb9:	je     0x14000ebc3
   14000ebbb:	test   r13d,r13d
   14000ebbe:	cmovne ecx,edx
   14000ebc1:	mov    esi,ecx
   14000ebc3:	lea    r9,[rip+0xffffffffffff24f6]        # 0x1400010c0
   14000ebca:	mov    edx,0x8
   14000ebcf:	lea    r8d,[rdx+0x5c]
   14000ebd3:	lea    rcx,[rsp+0xf0]
   14000ebdb:	call   0x140045b20
   14000ebe0:	nop
   14000ebe1:	lea    rdx,[rbx-0x18]
   14000ebe5:	mov    eax,r15d
   14000ebe8:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ebed:	add    eax,0xffffffff
   14000ebf0:	test   eax,eax
   14000ebf2:	jg     0x14000ebfe
   14000ebf4:	mov    rcx,QWORD PTR [rdx]
   14000ebf7:	mov    rax,QWORD PTR [rcx]
   14000ebfa:	call   QWORD PTR [rax+0x8]
   14000ebfd:	nop
   14000ebfe:	mov    rdx,QWORD PTR [rsp+0x48]
   14000ec03:	add    rdx,0xffffffffffffffe8
   14000ec07:	mov    eax,r15d
   14000ec0a:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ec0f:	add    eax,0xffffffff
   14000ec12:	test   eax,eax
   14000ec14:	jg     0x14000ec20
   14000ec16:	mov    rcx,QWORD PTR [rdx]
   14000ec19:	mov    rax,QWORD PTR [rcx]
   14000ec1c:	call   QWORD PTR [rax+0x8]
   14000ec1f:	nop
   14000ec20:	mov    rdx,QWORD PTR [rsp+0x40]
   14000ec25:	add    rdx,0xffffffffffffffe8
   14000ec29:	lock xadd DWORD PTR [rdx+0x10],r15d
   14000ec2f:	add    r15d,0xffffffff
   14000ec33:	test   r15d,r15d
   14000ec36:	jg     0x14000ec41
   14000ec38:	mov    rcx,QWORD PTR [rdx]
   14000ec3b:	mov    rax,QWORD PTR [rcx]
   14000ec3e:	call   QWORD PTR [rax+0x8]
   14000ec41:	mov    eax,esi
   14000ec43:	mov    rcx,QWORD PTR [rsp+0x1b10]
   14000ec4b:	xor    rcx,rsp
   14000ec4e:	call   0x140046470
   14000ec53:	mov    rbx,QWORD PTR [rsp+0x1b70]
   14000ec5b:	add    rsp,0x1b20
   14000ec62:	pop    r15
   14000ec64:	pop    r14
   14000ec66:	pop    r13
   14000ec68:	pop    r12
   14000ec6a:	pop    rdi
   14000ec6b:	pop    rsi
   14000ec6c:	pop    rbp
   14000ec6d:	ret    
   14000ec6e:	int3   
   14000ec6f:	int3   
   14000ec70:	rex push rbp
   14000ec72:	sub    rsp,0x20
   14000ec76:	mov    rbp,rdx
   14000ec79:	lea    rcx,[rbp+0x40]
   14000ec7d:	call   0x1400010c0
   14000ec82:	add    rsp,0x20
   14000ec86:	pop    rbp
   14000ec87:	ret    
   14000ec88:	int3   
   14000ec89:	int3   
   14000ec8a:	int3   
   14000ec8b:	int3   
   14000ec8c:	int3   
   14000ec8d:	int3   
   14000ec8e:	int3   
   14000ec8f:	int3   
   14000ec90:	rex push rbp
   14000ec92:	sub    rsp,0x20
   14000ec96:	mov    rbp,rdx
   14000ec99:	lea    rcx,[rbp+0x48]
   14000ec9d:	call   0x1400010c0
   14000eca2:	add    rsp,0x20
   14000eca6:	pop    rbp
   14000eca7:	ret    
   14000eca8:	int3   
   14000eca9:	int3   
   14000ecaa:	int3   
   14000ecab:	int3   
   14000ecac:	int3   
   14000ecad:	int3   
   14000ecae:	int3   
   14000ecaf:	int3   
   14000ecb0:	rex push rbp
   14000ecb2:	sub    rsp,0x20
   14000ecb6:	mov    rbp,rdx
   14000ecb9:	lea    rcx,[rbp+0x50]
   14000ecbd:	call   0x1400010c0
   14000ecc2:	add    rsp,0x20
   14000ecc6:	pop    rbp
   14000ecc7:	ret    
   14000ecc8:	int3   
   14000ecc9:	int3   
   14000ecca:	int3   
   14000eccb:	int3   
   14000eccc:	int3   
   14000eccd:	int3   
   14000ecce:	int3   
   14000eccf:	int3   
   14000ecd0:	rex push rbp
   14000ecd2:	sub    rsp,0x20
   14000ecd6:	mov    rbp,rdx
   14000ecd9:	lea    rcx,[rbp+0xf0]
   14000ece0:	call   0x140002e70
   14000ece5:	add    rsp,0x20
   14000ece9:	pop    rbp
   14000ecea:	ret    
   14000eceb:	int3   
   14000ecec:	int3   
   14000eced:	int3   
   14000ecee:	int3   
   14000ecef:	int3   
   14000ecf0:	rex push rbp
   14000ecf2:	sub    rsp,0x20
   14000ecf6:	mov    rbp,rdx
   14000ecf9:	mov    rcx,QWORD PTR [rbp+0xe8]
   14000ed00:	call   0x140001090
   14000ed05:	add    rsp,0x20
   14000ed09:	pop    rbp
   14000ed0a:	ret    
   14000ed0b:	int3   
   14000ed0c:	int3   
   14000ed0d:	int3   
   14000ed0e:	int3   
   14000ed0f:	int3   
   14000ed10:	rex push rbp
   14000ed12:	sub    rsp,0x20
   14000ed16:	mov    rbp,rdx
   14000ed19:	lea    rcx,[rbp+0xc0]
   14000ed20:	call   0x1400010c0
   14000ed25:	add    rsp,0x20
   14000ed29:	pop    rbp
   14000ed2a:	ret    
   14000ed2b:	int3   
   14000ed2c:	int3   
   14000ed2d:	int3   
   14000ed2e:	int3   
   14000ed2f:	int3   
   14000ed30:	rex push rbp
   14000ed32:	push   rsi
   14000ed33:	push   rdi
   14000ed34:	push   r12
   14000ed36:	push   r13
   14000ed38:	push   r14
   14000ed3a:	push   r15
   14000ed3c:	mov    eax,0x11c0
   14000ed41:	call   0x140063500
   14000ed46:	sub    rsp,rax
   14000ed49:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   14000ed55:	mov    QWORD PTR [rsp+0x1210],rbx
   14000ed5d:	mov    rax,QWORD PTR [rip+0x7800c]        # 0x140086d70
   14000ed64:	xor    rax,rsp
   14000ed67:	mov    QWORD PTR [rsp+0x11b0],rax
   14000ed6f:	mov    rsi,rdx
   14000ed72:	mov    QWORD PTR [rsp+0x58],rdx
   14000ed77:	mov    r15,rcx
   14000ed7a:	mov    QWORD PTR [rsp+0xb0],rdx
   14000ed82:	mov    QWORD PTR [rsp+0x70],0x0
   14000ed8b:	mov    DWORD PTR [rsp+0x60],0x0
   14000ed93:	call   0x14002b874
   14000ed98:	mov    rcx,rax
   14000ed9b:	xor    eax,eax
   14000ed9d:	test   rcx,rcx
   14000eda0:	setne  al
   14000eda3:	test   eax,eax
   14000eda5:	jne    0x14000edb2
   14000eda7:	mov    ecx,0x80004005
   14000edac:	call   0x140001430
   14000edb1:	int3   
   14000edb2:	mov    rax,QWORD PTR [rcx]
   14000edb5:	call   QWORD PTR [rax+0x18]
   14000edb8:	lea    rbx,[rax+0x18]
   14000edbc:	mov    QWORD PTR [rsp+0x40],rbx
   14000edc1:	lea    rdx,[rip+0x56708]        # 0x1400654d0
   14000edc8:	test   rdx,0xffffffffffff0000
   14000edcf:	jne    0x14000edf7
   14000edd1:	movzx  edi,dx
   14000edd4:	mov    ecx,edi
   14000edd6:	call   0x14002b860
   14000eddb:	test   rax,rax
   14000edde:	je     0x14000ee06
   14000ede0:	mov    r8d,edi
   14000ede3:	mov    rdx,rax
   14000ede6:	lea    rcx,[rsp+0x40]
   14000edeb:	call   0x140003650
   14000edf0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000edf5:	jmp    0x14000ee06
   14000edf7:	lea    rcx,[rsp+0x40]
   14000edfc:	call   0x140003930
   14000ee01:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ee06:	mov    DWORD PTR [rsp+0x50],0x0
   14000ee0e:	mov    r9d,0x6
   14000ee14:	xor    r8d,r8d
   14000ee17:	xor    edx,edx
   14000ee19:	xor    ecx,ecx
   14000ee1b:	call   QWORD PTR [rip+0x558ff]        # 0x140064720
   14000ee21:	mov    rbp,rax
   14000ee24:	cmp    rax,0xffffffffffffffff
   14000ee28:	jne    0x14000ee6f
   14000ee2a:	lea    rdx,[rbx-0x18]
   14000ee2e:	or     r14,rax
   14000ee31:	mov    eax,r14d
   14000ee34:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ee39:	add    eax,ebp
   14000ee3b:	test   eax,eax
   14000ee3d:	jg     0x14000ee49
   14000ee3f:	mov    rcx,QWORD PTR [rdx]
   14000ee42:	mov    rax,QWORD PTR [rcx]
   14000ee45:	call   QWORD PTR [rax+0x8]
   14000ee48:	nop
   14000ee49:	mov    rdx,QWORD PTR [rsi]
   14000ee4c:	sub    rdx,0x18
   14000ee50:	lock xadd DWORD PTR [rdx+0x10],r14d
   14000ee56:	add    r14d,0xffffffff
   14000ee5a:	test   r14d,r14d
   14000ee5d:	jg     0x14000ee68
   14000ee5f:	mov    rcx,QWORD PTR [rdx]
   14000ee62:	mov    rax,QWORD PTR [rcx]
   14000ee65:	call   QWORD PTR [rax+0x8]
   14000ee68:	xor    eax,eax
   14000ee6a:	jmp    0x14000f93f
   14000ee6f:	mov    DWORD PTR [rsp+0xd0],0x20
   14000ee7a:	xor    r12d,r12d
   14000ee7d:	lea    r8,[rsp+0xd0]
   14000ee85:	xor    edx,edx
   14000ee87:	mov    rcx,rax
   14000ee8a:	call   QWORD PTR [rip+0x55898]        # 0x140064728
   14000ee90:	or     r14,0xffffffffffffffff
   14000ee94:	test   eax,eax
   14000ee96:	je     0x14000f1b7
   14000ee9c:	data16 data16 xchg ax,ax
   14000eea0:	lea    rax,[rsp+0x60]
   14000eea5:	mov    QWORD PTR [rsp+0x20],rax
   14000eeaa:	lea    r9,[rsp+0x70]
   14000eeaf:	mov    r8d,0x4
   14000eeb5:	lea    rdx,[rsp+0xd0]
   14000eebd:	mov    rcx,rbp
   14000eec0:	call   0x140001c30
   14000eec5:	test   eax,eax
   14000eec7:	je     0x14000f18b
   14000eecd:	mov    rdx,QWORD PTR [rsp+0x70]
   14000eed2:	test   rdx,rdx
   14000eed5:	jne    0x14000eedb
   14000eed7:	xor    ecx,ecx
   14000eed9:	jmp    0x14000eeed
   14000eedb:	xor    eax,eax
   14000eedd:	mov    rcx,r14
   14000eee0:	mov    rdi,rdx
   14000eee3:	repnz scas ax,WORD PTR es:[rdi]
   14000eee6:	not    rcx
   14000eee9:	sub    rcx,0x1
   14000eeed:	mov    r8d,ecx
   14000eef0:	lea    rcx,[rsp+0x40]
   14000eef5:	call   0x1400037d0
   14000eefa:	mov    rbx,QWORD PTR [rsp+0x40]
   14000eeff:	movsxd rdi,DWORD PTR [rbx-0x10]
   14000ef03:	mov    ecx,0x1
   14000ef08:	sub    ecx,DWORD PTR [rbx-0x8]
   14000ef0b:	mov    eax,DWORD PTR [rbx-0xc]
   14000ef0e:	sub    eax,edi
   14000ef10:	or     eax,ecx
   14000ef12:	jge    0x14000ef25
   14000ef14:	mov    edx,edi
   14000ef16:	lea    rcx,[rsp+0x40]
   14000ef1b:	call   0x140002d40
   14000ef20:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ef25:	lea    eax,[rdi+0x1]
   14000ef28:	movsxd rdx,eax
   14000ef2b:	mov    rcx,rbx
   14000ef2e:	call   0x140046a70
   14000ef33:	test   edi,edi
   14000ef35:	js     0x14000f1ac
   14000ef3b:	cmp    edi,DWORD PTR [rbx-0xc]
   14000ef3e:	jg     0x14000f1ac
   14000ef44:	mov    DWORD PTR [rbx-0x10],edi
   14000ef47:	mov    WORD PTR [rbx+rdi*2],0x0
   14000ef4d:	mov    rdx,QWORD PTR [rsi]
   14000ef50:	test   rdx,rdx
   14000ef53:	je     0x14000f18b
   14000ef59:	cmp    DWORD PTR [rbx-0x10],0x0
   14000ef5d:	jl     0x14000f18b
   14000ef63:	mov    rcx,rbx
   14000ef66:	call   0x140046660
   14000ef6b:	test   rax,rax
   14000ef6e:	je     0x14000f18b
   14000ef74:	sub    rax,rbx
   14000ef77:	sar    rax,1
   14000ef7a:	cmp    eax,0xffffffff
   14000ef7d:	je     0x14000f18b
   14000ef83:	mov    DWORD PTR [rsp+0x28],0x20019
   14000ef8b:	mov    DWORD PTR [rsp+0x20],0x2
   14000ef93:	xor    r9d,r9d
   14000ef96:	lea    r8d,[r9+0x1]
   14000ef9a:	lea    rdx,[rsp+0xd0]
   14000efa2:	mov    rcx,rbp
   14000efa5:	call   QWORD PTR [rip+0x55735]        # 0x1400646e0
   14000efab:	mov    rsi,rax
   14000efae:	cmp    rax,0xffffffffffffffff
   14000efb2:	je     0x14000f186
   14000efb8:	mov    DWORD PTR [rsp+0x68],0x1
   14000efc0:	mov    DWORD PTR [rsp+0x64],0x208
   14000efc8:	lea    rax,[rsp+0x64]
   14000efcd:	mov    QWORD PTR [rsp+0x28],rax
   14000efd2:	lea    rax,[rsp+0xb80]
   14000efda:	mov    QWORD PTR [rsp+0x20],rax
   14000efdf:	lea    r9,[rsp+0x68]
   14000efe4:	xor    r8d,r8d
   14000efe7:	lea    rdx,[rip+0x56e9a]        # 0x140065e88
   14000efee:	mov    rcx,rsi
   14000eff1:	call   QWORD PTR [rip+0x55059]        # 0x140064050
   14000eff7:	test   eax,eax
   14000eff9:	jne    0x14000f176
   14000efff:	mov    edx,0x104
   14000f004:	lea    rcx,[rsp+0x340]
   14000f00c:	call   QWORD PTR [rip+0x555be]        # 0x1400645d0
   14000f012:	lea    r8,[rip+0x57bf7]        # 0x140066c10
   14000f019:	mov    edx,0x104
   14000f01e:	lea    rcx,[rsp+0x340]
   14000f026:	call   0x140047130
   14000f02b:	lea    r8,[rsp+0xb80]
   14000f033:	mov    edx,0x104
   14000f038:	lea    rcx,[rsp+0x340]
   14000f040:	call   0x140047130
   14000f045:	mov    QWORD PTR [rsp+0x30],0x0
   14000f04e:	mov    DWORD PTR [rsp+0x28],0x80
   14000f056:	lea    rax,[rsp+0xfa0]
   14000f05e:	mov    QWORD PTR [rsp+0x20],rax
   14000f063:	xor    r9d,r9d
   14000f066:	lea    r8d,[r9+0x9]
   14000f06a:	lea    rdx,[rsp+0xd0]
   14000f072:	mov    rcx,rbp
   14000f075:	call   QWORD PTR [rip+0x556cd]        # 0x140064748
   14000f07b:	test   eax,eax
   14000f07d:	je     0x14000f0d1
   14000f07f:	lea    r8,[rsp+0xd0]
   14000f087:	mov    rdx,rbp
   14000f08a:	mov    ecx,0x5
   14000f08f:	call   QWORD PTR [rip+0x55673]        # 0x140064708
   14000f095:	mov    edi,eax
   14000f097:	lea    rdx,[rsp+0x340]
   14000f09f:	lea    rcx,[rsp+0x98]
   14000f0a7:	call   0x14000c360
   14000f0ac:	mov    rdx,rax
   14000f0af:	mov    rcx,r15
   14000f0b2:	call   0x14000c440
   14000f0b7:	test   eax,eax
   14000f0b9:	je     0x14000f0d1
   14000f0bb:	movsxd rcx,DWORD PTR [r15+0xeb100]
   14000f0c2:	imul   rcx,rcx,0x12c8
   14000f0c9:	mov    DWORD PTR [rcx+r15*1+0x4bc],edi
   14000f0d1:	cmp    DWORD PTR [rip+0x79740],0x0        # 0x140088818
   14000f0d8:	jne    0x14000f0fe
   14000f0da:	cmp    DWORD PTR [rip+0x7973b],0x0        # 0x14008881c
   14000f0e1:	jne    0x14000f0fe
   14000f0e3:	cmp    DWORD PTR [rip+0x79736],0x0        # 0x140088820
   14000f0ea:	jne    0x14000f0fe
   14000f0ec:	cmp    DWORD PTR [rip+0x79731],0x0        # 0x140088824
   14000f0f3:	jne    0x14000f0fe
   14000f0f5:	cmp    DWORD PTR [rip+0x7972c],0x0        # 0x140088828
   14000f0fc:	je     0x14000f176
   14000f0fe:	lea    r9,[rsp+0x50]
   14000f103:	xor    r8d,r8d
   14000f106:	lea    edx,[r8+0x24]
   14000f10a:	lea    rcx,[rsp+0x340]
   14000f112:	call   0x140001d10
   14000f117:	test   eax,eax
   14000f119:	je     0x14000f12a
   14000f11b:	mov    r8d,eax
   14000f11e:	xor    edx,edx
   14000f120:	mov    rcx,r15
   14000f123:	call   0x140008190
   14000f128:	jmp    0x14000f176
   14000f12a:	lea    rdx,[rip+0x562c7]        # 0x1400653f8
   14000f131:	lea    rcx,[rsp+0x340]
   14000f139:	call   0x140046660
   14000f13e:	mov    WORD PTR [rax],0x2e
   14000f143:	mov    WORD PTR [rax+0x2],0x50
   14000f149:	mov    WORD PTR [rax+0x4],0x4e
   14000f14f:	mov    WORD PTR [rax+0x6],0x46
   14000f155:	mov    edx,0x80
   14000f15a:	lea    rcx,[rsp+0x340]
   14000f162:	call   QWORD PTR [rip+0x553b8]        # 0x140064520
   14000f168:	lea    rcx,[rsp+0x340]
   14000f170:	call   QWORD PTR [rip+0x553ca]        # 0x140064540
   14000f176:	mov    rcx,rsi
   14000f179:	call   QWORD PTR [rip+0x54ee9]        # 0x140064068
   14000f17f:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f184:	jmp    0x14000f18b
   14000f186:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f18b:	add    r12d,0x1
   14000f18f:	lea    r8,[rsp+0xd0]
   14000f197:	mov    edx,r12d
   14000f19a:	mov    rcx,rbp
   14000f19d:	call   QWORD PTR [rip+0x55585]        # 0x140064728
   14000f1a3:	test   eax,eax
   14000f1a5:	je     0x14000f1b7
   14000f1a7:	jmp    0x14000eea0
   14000f1ac:	mov    ecx,0x80070057
   14000f1b1:	call   0x140001430
   14000f1b6:	int3   
   14000f1b7:	mov    rcx,rbp
   14000f1ba:	call   QWORD PTR [rip+0x55578]        # 0x140064738
   14000f1c0:	xor    edx,edx
   14000f1c2:	mov    r8d,0x250
   14000f1c8:	lea    rcx,[rsp+0xf0]
   14000f1d0:	call   0x140047720
   14000f1d5:	mov    edx,0x104
   14000f1da:	lea    rcx,[rsp+0x340]
   14000f1e2:	call   QWORD PTR [rip+0x553e8]        # 0x1400645d0
   14000f1e8:	lea    r8,[rip+0x57a01]        # 0x140066bf0
   14000f1ef:	mov    edx,0x104
   14000f1f4:	lea    rcx,[rsp+0x340]
   14000f1fc:	call   0x140047130
   14000f201:	lea    rdx,[rsp+0xf0]
   14000f209:	lea    rcx,[rsp+0x340]
   14000f211:	call   QWORD PTR [rip+0x55311]        # 0x140064528
   14000f217:	mov    r13,rax
   14000f21a:	mov    QWORD PTR [rsp+0x78],rax
   14000f21f:	cmp    rax,0xffffffffffffffff
   14000f223:	je     0x14000f8fc
   14000f229:	data16 xchg ax,ax
   14000f22c:	data16 data16 xchg ax,ax
   14000f230:	call   0x14002b874
   14000f235:	xor    ecx,ecx
   14000f237:	test   rax,rax
   14000f23a:	setne  cl
   14000f23d:	test   ecx,ecx
   14000f23f:	je     0x14000f8f1
   14000f245:	mov    rdx,QWORD PTR [rax]
   14000f248:	mov    rcx,rax
   14000f24b:	call   QWORD PTR [rdx+0x18]
   14000f24e:	lea    rsi,[rax+0x18]
   14000f252:	mov    QWORD PTR [rsp+0x48],rsi
   14000f257:	lea    rcx,[rsp+0x11c]
   14000f25f:	lea    rax,[rsp+0x11c]
   14000f267:	test   rax,0xffffffffffff0000
   14000f26d:	jne    0x14000f29c
   14000f26f:	movzx  edi,cx
   14000f272:	mov    ecx,edi
   14000f274:	call   0x14002b860
   14000f279:	test   rax,rax
   14000f27c:	je     0x14000f3a1
   14000f282:	mov    r8d,edi
   14000f285:	mov    rdx,rax
   14000f288:	lea    rcx,[rsp+0x48]
   14000f28d:	call   0x140003650
   14000f292:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f297:	jmp    0x14000f3a1
   14000f29c:	xor    eax,eax
   14000f29e:	mov    rcx,r14
   14000f2a1:	lea    rdi,[rsp+0x11c]
   14000f2a9:	repnz scas ax,WORD PTR es:[rdi]
   14000f2ac:	not    rcx
   14000f2af:	sub    rcx,0x1
   14000f2b3:	mov    rdi,rcx
   14000f2b6:	test   ecx,ecx
   14000f2b8:	jne    0x14000f317
   14000f2ba:	lea    rdx,[rsi-0x18]
   14000f2be:	mov    rdi,QWORD PTR [rdx]
   14000f2c1:	cmp    DWORD PTR [rdx+0x8],eax
   14000f2c4:	je     0x14000f3a1
   14000f2ca:	cmp    DWORD PTR [rdx+0x10],eax
   14000f2cd:	jge    0x14000f2e3
   14000f2cf:	cmp    DWORD PTR [rsi-0xc],eax
   14000f2d2:	jl     0x14000f8aa
   14000f2d8:	mov    DWORD PTR [rsi-0x10],eax
   14000f2db:	mov    WORD PTR [rsi],ax
   14000f2de:	jmp    0x14000f3a1
   14000f2e3:	mov    eax,r14d
   14000f2e6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f2eb:	add    eax,0xffffffff
   14000f2ee:	test   eax,eax
   14000f2f0:	jg     0x14000f2fb
   14000f2f2:	mov    rcx,QWORD PTR [rdx]
   14000f2f5:	mov    rax,QWORD PTR [rcx]
   14000f2f8:	call   QWORD PTR [rax+0x8]
   14000f2fb:	mov    rax,QWORD PTR [rdi]
   14000f2fe:	mov    rcx,rdi
   14000f301:	call   QWORD PTR [rax+0x18]
   14000f304:	lea    rsi,[rax+0x18]
   14000f308:	mov    QWORD PTR [rsp+0x48],rsi
   14000f30d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f312:	jmp    0x14000f3a1
   14000f317:	mov    ebp,DWORD PTR [rsi-0x10]
   14000f31a:	lea    r12,[rsp+0x11c]
   14000f322:	sub    r12,rsi
   14000f325:	sar    r12,1
   14000f328:	mov    ecx,0x1
   14000f32d:	sub    ecx,DWORD PTR [rsi-0x8]
   14000f330:	mov    eax,DWORD PTR [rsi-0xc]
   14000f333:	sub    eax,edi
   14000f335:	or     eax,ecx
   14000f337:	jge    0x14000f34a
   14000f339:	mov    edx,edi
   14000f33b:	lea    rcx,[rsp+0x48]
   14000f340:	call   0x140002d40
   14000f345:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f34a:	cmp    r12,rbp
   14000f34d:	ja     0x14000f36a
   14000f34f:	movsxd rax,edi
   14000f352:	lea    rbp,[rax+rax*1]
   14000f356:	lea    r8,[rsi+r12*2]
   14000f35a:	mov    r9,rbp
   14000f35d:	mov    rdx,rbp
   14000f360:	mov    rcx,rsi
   14000f363:	call   0x1400467a0
   14000f368:	jmp    0x14000f387
   14000f36a:	movsxd rax,edi
   14000f36d:	lea    rbp,[rax+rax*1]
   14000f371:	mov    r9,rbp
   14000f374:	lea    r8,[rsp+0x11c]
   14000f37c:	mov    rdx,rbp
   14000f37f:	mov    rcx,rsi
   14000f382:	call   0x1400466d0
   14000f387:	test   edi,edi
   14000f389:	js     0x14000f8e6
   14000f38f:	cmp    edi,DWORD PTR [rsi-0xc]
   14000f392:	jg     0x14000f8e6
   14000f398:	mov    DWORD PTR [rsi-0x10],edi
   14000f39b:	mov    WORD PTR [rsi+rbp*1],0x0
   14000f3a1:	xor    r9d,r9d
   14000f3a4:	xor    edx,edx
   14000f3a6:	lea    r8d,[r9+0x2]
   14000f3aa:	mov    rcx,rsi
   14000f3ad:	call   QWORD PTR [rip+0x5530d]        # 0x1400646c0
   14000f3b3:	mov    rbp,rax
   14000f3b6:	cmp    rax,0xffffffffffffffff
   14000f3ba:	je     0x14000f86f
   14000f3c0:	lea    r9,[rsp+0x80]
   14000f3c8:	xor    r8d,r8d
   14000f3cb:	lea    rdx,[rip+0x573e6]        # 0x1400667b8
   14000f3d2:	mov    rcx,rax
   14000f3d5:	call   QWORD PTR [rip+0x5531d]        # 0x1400646f8
   14000f3db:	test   eax,eax
   14000f3dd:	je     0x14000f865
   14000f3e3:	mov    QWORD PTR [rsp+0x20],0x0
   14000f3ec:	mov    r9d,0x100
   14000f3f2:	lea    r8,[rsp+0x550]
   14000f3fa:	mov    edx,0x1
   14000f3ff:	lea    rcx,[rsp+0x80]
   14000f407:	call   QWORD PTR [rip+0x552e3]        # 0x1400646f0
   14000f40d:	test   eax,eax
   14000f40f:	je     0x14000f865
   14000f415:	lea    rax,[rsp+0x80]
   14000f41d:	mov    QWORD PTR [rsp+0x20],rax
   14000f422:	lea    r9,[rsp+0x970]
   14000f42a:	lea    r8,[rsp+0x550]
   14000f432:	mov    rdx,rbp
   14000f435:	mov    rcx,r15
   14000f438:	call   0x140002340
   14000f43d:	test   eax,eax
   14000f43f:	jne    0x14000f470
   14000f441:	mov    rcx,rbp
   14000f444:	call   QWORD PTR [rip+0x5527e]        # 0x1400646c8
   14000f44a:	nop
   14000f44b:	lea    rdx,[rsi-0x18]
   14000f44f:	mov    eax,r14d
   14000f452:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f457:	add    eax,0xffffffff
   14000f45a:	test   eax,eax
   14000f45c:	jg     0x14000f88b
   14000f462:	mov    rcx,QWORD PTR [rdx]
   14000f465:	mov    rax,QWORD PTR [rcx]
   14000f468:	call   QWORD PTR [rax+0x8]
   14000f46b:	jmp    0x14000f88b
   14000f470:	lea    r9,[rsp+0x80]
   14000f478:	xor    r8d,r8d
   14000f47b:	lea    rdx,[rsp+0x550]
   14000f483:	mov    rcx,rbp
   14000f486:	call   QWORD PTR [rip+0x5526c]        # 0x1400646f8
   14000f48c:	test   eax,eax
   14000f48e:	je     0x14000f865
   14000f494:	mov    QWORD PTR [rsp+0x20],0x0
   14000f49d:	mov    r9d,0x100
   14000f4a3:	lea    r8,[rsp+0xd90]
   14000f4ab:	mov    edx,0x1
   14000f4b0:	lea    rcx,[rsp+0x80]
   14000f4b8:	call   QWORD PTR [rip+0x55232]        # 0x1400646f0
   14000f4be:	test   eax,eax
   14000f4c0:	je     0x14000f865
   14000f4c6:	lea    rax,[rsp+0x970]
   14000f4ce:	mov    QWORD PTR [rsp+0x20],rax
   14000f4d3:	lea    r9,[rsp+0xd90]
   14000f4db:	lea    r8,[rsp+0x760]
   14000f4e3:	mov    rdx,rbp
   14000f4e6:	mov    rcx,r15
   14000f4e9:	call   0x14000c060
   14000f4ee:	lea    r9,[rsp+0xb8]
   14000f4f6:	lea    r8,[rip+0x576db]        # 0x140066bd8
   14000f4fd:	lea    rdx,[rsp+0x760]
   14000f505:	mov    rcx,rbp
   14000f508:	call   QWORD PTR [rip+0x551ea]        # 0x1400646f8
   14000f50e:	test   eax,eax
   14000f510:	je     0x14000f83d
   14000f516:	mov    QWORD PTR [rsp+0x20],0x0
   14000f51f:	mov    r9d,0x100
   14000f525:	lea    r8,[rsp+0x550]
   14000f52d:	mov    edx,0x1
   14000f532:	lea    rcx,[rsp+0xb8]
   14000f53a:	call   QWORD PTR [rip+0x551b0]        # 0x1400646f0
   14000f540:	test   eax,eax
   14000f542:	je     0x14000f815
   14000f548:	xor    eax,eax
   14000f54a:	mov    rcx,r14
   14000f54d:	lea    rdi,[rsp+0x550]
   14000f555:	repnz scas ax,WORD PTR es:[rdi]
   14000f558:	not    rcx
   14000f55b:	sub    rcx,0x1
   14000f55f:	mov    rdi,rcx
   14000f562:	test   ecx,ecx
   14000f564:	jne    0x14000f5c3
   14000f566:	lea    rdx,[rbx-0x18]
   14000f56a:	mov    rdi,QWORD PTR [rdx]
   14000f56d:	cmp    DWORD PTR [rdx+0x8],eax
   14000f570:	je     0x14000f654
   14000f576:	cmp    DWORD PTR [rdx+0x10],eax
   14000f579:	jge    0x14000f58f
   14000f57b:	cmp    DWORD PTR [rbx-0xc],eax
   14000f57e:	jl     0x14000f8b5
   14000f584:	mov    DWORD PTR [rbx-0x10],eax
   14000f587:	mov    WORD PTR [rbx],ax
   14000f58a:	jmp    0x14000f654
   14000f58f:	mov    eax,r14d
   14000f592:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f597:	add    eax,0xffffffff
   14000f59a:	test   eax,eax
   14000f59c:	jg     0x14000f5a7
   14000f59e:	mov    rcx,QWORD PTR [rdx]
   14000f5a1:	mov    rax,QWORD PTR [rcx]
   14000f5a4:	call   QWORD PTR [rax+0x8]
   14000f5a7:	mov    rax,QWORD PTR [rdi]
   14000f5aa:	mov    rcx,rdi
   14000f5ad:	call   QWORD PTR [rax+0x18]
   14000f5b0:	lea    rbx,[rax+0x18]
   14000f5b4:	mov    QWORD PTR [rsp+0x40],rbx
   14000f5b9:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f5be:	jmp    0x14000f654
   14000f5c3:	mov    r12d,DWORD PTR [rbx-0x10]
   14000f5c7:	lea    r13,[rsp+0x550]
   14000f5cf:	sub    r13,rbx
   14000f5d2:	sar    r13,1
   14000f5d5:	mov    ecx,0x1
   14000f5da:	sub    ecx,DWORD PTR [rbx-0x8]
   14000f5dd:	mov    eax,DWORD PTR [rbx-0xc]
   14000f5e0:	sub    eax,edi
   14000f5e2:	or     eax,ecx
   14000f5e4:	jge    0x14000f5f7
   14000f5e6:	mov    edx,edi
   14000f5e8:	lea    rcx,[rsp+0x40]
   14000f5ed:	call   0x140002d40
   14000f5f2:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f5f7:	cmp    r13,r12
   14000f5fa:	ja     0x14000f617
   14000f5fc:	movsxd rax,edi
   14000f5ff:	lea    r12,[rax+rax*1]
   14000f603:	lea    r8,[rbx+r13*2]
   14000f607:	mov    r9,r12
   14000f60a:	mov    rdx,r12
   14000f60d:	mov    rcx,rbx
   14000f610:	call   0x1400467a0
   14000f615:	jmp    0x14000f634
   14000f617:	movsxd rax,edi
   14000f61a:	lea    r12,[rax+rax*1]
   14000f61e:	mov    r9,r12
   14000f621:	lea    r8,[rsp+0x550]
   14000f629:	mov    rdx,r12
   14000f62c:	mov    rcx,rbx
   14000f62f:	call   0x1400466d0
   14000f634:	test   edi,edi
   14000f636:	js     0x14000f8cb
   14000f63c:	cmp    edi,DWORD PTR [rbx-0xc]
   14000f63f:	jg     0x14000f8cb
   14000f645:	mov    DWORD PTR [rbx-0x10],edi
   14000f648:	mov    WORD PTR [r12+rbx*1],0x0
   14000f64f:	mov    r13,QWORD PTR [rsp+0x78]
   14000f654:	movsxd rdi,DWORD PTR [rbx-0x10]
   14000f658:	mov    ecx,0x1
   14000f65d:	sub    ecx,DWORD PTR [rbx-0x8]
   14000f660:	mov    eax,DWORD PTR [rbx-0xc]
   14000f663:	sub    eax,edi
   14000f665:	or     eax,ecx
   14000f667:	jge    0x14000f67a
   14000f669:	mov    edx,edi
   14000f66b:	lea    rcx,[rsp+0x40]
   14000f670:	call   0x140002d40
   14000f675:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f67a:	lea    eax,[rdi+0x1]
   14000f67d:	movsxd rdx,eax
   14000f680:	mov    rcx,rbx
   14000f683:	call   0x140046a70
   14000f688:	test   edi,edi
   14000f68a:	js     0x14000f8c0
   14000f690:	cmp    edi,DWORD PTR [rbx-0xc]
   14000f693:	jg     0x14000f8c0
   14000f699:	mov    DWORD PTR [rbx-0x10],edi
   14000f69c:	mov    WORD PTR [rbx+rdi*2],0x0
   14000f6a2:	mov    rax,QWORD PTR [rsp+0x58]
   14000f6a7:	mov    rdx,QWORD PTR [rax]
   14000f6aa:	test   rdx,rdx
   14000f6ad:	je     0x14000f7e9
   14000f6b3:	cmp    DWORD PTR [rbx-0x10],0x0
   14000f6b7:	jl     0x14000f7e9
   14000f6bd:	mov    rcx,rbx
   14000f6c0:	call   0x140046660
   14000f6c5:	test   rax,rax
   14000f6c8:	je     0x14000f7e9
   14000f6ce:	sub    rax,rbx
   14000f6d1:	sar    rax,1
   14000f6d4:	cmp    eax,0xffffffff
   14000f6d7:	je     0x14000f7e9
   14000f6dd:	mov    edx,0x104
   14000f6e2:	lea    rcx,[rsp+0x340]
   14000f6ea:	call   QWORD PTR [rip+0x54ee0]        # 0x1400645d0
   14000f6f0:	lea    r8,[rip+0x57519]        # 0x140066c10
   14000f6f7:	mov    edx,0x104
   14000f6fc:	lea    rcx,[rsp+0x340]
   14000f704:	call   0x140047130
   14000f709:	lea    r8,[rsp+0x11c]
   14000f711:	mov    edx,0x104
   14000f716:	lea    rcx,[rsp+0x340]
   14000f71e:	call   0x140047130
   14000f723:	lea    rdx,[rsp+0x340]
   14000f72b:	lea    rcx,[rsp+0xa0]
   14000f733:	call   0x14000c360
   14000f738:	mov    rdx,rax
   14000f73b:	mov    rcx,r15
   14000f73e:	call   0x14000c440
   14000f743:	mov    edi,eax
   14000f745:	lea    r9,[rsp+0x50]
   14000f74a:	xor    r8d,r8d
   14000f74d:	lea    edx,[r8+0x24]
   14000f751:	lea    rcx,[rsp+0x340]
   14000f759:	call   0x140001d10
   14000f75e:	test   eax,eax
   14000f760:	je     0x14000f774
   14000f762:	mov    r8d,eax
   14000f765:	xor    edx,edx
   14000f767:	mov    rcx,r15
   14000f76a:	call   0x140008190
   14000f76f:	jmp    0x14000f865
   14000f774:	test   edi,edi
   14000f776:	je     0x14000f792
   14000f778:	movsxd rax,DWORD PTR [r15+0xeb100]
   14000f77f:	imul   rax,rax,0x12c8
   14000f786:	mov    DWORD PTR [rax+r15*1+0x4bc],0x1
   14000f792:	lea    rdx,[rip+0x55c5f]        # 0x1400653f8
   14000f799:	lea    rcx,[rsp+0x340]
   14000f7a1:	call   0x140046660
   14000f7a6:	mov    WORD PTR [rax],0x2e
   14000f7ab:	mov    WORD PTR [rax+0x2],0x50
   14000f7b1:	mov    WORD PTR [rax+0x4],0x4e
   14000f7b7:	mov    WORD PTR [rax+0x6],0x46
   14000f7bd:	mov    rcx,rbp
   14000f7c0:	call   QWORD PTR [rip+0x54f02]        # 0x1400646c8
   14000f7c6:	mov    edx,0x80
   14000f7cb:	lea    rcx,[rsp+0x340]
   14000f7d3:	call   QWORD PTR [rip+0x54d47]        # 0x140064520
   14000f7d9:	lea    rcx,[rsp+0x340]
   14000f7e1:	call   QWORD PTR [rip+0x54d59]        # 0x140064540
   14000f7e7:	jmp    0x14000f865
   14000f7e9:	mov    rcx,rbp
   14000f7ec:	call   QWORD PTR [rip+0x54ed6]        # 0x1400646c8
   14000f7f2:	nop
   14000f7f3:	lea    rdx,[rsi-0x18]
   14000f7f7:	mov    eax,r14d
   14000f7fa:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f7ff:	add    eax,0xffffffff
   14000f802:	test   eax,eax
   14000f804:	jg     0x14000f88b
   14000f80a:	mov    rcx,QWORD PTR [rdx]
   14000f80d:	mov    rax,QWORD PTR [rcx]
   14000f810:	call   QWORD PTR [rax+0x8]
   14000f813:	jmp    0x14000f88b
   14000f815:	mov    rcx,rbp
   14000f818:	call   QWORD PTR [rip+0x54eaa]        # 0x1400646c8
   14000f81e:	nop
   14000f81f:	lea    rdx,[rsi-0x18]
   14000f823:	mov    eax,r14d
   14000f826:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f82b:	add    eax,0xffffffff
   14000f82e:	test   eax,eax
   14000f830:	jg     0x14000f88b
   14000f832:	mov    rcx,QWORD PTR [rdx]
   14000f835:	mov    rax,QWORD PTR [rcx]
   14000f838:	call   QWORD PTR [rax+0x8]
   14000f83b:	jmp    0x14000f88b
   14000f83d:	mov    rcx,rbp
   14000f840:	call   QWORD PTR [rip+0x54e82]        # 0x1400646c8
   14000f846:	nop
   14000f847:	lea    rdx,[rsi-0x18]
   14000f84b:	mov    eax,r14d
   14000f84e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f853:	add    eax,0xffffffff
   14000f856:	test   eax,eax
   14000f858:	jg     0x14000f88b
   14000f85a:	mov    rcx,QWORD PTR [rdx]
   14000f85d:	mov    rax,QWORD PTR [rcx]
   14000f860:	call   QWORD PTR [rax+0x8]
   14000f863:	jmp    0x14000f88b
   14000f865:	mov    rcx,rbp
   14000f868:	call   QWORD PTR [rip+0x54e5a]        # 0x1400646c8
   14000f86e:	nop
   14000f86f:	lea    rdx,[rsi-0x18]
   14000f873:	mov    eax,r14d
   14000f876:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f87b:	add    eax,0xffffffff
   14000f87e:	test   eax,eax
   14000f880:	jg     0x14000f88b
   14000f882:	mov    rcx,QWORD PTR [rdx]
   14000f885:	mov    rax,QWORD PTR [rcx]
   14000f888:	call   QWORD PTR [rax+0x8]
   14000f88b:	lea    rdx,[rsp+0xf0]
   14000f893:	mov    rcx,r13
   14000f896:	call   QWORD PTR [rip+0x54c94]        # 0x140064530
   14000f89c:	test   eax,eax
   14000f89e:	je     0x14000f8d6
   14000f8a0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f8a5:	jmp    0x14000f230
   14000f8aa:	mov    ecx,0x80070057
   14000f8af:	call   0x140001430
   14000f8b4:	nop
   14000f8b5:	mov    ecx,0x80070057
   14000f8ba:	call   0x140001430
   14000f8bf:	int3   
   14000f8c0:	mov    ecx,0x80070057
   14000f8c5:	call   0x140001430
   14000f8ca:	int3   
   14000f8cb:	mov    ecx,0x80070057
   14000f8d0:	call   0x140001430
   14000f8d5:	nop
   14000f8d6:	mov    rcx,r13
   14000f8d9:	call   QWORD PTR [rip+0x54c59]        # 0x140064538
   14000f8df:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f8e4:	jmp    0x14000f8fc
   14000f8e6:	mov    ecx,0x80070057
   14000f8eb:	call   0x140001430
   14000f8f0:	nop
   14000f8f1:	mov    ecx,0x80004005
   14000f8f6:	call   0x140001430
   14000f8fb:	nop
   14000f8fc:	lea    rdx,[rbx-0x18]
   14000f900:	mov    eax,r14d
   14000f903:	lock xadd DWORD PTR [rdx+0x10],eax
   14000f908:	add    eax,0xffffffff
   14000f90b:	test   eax,eax
   14000f90d:	jg     0x14000f919
   14000f90f:	mov    rcx,QWORD PTR [rdx]
   14000f912:	mov    rax,QWORD PTR [rcx]
   14000f915:	call   QWORD PTR [rax+0x8]
   14000f918:	nop
   14000f919:	mov    rax,QWORD PTR [rsp+0x58]
   14000f91e:	mov    rdx,QWORD PTR [rax]
   14000f921:	sub    rdx,0x18
   14000f925:	lock xadd DWORD PTR [rdx+0x10],r14d
   14000f92b:	add    r14d,0xffffffff
   14000f92f:	test   r14d,r14d
   14000f932:	jg     0x14000f93d
   14000f934:	mov    rcx,QWORD PTR [rdx]
   14000f937:	mov    rax,QWORD PTR [rcx]
   14000f93a:	call   QWORD PTR [rax+0x8]
   14000f93d:	xor    eax,eax
   14000f93f:	mov    rcx,QWORD PTR [rsp+0x11b0]
   14000f947:	xor    rcx,rsp
   14000f94a:	call   0x140046470
   14000f94f:	mov    rbx,QWORD PTR [rsp+0x1210]
   14000f957:	add    rsp,0x11c0
   14000f95e:	pop    r15
   14000f960:	pop    r14
   14000f962:	pop    r13
   14000f964:	pop    r12
   14000f966:	pop    rdi
   14000f967:	pop    rsi
   14000f968:	pop    rbp
   14000f969:	ret    
   14000f96a:	int3   
   14000f96b:	int3   
   14000f96c:	int3   
   14000f96d:	int3   
   14000f96e:	int3   
   14000f96f:	int3   
   14000f970:	rex push rbp
   14000f972:	sub    rsp,0x20
   14000f976:	mov    rbp,rdx
   14000f979:	mov    rcx,QWORD PTR [rbp+0xb0]
   14000f980:	call   0x1400010c0
   14000f985:	add    rsp,0x20
   14000f989:	pop    rbp
   14000f98a:	ret    
   14000f98b:	int3   
   14000f98c:	int3   
   14000f98d:	int3   
   14000f98e:	int3   
   14000f98f:	int3   
   14000f990:	rex push rbp
   14000f992:	sub    rsp,0x20
   14000f996:	mov    rbp,rdx
   14000f999:	lea    rcx,[rbp+0x40]
   14000f99d:	call   0x140001090
   14000f9a2:	add    rsp,0x20
   14000f9a6:	pop    rbp
   14000f9a7:	ret    
   14000f9a8:	int3   
   14000f9a9:	int3   
   14000f9aa:	int3   
   14000f9ab:	int3   
   14000f9ac:	int3   
   14000f9ad:	int3   
   14000f9ae:	int3   
   14000f9af:	int3   
   14000f9b0:	rex push rbp
   14000f9b2:	sub    rsp,0x20
   14000f9b6:	mov    rbp,rdx
   14000f9b9:	lea    rcx,[rbp+0x40]
   14000f9bd:	call   0x1400010c0
   14000f9c2:	add    rsp,0x20
   14000f9c6:	pop    rbp
   14000f9c7:	ret    
   14000f9c8:	int3   
   14000f9c9:	int3   
   14000f9ca:	int3   
   14000f9cb:	int3   
   14000f9cc:	int3   
   14000f9cd:	int3   
   14000f9ce:	int3   
   14000f9cf:	int3   
   14000f9d0:	rex push rbp
   14000f9d2:	sub    rsp,0x20
   14000f9d6:	mov    rbp,rdx
   14000f9d9:	lea    rcx,[rbp+0x48]
   14000f9dd:	call   0x140001090
   14000f9e2:	add    rsp,0x20
   14000f9e6:	pop    rbp
   14000f9e7:	ret    
   14000f9e8:	int3   
   14000f9e9:	int3   
   14000f9ea:	int3   
   14000f9eb:	int3   
   14000f9ec:	int3   
   14000f9ed:	int3   
   14000f9ee:	int3   
   14000f9ef:	int3   
   14000f9f0:	rex push rbp
   14000f9f2:	sub    rsp,0x20
   14000f9f6:	mov    rbp,rdx
   14000f9f9:	lea    rcx,[rbp+0x48]
   14000f9fd:	call   0x1400010c0
   14000fa02:	add    rsp,0x20
   14000fa06:	pop    rbp
   14000fa07:	ret    
   14000fa08:	int3   
   14000fa09:	int3   
   14000fa0a:	int3   
   14000fa0b:	int3   
   14000fa0c:	int3   
   14000fa0d:	int3   
   14000fa0e:	int3   
   14000fa0f:	int3   
   14000fa10:	rex push rdi
   14000fa12:	push   r12
   14000fa14:	push   r13
   14000fa16:	push   r14
   14000fa18:	push   r15
   14000fa1a:	mov    eax,0x11b0
   14000fa1f:	call   0x140063500
   14000fa24:	sub    rsp,rax
   14000fa27:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000fa33:	mov    QWORD PTR [rsp+0x11e8],rbx
   14000fa3b:	mov    QWORD PTR [rsp+0x11f0],rbp
   14000fa43:	mov    QWORD PTR [rsp+0x11f8],rsi
   14000fa4b:	mov    rax,QWORD PTR [rip+0x7731e]        # 0x140086d70
   14000fa52:	xor    rax,rsp
   14000fa55:	mov    QWORD PTR [rsp+0x11a0],rax
   14000fa5d:	mov    r15,rcx
   14000fa60:	mov    QWORD PTR [rsp+0x60],0x0
   14000fa69:	mov    DWORD PTR [rsp+0x54],0x0
   14000fa71:	call   0x14002b874
   14000fa76:	mov    rdx,rax
   14000fa79:	xor    ecx,ecx
   14000fa7b:	test   rax,rax
   14000fa7e:	setne  cl
   14000fa81:	test   ecx,ecx
   14000fa83:	jne    0x14000fa90
   14000fa85:	mov    ecx,0x80004005
   14000fa8a:	call   0x140001430
   14000fa8f:	int3   
   14000fa90:	mov    rax,QWORD PTR [rax]
   14000fa93:	mov    rcx,rdx
   14000fa96:	call   QWORD PTR [rax+0x18]
   14000fa99:	lea    rbx,[rax+0x18]
   14000fa9d:	mov    QWORD PTR [rsp+0x40],rbx
   14000faa2:	lea    rdx,[rip+0x55a27]        # 0x1400654d0
   14000faa9:	test   rdx,0xffffffffffff0000
   14000fab0:	jne    0x14000fad8
   14000fab2:	movzx  edi,dx
   14000fab5:	mov    ecx,edi
   14000fab7:	call   0x14002b860
   14000fabc:	test   rax,rax
   14000fabf:	je     0x14000fae7
   14000fac1:	mov    r8d,edi
   14000fac4:	mov    rdx,rax
   14000fac7:	lea    rcx,[rsp+0x40]
   14000facc:	call   0x140003650
   14000fad1:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fad6:	jmp    0x14000fae7
   14000fad8:	lea    rcx,[rsp+0x40]
   14000fadd:	call   0x140003930
   14000fae2:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fae7:	mov    DWORD PTR [rsp+0x50],0x0
   14000faef:	mov    r9d,0x6
   14000faf5:	xor    r8d,r8d
   14000faf8:	xor    edx,edx
   14000fafa:	xor    ecx,ecx
   14000fafc:	call   QWORD PTR [rip+0x54c1e]        # 0x140064720
   14000fb02:	mov    rbp,rax
   14000fb05:	cmp    rax,0xffffffffffffffff
   14000fb09:	jne    0x14000fb30
   14000fb0b:	lea    rdx,[rbx-0x18]
   14000fb0f:	or     r14,rax
   14000fb12:	lock xadd DWORD PTR [rdx+0x10],r14d
   14000fb18:	add    r14d,eax
   14000fb1b:	test   r14d,r14d
   14000fb1e:	jg     0x14000fb29
   14000fb20:	mov    rcx,QWORD PTR [rdx]
   14000fb23:	mov    rax,QWORD PTR [rcx]
   14000fb26:	call   QWORD PTR [rax+0x8]
   14000fb29:	xor    eax,eax
   14000fb2b:	jmp    0x1400105b5
   14000fb30:	mov    DWORD PTR [rsp+0xb8],0x20
   14000fb3b:	xor    r12d,r12d
   14000fb3e:	lea    r8,[rsp+0xb8]
   14000fb46:	xor    edx,edx
   14000fb48:	mov    rcx,rax
   14000fb4b:	call   QWORD PTR [rip+0x54bd7]        # 0x140064728
   14000fb51:	or     r14,0xffffffffffffffff
   14000fb55:	test   eax,eax
   14000fb57:	je     0x14000fe66
   14000fb5d:	data16 xchg ax,ax
   14000fb60:	lea    rax,[rsp+0x54]
   14000fb65:	mov    QWORD PTR [rsp+0x20],rax
   14000fb6a:	lea    r9,[rsp+0x60]
   14000fb6f:	mov    r8d,0x4
   14000fb75:	lea    rdx,[rsp+0xb8]
   14000fb7d:	mov    rcx,rbp
   14000fb80:	call   0x140001c30
   14000fb85:	test   eax,eax
   14000fb87:	je     0x14000fe3a
   14000fb8d:	mov    rdx,QWORD PTR [rsp+0x60]
   14000fb92:	test   rdx,rdx
   14000fb95:	jne    0x14000fb9b
   14000fb97:	xor    ecx,ecx
   14000fb99:	jmp    0x14000fbad
   14000fb9b:	xor    eax,eax
   14000fb9d:	mov    rcx,r14
   14000fba0:	mov    rdi,rdx
   14000fba3:	repnz scas ax,WORD PTR es:[rdi]
   14000fba6:	not    rcx
   14000fba9:	sub    rcx,0x1
   14000fbad:	mov    r8d,ecx
   14000fbb0:	lea    rcx,[rsp+0x40]
   14000fbb5:	call   0x1400037d0
   14000fbba:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fbbf:	movsxd rdi,DWORD PTR [rbx-0x10]
   14000fbc3:	mov    ecx,0x1
   14000fbc8:	sub    ecx,DWORD PTR [rbx-0x8]
   14000fbcb:	mov    eax,DWORD PTR [rbx-0xc]
   14000fbce:	sub    eax,edi
   14000fbd0:	or     eax,ecx
   14000fbd2:	jge    0x14000fbe5
   14000fbd4:	mov    edx,edi
   14000fbd6:	lea    rcx,[rsp+0x40]
   14000fbdb:	call   0x140002d40
   14000fbe0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fbe5:	lea    eax,[rdi+0x1]
   14000fbe8:	movsxd rdx,eax
   14000fbeb:	mov    rcx,rbx
   14000fbee:	call   0x140046a70
   14000fbf3:	test   edi,edi
   14000fbf5:	js     0x14000fe5b
   14000fbfb:	cmp    edi,DWORD PTR [rbx-0xc]
   14000fbfe:	jg     0x14000fe5b
   14000fc04:	mov    DWORD PTR [rbx-0x10],edi
   14000fc07:	mov    WORD PTR [rbx+rdi*2],0x0
   14000fc0d:	cmp    DWORD PTR [rbx-0x10],0x0
   14000fc11:	jl     0x14000fe3a
   14000fc17:	lea    rdx,[rip+0x5702a]        # 0x140066c48
   14000fc1e:	mov    rcx,rbx
   14000fc21:	call   0x140046660
   14000fc26:	test   rax,rax
   14000fc29:	je     0x14000fe3a
   14000fc2f:	sub    rax,rbx
   14000fc32:	sar    rax,1
   14000fc35:	cmp    eax,0xffffffff
   14000fc38:	je     0x14000fe3a
   14000fc3e:	mov    DWORD PTR [rsp+0x28],0x20019
   14000fc46:	mov    DWORD PTR [rsp+0x20],0x2
   14000fc4e:	xor    r9d,r9d
   14000fc51:	lea    r8d,[r9+0x1]
   14000fc55:	lea    rdx,[rsp+0xb8]
   14000fc5d:	mov    rcx,rbp
   14000fc60:	call   QWORD PTR [rip+0x54a7a]        # 0x1400646e0
   14000fc66:	mov    rsi,rax
   14000fc69:	cmp    rax,0xffffffffffffffff
   14000fc6d:	je     0x14000fe3a
   14000fc73:	mov    DWORD PTR [rsp+0x58],0x1
   14000fc7b:	mov    DWORD PTR [rsp+0x5c],0x208
   14000fc83:	lea    rax,[rsp+0x5c]
   14000fc88:	mov    QWORD PTR [rsp+0x28],rax
   14000fc8d:	lea    rax,[rsp+0xb70]
   14000fc95:	mov    QWORD PTR [rsp+0x20],rax
   14000fc9a:	lea    r9,[rsp+0x58]
   14000fc9f:	xor    r8d,r8d
   14000fca2:	lea    rdx,[rip+0x561df]        # 0x140065e88
   14000fca9:	mov    rcx,rsi
   14000fcac:	call   QWORD PTR [rip+0x5439e]        # 0x140064050
   14000fcb2:	test   eax,eax
   14000fcb4:	jne    0x14000fe31
   14000fcba:	mov    edx,0x104
   14000fcbf:	lea    rcx,[rsp+0x330]
   14000fcc7:	call   QWORD PTR [rip+0x54903]        # 0x1400645d0
   14000fccd:	lea    r8,[rip+0x56f3c]        # 0x140066c10
   14000fcd4:	mov    edx,0x104
   14000fcd9:	lea    rcx,[rsp+0x330]
   14000fce1:	call   0x140047130
   14000fce6:	lea    r8,[rsp+0xb70]
   14000fcee:	mov    edx,0x104
   14000fcf3:	lea    rcx,[rsp+0x330]
   14000fcfb:	call   0x140047130
   14000fd00:	mov    QWORD PTR [rsp+0x30],0x0
   14000fd09:	mov    DWORD PTR [rsp+0x28],0x80
   14000fd11:	lea    rax,[rsp+0xf90]
   14000fd19:	mov    QWORD PTR [rsp+0x20],rax
   14000fd1e:	xor    r9d,r9d
   14000fd21:	lea    r8d,[r9+0x9]
   14000fd25:	lea    rdx,[rsp+0xb8]
   14000fd2d:	mov    rcx,rbp
   14000fd30:	call   QWORD PTR [rip+0x54a12]        # 0x140064748
   14000fd36:	test   eax,eax
   14000fd38:	je     0x14000fd8c
   14000fd3a:	lea    r8,[rsp+0xb8]
   14000fd42:	mov    rdx,rbp
   14000fd45:	mov    ecx,0x5
   14000fd4a:	call   QWORD PTR [rip+0x549b8]        # 0x140064708
   14000fd50:	mov    edi,eax
   14000fd52:	lea    rdx,[rsp+0x330]
   14000fd5a:	lea    rcx,[rsp+0x98]
   14000fd62:	call   0x14000c360
   14000fd67:	mov    rdx,rax
   14000fd6a:	mov    rcx,r15
   14000fd6d:	call   0x14000c440
   14000fd72:	test   eax,eax
   14000fd74:	je     0x14000fd8c
   14000fd76:	movsxd rcx,DWORD PTR [r15+0xeb100]
   14000fd7d:	imul   rcx,rcx,0x12c8
   14000fd84:	mov    DWORD PTR [rcx+r15*1+0x4bc],edi
   14000fd8c:	cmp    DWORD PTR [rip+0x78a85],0x0        # 0x140088818
   14000fd93:	jne    0x14000fdb9
   14000fd95:	cmp    DWORD PTR [rip+0x78a80],0x0        # 0x14008881c
   14000fd9c:	jne    0x14000fdb9
   14000fd9e:	cmp    DWORD PTR [rip+0x78a7b],0x0        # 0x140088820
   14000fda5:	jne    0x14000fdb9
   14000fda7:	cmp    DWORD PTR [rip+0x78a76],0x0        # 0x140088824
   14000fdae:	jne    0x14000fdb9
   14000fdb0:	cmp    DWORD PTR [rip+0x78a71],0x0        # 0x140088828
   14000fdb7:	je     0x14000fe31
   14000fdb9:	lea    r9,[rsp+0x50]
   14000fdbe:	xor    r8d,r8d
   14000fdc1:	lea    edx,[r8+0x24]
   14000fdc5:	lea    rcx,[rsp+0x330]
   14000fdcd:	call   0x140001d10
   14000fdd2:	test   eax,eax
   14000fdd4:	je     0x14000fde5
   14000fdd6:	mov    r8d,eax
   14000fdd9:	xor    edx,edx
   14000fddb:	mov    rcx,r15
   14000fdde:	call   0x140008190
   14000fde3:	jmp    0x14000fe31
   14000fde5:	lea    rdx,[rip+0x5560c]        # 0x1400653f8
   14000fdec:	lea    rcx,[rsp+0x330]
   14000fdf4:	call   0x140046660
   14000fdf9:	mov    WORD PTR [rax],0x2e
   14000fdfe:	mov    WORD PTR [rax+0x2],0x50
   14000fe04:	mov    WORD PTR [rax+0x4],0x4e
   14000fe0a:	mov    WORD PTR [rax+0x6],0x46
   14000fe10:	mov    edx,0x80
   14000fe15:	lea    rcx,[rsp+0x330]
   14000fe1d:	call   QWORD PTR [rip+0x546fd]        # 0x140064520
   14000fe23:	lea    rcx,[rsp+0x330]
   14000fe2b:	call   QWORD PTR [rip+0x5470f]        # 0x140064540
   14000fe31:	mov    rcx,rsi
   14000fe34:	call   QWORD PTR [rip+0x5422e]        # 0x140064068
   14000fe3a:	add    r12d,0x1
   14000fe3e:	lea    r8,[rsp+0xb8]
   14000fe46:	mov    edx,r12d
   14000fe49:	mov    rcx,rbp
   14000fe4c:	call   QWORD PTR [rip+0x548d6]        # 0x140064728
   14000fe52:	test   eax,eax
   14000fe54:	je     0x14000fe66
   14000fe56:	jmp    0x14000fb60
   14000fe5b:	mov    ecx,0x80070057
   14000fe60:	call   0x140001430
   14000fe65:	int3   
   14000fe66:	mov    rcx,rbp
   14000fe69:	call   QWORD PTR [rip+0x548c9]        # 0x140064738
   14000fe6f:	xor    edx,edx
   14000fe71:	mov    r8d,0x250
   14000fe77:	lea    rcx,[rsp+0xe0]
   14000fe7f:	call   0x140047720
   14000fe84:	mov    edx,0x104
   14000fe89:	lea    rcx,[rsp+0x330]
   14000fe91:	call   QWORD PTR [rip+0x54739]        # 0x1400645d0
   14000fe97:	lea    r8,[rip+0x56d52]        # 0x140066bf0
   14000fe9e:	mov    edx,0x104
   14000fea3:	lea    rcx,[rsp+0x330]
   14000feab:	call   0x140047130
   14000feb0:	lea    rdx,[rsp+0xe0]
   14000feb8:	lea    rcx,[rsp+0x330]
   14000fec0:	call   QWORD PTR [rip+0x54662]        # 0x140064528
   14000fec6:	mov    r13,rax
   14000fec9:	mov    QWORD PTR [rsp+0x68],rax
   14000fece:	cmp    rax,0xffffffffffffffff
   14000fed2:	je     0x14001058b
   14000fed8:	call   0x14002b874
   14000fedd:	xor    ecx,ecx
   14000fedf:	test   rax,rax
   14000fee2:	setne  cl
   14000fee5:	test   ecx,ecx
   14000fee7:	je     0x140010580
   14000feed:	mov    rdx,QWORD PTR [rax]
   14000fef0:	mov    rcx,rax
   14000fef3:	call   QWORD PTR [rdx+0x18]
   14000fef6:	lea    rsi,[rax+0x18]
   14000fefa:	mov    QWORD PTR [rsp+0x48],rsi
   14000feff:	lea    rcx,[rsp+0x10c]
   14000ff07:	lea    rax,[rsp+0x10c]
   14000ff0f:	test   rax,0xffffffffffff0000
   14000ff15:	jne    0x14000ff44
   14000ff17:	movzx  edi,cx
   14000ff1a:	mov    ecx,edi
   14000ff1c:	call   0x14002b860
   14000ff21:	test   rax,rax
   14000ff24:	je     0x140010049
   14000ff2a:	mov    r8d,edi
   14000ff2d:	mov    rdx,rax
   14000ff30:	lea    rcx,[rsp+0x48]
   14000ff35:	call   0x140003650
   14000ff3a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ff3f:	jmp    0x140010049
   14000ff44:	xor    eax,eax
   14000ff46:	mov    rcx,r14
   14000ff49:	lea    rdi,[rsp+0x10c]
   14000ff51:	repnz scas ax,WORD PTR es:[rdi]
   14000ff54:	not    rcx
   14000ff57:	sub    rcx,0x1
   14000ff5b:	mov    rdi,rcx
   14000ff5e:	test   ecx,ecx
   14000ff60:	jne    0x14000ffbf
   14000ff62:	lea    rdx,[rsi-0x18]
   14000ff66:	mov    rdi,QWORD PTR [rdx]
   14000ff69:	cmp    DWORD PTR [rdx+0x8],eax
   14000ff6c:	je     0x140010049
   14000ff72:	cmp    DWORD PTR [rdx+0x10],eax
   14000ff75:	jge    0x14000ff8b
   14000ff77:	cmp    DWORD PTR [rsi-0xc],eax
   14000ff7a:	jl     0x140010539
   14000ff80:	mov    DWORD PTR [rsi-0x10],eax
   14000ff83:	mov    WORD PTR [rsi],ax
   14000ff86:	jmp    0x140010049
   14000ff8b:	mov    eax,r14d
   14000ff8e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ff93:	add    eax,0xffffffff
   14000ff96:	test   eax,eax
   14000ff98:	jg     0x14000ffa3
   14000ff9a:	mov    rcx,QWORD PTR [rdx]
   14000ff9d:	mov    rax,QWORD PTR [rcx]
   14000ffa0:	call   QWORD PTR [rax+0x8]
   14000ffa3:	mov    rax,QWORD PTR [rdi]
   14000ffa6:	mov    rcx,rdi
   14000ffa9:	call   QWORD PTR [rax+0x18]
   14000ffac:	lea    rsi,[rax+0x18]
   14000ffb0:	mov    QWORD PTR [rsp+0x48],rsi
   14000ffb5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ffba:	jmp    0x140010049
   14000ffbf:	mov    ebp,DWORD PTR [rsi-0x10]
   14000ffc2:	lea    r12,[rsp+0x10c]
   14000ffca:	sub    r12,rsi
   14000ffcd:	sar    r12,1
   14000ffd0:	mov    ecx,0x1
   14000ffd5:	sub    ecx,DWORD PTR [rsi-0x8]
   14000ffd8:	mov    eax,DWORD PTR [rsi-0xc]
   14000ffdb:	sub    eax,edi
   14000ffdd:	or     eax,ecx
   14000ffdf:	jge    0x14000fff2
   14000ffe1:	mov    edx,edi
   14000ffe3:	lea    rcx,[rsp+0x48]
   14000ffe8:	call   0x140002d40
   14000ffed:	mov    rsi,QWORD PTR [rsp+0x48]
   14000fff2:	cmp    r12,rbp
   14000fff5:	ja     0x140010012
   14000fff7:	movsxd rax,edi
   14000fffa:	lea    rbp,[rax+rax*1]
   14000fffe:	lea    r8,[rsi+r12*2]
   140010002:	mov    r9,rbp
   140010005:	mov    rdx,rbp
   140010008:	mov    rcx,rsi
   14001000b:	call   0x1400467a0
   140010010:	jmp    0x14001002f
   140010012:	movsxd rax,edi
   140010015:	lea    rbp,[rax+rax*1]
   140010019:	mov    r9,rbp
   14001001c:	lea    r8,[rsp+0x10c]
   140010024:	mov    rdx,rbp
   140010027:	mov    rcx,rsi
   14001002a:	call   0x1400466d0
   14001002f:	test   edi,edi
   140010031:	js     0x140010575
   140010037:	cmp    edi,DWORD PTR [rsi-0xc]
   14001003a:	jg     0x140010575
   140010040:	mov    DWORD PTR [rsi-0x10],edi
   140010043:	mov    WORD PTR [rsi+rbp*1],0x0
   140010049:	xor    r9d,r9d
   14001004c:	xor    edx,edx
   14001004e:	lea    r8d,[r9+0x2]
   140010052:	mov    rcx,rsi
   140010055:	call   QWORD PTR [rip+0x54665]        # 0x1400646c0
   14001005b:	mov    rbp,rax
   14001005e:	cmp    rax,0xffffffffffffffff
   140010062:	je     0x1400104fe
   140010068:	lea    r9,[rsp+0x70]
   14001006d:	xor    r8d,r8d
   140010070:	lea    rdx,[rip+0x56741]        # 0x1400667b8
   140010077:	mov    rcx,rax
   14001007a:	call   QWORD PTR [rip+0x54678]        # 0x1400646f8
   140010080:	test   eax,eax
   140010082:	je     0x1400104f4
   140010088:	mov    QWORD PTR [rsp+0x20],0x0
   140010091:	mov    r9d,0x100
   140010097:	lea    r8,[rsp+0x540]
   14001009f:	mov    edx,0x1
   1400100a4:	lea    rcx,[rsp+0x70]
   1400100a9:	call   QWORD PTR [rip+0x54641]        # 0x1400646f0
   1400100af:	test   eax,eax
   1400100b1:	je     0x1400104f4
   1400100b7:	lea    rax,[rsp+0x70]
   1400100bc:	mov    QWORD PTR [rsp+0x20],rax
   1400100c1:	lea    r9,[rsp+0x960]
   1400100c9:	lea    r8,[rsp+0x540]
   1400100d1:	mov    rdx,rbp
   1400100d4:	mov    rcx,r15
   1400100d7:	call   0x140002340
   1400100dc:	test   eax,eax
   1400100de:	jne    0x14001010f
   1400100e0:	mov    rcx,rbp
   1400100e3:	call   QWORD PTR [rip+0x545df]        # 0x1400646c8
   1400100e9:	nop
   1400100ea:	lea    rdx,[rsi-0x18]
   1400100ee:	mov    eax,r14d
   1400100f1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400100f6:	add    eax,0xffffffff
   1400100f9:	test   eax,eax
   1400100fb:	jg     0x14001051a
   140010101:	mov    rcx,QWORD PTR [rdx]
   140010104:	mov    rax,QWORD PTR [rcx]
   140010107:	call   QWORD PTR [rax+0x8]
   14001010a:	jmp    0x14001051a
   14001010f:	lea    r9,[rsp+0x70]
   140010114:	xor    r8d,r8d
   140010117:	lea    rdx,[rsp+0x540]
   14001011f:	mov    rcx,rbp
   140010122:	call   QWORD PTR [rip+0x545d0]        # 0x1400646f8
   140010128:	test   eax,eax
   14001012a:	je     0x1400104f4
   140010130:	mov    QWORD PTR [rsp+0x20],0x0
   140010139:	mov    r9d,0x100
   14001013f:	lea    r8,[rsp+0xd80]
   140010147:	mov    edx,0x1
   14001014c:	lea    rcx,[rsp+0x70]
   140010151:	call   QWORD PTR [rip+0x54599]        # 0x1400646f0
   140010157:	test   eax,eax
   140010159:	je     0x1400104f4
   14001015f:	lea    rax,[rsp+0x960]
   140010167:	mov    QWORD PTR [rsp+0x20],rax
   14001016c:	lea    r9,[rsp+0xd80]
   140010174:	lea    r8,[rsp+0x750]
   14001017c:	mov    rdx,rbp
   14001017f:	mov    rcx,r15
   140010182:	call   0x14000c060
   140010187:	lea    r9,[rsp+0xa0]
   14001018f:	lea    r8,[rip+0x56a42]        # 0x140066bd8
   140010196:	lea    rdx,[rsp+0x750]
   14001019e:	mov    rcx,rbp
   1400101a1:	call   QWORD PTR [rip+0x54551]        # 0x1400646f8
   1400101a7:	test   eax,eax
   1400101a9:	je     0x1400104cc
   1400101af:	mov    QWORD PTR [rsp+0x20],0x0
   1400101b8:	mov    r9d,0x100
   1400101be:	lea    r8,[rsp+0x540]
   1400101c6:	mov    edx,0x1
   1400101cb:	lea    rcx,[rsp+0xa0]
   1400101d3:	call   QWORD PTR [rip+0x54517]        # 0x1400646f0
   1400101d9:	test   eax,eax
   1400101db:	je     0x1400104a4
   1400101e1:	xor    eax,eax
   1400101e3:	mov    rcx,r14
   1400101e6:	lea    rdi,[rsp+0x540]
   1400101ee:	repnz scas ax,WORD PTR es:[rdi]
   1400101f1:	not    rcx
   1400101f4:	sub    rcx,0x1
   1400101f8:	mov    rdi,rcx
   1400101fb:	test   ecx,ecx
   1400101fd:	jne    0x14001025c
   1400101ff:	lea    rdx,[rbx-0x18]
   140010203:	mov    rdi,QWORD PTR [rdx]
   140010206:	cmp    DWORD PTR [rdx+0x8],eax
   140010209:	je     0x1400102ed
   14001020f:	cmp    DWORD PTR [rdx+0x10],eax
   140010212:	jge    0x140010228
   140010214:	cmp    DWORD PTR [rbx-0xc],eax
   140010217:	jl     0x140010544
   14001021d:	mov    DWORD PTR [rbx-0x10],eax
   140010220:	mov    WORD PTR [rbx],ax
   140010223:	jmp    0x1400102ed
   140010228:	mov    eax,r14d
   14001022b:	lock xadd DWORD PTR [rdx+0x10],eax
   140010230:	add    eax,0xffffffff
   140010233:	test   eax,eax
   140010235:	jg     0x140010240
   140010237:	mov    rcx,QWORD PTR [rdx]
   14001023a:	mov    rax,QWORD PTR [rcx]
   14001023d:	call   QWORD PTR [rax+0x8]
   140010240:	mov    rax,QWORD PTR [rdi]
   140010243:	mov    rcx,rdi
   140010246:	call   QWORD PTR [rax+0x18]
   140010249:	lea    rbx,[rax+0x18]
   14001024d:	mov    QWORD PTR [rsp+0x40],rbx
   140010252:	mov    rsi,QWORD PTR [rsp+0x48]
   140010257:	jmp    0x1400102ed
   14001025c:	mov    r12d,DWORD PTR [rbx-0x10]
   140010260:	lea    r13,[rsp+0x540]
   140010268:	sub    r13,rbx
   14001026b:	sar    r13,1
   14001026e:	mov    ecx,0x1
   140010273:	sub    ecx,DWORD PTR [rbx-0x8]
   140010276:	mov    eax,DWORD PTR [rbx-0xc]
   140010279:	sub    eax,edi
   14001027b:	or     eax,ecx
   14001027d:	jge    0x140010290
   14001027f:	mov    edx,edi
   140010281:	lea    rcx,[rsp+0x40]
   140010286:	call   0x140002d40
   14001028b:	mov    rbx,QWORD PTR [rsp+0x40]
   140010290:	cmp    r13,r12
   140010293:	ja     0x1400102b0
   140010295:	movsxd rax,edi
   140010298:	lea    r12,[rax+rax*1]
   14001029c:	lea    r8,[rbx+r13*2]
   1400102a0:	mov    r9,r12
   1400102a3:	mov    rdx,r12
   1400102a6:	mov    rcx,rbx
   1400102a9:	call   0x1400467a0
   1400102ae:	jmp    0x1400102cd
   1400102b0:	movsxd rax,edi
   1400102b3:	lea    r12,[rax+rax*1]
   1400102b7:	mov    r9,r12
   1400102ba:	lea    r8,[rsp+0x540]
   1400102c2:	mov    rdx,r12
   1400102c5:	mov    rcx,rbx
   1400102c8:	call   0x1400466d0
   1400102cd:	test   edi,edi
   1400102cf:	js     0x14001055a
   1400102d5:	cmp    edi,DWORD PTR [rbx-0xc]
   1400102d8:	jg     0x14001055a
   1400102de:	mov    DWORD PTR [rbx-0x10],edi
   1400102e1:	mov    WORD PTR [r12+rbx*1],0x0
   1400102e8:	mov    r13,QWORD PTR [rsp+0x68]
   1400102ed:	movsxd rdi,DWORD PTR [rbx-0x10]
   1400102f1:	mov    ecx,0x1
   1400102f6:	sub    ecx,DWORD PTR [rbx-0x8]
   1400102f9:	mov    eax,DWORD PTR [rbx-0xc]
   1400102fc:	sub    eax,edi
   1400102fe:	or     eax,ecx
   140010300:	jge    0x140010313
   140010302:	mov    edx,edi
   140010304:	lea    rcx,[rsp+0x40]
   140010309:	call   0x140002d40
   14001030e:	mov    rbx,QWORD PTR [rsp+0x40]
   140010313:	lea    eax,[rdi+0x1]
   140010316:	movsxd rdx,eax
   140010319:	mov    rcx,rbx
   14001031c:	call   0x140046a70
   140010321:	test   edi,edi
   140010323:	js     0x14001054f
   140010329:	cmp    edi,DWORD PTR [rbx-0xc]
   14001032c:	jg     0x14001054f
   140010332:	mov    DWORD PTR [rbx-0x10],edi
   140010335:	mov    WORD PTR [rbx+rdi*2],0x0
   14001033b:	cmp    DWORD PTR [rbx-0x10],0x0
   14001033f:	jl     0x140010478
   140010345:	lea    rdx,[rip+0x568fc]        # 0x140066c48
   14001034c:	mov    rcx,rbx
   14001034f:	call   0x140046660
   140010354:	test   rax,rax
   140010357:	je     0x140010478
   14001035d:	sub    rax,rbx
   140010360:	sar    rax,1
   140010363:	cmp    eax,0xffffffff
   140010366:	je     0x140010478
   14001036c:	mov    edx,0x104
   140010371:	lea    rcx,[rsp+0x330]
   140010379:	call   QWORD PTR [rip+0x54251]        # 0x1400645d0
   14001037f:	lea    r8,[rip+0x5688a]        # 0x140066c10
   140010386:	mov    edx,0x104
   14001038b:	lea    rcx,[rsp+0x330]
   140010393:	call   0x140047130
   140010398:	lea    r8,[rsp+0x10c]
   1400103a0:	mov    edx,0x104
   1400103a5:	lea    rcx,[rsp+0x330]
   1400103ad:	call   0x140047130
   1400103b2:	lea    rdx,[rsp+0x330]
   1400103ba:	lea    rcx,[rsp+0x88]
   1400103c2:	call   0x14000c360
   1400103c7:	mov    rdx,rax
   1400103ca:	mov    rcx,r15
   1400103cd:	call   0x14000c440
   1400103d2:	mov    edi,eax
   1400103d4:	lea    r9,[rsp+0x50]
   1400103d9:	xor    r8d,r8d
   1400103dc:	lea    edx,[r8+0x24]
   1400103e0:	lea    rcx,[rsp+0x330]
   1400103e8:	call   0x140001d10
   1400103ed:	test   eax,eax
   1400103ef:	je     0x140010403
   1400103f1:	mov    r8d,eax
   1400103f4:	xor    edx,edx
   1400103f6:	mov    rcx,r15
   1400103f9:	call   0x140008190
   1400103fe:	jmp    0x1400104f4
   140010403:	test   edi,edi
   140010405:	je     0x140010421
   140010407:	movsxd rax,DWORD PTR [r15+0xeb100]
   14001040e:	imul   rax,rax,0x12c8
   140010415:	mov    DWORD PTR [rax+r15*1+0x4bc],0x1
   140010421:	lea    rdx,[rip+0x54fd0]        # 0x1400653f8
   140010428:	lea    rcx,[rsp+0x330]
   140010430:	call   0x140046660
   140010435:	mov    WORD PTR [rax],0x2e
   14001043a:	mov    WORD PTR [rax+0x2],0x50
   140010440:	mov    WORD PTR [rax+0x4],0x4e
   140010446:	mov    WORD PTR [rax+0x6],0x46
   14001044c:	mov    rcx,rbp
   14001044f:	call   QWORD PTR [rip+0x54273]        # 0x1400646c8
   140010455:	mov    edx,0x80
   14001045a:	lea    rcx,[rsp+0x330]
   140010462:	call   QWORD PTR [rip+0x540b8]        # 0x140064520
   140010468:	lea    rcx,[rsp+0x330]
   140010470:	call   QWORD PTR [rip+0x540ca]        # 0x140064540
   140010476:	jmp    0x1400104f4
   140010478:	mov    rcx,rbp
   14001047b:	call   QWORD PTR [rip+0x54247]        # 0x1400646c8
   140010481:	nop
   140010482:	lea    rdx,[rsi-0x18]
   140010486:	mov    eax,r14d
   140010489:	lock xadd DWORD PTR [rdx+0x10],eax
   14001048e:	add    eax,0xffffffff
   140010491:	test   eax,eax
   140010493:	jg     0x14001051a
   140010499:	mov    rcx,QWORD PTR [rdx]
   14001049c:	mov    rax,QWORD PTR [rcx]
   14001049f:	call   QWORD PTR [rax+0x8]
   1400104a2:	jmp    0x14001051a
   1400104a4:	mov    rcx,rbp
   1400104a7:	call   QWORD PTR [rip+0x5421b]        # 0x1400646c8
   1400104ad:	nop
   1400104ae:	lea    rdx,[rsi-0x18]
   1400104b2:	mov    eax,r14d
   1400104b5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400104ba:	add    eax,0xffffffff
   1400104bd:	test   eax,eax
   1400104bf:	jg     0x14001051a
   1400104c1:	mov    rcx,QWORD PTR [rdx]
   1400104c4:	mov    rax,QWORD PTR [rcx]
   1400104c7:	call   QWORD PTR [rax+0x8]
   1400104ca:	jmp    0x14001051a
   1400104cc:	mov    rcx,rbp
   1400104cf:	call   QWORD PTR [rip+0x541f3]        # 0x1400646c8
   1400104d5:	nop
   1400104d6:	lea    rdx,[rsi-0x18]
   1400104da:	mov    eax,r14d
   1400104dd:	lock xadd DWORD PTR [rdx+0x10],eax
   1400104e2:	add    eax,0xffffffff
   1400104e5:	test   eax,eax
   1400104e7:	jg     0x14001051a
   1400104e9:	mov    rcx,QWORD PTR [rdx]
   1400104ec:	mov    rax,QWORD PTR [rcx]
   1400104ef:	call   QWORD PTR [rax+0x8]
   1400104f2:	jmp    0x14001051a
   1400104f4:	mov    rcx,rbp
   1400104f7:	call   QWORD PTR [rip+0x541cb]        # 0x1400646c8
   1400104fd:	nop
   1400104fe:	lea    rdx,[rsi-0x18]
   140010502:	mov    eax,r14d
   140010505:	lock xadd DWORD PTR [rdx+0x10],eax
   14001050a:	add    eax,0xffffffff
   14001050d:	test   eax,eax
   14001050f:	jg     0x14001051a
   140010511:	mov    rcx,QWORD PTR [rdx]
   140010514:	mov    rax,QWORD PTR [rcx]
   140010517:	call   QWORD PTR [rax+0x8]
   14001051a:	lea    rdx,[rsp+0xe0]
   140010522:	mov    rcx,r13
   140010525:	call   QWORD PTR [rip+0x54005]        # 0x140064530
   14001052b:	test   eax,eax
   14001052d:	je     0x140010565
   14001052f:	mov    rbx,QWORD PTR [rsp+0x40]
   140010534:	jmp    0x14000fed8
   140010539:	mov    ecx,0x80070057
   14001053e:	call   0x140001430
   140010543:	nop
   140010544:	mov    ecx,0x80070057
   140010549:	call   0x140001430
   14001054e:	int3   
   14001054f:	mov    ecx,0x80070057
   140010554:	call   0x140001430
   140010559:	int3   
   14001055a:	mov    ecx,0x80070057
   14001055f:	call   0x140001430
   140010564:	nop
   140010565:	mov    rcx,r13
   140010568:	call   QWORD PTR [rip+0x53fca]        # 0x140064538
   14001056e:	mov    rbx,QWORD PTR [rsp+0x40]
   140010573:	jmp    0x14001058b
   140010575:	mov    ecx,0x80070057
   14001057a:	call   0x140001430
   14001057f:	nop
   140010580:	mov    ecx,0x80004005
   140010585:	call   0x140001430
   14001058a:	int3   
   14001058b:	mov    rcx,r15
   14001058e:	call   0x140005960
   140010593:	nop
   140010594:	lea    rdx,[rbx-0x18]
   140010598:	lock xadd DWORD PTR [rdx+0x10],r14d
   14001059e:	add    r14d,0xffffffff
   1400105a2:	test   r14d,r14d
   1400105a5:	jg     0x1400105b0
   1400105a7:	mov    rcx,QWORD PTR [rdx]
   1400105aa:	mov    rax,QWORD PTR [rcx]
   1400105ad:	call   QWORD PTR [rax+0x8]
   1400105b0:	mov    eax,0x1
   1400105b5:	mov    rcx,QWORD PTR [rsp+0x11a0]
   1400105bd:	xor    rcx,rsp
   1400105c0:	call   0x140046470
   1400105c5:	lea    r11,[rsp+0x11b0]
   1400105cd:	mov    rbx,QWORD PTR [r11+0x38]
   1400105d1:	mov    rbp,QWORD PTR [r11+0x40]
   1400105d5:	mov    rsi,QWORD PTR [r11+0x48]
   1400105d9:	mov    rsp,r11
   1400105dc:	pop    r15
   1400105de:	pop    r14
   1400105e0:	pop    r13
   1400105e2:	pop    r12
   1400105e4:	pop    rdi
   1400105e5:	ret    
   1400105e6:	int3   
   1400105e7:	int3   
   1400105e8:	int3   
   1400105e9:	int3   
   1400105ea:	int3   
   1400105eb:	int3   
   1400105ec:	int3   
   1400105ed:	int3   
   1400105ee:	int3   
   1400105ef:	int3   
   1400105f0:	rex push rbp
   1400105f2:	sub    rsp,0x20
   1400105f6:	mov    rbp,rdx
   1400105f9:	lea    rcx,[rbp+0x40]
   1400105fd:	call   0x140001090
   140010602:	add    rsp,0x20
   140010606:	pop    rbp
   140010607:	ret    
   140010608:	int3   
   140010609:	int3   
   14001060a:	int3   
   14001060b:	int3   
   14001060c:	int3   
   14001060d:	int3   
   14001060e:	int3   
   14001060f:	int3   
   140010610:	rex push rbp
   140010612:	sub    rsp,0x20
   140010616:	mov    rbp,rdx
   140010619:	lea    rcx,[rbp+0x40]
   14001061d:	call   0x1400010c0
   140010622:	add    rsp,0x20
   140010626:	pop    rbp
   140010627:	ret    
   140010628:	int3   
   140010629:	int3   
   14001062a:	int3   
   14001062b:	int3   
   14001062c:	int3   
   14001062d:	int3   
   14001062e:	int3   
   14001062f:	int3   
   140010630:	rex push rbp
   140010632:	sub    rsp,0x20
   140010636:	mov    rbp,rdx
   140010639:	lea    rcx,[rbp+0x48]
   14001063d:	call   0x140001090
   140010642:	add    rsp,0x20
   140010646:	pop    rbp
   140010647:	ret    
   140010648:	int3   
   140010649:	int3   
   14001064a:	int3   
   14001064b:	int3   
   14001064c:	int3   
   14001064d:	int3   
   14001064e:	int3   
   14001064f:	int3   
   140010650:	rex push rbp
   140010652:	sub    rsp,0x20
   140010656:	mov    rbp,rdx
   140010659:	lea    rcx,[rbp+0x48]
   14001065d:	call   0x1400010c0
   140010662:	add    rsp,0x20
   140010666:	pop    rbp
   140010667:	ret    
   140010668:	int3   
   140010669:	int3   
   14001066a:	int3   
   14001066b:	int3   
   14001066c:	int3   
   14001066d:	int3   
   14001066e:	int3   
   14001066f:	int3   
   140010670:	rex push rbp
   140010672:	push   rsi
   140010673:	push   rdi
   140010674:	push   r12
   140010676:	push   r13
   140010678:	push   r14
   14001067a:	push   r15
   14001067c:	sub    rsp,0xfa0
   140010683:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
   14001068f:	mov    QWORD PTR [rsp+0xff8],rbx
   140010697:	mov    rax,QWORD PTR [rip+0x766d2]        # 0x140086d70
   14001069e:	xor    rax,rsp
   1400106a1:	mov    QWORD PTR [rsp+0xf90],rax
   1400106a9:	mov    rsi,r8
   1400106ac:	mov    QWORD PTR [rsp+0xd0],r8
   1400106b4:	mov    r12,rdx
   1400106b7:	mov    QWORD PTR [rsp+0xb8],rdx
   1400106bf:	mov    r14,rcx
   1400106c2:	xor    r13d,r13d
   1400106c5:	mov    DWORD PTR [rsp+0xe0],r13d
   1400106cd:	xor    edx,edx
   1400106cf:	mov    r8d,0x24c
   1400106d5:	lea    rcx,[rsp+0xe4]
   1400106dd:	call   0x140047720
   1400106e2:	call   0x14002b874
   1400106e7:	mov    rcx,rax
   1400106ea:	mov    edx,r13d
   1400106ed:	test   rax,rax
   1400106f0:	setne  dl
   1400106f3:	test   edx,edx
   1400106f5:	jne    0x140010702
   1400106f7:	mov    ecx,0x80004005
   1400106fc:	call   0x140001430
   140010701:	int3   
   140010702:	mov    rax,QWORD PTR [rax]
   140010705:	call   QWORD PTR [rax+0x18]
   140010708:	lea    rbp,[rax+0x18]
   14001070c:	mov    QWORD PTR [rsp+0x40],rbp
   140010711:	call   0x14002b874
   140010716:	mov    rdx,rax
   140010719:	mov    ecx,r13d
   14001071c:	test   rax,rax
   14001071f:	setne  cl
   140010722:	test   ecx,ecx
   140010724:	jne    0x140010731
   140010726:	mov    ecx,0x80004005
   14001072b:	call   0x140001430
   140010730:	int3   
   140010731:	mov    rax,QWORD PTR [rax]
   140010734:	mov    rcx,rdx
   140010737:	call   QWORD PTR [rax+0x18]
   14001073a:	add    rax,0x18
   14001073e:	mov    QWORD PTR [rsp+0xc0],rax
   140010746:	call   0x14002b874
   14001074b:	mov    rdx,rax
   14001074e:	mov    ecx,r13d
   140010751:	test   rax,rax
   140010754:	setne  cl
   140010757:	test   ecx,ecx
   140010759:	jne    0x140010766
   14001075b:	mov    ecx,0x80004005
   140010760:	call   0x140001430
   140010765:	int3   
   140010766:	mov    rax,QWORD PTR [rax]
   140010769:	mov    rcx,rdx
   14001076c:	call   QWORD PTR [rax+0x18]
   14001076f:	lea    rbx,[rax+0x18]
   140010773:	mov    QWORD PTR [rsp+0x38],rbx
   140010778:	call   0x14002b874
   14001077d:	mov    rdx,rax
   140010780:	mov    ecx,r13d
   140010783:	test   rax,rax
   140010786:	setne  cl
   140010789:	test   ecx,ecx
   14001078b:	jne    0x140010798
   14001078d:	mov    ecx,0x80004005
   140010792:	call   0x140001430
   140010797:	int3   
   140010798:	mov    rax,QWORD PTR [rax]
   14001079b:	mov    rcx,rdx
   14001079e:	call   QWORD PTR [rax+0x18]
   1400107a1:	add    rax,0x18
   1400107a5:	mov    QWORD PTR [rsp+0x48],rax
   1400107aa:	lea    rdx,[rip+0x565b7]        # 0x140066d68
   1400107b1:	test   rdx,0xffffffffffff0000
   1400107b8:	jne    0x1400107db
   1400107ba:	movzx  edi,dx
   1400107bd:	mov    ecx,edi
   1400107bf:	call   0x14002b860
   1400107c4:	test   rax,rax
   1400107c7:	je     0x1400107e6
   1400107c9:	mov    r8d,edi
   1400107cc:	mov    rdx,rax
   1400107cf:	lea    rcx,[rsp+0x48]
   1400107d4:	call   0x140003650
   1400107d9:	jmp    0x1400107e6
   1400107db:	lea    rcx,[rsp+0x48]
   1400107e0:	call   0x140003930
   1400107e5:	nop
   1400107e6:	call   0x14002b874
   1400107eb:	mov    rdx,rax
   1400107ee:	mov    ecx,r13d
   1400107f1:	test   rax,rax
   1400107f4:	setne  cl
   1400107f7:	test   ecx,ecx
   1400107f9:	jne    0x140010806
   1400107fb:	mov    ecx,0x80004005
   140010800:	call   0x140001430
   140010805:	int3   
   140010806:	mov    rax,QWORD PTR [rax]
   140010809:	mov    rcx,rdx
   14001080c:	call   QWORD PTR [rax+0x18]
   14001080f:	add    rax,0x18
   140010813:	mov    QWORD PTR [rsp+0x78],rax
   140010818:	lea    rdx,[rip+0x56531]        # 0x140066d50
   14001081f:	test   rdx,0xffffffffffff0000
   140010826:	jne    0x140010849
   140010828:	movzx  edi,dx
   14001082b:	mov    ecx,edi
   14001082d:	call   0x14002b860
   140010832:	test   rax,rax
   140010835:	je     0x140010854
   140010837:	mov    r8d,edi
   14001083a:	mov    rdx,rax
   14001083d:	lea    rcx,[rsp+0x78]
   140010842:	call   0x140003650
   140010847:	jmp    0x140010854
   140010849:	lea    rcx,[rsp+0x78]
   14001084e:	call   0x140003930
   140010853:	nop
   140010854:	call   0x14002b874
   140010859:	mov    rdx,rax
   14001085c:	mov    ecx,r13d
   14001085f:	test   rax,rax
   140010862:	setne  cl
   140010865:	test   ecx,ecx
   140010867:	jne    0x140010874
   140010869:	mov    ecx,0x80004005
   14001086e:	call   0x140001430
   140010873:	int3   
   140010874:	mov    rax,QWORD PTR [rax]
   140010877:	mov    rcx,rdx
   14001087a:	call   QWORD PTR [rax+0x18]
   14001087d:	add    rax,0x18
   140010881:	mov    QWORD PTR [rsp+0x68],rax
   140010886:	lea    rdx,[rip+0x564ab]        # 0x140066d38
   14001088d:	test   rdx,0xffffffffffff0000
   140010894:	jne    0x1400108b7
   140010896:	movzx  edi,dx
   140010899:	mov    ecx,edi
   14001089b:	call   0x14002b860
   1400108a0:	test   rax,rax
   1400108a3:	je     0x1400108c2
   1400108a5:	mov    r8d,edi
   1400108a8:	mov    rdx,rax
   1400108ab:	lea    rcx,[rsp+0x68]
   1400108b0:	call   0x140003650
   1400108b5:	jmp    0x1400108c2
   1400108b7:	lea    rcx,[rsp+0x68]
   1400108bc:	call   0x140003930
   1400108c1:	nop
   1400108c2:	call   0x14002b874
   1400108c7:	mov    rdx,rax
   1400108ca:	mov    ecx,r13d
   1400108cd:	test   rax,rax
   1400108d0:	setne  cl
   1400108d3:	test   ecx,ecx
   1400108d5:	jne    0x1400108e2
   1400108d7:	mov    ecx,0x80004005
   1400108dc:	call   0x140001430
   1400108e1:	int3   
   1400108e2:	mov    rax,QWORD PTR [rax]
   1400108e5:	mov    rcx,rdx
   1400108e8:	call   QWORD PTR [rax+0x18]
   1400108eb:	add    rax,0x18
   1400108ef:	mov    QWORD PTR [rsp+0x50],rax
   1400108f4:	lea    rdx,[rip+0x56425]        # 0x140066d20
   1400108fb:	test   rdx,0xffffffffffff0000
   140010902:	jne    0x140010925
   140010904:	movzx  edi,dx
   140010907:	mov    ecx,edi
   140010909:	call   0x14002b860
   14001090e:	test   rax,rax
   140010911:	je     0x140010930
   140010913:	mov    r8d,edi
   140010916:	mov    rdx,rax
   140010919:	lea    rcx,[rsp+0x50]
   14001091e:	call   0x140003650
   140010923:	jmp    0x140010930
   140010925:	lea    rcx,[rsp+0x50]
   14001092a:	call   0x140003930
   14001092f:	nop
   140010930:	call   0x14002b874
   140010935:	mov    rdx,rax
   140010938:	mov    ecx,r13d
   14001093b:	test   rax,rax
   14001093e:	setne  cl
   140010941:	test   ecx,ecx
   140010943:	jne    0x140010950
   140010945:	mov    ecx,0x80004005
   14001094a:	call   0x140001430
   14001094f:	int3   
   140010950:	mov    rax,QWORD PTR [rax]
   140010953:	mov    rcx,rdx
   140010956:	call   QWORD PTR [rax+0x18]
   140010959:	add    rax,0x18
   14001095d:	mov    QWORD PTR [rsp+0x88],rax
   140010965:	lea    rdx,[rip+0x5639c]        # 0x140066d08
   14001096c:	test   rdx,0xffffffffffff0000
   140010973:	jne    0x140010999
   140010975:	movzx  edi,dx
   140010978:	mov    ecx,edi
   14001097a:	call   0x14002b860
   14001097f:	test   rax,rax
   140010982:	je     0x1400109a7
   140010984:	mov    r8d,edi
   140010987:	mov    rdx,rax
   14001098a:	lea    rcx,[rsp+0x88]
   140010992:	call   0x140003650
   140010997:	jmp    0x1400109a7
   140010999:	lea    rcx,[rsp+0x88]
   1400109a1:	call   0x140003930
   1400109a6:	nop
   1400109a7:	call   0x14002b874
   1400109ac:	mov    rdx,rax
   1400109af:	mov    ecx,r13d
   1400109b2:	test   rax,rax
   1400109b5:	setne  cl
   1400109b8:	test   ecx,ecx
   1400109ba:	jne    0x1400109c7
   1400109bc:	mov    ecx,0x80004005
   1400109c1:	call   0x140001430
   1400109c6:	int3   
   1400109c7:	mov    rax,QWORD PTR [rax]
   1400109ca:	mov    rcx,rdx
   1400109cd:	call   QWORD PTR [rax+0x18]
   1400109d0:	add    rax,0x18
   1400109d4:	mov    QWORD PTR [rsp+0x70],rax
   1400109d9:	lea    rdx,[rip+0x56310]        # 0x140066cf0
   1400109e0:	test   rdx,0xffffffffffff0000
   1400109e7:	jne    0x140010a0a
   1400109e9:	movzx  edi,dx
   1400109ec:	mov    ecx,edi
   1400109ee:	call   0x14002b860
   1400109f3:	test   rax,rax
   1400109f6:	je     0x140010a15
   1400109f8:	mov    r8d,edi
   1400109fb:	mov    rdx,rax
   1400109fe:	lea    rcx,[rsp+0x70]
   140010a03:	call   0x140003650
   140010a08:	jmp    0x140010a15
   140010a0a:	lea    rcx,[rsp+0x70]
   140010a0f:	call   0x140003930
   140010a14:	nop
   140010a15:	call   0x14002b874
   140010a1a:	mov    rdx,rax
   140010a1d:	mov    ecx,r13d
   140010a20:	test   rax,rax
   140010a23:	setne  cl
   140010a26:	test   ecx,ecx
   140010a28:	jne    0x140010a35
   140010a2a:	mov    ecx,0x80004005
   140010a2f:	call   0x140001430
   140010a34:	int3   
   140010a35:	mov    rax,QWORD PTR [rax]
   140010a38:	mov    rcx,rdx
   140010a3b:	call   QWORD PTR [rax+0x18]
   140010a3e:	add    rax,0x18
   140010a42:	mov    QWORD PTR [rsp+0x80],rax
   140010a4a:	lea    rdx,[rip+0x56287]        # 0x140066cd8
   140010a51:	test   rdx,0xffffffffffff0000
   140010a58:	jne    0x140010a7e
   140010a5a:	movzx  edi,dx
   140010a5d:	mov    ecx,edi
   140010a5f:	call   0x14002b860
   140010a64:	test   rax,rax
   140010a67:	je     0x140010a8c
   140010a69:	mov    r8d,edi
   140010a6c:	mov    rdx,rax
   140010a6f:	lea    rcx,[rsp+0x80]
   140010a77:	call   0x140003650
   140010a7c:	jmp    0x140010a8c
   140010a7e:	lea    rcx,[rsp+0x80]
   140010a86:	call   0x140003930
   140010a8b:	nop
   140010a8c:	call   0x14002b874
   140010a91:	mov    rdx,rax
   140010a94:	mov    ecx,r13d
   140010a97:	test   rax,rax
   140010a9a:	setne  cl
   140010a9d:	test   ecx,ecx
   140010a9f:	jne    0x140010aac
   140010aa1:	mov    ecx,0x80004005
   140010aa6:	call   0x140001430
   140010aab:	int3   
   140010aac:	mov    rax,QWORD PTR [rax]
   140010aaf:	mov    rcx,rdx
   140010ab2:	call   QWORD PTR [rax+0x18]
   140010ab5:	add    rax,0x18
   140010ab9:	mov    QWORD PTR [rsp+0x58],rax
   140010abe:	lea    rdx,[rip+0x561fb]        # 0x140066cc0
   140010ac5:	test   rdx,0xffffffffffff0000
   140010acc:	jne    0x140010aef
   140010ace:	movzx  edi,dx
   140010ad1:	mov    ecx,edi
   140010ad3:	call   0x14002b860
   140010ad8:	test   rax,rax
   140010adb:	je     0x140010afa
   140010add:	mov    r8d,edi
   140010ae0:	mov    rdx,rax
   140010ae3:	lea    rcx,[rsp+0x58]
   140010ae8:	call   0x140003650
   140010aed:	jmp    0x140010afa
   140010aef:	lea    rcx,[rsp+0x58]
   140010af4:	call   0x140003930
   140010af9:	nop
   140010afa:	xor    r9d,r9d
   140010afd:	xor    r8d,r8d
   140010b00:	mov    edx,0x408
   140010b05:	mov    rcx,QWORD PTR [rsi+0x40]
   140010b09:	call   QWORD PTR [rip+0x54061]        # 0x140064b70
   140010b0f:	mov    QWORD PTR [rsp+0x98],rax
   140010b17:	mov    DWORD PTR [rsp+0x34],r13d
   140010b1c:	mov    r8,r12
   140010b1f:	mov    edx,0x104
   140010b24:	lea    rcx,[rsp+0xb70]
   140010b2c:	call   0x140047080
   140010b31:	lea    r8,[rip+0x56170]        # 0x140066ca8
   140010b38:	mov    edx,0x104
   140010b3d:	lea    rcx,[rsp+0xb70]
   140010b45:	call   0x140047130
   140010b4a:	lea    rdx,[rsp+0xe0]
   140010b52:	lea    rcx,[rsp+0xb70]
   140010b5a:	call   QWORD PTR [rip+0x539c8]        # 0x140064528
   140010b60:	mov    QWORD PTR [rsp+0xc8],rax
   140010b68:	or     r15,0xffffffffffffffff
   140010b6c:	lea    r12d,[r15+0x2]
   140010b70:	xor    eax,eax
   140010b72:	mov    rcx,r15
   140010b75:	lea    rdi,[rsp+0x10c]
   140010b7d:	repnz scas ax,WORD PTR es:[rdi]
   140010b80:	not    rcx
   140010b83:	sub    rcx,0x1
   140010b87:	mov    rdi,rcx
   140010b8a:	test   ecx,ecx
   140010b8c:	jne    0x140010bed
   140010b8e:	lea    rdx,[rbp-0x18]
   140010b92:	mov    rdi,QWORD PTR [rdx]
   140010b95:	cmp    DWORD PTR [rdx+0x8],eax
   140010b98:	je     0x140010c7e
   140010b9e:	cmp    DWORD PTR [rdx+0x10],eax
   140010ba1:	jge    0x140010bb9
   140010ba3:	cmp    DWORD PTR [rbp-0xc],eax
   140010ba6:	jl     0x1400112e3
   140010bac:	mov    DWORD PTR [rbp-0x10],r13d
   140010bb0:	mov    WORD PTR [rbp+0x0],ax
   140010bb4:	jmp    0x140010c7e
   140010bb9:	mov    eax,r15d
   140010bbc:	lock xadd DWORD PTR [rdx+0x10],eax
   140010bc1:	add    eax,0xffffffff
   140010bc4:	test   eax,eax
   140010bc6:	jg     0x140010bd1
   140010bc8:	mov    rcx,QWORD PTR [rdx]
   140010bcb:	mov    rax,QWORD PTR [rcx]
   140010bce:	call   QWORD PTR [rax+0x8]
   140010bd1:	mov    rax,QWORD PTR [rdi]
   140010bd4:	mov    rcx,rdi
   140010bd7:	call   QWORD PTR [rax+0x18]
   140010bda:	lea    rbp,[rax+0x18]
   140010bde:	mov    QWORD PTR [rsp+0x40],rbp
   140010be3:	mov    rbx,QWORD PTR [rsp+0x38]
   140010be8:	jmp    0x140010c7e
   140010bed:	mov    esi,DWORD PTR [rbp-0x10]
   140010bf0:	lea    r12,[rsp+0x10c]
   140010bf8:	sub    r12,rbp
   140010bfb:	sar    r12,1
   140010bfe:	mov    ecx,0x1
   140010c03:	sub    ecx,DWORD PTR [rbp-0x8]
   140010c06:	mov    eax,DWORD PTR [rbp-0xc]
   140010c09:	sub    eax,edi
   140010c0b:	or     eax,ecx
   140010c0d:	jge    0x140010c20
   140010c0f:	mov    edx,edi
   140010c11:	lea    rcx,[rsp+0x40]
   140010c16:	call   0x140002d40
   140010c1b:	mov    rbp,QWORD PTR [rsp+0x40]
   140010c20:	cmp    r12,rsi
   140010c23:	ja     0x140010c41
   140010c25:	movsxd rax,edi
   140010c28:	lea    rsi,[rax+rax*1]
   140010c2c:	lea    r8,[rbp+r12*2+0x0]
   140010c31:	mov    r9,rsi
   140010c34:	mov    rdx,rsi
   140010c37:	mov    rcx,rbp
   140010c3a:	call   0x1400467a0
   140010c3f:	jmp    0x140010c5e
   140010c41:	movsxd rax,edi
   140010c44:	lea    rsi,[rax+rax*1]
   140010c48:	mov    r9,rsi
   140010c4b:	lea    r8,[rsp+0x10c]
   140010c53:	mov    rdx,rsi
   140010c56:	mov    rcx,rbp
   140010c59:	call   0x1400466d0
   140010c5e:	test   edi,edi
   140010c60:	js     0x1400114a9
   140010c66:	cmp    edi,DWORD PTR [rbp-0xc]
   140010c69:	jg     0x1400114a9
   140010c6f:	mov    DWORD PTR [rbp-0x10],edi
   140010c72:	mov    WORD PTR [rsi+rbp*1],0x0
   140010c78:	mov    r12d,0x1
   140010c7e:	mov    DWORD PTR [rsp+0x30],r13d
   140010c83:	mov    esi,r13d
   140010c86:	mov    DWORD PTR [rsp+0x90],r13d
   140010c8e:	xor    r9d,r9d
   140010c91:	xor    edx,edx
   140010c93:	lea    r8d,[r9+0x2]
   140010c97:	mov    rcx,rbp
   140010c9a:	call   QWORD PTR [rip+0x53a20]        # 0x1400646c0
   140010ca0:	mov    r13,rax
   140010ca3:	mov    eax,0x66666667
   140010ca8:	mov    r8d,DWORD PTR [rsp+0x34]
   140010cad:	imul   r8d
   140010cb0:	sar    edx,0x2
   140010cb3:	mov    ecx,edx
   140010cb5:	shr    ecx,0x1f
   140010cb8:	add    edx,ecx
   140010cba:	lea    edx,[rdx+rdx*4]
   140010cbd:	add    edx,edx
   140010cbf:	cmp    r8d,edx
   140010cc2:	jne    0x140010cfe
   140010cc4:	mov    rdi,QWORD PTR [rsp+0x98]
   140010ccc:	cmp    edi,0x5a
   140010ccf:	jge    0x140010cfe
   140010cd1:	movsxd r8,edi
   140010cd4:	xor    r9d,r9d
   140010cd7:	mov    edx,0x402
   140010cdc:	mov    rax,QWORD PTR [rsp+0xd0]
   140010ce4:	mov    rcx,QWORD PTR [rax+0x40]
   140010ce8:	call   QWORD PTR [rip+0x53e82]        # 0x140064b70
   140010cee:	add    edi,0x1
   140010cf1:	mov    QWORD PTR [rsp+0x98],rdi
   140010cf9:	mov    r8d,DWORD PTR [rsp+0x34]
   140010cfe:	add    r8d,0x1
   140010d02:	mov    DWORD PTR [rsp+0x34],r8d
   140010d07:	cmp    r13,0xffffffffffffffff
   140010d0b:	je     0x1400110f9
   140010d11:	lea    r9,[rsp+0xa0]
   140010d19:	xor    r8d,r8d
   140010d1c:	lea    rdx,[rip+0x55a95]        # 0x1400667b8
   140010d23:	mov    rcx,r13
   140010d26:	call   QWORD PTR [rip+0x539cc]        # 0x1400646f8
   140010d2c:	test   eax,eax
   140010d2e:	je     0x1400110e8
   140010d34:	xor    edi,edi
   140010d36:	mov    QWORD PTR [rsp+0x20],rdi
   140010d3b:	mov    r9d,0x104
   140010d41:	lea    r8,[rsp+0x330]
   140010d49:	mov    edx,r12d
   140010d4c:	lea    rcx,[rsp+0xa0]
   140010d54:	call   QWORD PTR [rip+0x53996]        # 0x1400646f0
   140010d5a:	test   eax,eax
   140010d5c:	je     0x1400110e8
   140010d62:	lea    rax,[rsp+0xa0]
   140010d6a:	mov    QWORD PTR [rsp+0x20],rax
   140010d6f:	xor    r9d,r9d
   140010d72:	lea    r8,[rsp+0x330]
   140010d7a:	mov    rdx,r13
   140010d7d:	mov    rcx,r14
   140010d80:	call   0x140002340
   140010d85:	test   eax,eax
   140010d87:	jne    0x140010d9a
   140010d89:	mov    rcx,r13
   140010d8c:	call   QWORD PTR [rip+0x53936]        # 0x1400646c8
   140010d92:	mov    r13d,esi
   140010d95:	jmp    0x1400112c1
   140010d9a:	lea    r9,[rsp+0xa0]
   140010da2:	xor    r8d,r8d
   140010da5:	lea    rdx,[rsp+0x330]
   140010dad:	mov    rcx,r13
   140010db0:	call   QWORD PTR [rip+0x53942]        # 0x1400646f8
   140010db6:	test   eax,eax
   140010db8:	je     0x1400110e8
   140010dbe:	mov    QWORD PTR [rsp+0x20],rdi
   140010dc3:	mov    r9d,0x104
   140010dc9:	lea    r8,[rsp+0x330]
   140010dd1:	mov    edx,0x2
   140010dd6:	lea    rcx,[rsp+0xa0]
   140010dde:	call   QWORD PTR [rip+0x5390c]        # 0x1400646f0
   140010de4:	test   eax,eax
   140010de6:	je     0x1400110e8
   140010dec:	mov    rdx,QWORD PTR [rsp+0x48]
   140010df1:	lea    rcx,[rsp+0x330]
   140010df9:	call   0x140046660
   140010dfe:	test   rax,rax
   140010e01:	je     0x140010e10
   140010e03:	cmp    DWORD PTR [r14+0x2a8],edi
   140010e0a:	jne    0x140010f0a
   140010e10:	mov    rdx,QWORD PTR [rsp+0x78]
   140010e15:	lea    rcx,[rsp+0x330]
   140010e1d:	call   0x140046660
   140010e22:	test   rax,rax
   140010e25:	je     0x140010e34
   140010e27:	cmp    DWORD PTR [r14+0x2ac],edi
   140010e2e:	jne    0x140010f0a
   140010e34:	mov    rdx,QWORD PTR [rsp+0x68]
   140010e39:	lea    rcx,[rsp+0x330]
   140010e41:	call   0x140046660
   140010e46:	test   rax,rax
   140010e49:	je     0x140010e58
   140010e4b:	cmp    DWORD PTR [r14+0x2ac],edi
   140010e52:	jne    0x140010f0a
   140010e58:	mov    rdx,QWORD PTR [rsp+0x50]
   140010e5d:	lea    rcx,[rsp+0x330]
   140010e65:	call   0x140046660
   140010e6a:	test   rax,rax
   140010e6d:	je     0x140010e7c
   140010e6f:	cmp    DWORD PTR [r14+0x2ac],edi
   140010e76:	jne    0x140010f0a
   140010e7c:	mov    rdx,QWORD PTR [rsp+0x88]
   140010e84:	lea    rcx,[rsp+0x330]
   140010e8c:	call   0x140046660
   140010e91:	test   rax,rax
   140010e94:	je     0x140010e9f
   140010e96:	cmp    DWORD PTR [r14+0x2ac],edi
   140010e9d:	jne    0x140010f0a
   140010e9f:	mov    rdx,QWORD PTR [rsp+0x70]
   140010ea4:	lea    rcx,[rsp+0x330]
   140010eac:	call   0x140046660
   140010eb1:	test   rax,rax
   140010eb4:	je     0x140010ebf
   140010eb6:	cmp    DWORD PTR [r14+0x2ac],edi
   140010ebd:	jne    0x140010f0a
   140010ebf:	mov    rdx,QWORD PTR [rsp+0x80]
   140010ec7:	lea    rcx,[rsp+0x330]
   140010ecf:	call   0x140046660
   140010ed4:	test   rax,rax
   140010ed7:	je     0x140010ee2
   140010ed9:	cmp    DWORD PTR [r14+0x2ac],edi
   140010ee0:	jne    0x140010f0a
   140010ee2:	mov    rdx,QWORD PTR [rsp+0x58]
   140010ee7:	lea    rcx,[rsp+0x330]
   140010eef:	call   0x140046660
   140010ef4:	test   rax,rax
   140010ef7:	je     0x1400110e8
   140010efd:	cmp    DWORD PTR [r14+0x2ac],edi
   140010f04:	je     0x1400110e8
   140010f0a:	mov    DWORD PTR [rsp+0x30],r12d
   140010f0f:	lea    r9,[rsp+0xa0]
   140010f17:	lea    r8,[rip+0x55d7a]        # 0x140066c98
   140010f1e:	lea    rdx,[rip+0x55d63]        # 0x140066c88
   140010f25:	mov    rcx,r13
   140010f28:	call   QWORD PTR [rip+0x537ca]        # 0x1400646f8
   140010f2e:	test   eax,eax
   140010f30:	je     0x1400110f9
   140010f36:	mov    QWORD PTR [rsp+0x20],rdi
   140010f3b:	mov    r9d,0x104
   140010f41:	lea    r8,[rsp+0x330]
   140010f49:	mov    edx,r12d
   140010f4c:	lea    rcx,[rsp+0xa0]
   140010f54:	call   QWORD PTR [rip+0x53796]        # 0x1400646f0
   140010f5a:	test   eax,eax
   140010f5c:	je     0x1400110f9
   140010f62:	xor    eax,eax
   140010f64:	mov    rcx,r15
   140010f67:	lea    rdi,[rsp+0x330]
   140010f6f:	repnz scas ax,WORD PTR es:[rdi]
   140010f72:	not    rcx
   140010f75:	sub    rcx,0x1
   140010f79:	mov    rdi,rcx
   140010f7c:	test   ecx,ecx
   140010f7e:	jne    0x140010fdd
   140010f80:	lea    rdx,[rbx-0x18]
   140010f84:	mov    rdi,QWORD PTR [rdx]
   140010f87:	cmp    DWORD PTR [rdx+0x8],eax
   140010f8a:	je     0x14001106d
   140010f90:	cmp    DWORD PTR [rdx+0x10],eax
   140010f93:	jge    0x140010fa9
   140010f95:	cmp    DWORD PTR [rbx-0xc],eax
   140010f98:	jl     0x1400112ee
   140010f9e:	mov    DWORD PTR [rbx-0x10],eax
   140010fa1:	mov    WORD PTR [rbx],ax
   140010fa4:	jmp    0x14001106d
   140010fa9:	mov    eax,r15d
   140010fac:	lock xadd DWORD PTR [rdx+0x10],eax
   140010fb1:	add    eax,0xffffffff
   140010fb4:	test   eax,eax
   140010fb6:	jg     0x140010fc1
   140010fb8:	mov    rcx,QWORD PTR [rdx]
   140010fbb:	mov    rax,QWORD PTR [rcx]
   140010fbe:	call   QWORD PTR [rax+0x8]
   140010fc1:	mov    rax,QWORD PTR [rdi]
   140010fc4:	mov    rcx,rdi
   140010fc7:	call   QWORD PTR [rax+0x18]
   140010fca:	lea    rbx,[rax+0x18]
   140010fce:	mov    QWORD PTR [rsp+0x38],rbx
   140010fd3:	mov    rbp,QWORD PTR [rsp+0x40]
   140010fd8:	jmp    0x14001106d
   140010fdd:	mov    esi,DWORD PTR [rbx-0x10]
   140010fe0:	lea    r12,[rsp+0x330]
   140010fe8:	sub    r12,rbx
   140010feb:	sar    r12,1
   140010fee:	mov    ecx,0x1
   140010ff3:	sub    ecx,DWORD PTR [rbx-0x8]
   140010ff6:	mov    eax,DWORD PTR [rbx-0xc]
   140010ff9:	sub    eax,edi
   140010ffb:	or     eax,ecx
   140010ffd:	jge    0x140011010
   140010fff:	mov    edx,edi
   140011001:	lea    rcx,[rsp+0x38]
   140011006:	call   0x140002d40
   14001100b:	mov    rbx,QWORD PTR [rsp+0x38]
   140011010:	cmp    r12,rsi
   140011013:	ja     0x140011030
   140011015:	movsxd rax,edi
   140011018:	lea    rsi,[rax+rax*1]
   14001101c:	lea    r8,[rbx+r12*2]
   140011020:	mov    r9,rsi
   140011023:	mov    rdx,rsi
   140011026:	mov    rcx,rbx
   140011029:	call   0x1400467a0
   14001102e:	jmp    0x14001104d
   140011030:	movsxd rax,edi
   140011033:	lea    rsi,[rax+rax*1]
   140011037:	mov    r9,rsi
   14001103a:	lea    r8,[rsp+0x330]
   140011042:	mov    rdx,rsi
   140011045:	mov    rcx,rbx
   140011048:	call   0x1400466d0
   14001104d:	test   edi,edi
   14001104f:	js     0x140011304
   140011055:	cmp    edi,DWORD PTR [rbx-0xc]
   140011058:	jg     0x140011304
   14001105e:	mov    DWORD PTR [rbx-0x10],edi
   140011061:	mov    WORD PTR [rsi+rbx*1],0x0
   140011067:	mov    r12d,0x1
   14001106d:	movsxd rdi,DWORD PTR [rbx-0x10]
   140011071:	mov    ecx,r12d
   140011074:	sub    ecx,DWORD PTR [rbx-0x8]
   140011077:	mov    eax,DWORD PTR [rbx-0xc]
   14001107a:	sub    eax,edi
   14001107c:	or     eax,ecx
   14001107e:	jge    0x140011091
   140011080:	mov    edx,edi
   140011082:	lea    rcx,[rsp+0x38]
   140011087:	call   0x140002d40
   14001108c:	mov    rbx,QWORD PTR [rsp+0x38]
   140011091:	lea    eax,[rdi+0x1]
   140011094:	movsxd rdx,eax
   140011097:	mov    rcx,rbx
   14001109a:	call   0x140046a70
   14001109f:	test   edi,edi
   1400110a1:	js     0x1400112f9
   1400110a7:	cmp    edi,DWORD PTR [rbx-0xc]
   1400110aa:	jg     0x1400112f9
   1400110b0:	mov    DWORD PTR [rbx-0x10],edi
   1400110b3:	mov    WORD PTR [rbx+rdi*2],0x0
   1400110b9:	xor    eax,eax
   1400110bb:	lea    rdi,[rip+0x55ace]        # 0x140066b90
   1400110c2:	mov    rsi,rbx
   1400110c5:	mov    ecx,0x8
   1400110ca:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400110cd:	je     0x1400110d4
   1400110cf:	sbb    eax,eax
   1400110d1:	sbb    eax,0xffffffff
   1400110d4:	test   eax,eax
   1400110d6:	sete   al
   1400110d9:	mov    esi,DWORD PTR [rsp+0x90]
   1400110e0:	test   al,al
   1400110e2:	cmovne esi,r12d
   1400110e6:	jmp    0x1400110f9
   1400110e8:	mov    rcx,r13
   1400110eb:	call   QWORD PTR [rip+0x535d7]        # 0x1400646c8
   1400110f1:	mov    r13d,esi
   1400110f4:	jmp    0x1400112c1
   1400110f9:	mov    rcx,r13
   1400110fc:	call   QWORD PTR [rip+0x535c6]        # 0x1400646c8
   140011102:	mov    r13d,DWORD PTR [rsp+0x30]
   140011107:	test   r13d,r13d
   14001110a:	je     0x1400112c1
   140011110:	test   esi,esi
   140011112:	je     0x1400112c1
   140011118:	mov    rdx,rbp
   14001111b:	lea    rcx,[rsp+0xd80]
   140011123:	call   QWORD PTR [rip+0x533ef]        # 0x140064518
   140011129:	mov    rdx,rbp
   14001112c:	lea    rcx,[rsp+0x960]
   140011134:	call   QWORD PTR [rip+0x533de]        # 0x140064518
   14001113a:	mov    rdi,QWORD PTR [rsp+0xb8]
   140011142:	mov    rdx,rdi
   140011145:	lea    rcx,[rsp+0x540]
   14001114d:	call   QWORD PTR [rip+0x533c5]        # 0x140064518
   140011153:	mov    rdx,rdi
   140011156:	lea    rcx,[rsp+0x750]
   14001115e:	call   QWORD PTR [rip+0x533b4]        # 0x140064518
   140011164:	lea    rdx,[rip+0x5428d]        # 0x1400653f8
   14001116b:	lea    rcx,[rsp+0x960]
   140011173:	call   0x140046660
   140011178:	mov    WORD PTR [rax],0x2e
   14001117d:	mov    WORD PTR [rax+0x2],0x50
   140011183:	mov    WORD PTR [rax+0x4],0x4e
   140011189:	mov    WORD PTR [rax+0x6],0x46
   14001118f:	lea    rdx,[rsp+0xd80]
   140011197:	lea    rcx,[rsp+0x540]
   14001119f:	call   QWORD PTR [rip+0x53433]        # 0x1400645d8
   1400111a5:	lea    rdx,[rsp+0x960]
   1400111ad:	lea    rcx,[rsp+0x750]
   1400111b5:	call   QWORD PTR [rip+0x5341d]        # 0x1400645d8
   1400111bb:	lea    rdx,[rsp+0x60]
   1400111c0:	mov    QWORD PTR [rsp+0x90],rdx
   1400111c8:	call   0x14002b874
   1400111cd:	xor    ecx,ecx
   1400111cf:	test   rax,rax
   1400111d2:	setne  cl
   1400111d5:	test   ecx,ecx
   1400111d7:	je     0x14001130f
   1400111dd:	mov    rdx,QWORD PTR [rax]
   1400111e0:	mov    rcx,rax
   1400111e3:	call   QWORD PTR [rdx+0x18]
   1400111e6:	add    rax,0x18
   1400111ea:	mov    QWORD PTR [rsp+0x60],rax
   1400111ef:	lea    rcx,[rsp+0x540]
   1400111f7:	lea    rax,[rsp+0x540]
   1400111ff:	test   rax,0xffffffffffff0000
   140011205:	jne    0x140011228
   140011207:	movzx  edi,cx
   14001120a:	mov    ecx,edi
   14001120c:	call   0x14002b860
   140011211:	test   rax,rax
   140011214:	je     0x140011252
   140011216:	mov    r8d,edi
   140011219:	mov    rdx,rax
   14001121c:	lea    rcx,[rsp+0x60]
   140011221:	call   0x140003650
   140011226:	jmp    0x140011252
   140011228:	xor    eax,eax
   14001122a:	mov    rcx,r15
   14001122d:	lea    rdi,[rsp+0x540]
   140011235:	repnz scas ax,WORD PTR es:[rdi]
   140011238:	not    rcx
   14001123b:	lea    r8d,[rcx-0x1]
   14001123f:	lea    rdx,[rsp+0x540]
   140011247:	lea    rcx,[rsp+0x60]
   14001124c:	call   0x1400037d0
   140011251:	nop
   140011252:	lea    rdx,[rsp+0x60]
   140011257:	mov    rcx,r14
   14001125a:	call   0x14000c440
   14001125f:	mov    edi,eax
   140011261:	mov    edx,0x80
   140011266:	lea    rcx,[rsp+0x540]
   14001126e:	call   QWORD PTR [rip+0x532ac]        # 0x140064520
   140011274:	lea    rcx,[rsp+0x540]
   14001127c:	call   QWORD PTR [rip+0x532be]        # 0x140064540
   140011282:	test   eax,eax
   140011284:	je     0x1400112a0
   140011286:	test   edi,edi
   140011288:	je     0x1400112a0
   14001128a:	movsxd rax,DWORD PTR [r14+0xeb100]
   140011291:	imul   rax,rax,0x12c8
   140011298:	mov    DWORD PTR [rax+r14*1+0x4bc],r12d
   1400112a0:	mov    edx,0x80
   1400112a5:	lea    rcx,[rsp+0x750]
   1400112ad:	call   QWORD PTR [rip+0x5326d]        # 0x140064520
   1400112b3:	lea    rcx,[rsp+0x750]
   1400112bb:	call   QWORD PTR [rip+0x5327f]        # 0x140064540
   1400112c1:	lea    rdx,[rsp+0xe0]
   1400112c9:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400112d1:	call   QWORD PTR [rip+0x53259]        # 0x140064530
   1400112d7:	test   eax,eax
   1400112d9:	je     0x14001131a
   1400112db:	xor    r13d,r13d
   1400112de:	jmp    0x140010b70
   1400112e3:	mov    ecx,0x80070057
   1400112e8:	call   0x140001430
   1400112ed:	int3   
   1400112ee:	mov    ecx,0x80070057
   1400112f3:	call   0x140001430
   1400112f8:	int3   
   1400112f9:	mov    ecx,0x80070057
   1400112fe:	call   0x140001430
   140011303:	int3   
   140011304:	mov    ecx,0x80070057
   140011309:	call   0x140001430
   14001130e:	int3   
   14001130f:	mov    ecx,0x80004005
   140011314:	call   0x140001430
   140011319:	int3   
   14001131a:	test   r13d,r13d
   14001131d:	je     0x140011323
   14001131f:	test   esi,esi
   140011321:	jne    0x140011326
   140011323:	xor    r12d,r12d
   140011326:	mov    rdx,QWORD PTR [rsp+0x58]
   14001132b:	add    rdx,0xffffffffffffffe8
   14001132f:	mov    eax,r15d
   140011332:	lock xadd DWORD PTR [rdx+0x10],eax
   140011337:	add    eax,0xffffffff
   14001133a:	test   eax,eax
   14001133c:	jg     0x140011348
   14001133e:	mov    rcx,QWORD PTR [rdx]
   140011341:	mov    rax,QWORD PTR [rcx]
   140011344:	call   QWORD PTR [rax+0x8]
   140011347:	nop
   140011348:	mov    rdx,QWORD PTR [rsp+0x80]
   140011350:	add    rdx,0xffffffffffffffe8
   140011354:	mov    eax,r15d
   140011357:	lock xadd DWORD PTR [rdx+0x10],eax
   14001135c:	add    eax,0xffffffff
   14001135f:	test   eax,eax
   140011361:	jg     0x14001136d
   140011363:	mov    rcx,QWORD PTR [rdx]
   140011366:	mov    rax,QWORD PTR [rcx]
   140011369:	call   QWORD PTR [rax+0x8]
   14001136c:	nop
   14001136d:	mov    rdx,QWORD PTR [rsp+0x70]
   140011372:	add    rdx,0xffffffffffffffe8
   140011376:	mov    eax,r15d
   140011379:	lock xadd DWORD PTR [rdx+0x10],eax
   14001137e:	add    eax,0xffffffff
   140011381:	test   eax,eax
   140011383:	jg     0x14001138f
   140011385:	mov    rcx,QWORD PTR [rdx]
   140011388:	mov    rax,QWORD PTR [rcx]
   14001138b:	call   QWORD PTR [rax+0x8]
   14001138e:	nop
   14001138f:	mov    rdx,QWORD PTR [rsp+0x88]
   140011397:	add    rdx,0xffffffffffffffe8
   14001139b:	mov    eax,r15d
   14001139e:	lock xadd DWORD PTR [rdx+0x10],eax
   1400113a3:	add    eax,0xffffffff
   1400113a6:	test   eax,eax
   1400113a8:	jg     0x1400113b4
   1400113aa:	mov    rcx,QWORD PTR [rdx]
   1400113ad:	mov    rax,QWORD PTR [rcx]
   1400113b0:	call   QWORD PTR [rax+0x8]
   1400113b3:	nop
   1400113b4:	mov    rdx,QWORD PTR [rsp+0x50]
   1400113b9:	add    rdx,0xffffffffffffffe8
   1400113bd:	mov    eax,r15d
   1400113c0:	lock xadd DWORD PTR [rdx+0x10],eax
   1400113c5:	add    eax,0xffffffff
   1400113c8:	test   eax,eax
   1400113ca:	jg     0x1400113d6
   1400113cc:	mov    rcx,QWORD PTR [rdx]
   1400113cf:	mov    rax,QWORD PTR [rcx]
   1400113d2:	call   QWORD PTR [rax+0x8]
   1400113d5:	nop
   1400113d6:	mov    rdx,QWORD PTR [rsp+0x68]
   1400113db:	add    rdx,0xffffffffffffffe8
   1400113df:	mov    eax,r15d
   1400113e2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400113e7:	add    eax,0xffffffff
   1400113ea:	test   eax,eax
   1400113ec:	jg     0x1400113f8
   1400113ee:	mov    rcx,QWORD PTR [rdx]
   1400113f1:	mov    rax,QWORD PTR [rcx]
   1400113f4:	call   QWORD PTR [rax+0x8]
   1400113f7:	nop
   1400113f8:	mov    rdx,QWORD PTR [rsp+0x78]
   1400113fd:	add    rdx,0xffffffffffffffe8
   140011401:	mov    eax,r15d
   140011404:	lock xadd DWORD PTR [rdx+0x10],eax
   140011409:	add    eax,0xffffffff
   14001140c:	test   eax,eax
   14001140e:	jg     0x14001141a
   140011410:	mov    rcx,QWORD PTR [rdx]
   140011413:	mov    rax,QWORD PTR [rcx]
   140011416:	call   QWORD PTR [rax+0x8]
   140011419:	nop
   14001141a:	mov    rdx,QWORD PTR [rsp+0x48]
   14001141f:	add    rdx,0xffffffffffffffe8
   140011423:	mov    eax,r15d
   140011426:	lock xadd DWORD PTR [rdx+0x10],eax
   14001142b:	add    eax,0xffffffff
   14001142e:	test   eax,eax
   140011430:	jg     0x14001143c
   140011432:	mov    rcx,QWORD PTR [rdx]
   140011435:	mov    rax,QWORD PTR [rcx]
   140011438:	call   QWORD PTR [rax+0x8]
   14001143b:	nop
   14001143c:	mov    rdx,QWORD PTR [rsp+0x38]
   140011441:	add    rdx,0xffffffffffffffe8
   140011445:	mov    eax,r15d
   140011448:	lock xadd DWORD PTR [rdx+0x10],eax
   14001144d:	add    eax,0xffffffff
   140011450:	test   eax,eax
   140011452:	jg     0x14001145e
   140011454:	mov    rcx,QWORD PTR [rdx]
   140011457:	mov    rax,QWORD PTR [rcx]
   14001145a:	call   QWORD PTR [rax+0x8]
   14001145d:	nop
   14001145e:	mov    rdx,QWORD PTR [rsp+0xc0]
   140011466:	add    rdx,0xffffffffffffffe8
   14001146a:	mov    eax,r15d
   14001146d:	lock xadd DWORD PTR [rdx+0x10],eax
   140011472:	add    eax,0xffffffff
   140011475:	test   eax,eax
   140011477:	jg     0x140011483
   140011479:	mov    rcx,QWORD PTR [rdx]
   14001147c:	mov    rax,QWORD PTR [rcx]
   14001147f:	call   QWORD PTR [rax+0x8]
   140011482:	nop
   140011483:	mov    rdx,QWORD PTR [rsp+0x40]
   140011488:	add    rdx,0xffffffffffffffe8
   14001148c:	lock xadd DWORD PTR [rdx+0x10],r15d
   140011492:	add    r15d,0xffffffff
   140011496:	test   r15d,r15d
   140011499:	jg     0x1400114a4
   14001149b:	mov    rcx,QWORD PTR [rdx]
   14001149e:	mov    rax,QWORD PTR [rcx]
   1400114a1:	call   QWORD PTR [rax+0x8]
   1400114a4:	mov    eax,r12d
   1400114a7:	jmp    0x1400114b4
   1400114a9:	mov    ecx,0x80070057
   1400114ae:	call   0x140001430
   1400114b3:	nop
   1400114b4:	mov    rcx,QWORD PTR [rsp+0xf90]
   1400114bc:	xor    rcx,rsp
   1400114bf:	call   0x140046470
   1400114c4:	mov    rbx,QWORD PTR [rsp+0xff8]
   1400114cc:	add    rsp,0xfa0
   1400114d3:	pop    r15
   1400114d5:	pop    r14
   1400114d7:	pop    r13
   1400114d9:	pop    r12
   1400114db:	pop    rdi
   1400114dc:	pop    rsi
   1400114dd:	pop    rbp
   1400114de:	ret    
   1400114df:	int3   
   1400114e0:	rex push rbp
   1400114e2:	sub    rsp,0x20
   1400114e6:	mov    rbp,rdx
   1400114e9:	lea    rcx,[rbp+0x40]
   1400114ed:	call   0x1400010c0
   1400114f2:	add    rsp,0x20
   1400114f6:	pop    rbp
   1400114f7:	ret    
   1400114f8:	int3   
   1400114f9:	int3   
   1400114fa:	int3   
   1400114fb:	int3   
   1400114fc:	int3   
   1400114fd:	int3   
   1400114fe:	int3   
   1400114ff:	int3   
   140011500:	rex push rbp
   140011502:	sub    rsp,0x20
   140011506:	mov    rbp,rdx
   140011509:	lea    rcx,[rbp+0xc0]
   140011510:	call   0x1400010c0
   140011515:	add    rsp,0x20
   140011519:	pop    rbp
   14001151a:	ret    
   14001151b:	int3   
   14001151c:	int3   
   14001151d:	int3   
   14001151e:	int3   
   14001151f:	int3   
   140011520:	rex push rbp
   140011522:	sub    rsp,0x20
   140011526:	mov    rbp,rdx
   140011529:	lea    rcx,[rbp+0x38]
   14001152d:	call   0x1400010c0
   140011532:	add    rsp,0x20
   140011536:	pop    rbp
   140011537:	ret    
   140011538:	int3   
   140011539:	int3   
   14001153a:	int3   
   14001153b:	int3   
   14001153c:	int3   
   14001153d:	int3   
   14001153e:	int3   
   14001153f:	int3   
   140011540:	rex push rbp
   140011542:	sub    rsp,0x20
   140011546:	mov    rbp,rdx
   140011549:	lea    rcx,[rbp+0x48]
   14001154d:	call   0x140001090
   140011552:	add    rsp,0x20
   140011556:	pop    rbp
   140011557:	ret    
   140011558:	int3   
   140011559:	int3   
   14001155a:	int3   
   14001155b:	int3   
   14001155c:	int3   
   14001155d:	int3   
   14001155e:	int3   
   14001155f:	int3   
   140011560:	rex push rbp
   140011562:	sub    rsp,0x20
   140011566:	mov    rbp,rdx
   140011569:	lea    rcx,[rbp+0x48]
   14001156d:	call   0x1400010c0
   140011572:	add    rsp,0x20
   140011576:	pop    rbp
   140011577:	ret    
   140011578:	int3   
   140011579:	int3   
   14001157a:	int3   
   14001157b:	int3   
   14001157c:	int3   
   14001157d:	int3   
   14001157e:	int3   
   14001157f:	int3   
   140011580:	rex push rbp
   140011582:	sub    rsp,0x20
   140011586:	mov    rbp,rdx
   140011589:	lea    rcx,[rbp+0x78]
   14001158d:	call   0x140001090
   140011592:	add    rsp,0x20
   140011596:	pop    rbp
   140011597:	ret    
   140011598:	int3   
   140011599:	int3   
   14001159a:	int3   
   14001159b:	int3   
   14001159c:	int3   
   14001159d:	int3   
   14001159e:	int3   
   14001159f:	int3   
   1400115a0:	rex push rbp
   1400115a2:	sub    rsp,0x20
   1400115a6:	mov    rbp,rdx
   1400115a9:	lea    rcx,[rbp+0x78]
   1400115ad:	call   0x1400010c0
   1400115b2:	add    rsp,0x20
   1400115b6:	pop    rbp
   1400115b7:	ret    
   1400115b8:	int3   
   1400115b9:	int3   
   1400115ba:	int3   
   1400115bb:	int3   
   1400115bc:	int3   
   1400115bd:	int3   
   1400115be:	int3   
   1400115bf:	int3   
   1400115c0:	rex push rbp
   1400115c2:	sub    rsp,0x20
   1400115c6:	mov    rbp,rdx
   1400115c9:	lea    rcx,[rbp+0x68]
   1400115cd:	call   0x140001090
   1400115d2:	add    rsp,0x20
   1400115d6:	pop    rbp
   1400115d7:	ret    
   1400115d8:	int3   
   1400115d9:	int3   
   1400115da:	int3   
   1400115db:	int3   
   1400115dc:	int3   
   1400115dd:	int3   
   1400115de:	int3   
   1400115df:	int3   
   1400115e0:	rex push rbp
   1400115e2:	sub    rsp,0x20
   1400115e6:	mov    rbp,rdx
   1400115e9:	lea    rcx,[rbp+0x68]
   1400115ed:	call   0x1400010c0
   1400115f2:	add    rsp,0x20
   1400115f6:	pop    rbp
   1400115f7:	ret    
   1400115f8:	int3   
   1400115f9:	int3   
   1400115fa:	int3   
   1400115fb:	int3   
   1400115fc:	int3   
   1400115fd:	int3   
   1400115fe:	int3   
   1400115ff:	int3   
   140011600:	rex push rbp
   140011602:	sub    rsp,0x20
   140011606:	mov    rbp,rdx
   140011609:	lea    rcx,[rbp+0x50]
   14001160d:	call   0x140001090
   140011612:	add    rsp,0x20
   140011616:	pop    rbp
   140011617:	ret    
   140011618:	int3   
   140011619:	int3   
   14001161a:	int3   
   14001161b:	int3   
   14001161c:	int3   
   14001161d:	int3   
   14001161e:	int3   
   14001161f:	int3   
   140011620:	rex push rbp
   140011622:	sub    rsp,0x20
   140011626:	mov    rbp,rdx
   140011629:	lea    rcx,[rbp+0x50]
   14001162d:	call   0x1400010c0
   140011632:	add    rsp,0x20
   140011636:	pop    rbp
   140011637:	ret    
   140011638:	int3   
   140011639:	int3   
   14001163a:	int3   
   14001163b:	int3   
   14001163c:	int3   
   14001163d:	int3   
   14001163e:	int3   
   14001163f:	int3   
   140011640:	rex push rbp
   140011642:	sub    rsp,0x20
   140011646:	mov    rbp,rdx
   140011649:	lea    rcx,[rbp+0x88]
   140011650:	call   0x140001090
   140011655:	add    rsp,0x20
   140011659:	pop    rbp
   14001165a:	ret    
   14001165b:	int3   
   14001165c:	int3   
   14001165d:	int3   
   14001165e:	int3   
   14001165f:	int3   
   140011660:	rex push rbp
   140011662:	sub    rsp,0x20
   140011666:	mov    rbp,rdx
   140011669:	lea    rcx,[rbp+0x88]
   140011670:	call   0x1400010c0
   140011675:	add    rsp,0x20
   140011679:	pop    rbp
   14001167a:	ret    
   14001167b:	int3   
   14001167c:	int3   
   14001167d:	int3   
   14001167e:	int3   
   14001167f:	int3   
   140011680:	rex push rbp
   140011682:	sub    rsp,0x20
   140011686:	mov    rbp,rdx
   140011689:	lea    rcx,[rbp+0x70]
   14001168d:	call   0x140001090
   140011692:	add    rsp,0x20
   140011696:	pop    rbp
   140011697:	ret    
   140011698:	int3   
   140011699:	int3   
   14001169a:	int3   
   14001169b:	int3   
   14001169c:	int3   
   14001169d:	int3   
   14001169e:	int3   
   14001169f:	int3   
   1400116a0:	rex push rbp
   1400116a2:	sub    rsp,0x20
   1400116a6:	mov    rbp,rdx
   1400116a9:	lea    rcx,[rbp+0x70]
   1400116ad:	call   0x1400010c0
   1400116b2:	add    rsp,0x20
   1400116b6:	pop    rbp
   1400116b7:	ret    
   1400116b8:	int3   
   1400116b9:	int3   
   1400116ba:	int3   
   1400116bb:	int3   
   1400116bc:	int3   
   1400116bd:	int3   
   1400116be:	int3   
   1400116bf:	int3   
   1400116c0:	rex push rbp
   1400116c2:	sub    rsp,0x20
   1400116c6:	mov    rbp,rdx
   1400116c9:	lea    rcx,[rbp+0x80]
   1400116d0:	call   0x140001090
   1400116d5:	add    rsp,0x20
   1400116d9:	pop    rbp
   1400116da:	ret    
   1400116db:	int3   
   1400116dc:	int3   
   1400116dd:	int3   
   1400116de:	int3   
   1400116df:	int3   
   1400116e0:	rex push rbp
   1400116e2:	sub    rsp,0x20
   1400116e6:	mov    rbp,rdx
   1400116e9:	lea    rcx,[rbp+0x80]
   1400116f0:	call   0x1400010c0
   1400116f5:	add    rsp,0x20
   1400116f9:	pop    rbp
   1400116fa:	ret    
   1400116fb:	int3   
   1400116fc:	int3   
   1400116fd:	int3   
   1400116fe:	int3   
   1400116ff:	int3   
   140011700:	rex push rbp
   140011702:	sub    rsp,0x20
   140011706:	mov    rbp,rdx
   140011709:	lea    rcx,[rbp+0x58]
   14001170d:	call   0x140001090
   140011712:	add    rsp,0x20
   140011716:	pop    rbp
   140011717:	ret    
   140011718:	int3   
   140011719:	int3   
   14001171a:	int3   
   14001171b:	int3   
   14001171c:	int3   
   14001171d:	int3   
   14001171e:	int3   
   14001171f:	int3   
   140011720:	rex push rbp
   140011722:	sub    rsp,0x20
   140011726:	mov    rbp,rdx
   140011729:	lea    rcx,[rbp+0x58]
   14001172d:	call   0x1400010c0
   140011732:	add    rsp,0x20
   140011736:	pop    rbp
   140011737:	ret    
   140011738:	int3   
   140011739:	int3   
   14001173a:	int3   
   14001173b:	int3   
   14001173c:	int3   
   14001173d:	int3   
   14001173e:	int3   
   14001173f:	int3   
   140011740:	rex push rbp
   140011742:	sub    rsp,0x20
   140011746:	mov    rbp,rdx
   140011749:	mov    rcx,QWORD PTR [rbp+0x90]
   140011750:	call   0x140001090
   140011755:	add    rsp,0x20
   140011759:	pop    rbp
   14001175a:	ret    
   14001175b:	int3   
   14001175c:	int3   
   14001175d:	int3   
   14001175e:	int3   
   14001175f:	int3   
   140011760:	rex push rdi
   140011762:	sub    rsp,0x260
   140011769:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140011772:	mov    QWORD PTR [rsp+0x280],rbx
   14001177a:	mov    rax,QWORD PTR [rip+0x755ef]        # 0x140086d70
   140011781:	xor    rax,rsp
   140011784:	mov    QWORD PTR [rsp+0x250],rax
   14001178c:	mov    rdi,rdx
   14001178f:	mov    rbx,rcx
   140011792:	mov    QWORD PTR [rsp+0x30],rdx
   140011797:	mov    DWORD PTR [rsp+0x20],0x0
   14001179f:	mov    r8,QWORD PTR [rdx]
   1400117a2:	lea    rdx,[rip+0x541cf]        # 0x140065978
   1400117a9:	lea    rcx,[rsp+0x40]
   1400117ae:	call   0x1400022b0
   1400117b3:	lea    r9,[rsp+0x20]
   1400117b8:	xor    r8d,r8d
   1400117bb:	lea    edx,[r8+0x24]
   1400117bf:	lea    rcx,[rsp+0x40]
   1400117c4:	call   0x140001d10
   1400117c9:	test   eax,eax
   1400117cb:	je     0x1400117df
   1400117cd:	mov    r8d,eax
   1400117d0:	mov    edx,0x3
   1400117d5:	mov    rcx,rbx
   1400117d8:	call   0x140008190
   1400117dd:	jmp    0x140011822
   1400117df:	lea    rdx,[rip+0x53c12]        # 0x1400653f8
   1400117e6:	lea    rcx,[rsp+0x40]
   1400117eb:	call   0x140046660
   1400117f0:	mov    WORD PTR [rax],0x2e
   1400117f5:	mov    WORD PTR [rax+0x2],0x50
   1400117fb:	mov    WORD PTR [rax+0x4],0x4e
   140011801:	mov    WORD PTR [rax+0x6],0x46
   140011807:	mov    edx,0x80
   14001180c:	lea    rcx,[rsp+0x40]
   140011811:	call   QWORD PTR [rip+0x52d09]        # 0x140064520
   140011817:	lea    rcx,[rsp+0x40]
   14001181c:	call   QWORD PTR [rip+0x52d1e]        # 0x140064540
   140011822:	mov    rcx,rbx
   140011825:	call   0x14000caf0
   14001182a:	nop
   14001182b:	mov    rdx,QWORD PTR [rdi]
   14001182e:	sub    rdx,0x18
   140011832:	or     eax,0xffffffff
   140011835:	lock xadd DWORD PTR [rdx+0x10],eax
   14001183a:	add    eax,0xffffffff
   14001183d:	test   eax,eax
   14001183f:	jg     0x14001184e
   140011841:	mov    rcx,QWORD PTR [rdx]
   140011844:	mov    rax,QWORD PTR [rcx]
   140011847:	call   QWORD PTR [rax+0x8]
   14001184a:	xor    eax,eax
   14001184c:	jmp    0x140011850
   14001184e:	xor    eax,eax
   140011850:	mov    rcx,QWORD PTR [rsp+0x250]
   140011858:	xor    rcx,rsp
   14001185b:	call   0x140046470
   140011860:	mov    rbx,QWORD PTR [rsp+0x280]
   140011868:	add    rsp,0x260
   14001186f:	pop    rdi
   140011870:	ret    
   140011871:	int3   
   140011872:	int3   
   140011873:	int3   
   140011874:	int3   
   140011875:	int3   
   140011876:	int3   
   140011877:	int3   
   140011878:	int3   
   140011879:	int3   
   14001187a:	int3   
   14001187b:	int3   
   14001187c:	int3   
   14001187d:	int3   
   14001187e:	int3   
   14001187f:	int3   
   140011880:	rex push rbp
   140011882:	sub    rsp,0x20
   140011886:	mov    rbp,rdx
   140011889:	mov    rcx,QWORD PTR [rbp+0x30]
   14001188d:	call   0x1400010c0
   140011892:	add    rsp,0x20
   140011896:	pop    rbp
   140011897:	ret    
   140011898:	int3   
   140011899:	int3   
   14001189a:	int3   
   14001189b:	int3   
   14001189c:	int3   
   14001189d:	int3   
   14001189e:	int3   
   14001189f:	int3   
   1400118a0:	rex push rsi
   1400118a2:	push   rdi
   1400118a3:	push   r12
   1400118a5:	push   r13
   1400118a7:	push   r14
   1400118a9:	sub    rsp,0x70
   1400118ad:	mov    rax,QWORD PTR [rip+0x754bc]        # 0x140086d70
   1400118b4:	xor    rax,rsp
   1400118b7:	mov    QWORD PTR [rsp+0x60],rax
   1400118bc:	xor    esi,esi
   1400118be:	mov    r13d,ecx
   1400118c1:	lea    rcx,[rip+0x53720]        # 0x140064fe8
   1400118c8:	lea    r9d,[rsi+0x6]
   1400118cc:	xor    r8d,r8d
   1400118cf:	xor    edx,edx
   1400118d1:	mov    r12d,esi
   1400118d4:	mov    r14d,esi
   1400118d7:	mov    DWORD PTR [rsp+0x30],esi
   1400118db:	call   QWORD PTR [rip+0x52e3f]        # 0x140064720
   1400118e1:	cmp    rax,0xffffffffffffffff
   1400118e5:	mov    rdi,rax
   1400118e8:	jne    0x1400118f1
   1400118ea:	xor    eax,eax
   1400118ec:	jmp    0x140011aa3
   1400118f1:	mov    QWORD PTR [rsp+0xa8],rbx
   1400118f9:	lea    r8,[rsp+0x40]
   1400118fe:	xor    edx,edx
   140011900:	mov    rcx,rax
   140011903:	mov    QWORD PTR [rsp+0xb0],rbp
   14001190b:	mov    DWORD PTR [rsp+0x40],0x20
   140011913:	mov    QWORD PTR [rsp+0xb8],r15
   14001191b:	call   QWORD PTR [rip+0x52e07]        # 0x140064728
   140011921:	test   eax,eax
   140011923:	je     0x140011a80
   140011929:	lea    r15,[rip+0x5ea18]        # 0x140070348
   140011930:	lea    rax,[rsp+0x30]
   140011935:	lea    rdx,[rsp+0x40]
   14001193a:	xor    r9d,r9d
   14001193d:	xor    r8d,r8d
   140011940:	mov    rcx,rdi
   140011943:	mov    QWORD PTR [rsp+0x20],rax
   140011948:	call   QWORD PTR [rip+0x52de2]        # 0x140064730
   14001194e:	mov    edx,DWORD PTR [rsp+0x30]
   140011952:	mov    ecx,0x40
   140011957:	add    rdx,rdx
   14001195a:	call   QWORD PTR [rip+0x52c98]        # 0x1400645f8
   140011960:	test   rax,rax
   140011963:	mov    rbp,rax
   140011966:	je     0x140011a80
   14001196c:	mov    r9d,DWORD PTR [rsp+0x30]
   140011971:	lea    rdx,[rsp+0x40]
   140011976:	mov    r8,rax
   140011979:	mov    rcx,rdi
   14001197c:	mov    QWORD PTR [rsp+0x20],rsi
   140011981:	call   QWORD PTR [rip+0x52da9]        # 0x140064730
   140011987:	test   eax,eax
   140011989:	je     0x140011a77
   14001198f:	lea    rax,[rsp+0x44]
   140011994:	mov    rdx,QWORD PTR [rax]
   140011997:	cmp    rdx,QWORD PTR [r15]
   14001199a:	jne    0x1400119aa
   14001199c:	mov    rdx,QWORD PTR [rax+0x8]
   1400119a0:	cmp    rdx,QWORD PTR [r15+0x8]
   1400119a4:	jne    0x1400119aa
   1400119a6:	mov    eax,esi
   1400119a8:	jmp    0x1400119af
   1400119aa:	sbb    eax,eax
   1400119ac:	sbb    eax,0xffffffff
   1400119af:	test   eax,eax
   1400119b1:	jne    0x140011a20
   1400119b3:	test   r13d,r13d
   1400119b6:	je     0x140011a4d
   1400119bc:	lea    r9,[rsp+0x34]
   1400119c1:	lea    r8,[rsp+0x38]
   1400119c6:	lea    rdx,[rsp+0x40]
   1400119cb:	mov    rcx,rdi
   1400119ce:	mov    QWORD PTR [rsp+0x38],rsi
   1400119d3:	mov    DWORD PTR [rsp+0x34],esi
   1400119d7:	call   0x14000d360
   1400119dc:	mov    rbx,QWORD PTR [rsp+0x38]
   1400119e1:	test   rbx,rbx
   1400119e4:	je     0x140011a20
   1400119e6:	mov    rcx,rbx
   1400119e9:	call   QWORD PTR [rip+0x53131]        # 0x140064b20
   1400119ef:	lea    rdx,[rip+0x553b2]        # 0x140066da8
   1400119f6:	mov    rcx,rbx
   1400119f9:	call   0x140046660
   1400119fe:	test   rax,rax
   140011a01:	je     0x140011a17
   140011a03:	mov    r8,rdi
   140011a06:	mov    edx,r12d
   140011a09:	mov    ecx,r13d
   140011a0c:	mov    r14d,0x1
   140011a12:	call   0x140001a90
   140011a17:	mov    rcx,rbx
   140011a1a:	call   QWORD PTR [rip+0x52bf0]        # 0x140064610
   140011a20:	test   r14d,r14d
   140011a23:	jne    0x140011a80
   140011a25:	mov    rcx,rbp
   140011a28:	call   QWORD PTR [rip+0x52be2]        # 0x140064610
   140011a2e:	add    r12d,0x1
   140011a32:	lea    r8,[rsp+0x40]
   140011a37:	mov    edx,r12d
   140011a3a:	mov    rcx,rdi
   140011a3d:	call   QWORD PTR [rip+0x52ce5]        # 0x140064728
   140011a43:	test   eax,eax
   140011a45:	jne    0x140011930
   140011a4b:	jmp    0x140011a80
   140011a4d:	lea    rdx,[rsp+0x40]
   140011a52:	mov    rcx,rdi
   140011a55:	call   0x140001a00
   140011a5a:	mov    rcx,rbp
   140011a5d:	cmp    eax,0x8
   140011a60:	sete   sil
   140011a64:	call   QWORD PTR [rip+0x52ba6]        # 0x140064610
   140011a6a:	mov    rcx,rdi
   140011a6d:	call   QWORD PTR [rip+0x52cc5]        # 0x140064738
   140011a73:	mov    eax,esi
   140011a75:	jmp    0x140011a8b
   140011a77:	mov    rcx,rbp
   140011a7a:	call   QWORD PTR [rip+0x52b90]        # 0x140064610
   140011a80:	mov    rcx,rdi
   140011a83:	call   QWORD PTR [rip+0x52caf]        # 0x140064738
   140011a89:	xor    eax,eax
   140011a8b:	mov    rbp,QWORD PTR [rsp+0xb0]
   140011a93:	mov    rbx,QWORD PTR [rsp+0xa8]
   140011a9b:	mov    r15,QWORD PTR [rsp+0xb8]
   140011aa3:	mov    rcx,QWORD PTR [rsp+0x60]
   140011aa8:	xor    rcx,rsp
   140011aab:	call   0x140046470
   140011ab0:	add    rsp,0x70
   140011ab4:	pop    r14
   140011ab6:	pop    r13
   140011ab8:	pop    r12
   140011aba:	pop    rdi
   140011abb:	pop    rsi
   140011abc:	ret    
   140011abd:	int3   
   140011abe:	int3   
   140011abf:	int3   
   140011ac0:	mov    rax,rsp
   140011ac3:	push   rdi
   140011ac4:	push   r12
   140011ac6:	push   r13
   140011ac8:	push   r14
   140011aca:	push   r15
   140011acc:	sub    rsp,0x4e0
   140011ad3:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   140011adf:	mov    QWORD PTR [rax+0x8],rbx
   140011ae3:	mov    QWORD PTR [rax+0x10],rbp
   140011ae7:	mov    QWORD PTR [rax+0x18],rsi
   140011aeb:	mov    rax,QWORD PTR [rip+0x7527e]        # 0x140086d70
   140011af2:	xor    rax,rsp
   140011af5:	mov    QWORD PTR [rsp+0x4d0],rax
   140011afd:	mov    r12d,r8d
   140011b00:	mov    DWORD PTR [rsp+0x70],r8d
   140011b05:	mov    DWORD PTR [rsp+0x68],edx
   140011b09:	mov    r13d,ecx
   140011b0c:	xor    r14d,r14d
   140011b0f:	mov    r15d,r14d
   140011b12:	call   0x14002b874
   140011b17:	mov    rcx,rax
   140011b1a:	mov    eax,r14d
   140011b1d:	test   rcx,rcx
   140011b20:	setne  al
   140011b23:	test   eax,eax
   140011b25:	jne    0x140011b32
   140011b27:	mov    ecx,0x80004005
   140011b2c:	call   0x140001430
   140011b31:	int3   
   140011b32:	mov    rax,QWORD PTR [rcx]
   140011b35:	call   QWORD PTR [rax+0x18]
   140011b38:	add    rax,0x18
   140011b3c:	mov    QWORD PTR [rsp+0x50],rax
   140011b41:	mov    DWORD PTR [rsp+0x34],r14d
   140011b46:	mov    DWORD PTR [rsp+0x30],r14d
   140011b4b:	mov    DWORD PTR [rsp+0x48],r14d
   140011b50:	call   0x14002b874
   140011b55:	mov    rcx,rax
   140011b58:	mov    eax,r14d
   140011b5b:	test   rcx,rcx
   140011b5e:	setne  al
   140011b61:	test   eax,eax
   140011b63:	jne    0x140011b70
   140011b65:	mov    ecx,0x80004005
   140011b6a:	call   0x140001430
   140011b6f:	int3   
   140011b70:	mov    rax,QWORD PTR [rcx]
   140011b73:	call   QWORD PTR [rax+0x18]
   140011b76:	lea    rbx,[rax+0x18]
   140011b7a:	mov    QWORD PTR [rsp+0x40],rbx
   140011b7f:	lea    rdx,[rip+0x537c2]        # 0x140065348
   140011b86:	or     rbp,0xffffffffffffffff
   140011b8a:	test   rdx,0xffffffffffff0000
   140011b91:	jne    0x140011bb9
   140011b93:	movzx  edi,dx
   140011b96:	mov    ecx,edi
   140011b98:	call   0x14002b860
   140011b9d:	test   rax,rax
   140011ba0:	je     0x140011bda
   140011ba2:	mov    r8d,edi
   140011ba5:	mov    rdx,rax
   140011ba8:	lea    rcx,[rsp+0x40]
   140011bad:	call   0x140003650
   140011bb2:	mov    rbx,QWORD PTR [rsp+0x40]
   140011bb7:	jmp    0x140011bda
   140011bb9:	xor    eax,eax
   140011bbb:	mov    rcx,rbp
   140011bbe:	mov    rdi,rdx
   140011bc1:	repnz scas ax,WORD PTR es:[rdi]
   140011bc4:	not    rcx
   140011bc7:	lea    r8d,[rcx-0x1]
   140011bcb:	lea    rcx,[rsp+0x40]
   140011bd0:	call   0x1400037d0
   140011bd5:	mov    rbx,QWORD PTR [rsp+0x40]
   140011bda:	mov    esi,0x20219
   140011bdf:	mov    eax,0x20119
   140011be4:	test   r12d,r12d
   140011be7:	cmovne esi,eax
   140011bea:	xor    eax,eax
   140011bec:	mov    rcx,rbp
   140011bef:	lea    rdi,[rip+0x552aa]        # 0x140066ea0
   140011bf6:	repnz scas ax,WORD PTR es:[rdi]
   140011bf9:	not    rcx
   140011bfc:	lea    r8d,[rcx-0x1]
   140011c00:	lea    rdx,[rip+0x55299]        # 0x140066ea0
   140011c07:	lea    rcx,[rsp+0x50]
   140011c0c:	call   0x1400037d0
   140011c11:	lea    rdx,[rsp+0x38]
   140011c16:	mov    QWORD PTR [rsp+0x20],rdx
   140011c1b:	mov    r9d,esi
   140011c1e:	xor    r8d,r8d
   140011c21:	mov    rsi,QWORD PTR [rsp+0x50]
   140011c26:	mov    rdx,rsi
   140011c29:	mov    ecx,0x80000002
   140011c2e:	call   QWORD PTR [rip+0x52424]        # 0x140064058
   140011c34:	test   eax,eax
   140011c36:	jne    0x140012207
   140011c3c:	mov    DWORD PTR [rsp+0x30],0x4
   140011c44:	mov    DWORD PTR [rsp+0x34],0x4
   140011c4c:	lea    rax,[rsp+0x34]
   140011c51:	mov    QWORD PTR [rsp+0x28],rax
   140011c56:	lea    rax,[rsp+0x48]
   140011c5b:	mov    QWORD PTR [rsp+0x20],rax
   140011c60:	lea    r9,[rsp+0x30]
   140011c65:	xor    r8d,r8d
   140011c68:	lea    rdx,[rip+0x54d79]        # 0x1400669e8
   140011c6f:	mov    rcx,QWORD PTR [rsp+0x38]
   140011c74:	call   QWORD PTR [rip+0x523d6]        # 0x140064050
   140011c7a:	test   eax,eax
   140011c7c:	jne    0x140011c89
   140011c7e:	mov    r14d,0x1
   140011c84:	mov    edi,r14d
   140011c87:	jmp    0x140011cd6
   140011c89:	mov    DWORD PTR [rsp+0x30],0x4
   140011c91:	mov    DWORD PTR [rsp+0x34],0x4
   140011c99:	lea    rax,[rsp+0x34]
   140011c9e:	mov    QWORD PTR [rsp+0x28],rax
   140011ca3:	lea    rax,[rsp+0x48]
   140011ca8:	mov    QWORD PTR [rsp+0x20],rax
   140011cad:	lea    r9,[rsp+0x30]
   140011cb2:	xor    r8d,r8d
   140011cb5:	lea    rdx,[rip+0x54cfc]        # 0x1400669b8
   140011cbc:	mov    rcx,QWORD PTR [rsp+0x38]
   140011cc1:	call   QWORD PTR [rip+0x52389]        # 0x140064050
   140011cc7:	mov    edi,r14d
   140011cca:	mov    r14d,0x1
   140011cd0:	test   eax,eax
   140011cd2:	cmove  edi,r14d
   140011cd6:	mov    rcx,QWORD PTR [rsp+0x38]
   140011cdb:	call   QWORD PTR [rip+0x52387]        # 0x140064068
   140011ce1:	test   edi,edi
   140011ce3:	je     0x140012207
   140011ce9:	mov    QWORD PTR [rsp+0x78],0x0
   140011cf2:	mov    DWORD PTR [rsp+0x6c],0x0
   140011cfa:	mov    r9d,0x6
   140011d00:	xor    r8d,r8d
   140011d03:	xor    edx,edx
   140011d05:	xor    ecx,ecx
   140011d07:	call   QWORD PTR [rip+0x52a13]        # 0x140064720
   140011d0d:	mov    r12,rax
   140011d10:	cmp    rax,0xffffffffffffffff
   140011d14:	jne    0x140011d61
   140011d16:	mov    rcx,rbp
   140011d19:	call   QWORD PTR [rip+0x52a19]        # 0x140064738
   140011d1f:	nop
   140011d20:	lea    rdx,[rbx-0x18]
   140011d24:	mov    eax,ebp
   140011d26:	lock xadd DWORD PTR [rdx+0x10],eax
   140011d2b:	add    eax,r12d
   140011d2e:	test   eax,eax
   140011d30:	jg     0x140011d3c
   140011d32:	mov    rcx,QWORD PTR [rdx]
   140011d35:	mov    rax,QWORD PTR [rcx]
   140011d38:	call   QWORD PTR [rax+0x8]
   140011d3b:	nop
   140011d3c:	mov    rdx,QWORD PTR [rsp+0x50]
   140011d41:	add    rdx,0xffffffffffffffe8
   140011d45:	lock xadd DWORD PTR [rdx+0x10],ebp
   140011d4a:	add    ebp,0xffffffff
   140011d4d:	test   ebp,ebp
   140011d4f:	jg     0x140011d5a
   140011d51:	mov    rcx,QWORD PTR [rdx]
   140011d54:	mov    rax,QWORD PTR [rcx]
   140011d57:	call   QWORD PTR [rax+0x8]
   140011d5a:	xor    eax,eax
   140011d5c:	jmp    0x140012243
   140011d61:	mov    DWORD PTR [rsp+0x90],0x20
   140011d6c:	mov    DWORD PTR [rsp+0x58],0x0
   140011d74:	lea    r8,[rsp+0x90]
   140011d7c:	xor    edx,edx
   140011d7e:	mov    rcx,rax
   140011d81:	call   QWORD PTR [rip+0x529a1]        # 0x140064728
   140011d87:	test   eax,eax
   140011d89:	je     0x140012150
   140011d8f:	nop
   140011d90:	lea    rax,[rsp+0x6c]
   140011d95:	mov    QWORD PTR [rsp+0x20],rax
   140011d9a:	lea    r9,[rsp+0x78]
   140011d9f:	mov    r8d,0x4
   140011da5:	lea    rdx,[rsp+0x90]
   140011dad:	mov    rcx,r12
   140011db0:	call   0x140001c30
   140011db5:	test   eax,eax
   140011db7:	je     0x140012113
   140011dbd:	mov    rdx,QWORD PTR [rsp+0x78]
   140011dc2:	test   rdx,rdx
   140011dc5:	jne    0x140011dcb
   140011dc7:	xor    ecx,ecx
   140011dc9:	jmp    0x140011ddd
   140011dcb:	xor    eax,eax
   140011dcd:	mov    rcx,rbp
   140011dd0:	mov    rdi,rdx
   140011dd3:	repnz scas ax,WORD PTR es:[rdi]
   140011dd6:	not    rcx
   140011dd9:	sub    rcx,0x1
   140011ddd:	mov    r8d,ecx
   140011de0:	lea    rcx,[rsp+0x40]
   140011de5:	call   0x1400037d0
   140011dea:	mov    rbx,QWORD PTR [rsp+0x40]
   140011def:	movsxd rdi,DWORD PTR [rbx-0x10]
   140011df3:	mov    ecx,r14d
   140011df6:	sub    ecx,DWORD PTR [rbx-0x8]
   140011df9:	mov    eax,DWORD PTR [rbx-0xc]
   140011dfc:	sub    eax,edi
   140011dfe:	or     eax,ecx
   140011e00:	jge    0x140011e13
   140011e02:	mov    edx,edi
   140011e04:	lea    rcx,[rsp+0x40]
   140011e09:	call   0x140002d40
   140011e0e:	mov    rbx,QWORD PTR [rsp+0x40]
   140011e13:	lea    eax,[rdi+0x1]
   140011e16:	movsxd rdx,eax
   140011e19:	mov    rcx,rbx
   140011e1c:	call   0x140046a70
   140011e21:	test   edi,edi
   140011e23:	js     0x140012145
   140011e29:	cmp    edi,DWORD PTR [rbx-0xc]
   140011e2c:	jg     0x140012145
   140011e32:	mov    DWORD PTR [rbx-0x10],edi
   140011e35:	mov    WORD PTR [rbx+rdi*2],0x0
   140011e3b:	test   r13b,0x1
   140011e3f:	je     0x140011e93
   140011e41:	cmp    DWORD PTR [rbx-0x10],0x0
   140011e45:	jl     0x140011e6a
   140011e47:	lea    rdx,[rip+0x5502a]        # 0x140066e78
   140011e4e:	mov    rcx,rbx
   140011e51:	call   0x140046660
   140011e56:	test   rax,rax
   140011e59:	je     0x140011e6a
   140011e5b:	sub    rax,rbx
   140011e5e:	sar    rax,1
   140011e61:	cmp    eax,0xffffffff
   140011e64:	jne    0x140011f9f
   140011e6a:	cmp    DWORD PTR [rbx-0x10],0x0
   140011e6e:	jl     0x140011e93
   140011e70:	lea    rdx,[rip+0x54fd9]        # 0x140066e50
   140011e77:	mov    rcx,rbx
   140011e7a:	call   0x140046660
   140011e7f:	test   rax,rax
   140011e82:	je     0x140011e93
   140011e84:	sub    rax,rbx
   140011e87:	sar    rax,1
   140011e8a:	cmp    eax,0xffffffff
   140011e8d:	jne    0x140011f9f
   140011e93:	test   r13b,0x4
   140011e97:	je     0x140011eeb
   140011e99:	cmp    DWORD PTR [rbx-0x10],0x0
   140011e9d:	jl     0x140011ec2
   140011e9f:	lea    rdx,[rip+0x54f92]        # 0x140066e38
   140011ea6:	mov    rcx,rbx
   140011ea9:	call   0x140046660
   140011eae:	test   rax,rax
   140011eb1:	je     0x140011ec2
   140011eb3:	sub    rax,rbx
   140011eb6:	sar    rax,1
   140011eb9:	cmp    eax,0xffffffff
   140011ebc:	jne    0x140011f9f
   140011ec2:	cmp    DWORD PTR [rbx-0x10],0x0
   140011ec6:	jl     0x140011eeb
   140011ec8:	lea    rdx,[rip+0x54f51]        # 0x140066e20
   140011ecf:	mov    rcx,rbx
   140011ed2:	call   0x140046660
   140011ed7:	test   rax,rax
   140011eda:	je     0x140011eeb
   140011edc:	sub    rax,rbx
   140011edf:	sar    rax,1
   140011ee2:	cmp    eax,0xffffffff
   140011ee5:	jne    0x140011f9f
   140011eeb:	test   r13b,0x2
   140011eef:	je     0x140011f1a
   140011ef1:	cmp    DWORD PTR [rbx-0x10],0x0
   140011ef5:	jl     0x140011f1a
   140011ef7:	lea    rdx,[rip+0x54d4a]        # 0x140066c48
   140011efe:	mov    rcx,rbx
   140011f01:	call   0x140046660
   140011f06:	test   rax,rax
   140011f09:	je     0x140011f1a
   140011f0b:	sub    rax,rbx
   140011f0e:	sar    rax,1
   140011f11:	cmp    eax,0xffffffff
   140011f14:	jne    0x140011f9f
   140011f1a:	test   r13b,0x8
   140011f1e:	je     0x140012113
   140011f24:	cmp    DWORD PTR [rbx-0x10],0x0
   140011f28:	jl     0x140011f49
   140011f2a:	lea    rdx,[rip+0x54ecf]        # 0x140066e00
   140011f31:	mov    rcx,rbx
   140011f34:	call   0x140046660
   140011f39:	test   rax,rax
   140011f3c:	je     0x140011f49
   140011f3e:	sub    rax,rbx
   140011f41:	sar    rax,1
   140011f44:	cmp    eax,0xffffffff
   140011f47:	jne    0x140011f9f
   140011f49:	cmp    DWORD PTR [rbx-0x10],0x0
   140011f4d:	jl     0x140011f6e
   140011f4f:	lea    rdx,[rip+0x54e9a]        # 0x140066df0
   140011f56:	mov    rcx,rbx
   140011f59:	call   0x140046660
   140011f5e:	test   rax,rax
   140011f61:	je     0x140011f6e
   140011f63:	sub    rax,rbx
   140011f66:	sar    rax,1
   140011f69:	cmp    eax,0xffffffff
   140011f6c:	jne    0x140011f9f
   140011f6e:	cmp    DWORD PTR [rbx-0x10],0x0
   140011f72:	jl     0x140012113
   140011f78:	lea    rdx,[rip+0x54e59]        # 0x140066dd8
   140011f7f:	mov    rcx,rbx
   140011f82:	call   0x140046660
   140011f87:	test   rax,rax
   140011f8a:	je     0x140012113
   140011f90:	sub    rax,rbx
   140011f93:	sar    rax,1
   140011f96:	cmp    eax,0xffffffff
   140011f99:	je     0x140012113
   140011f9f:	mov    DWORD PTR [rsp+0x28],0x20019
   140011fa7:	mov    DWORD PTR [rsp+0x20],0x2
   140011faf:	xor    r9d,r9d
   140011fb2:	mov    r8d,r14d
   140011fb5:	lea    rdx,[rsp+0x90]
   140011fbd:	mov    rcx,r12
   140011fc0:	call   QWORD PTR [rip+0x5271a]        # 0x1400646e0
   140011fc6:	mov    QWORD PTR [rsp+0x38],rax
   140011fcb:	cmp    rax,0xffffffffffffffff
   140011fcf:	je     0x140012113
   140011fd5:	mov    DWORD PTR [rsp+0x30],r14d
   140011fda:	mov    DWORD PTR [rsp+0x34],0x208
   140011fe2:	lea    rcx,[rsp+0x34]
   140011fe7:	mov    QWORD PTR [rsp+0x28],rcx
   140011fec:	lea    rcx,[rsp+0x2c0]
   140011ff4:	mov    QWORD PTR [rsp+0x20],rcx
   140011ff9:	lea    r9,[rsp+0x30]
   140011ffe:	xor    r8d,r8d
   140012001:	lea    rdx,[rip+0x53e80]        # 0x140065e88
   140012008:	mov    rcx,rax
   14001200b:	call   QWORD PTR [rip+0x5203f]        # 0x140064050
   140012011:	test   eax,eax
   140012013:	jne    0x140012113
   140012019:	mov    edx,0x104
   14001201e:	lea    rcx,[rsp+0xb0]
   140012026:	call   QWORD PTR [rip+0x525a4]        # 0x1400645d0
   14001202c:	lea    r8,[rip+0x54bdd]        # 0x140066c10
   140012033:	mov    edx,0x104
   140012038:	lea    rcx,[rsp+0xb0]
   140012040:	call   0x140047130
   140012045:	lea    r8,[rsp+0x2c0]
   14001204d:	mov    edx,0x104
   140012052:	lea    rcx,[rsp+0xb0]
   14001205a:	call   0x140047130
   14001205f:	lea    rdx,[rsp+0x60]
   140012064:	mov    QWORD PTR [rsp+0x88],rdx
   14001206c:	call   0x14002b874
   140012071:	mov    rcx,rax
   140012074:	xor    eax,eax
   140012076:	test   rcx,rcx
   140012079:	setne  al
   14001207c:	test   eax,eax
   14001207e:	je     0x14001213a
   140012084:	mov    rax,QWORD PTR [rcx]
   140012087:	call   QWORD PTR [rax+0x18]
   14001208a:	add    rax,0x18
   14001208e:	mov    QWORD PTR [rsp+0x60],rax
   140012093:	lea    rcx,[rsp+0xb0]
   14001209b:	lea    rax,[rsp+0xb0]
   1400120a3:	test   rax,0xffffffffffff0000
   1400120a9:	jne    0x1400120cc
   1400120ab:	movzx  edi,cx
   1400120ae:	mov    ecx,edi
   1400120b0:	call   0x14002b860
   1400120b5:	test   rax,rax
   1400120b8:	je     0x1400120f6
   1400120ba:	mov    r8d,edi
   1400120bd:	mov    rdx,rax
   1400120c0:	lea    rcx,[rsp+0x60]
   1400120c5:	call   0x140003650
   1400120ca:	jmp    0x1400120f6
   1400120cc:	xor    eax,eax
   1400120ce:	mov    rcx,rbp
   1400120d1:	lea    rdi,[rsp+0xb0]
   1400120d9:	repnz scas ax,WORD PTR es:[rdi]
   1400120dc:	not    rcx
   1400120df:	lea    r8d,[rcx-0x1]
   1400120e3:	lea    rdx,[rsp+0xb0]
   1400120eb:	lea    rcx,[rsp+0x60]
   1400120f0:	call   0x1400037d0
   1400120f5:	nop
   1400120f6:	lea    rcx,[rsp+0x60]
   1400120fb:	call   0x14000d520
   140012100:	test   eax,eax
   140012102:	je     0x140012108
   140012104:	add    r15d,0x1
   140012108:	mov    rcx,QWORD PTR [rsp+0x38]
   14001210d:	call   QWORD PTR [rip+0x51f55]        # 0x140064068
   140012113:	mov    eax,DWORD PTR [rsp+0x58]
   140012117:	add    eax,0x1
   14001211a:	mov    DWORD PTR [rsp+0x58],eax
   14001211e:	lea    r8,[rsp+0x90]
   140012126:	mov    edx,eax
   140012128:	mov    rcx,r12
   14001212b:	call   QWORD PTR [rip+0x525f7]        # 0x140064728
   140012131:	test   eax,eax
   140012133:	je     0x140012150
   140012135:	jmp    0x140011d90
   14001213a:	mov    ecx,0x80004005
   14001213f:	call   0x140001430
   140012144:	int3   
   140012145:	mov    ecx,0x80070057
   14001214a:	call   0x140001430
   14001214f:	int3   
   140012150:	mov    rcx,r12
   140012153:	call   QWORD PTR [rip+0x525df]        # 0x140064738
   140012159:	cmp    DWORD PTR [rsp+0x68],0x0
   14001215e:	je     0x1400121c8
   140012160:	test   r15d,r15d
   140012163:	jne    0x1400121c8
   140012165:	mov    eax,0xf013f
   14001216a:	mov    r9d,0xf023f
   140012170:	cmp    DWORD PTR [rsp+0x70],r15d
   140012175:	cmovne r9d,eax
   140012179:	lea    rax,[rsp+0x38]
   14001217e:	mov    QWORD PTR [rsp+0x20],rax
   140012183:	xor    r8d,r8d
   140012186:	mov    rdx,rsi
   140012189:	mov    ecx,0x80000002
   14001218e:	call   QWORD PTR [rip+0x51ec4]        # 0x140064058
   140012194:	test   eax,eax
   140012196:	jne    0x1400121c8
   140012198:	lea    rdx,[rip+0x54849]        # 0x1400669e8
   14001219f:	mov    rcx,QWORD PTR [rsp+0x38]
   1400121a4:	call   QWORD PTR [rip+0x51e6e]        # 0x140064018
   1400121aa:	lea    rdx,[rip+0x54807]        # 0x1400669b8
   1400121b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400121b6:	call   QWORD PTR [rip+0x51e5c]        # 0x140064018
   1400121bc:	mov    rcx,QWORD PTR [rsp+0x38]
   1400121c1:	call   QWORD PTR [rip+0x51ea1]        # 0x140064068
   1400121c7:	nop
   1400121c8:	lea    rdx,[rbx-0x18]
   1400121cc:	mov    eax,ebp
   1400121ce:	lock xadd DWORD PTR [rdx+0x10],eax
   1400121d3:	add    eax,0xffffffff
   1400121d6:	test   eax,eax
   1400121d8:	jg     0x1400121e4
   1400121da:	mov    rcx,QWORD PTR [rdx]
   1400121dd:	mov    rax,QWORD PTR [rcx]
   1400121e0:	call   QWORD PTR [rax+0x8]
   1400121e3:	nop
   1400121e4:	mov    rdx,QWORD PTR [rsp+0x50]
   1400121e9:	add    rdx,0xffffffffffffffe8
   1400121ed:	lock xadd DWORD PTR [rdx+0x10],ebp
   1400121f2:	add    ebp,0xffffffff
   1400121f5:	test   ebp,ebp
   1400121f7:	jg     0x140012202
   1400121f9:	mov    rcx,QWORD PTR [rdx]
   1400121fc:	mov    rax,QWORD PTR [rcx]
   1400121ff:	call   QWORD PTR [rax+0x8]
   140012202:	mov    eax,r15d
   140012205:	jmp    0x140012243
   140012207:	lea    rdx,[rbx-0x18]
   14001220b:	mov    eax,ebp
   14001220d:	lock xadd DWORD PTR [rdx+0x10],eax
   140012212:	add    eax,0xffffffff
   140012215:	test   eax,eax
   140012217:	jg     0x140012223
   140012219:	mov    rcx,QWORD PTR [rdx]
   14001221c:	mov    rax,QWORD PTR [rcx]
   14001221f:	call   QWORD PTR [rax+0x8]
   140012222:	nop
   140012223:	mov    rdx,QWORD PTR [rsp+0x50]
   140012228:	add    rdx,0xffffffffffffffe8
   14001222c:	lock xadd DWORD PTR [rdx+0x10],ebp
   140012231:	add    ebp,0xffffffff
   140012234:	test   ebp,ebp
   140012236:	jg     0x140012241
   140012238:	mov    rcx,QWORD PTR [rdx]
   14001223b:	mov    rax,QWORD PTR [rcx]
   14001223e:	call   QWORD PTR [rax+0x8]
   140012241:	xor    eax,eax
   140012243:	mov    rcx,QWORD PTR [rsp+0x4d0]
   14001224b:	xor    rcx,rsp
   14001224e:	call   0x140046470
   140012253:	lea    r11,[rsp+0x4e0]
   14001225b:	mov    rbx,QWORD PTR [r11+0x30]
   14001225f:	mov    rbp,QWORD PTR [r11+0x38]
   140012263:	mov    rsi,QWORD PTR [r11+0x40]
   140012267:	mov    rsp,r11
   14001226a:	pop    r15
   14001226c:	pop    r14
   14001226e:	pop    r13
   140012270:	pop    r12
   140012272:	pop    rdi
   140012273:	ret    
   140012274:	int3   
   140012275:	int3   
   140012276:	int3   
   140012277:	int3   
   140012278:	int3   
   140012279:	int3   
   14001227a:	int3   
   14001227b:	int3   
   14001227c:	int3   
   14001227d:	int3   
   14001227e:	int3   
   14001227f:	int3   
   140012280:	rex push rbp
   140012282:	sub    rsp,0x20
   140012286:	mov    rbp,rdx
   140012289:	lea    rcx,[rbp+0x50]
   14001228d:	call   0x1400010c0
   140012292:	add    rsp,0x20
   140012296:	pop    rbp
   140012297:	ret    
   140012298:	int3   
   140012299:	int3   
   14001229a:	int3   
   14001229b:	int3   
   14001229c:	int3   
   14001229d:	int3   
   14001229e:	int3   
   14001229f:	int3   
   1400122a0:	rex push rbp
   1400122a2:	sub    rsp,0x20
   1400122a6:	mov    rbp,rdx
   1400122a9:	lea    rcx,[rbp+0x40]
   1400122ad:	call   0x140001090
   1400122b2:	add    rsp,0x20
   1400122b6:	pop    rbp
   1400122b7:	ret    
   1400122b8:	int3   
   1400122b9:	int3   
   1400122ba:	int3   
   1400122bb:	int3   
   1400122bc:	int3   
   1400122bd:	int3   
   1400122be:	int3   
   1400122bf:	int3   
   1400122c0:	rex push rbp
   1400122c2:	sub    rsp,0x20
   1400122c6:	mov    rbp,rdx
   1400122c9:	lea    rcx,[rbp+0x40]
   1400122cd:	call   0x1400010c0
   1400122d2:	add    rsp,0x20
   1400122d6:	pop    rbp
   1400122d7:	ret    
   1400122d8:	int3   
   1400122d9:	int3   
   1400122da:	int3   
   1400122db:	int3   
   1400122dc:	int3   
   1400122dd:	int3   
   1400122de:	int3   
   1400122df:	int3   
   1400122e0:	rex push rbp
   1400122e2:	sub    rsp,0x20
   1400122e6:	mov    rbp,rdx
   1400122e9:	mov    rcx,QWORD PTR [rbp+0x88]
   1400122f0:	call   0x140001090
   1400122f5:	add    rsp,0x20
   1400122f9:	pop    rbp
   1400122fa:	ret    
   1400122fb:	int3   
   1400122fc:	int3   
   1400122fd:	int3   
   1400122fe:	int3   
   1400122ff:	int3   
   140012300:	rex push rdi
   140012302:	push   r12
   140012304:	push   r13
   140012306:	push   r14
   140012308:	push   r15
   14001230a:	mov    eax,0x1790
   14001230f:	call   0x140063500
   140012314:	sub    rsp,rax
   140012317:	mov    QWORD PTR [rsp+0xe0],0xfffffffffffffffe
   140012323:	mov    QWORD PTR [rsp+0x17c8],rbx
   14001232b:	mov    QWORD PTR [rsp+0x17d0],rbp
   140012333:	mov    QWORD PTR [rsp+0x17d8],rsi
   14001233b:	mov    rax,QWORD PTR [rip+0x74a2e]        # 0x140086d70
   140012342:	xor    rax,rsp
   140012345:	mov    QWORD PTR [rsp+0x1780],rax
   14001234d:	mov    rsi,rcx
   140012350:	mov    QWORD PTR [rsp+0x88],rcx
   140012358:	call   0x14002b874
   14001235d:	mov    rdx,rax
   140012360:	xor    r13d,r13d
   140012363:	mov    ecx,r13d
   140012366:	test   rax,rax
   140012369:	setne  cl
   14001236c:	test   ecx,ecx
   14001236e:	jne    0x14001237b
   140012370:	mov    ecx,0x80004005
   140012375:	call   0x140001430
   14001237a:	int3   
   14001237b:	mov    rax,QWORD PTR [rax]
   14001237e:	mov    rcx,rdx
   140012381:	call   QWORD PTR [rax+0x18]
   140012384:	add    rax,0x18
   140012388:	mov    QWORD PTR [rsp+0xa0],rax
   140012390:	lea    rdx,[rip+0x549b9]        # 0x140066d50
   140012397:	test   rdx,0xffffffffffff0000
   14001239e:	jne    0x1400123c4
   1400123a0:	movzx  edi,dx
   1400123a3:	mov    ecx,edi
   1400123a5:	call   0x14002b860
   1400123aa:	test   rax,rax
   1400123ad:	je     0x1400123d2
   1400123af:	mov    r8d,edi
   1400123b2:	mov    rdx,rax
   1400123b5:	lea    rcx,[rsp+0xa0]
   1400123bd:	call   0x140003650
   1400123c2:	jmp    0x1400123d2
   1400123c4:	lea    rcx,[rsp+0xa0]
   1400123cc:	call   0x140003930
   1400123d1:	nop
   1400123d2:	call   0x14002b874
   1400123d7:	mov    rdx,rax
   1400123da:	mov    ecx,r13d
   1400123dd:	test   rax,rax
   1400123e0:	setne  cl
   1400123e3:	test   ecx,ecx
   1400123e5:	jne    0x1400123f2
   1400123e7:	mov    ecx,0x80004005
   1400123ec:	call   0x140001430
   1400123f1:	int3   
   1400123f2:	mov    rax,QWORD PTR [rax]
   1400123f5:	mov    rcx,rdx
   1400123f8:	call   QWORD PTR [rax+0x18]
   1400123fb:	add    rax,0x18
   1400123ff:	mov    QWORD PTR [rsp+0x90],rax
   140012407:	lea    rdx,[rip+0x5492a]        # 0x140066d38
   14001240e:	test   rdx,0xffffffffffff0000
   140012415:	jne    0x14001243b
   140012417:	movzx  edi,dx
   14001241a:	mov    ecx,edi
   14001241c:	call   0x14002b860
   140012421:	test   rax,rax
   140012424:	je     0x140012449
   140012426:	mov    r8d,edi
   140012429:	mov    rdx,rax
   14001242c:	lea    rcx,[rsp+0x90]
   140012434:	call   0x140003650
   140012439:	jmp    0x140012449
   14001243b:	lea    rcx,[rsp+0x90]
   140012443:	call   0x140003930
   140012448:	nop
   140012449:	call   0x14002b874
   14001244e:	mov    rdx,rax
   140012451:	mov    ecx,r13d
   140012454:	test   rax,rax
   140012457:	setne  cl
   14001245a:	test   ecx,ecx
   14001245c:	jne    0x140012469
   14001245e:	mov    ecx,0x80004005
   140012463:	call   0x140001430
   140012468:	int3   
   140012469:	mov    rax,QWORD PTR [rax]
   14001246c:	mov    rcx,rdx
   14001246f:	call   QWORD PTR [rax+0x18]
   140012472:	add    rax,0x18
   140012476:	mov    QWORD PTR [rsp+0x80],rax
   14001247e:	lea    rdx,[rip+0x5489b]        # 0x140066d20
   140012485:	test   rdx,0xffffffffffff0000
   14001248c:	jne    0x1400124b2
   14001248e:	movzx  edi,dx
   140012491:	mov    ecx,edi
   140012493:	call   0x14002b860
   140012498:	test   rax,rax
   14001249b:	je     0x1400124c0
   14001249d:	mov    r8d,edi
   1400124a0:	mov    rdx,rax
   1400124a3:	lea    rcx,[rsp+0x80]
   1400124ab:	call   0x140003650
   1400124b0:	jmp    0x1400124c0
   1400124b2:	lea    rcx,[rsp+0x80]
   1400124ba:	call   0x140003930
   1400124bf:	nop
   1400124c0:	call   0x14002b874
   1400124c5:	mov    rdx,rax
   1400124c8:	mov    ecx,r13d
   1400124cb:	test   rax,rax
   1400124ce:	setne  cl
   1400124d1:	test   ecx,ecx
   1400124d3:	jne    0x1400124e0
   1400124d5:	mov    ecx,0x80004005
   1400124da:	call   0x140001430
   1400124df:	int3   
   1400124e0:	mov    rax,QWORD PTR [rax]
   1400124e3:	mov    rcx,rdx
   1400124e6:	call   QWORD PTR [rax+0x18]
   1400124e9:	add    rax,0x18
   1400124ed:	mov    QWORD PTR [rsp+0x70],rax
   1400124f2:	lea    rdx,[rip+0x5480f]        # 0x140066d08
   1400124f9:	test   rdx,0xffffffffffff0000
   140012500:	jne    0x140012523
   140012502:	movzx  edi,dx
   140012505:	mov    ecx,edi
   140012507:	call   0x14002b860
   14001250c:	test   rax,rax
   14001250f:	je     0x14001252e
   140012511:	mov    r8d,edi
   140012514:	mov    rdx,rax
   140012517:	lea    rcx,[rsp+0x70]
   14001251c:	call   0x140003650
   140012521:	jmp    0x14001252e
   140012523:	lea    rcx,[rsp+0x70]
   140012528:	call   0x140003930
   14001252d:	nop
   14001252e:	call   0x14002b874
   140012533:	mov    rdx,rax
   140012536:	mov    ecx,r13d
   140012539:	test   rax,rax
   14001253c:	setne  cl
   14001253f:	test   ecx,ecx
   140012541:	jne    0x14001254e
   140012543:	mov    ecx,0x80004005
   140012548:	call   0x140001430
   14001254d:	int3   
   14001254e:	mov    rax,QWORD PTR [rax]
   140012551:	mov    rcx,rdx
   140012554:	call   QWORD PTR [rax+0x18]
   140012557:	add    rax,0x18
   14001255b:	mov    QWORD PTR [rsp+0x60],rax
   140012560:	lea    rdx,[rip+0x54789]        # 0x140066cf0
   140012567:	test   rdx,0xffffffffffff0000
   14001256e:	jne    0x140012591
   140012570:	movzx  edi,dx
   140012573:	mov    ecx,edi
   140012575:	call   0x14002b860
   14001257a:	test   rax,rax
   14001257d:	je     0x14001259c
   14001257f:	mov    r8d,edi
   140012582:	mov    rdx,rax
   140012585:	lea    rcx,[rsp+0x60]
   14001258a:	call   0x140003650
   14001258f:	jmp    0x14001259c
   140012591:	lea    rcx,[rsp+0x60]
   140012596:	call   0x140003930
   14001259b:	nop
   14001259c:	call   0x14002b874
   1400125a1:	mov    rdx,rax
   1400125a4:	mov    ecx,r13d
   1400125a7:	test   rax,rax
   1400125aa:	setne  cl
   1400125ad:	test   ecx,ecx
   1400125af:	jne    0x1400125bc
   1400125b1:	mov    ecx,0x80004005
   1400125b6:	call   0x140001430
   1400125bb:	int3   
   1400125bc:	mov    rax,QWORD PTR [rax]
   1400125bf:	mov    rcx,rdx
   1400125c2:	call   QWORD PTR [rax+0x18]
   1400125c5:	add    rax,0x18
   1400125c9:	mov    QWORD PTR [rsp+0x58],rax
   1400125ce:	lea    rdx,[rip+0x54703]        # 0x140066cd8
   1400125d5:	test   rdx,0xffffffffffff0000
   1400125dc:	jne    0x1400125ff
   1400125de:	movzx  edi,dx
   1400125e1:	mov    ecx,edi
   1400125e3:	call   0x14002b860
   1400125e8:	test   rax,rax
   1400125eb:	je     0x14001260a
   1400125ed:	mov    r8d,edi
   1400125f0:	mov    rdx,rax
   1400125f3:	lea    rcx,[rsp+0x58]
   1400125f8:	call   0x140003650
   1400125fd:	jmp    0x14001260a
   1400125ff:	lea    rcx,[rsp+0x58]
   140012604:	call   0x140003930
   140012609:	nop
   14001260a:	call   0x14002b874
   14001260f:	mov    rdx,rax
   140012612:	mov    ecx,r13d
   140012615:	test   rax,rax
   140012618:	setne  cl
   14001261b:	test   ecx,ecx
   14001261d:	jne    0x14001262a
   14001261f:	mov    ecx,0x80004005
   140012624:	call   0x140001430
   140012629:	int3   
   14001262a:	mov    rax,QWORD PTR [rax]
   14001262d:	mov    rcx,rdx
   140012630:	call   QWORD PTR [rax+0x18]
   140012633:	add    rax,0x18
   140012637:	mov    QWORD PTR [rsp+0x78],rax
   14001263c:	lea    rdx,[rip+0x5467d]        # 0x140066cc0
   140012643:	test   rdx,0xffffffffffff0000
   14001264a:	jne    0x14001266d
   14001264c:	movzx  edi,dx
   14001264f:	mov    ecx,edi
   140012651:	call   0x14002b860
   140012656:	test   rax,rax
   140012659:	je     0x140012678
   14001265b:	mov    r8d,edi
   14001265e:	mov    rdx,rax
   140012661:	lea    rcx,[rsp+0x78]
   140012666:	call   0x140003650
   14001266b:	jmp    0x140012678
   14001266d:	lea    rcx,[rsp+0x78]
   140012672:	call   0x140003930
   140012677:	nop
   140012678:	mov    WORD PTR [rsp+0x580],0x0
   140012682:	xor    edx,edx
   140012684:	mov    r8d,0x3fe
   14001268a:	lea    rcx,[rsp+0x582]
   140012692:	call   0x140047720
   140012697:	mov    WORD PTR [rsp+0x1380],0x0
   1400126a1:	xor    edx,edx
   1400126a3:	mov    r8d,0x3fe
   1400126a9:	lea    rcx,[rsp+0x1382]
   1400126b1:	call   0x140047720
   1400126b6:	call   0x14002b874
   1400126bb:	mov    rdx,rax
   1400126be:	mov    ecx,r13d
   1400126c1:	test   rax,rax
   1400126c4:	setne  cl
   1400126c7:	test   ecx,ecx
   1400126c9:	jne    0x1400126d6
   1400126cb:	mov    ecx,0x80004005
   1400126d0:	call   0x140001430
   1400126d5:	int3   
   1400126d6:	mov    rax,QWORD PTR [rax]
   1400126d9:	mov    rcx,rdx
   1400126dc:	call   QWORD PTR [rax+0x18]
   1400126df:	add    rax,0x18
   1400126e3:	mov    QWORD PTR [rsp+0xa8],rax
   1400126eb:	lea    rbx,[rip+0x52dde]        # 0x1400654d0
   1400126f2:	mov    rdi,rbx
   1400126f5:	shr    rdi,0x10
   1400126f9:	jne    0x140012726
   1400126fb:	movzx  ebx,bx
   1400126fe:	mov    ecx,ebx
   140012700:	call   0x14002b860
   140012705:	test   rax,rax
   140012708:	je     0x140012738
   14001270a:	mov    r8d,ebx
   14001270d:	mov    rdx,rax
   140012710:	lea    rcx,[rsp+0xa8]
   140012718:	call   0x140003650
   14001271d:	lea    rbx,[rip+0x52dac]        # 0x1400654d0
   140012724:	jmp    0x14001273f
   140012726:	mov    rdx,rbx
   140012729:	lea    rcx,[rsp+0xa8]
   140012731:	call   0x140003930
   140012736:	jmp    0x14001273f
   140012738:	lea    rbx,[rip+0x52d91]        # 0x1400654d0
   14001273f:	mov    DWORD PTR [rsp+0x68],r13d
   140012744:	mov    ebp,r13d
   140012747:	mov    DWORD PTR [rsp+0x38],r13d
   14001274c:	mov    r12d,r13d
   14001274f:	call   0x14002b874
   140012754:	mov    rdx,rax
   140012757:	mov    ecx,r13d
   14001275a:	test   rax,rax
   14001275d:	setne  cl
   140012760:	test   ecx,ecx
   140012762:	jne    0x14001276f
   140012764:	mov    ecx,0x80004005
   140012769:	call   0x140001430
   14001276e:	int3   
   14001276f:	mov    rax,QWORD PTR [rax]
   140012772:	mov    rcx,rdx
   140012775:	call   QWORD PTR [rax+0x18]
   140012778:	add    rax,0x18
   14001277c:	mov    QWORD PTR [rsp+0x30],rax
   140012781:	call   0x14002b874
   140012786:	mov    r11,rax
   140012789:	mov    ecx,r13d
   14001278c:	test   rax,rax
   14001278f:	setne  cl
   140012792:	test   ecx,ecx
   140012794:	jne    0x1400127a1
   140012796:	mov    ecx,0x80004005
   14001279b:	call   0x140001430
   1400127a0:	int3   
   1400127a1:	mov    rax,QWORD PTR [rax]
   1400127a4:	mov    rcx,r11
   1400127a7:	call   QWORD PTR [rax+0x18]
   1400127aa:	add    rax,0x18
   1400127ae:	mov    QWORD PTR [rsp+0x48],rax
   1400127b3:	test   rdi,rdi
   1400127b6:	jne    0x1400127d9
   1400127b8:	movzx  edi,bx
   1400127bb:	mov    ecx,edi
   1400127bd:	call   0x14002b860
   1400127c2:	test   rax,rax
   1400127c5:	je     0x1400127e7
   1400127c7:	mov    r8d,edi
   1400127ca:	mov    rdx,rax
   1400127cd:	lea    rcx,[rsp+0x48]
   1400127d2:	call   0x140003650
   1400127d7:	jmp    0x1400127e7
   1400127d9:	mov    rdx,rbx
   1400127dc:	lea    rcx,[rsp+0x48]
   1400127e1:	call   0x140003930
   1400127e6:	nop
   1400127e7:	lea    rdx,[rsp+0xc8]
   1400127ef:	mov    rcx,rsi
   1400127f2:	call   0x14000b810
   1400127f7:	nop
   1400127f8:	lea    r8,[rip+0x53111]        # 0x140065910
   1400127ff:	mov    rdx,rax
   140012802:	lea    rcx,[rsp+0xd8]
   14001280a:	call   0x140003f80
   14001280f:	mov    r8,QWORD PTR [rax]
   140012812:	mov    edx,0x200
   140012817:	lea    rcx,[rsp+0xd80]
   14001281f:	call   0x140047080
   140012824:	mov    rdx,QWORD PTR [rsp+0xd8]
   14001282c:	add    rdx,0xffffffffffffffe8
   140012830:	or     r14,0xffffffffffffffff
   140012834:	mov    eax,r14d
   140012837:	lock xadd DWORD PTR [rdx+0x10],eax
   14001283c:	add    eax,r14d
   14001283f:	test   eax,eax
   140012841:	jg     0x14001284d
   140012843:	mov    rcx,QWORD PTR [rdx]
   140012846:	mov    rax,QWORD PTR [rcx]
   140012849:	call   QWORD PTR [rax+0x8]
   14001284c:	nop
   14001284d:	mov    rdx,QWORD PTR [rsp+0xc8]
   140012855:	add    rdx,0xffffffffffffffe8
   140012859:	mov    eax,r14d
   14001285c:	lock xadd DWORD PTR [rdx+0x10],eax
   140012861:	add    eax,0xffffffff
   140012864:	test   eax,eax
   140012866:	jg     0x140012871
   140012868:	mov    rcx,QWORD PTR [rdx]
   14001286b:	mov    rax,QWORD PTR [rcx]
   14001286e:	call   QWORD PTR [rax+0x8]
   140012871:	xor    edx,edx
   140012873:	mov    r8d,0x250
   140012879:	lea    rcx,[rsp+0x120]
   140012881:	call   0x140047720
   140012886:	lea    r8,[rsp+0xd80]
   14001288e:	mov    edx,0x200
   140012893:	lea    rcx,[rsp+0x580]
   14001289b:	call   0x140047080
   1400128a0:	mov    r8,QWORD PTR [rip+0x762d1]        # 0x140088b78
   1400128a7:	mov    edx,0x200
   1400128ac:	lea    rcx,[rsp+0x580]
   1400128b4:	call   0x140047130
   1400128b9:	lea    r8,[rip+0x54678]        # 0x140066f38
   1400128c0:	mov    edx,0x200
   1400128c5:	lea    rcx,[rsp+0x580]
   1400128cd:	call   0x140047130
   1400128d2:	lea    rdx,[rsp+0x120]
   1400128da:	lea    rcx,[rsp+0x580]
   1400128e2:	call   QWORD PTR [rip+0x51c40]        # 0x140064528
   1400128e8:	cmp    rax,0xffffffffffffffff
   1400128ec:	je     0x14001363f
   1400128f2:	mov    rcx,rax
   1400128f5:	call   QWORD PTR [rip+0x51c3d]        # 0x140064538
   1400128fb:	mov    r9d,0x6
   140012901:	xor    r8d,r8d
   140012904:	lea    rdx,[rip+0x5461d]        # 0x140066f28
   14001290b:	xor    ecx,ecx
   14001290d:	call   QWORD PTR [rip+0x51e0d]        # 0x140064720
   140012913:	mov    QWORD PTR [rsp+0x50],rax
   140012918:	mov    DWORD PTR [rsp+0xf8],0x20
   140012923:	mov    DWORD PTR [rsp+0x98],r13d
   14001292b:	lea    r8,[rsp+0xf8]
   140012933:	xor    edx,edx
   140012935:	mov    rcx,rax
   140012938:	call   QWORD PTR [rip+0x51dea]        # 0x140064728
   14001293e:	mov    r15d,0xa
   140012944:	test   eax,eax
   140012946:	je     0x140013495
   14001294c:	lea    edi,[r15-0x5]
   140012950:	mov    rbx,QWORD PTR [rsp+0x30]
   140012955:	mov    QWORD PTR [rsp+0x20],r13
   14001295a:	mov    r9d,0x100
   140012960:	lea    r8,[rsp+0x980]
   140012968:	lea    rdx,[rsp+0xf8]
   140012970:	mov    rcx,QWORD PTR [rsp+0x50]
   140012975:	call   QWORD PTR [rip+0x51db5]        # 0x140064730
   14001297b:	mov    edx,r13d
   14001297e:	mov    eax,DWORD PTR [rip+0x75e74]        # 0x1400887f8
   140012984:	cmp    eax,0x5a
   140012987:	cmovl  edx,edi
   14001298a:	add    eax,edx
   14001298c:	mov    DWORD PTR [rip+0x75e66],eax        # 0x1400887f8
   140012992:	movsxd r8,eax
   140012995:	xor    r9d,r9d
   140012998:	mov    edx,0x402
   14001299d:	mov    rcx,QWORD PTR [rsi+0xeb180]
   1400129a4:	call   QWORD PTR [rip+0x521c6]        # 0x140064b70
   1400129aa:	xor    edx,edx
   1400129ac:	mov    rcx,rsi
   1400129af:	call   0x1400018d0
   1400129b4:	mov    rdx,QWORD PTR [rsp+0xa0]
   1400129bc:	lea    rcx,[rsp+0x980]
   1400129c4:	call   0x140046660
   1400129c9:	test   rax,rax
   1400129cc:	jne    0x140012a66
   1400129d2:	mov    rdx,QWORD PTR [rsp+0x90]
   1400129da:	lea    rcx,[rsp+0x980]
   1400129e2:	call   0x140046660
   1400129e7:	test   rax,rax
   1400129ea:	jne    0x140012a66
   1400129ec:	mov    rdx,QWORD PTR [rsp+0x80]
   1400129f4:	lea    rcx,[rsp+0x980]
   1400129fc:	call   0x140046660
   140012a01:	test   rax,rax
   140012a04:	jne    0x140012a66
   140012a06:	mov    rdx,QWORD PTR [rsp+0x70]
   140012a0b:	lea    rcx,[rsp+0x980]
   140012a13:	call   0x140046660
   140012a18:	test   rax,rax
   140012a1b:	jne    0x140012a66
   140012a1d:	mov    rdx,QWORD PTR [rsp+0x60]
   140012a22:	lea    rcx,[rsp+0x980]
   140012a2a:	call   0x140046660
   140012a2f:	test   rax,rax
   140012a32:	jne    0x140012a66
   140012a34:	mov    rdx,QWORD PTR [rsp+0x58]
   140012a39:	lea    rcx,[rsp+0x980]
   140012a41:	call   0x140046660
   140012a46:	test   rax,rax
   140012a49:	jne    0x140012a66
   140012a4b:	mov    rdx,QWORD PTR [rsp+0x78]
   140012a50:	lea    rcx,[rsp+0x980]
   140012a58:	call   0x140046660
   140012a5d:	test   rax,rax
   140012a60:	je     0x14001343a
   140012a66:	lea    r8,[rsp+0x980]
   140012a6e:	mov    edx,0x100
   140012a73:	lea    rcx,[rsp+0xb80]
   140012a7b:	call   0x140047080
   140012a80:	lea    r8,[rsp+0x980]
   140012a88:	mov    edx,0x100
   140012a8d:	lea    rcx,[rsp+0x1180]
   140012a95:	call   0x140047080
   140012a9a:	mov    WORD PTR [rsp+0x11f4],0x0
   140012aa4:	add    r12d,0x1
   140012aa8:	mov    DWORD PTR [rsp+0x3c],r12d
   140012aad:	mov    edi,r13d
   140012ab0:	mov    DWORD PTR [rsp+0x40],r13d
   140012ab5:	mov    eax,r13d
   140012ab8:	mov    ecx,DWORD PTR [rip+0x75d3a]        # 0x1400887f8
   140012abe:	cmp    ecx,0x5a
   140012ac1:	cmovl  eax,r15d
   140012ac5:	add    ecx,eax
   140012ac7:	mov    DWORD PTR [rip+0x75d2b],ecx        # 0x1400887f8
   140012acd:	movsxd r8,ecx
   140012ad0:	xor    r9d,r9d
   140012ad3:	mov    edx,0x402
   140012ad8:	mov    rcx,QWORD PTR [rsi+0xeb180]
   140012adf:	call   QWORD PTR [rip+0x5208b]        # 0x140064b70
   140012ae5:	xor    edx,edx
   140012ae7:	mov    rcx,rsi
   140012aea:	call   0x1400018d0
   140012aef:	mov    WORD PTR [rsp+0xbe2],di
   140012af7:	xor    edx,edx
   140012af9:	mov    r8d,0x250
   140012aff:	lea    rcx,[rsp+0x120]
   140012b07:	call   0x140047720
   140012b0c:	lea    r8,[rsp+0xd80]
   140012b14:	mov    edx,0x200
   140012b19:	lea    rcx,[rsp+0x580]
   140012b21:	call   0x140047080
   140012b26:	mov    r8,QWORD PTR [rip+0x7604b]        # 0x140088b78
   140012b2d:	mov    edx,0x200
   140012b32:	lea    rcx,[rsp+0x580]
   140012b3a:	call   0x140047130
   140012b3f:	lea    r8,[rip+0x543f2]        # 0x140066f38
   140012b46:	mov    edx,0x200
   140012b4b:	lea    rcx,[rsp+0x580]
   140012b53:	call   0x140047130
   140012b58:	lea    rdx,[rsp+0x120]
   140012b60:	lea    rcx,[rsp+0x580]
   140012b68:	call   QWORD PTR [rip+0x519ba]        # 0x140064528
   140012b6e:	mov    r15,rax
   140012b71:	cmp    rax,0xffffffffffffffff
   140012b75:	je     0x140012e55
   140012b7b:	xchg   ax,ax
   140012b7d:	data16 xchg ax,ax
   140012b80:	lea    r8,[rsp+0xd80]
   140012b88:	mov    edx,0x200
   140012b8d:	lea    rcx,[rsp+0x580]
   140012b95:	call   0x140047080
   140012b9a:	lea    r8,[rsp+0x14c]
   140012ba2:	mov    edx,0x200
   140012ba7:	lea    rcx,[rsp+0x580]
   140012baf:	call   0x140047130
   140012bb4:	xor    r9d,r9d
   140012bb7:	xor    edx,edx
   140012bb9:	lea    r8d,[r9+0x2]
   140012bbd:	lea    rcx,[rsp+0x580]
   140012bc5:	call   QWORD PTR [rip+0x51af5]        # 0x1400646c0
   140012bcb:	mov    r12,rax
   140012bce:	cmp    rax,0xffffffffffffffff
   140012bd2:	je     0x140012e38
   140012bd8:	lea    r9,[rsp+0xb0]
   140012be0:	xor    r8d,r8d
   140012be3:	lea    rdx,[rip+0x53bce]        # 0x1400667b8
   140012bea:	mov    rcx,rax
   140012bed:	call   QWORD PTR [rip+0x51b05]        # 0x1400646f8
   140012bf3:	test   eax,eax
   140012bf5:	je     0x140012e2f
   140012bfb:	mov    QWORD PTR [rsp+0x20],r13
   140012c00:	mov    r9d,0x104
   140012c06:	lea    r8,[rsp+0x370]
   140012c0e:	mov    edx,0x1
   140012c13:	lea    rcx,[rsp+0xb0]
   140012c1b:	call   QWORD PTR [rip+0x51acf]        # 0x1400646f0
   140012c21:	test   eax,eax
   140012c23:	je     0x140012e2f
   140012c29:	lea    rax,[rsp+0xb0]
   140012c31:	mov    QWORD PTR [rsp+0x20],rax
   140012c36:	xor    r9d,r9d
   140012c39:	lea    r8,[rsp+0x370]
   140012c41:	mov    rdx,r12
   140012c44:	mov    rcx,rsi
   140012c47:	call   0x140002340
   140012c4c:	test   eax,eax
   140012c4e:	jne    0x140012c5e
   140012c50:	mov    rcx,r12
   140012c53:	call   QWORD PTR [rip+0x51a6f]        # 0x1400646c8
   140012c59:	jmp    0x140012e3c
   140012c5e:	lea    r9,[rsp+0xb0]
   140012c66:	xor    r8d,r8d
   140012c69:	lea    rdx,[rsp+0x370]
   140012c71:	mov    rcx,r12
   140012c74:	call   QWORD PTR [rip+0x51a7e]        # 0x1400646f8
   140012c7a:	test   eax,eax
   140012c7c:	je     0x140012e2f
   140012c82:	mov    QWORD PTR [rsp+0x20],r13
   140012c87:	mov    r9d,0x104
   140012c8d:	lea    r8,[rsp+0x370]
   140012c95:	mov    edx,0x2
   140012c9a:	lea    rcx,[rsp+0xb0]
   140012ca2:	call   QWORD PTR [rip+0x51a48]        # 0x1400646f0
   140012ca8:	test   eax,eax
   140012caa:	je     0x140012dd7
   140012cb0:	xor    eax,eax
   140012cb2:	mov    rcx,r14
   140012cb5:	lea    rdi,[rsp+0x370]
   140012cbd:	repnz scas ax,WORD PTR es:[rdi]
   140012cc0:	not    rcx
   140012cc3:	sub    rcx,0x1
   140012cc7:	mov    rdi,rcx
   140012cca:	test   ecx,ecx
   140012ccc:	jne    0x140012d27
   140012cce:	lea    rdx,[rbx-0x18]
   140012cd2:	mov    rdi,QWORD PTR [rdx]
   140012cd5:	cmp    DWORD PTR [rdx+0x8],eax
   140012cd8:	je     0x140012db1
   140012cde:	cmp    DWORD PTR [rdx+0x10],eax
   140012ce1:	jge    0x140012cf8
   140012ce3:	cmp    DWORD PTR [rbx-0xc],eax
   140012ce6:	jl     0x140013469
   140012cec:	mov    DWORD PTR [rbx-0x10],r13d
   140012cf0:	mov    WORD PTR [rbx],ax
   140012cf3:	jmp    0x140012db1
   140012cf8:	mov    eax,r14d
   140012cfb:	lock xadd DWORD PTR [rdx+0x10],eax
   140012d00:	add    eax,0xffffffff
   140012d03:	test   eax,eax
   140012d05:	jg     0x140012d10
   140012d07:	mov    rcx,QWORD PTR [rdx]
   140012d0a:	mov    rax,QWORD PTR [rcx]
   140012d0d:	call   QWORD PTR [rax+0x8]
   140012d10:	mov    rax,QWORD PTR [rdi]
   140012d13:	mov    rcx,rdi
   140012d16:	call   QWORD PTR [rax+0x18]
   140012d19:	lea    rbx,[rax+0x18]
   140012d1d:	mov    QWORD PTR [rsp+0x30],rbx
   140012d22:	jmp    0x140012db1
   140012d27:	mov    esi,DWORD PTR [rbx-0x10]
   140012d2a:	lea    rbp,[rsp+0x370]
   140012d32:	sub    rbp,rbx
   140012d35:	sar    rbp,1
   140012d38:	mov    ecx,0x1
   140012d3d:	sub    ecx,DWORD PTR [rbx-0x8]
   140012d40:	mov    eax,DWORD PTR [rbx-0xc]
   140012d43:	sub    eax,edi
   140012d45:	or     eax,ecx
   140012d47:	jge    0x140012d5a
   140012d49:	mov    edx,edi
   140012d4b:	lea    rcx,[rsp+0x30]
   140012d50:	call   0x140002d40
   140012d55:	mov    rbx,QWORD PTR [rsp+0x30]
   140012d5a:	cmp    rbp,rsi
   140012d5d:	ja     0x140012d7a
   140012d5f:	movsxd rax,edi
   140012d62:	lea    rsi,[rax+rax*1]
   140012d66:	lea    r8,[rbx+rbp*2]
   140012d6a:	mov    r9,rsi
   140012d6d:	mov    rdx,rsi
   140012d70:	mov    rcx,rbx
   140012d73:	call   0x1400467a0
   140012d78:	jmp    0x140012d97
   140012d7a:	movsxd rax,edi
   140012d7d:	lea    rsi,[rax+rax*1]
   140012d81:	mov    r9,rsi
   140012d84:	lea    r8,[rsp+0x370]
   140012d8c:	mov    rdx,rsi
   140012d8f:	mov    rcx,rbx
   140012d92:	call   0x1400466d0
   140012d97:	test   edi,edi
   140012d99:	js     0x140013474
   140012d9f:	cmp    edi,DWORD PTR [rbx-0xc]
   140012da2:	jg     0x140013474
   140012da8:	mov    DWORD PTR [rbx-0x10],edi
   140012dab:	mov    WORD PTR [rsi+rbx*1],0x0
   140012db1:	cmp    DWORD PTR [rbx-0x10],0x0
   140012db5:	jl     0x140012dd7
   140012db7:	lea    rdx,[rsp+0xb80]
   140012dbf:	mov    rcx,rbx
   140012dc2:	call   0x140046660
   140012dc7:	test   rax,rax
   140012dca:	je     0x140012dd7
   140012dcc:	sub    rax,rbx
   140012dcf:	sar    rax,1
   140012dd2:	cmp    eax,0xffffffff
   140012dd5:	jne    0x140012df6
   140012dd7:	lea    rdx,[rsp+0xb0]
   140012ddf:	lea    rcx,[rsp+0xb0]
   140012de7:	call   QWORD PTR [rip+0x518eb]        # 0x1400646d8
   140012ded:	test   eax,eax
   140012def:	je     0x140012e23
   140012df1:	jmp    0x140012c82
   140012df6:	lea    r8,[rsp+0x580]
   140012dfe:	mov    edx,0x200
   140012e03:	lea    rcx,[rsp+0x1380]
   140012e0b:	call   0x140047080
   140012e10:	mov    edi,0x1
   140012e15:	mov    DWORD PTR [rsp+0x40],edi
   140012e19:	mov    rsi,QWORD PTR [rsp+0x88]
   140012e21:	jmp    0x140012e2f
   140012e23:	mov    edi,DWORD PTR [rsp+0x40]
   140012e27:	mov    rsi,QWORD PTR [rsp+0x88]
   140012e2f:	mov    rcx,r12
   140012e32:	call   QWORD PTR [rip+0x51890]        # 0x1400646c8
   140012e38:	test   edi,edi
   140012e3a:	jne    0x140012e55
   140012e3c:	lea    rdx,[rsp+0x120]
   140012e44:	mov    rcx,r15
   140012e47:	call   QWORD PTR [rip+0x516e3]        # 0x140064530
   140012e4d:	test   eax,eax
   140012e4f:	jne    0x140012b80
   140012e55:	mov    rcx,r15
   140012e58:	call   QWORD PTR [rip+0x516da]        # 0x140064538
   140012e5e:	test   edi,edi
   140012e60:	jne    0x1400131fd
   140012e66:	mov    WORD PTR [rsp+0xbc2],di
   140012e6e:	xor    edx,edx
   140012e70:	mov    r8d,0x250
   140012e76:	lea    rcx,[rsp+0x120]
   140012e7e:	call   0x140047720
   140012e83:	lea    r8,[rsp+0xd80]
   140012e8b:	mov    edx,0x200
   140012e90:	lea    rcx,[rsp+0x580]
   140012e98:	call   0x140047080
   140012e9d:	mov    r8,QWORD PTR [rip+0x75cd4]        # 0x140088b78
   140012ea4:	mov    edx,0x200
   140012ea9:	lea    rcx,[rsp+0x580]
   140012eb1:	call   0x140047130
   140012eb6:	lea    r8,[rip+0x5407b]        # 0x140066f38
   140012ebd:	mov    edx,0x200
   140012ec2:	lea    rcx,[rsp+0x580]
   140012eca:	call   0x140047130
   140012ecf:	lea    rdx,[rsp+0x120]
   140012ed7:	lea    rcx,[rsp+0x580]
   140012edf:	call   QWORD PTR [rip+0x51643]        # 0x140064528
   140012ee5:	mov    r15,rax
   140012ee8:	cmp    rax,0xffffffffffffffff
   140012eec:	je     0x1400131e4
   140012ef2:	lea    r8,[rsp+0xd80]
   140012efa:	mov    edx,0x200
   140012eff:	lea    rcx,[rsp+0x580]
   140012f07:	call   0x140047080
   140012f0c:	lea    r8,[rsp+0x14c]
   140012f14:	mov    edx,0x200
   140012f19:	lea    rcx,[rsp+0x580]
   140012f21:	call   0x140047130
   140012f26:	xor    r9d,r9d
   140012f29:	xor    edx,edx
   140012f2b:	lea    r8d,[r9+0x2]
   140012f2f:	lea    rcx,[rsp+0x580]
   140012f37:	call   QWORD PTR [rip+0x51783]        # 0x1400646c0
   140012f3d:	mov    r12,rax
   140012f40:	cmp    rax,0xffffffffffffffff
   140012f44:	je     0x1400131bf
   140012f4a:	lea    r9,[rsp+0xb0]
   140012f52:	xor    r8d,r8d
   140012f55:	lea    rdx,[rip+0x5385c]        # 0x1400667b8
   140012f5c:	mov    rcx,rax
   140012f5f:	call   QWORD PTR [rip+0x51793]        # 0x1400646f8
   140012f65:	test   eax,eax
   140012f67:	je     0x1400131b6
   140012f6d:	mov    QWORD PTR [rsp+0x20],r13
   140012f72:	mov    r9d,0x104
   140012f78:	lea    r8,[rsp+0x370]
   140012f80:	mov    edx,0x1
   140012f85:	lea    rcx,[rsp+0xb0]
   140012f8d:	call   QWORD PTR [rip+0x5175d]        # 0x1400646f0
   140012f93:	test   eax,eax
   140012f95:	je     0x1400131b6
   140012f9b:	lea    rax,[rsp+0xb0]
   140012fa3:	mov    QWORD PTR [rsp+0x20],rax
   140012fa8:	xor    r9d,r9d
   140012fab:	lea    r8,[rsp+0x370]
   140012fb3:	mov    rdx,r12
   140012fb6:	mov    rcx,rsi
   140012fb9:	call   0x140002340
   140012fbe:	test   eax,eax
   140012fc0:	jne    0x140012fd0
   140012fc2:	mov    rcx,r12
   140012fc5:	call   QWORD PTR [rip+0x516fd]        # 0x1400646c8
   140012fcb:	jmp    0x1400131cb
   140012fd0:	lea    r9,[rsp+0xb0]
   140012fd8:	xor    r8d,r8d
   140012fdb:	lea    rdx,[rsp+0x370]
   140012fe3:	mov    rcx,r12
   140012fe6:	call   QWORD PTR [rip+0x5170c]        # 0x1400646f8
   140012fec:	test   eax,eax
   140012fee:	je     0x1400131b6
   140012ff4:	mov    QWORD PTR [rsp+0x20],r13
   140012ff9:	mov    r9d,0x104
   140012fff:	lea    r8,[rsp+0x370]
   140013007:	mov    edx,0x2
   14001300c:	lea    rcx,[rsp+0xb0]
   140013014:	call   QWORD PTR [rip+0x516d6]        # 0x1400646f0
   14001301a:	test   eax,eax
   14001301c:	je     0x14001316e
   140013022:	xor    eax,eax
   140013024:	mov    rcx,r14
   140013027:	lea    rdi,[rsp+0x370]
   14001302f:	repnz scas ax,WORD PTR es:[rdi]
   140013032:	not    rcx
   140013035:	sub    rcx,0x1
   140013039:	mov    rdi,rcx
   14001303c:	test   ecx,ecx
   14001303e:	jne    0x140013099
   140013040:	lea    rdx,[rbx-0x18]
   140013044:	mov    rdi,QWORD PTR [rdx]
   140013047:	cmp    DWORD PTR [rdx+0x8],eax
   14001304a:	je     0x140013123
   140013050:	cmp    DWORD PTR [rdx+0x10],eax
   140013053:	jge    0x14001306a
   140013055:	cmp    DWORD PTR [rbx-0xc],eax
   140013058:	jl     0x14001347f
   14001305e:	mov    DWORD PTR [rbx-0x10],r13d
   140013062:	mov    WORD PTR [rbx],ax
   140013065:	jmp    0x140013123
   14001306a:	mov    eax,r14d
   14001306d:	lock xadd DWORD PTR [rdx+0x10],eax
   140013072:	add    eax,0xffffffff
   140013075:	test   eax,eax
   140013077:	jg     0x140013082
   140013079:	mov    rcx,QWORD PTR [rdx]
   14001307c:	mov    rax,QWORD PTR [rcx]
   14001307f:	call   QWORD PTR [rax+0x8]
   140013082:	mov    rax,QWORD PTR [rdi]
   140013085:	mov    rcx,rdi
   140013088:	call   QWORD PTR [rax+0x18]
   14001308b:	lea    rbx,[rax+0x18]
   14001308f:	mov    QWORD PTR [rsp+0x30],rbx
   140013094:	jmp    0x140013123
   140013099:	mov    esi,DWORD PTR [rbx-0x10]
   14001309c:	lea    rbp,[rsp+0x370]
   1400130a4:	sub    rbp,rbx
   1400130a7:	sar    rbp,1
   1400130aa:	mov    ecx,0x1
   1400130af:	sub    ecx,DWORD PTR [rbx-0x8]
   1400130b2:	mov    eax,DWORD PTR [rbx-0xc]
   1400130b5:	sub    eax,edi
   1400130b7:	or     eax,ecx
   1400130b9:	jge    0x1400130cc
   1400130bb:	mov    edx,edi
   1400130bd:	lea    rcx,[rsp+0x30]
   1400130c2:	call   0x140002d40
   1400130c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400130cc:	cmp    rbp,rsi
   1400130cf:	ja     0x1400130ec
   1400130d1:	movsxd rax,edi
   1400130d4:	lea    rsi,[rax+rax*1]
   1400130d8:	lea    r8,[rbx+rbp*2]
   1400130dc:	mov    r9,rsi
   1400130df:	mov    rdx,rsi
   1400130e2:	mov    rcx,rbx
   1400130e5:	call   0x1400467a0
   1400130ea:	jmp    0x140013109
   1400130ec:	movsxd rax,edi
   1400130ef:	lea    rsi,[rax+rax*1]
   1400130f3:	mov    r9,rsi
   1400130f6:	lea    r8,[rsp+0x370]
   1400130fe:	mov    rdx,rsi
   140013101:	mov    rcx,rbx
   140013104:	call   0x1400466d0
   140013109:	test   edi,edi
   14001310b:	js     0x14001348a
   140013111:	cmp    edi,DWORD PTR [rbx-0xc]
   140013114:	jg     0x14001348a
   14001311a:	mov    DWORD PTR [rbx-0x10],edi
   14001311d:	mov    WORD PTR [rsi+rbx*1],0x0
   140013123:	cmp    DWORD PTR [rbx-0x10],0x0
   140013127:	jl     0x14001316e
   140013129:	lea    rdx,[rsp+0xb80]
   140013131:	mov    rcx,rbx
   140013134:	call   0x140046660
   140013139:	test   rax,rax
   14001313c:	je     0x14001316e
   14001313e:	sub    rax,rbx
   140013141:	sar    rax,1
   140013144:	cmp    eax,0xffffffff
   140013147:	je     0x14001316e
   140013149:	cmp    DWORD PTR [rbx-0x10],0x0
   14001314d:	jl     0x14001318d
   14001314f:	lea    rdx,[rip+0x53a1a]        # 0x140066b70
   140013156:	mov    rcx,rbx
   140013159:	call   0x140046660
   14001315e:	test   rax,rax
   140013161:	je     0x14001318d
   140013163:	sub    rax,rbx
   140013166:	sar    rax,1
   140013169:	cmp    eax,0xffffffff
   14001316c:	je     0x14001318d
   14001316e:	lea    rdx,[rsp+0xb0]
   140013176:	lea    rcx,[rsp+0xb0]
   14001317e:	call   QWORD PTR [rip+0x51554]        # 0x1400646d8
   140013184:	test   eax,eax
   140013186:	je     0x1400131b2
   140013188:	jmp    0x140012ff4
   14001318d:	lea    r8,[rsp+0x580]
   140013195:	mov    edx,0x200
   14001319a:	lea    rcx,[rsp+0x1380]
   1400131a2:	call   0x140047080
   1400131a7:	mov    edi,0x1
   1400131ac:	mov    DWORD PTR [rsp+0x40],edi
   1400131b0:	jmp    0x1400131b6
   1400131b2:	mov    edi,DWORD PTR [rsp+0x40]
   1400131b6:	mov    rcx,r12
   1400131b9:	call   QWORD PTR [rip+0x51509]        # 0x1400646c8
   1400131bf:	test   edi,edi
   1400131c1:	jne    0x1400131e4
   1400131c3:	mov    rsi,QWORD PTR [rsp+0x88]
   1400131cb:	lea    rdx,[rsp+0x120]
   1400131d3:	mov    rcx,r15
   1400131d6:	call   QWORD PTR [rip+0x51354]        # 0x140064530
   1400131dc:	test   eax,eax
   1400131de:	jne    0x140012ef2
   1400131e4:	mov    rcx,r15
   1400131e7:	call   QWORD PTR [rip+0x5134b]        # 0x140064538
   1400131ed:	test   edi,edi
   1400131ef:	je     0x140013410
   1400131f5:	mov    rsi,QWORD PTR [rsp+0x88]
   1400131fd:	mov    eax,r13d
   140013200:	mov    ecx,DWORD PTR [rip+0x755f2]        # 0x1400887f8
   140013206:	cmp    ecx,0x5a
   140013209:	mov    edx,0xa
   14001320e:	cmovl  eax,edx
   140013211:	add    ecx,eax
   140013213:	mov    DWORD PTR [rip+0x755df],ecx        # 0x1400887f8
   140013219:	movsxd r8,ecx
   14001321c:	xor    r9d,r9d
   14001321f:	mov    edx,0x402
   140013224:	mov    rcx,QWORD PTR [rsi+0xeb180]
   14001322b:	call   QWORD PTR [rip+0x5193f]        # 0x140064b70
   140013231:	xor    edx,edx
   140013233:	mov    rcx,rsi
   140013236:	call   0x1400018d0
   14001323b:	lea    rdx,[rsp+0x68]
   140013240:	mov    QWORD PTR [rsp+0x20],rdx
   140013245:	mov    r15d,0x1
   14001324b:	mov    r9d,r15d
   14001324e:	lea    r8,[rsp+0x1380]
   140013256:	lea    rdx,[rsp+0x1180]
   14001325e:	xor    ecx,ecx
   140013260:	call   0x14001abd6
   140013265:	test   eax,eax
   140013267:	jne    0x1400132be
   140013269:	call   QWORD PTR [rip+0x51391]        # 0x140064600
   14001326f:	mov    edi,eax
   140013271:	cmp    eax,0x5b4
   140013276:	jne    0x14001329d
   140013278:	lea    r8,[rsp+0xf8]
   140013280:	mov    rdx,QWORD PTR [rsp+0x50]
   140013285:	mov    rcx,rsi
   140013288:	call   0x140007970
   14001328d:	mov    ebp,DWORD PTR [rsp+0x38]
   140013291:	test   eax,eax
   140013293:	cmovne ebp,r15d
   140013297:	mov    DWORD PTR [rsp+0x38],ebp
   14001329b:	jmp    0x1400132a1
   14001329d:	mov    ebp,DWORD PTR [rsp+0x38]
   1400132a1:	mov    edx,edi
   1400132a3:	mov    rcx,rsi
   1400132a6:	call   0x140007bf0
   1400132ab:	mov    r12d,DWORD PTR [rsp+0x3c]
   1400132b0:	mov    edi,0x5
   1400132b5:	lea    r15d,[rdi+0x5]
   1400132b9:	jmp    0x14001343a
   1400132be:	mov    ebp,r15d
   1400132c1:	mov    DWORD PTR [rsp+0x38],r15d
   1400132c6:	lea    r8,[rsp+0xf8]
   1400132ce:	mov    rdx,QWORD PTR [rsp+0x50]
   1400132d3:	mov    rcx,rsi
   1400132d6:	call   0x140007970
   1400132db:	test   eax,eax
   1400132dd:	jne    0x14001342c
   1400132e3:	cmp    DWORD PTR [rsi+0xeb130],eax
   1400132e9:	je     0x1400133f9
   1400132ef:	lea    rdx,[rip+0x521da]        # 0x1400654d0
   1400132f6:	lea    rcx,[rsp+0x48]
   1400132fb:	call   0x140003930
   140013300:	lea    r9,[rsp+0xf8]
   140013308:	mov    rbx,QWORD PTR [rsp+0x50]
   14001330d:	mov    r8,rbx
   140013310:	lea    rdx,[rsp+0xd0]
   140013318:	mov    rcx,rsi
   14001331b:	call   0x140007a20
   140013320:	nop
   140013321:	mov    rdx,rax
   140013324:	lea    rcx,[rsp+0x48]
   140013329:	call   0x140004dc0
   14001332e:	nop
   14001332f:	mov    rdx,QWORD PTR [rsp+0xd0]
   140013337:	add    rdx,0xffffffffffffffe8
   14001333b:	mov    eax,r14d
   14001333e:	lock xadd DWORD PTR [rdx+0x10],eax
   140013343:	add    eax,0xffffffff
   140013346:	test   eax,eax
   140013348:	jg     0x140013353
   14001334a:	mov    rcx,QWORD PTR [rdx]
   14001334d:	mov    rax,QWORD PTR [rcx]
   140013350:	call   QWORD PTR [rax+0x8]
   140013353:	lea    rdx,[rip+0x52176]        # 0x1400654d0
   14001335a:	lea    rcx,[rsp+0x48]
   14001335f:	call   0x140009f80
   140013364:	test   al,al
   140013366:	je     0x1400133f4
   14001336c:	lea    rdx,[rsp+0x48]
   140013371:	lea    rcx,[rsp+0xf0]
   140013379:	call   0x140003120
   14001337e:	mov    rdx,rax
   140013381:	mov    rcx,rsi
   140013384:	call   0x14000c440
   140013389:	mov    edi,eax
   14001338b:	lea    rax,[rsp+0x68]
   140013390:	mov    QWORD PTR [rsp+0x20],rax
   140013395:	mov    r9d,r15d
   140013398:	xor    r8d,r8d
   14001339b:	lea    rdx,[rsp+0xf8]
   1400133a3:	mov    rcx,rbx
   1400133a6:	call   0x140002120
   1400133ab:	test   eax,eax
   1400133ad:	je     0x1400133f4
   1400133af:	test   edi,edi
   1400133b1:	je     0x1400133f4
   1400133b3:	movsxd rax,DWORD PTR [rsi+0xeb100]
   1400133ba:	imul   rax,rax,0x12c8
   1400133c1:	mov    DWORD PTR [rax+rsi*1+0x4bc],r15d
   1400133c9:	lea    rdx,[rsp+0x48]
   1400133ce:	lea    rcx,[rsp+0xe8]
   1400133d6:	call   0x140003120
   1400133db:	mov    rdx,rax
   1400133de:	mov    rcx,rsi
   1400133e1:	call   0x140011760
   1400133e6:	add    DWORD PTR [rsi+0xeb100],0xffffffff
   1400133ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400133f2:	jmp    0x1400133f9
   1400133f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400133f9:	mov    DWORD PTR [rsi+0x4bc],r15d
   140013400:	mov    r12d,DWORD PTR [rsp+0x3c]
   140013405:	mov    edi,0x5
   14001340a:	lea    r15d,[rdi+0x5]
   14001340e:	jmp    0x14001343a
   140013410:	mov    rsi,QWORD PTR [rsp+0x88]
   140013418:	mov    ebp,DWORD PTR [rsp+0x38]
   14001341c:	mov    r12d,DWORD PTR [rsp+0x3c]
   140013421:	mov    edi,0x5
   140013426:	lea    r15d,[rdi+0x5]
   14001342a:	jmp    0x14001343a
   14001342c:	mov    r12d,DWORD PTR [rsp+0x3c]
   140013431:	mov    edi,0x5
   140013436:	lea    r15d,[rdi+0x5]
   14001343a:	mov    eax,DWORD PTR [rsp+0x98]
   140013441:	add    eax,0x1
   140013444:	mov    DWORD PTR [rsp+0x98],eax
   14001344b:	lea    r8,[rsp+0xf8]
   140013453:	mov    edx,eax
   140013455:	mov    rcx,QWORD PTR [rsp+0x50]
   14001345a:	call   QWORD PTR [rip+0x512c8]        # 0x140064728
   140013460:	test   eax,eax
   140013462:	je     0x140013495
   140013464:	jmp    0x140012955
   140013469:	mov    ecx,0x80070057
   14001346e:	call   0x140001430
   140013473:	int3   
   140013474:	mov    ecx,0x80070057
   140013479:	call   0x140001430
   14001347e:	int3   
   14001347f:	mov    ecx,0x80070057
   140013484:	call   0x140001430
   140013489:	int3   
   14001348a:	mov    ecx,0x80070057
   14001348f:	call   0x140001430
   140013494:	int3   
   140013495:	mov    rcx,QWORD PTR [rsp+0x50]
   14001349a:	call   QWORD PTR [rip+0x51298]        # 0x140064738
   1400134a0:	mov    eax,DWORD PTR [rip+0x75352]        # 0x1400887f8
   1400134a6:	cmp    eax,0x5a
   1400134a9:	cmovl  r13d,r15d
   1400134ad:	add    eax,r13d
   1400134b0:	mov    DWORD PTR [rip+0x75342],eax        # 0x1400887f8
   1400134b6:	movsxd r8,eax
   1400134b9:	xor    r9d,r9d
   1400134bc:	mov    edx,0x402
   1400134c1:	mov    rcx,QWORD PTR [rsi+0xeb180]
   1400134c8:	call   QWORD PTR [rip+0x516a2]        # 0x140064b70
   1400134ce:	xor    edx,edx
   1400134d0:	mov    rcx,rsi
   1400134d3:	call   0x1400018d0
   1400134d8:	nop
   1400134d9:	mov    rdx,QWORD PTR [rsp+0x48]
   1400134de:	add    rdx,0xffffffffffffffe8
   1400134e2:	mov    eax,r14d
   1400134e5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400134ea:	add    eax,0xffffffff
   1400134ed:	test   eax,eax
   1400134ef:	jg     0x1400134fb
   1400134f1:	mov    rcx,QWORD PTR [rdx]
   1400134f4:	mov    rax,QWORD PTR [rcx]
   1400134f7:	call   QWORD PTR [rax+0x8]
   1400134fa:	nop
   1400134fb:	mov    rdx,QWORD PTR [rsp+0x30]
   140013500:	add    rdx,0xffffffffffffffe8
   140013504:	mov    eax,r14d
   140013507:	lock xadd DWORD PTR [rdx+0x10],eax
   14001350c:	add    eax,0xffffffff
   14001350f:	test   eax,eax
   140013511:	jg     0x14001351d
   140013513:	mov    rcx,QWORD PTR [rdx]
   140013516:	mov    rax,QWORD PTR [rcx]
   140013519:	call   QWORD PTR [rax+0x8]
   14001351c:	nop
   14001351d:	mov    rdx,QWORD PTR [rsp+0xa8]
   140013525:	add    rdx,0xffffffffffffffe8
   140013529:	mov    eax,r14d
   14001352c:	lock xadd DWORD PTR [rdx+0x10],eax
   140013531:	add    eax,0xffffffff
   140013534:	test   eax,eax
   140013536:	jg     0x140013542
   140013538:	mov    rcx,QWORD PTR [rdx]
   14001353b:	mov    rax,QWORD PTR [rcx]
   14001353e:	call   QWORD PTR [rax+0x8]
   140013541:	nop
   140013542:	mov    rdx,QWORD PTR [rsp+0x78]
   140013547:	add    rdx,0xffffffffffffffe8
   14001354b:	mov    eax,r14d
   14001354e:	lock xadd DWORD PTR [rdx+0x10],eax
   140013553:	add    eax,0xffffffff
   140013556:	test   eax,eax
   140013558:	jg     0x140013564
   14001355a:	mov    rcx,QWORD PTR [rdx]
   14001355d:	mov    rax,QWORD PTR [rcx]
   140013560:	call   QWORD PTR [rax+0x8]
   140013563:	nop
   140013564:	mov    rdx,QWORD PTR [rsp+0x58]
   140013569:	add    rdx,0xffffffffffffffe8
   14001356d:	mov    eax,r14d
   140013570:	lock xadd DWORD PTR [rdx+0x10],eax
   140013575:	add    eax,0xffffffff
   140013578:	test   eax,eax
   14001357a:	jg     0x140013586
   14001357c:	mov    rcx,QWORD PTR [rdx]
   14001357f:	mov    rax,QWORD PTR [rcx]
   140013582:	call   QWORD PTR [rax+0x8]
   140013585:	nop
   140013586:	mov    rdx,QWORD PTR [rsp+0x60]
   14001358b:	add    rdx,0xffffffffffffffe8
   14001358f:	mov    eax,r14d
   140013592:	lock xadd DWORD PTR [rdx+0x10],eax
   140013597:	add    eax,0xffffffff
   14001359a:	test   eax,eax
   14001359c:	jg     0x1400135a8
   14001359e:	mov    rcx,QWORD PTR [rdx]
   1400135a1:	mov    rax,QWORD PTR [rcx]
   1400135a4:	call   QWORD PTR [rax+0x8]
   1400135a7:	nop
   1400135a8:	mov    rdx,QWORD PTR [rsp+0x70]
   1400135ad:	add    rdx,0xffffffffffffffe8
   1400135b1:	mov    eax,r14d
   1400135b4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400135b9:	add    eax,0xffffffff
   1400135bc:	test   eax,eax
   1400135be:	jg     0x1400135ca
   1400135c0:	mov    rcx,QWORD PTR [rdx]
   1400135c3:	mov    rax,QWORD PTR [rcx]
   1400135c6:	call   QWORD PTR [rax+0x8]
   1400135c9:	nop
   1400135ca:	mov    rdx,QWORD PTR [rsp+0x80]
   1400135d2:	add    rdx,0xffffffffffffffe8
   1400135d6:	mov    eax,r14d
   1400135d9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400135de:	add    eax,0xffffffff
   1400135e1:	test   eax,eax
   1400135e3:	jg     0x1400135ef
   1400135e5:	mov    rcx,QWORD PTR [rdx]
   1400135e8:	mov    rax,QWORD PTR [rcx]
   1400135eb:	call   QWORD PTR [rax+0x8]
   1400135ee:	nop
   1400135ef:	mov    rdx,QWORD PTR [rsp+0x90]
   1400135f7:	add    rdx,0xffffffffffffffe8
   1400135fb:	mov    eax,r14d
   1400135fe:	lock xadd DWORD PTR [rdx+0x10],eax
   140013603:	add    eax,0xffffffff
   140013606:	test   eax,eax
   140013608:	jg     0x140013614
   14001360a:	mov    rcx,QWORD PTR [rdx]
   14001360d:	mov    rax,QWORD PTR [rcx]
   140013610:	call   QWORD PTR [rax+0x8]
   140013613:	nop
   140013614:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001361c:	add    rdx,0xffffffffffffffe8
   140013620:	lock xadd DWORD PTR [rdx+0x10],r14d
   140013626:	add    r14d,0xffffffff
   14001362a:	test   r14d,r14d
   14001362d:	jg     0x140013638
   14001362f:	mov    rcx,QWORD PTR [rdx]
   140013632:	mov    rax,QWORD PTR [rcx]
   140013635:	call   QWORD PTR [rax+0x8]
   140013638:	mov    eax,ebp
   14001363a:	jmp    0x1400137a0
   14001363f:	mov    rdx,QWORD PTR [rsp+0x48]
   140013644:	add    rdx,0xffffffffffffffe8
   140013648:	mov    eax,r14d
   14001364b:	lock xadd DWORD PTR [rdx+0x10],eax
   140013650:	add    eax,0xffffffff
   140013653:	test   eax,eax
   140013655:	jg     0x140013661
   140013657:	mov    rcx,QWORD PTR [rdx]
   14001365a:	mov    rax,QWORD PTR [rcx]
   14001365d:	call   QWORD PTR [rax+0x8]
   140013660:	nop
   140013661:	mov    rdx,QWORD PTR [rsp+0x30]
   140013666:	add    rdx,0xffffffffffffffe8
   14001366a:	mov    eax,r14d
   14001366d:	lock xadd DWORD PTR [rdx+0x10],eax
   140013672:	add    eax,0xffffffff
   140013675:	test   eax,eax
   140013677:	jg     0x140013683
   140013679:	mov    rcx,QWORD PTR [rdx]
   14001367c:	mov    rax,QWORD PTR [rcx]
   14001367f:	call   QWORD PTR [rax+0x8]
   140013682:	nop
   140013683:	mov    rdx,QWORD PTR [rsp+0xa8]
   14001368b:	add    rdx,0xffffffffffffffe8
   14001368f:	mov    eax,r14d
   140013692:	lock xadd DWORD PTR [rdx+0x10],eax
   140013697:	add    eax,0xffffffff
   14001369a:	test   eax,eax
   14001369c:	jg     0x1400136a8
   14001369e:	mov    rcx,QWORD PTR [rdx]
   1400136a1:	mov    rax,QWORD PTR [rcx]
   1400136a4:	call   QWORD PTR [rax+0x8]
   1400136a7:	nop
   1400136a8:	mov    rdx,QWORD PTR [rsp+0x78]
   1400136ad:	add    rdx,0xffffffffffffffe8
   1400136b1:	mov    eax,r14d
   1400136b4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400136b9:	add    eax,0xffffffff
   1400136bc:	test   eax,eax
   1400136be:	jg     0x1400136ca
   1400136c0:	mov    rcx,QWORD PTR [rdx]
   1400136c3:	mov    rax,QWORD PTR [rcx]
   1400136c6:	call   QWORD PTR [rax+0x8]
   1400136c9:	nop
   1400136ca:	mov    rdx,QWORD PTR [rsp+0x58]
   1400136cf:	add    rdx,0xffffffffffffffe8
   1400136d3:	mov    eax,r14d
   1400136d6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400136db:	add    eax,0xffffffff
   1400136de:	test   eax,eax
   1400136e0:	jg     0x1400136ec
   1400136e2:	mov    rcx,QWORD PTR [rdx]
   1400136e5:	mov    rax,QWORD PTR [rcx]
   1400136e8:	call   QWORD PTR [rax+0x8]
   1400136eb:	nop
   1400136ec:	mov    rdx,QWORD PTR [rsp+0x60]
   1400136f1:	add    rdx,0xffffffffffffffe8
   1400136f5:	mov    eax,r14d
   1400136f8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400136fd:	add    eax,0xffffffff
   140013700:	test   eax,eax
   140013702:	jg     0x14001370e
   140013704:	mov    rcx,QWORD PTR [rdx]
   140013707:	mov    rax,QWORD PTR [rcx]
   14001370a:	call   QWORD PTR [rax+0x8]
   14001370d:	nop
   14001370e:	mov    rdx,QWORD PTR [rsp+0x70]
   140013713:	add    rdx,0xffffffffffffffe8
   140013717:	mov    eax,r14d
   14001371a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001371f:	add    eax,0xffffffff
   140013722:	test   eax,eax
   140013724:	jg     0x140013730
   140013726:	mov    rcx,QWORD PTR [rdx]
   140013729:	mov    rax,QWORD PTR [rcx]
   14001372c:	call   QWORD PTR [rax+0x8]
   14001372f:	nop
   140013730:	mov    rdx,QWORD PTR [rsp+0x80]
   140013738:	add    rdx,0xffffffffffffffe8
   14001373c:	mov    eax,r14d
   14001373f:	lock xadd DWORD PTR [rdx+0x10],eax
   140013744:	add    eax,0xffffffff
   140013747:	test   eax,eax
   140013749:	jg     0x140013755
   14001374b:	mov    rcx,QWORD PTR [rdx]
   14001374e:	mov    rax,QWORD PTR [rcx]
   140013751:	call   QWORD PTR [rax+0x8]
   140013754:	nop
   140013755:	mov    rdx,QWORD PTR [rsp+0x90]
   14001375d:	add    rdx,0xffffffffffffffe8
   140013761:	mov    eax,r14d
   140013764:	lock xadd DWORD PTR [rdx+0x10],eax
   140013769:	add    eax,0xffffffff
   14001376c:	test   eax,eax
   14001376e:	jg     0x14001377a
   140013770:	mov    rcx,QWORD PTR [rdx]
   140013773:	mov    rax,QWORD PTR [rcx]
   140013776:	call   QWORD PTR [rax+0x8]
   140013779:	nop
   14001377a:	mov    rdx,QWORD PTR [rsp+0xa0]
   140013782:	add    rdx,0xffffffffffffffe8
   140013786:	lock xadd DWORD PTR [rdx+0x10],r14d
   14001378c:	add    r14d,0xffffffff
   140013790:	test   r14d,r14d
   140013793:	jg     0x14001379e
   140013795:	mov    rcx,QWORD PTR [rdx]
   140013798:	mov    rax,QWORD PTR [rcx]
   14001379b:	call   QWORD PTR [rax+0x8]
   14001379e:	xor    eax,eax
   1400137a0:	mov    rcx,QWORD PTR [rsp+0x1780]
   1400137a8:	xor    rcx,rsp
   1400137ab:	call   0x140046470
   1400137b0:	lea    r11,[rsp+0x1790]
   1400137b8:	mov    rbx,QWORD PTR [r11+0x38]
   1400137bc:	mov    rbp,QWORD PTR [r11+0x40]
   1400137c0:	mov    rsi,QWORD PTR [r11+0x48]
   1400137c4:	mov    rsp,r11
   1400137c7:	pop    r15
   1400137c9:	pop    r14
   1400137cb:	pop    r13
   1400137cd:	pop    r12
   1400137cf:	pop    rdi
   1400137d0:	ret    
   1400137d1:	int3   
   1400137d2:	int3   
   1400137d3:	int3   
   1400137d4:	int3   
   1400137d5:	int3   
   1400137d6:	int3   
   1400137d7:	int3   
   1400137d8:	int3   
   1400137d9:	int3   
   1400137da:	int3   
   1400137db:	int3   
   1400137dc:	int3   
   1400137dd:	int3   
   1400137de:	int3   
   1400137df:	int3   
   1400137e0:	rex push rbp
   1400137e2:	sub    rsp,0x20
   1400137e6:	mov    rbp,rdx
   1400137e9:	lea    rcx,[rbp+0xa0]
   1400137f0:	call   0x140001090
   1400137f5:	add    rsp,0x20
   1400137f9:	pop    rbp
   1400137fa:	ret    
   1400137fb:	int3   
   1400137fc:	int3   
   1400137fd:	int3   
   1400137fe:	int3   
   1400137ff:	int3   
   140013800:	rex push rbp
   140013802:	sub    rsp,0x20
   140013806:	mov    rbp,rdx
   140013809:	lea    rcx,[rbp+0xa0]
   140013810:	call   0x1400010c0
   140013815:	add    rsp,0x20
   140013819:	pop    rbp
   14001381a:	ret    
   14001381b:	int3   
   14001381c:	int3   
   14001381d:	int3   
   14001381e:	int3   
   14001381f:	int3   
   140013820:	rex push rbp
   140013822:	sub    rsp,0x20
   140013826:	mov    rbp,rdx
   140013829:	lea    rcx,[rbp+0x90]
   140013830:	call   0x140001090
   140013835:	add    rsp,0x20
   140013839:	pop    rbp
   14001383a:	ret    
   14001383b:	int3   
   14001383c:	int3   
   14001383d:	int3   
   14001383e:	int3   
   14001383f:	int3   
   140013840:	rex push rbp
   140013842:	sub    rsp,0x20
   140013846:	mov    rbp,rdx
   140013849:	lea    rcx,[rbp+0x90]
   140013850:	call   0x1400010c0
   140013855:	add    rsp,0x20
   140013859:	pop    rbp
   14001385a:	ret    
   14001385b:	int3   
   14001385c:	int3   
   14001385d:	int3   
   14001385e:	int3   
   14001385f:	int3   
   140013860:	rex push rbp
   140013862:	sub    rsp,0x20
   140013866:	mov    rbp,rdx
   140013869:	lea    rcx,[rbp+0x80]
   140013870:	call   0x140001090
   140013875:	add    rsp,0x20
   140013879:	pop    rbp
   14001387a:	ret    
   14001387b:	int3   
   14001387c:	int3   
   14001387d:	int3   
   14001387e:	int3   
   14001387f:	int3   
   140013880:	rex push rbp
   140013882:	sub    rsp,0x20
   140013886:	mov    rbp,rdx
   140013889:	lea    rcx,[rbp+0x80]
   140013890:	call   0x1400010c0
   140013895:	add    rsp,0x20
   140013899:	pop    rbp
   14001389a:	ret    
   14001389b:	int3   
   14001389c:	int3   
   14001389d:	int3   
   14001389e:	int3   
   14001389f:	int3   
   1400138a0:	rex push rbp
   1400138a2:	sub    rsp,0x20
   1400138a6:	mov    rbp,rdx
   1400138a9:	lea    rcx,[rbp+0x70]
   1400138ad:	call   0x140001090
   1400138b2:	add    rsp,0x20
   1400138b6:	pop    rbp
   1400138b7:	ret    
   1400138b8:	int3   
   1400138b9:	int3   
   1400138ba:	int3   
   1400138bb:	int3   
   1400138bc:	int3   
   1400138bd:	int3   
   1400138be:	int3   
   1400138bf:	int3   
   1400138c0:	rex push rbp
   1400138c2:	sub    rsp,0x20
   1400138c6:	mov    rbp,rdx
   1400138c9:	lea    rcx,[rbp+0x70]
   1400138cd:	call   0x1400010c0
   1400138d2:	add    rsp,0x20
   1400138d6:	pop    rbp
   1400138d7:	ret    
   1400138d8:	int3   
   1400138d9:	int3   
   1400138da:	int3   
   1400138db:	int3   
   1400138dc:	int3   
   1400138dd:	int3   
   1400138de:	int3   
   1400138df:	int3   
   1400138e0:	rex push rbp
   1400138e2:	sub    rsp,0x20
   1400138e6:	mov    rbp,rdx
   1400138e9:	lea    rcx,[rbp+0x60]
   1400138ed:	call   0x140001090
   1400138f2:	add    rsp,0x20
   1400138f6:	pop    rbp
   1400138f7:	ret    
   1400138f8:	int3   
   1400138f9:	int3   
   1400138fa:	int3   
   1400138fb:	int3   
   1400138fc:	int3   
   1400138fd:	int3   
   1400138fe:	int3   
   1400138ff:	int3   
   140013900:	rex push rbp
   140013902:	sub    rsp,0x20
   140013906:	mov    rbp,rdx
   140013909:	lea    rcx,[rbp+0x60]
   14001390d:	call   0x1400010c0
   140013912:	add    rsp,0x20
   140013916:	pop    rbp
   140013917:	ret    
   140013918:	int3   
   140013919:	int3   
   14001391a:	int3   
   14001391b:	int3   
   14001391c:	int3   
   14001391d:	int3   
   14001391e:	int3   
   14001391f:	int3   
   140013920:	rex push rbp
   140013922:	sub    rsp,0x20
   140013926:	mov    rbp,rdx
   140013929:	lea    rcx,[rbp+0x58]
   14001392d:	call   0x140001090
   140013932:	add    rsp,0x20
   140013936:	pop    rbp
   140013937:	ret    
   140013938:	int3   
   140013939:	int3   
   14001393a:	int3   
   14001393b:	int3   
   14001393c:	int3   
   14001393d:	int3   
   14001393e:	int3   
   14001393f:	int3   
   140013940:	rex push rbp
   140013942:	sub    rsp,0x20
   140013946:	mov    rbp,rdx
   140013949:	lea    rcx,[rbp+0x58]
   14001394d:	call   0x1400010c0
   140013952:	add    rsp,0x20
   140013956:	pop    rbp
   140013957:	ret    
   140013958:	int3   
   140013959:	int3   
   14001395a:	int3   
   14001395b:	int3   
   14001395c:	int3   
   14001395d:	int3   
   14001395e:	int3   
   14001395f:	int3   
   140013960:	rex push rbp
   140013962:	sub    rsp,0x20
   140013966:	mov    rbp,rdx
   140013969:	lea    rcx,[rbp+0x78]
   14001396d:	call   0x140001090
   140013972:	add    rsp,0x20
   140013976:	pop    rbp
   140013977:	ret    
   140013978:	int3   
   140013979:	int3   
   14001397a:	int3   
   14001397b:	int3   
   14001397c:	int3   
   14001397d:	int3   
   14001397e:	int3   
   14001397f:	int3   
   140013980:	rex push rbp
   140013982:	sub    rsp,0x20
   140013986:	mov    rbp,rdx
   140013989:	lea    rcx,[rbp+0x78]
   14001398d:	call   0x1400010c0
   140013992:	add    rsp,0x20
   140013996:	pop    rbp
   140013997:	ret    
   140013998:	int3   
   140013999:	int3   
   14001399a:	int3   
   14001399b:	int3   
   14001399c:	int3   
   14001399d:	int3   
   14001399e:	int3   
   14001399f:	int3   
   1400139a0:	rex push rbp
   1400139a2:	sub    rsp,0x20
   1400139a6:	mov    rbp,rdx
   1400139a9:	lea    rcx,[rbp+0xa8]
   1400139b0:	call   0x140001090
   1400139b5:	add    rsp,0x20
   1400139b9:	pop    rbp
   1400139ba:	ret    
   1400139bb:	int3   
   1400139bc:	int3   
   1400139bd:	int3   
   1400139be:	int3   
   1400139bf:	int3   
   1400139c0:	rex push rbp
   1400139c2:	sub    rsp,0x20
   1400139c6:	mov    rbp,rdx
   1400139c9:	lea    rcx,[rbp+0xa8]
   1400139d0:	call   0x1400010c0
   1400139d5:	add    rsp,0x20
   1400139d9:	pop    rbp
   1400139da:	ret    
   1400139db:	int3   
   1400139dc:	int3   
   1400139dd:	int3   
   1400139de:	int3   
   1400139df:	int3   
   1400139e0:	rex push rbp
   1400139e2:	sub    rsp,0x20
   1400139e6:	mov    rbp,rdx
   1400139e9:	lea    rcx,[rbp+0x30]
   1400139ed:	call   0x1400010c0
   1400139f2:	add    rsp,0x20
   1400139f6:	pop    rbp
   1400139f7:	ret    
   1400139f8:	int3   
   1400139f9:	int3   
   1400139fa:	int3   
   1400139fb:	int3   
   1400139fc:	int3   
   1400139fd:	int3   
   1400139fe:	int3   
   1400139ff:	int3   
   140013a00:	rex push rbp
   140013a02:	sub    rsp,0x20
   140013a06:	mov    rbp,rdx
   140013a09:	lea    rcx,[rbp+0x48]
   140013a0d:	call   0x140001090
   140013a12:	add    rsp,0x20
   140013a16:	pop    rbp
   140013a17:	ret    
   140013a18:	int3   
   140013a19:	int3   
   140013a1a:	int3   
   140013a1b:	int3   
   140013a1c:	int3   
   140013a1d:	int3   
   140013a1e:	int3   
   140013a1f:	int3   
   140013a20:	rex push rbp
   140013a22:	sub    rsp,0x20
   140013a26:	mov    rbp,rdx
   140013a29:	lea    rcx,[rbp+0x48]
   140013a2d:	call   0x1400010c0
   140013a32:	add    rsp,0x20
   140013a36:	pop    rbp
   140013a37:	ret    
   140013a38:	int3   
   140013a39:	int3   
   140013a3a:	int3   
   140013a3b:	int3   
   140013a3c:	int3   
   140013a3d:	int3   
   140013a3e:	int3   
   140013a3f:	int3   
   140013a40:	rex push rbp
   140013a42:	sub    rsp,0x20
   140013a46:	mov    rbp,rdx
   140013a49:	lea    rcx,[rbp+0xc8]
   140013a50:	call   0x1400010c0
   140013a55:	add    rsp,0x20
   140013a59:	pop    rbp
   140013a5a:	ret    
   140013a5b:	int3   
   140013a5c:	int3   
   140013a5d:	int3   
   140013a5e:	int3   
   140013a5f:	int3   
   140013a60:	rex push rbp
   140013a62:	sub    rsp,0x20
   140013a66:	mov    rbp,rdx
   140013a69:	lea    rcx,[rbp+0xd0]
   140013a70:	call   0x1400010c0
   140013a75:	add    rsp,0x20
   140013a79:	pop    rbp
   140013a7a:	ret    
   140013a7b:	int3   
   140013a7c:	int3   
   140013a7d:	int3   
   140013a7e:	int3   
   140013a7f:	int3   
   140013a80:	rex push rbp
   140013a82:	push   rsi
   140013a83:	push   rdi
   140013a84:	push   r12
   140013a86:	push   r13
   140013a88:	push   r14
   140013a8a:	push   r15
   140013a8c:	sub    rsp,0x2a0
   140013a93:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140013a9c:	mov    QWORD PTR [rsp+0x2f0],rbx
   140013aa4:	mov    rax,QWORD PTR [rip+0x732c5]        # 0x140086d70
   140013aab:	xor    rax,rsp
   140013aae:	mov    QWORD PTR [rsp+0x290],rax
   140013ab6:	mov    rbx,rdx
   140013ab9:	mov    r13,rcx
   140013abc:	call   0x14002b874
   140013ac1:	mov    rdx,rax
   140013ac4:	xor    r14d,r14d
   140013ac7:	mov    ecx,r14d
   140013aca:	test   rax,rax
   140013acd:	setne  cl
   140013ad0:	test   ecx,ecx
   140013ad2:	jne    0x140013adf
   140013ad4:	mov    ecx,0x80004005
   140013ad9:	call   0x140001430
   140013ade:	int3   
   140013adf:	mov    rax,QWORD PTR [rax]
   140013ae2:	mov    rcx,rdx
   140013ae5:	call   QWORD PTR [rax+0x18]
   140013ae8:	add    rax,0x18
   140013aec:	mov    QWORD PTR [rsp+0x28],rax
   140013af1:	lea    r15,[rip+0x51850]        # 0x140065348
   140013af8:	mov    rbp,r15
   140013afb:	or     rsi,0xffffffffffffffff
   140013aff:	shr    rbp,0x10
   140013b03:	jne    0x140013b27
   140013b05:	movzx  edi,r15w
   140013b09:	mov    ecx,edi
   140013b0b:	call   0x14002b860
   140013b10:	test   rax,rax
   140013b13:	je     0x140013b47
   140013b15:	mov    r8d,edi
   140013b18:	mov    rdx,rax
   140013b1b:	lea    rcx,[rsp+0x28]
   140013b20:	call   0x140003650
   140013b25:	jmp    0x140013b47
   140013b27:	xor    eax,eax
   140013b29:	mov    rcx,rsi
   140013b2c:	mov    rdi,r15
   140013b2f:	repnz scas ax,WORD PTR es:[rdi]
   140013b32:	not    rcx
   140013b35:	lea    r8d,[rcx-0x1]
   140013b39:	mov    rdx,r15
   140013b3c:	lea    rcx,[rsp+0x28]
   140013b41:	call   0x1400037d0
   140013b46:	nop
   140013b47:	call   0x14002b874
   140013b4c:	mov    rdx,rax
   140013b4f:	mov    ecx,r14d
   140013b52:	test   rax,rax
   140013b55:	setne  cl
   140013b58:	test   ecx,ecx
   140013b5a:	jne    0x140013b67
   140013b5c:	mov    ecx,0x80004005
   140013b61:	call   0x140001430
   140013b66:	int3   
   140013b67:	mov    rax,QWORD PTR [rax]
   140013b6a:	mov    rcx,rdx
   140013b6d:	call   QWORD PTR [rax+0x18]
   140013b70:	add    rax,0x18
   140013b74:	mov    QWORD PTR [rsp+0x20],rax
   140013b79:	test   rbp,rbp
   140013b7c:	jne    0x140013ba0
   140013b7e:	movzx  edi,r15w
   140013b82:	mov    ecx,edi
   140013b84:	call   0x14002b860
   140013b89:	test   rax,rax
   140013b8c:	je     0x140013bc0
   140013b8e:	mov    r8d,edi
   140013b91:	mov    rdx,rax
   140013b94:	lea    rcx,[rsp+0x20]
   140013b99:	call   0x140003650
   140013b9e:	jmp    0x140013bc0
   140013ba0:	xor    eax,eax
   140013ba2:	mov    rcx,rsi
   140013ba5:	mov    rdi,r15
   140013ba8:	repnz scas ax,WORD PTR es:[rdi]
   140013bab:	not    rcx
   140013bae:	lea    r8d,[rcx-0x1]
   140013bb2:	mov    rdx,r15
   140013bb5:	lea    rcx,[rsp+0x20]
   140013bba:	call   0x1400037d0
   140013bbf:	nop
   140013bc0:	mov    DWORD PTR [rsp+0x278],r14d
   140013bc8:	mov    DWORD PTR [rsp+0x27c],r14d
   140013bd0:	mov    DWORD PTR [rsp+0x280],r14d
   140013bd8:	mov    DWORD PTR [rsp+0x284],r14d
   140013be0:	mov    DWORD PTR [rsp+0x288],r14d
   140013be8:	mov    r8,rbx
   140013beb:	lea    rdx,[rip+0x533de]        # 0x140066fd0
   140013bf2:	lea    rcx,[rsp+0x20]
   140013bf7:	call   0x140004180
   140013bfc:	mov    rdi,QWORD PTR [rsp+0x20]
   140013c01:	add    rdi,0xffffffffffffffe8
   140013c05:	mov    rcx,QWORD PTR [rdi]
   140013c08:	mov    rax,QWORD PTR [rcx]
   140013c0b:	call   QWORD PTR [rax+0x20]
   140013c0e:	mov    rcx,rax
   140013c11:	cmp    DWORD PTR [rdi+0x10],0x0
   140013c15:	jl     0x140013c26
   140013c17:	cmp    rax,QWORD PTR [rdi]
   140013c1a:	jne    0x140013c26
   140013c1c:	mov    rbp,rdi
   140013c1f:	lock add DWORD PTR [rdi+0x10],0x1
   140013c24:	jmp    0x140013c65
   140013c26:	mov    rax,QWORD PTR [rax]
   140013c29:	mov    r8d,0x2
   140013c2f:	mov    edx,DWORD PTR [rdi+0x8]
   140013c32:	call   QWORD PTR [rax]
   140013c34:	mov    rbp,rax
   140013c37:	test   rax,rax
   140013c3a:	jne    0x140013c42
   140013c3c:	call   0x1400021a0
   140013c41:	int3   
   140013c42:	mov    eax,DWORD PTR [rdi+0x8]
   140013c45:	mov    DWORD PTR [rbp+0x8],eax
   140013c48:	mov    eax,DWORD PTR [rdi+0x8]
   140013c4b:	add    eax,0x1
   140013c4e:	movsxd rdx,eax
   140013c51:	lea    r9,[rdx+rdx*1]
   140013c55:	lea    r8,[rdi+0x18]
   140013c59:	add    rdx,rdx
   140013c5c:	lea    rcx,[rbp+0x18]
   140013c60:	call   0x1400466d0
   140013c65:	lea    rax,[rbp+0x18]
   140013c69:	mov    QWORD PTR [rsp+0x60],rax
   140013c6e:	lea    rcx,[rsp+0x60]
   140013c73:	call   0x140002f40
   140013c78:	test   eax,eax
   140013c7a:	jne    0x140013d5b
   140013c80:	mov    r8,rbx
   140013c83:	lea    rdx,[rip+0x51cee]        # 0x140065978
   140013c8a:	lea    rcx,[rsp+0x20]
   140013c8f:	call   0x140004180
   140013c94:	mov    rdi,QWORD PTR [rsp+0x20]
   140013c99:	add    rdi,0xffffffffffffffe8
   140013c9d:	mov    rcx,QWORD PTR [rdi]
   140013ca0:	mov    rax,QWORD PTR [rcx]
   140013ca3:	call   QWORD PTR [rax+0x20]
   140013ca6:	mov    rcx,rax
   140013ca9:	cmp    DWORD PTR [rdi+0x10],0x0
   140013cad:	jl     0x140013cbe
   140013caf:	cmp    rax,QWORD PTR [rdi]
   140013cb2:	jne    0x140013cbe
   140013cb4:	mov    rbp,rdi
   140013cb7:	lock add DWORD PTR [rdi+0x10],0x1
   140013cbc:	jmp    0x140013cfd
   140013cbe:	mov    rax,QWORD PTR [rax]
   140013cc1:	mov    r8d,0x2
   140013cc7:	mov    edx,DWORD PTR [rdi+0x8]
   140013cca:	call   QWORD PTR [rax]
   140013ccc:	mov    rbp,rax
   140013ccf:	test   rax,rax
   140013cd2:	jne    0x140013cda
   140013cd4:	call   0x1400021a0
   140013cd9:	int3   
   140013cda:	mov    eax,DWORD PTR [rdi+0x8]
   140013cdd:	mov    DWORD PTR [rbp+0x8],eax
   140013ce0:	mov    eax,DWORD PTR [rdi+0x8]
   140013ce3:	add    eax,0x1
   140013ce6:	movsxd rdx,eax
   140013ce9:	lea    r9,[rdx+rdx*1]
   140013ced:	lea    r8,[rdi+0x18]
   140013cf1:	add    rdx,rdx
   140013cf4:	lea    rcx,[rbp+0x18]
   140013cf8:	call   0x1400466d0
   140013cfd:	lea    rax,[rbp+0x18]
   140013d01:	mov    QWORD PTR [rsp+0x58],rax
   140013d06:	lea    rcx,[rsp+0x58]
   140013d0b:	call   0x140002f40
   140013d10:	test   eax,eax
   140013d12:	jne    0x140013d5b
   140013d14:	and    DWORD PTR [rbx+0x208],0xfffffffe
   140013d1b:	mov    eax,esi
   140013d1d:	lock xadd DWORD PTR [rdi+0x10],eax
   140013d22:	add    eax,0xffffffff
   140013d25:	test   eax,eax
   140013d27:	jg     0x140013d36
   140013d29:	mov    rcx,QWORD PTR [rdi]
   140013d2c:	mov    rax,QWORD PTR [rcx]
   140013d2f:	mov    rdx,rdi
   140013d32:	call   QWORD PTR [rax+0x8]
   140013d35:	nop
   140013d36:	mov    rdx,QWORD PTR [rsp+0x28]
   140013d3b:	add    rdx,0xffffffffffffffe8
   140013d3f:	lock xadd DWORD PTR [rdx+0x10],esi
   140013d44:	add    esi,0xffffffff
   140013d47:	test   esi,esi
   140013d49:	jg     0x140013d54
   140013d4b:	mov    rcx,QWORD PTR [rdx]
   140013d4e:	mov    rax,QWORD PTR [rcx]
   140013d51:	call   QWORD PTR [rax+0x8]
   140013d54:	xor    eax,eax
   140013d56:	jmp    0x140014385
   140013d5b:	mov    r8,r15
   140013d5e:	mov    edx,0x104
   140013d63:	lea    rcx,[rsp+0x70]
   140013d68:	call   0x140047080
   140013d6d:	mov    DWORD PTR [rsp+0x278],r14d
   140013d75:	mov    DWORD PTR [rsp+0x27c],r14d
   140013d7d:	mov    DWORD PTR [rsp+0x280],r14d
   140013d85:	mov    DWORD PTR [rsp+0x284],r14d
   140013d8d:	mov    DWORD PTR [rsp+0x288],r14d
   140013d95:	lea    rcx,[rip+0x74ab4]        # 0x140088850
   140013d9c:	call   0x140004bb0
   140013da1:	mov    r8,QWORD PTR [rsp+0x20]
   140013da6:	mov    edx,0x104
   140013dab:	lea    rcx,[rsp+0x70]
   140013db0:	call   0x140047080
   140013db5:	or     DWORD PTR [rsp+0x284],0x1
   140013dbd:	mov    r12d,0x1
   140013dc3:	mov    DWORD PTR [rsp+0x288],r12d
   140013dcb:	lea    rdx,[rsp+0x70]
   140013dd0:	mov    rcx,r13
   140013dd3:	call   0x14000db90
   140013dd8:	mov    ebp,eax
   140013dda:	mov    DWORD PTR [rsp+0x288],0x2
   140013de5:	lea    rdx,[rsp+0x70]
   140013dea:	mov    rcx,r13
   140013ded:	call   0x14000db90
   140013df2:	cmp    ebp,r12d
   140013df5:	jne    0x140013e26
   140013df7:	cmp    eax,r12d
   140013dfa:	jne    0x140013e2a
   140013dfc:	mov    DWORD PTR [rsp+0x288],r14d
   140013e04:	mov    DWORD PTR [rsp+0x280],r12d
   140013e0c:	lea    rdx,[rsp+0x70]
   140013e11:	mov    rcx,r13
   140013e14:	call   0x14000db90
   140013e19:	test   eax,eax
   140013e1b:	jne    0x140013e2e
   140013e1d:	or     DWORD PTR [rbx+0x208],0x2
   140013e24:	jmp    0x140013e75
   140013e26:	test   ebp,ebp
   140013e28:	je     0x140013e75
   140013e2a:	test   eax,eax
   140013e2c:	je     0x140013e75
   140013e2e:	and    DWORD PTR [rbx+0x208],0xfffffffe
   140013e35:	mov    eax,esi
   140013e37:	lock xadd DWORD PTR [rdi+0x10],eax
   140013e3c:	add    eax,0xffffffff
   140013e3f:	test   eax,eax
   140013e41:	jg     0x140013e50
   140013e43:	mov    rcx,QWORD PTR [rdi]
   140013e46:	mov    rax,QWORD PTR [rcx]
   140013e49:	mov    rdx,rdi
   140013e4c:	call   QWORD PTR [rax+0x8]
   140013e4f:	nop
   140013e50:	mov    rdx,QWORD PTR [rsp+0x28]
   140013e55:	add    rdx,0xffffffffffffffe8
   140013e59:	lock xadd DWORD PTR [rdx+0x10],esi
   140013e5e:	add    esi,0xffffffff
   140013e61:	test   esi,esi
   140013e63:	jg     0x140013e6e
   140013e65:	mov    rcx,QWORD PTR [rdx]
   140013e68:	mov    rax,QWORD PTR [rcx]
   140013e6b:	call   QWORD PTR [rax+0x8]
   140013e6e:	xor    eax,eax
   140013e70:	jmp    0x140014385
   140013e75:	or     DWORD PTR [rbx+0x208],r12d
   140013e7c:	mov    r8,rbx
   140013e7f:	lea    rdx,[rip+0x5312a]        # 0x140066fb0
   140013e86:	lea    rcx,[rsp+0x20]
   140013e8b:	call   0x140004180
   140013e90:	mov    rdi,QWORD PTR [rsp+0x20]
   140013e95:	mov    rcx,QWORD PTR [rdi-0x18]
   140013e99:	mov    rax,QWORD PTR [rcx]
   140013e9c:	call   QWORD PTR [rax+0x20]
   140013e9f:	mov    rcx,rax
   140013ea2:	cmp    DWORD PTR [rdi-0x8],0x0
   140013ea6:	jl     0x140013eb9
   140013ea8:	cmp    rax,QWORD PTR [rdi-0x18]
   140013eac:	jne    0x140013eb9
   140013eae:	lea    rbp,[rdi-0x18]
   140013eb2:	lock add DWORD PTR [rdi-0x8],r12d
   140013eb7:	jmp    0x140013ef7
   140013eb9:	mov    rax,QWORD PTR [rax]
   140013ebc:	mov    r8d,0x2
   140013ec2:	mov    edx,DWORD PTR [rdi-0x10]
   140013ec5:	call   QWORD PTR [rax]
   140013ec7:	mov    rbp,rax
   140013eca:	test   rax,rax
   140013ecd:	jne    0x140013ed5
   140013ecf:	call   0x1400021a0
   140013ed4:	int3   
   140013ed5:	mov    eax,DWORD PTR [rdi-0x10]
   140013ed8:	mov    DWORD PTR [rbp+0x8],eax
   140013edb:	mov    eax,DWORD PTR [rdi-0x10]
   140013ede:	add    eax,r12d
   140013ee1:	movsxd rdx,eax
   140013ee4:	lea    r9,[rdx+rdx*1]
   140013ee8:	mov    r8,rdi
   140013eeb:	add    rdx,rdx
   140013eee:	lea    rcx,[rbp+0x18]
   140013ef2:	call   0x1400466d0
   140013ef7:	lea    rax,[rbp+0x18]
   140013efb:	mov    QWORD PTR [rsp+0x48],rax
   140013f00:	lea    rcx,[rsp+0x48]
   140013f05:	call   0x140002f40
   140013f0a:	test   eax,eax
   140013f0c:	jne    0x140014046
   140013f12:	mov    r8,rbx
   140013f15:	lea    rdx,[rip+0x5306c]        # 0x140066f88
   140013f1c:	lea    rcx,[rsp+0x20]
   140013f21:	call   0x140004180
   140013f26:	mov    rdi,QWORD PTR [rsp+0x20]
   140013f2b:	mov    rcx,QWORD PTR [rdi-0x18]
   140013f2f:	mov    rax,QWORD PTR [rcx]
   140013f32:	call   QWORD PTR [rax+0x20]
   140013f35:	mov    rcx,rax
   140013f38:	cmp    DWORD PTR [rdi-0x8],0x0
   140013f3c:	jl     0x140013f4f
   140013f3e:	cmp    rax,QWORD PTR [rdi-0x18]
   140013f42:	jne    0x140013f4f
   140013f44:	lea    rbp,[rdi-0x18]
   140013f48:	lock add DWORD PTR [rdi-0x8],r12d
   140013f4d:	jmp    0x140013f8d
   140013f4f:	mov    rax,QWORD PTR [rax]
   140013f52:	mov    r8d,0x2
   140013f58:	mov    edx,DWORD PTR [rdi-0x10]
   140013f5b:	call   QWORD PTR [rax]
   140013f5d:	mov    rbp,rax
   140013f60:	test   rax,rax
   140013f63:	jne    0x140013f6b
   140013f65:	call   0x1400021a0
   140013f6a:	int3   
   140013f6b:	mov    eax,DWORD PTR [rdi-0x10]
   140013f6e:	mov    DWORD PTR [rbp+0x8],eax
   140013f71:	mov    eax,DWORD PTR [rdi-0x10]
   140013f74:	add    eax,r12d
   140013f77:	movsxd rdx,eax
   140013f7a:	lea    r9,[rdx+rdx*1]
   140013f7e:	mov    r8,rdi
   140013f81:	add    rdx,rdx
   140013f84:	lea    rcx,[rbp+0x18]
   140013f88:	call   0x1400466d0
   140013f8d:	lea    rax,[rbp+0x18]
   140013f91:	mov    QWORD PTR [rsp+0x30],rax
   140013f96:	lea    rcx,[rsp+0x30]
   140013f9b:	call   0x140002f40
   140013fa0:	test   eax,eax
   140013fa2:	jne    0x140014046
   140013fa8:	mov    r8,rbx
   140013fab:	lea    rdx,[rip+0x519c6]        # 0x140065978
   140013fb2:	lea    rcx,[rsp+0x20]
   140013fb7:	call   0x140004180
   140013fbc:	mov    rdi,QWORD PTR [rsp+0x20]
   140013fc1:	mov    rcx,QWORD PTR [rdi-0x18]
   140013fc5:	mov    rax,QWORD PTR [rcx]
   140013fc8:	call   QWORD PTR [rax+0x20]
   140013fcb:	mov    rcx,rax
   140013fce:	cmp    DWORD PTR [rdi-0x8],0x0
   140013fd2:	jl     0x140013fe5
   140013fd4:	cmp    rax,QWORD PTR [rdi-0x18]
   140013fd8:	jne    0x140013fe5
   140013fda:	lea    rbp,[rdi-0x18]
   140013fde:	lock add DWORD PTR [rdi-0x8],r12d
   140013fe3:	jmp    0x140014023
   140013fe5:	mov    rax,QWORD PTR [rax]
   140013fe8:	mov    r8d,0x2
   140013fee:	mov    edx,DWORD PTR [rdi-0x10]
   140013ff1:	call   QWORD PTR [rax]
   140013ff3:	mov    rbp,rax
   140013ff6:	test   rax,rax
   140013ff9:	jne    0x140014001
   140013ffb:	call   0x1400021a0
   140014000:	int3   
   140014001:	mov    eax,DWORD PTR [rdi-0x10]
   140014004:	mov    DWORD PTR [rbp+0x8],eax
   140014007:	mov    eax,DWORD PTR [rdi-0x10]
   14001400a:	add    eax,r12d
   14001400d:	movsxd rdx,eax
   140014010:	lea    r9,[rdx+rdx*1]
   140014014:	mov    r8,rdi
   140014017:	add    rdx,rdx
   14001401a:	lea    rcx,[rbp+0x18]
   14001401e:	call   0x1400466d0
   140014023:	lea    rax,[rbp+0x18]
   140014027:	mov    QWORD PTR [rsp+0x38],rax
   14001402c:	lea    rcx,[rsp+0x38]
   140014031:	call   0x140002f40
   140014036:	test   eax,eax
   140014038:	jne    0x140014046
   14001403a:	and    DWORD PTR [rbx+0x208],0xffffffef
   140014041:	jmp    0x140014123
   140014046:	mov    r8,r15
   140014049:	mov    edx,0x104
   14001404e:	lea    rcx,[rsp+0x70]
   140014053:	call   0x140047080
   140014058:	mov    DWORD PTR [rsp+0x278],r14d
   140014060:	mov    DWORD PTR [rsp+0x27c],r14d
   140014068:	mov    DWORD PTR [rsp+0x280],r14d
   140014070:	mov    DWORD PTR [rsp+0x284],r14d
   140014078:	mov    DWORD PTR [rsp+0x288],r14d
   140014080:	lea    rcx,[rip+0x747c9]        # 0x140088850
   140014087:	call   0x140004bb0
   14001408c:	mov    r8,QWORD PTR [rsp+0x20]
   140014091:	mov    edx,0x104
   140014096:	lea    rcx,[rsp+0x70]
   14001409b:	call   0x140047080
   1400140a0:	or     DWORD PTR [rsp+0x284],0x4
   1400140a8:	mov    DWORD PTR [rsp+0x288],r12d
   1400140b0:	lea    rdx,[rsp+0x70]
   1400140b5:	mov    rcx,r13
   1400140b8:	call   0x14000db90
   1400140bd:	mov    edi,eax
   1400140bf:	mov    DWORD PTR [rsp+0x288],0x2
   1400140ca:	lea    rdx,[rsp+0x70]
   1400140cf:	mov    rcx,r13
   1400140d2:	call   0x14000db90
   1400140d7:	cmp    edi,r12d
   1400140da:	jne    0x14001410b
   1400140dc:	cmp    eax,r12d
   1400140df:	jne    0x14001410f
   1400140e1:	mov    DWORD PTR [rsp+0x288],r14d
   1400140e9:	mov    DWORD PTR [rsp+0x280],r12d
   1400140f1:	lea    rdx,[rsp+0x70]
   1400140f6:	mov    rcx,r13
   1400140f9:	call   0x14000db90
   1400140fe:	test   eax,eax
   140014100:	jne    0x140014113
   140014102:	or     DWORD PTR [rbx+0x208],0x20
   140014109:	jmp    0x14001411c
   14001410b:	test   edi,edi
   14001410d:	je     0x14001411c
   14001410f:	test   eax,eax
   140014111:	je     0x14001411c
   140014113:	and    DWORD PTR [rbx+0x208],0xffffffef
   14001411a:	jmp    0x140014123
   14001411c:	or     DWORD PTR [rbx+0x208],0x10
   140014123:	mov    r8,rbx
   140014126:	lea    rdx,[rip+0x52e43]        # 0x140066f70
   14001412d:	lea    rcx,[rsp+0x20]
   140014132:	call   0x140004180
   140014137:	mov    rdi,QWORD PTR [rsp+0x20]
   14001413c:	add    rdi,0xffffffffffffffe8
   140014140:	mov    rcx,QWORD PTR [rdi]
   140014143:	mov    rax,QWORD PTR [rcx]
   140014146:	call   QWORD PTR [rax+0x20]
   140014149:	mov    rcx,rax
   14001414c:	cmp    DWORD PTR [rdi+0x10],0x0
   140014150:	jl     0x140014161
   140014152:	cmp    rax,QWORD PTR [rdi]
   140014155:	jne    0x140014161
   140014157:	mov    rbp,rdi
   14001415a:	lock add DWORD PTR [rdi+0x10],r12d
   14001415f:	jmp    0x1400141a0
   140014161:	mov    rax,QWORD PTR [rax]
   140014164:	mov    r8d,0x2
   14001416a:	mov    edx,DWORD PTR [rdi+0x8]
   14001416d:	call   QWORD PTR [rax]
   14001416f:	mov    rbp,rax
   140014172:	test   rax,rax
   140014175:	jne    0x14001417d
   140014177:	call   0x1400021a0
   14001417c:	int3   
   14001417d:	mov    eax,DWORD PTR [rdi+0x8]
   140014180:	mov    DWORD PTR [rbp+0x8],eax
   140014183:	mov    eax,DWORD PTR [rdi+0x8]
   140014186:	add    eax,r12d
   140014189:	movsxd rdx,eax
   14001418c:	lea    r9,[rdx+rdx*1]
   140014190:	lea    r8,[rdi+0x18]
   140014194:	add    rdx,rdx
   140014197:	lea    rcx,[rbp+0x18]
   14001419b:	call   0x1400466d0
   1400141a0:	lea    rax,[rbp+0x18]
   1400141a4:	mov    QWORD PTR [rsp+0x40],rax
   1400141a9:	lea    rcx,[rsp+0x40]
   1400141ae:	call   0x140002f40
   1400141b3:	test   eax,eax
   1400141b5:	jne    0x14001425b
   1400141bb:	mov    r8,rbx
   1400141be:	lea    rdx,[rip+0x517b3]        # 0x140065978
   1400141c5:	lea    rcx,[rsp+0x20]
   1400141ca:	call   0x140004180
   1400141cf:	mov    rdi,QWORD PTR [rsp+0x20]
   1400141d4:	add    rdi,0xffffffffffffffe8
   1400141d8:	mov    rcx,QWORD PTR [rdi]
   1400141db:	mov    rax,QWORD PTR [rcx]
   1400141de:	call   QWORD PTR [rax+0x20]
   1400141e1:	mov    rcx,rax
   1400141e4:	cmp    DWORD PTR [rdi+0x10],0x0
   1400141e8:	jl     0x1400141f9
   1400141ea:	cmp    rax,QWORD PTR [rdi]
   1400141ed:	jne    0x1400141f9
   1400141ef:	mov    rbp,rdi
   1400141f2:	lock add DWORD PTR [rdi+0x10],r12d
   1400141f7:	jmp    0x140014238
   1400141f9:	mov    rax,QWORD PTR [rax]
   1400141fc:	mov    r8d,0x2
   140014202:	mov    edx,DWORD PTR [rdi+0x8]
   140014205:	call   QWORD PTR [rax]
   140014207:	mov    rbp,rax
   14001420a:	test   rax,rax
   14001420d:	jne    0x140014215
   14001420f:	call   0x1400021a0
   140014214:	int3   
   140014215:	mov    eax,DWORD PTR [rdi+0x8]
   140014218:	mov    DWORD PTR [rbp+0x8],eax
   14001421b:	mov    eax,DWORD PTR [rdi+0x8]
   14001421e:	add    eax,r12d
   140014221:	movsxd rdx,eax
   140014224:	lea    r9,[rdx+rdx*1]
   140014228:	lea    r8,[rdi+0x18]
   14001422c:	add    rdx,rdx
   14001422f:	lea    rcx,[rbp+0x18]
   140014233:	call   0x1400466d0
   140014238:	lea    rax,[rbp+0x18]
   14001423c:	mov    QWORD PTR [rsp+0x50],rax
   140014241:	lea    rcx,[rsp+0x50]
   140014246:	call   0x140002f40
   14001424b:	test   eax,eax
   14001424d:	jne    0x14001425b
   14001424f:	and    DWORD PTR [rbx+0x208],0xfffffffb
   140014256:	jmp    0x140014338
   14001425b:	mov    r8,r15
   14001425e:	mov    edx,0x104
   140014263:	lea    rcx,[rsp+0x70]
   140014268:	call   0x140047080
   14001426d:	mov    DWORD PTR [rsp+0x278],r14d
   140014275:	mov    DWORD PTR [rsp+0x27c],r14d
   14001427d:	mov    DWORD PTR [rsp+0x280],r14d
   140014285:	mov    DWORD PTR [rsp+0x284],r14d
   14001428d:	mov    DWORD PTR [rsp+0x288],r14d
   140014295:	lea    rcx,[rip+0x745b4]        # 0x140088850
   14001429c:	call   0x140004bb0
   1400142a1:	mov    r8,QWORD PTR [rsp+0x20]
   1400142a6:	mov    edx,0x104
   1400142ab:	lea    rcx,[rsp+0x70]
   1400142b0:	call   0x140047080
   1400142b5:	or     DWORD PTR [rsp+0x284],0x2
   1400142bd:	mov    DWORD PTR [rsp+0x288],r12d
   1400142c5:	lea    rdx,[rsp+0x70]
   1400142ca:	mov    rcx,r13
   1400142cd:	call   0x14000db90
   1400142d2:	mov    ebp,eax
   1400142d4:	mov    DWORD PTR [rsp+0x288],0x2
   1400142df:	lea    rdx,[rsp+0x70]
   1400142e4:	mov    rcx,r13
   1400142e7:	call   0x14000db90
   1400142ec:	cmp    ebp,r12d
   1400142ef:	jne    0x140014320
   1400142f1:	cmp    eax,r12d
   1400142f4:	jne    0x140014324
   1400142f6:	mov    DWORD PTR [rsp+0x288],r14d
   1400142fe:	mov    DWORD PTR [rsp+0x280],r12d
   140014306:	lea    rdx,[rsp+0x70]
   14001430b:	mov    rcx,r13
   14001430e:	call   0x14000db90
   140014313:	test   eax,eax
   140014315:	jne    0x140014328
   140014317:	or     DWORD PTR [rbx+0x208],0x8
   14001431e:	jmp    0x140014331
   140014320:	test   ebp,ebp
   140014322:	je     0x140014331
   140014324:	test   eax,eax
   140014326:	je     0x140014331
   140014328:	and    DWORD PTR [rbx+0x208],0xfffffffb
   14001432f:	jmp    0x140014338
   140014331:	or     DWORD PTR [rbx+0x208],0x4
   140014338:	mov    eax,DWORD PTR [rbx+0x208]
   14001433e:	test   al,0x4
   140014340:	je     0x140014346
   140014342:	test   al,0x10
   140014344:	jne    0x140014349
   140014346:	mov    r12d,r14d
   140014349:	mov    eax,esi
   14001434b:	lock xadd DWORD PTR [rdi+0x10],eax
   140014350:	add    eax,0xffffffff
   140014353:	test   eax,eax
   140014355:	jg     0x140014364
   140014357:	mov    rcx,QWORD PTR [rdi]
   14001435a:	mov    rax,QWORD PTR [rcx]
   14001435d:	mov    rdx,rdi
   140014360:	call   QWORD PTR [rax+0x8]
   140014363:	nop
   140014364:	mov    rdx,QWORD PTR [rsp+0x28]
   140014369:	add    rdx,0xffffffffffffffe8
   14001436d:	lock xadd DWORD PTR [rdx+0x10],esi
   140014372:	add    esi,0xffffffff
   140014375:	test   esi,esi
   140014377:	jg     0x140014382
   140014379:	mov    rcx,QWORD PTR [rdx]
   14001437c:	mov    rax,QWORD PTR [rcx]
   14001437f:	call   QWORD PTR [rax+0x8]
   140014382:	mov    eax,r12d
   140014385:	mov    rcx,QWORD PTR [rsp+0x290]
   14001438d:	xor    rcx,rsp
   140014390:	call   0x140046470
   140014395:	mov    rbx,QWORD PTR [rsp+0x2f0]
   14001439d:	add    rsp,0x2a0
   1400143a4:	pop    r15
   1400143a6:	pop    r14
   1400143a8:	pop    r13
   1400143aa:	pop    r12
   1400143ac:	pop    rdi
   1400143ad:	pop    rsi
   1400143ae:	pop    rbp
   1400143af:	ret    
   1400143b0:	rex push rbp
   1400143b2:	sub    rsp,0x20
   1400143b6:	mov    rbp,rdx
   1400143b9:	lea    rcx,[rbp+0x28]
   1400143bd:	call   0x140001090
   1400143c2:	add    rsp,0x20
   1400143c6:	pop    rbp
   1400143c7:	ret    
   1400143c8:	int3   
   1400143c9:	int3   
   1400143ca:	int3   
   1400143cb:	int3   
   1400143cc:	int3   
   1400143cd:	int3   
   1400143ce:	int3   
   1400143cf:	int3   
   1400143d0:	rex push rbp
   1400143d2:	sub    rsp,0x20
   1400143d6:	mov    rbp,rdx
   1400143d9:	lea    rcx,[rbp+0x28]
   1400143dd:	call   0x1400010c0
   1400143e2:	add    rsp,0x20
   1400143e6:	pop    rbp
   1400143e7:	ret    
   1400143e8:	int3   
   1400143e9:	int3   
   1400143ea:	int3   
   1400143eb:	int3   
   1400143ec:	int3   
   1400143ed:	int3   
   1400143ee:	int3   
   1400143ef:	int3   
   1400143f0:	rex push rbp
   1400143f2:	sub    rsp,0x20
   1400143f6:	mov    rbp,rdx
   1400143f9:	lea    rcx,[rbp+0x20]
   1400143fd:	call   0x140001090
   140014402:	add    rsp,0x20
   140014406:	pop    rbp
   140014407:	ret    
   140014408:	int3   
   140014409:	int3   
   14001440a:	int3   
   14001440b:	int3   
   14001440c:	int3   
   14001440d:	int3   
   14001440e:	int3   
   14001440f:	int3   
   140014410:	rex push rbp
   140014412:	sub    rsp,0x20
   140014416:	mov    rbp,rdx
   140014419:	lea    rcx,[rbp+0x20]
   14001441d:	call   0x1400010c0
   140014422:	add    rsp,0x20
   140014426:	pop    rbp
   140014427:	ret    
   140014428:	int3   
   140014429:	int3   
   14001442a:	int3   
   14001442b:	int3   
   14001442c:	int3   
   14001442d:	int3   
   14001442e:	int3   
   14001442f:	int3   
   140014430:	rex push rdi
   140014432:	push   r12
   140014434:	push   r13
   140014436:	push   r14
   140014438:	push   r15
   14001443a:	mov    eax,0x2550
   14001443f:	call   0x140063500
   140014444:	sub    rsp,rax
   140014447:	mov    QWORD PTR [rsp+0x110],0xfffffffffffffffe
   140014453:	mov    QWORD PTR [rsp+0x2588],rbx
   14001445b:	mov    QWORD PTR [rsp+0x2590],rbp
   140014463:	mov    QWORD PTR [rsp+0x2598],rsi
   14001446b:	mov    rax,QWORD PTR [rip+0x728fe]        # 0x140086d70
   140014472:	xor    rax,rsp
   140014475:	mov    QWORD PTR [rsp+0x2540],rax
   14001447d:	mov    rbx,rcx
   140014480:	mov    QWORD PTR [rsp+0x48],rcx
   140014485:	call   0x14002b874
   14001448a:	mov    rdx,rax
   14001448d:	xor    ebp,ebp
   14001448f:	mov    ecx,ebp
   140014491:	test   rax,rax
   140014494:	setne  cl
   140014497:	test   ecx,ecx
   140014499:	jne    0x1400144a6
   14001449b:	mov    ecx,0x80004005
   1400144a0:	call   0x140001430
   1400144a5:	int3   
   1400144a6:	mov    rax,QWORD PTR [rax]
   1400144a9:	mov    rcx,rdx
   1400144ac:	call   QWORD PTR [rax+0x18]
   1400144af:	add    rax,0x18
   1400144b3:	mov    QWORD PTR [rsp+0xb0],rax
   1400144bb:	lea    rsi,[rip+0x528a6]        # 0x140066d68
   1400144c2:	mov    rdi,rsi
   1400144c5:	shr    rdi,0x10
   1400144c9:	jne    0x1400144f4
   1400144cb:	movzx  ebx,si
   1400144ce:	mov    ecx,ebx
   1400144d0:	call   0x14002b860
   1400144d5:	test   rax,rax
   1400144d8:	je     0x140014506
   1400144da:	mov    r8d,ebx
   1400144dd:	mov    rdx,rax
   1400144e0:	lea    rcx,[rsp+0xb0]
   1400144e8:	call   0x140003650
   1400144ed:	mov    rbx,QWORD PTR [rsp+0x48]
   1400144f2:	jmp    0x14001450b
   1400144f4:	mov    rdx,rsi
   1400144f7:	lea    rcx,[rsp+0xb0]
   1400144ff:	call   0x140003930
   140014504:	jmp    0x14001450b
   140014506:	mov    rbx,QWORD PTR [rsp+0x48]
   14001450b:	call   0x14002b874
   140014510:	mov    rdx,rax
   140014513:	mov    ecx,ebp
   140014515:	test   rax,rax
   140014518:	setne  cl
   14001451b:	test   ecx,ecx
   14001451d:	jne    0x14001452a
   14001451f:	mov    ecx,0x80004005
   140014524:	call   0x140001430
   140014529:	int3   
   14001452a:	mov    rax,QWORD PTR [rax]
   14001452d:	mov    rcx,rdx
   140014530:	call   QWORD PTR [rax+0x18]
   140014533:	add    rax,0x18
   140014537:	mov    QWORD PTR [rsp+0xa0],rax
   14001453f:	test   rdi,rdi
   140014542:	jne    0x140014568
   140014544:	movzx  edi,si
   140014547:	mov    ecx,edi
   140014549:	call   0x14002b860
   14001454e:	test   rax,rax
   140014551:	je     0x140014579
   140014553:	mov    r8d,edi
   140014556:	mov    rdx,rax
   140014559:	lea    rcx,[rsp+0xa0]
   140014561:	call   0x140003650
   140014566:	jmp    0x140014579
   140014568:	mov    rdx,rsi
   14001456b:	lea    rcx,[rsp+0xa0]
   140014573:	call   0x140003930
   140014578:	nop
   140014579:	mov    WORD PTR [rsp+0x8e0],0x0
   140014583:	xor    edx,edx
   140014585:	mov    r8d,0x3fe
   14001458b:	lea    rcx,[rsp+0x8e2]
   140014593:	call   0x140047720
   140014598:	mov    WORD PTR [rsp+0x2140],0x0
   1400145a2:	xor    edx,edx
   1400145a4:	mov    r8d,0x3fe
   1400145aa:	lea    rcx,[rsp+0x2142]
   1400145b2:	call   0x140047720
   1400145b7:	mov    WORD PTR [rsp+0x1b30],0x0
   1400145c1:	xor    edx,edx
   1400145c3:	mov    r8d,0x3fe
   1400145c9:	lea    rcx,[rsp+0x1b32]
   1400145d1:	call   0x140047720
   1400145d6:	call   0x14002b874
   1400145db:	mov    rdx,rax
   1400145de:	mov    ecx,ebp
   1400145e0:	test   rax,rax
   1400145e3:	setne  cl
   1400145e6:	test   ecx,ecx
   1400145e8:	jne    0x1400145f5
   1400145ea:	mov    ecx,0x80004005
   1400145ef:	call   0x140001430
   1400145f4:	int3   
   1400145f5:	mov    rax,QWORD PTR [rax]
   1400145f8:	mov    rcx,rdx
   1400145fb:	call   QWORD PTR [rax+0x18]
   1400145fe:	add    rax,0x18
   140014602:	mov    QWORD PTR [rsp+0xc0],rax
   14001460a:	lea    rdx,[rip+0x50d37]        # 0x140065348
   140014611:	or     r14,0xffffffffffffffff
   140014615:	test   rdx,0xffffffffffff0000
   14001461c:	jne    0x140014642
   14001461e:	movzx  edi,dx
   140014621:	mov    ecx,edi
   140014623:	call   0x14002b860
   140014628:	test   rax,rax
   14001462b:	je     0x140014662
   14001462d:	mov    r8d,edi
   140014630:	mov    rdx,rax
   140014633:	lea    rcx,[rsp+0xc0]
   14001463b:	call   0x140003650
   140014640:	jmp    0x140014662
   140014642:	xor    eax,eax
   140014644:	mov    rcx,r14
   140014647:	mov    rdi,rdx
   14001464a:	repnz scas ax,WORD PTR es:[rdi]
   14001464d:	not    rcx
   140014650:	lea    r8d,[rcx-0x1]
   140014654:	lea    rcx,[rsp+0xc0]
   14001465c:	call   0x1400037d0
   140014661:	nop
   140014662:	mov    DWORD PTR [rsp+0x78],ebp
   140014666:	mov    DWORD PTR [rsp+0x64],ebp
   14001466a:	mov    r12d,ebp
   14001466d:	mov    DWORD PTR [rsp+0x60],ebp
   140014671:	mov    r13d,ebp
   140014674:	call   0x14002b874
   140014679:	mov    rdx,rax
   14001467c:	mov    ecx,ebp
   14001467e:	test   rax,rax
   140014681:	setne  cl
   140014684:	test   ecx,ecx
   140014686:	jne    0x140014693
   140014688:	mov    ecx,0x80004005
   14001468d:	call   0x140001430
   140014692:	int3   
   140014693:	mov    rax,QWORD PTR [rax]
   140014696:	mov    rcx,rdx
   140014699:	call   QWORD PTR [rax+0x18]
   14001469c:	add    rax,0x18
   1400146a0:	mov    QWORD PTR [rsp+0xd0],rax
   1400146a8:	call   0x14002b874
   1400146ad:	mov    rdx,rax
   1400146b0:	mov    ecx,ebp
   1400146b2:	test   rax,rax
   1400146b5:	setne  cl
   1400146b8:	test   ecx,ecx
   1400146ba:	jne    0x1400146c7
   1400146bc:	mov    ecx,0x80004005
   1400146c1:	call   0x140001430
   1400146c6:	int3   
   1400146c7:	mov    rax,QWORD PTR [rax]
   1400146ca:	mov    rcx,rdx
   1400146cd:	call   QWORD PTR [rax+0x18]
   1400146d0:	add    rax,0x18
   1400146d4:	mov    QWORD PTR [rsp+0x40],rax
   1400146d9:	call   0x14002b874
   1400146de:	mov    rdx,rax
   1400146e1:	mov    ecx,ebp
   1400146e3:	test   rax,rax
   1400146e6:	setne  cl
   1400146e9:	test   ecx,ecx
   1400146eb:	jne    0x1400146f8
   1400146ed:	mov    ecx,0x80004005
   1400146f2:	call   0x140001430
   1400146f7:	int3   
   1400146f8:	mov    rax,QWORD PTR [rax]
   1400146fb:	mov    rcx,rdx
   1400146fe:	call   QWORD PTR [rax+0x18]
   140014701:	add    rax,0x18
   140014705:	mov    QWORD PTR [rsp+0x68],rax
   14001470a:	lea    rax,[rip+0x50dbf]        # 0x1400654d0
   140014711:	test   rax,0xffffffffffff0000
   140014717:	jne    0x14001473a
   140014719:	movzx  edi,ax
   14001471c:	mov    ecx,edi
   14001471e:	call   0x14002b860
   140014723:	test   rax,rax
   140014726:	je     0x140014748
   140014728:	mov    r8d,edi
   14001472b:	mov    rdx,rax
   14001472e:	lea    rcx,[rsp+0x68]
   140014733:	call   0x140003650
   140014738:	jmp    0x140014748
   14001473a:	mov    rdx,rax
   14001473d:	lea    rcx,[rsp+0x68]
   140014742:	call   0x140003930
   140014747:	nop
   140014748:	mov    DWORD PTR [rsp+0xa8],ebp
   14001474f:	mov    r15d,ebp
   140014752:	mov    DWORD PTR [rsp+0x70],ebp
   140014756:	call   0x14002b874
   14001475b:	mov    rdx,rax
   14001475e:	mov    ecx,ebp
   140014760:	test   rax,rax
   140014763:	setne  cl
   140014766:	test   ecx,ecx
   140014768:	jne    0x140014775
   14001476a:	mov    ecx,0x80004005
   14001476f:	call   0x140001430
   140014774:	int3   
   140014775:	mov    rax,QWORD PTR [rax]
   140014778:	mov    rcx,rdx
   14001477b:	call   QWORD PTR [rax+0x18]
   14001477e:	add    rax,0x18
   140014782:	mov    QWORD PTR [rsp+0x58],rax
   140014787:	lea    rdi,[rip+0xfffffffffffec932]        # 0x1400010c0
   14001478e:	mov    QWORD PTR [rsp+0x20],rdi
   140014793:	lea    r9,[rip+0xfffffffffffee696]        # 0x140002e30
   14001479a:	mov    edx,0x8
   14001479f:	lea    r8d,[rdx+0x5c]
   1400147a3:	lea    rcx,[rsp+0x130]
   1400147ab:	call   0x140047810
   1400147b0:	nop
   1400147b1:	lea    rcx,[rsp+0x130]
   1400147b9:	call   0x1400043f0
   1400147be:	nop
   1400147bf:	lea    rdx,[rsp+0x100]
   1400147c7:	mov    rcx,rbx
   1400147ca:	call   0x14000b810
   1400147cf:	nop
   1400147d0:	lea    r8,[rip+0x51139]        # 0x140065910
   1400147d7:	mov    rdx,rax
   1400147da:	lea    rcx,[rsp+0xf8]
   1400147e2:	call   0x140003f80
   1400147e7:	mov    r8,QWORD PTR [rax]
   1400147ea:	mov    edx,0x200
   1400147ef:	lea    rcx,[rsp+0x1100]
   1400147f7:	call   0x140047080
   1400147fc:	mov    rdx,QWORD PTR [rsp+0xf8]
   140014804:	add    rdx,0xffffffffffffffe8
   140014808:	mov    eax,r14d
   14001480b:	lock xadd DWORD PTR [rdx+0x10],eax
   140014810:	add    eax,0xffffffff
   140014813:	test   eax,eax
   140014815:	jg     0x140014821
   140014817:	mov    rcx,QWORD PTR [rdx]
   14001481a:	mov    rax,QWORD PTR [rcx]
   14001481d:	call   QWORD PTR [rax+0x8]
   140014820:	nop
   140014821:	mov    rdx,QWORD PTR [rsp+0x100]
   140014829:	add    rdx,0xffffffffffffffe8
   14001482d:	mov    eax,r14d
   140014830:	lock xadd DWORD PTR [rdx+0x10],eax
   140014835:	add    eax,0xffffffff
   140014838:	test   eax,eax
   14001483a:	jg     0x140014845
   14001483c:	mov    rcx,QWORD PTR [rdx]
   14001483f:	mov    rax,QWORD PTR [rcx]
   140014842:	call   QWORD PTR [rax+0x8]
   140014845:	xor    edx,edx
   140014847:	mov    r8d,0x250
   14001484d:	lea    rcx,[rsp+0x480]
   140014855:	call   0x140047720
   14001485a:	lea    r8,[rsp+0x1100]
   140014862:	mov    edx,0x200
   140014867:	lea    rcx,[rsp+0x8e0]
   14001486f:	call   0x140047080
   140014874:	mov    r8,QWORD PTR [rip+0x742fd]        # 0x140088b78
   14001487b:	mov    edx,0x200
   140014880:	lea    rcx,[rsp+0x8e0]
   140014888:	call   0x140047130
   14001488d:	lea    r8,[rip+0x526a4]        # 0x140066f38
   140014894:	mov    edx,0x200
   140014899:	lea    rcx,[rsp+0x8e0]
   1400148a1:	call   0x140047130
   1400148a6:	lea    rdx,[rsp+0x480]
   1400148ae:	lea    rcx,[rsp+0x8e0]
   1400148b6:	call   QWORD PTR [rip+0x4fc6c]        # 0x140064528
   1400148bc:	cmp    rax,0xffffffffffffffff
   1400148c0:	je     0x14001679b
   1400148c6:	mov    rcx,rax
   1400148c9:	call   QWORD PTR [rip+0x4fc69]        # 0x140064538
   1400148cf:	mov    r9d,0x6
   1400148d5:	xor    r8d,r8d
   1400148d8:	xor    edx,edx
   1400148da:	xor    ecx,ecx
   1400148dc:	call   QWORD PTR [rip+0x4fe3e]        # 0x140064720
   1400148e2:	mov    QWORD PTR [rsp+0xb8],rax
   1400148ea:	mov    DWORD PTR [rsp+0x460],0x20
   1400148f5:	mov    DWORD PTR [rsp+0x74],ebp
   1400148f9:	lea    r8,[rsp+0x460]
   140014901:	xor    edx,edx
   140014903:	mov    rcx,rax
   140014906:	call   QWORD PTR [rip+0x4fe1c]        # 0x140064728
   14001490c:	mov    ecx,0x1
   140014911:	test   eax,eax
   140014913:	je     0x140015d2d
   140014919:	mov    rbx,QWORD PTR [rsp+0x40]
   14001491e:	mov    rsi,QWORD PTR [rsp+0x58]
   140014923:	mov    QWORD PTR [rsp+0x20],rbp
   140014928:	mov    r9d,0x104
   14001492e:	lea    r8,[rsp+0xce0]
   140014936:	lea    rdx,[rsp+0x460]
   14001493e:	mov    rcx,QWORD PTR [rsp+0xb8]
   140014946:	call   QWORD PTR [rip+0x4fde4]        # 0x140064730
   14001494c:	lea    rdx,[rip+0x525d5]        # 0x140066f28
   140014953:	lea    rcx,[rsp+0xce0]
   14001495b:	call   0x140046660
   140014960:	test   rax,rax
   140014963:	jne    0x140014982
   140014965:	lea    rdx,[rip+0x526ec]        # 0x140067058
   14001496c:	lea    rcx,[rsp+0xce0]
   140014974:	call   0x140046660
   140014979:	test   rax,rax
   14001497c:	je     0x140015c91
   140014982:	lea    rdx,[rip+0x5259f]        # 0x140066f28
   140014989:	lea    rcx,[rsp+0xce0]
   140014991:	call   0x140046660
   140014996:	mov    edi,ebp
   140014998:	test   rax,rax
   14001499b:	mov    eax,0x1
   1400149a0:	cmovne edi,eax
   1400149a3:	lea    rdx,[rip+0x526ae]        # 0x140067058
   1400149aa:	lea    rcx,[rsp+0xce0]
   1400149b2:	call   0x140046660
   1400149b7:	mov    r12d,ebp
   1400149ba:	test   rax,rax
   1400149bd:	mov    eax,0x1
   1400149c2:	cmovne r12d,eax
   1400149c6:	mov    DWORD PTR [rsp+0x98],r12d
   1400149ce:	mov    eax,ebp
   1400149d0:	mov    ecx,DWORD PTR [rip+0x73e22]        # 0x1400887f8
   1400149d6:	cmp    ecx,0x5a
   1400149d9:	mov    edx,0x5
   1400149de:	cmovl  eax,edx
   1400149e1:	add    ecx,eax
   1400149e3:	mov    DWORD PTR [rip+0x73e0f],ecx        # 0x1400887f8
   1400149e9:	movsxd r8,ecx
   1400149ec:	xor    r9d,r9d
   1400149ef:	mov    edx,0x402
   1400149f4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400149f9:	mov    rcx,QWORD PTR [rcx+0xeb180]
   140014a00:	call   QWORD PTR [rip+0x5016a]        # 0x140064b70
   140014a06:	xor    edx,edx
   140014a08:	mov    rcx,QWORD PTR [rsp+0x48]
   140014a0d:	call   0x1400018d0
   140014a12:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014a1a:	lea    rcx,[rsp+0xce0]
   140014a22:	call   0x140046660
   140014a27:	test   rax,rax
   140014a2a:	je     0x140015c8c
   140014a30:	lea    r8,[rsp+0xce0]
   140014a38:	mov    edx,0x104
   140014a3d:	lea    rcx,[rsp+0xef0]
   140014a45:	call   0x140047080
   140014a4a:	lea    r8,[rsp+0xce0]
   140014a52:	mov    edx,0x104
   140014a57:	lea    rcx,[rsp+0x1500]
   140014a5f:	call   0x140047080
   140014a64:	test   r12d,r12d
   140014a67:	je     0x140014a75
   140014a69:	mov    WORD PTR [rsp+0x157a],0x0
   140014a73:	jmp    0x140014a7f
   140014a75:	mov    WORD PTR [rsp+0x1574],0x0
   140014a7f:	add    r13d,0x1
   140014a83:	mov    DWORD PTR [rsp+0x50],r13d
   140014a88:	mov    r13d,0x1
   140014a8e:	mov    DWORD PTR [rsp+0x60],r13d
   140014a93:	test   r12d,r12d
   140014a96:	jne    0x140014c9b
   140014a9c:	test   edi,edi
   140014a9e:	je     0x140014c94
   140014aa4:	mov    rdi,QWORD PTR [rsp+0x48]
   140014aa9:	cmp    DWORD PTR [rdi+0xeb138],r12d
   140014ab0:	je     0x140014ca0
   140014ab6:	lea    r8,[rsp+0xce0]
   140014abe:	mov    edx,0x104
   140014ac3:	lea    rcx,[rsp+0x1710]
   140014acb:	call   0x140047080
   140014ad0:	mov    WORD PTR [rsp+0x1772],r12w
   140014ad9:	xor    eax,eax
   140014adb:	mov    rcx,r14
   140014ade:	lea    rdi,[rsp+0x1710]
   140014ae6:	repnz scas ax,WORD PTR es:[rdi]
   140014ae9:	not    rcx
   140014aec:	sub    rcx,r13
   140014aef:	mov    rdi,rcx
   140014af2:	test   ecx,ecx
   140014af4:	jne    0x140014b53
   140014af6:	lea    rdx,[rsi-0x18]
   140014afa:	mov    rdi,QWORD PTR [rdx]
   140014afd:	cmp    DWORD PTR [rdx+0x8],eax
   140014b00:	je     0x140014be3
   140014b06:	cmp    DWORD PTR [rdx+0x10],eax
   140014b09:	jge    0x140014b1f
   140014b0b:	cmp    DWORD PTR [rsi-0xc],eax
   140014b0e:	jl     0x140015cbd
   140014b14:	mov    DWORD PTR [rsi-0x10],ebp
   140014b17:	mov    WORD PTR [rsi],ax
   140014b1a:	jmp    0x140014be3
   140014b1f:	mov    eax,r14d
   140014b22:	lock xadd DWORD PTR [rdx+0x10],eax
   140014b27:	add    eax,0xffffffff
   140014b2a:	test   eax,eax
   140014b2c:	jg     0x140014b37
   140014b2e:	mov    rcx,QWORD PTR [rdx]
   140014b31:	mov    rax,QWORD PTR [rcx]
   140014b34:	call   QWORD PTR [rax+0x8]
   140014b37:	mov    rax,QWORD PTR [rdi]
   140014b3a:	mov    rcx,rdi
   140014b3d:	call   QWORD PTR [rax+0x18]
   140014b40:	add    rax,0x18
   140014b44:	mov    QWORD PTR [rsp+0x58],rax
   140014b49:	mov    rbx,QWORD PTR [rsp+0x40]
   140014b4e:	jmp    0x140014be3
   140014b53:	mov    ebp,DWORD PTR [rsi-0x10]
   140014b56:	lea    r12,[rsp+0x1710]
   140014b5e:	sub    r12,rsi
   140014b61:	sar    r12,1
   140014b64:	mov    ecx,r13d
   140014b67:	sub    ecx,DWORD PTR [rsi-0x8]
   140014b6a:	mov    eax,DWORD PTR [rsi-0xc]
   140014b6d:	sub    eax,edi
   140014b6f:	or     eax,ecx
   140014b71:	jge    0x140014b84
   140014b73:	mov    edx,edi
   140014b75:	lea    rcx,[rsp+0x58]
   140014b7a:	call   0x140002d40
   140014b7f:	mov    rsi,QWORD PTR [rsp+0x58]
   140014b84:	cmp    r12,rbp
   140014b87:	ja     0x140014ba4
   140014b89:	movsxd rax,edi
   140014b8c:	lea    rbp,[rax+rax*1]
   140014b90:	lea    r8,[rsi+r12*2]
   140014b94:	mov    r9,rbp
   140014b97:	mov    rdx,rbp
   140014b9a:	mov    rcx,rsi
   140014b9d:	call   0x1400467a0
   140014ba2:	jmp    0x140014bc1
   140014ba4:	movsxd rax,edi
   140014ba7:	lea    rbp,[rax+rax*1]
   140014bab:	mov    r9,rbp
   140014bae:	lea    r8,[rsp+0x1710]
   140014bb6:	mov    rdx,rbp
   140014bb9:	mov    rcx,rsi
   140014bbc:	call   0x1400466d0
   140014bc1:	test   edi,edi
   140014bc3:	js     0x140015cce
   140014bc9:	cmp    edi,DWORD PTR [rsi-0xc]
   140014bcc:	jg     0x140015cce
   140014bd2:	mov    DWORD PTR [rsi-0x10],edi
   140014bd5:	mov    WORD PTR [rsi+rbp*1],0x0
   140014bdb:	mov    r12d,DWORD PTR [rsp+0x98]
   140014be3:	lea    r8,[rip+0x5246e]        # 0x140067058
   140014bea:	lea    rdx,[rip+0x52337]        # 0x140066f28
   140014bf1:	lea    rcx,[rsp+0x58]
   140014bf6:	call   0x140003a70
   140014bfb:	mov    rsi,QWORD PTR [rsp+0x58]
   140014c00:	mov    rcx,QWORD PTR [rsi-0x18]
   140014c04:	mov    rax,QWORD PTR [rcx]
   140014c07:	call   QWORD PTR [rax+0x20]
   140014c0a:	mov    rcx,rax
   140014c0d:	cmp    DWORD PTR [rsi-0x8],0x0
   140014c11:	jl     0x140014c2e
   140014c13:	cmp    rax,QWORD PTR [rsi-0x18]
   140014c17:	jne    0x140014c2e
   140014c19:	lea    rbp,[rsi-0x18]
   140014c1d:	lock add DWORD PTR [rsi-0x8],r13d
   140014c22:	mov    rbx,QWORD PTR [rsp+0x40]
   140014c27:	mov    rsi,QWORD PTR [rsp+0x58]
   140014c2c:	jmp    0x140014c6a
   140014c2e:	mov    rax,QWORD PTR [rax]
   140014c31:	mov    r8d,0x2
   140014c37:	mov    edx,DWORD PTR [rsi-0x10]
   140014c3a:	call   QWORD PTR [rax]
   140014c3c:	mov    rbp,rax
   140014c3f:	test   rax,rax
   140014c42:	je     0x140015cc8
   140014c48:	mov    ecx,DWORD PTR [rsi-0x10]
   140014c4b:	mov    DWORD PTR [rax+0x8],ecx
   140014c4e:	mov    ecx,DWORD PTR [rsi-0x10]
   140014c51:	add    ecx,r13d
   140014c54:	movsxd rdx,ecx
   140014c57:	lea    r9,[rdx+rdx*1]
   140014c5b:	mov    r8,rsi
   140014c5e:	add    rdx,rdx
   140014c61:	lea    rcx,[rax+0x18]
   140014c65:	call   0x1400466d0
   140014c6a:	lea    rax,[rbp+0x18]
   140014c6e:	mov    QWORD PTR [rsp+0xe8],rax
   140014c76:	lea    rdx,[rsp+0xe8]
   140014c7e:	lea    rcx,[rsp+0x130]
   140014c86:	call   0x140004f50
   140014c8b:	xor    ebp,ebp
   140014c8d:	mov    rdi,QWORD PTR [rsp+0x48]
   140014c92:	jmp    0x140014ca0
   140014c94:	mov    rdi,QWORD PTR [rsp+0x48]
   140014c99:	jmp    0x140014ca0
   140014c9b:	mov    rdi,QWORD PTR [rsp+0x48]
   140014ca0:	mov    r15d,ebp
   140014ca3:	mov    eax,ebp
   140014ca5:	mov    ecx,DWORD PTR [rip+0x73b4d]        # 0x1400887f8
   140014cab:	cmp    ecx,0x5a
   140014cae:	mov    edx,0xa
   140014cb3:	cmovl  eax,edx
   140014cb6:	add    ecx,eax
   140014cb8:	mov    DWORD PTR [rip+0x73b3a],ecx        # 0x1400887f8
   140014cbe:	movsxd r8,ecx
   140014cc1:	xor    r9d,r9d
   140014cc4:	mov    edx,0x402
   140014cc9:	mov    rcx,QWORD PTR [rdi+0xeb180]
   140014cd0:	call   QWORD PTR [rip+0x4fe9a]        # 0x140064b70
   140014cd6:	xor    edx,edx
   140014cd8:	mov    rcx,rdi
   140014cdb:	call   0x1400018d0
   140014ce0:	test   r12d,r12d
   140014ce3:	je     0x140014cf1
   140014ce5:	mov    WORD PTR [rsp+0xf58],0x0
   140014cef:	jmp    0x140014cfb
   140014cf1:	mov    WORD PTR [rsp+0xf52],0x0
   140014cfb:	xor    edx,edx
   140014cfd:	mov    r8d,0x250
   140014d03:	lea    rcx,[rsp+0x480]
   140014d0b:	call   0x140047720
   140014d10:	lea    r8,[rsp+0x1100]
   140014d18:	mov    edx,0x200
   140014d1d:	lea    rcx,[rsp+0x8e0]
   140014d25:	call   0x140047080
   140014d2a:	mov    r8,QWORD PTR [rip+0x73e47]        # 0x140088b78
   140014d31:	mov    edx,0x200
   140014d36:	lea    rcx,[rsp+0x8e0]
   140014d3e:	call   0x140047130
   140014d43:	lea    r8,[rip+0x521ee]        # 0x140066f38
   140014d4a:	mov    edx,0x200
   140014d4f:	lea    rcx,[rsp+0x8e0]
   140014d57:	call   0x140047130
   140014d5c:	lea    rdx,[rsp+0x480]
   140014d64:	lea    rcx,[rsp+0x8e0]
   140014d6c:	call   QWORD PTR [rip+0x4f7b6]        # 0x140064528
   140014d72:	mov    r13,rax
   140014d75:	cmp    rax,0xffffffffffffffff
   140014d79:	je     0x140015057
   140014d7f:	nop
   140014d80:	lea    r8,[rsp+0x1100]
   140014d88:	mov    edx,0x200
   140014d8d:	lea    rcx,[rsp+0x8e0]
   140014d95:	call   0x140047080
   140014d9a:	lea    r8,[rsp+0x4ac]
   140014da2:	mov    edx,0x200
   140014da7:	lea    rcx,[rsp+0x8e0]
   140014daf:	call   0x140047130
   140014db4:	xor    r9d,r9d
   140014db7:	xor    edx,edx
   140014db9:	lea    r8d,[r9+0x2]
   140014dbd:	lea    rcx,[rsp+0x8e0]
   140014dc5:	call   QWORD PTR [rip+0x4f8f5]        # 0x1400646c0
   140014dcb:	mov    r12,rax
   140014dce:	cmp    rax,0xffffffffffffffff
   140014dd2:	je     0x14001502c
   140014dd8:	lea    r9,[rsp+0x80]
   140014de0:	xor    r8d,r8d
   140014de3:	lea    rdx,[rip+0x519ce]        # 0x1400667b8
   140014dea:	mov    rcx,rax
   140014ded:	call   QWORD PTR [rip+0x4f905]        # 0x1400646f8
   140014df3:	test   eax,eax
   140014df5:	je     0x140015023
   140014dfb:	mov    QWORD PTR [rsp+0x20],rbp
   140014e00:	mov    r9d,0x104
   140014e06:	lea    r8,[rsp+0x6d0]
   140014e0e:	mov    edx,0x1
   140014e13:	lea    rcx,[rsp+0x80]
   140014e1b:	call   QWORD PTR [rip+0x4f8cf]        # 0x1400646f0
   140014e21:	test   eax,eax
   140014e23:	je     0x140015023
   140014e29:	lea    rax,[rsp+0x80]
   140014e31:	mov    QWORD PTR [rsp+0x20],rax
   140014e36:	xor    r9d,r9d
   140014e39:	lea    r8,[rsp+0x6d0]
   140014e41:	mov    rdx,r12
   140014e44:	mov    rcx,rdi
   140014e47:	call   0x140002340
   140014e4c:	test   eax,eax
   140014e4e:	jne    0x140014e5e
   140014e50:	mov    rcx,r12
   140014e53:	call   QWORD PTR [rip+0x4f86f]        # 0x1400646c8
   140014e59:	jmp    0x140015031
   140014e5e:	lea    r9,[rsp+0x80]
   140014e66:	xor    r8d,r8d
   140014e69:	lea    rdx,[rsp+0x6d0]
   140014e71:	mov    rcx,r12
   140014e74:	call   QWORD PTR [rip+0x4f87e]        # 0x1400646f8
   140014e7a:	test   eax,eax
   140014e7c:	je     0x140015023
   140014e82:	mov    QWORD PTR [rsp+0x20],rbp
   140014e87:	mov    r9d,0x104
   140014e8d:	lea    r8,[rsp+0x6d0]
   140014e95:	mov    edx,0x2
   140014e9a:	lea    rcx,[rsp+0x80]
   140014ea2:	call   QWORD PTR [rip+0x4f848]        # 0x1400646f0
   140014ea8:	test   eax,eax
   140014eaa:	je     0x140014fd8
   140014eb0:	xor    eax,eax
   140014eb2:	mov    rcx,r14
   140014eb5:	lea    rdi,[rsp+0x6d0]
   140014ebd:	repnz scas ax,WORD PTR es:[rdi]
   140014ec0:	not    rcx
   140014ec3:	sub    rcx,0x1
   140014ec7:	mov    rdi,rcx
   140014eca:	test   ecx,ecx
   140014ecc:	jne    0x140014f26
   140014ece:	lea    rdx,[rbx-0x18]
   140014ed2:	mov    rdi,QWORD PTR [rdx]
   140014ed5:	cmp    DWORD PTR [rdx+0x8],eax
   140014ed8:	je     0x140014fb2
   140014ede:	cmp    DWORD PTR [rdx+0x10],eax
   140014ee1:	jge    0x140014ef7
   140014ee3:	cmp    DWORD PTR [rbx-0xc],eax
   140014ee6:	jl     0x140015cd9
   140014eec:	mov    DWORD PTR [rbx-0x10],ebp
   140014eef:	mov    WORD PTR [rbx],ax
   140014ef2:	jmp    0x140014fb2
   140014ef7:	mov    eax,r14d
   140014efa:	lock xadd DWORD PTR [rdx+0x10],eax
   140014eff:	add    eax,0xffffffff
   140014f02:	test   eax,eax
   140014f04:	jg     0x140014f0f
   140014f06:	mov    rcx,QWORD PTR [rdx]
   140014f09:	mov    rax,QWORD PTR [rcx]
   140014f0c:	call   QWORD PTR [rax+0x8]
   140014f0f:	mov    rax,QWORD PTR [rdi]
   140014f12:	mov    rcx,rdi
   140014f15:	call   QWORD PTR [rax+0x18]
   140014f18:	lea    rbx,[rax+0x18]
   140014f1c:	mov    QWORD PTR [rsp+0x40],rbx
   140014f21:	jmp    0x140014fb2
   140014f26:	mov    esi,DWORD PTR [rbx-0x10]
   140014f29:	lea    rbp,[rsp+0x6d0]
   140014f31:	sub    rbp,rbx
   140014f34:	sar    rbp,1
   140014f37:	mov    ecx,0x1
   140014f3c:	sub    ecx,DWORD PTR [rbx-0x8]
   140014f3f:	mov    eax,DWORD PTR [rbx-0xc]
   140014f42:	sub    eax,edi
   140014f44:	or     eax,ecx
   140014f46:	jge    0x140014f59
   140014f48:	mov    edx,edi
   140014f4a:	lea    rcx,[rsp+0x40]
   140014f4f:	call   0x140002d40
   140014f54:	mov    rbx,QWORD PTR [rsp+0x40]
   140014f59:	cmp    rbp,rsi
   140014f5c:	ja     0x140014f79
   140014f5e:	movsxd rax,edi
   140014f61:	lea    rsi,[rax+rax*1]
   140014f65:	lea    r8,[rbx+rbp*2]
   140014f69:	mov    r9,rsi
   140014f6c:	mov    rdx,rsi
   140014f6f:	mov    rcx,rbx
   140014f72:	call   0x1400467a0
   140014f77:	jmp    0x140014f96
   140014f79:	movsxd rax,edi
   140014f7c:	lea    rsi,[rax+rax*1]
   140014f80:	mov    r9,rsi
   140014f83:	lea    r8,[rsp+0x6d0]
   140014f8b:	mov    rdx,rsi
   140014f8e:	mov    rcx,rbx
   140014f91:	call   0x1400466d0
   140014f96:	test   edi,edi
   140014f98:	js     0x140015ce4
   140014f9e:	cmp    edi,DWORD PTR [rbx-0xc]
   140014fa1:	jg     0x140015ce4
   140014fa7:	mov    DWORD PTR [rbx-0x10],edi
   140014faa:	mov    WORD PTR [rsi+rbx*1],0x0
   140014fb0:	xor    ebp,ebp
   140014fb2:	cmp    DWORD PTR [rbx-0x10],0x0
   140014fb6:	jl     0x140014fd8
   140014fb8:	lea    rdx,[rsp+0xef0]
   140014fc0:	mov    rcx,rbx
   140014fc3:	call   0x140046660
   140014fc8:	test   rax,rax
   140014fcb:	je     0x140014fd8
   140014fcd:	sub    rax,rbx
   140014fd0:	sar    rax,1
   140014fd3:	cmp    eax,0xffffffff
   140014fd6:	jne    0x140014ff7
   140014fd8:	lea    rdx,[rsp+0x80]
   140014fe0:	lea    rcx,[rsp+0x80]
   140014fe8:	call   QWORD PTR [rip+0x4f6ea]        # 0x1400646d8
   140014fee:	test   eax,eax
   140014ff0:	je     0x14001501e
   140014ff2:	jmp    0x140014e82
   140014ff7:	lea    r8,[rsp+0x8e0]
   140014fff:	mov    edx,0x200
   140015004:	lea    rcx,[rsp+0x2140]
   14001500c:	call   0x140047080
   140015011:	mov    r15d,0x1
   140015017:	mov    rdi,QWORD PTR [rsp+0x48]
   14001501c:	jmp    0x140015023
   14001501e:	mov    rdi,QWORD PTR [rsp+0x48]
   140015023:	mov    rcx,r12
   140015026:	call   QWORD PTR [rip+0x4f69c]        # 0x1400646c8
   14001502c:	test   r15d,r15d
   14001502f:	jne    0x14001504a
   140015031:	lea    rdx,[rsp+0x480]
   140015039:	mov    rcx,r13
   14001503c:	call   QWORD PTR [rip+0x4f4ee]        # 0x140064530
   140015042:	test   eax,eax
   140015044:	jne    0x140014d80
   14001504a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001504f:	mov    r12d,DWORD PTR [rsp+0x98]
   140015057:	mov    rcx,r13
   14001505a:	call   QWORD PTR [rip+0x4f4d8]        # 0x140064538
   140015060:	test   r15d,r15d
   140015063:	jne    0x1400157f3
   140015069:	test   r12d,r12d
   14001506c:	je     0x140015079
   14001506e:	mov    WORD PTR [rsp+0xf38],r15w
   140015077:	jmp    0x140015083
   140015079:	mov    WORD PTR [rsp+0xf32],0x0
   140015083:	xor    edx,edx
   140015085:	mov    r8d,0x250
   14001508b:	lea    rcx,[rsp+0x480]
   140015093:	call   0x140047720
   140015098:	lea    r8,[rsp+0x1100]
   1400150a0:	mov    edx,0x200
   1400150a5:	lea    rcx,[rsp+0x8e0]
   1400150ad:	call   0x140047080
   1400150b2:	mov    r8,QWORD PTR [rip+0x73abf]        # 0x140088b78
   1400150b9:	mov    edx,0x200
   1400150be:	lea    rcx,[rsp+0x8e0]
   1400150c6:	call   0x140047130
   1400150cb:	lea    r8,[rip+0x51e66]        # 0x140066f38
   1400150d2:	mov    edx,0x200
   1400150d7:	lea    rcx,[rsp+0x8e0]
   1400150df:	call   0x140047130
   1400150e4:	lea    rdx,[rsp+0x480]
   1400150ec:	lea    rcx,[rsp+0x8e0]
   1400150f4:	call   QWORD PTR [rip+0x4f42e]        # 0x140064528
   1400150fa:	mov    r13,rax
   1400150fd:	cmp    rax,0xffffffffffffffff
   140015101:	je     0x1400153fd
   140015107:	data16 xchg ax,ax
   14001510a:	data16 xchg ax,ax
   14001510d:	data16 xchg ax,ax
   140015110:	lea    r8,[rsp+0x1100]
   140015118:	mov    edx,0x200
   14001511d:	lea    rcx,[rsp+0x8e0]
   140015125:	call   0x140047080
   14001512a:	lea    r8,[rsp+0x4ac]
   140015132:	mov    edx,0x200
   140015137:	lea    rcx,[rsp+0x8e0]
   14001513f:	call   0x140047130
   140015144:	xor    r9d,r9d
   140015147:	xor    edx,edx
   140015149:	lea    r8d,[r9+0x2]
   14001514d:	lea    rcx,[rsp+0x8e0]
   140015155:	call   QWORD PTR [rip+0x4f565]        # 0x1400646c0
   14001515b:	mov    r12,rax
   14001515e:	cmp    rax,0xffffffffffffffff
   140015162:	je     0x1400153d5
   140015168:	lea    r9,[rsp+0x80]
   140015170:	xor    r8d,r8d
   140015173:	lea    rdx,[rip+0x5163e]        # 0x1400667b8
   14001517a:	mov    rcx,rax
   14001517d:	call   QWORD PTR [rip+0x4f575]        # 0x1400646f8
   140015183:	test   eax,eax
   140015185:	je     0x1400153cc
   14001518b:	mov    QWORD PTR [rsp+0x20],rbp
   140015190:	mov    r9d,0x104
   140015196:	lea    r8,[rsp+0x6d0]
   14001519e:	mov    edx,0x1
   1400151a3:	lea    rcx,[rsp+0x80]
   1400151ab:	call   QWORD PTR [rip+0x4f53f]        # 0x1400646f0
   1400151b1:	test   eax,eax
   1400151b3:	je     0x1400153cc
   1400151b9:	lea    rax,[rsp+0x80]
   1400151c1:	mov    QWORD PTR [rsp+0x20],rax
   1400151c6:	xor    r9d,r9d
   1400151c9:	lea    r8,[rsp+0x6d0]
   1400151d1:	mov    rdx,r12
   1400151d4:	mov    rcx,rdi
   1400151d7:	call   0x140002340
   1400151dc:	test   eax,eax
   1400151de:	jne    0x1400151ee
   1400151e0:	mov    rcx,r12
   1400151e3:	call   QWORD PTR [rip+0x4f4df]        # 0x1400646c8
   1400151e9:	jmp    0x1400153df
   1400151ee:	lea    r9,[rsp+0x80]
   1400151f6:	xor    r8d,r8d
   1400151f9:	lea    rdx,[rsp+0x6d0]
   140015201:	mov    rcx,r12
   140015204:	call   QWORD PTR [rip+0x4f4ee]        # 0x1400646f8
   14001520a:	test   eax,eax
   14001520c:	je     0x1400153cc
   140015212:	mov    QWORD PTR [rsp+0x20],rbp
   140015217:	mov    r9d,0x104
   14001521d:	lea    r8,[rsp+0x6d0]
   140015225:	mov    edx,0x2
   14001522a:	lea    rcx,[rsp+0x80]
   140015232:	call   QWORD PTR [rip+0x4f4b8]        # 0x1400646f0
   140015238:	test   eax,eax
   14001523a:	je     0x14001538d
   140015240:	xor    eax,eax
   140015242:	mov    rcx,r14
   140015245:	lea    rdi,[rsp+0x6d0]
   14001524d:	repnz scas ax,WORD PTR es:[rdi]
   140015250:	not    rcx
   140015253:	sub    rcx,0x1
   140015257:	mov    rdi,rcx
   14001525a:	test   ecx,ecx
   14001525c:	jne    0x1400152b6
   14001525e:	lea    rdx,[rbx-0x18]
   140015262:	mov    rdi,QWORD PTR [rdx]
   140015265:	cmp    DWORD PTR [rdx+0x8],eax
   140015268:	je     0x140015342
   14001526e:	cmp    DWORD PTR [rdx+0x10],eax
   140015271:	jge    0x140015287
   140015273:	cmp    DWORD PTR [rbx-0xc],eax
   140015276:	jl     0x140015cef
   14001527c:	mov    DWORD PTR [rbx-0x10],ebp
   14001527f:	mov    WORD PTR [rbx],ax
   140015282:	jmp    0x140015342
   140015287:	mov    eax,r14d
   14001528a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001528f:	add    eax,0xffffffff
   140015292:	test   eax,eax
   140015294:	jg     0x14001529f
   140015296:	mov    rcx,QWORD PTR [rdx]
   140015299:	mov    rax,QWORD PTR [rcx]
   14001529c:	call   QWORD PTR [rax+0x8]
   14001529f:	mov    rax,QWORD PTR [rdi]
   1400152a2:	mov    rcx,rdi
   1400152a5:	call   QWORD PTR [rax+0x18]
   1400152a8:	lea    rbx,[rax+0x18]
   1400152ac:	mov    QWORD PTR [rsp+0x40],rbx
   1400152b1:	jmp    0x140015342
   1400152b6:	mov    esi,DWORD PTR [rbx-0x10]
   1400152b9:	lea    rbp,[rsp+0x6d0]
   1400152c1:	sub    rbp,rbx
   1400152c4:	sar    rbp,1
   1400152c7:	mov    ecx,0x1
   1400152cc:	sub    ecx,DWORD PTR [rbx-0x8]
   1400152cf:	mov    eax,DWORD PTR [rbx-0xc]
   1400152d2:	sub    eax,edi
   1400152d4:	or     eax,ecx
   1400152d6:	jge    0x1400152e9
   1400152d8:	mov    edx,edi
   1400152da:	lea    rcx,[rsp+0x40]
   1400152df:	call   0x140002d40
   1400152e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400152e9:	cmp    rbp,rsi
   1400152ec:	ja     0x140015309
   1400152ee:	movsxd rax,edi
   1400152f1:	lea    rsi,[rax+rax*1]
   1400152f5:	lea    r8,[rbx+rbp*2]
   1400152f9:	mov    r9,rsi
   1400152fc:	mov    rdx,rsi
   1400152ff:	mov    rcx,rbx
   140015302:	call   0x1400467a0
   140015307:	jmp    0x140015326
   140015309:	movsxd rax,edi
   14001530c:	lea    rsi,[rax+rax*1]
   140015310:	mov    r9,rsi
   140015313:	lea    r8,[rsp+0x6d0]
   14001531b:	mov    rdx,rsi
   14001531e:	mov    rcx,rbx
   140015321:	call   0x1400466d0
   140015326:	test   edi,edi
   140015328:	js     0x140015cfa
   14001532e:	cmp    edi,DWORD PTR [rbx-0xc]
   140015331:	jg     0x140015cfa
   140015337:	mov    DWORD PTR [rbx-0x10],edi
   14001533a:	mov    WORD PTR [rsi+rbx*1],0x0
   140015340:	xor    ebp,ebp
   140015342:	cmp    DWORD PTR [rbx-0x10],0x0
   140015346:	jl     0x14001538d
   140015348:	lea    rdx,[rsp+0xef0]
   140015350:	mov    rcx,rbx
   140015353:	call   0x140046660
   140015358:	test   rax,rax
   14001535b:	je     0x14001538d
   14001535d:	sub    rax,rbx
   140015360:	sar    rax,1
   140015363:	cmp    eax,0xffffffff
   140015366:	je     0x14001538d
   140015368:	cmp    DWORD PTR [rbx-0x10],0x0
   14001536c:	jl     0x1400153ac
   14001536e:	lea    rdx,[rip+0x517fb]        # 0x140066b70
   140015375:	mov    rcx,rbx
   140015378:	call   0x140046660
   14001537d:	test   rax,rax
   140015380:	je     0x1400153ac
   140015382:	sub    rax,rbx
   140015385:	sar    rax,1
   140015388:	cmp    eax,0xffffffff
   14001538b:	je     0x1400153ac
   14001538d:	lea    rdx,[rsp+0x80]
   140015395:	lea    rcx,[rsp+0x80]
   14001539d:	call   QWORD PTR [rip+0x4f335]        # 0x1400646d8
   1400153a3:	test   eax,eax
   1400153a5:	je     0x1400153cc
   1400153a7:	jmp    0x140015212
   1400153ac:	lea    r8,[rsp+0x8e0]
   1400153b4:	mov    edx,0x200
   1400153b9:	lea    rcx,[rsp+0x2140]
   1400153c1:	call   0x140047080
   1400153c6:	mov    r15d,0x1
   1400153cc:	mov    rcx,r12
   1400153cf:	call   QWORD PTR [rip+0x4f2f3]        # 0x1400646c8
   1400153d5:	test   r15d,r15d
   1400153d8:	jne    0x1400153f8
   1400153da:	mov    rdi,QWORD PTR [rsp+0x48]
   1400153df:	lea    rdx,[rsp+0x480]
   1400153e7:	mov    rcx,r13
   1400153ea:	call   QWORD PTR [rip+0x4f140]        # 0x140064530
   1400153f0:	test   eax,eax
   1400153f2:	jne    0x140015110
   1400153f8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400153fd:	mov    rcx,r13
   140015400:	call   QWORD PTR [rip+0x4f132]        # 0x140064538
   140015406:	test   r15d,r15d
   140015409:	jne    0x1400157f3
   14001540f:	lea    r8,[rsp+0x1100]
   140015417:	mov    edx,0x200
   14001541c:	lea    rcx,[rsp+0x8e0]
   140015424:	call   0x140047080
   140015429:	call   0x14002b874
   14001542e:	mov    ecx,ebp
   140015430:	test   rax,rax
   140015433:	setne  cl
   140015436:	test   ecx,ecx
   140015438:	je     0x140015d1b
   14001543e:	mov    rdx,QWORD PTR [rax]
   140015441:	mov    rcx,rax
   140015444:	call   QWORD PTR [rdx+0x18]
   140015447:	add    rax,0x18
   14001544b:	mov    QWORD PTR [rsp+0xc8],rax
   140015453:	lea    rdi,[rip+0x51bf6]        # 0x140067050
   14001545a:	test   rdi,0xffffffffffff0000
   140015461:	jne    0x140015487
   140015463:	movzx  edi,di
   140015466:	mov    ecx,edi
   140015468:	call   0x14002b860
   14001546d:	test   rax,rax
   140015470:	je     0x140015498
   140015472:	mov    r8d,edi
   140015475:	mov    rdx,rax
   140015478:	lea    rcx,[rsp+0xc8]
   140015480:	call   0x140003650
   140015485:	jmp    0x140015498
   140015487:	mov    rdx,rdi
   14001548a:	lea    rcx,[rsp+0xc8]
   140015492:	call   0x140003930
   140015497:	nop
   140015498:	lea    r8,[rsp+0xc8]
   1400154a0:	lea    rdx,[rip+0x736d1]        # 0x140088b78
   1400154a7:	lea    rcx,[rsp+0xd8]
   1400154af:	call   0x140003e20
   1400154b4:	mov    r8,QWORD PTR [rax]
   1400154b7:	mov    edx,0x200
   1400154bc:	lea    rcx,[rsp+0x8e0]
   1400154c4:	call   0x140047130
   1400154c9:	mov    rdx,QWORD PTR [rsp+0xd8]
   1400154d1:	add    rdx,0xffffffffffffffe8
   1400154d5:	mov    eax,r14d
   1400154d8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400154dd:	add    eax,0xffffffff
   1400154e0:	test   eax,eax
   1400154e2:	jg     0x1400154ee
   1400154e4:	mov    rcx,QWORD PTR [rdx]
   1400154e7:	mov    rax,QWORD PTR [rcx]
   1400154ea:	call   QWORD PTR [rax+0x8]
   1400154ed:	nop
   1400154ee:	mov    rdx,QWORD PTR [rsp+0xc8]
   1400154f6:	add    rdx,0xffffffffffffffe8
   1400154fa:	mov    eax,r14d
   1400154fd:	lock xadd DWORD PTR [rdx+0x10],eax
   140015502:	add    eax,0xffffffff
   140015505:	test   eax,eax
   140015507:	jg     0x140015512
   140015509:	mov    rcx,QWORD PTR [rdx]
   14001550c:	mov    rax,QWORD PTR [rcx]
   14001550f:	call   QWORD PTR [rax+0x8]
   140015512:	xor    r9d,r9d
   140015515:	xor    edx,edx
   140015517:	lea    r8d,[r9+0x2]
   14001551b:	lea    rcx,[rsp+0x8e0]
   140015523:	call   QWORD PTR [rip+0x4f197]        # 0x1400646c0
   140015529:	mov    r13,rax
   14001552c:	cmp    rax,0xffffffffffffffff
   140015530:	je     0x1400157c9
   140015536:	lea    r9,[rsp+0x80]
   14001553e:	xor    r8d,r8d
   140015541:	lea    rdx,[rip+0x51270]        # 0x1400667b8
   140015548:	mov    rcx,rax
   14001554b:	call   QWORD PTR [rip+0x4f1a7]        # 0x1400646f8
   140015551:	test   eax,eax
   140015553:	je     0x1400157af
   140015559:	mov    QWORD PTR [rsp+0x20],rbp
   14001555e:	mov    r9d,0x104
   140015564:	lea    r8,[rsp+0x6d0]
   14001556c:	mov    edx,0x1
   140015571:	lea    rcx,[rsp+0x80]
   140015579:	call   QWORD PTR [rip+0x4f171]        # 0x1400646f0
   14001557f:	test   eax,eax
   140015581:	je     0x1400157af
   140015587:	lea    rax,[rsp+0x80]
   14001558f:	mov    QWORD PTR [rsp+0x20],rax
   140015594:	xor    r9d,r9d
   140015597:	lea    r8,[rsp+0x6d0]
   14001559f:	mov    rdx,r13
   1400155a2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400155a7:	call   0x140002340
   1400155ac:	test   eax,eax
   1400155ae:	jne    0x1400155d7
   1400155b0:	mov    rcx,r13
   1400155b3:	call   QWORD PTR [rip+0x4f10f]        # 0x1400646c8
   1400155b9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400155be:	mov    rsi,QWORD PTR [rsp+0x58]
   1400155c3:	mov    r12d,DWORD PTR [rsp+0x60]
   1400155c8:	mov    r13d,DWORD PTR [rsp+0x50]
   1400155cd:	mov    r15d,DWORD PTR [rsp+0x70]
   1400155d2:	jmp    0x140015c91
   1400155d7:	lea    r9,[rsp+0x80]
   1400155df:	xor    r8d,r8d
   1400155e2:	lea    rdx,[rsp+0x6d0]
   1400155ea:	mov    rcx,r13
   1400155ed:	call   QWORD PTR [rip+0x4f105]        # 0x1400646f8
   1400155f3:	test   eax,eax
   1400155f5:	je     0x1400157af
   1400155fb:	mov    rsi,QWORD PTR [rsp+0xa0]
   140015603:	mov    rbx,QWORD PTR [rsp+0x40]
   140015608:	data16 data16 xchg ax,ax
   14001560c:	data16 data16 xchg ax,ax
   140015610:	mov    QWORD PTR [rsp+0x20],rbp
   140015615:	mov    r9d,0x104
   14001561b:	lea    r8,[rsp+0x6d0]
   140015623:	mov    edx,0x2
   140015628:	lea    rcx,[rsp+0x80]
   140015630:	call   QWORD PTR [rip+0x4f0ba]        # 0x1400646f0
   140015636:	test   eax,eax
   140015638:	je     0x14001576e
   14001563e:	xor    eax,eax
   140015640:	mov    rcx,r14
   140015643:	lea    rdi,[rsp+0x6d0]
   14001564b:	repnz scas ax,WORD PTR es:[rdi]
   14001564e:	not    rcx
   140015651:	sub    rcx,0x1
   140015655:	mov    rdi,rcx
   140015658:	test   ecx,ecx
   14001565a:	jne    0x1400156bc
   14001565c:	lea    rdx,[rbx-0x18]
   140015660:	mov    rdi,QWORD PTR [rdx]
   140015663:	cmp    DWORD PTR [rdx+0x8],eax
   140015666:	je     0x140015748
   14001566c:	cmp    DWORD PTR [rdx+0x10],eax
   14001566f:	jge    0x140015685
   140015671:	cmp    DWORD PTR [rbx-0xc],eax
   140015674:	jl     0x140015d05
   14001567a:	mov    DWORD PTR [rbx-0x10],ebp
   14001567d:	mov    WORD PTR [rbx],ax
   140015680:	jmp    0x140015748
   140015685:	mov    eax,r14d
   140015688:	lock xadd DWORD PTR [rdx+0x10],eax
   14001568d:	add    eax,0xffffffff
   140015690:	test   eax,eax
   140015692:	jg     0x14001569d
   140015694:	mov    rcx,QWORD PTR [rdx]
   140015697:	mov    rax,QWORD PTR [rcx]
   14001569a:	call   QWORD PTR [rax+0x8]
   14001569d:	mov    rax,QWORD PTR [rdi]
   1400156a0:	mov    rcx,rdi
   1400156a3:	call   QWORD PTR [rax+0x18]
   1400156a6:	lea    rbx,[rax+0x18]
   1400156aa:	mov    QWORD PTR [rsp+0x40],rbx
   1400156af:	mov    rsi,QWORD PTR [rsp+0xa0]
   1400156b7:	jmp    0x140015748
   1400156bc:	mov    ebp,DWORD PTR [rbx-0x10]
   1400156bf:	lea    r12,[rsp+0x6d0]
   1400156c7:	sub    r12,rbx
   1400156ca:	sar    r12,1
   1400156cd:	mov    ecx,0x1
   1400156d2:	sub    ecx,DWORD PTR [rbx-0x8]
   1400156d5:	mov    eax,DWORD PTR [rbx-0xc]
   1400156d8:	sub    eax,edi
   1400156da:	or     eax,ecx
   1400156dc:	jge    0x1400156ef
   1400156de:	mov    edx,edi
   1400156e0:	lea    rcx,[rsp+0x40]
   1400156e5:	call   0x140002d40
   1400156ea:	mov    rbx,QWORD PTR [rsp+0x40]
   1400156ef:	cmp    r12,rbp
   1400156f2:	ja     0x14001570f
   1400156f4:	movsxd rax,edi
   1400156f7:	lea    rbp,[rax+rax*1]
   1400156fb:	lea    r8,[rbx+r12*2]
   1400156ff:	mov    r9,rbp
   140015702:	mov    rdx,rbp
   140015705:	mov    rcx,rbx
   140015708:	call   0x1400467a0
   14001570d:	jmp    0x14001572c
   14001570f:	movsxd rax,edi
   140015712:	lea    rbp,[rax+rax*1]
   140015716:	mov    r9,rbp
   140015719:	lea    r8,[rsp+0x6d0]
   140015721:	mov    rdx,rbp
   140015724:	mov    rcx,rbx
   140015727:	call   0x1400466d0
   14001572c:	test   edi,edi
   14001572e:	js     0x140015d10
   140015734:	cmp    edi,DWORD PTR [rbx-0xc]
   140015737:	jg     0x140015d10
   14001573d:	mov    DWORD PTR [rbx-0x10],edi
   140015740:	mov    WORD PTR [rbx+rbp*1],0x0
   140015746:	xor    ebp,ebp
   140015748:	test   rsi,rsi
   14001574b:	je     0x14001576e
   14001574d:	cmp    DWORD PTR [rbx-0x10],0x0
   140015751:	jl     0x14001576e
   140015753:	mov    rdx,rsi
   140015756:	mov    rcx,rbx
   140015759:	call   0x140046660
   14001575e:	test   rax,rax
   140015761:	je     0x14001576e
   140015763:	sub    rax,rbx
   140015766:	sar    rax,1
   140015769:	cmp    eax,0xffffffff
   14001576c:	jne    0x14001578d
   14001576e:	lea    rdx,[rsp+0x80]
   140015776:	lea    rcx,[rsp+0x80]
   14001577e:	call   QWORD PTR [rip+0x4ef54]        # 0x1400646d8
   140015784:	test   eax,eax
   140015786:	je     0x1400157b4
   140015788:	jmp    0x140015610
   14001578d:	lea    r8,[rsp+0x8e0]
   140015795:	mov    edx,0x200
   14001579a:	lea    rcx,[rsp+0x2140]
   1400157a2:	call   0x140047080
   1400157a7:	mov    r15d,0x1
   1400157ad:	jmp    0x1400157b4
   1400157af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400157b4:	mov    rcx,r13
   1400157b7:	call   QWORD PTR [rip+0x4ef0b]        # 0x1400646c8
   1400157bd:	test   r15d,r15d
   1400157c0:	je     0x1400157ce
   1400157c2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400157c7:	jmp    0x1400157f3
   1400157c9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400157ce:	mov    r12d,DWORD PTR [rsp+0x60]
   1400157d3:	mov    r13d,DWORD PTR [rsp+0x50]
   1400157d8:	test   r13d,r13d
   1400157db:	cmove  r12d,ebp
   1400157df:	mov    DWORD PTR [rsp+0x60],r12d
   1400157e4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400157e9:	mov    r15d,DWORD PTR [rsp+0x70]
   1400157ee:	jmp    0x140015c91
   1400157f3:	mov    eax,ebp
   1400157f5:	mov    ecx,DWORD PTR [rip+0x72ffd]        # 0x1400887f8
   1400157fb:	cmp    ecx,0x5a
   1400157fe:	mov    edx,0x14
   140015803:	cmovl  eax,edx
   140015806:	add    ecx,eax
   140015808:	mov    DWORD PTR [rip+0x72fea],ecx        # 0x1400887f8
   14001580e:	movsxd r8,ecx
   140015811:	xor    r9d,r9d
   140015814:	mov    edx,0x402
   140015819:	mov    r12,QWORD PTR [rsp+0x48]
   14001581e:	mov    rcx,QWORD PTR [r12+0xeb180]
   140015826:	call   QWORD PTR [rip+0x4f344]        # 0x140064b70
   14001582c:	xor    edx,edx
   14001582e:	mov    rcx,r12
   140015831:	call   0x1400018d0
   140015836:	lea    rax,[rsp+0x78]
   14001583b:	mov    QWORD PTR [rsp+0x20],rax
   140015840:	mov    r13d,0x1
   140015846:	mov    r9d,r13d
   140015849:	lea    r8,[rsp+0x2140]
   140015851:	lea    rdx,[rsp+0x1500]
   140015859:	xor    ecx,ecx
   14001585b:	call   0x14001abd6
   140015860:	test   eax,eax
   140015862:	jne    0x1400158b0
   140015864:	call   QWORD PTR [rip+0x4ed96]        # 0x140064600
   14001586a:	mov    edi,eax
   14001586c:	cmp    eax,0x5b4
   140015871:	jne    0x140015897
   140015873:	lea    r8,[rsp+0x460]
   14001587b:	mov    rdx,QWORD PTR [rsp+0xb8]
   140015883:	mov    rcx,r12
   140015886:	call   0x140007970
   14001588b:	test   eax,eax
   14001588d:	je     0x140015897
   14001588f:	mov    DWORD PTR [rsp+0x64],r13d
   140015894:	mov    ebp,r13d
   140015897:	mov    edx,edi
   140015899:	mov    rcx,r12
   14001589c:	call   0x140007bf0
   1400158a1:	test   ebp,ebp
   1400158a3:	je     0x140015c7b
   1400158a9:	xor    ebp,ebp
   1400158ab:	jmp    0x140015c3e
   1400158b0:	mov    DWORD PTR [rsp+0x64],r13d
   1400158b5:	lea    r8,[rsp+0x460]
   1400158bd:	mov    r15,QWORD PTR [rsp+0xb8]
   1400158c5:	mov    rdx,r15
   1400158c8:	mov    rcx,r12
   1400158cb:	call   0x140007970
   1400158d0:	test   eax,eax
   1400158d2:	jne    0x140015c3c
   1400158d8:	cmp    DWORD PTR [r12+0xeb130],eax
   1400158e0:	je     0x140015a0e
   1400158e6:	cmp    DWORD PTR [r12+0xeb134],eax
   1400158ee:	jne    0x140015a0e
   1400158f4:	lea    rdx,[rip+0x4fbd5]        # 0x1400654d0
   1400158fb:	lea    rcx,[rsp+0x68]
   140015900:	call   0x140003930
   140015905:	lea    r9,[rsp+0x460]
   14001590d:	mov    r8,r15
   140015910:	lea    rdx,[rsp+0xe0]
   140015918:	mov    rcx,r12
   14001591b:	call   0x140007a20
   140015920:	nop
   140015921:	mov    rdx,rax
   140015924:	lea    rcx,[rsp+0x68]
   140015929:	call   0x140004dc0
   14001592e:	nop
   14001592f:	mov    rdx,QWORD PTR [rsp+0xe0]
   140015937:	add    rdx,0xffffffffffffffe8
   14001593b:	mov    eax,r14d
   14001593e:	lock xadd DWORD PTR [rdx+0x10],eax
   140015943:	add    eax,0xffffffff
   140015946:	test   eax,eax
   140015948:	jg     0x140015953
   14001594a:	mov    rcx,QWORD PTR [rdx]
   14001594d:	mov    rax,QWORD PTR [rcx]
   140015950:	call   QWORD PTR [rax+0x8]
   140015953:	lea    rdx,[rip+0x4fb76]        # 0x1400654d0
   14001595a:	lea    rcx,[rsp+0x68]
   14001595f:	call   0x140009f80
   140015964:	test   al,al
   140015966:	je     0x1400159f7
   14001596c:	lea    rdx,[rsp+0x68]
   140015971:	lea    rcx,[rsp+0x120]
   140015979:	call   0x140003120
   14001597e:	mov    rdx,rax
   140015981:	mov    rcx,r12
   140015984:	call   0x14000c440
   140015989:	mov    edi,eax
   14001598b:	lea    rax,[rsp+0x78]
   140015990:	mov    QWORD PTR [rsp+0x20],rax
   140015995:	mov    ebx,0x1
   14001599a:	mov    r9d,ebx
   14001599d:	xor    r8d,r8d
   1400159a0:	lea    rdx,[rsp+0x460]
   1400159a8:	mov    rcx,r15
   1400159ab:	call   0x140002120
   1400159b0:	test   eax,eax
   1400159b2:	je     0x1400159fc
   1400159b4:	test   edi,edi
   1400159b6:	je     0x1400159fc
   1400159b8:	movsxd rax,DWORD PTR [r12+0xeb100]
   1400159c0:	imul   rax,rax,0x12c8
   1400159c7:	mov    DWORD PTR [rax+r12*1+0x4bc],ebx
   1400159cf:	lea    rdx,[rsp+0x68]
   1400159d4:	lea    rcx,[rsp+0x108]
   1400159dc:	call   0x140003120
   1400159e1:	mov    rdx,rax
   1400159e4:	mov    rcx,r12
   1400159e7:	call   0x140011760
   1400159ec:	add    DWORD PTR [r12+0xeb100],0xffffffff
   1400159f5:	jmp    0x1400159fc
   1400159f7:	mov    ebx,0x1
   1400159fc:	mov    DWORD PTR [r12+0x4bc],ebx
   140015a04:	mov    rbx,QWORD PTR [rsp+0x40]
   140015a09:	mov    rsi,QWORD PTR [rsp+0x58]
   140015a0e:	cmp    DWORD PTR [r12+0xeb134],0x0
   140015a17:	je     0x140015c38
   140015a1d:	mov    edx,0x208
   140015a22:	lea    rcx,[rsp+0x1920]
   140015a2a:	call   QWORD PTR [rip+0x4eba0]        # 0x1400645d0
   140015a30:	lea    rdx,[rip+0x51081]        # 0x140066ab8
   140015a37:	lea    rcx,[rsp+0x1920]
   140015a3f:	call   QWORD PTR [rip+0x4eb93]        # 0x1400645d8
   140015a45:	xor    ebp,ebp
   140015a47:	mov    DWORD PTR [rsp+0x28],ebp
   140015a4b:	mov    QWORD PTR [rsp+0x20],rbp
   140015a50:	lea    r9,[rip+0x51041]        # 0x140066a98
   140015a57:	lea    r8,[rsp+0x1920]
   140015a5f:	lea    rdx,[rip+0x51022]        # 0x140066a88
   140015a66:	xor    ecx,ecx
   140015a68:	call   QWORD PTR [rip+0x4ecfa]        # 0x140064768
   140015a6e:	lea    rdx,[rsp+0x78]
   140015a73:	mov    QWORD PTR [rsp+0x20],rdx
   140015a78:	lea    r9d,[rbp+0x1]
   140015a7c:	lea    r8,[rsp+0x2140]
   140015a84:	lea    rdx,[rsp+0x1500]
   140015a8c:	xor    ecx,ecx
   140015a8e:	call   0x14001abd6
   140015a93:	test   eax,eax
   140015a95:	jne    0x140015ad8
   140015a97:	call   QWORD PTR [rip+0x4eb63]        # 0x140064600
   140015a9d:	mov    edi,eax
   140015a9f:	cmp    eax,0x5b4
   140015aa4:	jne    0x140015ac9
   140015aa6:	lea    r8,[rsp+0x460]
   140015aae:	mov    rdx,r15
   140015ab1:	mov    rcx,r12
   140015ab4:	call   0x140007970
   140015ab9:	test   eax,eax
   140015abb:	mov    eax,0x1
   140015ac0:	cmovne r13d,eax
   140015ac4:	mov    DWORD PTR [rsp+0x64],r13d
   140015ac9:	mov    edx,edi
   140015acb:	mov    rcx,r12
   140015ace:	call   0x140007bf0
   140015ad3:	jmp    0x140015c0f
   140015ad8:	lea    r8,[rsp+0x460]
   140015ae0:	mov    rdx,r15
   140015ae3:	mov    rcx,r12
   140015ae6:	call   0x140007970
   140015aeb:	test   eax,eax
   140015aed:	jne    0x140015c0f
   140015af3:	lea    rdx,[rip+0x4f9d6]        # 0x1400654d0
   140015afa:	lea    rcx,[rsp+0x68]
   140015aff:	call   0x140003930
   140015b04:	lea    r9,[rsp+0x460]
   140015b0c:	mov    r8,r15
   140015b0f:	lea    rdx,[rsp+0xf0]
   140015b17:	mov    rcx,r12
   140015b1a:	call   0x140007a20
   140015b1f:	nop
   140015b20:	mov    rdx,rax
   140015b23:	lea    rcx,[rsp+0x68]
   140015b28:	call   0x140004dc0
   140015b2d:	nop
   140015b2e:	mov    rdx,QWORD PTR [rsp+0xf0]
   140015b36:	add    rdx,0xffffffffffffffe8
   140015b3a:	mov    eax,r14d
   140015b3d:	lock xadd DWORD PTR [rdx+0x10],eax
   140015b42:	add    eax,0xffffffff
   140015b45:	test   eax,eax
   140015b47:	jg     0x140015b52
   140015b49:	mov    rcx,QWORD PTR [rdx]
   140015b4c:	mov    rax,QWORD PTR [rcx]
   140015b4f:	call   QWORD PTR [rax+0x8]
   140015b52:	lea    rdx,[rip+0x4f977]        # 0x1400654d0
   140015b59:	lea    rcx,[rsp+0x68]
   140015b5e:	call   0x140009f80
   140015b63:	test   al,al
   140015b65:	je     0x140015bf7
   140015b6b:	lea    rdx,[rsp+0x68]
   140015b70:	lea    rcx,[rsp+0x128]
   140015b78:	call   0x140003120
   140015b7d:	mov    rdx,rax
   140015b80:	mov    rcx,r12
   140015b83:	call   0x14000c440
   140015b88:	mov    edi,eax
   140015b8a:	lea    rax,[rsp+0x78]
   140015b8f:	mov    QWORD PTR [rsp+0x20],rax
   140015b94:	mov    r13d,0x1
   140015b9a:	mov    r9d,r13d
   140015b9d:	xor    r8d,r8d
   140015ba0:	lea    rdx,[rsp+0x460]
   140015ba8:	mov    rcx,r15
   140015bab:	call   0x140002120
   140015bb0:	test   eax,eax
   140015bb2:	je     0x140015bfd
   140015bb4:	test   edi,edi
   140015bb6:	je     0x140015bfd
   140015bb8:	movsxd rax,DWORD PTR [r12+0xeb100]
   140015bc0:	imul   rax,rax,0x12c8
   140015bc7:	mov    DWORD PTR [rax+r12*1+0x4bc],r13d
   140015bcf:	lea    rdx,[rsp+0x68]
   140015bd4:	lea    rcx,[rsp+0x118]
   140015bdc:	call   0x140003120
   140015be1:	mov    rdx,rax
   140015be4:	mov    rcx,r12
   140015be7:	call   0x140011760
   140015bec:	add    DWORD PTR [r12+0xeb100],0xffffffff
   140015bf5:	jmp    0x140015bfd
   140015bf7:	mov    r13d,0x1
   140015bfd:	mov    DWORD PTR [r12+0x4bc],r13d
   140015c05:	mov    rbx,QWORD PTR [rsp+0x40]
   140015c0a:	mov    rsi,QWORD PTR [rsp+0x58]
   140015c0f:	mov    DWORD PTR [rsp+0x28],ebp
   140015c13:	mov    QWORD PTR [rsp+0x20],rbp
   140015c18:	lea    r9,[rip+0x50e49]        # 0x140066a68
   140015c1f:	lea    r8,[rsp+0x1920]
   140015c27:	lea    rdx,[rip+0x50e5a]        # 0x140066a88
   140015c2e:	xor    ecx,ecx
   140015c30:	call   QWORD PTR [rip+0x4eb32]        # 0x140064768
   140015c36:	jmp    0x140015c3e
   140015c38:	xor    ebp,ebp
   140015c3a:	jmp    0x140015c3e
   140015c3c:	xor    ebp,ebp
   140015c3e:	cmp    DWORD PTR [rsp+0x98],0x0
   140015c46:	je     0x140015c62
   140015c48:	mov    r15d,DWORD PTR [rsp+0x70]
   140015c4d:	add    r15d,0x1
   140015c51:	mov    DWORD PTR [rsp+0x70],r15d
   140015c56:	mov    r12d,DWORD PTR [rsp+0x60]
   140015c5b:	mov    r13d,DWORD PTR [rsp+0x50]
   140015c60:	jmp    0x140015c91
   140015c62:	add    DWORD PTR [rsp+0xa8],0x1
   140015c6a:	mov    r12d,DWORD PTR [rsp+0x60]
   140015c6f:	mov    r13d,DWORD PTR [rsp+0x50]
   140015c74:	mov    r15d,DWORD PTR [rsp+0x70]
   140015c79:	jmp    0x140015c91
   140015c7b:	xor    ebp,ebp
   140015c7d:	mov    r12d,r13d
   140015c80:	mov    r13d,DWORD PTR [rsp+0x50]
   140015c85:	mov    r15d,DWORD PTR [rsp+0x70]
   140015c8a:	jmp    0x140015c91
   140015c8c:	mov    r12d,DWORD PTR [rsp+0x60]
   140015c91:	mov    eax,DWORD PTR [rsp+0x74]
   140015c95:	add    eax,0x1
   140015c98:	mov    DWORD PTR [rsp+0x74],eax
   140015c9c:	lea    r8,[rsp+0x460]
   140015ca4:	mov    edx,eax
   140015ca6:	mov    rcx,QWORD PTR [rsp+0xb8]
   140015cae:	call   QWORD PTR [rip+0x4ea74]        # 0x140064728
   140015cb4:	test   eax,eax
   140015cb6:	je     0x140015d26
   140015cb8:	jmp    0x140014923
   140015cbd:	mov    ecx,0x80070057
   140015cc2:	call   0x140001430
   140015cc7:	int3   
   140015cc8:	call   0x1400021a0
   140015ccd:	int3   
   140015cce:	mov    ecx,0x80070057
   140015cd3:	call   0x140001430
   140015cd8:	int3   
   140015cd9:	mov    ecx,0x80070057
   140015cde:	call   0x140001430
   140015ce3:	int3   
   140015ce4:	mov    ecx,0x80070057
   140015ce9:	call   0x140001430
   140015cee:	int3   
   140015cef:	mov    ecx,0x80070057
   140015cf4:	call   0x140001430
   140015cf9:	int3   
   140015cfa:	mov    ecx,0x80070057
   140015cff:	call   0x140001430
   140015d04:	int3   
   140015d05:	mov    ecx,0x80070057
   140015d0a:	call   0x140001430
   140015d0f:	int3   
   140015d10:	mov    ecx,0x80070057
   140015d15:	call   0x140001430
   140015d1a:	int3   
   140015d1b:	mov    ecx,0x80004005
   140015d20:	call   0x140001430
   140015d25:	int3   
   140015d26:	mov    ecx,0x1
   140015d2b:	jmp    0x140015d37
   140015d2d:	mov    rbx,QWORD PTR [rsp+0x40]
   140015d32:	mov    rsi,QWORD PTR [rsp+0x58]
   140015d37:	mov    edi,ebp
   140015d39:	mov    DWORD PTR [rsp+0x50],ebp
   140015d3d:	mov    edx,0x32
   140015d42:	test   r12d,r12d
   140015d45:	jne    0x140015d4f
   140015d47:	mov    edi,ecx
   140015d49:	mov    DWORD PTR [rsp+0x50],ecx
   140015d4d:	jmp    0x140015d5e
   140015d4f:	test   r15d,r15d
   140015d52:	jne    0x140015d76
   140015d54:	cmp    DWORD PTR [rsp+0xa8],r15d
   140015d5c:	jne    0x140015d6f
   140015d5e:	mov    r13,QWORD PTR [rsp+0x48]
   140015d63:	cmp    DWORD PTR [r13+0xeb138],0x0
   140015d6b:	jne    0x140015d91
   140015d6d:	jmp    0x140015d7b
   140015d6f:	mov    r13,QWORD PTR [rsp+0x48]
   140015d74:	jmp    0x140015d7b
   140015d76:	mov    r13,QWORD PTR [rsp+0x48]
   140015d7b:	test   r12d,r12d
   140015d7e:	jne    0x140015eae
   140015d84:	cmp    DWORD PTR [r13+0xeb138],r12d
   140015d8b:	jne    0x140015eb7
   140015d91:	mov    eax,ebp
   140015d93:	mov    ecx,DWORD PTR [rip+0x72a5f]        # 0x1400887f8
   140015d99:	cmp    ecx,0x5a
   140015d9c:	cmovl  eax,edx
   140015d9f:	add    ecx,eax
   140015da1:	mov    DWORD PTR [rip+0x72a51],ecx        # 0x1400887f8
   140015da7:	movsxd r8,ecx
   140015daa:	xor    r9d,r9d
   140015dad:	mov    edx,0x402
   140015db2:	mov    rcx,QWORD PTR [r13+0xeb180]
   140015db9:	call   QWORD PTR [rip+0x4edb1]        # 0x140064b70
   140015dbf:	xor    edx,edx
   140015dc1:	mov    rcx,r13
   140015dc4:	call   0x1400018d0
   140015dc9:	xor    edx,edx
   140015dcb:	mov    r8d,0x250
   140015dd1:	lea    rcx,[rsp+0x480]
   140015dd9:	call   0x140047720
   140015dde:	lea    r8,[rsp+0x1100]
   140015de6:	mov    edx,0x200
   140015deb:	lea    rcx,[rsp+0x8e0]
   140015df3:	call   0x140047080
   140015df8:	mov    r8,QWORD PTR [rip+0x72d79]        # 0x140088b78
   140015dff:	mov    edx,0x200
   140015e04:	lea    rcx,[rsp+0x8e0]
   140015e0c:	call   0x140047130
   140015e11:	lea    r8,[rip+0x51228]        # 0x140067040
   140015e18:	mov    edx,0x200
   140015e1d:	lea    rcx,[rsp+0x8e0]
   140015e25:	call   0x140047130
   140015e2a:	lea    rdx,[rsp+0x480]
   140015e32:	lea    rcx,[rsp+0x8e0]
   140015e3a:	call   QWORD PTR [rip+0x4e6e8]        # 0x140064528
   140015e40:	cmp    rax,0xffffffffffffffff
   140015e44:	je     0x140015ea9
   140015e46:	mov    rcx,rax
   140015e49:	call   QWORD PTR [rip+0x4e6e9]        # 0x140064538
   140015e4f:	mov    QWORD PTR [rsp+0x38],rbp
   140015e54:	mov    QWORD PTR [rsp+0x30],rbp
   140015e59:	mov    DWORD PTR [rsp+0x28],0x104
   140015e61:	lea    rax,[rsp+0x1f30]
   140015e69:	mov    QWORD PTR [rsp+0x20],rax
   140015e6e:	xor    r9d,r9d
   140015e71:	xor    edx,edx
   140015e73:	lea    r8d,[r9+0x1]
   140015e77:	lea    rcx,[rsp+0x8e0]
   140015e7f:	call   QWORD PTR [rip+0x4e833]        # 0x1400646b8
   140015e85:	test   eax,eax
   140015e87:	jne    0x140015e9b
   140015e89:	call   QWORD PTR [rip+0x4e771]        # 0x140064600
   140015e8f:	mov    edx,eax
   140015e91:	mov    rcx,r13
   140015e94:	call   0x140007bf0
   140015e99:	jmp    0x140015ea9
   140015e9b:	mov    DWORD PTR [rsp+0x64],0x1
   140015ea3:	mov    edi,ebp
   140015ea5:	mov    DWORD PTR [rsp+0x50],ebp
   140015ea9:	test   r12d,r12d
   140015eac:	je     0x140015eb7
   140015eae:	test   r15d,r15d
   140015eb1:	jne    0x140016432
   140015eb7:	cmp    DWORD PTR [r13+0xeb138],0x0
   140015ebf:	je     0x140016425
   140015ec5:	mov    eax,ebp
   140015ec7:	mov    ecx,DWORD PTR [rip+0x7292b]        # 0x1400887f8
   140015ecd:	cmp    ecx,0x5a
   140015ed0:	mov    edx,0x32
   140015ed5:	cmovl  eax,edx
   140015ed8:	add    ecx,eax
   140015eda:	mov    DWORD PTR [rip+0x72918],ecx        # 0x1400887f8
   140015ee0:	movsxd r8,ecx
   140015ee3:	xor    r9d,r9d
   140015ee6:	mov    edx,0x402
   140015eeb:	mov    rcx,QWORD PTR [r13+0xeb180]
   140015ef2:	call   QWORD PTR [rip+0x4ec78]        # 0x140064b70
   140015ef8:	xor    edx,edx
   140015efa:	mov    rcx,r13
   140015efd:	call   0x1400018d0
   140015f02:	mov    r15d,ebp
   140015f05:	mov    DWORD PTR [rsp+0x74],ebp
   140015f09:	mov    eax,DWORD PTR [rsp+0x450]
   140015f10:	test   eax,eax
   140015f12:	jle    0x140016335
   140015f18:	lea    r13,[rsp+0x130]
   140015f20:	xor    edx,edx
   140015f22:	mov    r8d,0x250
   140015f28:	lea    rcx,[rsp+0x480]
   140015f30:	call   0x140047720
   140015f35:	lea    r8,[rsp+0x1100]
   140015f3d:	mov    edx,0x200
   140015f42:	lea    rcx,[rsp+0x8e0]
   140015f4a:	call   0x140047080
   140015f4f:	mov    r8,QWORD PTR [rip+0x72c22]        # 0x140088b78
   140015f56:	mov    edx,0x200
   140015f5b:	lea    rcx,[rsp+0x8e0]
   140015f63:	call   0x140047130
   140015f68:	lea    r8,[rip+0x50fc9]        # 0x140066f38
   140015f6f:	mov    edx,0x200
   140015f74:	lea    rcx,[rsp+0x8e0]
   140015f7c:	call   0x140047130
   140015f81:	lea    rdx,[rsp+0x480]
   140015f89:	lea    rcx,[rsp+0x8e0]
   140015f91:	call   QWORD PTR [rip+0x4e591]        # 0x140064528
   140015f97:	mov    rdi,rax
   140015f9a:	mov    QWORD PTR [rsp+0xa8],rax
   140015fa2:	cmp    rax,0xffffffffffffffff
   140015fa6:	je     0x1400162d4
   140015fac:	data16 data16 xchg ax,ax
   140015fb0:	mov    r14d,ebp
   140015fb3:	lea    r8,[rsp+0x1100]
   140015fbb:	mov    edx,0x200
   140015fc0:	lea    rcx,[rsp+0x8e0]
   140015fc8:	call   0x140047080
   140015fcd:	lea    r8,[rsp+0x4ac]
   140015fd5:	mov    edx,0x200
   140015fda:	lea    rcx,[rsp+0x8e0]
   140015fe2:	call   0x140047130
   140015fe7:	xor    r9d,r9d
   140015fea:	xor    edx,edx
   140015fec:	lea    r8d,[r9+0x2]
   140015ff0:	lea    rcx,[rsp+0x8e0]
   140015ff8:	call   QWORD PTR [rip+0x4e6c2]        # 0x1400646c0
   140015ffe:	mov    r12,rax
   140016001:	cmp    rax,0xffffffffffffffff
   140016005:	je     0x1400162bb
   14001600b:	lea    r9,[rsp+0x80]
   140016013:	xor    r8d,r8d
   140016016:	lea    rdx,[rip+0x5079b]        # 0x1400667b8
   14001601d:	mov    rcx,rax
   140016020:	call   QWORD PTR [rip+0x4e6d2]        # 0x1400646f8
   140016026:	test   eax,eax
   140016028:	je     0x1400162ad
   14001602e:	mov    QWORD PTR [rsp+0x20],rbp
   140016033:	mov    r9d,0x104
   140016039:	lea    r8,[rsp+0x6d0]
   140016041:	mov    edx,0x1
   140016046:	lea    rcx,[rsp+0x80]
   14001604e:	call   QWORD PTR [rip+0x4e69c]        # 0x1400646f0
   140016054:	test   eax,eax
   140016056:	je     0x1400162ad
   14001605c:	lea    rax,[rsp+0x80]
   140016064:	mov    QWORD PTR [rsp+0x20],rax
   140016069:	xor    r9d,r9d
   14001606c:	lea    r8,[rsp+0x6d0]
   140016074:	mov    rdx,r12
   140016077:	mov    rcx,QWORD PTR [rsp+0x48]
   14001607c:	call   0x140002340
   140016081:	test   eax,eax
   140016083:	jne    0x140016093
   140016085:	mov    rcx,r12
   140016088:	call   QWORD PTR [rip+0x4e63a]        # 0x1400646c8
   14001608e:	jmp    0x1400162bb
   140016093:	lea    r9,[rsp+0x80]
   14001609b:	xor    r8d,r8d
   14001609e:	lea    rdx,[rsp+0x6d0]
   1400160a6:	mov    rcx,r12
   1400160a9:	call   QWORD PTR [rip+0x4e649]        # 0x1400646f8
   1400160af:	test   eax,eax
   1400160b1:	je     0x1400162ad
   1400160b7:	data16 xchg ax,ax
   1400160ba:	data16 xchg ax,ax
   1400160bd:	data16 xchg ax,ax
   1400160c0:	mov    QWORD PTR [rsp+0x20],rbp
   1400160c5:	mov    r9d,0x104
   1400160cb:	lea    r8,[rsp+0x6d0]
   1400160d3:	mov    edx,0x2
   1400160d8:	lea    rcx,[rsp+0x80]
   1400160e0:	call   QWORD PTR [rip+0x4e60a]        # 0x1400646f0
   1400160e6:	test   eax,eax
   1400160e8:	je     0x14001621b
   1400160ee:	xor    eax,eax
   1400160f0:	or     r8,0xffffffffffffffff
   1400160f4:	mov    rcx,r8
   1400160f7:	lea    rdi,[rsp+0x6d0]
   1400160ff:	repnz scas ax,WORD PTR es:[rdi]
   140016102:	not    rcx
   140016105:	sub    rcx,0x1
   140016109:	mov    rdi,rcx
   14001610c:	test   ecx,ecx
   14001610e:	jne    0x140016168
   140016110:	lea    rdx,[rbx-0x18]
   140016114:	mov    rdi,QWORD PTR [rdx]
   140016117:	cmp    DWORD PTR [rdx+0x8],eax
   14001611a:	je     0x1400161f4
   140016120:	cmp    DWORD PTR [rdx+0x10],eax
   140016123:	jge    0x140016139
   140016125:	cmp    DWORD PTR [rbx-0xc],eax
   140016128:	jl     0x1400162fc
   14001612e:	mov    DWORD PTR [rbx-0x10],ebp
   140016131:	mov    WORD PTR [rbx],ax
   140016134:	jmp    0x1400161f4
   140016139:	mov    eax,r8d
   14001613c:	lock xadd DWORD PTR [rdx+0x10],eax
   140016141:	add    eax,0xffffffff
   140016144:	test   eax,eax
   140016146:	jg     0x140016151
   140016148:	mov    rcx,QWORD PTR [rdx]
   14001614b:	mov    rax,QWORD PTR [rcx]
   14001614e:	call   QWORD PTR [rax+0x8]
   140016151:	mov    rax,QWORD PTR [rdi]
   140016154:	mov    rcx,rdi
   140016157:	call   QWORD PTR [rax+0x18]
   14001615a:	lea    rbx,[rax+0x18]
   14001615e:	mov    QWORD PTR [rsp+0x40],rbx
   140016163:	jmp    0x1400161f4
   140016168:	mov    esi,DWORD PTR [rbx-0x10]
   14001616b:	lea    rbp,[rsp+0x6d0]
   140016173:	sub    rbp,rbx
   140016176:	sar    rbp,1
   140016179:	mov    ecx,0x1
   14001617e:	sub    ecx,DWORD PTR [rbx-0x8]
   140016181:	mov    eax,DWORD PTR [rbx-0xc]
   140016184:	sub    eax,edi
   140016186:	or     eax,ecx
   140016188:	jge    0x14001619b
   14001618a:	mov    edx,edi
   14001618c:	lea    rcx,[rsp+0x40]
   140016191:	call   0x140002d40
   140016196:	mov    rbx,QWORD PTR [rsp+0x40]
   14001619b:	cmp    rbp,rsi
   14001619e:	ja     0x1400161bb
   1400161a0:	movsxd rax,edi
   1400161a3:	lea    rsi,[rax+rax*1]
   1400161a7:	lea    r8,[rbx+rbp*2]
   1400161ab:	mov    r9,rsi
   1400161ae:	mov    rdx,rsi
   1400161b1:	mov    rcx,rbx
   1400161b4:	call   0x1400467a0
   1400161b9:	jmp    0x1400161d8
   1400161bb:	movsxd rax,edi
   1400161be:	lea    rsi,[rax+rax*1]
   1400161c2:	mov    r9,rsi
   1400161c5:	lea    r8,[rsp+0x6d0]
   1400161cd:	mov    rdx,rsi
   1400161d0:	mov    rcx,rbx
   1400161d3:	call   0x1400466d0
   1400161d8:	test   edi,edi
   1400161da:	js     0x140016307
   1400161e0:	cmp    edi,DWORD PTR [rbx-0xc]
   1400161e3:	jg     0x140016307
   1400161e9:	mov    DWORD PTR [rbx-0x10],edi
   1400161ec:	mov    WORD PTR [rsi+rbx*1],0x0
   1400161f2:	xor    ebp,ebp
   1400161f4:	mov    rdx,QWORD PTR [r13+0x0]
   1400161f8:	test   rdx,rdx
   1400161fb:	je     0x14001621b
   1400161fd:	cmp    DWORD PTR [rbx-0x10],0x0
   140016201:	jl     0x14001621b
   140016203:	mov    rcx,rbx
   140016206:	call   0x140046660
   14001620b:	test   rax,rax
   14001620e:	je     0x14001621b
   140016210:	sub    rax,rbx
   140016213:	sar    rax,1
   140016216:	cmp    eax,0xffffffff
   140016219:	jne    0x14001623a
   14001621b:	lea    rdx,[rsp+0x80]
   140016223:	lea    rcx,[rsp+0x80]
   14001622b:	call   QWORD PTR [rip+0x4e4a7]        # 0x1400646d8
   140016231:	test   eax,eax
   140016233:	je     0x1400162a5
   140016235:	jmp    0x1400160c0
   14001623a:	add    r15d,0x1
   14001623e:	mov    QWORD PTR [rsp+0x38],rbp
   140016243:	mov    QWORD PTR [rsp+0x30],rbp
   140016248:	mov    DWORD PTR [rsp+0x28],0x104
   140016250:	lea    rax,[rsp+0x1f30]
   140016258:	mov    QWORD PTR [rsp+0x20],rax
   14001625d:	xor    r9d,r9d
   140016260:	mov    esi,0x1
   140016265:	mov    r8d,esi
   140016268:	xor    edx,edx
   14001626a:	lea    rcx,[rsp+0x8e0]
   140016272:	call   QWORD PTR [rip+0x4e440]        # 0x1400646b8
   140016278:	test   eax,eax
   14001627a:	jne    0x140016290
   14001627c:	call   QWORD PTR [rip+0x4e37e]        # 0x140064600
   140016282:	mov    edx,eax
   140016284:	mov    rcx,QWORD PTR [rsp+0x48]
   140016289:	call   0x140007bf0
   14001628e:	jmp    0x140016298
   140016290:	mov    DWORD PTR [rsp+0x64],esi
   140016294:	mov    DWORD PTR [rsp+0x50],ebp
   140016298:	mov    r14d,esi
   14001629b:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400162a3:	jmp    0x1400162ad
   1400162a5:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400162ad:	mov    rcx,r12
   1400162b0:	call   QWORD PTR [rip+0x4e412]        # 0x1400646c8
   1400162b6:	test   r14d,r14d
   1400162b9:	jne    0x1400162d4
   1400162bb:	lea    rdx,[rsp+0x480]
   1400162c3:	mov    rcx,rdi
   1400162c6:	call   QWORD PTR [rip+0x4e264]        # 0x140064530
   1400162cc:	test   eax,eax
   1400162ce:	jne    0x140015fb0
   1400162d4:	mov    rcx,rdi
   1400162d7:	call   QWORD PTR [rip+0x4e25b]        # 0x140064538
   1400162dd:	mov    ecx,DWORD PTR [rsp+0x74]
   1400162e1:	add    ecx,0x1
   1400162e4:	mov    DWORD PTR [rsp+0x74],ecx
   1400162e8:	add    r13,0x8
   1400162ec:	mov    eax,DWORD PTR [rsp+0x450]
   1400162f3:	cmp    ecx,eax
   1400162f5:	jge    0x140016312
   1400162f7:	jmp    0x140015f20
   1400162fc:	mov    ecx,0x80070057
   140016301:	call   0x140001430
   140016306:	int3   
   140016307:	mov    ecx,0x80070057
   14001630c:	call   0x140001430
   140016311:	int3   
   140016312:	cmp    r15d,eax
   140016315:	jl     0x140016326
   140016317:	mov    rsi,QWORD PTR [rsp+0x58]
   14001631c:	mov    edi,DWORD PTR [rsp+0x50]
   140016320:	or     r14,0xffffffffffffffff
   140016324:	jmp    0x140016335
   140016326:	mov    rsi,QWORD PTR [rsp+0x58]
   14001632b:	mov    edi,DWORD PTR [rsp+0x50]
   14001632f:	or     r14,0xffffffffffffffff
   140016333:	jmp    0x14001633d
   140016335:	test   eax,eax
   140016337:	jne    0x14001643f
   14001633d:	xor    edx,edx
   14001633f:	mov    r8d,0x250
   140016345:	lea    rcx,[rsp+0x480]
   14001634d:	call   0x140047720
   140016352:	lea    r8,[rsp+0x1100]
   14001635a:	mov    edx,0x200
   14001635f:	lea    rcx,[rsp+0x8e0]
   140016367:	call   0x140047080
   14001636c:	mov    r8,QWORD PTR [rip+0x72805]        # 0x140088b78
   140016373:	mov    edx,0x200
   140016378:	lea    rcx,[rsp+0x8e0]
   140016380:	call   0x140047130
   140016385:	lea    r8,[rip+0x50ca4]        # 0x140067030
   14001638c:	mov    edx,0x200
   140016391:	lea    rcx,[rsp+0x8e0]
   140016399:	call   0x140047130
   14001639e:	lea    rdx,[rsp+0x480]
   1400163a6:	lea    rcx,[rsp+0x8e0]
   1400163ae:	call   QWORD PTR [rip+0x4e174]        # 0x140064528
   1400163b4:	cmp    rax,0xffffffffffffffff
   1400163b8:	je     0x14001644c
   1400163be:	mov    rcx,rax
   1400163c1:	call   QWORD PTR [rip+0x4e171]        # 0x140064538
   1400163c7:	mov    QWORD PTR [rsp+0x38],rbp
   1400163cc:	mov    QWORD PTR [rsp+0x30],rbp
   1400163d1:	mov    DWORD PTR [rsp+0x28],0x104
   1400163d9:	lea    rax,[rsp+0x1f30]
   1400163e1:	mov    QWORD PTR [rsp+0x20],rax
   1400163e6:	xor    r9d,r9d
   1400163e9:	mov    r12d,0x1
   1400163ef:	mov    r8d,r12d
   1400163f2:	xor    edx,edx
   1400163f4:	lea    rcx,[rsp+0x8e0]
   1400163fc:	call   QWORD PTR [rip+0x4e2b6]        # 0x1400646b8
   140016402:	test   eax,eax
   140016404:	jne    0x14001641d
   140016406:	call   QWORD PTR [rip+0x4e1f4]        # 0x140064600
   14001640c:	mov    edx,eax
   14001640e:	mov    rbx,QWORD PTR [rsp+0x48]
   140016413:	mov    rcx,rbx
   140016416:	call   0x140007bf0
   14001641b:	jmp    0x140016457
   14001641d:	mov    ebx,r12d
   140016420:	jmp    0x140016633
   140016425:	mov    rbx,QWORD PTR [rsp+0x48]
   14001642a:	mov    r12d,0x1
   140016430:	jmp    0x140016457
   140016432:	mov    rbx,QWORD PTR [rsp+0x48]
   140016437:	mov    r12d,0x1
   14001643d:	jmp    0x140016457
   14001643f:	mov    rbx,QWORD PTR [rsp+0x48]
   140016444:	mov    r12d,0x1
   14001644a:	jmp    0x140016457
   14001644c:	mov    rbx,QWORD PTR [rsp+0x48]
   140016451:	mov    r12d,0x1
   140016457:	test   edi,edi
   140016459:	je     0x14001662f
   14001645f:	xor    edx,edx
   140016461:	mov    r8d,0x250
   140016467:	lea    rcx,[rsp+0x480]
   14001646f:	call   0x140047720
   140016474:	lea    r8,[rsp+0x1100]
   14001647c:	mov    edx,0x200
   140016481:	lea    rcx,[rsp+0x8e0]
   140016489:	call   0x140047080
   14001648e:	mov    r8,QWORD PTR [rip+0x726e3]        # 0x140088b78
   140016495:	mov    edx,0x200
   14001649a:	lea    rcx,[rsp+0x8e0]
   1400164a2:	call   0x140047130
   1400164a7:	lea    r8,[rip+0x50a8a]        # 0x140066f38
   1400164ae:	mov    edx,0x200
   1400164b3:	lea    rcx,[rsp+0x8e0]
   1400164bb:	call   0x140047130
   1400164c0:	lea    rdx,[rsp+0x480]
   1400164c8:	lea    rcx,[rsp+0x8e0]
   1400164d0:	call   QWORD PTR [rip+0x4e052]        # 0x140064528
   1400164d6:	mov    rdi,rax
   1400164d9:	cmp    rax,0xffffffffffffffff
   1400164dd:	je     0x140016620
   1400164e3:	mov    r8,QWORD PTR [rip+0x7268e]        # 0x140088b78
   1400164ea:	mov    edx,0x200
   1400164ef:	lea    rcx,[rsp+0x1b30]
   1400164f7:	call   0x140047080
   1400164fc:	lea    r8,[rip+0x50b3d]        # 0x140067040
   140016503:	mov    edx,0x200
   140016508:	lea    rcx,[rsp+0x1b30]
   140016510:	call   0x140047130
   140016515:	lea    rdx,[rsp+0x1b30]
   14001651d:	lea    rcx,[rsp+0x4ac]
   140016525:	call   0x140046660
   14001652a:	test   rax,rax
   14001652d:	jne    0x140016607
   140016533:	mov    r8,QWORD PTR [rip+0x7263e]        # 0x140088b78
   14001653a:	mov    edx,0x200
   14001653f:	lea    rcx,[rsp+0x1b30]
   140016547:	call   0x140047080
   14001654c:	lea    r8,[rip+0x50acd]        # 0x140067020
   140016553:	mov    edx,0x200
   140016558:	lea    rcx,[rsp+0x1b30]
   140016560:	call   0x140047130
   140016565:	lea    rdx,[rsp+0x1b30]
   14001656d:	lea    rcx,[rsp+0x4ac]
   140016575:	call   0x140046660
   14001657a:	test   rax,rax
   14001657d:	jne    0x140016607
   140016583:	lea    r8,[rsp+0x1100]
   14001658b:	mov    edx,0x200
   140016590:	lea    rcx,[rsp+0x8e0]
   140016598:	call   0x140047080
   14001659d:	lea    r8,[rsp+0x4ac]
   1400165a5:	mov    edx,0x200
   1400165aa:	lea    rcx,[rsp+0x8e0]
   1400165b2:	call   0x140047130
   1400165b7:	mov    QWORD PTR [rsp+0x38],rbp
   1400165bc:	mov    QWORD PTR [rsp+0x30],rbp
   1400165c1:	mov    DWORD PTR [rsp+0x28],0x104
   1400165c9:	lea    rax,[rsp+0x1f30]
   1400165d1:	mov    QWORD PTR [rsp+0x20],rax
   1400165d6:	xor    r9d,r9d
   1400165d9:	mov    r8d,r12d
   1400165dc:	xor    edx,edx
   1400165de:	lea    rcx,[rsp+0x8e0]
   1400165e6:	call   QWORD PTR [rip+0x4e0cc]        # 0x1400646b8
   1400165ec:	test   eax,eax
   1400165ee:	jne    0x140016602
   1400165f0:	call   QWORD PTR [rip+0x4e00a]        # 0x140064600
   1400165f6:	mov    edx,eax
   1400165f8:	mov    rcx,rbx
   1400165fb:	call   0x140007bf0
   140016600:	jmp    0x140016607
   140016602:	mov    DWORD PTR [rsp+0x64],r12d
   140016607:	lea    rdx,[rsp+0x480]
   14001660f:	mov    rcx,rdi
   140016612:	call   QWORD PTR [rip+0x4df18]        # 0x140064530
   140016618:	test   eax,eax
   14001661a:	jne    0x1400164e3
   140016620:	mov    rcx,rdi
   140016623:	call   QWORD PTR [rip+0x4df0f]        # 0x140064538
   140016629:	mov    ebx,DWORD PTR [rsp+0x64]
   14001662d:	jmp    0x140016633
   14001662f:	mov    ebx,DWORD PTR [rsp+0x64]
   140016633:	mov    rcx,QWORD PTR [rsp+0xb8]
   14001663b:	call   QWORD PTR [rip+0x4e0f7]        # 0x140064738
   140016641:	mov    eax,DWORD PTR [rip+0x721b1]        # 0x1400887f8
   140016647:	cmp    eax,0x5a
   14001664a:	mov    ecx,0xa
   14001664f:	cmovl  ebp,ecx
   140016652:	add    eax,ebp
   140016654:	mov    DWORD PTR [rip+0x7219e],eax        # 0x1400887f8
   14001665a:	movsxd r8,eax
   14001665d:	xor    r9d,r9d
   140016660:	mov    edx,0x402
   140016665:	mov    rdi,QWORD PTR [rsp+0x48]
   14001666a:	mov    rcx,QWORD PTR [rdi+0xeb180]
   140016671:	call   QWORD PTR [rip+0x4e4f9]        # 0x140064b70
   140016677:	xor    edx,edx
   140016679:	mov    rcx,rdi
   14001667c:	call   0x1400018d0
   140016681:	nop
   140016682:	lea    r9,[rip+0xfffffffffffeaa37]        # 0x1400010c0
   140016689:	mov    edx,0x8
   14001668e:	lea    r8d,[rdx+0x5c]
   140016692:	lea    rcx,[rsp+0x130]
   14001669a:	call   0x140045b20
   14001669f:	nop
   1400166a0:	lea    rdx,[rsi-0x18]
   1400166a4:	mov    eax,r14d
   1400166a7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400166ac:	add    eax,0xffffffff
   1400166af:	test   eax,eax
   1400166b1:	jg     0x1400166bd
   1400166b3:	mov    rcx,QWORD PTR [rdx]
   1400166b6:	mov    rax,QWORD PTR [rcx]
   1400166b9:	call   QWORD PTR [rax+0x8]
   1400166bc:	nop
   1400166bd:	mov    rdx,QWORD PTR [rsp+0x68]
   1400166c2:	add    rdx,0xffffffffffffffe8
   1400166c6:	mov    eax,r14d
   1400166c9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400166ce:	add    eax,0xffffffff
   1400166d1:	test   eax,eax
   1400166d3:	jg     0x1400166df
   1400166d5:	mov    rcx,QWORD PTR [rdx]
   1400166d8:	mov    rax,QWORD PTR [rcx]
   1400166db:	call   QWORD PTR [rax+0x8]
   1400166de:	nop
   1400166df:	mov    rdx,QWORD PTR [rsp+0x40]
   1400166e4:	add    rdx,0xffffffffffffffe8
   1400166e8:	mov    eax,r14d
   1400166eb:	lock xadd DWORD PTR [rdx+0x10],eax
   1400166f0:	add    eax,0xffffffff
   1400166f3:	test   eax,eax
   1400166f5:	jg     0x140016701
   1400166f7:	mov    rcx,QWORD PTR [rdx]
   1400166fa:	mov    rax,QWORD PTR [rcx]
   1400166fd:	call   QWORD PTR [rax+0x8]
   140016700:	nop
   140016701:	mov    rdx,QWORD PTR [rsp+0xd0]
   140016709:	add    rdx,0xffffffffffffffe8
   14001670d:	mov    eax,r14d
   140016710:	lock xadd DWORD PTR [rdx+0x10],eax
   140016715:	add    eax,0xffffffff
   140016718:	test   eax,eax
   14001671a:	jg     0x140016726
   14001671c:	mov    rcx,QWORD PTR [rdx]
   14001671f:	mov    rax,QWORD PTR [rcx]
   140016722:	call   QWORD PTR [rax+0x8]
   140016725:	nop
   140016726:	mov    rdx,QWORD PTR [rsp+0xc0]
   14001672e:	add    rdx,0xffffffffffffffe8
   140016732:	mov    eax,r14d
   140016735:	lock xadd DWORD PTR [rdx+0x10],eax
   14001673a:	add    eax,0xffffffff
   14001673d:	test   eax,eax
   14001673f:	jg     0x14001674b
   140016741:	mov    rcx,QWORD PTR [rdx]
   140016744:	mov    rax,QWORD PTR [rcx]
   140016747:	call   QWORD PTR [rax+0x8]
   14001674a:	nop
   14001674b:	mov    rdx,QWORD PTR [rsp+0xa0]
   140016753:	add    rdx,0xffffffffffffffe8
   140016757:	mov    eax,r14d
   14001675a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001675f:	add    eax,0xffffffff
   140016762:	test   eax,eax
   140016764:	jg     0x140016770
   140016766:	mov    rcx,QWORD PTR [rdx]
   140016769:	mov    rax,QWORD PTR [rcx]
   14001676c:	call   QWORD PTR [rax+0x8]
   14001676f:	nop
   140016770:	mov    rdx,QWORD PTR [rsp+0xb0]
   140016778:	add    rdx,0xffffffffffffffe8
   14001677c:	lock xadd DWORD PTR [rdx+0x10],r14d
   140016782:	add    r14d,0xffffffff
   140016786:	test   r14d,r14d
   140016789:	jg     0x140016794
   14001678b:	mov    rcx,QWORD PTR [rdx]
   14001678e:	mov    rax,QWORD PTR [rcx]
   140016791:	call   QWORD PTR [rax+0x8]
   140016794:	mov    eax,ebx
   140016796:	jmp    0x1400168b0
   14001679b:	mov    r9,rdi
   14001679e:	mov    edx,0x8
   1400167a3:	lea    r8d,[rdx+0x5c]
   1400167a7:	lea    rcx,[rsp+0x130]
   1400167af:	call   0x140045b20
   1400167b4:	nop
   1400167b5:	mov    rdx,QWORD PTR [rsp+0x58]
   1400167ba:	add    rdx,0xffffffffffffffe8
   1400167be:	mov    eax,r14d
   1400167c1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400167c6:	add    eax,0xffffffff
   1400167c9:	test   eax,eax
   1400167cb:	jg     0x1400167d7
   1400167cd:	mov    rcx,QWORD PTR [rdx]
   1400167d0:	mov    rax,QWORD PTR [rcx]
   1400167d3:	call   QWORD PTR [rax+0x8]
   1400167d6:	nop
   1400167d7:	mov    rdx,QWORD PTR [rsp+0x68]
   1400167dc:	add    rdx,0xffffffffffffffe8
   1400167e0:	mov    eax,r14d
   1400167e3:	lock xadd DWORD PTR [rdx+0x10],eax
   1400167e8:	add    eax,0xffffffff
   1400167eb:	test   eax,eax
   1400167ed:	jg     0x1400167f9
   1400167ef:	mov    rcx,QWORD PTR [rdx]
   1400167f2:	mov    rax,QWORD PTR [rcx]
   1400167f5:	call   QWORD PTR [rax+0x8]
   1400167f8:	nop
   1400167f9:	mov    rdx,QWORD PTR [rsp+0x40]
   1400167fe:	add    rdx,0xffffffffffffffe8
   140016802:	mov    eax,r14d
   140016805:	lock xadd DWORD PTR [rdx+0x10],eax
   14001680a:	add    eax,0xffffffff
   14001680d:	test   eax,eax
   14001680f:	jg     0x14001681b
   140016811:	mov    rcx,QWORD PTR [rdx]
   140016814:	mov    rax,QWORD PTR [rcx]
   140016817:	call   QWORD PTR [rax+0x8]
   14001681a:	nop
   14001681b:	mov    rdx,QWORD PTR [rsp+0xd0]
   140016823:	add    rdx,0xffffffffffffffe8
   140016827:	mov    eax,r14d
   14001682a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001682f:	add    eax,0xffffffff
   140016832:	test   eax,eax
   140016834:	jg     0x140016840
   140016836:	mov    rcx,QWORD PTR [rdx]
   140016839:	mov    rax,QWORD PTR [rcx]
   14001683c:	call   QWORD PTR [rax+0x8]
   14001683f:	nop
   140016840:	mov    rdx,QWORD PTR [rsp+0xc0]
   140016848:	add    rdx,0xffffffffffffffe8
   14001684c:	mov    eax,r14d
   14001684f:	lock xadd DWORD PTR [rdx+0x10],eax
   140016854:	add    eax,0xffffffff
   140016857:	test   eax,eax
   140016859:	jg     0x140016865
   14001685b:	mov    rcx,QWORD PTR [rdx]
   14001685e:	mov    rax,QWORD PTR [rcx]
   140016861:	call   QWORD PTR [rax+0x8]
   140016864:	nop
   140016865:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001686d:	add    rdx,0xffffffffffffffe8
   140016871:	mov    eax,r14d
   140016874:	lock xadd DWORD PTR [rdx+0x10],eax
   140016879:	add    eax,0xffffffff
   14001687c:	test   eax,eax
   14001687e:	jg     0x14001688a
   140016880:	mov    rcx,QWORD PTR [rdx]
   140016883:	mov    rax,QWORD PTR [rcx]
   140016886:	call   QWORD PTR [rax+0x8]
   140016889:	nop
   14001688a:	mov    rdx,QWORD PTR [rsp+0xb0]
   140016892:	add    rdx,0xffffffffffffffe8
   140016896:	lock xadd DWORD PTR [rdx+0x10],r14d
   14001689c:	add    r14d,0xffffffff
   1400168a0:	test   r14d,r14d
   1400168a3:	jg     0x1400168ae
   1400168a5:	mov    rcx,QWORD PTR [rdx]
   1400168a8:	mov    rax,QWORD PTR [rcx]
   1400168ab:	call   QWORD PTR [rax+0x8]
   1400168ae:	xor    eax,eax
   1400168b0:	mov    rcx,QWORD PTR [rsp+0x2540]
   1400168b8:	xor    rcx,rsp
   1400168bb:	call   0x140046470
   1400168c0:	lea    r11,[rsp+0x2550]
   1400168c8:	mov    rbx,QWORD PTR [r11+0x38]
   1400168cc:	mov    rbp,QWORD PTR [r11+0x40]
   1400168d0:	mov    rsi,QWORD PTR [r11+0x48]
   1400168d4:	mov    rsp,r11
   1400168d7:	pop    r15
   1400168d9:	pop    r14
   1400168db:	pop    r13
   1400168dd:	pop    r12
   1400168df:	pop    rdi
   1400168e0:	ret    
   1400168e1:	int3   
   1400168e2:	int3   
   1400168e3:	int3   
   1400168e4:	int3   
   1400168e5:	int3   
   1400168e6:	int3   
   1400168e7:	int3   
   1400168e8:	int3   
   1400168e9:	int3   
   1400168ea:	int3   
   1400168eb:	int3   
   1400168ec:	int3   
   1400168ed:	int3   
   1400168ee:	int3   
   1400168ef:	int3   
   1400168f0:	rex push rbp
   1400168f2:	sub    rsp,0x20
   1400168f6:	mov    rbp,rdx
   1400168f9:	lea    rcx,[rbp+0xb0]
   140016900:	call   0x140001090
   140016905:	add    rsp,0x20
   140016909:	pop    rbp
   14001690a:	ret    
   14001690b:	int3   
   14001690c:	int3   
   14001690d:	int3   
   14001690e:	int3   
   14001690f:	int3   
   140016910:	rex push rbp
   140016912:	sub    rsp,0x20
   140016916:	mov    rbp,rdx
   140016919:	lea    rcx,[rbp+0xb0]
   140016920:	call   0x1400010c0
   140016925:	add    rsp,0x20
   140016929:	pop    rbp
   14001692a:	ret    
   14001692b:	int3   
   14001692c:	int3   
   14001692d:	int3   
   14001692e:	int3   
   14001692f:	int3   
   140016930:	rex push rbp
   140016932:	sub    rsp,0x20
   140016936:	mov    rbp,rdx
   140016939:	lea    rcx,[rbp+0xa0]
   140016940:	call   0x140001090
   140016945:	add    rsp,0x20
   140016949:	pop    rbp
   14001694a:	ret    
   14001694b:	int3   
   14001694c:	int3   
   14001694d:	int3   
   14001694e:	int3   
   14001694f:	int3   
   140016950:	rex push rbp
   140016952:	sub    rsp,0x20
   140016956:	mov    rbp,rdx
   140016959:	lea    rcx,[rbp+0xa0]
   140016960:	call   0x1400010c0
   140016965:	add    rsp,0x20
   140016969:	pop    rbp
   14001696a:	ret    
   14001696b:	int3   
   14001696c:	int3   
   14001696d:	int3   
   14001696e:	int3   
   14001696f:	int3   
   140016970:	rex push rbp
   140016972:	sub    rsp,0x20
   140016976:	mov    rbp,rdx
   140016979:	lea    rcx,[rbp+0xc0]
   140016980:	call   0x140001090
   140016985:	add    rsp,0x20
   140016989:	pop    rbp
   14001698a:	ret    
   14001698b:	int3   
   14001698c:	int3   
   14001698d:	int3   
   14001698e:	int3   
   14001698f:	int3   
   140016990:	rex push rbp
   140016992:	sub    rsp,0x20
   140016996:	mov    rbp,rdx
   140016999:	lea    rcx,[rbp+0xc0]
   1400169a0:	call   0x1400010c0
   1400169a5:	add    rsp,0x20
   1400169a9:	pop    rbp
   1400169aa:	ret    
   1400169ab:	int3   
   1400169ac:	int3   
   1400169ad:	int3   
   1400169ae:	int3   
   1400169af:	int3   
   1400169b0:	rex push rbp
   1400169b2:	sub    rsp,0x20
   1400169b6:	mov    rbp,rdx
   1400169b9:	lea    rcx,[rbp+0xd0]
   1400169c0:	call   0x1400010c0
   1400169c5:	add    rsp,0x20
   1400169c9:	pop    rbp
   1400169ca:	ret    
   1400169cb:	int3   
   1400169cc:	int3   
   1400169cd:	int3   
   1400169ce:	int3   
   1400169cf:	int3   
   1400169d0:	rex push rbp
   1400169d2:	sub    rsp,0x20
   1400169d6:	mov    rbp,rdx
   1400169d9:	lea    rcx,[rbp+0x40]
   1400169dd:	call   0x1400010c0
   1400169e2:	add    rsp,0x20
   1400169e6:	pop    rbp
   1400169e7:	ret    
   1400169e8:	int3   
   1400169e9:	int3   
   1400169ea:	int3   
   1400169eb:	int3   
   1400169ec:	int3   
   1400169ed:	int3   
   1400169ee:	int3   
   1400169ef:	int3   
   1400169f0:	rex push rbp
   1400169f2:	sub    rsp,0x20
   1400169f6:	mov    rbp,rdx
   1400169f9:	lea    rcx,[rbp+0x68]
   1400169fd:	call   0x140001090
   140016a02:	add    rsp,0x20
   140016a06:	pop    rbp
   140016a07:	ret    
   140016a08:	int3   
   140016a09:	int3   
   140016a0a:	int3   
   140016a0b:	int3   
   140016a0c:	int3   
   140016a0d:	int3   
   140016a0e:	int3   
   140016a0f:	int3   
   140016a10:	rex push rbp
   140016a12:	sub    rsp,0x20
   140016a16:	mov    rbp,rdx
   140016a19:	lea    rcx,[rbp+0x68]
   140016a1d:	call   0x1400010c0
   140016a22:	add    rsp,0x20
   140016a26:	pop    rbp
   140016a27:	ret    
   140016a28:	int3   
   140016a29:	int3   
   140016a2a:	int3   
   140016a2b:	int3   
   140016a2c:	int3   
   140016a2d:	int3   
   140016a2e:	int3   
   140016a2f:	int3   
   140016a30:	rex push rbp
   140016a32:	sub    rsp,0x20
   140016a36:	mov    rbp,rdx
   140016a39:	lea    rcx,[rbp+0x58]
   140016a3d:	call   0x1400010c0
   140016a42:	add    rsp,0x20
   140016a46:	pop    rbp
   140016a47:	ret    
   140016a48:	int3   
   140016a49:	int3   
   140016a4a:	int3   
   140016a4b:	int3   
   140016a4c:	int3   
   140016a4d:	int3   
   140016a4e:	int3   
   140016a4f:	int3   
   140016a50:	rex push rbp
   140016a52:	sub    rsp,0x20
   140016a56:	mov    rbp,rdx
   140016a59:	lea    r9,[rip+0xfffffffffffea660]        # 0x1400010c0
   140016a60:	mov    r8d,0x64
   140016a66:	mov    edx,0x8
   140016a6b:	lea    rcx,[rbp+0x130]
   140016a72:	call   0x140045b20
   140016a77:	add    rsp,0x20
   140016a7b:	pop    rbp
   140016a7c:	ret    
   140016a7d:	int3   
   140016a7e:	int3   
   140016a7f:	int3   
   140016a80:	rex push rbp
   140016a82:	sub    rsp,0x20
   140016a86:	mov    rbp,rdx
   140016a89:	lea    rcx,[rbp+0x130]
   140016a90:	call   0x140002e70
   140016a95:	add    rsp,0x20
   140016a99:	pop    rbp
   140016a9a:	ret    
   140016a9b:	int3   
   140016a9c:	int3   
   140016a9d:	int3   
   140016a9e:	int3   
   140016a9f:	int3   
   140016aa0:	rex push rbp
   140016aa2:	sub    rsp,0x20
   140016aa6:	mov    rbp,rdx
   140016aa9:	lea    rcx,[rbp+0x100]
   140016ab0:	call   0x1400010c0
   140016ab5:	add    rsp,0x20
   140016ab9:	pop    rbp
   140016aba:	ret    
   140016abb:	int3   
   140016abc:	int3   
   140016abd:	int3   
   140016abe:	int3   
   140016abf:	int3   
   140016ac0:	rex push rbp
   140016ac2:	sub    rsp,0x20
   140016ac6:	mov    rbp,rdx
   140016ac9:	lea    rcx,[rbp+0xc8]
   140016ad0:	call   0x140001090
   140016ad5:	add    rsp,0x20
   140016ad9:	pop    rbp
   140016ada:	ret    
   140016adb:	int3   
   140016adc:	int3   
   140016add:	int3   
   140016ade:	int3   
   140016adf:	int3   
   140016ae0:	rex push rbp
   140016ae2:	sub    rsp,0x20
   140016ae6:	mov    rbp,rdx
   140016ae9:	lea    rcx,[rbp+0xc8]
   140016af0:	call   0x1400010c0
   140016af5:	add    rsp,0x20
   140016af9:	pop    rbp
   140016afa:	ret    
   140016afb:	int3   
   140016afc:	int3   
   140016afd:	int3   
   140016afe:	int3   
   140016aff:	int3   
   140016b00:	rex push rbp
   140016b02:	sub    rsp,0x20
   140016b06:	mov    rbp,rdx
   140016b09:	lea    rcx,[rbp+0xe0]
   140016b10:	call   0x1400010c0
   140016b15:	add    rsp,0x20
   140016b19:	pop    rbp
   140016b1a:	ret    
   140016b1b:	int3   
   140016b1c:	int3   
   140016b1d:	int3   
   140016b1e:	int3   
   140016b1f:	int3   
   140016b20:	rex push rbp
   140016b22:	sub    rsp,0x20
   140016b26:	mov    rbp,rdx
   140016b29:	lea    rcx,[rbp+0xf0]
   140016b30:	call   0x1400010c0
   140016b35:	add    rsp,0x20
   140016b39:	pop    rbp
   140016b3a:	ret    
   140016b3b:	int3   
   140016b3c:	int3   
   140016b3d:	int3   
   140016b3e:	int3   
   140016b3f:	int3   
   140016b40:	mov    rax,rsp
   140016b43:	push   rdi
   140016b44:	push   r12
   140016b46:	push   r13
   140016b48:	push   r14
   140016b4a:	push   r15
   140016b4c:	sub    rsp,0xff0
   140016b53:	mov    QWORD PTR [rsp+0xf8],0xfffffffffffffffe
   140016b5f:	mov    QWORD PTR [rax+0x10],rbx
   140016b63:	mov    QWORD PTR [rax+0x18],rbp
   140016b67:	mov    QWORD PTR [rax+0x20],rsi
   140016b6b:	mov    rax,QWORD PTR [rip+0x701fe]        # 0x140086d70
   140016b72:	xor    rax,rsp
   140016b75:	mov    QWORD PTR [rsp+0xfe0],rax
   140016b7d:	mov    QWORD PTR [rsp+0x40],rcx
   140016b82:	xor    ebp,ebp
   140016b84:	mov    DWORD PTR [rsp+0xb0],ebp
   140016b8b:	call   0x14002b874
   140016b90:	mov    rdx,rax
   140016b93:	mov    ecx,ebp
   140016b95:	test   rax,rax
   140016b98:	setne  cl
   140016b9b:	test   ecx,ecx
   140016b9d:	jne    0x140016baa
   140016b9f:	mov    ecx,0x80004005
   140016ba4:	call   0x140001430
   140016ba9:	int3   
   140016baa:	mov    rax,QWORD PTR [rax]
   140016bad:	mov    rcx,rdx
   140016bb0:	call   QWORD PTR [rax+0x18]
   140016bb3:	add    rax,0x18
   140016bb7:	mov    QWORD PTR [rsp+0xb8],rax
   140016bbf:	lea    r12,[rip+0x4e90a]        # 0x1400654d0
   140016bc6:	mov    rdi,r12
   140016bc9:	shr    rdi,0x10
   140016bcd:	jne    0x140016bf4
   140016bcf:	movzx  ebx,r12w
   140016bd3:	mov    ecx,ebx
   140016bd5:	call   0x14002b860
   140016bda:	test   rax,rax
   140016bdd:	je     0x140016c05
   140016bdf:	mov    r8d,ebx
   140016be2:	mov    rdx,rax
   140016be5:	lea    rcx,[rsp+0xb8]
   140016bed:	call   0x140003650
   140016bf2:	jmp    0x140016c05
   140016bf4:	mov    rdx,r12
   140016bf7:	lea    rcx,[rsp+0xb8]
   140016bff:	call   0x140003930
   140016c04:	nop
   140016c05:	mov    QWORD PTR [rsp+0xc0],rbp
   140016c0d:	mov    DWORD PTR [rsp+0xc8],ebp
   140016c14:	call   0x14002b874
   140016c19:	mov    rdx,rax
   140016c1c:	mov    ecx,ebp
   140016c1e:	test   rax,rax
   140016c21:	setne  cl
   140016c24:	test   ecx,ecx
   140016c26:	jne    0x140016c33
   140016c28:	mov    ecx,0x80004005
   140016c2d:	call   0x140001430
   140016c32:	int3   
   140016c33:	mov    rax,QWORD PTR [rax]
   140016c36:	mov    rcx,rdx
   140016c39:	call   QWORD PTR [rax+0x18]
   140016c3c:	lea    rsi,[rax+0x18]
   140016c40:	mov    QWORD PTR [rsp+0x48],rsi
   140016c45:	test   rdi,rdi
   140016c48:	jne    0x140016c71
   140016c4a:	movzx  edi,r12w
   140016c4e:	mov    ecx,edi
   140016c50:	call   0x14002b860
   140016c55:	test   rax,rax
   140016c58:	je     0x140016c83
   140016c5a:	mov    r8d,edi
   140016c5d:	mov    rdx,rax
   140016c60:	lea    rcx,[rsp+0x48]
   140016c65:	call   0x140003650
   140016c6a:	mov    rsi,QWORD PTR [rsp+0x48]
   140016c6f:	jmp    0x140016c83
   140016c71:	mov    rdx,r12
   140016c74:	lea    rcx,[rsp+0x48]
   140016c79:	call   0x140003930
   140016c7e:	mov    rsi,QWORD PTR [rsp+0x48]
   140016c83:	call   0x14002b874
   140016c88:	mov    rdx,rax
   140016c8b:	mov    ecx,ebp
   140016c8d:	test   rax,rax
   140016c90:	setne  cl
   140016c93:	test   ecx,ecx
   140016c95:	jne    0x140016ca2
   140016c97:	mov    ecx,0x80004005
   140016c9c:	call   0x140001430
   140016ca1:	int3   
   140016ca2:	mov    rax,QWORD PTR [rax]
   140016ca5:	mov    rcx,rdx
   140016ca8:	call   QWORD PTR [rax+0x18]
   140016cab:	add    rax,0x18
   140016caf:	mov    QWORD PTR [rsp+0xa8],rax
   140016cb7:	lea    rdx,[rip+0x500aa]        # 0x140066d68
   140016cbe:	test   rdx,0xffffffffffff0000
   140016cc5:	jne    0x140016ceb
   140016cc7:	movzx  edi,dx
   140016cca:	mov    ecx,edi
   140016ccc:	call   0x14002b860
   140016cd1:	test   rax,rax
   140016cd4:	je     0x140016cf9
   140016cd6:	mov    r8d,edi
   140016cd9:	mov    rdx,rax
   140016cdc:	lea    rcx,[rsp+0xa8]
   140016ce4:	call   0x140003650
   140016ce9:	jmp    0x140016cf9
   140016ceb:	lea    rcx,[rsp+0xa8]
   140016cf3:	call   0x140003930
   140016cf8:	nop
   140016cf9:	call   0x14002b874
   140016cfe:	mov    rdx,rax
   140016d01:	mov    ecx,ebp
   140016d03:	test   rax,rax
   140016d06:	setne  cl
   140016d09:	test   ecx,ecx
   140016d0b:	jne    0x140016d18
   140016d0d:	mov    ecx,0x80004005
   140016d12:	call   0x140001430
   140016d17:	int3   
   140016d18:	mov    rax,QWORD PTR [rax]
   140016d1b:	mov    rcx,rdx
   140016d1e:	call   QWORD PTR [rax+0x18]
   140016d21:	lea    r15,[rax+0x18]
   140016d25:	mov    QWORD PTR [rsp+0x88],r15
   140016d2d:	lea    rdx,[rip+0x5001c]        # 0x140066d50
   140016d34:	test   rdx,0xffffffffffff0000
   140016d3b:	jne    0x140016d69
   140016d3d:	movzx  edi,dx
   140016d40:	mov    ecx,edi
   140016d42:	call   0x14002b860
   140016d47:	test   rax,rax
   140016d4a:	je     0x140016d7e
   140016d4c:	mov    r8d,edi
   140016d4f:	mov    rdx,rax
   140016d52:	lea    rcx,[rsp+0x88]
   140016d5a:	call   0x140003650
   140016d5f:	mov    r15,QWORD PTR [rsp+0x88]
   140016d67:	jmp    0x140016d7e
   140016d69:	lea    rcx,[rsp+0x88]
   140016d71:	call   0x140003930
   140016d76:	mov    r15,QWORD PTR [rsp+0x88]
   140016d7e:	call   0x14002b874
   140016d83:	mov    rdx,rax
   140016d86:	mov    ecx,ebp
   140016d88:	test   rax,rax
   140016d8b:	setne  cl
   140016d8e:	test   ecx,ecx
   140016d90:	jne    0x140016d9d
   140016d92:	mov    ecx,0x80004005
   140016d97:	call   0x140001430
   140016d9c:	int3   
   140016d9d:	mov    rax,QWORD PTR [rax]
   140016da0:	mov    rcx,rdx
   140016da3:	call   QWORD PTR [rax+0x18]
   140016da6:	lea    r14,[rax+0x18]
   140016daa:	mov    QWORD PTR [rsp+0x78],r14
   140016daf:	lea    rdx,[rip+0x4ff82]        # 0x140066d38
   140016db6:	test   rdx,0xffffffffffff0000
   140016dbd:	jne    0x140016de5
   140016dbf:	movzx  edi,dx
   140016dc2:	mov    ecx,edi
   140016dc4:	call   0x14002b860
   140016dc9:	test   rax,rax
   140016dcc:	je     0x140016df4
   140016dce:	mov    r8d,edi
   140016dd1:	mov    rdx,rax
   140016dd4:	lea    rcx,[rsp+0x78]
   140016dd9:	call   0x140003650
   140016dde:	mov    r14,QWORD PTR [rsp+0x78]
   140016de3:	jmp    0x140016df4
   140016de5:	lea    rcx,[rsp+0x78]
   140016dea:	call   0x140003930
   140016def:	mov    r14,QWORD PTR [rsp+0x78]
   140016df4:	call   0x14002b874
   140016df9:	mov    rdx,rax
   140016dfc:	mov    ecx,ebp
   140016dfe:	test   rax,rax
   140016e01:	setne  cl
   140016e04:	test   ecx,ecx
   140016e06:	jne    0x140016e13
   140016e08:	mov    ecx,0x80004005
   140016e0d:	call   0x140001430
   140016e12:	int3   
   140016e13:	mov    rax,QWORD PTR [rax]
   140016e16:	mov    rcx,rdx
   140016e19:	call   QWORD PTR [rax+0x18]
   140016e1c:	lea    r13,[rax+0x18]
   140016e20:	mov    QWORD PTR [rsp+0x70],r13
   140016e25:	lea    rdx,[rip+0x4fef4]        # 0x140066d20
   140016e2c:	test   rdx,0xffffffffffff0000
   140016e33:	jne    0x140016e5b
   140016e35:	movzx  edi,dx
   140016e38:	mov    ecx,edi
   140016e3a:	call   0x14002b860
   140016e3f:	test   rax,rax
   140016e42:	je     0x140016e6a
   140016e44:	mov    r8d,edi
   140016e47:	mov    rdx,rax
   140016e4a:	lea    rcx,[rsp+0x70]
   140016e4f:	call   0x140003650
   140016e54:	mov    r13,QWORD PTR [rsp+0x70]
   140016e59:	jmp    0x140016e6a
   140016e5b:	lea    rcx,[rsp+0x70]
   140016e60:	call   0x140003930
   140016e65:	mov    r13,QWORD PTR [rsp+0x70]
   140016e6a:	call   0x14002b874
   140016e6f:	mov    rdx,rax
   140016e72:	mov    ecx,ebp
   140016e74:	test   rax,rax
   140016e77:	setne  cl
   140016e7a:	test   ecx,ecx
   140016e7c:	jne    0x140016e89
   140016e7e:	mov    ecx,0x80004005
   140016e83:	call   0x140001430
   140016e88:	int3   
   140016e89:	mov    rax,QWORD PTR [rax]
   140016e8c:	mov    rcx,rdx
   140016e8f:	call   QWORD PTR [rax+0x18]
   140016e92:	lea    r12,[rax+0x18]
   140016e96:	mov    QWORD PTR [rsp+0x80],r12
   140016e9e:	lea    rdx,[rip+0x4fe63]        # 0x140066d08
   140016ea5:	test   rdx,0xffffffffffff0000
   140016eac:	jne    0x140016eda
   140016eae:	movzx  edi,dx
   140016eb1:	mov    ecx,edi
   140016eb3:	call   0x14002b860
   140016eb8:	test   rax,rax
   140016ebb:	je     0x140016eef
   140016ebd:	mov    r8d,edi
   140016ec0:	mov    rdx,rax
   140016ec3:	lea    rcx,[rsp+0x80]
   140016ecb:	call   0x140003650
   140016ed0:	mov    r12,QWORD PTR [rsp+0x80]
   140016ed8:	jmp    0x140016eef
   140016eda:	lea    rcx,[rsp+0x80]
   140016ee2:	call   0x140003930
   140016ee7:	mov    r12,QWORD PTR [rsp+0x80]
   140016eef:	call   0x14002b874
   140016ef4:	mov    rdx,rax
   140016ef7:	mov    ecx,ebp
   140016ef9:	test   rax,rax
   140016efc:	setne  cl
   140016eff:	test   ecx,ecx
   140016f01:	jne    0x140016f0e
   140016f03:	mov    ecx,0x80004005
   140016f08:	call   0x140001430
   140016f0d:	int3   
   140016f0e:	mov    rax,QWORD PTR [rax]
   140016f11:	mov    rcx,rdx
   140016f14:	call   QWORD PTR [rax+0x18]
   140016f17:	lea    rbp,[rax+0x18]
   140016f1b:	mov    QWORD PTR [rsp+0x90],rbp
   140016f23:	lea    rdx,[rip+0x4fdc6]        # 0x140066cf0
   140016f2a:	test   rdx,0xffffffffffff0000
   140016f31:	jne    0x140016f5f
   140016f33:	movzx  edi,dx
   140016f36:	mov    ecx,edi
   140016f38:	call   0x14002b860
   140016f3d:	test   rax,rax
   140016f40:	je     0x140016f74
   140016f42:	mov    r8d,edi
   140016f45:	mov    rdx,rax
   140016f48:	lea    rcx,[rsp+0x90]
   140016f50:	call   0x140003650
   140016f55:	mov    rbp,QWORD PTR [rsp+0x90]
   140016f5d:	jmp    0x140016f74
   140016f5f:	lea    rcx,[rsp+0x90]
   140016f67:	call   0x140003930
   140016f6c:	mov    rbp,QWORD PTR [rsp+0x90]
   140016f74:	call   0x14002b874
   140016f79:	mov    rdx,rax
   140016f7c:	xor    ecx,ecx
   140016f7e:	test   rax,rax
   140016f81:	setne  cl
   140016f84:	test   ecx,ecx
   140016f86:	jne    0x140016f93
   140016f88:	mov    ecx,0x80004005
   140016f8d:	call   0x140001430
   140016f92:	int3   
   140016f93:	mov    rax,QWORD PTR [rax]
   140016f96:	mov    rcx,rdx
   140016f99:	call   QWORD PTR [rax+0x18]
   140016f9c:	lea    rdi,[rax+0x18]
   140016fa0:	mov    QWORD PTR [rsp+0x68],rdi
   140016fa5:	lea    rdx,[rip+0x4fd2c]        # 0x140066cd8
   140016fac:	test   rdx,0xffffffffffff0000
   140016fb3:	jne    0x140016fdb
   140016fb5:	movzx  ebx,dx
   140016fb8:	mov    ecx,ebx
   140016fba:	call   0x14002b860
   140016fbf:	test   rax,rax
   140016fc2:	je     0x140016fea
   140016fc4:	mov    r8d,ebx
   140016fc7:	mov    rdx,rax
   140016fca:	lea    rcx,[rsp+0x68]
   140016fcf:	call   0x140003650
   140016fd4:	mov    rdi,QWORD PTR [rsp+0x68]
   140016fd9:	jmp    0x140016fea
   140016fdb:	lea    rcx,[rsp+0x68]
   140016fe0:	call   0x140003930
   140016fe5:	mov    rdi,QWORD PTR [rsp+0x68]
   140016fea:	call   0x14002b874
   140016fef:	mov    r11,rax
   140016ff2:	xor    ecx,ecx
   140016ff4:	test   rax,rax
   140016ff7:	setne  cl
   140016ffa:	test   ecx,ecx
   140016ffc:	jne    0x140017009
   140016ffe:	mov    ecx,0x80004005
   140017003:	call   0x140001430
   140017008:	int3   
   140017009:	mov    rax,QWORD PTR [rax]
   14001700c:	mov    rcx,r11
   14001700f:	call   QWORD PTR [rax+0x18]
   140017012:	lea    rbx,[rax+0x18]
   140017016:	mov    QWORD PTR [rsp+0xa0],rbx
   14001701e:	lea    rax,[rip+0x4fc9b]        # 0x140066cc0
   140017025:	test   rax,0xffffffffffff0000
   14001702b:	jne    0x14001705f
   14001702d:	movzx  ecx,ax
   140017030:	call   0x14002b860
   140017035:	test   rax,rax
   140017038:	je     0x140017077
   14001703a:	lea    rcx,[rip+0x4fc7f]        # 0x140066cc0
   140017041:	movzx  r8d,cx
   140017045:	mov    rdx,rax
   140017048:	lea    rcx,[rsp+0xa0]
   140017050:	call   0x140003650
   140017055:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001705d:	jmp    0x140017077
   14001705f:	mov    rdx,rax
   140017062:	lea    rcx,[rsp+0xa0]
   14001706a:	call   0x140003930
   14001706f:	mov    rbx,QWORD PTR [rsp+0xa0]
   140017077:	mov    WORD PTR [rsp+0xbc0],0x0
   140017081:	xor    edx,edx
   140017083:	mov    r8d,0x206
   140017089:	lea    rcx,[rsp+0xbc2]
   140017091:	call   0x140047720
   140017096:	mov    r9d,0x6
   14001709c:	xor    r8d,r8d
   14001709f:	xor    edx,edx
   1400170a1:	xor    ecx,ecx
   1400170a3:	call   QWORD PTR [rip+0x4d677]        # 0x140064720
   1400170a9:	mov    QWORD PTR [rsp+0x50],rax
   1400170ae:	cmp    rax,0xffffffffffffffff
   1400170b2:	jne    0x140017213
   1400170b8:	lea    rdx,[rbx-0x18]
   1400170bc:	or     rbp,rax
   1400170bf:	mov    eax,ebp
   1400170c1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400170c6:	add    eax,0xffffffff
   1400170c9:	test   eax,eax
   1400170cb:	jg     0x1400170d7
   1400170cd:	mov    rcx,QWORD PTR [rdx]
   1400170d0:	mov    rax,QWORD PTR [rcx]
   1400170d3:	call   QWORD PTR [rax+0x8]
   1400170d6:	nop
   1400170d7:	mov    rdx,QWORD PTR [rsp+0x68]
   1400170dc:	add    rdx,0xffffffffffffffe8
   1400170e0:	mov    eax,ebp
   1400170e2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400170e7:	add    eax,0xffffffff
   1400170ea:	test   eax,eax
   1400170ec:	jg     0x1400170f8
   1400170ee:	mov    rcx,QWORD PTR [rdx]
   1400170f1:	mov    rax,QWORD PTR [rcx]
   1400170f4:	call   QWORD PTR [rax+0x8]
   1400170f7:	nop
   1400170f8:	mov    rdx,QWORD PTR [rsp+0x90]
   140017100:	add    rdx,0xffffffffffffffe8
   140017104:	mov    eax,ebp
   140017106:	lock xadd DWORD PTR [rdx+0x10],eax
   14001710b:	add    eax,0xffffffff
   14001710e:	test   eax,eax
   140017110:	jg     0x14001711c
   140017112:	mov    rcx,QWORD PTR [rdx]
   140017115:	mov    rax,QWORD PTR [rcx]
   140017118:	call   QWORD PTR [rax+0x8]
   14001711b:	nop
   14001711c:	mov    rdx,QWORD PTR [rsp+0x80]
   140017124:	add    rdx,0xffffffffffffffe8
   140017128:	mov    eax,ebp
   14001712a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001712f:	add    eax,0xffffffff
   140017132:	test   eax,eax
   140017134:	jg     0x140017140
   140017136:	mov    rcx,QWORD PTR [rdx]
   140017139:	mov    rax,QWORD PTR [rcx]
   14001713c:	call   QWORD PTR [rax+0x8]
   14001713f:	nop
   140017140:	mov    rdx,QWORD PTR [rsp+0x70]
   140017145:	add    rdx,0xffffffffffffffe8
   140017149:	mov    eax,ebp
   14001714b:	lock xadd DWORD PTR [rdx+0x10],eax
   140017150:	add    eax,0xffffffff
   140017153:	test   eax,eax
   140017155:	jg     0x140017161
   140017157:	mov    rcx,QWORD PTR [rdx]
   14001715a:	mov    rax,QWORD PTR [rcx]
   14001715d:	call   QWORD PTR [rax+0x8]
   140017160:	nop
   140017161:	mov    rdx,QWORD PTR [rsp+0x78]
   140017166:	add    rdx,0xffffffffffffffe8
   14001716a:	mov    eax,ebp
   14001716c:	lock xadd DWORD PTR [rdx+0x10],eax
   140017171:	add    eax,0xffffffff
   140017174:	test   eax,eax
   140017176:	jg     0x140017182
   140017178:	mov    rcx,QWORD PTR [rdx]
   14001717b:	mov    rax,QWORD PTR [rcx]
   14001717e:	call   QWORD PTR [rax+0x8]
   140017181:	nop
   140017182:	mov    rdx,QWORD PTR [rsp+0x88]
   14001718a:	add    rdx,0xffffffffffffffe8
   14001718e:	mov    eax,ebp
   140017190:	lock xadd DWORD PTR [rdx+0x10],eax
   140017195:	add    eax,0xffffffff
   140017198:	test   eax,eax
   14001719a:	jg     0x1400171a6
   14001719c:	mov    rcx,QWORD PTR [rdx]
   14001719f:	mov    rax,QWORD PTR [rcx]
   1400171a2:	call   QWORD PTR [rax+0x8]
   1400171a5:	nop
   1400171a6:	mov    rdx,QWORD PTR [rsp+0xa8]
   1400171ae:	add    rdx,0xffffffffffffffe8
   1400171b2:	mov    eax,ebp
   1400171b4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400171b9:	add    eax,0xffffffff
   1400171bc:	test   eax,eax
   1400171be:	jg     0x1400171ca
   1400171c0:	mov    rcx,QWORD PTR [rdx]
   1400171c3:	mov    rax,QWORD PTR [rcx]
   1400171c6:	call   QWORD PTR [rax+0x8]
   1400171c9:	nop
   1400171ca:	mov    rdx,QWORD PTR [rsp+0x48]
   1400171cf:	add    rdx,0xffffffffffffffe8
   1400171d3:	mov    eax,ebp
   1400171d5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400171da:	add    eax,0xffffffff
   1400171dd:	test   eax,eax
   1400171df:	jg     0x1400171eb
   1400171e1:	mov    rcx,QWORD PTR [rdx]
   1400171e4:	mov    rax,QWORD PTR [rcx]
   1400171e7:	call   QWORD PTR [rax+0x8]
   1400171ea:	nop
   1400171eb:	mov    rdx,QWORD PTR [rsp+0xb8]
   1400171f3:	add    rdx,0xffffffffffffffe8
   1400171f7:	lock xadd DWORD PTR [rdx+0x10],ebp
   1400171fc:	add    ebp,0xffffffff
   1400171ff:	test   ebp,ebp
   140017201:	jg     0x14001720c
   140017203:	mov    rcx,QWORD PTR [rdx]
   140017206:	mov    rax,QWORD PTR [rcx]
   140017209:	call   QWORD PTR [rax+0x8]
   14001720c:	xor    eax,eax
   14001720e:	jmp    0x14001841d
   140017213:	mov    DWORD PTR [rsp+0x108],0x20
   14001721e:	mov    DWORD PTR [rsp+0x60],0x0
   140017226:	lea    r8,[rsp+0x108]
   14001722e:	xor    edx,edx
   140017230:	mov    rcx,rax
   140017233:	call   QWORD PTR [rip+0x4d4ef]        # 0x140064728
   140017239:	test   eax,eax
   14001723b:	je     0x1400177e4
   140017241:	mov    rsi,QWORD PTR [rsp+0xa8]
   140017249:	data16 xchg ax,ax
   14001724c:	data16 data16 xchg ax,ax
   140017250:	mov    QWORD PTR [rsp+0x20],0x0
   140017259:	mov    r9d,0x100
   14001725f:	lea    r8,[rsp+0x7a0]
   140017267:	lea    rdx,[rsp+0x108]
   14001726f:	mov    rcx,QWORD PTR [rsp+0x50]
   140017274:	call   QWORD PTR [rip+0x4d4b6]        # 0x140064730
   14001727a:	lea    rdx,[rip+0x4fca7]        # 0x140066f28
   140017281:	lea    rcx,[rsp+0x7a0]
   140017289:	call   0x140046660
   14001728e:	test   rax,rax
   140017291:	jne    0x1400172b0
   140017293:	lea    rdx,[rip+0x4fdbe]        # 0x140067058
   14001729a:	lea    rcx,[rsp+0x7a0]
   1400172a2:	call   0x140046660
   1400172a7:	test   rax,rax
   1400172aa:	je     0x1400177b7
   1400172b0:	mov    rdx,rsi
   1400172b3:	lea    rcx,[rsp+0x7a0]
   1400172bb:	call   0x140046660
   1400172c0:	test   rax,rax
   1400172c3:	je     0x1400172d7
   1400172c5:	mov    rax,QWORD PTR [rsp+0x40]
   1400172ca:	cmp    DWORD PTR [rax+0x2a8],0x0
   1400172d1:	jne    0x1400173e0
   1400172d7:	mov    rdx,r15
   1400172da:	lea    rcx,[rsp+0x7a0]
   1400172e2:	call   0x140046660
   1400172e7:	test   rax,rax
   1400172ea:	je     0x1400172fe
   1400172ec:	mov    rax,QWORD PTR [rsp+0x40]
   1400172f1:	cmp    DWORD PTR [rax+0x2ac],0x0
   1400172f8:	jne    0x1400173e0
   1400172fe:	mov    rdx,r14
   140017301:	lea    rcx,[rsp+0x7a0]
   140017309:	call   0x140046660
   14001730e:	test   rax,rax
   140017311:	je     0x140017325
   140017313:	mov    rax,QWORD PTR [rsp+0x40]
   140017318:	cmp    DWORD PTR [rax+0x2ac],0x0
   14001731f:	jne    0x1400173e0
   140017325:	mov    rdx,r13
   140017328:	lea    rcx,[rsp+0x7a0]
   140017330:	call   0x140046660
   140017335:	test   rax,rax
   140017338:	je     0x14001734c
   14001733a:	mov    rax,QWORD PTR [rsp+0x40]
   14001733f:	cmp    DWORD PTR [rax+0x2ac],0x0
   140017346:	jne    0x1400173e0
   14001734c:	mov    rdx,r12
   14001734f:	lea    rcx,[rsp+0x7a0]
   140017357:	call   0x140046660
   14001735c:	test   rax,rax
   14001735f:	je     0x14001736f
   140017361:	mov    rax,QWORD PTR [rsp+0x40]
   140017366:	cmp    DWORD PTR [rax+0x2ac],0x0
   14001736d:	jne    0x1400173e0
   14001736f:	mov    rdx,rbp
   140017372:	lea    rcx,[rsp+0x7a0]
   14001737a:	call   0x140046660
   14001737f:	test   rax,rax
   140017382:	je     0x140017392
   140017384:	mov    rax,QWORD PTR [rsp+0x40]
   140017389:	cmp    DWORD PTR [rax+0x2ac],0x0
   140017390:	jne    0x1400173e0
   140017392:	mov    rdx,rdi
   140017395:	lea    rcx,[rsp+0x7a0]
   14001739d:	call   0x140046660
   1400173a2:	test   rax,rax
   1400173a5:	je     0x1400173b5
   1400173a7:	mov    rax,QWORD PTR [rsp+0x40]
   1400173ac:	cmp    DWORD PTR [rax+0x2ac],0x0
   1400173b3:	jne    0x1400173e0
   1400173b5:	mov    rdx,rbx
   1400173b8:	lea    rcx,[rsp+0x7a0]
   1400173c0:	call   0x140046660
   1400173c5:	test   rax,rax
   1400173c8:	je     0x1400177b7
   1400173ce:	mov    rax,QWORD PTR [rsp+0x40]
   1400173d3:	cmp    DWORD PTR [rax+0x2ac],0x0
   1400173da:	je     0x1400177b7
   1400173e0:	lea    rax,[rsp+0xc8]
   1400173e8:	mov    QWORD PTR [rsp+0x20],rax
   1400173ed:	lea    r9,[rsp+0xc0]
   1400173f5:	mov    r8d,0x4
   1400173fb:	lea    rdx,[rsp+0x108]
   140017403:	mov    rcx,QWORD PTR [rsp+0x50]
   140017408:	call   0x140001c30
   14001740d:	test   eax,eax
   14001740f:	je     0x1400177b7
   140017415:	lea    rdx,[rip+0x4de9c]        # 0x1400652b8
   14001741c:	mov    rcx,QWORD PTR [rsp+0xc0]
   140017424:	call   0x140046660
   140017429:	test   rax,rax
   14001742c:	jne    0x14001744b
   14001742e:	lea    rdx,[rip+0x4de5b]        # 0x140065290
   140017435:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001743d:	call   0x140046660
   140017442:	test   rax,rax
   140017445:	je     0x1400177b7
   14001744b:	mov    DWORD PTR [rsp+0x28],0x20019
   140017453:	mov    DWORD PTR [rsp+0x20],0x2
   14001745b:	xor    r9d,r9d
   14001745e:	lea    r8d,[r9+0x1]
   140017462:	lea    rdx,[rsp+0x108]
   14001746a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001746f:	call   QWORD PTR [rip+0x4d26b]        # 0x1400646e0
   140017475:	mov    QWORD PTR [rsp+0x58],rax
   14001747a:	cmp    rax,0xffffffffffffffff
   14001747e:	je     0x1400177b7
   140017484:	xor    ecx,ecx
   140017486:	mov    edx,DWORD PTR [rip+0x7136c]        # 0x1400887f8
   14001748c:	cmp    edx,0x5a
   14001748f:	mov    eax,0x1e
   140017494:	cmovl  ecx,eax
   140017497:	add    edx,ecx
   140017499:	mov    DWORD PTR [rip+0x71359],edx        # 0x1400887f8
   14001749f:	movsxd r8,edx
   1400174a2:	xor    r9d,r9d
   1400174a5:	mov    edx,0x402
   1400174aa:	mov    rax,QWORD PTR [rsp+0x40]
   1400174af:	mov    rcx,QWORD PTR [rax+0xeb180]
   1400174b6:	call   QWORD PTR [rip+0x4d6b4]        # 0x140064b70
   1400174bc:	xor    edx,edx
   1400174be:	mov    rcx,QWORD PTR [rsp+0x40]
   1400174c3:	call   0x1400018d0
   1400174c8:	mov    DWORD PTR [rsp+0xd0],0x1
   1400174d3:	mov    DWORD PTR [rsp+0xcc],0x208
   1400174de:	lea    rax,[rsp+0xcc]
   1400174e6:	mov    QWORD PTR [rsp+0x28],rax
   1400174eb:	lea    rax,[rsp+0xdd0]
   1400174f3:	mov    QWORD PTR [rsp+0x20],rax
   1400174f8:	lea    r9,[rsp+0xd0]
   140017500:	xor    r8d,r8d
   140017503:	lea    rdx,[rip+0x4e97e]        # 0x140065e88
   14001750a:	mov    rcx,QWORD PTR [rsp+0x58]
   14001750f:	call   QWORD PTR [rip+0x4cb3b]        # 0x140064050
   140017515:	test   eax,eax
   140017517:	jne    0x1400177ac
   14001751d:	mov    edx,0x104
   140017522:	lea    rcx,[rsp+0x380]
   14001752a:	call   QWORD PTR [rip+0x4d0a0]        # 0x1400645d0
   140017530:	lea    r8,[rip+0x4f6d9]        # 0x140066c10
   140017537:	mov    edx,0x104
   14001753c:	lea    rcx,[rsp+0x380]
   140017544:	call   0x140047130
   140017549:	lea    r8,[rsp+0xdd0]
   140017551:	mov    edx,0x104
   140017556:	lea    rcx,[rsp+0x380]
   14001755e:	call   0x140047130
   140017563:	mov    QWORD PTR [rsp+0x30],0x0
   14001756c:	mov    DWORD PTR [rsp+0x28],0x80
   140017574:	lea    rax,[rsp+0xbc0]
   14001757c:	mov    QWORD PTR [rsp+0x20],rax
   140017581:	xor    r9d,r9d
   140017584:	lea    r8d,[r9+0x9]
   140017588:	lea    rdx,[rsp+0x108]
   140017590:	mov    rcx,QWORD PTR [rsp+0x50]
   140017595:	call   QWORD PTR [rip+0x4d1ad]        # 0x140064748
   14001759b:	test   eax,eax
   14001759d:	je     0x1400176fb
   1400175a3:	lea    r8,[rsp+0x108]
   1400175ab:	mov    rdx,QWORD PTR [rsp+0x50]
   1400175b0:	mov    ecx,0x5
   1400175b5:	call   QWORD PTR [rip+0x4d14d]        # 0x140064708
   1400175bb:	mov    DWORD PTR [rsp+0x98],eax
   1400175c2:	lea    rdx,[rsp+0x380]
   1400175ca:	lea    rcx,[rsp+0x100]
   1400175d2:	call   0x14000c360
   1400175d7:	mov    rdx,rax
   1400175da:	mov    rcx,QWORD PTR [rsp+0x40]
   1400175df:	call   0x14000c440
   1400175e4:	test   eax,eax
   1400175e6:	je     0x140017609
   1400175e8:	mov    rax,QWORD PTR [rsp+0x40]
   1400175ed:	movsxd rcx,DWORD PTR [rax+0xeb100]
   1400175f4:	imul   rcx,rcx,0x12c8
   1400175fb:	mov    edx,DWORD PTR [rsp+0x98]
   140017602:	mov    DWORD PTR [rcx+rax*1+0x4bc],edx
   140017609:	xor    eax,eax
   14001760b:	mov    ecx,DWORD PTR [rip+0x711e7]        # 0x1400887f8
   140017611:	cmp    ecx,0x5a
   140017614:	mov    edx,0xa
   140017619:	cmovl  eax,edx
   14001761c:	add    ecx,eax
   14001761e:	mov    DWORD PTR [rip+0x711d4],ecx        # 0x1400887f8
   140017624:	movsxd r8,ecx
   140017627:	xor    r9d,r9d
   14001762a:	mov    edx,0x402
   14001762f:	mov    rax,QWORD PTR [rsp+0x40]
   140017634:	mov    rcx,QWORD PTR [rax+0xeb180]
   14001763b:	call   QWORD PTR [rip+0x4d52f]        # 0x140064b70
   140017641:	xor    edx,edx
   140017643:	mov    rcx,QWORD PTR [rsp+0x40]
   140017648:	call   0x1400018d0
   14001764d:	cmp    DWORD PTR [rip+0x711c4],0x0        # 0x140088818
   140017654:	jne    0x14001772c
   14001765a:	cmp    DWORD PTR [rip+0x711bb],0x0        # 0x14008881c
   140017661:	jne    0x14001772c
   140017667:	cmp    DWORD PTR [rip+0x711b2],0x0        # 0x140088820
   14001766e:	jne    0x14001772c
   140017674:	cmp    DWORD PTR [rip+0x711a9],0x0        # 0x140088824
   14001767b:	jne    0x14001772c
   140017681:	cmp    DWORD PTR [rip+0x711a0],0x0        # 0x140088828
   140017688:	jne    0x14001772c
   14001768e:	mov    edx,0x80
   140017693:	lea    rcx,[rsp+0x380]
   14001769b:	call   QWORD PTR [rip+0x4ce7f]        # 0x140064520
   1400176a1:	lea    rcx,[rsp+0x380]
   1400176a9:	call   QWORD PTR [rip+0x4ce91]        # 0x140064540
   1400176af:	lea    rdx,[rip+0x4dd42]        # 0x1400653f8
   1400176b6:	lea    rcx,[rsp+0x380]
   1400176be:	call   0x140046660
   1400176c3:	mov    WORD PTR [rax],0x2e
   1400176c8:	mov    WORD PTR [rax+0x2],0x50
   1400176ce:	mov    WORD PTR [rax+0x4],0x4e
   1400176d4:	mov    WORD PTR [rax+0x6],0x46
   1400176da:	mov    edx,0x80
   1400176df:	lea    rcx,[rsp+0x380]
   1400176e7:	call   QWORD PTR [rip+0x4ce33]        # 0x140064520
   1400176ed:	lea    rcx,[rsp+0x380]
   1400176f5:	call   QWORD PTR [rip+0x4ce45]        # 0x140064540
   1400176fb:	cmp    DWORD PTR [rip+0x71116],0x0        # 0x140088818
   140017702:	jne    0x14001772c
   140017704:	cmp    DWORD PTR [rip+0x71111],0x0        # 0x14008881c
   14001770b:	jne    0x14001772c
   14001770d:	cmp    DWORD PTR [rip+0x7110c],0x0        # 0x140088820
   140017714:	jne    0x14001772c
   140017716:	cmp    DWORD PTR [rip+0x71107],0x0        # 0x140088824
   14001771d:	jne    0x14001772c
   14001771f:	cmp    DWORD PTR [rip+0x71102],0x0        # 0x140088828
   140017726:	je     0x1400177ac
   14001772c:	lea    r9,[rsp+0xb0]
   140017734:	xor    r8d,r8d
   140017737:	lea    edx,[r8+0x24]
   14001773b:	lea    rcx,[rsp+0x380]
   140017743:	call   0x140001d10
   140017748:	test   eax,eax
   14001774a:	je     0x140017760
   14001774c:	mov    r8d,eax
   14001774f:	mov    edx,0x3
   140017754:	mov    rcx,QWORD PTR [rsp+0x40]
   140017759:	call   0x140008190
   14001775e:	jmp    0x1400177ac
   140017760:	lea    rdx,[rip+0x4dc91]        # 0x1400653f8
   140017767:	lea    rcx,[rsp+0x380]
   14001776f:	call   0x140046660
   140017774:	mov    WORD PTR [rax],0x2e
   140017779:	mov    WORD PTR [rax+0x2],0x50
   14001777f:	mov    WORD PTR [rax+0x4],0x4e
   140017785:	mov    WORD PTR [rax+0x6],0x46
   14001778b:	mov    edx,0x80
   140017790:	lea    rcx,[rsp+0x380]
   140017798:	call   QWORD PTR [rip+0x4cd82]        # 0x140064520
   14001779e:	lea    rcx,[rsp+0x380]
   1400177a6:	call   QWORD PTR [rip+0x4cd94]        # 0x140064540
   1400177ac:	mov    rcx,QWORD PTR [rsp+0x58]
   1400177b1:	call   QWORD PTR [rip+0x4c8b1]        # 0x140064068
   1400177b7:	mov    eax,DWORD PTR [rsp+0x60]
   1400177bb:	add    eax,0x1
   1400177be:	mov    DWORD PTR [rsp+0x60],eax
   1400177c2:	lea    r8,[rsp+0x108]
   1400177ca:	mov    edx,eax
   1400177cc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400177d1:	call   QWORD PTR [rip+0x4cf51]        # 0x140064728
   1400177d7:	test   eax,eax
   1400177d9:	jne    0x140017250
   1400177df:	mov    rsi,QWORD PTR [rsp+0x48]
   1400177e4:	mov    rcx,QWORD PTR [rsp+0x50]
   1400177e9:	call   QWORD PTR [rip+0x4cf49]        # 0x140064738
   1400177ef:	or     rbp,0xffffffffffffffff
   1400177f3:	cmp    DWORD PTR [rip+0x7101e],0x0        # 0x140088818
   1400177fa:	jne    0x14001786e
   1400177fc:	cmp    DWORD PTR [rip+0x71019],0x0        # 0x14008881c
   140017803:	jne    0x14001786e
   140017805:	cmp    DWORD PTR [rip+0x71014],0x0        # 0x140088820
   14001780c:	jne    0x14001786e
   14001780e:	cmp    DWORD PTR [rip+0x7100f],0x0        # 0x140088824
   140017815:	jne    0x14001786e
   140017817:	cmp    DWORD PTR [rip+0x7100a],0x0        # 0x140088828
   14001781e:	jne    0x14001786e
   140017820:	mov    edx,0x208
   140017825:	lea    rcx,[rsp+0x9b0]
   14001782d:	call   QWORD PTR [rip+0x4cd9d]        # 0x1400645d0
   140017833:	lea    r8,[rip+0x4f9a6]        # 0x1400671e0
   14001783a:	mov    edx,0x104
   14001783f:	lea    rcx,[rsp+0x9b0]
   140017847:	call   0x140047130
   14001784c:	mov    r12,QWORD PTR [rsp+0x40]
   140017851:	lea    r8,[r12+0xeb140]
   140017859:	lea    rdx,[rsp+0x9b0]
   140017861:	mov    rcx,r12
   140017864:	call   0x140010670
   140017869:	jmp    0x1400180c9
   14001786e:	xor    r13d,r13d
   140017871:	mov    eax,r13d
   140017874:	mov    ecx,DWORD PTR [rip+0x70f7e]        # 0x1400887f8
   14001787a:	cmp    ecx,0x5a
   14001787d:	mov    edx,0x1e
   140017882:	cmovl  eax,edx
   140017885:	add    ecx,eax
   140017887:	mov    DWORD PTR [rip+0x70f6b],ecx        # 0x1400887f8
   14001788d:	movsxd r8,ecx
   140017890:	xor    r9d,r9d
   140017893:	mov    edx,0x402
   140017898:	mov    r12,QWORD PTR [rsp+0x40]
   14001789d:	mov    rcx,QWORD PTR [r12+0xeb180]
   1400178a5:	call   QWORD PTR [rip+0x4d2c5]        # 0x140064b70
   1400178ab:	xor    edx,edx
   1400178ad:	mov    rcx,r12
   1400178b0:	call   0x1400018d0
   1400178b5:	xor    edx,edx
   1400178b7:	mov    r8d,0x250
   1400178bd:	lea    rcx,[rsp+0x130]
   1400178c5:	call   0x140047720
   1400178ca:	mov    edx,0x104
   1400178cf:	lea    rcx,[rsp+0x380]
   1400178d7:	call   QWORD PTR [rip+0x4ccf3]        # 0x1400645d0
   1400178dd:	lea    r8,[rip+0x4f30c]        # 0x140066bf0
   1400178e4:	mov    edx,0x104
   1400178e9:	lea    rcx,[rsp+0x380]
   1400178f1:	call   0x140047130
   1400178f6:	lea    rdx,[rsp+0x130]
   1400178fe:	lea    rcx,[rsp+0x380]
   140017906:	call   QWORD PTR [rip+0x4cc1c]        # 0x140064528
   14001790c:	mov    QWORD PTR [rsp+0x58],rax
   140017911:	cmp    rax,0xffffffffffffffff
   140017915:	je     0x1400180c0
   14001791b:	xchg   ax,ax
   14001791d:	data16 xchg ax,ax
   140017920:	call   0x14002b874
   140017925:	mov    ecx,r13d
   140017928:	test   rax,rax
   14001792b:	setne  cl
   14001792e:	test   ecx,ecx
   140017930:	je     0x1400180b5
   140017936:	mov    rdx,QWORD PTR [rax]
   140017939:	mov    rcx,rax
   14001793c:	call   QWORD PTR [rdx+0x18]
   14001793f:	lea    rbx,[rax+0x18]
   140017943:	mov    QWORD PTR [rsp+0x50],rbx
   140017948:	lea    rcx,[rsp+0x15c]
   140017950:	lea    rax,[rsp+0x15c]
   140017958:	test   rax,0xffffffffffff0000
   14001795e:	jne    0x14001798d
   140017960:	movzx  edi,cx
   140017963:	mov    ecx,edi
   140017965:	call   0x14002b860
   14001796a:	test   rax,rax
   14001796d:	je     0x140017a98
   140017973:	mov    r8d,edi
   140017976:	mov    rdx,rax
   140017979:	lea    rcx,[rsp+0x50]
   14001797e:	call   0x140003650
   140017983:	mov    rbx,QWORD PTR [rsp+0x50]
   140017988:	jmp    0x140017a98
   14001798d:	xor    eax,eax
   14001798f:	mov    rcx,rbp
   140017992:	lea    rdi,[rsp+0x15c]
   14001799a:	repnz scas ax,WORD PTR es:[rdi]
   14001799d:	not    rcx
   1400179a0:	sub    rcx,0x1
   1400179a4:	mov    rdi,rcx
   1400179a7:	test   ecx,ecx
   1400179a9:	jne    0x140017a08
   1400179ab:	lea    rdx,[rbx-0x18]
   1400179af:	mov    rdi,QWORD PTR [rdx]
   1400179b2:	cmp    DWORD PTR [rdx+0x8],eax
   1400179b5:	je     0x140017a98
   1400179bb:	cmp    DWORD PTR [rdx+0x10],eax
   1400179be:	jge    0x1400179d5
   1400179c0:	cmp    DWORD PTR [rbx-0xc],eax
   1400179c3:	jl     0x14001807a
   1400179c9:	mov    DWORD PTR [rbx-0x10],r13d
   1400179cd:	mov    WORD PTR [rbx],ax
   1400179d0:	jmp    0x140017a98
   1400179d5:	mov    eax,ebp
   1400179d7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400179dc:	add    eax,0xffffffff
   1400179df:	test   eax,eax
   1400179e1:	jg     0x1400179ec
   1400179e3:	mov    rcx,QWORD PTR [rdx]
   1400179e6:	mov    rax,QWORD PTR [rcx]
   1400179e9:	call   QWORD PTR [rax+0x8]
   1400179ec:	mov    rax,QWORD PTR [rdi]
   1400179ef:	mov    rcx,rdi
   1400179f2:	call   QWORD PTR [rax+0x18]
   1400179f5:	lea    rbx,[rax+0x18]
   1400179f9:	mov    QWORD PTR [rsp+0x50],rbx
   1400179fe:	mov    rsi,QWORD PTR [rsp+0x48]
   140017a03:	jmp    0x140017a98
   140017a08:	mov    r13d,DWORD PTR [rbx-0x10]
   140017a0c:	lea    r14,[rsp+0x15c]
   140017a14:	sub    r14,rbx
   140017a17:	sar    r14,1
   140017a1a:	mov    ecx,0x1
   140017a1f:	sub    ecx,DWORD PTR [rbx-0x8]
   140017a22:	mov    eax,DWORD PTR [rbx-0xc]
   140017a25:	sub    eax,edi
   140017a27:	or     eax,ecx
   140017a29:	jge    0x140017a3c
   140017a2b:	mov    edx,edi
   140017a2d:	lea    rcx,[rsp+0x50]
   140017a32:	call   0x140002d40
   140017a37:	mov    rbx,QWORD PTR [rsp+0x50]
   140017a3c:	cmp    r14,r13
   140017a3f:	ja     0x140017a5c
   140017a41:	movsxd rax,edi
   140017a44:	lea    r13,[rax+rax*1]
   140017a48:	lea    r8,[rbx+r14*2]
   140017a4c:	mov    r9,r13
   140017a4f:	mov    rdx,r13
   140017a52:	mov    rcx,rbx
   140017a55:	call   0x1400467a0
   140017a5a:	jmp    0x140017a79
   140017a5c:	movsxd rax,edi
   140017a5f:	lea    r13,[rax+rax*1]
   140017a63:	mov    r9,r13
   140017a66:	lea    r8,[rsp+0x15c]
   140017a6e:	mov    rdx,r13
   140017a71:	mov    rcx,rbx
   140017a74:	call   0x1400466d0
   140017a79:	test   edi,edi
   140017a7b:	js     0x1400180aa
   140017a81:	cmp    edi,DWORD PTR [rbx-0xc]
   140017a84:	jg     0x1400180aa
   140017a8a:	mov    DWORD PTR [rbx-0x10],edi
   140017a8d:	mov    WORD PTR [r13+rbx*1+0x0],0x0
   140017a95:	xor    r13d,r13d
   140017a98:	xor    r9d,r9d
   140017a9b:	xor    edx,edx
   140017a9d:	lea    r8d,[r9+0x2]
   140017aa1:	mov    rcx,rbx
   140017aa4:	call   QWORD PTR [rip+0x4cc16]        # 0x1400646c0
   140017aaa:	mov    r15,rax
   140017aad:	cmp    rax,0xffffffffffffffff
   140017ab1:	je     0x14001803e
   140017ab7:	mov    ecx,r13d
   140017aba:	mov    edx,DWORD PTR [rip+0x70d38]        # 0x1400887f8
   140017ac0:	cmp    edx,0x5a
   140017ac3:	mov    eax,0x5
   140017ac8:	cmovl  ecx,eax
   140017acb:	add    edx,ecx
   140017acd:	mov    DWORD PTR [rip+0x70d25],edx        # 0x1400887f8
   140017ad3:	movsxd r8,edx
   140017ad6:	xor    r9d,r9d
   140017ad9:	mov    edx,0x402
   140017ade:	mov    rcx,QWORD PTR [r12+0xeb180]
   140017ae6:	call   QWORD PTR [rip+0x4d084]        # 0x140064b70
   140017aec:	xor    edx,edx
   140017aee:	mov    rcx,r12
   140017af1:	call   0x1400018d0
   140017af6:	lea    r9,[rsp+0xd8]
   140017afe:	xor    r8d,r8d
   140017b01:	lea    rdx,[rip+0x4ecb0]        # 0x1400667b8
   140017b08:	mov    rcx,r15
   140017b0b:	call   QWORD PTR [rip+0x4cbe7]        # 0x1400646f8
   140017b11:	test   eax,eax
   140017b13:	je     0x140018034
   140017b19:	mov    QWORD PTR [rsp+0x20],r13
   140017b1e:	mov    r9d,0x100
   140017b24:	lea    r8,[rsp+0x590]
   140017b2c:	mov    edx,0x1
   140017b31:	lea    rcx,[rsp+0xd8]
   140017b39:	call   QWORD PTR [rip+0x4cbb1]        # 0x1400646f0
   140017b3f:	test   eax,eax
   140017b41:	je     0x140018034
   140017b47:	lea    rax,[rsp+0xd8]
   140017b4f:	mov    QWORD PTR [rsp+0x20],rax
   140017b54:	xor    r9d,r9d
   140017b57:	lea    r8,[rsp+0x590]
   140017b5f:	mov    rdx,r15
   140017b62:	mov    rcx,r12
   140017b65:	call   0x140002340
   140017b6a:	test   eax,eax
   140017b6c:	jne    0x140017b9c
   140017b6e:	mov    rcx,r15
   140017b71:	call   QWORD PTR [rip+0x4cb51]        # 0x1400646c8
   140017b77:	nop
   140017b78:	lea    rdx,[rbx-0x18]
   140017b7c:	mov    eax,ebp
   140017b7e:	lock xadd DWORD PTR [rdx+0x10],eax
   140017b83:	add    eax,0xffffffff
   140017b86:	test   eax,eax
   140017b88:	jg     0x140018059
   140017b8e:	mov    rcx,QWORD PTR [rdx]
   140017b91:	mov    rax,QWORD PTR [rcx]
   140017b94:	call   QWORD PTR [rax+0x8]
   140017b97:	jmp    0x140018059
   140017b9c:	lea    r9,[rsp+0xd8]
   140017ba4:	xor    r8d,r8d
   140017ba7:	lea    rdx,[rsp+0x590]
   140017baf:	mov    rcx,r15
   140017bb2:	call   QWORD PTR [rip+0x4cb40]        # 0x1400646f8
   140017bb8:	test   eax,eax
   140017bba:	je     0x140018034
   140017bc0:	mov    QWORD PTR [rsp+0x20],r13
   140017bc5:	mov    r9d,0x100
   140017bcb:	lea    r8,[rsp+0x590]
   140017bd3:	mov    edx,0x2
   140017bd8:	lea    rcx,[rsp+0xd8]
   140017be0:	call   QWORD PTR [rip+0x4cb0a]        # 0x1400646f0
   140017be6:	test   eax,eax
   140017be8:	je     0x140018034
   140017bee:	lea    rdx,[rip+0x4f5c3]        # 0x1400671b8
   140017bf5:	lea    rcx,[rsp+0x590]
   140017bfd:	call   0x140046660
   140017c02:	test   rax,rax
   140017c05:	je     0x140017c16
   140017c07:	cmp    DWORD PTR [r12+0x2a8],0x0
   140017c10:	jne    0x140017d26
   140017c16:	lea    rdx,[rip+0x4f573]        # 0x140067190
   140017c1d:	lea    rcx,[rsp+0x590]
   140017c25:	call   0x140046660
   140017c2a:	test   rax,rax
   140017c2d:	je     0x140017c3e
   140017c2f:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017c38:	jne    0x140017d26
   140017c3e:	lea    rdx,[rip+0x4f523]        # 0x140067168
   140017c45:	lea    rcx,[rsp+0x590]
   140017c4d:	call   0x140046660
   140017c52:	test   rax,rax
   140017c55:	je     0x140017c66
   140017c57:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017c60:	jne    0x140017d26
   140017c66:	lea    rdx,[rip+0x4f4d3]        # 0x140067140
   140017c6d:	lea    rcx,[rsp+0x590]
   140017c75:	call   0x140046660
   140017c7a:	test   rax,rax
   140017c7d:	je     0x140017c8e
   140017c7f:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017c88:	jne    0x140017d26
   140017c8e:	lea    rdx,[rip+0x4f483]        # 0x140067118
   140017c95:	lea    rcx,[rsp+0x590]
   140017c9d:	call   0x140046660
   140017ca2:	test   rax,rax
   140017ca5:	je     0x140017cb2
   140017ca7:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017cb0:	jne    0x140017d26
   140017cb2:	lea    rdx,[rip+0x4f437]        # 0x1400670f0
   140017cb9:	lea    rcx,[rsp+0x590]
   140017cc1:	call   0x140046660
   140017cc6:	test   rax,rax
   140017cc9:	je     0x140017cd6
   140017ccb:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017cd4:	jne    0x140017d26
   140017cd6:	lea    rdx,[rip+0x4f3eb]        # 0x1400670c8
   140017cdd:	lea    rcx,[rsp+0x590]
   140017ce5:	call   0x140046660
   140017cea:	test   rax,rax
   140017ced:	je     0x140017cfa
   140017cef:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017cf8:	jne    0x140017d26
   140017cfa:	lea    rdx,[rip+0x4f39f]        # 0x1400670a0
   140017d01:	lea    rcx,[rsp+0x590]
   140017d09:	call   0x140046660
   140017d0e:	test   rax,rax
   140017d11:	je     0x140018034
   140017d17:	cmp    DWORD PTR [r12+0x2ac],0x0
   140017d20:	je     0x140018034
   140017d26:	lea    r9,[rsp+0xd8]
   140017d2e:	lea    r8,[rip+0x4ef63]        # 0x140066c98
   140017d35:	lea    rdx,[rip+0x4ef4c]        # 0x140066c88
   140017d3c:	mov    rcx,r15
   140017d3f:	call   QWORD PTR [rip+0x4c9b3]        # 0x1400646f8
   140017d45:	test   eax,eax
   140017d47:	je     0x14001800d
   140017d4d:	mov    QWORD PTR [rsp+0x20],r13
   140017d52:	mov    r9d,0x100
   140017d58:	lea    r8,[rsp+0x590]
   140017d60:	mov    edx,0x1
   140017d65:	lea    rcx,[rsp+0xd8]
   140017d6d:	call   QWORD PTR [rip+0x4c97d]        # 0x1400646f0
   140017d73:	test   eax,eax
   140017d75:	je     0x140017fe6
   140017d7b:	xor    eax,eax
   140017d7d:	mov    rcx,rbp
   140017d80:	lea    rdi,[rsp+0x590]
   140017d88:	repnz scas ax,WORD PTR es:[rdi]
   140017d8b:	not    rcx
   140017d8e:	sub    rcx,0x1
   140017d92:	mov    rdi,rcx
   140017d95:	test   ecx,ecx
   140017d97:	jne    0x140017df6
   140017d99:	lea    rdx,[rsi-0x18]
   140017d9d:	mov    rdi,QWORD PTR [rdx]
   140017da0:	cmp    DWORD PTR [rdx+0x8],eax
   140017da3:	je     0x140017e86
   140017da9:	cmp    DWORD PTR [rdx+0x10],eax
   140017dac:	jge    0x140017dc3
   140017dae:	cmp    DWORD PTR [rsi-0xc],eax
   140017db1:	jl     0x140018085
   140017db7:	mov    DWORD PTR [rsi-0x10],r13d
   140017dbb:	mov    WORD PTR [rsi],ax
   140017dbe:	jmp    0x140017e86
   140017dc3:	mov    eax,ebp
   140017dc5:	lock xadd DWORD PTR [rdx+0x10],eax
   140017dca:	add    eax,0xffffffff
   140017dcd:	test   eax,eax
   140017dcf:	jg     0x140017dda
   140017dd1:	mov    rcx,QWORD PTR [rdx]
   140017dd4:	mov    rax,QWORD PTR [rcx]
   140017dd7:	call   QWORD PTR [rax+0x8]
   140017dda:	mov    rax,QWORD PTR [rdi]
   140017ddd:	mov    rcx,rdi
   140017de0:	call   QWORD PTR [rax+0x18]
   140017de3:	add    rax,0x18
   140017de7:	mov    QWORD PTR [rsp+0x48],rax
   140017dec:	mov    rbx,QWORD PTR [rsp+0x50]
   140017df1:	jmp    0x140017e86
   140017df6:	mov    r13d,DWORD PTR [rsi-0x10]
   140017dfa:	lea    r14,[rsp+0x590]
   140017e02:	sub    r14,rsi
   140017e05:	sar    r14,1
   140017e08:	mov    ecx,0x1
   140017e0d:	sub    ecx,DWORD PTR [rsi-0x8]
   140017e10:	mov    eax,DWORD PTR [rsi-0xc]
   140017e13:	sub    eax,edi
   140017e15:	or     eax,ecx
   140017e17:	jge    0x140017e2a
   140017e19:	mov    edx,edi
   140017e1b:	lea    rcx,[rsp+0x48]
   140017e20:	call   0x140002d40
   140017e25:	mov    rsi,QWORD PTR [rsp+0x48]
   140017e2a:	cmp    r14,r13
   140017e2d:	ja     0x140017e4a
   140017e2f:	movsxd rax,edi
   140017e32:	lea    r13,[rax+rax*1]
   140017e36:	lea    r8,[rsi+r14*2]
   140017e3a:	mov    r9,r13
   140017e3d:	mov    rdx,r13
   140017e40:	mov    rcx,rsi
   140017e43:	call   0x1400467a0
   140017e48:	jmp    0x140017e67
   140017e4a:	movsxd rax,edi
   140017e4d:	lea    r13,[rax+rax*1]
   140017e51:	mov    r9,r13
   140017e54:	lea    r8,[rsp+0x590]
   140017e5c:	mov    rdx,r13
   140017e5f:	mov    rcx,rsi
   140017e62:	call   0x1400466d0
   140017e67:	test   edi,edi
   140017e69:	js     0x140018090
   140017e6f:	cmp    edi,DWORD PTR [rsi-0xc]
   140017e72:	jg     0x140018090
   140017e78:	mov    DWORD PTR [rsi-0x10],edi
   140017e7b:	mov    WORD PTR [r13+rsi*1+0x0],0x0
   140017e83:	xor    r13d,r13d
   140017e86:	lea    rcx,[rsp+0x48]
   140017e8b:	call   0x140003db0
   140017e90:	lea    rdx,[rip+0x4f201]        # 0x140067098
   140017e97:	lea    rcx,[rsp+0x48]
   140017e9c:	call   0x140009f80
   140017ea1:	test   al,al
   140017ea3:	je     0x140017ed3
   140017ea5:	mov    rcx,r15
   140017ea8:	call   QWORD PTR [rip+0x4c81a]        # 0x1400646c8
   140017eae:	nop
   140017eaf:	lea    rdx,[rbx-0x18]
   140017eb3:	mov    eax,ebp
   140017eb5:	lock xadd DWORD PTR [rdx+0x10],eax
   140017eba:	add    eax,0xffffffff
   140017ebd:	test   eax,eax
   140017ebf:	jg     0x140018059
   140017ec5:	mov    rcx,QWORD PTR [rdx]
   140017ec8:	mov    rax,QWORD PTR [rcx]
   140017ecb:	call   QWORD PTR [rax+0x8]
   140017ece:	jmp    0x140018059
   140017ed3:	mov    edx,0x104
   140017ed8:	lea    rcx,[rsp+0x380]
   140017ee0:	call   QWORD PTR [rip+0x4c6ea]        # 0x1400645d0
   140017ee6:	lea    r8,[rip+0x4ed23]        # 0x140066c10
   140017eed:	mov    edx,0x104
   140017ef2:	lea    rcx,[rsp+0x380]
   140017efa:	call   0x140047130
   140017eff:	lea    r8,[rsp+0x15c]
   140017f07:	mov    edx,0x104
   140017f0c:	lea    rcx,[rsp+0x380]
   140017f14:	call   0x140047130
   140017f19:	lea    rdx,[rsp+0x380]
   140017f21:	lea    rcx,[rsp+0xf0]
   140017f29:	call   0x14000c360
   140017f2e:	mov    rdx,rax
   140017f31:	mov    rcx,r12
   140017f34:	call   0x14000c440
   140017f39:	mov    edi,eax
   140017f3b:	lea    r9,[rsp+0xb0]
   140017f43:	xor    r8d,r8d
   140017f46:	lea    edx,[r8+0x24]
   140017f4a:	lea    rcx,[rsp+0x380]
   140017f52:	call   0x140001d10
   140017f57:	test   eax,eax
   140017f59:	je     0x140017f70
   140017f5b:	mov    r8d,eax
   140017f5e:	mov    edx,0x3
   140017f63:	mov    rcx,r12
   140017f66:	call   0x140008190
   140017f6b:	jmp    0x140018034
   140017f70:	test   edi,edi
   140017f72:	je     0x140017f8f
   140017f74:	movsxd rax,DWORD PTR [r12+0xeb100]
   140017f7c:	imul   rax,rax,0x12c8
   140017f83:	mov    DWORD PTR [rax+r12*1+0x4bc],0x1
   140017f8f:	lea    rdx,[rip+0x4d462]        # 0x1400653f8
   140017f96:	lea    rcx,[rsp+0x380]
   140017f9e:	call   0x140046660
   140017fa3:	mov    WORD PTR [rax],0x2e
   140017fa8:	mov    WORD PTR [rax+0x2],0x50
   140017fae:	mov    WORD PTR [rax+0x4],0x4e
   140017fb4:	mov    WORD PTR [rax+0x6],0x46
   140017fba:	mov    rcx,r15
   140017fbd:	call   QWORD PTR [rip+0x4c705]        # 0x1400646c8
   140017fc3:	mov    edx,0x80
   140017fc8:	lea    rcx,[rsp+0x380]
   140017fd0:	call   QWORD PTR [rip+0x4c54a]        # 0x140064520
   140017fd6:	lea    rcx,[rsp+0x380]
   140017fde:	call   QWORD PTR [rip+0x4c55c]        # 0x140064540
   140017fe4:	jmp    0x140018034
   140017fe6:	mov    rcx,r15
   140017fe9:	call   QWORD PTR [rip+0x4c6d9]        # 0x1400646c8
   140017fef:	nop
   140017ff0:	lea    rdx,[rbx-0x18]
   140017ff4:	mov    eax,ebp
   140017ff6:	lock xadd DWORD PTR [rdx+0x10],eax
   140017ffb:	add    eax,0xffffffff
   140017ffe:	test   eax,eax
   140018000:	jg     0x140018059
   140018002:	mov    rcx,QWORD PTR [rdx]
   140018005:	mov    rax,QWORD PTR [rcx]
   140018008:	call   QWORD PTR [rax+0x8]
   14001800b:	jmp    0x140018059
   14001800d:	mov    rcx,r15
   140018010:	call   QWORD PTR [rip+0x4c6b2]        # 0x1400646c8
   140018016:	nop
   140018017:	lea    rdx,[rbx-0x18]
   14001801b:	mov    eax,ebp
   14001801d:	lock xadd DWORD PTR [rdx+0x10],eax
   140018022:	add    eax,0xffffffff
   140018025:	test   eax,eax
   140018027:	jg     0x140018059
   140018029:	mov    rcx,QWORD PTR [rdx]
   14001802c:	mov    rax,QWORD PTR [rcx]
   14001802f:	call   QWORD PTR [rax+0x8]
   140018032:	jmp    0x140018059
   140018034:	mov    rcx,r15
   140018037:	call   QWORD PTR [rip+0x4c68b]        # 0x1400646c8
   14001803d:	nop
   14001803e:	lea    rdx,[rbx-0x18]
   140018042:	mov    eax,ebp
   140018044:	lock xadd DWORD PTR [rdx+0x10],eax
   140018049:	add    eax,0xffffffff
   14001804c:	test   eax,eax
   14001804e:	jg     0x140018059
   140018050:	mov    rcx,QWORD PTR [rdx]
   140018053:	mov    rax,QWORD PTR [rcx]
   140018056:	call   QWORD PTR [rax+0x8]
   140018059:	lea    rdx,[rsp+0x130]
   140018061:	mov    rcx,QWORD PTR [rsp+0x58]
   140018066:	call   QWORD PTR [rip+0x4c4c4]        # 0x140064530
   14001806c:	test   eax,eax
   14001806e:	je     0x14001809b
   140018070:	mov    rsi,QWORD PTR [rsp+0x48]
   140018075:	jmp    0x140017920
   14001807a:	mov    ecx,0x80070057
   14001807f:	call   0x140001430
   140018084:	nop
   140018085:	mov    ecx,0x80070057
   14001808a:	call   0x140001430
   14001808f:	int3   
   140018090:	mov    ecx,0x80070057
   140018095:	call   0x140001430
   14001809a:	nop
   14001809b:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400180a3:	mov    rax,QWORD PTR [rsp+0x58]
   1400180a8:	jmp    0x1400180c0
   1400180aa:	mov    ecx,0x80070057
   1400180af:	call   0x140001430
   1400180b4:	nop
   1400180b5:	mov    ecx,0x80004005
   1400180ba:	call   0x140001430
   1400180bf:	int3   
   1400180c0:	mov    rcx,rax
   1400180c3:	call   QWORD PTR [rip+0x4c46f]        # 0x140064538
   1400180c9:	cmp    DWORD PTR [r12+0xeb11c],0x0
   1400180d2:	je     0x1400180dc
   1400180d4:	mov    rcx,r12
   1400180d7:	call   0x14000fa10
   1400180dc:	cmp    DWORD PTR [r12+0xeb138],0x0
   1400180e5:	je     0x1400182be
   1400180eb:	lea    rax,[rsp+0x40]
   1400180f0:	mov    QWORD PTR [rsp+0x58],rax
   1400180f5:	call   0x14002b874
   1400180fa:	mov    rdx,rax
   1400180fd:	xor    esi,esi
   1400180ff:	mov    ecx,esi
   140018101:	test   rax,rax
   140018104:	setne  cl
   140018107:	test   ecx,ecx
   140018109:	jne    0x140018116
   14001810b:	mov    ecx,0x80004005
   140018110:	call   0x140001430
   140018115:	int3   
   140018116:	mov    rax,QWORD PTR [rax]
   140018119:	mov    rcx,rdx
   14001811c:	call   QWORD PTR [rax+0x18]
   14001811f:	add    rax,0x18
   140018123:	mov    QWORD PTR [rsp+0x40],rax
   140018128:	lea    rdx,[rip+0x4eca9]        # 0x140066dd8
   14001812f:	test   rdx,0xffffffffffff0000
   140018136:	jne    0x140018159
   140018138:	movzx  edi,dx
   14001813b:	mov    ecx,edi
   14001813d:	call   0x14002b860
   140018142:	test   rax,rax
   140018145:	je     0x140018176
   140018147:	mov    r8d,edi
   14001814a:	mov    rdx,rax
   14001814d:	lea    rcx,[rsp+0x40]
   140018152:	call   0x140003650
   140018157:	jmp    0x140018176
   140018159:	xor    eax,eax
   14001815b:	mov    rcx,rbp
   14001815e:	mov    rdi,rdx
   140018161:	repnz scas ax,WORD PTR es:[rdi]
   140018164:	not    rcx
   140018167:	lea    r8d,[rcx-0x1]
   14001816b:	lea    rcx,[rsp+0x40]
   140018170:	call   0x1400037d0
   140018175:	nop
   140018176:	lea    rdx,[rsp+0x40]
   14001817b:	mov    rcx,r12
   14001817e:	call   0x14000ed30
   140018183:	lea    rdx,[rsp+0x98]
   14001818b:	mov    QWORD PTR [rsp+0x58],rdx
   140018190:	call   0x14002b874
   140018195:	mov    rdx,rax
   140018198:	mov    ecx,esi
   14001819a:	test   rax,rax
   14001819d:	setne  cl
   1400181a0:	test   ecx,ecx
   1400181a2:	jne    0x1400181af
   1400181a4:	mov    ecx,0x80004005
   1400181a9:	call   0x140001430
   1400181ae:	int3   
   1400181af:	mov    rax,QWORD PTR [rax]
   1400181b2:	mov    rcx,rdx
   1400181b5:	call   QWORD PTR [rax+0x18]
   1400181b8:	add    rax,0x18
   1400181bc:	mov    QWORD PTR [rsp+0x98],rax
   1400181c4:	lea    rdx,[rip+0x4ec25]        # 0x140066df0
   1400181cb:	test   rdx,0xffffffffffff0000
   1400181d2:	jne    0x1400181f8
   1400181d4:	movzx  edi,dx
   1400181d7:	mov    ecx,edi
   1400181d9:	call   0x14002b860
   1400181de:	test   rax,rax
   1400181e1:	je     0x140018218
   1400181e3:	mov    r8d,edi
   1400181e6:	mov    rdx,rax
   1400181e9:	lea    rcx,[rsp+0x98]
   1400181f1:	call   0x140003650
   1400181f6:	jmp    0x140018218
   1400181f8:	xor    eax,eax
   1400181fa:	mov    rcx,rbp
   1400181fd:	mov    rdi,rdx
   140018200:	repnz scas ax,WORD PTR es:[rdi]
   140018203:	not    rcx
   140018206:	lea    r8d,[rcx-0x1]
   14001820a:	lea    rcx,[rsp+0x98]
   140018212:	call   0x1400037d0
   140018217:	nop
   140018218:	lea    rdx,[rsp+0x98]
   140018220:	mov    rcx,r12
   140018223:	call   0x14000ed30
   140018228:	lea    rdx,[rsp+0x60]
   14001822d:	mov    QWORD PTR [rsp+0x58],rdx
   140018232:	call   0x14002b874
   140018237:	mov    rcx,rax
   14001823a:	test   rax,rax
   14001823d:	mov    eax,0x0
   140018242:	setne  al
   140018245:	test   eax,eax
   140018247:	jne    0x140018254
   140018249:	mov    ecx,0x80004005
   14001824e:	call   0x140001430
   140018253:	int3   
   140018254:	mov    rax,QWORD PTR [rcx]
   140018257:	call   QWORD PTR [rax+0x18]
   14001825a:	add    rax,0x18
   14001825e:	mov    QWORD PTR [rsp+0x60],rax
   140018263:	lea    rdx,[rip+0x4eb96]        # 0x140066e00
   14001826a:	test   rdx,0xffffffffffff0000
   140018271:	jne    0x140018294
   140018273:	movzx  edi,dx
   140018276:	mov    ecx,edi
   140018278:	call   0x14002b860
   14001827d:	test   rax,rax
   140018280:	je     0x1400182b1
   140018282:	mov    r8d,edi
   140018285:	mov    rdx,rax
   140018288:	lea    rcx,[rsp+0x60]
   14001828d:	call   0x140003650
   140018292:	jmp    0x1400182b1
   140018294:	xor    eax,eax
   140018296:	mov    rcx,rbp
   140018299:	mov    rdi,rdx
   14001829c:	repnz scas ax,WORD PTR es:[rdi]
   14001829f:	not    rcx
   1400182a2:	lea    r8d,[rcx-0x1]
   1400182a6:	lea    rcx,[rsp+0x60]
   1400182ab:	call   0x1400037d0
   1400182b0:	nop
   1400182b1:	lea    rdx,[rsp+0x60]
   1400182b6:	mov    rcx,r12
   1400182b9:	call   0x14000ed30
   1400182be:	mov    rcx,r12
   1400182c1:	call   0x14000caf0
   1400182c6:	nop
   1400182c7:	lea    rdx,[rbx-0x18]
   1400182cb:	mov    eax,ebp
   1400182cd:	lock xadd DWORD PTR [rdx+0x10],eax
   1400182d2:	add    eax,0xffffffff
   1400182d5:	test   eax,eax
   1400182d7:	jg     0x1400182e3
   1400182d9:	mov    rcx,QWORD PTR [rdx]
   1400182dc:	mov    rax,QWORD PTR [rcx]
   1400182df:	call   QWORD PTR [rax+0x8]
   1400182e2:	nop
   1400182e3:	mov    rdx,QWORD PTR [rsp+0x68]
   1400182e8:	add    rdx,0xffffffffffffffe8
   1400182ec:	mov    eax,ebp
   1400182ee:	lock xadd DWORD PTR [rdx+0x10],eax
   1400182f3:	add    eax,0xffffffff
   1400182f6:	test   eax,eax
   1400182f8:	jg     0x140018304
   1400182fa:	mov    rcx,QWORD PTR [rdx]
   1400182fd:	mov    rax,QWORD PTR [rcx]
   140018300:	call   QWORD PTR [rax+0x8]
   140018303:	nop
   140018304:	mov    rdx,QWORD PTR [rsp+0x90]
   14001830c:	add    rdx,0xffffffffffffffe8
   140018310:	mov    eax,ebp
   140018312:	lock xadd DWORD PTR [rdx+0x10],eax
   140018317:	add    eax,0xffffffff
   14001831a:	test   eax,eax
   14001831c:	jg     0x140018328
   14001831e:	mov    rcx,QWORD PTR [rdx]
   140018321:	mov    rax,QWORD PTR [rcx]
   140018324:	call   QWORD PTR [rax+0x8]
   140018327:	nop
   140018328:	mov    rdx,QWORD PTR [rsp+0x80]
   140018330:	add    rdx,0xffffffffffffffe8
   140018334:	mov    eax,ebp
   140018336:	lock xadd DWORD PTR [rdx+0x10],eax
   14001833b:	add    eax,0xffffffff
   14001833e:	test   eax,eax
   140018340:	jg     0x14001834c
   140018342:	mov    rcx,QWORD PTR [rdx]
   140018345:	mov    rax,QWORD PTR [rcx]
   140018348:	call   QWORD PTR [rax+0x8]
   14001834b:	nop
   14001834c:	mov    rdx,QWORD PTR [rsp+0x70]
   140018351:	add    rdx,0xffffffffffffffe8
   140018355:	mov    eax,ebp
   140018357:	lock xadd DWORD PTR [rdx+0x10],eax
   14001835c:	add    eax,0xffffffff
   14001835f:	test   eax,eax
   140018361:	jg     0x14001836d
   140018363:	mov    rcx,QWORD PTR [rdx]
   140018366:	mov    rax,QWORD PTR [rcx]
   140018369:	call   QWORD PTR [rax+0x8]
   14001836c:	nop
   14001836d:	mov    rdx,QWORD PTR [rsp+0x78]
   140018372:	add    rdx,0xffffffffffffffe8
   140018376:	mov    eax,ebp
   140018378:	lock xadd DWORD PTR [rdx+0x10],eax
   14001837d:	add    eax,0xffffffff
   140018380:	test   eax,eax
   140018382:	jg     0x14001838e
   140018384:	mov    rcx,QWORD PTR [rdx]
   140018387:	mov    rax,QWORD PTR [rcx]
   14001838a:	call   QWORD PTR [rax+0x8]
   14001838d:	nop
   14001838e:	mov    rdx,QWORD PTR [rsp+0x88]
   140018396:	add    rdx,0xffffffffffffffe8
   14001839a:	mov    eax,ebp
   14001839c:	lock xadd DWORD PTR [rdx+0x10],eax
   1400183a1:	add    eax,0xffffffff
   1400183a4:	test   eax,eax
   1400183a6:	jg     0x1400183b2
   1400183a8:	mov    rcx,QWORD PTR [rdx]
   1400183ab:	mov    rax,QWORD PTR [rcx]
   1400183ae:	call   QWORD PTR [rax+0x8]
   1400183b1:	nop
   1400183b2:	mov    rdx,QWORD PTR [rsp+0xa8]
   1400183ba:	add    rdx,0xffffffffffffffe8
   1400183be:	mov    eax,ebp
   1400183c0:	lock xadd DWORD PTR [rdx+0x10],eax
   1400183c5:	add    eax,0xffffffff
   1400183c8:	test   eax,eax
   1400183ca:	jg     0x1400183d6
   1400183cc:	mov    rcx,QWORD PTR [rdx]
   1400183cf:	mov    rax,QWORD PTR [rcx]
   1400183d2:	call   QWORD PTR [rax+0x8]
   1400183d5:	nop
   1400183d6:	mov    rdx,QWORD PTR [rsp+0x48]
   1400183db:	add    rdx,0xffffffffffffffe8
   1400183df:	mov    eax,ebp
   1400183e1:	lock xadd DWORD PTR [rdx+0x10],eax
   1400183e6:	add    eax,0xffffffff
   1400183e9:	test   eax,eax
   1400183eb:	jg     0x1400183f7
   1400183ed:	mov    rcx,QWORD PTR [rdx]
   1400183f0:	mov    rax,QWORD PTR [rcx]
   1400183f3:	call   QWORD PTR [rax+0x8]
   1400183f6:	nop
   1400183f7:	mov    rdx,QWORD PTR [rsp+0xb8]
   1400183ff:	add    rdx,0xffffffffffffffe8
   140018403:	lock xadd DWORD PTR [rdx+0x10],ebp
   140018408:	add    ebp,0xffffffff
   14001840b:	test   ebp,ebp
   14001840d:	jg     0x140018418
   14001840f:	mov    rcx,QWORD PTR [rdx]
   140018412:	mov    rax,QWORD PTR [rcx]
   140018415:	call   QWORD PTR [rax+0x8]
   140018418:	mov    eax,0x1
   14001841d:	mov    rcx,QWORD PTR [rsp+0xfe0]
   140018425:	xor    rcx,rsp
   140018428:	call   0x140046470
   14001842d:	lea    r11,[rsp+0xff0]
   140018435:	mov    rbx,QWORD PTR [r11+0x38]
   140018439:	mov    rbp,QWORD PTR [r11+0x40]
   14001843d:	mov    rsi,QWORD PTR [r11+0x48]
   140018441:	mov    rsp,r11
   140018444:	pop    r15
   140018446:	pop    r14
   140018448:	pop    r13
   14001844a:	pop    r12
   14001844c:	pop    rdi
   14001844d:	ret    
   14001844e:	int3   
   14001844f:	int3   
   140018450:	rex push rbp
   140018452:	sub    rsp,0x20
   140018456:	mov    rbp,rdx
   140018459:	lea    rcx,[rbp+0xb8]
   140018460:	call   0x140001090
   140018465:	add    rsp,0x20
   140018469:	pop    rbp
   14001846a:	ret    
   14001846b:	int3   
   14001846c:	int3   
   14001846d:	int3   
   14001846e:	int3   
   14001846f:	int3   
   140018470:	rex push rbp
   140018472:	sub    rsp,0x20
   140018476:	mov    rbp,rdx
   140018479:	lea    rcx,[rbp+0xb8]
   140018480:	call   0x1400010c0
   140018485:	add    rsp,0x20
   140018489:	pop    rbp
   14001848a:	ret    
   14001848b:	int3   
   14001848c:	int3   
   14001848d:	int3   
   14001848e:	int3   
   14001848f:	int3   
   140018490:	rex push rbp
   140018492:	sub    rsp,0x20
   140018496:	mov    rbp,rdx
   140018499:	lea    rcx,[rbp+0x48]
   14001849d:	call   0x140001090
   1400184a2:	add    rsp,0x20
   1400184a6:	pop    rbp
   1400184a7:	ret    
   1400184a8:	int3   
   1400184a9:	int3   
   1400184aa:	int3   
   1400184ab:	int3   
   1400184ac:	int3   
   1400184ad:	int3   
   1400184ae:	int3   
   1400184af:	int3   
   1400184b0:	rex push rbp
   1400184b2:	sub    rsp,0x20
   1400184b6:	mov    rbp,rdx
   1400184b9:	lea    rcx,[rbp+0x48]
   1400184bd:	call   0x1400010c0
   1400184c2:	add    rsp,0x20
   1400184c6:	pop    rbp
   1400184c7:	ret    
   1400184c8:	int3   
   1400184c9:	int3   
   1400184ca:	int3   
   1400184cb:	int3   
   1400184cc:	int3   
   1400184cd:	int3   
   1400184ce:	int3   
   1400184cf:	int3   
   1400184d0:	rex push rbp
   1400184d2:	sub    rsp,0x20
   1400184d6:	mov    rbp,rdx
   1400184d9:	lea    rcx,[rbp+0xa8]
   1400184e0:	call   0x140001090
   1400184e5:	add    rsp,0x20
   1400184e9:	pop    rbp
   1400184ea:	ret    
   1400184eb:	int3   
   1400184ec:	int3   
   1400184ed:	int3   
   1400184ee:	int3   
   1400184ef:	int3   
   1400184f0:	rex push rbp
   1400184f2:	sub    rsp,0x20
   1400184f6:	mov    rbp,rdx
   1400184f9:	lea    rcx,[rbp+0xa8]
   140018500:	call   0x1400010c0
   140018505:	add    rsp,0x20
   140018509:	pop    rbp
   14001850a:	ret    
   14001850b:	int3   
   14001850c:	int3   
   14001850d:	int3   
   14001850e:	int3   
   14001850f:	int3   
   140018510:	rex push rbp
   140018512:	sub    rsp,0x20
   140018516:	mov    rbp,rdx
   140018519:	lea    rcx,[rbp+0x88]
   140018520:	call   0x140001090
   140018525:	add    rsp,0x20
   140018529:	pop    rbp
   14001852a:	ret    
   14001852b:	int3   
   14001852c:	int3   
   14001852d:	int3   
   14001852e:	int3   
   14001852f:	int3   
   140018530:	rex push rbp
   140018532:	sub    rsp,0x20
   140018536:	mov    rbp,rdx
   140018539:	lea    rcx,[rbp+0x88]
   140018540:	call   0x1400010c0
   140018545:	add    rsp,0x20
   140018549:	pop    rbp
   14001854a:	ret    
   14001854b:	int3   
   14001854c:	int3   
   14001854d:	int3   
   14001854e:	int3   
   14001854f:	int3   
   140018550:	rex push rbp
   140018552:	sub    rsp,0x20
   140018556:	mov    rbp,rdx
   140018559:	lea    rcx,[rbp+0x78]
   14001855d:	call   0x140001090
   140018562:	add    rsp,0x20
   140018566:	pop    rbp
   140018567:	ret    
   140018568:	int3   
   140018569:	int3   
   14001856a:	int3   
   14001856b:	int3   
   14001856c:	int3   
   14001856d:	int3   
   14001856e:	int3   
   14001856f:	int3   
   140018570:	rex push rbp
   140018572:	sub    rsp,0x20
   140018576:	mov    rbp,rdx
   140018579:	lea    rcx,[rbp+0x78]
   14001857d:	call   0x1400010c0
   140018582:	add    rsp,0x20
   140018586:	pop    rbp
   140018587:	ret    
   140018588:	int3   
   140018589:	int3   
   14001858a:	int3   
   14001858b:	int3   
   14001858c:	int3   
   14001858d:	int3   
   14001858e:	int3   
   14001858f:	int3   
   140018590:	rex push rbp
   140018592:	sub    rsp,0x20
   140018596:	mov    rbp,rdx
   140018599:	lea    rcx,[rbp+0x70]
   14001859d:	call   0x140001090
   1400185a2:	add    rsp,0x20
   1400185a6:	pop    rbp
   1400185a7:	ret    
   1400185a8:	int3   
   1400185a9:	int3   
   1400185aa:	int3   
   1400185ab:	int3   
   1400185ac:	int3   
   1400185ad:	int3   
   1400185ae:	int3   
   1400185af:	int3   
   1400185b0:	rex push rbp
   1400185b2:	sub    rsp,0x20
   1400185b6:	mov    rbp,rdx
   1400185b9:	lea    rcx,[rbp+0x70]
   1400185bd:	call   0x1400010c0
   1400185c2:	add    rsp,0x20
   1400185c6:	pop    rbp
   1400185c7:	ret    
   1400185c8:	int3   
   1400185c9:	int3   
   1400185ca:	int3   
   1400185cb:	int3   
   1400185cc:	int3   
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	rex push rbp
   1400185d2:	sub    rsp,0x20
   1400185d6:	mov    rbp,rdx
   1400185d9:	lea    rcx,[rbp+0x80]
   1400185e0:	call   0x140001090
   1400185e5:	add    rsp,0x20
   1400185e9:	pop    rbp
   1400185ea:	ret    
   1400185eb:	int3   
   1400185ec:	int3   
   1400185ed:	int3   
   1400185ee:	int3   
   1400185ef:	int3   
   1400185f0:	rex push rbp
   1400185f2:	sub    rsp,0x20
   1400185f6:	mov    rbp,rdx
   1400185f9:	lea    rcx,[rbp+0x80]
   140018600:	call   0x1400010c0
   140018605:	add    rsp,0x20
   140018609:	pop    rbp
   14001860a:	ret    
   14001860b:	int3   
   14001860c:	int3   
   14001860d:	int3   
   14001860e:	int3   
   14001860f:	int3   
   140018610:	rex push rbp
   140018612:	sub    rsp,0x20
   140018616:	mov    rbp,rdx
   140018619:	lea    rcx,[rbp+0x90]
   140018620:	call   0x140001090
   140018625:	add    rsp,0x20
   140018629:	pop    rbp
   14001862a:	ret    
   14001862b:	int3   
   14001862c:	int3   
   14001862d:	int3   
   14001862e:	int3   
   14001862f:	int3   
   140018630:	rex push rbp
   140018632:	sub    rsp,0x20
   140018636:	mov    rbp,rdx
   140018639:	lea    rcx,[rbp+0x90]
   140018640:	call   0x1400010c0
   140018645:	add    rsp,0x20
   140018649:	pop    rbp
   14001864a:	ret    
   14001864b:	int3   
   14001864c:	int3   
   14001864d:	int3   
   14001864e:	int3   
   14001864f:	int3   
   140018650:	rex push rbp
   140018652:	sub    rsp,0x20
   140018656:	mov    rbp,rdx
   140018659:	lea    rcx,[rbp+0x68]
   14001865d:	call   0x140001090
   140018662:	add    rsp,0x20
   140018666:	pop    rbp
   140018667:	ret    
   140018668:	int3   
   140018669:	int3   
   14001866a:	int3   
   14001866b:	int3   
   14001866c:	int3   
   14001866d:	int3   
   14001866e:	int3   
   14001866f:	int3   
   140018670:	rex push rbp
   140018672:	sub    rsp,0x20
   140018676:	mov    rbp,rdx
   140018679:	lea    rcx,[rbp+0x68]
   14001867d:	call   0x1400010c0
   140018682:	add    rsp,0x20
   140018686:	pop    rbp
   140018687:	ret    
   140018688:	int3   
   140018689:	int3   
   14001868a:	int3   
   14001868b:	int3   
   14001868c:	int3   
   14001868d:	int3   
   14001868e:	int3   
   14001868f:	int3   
   140018690:	rex push rbp
   140018692:	sub    rsp,0x20
   140018696:	mov    rbp,rdx
   140018699:	lea    rcx,[rbp+0xa0]
   1400186a0:	call   0x140001090
   1400186a5:	add    rsp,0x20
   1400186a9:	pop    rbp
   1400186aa:	ret    
   1400186ab:	int3   
   1400186ac:	int3   
   1400186ad:	int3   
   1400186ae:	int3   
   1400186af:	int3   
   1400186b0:	rex push rbp
   1400186b2:	sub    rsp,0x20
   1400186b6:	mov    rbp,rdx
   1400186b9:	lea    rcx,[rbp+0xa0]
   1400186c0:	call   0x1400010c0
   1400186c5:	add    rsp,0x20
   1400186c9:	pop    rbp
   1400186ca:	ret    
   1400186cb:	int3   
   1400186cc:	int3   
   1400186cd:	int3   
   1400186ce:	int3   
   1400186cf:	int3   
   1400186d0:	rex push rbp
   1400186d2:	sub    rsp,0x20
   1400186d6:	mov    rbp,rdx
   1400186d9:	lea    rcx,[rbp+0x50]
   1400186dd:	call   0x140001090
   1400186e2:	add    rsp,0x20
   1400186e6:	pop    rbp
   1400186e7:	ret    
   1400186e8:	int3   
   1400186e9:	int3   
   1400186ea:	int3   
   1400186eb:	int3   
   1400186ec:	int3   
   1400186ed:	int3   
   1400186ee:	int3   
   1400186ef:	int3   
   1400186f0:	rex push rbp
   1400186f2:	sub    rsp,0x20
   1400186f6:	mov    rbp,rdx
   1400186f9:	lea    rcx,[rbp+0x50]
   1400186fd:	call   0x1400010c0
   140018702:	add    rsp,0x20
   140018706:	pop    rbp
   140018707:	ret    
   140018708:	int3   
   140018709:	int3   
   14001870a:	int3   
   14001870b:	int3   
   14001870c:	int3   
   14001870d:	int3   
   14001870e:	int3   
   14001870f:	int3   
   140018710:	rex push rbp
   140018712:	sub    rsp,0x20
   140018716:	mov    rbp,rdx
   140018719:	mov    rcx,QWORD PTR [rbp+0x58]
   14001871d:	call   0x140001090
   140018722:	add    rsp,0x20
   140018726:	pop    rbp
   140018727:	ret    
   140018728:	int3   
   140018729:	int3   
   14001872a:	int3   
   14001872b:	int3   
   14001872c:	int3   
   14001872d:	int3   
   14001872e:	int3   
   14001872f:	int3   
   140018730:	rex push rbp
   140018732:	sub    rsp,0x20
   140018736:	mov    rbp,rdx
   140018739:	mov    rcx,QWORD PTR [rbp+0x58]
   14001873d:	call   0x140001090
   140018742:	add    rsp,0x20
   140018746:	pop    rbp
   140018747:	ret    
   140018748:	int3   
   140018749:	int3   
   14001874a:	int3   
   14001874b:	int3   
   14001874c:	int3   
   14001874d:	int3   
   14001874e:	int3   
   14001874f:	int3   
   140018750:	rex push rbp
   140018752:	sub    rsp,0x20
   140018756:	mov    rbp,rdx
   140018759:	mov    rcx,QWORD PTR [rbp+0x58]
   14001875d:	call   0x140001090
   140018762:	add    rsp,0x20
   140018766:	pop    rbp
   140018767:	ret    
   140018768:	int3   
   140018769:	int3   
   14001876a:	int3   
   14001876b:	int3   
   14001876c:	int3   
   14001876d:	int3   
   14001876e:	int3   
   14001876f:	int3   
   140018770:	sub    rsp,0x28
   140018774:	mov    ecx,0x2
   140018779:	call   0x1400118a0
   14001877e:	xor    ecx,ecx
   140018780:	call   0x1400118a0
   140018785:	mov    ecx,0x3e8
   14001878a:	call   QWORD PTR [rip+0x4bdf8]        # 0x140064588
   140018790:	mov    ecx,0x1
   140018795:	call   0x1400118a0
   14001879a:	xor    ecx,ecx
   14001879c:	add    rsp,0x28
   1400187a0:	jmp    0x1400118a0
   1400187a5:	int3   
   1400187a6:	int3   
   1400187a7:	int3   
   1400187a8:	int3   
   1400187a9:	int3   
   1400187aa:	int3   
   1400187ab:	int3   
   1400187ac:	int3   
   1400187ad:	int3   
   1400187ae:	int3   
   1400187af:	int3   
   1400187b0:	rex push rbx
   1400187b2:	sub    rsp,0x20
   1400187b6:	mov    rbx,rcx
   1400187b9:	call   0x140016b40
   1400187be:	test   eax,eax
   1400187c0:	jne    0x1400187dc
   1400187c2:	lea    r9d,[rax+0x10]
   1400187c6:	lea    r8,[rip+0x4d31b]        # 0x140065ae8
   1400187cd:	lea    rdx,[rip+0x4ea1c]        # 0x1400671f0
   1400187d4:	mov    rcx,rbx
   1400187d7:	call   0x140001690
   1400187dc:	mov    rcx,QWORD PTR [rbx+0xeb180]
   1400187e3:	xor    r9d,r9d
   1400187e6:	mov    edx,0x402
   1400187eb:	lea    r8d,[r9+0x64]
   1400187ef:	call   QWORD PTR [rip+0x4c37b]        # 0x140064b70
   1400187f5:	xor    edx,edx
   1400187f7:	mov    rcx,rbx
   1400187fa:	call   0x1400018d0
   1400187ff:	mov    rcx,rbx
   140018802:	call   0x14001e0c8
   140018807:	xor    eax,eax
   140018809:	add    rsp,0x20
   14001880d:	pop    rbx
   14001880e:	ret    
   14001880f:	int3   
   140018810:	rex push rbx
   140018812:	push   rbp
   140018813:	push   rsi
   140018814:	push   rdi
   140018815:	push   r12
   140018817:	push   r13
   140018819:	push   r14
   14001881b:	sub    rsp,0x50
   14001881f:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140018828:	mov    rbx,rcx
   14001882b:	call   0x140016b40
   140018830:	test   eax,eax
   140018832:	jne    0x140018850
   140018834:	lea    r8d,[rax+0x10]
   140018838:	lea    rdx,[rip+0x4d2a9]        # 0x140065ae8
   14001883f:	lea    rcx,[rip+0x4ebea]        # 0x140067430
   140018846:	call   0x1400019e0
   14001884b:	jmp    0x140018c72
   140018850:	mov    DWORD PTR [rbx+0x2b0],0x1
   14001885a:	xor    ebp,ebp
   14001885c:	lea    r13,[rip+0x4eb9d]        # 0x140067400
   140018863:	mov    r14d,0x80000002
   140018869:	or     edi,0xffffffff
   14001886c:	cmp    DWORD PTR [rbx+0x298],ebp
   140018872:	je     0x140018a75
   140018878:	cmp    DWORD PTR [rbx+0x2a8],ebp
   14001887e:	je     0x140018a75
   140018884:	call   0x14002b874
   140018889:	mov    r11,rax
   14001888c:	mov    ecx,ebp
   14001888e:	test   rax,rax
   140018891:	setne  cl
   140018894:	test   ecx,ecx
   140018896:	jne    0x1400188a3
   140018898:	mov    ecx,0x80004005
   14001889d:	call   0x140001430
   1400188a2:	int3   
   1400188a3:	mov    rax,QWORD PTR [rax]
   1400188a6:	mov    rcx,r11
   1400188a9:	call   QWORD PTR [rax+0x18]
   1400188ac:	add    rax,0x18
   1400188b0:	mov    QWORD PTR [rsp+0xa0],rax
   1400188b8:	test   r13,0xffffffffffff0000
   1400188bf:	jne    0x1400188e6
   1400188c1:	movzx  esi,r13w
   1400188c5:	mov    ecx,esi
   1400188c7:	call   0x14002b860
   1400188cc:	test   rax,rax
   1400188cf:	je     0x1400188f7
   1400188d1:	mov    r8d,esi
   1400188d4:	mov    rdx,rax
   1400188d7:	lea    rcx,[rsp+0xa0]
   1400188df:	call   0x140003650
   1400188e4:	jmp    0x1400188f7
   1400188e6:	mov    rdx,r13
   1400188e9:	lea    rcx,[rsp+0xa0]
   1400188f1:	call   0x140003930
   1400188f6:	nop
   1400188f7:	lea    r8,[rsp+0xa0]
   1400188ff:	lea    rdx,[rbx+0x290]
   140018906:	lea    rcx,[rsp+0x30]
   14001890b:	call   0x140003e20
   140018910:	lea    rcx,[rsp+0x98]
   140018918:	mov    QWORD PTR [rsp+0x20],rcx
   14001891d:	mov    r9d,0xf003f
   140018923:	xor    r8d,r8d
   140018926:	mov    rdx,QWORD PTR [rax]
   140018929:	mov    rcx,r14
   14001892c:	call   QWORD PTR [rip+0x4b726]        # 0x140064058
   140018932:	test   eax,eax
   140018934:	sete   sil
   140018938:	mov    rdx,QWORD PTR [rsp+0x30]
   14001893d:	add    rdx,0xffffffffffffffe8
   140018941:	mov    eax,edi
   140018943:	lock xadd DWORD PTR [rdx+0x10],eax
   140018948:	add    eax,0xffffffff
   14001894b:	test   eax,eax
   14001894d:	jg     0x140018959
   14001894f:	mov    rcx,QWORD PTR [rdx]
   140018952:	mov    rax,QWORD PTR [rcx]
   140018955:	call   QWORD PTR [rax+0x8]
   140018958:	nop
   140018959:	mov    rdx,QWORD PTR [rsp+0xa0]
   140018961:	add    rdx,0xffffffffffffffe8
   140018965:	mov    eax,edi
   140018967:	lock xadd DWORD PTR [rdx+0x10],eax
   14001896c:	add    eax,0xffffffff
   14001896f:	test   eax,eax
   140018971:	jg     0x14001897c
   140018973:	mov    rcx,QWORD PTR [rdx]
   140018976:	mov    rax,QWORD PTR [rcx]
   140018979:	call   QWORD PTR [rax+0x8]
   14001897c:	test   sil,sil
   14001897f:	je     0x1400189a4
   140018981:	lea    rdx,[rip+0x4ea28]        # 0x1400673b0
   140018988:	mov    rcx,QWORD PTR [rsp+0x98]
   140018990:	call   QWORD PTR [rip+0x4b6a2]        # 0x140064038
   140018996:	mov    rcx,QWORD PTR [rsp+0x98]
   14001899e:	call   QWORD PTR [rip+0x4b6c4]        # 0x140064068
   1400189a4:	lea    rax,[rsp+0x98]
   1400189ac:	mov    QWORD PTR [rsp+0x20],rax
   1400189b1:	mov    r9d,0xf003f
   1400189b7:	xor    r8d,r8d
   1400189ba:	mov    rdx,QWORD PTR [rbx+0x290]
   1400189c1:	mov    rcx,r14
   1400189c4:	call   QWORD PTR [rip+0x4b68e]        # 0x140064058
   1400189ca:	test   eax,eax
   1400189cc:	jne    0x1400189e9
   1400189ce:	mov    rcx,QWORD PTR [rsp+0x98]
   1400189d6:	call   0x140008640
   1400189db:	mov    rcx,QWORD PTR [rsp+0x98]
   1400189e3:	call   QWORD PTR [rip+0x4b67f]        # 0x140064068
   1400189e9:	lea    rax,[rsp+0x98]
   1400189f1:	mov    QWORD PTR [rsp+0x20],rax
   1400189f6:	mov    r9d,0xf003f
   1400189fc:	xor    r8d,r8d
   1400189ff:	lea    rdx,[rip+0x4e98a]        # 0x140067390
   140018a06:	mov    rcx,r14
   140018a09:	call   QWORD PTR [rip+0x4b649]        # 0x140064058
   140018a0f:	test   eax,eax
   140018a11:	jne    0x140018a2e
   140018a13:	mov    rcx,QWORD PTR [rsp+0x98]
   140018a1b:	call   0x140008640
   140018a20:	mov    rcx,QWORD PTR [rsp+0x98]
   140018a28:	call   QWORD PTR [rip+0x4b63a]        # 0x140064068
   140018a2e:	lea    rax,[rsp+0x98]
   140018a36:	mov    QWORD PTR [rsp+0x20],rax
   140018a3b:	mov    r9d,0xf003f
   140018a41:	xor    r8d,r8d
   140018a44:	lea    rdx,[rip+0x4e945]        # 0x140067390
   140018a4b:	mov    ecx,0x80000001
   140018a50:	call   QWORD PTR [rip+0x4b602]        # 0x140064058
   140018a56:	test   eax,eax
   140018a58:	jne    0x140018a75
   140018a5a:	mov    rcx,QWORD PTR [rsp+0x98]
   140018a62:	call   0x140008640
   140018a67:	mov    rcx,QWORD PTR [rsp+0x98]
   140018a6f:	call   QWORD PTR [rip+0x4b5f3]        # 0x140064068
   140018a75:	cmp    DWORD PTR [rbx+0x2ac],0x0
   140018a7c:	je     0x140018b9c
   140018a82:	call   0x14002b874
   140018a87:	mov    rcx,rax
   140018a8a:	test   rax,rax
   140018a8d:	setne  bpl
   140018a91:	test   ebp,ebp
   140018a93:	jne    0x140018aa0
   140018a95:	mov    ecx,0x80004005
   140018a9a:	call   0x140001430
   140018a9f:	int3   
   140018aa0:	mov    rax,QWORD PTR [rax]
   140018aa3:	call   QWORD PTR [rax+0x18]
   140018aa6:	add    rax,0x18
   140018aaa:	mov    QWORD PTR [rsp+0xa8],rax
   140018ab2:	test   r13,0xffffffffffff0000
   140018ab9:	jne    0x140018ae0
   140018abb:	movzx  esi,r13w
   140018abf:	mov    ecx,esi
   140018ac1:	call   0x14002b860
   140018ac6:	test   rax,rax
   140018ac9:	je     0x140018af1
   140018acb:	mov    r8d,esi
   140018ace:	mov    rdx,rax
   140018ad1:	lea    rcx,[rsp+0xa8]
   140018ad9:	call   0x140003650
   140018ade:	jmp    0x140018af1
   140018ae0:	mov    rdx,r13
   140018ae3:	lea    rcx,[rsp+0xa8]
   140018aeb:	call   0x140003930
   140018af0:	nop
   140018af1:	lea    rdx,[rbx+0x290]
   140018af8:	lea    r8,[rsp+0xa8]
   140018b00:	lea    rcx,[rsp+0x38]
   140018b05:	call   0x140003e20
   140018b0a:	lea    rcx,[rsp+0x98]
   140018b12:	mov    QWORD PTR [rsp+0x20],rcx
   140018b17:	mov    r9d,0xf003f
   140018b1d:	xor    r8d,r8d
   140018b20:	mov    rdx,QWORD PTR [rax]
   140018b23:	mov    rcx,r14
   140018b26:	call   QWORD PTR [rip+0x4b52c]        # 0x140064058
   140018b2c:	test   eax,eax
   140018b2e:	sete   sil
   140018b32:	mov    rdx,QWORD PTR [rsp+0x38]
   140018b37:	add    rdx,0xffffffffffffffe8
   140018b3b:	mov    eax,edi
   140018b3d:	lock xadd DWORD PTR [rdx+0x10],eax
   140018b42:	add    eax,0xffffffff
   140018b45:	test   eax,eax
   140018b47:	jg     0x140018b53
   140018b49:	mov    rcx,QWORD PTR [rdx]
   140018b4c:	mov    rax,QWORD PTR [rcx]
   140018b4f:	call   QWORD PTR [rax+0x8]
   140018b52:	nop
   140018b53:	mov    rdx,QWORD PTR [rsp+0xa8]
   140018b5b:	add    rdx,0xffffffffffffffe8
   140018b5f:	lock xadd DWORD PTR [rdx+0x10],edi
   140018b64:	add    edi,0xffffffff
   140018b67:	test   edi,edi
   140018b69:	jg     0x140018b74
   140018b6b:	mov    rcx,QWORD PTR [rdx]
   140018b6e:	mov    rax,QWORD PTR [rcx]
   140018b71:	call   QWORD PTR [rax+0x8]
   140018b74:	test   sil,sil
   140018b77:	je     0x140018b9c
   140018b79:	lea    rdx,[rip+0x4e7c0]        # 0x140067340
   140018b80:	mov    rcx,QWORD PTR [rsp+0x98]
   140018b88:	call   QWORD PTR [rip+0x4b4aa]        # 0x140064038
   140018b8e:	mov    rcx,QWORD PTR [rsp+0x98]
   140018b96:	call   QWORD PTR [rip+0x4b4cc]        # 0x140064068
   140018b9c:	lea    rax,[rsp+0x98]
   140018ba4:	mov    QWORD PTR [rsp+0x20],rax
   140018ba9:	mov    r9d,0xf003f
   140018baf:	xor    r8d,r8d
   140018bb2:	lea    rdx,[rip+0x4e727]        # 0x1400672e0
   140018bb9:	mov    rcx,r14
   140018bbc:	call   QWORD PTR [rip+0x4b496]        # 0x140064058
   140018bc2:	test   eax,eax
   140018bc4:	jne    0x140018c62
   140018bca:	cmp    DWORD PTR [rbx+0x2a8],eax
   140018bd0:	je     0x140018c62
   140018bd6:	lea    rdx,[rip+0x4e6f3]        # 0x1400672d0
   140018bdd:	mov    rcx,QWORD PTR [rsp+0x98]
   140018be5:	call   QWORD PTR [rip+0x4b42d]        # 0x140064018
   140018beb:	lea    rdx,[rip+0x4e6ce]        # 0x1400672c0
   140018bf2:	mov    rcx,QWORD PTR [rsp+0x98]
   140018bfa:	call   QWORD PTR [rip+0x4b418]        # 0x140064018
   140018c00:	lea    rdx,[rip+0x4e6a9]        # 0x1400672b0
   140018c07:	mov    rcx,QWORD PTR [rsp+0x98]
   140018c0f:	call   QWORD PTR [rip+0x4b403]        # 0x140064018
   140018c15:	lea    rdx,[rip+0x4e67c]        # 0x140067298
   140018c1c:	mov    rcx,QWORD PTR [rsp+0x98]
   140018c24:	call   QWORD PTR [rip+0x4b3ee]        # 0x140064018
   140018c2a:	lea    rdx,[rip+0x4e64f]        # 0x140067280
   140018c31:	mov    rcx,QWORD PTR [rsp+0x98]
   140018c39:	call   QWORD PTR [rip+0x4b3d9]        # 0x140064018
   140018c3f:	lea    rdx,[rip+0x4e62a]        # 0x140067270
   140018c46:	mov    rcx,QWORD PTR [rsp+0x98]
   140018c4e:	call   QWORD PTR [rip+0x4b3c4]        # 0x140064018
   140018c54:	mov    rcx,QWORD PTR [rsp+0x98]
   140018c5c:	call   QWORD PTR [rip+0x4b406]        # 0x140064068
   140018c62:	mov    edx,0x1
   140018c67:	lea    ecx,[rdx+0x5]
   140018c6a:	mov    r8d,edx
   140018c6d:	call   0x140011ac0
   140018c72:	xor    r9d,r9d
   140018c75:	mov    edx,0x402
   140018c7a:	lea    r8d,[r9+0x64]
   140018c7e:	mov    rcx,QWORD PTR [rbx+0xeb180]
   140018c85:	call   QWORD PTR [rip+0x4bee5]        # 0x140064b70
   140018c8b:	xor    edx,edx
   140018c8d:	mov    rcx,rbx
   140018c90:	call   0x1400018d0
   140018c95:	mov    rcx,rbx
   140018c98:	call   0x1400016b0
   140018c9d:	xor    eax,eax
   140018c9f:	add    rsp,0x50
   140018ca3:	pop    r14
   140018ca5:	pop    r13
   140018ca7:	pop    r12
   140018ca9:	pop    rdi
   140018caa:	pop    rsi
   140018cab:	pop    rbp
   140018cac:	pop    rbx
   140018cad:	ret    
   140018cae:	int3   
   140018caf:	int3   
   140018cb0:	rex push rbp
   140018cb2:	sub    rsp,0x20
   140018cb6:	mov    rbp,rdx
   140018cb9:	lea    rcx,[rbp+0xa0]
   140018cc0:	call   0x140001090
   140018cc5:	add    rsp,0x20
   140018cc9:	pop    rbp
   140018cca:	ret    
   140018ccb:	int3   
   140018ccc:	int3   
   140018ccd:	int3   
   140018cce:	int3   
   140018ccf:	int3   
   140018cd0:	rex push rbp
   140018cd2:	sub    rsp,0x20
   140018cd6:	mov    rbp,rdx
   140018cd9:	lea    rcx,[rbp+0xa0]
   140018ce0:	call   0x1400010c0
   140018ce5:	add    rsp,0x20
   140018ce9:	pop    rbp
   140018cea:	ret    
   140018ceb:	int3   
   140018cec:	int3   
   140018ced:	int3   
   140018cee:	int3   
   140018cef:	int3   
   140018cf0:	rex push rbp
   140018cf2:	sub    rsp,0x20
   140018cf6:	mov    rbp,rdx
   140018cf9:	lea    rcx,[rbp+0xa8]
   140018d00:	call   0x140001090
   140018d05:	add    rsp,0x20
   140018d09:	pop    rbp
   140018d0a:	ret    
   140018d0b:	int3   
   140018d0c:	int3   
   140018d0d:	int3   
   140018d0e:	int3   
   140018d0f:	int3   
   140018d10:	rex push rbp
   140018d12:	sub    rsp,0x20
   140018d16:	mov    rbp,rdx
   140018d19:	lea    rcx,[rbp+0xa8]
   140018d20:	call   0x1400010c0
   140018d25:	add    rsp,0x20
   140018d29:	pop    rbp
   140018d2a:	ret    
   140018d2b:	int3   
   140018d2c:	int3   
   140018d2d:	int3   
   140018d2e:	int3   
   140018d2f:	int3   
   140018d30:	mov    rax,rsp
   140018d33:	push   rdi
   140018d34:	push   r12
   140018d36:	push   r13
   140018d38:	sub    rsp,0x8a0
   140018d3f:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140018d48:	mov    QWORD PTR [rax+0x10],rbx
   140018d4c:	mov    QWORD PTR [rax+0x18],rbp
   140018d50:	mov    QWORD PTR [rax+0x20],rsi
   140018d54:	mov    rax,QWORD PTR [rip+0x6e015]        # 0x140086d70
   140018d5b:	xor    rax,rsp
   140018d5e:	mov    QWORD PTR [rsp+0x890],rax
   140018d66:	mov    r13,rcx
   140018d69:	call   0x14002b874
   140018d6e:	mov    rdx,rax
   140018d71:	xor    r12d,r12d
   140018d74:	mov    ecx,r12d
   140018d77:	test   rax,rax
   140018d7a:	setne  cl
   140018d7d:	test   ecx,ecx
   140018d7f:	jne    0x140018d8c
   140018d81:	mov    ecx,0x80004005
   140018d86:	call   0x140001430
   140018d8b:	int3   
   140018d8c:	mov    rax,QWORD PTR [rax]
   140018d8f:	mov    rcx,rdx
   140018d92:	call   QWORD PTR [rax+0x18]
   140018d95:	add    rax,0x18
   140018d99:	mov    QWORD PTR [rsp+0x28],rax
   140018d9e:	lea    rbp,[rip+0x4c5a3]        # 0x140065348
   140018da5:	mov    rbx,rbp
   140018da8:	or     rsi,0xffffffffffffffff
   140018dac:	shr    rbx,0x10
   140018db0:	jne    0x140018dd3
   140018db2:	movzx  edi,bp
   140018db5:	mov    ecx,edi
   140018db7:	call   0x14002b860
   140018dbc:	test   rax,rax
   140018dbf:	je     0x140018df3
   140018dc1:	mov    r8d,edi
   140018dc4:	mov    rdx,rax
   140018dc7:	lea    rcx,[rsp+0x28]
   140018dcc:	call   0x140003650
   140018dd1:	jmp    0x140018df3
   140018dd3:	xor    eax,eax
   140018dd5:	mov    rcx,rsi
   140018dd8:	mov    rdi,rbp
   140018ddb:	repnz scas ax,WORD PTR es:[rdi]
   140018dde:	not    rcx
   140018de1:	lea    r8d,[rcx-0x1]
   140018de5:	mov    rdx,rbp
   140018de8:	lea    rcx,[rsp+0x28]
   140018ded:	call   0x1400037d0
   140018df2:	nop
   140018df3:	call   0x14002b874
   140018df8:	mov    rdx,rax
   140018dfb:	mov    ecx,r12d
   140018dfe:	test   rax,rax
   140018e01:	setne  cl
   140018e04:	test   ecx,ecx
   140018e06:	jne    0x140018e13
   140018e08:	mov    ecx,0x80004005
   140018e0d:	call   0x140001430
   140018e12:	int3   
   140018e13:	mov    rax,QWORD PTR [rax]
   140018e16:	mov    rcx,rdx
   140018e19:	call   QWORD PTR [rax+0x18]
   140018e1c:	add    rax,0x18
   140018e20:	mov    QWORD PTR [rsp+0x20],rax
   140018e25:	test   rbx,rbx
   140018e28:	jne    0x140018e4b
   140018e2a:	movzx  edi,bp
   140018e2d:	mov    ecx,edi
   140018e2f:	call   0x14002b860
   140018e34:	test   rax,rax
   140018e37:	je     0x140018e6b
   140018e39:	mov    r8d,edi
   140018e3c:	mov    rdx,rax
   140018e3f:	lea    rcx,[rsp+0x20]
   140018e44:	call   0x140003650
   140018e49:	jmp    0x140018e6b
   140018e4b:	xor    eax,eax
   140018e4d:	mov    rcx,rsi
   140018e50:	mov    rdi,rbp
   140018e53:	repnz scas ax,WORD PTR es:[rdi]
   140018e56:	not    rcx
   140018e59:	lea    r8d,[rcx-0x1]
   140018e5d:	mov    rdx,rbp
   140018e60:	lea    rcx,[rsp+0x20]
   140018e65:	call   0x1400037d0
   140018e6a:	nop
   140018e6b:	call   0x14002b874
   140018e70:	mov    rdx,rax
   140018e73:	mov    ecx,r12d
   140018e76:	test   rax,rax
   140018e79:	setne  cl
   140018e7c:	test   ecx,ecx
   140018e7e:	jne    0x140018e8b
   140018e80:	mov    ecx,0x80004005
   140018e85:	call   0x140001430
   140018e8a:	int3   
   140018e8b:	mov    rax,QWORD PTR [rax]
   140018e8e:	mov    rcx,rdx
   140018e91:	call   QWORD PTR [rax+0x18]
   140018e94:	add    rax,0x18
   140018e98:	mov    QWORD PTR [rsp+0x30],rax
   140018e9d:	test   rbx,rbx
   140018ea0:	jne    0x140018ec3
   140018ea2:	movzx  edi,bp
   140018ea5:	mov    ecx,edi
   140018ea7:	call   0x14002b860
   140018eac:	test   rax,rax
   140018eaf:	je     0x140018ee3
   140018eb1:	mov    r8d,edi
   140018eb4:	mov    rdx,rax
   140018eb7:	lea    rcx,[rsp+0x30]
   140018ebc:	call   0x140003650
   140018ec1:	jmp    0x140018ee3
   140018ec3:	xor    eax,eax
   140018ec5:	mov    rcx,rsi
   140018ec8:	mov    rdi,rbp
   140018ecb:	repnz scas ax,WORD PTR es:[rdi]
   140018ece:	not    rcx
   140018ed1:	lea    r8d,[rcx-0x1]
   140018ed5:	mov    rdx,rbp
   140018ed8:	lea    rcx,[rsp+0x30]
   140018edd:	call   0x1400037d0
   140018ee2:	nop
   140018ee3:	mov    DWORD PTR [rsp+0x478],r12d
   140018eeb:	cmp    DWORD PTR [r13+0xeb138],0x0
   140018ef3:	je     0x14001920f
   140018ef9:	lea    rdx,[rsp+0x40]
   140018efe:	mov    rcx,r13
   140018f01:	call   0x14000b810
   140018f06:	mov    r8,QWORD PTR [rax]
   140018f09:	mov    edx,0x208
   140018f0e:	lea    rcx,[rsp+0x480]
   140018f16:	call   0x140047080
   140018f1b:	mov    rdx,QWORD PTR [rsp+0x40]
   140018f20:	add    rdx,0xffffffffffffffe8
   140018f24:	mov    eax,esi
   140018f26:	lock xadd DWORD PTR [rdx+0x10],eax
   140018f2b:	add    eax,0xffffffff
   140018f2e:	test   eax,eax
   140018f30:	jg     0x140018f3b
   140018f32:	mov    rcx,QWORD PTR [rdx]
   140018f35:	mov    rax,QWORD PTR [rcx]
   140018f38:	call   QWORD PTR [rax+0x8]
   140018f3b:	xor    eax,eax
   140018f3d:	mov    rcx,rsi
   140018f40:	lea    rdi,[rsp+0x480]
   140018f48:	repnz scas ax,WORD PTR es:[rdi]
   140018f4b:	not    rcx
   140018f4e:	sub    rcx,0x1
   140018f52:	mov    rbx,rcx
   140018f55:	test   ecx,ecx
   140018f57:	jne    0x140018fbd
   140018f59:	mov    rdi,QWORD PTR [rsp+0x20]
   140018f5e:	lea    rdx,[rdi-0x18]
   140018f62:	mov    rbx,QWORD PTR [rdx]
   140018f65:	cmp    DWORD PTR [rdx+0x8],eax
   140018f68:	je     0x14001904c
   140018f6e:	cmp    DWORD PTR [rdx+0x10],eax
   140018f71:	jge    0x140018f8f
   140018f73:	cmp    DWORD PTR [rdi-0xc],eax
   140018f76:	jge    0x140018f83
   140018f78:	mov    ecx,0x80070057
   140018f7d:	call   0x140001430
   140018f82:	int3   
   140018f83:	mov    DWORD PTR [rdi-0x10],r12d
   140018f87:	mov    WORD PTR [rdi],ax
   140018f8a:	jmp    0x14001904c
   140018f8f:	mov    eax,esi
   140018f91:	lock xadd DWORD PTR [rdx+0x10],eax
   140018f96:	add    eax,0xffffffff
   140018f99:	test   eax,eax
   140018f9b:	jg     0x140018fa6
   140018f9d:	mov    rcx,QWORD PTR [rdx]
   140018fa0:	mov    rax,QWORD PTR [rcx]
   140018fa3:	call   QWORD PTR [rax+0x8]
   140018fa6:	mov    rax,QWORD PTR [rbx]
   140018fa9:	mov    rcx,rbx
   140018fac:	call   QWORD PTR [rax+0x18]
   140018faf:	lea    rdi,[rax+0x18]
   140018fb3:	mov    QWORD PTR [rsp+0x20],rdi
   140018fb8:	jmp    0x14001904c
   140018fbd:	mov    rdi,QWORD PTR [rsp+0x20]
   140018fc2:	mov    ebp,DWORD PTR [rdi-0x10]
   140018fc5:	lea    r12,[rsp+0x480]
   140018fcd:	sub    r12,rdi
   140018fd0:	sar    r12,1
   140018fd3:	mov    ecx,0x1
   140018fd8:	sub    ecx,DWORD PTR [rdi-0x8]
   140018fdb:	mov    eax,DWORD PTR [rdi-0xc]
   140018fde:	sub    eax,ebx
   140018fe0:	or     eax,ecx
   140018fe2:	jge    0x140018ff5
   140018fe4:	mov    edx,ebx
   140018fe6:	lea    rcx,[rsp+0x20]
   140018feb:	call   0x140002d40
   140018ff0:	mov    rdi,QWORD PTR [rsp+0x20]
   140018ff5:	cmp    r12,rbp
   140018ff8:	ja     0x140019015
   140018ffa:	movsxd rax,ebx
   140018ffd:	lea    rbp,[rax+rax*1]
   140019001:	lea    r8,[rdi+r12*2]
   140019005:	mov    r9,rbp
   140019008:	mov    rdx,rbp
   14001900b:	mov    rcx,rdi
   14001900e:	call   0x1400467a0
   140019013:	jmp    0x140019032
   140019015:	movsxd rax,ebx
   140019018:	lea    rbp,[rax+rax*1]
   14001901c:	mov    r9,rbp
   14001901f:	lea    r8,[rsp+0x480]
   140019027:	mov    rdx,rbp
   14001902a:	mov    rcx,rdi
   14001902d:	call   0x1400466d0
   140019032:	test   ebx,ebx
   140019034:	js     0x140019204
   14001903a:	cmp    ebx,DWORD PTR [rdi-0xc]
   14001903d:	jg     0x140019204
   140019043:	mov    DWORD PTR [rdi-0x10],ebx
   140019046:	mov    WORD PTR [rdi+rbp*1],0x0
   14001904c:	mov    dx,0x5c
   140019050:	mov    rcx,rdi
   140019053:	call   0x140046630
   140019058:	test   rax,rax
   14001905b:	je     0x14001920f
   140019061:	sub    rax,rdi
   140019064:	sar    rax,1
   140019067:	cmp    eax,0xffffffff
   14001906a:	je     0x14001920f
   140019070:	mov    r8d,eax
   140019073:	lea    rdx,[rsp+0x38]
   140019078:	lea    rcx,[rsp+0x20]
   14001907d:	call   0x1400034f0
   140019082:	nop
   140019083:	mov    rdx,QWORD PTR [rax]
   140019086:	lea    rcx,[rdx-0x18]
   14001908a:	mov    rdi,QWORD PTR [rsp+0x28]
   14001908f:	add    rdi,0xffffffffffffffe8
   140019093:	cmp    rcx,rdi
   140019096:	je     0x1400190e2
   140019098:	cmp    DWORD PTR [rdi+0x10],0x0
   14001909c:	jl     0x1400190d3
   14001909e:	mov    rax,QWORD PTR [rdi]
   1400190a1:	cmp    QWORD PTR [rcx],rax
   1400190a4:	jne    0x1400190d3
   1400190a6:	call   0x140002da0
   1400190ab:	mov    rbx,rax
   1400190ae:	mov    ecx,esi
   1400190b0:	lock xadd DWORD PTR [rdi+0x10],ecx
   1400190b5:	add    ecx,0xffffffff
   1400190b8:	test   ecx,ecx
   1400190ba:	jg     0x1400190c8
   1400190bc:	mov    rcx,QWORD PTR [rdi]
   1400190bf:	mov    rax,QWORD PTR [rcx]
   1400190c2:	mov    rdx,rdi
   1400190c5:	call   QWORD PTR [rax+0x8]
   1400190c8:	lea    rax,[rbx+0x18]
   1400190cc:	mov    QWORD PTR [rsp+0x28],rax
   1400190d1:	jmp    0x1400190e2
   1400190d3:	mov    r8d,DWORD PTR [rdx-0x10]
   1400190d7:	lea    rcx,[rsp+0x28]
   1400190dc:	call   0x1400037d0
   1400190e1:	nop
   1400190e2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400190e7:	add    rdx,0xffffffffffffffe8
   1400190eb:	mov    eax,esi
   1400190ed:	lock xadd DWORD PTR [rdx+0x10],eax
   1400190f2:	add    eax,0xffffffff
   1400190f5:	test   eax,eax
   1400190f7:	jg     0x140019102
   1400190f9:	mov    rcx,QWORD PTR [rdx]
   1400190fc:	mov    rax,QWORD PTR [rcx]
   1400190ff:	call   QWORD PTR [rax+0x8]
   140019102:	mov    r8,QWORD PTR [rsp+0x28]
   140019107:	lea    rdx,[rip+0x4e3a2]        # 0x1400674b0
   14001910e:	lea    rcx,[rsp+0x30]
   140019113:	call   0x140004180
   140019118:	mov    rdi,QWORD PTR [rsp+0x30]
   14001911d:	mov    rcx,QWORD PTR [rdi-0x18]
   140019121:	mov    rax,QWORD PTR [rcx]
   140019124:	call   QWORD PTR [rax+0x20]
   140019127:	mov    rcx,rax
   14001912a:	cmp    DWORD PTR [rdi-0x8],0x0
   14001912e:	jl     0x140019141
   140019130:	cmp    rax,QWORD PTR [rdi-0x18]
   140019134:	jne    0x140019141
   140019136:	lea    rbx,[rdi-0x18]
   14001913a:	lock add DWORD PTR [rdi-0x8],0x1
   14001913f:	jmp    0x14001917f
   140019141:	mov    rax,QWORD PTR [rax]
   140019144:	mov    r8d,0x2
   14001914a:	mov    edx,DWORD PTR [rdi-0x10]
   14001914d:	call   QWORD PTR [rax]
   14001914f:	mov    rbx,rax
   140019152:	test   rax,rax
   140019155:	jne    0x14001915d
   140019157:	call   0x1400021a0
   14001915c:	int3   
   14001915d:	mov    eax,DWORD PTR [rdi-0x10]
   140019160:	mov    DWORD PTR [rbx+0x8],eax
   140019163:	mov    eax,DWORD PTR [rdi-0x10]
   140019166:	add    eax,0x1
   140019169:	movsxd rdx,eax
   14001916c:	lea    r9,[rdx+rdx*1]
   140019170:	mov    r8,rdi
   140019173:	add    rdx,rdx
   140019176:	lea    rcx,[rbx+0x18]
   14001917a:	call   0x1400466d0
   14001917f:	lea    rax,[rbx+0x18]
   140019183:	mov    QWORD PTR [rsp+0x48],rax
   140019188:	lea    rcx,[rsp+0x48]
   14001918d:	call   0x140002f40
   140019192:	test   eax,eax
   140019194:	je     0x14001920f
   140019196:	mov    r8,QWORD PTR [rsp+0x30]
   14001919b:	mov    edx,0x104
   1400191a0:	lea    rcx,[rsp+0x270]
   1400191a8:	call   0x140047080
   1400191ad:	lea    rdx,[rsp+0x270]
   1400191b5:	mov    rcx,r13
   1400191b8:	call   0x140013a80
   1400191bd:	mov    edx,DWORD PTR [rsp+0x478]
   1400191c4:	mov    rcx,r13
   1400191c7:	call   0x140007ec0
   1400191cc:	mov    edx,DWORD PTR [rsp+0x478]
   1400191d3:	test   dl,0x1
   1400191d6:	je     0x14001920f
   1400191d8:	test   dl,0x2
   1400191db:	jne    0x14001920f
   1400191dd:	lea    rcx,[rsp+0x60]
   1400191e2:	lea    rdx,[rsp+0x270]
   1400191ea:	mov    r8d,0x20c
   1400191f0:	call   0x1400478c0
   1400191f5:	lea    rdx,[rsp+0x60]
   1400191fa:	mov    rcx,r13
   1400191fd:	call   0x1400048c0
   140019202:	jmp    0x14001920f
   140019204:	mov    ecx,0x80070057
   140019209:	call   0x140001430
   14001920e:	int3   
   14001920f:	mov    rcx,r13
   140019212:	call   0x140014430
   140019217:	mov    edi,eax
   140019219:	mov    rdx,QWORD PTR [rsp+0x30]
   14001921e:	add    rdx,0xffffffffffffffe8
   140019222:	mov    ecx,esi
   140019224:	lock xadd DWORD PTR [rdx+0x10],ecx
   140019229:	add    ecx,0xffffffff
   14001922c:	test   ecx,ecx
   14001922e:	jg     0x14001923a
   140019230:	mov    rcx,QWORD PTR [rdx]
   140019233:	mov    rax,QWORD PTR [rcx]
   140019236:	call   QWORD PTR [rax+0x8]
   140019239:	nop
   14001923a:	mov    rdx,QWORD PTR [rsp+0x20]
   14001923f:	add    rdx,0xffffffffffffffe8
   140019243:	mov    eax,esi
   140019245:	lock xadd DWORD PTR [rdx+0x10],eax
   14001924a:	add    eax,0xffffffff
   14001924d:	test   eax,eax
   14001924f:	jg     0x14001925b
   140019251:	mov    rcx,QWORD PTR [rdx]
   140019254:	mov    rax,QWORD PTR [rcx]
   140019257:	call   QWORD PTR [rax+0x8]
   14001925a:	nop
   14001925b:	mov    rdx,QWORD PTR [rsp+0x28]
   140019260:	add    rdx,0xffffffffffffffe8
   140019264:	lock xadd DWORD PTR [rdx+0x10],esi
   140019269:	add    esi,0xffffffff
   14001926c:	test   esi,esi
   14001926e:	jg     0x140019279
   140019270:	mov    rcx,QWORD PTR [rdx]
   140019273:	mov    rax,QWORD PTR [rcx]
   140019276:	call   QWORD PTR [rax+0x8]
   140019279:	mov    eax,edi
   14001927b:	mov    rcx,QWORD PTR [rsp+0x890]
   140019283:	xor    rcx,rsp
   140019286:	call   0x140046470
   14001928b:	lea    r11,[rsp+0x8a0]
   140019293:	mov    rbx,QWORD PTR [r11+0x28]
   140019297:	mov    rbp,QWORD PTR [r11+0x30]
   14001929b:	mov    rsi,QWORD PTR [r11+0x38]
   14001929f:	mov    rsp,r11
   1400192a2:	pop    r13
   1400192a4:	pop    r12
   1400192a6:	pop    rdi
   1400192a7:	ret    
   1400192a8:	int3   
   1400192a9:	int3   
   1400192aa:	int3   
   1400192ab:	int3   
   1400192ac:	int3   
   1400192ad:	int3   
   1400192ae:	int3   
   1400192af:	int3   
   1400192b0:	rex push rbp
   1400192b2:	sub    rsp,0x20
   1400192b6:	mov    rbp,rdx
   1400192b9:	lea    rcx,[rbp+0x28]
   1400192bd:	call   0x140001090
   1400192c2:	add    rsp,0x20
   1400192c6:	pop    rbp
   1400192c7:	ret    
   1400192c8:	int3   
   1400192c9:	int3   
   1400192ca:	int3   
   1400192cb:	int3   
   1400192cc:	int3   
   1400192cd:	int3   
   1400192ce:	int3   
   1400192cf:	int3   
   1400192d0:	rex push rbp
   1400192d2:	sub    rsp,0x20
   1400192d6:	mov    rbp,rdx
   1400192d9:	lea    rcx,[rbp+0x28]
   1400192dd:	call   0x1400010c0
   1400192e2:	add    rsp,0x20
   1400192e6:	pop    rbp
   1400192e7:	ret    
   1400192e8:	int3   
   1400192e9:	int3   
   1400192ea:	int3   
   1400192eb:	int3   
   1400192ec:	int3   
   1400192ed:	int3   
   1400192ee:	int3   
   1400192ef:	int3   
   1400192f0:	rex push rbp
   1400192f2:	sub    rsp,0x20
   1400192f6:	mov    rbp,rdx
   1400192f9:	lea    rcx,[rbp+0x20]
   1400192fd:	call   0x140001090
   140019302:	add    rsp,0x20
   140019306:	pop    rbp
   140019307:	ret    
   140019308:	int3   
   140019309:	int3   
   14001930a:	int3   
   14001930b:	int3   
   14001930c:	int3   
   14001930d:	int3   
   14001930e:	int3   
   14001930f:	int3   
   140019310:	rex push rbp
   140019312:	sub    rsp,0x20
   140019316:	mov    rbp,rdx
   140019319:	lea    rcx,[rbp+0x20]
   14001931d:	call   0x1400010c0
   140019322:	add    rsp,0x20
   140019326:	pop    rbp
   140019327:	ret    
   140019328:	int3   
   140019329:	int3   
   14001932a:	int3   
   14001932b:	int3   
   14001932c:	int3   
   14001932d:	int3   
   14001932e:	int3   
   14001932f:	int3   
   140019330:	rex push rbp
   140019332:	sub    rsp,0x20
   140019336:	mov    rbp,rdx
   140019339:	lea    rcx,[rbp+0x30]
   14001933d:	call   0x140001090
   140019342:	add    rsp,0x20
   140019346:	pop    rbp
   140019347:	ret    
   140019348:	int3   
   140019349:	int3   
   14001934a:	int3   
   14001934b:	int3   
   14001934c:	int3   
   14001934d:	int3   
   14001934e:	int3   
   14001934f:	int3   
   140019350:	rex push rbp
   140019352:	sub    rsp,0x20
   140019356:	mov    rbp,rdx
   140019359:	lea    rcx,[rbp+0x30]
   14001935d:	call   0x1400010c0
   140019362:	add    rsp,0x20
   140019366:	pop    rbp
   140019367:	ret    
   140019368:	int3   
   140019369:	int3   
   14001936a:	int3   
   14001936b:	int3   
   14001936c:	int3   
   14001936d:	int3   
   14001936e:	int3   
   14001936f:	int3   
   140019370:	rex push rbp
   140019372:	sub    rsp,0x20
   140019376:	mov    rbp,rdx
   140019379:	lea    rcx,[rbp+0x38]
   14001937d:	call   0x1400010c0
   140019382:	add    rsp,0x20
   140019386:	pop    rbp
   140019387:	ret    
   140019388:	int3   
   140019389:	int3   
   14001938a:	int3   
   14001938b:	int3   
   14001938c:	int3   
   14001938d:	int3   
   14001938e:	int3   
   14001938f:	int3   
   140019390:	mov    QWORD PTR [rsp+0x10],rbx
   140019395:	push   rdi
   140019396:	sub    rsp,0x20
   14001939a:	mov    edx,DWORD PTR [rip+0x6f458]        # 0x1400887f8
   1400193a0:	mov    rbx,rcx
   1400193a3:	xor    edi,edi
   1400193a5:	cmp    edx,0x5a
   1400193a8:	mov    eax,edi
   1400193aa:	mov    ecx,0xa
   1400193af:	cmovl  eax,ecx
   1400193b2:	xor    r9d,r9d
   1400193b5:	add    edx,eax
   1400193b7:	mov    DWORD PTR [rip+0x6f43b],edx        # 0x1400887f8
   1400193bd:	mov    rcx,QWORD PTR [rbx+0xeb180]
   1400193c4:	movsxd r8,edx
   1400193c7:	mov    edx,0x402
   1400193cc:	call   QWORD PTR [rip+0x4b79e]        # 0x140064b70
   1400193d2:	xor    edx,edx
   1400193d4:	mov    rcx,rbx
   1400193d7:	call   0x1400018d0
   1400193dc:	cmp    DWORD PTR [rbx+0xeb120],edi
   1400193e2:	je     0x1400193f0
   1400193e4:	mov    DWORD PTR [rip+0x6f402],0x1        # 0x1400887f0
   1400193ee:	jmp    0x140019406
   1400193f0:	mov    rcx,rbx
   1400193f3:	call   0x140002a00
   1400193f8:	test   eax,eax
   1400193fa:	mov    DWORD PTR [rip+0x6f3f0],eax        # 0x1400887f0
   140019400:	je     0x1400194cd
   140019406:	cmp    DWORD PTR [rbx+0xeb104],edi
   14001940c:	jne    0x140019416
   14001940e:	cmp    DWORD PTR [rbx+0xeb10c],edi
   140019414:	je     0x140019426
   140019416:	mov    edx,0x1
   14001941b:	mov    r8d,edx
   14001941e:	lea    ecx,[rdx+0x5]
   140019421:	call   0x140011ac0
   140019426:	mov    eax,DWORD PTR [rbx+0xeb104]
   14001942c:	mov    QWORD PTR [rsp+0x30],rsi
   140019431:	test   eax,eax
   140019433:	je     0x140019453
   140019435:	cmp    DWORD PTR [rbx+0xeb10c],edi
   14001943b:	je     0x140019453
   14001943d:	mov    rcx,rbx
   140019440:	call   0x140018d30
   140019445:	mov    rcx,rbx
   140019448:	mov    esi,eax
   14001944a:	call   0x140012300
   14001944f:	mov    edi,eax
   140019451:	jmp    0x140019469
   140019453:	test   eax,eax
   140019455:	je     0x140019486
   140019457:	cmp    DWORD PTR [rbx+0xeb10c],edi
   14001945d:	jne    0x140019486
   14001945f:	mov    rcx,rbx
   140019462:	call   0x140018d30
   140019467:	mov    esi,eax
   140019469:	test   esi,esi
   14001946b:	je     0x14001949c
   14001946d:	cmp    esi,0x1
   140019470:	jne    0x140019476
   140019472:	test   edi,edi
   140019474:	je     0x1400194a5
   140019476:	mov    rsi,QWORD PTR [rsp+0x30]
   14001947b:	mov    rbx,QWORD PTR [rsp+0x38]
   140019480:	add    rsp,0x20
   140019484:	pop    rdi
   140019485:	ret    
   140019486:	test   eax,eax
   140019488:	jne    0x1400194c4
   14001948a:	cmp    DWORD PTR [rbx+0xeb10c],edi
   140019490:	je     0x1400194c4
   140019492:	mov    rcx,rbx
   140019495:	call   0x140012300
   14001949a:	mov    edi,eax
   14001949c:	test   edi,edi
   14001949e:	je     0x1400194c4
   1400194a0:	cmp    edi,0x1
   1400194a3:	jne    0x140019476
   1400194a5:	cmp    DWORD PTR [rbx+0x4bc],0x0
   1400194ac:	jne    0x1400194b9
   1400194ae:	mov    ecx,0xfffffffc
   1400194b3:	call   0x140048510
   1400194b8:	int3   
   1400194b9:	mov    ecx,0xfffffffb
   1400194be:	call   0x140048510
   1400194c3:	int3   
   1400194c4:	or     ecx,0xffffffff
   1400194c7:	call   0x140048510
   1400194cc:	int3   
   1400194cd:	lea    r8,[rip+0x4c614]        # 0x140065ae8
   1400194d4:	lea    rdx,[rip+0x4dff5]        # 0x1400674d0
   1400194db:	mov    r9d,0x30
   1400194e1:	mov    rcx,rbx
   1400194e4:	call   0x140001690
   1400194e9:	mov    ecx,0xfffffffe
   1400194ee:	call   0x140048510
   1400194f3:	int3   
   1400194f4:	int3   
   1400194f5:	int3   
   1400194f6:	int3   
   1400194f7:	int3   
   1400194f8:	int3   
   1400194f9:	int3   
   1400194fa:	int3   
   1400194fb:	int3   
   1400194fc:	int3   
   1400194fd:	int3   
   1400194fe:	int3   
   1400194ff:	int3   
   140019500:	rex push rbx
   140019502:	sub    rsp,0x20
   140019506:	cmp    DWORD PTR [rcx+0xeb104],0x0
   14001950d:	mov    rbx,rcx
   140019510:	jne    0x14001951b
   140019512:	cmp    DWORD PTR [rcx+0xeb10c],0x0
   140019519:	je     0x140019520
   14001951b:	call   0x140019390
   140019520:	cmp    DWORD PTR [rbx+0xeb124],0x0
   140019527:	je     0x140019531
   140019529:	mov    rcx,rbx
   14001952c:	call   0x1400054d0
   140019531:	cmp    DWORD PTR [rbx+0xeb128],0x0
   140019538:	je     0x140019542
   14001953a:	mov    rcx,rbx
   14001953d:	call   0x140018770
   140019542:	mov    eax,DWORD PTR [rbx+0xeb108]
   140019548:	test   eax,eax
   14001954a:	jne    0x140019558
   14001954c:	cmp    DWORD PTR [rbx+0xeb110],eax
   140019552:	je     0x140019591
   140019554:	test   eax,eax
   140019556:	je     0x140019562
   140019558:	mov    DWORD PTR [rbx+0x2a8],0x1
   140019562:	cmp    DWORD PTR [rbx+0xeb110],0x0
   140019569:	je     0x140019575
   14001956b:	mov    DWORD PTR [rbx+0x2ac],0x1
   140019575:	mov    rcx,rbx
   140019578:	call   0x140016b40
   14001957d:	test   eax,eax
   14001957f:	je     0x140019591
   140019581:	mov    edx,0x1
   140019586:	mov    r8d,edx
   140019589:	lea    ecx,[rdx+0x5]
   14001958c:	call   0x140011ac0
   140019591:	mov    rcx,QWORD PTR [rbx+0xeb180]
   140019598:	xor    r9d,r9d
   14001959b:	mov    edx,0x402
   1400195a0:	lea    r8d,[r9+0x64]
   1400195a4:	call   QWORD PTR [rip+0x4b5c6]        # 0x140064b70
   1400195aa:	xor    edx,edx
   1400195ac:	mov    rcx,rbx
   1400195af:	call   0x1400018d0
   1400195b4:	mov    rcx,rbx
   1400195b7:	add    rsp,0x20
   1400195bb:	pop    rbx
   1400195bc:	jmp    0x14001e0c8
   1400195c1:	int3   
   1400195c2:	int3   
   1400195c3:	int3   
   1400195c4:	int3   
   1400195c5:	int3   
   1400195c6:	int3   
   1400195c7:	int3   
   1400195c8:	int3   
   1400195c9:	int3   
   1400195ca:	int3   
   1400195cb:	int3   
   1400195cc:	int3   
   1400195cd:	int3   
   1400195ce:	int3   
   1400195cf:	int3   
   1400195d0:	rex push rbx
   1400195d2:	sub    rsp,0x20
   1400195d6:	mov    rbx,rcx
   1400195d9:	call   0x140019390
   1400195de:	mov    rcx,QWORD PTR [rbx+0xeb180]
   1400195e5:	xor    r9d,r9d
   1400195e8:	mov    edx,0x402
   1400195ed:	lea    r8d,[r9+0x64]
   1400195f1:	call   QWORD PTR [rip+0x4b579]        # 0x140064b70
   1400195f7:	xor    edx,edx
   1400195f9:	mov    rcx,rbx
   1400195fc:	call   0x1400018d0
   140019601:	mov    rcx,rbx
   140019604:	call   0x14001e0c8
   140019609:	xor    eax,eax
   14001960b:	add    rsp,0x20
   14001960f:	pop    rbx
   140019610:	ret    
   140019611:	int3   
   140019612:	int3   
   140019613:	int3   
   140019614:	int3   
   140019615:	int3   
   140019616:	int3   
   140019617:	int3   
   140019618:	int3   
   140019619:	int3   
   14001961a:	int3   
   14001961b:	int3   
   14001961c:	int3   
   14001961d:	int3   
   14001961e:	int3   
   14001961f:	int3   
   140019620:	rex push rbx
   140019622:	sub    rsp,0x20
   140019626:	mov    rbx,rcx
   140019629:	call   0x140019390
   14001962e:	mov    rcx,QWORD PTR [rbx+0xeb180]
   140019635:	xor    r9d,r9d
   140019638:	mov    edx,0x402
   14001963d:	lea    r8d,[r9+0x64]
   140019641:	call   QWORD PTR [rip+0x4b529]        # 0x140064b70
   140019647:	xor    edx,edx
   140019649:	mov    rcx,rbx
   14001964c:	call   0x1400018d0
   140019651:	mov    rcx,rbx
   140019654:	call   0x1400016b0
   140019659:	xor    eax,eax
   14001965b:	add    rsp,0x20
   14001965f:	pop    rbx
   140019660:	ret    
   140019661:	int3   
   140019662:	int3   
   140019663:	int3   
   140019664:	int3   
   140019665:	int3   
   140019666:	int3   
   140019667:	int3   
   140019668:	int3   
   140019669:	int3   
   14001966a:	int3   
   14001966b:	int3   
   14001966c:	int3   
   14001966d:	int3   
   14001966e:	int3   
   14001966f:	int3   
   140019670:	lea    rax,[rip+0x4df21]        # 0x140067598
   140019677:	ret    
   140019678:	int3   
   140019679:	int3   
   14001967a:	int3   
   14001967b:	int3   
   14001967c:	int3   
   14001967d:	int3   
   14001967e:	int3   
   14001967f:	int3   
   140019680:	mov    rax,rsp
   140019683:	push   rdi
   140019684:	push   r12
   140019686:	push   r13
   140019688:	push   r14
   14001968a:	push   r15
   14001968c:	sub    rsp,0x770
   140019693:	mov    QWORD PTR [rsp+0x100],0xfffffffffffffffe
   14001969f:	mov    QWORD PTR [rax+0x10],rbx
   1400196a3:	mov    QWORD PTR [rax+0x18],rbp
   1400196a7:	mov    QWORD PTR [rax+0x20],rsi
   1400196ab:	mov    rax,QWORD PTR [rip+0x6d6be]        # 0x140086d70
   1400196b2:	xor    rax,rsp
   1400196b5:	mov    QWORD PTR [rsp+0x760],rax
   1400196bd:	mov    rsi,rcx
   1400196c0:	call   0x14001e520
   1400196c5:	mov    r9,QWORD PTR [rsi+0xeb1e8]
   1400196cc:	mov    r15d,0x1
   1400196d2:	mov    r8,r15
   1400196d5:	lea    edx,[r15+0x7f]
   1400196d9:	mov    rcx,QWORD PTR [rsi+0x40]
   1400196dd:	call   QWORD PTR [rip+0x4b48d]        # 0x140064b70
   1400196e3:	mov    r9,QWORD PTR [rsi+0xeb1e8]
   1400196ea:	xor    r8d,r8d
   1400196ed:	lea    edx,[r15+0x7f]
   1400196f1:	mov    rcx,QWORD PTR [rsi+0x40]
   1400196f5:	call   QWORD PTR [rip+0x4b475]        # 0x140064b70
   1400196fb:	call   0x14002b874
   140019700:	mov    rcx,rax
   140019703:	xor    r14d,r14d
   140019706:	mov    eax,r14d
   140019709:	test   rcx,rcx
   14001970c:	setne  al
   14001970f:	test   eax,eax
   140019711:	jne    0x14001971e
   140019713:	mov    ecx,0x80004005
   140019718:	call   0x140001430
   14001971d:	int3   
   14001971e:	mov    rax,QWORD PTR [rcx]
   140019721:	call   QWORD PTR [rax+0x18]
   140019724:	add    rax,0x18
   140019728:	mov    QWORD PTR [rsp+0x30],rax
   14001972d:	call   0x14002b874
   140019732:	mov    rcx,rax
   140019735:	mov    eax,r14d
   140019738:	test   rcx,rcx
   14001973b:	setne  al
   14001973e:	test   eax,eax
   140019740:	jne    0x14001974d
   140019742:	mov    ecx,0x80004005
   140019747:	call   0x140001430
   14001974c:	int3   
   14001974d:	mov    rax,QWORD PTR [rcx]
   140019750:	call   QWORD PTR [rax+0x18]
   140019753:	add    rax,0x18
   140019757:	mov    QWORD PTR [rsp+0x38],rax
   14001975c:	call   0x14002b874
   140019761:	mov    rcx,rax
   140019764:	mov    eax,r14d
   140019767:	test   rcx,rcx
   14001976a:	setne  al
   14001976d:	test   eax,eax
   14001976f:	jne    0x14001977c
   140019771:	mov    ecx,0x80004005
   140019776:	call   0x140001430
   14001977b:	int3   
   14001977c:	mov    rax,QWORD PTR [rcx]
   14001977f:	call   QWORD PTR [rax+0x18]
   140019782:	add    rax,0x18
   140019786:	mov    QWORD PTR [rsp+0x50],rax
   14001978b:	call   0x14002b874
   140019790:	mov    rcx,rax
   140019793:	mov    eax,r14d
   140019796:	test   rcx,rcx
   140019799:	setne  al
   14001979c:	test   eax,eax
   14001979e:	jne    0x1400197ab
   1400197a0:	mov    ecx,0x80004005
   1400197a5:	call   0x140001430
   1400197aa:	int3   
   1400197ab:	mov    rax,QWORD PTR [rcx]
   1400197ae:	call   QWORD PTR [rax+0x18]
   1400197b1:	add    rax,0x18
   1400197b5:	mov    QWORD PTR [rsp+0x48],rax
   1400197ba:	call   0x14002b874
   1400197bf:	mov    rcx,rax
   1400197c2:	mov    eax,r14d
   1400197c5:	test   rcx,rcx
   1400197c8:	setne  al
   1400197cb:	test   eax,eax
   1400197cd:	jne    0x1400197da
   1400197cf:	mov    ecx,0x80004005
   1400197d4:	call   0x140001430
   1400197d9:	int3   
   1400197da:	mov    rax,QWORD PTR [rcx]
   1400197dd:	call   QWORD PTR [rax+0x18]
   1400197e0:	add    rax,0x18
   1400197e4:	mov    QWORD PTR [rsp+0x68],rax
   1400197e9:	mov    ebx,r14d
   1400197ec:	mov    DWORD PTR [rsi+0xeb100],r14d
   1400197f3:	mov    rcx,rsi
   1400197f6:	call   0x14000a0c0
   1400197fb:	mov    DWORD PTR [rsi+0x2a8],r14d
   140019802:	mov    DWORD PTR [rsi+0x2ac],r14d
   140019809:	mov    DWORD PTR [rsi+0x2b0],r14d
   140019810:	mov    DWORD PTR [rsi+0x4bc],r14d
   140019817:	mov    r9d,0x640000
   14001981d:	xor    r8d,r8d
   140019820:	mov    edx,0x401
   140019825:	mov    rcx,QWORD PTR [rsi+0xeb180]
   14001982c:	call   QWORD PTR [rip+0x4b33e]        # 0x140064b70
   140019832:	xor    edx,edx
   140019834:	mov    rcx,rsi
   140019837:	call   0x1400018d0
   14001983c:	lea    rcx,[rip+0x6efbd]        # 0x140088800
   140019843:	call   0x140001f40
   140019848:	cmp    DWORD PTR [rip+0x6efca],ebx        # 0x140088818
   14001984e:	je     0x140019889
   140019850:	lea    rdx,[rip+0x4e111]        # 0x140067968
   140019857:	mov    cx,0x84
   14001985b:	call   0x140001e10
   140019860:	test   eax,eax
   140019862:	jne    0x140019889
   140019864:	lea    r9d,[rax+0x10]
   140019868:	lea    r8,[rip+0x4ba71]        # 0x1400652e0
   14001986f:	lea    rdx,[rip+0x4e0b2]        # 0x140067928
   140019876:	mov    rcx,rsi
   140019879:	call   0x140001690
   14001987e:	mov    ecx,0xfffffffd
   140019883:	call   0x140048510
   140019888:	int3   
   140019889:	lea    rdx,[rsi+0x2b4]
   140019890:	mov    rcx,rsi
   140019893:	call   0x14000ced0
   140019898:	test   eax,eax
   14001989a:	jne    0x1400198b4
   14001989c:	lea    r8,[rip+0x4e05d]        # 0x140067900
   1400198a3:	mov    edx,0x104
   1400198a8:	lea    rcx,[rsi+0x2b4]
   1400198af:	call   0x140047080
   1400198b4:	call   0x14002b874
   1400198b9:	mov    rcx,rax
   1400198bc:	mov    eax,r14d
   1400198bf:	test   rcx,rcx
   1400198c2:	setne  al
   1400198c5:	test   eax,eax
   1400198c7:	jne    0x1400198d4
   1400198c9:	mov    ecx,0x80004005
   1400198ce:	call   0x140001430
   1400198d3:	int3   
   1400198d4:	mov    rax,QWORD PTR [rcx]
   1400198d7:	call   QWORD PTR [rax+0x18]
   1400198da:	lea    rdi,[rax+0x18]
   1400198de:	mov    QWORD PTR [rsp+0x40],rdi
   1400198e3:	lea    rdx,[rip+0x4e00e]        # 0x1400678f8
   1400198ea:	lea    rcx,[rip+0x6f287]        # 0x140088b78
   1400198f1:	call   0x140003930
   1400198f6:	lea    rdx,[rip+0x4dfe3]        # 0x1400678e0
   1400198fd:	lea    rcx,[rsi+0x290]
   140019904:	call   0x140003930
   140019909:	mov    DWORD PTR [rip+0x6eee0],r14d        # 0x1400887f0
   140019910:	or     rbp,0xffffffffffffffff
   140019914:	cmp    DWORD PTR [rsi+0xeb114],0x0
   14001991b:	je     0x140019935
   14001991d:	mov    DWORD PTR [rip+0x6eed0],r15d        # 0x1400887f4
   140019924:	mov    rax,QWORD PTR [rsi]
   140019927:	mov    rcx,rsi
   14001992a:	call   QWORD PTR [rax+0x2a0]
   140019930:	jmp    0x14001a835
   140019935:	cmp    DWORD PTR [rsi+0xeb104],0x0
   14001993c:	jne    0x14001a808
   140019942:	cmp    DWORD PTR [rsi+0xeb10c],0x0
   140019949:	jne    0x14001a808
   14001994f:	mov    eax,DWORD PTR [rsi+0xeb108]
   140019955:	test   eax,eax
   140019957:	jne    0x140019969
   140019959:	cmp    DWORD PTR [rsi+0xeb110],eax
   14001995f:	jne    0x140019969
   140019961:	xor    ecx,ecx
   140019963:	call   0x140048510
   140019968:	int3   
   140019969:	test   eax,eax
   14001996b:	je     0x140019974
   14001996d:	mov    DWORD PTR [rsi+0x2a8],r15d
   140019974:	cmp    DWORD PTR [rsi+0xeb110],0x0
   14001997b:	je     0x140019984
   14001997d:	mov    DWORD PTR [rsi+0x2ac],r15d
   140019984:	mov    DWORD PTR [rsi+0x298],r14d
   14001998b:	call   0x14002b874
   140019990:	mov    rcx,rax
   140019993:	mov    eax,r14d
   140019996:	test   rcx,rcx
   140019999:	setne  al
   14001999c:	test   eax,eax
   14001999e:	jne    0x1400199ab
   1400199a0:	mov    ecx,0x80004005
   1400199a5:	call   0x140001430
   1400199aa:	int3   
   1400199ab:	mov    rax,QWORD PTR [rcx]
   1400199ae:	call   QWORD PTR [rax+0x18]
   1400199b1:	add    rax,0x18
   1400199b5:	mov    QWORD PTR [rsp+0x78],rax
   1400199ba:	lea    rdx,[rip+0x4c347]        # 0x140065d08
   1400199c1:	test   rdx,0xffffffffffff0000
   1400199c8:	jne    0x1400199eb
   1400199ca:	movzx  edi,dx
   1400199cd:	mov    ecx,edi
   1400199cf:	call   0x14002b860
   1400199d4:	test   rax,rax
   1400199d7:	je     0x1400199f6
   1400199d9:	mov    r8d,edi
   1400199dc:	mov    rdx,rax
   1400199df:	lea    rcx,[rsp+0x78]
   1400199e4:	call   0x140003650
   1400199e9:	jmp    0x1400199f6
   1400199eb:	lea    rcx,[rsp+0x78]
   1400199f0:	call   0x140003930
   1400199f5:	nop
   1400199f6:	call   0x14002b874
   1400199fb:	mov    rcx,rax
   1400199fe:	mov    eax,r14d
   140019a01:	test   rcx,rcx
   140019a04:	setne  al
   140019a07:	test   eax,eax
   140019a09:	jne    0x140019a16
   140019a0b:	mov    ecx,0x80004005
   140019a10:	call   0x140001430
   140019a15:	int3   
   140019a16:	mov    rax,QWORD PTR [rcx]
   140019a19:	call   QWORD PTR [rax+0x18]
   140019a1c:	add    rax,0x18
   140019a20:	mov    QWORD PTR [rsp+0x80],rax
   140019a28:	lea    r13,[rip+0x4c369]        # 0x140065d98
   140019a2f:	test   r13,0xffffffffffff0000
   140019a36:	jne    0x140019a5d
   140019a38:	movzx  edi,r13w
   140019a3c:	mov    ecx,edi
   140019a3e:	call   0x14002b860
   140019a43:	test   rax,rax
   140019a46:	je     0x140019a6e
   140019a48:	mov    r8d,edi
   140019a4b:	mov    rdx,rax
   140019a4e:	lea    rcx,[rsp+0x80]
   140019a56:	call   0x140003650
   140019a5b:	jmp    0x140019a6e
   140019a5d:	mov    rdx,r13
   140019a60:	lea    rcx,[rsp+0x80]
   140019a68:	call   0x140003930
   140019a6d:	nop
   140019a6e:	lea    r8,[rsp+0x80]
   140019a76:	lea    rdx,[rsi+0x290]
   140019a7d:	lea    rcx,[rsp+0xc0]
   140019a85:	call   0x140003e20
   140019a8a:	nop
   140019a8b:	lea    r8,[rsp+0x78]
   140019a90:	mov    rdx,rax
   140019a93:	lea    rcx,[rsp+0xe0]
   140019a9b:	call   0x140003e20
   140019aa0:	lea    rcx,[rsp+0x60]
   140019aa5:	mov    QWORD PTR [rsp+0x20],rcx
   140019aaa:	mov    r9d,0xf003f
   140019ab0:	xor    r8d,r8d
   140019ab3:	mov    rdx,QWORD PTR [rax]
   140019ab6:	mov    ecx,0x80000002
   140019abb:	call   QWORD PTR [rip+0x4a597]        # 0x140064058
   140019ac1:	test   eax,eax
   140019ac3:	sete   dil
   140019ac7:	mov    rdx,QWORD PTR [rsp+0xe0]
   140019acf:	add    rdx,0xffffffffffffffe8
   140019ad3:	mov    eax,ebp
   140019ad5:	lock xadd DWORD PTR [rdx+0x10],eax
   140019ada:	add    eax,0xffffffff
   140019add:	test   eax,eax
   140019adf:	jg     0x140019aeb
   140019ae1:	mov    rcx,QWORD PTR [rdx]
   140019ae4:	mov    rax,QWORD PTR [rcx]
   140019ae7:	call   QWORD PTR [rax+0x8]
   140019aea:	nop
   140019aeb:	mov    rdx,QWORD PTR [rsp+0xc0]
   140019af3:	add    rdx,0xffffffffffffffe8
   140019af7:	mov    eax,ebp
   140019af9:	lock xadd DWORD PTR [rdx+0x10],eax
   140019afe:	add    eax,0xffffffff
   140019b01:	test   eax,eax
   140019b03:	jg     0x140019b0f
   140019b05:	mov    rcx,QWORD PTR [rdx]
   140019b08:	mov    rax,QWORD PTR [rcx]
   140019b0b:	call   QWORD PTR [rax+0x8]
   140019b0e:	nop
   140019b0f:	mov    rdx,QWORD PTR [rsp+0x80]
   140019b17:	add    rdx,0xffffffffffffffe8
   140019b1b:	mov    eax,ebp
   140019b1d:	lock xadd DWORD PTR [rdx+0x10],eax
   140019b22:	add    eax,0xffffffff
   140019b25:	test   eax,eax
   140019b27:	jg     0x140019b33
   140019b29:	mov    rcx,QWORD PTR [rdx]
   140019b2c:	mov    rax,QWORD PTR [rcx]
   140019b2f:	call   QWORD PTR [rax+0x8]
   140019b32:	nop
   140019b33:	mov    rdx,QWORD PTR [rsp+0x78]
   140019b38:	add    rdx,0xffffffffffffffe8
   140019b3c:	mov    eax,ebp
   140019b3e:	lock xadd DWORD PTR [rdx+0x10],eax
   140019b43:	add    eax,0xffffffff
   140019b46:	test   eax,eax
   140019b48:	jg     0x140019b53
   140019b4a:	mov    rcx,QWORD PTR [rdx]
   140019b4d:	mov    rax,QWORD PTR [rcx]
   140019b50:	call   QWORD PTR [rax+0x8]
   140019b53:	test   dil,dil
   140019b56:	je     0x14001a764
   140019b5c:	mov    DWORD PTR [rsp+0x70],r15d
   140019b61:	mov    DWORD PTR [rsp+0x58],0x258
   140019b69:	lea    rax,[rsp+0x58]
   140019b6e:	mov    QWORD PTR [rsp+0x28],rax
   140019b73:	lea    rax,[rsp+0x500]
   140019b7b:	mov    QWORD PTR [rsp+0x20],rax
   140019b80:	lea    r9,[rsp+0x70]
   140019b85:	xor    r8d,r8d
   140019b88:	lea    rdx,[rip+0x4dd31]        # 0x1400678c0
   140019b8f:	mov    rcx,QWORD PTR [rsp+0x60]
   140019b94:	call   QWORD PTR [rip+0x4a4b6]        # 0x140064050
   140019b9a:	test   eax,eax
   140019b9c:	jne    0x14001a6ec
   140019ba2:	cmp    DWORD PTR [rsi+0xeb11c],eax
   140019ba8:	je     0x14001a6dc
   140019bae:	cmp    DWORD PTR [rsi+0xeb12c],eax
   140019bb4:	je     0x140019cea
   140019bba:	lea    rdx,[rip+0x4c11f]        # 0x140065ce0
   140019bc1:	lea    rcx,[rsp+0xa0]
   140019bc9:	call   0x140004d00
   140019bce:	nop
   140019bcf:	mov    rdx,r13
   140019bd2:	lea    rcx,[rsp+0x98]
   140019bda:	call   0x140004d00
   140019bdf:	nop
   140019be0:	lea    r8,[rsp+0x98]
   140019be8:	lea    rdx,[rsi+0x290]
   140019bef:	lea    rcx,[rsp+0xd0]
   140019bf7:	call   0x140003e20
   140019bfc:	nop
   140019bfd:	lea    r8,[rsp+0xa0]
   140019c05:	mov    rdx,rax
   140019c08:	lea    rcx,[rsp+0xf0]
   140019c10:	call   0x140003e20
   140019c15:	lea    rdx,[rsp+0xe8]
   140019c1d:	mov    QWORD PTR [rsp+0x20],rdx
   140019c22:	mov    r9d,0xf003f
   140019c28:	xor    r8d,r8d
   140019c2b:	mov    rdx,QWORD PTR [rax]
   140019c2e:	mov    ecx,0x80000002
   140019c33:	call   QWORD PTR [rip+0x4a41f]        # 0x140064058
   140019c39:	test   eax,eax
   140019c3b:	setne  dil
   140019c3f:	mov    rdx,QWORD PTR [rsp+0xf0]
   140019c47:	add    rdx,0xffffffffffffffe8
   140019c4b:	mov    eax,ebp
   140019c4d:	lock xadd DWORD PTR [rdx+0x10],eax
   140019c52:	add    eax,0xffffffff
   140019c55:	test   eax,eax
   140019c57:	jg     0x140019c63
   140019c59:	mov    rcx,QWORD PTR [rdx]
   140019c5c:	mov    rax,QWORD PTR [rcx]
   140019c5f:	call   QWORD PTR [rax+0x8]
   140019c62:	nop
   140019c63:	mov    rdx,QWORD PTR [rsp+0xd0]
   140019c6b:	add    rdx,0xffffffffffffffe8
   140019c6f:	mov    eax,ebp
   140019c71:	lock xadd DWORD PTR [rdx+0x10],eax
   140019c76:	add    eax,0xffffffff
   140019c79:	test   eax,eax
   140019c7b:	jg     0x140019c87
   140019c7d:	mov    rcx,QWORD PTR [rdx]
   140019c80:	mov    rax,QWORD PTR [rcx]
   140019c83:	call   QWORD PTR [rax+0x8]
   140019c86:	nop
   140019c87:	mov    rdx,QWORD PTR [rsp+0x98]
   140019c8f:	add    rdx,0xffffffffffffffe8
   140019c93:	mov    eax,ebp
   140019c95:	lock xadd DWORD PTR [rdx+0x10],eax
   140019c9a:	add    eax,0xffffffff
   140019c9d:	test   eax,eax
   140019c9f:	jg     0x140019cab
   140019ca1:	mov    rcx,QWORD PTR [rdx]
   140019ca4:	mov    rax,QWORD PTR [rcx]
   140019ca7:	call   QWORD PTR [rax+0x8]
   140019caa:	nop
   140019cab:	mov    rdx,QWORD PTR [rsp+0xa0]
   140019cb3:	add    rdx,0xffffffffffffffe8
   140019cb7:	mov    eax,ebp
   140019cb9:	lock xadd DWORD PTR [rdx+0x10],eax
   140019cbe:	add    eax,0xffffffff
   140019cc1:	test   eax,eax
   140019cc3:	jg     0x140019cce
   140019cc5:	mov    rcx,QWORD PTR [rdx]
   140019cc8:	mov    rax,QWORD PTR [rcx]
   140019ccb:	call   QWORD PTR [rax+0x8]
   140019cce:	test   dil,dil
   140019cd1:	je     0x140019cda
   140019cd3:	mov    DWORD PTR [rsi+0x2ac],r15d
   140019cda:	mov    rcx,QWORD PTR [rsp+0xe8]
   140019ce2:	call   QWORD PTR [rip+0x4a380]        # 0x140064068
   140019ce8:	jmp    0x140019cf1
   140019cea:	mov    DWORD PTR [rsi+0x2ac],r15d
   140019cf1:	mov    rcx,rsi
   140019cf4:	call   0x140007280
   140019cf9:	cmp    eax,0x2004e
   140019cfe:	jae    0x140019d1d
   140019d00:	cmp    DWORD PTR [rsi+0xeb12c],0x0
   140019d07:	je     0x140019d1d
   140019d09:	cmp    DWORD PTR [rsi+0x2ac],0x0
   140019d10:	je     0x140019d1d
   140019d12:	cmp    DWORD PTR [rsi+0x2a8],0x0
   140019d19:	cmove  ebx,r15d
   140019d1d:	mov    DWORD PTR [rsp+0x58],0x258
   140019d25:	lea    rax,[rsp+0x58]
   140019d2a:	mov    QWORD PTR [rsp+0x28],rax
   140019d2f:	lea    rax,[rsp+0x110]
   140019d37:	mov    QWORD PTR [rsp+0x20],rax
   140019d3c:	lea    r9,[rsp+0x70]
   140019d41:	xor    r8d,r8d
   140019d44:	lea    rdx,[rip+0x4db55]        # 0x1400678a0
   140019d4b:	mov    rcx,QWORD PTR [rsp+0x60]
   140019d50:	call   QWORD PTR [rip+0x4a2fa]        # 0x140064050
   140019d56:	test   eax,eax
   140019d58:	jne    0x14001a615
   140019d5e:	test   ebx,ebx
   140019d60:	jne    0x14001a615
   140019d66:	mov    rcx,rsi
   140019d69:	call   0x140006c50
   140019d6e:	xor    eax,eax
   140019d70:	mov    rcx,rbp
   140019d73:	lea    rdi,[rsp+0x110]
   140019d7b:	repnz scas ax,WORD PTR es:[rdi]
   140019d7e:	not    rcx
   140019d81:	sub    rcx,0x1
   140019d85:	mov    rbx,rcx
   140019d88:	test   ecx,ecx
   140019d8a:	jne    0x140019df2
   140019d8c:	mov    rax,QWORD PTR [rsp+0x50]
   140019d91:	lea    rdx,[rax-0x18]
   140019d95:	mov    rdi,QWORD PTR [rdx]
   140019d98:	cmp    DWORD PTR [rdx+0x8],ecx
   140019d9b:	je     0x140019e81
   140019da1:	cmp    DWORD PTR [rdx+0x10],ecx
   140019da4:	jge    0x140019dc4
   140019da6:	cmp    DWORD PTR [rax-0xc],ecx
   140019da9:	jge    0x140019db6
   140019dab:	mov    ecx,0x80070057
   140019db0:	call   0x140001430
   140019db5:	int3   
   140019db6:	mov    DWORD PTR [rax-0x10],r14d
   140019dba:	mov    WORD PTR [rax],0x0
   140019dbf:	jmp    0x140019e81
   140019dc4:	mov    eax,ebp
   140019dc6:	lock xadd DWORD PTR [rdx+0x10],eax
   140019dcb:	add    eax,0xffffffff
   140019dce:	test   eax,eax
   140019dd0:	jg     0x140019ddb
   140019dd2:	mov    rcx,QWORD PTR [rdx]
   140019dd5:	mov    rax,QWORD PTR [rcx]
   140019dd8:	call   QWORD PTR [rax+0x8]
   140019ddb:	mov    rax,QWORD PTR [rdi]
   140019dde:	mov    rcx,rdi
   140019de1:	call   QWORD PTR [rax+0x18]
   140019de4:	add    rax,0x18
   140019de8:	mov    QWORD PTR [rsp+0x50],rax
   140019ded:	jmp    0x140019e81
   140019df2:	mov    rdi,QWORD PTR [rsp+0x50]
   140019df7:	mov    r12d,DWORD PTR [rdi-0x10]
   140019dfb:	lea    r13,[rsp+0x110]
   140019e03:	sub    r13,rdi
   140019e06:	sar    r13,1
   140019e09:	mov    ecx,r15d
   140019e0c:	sub    ecx,DWORD PTR [rdi-0x8]
   140019e0f:	mov    eax,DWORD PTR [rdi-0xc]
   140019e12:	sub    eax,ebx
   140019e14:	or     eax,ecx
   140019e16:	jge    0x140019e29
   140019e18:	mov    edx,ebx
   140019e1a:	lea    rcx,[rsp+0x50]
   140019e1f:	call   0x140002d40
   140019e24:	mov    rdi,QWORD PTR [rsp+0x50]
   140019e29:	cmp    r13,r12
   140019e2c:	ja     0x140019e49
   140019e2e:	movsxd rax,ebx
   140019e31:	lea    r12,[rax+rax*1]
   140019e35:	lea    r8,[rdi+r13*2]
   140019e39:	mov    r9,r12
   140019e3c:	mov    rdx,r12
   140019e3f:	mov    rcx,rdi
   140019e42:	call   0x1400467a0
   140019e47:	jmp    0x140019e66
   140019e49:	movsxd rax,ebx
   140019e4c:	lea    r12,[rax+rax*1]
   140019e50:	mov    r9,r12
   140019e53:	lea    r8,[rsp+0x110]
   140019e5b:	mov    rdx,r12
   140019e5e:	mov    rcx,rdi
   140019e61:	call   0x1400466d0
   140019e66:	test   ebx,ebx
   140019e68:	js     0x14001a60a
   140019e6e:	cmp    ebx,DWORD PTR [rdi-0xc]
   140019e71:	jg     0x14001a60a
   140019e77:	mov    DWORD PTR [rdi-0x10],ebx
   140019e7a:	mov    WORD PTR [r12+rdi*1],0x0
   140019e81:	lea    rcx,[rsp+0x50]
   140019e86:	call   0x140003db0
   140019e8b:	mov    rbx,QWORD PTR [rsp+0x50]
   140019e90:	lea    r15,[rbx-0x10]
   140019e94:	cmp    DWORD PTR [r15],0x0
   140019e98:	jl     0x14001a2b5
   140019e9e:	lea    rdx,[rip+0x4d9e3]        # 0x140067888
   140019ea5:	mov    rcx,rbx
   140019ea8:	call   0x140046660
   140019ead:	test   rax,rax
   140019eb0:	je     0x14001a2b5
   140019eb6:	sub    rax,rbx
   140019eb9:	sar    rax,1
   140019ebc:	cmp    eax,0xffffffff
   140019ebf:	je     0x14001a2b5
   140019ec5:	xor    eax,eax
   140019ec7:	mov    rcx,rbp
   140019eca:	lea    rdi,[rsp+0x110]
   140019ed2:	repnz scas ax,WORD PTR es:[rdi]
   140019ed5:	not    rcx
   140019ed8:	sub    rcx,0x1
   140019edc:	mov    rbx,rcx
   140019edf:	test   ecx,ecx
   140019ee1:	jne    0x140019f47
   140019ee3:	mov    rdi,QWORD PTR [rsp+0x30]
   140019ee8:	lea    rdx,[rdi-0x18]
   140019eec:	mov    rbx,QWORD PTR [rdx]
   140019eef:	cmp    DWORD PTR [rdx+0x8],eax
   140019ef2:	je     0x140019fd8
   140019ef8:	cmp    DWORD PTR [rdx+0x10],eax
   140019efb:	jge    0x140019f19
   140019efd:	cmp    DWORD PTR [rdi-0xc],eax
   140019f00:	jge    0x140019f0d
   140019f02:	mov    ecx,0x80070057
   140019f07:	call   0x140001430
   140019f0c:	int3   
   140019f0d:	mov    DWORD PTR [rdi-0x10],r14d
   140019f11:	mov    WORD PTR [rdi],ax
   140019f14:	jmp    0x140019fd8
   140019f19:	mov    eax,ebp
   140019f1b:	lock xadd DWORD PTR [rdx+0x10],eax
   140019f20:	add    eax,0xffffffff
   140019f23:	test   eax,eax
   140019f25:	jg     0x140019f30
   140019f27:	mov    rcx,QWORD PTR [rdx]
   140019f2a:	mov    rax,QWORD PTR [rcx]
   140019f2d:	call   QWORD PTR [rax+0x8]
   140019f30:	mov    rax,QWORD PTR [rbx]
   140019f33:	mov    rcx,rbx
   140019f36:	call   QWORD PTR [rax+0x18]
   140019f39:	lea    rdi,[rax+0x18]
   140019f3d:	mov    QWORD PTR [rsp+0x30],rdi
   140019f42:	jmp    0x140019fd8
   140019f47:	mov    rdi,QWORD PTR [rsp+0x30]
   140019f4c:	mov    r12d,DWORD PTR [rdi-0x10]
   140019f50:	lea    r13,[rsp+0x110]
   140019f58:	sub    r13,rdi
   140019f5b:	sar    r13,1
   140019f5e:	mov    ecx,0x1
   140019f63:	sub    ecx,DWORD PTR [rdi-0x8]
   140019f66:	mov    eax,DWORD PTR [rdi-0xc]
   140019f69:	sub    eax,ebx
   140019f6b:	or     eax,ecx
   140019f6d:	jge    0x140019f80
   140019f6f:	mov    edx,ebx
   140019f71:	lea    rcx,[rsp+0x30]
   140019f76:	call   0x140002d40
   140019f7b:	mov    rdi,QWORD PTR [rsp+0x30]
   140019f80:	cmp    r13,r12
   140019f83:	ja     0x140019fa0
   140019f85:	movsxd rax,ebx
   140019f88:	lea    r12,[rax+rax*1]
   140019f8c:	lea    r8,[rdi+r13*2]
   140019f90:	mov    r9,r12
   140019f93:	mov    rdx,r12
   140019f96:	mov    rcx,rdi
   140019f99:	call   0x1400467a0
   140019f9e:	jmp    0x140019fbd
   140019fa0:	movsxd rax,ebx
   140019fa3:	lea    r12,[rax+rax*1]
   140019fa7:	mov    r9,r12
   140019faa:	lea    r8,[rsp+0x110]
   140019fb2:	mov    rdx,r12
   140019fb5:	mov    rcx,rdi
   140019fb8:	call   0x1400466d0
   140019fbd:	test   ebx,ebx
   140019fbf:	js     0x14001a2aa
   140019fc5:	cmp    ebx,DWORD PTR [rdi-0xc]
   140019fc8:	jg     0x14001a2aa
   140019fce:	mov    DWORD PTR [rdi-0x10],ebx
   140019fd1:	mov    WORD PTR [r12+rdi*1],0x0
   140019fd8:	mov    r8d,DWORD PTR [rdi-0x10]
   140019fdc:	add    r8d,0xfffffff7
   140019fe0:	lea    rdx,[rsp+0xb0]
   140019fe8:	lea    rcx,[rsp+0x30]
   140019fed:	call   0x140003360
   140019ff2:	nop
   140019ff3:	mov    rdx,rax
   140019ff6:	lea    rcx,[rsp+0x30]
   140019ffb:	call   0x140004dc0
   14001a000:	nop
   14001a001:	mov    rdx,QWORD PTR [rsp+0xb0]
   14001a009:	add    rdx,0xffffffffffffffe8
   14001a00d:	mov    eax,ebp
   14001a00f:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a014:	add    eax,0xffffffff
   14001a017:	test   eax,eax
   14001a019:	jg     0x14001a024
   14001a01b:	mov    rcx,QWORD PTR [rdx]
   14001a01e:	mov    rax,QWORD PTR [rcx]
   14001a021:	call   QWORD PTR [rax+0x8]
   14001a024:	lea    rdx,[rip+0x4d845]        # 0x140067870
   14001a02b:	lea    rcx,[rsp+0x40]
   14001a030:	call   0x140003930
   14001a035:	mov    edx,0x190
   14001a03a:	lea    rcx,[rsp+0x370]
   14001a042:	call   QWORD PTR [rip+0x4a588]        # 0x1400645d0
   14001a048:	test   eax,eax
   14001a04a:	je     0x14001a1f7
   14001a050:	xor    eax,eax
   14001a052:	mov    rcx,rbp
   14001a055:	lea    rdi,[rsp+0x370]
   14001a05d:	repnz scas ax,WORD PTR es:[rdi]
   14001a060:	not    rcx
   14001a063:	sub    rcx,0x1
   14001a067:	mov    rbx,rcx
   14001a06a:	test   ecx,ecx
   14001a06c:	jne    0x14001a0d4
   14001a06e:	mov    rax,QWORD PTR [rsp+0x40]
   14001a073:	lea    rdx,[rax-0x18]
   14001a077:	mov    rdi,QWORD PTR [rdx]
   14001a07a:	cmp    DWORD PTR [rdx+0x8],ecx
   14001a07d:	je     0x14001a165
   14001a083:	cmp    DWORD PTR [rdx+0x10],ecx
   14001a086:	jge    0x14001a0a6
   14001a088:	cmp    DWORD PTR [rax-0xc],ecx
   14001a08b:	jge    0x14001a098
   14001a08d:	mov    ecx,0x80070057
   14001a092:	call   0x140001430
   14001a097:	int3   
   14001a098:	mov    DWORD PTR [rax-0x10],r14d
   14001a09c:	mov    WORD PTR [rax],0x0
   14001a0a1:	jmp    0x14001a165
   14001a0a6:	mov    eax,ebp
   14001a0a8:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a0ad:	add    eax,0xffffffff
   14001a0b0:	test   eax,eax
   14001a0b2:	jg     0x14001a0bd
   14001a0b4:	mov    rcx,QWORD PTR [rdx]
   14001a0b7:	mov    rax,QWORD PTR [rcx]
   14001a0ba:	call   QWORD PTR [rax+0x8]
   14001a0bd:	mov    rax,QWORD PTR [rdi]
   14001a0c0:	mov    rcx,rdi
   14001a0c3:	call   QWORD PTR [rax+0x18]
   14001a0c6:	add    rax,0x18
   14001a0ca:	mov    QWORD PTR [rsp+0x40],rax
   14001a0cf:	jmp    0x14001a165
   14001a0d4:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a0d9:	mov    r12d,DWORD PTR [rdi-0x10]
   14001a0dd:	lea    r13,[rsp+0x370]
   14001a0e5:	sub    r13,rdi
   14001a0e8:	sar    r13,1
   14001a0eb:	mov    ecx,0x1
   14001a0f0:	sub    ecx,DWORD PTR [rdi-0x8]
   14001a0f3:	mov    eax,DWORD PTR [rdi-0xc]
   14001a0f6:	sub    eax,ebx
   14001a0f8:	or     eax,ecx
   14001a0fa:	jge    0x14001a10d
   14001a0fc:	mov    edx,ebx
   14001a0fe:	lea    rcx,[rsp+0x40]
   14001a103:	call   0x140002d40
   14001a108:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a10d:	cmp    r13,r12
   14001a110:	ja     0x14001a12d
   14001a112:	movsxd rax,ebx
   14001a115:	lea    r12,[rax+rax*1]
   14001a119:	lea    r8,[rdi+r13*2]
   14001a11d:	mov    r9,r12
   14001a120:	mov    rdx,r12
   14001a123:	mov    rcx,rdi
   14001a126:	call   0x1400467a0
   14001a12b:	jmp    0x14001a14a
   14001a12d:	movsxd rax,ebx
   14001a130:	lea    r12,[rax+rax*1]
   14001a134:	mov    r9,r12
   14001a137:	lea    r8,[rsp+0x370]
   14001a13f:	mov    rdx,r12
   14001a142:	mov    rcx,rdi
   14001a145:	call   0x1400466d0
   14001a14a:	test   ebx,ebx
   14001a14c:	js     0x14001a1ec
   14001a152:	cmp    ebx,DWORD PTR [rdi-0xc]
   14001a155:	jg     0x14001a1ec
   14001a15b:	mov    DWORD PTR [rdi-0x10],ebx
   14001a15e:	mov    WORD PTR [r12+rdi*1],0x0
   14001a165:	lea    rdx,[rip+0x4d6f4]        # 0x140067860
   14001a16c:	lea    rcx,[rsp+0x90]
   14001a174:	call   0x140004d00
   14001a179:	nop
   14001a17a:	lea    r8,[rsp+0x90]
   14001a182:	lea    rdx,[rsp+0x40]
   14001a187:	lea    rcx,[rsp+0xf8]
   14001a18f:	call   0x140003e20
   14001a194:	nop
   14001a195:	mov    rdx,rax
   14001a198:	lea    rcx,[rsp+0x40]
   14001a19d:	call   0x140004dc0
   14001a1a2:	nop
   14001a1a3:	mov    rdx,QWORD PTR [rsp+0xf8]
   14001a1ab:	add    rdx,0xffffffffffffffe8
   14001a1af:	mov    eax,ebp
   14001a1b1:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a1b6:	add    eax,0xffffffff
   14001a1b9:	test   eax,eax
   14001a1bb:	jg     0x14001a1c7
   14001a1bd:	mov    rcx,QWORD PTR [rdx]
   14001a1c0:	mov    rax,QWORD PTR [rcx]
   14001a1c3:	call   QWORD PTR [rax+0x8]
   14001a1c6:	nop
   14001a1c7:	mov    rdx,QWORD PTR [rsp+0x90]
   14001a1cf:	add    rdx,0xffffffffffffffe8
   14001a1d3:	mov    eax,ebp
   14001a1d5:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a1da:	add    eax,0xffffffff
   14001a1dd:	test   eax,eax
   14001a1df:	jg     0x14001a1f7
   14001a1e1:	mov    rcx,QWORD PTR [rdx]
   14001a1e4:	mov    rax,QWORD PTR [rcx]
   14001a1e7:	call   QWORD PTR [rax+0x8]
   14001a1ea:	jmp    0x14001a1f7
   14001a1ec:	mov    ecx,0x80070057
   14001a1f1:	call   0x140001430
   14001a1f6:	int3   
   14001a1f7:	lea    rdx,[rip+0x4d652]        # 0x140067850
   14001a1fe:	lea    rcx,[rsp+0xa8]
   14001a206:	call   0x140004d00
   14001a20b:	nop
   14001a20c:	lea    r8,[rsp+0xa8]
   14001a214:	lea    rdx,[rsp+0x40]
   14001a219:	lea    rcx,[rsp+0xb8]
   14001a221:	call   0x140003e20
   14001a226:	nop
   14001a227:	mov    rdx,rax
   14001a22a:	lea    rcx,[rsp+0x40]
   14001a22f:	call   0x140004dc0
   14001a234:	nop
   14001a235:	mov    rdx,QWORD PTR [rsp+0xb8]
   14001a23d:	add    rdx,0xffffffffffffffe8
   14001a241:	mov    eax,ebp
   14001a243:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a248:	add    eax,0xffffffff
   14001a24b:	test   eax,eax
   14001a24d:	jg     0x14001a259
   14001a24f:	mov    rcx,QWORD PTR [rdx]
   14001a252:	mov    rax,QWORD PTR [rcx]
   14001a255:	call   QWORD PTR [rax+0x8]
   14001a258:	nop
   14001a259:	mov    rdx,QWORD PTR [rsp+0xa8]
   14001a261:	add    rdx,0xffffffffffffffe8
   14001a265:	mov    eax,ebp
   14001a267:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a26c:	add    eax,0xffffffff
   14001a26f:	test   eax,eax
   14001a271:	jg     0x14001a27c
   14001a273:	mov    rcx,QWORD PTR [rdx]
   14001a276:	mov    rax,QWORD PTR [rcx]
   14001a279:	call   QWORD PTR [rax+0x8]
   14001a27c:	mov    DWORD PTR [rsp+0x28],0x5
   14001a284:	mov    QWORD PTR [rsp+0x20],r14
   14001a289:	mov    r9,QWORD PTR [rsp+0x30]
   14001a28e:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a293:	mov    r8,rdi
   14001a296:	lea    rdx,[rip+0x4c7eb]        # 0x140066a88
   14001a29d:	xor    ecx,ecx
   14001a29f:	call   QWORD PTR [rip+0x4a4c3]        # 0x140064768
   14001a2a5:	jmp    0x14001a523
   14001a2aa:	mov    ecx,0x80070057
   14001a2af:	call   0x140001430
   14001a2b4:	int3   
   14001a2b5:	xor    eax,eax
   14001a2b7:	mov    rcx,rbp
   14001a2ba:	lea    rdi,[rsp+0x110]
   14001a2c2:	repnz scas ax,WORD PTR es:[rdi]
   14001a2c5:	not    rcx
   14001a2c8:	sub    rcx,0x1
   14001a2cc:	mov    r12,rcx
   14001a2cf:	test   ecx,ecx
   14001a2d1:	jne    0x14001a33e
   14001a2d3:	mov    rax,QWORD PTR [rsp+0x48]
   14001a2d8:	lea    rdx,[rax-0x18]
   14001a2dc:	mov    rdi,QWORD PTR [rdx]
   14001a2df:	cmp    DWORD PTR [rdx+0x8],ecx
   14001a2e2:	je     0x14001a3d8
   14001a2e8:	cmp    DWORD PTR [rdx+0x10],ecx
   14001a2eb:	jge    0x14001a30b
   14001a2ed:	cmp    DWORD PTR [rax-0xc],ecx
   14001a2f0:	jge    0x14001a2fd
   14001a2f2:	mov    ecx,0x80070057
   14001a2f7:	call   0x140001430
   14001a2fc:	int3   
   14001a2fd:	mov    DWORD PTR [rax-0x10],r14d
   14001a301:	mov    WORD PTR [rax],0x0
   14001a306:	jmp    0x14001a3d8
   14001a30b:	mov    eax,ebp
   14001a30d:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a312:	add    eax,0xffffffff
   14001a315:	test   eax,eax
   14001a317:	jg     0x14001a322
   14001a319:	mov    rcx,QWORD PTR [rdx]
   14001a31c:	mov    rax,QWORD PTR [rcx]
   14001a31f:	call   QWORD PTR [rax+0x8]
   14001a322:	mov    rax,QWORD PTR [rdi]
   14001a325:	mov    rcx,rdi
   14001a328:	call   QWORD PTR [rax+0x18]
   14001a32b:	add    rax,0x18
   14001a32f:	mov    QWORD PTR [rsp+0x48],rax
   14001a334:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a339:	jmp    0x14001a3d8
   14001a33e:	mov    rdi,QWORD PTR [rsp+0x48]
   14001a343:	mov    r13d,DWORD PTR [rdi-0x10]
   14001a347:	lea    r14,[rsp+0x110]
   14001a34f:	sub    r14,rdi
   14001a352:	sar    r14,1
   14001a355:	mov    ecx,0x1
   14001a35a:	sub    ecx,DWORD PTR [rdi-0x8]
   14001a35d:	mov    eax,DWORD PTR [rdi-0xc]
   14001a360:	sub    eax,r12d
   14001a363:	or     eax,ecx
   14001a365:	jge    0x14001a379
   14001a367:	mov    edx,r12d
   14001a36a:	lea    rcx,[rsp+0x48]
   14001a36f:	call   0x140002d40
   14001a374:	mov    rdi,QWORD PTR [rsp+0x48]
   14001a379:	cmp    r14,r13
   14001a37c:	ja     0x14001a399
   14001a37e:	movsxd rax,r12d
   14001a381:	lea    r13,[rax+rax*1]
   14001a385:	lea    r8,[rdi+r14*2]
   14001a389:	mov    r9,r13
   14001a38c:	mov    rdx,r13
   14001a38f:	mov    rcx,rdi
   14001a392:	call   0x1400467a0
   14001a397:	jmp    0x14001a3b6
   14001a399:	movsxd rax,r12d
   14001a39c:	lea    r13,[rax+rax*1]
   14001a3a0:	mov    r9,r13
   14001a3a3:	lea    r8,[rsp+0x110]
   14001a3ab:	mov    rdx,r13
   14001a3ae:	mov    rcx,rdi
   14001a3b1:	call   0x1400466d0
   14001a3b6:	test   r12d,r12d
   14001a3b9:	js     0x14001a5ff
   14001a3bf:	cmp    r12d,DWORD PTR [rdi-0xc]
   14001a3c3:	jg     0x14001a5ff
   14001a3c9:	mov    DWORD PTR [rdi-0x10],r12d
   14001a3cd:	mov    WORD PTR [r13+rdi*1+0x0],0x0
   14001a3d5:	xor    r14d,r14d
   14001a3d8:	cmp    DWORD PTR [r15],0x0
   14001a3dc:	jl     0x14001a4aa
   14001a3e2:	lea    rdx,[rip+0x4d44f]        # 0x140067838
   14001a3e9:	mov    rcx,rbx
   14001a3ec:	call   0x140046660
   14001a3f1:	mov    rdi,rax
   14001a3f4:	test   rax,rax
   14001a3f7:	je     0x14001a4aa
   14001a3fd:	sub    rdi,rbx
   14001a400:	sar    rdi,1
   14001a403:	cmp    edi,0xffffffff
   14001a406:	je     0x14001a4aa
   14001a40c:	lea    r8d,[rdi+0xa]
   14001a410:	lea    rdx,[rsp+0xc8]
   14001a418:	lea    rcx,[rsp+0x48]
   14001a41d:	call   0x1400034f0
   14001a422:	nop
   14001a423:	mov    rdx,rax
   14001a426:	lea    rcx,[rsp+0x68]
   14001a42b:	call   0x140004dc0
   14001a430:	nop
   14001a431:	mov    rdx,QWORD PTR [rsp+0xc8]
   14001a439:	add    rdx,0xffffffffffffffe8
   14001a43d:	mov    eax,ebp
   14001a43f:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a444:	add    eax,0xffffffff
   14001a447:	test   eax,eax
   14001a449:	jg     0x14001a454
   14001a44b:	mov    rcx,QWORD PTR [rdx]
   14001a44e:	mov    rax,QWORD PTR [rcx]
   14001a451:	call   QWORD PTR [rax+0x8]
   14001a454:	mov    rax,QWORD PTR [rsp+0x48]
   14001a459:	mov    r8d,DWORD PTR [rax-0x10]
   14001a45d:	sub    r8d,edi
   14001a460:	sub    r8d,0xa
   14001a464:	lea    rdx,[rsp+0xd8]
   14001a46c:	lea    rcx,[rsp+0x48]
   14001a471:	call   0x140003360
   14001a476:	nop
   14001a477:	mov    rdx,rax
   14001a47a:	lea    rcx,[rsp+0x30]
   14001a47f:	call   0x140004dc0
   14001a484:	nop
   14001a485:	mov    rdx,QWORD PTR [rsp+0xd8]
   14001a48d:	add    rdx,0xffffffffffffffe8
   14001a491:	mov    eax,ebp
   14001a493:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a498:	add    eax,0xffffffff
   14001a49b:	test   eax,eax
   14001a49d:	jg     0x14001a4f8
   14001a49f:	mov    rcx,QWORD PTR [rdx]
   14001a4a2:	mov    rax,QWORD PTR [rcx]
   14001a4a5:	call   QWORD PTR [rax+0x8]
   14001a4a8:	jmp    0x14001a4f8
   14001a4aa:	xor    eax,eax
   14001a4ac:	mov    rcx,rbp
   14001a4af:	lea    rdi,[rip+0x4d29a]        # 0x140067750
   14001a4b6:	repnz scas ax,WORD PTR es:[rdi]
   14001a4b9:	not    rcx
   14001a4bc:	lea    r8d,[rcx-0x1]
   14001a4c0:	lea    rdx,[rip+0x4d289]        # 0x140067750
   14001a4c7:	lea    rcx,[rsp+0x68]
   14001a4cc:	call   0x1400037d0
   14001a4d1:	xor    eax,eax
   14001a4d3:	mov    rcx,rbp
   14001a4d6:	lea    rdi,[rip+0x4d233]        # 0x140067710
   14001a4dd:	repnz scas ax,WORD PTR es:[rdi]
   14001a4e0:	not    rcx
   14001a4e3:	lea    r8d,[rcx-0x1]
   14001a4e7:	lea    rdx,[rip+0x4d222]        # 0x140067710
   14001a4ee:	lea    rcx,[rsp+0x30]
   14001a4f3:	call   0x1400037d0
   14001a4f8:	mov    DWORD PTR [rsp+0x28],0x5
   14001a500:	mov    QWORD PTR [rsp+0x20],r14
   14001a505:	mov    r9,QWORD PTR [rsp+0x30]
   14001a50a:	mov    r8,QWORD PTR [rsp+0x68]
   14001a50f:	lea    rdx,[rip+0x4c572]        # 0x140066a88
   14001a516:	xor    ecx,ecx
   14001a518:	call   QWORD PTR [rip+0x4a24a]        # 0x140064768
   14001a51e:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a523:	mov    rcx,QWORD PTR [rsp+0x60]
   14001a528:	call   QWORD PTR [rip+0x49b3a]        # 0x140064068
   14001a52e:	mov    rcx,rsi
   14001a531:	call   0x1400016b0
   14001a536:	nop
   14001a537:	lea    rdx,[rdi-0x18]
   14001a53b:	mov    eax,ebp
   14001a53d:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a542:	add    eax,0xffffffff
   14001a545:	test   eax,eax
   14001a547:	jg     0x14001a553
   14001a549:	mov    rcx,QWORD PTR [rdx]
   14001a54c:	mov    rax,QWORD PTR [rcx]
   14001a54f:	call   QWORD PTR [rax+0x8]
   14001a552:	nop
   14001a553:	mov    rdx,QWORD PTR [rsp+0x68]
   14001a558:	add    rdx,0xffffffffffffffe8
   14001a55c:	mov    eax,ebp
   14001a55e:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a563:	add    eax,0xffffffff
   14001a566:	test   eax,eax
   14001a568:	jg     0x14001a574
   14001a56a:	mov    rcx,QWORD PTR [rdx]
   14001a56d:	mov    rax,QWORD PTR [rcx]
   14001a570:	call   QWORD PTR [rax+0x8]
   14001a573:	nop
   14001a574:	mov    rdx,QWORD PTR [rsp+0x48]
   14001a579:	add    rdx,0xffffffffffffffe8
   14001a57d:	mov    eax,ebp
   14001a57f:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a584:	add    eax,0xffffffff
   14001a587:	test   eax,eax
   14001a589:	jg     0x14001a595
   14001a58b:	mov    rcx,QWORD PTR [rdx]
   14001a58e:	mov    rax,QWORD PTR [rcx]
   14001a591:	call   QWORD PTR [rax+0x8]
   14001a594:	nop
   14001a595:	mov    rdx,QWORD PTR [rsp+0x50]
   14001a59a:	add    rdx,0xffffffffffffffe8
   14001a59e:	mov    eax,ebp
   14001a5a0:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a5a5:	add    eax,0xffffffff
   14001a5a8:	test   eax,eax
   14001a5aa:	jg     0x14001a5b6
   14001a5ac:	mov    rcx,QWORD PTR [rdx]
   14001a5af:	mov    rax,QWORD PTR [rcx]
   14001a5b2:	call   QWORD PTR [rax+0x8]
   14001a5b5:	nop
   14001a5b6:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a5bb:	add    rdx,0xffffffffffffffe8
   14001a5bf:	mov    eax,ebp
   14001a5c1:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a5c6:	add    eax,0xffffffff
   14001a5c9:	test   eax,eax
   14001a5cb:	jg     0x14001a5d7
   14001a5cd:	mov    rcx,QWORD PTR [rdx]
   14001a5d0:	mov    rax,QWORD PTR [rcx]
   14001a5d3:	call   QWORD PTR [rax+0x8]
   14001a5d6:	nop
   14001a5d7:	mov    rdx,QWORD PTR [rsp+0x30]
   14001a5dc:	add    rdx,0xffffffffffffffe8
   14001a5e0:	lock xadd DWORD PTR [rdx+0x10],ebp
   14001a5e5:	add    ebp,0xffffffff
   14001a5e8:	test   ebp,ebp
   14001a5ea:	jg     0x14001a5f5
   14001a5ec:	mov    rcx,QWORD PTR [rdx]
   14001a5ef:	mov    rax,QWORD PTR [rcx]
   14001a5f2:	call   QWORD PTR [rax+0x8]
   14001a5f5:	mov    eax,0x1
   14001a5fa:	jmp    0x14001a8f6
   14001a5ff:	mov    ecx,0x80070057
   14001a604:	call   0x140001430
   14001a609:	int3   
   14001a60a:	mov    ecx,0x80070057
   14001a60f:	call   0x140001430
   14001a614:	int3   
   14001a615:	mov    rcx,QWORD PTR [rsp+0x60]
   14001a61a:	call   QWORD PTR [rip+0x49a48]        # 0x140064068
   14001a620:	mov    ecx,0x89
   14001a625:	call   0x14002b860
   14001a62a:	test   rax,rax
   14001a62d:	je     0x14001a646
   14001a62f:	mov    r8d,0x89
   14001a635:	mov    rdx,rax
   14001a638:	lea    rcx,[rsp+0x38]
   14001a63d:	call   0x140003650
   14001a642:	test   eax,eax
   14001a644:	jne    0x14001a657
   14001a646:	lea    rdx,[rip+0x4d083]        # 0x1400676d0
   14001a64d:	lea    rcx,[rsp+0x38]
   14001a652:	call   0x140003930
   14001a657:	cmp    DWORD PTR [rsi+0x2ac],0x0
   14001a65e:	je     0x14001a6a9
   14001a660:	cmp    DWORD PTR [rsi+0x2a8],0x0
   14001a667:	jne    0x14001a6a9
   14001a669:	cmp    DWORD PTR [rsi+0xeb12c],0x0
   14001a670:	je     0x14001a6a9
   14001a672:	mov    ecx,0x8a
   14001a677:	call   0x14002b860
   14001a67c:	test   rax,rax
   14001a67f:	je     0x14001a698
   14001a681:	mov    r8d,0x8a
   14001a687:	mov    rdx,rax
   14001a68a:	lea    rcx,[rsp+0x38]
   14001a68f:	call   0x140003650
   14001a694:	test   eax,eax
   14001a696:	jne    0x14001a6a9
   14001a698:	lea    rdx,[rip+0x4cff9]        # 0x140067698
   14001a69f:	lea    rcx,[rsp+0x38]
   14001a6a4:	call   0x140003930
   14001a6a9:	mov    r9d,0x34
   14001a6af:	lea    r8,[rip+0x4b432]        # 0x140065ae8
   14001a6b6:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a6bb:	mov    rcx,rsi
   14001a6be:	call   0x140001690
   14001a6c3:	cmp    eax,0x6
   14001a6c6:	jne    0x14001a6d4
   14001a6c8:	mov    DWORD PTR [rsi+0x298],r15d
   14001a6cf:	jmp    0x14001a7d4
   14001a6d4:	xor    ecx,ecx
   14001a6d6:	call   0x140048510
   14001a6db:	int3   
   14001a6dc:	mov    rcx,QWORD PTR [rsp+0x60]
   14001a6e1:	call   QWORD PTR [rip+0x49981]        # 0x140064068
   14001a6e7:	jmp    0x14001a7d4
   14001a6ec:	cmp    DWORD PTR [rsi+0x2ac],0x0
   14001a6f3:	je     0x14001a7d4
   14001a6f9:	cmp    DWORD PTR [rsi+0xeb11c],0x0
   14001a700:	je     0x14001a7d4
   14001a706:	mov    ecx,0x8a
   14001a70b:	call   0x14002b860
   14001a710:	test   rax,rax
   14001a713:	je     0x14001a72c
   14001a715:	mov    r8d,0x8a
   14001a71b:	mov    rdx,rax
   14001a71e:	lea    rcx,[rsp+0x38]
   14001a723:	call   0x140003650
   14001a728:	test   eax,eax
   14001a72a:	jne    0x14001a73d
   14001a72c:	lea    rdx,[rip+0x4cf65]        # 0x140067698
   14001a733:	lea    rcx,[rsp+0x38]
   14001a738:	call   0x140003930
   14001a73d:	mov    r9d,0x34
   14001a743:	lea    r8,[rip+0x4b39e]        # 0x140065ae8
   14001a74a:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a74f:	mov    rcx,rsi
   14001a752:	call   0x140001690
   14001a757:	cmp    eax,0x7
   14001a75a:	jne    0x14001a7d4
   14001a75c:	xor    ecx,ecx
   14001a75e:	call   0x140048510
   14001a763:	int3   
   14001a764:	cmp    DWORD PTR [rsi+0x2ac],0x0
   14001a76b:	je     0x14001a7d4
   14001a76d:	cmp    DWORD PTR [rsi+0xeb11c],0x0
   14001a774:	je     0x14001a7d4
   14001a776:	mov    ecx,0x8a
   14001a77b:	call   0x14002b860
   14001a780:	test   rax,rax
   14001a783:	je     0x14001a79c
   14001a785:	mov    r8d,0x8a
   14001a78b:	mov    rdx,rax
   14001a78e:	lea    rcx,[rsp+0x38]
   14001a793:	call   0x140003650
   14001a798:	test   eax,eax
   14001a79a:	jne    0x14001a7ad
   14001a79c:	lea    rdx,[rip+0x4cef5]        # 0x140067698
   14001a7a3:	lea    rcx,[rsp+0x38]
   14001a7a8:	call   0x140003930
   14001a7ad:	mov    r9d,0x34
   14001a7b3:	lea    r8,[rip+0x4b32e]        # 0x140065ae8
   14001a7ba:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a7bf:	mov    rcx,rsi
   14001a7c2:	call   0x140001690
   14001a7c7:	cmp    eax,0x7
   14001a7ca:	jne    0x14001a7d4
   14001a7cc:	xor    ecx,ecx
   14001a7ce:	call   0x140048510
   14001a7d3:	int3   
   14001a7d4:	lea    rax,[rsp+0x88]
   14001a7dc:	mov    QWORD PTR [rsp+0x28],rax
   14001a7e1:	mov    DWORD PTR [rsp+0x20],r14d
   14001a7e6:	mov    r9,rsi
   14001a7e9:	lea    r8,[rip+0xffffffffffffe020]        # 0x140018810
   14001a7f0:	xor    edx,edx
   14001a7f2:	xor    ecx,ecx
   14001a7f4:	call   QWORD PTR [rip+0x49d16]        # 0x140064510
   14001a7fa:	mov    QWORD PTR [rsi+0x288],rax
   14001a801:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a806:	jmp    0x14001a835
   14001a808:	lea    rax,[rsp+0x88]
   14001a810:	mov    QWORD PTR [rsp+0x28],rax
   14001a815:	mov    DWORD PTR [rsp+0x20],r14d
   14001a81a:	mov    r9,rsi
   14001a81d:	lea    r8,[rip+0xffffffffffffedfc]        # 0x140019620
   14001a824:	xor    edx,edx
   14001a826:	xor    ecx,ecx
   14001a828:	call   QWORD PTR [rip+0x49ce2]        # 0x140064510
   14001a82e:	mov    QWORD PTR [rsi+0x280],rax
   14001a835:	lea    rdx,[rdi-0x18]
   14001a839:	mov    eax,ebp
   14001a83b:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a840:	add    eax,0xffffffff
   14001a843:	test   eax,eax
   14001a845:	jg     0x14001a851
   14001a847:	mov    rcx,QWORD PTR [rdx]
   14001a84a:	mov    rax,QWORD PTR [rcx]
   14001a84d:	call   QWORD PTR [rax+0x8]
   14001a850:	nop
   14001a851:	mov    rdx,QWORD PTR [rsp+0x68]
   14001a856:	add    rdx,0xffffffffffffffe8
   14001a85a:	mov    eax,ebp
   14001a85c:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a861:	add    eax,0xffffffff
   14001a864:	test   eax,eax
   14001a866:	jg     0x14001a872
   14001a868:	mov    rcx,QWORD PTR [rdx]
   14001a86b:	mov    rax,QWORD PTR [rcx]
   14001a86e:	call   QWORD PTR [rax+0x8]
   14001a871:	nop
   14001a872:	mov    rdx,QWORD PTR [rsp+0x48]
   14001a877:	add    rdx,0xffffffffffffffe8
   14001a87b:	mov    eax,ebp
   14001a87d:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a882:	add    eax,0xffffffff
   14001a885:	test   eax,eax
   14001a887:	jg     0x14001a893
   14001a889:	mov    rcx,QWORD PTR [rdx]
   14001a88c:	mov    rax,QWORD PTR [rcx]
   14001a88f:	call   QWORD PTR [rax+0x8]
   14001a892:	nop
   14001a893:	mov    rdx,QWORD PTR [rsp+0x50]
   14001a898:	add    rdx,0xffffffffffffffe8
   14001a89c:	mov    eax,ebp
   14001a89e:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a8a3:	add    eax,0xffffffff
   14001a8a6:	test   eax,eax
   14001a8a8:	jg     0x14001a8b4
   14001a8aa:	mov    rcx,QWORD PTR [rdx]
   14001a8ad:	mov    rax,QWORD PTR [rcx]
   14001a8b0:	call   QWORD PTR [rax+0x8]
   14001a8b3:	nop
   14001a8b4:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a8b9:	add    rdx,0xffffffffffffffe8
   14001a8bd:	mov    eax,ebp
   14001a8bf:	lock xadd DWORD PTR [rdx+0x10],eax
   14001a8c4:	add    eax,0xffffffff
   14001a8c7:	test   eax,eax
   14001a8c9:	jg     0x14001a8d5
   14001a8cb:	mov    rcx,QWORD PTR [rdx]
   14001a8ce:	mov    rax,QWORD PTR [rcx]
   14001a8d1:	call   QWORD PTR [rax+0x8]
   14001a8d4:	nop
   14001a8d5:	mov    rdx,QWORD PTR [rsp+0x30]
   14001a8da:	add    rdx,0xffffffffffffffe8
   14001a8de:	lock xadd DWORD PTR [rdx+0x10],ebp
   14001a8e3:	add    ebp,0xffffffff
   14001a8e6:	test   ebp,ebp
   14001a8e8:	jg     0x14001a8f3
   14001a8ea:	mov    rcx,QWORD PTR [rdx]
   14001a8ed:	mov    rax,QWORD PTR [rcx]
   14001a8f0:	call   QWORD PTR [rax+0x8]
   14001a8f3:	mov    eax,r15d
   14001a8f6:	mov    rcx,QWORD PTR [rsp+0x760]
   14001a8fe:	xor    rcx,rsp
   14001a901:	call   0x140046470
   14001a906:	lea    r11,[rsp+0x770]
   14001a90e:	mov    rbx,QWORD PTR [r11+0x38]
   14001a912:	mov    rbp,QWORD PTR [r11+0x40]
   14001a916:	mov    rsi,QWORD PTR [r11+0x48]
   14001a91a:	mov    rsp,r11
   14001a91d:	pop    r15
   14001a91f:	pop    r14
   14001a921:	pop    r13
   14001a923:	pop    r12
   14001a925:	pop    rdi
   14001a926:	ret    
   14001a927:	int3   
   14001a928:	int3   
   14001a929:	int3   
   14001a92a:	int3   
   14001a92b:	int3   
   14001a92c:	int3   
   14001a92d:	int3   
   14001a92e:	int3   
   14001a92f:	int3   
   14001a930:	rex push rbp
   14001a932:	sub    rsp,0x20
   14001a936:	mov    rbp,rdx
   14001a939:	lea    rcx,[rbp+0x30]
   14001a93d:	call   0x1400010c0
   14001a942:	add    rsp,0x20
   14001a946:	pop    rbp
   14001a947:	ret    
   14001a948:	int3   
   14001a949:	int3   
   14001a94a:	int3   
   14001a94b:	int3   
   14001a94c:	int3   
   14001a94d:	int3   
   14001a94e:	int3   
   14001a94f:	int3   
   14001a950:	rex push rbp
   14001a952:	sub    rsp,0x20
   14001a956:	mov    rbp,rdx
   14001a959:	lea    rcx,[rbp+0x38]
   14001a95d:	call   0x1400010c0
   14001a962:	add    rsp,0x20
   14001a966:	pop    rbp
   14001a967:	ret    
   14001a968:	int3   
   14001a969:	int3   
   14001a96a:	int3   
   14001a96b:	int3   
   14001a96c:	int3   
   14001a96d:	int3   
   14001a96e:	int3   
   14001a96f:	int3   
   14001a970:	rex push rbp
   14001a972:	sub    rsp,0x20
   14001a976:	mov    rbp,rdx
   14001a979:	lea    rcx,[rbp+0x50]
   14001a97d:	call   0x1400010c0
   14001a982:	add    rsp,0x20
   14001a986:	pop    rbp
   14001a987:	ret    
   14001a988:	int3   
   14001a989:	int3   
   14001a98a:	int3   
   14001a98b:	int3   
   14001a98c:	int3   
   14001a98d:	int3   
   14001a98e:	int3   
   14001a98f:	int3   
   14001a990:	rex push rbp
   14001a992:	sub    rsp,0x20
   14001a996:	mov    rbp,rdx
   14001a999:	lea    rcx,[rbp+0x48]
   14001a99d:	call   0x1400010c0
   14001a9a2:	add    rsp,0x20
   14001a9a6:	pop    rbp
   14001a9a7:	ret    
   14001a9a8:	int3   
   14001a9a9:	int3   
   14001a9aa:	int3   
   14001a9ab:	int3   
   14001a9ac:	int3   
   14001a9ad:	int3   
   14001a9ae:	int3   
   14001a9af:	int3   
   14001a9b0:	rex push rbp
   14001a9b2:	sub    rsp,0x20
   14001a9b6:	mov    rbp,rdx
   14001a9b9:	lea    rcx,[rbp+0x68]
   14001a9bd:	call   0x1400010c0
   14001a9c2:	add    rsp,0x20
   14001a9c6:	pop    rbp
   14001a9c7:	ret    
   14001a9c8:	int3   
   14001a9c9:	int3   
   14001a9ca:	int3   
   14001a9cb:	int3   
   14001a9cc:	int3   
   14001a9cd:	int3   
   14001a9ce:	int3   
   14001a9cf:	int3   
   14001a9d0:	rex push rbp
   14001a9d2:	sub    rsp,0x20
   14001a9d6:	mov    rbp,rdx
   14001a9d9:	lea    rcx,[rbp+0x40]
   14001a9dd:	call   0x1400010c0
   14001a9e2:	add    rsp,0x20
   14001a9e6:	pop    rbp
   14001a9e7:	ret    
   14001a9e8:	int3   
   14001a9e9:	int3   
   14001a9ea:	int3   
   14001a9eb:	int3   
   14001a9ec:	int3   
   14001a9ed:	int3   
   14001a9ee:	int3   
   14001a9ef:	int3   
   14001a9f0:	rex push rbp
   14001a9f2:	sub    rsp,0x20
   14001a9f6:	mov    rbp,rdx
   14001a9f9:	lea    rcx,[rbp+0x78]
   14001a9fd:	call   0x140001090
   14001aa02:	add    rsp,0x20
   14001aa06:	pop    rbp
   14001aa07:	ret    
   14001aa08:	int3   
   14001aa09:	int3   
   14001aa0a:	int3   
   14001aa0b:	int3   
   14001aa0c:	int3   
   14001aa0d:	int3   
   14001aa0e:	int3   
   14001aa0f:	int3   
   14001aa10:	rex push rbp
   14001aa12:	sub    rsp,0x20
   14001aa16:	mov    rbp,rdx
   14001aa19:	lea    rcx,[rbp+0x78]
   14001aa1d:	call   0x1400010c0
   14001aa22:	add    rsp,0x20
   14001aa26:	pop    rbp
   14001aa27:	ret    
   14001aa28:	int3   
   14001aa29:	int3   
   14001aa2a:	int3   
   14001aa2b:	int3   
   14001aa2c:	int3   
   14001aa2d:	int3   
   14001aa2e:	int3   
   14001aa2f:	int3   
   14001aa30:	rex push rbp
   14001aa32:	sub    rsp,0x20
   14001aa36:	mov    rbp,rdx
   14001aa39:	lea    rcx,[rbp+0x80]
   14001aa40:	call   0x140001090
   14001aa45:	add    rsp,0x20
   14001aa49:	pop    rbp
   14001aa4a:	ret    
   14001aa4b:	int3   
   14001aa4c:	int3   
   14001aa4d:	int3   
   14001aa4e:	int3   
   14001aa4f:	int3   
   14001aa50:	rex push rbp
   14001aa52:	sub    rsp,0x20
   14001aa56:	mov    rbp,rdx
   14001aa59:	lea    rcx,[rbp+0x80]
   14001aa60:	call   0x1400010c0
   14001aa65:	add    rsp,0x20
   14001aa69:	pop    rbp
   14001aa6a:	ret    
   14001aa6b:	int3   
   14001aa6c:	int3   
   14001aa6d:	int3   
   14001aa6e:	int3   
   14001aa6f:	int3   
   14001aa70:	rex push rbp
   14001aa72:	sub    rsp,0x20
   14001aa76:	mov    rbp,rdx
   14001aa79:	lea    rcx,[rbp+0xc0]
   14001aa80:	call   0x1400010c0
   14001aa85:	add    rsp,0x20
   14001aa89:	pop    rbp
   14001aa8a:	ret    
   14001aa8b:	int3   
   14001aa8c:	int3   
   14001aa8d:	int3   
   14001aa8e:	int3   
   14001aa8f:	int3   
   14001aa90:	rex push rbp
   14001aa92:	sub    rsp,0x20
   14001aa96:	mov    rbp,rdx
   14001aa99:	lea    rcx,[rbp+0xa0]
   14001aaa0:	call   0x1400010c0
   14001aaa5:	add    rsp,0x20
   14001aaa9:	pop    rbp
   14001aaaa:	ret    
   14001aaab:	int3   
   14001aaac:	int3   
   14001aaad:	int3   
   14001aaae:	int3   
   14001aaaf:	int3   
   14001aab0:	rex push rbp
   14001aab2:	sub    rsp,0x20
   14001aab6:	mov    rbp,rdx
   14001aab9:	lea    rcx,[rbp+0x98]
   14001aac0:	call   0x1400010c0
   14001aac5:	add    rsp,0x20
   14001aac9:	pop    rbp
   14001aaca:	ret    
   14001aacb:	int3   
   14001aacc:	int3   
   14001aacd:	int3   
   14001aace:	int3   
   14001aacf:	int3   
   14001aad0:	rex push rbp
   14001aad2:	sub    rsp,0x20
   14001aad6:	mov    rbp,rdx
   14001aad9:	lea    rcx,[rbp+0xd0]
   14001aae0:	call   0x1400010c0
   14001aae5:	add    rsp,0x20
   14001aae9:	pop    rbp
   14001aaea:	ret    
   14001aaeb:	int3   
   14001aaec:	int3   
   14001aaed:	int3   
   14001aaee:	int3   
   14001aaef:	int3   
   14001aaf0:	rex push rbp
   14001aaf2:	sub    rsp,0x20
   14001aaf6:	mov    rbp,rdx
   14001aaf9:	lea    rcx,[rbp+0xc8]
   14001ab00:	call   0x1400010c0
   14001ab05:	add    rsp,0x20
   14001ab09:	pop    rbp
   14001ab0a:	ret    
   14001ab0b:	int3   
   14001ab0c:	int3   
   14001ab0d:	int3   
   14001ab0e:	int3   
   14001ab0f:	int3   
   14001ab10:	rex push rbp
   14001ab12:	sub    rsp,0x20
   14001ab16:	mov    rbp,rdx
   14001ab19:	lea    rcx,[rbp+0xd8]
   14001ab20:	call   0x1400010c0
   14001ab25:	add    rsp,0x20
   14001ab29:	pop    rbp
   14001ab2a:	ret    
   14001ab2b:	int3   
   14001ab2c:	int3   
   14001ab2d:	int3   
   14001ab2e:	int3   
   14001ab2f:	int3   
   14001ab30:	rex push rbp
   14001ab32:	sub    rsp,0x20
   14001ab36:	mov    rbp,rdx
   14001ab39:	lea    rcx,[rbp+0xb0]
   14001ab40:	call   0x1400010c0
   14001ab45:	add    rsp,0x20
   14001ab49:	pop    rbp
   14001ab4a:	ret    
   14001ab4b:	int3   
   14001ab4c:	int3   
   14001ab4d:	int3   
   14001ab4e:	int3   
   14001ab4f:	int3   
   14001ab50:	rex push rbp
   14001ab52:	sub    rsp,0x20
   14001ab56:	mov    rbp,rdx
   14001ab59:	lea    rcx,[rbp+0x90]
   14001ab60:	call   0x1400010c0
   14001ab65:	add    rsp,0x20
   14001ab69:	pop    rbp
   14001ab6a:	ret    
   14001ab6b:	int3   
   14001ab6c:	int3   
   14001ab6d:	int3   
   14001ab6e:	int3   
   14001ab6f:	int3   
   14001ab70:	rex push rbp
   14001ab72:	sub    rsp,0x20
   14001ab76:	mov    rbp,rdx
   14001ab79:	lea    rcx,[rbp+0xf8]
   14001ab80:	call   0x1400010c0
   14001ab85:	add    rsp,0x20
   14001ab89:	pop    rbp
   14001ab8a:	ret    
   14001ab8b:	int3   
   14001ab8c:	int3   
   14001ab8d:	int3   
   14001ab8e:	int3   
   14001ab8f:	int3   
   14001ab90:	rex push rbp
   14001ab92:	sub    rsp,0x20
   14001ab96:	mov    rbp,rdx
   14001ab99:	lea    rcx,[rbp+0xa8]
   14001aba0:	call   0x1400010c0
   14001aba5:	add    rsp,0x20
   14001aba9:	pop    rbp
   14001abaa:	ret    
   14001abab:	int3   
   14001abac:	int3   
   14001abad:	int3   
   14001abae:	int3   
   14001abaf:	int3   
   14001abb0:	rex push rbp
   14001abb2:	sub    rsp,0x20
   14001abb6:	mov    rbp,rdx
   14001abb9:	lea    rcx,[rbp+0xb8]
   14001abc0:	call   0x1400010c0
   14001abc5:	add    rsp,0x20
   14001abc9:	pop    rbp
   14001abca:	ret    
   14001abcb:	int3   
   14001abcc:	int3   
   14001abcd:	int3   
   14001abce:	int3   
   14001abcf:	int3   
   14001abd0:	jmp    0x140019670
   14001abd5:	int3   
   14001abd6:	jmp    QWORD PTR [rip+0x4a00c]        # 0x140064be8
   14001abdc:	jmp    QWORD PTR [rip+0x49fc6]        # 0x140064ba8
   14001abe2:	jmp    QWORD PTR [rip+0x49fb0]        # 0x140064b98
   14001abe8:	jmp    QWORD PTR [rip+0x49fb2]        # 0x140064ba0
   14001abee:	int3   
   14001abef:	int3   
   14001abf0:	sub    rsp,0x28
   14001abf4:	call   0x1400208b0
   14001abf9:	int3   
   14001abfa:	int3   
   14001abfb:	int3   
   14001abfc:	mov    rax,QWORD PTR [rip+0x6a545]        # 0x140085148
   14001ac03:	mov    QWORD PTR [rip+0x6a53e],rcx        # 0x140085148
   14001ac0a:	ret    
   14001ac0b:	int3   
   14001ac0c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac11:	push   rdi
   14001ac12:	sub    rsp,0x20
   14001ac16:	mov    rdi,rcx
   14001ac19:	jmp    0x14001ac33
   14001ac1b:	mov    rax,QWORD PTR [rip+0x6a526]        # 0x140085148
   14001ac22:	test   rax,rax
   14001ac25:	je     0x14001ac40
   14001ac27:	mov    rcx,rdi
   14001ac2a:	call   rax
   14001ac2c:	test   eax,eax
   14001ac2e:	je     0x14001ac40
   14001ac30:	mov    rcx,rdi
   14001ac33:	call   0x1400480c0
   14001ac38:	test   rax,rax
   14001ac3b:	mov    rbx,rax
   14001ac3e:	je     0x14001ac1b
   14001ac40:	mov    rax,rbx
   14001ac43:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac48:	add    rsp,0x20
   14001ac4c:	pop    rdi
   14001ac4d:	ret    
   14001ac4e:	int3   
   14001ac4f:	int3   
   14001ac50:	jmp    0x1400485c0
   14001ac55:	int3   
   14001ac56:	int3   
   14001ac57:	int3   
   14001ac58:	jmp    0x14001ac0c
   14001ac5d:	int3   
   14001ac5e:	int3   
   14001ac5f:	int3   
   14001ac60:	lea    rax,[rip+0x4cd81]        # 0x1400679e8
   14001ac67:	ret    
   14001ac68:	mov    rax,QWORD PTR [rsp+0x28]
   14001ac6d:	test   rax,rax
   14001ac70:	jne    0x14001ac73
   14001ac72:	ret    
   14001ac73:	mov    WORD PTR [rax],r9w
   14001ac77:	mov    eax,0x1
   14001ac7c:	ret    
   14001ac7d:	int3   
   14001ac7e:	int3   
   14001ac7f:	int3   
   14001ac80:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac85:	push   rdi
   14001ac86:	sub    rsp,0x20
   14001ac8a:	and    QWORD PTR [rcx+0x8],0x0
   14001ac8f:	mov    QWORD PTR [rcx],rdx
   14001ac92:	cmp    BYTE PTR [rip+0x6df1f],0x0        # 0x140088bb8
   14001ac99:	mov    rbx,rcx
   14001ac9c:	jne    0x14001ad62
   14001aca2:	lea    rcx,[rip+0x4ce1f]        # 0x140067ac8
   14001aca9:	call   QWORD PTR [rip+0x498e1]        # 0x140064590
   14001acaf:	test   rax,rax
   14001acb2:	mov    rdi,rax
   14001acb5:	jne    0x14001acbd
   14001acb7:	call   0x1400208f8
   14001acbc:	int3   
   14001acbd:	lea    rdx,[rip+0x4cdf4]        # 0x140067ab8
   14001acc4:	mov    rcx,rax
   14001acc7:	call   QWORD PTR [rip+0x4991b]        # 0x1400645e8
   14001accd:	lea    rdx,[rip+0x4cdd4]        # 0x140067aa8
   14001acd4:	mov    rcx,rdi
   14001acd7:	mov    QWORD PTR [rip+0x6deba],rax        # 0x140088b98
   14001acde:	call   QWORD PTR [rip+0x49904]        # 0x1400645e8
   14001ace4:	lea    rdx,[rip+0x4cdad]        # 0x140067a98
   14001aceb:	mov    rcx,rdi
   14001acee:	mov    QWORD PTR [rip+0x6deab],rax        # 0x140088ba0
   14001acf5:	call   QWORD PTR [rip+0x498ed]        # 0x1400645e8
   14001acfb:	lea    rdx,[rip+0x4cd7e]        # 0x140067a80
   14001ad02:	mov    rcx,rdi
   14001ad05:	mov    QWORD PTR [rip+0x6de9c],rax        # 0x140088ba8
   14001ad0c:	call   QWORD PTR [rip+0x498d6]        # 0x1400645e8
   14001ad12:	cmp    QWORD PTR [rip+0x6de7e],0x0        # 0x140088b98
   14001ad1a:	mov    QWORD PTR [rip+0x6de8f],rax        # 0x140088bb0
   14001ad21:	je     0x14001ad42
   14001ad23:	cmp    QWORD PTR [rip+0x6de75],0x0        # 0x140088ba0
   14001ad2b:	je     0x14001ad3c
   14001ad2d:	cmp    QWORD PTR [rip+0x6de73],0x0        # 0x140088ba8
   14001ad35:	je     0x14001ad3c
   14001ad37:	test   rax,rax
   14001ad3a:	jne    0x14001ad5b
   14001ad3c:	call   0x1400208f8
   14001ad41:	int3   
   14001ad42:	cmp    QWORD PTR [rip+0x6de56],0x0        # 0x140088ba0
   14001ad4a:	jne    0x14001ad70
   14001ad4c:	cmp    QWORD PTR [rip+0x6de54],0x0        # 0x140088ba8
   14001ad54:	jne    0x14001ad70
   14001ad56:	test   rax,rax
   14001ad59:	jne    0x14001ad70
   14001ad5b:	mov    BYTE PTR [rip+0x6de56],0x1        # 0x140088bb8
   14001ad62:	mov    rax,rbx
   14001ad65:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad6a:	add    rsp,0x20
   14001ad6e:	pop    rdi
   14001ad6f:	ret    
   14001ad70:	call   0x1400208f8
   14001ad75:	int3   
   14001ad76:	int3   
   14001ad77:	int3   
   14001ad78:	mov    rax,rsp
   14001ad7b:	push   rbx
   14001ad7c:	push   rsi
   14001ad7d:	push   rdi
   14001ad7e:	sub    rsp,0x30
   14001ad82:	and    QWORD PTR [rax+0x20],0x0
   14001ad87:	and    DWORD PTR [rax+0x8],0x0
   14001ad8b:	and    DWORD PTR [rax+0x10],0x0
   14001ad8f:	and    DWORD PTR [rcx+0x138],0x0
   14001ad96:	cmp    QWORD PTR [rip+0x6a3c2],0x0        # 0x140085160
   14001ad9e:	mov    rsi,rcx
   14001ada1:	mov    DWORD PTR [rax+0x18],0x4
   14001ada8:	lea    rdi,[rip+0x6a3b1]        # 0x140085160
   14001adaf:	je     0x14001ae72
   14001adb5:	mov    rdx,QWORD PTR [rdi]
   14001adb8:	lea    rax,[rsp+0x68]
   14001adbd:	mov    r9d,0x1
   14001adc3:	xor    r8d,r8d
   14001adc6:	mov    rcx,0xffffffff80000001
   14001adcd:	mov    QWORD PTR [rsp+0x20],rax
   14001add2:	call   QWORD PTR [rip+0x49280]        # 0x140064058
   14001add8:	test   eax,eax
   14001adda:	jne    0x14001ae64
   14001ade0:	mov    rbx,QWORD PTR [rdi+0x8]
   14001ade4:	jmp    0x14001ae4b
   14001ade6:	lea    rcx,[rsp+0x60]
   14001adeb:	lea    r9,[rsp+0x58]
   14001adf0:	xor    r8d,r8d
   14001adf3:	mov    QWORD PTR [rsp+0x28],rcx
   14001adf8:	lea    rcx,[rsp+0x50]
   14001adfd:	mov    rdx,rax
   14001ae00:	mov    QWORD PTR [rsp+0x20],rcx
   14001ae05:	mov    rcx,QWORD PTR [rsp+0x68]
   14001ae0a:	call   QWORD PTR [rip+0x49240]        # 0x140064050
   14001ae10:	test   eax,eax
   14001ae12:	jne    0x14001ae35
   14001ae14:	cmp    DWORD PTR [rsp+0x58],0x4
   14001ae19:	jne    0x14001ae35
   14001ae1b:	cmp    DWORD PTR [rsp+0x50],0x0
   14001ae20:	mov    eax,DWORD PTR [rbx+0x8]
   14001ae23:	je     0x14001ae2d
   14001ae25:	or     DWORD PTR [rsi+0x138],eax
   14001ae2b:	jmp    0x14001ae35
   14001ae2d:	not    eax
   14001ae2f:	and    DWORD PTR [rsi+0x138],eax
   14001ae35:	and    DWORD PTR [rsp+0x50],0x0
   14001ae3a:	and    DWORD PTR [rsp+0x58],0x0
   14001ae3f:	mov    DWORD PTR [rsp+0x60],0x4
   14001ae47:	add    rbx,0x10
   14001ae4b:	mov    rax,QWORD PTR [rbx]
   14001ae4e:	test   rax,rax
   14001ae51:	jne    0x14001ade6
   14001ae53:	mov    rcx,QWORD PTR [rsp+0x68]
   14001ae58:	call   QWORD PTR [rip+0x4920a]        # 0x140064068
   14001ae5e:	and    QWORD PTR [rsp+0x68],0x0
   14001ae64:	add    rdi,0x10
   14001ae68:	cmp    QWORD PTR [rdi],0x0
   14001ae6c:	jne    0x14001adb5
   14001ae72:	mov    eax,0x1
   14001ae77:	add    rsp,0x30
   14001ae7b:	pop    rdi
   14001ae7c:	pop    rsi
   14001ae7d:	pop    rbx
   14001ae7e:	ret    
   14001ae7f:	int3   
   14001ae80:	rex push rbx
   14001ae82:	sub    rsp,0x20
   14001ae86:	mov    rax,QWORD PTR [rip+0x6dcfb]        # 0x140088b88
   14001ae8d:	xor    edx,edx
   14001ae8f:	mov    rbx,rcx
   14001ae92:	cmp    rax,rdx
   14001ae95:	je     0x14001aeae
   14001ae97:	cmp    QWORD PTR [rcx+0xb0],rdx
   14001ae9e:	jne    0x14001aea7
   14001aea0:	mov    QWORD PTR [rcx+0xb0],rax
   14001aea7:	mov    QWORD PTR [rip+0x6dcda],rdx        # 0x140088b88
   14001aeae:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001aeb5:	cmp    rcx,rdx
   14001aeb8:	je     0x14001aec2
   14001aeba:	mov    rax,QWORD PTR [rcx]
   14001aebd:	call   QWORD PTR [rax+0x18]
   14001aec0:	jmp    0x14001aec8
   14001aec2:	mov    DWORD PTR [rip+0x6a288],edx        # 0x140085150
   14001aec8:	mov    rax,QWORD PTR [rbx]
   14001aecb:	mov    rcx,rbx
   14001aece:	call   QWORD PTR [rax+0x168]
   14001aed4:	mov    eax,0x1
   14001aed9:	add    rsp,0x20
   14001aedd:	pop    rbx
   14001aede:	ret    
   14001aedf:	int3   
   14001aee0:	rex push rbx
   14001aee2:	sub    rsp,0x20
   14001aee6:	cmp    QWORD PTR [rcx+0x110],0x0
   14001aeee:	mov    rbx,rcx
   14001aef1:	je     0x14001af00
   14001aef3:	mov    rcx,QWORD PTR [rcx+0x110]
   14001aefa:	mov    rax,QWORD PTR [rcx]
   14001aefd:	call   QWORD PTR [rax+0x28]
   14001af00:	mov    r9d,DWORD PTR [rbx+0x124]
   14001af07:	test   r9d,r9d
   14001af0a:	je     0x14001af22
   14001af0c:	lea    r8,[rip+0x4ca85]        # 0x140067998
   14001af13:	lea    rdx,[rip+0x4ca66]        # 0x140067980
   14001af1a:	mov    rcx,rbx
   14001af1d:	call   0x14002c700
   14001af22:	add    rsp,0x20
   14001af26:	pop    rbx
   14001af27:	ret    
   14001af28:	mov    QWORD PTR [rsp+0x8],rbx
   14001af2d:	push   rdi
   14001af2e:	sub    rsp,0x20
   14001af32:	mov    rax,QWORD PTR [rcx+0x118]
   14001af39:	xor    ebx,ebx
   14001af3b:	mov    rdi,rcx
   14001af3e:	cmp    rax,rbx
   14001af41:	je     0x14001af4f
   14001af43:	cmp    DWORD PTR [rax+0x14],0x6
   14001af47:	je     0x14001af61
   14001af49:	cmp    DWORD PTR [rax+0x14],0x5
   14001af4d:	je     0x14001af61
   14001af4f:	call   0x140021a70
   14001af54:	cmp    BYTE PTR [rax+0x28],bl
   14001af57:	jne    0x14001af61
   14001af59:	mov    rcx,rdi
   14001af5c:	call   0x14001aee0
   14001af61:	mov    rax,QWORD PTR [rdi+0x130]
   14001af68:	cmp    rax,rbx
   14001af6b:	je     0x14001af6f
   14001af6d:	call   rax
   14001af6f:	mov    rcx,QWORD PTR [rdi+0xf8]
   14001af76:	cmp    rcx,rbx
   14001af79:	je     0x14001af88
   14001af7b:	call   QWORD PTR [rip+0x4966f]        # 0x1400645f0
   14001af81:	mov    QWORD PTR [rdi+0xf8],rbx
   14001af88:	call   0x14001c854
   14001af8d:	cmp    rax,rbx
   14001af90:	je     0x14001af9a
   14001af92:	call   0x14001c854
   14001af97:	mov    ebx,DWORD PTR [rax+0x10]
   14001af9a:	mov    eax,ebx
   14001af9c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001afa1:	add    rsp,0x20
   14001afa5:	pop    rdi
   14001afa6:	ret    
   14001afa7:	int3   
   14001afa8:	rex push rbx
   14001afaa:	sub    rsp,0x20
   14001afae:	mov    ebx,ecx
   14001afb0:	call   0x14001c840
   14001afb5:	test   rax,rax
   14001afb8:	je     0x14001afcc
   14001afba:	mov    rax,QWORD PTR [rax+0x78]
   14001afbe:	test   rax,rax
   14001afc1:	je     0x14001afcc
   14001afc3:	mov    ecx,0x1
   14001afc8:	mov    edx,ecx
   14001afca:	call   rax
   14001afcc:	mov    ecx,ebx
   14001afce:	add    rsp,0x20
   14001afd2:	pop    rbx
   14001afd3:	rex.W jmp QWORD PTR [rip+0x49b36]        # 0x140064b10
   14001afda:	int3   
   14001afdb:	int3   
   14001afdc:	mov    QWORD PTR [rsp+0x8],rbx
   14001afe1:	mov    QWORD PTR [rsp+0x10],rsi
   14001afe6:	push   rdi
   14001afe7:	sub    rsp,0x20
   14001afeb:	test   rdx,rdx
   14001afee:	mov    rbx,rdx
   14001aff1:	jne    0x14001aff9
   14001aff3:	call   0x1400208f8
   14001aff8:	int3   
   14001aff9:	test   r8,r8
   14001affc:	jne    0x14001b004
   14001affe:	call   0x1400208f8
   14001b003:	int3   
   14001b004:	mov    eax,DWORD PTR [r8+0x8]
   14001b008:	sub    eax,0x1
   14001b00b:	je     0x14001b07d
   14001b00d:	cmp    eax,0xe
   14001b010:	je     0x14001b07d
   14001b012:	xor    esi,esi
   14001b014:	cmp    DWORD PTR [r8+0x8],0x111
   14001b01c:	mov    edi,0xf108
   14001b021:	jne    0x14001b032
   14001b023:	cmp    QWORD PTR [r8+0x18],rsi
   14001b027:	lea    eax,[rdi+0x1]
   14001b02a:	mov    esi,0x1
   14001b02f:	cmove  edi,eax
   14001b032:	lea    rdx,[rip+0x4dd37]        # 0x140068d70
   14001b039:	mov    rcx,rbx
   14001b03c:	call   0x14002c878
   14001b041:	mov    rcx,rbx
   14001b044:	test   eax,eax
   14001b046:	je     0x14001b058
   14001b048:	mov    rax,QWORD PTR [rbx]
   14001b04b:	mov    r8d,edi
   14001b04e:	mov    edx,0x1030
   14001b053:	call   QWORD PTR [rax+0x28]
   14001b056:	jmp    0x14001b078
   14001b058:	lea    rdx,[rip+0x4f699]        # 0x14006a6f8
   14001b05f:	call   0x14002c878
   14001b064:	test   eax,eax
   14001b066:	jne    0x14001b078
   14001b068:	mov    r9,QWORD PTR [rbx]
   14001b06b:	lea    edx,[rax+0x10]
   14001b06e:	mov    r8d,edi
   14001b071:	mov    rcx,rbx
   14001b074:	call   QWORD PTR [r9+0x28]
   14001b078:	mov    rax,rsi
   14001b07b:	jmp    0x14001b082
   14001b07d:	call   0x14001cb34
   14001b082:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b087:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b08c:	add    rsp,0x20
   14001b090:	pop    rdi
   14001b091:	ret    
   14001b092:	int3   
   14001b093:	int3   
   14001b094:	mov    QWORD PTR [rsp+0x8],rbx
   14001b099:	mov    QWORD PTR [rsp+0x10],rsi
   14001b09e:	push   rdi
   14001b09f:	sub    rsp,0x20
   14001b0a3:	xor    ebx,ebx
   14001b0a5:	mov    edi,edx
   14001b0a7:	mov    rsi,rcx
   14001b0aa:	cmp    edx,ebx
   14001b0ac:	jg     0x14001b0ff
   14001b0ae:	call   0x14001d0fc
   14001b0b3:	cmp    QWORD PTR [rsi+0xb0],rbx
   14001b0ba:	mov    QWORD PTR [rsp+0x40],rbx
   14001b0bf:	je     0x14001b109
   14001b0c1:	mov    rcx,QWORD PTR [rsi+0xb0]
   14001b0c8:	mov    rax,QWORD PTR [rcx]
   14001b0cb:	call   QWORD PTR [rax+0x20]
   14001b0ce:	cmp    rax,rbx
   14001b0d1:	mov    QWORD PTR [rsp+0x40],rax
   14001b0d6:	je     0x14001b109
   14001b0d8:	mov    rcx,QWORD PTR [rsi+0xb0]
   14001b0df:	lea    rdx,[rsp+0x40]
   14001b0e4:	mov    rax,QWORD PTR [rcx]
   14001b0e7:	call   QWORD PTR [rax+0x28]
   14001b0ea:	mov    rcx,rax
   14001b0ed:	mov    rdx,QWORD PTR [rax]
   14001b0f0:	call   QWORD PTR [rdx+0x110]
   14001b0f6:	cmp    QWORD PTR [rsp+0x40],rbx
   14001b0fb:	jne    0x14001b0d8
   14001b0fd:	jmp    0x14001b109
   14001b0ff:	cmp    edx,0x1
   14001b102:	jne    0x14001b109
   14001b104:	call   0x14001d0fc
   14001b109:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b10e:	cmp    edi,0x1
   14001b111:	setl   bl
   14001b114:	mov    eax,ebx
   14001b116:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b11b:	add    rsp,0x20
   14001b11f:	pop    rdi
   14001b120:	ret    
   14001b121:	int3   
   14001b122:	int3   
   14001b123:	int3   
   14001b124:	mov    QWORD PTR [rsp+0x10],rbx
   14001b129:	push   rdi
   14001b12a:	sub    rsp,0x30
   14001b12e:	mov    rbx,rcx
   14001b131:	mov    rcx,QWORD PTR [rcx+0xe8]
   14001b138:	mov    rdi,rdx
   14001b13b:	test   rcx,rcx
   14001b13e:	je     0x14001b20b
   14001b144:	call   QWORD PTR [rip+0x493b6]        # 0x140064500
   14001b14a:	mov    rdx,rdi
   14001b14d:	movzx  r8d,WORD PTR [rax+0x2]
   14001b152:	lea    rcx,[rax+r8*2]
   14001b156:	call   QWORD PTR [rip+0x493ac]        # 0x140064508
   14001b15c:	test   eax,eax
   14001b15e:	jne    0x14001b20b
   14001b164:	lea    rdx,[rsp+0x40]
   14001b169:	xor    r8d,r8d
   14001b16c:	mov    rcx,rdi
   14001b16f:	call   0x140062d16
   14001b174:	test   eax,eax
   14001b176:	je     0x14001b20b
   14001b17c:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001b183:	test   rcx,rcx
   14001b186:	je     0x14001b18d
   14001b188:	call   0x14002ca04
   14001b18d:	mov    rdx,QWORD PTR [rsp+0x40]
   14001b192:	and    DWORD PTR [rsp+0x28],0x0
   14001b197:	and    QWORD PTR [rsp+0x20],0x0
   14001b19d:	xor    r9d,r9d
   14001b1a0:	mov    r8,rdi
   14001b1a3:	xor    ecx,ecx
   14001b1a5:	call   0x140062d10
   14001b1aa:	mov    ecx,0x42
   14001b1af:	movsxd rdx,eax
   14001b1b2:	call   QWORD PTR [rip+0x493c0]        # 0x140064578
   14001b1b8:	mov    rcx,rax
   14001b1bb:	mov    QWORD PTR [rbx+0xe0],rax
   14001b1c2:	call   QWORD PTR [rip+0x49338]        # 0x140064500
   14001b1c8:	mov    rdx,QWORD PTR [rsp+0x40]
   14001b1cd:	mov    r8,rdi
   14001b1d0:	xor    ecx,ecx
   14001b1d2:	mov    r9,rax
   14001b1d5:	mov    DWORD PTR [rsp+0x28],0x2
   14001b1dd:	and    QWORD PTR [rsp+0x20],0x0
   14001b1e3:	call   0x140062d10
   14001b1e8:	cmp    eax,0x1
   14001b1eb:	je     0x14001b201
   14001b1ed:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001b1f4:	call   0x14002ca04
   14001b1f9:	and    QWORD PTR [rbx+0xe0],0x0
   14001b201:	mov    rcx,QWORD PTR [rsp+0x40]
   14001b206:	call   0x140062d0a
   14001b20b:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b210:	add    rsp,0x30
   14001b214:	pop    rdi
   14001b215:	ret    
   14001b216:	int3   
   14001b217:	int3   
   14001b218:	lea    rax,[rip+0x4c799]        # 0x1400679b8
   14001b21f:	ret    
   14001b220:	sub    rsp,0x38
   14001b224:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b22d:	mov    ecx,0xa8
   14001b232:	call   0x14002cba4
   14001b237:	mov    rcx,rax
   14001b23a:	mov    QWORD PTR [rsp+0x40],rax
   14001b23f:	xor    eax,eax
   14001b241:	cmp    rcx,rax
   14001b244:	je     0x14001b24c
   14001b246:	call   0x140021040
   14001b24b:	nop
   14001b24c:	add    rsp,0x38
   14001b250:	ret    
   14001b251:	int3   
   14001b252:	int3   
   14001b253:	int3   
   14001b254:	int3   
   14001b255:	int3   
   14001b256:	int3   
   14001b257:	int3   
   14001b258:	int3   
   14001b259:	int3   
   14001b25a:	int3   
   14001b25b:	int3   
   14001b25c:	int3   
   14001b25d:	int3   
   14001b25e:	int3   
   14001b25f:	int3   
   14001b260:	rex push rbp
   14001b262:	sub    rsp,0x20
   14001b266:	mov    rbp,rdx
   14001b269:	mov    rcx,QWORD PTR [rbp+0x40]
   14001b26d:	call   0x14002cbc8
   14001b272:	add    rsp,0x20
   14001b276:	pop    rbp
   14001b277:	ret    
   14001b278:	jmp    0x14001ad78
   14001b27d:	int3   
   14001b27e:	int3   
   14001b27f:	int3   
   14001b280:	mov    QWORD PTR [rsp+0x8],rbx
   14001b285:	push   rdi
   14001b286:	sub    rsp,0x20
   14001b28a:	mov    rax,QWORD PTR [rcx]
   14001b28d:	mov    rbx,rcx
   14001b290:	call   QWORD PTR [rax+0xf8]
   14001b296:	mov    r11,QWORD PTR [rbx]
   14001b299:	mov    rcx,rbx
   14001b29c:	call   QWORD PTR [r11+0x160]
   14001b2a3:	test   rax,rax
   14001b2a6:	mov    rdi,rax
   14001b2a9:	mov    QWORD PTR [rbx+0xf8],rax
   14001b2b0:	je     0x14001b2c9
   14001b2b2:	call   0x140021a70
   14001b2b7:	mov    QWORD PTR [rax+0x18],rdi
   14001b2bb:	mov    rax,QWORD PTR [rbx+0xf8]
   14001b2c2:	xchg   QWORD PTR [rip+0x72337],rax        # 0x14008d600
   14001b2c9:	mov    eax,0x1
   14001b2ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b2d3:	add    rsp,0x20
   14001b2d7:	pop    rdi
   14001b2d8:	ret    
   14001b2d9:	int3   
   14001b2da:	int3   
   14001b2db:	int3   
   14001b2dc:	rex push rbx
   14001b2de:	sub    rsp,0x20
   14001b2e2:	cmp    QWORD PTR [rcx+0x40],0x0
   14001b2e7:	mov    rbx,rcx
   14001b2ea:	jne    0x14001b2fc
   14001b2ec:	call   0x14002d5b0
   14001b2f1:	test   eax,eax
   14001b2f3:	je     0x14001b2fc
   14001b2f5:	xor    ecx,ecx
   14001b2f7:	call   0x14001afa8
   14001b2fc:	mov    rcx,rbx
   14001b2ff:	add    rsp,0x20
   14001b303:	pop    rbx
   14001b304:	jmp    0x14001c9b4
   14001b309:	int3   
   14001b30a:	int3   
   14001b30b:	int3   
   14001b30c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b311:	mov    QWORD PTR [rsp+0x10],rbp
   14001b316:	mov    QWORD PTR [rsp+0x18],rsi
   14001b31b:	push   rdi
   14001b31c:	sub    rsp,0x20
   14001b320:	mov    edi,r8d
   14001b323:	mov    rsi,rdx
   14001b326:	mov    rbp,rcx
   14001b329:	call   0x14001c840
   14001b32e:	test   rax,rax
   14001b331:	je     0x14001b345
   14001b333:	mov    r9,QWORD PTR [rax]
   14001b336:	mov    rcx,rax
   14001b339:	call   QWORD PTR [r9+0xe8]
   14001b340:	mov    rbx,rax
   14001b343:	jmp    0x14001b347
   14001b345:	xor    ebx,ebx
   14001b347:	test   rbx,rbx
   14001b34a:	jne    0x14001b352
   14001b34c:	call   0x1400208f8
   14001b351:	int3   
   14001b352:	and    DWORD PTR [rbp+0xb8],0x0
   14001b359:	mov    rcx,QWORD PTR [rbx+0x40]
   14001b35d:	xor    r9d,r9d
   14001b360:	xor    r8d,r8d
   14001b363:	mov    edx,0x36a
   14001b368:	call   QWORD PTR [rip+0x4979a]        # 0x140064b08
   14001b36e:	mov    r11,QWORD PTR [rbx]
   14001b371:	mov    r8d,edi
   14001b374:	mov    rdx,rsi
   14001b377:	mov    rcx,rbx
   14001b37a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b37f:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b384:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b389:	add    rsp,0x20
   14001b38d:	pop    rdi
   14001b38e:	rex.WB jmp QWORD PTR [r11+0xe8]
   14001b395:	int3   
   14001b396:	int3   
   14001b397:	int3   
   14001b398:	mov    QWORD PTR [rsp+0x8],rbx
   14001b39d:	mov    QWORD PTR [rsp+0x10],rbp
   14001b3a2:	mov    QWORD PTR [rsp+0x18],rsi
   14001b3a7:	push   rdi
   14001b3a8:	sub    rsp,0x20
   14001b3ac:	mov    edi,r8d
   14001b3af:	mov    rsi,rdx
   14001b3b2:	mov    rbp,rcx
   14001b3b5:	call   0x14001c840
   14001b3ba:	test   rax,rax
   14001b3bd:	je     0x14001b3d1
   14001b3bf:	mov    r9,QWORD PTR [rax]
   14001b3c2:	mov    rcx,rax
   14001b3c5:	call   QWORD PTR [r9+0xe8]
   14001b3cc:	mov    rbx,rax
   14001b3cf:	jmp    0x14001b3d3
   14001b3d1:	xor    ebx,ebx
   14001b3d3:	test   rbx,rbx
   14001b3d6:	jne    0x14001b3de
   14001b3d8:	call   0x1400208f8
   14001b3dd:	int3   
   14001b3de:	and    DWORD PTR [rbp+0xb8],0x0
   14001b3e5:	mov    rcx,QWORD PTR [rbx+0x40]
   14001b3e9:	xor    r9d,r9d
   14001b3ec:	xor    r8d,r8d
   14001b3ef:	mov    edx,0x36a
   14001b3f4:	call   QWORD PTR [rip+0x4970e]        # 0x140064b08
   14001b3fa:	mov    r11,QWORD PTR [rbx]
   14001b3fd:	mov    r8d,edi
   14001b400:	mov    rdx,rsi
   14001b403:	mov    rcx,rbx
   14001b406:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b40b:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b410:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b415:	add    rsp,0x20
   14001b419:	pop    rdi
   14001b41a:	rex.WB jmp QWORD PTR [r11+0xf0]
   14001b421:	int3   
   14001b422:	int3   
   14001b423:	int3   
   14001b424:	mov    QWORD PTR [rsp+0x8],rbx
   14001b429:	mov    QWORD PTR [rsp+0x10],rbp
   14001b42e:	mov    QWORD PTR [rsp+0x18],rsi
   14001b433:	push   rdi
   14001b434:	sub    rsp,0x20
   14001b438:	mov    edi,r8d
   14001b43b:	mov    rsi,rdx
   14001b43e:	mov    rbp,rcx
   14001b441:	call   0x14001c840
   14001b446:	test   rax,rax
   14001b449:	je     0x14001b45d
   14001b44b:	mov    r9,QWORD PTR [rax]
   14001b44e:	mov    rcx,rax
   14001b451:	call   QWORD PTR [r9+0xe8]
   14001b458:	mov    rbx,rax
   14001b45b:	jmp    0x14001b45f
   14001b45d:	xor    ebx,ebx
   14001b45f:	test   rbx,rbx
   14001b462:	jne    0x14001b46a
   14001b464:	call   0x1400208f8
   14001b469:	int3   
   14001b46a:	and    DWORD PTR [rbp+0xb8],0x0
   14001b471:	mov    rcx,QWORD PTR [rbx+0x40]
   14001b475:	xor    r9d,r9d
   14001b478:	xor    r8d,r8d
   14001b47b:	mov    edx,0x36a
   14001b480:	call   QWORD PTR [rip+0x49682]        # 0x140064b08
   14001b486:	mov    r11,QWORD PTR [rbx]
   14001b489:	mov    r8d,edi
   14001b48c:	mov    rdx,rsi
   14001b48f:	mov    rcx,rbx
   14001b492:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b497:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b49c:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b4a1:	add    rsp,0x20
   14001b4a5:	pop    rdi
   14001b4a6:	rex.WB jmp QWORD PTR [r11+0xf8]
   14001b4ad:	int3   
   14001b4ae:	int3   
   14001b4af:	int3   
   14001b4b0:	rex push rbx
   14001b4b2:	sub    rsp,0x20
   14001b4b6:	mov    rax,QWORD PTR [rip+0x6d6e3]        # 0x140088ba0
   14001b4bd:	mov    rbx,rcx
   14001b4c0:	test   rax,rax
   14001b4c3:	je     0x14001b4f7
   14001b4c5:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001b4c9:	je     0x14001b4f7
   14001b4cb:	cmp    QWORD PTR [rip+0x6d6dd],0x0        # 0x140088bb0
   14001b4d3:	je     0x14001b4f2
   14001b4d5:	mov    rdx,QWORD PTR [rcx+0x8]
   14001b4d9:	test   rdx,rdx
   14001b4dc:	je     0x14001b4f2
   14001b4de:	and    QWORD PTR [rcx+0x8],0x0
   14001b4e3:	xor    ecx,ecx
   14001b4e5:	call   QWORD PTR [rip+0x6d6c5]        # 0x140088bb0
   14001b4eb:	mov    rax,QWORD PTR [rip+0x6d6ae]        # 0x140088ba0
   14001b4f2:	mov    rcx,QWORD PTR [rbx]
   14001b4f5:	call   rax
   14001b4f7:	add    rsp,0x20
   14001b4fb:	pop    rbx
   14001b4fc:	ret    
   14001b4fd:	int3   
   14001b4fe:	int3   
   14001b4ff:	int3   
   14001b500:	mov    rax,rsp
   14001b503:	push   rbp
   14001b504:	push   rsi
   14001b505:	push   rdi
   14001b506:	push   r12
   14001b508:	push   r13
   14001b50a:	sub    rsp,0x530
   14001b511:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14001b51a:	mov    QWORD PTR [rax+0x18],rbx
   14001b51e:	mov    rax,QWORD PTR [rip+0x6b84b]        # 0x140086d70
   14001b525:	xor    rax,rsp
   14001b528:	mov    QWORD PTR [rsp+0x520],rax
   14001b530:	mov    r13,rdx
   14001b533:	mov    r12,rcx
   14001b536:	and    WORD PTR [rsp+0x30],0x0
   14001b53c:	xor    ebx,ebx
   14001b53e:	lea    rcx,[rip+0x4c92b]        # 0x140067e70
   14001b545:	call   QWORD PTR [rip+0x49045]        # 0x140064590
   14001b54b:	mov    rsi,rax
   14001b54e:	lea    rdx,[rip+0x4c8fb]        # 0x140067e50
   14001b555:	mov    rcx,rax
   14001b558:	call   QWORD PTR [rip+0x4908a]        # 0x1400645e8
   14001b55e:	lea    ebp,[rbx+0x1]
   14001b561:	test   rax,rax
   14001b564:	je     0x14001b5f5
   14001b56a:	call   rax
   14001b56c:	mov    WORD PTR [rsp+0x30],ax
   14001b571:	movzx  edx,ax
   14001b574:	mov    ecx,edx
   14001b576:	mov    edi,0x3ff
   14001b57b:	and    ecx,edi
   14001b57d:	movzx  ebx,cx
   14001b580:	and    dx,0xfc00
   14001b585:	movzx  ecx,dx
   14001b588:	or     ecx,ebx
   14001b58a:	call   QWORD PTR [rip+0x48f38]        # 0x1400644c8
   14001b590:	mov    DWORD PTR [rsp+0x58],eax
   14001b594:	mov    ecx,ebx
   14001b596:	call   QWORD PTR [rip+0x48f2c]        # 0x1400644c8
   14001b59c:	mov    DWORD PTR [rsp+0x5c],eax
   14001b5a0:	lea    ebx,[rbp+0x1]
   14001b5a3:	lea    rdx,[rip+0x4c886]        # 0x140067e30
   14001b5aa:	mov    rcx,rsi
   14001b5ad:	call   QWORD PTR [rip+0x49035]        # 0x1400645e8
   14001b5b3:	test   rax,rax
   14001b5b6:	je     0x14001b764
   14001b5bc:	call   rax
   14001b5be:	mov    WORD PTR [rsp+0x30],ax
   14001b5c3:	movzx  ecx,ax
   14001b5c6:	mov    eax,ecx
   14001b5c8:	and    eax,edi
   14001b5ca:	movzx  ebx,ax
   14001b5cd:	and    cx,0xfc00
   14001b5d2:	movzx  ecx,cx
   14001b5d5:	or     ecx,ebx
   14001b5d7:	call   QWORD PTR [rip+0x48eeb]        # 0x1400644c8
   14001b5dd:	mov    DWORD PTR [rsp+0x60],eax
   14001b5e1:	mov    ecx,ebx
   14001b5e3:	call   QWORD PTR [rip+0x48edf]        # 0x1400644c8
   14001b5e9:	mov    DWORD PTR [rsp+0x64],eax
   14001b5ed:	lea    ebx,[rbp+0x3]
   14001b5f0:	jmp    0x14001b764
   14001b5f5:	call   QWORD PTR [rip+0x48ed5]        # 0x1400644d0
   14001b5fb:	bt     eax,0x1f
   14001b5ff:	jae    0x14001b6ea
   14001b605:	and    QWORD PTR [rsp+0xb0],rbx
   14001b60d:	lea    rax,[rsp+0xb0]
   14001b615:	mov    QWORD PTR [rsp+0x20],rax
   14001b61a:	mov    r9d,0x20019
   14001b620:	xor    r8d,r8d
   14001b623:	lea    rdx,[rip+0x4c7b6]        # 0x140067de0
   14001b62a:	mov    rcx,0xffffffff80000001
   14001b631:	call   QWORD PTR [rip+0x48a21]        # 0x140064058
   14001b637:	test   eax,eax
   14001b639:	jne    0x14001b764
   14001b63f:	mov    DWORD PTR [rsp+0x4c],0x20
   14001b647:	lea    rax,[rsp+0x4c]
   14001b64c:	mov    QWORD PTR [rsp+0x28],rax
   14001b651:	lea    rax,[rsp+0xb8]
   14001b659:	mov    QWORD PTR [rsp+0x20],rax
   14001b65e:	lea    r9,[rsp+0x48]
   14001b663:	xor    r8d,r8d
   14001b666:	xor    edx,edx
   14001b668:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001b670:	call   QWORD PTR [rip+0x489da]        # 0x140064050
   14001b676:	test   eax,eax
   14001b678:	jne    0x14001b6da
   14001b67a:	cmp    DWORD PTR [rsp+0x48],ebp
   14001b67e:	jne    0x14001b6da
   14001b680:	lea    r8,[rsp+0x50]
   14001b685:	lea    rdx,[rip+0x4c748]        # 0x140067dd4
   14001b68c:	lea    rcx,[rsp+0xb8]
   14001b694:	call   0x140048770
   14001b699:	cmp    eax,ebp
   14001b69b:	jne    0x14001b6da
   14001b69d:	mov    eax,DWORD PTR [rsp+0x50]
   14001b6a1:	mov    WORD PTR [rsp+0x30],ax
   14001b6a6:	movzx  ecx,ax
   14001b6a9:	mov    eax,ecx
   14001b6ab:	mov    edi,0x3ff
   14001b6b0:	and    eax,edi
   14001b6b2:	movzx  ebx,ax
   14001b6b5:	and    cx,0xfc00
   14001b6ba:	movzx  ecx,cx
   14001b6bd:	or     ecx,ebx
   14001b6bf:	call   QWORD PTR [rip+0x48e03]        # 0x1400644c8
   14001b6c5:	mov    DWORD PTR [rsp+0x58],eax
   14001b6c9:	mov    ecx,ebx
   14001b6cb:	call   QWORD PTR [rip+0x48df7]        # 0x1400644c8
   14001b6d1:	mov    DWORD PTR [rsp+0x5c],eax
   14001b6d5:	mov    ebx,0x2
   14001b6da:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001b6e2:	call   QWORD PTR [rip+0x48980]        # 0x140064068
   14001b6e8:	jmp    0x14001b764
   14001b6ea:	lea    rcx,[rip+0x4c6cf]        # 0x140067dc0
   14001b6f1:	call   QWORD PTR [rip+0x48e99]        # 0x140064590
   14001b6f7:	test   rax,rax
   14001b6fa:	je     0x14001b764
   14001b6fc:	and    WORD PTR [rsp+0x30],bx
   14001b701:	lea    rcx,[rsp+0x30]
   14001b706:	mov    QWORD PTR [rsp+0x20],rcx
   14001b70b:	lea    r9,[rip+0xfffffffffffff556]        # 0x14001ac68
   14001b712:	mov    r8,rbp
   14001b715:	mov    edx,0x10
   14001b71a:	mov    rcx,rax
   14001b71d:	call   QWORD PTR [rip+0x48db5]        # 0x1400644d8
   14001b723:	movzx  r11d,WORD PTR [rsp+0x30]
   14001b729:	test   r11w,r11w
   14001b72d:	je     0x14001b764
   14001b72f:	movzx  ecx,r11w
   14001b733:	mov    eax,ecx
   14001b735:	mov    edi,0x3ff
   14001b73a:	and    eax,edi
   14001b73c:	movzx  ebx,ax
   14001b73f:	and    cx,0xfc00
   14001b744:	movzx  ecx,cx
   14001b747:	or     ecx,ebx
   14001b749:	call   QWORD PTR [rip+0x48d79]        # 0x1400644c8
   14001b74f:	mov    DWORD PTR [rsp+0x58],eax
   14001b753:	mov    ecx,ebx
   14001b755:	call   QWORD PTR [rip+0x48d6d]        # 0x1400644c8
   14001b75b:	mov    DWORD PTR [rsp+0x5c],eax
   14001b75f:	mov    ebx,0x2
   14001b764:	movsxd rax,ebx
   14001b767:	mov    DWORD PTR [rsp+rax*4+0x58],0x800
   14001b76f:	add    ebx,ebp
   14001b771:	and    WORD PTR [rsp+0x2ea],0x0
   14001b77a:	and    WORD PTR [rsp+0x2e8],0x0
   14001b783:	mov    r8d,0x105
   14001b789:	lea    rdx,[rsp+0xe0]
   14001b791:	lea    rsi,[rip+0xfffffffffffe4868]        # 0x140000000
   14001b798:	mov    rcx,rsi
   14001b79b:	call   QWORD PTR [rip+0x48daf]        # 0x140064550
   14001b7a1:	test   eax,eax
   14001b7a3:	jne    0x14001b7ac
   14001b7a5:	xor    eax,eax
   14001b7a7:	jmp    0x14001ba4a
   14001b7ac:	mov    edi,0x38
   14001b7b1:	mov    r8,rdi
   14001b7b4:	xor    edx,edx
   14001b7b6:	lea    rcx,[rsp+0x78]
   14001b7bb:	call   0x140047720
   14001b7c0:	mov    DWORD PTR [rsp+0x78],edi
   14001b7c4:	lea    rax,[rsp+0xe0]
   14001b7cc:	mov    QWORD PTR [rsp+0x80],rax
   14001b7d4:	mov    QWORD PTR [rsp+0x98],0x3e8
   14001b7e0:	mov    QWORD PTR [rsp+0xa8],rsi
   14001b7e8:	mov    DWORD PTR [rsp+0x7c],0x88
   14001b7f0:	or     rdx,0xffffffffffffffff
   14001b7f4:	lea    rcx,[rsp+0x38]
   14001b7f9:	call   0x14001ac80
   14001b7fe:	nop
   14001b7ff:	mov    rdx,QWORD PTR [rip+0x6d392]        # 0x140088b98
   14001b806:	test   rdx,rdx
   14001b809:	je     0x14001b82f
   14001b80b:	mov    rax,QWORD PTR [rsp+0x38]
   14001b810:	cmp    rax,0xffffffffffffffff
   14001b814:	jne    0x14001b85e
   14001b816:	lea    rcx,[rsp+0x78]
   14001b81b:	call   rdx
   14001b81d:	mov    QWORD PTR [rsp+0x38],rax
   14001b822:	cmp    rax,0xffffffffffffffff
   14001b826:	setne  cl
   14001b829:	test   cl,cl
   14001b82b:	je     0x14001b85e
   14001b82d:	jmp    0x14001b834
   14001b82f:	mov    rax,QWORD PTR [rsp+0x38]
   14001b834:	mov    r8,QWORD PTR [rip+0x6d36d]        # 0x140088ba8
   14001b83b:	test   r8,r8
   14001b83e:	je     0x14001b85e
   14001b840:	cmp    rax,0xffffffffffffffff
   14001b844:	je     0x14001b85e
   14001b846:	cmp    QWORD PTR [rsp+0x40],0x0
   14001b84c:	jne    0x14001b85e
   14001b84e:	lea    rdx,[rsp+0x40]
   14001b853:	mov    rcx,rax
   14001b856:	call   r8
   14001b859:	mov    rax,QWORD PTR [rsp+0x38]
   14001b85e:	xor    edi,edi
   14001b860:	movsxd rbp,ebx
   14001b863:	test   ebx,ebx
   14001b865:	jle    0x14001ba03
   14001b86b:	mov    ecx,DWORD PTR [rsp+rdi*4+0x58]
   14001b86f:	cmp    ecx,0x800
   14001b875:	jne    0x14001b8ba
   14001b877:	lea    r8,[rip+0x4c512]        # 0x140067d90
   14001b87e:	mov    edx,0x4
   14001b883:	lea    rcx,[rsp+0xb0]
   14001b88b:	call   0x140047080
   14001b890:	test   eax,eax
   14001b892:	je     0x14001b8da
   14001b894:	cmp    eax,0xc
   14001b897:	je     0x14001b98c
   14001b89d:	cmp    eax,0x16
   14001b8a0:	je     0x14001b986
   14001b8a6:	cmp    eax,0x22
   14001b8a9:	je     0x14001b986
   14001b8af:	cmp    eax,0x50
   14001b8b2:	jne    0x14001b980
   14001b8b8:	jmp    0x14001b8da
   14001b8ba:	mov    r9d,0x4
   14001b8c0:	lea    r8,[rsp+0xb0]
   14001b8c8:	lea    edx,[r9-0x1]
   14001b8cc:	call   QWORD PTR [rip+0x48c16]        # 0x1400644e8
   14001b8d2:	test   eax,eax
   14001b8d4:	je     0x14001b96e
   14001b8da:	call   0x140048680
   14001b8df:	mov    esi,DWORD PTR [rax]
   14001b8e1:	call   0x140048680
   14001b8e6:	and    DWORD PTR [rax],0x0
   14001b8e9:	lea    rax,[rsp+0xb0]
   14001b8f1:	mov    QWORD PTR [rsp+0x28],rax
   14001b8f6:	mov    QWORD PTR [rsp+0x20],r13
   14001b8fb:	mov    r9,r12
   14001b8fe:	mov    edx,0x112
   14001b903:	lea    r8d,[rdx-0x1]
   14001b907:	lea    rcx,[rsp+0x2f0]
   14001b90f:	call   0x140047c30
   14001b914:	mov    ebx,eax
   14001b916:	call   0x140048680
   14001b91b:	cmp    DWORD PTR [rax],0x0
   14001b91e:	je     0x14001b940
   14001b920:	call   0x140048680
   14001b925:	cmp    DWORD PTR [rax],0x0
   14001b928:	je     0x14001b947
   14001b92a:	cmp    DWORD PTR [rax],0xc
   14001b92d:	je     0x14001b9a8
   14001b92f:	cmp    DWORD PTR [rax],0x16
   14001b932:	je     0x14001b99d
   14001b934:	cmp    DWORD PTR [rax],0x22
   14001b937:	je     0x14001b99d
   14001b939:	cmp    DWORD PTR [rax],0x50
   14001b93c:	jne    0x14001b992
   14001b93e:	jmp    0x14001b947
   14001b940:	call   0x140048680
   14001b945:	mov    DWORD PTR [rax],esi
   14001b947:	cmp    ebx,0xffffffff
   14001b94a:	je     0x14001b967
   14001b94c:	cmp    ebx,0x112
   14001b952:	jae    0x14001b967
   14001b954:	lea    rcx,[rsp+0x2f0]
   14001b95c:	call   QWORD PTR [rip+0x48c7e]        # 0x1400645e0
   14001b962:	mov    rbx,rax
   14001b965:	jmp    0x14001b969
   14001b967:	xor    ebx,ebx
   14001b969:	test   rbx,rbx
   14001b96c:	jne    0x14001b9b3
   14001b96e:	add    rdi,0x1
   14001b972:	cmp    rdi,rbp
   14001b975:	jge    0x14001b9fe
   14001b97b:	jmp    0x14001b86b
   14001b980:	call   0x1400208f8
   14001b985:	int3   
   14001b986:	call   0x1400208f8
   14001b98b:	int3   
   14001b98c:	call   0x1400208b0
   14001b991:	int3   
   14001b992:	mov    ecx,0x80004005
   14001b997:	call   0x140001430
   14001b99c:	int3   
   14001b99d:	mov    ecx,0x80070057
   14001b9a2:	call   0x140001430
   14001b9a7:	int3   
   14001b9a8:	mov    ecx,0x8007000e
   14001b9ad:	call   0x140001430
   14001b9b2:	nop
   14001b9b3:	mov    rax,QWORD PTR [rip+0x6d1e6]        # 0x140088ba0
   14001b9ba:	test   rax,rax
   14001b9bd:	je     0x14001b9f9
   14001b9bf:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b9c4:	cmp    rcx,0xffffffffffffffff
   14001b9c8:	je     0x14001b9f9
   14001b9ca:	mov    r8,QWORD PTR [rip+0x6d1df]        # 0x140088bb0
   14001b9d1:	test   r8,r8
   14001b9d4:	je     0x14001b9f7
   14001b9d6:	mov    rdx,QWORD PTR [rsp+0x40]
   14001b9db:	test   rdx,rdx
   14001b9de:	je     0x14001b9f7
   14001b9e0:	and    QWORD PTR [rsp+0x40],0x0
   14001b9e6:	xor    ecx,ecx
   14001b9e8:	call   r8
   14001b9eb:	mov    rax,QWORD PTR [rip+0x6d1ae]        # 0x140088ba0
   14001b9f2:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b9f7:	call   rax
   14001b9f9:	mov    rax,rbx
   14001b9fc:	jmp    0x14001ba4a
   14001b9fe:	mov    rax,QWORD PTR [rsp+0x38]
   14001ba03:	mov    r8,QWORD PTR [rip+0x6d196]        # 0x140088ba0
   14001ba0a:	test   r8,r8
   14001ba0d:	je     0x14001ba48
   14001ba0f:	cmp    rax,0xffffffffffffffff
   14001ba13:	je     0x14001ba48
   14001ba15:	mov    r9,QWORD PTR [rip+0x6d194]        # 0x140088bb0
   14001ba1c:	test   r9,r9
   14001ba1f:	je     0x14001ba42
   14001ba21:	mov    rdx,QWORD PTR [rsp+0x40]
   14001ba26:	test   rdx,rdx
   14001ba29:	je     0x14001ba42
   14001ba2b:	and    QWORD PTR [rsp+0x40],0x0
   14001ba31:	xor    ecx,ecx
   14001ba33:	call   r9
   14001ba36:	mov    r8,QWORD PTR [rip+0x6d163]        # 0x140088ba0
   14001ba3d:	mov    rax,QWORD PTR [rsp+0x38]
   14001ba42:	mov    rcx,rax
   14001ba45:	call   r8
   14001ba48:	xor    eax,eax
   14001ba4a:	mov    rcx,QWORD PTR [rsp+0x520]
   14001ba52:	xor    rcx,rsp
   14001ba55:	call   0x140046470
   14001ba5a:	mov    rbx,QWORD PTR [rsp+0x570]
   14001ba62:	add    rsp,0x530
   14001ba69:	pop    r13
   14001ba6b:	pop    r12
   14001ba6d:	pop    rdi
   14001ba6e:	pop    rsi
   14001ba6f:	pop    rbp
   14001ba70:	ret    
   14001ba71:	int3   
   14001ba72:	int3   
   14001ba73:	int3   
   14001ba74:	int3   
   14001ba75:	int3   
   14001ba76:	int3   
   14001ba77:	int3   
   14001ba78:	int3   
   14001ba79:	int3   
   14001ba7a:	int3   
   14001ba7b:	int3   
   14001ba7c:	int3   
   14001ba7d:	int3   
   14001ba7e:	int3   
   14001ba7f:	int3   
   14001ba80:	rex push rbp
   14001ba82:	sub    rsp,0x20
   14001ba86:	mov    rbp,rdx
   14001ba89:	lea    rcx,[rbp+0x38]
   14001ba8d:	call   0x14001b4b0
   14001ba92:	add    rsp,0x20
   14001ba96:	pop    rbp
   14001ba97:	ret    
   14001ba98:	sub    rsp,0x268
   14001ba9f:	mov    rax,QWORD PTR [rip+0x6b2ca]        # 0x140086d70
   14001baa6:	xor    rax,rsp
   14001baa9:	mov    QWORD PTR [rsp+0x250],rax
   14001bab1:	mov    rcx,QWORD PTR [rcx+0x88]
   14001bab8:	lea    rdx,[rsp+0x40]
   14001babd:	mov    r8d,0x104
   14001bac3:	call   QWORD PTR [rip+0x48a87]        # 0x140064550
   14001bac9:	test   eax,eax
   14001bacb:	je     0x14001bb19
   14001bacd:	cmp    eax,0x104
   14001bad2:	je     0x14001bb19
   14001bad4:	lea    rcx,[rsp+0x40]
   14001bad9:	call   QWORD PTR [rip+0x48c99]        # 0x140064778
   14001badf:	lea    rcx,[rsp+0x20]
   14001bae4:	lea    rdx,[rsp+0x40]
   14001bae9:	and    WORD PTR [rax],0x0
   14001baed:	mov    rax,QWORD PTR [rip+0x4c39c]        # 0x140067e90
   14001baf4:	mov    QWORD PTR [rcx],rax
   14001baf7:	mov    rax,QWORD PTR [rip+0x4c39a]        # 0x140067e98
   14001bafe:	mov    QWORD PTR [rcx+0x8],rax
   14001bb02:	movzx  eax,WORD PTR [rip+0x4c397]        # 0x140067ea0
   14001bb09:	mov    WORD PTR [rcx+0x10],ax
   14001bb0d:	lea    rcx,[rsp+0x20]
   14001bb12:	call   0x14001b500
   14001bb17:	jmp    0x14001bb1b
   14001bb19:	xor    eax,eax
   14001bb1b:	mov    rcx,QWORD PTR [rsp+0x250]
   14001bb23:	xor    rcx,rsp
   14001bb26:	call   0x140046470
   14001bb2b:	add    rsp,0x268
   14001bb32:	ret    
   14001bb33:	int3   
   14001bb34:	mov    QWORD PTR [rsp+0x8],rcx
   14001bb39:	push   rdi
   14001bb3a:	sub    rsp,0x30
   14001bb3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001bb47:	mov    QWORD PTR [rsp+0x48],rbx
   14001bb4c:	mov    QWORD PTR [rsp+0x50],rsi
   14001bb51:	mov    rdi,rdx
   14001bb54:	mov    rbx,rcx
   14001bb57:	call   0x14001cd54
   14001bb5c:	nop
   14001bb5d:	lea    rax,[rip+0x4c374]        # 0x140067ed8
   14001bb64:	mov    QWORD PTR [rbx],rax
   14001bb67:	xor    esi,esi
   14001bb69:	cmp    rdi,rsi
   14001bb6c:	je     0x14001bb7f
   14001bb6e:	mov    rcx,rdi
   14001bb71:	call   0x140048830
   14001bb76:	mov    QWORD PTR [rbx+0xa0],rax
   14001bb7d:	jmp    0x14001bb86
   14001bb7f:	mov    QWORD PTR [rbx+0xa0],rsi
   14001bb86:	call   0x140021a70
   14001bb8b:	mov    rdi,rax
   14001bb8e:	mov    ecx,esi
   14001bb90:	cmp    rax,rsi
   14001bb93:	setne  cl
   14001bb96:	cmp    ecx,esi
   14001bb98:	jne    0x14001bba0
   14001bb9a:	call   0x1400208f8
   14001bb9f:	int3   
   14001bba0:	lea    rcx,[rax+0xc0]
   14001bba7:	lea    rdx,[rip+0xfffffffffffff672]        # 0x14001b220
   14001bbae:	call   0x14002d3a8
   14001bbb3:	mov    ecx,esi
   14001bbb5:	cmp    rax,rsi
   14001bbb8:	setne  cl
   14001bbbb:	cmp    ecx,esi
   14001bbbd:	jne    0x14001bbc5
   14001bbbf:	call   0x1400208f8
   14001bbc4:	int3   
   14001bbc5:	cmp    ecx,esi
   14001bbc7:	jne    0x14001bbcf
   14001bbc9:	call   0x1400208f8
   14001bbce:	int3   
   14001bbcf:	mov    QWORD PTR [rax+0x8],rbx
   14001bbd3:	call   QWORD PTR [rip+0x488df]        # 0x1400644b8
   14001bbd9:	mov    QWORD PTR [rbx+0x58],rax
   14001bbdd:	call   QWORD PTR [rip+0x488dd]        # 0x1400644c0
   14001bbe3:	mov    DWORD PTR [rbx+0x60],eax
   14001bbe6:	mov    QWORD PTR [rdi+0x8],rbx
   14001bbea:	mov    QWORD PTR [rbx+0x88],rsi
   14001bbf1:	mov    QWORD PTR [rbx+0xf8],rsi
   14001bbf8:	mov    QWORD PTR [rbx+0xc8],rsi
   14001bbff:	mov    QWORD PTR [rbx+0xd0],rsi
   14001bc06:	mov    QWORD PTR [rbx+0xa8],rsi
   14001bc0d:	mov    QWORD PTR [rbx+0xc0],rsi
   14001bc14:	mov    QWORD PTR [rbx+0x110],rsi
   14001bc1b:	mov    QWORD PTR [rbx+0xb0],rsi
   14001bc22:	mov    WORD PTR [rbx+0x122],si
   14001bc29:	mov    WORD PTR [rbx+0x120],si
   14001bc30:	mov    QWORD PTR [rbx+0x90],rsi
   14001bc37:	mov    QWORD PTR [rbx+0x118],rsi
   14001bc3e:	mov    DWORD PTR [rbx+0x100],esi
   14001bc44:	mov    QWORD PTR [rbx+0x108],rsi
   14001bc4b:	mov    QWORD PTR [rbx+0xe0],rsi
   14001bc52:	mov    QWORD PTR [rbx+0xe8],rsi
   14001bc59:	mov    DWORD PTR [rbx+0x124],esi
   14001bc5f:	mov    QWORD PTR [rbx+0x130],rsi
   14001bc66:	mov    DWORD PTR [rbx+0xb8],esi
   14001bc6c:	mov    DWORD PTR [rbx+0xd8],esi
   14001bc72:	mov    QWORD PTR [rbx+0x128],0x200
   14001bc7d:	mov    rax,rbx
   14001bc80:	mov    rbx,QWORD PTR [rsp+0x48]
   14001bc85:	mov    rsi,QWORD PTR [rsp+0x50]
   14001bc8a:	add    rsp,0x30
   14001bc8e:	pop    rdi
   14001bc8f:	ret    
   14001bc90:	int3   
   14001bc91:	int3   
   14001bc92:	int3   
   14001bc93:	int3   
   14001bc94:	rex push rbp
   14001bc96:	sub    rsp,0x20
   14001bc9a:	mov    rbp,rdx
   14001bc9d:	mov    rcx,QWORD PTR [rbp+0x40]
   14001bca1:	call   0x14001c930
   14001bca6:	add    rsp,0x20
   14001bcaa:	pop    rbp
   14001bcab:	ret    
   14001bcac:	rex push rbx
   14001bcae:	sub    rsp,0x460
   14001bcb5:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001bcbe:	mov    rax,QWORD PTR [rip+0x6b0ab]        # 0x140086d70
   14001bcc5:	xor    rax,rsp
   14001bcc8:	mov    QWORD PTR [rsp+0x450],rax
   14001bcd0:	mov    rbx,rcx
   14001bcd3:	mov    QWORD PTR [rsp+0x38],rcx
   14001bcd8:	lea    rax,[rip+0x4c1f9]        # 0x140067ed8
   14001bcdf:	mov    QWORD PTR [rcx],rax
   14001bce2:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001bce9:	test   rcx,rcx
   14001bcec:	je     0x14001bcf9
   14001bcee:	mov    rax,QWORD PTR [rcx]
   14001bcf1:	mov    edx,0x1
   14001bcf6:	call   QWORD PTR [rax+0x8]
   14001bcf9:	mov    rcx,QWORD PTR [rbx+0x110]
   14001bd00:	test   rcx,rcx
   14001bd03:	je     0x14001bd10
   14001bd05:	mov    rax,QWORD PTR [rcx]
   14001bd08:	mov    edx,0x1
   14001bd0d:	call   QWORD PTR [rax+0x30]
   14001bd10:	call   0x140021a70
   14001bd15:	cmp    BYTE PTR [rax+0x28],0x0
   14001bd19:	jne    0x14001bd59
   14001bd1b:	mov    rcx,QWORD PTR [rip+0x6ce6e]        # 0x140088b90
   14001bd22:	test   rcx,rcx
   14001bd25:	je     0x14001bd3a
   14001bd27:	mov    rax,QWORD PTR [rcx]
   14001bd2a:	mov    edx,0x1
   14001bd2f:	call   QWORD PTR [rax+0x8]
   14001bd32:	and    QWORD PTR [rip+0x6ce56],0x0        # 0x140088b90
   14001bd3a:	mov    rcx,QWORD PTR [rip+0x6ce47]        # 0x140088b88
   14001bd41:	test   rcx,rcx
   14001bd44:	je     0x14001bd59
   14001bd46:	mov    rax,QWORD PTR [rcx]
   14001bd49:	mov    edx,0x1
   14001bd4e:	call   QWORD PTR [rax+0x8]
   14001bd51:	and    QWORD PTR [rip+0x6ce2f],0x0        # 0x140088b88
   14001bd59:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001bd60:	test   rcx,rcx
   14001bd63:	je     0x14001bd6a
   14001bd65:	call   0x14002ca04
   14001bd6a:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001bd71:	test   rcx,rcx
   14001bd74:	je     0x14001bd7b
   14001bd76:	call   0x14002ca04
   14001bd7b:	movzx  ecx,WORD PTR [rbx+0x120]
   14001bd82:	test   cx,cx
   14001bd85:	je     0x14001bd8d
   14001bd87:	call   QWORD PTR [rip+0x48723]        # 0x1400644b0
   14001bd8d:	movzx  ecx,WORD PTR [rbx+0x122]
   14001bd94:	test   cx,cx
   14001bd97:	je     0x14001bd9f
   14001bd99:	call   QWORD PTR [rip+0x48711]        # 0x1400644b0
   14001bd9f:	mov    rcx,QWORD PTR [rbx+0x118]
   14001bda6:	test   rcx,rcx
   14001bda9:	je     0x14001bdb6
   14001bdab:	mov    rax,QWORD PTR [rcx]
   14001bdae:	mov    edx,0x1
   14001bdb3:	call   QWORD PTR [rax+0x8]
   14001bdb6:	call   0x140021a70
   14001bdbb:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001bdc2:	cmp    QWORD PTR [rax+0x20],rcx
   14001bdc6:	jne    0x14001bdcd
   14001bdc8:	and    QWORD PTR [rax+0x20],0x0
   14001bdcd:	cmp    QWORD PTR [rax+0x8],rbx
   14001bdd1:	jne    0x14001bdd8
   14001bdd3:	and    QWORD PTR [rax+0x8],0x0
   14001bdd8:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001bddf:	call   0x1400485c0
   14001bde4:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001bdeb:	call   0x1400485c0
   14001bdf0:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001bdf7:	call   0x1400485c0
   14001bdfc:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001be03:	call   0x1400485c0
   14001be08:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001be0f:	call   0x1400485c0
   14001be14:	and    QWORD PTR [rbx+0x58],0x0
   14001be19:	jmp    0x14001be20
   14001be1b:	mov    rbx,QWORD PTR [rsp+0x38]
   14001be20:	mov    rcx,rbx
   14001be23:	call   0x14001c930
   14001be28:	mov    rcx,QWORD PTR [rsp+0x450]
   14001be30:	xor    rcx,rsp
   14001be33:	call   0x140046470
   14001be38:	add    rsp,0x460
   14001be3f:	pop    rbx
   14001be40:	ret    
   14001be41:	int3   
   14001be42:	int3   
   14001be43:	int3   
   14001be44:	int3   
   14001be45:	int3   
   14001be46:	int3   
   14001be47:	int3   
   14001be48:	int3   
   14001be49:	int3   
   14001be4a:	int3   
   14001be4b:	int3   
   14001be4c:	rex push rbp
   14001be4e:	sub    rsp,0x20
   14001be52:	mov    rbp,rdx
   14001be55:	mov    rcx,QWORD PTR [rbp+0x38]
   14001be59:	call   0x14001c930
   14001be5e:	add    rsp,0x20
   14001be62:	pop    rbp
   14001be63:	ret    
   14001be64:	int3   
   14001be65:	int3   
   14001be66:	int3   
   14001be67:	int3   
   14001be68:	int3   
   14001be69:	int3   
   14001be6a:	int3   
   14001be6b:	int3   
   14001be6c:	mov    QWORD PTR [rsp+0x10],rdx
   14001be71:	push   rbx
   14001be72:	push   rbp
   14001be73:	sub    rsp,0x38
   14001be77:	mov    rbp,rdx
   14001be7a:	call   0x14002b874
   14001be7f:	mov    r11,rax
   14001be82:	xor    ecx,ecx
   14001be84:	test   rax,rax
   14001be87:	setne  cl
   14001be8a:	test   ecx,ecx
   14001be8c:	jne    0x14001be99
   14001be8e:	mov    ecx,0x80004005
   14001be93:	call   0x140001430
   14001be98:	int3   
   14001be99:	mov    rax,QWORD PTR [rax]
   14001be9c:	mov    rcx,r11
   14001be9f:	call   QWORD PTR [rax+0x18]
   14001bea2:	add    rax,0x18
   14001bea6:	mov    QWORD PTR [rbp+0x30],rax
   14001beaa:	mov    rcx,QWORD PTR [rbp+0x40]
   14001beae:	mov    rax,QWORD PTR [rcx]
   14001beb1:	xor    r9d,r9d
   14001beb4:	mov    r8d,0x200
   14001beba:	lea    rdx,[rbp+0x50]
   14001bebe:	call   QWORD PTR [rax+0x18]
   14001bec1:	test   eax,eax
   14001bec3:	je     0x14001bef6
   14001bec5:	lea    rax,[rbp+0x50]
   14001bec9:	mov    QWORD PTR [rsp+0x28],rax
   14001bece:	mov    DWORD PTR [rsp+0x20],0x33f
   14001bed6:	lea    r9,[rip+0x4c1eb]        # 0x1400680c8
   14001bedd:	lea    r8,[rip+0x4c1c4]        # 0x1400680a8
   14001bee4:	lea    rdx,[rip+0x4c19d]        # 0x140068088
   14001beeb:	lea    rcx,[rbp+0x30]
   14001beef:	call   0x140004180
   14001bef4:	jmp    0x14001bf1c
   14001bef6:	mov    DWORD PTR [rsp+0x20],0x33f
   14001befe:	lea    r9,[rip+0x4c1c3]        # 0x1400680c8
   14001bf05:	lea    r8,[rip+0x4c19c]        # 0x1400680a8
   14001bf0c:	lea    rdx,[rip+0x4c15d]        # 0x140068070
   14001bf13:	lea    rcx,[rbp+0x30]
   14001bf17:	call   0x140004180
   14001bf1c:	xor    r8d,r8d
   14001bf1f:	xor    edx,edx
   14001bf21:	mov    rbx,QWORD PTR [rbp+0x30]
   14001bf25:	mov    rcx,rbx
   14001bf28:	call   0x14001dd9c
   14001bf2d:	nop
   14001bf2e:	lea    rdx,[rbx-0x18]
   14001bf32:	or     eax,0xffffffff
   14001bf35:	lock xadd DWORD PTR [rdx+0x10],eax
   14001bf3a:	add    eax,0xffffffff
   14001bf3d:	test   eax,eax
   14001bf3f:	jg     0x14001bf4a
   14001bf41:	mov    rcx,QWORD PTR [rdx]
   14001bf44:	mov    rax,QWORD PTR [rcx]
   14001bf47:	call   QWORD PTR [rax+0x8]
   14001bf4a:	mov    rcx,QWORD PTR [rbp+0x40]
   14001bf4e:	mov    rax,QWORD PTR [rcx]
   14001bf51:	mov    edx,0x1
   14001bf56:	call   QWORD PTR [rax+0x8]
   14001bf59:	nop
   14001bf5a:	lea    rax,[rip+0xfffffffffffffeba]        # 0x14001be1b
   14001bf61:	jmp    0x14001bf63
   14001bf63:	add    rsp,0x38
   14001bf67:	pop    rbp
   14001bf68:	pop    rbx
   14001bf69:	ret    
   14001bf6a:	int3   
   14001bf6b:	int3   
   14001bf6c:	rex push rbp
   14001bf6e:	sub    rsp,0x20
   14001bf72:	mov    rbp,rdx
   14001bf75:	lea    rcx,[rbp+0x30]
   14001bf79:	call   0x1400010c0
   14001bf7e:	add    rsp,0x20
   14001bf82:	pop    rbp
   14001bf83:	ret    
   14001bf84:	mov    QWORD PTR [rsp+0x8],rbx
   14001bf89:	push   rdi
   14001bf8a:	sub    rsp,0x20
   14001bf8e:	mov    ebx,edx
   14001bf90:	mov    rdi,rcx
   14001bf93:	call   0x14001bcac
   14001bf98:	test   bl,0x1
   14001bf9b:	je     0x14001bfa5
   14001bf9d:	mov    rcx,rdi
   14001bfa0:	call   0x14001ac50
   14001bfa5:	mov    rax,rdi
   14001bfa8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bfad:	add    rsp,0x20
   14001bfb1:	pop    rdi
   14001bfb2:	ret    
   14001bfb3:	int3   
   14001bfb4:	rex push rbx
   14001bfb6:	sub    rsp,0x20
   14001bfba:	mov    edx,DWORD PTR [rcx+0xf0]
   14001bfc0:	test   edx,edx
   14001bfc2:	je     0x14001bfdd
   14001bfc4:	cmp    edx,0x3f107
   14001bfca:	je     0x14001c024
   14001bfcc:	mov    rax,QWORD PTR [rcx]
   14001bfcf:	mov    r8d,0x1
   14001bfd5:	call   QWORD PTR [rax+0x158]
   14001bfdb:	jmp    0x14001c024
   14001bfdd:	call   0x14001c840
   14001bfe2:	test   rax,rax
   14001bfe5:	je     0x14001bff8
   14001bfe7:	mov    rdx,QWORD PTR [rax]
   14001bfea:	mov    rcx,rax
   14001bfed:	call   QWORD PTR [rdx+0xe8]
   14001bff3:	mov    rbx,rax
   14001bff6:	jmp    0x14001bffa
   14001bff8:	xor    ebx,ebx
   14001bffa:	test   rbx,rbx
   14001bffd:	jne    0x14001c005
   14001bfff:	call   0x1400208f8
   14001c004:	int3   
   14001c005:	mov    rax,QWORD PTR [rbx]
   14001c008:	mov    rcx,rbx
   14001c00b:	call   QWORD PTR [rax+0x240]
   14001c011:	mov    rcx,rbx
   14001c014:	test   eax,eax
   14001c016:	jne    0x14001c01f
   14001c018:	call   0x14002d644
   14001c01d:	jmp    0x14001c024
   14001c01f:	call   0x14002d724
   14001c024:	add    rsp,0x20
   14001c028:	pop    rbx
   14001c029:	ret    
   14001c02a:	int3   
   14001c02b:	int3   
   14001c02c:	mov    QWORD PTR [rsp+0x8],rbx
   14001c031:	push   rdi
   14001c032:	sub    rsp,0x20
   14001c036:	test   rcx,rcx
   14001c039:	mov    r10,r9
   14001c03c:	jne    0x14001c044
   14001c03e:	call   0x1400208f8
   14001c043:	int3   
   14001c044:	mov    rax,QWORD PTR [rsp+0x60]
   14001c049:	mov    ebx,0x1
   14001c04e:	test   rax,rax
   14001c051:	je     0x14001c05f
   14001c053:	mov    QWORD PTR [rax],rcx
   14001c056:	mov    QWORD PTR [rax+0x8],r9
   14001c05a:	jmp    0x14001c1a1
   14001c05f:	mov    rax,QWORD PTR [rsp+0x58]
   14001c064:	cmp    rax,0x3e
   14001c068:	ja     0x14001c114
   14001c06e:	je     0x14001c0f5
   14001c074:	sub    rax,0x38
   14001c078:	je     0x14001c0ed
   14001c07a:	sub    rax,rbx
   14001c07d:	je     0x14001c0e5
   14001c07f:	sub    rax,rbx
   14001c082:	je     0x14001c0dd
   14001c084:	sub    rax,rbx
   14001c087:	je     0x14001c0d5
   14001c089:	sub    rax,rbx
   14001c08c:	je     0x14001c0b6
   14001c08e:	cmp    rax,rbx
   14001c091:	jne    0x14001c12e
   14001c097:	mov    rdx,QWORD PTR [rsp+0x50]
   14001c09c:	test   rdx,rdx
   14001c09f:	jne    0x14001c0a7
   14001c0a1:	call   0x1400208f8
   14001c0a6:	int3   
   14001c0a7:	mov    r8,QWORD PTR [rdx]
   14001c0aa:	mov    rdx,QWORD PTR [rdx+0x8]
   14001c0ae:	call   r10
   14001c0b1:	jmp    0x14001c19f
   14001c0b6:	mov    rdx,QWORD PTR [rsp+0x50]
   14001c0bb:	test   rdx,rdx
   14001c0be:	jne    0x14001c0c6
   14001c0c0:	call   0x1400208f8
   14001c0c5:	int3   
   14001c0c6:	mov    r8,QWORD PTR [rdx]
   14001c0c9:	mov    rdx,QWORD PTR [rdx+0x8]
   14001c0cd:	call   r10
   14001c0d0:	jmp    0x14001c1a1
   14001c0d5:	call   r10
   14001c0d8:	jmp    0x14001c19f
   14001c0dd:	call   r10
   14001c0e0:	jmp    0x14001c1a1
   14001c0e5:	call   r10
   14001c0e8:	jmp    0x14001c19f
   14001c0ed:	call   r10
   14001c0f0:	jmp    0x14001c1a1
   14001c0f5:	mov    r8,QWORD PTR [rsp+0x50]
   14001c0fa:	test   r8,r8
   14001c0fd:	jne    0x14001c105
   14001c0ff:	call   0x1400208f8
   14001c104:	int3   
   14001c105:	mov    r9,QWORD PTR [r8]
   14001c108:	mov    r8,QWORD PTR [r8+0x8]
   14001c10c:	call   r10
   14001c10f:	jmp    0x14001c1a1
   14001c114:	sub    rax,0x3f
   14001c118:	je     0x14001c185
   14001c11a:	sub    rax,rbx
   14001c11d:	je     0x14001c16d
   14001c11f:	sub    rax,rbx
   14001c122:	je     0x14001c146
   14001c124:	sub    rax,rbx
   14001c127:	je     0x14001c13c
   14001c129:	cmp    rax,rbx
   14001c12c:	je     0x14001c132
   14001c12e:	xor    eax,eax
   14001c130:	jmp    0x14001c1a3
   14001c132:	mov    rdx,QWORD PTR [rsp+0x50]
   14001c137:	call   r10
   14001c13a:	jmp    0x14001c19f
   14001c13c:	mov    rdx,QWORD PTR [rsp+0x50]
   14001c141:	call   r10
   14001c144:	jmp    0x14001c1a1
   14001c146:	mov    rdi,QWORD PTR [rsp+0x50]
   14001c14b:	test   rdi,rdi
   14001c14e:	jne    0x14001c156
   14001c150:	call   0x1400208f8
   14001c155:	int3   
   14001c156:	mov    r8d,edx
   14001c159:	mov    rdx,rdi
   14001c15c:	call   r10
   14001c15f:	xor    eax,eax
   14001c161:	cmp    DWORD PTR [rdi+0x2c],eax
   14001c164:	sete   al
   14001c167:	and    DWORD PTR [rdi+0x2c],0x0
   14001c16b:	jmp    0x14001c19f
   14001c16d:	mov    rdi,QWORD PTR [rsp+0x50]
   14001c172:	test   rdi,rdi
   14001c175:	jne    0x14001c17d
   14001c177:	call   0x1400208f8
   14001c17c:	int3   
   14001c17d:	mov    rdx,rdi
   14001c180:	call   r10
   14001c183:	jmp    0x14001c15f
   14001c185:	mov    r8,QWORD PTR [rsp+0x50]
   14001c18a:	test   r8,r8
   14001c18d:	jne    0x14001c195
   14001c18f:	call   0x1400208f8
   14001c194:	int3   
   14001c195:	mov    r9,QWORD PTR [r8]
   14001c198:	mov    r8,QWORD PTR [r8+0x8]
   14001c19c:	call   r10
   14001c19f:	mov    ebx,eax
   14001c1a1:	mov    eax,ebx
   14001c1a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c1a8:	add    rsp,0x20
   14001c1ac:	pop    rdi
   14001c1ad:	ret    
   14001c1ae:	int3   
   14001c1af:	int3   
   14001c1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c1b5:	mov    QWORD PTR [rsp+0x10],rbp
   14001c1ba:	mov    QWORD PTR [rsp+0x18],rsi
   14001c1bf:	push   rdi
   14001c1c0:	push   r12
   14001c1c2:	push   r13
   14001c1c4:	sub    rsp,0x40
   14001c1c8:	cmp    r8d,0xfffffffe
   14001c1cc:	mov    r12,r9
   14001c1cf:	mov    ebx,r8d
   14001c1d2:	mov    r13d,edx
   14001c1d5:	mov    rsi,rcx
   14001c1d8:	jne    0x14001c217
   14001c1da:	call   0x140021a70
   14001c1df:	cmp    QWORD PTR [rax+0x68],0x0
   14001c1e4:	jne    0x14001c1ec
   14001c1e6:	call   0x1400208f8
   14001c1eb:	int3   
   14001c1ec:	call   0x140021a70
   14001c1f1:	mov    r9,r12
   14001c1f4:	mov    r8d,r13d
   14001c1f7:	mov    rcx,QWORD PTR [rax+0x68]
   14001c1fb:	mov    rax,QWORD PTR [rsp+0x80]
   14001c203:	mov    rdx,rsi
   14001c206:	mov    r10,QWORD PTR [rcx]
   14001c209:	mov    QWORD PTR [rsp+0x20],rax
   14001c20e:	call   QWORD PTR [r10+0x8]
   14001c212:	jmp    0x14001c2ea
   14001c217:	cmp    ebx,0xfffffffd
   14001c21a:	jne    0x14001c2a2
   14001c220:	xor    edi,edi
   14001c222:	test   r9,r9
   14001c225:	jne    0x14001c22d
   14001c227:	call   0x1400208f8
   14001c22c:	int3   
   14001c22d:	mov    rax,QWORD PTR [rcx]
   14001c230:	mov    rbp,QWORD PTR [r9+0x50]
   14001c234:	call   QWORD PTR [rax+0x58]
   14001c237:	test   rax,rax
   14001c23a:	mov    rsi,rax
   14001c23d:	je     0x14001c29e
   14001c23f:	test   edi,edi
   14001c241:	jne    0x14001c29e
   14001c243:	mov    rbx,QWORD PTR [rsi+0x8]
   14001c247:	jmp    0x14001c28f
   14001c249:	cmp    DWORD PTR [rbx+0xc],0x0
   14001c24d:	je     0x14001c296
   14001c24f:	test   edi,edi
   14001c251:	jne    0x14001c296
   14001c253:	cmp    r13d,ecx
   14001c256:	jne    0x14001c28b
   14001c258:	test   rbp,rbp
   14001c25b:	jne    0x14001c264
   14001c25d:	cmp    QWORD PTR [rbx],rbp
   14001c260:	je     0x14001c27e
   14001c262:	jmp    0x14001c28b
   14001c264:	mov    rdx,QWORD PTR [rbx]
   14001c267:	test   rdx,rdx
   14001c26a:	je     0x14001c28b
   14001c26c:	mov    r8d,0x10
   14001c272:	mov    rcx,rbp
   14001c275:	call   0x1400488e0
   14001c27a:	test   eax,eax
   14001c27c:	jne    0x14001c28b
   14001c27e:	mov    eax,DWORD PTR [rbx+0xc]
   14001c281:	mov    edi,0x1
   14001c286:	mov    DWORD PTR [r12+0x8],eax
   14001c28b:	add    rbx,0x10
   14001c28f:	mov    ecx,DWORD PTR [rbx+0x8]
   14001c292:	test   ecx,ecx
   14001c294:	jne    0x14001c249
   14001c296:	mov    rsi,QWORD PTR [rsi]
   14001c299:	test   rsi,rsi
   14001c29c:	jne    0x14001c23f
   14001c29e:	mov    eax,edi
   14001c2a0:	jmp    0x14001c2ea
   14001c2a2:	cmp    ebx,0xffffffff
   14001c2a5:	je     0x14001c2b7
   14001c2a7:	mov    eax,ebx
   14001c2a9:	movzx  ebx,bx
   14001c2ac:	shr    rax,0x10
   14001c2b0:	movzx  ebp,ax
   14001c2b3:	test   ebp,ebp
   14001c2b5:	jne    0x14001c2bc
   14001c2b7:	mov    ebp,0x111
   14001c2bc:	mov    rax,QWORD PTR [rcx]
   14001c2bf:	call   QWORD PTR [rax+0x50]
   14001c2c2:	jmp    0x14001c2df
   14001c2c4:	mov    rcx,QWORD PTR [rdi+0x8]
   14001c2c8:	mov    r9d,r13d
   14001c2cb:	mov    r8d,ebx
   14001c2ce:	mov    edx,ebp
   14001c2d0:	call   0x140022b28
   14001c2d5:	test   rax,rax
   14001c2d8:	mov    r9,rax
   14001c2db:	jne    0x14001c303
   14001c2dd:	call   QWORD PTR [rdi]
   14001c2df:	cmp    QWORD PTR [rax],0x0
   14001c2e3:	mov    rdi,rax
   14001c2e6:	jne    0x14001c2c4
   14001c2e8:	xor    eax,eax
   14001c2ea:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c2ef:	mov    rbp,QWORD PTR [rsp+0x68]
   14001c2f4:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c2f9:	add    rsp,0x40
   14001c2fd:	pop    r13
   14001c2ff:	pop    r12
   14001c301:	pop    rdi
   14001c302:	ret    
   14001c303:	mov    rax,QWORD PTR [rsp+0x80]
   14001c30b:	mov    r8d,ebx
   14001c30e:	mov    edx,r13d
   14001c311:	mov    QWORD PTR [rsp+0x30],rax
   14001c316:	mov    rax,QWORD PTR [r9+0x10]
   14001c31a:	mov    r9,QWORD PTR [r9+0x18]
   14001c31e:	mov    QWORD PTR [rsp+0x28],rax
   14001c323:	mov    rcx,rsi
   14001c326:	mov    QWORD PTR [rsp+0x20],r12
   14001c32b:	call   0x14001c02c
   14001c330:	jmp    0x14001c2ea
   14001c332:	int3   
   14001c333:	int3   
   14001c334:	xor    eax,eax
   14001c336:	ret    
   14001c337:	int3   
   14001c338:	mov    eax,0x80029c4a
   14001c33d:	ret    
   14001c33e:	int3   
   14001c33f:	int3   
   14001c340:	lea    rax,[rip+0x4be09]        # 0x140068150
   14001c347:	ret    
   14001c348:	lea    rax,[rip+0x4be69]        # 0x1400681b8
   14001c34f:	ret    
   14001c350:	lea    rax,[rip+0x4be99]        # 0x1400681f0
   14001c357:	ret    
   14001c358:	rex push rbx
   14001c35a:	sub    rsp,0x20
   14001c35e:	mov    rbx,rcx
   14001c361:	mov    ecx,0xd
   14001c366:	call   0x14002d810
   14001c36b:	mov    r11,QWORD PTR [rbx]
   14001c36e:	mov    rcx,rbx
   14001c371:	call   QWORD PTR [r11+0x40]
   14001c375:	test   rax,rax
   14001c378:	je     0x14001c382
   14001c37a:	mov    rcx,rax
   14001c37d:	call   0x140020e64
   14001c382:	mov    ecx,0xd
   14001c387:	call   0x14002d8a4
   14001c38c:	mov    r11,QWORD PTR [rbx]
   14001c38f:	mov    edx,0x1
   14001c394:	mov    rcx,rbx
   14001c397:	add    rsp,0x20
   14001c39b:	pop    rbx
   14001c39c:	rex.WB jmp QWORD PTR [r11+0x8]
   14001c3a0:	lea    rax,[rip+0x4be69]        # 0x140068210
   14001c3a7:	ret    
   14001c3a8:	lea    rax,[rip+0x4be81]        # 0x140068230
   14001c3af:	ret    
   14001c3b0:	lea    rax,[rip+0x4bef9]        # 0x1400682b0
   14001c3b7:	mov    QWORD PTR [rcx],rax
   14001c3ba:	xor    eax,eax
   14001c3bc:	mov    DWORD PTR [rcx+0x30],eax
   14001c3bf:	mov    DWORD PTR [rcx+0xc],eax
   14001c3c2:	mov    DWORD PTR [rcx+0x8],eax
   14001c3c5:	mov    QWORD PTR [rcx+0x38],rax
   14001c3c9:	mov    QWORD PTR [rcx+0x18],rax
   14001c3cd:	mov    QWORD PTR [rcx+0x10],rax
   14001c3d1:	mov    QWORD PTR [rcx+0x20],rax
   14001c3d5:	mov    DWORD PTR [rcx+0x2c],eax
   14001c3d8:	mov    DWORD PTR [rcx+0x28],eax
   14001c3db:	mov    rax,rcx
   14001c3de:	ret    
   14001c3df:	int3   
   14001c3e0:	lea    rax,[rip+0x4be61]        # 0x140068248
   14001c3e7:	ret    
   14001c3e8:	rex push rbx
   14001c3ea:	sub    rsp,0x20
   14001c3ee:	mov    rbx,rcx
   14001c3f1:	call   0x140021a70
   14001c3f6:	mov    ecx,0x1
   14001c3fb:	mov    QWORD PTR [rbx+0x38],rax
   14001c3ff:	xor    eax,eax
   14001c401:	mov    DWORD PTR [rbx+0x8],ecx
   14001c404:	mov    QWORD PTR [rbx+0x10],rax
   14001c408:	mov    QWORD PTR [rbx+0x18],rax
   14001c40c:	mov    QWORD PTR [rbx+0x20],rax
   14001c410:	mov    QWORD PTR [rbx+0x30],rax
   14001c414:	mov    DWORD PTR [rbx+0x28],ecx
   14001c417:	mov    rax,rbx
   14001c41a:	add    rsp,0x20
   14001c41e:	pop    rbx
   14001c41f:	ret    
   14001c420:	rex push rbx
   14001c422:	sub    rsp,0x20
   14001c426:	mov    rbx,rcx
   14001c429:	add    rcx,0x20
   14001c42d:	mov    rax,QWORD PTR [rcx]
   14001c430:	test   rax,rax
   14001c433:	je     0x14001c438
   14001c435:	call   QWORD PTR [rax+0x38]
   14001c438:	and    QWORD PTR [rbx+0x38],0x0
   14001c43d:	add    rsp,0x20
   14001c441:	pop    rbx
   14001c442:	ret    
   14001c443:	int3   
   14001c444:	sub    rsp,0x28
   14001c448:	call   0x140021a70
   14001c44d:	mov    edx,0x1
   14001c452:	mov    rcx,QWORD PTR [rax+0x8]
   14001c456:	mov    rax,QWORD PTR [rcx]
   14001c459:	add    rsp,0x28
   14001c45d:	rex.W jmp QWORD PTR [rax+0x138]
   14001c464:	sub    rsp,0x28
   14001c468:	call   0x140021a70
   14001c46d:	or     edx,0xffffffff
   14001c470:	mov    rcx,QWORD PTR [rax+0x8]
   14001c474:	mov    rax,QWORD PTR [rcx]
   14001c477:	add    rsp,0x28
   14001c47b:	rex.W jmp QWORD PTR [rax+0x138]
   14001c482:	int3   
   14001c483:	int3   
   14001c484:	lea    rax,[rip+0x4bded]        # 0x140068278
   14001c48b:	ret    
   14001c48c:	mov    QWORD PTR [rsp+0x8],rbx
   14001c491:	mov    QWORD PTR [rsp+0x10],rsi
   14001c496:	push   rdi
   14001c497:	sub    rsp,0x20
   14001c49b:	mov    rbx,rcx
   14001c49e:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c4a2:	mov    edi,edx
   14001c4a4:	test   rcx,rcx
   14001c4a7:	je     0x14001c4df
   14001c4a9:	cmp    QWORD PTR [rbx+0x18],0x0
   14001c4ae:	jne    0x14001c538
   14001c4b4:	mov    edx,DWORD PTR [rbx+0xc]
   14001c4b7:	cmp    edx,DWORD PTR [rbx+0x30]
   14001c4ba:	jb     0x14001c4c2
   14001c4bc:	call   0x1400208f8
   14001c4c1:	int3   
   14001c4c2:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c4c6:	neg    edi
   14001c4c8:	sbb    r8d,r8d
   14001c4cb:	not    r8d
   14001c4ce:	and    r8d,0x3
   14001c4d2:	bts    r8d,0xa
   14001c4d7:	call   QWORD PTR [rip+0x4861b]        # 0x140064af8
   14001c4dd:	jmp    0x14001c531
   14001c4df:	cmp    QWORD PTR [rbx+0x20],0x0
   14001c4e4:	jne    0x14001c4ec
   14001c4e6:	call   0x1400208f8
   14001c4eb:	int3   
   14001c4ec:	test   edx,edx
   14001c4ee:	jne    0x14001c526
   14001c4f0:	mov    rsi,QWORD PTR [rbx+0x20]
   14001c4f4:	call   QWORD PTR [rip+0x485de]        # 0x140064ad8
   14001c4fa:	cmp    rax,QWORD PTR [rsi+0x40]
   14001c4fe:	jne    0x14001c526
   14001c500:	mov    rcx,QWORD PTR [rsi+0x40]
   14001c504:	call   QWORD PTR [rip+0x485d6]        # 0x140064ae0
   14001c50a:	mov    rcx,rax
   14001c50d:	call   0x1400256f0
   14001c512:	xor    r9d,r9d
   14001c515:	xor    r8d,r8d
   14001c518:	mov    rcx,QWORD PTR [rax+0x40]
   14001c51c:	lea    edx,[r9+0x28]
   14001c520:	call   QWORD PTR [rip+0x4864a]        # 0x140064b70
   14001c526:	mov    rcx,QWORD PTR [rbx+0x20]
   14001c52a:	mov    edx,edi
   14001c52c:	call   0x140029b6c
   14001c531:	mov    DWORD PTR [rbx+0x28],0x1
   14001c538:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c53d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c542:	add    rsp,0x20
   14001c546:	pop    rdi
   14001c547:	ret    
   14001c548:	mov    QWORD PTR [rsp+0x8],rbx
   14001c54d:	push   rdi
   14001c54e:	sub    rsp,0x20
   14001c552:	mov    rbx,rcx
   14001c555:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c559:	movsxd rdi,edx
   14001c55c:	test   rcx,rcx
   14001c55f:	je     0x14001c590
   14001c561:	cmp    QWORD PTR [rbx+0x18],0x0
   14001c566:	jne    0x14001c5d4
   14001c568:	mov    edx,DWORD PTR [rbx+0xc]
   14001c56b:	cmp    edx,DWORD PTR [rbx+0x30]
   14001c56e:	jb     0x14001c576
   14001c570:	call   0x1400208f8
   14001c575:	int3   
   14001c576:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c57a:	neg    edi
   14001c57c:	sbb    r8d,r8d
   14001c57f:	and    r8d,0x8
   14001c583:	bts    r8d,0xa
   14001c588:	call   QWORD PTR [rip+0x48572]        # 0x140064b00
   14001c58e:	jmp    0x14001c5d4
   14001c590:	mov    rcx,QWORD PTR [rbx+0x20]
   14001c594:	test   rcx,rcx
   14001c597:	jne    0x14001c59f
   14001c599:	call   0x1400208f8
   14001c59e:	int3   
   14001c59f:	mov    rcx,QWORD PTR [rcx+0x40]
   14001c5a3:	xor    r9d,r9d
   14001c5a6:	xor    r8d,r8d
   14001c5a9:	mov    edx,0x87
   14001c5ae:	call   QWORD PTR [rip+0x485bc]        # 0x140064b70
   14001c5b4:	bt     rax,0xd
   14001c5b9:	jae    0x14001c5d4
   14001c5bb:	mov    rcx,QWORD PTR [rbx+0x20]
   14001c5bf:	mov    r8,rdi
   14001c5c2:	xor    r9d,r9d
   14001c5c5:	mov    rcx,QWORD PTR [rcx+0x40]
   14001c5c9:	mov    edx,0xf1
   14001c5ce:	call   QWORD PTR [rip+0x4859c]        # 0x140064b70
   14001c5d4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c5d9:	add    rsp,0x20
   14001c5dd:	pop    rdi
   14001c5de:	ret    
   14001c5df:	int3   
   14001c5e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c5e5:	push   rdi
   14001c5e6:	sub    rsp,0x30
   14001c5ea:	test   rdx,rdx
   14001c5ed:	mov    rdi,rdx
   14001c5f0:	mov    rbx,rcx
   14001c5f3:	jne    0x14001c5fb
   14001c5f5:	call   0x1400208f8
   14001c5fa:	int3   
   14001c5fb:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c5ff:	test   rcx,rcx
   14001c602:	je     0x14001c651
   14001c604:	cmp    QWORD PTR [rbx+0x18],0x0
   14001c609:	jne    0x14001c669
   14001c60b:	mov    edx,DWORD PTR [rbx+0xc]
   14001c60e:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c612:	mov    r8d,0x400
   14001c618:	call   QWORD PTR [rip+0x484d2]        # 0x140064af0
   14001c61e:	mov    edx,DWORD PTR [rbx+0xc]
   14001c621:	and    eax,0xfffff6fb
   14001c626:	cmp    edx,DWORD PTR [rbx+0x30]
   14001c629:	jb     0x14001c631
   14001c62b:	call   0x1400208f8
   14001c630:	int3   
   14001c631:	mov    rcx,QWORD PTR [rbx+0x10]
   14001c635:	mov    r9d,DWORD PTR [rbx+0x8]
   14001c639:	bts    eax,0xa
   14001c63d:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c641:	mov    r8d,eax
   14001c644:	mov    QWORD PTR [rsp+0x20],rdi
   14001c649:	call   QWORD PTR [rip+0x48499]        # 0x140064ae8
   14001c64f:	jmp    0x14001c669
   14001c651:	mov    rcx,QWORD PTR [rbx+0x20]
   14001c655:	test   rcx,rcx
   14001c658:	jne    0x14001c660
   14001c65a:	call   0x1400208f8
   14001c65f:	int3   
   14001c660:	mov    rcx,QWORD PTR [rcx+0x40]
   14001c664:	call   0x14002c914
   14001c669:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c66e:	add    rsp,0x30
   14001c672:	pop    rdi
   14001c673:	ret    
   14001c674:	mov    rax,rsp
   14001c677:	mov    QWORD PTR [rax+0x8],rbx
   14001c67b:	mov    QWORD PTR [rax+0x10],rbp
   14001c67f:	mov    QWORD PTR [rax+0x18],rsi
   14001c683:	mov    QWORD PTR [rax+0x20],rdi
   14001c687:	push   r12
   14001c689:	sub    rsp,0xc0
   14001c690:	mov    rax,QWORD PTR [rip+0x6a6d9]        # 0x140086d70
   14001c697:	xor    rax,rsp
   14001c69a:	mov    QWORD PTR [rsp+0xb0],rax
   14001c6a2:	call   QWORD PTR [rip+0x48420]        # 0x140064ac8
   14001c6a8:	movsx  ebp,ax
   14001c6ab:	shr    eax,0x10
   14001c6ae:	cmp    ebp,0x4
   14001c6b1:	movsx  esi,ax
   14001c6b4:	jle    0x14001c7c2
   14001c6ba:	mov    edi,0x5
   14001c6bf:	cmp    esi,edi
   14001c6c1:	jle    0x14001c7c2
   14001c6c7:	lea    r8d,[rdi+0x1b]
   14001c6cb:	lea    rcx,[rsp+0x30]
   14001c6d0:	cmp    ebp,r8d
   14001c6d3:	cmovg  ebp,r8d
   14001c6d7:	lea    eax,[rbp-0x4]
   14001c6da:	lea    ebx,[rbp+0xf]
   14001c6dd:	cdq    
   14001c6de:	sar    ebx,0x4
   14001c6e1:	sub    eax,edx
   14001c6e3:	mov    r12d,ebx
   14001c6e6:	mov    edx,0xff
   14001c6eb:	sar    eax,1
   14001c6ed:	shl    r12d,0x4
   14001c6f1:	add    r12d,eax
   14001c6f4:	lea    eax,[rdi+0x7]
   14001c6f7:	sub    r12d,ebp
   14001c6fa:	cmp    r12d,eax
   14001c6fd:	cmovg  r12d,eax
   14001c701:	cmp    esi,r8d
   14001c704:	cmovg  esi,r8d
   14001c708:	lea    r8d,[rdi+0x7b]
   14001c70c:	call   0x140047720
   14001c711:	movsxd r11,ebx
   14001c714:	lea    eax,[rsi-0x6]
   14001c717:	sar    eax,1
   14001c719:	lea    r10,[rip+0x4bb20]        # 0x140068240
   14001c720:	movsxd rcx,eax
   14001c723:	imul   rcx,r11
   14001c727:	add    r11,r11
   14001c72a:	lea    rdx,[rsp+rcx*2+0x30]
   14001c72f:	movzx  r9d,BYTE PTR [r10]
   14001c733:	mov    ecx,r12d
   14001c736:	add    r10,0x1
   14001c73a:	shl    r9w,cl
   14001c73e:	not    r9w
   14001c742:	movzx  eax,r9w
   14001c746:	mov    BYTE PTR [rdx+0x1],r9b
   14001c74a:	shr    ax,0x8
   14001c74e:	mov    BYTE PTR [rdx],al
   14001c750:	add    rdx,r11
   14001c753:	sub    rdi,0x1
   14001c757:	jne    0x14001c72f
   14001c759:	lea    r9d,[rdi+0x1]
   14001c75d:	lea    rax,[rsp+0x30]
   14001c762:	mov    edx,esi
   14001c764:	mov    r8d,r9d
   14001c767:	mov    ecx,ebp
   14001c769:	mov    QWORD PTR [rsp+0x20],rax
   14001c76e:	call   QWORD PTR [rip+0x4798c]        # 0x140064100
   14001c774:	test   rax,rax
   14001c777:	mov    QWORD PTR [rip+0x6fe02],rax        # 0x14008c580
   14001c77e:	jne    0x14001c794
   14001c780:	mov    edx,0x7fe3
   14001c785:	xor    ecx,ecx
   14001c787:	call   QWORD PTR [rip+0x48343]        # 0x140064ad0
   14001c78d:	mov    QWORD PTR [rip+0x6fdec],rax        # 0x14008c580
   14001c794:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001c79c:	xor    rcx,rsp
   14001c79f:	call   0x140046470
   14001c7a4:	lea    r11,[rsp+0xc0]
   14001c7ac:	mov    rbx,QWORD PTR [r11+0x10]
   14001c7b0:	mov    rbp,QWORD PTR [r11+0x18]
   14001c7b4:	mov    rsi,QWORD PTR [r11+0x20]
   14001c7b8:	mov    rdi,QWORD PTR [r11+0x28]
   14001c7bc:	mov    rsp,r11
   14001c7bf:	pop    r12
   14001c7c1:	ret    
   14001c7c2:	call   0x1400208f8
   14001c7c7:	int3   
   14001c7c8:	rex push rbx
   14001c7ca:	sub    rsp,0x30
   14001c7ce:	mov    r8,QWORD PTR [rcx]
   14001c7d1:	mov    eax,edx
   14001c7d3:	xor    edx,edx
   14001c7d5:	test   eax,eax
   14001c7d7:	mov    rbx,rcx
   14001c7da:	setne  dl
   14001c7dd:	call   QWORD PTR [r8+0x8]
   14001c7e1:	cmp    QWORD PTR [rbx+0x10],0x0
   14001c7e6:	je     0x14001c839
   14001c7e8:	cmp    QWORD PTR [rbx+0x18],0x0
   14001c7ed:	jne    0x14001c839
   14001c7ef:	mov    eax,DWORD PTR [rbx+0x30]
   14001c7f2:	cmp    DWORD PTR [rbx+0xc],eax
   14001c7f5:	jb     0x14001c7fd
   14001c7f7:	call   0x1400208f8
   14001c7fc:	int3   
   14001c7fd:	mov    rax,QWORD PTR [rip+0x6fd7c]        # 0x14008c580
   14001c804:	test   rax,rax
   14001c807:	jne    0x14001c81a
   14001c809:	call   0x14001c674
   14001c80e:	mov    rax,QWORD PTR [rip+0x6fd6b]        # 0x14008c580
   14001c815:	test   rax,rax
   14001c818:	je     0x14001c839
   14001c81a:	mov    rcx,QWORD PTR [rbx+0x10]
   14001c81e:	mov    edx,DWORD PTR [rbx+0xc]
   14001c821:	xor    r9d,r9d
   14001c824:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c828:	mov    r8d,0x400
   14001c82e:	mov    QWORD PTR [rsp+0x20],rax
   14001c833:	call   QWORD PTR [rip+0x48287]        # 0x140064ac0
   14001c839:	add    rsp,0x30
   14001c83d:	pop    rbx
   14001c83e:	ret    
   14001c83f:	int3   
   14001c840:	sub    rsp,0x28
   14001c844:	call   0x140021ac0
   14001c849:	mov    rax,QWORD PTR [rax+0x8]
   14001c84d:	add    rsp,0x28
   14001c851:	ret    
   14001c852:	int3   
   14001c853:	int3   
   14001c854:	sub    rsp,0x28
   14001c858:	call   0x1400210b0
   14001c85d:	add    rax,0x58
   14001c861:	add    rsp,0x28
   14001c865:	ret    
   14001c866:	int3   
   14001c867:	int3   
   14001c868:	sub    rsp,0x28
   14001c86c:	cmp    DWORD PTR [rdx+0x8],0x1
   14001c870:	mov    rax,rdx
   14001c873:	jne    0x14001c87b
   14001c875:	or     rax,0xffffffffffffffff
   14001c879:	jmp    0x14001c88e
   14001c87b:	cmp    DWORD PTR [rdx+0x8],0xf
   14001c87f:	jne    0x14001c88c
   14001c881:	mov    rcx,QWORD PTR [rax]
   14001c884:	xor    edx,edx
   14001c886:	call   QWORD PTR [rip+0x4822c]        # 0x140064ab8
   14001c88c:	xor    eax,eax
   14001c88e:	add    rsp,0x28
   14001c892:	ret    
   14001c893:	int3   
   14001c894:	mov    QWORD PTR [rsp+0x8],rbx
   14001c899:	push   rdi
   14001c89a:	sub    rsp,0x20
   14001c89e:	mov    rbx,rdx
   14001c8a1:	mov    rdi,rcx
   14001c8a4:	call   0x140021ac0
   14001c8a9:	mov    rcx,QWORD PTR [rax+0x8]
   14001c8ad:	test   rcx,rcx
   14001c8b0:	je     0x14001c8c3
   14001c8b2:	mov    rax,QWORD PTR [rcx]
   14001c8b5:	mov    r8,rbx
   14001c8b8:	mov    rdx,rdi
   14001c8bb:	call   QWORD PTR [rax+0xd8]
   14001c8c1:	jmp    0x14001c8ce
   14001c8c3:	mov    rdx,rbx
   14001c8c6:	mov    rcx,rdi
   14001c8c9:	call   0x14001c868
   14001c8ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c8d3:	add    rsp,0x20
   14001c8d7:	pop    rdi
   14001c8d8:	ret    
   14001c8d9:	int3   
   14001c8da:	int3   
   14001c8db:	int3   
   14001c8dc:	rex push rbx
   14001c8de:	sub    rsp,0x20
   14001c8e2:	and    QWORD PTR [rcx+0x40],0x0
   14001c8e7:	and    QWORD PTR [rcx+0x48],0x0
   14001c8ec:	and    QWORD PTR [rcx+0x58],0x0
   14001c8f1:	and    DWORD PTR [rcx+0x60],0x0
   14001c8f5:	mov    rbx,rcx
   14001c8f8:	call   0x1400210b0
   14001c8fd:	and    DWORD PTR [rax+0x60],0x0
   14001c901:	and    DWORD PTR [rax+0x90],0x0
   14001c908:	lea    rcx,[rax+0x88]
   14001c90f:	call   QWORD PTR [rip+0x4819b]        # 0x140064ab0
   14001c915:	and    QWORD PTR [rbx+0x80],0x0
   14001c91d:	and    QWORD PTR [rbx+0x78],0x0
   14001c922:	mov    DWORD PTR [rbx+0x50],0x1
   14001c929:	add    rsp,0x20
   14001c92d:	pop    rbx
   14001c92e:	ret    
   14001c92f:	int3   
   14001c930:	mov    QWORD PTR [rsp+0x8],rcx
   14001c935:	push   rbx
   14001c936:	sub    rsp,0x30
   14001c93a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c943:	mov    rbx,rcx
   14001c946:	lea    rax,[rip+0x4b9fb]        # 0x140068348
   14001c94d:	mov    QWORD PTR [rcx],rax
   14001c950:	mov    rcx,QWORD PTR [rcx+0x58]
   14001c954:	test   rcx,rcx
   14001c957:	je     0x14001c95f
   14001c959:	call   QWORD PTR [rip+0x47c69]        # 0x1400645c8
   14001c95f:	call   0x140021ac0
   14001c964:	cmp    QWORD PTR [rax+0x8],rbx
   14001c968:	jne    0x14001c96f
   14001c96a:	and    QWORD PTR [rax+0x8],0x0
   14001c96f:	mov    rcx,rbx
   14001c972:	add    rsp,0x30
   14001c976:	pop    rbx
   14001c977:	jmp    0x14001c420
   14001c97c:	int3   
   14001c97d:	int3   
   14001c97e:	int3   
   14001c97f:	int3   
   14001c980:	rex push rbp
   14001c982:	sub    rsp,0x20
   14001c986:	mov    rbp,rdx
   14001c989:	mov    rcx,QWORD PTR [rbp+0x40]
   14001c98d:	call   0x14001c420
   14001c992:	add    rsp,0x20
   14001c996:	pop    rbp
   14001c997:	ret    
   14001c998:	sub    rsp,0x28
   14001c99c:	cmp    DWORD PTR [rcx+0x50],0x0
   14001c9a0:	je     0x14001c9ad
   14001c9a2:	mov    rax,QWORD PTR [rcx]
   14001c9a5:	mov    edx,0x1
   14001c9aa:	call   QWORD PTR [rax+0x8]
   14001c9ad:	add    rsp,0x28
   14001c9b1:	ret    
   14001c9b2:	int3   
   14001c9b3:	int3   
   14001c9b4:	mov    rax,rsp
   14001c9b7:	mov    QWORD PTR [rax+0x8],rbx
   14001c9bb:	mov    QWORD PTR [rax+0x10],rbp
   14001c9bf:	mov    QWORD PTR [rax+0x18],rsi
   14001c9c3:	mov    QWORD PTR [rax+0x20],rdi
   14001c9c7:	push   r12
   14001c9c9:	sub    rsp,0x30
   14001c9cd:	mov    rbx,rcx
   14001c9d0:	call   0x1400210b0
   14001c9d5:	mov    edi,0x1
   14001c9da:	mov    r12,rax
   14001c9dd:	xor    esi,esi
   14001c9df:	jmp    0x14001ca14
   14001c9e1:	and    DWORD PTR [rsp+0x20],0x0
   14001c9e6:	lea    rcx,[r12+0x58]
   14001c9eb:	xor    r9d,r9d
   14001c9ee:	xor    r8d,r8d
   14001c9f1:	xor    edx,edx
   14001c9f3:	call   QWORD PTR [rip+0x480af]        # 0x140064aa8
   14001c9f9:	test   eax,eax
   14001c9fb:	jne    0x14001ca18
   14001c9fd:	mov    rax,QWORD PTR [rbx]
   14001ca00:	mov    edx,esi
   14001ca02:	mov    rcx,rbx
   14001ca05:	call   QWORD PTR [rax+0xc0]
   14001ca0b:	add    esi,0x1
   14001ca0e:	test   eax,eax
   14001ca10:	jne    0x14001ca14
   14001ca12:	xor    edi,edi
   14001ca14:	test   edi,edi
   14001ca16:	jne    0x14001c9e1
   14001ca18:	mov    rax,QWORD PTR [rbx]
   14001ca1b:	mov    rcx,rbx
   14001ca1e:	call   QWORD PTR [rax+0xb8]
   14001ca24:	mov    rcx,rbx
   14001ca27:	test   eax,eax
   14001ca29:	mov    rax,QWORD PTR [rbx]
   14001ca2c:	je     0x14001ca62
   14001ca2e:	lea    rdx,[r12+0x58]
   14001ca33:	call   QWORD PTR [rax+0xc8]
   14001ca39:	test   eax,eax
   14001ca3b:	je     0x14001ca44
   14001ca3d:	mov    edi,0x1
   14001ca42:	xor    esi,esi
   14001ca44:	and    DWORD PTR [rsp+0x20],0x0
   14001ca49:	lea    rcx,[r12+0x58]
   14001ca4e:	xor    r9d,r9d
   14001ca51:	xor    r8d,r8d
   14001ca54:	xor    edx,edx
   14001ca56:	call   QWORD PTR [rip+0x4804c]        # 0x140064aa8
   14001ca5c:	test   eax,eax
   14001ca5e:	jne    0x14001ca18
   14001ca60:	jmp    0x14001ca14
   14001ca62:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ca67:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ca6c:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ca71:	mov    rdi,QWORD PTR [rsp+0x58]
   14001ca76:	add    rsp,0x30
   14001ca7a:	pop    r12
   14001ca7c:	rex.W jmp QWORD PTR [rax+0xd0]
   14001ca83:	int3   
   14001ca84:	sub    rsp,0x28
   14001ca88:	call   0x1400210b0
   14001ca8d:	mov    eax,DWORD PTR [rax+0x68]
   14001ca90:	add    rsp,0x28
   14001ca94:	ret    
   14001ca95:	int3   
   14001ca96:	int3   
   14001ca97:	int3   
   14001ca98:	mov    QWORD PTR [rsp+0x8],rbx
   14001ca9d:	mov    QWORD PTR [rsp+0x10],rsi
   14001caa2:	push   rdi
   14001caa3:	sub    rsp,0x20
   14001caa7:	mov    rax,QWORD PTR [rcx]
   14001caaa:	mov    rbx,rdx
   14001caad:	mov    rsi,rcx
   14001cab0:	call   QWORD PTR [rax+0x50]
   14001cab3:	cmp    QWORD PTR [rax],0x0
   14001cab7:	mov    rdi,rax
   14001caba:	je     0x14001cb1f
   14001cabc:	mov    edx,DWORD PTR [rbx+0x8]
   14001cabf:	mov    rcx,QWORD PTR [rax+0x8]
   14001cac3:	xor    r9d,r9d
   14001cac6:	xor    r8d,r8d
   14001cac9:	cmp    edx,0xc000
   14001cacf:	jae    0x14001cb09
   14001cad1:	call   0x140022b28
   14001cad6:	test   rax,rax
   14001cad9:	mov    r11,rax
   14001cadc:	je     0x14001cb1b
   14001cade:	mov    r8,QWORD PTR [rbx+0x18]
   14001cae2:	mov    rdx,QWORD PTR [rbx+0x10]
   14001cae6:	mov    rcx,rsi
   14001cae9:	call   QWORD PTR [r11+0x18]
   14001caed:	mov    eax,0x1
   14001caf2:	jmp    0x14001cb21
   14001caf4:	mov    rcx,QWORD PTR [r11+0x10]
   14001caf8:	mov    eax,DWORD PTR [rbx+0x8]
   14001cafb:	cmp    DWORD PTR [rcx],eax
   14001cafd:	je     0x14001cade
   14001caff:	xor    r9d,r9d
   14001cb02:	lea    rcx,[r11+0x20]
   14001cb06:	xor    r8d,r8d
   14001cb09:	mov    edx,0xc000
   14001cb0e:	call   0x140022b28
   14001cb13:	test   rax,rax
   14001cb16:	mov    r11,rax
   14001cb19:	jne    0x14001caf4
   14001cb1b:	call   QWORD PTR [rdi]
   14001cb1d:	jmp    0x14001cab3
   14001cb1f:	xor    eax,eax
   14001cb21:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cb26:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cb2b:	add    rsp,0x20
   14001cb2f:	pop    rdi
   14001cb30:	ret    
   14001cb31:	int3   
   14001cb32:	int3   
   14001cb33:	int3   
   14001cb34:	mov    rcx,rdx
   14001cb37:	mov    rdx,r8
   14001cb3a:	jmp    0x14001c868
   14001cb3f:	int3   
   14001cb40:	lea    rax,[rip+0x4b799]        # 0x1400682e0
   14001cb47:	ret    
   14001cb48:	sub    rsp,0x38
   14001cb4c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cb55:	mov    ecx,0x1e0
   14001cb5a:	call   0x14002cba4
   14001cb5f:	mov    rcx,rax
   14001cb62:	mov    QWORD PTR [rsp+0x40],rax
   14001cb67:	xor    eax,eax
   14001cb69:	cmp    rcx,rax
   14001cb6c:	je     0x14001cb74
   14001cb6e:	call   0x140020ea4
   14001cb73:	nop
   14001cb74:	add    rsp,0x38
   14001cb78:	ret    
   14001cb79:	int3   
   14001cb7a:	int3   
   14001cb7b:	int3   
   14001cb7c:	int3   
   14001cb7d:	int3   
   14001cb7e:	int3   
   14001cb7f:	int3   
   14001cb80:	int3   
   14001cb81:	int3   
   14001cb82:	int3   
   14001cb83:	int3   
   14001cb84:	int3   
   14001cb85:	int3   
   14001cb86:	int3   
   14001cb87:	int3   
   14001cb88:	rex push rbp
   14001cb8a:	sub    rsp,0x20
   14001cb8e:	mov    rbp,rdx
   14001cb91:	mov    rcx,QWORD PTR [rbp+0x40]
   14001cb95:	call   0x14002cbc8
   14001cb9a:	add    rsp,0x20
   14001cb9e:	pop    rbp
   14001cb9f:	ret    
   14001cba0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cba5:	push   rdi
   14001cba6:	sub    rsp,0x20
   14001cbaa:	mov    rdi,rcx
   14001cbad:	call   0x140021ac0
   14001cbb2:	mov    rcx,QWORD PTR [rax+0x8]
   14001cbb6:	test   rcx,rcx
   14001cbb9:	je     0x14001cbd4
   14001cbbb:	cmp    QWORD PTR [rdi],0x0
   14001cbbf:	jne    0x14001cbd4
   14001cbc1:	mov    rdx,rdi
   14001cbc4:	call   0x14001ca98
   14001cbc9:	test   eax,eax
   14001cbcb:	je     0x14001cbd4
   14001cbcd:	mov    eax,0x1
   14001cbd2:	jmp    0x14001cc38
   14001cbd4:	call   0x140021ac0
   14001cbd9:	mov    rcx,QWORD PTR [rax+0x8]
   14001cbdd:	test   rcx,rcx
   14001cbe0:	je     0x14001cbf0
   14001cbe2:	mov    rax,QWORD PTR [rcx]
   14001cbe5:	call   QWORD PTR [rax+0xe8]
   14001cbeb:	mov    rbx,rax
   14001cbee:	jmp    0x14001cbf2
   14001cbf0:	xor    ebx,ebx
   14001cbf2:	test   rbx,rbx
   14001cbf5:	jne    0x14001cbfb
   14001cbf7:	xor    ecx,ecx
   14001cbf9:	jmp    0x14001cbff
   14001cbfb:	mov    rcx,QWORD PTR [rbx+0x40]
   14001cbff:	mov    rdx,rdi
   14001cc02:	call   0x140025bc8
   14001cc07:	test   eax,eax
   14001cc09:	jne    0x14001cbcd
   14001cc0b:	test   rbx,rbx
   14001cc0e:	je     0x14001cc36
   14001cc10:	mov    rcx,QWORD PTR [rdi]
   14001cc13:	call   0x1400256f0
   14001cc18:	mov    rcx,rax
   14001cc1b:	call   0x1400271c8
   14001cc20:	cmp    rax,rbx
   14001cc23:	je     0x14001cc36
   14001cc25:	mov    rax,QWORD PTR [rbx]
   14001cc28:	mov    rdx,rdi
   14001cc2b:	mov    rcx,rbx
   14001cc2e:	call   QWORD PTR [rax+0x200]
   14001cc34:	jmp    0x14001cc38
   14001cc36:	xor    eax,eax
   14001cc38:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cc3d:	add    rsp,0x20
   14001cc41:	pop    rdi
   14001cc42:	ret    
   14001cc43:	int3   
   14001cc44:	rex push rbx
   14001cc46:	sub    rsp,0x20
   14001cc4a:	mov    rbx,rcx
   14001cc4d:	call   0x140021ac0
   14001cc52:	mov    rcx,QWORD PTR [rax+0x8]
   14001cc56:	test   rcx,rcx
   14001cc59:	je     0x14001cc69
   14001cc5b:	mov    rax,QWORD PTR [rcx]
   14001cc5e:	mov    rdx,rbx
   14001cc61:	call   QWORD PTR [rax+0xb0]
   14001cc67:	jmp    0x14001cc71
   14001cc69:	mov    rcx,rbx
   14001cc6c:	call   0x14001cba0
   14001cc71:	add    rsp,0x20
   14001cc75:	pop    rbx
   14001cc76:	ret    
   14001cc77:	int3   
   14001cc78:	rex push rbx
   14001cc7a:	sub    rsp,0x20
   14001cc7e:	mov    eax,DWORD PTR [rcx+0x8]
   14001cc81:	mov    rbx,rcx
   14001cc84:	cmp    eax,0x200
   14001cc89:	je     0x14001cca0
   14001cc8b:	cmp    eax,0xa0
   14001cc90:	je     0x14001cca0
   14001cc92:	cmp    eax,0xf
   14001cc95:	je     0x14001ccce
   14001cc97:	cmp    eax,0x118
   14001cc9c:	je     0x14001ccce
   14001cc9e:	jmp    0x14001cce3
   14001cca0:	call   0x1400210b0
   14001cca5:	mov    rcx,QWORD PTR [rbx+0x24]
   14001cca9:	cmp    DWORD PTR [rax+0x88],ecx
   14001ccaf:	mov    r11,rax
   14001ccb2:	jne    0x14001ccd2
   14001ccb4:	mov    rdx,rcx
   14001ccb7:	shr    rdx,0x20
   14001ccbb:	cmp    DWORD PTR [rax+0x8c],edx
   14001ccc1:	jne    0x14001ccd2
   14001ccc3:	mov    edx,DWORD PTR [rax+0x90]
   14001ccc9:	cmp    DWORD PTR [rbx+0x8],edx
   14001cccc:	jne    0x14001ccd2
   14001ccce:	xor    eax,eax
   14001ccd0:	jmp    0x14001cce8
   14001ccd2:	mov    QWORD PTR [rax+0x88],rcx
   14001ccd9:	mov    eax,DWORD PTR [rbx+0x8]
   14001ccdc:	mov    DWORD PTR [r11+0x90],eax
   14001cce3:	mov    eax,0x1
   14001cce8:	add    rsp,0x20
   14001ccec:	pop    rbx
   14001cced:	ret    
   14001ccee:	int3   
   14001ccef:	int3   
   14001ccf0:	rex push rbx
   14001ccf2:	sub    rsp,0x20
   14001ccf6:	mov    rbx,rcx
   14001ccf9:	call   0x140021ac0
   14001ccfe:	mov    rcx,QWORD PTR [rax+0x8]
   14001cd02:	test   rcx,rcx
   14001cd05:	je     0x14001cd15
   14001cd07:	mov    rax,QWORD PTR [rcx]
   14001cd0a:	mov    rdx,rbx
   14001cd0d:	call   QWORD PTR [rax+0xc8]
   14001cd13:	jmp    0x14001cd1d
   14001cd15:	mov    rcx,rbx
   14001cd18:	call   0x14001cc78
   14001cd1d:	add    rsp,0x20
   14001cd21:	pop    rbx
   14001cd22:	ret    
   14001cd23:	int3   
   14001cd24:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd29:	push   rdi
   14001cd2a:	sub    rsp,0x20
   14001cd2e:	mov    ebx,edx
   14001cd30:	mov    rdi,rcx
   14001cd33:	call   0x14001c930
   14001cd38:	test   bl,0x1
   14001cd3b:	je     0x14001cd45
   14001cd3d:	mov    rcx,rdi
   14001cd40:	call   0x14001ac50
   14001cd45:	mov    rax,rdi
   14001cd48:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cd4d:	add    rsp,0x20
   14001cd51:	pop    rdi
   14001cd52:	ret    
   14001cd53:	int3   
   14001cd54:	mov    QWORD PTR [rsp+0x8],rcx
   14001cd59:	push   rbx
   14001cd5a:	sub    rsp,0x30
   14001cd5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cd67:	mov    rbx,rcx
   14001cd6a:	call   0x14001c3e8
   14001cd6f:	nop
   14001cd70:	lea    rax,[rip+0x4b5d1]        # 0x140068348
   14001cd77:	mov    QWORD PTR [rbx],rax
   14001cd7a:	and    QWORD PTR [rbx+0x68],0x0
   14001cd7f:	and    QWORD PTR [rbx+0x70],0x0
   14001cd84:	mov    rcx,rbx
   14001cd87:	call   0x14001c8dc
   14001cd8c:	nop
   14001cd8d:	mov    rax,rbx
   14001cd90:	add    rsp,0x30
   14001cd94:	pop    rbx
   14001cd95:	ret    
   14001cd96:	int3   
   14001cd97:	int3   
   14001cd98:	int3   
   14001cd99:	int3   
   14001cd9a:	int3   
   14001cd9b:	int3   
   14001cd9c:	int3   
   14001cd9d:	int3   
   14001cd9e:	int3   
   14001cd9f:	int3   
   14001cda0:	int3   
   14001cda1:	int3   
   14001cda2:	int3   
   14001cda3:	int3   
   14001cda4:	rex push rbp
   14001cda6:	sub    rsp,0x20
   14001cdaa:	mov    rbp,rdx
   14001cdad:	mov    rcx,QWORD PTR [rbp+0x40]
   14001cdb1:	call   0x14001c420
   14001cdb6:	add    rsp,0x20
   14001cdba:	pop    rbp
   14001cdbb:	ret    
   14001cdbc:	mov    rcx,rdx
   14001cdbf:	jmp    0x14001cc78
   14001cdc4:	mov    rcx,rdx
   14001cdc7:	jmp    0x14001cba0
   14001cdcc:	sub    rsp,0x28
   14001cdd0:	mov    rax,QWORD PTR [rcx+0x48]
   14001cdd4:	test   rax,rax
   14001cdd7:	jne    0x14001cdf0
   14001cdd9:	mov    rax,QWORD PTR [rcx+0x40]
   14001cddd:	test   rax,rax
   14001cde0:	jne    0x14001cdf0
   14001cde2:	call   QWORD PTR [rip+0x47c58]        # 0x140064a40
   14001cde8:	mov    rcx,rax
   14001cdeb:	call   0x1400256f0
   14001cdf0:	add    rsp,0x28
   14001cdf4:	ret    
   14001cdf5:	int3   
   14001cdf6:	int3   
   14001cdf7:	int3   
   14001cdf8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdfd:	push   rdi
   14001cdfe:	sub    rsp,0x20
   14001ce02:	call   0x1400210b0
   14001ce07:	xor    r9d,r9d
   14001ce0a:	xor    r8d,r8d
   14001ce0d:	lea    rcx,[rax+0x58]
   14001ce11:	xor    edx,edx
   14001ce13:	mov    rdi,rax
   14001ce16:	call   QWORD PTR [rip+0x47c0c]        # 0x140064a28
   14001ce1c:	test   eax,eax
   14001ce1e:	je     0x14001ce4f
   14001ce20:	cmp    DWORD PTR [rdi+0x60],0x36a
   14001ce27:	je     0x14001ce4a
   14001ce29:	lea    rcx,[rdi+0x58]
   14001ce2d:	call   0x14001cc44
   14001ce32:	test   eax,eax
   14001ce34:	jne    0x14001ce4a
   14001ce36:	lea    rcx,[rdi+0x58]
   14001ce3a:	call   QWORD PTR [rip+0x47bf0]        # 0x140064a30
   14001ce40:	lea    rcx,[rdi+0x58]
   14001ce44:	call   QWORD PTR [rip+0x47bee]        # 0x140064a38
   14001ce4a:	mov    eax,0x1
   14001ce4f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce54:	add    rsp,0x20
   14001ce58:	pop    rdi
   14001ce59:	ret    
   14001ce5a:	int3   
   14001ce5b:	int3   
   14001ce5c:	sub    rsp,0x28
   14001ce60:	call   0x140021ac0
   14001ce65:	mov    rcx,QWORD PTR [rax+0x8]
   14001ce69:	test   rcx,rcx
   14001ce6c:	je     0x14001ce79
   14001ce6e:	mov    rax,QWORD PTR [rcx]
   14001ce71:	call   QWORD PTR [rax+0xb8]
   14001ce77:	jmp    0x14001ce7e
   14001ce79:	call   0x14001cdf8
   14001ce7e:	add    rsp,0x28
   14001ce82:	ret    
   14001ce83:	int3   
   14001ce84:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce89:	mov    QWORD PTR [rsp+0x10],rsi
   14001ce8e:	push   rdi
   14001ce8f:	sub    rsp,0x20
   14001ce93:	mov    rdi,r8
   14001ce96:	mov    rsi,rdx
   14001ce99:	mov    ebx,ecx
   14001ce9b:	call   0x140021a70
   14001cea0:	cmp    BYTE PTR [rax+0x28],0x0
   14001cea4:	jne    0x14001ced2
   14001cea6:	test   ebx,ebx
   14001cea8:	jns    0x14001ceb2
   14001ceaa:	cmp    ebx,0x8001
   14001ceb0:	jne    0x14001ced2
   14001ceb2:	call   0x140021ac0
   14001ceb7:	mov    rcx,QWORD PTR [rax+0x8]
   14001cebb:	test   rcx,rcx
   14001cebe:	je     0x14001ced2
   14001cec0:	mov    rax,QWORD PTR [rcx]
   14001cec3:	mov    r8,rdi
   14001cec6:	mov    edx,ebx
   14001cec8:	call   QWORD PTR [rax+0xe0]
   14001cece:	cdqe   
   14001ced0:	jmp    0x14001cf02
   14001ced2:	lea    rdx,[rip+0xfffffffffffffc6f]        # 0x14001cb48
   14001ced9:	lea    rcx,[rip+0x6bd20]        # 0x140088c00
   14001cee0:	call   0x14002d3a8
   14001cee5:	test   rax,rax
   14001cee8:	jne    0x14001cef0
   14001ceea:	call   0x1400208f8
   14001ceef:	int3   
   14001cef0:	mov    rcx,QWORD PTR [rax+0x50]
   14001cef4:	mov    r9,rdi
   14001cef7:	mov    r8,rsi
   14001cefa:	mov    edx,ebx
   14001cefc:	call   QWORD PTR [rip+0x47b1e]        # 0x140064a20
   14001cf02:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cf07:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cf0c:	add    rsp,0x20
   14001cf10:	pop    rdi
   14001cf11:	ret    
   14001cf12:	int3   
   14001cf13:	int3   
   14001cf14:	mov    QWORD PTR [rsp+0x8],rbx
   14001cf19:	mov    QWORD PTR [rsp+0x10],rbp
   14001cf1e:	mov    QWORD PTR [rsp+0x18],rsi
   14001cf23:	push   rdi
   14001cf24:	sub    rsp,0x50
   14001cf28:	test   r8,r8
   14001cf2b:	mov    rdi,r8
   14001cf2e:	mov    ebx,edx
   14001cf30:	mov    rbp,rcx
   14001cf33:	je     0x14001d09a
   14001cf39:	test   edx,edx
   14001cf3b:	je     0x14001cfdd
   14001cf41:	cmp    edx,0x2
   14001cf44:	jne    0x14001d09a
   14001cf4a:	mov    rcx,QWORD PTR [r8]
   14001cf4d:	call   0x1400256f0
   14001cf52:	test   rax,rax
   14001cf55:	je     0x14001cfdd
   14001cf5b:	mov    rcx,rax
   14001cf5e:	call   0x140026480
   14001cf63:	test   rax,rax
   14001cf66:	mov    rsi,rax
   14001cf69:	je     0x14001cfdd
   14001cf6b:	mov    rcx,rax
   14001cf6e:	call   0x1400230f0
   14001cf73:	test   eax,eax
   14001cf75:	je     0x14001cfdd
   14001cf77:	cmp    DWORD PTR [rsi+0xc4],0x0
   14001cf7e:	je     0x14001cfdd
   14001cf80:	call   0x140021ac0
   14001cf85:	mov    rcx,QWORD PTR [rax+0x8]
   14001cf89:	test   rcx,rcx
   14001cf8c:	je     0x14001cf99
   14001cf8e:	mov    rax,QWORD PTR [rcx]
   14001cf91:	call   QWORD PTR [rax+0xe8]
   14001cf97:	jmp    0x14001cf9b
   14001cf99:	xor    eax,eax
   14001cf9b:	cmp    QWORD PTR [rbp+0x40],0x0
   14001cfa0:	je     0x14001cfdd
   14001cfa2:	cmp    DWORD PTR [rdi+0x8],0x100
   14001cfa9:	jne    0x14001cfb2
   14001cfab:	cmp    QWORD PTR [rdi+0x10],0xd
   14001cfb0:	je     0x14001cfbb
   14001cfb2:	cmp    DWORD PTR [rdi+0x8],0x202
   14001cfb9:	jne    0x14001cfdd
   14001cfbb:	mov    rcx,QWORD PTR [rax+0x40]
   14001cfbf:	xor    r9d,r9d
   14001cfc2:	mov    edx,0x111
   14001cfc7:	mov    r8d,0xe146
   14001cfcd:	call   QWORD PTR [rip+0x47b9d]        # 0x140064b70
   14001cfd3:	mov    eax,0x1
   14001cfd8:	jmp    0x14001d09c
   14001cfdd:	call   0x140021ac0
   14001cfe2:	mov    rcx,QWORD PTR [rax+0x8]
   14001cfe6:	test   rcx,rcx
   14001cfe9:	je     0x14001cff4
   14001cfeb:	mov    rax,QWORD PTR [rcx]
   14001cfee:	call   QWORD PTR [rax+0xe8]
   14001cff4:	test   ebx,ebx
   14001cff6:	jne    0x14001d09a
   14001cffc:	cmp    QWORD PTR [rbp+0x48],0x0
   14001d001:	je     0x14001d09a
   14001d007:	cmp    DWORD PTR [rdi+0x8],0x100
   14001d00e:	jb     0x14001d09a
   14001d014:	cmp    DWORD PTR [rdi+0x8],0x109
   14001d01b:	ja     0x14001d09a
   14001d01d:	lea    rdx,[rip+0xfffffffffffffb24]        # 0x14001cb48
   14001d024:	lea    rcx,[rip+0x6bbd5]        # 0x140088c00
   14001d02b:	call   0x14002d3a8
   14001d030:	test   rax,rax
   14001d033:	mov    rbx,rax
   14001d036:	jne    0x14001d03e
   14001d038:	call   0x1400208f8
   14001d03d:	int3   
   14001d03e:	cmp    DWORD PTR [rax+0x1a0],0x0
   14001d045:	jne    0x14001d09a
   14001d047:	lea    rcx,[rsp+0x20]
   14001d04c:	mov    rdx,rdi
   14001d04f:	mov    r8d,0x30
   14001d055:	mov    DWORD PTR [rax+0x1a0],0x1
   14001d05f:	call   0x1400478c0
   14001d064:	mov    rcx,QWORD PTR [rbp+0x48]
   14001d068:	call   0x140029b3c
   14001d06d:	test   eax,eax
   14001d06f:	je     0x14001d093
   14001d071:	mov    rax,QWORD PTR [rbp+0x0]
   14001d075:	lea    rdx,[rsp+0x20]
   14001d07a:	mov    rcx,rbp
   14001d07d:	call   QWORD PTR [rax+0xb0]
   14001d083:	test   eax,eax
   14001d085:	je     0x14001d093
   14001d087:	and    DWORD PTR [rbx+0x1a0],0x0
   14001d08e:	jmp    0x14001cfd3
   14001d093:	and    DWORD PTR [rbx+0x1a0],0x0
   14001d09a:	xor    eax,eax
   14001d09c:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d0a1:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d0a6:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d0ab:	add    rsp,0x50
   14001d0af:	pop    rdi
   14001d0b0:	ret    
   14001d0b1:	int3   
   14001d0b2:	int3   
   14001d0b3:	int3   
   14001d0b4:	jmp    0x14001cdf8
   14001d0b9:	int3   
   14001d0ba:	int3   
   14001d0bb:	int3   
   14001d0bc:	rex push rbx
   14001d0be:	sub    rsp,0x20
   14001d0c2:	call   0x140021a70
   14001d0c7:	cmp    BYTE PTR [rax+0x28],0x0
   14001d0cb:	jne    0x14001d0f5
   14001d0cd:	call   0x1400210b0
   14001d0d2:	mov    rbx,rax
   14001d0d5:	call   QWORD PTR [rip+0x473e5]        # 0x1400644c0
   14001d0db:	lea    rdx,[rip+0xfffffffffffffda2]        # 0x14001ce84
   14001d0e2:	xor    r8d,r8d
   14001d0e5:	or     ecx,0xffffffff
   14001d0e8:	mov    r9d,eax
   14001d0eb:	call   QWORD PTR [rip+0x47927]        # 0x140064a18
   14001d0f1:	mov    QWORD PTR [rbx+0x50],rax
   14001d0f5:	add    rsp,0x20
   14001d0f9:	pop    rbx
   14001d0fa:	ret    
   14001d0fb:	int3   
   14001d0fc:	mov    rax,rsp
   14001d0ff:	mov    QWORD PTR [rax+0x8],rbx
   14001d103:	mov    QWORD PTR [rax+0x10],rbp
   14001d107:	mov    QWORD PTR [rax+0x18],rsi
   14001d10b:	mov    QWORD PTR [rax+0x20],rdi
   14001d10f:	push   r12
   14001d111:	sub    rsp,0x30
   14001d115:	xor    ebx,ebx
   14001d117:	mov    r12d,edx
   14001d11a:	cmp    edx,ebx
   14001d11c:	jg     0x14001d237
   14001d122:	mov    rbp,QWORD PTR [rcx+0x40]
   14001d126:	lea    esi,[rbx+0x1]
   14001d129:	cmp    rbp,rbx
   14001d12c:	je     0x14001d177
   14001d12e:	mov    rcx,QWORD PTR [rbp+0x40]
   14001d132:	cmp    rcx,rbx
   14001d135:	je     0x14001d177
   14001d137:	call   QWORD PTR [rip+0x4790b]        # 0x140064a48
   14001d13d:	cmp    eax,ebx
   14001d13f:	je     0x14001d177
   14001d141:	mov    rdx,QWORD PTR [rbp+0x40]
   14001d145:	mov    r9,rsi
   14001d148:	mov    r8d,0x363
   14001d14e:	mov    rcx,rbp
   14001d151:	mov    QWORD PTR [rsp+0x20],rbx
   14001d156:	call   0x140026024
   14001d15b:	mov    rcx,QWORD PTR [rbp+0x40]
   14001d15f:	xor    r9d,r9d
   14001d162:	mov    r8,rsi
   14001d165:	mov    edx,0x363
   14001d16a:	mov    DWORD PTR [rsp+0x28],esi
   14001d16e:	mov    DWORD PTR [rsp+0x20],esi
   14001d172:	call   0x1400264d4
   14001d177:	call   0x140021a70
   14001d17c:	lea    rdx,[rip+0xffffffffffffe09d]        # 0x14001b220
   14001d183:	lea    rcx,[rax+0xc0]
   14001d18a:	call   0x14002d3a8
   14001d18f:	cmp    rax,rbx
   14001d192:	jne    0x14001d19a
   14001d194:	call   0x1400208f8
   14001d199:	int3   
   14001d19a:	mov    rdi,QWORD PTR [rax+0x10]
   14001d19e:	jmp    0x14001d22c
   14001d1a3:	cmp    QWORD PTR [rdi+0x40],rbx
   14001d1a7:	je     0x14001d225
   14001d1a9:	cmp    rdi,rbp
   14001d1ac:	je     0x14001d225
   14001d1ae:	cmp    DWORD PTR [rdi+0x120],ebx
   14001d1b4:	jne    0x14001d1c0
   14001d1b6:	xor    edx,edx
   14001d1b8:	mov    rcx,rdi
   14001d1bb:	call   0x140029b0c
   14001d1c0:	mov    rcx,QWORD PTR [rdi+0x40]
   14001d1c4:	call   QWORD PTR [rip+0x4787e]        # 0x140064a48
   14001d1ca:	cmp    eax,ebx
   14001d1cc:	jne    0x14001d1d6
   14001d1ce:	cmp    DWORD PTR [rdi+0x120],ebx
   14001d1d4:	jl     0x14001d20c
   14001d1d6:	mov    rdx,QWORD PTR [rdi+0x40]
   14001d1da:	mov    r9,rsi
   14001d1dd:	mov    r8d,0x363
   14001d1e3:	mov    rcx,rdi
   14001d1e6:	mov    QWORD PTR [rsp+0x20],rbx
   14001d1eb:	call   0x140026024
   14001d1f0:	mov    rcx,QWORD PTR [rdi+0x40]
   14001d1f4:	xor    r9d,r9d
   14001d1f7:	mov    r8,rsi
   14001d1fa:	mov    edx,0x363
   14001d1ff:	mov    DWORD PTR [rsp+0x28],esi
   14001d203:	mov    DWORD PTR [rsp+0x20],esi
   14001d207:	call   0x1400264d4
   14001d20c:	mov    edx,DWORD PTR [rdi+0x120]
   14001d212:	cmp    edx,ebx
   14001d214:	jle    0x14001d21e
   14001d216:	mov    rcx,rdi
   14001d219:	call   0x140029b0c
   14001d21e:	or     DWORD PTR [rdi+0x120],0xffffffff
   14001d225:	mov    rdi,QWORD PTR [rdi+0xc8]
   14001d22c:	cmp    rdi,rbx
   14001d22f:	jne    0x14001d1a3
   14001d235:	jmp    0x14001d26e
   14001d237:	call   0x140021a70
   14001d23c:	lea    rdx,[rip+0xffffffffffffdfdd]        # 0x14001b220
   14001d243:	lea    rcx,[rax+0xc0]
   14001d24a:	call   0x14002d3a8
   14001d24f:	cmp    rax,rbx
   14001d252:	jne    0x14001d25a
   14001d254:	call   0x1400208f8
   14001d259:	int3   
   14001d25a:	cmp    DWORD PTR [rax+0x20],ebx
   14001d25d:	jne    0x14001d26e
   14001d25f:	call   0x14002dbac
   14001d264:	mov    ecx,0x1
   14001d269:	call   0x14002df70
   14001d26e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d273:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d278:	mov    rdi,QWORD PTR [rsp+0x58]
   14001d27d:	cmp    r12d,ebx
   14001d280:	setl   bl
   14001d283:	mov    eax,ebx
   14001d285:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d28a:	add    rsp,0x30
   14001d28e:	pop    r12
   14001d290:	ret    
   14001d291:	int3   
   14001d292:	int3   
   14001d293:	int3   
   14001d294:	sub    rsp,0x28
   14001d298:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001d2a0:	jne    0x14001d2a6
   14001d2a2:	xor    eax,eax
   14001d2a4:	jmp    0x14001d2b3
   14001d2a6:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001d2ad:	mov    rax,QWORD PTR [rcx]
   14001d2b0:	call   QWORD PTR [rax+0x20]
   14001d2b3:	add    rsp,0x28
   14001d2b7:	ret    
   14001d2b8:	mov    QWORD PTR [rsp+0x8],rbx
   14001d2bd:	mov    QWORD PTR [rsp+0x10],rbp
   14001d2c2:	mov    QWORD PTR [rsp+0x18],rsi
   14001d2c7:	push   rdi
   14001d2c8:	push   r12
   14001d2ca:	push   r13
   14001d2cc:	sub    rsp,0x20
   14001d2d0:	mov    rax,QWORD PTR [rcx]
   14001d2d3:	mov    rsi,rdx
   14001d2d6:	mov    r9d,0x1
   14001d2dc:	mov    r12d,DWORD PTR [rax-0x10]
   14001d2e0:	sub    r9d,DWORD PTR [rax-0x8]
   14001d2e4:	sub    rsi,rax
   14001d2e7:	mov    eax,DWORD PTR [rax-0xc]
   14001d2ea:	movsxd r13,r8d
   14001d2ed:	sar    rsi,1
   14001d2f0:	lea    ebx,[r12+r13*1]
   14001d2f4:	mov    rbp,rdx
   14001d2f7:	mov    rdi,rcx
   14001d2fa:	sub    eax,ebx
   14001d2fc:	or     r9d,eax
   14001d2ff:	jge    0x14001d308
   14001d301:	mov    edx,ebx
   14001d303:	call   0x140002d40
   14001d308:	cmp    rsi,r12
   14001d30b:	mov    rax,QWORD PTR [rdi]
   14001d30e:	ja     0x14001d314
   14001d310:	lea    rbp,[rax+rsi*2]
   14001d314:	mov    rdx,r13
   14001d317:	lea    rcx,[rax+r12*2]
   14001d31b:	mov    r8,rbp
   14001d31e:	add    rdx,rdx
   14001d321:	mov    r9,rdx
   14001d324:	call   0x1400466d0
   14001d329:	test   ebx,ebx
   14001d32b:	js     0x14001d35c
   14001d32d:	mov    rax,QWORD PTR [rdi]
   14001d330:	cmp    ebx,DWORD PTR [rax-0xc]
   14001d333:	jg     0x14001d35c
   14001d335:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d33a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d33f:	mov    DWORD PTR [rax-0x10],ebx
   14001d342:	mov    rax,QWORD PTR [rdi]
   14001d345:	movsxd rcx,ebx
   14001d348:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d34d:	and    WORD PTR [rax+rcx*2],0x0
   14001d352:	add    rsp,0x20
   14001d356:	pop    r13
   14001d358:	pop    r12
   14001d35a:	pop    rdi
   14001d35b:	ret    
   14001d35c:	mov    ecx,0x80070057
   14001d361:	call   0x140001430
   14001d366:	int3   
   14001d367:	int3   
   14001d368:	mov    rax,rsp
   14001d36b:	push   rdi
   14001d36c:	sub    rsp,0x280
   14001d373:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001d37c:	mov    QWORD PTR [rax+0x18],rbx
   14001d380:	mov    QWORD PTR [rax+0x20],rsi
   14001d384:	mov    rax,QWORD PTR [rip+0x699e5]        # 0x140086d70
   14001d38b:	xor    rax,rsp
   14001d38e:	mov    QWORD PTR [rsp+0x270],rax
   14001d396:	mov    rsi,rdx
   14001d399:	mov    rdi,rcx
   14001d39c:	mov    QWORD PTR [rsp+0x38],rcx
   14001d3a1:	mov    QWORD PTR [rsp+0x40],rdx
   14001d3a6:	lea    r8,[rsp+0x30]
   14001d3ab:	mov    rdx,QWORD PTR [rdx]
   14001d3ae:	call   QWORD PTR [rip+0x46c5c]        # 0x140064010
   14001d3b4:	mov    ebx,eax
   14001d3b6:	test   eax,eax
   14001d3b8:	jne    0x14001d467
   14001d3be:	mov    r9d,0x104
   14001d3c4:	lea    r8,[rsp+0x60]
   14001d3c9:	xor    edx,edx
   14001d3cb:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d3d0:	call   QWORD PTR [rip+0x46c32]        # 0x140064008
   14001d3d6:	mov    ebx,eax
   14001d3d8:	test   eax,eax
   14001d3da:	jne    0x14001d43e
   14001d3dc:	lea    rdx,[rsp+0x60]
   14001d3e1:	lea    rcx,[rsp+0x28]
   14001d3e6:	call   0x14000c360
   14001d3eb:	nop
   14001d3ec:	lea    rdx,[rsp+0x28]
   14001d3f1:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d3f6:	call   0x14001d368
   14001d3fb:	mov    ebx,eax
   14001d3fd:	test   eax,eax
   14001d3ff:	setne  BYTE PTR [rsp+0x20]
   14001d404:	mov    rdx,QWORD PTR [rsp+0x28]
   14001d409:	add    rdx,0xffffffffffffffe8
   14001d40d:	or     eax,0xffffffff
   14001d410:	lock xadd DWORD PTR [rdx+0x10],eax
   14001d415:	add    eax,0xffffffff
   14001d418:	test   eax,eax
   14001d41a:	jg     0x14001d425
   14001d41c:	mov    rcx,QWORD PTR [rdx]
   14001d41f:	mov    rax,QWORD PTR [rcx]
   14001d422:	call   QWORD PTR [rax+0x8]
   14001d425:	cmp    BYTE PTR [rsp+0x20],0x0
   14001d42a:	je     0x14001d42e
   14001d42c:	jmp    0x14001d43e
   14001d42e:	jmp    0x14001d3be
   14001d430:	mov    ebx,DWORD PTR [rsp+0x28]
   14001d434:	mov    rdi,QWORD PTR [rsp+0x38]
   14001d439:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d43e:	cmp    ebx,0x103
   14001d444:	je     0x14001d44e
   14001d446:	cmp    ebx,0x3f2
   14001d44c:	jne    0x14001d45c
   14001d44e:	mov    rdx,QWORD PTR [rsi]
   14001d451:	mov    rcx,rdi
   14001d454:	call   QWORD PTR [rip+0x46bde]        # 0x140064038
   14001d45a:	mov    ebx,eax
   14001d45c:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d461:	call   QWORD PTR [rip+0x46c01]        # 0x140064068
   14001d467:	mov    eax,ebx
   14001d469:	mov    rcx,QWORD PTR [rsp+0x270]
   14001d471:	xor    rcx,rsp
   14001d474:	call   0x140046470
   14001d479:	lea    r11,[rsp+0x280]
   14001d481:	mov    rbx,QWORD PTR [r11+0x20]
   14001d485:	mov    rsi,QWORD PTR [r11+0x28]
   14001d489:	mov    rsp,r11
   14001d48c:	pop    rdi
   14001d48d:	ret    
   14001d48e:	int3   
   14001d48f:	int3   
   14001d490:	int3   
   14001d491:	int3   
   14001d492:	int3   
   14001d493:	int3   
   14001d494:	int3   
   14001d495:	int3   
   14001d496:	int3   
   14001d497:	int3   
   14001d498:	rex push rbp
   14001d49a:	sub    rsp,0x20
   14001d49e:	mov    rbp,rdx
   14001d4a1:	lea    rcx,[rbp+0x28]
   14001d4a5:	call   0x1400010c0
   14001d4aa:	add    rsp,0x20
   14001d4ae:	pop    rbp
   14001d4af:	ret    
   14001d4b0:	int3   
   14001d4b1:	int3   
   14001d4b2:	int3   
   14001d4b3:	int3   
   14001d4b4:	int3   
   14001d4b5:	int3   
   14001d4b6:	int3   
   14001d4b7:	int3   
   14001d4b8:	mov    QWORD PTR [rsp+0x10],rdx
   14001d4bd:	push   rbp
   14001d4be:	sub    rsp,0x20
   14001d4c2:	mov    rbp,rdx
   14001d4c5:	mov    DWORD PTR [rbp+0x28],0x8
   14001d4cc:	mov    rcx,QWORD PTR [rbp+0x50]
   14001d4d0:	call   0x1400207b8
   14001d4d5:	nop
   14001d4d6:	lea    rax,[rip+0xffffffffffffff53]        # 0x14001d430
   14001d4dd:	jmp    0x14001d4df
   14001d4df:	add    rsp,0x20
   14001d4e3:	pop    rbp
   14001d4e4:	ret    
   14001d4e5:	int3   
   14001d4e6:	int3   
   14001d4e7:	int3   
   14001d4e8:	mov    rax,rsp
   14001d4eb:	push   rdi
   14001d4ec:	sub    rsp,0x290
   14001d4f3:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001d4fc:	mov    QWORD PTR [rax+0x10],rbx
   14001d500:	mov    rax,QWORD PTR [rip+0x69869]        # 0x140086d70
   14001d507:	xor    rax,rsp
   14001d50a:	mov    QWORD PTR [rsp+0x280],rax
   14001d512:	mov    rbx,rcx
   14001d515:	and    QWORD PTR [rsp+0x40],0x0
   14001d51b:	and    DWORD PTR [rsp+0x48],0x0
   14001d520:	call   0x14001d294
   14001d525:	mov    QWORD PTR [rsp+0x50],rax
   14001d52a:	test   rax,rax
   14001d52d:	je     0x14001d57f
   14001d52f:	xor    eax,eax
   14001d531:	cmp    QWORD PTR [rbx+0xb0],rax
   14001d538:	setne  al
   14001d53b:	test   eax,eax
   14001d53d:	je     0x14001d579
   14001d53f:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001d546:	mov    rax,QWORD PTR [rcx]
   14001d549:	lea    rdx,[rsp+0x50]
   14001d54e:	call   QWORD PTR [rax+0x28]
   14001d551:	test   rax,rax
   14001d554:	je     0x14001d56f
   14001d556:	mov    r10,QWORD PTR [rax]
   14001d559:	and    QWORD PTR [rsp+0x20],0x0
   14001d55f:	xor    r9d,r9d
   14001d562:	xor    edx,edx
   14001d564:	lea    r8d,[r9-0x4]
   14001d568:	mov    rcx,rax
   14001d56b:	call   QWORD PTR [r10+0x18]
   14001d56f:	cmp    QWORD PTR [rsp+0x50],0x0
   14001d575:	jne    0x14001d52f
   14001d577:	jmp    0x14001d57f
   14001d579:	call   0x1400208f8
   14001d57e:	int3   
   14001d57f:	cmp    QWORD PTR [rbx+0xa8],0x0
   14001d587:	je     0x14001d6e5
   14001d58d:	xor    eax,eax
   14001d58f:	cmp    QWORD PTR [rbx+0xd0],rax
   14001d596:	setne  al
   14001d599:	test   eax,eax
   14001d59b:	jne    0x14001d5a3
   14001d59d:	call   0x1400208f8
   14001d5a2:	int3   
   14001d5a3:	lea    rdx,[rip+0x4af36]        # 0x1400684e0
   14001d5aa:	lea    rcx,[rsp+0x30]
   14001d5af:	call   0x14000c360
   14001d5b4:	nop
   14001d5b5:	mov    rdi,QWORD PTR [rbx+0xa8]
   14001d5bc:	test   rdi,rdi
   14001d5bf:	jne    0x14001d5c5
   14001d5c1:	xor    eax,eax
   14001d5c3:	jmp    0x14001d5cd
   14001d5c5:	mov    rcx,rdi
   14001d5c8:	call   0x140048610
   14001d5cd:	mov    r8d,eax
   14001d5d0:	mov    rdx,rdi
   14001d5d3:	lea    rcx,[rsp+0x30]
   14001d5d8:	call   0x14001d2b8
   14001d5dd:	lea    r8,[rip+0x4832c]        # 0x140065910
   14001d5e4:	lea    rdx,[rsp+0x30]
   14001d5e9:	lea    rcx,[rsp+0x58]
   14001d5ee:	call   0x140003f80
   14001d5f3:	nop
   14001d5f4:	mov    r8,QWORD PTR [rbx+0xd0]
   14001d5fb:	mov    rdx,rax
   14001d5fe:	lea    rcx,[rsp+0x38]
   14001d603:	call   0x140003f80
   14001d608:	nop
   14001d609:	mov    rdx,QWORD PTR [rsp+0x58]
   14001d60e:	add    rdx,0xffffffffffffffe8
   14001d612:	or     edi,0xffffffff
   14001d615:	mov    eax,edi
   14001d617:	lock xadd DWORD PTR [rdx+0x10],eax
   14001d61c:	add    eax,edi
   14001d61e:	test   eax,eax
   14001d620:	jg     0x14001d62b
   14001d622:	mov    rcx,QWORD PTR [rdx]
   14001d625:	mov    rax,QWORD PTR [rcx]
   14001d628:	call   QWORD PTR [rax+0x8]
   14001d62b:	lea    rdx,[rsp+0x38]
   14001d630:	mov    rbx,0xffffffff80000001
   14001d637:	mov    rcx,rbx
   14001d63a:	call   0x14001d368
   14001d63f:	lea    r8,[rsp+0x40]
   14001d644:	mov    rdx,QWORD PTR [rsp+0x30]
   14001d649:	mov    rcx,rbx
   14001d64c:	call   QWORD PTR [rip+0x469be]        # 0x140064010
   14001d652:	test   eax,eax
   14001d654:	jne    0x14001d68d
   14001d656:	mov    r9d,0x104
   14001d65c:	lea    r8,[rsp+0x70]
   14001d661:	xor    edx,edx
   14001d663:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d668:	call   QWORD PTR [rip+0x4699a]        # 0x140064008
   14001d66e:	cmp    eax,0x103
   14001d673:	jne    0x14001d682
   14001d675:	lea    rdx,[rsp+0x30]
   14001d67a:	mov    rcx,rbx
   14001d67d:	call   0x14001d368
   14001d682:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d687:	call   QWORD PTR [rip+0x469db]        # 0x140064068
   14001d68d:	lea    r9,[rsp+0x48]
   14001d692:	lea    r8,[rsp+0x70]
   14001d697:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d69c:	mov    rcx,rbx
   14001d69f:	call   QWORD PTR [rip+0x4695b]        # 0x140064000
   14001d6a5:	nop
   14001d6a6:	mov    rdx,QWORD PTR [rsp+0x38]
   14001d6ab:	add    rdx,0xffffffffffffffe8
   14001d6af:	mov    eax,edi
   14001d6b1:	lock xadd DWORD PTR [rdx+0x10],eax
   14001d6b6:	add    eax,edi
   14001d6b8:	test   eax,eax
   14001d6ba:	jg     0x14001d6c6
   14001d6bc:	mov    rcx,QWORD PTR [rdx]
   14001d6bf:	mov    rax,QWORD PTR [rcx]
   14001d6c2:	call   QWORD PTR [rax+0x8]
   14001d6c5:	nop
   14001d6c6:	mov    rdx,QWORD PTR [rsp+0x30]
   14001d6cb:	add    rdx,0xffffffffffffffe8
   14001d6cf:	mov    eax,edi
   14001d6d1:	lock xadd DWORD PTR [rdx+0x10],eax
   14001d6d6:	add    eax,edi
   14001d6d8:	test   eax,eax
   14001d6da:	jg     0x14001d6e5
   14001d6dc:	mov    rcx,QWORD PTR [rdx]
   14001d6df:	mov    rax,QWORD PTR [rcx]
   14001d6e2:	call   QWORD PTR [rax+0x8]
   14001d6e5:	mov    eax,0x1
   14001d6ea:	mov    rcx,QWORD PTR [rsp+0x280]
   14001d6f2:	xor    rcx,rsp
   14001d6f5:	call   0x140046470
   14001d6fa:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14001d702:	add    rsp,0x290
   14001d709:	pop    rdi
   14001d70a:	ret    
   14001d70b:	int3   
   14001d70c:	int3   
   14001d70d:	int3   
   14001d70e:	int3   
   14001d70f:	int3   
   14001d710:	int3   
   14001d711:	int3   
   14001d712:	int3   
   14001d713:	int3   
   14001d714:	int3   
   14001d715:	int3   
   14001d716:	int3   
   14001d717:	int3   
   14001d718:	rex push rbp
   14001d71a:	sub    rsp,0x20
   14001d71e:	mov    rbp,rdx
   14001d721:	lea    rcx,[rbp+0x30]
   14001d725:	call   0x1400010c0
   14001d72a:	add    rsp,0x20
   14001d72e:	pop    rbp
   14001d72f:	ret    
   14001d730:	int3   
   14001d731:	int3   
   14001d732:	int3   
   14001d733:	int3   
   14001d734:	int3   
   14001d735:	int3   
   14001d736:	int3   
   14001d737:	int3   
   14001d738:	rex push rbp
   14001d73a:	sub    rsp,0x20
   14001d73e:	mov    rbp,rdx
   14001d741:	lea    rcx,[rbp+0x58]
   14001d745:	call   0x1400010c0
   14001d74a:	add    rsp,0x20
   14001d74e:	pop    rbp
   14001d74f:	ret    
   14001d750:	int3   
   14001d751:	int3   
   14001d752:	int3   
   14001d753:	int3   
   14001d754:	int3   
   14001d755:	int3   
   14001d756:	int3   
   14001d757:	int3   
   14001d758:	rex push rbp
   14001d75a:	sub    rsp,0x20
   14001d75e:	mov    rbp,rdx
   14001d761:	lea    rcx,[rbp+0x38]
   14001d765:	call   0x1400010c0
   14001d76a:	add    rsp,0x20
   14001d76e:	pop    rbp
   14001d76f:	ret    
   14001d770:	mov    QWORD PTR [rsp+0x8],rbx
   14001d775:	push   rdi
   14001d776:	sub    rsp,0x20
   14001d77a:	test   edx,edx
   14001d77c:	mov    edi,edx
   14001d77e:	mov    rbx,rcx
   14001d781:	je     0x14001d793
   14001d783:	cmp    edx,0x1
   14001d786:	je     0x14001d793
   14001d788:	cmp    edx,0xffffffff
   14001d78b:	je     0x14001d793
   14001d78d:	call   0x1400208f8
   14001d792:	int3   
   14001d793:	cmp    QWORD PTR [rip+0x6edbd],0x0        # 0x14008c558
   14001d79b:	jne    0x14001d7a3
   14001d79d:	call   0x1400208f8
   14001d7a2:	int3   
   14001d7a3:	mov    ecx,0x2
   14001d7a8:	call   0x14002d810
   14001d7ad:	add    DWORD PTR [rbx+0x100],edi
   14001d7b3:	cmp    DWORD PTR [rbx+0x100],0x0
   14001d7ba:	jle    0x14001d7df
   14001d7bc:	mov    rcx,QWORD PTR [rip+0x6ed95]        # 0x14008c558
   14001d7c3:	call   QWORD PTR [rip+0x47367]        # 0x140064b30
   14001d7c9:	test   edi,edi
   14001d7cb:	jle    0x14001d7f3
   14001d7cd:	cmp    DWORD PTR [rbx+0x100],0x1
   14001d7d4:	jne    0x14001d7f3
   14001d7d6:	mov    QWORD PTR [rbx+0x108],rax
   14001d7dd:	jmp    0x14001d7f3
   14001d7df:	mov    rcx,QWORD PTR [rbx+0x108]
   14001d7e6:	and    DWORD PTR [rbx+0x100],0x0
   14001d7ed:	call   QWORD PTR [rip+0x4733d]        # 0x140064b30
   14001d7f3:	mov    ecx,0x2
   14001d7f8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d7fd:	add    rsp,0x20
   14001d801:	pop    rdi
   14001d802:	jmp    0x14002d8a4
   14001d807:	int3   
   14001d808:	sub    rsp,0x28
   14001d80c:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001d814:	je     0x14001d825
   14001d816:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001d81d:	mov    rax,QWORD PTR [rcx]
   14001d820:	call   QWORD PTR [rax+0x40]
   14001d823:	jmp    0x14001d82a
   14001d825:	mov    eax,0x1
   14001d82a:	add    rsp,0x28
   14001d82e:	ret    
   14001d82f:	int3   
   14001d830:	sub    rsp,0x28
   14001d834:	test   rdx,rdx
   14001d837:	jne    0x14001d83f
   14001d839:	call   0x1400208f8
   14001d83e:	int3   
   14001d83f:	cmp    QWORD PTR [rcx+0x110],0x0
   14001d847:	je     0x14001d856
   14001d849:	mov    rcx,QWORD PTR [rcx+0x110]
   14001d850:	mov    rax,QWORD PTR [rcx]
   14001d853:	call   QWORD PTR [rax+0x8]
   14001d856:	add    rsp,0x28
   14001d85a:	ret    
   14001d85b:	int3   
   14001d85c:	sub    rsp,0x28
   14001d860:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001d868:	jne    0x14001d870
   14001d86a:	call   0x1400208f8
   14001d86f:	int3   
   14001d870:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001d877:	mov    rax,QWORD PTR [rcx]
   14001d87a:	add    rsp,0x28
   14001d87e:	rex.W jmp QWORD PTR [rax+0x38]
   14001d882:	int3   
   14001d883:	int3   
   14001d884:	sub    rsp,0x28
   14001d888:	test   rdx,rdx
   14001d88b:	mov    r8,rdx
   14001d88e:	jne    0x14001d896
   14001d890:	call   0x1400208f8
   14001d895:	int3   
   14001d896:	cmp    QWORD PTR [rcx+0x110],0x0
   14001d89e:	jne    0x14001d8ac
   14001d8a0:	mov    rax,QWORD PTR [rdx]
   14001d8a3:	mov    rcx,r8
   14001d8a6:	xor    edx,edx
   14001d8a8:	call   QWORD PTR [rax]
   14001d8aa:	jmp    0x14001d8b9
   14001d8ac:	mov    rcx,QWORD PTR [rcx+0x110]
   14001d8b3:	mov    rax,QWORD PTR [rcx]
   14001d8b6:	call   QWORD PTR [rax+0x18]
   14001d8b9:	add    rsp,0x28
   14001d8bd:	ret    
   14001d8be:	int3   
   14001d8bf:	int3   
   14001d8c0:	sub    rsp,0x28
   14001d8c4:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001d8cc:	je     0x14001d8dd
   14001d8ce:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001d8d5:	mov    rax,QWORD PTR [rcx]
   14001d8d8:	call   QWORD PTR [rax+0x60]
   14001d8db:	jmp    0x14001d8df
   14001d8dd:	xor    eax,eax
   14001d8df:	add    rsp,0x28
   14001d8e3:	ret    
   14001d8e4:	mov    rcx,QWORD PTR [rcx+0x40]
   14001d8e8:	xor    r9d,r9d
   14001d8eb:	xor    r8d,r8d
   14001d8ee:	mov    rcx,QWORD PTR [rcx+0x40]
   14001d8f2:	lea    edx,[r9+0x10]
   14001d8f6:	rex.W jmp QWORD PTR [rip+0x47273]        # 0x140064b70
   14001d8fd:	int3   
   14001d8fe:	int3   
   14001d8ff:	int3   
   14001d900:	mov    QWORD PTR [rsp+0x8],rbx
   14001d905:	push   rdi
   14001d906:	sub    rsp,0x20
   14001d90a:	mov    r8,QWORD PTR [rcx+0x110]
   14001d911:	mov    rdi,rcx
   14001d914:	test   r8,r8
   14001d917:	jne    0x14001d91f
   14001d919:	call   0x1400208f8
   14001d91e:	int3   
   14001d91f:	mov    ecx,0xe110
   14001d924:	cmp    edx,ecx
   14001d926:	jae    0x14001d92e
   14001d928:	call   0x1400208f8
   14001d92d:	int3   
   14001d92e:	mov    eax,DWORD PTR [r8+0x8]
   14001d932:	add    eax,ecx
   14001d934:	cmp    edx,eax
   14001d936:	jb     0x14001d93e
   14001d938:	call   0x1400208f8
   14001d93d:	int3   
   14001d93e:	lea    ebx,[rdx-0xe110]
   14001d944:	test   ebx,ebx
   14001d946:	js     0x14001d989
   14001d948:	cmp    ebx,DWORD PTR [r8+0x8]
   14001d94c:	jge    0x14001d989
   14001d94e:	mov    rax,QWORD PTR [r8+0x10]
   14001d952:	mov    r8,QWORD PTR [rdi]
   14001d955:	movsxd rcx,ebx
   14001d958:	mov    rdx,QWORD PTR [rax+rcx*8]
   14001d95c:	mov    rcx,rdi
   14001d95f:	call   QWORD PTR [r8+0x110]
   14001d966:	test   rax,rax
   14001d969:	jne    0x14001d979
   14001d96b:	mov    rcx,QWORD PTR [rdi+0x110]
   14001d972:	mov    edx,ebx
   14001d974:	mov    rax,QWORD PTR [rcx]
   14001d977:	call   QWORD PTR [rax]
   14001d979:	mov    eax,0x1
   14001d97e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d983:	add    rsp,0x20
   14001d987:	pop    rdi
   14001d988:	ret    
   14001d989:	call   0x1400208f8
   14001d98e:	int3   
   14001d98f:	int3   
   14001d990:	mov    rax,rsp
   14001d993:	mov    QWORD PTR [rax+0x8],rbx
   14001d997:	mov    QWORD PTR [rax+0x10],rsi
   14001d99b:	mov    QWORD PTR [rax+0x18],rdi
   14001d99f:	mov    QWORD PTR [rax+0x20],r12
   14001d9a3:	push   r13
   14001d9a5:	sub    rsp,0x30
   14001d9a9:	mov    edi,r9d
   14001d9ac:	mov    rsi,r8
   14001d9af:	mov    r12,rdx
   14001d9b2:	mov    r13,rcx
   14001d9b5:	and    QWORD PTR [rax-0x10],0x0
   14001d9ba:	call   0x140021a70
   14001d9bf:	lea    rdx,[rsp+0x28]
   14001d9c4:	mov    rcx,QWORD PTR [rax+0xd8]
   14001d9cb:	call   0x140020ce0
   14001d9d0:	mov    ebx,eax
   14001d9d2:	mov    DWORD PTR [rsp+0x24],eax
   14001d9d6:	and    DWORD PTR [rsp+0x20],0x0
   14001d9db:	test   eax,eax
   14001d9dd:	je     0x14001da2d
   14001d9df:	mov    r9d,edi
   14001d9e2:	mov    r8,rsi
   14001d9e5:	mov    rdx,r12
   14001d9e8:	mov    rcx,r13
   14001d9eb:	call   QWORD PTR [rip+0x47147]        # 0x140064b38
   14001d9f1:	mov    esi,eax
   14001d9f3:	mov    DWORD PTR [rsp+0x20],eax
   14001d9f7:	cmp    ebx,0x2
   14001d9fa:	je     0x14001da2b
   14001d9fc:	xor    ebx,ebx
   14001d9fe:	test   eax,eax
   14001da00:	sete   bl
   14001da03:	test   ebx,ebx
   14001da05:	je     0x14001da11
   14001da07:	call   QWORD PTR [rip+0x46bf3]        # 0x140064600
   14001da0d:	mov    edi,eax
   14001da0f:	jmp    0x14001da13
   14001da11:	xor    edi,edi
   14001da13:	mov    rdx,QWORD PTR [rsp+0x28]
   14001da18:	xor    ecx,ecx
   14001da1a:	call   0x140020cc4
   14001da1f:	test   ebx,ebx
   14001da21:	je     0x14001da2b
   14001da23:	mov    ecx,edi
   14001da25:	call   QWORD PTR [rip+0x46a75]        # 0x1400644a0
   14001da2b:	mov    eax,esi
   14001da2d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001da32:	mov    rsi,QWORD PTR [rsp+0x48]
   14001da37:	mov    rdi,QWORD PTR [rsp+0x50]
   14001da3c:	mov    r12,QWORD PTR [rsp+0x58]
   14001da41:	add    rsp,0x30
   14001da45:	pop    r13
   14001da47:	ret    
   14001da48:	int3   
   14001da49:	int3   
   14001da4a:	int3   
   14001da4b:	int3   
   14001da4c:	int3   
   14001da4d:	int3   
   14001da4e:	int3   
   14001da4f:	int3   
   14001da50:	rex push rbx
   14001da52:	push   rbp
   14001da53:	push   rdi
   14001da54:	sub    rsp,0x20
   14001da58:	mov    rbp,rdx
   14001da5b:	cmp    DWORD PTR [rbp+0x24],0x2
   14001da5f:	je     0x14001da90
   14001da61:	xor    ebx,ebx
   14001da63:	cmp    DWORD PTR [rbp+0x20],ebx
   14001da66:	sete   bl
   14001da69:	test   ebx,ebx
   14001da6b:	je     0x14001da77
   14001da6d:	call   QWORD PTR [rip+0x46b8d]        # 0x140064600
   14001da73:	mov    edi,eax
   14001da75:	jmp    0x14001da79
   14001da77:	xor    edi,edi
   14001da79:	mov    rdx,QWORD PTR [rbp+0x28]
   14001da7d:	xor    ecx,ecx
   14001da7f:	call   0x140020cc4
   14001da84:	test   ebx,ebx
   14001da86:	je     0x14001da90
   14001da88:	mov    ecx,edi
   14001da8a:	call   QWORD PTR [rip+0x46a10]        # 0x1400644a0
   14001da90:	add    rsp,0x20
   14001da94:	pop    rdi
   14001da95:	pop    rbp
   14001da96:	pop    rbx
   14001da97:	ret    
   14001da98:	mov    QWORD PTR [rsp+0x8],rbx
   14001da9d:	push   rdi
   14001da9e:	sub    rsp,0x20
   14001daa2:	mov    edi,ecx
   14001daa4:	call   0x14001c840
   14001daa9:	test   rax,rax
   14001daac:	je     0x14001dabf
   14001daae:	mov    rdx,QWORD PTR [rax]
   14001dab1:	mov    rcx,rax
   14001dab4:	call   QWORD PTR [rdx+0xe8]
   14001daba:	mov    rbx,rax
   14001dabd:	jmp    0x14001dac1
   14001dabf:	xor    ebx,ebx
   14001dac1:	test   rbx,rbx
   14001dac4:	je     0x14001daf2
   14001dac6:	mov    rax,QWORD PTR [rbx]
   14001dac9:	mov    rcx,rbx
   14001dacc:	call   QWORD PTR [rax+0x240]
   14001dad2:	test   eax,eax
   14001dad4:	je     0x14001daf2
   14001dad6:	cmp    QWORD PTR [rbx+0xe0],0x0
   14001dade:	je     0x14001daf2
   14001dae0:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001dae7:	mov    edx,edi
   14001dae9:	mov    rax,QWORD PTR [rcx]
   14001daec:	call   QWORD PTR [rax+0xc8]
   14001daf2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001daf7:	add    rsp,0x20
   14001dafb:	pop    rdi
   14001dafc:	ret    
   14001dafd:	int3   
   14001dafe:	int3   
   14001daff:	int3   
   14001db00:	mov    QWORD PTR [rsp+0x8],rbx
   14001db05:	mov    QWORD PTR [rsp+0x10],rbp
   14001db0a:	mov    QWORD PTR [rsp+0x18],rsi
   14001db0f:	push   rdi
   14001db10:	sub    rsp,0x20
   14001db14:	test   rcx,rcx
   14001db17:	mov    rsi,rdx
   14001db1a:	mov    rbp,rcx
   14001db1d:	mov    rbx,rcx
   14001db20:	jne    0x14001db65
   14001db22:	call   0x1400210b0
   14001db27:	mov    rbx,QWORD PTR [rax+0x1b8]
   14001db2e:	test   rbx,rbx
   14001db31:	je     0x14001db39
   14001db33:	mov    rbx,QWORD PTR [rbx+0x40]
   14001db37:	jmp    0x14001db60
   14001db39:	call   0x14001c840
   14001db3e:	test   rax,rax
   14001db41:	je     0x14001db51
   14001db43:	mov    rdx,QWORD PTR [rax]
   14001db46:	mov    rcx,rax
   14001db49:	call   QWORD PTR [rdx+0xe8]
   14001db4f:	jmp    0x14001db53
   14001db51:	xor    eax,eax
   14001db53:	test   rax,rax
   14001db56:	jne    0x14001db5c
   14001db58:	xor    ebx,ebx
   14001db5a:	jmp    0x14001db8a
   14001db5c:	mov    rbx,QWORD PTR [rax+0x40]
   14001db60:	test   rbx,rbx
   14001db63:	je     0x14001db8a
   14001db65:	mov    edx,0xfffffff0
   14001db6a:	mov    rcx,rbx
   14001db6d:	call   QWORD PTR [rip+0x46e8d]        # 0x140064a00
   14001db73:	bt     eax,0x1e
   14001db77:	jae    0x14001db8a
   14001db79:	mov    rcx,rbx
   14001db7c:	call   QWORD PTR [rip+0x46f5e]        # 0x140064ae0
   14001db82:	test   rax,rax
   14001db85:	mov    rbx,rax
   14001db88:	jne    0x14001db65
   14001db8a:	test   rbx,rbx
   14001db8d:	mov    rdi,rbx
   14001db90:	mov    rax,rbx
   14001db93:	je     0x14001dba6
   14001db95:	mov    rcx,rax
   14001db98:	mov    rdi,rax
   14001db9b:	call   QWORD PTR [rip+0x46f3f]        # 0x140064ae0
   14001dba1:	test   rax,rax
   14001dba4:	jne    0x14001db95
   14001dba6:	test   rbp,rbp
   14001dba9:	jne    0x14001dbbc
   14001dbab:	test   rbx,rbx
   14001dbae:	je     0x14001dbbc
   14001dbb0:	mov    rcx,rbx
   14001dbb3:	call   QWORD PTR [rip+0x46e4f]        # 0x140064a08
   14001dbb9:	mov    rbx,rax
   14001dbbc:	test   rsi,rsi
   14001dbbf:	je     0x14001dbec
   14001dbc1:	test   rdi,rdi
   14001dbc4:	je     0x14001dbe8
   14001dbc6:	mov    rcx,rdi
   14001dbc9:	call   QWORD PTR [rip+0x46e41]        # 0x140064a10
   14001dbcf:	test   eax,eax
   14001dbd1:	je     0x14001dbe8
   14001dbd3:	cmp    rdi,rbx
   14001dbd6:	je     0x14001dbe8
   14001dbd8:	xor    edx,edx
   14001dbda:	mov    rcx,rdi
   14001dbdd:	mov    QWORD PTR [rsi],rdi
   14001dbe0:	call   QWORD PTR [rip+0x46f62]        # 0x140064b48
   14001dbe6:	jmp    0x14001dbec
   14001dbe8:	and    QWORD PTR [rsi],0x0
   14001dbec:	mov    rbp,QWORD PTR [rsp+0x38]
   14001dbf1:	mov    rsi,QWORD PTR [rsp+0x40]
   14001dbf6:	mov    rax,rbx
   14001dbf9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dbfe:	add    rsp,0x20
   14001dc02:	pop    rdi
   14001dc03:	ret    
   14001dc04:	mov    ecx,edx
   14001dc06:	jmp    0x14001da98
   14001dc0b:	int3   
   14001dc0c:	rex push rbx
   14001dc0e:	push   rbp
   14001dc0f:	push   rsi
   14001dc10:	push   rdi
   14001dc11:	push   r12
   14001dc13:	push   r13
   14001dc15:	push   r15
   14001dc17:	sub    rsp,0x250
   14001dc1e:	mov    rax,QWORD PTR [rip+0x6914b]        # 0x140086d70
   14001dc25:	xor    rax,rsp
   14001dc28:	mov    QWORD PTR [rsp+0x240],rax
   14001dc30:	mov    rsi,rcx
   14001dc33:	xor    ecx,ecx
   14001dc35:	mov    r13d,r9d
   14001dc38:	mov    edi,r8d
   14001dc3b:	mov    r15,rdx
   14001dc3e:	call   0x14001da98
   14001dc43:	lea    rdx,[rsp+0x28]
   14001dc48:	xor    ecx,ecx
   14001dc4a:	call   0x14001db00
   14001dc4f:	cmp    rax,QWORD PTR [rsp+0x28]
   14001dc54:	mov    r12,rax
   14001dc57:	je     0x14001dc67
   14001dc59:	mov    edx,0x1
   14001dc5e:	mov    rcx,rax
   14001dc61:	call   QWORD PTR [rip+0x46ee1]        # 0x140064b48
   14001dc67:	xor    ebp,ebp
   14001dc69:	lea    rdx,[rsp+0x20]
   14001dc6e:	mov    rcx,r12
   14001dc71:	mov    rbx,rbp
   14001dc74:	mov    DWORD PTR [rsp+0x20],ebp
   14001dc78:	call   QWORD PTR [rip+0x46d7a]        # 0x1400649f8
   14001dc7e:	cmp    r12,rbp
   14001dc81:	je     0x14001dcad
   14001dc83:	call   QWORD PTR [rip+0x4680f]        # 0x140064498
   14001dc89:	cmp    DWORD PTR [rsp+0x20],eax
   14001dc8d:	jne    0x14001dcad
   14001dc8f:	xor    r9d,r9d
   14001dc92:	xor    r8d,r8d
   14001dc95:	mov    edx,0x376
   14001dc9a:	mov    rcx,r12
   14001dc9d:	call   QWORD PTR [rip+0x46ecd]        # 0x140064b70
   14001dca3:	cmp    rax,rbp
   14001dca6:	je     0x14001dcad
   14001dca8:	mov    rbx,rax
   14001dcab:	jmp    0x14001dcb9
   14001dcad:	cmp    rsi,rbp
   14001dcb0:	je     0x14001dcb9
   14001dcb2:	lea    rbx,[rsi+0xf0]
   14001dcb9:	xor    ecx,ecx
   14001dcbb:	cmp    rbx,rcx
   14001dcbe:	je     0x14001dcd0
   14001dcc0:	cmp    r13d,ecx
   14001dcc3:	mov    ebp,DWORD PTR [rbx]
   14001dcc5:	je     0x14001dcd0
   14001dcc7:	lea    eax,[r13+0x30000]
   14001dcce:	mov    DWORD PTR [rbx],eax
   14001dcd0:	test   dil,0xf0
   14001dcd4:	jne    0x14001dcf0
   14001dcd6:	mov    eax,edi
   14001dcd8:	and    eax,0xf
   14001dcdb:	cmp    eax,0x1
   14001dcde:	jbe    0x14001dced
   14001dce0:	add    eax,0xfffffffd
   14001dce3:	cmp    eax,0x1
   14001dce6:	ja     0x14001dcf0
   14001dce8:	or     edi,0x20
   14001dceb:	jmp    0x14001dcf0
   14001dced:	or     edi,0x30
   14001dcf0:	cmp    rsi,rcx
   14001dcf3:	mov    WORD PTR [rsp+0x30],cx
   14001dcf8:	je     0x14001dd06
   14001dcfa:	mov    rsi,QWORD PTR [rsi+0xa0]
   14001dd01:	xor    r13d,r13d
   14001dd04:	jmp    0x14001dd3d
   14001dd06:	mov    r13d,0x104
   14001dd0c:	lea    rdx,[rsp+0x30]
   14001dd11:	lea    rsi,[rsp+0x30]
   14001dd16:	mov    r8d,r13d
   14001dd19:	call   QWORD PTR [rip+0x46831]        # 0x140064550
   14001dd1f:	movzx  ecx,WORD PTR [rsp+0x236]
   14001dd27:	cmp    eax,r13d
   14001dd2a:	mov    r13d,0x0
   14001dd30:	cmove  cx,r13w
   14001dd35:	mov    WORD PTR [rsp+0x236],cx
   14001dd3d:	mov    r9d,edi
   14001dd40:	mov    r8,rsi
   14001dd43:	mov    rdx,r15
   14001dd46:	mov    rcx,r12
   14001dd49:	call   0x14001d990
   14001dd4e:	cmp    rbx,r13
   14001dd51:	mov    edi,eax
   14001dd53:	je     0x14001dd57
   14001dd55:	mov    DWORD PTR [rbx],ebp
   14001dd57:	cmp    QWORD PTR [rsp+0x28],r13
   14001dd5c:	je     0x14001dd6e
   14001dd5e:	mov    rcx,QWORD PTR [rsp+0x28]
   14001dd63:	mov    edx,0x1
   14001dd68:	call   QWORD PTR [rip+0x46dda]        # 0x140064b48
   14001dd6e:	mov    ecx,0x1
   14001dd73:	call   0x14001da98
   14001dd78:	mov    eax,edi
   14001dd7a:	mov    rcx,QWORD PTR [rsp+0x240]
   14001dd82:	xor    rcx,rsp
   14001dd85:	call   0x140046470
   14001dd8a:	add    rsp,0x250
   14001dd91:	pop    r15
   14001dd93:	pop    r13
   14001dd95:	pop    r12
   14001dd97:	pop    rdi
   14001dd98:	pop    rsi
   14001dd99:	pop    rbp
   14001dd9a:	pop    rbx
   14001dd9b:	ret    
   14001dd9c:	mov    QWORD PTR [rsp+0x8],rbx
   14001dda1:	mov    QWORD PTR [rsp+0x10],rsi
   14001dda6:	push   rdi
   14001dda7:	sub    rsp,0x20
   14001ddab:	mov    ebx,r8d
   14001ddae:	mov    edi,edx
   14001ddb0:	mov    rsi,rcx
   14001ddb3:	call   0x140021a70
   14001ddb8:	mov    r9d,ebx
   14001ddbb:	mov    r8d,edi
   14001ddbe:	mov    rcx,QWORD PTR [rax+0x8]
   14001ddc2:	mov    rdx,rsi
   14001ddc5:	test   rcx,rcx
   14001ddc8:	je     0x14001ddd5
   14001ddca:	mov    rax,QWORD PTR [rcx]
   14001ddcd:	call   QWORD PTR [rax+0x130]
   14001ddd3:	jmp    0x14001dddc
   14001ddd5:	xor    ecx,ecx
   14001ddd7:	call   0x14001dc0c
   14001dddc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dde1:	mov    rsi,QWORD PTR [rsp+0x38]
   14001dde6:	add    rsp,0x20
   14001ddea:	pop    rdi
   14001ddeb:	ret    
   14001ddec:	jmp    0x14001dc0c
   14001ddf1:	int3   
   14001ddf2:	int3   
   14001ddf3:	int3   
   14001ddf4:	rex push rdi
   14001ddf6:	sub    rsp,0x30
   14001ddfa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001de03:	mov    QWORD PTR [rsp+0x40],rbx
   14001de08:	mov    QWORD PTR [rsp+0x48],rbp
   14001de0d:	mov    QWORD PTR [rsp+0x50],rsi
   14001de12:	mov    esi,r8d
   14001de15:	mov    ebp,edx
   14001de17:	mov    edi,ecx
   14001de19:	call   0x14002b874
   14001de1e:	mov    rcx,rax
   14001de21:	xor    r8d,r8d
   14001de24:	test   rax,rax
   14001de27:	setne  r8b
   14001de2b:	test   r8d,r8d
   14001de2e:	jne    0x14001de3b
   14001de30:	mov    ecx,0x80004005
   14001de35:	call   0x140001430
   14001de3a:	int3   
   14001de3b:	mov    rax,QWORD PTR [rax]
   14001de3e:	call   QWORD PTR [rax+0x18]
   14001de41:	lea    rbx,[rax+0x18]
   14001de45:	mov    QWORD PTR [rsp+0x58],rbx
   14001de4a:	mov    ecx,edi
   14001de4c:	call   0x14002b860
   14001de51:	test   rax,rax
   14001de54:	je     0x14001de6b
   14001de56:	mov    r8d,edi
   14001de59:	mov    rdx,rax
   14001de5c:	lea    rcx,[rsp+0x58]
   14001de61:	call   0x140003650
   14001de66:	mov    rbx,QWORD PTR [rsp+0x58]
   14001de6b:	cmp    esi,0xffffffff
   14001de6e:	cmove  esi,edi
   14001de71:	mov    r8d,esi
   14001de74:	mov    edx,ebp
   14001de76:	mov    rcx,rbx
   14001de79:	call   0x14001dd9c
   14001de7e:	mov    edi,eax
   14001de80:	lea    rdx,[rbx-0x18]
   14001de84:	or     ecx,0xffffffff
   14001de87:	lock xadd DWORD PTR [rdx+0x10],ecx
   14001de8c:	add    ecx,0xffffffff
   14001de8f:	test   ecx,ecx
   14001de91:	jg     0x14001de9d
   14001de93:	mov    rcx,QWORD PTR [rdx]
   14001de96:	mov    r8,QWORD PTR [rcx]
   14001de99:	call   QWORD PTR [r8+0x8]
   14001de9d:	mov    eax,edi
   14001de9f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001dea4:	mov    rbp,QWORD PTR [rsp+0x48]
   14001dea9:	mov    rsi,QWORD PTR [rsp+0x50]
   14001deae:	add    rsp,0x30
   14001deb2:	pop    rdi
   14001deb3:	ret    
   14001deb4:	rex push rbp
   14001deb6:	sub    rsp,0x20
   14001deba:	mov    rbp,rdx
   14001debd:	lea    rcx,[rbp+0x58]
   14001dec1:	call   0x1400010c0
   14001dec6:	add    rsp,0x20
   14001deca:	pop    rbp
   14001decb:	ret    
   14001decc:	sub    rsp,0x28
   14001ded0:	cmp    edx,0x110
   14001ded6:	jne    0x14001df0d
   14001ded8:	call   0x140025734
   14001dedd:	lea    rcx,[rip+0x4a644]        # 0x140068528
   14001dee4:	mov    rdx,rax
   14001dee7:	call   0x14002c8ac
   14001deec:	test   rax,rax
   14001deef:	je     0x14001df01
   14001def1:	mov    rdx,QWORD PTR [rax]
   14001def4:	mov    rcx,rax
   14001def7:	call   QWORD PTR [rdx+0x290]
   14001defd:	cdqe   
   14001deff:	jmp    0x14001df0f
   14001df01:	movabs rax,0x1
   14001df0b:	jmp    0x14001df0f
   14001df0d:	xor    eax,eax
   14001df0f:	add    rsp,0x28
   14001df13:	ret    
   14001df14:	mov    QWORD PTR [rsp+0x8],rcx
   14001df19:	push   rbx
   14001df1a:	sub    rsp,0x30
   14001df1e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001df27:	mov    rbx,rcx
   14001df2a:	lea    rax,[rip+0x4a637]        # 0x140068568
   14001df31:	mov    QWORD PTR [rcx],rax
   14001df34:	cmp    QWORD PTR [rcx+0x40],0x0
   14001df39:	je     0x14001df41
   14001df3b:	call   0x140025a30
   14001df40:	nop
   14001df41:	mov    rcx,rbx
   14001df44:	add    rsp,0x30
   14001df48:	pop    rbx
   14001df49:	jmp    0x140026254
   14001df4e:	int3   
   14001df4f:	int3   
   14001df50:	int3   
   14001df51:	int3   
   14001df52:	int3   
   14001df53:	int3   
   14001df54:	rex push rbp
   14001df56:	sub    rsp,0x20
   14001df5a:	mov    rbp,rdx
   14001df5d:	mov    rcx,QWORD PTR [rbp+0x40]
   14001df61:	call   0x140026254
   14001df66:	add    rsp,0x20
   14001df6a:	pop    rbp
   14001df6b:	ret    
   14001df6c:	rex push rbx
   14001df6e:	sub    rsp,0xb0
   14001df75:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001df7e:	mov    rax,QWORD PTR [rip+0x68deb]        # 0x140086d70
   14001df85:	xor    rax,rsp
   14001df88:	mov    QWORD PTR [rsp+0xa0],rax
   14001df90:	mov    rbx,rcx
   14001df93:	mov    rdx,rcx
   14001df96:	lea    rcx,[rsp+0x30]
   14001df9b:	call   0x14002b38c
   14001dfa0:	nop
   14001dfa1:	lea    rdx,[rsp+0x30]
   14001dfa6:	mov    rcx,rbx
   14001dfa9:	call   0x140029888
   14001dfae:	test   eax,eax
   14001dfb0:	je     0x14001dfbe
   14001dfb2:	lea    rcx,[rsp+0x30]
   14001dfb7:	call   0x14002b404
   14001dfbc:	jmp    0x14001dfd1
   14001dfbe:	mov    rcx,rbx
   14001dfc1:	call   0x1400255d4
   14001dfc6:	nop
   14001dfc7:	lea    rcx,[rsp+0x30]
   14001dfcc:	call   0x14002b404
   14001dfd1:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001dfd9:	xor    rcx,rsp
   14001dfdc:	call   0x140046470
   14001dfe1:	add    rsp,0xb0
   14001dfe8:	pop    rbx
   14001dfe9:	ret    
   14001dfea:	int3   
   14001dfeb:	int3   
   14001dfec:	rex push rbp
   14001dfee:	sub    rsp,0x20
   14001dff2:	mov    rbp,rdx
   14001dff5:	lea    rcx,[rbp+0x30]
   14001dff9:	call   0x14002b404
   14001dffe:	add    rsp,0x20
   14001e002:	pop    rbp
   14001e003:	ret    
   14001e004:	mov    QWORD PTR [rcx+0xe0],rdx
   14001e00b:	mov    eax,0x1
   14001e010:	ret    
   14001e011:	int3   
   14001e012:	int3   
   14001e013:	int3   
   14001e014:	mov    rax,QWORD PTR [rcx+0xe0]
   14001e01b:	ret    
   14001e01c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e021:	mov    QWORD PTR [rsp+0x10],rbp
   14001e026:	mov    QWORD PTR [rsp+0x18],rsi
   14001e02b:	push   rdi
   14001e02c:	sub    rsp,0x20
   14001e030:	mov    rdi,r8
   14001e033:	mov    esi,edx
   14001e035:	mov    rbp,rcx
   14001e038:	call   0x1400236c4
   14001e03d:	xor    edx,edx
   14001e03f:	lea    r11,[rip+0x4a522]        # 0x140068568
   14001e046:	lea    r8d,[rdx+0x40]
   14001e04a:	lea    rcx,[rbp+0xa8]
   14001e051:	mov    QWORD PTR [rbp+0x0],r11
   14001e055:	call   0x140047720
   14001e05a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e05f:	movzx  eax,si
   14001e062:	mov    QWORD PTR [rbp+0xb0],rax
   14001e069:	mov    DWORD PTR [rbp+0xa8],esi
   14001e06f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e074:	mov    rax,rbp
   14001e077:	mov    QWORD PTR [rbp+0xd0],rdi
   14001e07e:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e083:	add    rsp,0x20
   14001e087:	pop    rdi
   14001e088:	ret    
   14001e089:	int3   
   14001e08a:	int3   
   14001e08b:	int3   
   14001e08c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e091:	push   rdi
   14001e092:	sub    rsp,0x20
   14001e096:	test   BYTE PTR [rcx+0x78],0x18
   14001e09a:	movsxd rdi,edx
   14001e09d:	mov    rbx,rcx
   14001e0a0:	je     0x14001e0ad
   14001e0a2:	mov    rax,QWORD PTR [rcx]
   14001e0a5:	mov    edx,edi
   14001e0a7:	call   QWORD PTR [rax+0x108]
   14001e0ad:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e0b1:	mov    rdx,rdi
   14001e0b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e0b9:	add    rsp,0x20
   14001e0bd:	pop    rdi
   14001e0be:	rex.W jmp QWORD PTR [rip+0x4692b]        # 0x1400649f0
   14001e0c5:	int3   
   14001e0c6:	int3   
   14001e0c7:	int3   
   14001e0c8:	rex push rbx
   14001e0ca:	sub    rsp,0x20
   14001e0ce:	mov    edx,0x1
   14001e0d3:	mov    rbx,rcx
   14001e0d6:	call   0x140024d08
   14001e0db:	test   eax,eax
   14001e0dd:	je     0x14001e0ec
   14001e0df:	mov    edx,0x1
   14001e0e4:	mov    rcx,rbx
   14001e0e7:	call   0x14001e08c
   14001e0ec:	add    rsp,0x20
   14001e0f0:	pop    rbx
   14001e0f1:	ret    
   14001e0f2:	int3   
   14001e0f3:	int3   
   14001e0f4:	mov    edx,0x2
   14001e0f9:	jmp    0x14001e08c
   14001e0fe:	int3   
   14001e0ff:	int3   
   14001e100:	mov    eax,DWORD PTR [rcx+0xa8]
   14001e106:	test   eax,eax
   14001e108:	je     0x14001e110
   14001e10a:	add    eax,0x20000
   14001e10f:	ret    
   14001e110:	xor    eax,eax
   14001e112:	ret    
   14001e113:	int3   
   14001e114:	lea    rax,[rip+0x4a40d]        # 0x140068528
   14001e11b:	ret    
   14001e11c:	mov    rax,QWORD PTR [rcx]
   14001e11f:	jmp    QWORD PTR [rax+0x2a8]
   14001e125:	int3   
   14001e126:	int3   
   14001e127:	int3   
   14001e128:	mov    rax,QWORD PTR [rcx]
   14001e12b:	jmp    QWORD PTR [rax+0x2a0]
   14001e131:	int3   
   14001e132:	int3   
   14001e133:	int3   
   14001e134:	mov    QWORD PTR [rsp+0x8],rbx
   14001e139:	push   rdi
   14001e13a:	sub    rsp,0x20
   14001e13e:	mov    rbx,rdx
   14001e141:	mov    rdi,rcx
   14001e144:	call   0x140022a5c
   14001e149:	test   eax,eax
   14001e14b:	je     0x14001e157
   14001e14d:	mov    eax,0x1
   14001e152:	jmp    0x14001e1f7
   14001e157:	mov    rcx,rdi
   14001e15a:	call   0x140026480
   14001e15f:	test   rax,rax
   14001e162:	je     0x14001e174
   14001e164:	cmp    DWORD PTR [rax+0xc4],0x0
   14001e16b:	je     0x14001e174
   14001e16d:	xor    eax,eax
   14001e16f:	jmp    0x14001e1f7
   14001e174:	cmp    DWORD PTR [rbx+0x8],0x100
   14001e17b:	jne    0x14001e1ec
   14001e17d:	cmp    QWORD PTR [rbx+0x10],0x1b
   14001e182:	je     0x14001e18b
   14001e184:	cmp    QWORD PTR [rbx+0x10],0x3
   14001e189:	jne    0x14001e1ec
   14001e18b:	mov    rcx,QWORD PTR [rbx]
   14001e18e:	mov    edx,0xfffffff0
   14001e193:	call   QWORD PTR [rip+0x46867]        # 0x140064a00
   14001e199:	test   al,0x4
   14001e19b:	je     0x14001e1ec
   14001e19d:	mov    rcx,QWORD PTR [rbx]
   14001e1a0:	lea    rdx,[rip+0x4a6c9]        # 0x140068870
   14001e1a7:	call   0x14002caac
   14001e1ac:	test   eax,eax
   14001e1ae:	je     0x14001e1ec
   14001e1b0:	mov    rcx,QWORD PTR [rdi+0x40]
   14001e1b4:	mov    edx,0x2
   14001e1b9:	call   QWORD PTR [rip+0x46821]        # 0x1400649e0
   14001e1bf:	test   rax,rax
   14001e1c2:	je     0x14001e1d1
   14001e1c4:	mov    rcx,rax
   14001e1c7:	call   QWORD PTR [rip+0x46843]        # 0x140064a10
   14001e1cd:	test   eax,eax
   14001e1cf:	je     0x14001e1ec
   14001e1d1:	mov    rcx,QWORD PTR [rdi+0x40]
   14001e1d5:	xor    r9d,r9d
   14001e1d8:	mov    edx,0x111
   14001e1dd:	lea    r8d,[r9+0x2]
   14001e1e1:	call   QWORD PTR [rip+0x46989]        # 0x140064b70
   14001e1e7:	jmp    0x14001e14d
   14001e1ec:	mov    rdx,rbx
   14001e1ef:	mov    rcx,rdi
   14001e1f2:	call   0x1400230b4
   14001e1f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e1fc:	add    rsp,0x20
   14001e200:	pop    rdi
   14001e201:	ret    
   14001e202:	int3   
   14001e203:	int3   
   14001e204:	mov    rax,rsp
   14001e207:	mov    QWORD PTR [rax+0x8],rbx
   14001e20b:	mov    QWORD PTR [rax+0x10],rbp
   14001e20f:	mov    QWORD PTR [rax+0x18],rsi
   14001e213:	mov    QWORD PTR [rax+0x20],rdi
   14001e217:	push   r12
   14001e219:	sub    rsp,0x30
   14001e21d:	mov    r12,QWORD PTR [rsp+0x60]
   14001e222:	mov    rbp,r9
   14001e225:	mov    ebx,r8d
   14001e228:	mov    edi,edx
   14001e22a:	mov    rsi,rcx
   14001e22d:	mov    QWORD PTR [rax-0x18],r12
   14001e231:	call   0x14001c1b0
   14001e236:	test   eax,eax
   14001e238:	je     0x14001e241
   14001e23a:	mov    eax,0x1
   14001e23f:	jmp    0x14001e2b1
   14001e241:	test   ebx,ebx
   14001e243:	je     0x14001e24a
   14001e245:	cmp    ebx,0xffffffff
   14001e248:	jne    0x14001e2af
   14001e24a:	bt     edi,0xf
   14001e24e:	jae    0x14001e2af
   14001e250:	cmp    edi,0xf000
   14001e256:	jae    0x14001e2af
   14001e258:	mov    rcx,QWORD PTR [rsi+0x40]
   14001e25c:	call   QWORD PTR [rip+0x4687e]        # 0x140064ae0
   14001e262:	mov    rcx,rax
   14001e265:	call   0x1400256f0
   14001e26a:	test   rax,rax
   14001e26d:	je     0x14001e28a
   14001e26f:	mov    r10,QWORD PTR [rax]
   14001e272:	mov    r9,rbp
   14001e275:	mov    r8d,ebx
   14001e278:	mov    edx,edi
   14001e27a:	mov    rcx,rax
   14001e27d:	mov    QWORD PTR [rsp+0x20],r12
   14001e282:	call   QWORD PTR [r10+0x18]
   14001e286:	test   eax,eax
   14001e288:	jne    0x14001e23a
   14001e28a:	call   0x14001c840
   14001e28f:	test   rax,rax
   14001e292:	je     0x14001e2af
   14001e294:	mov    r10,QWORD PTR [rax]
   14001e297:	mov    r9,rbp
   14001e29a:	mov    r8d,ebx
   14001e29d:	mov    edx,edi
   14001e29f:	mov    rcx,rax
   14001e2a2:	mov    QWORD PTR [rsp+0x20],r12
   14001e2a7:	call   QWORD PTR [r10+0x18]
   14001e2ab:	test   eax,eax
   14001e2ad:	jne    0x14001e23a
   14001e2af:	xor    eax,eax
   14001e2b1:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e2b6:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e2bb:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e2c0:	mov    rdi,QWORD PTR [rsp+0x58]
   14001e2c5:	add    rsp,0x30
   14001e2c9:	pop    r12
   14001e2cb:	ret    
   14001e2cc:	mov    QWORD PTR [rsp+0x8],rbx
   14001e2d1:	push   rdi
   14001e2d2:	sub    rsp,0x20
   14001e2d6:	mov    ebx,edx
   14001e2d8:	mov    rdi,rcx
   14001e2db:	call   0x14001df14
   14001e2e0:	test   bl,0x1
   14001e2e3:	je     0x14001e2ed
   14001e2e5:	mov    rcx,rdi
   14001e2e8:	call   0x14001ac50
   14001e2ed:	mov    rax,rdi
   14001e2f0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e2f5:	add    rsp,0x20
   14001e2f9:	pop    rdi
   14001e2fa:	ret    
   14001e2fb:	int3   
   14001e2fc:	mov    QWORD PTR [rsp+0x8],rbx
   14001e301:	push   rdi
   14001e302:	sub    rsp,0x20
   14001e306:	mov    rdi,rcx
   14001e309:	call   0x140021a70
   14001e30e:	xor    ebx,ebx
   14001e310:	mov    rcx,QWORD PTR [rax+0x8]
   14001e314:	cmp    rcx,rbx
   14001e317:	je     0x14001e320
   14001e319:	xor    edx,edx
   14001e31b:	call   0x14001dc04
   14001e320:	mov    rax,QWORD PTR [rdi+0xd0]
   14001e327:	cmp    rax,rbx
   14001e32a:	je     0x14001e330
   14001e32c:	mov    rbx,QWORD PTR [rax+0x40]
   14001e330:	lea    rdx,[rdi+0xd8]
   14001e337:	mov    rcx,rbx
   14001e33a:	call   0x14001db00
   14001e33f:	mov    rcx,rdi
   14001e342:	mov    rbx,rax
   14001e345:	call   0x140027b2c
   14001e34a:	mov    rax,rbx
   14001e34d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e352:	add    rsp,0x20
   14001e356:	pop    rdi
   14001e357:	ret    
   14001e358:	rex push rbx
   14001e35a:	sub    rsp,0x20
   14001e35e:	mov    rbx,rcx
   14001e361:	call   0x14002580c
   14001e366:	mov    rcx,rbx
   14001e369:	call   0x1400257c0
   14001e36e:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001e375:	call   QWORD PTR [rip+0x4665d]        # 0x1400649d8
   14001e37b:	test   eax,eax
   14001e37d:	je     0x14001e391
   14001e37f:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001e386:	mov    edx,0x1
   14001e38b:	call   QWORD PTR [rip+0x467b7]        # 0x140064b48
   14001e391:	and    QWORD PTR [rbx+0xd8],0x0
   14001e399:	call   0x140021a70
   14001e39e:	mov    rcx,QWORD PTR [rax+0x8]
   14001e3a2:	test   rcx,rcx
   14001e3a5:	je     0x14001e3b1
   14001e3a7:	mov    edx,0x1
   14001e3ac:	call   0x14001dc04
   14001e3b1:	add    rsp,0x20
   14001e3b5:	pop    rbx
   14001e3b6:	ret    
   14001e3b7:	int3   
   14001e3b8:	rex push rbx
   14001e3ba:	sub    rsp,0x20
   14001e3be:	mov    rbx,rcx
   14001e3c1:	mov    rcx,rdx
   14001e3c4:	call   0x14002b534
   14001e3c9:	mov    r8,QWORD PTR [rbx]
   14001e3cc:	mov    rcx,rbx
   14001e3cf:	mov    rdx,rax
   14001e3d2:	call   QWORD PTR [r8+0x298]
   14001e3d9:	mov    rcx,rbx
   14001e3dc:	add    rsp,0x20
   14001e3e0:	pop    rbx
   14001e3e1:	jmp    0x1400255d4
   14001e3e6:	int3   
   14001e3e7:	int3   
   14001e3e8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e3ed:	push   rdi
   14001e3ee:	sub    rsp,0x20
   14001e3f2:	mov    rax,QWORD PTR [rcx]
   14001e3f5:	mov    rbx,rcx
   14001e3f8:	call   QWORD PTR [rax+0x2b0]
   14001e3fe:	call   0x140021a70
   14001e403:	mov    rcx,QWORD PTR [rax+0x68]
   14001e407:	test   rcx,rcx
   14001e40a:	je     0x14001e44c
   14001e40c:	mov    r9,QWORD PTR [rbx+0xe0]
   14001e413:	test   r9,r9
   14001e416:	je     0x14001e44c
   14001e418:	mov    r8,QWORD PTR [rbx+0xc8]
   14001e41f:	mov    rax,QWORD PTR [rcx]
   14001e422:	mov    rdx,rbx
   14001e425:	test   r8,r8
   14001e428:	je     0x14001e42f
   14001e42a:	call   QWORD PTR [rax+0x40]
   14001e42d:	jmp    0x14001e439
   14001e42f:	mov    r8,QWORD PTR [rbx+0xb0]
   14001e436:	call   QWORD PTR [rax+0x48]
   14001e439:	test   eax,eax
   14001e43b:	jne    0x14001e44c
   14001e43d:	or     edx,0xffffffff
   14001e440:	mov    rcx,rbx
   14001e443:	call   0x14001e08c
   14001e448:	xor    eax,eax
   14001e44a:	jmp    0x14001e48c
   14001e44c:	mov    rcx,rbx
   14001e44f:	call   0x1400255d4
   14001e454:	test   rax,rax
   14001e457:	mov    rdi,rax
   14001e45a:	je     0x14001e489
   14001e45c:	bt     DWORD PTR [rbx+0x78],0x8
   14001e461:	jae    0x14001e489
   14001e463:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e467:	xor    r8d,r8d
   14001e46a:	xor    edx,edx
   14001e46c:	call   QWORD PTR [rip+0x46576]        # 0x1400649e8
   14001e472:	mov    rcx,rax
   14001e475:	call   0x1400256f0
   14001e47a:	test   rax,rax
   14001e47d:	je     0x14001e489
   14001e47f:	mov    rcx,rax
   14001e482:	call   0x140029b9c
   14001e487:	xor    edi,edi
   14001e489:	mov    rax,rdi
   14001e48c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e491:	add    rsp,0x20
   14001e495:	pop    rdi
   14001e496:	ret    
   14001e497:	int3   
   14001e498:	sub    rsp,0x48
   14001e49c:	call   0x140021a70
   14001e4a1:	cmp    QWORD PTR [rax+0x8],0x0
   14001e4a6:	jne    0x14001e4ac
   14001e4a8:	xor    eax,eax
   14001e4aa:	jmp    0x14001e518
   14001e4ac:	call   0x14001c840
   14001e4b1:	test   rax,rax
   14001e4b4:	je     0x14001e4c7
   14001e4b6:	mov    rdx,QWORD PTR [rax]
   14001e4b9:	mov    rcx,rax
   14001e4bc:	call   QWORD PTR [rdx+0xe8]
   14001e4c2:	mov    rcx,rax
   14001e4c5:	jmp    0x14001e4c9
   14001e4c7:	xor    ecx,ecx
   14001e4c9:	test   rcx,rcx
   14001e4cc:	je     0x14001e4f4
   14001e4ce:	mov    rax,QWORD PTR [rcx]
   14001e4d1:	lea    rdx,[rsp+0x30]
   14001e4d6:	xor    r9d,r9d
   14001e4d9:	mov    QWORD PTR [rsp+0x20],rdx
   14001e4de:	mov    edx,0xe146
   14001e4e3:	xor    r8d,r8d
   14001e4e6:	call   QWORD PTR [rax+0x18]
   14001e4e9:	test   eax,eax
   14001e4eb:	je     0x14001e4f4
   14001e4ed:	mov    eax,0x1
   14001e4f2:	jmp    0x14001e518
   14001e4f4:	call   0x140021a70
   14001e4f9:	lea    r8,[rsp+0x30]
   14001e4fe:	xor    r9d,r9d
   14001e501:	mov    rcx,QWORD PTR [rax+0x8]
   14001e505:	mov    QWORD PTR [rsp+0x20],r8
   14001e50a:	xor    r8d,r8d
   14001e50d:	mov    rax,QWORD PTR [rcx]
   14001e510:	mov    edx,0xe146
   14001e515:	call   QWORD PTR [rax+0x18]
   14001e518:	add    rsp,0x48
   14001e51c:	ret    
   14001e51d:	int3   
   14001e51e:	int3   
   14001e51f:	int3   
   14001e520:	rex push rbx
   14001e522:	sub    rsp,0x20
   14001e526:	mov    rdx,QWORD PTR [rcx+0xc8]
   14001e52d:	mov    rbx,rcx
   14001e530:	test   rdx,rdx
   14001e533:	je     0x14001e53c
   14001e535:	call   0x140029210
   14001e53a:	jmp    0x14001e548
   14001e53c:	mov    rdx,QWORD PTR [rcx+0xb0]
   14001e543:	call   0x1400297b4
   14001e548:	test   eax,eax
   14001e54a:	mov    rcx,rbx
   14001e54d:	jne    0x14001e55b
   14001e54f:	or     edx,0xffffffff
   14001e552:	call   0x14001e08c
   14001e557:	xor    eax,eax
   14001e559:	jmp    0x14001e594
   14001e55b:	xor    edx,edx
   14001e55d:	call   0x140024d08
   14001e562:	mov    rcx,rbx
   14001e565:	test   eax,eax
   14001e567:	je     0x14001e54f
   14001e569:	mov    edx,0xe146
   14001e56e:	call   0x1400298d8
   14001e573:	test   rax,rax
   14001e576:	mov    rbx,rax
   14001e579:	je     0x14001e58f
   14001e57b:	call   0x14001e498
   14001e580:	mov    rcx,rbx
   14001e583:	neg    eax
   14001e585:	sbb    edx,edx
   14001e587:	and    edx,0x5
   14001e58a:	call   0x140029b0c
   14001e58f:	mov    eax,0x1
   14001e594:	add    rsp,0x20
   14001e598:	pop    rbx
   14001e599:	ret    
   14001e59a:	int3   
   14001e59b:	int3   
   14001e59c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e5a1:	mov    QWORD PTR [rsp+0x10],rbp
   14001e5a6:	mov    QWORD PTR [rsp+0x18],rsi
   14001e5ab:	push   rdi
   14001e5ac:	sub    rsp,0x20
   14001e5b0:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001e5b8:	mov    rdi,QWORD PTR [rcx+0xc0]
   14001e5bf:	mov    rbp,QWORD PTR [rcx+0xb8]
   14001e5c6:	mov    rsi,rcx
   14001e5c9:	je     0x14001e5f9
   14001e5cb:	call   0x140021a70
   14001e5d0:	mov    rdx,QWORD PTR [rsi+0xb0]
   14001e5d7:	mov    r8d,0x5
   14001e5dd:	mov    rbx,QWORD PTR [rax+0x18]
   14001e5e1:	mov    rcx,rbx
   14001e5e4:	call   QWORD PTR [rip+0x46036]        # 0x140064620
   14001e5ea:	mov    rcx,rbx
   14001e5ed:	mov    rdx,rax
   14001e5f0:	call   QWORD PTR [rip+0x46032]        # 0x140064628
   14001e5f6:	mov    rbp,rax
   14001e5f9:	test   rbp,rbp
   14001e5fc:	je     0x14001e60a
   14001e5fe:	mov    rcx,rbp
   14001e601:	call   QWORD PTR [rip+0x46029]        # 0x140064630
   14001e607:	mov    rdi,rax
   14001e60a:	test   rdi,rdi
   14001e60d:	mov    ebx,0x1
   14001e612:	je     0x14001e647
   14001e614:	cmp    WORD PTR [rdi+0x2],0xffff
   14001e61a:	mov    ecx,DWORD PTR [rdi]
   14001e61c:	jne    0x14001e62b
   14001e61e:	mov    ecx,DWORD PTR [rdi+0xc]
   14001e621:	movzx  edx,WORD PTR [rdi+0x12]
   14001e625:	movzx  eax,WORD PTR [rdi+0x14]
   14001e629:	jmp    0x14001e633
   14001e62b:	mov    dx,WORD PTR [rdi+0xa]
   14001e62f:	mov    ax,WORD PTR [rdi+0xc]
   14001e633:	test   ecx,0x1801
   14001e639:	jne    0x14001e645
   14001e63b:	test   dx,dx
   14001e63e:	jne    0x14001e645
   14001e640:	test   ax,ax
   14001e643:	je     0x14001e647
   14001e645:	xor    ebx,ebx
   14001e647:	cmp    QWORD PTR [rsi+0xb0],0x0
   14001e64f:	je     0x14001e65a
   14001e651:	mov    rcx,rbp
   14001e654:	call   QWORD PTR [rip+0x45e36]        # 0x140064490
   14001e65a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e65f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e664:	mov    eax,ebx
   14001e666:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e66b:	add    rsp,0x20
   14001e66f:	pop    rdi
   14001e670:	ret    
   14001e671:	int3   
   14001e672:	int3   
   14001e673:	int3   
   14001e674:	rex push rbx
   14001e676:	sub    rsp,0x20
   14001e67a:	test   r8,r8
   14001e67d:	mov    rbx,r8
   14001e680:	jne    0x14001e699
   14001e682:	mov    eax,DWORD PTR [rcx+0xa8]
   14001e688:	test   eax,eax
   14001e68a:	je     0x14001e695
   14001e68c:	add    eax,0x20000
   14001e691:	mov    ebx,eax
   14001e693:	jne    0x14001e699
   14001e695:	xor    eax,eax
   14001e697:	jmp    0x14001e6c4
   14001e699:	call   0x140021a70
   14001e69e:	mov    rcx,QWORD PTR [rax+0x8]
   14001e6a2:	test   rcx,rcx
   14001e6a5:	je     0x14001e6ba
   14001e6a7:	mov    r9,QWORD PTR [rcx]
   14001e6aa:	mov    r8d,0x1
   14001e6b0:	mov    rdx,rbx
   14001e6b3:	call   QWORD PTR [r9+0x158]
   14001e6ba:	movabs rax,0x1
   14001e6c4:	add    rsp,0x20
   14001e6c8:	pop    rbx
   14001e6c9:	ret    
   14001e6ca:	int3   
   14001e6cb:	int3   
   14001e6cc:	lea    rax,[rip+0x4a1ad]        # 0x140068880
   14001e6d3:	ret    
   14001e6d4:	mov    rax,rsp
   14001e6d7:	mov    QWORD PTR [rax+0x8],rcx
   14001e6db:	push   rdi
   14001e6dc:	push   r12
   14001e6de:	push   r13
   14001e6e0:	push   r14
   14001e6e2:	push   r15
   14001e6e4:	sub    rsp,0x90
   14001e6eb:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14001e6f4:	mov    QWORD PTR [rax+0x10],rbx
   14001e6f8:	mov    QWORD PTR [rax+0x18],rsi
   14001e6fc:	mov    r14,r9
   14001e6ff:	mov    r15,r8
   14001e702:	mov    r12,rdx
   14001e705:	mov    rdi,rcx
   14001e708:	xor    ebx,ebx
   14001e70a:	cmp    r9,rbx
   14001e70d:	jne    0x14001e718
   14001e70f:	call   0x140021a70
   14001e714:	mov    r14,QWORD PTR [rax+0x18]
   14001e718:	call   0x140021a70
   14001e71d:	mov    r13,QWORD PTR [rax+0x68]
   14001e721:	mov    QWORD PTR [rsp+0x48],r13
   14001e726:	mov    rsi,rbx
   14001e729:	mov    QWORD PTR [rsp+0x38],rbx
   14001e72e:	mov    QWORD PTR [rsp+0x40],rbx
   14001e733:	mov    ecx,0x10
   14001e738:	call   0x1400293dc
   14001e73d:	mov    ecx,0x7c000
   14001e742:	call   0x1400293dc
   14001e747:	cmp    r13,rbx
   14001e74a:	je     0x14001e77d
   14001e74c:	mov    rax,QWORD PTR [rdi]
   14001e74f:	lea    rdx,[rsp+0x70]
   14001e754:	mov    rcx,rdi
   14001e757:	call   QWORD PTR [rax+0x258]
   14001e75d:	cmp    eax,ebx
   14001e75f:	jne    0x14001e768
   14001e761:	xor    eax,eax
   14001e763:	jmp    0x14001e975
   14001e768:	mov    rax,QWORD PTR [r13+0x0]
   14001e76c:	mov    r8,r12
   14001e76f:	lea    rdx,[rsp+0x70]
   14001e774:	mov    rcx,r13
   14001e777:	call   QWORD PTR [rax+0x28]
   14001e77a:	mov    r12,rax
   14001e77d:	cmp    r12,rbx
   14001e780:	jne    0x14001e789
   14001e782:	xor    eax,eax
   14001e784:	jmp    0x14001e975
   14001e789:	call   0x14002b874
   14001e78e:	mov    r11,rax
   14001e791:	mov    ecx,ebx
   14001e793:	cmp    rax,rbx
   14001e796:	setne  cl
   14001e799:	cmp    ecx,ebx
   14001e79b:	jne    0x14001e7a8
   14001e79d:	mov    ecx,0x80004005
   14001e7a2:	call   0x140001430
   14001e7a7:	int3   
   14001e7a8:	mov    rax,QWORD PTR [rax]
   14001e7ab:	mov    rcx,r11
   14001e7ae:	call   QWORD PTR [rax+0x18]
   14001e7b1:	add    rax,0x18
   14001e7b5:	mov    QWORD PTR [rsp+0x30],rax
   14001e7ba:	mov    WORD PTR [rsp+0xd8],bx
   14001e7c2:	lea    r8,[rsp+0xd8]
   14001e7ca:	lea    rdx,[rsp+0x30]
   14001e7cf:	mov    rcx,r12
   14001e7d2:	call   0x14002f700
   14001e7d7:	mov    ecx,ebx
   14001e7d9:	cmp    eax,ebx
   14001e7db:	sete   cl
   14001e7de:	cmp    DWORD PTR [rip+0x6dda4],ebx        # 0x14008c588
   14001e7e4:	je     0x14001e832
   14001e7e6:	cmp    ecx,ebx
   14001e7e8:	jne    0x14001e836
   14001e7ea:	mov    ecx,0x2a
   14001e7ef:	call   QWORD PTR [rip+0x4634b]        # 0x140064b40
   14001e7f5:	cmp    eax,ebx
   14001e7f7:	je     0x14001e883
   14001e7fd:	lea    rdx,[rip+0x4a1b4]        # 0x1400689b8
   14001e804:	mov    rcx,QWORD PTR [rsp+0x30]
   14001e809:	call   0x140048b70
   14001e80e:	cmp    eax,ebx
   14001e810:	sete   al
   14001e813:	movzx  ecx,al
   14001e816:	cmp    ecx,ebx
   14001e818:	je     0x14001e883
   14001e81a:	movzx  eax,WORD PTR [rsp+0xd8]
   14001e822:	cmp    ax,0x8
   14001e826:	cmove  ax,bx
   14001e82a:	mov    WORD PTR [rsp+0xd8],ax
   14001e832:	cmp    ecx,ebx
   14001e834:	je     0x14001e883
   14001e836:	mov    rdx,r12
   14001e839:	lea    rcx,[rsp+0x50]
   14001e83e:	call   0x14002f6b4
   14001e843:	nop
   14001e844:	movzx  edx,WORD PTR [rsp+0xd8]
   14001e84c:	lea    rcx,[rsp+0x50]
   14001e851:	call   0x14002f5bc
   14001e856:	lea    rcx,[rsp+0x50]
   14001e85b:	call   0x14002f200
   14001e860:	mov    rsi,rax
   14001e863:	mov    QWORD PTR [rsp+0x38],rax
   14001e868:	lea    rcx,[rsp+0x50]
   14001e86d:	call   0x14002f1e8
   14001e872:	cmp    rsi,rbx
   14001e875:	je     0x14001e883
   14001e877:	mov    rcx,rsi
   14001e87a:	call   QWORD PTR [rip+0x45c80]        # 0x140064500
   14001e880:	mov    r12,rax
   14001e883:	or     DWORD PTR [rdi+0x88],0xffffffff
   14001e88a:	or     DWORD PTR [rdi+0x78],0x10
   14001e88e:	mov    rcx,rdi
   14001e891:	call   0x140027b2c
   14001e896:	cmp    r15,rbx
   14001e899:	jne    0x14001e8a0
   14001e89b:	mov    r8,rbx
   14001e89e:	jmp    0x14001e8a4
   14001e8a0:	mov    r8,QWORD PTR [r15+0x40]
   14001e8a4:	mov    QWORD PTR [rsp+0x20],rbx
   14001e8a9:	lea    r9,[rip+0xfffffffffffff61c]        # 0x14001decc
   14001e8b0:	mov    rdx,r12
   14001e8b3:	mov    rcx,r14
   14001e8b6:	call   QWORD PTR [rip+0x4610c]        # 0x1400649c8
   14001e8bc:	mov    r12,rax
   14001e8bf:	mov    QWORD PTR [rsp+0x40],rax
   14001e8c4:	mov    rdx,QWORD PTR [rsp+0x30]
   14001e8c9:	add    rdx,0xffffffffffffffe8
   14001e8cd:	or     ecx,0xffffffff
   14001e8d0:	lock xadd DWORD PTR [rdx+0x10],ecx
   14001e8d5:	add    ecx,0xffffffff
   14001e8d8:	cmp    ecx,ebx
   14001e8da:	jg     0x14001e8e7
   14001e8dc:	mov    rcx,QWORD PTR [rdx]
   14001e8df:	mov    r8,QWORD PTR [rcx]
   14001e8e2:	call   QWORD PTR [r8+0x8]
   14001e8e6:	nop
   14001e8e7:	jmp    0x14001e902
   14001e8e9:	xor    ebx,ebx
   14001e8eb:	mov    rdi,QWORD PTR [rsp+0xc0]
   14001e8f3:	mov    r13,QWORD PTR [rsp+0x48]
   14001e8f8:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e8fd:	mov    r12,QWORD PTR [rsp+0x40]
   14001e902:	cmp    r13,rbx
   14001e905:	je     0x14001e92a
   14001e907:	cmp    r12,rbx
   14001e90a:	je     0x14001e92a
   14001e90c:	mov    rax,QWORD PTR [r13+0x0]
   14001e910:	lea    rdx,[rsp+0x70]
   14001e915:	mov    rcx,r13
   14001e918:	call   QWORD PTR [rax+0x30]
   14001e91b:	mov    r11,QWORD PTR [rdi]
   14001e91e:	xor    edx,edx
   14001e920:	mov    rcx,rdi
   14001e923:	call   QWORD PTR [r11+0x258]
   14001e92a:	call   0x14002580c
   14001e92f:	cmp    eax,ebx
   14001e931:	jne    0x14001e93f
   14001e933:	mov    rax,QWORD PTR [rdi]
   14001e936:	mov    rcx,rdi
   14001e939:	call   QWORD PTR [rax+0x228]
   14001e93f:	cmp    r12,rbx
   14001e942:	je     0x14001e956
   14001e944:	test   BYTE PTR [rdi+0x78],0x10
   14001e948:	jne    0x14001e956
   14001e94a:	mov    rcx,r12
   14001e94d:	call   QWORD PTR [rip+0x4607d]        # 0x1400649d0
   14001e953:	mov    r12,rbx
   14001e956:	cmp    rsi,rbx
   14001e959:	je     0x14001e96d
   14001e95b:	mov    rcx,rsi
   14001e95e:	call   QWORD PTR [rip+0x45b24]        # 0x140064488
   14001e964:	mov    rcx,rsi
   14001e967:	call   QWORD PTR [rip+0x45c13]        # 0x140064580
   14001e96d:	cmp    r12,rbx
   14001e970:	setne  bl
   14001e973:	mov    eax,ebx
   14001e975:	lea    r11,[rsp+0x90]
   14001e97d:	mov    rbx,QWORD PTR [r11+0x38]
   14001e981:	mov    rsi,QWORD PTR [r11+0x40]
   14001e985:	mov    rsp,r11
   14001e988:	pop    r15
   14001e98a:	pop    r14
   14001e98c:	pop    r13
   14001e98e:	pop    r12
   14001e990:	pop    rdi
   14001e991:	ret    
   14001e992:	int3   
   14001e993:	int3   
   14001e994:	rex push rbp
   14001e996:	sub    rsp,0x20
   14001e99a:	mov    rbp,rdx
   14001e99d:	lea    rcx,[rbp+0x30]
   14001e9a1:	call   0x1400010c0
   14001e9a6:	add    rsp,0x20
   14001e9aa:	pop    rbp
   14001e9ab:	ret    
   14001e9ac:	int3   
   14001e9ad:	int3   
   14001e9ae:	int3   
   14001e9af:	int3   
   14001e9b0:	int3   
   14001e9b1:	int3   
   14001e9b2:	int3   
   14001e9b3:	int3   
   14001e9b4:	rex push rbp
   14001e9b6:	sub    rsp,0x20
   14001e9ba:	mov    rbp,rdx
   14001e9bd:	lea    rcx,[rbp+0x50]
   14001e9c1:	call   0x14002f1e8
   14001e9c6:	add    rsp,0x20
   14001e9ca:	pop    rbp
   14001e9cb:	ret    
   14001e9cc:	int3   
   14001e9cd:	int3   
   14001e9ce:	int3   
   14001e9cf:	int3   
   14001e9d0:	int3   
   14001e9d1:	int3   
   14001e9d2:	int3   
   14001e9d3:	int3   
   14001e9d4:	mov    QWORD PTR [rsp+0x10],rdx
   14001e9d9:	push   rbx
   14001e9da:	push   rbp
   14001e9db:	sub    rsp,0x38
   14001e9df:	mov    rbp,rdx
   14001e9e2:	mov    rcx,QWORD PTR [rbp+0x60]
   14001e9e6:	xor    ebx,ebx
   14001e9e8:	cmp    rcx,rbx
   14001e9eb:	je     0x14001e9f2
   14001e9ed:	call   0x1400207b8
   14001e9f2:	mov    rax,QWORD PTR [rbp+0xc0]
   14001e9f9:	or     DWORD PTR [rax+0x88],0xffffffff
   14001ea00:	lea    rax,[rip+0xfffffffffffffee2]        # 0x14001e8e9
   14001ea07:	jmp    0x14001ea09
   14001ea09:	add    rsp,0x38
   14001ea0d:	pop    rbp
   14001ea0e:	pop    rbx
   14001ea0f:	ret    
   14001ea10:	int3   
   14001ea11:	int3   
   14001ea12:	int3   
   14001ea13:	int3   
   14001ea14:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea19:	push   rbx
   14001ea1a:	push   rsi
   14001ea1b:	push   rdi
   14001ea1c:	push   r12
   14001ea1e:	push   r13
   14001ea20:	push   r14
   14001ea22:	push   r15
   14001ea24:	sub    rsp,0x70
   14001ea28:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001ea31:	mov    rbx,rcx
   14001ea34:	mov    r15,QWORD PTR [rcx+0xc0]
   14001ea3b:	mov    r12,QWORD PTR [rcx+0xb8]
   14001ea42:	mov    QWORD PTR [rsp+0x48],r12
   14001ea47:	call   0x140021a70
   14001ea4c:	mov    rax,QWORD PTR [rax+0x18]
   14001ea50:	mov    QWORD PTR [rsp+0x40],rax
   14001ea55:	cmp    QWORD PTR [rbx+0xb0],0x0
   14001ea5d:	je     0x14001ea97
   14001ea5f:	call   0x140021a70
   14001ea64:	mov    rdi,QWORD PTR [rax+0x18]
   14001ea68:	mov    QWORD PTR [rsp+0x40],rdi
   14001ea6d:	mov    r8d,0x5
   14001ea73:	mov    rdx,QWORD PTR [rbx+0xb0]
   14001ea7a:	mov    rcx,rdi
   14001ea7d:	call   QWORD PTR [rip+0x45b9d]        # 0x140064620
   14001ea83:	mov    rdx,rax
   14001ea86:	mov    rcx,rdi
   14001ea89:	call   QWORD PTR [rip+0x45b99]        # 0x140064628
   14001ea8f:	mov    r12,rax
   14001ea92:	mov    QWORD PTR [rsp+0x48],rax
   14001ea97:	test   r12,r12
   14001ea9a:	je     0x14001eaa8
   14001ea9c:	mov    rcx,r12
   14001ea9f:	call   QWORD PTR [rip+0x45b8b]        # 0x140064630
   14001eaa5:	mov    r15,rax
   14001eaa8:	test   r15,r15
   14001eaab:	jne    0x14001eab6
   14001eaad:	or     rax,0xffffffffffffffff
   14001eab1:	jmp    0x14001ec9d
   14001eab6:	mov    rcx,rbx
   14001eab9:	call   0x14001e2fc
   14001eabe:	mov    rdi,rax
   14001eac1:	mov    QWORD PTR [rsp+0x50],rax
   14001eac6:	call   0x14002580c
   14001eacb:	xor    r14d,r14d
   14001eace:	mov    DWORD PTR [rsp+0xb8],r14d
   14001ead6:	xor    esi,esi
   14001ead8:	mov    QWORD PTR [rsp+0xc8],rsi
   14001eae0:	xor    r13d,r13d
   14001eae3:	mov    DWORD PTR [rsp+0xc0],r13d
   14001eaeb:	test   rdi,rdi
   14001eaee:	je     0x14001eb88
   14001eaf4:	call   QWORD PTR [rip+0x45ebe]        # 0x1400649b8
   14001eafa:	cmp    rdi,rax
   14001eafd:	je     0x14001eb88
   14001eb03:	mov    rcx,rdi
   14001eb06:	call   QWORD PTR [rip+0x45f04]        # 0x140064a10
   14001eb0c:	test   eax,eax
   14001eb0e:	je     0x14001eb88
   14001eb10:	xor    edx,edx
   14001eb12:	mov    rcx,rdi
   14001eb15:	call   QWORD PTR [rip+0x4602d]        # 0x140064b48
   14001eb1b:	lea    r14d,[rsi+0x1]
   14001eb1f:	mov    DWORD PTR [rsp+0xb8],r14d
   14001eb27:	call   0x14001c840
   14001eb2c:	test   rax,rax
   14001eb2f:	je     0x14001eb4a
   14001eb31:	mov    rdx,QWORD PTR [rax]
   14001eb34:	mov    rcx,rax
   14001eb37:	call   QWORD PTR [rdx+0xe8]
   14001eb3d:	mov    rsi,rax
   14001eb40:	mov    QWORD PTR [rsp+0xc8],rax
   14001eb48:	jmp    0x14001eb52
   14001eb4a:	mov    QWORD PTR [rsp+0xc8],rsi
   14001eb52:	test   rsi,rsi
   14001eb55:	je     0x14001eb88
   14001eb57:	mov    rax,QWORD PTR [rsi]
   14001eb5a:	mov    rcx,rsi
   14001eb5d:	call   QWORD PTR [rax+0x240]
   14001eb63:	test   eax,eax
   14001eb65:	je     0x14001eb88
   14001eb67:	mov    rcx,rsi
   14001eb6a:	call   0x140029b3c
   14001eb6f:	test   eax,eax
   14001eb71:	je     0x14001eb88
   14001eb73:	xor    edx,edx
   14001eb75:	mov    rcx,rsi
   14001eb78:	call   0x140029b6c
   14001eb7d:	mov    r13d,r14d
   14001eb80:	mov    DWORD PTR [rsp+0xc0],r14d
   14001eb88:	mov    rcx,rbx
   14001eb8b:	call   0x140027b2c
   14001eb90:	mov    rcx,rdi
   14001eb93:	call   0x1400256f0
   14001eb98:	mov    r9,QWORD PTR [rsp+0x40]
   14001eb9d:	mov    r8,rax
   14001eba0:	mov    rdx,r15
   14001eba3:	mov    rcx,rbx
   14001eba6:	call   0x14001e6d4
   14001ebab:	test   eax,eax
   14001ebad:	je     0x14001ec04
   14001ebaf:	test   BYTE PTR [rbx+0x78],0x10
   14001ebb3:	je     0x14001ebda
   14001ebb5:	mov    r15d,0x4
   14001ebbb:	mov    rcx,rbx
   14001ebbe:	call   0x14002998c
   14001ebc3:	bt     eax,0x8
   14001ebc7:	lea    eax,[r15+0x1]
   14001ebcb:	cmovb  r15d,eax
   14001ebcf:	mov    edx,r15d
   14001ebd2:	mov    rcx,rbx
   14001ebd5:	call   0x140025054
   14001ebda:	cmp    QWORD PTR [rbx+0x40],0x0
   14001ebdf:	je     0x14001ec04
   14001ebe1:	mov    DWORD PTR [rsp+0x30],0x97
   14001ebe9:	and    DWORD PTR [rsp+0x28],0x0
   14001ebee:	and    DWORD PTR [rsp+0x20],0x0
   14001ebf3:	xor    r9d,r9d
   14001ebf6:	xor    r8d,r8d
   14001ebf9:	xor    edx,edx
   14001ebfb:	mov    rcx,rbx
   14001ebfe:	call   0x140029d08
   14001ec03:	nop
   14001ec04:	jmp    0x14001ec30
   14001ec06:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001ec0e:	mov    r12,QWORD PTR [rsp+0x48]
   14001ec13:	mov    rdi,QWORD PTR [rsp+0x50]
   14001ec18:	mov    r14d,DWORD PTR [rsp+0xb8]
   14001ec20:	mov    rsi,QWORD PTR [rsp+0xc8]
   14001ec28:	mov    r13d,DWORD PTR [rsp+0xc0]
   14001ec30:	test   r13d,r13d
   14001ec33:	je     0x14001ec42
   14001ec35:	mov    edx,0x1
   14001ec3a:	mov    rcx,rsi
   14001ec3d:	call   0x140029b6c
   14001ec42:	test   r14d,r14d
   14001ec45:	je     0x14001ec55
   14001ec47:	mov    edx,0x1
   14001ec4c:	mov    rcx,rdi
   14001ec4f:	call   QWORD PTR [rip+0x45ef3]        # 0x140064b48
   14001ec55:	test   rdi,rdi
   14001ec58:	je     0x14001ec6f
   14001ec5a:	call   QWORD PTR [rip+0x45de0]        # 0x140064a40
   14001ec60:	cmp    rax,QWORD PTR [rbx+0x40]
   14001ec64:	jne    0x14001ec6f
   14001ec66:	mov    rcx,rdi
   14001ec69:	call   QWORD PTR [rip+0x45d51]        # 0x1400649c0
   14001ec6f:	mov    rax,QWORD PTR [rbx]
   14001ec72:	mov    rcx,rbx
   14001ec75:	call   QWORD PTR [rax+0xc0]
   14001ec7b:	mov    rcx,rbx
   14001ec7e:	call   0x14001e358
   14001ec83:	cmp    QWORD PTR [rbx+0xb0],0x0
   14001ec8b:	je     0x14001ec96
   14001ec8d:	mov    rcx,r12
   14001ec90:	call   QWORD PTR [rip+0x457fa]        # 0x140064490
   14001ec96:	movsxd rax,DWORD PTR [rbx+0x88]
   14001ec9d:	add    rsp,0x70
   14001eca1:	pop    r15
   14001eca3:	pop    r14
   14001eca5:	pop    r13
   14001eca7:	pop    r12
   14001eca9:	pop    rdi
   14001ecaa:	pop    rsi
   14001ecab:	pop    rbx
   14001ecac:	ret    
   14001ecad:	int3   
   14001ecae:	int3   
   14001ecaf:	int3   
   14001ecb0:	int3   
   14001ecb1:	int3   
   14001ecb2:	int3   
   14001ecb3:	int3   
   14001ecb4:	mov    QWORD PTR [rsp+0x10],rdx
   14001ecb9:	push   rbp
   14001ecba:	sub    rsp,0x40
   14001ecbe:	mov    rbp,rdx
   14001ecc1:	mov    rcx,QWORD PTR [rbp+0x60]
   14001ecc5:	test   rcx,rcx
   14001ecc8:	je     0x14001eccf
   14001ecca:	call   0x1400207b8
   14001eccf:	mov    rax,QWORD PTR [rbp+0xb0]
   14001ecd6:	or     DWORD PTR [rax+0x88],0xffffffff
   14001ecdd:	lea    rax,[rip+0xffffffffffffff22]        # 0x14001ec06
   14001ece4:	jmp    0x14001ece6
   14001ece6:	add    rsp,0x40
   14001ecea:	pop    rbp
   14001eceb:	ret    
   14001ecec:	int3   
   14001eced:	int3   
   14001ecee:	int3   
   14001ecef:	int3   
   14001ecf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ecf5:	mov    QWORD PTR [rsp+0x10],rsi
   14001ecfa:	push   rdi
   14001ecfb:	sub    rsp,0x20
   14001ecff:	test   r8,r8
   14001ed02:	mov    rdi,r9
   14001ed05:	mov    rax,r8
   14001ed08:	mov    rsi,rdx
   14001ed0b:	mov    rbx,rcx
   14001ed0e:	jne    0x14001ed2b
   14001ed10:	call   0x14001c840
   14001ed15:	test   rax,rax
   14001ed18:	je     0x14001ed29
   14001ed1a:	mov    r8,QWORD PTR [rax]
   14001ed1d:	mov    rcx,rax
   14001ed20:	call   QWORD PTR [r8+0xe8]
   14001ed27:	jmp    0x14001ed2b
   14001ed29:	xor    eax,eax
   14001ed2b:	mov    r9,QWORD PTR [rsp+0x50]
   14001ed30:	mov    r8,rax
   14001ed33:	mov    rdx,rsi
   14001ed36:	mov    rcx,rbx
   14001ed39:	mov    QWORD PTR [rbx+0xc8],rdi
   14001ed40:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ed45:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ed4a:	add    rsp,0x20
   14001ed4e:	pop    rdi
   14001ed4f:	jmp    0x14001e6d4
   14001ed54:	mov    QWORD PTR [rsp+0x8],rbx
   14001ed59:	mov    QWORD PTR [rsp+0x10],rsi
   14001ed5e:	push   rdi
   14001ed5f:	sub    rsp,0x30
   14001ed63:	mov    rsi,rcx
   14001ed66:	mov    rcx,rdx
   14001ed69:	mov    rbx,r9
   14001ed6c:	mov    rdi,r8
   14001ed6f:	call   QWORD PTR [rip+0x458bb]        # 0x140064630
   14001ed75:	xor    r9d,r9d
   14001ed78:	mov    r8,rdi
   14001ed7b:	mov    rcx,rsi
   14001ed7e:	mov    rdx,rax
   14001ed81:	mov    QWORD PTR [rsp+0x20],rbx
   14001ed86:	call   0x14001ecf0
   14001ed8b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ed90:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ed95:	add    rsp,0x30
   14001ed99:	pop    rdi
   14001ed9a:	ret    
   14001ed9b:	int3   
   14001ed9c:	sub    rsp,0x38
   14001eda0:	and    QWORD PTR [rsp+0x20],0x0
   14001eda6:	call   0x14001ecf0
   14001edab:	add    rsp,0x38
   14001edaf:	ret    
   14001edb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001edb5:	mov    QWORD PTR [rsp+0x10],rbp
   14001edba:	mov    QWORD PTR [rsp+0x18],rsi
   14001edbf:	push   rdi
   14001edc0:	sub    rsp,0x20
   14001edc4:	test   rdx,0xffffffffffff0000
   14001edcb:	mov    rbp,r8
   14001edce:	mov    rdi,rdx
   14001edd1:	mov    rsi,rcx
   14001edd4:	mov    QWORD PTR [rcx+0xb0],rdx
   14001eddb:	jne    0x14001edef
   14001eddd:	cmp    DWORD PTR [rcx+0xa8],0x0
   14001ede4:	jne    0x14001edef
   14001ede6:	movzx  eax,dx
   14001ede9:	mov    DWORD PTR [rcx+0xa8],eax
   14001edef:	call   0x140021a70
   14001edf4:	mov    r8d,0x5
   14001edfa:	mov    rdx,rdi
   14001edfd:	mov    rbx,QWORD PTR [rax+0x18]
   14001ee01:	mov    rcx,rbx
   14001ee04:	call   QWORD PTR [rip+0x45816]        # 0x140064620
   14001ee0a:	mov    rcx,rbx
   14001ee0d:	mov    rdx,rax
   14001ee10:	call   QWORD PTR [rip+0x45812]        # 0x140064628
   14001ee16:	mov    r9,rbx
   14001ee19:	mov    r8,rbp
   14001ee1c:	mov    rdx,rax
   14001ee1f:	mov    rcx,rsi
   14001ee22:	mov    rdi,rax
   14001ee25:	call   0x14001ed54
   14001ee2a:	mov    rcx,rdi
   14001ee2d:	mov    ebx,eax
   14001ee2f:	call   QWORD PTR [rip+0x4565b]        # 0x140064490
   14001ee35:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ee3a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ee3f:	mov    eax,ebx
   14001ee41:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ee46:	add    rsp,0x20
   14001ee4a:	pop    rdi
   14001ee4b:	ret    
   14001ee4c:	xor    r9d,r9d
   14001ee4f:	jmp    0x14001ed54
   14001ee54:	mov    QWORD PTR [rsp+0x8],rbx
   14001ee59:	mov    QWORD PTR [rsp+0x10],rbp
   14001ee5e:	mov    QWORD PTR [rsp+0x18],rsi
   14001ee63:	push   rdi
   14001ee64:	sub    rsp,0x40
   14001ee68:	mov    rbp,rcx
   14001ee6b:	mov    ecx,0x200
   14001ee70:	mov    rbx,r9
   14001ee73:	mov    rdi,r8
   14001ee76:	mov    esi,edx
   14001ee78:	call   0x1400293dc
   14001ee7d:	and    QWORD PTR [rsp+0x38],0x0
   14001ee83:	mov    eax,DWORD PTR [rsp+0x70]
   14001ee87:	mov    r11,QWORD PTR [rbp+0x0]
   14001ee8b:	mov    DWORD PTR [rsp+0x30],eax
   14001ee8f:	lea    rdx,[rip+0x49bb2]        # 0x140068a48
   14001ee96:	mov    r9d,esi
   14001ee99:	xor    r8d,r8d
   14001ee9c:	mov    rcx,rbp
   14001ee9f:	mov    QWORD PTR [rsp+0x28],rbx
   14001eea4:	mov    QWORD PTR [rsp+0x20],rdi
   14001eea9:	call   QWORD PTR [r11+0xa8]
   14001eeb0:	mov    rbx,QWORD PTR [rsp+0x50]
   14001eeb5:	mov    rbp,QWORD PTR [rsp+0x58]
   14001eeba:	mov    rsi,QWORD PTR [rsp+0x60]
   14001eebf:	add    rsp,0x40
   14001eec3:	pop    rdi
   14001eec4:	ret    
   14001eec5:	int3   
   14001eec6:	int3   
   14001eec7:	int3   
   14001eec8:	mov    QWORD PTR [rsp+0x8],rbx
   14001eecd:	mov    QWORD PTR [rsp+0x10],rsi
   14001eed2:	push   rdi
   14001eed3:	sub    rsp,0x30
   14001eed7:	mov    eax,DWORD PTR [rsp+0x68]
   14001eedb:	mov    r10,QWORD PTR [rcx]
   14001eede:	mov    r11,r9
   14001eee1:	mov    r9,QWORD PTR [rsp+0x60]
   14001eee6:	mov    ebx,r8d
   14001eee9:	mov    edi,edx
   14001eeeb:	mov    r8,r11
   14001eeee:	mov    edx,ebx
   14001eef0:	mov    DWORD PTR [rsp+0x20],eax
   14001eef4:	mov    rsi,rcx
   14001eef7:	call   QWORD PTR [r10+0x268]
   14001eefe:	test   eax,eax
   14001ef00:	je     0x14001ef16
   14001ef02:	test   edi,edi
   14001ef04:	je     0x14001ef16
   14001ef06:	xor    r9d,r9d
   14001ef09:	mov    r8d,edi
   14001ef0c:	xor    edx,edx
   14001ef0e:	mov    rcx,rsi
   14001ef11:	call   0x1400299f4
   14001ef16:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ef1b:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ef20:	add    rsp,0x30
   14001ef24:	pop    rdi
   14001ef25:	ret    
   14001ef26:	int3   
   14001ef27:	int3   
   14001ef28:	mov    QWORD PTR [rsp+0x8],rcx
   14001ef2d:	push   rbx
   14001ef2e:	sub    rsp,0x30
   14001ef32:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ef3b:	mov    rbx,rcx
   14001ef3e:	lea    rax,[rip+0x460c3]        # 0x140065008
   14001ef45:	mov    QWORD PTR [rcx],rax
   14001ef48:	call   0x140025a30
   14001ef4d:	nop
   14001ef4e:	mov    rcx,rbx
   14001ef51:	add    rsp,0x30
   14001ef55:	pop    rbx
   14001ef56:	jmp    0x140026254
   14001ef5b:	int3   
   14001ef5c:	int3   
   14001ef5d:	int3   
   14001ef5e:	int3   
   14001ef5f:	int3   
   14001ef60:	int3   
   14001ef61:	int3   
   14001ef62:	int3   
   14001ef63:	int3   
   14001ef64:	int3   
   14001ef65:	int3   
   14001ef66:	int3   
   14001ef67:	int3   
   14001ef68:	rex push rbp
   14001ef6a:	sub    rsp,0x20
   14001ef6e:	mov    rbp,rdx
   14001ef71:	mov    rcx,QWORD PTR [rbp+0x40]
   14001ef75:	call   0x140026254
   14001ef7a:	add    rsp,0x20
   14001ef7e:	pop    rbp
   14001ef7f:	ret    
   14001ef80:	lea    rax,[rip+0x49a91]        # 0x140068a18
   14001ef87:	ret    
   14001ef88:	jmp    0x14001ac50
   14001ef8d:	int3   
   14001ef8e:	int3   
   14001ef8f:	int3   
   14001ef90:	sub    rsp,0x468
   14001ef97:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001efa0:	mov    rax,QWORD PTR [rip+0x67dc9]        # 0x140086d70
   14001efa7:	xor    rax,rsp
   14001efaa:	mov    QWORD PTR [rsp+0x450],rax
   14001efb2:	lea    rax,[rip+0x49ae7]        # 0x140068aa0
   14001efb9:	mov    QWORD PTR [rcx],rax
   14001efbc:	call   0x14002b5d8
   14001efc1:	nop
   14001efc2:	mov    rcx,QWORD PTR [rsp+0x450]
   14001efca:	xor    rcx,rsp
   14001efcd:	call   0x140046470
   14001efd2:	add    rsp,0x468
   14001efd9:	ret    
   14001efda:	int3   
   14001efdb:	int3   
   14001efdc:	int3   
   14001efdd:	int3   
   14001efde:	int3   
   14001efdf:	int3   
   14001efe0:	mov    QWORD PTR [rsp+0x10],rdx
   14001efe5:	push   rbx
   14001efe6:	push   rbp
   14001efe7:	sub    rsp,0x38
   14001efeb:	mov    rbp,rdx
   14001efee:	call   0x14002b874
   14001eff3:	mov    r11,rax
   14001eff6:	xor    ecx,ecx
   14001eff8:	test   rax,rax
   14001effb:	setne  cl
   14001effe:	test   ecx,ecx
   14001f000:	jne    0x14001f00d
   14001f002:	mov    ecx,0x80004005
   14001f007:	call   0x140001430
   14001f00c:	int3   
   14001f00d:	mov    rax,QWORD PTR [rax]
   14001f010:	mov    rcx,r11
   14001f013:	call   QWORD PTR [rax+0x18]
   14001f016:	add    rax,0x18
   14001f01a:	mov    QWORD PTR [rbp+0x30],rax
   14001f01e:	mov    rcx,QWORD PTR [rbp+0x38]
   14001f022:	mov    rax,QWORD PTR [rcx]
   14001f025:	xor    r9d,r9d
   14001f028:	mov    r8d,0x200
   14001f02e:	lea    rdx,[rbp+0x50]
   14001f032:	call   QWORD PTR [rax+0x18]
   14001f035:	test   eax,eax
   14001f037:	je     0x14001f06a
   14001f039:	lea    rax,[rbp+0x50]
   14001f03d:	mov    QWORD PTR [rsp+0x28],rax
   14001f042:	mov    DWORD PTR [rsp+0x20],0x6d
   14001f04a:	lea    r9,[rip+0x49a8f]        # 0x140068ae0
   14001f051:	lea    r8,[rip+0x49050]        # 0x1400680a8
   14001f058:	lea    rdx,[rip+0x49029]        # 0x140068088
   14001f05f:	lea    rcx,[rbp+0x30]
   14001f063:	call   0x140004180
   14001f068:	jmp    0x14001f090
   14001f06a:	mov    DWORD PTR [rsp+0x20],0x6d
   14001f072:	lea    r9,[rip+0x49a67]        # 0x140068ae0
   14001f079:	lea    r8,[rip+0x49028]        # 0x1400680a8
   14001f080:	lea    rdx,[rip+0x48fe9]        # 0x140068070
   14001f087:	lea    rcx,[rbp+0x30]
   14001f08b:	call   0x140004180
   14001f090:	xor    r8d,r8d
   14001f093:	xor    edx,edx
   14001f095:	mov    rbx,QWORD PTR [rbp+0x30]
   14001f099:	mov    rcx,rbx
   14001f09c:	call   0x14001dd9c
   14001f0a1:	nop
   14001f0a2:	lea    rdx,[rbx-0x18]
   14001f0a6:	or     eax,0xffffffff
   14001f0a9:	lock xadd DWORD PTR [rdx+0x10],eax
   14001f0ae:	add    eax,0xffffffff
   14001f0b1:	test   eax,eax
   14001f0b3:	jg     0x14001f0be
   14001f0b5:	mov    rcx,QWORD PTR [rdx]
   14001f0b8:	mov    rax,QWORD PTR [rcx]
   14001f0bb:	call   QWORD PTR [rax+0x8]
   14001f0be:	mov    rcx,QWORD PTR [rbp+0x38]
   14001f0c2:	mov    rax,QWORD PTR [rcx]
   14001f0c5:	mov    edx,0x1
   14001f0ca:	call   QWORD PTR [rax+0x8]
   14001f0cd:	nop
   14001f0ce:	lea    rax,[rip+0xfffffffffffffeed]        # 0x14001efc2
   14001f0d5:	jmp    0x14001f0d7
   14001f0d7:	add    rsp,0x38
   14001f0db:	pop    rbp
   14001f0dc:	pop    rbx
   14001f0dd:	ret    
   14001f0de:	int3   
   14001f0df:	int3   
   14001f0e0:	rex push rbp
   14001f0e2:	sub    rsp,0x20
   14001f0e6:	mov    rbp,rdx
   14001f0e9:	lea    rcx,[rbp+0x30]
   14001f0ed:	call   0x1400010c0
   14001f0f2:	add    rsp,0x20
   14001f0f6:	pop    rbp
   14001f0f7:	ret    
   14001f0f8:	lea    rax,[rip+0x49a21]        # 0x140068b20
   14001f0ff:	mov    QWORD PTR [rcx],rax
   14001f102:	jmp    0x14001ef90
   14001f107:	int3   
   14001f108:	mov    QWORD PTR [rsp+0x8],rbx
   14001f10d:	push   rdi
   14001f10e:	sub    rsp,0x20
   14001f112:	mov    ebx,edx
   14001f114:	mov    rdi,rcx
   14001f117:	call   0x14001ef90
   14001f11c:	test   bl,0x1
   14001f11f:	je     0x14001f129
   14001f121:	mov    rcx,rdi
   14001f124:	call   0x14001ac50
   14001f129:	mov    rax,rdi
   14001f12c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f131:	add    rsp,0x20
   14001f135:	pop    rdi
   14001f136:	ret    
   14001f137:	int3   
   14001f138:	mov    QWORD PTR [rsp+0x8],rbx
   14001f13d:	push   rdi
   14001f13e:	sub    rsp,0x20
   14001f142:	lea    rax,[rip+0x499d7]        # 0x140068b20
   14001f149:	mov    ebx,edx
   14001f14b:	mov    rdi,rcx
   14001f14e:	mov    QWORD PTR [rcx],rax
   14001f151:	call   0x14001ef90
   14001f156:	test   bl,0x1
   14001f159:	je     0x14001f163
   14001f15b:	mov    rcx,rdi
   14001f15e:	call   0x14001ac50
   14001f163:	mov    rax,rdi
   14001f166:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f16b:	add    rsp,0x20
   14001f16f:	pop    rdi
   14001f170:	ret    
   14001f171:	int3   
   14001f172:	int3   
   14001f173:	int3   
   14001f174:	mov    r9d,DWORD PTR [rcx]
   14001f177:	xor    r8d,r8d
   14001f17a:	or     r10w,0xffff
   14001f180:	cmp    WORD PTR [rcx+0x2],r10w
   14001f185:	sete   r8b
   14001f189:	test   r8d,r8d
   14001f18c:	je     0x14001f198
   14001f18e:	mov    r9d,DWORD PTR [rcx+0xc]
   14001f192:	lea    rdx,[rcx+0x1a]
   14001f196:	jmp    0x14001f19c
   14001f198:	lea    rdx,[rcx+0x12]
   14001f19c:	cmp    WORD PTR [rdx],r10w
   14001f1a0:	jne    0x14001f1a8
   14001f1a2:	add    rdx,0x4
   14001f1a6:	jmp    0x14001f1b4
   14001f1a8:	movzx  eax,WORD PTR [rdx]
   14001f1ab:	add    rdx,0x2
   14001f1af:	test   ax,ax
   14001f1b2:	jne    0x14001f1a8
   14001f1b4:	cmp    WORD PTR [rdx],r10w
   14001f1b8:	jne    0x14001f1c0
   14001f1ba:	add    rdx,0x4
   14001f1be:	jmp    0x14001f1cc
   14001f1c0:	movzx  eax,WORD PTR [rdx]
   14001f1c3:	add    rdx,0x2
   14001f1c7:	test   ax,ax
   14001f1ca:	jne    0x14001f1c0
   14001f1cc:	movzx  eax,WORD PTR [rdx]
   14001f1cf:	add    rdx,0x2
   14001f1d3:	test   ax,ax
   14001f1d6:	jne    0x14001f1cc
   14001f1d8:	test   r9b,0x40
   14001f1dc:	je     0x14001f1f8
   14001f1de:	neg    r8d
   14001f1e1:	sbb    rax,rax
   14001f1e4:	and    eax,0x2
   14001f1e7:	lea    rdx,[rdx+rax*2+0x2]
   14001f1ec:	movzx  eax,WORD PTR [rdx]
   14001f1ef:	add    rdx,0x2
   14001f1f3:	test   ax,ax
   14001f1f6:	jne    0x14001f1ec
   14001f1f8:	lea    rax,[rdx+0x3]
   14001f1fc:	and    rax,0xfffffffffffffffc
   14001f200:	ret    
   14001f201:	int3   
   14001f202:	int3   
   14001f203:	int3   
   14001f204:	test   edx,edx
   14001f206:	je     0x14001f20e
   14001f208:	add    rcx,0x18
   14001f20c:	jmp    0x14001f212
   14001f20e:	add    rcx,0x12
   14001f212:	or     r8w,0xffff
   14001f218:	cmp    WORD PTR [rcx],r8w
   14001f21c:	jne    0x14001f224
   14001f21e:	add    rcx,0x4
   14001f222:	jmp    0x14001f230
   14001f224:	movzx  eax,WORD PTR [rcx]
   14001f227:	add    rcx,0x2
   14001f22b:	test   ax,ax
   14001f22e:	jne    0x14001f224
   14001f230:	cmp    WORD PTR [rcx],r8w
   14001f234:	jne    0x14001f23c
   14001f236:	add    rcx,0x4
   14001f23a:	jmp    0x14001f248
   14001f23c:	movzx  eax,WORD PTR [rcx]
   14001f23f:	add    rcx,0x2
   14001f243:	test   ax,ax
   14001f246:	jne    0x14001f23c
   14001f248:	movzx  eax,WORD PTR [rcx]
   14001f24b:	test   ax,ax
   14001f24e:	je     0x14001f258
   14001f250:	test   edx,edx
   14001f252:	jne    0x14001f258
   14001f254:	add    ax,0xfffe
   14001f258:	movzx  eax,ax
   14001f25b:	lea    rax,[rax+rcx*1+0x5]
   14001f260:	and    rax,0xfffffffffffffffc
   14001f264:	ret    
   14001f265:	int3   
   14001f266:	int3   
   14001f267:	int3   
   14001f268:	mov    rax,r9
   14001f26b:	mov    r9,QWORD PTR [rsp+0x28]
   14001f270:	mov    r10d,r8d
   14001f273:	mov    rcx,rdx
   14001f276:	mov    r8,rax
   14001f279:	mov    edx,r10d
   14001f27c:	jmp    0x14002ff9c
   14001f281:	int3   
   14001f282:	int3   
   14001f283:	int3   
   14001f284:	mov    rax,rsp
   14001f287:	mov    QWORD PTR [rax+0x8],rbx
   14001f28b:	mov    QWORD PTR [rax+0x10],rbp
   14001f28f:	mov    QWORD PTR [rax+0x18],rsi
   14001f293:	mov    QWORD PTR [rax+0x20],rdi
   14001f297:	push   r12
   14001f299:	push   r13
   14001f29b:	push   r14
   14001f29d:	sub    rsp,0x20
   14001f2a1:	test   r8,r8
   14001f2a4:	mov    rdi,r8
   14001f2a7:	mov    rbp,rdx
   14001f2aa:	mov    rbx,rcx
   14001f2ad:	jne    0x14001f2b5
   14001f2af:	call   0x1400208f8
   14001f2b4:	int3   
   14001f2b5:	cmp    WORD PTR [r8+0x2],0xffff
   14001f2bc:	lea    rax,[r8+0x10]
   14001f2c0:	je     0x14001f2c6
   14001f2c2:	lea    rax,[r8+0x8]
   14001f2c6:	movzx  eax,WORD PTR [rax]
   14001f2c9:	mov    ecx,0x8
   14001f2ce:	add    eax,0x1
   14001f2d1:	movsxd rdx,eax
   14001f2d4:	call   0x140048c80
   14001f2d9:	test   rax,rax
   14001f2dc:	mov    r8,rax
   14001f2df:	mov    QWORD PTR [rbp+0x8],rax
   14001f2e3:	je     0x14001f3d9
   14001f2e9:	mov    rax,QWORD PTR [rbx]
   14001f2ec:	mov    rdx,rdi
   14001f2ef:	mov    rcx,rbx
   14001f2f2:	call   QWORD PTR [rax+0x38]
   14001f2f5:	mov    rcx,rdi
   14001f2f8:	mov    r12,rax
   14001f2fb:	mov    QWORD PTR [rbp+0x0],rax
   14001f2ff:	call   0x14001f174
   14001f304:	xor    r13d,r13d
   14001f307:	cmp    WORD PTR [rdi+0x2],0xffff
   14001f30d:	lea    rcx,[rdi+0x10]
   14001f311:	sete   r13b
   14001f315:	cmp    WORD PTR [rdi+0x2],0xffff
   14001f31b:	mov    rsi,rax
   14001f31e:	je     0x14001f324
   14001f320:	lea    rcx,[rdi+0x8]
   14001f324:	movzx  ebx,WORD PTR [rcx]
   14001f327:	mov    rcx,0xffffffffffffffff
   14001f32e:	mov    eax,0x8
   14001f333:	mul    rbx
   14001f336:	cmovo  rax,rcx
   14001f33a:	mov    rcx,rax
   14001f33d:	call   0x14001ac0c
   14001f342:	mov    r8,rbx
   14001f345:	xor    edx,edx
   14001f347:	mov    rcx,rax
   14001f34a:	shl    r8,0x3
   14001f34e:	mov    QWORD PTR [rbp+0x18],rax
   14001f352:	call   0x140047720
   14001f357:	xor    r9d,r9d
   14001f35a:	test   ebx,ebx
   14001f35c:	mov    DWORD PTR [rbp+0x10],ebx
   14001f35f:	jle    0x14001f3cf
   14001f361:	mov    edx,r13d
   14001f364:	mov    rcx,rsi
   14001f367:	call   0x14001f204
   14001f36c:	test   r13d,r13d
   14001f36f:	mov    r10,rax
   14001f372:	je     0x14001f388
   14001f374:	mov    rdx,QWORD PTR [rbp+0x18]
   14001f378:	mov    ecx,DWORD PTR [rsi+0x14]
   14001f37b:	mov    DWORD PTR [rdx+r9*8],ecx
   14001f37f:	mov    ecx,DWORD PTR [rsi+0x8]
   14001f382:	lea    rdx,[rsi+0x18]
   14001f386:	jmp    0x14001f39a
   14001f388:	movzx  ecx,WORD PTR [rsi+0x10]
   14001f38c:	mov    rax,QWORD PTR [rbp+0x18]
   14001f390:	lea    rdx,[rsi+0x12]
   14001f394:	mov    DWORD PTR [rax+r9*8],ecx
   14001f398:	mov    ecx,DWORD PTR [rsi]
   14001f39a:	cmp    WORD PTR [rdx],0xffff
   14001f39f:	jne    0x14001f3b8
   14001f3a1:	cmp    WORD PTR [rdx+0x2],0x80
   14001f3a7:	jne    0x14001f3b8
   14001f3a9:	and    ecx,0xf
   14001f3ac:	cmp    cl,0x9
   14001f3af:	jne    0x14001f3b8
   14001f3b1:	mov    ecx,0x1
   14001f3b6:	jmp    0x14001f3ba
   14001f3b8:	xor    ecx,ecx
   14001f3ba:	mov    rax,QWORD PTR [rbp+0x18]
   14001f3be:	add    r9,0x1
   14001f3c2:	mov    rsi,r10
   14001f3c5:	cmp    r9,rbx
   14001f3c8:	mov    DWORD PTR [rax+r9*8-0x4],ecx
   14001f3cd:	jl     0x14001f361
   14001f3cf:	test   r12,r12
   14001f3d2:	cmovne rdi,r12
   14001f3d6:	mov    rax,rdi
   14001f3d9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f3de:	mov    rbp,QWORD PTR [rsp+0x48]
   14001f3e3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001f3e8:	mov    rdi,QWORD PTR [rsp+0x58]
   14001f3ed:	add    rsp,0x20
   14001f3f1:	pop    r14
   14001f3f3:	pop    r13
   14001f3f5:	pop    r12
   14001f3f7:	ret    
   14001f3f8:	rex push rbx
   14001f3fa:	sub    rsp,0x20
   14001f3fe:	mov    rcx,QWORD PTR [rdx]
   14001f401:	mov    rbx,rdx
   14001f404:	test   rcx,rcx
   14001f407:	je     0x14001f40f
   14001f409:	call   QWORD PTR [rip+0x45171]        # 0x140064580
   14001f40f:	mov    rcx,QWORD PTR [rbx+0x8]
   14001f413:	test   rcx,rcx
   14001f416:	je     0x14001f41d
   14001f418:	call   0x1400485c0
   14001f41d:	mov    rcx,QWORD PTR [rbx+0x18]
   14001f421:	add    rsp,0x20
   14001f425:	pop    rbx
   14001f426:	jmp    0x14001ac50
   14001f42b:	int3   
   14001f42c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f431:	mov    QWORD PTR [rsp+0x18],rbp
   14001f436:	mov    QWORD PTR [rsp+0x20],rsi
   14001f43b:	push   rdi
   14001f43c:	push   r12
   14001f43e:	push   r13
   14001f440:	push   r14
   14001f442:	push   r15
   14001f444:	sub    rsp,0x20
   14001f448:	mov    rcx,rdx
   14001f44b:	mov    r15,r8
   14001f44e:	mov    rbx,rdx
   14001f451:	call   0x14001f174
   14001f456:	mov    esi,eax
   14001f458:	mov    rbp,rax
   14001f45b:	sub    esi,ebx
   14001f45d:	test   rcx,rcx
   14001f460:	mov    r11d,esi
   14001f463:	jne    0x14001f46b
   14001f465:	call   0x1400208f8
   14001f46a:	int3   
   14001f46b:	xor    r12d,r12d
   14001f46e:	or     ax,0xffff
   14001f472:	cmp    WORD PTR [rbx+0x2],ax
   14001f476:	sete   r12b
   14001f47a:	cmp    WORD PTR [rbx+0x2],ax
   14001f47e:	lea    rax,[rbx+0x10]
   14001f482:	mov    DWORD PTR [rsp+0x58],r12d
   14001f487:	je     0x14001f48d
   14001f489:	lea    rax,[rbx+0x8]
   14001f48d:	movzx  r14d,WORD PTR [rax]
   14001f491:	xor    r10d,r10d
   14001f494:	mov    r9,rbp
   14001f497:	test   r14d,r14d
   14001f49a:	jle    0x14001f618
   14001f4a0:	mov    rdi,r14
   14001f4a3:	mov    edx,r12d
   14001f4a6:	mov    rcx,r9
   14001f4a9:	call   0x14001f204
   14001f4ae:	test   r12d,r12d
   14001f4b1:	lea    rcx,[r9+0x18]
   14001f4b5:	lea    rdx,[r9+0x12]
   14001f4b9:	mov    r8,rax
   14001f4bc:	cmovne rdx,rcx
   14001f4c0:	cmp    WORD PTR [rdx],0x7b
   14001f4c4:	jne    0x14001f4ce
   14001f4c6:	mov    r10d,0x1
   14001f4cc:	jmp    0x14001f4d4
   14001f4ce:	sub    eax,r9d
   14001f4d1:	add    r11d,eax
   14001f4d4:	sub    rdi,0x1
   14001f4d8:	mov    r9,r8
   14001f4db:	jne    0x14001f4a3
   14001f4dd:	test   r10d,r10d
   14001f4e0:	je     0x14001f618
   14001f4e6:	mov    edx,r11d
   14001f4e9:	xor    ecx,ecx
   14001f4eb:	mov    r13d,r11d
   14001f4ee:	call   QWORD PTR [rip+0x45084]        # 0x140064578
   14001f4f4:	test   rax,rax
   14001f4f7:	mov    r12,rax
   14001f4fa:	jne    0x14001f502
   14001f4fc:	call   0x1400208b0
   14001f501:	int3   
   14001f502:	mov    r9,rsi
   14001f505:	mov    r8,rbx
   14001f508:	mov    rdx,r13
   14001f50b:	mov    rcx,rax
   14001f50e:	mov    rdi,rax
   14001f511:	call   0x1400466d0
   14001f516:	test   eax,eax
   14001f518:	je     0x14001f540
   14001f51a:	cmp    eax,0xc
   14001f51d:	je     0x14001f53a
   14001f51f:	cmp    eax,0x16
   14001f522:	je     0x14001f534
   14001f524:	cmp    eax,0x22
   14001f527:	je     0x14001f534
   14001f529:	cmp    eax,0x50
   14001f52c:	je     0x14001f540
   14001f52e:	call   0x1400208f8
   14001f533:	int3   
   14001f534:	call   0x1400208f8
   14001f539:	int3   
   14001f53a:	call   0x1400208b0
   14001f53f:	int3   
   14001f540:	add    r12,rsi
   14001f543:	test   rdi,rdi
   14001f546:	jne    0x14001f54e
   14001f548:	call   0x1400208f8
   14001f54d:	int3   
   14001f54e:	cmp    WORD PTR [rdi+0x2],0xffff
   14001f554:	lea    rax,[rdi+0x10]
   14001f558:	je     0x14001f55e
   14001f55a:	lea    rax,[rdi+0x8]
   14001f55e:	and    WORD PTR [rax],0x0
   14001f562:	xor    ebx,ebx
   14001f564:	test   r14d,r14d
   14001f567:	mov    rsi,r14
   14001f56a:	jle    0x14001f5fc
   14001f570:	mov    r9d,DWORD PTR [rsp+0x58]
   14001f575:	mov    edx,r9d
   14001f578:	mov    rcx,rbp
   14001f57b:	call   0x14001f204
   14001f580:	test   r9d,r9d
   14001f583:	lea    rcx,[rbp+0x18]
   14001f587:	lea    rdx,[rbp+0x12]
   14001f58b:	mov    r14,rax
   14001f58e:	cmovne rdx,rcx
   14001f592:	cmp    WORD PTR [rdx],0x7b
   14001f596:	jne    0x14001f59e
   14001f598:	mov    QWORD PTR [r15+rbx*8],rbp
   14001f59c:	jmp    0x14001f5ec
   14001f59e:	sub    eax,ebp
   14001f5a0:	mov    r8,rbp
   14001f5a3:	mov    rcx,r12
   14001f5a6:	mov    r9d,eax
   14001f5a9:	mov    edx,eax
   14001f5ab:	mov    r13d,eax
   14001f5ae:	call   0x1400466d0
   14001f5b3:	test   eax,eax
   14001f5b5:	je     0x14001f5cb
   14001f5b7:	cmp    eax,0xc
   14001f5ba:	je     0x14001f612
   14001f5bc:	cmp    eax,0x16
   14001f5bf:	je     0x14001f60c
   14001f5c1:	cmp    eax,0x22
   14001f5c4:	je     0x14001f60c
   14001f5c6:	cmp    eax,0x50
   14001f5c9:	jne    0x14001f606
   14001f5cb:	add    r12,r13
   14001f5ce:	cmp    WORD PTR [rdi+0x2],0xffff
   14001f5d4:	lea    rax,[rdi+0x10]
   14001f5d8:	je     0x14001f5de
   14001f5da:	lea    rax,[rdi+0x8]
   14001f5de:	add    WORD PTR [rax],0x1
   14001f5e2:	mov    r9d,DWORD PTR [rsp+0x58]
   14001f5e7:	and    QWORD PTR [r15+rbx*8],0x0
   14001f5ec:	add    rbx,0x1
   14001f5f0:	mov    rbp,r14
   14001f5f3:	cmp    rbx,rsi
   14001f5f6:	jl     0x14001f575
   14001f5fc:	or     QWORD PTR [r15+rsi*8],0xffffffffffffffff
   14001f601:	mov    rax,rdi
   14001f604:	jmp    0x14001f61e
   14001f606:	call   0x1400208f8
   14001f60b:	int3   
   14001f60c:	call   0x1400208f8
   14001f611:	int3   
   14001f612:	call   0x1400208b0
   14001f617:	int3   
   14001f618:	or     QWORD PTR [r15],0xffffffffffffffff
   14001f61c:	xor    eax,eax
   14001f61e:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f623:	mov    rbp,QWORD PTR [rsp+0x60]
   14001f628:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f62d:	add    rsp,0x20
   14001f631:	pop    r15
   14001f633:	pop    r14
   14001f635:	pop    r13
   14001f637:	pop    r12
   14001f639:	pop    rdi
   14001f63a:	ret    
   14001f63b:	int3   
   14001f63c:	rex push rbx
   14001f63e:	sub    rsp,0x20
   14001f642:	mov    rax,QWORD PTR [rcx+0x8]
   14001f646:	mov    rbx,rcx
   14001f649:	jmp    0x14001f64e
   14001f64b:	mov    rax,QWORD PTR [rax]
   14001f64e:	test   rax,rax
   14001f651:	jne    0x14001f64b
   14001f653:	and    QWORD PTR [rcx+0x18],rax
   14001f657:	and    QWORD PTR [rcx+0x20],rax
   14001f65b:	and    QWORD PTR [rcx+0x10],rax
   14001f65f:	and    QWORD PTR [rcx+0x8],rax
   14001f663:	mov    rcx,QWORD PTR [rcx+0x28]
   14001f667:	call   0x140030360
   14001f66c:	and    QWORD PTR [rbx+0x28],0x0
   14001f671:	add    rsp,0x20
   14001f675:	pop    rbx
   14001f676:	ret    
   14001f677:	int3   
   14001f678:	mov    rax,QWORD PTR [rcx+0x8]
   14001f67c:	ret    
   14001f67d:	int3   
   14001f67e:	int3   
   14001f67f:	int3   
   14001f680:	rex push rbx
   14001f682:	sub    rsp,0x20
   14001f686:	test   dl,0x1
   14001f689:	lea    rax,[rip+0x494b0]        # 0x140068b40
   14001f690:	mov    rbx,rcx
   14001f693:	mov    QWORD PTR [rcx],rax
   14001f696:	je     0x14001f69d
   14001f698:	call   0x14001ac50
   14001f69d:	mov    rax,rbx
   14001f6a0:	add    rsp,0x20
   14001f6a4:	pop    rbx
   14001f6a5:	ret    
   14001f6a6:	int3   
   14001f6a7:	int3   
   14001f6a8:	lea    rax,[rip+0x494a9]        # 0x140068b58
   14001f6af:	mov    QWORD PTR [rcx],rax
   14001f6b2:	jmp    0x14001f63c
   14001f6b7:	int3   
   14001f6b8:	mov    QWORD PTR [rsp+0x8],rbx
   14001f6bd:	push   rdi
   14001f6be:	sub    rsp,0x20
   14001f6c2:	lea    rax,[rip+0x4948f]        # 0x140068b58
   14001f6c9:	mov    ebx,edx
   14001f6cb:	mov    rdi,rcx
   14001f6ce:	mov    QWORD PTR [rcx],rax
   14001f6d1:	call   0x14001f63c
   14001f6d6:	test   bl,0x1
   14001f6d9:	je     0x14001f6e3
   14001f6db:	mov    rcx,rdi
   14001f6de:	call   0x14001ac50
   14001f6e3:	mov    rax,rdi
   14001f6e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f6eb:	add    rsp,0x20
   14001f6ef:	pop    rdi
   14001f6f0:	ret    
   14001f6f1:	int3   
   14001f6f2:	int3   
   14001f6f3:	int3   
   14001f6f4:	rex push rbx
   14001f6f6:	sub    rsp,0x30
   14001f6fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f703:	mov    rbx,rdx
   14001f706:	mov    ecx,0xf8
   14001f70b:	call   0x14001ac0c
   14001f710:	mov    rcx,rax
   14001f713:	mov    QWORD PTR [rsp+0x50],rax
   14001f718:	xor    eax,eax
   14001f71a:	cmp    rcx,rax
   14001f71d:	je     0x14001f728
   14001f71f:	mov    rdx,rbx
   14001f722:	call   0x140032a88
   14001f727:	nop
   14001f728:	add    rsp,0x30
   14001f72c:	pop    rbx
   14001f72d:	ret    
   14001f72e:	int3   
   14001f72f:	int3   
   14001f730:	int3   
   14001f731:	int3   
   14001f732:	int3   
   14001f733:	int3   
   14001f734:	rex push rbp
   14001f736:	sub    rsp,0x20
   14001f73a:	mov    rbp,rdx
   14001f73d:	mov    rcx,QWORD PTR [rbp+0x50]
   14001f741:	call   0x140001040
   14001f746:	add    rsp,0x20
   14001f74a:	pop    rbp
   14001f74b:	ret    
   14001f74c:	mov    rax,rsp
   14001f74f:	mov    QWORD PTR [rax+0x8],rbx
   14001f753:	mov    QWORD PTR [rax+0x10],rbp
   14001f757:	mov    QWORD PTR [rax+0x18],rsi
   14001f75b:	mov    QWORD PTR [rax+0x20],rdi
   14001f75f:	push   r12
   14001f761:	push   r13
   14001f763:	push   r14
   14001f765:	sub    rsp,0x20
   14001f769:	xor    esi,esi
   14001f76b:	xor    ebx,ebx
   14001f76d:	test   r8,r8
   14001f770:	mov    r12,r9
   14001f773:	mov    rdi,r8
   14001f776:	mov    rbp,rdx
   14001f779:	mov    r14,rcx
   14001f77c:	je     0x14001f7be
   14001f77e:	call   0x140021a70
   14001f783:	mov    r8d,0xf0
   14001f789:	mov    rdx,rdi
   14001f78c:	mov    r13,QWORD PTR [rax+0x18]
   14001f790:	mov    rcx,r13
   14001f793:	call   QWORD PTR [rip+0x44e87]        # 0x140064620
   14001f799:	test   rax,rax
   14001f79c:	je     0x14001f7be
   14001f79e:	mov    rdx,rax
   14001f7a1:	mov    rcx,r13
   14001f7a4:	call   QWORD PTR [rip+0x44e7e]        # 0x140064628
   14001f7aa:	test   rax,rax
   14001f7ad:	mov    rbx,rax
   14001f7b0:	je     0x14001f80b
   14001f7b2:	mov    rcx,rax
   14001f7b5:	call   QWORD PTR [rip+0x44e75]        # 0x140064630
   14001f7bb:	mov    rsi,rax
   14001f7be:	test   rsi,rsi
   14001f7c1:	mov    edi,0x1
   14001f7c6:	je     0x14001f7eb
   14001f7c8:	mov    r10,QWORD PTR [r14]
   14001f7cb:	mov    r9,r12
   14001f7ce:	mov    r8,rsi
   14001f7d1:	mov    rdx,rbp
   14001f7d4:	mov    rcx,r14
   14001f7d7:	call   QWORD PTR [r10+0x40]
   14001f7db:	test   rbx,rbx
   14001f7de:	mov    edi,eax
   14001f7e0:	je     0x14001f7eb
   14001f7e2:	mov    rcx,rbx
   14001f7e5:	call   QWORD PTR [rip+0x44ca5]        # 0x140064490
   14001f7eb:	cmp    QWORD PTR [rbp+0x98],0x0
   14001f7f3:	je     0x14001f809
   14001f7f5:	mov    rcx,QWORD PTR [rbp+0x98]
   14001f7fc:	mov    rdx,r12
   14001f7ff:	mov    r8,QWORD PTR [rcx]
   14001f802:	call   QWORD PTR [r8+0x140]
   14001f809:	mov    eax,edi
   14001f80b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f810:	mov    rbp,QWORD PTR [rsp+0x48]
   14001f815:	mov    rsi,QWORD PTR [rsp+0x50]
   14001f81a:	mov    rdi,QWORD PTR [rsp+0x58]
   14001f81f:	add    rsp,0x20
   14001f823:	pop    r14
   14001f825:	pop    r13
   14001f827:	pop    r12
   14001f829:	ret    
   14001f82a:	int3   
   14001f82b:	int3   
   14001f82c:	rex push rbx
   14001f82e:	sub    rsp,0x30
   14001f832:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f83b:	mov    rbx,rdx
   14001f83e:	mov    ecx,0x180
   14001f843:	call   0x14001ac0c
   14001f848:	mov    rcx,rax
   14001f84b:	mov    QWORD PTR [rsp+0x58],rax
   14001f850:	xor    eax,eax
   14001f852:	cmp    rcx,rax
   14001f855:	je     0x14001f860
   14001f857:	mov    rdx,rbx
   14001f85a:	call   0x14003b1b8
   14001f85f:	nop
   14001f860:	add    rsp,0x30
   14001f864:	pop    rbx
   14001f865:	ret    
   14001f866:	int3   
   14001f867:	int3   
   14001f868:	int3   
   14001f869:	int3   
   14001f86a:	int3   
   14001f86b:	int3   
   14001f86c:	rex push rbp
   14001f86e:	sub    rsp,0x20
   14001f872:	mov    rbp,rdx
   14001f875:	mov    rcx,QWORD PTR [rbp+0x58]
   14001f879:	call   0x140001040
   14001f87e:	add    rsp,0x20
   14001f882:	pop    rbp
   14001f883:	ret    
   14001f884:	mov    QWORD PTR [rsp+0x8],rcx
   14001f889:	push   rbx
   14001f88a:	sub    rsp,0x30
   14001f88e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f897:	mov    rbx,rcx
   14001f89a:	lea    rax,[rip+0x49367]        # 0x140068c08
   14001f8a1:	mov    QWORD PTR [rcx],rax
   14001f8a4:	mov    rcx,QWORD PTR [rcx+0x40]
   14001f8a8:	test   rcx,rcx
   14001f8ab:	je     0x14001f8b7
   14001f8ad:	mov    rax,QWORD PTR [rcx]
   14001f8b0:	mov    edx,0x1
   14001f8b5:	call   QWORD PTR [rax]
   14001f8b7:	lea    rcx,[rbx+0x8]
   14001f8bb:	call   0x14001f63c
   14001f8c0:	nop
   14001f8c1:	lea    rax,[rip+0x49290]        # 0x140068b58
   14001f8c8:	mov    QWORD PTR [rbx+0x8],rax
   14001f8cc:	lea    rcx,[rbx+0x8]
   14001f8d0:	add    rsp,0x30
   14001f8d4:	pop    rbx
   14001f8d5:	jmp    0x14001f63c
   14001f8da:	int3   
   14001f8db:	int3   
   14001f8dc:	int3   
   14001f8dd:	int3   
   14001f8de:	int3   
   14001f8df:	int3   
   14001f8e0:	int3   
   14001f8e1:	int3   
   14001f8e2:	int3   
   14001f8e3:	int3   
   14001f8e4:	rex push rbp
   14001f8e6:	sub    rsp,0x20
   14001f8ea:	mov    rbp,rdx
   14001f8ed:	mov    rcx,QWORD PTR [rbp+0x40]
   14001f8f1:	add    rcx,0x8
   14001f8f5:	call   0x14001f6a8
   14001f8fa:	add    rsp,0x20
   14001f8fe:	pop    rbp
   14001f8ff:	ret    
   14001f900:	mov    QWORD PTR [rsp+0x8],rbx
   14001f905:	mov    QWORD PTR [rsp+0x10],rsi
   14001f90a:	push   rdi
   14001f90b:	sub    rsp,0x20
   14001f90f:	mov    rbx,QWORD PTR [rcx+0x10]
   14001f913:	mov    rdi,r8
   14001f916:	mov    rsi,rdx
   14001f919:	xor    r9d,r9d
   14001f91c:	jmp    0x14001f93e
   14001f91e:	mov    rcx,QWORD PTR [rbx+0x10]
   14001f922:	mov    rbx,QWORD PTR [rbx]
   14001f925:	test   rcx,rcx
   14001f928:	je     0x14001f93e
   14001f92a:	mov    rax,QWORD PTR [rcx]
   14001f92d:	mov    r8,rdi
   14001f930:	mov    rdx,rsi
   14001f933:	call   QWORD PTR [rax+0x8]
   14001f936:	test   rax,rax
   14001f939:	mov    r9,rax
   14001f93c:	jne    0x14001f943
   14001f93e:	test   rbx,rbx
   14001f941:	jne    0x14001f91e
   14001f943:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f948:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f94d:	mov    rax,r9
   14001f950:	add    rsp,0x20
   14001f954:	pop    rdi
   14001f955:	ret    
   14001f956:	int3   
   14001f957:	int3   
   14001f958:	sub    rsp,0x28
   14001f95c:	mov    rcx,QWORD PTR [rdx]
   14001f95f:	test   rcx,rcx
   14001f962:	jne    0x14001f96a
   14001f964:	call   0x1400208f8
   14001f969:	int3   
   14001f96a:	mov    rax,QWORD PTR [rcx]
   14001f96d:	mov    QWORD PTR [rdx],rax
   14001f970:	lea    rax,[rcx+0x10]
   14001f974:	add    rsp,0x28
   14001f978:	ret    
   14001f979:	int3   
   14001f97a:	int3   
   14001f97b:	int3   
   14001f97c:	sub    rsp,0x28
   14001f980:	test   r8,r8
   14001f983:	jne    0x14001f98b
   14001f985:	mov    rax,QWORD PTR [rcx+0x8]
   14001f989:	jmp    0x14001f98e
   14001f98b:	mov    rax,QWORD PTR [r8]
   14001f98e:	test   rax,rax
   14001f991:	je     0x14001f9ac
   14001f993:	lea    rcx,[rax+0x10]
   14001f997:	test   rcx,rcx
   14001f99a:	je     0x14001f9a6
   14001f99c:	cmp    QWORD PTR [rcx],rdx
   14001f99f:	je     0x14001f9ae
   14001f9a1:	mov    rax,QWORD PTR [rax]
   14001f9a4:	jmp    0x14001f98e
   14001f9a6:	call   0x1400208f8
   14001f9ab:	int3   
   14001f9ac:	xor    eax,eax
   14001f9ae:	add    rsp,0x28
   14001f9b2:	ret    
   14001f9b3:	int3   
   14001f9b4:	mov    rax,rsp
   14001f9b7:	mov    QWORD PTR [rax+0x8],rbx
   14001f9bb:	mov    QWORD PTR [rax+0x10],rsi
   14001f9bf:	mov    QWORD PTR [rax+0x18],rdi
   14001f9c3:	mov    QWORD PTR [rax+0x20],r12
   14001f9c7:	push   r13
   14001f9c9:	sub    rsp,0x20
   14001f9cd:	test   r8,r8
   14001f9d0:	mov    rdi,r8
   14001f9d3:	mov    rsi,rdx
   14001f9d6:	mov    r12,rcx
   14001f9d9:	je     0x14001f9e6
   14001f9db:	test   rdx,rdx
   14001f9de:	jne    0x14001f9e6
   14001f9e0:	call   0x1400208f8
   14001f9e5:	int3   
   14001f9e6:	mov    eax,DWORD PTR [rcx+0x20]
   14001f9e9:	not    eax
   14001f9eb:	test   al,0x1
   14001f9ed:	je     0x14001fa38
   14001f9ef:	test   r8,r8
   14001f9f2:	je     0x14001fa1d
   14001f9f4:	mov    ebx,0xfffffff
   14001f9f9:	mov    rdx,rsi
   14001f9fc:	mov    rcx,r12
   14001f9ff:	cmp    rdi,rbx
   14001fa02:	cmovb  ebx,edi
   14001fa05:	mov    r8d,ebx
   14001fa08:	shl    r8d,0x3
   14001fa0c:	call   0x140030cec
   14001fa11:	mov    r11d,ebx
   14001fa14:	lea    rsi,[rsi+rbx*8]
   14001fa18:	sub    rdi,r11
   14001fa1b:	jne    0x14001f9f4
   14001fa1d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fa22:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fa27:	mov    rdi,QWORD PTR [rsp+0x40]
   14001fa2c:	mov    r12,QWORD PTR [rsp+0x48]
   14001fa31:	add    rsp,0x20
   14001fa35:	pop    r13
   14001fa37:	ret    
   14001fa38:	test   r8,r8
   14001fa3b:	je     0x14001fa1d
   14001fa3d:	mov    r13d,0xfffffff
   14001fa43:	mov    rdx,rsi
   14001fa46:	mov    rcx,r12
   14001fa49:	cmp    rdi,r13
   14001fa4c:	cmovb  r13d,edi
   14001fa50:	mov    ebx,r13d
   14001fa53:	shl    ebx,0x3
   14001fa56:	mov    r8d,ebx
   14001fa59:	call   0x140030784
   14001fa5e:	cmp    eax,ebx
   14001fa60:	jne    0x14001fa70
   14001fa62:	mov    eax,r13d
   14001fa65:	lea    rsi,[rsi+r13*8]
   14001fa69:	sub    rdi,rax
   14001fa6c:	jne    0x14001fa3d
   14001fa6e:	jmp    0x14001fa1d
   14001fa70:	xor    edx,edx
   14001fa72:	lea    ecx,[rdx+0x3]
   14001fa75:	call   0x14003067c
   14001fa7a:	int3   
   14001fa7b:	int3   
   14001fa7c:	mov    QWORD PTR [rsp+0x8],rbx
   14001fa81:	mov    QWORD PTR [rsp+0x10],rsi
   14001fa86:	push   rdi
   14001fa87:	sub    rsp,0x20
   14001fa8b:	cmp    QWORD PTR [rcx+0x20],0x0
   14001fa90:	mov    rdi,r8
   14001fa93:	mov    rsi,rdx
   14001fa96:	mov    rbx,rcx
   14001fa99:	jne    0x14001fad6
   14001fa9b:	mov    rdx,QWORD PTR [rbx+0x30]
   14001fa9f:	add    rcx,0x28
   14001faa3:	mov    r8d,0x18
   14001faa9:	call   0x140030328
   14001faae:	mov    rdx,QWORD PTR [rbx+0x30]
   14001fab2:	lea    rcx,[rdx+rdx*2]
   14001fab6:	add    rdx,0xffffffffffffffff
   14001faba:	lea    r8,[rax+rcx*8-0x10]
   14001fabf:	js     0x14001fad6
   14001fac1:	mov    rax,QWORD PTR [rbx+0x20]
   14001fac5:	mov    QWORD PTR [r8],rax
   14001fac8:	mov    QWORD PTR [rbx+0x20],r8
   14001facc:	sub    r8,0x18
   14001fad0:	sub    rdx,0x1
   14001fad4:	jns    0x14001fac1
   14001fad6:	mov    rax,QWORD PTR [rbx+0x20]
   14001fada:	test   rax,rax
   14001fadd:	jne    0x14001fae5
   14001fadf:	call   0x1400208f8
   14001fae4:	int3   
   14001fae5:	mov    rcx,QWORD PTR [rax]
   14001fae8:	mov    QWORD PTR [rbx+0x20],rcx
   14001faec:	mov    QWORD PTR [rax+0x8],rsi
   14001faf0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001faf5:	mov    QWORD PTR [rax],rdi
   14001faf8:	add    QWORD PTR [rbx+0x18],0x1
   14001fafd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fb02:	add    rsp,0x20
   14001fb06:	pop    rdi
   14001fb07:	ret    
   14001fb08:	mov    QWORD PTR [rsp+0x8],rbx
   14001fb0d:	mov    QWORD PTR [rsp+0x10],rbp
   14001fb12:	mov    QWORD PTR [rsp+0x18],rsi
   14001fb17:	push   rdi
   14001fb18:	sub    rsp,0x20
   14001fb1c:	mov    rdi,QWORD PTR [rdx+0x98]
   14001fb23:	mov    rbp,rdx
   14001fb26:	test   rdi,rdi
   14001fb29:	je     0x14001fc56
   14001fb2f:	mov    rdi,QWORD PTR [rdi+0x88]
   14001fb36:	jmp    0x14001fc03
   14001fb3b:	test   rdi,rdi
   14001fb3e:	mov    rsi,rdi
   14001fb41:	je     0x14001fc1c
   14001fb47:	mov    rsi,QWORD PTR [rsi+0x10]
   14001fb4b:	mov    rdi,QWORD PTR [rdi]
   14001fb4e:	mov    rbx,QWORD PTR [rsi+0x8]
   14001fb52:	test   rbx,rbx
   14001fb55:	je     0x14001fc03
   14001fb5b:	mov    rbx,QWORD PTR [rbx+0xe0]
   14001fb62:	test   rbx,rbx
   14001fb65:	je     0x14001fba5
   14001fb67:	mov    rdx,QWORD PTR [rsi+0x8]
   14001fb6b:	mov    rcx,rbx
   14001fb6e:	call   0x140034b18
   14001fb73:	cmp    WORD PTR [rbx+0x8],0x0
   14001fb78:	je     0x14001fb95
   14001fb7a:	movzx  edx,WORD PTR [rbx+0x8]
   14001fb7e:	mov    rcx,rbp
   14001fb81:	call   0x1400298d8
   14001fb86:	mov    rcx,rbx
   14001fb89:	mov    rdx,QWORD PTR [rax+0xa0]
   14001fb90:	call   0x140037e20
   14001fb95:	mov    rcx,rbx
   14001fb98:	call   0x140034b1c
   14001fb9d:	test   rax,rax
   14001fba0:	mov    rbx,rax
   14001fba3:	jne    0x14001fb67
   14001fba5:	mov    rax,QWORD PTR [rsi+0x8]
   14001fba9:	movzx  ecx,WORD PTR [rax+0xe8]
   14001fbb0:	test   cx,cx
   14001fbb3:	je     0x14001fc03
   14001fbb5:	movzx  edx,cx
   14001fbb8:	mov    rcx,rbp
   14001fbbb:	call   0x1400298d8
   14001fbc0:	mov    rbx,rax
   14001fbc3:	mov    rcx,QWORD PTR [rax+0xa0]
   14001fbca:	mov    rdx,QWORD PTR [rcx]
   14001fbcd:	call   QWORD PTR [rdx+0x168]
   14001fbd3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001fbda:	mov    r11,QWORD PTR [rsi+0x8]
   14001fbde:	mov    QWORD PTR [r11+0xe8],rcx
   14001fbe5:	mov    rax,QWORD PTR [rbx+0xa0]
   14001fbec:	mov    rdx,QWORD PTR [rsi+0x8]
   14001fbf0:	mov    rcx,QWORD PTR [rax+0xd8]
   14001fbf7:	mov    r8d,0x1
   14001fbfd:	mov    rax,QWORD PTR [rcx]
   14001fc00:	call   QWORD PTR [rax+0x10]
   14001fc03:	test   rdi,rdi
   14001fc06:	jne    0x14001fb3b
   14001fc0c:	mov    rax,QWORD PTR [rbp+0x98]
   14001fc13:	mov    rbx,QWORD PTR [rax+0x88]
   14001fc1a:	jmp    0x14001fc51
   14001fc1c:	call   0x1400208f8
   14001fc21:	int3   
   14001fc22:	test   rbx,rbx
   14001fc25:	mov    rcx,rbx
   14001fc28:	je     0x14001fc6b
   14001fc2a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fc2e:	mov    rbx,QWORD PTR [rbx]
   14001fc31:	mov    rax,QWORD PTR [rcx+0x8]
   14001fc35:	test   rax,rax
   14001fc38:	je     0x14001fc51
   14001fc3a:	cmp    QWORD PTR [rax+0xd8],0x0
   14001fc42:	je     0x14001fc51
   14001fc44:	mov    rcx,QWORD PTR [rax+0xd8]
   14001fc4b:	mov    rax,QWORD PTR [rcx]
   14001fc4e:	call   QWORD PTR [rax+0x18]
   14001fc51:	test   rbx,rbx
   14001fc54:	jne    0x14001fc22
   14001fc56:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fc5b:	mov    rbp,QWORD PTR [rsp+0x38]
   14001fc60:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fc65:	add    rsp,0x20
   14001fc69:	pop    rdi
   14001fc6a:	ret    
   14001fc6b:	call   0x1400208f8
   14001fc70:	int3   
   14001fc71:	int3   
   14001fc72:	int3   
   14001fc73:	int3   
   14001fc74:	rex push rbx
   14001fc76:	sub    rsp,0x20
   14001fc7a:	test   dl,0x1
   14001fc7d:	lea    rax,[rip+0x48ebc]        # 0x140068b40
   14001fc84:	mov    rbx,rcx
   14001fc87:	mov    QWORD PTR [rcx],rax
   14001fc8a:	je     0x14001fc91
   14001fc8c:	call   0x14001ac50
   14001fc91:	mov    rax,rbx
   14001fc94:	add    rsp,0x20
   14001fc98:	pop    rbx
   14001fc99:	ret    
   14001fc9a:	int3   
   14001fc9b:	int3   
   14001fc9c:	mov    QWORD PTR [rsp+0x8],rbx
   14001fca1:	push   rdi
   14001fca2:	sub    rsp,0x20
   14001fca6:	mov    ebx,edx
   14001fca8:	mov    rdi,rcx
   14001fcab:	call   0x14001f884
   14001fcb0:	test   bl,0x1
   14001fcb3:	je     0x14001fcbd
   14001fcb5:	mov    rcx,rdi
   14001fcb8:	call   0x14002cbc8
   14001fcbd:	mov    rax,rdi
   14001fcc0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fcc5:	add    rsp,0x20
   14001fcc9:	pop    rdi
   14001fcca:	ret    
   14001fccb:	int3   
   14001fccc:	sub    rsp,0x28
   14001fcd0:	mov    ecx,0x8
   14001fcd5:	call   0x14002cba4
   14001fcda:	test   rax,rax
   14001fcdd:	je     0x14001fceb
   14001fcdf:	lea    rcx,[rip+0x48f32]        # 0x140068c18
   14001fce6:	mov    QWORD PTR [rax],rcx
   14001fce9:	jmp    0x14001fced
   14001fceb:	xor    eax,eax
   14001fced:	add    rsp,0x28
   14001fcf1:	ret    
   14001fcf2:	int3   
   14001fcf3:	int3   
   14001fcf4:	rex push rbx
   14001fcf6:	sub    rsp,0x20
   14001fcfa:	test   dl,0x1
   14001fcfd:	mov    rbx,rcx
   14001fd00:	je     0x14001fd07
   14001fd02:	call   0x14002cbc8
   14001fd07:	mov    rax,rbx
   14001fd0a:	add    rsp,0x20
   14001fd0e:	pop    rbx
   14001fd0f:	ret    
   14001fd10:	mov    QWORD PTR [rsp+0x8],rbx
   14001fd15:	push   rdi
   14001fd16:	sub    rsp,0x20
   14001fd1a:	mov    r8,QWORD PTR [rcx+0x8]
   14001fd1e:	mov    rbx,rdx
   14001fd21:	xor    edx,edx
   14001fd23:	mov    rdi,rcx
   14001fd26:	call   0x14001fa7c
   14001fd2b:	mov    QWORD PTR [rax+0x10],rbx
   14001fd2f:	mov    rcx,QWORD PTR [rdi+0x8]
   14001fd33:	test   rcx,rcx
   14001fd36:	je     0x14001fd3e
   14001fd38:	mov    QWORD PTR [rcx+0x8],rax
   14001fd3c:	jmp    0x14001fd42
   14001fd3e:	mov    QWORD PTR [rdi+0x10],rax
   14001fd42:	mov    QWORD PTR [rdi+0x8],rax
   14001fd46:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fd4b:	add    rsp,0x20
   14001fd4f:	pop    rdi
   14001fd50:	ret    
   14001fd51:	int3   
   14001fd52:	int3   
   14001fd53:	int3   
   14001fd54:	mov    QWORD PTR [rsp+0x8],rbx
   14001fd59:	push   rdi
   14001fd5a:	sub    rsp,0x20
   14001fd5e:	mov    rbx,rdx
   14001fd61:	mov    rdx,QWORD PTR [rcx+0x10]
   14001fd65:	xor    r8d,r8d
   14001fd68:	mov    rdi,rcx
   14001fd6b:	call   0x14001fa7c
   14001fd70:	mov    QWORD PTR [rax+0x10],rbx
   14001fd74:	mov    rcx,QWORD PTR [rdi+0x10]
   14001fd78:	test   rcx,rcx
   14001fd7b:	je     0x14001fd82
   14001fd7d:	mov    QWORD PTR [rcx],rax
   14001fd80:	jmp    0x14001fd86
   14001fd82:	mov    QWORD PTR [rdi+0x8],rax
   14001fd86:	mov    QWORD PTR [rdi+0x10],rax
   14001fd8a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fd8f:	add    rsp,0x20
   14001fd93:	pop    rdi
   14001fd94:	ret    
   14001fd95:	int3   
   14001fd96:	int3   
   14001fd97:	int3   
   14001fd98:	mov    QWORD PTR [rsp+0x8],rbx
   14001fd9d:	mov    QWORD PTR [rsp+0x18],rsi
   14001fda2:	push   rdi
   14001fda3:	sub    rsp,0x20
   14001fda7:	mov    eax,DWORD PTR [rdx+0x20]
   14001fdaa:	mov    rdi,rdx
   14001fdad:	mov    rbx,rcx
   14001fdb0:	not    eax
   14001fdb2:	test   al,0x1
   14001fdb4:	je     0x14001fde4
   14001fdb6:	mov    rdx,QWORD PTR [rcx+0x18]
   14001fdba:	mov    rcx,rdi
   14001fdbd:	call   0x140030e68
   14001fdc2:	mov    rbx,QWORD PTR [rbx+0x8]
   14001fdc6:	jmp    0x14001fddd
   14001fdc8:	lea    rdx,[rbx+0x10]
   14001fdcc:	mov    r8d,0x1
   14001fdd2:	mov    rcx,rdi
   14001fdd5:	call   0x14001f9b4
   14001fdda:	mov    rbx,QWORD PTR [rbx]
   14001fddd:	test   rbx,rbx
   14001fde0:	jne    0x14001fdc8
   14001fde2:	jmp    0x14001fe1a
   14001fde4:	mov    rcx,rdx
   14001fde7:	call   0x140030fb8
   14001fdec:	test   rax,rax
   14001fdef:	mov    rsi,rax
   14001fdf2:	je     0x14001fe1a
   14001fdf4:	lea    rdx,[rsp+0x38]
   14001fdf9:	mov    r8d,0x1
   14001fdff:	mov    rcx,rdi
   14001fe02:	call   0x14001f9b4
   14001fe07:	mov    rdx,QWORD PTR [rsp+0x38]
   14001fe0c:	mov    rcx,rbx
   14001fe0f:	call   0x14001fd54
   14001fe14:	sub    rsi,0x1
   14001fe18:	jne    0x14001fdf4
   14001fe1a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fe1f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fe24:	add    rsp,0x20
   14001fe28:	pop    rdi
   14001fe29:	ret    
   14001fe2a:	int3   
   14001fe2b:	int3   
   14001fe2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001fe31:	push   rdi
   14001fe32:	sub    rsp,0x20
   14001fe36:	test   rdx,rdx
   14001fe39:	mov    rbx,rdx
   14001fe3c:	jne    0x14001fe44
   14001fe3e:	call   0x1400208f8
   14001fe43:	int3   
   14001fe44:	lea    rdi,[rcx+0x8]
   14001fe48:	xor    r8d,r8d
   14001fe4b:	mov    rcx,rdi
   14001fe4e:	call   0x14001f97c
   14001fe53:	test   rax,rax
   14001fe56:	jne    0x14001fe63
   14001fe58:	mov    rdx,rbx
   14001fe5b:	mov    rcx,rdi
   14001fe5e:	call   0x14001fd10
   14001fe63:	xor    eax,eax
   14001fe65:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fe6a:	add    rsp,0x20
   14001fe6e:	pop    rdi
   14001fe6f:	ret    
   14001fe70:	rex push rbx
   14001fe72:	sub    rsp,0x20
   14001fe76:	test   rcx,rcx
   14001fe79:	mov    rbx,rcx
   14001fe7c:	jne    0x14001fe9f
   14001fe7e:	lea    rdx,[rip+0xfffffffffffffe47]        # 0x14001fccc
   14001fe85:	lea    rcx,[rip+0x68d3c]        # 0x140088bc8
   14001fe8c:	call   0x14002cc70
   14001fe91:	test   rax,rax
   14001fe94:	mov    rbx,rax
   14001fe97:	jne    0x14001fe9f
   14001fe99:	call   0x1400208f8
   14001fe9e:	int3   
   14001fe9f:	call   0x140021a70
   14001fea4:	mov    QWORD PTR [rax+0x68],rbx
   14001fea8:	add    rsp,0x20
   14001feac:	pop    rbx
   14001fead:	ret    
   14001feae:	int3   
   14001feaf:	int3   
   14001feb0:	mov    QWORD PTR [rsp+0x8],rcx
   14001feb5:	push   rbx
   14001feb6:	sub    rsp,0x30
   14001feba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fec3:	mov    rbx,rcx
   14001fec6:	lea    rax,[rip+0x48d3b]        # 0x140068c08
   14001fecd:	mov    QWORD PTR [rcx],rax
   14001fed0:	lea    rax,[rip+0x48c81]        # 0x140068b58
   14001fed7:	mov    QWORD PTR [rcx+0x8],rax
   14001fedb:	and    QWORD PTR [rcx+0x20],0x0
   14001fee0:	and    QWORD PTR [rcx+0x28],0x0
   14001fee5:	and    QWORD PTR [rcx+0x18],0x0
   14001feea:	and    QWORD PTR [rcx+0x10],0x0
   14001feef:	and    QWORD PTR [rcx+0x30],0x0
   14001fef4:	mov    QWORD PTR [rcx+0x38],0xa
   14001fefc:	mov    ecx,0x8
   14001ff01:	call   0x14001ac0c
   14001ff06:	test   rax,rax
   14001ff09:	je     0x14001ff17
   14001ff0b:	lea    rcx,[rip+0x48c8e]        # 0x140068ba0
   14001ff12:	mov    QWORD PTR [rax],rcx
   14001ff15:	jmp    0x14001ff19
   14001ff17:	xor    eax,eax
   14001ff19:	mov    QWORD PTR [rbx+0x40],rax
   14001ff1d:	mov    rdx,rax
   14001ff20:	mov    rcx,rbx
   14001ff23:	call   0x14001fe2c
   14001ff28:	nop
   14001ff29:	jmp    0x14001ff30
   14001ff2b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ff30:	mov    rax,rbx
   14001ff33:	add    rsp,0x30
   14001ff37:	pop    rbx
   14001ff38:	ret    
   14001ff39:	int3   
   14001ff3a:	int3   
   14001ff3b:	int3   
   14001ff3c:	int3   
   14001ff3d:	int3   
   14001ff3e:	int3   
   14001ff3f:	int3   
   14001ff40:	rex push rbp
   14001ff42:	sub    rsp,0x20
   14001ff46:	mov    rbp,rdx
   14001ff49:	mov    rcx,QWORD PTR [rbp+0x40]
   14001ff4d:	add    rcx,0x8
   14001ff51:	call   0x14001f6a8
   14001ff56:	add    rsp,0x20
   14001ff5a:	pop    rbp
   14001ff5b:	ret    
   14001ff5c:	int3   
   14001ff5d:	int3   
   14001ff5e:	int3   
   14001ff5f:	int3   
   14001ff60:	mov    QWORD PTR [rsp+0x10],rdx
   14001ff65:	push   rbx
   14001ff66:	push   rbp
   14001ff67:	sub    rsp,0x28
   14001ff6b:	mov    rbp,rdx
   14001ff6e:	mov    rbx,QWORD PTR [rbp+0x40]
   14001ff72:	mov    rcx,QWORD PTR [rbx+0x40]
   14001ff76:	test   rcx,rcx
   14001ff79:	je     0x14001ff85
   14001ff7b:	mov    rax,QWORD PTR [rcx]
   14001ff7e:	mov    edx,0x1
   14001ff83:	call   QWORD PTR [rax]
   14001ff85:	and    QWORD PTR [rbx+0x40],0x0
   14001ff8a:	lea    rax,[rip+0xffffffffffffff9a]        # 0x14001ff2b
   14001ff91:	jmp    0x14001ff93
   14001ff93:	add    rsp,0x28
   14001ff97:	pop    rbp
   14001ff98:	pop    rbx
   14001ff99:	ret    
   14001ff9a:	int3   
   14001ff9b:	int3   
   14001ff9c:	sub    rsp,0x38
   14001ffa0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ffa9:	mov    ecx,0x48
   14001ffae:	call   0x14002cba4
   14001ffb3:	mov    rcx,rax
   14001ffb6:	mov    QWORD PTR [rsp+0x40],rax
   14001ffbb:	xor    eax,eax
   14001ffbd:	cmp    rcx,rax
   14001ffc0:	je     0x14001ffc8
   14001ffc2:	call   0x14001feb0
   14001ffc7:	nop
   14001ffc8:	add    rsp,0x38
   14001ffcc:	ret    
   14001ffcd:	int3   
   14001ffce:	int3   
   14001ffcf:	int3   
   14001ffd0:	int3   
   14001ffd1:	int3   
   14001ffd2:	int3   
   14001ffd3:	int3   
   14001ffd4:	int3   
   14001ffd5:	int3   
   14001ffd6:	int3   
   14001ffd7:	int3   
   14001ffd8:	int3   
   14001ffd9:	int3   
   14001ffda:	int3   
   14001ffdb:	int3   
   14001ffdc:	rex push rbp
   14001ffde:	sub    rsp,0x20
   14001ffe2:	mov    rbp,rdx
   14001ffe5:	mov    rcx,QWORD PTR [rbp+0x40]
   14001ffe9:	call   0x14002cbc8
   14001ffee:	add    rsp,0x20
   14001fff2:	pop    rbp
   14001fff3:	ret    
   14001fff4:	mov    r11,rsp
   14001fff7:	push   rbp
   14001fff8:	push   rsi
   14001fff9:	push   rdi
   14001fffa:	push   r12
   14001fffc:	push   r13
   14001fffe:	push   r14
   140020000:	push   r15
   140020002:	sub    rsp,0x150
   140020009:	mov    QWORD PTR [rsp+0xd0],0xfffffffffffffffe
   140020015:	mov    QWORD PTR [r11+0x8],rbx
   140020019:	mov    rax,QWORD PTR [rip+0x66d50]        # 0x140086d70
   140020020:	xor    rax,rsp
   140020023:	mov    QWORD PTR [rsp+0x140],rax
   14002002b:	mov    QWORD PTR [rsp+0xc0],r8
   140020033:	mov    r10,rdx
   140020036:	mov    QWORD PTR [rsp+0xc8],rdx
   14002003e:	mov    rsi,QWORD PTR [rsp+0x1b0]
   140020046:	mov    rdi,QWORD PTR [rsp+0x1c0]
   14002004e:	mov    rax,QWORD PTR [rsp+0x1d0]
   140020056:	mov    QWORD PTR [rsp+0xa8],rax
   14002005e:	lea    r14,[rsi+0x12]
   140020062:	xor    r12d,r12d
   140020065:	cmp    r9d,r12d
   140020068:	je     0x1400200c8
   14002006a:	mov    rcx,rsi
   14002006d:	mov    eax,DWORD PTR [rsi+0x8]
   140020070:	mov    DWORD PTR [rsp+0x90],eax
   140020077:	mov    eax,DWORD PTR [rsi+0x4]
   14002007a:	mov    DWORD PTR [rsp+0x94],eax
   140020081:	movzx  eax,WORD PTR [rsi+0xc]
   140020085:	mov    WORD PTR [rsp+0x98],ax
   14002008d:	movzx  eax,WORD PTR [rsi+0xe]
   140020091:	mov    WORD PTR [rsp+0x9a],ax
   140020099:	movzx  eax,WORD PTR [rsi+0x10]
   14002009d:	mov    WORD PTR [rsp+0x9c],ax
   1400200a5:	movzx  eax,WORD PTR [r14]
   1400200a9:	mov    WORD PTR [rsp+0x9e],ax
   1400200b1:	movzx  eax,WORD PTR [rsi+0x14]
   1400200b5:	mov    WORD PTR [rsp+0xa0],ax
   1400200bd:	lea    rsi,[r11-0xf8]
   1400200c4:	lea    r14,[rcx+0x18]
   1400200c8:	movsx  edx,WORD PTR [rsi+0xa]
   1400200cc:	movsx  r8d,WORD PTR [rsi+0xe]
   1400200d1:	add    r8d,edx
   1400200d4:	movsx  eax,WORD PTR [rsi+0x8]
   1400200d8:	movsx  ecx,WORD PTR [rsi+0xc]
   1400200dc:	add    ecx,eax
   1400200de:	mov    DWORD PTR [rsp+0xb0],eax
   1400200e5:	mov    DWORD PTR [rsp+0xb4],edx
   1400200ec:	mov    DWORD PTR [rsp+0xb8],ecx
   1400200f3:	mov    DWORD PTR [rsp+0xbc],r8d
   1400200fb:	lea    rdx,[rsp+0xb0]
   140020103:	mov    rcx,QWORD PTR [r10+0x40]
   140020107:	call   QWORD PTR [rip+0x44883]        # 0x140064990
   14002010d:	mov    r15,r12
   140020110:	mov    ebp,DWORD PTR [rsp+0x1c8]
   140020117:	cmp    ebp,0x4
   14002011a:	jb     0x140020141
   14002011c:	mov    ebx,DWORD PTR [rdi]
   14002011e:	add    rdi,0x4
   140020122:	add    ebp,0xfffffffc
   140020125:	cmp    ebx,r12d
   140020128:	jbe    0x140020141
   14002012a:	mov    edx,ebx
   14002012c:	mov    rcx,rdi
   14002012f:	call   QWORD PTR [rip+0x44573]        # 0x1400646a8
   140020135:	mov    r15,rax
   140020138:	lea    rdi,[rdi+rbx*2]
   14002013c:	imul   ebx,ebx,0xfffffffe
   14002013f:	add    ebp,ebx
   140020141:	mov    QWORD PTR [rsp+0x70],r12
   140020146:	call   0x14002b874
   14002014b:	mov    r11,rax
   14002014e:	mov    ecx,r12d
   140020151:	cmp    rax,r12
   140020154:	setne  cl
   140020157:	cmp    ecx,r12d
   14002015a:	jne    0x140020167
   14002015c:	mov    ecx,0x80004005
   140020161:	call   0x140001430
   140020166:	int3   
   140020167:	mov    rax,QWORD PTR [rax]
   14002016a:	mov    rcx,r11
   14002016d:	call   QWORD PTR [rax+0x18]
   140020170:	lea    rbx,[rax+0x18]
   140020174:	mov    QWORD PTR [rsp+0x88],rbx
   14002017c:	mov    WORD PTR [rsp+0x60],r12w
   140020182:	mov    DWORD PTR [rsp+0x78],r12d
   140020187:	mov    DWORD PTR [rsp+0x7c],r12d
   14002018c:	movzx  r13d,WORD PTR [rsp+0x1b8]
   140020195:	cmp    r13w,0x37a
   14002019b:	je     0x1400201a9
   14002019d:	cmp    r13w,0x37b
   1400201a3:	jne    0x14002028c
   1400201a9:	mov    eax,DWORD PTR [rdi]
   1400201ab:	mov    DWORD PTR [rsp+0x80],eax
   1400201b2:	lea    r12d,[rax-0xc]
   1400201b6:	add    rdi,0xc
   1400201ba:	test   r12d,r12d
   1400201bd:	je     0x140020284
   1400201c3:	mov    r13,QWORD PTR [rsp+0x70]
   1400201c8:	mov    eax,DWORD PTR [rdi]
   1400201ca:	mov    DWORD PTR [rsp+0x70],eax
   1400201ce:	movzx  ecx,WORD PTR [rdi+0x4]
   1400201d2:	mov    WORD PTR [rsp+0x62],cx
   1400201d7:	add    rdi,0x6
   1400201db:	add    r12d,0xfffffffa
   1400201df:	cmp    eax,0x80010001
   1400201e4:	jne    0x140020231
   1400201e6:	mov    eax,DWORD PTR [rdi]
   1400201e8:	mov    DWORD PTR [rsp+0x78],eax
   1400201ec:	mov    eax,DWORD PTR [rdi+0x4]
   1400201ef:	mov    DWORD PTR [rsp+0x7c],eax
   1400201f3:	add    rdi,0x10
   1400201f7:	mov    rdx,rdi
   1400201fa:	lea    rcx,[rsp+0x88]
   140020202:	call   0x140003930
   140020207:	mov    rbx,QWORD PTR [rsp+0x88]
   14002020f:	mov    edx,DWORD PTR [rbx-0x10]
   140020212:	lea    eax,[rdx+0x1]
   140020215:	movsxd rcx,eax
   140020218:	add    rdi,rcx
   14002021b:	mov    eax,0xffffffef
   140020220:	sub    eax,edx
   140020222:	add    r12d,eax
   140020225:	movzx  eax,WORD PTR [rsp+0x62]
   14002022a:	mov    WORD PTR [rsp+0x60],ax
   14002022f:	jmp    0x140020266
   140020231:	mov    ecx,0x28
   140020236:	call   0x14001ac0c
   14002023b:	mov    QWORD PTR [rsp+0xd8],rax
   140020243:	test   rax,rax
   140020246:	je     0x140020263
   140020248:	movzx  r9d,WORD PTR [rsp+0x62]
   14002024e:	mov    r8d,DWORD PTR [rsp+0x70]
   140020253:	mov    rdx,r13
   140020256:	mov    rcx,rax
   140020259:	call   0x140034af8
   14002025e:	mov    r13,rax
   140020261:	jmp    0x140020266
   140020263:	xor    r13d,r13d
   140020266:	test   r12d,r12d
   140020269:	jne    0x1400201c8
   14002026f:	mov    QWORD PTR [rsp+0x70],r13
   140020274:	mov    r13w,WORD PTR [rsp+0x1b8]
   14002027d:	mov    eax,DWORD PTR [rsp+0x80]
   140020284:	sub    ebp,eax
   140020286:	add    r13w,0xfffc
   14002028c:	cmp    WORD PTR [r14],0x7b
   140020291:	jne    0x1400202a9
   140020293:	lea    rdx,[rsp+0x130]
   14002029b:	mov    rcx,r14
   14002029e:	call   QWORD PTR [rip+0x44984]        # 0x140064c28
   1400202a4:	mov    r12d,eax
   1400202a7:	jmp    0x1400202bd
   1400202a9:	lea    rdx,[rsp+0x130]
   1400202b1:	mov    rcx,r14
   1400202b4:	call   QWORD PTR [rip+0x44976]        # 0x140064c30
   1400202ba:	mov    r12d,eax
   1400202bd:	xor    r9d,r9d
   1400202c0:	mov    r8d,ebp
   1400202c3:	mov    rdx,rdi
   1400202c6:	lea    rcx,[rsp+0xe0]
   1400202ce:	call   0x14003e240
   1400202d3:	nop
   1400202d4:	lea    rdi,[rsp+0xe0]
   1400202dc:	cmp    r13w,0x378
   1400202e2:	mov    r14d,0x0
   1400202e8:	cmove  rdi,r14
   1400202ec:	mov    QWORD PTR [rsp+0x68],r14
   1400202f1:	cmp    r12d,r14d
   1400202f4:	jl     0x14002040f
   1400202fa:	lea    edx,[r14+0x1]
   1400202fe:	mov    rbp,QWORD PTR [rsp+0xc8]
   140020306:	mov    rcx,rbp
   140020309:	call   0x140031978
   14002030e:	cmp    eax,r14d
   140020311:	je     0x14002040f
   140020317:	mov    edx,r14d
   14002031a:	cmp    r13w,0x377
   140020320:	sete   dl
   140020323:	movzx  eax,WORD PTR [rsi+0x10]
   140020327:	lea    rcx,[rsp+0x68]
   14002032c:	mov    QWORD PTR [rsp+0x50],rcx
   140020331:	mov    QWORD PTR [rsp+0x48],r15
   140020336:	mov    DWORD PTR [rsp+0x40],edx
   14002033a:	mov    QWORD PTR [rsp+0x38],rdi
   14002033f:	mov    DWORD PTR [rsp+0x30],eax
   140020343:	lea    rax,[rsp+0xb0]
   14002034b:	mov    QWORD PTR [rsp+0x28],rax
   140020350:	mov    eax,DWORD PTR [rsi]
   140020352:	mov    DWORD PTR [rsp+0x20],eax
   140020356:	xor    r9d,r9d
   140020359:	lea    r8,[rsp+0x130]
   140020361:	xor    edx,edx
   140020363:	mov    rcx,QWORD PTR [rbp+0x98]
   14002036a:	call   0x14003226c
   14002036f:	cmp    eax,r14d
   140020372:	je     0x14002040f
   140020378:	lea    edx,[r14+0x1]
   14002037c:	mov    rcx,QWORD PTR [rsp+0x68]
   140020381:	call   0x140033cbc
   140020386:	mov    DWORD PTR [rsp+0x30],0x13
   14002038e:	mov    DWORD PTR [rsp+0x28],r14d
   140020393:	mov    DWORD PTR [rsp+0x20],r14d
   140020398:	xor    r9d,r9d
   14002039b:	xor    r8d,r8d
   14002039e:	mov    rdx,QWORD PTR [rsp+0xc0]
   1400203a6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400203ab:	mov    rcx,QWORD PTR [rcx+0x48]
   1400203af:	call   QWORD PTR [rip+0x445e3]        # 0x140064998
   1400203b5:	mov    r11,QWORD PTR [rsp+0x68]
   1400203ba:	mov    rax,QWORD PTR [rsp+0x70]
   1400203bf:	mov    QWORD PTR [r11+0xe0],rax
   1400203c6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400203cb:	add    rcx,0xf8
   1400203d2:	lea    rdx,[rsp+0x88]
   1400203da:	call   0x1400040f0
   1400203df:	mov    r11,QWORD PTR [rsp+0x68]
   1400203e4:	mov    ax,WORD PTR [rsp+0x60]
   1400203e9:	mov    WORD PTR [r11+0xe8],ax
   1400203f1:	mov    rax,QWORD PTR [rsp+0x68]
   1400203f6:	mov    ecx,DWORD PTR [rsp+0x78]
   1400203fa:	mov    DWORD PTR [rax+0xf0],ecx
   140020400:	mov    rax,QWORD PTR [rsp+0x68]
   140020405:	mov    ecx,DWORD PTR [rsp+0x7c]
   140020409:	mov    DWORD PTR [rax+0xf4],ecx
   14002040f:	cmp    r15,r14
   140020412:	je     0x14002041d
   140020414:	mov    rcx,r15
   140020417:	call   QWORD PTR [rip+0x44273]        # 0x140064690
   14002041d:	mov    rax,QWORD PTR [rsp+0x68]
   140020422:	cmp    rax,r14
   140020425:	je     0x140020469
   140020427:	mov    rax,QWORD PTR [rax+0x48]
   14002042b:	mov    rcx,QWORD PTR [rsp+0xa8]
   140020433:	mov    QWORD PTR [rcx],rax
   140020436:	lea    rcx,[rsp+0xe0]
   14002043e:	call   0x14003e6f8
   140020443:	nop
   140020444:	lea    rdx,[rbx-0x18]
   140020448:	or     ecx,0xffffffff
   14002044b:	lock xadd DWORD PTR [rdx+0x10],ecx
   140020450:	add    ecx,0xffffffff
   140020453:	cmp    ecx,r14d
   140020456:	jg     0x140020462
   140020458:	mov    rcx,QWORD PTR [rdx]
   14002045b:	mov    r8,QWORD PTR [rcx]
   14002045e:	call   QWORD PTR [r8+0x8]
   140020462:	mov    eax,0x1
   140020467:	jmp    0x1400204a1
   140020469:	mov    rcx,QWORD PTR [rsp+0xa8]
   140020471:	mov    QWORD PTR [rcx],r14
   140020474:	lea    rcx,[rsp+0xe0]
   14002047c:	call   0x14003e6f8
   140020481:	nop
   140020482:	lea    rdx,[rbx-0x18]
   140020486:	or     eax,0xffffffff
   140020489:	lock xadd DWORD PTR [rdx+0x10],eax
   14002048e:	add    eax,0xffffffff
   140020491:	cmp    eax,r14d
   140020494:	jg     0x14002049f
   140020496:	mov    rcx,QWORD PTR [rdx]
   140020499:	mov    rax,QWORD PTR [rcx]
   14002049c:	call   QWORD PTR [rax+0x8]
   14002049f:	xor    eax,eax
   1400204a1:	mov    rcx,QWORD PTR [rsp+0x140]
   1400204a9:	xor    rcx,rsp
   1400204ac:	call   0x140046470
   1400204b1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400204b9:	add    rsp,0x150
   1400204c0:	pop    r15
   1400204c2:	pop    r14
   1400204c4:	pop    r13
   1400204c6:	pop    r12
   1400204c8:	pop    rdi
   1400204c9:	pop    rsi
   1400204ca:	pop    rbp
   1400204cb:	ret    
   1400204cc:	int3   
   1400204cd:	int3   
   1400204ce:	int3   
   1400204cf:	int3   
   1400204d0:	int3   
   1400204d1:	int3   
   1400204d2:	int3   
   1400204d3:	int3   
   1400204d4:	rex push rbp
   1400204d6:	sub    rsp,0x20
   1400204da:	mov    rbp,rdx
   1400204dd:	lea    rcx,[rbp+0x88]
   1400204e4:	call   0x1400010c0
   1400204e9:	add    rsp,0x20
   1400204ed:	pop    rbp
   1400204ee:	ret    
   1400204ef:	int3   
   1400204f0:	int3   
   1400204f1:	int3   
   1400204f2:	int3   
   1400204f3:	int3   
   1400204f4:	rex push rbp
   1400204f6:	sub    rsp,0x20
   1400204fa:	mov    rbp,rdx
   1400204fd:	mov    rcx,QWORD PTR [rbp+0xd8]
   140020504:	call   0x14001ac50
   140020509:	add    rsp,0x20
   14002050d:	pop    rbp
   14002050e:	ret    
   14002050f:	int3   
   140020510:	int3   
   140020511:	int3   
   140020512:	int3   
   140020513:	int3   
   140020514:	rex push rbp
   140020516:	sub    rsp,0x20
   14002051a:	mov    rbp,rdx
   14002051d:	lea    rcx,[rbp+0xe0]
   140020524:	call   0x14003e6f8
   140020529:	add    rsp,0x20
   14002052d:	pop    rbp
   14002052e:	ret    
   14002052f:	int3   
   140020530:	mov    QWORD PTR [rsp+0x8],rbx
   140020535:	mov    QWORD PTR [rsp+0x10],rsi
   14002053a:	push   rdi
   14002053b:	sub    rsp,0x20
   14002053f:	mov    rax,QWORD PTR [rcx]
   140020542:	mov    rdi,r8
   140020545:	mov    rsi,rdx
   140020548:	call   QWORD PTR [rax+0x20]
   14002054b:	test   rax,rax
   14002054e:	mov    rbx,rax
   140020551:	je     0x140020563
   140020553:	mov    rcx,rdi
   140020556:	call   0x140031884
   14002055b:	test   eax,eax
   14002055d:	je     0x14002059d
   14002055f:	xor    eax,eax
   140020561:	jmp    0x1400205a0
   140020563:	lea    rdx,[rip+0xfffffffffffffa32]        # 0x14001ff9c
   14002056a:	lea    rcx,[rip+0x6864f]        # 0x140088bc0
   140020571:	call   0x14002cc70
   140020576:	test   rax,rax
   140020579:	jne    0x140020581
   14002057b:	call   0x1400208f8
   140020580:	int3   
   140020581:	mov    r8,rdi
   140020584:	mov    rdx,rsi
   140020587:	mov    rcx,rax
   14002058a:	call   0x14001f900
   14002058f:	test   rax,rax
   140020592:	mov    rbx,rax
   140020595:	jne    0x14002059d
   140020597:	call   0x1400208f8
   14002059c:	int3   
   14002059d:	mov    rax,rbx
   1400205a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400205a5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400205aa:	add    rsp,0x20
   1400205ae:	pop    rdi
   1400205af:	ret    
   1400205b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400205b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400205ba:	push   rbp
   1400205bb:	push   rsi
   1400205bc:	push   rdi
   1400205bd:	push   r12
   1400205bf:	push   r13
   1400205c1:	push   r14
   1400205c3:	push   r15
   1400205c5:	sub    rsp,0x70
   1400205c9:	mov    rax,QWORD PTR [r9]
   1400205cc:	mov    rbx,r8
   1400205cf:	mov    rsi,rdx
   1400205d2:	test   rax,rax
   1400205d5:	mov    r10,rcx
   1400205d8:	jne    0x1400205e4
   1400205da:	mov    eax,0x1
   1400205df:	jmp    0x14002079f
   1400205e4:	test   rdx,rdx
   1400205e7:	jne    0x1400205ee
   1400205e9:	xor    r15d,r15d
   1400205ec:	jmp    0x1400205f2
   1400205ee:	mov    r15,QWORD PTR [rdx+0x40]
   1400205f2:	xor    ecx,ecx
   1400205f4:	cmp    WORD PTR [rax+0x2],0xffff
   1400205fa:	mov    r12d,0x1
   140020600:	sete   cl
   140020603:	test   rbx,rbx
   140020606:	mov    DWORD PTR [rsp+0xc8],ecx
   14002060d:	je     0x140020779
   140020613:	mov    rax,QWORD PTR [r9+0x8]
   140020617:	xor    r14d,r14d
   14002061a:	xor    r13d,r13d
   14002061d:	mov    QWORD PTR [rsp+0x60],rax
   140020622:	cmp    WORD PTR [rbx],0x0
   140020626:	je     0x140020774
   14002062c:	movzx  ebp,WORD PTR [rbx+0x2]
   140020630:	mov    edx,DWORD PTR [rbx+0x4]
   140020633:	add    rbx,0x8
   140020637:	cmp    bp,0x376
   14002063c:	mov    DWORD PTR [rsp+0x50],edx
   140020640:	je     0x140020662
   140020642:	cmp    bp,0x37a
   140020647:	je     0x140020662
   140020649:	cmp    bp,0x377
   14002064e:	je     0x140020662
   140020650:	cmp    bp,0x37b
   140020655:	je     0x140020662
   140020657:	cmp    bp,0x378
   14002065c:	jne    0x14002075f
   140020662:	mov    rdi,QWORD PTR [rax+r13*8]
   140020666:	test   rdi,rdi
   140020669:	jne    0x1400206b5
   14002066b:	add    r13,0x1
   14002066f:	cmp    rdi,0xffffffffffffffff
   140020673:	je     0x1400206bb
   140020675:	test   r14,r14
   140020678:	jne    0x140020683
   14002067a:	lea    edx,[r14+0x5]
   14002067e:	mov    rcx,r15
   140020681:	jmp    0x14002068b
   140020683:	mov    edx,0x2
   140020688:	mov    rcx,r14
   14002068b:	call   QWORD PTR [rip+0x442ef]        # 0x140064980
   140020691:	mov    r14,rax
   140020694:	mov    rax,QWORD PTR [rsp+0x60]
   140020699:	mov    rdi,QWORD PTR [rax+r13*8]
   14002069d:	test   rdi,rdi
   1400206a0:	je     0x14002066b
   1400206a2:	mov    ecx,DWORD PTR [rsp+0xc8]
   1400206a9:	mov    r10,QWORD PTR [rsp+0xb0]
   1400206b1:	mov    edx,DWORD PTR [rsp+0x50]
   1400206b5:	add    r13,0x1
   1400206b9:	jmp    0x1400206ce
   1400206bb:	mov    ecx,DWORD PTR [rsp+0xc8]
   1400206c2:	mov    r10,QWORD PTR [rsp+0xb0]
   1400206ca:	mov    edx,DWORD PTR [rsp+0x50]
   1400206ce:	and    QWORD PTR [rsp+0x58],0x0
   1400206d4:	cmp    rdi,0xffffffffffffffff
   1400206d8:	je     0x14002074d
   1400206da:	lea    rax,[rsp+0x58]
   1400206df:	mov    r9d,ecx
   1400206e2:	mov    r8,r14
   1400206e5:	mov    QWORD PTR [rsp+0x40],rax
   1400206ea:	mov    DWORD PTR [rsp+0x38],edx
   1400206ee:	mov    QWORD PTR [rsp+0x30],rbx
   1400206f3:	mov    rdx,rsi
   1400206f6:	mov    rcx,r10
   1400206f9:	mov    WORD PTR [rsp+0x28],bp
   1400206fe:	mov    QWORD PTR [rsp+0x20],rdi
   140020703:	call   0x14001fff4
   140020708:	test   eax,eax
   14002070a:	je     0x14002074d
   14002070c:	mov    rbp,QWORD PTR [rsp+0x58]
   140020711:	test   rbp,rbp
   140020714:	je     0x140020750
   140020716:	cmp    DWORD PTR [rsp+0xc8],0x0
   14002071e:	je     0x14002072b
   140020720:	mov    edx,DWORD PTR [rdi]
   140020722:	mov    rcx,rbp
   140020725:	call   QWORD PTR [rip+0x4425d]        # 0x140064988
   14002072b:	mov    rcx,rbp
   14002072e:	call   QWORD PTR [rip+0x443ac]        # 0x140064ae0
   140020734:	mov    ecx,DWORD PTR [rsp+0xc8]
   14002073b:	mov    r10,QWORD PTR [rsp+0xb0]
   140020743:	cmp    rax,r15
   140020746:	jne    0x14002075f
   140020748:	mov    r14,rbp
   14002074b:	jmp    0x14002075f
   14002074d:	xor    r12d,r12d
   140020750:	mov    r10,QWORD PTR [rsp+0xb0]
   140020758:	mov    ecx,DWORD PTR [rsp+0xc8]
   14002075f:	mov    eax,DWORD PTR [rsp+0x50]
   140020763:	add    rbx,rax
   140020766:	test   r12d,r12d
   140020769:	mov    rax,QWORD PTR [rsp+0x60]
   14002076e:	jne    0x140020622
   140020774:	test   r12d,r12d
   140020777:	je     0x14002079c
   140020779:	mov    rcx,QWORD PTR [rsi+0x98]
   140020780:	test   rcx,rcx
   140020783:	je     0x14002078c
   140020785:	xor    edx,edx
   140020787:	call   0x1400323b8
   14002078c:	mov    rcx,QWORD PTR [rsp+0xb0]
   140020794:	mov    rdx,rsi
   140020797:	call   0x14001fb08
   14002079c:	mov    eax,r12d
   14002079f:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400207a7:	add    rsp,0x70
   1400207ab:	pop    r15
   1400207ad:	pop    r14
   1400207af:	pop    r13
   1400207b1:	pop    r12
   1400207b3:	pop    rdi
   1400207b4:	pop    rsi
   1400207b5:	pop    rbp
   1400207b6:	ret    
   1400207b7:	int3   
   1400207b8:	sub    rsp,0x28
   1400207bc:	cmp    DWORD PTR [rcx+0x8],0x0
   1400207c0:	jle    0x1400207cd
   1400207c2:	mov    rax,QWORD PTR [rcx]
   1400207c5:	mov    edx,0x1
   1400207ca:	call   QWORD PTR [rax+0x8]
   1400207cd:	add    rsp,0x28
   1400207d1:	ret    
   1400207d2:	int3   
   1400207d3:	int3   
   1400207d4:	mov    rax,QWORD PTR [rcx]
   1400207d7:	rex.W jmp QWORD PTR [rax+0x20]
   1400207db:	int3   
   1400207dc:	mov    QWORD PTR [rsp+0x20],rbx
   1400207e1:	push   rdi
   1400207e2:	sub    rsp,0x440
   1400207e9:	mov    rax,QWORD PTR [rip+0x66580]        # 0x140086d70
   1400207f0:	xor    rax,rsp
   1400207f3:	mov    QWORD PTR [rsp+0x430],rax
   1400207fb:	mov    rax,QWORD PTR [rcx]
   1400207fe:	mov    edi,edx
   140020800:	mov    ebx,r8d
   140020803:	lea    r9,[rsp+0x20]
   140020808:	lea    rdx,[rsp+0x30]
   14002080d:	mov    r8d,0x200
   140020813:	call   QWORD PTR [rax+0x18]
   140020816:	mov    r8d,DWORD PTR [rsp+0x20]
   14002081b:	mov    edx,edi
   14002081d:	test   eax,eax
   14002081f:	je     0x14002082d
   140020821:	lea    rcx,[rsp+0x30]
   140020826:	call   0x14001dd9c
   14002082b:	jmp    0x14002083e
   14002082d:	mov    eax,0xf020
   140020832:	test   ebx,ebx
   140020834:	cmove  ebx,eax
   140020837:	mov    ecx,ebx
   140020839:	call   0x14001ddf4
   14002083e:	mov    rcx,QWORD PTR [rsp+0x430]
   140020846:	xor    rcx,rsp
   140020849:	call   0x140046470
   14002084e:	mov    rbx,QWORD PTR [rsp+0x468]
   140020856:	add    rsp,0x440
   14002085d:	pop    rdi
   14002085e:	ret    
   14002085f:	int3   
   140020860:	lea    rax,[rip+0x48509]        # 0x140068d70
   140020867:	ret    
   140020868:	lea    rax,[rip+0x48531]        # 0x140068da0
   14002086f:	ret    
   140020870:	lea    rax,[rip+0x48559]        # 0x140068dd0
   140020877:	ret    
   140020878:	rex push rbx
   14002087a:	sub    rsp,0x20
   14002087e:	mov    rbx,rcx
   140020881:	mov    DWORD PTR [rcx+0x14],0x1
   140020888:	lea    rdx,[rcx+0x1c]
   14002088c:	mov    ecx,DWORD PTR [rcx+0x11c]
   140020892:	mov    r8d,0x80
   140020898:	call   0x14002b77c
   14002089d:	xor    edx,edx
   14002089f:	cmp    eax,edx
   1400208a1:	setne  dl
   1400208a4:	mov    DWORD PTR [rbx+0x18],edx
   1400208a7:	add    rsp,0x20
   1400208ab:	pop    rbx
   1400208ac:	ret    
   1400208ad:	int3   
   1400208ae:	int3   
   1400208af:	int3   
   1400208b0:	sub    rsp,0x28
   1400208b4:	lea    rax,[rip+0x64d35]        # 0x1400855f0
   1400208bb:	lea    rdx,[rip+0x6153e]        # 0x140081e00
   1400208c2:	lea    rcx,[rsp+0x30]
   1400208c7:	mov    QWORD PTR [rsp+0x30],rax
   1400208cc:	call   0x140048db0
   1400208d1:	int3   
   1400208d2:	int3   
   1400208d3:	int3   
   1400208d4:	sub    rsp,0x28
   1400208d8:	lea    rax,[rip+0x64e31]        # 0x140085710
   1400208df:	lea    rdx,[rip+0x61632]        # 0x140081f18
   1400208e6:	lea    rcx,[rsp+0x30]
   1400208eb:	mov    QWORD PTR [rsp+0x30],rax
   1400208f0:	call   0x140048db0
   1400208f5:	int3   
   1400208f6:	int3   
   1400208f7:	int3   
   1400208f8:	sub    rsp,0x28
   1400208fc:	lea    rax,[rip+0x64f2d]        # 0x140085830
   140020903:	lea    rdx,[rip+0x61686]        # 0x140081f90
   14002090a:	lea    rcx,[rsp+0x30]
   14002090f:	mov    QWORD PTR [rsp+0x30],rax
   140020914:	call   0x140048db0
   140020919:	int3   
   14002091a:	int3   
   14002091b:	int3   
   14002091c:	mov    DWORD PTR [rcx+0x8],0x1
   140020923:	mov    rax,rcx
   140020926:	ret    
   140020927:	int3   
   140020928:	mov    DWORD PTR [rcx+0x8],edx
   14002092b:	mov    rax,rcx
   14002092e:	ret    
   14002092f:	int3   
   140020930:	mov    QWORD PTR [rsp+0x8],rbx
   140020935:	mov    QWORD PTR [rsp+0x10],rsi
   14002093a:	push   rdi
   14002093b:	sub    rsp,0x20
   14002093f:	test   rdx,rdx
   140020942:	mov    esi,r8d
   140020945:	mov    rdi,rdx
   140020948:	mov    rbx,rcx
   14002094b:	je     0x1400209b2
   14002094d:	test   r8d,r8d
   140020950:	je     0x1400209b2
   140020952:	test   r9,r9
   140020955:	je     0x14002095b
   140020957:	and    DWORD PTR [r9],0x0
   14002095b:	cmp    DWORD PTR [rcx+0x14],0x0
   14002095f:	jne    0x140020966
   140020961:	call   0x140020878
   140020966:	cmp    DWORD PTR [rbx+0x18],0x0
   14002096a:	je     0x1400209a9
   14002096c:	lea    r8,[rbx+0x1c]
   140020970:	mov    rdx,rsi
   140020973:	or     r9,0xffffffffffffffff
   140020977:	mov    rcx,rdi
   14002097a:	call   0x140047200
   14002097f:	test   eax,eax
   140020981:	je     0x1400209ad
   140020983:	cmp    eax,0xc
   140020986:	je     0x1400209a3
   140020988:	cmp    eax,0x16
   14002098b:	je     0x14002099d
   14002098d:	cmp    eax,0x22
   140020990:	je     0x14002099d
   140020992:	cmp    eax,0x50
   140020995:	je     0x1400209ad
   140020997:	call   0x1400208f8
   14002099c:	int3   
   14002099d:	call   0x1400208f8
   1400209a2:	int3   
   1400209a3:	call   0x1400208b0
   1400209a8:	int3   
   1400209a9:	and    WORD PTR [rdi],0x0
   1400209ad:	mov    eax,DWORD PTR [rbx+0x18]
   1400209b0:	jmp    0x1400209b4
   1400209b2:	xor    eax,eax
   1400209b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400209b9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400209be:	add    rsp,0x20
   1400209c2:	pop    rdi
   1400209c3:	ret    
   1400209c4:	rex push rbx
   1400209c6:	sub    rsp,0x20
   1400209ca:	test   dl,0x1
   1400209cd:	lea    rax,[rip+0x48434]        # 0x140068e08
   1400209d4:	mov    rbx,rcx
   1400209d7:	mov    QWORD PTR [rcx],rax
   1400209da:	je     0x1400209e1
   1400209dc:	call   0x14001ac50
   1400209e1:	mov    rax,rbx
   1400209e4:	add    rsp,0x20
   1400209e8:	pop    rbx
   1400209e9:	ret    
   1400209ea:	int3   
   1400209eb:	int3   
   1400209ec:	rex push rbx
   1400209ee:	sub    rsp,0x20
   1400209f2:	test   dl,0x1
   1400209f5:	lea    rax,[rip+0x48444]        # 0x140068e40
   1400209fc:	mov    rbx,rcx
   1400209ff:	mov    QWORD PTR [rcx],rax
   140020a02:	je     0x140020a09
   140020a04:	call   0x14001ac50
   140020a09:	mov    rax,rbx
   140020a0c:	add    rsp,0x20
   140020a10:	pop    rbx
   140020a11:	ret    
   140020a12:	int3   
   140020a13:	int3   
   140020a14:	rex push rbx
   140020a16:	sub    rsp,0x20
   140020a1a:	test   dl,0x1
   140020a1d:	lea    rax,[rip+0x48454]        # 0x140068e78
   140020a24:	mov    rbx,rcx
   140020a27:	mov    QWORD PTR [rcx],rax
   140020a2a:	je     0x140020a31
   140020a2c:	call   0x14001ac50
   140020a31:	mov    rax,rbx
   140020a34:	add    rsp,0x20
   140020a38:	pop    rbx
   140020a39:	ret    
   140020a3a:	int3   
   140020a3b:	int3   
   140020a3c:	lea    rax,[rip+0x48475]        # 0x140068eb8
   140020a43:	ret    
   140020a44:	rex push rdi
   140020a46:	sub    rsp,0x30
   140020a4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020a53:	mov    QWORD PTR [rsp+0x40],rbx
   140020a58:	mov    edi,ecx
   140020a5a:	mov    ecx,0x18
   140020a5f:	call   0x14001ac0c
   140020a64:	mov    rbx,rax
   140020a67:	mov    QWORD PTR [rsp+0x48],rax
   140020a6c:	test   rax,rax
   140020a6f:	je     0x140020a89
   140020a71:	mov    rcx,rax
   140020a74:	call   0x14002091c
   140020a79:	lea    r11,[rip+0x48470]        # 0x140068ef0
   140020a80:	mov    QWORD PTR [rbx],r11
   140020a83:	and    DWORD PTR [rbx+0x10],0x0
   140020a87:	jmp    0x140020a8b
   140020a89:	xor    ebx,ebx
   140020a8b:	mov    DWORD PTR [rbx+0x10],edi
   140020a8e:	mov    QWORD PTR [rsp+0x48],rbx
   140020a93:	lea    rdx,[rip+0x6156e]        # 0x140082008
   140020a9a:	lea    rcx,[rsp+0x48]
   140020a9f:	call   0x140048db0
   140020aa4:	int3   
   140020aa5:	int3   
   140020aa6:	int3   
   140020aa7:	int3   
   140020aa8:	int3   
   140020aa9:	int3   
   140020aaa:	int3   
   140020aab:	int3   
   140020aac:	int3   
   140020aad:	int3   
   140020aae:	int3   
   140020aaf:	int3   
   140020ab0:	int3   
   140020ab1:	int3   
   140020ab2:	int3   
   140020ab3:	int3   
   140020ab4:	rex push rbp
   140020ab6:	sub    rsp,0x20
   140020aba:	mov    rbp,rdx
   140020abd:	mov    rcx,QWORD PTR [rbp+0x48]
   140020ac1:	call   0x140001040
   140020ac6:	add    rsp,0x20
   140020aca:	pop    rbp
   140020acb:	ret    
   140020acc:	mov    QWORD PTR [rsp+0x10],rbx
   140020ad1:	push   rdi
   140020ad2:	sub    rsp,0x40
   140020ad6:	test   r9,r9
   140020ad9:	mov    edi,r8d
   140020adc:	mov    rbx,rdx
   140020adf:	je     0x140020ae5
   140020ae1:	and    DWORD PTR [r9],0x0
   140020ae5:	mov    r8d,DWORD PTR [rcx+0x10]
   140020ae9:	and    QWORD PTR [rsp+0x30],0x0
   140020aef:	and    DWORD PTR [rsp+0x28],0x0
   140020af4:	lea    rax,[rsp+0x50]
   140020af9:	mov    r9d,0x800
   140020aff:	xor    edx,edx
   140020b01:	mov    ecx,0x1100
   140020b06:	mov    QWORD PTR [rsp+0x20],rax
   140020b0b:	call   QWORD PTR [rip+0x43af7]        # 0x140064608
   140020b11:	test   eax,eax
   140020b13:	jne    0x140020b1a
   140020b15:	and    WORD PTR [rbx],ax
   140020b18:	jmp    0x140020b68
   140020b1a:	mov    r8,QWORD PTR [rsp+0x50]
   140020b1f:	mov    rdx,rdi
   140020b22:	or     r9,0xffffffffffffffff
   140020b26:	mov    rcx,rbx
   140020b29:	call   0x140047200
   140020b2e:	test   eax,eax
   140020b30:	je     0x140020b58
   140020b32:	cmp    eax,0xc
   140020b35:	je     0x140020b52
   140020b37:	cmp    eax,0x16
   140020b3a:	je     0x140020b4c
   140020b3c:	cmp    eax,0x22
   140020b3f:	je     0x140020b4c
   140020b41:	cmp    eax,0x50
   140020b44:	je     0x140020b58
   140020b46:	call   0x1400208f8
   140020b4b:	int3   
   140020b4c:	call   0x1400208f8
   140020b51:	int3   
   140020b52:	call   0x1400208b0
   140020b57:	int3   
   140020b58:	mov    rcx,QWORD PTR [rsp+0x50]
   140020b5d:	call   QWORD PTR [rip+0x43aad]        # 0x140064610
   140020b63:	mov    eax,0x1
   140020b68:	mov    rbx,QWORD PTR [rsp+0x58]
   140020b6d:	add    rsp,0x40
   140020b71:	pop    rdi
   140020b72:	ret    
   140020b73:	int3   
   140020b74:	rex push rbx
   140020b76:	sub    rsp,0x20
   140020b7a:	test   dl,0x1
   140020b7d:	lea    rax,[rip+0x4836c]        # 0x140068ef0
   140020b84:	mov    rbx,rcx
   140020b87:	mov    QWORD PTR [rcx],rax
   140020b8a:	je     0x140020b91
   140020b8c:	call   0x14001ac50
   140020b91:	mov    rax,rbx
   140020b94:	add    rsp,0x20
   140020b98:	pop    rbx
   140020b99:	ret    
   140020b9a:	int3   
   140020b9b:	int3   
   140020b9c:	mov    QWORD PTR [rsp+0x8],rbx
   140020ba1:	mov    QWORD PTR [rsp+0x10],rbp
   140020ba6:	mov    QWORD PTR [rsp+0x18],rsi
   140020bab:	push   rdi
   140020bac:	sub    rsp,0x20
   140020bb0:	mov    rax,QWORD PTR [rcx]
   140020bb3:	mov    r8d,0x1
   140020bb9:	movzx  ebp,dx
   140020bbc:	mov    esi,DWORD PTR [rax-0x10]
   140020bbf:	sub    r8d,DWORD PTR [rax-0x8]
   140020bc3:	mov    eax,DWORD PTR [rax-0xc]
   140020bc6:	lea    ebx,[rsi+0x1]
   140020bc9:	mov    rdi,rcx
   140020bcc:	sub    eax,ebx
   140020bce:	or     r8d,eax
   140020bd1:	jge    0x140020bda
   140020bd3:	mov    edx,ebx
   140020bd5:	call   0x140002d40
   140020bda:	test   ebx,ebx
   140020bdc:	mov    rax,QWORD PTR [rdi]
   140020bdf:	mov    WORD PTR [rax+rsi*2],bp
   140020be3:	js     0x140020c10
   140020be5:	mov    rax,QWORD PTR [rdi]
   140020be8:	cmp    ebx,DWORD PTR [rax-0xc]
   140020beb:	jg     0x140020c10
   140020bed:	mov    rbp,QWORD PTR [rsp+0x38]
   140020bf2:	mov    rsi,QWORD PTR [rsp+0x40]
   140020bf7:	mov    DWORD PTR [rax-0x10],ebx
   140020bfa:	mov    rax,QWORD PTR [rdi]
   140020bfd:	movsxd rcx,ebx
   140020c00:	mov    rbx,QWORD PTR [rsp+0x30]
   140020c05:	and    WORD PTR [rax+rcx*2],0x0
   140020c0a:	add    rsp,0x20
   140020c0e:	pop    rdi
   140020c0f:	ret    
   140020c10:	mov    ecx,0x80070057
   140020c15:	call   0x140001430
   140020c1a:	int3   
   140020c1b:	int3   
   140020c1c:	jmp    0x14002d488
   140020c21:	int3   
   140020c22:	int3   
   140020c23:	int3   
   140020c24:	sub    rsp,0x28
   140020c28:	cmp    QWORD PTR [rip+0x67fc0],0x0        # 0x140088bf0
   140020c30:	jne    0x140020cbd
   140020c36:	lea    rcx,[rip+0x46e8b]        # 0x140067ac8
   140020c3d:	call   QWORD PTR [rip+0x4394d]        # 0x140064590
   140020c43:	test   rax,rax
   140020c46:	mov    QWORD PTR [rip+0x67fa3],rax        # 0x140088bf0
   140020c4d:	jne    0x140020c55
   140020c4f:	call   0x1400208f8
   140020c54:	int3   
   140020c55:	lea    rdx,[rip+0x46e5c]        # 0x140067ab8
   140020c5c:	mov    rcx,rax
   140020c5f:	call   QWORD PTR [rip+0x43983]        # 0x1400645e8
   140020c65:	mov    rcx,QWORD PTR [rip+0x67f84]        # 0x140088bf0
   140020c6c:	lea    rdx,[rip+0x46e35]        # 0x140067aa8
   140020c73:	mov    QWORD PTR [rip+0x67f56],rax        # 0x140088bd0
   140020c7a:	call   QWORD PTR [rip+0x43968]        # 0x1400645e8
   140020c80:	mov    rcx,QWORD PTR [rip+0x67f69]        # 0x140088bf0
   140020c87:	lea    rdx,[rip+0x46e0a]        # 0x140067a98
   140020c8e:	mov    QWORD PTR [rip+0x67f43],rax        # 0x140088bd8
   140020c95:	call   QWORD PTR [rip+0x4394d]        # 0x1400645e8
   140020c9b:	mov    rcx,QWORD PTR [rip+0x67f4e]        # 0x140088bf0
   140020ca2:	lea    rdx,[rip+0x46dd7]        # 0x140067a80
   140020ca9:	mov    QWORD PTR [rip+0x67f30],rax        # 0x140088be0
   140020cb0:	call   QWORD PTR [rip+0x43932]        # 0x1400645e8
   140020cb6:	mov    QWORD PTR [rip+0x67f2b],rax        # 0x140088be8
   140020cbd:	add    rsp,0x28
   140020cc1:	ret    
   140020cc2:	int3   
   140020cc3:	int3   
   140020cc4:	sub    rsp,0x28
   140020cc8:	mov    r8,QWORD PTR [rip+0x67f19]        # 0x140088be8
   140020ccf:	xor    eax,eax
   140020cd1:	cmp    r8,rax
   140020cd4:	je     0x140020cd9
   140020cd6:	call   r8
   140020cd9:	add    rsp,0x28
   140020cdd:	ret    
   140020cde:	int3   
   140020cdf:	int3   
   140020ce0:	rex push rbx
   140020ce2:	sub    rsp,0x20
   140020ce6:	xor    ebx,ebx
   140020ce8:	cmp    rdx,rbx
   140020ceb:	jne    0x140020cf3
   140020ced:	call   0x1400208f8
   140020cf2:	int3   
   140020cf3:	mov    rax,QWORD PTR [rip+0x67ee6]        # 0x140088be0
   140020cfa:	cmp    rax,rbx
   140020cfd:	je     0x140020d08
   140020cff:	call   rax
   140020d01:	cmp    eax,ebx
   140020d03:	setne  bl
   140020d06:	jmp    0x140020d0d
   140020d08:	mov    ebx,0x2
   140020d0d:	mov    eax,ebx
   140020d0f:	add    rsp,0x20
   140020d13:	pop    rbx
   140020d14:	ret    
   140020d15:	int3   
   140020d16:	int3   
   140020d17:	int3   
   140020d18:	mov    QWORD PTR [rsp+0x10],rbx
   140020d1d:	push   rdi
   140020d1e:	sub    rsp,0x280
   140020d25:	mov    rax,QWORD PTR [rip+0x66044]        # 0x140086d70
   140020d2c:	xor    rax,rsp
   140020d2f:	mov    QWORD PTR [rsp+0x270],rax
   140020d37:	mov    rbx,rcx
   140020d3a:	call   0x140020c24
   140020d3f:	mov    rdi,QWORD PTR [rbx+0x10]
   140020d43:	and    WORD PTR [rsp+0x26a],0x0
   140020d4c:	and    WORD PTR [rsp+0x268],0x0
   140020d55:	lea    rdx,[rsp+0x60]
   140020d5a:	mov    rcx,rdi
   140020d5d:	mov    r8d,0x105
   140020d63:	call   QWORD PTR [rip+0x437e7]        # 0x140064550
   140020d69:	test   eax,eax
   140020d6b:	je     0x140020e42
   140020d71:	cmp    WORD PTR [rsp+0x268],0x0
   140020d7a:	je     0x140020d8c
   140020d7c:	mov    ecx,0x6f
   140020d81:	call   QWORD PTR [rip+0x43719]        # 0x1400644a0
   140020d87:	jmp    0x140020e42
   140020d8c:	lea    rax,[rsp+0x60]
   140020d91:	mov    QWORD PTR [rsp+0x50],rdi
   140020d96:	or     rdi,0xffffffffffffffff
   140020d9a:	mov    QWORD PTR [rsp+0x28],rax
   140020d9f:	mov    rax,QWORD PTR [rip+0x67e2a]        # 0x140088bd0
   140020da6:	mov    DWORD PTR [rsp+0x20],0x38
   140020dae:	test   rax,rax
   140020db1:	mov    DWORD PTR [rsp+0x24],0x88
   140020db9:	mov    QWORD PTR [rsp+0x40],0x2
   140020dc2:	je     0x140020dcd
   140020dc4:	lea    rcx,[rsp+0x20]
   140020dc9:	call   rax
   140020dcb:	jmp    0x140020dd0
   140020dcd:	mov    rax,rdi
   140020dd0:	cmp    rax,rdi
   140020dd3:	mov    QWORD PTR [rbx+0xd8],rax
   140020dda:	jne    0x140020e04
   140020ddc:	mov    rax,QWORD PTR [rip+0x67ded]        # 0x140088bd0
   140020de3:	mov    QWORD PTR [rsp+0x40],0x3
   140020dec:	test   rax,rax
   140020def:	je     0x140020dfa
   140020df1:	lea    rcx,[rsp+0x20]
   140020df6:	call   rax
   140020df8:	jmp    0x140020dfd
   140020dfa:	mov    rax,rdi
   140020dfd:	mov    QWORD PTR [rbx+0xd8],rax
   140020e04:	cmp    QWORD PTR [rbx+0xd8],rdi
   140020e0b:	jne    0x140020e42
   140020e0d:	mov    rax,QWORD PTR [rip+0x67dbc]        # 0x140088bd0
   140020e14:	mov    QWORD PTR [rsp+0x40],0x1
   140020e1d:	test   rax,rax
   140020e20:	je     0x140020e2b
   140020e22:	lea    rcx,[rsp+0x20]
   140020e27:	call   rax
   140020e29:	jmp    0x140020e2e
   140020e2b:	mov    rax,rdi
   140020e2e:	cmp    rax,rdi
   140020e31:	mov    QWORD PTR [rbx+0xd8],rax
   140020e38:	jne    0x140020e42
   140020e3a:	and    QWORD PTR [rbx+0xd8],0x0
   140020e42:	mov    rcx,QWORD PTR [rsp+0x270]
   140020e4a:	xor    rcx,rsp
   140020e4d:	call   0x140046470
   140020e52:	mov    rbx,QWORD PTR [rsp+0x298]
   140020e5a:	add    rsp,0x280
   140020e61:	pop    rdi
   140020e62:	ret    
   140020e63:	int3   
   140020e64:	rex push rbx
   140020e66:	sub    rsp,0x20
   140020e6a:	mov    rbx,rcx
   140020e6d:	lock add DWORD PTR [rcx+0x30],0xffffffff
   140020e72:	jne    0x140020e9c
   140020e74:	mov    rcx,QWORD PTR [rcx+0x28]
   140020e78:	test   rcx,rcx
   140020e7b:	je     0x140020e88
   140020e7d:	mov    rax,QWORD PTR [rcx]
   140020e80:	call   QWORD PTR [rax+0x10]
   140020e83:	and    QWORD PTR [rbx+0x28],0x0
   140020e88:	mov    rcx,QWORD PTR [rbx+0x10]
   140020e8c:	test   rcx,rcx
   140020e8f:	je     0x140020e9c
   140020e91:	mov    rax,QWORD PTR [rcx]
   140020e94:	call   QWORD PTR [rax+0x10]
   140020e97:	and    QWORD PTR [rbx+0x10],0x0
   140020e9c:	add    rsp,0x20
   140020ea0:	pop    rbx
   140020ea1:	ret    
   140020ea2:	int3   
   140020ea3:	int3   
   140020ea4:	lea    rax,[rip+0x480a5]        # 0x140068f50
   140020eab:	mov    QWORD PTR [rcx],rax
   140020eae:	xor    eax,eax
   140020eb0:	mov    DWORD PTR [rcx+0x60],eax
   140020eb3:	mov    DWORD PTR [rcx+0x90],eax
   140020eb9:	mov    DWORD PTR [rsp+0x8],eax
   140020ebd:	mov    DWORD PTR [rsp+0xc],eax
   140020ec1:	mov    rax,QWORD PTR [rsp+0x8]
   140020ec6:	mov    QWORD PTR [rcx+0x88],rax
   140020ecd:	mov    rax,rcx
   140020ed0:	ret    
   140020ed1:	int3   
   140020ed2:	int3   
   140020ed3:	int3   
   140020ed4:	rex push rbx
   140020ed6:	sub    rsp,0x20
   140020eda:	lea    rax,[rip+0x4806f]        # 0x140068f50
   140020ee1:	mov    rbx,rcx
   140020ee4:	mov    QWORD PTR [rcx],rax
   140020ee7:	mov    rcx,QWORD PTR [rcx+0x50]
   140020eeb:	test   rcx,rcx
   140020eee:	je     0x140020ef6
   140020ef0:	call   QWORD PTR [rip+0x43a6a]        # 0x140064960
   140020ef6:	mov    rcx,QWORD PTR [rbx+0x48]
   140020efa:	test   rcx,rcx
   140020efd:	je     0x140020f05
   140020eff:	call   QWORD PTR [rip+0x43a5b]        # 0x140064960
   140020f05:	mov    rcx,QWORD PTR [rbx+0x18]
   140020f09:	test   rcx,rcx
   140020f0c:	je     0x140020f13
   140020f0e:	call   0x1400485c0
   140020f13:	add    rsp,0x20
   140020f17:	pop    rbx
   140020f18:	ret    
   140020f19:	int3   
   140020f1a:	int3   
   140020f1b:	int3   
   140020f1c:	mov    QWORD PTR [rsp+0x8],rbx
   140020f21:	push   rdi
   140020f22:	sub    rsp,0x20
   140020f26:	lea    rax,[rip+0x48033]        # 0x140068f60
   140020f2d:	mov    rbx,rcx
   140020f30:	mov    QWORD PTR [rcx],rax
   140020f33:	mov    rcx,QWORD PTR [rcx+0x78]
   140020f37:	test   rcx,rcx
   140020f3a:	je     0x140020f45
   140020f3c:	mov    rax,QWORD PTR [rcx]
   140020f3f:	call   QWORD PTR [rax+0x278]
   140020f45:	mov    rcx,QWORD PTR [rbx+0x90]
   140020f4c:	call   0x14001ac50
   140020f51:	mov    rcx,QWORD PTR [rbx+0x28]
   140020f55:	mov    edi,0x1
   140020f5a:	test   rcx,rcx
   140020f5d:	je     0x140020f66
   140020f5f:	mov    rax,QWORD PTR [rcx]
   140020f62:	mov    edx,edi
   140020f64:	call   QWORD PTR [rax]
   140020f66:	mov    rcx,QWORD PTR [rbx+0x30]
   140020f6a:	test   rcx,rcx
   140020f6d:	je     0x140020f76
   140020f6f:	mov    rax,QWORD PTR [rcx]
   140020f72:	mov    edx,edi
   140020f74:	call   QWORD PTR [rax]
   140020f76:	mov    rcx,QWORD PTR [rbx+0x38]
   140020f7a:	test   rcx,rcx
   140020f7d:	je     0x140020f86
   140020f7f:	mov    rax,QWORD PTR [rcx]
   140020f82:	mov    edx,edi
   140020f84:	call   QWORD PTR [rax]
   140020f86:	mov    rcx,QWORD PTR [rbx+0x40]
   140020f8a:	test   rcx,rcx
   140020f8d:	je     0x140020f96
   140020f8f:	mov    rax,QWORD PTR [rcx]
   140020f92:	mov    edx,edi
   140020f94:	call   QWORD PTR [rax]
   140020f96:	mov    rcx,QWORD PTR [rbx+0x48]
   140020f9a:	test   rcx,rcx
   140020f9d:	je     0x140020fa6
   140020f9f:	mov    rax,QWORD PTR [rcx]
   140020fa2:	mov    edx,edi
   140020fa4:	call   QWORD PTR [rax]
   140020fa6:	mov    rax,QWORD PTR [rbx+0x70]
   140020faa:	test   rax,rax
   140020fad:	je     0x140020fd2
   140020faf:	cmp    QWORD PTR [rax+0x18],0x0
   140020fb4:	je     0x140020fd2
   140020fb6:	mov    rcx,QWORD PTR [rbx+0x70]
   140020fba:	call   0x14003eb94
   140020fbf:	mov    rcx,rax
   140020fc2:	call   0x14001ac50
   140020fc7:	mov    r11,QWORD PTR [rbx+0x70]
   140020fcb:	cmp    QWORD PTR [r11+0x18],0x0
   140020fd0:	jne    0x140020fb6
   140020fd2:	mov    rcx,QWORD PTR [rbx+0x60]
   140020fd6:	test   rcx,rcx
   140020fd9:	je     0x140020fe3
   140020fdb:	mov    rax,QWORD PTR [rcx]
   140020fde:	mov    edx,edi
   140020fe0:	call   QWORD PTR [rax+0x8]
   140020fe3:	mov    rcx,QWORD PTR [rbx+0x68]
   140020fe7:	test   rcx,rcx
   140020fea:	je     0x140020ff4
   140020fec:	mov    rax,QWORD PTR [rcx]
   140020fef:	mov    edx,edi
   140020ff1:	call   QWORD PTR [rax+0x8]
   140020ff4:	mov    rcx,QWORD PTR [rbx+0x70]
   140020ff8:	test   rcx,rcx
   140020ffb:	je     0x140021005
   140020ffd:	mov    rax,QWORD PTR [rcx]
   140021000:	mov    edx,edi
   140021002:	call   QWORD PTR [rax+0x8]
   140021005:	mov    rbx,QWORD PTR [rsp+0x30]
   14002100a:	add    rsp,0x20
   14002100e:	pop    rdi
   14002100f:	ret    
   140021010:	mov    QWORD PTR [rsp+0x8],rbx
   140021015:	push   rdi
   140021016:	sub    rsp,0x20
   14002101a:	mov    ebx,edx
   14002101c:	mov    rdi,rcx
   14002101f:	call   0x140020ed4
   140021024:	test   bl,0x1
   140021027:	je     0x140021031
   140021029:	mov    rcx,rdi
   14002102c:	call   0x14002cbc8
   140021031:	mov    rax,rdi
   140021034:	mov    rbx,QWORD PTR [rsp+0x30]
   140021039:	add    rsp,0x20
   14002103d:	pop    rdi
   14002103e:	ret    
   14002103f:	int3   
   140021040:	lea    rax,[rip+0x47f19]        # 0x140068f60
   140021047:	xor    edx,edx
   140021049:	mov    QWORD PTR [rcx],rax
   14002104c:	mov    QWORD PTR [rcx+0x10],rdx
   140021050:	or     rax,0xffffffffffffffff
   140021054:	mov    QWORD PTR [rcx+0x88],rax
   14002105b:	mov    QWORD PTR [rcx+0x98],rax
   140021062:	lea    rax,[rip+0xffffffffffff9b87]        # 0x14001abf0
   140021069:	mov    QWORD PTR [rcx+0x50],rax
   14002106d:	mov    QWORD PTR [rcx+0x90],rdx
   140021074:	mov    QWORD PTR [rcx+0x18],0xc8
   14002107c:	mov    rax,rcx
   14002107f:	ret    
   140021080:	mov    QWORD PTR [rsp+0x8],rbx
   140021085:	push   rdi
   140021086:	sub    rsp,0x20
   14002108a:	mov    ebx,edx
   14002108c:	mov    rdi,rcx
   14002108f:	call   0x140020f1c
   140021094:	test   bl,0x1
   140021097:	je     0x1400210a1
   140021099:	mov    rcx,rdi
   14002109c:	call   0x14002cbc8
   1400210a1:	mov    rax,rdi
   1400210a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400210a9:	add    rsp,0x20
   1400210ad:	pop    rdi
   1400210ae:	ret    
   1400210af:	int3   
   1400210b0:	sub    rsp,0x28
   1400210b4:	lea    rdx,[rip+0xffffffffffffba8d]        # 0x14001cb48
   1400210bb:	lea    rcx,[rip+0x67b3e]        # 0x140088c00
   1400210c2:	call   0x14002d3a8
   1400210c7:	test   rax,rax
   1400210ca:	jne    0x1400210d2
   1400210cc:	call   0x1400208f8
   1400210d1:	int3   
   1400210d2:	add    rsp,0x28
   1400210d6:	ret    
   1400210d7:	int3   
   1400210d8:	mov    QWORD PTR [rsp+0x8],rcx
   1400210dd:	push   rbx
   1400210de:	sub    rsp,0x30
   1400210e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400210eb:	mov    rbx,rcx
   1400210ee:	lea    rax,[rip+0x47ea3]        # 0x140068f98
   1400210f5:	mov    QWORD PTR [rcx],rax
   1400210f8:	mov    rcx,QWORD PTR [rcx+0xb8]
   1400210ff:	test   rcx,rcx
   140021102:	je     0x140021128
   140021104:	mov    rax,QWORD PTR [rcx]
   140021107:	lea    rdx,[rbx+0x80]
   14002110e:	call   QWORD PTR [rax+0x18]
   140021111:	mov    rcx,QWORD PTR [rbx+0xb8]
   140021118:	test   rcx,rcx
   14002111b:	je     0x140021128
   14002111d:	mov    rax,QWORD PTR [rcx]
   140021120:	mov    edx,0x1
   140021125:	call   QWORD PTR [rax+0x8]
   140021128:	mov    rax,QWORD PTR [rbx+0xc8]
   14002112f:	mov    rcx,QWORD PTR [rax]
   140021132:	test   rcx,rcx
   140021135:	je     0x140021141
   140021137:	mov    rax,QWORD PTR [rcx]
   14002113a:	mov    edx,0x1
   14002113f:	call   QWORD PTR [rax]
   140021141:	mov    rax,QWORD PTR [rbx+0xc8]
   140021148:	mov    rcx,QWORD PTR [rax+0x8]
   14002114c:	test   rcx,rcx
   14002114f:	je     0x14002115b
   140021151:	mov    rax,QWORD PTR [rcx]
   140021154:	mov    edx,0x1
   140021159:	call   QWORD PTR [rax]
   14002115b:	mov    rcx,QWORD PTR [rbx+0xc8]
   140021162:	call   0x14001ac50
   140021167:	mov    rcx,QWORD PTR [rbx+0xd8]
   14002116e:	test   rcx,rcx
   140021171:	je     0x14002118f
   140021173:	cmp    rcx,0xffffffffffffffff
   140021177:	je     0x14002118f
   140021179:	mov    rax,QWORD PTR [rip+0x67a58]        # 0x140088bd8
   140021180:	test   rax,rax
   140021183:	je     0x140021187
   140021185:	call   rax
   140021187:	or     QWORD PTR [rbx+0xd8],0xffffffffffffffff
   14002118f:	lea    rcx,[rbx+0xc0]
   140021196:	call   0x14002d488
   14002119b:	nop
   14002119c:	mov    rdx,QWORD PTR [rbx+0x58]
   1400211a0:	sub    rdx,0x18
   1400211a4:	or     eax,0xffffffff
   1400211a7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400211ac:	add    eax,0xffffffff
   1400211af:	test   eax,eax
   1400211b1:	jg     0x1400211bc
   1400211b3:	mov    rcx,QWORD PTR [rdx]
   1400211b6:	mov    rax,QWORD PTR [rcx]
   1400211b9:	call   QWORD PTR [rax+0x8]
   1400211bc:	add    rsp,0x30
   1400211c0:	pop    rbx
   1400211c1:	ret    
   1400211c2:	int3   
   1400211c3:	int3   
   1400211c4:	int3   
   1400211c5:	int3   
   1400211c6:	int3   
   1400211c7:	int3   
   1400211c8:	rex push rbp
   1400211ca:	sub    rsp,0x20
   1400211ce:	mov    rbp,rdx
   1400211d1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400211d5:	add    rcx,0x58
   1400211d9:	call   0x1400010c0
   1400211de:	add    rsp,0x20
   1400211e2:	pop    rbp
   1400211e3:	ret    
   1400211e4:	int3   
   1400211e5:	int3   
   1400211e6:	int3   
   1400211e7:	int3   
   1400211e8:	rex push rbp
   1400211ea:	sub    rsp,0x20
   1400211ee:	mov    rbp,rdx
   1400211f1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400211f5:	add    rcx,0xc0
   1400211fc:	call   0x140020c1c
   140021201:	add    rsp,0x20
   140021205:	pop    rbp
   140021206:	ret    
   140021207:	int3   
   140021208:	mov    QWORD PTR [rsp+0x8],rbx
   14002120d:	push   rdi
   14002120e:	sub    rsp,0x20
   140021212:	cmp    BYTE PTR [rcx+0x10],0x0
   140021216:	lea    rax,[rip+0x47d8b]        # 0x140068fa8
   14002121d:	mov    edi,edx
   14002121f:	mov    QWORD PTR [rcx],rax
   140021222:	mov    rbx,rcx
   140021225:	je     0x140021231
   140021227:	mov    rcx,QWORD PTR [rcx+0x8]
   14002122b:	call   QWORD PTR [rip+0x433bf]        # 0x1400645f0
   140021231:	mov    rdx,QWORD PTR [rbx+0x18]
   140021235:	sub    rdx,0x18
   140021239:	or     eax,0xffffffff
   14002123c:	lock xadd DWORD PTR [rdx+0x10],eax
   140021241:	add    eax,0xffffffff
   140021244:	test   eax,eax
   140021246:	jg     0x140021251
   140021248:	mov    rcx,QWORD PTR [rdx]
   14002124b:	mov    rax,QWORD PTR [rcx]
   14002124e:	call   QWORD PTR [rax+0x8]
   140021251:	test   dil,0x1
   140021255:	je     0x14002125f
   140021257:	mov    rcx,rbx
   14002125a:	call   0x14002cbc8
   14002125f:	mov    rax,rbx
   140021262:	mov    rbx,QWORD PTR [rsp+0x30]
   140021267:	add    rsp,0x20
   14002126b:	pop    rdi
   14002126c:	ret    
   14002126d:	int3   
   14002126e:	int3   
   14002126f:	int3   
   140021270:	mov    QWORD PTR [rsp+0x8],rbx
   140021275:	push   rdi
   140021276:	sub    rsp,0x20
   14002127a:	mov    ebx,edx
   14002127c:	mov    rdi,rcx
   14002127f:	call   0x1400210d8
   140021284:	test   bl,0x1
   140021287:	je     0x140021291
   140021289:	mov    rcx,rdi
   14002128c:	call   0x14002cbc8
   140021291:	mov    rax,rdi
   140021294:	mov    rbx,QWORD PTR [rsp+0x30]
   140021299:	add    rsp,0x20
   14002129d:	pop    rdi
   14002129e:	ret    
   14002129f:	int3   
   1400212a0:	rex push rdi
   1400212a2:	sub    rsp,0x30
   1400212a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400212af:	mov    QWORD PTR [rsp+0x48],rbx
   1400212b4:	mov    rbx,rcx
   1400212b7:	lea    rdx,[rip+0x47d2a]        # 0x140068fe8
   1400212be:	lea    rcx,[rsp+0x40]
   1400212c3:	call   0x14000c360
   1400212c8:	nop
   1400212c9:	lea    rax,[rip+0x47cd8]        # 0x140068fa8
   1400212d0:	mov    QWORD PTR [rbx],rax
   1400212d3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400212d8:	add    rcx,0xffffffffffffffe8
   1400212dc:	call   0x140002da0
   1400212e1:	add    rax,0x18
   1400212e5:	mov    QWORD PTR [rbx+0x18],rax
   1400212e9:	xor    edi,edi
   1400212eb:	mov    QWORD PTR [rbx+0x8],rdi
   1400212ef:	mov    BYTE PTR [rbx+0x10],dil
   1400212f3:	mov    rdx,QWORD PTR [rsp+0x40]
   1400212f8:	add    rdx,0xffffffffffffffe8
   1400212fc:	or     eax,0xffffffff
   1400212ff:	lock xadd DWORD PTR [rdx+0x10],eax
   140021304:	add    eax,0xffffffff
   140021307:	cmp    eax,edi
   140021309:	jg     0x140021314
   14002130b:	mov    rcx,QWORD PTR [rdx]
   14002130e:	mov    rax,QWORD PTR [rcx]
   140021311:	call   QWORD PTR [rax+0x8]
   140021314:	lea    rax,[rip+0x47cc5]        # 0x140068fe0
   14002131b:	mov    QWORD PTR [rbx],rax
   14002131e:	mov    QWORD PTR [rbx+0x20],rdi
   140021322:	mov    QWORD PTR [rbx+0x28],rdi
   140021326:	mov    QWORD PTR [rbx+0x30],rdi
   14002132a:	mov    QWORD PTR [rbx+0x38],rdi
   14002132e:	mov    QWORD PTR [rbx+0x40],rdi
   140021332:	mov    QWORD PTR [rbx+0x48],rdi
   140021336:	mov    QWORD PTR [rbx+0x50],rdi
   14002133a:	mov    QWORD PTR [rbx+0x58],rdi
   14002133e:	mov    QWORD PTR [rbx+0x60],rdi
   140021342:	mov    QWORD PTR [rbx+0x68],rdi
   140021346:	mov    QWORD PTR [rbx+0x70],rdi
   14002134a:	mov    QWORD PTR [rbx+0x78],rdi
   14002134e:	mov    QWORD PTR [rbx+0x80],rdi
   140021355:	mov    QWORD PTR [rbx+0x88],rdi
   14002135c:	mov    QWORD PTR [rbx+0x90],rdi
   140021363:	mov    QWORD PTR [rbx+0x98],rdi
   14002136a:	mov    QWORD PTR [rbx+0xa0],rdi
   140021371:	mov    QWORD PTR [rbx+0xa8],rdi
   140021378:	mov    QWORD PTR [rbx+0xb0],rdi
   14002137f:	mov    QWORD PTR [rbx+0xb8],rdi
   140021386:	mov    QWORD PTR [rbx+0xc0],rdi
   14002138d:	mov    QWORD PTR [rbx+0xc8],rdi
   140021394:	mov    QWORD PTR [rbx+0xd0],rdi
   14002139b:	mov    QWORD PTR [rbx+0xd8],rdi
   1400213a2:	mov    QWORD PTR [rbx+0xe0],rdi
   1400213a9:	mov    QWORD PTR [rbx+0xe8],rdi
   1400213b0:	mov    QWORD PTR [rbx+0xf0],rdi
   1400213b7:	mov    QWORD PTR [rbx+0xf8],rdi
   1400213be:	mov    QWORD PTR [rbx+0x100],rdi
   1400213c5:	mov    QWORD PTR [rbx+0x108],rdi
   1400213cc:	mov    QWORD PTR [rbx+0x110],rdi
   1400213d3:	mov    QWORD PTR [rbx+0x118],rdi
   1400213da:	mov    QWORD PTR [rbx+0x120],rdi
   1400213e1:	mov    QWORD PTR [rbx+0x128],rdi
   1400213e8:	mov    QWORD PTR [rbx+0x130],rdi
   1400213ef:	mov    QWORD PTR [rbx+0x138],rdi
   1400213f6:	mov    QWORD PTR [rbx+0x140],rdi
   1400213fd:	mov    QWORD PTR [rbx+0x148],rdi
   140021404:	mov    QWORD PTR [rbx+0x150],rdi
   14002140b:	mov    QWORD PTR [rbx+0x158],rdi
   140021412:	mov    QWORD PTR [rbx+0x160],rdi
   140021419:	mov    QWORD PTR [rbx+0x168],rdi
   140021420:	mov    QWORD PTR [rbx+0x170],rdi
   140021427:	mov    QWORD PTR [rbx+0x178],rdi
   14002142e:	mov    QWORD PTR [rbx+0x180],rdi
   140021435:	mov    QWORD PTR [rbx+0x188],rdi
   14002143c:	mov    QWORD PTR [rbx+0x190],rdi
   140021443:	mov    QWORD PTR [rbx+0x198],rdi
   14002144a:	mov    QWORD PTR [rbx+0x1a0],rdi
   140021451:	mov    QWORD PTR [rbx+0x1a8],rdi
   140021458:	mov    QWORD PTR [rbx+0x1b0],rdi
   14002145f:	mov    QWORD PTR [rbx+0x1b8],rdi
   140021466:	mov    QWORD PTR [rbx+0x1c0],rdi
   14002146d:	mov    QWORD PTR [rbx+0x1c8],rdi
   140021474:	mov    QWORD PTR [rbx+0x1d0],rdi
   14002147b:	mov    QWORD PTR [rbx+0x1d8],rdi
   140021482:	mov    QWORD PTR [rbx+0x1e0],rdi
   140021489:	mov    QWORD PTR [rbx+0x1e8],rdi
   140021490:	mov    QWORD PTR [rbx+0x1f0],rdi
   140021497:	mov    QWORD PTR [rbx+0x1f8],rdi
   14002149e:	mov    QWORD PTR [rbx+0x200],rdi
   1400214a5:	mov    QWORD PTR [rbx+0x208],rdi
   1400214ac:	mov    QWORD PTR [rbx+0x210],rdi
   1400214b3:	mov    QWORD PTR [rbx+0x218],rdi
   1400214ba:	mov    QWORD PTR [rbx+0x220],rdi
   1400214c1:	mov    QWORD PTR [rbx+0x228],rdi
   1400214c8:	mov    QWORD PTR [rbx+0x230],rdi
   1400214cf:	mov    QWORD PTR [rbx+0x238],rdi
   1400214d6:	mov    QWORD PTR [rbx+0x240],rdi
   1400214dd:	mov    QWORD PTR [rbx+0x248],rdi
   1400214e4:	mov    QWORD PTR [rbx+0x250],rdi
   1400214eb:	mov    QWORD PTR [rbx+0x258],rdi
   1400214f2:	mov    QWORD PTR [rbx+0x260],rdi
   1400214f9:	mov    QWORD PTR [rbx+0x268],rdi
   140021500:	mov    QWORD PTR [rbx+0x270],rdi
   140021507:	mov    QWORD PTR [rbx+0x278],rdi
   14002150e:	mov    QWORD PTR [rbx+0x280],rdi
   140021515:	mov    QWORD PTR [rbx+0x288],rdi
   14002151c:	mov    QWORD PTR [rbx+0x290],rdi
   140021523:	mov    QWORD PTR [rbx+0x298],rdi
   14002152a:	mov    QWORD PTR [rbx+0x2a0],rdi
   140021531:	mov    QWORD PTR [rbx+0x2a8],rdi
   140021538:	mov    QWORD PTR [rbx+0x2b0],rdi
   14002153f:	mov    QWORD PTR [rbx+0x2b8],rdi
   140021546:	mov    QWORD PTR [rbx+0x2c0],rdi
   14002154d:	mov    QWORD PTR [rbx+0x2c8],rdi
   140021554:	mov    QWORD PTR [rbx+0x2d0],rdi
   14002155b:	mov    QWORD PTR [rbx+0x2d8],rdi
   140021562:	mov    QWORD PTR [rbx+0x2e0],rdi
   140021569:	mov    QWORD PTR [rbx+0x2e8],rdi
   140021570:	mov    QWORD PTR [rbx+0x2f0],rdi
   140021577:	mov    QWORD PTR [rbx+0x2f8],rdi
   14002157e:	mov    QWORD PTR [rbx+0x300],rdi
   140021585:	mov    QWORD PTR [rbx+0x308],rdi
   14002158c:	mov    rax,rbx
   14002158f:	mov    rbx,QWORD PTR [rsp+0x48]
   140021594:	add    rsp,0x30
   140021598:	pop    rdi
   140021599:	ret    
   14002159a:	int3   
   14002159b:	int3   
   14002159c:	int3   
   14002159d:	int3   
   14002159e:	int3   
   14002159f:	int3   
   1400215a0:	rex push rbp
   1400215a2:	sub    rsp,0x20
   1400215a6:	mov    rbp,rdx
   1400215a9:	lea    rcx,[rbp+0x40]
   1400215ad:	call   0x1400010c0
   1400215b2:	add    rsp,0x20
   1400215b6:	pop    rbp
   1400215b7:	ret    
   1400215b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400215bd:	push   rdi
   1400215be:	sub    rsp,0x20
   1400215c2:	cmp    BYTE PTR [rcx+0x10],0x0
   1400215c6:	lea    rax,[rip+0x479db]        # 0x140068fa8
   1400215cd:	mov    edi,edx
   1400215cf:	mov    QWORD PTR [rcx],rax
   1400215d2:	mov    rbx,rcx
   1400215d5:	je     0x1400215e1
   1400215d7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400215db:	call   QWORD PTR [rip+0x4300f]        # 0x1400645f0
   1400215e1:	mov    rdx,QWORD PTR [rbx+0x18]
   1400215e5:	sub    rdx,0x18
   1400215e9:	or     eax,0xffffffff
   1400215ec:	lock xadd DWORD PTR [rdx+0x10],eax
   1400215f1:	add    eax,0xffffffff
   1400215f4:	test   eax,eax
   1400215f6:	jg     0x140021601
   1400215f8:	mov    rcx,QWORD PTR [rdx]
   1400215fb:	mov    rax,QWORD PTR [rcx]
   1400215fe:	call   QWORD PTR [rax+0x8]
   140021601:	test   dil,0x1
   140021605:	je     0x14002160f
   140021607:	mov    rcx,rbx
   14002160a:	call   0x14002cbc8
   14002160f:	mov    rax,rbx
   140021612:	mov    rbx,QWORD PTR [rsp+0x30]
   140021617:	add    rsp,0x20
   14002161b:	pop    rdi
   14002161c:	ret    
   14002161d:	int3   
   14002161e:	int3   
   14002161f:	int3   
   140021620:	rex push rdi
   140021622:	sub    rsp,0x30
   140021626:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002162f:	mov    QWORD PTR [rsp+0x48],rbx
   140021634:	mov    rbx,rcx
   140021637:	lea    rdx,[rip+0x47a02]        # 0x140069040
   14002163e:	lea    rcx,[rsp+0x40]
   140021643:	call   0x14000c360
   140021648:	nop
   140021649:	lea    rax,[rip+0x47958]        # 0x140068fa8
   140021650:	mov    QWORD PTR [rbx],rax
   140021653:	mov    rcx,QWORD PTR [rsp+0x40]
   140021658:	add    rcx,0xffffffffffffffe8
   14002165c:	call   0x140002da0
   140021661:	add    rax,0x18
   140021665:	mov    QWORD PTR [rbx+0x18],rax
   140021669:	xor    edi,edi
   14002166b:	mov    QWORD PTR [rbx+0x8],rdi
   14002166f:	mov    BYTE PTR [rbx+0x10],dil
   140021673:	mov    rdx,QWORD PTR [rsp+0x40]
   140021678:	add    rdx,0xffffffffffffffe8
   14002167c:	or     eax,0xffffffff
   14002167f:	lock xadd DWORD PTR [rdx+0x10],eax
   140021684:	add    eax,0xffffffff
   140021687:	cmp    eax,edi
   140021689:	jg     0x140021694
   14002168b:	mov    rcx,QWORD PTR [rdx]
   14002168e:	mov    rax,QWORD PTR [rcx]
   140021691:	call   QWORD PTR [rax+0x8]
   140021694:	lea    rax,[rip+0x4799d]        # 0x140069038
   14002169b:	mov    QWORD PTR [rbx],rax
   14002169e:	mov    QWORD PTR [rbx+0x20],rdi
   1400216a2:	mov    QWORD PTR [rbx+0x28],rdi
   1400216a6:	mov    QWORD PTR [rbx+0x30],rdi
   1400216aa:	mov    QWORD PTR [rbx+0x38],rdi
   1400216ae:	mov    QWORD PTR [rbx+0x40],rdi
   1400216b2:	mov    QWORD PTR [rbx+0x48],rdi
   1400216b6:	mov    QWORD PTR [rbx+0x50],rdi
   1400216ba:	mov    QWORD PTR [rbx+0x58],rdi
   1400216be:	mov    QWORD PTR [rbx+0x60],rdi
   1400216c2:	mov    QWORD PTR [rbx+0x68],rdi
   1400216c6:	mov    QWORD PTR [rbx+0x70],rdi
   1400216ca:	mov    QWORD PTR [rbx+0x78],rdi
   1400216ce:	mov    QWORD PTR [rbx+0x80],rdi
   1400216d5:	mov    QWORD PTR [rbx+0x88],rdi
   1400216dc:	mov    QWORD PTR [rbx+0x90],rdi
   1400216e3:	mov    QWORD PTR [rbx+0x98],rdi
   1400216ea:	mov    QWORD PTR [rbx+0xa0],rdi
   1400216f1:	mov    QWORD PTR [rbx+0xa8],rdi
   1400216f8:	mov    QWORD PTR [rbx+0xb0],rdi
   1400216ff:	mov    QWORD PTR [rbx+0xb8],rdi
   140021706:	mov    QWORD PTR [rbx+0xc0],rdi
   14002170d:	mov    rax,rbx
   140021710:	mov    rbx,QWORD PTR [rsp+0x48]
   140021715:	add    rsp,0x30
   140021719:	pop    rdi
   14002171a:	ret    
   14002171b:	int3   
   14002171c:	int3   
   14002171d:	int3   
   14002171e:	int3   
   14002171f:	int3   
   140021720:	rex push rbp
   140021722:	sub    rsp,0x20
   140021726:	mov    rbp,rdx
   140021729:	lea    rcx,[rbp+0x40]
   14002172d:	call   0x1400010c0
   140021732:	add    rsp,0x20
   140021736:	pop    rbp
   140021737:	ret    
   140021738:	mov    QWORD PTR [rsp+0x8],rbx
   14002173d:	push   rdi
   14002173e:	sub    rsp,0x20
   140021742:	cmp    BYTE PTR [rcx+0x10],0x0
   140021746:	lea    rax,[rip+0x4785b]        # 0x140068fa8
   14002174d:	mov    edi,edx
   14002174f:	mov    QWORD PTR [rcx],rax
   140021752:	mov    rbx,rcx
   140021755:	je     0x140021761
   140021757:	mov    rcx,QWORD PTR [rcx+0x8]
   14002175b:	call   QWORD PTR [rip+0x42e8f]        # 0x1400645f0
   140021761:	mov    rdx,QWORD PTR [rbx+0x18]
   140021765:	sub    rdx,0x18
   140021769:	or     eax,0xffffffff
   14002176c:	lock xadd DWORD PTR [rdx+0x10],eax
   140021771:	add    eax,0xffffffff
   140021774:	test   eax,eax
   140021776:	jg     0x140021781
   140021778:	mov    rcx,QWORD PTR [rdx]
   14002177b:	mov    rax,QWORD PTR [rcx]
   14002177e:	call   QWORD PTR [rax+0x8]
   140021781:	test   dil,0x1
   140021785:	je     0x14002178f
   140021787:	mov    rcx,rbx
   14002178a:	call   0x14002cbc8
   14002178f:	mov    rax,rbx
   140021792:	mov    rbx,QWORD PTR [rsp+0x30]
   140021797:	add    rsp,0x20
   14002179b:	pop    rdi
   14002179c:	ret    
   14002179d:	int3   
   14002179e:	int3   
   14002179f:	int3   
   1400217a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400217a5:	push   r12
   1400217a7:	sub    rsp,0x30
   1400217ab:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400217b4:	mov    QWORD PTR [rsp+0x48],rsi
   1400217b9:	mov    QWORD PTR [rsp+0x58],rdi
   1400217be:	mov    r12d,edx
   1400217c1:	mov    rdi,rcx
   1400217c4:	lea    rax,[rip+0x477cd]        # 0x140068f98
   1400217cb:	mov    QWORD PTR [rcx],rax
   1400217ce:	and    QWORD PTR [rcx+0x30],0x0
   1400217d3:	and    QWORD PTR [rcx+0x38],0x0
   1400217d8:	and    QWORD PTR [rcx+0x40],0x0
   1400217dd:	and    QWORD PTR [rcx+0x48],0x0
   1400217e2:	call   0x14002b874
   1400217e7:	mov    r11,rax
   1400217ea:	xor    ecx,ecx
   1400217ec:	test   rax,rax
   1400217ef:	setne  cl
   1400217f2:	test   ecx,ecx
   1400217f4:	jne    0x140021801
   1400217f6:	mov    ecx,0x80004005
   1400217fb:	call   0x140001430
   140021800:	int3   
   140021801:	mov    rax,QWORD PTR [rax]
   140021804:	mov    rcx,r11
   140021807:	call   QWORD PTR [rax+0x18]
   14002180a:	add    rax,0x18
   14002180e:	mov    QWORD PTR [rdi+0x58],rax
   140021812:	and    QWORD PTR [rdi+0x70],0x0
   140021817:	and    QWORD PTR [rdi+0x78],0x0
   14002181c:	or     DWORD PTR [rdi+0x88],0xffffffff
   140021823:	and    QWORD PTR [rdi+0x90],0x0
   14002182b:	and    QWORD PTR [rdi+0xa8],0x0
   140021833:	and    DWORD PTR [rdi+0xb0],0x0
   14002183a:	mov    QWORD PTR [rdi+0x48],0x40
   140021842:	mov    QWORD PTR [rdi+0x38],0x20
   14002184a:	and    DWORD PTR [rdi+0x2c],0x0
   14002184e:	mov    BYTE PTR [rdi+0x28],r12b
   140021852:	mov    rax,QWORD PTR [rdi+0x58]
   140021856:	mov    r8d,0x1
   14002185c:	sub    r8d,DWORD PTR [rax-0x8]
   140021860:	mov    eax,DWORD PTR [rax-0xc]
   140021863:	mov    edx,0x1000
   140021868:	sub    eax,edx
   14002186a:	or     eax,r8d
   14002186d:	jge    0x140021879
   14002186f:	lea    rcx,[rdi+0x58]
   140021873:	call   0x140002d40
   140021878:	nop
   140021879:	jmp    0x140021880
   14002187b:	mov    rdi,QWORD PTR [rsp+0x40]
   140021880:	mov    DWORD PTR [rdi+0x54],0x1
   140021887:	mov    QWORD PTR [rdi+0x78],0x20
   14002188f:	mov    ecx,0x10
   140021894:	call   0x14001ac0c
   140021899:	mov    QWORD PTR [rdi+0xc8],rax
   1400218a0:	mov    ecx,0x310
   1400218a5:	call   0x14002cba4
   1400218aa:	mov    QWORD PTR [rsp+0x50],rax
   1400218af:	test   rax,rax
   1400218b2:	je     0x1400218c1
   1400218b4:	mov    rcx,rax
   1400218b7:	call   0x1400212a0
   1400218bc:	mov    r11,rax
   1400218bf:	jmp    0x1400218c4
   1400218c1:	xor    r11d,r11d
   1400218c4:	mov    rax,QWORD PTR [rdi+0xc8]
   1400218cb:	mov    QWORD PTR [rax],r11
   1400218ce:	mov    ecx,0xc8
   1400218d3:	call   0x14002cba4
   1400218d8:	mov    QWORD PTR [rsp+0x50],rax
   1400218dd:	test   rax,rax
   1400218e0:	je     0x1400218ef
   1400218e2:	mov    rcx,rax
   1400218e5:	call   0x140021620
   1400218ea:	mov    r11,rax
   1400218ed:	jmp    0x1400218f2
   1400218ef:	xor    r11d,r11d
   1400218f2:	mov    rax,QWORD PTR [rdi+0xc8]
   1400218f9:	mov    QWORD PTR [rax+0x8],r11
   1400218fd:	mov    DWORD PTR [rdi+0xd0],0x1
   140021907:	and    QWORD PTR [rdi+0xd8],0x0
   14002190f:	mov    rax,rdi
   140021912:	mov    rsi,QWORD PTR [rsp+0x48]
   140021917:	mov    rdi,QWORD PTR [rsp+0x58]
   14002191c:	add    rsp,0x30
   140021920:	pop    r12
   140021922:	ret    
   140021923:	int3   
   140021924:	int3   
   140021925:	int3   
   140021926:	int3   
   140021927:	int3   
   140021928:	int3   
   140021929:	int3   
   14002192a:	int3   
   14002192b:	int3   
   14002192c:	int3   
   14002192d:	int3   
   14002192e:	int3   
   14002192f:	int3   
   140021930:	rex push rbp
   140021932:	sub    rsp,0x20
   140021936:	mov    rbp,rdx
   140021939:	mov    rcx,QWORD PTR [rbp+0x40]
   14002193d:	add    rcx,0x58
   140021941:	call   0x1400010c0
   140021946:	add    rsp,0x20
   14002194a:	pop    rbp
   14002194b:	ret    
   14002194c:	int3   
   14002194d:	int3   
   14002194e:	int3   
   14002194f:	int3   
   140021950:	rex push rbp
   140021952:	sub    rsp,0x20
   140021956:	mov    rbp,rdx
   140021959:	mov    rcx,QWORD PTR [rbp+0x40]
   14002195d:	add    rcx,0xc0
   140021964:	call   0x140020c1c
   140021969:	add    rsp,0x20
   14002196d:	pop    rbp
   14002196e:	ret    
   14002196f:	int3   
   140021970:	mov    QWORD PTR [rsp+0x10],rdx
   140021975:	push   rbp
   140021976:	sub    rsp,0x20
   14002197a:	mov    rbp,rdx
   14002197d:	mov    rcx,QWORD PTR [rbp+0x28]
   140021981:	test   rcx,rcx
   140021984:	je     0x14002198c
   140021986:	call   0x1400207b8
   14002198b:	nop
   14002198c:	lea    rax,[rip+0xfffffffffffffee8]        # 0x14002187b
   140021993:	jmp    0x140021995
   140021995:	add    rsp,0x20
   140021999:	pop    rbp
   14002199a:	ret    
   14002199b:	int3   
   14002199c:	int3   
   14002199d:	int3   
   14002199e:	int3   
   14002199f:	int3   
   1400219a0:	rex push rbp
   1400219a2:	sub    rsp,0x20
   1400219a6:	mov    rbp,rdx
   1400219a9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400219ad:	call   0x14002cbc8
   1400219b2:	add    rsp,0x20
   1400219b6:	pop    rbp
   1400219b7:	ret    
   1400219b8:	int3   
   1400219b9:	int3   
   1400219ba:	int3   
   1400219bb:	int3   
   1400219bc:	int3   
   1400219bd:	int3   
   1400219be:	int3   
   1400219bf:	int3   
   1400219c0:	rex push rbp
   1400219c2:	sub    rsp,0x20
   1400219c6:	mov    rbp,rdx
   1400219c9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400219cd:	call   0x14002cbc8
   1400219d2:	add    rsp,0x20
   1400219d6:	pop    rbp
   1400219d7:	ret    
   1400219d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400219dd:	push   rdi
   1400219de:	sub    rsp,0x20
   1400219e2:	mov    ebx,edx
   1400219e4:	mov    rdi,rcx
   1400219e7:	call   0x1400210d8
   1400219ec:	test   bl,0x1
   1400219ef:	je     0x1400219f9
   1400219f1:	mov    rcx,rdi
   1400219f4:	call   0x14002cbc8
   1400219f9:	mov    rax,rdi
   1400219fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140021a01:	add    rsp,0x20
   140021a05:	pop    rdi
   140021a06:	ret    
   140021a07:	int3   
   140021a08:	rex push rbx
   140021a0a:	sub    rsp,0x30
   140021a0e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021a17:	mov    ecx,0xe0
   140021a1c:	call   0x14002cba4
   140021a21:	mov    rbx,rax
   140021a24:	mov    QWORD PTR [rsp+0x40],rax
   140021a29:	test   rax,rax
   140021a2c:	je     0x140021a47
   140021a2e:	mov    edx,0x1
   140021a33:	mov    rcx,rax
   140021a36:	call   0x1400217a0
   140021a3b:	lea    r11,[rip+0x4764e]        # 0x140069090
   140021a42:	mov    QWORD PTR [rbx],r11
   140021a45:	jmp    0x140021a49
   140021a47:	xor    ebx,ebx
   140021a49:	mov    rax,rbx
   140021a4c:	add    rsp,0x30
   140021a50:	pop    rbx
   140021a51:	ret    
   140021a52:	int3   
   140021a53:	int3   
   140021a54:	int3   
   140021a55:	int3   
   140021a56:	int3   
   140021a57:	int3   
   140021a58:	rex push rbp
   140021a5a:	sub    rsp,0x20
   140021a5e:	mov    rbp,rdx
   140021a61:	mov    rcx,QWORD PTR [rbp+0x40]
   140021a65:	call   0x14002cbc8
   140021a6a:	add    rsp,0x20
   140021a6e:	pop    rbp
   140021a6f:	ret    
   140021a70:	sub    rsp,0x28
   140021a74:	lea    rdx,[rip+0xffffffffffffb0cd]        # 0x14001cb48
   140021a7b:	lea    rcx,[rip+0x6717e]        # 0x140088c00
   140021a82:	call   0x14002d3a8
   140021a87:	test   rax,rax
   140021a8a:	jne    0x140021a92
   140021a8c:	call   0x1400208f8
   140021a91:	int3   
   140021a92:	mov    rax,QWORD PTR [rax+0x8]
   140021a96:	test   rax,rax
   140021a99:	jne    0x140021ab9
   140021a9b:	lea    rdx,[rip+0xffffffffffffff66]        # 0x140021a08
   140021aa2:	lea    rcx,[rip+0x6714f]        # 0x140088bf8
   140021aa9:	call   0x14002cc70
   140021aae:	test   rax,rax
   140021ab1:	jne    0x140021ab9
   140021ab3:	call   0x1400208f8
   140021ab8:	int3   
   140021ab9:	add    rsp,0x28
   140021abd:	ret    
   140021abe:	int3   
   140021abf:	int3   
   140021ac0:	sub    rsp,0x28
   140021ac4:	call   0x140021a70
   140021ac9:	lea    rdx,[rip+0xffffffffffff9750]        # 0x14001b220
   140021ad0:	lea    rcx,[rax+0xc0]
   140021ad7:	call   0x14002d3a8
   140021adc:	test   rax,rax
   140021adf:	jne    0x140021ae7
   140021ae1:	call   0x1400208f8
   140021ae6:	int3   
   140021ae7:	add    rsp,0x28
   140021aeb:	ret    
   140021aec:	mov    QWORD PTR [rsp+0x8],rbx
   140021af1:	push   rdi
   140021af2:	sub    rsp,0x20
   140021af6:	mov    rdi,rdx
   140021af9:	mov    rbx,rcx
   140021afc:	call   0x140021a70
   140021b01:	xor    r8d,r8d
   140021b04:	cmp    DWORD PTR [rax+0xd0],r8d
   140021b0b:	je     0x140021b2e
   140021b0d:	mov    rcx,QWORD PTR [rdi+0xd8]
   140021b14:	cmp    rcx,0xffffffffffffffff
   140021b18:	je     0x140021b2e
   140021b1a:	mov    rax,QWORD PTR [rip+0x670bf]        # 0x140088be0
   140021b21:	cmp    rax,r8
   140021b24:	je     0x140021b2e
   140021b26:	mov    rdx,rbx
   140021b29:	call   rax
   140021b2b:	mov    r8d,eax
   140021b2e:	mov    DWORD PTR [rbx+0x8],r8d
   140021b32:	mov    rax,rbx
   140021b35:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b3a:	add    rsp,0x20
   140021b3e:	pop    rdi
   140021b3f:	ret    
   140021b40:	sub    rsp,0xd8
   140021b47:	mov    rax,QWORD PTR [rip+0x65222]        # 0x140086d70
   140021b4e:	xor    rax,rsp
   140021b51:	mov    QWORD PTR [rsp+0xc0],rax
   140021b59:	lea    rcx,[rsp+0x24]
   140021b5e:	xor    edx,edx
   140021b60:	mov    r8d,0x90
   140021b66:	call   0x140047720
   140021b6b:	lea    rcx,[rsp+0x20]
   140021b70:	mov    DWORD PTR [rsp+0x20],0x94
   140021b78:	call   QWORD PTR [rip+0x428f2]        # 0x140064470
   140021b7e:	xor    eax,eax
   140021b80:	cmp    DWORD PTR [rsp+0x30],0x2
   140021b85:	sete   al
   140021b88:	mov    rcx,QWORD PTR [rsp+0xc0]
   140021b90:	xor    rcx,rsp
   140021b93:	call   0x140046470
   140021b98:	add    rsp,0xd8
   140021b9f:	ret    
   140021ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140021ba5:	push   rdi
   140021ba6:	sub    rsp,0x20
   140021baa:	xor    ebx,ebx
   140021bac:	cmp    DWORD PTR [rip+0x6a0a6],ebx        # 0x14008bc58
   140021bb2:	je     0x140021bc3
   140021bb4:	cmp    QWORD PTR [rip+0x6a085],rbx        # 0x14008bc40
   140021bbb:	setne  bl
   140021bbe:	jmp    0x140021d08
   140021bc3:	call   0x140021b40
   140021bc8:	lea    rcx,[rip+0x476c9]        # 0x140069298
   140021bcf:	mov    DWORD PTR [rip+0x6a087],eax        # 0x14008bc5c
   140021bd5:	call   QWORD PTR [rip+0x429b5]        # 0x140064590
   140021bdb:	cmp    rax,rbx
   140021bde:	mov    rdi,rax
   140021be1:	je     0x140021ccd
   140021be7:	lea    rdx,[rip+0x47692]        # 0x140069280
   140021bee:	mov    rcx,rax
   140021bf1:	call   QWORD PTR [rip+0x429f1]        # 0x1400645e8
   140021bf7:	cmp    rax,rbx
   140021bfa:	mov    QWORD PTR [rip+0x6a01f],rax        # 0x14008bc20
   140021c01:	je     0x140021ccd
   140021c07:	lea    rdx,[rip+0x4765a]        # 0x140069268
   140021c0e:	mov    rcx,rdi
   140021c11:	call   QWORD PTR [rip+0x429d1]        # 0x1400645e8
   140021c17:	cmp    rax,rbx
   140021c1a:	mov    QWORD PTR [rip+0x6a007],rax        # 0x14008bc28
   140021c21:	je     0x140021ccd
   140021c27:	lea    rdx,[rip+0x4762a]        # 0x140069258
   140021c2e:	mov    rcx,rdi
   140021c31:	call   QWORD PTR [rip+0x429b1]        # 0x1400645e8
   140021c37:	cmp    rax,rbx
   140021c3a:	mov    QWORD PTR [rip+0x69fef],rax        # 0x14008bc30
   140021c41:	je     0x140021ccd
   140021c47:	lea    rdx,[rip+0x475f2]        # 0x140069240
   140021c4e:	mov    rcx,rdi
   140021c51:	call   QWORD PTR [rip+0x42991]        # 0x1400645e8
   140021c57:	cmp    rax,rbx
   140021c5a:	mov    QWORD PTR [rip+0x69fd7],rax        # 0x14008bc38
   140021c61:	je     0x140021ccd
   140021c63:	lea    rdx,[rip+0x475be]        # 0x140069228
   140021c6a:	mov    rcx,rdi
   140021c6d:	call   QWORD PTR [rip+0x42975]        # 0x1400645e8
   140021c73:	cmp    rax,rbx
   140021c76:	mov    QWORD PTR [rip+0x69fcb],rax        # 0x14008bc48
   140021c7d:	je     0x140021ccd
   140021c7f:	lea    rdx,[rip+0x4758a]        # 0x140069210
   140021c86:	mov    rcx,rdi
   140021c89:	call   QWORD PTR [rip+0x42959]        # 0x1400645e8
   140021c8f:	cmp    rax,rbx
   140021c92:	mov    QWORD PTR [rip+0x69fb7],rax        # 0x14008bc50
   140021c99:	je     0x140021ccd
   140021c9b:	cmp    DWORD PTR [rip+0x69fbb],ebx        # 0x14008bc5c
   140021ca1:	mov    rcx,rdi
   140021ca4:	lea    rdx,[rip+0x47555]        # 0x140069200
   140021cab:	jne    0x140021cb4
   140021cad:	lea    rdx,[rip+0x4753c]        # 0x1400691f0
   140021cb4:	call   QWORD PTR [rip+0x4292e]        # 0x1400645e8
   140021cba:	cmp    rax,rbx
   140021cbd:	mov    QWORD PTR [rip+0x69f7c],rax        # 0x14008bc40
   140021cc4:	je     0x140021ccd
   140021cc6:	mov    ebx,0x1
   140021ccb:	jmp    0x140021cfe
   140021ccd:	mov    QWORD PTR [rip+0x69f4c],rbx        # 0x14008bc20
   140021cd4:	mov    QWORD PTR [rip+0x69f4d],rbx        # 0x14008bc28
   140021cdb:	mov    QWORD PTR [rip+0x69f4e],rbx        # 0x14008bc30
   140021ce2:	mov    QWORD PTR [rip+0x69f4f],rbx        # 0x14008bc38
   140021ce9:	mov    QWORD PTR [rip+0x69f50],rbx        # 0x14008bc40
   140021cf0:	mov    QWORD PTR [rip+0x69f51],rbx        # 0x14008bc48
   140021cf7:	mov    QWORD PTR [rip+0x69f52],rbx        # 0x14008bc50
   140021cfe:	mov    DWORD PTR [rip+0x69f50],0x1        # 0x14008bc58
   140021d08:	mov    eax,ebx
   140021d0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140021d0f:	add    rsp,0x20
   140021d13:	pop    rdi
   140021d14:	ret    
   140021d15:	int3   
   140021d16:	int3   
   140021d17:	int3   
   140021d18:	mov    QWORD PTR [rsp+0x8],rbx
   140021d1d:	push   rdi
   140021d1e:	sub    rsp,0x20
   140021d22:	mov    edi,edx
   140021d24:	mov    rbx,rcx
   140021d27:	call   0x140021ba0
   140021d2c:	test   eax,eax
   140021d2e:	je     0x140021d3d
   140021d30:	mov    edx,edi
   140021d32:	mov    rcx,rbx
   140021d35:	call   QWORD PTR [rip+0x69ef5]        # 0x14008bc30
   140021d3b:	jmp    0x140021d79
   140021d3d:	test   dil,0x3
   140021d41:	jne    0x140021d6f
   140021d43:	cmp    DWORD PTR [rbx+0x8],0x0
   140021d47:	jle    0x140021d6b
   140021d49:	cmp    DWORD PTR [rbx+0xc],0x0
   140021d4d:	jle    0x140021d6b
   140021d4f:	xor    ecx,ecx
   140021d51:	call   QWORD PTR [rip+0x42de9]        # 0x140064b40
   140021d57:	cmp    DWORD PTR [rbx],eax
   140021d59:	jge    0x140021d6b
   140021d5b:	mov    ecx,0x1
   140021d60:	call   QWORD PTR [rip+0x42dda]        # 0x140064b40
   140021d66:	cmp    DWORD PTR [rbx+0x4],eax
   140021d69:	jl     0x140021d6f
   140021d6b:	xor    eax,eax
   140021d6d:	jmp    0x140021d79
   140021d6f:	movabs rax,0x12340042
   140021d79:	mov    rbx,QWORD PTR [rsp+0x30]
   140021d7e:	add    rsp,0x20
   140021d82:	pop    rdi
   140021d83:	ret    
   140021d84:	mov    QWORD PTR [rsp+0x8],rbx
   140021d89:	push   rdi
   140021d8a:	sub    rsp,0x50
   140021d8e:	mov    ebx,edx
   140021d90:	mov    rdi,rcx
   140021d93:	call   0x140021ba0
   140021d98:	test   eax,eax
   140021d9a:	je     0x140021da9
   140021d9c:	mov    edx,ebx
   140021d9e:	mov    rcx,rdi
   140021da1:	call   QWORD PTR [rip+0x69e81]        # 0x14008bc28
   140021da7:	jmp    0x140021df6
   140021da9:	test   bl,0x3
   140021dac:	je     0x140021dba
   140021dae:	movabs rax,0x12340042
   140021db8:	jmp    0x140021df6
   140021dba:	mov    rcx,rdi
   140021dbd:	call   QWORD PTR [rip+0x42da5]        # 0x140064b68
   140021dc3:	mov    rcx,rdi
   140021dc6:	test   eax,eax
   140021dc8:	je     0x140021dd7
   140021dca:	lea    rdx,[rsp+0x20]
   140021dcf:	call   QWORD PTR [rip+0x42dab]        # 0x140064b80
   140021dd5:	jmp    0x140021de2
   140021dd7:	lea    rdx,[rsp+0x3c]
   140021ddc:	call   QWORD PTR [rip+0x42b76]        # 0x140064958
   140021de2:	test   eax,eax
   140021de4:	je     0x140021df4
   140021de6:	lea    rcx,[rsp+0x3c]
   140021deb:	mov    edx,ebx
   140021ded:	call   0x140021d18
   140021df2:	jmp    0x140021df6
   140021df4:	xor    eax,eax
   140021df6:	mov    rbx,QWORD PTR [rsp+0x60]
   140021dfb:	add    rsp,0x50
   140021dff:	pop    rdi
   140021e00:	ret    
   140021e01:	int3   
   140021e02:	int3   
   140021e03:	int3   
   140021e04:	mov    QWORD PTR [rsp+0x8],rbx
   140021e09:	push   rdi
   140021e0a:	sub    rsp,0x40
   140021e0e:	mov    rbx,rdx
   140021e11:	mov    rdi,rcx
   140021e14:	call   0x140021ba0
   140021e19:	test   eax,eax
   140021e1b:	je     0x140021e60
   140021e1d:	mov    rdx,rbx
   140021e20:	mov    rcx,rdi
   140021e23:	call   QWORD PTR [rip+0x69e17]        # 0x14008bc40
   140021e29:	test   eax,eax
   140021e2b:	mov    edi,eax
   140021e2d:	je     0x140021e5c
   140021e2f:	cmp    DWORD PTR [rip+0x69e26],0x0        # 0x14008bc5c
   140021e36:	jne    0x140021e5c
   140021e38:	cmp    DWORD PTR [rbx],0x68
   140021e3b:	jb     0x140021e5c
   140021e3d:	lea    r8,[rbx+0x28]
   140021e41:	mov    DWORD PTR [rsp+0x28],0x20
   140021e49:	mov    QWORD PTR [rsp+0x20],r8
   140021e4e:	or     r9d,0xffffffff
   140021e52:	xor    edx,edx
   140021e54:	xor    ecx,ecx
   140021e56:	call   QWORD PTR [rip+0x427bc]        # 0x140064618
   140021e5c:	mov    eax,edi
   140021e5e:	jmp    0x140021edf
   140021e60:	cmp    rdi,0x12340042
   140021e67:	jne    0x140021edd
   140021e69:	test   rbx,rbx
   140021e6c:	je     0x140021edd
   140021e6e:	cmp    DWORD PTR [rbx],0x28
   140021e71:	jb     0x140021edd
   140021e73:	xor    edx,edx
   140021e75:	lea    r8,[rsp+0x30]
   140021e7a:	xor    r9d,r9d
   140021e7d:	lea    ecx,[rdx+0x30]
   140021e80:	call   QWORD PTR [rip+0x42aca]        # 0x140064950
   140021e86:	test   eax,eax
   140021e88:	je     0x140021edd
   140021e8a:	and    DWORD PTR [rbx+0x4],0x0
   140021e8e:	and    DWORD PTR [rbx+0x8],0x0
   140021e92:	xor    ecx,ecx
   140021e94:	call   QWORD PTR [rip+0x42ca6]        # 0x140064b40
   140021e9a:	mov    edi,0x1
   140021e9f:	mov    ecx,edi
   140021ea1:	mov    DWORD PTR [rbx+0xc],eax
   140021ea4:	call   QWORD PTR [rip+0x42c96]        # 0x140064b40
   140021eaa:	cmp    DWORD PTR [rbx],0x68
   140021ead:	mov    DWORD PTR [rbx+0x24],edi
   140021eb0:	movdqu xmm0,XMMWORD PTR [rsp+0x30]
   140021eb6:	movdqu XMMWORD PTR [rbx+0x14],xmm0
   140021ebb:	mov    DWORD PTR [rbx+0x10],eax
   140021ebe:	jb     0x140021e5c
   140021ec0:	lea    rcx,[rbx+0x28]
   140021ec4:	mov    DWORD PTR [rsp+0x28],0x20
   140021ecc:	lea    r8,[rip+0x473d5]        # 0x1400692a8
   140021ed3:	mov    QWORD PTR [rsp+0x20],rcx
   140021ed8:	jmp    0x140021e4e
   140021edd:	xor    eax,eax
   140021edf:	mov    rbx,QWORD PTR [rsp+0x50]
   140021ee4:	add    rsp,0x40
   140021ee8:	pop    rdi
   140021ee9:	ret    
   140021eea:	int3   
   140021eeb:	int3   
   140021eec:	mov    rax,rsp
   140021eef:	mov    QWORD PTR [rax+0x10],rbx
   140021ef3:	mov    QWORD PTR [rax+0x18],rbp
   140021ef7:	push   rsi
   140021ef8:	push   rdi
   140021ef9:	push   r12
   140021efb:	push   r13
   140021efd:	push   r15
   140021eff:	sub    rsp,0xd0
   140021f06:	and    WORD PTR [rax-0x48],0x0
   140021f0b:	test   rcx,rcx
   140021f0e:	mov    r13d,edx
   140021f11:	mov    rbp,rcx
   140021f14:	jne    0x140021f20
   140021f16:	mov    eax,0x80070057
   140021f1b:	jmp    0x140022748
   140021f20:	mov    rdi,QWORD PTR [rsp+0x128]
   140021f28:	test   rdi,rdi
   140021f2b:	jne    0x140021f37
   140021f2d:	mov    eax,0x80020008
   140021f32:	jmp    0x140022748
   140021f37:	mov    r8d,DWORD PTR [rdi+0x10]
   140021f3b:	cmp    r8d,0x5
   140021f3f:	jbe    0x140021f4b
   140021f41:	mov    eax,0x8002000e
   140021f46:	jmp    0x140022748
   140021f4b:	xor    r9d,r9d
   140021f4e:	cmp    DWORD PTR [rdi+0x14],r9d
   140021f52:	lea    r15d,[r9+0x1]
   140021f56:	jbe    0x140021f81
   140021f58:	mov    r10,QWORD PTR [rdi+0x8]
   140021f5c:	cmp    DWORD PTR [r10],r8d
   140021f5f:	jae    0x140021f41
   140021f61:	mov    rax,QWORD PTR [rdi]
   140021f64:	lea    rcx,[r9+r9*2]
   140021f68:	add    r9d,r15d
   140021f6b:	lea    rdx,[rax+rcx*8]
   140021f6f:	movsxd rax,DWORD PTR [r10]
   140021f72:	add    r10,0x4
   140021f76:	cmp    r9d,DWORD PTR [rdi+0x14]
   140021f7a:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   140021f7f:	jb     0x140021f5c
   140021f81:	cmp    r9d,r8d
   140021f84:	jae    0x140021fab
   140021f86:	mov    rax,QWORD PTR [rdi]
   140021f89:	lea    rcx,[r9+r9*2]
   140021f8d:	lea    rdx,[rax+rcx*8]
   140021f91:	mov    eax,r8d
   140021f94:	sub    eax,r9d
   140021f97:	add    r9d,r15d
   140021f9a:	sub    eax,r15d
   140021f9d:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   140021fa2:	add    rdx,0x18
   140021fa6:	cmp    r9d,r8d
   140021fa9:	jb     0x140021f91
   140021fab:	mov    rax,QWORD PTR [rsp+0x140]
   140021fb3:	lea    r12,[rsp+0x100]
   140021fbb:	lea    rsi,[rsp+0xb0]
   140021fc3:	test   rax,rax
   140021fc6:	lea    rcx,[rsp+0x78]
   140021fcb:	mov    ebx,0x80020003
   140021fd0:	cmovne r12,rax
   140021fd4:	mov    rax,QWORD PTR [rsp+0x130]
   140021fdc:	test   rax,rax
   140021fdf:	cmovne rsi,rax
   140021fe3:	call   QWORD PTR [rip+0x42667]        # 0x140064650
   140021fe9:	lea    r11d,[r13+0x139a]
   140021ff0:	cmp    r11d,0x12
   140021ff4:	ja     0x14002273b
   140021ffa:	lea    rdx,[rip+0xfffffffffffddfff]        # 0x140000000
   140022001:	movsxd rax,r11d
   140022004:	mov    ecx,DWORD PTR [rdx+rax*4+0x22764]
   14002200b:	movzx  eax,WORD PTR [rsp+0x120]
   140022013:	add    rcx,rdx
   140022016:	jmp    rcx
   140022018:	cmp    DWORD PTR [rdi+0x10],r15d
   14002201c:	jne    0x1400226c5
   140022022:	mov    rcx,QWORD PTR [rsp+0x50]
   140022027:	lea    rdx,[rsp+0x30]
   14002202c:	mov    rax,QWORD PTR [rcx]
   14002202f:	mov    QWORD PTR [rdx],rax
   140022032:	mov    rax,QWORD PTR [rcx+0x8]
   140022036:	mov    QWORD PTR [rdx+0x8],rax
   14002203a:	mov    rax,QWORD PTR [rcx+0x10]
   14002203e:	mov    rcx,rbp
   140022041:	mov    QWORD PTR [rdx+0x10],rax
   140022045:	mov    rax,QWORD PTR [rbp+0x0]
   140022049:	lea    rdx,[rsp+0x30]
   14002204e:	call   QWORD PTR [rax+0xc8]
   140022054:	jmp    0x1400226bb
   140022059:	cmp    DWORD PTR [rdi+0x10],0x2
   14002205d:	jne    0x1400226c5
   140022063:	mov    rax,QWORD PTR [rsp+0x50]
   140022068:	cmp    WORD PTR [rax],0x3
   14002206c:	je     0x140022093
   14002206e:	lea    rcx,[rsp+0x78]
   140022073:	mov    r9w,0x3
   140022078:	xor    r8d,r8d
   14002207b:	mov    rdx,rax
   14002207e:	call   QWORD PTR [rip+0x42614]        # 0x140064698
   140022084:	test   eax,eax
   140022086:	mov    ebx,eax
   140022088:	js     0x140022345
   14002208e:	lea    rax,[rsp+0x78]
   140022093:	mov    rcx,QWORD PTR [rsp+0x58]
   140022098:	mov    edi,DWORD PTR [rax+0x8]
   14002209b:	cmp    WORD PTR [rcx],0x3
   14002209f:	je     0x1400220c6
   1400220a1:	mov    rdx,rcx
   1400220a4:	lea    rcx,[rsp+0x78]
   1400220a9:	mov    r9w,0x3
   1400220ae:	xor    r8d,r8d
   1400220b1:	call   QWORD PTR [rip+0x425e1]        # 0x140064698
   1400220b7:	test   eax,eax
   1400220b9:	mov    ebx,eax
   1400220bb:	js     0x140022674
   1400220c1:	lea    rcx,[rsp+0x78]
   1400220c6:	mov    r8d,DWORD PTR [rcx+0x8]
   1400220ca:	mov    rax,QWORD PTR [rbp+0x0]
   1400220ce:	mov    r9,rsi
   1400220d1:	mov    edx,edi
   1400220d3:	mov    rcx,rbp
   1400220d6:	call   QWORD PTR [rax+0xc0]
   1400220dc:	jmp    0x1400226bb
   1400220e1:	cmp    DWORD PTR [rdi+0x10],0x2
   1400220e5:	jne    0x1400226c5
   1400220eb:	mov    rdx,QWORD PTR [rsp+0x50]
   1400220f0:	cmp    WORD PTR [rdx],0x3
   1400220f4:	je     0x140022118
   1400220f6:	lea    rcx,[rsp+0x78]
   1400220fb:	mov    r9w,0x3
   140022100:	xor    r8d,r8d
   140022103:	call   QWORD PTR [rip+0x4258f]        # 0x140064698
   140022109:	test   eax,eax
   14002210b:	mov    ebx,eax
   14002210d:	js     0x140022345
   140022113:	lea    rdx,[rsp+0x78]
   140022118:	mov    rcx,QWORD PTR [rsp+0x58]
   14002211d:	mov    edx,DWORD PTR [rdx+0x8]
   140022120:	lea    r8,[rsp+0x30]
   140022125:	mov    rax,QWORD PTR [rcx]
   140022128:	mov    r9,rsi
   14002212b:	mov    QWORD PTR [r8],rax
   14002212e:	mov    rax,QWORD PTR [rcx+0x8]
   140022132:	mov    QWORD PTR [r8+0x8],rax
   140022136:	mov    rax,QWORD PTR [rcx+0x10]
   14002213a:	mov    rcx,rbp
   14002213d:	mov    QWORD PTR [r8+0x10],rax
   140022141:	mov    rax,QWORD PTR [rbp+0x0]
   140022145:	lea    r8,[rsp+0x30]
   14002214a:	call   QWORD PTR [rax+0xb8]
   140022150:	jmp    0x1400226bb
   140022155:	cmp    DWORD PTR [rdi+0x10],0x5
   140022159:	jne    0x1400226c5
   14002215f:	mov    rbx,QWORD PTR [rsp+0x50]
   140022164:	mov    rdx,QWORD PTR [rsp+0x90]
   14002216c:	bt     WORD PTR [rbx],0xe
   140022171:	jae    0x1400221a1
   140022173:	test   BYTE PTR [rbx],0xf
   140022176:	je     0x1400221a1
   140022178:	test   BYTE PTR [rbx],0xc
   14002217b:	je     0x14002219b
   14002217d:	mov    rcx,QWORD PTR [rbx+0x8]
   140022181:	call   QWORD PTR [rip+0x42519]        # 0x1400646a0
   140022187:	mov    r11,QWORD PTR [rbx+0x8]
   14002218b:	mov    WORD PTR [r11],0x3
   140022191:	mov    rdx,QWORD PTR [rbx+0x8]
   140022195:	add    rdx,0x8
   140022199:	jmp    0x14002216c
   14002219b:	mov    rdx,QWORD PTR [rbx+0x8]
   14002219f:	jmp    0x14002216c
   1400221a1:	and    DWORD PTR [r12],0x0
   1400221a6:	mov    rcx,QWORD PTR [rsp+0x70]
   1400221ab:	mov    r10,QWORD PTR [rbp+0x0]
   1400221af:	mov    rax,QWORD PTR [rcx]
   1400221b2:	mov    r9,QWORD PTR [rsp+0xa0]
   1400221ba:	lea    r8,[rsp+0x30]
   1400221bf:	mov    QWORD PTR [r8],rax
   1400221c2:	mov    rax,QWORD PTR [rcx+0x8]
   1400221c6:	mov    QWORD PTR [r8+0x8],rax
   1400221ca:	mov    rax,QWORD PTR [rcx+0x10]
   1400221ce:	mov    rcx,rbp
   1400221d1:	mov    QWORD PTR [r8+0x10],rax
   1400221d5:	mov    r8,QWORD PTR [rsp+0x98]
   1400221dd:	lea    rax,[rsp+0x30]
   1400221e2:	mov    QWORD PTR [rsp+0x28],rax
   1400221e7:	mov    rax,QWORD PTR [rsp+0xa8]
   1400221ef:	mov    QWORD PTR [rsp+0x20],rax
   1400221f4:	call   QWORD PTR [r10+0xb0]
   1400221fb:	jmp    0x1400226bb
   140022200:	cmp    DWORD PTR [rdi+0x10],0x2
   140022204:	jne    0x1400226c5
   14002220a:	mov    rdx,QWORD PTR [rsp+0x50]
   14002220f:	cmp    WORD PTR [rdx],0x3
   140022213:	je     0x140022237
   140022215:	lea    rcx,[rsp+0x78]
   14002221a:	mov    r9w,0x3
   14002221f:	xor    r8d,r8d
   140022222:	call   QWORD PTR [rip+0x42470]        # 0x140064698
   140022228:	test   eax,eax
   14002222a:	mov    ebx,eax
   14002222c:	js     0x140022345
   140022232:	lea    rdx,[rsp+0x78]
   140022237:	mov    rcx,QWORD PTR [rsp+0x58]
   14002223c:	mov    edx,DWORD PTR [rdx+0x8]
   14002223f:	lea    r8,[rsp+0x30]
   140022244:	mov    rax,QWORD PTR [rcx]
   140022247:	mov    QWORD PTR [r8],rax
   14002224a:	mov    rax,QWORD PTR [rcx+0x8]
   14002224e:	mov    QWORD PTR [r8+0x8],rax
   140022252:	mov    rax,QWORD PTR [rcx+0x10]
   140022256:	mov    rcx,rbp
   140022259:	mov    QWORD PTR [r8+0x10],rax
   14002225d:	mov    rax,QWORD PTR [rbp+0x0]
   140022261:	lea    r8,[rsp+0x30]
   140022266:	call   QWORD PTR [rax+0xa8]
   14002226c:	jmp    0x1400226bb
   140022271:	cmp    DWORD PTR [rdi+0x10],r15d
   140022275:	jne    0x1400226c5
   14002227b:	mov    rcx,QWORD PTR [rsp+0x50]
   140022280:	lea    rdx,[rsp+0x30]
   140022285:	lea    r8,[rsi+0x8]
   140022289:	mov    rax,QWORD PTR [rcx]
   14002228c:	mov    QWORD PTR [rdx],rax
   14002228f:	mov    rax,QWORD PTR [rcx+0x8]
   140022293:	mov    QWORD PTR [rdx+0x8],rax
   140022297:	mov    rax,QWORD PTR [rcx+0x10]
   14002229b:	mov    rcx,rbp
   14002229e:	mov    QWORD PTR [rdx+0x10],rax
   1400222a2:	mov    rax,QWORD PTR [rbp+0x0]
   1400222a6:	lea    rdx,[rsp+0x30]
   1400222ab:	call   QWORD PTR [rax+0xa0]
   1400222b1:	jmp    0x140022604
   1400222b6:	mov    rax,QWORD PTR [rbp+0x0]
   1400222ba:	mov    rdx,rsi
   1400222bd:	mov    rcx,rbp
   1400222c0:	call   QWORD PTR [rax+0x98]
   1400222c6:	jmp    0x1400226bb
   1400222cb:	mov    rax,QWORD PTR [rbp+0x0]
   1400222cf:	mov    rdx,rsi
   1400222d2:	mov    rcx,rbp
   1400222d5:	call   QWORD PTR [rax+0x90]
   1400222db:	jmp    0x1400226bb
   1400222e0:	cmp    DWORD PTR [rdi+0x10],r15d
   1400222e4:	jne    0x1400226c5
   1400222ea:	mov    rcx,QWORD PTR [rsp+0x50]
   1400222ef:	lea    rdx,[rsp+0x30]
   1400222f4:	lea    r8,[rsi+0x8]
   1400222f8:	mov    rax,QWORD PTR [rcx]
   1400222fb:	mov    QWORD PTR [rdx],rax
   1400222fe:	mov    rax,QWORD PTR [rcx+0x8]
   140022302:	mov    QWORD PTR [rdx+0x8],rax
   140022306:	mov    rax,QWORD PTR [rcx+0x10]
   14002230a:	mov    rcx,rbp
   14002230d:	mov    QWORD PTR [rdx+0x10],rax
   140022311:	mov    rax,QWORD PTR [rbp+0x0]
   140022315:	lea    rdx,[rsp+0x30]
   14002231a:	call   QWORD PTR [rax+0x88]
   140022320:	jmp    0x140022604
   140022325:	cmp    DWORD PTR [rdi+0x10],0x2
   140022329:	jne    0x1400226c5
   14002232f:	mov    rbx,QWORD PTR [rsp+0x50]
   140022334:	bt     WORD PTR [rbx],0xe
   140022339:	jae    0x14002234f
   14002233b:	test   BYTE PTR [rbx],0xc
   14002233e:	jne    0x14002234f
   140022340:	mov    ebx,0x80020005
   140022345:	and    DWORD PTR [r12],0x0
   14002234a:	jmp    0x14002273b
   14002234f:	cmp    WORD PTR [rbx],0x400c
   140022354:	jne    0x140022374
   140022356:	mov    rcx,QWORD PTR [rbx+0x8]
   14002235a:	call   QWORD PTR [rip+0x42340]        # 0x1400646a0
   140022360:	mov    r11,QWORD PTR [rbx+0x8]
   140022364:	mov    WORD PTR [r11],0x8
   14002236a:	mov    rdx,QWORD PTR [rbx+0x8]
   14002236e:	add    rdx,0x8
   140022372:	jmp    0x140022393
   140022374:	cmp    WORD PTR [rbx],0x4008
   140022379:	jne    0x140022381
   14002237b:	mov    rdx,QWORD PTR [rbx+0x8]
   14002237f:	jmp    0x140022393
   140022381:	mov    rcx,rbx
   140022384:	call   QWORD PTR [rip+0x42316]        # 0x1400646a0
   14002238a:	lea    rdx,[rbx+0x8]
   14002238e:	mov    WORD PTR [rbx],0x8
   140022393:	mov    rcx,QWORD PTR [rsp+0x58]
   140022398:	lea    r8,[rsp+0x30]
   14002239d:	lea    r9,[rsi+0x8]
   1400223a1:	mov    rax,QWORD PTR [rcx]
   1400223a4:	mov    QWORD PTR [r8],rax
   1400223a7:	mov    rax,QWORD PTR [rcx+0x8]
   1400223ab:	mov    QWORD PTR [r8+0x8],rax
   1400223af:	mov    rax,QWORD PTR [rcx+0x10]
   1400223b3:	mov    rcx,rbp
   1400223b6:	mov    QWORD PTR [r8+0x10],rax
   1400223ba:	mov    rax,QWORD PTR [rbp+0x0]
   1400223be:	lea    r8,[rsp+0x30]
   1400223c3:	call   QWORD PTR [rax+0x80]
   1400223c9:	jmp    0x140022715
   1400223ce:	cmp    DWORD PTR [rdi+0x10],r15d
   1400223d2:	jne    0x1400226c5
   1400223d8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400223dd:	lea    rdx,[rsp+0x30]
   1400223e2:	lea    r8,[rsi+0x8]
   1400223e6:	mov    rax,QWORD PTR [rcx]
   1400223e9:	mov    QWORD PTR [rdx],rax
   1400223ec:	mov    rax,QWORD PTR [rcx+0x8]
   1400223f0:	mov    QWORD PTR [rdx+0x8],rax
   1400223f4:	mov    rax,QWORD PTR [rcx+0x10]
   1400223f8:	mov    rcx,rbp
   1400223fb:	mov    QWORD PTR [rdx+0x10],rax
   1400223ff:	mov    rax,QWORD PTR [rbp+0x0]
   140022403:	lea    rdx,[rsp+0x30]
   140022408:	call   QWORD PTR [rax+0x78]
   14002240b:	jmp    0x140022604
   140022410:	cmp    DWORD PTR [rdi+0x10],r15d
   140022414:	jne    0x1400226c5
   14002241a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002241f:	lea    rdx,[rsp+0x30]
   140022424:	mov    r8,rsi
   140022427:	mov    rax,QWORD PTR [rcx]
   14002242a:	mov    QWORD PTR [rdx],rax
   14002242d:	mov    rax,QWORD PTR [rcx+0x8]
   140022431:	mov    QWORD PTR [rdx+0x8],rax
   140022435:	mov    rax,QWORD PTR [rcx+0x10]
   140022439:	mov    rcx,rbp
   14002243c:	mov    QWORD PTR [rdx+0x10],rax
   140022440:	mov    rax,QWORD PTR [rbp+0x0]
   140022444:	lea    rdx,[rsp+0x30]
   140022449:	call   QWORD PTR [rax+0x70]
   14002244c:	jmp    0x1400226bb
   140022451:	cmp    DWORD PTR [rdi+0x10],r15d
   140022455:	jne    0x1400226c5
   14002245b:	mov    rcx,QWORD PTR [rsp+0x50]
   140022460:	lea    rdx,[rsp+0x30]
   140022465:	mov    r8,rsi
   140022468:	mov    rax,QWORD PTR [rcx]
   14002246b:	mov    QWORD PTR [rdx],rax
   14002246e:	mov    rax,QWORD PTR [rcx+0x8]
   140022472:	mov    QWORD PTR [rdx+0x8],rax
   140022476:	mov    rax,QWORD PTR [rcx+0x10]
   14002247a:	mov    rcx,rbp
   14002247d:	mov    QWORD PTR [rdx+0x10],rax
   140022481:	mov    rax,QWORD PTR [rbp+0x0]
   140022485:	lea    rdx,[rsp+0x30]
   14002248a:	call   QWORD PTR [rax+0x68]
   14002248d:	jmp    0x1400226bb
   140022492:	cmp    DWORD PTR [rdi+0x10],r15d
   140022496:	jne    0x1400226c5
   14002249c:	mov    rcx,QWORD PTR [rsp+0x50]
   1400224a1:	lea    rdx,[rsp+0x30]
   1400224a6:	lea    r8,[rsi+0x8]
   1400224aa:	mov    rax,QWORD PTR [rcx]
   1400224ad:	mov    QWORD PTR [rdx],rax
   1400224b0:	mov    rax,QWORD PTR [rcx+0x8]
   1400224b4:	mov    QWORD PTR [rdx+0x8],rax
   1400224b8:	mov    rax,QWORD PTR [rcx+0x10]
   1400224bc:	mov    rcx,rbp
   1400224bf:	mov    QWORD PTR [rdx+0x10],rax
   1400224c3:	mov    rax,QWORD PTR [rbp+0x0]
   1400224c7:	lea    rdx,[rsp+0x30]
   1400224cc:	call   QWORD PTR [rax+0x60]
   1400224cf:	jmp    0x140022604
   1400224d4:	test   al,0x2
   1400224d6:	je     0x14002251a
   1400224d8:	cmp    DWORD PTR [rdi+0x10],r15d
   1400224dc:	jne    0x1400226c5
   1400224e2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400224e7:	lea    rdx,[rsp+0x30]
   1400224ec:	lea    r8,[rsi+0x8]
   1400224f0:	mov    rax,QWORD PTR [rcx]
   1400224f3:	mov    QWORD PTR [rdx],rax
   1400224f6:	mov    rax,QWORD PTR [rcx+0x8]
   1400224fa:	mov    QWORD PTR [rdx+0x8],rax
   1400224fe:	mov    rax,QWORD PTR [rcx+0x10]
   140022502:	mov    rcx,rbp
   140022505:	mov    QWORD PTR [rdx+0x10],rax
   140022509:	mov    rax,QWORD PTR [rbp+0x0]
   14002250d:	lea    rdx,[rsp+0x30]
   140022512:	call   QWORD PTR [rax+0x58]
   140022515:	jmp    0x140022604
   14002251a:	test   al,0x4
   14002251c:	je     0x1400225bd
   140022522:	cmp    DWORD PTR [rdi+0x10],0x2
   140022526:	jne    0x1400226c5
   14002252c:	mov    rcx,QWORD PTR [rsp+0x50]
   140022531:	lea    rdx,[rsp+0x30]
   140022536:	mov    rax,QWORD PTR [rcx]
   140022539:	mov    QWORD PTR [rdx],rax
   14002253c:	mov    rax,QWORD PTR [rcx+0x8]
   140022540:	mov    QWORD PTR [rdx+0x8],rax
   140022544:	mov    rax,QWORD PTR [rcx+0x10]
   140022548:	mov    rcx,QWORD PTR [rsp+0x58]
   14002254d:	cmp    WORD PTR [rcx],0x8
   140022551:	mov    QWORD PTR [rdx+0x10],rax
   140022555:	je     0x14002257c
   140022557:	mov    rdx,rcx
   14002255a:	lea    rcx,[rsp+0x78]
   14002255f:	mov    r9w,0x3
   140022564:	xor    r8d,r8d
   140022567:	call   QWORD PTR [rip+0x4212b]        # 0x140064698
   14002256d:	test   eax,eax
   14002256f:	mov    ebx,eax
   140022571:	js     0x140022674
   140022577:	lea    rcx,[rsp+0x78]
   14002257c:	lea    rdx,[rsp+0x30]
   140022581:	lea    r8,[rsp+0x90]
   140022589:	mov    rax,QWORD PTR [rdx]
   14002258c:	mov    QWORD PTR [r8],rax
   14002258f:	mov    rax,QWORD PTR [rdx+0x8]
   140022593:	mov    QWORD PTR [r8+0x8],rax
   140022597:	mov    rax,QWORD PTR [rdx+0x10]
   14002259b:	lea    rdx,[rsp+0x90]
   1400225a3:	mov    QWORD PTR [r8+0x10],rax
   1400225a7:	mov    r8,QWORD PTR [rcx+0x8]
   1400225ab:	mov    rax,QWORD PTR [rbp+0x0]
   1400225af:	mov    rcx,rbp
   1400225b2:	call   QWORD PTR [rax+0xd8]
   1400225b8:	jmp    0x1400226bb
   1400225bd:	test   al,0x2
   1400225bf:	je     0x140022618
   1400225c1:	cmp    DWORD PTR [rdi+0x10],r15d
   1400225c5:	jne    0x1400226c5
   1400225cb:	mov    rcx,QWORD PTR [rsp+0x50]
   1400225d0:	lea    rdx,[rsp+0x90]
   1400225d8:	lea    r8,[rsi+0x8]
   1400225dc:	mov    rax,QWORD PTR [rcx]
   1400225df:	mov    QWORD PTR [rdx],rax
   1400225e2:	mov    rax,QWORD PTR [rcx+0x8]
   1400225e6:	mov    QWORD PTR [rdx+0x8],rax
   1400225ea:	mov    rax,QWORD PTR [rcx+0x10]
   1400225ee:	mov    rcx,rbp
   1400225f1:	mov    QWORD PTR [rdx+0x10],rax
   1400225f5:	mov    rax,QWORD PTR [rbp+0x0]
   1400225f9:	lea    rdx,[rsp+0x90]
   140022601:	call   QWORD PTR [rax+0x50]
   140022604:	test   eax,eax
   140022606:	mov    ebx,eax
   140022608:	js     0x14002273b
   14002260e:	mov    WORD PTR [rsi],0x8
   140022613:	jmp    0x14002273b
   140022618:	test   al,0x4
   14002261a:	je     0x1400226bf
   140022620:	cmp    DWORD PTR [rdi+0x10],0x2
   140022624:	jne    0x1400226c5
   14002262a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002262f:	lea    rdx,[rsp+0x90]
   140022637:	mov    rax,QWORD PTR [rcx]
   14002263a:	mov    QWORD PTR [rdx],rax
   14002263d:	mov    rax,QWORD PTR [rcx+0x8]
   140022641:	mov    QWORD PTR [rdx+0x8],rax
   140022645:	mov    rax,QWORD PTR [rcx+0x10]
   140022649:	mov    rcx,QWORD PTR [rsp+0x58]
   14002264e:	cmp    WORD PTR [rcx],0x8
   140022652:	mov    QWORD PTR [rdx+0x10],rax
   140022656:	je     0x140022682
   140022658:	mov    rdx,rcx
   14002265b:	lea    rcx,[rsp+0x78]
   140022660:	mov    r9w,0x3
   140022665:	xor    r8d,r8d
   140022668:	call   QWORD PTR [rip+0x4202a]        # 0x140064698
   14002266e:	test   eax,eax
   140022670:	mov    ebx,eax
   140022672:	jns    0x14002267d
   140022674:	mov    DWORD PTR [r12],r15d
   140022678:	jmp    0x14002273b
   14002267d:	lea    rcx,[rsp+0x78]
   140022682:	lea    rdx,[rsp+0x90]
   14002268a:	lea    r8,[rsp+0x30]
   14002268f:	mov    rax,QWORD PTR [rdx]
   140022692:	mov    QWORD PTR [r8],rax
   140022695:	mov    rax,QWORD PTR [rdx+0x8]
   140022699:	mov    QWORD PTR [r8+0x8],rax
   14002269d:	mov    rax,QWORD PTR [rdx+0x10]
   1400226a1:	lea    rdx,[rsp+0x30]
   1400226a6:	mov    QWORD PTR [r8+0x10],rax
   1400226aa:	mov    r8,QWORD PTR [rcx+0x8]
   1400226ae:	mov    rax,QWORD PTR [rbp+0x0]
   1400226b2:	mov    rcx,rbp
   1400226b5:	call   QWORD PTR [rax+0xd0]
   1400226bb:	mov    ebx,eax
   1400226bd:	jmp    0x14002273b
   1400226bf:	cmp    DWORD PTR [rdi+0x10],r15d
   1400226c3:	je     0x1400226cc
   1400226c5:	mov    ebx,0x8002000e
   1400226ca:	jmp    0x14002273b
   1400226cc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400226d1:	lea    rdx,[rsp+0x90]
   1400226d9:	lea    r8,[rsi+0x8]
   1400226dd:	mov    rax,QWORD PTR [rcx]
   1400226e0:	mov    QWORD PTR [rdx],rax
   1400226e3:	mov    rax,QWORD PTR [rcx+0x8]
   1400226e7:	mov    QWORD PTR [rdx+0x8],rax
   1400226eb:	mov    rax,QWORD PTR [rcx+0x10]
   1400226ef:	mov    rcx,rbp
   1400226f2:	mov    QWORD PTR [rdx+0x10],rax
   1400226f6:	mov    rax,QWORD PTR [rbp+0x0]
   1400226fa:	lea    rdx,[rsp+0x90]
   140022702:	call   QWORD PTR [rax+0x48]
   140022705:	jmp    0x140022730
   140022707:	mov    rax,QWORD PTR [rbp+0x0]
   14002270b:	lea    rdx,[rsi+0x8]
   14002270f:	mov    rcx,rbp
   140022712:	call   QWORD PTR [rax+0x40]
   140022715:	test   eax,eax
   140022717:	mov    ebx,eax
   140022719:	js     0x14002273b
   14002271b:	mov    WORD PTR [rsi],0x3
   140022720:	jmp    0x14002273b
   140022722:	mov    rax,QWORD PTR [rbp+0x0]
   140022726:	lea    rdx,[rsi+0x8]
   14002272a:	mov    rcx,rbp
   14002272d:	call   QWORD PTR [rax+0x38]
   140022730:	test   eax,eax
   140022732:	mov    ebx,eax
   140022734:	js     0x14002273b
   140022736:	mov    WORD PTR [rsi],0x9
   14002273b:	lea    rcx,[rsp+0x78]
   140022740:	call   QWORD PTR [rip+0x41f5a]        # 0x1400646a0
   140022746:	mov    eax,ebx
   140022748:	lea    r11,[rsp+0xd0]
   140022750:	mov    rbx,QWORD PTR [r11+0x38]
   140022754:	mov    rbp,QWORD PTR [r11+0x40]
   140022758:	mov    rsp,r11
   14002275b:	pop    r15
   14002275d:	pop    r13
   14002275f:	pop    r12
   140022761:	pop    rdi
   140022762:	pop    rsi
   140022763:	ret    
   140022764:	sbb    BYTE PTR [rax],ah
   140022766:	add    al,BYTE PTR [rax]
   140022768:	pop    rcx
   140022769:	and    BYTE PTR [rdx],al
   14002276b:	add    cl,ah
   14002276d:	and    BYTE PTR [rdx],al
   14002276f:	add    BYTE PTR [rbp+0x21],dl
   140022772:	add    al,BYTE PTR [rax]
   140022774:	add    BYTE PTR [rdx],ah
   140022776:	add    al,BYTE PTR [rax]
   140022778:	jno    0x14002279c
   14002277a:	add    al,BYTE PTR [rax]
   14002277c:	mov    dh,0x22
   14002277e:	add    al,BYTE PTR [rax]
   140022780:	retf   
   140022781:	and    al,BYTE PTR [rdx]
   140022783:	add    al,ah
   140022785:	and    al,BYTE PTR [rdx]
   140022787:	add    BYTE PTR [rip+0xffffffffce000223],ah        # 0x10e0229b0
   14002278d:	and    eax,DWORD PTR [rdx]
   14002278f:	add    BYTE PTR [rax],dl
   140022791:	and    al,0x2
   140022793:	add    BYTE PTR [rcx+0x24],dl
   140022796:	add    al,BYTE PTR [rax]
   140022798:	xchg   edx,eax
   140022799:	and    al,0x2
   14002279b:	add    ah,dl
   14002279d:	and    al,0x2
   14002279f:	add    BYTE PTR [rbp-0x40fffddb],bh
   1400227a5:	add    al,BYTE PTR es:[rax]
   1400227a8:	(bad)  
   1400227a9:	(bad)  
   1400227aa:	add    al,BYTE PTR [rax]
   1400227ac:	and    ah,BYTE PTR [rdi]
   1400227ae:	add    al,BYTE PTR [rax]
   1400227b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400227b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400227ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400227bf:	push   rdi
   1400227c0:	push   r12
   1400227c2:	push   r13
   1400227c4:	push   r14
   1400227c6:	push   r15
   1400227c8:	sub    rsp,0x20
   1400227cc:	xor    ebx,ebx
   1400227ce:	test   r8d,r8d
   1400227d1:	mov    r12d,r8d
   1400227d4:	mov    rsi,rdx
   1400227d7:	je     0x140022831
   1400227d9:	mov    rdi,QWORD PTR [rsp+0x70]
   1400227de:	xor    r14b,r14b
   1400227e1:	lea    rbp,[rip+0x63388]        # 0x140085b70
   1400227e8:	lea    r13,[rip+0x632e1]        # 0x140085ad0
   1400227ef:	mov    r15d,0x13
   1400227f5:	mov    rdx,QWORD PTR [r13+0x0]
   1400227f9:	mov    rcx,QWORD PTR [rsi]
   1400227fc:	call   QWORD PTR [rip+0x41d06]        # 0x140064508
   140022802:	test   eax,eax
   140022804:	jne    0x14002280e
   140022806:	mov    eax,DWORD PTR [rbp+0x0]
   140022809:	mov    r14b,0x1
   14002280c:	mov    DWORD PTR [rdi],eax
   14002280e:	add    r13,0x8
   140022812:	add    rbp,0x4
   140022816:	sub    r15,0x1
   14002281a:	jne    0x1400227f5
   14002281c:	test   r14b,r14b
   14002281f:	je     0x140022850
   140022821:	add    ebx,0x1
   140022824:	add    rsi,0x8
   140022828:	add    rdi,0x4
   14002282c:	cmp    ebx,r12d
   14002282f:	jb     0x1400227de
   140022831:	xor    eax,eax
   140022833:	mov    rbx,QWORD PTR [rsp+0x50]
   140022838:	mov    rbp,QWORD PTR [rsp+0x58]
   14002283d:	mov    rsi,QWORD PTR [rsp+0x60]
   140022842:	add    rsp,0x20
   140022846:	pop    r15
   140022848:	pop    r14
   14002284a:	pop    r13
   14002284c:	pop    r12
   14002284e:	pop    rdi
   14002284f:	ret    
   140022850:	mov    eax,0x80020006
   140022855:	jmp    0x140022833
   140022857:	int3   
   140022858:	mov    QWORD PTR [rsp+0x8],rbx
   14002285d:	push   rdi
   14002285e:	sub    rsp,0x20
   140022862:	mov    rbx,rdx
   140022865:	mov    rdi,rcx
   140022868:	call   0x14001c3e8
   14002286d:	lea    rax,[rip+0x46c44]        # 0x1400694b8
   140022874:	lea    r11,[rip+0x46d5d]        # 0x1400695d8
   14002287b:	mov    QWORD PTR [rdi],r11
   14002287e:	mov    QWORD PTR [rdi+0x60],rax
   140022882:	lea    rax,[rip+0x46d17]        # 0x1400695a0
   140022889:	mov    QWORD PTR [rdi+0x68],rax
   14002288d:	xor    eax,eax
   14002288f:	mov    QWORD PTR [rdi+0x40],rbx
   140022893:	mov    rbx,QWORD PTR [rsp+0x30]
   140022898:	mov    BYTE PTR [rdi+0x48],al
   14002289b:	mov    QWORD PTR [rdi+0x58],rax
   14002289f:	mov    QWORD PTR [rdi+0x70],rax
   1400228a3:	mov    DWORD PTR [rdi+0x78],eax
   1400228a6:	mov    QWORD PTR [rdi+0x80],rax
   1400228ad:	mov    DWORD PTR [rdi+0x88],eax
   1400228b3:	mov    QWORD PTR [rdi+0x90],rax
   1400228ba:	mov    QWORD PTR [rdi+0x98],rax
   1400228c1:	mov    QWORD PTR [rdi+0xa0],rax
   1400228c8:	mov    rax,rdi
   1400228cb:	add    rsp,0x20
   1400228cf:	pop    rdi
   1400228d0:	ret    
   1400228d1:	int3   
   1400228d2:	int3   
   1400228d3:	int3   
   1400228d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400228d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400228de:	mov    QWORD PTR [rsp+0x18],rsi
   1400228e3:	push   rdi
   1400228e4:	sub    rsp,0x40
   1400228e8:	mov    ebx,r9d
   1400228eb:	mov    esi,r8d
   1400228ee:	mov    ebp,edx
   1400228f0:	mov    rdi,rcx
   1400228f3:	call   QWORD PTR [rip+0x42107]        # 0x140064a00
   1400228f9:	not    esi
   1400228fb:	and    esi,eax
   1400228fd:	or     esi,ebx
   1400228ff:	cmp    eax,esi
   140022901:	jne    0x140022907
   140022903:	xor    eax,eax
   140022905:	jmp    0x140022948
   140022907:	mov    r8d,esi
   14002290a:	mov    edx,ebp
   14002290c:	mov    rcx,rdi
   14002290f:	call   QWORD PTR [rip+0x42023]        # 0x140064938
   140022915:	mov    r11d,DWORD PTR [rsp+0x70]
   14002291a:	test   r11d,r11d
   14002291d:	je     0x140022943
   14002291f:	or     r11d,0x17
   140022923:	xor    r9d,r9d
   140022926:	xor    r8d,r8d
   140022929:	mov    DWORD PTR [rsp+0x30],r11d
   14002292e:	and    DWORD PTR [rsp+0x28],0x0
   140022933:	and    DWORD PTR [rsp+0x20],0x0
   140022938:	xor    edx,edx
   14002293a:	mov    rcx,rdi
   14002293d:	call   QWORD PTR [rip+0x42055]        # 0x140064998
   140022943:	mov    eax,0x1
   140022948:	mov    rbx,QWORD PTR [rsp+0x50]
   14002294d:	mov    rbp,QWORD PTR [rsp+0x58]
   140022952:	mov    rsi,QWORD PTR [rsp+0x60]
   140022957:	add    rsp,0x40
   14002295b:	pop    rdi
   14002295c:	ret    
   14002295d:	int3   
   14002295e:	int3   
   14002295f:	int3   
   140022960:	sub    rsp,0x38
   140022964:	mov    DWORD PTR [rsp+0x20],r9d
   140022969:	mov    r9d,r8d
   14002296c:	mov    r8d,edx
   14002296f:	mov    edx,0xfffffff0
   140022974:	call   0x1400228d4
   140022979:	add    rsp,0x38
   14002297d:	ret    
   14002297e:	int3   
   14002297f:	int3   
   140022980:	sub    rsp,0x38
   140022984:	mov    DWORD PTR [rsp+0x20],r9d
   140022989:	mov    r9d,r8d
   14002298c:	mov    r8d,edx
   14002298f:	mov    edx,0xffffffec
   140022994:	call   0x1400228d4
   140022999:	add    rsp,0x38
   14002299d:	ret    
   14002299e:	int3   
   14002299f:	int3   
   1400229a0:	ret    0x0
   1400229a3:	int3   
   1400229a4:	sub    rsp,0x28
   1400229a8:	cmp    QWORD PTR [rcx+0x40],0x0
   1400229ad:	mov    rax,QWORD PTR [rcx]
   1400229b0:	je     0x1400229ba
   1400229b2:	call   QWORD PTR [rax+0xc0]
   1400229b8:	jmp    0x1400229c0
   1400229ba:	call   QWORD PTR [rax+0x228]
   1400229c0:	add    rsp,0x28
   1400229c4:	ret    
   1400229c5:	int3   
   1400229c6:	int3   
   1400229c7:	int3   
   1400229c8:	mov    rax,rsp
   1400229cb:	mov    QWORD PTR [rax+0x8],rbx
   1400229cf:	mov    QWORD PTR [rax+0x10],rbp
   1400229d3:	mov    QWORD PTR [rax+0x18],rsi
   1400229d7:	push   rdi
   1400229d8:	sub    rsp,0x30
   1400229dc:	mov    rbx,rcx
   1400229df:	mov    rcx,QWORD PTR [rcx+0x80]
   1400229e6:	mov    rdi,r9
   1400229e9:	test   rcx,rcx
   1400229ec:	mov    rsi,r8
   1400229ef:	mov    ebp,edx
   1400229f1:	je     0x1400229ff
   1400229f3:	mov    QWORD PTR [rax-0x18],r9
   1400229f7:	mov    r9,r8
   1400229fa:	mov    r8d,edx
   1400229fd:	jmp    0x140022a32
   1400229ff:	mov    rax,QWORD PTR [rbx]
   140022a02:	mov    rcx,rbx
   140022a05:	call   QWORD PTR [rax+0x1e0]
   140022a0b:	mov    rcx,QWORD PTR [rax]
   140022a0e:	test   rcx,rcx
   140022a11:	jne    0x140022a27
   140022a13:	mov    rcx,QWORD PTR [rbx+0x40]
   140022a17:	mov    r9,rdi
   140022a1a:	mov    r8,rsi
   140022a1d:	mov    edx,ebp
   140022a1f:	call   QWORD PTR [rip+0x41f03]        # 0x140064928
   140022a25:	jmp    0x140022a3c
   140022a27:	mov    QWORD PTR [rsp+0x20],rdi
   140022a2c:	mov    r9,rsi
   140022a2f:	mov    r8d,ebp
   140022a32:	mov    rdx,QWORD PTR [rbx+0x40]
   140022a36:	call   QWORD PTR [rip+0x41ef4]        # 0x140064930
   140022a3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140022a41:	mov    rbp,QWORD PTR [rsp+0x48]
   140022a46:	mov    rsi,QWORD PTR [rsp+0x50]
   140022a4b:	add    rsp,0x30
   140022a4f:	pop    rdi
   140022a50:	ret    
   140022a51:	int3   
   140022a52:	int3   
   140022a53:	int3   
   140022a54:	lea    rax,[rcx+0x80]
   140022a5b:	ret    
   140022a5c:	mov    QWORD PTR [rsp+0x8],rbx
   140022a61:	push   rdi
   140022a62:	sub    rsp,0x20
   140022a66:	mov    rbx,rdx
   140022a69:	mov    rdi,rcx
   140022a6c:	call   0x140021a70
   140022a71:	mov    r8,QWORD PTR [rax+0x60]
   140022a75:	test   r8,r8
   140022a78:	je     0x140022a83
   140022a7a:	mov    rdx,rdi
   140022a7d:	mov    rcx,rbx
   140022a80:	call   r8
   140022a83:	xor    eax,eax
   140022a85:	mov    rbx,QWORD PTR [rsp+0x30]
   140022a8a:	add    rsp,0x20
   140022a8e:	pop    rdi
   140022a8f:	ret    
   140022a90:	mov    QWORD PTR [rsp+0x8],rbx
   140022a95:	mov    QWORD PTR [rsp+0x10],rbp
   140022a9a:	mov    QWORD PTR [rsp+0x18],rsi
   140022a9f:	push   rdi
   140022aa0:	sub    rsp,0x20
   140022aa4:	mov    rbp,rcx
   140022aa7:	mov    rcx,QWORD PTR [rcx+0x40]
   140022aab:	mov    rbx,r8
   140022aae:	call   0x14002cb1c
   140022ab3:	test   rax,rax
   140022ab6:	mov    rsi,rax
   140022ab9:	je     0x140022b0d
   140022abb:	mov    rcx,rax
   140022abe:	call   QWORD PTR [rip+0x41e5c]        # 0x140064920
   140022ac4:	test   rbx,rbx
   140022ac7:	movzx  edi,ax
   140022aca:	je     0x140022b08
   140022acc:	cmp    DWORD PTR [rbx],0x38
   140022acf:	jb     0x140022b08
   140022ad1:	mov    rax,QWORD PTR [rbp+0x40]
   140022ad5:	or     DWORD PTR [rbx+0x4],0x1
   140022ad9:	or     QWORD PTR [rbx+0x30],0xffffffffffffffff
   140022ade:	xor    r9d,r9d
   140022ae1:	xor    r8d,r8d
   140022ae4:	mov    edx,0x87
   140022ae9:	mov    rcx,rsi
   140022aec:	mov    QWORD PTR [rbx+0x8],rax
   140022af0:	mov    QWORD PTR [rbx+0x10],rsi
   140022af4:	call   QWORD PTR [rip+0x42076]        # 0x140064b70
   140022afa:	bt     rax,0xd
   140022aff:	jb     0x140022b08
   140022b01:	or     DWORD PTR [rbx+0x4],0x80000002
   140022b08:	mov    rax,rdi
   140022b0b:	jmp    0x140022b11
   140022b0d:	or     rax,0xffffffffffffffff
   140022b11:	mov    rbx,QWORD PTR [rsp+0x30]
   140022b16:	mov    rbp,QWORD PTR [rsp+0x38]
   140022b1b:	mov    rsi,QWORD PTR [rsp+0x40]
   140022b20:	add    rsp,0x20
   140022b24:	pop    rdi
   140022b25:	ret    
   140022b26:	int3   
   140022b27:	int3   
   140022b28:	xchg   ax,ax
   140022b2a:	cmp    QWORD PTR [rcx+0x10],0x0
   140022b2f:	je     0x140022b51
   140022b31:	cmp    DWORD PTR [rcx],edx
   140022b33:	jne    0x140022b47
   140022b35:	cmp    DWORD PTR [rcx+0x4],r8d
   140022b39:	jne    0x140022b47
   140022b3b:	cmp    r9d,DWORD PTR [rcx+0x8]
   140022b3f:	jb     0x140022b47
   140022b41:	cmp    r9d,DWORD PTR [rcx+0xc]
   140022b45:	jbe    0x140022b4d
   140022b47:	add    rcx,0x20
   140022b4b:	jmp    0x140022b2a
   140022b4d:	mov    rax,rcx
   140022b50:	ret    
   140022b51:	xor    eax,eax
   140022b53:	ret    
   140022b54:	mov    r11,rsp
   140022b57:	mov    QWORD PTR [r11+0x10],rbx
   140022b5b:	mov    QWORD PTR [r11+0x18],rbp
   140022b5f:	mov    QWORD PTR [r11+0x20],rsi
   140022b63:	push   rdi
   140022b64:	sub    rsp,0x30
   140022b68:	mov    rax,QWORD PTR [rcx]
   140022b6b:	and    QWORD PTR [r11+0x8],0x0
   140022b70:	mov    rbx,rcx
   140022b73:	lea    rcx,[r11+0x8]
   140022b77:	mov    rdi,r9
   140022b7a:	mov    rsi,r8
   140022b7d:	mov    QWORD PTR [r11-0x18],rcx
   140022b81:	mov    rcx,rbx
   140022b84:	mov    ebp,edx
   140022b86:	call   QWORD PTR [rax+0x218]
   140022b8c:	test   eax,eax
   140022b8e:	jne    0x140022ba6
   140022b90:	mov    rax,QWORD PTR [rbx]
   140022b93:	mov    r9,rdi
   140022b96:	mov    r8,rsi
   140022b99:	mov    edx,ebp
   140022b9b:	mov    rcx,rbx
   140022b9e:	call   QWORD PTR [rax+0x220]
   140022ba4:	jmp    0x140022bab
   140022ba6:	mov    rax,QWORD PTR [rsp+0x40]
   140022bab:	mov    rbx,QWORD PTR [rsp+0x48]
   140022bb0:	mov    rbp,QWORD PTR [rsp+0x50]
   140022bb5:	mov    rsi,QWORD PTR [rsp+0x58]
   140022bba:	add    rsp,0x30
   140022bbe:	pop    rdi
   140022bbf:	ret    
   140022bc0:	rex push rbx
   140022bc2:	sub    rsp,0x20
   140022bc6:	mov    rbx,rcx
   140022bc9:	call   0x14001c3b0
   140022bce:	lea    r11,[rip+0x46c73]        # 0x140069848
   140022bd5:	mov    DWORD PTR [rbx+0x40],0x1
   140022bdc:	mov    rax,rbx
   140022bdf:	mov    QWORD PTR [rbx],r11
   140022be2:	add    rsp,0x20
   140022be6:	pop    rbx
   140022be7:	ret    
   140022be8:	mov    DWORD PTR [rcx+0x40],edx
   140022beb:	mov    DWORD PTR [rcx+0x28],0x1
   140022bf2:	ret    
   140022bf3:	int3   
   140022bf4:	mov    QWORD PTR [rsp+0x8],rbx
   140022bf9:	mov    QWORD PTR [rsp+0x10],rbp
   140022bfe:	mov    QWORD PTR [rsp+0x18],rsi
   140022c03:	push   rdi
   140022c04:	sub    rsp,0x20
   140022c08:	mov    ebx,r8d
   140022c0b:	mov    rbp,rdx
   140022c0e:	mov    rsi,rcx
   140022c11:	call   0x1400299c0
   140022c16:	test   ebx,ebx
   140022c18:	mov    edi,eax
   140022c1a:	jne    0x140022c20
   140022c1c:	btr    edi,0x9
   140022c20:	mov    rcx,rsi
   140022c23:	call   0x14002998c
   140022c28:	mov    r9d,edi
   140022c2b:	xor    r8d,r8d
   140022c2e:	mov    edx,eax
   140022c30:	mov    rcx,rbp
   140022c33:	mov    rbx,QWORD PTR [rsp+0x30]
   140022c38:	mov    rbp,QWORD PTR [rsp+0x38]
   140022c3d:	mov    rsi,QWORD PTR [rsp+0x40]
   140022c42:	add    rsp,0x20
   140022c46:	pop    rdi
   140022c47:	rex.W jmp QWORD PTR [rip+0x41cba]        # 0x140064908
   140022c4e:	int3   
   140022c4f:	int3   
   140022c50:	lea    rax,[rip+0x46559]        # 0x1400691b0
   140022c57:	ret    
   140022c58:	rex push rbx
   140022c5a:	sub    rsp,0x30
   140022c5e:	mov    rax,QWORD PTR [rsp+0x68]
   140022c63:	mov    r10d,r9d
   140022c66:	mov    r9d,DWORD PTR [rsp+0x60]
   140022c6b:	mov    r11,r8
   140022c6e:	mov    rcx,rdx
   140022c71:	mov    r8d,r10d
   140022c74:	mov    rdx,r11
   140022c77:	mov    QWORD PTR [rsp+0x20],rax
   140022c7c:	call   0x1400227b0
   140022c81:	add    rsp,0x30
   140022c85:	pop    rbx
   140022c86:	ret    
   140022c87:	int3   
   140022c88:	test   rdx,rdx
   140022c8b:	jne    0x140022c93
   140022c8d:	mov    eax,0x80004003
   140022c92:	ret    
   140022c93:	mov    DWORD PTR [rdx],0x1
   140022c99:	xor    eax,eax
   140022c9b:	ret    
   140022c9c:	test   rdx,rdx
   140022c9f:	jne    0x140022ca7
   140022ca1:	mov    eax,0x80004003
   140022ca6:	ret    
   140022ca7:	and    QWORD PTR [rdx],0x0
   140022cab:	mov    eax,0x80004001
   140022cb0:	ret    
   140022cb1:	int3   
   140022cb2:	int3   
   140022cb3:	int3   
   140022cb4:	sub    rsp,0x28
   140022cb8:	lea    r9,[rcx+0x50]
   140022cbc:	cmp    QWORD PTR [r9],0x0
   140022cc0:	jne    0x140022cdb
   140022cc2:	mov    rcx,QWORD PTR [rcx+0x40]
   140022cc6:	lea    r8,[rip+0x46b9b]        # 0x140069868
   140022ccd:	mov    edx,0xfffffffc
   140022cd2:	call   0x1400630df
   140022cd7:	test   eax,eax
   140022cd9:	js     0x140022cdd
   140022cdb:	xor    eax,eax
   140022cdd:	add    rsp,0x28
   140022ce1:	ret    
   140022ce2:	int3   
   140022ce3:	int3   
   140022ce4:	mov    rcx,QWORD PTR [rcx+0x50]
   140022ce8:	mov    rax,QWORD PTR [rcx]
   140022ceb:	rex.W jmp QWORD PTR [rax+0x38]
   140022cef:	int3   
   140022cf0:	mov    rcx,QWORD PTR [rcx+0x50]
   140022cf4:	mov    rax,QWORD PTR [rcx]
   140022cf7:	rex.W jmp QWORD PTR [rax+0x40]
   140022cfb:	int3   
   140022cfc:	sub    rsp,0x48
   140022d00:	mov    rax,QWORD PTR [rdx]
   140022d03:	mov    rcx,QWORD PTR [rcx+0x50]
   140022d07:	lea    r9,[rsp+0x20]
   140022d0c:	mov    QWORD PTR [r9],rax
   140022d0f:	mov    rax,QWORD PTR [rdx+0x8]
   140022d13:	mov    QWORD PTR [r9+0x8],rax
   140022d17:	mov    rax,QWORD PTR [rdx+0x10]
   140022d1b:	lea    rdx,[rsp+0x20]
   140022d20:	mov    QWORD PTR [r9+0x10],rax
   140022d24:	mov    rax,QWORD PTR [rcx]
   140022d27:	call   QWORD PTR [rax+0x48]
   140022d2a:	add    rsp,0x48
   140022d2e:	ret    
   140022d2f:	int3   
   140022d30:	sub    rsp,0x48
   140022d34:	mov    rax,QWORD PTR [rdx]
   140022d37:	mov    rcx,QWORD PTR [rcx+0x50]
   140022d3b:	lea    r9,[rsp+0x20]
   140022d40:	mov    QWORD PTR [r9],rax
   140022d43:	mov    rax,QWORD PTR [rdx+0x8]
   140022d47:	mov    QWORD PTR [r9+0x8],rax
   140022d4b:	mov    rax,QWORD PTR [rdx+0x10]
   140022d4f:	lea    rdx,[rsp+0x20]
   140022d54:	mov    QWORD PTR [r9+0x10],rax
   140022d58:	mov    rax,QWORD PTR [rcx]
   140022d5b:	call   QWORD PTR [rax+0x50]
   140022d5e:	add    rsp,0x48
   140022d62:	ret    
   140022d63:	int3   
   140022d64:	sub    rsp,0x48
   140022d68:	mov    rax,QWORD PTR [rdx]
   140022d6b:	mov    rcx,QWORD PTR [rcx+0x50]
   140022d6f:	lea    r9,[rsp+0x20]
   140022d74:	mov    QWORD PTR [r9],rax
   140022d77:	mov    rax,QWORD PTR [rdx+0x8]
   140022d7b:	mov    QWORD PTR [r9+0x8],rax
   140022d7f:	mov    rax,QWORD PTR [rdx+0x10]
   140022d83:	lea    rdx,[rsp+0x20]
   140022d88:	mov    QWORD PTR [r9+0x10],rax
   140022d8c:	mov    rax,QWORD PTR [rcx]
   140022d8f:	call   QWORD PTR [rax+0x58]
   140022d92:	add    rsp,0x48
   140022d96:	ret    
   140022d97:	int3   
   140022d98:	sub    rsp,0x48
   140022d9c:	mov    rax,QWORD PTR [rdx]
   140022d9f:	mov    rcx,QWORD PTR [rcx+0x50]
   140022da3:	lea    r9,[rsp+0x20]
   140022da8:	mov    QWORD PTR [r9],rax
   140022dab:	mov    rax,QWORD PTR [rdx+0x8]
   140022daf:	mov    QWORD PTR [r9+0x8],rax
   140022db3:	mov    rax,QWORD PTR [rdx+0x10]
   140022db7:	lea    rdx,[rsp+0x20]
   140022dbc:	mov    QWORD PTR [r9+0x10],rax
   140022dc0:	mov    rax,QWORD PTR [rcx]
   140022dc3:	call   QWORD PTR [rax+0x60]
   140022dc6:	add    rsp,0x48
   140022dca:	ret    
   140022dcb:	int3   
   140022dcc:	sub    rsp,0x48
   140022dd0:	mov    rax,QWORD PTR [rdx]
   140022dd3:	mov    rcx,QWORD PTR [rcx+0x50]
   140022dd7:	lea    r9,[rsp+0x20]
   140022ddc:	mov    QWORD PTR [r9],rax
   140022ddf:	mov    rax,QWORD PTR [rdx+0x8]
   140022de3:	mov    QWORD PTR [r9+0x8],rax
   140022de7:	mov    rax,QWORD PTR [rdx+0x10]
   140022deb:	lea    rdx,[rsp+0x20]
   140022df0:	mov    QWORD PTR [r9+0x10],rax
   140022df4:	mov    rax,QWORD PTR [rcx]
   140022df7:	call   QWORD PTR [rax+0x68]
   140022dfa:	add    rsp,0x48
   140022dfe:	ret    
   140022dff:	int3   
   140022e00:	sub    rsp,0x48
   140022e04:	mov    rax,QWORD PTR [rdx]
   140022e07:	mov    rcx,QWORD PTR [rcx+0x50]
   140022e0b:	lea    r9,[rsp+0x20]
   140022e10:	mov    QWORD PTR [r9],rax
   140022e13:	mov    rax,QWORD PTR [rdx+0x8]
   140022e17:	mov    QWORD PTR [r9+0x8],rax
   140022e1b:	mov    rax,QWORD PTR [rdx+0x10]
   140022e1f:	lea    rdx,[rsp+0x20]
   140022e24:	mov    QWORD PTR [r9+0x10],rax
   140022e28:	mov    rax,QWORD PTR [rcx]
   140022e2b:	call   QWORD PTR [rax+0x70]
   140022e2e:	add    rsp,0x48
   140022e32:	ret    
   140022e33:	int3   
   140022e34:	sub    rsp,0x48
   140022e38:	mov    rax,QWORD PTR [rdx]
   140022e3b:	mov    rcx,QWORD PTR [rcx+0x50]
   140022e3f:	lea    r9,[rsp+0x20]
   140022e44:	mov    QWORD PTR [r9],rax
   140022e47:	mov    rax,QWORD PTR [rdx+0x8]
   140022e4b:	mov    QWORD PTR [r9+0x8],rax
   140022e4f:	mov    rax,QWORD PTR [rdx+0x10]
   140022e53:	lea    rdx,[rsp+0x20]
   140022e58:	mov    QWORD PTR [r9+0x10],rax
   140022e5c:	mov    rax,QWORD PTR [rcx]
   140022e5f:	call   QWORD PTR [rax+0x78]
   140022e62:	add    rsp,0x48
   140022e66:	ret    
   140022e67:	int3   
   140022e68:	sub    rsp,0x48
   140022e6c:	mov    rax,QWORD PTR [r8]
   140022e6f:	mov    rcx,QWORD PTR [rcx+0x50]
   140022e73:	lea    r10,[rsp+0x20]
   140022e78:	mov    QWORD PTR [r10],rax
   140022e7b:	mov    rax,QWORD PTR [r8+0x8]
   140022e7f:	mov    QWORD PTR [r10+0x8],rax
   140022e83:	mov    rax,QWORD PTR [r8+0x10]
   140022e87:	lea    r8,[rsp+0x20]
   140022e8c:	mov    QWORD PTR [r10+0x10],rax
   140022e90:	mov    rax,QWORD PTR [rcx]
   140022e93:	call   QWORD PTR [rax+0x80]
   140022e99:	add    rsp,0x48
   140022e9d:	ret    
   140022e9e:	int3   
   140022e9f:	int3   
   140022ea0:	sub    rsp,0x48
   140022ea4:	mov    rax,QWORD PTR [rdx]
   140022ea7:	mov    rcx,QWORD PTR [rcx+0x50]
   140022eab:	lea    r9,[rsp+0x20]
   140022eb0:	mov    QWORD PTR [r9],rax
   140022eb3:	mov    rax,QWORD PTR [rdx+0x8]
   140022eb7:	mov    QWORD PTR [r9+0x8],rax
   140022ebb:	mov    rax,QWORD PTR [rdx+0x10]
   140022ebf:	lea    rdx,[rsp+0x20]
   140022ec4:	mov    QWORD PTR [r9+0x10],rax
   140022ec8:	mov    rax,QWORD PTR [rcx]
   140022ecb:	call   QWORD PTR [rax+0x88]
   140022ed1:	add    rsp,0x48
   140022ed5:	ret    
   140022ed6:	int3   
   140022ed7:	int3   
   140022ed8:	mov    rcx,QWORD PTR [rcx+0x50]
   140022edc:	mov    rax,QWORD PTR [rcx]
   140022edf:	rex.W jmp QWORD PTR [rax+0x90]
   140022ee6:	int3   
   140022ee7:	int3   
   140022ee8:	mov    rcx,QWORD PTR [rcx+0x50]
   140022eec:	mov    rax,QWORD PTR [rcx]
   140022eef:	rex.W jmp QWORD PTR [rax+0x98]
   140022ef6:	int3   
   140022ef7:	int3   
   140022ef8:	sub    rsp,0x48
   140022efc:	mov    rax,QWORD PTR [rdx]
   140022eff:	mov    rcx,QWORD PTR [rcx+0x50]
   140022f03:	lea    r9,[rsp+0x20]
   140022f08:	mov    QWORD PTR [r9],rax
   140022f0b:	mov    rax,QWORD PTR [rdx+0x8]
   140022f0f:	mov    QWORD PTR [r9+0x8],rax
   140022f13:	mov    rax,QWORD PTR [rdx+0x10]
   140022f17:	lea    rdx,[rsp+0x20]
   140022f1c:	mov    QWORD PTR [r9+0x10],rax
   140022f20:	mov    rax,QWORD PTR [rcx]
   140022f23:	call   QWORD PTR [rax+0xa0]
   140022f29:	add    rsp,0x48
   140022f2d:	ret    
   140022f2e:	int3   
   140022f2f:	int3   
   140022f30:	sub    rsp,0x48
   140022f34:	mov    rax,QWORD PTR [r8]
   140022f37:	mov    rcx,QWORD PTR [rcx+0x50]
   140022f3b:	lea    r9,[rsp+0x20]
   140022f40:	mov    QWORD PTR [r9],rax
   140022f43:	mov    rax,QWORD PTR [r8+0x8]
   140022f47:	mov    QWORD PTR [r9+0x8],rax
   140022f4b:	mov    rax,QWORD PTR [r8+0x10]
   140022f4f:	lea    r8,[rsp+0x20]
   140022f54:	mov    QWORD PTR [r9+0x10],rax
   140022f58:	mov    rax,QWORD PTR [rcx]
   140022f5b:	call   QWORD PTR [rax+0xa8]
   140022f61:	add    rsp,0x48
   140022f65:	ret    
   140022f66:	int3   
   140022f67:	int3   
   140022f68:	sub    rsp,0x58
   140022f6c:	mov    r10,QWORD PTR [rsp+0x88]
   140022f74:	mov    rcx,QWORD PTR [rcx+0x50]
   140022f78:	lea    r11,[rsp+0x30]
   140022f7d:	mov    rax,QWORD PTR [r10]
   140022f80:	mov    QWORD PTR [r11],rax
   140022f83:	mov    rax,QWORD PTR [r10+0x8]
   140022f87:	mov    QWORD PTR [r11+0x8],rax
   140022f8b:	mov    rax,QWORD PTR [r10+0x10]
   140022f8f:	mov    r10,QWORD PTR [rcx]
   140022f92:	mov    QWORD PTR [r11+0x10],rax
   140022f96:	lea    rax,[rsp+0x30]
   140022f9b:	mov    QWORD PTR [rsp+0x28],rax
   140022fa0:	mov    rax,QWORD PTR [rsp+0x80]
   140022fa8:	mov    QWORD PTR [rsp+0x20],rax
   140022fad:	call   QWORD PTR [r10+0xb0]
   140022fb4:	add    rsp,0x58
   140022fb8:	ret    
   140022fb9:	int3   
   140022fba:	int3   
   140022fbb:	int3   
   140022fbc:	sub    rsp,0x48
   140022fc0:	mov    rax,QWORD PTR [r8]
   140022fc3:	mov    rcx,QWORD PTR [rcx+0x50]
   140022fc7:	lea    r10,[rsp+0x20]
   140022fcc:	mov    QWORD PTR [r10],rax
   140022fcf:	mov    rax,QWORD PTR [r8+0x8]
   140022fd3:	mov    QWORD PTR [r10+0x8],rax
   140022fd7:	mov    rax,QWORD PTR [r8+0x10]
   140022fdb:	lea    r8,[rsp+0x20]
   140022fe0:	mov    QWORD PTR [r10+0x10],rax
   140022fe4:	mov    rax,QWORD PTR [rcx]
   140022fe7:	call   QWORD PTR [rax+0xb8]
   140022fed:	add    rsp,0x48
   140022ff1:	ret    
   140022ff2:	int3   
   140022ff3:	int3   
   140022ff4:	mov    rcx,QWORD PTR [rcx+0x50]
   140022ff8:	mov    rax,QWORD PTR [rcx]
   140022ffb:	rex.W jmp QWORD PTR [rax+0xc0]
   140023002:	int3   
   140023003:	int3   
   140023004:	sub    rsp,0x48
   140023008:	mov    rax,QWORD PTR [rdx]
   14002300b:	mov    rcx,QWORD PTR [rcx+0x50]
   14002300f:	lea    r8,[rsp+0x20]
   140023014:	mov    QWORD PTR [r8],rax
   140023017:	mov    rax,QWORD PTR [rdx+0x8]
   14002301b:	mov    QWORD PTR [r8+0x8],rax
   14002301f:	mov    rax,QWORD PTR [rdx+0x10]
   140023023:	lea    rdx,[rsp+0x20]
   140023028:	mov    QWORD PTR [r8+0x10],rax
   14002302c:	mov    rax,QWORD PTR [rcx]
   14002302f:	call   QWORD PTR [rax+0xc8]
   140023035:	add    rsp,0x48
   140023039:	ret    
   14002303a:	int3   
   14002303b:	int3   
   14002303c:	sub    rsp,0x48
   140023040:	mov    rax,QWORD PTR [rdx]
   140023043:	mov    rcx,QWORD PTR [rcx+0x50]
   140023047:	lea    r9,[rsp+0x20]
   14002304c:	mov    QWORD PTR [r9],rax
   14002304f:	mov    rax,QWORD PTR [rdx+0x8]
   140023053:	mov    QWORD PTR [r9+0x8],rax
   140023057:	mov    rax,QWORD PTR [rdx+0x10]
   14002305b:	lea    rdx,[rsp+0x20]
   140023060:	mov    QWORD PTR [r9+0x10],rax
   140023064:	mov    rax,QWORD PTR [rcx]
   140023067:	call   QWORD PTR [rax+0xd0]
   14002306d:	add    rsp,0x48
   140023071:	ret    
   140023072:	int3   
   140023073:	int3   
   140023074:	sub    rsp,0x48
   140023078:	mov    rax,QWORD PTR [rdx]
   14002307b:	mov    rcx,QWORD PTR [rcx+0x50]
   14002307f:	lea    r9,[rsp+0x20]
   140023084:	mov    QWORD PTR [r9],rax
   140023087:	mov    rax,QWORD PTR [rdx+0x8]
   14002308b:	mov    QWORD PTR [r9+0x8],rax
   14002308f:	mov    rax,QWORD PTR [rdx+0x10]
   140023093:	lea    rdx,[rsp+0x20]
   140023098:	mov    QWORD PTR [r9+0x10],rax
   14002309c:	mov    rax,QWORD PTR [rcx]
   14002309f:	call   QWORD PTR [rax+0xd0]
   1400230a5:	add    rsp,0x48
   1400230a9:	ret    
   1400230aa:	int3   
   1400230ab:	int3   
   1400230ac:	mov    QWORD PTR [rcx+0x58],rdx
   1400230b0:	xor    eax,eax
   1400230b2:	ret    
   1400230b3:	int3   
   1400230b4:	sub    rsp,0x28
   1400230b8:	mov    eax,DWORD PTR [rdx+0x8]
   1400230bb:	cmp    eax,0x100
   1400230c0:	jb     0x1400230c9
   1400230c2:	cmp    eax,0x109
   1400230c7:	jbe    0x1400230d7
   1400230c9:	cmp    eax,0x200
   1400230ce:	jb     0x1400230de
   1400230d0:	cmp    eax,0x209
   1400230d5:	ja     0x1400230de
   1400230d7:	call   0x140029948
   1400230dc:	jmp    0x1400230e0
   1400230de:	xor    eax,eax
   1400230e0:	add    rsp,0x28
   1400230e4:	ret    
   1400230e5:	int3   
   1400230e6:	int3   
   1400230e7:	int3   
   1400230e8:	mov    eax,DWORD PTR [rcx+0x78]
   1400230eb:	and    eax,0x10
   1400230ee:	ret    
   1400230ef:	int3   
   1400230f0:	mov    edx,DWORD PTR [rcx+0x128]
   1400230f6:	xor    eax,eax
   1400230f8:	cmp    edx,eax
   1400230fa:	je     0x140023111
   1400230fc:	cmp    edx,0xe002
   140023102:	je     0x140023111
   140023104:	cmp    edx,0xe001
   14002310a:	je     0x140023111
   14002310c:	mov    eax,0x1
   140023111:	ret    
   140023112:	int3   
   140023113:	int3   
   140023114:	sub    rsp,0x28
   140023118:	test   rdx,rdx
   14002311b:	jne    0x140023123
   14002311d:	call   0x1400208f8
   140023122:	int3   
   140023123:	and    QWORD PTR [rdx],0x0
   140023127:	mov    eax,0x1
   14002312c:	add    rsp,0x28
   140023130:	ret    
   140023131:	int3   
   140023132:	int3   
   140023133:	int3   
   140023134:	sub    rsp,0x28
   140023138:	test   r8,r8
   14002313b:	jne    0x140023143
   14002313d:	call   0x1400208f8
   140023142:	int3   
   140023143:	and    QWORD PTR [r8],0x0
   140023147:	mov    eax,0x1
   14002314c:	add    rsp,0x28
   140023150:	ret    
   140023151:	int3   
   140023152:	int3   
   140023153:	int3   
   140023154:	mov    rax,QWORD PTR [rcx+0x98]
   14002315b:	ret    
   14002315c:	lea    rax,[rip+0x4605d]        # 0x1400691c0
   140023163:	ret    
   140023164:	mov    QWORD PTR [rsp+0x8],rbx
   140023169:	mov    QWORD PTR [rsp+0x20],rsi
   14002316e:	push   rdi
   14002316f:	sub    rsp,0x30
   140023173:	mov    rdi,rcx
   140023176:	and    QWORD PTR [rsp+0x50],0x0
   14002317c:	call   0x140021a70
   140023181:	lea    rdx,[rsp+0x50]
   140023186:	mov    rcx,QWORD PTR [rax+0xd8]
   14002318d:	call   0x140020ce0
   140023192:	mov    ebx,eax
   140023194:	mov    DWORD PTR [rsp+0x48],eax
   140023198:	and    WORD PTR [rsp+0x20],0x0
   14002319e:	test   eax,eax
   1400231a0:	je     0x1400231eb
   1400231a2:	mov    rcx,rdi
   1400231a5:	call   QWORD PTR [rip+0x4174d]        # 0x1400648f8
   1400231ab:	movzx  edi,ax
   1400231ae:	mov    WORD PTR [rsp+0x20],ax
   1400231b3:	cmp    ebx,0x2
   1400231b6:	je     0x1400231e8
   1400231b8:	xor    ebx,ebx
   1400231ba:	test   di,di
   1400231bd:	sete   bl
   1400231c0:	test   ebx,ebx
   1400231c2:	je     0x1400231ce
   1400231c4:	call   QWORD PTR [rip+0x41436]        # 0x140064600
   1400231ca:	mov    esi,eax
   1400231cc:	jmp    0x1400231d0
   1400231ce:	xor    esi,esi
   1400231d0:	mov    rdx,QWORD PTR [rsp+0x50]
   1400231d5:	xor    ecx,ecx
   1400231d7:	call   0x140020cc4
   1400231dc:	test   ebx,ebx
   1400231de:	je     0x1400231e8
   1400231e0:	mov    ecx,esi
   1400231e2:	call   QWORD PTR [rip+0x412b8]        # 0x1400644a0
   1400231e8:	mov    ax,di
   1400231eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400231f0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400231f5:	add    rsp,0x30
   1400231f9:	pop    rdi
   1400231fa:	ret    
   1400231fb:	int3   
   1400231fc:	int3   
   1400231fd:	int3   
   1400231fe:	int3   
   1400231ff:	int3   
   140023200:	int3   
   140023201:	int3   
   140023202:	int3   
   140023203:	int3   
   140023204:	rex push rbx
   140023206:	push   rbp
   140023207:	push   rdi
   140023208:	sub    rsp,0x20
   14002320c:	mov    rbp,rdx
   14002320f:	cmp    DWORD PTR [rbp+0x48],0x2
   140023213:	je     0x140023245
   140023215:	xor    ebx,ebx
   140023217:	cmp    WORD PTR [rbp+0x20],bx
   14002321b:	sete   bl
   14002321e:	test   ebx,ebx
   140023220:	je     0x14002322c
   140023222:	call   QWORD PTR [rip+0x413d8]        # 0x140064600
   140023228:	mov    edi,eax
   14002322a:	jmp    0x14002322e
   14002322c:	xor    edi,edi
   14002322e:	mov    rdx,QWORD PTR [rbp+0x50]
   140023232:	xor    ecx,ecx
   140023234:	call   0x140020cc4
   140023239:	test   ebx,ebx
   14002323b:	je     0x140023245
   14002323d:	mov    ecx,edi
   14002323f:	call   QWORD PTR [rip+0x4125b]        # 0x1400644a0
   140023245:	add    rsp,0x20
   140023249:	pop    rdi
   14002324a:	pop    rbp
   14002324b:	pop    rbx
   14002324c:	ret    
   14002324d:	int3   
   14002324e:	int3   
   14002324f:	int3   
   140023250:	mov    rax,rsp
   140023253:	mov    QWORD PTR [rax+0x8],rbx
   140023257:	mov    QWORD PTR [rax+0x10],rsi
   14002325b:	mov    QWORD PTR [rax+0x18],rdi
   14002325f:	push   r12
   140023261:	sub    rsp,0x30
   140023265:	mov    rdi,r8
   140023268:	mov    rsi,rdx
   14002326b:	mov    r12,rcx
   14002326e:	and    QWORD PTR [rax-0x10],0x0
   140023273:	call   0x140021a70
   140023278:	lea    rdx,[rsp+0x28]
   14002327d:	mov    rcx,QWORD PTR [rax+0xd8]
   140023284:	call   0x140020ce0
   140023289:	mov    ebx,eax
   14002328b:	mov    DWORD PTR [rsp+0x58],eax
   14002328f:	and    DWORD PTR [rsp+0x20],0x0
   140023294:	test   eax,eax
   140023296:	je     0x1400232e3
   140023298:	mov    r8,rdi
   14002329b:	mov    rdx,rsi
   14002329e:	mov    rcx,r12
   1400232a1:	call   QWORD PTR [rip+0x41649]        # 0x1400648f0
   1400232a7:	mov    esi,eax
   1400232a9:	mov    DWORD PTR [rsp+0x20],eax
   1400232ad:	cmp    ebx,0x2
   1400232b0:	je     0x1400232e1
   1400232b2:	xor    ebx,ebx
   1400232b4:	test   eax,eax
   1400232b6:	sete   bl
   1400232b9:	test   ebx,ebx
   1400232bb:	je     0x1400232c7
   1400232bd:	call   QWORD PTR [rip+0x4133d]        # 0x140064600
   1400232c3:	mov    edi,eax
   1400232c5:	jmp    0x1400232c9
   1400232c7:	xor    edi,edi
   1400232c9:	mov    rdx,QWORD PTR [rsp+0x28]
   1400232ce:	xor    ecx,ecx
   1400232d0:	call   0x140020cc4
   1400232d5:	test   ebx,ebx
   1400232d7:	je     0x1400232e1
   1400232d9:	mov    ecx,edi
   1400232db:	call   QWORD PTR [rip+0x411bf]        # 0x1400644a0
   1400232e1:	mov    eax,esi
   1400232e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400232e8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400232ed:	mov    rdi,QWORD PTR [rsp+0x50]
   1400232f2:	add    rsp,0x30
   1400232f6:	pop    r12
   1400232f8:	ret    
   1400232f9:	int3   
   1400232fa:	int3   
   1400232fb:	int3   
   1400232fc:	int3   
   1400232fd:	int3   
   1400232fe:	int3   
   1400232ff:	int3   
   140023300:	rex push rbx
   140023302:	push   rbp
   140023303:	push   rdi
   140023304:	sub    rsp,0x20
   140023308:	mov    rbp,rdx
   14002330b:	cmp    DWORD PTR [rbp+0x58],0x2
   14002330f:	je     0x140023340
   140023311:	xor    ebx,ebx
   140023313:	cmp    DWORD PTR [rbp+0x20],ebx
   140023316:	sete   bl
   140023319:	test   ebx,ebx
   14002331b:	je     0x140023327
   14002331d:	call   QWORD PTR [rip+0x412dd]        # 0x140064600
   140023323:	mov    edi,eax
   140023325:	jmp    0x140023329
   140023327:	xor    edi,edi
   140023329:	mov    rdx,QWORD PTR [rbp+0x28]
   14002332d:	xor    ecx,ecx
   14002332f:	call   0x140020cc4
   140023334:	test   ebx,ebx
   140023336:	je     0x140023340
   140023338:	mov    ecx,edi
   14002333a:	call   QWORD PTR [rip+0x41160]        # 0x1400644a0
   140023340:	add    rsp,0x20
   140023344:	pop    rdi
   140023345:	pop    rbp
   140023346:	pop    rbx
   140023347:	ret    
   140023348:	mov    rax,rsp
   14002334b:	mov    QWORD PTR [rax+0x8],rbx
   14002334f:	mov    QWORD PTR [rax+0x10],rsi
   140023353:	mov    QWORD PTR [rax+0x18],rdi
   140023357:	push   r12
   140023359:	sub    rsp,0x30
   14002335d:	mov    rdi,r8
   140023360:	mov    rsi,rdx
   140023363:	mov    r12,rcx
   140023366:	and    QWORD PTR [rax-0x10],0x0
   14002336b:	call   0x140021a70
   140023370:	lea    rdx,[rsp+0x28]
   140023375:	mov    rcx,QWORD PTR [rax+0xd8]
   14002337c:	call   0x140020ce0
   140023381:	mov    ebx,eax
   140023383:	mov    DWORD PTR [rsp+0x58],eax
   140023387:	and    DWORD PTR [rsp+0x20],0x0
   14002338c:	test   eax,eax
   14002338e:	je     0x1400233db
   140023390:	mov    r8,rdi
   140023393:	mov    rdx,rsi
   140023396:	mov    rcx,r12
   140023399:	call   QWORD PTR [rip+0x41549]        # 0x1400648e8
   14002339f:	mov    esi,eax
   1400233a1:	mov    DWORD PTR [rsp+0x20],eax
   1400233a5:	cmp    ebx,0x2
   1400233a8:	je     0x1400233d9
   1400233aa:	xor    ebx,ebx
   1400233ac:	test   eax,eax
   1400233ae:	sete   bl
   1400233b1:	test   ebx,ebx
   1400233b3:	je     0x1400233bf
   1400233b5:	call   QWORD PTR [rip+0x41245]        # 0x140064600
   1400233bb:	mov    edi,eax
   1400233bd:	jmp    0x1400233c1
   1400233bf:	xor    edi,edi
   1400233c1:	mov    rdx,QWORD PTR [rsp+0x28]
   1400233c6:	xor    ecx,ecx
   1400233c8:	call   0x140020cc4
   1400233cd:	test   ebx,ebx
   1400233cf:	je     0x1400233d9
   1400233d1:	mov    ecx,edi
   1400233d3:	call   QWORD PTR [rip+0x410c7]        # 0x1400644a0
   1400233d9:	mov    eax,esi
   1400233db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400233e0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400233e5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400233ea:	add    rsp,0x30
   1400233ee:	pop    r12
   1400233f0:	ret    
   1400233f1:	int3   
   1400233f2:	int3   
   1400233f3:	int3   
   1400233f4:	int3   
   1400233f5:	int3   
   1400233f6:	int3   
   1400233f7:	int3   
   1400233f8:	rex push rbx
   1400233fa:	push   rbp
   1400233fb:	push   rdi
   1400233fc:	sub    rsp,0x20
   140023400:	mov    rbp,rdx
   140023403:	cmp    DWORD PTR [rbp+0x58],0x2
   140023407:	je     0x140023438
   140023409:	xor    ebx,ebx
   14002340b:	cmp    DWORD PTR [rbp+0x20],ebx
   14002340e:	sete   bl
   140023411:	test   ebx,ebx
   140023413:	je     0x14002341f
   140023415:	call   QWORD PTR [rip+0x411e5]        # 0x140064600
   14002341b:	mov    edi,eax
   14002341d:	jmp    0x140023421
   14002341f:	xor    edi,edi
   140023421:	mov    rdx,QWORD PTR [rbp+0x28]
   140023425:	xor    ecx,ecx
   140023427:	call   0x140020cc4
   14002342c:	test   ebx,ebx
   14002342e:	je     0x140023438
   140023430:	mov    ecx,edi
   140023432:	call   QWORD PTR [rip+0x41068]        # 0x1400644a0
   140023438:	add    rsp,0x20
   14002343c:	pop    rdi
   14002343d:	pop    rbp
   14002343e:	pop    rbx
   14002343f:	ret    
   140023440:	mov    rax,rsp
   140023443:	mov    QWORD PTR [rax+0x8],rbx
   140023447:	mov    QWORD PTR [rax+0x10],rsi
   14002344b:	mov    QWORD PTR [rax+0x18],rdi
   14002344f:	mov    QWORD PTR [rax+0x20],r12
   140023453:	push   r13
   140023455:	sub    rsp,0x80
   14002345c:	mov    edi,r9d
   14002345f:	mov    rsi,r8
   140023462:	mov    r12,rdx
   140023465:	mov    r13d,ecx
   140023468:	and    QWORD PTR [rax-0x20],0x0
   14002346d:	call   0x140021a70
   140023472:	lea    rdx,[rsp+0x68]
   140023477:	mov    rcx,QWORD PTR [rax+0xd8]
   14002347e:	call   0x140020ce0
   140023483:	mov    ebx,eax
   140023485:	mov    DWORD PTR [rsp+0x60],eax
   140023489:	and    QWORD PTR [rsp+0x70],0x0
   14002348f:	test   eax,eax
   140023491:	jne    0x14002349a
   140023493:	xor    eax,eax
   140023495:	jmp    0x14002354c
   14002349a:	mov    rax,QWORD PTR [rsp+0xe8]
   1400234a2:	mov    QWORD PTR [rsp+0x58],rax
   1400234a7:	mov    rax,QWORD PTR [rsp+0xe0]
   1400234af:	mov    QWORD PTR [rsp+0x50],rax
   1400234b4:	mov    rax,QWORD PTR [rsp+0xd8]
   1400234bc:	mov    QWORD PTR [rsp+0x48],rax
   1400234c1:	mov    rax,QWORD PTR [rsp+0xd0]
   1400234c9:	mov    QWORD PTR [rsp+0x40],rax
   1400234ce:	mov    eax,DWORD PTR [rsp+0xc8]
   1400234d5:	mov    DWORD PTR [rsp+0x38],eax
   1400234d9:	mov    eax,DWORD PTR [rsp+0xc0]
   1400234e0:	mov    DWORD PTR [rsp+0x30],eax
   1400234e4:	mov    eax,DWORD PTR [rsp+0xb8]
   1400234eb:	mov    DWORD PTR [rsp+0x28],eax
   1400234ef:	mov    eax,DWORD PTR [rsp+0xb0]
   1400234f6:	mov    DWORD PTR [rsp+0x20],eax
   1400234fa:	mov    r9d,edi
   1400234fd:	mov    r8,rsi
   140023500:	mov    rdx,r12
   140023503:	mov    ecx,r13d
   140023506:	call   QWORD PTR [rip+0x413d4]        # 0x1400648e0
   14002350c:	mov    rsi,rax
   14002350f:	mov    QWORD PTR [rsp+0x70],rax
   140023514:	cmp    ebx,0x2
   140023517:	je     0x140023549
   140023519:	xor    ebx,ebx
   14002351b:	test   rax,rax
   14002351e:	sete   bl
   140023521:	test   ebx,ebx
   140023523:	je     0x14002352f
   140023525:	call   QWORD PTR [rip+0x410d5]        # 0x140064600
   14002352b:	mov    edi,eax
   14002352d:	jmp    0x140023531
   14002352f:	xor    edi,edi
   140023531:	mov    rdx,QWORD PTR [rsp+0x68]
   140023536:	xor    ecx,ecx
   140023538:	call   0x140020cc4
   14002353d:	test   ebx,ebx
   14002353f:	je     0x140023549
   140023541:	mov    ecx,edi
   140023543:	call   QWORD PTR [rip+0x40f57]        # 0x1400644a0
   140023549:	mov    rax,rsi
   14002354c:	lea    r11,[rsp+0x80]
   140023554:	mov    rbx,QWORD PTR [r11+0x10]
   140023558:	mov    rsi,QWORD PTR [r11+0x18]
   14002355c:	mov    rdi,QWORD PTR [r11+0x20]
   140023560:	mov    r12,QWORD PTR [r11+0x28]
   140023564:	mov    rsp,r11
   140023567:	pop    r13
   140023569:	ret    
   14002356a:	int3   
   14002356b:	int3   
   14002356c:	int3   
   14002356d:	int3   
   14002356e:	int3   
   14002356f:	int3   
   140023570:	rex push rbx
   140023572:	push   rbp
   140023573:	push   rdi
   140023574:	sub    rsp,0x60
   140023578:	mov    rbp,rdx
   14002357b:	cmp    DWORD PTR [rbp+0x60],0x2
   14002357f:	je     0x1400235b1
   140023581:	xor    ebx,ebx
   140023583:	cmp    QWORD PTR [rbp+0x70],rbx
   140023587:	sete   bl
   14002358a:	test   ebx,ebx
   14002358c:	je     0x140023598
   14002358e:	call   QWORD PTR [rip+0x4106c]        # 0x140064600
   140023594:	mov    edi,eax
   140023596:	jmp    0x14002359a
   140023598:	xor    edi,edi
   14002359a:	mov    rdx,QWORD PTR [rbp+0x68]
   14002359e:	xor    ecx,ecx
   1400235a0:	call   0x140020cc4
   1400235a5:	test   ebx,ebx
   1400235a7:	je     0x1400235b1
   1400235a9:	mov    ecx,edi
   1400235ab:	call   QWORD PTR [rip+0x40eef]        # 0x1400644a0
   1400235b1:	add    rsp,0x60
   1400235b5:	pop    rdi
   1400235b6:	pop    rbp
   1400235b7:	pop    rbx
   1400235b8:	ret    
   1400235b9:	int3   
   1400235ba:	int3   
   1400235bb:	int3   
   1400235bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400235c1:	mov    QWORD PTR [rsp+0x20],rsi
   1400235c6:	push   rdi
   1400235c7:	sub    rsp,0x30
   1400235cb:	mov    rdi,rcx
   1400235ce:	and    QWORD PTR [rsp+0x50],0x0
   1400235d4:	call   0x140021a70
   1400235d9:	lea    rdx,[rsp+0x50]
   1400235de:	mov    rcx,QWORD PTR [rax+0xd8]
   1400235e5:	call   0x140020ce0
   1400235ea:	mov    ebx,eax
   1400235ec:	mov    DWORD PTR [rsp+0x48],eax
   1400235f0:	and    QWORD PTR [rsp+0x20],0x0
   1400235f6:	test   eax,eax
   1400235f8:	jne    0x1400235fe
   1400235fa:	xor    eax,eax
   1400235fc:	jmp    0x140023647
   1400235fe:	mov    rcx,rdi
   140023601:	call   QWORD PTR [rip+0x40e61]        # 0x140064468
   140023607:	mov    rdi,rax
   14002360a:	mov    QWORD PTR [rsp+0x20],rax
   14002360f:	cmp    ebx,0x2
   140023612:	je     0x140023644
   140023614:	xor    ebx,ebx
   140023616:	test   rax,rax
   140023619:	sete   bl
   14002361c:	test   ebx,ebx
   14002361e:	je     0x14002362a
   140023620:	call   QWORD PTR [rip+0x40fda]        # 0x140064600
   140023626:	mov    esi,eax
   140023628:	jmp    0x14002362c
   14002362a:	xor    esi,esi
   14002362c:	mov    rdx,QWORD PTR [rsp+0x50]
   140023631:	xor    ecx,ecx
   140023633:	call   0x140020cc4
   140023638:	test   ebx,ebx
   14002363a:	je     0x140023644
   14002363c:	mov    ecx,esi
   14002363e:	call   QWORD PTR [rip+0x40e5c]        # 0x1400644a0
   140023644:	mov    rax,rdi
   140023647:	mov    rbx,QWORD PTR [rsp+0x40]
   14002364c:	mov    rsi,QWORD PTR [rsp+0x58]
   140023651:	add    rsp,0x30
   140023655:	pop    rdi
   140023656:	ret    
   140023657:	int3   
   140023658:	int3   
   140023659:	int3   
   14002365a:	int3   
   14002365b:	int3   
   14002365c:	rex push rbx
   14002365e:	push   rbp
   14002365f:	push   rdi
   140023660:	sub    rsp,0x20
   140023664:	mov    rbp,rdx
   140023667:	cmp    DWORD PTR [rbp+0x48],0x2
   14002366b:	je     0x14002369d
   14002366d:	xor    ebx,ebx
   14002366f:	cmp    QWORD PTR [rbp+0x20],rbx
   140023673:	sete   bl
   140023676:	test   ebx,ebx
   140023678:	je     0x140023684
   14002367a:	call   QWORD PTR [rip+0x40f80]        # 0x140064600
   140023680:	mov    edi,eax
   140023682:	jmp    0x140023686
   140023684:	xor    edi,edi
   140023686:	mov    rdx,QWORD PTR [rbp+0x50]
   14002368a:	xor    ecx,ecx
   14002368c:	call   0x140020cc4
   140023691:	test   ebx,ebx
   140023693:	je     0x14002369d
   140023695:	mov    ecx,edi
   140023697:	call   QWORD PTR [rip+0x40e03]        # 0x1400644a0
   14002369d:	add    rsp,0x20
   1400236a1:	pop    rdi
   1400236a2:	pop    rbp
   1400236a3:	pop    rbx
   1400236a4:	ret    
   1400236a5:	int3   
   1400236a6:	int3   
   1400236a7:	int3   
   1400236a8:	sub    rsp,0x28
   1400236ac:	cmp    DWORD PTR [rcx+0x8],0x0
   1400236b0:	je     0x1400236bc
   1400236b2:	mov    rdx,QWORD PTR [rcx]
   1400236b5:	xor    ecx,ecx
   1400236b7:	call   0x140020cc4
   1400236bc:	add    rsp,0x28
   1400236c0:	ret    
   1400236c1:	int3   
   1400236c2:	int3   
   1400236c3:	int3   
   1400236c4:	rex push rbx
   1400236c6:	sub    rsp,0x20
   1400236ca:	mov    rbx,rcx
   1400236cd:	call   0x14001c3e8
   1400236d2:	lea    rax,[rip+0x45ddf]        # 0x1400694b8
   1400236d9:	lea    r11,[rip+0x45ef8]        # 0x1400695d8
   1400236e0:	mov    QWORD PTR [rbx],r11
   1400236e3:	mov    QWORD PTR [rbx+0x60],rax
   1400236e7:	lea    rax,[rip+0x45eb2]        # 0x1400695a0
   1400236ee:	mov    QWORD PTR [rbx+0x68],rax
   1400236f2:	xor    eax,eax
   1400236f4:	mov    QWORD PTR [rbx+0x40],rax
   1400236f8:	mov    BYTE PTR [rbx+0x48],al
   1400236fb:	mov    QWORD PTR [rbx+0x58],rax
   1400236ff:	mov    QWORD PTR [rbx+0x50],rax
   140023703:	mov    QWORD PTR [rbx+0x70],rax
   140023707:	mov    DWORD PTR [rbx+0x78],eax
   14002370a:	mov    QWORD PTR [rbx+0x80],rax
   140023711:	mov    DWORD PTR [rbx+0x88],eax
   140023717:	mov    QWORD PTR [rbx+0x90],rax
   14002371e:	mov    QWORD PTR [rbx+0x98],rax
   140023725:	mov    QWORD PTR [rbx+0xa0],rax
   14002372c:	mov    rax,rbx
   14002372f:	add    rsp,0x20
   140023733:	pop    rbx
   140023734:	ret    
   140023735:	int3   
   140023736:	int3   
   140023737:	int3   
   140023738:	mov    QWORD PTR [rsp+0x8],rbx
   14002373d:	push   rdi
   14002373e:	sub    rsp,0x20
   140023742:	mov    rbx,rcx
   140023745:	mov    rcx,QWORD PTR [rcx+0x40]
   140023749:	mov    rdi,r8
   14002374c:	call   QWORD PTR [rip+0x41206]        # 0x140064958
   140023752:	mov    rcx,rbx
   140023755:	call   0x14002998c
   14002375a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002375f:	mov    DWORD PTR [rdi],eax
   140023761:	add    rsp,0x20
   140023765:	pop    rdi
   140023766:	ret    
   140023767:	int3   
   140023768:	mov    rax,rsp
   14002376b:	mov    QWORD PTR [rax+0x8],rbx
   14002376f:	mov    QWORD PTR [rax+0x10],rbp
   140023773:	mov    QWORD PTR [rax+0x18],rsi
   140023777:	mov    QWORD PTR [rax+0x20],rdi
   14002377b:	push   r12
   14002377d:	sub    rsp,0x60
   140023781:	mov    rax,QWORD PTR [rsp+0xa0]
   140023789:	xor    ebx,ebx
   14002378b:	mov    rsi,r9
   14002378e:	cmp    rax,rbx
   140023791:	mov    rbp,r8
   140023794:	mov    r12d,edx
   140023797:	mov    rdi,rcx
   14002379a:	je     0x1400237a0
   14002379c:	mov    rbx,QWORD PTR [rax+0x40]
   1400237a0:	mov    rax,QWORD PTR [rsp+0x98]
   1400237a8:	mov    r11,QWORD PTR [rcx]
   1400237ab:	mov    ecx,DWORD PTR [rsp+0xa8]
   1400237b2:	mov    r9d,DWORD PTR [rax+0x4]
   1400237b6:	mov    r10d,DWORD PTR [rax]
   1400237b9:	mov    r8d,DWORD PTR [rax+0xc]
   1400237bd:	mov    edx,DWORD PTR [rax+0x8]
   1400237c0:	mov    rax,QWORD PTR [rsp+0xb0]
   1400237c8:	sub    r8d,r9d
   1400237cb:	mov    QWORD PTR [rsp+0x58],rax
   1400237d0:	mov    eax,DWORD PTR [rsp+0x90]
   1400237d7:	mov    QWORD PTR [rsp+0x50],rcx
   1400237dc:	mov    QWORD PTR [rsp+0x48],rbx
   1400237e1:	mov    DWORD PTR [rsp+0x40],r8d
   1400237e6:	sub    edx,r10d
   1400237e9:	mov    DWORD PTR [rsp+0x38],edx
   1400237ed:	mov    DWORD PTR [rsp+0x30],r9d
   1400237f2:	mov    DWORD PTR [rsp+0x28],r10d
   1400237f7:	mov    r9,rsi
   1400237fa:	mov    r8,rbp
   1400237fd:	mov    edx,r12d
   140023800:	mov    rcx,rdi
   140023803:	mov    DWORD PTR [rsp+0x20],eax
   140023807:	call   QWORD PTR [r11+0xb8]
   14002380e:	lea    r11,[rsp+0x60]
   140023813:	mov    rbx,QWORD PTR [r11+0x10]
   140023817:	mov    rbp,QWORD PTR [r11+0x18]
   14002381b:	mov    rsi,QWORD PTR [r11+0x20]
   14002381f:	mov    rdi,QWORD PTR [r11+0x28]
   140023823:	mov    rsp,r11
   140023826:	pop    r12
   140023828:	ret    
   140023829:	int3   
   14002382a:	int3   
   14002382b:	int3   
   14002382c:	mov    rax,rsp
   14002382f:	mov    QWORD PTR [rax+0x8],rbx
   140023833:	mov    QWORD PTR [rax+0x10],rbp
   140023837:	mov    QWORD PTR [rax+0x18],rsi
   14002383b:	mov    QWORD PTR [rax+0x20],rdi
   14002383f:	push   r12
   140023841:	sub    rsp,0x60
   140023845:	mov    rax,QWORD PTR [rsp+0x98]
   14002384d:	xor    ebx,ebx
   14002384f:	mov    edi,r9d
   140023852:	cmp    rax,rbx
   140023855:	mov    rbp,r8
   140023858:	mov    r12,rdx
   14002385b:	mov    rsi,rcx
   14002385e:	je     0x140023864
   140023860:	mov    rbx,QWORD PTR [rax+0x40]
   140023864:	mov    rax,QWORD PTR [rsp+0x90]
   14002386c:	mov    r11,QWORD PTR [rcx]
   14002386f:	mov    ecx,DWORD PTR [rsp+0xa0]
   140023876:	mov    r9d,DWORD PTR [rax+0x4]
   14002387a:	mov    r10d,DWORD PTR [rax]
   14002387d:	mov    r8d,DWORD PTR [rax+0xc]
   140023881:	mov    edx,DWORD PTR [rax+0x8]
   140023884:	mov    rax,QWORD PTR [rsp+0xa8]
   14002388c:	sub    r8d,r9d
   14002388f:	mov    QWORD PTR [rsp+0x58],rax
   140023894:	mov    QWORD PTR [rsp+0x50],rcx
   140023899:	mov    QWORD PTR [rsp+0x48],rbx
   14002389e:	mov    DWORD PTR [rsp+0x40],r8d
   1400238a3:	sub    edx,r10d
   1400238a6:	bts    edi,0x1e
   1400238aa:	mov    DWORD PTR [rsp+0x38],edx
   1400238ae:	mov    DWORD PTR [rsp+0x30],r9d
   1400238b3:	mov    DWORD PTR [rsp+0x28],r10d
   1400238b8:	mov    r9,rbp
   1400238bb:	mov    r8,r12
   1400238be:	xor    edx,edx
   1400238c0:	mov    rcx,rsi
   1400238c3:	mov    DWORD PTR [rsp+0x20],edi
   1400238c7:	call   QWORD PTR [r11+0xb8]
   1400238ce:	lea    r11,[rsp+0x60]
   1400238d3:	mov    rbx,QWORD PTR [r11+0x10]
   1400238d7:	mov    rbp,QWORD PTR [r11+0x18]
   1400238db:	mov    rsi,QWORD PTR [r11+0x20]
   1400238df:	mov    rdi,QWORD PTR [r11+0x28]
   1400238e3:	mov    rsp,r11
   1400238e6:	pop    r12
   1400238e8:	ret    
   1400238e9:	int3   
   1400238ea:	int3   
   1400238eb:	int3   
   1400238ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400238f1:	push   rdi
   1400238f2:	sub    rsp,0x20
   1400238f6:	mov    edi,ecx
   1400238f8:	call   0x140021ac0
   1400238fd:	mov    rbx,rax
   140023900:	mov    rax,QWORD PTR [rax+0x78]
   140023904:	test   rax,rax
   140023907:	je     0x140023923
   140023909:	mov    rcx,QWORD PTR [rax+0x40]
   14002390d:	test   rcx,rcx
   140023910:	je     0x140023923
   140023912:	xor    r9d,r9d
   140023915:	xor    r8d,r8d
   140023918:	mov    edx,0x401
   14002391d:	call   QWORD PTR [rip+0x4124d]        # 0x140064b70
   140023923:	test   edi,edi
   140023925:	mov    rbx,QWORD PTR [rbx+0xa0]
   14002392c:	je     0x140023953
   14002392e:	test   rbx,rbx
   140023931:	je     0x140023953
   140023933:	mov    ecx,0x1
   140023938:	call   QWORD PTR [rip+0x41162]        # 0x140064aa0
   14002393e:	test   ax,ax
   140023941:	js     0x140023953
   140023943:	mov    rax,QWORD PTR [rbx]
   140023946:	or     rdx,0xffffffffffffffff
   14002394a:	mov    rcx,rbx
   14002394d:	call   QWORD PTR [rax+0x2d0]
   140023953:	mov    rbx,QWORD PTR [rsp+0x30]
   140023958:	add    rsp,0x20
   14002395c:	pop    rdi
   14002395d:	ret    
   14002395e:	int3   
   14002395f:	int3   
   140023960:	mov    QWORD PTR [rsp+0x8],rbx
   140023965:	mov    QWORD PTR [rsp+0x10],rbp
   14002396a:	mov    QWORD PTR [rsp+0x18],rsi
   14002396f:	push   rdi
   140023970:	sub    rsp,0x20
   140023974:	test   rcx,rcx
   140023977:	mov    esi,edx
   140023979:	mov    rbx,rcx
   14002397c:	jne    0x140023984
   14002397e:	call   0x1400208f8
   140023983:	int3   
   140023984:	mov    rcx,QWORD PTR [rcx+0x8]
   140023988:	call   QWORD PTR [rip+0x40fe2]        # 0x140064970
   14002398e:	xor    edi,edi
   140023990:	test   eax,eax
   140023992:	mov    ebp,eax
   140023994:	jle    0x1400239dd
   140023996:	mov    rcx,QWORD PTR [rbx+0x8]
   14002399a:	mov    edx,edi
   14002399c:	call   QWORD PTR [rip+0x40fd6]        # 0x140064978
   1400239a2:	mov    rcx,rax
   1400239a5:	call   0x14003f114
   1400239aa:	test   rax,rax
   1400239ad:	je     0x1400239c6
   1400239af:	cmp    QWORD PTR [rax+0x8],rsi
   1400239b3:	je     0x1400239f4
   1400239b5:	mov    edx,esi
   1400239b7:	mov    rcx,rax
   1400239ba:	call   0x140023960
   1400239bf:	test   rax,rax
   1400239c2:	jne    0x1400239df
   1400239c4:	jmp    0x1400239d6
   1400239c6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400239ca:	mov    edx,edi
   1400239cc:	call   QWORD PTR [rip+0x40f96]        # 0x140064968
   1400239d2:	cmp    eax,esi
   1400239d4:	je     0x1400239f4
   1400239d6:	add    edi,0x1
   1400239d9:	cmp    edi,ebp
   1400239db:	jl     0x140023996
   1400239dd:	xor    eax,eax
   1400239df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400239e4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400239e9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400239ee:	add    rsp,0x20
   1400239f2:	pop    rdi
   1400239f3:	ret    
   1400239f4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400239f8:	call   0x14003f138
   1400239fd:	jmp    0x1400239df
   1400239ff:	int3   
   140023a00:	sub    rsp,0x28
   140023a04:	lea    rax,[rip+0x45e85]        # 0x140069890
   140023a0b:	mov    QWORD PTR [rcx],rax
   140023a0e:	mov    rcx,QWORD PTR [rcx+0x8]
   140023a12:	test   rcx,rcx
   140023a15:	je     0x140023a1d
   140023a17:	call   QWORD PTR [rip+0x40bd3]        # 0x1400645f0
   140023a1d:	add    rsp,0x28
   140023a21:	ret    
   140023a22:	int3   
   140023a23:	int3   
   140023a24:	mov    QWORD PTR [rsp+0x8],rbx
   140023a29:	push   rdi
   140023a2a:	sub    rsp,0x20
   140023a2e:	mov    ebx,edx
   140023a30:	mov    rdi,rcx
   140023a33:	call   0x140023a00
   140023a38:	test   bl,0x1
   140023a3b:	je     0x140023a45
   140023a3d:	mov    rcx,rdi
   140023a40:	call   0x14002cbc8
   140023a45:	mov    rax,rdi
   140023a48:	mov    rbx,QWORD PTR [rsp+0x30]
   140023a4d:	add    rsp,0x20
   140023a51:	pop    rdi
   140023a52:	ret    
   140023a53:	int3   
   140023a54:	mov    QWORD PTR [rsp+0x8],rbx
   140023a59:	mov    QWORD PTR [rsp+0x10],rsi
   140023a5e:	push   rdi
   140023a5f:	sub    rsp,0x20
   140023a63:	mov    ebx,r8d
   140023a66:	mov    rsi,rdx
   140023a69:	mov    rdi,rcx
   140023a6c:	call   0x140021a70
   140023a71:	mov    r8d,0x1
   140023a77:	mov    r9,QWORD PTR [rax+0x8]
   140023a7b:	cmp    DWORD PTR [r9+0xd8],r8d
   140023a82:	jne    0x140023ab3
   140023a84:	cmp    ebx,r8d
   140023a87:	jne    0x140023a91
   140023a89:	mov    r8d,0xf
   140023a8f:	jmp    0x140023aa2
   140023a91:	cmp    ebx,0x3
   140023a94:	je     0x140023aa2
   140023a96:	xor    eax,eax
   140023a98:	mov    r8d,ebx
   140023a9b:	cmp    ebx,0xb
   140023a9e:	cmove  r8d,eax
   140023aa2:	mov    rax,QWORD PTR [rdi]
   140023aa5:	mov    rdx,rsi
   140023aa8:	mov    rcx,rdi
   140023aab:	call   QWORD PTR [rax+0xf0]
   140023ab1:	jmp    0x140023ac5
   140023ab3:	mov    rax,QWORD PTR [rdi]
   140023ab6:	mov    r8d,ebx
   140023ab9:	mov    rdx,rsi
   140023abc:	mov    rcx,rdi
   140023abf:	call   QWORD PTR [rax+0xe8]
   140023ac5:	mov    rbx,QWORD PTR [rsp+0x30]
   140023aca:	mov    rsi,QWORD PTR [rsp+0x38]
   140023acf:	add    rsp,0x20
   140023ad3:	pop    rdi
   140023ad4:	ret    
   140023ad5:	int3   
   140023ad6:	int3   
   140023ad7:	int3   
   140023ad8:	mov    QWORD PTR [rsp+0x8],rbx
   140023add:	mov    QWORD PTR [rsp+0x10],rbp
   140023ae2:	mov    QWORD PTR [rsp+0x18],rsi
   140023ae7:	push   rdi
   140023ae8:	sub    rsp,0x20
   140023aec:	xor    ebx,ebx
   140023aee:	mov    esi,r9d
   140023af1:	mov    rbp,rdx
   140023af4:	cmp    r8,rbx
   140023af7:	mov    rdi,rcx
   140023afa:	jne    0x140023b05
   140023afc:	call   0x140021a70
   140023b01:	mov    r8,QWORD PTR [rax+0x20]
   140023b05:	cmp    rdi,rbx
   140023b08:	je     0x140023b0e
   140023b0a:	mov    rbx,QWORD PTR [rdi+0x40]
   140023b0e:	mov    r9d,esi
   140023b11:	mov    rdx,rbp
   140023b14:	mov    rcx,rbx
   140023b17:	mov    rbx,QWORD PTR [rsp+0x30]
   140023b1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140023b21:	mov    rsi,QWORD PTR [rsp+0x40]
   140023b26:	add    rsp,0x20
   140023b2a:	pop    rdi
   140023b2b:	jmp    0x14001d990
   140023b30:	sub    rsp,0x28
   140023b34:	test   dx,dx
   140023b37:	jne    0x140023b5b
   140023b39:	call   0x140021ac0
   140023b3e:	mov    rcx,QWORD PTR [rax+0x90]
   140023b45:	test   rcx,rcx
   140023b48:	je     0x140023b5b
   140023b4a:	bt     DWORD PTR [rcx+0x4],0x1e
   140023b4f:	jb     0x140023b5b
   140023b51:	mov    ecx,0x1
   140023b56:	call   0x1400238ec
   140023b5b:	xor    eax,eax
   140023b5d:	add    rsp,0x28
   140023b61:	ret    
   140023b62:	int3   
   140023b63:	int3   
   140023b64:	rex push rbx
   140023b66:	sub    rsp,0x40
   140023b6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023b73:	lea    rbx,[rcx-0x60]
   140023b77:	mov    rdx,QWORD PTR [rbx+0x38]
   140023b7b:	lea    rcx,[rsp+0x28]
   140023b80:	call   0x140021aec
   140023b85:	nop
   140023b86:	mov    rcx,rbx
   140023b89:	call   0x14003e9e4
   140023b8e:	mov    ebx,eax
   140023b90:	cmp    DWORD PTR [rsp+0x30],0x0
   140023b95:	je     0x140023ba3
   140023b97:	mov    rdx,QWORD PTR [rsp+0x28]
   140023b9c:	xor    ecx,ecx
   140023b9e:	call   0x140020cc4
   140023ba3:	mov    eax,ebx
   140023ba5:	add    rsp,0x40
   140023ba9:	pop    rbx
   140023baa:	ret    
   140023bab:	int3   
   140023bac:	int3   
   140023bad:	int3   
   140023bae:	int3   
   140023baf:	int3   
   140023bb0:	int3   
   140023bb1:	int3   
   140023bb2:	int3   
   140023bb3:	int3   
   140023bb4:	rex push rbp
   140023bb6:	sub    rsp,0x20
   140023bba:	mov    rbp,rdx
   140023bbd:	lea    rcx,[rbp+0x28]
   140023bc1:	call   0x1400236a8
   140023bc6:	add    rsp,0x20
   140023bca:	pop    rbp
   140023bcb:	ret    
   140023bcc:	rex push rbx
   140023bce:	sub    rsp,0x40
   140023bd2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023bdb:	lea    rbx,[rcx-0x60]
   140023bdf:	mov    rdx,QWORD PTR [rbx+0x38]
   140023be3:	lea    rcx,[rsp+0x28]
   140023be8:	call   0x140021aec
   140023bed:	nop
   140023bee:	mov    rcx,rbx
   140023bf1:	call   0x14003ea98
   140023bf6:	mov    ebx,eax
   140023bf8:	cmp    DWORD PTR [rsp+0x30],0x0
   140023bfd:	je     0x140023c0b
   140023bff:	mov    rdx,QWORD PTR [rsp+0x28]
   140023c04:	xor    ecx,ecx
   140023c06:	call   0x140020cc4
   140023c0b:	mov    eax,ebx
   140023c0d:	add    rsp,0x40
   140023c11:	pop    rbx
   140023c12:	ret    
   140023c13:	int3   
   140023c14:	int3   
   140023c15:	int3   
   140023c16:	int3   
   140023c17:	int3   
   140023c18:	int3   
   140023c19:	int3   
   140023c1a:	int3   
   140023c1b:	int3   
   140023c1c:	rex push rbp
   140023c1e:	sub    rsp,0x20
   140023c22:	mov    rbp,rdx
   140023c25:	lea    rcx,[rbp+0x28]
   140023c29:	call   0x1400236a8
   140023c2e:	add    rsp,0x20
   140023c32:	pop    rbp
   140023c33:	ret    
   140023c34:	rex push rdi
   140023c36:	sub    rsp,0x40
   140023c3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023c43:	mov    QWORD PTR [rsp+0x50],rbx
   140023c48:	mov    QWORD PTR [rsp+0x58],rsi
   140023c4d:	mov    rdi,r8
   140023c50:	mov    rsi,rdx
   140023c53:	lea    rbx,[rcx-0x60]
   140023c57:	mov    rdx,QWORD PTR [rbx+0x38]
   140023c5b:	lea    rcx,[rsp+0x28]
   140023c60:	call   0x140021aec
   140023c65:	nop
   140023c66:	mov    r8,rdi
   140023c69:	mov    rdx,rsi
   140023c6c:	mov    rcx,rbx
   140023c6f:	call   0x14003eb14
   140023c74:	mov    ebx,eax
   140023c76:	cmp    DWORD PTR [rsp+0x30],0x0
   140023c7b:	je     0x140023c89
   140023c7d:	mov    rdx,QWORD PTR [rsp+0x28]
   140023c82:	xor    ecx,ecx
   140023c84:	call   0x140020cc4
   140023c89:	mov    eax,ebx
   140023c8b:	mov    rbx,QWORD PTR [rsp+0x50]
   140023c90:	mov    rsi,QWORD PTR [rsp+0x58]
   140023c95:	add    rsp,0x40
   140023c99:	pop    rdi
   140023c9a:	ret    
   140023c9b:	int3   
   140023c9c:	int3   
   140023c9d:	int3   
   140023c9e:	int3   
   140023c9f:	int3   
   140023ca0:	int3   
   140023ca1:	int3   
   140023ca2:	int3   
   140023ca3:	int3   
   140023ca4:	rex push rbp
   140023ca6:	sub    rsp,0x20
   140023caa:	mov    rbp,rdx
   140023cad:	lea    rcx,[rbp+0x28]
   140023cb1:	call   0x1400236a8
   140023cb6:	add    rsp,0x20
   140023cba:	pop    rbp
   140023cbb:	ret    
   140023cbc:	mov    rax,rsp
   140023cbf:	push   rdi
   140023cc0:	sub    rsp,0x70
   140023cc4:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140023ccd:	mov    QWORD PTR [rax+0x8],rbx
   140023cd1:	mov    QWORD PTR [rax+0x10],rbp
   140023cd5:	mov    QWORD PTR [rax+0x18],rsi
   140023cd9:	mov    ebx,r9d
   140023cdc:	mov    rdi,r8
   140023cdf:	mov    esi,edx
   140023ce1:	mov    rbp,rcx
   140023ce4:	mov    rdx,QWORD PTR [rcx-0x28]
   140023ce8:	lea    rcx,[rax-0x20]
   140023cec:	call   0x140021aec
   140023cf1:	nop
   140023cf2:	mov    rax,QWORD PTR [rsp+0xc0]
   140023cfa:	mov    QWORD PTR [rsp+0x40],rax
   140023cff:	mov    rax,QWORD PTR [rsp+0xb8]
   140023d07:	mov    QWORD PTR [rsp+0x38],rax
   140023d0c:	mov    rax,QWORD PTR [rsp+0xb0]
   140023d14:	mov    QWORD PTR [rsp+0x30],rax
   140023d19:	mov    rax,QWORD PTR [rsp+0xa8]
   140023d21:	mov    QWORD PTR [rsp+0x28],rax
   140023d26:	movzx  eax,WORD PTR [rsp+0xa0]
   140023d2e:	mov    WORD PTR [rsp+0x20],ax
   140023d33:	mov    r9d,ebx
   140023d36:	mov    r8,rdi
   140023d39:	mov    edx,esi
   140023d3b:	mov    rcx,rbp
   140023d3e:	call   0x140021eec
   140023d43:	mov    ebx,eax
   140023d45:	cmp    DWORD PTR [rsp+0x60],0x0
   140023d4a:	je     0x140023d58
   140023d4c:	mov    rdx,QWORD PTR [rsp+0x58]
   140023d51:	xor    ecx,ecx
   140023d53:	call   0x140020cc4
   140023d58:	mov    eax,ebx
   140023d5a:	lea    r11,[rsp+0x70]
   140023d5f:	mov    rbx,QWORD PTR [r11+0x10]
   140023d63:	mov    rbp,QWORD PTR [r11+0x18]
   140023d67:	mov    rsi,QWORD PTR [r11+0x20]
   140023d6b:	mov    rsp,r11
   140023d6e:	pop    rdi
   140023d6f:	ret    
   140023d70:	int3   
   140023d71:	int3   
   140023d72:	int3   
   140023d73:	int3   
   140023d74:	int3   
   140023d75:	int3   
   140023d76:	int3   
   140023d77:	int3   
   140023d78:	int3   
   140023d79:	int3   
   140023d7a:	int3   
   140023d7b:	int3   
   140023d7c:	rex push rbp
   140023d7e:	sub    rsp,0x20
   140023d82:	mov    rbp,rdx
   140023d85:	lea    rcx,[rbp+0x58]
   140023d89:	call   0x1400236a8
   140023d8e:	add    rsp,0x20
   140023d92:	pop    rbp
   140023d93:	ret    
   140023d94:	rex push rdi
   140023d96:	sub    rsp,0x40
   140023d9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023da3:	mov    QWORD PTR [rsp+0x50],rbx
   140023da8:	mov    rdi,rdx
   140023dab:	lea    rbx,[rcx-0x60]
   140023daf:	mov    rdx,QWORD PTR [rbx+0x38]
   140023db3:	lea    rcx,[rsp+0x28]
   140023db8:	call   0x140021aec
   140023dbd:	nop
   140023dbe:	mov    rax,QWORD PTR [rbx]
   140023dc1:	mov    rdx,rdi
   140023dc4:	mov    rcx,rbx
   140023dc7:	call   QWORD PTR [rax+0x118]
   140023dcd:	mov    ebx,eax
   140023dcf:	cmp    DWORD PTR [rsp+0x30],0x0
   140023dd4:	je     0x140023de2
   140023dd6:	mov    rdx,QWORD PTR [rsp+0x28]
   140023ddb:	xor    ecx,ecx
   140023ddd:	call   0x140020cc4
   140023de2:	mov    eax,ebx
   140023de4:	mov    rbx,QWORD PTR [rsp+0x50]
   140023de9:	add    rsp,0x40
   140023ded:	pop    rdi
   140023dee:	ret    
   140023def:	int3   
   140023df0:	int3   
   140023df1:	int3   
   140023df2:	int3   
   140023df3:	int3   
   140023df4:	rex push rbp
   140023df6:	sub    rsp,0x20
   140023dfa:	mov    rbp,rdx
   140023dfd:	lea    rcx,[rbp+0x28]
   140023e01:	call   0x1400236a8
   140023e06:	add    rsp,0x20
   140023e0a:	pop    rbp
   140023e0b:	ret    
   140023e0c:	rex push rdi
   140023e0e:	sub    rsp,0x40
   140023e12:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023e1b:	mov    QWORD PTR [rsp+0x50],rbx
   140023e20:	mov    rdi,rdx
   140023e23:	lea    rbx,[rcx-0x60]
   140023e27:	mov    rdx,QWORD PTR [rbx+0x38]
   140023e2b:	lea    rcx,[rsp+0x28]
   140023e30:	call   0x140021aec
   140023e35:	nop
   140023e36:	mov    rax,QWORD PTR [rbx]
   140023e39:	mov    rdx,rdi
   140023e3c:	mov    rcx,rbx
   140023e3f:	call   QWORD PTR [rax+0x120]
   140023e45:	mov    ebx,eax
   140023e47:	cmp    DWORD PTR [rsp+0x30],0x0
   140023e4c:	je     0x140023e5a
   140023e4e:	mov    rdx,QWORD PTR [rsp+0x28]
   140023e53:	xor    ecx,ecx
   140023e55:	call   0x140020cc4
   140023e5a:	mov    eax,ebx
   140023e5c:	mov    rbx,QWORD PTR [rsp+0x50]
   140023e61:	add    rsp,0x40
   140023e65:	pop    rdi
   140023e66:	ret    
   140023e67:	int3   
   140023e68:	int3   
   140023e69:	int3   
   140023e6a:	int3   
   140023e6b:	int3   
   140023e6c:	rex push rbp
   140023e6e:	sub    rsp,0x20
   140023e72:	mov    rbp,rdx
   140023e75:	lea    rcx,[rbp+0x28]
   140023e79:	call   0x1400236a8
   140023e7e:	add    rsp,0x20
   140023e82:	pop    rbp
   140023e83:	ret    
   140023e84:	rex push rdi
   140023e86:	sub    rsp,0x60
   140023e8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023e93:	mov    QWORD PTR [rsp+0x70],rbx
   140023e98:	mov    QWORD PTR [rsp+0x78],rsi
   140023e9d:	mov    rsi,r8
   140023ea0:	mov    rbx,rdx
   140023ea3:	lea    rdi,[rcx-0x60]
   140023ea7:	mov    rdx,QWORD PTR [rdi+0x38]
   140023eab:	lea    rcx,[rsp+0x28]
   140023eb0:	call   0x140021aec
   140023eb5:	nop
   140023eb6:	lea    rcx,[rsp+0x40]
   140023ebb:	mov    rax,QWORD PTR [rbx]
   140023ebe:	mov    QWORD PTR [rcx],rax
   140023ec1:	mov    rax,QWORD PTR [rbx+0x8]
   140023ec5:	mov    QWORD PTR [rcx+0x8],rax
   140023ec9:	mov    rax,QWORD PTR [rbx+0x10]
   140023ecd:	mov    QWORD PTR [rcx+0x10],rax
   140023ed1:	mov    rax,QWORD PTR [rdi]
   140023ed4:	mov    r8,rsi
   140023ed7:	lea    rdx,[rsp+0x40]
   140023edc:	mov    rcx,rdi
   140023edf:	call   QWORD PTR [rax+0x128]
   140023ee5:	mov    ebx,eax
   140023ee7:	cmp    DWORD PTR [rsp+0x30],0x0
   140023eec:	je     0x140023efa
   140023eee:	mov    rdx,QWORD PTR [rsp+0x28]
   140023ef3:	xor    ecx,ecx
   140023ef5:	call   0x140020cc4
   140023efa:	mov    eax,ebx
   140023efc:	mov    rbx,QWORD PTR [rsp+0x70]
   140023f01:	mov    rsi,QWORD PTR [rsp+0x78]
   140023f06:	add    rsp,0x60
   140023f0a:	pop    rdi
   140023f0b:	ret    
   140023f0c:	int3   
   140023f0d:	int3   
   140023f0e:	int3   
   140023f0f:	int3   
   140023f10:	int3   
   140023f11:	int3   
   140023f12:	int3   
   140023f13:	int3   
   140023f14:	rex push rbp
   140023f16:	sub    rsp,0x20
   140023f1a:	mov    rbp,rdx
   140023f1d:	lea    rcx,[rbp+0x28]
   140023f21:	call   0x1400236a8
   140023f26:	add    rsp,0x20
   140023f2a:	pop    rbp
   140023f2b:	ret    
   140023f2c:	rex push rdi
   140023f2e:	sub    rsp,0x60
   140023f32:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023f3b:	mov    QWORD PTR [rsp+0x70],rbx
   140023f40:	mov    QWORD PTR [rsp+0x78],rsi
   140023f45:	mov    rsi,r8
   140023f48:	mov    rbx,rdx
   140023f4b:	lea    rdi,[rcx-0x60]
   140023f4f:	mov    rdx,QWORD PTR [rdi+0x38]
   140023f53:	lea    rcx,[rsp+0x28]
   140023f58:	call   0x140021aec
   140023f5d:	nop
   140023f5e:	lea    rcx,[rsp+0x40]
   140023f63:	mov    rax,QWORD PTR [rbx]
   140023f66:	mov    QWORD PTR [rcx],rax
   140023f69:	mov    rax,QWORD PTR [rbx+0x8]
   140023f6d:	mov    QWORD PTR [rcx+0x8],rax
   140023f71:	mov    rax,QWORD PTR [rbx+0x10]
   140023f75:	mov    QWORD PTR [rcx+0x10],rax
   140023f79:	mov    rax,QWORD PTR [rdi]
   140023f7c:	mov    r8,rsi
   140023f7f:	lea    rdx,[rsp+0x40]
   140023f84:	mov    rcx,rdi
   140023f87:	call   QWORD PTR [rax+0x130]
   140023f8d:	mov    ebx,eax
   140023f8f:	cmp    DWORD PTR [rsp+0x30],0x0
   140023f94:	je     0x140023fa2
   140023f96:	mov    rdx,QWORD PTR [rsp+0x28]
   140023f9b:	xor    ecx,ecx
   140023f9d:	call   0x140020cc4
   140023fa2:	mov    eax,ebx
   140023fa4:	mov    rbx,QWORD PTR [rsp+0x70]
   140023fa9:	mov    rsi,QWORD PTR [rsp+0x78]
   140023fae:	add    rsp,0x60
   140023fb2:	pop    rdi
   140023fb3:	ret    
   140023fb4:	int3   
   140023fb5:	int3   
   140023fb6:	int3   
   140023fb7:	int3   
   140023fb8:	int3   
   140023fb9:	int3   
   140023fba:	int3   
   140023fbb:	int3   
   140023fbc:	rex push rbp
   140023fbe:	sub    rsp,0x20
   140023fc2:	mov    rbp,rdx
   140023fc5:	lea    rcx,[rbp+0x28]
   140023fc9:	call   0x1400236a8
   140023fce:	add    rsp,0x20
   140023fd2:	pop    rbp
   140023fd3:	ret    
   140023fd4:	rex push rdi
   140023fd6:	sub    rsp,0x60
   140023fda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023fe3:	mov    QWORD PTR [rsp+0x70],rbx
   140023fe8:	mov    QWORD PTR [rsp+0x78],rsi
   140023fed:	mov    rsi,r8
   140023ff0:	mov    rbx,rdx
   140023ff3:	lea    rdi,[rcx-0x60]
   140023ff7:	mov    rdx,QWORD PTR [rdi+0x38]
   140023ffb:	lea    rcx,[rsp+0x28]
   140024000:	call   0x140021aec
   140024005:	nop
   140024006:	lea    rcx,[rsp+0x40]
   14002400b:	mov    rax,QWORD PTR [rbx]
   14002400e:	mov    QWORD PTR [rcx],rax
   140024011:	mov    rax,QWORD PTR [rbx+0x8]
   140024015:	mov    QWORD PTR [rcx+0x8],rax
   140024019:	mov    rax,QWORD PTR [rbx+0x10]
   14002401d:	mov    QWORD PTR [rcx+0x10],rax
   140024021:	mov    rax,QWORD PTR [rdi]
   140024024:	mov    r8,rsi
   140024027:	lea    rdx,[rsp+0x40]
   14002402c:	mov    rcx,rdi
   14002402f:	call   QWORD PTR [rax+0x138]
   140024035:	mov    ebx,eax
   140024037:	cmp    DWORD PTR [rsp+0x30],0x0
   14002403c:	je     0x14002404a
   14002403e:	mov    rdx,QWORD PTR [rsp+0x28]
   140024043:	xor    ecx,ecx
   140024045:	call   0x140020cc4
   14002404a:	mov    eax,ebx
   14002404c:	mov    rbx,QWORD PTR [rsp+0x70]
   140024051:	mov    rsi,QWORD PTR [rsp+0x78]
   140024056:	add    rsp,0x60
   14002405a:	pop    rdi
   14002405b:	ret    
   14002405c:	int3   
   14002405d:	int3   
   14002405e:	int3   
   14002405f:	int3   
   140024060:	int3   
   140024061:	int3   
   140024062:	int3   
   140024063:	int3   
   140024064:	rex push rbp
   140024066:	sub    rsp,0x20
   14002406a:	mov    rbp,rdx
   14002406d:	lea    rcx,[rbp+0x28]
   140024071:	call   0x1400236a8
   140024076:	add    rsp,0x20
   14002407a:	pop    rbp
   14002407b:	ret    
   14002407c:	rex push rdi
   14002407e:	sub    rsp,0x60
   140024082:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002408b:	mov    QWORD PTR [rsp+0x70],rbx
   140024090:	mov    QWORD PTR [rsp+0x78],rsi
   140024095:	mov    rsi,r8
   140024098:	mov    rbx,rdx
   14002409b:	lea    rdi,[rcx-0x60]
   14002409f:	mov    rdx,QWORD PTR [rdi+0x38]
   1400240a3:	lea    rcx,[rsp+0x28]
   1400240a8:	call   0x140021aec
   1400240ad:	nop
   1400240ae:	lea    rcx,[rsp+0x40]
   1400240b3:	mov    rax,QWORD PTR [rbx]
   1400240b6:	mov    QWORD PTR [rcx],rax
   1400240b9:	mov    rax,QWORD PTR [rbx+0x8]
   1400240bd:	mov    QWORD PTR [rcx+0x8],rax
   1400240c1:	mov    rax,QWORD PTR [rbx+0x10]
   1400240c5:	mov    QWORD PTR [rcx+0x10],rax
   1400240c9:	mov    rax,QWORD PTR [rdi]
   1400240cc:	mov    r8,rsi
   1400240cf:	lea    rdx,[rsp+0x40]
   1400240d4:	mov    rcx,rdi
   1400240d7:	call   QWORD PTR [rax+0x140]
   1400240dd:	mov    ebx,eax
   1400240df:	cmp    DWORD PTR [rsp+0x30],0x0
   1400240e4:	je     0x1400240f2
   1400240e6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400240eb:	xor    ecx,ecx
   1400240ed:	call   0x140020cc4
   1400240f2:	mov    eax,ebx
   1400240f4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400240f9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400240fe:	add    rsp,0x60
   140024102:	pop    rdi
   140024103:	ret    
   140024104:	int3   
   140024105:	int3   
   140024106:	int3   
   140024107:	int3   
   140024108:	int3   
   140024109:	int3   
   14002410a:	int3   
   14002410b:	int3   
   14002410c:	rex push rbp
   14002410e:	sub    rsp,0x20
   140024112:	mov    rbp,rdx
   140024115:	lea    rcx,[rbp+0x28]
   140024119:	call   0x1400236a8
   14002411e:	add    rsp,0x20
   140024122:	pop    rbp
   140024123:	ret    
   140024124:	rex push rdi
   140024126:	sub    rsp,0x60
   14002412a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024133:	mov    QWORD PTR [rsp+0x70],rbx
   140024138:	mov    QWORD PTR [rsp+0x78],rsi
   14002413d:	mov    rsi,r8
   140024140:	mov    rbx,rdx
   140024143:	lea    rdi,[rcx-0x60]
   140024147:	mov    rdx,QWORD PTR [rdi+0x38]
   14002414b:	lea    rcx,[rsp+0x28]
   140024150:	call   0x140021aec
   140024155:	nop
   140024156:	lea    rcx,[rsp+0x40]
   14002415b:	mov    rax,QWORD PTR [rbx]
   14002415e:	mov    QWORD PTR [rcx],rax
   140024161:	mov    rax,QWORD PTR [rbx+0x8]
   140024165:	mov    QWORD PTR [rcx+0x8],rax
   140024169:	mov    rax,QWORD PTR [rbx+0x10]
   14002416d:	mov    QWORD PTR [rcx+0x10],rax
   140024171:	mov    rax,QWORD PTR [rdi]
   140024174:	mov    r8,rsi
   140024177:	lea    rdx,[rsp+0x40]
   14002417c:	mov    rcx,rdi
   14002417f:	call   QWORD PTR [rax+0x148]
   140024185:	mov    ebx,eax
   140024187:	cmp    DWORD PTR [rsp+0x30],0x0
   14002418c:	je     0x14002419a
   14002418e:	mov    rdx,QWORD PTR [rsp+0x28]
   140024193:	xor    ecx,ecx
   140024195:	call   0x140020cc4
   14002419a:	mov    eax,ebx
   14002419c:	mov    rbx,QWORD PTR [rsp+0x70]
   1400241a1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400241a6:	add    rsp,0x60
   1400241aa:	pop    rdi
   1400241ab:	ret    
   1400241ac:	int3   
   1400241ad:	int3   
   1400241ae:	int3   
   1400241af:	int3   
   1400241b0:	int3   
   1400241b1:	int3   
   1400241b2:	int3   
   1400241b3:	int3   
   1400241b4:	rex push rbp
   1400241b6:	sub    rsp,0x20
   1400241ba:	mov    rbp,rdx
   1400241bd:	lea    rcx,[rbp+0x28]
   1400241c1:	call   0x1400236a8
   1400241c6:	add    rsp,0x20
   1400241ca:	pop    rbp
   1400241cb:	ret    
   1400241cc:	rex push rdi
   1400241ce:	sub    rsp,0x60
   1400241d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400241db:	mov    QWORD PTR [rsp+0x70],rbx
   1400241e0:	mov    QWORD PTR [rsp+0x78],rsi
   1400241e5:	mov    rsi,r8
   1400241e8:	mov    rbx,rdx
   1400241eb:	lea    rdi,[rcx-0x60]
   1400241ef:	mov    rdx,QWORD PTR [rdi+0x38]
   1400241f3:	lea    rcx,[rsp+0x28]
   1400241f8:	call   0x140021aec
   1400241fd:	nop
   1400241fe:	lea    rcx,[rsp+0x40]
   140024203:	mov    rax,QWORD PTR [rbx]
   140024206:	mov    QWORD PTR [rcx],rax
   140024209:	mov    rax,QWORD PTR [rbx+0x8]
   14002420d:	mov    QWORD PTR [rcx+0x8],rax
   140024211:	mov    rax,QWORD PTR [rbx+0x10]
   140024215:	mov    QWORD PTR [rcx+0x10],rax
   140024219:	mov    rax,QWORD PTR [rdi]
   14002421c:	mov    r8,rsi
   14002421f:	lea    rdx,[rsp+0x40]
   140024224:	mov    rcx,rdi
   140024227:	call   QWORD PTR [rax+0x150]
   14002422d:	mov    ebx,eax
   14002422f:	cmp    DWORD PTR [rsp+0x30],0x0
   140024234:	je     0x140024242
   140024236:	mov    rdx,QWORD PTR [rsp+0x28]
   14002423b:	xor    ecx,ecx
   14002423d:	call   0x140020cc4
   140024242:	mov    eax,ebx
   140024244:	mov    rbx,QWORD PTR [rsp+0x70]
   140024249:	mov    rsi,QWORD PTR [rsp+0x78]
   14002424e:	add    rsp,0x60
   140024252:	pop    rdi
   140024253:	ret    
   140024254:	int3   
   140024255:	int3   
   140024256:	int3   
   140024257:	int3   
   140024258:	int3   
   140024259:	int3   
   14002425a:	int3   
   14002425b:	int3   
   14002425c:	rex push rbp
   14002425e:	sub    rsp,0x20
   140024262:	mov    rbp,rdx
   140024265:	lea    rcx,[rbp+0x28]
   140024269:	call   0x1400236a8
   14002426e:	add    rsp,0x20
   140024272:	pop    rbp
   140024273:	ret    
   140024274:	rex push rdi
   140024276:	sub    rsp,0x60
   14002427a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024283:	mov    QWORD PTR [rsp+0x70],rbx
   140024288:	mov    QWORD PTR [rsp+0x78],rsi
   14002428d:	mov    rsi,r8
   140024290:	mov    rbx,rdx
   140024293:	lea    rdi,[rcx-0x60]
   140024297:	mov    rdx,QWORD PTR [rdi+0x38]
   14002429b:	lea    rcx,[rsp+0x28]
   1400242a0:	call   0x140021aec
   1400242a5:	nop
   1400242a6:	lea    rcx,[rsp+0x40]
   1400242ab:	mov    rax,QWORD PTR [rbx]
   1400242ae:	mov    QWORD PTR [rcx],rax
   1400242b1:	mov    rax,QWORD PTR [rbx+0x8]
   1400242b5:	mov    QWORD PTR [rcx+0x8],rax
   1400242b9:	mov    rax,QWORD PTR [rbx+0x10]
   1400242bd:	mov    QWORD PTR [rcx+0x10],rax
   1400242c1:	mov    rax,QWORD PTR [rdi]
   1400242c4:	mov    r8,rsi
   1400242c7:	lea    rdx,[rsp+0x40]
   1400242cc:	mov    rcx,rdi
   1400242cf:	call   QWORD PTR [rax+0x158]
   1400242d5:	mov    ebx,eax
   1400242d7:	cmp    DWORD PTR [rsp+0x30],0x0
   1400242dc:	je     0x1400242ea
   1400242de:	mov    rdx,QWORD PTR [rsp+0x28]
   1400242e3:	xor    ecx,ecx
   1400242e5:	call   0x140020cc4
   1400242ea:	mov    eax,ebx
   1400242ec:	mov    rbx,QWORD PTR [rsp+0x70]
   1400242f1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400242f6:	add    rsp,0x60
   1400242fa:	pop    rdi
   1400242fb:	ret    
   1400242fc:	int3   
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	int3   
   140024301:	int3   
   140024302:	int3   
   140024303:	int3   
   140024304:	rex push rbp
   140024306:	sub    rsp,0x20
   14002430a:	mov    rbp,rdx
   14002430d:	lea    rcx,[rbp+0x28]
   140024311:	call   0x1400236a8
   140024316:	add    rsp,0x20
   14002431a:	pop    rbp
   14002431b:	ret    
   14002431c:	mov    rax,rsp
   14002431f:	push   rdi
   140024320:	sub    rsp,0x60
   140024324:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002432d:	mov    QWORD PTR [rax+0x8],rbx
   140024331:	mov    QWORD PTR [rax+0x10],rbp
   140024335:	mov    QWORD PTR [rax+0x18],rsi
   140024339:	mov    rsi,r9
   14002433c:	mov    rbx,r8
   14002433f:	mov    rbp,rdx
   140024342:	lea    rdi,[rcx-0x60]
   140024346:	mov    rdx,QWORD PTR [rdi+0x38]
   14002434a:	lea    rcx,[rax-0x40]
   14002434e:	call   0x140021aec
   140024353:	nop
   140024354:	lea    rcx,[rsp+0x40]
   140024359:	mov    rax,QWORD PTR [rbx]
   14002435c:	mov    QWORD PTR [rcx],rax
   14002435f:	mov    rax,QWORD PTR [rbx+0x8]
   140024363:	mov    QWORD PTR [rcx+0x8],rax
   140024367:	mov    rax,QWORD PTR [rbx+0x10]
   14002436b:	mov    QWORD PTR [rcx+0x10],rax
   14002436f:	mov    rax,QWORD PTR [rdi]
   140024372:	mov    r9,rsi
   140024375:	lea    r8,[rsp+0x40]
   14002437a:	mov    rdx,rbp
   14002437d:	mov    rcx,rdi
   140024380:	call   QWORD PTR [rax+0x160]
   140024386:	mov    ebx,eax
   140024388:	cmp    DWORD PTR [rsp+0x30],0x0
   14002438d:	je     0x14002439b
   14002438f:	mov    rdx,QWORD PTR [rsp+0x28]
   140024394:	xor    ecx,ecx
   140024396:	call   0x140020cc4
   14002439b:	mov    eax,ebx
   14002439d:	lea    r11,[rsp+0x60]
   1400243a2:	mov    rbx,QWORD PTR [r11+0x10]
   1400243a6:	mov    rbp,QWORD PTR [r11+0x18]
   1400243aa:	mov    rsi,QWORD PTR [r11+0x20]
   1400243ae:	mov    rsp,r11
   1400243b1:	pop    rdi
   1400243b2:	ret    
   1400243b3:	int3   
   1400243b4:	int3   
   1400243b5:	int3   
   1400243b6:	int3   
   1400243b7:	int3   
   1400243b8:	int3   
   1400243b9:	int3   
   1400243ba:	int3   
   1400243bb:	int3   
   1400243bc:	rex push rbp
   1400243be:	sub    rsp,0x20
   1400243c2:	mov    rbp,rdx
   1400243c5:	lea    rcx,[rbp+0x28]
   1400243c9:	call   0x1400236a8
   1400243ce:	add    rsp,0x20
   1400243d2:	pop    rbp
   1400243d3:	ret    
   1400243d4:	rex push rdi
   1400243d6:	sub    rsp,0x60
   1400243da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400243e3:	mov    QWORD PTR [rsp+0x70],rbx
   1400243e8:	mov    QWORD PTR [rsp+0x78],rsi
   1400243ed:	mov    rsi,r8
   1400243f0:	mov    rbx,rdx
   1400243f3:	lea    rdi,[rcx-0x60]
   1400243f7:	mov    rdx,QWORD PTR [rdi+0x38]
   1400243fb:	lea    rcx,[rsp+0x28]
   140024400:	call   0x140021aec
   140024405:	nop
   140024406:	lea    rcx,[rsp+0x40]
   14002440b:	mov    rax,QWORD PTR [rbx]
   14002440e:	mov    QWORD PTR [rcx],rax
   140024411:	mov    rax,QWORD PTR [rbx+0x8]
   140024415:	mov    QWORD PTR [rcx+0x8],rax
   140024419:	mov    rax,QWORD PTR [rbx+0x10]
   14002441d:	mov    QWORD PTR [rcx+0x10],rax
   140024421:	mov    rax,QWORD PTR [rdi]
   140024424:	mov    r8,rsi
   140024427:	lea    rdx,[rsp+0x40]
   14002442c:	mov    rcx,rdi
   14002442f:	call   QWORD PTR [rax+0x168]
   140024435:	mov    ebx,eax
   140024437:	cmp    DWORD PTR [rsp+0x30],0x0
   14002443c:	je     0x14002444a
   14002443e:	mov    rdx,QWORD PTR [rsp+0x28]
   140024443:	xor    ecx,ecx
   140024445:	call   0x140020cc4
   14002444a:	mov    eax,ebx
   14002444c:	mov    rbx,QWORD PTR [rsp+0x70]
   140024451:	mov    rsi,QWORD PTR [rsp+0x78]
   140024456:	add    rsp,0x60
   14002445a:	pop    rdi
   14002445b:	ret    
   14002445c:	int3   
   14002445d:	int3   
   14002445e:	int3   
   14002445f:	int3   
   140024460:	int3   
   140024461:	int3   
   140024462:	int3   
   140024463:	int3   
   140024464:	rex push rbp
   140024466:	sub    rsp,0x20
   14002446a:	mov    rbp,rdx
   14002446d:	lea    rcx,[rbp+0x28]
   140024471:	call   0x1400236a8
   140024476:	add    rsp,0x20
   14002447a:	pop    rbp
   14002447b:	ret    
   14002447c:	rex push rdi
   14002447e:	sub    rsp,0x40
   140024482:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002448b:	mov    QWORD PTR [rsp+0x50],rbx
   140024490:	mov    rdi,rdx
   140024493:	lea    rbx,[rcx-0x60]
   140024497:	mov    rdx,QWORD PTR [rbx+0x38]
   14002449b:	lea    rcx,[rsp+0x28]
   1400244a0:	call   0x140021aec
   1400244a5:	nop
   1400244a6:	mov    rax,QWORD PTR [rbx]
   1400244a9:	mov    rdx,rdi
   1400244ac:	mov    rcx,rbx
   1400244af:	call   QWORD PTR [rax+0x170]
   1400244b5:	mov    ebx,eax
   1400244b7:	cmp    DWORD PTR [rsp+0x30],0x0
   1400244bc:	je     0x1400244ca
   1400244be:	mov    rdx,QWORD PTR [rsp+0x28]
   1400244c3:	xor    ecx,ecx
   1400244c5:	call   0x140020cc4
   1400244ca:	mov    eax,ebx
   1400244cc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400244d1:	add    rsp,0x40
   1400244d5:	pop    rdi
   1400244d6:	ret    
   1400244d7:	int3   
   1400244d8:	int3   
   1400244d9:	int3   
   1400244da:	int3   
   1400244db:	int3   
   1400244dc:	rex push rbp
   1400244de:	sub    rsp,0x20
   1400244e2:	mov    rbp,rdx
   1400244e5:	lea    rcx,[rbp+0x28]
   1400244e9:	call   0x1400236a8
   1400244ee:	add    rsp,0x20
   1400244f2:	pop    rbp
   1400244f3:	ret    
   1400244f4:	rex push rdi
   1400244f6:	sub    rsp,0x40
   1400244fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024503:	mov    QWORD PTR [rsp+0x50],rbx
   140024508:	mov    rdi,rdx
   14002450b:	lea    rbx,[rcx-0x60]
   14002450f:	mov    rdx,QWORD PTR [rbx+0x38]
   140024513:	lea    rcx,[rsp+0x28]
   140024518:	call   0x140021aec
   14002451d:	nop
   14002451e:	mov    rax,QWORD PTR [rbx]
   140024521:	mov    rdx,rdi
   140024524:	mov    rcx,rbx
   140024527:	call   QWORD PTR [rax+0x178]
   14002452d:	mov    ebx,eax
   14002452f:	cmp    DWORD PTR [rsp+0x30],0x0
   140024534:	je     0x140024542
   140024536:	mov    rdx,QWORD PTR [rsp+0x28]
   14002453b:	xor    ecx,ecx
   14002453d:	call   0x140020cc4
   140024542:	mov    eax,ebx
   140024544:	mov    rbx,QWORD PTR [rsp+0x50]
   140024549:	add    rsp,0x40
   14002454d:	pop    rdi
   14002454e:	ret    
   14002454f:	int3   
   140024550:	int3   
   140024551:	int3   
   140024552:	int3   
   140024553:	int3   
   140024554:	rex push rbp
   140024556:	sub    rsp,0x20
   14002455a:	mov    rbp,rdx
   14002455d:	lea    rcx,[rbp+0x28]
   140024561:	call   0x1400236a8
   140024566:	add    rsp,0x20
   14002456a:	pop    rbp
   14002456b:	ret    
   14002456c:	rex push rdi
   14002456e:	sub    rsp,0x60
   140024572:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002457b:	mov    QWORD PTR [rsp+0x70],rbx
   140024580:	mov    QWORD PTR [rsp+0x78],rsi
   140024585:	mov    rsi,r8
   140024588:	mov    rbx,rdx
   14002458b:	lea    rdi,[rcx-0x60]
   14002458f:	mov    rdx,QWORD PTR [rdi+0x38]
   140024593:	lea    rcx,[rsp+0x28]
   140024598:	call   0x140021aec
   14002459d:	nop
   14002459e:	lea    rcx,[rsp+0x40]
   1400245a3:	mov    rax,QWORD PTR [rbx]
   1400245a6:	mov    QWORD PTR [rcx],rax
   1400245a9:	mov    rax,QWORD PTR [rbx+0x8]
   1400245ad:	mov    QWORD PTR [rcx+0x8],rax
   1400245b1:	mov    rax,QWORD PTR [rbx+0x10]
   1400245b5:	mov    QWORD PTR [rcx+0x10],rax
   1400245b9:	mov    rax,QWORD PTR [rdi]
   1400245bc:	mov    r8,rsi
   1400245bf:	lea    rdx,[rsp+0x40]
   1400245c4:	mov    rcx,rdi
   1400245c7:	call   QWORD PTR [rax+0x180]
   1400245cd:	mov    ebx,eax
   1400245cf:	cmp    DWORD PTR [rsp+0x30],0x0
   1400245d4:	je     0x1400245e2
   1400245d6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400245db:	xor    ecx,ecx
   1400245dd:	call   0x140020cc4
   1400245e2:	mov    eax,ebx
   1400245e4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400245e9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400245ee:	add    rsp,0x60
   1400245f2:	pop    rdi
   1400245f3:	ret    
   1400245f4:	int3   
   1400245f5:	int3   
   1400245f6:	int3   
   1400245f7:	int3   
   1400245f8:	int3   
   1400245f9:	int3   
   1400245fa:	int3   
   1400245fb:	int3   
   1400245fc:	rex push rbp
   1400245fe:	sub    rsp,0x20
   140024602:	mov    rbp,rdx
   140024605:	lea    rcx,[rbp+0x28]
   140024609:	call   0x1400236a8
   14002460e:	add    rsp,0x20
   140024612:	pop    rbp
   140024613:	ret    
   140024614:	rex push rdi
   140024616:	sub    rsp,0x60
   14002461a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024623:	mov    QWORD PTR [rsp+0x70],rbx
   140024628:	mov    QWORD PTR [rsp+0x78],rsi
   14002462d:	mov    rbx,r8
   140024630:	mov    esi,edx
   140024632:	lea    rdi,[rcx-0x60]
   140024636:	mov    rdx,QWORD PTR [rdi+0x38]
   14002463a:	lea    rcx,[rsp+0x28]
   14002463f:	call   0x140021aec
   140024644:	nop
   140024645:	lea    rcx,[rsp+0x40]
   14002464a:	mov    rax,QWORD PTR [rbx]
   14002464d:	mov    QWORD PTR [rcx],rax
   140024650:	mov    rax,QWORD PTR [rbx+0x8]
   140024654:	mov    QWORD PTR [rcx+0x8],rax
   140024658:	mov    rax,QWORD PTR [rbx+0x10]
   14002465c:	mov    QWORD PTR [rcx+0x10],rax
   140024660:	mov    rax,QWORD PTR [rdi]
   140024663:	lea    r8,[rsp+0x40]
   140024668:	mov    edx,esi
   14002466a:	mov    rcx,rdi
   14002466d:	call   QWORD PTR [rax+0x188]
   140024673:	mov    ebx,eax
   140024675:	cmp    DWORD PTR [rsp+0x30],0x0
   14002467a:	je     0x140024688
   14002467c:	mov    rdx,QWORD PTR [rsp+0x28]
   140024681:	xor    ecx,ecx
   140024683:	call   0x140020cc4
   140024688:	mov    eax,ebx
   14002468a:	mov    rbx,QWORD PTR [rsp+0x70]
   14002468f:	mov    rsi,QWORD PTR [rsp+0x78]
   140024694:	add    rsp,0x60
   140024698:	pop    rdi
   140024699:	ret    
   14002469a:	int3   
   14002469b:	int3   
   14002469c:	int3   
   14002469d:	int3   
   14002469e:	int3   
   14002469f:	int3   
   1400246a0:	int3   
   1400246a1:	int3   
   1400246a2:	int3   
   1400246a3:	int3   
   1400246a4:	rex push rbp
   1400246a6:	sub    rsp,0x20
   1400246aa:	mov    rbp,rdx
   1400246ad:	lea    rcx,[rbp+0x28]
   1400246b1:	call   0x1400236a8
   1400246b6:	add    rsp,0x20
   1400246ba:	pop    rbp
   1400246bb:	ret    
   1400246bc:	mov    rax,rsp
   1400246bf:	push   rdi
   1400246c0:	sub    rsp,0x70
   1400246c4:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400246cd:	mov    QWORD PTR [rax+0x8],rbx
   1400246d1:	mov    QWORD PTR [rax+0x10],rbp
   1400246d5:	mov    QWORD PTR [rax+0x18],rsi
   1400246d9:	mov    rdi,r9
   1400246dc:	mov    rsi,r8
   1400246df:	mov    rbp,rdx
   1400246e2:	lea    rbx,[rcx-0x60]
   1400246e6:	mov    rdx,QWORD PTR [rbx+0x38]
   1400246ea:	lea    rcx,[rax-0x40]
   1400246ee:	call   0x140021aec
   1400246f3:	nop
   1400246f4:	lea    rcx,[rsp+0x50]
   1400246f9:	mov    r10,QWORD PTR [rsp+0xa8]
   140024701:	mov    rax,QWORD PTR [r10]
   140024704:	mov    QWORD PTR [rcx],rax
   140024707:	mov    rax,QWORD PTR [r10+0x8]
   14002470b:	mov    QWORD PTR [rcx+0x8],rax
   14002470f:	mov    rax,QWORD PTR [r10+0x10]
   140024713:	mov    QWORD PTR [rcx+0x10],rax
   140024717:	mov    r10,QWORD PTR [rbx]
   14002471a:	lea    rax,[rsp+0x50]
   14002471f:	mov    QWORD PTR [rsp+0x28],rax
   140024724:	mov    rax,QWORD PTR [rsp+0xa0]
   14002472c:	mov    QWORD PTR [rsp+0x20],rax
   140024731:	mov    r9,rdi
   140024734:	mov    r8,rsi
   140024737:	mov    rdx,rbp
   14002473a:	mov    rcx,rbx
   14002473d:	call   QWORD PTR [r10+0x190]
   140024744:	mov    ebx,eax
   140024746:	cmp    DWORD PTR [rsp+0x40],0x0
   14002474b:	je     0x140024759
   14002474d:	mov    rdx,QWORD PTR [rsp+0x38]
   140024752:	xor    ecx,ecx
   140024754:	call   0x140020cc4
   140024759:	mov    eax,ebx
   14002475b:	lea    r11,[rsp+0x70]
   140024760:	mov    rbx,QWORD PTR [r11+0x10]
   140024764:	mov    rbp,QWORD PTR [r11+0x18]
   140024768:	mov    rsi,QWORD PTR [r11+0x20]
   14002476c:	mov    rsp,r11
   14002476f:	pop    rdi
   140024770:	ret    
   140024771:	int3   
   140024772:	int3   
   140024773:	int3   
   140024774:	int3   
   140024775:	int3   
   140024776:	int3   
   140024777:	int3   
   140024778:	int3   
   140024779:	int3   
   14002477a:	int3   
   14002477b:	int3   
   14002477c:	rex push rbp
   14002477e:	sub    rsp,0x20
   140024782:	mov    rbp,rdx
   140024785:	lea    rcx,[rbp+0x38]
   140024789:	call   0x1400236a8
   14002478e:	add    rsp,0x20
   140024792:	pop    rbp
   140024793:	ret    
   140024794:	mov    rax,rsp
   140024797:	push   rdi
   140024798:	sub    rsp,0x60
   14002479c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400247a5:	mov    QWORD PTR [rax+0x8],rbx
   1400247a9:	mov    QWORD PTR [rax+0x10],rbp
   1400247ad:	mov    QWORD PTR [rax+0x18],rsi
   1400247b1:	mov    rsi,r9
   1400247b4:	mov    rbx,r8
   1400247b7:	mov    ebp,edx
   1400247b9:	lea    rdi,[rcx-0x60]
   1400247bd:	mov    rdx,QWORD PTR [rdi+0x38]
   1400247c1:	lea    rcx,[rax-0x40]
   1400247c5:	call   0x140021aec
   1400247ca:	nop
   1400247cb:	lea    rcx,[rsp+0x40]
   1400247d0:	mov    rax,QWORD PTR [rbx]
   1400247d3:	mov    QWORD PTR [rcx],rax
   1400247d6:	mov    rax,QWORD PTR [rbx+0x8]
   1400247da:	mov    QWORD PTR [rcx+0x8],rax
   1400247de:	mov    rax,QWORD PTR [rbx+0x10]
   1400247e2:	mov    QWORD PTR [rcx+0x10],rax
   1400247e6:	mov    rax,QWORD PTR [rdi]
   1400247e9:	mov    r9,rsi
   1400247ec:	lea    r8,[rsp+0x40]
   1400247f1:	mov    edx,ebp
   1400247f3:	mov    rcx,rdi
   1400247f6:	call   QWORD PTR [rax+0x198]
   1400247fc:	mov    ebx,eax
   1400247fe:	cmp    DWORD PTR [rsp+0x30],0x0
   140024803:	je     0x140024811
   140024805:	mov    rdx,QWORD PTR [rsp+0x28]
   14002480a:	xor    ecx,ecx
   14002480c:	call   0x140020cc4
   140024811:	mov    eax,ebx
   140024813:	lea    r11,[rsp+0x60]
   140024818:	mov    rbx,QWORD PTR [r11+0x10]
   14002481c:	mov    rbp,QWORD PTR [r11+0x18]
   140024820:	mov    rsi,QWORD PTR [r11+0x20]
   140024824:	mov    rsp,r11
   140024827:	pop    rdi
   140024828:	ret    
   140024829:	int3   
   14002482a:	int3   
   14002482b:	int3   
   14002482c:	int3   
   14002482d:	int3   
   14002482e:	int3   
   14002482f:	int3   
   140024830:	int3   
   140024831:	int3   
   140024832:	int3   
   140024833:	int3   
   140024834:	rex push rbp
   140024836:	sub    rsp,0x20
   14002483a:	mov    rbp,rdx
   14002483d:	lea    rcx,[rbp+0x28]
   140024841:	call   0x1400236a8
   140024846:	add    rsp,0x20
   14002484a:	pop    rbp
   14002484b:	ret    
   14002484c:	mov    rax,rsp
   14002484f:	push   rdi
   140024850:	sub    rsp,0x40
   140024854:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002485d:	mov    QWORD PTR [rax+0x8],rbx
   140024861:	mov    QWORD PTR [rax+0x10],rbp
   140024865:	mov    QWORD PTR [rax+0x18],rsi
   140024869:	mov    rdi,r9
   14002486c:	mov    esi,r8d
   14002486f:	mov    ebp,edx
   140024871:	lea    rbx,[rcx-0x60]
   140024875:	mov    rdx,QWORD PTR [rbx+0x38]
   140024879:	lea    rcx,[rax-0x20]
   14002487d:	call   0x140021aec
   140024882:	nop
   140024883:	mov    rax,QWORD PTR [rbx]
   140024886:	mov    r9,rdi
   140024889:	mov    r8d,esi
   14002488c:	mov    edx,ebp
   14002488e:	mov    rcx,rbx
   140024891:	call   QWORD PTR [rax+0x1a0]
   140024897:	mov    ebx,eax
   140024899:	cmp    DWORD PTR [rsp+0x30],0x0
   14002489e:	je     0x1400248ac
   1400248a0:	mov    rdx,QWORD PTR [rsp+0x28]
   1400248a5:	xor    ecx,ecx
   1400248a7:	call   0x140020cc4
   1400248ac:	mov    eax,ebx
   1400248ae:	mov    rbx,QWORD PTR [rsp+0x50]
   1400248b3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400248b8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400248bd:	add    rsp,0x40
   1400248c1:	pop    rdi
   1400248c2:	ret    
   1400248c3:	int3   
   1400248c4:	int3   
   1400248c5:	int3   
   1400248c6:	int3   
   1400248c7:	int3   
   1400248c8:	int3   
   1400248c9:	int3   
   1400248ca:	int3   
   1400248cb:	int3   
   1400248cc:	rex push rbp
   1400248ce:	sub    rsp,0x20
   1400248d2:	mov    rbp,rdx
   1400248d5:	lea    rcx,[rbp+0x28]
   1400248d9:	call   0x1400236a8
   1400248de:	add    rsp,0x20
   1400248e2:	pop    rbp
   1400248e3:	ret    
   1400248e4:	rex push rdi
   1400248e6:	sub    rsp,0x60
   1400248ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400248f3:	mov    QWORD PTR [rsp+0x70],rbx
   1400248f8:	mov    rbx,rdx
   1400248fb:	lea    rdi,[rcx-0x60]
   1400248ff:	mov    rdx,QWORD PTR [rdi+0x38]
   140024903:	lea    rcx,[rsp+0x28]
   140024908:	call   0x140021aec
   14002490d:	nop
   14002490e:	lea    rcx,[rsp+0x40]
   140024913:	mov    rax,QWORD PTR [rbx]
   140024916:	mov    QWORD PTR [rcx],rax
   140024919:	mov    rax,QWORD PTR [rbx+0x8]
   14002491d:	mov    QWORD PTR [rcx+0x8],rax
   140024921:	mov    rax,QWORD PTR [rbx+0x10]
   140024925:	mov    QWORD PTR [rcx+0x10],rax
   140024929:	mov    rax,QWORD PTR [rdi]
   14002492c:	lea    rdx,[rsp+0x40]
   140024931:	mov    rcx,rdi
   140024934:	call   QWORD PTR [rax+0x1a8]
   14002493a:	mov    ebx,eax
   14002493c:	cmp    DWORD PTR [rsp+0x30],0x0
   140024941:	je     0x14002494f
   140024943:	mov    rdx,QWORD PTR [rsp+0x28]
   140024948:	xor    ecx,ecx
   14002494a:	call   0x140020cc4
   14002494f:	mov    eax,ebx
   140024951:	mov    rbx,QWORD PTR [rsp+0x70]
   140024956:	add    rsp,0x60
   14002495a:	pop    rdi
   14002495b:	ret    
   14002495c:	int3   
   14002495d:	int3   
   14002495e:	int3   
   14002495f:	int3   
   140024960:	int3   
   140024961:	int3   
   140024962:	int3   
   140024963:	int3   
   140024964:	rex push rbp
   140024966:	sub    rsp,0x20
   14002496a:	mov    rbp,rdx
   14002496d:	lea    rcx,[rbp+0x28]
   140024971:	call   0x1400236a8
   140024976:	add    rsp,0x20
   14002497a:	pop    rbp
   14002497b:	ret    
   14002497c:	rex push rdi
   14002497e:	sub    rsp,0x60
   140024982:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002498b:	mov    QWORD PTR [rsp+0x70],rbx
   140024990:	mov    QWORD PTR [rsp+0x78],rsi
   140024995:	mov    rsi,r8
   140024998:	mov    rbx,rdx
   14002499b:	lea    rdi,[rcx-0x60]
   14002499f:	mov    rdx,QWORD PTR [rdi+0x38]
   1400249a3:	lea    rcx,[rsp+0x28]
   1400249a8:	call   0x140021aec
   1400249ad:	nop
   1400249ae:	lea    rcx,[rsp+0x40]
   1400249b3:	mov    rax,QWORD PTR [rbx]
   1400249b6:	mov    QWORD PTR [rcx],rax
   1400249b9:	mov    rax,QWORD PTR [rbx+0x8]
   1400249bd:	mov    QWORD PTR [rcx+0x8],rax
   1400249c1:	mov    rax,QWORD PTR [rbx+0x10]
   1400249c5:	mov    QWORD PTR [rcx+0x10],rax
   1400249c9:	mov    rax,QWORD PTR [rdi]
   1400249cc:	mov    r8,rsi
   1400249cf:	lea    rdx,[rsp+0x40]
   1400249d4:	mov    rcx,rdi
   1400249d7:	call   QWORD PTR [rax+0x1b0]
   1400249dd:	mov    ebx,eax
   1400249df:	cmp    DWORD PTR [rsp+0x30],0x0
   1400249e4:	je     0x1400249f2
   1400249e6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400249eb:	xor    ecx,ecx
   1400249ed:	call   0x140020cc4
   1400249f2:	mov    eax,ebx
   1400249f4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400249f9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400249fe:	add    rsp,0x60
   140024a02:	pop    rdi
   140024a03:	ret    
   140024a04:	int3   
   140024a05:	int3   
   140024a06:	int3   
   140024a07:	int3   
   140024a08:	int3   
   140024a09:	int3   
   140024a0a:	int3   
   140024a0b:	int3   
   140024a0c:	rex push rbp
   140024a0e:	sub    rsp,0x20
   140024a12:	mov    rbp,rdx
   140024a15:	lea    rcx,[rbp+0x28]
   140024a19:	call   0x1400236a8
   140024a1e:	add    rsp,0x20
   140024a22:	pop    rbp
   140024a23:	ret    
   140024a24:	rex push rdi
   140024a26:	sub    rsp,0x60
   140024a2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024a33:	mov    QWORD PTR [rsp+0x70],rbx
   140024a38:	mov    QWORD PTR [rsp+0x78],rsi
   140024a3d:	mov    rsi,r8
   140024a40:	mov    rbx,rdx
   140024a43:	lea    rdi,[rcx-0x60]
   140024a47:	mov    rdx,QWORD PTR [rdi+0x38]
   140024a4b:	lea    rcx,[rsp+0x28]
   140024a50:	call   0x140021aec
   140024a55:	nop
   140024a56:	lea    rcx,[rsp+0x40]
   140024a5b:	mov    rax,QWORD PTR [rbx]
   140024a5e:	mov    QWORD PTR [rcx],rax
   140024a61:	mov    rax,QWORD PTR [rbx+0x8]
   140024a65:	mov    QWORD PTR [rcx+0x8],rax
   140024a69:	mov    rax,QWORD PTR [rbx+0x10]
   140024a6d:	mov    QWORD PTR [rcx+0x10],rax
   140024a71:	mov    rax,QWORD PTR [rdi]
   140024a74:	mov    r8,rsi
   140024a77:	lea    rdx,[rsp+0x40]
   140024a7c:	mov    rcx,rdi
   140024a7f:	call   QWORD PTR [rax+0x1b8]
   140024a85:	mov    ebx,eax
   140024a87:	cmp    DWORD PTR [rsp+0x30],0x0
   140024a8c:	je     0x140024a9a
   140024a8e:	mov    rdx,QWORD PTR [rsp+0x28]
   140024a93:	xor    ecx,ecx
   140024a95:	call   0x140020cc4
   140024a9a:	mov    eax,ebx
   140024a9c:	mov    rbx,QWORD PTR [rsp+0x70]
   140024aa1:	mov    rsi,QWORD PTR [rsp+0x78]
   140024aa6:	add    rsp,0x60
   140024aaa:	pop    rdi
   140024aab:	ret    
   140024aac:	int3   
   140024aad:	int3   
   140024aae:	int3   
   140024aaf:	int3   
   140024ab0:	int3   
   140024ab1:	int3   
   140024ab2:	int3   
   140024ab3:	int3   
   140024ab4:	rex push rbp
   140024ab6:	sub    rsp,0x20
   140024aba:	mov    rbp,rdx
   140024abd:	lea    rcx,[rbp+0x28]
   140024ac1:	call   0x1400236a8
   140024ac6:	add    rsp,0x20
   140024aca:	pop    rbp
   140024acb:	ret    
   140024acc:	rex push rbx
   140024ace:	sub    rsp,0x40
   140024ad2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024adb:	lea    rbx,[rcx-0x68]
   140024adf:	mov    rdx,QWORD PTR [rbx+0x38]
   140024ae3:	lea    rcx,[rsp+0x28]
   140024ae8:	call   0x140021aec
   140024aed:	nop
   140024aee:	mov    rcx,rbx
   140024af1:	call   0x14003e9e4
   140024af6:	mov    ebx,eax
   140024af8:	cmp    DWORD PTR [rsp+0x30],0x0
   140024afd:	je     0x140024b0b
   140024aff:	mov    rdx,QWORD PTR [rsp+0x28]
   140024b04:	xor    ecx,ecx
   140024b06:	call   0x140020cc4
   140024b0b:	mov    eax,ebx
   140024b0d:	add    rsp,0x40
   140024b11:	pop    rbx
   140024b12:	ret    
   140024b13:	int3   
   140024b14:	int3   
   140024b15:	int3   
   140024b16:	int3   
   140024b17:	int3   
   140024b18:	int3   
   140024b19:	int3   
   140024b1a:	int3   
   140024b1b:	int3   
   140024b1c:	rex push rbp
   140024b1e:	sub    rsp,0x20
   140024b22:	mov    rbp,rdx
   140024b25:	lea    rcx,[rbp+0x28]
   140024b29:	call   0x1400236a8
   140024b2e:	add    rsp,0x20
   140024b32:	pop    rbp
   140024b33:	ret    
   140024b34:	rex push rbx
   140024b36:	sub    rsp,0x40
   140024b3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024b43:	lea    rbx,[rcx-0x68]
   140024b47:	mov    rdx,QWORD PTR [rbx+0x38]
   140024b4b:	lea    rcx,[rsp+0x28]
   140024b50:	call   0x140021aec
   140024b55:	nop
   140024b56:	mov    rcx,rbx
   140024b59:	call   0x14003ea98
   140024b5e:	mov    ebx,eax
   140024b60:	cmp    DWORD PTR [rsp+0x30],0x0
   140024b65:	je     0x140024b73
   140024b67:	mov    rdx,QWORD PTR [rsp+0x28]
   140024b6c:	xor    ecx,ecx
   140024b6e:	call   0x140020cc4
   140024b73:	mov    eax,ebx
   140024b75:	add    rsp,0x40
   140024b79:	pop    rbx
   140024b7a:	ret    
   140024b7b:	int3   
   140024b7c:	int3   
   140024b7d:	int3   
   140024b7e:	int3   
   140024b7f:	int3   
   140024b80:	int3   
   140024b81:	int3   
   140024b82:	int3   
   140024b83:	int3   
   140024b84:	rex push rbp
   140024b86:	sub    rsp,0x20
   140024b8a:	mov    rbp,rdx
   140024b8d:	lea    rcx,[rbp+0x28]
   140024b91:	call   0x1400236a8
   140024b96:	add    rsp,0x20
   140024b9a:	pop    rbp
   140024b9b:	ret    
   140024b9c:	rex push rdi
   140024b9e:	sub    rsp,0x40
   140024ba2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024bab:	mov    QWORD PTR [rsp+0x50],rbx
   140024bb0:	mov    QWORD PTR [rsp+0x58],rsi
   140024bb5:	mov    rdi,r8
   140024bb8:	mov    rsi,rdx
   140024bbb:	lea    rbx,[rcx-0x68]
   140024bbf:	mov    rdx,QWORD PTR [rbx+0x38]
   140024bc3:	lea    rcx,[rsp+0x28]
   140024bc8:	call   0x140021aec
   140024bcd:	nop
   140024bce:	mov    r8,rdi
   140024bd1:	mov    rdx,rsi
   140024bd4:	mov    rcx,rbx
   140024bd7:	call   0x14003eb14
   140024bdc:	mov    ebx,eax
   140024bde:	cmp    DWORD PTR [rsp+0x30],0x0
   140024be3:	je     0x140024bf1
   140024be5:	mov    rdx,QWORD PTR [rsp+0x28]
   140024bea:	xor    ecx,ecx
   140024bec:	call   0x140020cc4
   140024bf1:	mov    eax,ebx
   140024bf3:	mov    rbx,QWORD PTR [rsp+0x50]
   140024bf8:	mov    rsi,QWORD PTR [rsp+0x58]
   140024bfd:	add    rsp,0x40
   140024c01:	pop    rdi
   140024c02:	ret    
   140024c03:	int3   
   140024c04:	int3   
   140024c05:	int3   
   140024c06:	int3   
   140024c07:	int3   
   140024c08:	int3   
   140024c09:	int3   
   140024c0a:	int3   
   140024c0b:	int3   
   140024c0c:	rex push rbp
   140024c0e:	sub    rsp,0x20
   140024c12:	mov    rbp,rdx
   140024c15:	lea    rcx,[rbp+0x28]
   140024c19:	call   0x1400236a8
   140024c1e:	add    rsp,0x20
   140024c22:	pop    rbp
   140024c23:	ret    
   140024c24:	rex push rdi
   140024c26:	sub    rsp,0x40
   140024c2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024c33:	mov    QWORD PTR [rsp+0x50],rbx
   140024c38:	mov    rdi,rdx
   140024c3b:	lea    rbx,[rcx-0x68]
   140024c3f:	mov    rdx,QWORD PTR [rbx+0x38]
   140024c43:	lea    rcx,[rsp+0x28]
   140024c48:	call   0x140021aec
   140024c4d:	nop
   140024c4e:	mov    rax,QWORD PTR [rbx]
   140024c51:	mov    rdx,rdi
   140024c54:	mov    rcx,rbx
   140024c57:	call   QWORD PTR [rax+0x1c0]
   140024c5d:	mov    ebx,eax
   140024c5f:	cmp    DWORD PTR [rsp+0x30],0x0
   140024c64:	je     0x140024c72
   140024c66:	mov    rdx,QWORD PTR [rsp+0x28]
   140024c6b:	xor    ecx,ecx
   140024c6d:	call   0x140020cc4
   140024c72:	mov    eax,ebx
   140024c74:	mov    rbx,QWORD PTR [rsp+0x50]
   140024c79:	add    rsp,0x40
   140024c7d:	pop    rdi
   140024c7e:	ret    
   140024c7f:	int3   
   140024c80:	int3   
   140024c81:	int3   
   140024c82:	int3   
   140024c83:	int3   
   140024c84:	rex push rbp
   140024c86:	sub    rsp,0x20
   140024c8a:	mov    rbp,rdx
   140024c8d:	lea    rcx,[rbp+0x28]
   140024c91:	call   0x1400236a8
   140024c96:	add    rsp,0x20
   140024c9a:	pop    rbp
   140024c9b:	ret    
   140024c9c:	mov    QWORD PTR [rsp+0x8],rbx
   140024ca1:	push   rdi
   140024ca2:	sub    rsp,0x30
   140024ca6:	test   rdx,rdx
   140024ca9:	mov    rbx,rdx
   140024cac:	mov    rdi,rcx
   140024caf:	jne    0x140024cb8
   140024cb1:	mov    eax,0x80004003
   140024cb6:	jmp    0x140024ce2
   140024cb8:	mov    rdx,QWORD PTR [rcx-0x30]
   140024cbc:	lea    rcx,[rsp+0x20]
   140024cc1:	call   0x140021aec
   140024cc6:	cmp    DWORD PTR [rsp+0x28],0x0
   140024ccb:	mov    r11,QWORD PTR [rdi-0x28]
   140024ccf:	mov    QWORD PTR [rbx],r11
   140024cd2:	je     0x140024ce0
   140024cd4:	mov    rdx,QWORD PTR [rsp+0x20]
   140024cd9:	xor    ecx,ecx
   140024cdb:	call   0x140020cc4
   140024ce0:	xor    eax,eax
   140024ce2:	mov    rbx,QWORD PTR [rsp+0x40]
   140024ce7:	add    rsp,0x30
   140024ceb:	pop    rdi
   140024cec:	ret    
   140024ced:	int3   
   140024cee:	int3   
   140024cef:	int3   
   140024cf0:	sub    rsp,0x28
   140024cf4:	mov    rcx,QWORD PTR [rcx]
   140024cf7:	test   rcx,rcx
   140024cfa:	je     0x140024d02
   140024cfc:	mov    rax,QWORD PTR [rcx]
   140024cff:	call   QWORD PTR [rax+0x10]
   140024d02:	add    rsp,0x28
   140024d06:	ret    
   140024d07:	int3   
   140024d08:	mov    rax,rsp
   140024d0b:	push   rdi
   140024d0c:	sub    rsp,0x50
   140024d10:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024d19:	mov    QWORD PTR [rax+0x20],rbx
   140024d1d:	mov    rdi,rcx
   140024d20:	mov    DWORD PTR [rax-0x28],edx
   140024d23:	mov    QWORD PTR [rax-0x20],rcx
   140024d27:	and    DWORD PTR [rax-0x18],0x0
   140024d2b:	call   0x1400210b0
   140024d30:	mov    rbx,rax
   140024d33:	mov    QWORD PTR [rsp+0x60],rax
   140024d38:	mov    rdx,QWORD PTR [rax+0x198]
   140024d3f:	mov    QWORD PTR [rsp+0x70],rdx
   140024d44:	mov    rdx,QWORD PTR [rdi+0x40]
   140024d48:	mov    QWORD PTR [rax+0x198],rdx
   140024d4f:	and    DWORD PTR [rsp+0x68],0x0
   140024d54:	mov    r8,QWORD PTR [rdi]
   140024d57:	lea    rdx,[rsp+0x30]
   140024d5c:	mov    rcx,rdi
   140024d5f:	call   QWORD PTR [r8+0x1e8]
   140024d66:	mov    DWORD PTR [rsp+0x68],0x1
   140024d6e:	jmp    0x140024d7c
   140024d70:	mov    rbx,QWORD PTR [rsp+0x60]
   140024d75:	jmp    0x140024d7c
   140024d77:	mov    rbx,QWORD PTR [rsp+0x60]
   140024d7c:	mov    rax,QWORD PTR [rsp+0x70]
   140024d81:	mov    QWORD PTR [rbx+0x198],rax
   140024d88:	mov    eax,DWORD PTR [rsp+0x68]
   140024d8c:	mov    rbx,QWORD PTR [rsp+0x78]
   140024d91:	add    rsp,0x50
   140024d95:	pop    rdi
   140024d96:	ret    
   140024d97:	int3   
   140024d98:	mov    QWORD PTR [rsp+0x10],rdx
   140024d9d:	push   rbp
   140024d9e:	sub    rsp,0x20
   140024da2:	mov    rbp,rdx
   140024da5:	lea    rax,[rip+0xffffffffffffffc4]        # 0x140024d70
   140024dac:	jmp    0x140024dae
   140024dae:	add    rsp,0x20
   140024db2:	pop    rbp
   140024db3:	ret    
   140024db4:	int3   
   140024db5:	int3   
   140024db6:	int3   
   140024db7:	int3   
   140024db8:	mov    QWORD PTR [rsp+0x10],rdx
   140024dbd:	push   rbx
   140024dbe:	push   rbp
   140024dbf:	sub    rsp,0x28
   140024dc3:	mov    rbp,rdx
   140024dc6:	mov    rbx,QWORD PTR [rbp+0x28]
   140024dca:	mov    rax,QWORD PTR [rbx]
   140024dcd:	mov    edx,0x30
   140024dd2:	mov    r8d,0xf108
   140024dd8:	mov    rcx,rbx
   140024ddb:	call   QWORD PTR [rax+0x28]
   140024dde:	mov    rcx,rbx
   140024de1:	call   0x1400207b8
   140024de6:	nop
   140024de7:	lea    rax,[rip+0xffffffffffffff89]        # 0x140024d77
   140024dee:	jmp    0x140024df0
   140024df0:	add    rsp,0x28
   140024df4:	pop    rbp
   140024df5:	pop    rbx
   140024df6:	ret    
   140024df7:	int3   
   140024df8:	mov    QWORD PTR [rsp+0x8],rbx
   140024dfd:	mov    QWORD PTR [rsp+0x10],rbp
   140024e02:	mov    QWORD PTR [rsp+0x18],rsi
   140024e07:	push   rdi
   140024e08:	sub    rsp,0xa0
   140024e0f:	mov    rdi,rdx
   140024e12:	mov    rsi,rcx
   140024e15:	call   0x14002998c
   140024e1a:	xor    ebx,ebx
   140024e1c:	mov    ebp,eax
   140024e1e:	cmp    rdi,rbx
   140024e21:	je     0x140024e29
   140024e23:	mov    rdi,QWORD PTR [rdi+0x40]
   140024e27:	jmp    0x140024e69
   140024e29:	bt     eax,0x1e
   140024e2d:	mov    rcx,QWORD PTR [rsi+0x40]
   140024e31:	jae    0x140024e3b
   140024e33:	call   QWORD PTR [rip+0x3fca7]        # 0x140064ae0
   140024e39:	jmp    0x140024e46
   140024e3b:	mov    edx,0x4
   140024e40:	call   QWORD PTR [rip+0x3fb3a]        # 0x140064980
   140024e46:	cmp    rax,rbx
   140024e49:	mov    rdi,rax
   140024e4c:	je     0x140024e69
   140024e4e:	xor    r9d,r9d
   140024e51:	xor    r8d,r8d
   140024e54:	mov    edx,0x36b
   140024e59:	mov    rcx,rax
   140024e5c:	call   QWORD PTR [rip+0x3fd0e]        # 0x140064b70
   140024e62:	cmp    rax,rbx
   140024e65:	cmovne rdi,rax
   140024e69:	mov    rcx,QWORD PTR [rsi+0x40]
   140024e6d:	lea    rdx,[rsp+0x50]
   140024e72:	call   QWORD PTR [rip+0x3fae0]        # 0x140064958
   140024e78:	bt     ebp,0x1e
   140024e7c:	jb     0x140024f41
   140024e82:	cmp    rdi,rbx
   140024e85:	je     0x140024ea4
   140024e87:	mov    edx,0xfffffff0
   140024e8c:	mov    rcx,rdi
   140024e8f:	call   QWORD PTR [rip+0x3fb6b]        # 0x140064a00
   140024e95:	bt     eax,0x1c
   140024e99:	jae    0x140024ea1
   140024e9b:	bt     eax,0x1d
   140024e9f:	jae    0x140024ea4
   140024ea1:	mov    rdi,rbx
   140024ea4:	cmp    rdi,rbx
   140024ea7:	mov    DWORD PTR [rsp+0x70],0x28
   140024eaf:	jne    0x140024f04
   140024eb1:	call   0x14001c840
   140024eb6:	cmp    rax,rbx
   140024eb9:	je     0x140024ec9
   140024ebb:	mov    rdx,QWORD PTR [rax]
   140024ebe:	mov    rcx,rax
   140024ec1:	call   QWORD PTR [rdx+0xe8]
   140024ec7:	jmp    0x140024ecc
   140024ec9:	mov    rax,rbx
   140024ecc:	cmp    rax,rbx
   140024ecf:	je     0x140024ed5
   140024ed1:	mov    rbx,QWORD PTR [rax+0x40]
   140024ed5:	mov    edx,0x1
   140024eda:	mov    rcx,rbx
   140024edd:	call   0x140021d84
   140024ee2:	lea    rdx,[rsp+0x70]
   140024ee7:	mov    rcx,rax
   140024eea:	call   0x140021e04
   140024eef:	lea    rdx,[rsp+0x84]
   140024ef7:	lea    rcx,[rsp+0x60]
   140024efc:	call   QWORD PTR [rip+0x3faae]        # 0x1400649b0
   140024f02:	jmp    0x140024f2c
   140024f04:	lea    rdx,[rsp+0x60]
   140024f09:	mov    rcx,rdi
   140024f0c:	call   QWORD PTR [rip+0x3fa46]        # 0x140064958
   140024f12:	mov    edx,0x2
   140024f17:	mov    rcx,rdi
   140024f1a:	call   0x140021d84
   140024f1f:	lea    rdx,[rsp+0x70]
   140024f24:	mov    rcx,rax
   140024f27:	call   0x140021e04
   140024f2c:	lea    rdx,[rsp+0x84]
   140024f34:	lea    rcx,[rsp+0x40]
   140024f39:	call   QWORD PTR [rip+0x3fa71]        # 0x1400649b0
   140024f3f:	jmp    0x140024f81
   140024f41:	mov    rcx,QWORD PTR [rsi+0x40]
   140024f45:	call   QWORD PTR [rip+0x3fb95]        # 0x140064ae0
   140024f4b:	lea    rdx,[rsp+0x40]
   140024f50:	mov    rcx,rax
   140024f53:	mov    rbx,rax
   140024f56:	call   QWORD PTR [rip+0x3fc04]        # 0x140064b60
   140024f5c:	lea    rdx,[rsp+0x60]
   140024f61:	mov    rcx,rdi
   140024f64:	call   QWORD PTR [rip+0x3fbf6]        # 0x140064b60
   140024f6a:	lea    r8,[rsp+0x60]
   140024f6f:	mov    r9d,0x2
   140024f75:	mov    rdx,rbx
   140024f78:	mov    rcx,rdi
   140024f7b:	call   QWORD PTR [rip+0x3f947]        # 0x1400648c8
   140024f81:	mov    ecx,DWORD PTR [rsp+0x60]
   140024f85:	mov    eax,DWORD PTR [rsp+0x68]
   140024f89:	mov    r10d,DWORD PTR [rsp+0x58]
   140024f8e:	sub    r10d,DWORD PTR [rsp+0x50]
   140024f93:	mov    r11d,DWORD PTR [rsp+0x5c]
   140024f98:	add    eax,ecx
   140024f9a:	sub    r11d,DWORD PTR [rsp+0x54]
   140024f9f:	mov    ecx,DWORD PTR [rsp+0x64]
   140024fa3:	cdq    
   140024fa4:	sub    eax,edx
   140024fa6:	sar    eax,1
   140024fa8:	mov    r8d,eax
   140024fab:	mov    eax,r10d
   140024fae:	cdq    
   140024faf:	sub    eax,edx
   140024fb1:	sar    eax,1
   140024fb3:	sub    r8d,eax
   140024fb6:	mov    eax,DWORD PTR [rsp+0x6c]
   140024fba:	add    eax,ecx
   140024fbc:	cdq    
   140024fbd:	sub    eax,edx
   140024fbf:	sar    eax,1
   140024fc1:	mov    r9d,eax
   140024fc4:	mov    eax,r11d
   140024fc7:	cdq    
   140024fc8:	sub    eax,edx
   140024fca:	sar    eax,1
   140024fcc:	sub    r9d,eax
   140024fcf:	cmp    r8d,DWORD PTR [rsp+0x40]
   140024fd4:	jge    0x140024fdd
   140024fd6:	mov    r8d,DWORD PTR [rsp+0x40]
   140024fdb:	jmp    0x140024ff6
   140024fdd:	lea    eax,[r10+r8*1]
   140024fe1:	cmp    eax,DWORD PTR [rsp+0x48]
   140024fe5:	jle    0x140024ff6
   140024fe7:	mov    r8d,DWORD PTR [rsp+0x50]
   140024fec:	sub    r8d,DWORD PTR [rsp+0x58]
   140024ff1:	add    r8d,DWORD PTR [rsp+0x48]
   140024ff6:	cmp    r9d,DWORD PTR [rsp+0x44]
   140024ffb:	jge    0x140025004
   140024ffd:	mov    r9d,DWORD PTR [rsp+0x44]
   140025002:	jmp    0x14002501d
   140025004:	lea    eax,[r11+r9*1]
   140025008:	cmp    eax,DWORD PTR [rsp+0x4c]
   14002500c:	jle    0x14002501d
   14002500e:	mov    r9d,DWORD PTR [rsp+0x54]
   140025013:	sub    r9d,DWORD PTR [rsp+0x5c]
   140025018:	add    r9d,DWORD PTR [rsp+0x4c]
   14002501d:	or     eax,0xffffffff
   140025020:	mov    DWORD PTR [rsp+0x30],0x15
   140025028:	xor    edx,edx
   14002502a:	mov    DWORD PTR [rsp+0x28],eax
   14002502e:	mov    rcx,rsi
   140025031:	mov    DWORD PTR [rsp+0x20],eax
   140025035:	call   0x140029d08
   14002503a:	lea    r11,[rsp+0xa0]
   140025042:	mov    rbx,QWORD PTR [r11+0x10]
   140025046:	mov    rbp,QWORD PTR [r11+0x18]
   14002504a:	mov    rsi,QWORD PTR [r11+0x20]
   14002504e:	mov    rsp,r11
   140025051:	pop    rdi
   140025052:	ret    
   140025053:	int3   
   140025054:	mov    QWORD PTR [rsp+0x8],rbx
   140025059:	mov    QWORD PTR [rsp+0x10],rbp
   14002505e:	mov    QWORD PTR [rsp+0x18],rsi
   140025063:	push   rdi
   140025064:	push   r12
   140025066:	push   r13
   140025068:	push   r14
   14002506a:	push   r15
   14002506c:	sub    rsp,0x30
   140025070:	mov    r15d,0x1
   140025076:	xor    r12d,r12d
   140025079:	test   dl,0x4
   14002507c:	mov    ebp,edx
   14002507e:	mov    rbx,rcx
   140025081:	mov    esi,r15d
   140025084:	je     0x140025096
   140025086:	call   0x14002998c
   14002508b:	bt     eax,0x1c
   14002508f:	jb     0x140025096
   140025091:	mov    edi,r15d
   140025094:	jmp    0x140025098
   140025096:	xor    edi,edi
   140025098:	mov    rcx,QWORD PTR [rbx+0x40]
   14002509c:	call   QWORD PTR [rip+0x3fa3e]        # 0x140064ae0
   1400250a2:	or     DWORD PTR [rbx+0x78],0x18
   1400250a6:	mov    r14,rax
   1400250a9:	call   0x14001c854
   1400250ae:	mov    r13,rax
   1400250b1:	jmp    0x140025131
   1400250b3:	and    DWORD PTR [rsp+0x20],0x0
   1400250b8:	xor    r9d,r9d
   1400250bb:	xor    r8d,r8d
   1400250be:	xor    edx,edx
   1400250c0:	mov    rcx,r13
   1400250c3:	call   QWORD PTR [rip+0x3f9df]        # 0x140064aa8
   1400250c9:	test   eax,eax
   1400250cb:	jne    0x140025139
   1400250cd:	test   edi,edi
   1400250cf:	je     0x1400250e8
   1400250d1:	mov    edx,r15d
   1400250d4:	mov    rcx,rbx
   1400250d7:	call   0x140029b0c
   1400250dc:	mov    rcx,QWORD PTR [rbx+0x40]
   1400250e0:	call   QWORD PTR [rip+0x3f7ea]        # 0x1400648d0
   1400250e6:	xor    edi,edi
   1400250e8:	test   r15b,bpl
   1400250eb:	jne    0x14002510c
   1400250ed:	test   r14,r14
   1400250f0:	je     0x14002510c
   1400250f2:	test   r12d,r12d
   1400250f5:	jne    0x14002510c
   1400250f7:	mov    r9,QWORD PTR [rbx+0x40]
   1400250fb:	xor    r8d,r8d
   1400250fe:	mov    edx,0x121
   140025103:	mov    rcx,r14
   140025106:	call   QWORD PTR [rip+0x3fa64]        # 0x140064b70
   14002510c:	test   bpl,0x2
   140025110:	jne    0x14002512f
   140025112:	mov    rcx,QWORD PTR [rbx+0x40]
   140025116:	movsxd r9,r12d
   140025119:	xor    r8d,r8d
   14002511c:	mov    edx,0x36a
   140025121:	call   QWORD PTR [rip+0x3fa49]        # 0x140064b70
   140025127:	add    r12d,r15d
   14002512a:	test   rax,rax
   14002512d:	jne    0x140025131
   14002512f:	xor    esi,esi
   140025131:	test   esi,esi
   140025133:	jne    0x1400250b3
   140025139:	call   0x14001ce5c
   14002513e:	test   eax,eax
   140025140:	je     0x1400251bb
   140025142:	test   edi,edi
   140025144:	je     0x140025171
   140025146:	cmp    DWORD PTR [r13+0x8],0x118
   14002514e:	je     0x14002515a
   140025150:	cmp    DWORD PTR [r13+0x8],0x104
   140025158:	jne    0x140025171
   14002515a:	mov    edx,r15d
   14002515d:	mov    rcx,rbx
   140025160:	call   0x140029b0c
   140025165:	mov    rcx,QWORD PTR [rbx+0x40]
   140025169:	call   QWORD PTR [rip+0x3f761]        # 0x1400648d0
   14002516f:	xor    edi,edi
   140025171:	mov    rax,QWORD PTR [rbx]
   140025174:	mov    rcx,rbx
   140025177:	call   QWORD PTR [rax+0x100]
   14002517d:	test   eax,eax
   14002517f:	je     0x1400251af
   140025181:	mov    rcx,r13
   140025184:	call   0x14001ccf0
   140025189:	test   eax,eax
   14002518b:	je     0x140025193
   14002518d:	mov    esi,r15d
   140025190:	xor    r12d,r12d
   140025193:	and    DWORD PTR [rsp+0x20],0x0
   140025198:	xor    r9d,r9d
   14002519b:	xor    r8d,r8d
   14002519e:	xor    edx,edx
   1400251a0:	mov    rcx,r13
   1400251a3:	call   QWORD PTR [rip+0x3f8ff]        # 0x140064aa8
   1400251a9:	test   eax,eax
   1400251ab:	jne    0x140025139
   1400251ad:	jmp    0x140025131
   1400251af:	and    DWORD PTR [rbx+0x78],0xffffffe7
   1400251b3:	mov    eax,DWORD PTR [rbx+0x88]
   1400251b9:	jmp    0x1400251c5
   1400251bb:	xor    ecx,ecx
   1400251bd:	call   0x14001afa8
   1400251c2:	or     eax,0xffffffff
   1400251c5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400251ca:	mov    rbp,QWORD PTR [rsp+0x68]
   1400251cf:	mov    rsi,QWORD PTR [rsp+0x70]
   1400251d4:	add    rsp,0x30
   1400251d8:	pop    r15
   1400251da:	pop    r14
   1400251dc:	pop    r13
   1400251de:	pop    r12
   1400251e0:	pop    rdi
   1400251e1:	ret    
   1400251e2:	int3   
   1400251e3:	int3   
   1400251e4:	sub    rsp,0x28
   1400251e8:	mov    eax,DWORD PTR [rcx+0x78]
   1400251eb:	mov    DWORD PTR [rcx+0x88],edx
   1400251f1:	test   al,0x10
   1400251f3:	je     0x14002520d
   1400251f5:	and    eax,0xffffffef
   1400251f8:	xor    r9d,r9d
   1400251fb:	xor    r8d,r8d
   1400251fe:	mov    DWORD PTR [rcx+0x78],eax
   140025201:	mov    rcx,QWORD PTR [rcx+0x40]
   140025205:	xor    edx,edx
   140025207:	call   QWORD PTR [rip+0x3f8fb]        # 0x140064b08
   14002520d:	add    rsp,0x28
   140025211:	ret    
   140025212:	int3   
   140025213:	int3   
   140025214:	sub    rsp,0x38
   140025218:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025221:	mov    ecx,0xa8
   140025226:	call   0x14001ac0c
   14002522b:	mov    rcx,rax
   14002522e:	mov    QWORD PTR [rsp+0x40],rax
   140025233:	xor    eax,eax
   140025235:	cmp    rcx,rax
   140025238:	je     0x140025240
   14002523a:	call   0x1400236c4
   14002523f:	nop
   140025240:	add    rsp,0x38
   140025244:	ret    
   140025245:	int3   
   140025246:	int3   
   140025247:	int3   
   140025248:	int3   
   140025249:	int3   
   14002524a:	int3   
   14002524b:	int3   
   14002524c:	int3   
   14002524d:	int3   
   14002524e:	int3   
   14002524f:	int3   
   140025250:	int3   
   140025251:	int3   
   140025252:	int3   
   140025253:	int3   
   140025254:	rex push rbp
   140025256:	sub    rsp,0x20
   14002525a:	mov    rbp,rdx
   14002525d:	mov    rcx,QWORD PTR [rbp+0x40]
   140025261:	call   0x140001040
   140025266:	add    rsp,0x20
   14002526a:	pop    rbp
   14002526b:	ret    
   14002526c:	mov    QWORD PTR [rsp+0x8],rcx
   140025271:	sub    rsp,0x38
   140025275:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002527e:	mov    QWORD PTR [rsp+0x48],rcx
   140025283:	test   rcx,rcx
   140025286:	je     0x14002528e
   140025288:	call   0x1400236c4
   14002528d:	nop
   14002528e:	add    rsp,0x38
   140025292:	ret    
   140025293:	int3   
   140025294:	int3   
   140025295:	int3   
   140025296:	int3   
   140025297:	int3   
   140025298:	int3   
   140025299:	int3   
   14002529a:	int3   
   14002529b:	int3   
   14002529c:	rex push rbp
   14002529e:	sub    rsp,0x20
   1400252a2:	mov    rbp,rdx
   1400252a5:	mov    rdx,QWORD PTR [rbp+0x40]
   1400252a9:	mov    rcx,QWORD PTR [rbp+0x48]
   1400252ad:	call   0x14001ef88
   1400252b2:	add    rsp,0x20
   1400252b6:	pop    rbp
   1400252b7:	ret    
   1400252b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400252bd:	push   rdi
   1400252be:	sub    rsp,0x20
   1400252c2:	cmp    QWORD PTR [rcx+0x20],0x0
   1400252c7:	mov    rdi,rdx
   1400252ca:	mov    rbx,rcx
   1400252cd:	jne    0x140025315
   1400252cf:	cmp    QWORD PTR [rcx+0x8],0x0
   1400252d4:	jne    0x140025300
   1400252d6:	mov    rcx,QWORD PTR [rcx+0x18]
   1400252da:	call   QWORD PTR [rip+0x3f2b0]        # 0x140064590
   1400252e0:	test   rax,rax
   1400252e3:	mov    QWORD PTR [rbx+0x8],rax
   1400252e7:	jne    0x140025300
   1400252e9:	mov    rcx,QWORD PTR [rbx+0x18]
   1400252ed:	call   QWORD PTR [rip+0x3f2ed]        # 0x1400645e0
   1400252f3:	test   rax,rax
   1400252f6:	mov    QWORD PTR [rbx+0x8],rax
   1400252fa:	setne  al
   1400252fd:	mov    BYTE PTR [rbx+0x10],al
   140025300:	mov    rcx,QWORD PTR [rbx+0x8]
   140025304:	lea    rdx,[rip+0x44a8d]        # 0x140069d98
   14002530b:	call   QWORD PTR [rip+0x3f2d7]        # 0x1400645e8
   140025311:	mov    QWORD PTR [rbx+0x20],rax
   140025315:	mov    rax,QWORD PTR [rbx+0x20]
   140025319:	mov    rbx,QWORD PTR [rsp+0x30]
   14002531e:	mov    QWORD PTR [rdi],rax
   140025321:	mov    rax,rdi
   140025324:	add    rsp,0x20
   140025328:	pop    rdi
   140025329:	ret    
   14002532a:	int3   
   14002532b:	int3   
   14002532c:	mov    QWORD PTR [rsp+0x8],rbx
   140025331:	push   rdi
   140025332:	sub    rsp,0x20
   140025336:	mov    rdi,rcx
   140025339:	and    QWORD PTR [rsp+0x40],0x0
   14002533f:	call   0x140021a70
   140025344:	lea    rdx,[rsp+0x40]
   140025349:	mov    rcx,QWORD PTR [rax+0xd8]
   140025350:	call   0x140020ce0
   140025355:	mov    ebx,eax
   140025357:	mov    DWORD PTR [rsp+0x38],eax
   14002535b:	test   eax,eax
   14002535d:	je     0x140025396
   14002535f:	lea    rdx,[rsp+0x48]
   140025364:	mov    rcx,rdi
   140025367:	call   0x1400252b8
   14002536c:	mov    r11,QWORD PTR [rdi+0x20]
   140025370:	xor    ecx,ecx
   140025372:	test   r11,r11
   140025375:	setne  cl
   140025378:	test   ecx,ecx
   14002537a:	jne    0x140025381
   14002537c:	call   0x1400208f8
   140025381:	call   r11
   140025384:	nop
   140025385:	cmp    ebx,0x2
   140025388:	je     0x140025396
   14002538a:	mov    rdx,QWORD PTR [rsp+0x40]
   14002538f:	xor    ecx,ecx
   140025391:	call   0x140020cc4
   140025396:	mov    rbx,QWORD PTR [rsp+0x30]
   14002539b:	add    rsp,0x20
   14002539f:	pop    rdi
   1400253a0:	ret    
   1400253a1:	int3   
   1400253a2:	int3   
   1400253a3:	int3   
   1400253a4:	int3   
   1400253a5:	int3   
   1400253a6:	int3   
   1400253a7:	int3   
   1400253a8:	int3   
   1400253a9:	int3   
   1400253aa:	int3   
   1400253ab:	int3   
   1400253ac:	rex push rbp
   1400253ae:	sub    rsp,0x20
   1400253b2:	mov    rbp,rdx
   1400253b5:	cmp    DWORD PTR [rbp+0x38],0x2
   1400253b9:	je     0x1400253c6
   1400253bb:	mov    rdx,QWORD PTR [rbp+0x40]
   1400253bf:	xor    ecx,ecx
   1400253c1:	call   0x140020cc4
   1400253c6:	add    rsp,0x20
   1400253ca:	pop    rbp
   1400253cb:	ret    
   1400253cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400253d1:	push   rdi
   1400253d2:	sub    rsp,0x20
   1400253d6:	cmp    QWORD PTR [rcx+0x28],0x0
   1400253db:	mov    rdi,rdx
   1400253de:	mov    rbx,rcx
   1400253e1:	jne    0x140025429
   1400253e3:	cmp    QWORD PTR [rcx+0x8],0x0
   1400253e8:	jne    0x140025414
   1400253ea:	mov    rcx,QWORD PTR [rcx+0x18]
   1400253ee:	call   QWORD PTR [rip+0x3f19c]        # 0x140064590
   1400253f4:	test   rax,rax
   1400253f7:	mov    QWORD PTR [rbx+0x8],rax
   1400253fb:	jne    0x140025414
   1400253fd:	mov    rcx,QWORD PTR [rbx+0x18]
   140025401:	call   QWORD PTR [rip+0x3f1d9]        # 0x1400645e0
   140025407:	test   rax,rax
   14002540a:	mov    QWORD PTR [rbx+0x8],rax
   14002540e:	setne  al
   140025411:	mov    BYTE PTR [rbx+0x10],al
   140025414:	mov    rcx,QWORD PTR [rbx+0x8]
   140025418:	lea    rdx,[rip+0x44991]        # 0x140069db0
   14002541f:	call   QWORD PTR [rip+0x3f1c3]        # 0x1400645e8
   140025425:	mov    QWORD PTR [rbx+0x28],rax
   140025429:	mov    rax,QWORD PTR [rbx+0x28]
   14002542d:	mov    rbx,QWORD PTR [rsp+0x30]
   140025432:	mov    QWORD PTR [rdi],rax
   140025435:	mov    rax,rdi
   140025438:	add    rsp,0x20
   14002543c:	pop    rdi
   14002543d:	ret    
   14002543e:	int3   
   14002543f:	int3   
   140025440:	mov    QWORD PTR [rsp+0x8],rbx
   140025445:	mov    QWORD PTR [rsp+0x10],rsi
   14002544a:	push   rdi
   14002544b:	sub    rsp,0x30
   14002544f:	mov    rsi,rdx
   140025452:	mov    rdi,rcx
   140025455:	and    QWORD PTR [rsp+0x58],0x0
   14002545b:	call   0x140021a70
   140025460:	lea    rdx,[rsp+0x58]
   140025465:	mov    rcx,QWORD PTR [rax+0xd8]
   14002546c:	call   0x140020ce0
   140025471:	mov    ebx,eax
   140025473:	mov    DWORD PTR [rsp+0x50],eax
   140025477:	and    DWORD PTR [rsp+0x20],0x0
   14002547c:	test   eax,eax
   14002547e:	je     0x1400254e4
   140025480:	lea    rdx,[rsp+0x28]
   140025485:	mov    rcx,rdi
   140025488:	call   0x1400253cc
   14002548d:	mov    r11,QWORD PTR [rdi+0x28]
   140025491:	xor    eax,eax
   140025493:	test   r11,r11
   140025496:	setne  al
   140025499:	test   eax,eax
   14002549b:	jne    0x1400254a2
   14002549d:	call   0x1400208f8
   1400254a2:	mov    rcx,rsi
   1400254a5:	call   r11
   1400254a8:	mov    esi,eax
   1400254aa:	mov    DWORD PTR [rsp+0x20],eax
   1400254ae:	cmp    ebx,0x2
   1400254b1:	je     0x1400254e2
   1400254b3:	xor    ebx,ebx
   1400254b5:	test   eax,eax
   1400254b7:	sete   bl
   1400254ba:	test   ebx,ebx
   1400254bc:	je     0x1400254c8
   1400254be:	call   QWORD PTR [rip+0x3f13c]        # 0x140064600
   1400254c4:	mov    edi,eax
   1400254c6:	jmp    0x1400254ca
   1400254c8:	xor    edi,edi
   1400254ca:	mov    rdx,QWORD PTR [rsp+0x58]
   1400254cf:	xor    ecx,ecx
   1400254d1:	call   0x140020cc4
   1400254d6:	test   ebx,ebx
   1400254d8:	je     0x1400254e2
   1400254da:	mov    ecx,edi
   1400254dc:	call   QWORD PTR [rip+0x3efbe]        # 0x1400644a0
   1400254e2:	mov    eax,esi
   1400254e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400254e9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400254ee:	add    rsp,0x30
   1400254f2:	pop    rdi
   1400254f3:	ret    
   1400254f4:	int3   
   1400254f5:	int3   
   1400254f6:	int3   
   1400254f7:	int3   
   1400254f8:	int3   
   1400254f9:	int3   
   1400254fa:	int3   
   1400254fb:	int3   
   1400254fc:	int3   
   1400254fd:	int3   
   1400254fe:	int3   
   1400254ff:	int3   
   140025500:	rex push rbx
   140025502:	push   rbp
   140025503:	push   rdi
   140025504:	sub    rsp,0x20
   140025508:	mov    rbp,rdx
   14002550b:	cmp    DWORD PTR [rbp+0x50],0x2
   14002550f:	je     0x140025540
   140025511:	xor    ebx,ebx
   140025513:	cmp    DWORD PTR [rbp+0x20],ebx
   140025516:	sete   bl
   140025519:	test   ebx,ebx
   14002551b:	je     0x140025527
   14002551d:	call   QWORD PTR [rip+0x3f0dd]        # 0x140064600
   140025523:	mov    edi,eax
   140025525:	jmp    0x140025529
   140025527:	xor    edi,edi
   140025529:	mov    rdx,QWORD PTR [rbp+0x58]
   14002552d:	xor    ecx,ecx
   14002552f:	call   0x140020cc4
   140025534:	test   ebx,ebx
   140025536:	je     0x140025540
   140025538:	mov    ecx,edi
   14002553a:	call   QWORD PTR [rip+0x3ef60]        # 0x1400644a0
   140025540:	add    rsp,0x20
   140025544:	pop    rdi
   140025545:	pop    rbp
   140025546:	pop    rbx
   140025547:	ret    
   140025548:	rex push rbx
   14002554a:	sub    rsp,0x20
   14002554e:	cmp    DWORD PTR [rcx],0x7fffffff
   140025554:	mov    rbx,rcx
   140025557:	je     0x140025566
   140025559:	mov    ecx,DWORD PTR [rcx]
   14002555b:	call   0x14002d8a4
   140025560:	mov    DWORD PTR [rbx],0x7fffffff
   140025566:	add    rsp,0x20
   14002556a:	pop    rbx
   14002556b:	ret    
   14002556c:	rex push rbx
   14002556e:	sub    rsp,0x20
   140025572:	lea    rdx,[rip+0xffffffffffff75cf]        # 0x14001cb48
   140025579:	lea    rcx,[rip+0x63680]        # 0x140088c00
   140025580:	call   0x14002d3a8
   140025585:	test   rax,rax
   140025588:	mov    rbx,rax
   14002558b:	jne    0x140025593
   14002558d:	call   0x1400208f8
   140025592:	int3   
   140025593:	call   QWORD PTR [rip+0x3f4ff]        # 0x140064a98
   140025599:	mov    DWORD PTR [rbx+0xb8],eax
   14002559f:	call   QWORD PTR [rip+0x3f31b]        # 0x1400648c0
   1400255a5:	mov    r11d,eax
   1400255a8:	cwde   
   1400255a9:	mov    DWORD PTR [rsp+0x30],eax
   1400255ad:	shr    r11,0x10
   1400255b1:	movsx  eax,r11w
   1400255b5:	mov    DWORD PTR [rsp+0x34],eax
   1400255b9:	mov    rax,QWORD PTR [rsp+0x30]
   1400255be:	mov    QWORD PTR [rbx+0xbc],rax
   1400255c5:	lea    rax,[rbx+0x98]
   1400255cc:	add    rsp,0x20
   1400255d0:	pop    rbx
   1400255d1:	ret    
   1400255d2:	int3   
   1400255d3:	int3   
   1400255d4:	rex push rbx
   1400255d6:	sub    rsp,0x20
   1400255da:	mov    rbx,rcx
   1400255dd:	lea    rdx,[rip+0xffffffffffff7564]        # 0x14001cb48
   1400255e4:	lea    rcx,[rip+0x63615]        # 0x140088c00
   1400255eb:	call   0x14002d3a8
   1400255f0:	test   rax,rax
   1400255f3:	mov    r11,rax
   1400255f6:	jne    0x1400255fe
   1400255f8:	call   0x1400208f8
   1400255fd:	int3   
   1400255fe:	mov    rax,QWORD PTR [rbx]
   140025601:	mov    r9,QWORD PTR [r11+0xb0]
   140025608:	mov    r8,QWORD PTR [r11+0xa8]
   14002560f:	mov    edx,DWORD PTR [r11+0xa0]
   140025616:	mov    rcx,rbx
   140025619:	add    rsp,0x20
   14002561d:	pop    rbx
   14002561e:	rex.W jmp QWORD PTR [rax+0x220]
   140025625:	int3   
   140025626:	int3   
   140025627:	int3   
   140025628:	rex push rdi
   14002562a:	sub    rsp,0x40
   14002562e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140025637:	mov    QWORD PTR [rsp+0x50],rbx
   14002563c:	mov    QWORD PTR [rsp+0x60],rsi
   140025641:	mov    esi,ecx
   140025643:	call   0x140021ac0
   140025648:	mov    rdi,rax
   14002564b:	xor    ebx,ebx
   14002564d:	cmp    QWORD PTR [rax+0x28],rbx
   140025651:	jne    0x1400256b7
   140025653:	cmp    esi,ebx
   140025655:	je     0x1400256b7
   140025657:	lea    rcx,[rip+0x73ea]        # 0x14002ca48
   14002565e:	call   0x14001abfc
   140025663:	mov    rsi,rax
   140025666:	mov    ecx,0xb8
   14002566b:	call   0x14001ac0c
   140025670:	mov    QWORD PTR [rsp+0x58],rax
   140025675:	cmp    rax,rbx
   140025678:	je     0x1400256ab
   14002567a:	mov    DWORD PTR [rsp+0x28],0x1
   140025682:	mov    QWORD PTR [rsp+0x20],0x40
   14002568b:	lea    r9,[rip+0x52aa]        # 0x14002a93c
   140025692:	lea    r8,[rip+0xfffffffffffffbd3]        # 0x14002526c
   140025699:	lea    rdx,[rip+0x43b20]        # 0x1400691c0
   1400256a0:	mov    rcx,rax
   1400256a3:	call   0x14002dbc0
   1400256a8:	mov    rbx,rax
   1400256ab:	mov    QWORD PTR [rdi+0x28],rbx
   1400256af:	mov    rcx,rsi
   1400256b2:	call   0x14001abfc
   1400256b7:	mov    rax,QWORD PTR [rdi+0x28]
   1400256bb:	mov    rbx,QWORD PTR [rsp+0x50]
   1400256c0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400256c5:	add    rsp,0x40
   1400256c9:	pop    rdi
   1400256ca:	ret    
   1400256cb:	int3   
   1400256cc:	int3   
   1400256cd:	int3   
   1400256ce:	int3   
   1400256cf:	int3   
   1400256d0:	int3   
   1400256d1:	int3   
   1400256d2:	int3   
   1400256d3:	int3   
   1400256d4:	int3   
   1400256d5:	int3   
   1400256d6:	int3   
   1400256d7:	int3   
   1400256d8:	rex push rbp
   1400256da:	sub    rsp,0x20
   1400256de:	mov    rbp,rdx
   1400256e1:	mov    rcx,QWORD PTR [rbp+0x58]
   1400256e5:	call   0x14001ac50
   1400256ea:	add    rsp,0x20
   1400256ee:	pop    rbp
   1400256ef:	ret    
   1400256f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400256f5:	push   rdi
   1400256f6:	sub    rsp,0x20
   1400256fa:	mov    rbx,rcx
   1400256fd:	mov    ecx,0x1
   140025702:	call   0x140025628
   140025707:	mov    rdx,rbx
   14002570a:	mov    rcx,rax
   14002570d:	mov    rdi,rax
   140025710:	call   0x14002dcfc
   140025715:	mov    rdx,rdi
   140025718:	mov    rcx,rax
   14002571b:	mov    rbx,rax
   14002571e:	call   0x140029d80
   140025723:	mov    rax,rbx
   140025726:	mov    rbx,QWORD PTR [rsp+0x30]
   14002572b:	add    rsp,0x20
   14002572f:	pop    rdi
   140025730:	ret    
   140025731:	int3   
   140025732:	int3   
   140025733:	int3   
   140025734:	rex push rbx
   140025736:	sub    rsp,0x20
   14002573a:	mov    rbx,rcx
   14002573d:	call   0x140021ac0
   140025742:	mov    rcx,QWORD PTR [rax+0x28]
   140025746:	xor    eax,eax
   140025748:	cmp    rcx,rax
   14002574b:	je     0x140025759
   14002574d:	add    rcx,0x30
   140025751:	mov    rdx,rbx
   140025754:	call   0x14002f878
   140025759:	add    rsp,0x20
   14002575d:	pop    rbx
   14002575e:	ret    
   14002575f:	int3   
   140025760:	mov    QWORD PTR [rsp+0x8],rbx
   140025765:	mov    QWORD PTR [rsp+0x10],rsi
   14002576a:	push   rdi
   14002576b:	sub    rsp,0x20
   14002576f:	test   rdx,rdx
   140025772:	mov    rdi,rdx
   140025775:	mov    rsi,rcx
   140025778:	jne    0x14002577e
   14002577a:	xor    eax,eax
   14002577c:	jmp    0x1400257ae
   14002577e:	mov    ecx,0x1
   140025783:	call   0x140025628
   140025788:	mov    rdx,rdi
   14002578b:	mov    QWORD PTR [rsi+0x40],rdi
   14002578f:	lea    rcx,[rax+0x30]
   140025793:	mov    rbx,rax
   140025796:	call   0x14002fac8
   14002579b:	mov    rdx,rbx
   14002579e:	mov    rcx,rsi
   1400257a1:	mov    QWORD PTR [rax],rsi
   1400257a4:	call   0x140029d80
   1400257a9:	mov    eax,0x1
   1400257ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400257b3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400257b8:	add    rsp,0x20
   1400257bc:	pop    rdi
   1400257bd:	ret    
   1400257be:	int3   
   1400257bf:	int3   
   1400257c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400257c5:	push   rdi
   1400257c6:	sub    rsp,0x20
   1400257ca:	mov    rdi,QWORD PTR [rcx+0x40]
   1400257ce:	mov    rbx,rcx
   1400257d1:	test   rdi,rdi
   1400257d4:	je     0x1400257f6
   1400257d6:	call   0x140021ac0
   1400257db:	mov    rcx,QWORD PTR [rax+0x28]
   1400257df:	test   rcx,rcx
   1400257e2:	je     0x1400257f1
   1400257e4:	mov    rdx,QWORD PTR [rbx+0x40]
   1400257e8:	add    rcx,0x30
   1400257ec:	call   0x14002f8ec
   1400257f1:	and    QWORD PTR [rbx+0x40],0x0
   1400257f6:	and    QWORD PTR [rbx+0xa0],0x0
   1400257fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140025803:	mov    rax,rdi
   140025806:	add    rsp,0x20
   14002580a:	pop    rdi
   14002580b:	ret    
   14002580c:	rex push rbx
   14002580e:	sub    rsp,0x20
   140025812:	lea    rdx,[rip+0xffffffffffff732f]        # 0x14001cb48
   140025819:	lea    rcx,[rip+0x633e0]        # 0x140088c00
   140025820:	call   0x14002d3a8
   140025825:	test   rax,rax
   140025828:	mov    rbx,rax
   14002582b:	jne    0x140025833
   14002582d:	call   0x1400208f8
   140025832:	int3   
   140025833:	call   0x140021a70
   140025838:	cmp    BYTE PTR [rax+0x28],0x0
   14002583c:	je     0x140025852
   14002583e:	mov    rcx,QWORD PTR [rbx+0x48]
   140025842:	test   rcx,rcx
   140025845:	je     0x140025852
   140025847:	call   QWORD PTR [rip+0x3f113]        # 0x140064960
   14002584d:	and    QWORD PTR [rbx+0x48],0x0
   140025852:	cmp    QWORD PTR [rbx+0x28],0x0
   140025857:	je     0x140025862
   140025859:	and    QWORD PTR [rbx+0x28],0x0
   14002585e:	xor    eax,eax
   140025860:	jmp    0x140025867
   140025862:	mov    eax,0x1
   140025867:	add    rsp,0x20
   14002586b:	pop    rbx
   14002586c:	ret    
   14002586d:	int3   
   14002586e:	int3   
   14002586f:	int3   
   140025870:	rex push rbx
   140025872:	sub    rsp,0x20
   140025876:	mov    rbx,rcx
   140025879:	mov    rcx,QWORD PTR [rcx+0x98]
   140025880:	test   rcx,rcx
   140025883:	je     0x140025890
   140025885:	mov    rax,QWORD PTR [rcx]
   140025888:	mov    edx,0x1
   14002588d:	call   QWORD PTR [rax+0x8]
   140025890:	mov    rcx,QWORD PTR [rbx+0x58]
   140025894:	and    QWORD PTR [rbx+0x98],0x0
   14002589c:	test   rcx,rcx
   14002589f:	je     0x1400258ac
   1400258a1:	mov    rax,QWORD PTR [rcx]
   1400258a4:	xor    r8d,r8d
   1400258a7:	xor    edx,edx
   1400258a9:	call   QWORD PTR [rax+0x18]
   1400258ac:	mov    rcx,QWORD PTR [rbx+0x50]
   1400258b0:	test   rcx,rcx
   1400258b3:	je     0x1400258bb
   1400258b5:	mov    rax,QWORD PTR [rcx]
   1400258b8:	call   QWORD PTR [rax+0x10]
   1400258bb:	mov    rcx,rbx
   1400258be:	add    rsp,0x20
   1400258c2:	pop    rbx
   1400258c3:	jmp    0x1400255d4
   1400258c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400258cd:	push   rdi
   1400258ce:	sub    rsp,0x70
   1400258d2:	mov    rdi,rcx
   1400258d5:	call   0x14001c840
   1400258da:	test   rax,rax
   1400258dd:	mov    rbx,rax
   1400258e0:	je     0x14002591e
   1400258e2:	cmp    QWORD PTR [rax+0x40],rdi
   1400258e6:	jne    0x140025913
   1400258e8:	call   0x140021a70
   1400258ed:	cmp    BYTE PTR [rax+0x28],0x0
   1400258f1:	jne    0x14002590e
   1400258f3:	call   0x140021a70
   1400258f8:	cmp    rbx,QWORD PTR [rax+0x8]
   1400258fc:	jne    0x140025907
   1400258fe:	call   0x14002d584
   140025903:	test   eax,eax
   140025905:	je     0x14002590e
   140025907:	xor    ecx,ecx
   140025909:	call   0x14001afa8
   14002590e:	and    QWORD PTR [rbx+0x40],0x0
   140025913:	cmp    QWORD PTR [rbx+0x48],rdi
   140025917:	jne    0x14002591e
   140025919:	and    QWORD PTR [rbx+0x48],0x0
   14002591e:	mov    rcx,QWORD PTR [rdi+0x90]
   140025925:	test   rcx,rcx
   140025928:	je     0x14002593b
   14002592a:	mov    rax,QWORD PTR [rcx]
   14002592d:	call   QWORD PTR [rax+0xa0]
   140025933:	and    QWORD PTR [rdi+0x90],0x0
   14002593b:	mov    rcx,QWORD PTR [rdi+0x98]
   140025942:	test   rcx,rcx
   140025945:	je     0x140025952
   140025947:	mov    rax,QWORD PTR [rcx]
   14002594a:	mov    edx,0x1
   14002594f:	call   QWORD PTR [rax+0x8]
   140025952:	and    QWORD PTR [rdi+0x98],0x0
   14002595a:	test   BYTE PTR [rdi+0x78],0x1
   14002595e:	je     0x1400259ba
   140025960:	call   0x140021ac0
   140025965:	mov    rbx,QWORD PTR [rax+0x78]
   140025969:	test   rbx,rbx
   14002596c:	je     0x1400259ba
   14002596e:	cmp    QWORD PTR [rbx+0x40],0x0
   140025973:	je     0x1400259ba
   140025975:	xor    edx,edx
   140025977:	lea    rcx,[rsp+0x20]
   14002597c:	lea    r8d,[rdx+0x48]
   140025980:	call   0x140047720
   140025985:	mov    rax,QWORD PTR [rdi+0x40]
   140025989:	mov    rcx,QWORD PTR [rbx+0x40]
   14002598d:	lea    r9,[rsp+0x20]
   140025992:	xor    r8d,r8d
   140025995:	mov    edx,0x433
   14002599a:	mov    QWORD PTR [rsp+0x28],rax
   14002599f:	mov    QWORD PTR [rsp+0x30],rax
   1400259a4:	mov    DWORD PTR [rsp+0x20],0x38
   1400259ac:	mov    DWORD PTR [rsp+0x24],0x1
   1400259b4:	call   QWORD PTR [rip+0x3f1b6]        # 0x140064b70
   1400259ba:	mov    rcx,QWORD PTR [rdi+0x40]
   1400259be:	mov    edx,0xfffffffc
   1400259c3:	call   QWORD PTR [rip+0x3eedf]        # 0x1400648a8
   1400259c9:	mov    rcx,rdi
   1400259cc:	mov    rbx,rax
   1400259cf:	call   0x1400255d4
   1400259d4:	mov    rcx,QWORD PTR [rdi+0x40]
   1400259d8:	mov    edx,0xfffffffc
   1400259dd:	call   QWORD PTR [rip+0x3eec5]        # 0x1400648a8
   1400259e3:	cmp    rax,rbx
   1400259e6:	jne    0x140025a0b
   1400259e8:	mov    rax,QWORD PTR [rdi]
   1400259eb:	mov    rcx,rdi
   1400259ee:	call   QWORD PTR [rax+0x1e0]
   1400259f4:	mov    r8,QWORD PTR [rax]
   1400259f7:	test   r8,r8
   1400259fa:	je     0x140025a0b
   1400259fc:	mov    rcx,QWORD PTR [rdi+0x40]
   140025a00:	mov    edx,0xfffffffc
   140025a05:	call   QWORD PTR [rip+0x3eea5]        # 0x1400648b0
   140025a0b:	mov    rcx,rdi
   140025a0e:	call   0x1400257c0
   140025a13:	mov    r11,QWORD PTR [rdi]
   140025a16:	mov    rcx,rdi
   140025a19:	mov    rbx,QWORD PTR [rsp+0x80]
   140025a21:	add    rsp,0x70
   140025a25:	pop    rdi
   140025a26:	rex.WB jmp QWORD PTR [r11+0x228]
   140025a2d:	int3   
   140025a2e:	int3   
   140025a2f:	int3   
   140025a30:	mov    QWORD PTR [rsp+0x8],rbx
   140025a35:	push   rdi
   140025a36:	sub    rsp,0x20
   140025a3a:	xor    ebx,ebx
   140025a3c:	mov    rdi,rcx
   140025a3f:	cmp    QWORD PTR [rcx+0x40],rbx
   140025a43:	jne    0x140025a58
   140025a45:	cmp    QWORD PTR [rcx+0xa0],rbx
   140025a4c:	jne    0x140025a52
   140025a4e:	xor    eax,eax
   140025a50:	jmp    0x140025ab0
   140025a52:	cmp    QWORD PTR [rcx+0x40],rbx
   140025a56:	je     0x140025a79
   140025a58:	call   0x140021ac0
   140025a5d:	mov    rcx,QWORD PTR [rax+0x28]
   140025a61:	cmp    rcx,rbx
   140025a64:	jne    0x140025a6c
   140025a66:	call   0x1400208f8
   140025a6b:	int3   
   140025a6c:	mov    rdx,QWORD PTR [rdi+0x40]
   140025a70:	add    rcx,0x30
   140025a74:	call   0x14002f878
   140025a79:	mov    rcx,QWORD PTR [rdi+0x40]
   140025a7d:	cmp    rcx,rbx
   140025a80:	jne    0x140025a8b
   140025a82:	cmp    QWORD PTR [rdi+0xa0],rbx
   140025a89:	je     0x140025aae
   140025a8b:	cmp    QWORD PTR [rdi+0xa0],rbx
   140025a92:	jne    0x140025a9c
   140025a94:	call   QWORD PTR [rip+0x3ef36]        # 0x1400649d0
   140025a9a:	jmp    0x140025aac
   140025a9c:	mov    rcx,QWORD PTR [rdi+0xa0]
   140025aa3:	mov    rax,QWORD PTR [rcx]
   140025aa6:	call   QWORD PTR [rax+0xb0]
   140025aac:	mov    ebx,eax
   140025aae:	mov    eax,ebx
   140025ab0:	mov    rbx,QWORD PTR [rsp+0x30]
   140025ab5:	add    rsp,0x20
   140025ab9:	pop    rdi
   140025aba:	ret    
   140025abb:	int3   
   140025abc:	rex push rbx
   140025abe:	sub    rsp,0x40
   140025ac2:	mov    rbx,rcx
   140025ac5:	mov    QWORD PTR [rsp+0x28],rdx
   140025aca:	lea    rdx,[rip+0xffffffffffff7077]        # 0x14001cb48
   140025ad1:	lea    rcx,[rip+0x63128]        # 0x140088c00
   140025ad8:	mov    QWORD PTR [rsp+0x20],r8
   140025add:	call   0x14002d3a8
   140025ae2:	test   rax,rax
   140025ae5:	jne    0x140025aed
   140025ae7:	call   0x1400208f8
   140025aec:	int3   
   140025aed:	mov    eax,DWORD PTR [rax+0xa0]
   140025af3:	xor    r8d,r8d
   140025af6:	lea    r9,[rsp+0x20]
   140025afb:	sub    eax,0x132
   140025b00:	lea    edx,[r8+0x19]
   140025b04:	mov    rcx,rbx
   140025b07:	mov    DWORD PTR [rsp+0x30],eax
   140025b0b:	mov    rax,QWORD PTR [rbx]
   140025b0e:	call   QWORD PTR [rax+0x210]
   140025b14:	add    rsp,0x40
   140025b18:	pop    rbx
   140025b19:	ret    
   140025b1a:	int3   
   140025b1b:	int3   
   140025b1c:	mov    QWORD PTR [rsp+0x8],rbx
   140025b21:	mov    QWORD PTR [rsp+0x10],rbp
   140025b26:	mov    QWORD PTR [rsp+0x18],rsi
   140025b2b:	push   rdi
   140025b2c:	sub    rsp,0x20
   140025b30:	mov    edi,r8d
   140025b33:	mov    ebp,edx
   140025b35:	mov    rsi,rcx
   140025b38:	call   QWORD PTR [rip+0x3eea2]        # 0x1400649e0
   140025b3e:	test   rax,rax
   140025b41:	mov    rbx,rax
   140025b44:	je     0x140025b7e
   140025b46:	mov    rcx,rax
   140025b49:	call   QWORD PTR [rip+0x3ed51]        # 0x1400648a0
   140025b4f:	test   rax,rax
   140025b52:	je     0x140025b66
   140025b54:	mov    r8d,edi
   140025b57:	mov    edx,ebp
   140025b59:	mov    rcx,rbx
   140025b5c:	call   0x140025b1c
   140025b61:	test   rax,rax
   140025b64:	jne    0x140025bb1
   140025b66:	test   edi,edi
   140025b68:	mov    rcx,rbx
   140025b6b:	jne    0x140025b74
   140025b6d:	call   0x1400256f0
   140025b72:	jmp    0x140025bb1
   140025b74:	call   0x140025734
   140025b79:	test   rax,rax
   140025b7c:	jne    0x140025bb1
   140025b7e:	mov    rcx,rsi
   140025b81:	call   QWORD PTR [rip+0x3ed19]        # 0x1400648a0
   140025b87:	jmp    0x140025ba7
   140025b89:	mov    r8d,edi
   140025b8c:	mov    edx,ebp
   140025b8e:	mov    rcx,rbx
   140025b91:	call   0x140025b1c
   140025b96:	test   rax,rax
   140025b99:	jne    0x140025bb1
   140025b9b:	lea    edx,[rax+0x2]
   140025b9e:	mov    rcx,rbx
   140025ba1:	call   QWORD PTR [rip+0x3edd9]        # 0x140064980
   140025ba7:	test   rax,rax
   140025baa:	mov    rbx,rax
   140025bad:	jne    0x140025b89
   140025baf:	xor    eax,eax
   140025bb1:	mov    rbx,QWORD PTR [rsp+0x30]
   140025bb6:	mov    rbp,QWORD PTR [rsp+0x38]
   140025bbb:	mov    rsi,QWORD PTR [rsp+0x40]
   140025bc0:	add    rsp,0x20
   140025bc4:	pop    rdi
   140025bc5:	ret    
   140025bc6:	int3   
   140025bc7:	int3   
   140025bc8:	mov    QWORD PTR [rsp+0x8],rbx
   140025bcd:	mov    QWORD PTR [rsp+0x10],rsi
   140025bd2:	push   rdi
   140025bd3:	sub    rsp,0x20
   140025bd7:	mov    rbx,QWORD PTR [rdx]
   140025bda:	mov    rsi,rdx
   140025bdd:	mov    rdi,rcx
   140025be0:	test   rbx,rbx
   140025be3:	je     0x140025c23
   140025be5:	mov    rcx,rbx
   140025be8:	call   0x140025734
   140025bed:	test   rax,rax
   140025bf0:	je     0x140025c06
   140025bf2:	mov    r8,QWORD PTR [rax]
   140025bf5:	mov    rdx,rsi
   140025bf8:	mov    rcx,rax
   140025bfb:	call   QWORD PTR [r8+0x200]
   140025c02:	test   eax,eax
   140025c04:	jne    0x140025c1c
   140025c06:	cmp    rbx,rdi
   140025c09:	je     0x140025c23
   140025c0b:	mov    rcx,rbx
   140025c0e:	call   QWORD PTR [rip+0x3eecc]        # 0x140064ae0
   140025c14:	mov    rbx,rax
   140025c17:	test   rax,rax
   140025c1a:	jmp    0x140025be3
   140025c1c:	mov    eax,0x1
   140025c21:	jmp    0x140025c25
   140025c23:	xor    eax,eax
   140025c25:	mov    rbx,QWORD PTR [rsp+0x30]
   140025c2a:	mov    rsi,QWORD PTR [rsp+0x38]
   140025c2f:	add    rsp,0x20
   140025c33:	pop    rdi
   140025c34:	ret    
   140025c35:	int3   
   140025c36:	int3   
   140025c37:	int3   
   140025c38:	mov    QWORD PTR [rsp+0x8],rbx
   140025c3d:	push   rdi
   140025c3e:	sub    rsp,0x30
   140025c42:	mov    rdi,rdx
   140025c45:	mov    rbx,rcx
   140025c48:	lea    rdx,[rip+0xffffffffffff6ef9]        # 0x14001cb48
   140025c4f:	lea    rcx,[rip+0x62faa]        # 0x140088c00
   140025c56:	call   0x14002d3a8
   140025c5b:	test   rax,rax
   140025c5e:	mov    r11,rax
   140025c61:	jne    0x140025c69
   140025c63:	call   0x1400208f8
   140025c68:	int3   
   140025c69:	mov    rax,QWORD PTR [rbx]
   140025c6c:	mov    r9,QWORD PTR [r11+0xb0]
   140025c73:	mov    r8,QWORD PTR [r11+0xa8]
   140025c7a:	mov    edx,DWORD PTR [r11+0xa0]
   140025c81:	mov    rcx,rbx
   140025c84:	mov    QWORD PTR [rsp+0x20],rdi
   140025c89:	call   QWORD PTR [rax+0x230]
   140025c8f:	mov    rbx,QWORD PTR [rsp+0x40]
   140025c94:	add    rsp,0x30
   140025c98:	pop    rdi
   140025c99:	ret    
   140025c9a:	int3   
   140025c9b:	int3   
   140025c9c:	rex push rbx
   140025c9e:	sub    rsp,0x20
   140025ca2:	cmp    QWORD PTR [rcx+0x98],0x0
   140025caa:	mov    rbx,rcx
   140025cad:	je     0x140025cc3
   140025caf:	mov    rcx,QWORD PTR [rcx+0x98]
   140025cb6:	mov    rax,QWORD PTR [rcx]
   140025cb9:	call   QWORD PTR [rax+0x120]
   140025cbf:	test   eax,eax
   140025cc1:	jne    0x140025ccb
   140025cc3:	mov    rcx,rbx
   140025cc6:	call   0x1400255d4
   140025ccb:	add    rsp,0x20
   140025ccf:	pop    rbx
   140025cd0:	ret    
   140025cd1:	int3   
   140025cd2:	int3   
   140025cd3:	int3   
   140025cd4:	mov    QWORD PTR [rsp+0x8],rbx
   140025cd9:	mov    QWORD PTR [rsp+0x10],rsi
   140025cde:	push   rdi
   140025cdf:	sub    rsp,0x20
   140025ce3:	mov    rsi,rcx
   140025ce6:	call   0x14002998c
   140025ceb:	xor    ebx,ebx
   140025ced:	bt     eax,0x1e
   140025cf1:	jb     0x140025d65
   140025cf3:	call   0x14001c840
   140025cf8:	cmp    rax,rbx
   140025cfb:	je     0x140025d0e
   140025cfd:	mov    rdx,QWORD PTR [rax]
   140025d00:	mov    rcx,rax
   140025d03:	call   QWORD PTR [rdx+0xe8]
   140025d09:	mov    rdi,rax
   140025d0c:	jmp    0x140025d11
   140025d0e:	mov    rdi,rbx
   140025d11:	cmp    rdi,rbx
   140025d14:	je     0x140025d65
   140025d16:	mov    ecx,0x10
   140025d1b:	call   QWORD PTR [rip+0x3ed7f]        # 0x140064aa0
   140025d21:	cmp    ax,bx
   140025d24:	jl     0x140025d65
   140025d26:	mov    ecx,0x11
   140025d2b:	call   QWORD PTR [rip+0x3ed6f]        # 0x140064aa0
   140025d31:	cmp    ax,bx
   140025d34:	jl     0x140025d65
   140025d36:	mov    ecx,0x12
   140025d3b:	call   QWORD PTR [rip+0x3ed5f]        # 0x140064aa0
   140025d41:	cmp    ax,bx
   140025d44:	jl     0x140025d65
   140025d46:	mov    rcx,QWORD PTR [rdi+0x40]
   140025d4a:	xor    r9d,r9d
   140025d4d:	mov    edx,0x111
   140025d52:	mov    r8d,0xe146
   140025d58:	call   QWORD PTR [rip+0x3ee12]        # 0x140064b70
   140025d5e:	mov    eax,0x1
   140025d63:	jmp    0x140025d75
   140025d65:	mov    rcx,rsi
   140025d68:	call   0x1400255d4
   140025d6d:	cmp    rax,rbx
   140025d70:	setne  bl
   140025d73:	mov    eax,ebx
   140025d75:	mov    rbx,QWORD PTR [rsp+0x30]
   140025d7a:	mov    rsi,QWORD PTR [rsp+0x38]
   140025d7f:	add    rsp,0x20
   140025d83:	pop    rdi
   140025d84:	ret    
   140025d85:	int3   
   140025d86:	int3   
   140025d87:	int3   
   140025d88:	rex push rbx
   140025d8a:	sub    rsp,0x20
   140025d8e:	cmp    BYTE PTR [rcx+0x48],0x0
   140025d92:	mov    rbx,rcx
   140025d95:	jne    0x140025d9e
   140025d97:	call   0x1400255d4
   140025d9c:	jmp    0x140025dc0
   140025d9e:	mov    rax,QWORD PTR [rcx]
   140025da1:	and    QWORD PTR [rsp+0x30],0x0
   140025da7:	lea    r9,[rsp+0x30]
   140025dac:	call   QWORD PTR [rax+0x1c8]
   140025db2:	test   eax,eax
   140025db4:	jns    0x140025dbb
   140025db6:	mov    rcx,rbx
   140025db9:	jmp    0x140025d97
   140025dbb:	mov    rax,QWORD PTR [rsp+0x30]
   140025dc0:	add    rsp,0x20
   140025dc4:	pop    rbx
   140025dc5:	ret    
   140025dc6:	int3   
   140025dc7:	int3   
   140025dc8:	rex push rbx
   140025dca:	sub    rsp,0x20
   140025dce:	test   r9,r9
   140025dd1:	mov    rbx,rcx
   140025dd4:	je     0x140025de4
   140025dd6:	xor    edx,edx
   140025dd8:	mov    rcx,r9
   140025ddb:	call   0x140025c38
   140025de0:	test   eax,eax
   140025de2:	jne    0x140025dec
   140025de4:	mov    rcx,rbx
   140025de7:	call   0x1400255d4
   140025dec:	add    rsp,0x20
   140025df0:	pop    rbx
   140025df1:	ret    
   140025df2:	int3   
   140025df3:	int3   
   140025df4:	rex push rbx
   140025df6:	sub    rsp,0x20
   140025dfa:	test   r9,r9
   140025dfd:	mov    rbx,rcx
   140025e00:	je     0x140025e10
   140025e02:	xor    edx,edx
   140025e04:	mov    rcx,r9
   140025e07:	call   0x140025c38
   140025e0c:	test   eax,eax
   140025e0e:	jne    0x140025e18
   140025e10:	mov    rcx,rbx
   140025e13:	call   0x1400255d4
   140025e18:	add    rsp,0x20
   140025e1c:	pop    rbx
   140025e1d:	ret    
   140025e1e:	int3   
   140025e1f:	int3   
   140025e20:	rex push rbx
   140025e22:	sub    rsp,0x60
   140025e26:	mov    rbx,rcx
   140025e29:	jmp    0x140025e36
   140025e2b:	lea    rcx,[rsp+0x30]
   140025e30:	call   QWORD PTR [rip+0x3ec02]        # 0x140064a38
   140025e36:	mov    r9d,0x121
   140025e3c:	lea    rcx,[rsp+0x30]
   140025e41:	xor    edx,edx
   140025e43:	mov    r8d,r9d
   140025e46:	mov    DWORD PTR [rsp+0x20],0x1
   140025e4e:	call   QWORD PTR [rip+0x3ec54]        # 0x140064aa8
   140025e54:	test   eax,eax
   140025e56:	jne    0x140025e2b
   140025e58:	mov    rcx,rbx
   140025e5b:	add    rsp,0x60
   140025e5f:	pop    rbx
   140025e60:	jmp    0x1400255d4
   140025e65:	int3   
   140025e66:	int3   
   140025e67:	int3   
   140025e68:	rex push rbx
   140025e6a:	sub    rsp,0x30
   140025e6e:	mov    rbx,rcx
   140025e71:	lea    rdx,[rsp+0x20]
   140025e76:	mov    rcx,r8
   140025e79:	call   0x140025c38
   140025e7e:	test   eax,eax
   140025e80:	je     0x140025e89
   140025e82:	mov    rax,QWORD PTR [rsp+0x20]
   140025e87:	jmp    0x140025e91
   140025e89:	mov    rcx,rbx
   140025e8c:	call   0x1400255d4
   140025e91:	add    rsp,0x30
   140025e95:	pop    rbx
   140025e96:	ret    
   140025e97:	int3   
   140025e98:	mov    QWORD PTR [rsp+0x8],rbx
   140025e9d:	mov    QWORD PTR [rsp+0x10],rsi
   140025ea2:	push   rdi
   140025ea3:	sub    rsp,0x20
   140025ea7:	mov    edi,edx
   140025ea9:	mov    rsi,rcx
   140025eac:	xor    ebx,ebx
   140025eae:	call   0x140021a70
   140025eb3:	lea    rdx,[rsp+0x40]
   140025eb8:	mov    rcx,QWORD PTR [rax+0xc8]
   140025ebf:	mov    rcx,QWORD PTR [rcx]
   140025ec2:	call   0x1400253cc
   140025ec7:	cmp    QWORD PTR [rax],rbx
   140025eca:	je     0x140025eeb
   140025ecc:	call   0x140021a70
   140025ed1:	mov    rdx,rsi
   140025ed4:	mov    rcx,QWORD PTR [rax+0xc8]
   140025edb:	mov    rcx,QWORD PTR [rcx]
   140025ede:	call   0x140025440
   140025ee3:	cmp    eax,ebx
   140025ee5:	je     0x140025f0e
   140025ee7:	mov    ebx,edi
   140025ee9:	jmp    0x140025f0e
   140025eeb:	mov    eax,edi
   140025eed:	mov    esi,0x3fc0
   140025ef2:	and    eax,esi
   140025ef4:	cmp    eax,edi
   140025ef6:	jne    0x140025f0e
   140025ef8:	call   0x140021a70
   140025efd:	mov    rcx,QWORD PTR [rax+0xc8]
   140025f04:	mov    rcx,QWORD PTR [rcx]
   140025f07:	call   0x14002532c
   140025f0c:	mov    ebx,esi
   140025f0e:	mov    rsi,QWORD PTR [rsp+0x38]
   140025f13:	mov    eax,ebx
   140025f15:	mov    rbx,QWORD PTR [rsp+0x30]
   140025f1a:	add    rsp,0x20
   140025f1e:	pop    rdi
   140025f1f:	ret    
   140025f20:	mov    QWORD PTR [rsp+0x8],rbx
   140025f25:	push   rdi
   140025f26:	sub    rsp,0x20
   140025f2a:	mov    rax,QWORD PTR [rcx]
   140025f2d:	mov    rdi,rcx
   140025f30:	call   QWORD PTR [rax+0x1e0]
   140025f36:	mov    rcx,QWORD PTR [rdi+0x40]
   140025f3a:	mov    edx,0xfffffffc
   140025f3f:	mov    r8,QWORD PTR [rax]
   140025f42:	mov    rbx,rax
   140025f45:	call   QWORD PTR [rip+0x3e965]        # 0x1400648b0
   140025f4b:	and    QWORD PTR [rbx],0x0
   140025f4f:	mov    rcx,rdi
   140025f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140025f57:	add    rsp,0x20
   140025f5b:	pop    rdi
   140025f5c:	jmp    0x1400257c0
   140025f61:	int3   
   140025f62:	int3   
   140025f63:	int3   
   140025f64:	sub    rsp,0x28
   140025f68:	mov    ecx,0x18
   140025f6d:	call   0x14002cba4
   140025f72:	test   rax,rax
   140025f75:	je     0x140025f83
   140025f77:	lea    rcx,[rip+0x43912]        # 0x140069890
   140025f7e:	mov    QWORD PTR [rax],rcx
   140025f81:	jmp    0x140025f85
   140025f83:	xor    eax,eax
   140025f85:	add    rsp,0x28
   140025f89:	ret    
   140025f8a:	int3   
   140025f8b:	int3   
   140025f8c:	bt     r8d,0x1c
   140025f91:	jb     0x140026021
   140025f97:	mov    QWORD PTR [rsp+0x8],rbx
   140025f9c:	push   rdi
   140025f9d:	sub    rsp,0x30
   140025fa1:	mov    rdi,rdx
   140025fa4:	mov    rbx,rcx
   140025fa7:	call   0x14002998c
   140025fac:	test   eax,0x50000000
   140025fb1:	jne    0x140026017
   140025fb3:	mov    rcx,QWORD PTR [rbx+0x40]
   140025fb7:	lea    rdx,[rsp+0x20]
   140025fbc:	call   QWORD PTR [rip+0x3e996]        # 0x140064958
   140025fc2:	mov    r11d,DWORD PTR [rsp+0x20]
   140025fc7:	cmp    DWORD PTR [rdi],r11d
   140025fca:	jne    0x140026017
   140025fcc:	mov    eax,DWORD PTR [rsp+0x24]
   140025fd0:	cmp    DWORD PTR [rdi+0x4],eax
   140025fd3:	jne    0x140026017
   140025fd5:	mov    rcx,QWORD PTR [rbx+0x40]
   140025fd9:	mov    edx,0x4
   140025fde:	call   QWORD PTR [rip+0x3e99c]        # 0x140064980
   140025fe4:	mov    rcx,rax
   140025fe7:	call   0x1400256f0
   140025fec:	test   rax,rax
   140025fef:	je     0x140025ffd
   140025ff1:	mov    rcx,rax
   140025ff4:	call   0x140029b3c
   140025ff9:	test   eax,eax
   140025ffb:	jne    0x140026017
   140025ffd:	mov    rax,QWORD PTR [rbx]
   140026000:	mov    rcx,rbx
   140026003:	call   QWORD PTR [rax+0x238]
   140026009:	test   eax,eax
   14002600b:	je     0x140026017
   14002600d:	xor    edx,edx
   14002600f:	mov    rcx,rbx
   140026012:	call   0x140024df8
   140026017:	mov    rbx,QWORD PTR [rsp+0x40]
   14002601c:	add    rsp,0x30
   140026020:	pop    rdi
   140026021:	ret    
   140026022:	int3   
   140026023:	int3   
   140026024:	mov    rax,rsp
   140026027:	push   r13
   140026029:	push   r14
   14002602b:	push   r15
   14002602d:	sub    rsp,0x80
   140026034:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002603d:	mov    QWORD PTR [rax+0x8],rbx
   140026041:	mov    QWORD PTR [rax+0x10],rsi
   140026045:	mov    QWORD PTR [rax+0x18],rdi
   140026049:	mov    QWORD PTR [rax+0x20],r12
   14002604d:	mov    r15,r9
   140026050:	mov    r12d,r8d
   140026053:	mov    r14,rdx
   140026056:	mov    r13,rcx
   140026059:	lea    rdx,[rip+0xffffffffffff6ae8]        # 0x14001cb48
   140026060:	lea    rcx,[rip+0x62b99]        # 0x140088c00
   140026067:	call   0x14002d3a8
   14002606c:	mov    rsi,rax
   14002606f:	mov    QWORD PTR [rsp+0x28],rax
   140026074:	xor    edi,edi
   140026076:	mov    r10d,edi
   140026079:	cmp    rax,rdi
   14002607c:	setne  r10b
   140026080:	cmp    r10d,edi
   140026083:	jne    0x14002608b
   140026085:	call   0x1400208f8
   14002608a:	int3   
   14002608b:	lea    rcx,[rsp+0x50]
   140026090:	lea    rdx,[rax+0x98]
   140026097:	mov    r8d,0x30
   14002609d:	call   0x1400478c0
   1400260a2:	mov    QWORD PTR [rsi+0x98],r14
   1400260a9:	mov    DWORD PTR [rsi+0xa0],r12d
   1400260b0:	mov    QWORD PTR [rsi+0xa8],r15
   1400260b7:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400260bf:	mov    QWORD PTR [rsi+0xb0],rbx
   1400260c6:	cmp    r12d,0x2
   1400260ca:	jne    0x1400260e7
   1400260cc:	cmp    QWORD PTR [r13+0x98],rdi
   1400260d3:	je     0x1400260e7
   1400260d5:	mov    rcx,QWORD PTR [r13+0x98]
   1400260dc:	mov    rax,QWORD PTR [rcx]
   1400260df:	xor    edx,edx
   1400260e1:	call   QWORD PTR [rax+0xc0]
   1400260e7:	mov    DWORD PTR [rsp+0x20],edi
   1400260eb:	mov    r14d,0x110
   1400260f1:	cmp    r12d,r14d
   1400260f4:	jne    0x14002610c
   1400260f6:	lea    r8,[rsp+0x20]
   1400260fb:	lea    rdx,[rsp+0x38]
   140026100:	mov    rcx,r13
   140026103:	call   0x140023738
   140026108:	mov    edi,DWORD PTR [rsp+0x20]
   14002610c:	mov    rax,QWORD PTR [r13+0x0]
   140026110:	mov    r9,rbx
   140026113:	mov    r8,r15
   140026116:	mov    edx,r12d
   140026119:	mov    rcx,r13
   14002611c:	call   QWORD PTR [rax+0x210]
   140026122:	mov    rbx,rax
   140026125:	cmp    r12d,r14d
   140026128:	jne    0x14002613b
   14002612a:	mov    r8d,edi
   14002612d:	lea    rdx,[rsp+0x38]
   140026132:	mov    rcx,r13
   140026135:	call   0x140025f8c
   14002613a:	nop
   14002613b:	jmp    0x140026147
   14002613d:	mov    rbx,QWORD PTR [rsp+0x20]
   140026142:	mov    rsi,QWORD PTR [rsp+0x28]
   140026147:	lea    rcx,[rsi+0x98]
   14002614e:	lea    rdx,[rsp+0x50]
   140026153:	mov    r8d,0x30
   140026159:	call   0x1400478c0
   14002615e:	mov    rax,rbx
   140026161:	lea    r11,[rsp+0x80]
   140026169:	mov    rbx,QWORD PTR [r11+0x20]
   14002616d:	mov    rsi,QWORD PTR [r11+0x28]
   140026171:	mov    rdi,QWORD PTR [r11+0x30]
   140026175:	mov    r12,QWORD PTR [r11+0x38]
   140026179:	mov    rsp,r11
   14002617c:	pop    r15
   14002617e:	pop    r14
   140026180:	pop    r13
   140026182:	ret    
   140026183:	int3   
   140026184:	mov    QWORD PTR [rsp+0x10],rdx
   140026189:	push   rbx
   14002618a:	push   rbp
   14002618b:	push   rdi
   14002618c:	sub    rsp,0x20
   140026190:	mov    rbp,rdx
   140026193:	mov    rdx,QWORD PTR [rbp+0x28]
   140026197:	add    rdx,0x98
   14002619e:	mov    rbx,QWORD PTR [rbp+0x48]
   1400261a2:	mov    rcx,rbx
   1400261a5:	call   0x14001c894
   1400261aa:	mov    QWORD PTR [rbp+0x20],rax
   1400261ae:	xor    edi,edi
   1400261b0:	cmp    rbx,rdi
   1400261b3:	je     0x1400261be
   1400261b5:	mov    rcx,rbx
   1400261b8:	call   0x1400207b8
   1400261bd:	nop
   1400261be:	lea    rax,[rip+0xffffffffffffff78]        # 0x14002613d
   1400261c5:	jmp    0x1400261c7
   1400261c7:	add    rsp,0x20
   1400261cb:	pop    rdi
   1400261cc:	pop    rbp
   1400261cd:	pop    rbx
   1400261ce:	ret    
   1400261cf:	int3   
   1400261d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400261d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400261da:	mov    QWORD PTR [rsp+0x18],rsi
   1400261df:	push   rdi
   1400261e0:	sub    rsp,0x30
   1400261e4:	cmp    edx,0x360
   1400261ea:	mov    rsi,r9
   1400261ed:	mov    rbp,r8
   1400261f0:	mov    edi,edx
   1400261f2:	mov    rbx,rcx
   1400261f5:	jne    0x140026203
   1400261f7:	movabs rax,0x1
   140026201:	jmp    0x14002623c
   140026203:	call   0x140025734
   140026208:	test   rax,rax
   14002620b:	je     0x14002622b
   14002620d:	cmp    QWORD PTR [rax+0x40],rbx
   140026211:	jne    0x14002622b
   140026213:	mov    r9,rbp
   140026216:	mov    r8d,edi
   140026219:	mov    rdx,rbx
   14002621c:	mov    rcx,rax
   14002621f:	mov    QWORD PTR [rsp+0x20],rsi
   140026224:	call   0x140026024
   140026229:	jmp    0x14002623c
   14002622b:	mov    r9,rsi
   14002622e:	mov    r8,rbp
   140026231:	mov    edx,edi
   140026233:	mov    rcx,rbx
   140026236:	call   QWORD PTR [rip+0x3e6ec]        # 0x140064928
   14002623c:	mov    rbx,QWORD PTR [rsp+0x40]
   140026241:	mov    rbp,QWORD PTR [rsp+0x48]
   140026246:	mov    rsi,QWORD PTR [rsp+0x50]
   14002624b:	add    rsp,0x30
   14002624f:	pop    rdi
   140026250:	ret    
   140026251:	int3   
   140026252:	int3   
   140026253:	int3   
   140026254:	mov    QWORD PTR [rsp+0x8],rcx
   140026259:	push   rbx
   14002625a:	sub    rsp,0x30
   14002625e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026267:	mov    rbx,rcx
   14002626a:	lea    rax,[rip+0x43367]        # 0x1400695d8
   140026271:	mov    QWORD PTR [rcx],rax
   140026274:	cmp    QWORD PTR [rcx+0x40],0x0
   140026279:	je     0x1400262b0
   14002627b:	lea    rax,[rip+0x659ee]        # 0x14008bc70
   140026282:	cmp    rcx,rax
   140026285:	je     0x1400262b0
   140026287:	lea    rax,[rip+0x65a92]        # 0x14008bd20
   14002628e:	cmp    rcx,rax
   140026291:	je     0x1400262b0
   140026293:	lea    rax,[rip+0x65b36]        # 0x14008bdd0
   14002629a:	cmp    rcx,rax
   14002629d:	je     0x1400262b0
   14002629f:	lea    rax,[rip+0x65bda]        # 0x14008be80
   1400262a6:	cmp    rcx,rax
   1400262a9:	je     0x1400262b0
   1400262ab:	call   0x140025a30
   1400262b0:	mov    rcx,QWORD PTR [rbx+0x98]
   1400262b7:	test   rcx,rcx
   1400262ba:	je     0x1400262c7
   1400262bc:	mov    rax,QWORD PTR [rcx]
   1400262bf:	mov    edx,0x1
   1400262c4:	call   QWORD PTR [rax+0x8]
   1400262c7:	mov    rax,QWORD PTR [rbx+0xa0]
   1400262ce:	test   rax,rax
   1400262d1:	je     0x1400262de
   1400262d3:	cmp    QWORD PTR [rax+0x50],rbx
   1400262d7:	jne    0x1400262de
   1400262d9:	and    QWORD PTR [rax+0x50],0x0
   1400262de:	mov    rcx,rbx
   1400262e1:	add    rsp,0x30
   1400262e5:	pop    rbx
   1400262e6:	jmp    0x14001c420
   1400262eb:	int3   
   1400262ec:	int3   
   1400262ed:	int3   
   1400262ee:	int3   
   1400262ef:	int3   
   1400262f0:	int3   
   1400262f1:	int3   
   1400262f2:	int3   
   1400262f3:	int3   
   1400262f4:	rex push rbp
   1400262f6:	sub    rsp,0x20
   1400262fa:	mov    rbp,rdx
   1400262fd:	mov    rcx,QWORD PTR [rbp+0x40]
   140026301:	call   0x14001c420
   140026306:	add    rsp,0x20
   14002630a:	pop    rbp
   14002630b:	ret    
   14002630c:	rex push rbx
   14002630e:	sub    rsp,0x20
   140026312:	test   r8,r8
   140026315:	mov    rbx,rcx
   140026318:	je     0x140026331
   14002631a:	lea    rdx,[rsp+0x40]
   14002631f:	mov    rcx,r8
   140026322:	call   0x140025c38
   140026327:	test   eax,eax
   140026329:	je     0x140026331
   14002632b:	mov    eax,DWORD PTR [rsp+0x40]
   14002632f:	jmp    0x140026339
   140026331:	mov    rcx,rbx
   140026334:	call   0x1400255d4
   140026339:	add    rsp,0x20
   14002633d:	pop    rbx
   14002633e:	ret    
   14002633f:	int3   
   140026340:	rex push rbx
   140026342:	sub    rsp,0x20
   140026346:	test   r8,r8
   140026349:	mov    rbx,rcx
   14002634c:	je     0x140026365
   14002634e:	lea    rdx,[rsp+0x40]
   140026353:	mov    rcx,r8
   140026356:	call   0x140025c38
   14002635b:	test   eax,eax
   14002635d:	je     0x140026365
   14002635f:	mov    eax,DWORD PTR [rsp+0x40]
   140026363:	jmp    0x14002636d
   140026365:	mov    rcx,rbx
   140026368:	call   0x1400255d4
   14002636d:	add    rsp,0x20
   140026371:	pop    rbx
   140026372:	ret    
   140026373:	int3   
   140026374:	mov    QWORD PTR [rsp+0x8],rbx
   140026379:	push   rdi
   14002637a:	sub    rsp,0x20
   14002637e:	mov    rbx,r8
   140026381:	mov    r8d,0x1
   140026387:	mov    rdi,rcx
   14002638a:	cmp    DWORD PTR [rbx],r8d
   14002638d:	jne    0x1400263fb
   14002638f:	lea    rdx,[rip+0xffffffffffff67b2]        # 0x14001cb48
   140026396:	lea    rcx,[rip+0x62863]        # 0x140088c00
   14002639d:	call   0x14002d3a8
   1400263a2:	test   rax,rax
   1400263a5:	jne    0x1400263ad
   1400263a7:	call   0x1400208f8
   1400263ac:	int3   
   1400263ad:	mov    rcx,QWORD PTR [rdi+0x40]
   1400263b1:	cmp    QWORD PTR [rax+0xc8],rcx
   1400263b8:	jne    0x1400263c3
   1400263ba:	mov    rcx,QWORD PTR [rax+0xd0]
   1400263c1:	jmp    0x1400263cc
   1400263c3:	call   QWORD PTR [rip+0x3e50f]        # 0x1400648d8
   1400263c9:	mov    rcx,rax
   1400263cc:	call   0x14003f114
   1400263d1:	test   rax,rax
   1400263d4:	jne    0x1400263dc
   1400263d6:	call   0x1400208f8
   1400263db:	int3   
   1400263dc:	mov    edx,DWORD PTR [rbx+0x8]
   1400263df:	mov    rcx,rax
   1400263e2:	call   0x140023960
   1400263e7:	test   rax,rax
   1400263ea:	je     0x14002641a
   1400263ec:	mov    r8,QWORD PTR [rax]
   1400263ef:	mov    rdx,rbx
   1400263f2:	mov    rcx,rax
   1400263f5:	call   QWORD PTR [r8+0x20]
   1400263f9:	jmp    0x14002641a
   1400263fb:	mov    edx,DWORD PTR [rbx+0x4]
   1400263fe:	mov    rcx,QWORD PTR [rcx+0x40]
   140026402:	call   0x140025b1c
   140026407:	test   rax,rax
   14002640a:	je     0x14002641a
   14002640c:	xor    edx,edx
   14002640e:	mov    rcx,rax
   140026411:	call   0x140025c38
   140026416:	test   eax,eax
   140026418:	jne    0x140026422
   14002641a:	mov    rcx,rdi
   14002641d:	call   0x1400255d4
   140026422:	mov    rbx,QWORD PTR [rsp+0x30]
   140026427:	add    rsp,0x20
   14002642b:	pop    rdi
   14002642c:	ret    
   14002642d:	int3   
   14002642e:	int3   
   14002642f:	int3   
   140026430:	rex push rbx
   140026432:	sub    rsp,0x20
   140026436:	test   rcx,rcx
   140026439:	je     0x140026444
   14002643b:	mov    rcx,QWORD PTR [rcx+0x40]
   14002643f:	test   rcx,rcx
   140026442:	jne    0x140026460
   140026444:	xor    eax,eax
   140026446:	add    rsp,0x20
   14002644a:	pop    rbx
   14002644b:	ret    
   14002644c:	mov    rdx,QWORD PTR [rbx]
   14002644f:	mov    rcx,rbx
   140026452:	call   QWORD PTR [rdx+0x240]
   140026458:	test   eax,eax
   14002645a:	jne    0x140026478
   14002645c:	mov    rcx,QWORD PTR [rbx+0x40]
   140026460:	call   QWORD PTR [rip+0x3e67a]        # 0x140064ae0
   140026466:	mov    rcx,rax
   140026469:	call   0x1400256f0
   14002646e:	test   rax,rax
   140026471:	mov    rbx,rax
   140026474:	jne    0x14002644c
   140026476:	jmp    0x140026444
   140026478:	mov    rax,rbx
   14002647b:	jmp    0x140026446
   14002647d:	int3   
   14002647e:	int3   
   14002647f:	int3   
   140026480:	rex push rbx
   140026482:	sub    rsp,0x20
   140026486:	test   rcx,rcx
   140026489:	mov    rbx,rcx
   14002648c:	je     0x1400264cc
   14002648e:	cmp    QWORD PTR [rcx+0x40],0x0
   140026493:	je     0x1400264cc
   140026495:	mov    rax,QWORD PTR [rcx]
   140026498:	call   QWORD PTR [rax+0x240]
   14002649e:	test   eax,eax
   1400264a0:	jne    0x1400264ad
   1400264a2:	mov    rcx,rbx
   1400264a5:	call   0x140026430
   1400264aa:	mov    rbx,rax
   1400264ad:	test   rbx,rbx
   1400264b0:	je     0x1400264c7
   1400264b2:	mov    rcx,rbx
   1400264b5:	jmp    0x1400264bd
   1400264b7:	mov    rbx,rax
   1400264ba:	mov    rcx,rax
   1400264bd:	call   0x140026430
   1400264c2:	test   rax,rax
   1400264c5:	jne    0x1400264b7
   1400264c7:	mov    rax,rbx
   1400264ca:	jmp    0x1400264ce
   1400264cc:	xor    eax,eax
   1400264ce:	add    rsp,0x20
   1400264d2:	pop    rbx
   1400264d3:	ret    
   1400264d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400264d9:	mov    QWORD PTR [rsp+0x18],r8
   1400264de:	mov    DWORD PTR [rsp+0x10],edx
   1400264e2:	push   rbp
   1400264e3:	push   rsi
   1400264e4:	push   rdi
   1400264e5:	sub    rsp,0x30
   1400264e9:	mov    rbp,r9
   1400264ec:	call   QWORD PTR [rip+0x3e3ae]        # 0x1400648a0
   1400264f2:	test   rax,rax
   1400264f5:	mov    rbx,rax
   1400264f8:	je     0x14002658e
   1400264fe:	mov    edi,DWORD PTR [rsp+0x78]
   140026502:	mov    esi,DWORD PTR [rsp+0x70]
   140026506:	test   edi,edi
   140026508:	mov    rcx,rbx
   14002650b:	je     0x140026534
   14002650d:	call   0x140025734
   140026512:	test   rax,rax
   140026515:	je     0x140026546
   140026517:	mov    r9,QWORD PTR [rsp+0x60]
   14002651c:	mov    r8d,DWORD PTR [rsp+0x58]
   140026521:	mov    rdx,QWORD PTR [rax+0x40]
   140026525:	mov    rcx,rax
   140026528:	mov    QWORD PTR [rsp+0x20],rbp
   14002652d:	call   0x140026024
   140026532:	jmp    0x140026546
   140026534:	mov    r8,QWORD PTR [rsp+0x60]
   140026539:	mov    edx,DWORD PTR [rsp+0x58]
   14002653d:	mov    r9,rbp
   140026540:	call   QWORD PTR [rip+0x3e62a]        # 0x140064b70
   140026546:	test   esi,esi
   140026548:	je     0x140026574
   14002654a:	mov    rcx,rbx
   14002654d:	call   QWORD PTR [rip+0x3e34d]        # 0x1400648a0
   140026553:	test   rax,rax
   140026556:	je     0x140026574
   140026558:	mov    r8,QWORD PTR [rsp+0x60]
   14002655d:	mov    edx,DWORD PTR [rsp+0x58]
   140026561:	mov    r9,rbp
   140026564:	mov    rcx,rbx
   140026567:	mov    DWORD PTR [rsp+0x28],edi
   14002656b:	mov    DWORD PTR [rsp+0x20],esi
   14002656f:	call   0x1400264d4
   140026574:	mov    edx,0x2
   140026579:	mov    rcx,rbx
   14002657c:	call   QWORD PTR [rip+0x3e3fe]        # 0x140064980
   140026582:	test   rax,rax
   140026585:	mov    rbx,rax
   140026588:	jne    0x140026506
   14002658e:	mov    rbx,QWORD PTR [rsp+0x50]
   140026593:	add    rsp,0x30
   140026597:	pop    rdi
   140026598:	pop    rsi
   140026599:	pop    rbp
   14002659a:	ret    
   14002659b:	int3   
   14002659c:	mov    rax,rsp
   14002659f:	push   rdi
   1400265a0:	sub    rsp,0xe0
   1400265a7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400265b0:	mov    QWORD PTR [rax+0x8],rbx
   1400265b4:	mov    QWORD PTR [rax+0x10],rbp
   1400265b8:	mov    QWORD PTR [rax+0x18],rsi
   1400265bc:	mov    rbp,rdx
   1400265bf:	mov    rdi,rcx
   1400265c2:	call   0x140021ac0
   1400265c7:	mov    rcx,QWORD PTR [rax+0x28]
   1400265cb:	xor    ebx,ebx
   1400265cd:	cmp    rcx,rbx
   1400265d0:	jne    0x1400265d9
   1400265d2:	xor    eax,eax
   1400265d4:	jmp    0x140026674
   1400265d9:	lea    rsi,[rcx+0x30]
   1400265dd:	mov    rdx,rdi
   1400265e0:	mov    rcx,rsi
   1400265e3:	call   0x14002f878
   1400265e8:	cmp    rax,rbx
   1400265eb:	jne    0x140026669
   1400265ed:	mov    rcx,rdi
   1400265f0:	call   QWORD PTR [rip+0x3e4ea]        # 0x140064ae0
   1400265f6:	mov    rdx,rax
   1400265f9:	mov    rcx,rsi
   1400265fc:	call   0x14002f878
   140026601:	cmp    rax,rbx
   140026604:	je     0x140026665
   140026606:	mov    rcx,QWORD PTR [rax+0x98]
   14002660d:	cmp    rcx,rbx
   140026610:	je     0x140026665
   140026612:	add    rcx,0x48
   140026616:	mov    rdx,rdi
   140026619:	call   0x14002f878
   14002661e:	mov    rsi,rax
   140026621:	cmp    rax,rbx
   140026624:	je     0x140026665
   140026626:	mov    rdx,rdi
   140026629:	lea    rcx,[rsp+0x30]
   14002662e:	call   0x140022858
   140026633:	nop
   140026634:	mov    QWORD PTR [rsp+0xd0],rsi
   14002663c:	mov    rdx,rbp
   14002663f:	lea    rcx,[rsp+0x30]
   140026644:	call   0x140025c38
   140026649:	movsxd rcx,eax
   14002664c:	mov    QWORD PTR [rsp+0x70],rbx
   140026651:	cmp    rcx,rbx
   140026654:	setne  bl
   140026657:	lea    rcx,[rsp+0x30]
   14002665c:	call   0x140026254
   140026661:	mov    eax,ebx
   140026663:	jmp    0x140026674
   140026665:	xor    eax,eax
   140026667:	jmp    0x140026674
   140026669:	mov    rdx,rbp
   14002666c:	mov    rcx,rax
   14002666f:	call   0x140025c38
   140026674:	lea    r11,[rsp+0xe0]
   14002667c:	mov    rbx,QWORD PTR [r11+0x10]
   140026680:	mov    rbp,QWORD PTR [r11+0x18]
   140026684:	mov    rsi,QWORD PTR [r11+0x20]
   140026688:	mov    rsp,r11
   14002668b:	pop    rdi
   14002668c:	ret    
   14002668d:	int3   
   14002668e:	int3   
   14002668f:	int3   
   140026690:	int3   
   140026691:	int3   
   140026692:	int3   
   140026693:	int3   
   140026694:	int3   
   140026695:	int3   
   140026696:	int3   
   140026697:	int3   
   140026698:	int3   
   140026699:	int3   
   14002669a:	int3   
   14002669b:	int3   
   14002669c:	rex push rbp
   14002669e:	sub    rsp,0x20
   1400266a2:	mov    rbp,rdx
   1400266a5:	lea    rcx,[rbp+0x30]
   1400266a9:	call   0x140026254
   1400266ae:	add    rsp,0x20
   1400266b2:	pop    rbp
   1400266b3:	ret    
   1400266b4:	rex push rbx
   1400266b6:	sub    rsp,0x20
   1400266ba:	cmp    dx,0x1
   1400266be:	mov    rbx,rcx
   1400266c1:	je     0x1400266c9
   1400266c3:	cmp    dx,0x2
   1400266c7:	jne    0x1400266d7
   1400266c9:	xor    edx,edx
   1400266cb:	mov    rcx,r8
   1400266ce:	call   0x14002659c
   1400266d3:	test   eax,eax
   1400266d5:	jne    0x1400266df
   1400266d7:	mov    rcx,rbx
   1400266da:	call   0x1400255d4
   1400266df:	add    rsp,0x20
   1400266e3:	pop    rbx
   1400266e4:	ret    
   1400266e5:	int3   
   1400266e6:	int3   
   1400266e7:	int3   
   1400266e8:	rex push rbx
   1400266ea:	sub    rsp,0x20
   1400266ee:	mov    rbx,rcx
   1400266f1:	mov    rcx,QWORD PTR [r8+0x8]
   1400266f5:	lea    rdx,[rsp+0x40]
   1400266fa:	call   0x14002659c
   1400266ff:	test   eax,eax
   140026701:	je     0x14002670a
   140026703:	movsxd rax,DWORD PTR [rsp+0x40]
   140026708:	jmp    0x140026714
   14002670a:	mov    rcx,rbx
   14002670d:	call   0x1400255d4
   140026712:	cdqe   
   140026714:	add    rsp,0x20
   140026718:	pop    rbx
   140026719:	ret    
   14002671a:	int3   
   14002671b:	int3   
   14002671c:	mov    QWORD PTR [rsp+0x8],rbx
   140026721:	push   rdi
   140026722:	sub    rsp,0x20
   140026726:	mov    rdi,rdx
   140026729:	mov    rbx,rcx
   14002672c:	call   0x140025760
   140026731:	test   eax,eax
   140026733:	je     0x140026774
   140026735:	mov    rax,QWORD PTR [rbx]
   140026738:	mov    rcx,rbx
   14002673b:	call   QWORD PTR [rax+0xa0]
   140026741:	mov    r11,QWORD PTR [rbx]
   140026744:	mov    rcx,rbx
   140026747:	call   QWORD PTR [r11+0x1e0]
   14002674e:	lea    r8,[rip+0xfffffffffffffa7b]        # 0x1400261d0
   140026755:	mov    edx,0xfffffffc
   14002675a:	mov    rcx,rdi
   14002675d:	mov    rbx,rax
   140026760:	call   QWORD PTR [rip+0x3e14a]        # 0x1400648b0
   140026766:	cmp    QWORD PTR [rbx],0x0
   14002676a:	jne    0x14002676f
   14002676c:	mov    QWORD PTR [rbx],rax
   14002676f:	mov    eax,0x1
   140026774:	mov    rbx,QWORD PTR [rsp+0x30]
   140026779:	add    rsp,0x20
   14002677d:	pop    rdi
   14002677e:	ret    
   14002677f:	int3   
   140026780:	sub    rsp,0x28
   140026784:	cmp    QWORD PTR [rcx+0x10],0x0
   140026789:	jne    0x140026792
   14002678b:	mov    eax,0x80010108
   140026790:	jmp    0x1400267a8
   140026792:	test   rdx,rdx
   140026795:	jne    0x14002679e
   140026797:	mov    eax,0x80004003
   14002679c:	jmp    0x1400267a8
   14002679e:	mov    rcx,QWORD PTR [rcx+0x10]
   1400267a2:	mov    rax,QWORD PTR [rcx]
   1400267a5:	call   QWORD PTR [rax+0x38]
   1400267a8:	add    rsp,0x28
   1400267ac:	ret    
   1400267ad:	int3   
   1400267ae:	int3   
   1400267af:	int3   
   1400267b0:	sub    rsp,0x28
   1400267b4:	cmp    QWORD PTR [rcx+0x10],0x0
   1400267b9:	jne    0x1400267c2
   1400267bb:	mov    eax,0x80010108
   1400267c0:	jmp    0x1400267d8
   1400267c2:	test   rdx,rdx
   1400267c5:	jne    0x1400267ce
   1400267c7:	mov    eax,0x80004003
   1400267cc:	jmp    0x1400267d8
   1400267ce:	mov    rcx,QWORD PTR [rcx+0x10]
   1400267d2:	mov    rax,QWORD PTR [rcx]
   1400267d5:	call   QWORD PTR [rax+0x40]
   1400267d8:	add    rsp,0x28
   1400267dc:	ret    
   1400267dd:	int3   
   1400267de:	int3   
   1400267df:	int3   
   1400267e0:	sub    rsp,0x48
   1400267e4:	cmp    QWORD PTR [rcx+0x10],0x0
   1400267e9:	jne    0x1400267f2
   1400267eb:	mov    eax,0x80010108
   1400267f0:	jmp    0x140026828
   1400267f2:	test   r8,r8
   1400267f5:	jne    0x1400267fe
   1400267f7:	mov    eax,0x80004003
   1400267fc:	jmp    0x140026828
   1400267fe:	mov    rax,QWORD PTR [rdx]
   140026801:	mov    rcx,QWORD PTR [rcx+0x10]
   140026805:	lea    r9,[rsp+0x20]
   14002680a:	mov    QWORD PTR [r9],rax
   14002680d:	mov    rax,QWORD PTR [rdx+0x8]
   140026811:	mov    QWORD PTR [r9+0x8],rax
   140026815:	mov    rax,QWORD PTR [rdx+0x10]
   140026819:	lea    rdx,[rsp+0x20]
   14002681e:	mov    QWORD PTR [r9+0x10],rax
   140026822:	mov    rax,QWORD PTR [rcx]
   140026825:	call   QWORD PTR [rax+0x48]
   140026828:	add    rsp,0x48
   14002682c:	ret    
   14002682d:	int3   
   14002682e:	int3   
   14002682f:	int3   
   140026830:	sub    rsp,0x48
   140026834:	cmp    QWORD PTR [rcx+0x10],0x0
   140026839:	jne    0x140026842
   14002683b:	mov    eax,0x80010108
   140026840:	jmp    0x140026878
   140026842:	test   r8,r8
   140026845:	jne    0x14002684e
   140026847:	mov    eax,0x80004003
   14002684c:	jmp    0x140026878
   14002684e:	mov    rax,QWORD PTR [rdx]
   140026851:	mov    rcx,QWORD PTR [rcx+0x10]
   140026855:	lea    r9,[rsp+0x20]
   14002685a:	mov    QWORD PTR [r9],rax
   14002685d:	mov    rax,QWORD PTR [rdx+0x8]
   140026861:	mov    QWORD PTR [r9+0x8],rax
   140026865:	mov    rax,QWORD PTR [rdx+0x10]
   140026869:	lea    rdx,[rsp+0x20]
   14002686e:	mov    QWORD PTR [r9+0x10],rax
   140026872:	mov    rax,QWORD PTR [rcx]
   140026875:	call   QWORD PTR [rax+0x50]
   140026878:	add    rsp,0x48
   14002687c:	ret    
   14002687d:	int3   
   14002687e:	int3   
   14002687f:	int3   
   140026880:	sub    rsp,0x48
   140026884:	cmp    QWORD PTR [rcx+0x10],0x0
   140026889:	jne    0x140026892
   14002688b:	mov    eax,0x80010108
   140026890:	jmp    0x1400268c8
   140026892:	test   r8,r8
   140026895:	jne    0x14002689e
   140026897:	mov    eax,0x80004003
   14002689c:	jmp    0x1400268c8
   14002689e:	mov    rax,QWORD PTR [rdx]
   1400268a1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400268a5:	lea    r9,[rsp+0x20]
   1400268aa:	mov    QWORD PTR [r9],rax
   1400268ad:	mov    rax,QWORD PTR [rdx+0x8]
   1400268b1:	mov    QWORD PTR [r9+0x8],rax
   1400268b5:	mov    rax,QWORD PTR [rdx+0x10]
   1400268b9:	lea    rdx,[rsp+0x20]
   1400268be:	mov    QWORD PTR [r9+0x10],rax
   1400268c2:	mov    rax,QWORD PTR [rcx]
   1400268c5:	call   QWORD PTR [rax+0x58]
   1400268c8:	add    rsp,0x48
   1400268cc:	ret    
   1400268cd:	int3   
   1400268ce:	int3   
   1400268cf:	int3   
   1400268d0:	sub    rsp,0x48
   1400268d4:	cmp    QWORD PTR [rcx+0x10],0x0
   1400268d9:	jne    0x1400268e2
   1400268db:	mov    eax,0x80010108
   1400268e0:	jmp    0x140026918
   1400268e2:	test   r8,r8
   1400268e5:	jne    0x1400268ee
   1400268e7:	mov    eax,0x80004003
   1400268ec:	jmp    0x140026918
   1400268ee:	mov    rax,QWORD PTR [rdx]
   1400268f1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400268f5:	lea    r9,[rsp+0x20]
   1400268fa:	mov    QWORD PTR [r9],rax
   1400268fd:	mov    rax,QWORD PTR [rdx+0x8]
   140026901:	mov    QWORD PTR [r9+0x8],rax
   140026905:	mov    rax,QWORD PTR [rdx+0x10]
   140026909:	lea    rdx,[rsp+0x20]
   14002690e:	mov    QWORD PTR [r9+0x10],rax
   140026912:	mov    rax,QWORD PTR [rcx]
   140026915:	call   QWORD PTR [rax+0x60]
   140026918:	add    rsp,0x48
   14002691c:	ret    
   14002691d:	int3   
   14002691e:	int3   
   14002691f:	int3   
   140026920:	sub    rsp,0x48
   140026924:	cmp    QWORD PTR [rcx+0x10],0x0
   140026929:	jne    0x140026932
   14002692b:	mov    eax,0x80010108
   140026930:	jmp    0x140026968
   140026932:	test   r8,r8
   140026935:	jne    0x14002693e
   140026937:	mov    eax,0x80004003
   14002693c:	jmp    0x140026968
   14002693e:	mov    rax,QWORD PTR [rdx]
   140026941:	mov    rcx,QWORD PTR [rcx+0x10]
   140026945:	lea    r9,[rsp+0x20]
   14002694a:	mov    QWORD PTR [r9],rax
   14002694d:	mov    rax,QWORD PTR [rdx+0x8]
   140026951:	mov    QWORD PTR [r9+0x8],rax
   140026955:	mov    rax,QWORD PTR [rdx+0x10]
   140026959:	lea    rdx,[rsp+0x20]
   14002695e:	mov    QWORD PTR [r9+0x10],rax
   140026962:	mov    rax,QWORD PTR [rcx]
   140026965:	call   QWORD PTR [rax+0x68]
   140026968:	add    rsp,0x48
   14002696c:	ret    
   14002696d:	int3   
   14002696e:	int3   
   14002696f:	int3   
   140026970:	sub    rsp,0x48
   140026974:	cmp    QWORD PTR [rcx+0x10],0x0
   140026979:	jne    0x140026982
   14002697b:	mov    eax,0x80010108
   140026980:	jmp    0x1400269b8
   140026982:	test   r8,r8
   140026985:	jne    0x14002698e
   140026987:	mov    eax,0x80004003
   14002698c:	jmp    0x1400269b8
   14002698e:	mov    rax,QWORD PTR [rdx]
   140026991:	mov    rcx,QWORD PTR [rcx+0x10]
   140026995:	lea    r9,[rsp+0x20]
   14002699a:	mov    QWORD PTR [r9],rax
   14002699d:	mov    rax,QWORD PTR [rdx+0x8]
   1400269a1:	mov    QWORD PTR [r9+0x8],rax
   1400269a5:	mov    rax,QWORD PTR [rdx+0x10]
   1400269a9:	lea    rdx,[rsp+0x20]
   1400269ae:	mov    QWORD PTR [r9+0x10],rax
   1400269b2:	mov    rax,QWORD PTR [rcx]
   1400269b5:	call   QWORD PTR [rax+0x70]
   1400269b8:	add    rsp,0x48
   1400269bc:	ret    
   1400269bd:	int3   
   1400269be:	int3   
   1400269bf:	int3   
   1400269c0:	sub    rsp,0x48
   1400269c4:	cmp    QWORD PTR [rcx+0x10],0x0
   1400269c9:	jne    0x1400269d2
   1400269cb:	mov    eax,0x80010108
   1400269d0:	jmp    0x140026a08
   1400269d2:	test   r8,r8
   1400269d5:	jne    0x1400269de
   1400269d7:	mov    eax,0x80004003
   1400269dc:	jmp    0x140026a08
   1400269de:	mov    rax,QWORD PTR [rdx]
   1400269e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400269e5:	lea    r9,[rsp+0x20]
   1400269ea:	mov    QWORD PTR [r9],rax
   1400269ed:	mov    rax,QWORD PTR [rdx+0x8]
   1400269f1:	mov    QWORD PTR [r9+0x8],rax
   1400269f5:	mov    rax,QWORD PTR [rdx+0x10]
   1400269f9:	lea    rdx,[rsp+0x20]
   1400269fe:	mov    QWORD PTR [r9+0x10],rax
   140026a02:	mov    rax,QWORD PTR [rcx]
   140026a05:	call   QWORD PTR [rax+0x78]
   140026a08:	add    rsp,0x48
   140026a0c:	ret    
   140026a0d:	int3   
   140026a0e:	int3   
   140026a0f:	int3   
   140026a10:	sub    rsp,0x48
   140026a14:	cmp    QWORD PTR [rcx+0x10],0x0
   140026a19:	jne    0x140026a22
   140026a1b:	mov    eax,0x80010108
   140026a20:	jmp    0x140026a60
   140026a22:	test   rdx,rdx
   140026a25:	jne    0x140026a2e
   140026a27:	mov    eax,0x80004003
   140026a2c:	jmp    0x140026a60
   140026a2e:	test   r9,r9
   140026a31:	je     0x140026a27
   140026a33:	mov    rax,QWORD PTR [r8]
   140026a36:	mov    rcx,QWORD PTR [rcx+0x10]
   140026a3a:	lea    r10,[rsp+0x20]
   140026a3f:	mov    QWORD PTR [r10],rax
   140026a42:	mov    rax,QWORD PTR [r8+0x8]
   140026a46:	mov    QWORD PTR [r10+0x8],rax
   140026a4a:	mov    rax,QWORD PTR [r8+0x10]
   140026a4e:	lea    r8,[rsp+0x20]
   140026a53:	mov    QWORD PTR [r10+0x10],rax
   140026a57:	mov    rax,QWORD PTR [rcx]
   140026a5a:	call   QWORD PTR [rax+0x80]
   140026a60:	add    rsp,0x48
   140026a64:	ret    
   140026a65:	int3   
   140026a66:	int3   
   140026a67:	int3   
   140026a68:	sub    rsp,0x48
   140026a6c:	cmp    QWORD PTR [rcx+0x10],0x0
   140026a71:	jne    0x140026a7a
   140026a73:	mov    eax,0x80010108
   140026a78:	jmp    0x140026ab3
   140026a7a:	test   r8,r8
   140026a7d:	jne    0x140026a86
   140026a7f:	mov    eax,0x80004003
   140026a84:	jmp    0x140026ab3
   140026a86:	mov    rax,QWORD PTR [rdx]
   140026a89:	mov    rcx,QWORD PTR [rcx+0x10]
   140026a8d:	lea    r9,[rsp+0x20]
   140026a92:	mov    QWORD PTR [r9],rax
   140026a95:	mov    rax,QWORD PTR [rdx+0x8]
   140026a99:	mov    QWORD PTR [r9+0x8],rax
   140026a9d:	mov    rax,QWORD PTR [rdx+0x10]
   140026aa1:	lea    rdx,[rsp+0x20]
   140026aa6:	mov    QWORD PTR [r9+0x10],rax
   140026aaa:	mov    rax,QWORD PTR [rcx]
   140026aad:	call   QWORD PTR [rax+0x88]
   140026ab3:	add    rsp,0x48
   140026ab7:	ret    
   140026ab8:	sub    rsp,0x28
   140026abc:	cmp    QWORD PTR [rcx+0x10],0x0
   140026ac1:	jne    0x140026aca
   140026ac3:	mov    eax,0x80010108
   140026ac8:	jmp    0x140026ae3
   140026aca:	test   rdx,rdx
   140026acd:	jne    0x140026ad6
   140026acf:	mov    eax,0x80004003
   140026ad4:	jmp    0x140026ae3
   140026ad6:	mov    rcx,QWORD PTR [rcx+0x10]
   140026ada:	mov    rax,QWORD PTR [rcx]
   140026add:	call   QWORD PTR [rax+0x90]
   140026ae3:	add    rsp,0x28
   140026ae7:	ret    
   140026ae8:	sub    rsp,0x28
   140026aec:	cmp    QWORD PTR [rcx+0x10],0x0
   140026af1:	jne    0x140026afa
   140026af3:	mov    eax,0x80010108
   140026af8:	jmp    0x140026b13
   140026afa:	test   rdx,rdx
   140026afd:	jne    0x140026b06
   140026aff:	mov    eax,0x80004003
   140026b04:	jmp    0x140026b13
   140026b06:	mov    rcx,QWORD PTR [rcx+0x10]
   140026b0a:	mov    rax,QWORD PTR [rcx]
   140026b0d:	call   QWORD PTR [rax+0x98]
   140026b13:	add    rsp,0x28
   140026b17:	ret    
   140026b18:	sub    rsp,0x48
   140026b1c:	cmp    QWORD PTR [rcx+0x10],0x0
   140026b21:	jne    0x140026b2a
   140026b23:	mov    eax,0x80010108
   140026b28:	jmp    0x140026b63
   140026b2a:	test   r8,r8
   140026b2d:	jne    0x140026b36
   140026b2f:	mov    eax,0x80004003
   140026b34:	jmp    0x140026b63
   140026b36:	mov    rax,QWORD PTR [rdx]
   140026b39:	mov    rcx,QWORD PTR [rcx+0x10]
   140026b3d:	lea    r9,[rsp+0x20]
   140026b42:	mov    QWORD PTR [r9],rax
   140026b45:	mov    rax,QWORD PTR [rdx+0x8]
   140026b49:	mov    QWORD PTR [r9+0x8],rax
   140026b4d:	mov    rax,QWORD PTR [rdx+0x10]
   140026b51:	lea    rdx,[rsp+0x20]
   140026b56:	mov    QWORD PTR [r9+0x10],rax
   140026b5a:	mov    rax,QWORD PTR [rcx]
   140026b5d:	call   QWORD PTR [rax+0xa0]
   140026b63:	add    rsp,0x48
   140026b67:	ret    
   140026b68:	sub    rsp,0x48
   140026b6c:	cmp    QWORD PTR [rcx+0x10],0x0
   140026b71:	jne    0x140026b7a
   140026b73:	mov    eax,0x80010108
   140026b78:	jmp    0x140026ba7
   140026b7a:	mov    rax,QWORD PTR [r8]
   140026b7d:	mov    rcx,QWORD PTR [rcx+0x10]
   140026b81:	lea    r9,[rsp+0x20]
   140026b86:	mov    QWORD PTR [r9],rax
   140026b89:	mov    rax,QWORD PTR [r8+0x8]
   140026b8d:	mov    QWORD PTR [r9+0x8],rax
   140026b91:	mov    rax,QWORD PTR [r8+0x10]
   140026b95:	lea    r8,[rsp+0x20]
   140026b9a:	mov    QWORD PTR [r9+0x10],rax
   140026b9e:	mov    rax,QWORD PTR [rcx]
   140026ba1:	call   QWORD PTR [rax+0xa8]
   140026ba7:	add    rsp,0x48
   140026bab:	ret    
   140026bac:	rex push rbx
   140026bae:	sub    rsp,0x50
   140026bb2:	cmp    QWORD PTR [rcx+0x10],0x0
   140026bb7:	mov    r10,rdx
   140026bba:	mov    r11,rcx
   140026bbd:	jne    0x140026bc6
   140026bbf:	mov    eax,0x80010108
   140026bc4:	jmp    0x140026c2b
   140026bc6:	test   rdx,rdx
   140026bc9:	jne    0x140026bd2
   140026bcb:	mov    eax,0x80004003
   140026bd0:	jmp    0x140026c2b
   140026bd2:	test   r8,r8
   140026bd5:	je     0x140026bcb
   140026bd7:	test   r9,r9
   140026bda:	je     0x140026bcb
   140026bdc:	mov    rdx,QWORD PTR [rsp+0x80]
   140026be4:	test   rdx,rdx
   140026be7:	je     0x140026bcb
   140026be9:	mov    rcx,QWORD PTR [rsp+0x88]
   140026bf1:	lea    rbx,[rsp+0x30]
   140026bf6:	mov    rax,QWORD PTR [rcx]
   140026bf9:	mov    QWORD PTR [rbx],rax
   140026bfc:	mov    rax,QWORD PTR [rcx+0x8]
   140026c00:	mov    QWORD PTR [rbx+0x8],rax
   140026c04:	mov    rax,QWORD PTR [rcx+0x10]
   140026c08:	mov    rcx,QWORD PTR [r11+0x10]
   140026c0c:	lea    r11,[rsp+0x30]
   140026c11:	mov    QWORD PTR [rbx+0x10],rax
   140026c15:	mov    rax,QWORD PTR [rcx]
   140026c18:	mov    QWORD PTR [rsp+0x28],r11
   140026c1d:	mov    QWORD PTR [rsp+0x20],rdx
   140026c22:	mov    rdx,r10
   140026c25:	call   QWORD PTR [rax+0xb0]
   140026c2b:	add    rsp,0x50
   140026c2f:	pop    rbx
   140026c30:	ret    
   140026c31:	int3   
   140026c32:	int3   
   140026c33:	int3   
   140026c34:	sub    rsp,0x48
   140026c38:	cmp    QWORD PTR [rcx+0x10],0x0
   140026c3d:	jne    0x140026c46
   140026c3f:	mov    eax,0x80010108
   140026c44:	jmp    0x140026c7f
   140026c46:	test   r9,r9
   140026c49:	jne    0x140026c52
   140026c4b:	mov    eax,0x80004003
   140026c50:	jmp    0x140026c7f
   140026c52:	mov    rax,QWORD PTR [r8]
   140026c55:	mov    rcx,QWORD PTR [rcx+0x10]
   140026c59:	lea    r10,[rsp+0x20]
   140026c5e:	mov    QWORD PTR [r10],rax
   140026c61:	mov    rax,QWORD PTR [r8+0x8]
   140026c65:	mov    QWORD PTR [r10+0x8],rax
   140026c69:	mov    rax,QWORD PTR [r8+0x10]
   140026c6d:	lea    r8,[rsp+0x20]
   140026c72:	mov    QWORD PTR [r10+0x10],rax
   140026c76:	mov    rax,QWORD PTR [rcx]
   140026c79:	call   QWORD PTR [rax+0xb8]
   140026c7f:	add    rsp,0x48
   140026c83:	ret    
   140026c84:	sub    rsp,0x28
   140026c88:	cmp    QWORD PTR [rcx+0x10],0x0
   140026c8d:	jne    0x140026c96
   140026c8f:	mov    eax,0x80010108
   140026c94:	jmp    0x140026caf
   140026c96:	test   r9,r9
   140026c99:	jne    0x140026ca2
   140026c9b:	mov    eax,0x80004003
   140026ca0:	jmp    0x140026caf
   140026ca2:	mov    rcx,QWORD PTR [rcx+0x10]
   140026ca6:	mov    rax,QWORD PTR [rcx]
   140026ca9:	call   QWORD PTR [rax+0xc0]
   140026caf:	add    rsp,0x28
   140026cb3:	ret    
   140026cb4:	sub    rsp,0x48
   140026cb8:	cmp    QWORD PTR [rcx+0x10],0x0
   140026cbd:	jne    0x140026cc6
   140026cbf:	mov    eax,0x80010108
   140026cc4:	jmp    0x140026cf3
   140026cc6:	mov    rax,QWORD PTR [rdx]
   140026cc9:	mov    rcx,QWORD PTR [rcx+0x10]
   140026ccd:	lea    r8,[rsp+0x20]
   140026cd2:	mov    QWORD PTR [r8],rax
   140026cd5:	mov    rax,QWORD PTR [rdx+0x8]
   140026cd9:	mov    QWORD PTR [r8+0x8],rax
   140026cdd:	mov    rax,QWORD PTR [rdx+0x10]
   140026ce1:	lea    rdx,[rsp+0x20]
   140026ce6:	mov    QWORD PTR [r8+0x10],rax
   140026cea:	mov    rax,QWORD PTR [rcx]
   140026ced:	call   QWORD PTR [rax+0xc8]
   140026cf3:	add    rsp,0x48
   140026cf7:	ret    
   140026cf8:	mov    rax,QWORD PTR [rcx+0x10]
   140026cfc:	neg    rax
   140026cff:	sbb    eax,eax
   140026d01:	and    eax,0xffff3ef9
   140026d06:	add    eax,0x80010108
   140026d0b:	ret    
   140026d0c:	mov    QWORD PTR [rcx+0x8],rdx
   140026d10:	mov    QWORD PTR [rcx+0x10],r8
   140026d14:	xor    eax,eax
   140026d16:	ret    
   140026d17:	int3   
   140026d18:	sub    rsp,0x58
   140026d1c:	cmp    QWORD PTR [rcx+0x10],0x0
   140026d21:	jne    0x140026d2a
   140026d23:	mov    eax,0x80010108
   140026d28:	jmp    0x140026d76
   140026d2a:	mov    rax,QWORD PTR [rsp+0xa0]
   140026d32:	mov    rcx,QWORD PTR [rcx+0x10]
   140026d36:	mov    r10,QWORD PTR [rcx]
   140026d39:	mov    QWORD PTR [rsp+0x40],rax
   140026d3e:	mov    rax,QWORD PTR [rsp+0x98]
   140026d46:	mov    QWORD PTR [rsp+0x38],rax
   140026d4b:	mov    rax,QWORD PTR [rsp+0x90]
   140026d53:	mov    QWORD PTR [rsp+0x30],rax
   140026d58:	mov    rax,QWORD PTR [rsp+0x88]
   140026d60:	mov    QWORD PTR [rsp+0x28],rax
   140026d65:	movzx  eax,WORD PTR [rsp+0x80]
   140026d6d:	mov    WORD PTR [rsp+0x20],ax
   140026d72:	call   QWORD PTR [r10+0x30]
   140026d76:	add    rsp,0x58
   140026d7a:	ret    
   140026d7b:	int3   
   140026d7c:	sub    rsp,0x38
   140026d80:	cmp    QWORD PTR [rcx+0x10],0x0
   140026d85:	jne    0x140026d8e
   140026d87:	mov    eax,0x80010108
   140026d8c:	jmp    0x140026dab
   140026d8e:	mov    rax,QWORD PTR [rsp+0x68]
   140026d93:	mov    rcx,QWORD PTR [rcx+0x10]
   140026d97:	mov    r10,QWORD PTR [rcx]
   140026d9a:	mov    QWORD PTR [rsp+0x28],rax
   140026d9f:	mov    eax,DWORD PTR [rsp+0x60]
   140026da3:	mov    DWORD PTR [rsp+0x20],eax
   140026da7:	call   QWORD PTR [r10+0x28]
   140026dab:	add    rsp,0x38
   140026daf:	ret    
   140026db0:	sub    rsp,0x28
   140026db4:	cmp    QWORD PTR [rcx+0x10],0x0
   140026db9:	jne    0x140026dc2
   140026dbb:	mov    eax,0x80010108
   140026dc0:	jmp    0x140026dcc
   140026dc2:	mov    rcx,QWORD PTR [rcx+0x10]
   140026dc6:	mov    rax,QWORD PTR [rcx]
   140026dc9:	call   QWORD PTR [rax+0x18]
   140026dcc:	add    rsp,0x28
   140026dd0:	ret    
   140026dd1:	int3   
   140026dd2:	int3   
   140026dd3:	int3   
   140026dd4:	sub    rsp,0x28
   140026dd8:	cmp    QWORD PTR [rcx+0x10],0x0
   140026ddd:	jne    0x140026de6
   140026ddf:	mov    eax,0x80010108
   140026de4:	jmp    0x140026df0
   140026de6:	mov    rcx,QWORD PTR [rcx+0x10]
   140026dea:	mov    rax,QWORD PTR [rcx]
   140026ded:	call   QWORD PTR [rax+0x20]
   140026df0:	add    rsp,0x28
   140026df4:	ret    
   140026df5:	int3   
   140026df6:	int3   
   140026df7:	int3   
   140026df8:	mov    QWORD PTR [rsp+0x8],rbx
   140026dfd:	push   rdi
   140026dfe:	sub    rsp,0x20
   140026e02:	mov    ebx,edx
   140026e04:	mov    rdi,rcx
   140026e07:	call   0x140026254
   140026e0c:	test   bl,0x1
   140026e0f:	je     0x140026e19
   140026e11:	mov    rcx,rdi
   140026e14:	call   0x14001ac50
   140026e19:	mov    rax,rdi
   140026e1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e21:	add    rsp,0x20
   140026e25:	pop    rdi
   140026e26:	ret    
   140026e27:	int3   
   140026e28:	mov    QWORD PTR [rsp+0x8],rbx
   140026e2d:	push   rdi
   140026e2e:	sub    rsp,0x20
   140026e32:	cmp    DWORD PTR [r8],0x1
   140026e36:	mov    rbx,r8
   140026e39:	mov    rdi,rcx
   140026e3c:	jne    0x140026e5b
   140026e3e:	mov    rcx,QWORD PTR [r8+0x18]
   140026e42:	call   0x14003f138
   140026e47:	test   rax,rax
   140026e4a:	je     0x140026e5b
   140026e4c:	mov    r9,QWORD PTR [rax]
   140026e4f:	mov    rdx,rbx
   140026e52:	mov    rcx,rax
   140026e55:	call   QWORD PTR [r9+0x18]
   140026e59:	jmp    0x140026e72
   140026e5b:	mov    rcx,QWORD PTR [rbx+0x18]
   140026e5f:	xor    edx,edx
   140026e61:	call   0x14002659c
   140026e66:	test   eax,eax
   140026e68:	jne    0x140026e72
   140026e6a:	mov    rcx,rdi
   140026e6d:	call   0x1400255d4
   140026e72:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e77:	add    rsp,0x20
   140026e7b:	pop    rdi
   140026e7c:	ret    
   140026e7d:	int3   
   140026e7e:	int3   
   140026e7f:	int3   
   140026e80:	rex push rbx
   140026e82:	sub    rsp,0x20
   140026e86:	mov    rbx,rcx
   140026e89:	mov    rcx,QWORD PTR [r8+0x8]
   140026e8d:	lea    rdx,[rsp+0x40]
   140026e92:	call   0x14002659c
   140026e97:	test   eax,eax
   140026e99:	je     0x140026ea1
   140026e9b:	mov    eax,DWORD PTR [rsp+0x40]
   140026e9f:	jmp    0x140026ea9
   140026ea1:	mov    rcx,rbx
   140026ea4:	call   0x1400255d4
   140026ea9:	add    rsp,0x20
   140026ead:	pop    rbx
   140026eae:	ret    
   140026eaf:	int3   
   140026eb0:	rex push rbx
   140026eb2:	sub    rsp,0x20
   140026eb6:	mov    rbx,rcx
   140026eb9:	mov    rcx,QWORD PTR [r8+0x10]
   140026ebd:	xor    edx,edx
   140026ebf:	call   0x14002659c
   140026ec4:	test   eax,eax
   140026ec6:	jne    0x140026ed0
   140026ec8:	mov    rcx,rbx
   140026ecb:	call   0x1400255d4
   140026ed0:	add    rsp,0x20
   140026ed4:	pop    rbx
   140026ed5:	ret    
   140026ed6:	int3   
   140026ed7:	int3   
   140026ed8:	mov    rax,rsp
   140026edb:	mov    QWORD PTR [rax+0x8],rbx
   140026edf:	mov    QWORD PTR [rax+0x10],rbp
   140026ee3:	mov    QWORD PTR [rax+0x18],rsi
   140026ee7:	mov    QWORD PTR [rax+0x20],rdi
   140026eeb:	push   r12
   140026eed:	sub    rsp,0x20
   140026ef1:	mov    r12,rcx
   140026ef4:	mov    ecx,0xc
   140026ef9:	mov    rdi,r9
   140026efc:	mov    esi,r8d
   140026eff:	mov    rbp,rdx
   140026f02:	call   0x14002d810
   140026f07:	lea    rdx,[rip+0xfffffffffffff056]        # 0x140025f64
   140026f0e:	lea    rcx,[rip+0x6501b]        # 0x14008bf30
   140026f15:	call   0x14002cc70
   140026f1a:	test   rax,rax
   140026f1d:	mov    rbx,rax
   140026f20:	jne    0x140026f28
   140026f22:	call   0x1400208f8
   140026f27:	int3   
   140026f28:	cmp    QWORD PTR [rax+0x10],0x0
   140026f2d:	jne    0x140026f72
   140026f2f:	lea    rcx,[rip+0x42f42]        # 0x140069e78
   140026f36:	call   0x1400235bc
   140026f3b:	test   rax,rax
   140026f3e:	mov    QWORD PTR [rbx+0x8],rax
   140026f42:	jne    0x140026f48
   140026f44:	xor    eax,eax
   140026f46:	jmp    0x140026f8b
   140026f48:	lea    rdx,[rip+0x42f19]        # 0x140069e68
   140026f4f:	mov    rcx,rax
   140026f52:	call   QWORD PTR [rip+0x3d690]        # 0x1400645e8
   140026f58:	test   rax,rax
   140026f5b:	mov    QWORD PTR [rbx+0x10],rax
   140026f5f:	jne    0x140026f72
   140026f61:	mov    rcx,QWORD PTR [rbx+0x8]
   140026f65:	call   QWORD PTR [rip+0x3d685]        # 0x1400645f0
   140026f6b:	and    QWORD PTR [rbx+0x8],0x0
   140026f70:	jmp    0x140026f44
   140026f72:	mov    ecx,0xc
   140026f77:	call   0x14002d8a4
   140026f7c:	mov    r9,rdi
   140026f7f:	mov    r8d,esi
   140026f82:	mov    rdx,rbp
   140026f85:	mov    rcx,r12
   140026f88:	call   QWORD PTR [rbx+0x10]
   140026f8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140026f90:	mov    rbp,QWORD PTR [rsp+0x38]
   140026f95:	mov    rsi,QWORD PTR [rsp+0x40]
   140026f9a:	mov    rdi,QWORD PTR [rsp+0x48]
   140026f9f:	add    rsp,0x20
   140026fa3:	pop    r12
   140026fa5:	ret    
   140026fa6:	int3   
   140026fa7:	int3   
   140026fa8:	mov    QWORD PTR [rsp+0x8],rbx
   140026fad:	mov    QWORD PTR [rsp+0x10],rbp
   140026fb2:	mov    QWORD PTR [rsp+0x18],rsi
   140026fb7:	push   rdi
   140026fb8:	sub    rsp,0x80
   140026fbf:	movzx  ebx,dx
   140026fc2:	shr    rdx,0x10
   140026fc6:	test   r8,r8
   140026fc9:	mov    rbp,r8
   140026fcc:	mov    rdi,rcx
   140026fcf:	movzx  esi,dx
   140026fd2:	jne    0x140027019
   140026fd4:	test   ebx,ebx
   140026fd6:	jne    0x140026fdf
   140026fd8:	xor    eax,eax
   140026fda:	jmp    0x140027074
   140026fdf:	lea    rcx,[rsp+0x30]
   140026fe4:	call   0x140022bc0
   140026fe9:	mov    rax,QWORD PTR [rdi]
   140026fec:	and    QWORD PTR [rsp+0x20],0x0
   140026ff2:	lea    r9,[rsp+0x30]
   140026ff7:	or     r8d,0xffffffff
   140026ffb:	mov    edx,ebx
   140026ffd:	mov    rcx,rdi
   140027000:	mov    DWORD PTR [rsp+0x38],ebx
   140027004:	call   QWORD PTR [rax+0x18]
   140027007:	cmp    DWORD PTR [rsp+0x70],0x0
   14002700c:	jne    0x140027015
   14002700e:	mov    eax,0x1
   140027013:	jmp    0x140027074
   140027015:	xor    esi,esi
   140027017:	jmp    0x14002705d
   140027019:	lea    rdx,[rip+0xffffffffffff5b28]        # 0x14001cb48
   140027020:	lea    rcx,[rip+0x61bd9]        # 0x140088c00
   140027027:	call   0x14002d3a8
   14002702c:	test   rax,rax
   14002702f:	mov    r11,rax
   140027032:	jne    0x14002703a
   140027034:	call   0x1400208f8
   140027039:	int3   
   14002703a:	mov    rax,QWORD PTR [rdi+0x40]
   14002703e:	cmp    QWORD PTR [r11+0x198],rax
   140027045:	je     0x14002700e
   140027047:	xor    edx,edx
   140027049:	mov    rcx,rbp
   14002704c:	call   0x14002659c
   140027051:	test   eax,eax
   140027053:	jne    0x14002700e
   140027055:	test   ebx,ebx
   140027057:	je     0x140026fd8
   14002705d:	mov    rax,QWORD PTR [rdi]
   140027060:	and    QWORD PTR [rsp+0x20],0x0
   140027066:	xor    r9d,r9d
   140027069:	mov    r8d,esi
   14002706c:	mov    edx,ebx
   14002706e:	mov    rcx,rdi
   140027071:	call   QWORD PTR [rax+0x18]
   140027074:	lea    r11,[rsp+0x80]
   14002707c:	mov    rbx,QWORD PTR [r11+0x10]
   140027080:	mov    rbp,QWORD PTR [r11+0x18]
   140027084:	mov    rsi,QWORD PTR [r11+0x20]
   140027088:	mov    rsp,r11
   14002708b:	pop    rdi
   14002708c:	ret    
   14002708d:	int3   
   14002708e:	int3   
   14002708f:	int3   
   140027090:	mov    QWORD PTR [rsp+0x8],rbx
   140027095:	mov    QWORD PTR [rsp+0x10],rbp
   14002709a:	mov    QWORD PTR [rsp+0x18],rsi
   14002709f:	push   rdi
   1400270a0:	push   r12
   1400270a2:	push   r13
   1400270a4:	sub    rsp,0x40
   1400270a8:	mov    rsi,QWORD PTR [r8]
   1400270ab:	mov    rbx,rcx
   1400270ae:	mov    rdi,r9
   1400270b1:	mov    rcx,rsi
   1400270b4:	mov    rbp,r8
   1400270b7:	call   QWORD PTR [rip+0x3d863]        # 0x140064920
   1400270bd:	mov    r13d,DWORD PTR [rbp+0x10]
   1400270c1:	lea    rdx,[rip+0xffffffffffff5a80]        # 0x14001cb48
   1400270c8:	lea    rcx,[rip+0x61b31]        # 0x140088c00
   1400270cf:	movzx  r12d,ax
   1400270d3:	call   0x14002d3a8
   1400270d8:	test   rax,rax
   1400270db:	mov    r11,rax
   1400270de:	jne    0x1400270e6
   1400270e0:	call   0x1400208f8
   1400270e5:	int3   
   1400270e6:	mov    rax,QWORD PTR [rbx+0x40]
   1400270ea:	cmp    QWORD PTR [r11+0x198],rax
   1400270f1:	jne    0x1400270fa
   1400270f3:	mov    eax,0x1
   1400270f8:	jmp    0x140027135
   1400270fa:	mov    rdx,rdi
   1400270fd:	mov    rcx,rsi
   140027100:	call   0x14002659c
   140027105:	test   eax,eax
   140027107:	jne    0x1400270f3
   140027109:	mov    rax,QWORD PTR [rbx]
   14002710c:	and    QWORD PTR [rsp+0x20],0x0
   140027112:	movzx  r8d,r13w
   140027116:	lea    r9,[rsp+0x30]
   14002711b:	or     r8d,0x4e0000
   140027122:	mov    edx,r12d
   140027125:	mov    rcx,rbx
   140027128:	mov    QWORD PTR [rsp+0x30],rdi
   14002712d:	mov    QWORD PTR [rsp+0x38],rbp
   140027132:	call   QWORD PTR [rax+0x18]
   140027135:	mov    rbx,QWORD PTR [rsp+0x60]
   14002713a:	mov    rbp,QWORD PTR [rsp+0x68]
   14002713f:	mov    rsi,QWORD PTR [rsp+0x70]
   140027144:	add    rsp,0x40
   140027148:	pop    r13
   14002714a:	pop    r12
   14002714c:	pop    rdi
   14002714d:	ret    
   14002714e:	int3   
   14002714f:	int3   
   140027150:	mov    QWORD PTR [rsp+0x8],rbx
   140027155:	push   rdi
   140027156:	sub    rsp,0x20
   14002715a:	mov    rdi,rcx
   14002715d:	call   0x140025734
   140027162:	xor    ebx,ebx
   140027164:	cmp    rax,rbx
   140027167:	je     0x140027192
   140027169:	mov    rcx,QWORD PTR [rax+0x70]
   14002716d:	cmp    rcx,rbx
   140027170:	jne    0x14002717f
   140027172:	mov    rcx,QWORD PTR [rax+0x40]
   140027176:	call   QWORD PTR [rip+0x3d964]        # 0x140064ae0
   14002717c:	mov    rcx,rax
   14002717f:	call   0x1400256f0
   140027184:	cmp    rax,rbx
   140027187:	je     0x14002718d
   140027189:	mov    rbx,QWORD PTR [rax+0x40]
   14002718d:	mov    rax,rbx
   140027190:	jmp    0x1400271bc
   140027192:	mov    edx,0xfffffff0
   140027197:	mov    rcx,rdi
   14002719a:	call   QWORD PTR [rip+0x3d860]        # 0x140064a00
   1400271a0:	mov    rcx,rdi
   1400271a3:	bt     eax,0x1e
   1400271a7:	jae    0x1400271b1
   1400271a9:	call   QWORD PTR [rip+0x3d931]        # 0x140064ae0
   1400271af:	jmp    0x1400271bc
   1400271b1:	mov    edx,0x4
   1400271b6:	call   QWORD PTR [rip+0x3d7c4]        # 0x140064980
   1400271bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400271c1:	add    rsp,0x20
   1400271c5:	pop    rdi
   1400271c6:	ret    
   1400271c7:	int3   
   1400271c8:	rex push rbx
   1400271ca:	sub    rsp,0x20
   1400271ce:	test   rcx,rcx
   1400271d1:	je     0x1400271fb
   1400271d3:	mov    rbx,QWORD PTR [rcx+0x40]
   1400271d7:	test   rbx,rbx
   1400271da:	je     0x1400271fb
   1400271dc:	mov    rcx,rbx
   1400271df:	jmp    0x1400271e7
   1400271e1:	mov    rbx,rax
   1400271e4:	mov    rcx,rax
   1400271e7:	call   0x140027150
   1400271ec:	test   rax,rax
   1400271ef:	jne    0x1400271e1
   1400271f1:	mov    rcx,rbx
   1400271f4:	call   0x1400256f0
   1400271f9:	jmp    0x1400271fd
   1400271fb:	xor    eax,eax
   1400271fd:	add    rsp,0x20
   140027201:	pop    rbx
   140027202:	ret    
   140027203:	int3   
   140027204:	rex push rbx
   140027206:	sub    rsp,0x30
   14002720a:	mov    rbx,rcx
   14002720d:	call   0x140021a70
   140027212:	mov    rcx,QWORD PTR [rax+0x8]
   140027216:	test   rcx,rcx
   140027219:	je     0x14002722d
   14002721b:	cmp    QWORD PTR [rcx+0x40],rbx
   14002721f:	jne    0x14002722d
   140027221:	lea    rcx,[rip+0x652e8]        # 0x14008c510
   140027228:	call   0x14002d8d0
   14002722d:	mov    rcx,rbx
   140027230:	call   0x14002998c
   140027235:	bt     eax,0x1e
   140027239:	jb     0x14002725a
   14002723b:	mov    rcx,QWORD PTR [rbx+0x40]
   14002723f:	mov    eax,0x1
   140027244:	xor    r9d,r9d
   140027247:	mov    DWORD PTR [rsp+0x28],eax
   14002724b:	lea    edx,[rax+0x14]
   14002724e:	xor    r8d,r8d
   140027251:	mov    DWORD PTR [rsp+0x20],eax
   140027255:	call   0x1400264d4
   14002725a:	mov    rcx,rbx
   14002725d:	add    rsp,0x30
   140027261:	pop    rbx
   140027262:	jmp    0x1400255d4
   140027267:	int3   
   140027268:	mov    QWORD PTR [rsp+0x8],rbx
   14002726d:	push   rdi
   14002726e:	sub    rsp,0x30
   140027272:	mov    rdi,rdx
   140027275:	mov    rbx,rcx
   140027278:	call   0x140021a70
   14002727d:	mov    rcx,QWORD PTR [rax+0x8]
   140027281:	test   rcx,rcx
   140027284:	je     0x140027294
   140027286:	cmp    QWORD PTR [rcx+0x40],rbx
   14002728a:	jne    0x140027294
   14002728c:	mov    rdx,rdi
   14002728f:	call   0x14001b124
   140027294:	mov    rcx,rbx
   140027297:	call   0x14002998c
   14002729c:	bt     eax,0x1e
   1400272a0:	jb     0x1400272c8
   1400272a2:	call   0x14002556c
   1400272a7:	mov    ecx,0x1
   1400272ac:	mov    r9,QWORD PTR [rax+0x18]
   1400272b0:	mov    r8,QWORD PTR [rax+0x10]
   1400272b4:	mov    edx,DWORD PTR [rax+0x8]
   1400272b7:	mov    DWORD PTR [rsp+0x28],ecx
   1400272bb:	mov    DWORD PTR [rsp+0x20],ecx
   1400272bf:	mov    rcx,QWORD PTR [rbx+0x40]
   1400272c3:	call   0x1400264d4
   1400272c8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400272cd:	add    rsp,0x30
   1400272d1:	pop    rdi
   1400272d2:	ret    
   1400272d3:	int3   
   1400272d4:	rex push rbx
   1400272d6:	sub    rsp,0x30
   1400272da:	mov    rbx,rcx
   1400272dd:	call   0x14001c840
   1400272e2:	mov    rcx,rax
   1400272e5:	xor    eax,eax
   1400272e7:	cmp    rcx,rax
   1400272ea:	je     0x1400272f5
   1400272ec:	mov    rdx,QWORD PTR [rcx]
   1400272ef:	call   QWORD PTR [rdx+0xe8]
   1400272f5:	cmp    rax,rbx
   1400272f8:	jne    0x140027306
   1400272fa:	lea    rcx,[rip+0x6520f]        # 0x14008c510
   140027301:	call   0x14002d944
   140027306:	mov    rcx,rbx
   140027309:	call   0x14002998c
   14002730e:	bt     eax,0x1e
   140027312:	jb     0x14002733a
   140027314:	call   0x14002556c
   140027319:	mov    ecx,0x1
   14002731e:	mov    r9,QWORD PTR [rax+0x18]
   140027322:	mov    r8,QWORD PTR [rax+0x10]
   140027326:	mov    edx,DWORD PTR [rax+0x8]
   140027329:	mov    DWORD PTR [rsp+0x28],ecx
   14002732d:	mov    DWORD PTR [rsp+0x20],ecx
   140027331:	mov    rcx,QWORD PTR [rbx+0x40]
   140027335:	call   0x1400264d4
   14002733a:	mov    rcx,rbx
   14002733d:	add    rsp,0x30
   140027341:	pop    rbx
   140027342:	jmp    0x1400255d4
   140027347:	int3   
   140027348:	mov    rax,rsp
   14002734b:	mov    QWORD PTR [rax+0x8],rbx
   14002734f:	mov    QWORD PTR [rax+0x10],rbp
   140027353:	mov    QWORD PTR [rax+0x18],rsi
   140027357:	mov    QWORD PTR [rax+0x20],rdi
   14002735b:	push   r12
   14002735d:	sub    rsp,0x20
   140027361:	test   rcx,rcx
   140027364:	mov    rsi,r9
   140027367:	mov    rdi,r8
   14002736a:	mov    rbx,rdx
   14002736d:	mov    r12,rcx
   140027370:	je     0x140027442
   140027376:	test   rdx,rdx
   140027379:	je     0x140027442
   14002737f:	test   r9,r9
   140027382:	jne    0x14002738e
   140027384:	mov    eax,0x80004003
   140027389:	jmp    0x140027447
   14002738e:	and    QWORD PTR [r9],0x0
   140027392:	cmp    DWORD PTR [r8],0x0
   140027396:	jne    0x1400273cb
   140027398:	cmp    DWORD PTR [r8+0x4],0x0
   14002739d:	jne    0x1400273cb
   14002739f:	cmp    DWORD PTR [r8+0x8],0xc0
   1400273a7:	jne    0x1400273cb
   1400273a9:	cmp    DWORD PTR [r8+0xc],0x46000000
   1400273b1:	jne    0x1400273cb
   1400273b3:	mov    rax,QWORD PTR [rdx+0x8]
   1400273b7:	lea    rbx,[rcx+rax*1]
   1400273bb:	mov    rax,QWORD PTR [rbx]
   1400273be:	mov    rcx,rbx
   1400273c1:	call   QWORD PTR [rax+0x8]
   1400273c4:	mov    QWORD PTR [rsi],rbx
   1400273c7:	xor    eax,eax
   1400273c9:	jmp    0x140027447
   1400273cb:	mov    r10,QWORD PTR [rdx+0x10]
   1400273cf:	jmp    0x140027429
   1400273d1:	mov    rcx,QWORD PTR [rbx]
   1400273d4:	xor    ebp,ebp
   1400273d6:	test   rcx,rcx
   1400273d9:	sete   bpl
   1400273dd:	test   ebp,ebp
   1400273df:	jne    0x1400273ff
   1400273e1:	mov    eax,DWORD PTR [rdi]
   1400273e3:	cmp    DWORD PTR [rcx],eax
   1400273e5:	jne    0x140027421
   1400273e7:	mov    eax,DWORD PTR [rdi+0x4]
   1400273ea:	cmp    DWORD PTR [rcx+0x4],eax
   1400273ed:	jne    0x140027421
   1400273ef:	mov    eax,DWORD PTR [rdi+0x8]
   1400273f2:	cmp    DWORD PTR [rcx+0x8],eax
   1400273f5:	jne    0x140027421
   1400273f7:	mov    eax,DWORD PTR [rdi+0xc]
   1400273fa:	cmp    DWORD PTR [rcx+0xc],eax
   1400273fd:	jne    0x140027421
   1400273ff:	cmp    r10,0x1
   140027403:	je     0x140027435
   140027405:	mov    r9,QWORD PTR [rbx+0x8]
   140027409:	mov    r8,rsi
   14002740c:	mov    rdx,rdi
   14002740f:	mov    rcx,r12
   140027412:	call   r10
   140027415:	test   eax,eax
   140027417:	je     0x140027447
   140027419:	test   ebp,ebp
   14002741b:	jne    0x140027421
   14002741d:	test   eax,eax
   14002741f:	js     0x140027447
   140027421:	mov    r10,QWORD PTR [rbx+0x28]
   140027425:	add    rbx,0x18
   140027429:	test   r10,r10
   14002742c:	jne    0x1400273d1
   14002742e:	mov    eax,0x80004002
   140027433:	jmp    0x140027447
   140027435:	mov    rax,QWORD PTR [rbx+0x8]
   140027439:	lea    rbx,[r12+rax*1]
   14002743d:	jmp    0x1400273bb
   140027442:	mov    eax,0x80070057
   140027447:	mov    rbx,QWORD PTR [rsp+0x30]
   14002744c:	mov    rbp,QWORD PTR [rsp+0x38]
   140027451:	mov    rsi,QWORD PTR [rsp+0x40]
   140027456:	mov    rdi,QWORD PTR [rsp+0x48]
   14002745b:	add    rsp,0x20
   14002745f:	pop    r12
   140027461:	ret    
   140027462:	int3   
   140027463:	int3   
   140027464:	add    DWORD PTR [rcx+0x28],0x1
   140027468:	mov    eax,DWORD PTR [rcx+0x28]
   14002746b:	ret    
   14002746c:	rex push rbx
   14002746e:	sub    rsp,0x20
   140027472:	add    DWORD PTR [rcx+0x28],0xffffffff
   140027476:	mov    ebx,DWORD PTR [rcx+0x28]
   140027479:	jne    0x14002748f
   14002747b:	test   rcx,rcx
   14002747e:	je     0x14002748f
   140027480:	mov    r8,QWORD PTR [rcx]
   140027483:	mov    edx,0x1
   140027488:	call   QWORD PTR [r8+0xe0]
   14002748f:	mov    eax,ebx
   140027491:	add    rsp,0x20
   140027495:	pop    rbx
   140027496:	ret    
   140027497:	int3   
   140027498:	mov    r9,r8
   14002749b:	mov    r8,rdx
   14002749e:	lea    rdx,[rip+0x42b2b]        # 0x140069fd0
   1400274a5:	jmp    0x140027348
   1400274aa:	int3   
   1400274ab:	int3   
   1400274ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400274b1:	push   rdi
   1400274b2:	sub    rsp,0x20
   1400274b6:	lea    rax,[rip+0x42a2b]        # 0x140069ee8
   1400274bd:	mov    rbx,rcx
   1400274c0:	mov    DWORD PTR [rcx+0x28],0xc0000001
   1400274c7:	mov    QWORD PTR [rcx],rax
   1400274ca:	lea    rax,[rip+0x429ef]        # 0x140069ec0
   1400274d1:	mov    edi,edx
   1400274d3:	mov    QWORD PTR [rcx+0x8],rax
   1400274d7:	lea    rax,[rip+0x429b2]        # 0x140069e90
   1400274de:	mov    QWORD PTR [rcx+0x20],rax
   1400274e2:	mov    rcx,QWORD PTR [rcx+0x18]
   1400274e6:	test   rcx,rcx
   1400274e9:	je     0x1400274f3
   1400274eb:	mov    rax,QWORD PTR [rcx]
   1400274ee:	xor    edx,edx
   1400274f0:	call   QWORD PTR [rax+0x18]
   1400274f3:	call   0x14002d628
   1400274f8:	test   dil,0x1
   1400274fc:	je     0x140027506
   1400274fe:	mov    rcx,rbx
   140027501:	call   0x14001ac50
   140027506:	mov    rax,rbx
   140027509:	mov    rbx,QWORD PTR [rsp+0x30]
   14002750e:	add    rsp,0x20
   140027512:	pop    rdi
   140027513:	ret    
   140027514:	sub    rcx,0x8
   140027518:	jmp    0x14002746c
   14002751d:	int3   
   14002751e:	int3   
   14002751f:	int3   
   140027520:	sub    rcx,0x8
   140027524:	jmp    0x140027464
   140027529:	int3   
   14002752a:	int3   
   14002752b:	int3   
   14002752c:	sub    rcx,0x20
   140027530:	jmp    0x140027498
   140027535:	int3   
   140027536:	int3   
   140027537:	int3   
   140027538:	sub    rcx,0x8
   14002753c:	jmp    0x140027498
   140027541:	int3   
   140027542:	int3   
   140027543:	int3   
   140027544:	sub    rcx,0x20
   140027548:	jmp    0x14002746c
   14002754d:	int3   
   14002754e:	int3   
   14002754f:	int3   
   140027550:	sub    rcx,0x20
   140027554:	jmp    0x140027464
   140027559:	int3   
   14002755a:	int3   
   14002755b:	int3   
   14002755c:	mov    QWORD PTR [rsp+0x8],rbx
   140027561:	mov    QWORD PTR [rsp+0x10],rbp
   140027566:	mov    QWORD PTR [rsp+0x18],rsi
   14002756b:	push   rdi
   14002756c:	sub    rsp,0x30
   140027570:	mov    rbx,r8
   140027573:	mov    rbp,rdx
   140027576:	mov    rsi,rcx
   140027579:	call   0x14002998c
   14002757e:	bt     eax,0x1e
   140027582:	jb     0x1400275e9
   140027584:	mov    rcx,rsi
   140027587:	call   0x1400271c8
   14002758c:	test   rax,rax
   14002758f:	mov    rdi,rax
   140027592:	je     0x1400275e9
   140027594:	test   rbx,rbx
   140027597:	je     0x1400275b4
   140027599:	mov    rcx,QWORD PTR [rbx+0x40]
   14002759d:	call   QWORD PTR [rip+0x3d435]        # 0x1400649d8
   1400275a3:	test   eax,eax
   1400275a5:	je     0x1400275b4
   1400275a7:	mov    rcx,rbx
   1400275aa:	call   0x1400271c8
   1400275af:	cmp    rdi,rax
   1400275b2:	je     0x1400275e9
   1400275b4:	test   rbx,rbx
   1400275b7:	mov    rax,QWORD PTR [rsi+0x40]
   1400275bb:	mov    QWORD PTR [rsp+0x20],rax
   1400275c0:	jne    0x1400275c9
   1400275c2:	and    QWORD PTR [rsp+0x28],rbx
   1400275c7:	jmp    0x1400275d2
   1400275c9:	mov    rax,QWORD PTR [rbx+0x40]
   1400275cd:	mov    QWORD PTR [rsp+0x28],rax
   1400275d2:	mov    rcx,QWORD PTR [rdi+0x40]
   1400275d6:	lea    r9,[rsp+0x20]
   1400275db:	mov    r8,rbp
   1400275de:	mov    edx,0x36e
   1400275e3:	call   QWORD PTR [rip+0x3d587]        # 0x140064b70
   1400275e9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400275ee:	mov    rbp,QWORD PTR [rsp+0x48]
   1400275f3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400275f8:	add    rsp,0x30
   1400275fc:	pop    rdi
   1400275fd:	ret    
   1400275fe:	int3   
   1400275ff:	int3   
   140027600:	rex push rbx
   140027602:	sub    rsp,0x20
   140027606:	cmp    edx,0xfffffffe
   140027609:	jne    0x14002767a
   14002760b:	cmp    r8d,0x201
   140027612:	je     0x140027626
   140027614:	cmp    r8d,0x207
   14002761b:	je     0x140027626
   14002761d:	cmp    r8d,0x204
   140027624:	jne    0x14002767a
   140027626:	call   0x1400271c8
   14002762b:	test   rax,rax
   14002762e:	je     0x14002767a
   140027630:	mov    rcx,QWORD PTR [rax+0x40]
   140027634:	call   QWORD PTR [rip+0x3d3ce]        # 0x140064a08
   14002763a:	mov    rcx,rax
   14002763d:	call   0x1400256f0
   140027642:	test   rax,rax
   140027645:	mov    rbx,rax
   140027648:	je     0x14002767a
   14002764a:	call   QWORD PTR [rip+0x3d248]        # 0x140064898
   140027650:	mov    rcx,rax
   140027653:	call   0x1400256f0
   140027658:	cmp    rbx,rax
   14002765b:	je     0x14002767a
   14002765d:	mov    rcx,rbx
   140027660:	call   0x140029b3c
   140027665:	test   eax,eax
   140027667:	je     0x14002767a
   140027669:	mov    rcx,QWORD PTR [rbx+0x40]
   14002766d:	call   QWORD PTR [rip+0x3d4e5]        # 0x140064b58
   140027673:	mov    eax,0x1
   140027678:	jmp    0x14002767c
   14002767a:	xor    eax,eax
   14002767c:	add    rsp,0x20
   140027680:	pop    rbx
   140027681:	ret    
   140027682:	int3   
   140027683:	int3   
   140027684:	mov    rax,rsp
   140027687:	mov    QWORD PTR [rax+0x20],r9
   14002768b:	mov    QWORD PTR [rax+0x18],r8
   14002768f:	mov    DWORD PTR [rax+0x10],edx
   140027692:	mov    QWORD PTR [rax+0x8],rcx
   140027696:	push   rbx
   140027697:	push   rsi
   140027698:	push   rdi
   140027699:	push   r12
   14002769b:	push   r13
   14002769d:	push   r14
   14002769f:	push   r15
   1400276a1:	sub    rsp,0x90
   1400276a8:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400276b1:	mov    r13,r9
   1400276b4:	mov    r15,r8
   1400276b7:	mov    r14d,edx
   1400276ba:	mov    rsi,rcx
   1400276bd:	lea    rdx,[rip+0x41ac4]        # 0x140069188
   1400276c4:	call   QWORD PTR [rip+0x3d1ae]        # 0x140064878
   1400276ca:	mov    r12,rax
   1400276cd:	mov    QWORD PTR [rsp+0x30],rax
   1400276d2:	xor    ebx,ebx
   1400276d4:	lea    edi,[rbx+0x1]
   1400276d7:	mov    edx,r14d
   1400276da:	sub    edx,0x6
   1400276dd:	je     0x1400277b0
   1400276e3:	sub    edx,0x1a
   1400276e6:	je     0x140027787
   1400276ec:	sub    edx,0x62
   1400276ef:	je     0x14002774e
   1400276f1:	cmp    edx,0x8e
   1400276f7:	jne    0x1400277da
   1400276fd:	mov    rcx,rsi
   140027700:	call   0x1400256f0
   140027705:	mov    rdi,rax
   140027708:	lea    r8,[rsp+0x30]
   14002770d:	lea    rdx,[rsp+0x48]
   140027712:	mov    rcx,rax
   140027715:	call   0x140023738
   14002771a:	mov    QWORD PTR [rsp+0x20],r13
   14002771f:	mov    r9,r15
   140027722:	mov    r8d,0x110
   140027728:	mov    rdx,rsi
   14002772b:	mov    rcx,r12
   14002772e:	call   QWORD PTR [rip+0x3d1fc]        # 0x140064930
   140027734:	mov    rbx,rax
   140027737:	mov    r8d,DWORD PTR [rsp+0x30]
   14002773c:	lea    rdx,[rsp+0x48]
   140027741:	mov    rcx,rdi
   140027744:	call   0x140025f8c
   140027749:	jmp    0x1400277f4
   14002774e:	mov    r8,rax
   140027751:	mov    edx,0xfffffffc
   140027756:	mov    rcx,rsi
   140027759:	call   QWORD PTR [rip+0x3d151]        # 0x1400648b0
   14002775f:	lea    rdx,[rip+0x41a22]        # 0x140069188
   140027766:	mov    rcx,rsi
   140027769:	call   QWORD PTR [rip+0x3d111]        # 0x140064880
   14002776f:	lea    rcx,[rip+0x41a12]        # 0x140069188
   140027776:	call   QWORD PTR [rip+0x3ccdc]        # 0x140064458
   14002777c:	movzx  ecx,ax
   14002777f:	call   QWORD PTR [rip+0x3cd2b]        # 0x1400644b0
   140027785:	jmp    0x1400277da
   140027787:	mov    rcx,rsi
   14002778a:	call   0x1400256f0
   14002778f:	mov    rcx,r13
   140027792:	shr    rcx,0x10
   140027796:	movzx  r8d,cx
   14002779a:	movsx  edx,r13w
   14002779e:	mov    rcx,rax
   1400277a1:	call   0x140027600
   1400277a6:	mov    edi,ebx
   1400277a8:	cmp    eax,ebx
   1400277aa:	sete   dil
   1400277ae:	jmp    0x1400277d6
   1400277b0:	mov    rcx,r13
   1400277b3:	call   0x1400256f0
   1400277b8:	mov    r12,rax
   1400277bb:	mov    rcx,rsi
   1400277be:	call   0x1400256f0
   1400277c3:	mov    r8,r12
   1400277c6:	mov    rdx,r15
   1400277c9:	mov    rcx,rax
   1400277cc:	call   0x14002755c
   1400277d1:	mov    r12,QWORD PTR [rsp+0x30]
   1400277d6:	cmp    edi,ebx
   1400277d8:	je     0x1400277f4
   1400277da:	mov    QWORD PTR [rsp+0x20],r13
   1400277df:	mov    r9,r15
   1400277e2:	mov    r8d,r14d
   1400277e5:	mov    rdx,rsi
   1400277e8:	mov    rcx,r12
   1400277eb:	call   QWORD PTR [rip+0x3d13f]        # 0x140064930
   1400277f1:	mov    rbx,rax
   1400277f4:	jmp    0x1400277fb
   1400277f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400277fb:	mov    rax,rbx
   1400277fe:	add    rsp,0x90
   140027805:	pop    r15
   140027807:	pop    r14
   140027809:	pop    r13
   14002780b:	pop    r12
   14002780d:	pop    rdi
   14002780e:	pop    rsi
   14002780f:	pop    rbx
   140027810:	ret    
   140027811:	int3   
   140027812:	int3   
   140027813:	int3   
   140027814:	mov    QWORD PTR [rsp+0x10],rdx
   140027819:	push   rbx
   14002781a:	push   rbp
   14002781b:	push   rdi
   14002781c:	sub    rsp,0x30
   140027820:	mov    rbp,rdx
   140027823:	mov    rax,QWORD PTR [rbp+0xd0]
   14002782a:	mov    QWORD PTR [rbp+0x58],rax
   14002782e:	mov    eax,DWORD PTR [rbp+0xd8]
   140027834:	mov    DWORD PTR [rbp+0x60],eax
   140027837:	mov    rax,QWORD PTR [rbp+0xe0]
   14002783e:	mov    QWORD PTR [rbp+0x68],rax
   140027842:	mov    rax,QWORD PTR [rbp+0xe8]
   140027849:	mov    QWORD PTR [rbp+0x70],rax
   14002784d:	lea    rdx,[rbp+0x58]
   140027851:	mov    rdi,QWORD PTR [rbp+0x40]
   140027855:	mov    rcx,rdi
   140027858:	call   0x14001c894
   14002785d:	mov    QWORD PTR [rbp+0x30],rax
   140027861:	xor    ebx,ebx
   140027863:	cmp    rdi,rbx
   140027866:	je     0x140027871
   140027868:	mov    rcx,rdi
   14002786b:	call   0x1400207b8
   140027870:	nop
   140027871:	lea    rax,[rip+0xffffffffffffff7e]        # 0x1400277f6
   140027878:	jmp    0x14002787a
   14002787a:	add    rsp,0x30
   14002787e:	pop    rdi
   14002787f:	pop    rbp
   140027880:	pop    rbx
   140027881:	ret    
   140027882:	int3   
   140027883:	int3   
   140027884:	mov    rax,rsp
   140027887:	push   rbp
   140027888:	push   rsi
   140027889:	push   rdi
   14002788a:	push   r12
   14002788c:	push   r13
   14002788e:	sub    rsp,0x2a0
   140027895:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002789e:	mov    QWORD PTR [rax+0x20],rbx
   1400278a2:	mov    rax,QWORD PTR [rip+0x5f4c7]        # 0x140086d70
   1400278a9:	xor    rax,rsp
   1400278ac:	mov    QWORD PTR [rsp+0x290],rax
   1400278b4:	mov    r12,r8
   1400278b7:	mov    rbx,rdx
   1400278ba:	mov    esi,ecx
   1400278bc:	lea    rdx,[rip+0xffffffffffff5285]        # 0x14001cb48
   1400278c3:	lea    rcx,[rip+0x61336]        # 0x140088c00
   1400278ca:	call   0x14002d3a8
   1400278cf:	mov    rdi,rax
   1400278d2:	xor    ecx,ecx
   1400278d4:	test   rax,rax
   1400278d7:	setne  cl
   1400278da:	test   ecx,ecx
   1400278dc:	jne    0x1400278e4
   1400278de:	call   0x1400208f8
   1400278e3:	int3   
   1400278e4:	cmp    esi,0x3
   1400278e7:	je     0x140027900
   1400278e9:	mov    r9,r12
   1400278ec:	mov    r8,rbx
   1400278ef:	mov    edx,esi
   1400278f1:	mov    rcx,QWORD PTR [rax+0x48]
   1400278f5:	call   QWORD PTR [rip+0x3d125]        # 0x140064a20
   1400278fb:	jmp    0x140027ae4
   140027900:	mov    rbp,QWORD PTR [r12]
   140027904:	mov    rsi,QWORD PTR [rax+0x28]
   140027908:	call   0x140021a70
   14002790d:	movzx  r13d,BYTE PTR [rax+0x28]
   140027912:	test   rsi,rsi
   140027915:	jne    0x140027a46
   14002791b:	bt     DWORD PTR [rbp+0x30],0x1e
   140027920:	jb     0x140027ab5
   140027926:	test   r13d,r13d
   140027929:	jne    0x140027ab5
   14002792f:	cmp    WORD PTR [rip+0x645f1],r13w        # 0x14008bf28
   140027937:	jne    0x1400279b1
   140027939:	lea    esi,[r13+0x50]
   14002793d:	mov    r8,rsi
   140027940:	xor    edx,edx
   140027942:	lea    rcx,[rsp+0x40]
   140027947:	call   0x140047720
   14002794c:	mov    DWORD PTR [rsp+0x40],esi
   140027950:	lea    r8,[rsp+0x40]
   140027955:	lea    rdx,[rip+0x4275c]        # 0x14006a0b8
   14002795c:	xor    ecx,ecx
   14002795e:	call   0x140023348
   140027963:	mov    WORD PTR [rip+0x645be],ax        # 0x14008bf28
   14002796a:	test   ax,ax
   14002796d:	jne    0x1400279b1
   14002796f:	mov    r8d,0x100
   140027975:	lea    rdx,[rsp+0x90]
   14002797d:	mov    rcx,rbx
   140027980:	call   QWORD PTR [rip+0x3ceda]        # 0x140064860
   140027986:	test   eax,eax
   140027988:	je     0x1400279cc
   14002798a:	and    WORD PTR [rsp+0x28e],r13w
   140027993:	lea    rdx,[rip+0x4271e]        # 0x14006a0b8
   14002799a:	lea    rcx,[rsp+0x90]
   1400279a2:	call   0x140048b70
   1400279a7:	test   eax,eax
   1400279a9:	je     0x140027ab5
   1400279af:	jmp    0x1400279cc
   1400279b1:	mov    edx,0xffffffe0
   1400279b6:	mov    rcx,rbx
   1400279b9:	call   QWORD PTR [rip+0x3cea9]        # 0x140064868
   1400279bf:	cmp    ax,WORD PTR [rip+0x64562]        # 0x14008bf28
   1400279c6:	je     0x140027ab5
   1400279cc:	mov    edx,0xfffffffc
   1400279d1:	mov    rcx,rbx
   1400279d4:	call   QWORD PTR [rip+0x3cece]        # 0x1400648a8
   1400279da:	mov    rsi,rax
   1400279dd:	test   rax,rax
   1400279e0:	je     0x140027ab5
   1400279e6:	lea    rbp,[rip+0x4179b]        # 0x140069188
   1400279ed:	mov    rdx,rbp
   1400279f0:	mov    rcx,rbx
   1400279f3:	call   QWORD PTR [rip+0x3ce7f]        # 0x140064878
   1400279f9:	test   rax,rax
   1400279fc:	jne    0x140027ab5
   140027a02:	mov    r8,rsi
   140027a05:	mov    rdx,rbp
   140027a08:	mov    rcx,rbx
   140027a0b:	call   QWORD PTR [rip+0x3ce5f]        # 0x140064870
   140027a11:	mov    rdx,rbp
   140027a14:	mov    rcx,rbx
   140027a17:	call   QWORD PTR [rip+0x3ce5b]        # 0x140064878
   140027a1d:	cmp    rax,rsi
   140027a20:	jne    0x140027ab5
   140027a26:	mov    rcx,rbp
   140027a29:	call   QWORD PTR [rip+0x3ca79]        # 0x1400644a8
   140027a2f:	lea    r8,[rip+0xfffffffffffffc4e]        # 0x140027684
   140027a36:	mov    edx,0xfffffffc
   140027a3b:	mov    rcx,rbx
   140027a3e:	call   QWORD PTR [rip+0x3ce6c]        # 0x1400648b0
   140027a44:	jmp    0x140027ab5
   140027a46:	mov    rdx,QWORD PTR [rsi+0x38]
   140027a4a:	lea    rcx,[rsp+0x20]
   140027a4f:	call   0x140021aec
   140027a54:	nop
   140027a55:	mov    rdx,rbx
   140027a58:	mov    rcx,rsi
   140027a5b:	call   0x140025760
   140027a60:	mov    r11,QWORD PTR [rsi]
   140027a63:	mov    rcx,rsi
   140027a66:	call   QWORD PTR [r11+0xa0]
   140027a6d:	mov    r11,QWORD PTR [rsi]
   140027a70:	mov    rcx,rsi
   140027a73:	call   QWORD PTR [r11+0x1e0]
   140027a7a:	mov    rsi,rax
   140027a7d:	lea    rbp,[rip+0xffffffffffffe74c]        # 0x1400261d0
   140027a84:	mov    r8,rbp
   140027a87:	mov    edx,0xfffffffc
   140027a8c:	mov    rcx,rbx
   140027a8f:	call   QWORD PTR [rip+0x3ce1b]        # 0x1400648b0
   140027a95:	cmp    rax,rbp
   140027a98:	je     0x140027a9d
   140027a9a:	mov    QWORD PTR [rsi],rax
   140027a9d:	and    QWORD PTR [rdi+0x28],0x0
   140027aa2:	cmp    DWORD PTR [rsp+0x28],0x0
   140027aa7:	je     0x140027ab5
   140027aa9:	mov    rdx,QWORD PTR [rsp+0x20]
   140027aae:	xor    ecx,ecx
   140027ab0:	call   0x140020cc4
   140027ab5:	mov    r9,r12
   140027ab8:	mov    r8,rbx
   140027abb:	mov    edx,0x3
   140027ac0:	mov    rcx,QWORD PTR [rdi+0x48]
   140027ac4:	call   QWORD PTR [rip+0x3cf56]        # 0x140064a20
   140027aca:	mov    rbx,rax
   140027acd:	test   r13d,r13d
   140027ad0:	je     0x140027ae1
   140027ad2:	mov    rcx,QWORD PTR [rdi+0x48]
   140027ad6:	call   QWORD PTR [rip+0x3ce84]        # 0x140064960
   140027adc:	and    QWORD PTR [rdi+0x48],0x0
   140027ae1:	mov    rax,rbx
   140027ae4:	mov    rcx,QWORD PTR [rsp+0x290]
   140027aec:	xor    rcx,rsp
   140027aef:	call   0x140046470
   140027af4:	mov    rbx,QWORD PTR [rsp+0x2e8]
   140027afc:	add    rsp,0x2a0
   140027b03:	pop    r13
   140027b05:	pop    r12
   140027b07:	pop    rdi
   140027b08:	pop    rsi
   140027b09:	pop    rbp
   140027b0a:	ret    
   140027b0b:	int3   
   140027b0c:	int3   
   140027b0d:	int3   
   140027b0e:	int3   
   140027b0f:	int3   
   140027b10:	int3   
   140027b11:	int3   
   140027b12:	int3   
   140027b13:	int3   
   140027b14:	rex push rbp
   140027b16:	sub    rsp,0x20
   140027b1a:	mov    rbp,rdx
   140027b1d:	lea    rcx,[rbp+0x20]
   140027b21:	call   0x1400236a8
   140027b26:	add    rsp,0x20
   140027b2a:	pop    rbp
   140027b2b:	ret    
   140027b2c:	mov    QWORD PTR [rsp+0x8],rbx
   140027b31:	push   rdi
   140027b32:	sub    rsp,0x20
   140027b36:	mov    rdi,rcx
   140027b39:	lea    rdx,[rip+0xffffffffffff5008]        # 0x14001cb48
   140027b40:	lea    rcx,[rip+0x610b9]        # 0x140088c00
   140027b47:	call   0x14002d3a8
   140027b4c:	test   rax,rax
   140027b4f:	mov    rbx,rax
   140027b52:	jne    0x140027b5a
   140027b54:	call   0x1400208f8
   140027b59:	int3   
   140027b5a:	cmp    QWORD PTR [rax+0x28],rdi
   140027b5e:	je     0x140027b97
   140027b60:	cmp    QWORD PTR [rax+0x48],0x0
   140027b65:	jne    0x140027b93
   140027b67:	call   QWORD PTR [rip+0x3c953]        # 0x1400644c0
   140027b6d:	xor    r8d,r8d
   140027b70:	lea    rdx,[rip+0xfffffffffffffd0d]        # 0x140027884
   140027b77:	lea    ecx,[r8+0x5]
   140027b7b:	mov    r9d,eax
   140027b7e:	call   QWORD PTR [rip+0x3ce94]        # 0x140064a18
   140027b84:	test   rax,rax
   140027b87:	mov    QWORD PTR [rbx+0x48],rax
   140027b8b:	jne    0x140027b93
   140027b8d:	call   0x1400208b0
   140027b92:	int3   
   140027b93:	mov    QWORD PTR [rbx+0x28],rdi
   140027b97:	mov    rbx,QWORD PTR [rsp+0x30]
   140027b9c:	add    rsp,0x20
   140027ba0:	pop    rdi
   140027ba1:	ret    
   140027ba2:	int3   
   140027ba3:	int3   
   140027ba4:	mov    rax,rsp
   140027ba7:	mov    QWORD PTR [rax+0x8],rbx
   140027bab:	mov    QWORD PTR [rax+0x10],rbp
   140027baf:	mov    QWORD PTR [rax+0x18],rsi
   140027bb3:	mov    QWORD PTR [rax+0x20],rdi
   140027bb7:	push   r12
   140027bb9:	sub    rsp,0xb0
   140027bc0:	xor    ebx,ebx
   140027bc2:	mov    rsi,r9
   140027bc5:	mov    rbp,r8
   140027bc8:	cmp    r9,rbx
   140027bcb:	mov    r12d,edx
   140027bce:	mov    rdi,rcx
   140027bd1:	je     0x140027be8
   140027bd3:	or     edx,0xffffffff
   140027bd6:	mov    rcx,r9
   140027bd9:	call   0x14003f208
   140027bde:	cmp    eax,ebx
   140027be0:	jne    0x140027be8
   140027be2:	call   0x1400208f8
   140027be7:	int3   
   140027be8:	mov    eax,DWORD PTR [rsp+0xe0]
   140027bef:	mov    DWORD PTR [rsp+0xa8],r12d
   140027bf7:	mov    QWORD PTR [rsp+0xa0],rbp
   140027bff:	mov    DWORD PTR [rsp+0x90],eax
   140027c06:	mov    eax,DWORD PTR [rsp+0xe8]
   140027c0d:	mov    QWORD PTR [rsp+0x98],rsi
   140027c15:	mov    DWORD PTR [rsp+0x8c],eax
   140027c1c:	mov    eax,DWORD PTR [rsp+0xf0]
   140027c23:	mov    DWORD PTR [rsp+0x88],eax
   140027c2a:	mov    eax,DWORD PTR [rsp+0xf8]
   140027c31:	mov    DWORD PTR [rsp+0x84],eax
   140027c38:	mov    eax,DWORD PTR [rsp+0x100]
   140027c3f:	mov    DWORD PTR [rsp+0x80],eax
   140027c46:	mov    rax,QWORD PTR [rsp+0x108]
   140027c4e:	mov    QWORD PTR [rsp+0x78],rax
   140027c53:	mov    rax,QWORD PTR [rsp+0x110]
   140027c5b:	mov    QWORD PTR [rsp+0x70],rax
   140027c60:	call   0x140021a70
   140027c65:	lea    rdx,[rsp+0x60]
   140027c6a:	mov    rcx,QWORD PTR [rax+0x10]
   140027c6e:	mov    rax,QWORD PTR [rsp+0x118]
   140027c76:	mov    QWORD PTR [rsp+0x60],rax
   140027c7b:	mov    rax,QWORD PTR [rdi]
   140027c7e:	mov    QWORD PTR [rsp+0x68],rcx
   140027c83:	mov    rcx,rdi
   140027c86:	call   QWORD PTR [rax+0xc8]
   140027c8c:	mov    rcx,rdi
   140027c8f:	cmp    eax,ebx
   140027c91:	jne    0x140027ca3
   140027c93:	mov    rax,QWORD PTR [rdi]
   140027c96:	call   QWORD PTR [rax+0x228]
   140027c9c:	xor    eax,eax
   140027c9e:	jmp    0x140027d40
   140027ca3:	call   0x140027b2c
   140027ca8:	mov    rax,QWORD PTR [rsp+0x68]
   140027cad:	mov    r11,QWORD PTR [rsp+0x60]
   140027cb2:	mov    r9d,DWORD PTR [rsp+0x90]
   140027cba:	mov    r8,QWORD PTR [rsp+0x98]
   140027cc2:	mov    rdx,QWORD PTR [rsp+0xa0]
   140027cca:	mov    ecx,DWORD PTR [rsp+0xa8]
   140027cd1:	mov    QWORD PTR [rsp+0x58],r11
   140027cd6:	mov    QWORD PTR [rsp+0x50],rax
   140027cdb:	mov    rax,QWORD PTR [rsp+0x70]
   140027ce0:	mov    QWORD PTR [rsp+0x48],rax
   140027ce5:	mov    rax,QWORD PTR [rsp+0x78]
   140027cea:	mov    QWORD PTR [rsp+0x40],rax
   140027cef:	mov    eax,DWORD PTR [rsp+0x80]
   140027cf6:	mov    DWORD PTR [rsp+0x38],eax
   140027cfa:	mov    eax,DWORD PTR [rsp+0x84]
   140027d01:	mov    DWORD PTR [rsp+0x30],eax
   140027d05:	mov    eax,DWORD PTR [rsp+0x88]
   140027d0c:	mov    DWORD PTR [rsp+0x28],eax
   140027d10:	mov    eax,DWORD PTR [rsp+0x8c]
   140027d17:	mov    DWORD PTR [rsp+0x20],eax
   140027d1b:	call   0x140023440
   140027d20:	mov    rsi,rax
   140027d23:	call   0x14002580c
   140027d28:	cmp    eax,ebx
   140027d2a:	jne    0x140027d38
   140027d2c:	mov    rdx,QWORD PTR [rdi]
   140027d2f:	mov    rcx,rdi
   140027d32:	call   QWORD PTR [rdx+0x228]
   140027d38:	cmp    rsi,rbx
   140027d3b:	setne  bl
   140027d3e:	mov    eax,ebx
   140027d40:	lea    r11,[rsp+0xb0]
   140027d48:	mov    rbx,QWORD PTR [r11+0x10]
   140027d4c:	mov    rbp,QWORD PTR [r11+0x18]
   140027d50:	mov    rsi,QWORD PTR [r11+0x20]
   140027d54:	mov    rdi,QWORD PTR [r11+0x28]
   140027d58:	mov    rsp,r11
   140027d5b:	pop    r12
   140027d5d:	ret    
   140027d5e:	int3   
   140027d5f:	int3   
   140027d60:	mov    QWORD PTR [rsp+0x8],rbx
   140027d65:	push   rdi
   140027d66:	sub    rsp,0x30
   140027d6a:	mov    rax,QWORD PTR [rcx]
   140027d6d:	mov    rbx,rcx
   140027d70:	call   QWORD PTR [rax+0x240]
   140027d76:	test   eax,eax
   140027d78:	je     0x140027d86
   140027d7a:	mov    rax,QWORD PTR [rbx]
   140027d7d:	mov    rcx,rbx
   140027d80:	call   QWORD PTR [rax+0x2e0]
   140027d86:	mov    rcx,QWORD PTR [rbx+0x40]
   140027d8a:	xor    r9d,r9d
   140027d8d:	xor    r8d,r8d
   140027d90:	lea    edi,[r9+0x1f]
   140027d94:	mov    edx,edi
   140027d96:	call   QWORD PTR [rip+0x3cdd4]        # 0x140064b70
   140027d9c:	mov    rcx,QWORD PTR [rbx+0x40]
   140027da0:	xor    r9d,r9d
   140027da3:	xor    r8d,r8d
   140027da6:	mov    edx,edi
   140027da8:	mov    DWORD PTR [rsp+0x28],0x1
   140027db0:	mov    DWORD PTR [rsp+0x20],0x1
   140027db8:	call   0x1400264d4
   140027dbd:	mov    rcx,rbx
   140027dc0:	call   0x1400271c8
   140027dc5:	test   rax,rax
   140027dc8:	mov    rbx,rax
   140027dcb:	jne    0x140027dd3
   140027dcd:	call   0x1400208f8
   140027dd2:	int3   
   140027dd3:	mov    rcx,QWORD PTR [rax+0x40]
   140027dd7:	xor    r9d,r9d
   140027dda:	xor    r8d,r8d
   140027ddd:	mov    edx,edi
   140027ddf:	call   QWORD PTR [rip+0x3cd8b]        # 0x140064b70
   140027de5:	mov    rcx,QWORD PTR [rbx+0x40]
   140027de9:	xor    r9d,r9d
   140027dec:	xor    r8d,r8d
   140027def:	mov    edx,edi
   140027df1:	mov    DWORD PTR [rsp+0x28],0x1
   140027df9:	mov    DWORD PTR [rsp+0x20],0x1
   140027e01:	call   0x1400264d4
   140027e06:	call   QWORD PTR [rip+0x3ca4c]        # 0x140064858
   140027e0c:	test   rax,rax
   140027e0f:	je     0x140027e22
   140027e11:	xor    r9d,r9d
   140027e14:	xor    r8d,r8d
   140027e17:	mov    edx,edi
   140027e19:	mov    rcx,rax
   140027e1c:	call   QWORD PTR [rip+0x3cd4e]        # 0x140064b70
   140027e22:	mov    rbx,QWORD PTR [rsp+0x40]
   140027e27:	add    rsp,0x30
   140027e2b:	pop    rdi
   140027e2c:	ret    
   140027e2d:	int3   
   140027e2e:	int3   
   140027e2f:	int3   
   140027e30:	mov    rax,rsp
   140027e33:	push   r12
   140027e35:	push   r13
   140027e37:	push   r15
   140027e39:	sub    rsp,0x120
   140027e40:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140027e49:	mov    QWORD PTR [rax+0x8],rbx
   140027e4d:	mov    QWORD PTR [rax+0x10],rbp
   140027e51:	mov    QWORD PTR [rax+0x18],rsi
   140027e55:	mov    QWORD PTR [rax+0x20],rdi
   140027e59:	mov    rsi,r9
   140027e5c:	mov    r12,r8
   140027e5f:	mov    r13d,edx
   140027e62:	mov    rbp,rcx
   140027e65:	and    QWORD PTR [rsp+0x30],0x0
   140027e6b:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   140027e73:	mov    r15d,0x1
   140027e79:	cmp    edx,0x111
   140027e7f:	jne    0x140027ea5
   140027e81:	mov    rax,QWORD PTR [rcx]
   140027e84:	mov    r8,r9
   140027e87:	mov    rdx,r12
   140027e8a:	call   QWORD PTR [rax+0x1d0]
   140027e90:	test   eax,eax
   140027e92:	je     0x140027e9e
   140027e94:	mov    QWORD PTR [rsp+0x30],r15
   140027e99:	jmp    0x14002896f
   140027e9e:	xor    eax,eax
   140027ea0:	jmp    0x1400289a2
   140027ea5:	cmp    edx,0x4e
   140027ea8:	jne    0x140027ed3
   140027eaa:	cmp    QWORD PTR [r9],0x0
   140027eae:	je     0x140027ecc
   140027eb0:	mov    rax,QWORD PTR [rcx]
   140027eb3:	lea    r9,[rsp+0x30]
   140027eb8:	mov    r8,rsi
   140027ebb:	mov    rdx,r12
   140027ebe:	call   QWORD PTR [rax+0x1d8]
   140027ec4:	test   eax,eax
   140027ec6:	jne    0x14002896f
   140027ecc:	xor    eax,eax
   140027ece:	jmp    0x1400289a2
   140027ed3:	cmp    edx,0x6
   140027ed6:	jne    0x140027eee
   140027ed8:	mov    rcx,r9
   140027edb:	call   0x1400256f0
   140027ee0:	mov    r8,rax
   140027ee3:	mov    rdx,r12
   140027ee6:	mov    rcx,rbp
   140027ee9:	call   0x14002755c
   140027eee:	cmp    r13d,0x20
   140027ef2:	jne    0x140027f18
   140027ef4:	mov    rax,rsi
   140027ef7:	shr    rax,0x10
   140027efb:	movzx  r8d,ax
   140027eff:	movsx  edx,si
   140027f02:	mov    rcx,rbp
   140027f05:	call   0x140027600
   140027f0a:	test   eax,eax
   140027f0c:	je     0x140027f18
   140027f0e:	mov    QWORD PTR [rsp+0x30],r15
   140027f13:	jmp    0x14002896f
   140027f18:	mov    rax,QWORD PTR [rbp+0x98]
   140027f1f:	test   rax,rax
   140027f22:	je     0x140027f88
   140027f24:	cmp    DWORD PTR [rax+0xe0],0x0
   140027f2b:	jle    0x140027f88
   140027f2d:	cmp    r13d,0x200
   140027f34:	jb     0x140027f3f
   140027f36:	cmp    r13d,0x209
   140027f3d:	jbe    0x140027f5d
   140027f3f:	cmp    r13d,0x100
   140027f46:	jb     0x140027f51
   140027f48:	cmp    r13d,0x10f
   140027f4f:	jbe    0x140027f5d
   140027f51:	lea    eax,[r13-0x281]
   140027f58:	cmp    eax,0x10
   140027f5b:	ja     0x140027f88
   140027f5d:	mov    rcx,QWORD PTR [rbp+0x98]
   140027f64:	mov    rax,QWORD PTR [rcx]
   140027f67:	lea    rdx,[rsp+0x30]
   140027f6c:	mov    QWORD PTR [rsp+0x20],rdx
   140027f71:	mov    r9,rsi
   140027f74:	mov    r8,r12
   140027f77:	mov    edx,r13d
   140027f7a:	call   QWORD PTR [rax+0x128]
   140027f80:	test   eax,eax
   140027f82:	jne    0x14002896f
   140027f88:	mov    rax,QWORD PTR [rbp+0x0]
   140027f8c:	mov    rcx,rbp
   140027f8f:	call   QWORD PTR [rax+0x50]
   140027f92:	mov    rdi,rax
   140027f95:	mov    ebx,eax
   140027f97:	xor    ebx,r13d
   140027f9a:	and    ebx,0x1ff
   140027fa0:	mov    eax,0x7
   140027fa5:	mov    DWORD PTR [rsp+0x40],eax
   140027fa9:	mov    ecx,eax
   140027fab:	call   0x14002d810
   140027fb0:	lea    rbx,[rbx+rbx*2]
   140027fb4:	lea    rdx,[rip+0x60c65]        # 0x140088c20
   140027fbb:	cmp    r13d,DWORD PTR [rdx+rbx*8]
   140027fbf:	jne    0x140027ffd
   140027fc1:	cmp    rdi,QWORD PTR [rdx+rbx*8+0x10]
   140027fc6:	jne    0x140027ffd
   140027fc8:	mov    rdi,QWORD PTR [rdx+rbx*8+0x8]
   140027fcd:	mov    ecx,0x7
   140027fd2:	call   0x14002d8a4
   140027fd7:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   140027fdf:	test   rdi,rdi
   140027fe2:	jne    0x140027feb
   140027fe4:	xor    eax,eax
   140027fe6:	jmp    0x1400289a2
   140027feb:	cmp    r13d,0xc000
   140027ff2:	jb     0x1400280c3
   140027ff8:	jmp    0x14002895a
   140027ffd:	mov    DWORD PTR [rdx+rbx*8],r13d
   140028001:	mov    QWORD PTR [rdx+rbx*8+0x10],rdi
   140028006:	mov    rcx,QWORD PTR [rdi]
   140028009:	xor    eax,eax
   14002800b:	cmp    rcx,rax
   14002800e:	je     0x140028990
   140028014:	cmp    r13d,0xc000
   14002801b:	jae    0x14002804a
   14002801d:	mov    rdi,QWORD PTR [rdi+0x8]
   140028021:	cmp    QWORD PTR [rdi+0x10],rax
   140028025:	je     0x140028040
   140028027:	cmp    DWORD PTR [rdi],r13d
   14002802a:	jne    0x140028036
   14002802c:	cmp    DWORD PTR [rdi+0x4],eax
   14002802f:	jne    0x140028036
   140028031:	cmp    DWORD PTR [rdi+0x8],eax
   140028034:	jbe    0x140028043
   140028036:	add    rdi,0x20
   14002803a:	cmp    QWORD PTR [rdi+0x10],rax
   14002803e:	jne    0x140028027
   140028040:	mov    rdi,rax
   140028043:	cmp    rdi,rax
   140028046:	jne    0x1400280a5
   140028048:	jmp    0x14002808d
   14002804a:	mov    rdi,QWORD PTR [rdi+0x8]
   14002804e:	cmp    QWORD PTR [rdi+0x10],rax
   140028052:	je     0x140028070
   140028054:	cmp    DWORD PTR [rdi],0xc000
   14002805a:	jne    0x140028066
   14002805c:	cmp    DWORD PTR [rdi+0x4],eax
   14002805f:	jne    0x140028066
   140028061:	cmp    DWORD PTR [rdi+0x8],eax
   140028064:	jbe    0x140028073
   140028066:	add    rdi,0x20
   14002806a:	cmp    QWORD PTR [rdi+0x10],rax
   14002806e:	jne    0x140028054
   140028070:	mov    rdi,rax
   140028073:	cmp    rdi,rax
   140028076:	je     0x14002808d
   140028078:	mov    rax,QWORD PTR [rdi+0x10]
   14002807c:	cmp    DWORD PTR [rax],r13d
   14002807f:	je     0x14002893c
   140028085:	add    rdi,0x20
   140028089:	xor    eax,eax
   14002808b:	jmp    0x14002804e
   14002808d:	call   rcx
   14002808f:	mov    rdi,rax
   140028092:	mov    rcx,QWORD PTR [rax]
   140028095:	xor    eax,eax
   140028097:	cmp    rcx,rax
   14002809a:	je     0x140028989
   1400280a0:	jmp    0x140028014
   1400280a5:	lea    rax,[rip+0x60b74]        # 0x140088c20
   1400280ac:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   1400280b1:	mov    ecx,0x7
   1400280b6:	call   0x14002d8a4
   1400280bb:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   1400280c3:	mov    rbx,QWORD PTR [rdi+0x18]
   1400280c7:	mov    rcx,QWORD PTR [rdi+0x10]
   1400280cb:	cmp    rcx,0x1d
   1400280cf:	ja     0x14002854d
   1400280d5:	cmp    rcx,0x1d
   1400280d9:	je     0x14002853b
   1400280df:	cmp    rcx,0xf
   1400280e3:	ja     0x1400283e2
   1400280e9:	cmp    rcx,0xf
   1400280ed:	je     0x1400283b9
   1400280f3:	cmp    rcx,0x8
   1400280f7:	ja     0x1400282a9
   1400280fd:	cmp    rcx,0x8
   140028101:	je     0x1400281fb
   140028107:	sub    rcx,r15
   14002810a:	je     0x1400281de
   140028110:	sub    rcx,r15
   140028113:	je     0x1400281c9
   140028119:	sub    rcx,r15
   14002811c:	je     0x1400281b4
   140028122:	sub    rcx,r15
   140028125:	je     0x14002819f
   140028127:	sub    rcx,r15
   14002812a:	je     0x14002816f
   14002812c:	sub    rcx,r15
   14002812f:	je     0x14002814f
   140028131:	cmp    rcx,r15
   140028134:	jne    0x14002896f
   14002813a:	mov    rdx,rsi
   14002813d:	mov    rcx,rbp
   140028140:	call   rbx
   140028142:	movsxd rcx,eax
   140028145:	mov    QWORD PTR [rsp+0x30],rcx
   14002814a:	jmp    0x14002896f
   14002814f:	mov    rcx,r12
   140028152:	call   0x1400256f0
   140028157:	mov    rdx,rax
   14002815a:	mov    r8,rsi
   14002815d:	mov    rcx,rbp
   140028160:	call   rbx
   140028162:	movsxd rcx,eax
   140028165:	mov    QWORD PTR [rsp+0x30],rcx
   14002816a:	jmp    0x14002896f
   14002816f:	mov    rax,rsi
   140028172:	shr    rax,0x10
   140028176:	movzx  edi,ax
   140028179:	movzx  esi,si
   14002817c:	mov    rcx,r12
   14002817f:	call   0x1400256f0
   140028184:	mov    rdx,rax
   140028187:	mov    r9d,edi
   14002818a:	mov    r8d,esi
   14002818d:	mov    rcx,rbp
   140028190:	call   rbx
   140028192:	movsxd rcx,eax
   140028195:	mov    QWORD PTR [rsp+0x30],rcx
   14002819a:	jmp    0x14002896f
   14002819f:	mov    rdx,r12
   1400281a2:	mov    rcx,rbp
   1400281a5:	call   rbx
   1400281a7:	movsxd rcx,eax
   1400281aa:	mov    QWORD PTR [rsp+0x30],rcx
   1400281af:	jmp    0x14002896f
   1400281b4:	mov    edx,r12d
   1400281b7:	mov    rcx,rbp
   1400281ba:	call   rbx
   1400281bc:	movsxd rcx,eax
   1400281bf:	mov    QWORD PTR [rsp+0x30],rcx
   1400281c4:	jmp    0x14002896f
   1400281c9:	mov    edx,r12d
   1400281cc:	mov    rcx,rbp
   1400281cf:	call   rbx
   1400281d1:	movsxd rcx,eax
   1400281d4:	mov    QWORD PTR [rsp+0x30],rcx
   1400281d9:	jmp    0x14002896f
   1400281de:	mov    rcx,r12
   1400281e1:	call   0x14002b0e4
   1400281e6:	mov    rdx,rax
   1400281e9:	mov    rcx,rbp
   1400281ec:	call   rbx
   1400281ee:	movsxd rcx,eax
   1400281f1:	mov    QWORD PTR [rsp+0x30],rcx
   1400281f6:	jmp    0x14002896f
   1400281fb:	lea    rcx,[rsp+0x48]
   140028200:	call   0x14002a948
   140028205:	nop
   140028206:	mov    rax,QWORD PTR [rsi+0x8]
   14002820a:	mov    QWORD PTR [rsp+0x50],rax
   14002820f:	lea    rcx,[rsp+0x70]
   140028214:	call   0x1400236c4
   140028219:	nop
   14002821a:	mov    rcx,QWORD PTR [rsi]
   14002821d:	mov    QWORD PTR [rsp+0xb0],rcx
   140028225:	mov    edi,DWORD PTR [rsi+0x10]
   140028228:	call   0x140025734
   14002822d:	test   rax,rax
   140028230:	jne    0x14002826b
   140028232:	mov    rcx,QWORD PTR [rbp+0x98]
   140028239:	test   rcx,rcx
   14002823c:	je     0x140028266
   14002823e:	add    rcx,0x48
   140028242:	mov    rdx,QWORD PTR [rsp+0xb0]
   14002824a:	call   0x14002f878
   14002824f:	mov    rcx,QWORD PTR [rsp+0x110]
   140028257:	test   rax,rax
   14002825a:	cmovne rcx,rax
   14002825e:	mov    QWORD PTR [rsp+0x110],rcx
   140028266:	lea    rax,[rsp+0x70]
   14002826b:	mov    r9d,edi
   14002826e:	mov    r8,rax
   140028271:	lea    rdx,[rsp+0x48]
   140028276:	mov    rcx,rbp
   140028279:	call   rbx
   14002827b:	and    QWORD PTR [rsp+0x50],0x0
   140028281:	and    QWORD PTR [rsp+0xb0],0x0
   14002828a:	mov    QWORD PTR [rsp+0x30],rax
   14002828f:	lea    rcx,[rsp+0x70]
   140028294:	call   0x140026254
   140028299:	nop
   14002829a:	lea    rcx,[rsp+0x48]
   14002829f:	call   0x14002b1a4
   1400282a4:	jmp    0x14002896f
   1400282a9:	sub    rcx,0x9
   1400282ad:	je     0x14002837d
   1400282b3:	sub    rcx,r15
   1400282b6:	je     0x14002834f
   1400282bc:	sub    rcx,r15
   1400282bf:	je     0x14002832e
   1400282c1:	sub    rcx,r15
   1400282c4:	je     0x1400282fe
   1400282c6:	sub    rcx,r15
   1400282c9:	je     0x1400282e9
   1400282cb:	cmp    rcx,r15
   1400282ce:	jne    0x14002896f
   1400282d4:	mov    r8,rsi
   1400282d7:	mov    rdx,r12
   1400282da:	mov    rcx,rbp
   1400282dd:	call   rbx
   1400282df:	mov    QWORD PTR [rsp+0x30],rax
   1400282e4:	jmp    0x14002896f
   1400282e9:	mov    rdx,rsi
   1400282ec:	mov    rcx,rbp
   1400282ef:	call   rbx
   1400282f1:	movsxd rcx,eax
   1400282f4:	mov    QWORD PTR [rsp+0x30],rcx
   1400282f9:	jmp    0x14002896f
   1400282fe:	mov    rax,rsi
   140028301:	shr    rax,0x10
   140028305:	movzx  edi,ax
   140028308:	movzx  esi,si
   14002830b:	mov    rcx,r12
   14002830e:	call   0x1400256f0
   140028313:	mov    rdx,rax
   140028316:	mov    r9d,edi
   140028319:	mov    r8d,esi
   14002831c:	mov    rcx,rbp
   14002831f:	call   rbx
   140028321:	movsxd rcx,eax
   140028324:	mov    QWORD PTR [rsp+0x30],rcx
   140028329:	jmp    0x14002896f
   14002832e:	mov    rax,r12
   140028331:	shr    rax,0x10
   140028335:	movzx  r8d,ax
   140028339:	movzx  edx,r12w
   14002833d:	mov    rcx,rbp
   140028340:	call   rbx
   140028342:	movsxd rcx,eax
   140028345:	mov    QWORD PTR [rsp+0x30],rcx
   14002834a:	jmp    0x14002896f
   14002834f:	mov    rax,r12
   140028352:	shr    rax,0x10
   140028356:	movzx  edi,ax
   140028359:	mov    rcx,rsi
   14002835c:	call   0x1400256f0
   140028361:	mov    r8,rax
   140028364:	movzx  edx,r12w
   140028368:	mov    r9d,edi
   14002836b:	mov    rcx,rbp
   14002836e:	call   rbx
   140028370:	movsxd rcx,eax
   140028373:	mov    QWORD PTR [rsp+0x30],rcx
   140028378:	jmp    0x14002896f
   14002837d:	lea    rcx,[rsp+0x48]
   140028382:	call   0x14002a948
   140028387:	nop
   140028388:	mov    rax,QWORD PTR [rsi+0x8]
   14002838c:	mov    QWORD PTR [rsp+0x50],rax
   140028391:	mov    r8d,DWORD PTR [rsi+0x10]
   140028395:	lea    rdx,[rsp+0x48]
   14002839a:	mov    rcx,rbp
   14002839d:	call   rbx
   14002839f:	and    QWORD PTR [rsp+0x50],0x0
   1400283a5:	mov    QWORD PTR [rsp+0x30],rax
   1400283aa:	lea    rcx,[rsp+0x48]
   1400283af:	call   0x14002b1a4
   1400283b4:	jmp    0x14002896f
   1400283b9:	mov    rcx,rsi
   1400283bc:	call   0x14003f114
   1400283c1:	mov    r9,rax
   1400283c4:	mov    rax,r12
   1400283c7:	shr    rax,0x10
   1400283cb:	movzx  r8d,ax
   1400283cf:	movzx  edx,r12w
   1400283d3:	mov    rcx,rbp
   1400283d6:	call   rbx
   1400283d8:	mov    QWORD PTR [rsp+0x30],rax
   1400283dd:	jmp    0x14002896f
   1400283e2:	cmp    rcx,0x16
   1400283e6:	ja     0x140028482
   1400283ec:	cmp    rcx,0x16
   1400283f0:	je     0x140028469
   1400283f2:	sub    rcx,0x10
   1400283f6:	je     0x140028459
   1400283f8:	sub    rcx,r15
   1400283fb:	je     0x14002844c
   1400283fd:	sub    rcx,r15
   140028400:	je     0x14002843c
   140028402:	sub    rcx,r15
   140028405:	je     0x140028432
   140028407:	sub    rcx,r15
   14002840a:	je     0x140028425
   14002840c:	cmp    rcx,r15
   14002840f:	jne    0x14002896f
   140028415:	mov    r8d,esi
   140028418:	mov    edx,r12d
   14002841b:	mov    rcx,rbp
   14002841e:	call   rbx
   140028420:	jmp    0x14002896f
   140028425:	mov    edx,r12d
   140028428:	mov    rcx,rbp
   14002842b:	call   rbx
   14002842d:	jmp    0x14002896f
   140028432:	mov    rcx,rbp
   140028435:	call   rbx
   140028437:	jmp    0x14002896f
   14002843c:	mov    r8,rsi
   14002843f:	mov    rdx,r12
   140028442:	mov    rcx,rbp
   140028445:	call   rbx
   140028447:	jmp    0x14002896f
   14002844c:	mov    rdx,r12
   14002844f:	mov    rcx,rbp
   140028452:	call   rbx
   140028454:	jmp    0x14002896f
   140028459:	mov    r8,rsi
   14002845c:	mov    edx,r12d
   14002845f:	mov    rcx,rbp
   140028462:	call   rbx
   140028464:	jmp    0x14002896f
   140028469:	mov    rax,r12
   14002846c:	shr    rax,0x10
   140028470:	movzx  r8d,ax
   140028474:	movzx  edx,r12w
   140028478:	mov    rcx,rbp
   14002847b:	call   rbx
   14002847d:	jmp    0x14002896f
   140028482:	sub    rcx,0x17
   140028486:	je     0x140028523
   14002848c:	sub    rcx,r15
   14002848f:	je     0x140028507
   140028491:	sub    rcx,r15
   140028494:	je     0x1400284eb
   140028496:	sub    rcx,r15
   140028499:	je     0x1400284d3
   14002849b:	sub    rcx,r15
   14002849e:	je     0x1400284be
   1400284a0:	cmp    rcx,r15
   1400284a3:	jne    0x14002896f
   1400284a9:	mov    edx,r12d
   1400284ac:	mov    rcx,rbp
   1400284af:	call   rbx
   1400284b1:	mov    r11d,eax
   1400284b4:	mov    QWORD PTR [rsp+0x30],r11
   1400284b9:	jmp    0x14002896f
   1400284be:	mov    edx,r12d
   1400284c1:	mov    rcx,rbp
   1400284c4:	call   rbx
   1400284c6:	movsxd rcx,eax
   1400284c9:	mov    QWORD PTR [rsp+0x30],rcx
   1400284ce:	jmp    0x14002896f
   1400284d3:	mov    rcx,rsi
   1400284d6:	call   0x1400256f0
   1400284db:	mov    r8,rax
   1400284de:	mov    edx,r12d
   1400284e1:	mov    rcx,rbp
   1400284e4:	call   rbx
   1400284e6:	jmp    0x14002896f
   1400284eb:	mov    rax,rsi
   1400284ee:	shr    rax,0x10
   1400284f2:	movzx  r9d,ax
   1400284f6:	movzx  r8d,si
   1400284fa:	mov    edx,r12d
   1400284fd:	mov    rcx,rbp
   140028500:	call   rbx
   140028502:	jmp    0x14002896f
   140028507:	mov    rax,rsi
   14002850a:	shr    rax,0x10
   14002850e:	movzx  r9d,ax
   140028512:	movzx  r8d,si
   140028516:	mov    edx,r12d
   140028519:	mov    rcx,rbp
   14002851c:	call   rbx
   14002851e:	jmp    0x14002896f
   140028523:	mov    rax,rsi
   140028526:	shr    rax,0x10
   14002852a:	movsx  r8d,ax
   14002852e:	movsx  edx,si
   140028531:	mov    rcx,rbp
   140028534:	call   rbx
   140028536:	jmp    0x14002896f
   14002853b:	mov    rcx,rbp
   14002853e:	call   rbx
   140028540:	movsxd rcx,eax
   140028543:	mov    QWORD PTR [rsp+0x30],rcx
   140028548:	jmp    0x14002896f
   14002854d:	cmp    rcx,0x2c
   140028551:	ja     0x140028774
   140028557:	cmp    rcx,0x2c
   14002855b:	je     0x140028767
   140028561:	cmp    rcx,0x24
   140028565:	ja     0x140028654
   14002856b:	cmp    rcx,0x24
   14002856f:	je     0x14002863f
   140028575:	sub    rcx,0x1e
   140028579:	je     0x14002862f
   14002857f:	sub    rcx,r15
   140028582:	je     0x140028603
   140028584:	sub    rcx,r15
   140028587:	je     0x1400285ee
   140028589:	sub    rcx,r15
   14002858c:	je     0x1400285d9
   14002858e:	sub    rcx,r15
   140028591:	je     0x1400285b1
   140028593:	cmp    rcx,r15
   140028596:	jne    0x14002896f
   14002859c:	mov    rcx,r12
   14002859f:	call   0x1400256f0
   1400285a4:	mov    rdx,rax
   1400285a7:	mov    rcx,rbp
   1400285aa:	call   rbx
   1400285ac:	jmp    0x14002896f
   1400285b1:	mov    rax,rsi
   1400285b4:	shr    rax,0x10
   1400285b8:	movsx  edi,ax
   1400285bb:	movsx  esi,si
   1400285be:	mov    rcx,r12
   1400285c1:	call   0x14003f114
   1400285c6:	mov    rdx,rax
   1400285c9:	mov    r9d,edi
   1400285cc:	mov    r8d,esi
   1400285cf:	mov    rcx,rbp
   1400285d2:	call   rbx
   1400285d4:	jmp    0x14002896f
   1400285d9:	mov    rcx,r12
   1400285dc:	call   0x14003f114
   1400285e1:	mov    rdx,rax
   1400285e4:	mov    rcx,rbp
   1400285e7:	call   rbx
   1400285e9:	jmp    0x14002896f
   1400285ee:	mov    rcx,r12
   1400285f1:	call   0x14002b0e4
   1400285f6:	mov    rdx,rax
   1400285f9:	mov    rcx,rbp
   1400285fc:	call   rbx
   1400285fe:	jmp    0x14002896f
   140028603:	mov    rcx,r12
   140028606:	call   0x1400256f0
   14002860b:	mov    rdi,rax
   14002860e:	mov    rcx,rsi
   140028611:	call   0x1400256f0
   140028616:	mov    r8,rax
   140028619:	xor    edx,edx
   14002861b:	cmp    QWORD PTR [rbp+0x40],rsi
   14002861f:	sete   dl
   140028622:	mov    r9,rdi
   140028625:	mov    rcx,rbp
   140028628:	call   rbx
   14002862a:	jmp    0x14002896f
   14002862f:	mov    r8,rsi
   140028632:	mov    rdx,r12
   140028635:	mov    rcx,rbp
   140028638:	call   rbx
   14002863a:	jmp    0x14002896f
   14002863f:	mov    rcx,rsi
   140028642:	call   0x1400256f0
   140028647:	mov    rdx,rax
   14002864a:	mov    rcx,rbp
   14002864d:	call   rbx
   14002864f:	jmp    0x14002896f
   140028654:	cmp    rcx,0x25
   140028658:	je     0x14002873f
   14002865e:	cmp    rcx,0x26
   140028662:	je     0x140028713
   140028668:	cmp    rcx,0x27
   14002866c:	je     0x1400286fb
   140028672:	cmp    rcx,0x28
   140028676:	je     0x1400286ec
   140028678:	cmp    rcx,0x29
   14002867c:	je     0x1400286c6
   14002867e:	lea    rax,[rcx-0x2a]
   140028682:	cmp    rax,r15
   140028685:	ja     0x14002896f
   14002868b:	movsx  edi,r12w
   14002868f:	shr    r12,0x10
   140028693:	movsx  r12d,r12w
   140028697:	cmp    rcx,0x2a
   14002869b:	jne    0x1400286b7
   14002869d:	mov    rcx,rsi
   1400286a0:	call   0x1400256f0
   1400286a5:	mov    r9,rax
   1400286a8:	mov    r8d,r12d
   1400286ab:	mov    edx,edi
   1400286ad:	mov    rcx,rbp
   1400286b0:	call   rbx
   1400286b2:	jmp    0x14002896f
   1400286b7:	mov    r8d,r12d
   1400286ba:	mov    edx,edi
   1400286bc:	mov    rcx,rbp
   1400286bf:	call   rbx
   1400286c1:	jmp    0x14002896f
   1400286c6:	mov    rax,r12
   1400286c9:	shr    rax,0x10
   1400286cd:	movzx  edi,ax
   1400286d0:	mov    rcx,rsi
   1400286d3:	call   0x1400256f0
   1400286d8:	mov    r8,rax
   1400286db:	movzx  edx,r12w
   1400286df:	mov    r9d,edi
   1400286e2:	mov    rcx,rbp
   1400286e5:	call   rbx
   1400286e7:	jmp    0x14002896f
   1400286ec:	mov    rcx,rbp
   1400286ef:	call   rbx
   1400286f1:	mov    QWORD PTR [rsp+0x30],rax
   1400286f6:	jmp    0x14002896f
   1400286fb:	mov    rcx,r12
   1400286fe:	call   0x1400256f0
   140028703:	mov    rdx,rax
   140028706:	mov    r8,rsi
   140028709:	mov    rcx,rbp
   14002870c:	call   rbx
   14002870e:	jmp    0x14002896f
   140028713:	movsx  eax,si
   140028716:	mov    DWORD PTR [rsp+0x38],eax
   14002871a:	shr    rsi,0x10
   14002871e:	movsx  eax,si
   140028721:	mov    DWORD PTR [rsp+0x3c],eax
   140028725:	mov    rcx,r12
   140028728:	call   0x1400256f0
   14002872d:	mov    rdx,rax
   140028730:	mov    r8,QWORD PTR [rsp+0x38]
   140028735:	mov    rcx,rbp
   140028738:	call   rbx
   14002873a:	jmp    0x14002896f
   14002873f:	mov    rax,rsi
   140028742:	shr    rax,0x10
   140028746:	movzx  edi,ax
   140028749:	movzx  esi,si
   14002874c:	mov    rcx,r12
   14002874f:	call   0x1400256f0
   140028754:	mov    rdx,rax
   140028757:	mov    r9d,edi
   14002875a:	mov    r8d,esi
   14002875d:	mov    rcx,rbp
   140028760:	call   rbx
   140028762:	jmp    0x14002896f
   140028767:	mov    rdx,rsi
   14002876a:	mov    rcx,rbp
   14002876d:	call   rbx
   14002876f:	jmp    0x14002896f
   140028774:	cmp    rcx,0x33
   140028778:	ja     0x140028844
   14002877e:	cmp    rcx,0x33
   140028782:	je     0x140028837
   140028788:	sub    rcx,0x2d
   14002878c:	je     0x140028827
   140028792:	sub    rcx,r15
   140028795:	je     0x140028812
   140028797:	sub    rcx,r15
   14002879a:	je     0x1400287fa
   14002879c:	sub    rcx,r15
   14002879f:	je     0x1400287d1
   1400287a1:	sub    rcx,r15
   1400287a4:	je     0x1400287bf
   1400287a6:	cmp    rcx,r15
   1400287a9:	jne    0x14002896f
   1400287af:	mov    r8,rsi
   1400287b2:	mov    edx,r12d
   1400287b5:	mov    rcx,rbp
   1400287b8:	call   rbx
   1400287ba:	jmp    0x14002896f
   1400287bf:	mov    rcx,rbp
   1400287c2:	call   rbx
   1400287c4:	mov    r11d,eax
   1400287c7:	mov    QWORD PTR [rsp+0x30],r11
   1400287cc:	jmp    0x14002896f
   1400287d1:	movsx  eax,si
   1400287d4:	mov    DWORD PTR [rsp+0x38],eax
   1400287d8:	shr    rsi,0x10
   1400287dc:	movsx  eax,si
   1400287df:	mov    DWORD PTR [rsp+0x3c],eax
   1400287e3:	mov    rdx,QWORD PTR [rsp+0x38]
   1400287e8:	mov    rcx,rbp
   1400287eb:	call   rbx
   1400287ed:	mov    r11d,eax
   1400287f0:	mov    QWORD PTR [rsp+0x30],r11
   1400287f5:	jmp    0x14002896f
   1400287fa:	mov    r8,rsi
   1400287fd:	mov    edx,r12d
   140028800:	mov    rcx,rbp
   140028803:	call   rbx
   140028805:	movsxd rcx,eax
   140028808:	mov    QWORD PTR [rsp+0x30],rcx
   14002880d:	jmp    0x14002896f
   140028812:	mov    r8,rsi
   140028815:	mov    edx,r12d
   140028818:	mov    rcx,rbp
   14002881b:	call   rbx
   14002881d:	mov    QWORD PTR [rsp+0x30],r15
   140028822:	jmp    0x14002896f
   140028827:	mov    r8,rsi
   14002882a:	mov    edx,r12d
   14002882d:	mov    rcx,rbp
   140028830:	call   rbx
   140028832:	jmp    0x14002896f
   140028837:	mov    rdx,rsi
   14002883a:	mov    rcx,rbp
   14002883d:	call   rbx
   14002883f:	jmp    0x14002896f
   140028844:	sub    rcx,0x34
   140028848:	je     0x140028923
   14002884e:	sub    rcx,r15
   140028851:	je     0x140028902
   140028857:	sub    rcx,r15
   14002885a:	je     0x1400288f0
   140028860:	sub    rcx,r15
   140028863:	je     0x1400288b4
   140028865:	sub    rcx,0xd
   140028869:	je     0x14002889a
   14002886b:	cmp    rcx,r15
   14002886e:	jne    0x14002896f
   140028874:	movsx  eax,si
   140028877:	mov    DWORD PTR [rsp+0x38],eax
   14002887b:	shr    rsi,0x10
   14002887f:	movsx  eax,si
   140028882:	mov    DWORD PTR [rsp+0x3c],eax
   140028886:	mov    rdx,QWORD PTR [rsp+0x38]
   14002888b:	mov    rcx,rbp
   14002888e:	call   rbx
   140028890:	mov    QWORD PTR [rsp+0x30],rax
   140028895:	jmp    0x14002896f
   14002889a:	mov    rcx,rbp
   14002889d:	call   rbx
   14002889f:	mov    QWORD PTR [rsp+0x30],rax
   1400288a4:	test   rax,rax
   1400288a7:	je     0x14002896f
   1400288ad:	xor    eax,eax
   1400288af:	jmp    0x1400289a2
   1400288b4:	movsx  eax,si
   1400288b7:	mov    DWORD PTR [rsp+0x38],eax
   1400288bb:	shr    rsi,0x10
   1400288bf:	movsx  eax,si
   1400288c2:	mov    DWORD PTR [rsp+0x3c],eax
   1400288c6:	mov    r8,r12
   1400288c9:	shr    r8,0x10
   1400288cd:	movzx  edx,r12w
   1400288d1:	mov    r9,QWORD PTR [rsp+0x38]
   1400288d6:	mov    rcx,rbp
   1400288d9:	call   rbx
   1400288db:	cdqe   
   1400288dd:	mov    QWORD PTR [rsp+0x30],rax
   1400288e2:	test   rax,rax
   1400288e5:	jne    0x14002896f
   1400288eb:	jmp    0x1400289a2
   1400288f0:	mov    r8,rsi
   1400288f3:	mov    edx,r12d
   1400288f6:	mov    rcx,rbp
   1400288f9:	call   rbx
   1400288fb:	mov    QWORD PTR [rsp+0x30],r15
   140028900:	jmp    0x14002896f
   140028902:	movsx  eax,si
   140028905:	mov    DWORD PTR [rsp+0x38],eax
   140028909:	shr    rsi,0x10
   14002890d:	movsx  eax,si
   140028910:	mov    DWORD PTR [rsp+0x3c],eax
   140028914:	mov    r8,QWORD PTR [rsp+0x38]
   140028919:	mov    edx,r12d
   14002891c:	mov    rcx,rbp
   14002891f:	call   rbx
   140028921:	jmp    0x14002896f
   140028923:	mov    rax,r12
   140028926:	shr    rax,0x10
   14002892a:	movzx  r8d,ax
   14002892e:	movzx  edx,r12w
   140028932:	mov    r9,rsi
   140028935:	mov    rcx,rbp
   140028938:	call   rbx
   14002893a:	jmp    0x14002896f
   14002893c:	lea    rax,[rip+0x602dd]        # 0x140088c20
   140028943:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   140028948:	mov    ecx,0x7
   14002894d:	call   0x14002d8a4
   140028952:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14002895a:	mov    r9,QWORD PTR [rdi+0x18]
   14002895e:	mov    r8,rsi
   140028961:	mov    rdx,r12
   140028964:	mov    rcx,rbp
   140028967:	call   r9
   14002896a:	mov    QWORD PTR [rsp+0x30],rax
   14002896f:	mov    rdx,QWORD PTR [rsp+0x160]
   140028977:	test   rdx,rdx
   14002897a:	je     0x140028984
   14002897c:	mov    rcx,QWORD PTR [rsp+0x30]
   140028981:	mov    QWORD PTR [rdx],rcx
   140028984:	mov    eax,r15d
   140028987:	jmp    0x1400289a2
   140028989:	lea    rdx,[rip+0x60290]        # 0x140088c20
   140028990:	mov    QWORD PTR [rdx+rbx*8+0x8],rax
   140028995:	mov    ecx,0x7
   14002899a:	call   0x14002d8a4
   14002899f:	nop
   1400289a0:	xor    eax,eax
   1400289a2:	lea    r11,[rsp+0x120]
   1400289aa:	mov    rbx,QWORD PTR [r11+0x20]
   1400289ae:	mov    rbp,QWORD PTR [r11+0x28]
   1400289b2:	mov    rsi,QWORD PTR [r11+0x30]
   1400289b6:	mov    rdi,QWORD PTR [r11+0x38]
   1400289ba:	mov    rsp,r11
   1400289bd:	pop    r15
   1400289bf:	pop    r13
   1400289c1:	pop    r12
   1400289c3:	ret    
   1400289c4:	int3   
   1400289c5:	int3   
   1400289c6:	int3   
   1400289c7:	int3   
   1400289c8:	int3   
   1400289c9:	int3   
   1400289ca:	int3   
   1400289cb:	int3   
   1400289cc:	int3   
   1400289cd:	int3   
   1400289ce:	int3   
   1400289cf:	int3   
   1400289d0:	rex push rbp
   1400289d2:	sub    rsp,0x20
   1400289d6:	mov    rbp,rdx
   1400289d9:	lea    rcx,[rbp+0x40]
   1400289dd:	call   0x140025548
   1400289e2:	add    rsp,0x20
   1400289e6:	pop    rbp
   1400289e7:	ret    
   1400289e8:	int3   
   1400289e9:	int3   
   1400289ea:	int3   
   1400289eb:	int3   
   1400289ec:	int3   
   1400289ed:	int3   
   1400289ee:	int3   
   1400289ef:	int3   
   1400289f0:	rex push rbp
   1400289f2:	sub    rsp,0x20
   1400289f6:	mov    rbp,rdx
   1400289f9:	lea    rcx,[rbp+0x48]
   1400289fd:	call   0x14002b1a4
   140028a02:	add    rsp,0x20
   140028a06:	pop    rbp
   140028a07:	ret    
   140028a08:	int3   
   140028a09:	int3   
   140028a0a:	int3   
   140028a0b:	int3   
   140028a0c:	int3   
   140028a0d:	int3   
   140028a0e:	int3   
   140028a0f:	int3   
   140028a10:	rex push rbp
   140028a12:	sub    rsp,0x20
   140028a16:	mov    rbp,rdx
   140028a19:	lea    rcx,[rbp+0x70]
   140028a1d:	call   0x140026254
   140028a22:	add    rsp,0x20
   140028a26:	pop    rbp
   140028a27:	ret    
   140028a28:	int3   
   140028a29:	int3   
   140028a2a:	int3   
   140028a2b:	int3   
   140028a2c:	int3   
   140028a2d:	int3   
   140028a2e:	int3   
   140028a2f:	int3   
   140028a30:	rex push rbp
   140028a32:	sub    rsp,0x20
   140028a36:	mov    rbp,rdx
   140028a39:	lea    rcx,[rbp+0x48]
   140028a3d:	call   0x14002b1a4
   140028a42:	add    rsp,0x20
   140028a46:	pop    rbp
   140028a47:	ret    
   140028a48:	rex push rbx
   140028a4a:	sub    rsp,0x50
   140028a4e:	cmp    edx,0x2b
   140028a51:	jb     0x140028a96
   140028a53:	cmp    edx,0x2f
   140028a56:	jbe    0x140028b52
   140028a5c:	cmp    edx,0x39
   140028a5f:	je     0x140028b52
   140028a65:	cmp    edx,0x4e
   140028a68:	je     0x140028b20
   140028a6e:	cmp    edx,0x111
   140028a74:	je     0x140028ae6
   140028a76:	cmp    edx,0x113
   140028a7c:	jbe    0x140028a96
   140028a7e:	cmp    edx,0x115
   140028a84:	jbe    0x140028b52
   140028a8a:	cmp    edx,0x210
   140028a90:	je     0x140028b52
   140028a96:	lea    eax,[rdx-0x132]
   140028a9c:	cmp    eax,0x6
   140028a9f:	ja     0x140028b6c
   140028aa5:	mov    rbx,QWORD PTR [rsp+0x80]
   140028aad:	lea    eax,[rdx-0x132]
   140028ab3:	mov    QWORD PTR [rsp+0x38],r8
   140028ab8:	lea    r9,[rsp+0x30]
   140028abd:	xor    r8d,r8d
   140028ac0:	mov    edx,0xbc19
   140028ac5:	mov    QWORD PTR [rsp+0x20],rbx
   140028aca:	mov    DWORD PTR [rsp+0x40],eax
   140028ace:	call   0x140027e30
   140028ad3:	mov    rcx,QWORD PTR [rbx]
   140028ad6:	mov    r11d,eax
   140028ad9:	neg    rcx
   140028adc:	sbb    eax,eax
   140028ade:	and    eax,r11d
   140028ae1:	jmp    0x140028b6e
   140028ae6:	and    QWORD PTR [rsp+0x20],0x0
   140028aec:	shr    r8,0x10
   140028af0:	xor    r9d,r9d
   140028af3:	movzx  r8d,r8w
   140028af7:	xor    edx,edx
   140028af9:	or     r8d,0xbd110000
   140028b00:	call   0x14001c1b0
   140028b05:	test   eax,eax
   140028b07:	je     0x140028b6c
   140028b09:	mov    rcx,QWORD PTR [rsp+0x80]
   140028b11:	mov    eax,0x1
   140028b16:	test   rcx,rcx
   140028b19:	je     0x140028b6e
   140028b1b:	mov    QWORD PTR [rcx],rax
   140028b1e:	jmp    0x140028b6e
   140028b20:	movzx  r8d,WORD PTR [r9+0x10]
   140028b25:	mov    rax,QWORD PTR [rsp+0x80]
   140028b2d:	and    QWORD PTR [rsp+0x20],0x0
   140028b33:	mov    QWORD PTR [rsp+0x38],r9
   140028b38:	lea    r9,[rsp+0x30]
   140028b3d:	or     r8d,0xbc4e0000
   140028b44:	xor    edx,edx
   140028b46:	mov    QWORD PTR [rsp+0x30],rax
   140028b4b:	call   0x14001c1b0
   140028b50:	jmp    0x140028b6e
   140028b52:	mov    rax,QWORD PTR [rsp+0x80]
   140028b5a:	add    edx,0xbc00
   140028b60:	mov    QWORD PTR [rsp+0x20],rax
   140028b65:	call   0x140027e30
   140028b6a:	jmp    0x140028b6e
   140028b6c:	xor    eax,eax
   140028b6e:	add    rsp,0x50
   140028b72:	pop    rbx
   140028b73:	ret    
   140028b74:	rex push rbx
   140028b76:	sub    rsp,0x20
   140028b7a:	and    DWORD PTR [rip+0x6008f],0x0        # 0x140088c10
   140028b81:	cmp    QWORD PTR [rcx+0x98],0x0
   140028b89:	mov    rbx,rcx
   140028b8c:	je     0x140028ba3
   140028b8e:	mov    rcx,QWORD PTR [rcx+0x98]
   140028b95:	mov    edx,0xfffffd3f
   140028b9a:	mov    rax,QWORD PTR [rcx]
   140028b9d:	call   QWORD PTR [rax+0xa0]
   140028ba3:	xor    r8d,r8d
   140028ba6:	xor    edx,edx
   140028ba8:	mov    rcx,rbx
   140028bab:	add    rsp,0x20
   140028baf:	pop    rbx
   140028bb0:	jmp    0x1400272d4
   140028bb5:	int3   
   140028bb6:	int3   
   140028bb7:	int3   
   140028bb8:	mov    QWORD PTR [rsp+0x8],rcx
   140028bbd:	push   rbx
   140028bbe:	push   rsi
   140028bbf:	push   rdi
   140028bc0:	push   r12
   140028bc2:	sub    rsp,0x38
   140028bc6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028bcf:	mov    rsi,rcx
   140028bd2:	xor    ebx,ebx
   140028bd4:	cmp    rcx,rbx
   140028bd7:	jne    0x140028be3
   140028bd9:	mov    eax,0x80004003
   140028bde:	jmp    0x140028c67
   140028be3:	mov    QWORD PTR [rcx],rbx
   140028be6:	mov    r12d,0x8007000e
   140028bec:	mov    DWORD PTR [rsp+0x68],r12d
   140028bf1:	mov    QWORD PTR [rsp+0x70],rbx
   140028bf6:	mov    ecx,0x30
   140028bfb:	call   0x14001ac0c
   140028c00:	mov    rdi,rax
   140028c03:	mov    QWORD PTR [rsp+0x78],rax
   140028c08:	cmp    rax,rbx
   140028c0b:	je     0x140028c3f
   140028c0d:	mov    DWORD PTR [rax+0x28],ebx
   140028c10:	mov    QWORD PTR [rax+0x10],rbx
   140028c14:	mov    QWORD PTR [rax+0x18],rbx
   140028c18:	lea    rax,[rip+0x412c9]        # 0x140069ee8
   140028c1f:	mov    QWORD PTR [rdi],rax
   140028c22:	lea    rax,[rip+0x41297]        # 0x140069ec0
   140028c29:	mov    QWORD PTR [rdi+0x8],rax
   140028c2d:	lea    rax,[rip+0x4125c]        # 0x140069e90
   140028c34:	mov    QWORD PTR [rdi+0x20],rax
   140028c38:	call   0x14002d59c
   140028c3d:	jmp    0x140028c42
   140028c3f:	mov    rdi,rbx
   140028c42:	mov    QWORD PTR [rsp+0x70],rdi
   140028c47:	jmp    0x140028c5a
   140028c49:	xor    ebx,ebx
   140028c4b:	mov    rsi,QWORD PTR [rsp+0x60]
   140028c50:	mov    r12d,DWORD PTR [rsp+0x68]
   140028c55:	mov    rdi,QWORD PTR [rsp+0x70]
   140028c5a:	cmp    rdi,rbx
   140028c5d:	cmovne r12d,ebx
   140028c61:	mov    QWORD PTR [rsi],rdi
   140028c64:	mov    eax,r12d
   140028c67:	add    rsp,0x38
   140028c6b:	pop    r12
   140028c6d:	pop    rdi
   140028c6e:	pop    rsi
   140028c6f:	pop    rbx
   140028c70:	ret    
   140028c71:	int3   
   140028c72:	int3   
   140028c73:	int3   
   140028c74:	int3   
   140028c75:	int3   
   140028c76:	int3   
   140028c77:	int3   
   140028c78:	rex push rbp
   140028c7a:	sub    rsp,0x20
   140028c7e:	mov    rbp,rdx
   140028c81:	mov    rcx,QWORD PTR [rbp+0x78]
   140028c85:	call   0x14001ac50
   140028c8a:	add    rsp,0x20
   140028c8e:	pop    rbp
   140028c8f:	ret    
   140028c90:	int3   
   140028c91:	int3   
   140028c92:	int3   
   140028c93:	int3   
   140028c94:	int3   
   140028c95:	int3   
   140028c96:	int3   
   140028c97:	int3   
   140028c98:	mov    QWORD PTR [rsp+0x10],rdx
   140028c9d:	push   rbp
   140028c9e:	sub    rsp,0x20
   140028ca2:	mov    rbp,rdx
   140028ca5:	mov    rcx,QWORD PTR [rbp+0x28]
   140028ca9:	call   0x1400207b8
   140028cae:	nop
   140028caf:	lea    rax,[rip+0xffffffffffffff93]        # 0x140028c49
   140028cb6:	jmp    0x140028cb8
   140028cb8:	add    rsp,0x20
   140028cbc:	pop    rbp
   140028cbd:	ret    
   140028cbe:	int3   
   140028cbf:	int3   
   140028cc0:	sub    rsp,0x468
   140028cc7:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140028cd0:	mov    rax,QWORD PTR [rip+0x5e099]        # 0x140086d70
   140028cd7:	xor    rax,rsp
   140028cda:	mov    QWORD PTR [rsp+0x450],rax
   140028ce2:	call   0x140021a70
   140028ce7:	mov    rcx,QWORD PTR [rax+0x8]
   140028ceb:	call   0x14001c464
   140028cf0:	nop
   140028cf1:	mov    rcx,QWORD PTR [rsp+0x450]
   140028cf9:	xor    rcx,rsp
   140028cfc:	call   0x140046470
   140028d01:	add    rsp,0x468
   140028d08:	ret    
   140028d09:	int3   
   140028d0a:	int3   
   140028d0b:	int3   
   140028d0c:	int3   
   140028d0d:	int3   
   140028d0e:	int3   
   140028d0f:	int3   
   140028d10:	mov    QWORD PTR [rsp+0x10],rdx
   140028d15:	push   rbx
   140028d16:	push   rbp
   140028d17:	sub    rsp,0x38
   140028d1b:	mov    rbp,rdx
   140028d1e:	call   0x14002b874
   140028d23:	mov    r11,rax
   140028d26:	xor    ecx,ecx
   140028d28:	test   rax,rax
   140028d2b:	setne  cl
   140028d2e:	test   ecx,ecx
   140028d30:	jne    0x140028d3d
   140028d32:	mov    ecx,0x80004005
   140028d37:	call   0x140001430
   140028d3c:	int3   
   140028d3d:	mov    rax,QWORD PTR [rax]
   140028d40:	mov    rcx,r11
   140028d43:	call   QWORD PTR [rax+0x18]
   140028d46:	add    rax,0x18
   140028d4a:	mov    QWORD PTR [rbp+0x30],rax
   140028d4e:	mov    rcx,QWORD PTR [rbp+0x38]
   140028d52:	mov    rax,QWORD PTR [rcx]
   140028d55:	xor    r9d,r9d
   140028d58:	mov    r8d,0x200
   140028d5e:	lea    rdx,[rbp+0x50]
   140028d62:	call   QWORD PTR [rax+0x18]
   140028d65:	test   eax,eax
   140028d67:	je     0x140028d9a
   140028d69:	lea    rax,[rbp+0x50]
   140028d6d:	mov    QWORD PTR [rsp+0x28],rax
   140028d72:	mov    DWORD PTR [rsp+0x20],0x443
   140028d7a:	lea    r9,[rip+0x413bf]        # 0x14006a140
   140028d81:	lea    r8,[rip+0x3f320]        # 0x1400680a8
   140028d88:	lea    rdx,[rip+0x3f2f9]        # 0x140068088
   140028d8f:	lea    rcx,[rbp+0x30]
   140028d93:	call   0x140004180
   140028d98:	jmp    0x140028dc0
   140028d9a:	mov    DWORD PTR [rsp+0x20],0x443
   140028da2:	lea    r9,[rip+0x41397]        # 0x14006a140
   140028da9:	lea    r8,[rip+0x3f2f8]        # 0x1400680a8
   140028db0:	lea    rdx,[rip+0x3f2b9]        # 0x140068070
   140028db7:	lea    rcx,[rbp+0x30]
   140028dbb:	call   0x140004180
   140028dc0:	xor    r8d,r8d
   140028dc3:	xor    edx,edx
   140028dc5:	mov    rbx,QWORD PTR [rbp+0x30]
   140028dc9:	mov    rcx,rbx
   140028dcc:	call   0x14001dd9c
   140028dd1:	nop
   140028dd2:	lea    rdx,[rbx-0x18]
   140028dd6:	or     eax,0xffffffff
   140028dd9:	lock xadd DWORD PTR [rdx+0x10],eax
   140028dde:	add    eax,0xffffffff
   140028de1:	test   eax,eax
   140028de3:	jg     0x140028dee
   140028de5:	mov    rcx,QWORD PTR [rdx]
   140028de8:	mov    rax,QWORD PTR [rcx]
   140028deb:	call   QWORD PTR [rax+0x8]
   140028dee:	mov    rcx,QWORD PTR [rbp+0x38]
   140028df2:	mov    rax,QWORD PTR [rcx]
   140028df5:	mov    edx,0x1
   140028dfa:	call   QWORD PTR [rax+0x8]
   140028dfd:	nop
   140028dfe:	lea    rax,[rip+0xfffffffffffffeec]        # 0x140028cf1
   140028e05:	jmp    0x140028e07
   140028e07:	add    rsp,0x38
   140028e0b:	pop    rbp
   140028e0c:	pop    rbx
   140028e0d:	ret    
   140028e0e:	int3   
   140028e0f:	int3   
   140028e10:	rex push rbp
   140028e12:	sub    rsp,0x20
   140028e16:	mov    rbp,rdx
   140028e19:	lea    rcx,[rbp+0x30]
   140028e1d:	call   0x1400010c0
   140028e22:	add    rsp,0x20
   140028e26:	pop    rbp
   140028e27:	ret    
   140028e28:	rex push rdi
   140028e2a:	sub    rsp,0x30
   140028e2e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028e37:	mov    QWORD PTR [rsp+0x40],rbx
   140028e3c:	mov    QWORD PTR [rsp+0x48],rbp
   140028e41:	mov    QWORD PTR [rsp+0x50],rsi
   140028e46:	mov    edi,r8d
   140028e49:	mov    rsi,rdx
   140028e4c:	mov    rbx,rcx
   140028e4f:	call   0x140021a70
   140028e54:	mov    rbp,QWORD PTR [rax+0x8]
   140028e58:	call   0x140021a70
   140028e5d:	mov    rcx,QWORD PTR [rax+0x8]
   140028e61:	call   0x14001c444
   140028e66:	nop
   140028e67:	mov    rcx,rbx
   140028e6a:	call   0x140027d60
   140028e6f:	mov    rcx,rbx
   140028e72:	call   0x1400271c8
   140028e77:	test   rax,rax
   140028e7a:	jne    0x140028e82
   140028e7c:	call   0x1400208f8
   140028e81:	int3   
   140028e82:	mov    r9,rsi
   140028e85:	mov    r8d,edi
   140028e88:	mov    rdx,QWORD PTR [rbp+0xc8]
   140028e8f:	mov    rcx,QWORD PTR [rax+0x40]
   140028e93:	call   QWORD PTR [rip+0x3b9af]        # 0x140064848
   140028e99:	test   eax,eax
   140028e9b:	jne    0x140028eae
   140028e9d:	or     r8d,0xffffffff
   140028ea1:	xor    edx,edx
   140028ea3:	mov    ecx,0xf107
   140028ea8:	call   0x14001ddf4
   140028ead:	nop
   140028eae:	lea    rcx,[rsp+0x58]
   140028eb3:	mov    rbx,QWORD PTR [rsp+0x40]
   140028eb8:	mov    rbp,QWORD PTR [rsp+0x48]
   140028ebd:	mov    rsi,QWORD PTR [rsp+0x50]
   140028ec2:	add    rsp,0x30
   140028ec6:	pop    rdi
   140028ec7:	jmp    0x140028cc0
   140028ecc:	int3   
   140028ecd:	int3   
   140028ece:	int3   
   140028ecf:	int3   
   140028ed0:	int3   
   140028ed1:	int3   
   140028ed2:	int3   
   140028ed3:	int3   
   140028ed4:	int3   
   140028ed5:	int3   
   140028ed6:	int3   
   140028ed7:	int3   
   140028ed8:	rex push rbp
   140028eda:	sub    rsp,0x20
   140028ede:	mov    rbp,rdx
   140028ee1:	lea    rcx,[rbp+0x58]
   140028ee5:	call   0x140028cc0
   140028eea:	add    rsp,0x20
   140028eee:	pop    rbp
   140028eef:	ret    
   140028ef0:	rex push rdi
   140028ef2:	sub    rsp,0x30
   140028ef6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028eff:	mov    QWORD PTR [rsp+0x40],rbx
   140028f04:	mov    QWORD PTR [rsp+0x48],rbp
   140028f09:	mov    QWORD PTR [rsp+0x50],rsi
   140028f0e:	mov    edi,r8d
   140028f11:	mov    rsi,rdx
   140028f14:	mov    rbx,rcx
   140028f17:	call   0x140021a70
   140028f1c:	mov    rbp,QWORD PTR [rax+0x8]
   140028f20:	call   0x140021a70
   140028f25:	mov    rcx,QWORD PTR [rax+0x8]
   140028f29:	call   0x14001c444
   140028f2e:	nop
   140028f2f:	mov    rcx,rbx
   140028f32:	call   0x140027d60
   140028f37:	mov    rcx,rbx
   140028f3a:	call   0x1400271c8
   140028f3f:	test   rax,rax
   140028f42:	jne    0x140028f4a
   140028f44:	call   0x1400208f8
   140028f49:	int3   
   140028f4a:	mov    r9,rsi
   140028f4d:	mov    r8d,edi
   140028f50:	mov    rdx,QWORD PTR [rbp+0xc8]
   140028f57:	mov    rcx,QWORD PTR [rax+0x40]
   140028f5b:	call   0x140026ed8
   140028f60:	test   rax,rax
   140028f63:	jne    0x140028f76
   140028f65:	or     r8d,0xffffffff
   140028f69:	xor    edx,edx
   140028f6b:	mov    ecx,0xf107
   140028f70:	call   0x14001ddf4
   140028f75:	nop
   140028f76:	lea    rcx,[rsp+0x58]
   140028f7b:	mov    rbx,QWORD PTR [rsp+0x40]
   140028f80:	mov    rbp,QWORD PTR [rsp+0x48]
   140028f85:	mov    rsi,QWORD PTR [rsp+0x50]
   140028f8a:	add    rsp,0x30
   140028f8e:	pop    rdi
   140028f8f:	jmp    0x140028cc0
   140028f94:	int3   
   140028f95:	int3   
   140028f96:	int3   
   140028f97:	int3   
   140028f98:	int3   
   140028f99:	int3   
   140028f9a:	int3   
   140028f9b:	int3   
   140028f9c:	int3   
   140028f9d:	int3   
   140028f9e:	int3   
   140028f9f:	int3   
   140028fa0:	rex push rbp
   140028fa2:	sub    rsp,0x20
   140028fa6:	mov    rbp,rdx
   140028fa9:	lea    rcx,[rbp+0x58]
   140028fad:	call   0x140028cc0
   140028fb2:	add    rsp,0x20
   140028fb6:	pop    rbp
   140028fb7:	ret    
   140028fb8:	rex push rbx
   140028fba:	sub    rsp,0x30
   140028fbe:	cmp    QWORD PTR [rcx+0xa0],0x0
   140028fc6:	mov    ebx,edx
   140028fc8:	je     0x140029001
   140028fca:	mov    rcx,QWORD PTR [rcx+0x40]
   140028fce:	add    edx,0x2000
   140028fd4:	call   QWORD PTR [rip+0x3bb96]        # 0x140064b70
   140028fda:	lea    ecx,[rbx-0x132]
   140028fe0:	cmp    ecx,0x6
   140028fe3:	mov    r11,rax
   140028fe6:	ja     0x140028fed
   140028fe8:	test   rax,rax
   140028feb:	je     0x140029010
   140028fed:	mov    rax,QWORD PTR [rsp+0x60]
   140028ff2:	test   rax,rax
   140028ff5:	je     0x140028ffa
   140028ff7:	mov    QWORD PTR [rax],r11
   140028ffa:	mov    eax,0x1
   140028fff:	jmp    0x140029010
   140029001:	mov    rax,QWORD PTR [rsp+0x60]
   140029006:	mov    QWORD PTR [rsp+0x20],rax
   14002900b:	call   0x140028a48
   140029010:	add    rsp,0x30
   140029014:	pop    rbx
   140029015:	ret    
   140029016:	int3   
   140029017:	int3   
   140029018:	rex push rdi
   14002901a:	sub    rsp,0x30
   14002901e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140029027:	mov    QWORD PTR [rsp+0x40],rbx
   14002902c:	mov    QWORD PTR [rsp+0x48],rbp
   140029031:	mov    QWORD PTR [rsp+0x58],rsi
   140029036:	mov    rsi,r9
   140029039:	mov    rbp,rdx
   14002903c:	mov    rdi,rcx
   14002903f:	mov    ebx,0x80004005
   140029044:	cmp    r8d,0xfffffffc
   140029048:	jne    0x1400290ef
   14002904e:	mov    rax,QWORD PTR [rcx]
   140029051:	call   QWORD PTR [rax+0x110]
   140029057:	mov    ebx,eax
   140029059:	test   eax,eax
   14002905b:	js     0x1400290ef
   140029061:	mov    r8,QWORD PTR [rdi+0x58]
   140029065:	test   r8,r8
   140029068:	jne    0x1400290db
   14002906a:	lea    rcx,[rsp+0x20]
   14002906f:	call   0x140028bb8
   140029074:	mov    ebx,eax
   140029076:	test   eax,eax
   140029078:	js     0x1400290ef
   14002907a:	and    QWORD PTR [rsp+0x50],0x0
   140029080:	mov    rcx,QWORD PTR [rsp+0x20]
   140029085:	mov    rax,QWORD PTR [rcx]
   140029088:	lea    r8,[rsp+0x50]
   14002908d:	lea    rdx,[rip+0x407e4]        # 0x140069878
   140029094:	call   QWORD PTR [rax]
   140029096:	test   eax,eax
   140029098:	js     0x1400290c7
   14002909a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002909f:	mov    QWORD PTR [rdi+0x58],rcx
   1400290a3:	mov    rax,QWORD PTR [rcx]
   1400290a6:	lea    r8,[rdi+0x68]
   1400290aa:	lea    rdx,[rdi+0x60]
   1400290ae:	call   QWORD PTR [rax+0x18]
   1400290b1:	mov    r8,QWORD PTR [rdi+0x58]
   1400290b5:	mov    rdx,rbp
   1400290b8:	lea    rcx,[rip+0x407a9]        # 0x140069868
   1400290bf:	call   0x1400630f1
   1400290c4:	mov    QWORD PTR [rsi],rax
   1400290c7:	xor    ebx,ebx
   1400290c9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400290ce:	test   rcx,rcx
   1400290d1:	je     0x1400290ef
   1400290d3:	mov    rax,QWORD PTR [rcx]
   1400290d6:	call   QWORD PTR [rax+0x10]
   1400290d9:	jmp    0x1400290ef
   1400290db:	mov    rdx,rbp
   1400290de:	lea    rcx,[rip+0x40783]        # 0x140069868
   1400290e5:	call   0x1400630f1
   1400290ea:	mov    QWORD PTR [rsi],rax
   1400290ed:	xor    ebx,ebx
   1400290ef:	mov    eax,ebx
   1400290f1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400290f6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400290fb:	mov    rsi,QWORD PTR [rsp+0x58]
   140029100:	add    rsp,0x30
   140029104:	pop    rdi
   140029105:	ret    
   140029106:	int3   
   140029107:	int3   
   140029108:	rex push rbp
   14002910a:	sub    rsp,0x20
   14002910e:	mov    rbp,rdx
   140029111:	lea    rcx,[rbp+0x50]
   140029115:	call   0x140024cf0
   14002911a:	add    rsp,0x20
   14002911e:	pop    rbp
   14002911f:	ret    
   140029120:	lea    rax,[rip+0x410a1]        # 0x14006a1c8
   140029127:	ret    
   140029128:	mov    rax,rsp
   14002912b:	push   rdi
   14002912c:	sub    rsp,0x90
   140029133:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002913c:	mov    QWORD PTR [rax+0x8],rbx
   140029140:	mov    QWORD PTR [rax+0x10],rsi
   140029144:	mov    rdi,rcx
   140029147:	lea    r8,[rax-0x68]
   14002914b:	mov    rdx,QWORD PTR [rcx+0x40]
   14002914f:	mov    rcx,QWORD PTR [rcx+0x18]
   140029153:	call   0x140023250
   140029158:	xor    ebx,ebx
   14002915a:	cmp    eax,ebx
   14002915c:	je     0x140029163
   14002915e:	lea    eax,[rbx+0x1]
   140029161:	jmp    0x1400291cf
   140029163:	mov    rcx,rdi
   140029166:	call   0x140023164
   14002916b:	cmp    ax,bx
   14002916e:	jne    0x140029174
   140029170:	xor    eax,eax
   140029172:	jmp    0x1400291cf
   140029174:	call   0x140021a70
   140029179:	cmp    BYTE PTR [rax+0x28],bl
   14002917c:	je     0x1400291ca
   14002917e:	mov    ecx,0x1
   140029183:	call   0x14002d810
   140029188:	nop
   140029189:	call   0x140021a70
   14002918e:	mov    rdi,QWORD PTR [rdi+0x40]
   140029192:	lea    rsi,[rax+0x58]
   140029196:	cmp    rdi,rbx
   140029199:	je     0x1400291a5
   14002919b:	mov    rcx,rdi
   14002919e:	call   0x140048610
   1400291a3:	mov    ebx,eax
   1400291a5:	mov    r8d,ebx
   1400291a8:	mov    rdx,rdi
   1400291ab:	mov    rcx,rsi
   1400291ae:	call   0x14001d2b8
   1400291b3:	mov    dx,0xa
   1400291b7:	mov    rcx,rsi
   1400291ba:	call   0x140020b9c
   1400291bf:	nop
   1400291c0:	mov    ecx,0x1
   1400291c5:	call   0x14002d8a4
   1400291ca:	mov    eax,0x1
   1400291cf:	lea    r11,[rsp+0x90]
   1400291d7:	mov    rbx,QWORD PTR [r11+0x10]
   1400291db:	mov    rsi,QWORD PTR [r11+0x18]
   1400291df:	mov    rsp,r11
   1400291e2:	pop    rdi
   1400291e3:	ret    
   1400291e4:	int3   
   1400291e5:	int3   
   1400291e6:	int3   
   1400291e7:	int3   
   1400291e8:	mov    QWORD PTR [rsp+0x10],rdx
   1400291ed:	push   rbp
   1400291ee:	sub    rsp,0x20
   1400291f2:	mov    rbp,rdx
   1400291f5:	mov    ecx,0x1
   1400291fa:	call   0x14002d8a4
   1400291ff:	xor    edx,edx
   140029201:	xor    ecx,ecx
   140029203:	call   0x140048db0
   140029208:	nop
   140029209:	add    rsp,0x20
   14002920d:	pop    rbp
   14002920e:	ret    
   14002920f:	int3   
   140029210:	mov    QWORD PTR [rsp+0x8],rbx
   140029215:	mov    QWORD PTR [rsp+0x18],rbp
   14002921a:	push   rsi
   14002921b:	push   rdi
   14002921c:	push   r12
   14002921e:	push   r13
   140029220:	push   r14
   140029222:	sub    rsp,0x70
   140029226:	xor    r13d,r13d
   140029229:	mov    rbx,rdx
   14002922c:	mov    rsi,rcx
   14002922f:	cmp    rdx,r13
   140029232:	mov    edi,0x1
   140029237:	je     0x14002934f
   14002923d:	mov    r14d,0x143
   140029243:	movzx  ebp,WORD PTR [rbx]
   140029246:	cmp    bp,r13w
   14002924a:	je     0x14002934a
   140029250:	movzx  eax,WORD PTR [rbx+0x2]
   140029254:	mov    r12d,DWORD PTR [rbx+0x4]
   140029258:	add    rbx,0x8
   14002925c:	cmp    ax,0x1234
   140029260:	je     0x1400292b3
   140029262:	cmp    ax,0x401
   140029266:	jne    0x14002926e
   140029268:	mov    ax,0x180
   14002926c:	jmp    0x14002928d
   14002926e:	cmp    ax,0x403
   140029272:	cmove  ax,r14w
   140029277:	cmp    ax,0x40b
   14002927b:	je     0x1400292b3
   14002927d:	cmp    ax,0x180
   140029281:	je     0x14002928d
   140029283:	cmp    ax,r14w
   140029287:	jne    0x14002933b
   14002928d:	mov    rcx,QWORD PTR [rsi+0x40]
   140029291:	movzx  r8d,ax
   140029295:	movzx  edx,bp
   140029298:	xor    r9d,r9d
   14002929b:	mov    QWORD PTR [rsp+0x20],rbx
   1400292a0:	call   QWORD PTR [rip+0x3b592]        # 0x140064838
   1400292a6:	cmp    rax,0xffffffffffffffff
   1400292aa:	cmove  edi,r13d
   1400292ae:	jmp    0x14002933b
   1400292b3:	xor    edx,edx
   1400292b5:	lea    rcx,[rsp+0x38]
   1400292ba:	lea    r8d,[rdx+0x30]
   1400292be:	call   0x140047720
   1400292c3:	or     QWORD PTR [rsp+0x38],0xffffffffffffffff
   1400292c9:	lea    rcx,[rsp+0xa8]
   1400292d1:	mov    rdx,rbx
   1400292d4:	mov    DWORD PTR [rsp+0x30],0x1
   1400292dc:	call   0x14000c360
   1400292e1:	mov    r11,QWORD PTR [rsp+0xa8]
   1400292e9:	mov    rcx,QWORD PTR [rsi+0x40]
   1400292ed:	lea    rax,[rsp+0x30]
   1400292f2:	movzx  edx,bp
   1400292f5:	xor    r9d,r9d
   1400292f8:	mov    r8d,0x40b
   1400292fe:	mov    QWORD PTR [rsp+0x40],r11
   140029303:	mov    QWORD PTR [rsp+0x20],rax
   140029308:	call   QWORD PTR [rip+0x3b532]        # 0x140064840
   14002930e:	mov    rdx,QWORD PTR [rsp+0xa8]
   140029316:	cmp    rax,0xffffffffffffffff
   14002931a:	cmove  edi,r13d
   14002931e:	add    rdx,0xffffffffffffffe8
   140029322:	or     eax,0xffffffff
   140029325:	lock xadd DWORD PTR [rdx+0x10],eax
   14002932a:	add    eax,0xffffffff
   14002932d:	cmp    eax,r13d
   140029330:	jg     0x14002933b
   140029332:	mov    rcx,QWORD PTR [rdx]
   140029335:	mov    rax,QWORD PTR [rcx]
   140029338:	call   QWORD PTR [rax+0x8]
   14002933b:	add    rbx,r12
   14002933e:	cmp    edi,r13d
   140029341:	mov    rax,r12
   140029344:	jne    0x140029243
   14002934a:	cmp    edi,r13d
   14002934d:	je     0x14002936d
   14002934f:	mov    rcx,QWORD PTR [rsi+0x40]
   140029353:	xor    r9d,r9d
   140029356:	xor    r8d,r8d
   140029359:	mov    edx,0x364
   14002935e:	mov    DWORD PTR [rsp+0x28],r13d
   140029363:	mov    DWORD PTR [rsp+0x20],r13d
   140029368:	call   0x1400264d4
   14002936d:	lea    r11,[rsp+0x70]
   140029372:	mov    eax,edi
   140029374:	mov    rbx,QWORD PTR [r11+0x30]
   140029378:	mov    rbp,QWORD PTR [r11+0x40]
   14002937c:	mov    rsp,r11
   14002937f:	pop    r14
   140029381:	pop    r13
   140029383:	pop    r12
   140029385:	pop    rdi
   140029386:	pop    rsi
   140029387:	ret    
   140029388:	mov    QWORD PTR [rsp+0x8],rbx
   14002938d:	push   rdi
   14002938e:	sub    rsp,0x20
   140029392:	mov    ebx,r8d
   140029395:	mov    rdi,rcx
   140029398:	mov    QWORD PTR [rcx+0x40],rdx
   14002939c:	call   0x140021a70
   1400293a1:	movzx  edx,bx
   1400293a4:	mov    rcx,QWORD PTR [rax+0x18]
   1400293a8:	call   QWORD PTR [rip+0x3b7a2]        # 0x140064b50
   1400293ae:	test   rax,rax
   1400293b1:	mov    QWORD PTR [rdi+0x20],rax
   1400293b5:	jne    0x1400293c8
   1400293b7:	mov    edx,0x7f00
   1400293bc:	xor    ecx,ecx
   1400293be:	call   QWORD PTR [rip+0x3b78c]        # 0x140064b50
   1400293c4:	mov    QWORD PTR [rdi+0x20],rax
   1400293c8:	mov    rcx,rdi
   1400293cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400293d0:	add    rsp,0x20
   1400293d4:	pop    rdi
   1400293d5:	jmp    0x140029128
   1400293da:	int3   
   1400293db:	int3   
   1400293dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400293e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400293e6:	push   rsi
   1400293e7:	push   rdi
   1400293e8:	push   r12
   1400293ea:	sub    rsp,0x70
   1400293ee:	mov    edi,ecx
   1400293f0:	call   0x140021a70
   1400293f5:	mov    edx,DWORD PTR [rax+0x2c]
   1400293f8:	mov    rbp,rax
   1400293fb:	not    edx
   1400293fd:	and    edi,edx
   1400293ff:	jne    0x140029409
   140029401:	lea    eax,[rdi+0x1]
   140029404:	jmp    0x14002976f
   140029409:	xor    r12d,r12d
   14002940c:	lea    rcx,[rsp+0x20]
   140029411:	xor    edx,edx
   140029413:	lea    r8d,[r12+0x48]
   140029418:	mov    ebx,r12d
   14002941b:	call   0x140047720
   140029420:	mov    r11,QWORD PTR [rip+0x3b501]        # 0x140064928
   140029427:	mov    QWORD PTR [rsp+0x28],r11
   14002942c:	call   0x140021a70
   140029431:	lea    esi,[r12+0x1]
   140029436:	test   sil,dil
   140029439:	mov    rcx,QWORD PTR [rax+0x10]
   14002943d:	mov    rax,QWORD PTR [rip+0x6311c]        # 0x14008c560
   140029444:	mov    QWORD PTR [rsp+0x48],rax
   140029449:	mov    QWORD PTR [rsp+0x38],rcx
   14002944e:	mov    DWORD PTR [rsp+0x98],0x8
   140029459:	je     0x14002947f
   14002945b:	lea    rax,[rip+0x3fc76]        # 0x1400690d8
   140029462:	lea    rcx,[rsp+0x20]
   140029467:	mov    DWORD PTR [rsp+0x20],0xb
   14002946f:	mov    QWORD PTR [rsp+0x60],rax
   140029474:	call   0x140029128
   140029479:	cmp    eax,r12d
   14002947c:	cmovne ebx,esi
   14002947f:	test   dil,0x20
   140029483:	je     0x1400294ab
   140029485:	or     DWORD PTR [rsp+0x20],0x8b
   14002948d:	lea    rax,[rip+0x3fccc]        # 0x140069160
   140029494:	lea    rcx,[rsp+0x20]
   140029499:	mov    QWORD PTR [rsp+0x60],rax
   14002949e:	call   0x140029128
   1400294a3:	cmp    eax,r12d
   1400294a6:	je     0x1400294ab
   1400294a8:	or     ebx,0x20
   1400294ab:	test   dil,0x2
   1400294af:	je     0x1400294dd
   1400294b1:	lea    rax,[rip+0x3fc38]        # 0x1400690f0
   1400294b8:	lea    rcx,[rsp+0x20]
   1400294bd:	mov    DWORD PTR [rsp+0x20],r12d
   1400294c2:	mov    QWORD PTR [rsp+0x60],rax
   1400294c7:	mov    QWORD PTR [rsp+0x50],0x10
   1400294d0:	call   0x140029128
   1400294d5:	cmp    eax,r12d
   1400294d8:	je     0x1400294dd
   1400294da:	or     ebx,0x2
   1400294dd:	test   dil,0x4
   1400294e1:	je     0x14002950f
   1400294e3:	lea    rdx,[rip+0x3fc2e]        # 0x140069118
   1400294ea:	lea    rcx,[rsp+0x20]
   1400294ef:	mov    r8d,0x7a01
   1400294f5:	mov    DWORD PTR [rsp+0x20],0x8
   1400294fd:	mov    QWORD PTR [rsp+0x50],r12
   140029502:	call   0x140029388
   140029507:	cmp    eax,r12d
   14002950a:	je     0x14002950f
   14002950c:	or     ebx,0x4
   14002950f:	test   dil,0x8
   140029513:	je     0x140029545
   140029515:	lea    rdx,[rip+0x3fc1c]        # 0x140069138
   14002951c:	lea    rcx,[rsp+0x20]
   140029521:	mov    r8d,0x7a02
   140029527:	mov    DWORD PTR [rsp+0x20],0xb
   14002952f:	mov    QWORD PTR [rsp+0x50],0x6
   140029538:	call   0x140029388
   14002953d:	cmp    eax,r12d
   140029540:	je     0x140029545
   140029542:	or     ebx,0x8
   140029545:	test   dil,0x10
   140029549:	je     0x140029570
   14002954b:	lea    rcx,[rsp+0x98]
   140029553:	mov    edx,0x3fc0
   140029558:	mov    DWORD PTR [rsp+0x9c],0xff
   140029563:	call   0x140025e98
   140029568:	or     ebx,eax
   14002956a:	and    edi,0xffffc03f
   140029570:	test   dil,0x40
   140029574:	je     0x140029595
   140029576:	lea    rcx,[rsp+0x98]
   14002957e:	mov    edx,0x40
   140029583:	mov    DWORD PTR [rsp+0x9c],0x10
   14002958e:	call   0x140025e98
   140029593:	or     ebx,eax
   140029595:	test   dil,dil
   140029598:	jns    0x1400295b9
   14002959a:	lea    rcx,[rsp+0x98]
   1400295a2:	mov    edx,0x80
   1400295a7:	mov    DWORD PTR [rsp+0x9c],0x2
   1400295b2:	call   0x140025e98
   1400295b7:	or     ebx,eax
   1400295b9:	bt     edi,0x8
   1400295bd:	jae    0x1400295de
   1400295bf:	lea    rcx,[rsp+0x98]
   1400295c7:	mov    edx,0x100
   1400295cc:	mov    DWORD PTR [rsp+0x9c],0x8
   1400295d7:	call   0x140025e98
   1400295dc:	or     ebx,eax
   1400295de:	bt     edi,0x9
   1400295e2:	jae    0x140029603
   1400295e4:	lea    rcx,[rsp+0x98]
   1400295ec:	mov    edx,0x200
   1400295f1:	mov    DWORD PTR [rsp+0x9c],0x20
   1400295fc:	call   0x140025e98
   140029601:	or     ebx,eax
   140029603:	bt     edi,0xa
   140029607:	jae    0x140029624
   140029609:	lea    rcx,[rsp+0x98]
   140029611:	mov    edx,0x400
   140029616:	mov    DWORD PTR [rsp+0x9c],esi
   14002961d:	call   0x140025e98
   140029622:	or     ebx,eax
   140029624:	bt     edi,0xb
   140029628:	mov    esi,0x800
   14002962d:	jae    0x14002964b
   14002962f:	lea    rcx,[rsp+0x98]
   140029637:	mov    edx,esi
   140029639:	mov    DWORD PTR [rsp+0x9c],0x40
   140029644:	call   0x140025e98
   140029649:	or     ebx,eax
   14002964b:	bt     edi,0xc
   14002964f:	jae    0x140029670
   140029651:	lea    rcx,[rsp+0x98]
   140029659:	mov    edx,0x1000
   14002965e:	mov    DWORD PTR [rsp+0x9c],0x4
   140029669:	call   0x140025e98
   14002966e:	or     ebx,eax
   140029670:	bt     edi,0xd
   140029674:	jae    0x140029695
   140029676:	lea    rcx,[rsp+0x98]
   14002967e:	mov    edx,0x2000
   140029683:	mov    DWORD PTR [rsp+0x9c],0x80
   14002968e:	call   0x140025e98
   140029693:	or     ebx,eax
   140029695:	bt     edi,0xe
   140029699:	jae    0x1400296b6
   14002969b:	lea    rcx,[rsp+0x98]
   1400296a3:	mov    edx,0x4000
   1400296a8:	mov    DWORD PTR [rsp+0x9c],esi
   1400296af:	call   0x140025e98
   1400296b4:	or     ebx,eax
   1400296b6:	bt     edi,0xf
   1400296ba:	mov    esi,0x8000
   1400296bf:	jae    0x1400296dd
   1400296c1:	lea    rcx,[rsp+0x98]
   1400296c9:	mov    edx,esi
   1400296cb:	mov    DWORD PTR [rsp+0x9c],0x400
   1400296d6:	call   0x140025e98
   1400296db:	or     ebx,eax
   1400296dd:	bt     edi,0x10
   1400296e1:	jae    0x140029702
   1400296e3:	lea    rcx,[rsp+0x98]
   1400296eb:	mov    edx,0x10000
   1400296f0:	mov    DWORD PTR [rsp+0x9c],0x200
   1400296fb:	call   0x140025e98
   140029700:	or     ebx,eax
   140029702:	bt     edi,0x11
   140029706:	jae    0x140029727
   140029708:	lea    rcx,[rsp+0x98]
   140029710:	mov    edx,0x20000
   140029715:	mov    DWORD PTR [rsp+0x9c],0x100
   140029720:	call   0x140025e98
   140029725:	or     ebx,eax
   140029727:	bt     edi,0x12
   14002972b:	jae    0x140029748
   14002972d:	lea    rcx,[rsp+0x98]
   140029735:	mov    edx,0x40000
   14002973a:	mov    DWORD PTR [rsp+0x9c],esi
   140029741:	call   0x140025e98
   140029746:	or     ebx,eax
   140029748:	or     DWORD PTR [rbp+0x2c],ebx
   14002974b:	mov    edx,DWORD PTR [rbp+0x2c]
   14002974e:	mov    eax,0x3fc0
   140029753:	mov    ecx,edx
   140029755:	and    ecx,eax
   140029757:	cmp    ecx,eax
   140029759:	jne    0x140029764
   14002975b:	or     edx,0x10
   14002975e:	or     ebx,0x10
   140029761:	mov    DWORD PTR [rbp+0x2c],edx
   140029764:	and    ebx,edi
   140029766:	cmp    ebx,edi
   140029768:	sete   r12b
   14002976c:	mov    eax,r12d
   14002976f:	lea    r11,[rsp+0x70]
   140029774:	mov    rbx,QWORD PTR [r11+0x20]
   140029778:	mov    rbp,QWORD PTR [r11+0x30]
   14002977c:	mov    rsp,r11
   14002977f:	pop    r12
   140029781:	pop    rdi
   140029782:	pop    rsi
   140029783:	ret    
   140029784:	rex push rbx
   140029786:	sub    rsp,0x20
   14002978a:	cmp    QWORD PTR [rdx+0x40],0x0
   14002978f:	mov    rbx,rdx
   140029792:	jne    0x1400297a9
   140029794:	mov    ecx,0x1
   140029799:	call   0x1400293dc
   14002979e:	lea    r11,[rip+0x3f933]        # 0x1400690d8
   1400297a5:	mov    QWORD PTR [rbx+0x40],r11
   1400297a9:	mov    eax,0x1
   1400297ae:	add    rsp,0x20
   1400297b2:	pop    rbx
   1400297b3:	ret    
   1400297b4:	mov    rax,rsp
   1400297b7:	mov    QWORD PTR [rax+0x8],rbx
   1400297bb:	mov    QWORD PTR [rax+0x10],rbp
   1400297bf:	mov    QWORD PTR [rax+0x18],rsi
   1400297c3:	mov    QWORD PTR [rax+0x20],rdi
   1400297c7:	push   r12
   1400297c9:	sub    rsp,0x20
   1400297cd:	xor    edi,edi
   1400297cf:	xor    ebx,ebx
   1400297d1:	test   rdx,rdx
   1400297d4:	mov    rsi,rdx
   1400297d7:	mov    rbp,rcx
   1400297da:	je     0x14002981c
   1400297dc:	call   0x140021a70
   1400297e1:	mov    r8d,0xf0
   1400297e7:	mov    rdx,rsi
   1400297ea:	mov    r12,QWORD PTR [rax+0x18]
   1400297ee:	mov    rcx,r12
   1400297f1:	call   QWORD PTR [rip+0x3ae29]        # 0x140064620
   1400297f7:	test   rax,rax
   1400297fa:	je     0x14002981c
   1400297fc:	mov    rdx,rax
   1400297ff:	mov    rcx,r12
   140029802:	call   QWORD PTR [rip+0x3ae20]        # 0x140064628
   140029808:	test   rax,rax
   14002980b:	mov    rbx,rax
   14002980e:	je     0x14002983e
   140029810:	mov    rcx,rax
   140029813:	call   QWORD PTR [rip+0x3ae17]        # 0x140064630
   140029819:	mov    rdi,rax
   14002981c:	mov    rdx,rdi
   14002981f:	mov    rcx,rbp
   140029822:	call   0x140029210
   140029827:	test   rdi,rdi
   14002982a:	mov    esi,eax
   14002982c:	je     0x14002983c
   14002982e:	test   rbx,rbx
   140029831:	je     0x14002983c
   140029833:	mov    rcx,rbx
   140029836:	call   QWORD PTR [rip+0x3ac54]        # 0x140064490
   14002983c:	mov    eax,esi
   14002983e:	mov    rbx,QWORD PTR [rsp+0x30]
   140029843:	mov    rbp,QWORD PTR [rsp+0x38]
   140029848:	mov    rsi,QWORD PTR [rsp+0x40]
   14002984d:	mov    rdi,QWORD PTR [rsp+0x48]
   140029852:	add    rsp,0x20
   140029856:	pop    r12
   140029858:	ret    
   140029859:	int3   
   14002985a:	int3   
   14002985b:	int3   
   14002985c:	mov    rcx,QWORD PTR [rcx+0x98]
   140029863:	mov    rax,QWORD PTR [rcx]
   140029866:	rex.W jmp QWORD PTR [rax+0xb0]
   14002986d:	int3   
   14002986e:	int3   
   14002986f:	int3   
   140029870:	mov    rax,QWORD PTR [rcx+0xa0]
   140029877:	test   rax,rax
   14002987a:	jne    0x14002987d
   14002987c:	ret    
   14002987d:	mov    rax,QWORD PTR [rax+0x80]
   140029884:	ret    
   140029885:	int3   
   140029886:	int3   
   140029887:	int3   
   140029888:	sub    rsp,0x28
   14002988c:	cmp    QWORD PTR [rcx+0x98],0x0
   140029894:	je     0x1400298a8
   140029896:	mov    rcx,QWORD PTR [rcx+0x98]
   14002989d:	mov    rax,QWORD PTR [rcx]
   1400298a0:	call   QWORD PTR [rax+0x130]
   1400298a6:	jmp    0x1400298aa
   1400298a8:	xor    eax,eax
   1400298aa:	add    rsp,0x28
   1400298ae:	ret    
   1400298af:	int3   
   1400298b0:	sub    rsp,0x28
   1400298b4:	cmp    QWORD PTR [rcx+0x98],0x0
   1400298bc:	je     0x1400298d0
   1400298be:	mov    rcx,QWORD PTR [rcx+0x98]
   1400298c5:	mov    rax,QWORD PTR [rcx]
   1400298c8:	call   QWORD PTR [rax+0xa8]
   1400298ce:	jmp    0x1400298d2
   1400298d0:	xor    eax,eax
   1400298d2:	add    rsp,0x28
   1400298d6:	ret    
   1400298d7:	int3   
   1400298d8:	sub    rsp,0x28
   1400298dc:	cmp    QWORD PTR [rcx+0x98],0x0
   1400298e4:	jne    0x1400298fa
   1400298e6:	mov    rcx,QWORD PTR [rcx+0x40]
   1400298ea:	call   QWORD PTR [rip+0x3b0f0]        # 0x1400649e0
   1400298f0:	mov    rcx,rax
   1400298f3:	call   0x1400256f0
   1400298f8:	jmp    0x14002990a
   1400298fa:	mov    rcx,QWORD PTR [rcx+0x98]
   140029901:	mov    rax,QWORD PTR [rcx]
   140029904:	call   QWORD PTR [rax+0xe8]
   14002990a:	add    rsp,0x28
   14002990e:	ret    
   14002990f:	int3   
   140029910:	rex push rbx
   140029912:	sub    rsp,0x20
   140029916:	cmp    QWORD PTR [rcx+0x98],0x0
   14002991e:	mov    rbx,r8
   140029921:	jne    0x140029932
   140029923:	mov    rcx,QWORD PTR [rcx+0x40]
   140029927:	call   QWORD PTR [rip+0x3b0b3]        # 0x1400649e0
   14002992d:	mov    QWORD PTR [rbx],rax
   140029930:	jmp    0x140029942
   140029932:	mov    rcx,QWORD PTR [rcx+0x98]
   140029939:	mov    rax,QWORD PTR [rcx]
   14002993c:	call   QWORD PTR [rax+0xe0]
   140029942:	add    rsp,0x20
   140029946:	pop    rbx
   140029947:	ret    
   140029948:	mov    QWORD PTR [rsp+0x8],rbx
   14002994d:	push   rdi
   14002994e:	sub    rsp,0x20
   140029952:	bt     DWORD PTR [rcx+0x78],0x8
   140029957:	mov    rdi,rdx
   14002995a:	mov    rbx,rcx
   14002995d:	jae    0x140029976
   14002995f:	call   0x140021a70
   140029964:	mov    r8,rdi
   140029967:	mov    rdx,rbx
   14002996a:	mov    rcx,QWORD PTR [rax+0x68]
   14002996e:	mov    rax,QWORD PTR [rcx]
   140029971:	call   QWORD PTR [rax+0x50]
   140029974:	jmp    0x140029980
   140029976:	mov    rcx,QWORD PTR [rcx+0x40]
   14002997a:	call   QWORD PTR [rip+0x3aea8]        # 0x140064828
   140029980:	mov    rbx,QWORD PTR [rsp+0x30]
   140029985:	add    rsp,0x20
   140029989:	pop    rdi
   14002998a:	ret    
   14002998b:	int3   
   14002998c:	sub    rsp,0x28
   140029990:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029998:	jne    0x1400299ab
   14002999a:	mov    rcx,QWORD PTR [rcx+0x40]
   14002999e:	mov    edx,0xfffffff0
   1400299a3:	call   QWORD PTR [rip+0x3b057]        # 0x140064a00
   1400299a9:	jmp    0x1400299bb
   1400299ab:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400299b2:	mov    rax,QWORD PTR [rcx]
   1400299b5:	call   QWORD PTR [rax+0xf0]
   1400299bb:	add    rsp,0x28
   1400299bf:	ret    
   1400299c0:	sub    rsp,0x28
   1400299c4:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400299cc:	jne    0x1400299df
   1400299ce:	mov    rcx,QWORD PTR [rcx+0x40]
   1400299d2:	mov    edx,0xffffffec
   1400299d7:	call   QWORD PTR [rip+0x3b023]        # 0x140064a00
   1400299dd:	jmp    0x1400299ef
   1400299df:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400299e6:	mov    rax,QWORD PTR [rcx]
   1400299e9:	call   QWORD PTR [rax+0xf8]
   1400299ef:	add    rsp,0x28
   1400299f3:	ret    
   1400299f4:	sub    rsp,0x28
   1400299f8:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029a00:	jne    0x140029a0d
   140029a02:	mov    rcx,QWORD PTR [rcx+0x40]
   140029a06:	call   0x140022980
   140029a0b:	jmp    0x140029a1d
   140029a0d:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029a14:	mov    rax,QWORD PTR [rcx]
   140029a17:	call   QWORD PTR [rax+0x108]
   140029a1d:	add    rsp,0x28
   140029a21:	ret    
   140029a22:	int3   
   140029a23:	int3   
   140029a24:	mov    QWORD PTR [rsp+0x8],rbx
   140029a29:	push   rdi
   140029a2a:	sub    rsp,0x20
   140029a2e:	test   rcx,rcx
   140029a31:	mov    rdi,rdx
   140029a34:	mov    rbx,rcx
   140029a37:	jne    0x140029a3f
   140029a39:	call   0x1400208f8
   140029a3e:	int3   
   140029a3f:	mov    rcx,QWORD PTR [rcx+0x40]
   140029a43:	call   QWORD PTR [rip+0x3af8f]        # 0x1400649d8
   140029a49:	test   eax,eax
   140029a4b:	jne    0x140029a5d
   140029a4d:	cmp    QWORD PTR [rbx+0xa0],0x0
   140029a55:	jne    0x140029a76
   140029a57:	call   0x1400208f8
   140029a5c:	int3   
   140029a5d:	cmp    QWORD PTR [rbx+0xa0],0x0
   140029a65:	jne    0x140029a76
   140029a67:	mov    rcx,QWORD PTR [rbx+0x40]
   140029a6b:	mov    rdx,rdi
   140029a6e:	call   QWORD PTR [rip+0x3adac]        # 0x140064820
   140029a74:	jmp    0x140029a89
   140029a76:	mov    rcx,QWORD PTR [rbx+0xa0]
   140029a7d:	mov    rdx,rdi
   140029a80:	mov    rax,QWORD PTR [rcx]
   140029a83:	call   QWORD PTR [rax+0x110]
   140029a89:	mov    rbx,QWORD PTR [rsp+0x30]
   140029a8e:	add    rsp,0x20
   140029a92:	pop    rdi
   140029a93:	ret    
   140029a94:	sub    rsp,0x28
   140029a98:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029aa0:	jne    0x140029aae
   140029aa2:	mov    rcx,QWORD PTR [rcx+0x40]
   140029aa6:	call   QWORD PTR [rip+0x3ae74]        # 0x140064920
   140029aac:	jmp    0x140029abe
   140029aae:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029ab5:	mov    rax,QWORD PTR [rcx]
   140029ab8:	call   QWORD PTR [rax+0x120]
   140029abe:	add    rsp,0x28
   140029ac2:	ret    
   140029ac3:	int3   
   140029ac4:	sub    rsp,0x38
   140029ac8:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029ad0:	jne    0x140029aee
   140029ad2:	mov    eax,DWORD PTR [rsp+0x68]
   140029ad6:	mov    rcx,QWORD PTR [rcx+0x40]
   140029ada:	mov    DWORD PTR [rsp+0x28],eax
   140029ade:	mov    eax,DWORD PTR [rsp+0x60]
   140029ae2:	mov    DWORD PTR [rsp+0x20],eax
   140029ae6:	call   QWORD PTR [rip+0x3ad2c]        # 0x140064818
   140029aec:	jmp    0x140029b07
   140029aee:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029af5:	mov    eax,DWORD PTR [rsp+0x60]
   140029af9:	mov    r10,QWORD PTR [rcx]
   140029afc:	mov    DWORD PTR [rsp+0x20],eax
   140029b00:	call   QWORD PTR [r10+0x130]
   140029b07:	add    rsp,0x38
   140029b0b:	ret    
   140029b0c:	sub    rsp,0x28
   140029b10:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029b18:	jne    0x140029b26
   140029b1a:	mov    rcx,QWORD PTR [rcx+0x40]
   140029b1e:	call   QWORD PTR [rip+0x3acec]        # 0x140064810
   140029b24:	jmp    0x140029b36
   140029b26:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029b2d:	mov    rax,QWORD PTR [rcx]
   140029b30:	call   QWORD PTR [rax+0x140]
   140029b36:	add    rsp,0x28
   140029b3a:	ret    
   140029b3b:	int3   
   140029b3c:	sub    rsp,0x28
   140029b40:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029b48:	jne    0x140029b56
   140029b4a:	mov    rcx,QWORD PTR [rcx+0x40]
   140029b4e:	call   QWORD PTR [rip+0x3aebc]        # 0x140064a10
   140029b54:	jmp    0x140029b66
   140029b56:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029b5d:	mov    rax,QWORD PTR [rcx]
   140029b60:	call   QWORD PTR [rax+0x148]
   140029b66:	add    rsp,0x28
   140029b6a:	ret    
   140029b6b:	int3   
   140029b6c:	sub    rsp,0x28
   140029b70:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029b78:	jne    0x140029b86
   140029b7a:	mov    rcx,QWORD PTR [rcx+0x40]
   140029b7e:	call   QWORD PTR [rip+0x3afc4]        # 0x140064b48
   140029b84:	jmp    0x140029b96
   140029b86:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029b8d:	mov    rax,QWORD PTR [rcx]
   140029b90:	call   QWORD PTR [rax+0x150]
   140029b96:	add    rsp,0x28
   140029b9a:	ret    
   140029b9b:	int3   
   140029b9c:	sub    rsp,0x28
   140029ba0:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029ba8:	jne    0x140029bbe
   140029baa:	mov    rcx,QWORD PTR [rcx+0x40]
   140029bae:	call   QWORD PTR [rip+0x3acd4]        # 0x140064888
   140029bb4:	mov    rcx,rax
   140029bb7:	call   0x1400256f0
   140029bbc:	jmp    0x140029bce
   140029bbe:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029bc5:	mov    rax,QWORD PTR [rcx]
   140029bc8:	call   QWORD PTR [rax+0x160]
   140029bce:	add    rsp,0x28
   140029bd2:	ret    
   140029bd3:	int3   
   140029bd4:	mov    r11,rsp
   140029bd7:	sub    rsp,0x48
   140029bdb:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029be2:	test   rcx,rcx
   140029be5:	je     0x140029c0a
   140029be7:	mov    r10,QWORD PTR [rcx]
   140029bea:	lea    rax,[r11+0x38]
   140029bee:	mov    QWORD PTR [r11-0x18],rax
   140029bf2:	mov    rax,QWORD PTR [r11+0x30]
   140029bf6:	mov    QWORD PTR [r11-0x20],rax
   140029bfa:	mov    rax,QWORD PTR [rsp+0x70]
   140029bff:	mov    QWORD PTR [r11-0x28],rax
   140029c03:	call   QWORD PTR [r10+0xc0]
   140029c0a:	add    rsp,0x48
   140029c0e:	ret    
   140029c0f:	int3   
   140029c10:	sub    rsp,0x38
   140029c14:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029c1c:	je     0x140029c38
   140029c1e:	and    QWORD PTR [rsp+0x28],0x0
   140029c24:	mov    QWORD PTR [rsp+0x20],r9
   140029c29:	movzx  r9d,r8w
   140029c2d:	mov    r8d,0x2
   140029c33:	call   0x140029bd4
   140029c38:	add    rsp,0x38
   140029c3c:	ret    
   140029c3d:	int3   
   140029c3e:	int3   
   140029c3f:	int3   
   140029c40:	sub    rsp,0x28
   140029c44:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029c4c:	mov    r9,rcx
   140029c4f:	jne    0x140029c6e
   140029c51:	cmp    QWORD PTR [rdx+0x98],0x0
   140029c59:	je     0x140029c6e
   140029c5b:	mov    rcx,QWORD PTR [rdx+0x98]
   140029c62:	mov    rdx,r9
   140029c65:	mov    rax,QWORD PTR [rcx]
   140029c68:	call   QWORD PTR [rax+0x138]
   140029c6e:	add    rsp,0x28
   140029c72:	ret    
   140029c73:	int3   
   140029c74:	sub    rsp,0x28
   140029c78:	cmp    QWORD PTR [rcx+0x8],0x0
   140029c7d:	je     0x140029c8e
   140029c7f:	mov    rcx,QWORD PTR [rcx+0x8]
   140029c83:	mov    rax,QWORD PTR [rcx]
   140029c86:	call   QWORD PTR [rax+0xf0]
   140029c8c:	jmp    0x140029c9c
   140029c8e:	mov    rcx,QWORD PTR [rcx]
   140029c91:	mov    edx,0xfffffff0
   140029c96:	call   QWORD PTR [rip+0x3ad64]        # 0x140064a00
   140029c9c:	add    rsp,0x28
   140029ca0:	ret    
   140029ca1:	int3   
   140029ca2:	int3   
   140029ca3:	int3   
   140029ca4:	rex push rbx
   140029ca6:	sub    rsp,0x20
   140029caa:	test   r8d,r8d
   140029cad:	mov    rbx,rdx
   140029cb0:	jne    0x140029cc1
   140029cb2:	mov    rdx,QWORD PTR [rdx+0x40]
   140029cb6:	add    rcx,0x48
   140029cba:	call   0x14002f878
   140029cbf:	jmp    0x140029ccd
   140029cc1:	mov    rax,QWORD PTR [rcx]
   140029cc4:	mov    edx,r8d
   140029cc7:	call   QWORD PTR [rax+0xa8]
   140029ccd:	test   rax,rax
   140029cd0:	je     0x140029cf7
   140029cd2:	mov    rcx,QWORD PTR [rax+0x50]
   140029cd6:	test   rcx,rcx
   140029cd9:	je     0x140029cec
   140029cdb:	cmp    QWORD PTR [rcx+0xa0],rax
   140029ce2:	jne    0x140029cec
   140029ce4:	and    QWORD PTR [rcx+0xa0],0x0
   140029cec:	mov    QWORD PTR [rbx+0xa0],rax
   140029cf3:	mov    QWORD PTR [rax+0x50],rbx
   140029cf7:	add    rsp,0x20
   140029cfb:	pop    rbx
   140029cfc:	ret    
   140029cfd:	int3   
   140029cfe:	int3   
   140029cff:	int3   
   140029d00:	mov    rax,QWORD PTR [rcx+0x10]
   140029d04:	ret    
   140029d05:	int3   
   140029d06:	int3   
   140029d07:	int3   
   140029d08:	sub    rsp,0x48
   140029d0c:	mov    r11,rdx
   140029d0f:	xor    edx,edx
   140029d11:	cmp    QWORD PTR [rcx+0xa0],rdx
   140029d18:	jne    0x140029d4a
   140029d1a:	cmp    r11,rdx
   140029d1d:	je     0x140029d23
   140029d1f:	mov    rdx,QWORD PTR [r11+0x40]
   140029d23:	mov    eax,DWORD PTR [rsp+0x80]
   140029d2a:	mov    rcx,QWORD PTR [rcx+0x40]
   140029d2e:	mov    DWORD PTR [rsp+0x30],eax
   140029d32:	mov    eax,DWORD PTR [rsp+0x78]
   140029d36:	mov    DWORD PTR [rsp+0x28],eax
   140029d3a:	mov    eax,DWORD PTR [rsp+0x70]
   140029d3e:	mov    DWORD PTR [rsp+0x20],eax
   140029d42:	call   QWORD PTR [rip+0x3ac50]        # 0x140064998
   140029d48:	jmp    0x140029d79
   140029d4a:	mov    eax,DWORD PTR [rsp+0x80]
   140029d51:	mov    rcx,QWORD PTR [rcx+0xa0]
   140029d58:	mov    rdx,r11
   140029d5b:	mov    r10,QWORD PTR [rcx]
   140029d5e:	mov    DWORD PTR [rsp+0x30],eax
   140029d62:	mov    eax,DWORD PTR [rsp+0x78]
   140029d66:	mov    DWORD PTR [rsp+0x28],eax
   140029d6a:	mov    eax,DWORD PTR [rsp+0x70]
   140029d6e:	mov    DWORD PTR [rsp+0x20],eax
   140029d72:	call   QWORD PTR [r10+0x138]
   140029d79:	add    rsp,0x48
   140029d7d:	ret    
   140029d7e:	int3   
   140029d7f:	int3   
   140029d80:	test   rcx,rcx
   140029d83:	je     0x140029de4
   140029d85:	mov    QWORD PTR [rsp+0x8],rbx
   140029d8a:	push   rdi
   140029d8b:	sub    rsp,0x20
   140029d8f:	cmp    QWORD PTR [rcx+0xa0],0x0
   140029d97:	mov    rdi,rdx
   140029d9a:	mov    rbx,rcx
   140029d9d:	jne    0x140029dda
   140029d9f:	mov    rcx,QWORD PTR [rcx+0x40]
   140029da3:	call   QWORD PTR [rip+0x3ad37]        # 0x140064ae0
   140029da9:	lea    rcx,[rdi+0x30]
   140029dad:	mov    rdx,rax
   140029db0:	call   0x14002f878
   140029db5:	test   rax,rax
   140029db8:	je     0x140029dda
   140029dba:	cmp    QWORD PTR [rax+0x98],0x0
   140029dc2:	je     0x140029dda
   140029dc4:	mov    rcx,QWORD PTR [rax+0x98]
   140029dcb:	xor    r8d,r8d
   140029dce:	mov    rdx,rbx
   140029dd1:	mov    rax,QWORD PTR [rcx]
   140029dd4:	call   QWORD PTR [rax+0x138]
   140029dda:	mov    rbx,QWORD PTR [rsp+0x30]
   140029ddf:	add    rsp,0x20
   140029de3:	pop    rdi
   140029de4:	ret    
   140029de5:	int3   
   140029de6:	int3   
   140029de7:	int3   
   140029de8:	sub    rsp,0x28
   140029dec:	mov    rcx,QWORD PTR [rdx]
   140029def:	test   rcx,rcx
   140029df2:	jne    0x140029dfa
   140029df4:	call   0x1400208f8
   140029df9:	int3   
   140029dfa:	mov    rax,QWORD PTR [rcx+0x8]
   140029dfe:	mov    QWORD PTR [rdx],rax
   140029e01:	lea    rax,[rcx+0x10]
   140029e05:	add    rsp,0x28
   140029e09:	ret    
   140029e0a:	int3   
   140029e0b:	int3   
   140029e0c:	mov    QWORD PTR [rsp+0x10],rbx
   140029e11:	mov    QWORD PTR [rsp+0x18],rbp
   140029e16:	push   rsi
   140029e17:	push   rdi
   140029e18:	push   r12
   140029e1a:	push   r13
   140029e1c:	push   r15
   140029e1e:	sub    rsp,0x20
   140029e22:	cmp    QWORD PTR [rcx+0x98],0x0
   140029e2a:	mov    esi,r8d
   140029e2d:	mov    r13,rdx
   140029e30:	mov    rdi,rcx
   140029e33:	je     0x140029f96
   140029e39:	bt     DWORD PTR [rcx+0x78],0xb
   140029e3e:	jb     0x140029e98
   140029e40:	mov    rcx,QWORD PTR [rcx+0x40]
   140029e44:	mov    edx,0x5
   140029e49:	call   QWORD PTR [rip+0x3ab31]        # 0x140064980
   140029e4f:	mov    rcx,rax
   140029e52:	call   0x1400256f0
   140029e57:	test   rax,rax
   140029e5a:	mov    rbx,rax
   140029e5d:	je     0x140029e98
   140029e5f:	mov    rcx,rax
   140029e62:	call   0x1400299c0
   140029e67:	bt     eax,0x10
   140029e6b:	jae    0x140029e8d
   140029e6d:	mov    rcx,rbx
   140029e70:	call   0x14002998c
   140029e75:	bt     eax,0x1c
   140029e79:	jae    0x140029e8d
   140029e7b:	mov    rcx,rbx
   140029e7e:	call   0x14002998c
   140029e83:	bt     eax,0x1b
   140029e87:	jae    0x140029f96
   140029e8d:	mov    rcx,QWORD PTR [rbx+0x40]
   140029e91:	mov    edx,0x2
   140029e96:	jmp    0x140029e49
   140029e98:	test   esi,esi
   140029e9a:	je     0x140029eac
   140029e9c:	lea    r12,[rip+0xffffffffffffff45]        # 0x140029de8
   140029ea3:	lea    rbp,[rip+0xfffffffffffffe56]        # 0x140029d00
   140029eaa:	jmp    0x140029eba
   140029eac:	lea    r12,[rip+0xffffffffffff5aa5]        # 0x14001f958
   140029eb3:	lea    rbp,[rip+0xffffffffffff57be]        # 0x14001f678
   140029eba:	mov    rcx,QWORD PTR [rdi+0x98]
   140029ec1:	mov    r15d,0x80
   140029ec7:	add    rcx,r15
   140029eca:	call   rbp
   140029ecc:	mov    QWORD PTR [rsp+0x50],rax
   140029ed1:	test   rax,rax
   140029ed4:	je     0x140029f96
   140029eda:	mov    rcx,QWORD PTR [rdi+0x98]
   140029ee1:	lea    rdx,[rsp+0x50]
   140029ee6:	add    rcx,r15
   140029ee9:	call   r12
   140029eec:	test   r13,r13
   140029eef:	mov    rbx,QWORD PTR [rax]
   140029ef2:	je     0x140029ef9
   140029ef4:	cmp    r13,rbx
   140029ef7:	jmp    0x140029f32
   140029ef9:	mov    rsi,QWORD PTR [rbx+0x8]
   140029efd:	test   rsi,rsi
   140029f00:	je     0x140029f08
   140029f02:	mov    rsi,QWORD PTR [rsi+0x48]
   140029f06:	jmp    0x140029f0b
   140029f08:	mov    rsi,QWORD PTR [rbx]
   140029f0b:	test   rsi,rsi
   140029f0e:	je     0x140029f1b
   140029f10:	call   QWORD PTR [rip+0x3abc2]        # 0x140064ad8
   140029f16:	cmp    rsi,rax
   140029f19:	je     0x140029f3c
   140029f1b:	mov    rcx,QWORD PTR [rbx+0x8]
   140029f1f:	test   rcx,rcx
   140029f22:	je     0x140029f34
   140029f24:	mov    rax,QWORD PTR [rdi+0x98]
   140029f2b:	cmp    rcx,QWORD PTR [rax+0xd8]
   140029f32:	je     0x140029f3c
   140029f34:	cmp    QWORD PTR [rsp+0x50],0x0
   140029f3a:	jmp    0x140029ed4
   140029f3c:	test   rbx,rbx
   140029f3f:	mov    rsi,rbx
   140029f42:	je     0x140029f96
   140029f44:	cmp    QWORD PTR [rsp+0x50],0x0
   140029f4a:	jne    0x140029f5d
   140029f4c:	mov    rcx,QWORD PTR [rdi+0x98]
   140029f53:	add    rcx,r15
   140029f56:	call   rbp
   140029f58:	mov    QWORD PTR [rsp+0x50],rax
   140029f5d:	mov    rcx,QWORD PTR [rdi+0x98]
   140029f64:	lea    rdx,[rsp+0x50]
   140029f69:	add    rcx,r15
   140029f6c:	call   r12
   140029f6f:	mov    rbx,QWORD PTR [rax]
   140029f72:	mov    rcx,rbx
   140029f75:	call   0x140029c74
   140029f7a:	cmp    rbx,rsi
   140029f7d:	je     0x140029f91
   140029f7f:	bt     eax,0x10
   140029f83:	jae    0x140029f44
   140029f85:	bt     eax,0x1b
   140029f89:	jb     0x140029f44
   140029f8b:	bt     eax,0x1c
   140029f8f:	jae    0x140029f44
   140029f91:	mov    rax,rbx
   140029f94:	jmp    0x140029f98
   140029f96:	xor    eax,eax
   140029f98:	mov    rbx,QWORD PTR [rsp+0x58]
   140029f9d:	mov    rbp,QWORD PTR [rsp+0x60]
   140029fa2:	add    rsp,0x20
   140029fa6:	pop    r15
   140029fa8:	pop    r13
   140029faa:	pop    r12
   140029fac:	pop    rdi
   140029fad:	pop    rsi
   140029fae:	ret    
   140029faf:	int3   
   140029fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140029fb5:	mov    QWORD PTR [rsp+0x10],rsi
   140029fba:	push   rdi
   140029fbb:	sub    rsp,0x20
   140029fbf:	cmp    QWORD PTR [rcx+0x98],0x0
   140029fc7:	mov    rbx,rdx
   140029fca:	mov    rdi,rcx
   140029fcd:	je     0x14002a0bd
   140029fd3:	test   rdx,rdx
   140029fd6:	je     0x14002a0bd
   140029fdc:	cmp    DWORD PTR [rdx+0x10],0x0
   140029fe0:	je     0x14002a001
   140029fe2:	mov    rcx,QWORD PTR [rbx]
   140029fe5:	xor    r9d,r9d
   140029fe8:	xor    r8d,r8d
   140029feb:	mov    edx,0xf0
   140029ff0:	call   QWORD PTR [rip+0x3ab7a]        # 0x140064b70
   140029ff6:	cmp    rax,0x1
   140029ffa:	jne    0x14002a001
   140029ffc:	mov    rcx,QWORD PTR [rbx]
   140029fff:	jmp    0x14002a068
   14002a001:	mov    rcx,QWORD PTR [rdi+0x98]
   14002a008:	xor    r8d,r8d
   14002a00b:	mov    rdx,rbx
   14002a00e:	sub    rcx,0xffffffffffffff80
   14002a012:	call   0x14003ec2c
   14002a017:	test   rax,rax
   14002a01a:	mov    rsi,rax
   14002a01d:	jne    0x14002a025
   14002a01f:	call   0x1400208f8
   14002a024:	int3   
   14002a025:	mov    rbx,QWORD PTR [rax]
   14002a028:	test   rbx,rbx
   14002a02b:	je     0x14002a07b
   14002a02d:	mov    rdi,rbx
   14002a030:	mov    rbx,QWORD PTR [rbx]
   14002a033:	mov    rdi,QWORD PTR [rdi+0x10]
   14002a037:	mov    rcx,rdi
   14002a03a:	call   0x140029c74
   14002a03f:	bt     eax,0x11
   14002a043:	jb     0x14002a07b
   14002a045:	cmp    DWORD PTR [rdi+0x10],0x0
   14002a049:	je     0x14002a028
   14002a04b:	mov    rcx,QWORD PTR [rdi]
   14002a04e:	xor    r9d,r9d
   14002a051:	xor    r8d,r8d
   14002a054:	mov    edx,0xf0
   14002a059:	call   QWORD PTR [rip+0x3ab11]        # 0x140064b70
   14002a05f:	cmp    rax,0x1
   14002a063:	jne    0x14002a028
   14002a065:	mov    rcx,QWORD PTR [rdi]
   14002a068:	xor    r9d,r9d
   14002a06b:	mov    edx,0xf1
   14002a070:	xor    r8d,r8d
   14002a073:	call   QWORD PTR [rip+0x3aaf7]        # 0x140064b70
   14002a079:	jmp    0x14002a0bd
   14002a07b:	mov    rbx,QWORD PTR [rsi+0x8]
   14002a07f:	test   rbx,rbx
   14002a082:	je     0x14002a0bd
   14002a084:	mov    rdi,rbx
   14002a087:	mov    rbx,QWORD PTR [rbx+0x8]
   14002a08b:	mov    rdi,QWORD PTR [rdi+0x10]
   14002a08f:	cmp    DWORD PTR [rdi+0x10],0x0
   14002a093:	je     0x14002a0af
   14002a095:	mov    rcx,QWORD PTR [rdi]
   14002a098:	xor    r9d,r9d
   14002a09b:	xor    r8d,r8d
   14002a09e:	mov    edx,0xf0
   14002a0a3:	call   QWORD PTR [rip+0x3aac7]        # 0x140064b70
   14002a0a9:	cmp    rax,0x1
   14002a0ad:	je     0x14002a065
   14002a0af:	mov    rcx,rdi
   14002a0b2:	call   0x140029c74
   14002a0b7:	bt     eax,0x11
   14002a0bb:	jae    0x14002a07f
   14002a0bd:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a0c2:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a0c7:	add    rsp,0x20
   14002a0cb:	pop    rdi
   14002a0cc:	ret    
   14002a0cd:	int3   
   14002a0ce:	int3   
   14002a0cf:	int3   
   14002a0d0:	rex push rdi
   14002a0d2:	sub    rsp,0x30
   14002a0d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002a0df:	mov    QWORD PTR [rsp+0x48],rbx
   14002a0e4:	mov    QWORD PTR [rsp+0x50],rsi
   14002a0e9:	movsxd rsi,r8d
   14002a0ec:	mov    rdi,rdx
   14002a0ef:	mov    rbx,rcx
   14002a0f2:	cmp    QWORD PTR [rcx+0xa0],0x0
   14002a0fa:	jne    0x14002a10e
   14002a0fc:	mov    r8d,esi
   14002a0ff:	mov    rcx,QWORD PTR [rcx+0x40]
   14002a103:	call   QWORD PTR [rip+0x3a787]        # 0x140064890
   14002a109:	jmp    0x14002a1c2
   14002a10e:	call   0x14002b874
   14002a113:	mov    r11,rax
   14002a116:	xor    ecx,ecx
   14002a118:	test   rax,rax
   14002a11b:	setne  cl
   14002a11e:	test   ecx,ecx
   14002a120:	jne    0x14002a12d
   14002a122:	mov    ecx,0x80004005
   14002a127:	call   0x140001430
   14002a12c:	int3   
   14002a12d:	mov    rax,QWORD PTR [rax]
   14002a130:	mov    rcx,r11
   14002a133:	call   QWORD PTR [rax+0x18]
   14002a136:	add    rax,0x18
   14002a13a:	mov    QWORD PTR [rsp+0x40],rax
   14002a13f:	mov    rcx,QWORD PTR [rbx+0xa0]
   14002a146:	mov    rax,QWORD PTR [rcx]
   14002a149:	lea    rdx,[rsp+0x40]
   14002a14e:	call   QWORD PTR [rax+0x118]
   14002a154:	mov    rdx,rsi
   14002a157:	or     rsi,0xffffffffffffffff
   14002a15b:	mov    r9,rsi
   14002a15e:	mov    r8,QWORD PTR [rsp+0x40]
   14002a163:	mov    rcx,rdi
   14002a166:	call   0x140047200
   14002a16b:	test   eax,eax
   14002a16d:	je     0x14002a195
   14002a16f:	cmp    eax,0xc
   14002a172:	je     0x14002a18f
   14002a174:	cmp    eax,0x16
   14002a177:	je     0x14002a189
   14002a179:	cmp    eax,0x22
   14002a17c:	je     0x14002a189
   14002a17e:	cmp    eax,0x50
   14002a181:	je     0x14002a195
   14002a183:	call   0x1400208f8
   14002a188:	int3   
   14002a189:	call   0x1400208f8
   14002a18e:	int3   
   14002a18f:	call   0x1400208b0
   14002a194:	int3   
   14002a195:	mov    rcx,rdi
   14002a198:	call   QWORD PTR [rip+0x3a2e2]        # 0x140064480
   14002a19e:	mov    ebx,eax
   14002a1a0:	mov    rdx,QWORD PTR [rsp+0x40]
   14002a1a5:	add    rdx,0xffffffffffffffe8
   14002a1a9:	mov    ecx,esi
   14002a1ab:	lock xadd DWORD PTR [rdx+0x10],ecx
   14002a1b0:	add    ecx,esi
   14002a1b2:	test   ecx,ecx
   14002a1b4:	jg     0x14002a1c0
   14002a1b6:	mov    rcx,QWORD PTR [rdx]
   14002a1b9:	mov    r8,QWORD PTR [rcx]
   14002a1bc:	call   QWORD PTR [r8+0x8]
   14002a1c0:	mov    eax,ebx
   14002a1c2:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a1c7:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a1cc:	add    rsp,0x30
   14002a1d0:	pop    rdi
   14002a1d1:	ret    
   14002a1d2:	int3   
   14002a1d3:	int3   
   14002a1d4:	int3   
   14002a1d5:	int3   
   14002a1d6:	int3   
   14002a1d7:	int3   
   14002a1d8:	int3   
   14002a1d9:	int3   
   14002a1da:	int3   
   14002a1db:	int3   
   14002a1dc:	int3   
   14002a1dd:	int3   
   14002a1de:	int3   
   14002a1df:	int3   
   14002a1e0:	rex push rbp
   14002a1e2:	sub    rsp,0x20
   14002a1e6:	mov    rbp,rdx
   14002a1e9:	lea    rcx,[rbp+0x40]
   14002a1ed:	call   0x1400010c0
   14002a1f2:	add    rsp,0x20
   14002a1f6:	pop    rbp
   14002a1f7:	ret    
   14002a1f8:	mov    QWORD PTR [rsp+0x8],rbx
   14002a1fd:	mov    QWORD PTR [rsp+0x10],rbp
   14002a202:	mov    QWORD PTR [rsp+0x18],rsi
   14002a207:	push   rdi
   14002a208:	sub    rsp,0x20
   14002a20c:	mov    rbx,QWORD PTR [rcx+0x8]
   14002a210:	mov    rsi,QWORD PTR [rcx]
   14002a213:	mov    rdi,rdx
   14002a216:	test   rbx,rbx
   14002a219:	mov    rbp,rbx
   14002a21c:	je     0x14002a245
   14002a21e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a222:	call   0x140029c74
   14002a227:	shr    eax,0x11
   14002a22a:	test   al,0x1
   14002a22c:	jne    0x14002a23a
   14002a22e:	mov    rbp,rbx
   14002a231:	mov    rbx,QWORD PTR [rbx+0x8]
   14002a235:	test   rbx,rbx
   14002a238:	jne    0x14002a21e
   14002a23a:	test   rbx,rbx
   14002a23d:	je     0x14002a245
   14002a23f:	mov    QWORD PTR [rdi+0x8],rbx
   14002a243:	jmp    0x14002a249
   14002a245:	mov    QWORD PTR [rdi+0x8],rbp
   14002a249:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a24e:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a253:	mov    QWORD PTR [rdi],rsi
   14002a256:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a25b:	mov    rax,rdi
   14002a25e:	add    rsp,0x20
   14002a262:	pop    rdi
   14002a263:	ret    
   14002a264:	mov    QWORD PTR [rsp+0x8],rbx
   14002a269:	push   rdi
   14002a26a:	sub    rsp,0x20
   14002a26e:	mov    rax,QWORD PTR [rcx]
   14002a271:	mov    rdi,rdx
   14002a274:	mov    QWORD PTR [rdx],rax
   14002a277:	cmp    rax,QWORD PTR [rcx]
   14002a27a:	je     0x14002a282
   14002a27c:	call   0x1400208f8
   14002a281:	int3   
   14002a282:	mov    rdx,QWORD PTR [rcx+0x8]
   14002a286:	mov    eax,0x1
   14002a28b:	mov    QWORD PTR [rdi+0x8],rdx
   14002a28f:	mov    rbx,rdx
   14002a292:	test   rdx,rdx
   14002a295:	je     0x14002a2a6
   14002a297:	test   rbx,rbx
   14002a29a:	je     0x14002a29f
   14002a29c:	mov    rbx,QWORD PTR [rbx]
   14002a29f:	sub    eax,0x1
   14002a2a2:	test   eax,eax
   14002a2a4:	jg     0x14002a292
   14002a2a6:	test   rbx,rbx
   14002a2a9:	je     0x14002a2dd
   14002a2ab:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a2af:	call   0x140029c74
   14002a2b4:	shr    eax,0x11
   14002a2b7:	test   al,0x1
   14002a2b9:	jne    0x14002a2dd
   14002a2bb:	cmp    QWORD PTR [rdi+0x8],0x0
   14002a2c0:	mov    rbx,QWORD PTR [rbx]
   14002a2c3:	je     0x14002a2a6
   14002a2c5:	mov    rax,QWORD PTR [rdi+0x8]
   14002a2c9:	test   rax,rax
   14002a2cc:	je     0x14002a2d7
   14002a2ce:	mov    rax,QWORD PTR [rax]
   14002a2d1:	mov    QWORD PTR [rdi+0x8],rax
   14002a2d5:	jmp    0x14002a2a6
   14002a2d7:	call   0x1400208f8
   14002a2dc:	int3   
   14002a2dd:	mov    rax,rdi
   14002a2e0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2e5:	add    rsp,0x20
   14002a2e9:	pop    rdi
   14002a2ea:	ret    
   14002a2eb:	int3   
   14002a2ec:	sub    rsp,0x28
   14002a2f0:	mov    rax,QWORD PTR [rcx+0x98]
   14002a2f7:	test   rax,rax
   14002a2fa:	je     0x14002a313
   14002a2fc:	mov    rax,QWORD PTR [rax+0x88]
   14002a303:	jmp    0x14002a30e
   14002a305:	cmp    QWORD PTR [rax+0x10],rdx
   14002a309:	je     0x14002a315
   14002a30b:	mov    rax,QWORD PTR [rax]
   14002a30e:	test   rax,rax
   14002a311:	jne    0x14002a305
   14002a313:	xor    eax,eax
   14002a315:	add    rsp,0x28
   14002a319:	ret    
   14002a31a:	int3   
   14002a31b:	int3   
   14002a31c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a321:	mov    QWORD PTR [rsp+0x10],rbp
   14002a326:	mov    QWORD PTR [rsp+0x18],rsi
   14002a32b:	push   rdi
   14002a32c:	sub    rsp,0x20
   14002a330:	mov    rbx,QWORD PTR [rcx+0x98]
   14002a337:	mov    rbp,rcx
   14002a33a:	test   rbx,rbx
   14002a33d:	je     0x14002a394
   14002a33f:	mov    rbx,QWORD PTR [rbx+0x88]
   14002a346:	test   rbx,rbx
   14002a349:	je     0x14002a394
   14002a34b:	mov    rsi,QWORD PTR [rbx+0x10]
   14002a34f:	mov    rdi,QWORD PTR [rsi+0x8]
   14002a353:	test   rdi,rdi
   14002a356:	je     0x14002a35e
   14002a358:	mov    rdi,QWORD PTR [rdi+0x48]
   14002a35c:	jmp    0x14002a361
   14002a35e:	mov    rdi,QWORD PTR [rsi]
   14002a361:	test   rdi,rdi
   14002a364:	je     0x14002a371
   14002a366:	call   QWORD PTR [rip+0x3a76c]        # 0x140064ad8
   14002a36c:	cmp    rdi,rax
   14002a36f:	je     0x14002a38f
   14002a371:	mov    rcx,QWORD PTR [rsi+0x8]
   14002a375:	test   rcx,rcx
   14002a378:	je     0x14002a38a
   14002a37a:	mov    rax,QWORD PTR [rbp+0x98]
   14002a381:	cmp    rcx,QWORD PTR [rax+0xd8]
   14002a388:	je     0x14002a38f
   14002a38a:	mov    rbx,QWORD PTR [rbx]
   14002a38d:	jmp    0x14002a346
   14002a38f:	mov    rax,rbx
   14002a392:	jmp    0x14002a396
   14002a394:	xor    eax,eax
   14002a396:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a39b:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a3a0:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a3a5:	add    rsp,0x20
   14002a3a9:	pop    rdi
   14002a3aa:	ret    
   14002a3ab:	int3   
   14002a3ac:	mov    rax,rsp
   14002a3af:	mov    QWORD PTR [rax+0x8],rbx
   14002a3b3:	mov    QWORD PTR [rax+0x10],rbp
   14002a3b7:	mov    QWORD PTR [rax+0x18],rsi
   14002a3bb:	mov    QWORD PTR [rax+0x20],rdi
   14002a3bf:	push   r12
   14002a3c1:	sub    rsp,0x30
   14002a3c5:	mov    r12,QWORD PTR [rcx]
   14002a3c8:	mov    rbx,QWORD PTR [rcx+0x8]
   14002a3cc:	mov    rdi,rcx
   14002a3cf:	xor    ebp,ebp
   14002a3d1:	test   rbx,rbx
   14002a3d4:	je     0x14002a3ee
   14002a3d6:	mov    rbx,QWORD PTR [rbx]
   14002a3d9:	test   rbx,rbx
   14002a3dc:	je     0x14002a3ee
   14002a3de:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a3e2:	call   0x140029c74
   14002a3e7:	shr    eax,0x11
   14002a3ea:	test   al,0x1
   14002a3ec:	je     0x14002a412
   14002a3ee:	lea    rdx,[rsp+0x20]
   14002a3f3:	mov    rcx,rdi
   14002a3f6:	call   0x14002a1f8
   14002a3fb:	cmp    r12,QWORD PTR [rax]
   14002a3fe:	jne    0x14002a474
   14002a400:	mov    rbx,QWORD PTR [rax+0x8]
   14002a404:	test   rbx,rbx
   14002a407:	je     0x14002a459
   14002a409:	test   ebp,ebp
   14002a40b:	jne    0x14002a459
   14002a40d:	mov    ebp,0x1
   14002a412:	mov    rsi,QWORD PTR [rbx+0x10]
   14002a416:	mov    rcx,QWORD PTR [rsi]
   14002a419:	test   rcx,rcx
   14002a41c:	je     0x14002a436
   14002a41e:	xor    r9d,r9d
   14002a421:	xor    r8d,r8d
   14002a424:	mov    edx,0x87
   14002a429:	call   QWORD PTR [rip+0x3a741]        # 0x140064b70
   14002a42f:	bt     rax,0x8
   14002a434:	jb     0x14002a3d1
   14002a436:	mov    rcx,rsi
   14002a439:	call   0x140029c74
   14002a43e:	bt     eax,0x1c
   14002a442:	jae    0x14002a3d1
   14002a444:	bt     eax,0x1b
   14002a448:	jb     0x14002a3d1
   14002a44a:	cmp    QWORD PTR [rdi],r12
   14002a44d:	je     0x14002a455
   14002a44f:	call   0x1400208f8
   14002a454:	int3   
   14002a455:	mov    QWORD PTR [rdi+0x8],rbx
   14002a459:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a45e:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a463:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a468:	mov    rdi,QWORD PTR [rsp+0x58]
   14002a46d:	add    rsp,0x30
   14002a471:	pop    r12
   14002a473:	ret    
   14002a474:	call   0x1400208f8
   14002a479:	int3   
   14002a47a:	int3   
   14002a47b:	int3   
   14002a47c:	mov    rax,rsp
   14002a47f:	mov    QWORD PTR [rax+0x8],rbx
   14002a483:	mov    QWORD PTR [rax+0x10],rbp
   14002a487:	mov    QWORD PTR [rax+0x18],rsi
   14002a48b:	mov    QWORD PTR [rax+0x20],rdi
   14002a48f:	push   r12
   14002a491:	sub    rsp,0x30
   14002a495:	mov    r12,QWORD PTR [rcx]
   14002a498:	mov    rbx,QWORD PTR [rcx+0x8]
   14002a49c:	mov    rdi,rcx
   14002a49f:	xor    ebp,ebp
   14002a4a1:	test   rbx,rbx
   14002a4a4:	je     0x14002a4bc
   14002a4a6:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a4aa:	call   0x140029c74
   14002a4af:	shr    eax,0x11
   14002a4b2:	test   al,0x1
   14002a4b4:	jne    0x14002a4bc
   14002a4b6:	mov    rbx,QWORD PTR [rbx+0x8]
   14002a4ba:	jmp    0x14002a4e0
   14002a4bc:	lea    rdx,[rsp+0x20]
   14002a4c1:	mov    rcx,rdi
   14002a4c4:	call   0x14002a264
   14002a4c9:	cmp    r12,QWORD PTR [rax]
   14002a4cc:	jne    0x14002a547
   14002a4ce:	mov    rbx,QWORD PTR [rax+0x8]
   14002a4d2:	test   rbx,rbx
   14002a4d5:	je     0x14002a52c
   14002a4d7:	test   ebp,ebp
   14002a4d9:	jne    0x14002a52c
   14002a4db:	mov    ebp,0x1
   14002a4e0:	test   rbx,rbx
   14002a4e3:	je     0x14002a4bc
   14002a4e5:	mov    rsi,QWORD PTR [rbx+0x10]
   14002a4e9:	mov    rcx,QWORD PTR [rsi]
   14002a4ec:	test   rcx,rcx
   14002a4ef:	je     0x14002a509
   14002a4f1:	xor    r9d,r9d
   14002a4f4:	xor    r8d,r8d
   14002a4f7:	mov    edx,0x87
   14002a4fc:	call   QWORD PTR [rip+0x3a66e]        # 0x140064b70
   14002a502:	bt     rax,0x8
   14002a507:	jb     0x14002a4a1
   14002a509:	mov    rcx,rsi
   14002a50c:	call   0x140029c74
   14002a511:	bt     eax,0x1c
   14002a515:	jae    0x14002a4a1
   14002a517:	bt     eax,0x1b
   14002a51b:	jb     0x14002a4a1
   14002a51d:	cmp    QWORD PTR [rdi],r12
   14002a520:	je     0x14002a528
   14002a522:	call   0x1400208f8
   14002a527:	int3   
   14002a528:	mov    QWORD PTR [rdi+0x8],rbx
   14002a52c:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a531:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a536:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a53b:	mov    rdi,QWORD PTR [rsp+0x58]
   14002a540:	add    rsp,0x30
   14002a544:	pop    r12
   14002a546:	ret    
   14002a547:	call   0x1400208f8
   14002a54c:	int3   
   14002a54d:	int3   
   14002a54e:	int3   
   14002a54f:	int3   
   14002a550:	rex push rbx
   14002a552:	sub    rsp,0x30
   14002a556:	cmp    QWORD PTR [rcx+0x98],0x0
   14002a55e:	mov    rbx,rcx
   14002a561:	je     0x14002a5ab
   14002a563:	test   rdx,rdx
   14002a566:	je     0x14002a56f
   14002a568:	call   0x14002a2ec
   14002a56d:	jmp    0x14002a574
   14002a56f:	call   0x14002a31c
   14002a574:	test   rax,rax
   14002a577:	mov    rcx,rax
   14002a57a:	je     0x14002a5ab
   14002a57c:	mov    rax,QWORD PTR [rbx+0x98]
   14002a583:	mov    QWORD PTR [rsp+0x28],rcx
   14002a588:	lea    rcx,[rsp+0x20]
   14002a58d:	sub    rax,0xffffffffffffff80
   14002a591:	mov    QWORD PTR [rsp+0x20],rax
   14002a596:	call   0x14002a47c
   14002a59b:	mov    rax,QWORD PTR [rsp+0x28]
   14002a5a0:	test   rax,rax
   14002a5a3:	je     0x14002a5ab
   14002a5a5:	mov    rax,QWORD PTR [rax+0x10]
   14002a5a9:	jmp    0x14002a5ad
   14002a5ab:	xor    eax,eax
   14002a5ad:	add    rsp,0x30
   14002a5b1:	pop    rbx
   14002a5b2:	ret    
   14002a5b3:	int3   
   14002a5b4:	rex push rbx
   14002a5b6:	sub    rsp,0x30
   14002a5ba:	cmp    QWORD PTR [rcx+0x98],0x0
   14002a5c2:	mov    rbx,rcx
   14002a5c5:	je     0x14002a60f
   14002a5c7:	test   rdx,rdx
   14002a5ca:	je     0x14002a5d3
   14002a5cc:	call   0x14002a2ec
   14002a5d1:	jmp    0x14002a5d8
   14002a5d3:	call   0x14002a31c
   14002a5d8:	test   rax,rax
   14002a5db:	mov    rcx,rax
   14002a5de:	je     0x14002a60f
   14002a5e0:	mov    rax,QWORD PTR [rbx+0x98]
   14002a5e7:	mov    QWORD PTR [rsp+0x28],rcx
   14002a5ec:	lea    rcx,[rsp+0x20]
   14002a5f1:	sub    rax,0xffffffffffffff80
   14002a5f5:	mov    QWORD PTR [rsp+0x20],rax
   14002a5fa:	call   0x14002a3ac
   14002a5ff:	mov    rax,QWORD PTR [rsp+0x28]
   14002a604:	test   rax,rax
   14002a607:	je     0x14002a60f
   14002a609:	mov    rax,QWORD PTR [rax+0x10]
   14002a60d:	jmp    0x14002a611
   14002a60f:	xor    eax,eax
   14002a611:	add    rsp,0x30
   14002a615:	pop    rbx
   14002a616:	ret    
   14002a617:	int3   
   14002a618:	mov    QWORD PTR [rsp+0x10],rbx
   14002a61d:	push   rdi
   14002a61e:	sub    rsp,0x20
   14002a622:	mov    rbx,rcx
   14002a625:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a629:	lea    r8,[rsp+0x30]
   14002a62e:	mov    edi,edx
   14002a630:	call   0x140029910
   14002a635:	mov    rax,QWORD PTR [rsp+0x30]
   14002a63a:	test   rax,rax
   14002a63d:	jne    0x14002a65a
   14002a63f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a643:	mov    edx,edi
   14002a645:	call   0x1400298b0
   14002a64a:	test   rax,rax
   14002a64d:	jne    0x14002a655
   14002a64f:	call   0x1400208d4
   14002a654:	int3   
   14002a655:	mov    rax,QWORD PTR [rsp+0x30]
   14002a65a:	and    DWORD PTR [rbx+0x14],0x0
   14002a65e:	mov    DWORD PTR [rbx+0x10],edi
   14002a661:	mov    rbx,QWORD PTR [rsp+0x38]
   14002a666:	add    rsp,0x20
   14002a66a:	pop    rdi
   14002a66b:	ret    
   14002a66c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a671:	mov    QWORD PTR [rsp+0x10],rsi
   14002a676:	push   rdi
   14002a677:	sub    rsp,0x20
   14002a67b:	cmp    QWORD PTR [r8+0x40],0x0
   14002a680:	mov    rbx,r8
   14002a683:	mov    esi,edx
   14002a685:	mov    rdi,rcx
   14002a688:	jne    0x14002a714
   14002a68e:	mov    rcx,rbx
   14002a691:	call   0x140029870
   14002a696:	test   rax,rax
   14002a699:	jne    0x14002a714
   14002a69b:	mov    edx,esi
   14002a69d:	mov    rcx,rdi
   14002a6a0:	call   0x14002a618
   14002a6a5:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a6a9:	lea    r8,[rsp+0x40]
   14002a6ae:	mov    edx,esi
   14002a6b0:	call   0x140029910
   14002a6b5:	mov    rdx,QWORD PTR [rsp+0x40]
   14002a6ba:	test   rdx,rdx
   14002a6bd:	je     0x14002a6f5
   14002a6bf:	mov    rcx,rbx
   14002a6c2:	call   0x14002671c
   14002a6c7:	test   eax,eax
   14002a6c9:	jne    0x14002a6d1
   14002a6cb:	call   0x1400208d4
   14002a6d0:	int3   
   14002a6d1:	cmp    QWORD PTR [rsp+0x40],0x0
   14002a6d7:	je     0x14002a6f5
   14002a6d9:	mov    rcx,QWORD PTR [rbx+0x40]
   14002a6dd:	mov    rdi,QWORD PTR [rdi+0x8]
   14002a6e1:	call   QWORD PTR [rip+0x3a3f9]        # 0x140064ae0
   14002a6e7:	cmp    QWORD PTR [rdi+0x40],rax
   14002a6eb:	je     0x14002a714
   14002a6ed:	xor    r8d,r8d
   14002a6f0:	mov    rdx,rdi
   14002a6f3:	jmp    0x14002a70c
   14002a6f5:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a6f9:	mov    edx,esi
   14002a6fb:	call   0x1400298b0
   14002a700:	test   rax,rax
   14002a703:	je     0x14002a714
   14002a705:	mov    rdx,QWORD PTR [rdi+0x8]
   14002a709:	mov    r8d,esi
   14002a70c:	mov    rcx,rbx
   14002a70f:	call   0x140029c40
   14002a714:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a719:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a71e:	add    rsp,0x20
   14002a722:	pop    rdi
   14002a723:	ret    
   14002a724:	mov    QWORD PTR [rcx+0x10],rdx
   14002a728:	ret    
   14002a729:	int3   
   14002a72a:	int3   
   14002a72b:	int3   
   14002a72c:	mov    QWORD PTR [rcx+0x8],rdx
   14002a730:	ret    
   14002a731:	int3   
   14002a732:	int3   
   14002a733:	int3   
   14002a734:	and    QWORD PTR [rcx+0x10],0x0
   14002a739:	ret    
   14002a73a:	int3   
   14002a73b:	int3   
   14002a73c:	and    QWORD PTR [rcx+0x8],0x0
   14002a741:	ret    
   14002a742:	int3   
   14002a743:	int3   
   14002a744:	mov    QWORD PTR [rsp+0x8],rbx
   14002a749:	push   rdi
   14002a74a:	sub    rsp,0x20
   14002a74e:	mov    rdi,rcx
   14002a751:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a755:	xor    ebx,ebx
   14002a757:	test   rcx,rcx
   14002a75a:	je     0x14002a764
   14002a75c:	call   QWORD PTR [rip+0x39966]        # 0x1400640c8
   14002a762:	mov    ebx,eax
   14002a764:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a768:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002a76c:	je     0x14002a77c
   14002a76e:	call   QWORD PTR [rip+0x39954]        # 0x1400640c8
   14002a774:	or     ecx,0xffffffff
   14002a777:	test   eax,eax
   14002a779:	cmovne ebx,ecx
   14002a77c:	mov    eax,ebx
   14002a77e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a783:	add    rsp,0x20
   14002a787:	pop    rdi
   14002a788:	ret    
   14002a789:	int3   
   14002a78a:	int3   
   14002a78b:	int3   
   14002a78c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a791:	push   rdi
   14002a792:	sub    rsp,0x20
   14002a796:	mov    rbx,rcx
   14002a799:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a79d:	mov    edi,edx
   14002a79f:	cmp    rcx,QWORD PTR [rbx+0x10]
   14002a7a3:	mov    eax,0x1
   14002a7a8:	je     0x14002a7b0
   14002a7aa:	call   QWORD PTR [rip+0x39910]        # 0x1400640c0
   14002a7b0:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a7b4:	test   rcx,rcx
   14002a7b7:	je     0x14002a7d2
   14002a7b9:	test   eax,eax
   14002a7bb:	je     0x14002a7d0
   14002a7bd:	mov    edx,edi
   14002a7bf:	call   QWORD PTR [rip+0x398fb]        # 0x1400640c0
   14002a7c5:	test   eax,eax
   14002a7c7:	je     0x14002a7d0
   14002a7c9:	mov    eax,0x1
   14002a7ce:	jmp    0x14002a7d2
   14002a7d0:	xor    eax,eax
   14002a7d2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a7d7:	add    rsp,0x20
   14002a7db:	pop    rdi
   14002a7dc:	ret    
   14002a7dd:	int3   
   14002a7de:	int3   
   14002a7df:	int3   
   14002a7e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7e5:	push   rdi
   14002a7e6:	sub    rsp,0x20
   14002a7ea:	mov    rbx,rcx
   14002a7ed:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a7f1:	or     eax,0xffffffff
   14002a7f4:	cmp    rcx,QWORD PTR [rbx+0x10]
   14002a7f8:	mov    edi,edx
   14002a7fa:	je     0x14002a802
   14002a7fc:	call   QWORD PTR [rip+0x398d6]        # 0x1400640d8
   14002a802:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a806:	test   rcx,rcx
   14002a809:	je     0x14002a813
   14002a80b:	mov    edx,edi
   14002a80d:	call   QWORD PTR [rip+0x398c5]        # 0x1400640d8
   14002a813:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a818:	add    rsp,0x20
   14002a81c:	pop    rdi
   14002a81d:	ret    
   14002a81e:	int3   
   14002a81f:	int3   
   14002a820:	mov    QWORD PTR [rsp+0x8],rbx
   14002a825:	push   rdi
   14002a826:	sub    rsp,0x20
   14002a82a:	mov    rbx,rcx
   14002a82d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a831:	or     eax,0xffffffff
   14002a834:	cmp    rcx,QWORD PTR [rbx+0x10]
   14002a838:	mov    edi,edx
   14002a83a:	je     0x14002a842
   14002a83c:	call   QWORD PTR [rip+0x3989e]        # 0x1400640e0
   14002a842:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a846:	test   rcx,rcx
   14002a849:	je     0x14002a853
   14002a84b:	mov    edx,edi
   14002a84d:	call   QWORD PTR [rip+0x3988d]        # 0x1400640e0
   14002a853:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a858:	add    rsp,0x20
   14002a85c:	pop    rdi
   14002a85d:	ret    
   14002a85e:	int3   
   14002a85f:	int3   
   14002a860:	mov    QWORD PTR [rsp+0x8],rbx
   14002a865:	push   rdi
   14002a866:	sub    rsp,0x20
   14002a86a:	mov    rbx,rcx
   14002a86d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a871:	xor    eax,eax
   14002a873:	cmp    rcx,QWORD PTR [rbx+0x10]
   14002a877:	mov    edi,edx
   14002a879:	je     0x14002a881
   14002a87b:	call   QWORD PTR [rip+0x39837]        # 0x1400640b8
   14002a881:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a885:	test   rcx,rcx
   14002a888:	je     0x14002a892
   14002a88a:	mov    edx,edi
   14002a88c:	call   QWORD PTR [rip+0x39826]        # 0x1400640b8
   14002a892:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a897:	add    rsp,0x20
   14002a89b:	pop    rdi
   14002a89c:	ret    
   14002a89d:	int3   
   14002a89e:	int3   
   14002a89f:	int3   
   14002a8a0:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a8a4:	rex.W jmp QWORD PTR [rip+0x3983d]        # 0x1400640e8
   14002a8ab:	int3   
   14002a8ac:	lea    rax,[rip+0x3fe15]        # 0x14006a6c8
   14002a8b3:	ret    
   14002a8b4:	lea    rax,[rip+0x3fe3d]        # 0x14006a6f8
   14002a8bb:	ret    
   14002a8bc:	lea    rax,[rip+0x3fe65]        # 0x14006a728
   14002a8c3:	ret    
   14002a8c4:	lea    rax,[rip+0x3fe8d]        # 0x14006a758
   14002a8cb:	ret    
   14002a8cc:	lea    rax,[rip+0x3feb5]        # 0x14006a788
   14002a8d3:	ret    
   14002a8d4:	lea    rax,[rip+0x3fedd]        # 0x14006a7b8
   14002a8db:	ret    
   14002a8dc:	lea    rax,[rip+0x3ff05]        # 0x14006a7e8
   14002a8e3:	ret    
   14002a8e4:	lea    rax,[rip+0x3ff2d]        # 0x14006a818
   14002a8eb:	ret    
   14002a8ec:	lea    rax,[rip+0x3ff55]        # 0x14006a848
   14002a8f3:	ret    
   14002a8f4:	sub    rsp,0x28
   14002a8f8:	lea    rax,[rip+0x61641]        # 0x14008bf40
   14002a8ff:	lea    rdx,[rip+0x57772]        # 0x140082078
   14002a906:	lea    rcx,[rsp+0x30]
   14002a90b:	mov    QWORD PTR [rsp+0x30],rax
   14002a910:	call   0x140048db0
   14002a915:	int3   
   14002a916:	int3   
   14002a917:	int3   
   14002a918:	sub    rsp,0x28
   14002a91c:	lea    rax,[rip+0x6173d]        # 0x14008c060
   14002a923:	lea    rdx,[rip+0x577c6]        # 0x1400820f0
   14002a92a:	lea    rcx,[rsp+0x30]
   14002a92f:	mov    QWORD PTR [rsp+0x30],rax
   14002a934:	call   0x140048db0
   14002a939:	int3   
   14002a93a:	int3   
   14002a93b:	int3   
   14002a93c:	mov    rax,QWORD PTR [rcx]
   14002a93f:	xor    edx,edx
   14002a941:	rex.W jmp QWORD PTR [rax+0x8]
   14002a945:	int3   
   14002a946:	int3   
   14002a947:	int3   
   14002a948:	lea    rax,[rip+0x3ffa9]        # 0x14006a8f8
   14002a94f:	mov    QWORD PTR [rcx],rax
   14002a952:	xor    eax,eax
   14002a954:	mov    QWORD PTR [rcx+0x8],rax
   14002a958:	mov    QWORD PTR [rcx+0x10],rax
   14002a95c:	mov    DWORD PTR [rcx+0x18],eax
   14002a95f:	mov    rax,rcx
   14002a962:	ret    
   14002a963:	int3   
   14002a964:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a968:	rex.W jmp QWORD PTR [rip+0x397f1]        # 0x140064160
   14002a96f:	int3   
   14002a970:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a974:	rex.W jmp QWORD PTR [rip+0x397dd]        # 0x140064158
   14002a97b:	int3   
   14002a97c:	sub    rsp,0x38
   14002a980:	mov    eax,DWORD PTR [rsp+0x60]
   14002a984:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a988:	mov    DWORD PTR [rsp+0x20],eax
   14002a98c:	call   QWORD PTR [rip+0x397be]        # 0x140064150
   14002a992:	add    rsp,0x38
   14002a996:	ret    
   14002a997:	int3   
   14002a998:	sub    rsp,0x48
   14002a99c:	mov    rax,QWORD PTR [rsp+0x88]
   14002a9a4:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a9a8:	mov    QWORD PTR [rsp+0x38],rax
   14002a9ad:	mov    eax,DWORD PTR [rsp+0x80]
   14002a9b4:	mov    DWORD PTR [rsp+0x30],eax
   14002a9b8:	mov    rax,QWORD PTR [rsp+0x78]
   14002a9bd:	mov    QWORD PTR [rsp+0x28],rax
   14002a9c2:	mov    rax,QWORD PTR [rsp+0x70]
   14002a9c7:	mov    QWORD PTR [rsp+0x20],rax
   14002a9cc:	call   QWORD PTR [rip+0x39776]        # 0x140064148
   14002a9d2:	add    rsp,0x48
   14002a9d6:	ret    
   14002a9d7:	int3   
   14002a9d8:	rex push rbx
   14002a9da:	sub    rsp,0x40
   14002a9de:	mov    eax,DWORD PTR [rsp+0x90]
   14002a9e5:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a9e9:	mov    r10d,r9d
   14002a9ec:	mov    r9,QWORD PTR [rsp+0x70]
   14002a9f1:	mov    DWORD PTR [rsp+0x38],eax
   14002a9f5:	mov    rax,QWORD PTR [rsp+0x88]
   14002a9fd:	mov    QWORD PTR [rsp+0x30],rax
   14002aa02:	mov    eax,DWORD PTR [rsp+0x80]
   14002aa09:	mov    r11d,r8d
   14002aa0c:	mov    DWORD PTR [rsp+0x28],eax
   14002aa10:	mov    eax,DWORD PTR [rsp+0x78]
   14002aa14:	mov    rbx,rdx
   14002aa17:	mov    r8d,r10d
   14002aa1a:	mov    edx,r11d
   14002aa1d:	mov    DWORD PTR [rsp+0x20],eax
   14002aa21:	call   QWORD PTR [rip+0x39de1]        # 0x140064808
   14002aa27:	movsx  ecx,ax
   14002aa2a:	shr    eax,0x10
   14002aa2d:	cwde   
   14002aa2e:	mov    DWORD PTR [rbx],ecx
   14002aa30:	mov    DWORD PTR [rbx+0x4],eax
   14002aa33:	mov    rax,rbx
   14002aa36:	add    rsp,0x40
   14002aa3a:	pop    rbx
   14002aa3b:	ret    
   14002aa3c:	sub    rsp,0x38
   14002aa40:	mov    eax,DWORD PTR [rsp+0x60]
   14002aa44:	mov    rcx,QWORD PTR [rcx+0x8]
   14002aa48:	mov    DWORD PTR [rsp+0x20],eax
   14002aa4c:	call   QWORD PTR [rip+0x39dae]        # 0x140064800
   14002aa52:	add    rsp,0x38
   14002aa56:	ret    
   14002aa57:	int3   
   14002aa58:	sub    rsp,0x38
   14002aa5c:	mov    rax,QWORD PTR [rsp+0x68]
   14002aa61:	mov    rcx,QWORD PTR [rcx+0x8]
   14002aa65:	mov    QWORD PTR [rsp+0x28],rax
   14002aa6a:	mov    eax,DWORD PTR [rsp+0x60]
   14002aa6e:	mov    DWORD PTR [rsp+0x20],eax
   14002aa72:	call   QWORD PTR [rip+0x39d80]        # 0x1400647f8
   14002aa78:	add    rsp,0x38
   14002aa7c:	ret    
   14002aa7d:	int3   
   14002aa7e:	int3   
   14002aa7f:	int3   
   14002aa80:	sub    rsp,0x58
   14002aa84:	mov    rax,rdx
   14002aa87:	xor    edx,edx
   14002aa89:	cmp    rax,rdx
   14002aa8c:	je     0x14002aa92
   14002aa8e:	mov    rdx,QWORD PTR [rax+0x8]
   14002aa92:	mov    eax,DWORD PTR [rsp+0xa0]
   14002aa99:	mov    rcx,QWORD PTR [rcx+0x8]
   14002aa9d:	mov    DWORD PTR [rsp+0x40],eax
   14002aaa1:	mov    eax,DWORD PTR [rsp+0x98]
   14002aaa8:	mov    DWORD PTR [rsp+0x38],eax
   14002aaac:	mov    eax,DWORD PTR [rsp+0x90]
   14002aab3:	mov    DWORD PTR [rsp+0x30],eax
   14002aab7:	mov    eax,DWORD PTR [rsp+0x88]
   14002aabe:	mov    DWORD PTR [rsp+0x28],eax
   14002aac2:	mov    eax,DWORD PTR [rsp+0x80]
   14002aac9:	mov    DWORD PTR [rsp+0x20],eax
   14002aacd:	call   QWORD PTR [rip+0x39d1d]        # 0x1400647f0
   14002aad3:	add    rsp,0x58
   14002aad7:	ret    
   14002aad8:	sub    rsp,0x38
   14002aadc:	mov    rax,QWORD PTR [rsp+0x60]
   14002aae1:	mov    rcx,QWORD PTR [rcx+0x8]
   14002aae5:	mov    QWORD PTR [rsp+0x20],rax
   14002aaea:	call   QWORD PTR [rip+0x39650]        # 0x140064140
   14002aaf0:	add    rsp,0x38
   14002aaf4:	ret    
   14002aaf5:	int3   
   14002aaf6:	int3   
   14002aaf7:	int3   
   14002aaf8:	mov    QWORD PTR [rsp+0x8],rbx
   14002aafd:	mov    QWORD PTR [rsp+0x10],rbp
   14002ab02:	mov    QWORD PTR [rsp+0x18],rsi
   14002ab07:	push   rdi
   14002ab08:	sub    rsp,0x20
   14002ab0c:	mov    rdi,rcx
   14002ab0f:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ab13:	mov    esi,r9d
   14002ab16:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002ab1a:	mov    ebp,r8d
   14002ab1d:	mov    rbx,rdx
   14002ab20:	je     0x14002ab30
   14002ab22:	mov    r9,rdx
   14002ab25:	mov    r8d,esi
   14002ab28:	mov    edx,ebp
   14002ab2a:	call   QWORD PTR [rip+0x39600]        # 0x140064130
   14002ab30:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ab34:	test   rcx,rcx
   14002ab37:	je     0x14002ab47
   14002ab39:	mov    r9,rbx
   14002ab3c:	mov    r8d,esi
   14002ab3f:	mov    edx,ebp
   14002ab41:	call   QWORD PTR [rip+0x395e9]        # 0x140064130
   14002ab47:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ab4c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ab51:	mov    rax,rbx
   14002ab54:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ab59:	add    rsp,0x20
   14002ab5d:	pop    rdi
   14002ab5e:	ret    
   14002ab5f:	int3   
   14002ab60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab65:	mov    QWORD PTR [rsp+0x10],rbp
   14002ab6a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ab6f:	push   rdi
   14002ab70:	sub    rsp,0x20
   14002ab74:	mov    rdi,rcx
   14002ab77:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ab7b:	mov    esi,r9d
   14002ab7e:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002ab82:	mov    ebp,r8d
   14002ab85:	mov    rbx,rdx
   14002ab88:	je     0x14002ab98
   14002ab8a:	mov    r9,rdx
   14002ab8d:	mov    r8d,esi
   14002ab90:	mov    edx,ebp
   14002ab92:	call   QWORD PTR [rip+0x39590]        # 0x140064128
   14002ab98:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ab9c:	test   rcx,rcx
   14002ab9f:	je     0x14002abaf
   14002aba1:	mov    r9,rbx
   14002aba4:	mov    r8d,esi
   14002aba7:	mov    edx,ebp
   14002aba9:	call   QWORD PTR [rip+0x39579]        # 0x140064128
   14002abaf:	mov    rbp,QWORD PTR [rsp+0x38]
   14002abb4:	mov    rsi,QWORD PTR [rsp+0x40]
   14002abb9:	mov    rax,rbx
   14002abbc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002abc1:	add    rsp,0x20
   14002abc5:	pop    rdi
   14002abc6:	ret    
   14002abc7:	int3   
   14002abc8:	mov    QWORD PTR [rsp+0x8],rbx
   14002abcd:	mov    QWORD PTR [rsp+0x10],rbp
   14002abd2:	mov    QWORD PTR [rsp+0x18],rsi
   14002abd7:	push   rdi
   14002abd8:	sub    rsp,0x20
   14002abdc:	mov    rdi,rcx
   14002abdf:	mov    rcx,QWORD PTR [rcx+0x8]
   14002abe3:	mov    esi,r9d
   14002abe6:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002abea:	mov    ebp,r8d
   14002abed:	mov    rbx,rdx
   14002abf0:	je     0x14002ac00
   14002abf2:	mov    r9,rdx
   14002abf5:	mov    r8d,esi
   14002abf8:	mov    edx,ebp
   14002abfa:	call   QWORD PTR [rip+0x39520]        # 0x140064120
   14002ac00:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ac04:	test   rcx,rcx
   14002ac07:	je     0x14002ac17
   14002ac09:	mov    r9,rbx
   14002ac0c:	mov    r8d,esi
   14002ac0f:	mov    edx,ebp
   14002ac11:	call   QWORD PTR [rip+0x39509]        # 0x140064120
   14002ac17:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ac1c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ac21:	mov    rax,rbx
   14002ac24:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ac29:	add    rsp,0x20
   14002ac2d:	pop    rdi
   14002ac2e:	ret    
   14002ac2f:	int3   
   14002ac30:	mov    rax,rsp
   14002ac33:	mov    QWORD PTR [rax+0x8],rbx
   14002ac37:	mov    QWORD PTR [rax+0x10],rbp
   14002ac3b:	mov    QWORD PTR [rax+0x18],rsi
   14002ac3f:	mov    QWORD PTR [rax+0x20],rdi
   14002ac43:	push   r12
   14002ac45:	sub    rsp,0x30
   14002ac49:	mov    r12d,DWORD PTR [rsp+0x68]
   14002ac4e:	mov    rdi,rcx
   14002ac51:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ac55:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002ac59:	mov    esi,r9d
   14002ac5c:	mov    ebp,r8d
   14002ac5f:	mov    rbx,rdx
   14002ac62:	je     0x14002ac7c
   14002ac64:	mov    r9d,DWORD PTR [rsp+0x60]
   14002ac69:	mov    QWORD PTR [rax-0x10],rdx
   14002ac6d:	mov    r8d,esi
   14002ac70:	mov    edx,ebp
   14002ac72:	mov    DWORD PTR [rax-0x18],r12d
   14002ac76:	call   QWORD PTR [rip+0x3949c]        # 0x140064118
   14002ac7c:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ac80:	test   rcx,rcx
   14002ac83:	je     0x14002ac9f
   14002ac85:	mov    r9d,DWORD PTR [rsp+0x60]
   14002ac8a:	mov    r8d,esi
   14002ac8d:	mov    edx,ebp
   14002ac8f:	mov    QWORD PTR [rsp+0x28],rbx
   14002ac94:	mov    DWORD PTR [rsp+0x20],r12d
   14002ac99:	call   QWORD PTR [rip+0x39479]        # 0x140064118
   14002ac9f:	mov    rbp,QWORD PTR [rsp+0x48]
   14002aca4:	mov    rsi,QWORD PTR [rsp+0x50]
   14002aca9:	mov    rdi,QWORD PTR [rsp+0x58]
   14002acae:	mov    rax,rbx
   14002acb1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002acb6:	add    rsp,0x30
   14002acba:	pop    r12
   14002acbc:	ret    
   14002acbd:	int3   
   14002acbe:	int3   
   14002acbf:	int3   
   14002acc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002acc5:	mov    QWORD PTR [rsp+0x10],rbp
   14002acca:	mov    QWORD PTR [rsp+0x18],rsi
   14002accf:	push   rdi
   14002acd0:	sub    rsp,0x20
   14002acd4:	mov    rdi,rcx
   14002acd7:	mov    rcx,QWORD PTR [rcx+0x8]
   14002acdb:	mov    esi,r9d
   14002acde:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002ace2:	mov    ebp,r8d
   14002ace5:	mov    rbx,rdx
   14002ace8:	je     0x14002acf8
   14002acea:	mov    r9,rdx
   14002aced:	mov    r8d,esi
   14002acf0:	mov    edx,ebp
   14002acf2:	call   QWORD PTR [rip+0x39418]        # 0x140064110
   14002acf8:	mov    rcx,QWORD PTR [rdi+0x10]
   14002acfc:	test   rcx,rcx
   14002acff:	je     0x14002ad0f
   14002ad01:	mov    r9,rbx
   14002ad04:	mov    r8d,esi
   14002ad07:	mov    edx,ebp
   14002ad09:	call   QWORD PTR [rip+0x39401]        # 0x140064110
   14002ad0f:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ad14:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ad19:	mov    rax,rbx
   14002ad1c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad21:	add    rsp,0x20
   14002ad25:	pop    rdi
   14002ad26:	ret    
   14002ad27:	int3   
   14002ad28:	mov    rax,rsp
   14002ad2b:	mov    QWORD PTR [rax+0x8],rbx
   14002ad2f:	mov    QWORD PTR [rax+0x10],rbp
   14002ad33:	mov    QWORD PTR [rax+0x18],rsi
   14002ad37:	mov    QWORD PTR [rax+0x20],rdi
   14002ad3b:	push   r12
   14002ad3d:	sub    rsp,0x30
   14002ad41:	mov    r12d,DWORD PTR [rsp+0x68]
   14002ad46:	mov    rdi,rcx
   14002ad49:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ad4d:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002ad51:	mov    esi,r9d
   14002ad54:	mov    ebp,r8d
   14002ad57:	mov    rbx,rdx
   14002ad5a:	je     0x14002ad74
   14002ad5c:	mov    r9d,DWORD PTR [rsp+0x60]
   14002ad61:	mov    QWORD PTR [rax-0x10],rdx
   14002ad65:	mov    r8d,esi
   14002ad68:	mov    edx,ebp
   14002ad6a:	mov    DWORD PTR [rax-0x18],r12d
   14002ad6e:	call   QWORD PTR [rip+0x39394]        # 0x140064108
   14002ad74:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ad78:	test   rcx,rcx
   14002ad7b:	je     0x14002ad97
   14002ad7d:	mov    r9d,DWORD PTR [rsp+0x60]
   14002ad82:	mov    r8d,esi
   14002ad85:	mov    edx,ebp
   14002ad87:	mov    QWORD PTR [rsp+0x28],rbx
   14002ad8c:	mov    DWORD PTR [rsp+0x20],r12d
   14002ad91:	call   QWORD PTR [rip+0x39371]        # 0x140064108
   14002ad97:	mov    rbp,QWORD PTR [rsp+0x48]
   14002ad9c:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ada1:	mov    rdi,QWORD PTR [rsp+0x58]
   14002ada6:	mov    rax,rbx
   14002ada9:	mov    rbx,QWORD PTR [rsp+0x40]
   14002adae:	add    rsp,0x30
   14002adb2:	pop    r12
   14002adb4:	ret    
   14002adb5:	int3   
   14002adb6:	int3   
   14002adb7:	int3   
   14002adb8:	mov    QWORD PTR [rsp+0x8],rbx
   14002adbd:	mov    QWORD PTR [rsp+0x10],rbp
   14002adc2:	mov    QWORD PTR [rsp+0x18],rsi
   14002adc7:	push   rdi
   14002adc8:	sub    rsp,0x20
   14002adcc:	mov    rsi,rcx
   14002adcf:	mov    rcx,QWORD PTR [rcx+0x8]
   14002add3:	xor    ebx,ebx
   14002add5:	cmp    rcx,QWORD PTR [rsi+0x10]
   14002add9:	mov    ebp,r8d
   14002addc:	mov    rdi,rdx
   14002addf:	mov    eax,ebx
   14002ade1:	je     0x14002adf7
   14002ade3:	cmp    rdx,rbx
   14002ade6:	jne    0x14002aded
   14002ade8:	mov    rdx,rbx
   14002adeb:	jmp    0x14002adf1
   14002aded:	mov    rdx,QWORD PTR [rdx+0x8]
   14002adf1:	call   QWORD PTR [rip+0x392b9]        # 0x1400640b0
   14002adf7:	mov    rcx,QWORD PTR [rsi+0x10]
   14002adfb:	cmp    rcx,rbx
   14002adfe:	je     0x14002ae15
   14002ae00:	cmp    rdi,rbx
   14002ae03:	je     0x14002ae09
   14002ae05:	mov    rbx,QWORD PTR [rdi+0x8]
   14002ae09:	mov    r8d,ebp
   14002ae0c:	mov    rdx,rbx
   14002ae0f:	call   QWORD PTR [rip+0x3929b]        # 0x1400640b0
   14002ae15:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae1a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ae1f:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ae24:	add    rsp,0x20
   14002ae28:	pop    rdi
   14002ae29:	ret    
   14002ae2a:	int3   
   14002ae2b:	int3   
   14002ae2c:	mov    QWORD PTR [rsp+0x18],rbx
   14002ae31:	push   rdi
   14002ae32:	sub    rsp,0x20
   14002ae36:	mov    rbx,rcx
   14002ae39:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ae3d:	mov    rdi,rdx
   14002ae40:	lea    rdx,[rsp+0x30]
   14002ae45:	call   QWORD PTR [rip+0x3931d]        # 0x140064168
   14002ae4b:	mov    rcx,QWORD PTR [rbx+0x10]
   14002ae4f:	lea    rdx,[rsp+0x38]
   14002ae54:	call   QWORD PTR [rip+0x39316]        # 0x140064170
   14002ae5a:	mov    ecx,DWORD PTR [rsp+0x30]
   14002ae5e:	call   0x140048e80
   14002ae63:	mov    ecx,DWORD PTR [rsp+0x38]
   14002ae67:	mov    ebx,eax
   14002ae69:	call   0x140048e80
   14002ae6e:	mov    ecx,DWORD PTR [rdi]
   14002ae70:	mov    edx,eax
   14002ae72:	mov    r8d,ebx
   14002ae75:	call   QWORD PTR [rip+0x395fd]        # 0x140064478
   14002ae7b:	mov    ecx,DWORD PTR [rsp+0x34]
   14002ae7f:	mov    DWORD PTR [rdi],eax
   14002ae81:	call   0x140048e80
   14002ae86:	mov    ecx,DWORD PTR [rsp+0x3c]
   14002ae8a:	mov    ebx,eax
   14002ae8c:	call   0x140048e80
   14002ae91:	mov    ecx,DWORD PTR [rdi+0x4]
   14002ae94:	mov    edx,eax
   14002ae96:	mov    r8d,ebx
   14002ae99:	call   QWORD PTR [rip+0x395d9]        # 0x140064478
   14002ae9f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aea4:	mov    DWORD PTR [rdi+0x4],eax
   14002aea7:	add    rsp,0x20
   14002aeab:	pop    rdi
   14002aeac:	ret    
   14002aead:	int3   
   14002aeae:	int3   
   14002aeaf:	int3   
   14002aeb0:	mov    QWORD PTR [rsp+0x18],rbx
   14002aeb5:	push   rdi
   14002aeb6:	sub    rsp,0x20
   14002aeba:	mov    rbx,rcx
   14002aebd:	mov    rcx,QWORD PTR [rcx+0x10]
   14002aec1:	mov    rdi,rdx
   14002aec4:	lea    rdx,[rsp+0x38]
   14002aec9:	call   QWORD PTR [rip+0x39299]        # 0x140064168
   14002aecf:	mov    rcx,QWORD PTR [rbx+0x10]
   14002aed3:	lea    rdx,[rsp+0x30]
   14002aed8:	call   QWORD PTR [rip+0x39292]        # 0x140064170
   14002aede:	mov    ecx,DWORD PTR [rsp+0x30]
   14002aee2:	call   0x140048e80
   14002aee7:	mov    ecx,DWORD PTR [rsp+0x38]
   14002aeeb:	mov    ebx,eax
   14002aeed:	call   0x140048e80
   14002aef2:	mov    ecx,DWORD PTR [rdi]
   14002aef4:	mov    edx,eax
   14002aef6:	mov    r8d,ebx
   14002aef9:	call   QWORD PTR [rip+0x39579]        # 0x140064478
   14002aeff:	mov    ecx,DWORD PTR [rsp+0x34]
   14002af03:	mov    DWORD PTR [rdi],eax
   14002af05:	call   0x140048e80
   14002af0a:	mov    ecx,DWORD PTR [rsp+0x3c]
   14002af0e:	mov    ebx,eax
   14002af10:	call   0x140048e80
   14002af15:	mov    ecx,DWORD PTR [rdi+0x4]
   14002af18:	mov    edx,eax
   14002af1a:	mov    r8d,ebx
   14002af1d:	call   QWORD PTR [rip+0x39555]        # 0x140064478
   14002af23:	mov    rbx,QWORD PTR [rsp+0x40]
   14002af28:	mov    DWORD PTR [rdi+0x4],eax
   14002af2b:	add    rsp,0x20
   14002af2f:	pop    rdi
   14002af30:	ret    
   14002af31:	int3   
   14002af32:	int3   
   14002af33:	int3   
   14002af34:	sub    rsp,0x28
   14002af38:	mov    ecx,0x20
   14002af3d:	call   0x14001ac0c
   14002af42:	xor    edx,edx
   14002af44:	cmp    rax,rdx
   14002af47:	je     0x14002af60
   14002af49:	lea    rcx,[rip+0x3f9a8]        # 0x14006a8f8
   14002af50:	mov    QWORD PTR [rax+0x8],rdx
   14002af54:	mov    QWORD PTR [rax+0x10],rdx
   14002af58:	mov    QWORD PTR [rax],rcx
   14002af5b:	mov    DWORD PTR [rax+0x18],edx
   14002af5e:	jmp    0x14002af63
   14002af60:	mov    rax,rdx
   14002af63:	add    rsp,0x28
   14002af67:	ret    
   14002af68:	sub    rsp,0x28
   14002af6c:	mov    ecx,0x10
   14002af71:	call   0x14001ac0c
   14002af76:	test   rax,rax
   14002af79:	je     0x14002af8c
   14002af7b:	and    QWORD PTR [rax+0x8],0x0
   14002af80:	lea    rcx,[rip+0x3db19]        # 0x140068aa0
   14002af87:	mov    QWORD PTR [rax],rcx
   14002af8a:	jmp    0x14002af8e
   14002af8c:	xor    eax,eax
   14002af8e:	add    rsp,0x28
   14002af92:	ret    
   14002af93:	int3   
   14002af94:	xor    edx,edx
   14002af96:	cmp    rcx,rdx
   14002af99:	je     0x14002afb0
   14002af9b:	lea    rax,[rip+0x3f956]        # 0x14006a8f8
   14002afa2:	mov    QWORD PTR [rcx+0x8],rdx
   14002afa6:	mov    QWORD PTR [rcx+0x10],rdx
   14002afaa:	mov    QWORD PTR [rcx],rax
   14002afad:	mov    DWORD PTR [rcx+0x18],edx
   14002afb0:	ret    
   14002afb1:	int3   
   14002afb2:	int3   
   14002afb3:	int3   
   14002afb4:	test   rcx,rcx
   14002afb7:	je     0x14002afc8
   14002afb9:	and    QWORD PTR [rcx+0x8],0x0
   14002afbe:	lea    rax,[rip+0x3dadb]        # 0x140068aa0
   14002afc5:	mov    QWORD PTR [rcx],rax
   14002afc8:	ret    
   14002afc9:	int3   
   14002afca:	int3   
   14002afcb:	int3   
   14002afcc:	rex push rbx
   14002afce:	sub    rsp,0x20
   14002afd2:	test   dl,0x1
   14002afd5:	lea    rax,[rip+0x3f8a4]        # 0x14006a880
   14002afdc:	mov    rbx,rcx
   14002afdf:	mov    QWORD PTR [rcx],rax
   14002afe2:	je     0x14002afe9
   14002afe4:	call   0x14001ac50
   14002afe9:	mov    rax,rbx
   14002afec:	add    rsp,0x20
   14002aff0:	pop    rbx
   14002aff1:	ret    
   14002aff2:	int3   
   14002aff3:	int3   
   14002aff4:	rex push rbx
   14002aff6:	sub    rsp,0x20
   14002affa:	test   dl,0x1
   14002affd:	lea    rax,[rip+0x3f8b4]        # 0x14006a8b8
   14002b004:	mov    rbx,rcx
   14002b007:	mov    QWORD PTR [rcx],rax
   14002b00a:	je     0x14002b011
   14002b00c:	call   0x14001ac50
   14002b011:	mov    rax,rbx
   14002b014:	add    rsp,0x20
   14002b018:	pop    rbx
   14002b019:	ret    
   14002b01a:	int3   
   14002b01b:	int3   
   14002b01c:	rex push rdi
   14002b01e:	sub    rsp,0x40
   14002b022:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002b02b:	mov    QWORD PTR [rsp+0x50],rbx
   14002b030:	mov    QWORD PTR [rsp+0x60],rsi
   14002b035:	mov    esi,ecx
   14002b037:	call   0x140021ac0
   14002b03c:	mov    rdi,rax
   14002b03f:	xor    ebx,ebx
   14002b041:	cmp    QWORD PTR [rax+0x38],rbx
   14002b045:	jne    0x14002b0ab
   14002b047:	cmp    esi,ebx
   14002b049:	je     0x14002b0ab
   14002b04b:	lea    rcx,[rip+0x19f6]        # 0x14002ca48
   14002b052:	call   0x14001abfc
   14002b057:	mov    rsi,rax
   14002b05a:	mov    ecx,0xb8
   14002b05f:	call   0x14001ac0c
   14002b064:	mov    QWORD PTR [rsp+0x58],rax
   14002b069:	cmp    rax,rbx
   14002b06c:	je     0x14002b09f
   14002b06e:	mov    DWORD PTR [rsp+0x28],0x2
   14002b076:	mov    QWORD PTR [rsp+0x20],0x8
   14002b07f:	lea    r9,[rip+0xfffffffffffff8b6]        # 0x14002a93c
   14002b086:	lea    r8,[rip+0xffffffffffffff07]        # 0x14002af94
   14002b08d:	lea    rdx,[rip+0x3f694]        # 0x14006a728
   14002b094:	mov    rcx,rax
   14002b097:	call   0x14002dbc0
   14002b09c:	mov    rbx,rax
   14002b09f:	mov    QWORD PTR [rdi+0x38],rbx
   14002b0a3:	mov    rcx,rsi
   14002b0a6:	call   0x14001abfc
   14002b0ab:	mov    rax,QWORD PTR [rdi+0x38]
   14002b0af:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b0b4:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b0b9:	add    rsp,0x40
   14002b0bd:	pop    rdi
   14002b0be:	ret    
   14002b0bf:	int3   
   14002b0c0:	int3   
   14002b0c1:	int3   
   14002b0c2:	int3   
   14002b0c3:	int3   
   14002b0c4:	int3   
   14002b0c5:	int3   
   14002b0c6:	int3   
   14002b0c7:	int3   
   14002b0c8:	int3   
   14002b0c9:	int3   
   14002b0ca:	int3   
   14002b0cb:	int3   
   14002b0cc:	rex push rbp
   14002b0ce:	sub    rsp,0x20
   14002b0d2:	mov    rbp,rdx
   14002b0d5:	mov    rcx,QWORD PTR [rbp+0x58]
   14002b0d9:	call   0x14001ac50
   14002b0de:	add    rsp,0x20
   14002b0e2:	pop    rbp
   14002b0e3:	ret    
   14002b0e4:	rex push rbx
   14002b0e6:	sub    rsp,0x20
   14002b0ea:	mov    rbx,rcx
   14002b0ed:	mov    ecx,0x1
   14002b0f2:	call   0x14002b01c
   14002b0f7:	mov    rdx,rbx
   14002b0fa:	mov    rcx,rax
   14002b0fd:	add    rsp,0x20
   14002b101:	pop    rbx
   14002b102:	jmp    0x14002dcfc
   14002b107:	int3   
   14002b108:	rex push rbx
   14002b10a:	sub    rsp,0x20
   14002b10e:	test   rdx,rdx
   14002b111:	mov    rbx,rcx
   14002b114:	jne    0x14002b11a
   14002b116:	xor    eax,eax
   14002b118:	jmp    0x14002b14b
   14002b11a:	mov    QWORD PTR [rcx+0x8],rdx
   14002b11e:	mov    ecx,0x1
   14002b123:	call   0x14002b01c
   14002b128:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b12c:	lea    rcx,[rax+0x30]
   14002b130:	call   0x14002fac8
   14002b135:	mov    rcx,rbx
   14002b138:	mov    QWORD PTR [rax],rbx
   14002b13b:	mov    r8,QWORD PTR [rbx]
   14002b13e:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b142:	call   QWORD PTR [r8+0x18]
   14002b146:	mov    eax,0x1
   14002b14b:	add    rsp,0x20
   14002b14f:	pop    rbx
   14002b150:	ret    
   14002b151:	int3   
   14002b152:	int3   
   14002b153:	int3   
   14002b154:	mov    QWORD PTR [rsp+0x8],rbx
   14002b159:	push   rdi
   14002b15a:	sub    rsp,0x20
   14002b15e:	mov    rdi,QWORD PTR [rcx+0x8]
   14002b162:	mov    rbx,rcx
   14002b165:	test   rdi,rdi
   14002b168:	je     0x14002b185
   14002b16a:	call   0x140021ac0
   14002b16f:	mov    rcx,QWORD PTR [rax+0x38]
   14002b173:	test   rcx,rcx
   14002b176:	je     0x14002b185
   14002b178:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b17c:	add    rcx,0x30
   14002b180:	call   0x14002f8ec
   14002b185:	mov    rdx,QWORD PTR [rbx]
   14002b188:	mov    rcx,rbx
   14002b18b:	call   QWORD PTR [rdx+0x28]
   14002b18e:	and    QWORD PTR [rbx+0x8],0x0
   14002b193:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b198:	mov    rax,rdi
   14002b19b:	add    rsp,0x20
   14002b19f:	pop    rdi
   14002b1a0:	ret    
   14002b1a1:	int3   
   14002b1a2:	int3   
   14002b1a3:	int3   
   14002b1a4:	sub    rsp,0x28
   14002b1a8:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b1ad:	lea    rax,[rip+0x3f744]        # 0x14006a8f8
   14002b1b4:	mov    QWORD PTR [rcx],rax
   14002b1b7:	je     0x14002b1c7
   14002b1b9:	call   0x14002b154
   14002b1be:	mov    rcx,rax
   14002b1c1:	call   QWORD PTR [rip+0x38ec1]        # 0x140064088
   14002b1c7:	add    rsp,0x28
   14002b1cb:	ret    
   14002b1cc:	mov    QWORD PTR [rsp+0x8],rcx
   14002b1d1:	push   rbx
   14002b1d2:	sub    rsp,0x30
   14002b1d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b1df:	mov    rbx,rcx
   14002b1e2:	and    QWORD PTR [rcx+0x8],0x0
   14002b1e7:	and    QWORD PTR [rcx+0x10],0x0
   14002b1ec:	and    DWORD PTR [rcx+0x18],0x0
   14002b1f0:	lea    rax,[rip+0x3f851]        # 0x14006aa48
   14002b1f7:	mov    QWORD PTR [rcx],rax
   14002b1fa:	test   rdx,rdx
   14002b1fd:	jne    0x14002b203
   14002b1ff:	xor    ecx,ecx
   14002b201:	jmp    0x14002b207
   14002b203:	mov    rcx,QWORD PTR [rdx+0x40]
   14002b207:	mov    QWORD PTR [rbx+0x20],rcx
   14002b20b:	call   QWORD PTR [rip+0x39797]        # 0x1400649a8
   14002b211:	mov    rdx,rax
   14002b214:	mov    rcx,rbx
   14002b217:	call   0x14002b108
   14002b21c:	test   eax,eax
   14002b21e:	jne    0x14002b226
   14002b220:	call   0x14002a8f4
   14002b225:	nop
   14002b226:	mov    rax,rbx
   14002b229:	add    rsp,0x30
   14002b22d:	pop    rbx
   14002b22e:	ret    
   14002b22f:	int3   
   14002b230:	int3   
   14002b231:	int3   
   14002b232:	int3   
   14002b233:	int3   
   14002b234:	int3   
   14002b235:	int3   
   14002b236:	int3   
   14002b237:	int3   
   14002b238:	int3   
   14002b239:	int3   
   14002b23a:	int3   
   14002b23b:	int3   
   14002b23c:	rex push rbp
   14002b23e:	sub    rsp,0x20
   14002b242:	mov    rbp,rdx
   14002b245:	mov    rcx,QWORD PTR [rbp+0x40]
   14002b249:	call   0x14002b1a4
   14002b24e:	add    rsp,0x20
   14002b252:	pop    rbp
   14002b253:	ret    
   14002b254:	mov    QWORD PTR [rsp+0x8],rcx
   14002b259:	push   rbx
   14002b25a:	sub    rsp,0x30
   14002b25e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b267:	mov    rbx,rcx
   14002b26a:	lea    rax,[rip+0x3f7d7]        # 0x14006aa48
   14002b271:	mov    QWORD PTR [rcx],rax
   14002b274:	call   0x14002b154
   14002b279:	mov    rdx,rax
   14002b27c:	mov    rcx,QWORD PTR [rbx+0x20]
   14002b280:	call   QWORD PTR [rip+0x3971a]        # 0x1400649a0
   14002b286:	nop
   14002b287:	mov    rcx,rbx
   14002b28a:	add    rsp,0x30
   14002b28e:	pop    rbx
   14002b28f:	jmp    0x14002b1a4
   14002b294:	rex push rbp
   14002b296:	sub    rsp,0x20
   14002b29a:	mov    rbp,rdx
   14002b29d:	mov    rcx,QWORD PTR [rbp+0x40]
   14002b2a1:	call   0x14002b1a4
   14002b2a6:	add    rsp,0x20
   14002b2aa:	pop    rbp
   14002b2ab:	ret    
   14002b2ac:	mov    QWORD PTR [rsp+0x8],rcx
   14002b2b1:	push   rbx
   14002b2b2:	sub    rsp,0x30
   14002b2b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b2bf:	mov    rbx,rcx
   14002b2c2:	and    QWORD PTR [rcx+0x8],0x0
   14002b2c7:	and    QWORD PTR [rcx+0x10],0x0
   14002b2cc:	and    DWORD PTR [rcx+0x18],0x0
   14002b2d0:	lea    rax,[rip+0x3f8c1]        # 0x14006ab98
   14002b2d7:	mov    QWORD PTR [rcx],rax
   14002b2da:	test   rdx,rdx
   14002b2dd:	jne    0x14002b2e3
   14002b2df:	xor    ecx,ecx
   14002b2e1:	jmp    0x14002b2e7
   14002b2e3:	mov    rcx,QWORD PTR [rdx+0x40]
   14002b2e7:	mov    QWORD PTR [rbx+0x20],rcx
   14002b2eb:	call   QWORD PTR [rip+0x394ef]        # 0x1400647e0
   14002b2f1:	mov    rdx,rax
   14002b2f4:	mov    rcx,rbx
   14002b2f7:	call   0x14002b108
   14002b2fc:	test   eax,eax
   14002b2fe:	jne    0x14002b306
   14002b300:	call   0x14002a8f4
   14002b305:	nop
   14002b306:	mov    rax,rbx
   14002b309:	add    rsp,0x30
   14002b30d:	pop    rbx
   14002b30e:	ret    
   14002b30f:	int3   
   14002b310:	int3   
   14002b311:	int3   
   14002b312:	int3   
   14002b313:	int3   
   14002b314:	int3   
   14002b315:	int3   
   14002b316:	int3   
   14002b317:	int3   
   14002b318:	int3   
   14002b319:	int3   
   14002b31a:	int3   
   14002b31b:	int3   
   14002b31c:	rex push rbp
   14002b31e:	sub    rsp,0x20
   14002b322:	mov    rbp,rdx
   14002b325:	mov    rcx,QWORD PTR [rbp+0x40]
   14002b329:	call   0x14002b1a4
   14002b32e:	add    rsp,0x20
   14002b332:	pop    rbp
   14002b333:	ret    
   14002b334:	mov    QWORD PTR [rsp+0x8],rcx
   14002b339:	push   rbx
   14002b33a:	sub    rsp,0x30
   14002b33e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b347:	mov    rbx,rcx
   14002b34a:	lea    rax,[rip+0x3f847]        # 0x14006ab98
   14002b351:	mov    QWORD PTR [rcx],rax
   14002b354:	call   0x14002b154
   14002b359:	mov    rdx,rax
   14002b35c:	mov    rcx,QWORD PTR [rbx+0x20]
   14002b360:	call   QWORD PTR [rip+0x3963a]        # 0x1400649a0
   14002b366:	nop
   14002b367:	mov    rcx,rbx
   14002b36a:	add    rsp,0x30
   14002b36e:	pop    rbx
   14002b36f:	jmp    0x14002b1a4
   14002b374:	rex push rbp
   14002b376:	sub    rsp,0x20
   14002b37a:	mov    rbp,rdx
   14002b37d:	mov    rcx,QWORD PTR [rbp+0x40]
   14002b381:	call   0x14002b1a4
   14002b386:	add    rsp,0x20
   14002b38a:	pop    rbp
   14002b38b:	ret    
   14002b38c:	mov    QWORD PTR [rsp+0x8],rcx
   14002b391:	push   rbx
   14002b392:	sub    rsp,0x30
   14002b396:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b39f:	mov    rbx,rcx
   14002b3a2:	and    QWORD PTR [rcx+0x8],0x0
   14002b3a7:	and    QWORD PTR [rcx+0x10],0x0
   14002b3ac:	and    DWORD PTR [rcx+0x18],0x0
   14002b3b0:	lea    rax,[rip+0x3f931]        # 0x14006ace8
   14002b3b7:	mov    QWORD PTR [rcx],rax
   14002b3ba:	mov    rcx,QWORD PTR [rdx+0x40]
   14002b3be:	mov    QWORD PTR [rbx+0x20],rcx
   14002b3c2:	lea    rdx,[rbx+0x28]
   14002b3c6:	call   QWORD PTR [rip+0x3940c]        # 0x1400647d8
   14002b3cc:	mov    rdx,rax
   14002b3cf:	mov    rcx,rbx
   14002b3d2:	call   0x14002b108
   14002b3d7:	test   eax,eax
   14002b3d9:	jne    0x14002b3e1
   14002b3db:	call   0x14002a8f4
   14002b3e0:	nop
   14002b3e1:	mov    rax,rbx
   14002b3e4:	add    rsp,0x30
   14002b3e8:	pop    rbx
   14002b3e9:	ret    
   14002b3ea:	int3   
   14002b3eb:	int3   
   14002b3ec:	rex push rbp
   14002b3ee:	sub    rsp,0x20
   14002b3f2:	mov    rbp,rdx
   14002b3f5:	mov    rcx,QWORD PTR [rbp+0x40]
   14002b3f9:	call   0x14002b1a4
   14002b3fe:	add    rsp,0x20
   14002b402:	pop    rbp
   14002b403:	ret    
   14002b404:	mov    QWORD PTR [rsp+0x8],rcx
   14002b409:	push   rbx
   14002b40a:	sub    rsp,0x30
   14002b40e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b417:	mov    rbx,rcx
   14002b41a:	lea    rax,[rip+0x3f8c7]        # 0x14006ace8
   14002b421:	mov    QWORD PTR [rcx],rax
   14002b424:	lea    rdx,[rcx+0x28]
   14002b428:	mov    rcx,QWORD PTR [rcx+0x20]
   14002b42c:	call   QWORD PTR [rip+0x3939e]        # 0x1400647d0
   14002b432:	mov    rcx,rbx
   14002b435:	call   0x14002b154
   14002b43a:	nop
   14002b43b:	mov    rcx,rbx
   14002b43e:	add    rsp,0x30
   14002b442:	pop    rbx
   14002b443:	jmp    0x14002b1a4
   14002b448:	int3   
   14002b449:	int3   
   14002b44a:	int3   
   14002b44b:	int3   
   14002b44c:	int3   
   14002b44d:	int3   
   14002b44e:	int3   
   14002b44f:	int3   
   14002b450:	int3   
   14002b451:	int3   
   14002b452:	int3   
   14002b453:	int3   
   14002b454:	rex push rbp
   14002b456:	sub    rsp,0x20
   14002b45a:	mov    rbp,rdx
   14002b45d:	mov    rcx,QWORD PTR [rbp+0x40]
   14002b461:	call   0x14002b1a4
   14002b466:	add    rsp,0x20
   14002b46a:	pop    rbp
   14002b46b:	ret    
   14002b46c:	rex push rdi
   14002b46e:	sub    rsp,0x40
   14002b472:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002b47b:	mov    QWORD PTR [rsp+0x50],rbx
   14002b480:	mov    QWORD PTR [rsp+0x60],rsi
   14002b485:	mov    esi,ecx
   14002b487:	call   0x140021ac0
   14002b48c:	mov    rdi,rax
   14002b48f:	xor    ebx,ebx
   14002b491:	cmp    QWORD PTR [rax+0x40],rbx
   14002b495:	jne    0x14002b4fb
   14002b497:	cmp    esi,ebx
   14002b499:	je     0x14002b4fb
   14002b49b:	lea    rcx,[rip+0x15a6]        # 0x14002ca48
   14002b4a2:	call   0x14001abfc
   14002b4a7:	mov    rsi,rax
   14002b4aa:	mov    ecx,0xb8
   14002b4af:	call   0x14001ac0c
   14002b4b4:	mov    QWORD PTR [rsp+0x58],rax
   14002b4b9:	cmp    rax,rbx
   14002b4bc:	je     0x14002b4ef
   14002b4be:	mov    DWORD PTR [rsp+0x28],0x1
   14002b4c6:	mov    QWORD PTR [rsp+0x20],0x8
   14002b4cf:	lea    r9,[rip+0xfffffffffffff466]        # 0x14002a93c
   14002b4d6:	lea    r8,[rip+0xfffffffffffffad7]        # 0x14002afb4
   14002b4dd:	lea    rdx,[rip+0x3f304]        # 0x14006a7e8
   14002b4e4:	mov    rcx,rax
   14002b4e7:	call   0x14002dbc0
   14002b4ec:	mov    rbx,rax
   14002b4ef:	mov    QWORD PTR [rdi+0x40],rbx
   14002b4f3:	mov    rcx,rsi
   14002b4f6:	call   0x14001abfc
   14002b4fb:	mov    rax,QWORD PTR [rdi+0x40]
   14002b4ff:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b504:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b509:	add    rsp,0x40
   14002b50d:	pop    rdi
   14002b50e:	ret    
   14002b50f:	int3   
   14002b510:	int3   
   14002b511:	int3   
   14002b512:	int3   
   14002b513:	int3   
   14002b514:	int3   
   14002b515:	int3   
   14002b516:	int3   
   14002b517:	int3   
   14002b518:	int3   
   14002b519:	int3   
   14002b51a:	int3   
   14002b51b:	int3   
   14002b51c:	rex push rbp
   14002b51e:	sub    rsp,0x20
   14002b522:	mov    rbp,rdx
   14002b525:	mov    rcx,QWORD PTR [rbp+0x58]
   14002b529:	call   0x14001ac50
   14002b52e:	add    rsp,0x20
   14002b532:	pop    rbp
   14002b533:	ret    
   14002b534:	rex push rbx
   14002b536:	sub    rsp,0x20
   14002b53a:	mov    rbx,rcx
   14002b53d:	mov    ecx,0x1
   14002b542:	call   0x14002b46c
   14002b547:	mov    rdx,rbx
   14002b54a:	mov    rcx,rax
   14002b54d:	add    rsp,0x20
   14002b551:	pop    rbx
   14002b552:	jmp    0x14002dcfc
   14002b557:	int3   
   14002b558:	rex push rbx
   14002b55a:	sub    rsp,0x20
   14002b55e:	test   rdx,rdx
   14002b561:	mov    rbx,rcx
   14002b564:	jne    0x14002b56a
   14002b566:	xor    eax,eax
   14002b568:	jmp    0x14002b58d
   14002b56a:	mov    QWORD PTR [rcx+0x8],rdx
   14002b56e:	mov    ecx,0x1
   14002b573:	call   0x14002b46c
   14002b578:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b57c:	lea    rcx,[rax+0x30]
   14002b580:	call   0x14002fac8
   14002b585:	mov    QWORD PTR [rax],rbx
   14002b588:	mov    eax,0x1
   14002b58d:	add    rsp,0x20
   14002b591:	pop    rbx
   14002b592:	ret    
   14002b593:	int3   
   14002b594:	mov    QWORD PTR [rsp+0x8],rbx
   14002b599:	push   rdi
   14002b59a:	sub    rsp,0x20
   14002b59e:	mov    rdi,QWORD PTR [rcx+0x8]
   14002b5a2:	mov    rbx,rcx
   14002b5a5:	test   rdi,rdi
   14002b5a8:	je     0x14002b5c5
   14002b5aa:	call   0x140021ac0
   14002b5af:	mov    rcx,QWORD PTR [rax+0x40]
   14002b5b3:	test   rcx,rcx
   14002b5b6:	je     0x14002b5c5
   14002b5b8:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b5bc:	add    rcx,0x30
   14002b5c0:	call   0x14002f8ec
   14002b5c5:	and    QWORD PTR [rbx+0x8],0x0
   14002b5ca:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b5cf:	mov    rax,rdi
   14002b5d2:	add    rsp,0x20
   14002b5d6:	pop    rdi
   14002b5d7:	ret    
   14002b5d8:	sub    rsp,0x28
   14002b5dc:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b5e1:	jne    0x14002b5e7
   14002b5e3:	xor    eax,eax
   14002b5e5:	jmp    0x14002b5f5
   14002b5e7:	call   0x14002b594
   14002b5ec:	mov    rcx,rax
   14002b5ef:	call   QWORD PTR [rip+0x38b83]        # 0x140064178
   14002b5f5:	add    rsp,0x28
   14002b5f9:	ret    
   14002b5fa:	int3   
   14002b5fb:	int3   
   14002b5fc:	mov    QWORD PTR [rsp+0x8],rbx
   14002b601:	push   rdi
   14002b602:	sub    rsp,0x20
   14002b606:	mov    ebx,edx
   14002b608:	mov    rdi,rcx
   14002b60b:	call   0x14002b1a4
   14002b610:	test   bl,0x1
   14002b613:	je     0x14002b61d
   14002b615:	mov    rcx,rdi
   14002b618:	call   0x14001ac50
   14002b61d:	mov    rax,rdi
   14002b620:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b625:	add    rsp,0x20
   14002b629:	pop    rdi
   14002b62a:	ret    
   14002b62b:	int3   
   14002b62c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b631:	push   rdi
   14002b632:	sub    rsp,0x20
   14002b636:	mov    rdi,rcx
   14002b639:	mov    ecx,edx
   14002b63b:	call   QWORD PTR [rip+0x38a3f]        # 0x140064080
   14002b641:	mov    rcx,QWORD PTR [rdi+0x8]
   14002b645:	mov    rbx,rax
   14002b648:	xor    eax,eax
   14002b64a:	cmp    rcx,QWORD PTR [rdi+0x10]
   14002b64e:	je     0x14002b659
   14002b650:	mov    rdx,rbx
   14002b653:	call   QWORD PTR [rip+0x38adf]        # 0x140064138
   14002b659:	mov    rcx,QWORD PTR [rdi+0x10]
   14002b65d:	test   rcx,rcx
   14002b660:	je     0x14002b66b
   14002b662:	mov    rdx,rbx
   14002b665:	call   QWORD PTR [rip+0x38acd]        # 0x140064138
   14002b66b:	mov    rcx,rax
   14002b66e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b673:	add    rsp,0x20
   14002b677:	pop    rdi
   14002b678:	jmp    0x14002b534
   14002b67d:	int3   
   14002b67e:	int3   
   14002b67f:	int3   
   14002b680:	mov    QWORD PTR [rsp+0x8],rbx
   14002b685:	mov    QWORD PTR [rsp+0x10],rsi
   14002b68a:	push   rdi
   14002b68b:	sub    rsp,0x20
   14002b68f:	mov    rsi,rcx
   14002b692:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b696:	xor    ebx,ebx
   14002b698:	cmp    rcx,QWORD PTR [rsi+0x10]
   14002b69c:	mov    rdi,rdx
   14002b69f:	mov    rax,rbx
   14002b6a2:	je     0x14002b6b8
   14002b6a4:	cmp    rdx,rbx
   14002b6a7:	jne    0x14002b6ae
   14002b6a9:	mov    rdx,rbx
   14002b6ac:	jmp    0x14002b6b2
   14002b6ae:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b6b2:	call   QWORD PTR [rip+0x38a80]        # 0x140064138
   14002b6b8:	mov    rcx,QWORD PTR [rsi+0x10]
   14002b6bc:	cmp    rcx,rbx
   14002b6bf:	je     0x14002b6d3
   14002b6c1:	cmp    rdi,rbx
   14002b6c4:	je     0x14002b6ca
   14002b6c6:	mov    rbx,QWORD PTR [rdi+0x8]
   14002b6ca:	mov    rdx,rbx
   14002b6cd:	call   QWORD PTR [rip+0x38a65]        # 0x140064138
   14002b6d3:	mov    rcx,rax
   14002b6d6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b6db:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b6e0:	add    rsp,0x20
   14002b6e4:	pop    rdi
   14002b6e5:	jmp    0x14002b534
   14002b6ea:	int3   
   14002b6eb:	int3   
   14002b6ec:	mov    QWORD PTR [rsp+0x8],rbx
   14002b6f1:	push   rdi
   14002b6f2:	sub    rsp,0x20
   14002b6f6:	mov    ebx,edx
   14002b6f8:	mov    rdi,rcx
   14002b6fb:	call   0x14002b254
   14002b700:	test   bl,0x1
   14002b703:	je     0x14002b70d
   14002b705:	mov    rcx,rdi
   14002b708:	call   0x14001ac50
   14002b70d:	mov    rax,rdi
   14002b710:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b715:	add    rsp,0x20
   14002b719:	pop    rdi
   14002b71a:	ret    
   14002b71b:	int3   
   14002b71c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b721:	push   rdi
   14002b722:	sub    rsp,0x20
   14002b726:	mov    ebx,edx
   14002b728:	mov    rdi,rcx
   14002b72b:	call   0x14002b334
   14002b730:	test   bl,0x1
   14002b733:	je     0x14002b73d
   14002b735:	mov    rcx,rdi
   14002b738:	call   0x14001ac50
   14002b73d:	mov    rax,rdi
   14002b740:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b745:	add    rsp,0x20
   14002b749:	pop    rdi
   14002b74a:	ret    
   14002b74b:	int3   
   14002b74c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b751:	push   rdi
   14002b752:	sub    rsp,0x20
   14002b756:	mov    ebx,edx
   14002b758:	mov    rdi,rcx
   14002b75b:	call   0x14002b404
   14002b760:	test   bl,0x1
   14002b763:	je     0x14002b76d
   14002b765:	mov    rcx,rdi
   14002b768:	call   0x14001ac50
   14002b76d:	mov    rax,rdi
   14002b770:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b775:	add    rsp,0x20
   14002b779:	pop    rdi
   14002b77a:	ret    
   14002b77b:	int3   
   14002b77c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b781:	mov    QWORD PTR [rsp+0x10],rbp
   14002b786:	mov    QWORD PTR [rsp+0x18],rsi
   14002b78b:	push   rdi
   14002b78c:	sub    rsp,0x20
   14002b790:	test   rdx,rdx
   14002b793:	mov    edi,r8d
   14002b796:	mov    rbx,rdx
   14002b799:	mov    esi,ecx
   14002b79b:	je     0x14002b858
   14002b7a1:	test   r8d,r8d
   14002b7a4:	je     0x14002b858
   14002b7aa:	call   0x140021a70
   14002b7af:	mov    r8d,0x6
   14002b7b5:	mov    rbp,QWORD PTR [rax+0x18]
   14002b7b9:	mov    eax,esi
   14002b7bb:	shr    eax,0x4
   14002b7be:	mov    rcx,rbp
   14002b7c1:	add    ax,0x1
   14002b7c5:	movzx  edx,ax
   14002b7c8:	call   QWORD PTR [rip+0x38e52]        # 0x140064620
   14002b7ce:	test   rax,rax
   14002b7d1:	je     0x14002b850
   14002b7d3:	mov    r8d,esi
   14002b7d6:	mov    rdx,rax
   14002b7d9:	mov    rcx,rbp
   14002b7dc:	call   0x140001450
   14002b7e1:	test   rax,rax
   14002b7e4:	je     0x14002b850
   14002b7e6:	lea    edx,[rdi-0x1]
   14002b7e9:	movzx  edi,WORD PTR [rax]
   14002b7ec:	lea    r8,[rax+0x2]
   14002b7f0:	cmp    edx,edi
   14002b7f2:	cmovb  edi,edx
   14002b7f5:	add    rdx,rdx
   14002b7f8:	movsxd rcx,edi
   14002b7fb:	lea    rsi,[rcx+rcx*1]
   14002b7ff:	mov    rcx,rbx
   14002b802:	mov    r9,rsi
   14002b805:	call   0x1400466d0
   14002b80a:	test   eax,eax
   14002b80c:	je     0x14002b834
   14002b80e:	cmp    eax,0xc
   14002b811:	je     0x14002b82e
   14002b813:	cmp    eax,0x16
   14002b816:	je     0x14002b828
   14002b818:	cmp    eax,0x22
   14002b81b:	je     0x14002b828
   14002b81d:	cmp    eax,0x50
   14002b820:	je     0x14002b834
   14002b822:	call   0x1400208f8
   14002b827:	int3   
   14002b828:	call   0x1400208f8
   14002b82d:	int3   
   14002b82e:	call   0x1400208b0
   14002b833:	int3   
   14002b834:	and    WORD PTR [rsi+rbx*1],0x0
   14002b839:	mov    eax,edi
   14002b83b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b840:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b845:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b84a:	add    rsp,0x20
   14002b84e:	pop    rdi
   14002b84f:	ret    
   14002b850:	and    WORD PTR [rbx],0x0
   14002b854:	xor    eax,eax
   14002b856:	jmp    0x14002b83b
   14002b858:	call   0x1400208f8
   14002b85d:	int3   
   14002b85e:	int3   
   14002b85f:	int3   
   14002b860:	sub    rsp,0x28
   14002b864:	call   0x140021a70
   14002b869:	mov    rax,QWORD PTR [rax+0x18]
   14002b86d:	add    rsp,0x28
   14002b871:	ret    
   14002b872:	int3   
   14002b873:	int3   
   14002b874:	lea    rax,[rip+0x5a775]        # 0x140085ff0
   14002b87b:	ret    
   14002b87c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b881:	push   rdi
   14002b882:	sub    rsp,0x20
   14002b886:	test   edx,edx
   14002b888:	mov    ebx,edx
   14002b88a:	mov    rdi,rcx
   14002b88d:	jns    0x14002b893
   14002b88f:	xor    eax,eax
   14002b891:	jmp    0x14002b8bc
   14002b893:	lea    eax,[rdx+0x1]
   14002b896:	imul   eax,r8d
   14002b89a:	movsxd rcx,eax
   14002b89d:	add    rcx,0x18
   14002b8a1:	call   0x1400480c0
   14002b8a6:	test   rax,rax
   14002b8a9:	je     0x14002b88f
   14002b8ab:	and    DWORD PTR [rax+0x8],0x0
   14002b8af:	mov    QWORD PTR [rax],rdi
   14002b8b2:	mov    DWORD PTR [rax+0x10],0x1
   14002b8b9:	mov    DWORD PTR [rax+0xc],ebx
   14002b8bc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b8c1:	add    rsp,0x20
   14002b8c5:	pop    rdi
   14002b8c6:	ret    
   14002b8c7:	int3   
   14002b8c8:	mov    rcx,rdx
   14002b8cb:	jmp    0x1400485c0
   14002b8d0:	rex push rbx
   14002b8d2:	sub    rsp,0x20
   14002b8d6:	mov    ebx,r8d
   14002b8d9:	mov    r8,rdx
   14002b8dc:	test   ebx,ebx
   14002b8de:	jns    0x14002b8e4
   14002b8e0:	xor    eax,eax
   14002b8e2:	jmp    0x14002b902
   14002b8e4:	lea    eax,[rbx+0x1]
   14002b8e7:	mov    rcx,r8
   14002b8ea:	imul   eax,r9d
   14002b8ee:	movsxd rdx,eax
   14002b8f1:	add    rdx,0x18
   14002b8f5:	call   0x140048e90
   14002b8fa:	test   rax,rax
   14002b8fd:	je     0x14002b8e0
   14002b8ff:	mov    DWORD PTR [rax+0xc],ebx
   14002b902:	add    rsp,0x20
   14002b906:	pop    rbx
   14002b907:	ret    
   14002b908:	mov    rax,rcx
   14002b90b:	ret    
   14002b90c:	lock add DWORD PTR [rcx+0x18],0x1
   14002b911:	lea    rax,[rcx+0x8]
   14002b915:	ret    
   14002b916:	int3   
   14002b917:	int3   
   14002b918:	rex push rbx
   14002b91a:	sub    rsp,0x20
   14002b91e:	mov    rbx,rcx
   14002b921:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b925:	test   rcx,rcx
   14002b928:	je     0x14002b934
   14002b92a:	call   0x14001ac50
   14002b92f:	and    QWORD PTR [rbx+0x8],0x0
   14002b934:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b938:	test   rcx,rcx
   14002b93b:	je     0x14002b947
   14002b93d:	call   0x14001ac50
   14002b942:	and    QWORD PTR [rbx+0x10],0x0
   14002b947:	cmp    QWORD PTR [rbx+0x18],0x0
   14002b94c:	je     0x14002b966
   14002b94e:	cmp    QWORD PTR [rbx+0x18],0xffffffffffffffff
   14002b953:	je     0x14002b961
   14002b955:	mov    rax,QWORD PTR [rbx]
   14002b958:	mov    rcx,rbx
   14002b95b:	call   QWORD PTR [rax+0x90]
   14002b961:	and    QWORD PTR [rbx+0x18],0x0
   14002b966:	add    rsp,0x20
   14002b96a:	pop    rbx
   14002b96b:	ret    
   14002b96c:	mov    rcx,QWORD PTR [rcx+0x18]
   14002b970:	rex.W jmp QWORD PTR [rip+0x38bc1]        # 0x140064538
   14002b977:	int3   
   14002b978:	mov    r8,QWORD PTR [rcx+0x8]
   14002b97c:	xor    eax,eax
   14002b97e:	cmp    r8,rax
   14002b981:	je     0x14002b989
   14002b983:	test   DWORD PTR [r8],edx
   14002b986:	setne  al
   14002b989:	ret    
   14002b98a:	int3   
   14002b98b:	int3   
   14002b98c:	mov    rax,QWORD PTR [rcx+0x8]
   14002b990:	test   rax,rax
   14002b993:	je     0x14002b9a7
   14002b995:	test   rdx,rdx
   14002b998:	je     0x14002b9a7
   14002b99a:	mov    rax,QWORD PTR [rax+0xc]
   14002b99e:	mov    QWORD PTR [rdx],rax
   14002b9a1:	mov    eax,0x1
   14002b9a6:	ret    
   14002b9a7:	xor    eax,eax
   14002b9a9:	ret    
   14002b9aa:	int3   
   14002b9ab:	int3   
   14002b9ac:	mov    rax,QWORD PTR [rcx+0x8]
   14002b9b0:	test   rax,rax
   14002b9b3:	je     0x14002b9c7
   14002b9b5:	test   rdx,rdx
   14002b9b8:	je     0x14002b9c7
   14002b9ba:	mov    rax,QWORD PTR [rax+0x14]
   14002b9be:	mov    QWORD PTR [rdx],rax
   14002b9c1:	mov    eax,0x1
   14002b9c6:	ret    
   14002b9c7:	xor    eax,eax
   14002b9c9:	ret    
   14002b9ca:	int3   
   14002b9cb:	int3   
   14002b9cc:	mov    rax,QWORD PTR [rcx+0x8]
   14002b9d0:	test   rax,rax
   14002b9d3:	je     0x14002b9e7
   14002b9d5:	test   rdx,rdx
   14002b9d8:	je     0x14002b9e7
   14002b9da:	mov    rax,QWORD PTR [rax+0x4]
   14002b9de:	mov    QWORD PTR [rdx],rax
   14002b9e1:	mov    eax,0x1
   14002b9e6:	ret    
   14002b9e7:	xor    eax,eax
   14002b9e9:	ret    
   14002b9ea:	int3   
   14002b9eb:	int3   
   14002b9ec:	rex push rbx
   14002b9ee:	sub    rsp,0x20
   14002b9f2:	cmp    QWORD PTR [rcx+0x18],0x0
   14002b9f7:	mov    rbx,rcx
   14002b9fa:	jne    0x14002ba00
   14002b9fc:	xor    eax,eax
   14002b9fe:	jmp    0x14002ba2f
   14002ba00:	cmp    QWORD PTR [rcx+0x8],0x0
   14002ba05:	jne    0x14002ba15
   14002ba07:	mov    ecx,0x250
   14002ba0c:	call   0x14001ac0c
   14002ba11:	mov    QWORD PTR [rbx+0x8],rax
   14002ba15:	mov    rdx,QWORD PTR [rbx+0x8]
   14002ba19:	mov    rax,QWORD PTR [rbx+0x10]
   14002ba1d:	mov    rcx,QWORD PTR [rbx+0x18]
   14002ba21:	mov    QWORD PTR [rbx+0x8],rax
   14002ba25:	mov    QWORD PTR [rbx+0x10],rdx
   14002ba29:	call   QWORD PTR [rip+0x38b01]        # 0x140064530
   14002ba2f:	add    rsp,0x20
   14002ba33:	pop    rbx
   14002ba34:	ret    
   14002ba35:	int3   
   14002ba36:	int3   
   14002ba37:	int3   
   14002ba38:	lea    rax,[rip+0x3f429]        # 0x14006ae68
   14002ba3f:	ret    
   14002ba40:	rex push rbx
   14002ba42:	sub    rsp,0x50
   14002ba46:	cmp    edx,0x76c
   14002ba4c:	mov    r10d,edx
   14002ba4f:	mov    rbx,rcx
   14002ba52:	jge    0x14002ba5f
   14002ba54:	mov    ecx,0x80004005
   14002ba59:	call   0x140001430
   14002ba5e:	int3   
   14002ba5f:	lea    eax,[r8-0x1]
   14002ba63:	cmp    eax,0xb
   14002ba66:	jbe    0x14002ba73
   14002ba68:	mov    ecx,0x80004005
   14002ba6d:	call   0x140001430
   14002ba72:	int3   
   14002ba73:	lea    eax,[r9-0x1]
   14002ba77:	cmp    eax,0x1e
   14002ba7a:	jbe    0x14002ba87
   14002ba7c:	mov    ecx,0x80004005
   14002ba81:	call   0x140001430
   14002ba86:	int3   
   14002ba87:	mov    eax,DWORD PTR [rsp+0x80]
   14002ba8e:	cmp    eax,0x17
   14002ba91:	jbe    0x14002ba9e
   14002ba93:	mov    ecx,0x80004005
   14002ba98:	call   0x140001430
   14002ba9d:	int3   
   14002ba9e:	mov    ecx,DWORD PTR [rsp+0x88]
   14002baa5:	cmp    ecx,0x3b
   14002baa8:	jbe    0x14002bab5
   14002baaa:	mov    ecx,0x80004005
   14002baaf:	call   0x140001430
   14002bab4:	int3   
   14002bab5:	mov    edx,DWORD PTR [rsp+0x90]
   14002babc:	cmp    edx,0x3b
   14002babf:	jbe    0x14002bacc
   14002bac1:	mov    ecx,0x80004005
   14002bac6:	call   0x140001430
   14002bacb:	int3   
   14002bacc:	mov    DWORD PTR [rsp+0x28],eax
   14002bad0:	lea    eax,[r8-0x1]
   14002bad4:	mov    DWORD PTR [rsp+0x24],ecx
   14002bad8:	mov    DWORD PTR [rsp+0x30],eax
   14002badc:	lea    eax,[r10-0x76c]
   14002bae3:	lea    rcx,[rsp+0x20]
   14002bae8:	mov    DWORD PTR [rsp+0x34],eax
   14002baec:	mov    eax,DWORD PTR [rsp+0x98]
   14002baf3:	mov    DWORD PTR [rsp+0x20],edx
   14002baf7:	mov    DWORD PTR [rsp+0x40],eax
   14002bafb:	mov    DWORD PTR [rsp+0x2c],r9d
   14002bb00:	call   0x1400497e0
   14002bb05:	cmp    rax,0xffffffffffffffff
   14002bb09:	mov    QWORD PTR [rbx],rax
   14002bb0c:	jne    0x14002bb19
   14002bb0e:	mov    ecx,0x80070057
   14002bb13:	call   0x140001430
   14002bb18:	int3   
   14002bb19:	mov    rax,rbx
   14002bb1c:	add    rsp,0x50
   14002bb20:	pop    rbx
   14002bb21:	ret    
   14002bb22:	int3   
   14002bb23:	int3   
   14002bb24:	mov    r11,rsp
   14002bb27:	mov    QWORD PTR [r11+0x8],rbx
   14002bb2b:	mov    QWORD PTR [r11+0x10],rsi
   14002bb2f:	push   rdi
   14002bb30:	sub    rsp,0x60
   14002bb34:	mov    rax,rdx
   14002bb37:	mov    rdi,rcx
   14002bb3a:	lea    rdx,[r11+0x20]
   14002bb3e:	mov    rcx,rax
   14002bb41:	mov    esi,r8d
   14002bb44:	call   QWORD PTR [rip+0x388f6]        # 0x140064440
   14002bb4a:	xor    ebx,ebx
   14002bb4c:	cmp    eax,ebx
   14002bb4e:	jne    0x14002bb5e
   14002bb50:	mov    ecx,0x80070057
   14002bb55:	mov    QWORD PTR [rdi],rbx
   14002bb58:	call   0x140001430
   14002bb5d:	int3   
   14002bb5e:	lea    rdx,[rsp+0x48]
   14002bb63:	lea    rcx,[rsp+0x88]
   14002bb6b:	call   QWORD PTR [rip+0x388d7]        # 0x140064448
   14002bb71:	cmp    eax,ebx
   14002bb73:	jne    0x14002bb83
   14002bb75:	mov    ecx,0x80070057
   14002bb7a:	mov    QWORD PTR [rdi],rbx
   14002bb7d:	call   0x140001430
   14002bb82:	int3   
   14002bb83:	cmp    WORD PTR [rsp+0x48],0x76c
   14002bb8a:	jb     0x14002bbcd
   14002bb8c:	movzx  ecx,WORD PTR [rsp+0x52]
   14002bb91:	movzx  eax,WORD PTR [rsp+0x54]
   14002bb96:	movzx  r10d,WORD PTR [rsp+0x50]
   14002bb9c:	movzx  r9d,WORD PTR [rsp+0x4e]
   14002bba2:	movzx  r8d,WORD PTR [rsp+0x4a]
   14002bba8:	movzx  edx,WORD PTR [rsp+0x48]
   14002bbad:	mov    DWORD PTR [rsp+0x38],esi
   14002bbb1:	mov    DWORD PTR [rsp+0x30],eax
   14002bbb5:	mov    DWORD PTR [rsp+0x28],ecx
   14002bbb9:	lea    rcx,[rsp+0x40]
   14002bbbe:	mov    DWORD PTR [rsp+0x20],r10d
   14002bbc3:	call   0x14002ba40
   14002bbc8:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bbcd:	mov    rsi,QWORD PTR [rsp+0x78]
   14002bbd2:	mov    QWORD PTR [rdi],rbx
   14002bbd5:	mov    rbx,QWORD PTR [rsp+0x70]
   14002bbda:	mov    rax,rdi
   14002bbdd:	add    rsp,0x60
   14002bbe1:	pop    rdi
   14002bbe2:	ret    
   14002bbe3:	int3   
   14002bbe4:	mov    QWORD PTR [rsp+0x10],rbx
   14002bbe9:	push   rdi
   14002bbea:	sub    rsp,0x30
   14002bbee:	mov    rdi,rcx
   14002bbf1:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bbf5:	mov    rbx,rdx
   14002bbf8:	test   rcx,rcx
   14002bbfb:	je     0x14002bc4d
   14002bbfd:	lea    rdx,[rsp+0x40]
   14002bc02:	add    rcx,0xc
   14002bc06:	call   QWORD PTR [rip+0x38834]        # 0x140064440
   14002bc0c:	test   eax,eax
   14002bc0e:	je     0x14002bc42
   14002bc10:	lea    rdx,[rsp+0x20]
   14002bc15:	lea    rcx,[rsp+0x40]
   14002bc1a:	call   QWORD PTR [rip+0x38828]        # 0x140064448
   14002bc20:	test   eax,eax
   14002bc22:	je     0x14002bc42
   14002bc24:	mov    rdx,QWORD PTR [rdi+0x8]
   14002bc28:	lea    rcx,[rsp+0x40]
   14002bc2d:	or     r8d,0xffffffff
   14002bc31:	add    rdx,0xc
   14002bc35:	call   0x14002bb24
   14002bc3a:	mov    rcx,QWORD PTR [rax]
   14002bc3d:	mov    QWORD PTR [rbx],rcx
   14002bc40:	jmp    0x14002bc46
   14002bc42:	and    QWORD PTR [rbx],0x0
   14002bc46:	mov    eax,0x1
   14002bc4b:	jmp    0x14002bc4f
   14002bc4d:	xor    eax,eax
   14002bc4f:	mov    rbx,QWORD PTR [rsp+0x48]
   14002bc54:	add    rsp,0x30
   14002bc58:	pop    rdi
   14002bc59:	ret    
   14002bc5a:	int3   
   14002bc5b:	int3   
   14002bc5c:	mov    QWORD PTR [rsp+0x10],rbx
   14002bc61:	push   rdi
   14002bc62:	sub    rsp,0x30
   14002bc66:	mov    rdi,rcx
   14002bc69:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bc6d:	mov    rbx,rdx
   14002bc70:	test   rcx,rcx
   14002bc73:	je     0x14002bcc5
   14002bc75:	lea    rdx,[rsp+0x40]
   14002bc7a:	add    rcx,0x14
   14002bc7e:	call   QWORD PTR [rip+0x387bc]        # 0x140064440
   14002bc84:	test   eax,eax
   14002bc86:	je     0x14002bcba
   14002bc88:	lea    rdx,[rsp+0x20]
   14002bc8d:	lea    rcx,[rsp+0x40]
   14002bc92:	call   QWORD PTR [rip+0x387b0]        # 0x140064448
   14002bc98:	test   eax,eax
   14002bc9a:	je     0x14002bcba
   14002bc9c:	mov    rdx,QWORD PTR [rdi+0x8]
   14002bca0:	lea    rcx,[rsp+0x40]
   14002bca5:	or     r8d,0xffffffff
   14002bca9:	add    rdx,0x14
   14002bcad:	call   0x14002bb24
   14002bcb2:	mov    rcx,QWORD PTR [rax]
   14002bcb5:	mov    QWORD PTR [rbx],rcx
   14002bcb8:	jmp    0x14002bcbe
   14002bcba:	and    QWORD PTR [rbx],0x0
   14002bcbe:	mov    eax,0x1
   14002bcc3:	jmp    0x14002bcc7
   14002bcc5:	xor    eax,eax
   14002bcc7:	mov    rbx,QWORD PTR [rsp+0x48]
   14002bccc:	add    rsp,0x30
   14002bcd0:	pop    rdi
   14002bcd1:	ret    
   14002bcd2:	int3   
   14002bcd3:	int3   
   14002bcd4:	mov    QWORD PTR [rsp+0x10],rbx
   14002bcd9:	push   rdi
   14002bcda:	sub    rsp,0x30
   14002bcde:	mov    rdi,rcx
   14002bce1:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bce5:	mov    rbx,rdx
   14002bce8:	test   rcx,rcx
   14002bceb:	je     0x14002bd3d
   14002bced:	lea    rdx,[rsp+0x40]
   14002bcf2:	add    rcx,0x4
   14002bcf6:	call   QWORD PTR [rip+0x38744]        # 0x140064440
   14002bcfc:	test   eax,eax
   14002bcfe:	je     0x14002bd32
   14002bd00:	lea    rdx,[rsp+0x20]
   14002bd05:	lea    rcx,[rsp+0x40]
   14002bd0a:	call   QWORD PTR [rip+0x38738]        # 0x140064448
   14002bd10:	test   eax,eax
   14002bd12:	je     0x14002bd32
   14002bd14:	mov    rdx,QWORD PTR [rdi+0x8]
   14002bd18:	lea    rcx,[rsp+0x40]
   14002bd1d:	or     r8d,0xffffffff
   14002bd21:	add    rdx,0x4
   14002bd25:	call   0x14002bb24
   14002bd2a:	mov    rcx,QWORD PTR [rax]
   14002bd2d:	mov    QWORD PTR [rbx],rcx
   14002bd30:	jmp    0x14002bd36
   14002bd32:	and    QWORD PTR [rbx],0x0
   14002bd36:	mov    eax,0x1
   14002bd3b:	jmp    0x14002bd3f
   14002bd3d:	xor    eax,eax
   14002bd3f:	mov    rbx,QWORD PTR [rsp+0x48]
   14002bd44:	add    rsp,0x30
   14002bd48:	pop    rdi
   14002bd49:	ret    
   14002bd4a:	int3   
   14002bd4b:	int3   
   14002bd4c:	mov    QWORD PTR [rsp+0x8],rbx
   14002bd51:	push   rdi
   14002bd52:	sub    rsp,0x20
   14002bd56:	xor    ebx,ebx
   14002bd58:	mov    rdi,rcx
   14002bd5b:	cmp    QWORD PTR [rcx+0x8],rbx
   14002bd5f:	je     0x14002bd91
   14002bd61:	mov    rax,QWORD PTR [rcx]
   14002bd64:	lea    edx,[rbx+0x10]
   14002bd67:	call   QWORD PTR [rax+0x70]
   14002bd6a:	cmp    eax,ebx
   14002bd6c:	je     0x14002bd91
   14002bd6e:	mov    rax,QWORD PTR [rdi+0x8]
   14002bd72:	cmp    WORD PTR [rax+0x2c],0x2e
   14002bd77:	jne    0x14002bd91
   14002bd79:	cmp    WORD PTR [rax+0x2e],bx
   14002bd7d:	je     0x14002bd8c
   14002bd7f:	cmp    WORD PTR [rax+0x2e],0x2e
   14002bd84:	jne    0x14002bd91
   14002bd86:	cmp    WORD PTR [rax+0x30],bx
   14002bd8a:	jne    0x14002bd91
   14002bd8c:	mov    ebx,0x1
   14002bd91:	mov    eax,ebx
   14002bd93:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bd98:	add    rsp,0x20
   14002bd9c:	pop    rdi
   14002bd9d:	ret    
   14002bd9e:	int3   
   14002bd9f:	int3   
   14002bda0:	rex push rbx
   14002bda2:	sub    rsp,0x20
   14002bda6:	lea    rax,[rip+0x3f0fb]        # 0x14006aea8
   14002bdad:	mov    rbx,rcx
   14002bdb0:	mov    QWORD PTR [rcx],rax
   14002bdb3:	call   0x14002b874
   14002bdb8:	test   rax,rax
   14002bdbb:	mov    rcx,rax
   14002bdbe:	jne    0x14002bdcb
   14002bdc0:	mov    ecx,0x80004005
   14002bdc5:	call   0x140001430
   14002bdca:	int3   
   14002bdcb:	mov    rax,QWORD PTR [rax]
   14002bdce:	call   QWORD PTR [rax+0x18]
   14002bdd1:	add    rax,0x18
   14002bdd5:	mov    QWORD PTR [rbx+0x20],rax
   14002bdd9:	and    QWORD PTR [rbx+0x8],0x0
   14002bdde:	and    QWORD PTR [rbx+0x10],0x0
   14002bde3:	and    QWORD PTR [rbx+0x18],0x0
   14002bde8:	mov    WORD PTR [rbx+0x28],0x5c
   14002bdee:	mov    rax,rbx
   14002bdf1:	add    rsp,0x20
   14002bdf5:	pop    rbx
   14002bdf6:	ret    
   14002bdf7:	int3   
   14002bdf8:	mov    QWORD PTR [rsp+0x8],rcx
   14002bdfd:	push   rbx
   14002bdfe:	sub    rsp,0x30
   14002be02:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002be0b:	mov    rbx,rcx
   14002be0e:	lea    rax,[rip+0x3f093]        # 0x14006aea8
   14002be15:	mov    QWORD PTR [rcx],rax
   14002be18:	call   0x14002b918
   14002be1d:	nop
   14002be1e:	mov    rdx,QWORD PTR [rbx+0x20]
   14002be22:	sub    rdx,0x18
   14002be26:	or     eax,0xffffffff
   14002be29:	lock xadd DWORD PTR [rdx+0x10],eax
   14002be2e:	add    eax,0xffffffff
   14002be31:	test   eax,eax
   14002be33:	jg     0x14002be3e
   14002be35:	mov    rcx,QWORD PTR [rdx]
   14002be38:	mov    rax,QWORD PTR [rcx]
   14002be3b:	call   QWORD PTR [rax+0x8]
   14002be3e:	add    rsp,0x30
   14002be42:	pop    rbx
   14002be43:	ret    
   14002be44:	int3   
   14002be45:	int3   
   14002be46:	int3   
   14002be47:	int3   
   14002be48:	rex push rbp
   14002be4a:	sub    rsp,0x20
   14002be4e:	mov    rbp,rdx
   14002be51:	mov    rcx,QWORD PTR [rbp+0x40]
   14002be55:	add    rcx,0x20
   14002be59:	call   0x1400010c0
   14002be5e:	add    rsp,0x20
   14002be62:	pop    rbp
   14002be63:	ret    
   14002be64:	rex push rbx
   14002be66:	sub    rsp,0x20
   14002be6a:	mov    rcx,QWORD PTR [rcx+0x20]
   14002be6e:	and    DWORD PTR [rsp+0x30],0x0
   14002be73:	mov    rbx,rdx
   14002be76:	sub    rcx,0x18
   14002be7a:	call   0x140002da0
   14002be7f:	add    rax,0x18
   14002be83:	mov    QWORD PTR [rbx],rax
   14002be86:	mov    rax,rbx
   14002be89:	add    rsp,0x20
   14002be8d:	pop    rbx
   14002be8e:	ret    
   14002be8f:	int3   
   14002be90:	mov    QWORD PTR [rsp+0x8],rbx
   14002be95:	push   rdi
   14002be96:	sub    rsp,0x20
   14002be9a:	mov    ebx,edx
   14002be9c:	mov    rdi,rcx
   14002be9f:	call   0x14002bdf8
   14002bea4:	test   bl,0x1
   14002bea7:	je     0x14002beb1
   14002bea9:	mov    rcx,rdi
   14002beac:	call   0x14001ac50
   14002beb1:	mov    rax,rdi
   14002beb4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002beb9:	add    rsp,0x20
   14002bebd:	pop    rdi
   14002bebe:	ret    
   14002bebf:	int3   
   14002bec0:	mov    QWORD PTR [rsp+0x18],rbx
   14002bec5:	mov    QWORD PTR [rsp+0x20],rbp
   14002beca:	push   rsi
   14002becb:	push   rdi
   14002becc:	push   r13
   14002bece:	sub    rsp,0x270
   14002bed5:	mov    rax,QWORD PTR [rip+0x5ae94]        # 0x140086d70
   14002bedc:	xor    rax,rsp
   14002bedf:	mov    QWORD PTR [rsp+0x260],rax
   14002bee7:	mov    rsi,rdx
   14002beea:	mov    rdi,rcx
   14002beed:	call   0x14002b918
   14002bef2:	test   rsi,rsi
   14002bef5:	mov    r13d,0x104
   14002befb:	jne    0x14002bf3f
   14002befd:	lea    rsi,[rip+0x3f064]        # 0x14006af68
   14002bf04:	mov    ecx,0x250
   14002bf09:	call   0x14001ac0c
   14002bf0e:	mov    r8,rsi
   14002bf11:	mov    rdx,r13
   14002bf14:	lea    rcx,[rax+0x2c]
   14002bf18:	mov    QWORD PTR [rdi+0x10],rax
   14002bf1c:	call   0x140047080
   14002bf21:	test   eax,eax
   14002bf23:	je     0x14002bf8e
   14002bf25:	cmp    eax,0xc
   14002bf28:	je     0x14002bf88
   14002bf2a:	cmp    eax,0x16
   14002bf2d:	je     0x14002bf82
   14002bf2f:	cmp    eax,0x22
   14002bf32:	je     0x14002bf82
   14002bf34:	cmp    eax,0x50
   14002bf37:	je     0x14002bf8e
   14002bf39:	call   0x1400208f8
   14002bf3e:	int3   
   14002bf3f:	mov    rcx,rsi
   14002bf42:	call   QWORD PTR [rip+0x38538]        # 0x140064480
   14002bf48:	cmp    eax,r13d
   14002bf4b:	jb     0x14002bf04
   14002bf4d:	mov    ecx,0xa0
   14002bf52:	call   QWORD PTR [rip+0x38548]        # 0x1400644a0
   14002bf58:	xor    eax,eax
   14002bf5a:	mov    rcx,QWORD PTR [rsp+0x260]
   14002bf62:	xor    rcx,rsp
   14002bf65:	call   0x140046470
   14002bf6a:	lea    r11,[rsp+0x270]
   14002bf72:	mov    rbx,QWORD PTR [r11+0x30]
   14002bf76:	mov    rbp,QWORD PTR [r11+0x38]
   14002bf7a:	mov    rsp,r11
   14002bf7d:	pop    r13
   14002bf7f:	pop    rdi
   14002bf80:	pop    rsi
   14002bf81:	ret    
   14002bf82:	call   0x1400208f8
   14002bf87:	int3   
   14002bf88:	call   0x1400208b0
   14002bf8d:	int3   
   14002bf8e:	mov    rdx,QWORD PTR [rdi+0x10]
   14002bf92:	mov    rcx,rsi
   14002bf95:	call   QWORD PTR [rip+0x3858d]        # 0x140064528
   14002bf9b:	cmp    rax,0xffffffffffffffff
   14002bf9f:	mov    QWORD PTR [rdi+0x18],rax
   14002bfa3:	jne    0x14002bfb9
   14002bfa5:	call   QWORD PTR [rip+0x38655]        # 0x140064600
   14002bfab:	mov    rcx,rdi
   14002bfae:	mov    ebx,eax
   14002bfb0:	call   0x14002b918
   14002bfb5:	mov    ecx,ebx
   14002bfb7:	jmp    0x14002bf52
   14002bfb9:	mov    rax,QWORD PTR [rdi+0x20]
   14002bfbd:	mov    ecx,0x1
   14002bfc2:	sub    ecx,DWORD PTR [rax-0x8]
   14002bfc5:	mov    eax,DWORD PTR [rax-0xc]
   14002bfc8:	sub    eax,r13d
   14002bfcb:	or     ecx,eax
   14002bfcd:	jge    0x14002bfdb
   14002bfcf:	lea    rcx,[rdi+0x20]
   14002bfd3:	mov    edx,r13d
   14002bfd6:	call   0x140002d40
   14002bfdb:	mov    rbp,QWORD PTR [rdi+0x20]
   14002bfdf:	cmp    DWORD PTR [rbp-0xc],r13d
   14002bfe3:	jge    0x14002bff0
   14002bfe5:	mov    ecx,0x80070057
   14002bfea:	call   0x140001430
   14002bfef:	int3   
   14002bff0:	mov    DWORD PTR [rbp-0x10],r13d
   14002bff4:	mov    rax,QWORD PTR [rdi+0x20]
   14002bff8:	mov    r8,r13
   14002bffb:	and    WORD PTR [rax+0x208],0x0
   14002c003:	mov    rdx,rsi
   14002c006:	mov    rcx,rbp
   14002c009:	call   0x1400497f0
   14002c00e:	test   rax,rax
   14002c011:	jne    0x14002c046
   14002c013:	mov    rax,QWORD PTR [rdi+0x20]
   14002c017:	cmp    DWORD PTR [rax-0xc],0x0
   14002c01b:	jl     0x14002c03b
   14002c01d:	and    DWORD PTR [rax-0x10],0x0
   14002c021:	mov    rax,QWORD PTR [rdi+0x20]
   14002c025:	mov    rcx,rdi
   14002c028:	and    WORD PTR [rax],0x0
   14002c02c:	call   0x14002b918
   14002c031:	mov    ecx,0x7b
   14002c036:	jmp    0x14002bf52
   14002c03b:	mov    ecx,0x80070057
   14002c040:	call   0x140001430
   14002c045:	int3   
   14002c046:	and    QWORD PTR [rsp+0x40],0x0
   14002c04c:	and    QWORD PTR [rsp+0x38],0x0
   14002c052:	and    QWORD PTR [rsp+0x30],0x0
   14002c058:	and    QWORD PTR [rsp+0x28],0x0
   14002c05e:	lea    r9,[rsp+0x60]
   14002c063:	lea    rdx,[rsp+0x50]
   14002c068:	mov    r8d,0x3
   14002c06e:	mov    rcx,rbp
   14002c071:	mov    QWORD PTR [rsp+0x20],0x100
   14002c07a:	call   0x140049030
   14002c07f:	test   eax,eax
   14002c081:	je     0x14002c0a9
   14002c083:	cmp    eax,0xc
   14002c086:	je     0x14002c0a3
   14002c088:	cmp    eax,0x16
   14002c08b:	je     0x14002c09d
   14002c08d:	cmp    eax,0x22
   14002c090:	je     0x14002c09d
   14002c092:	cmp    eax,0x50
   14002c095:	je     0x14002c0a9
   14002c097:	call   0x1400208f8
   14002c09c:	int3   
   14002c09d:	call   0x1400208f8
   14002c0a2:	int3   
   14002c0a3:	call   0x1400208b0
   14002c0a8:	int3   
   14002c0a9:	and    QWORD PTR [rsp+0x28],0x0
   14002c0af:	and    QWORD PTR [rsp+0x20],0x0
   14002c0b5:	lea    r9,[rsp+0x60]
   14002c0ba:	lea    r8,[rsp+0x50]
   14002c0bf:	mov    rdx,r13
   14002c0c2:	mov    rcx,rbp
   14002c0c5:	call   0x140049320
   14002c0ca:	test   eax,eax
   14002c0cc:	je     0x14002c0f4
   14002c0ce:	cmp    eax,0xc
   14002c0d1:	je     0x14002c0ee
   14002c0d3:	cmp    eax,0x16
   14002c0d6:	je     0x14002c0e8
   14002c0d8:	cmp    eax,0x22
   14002c0db:	je     0x14002c0e8
   14002c0dd:	cmp    eax,0x50
   14002c0e0:	je     0x14002c0f4
   14002c0e2:	call   0x1400208f8
   14002c0e7:	int3   
   14002c0e8:	call   0x1400208f8
   14002c0ed:	int3   
   14002c0ee:	call   0x1400208b0
   14002c0f3:	int3   
   14002c0f4:	mov    rcx,QWORD PTR [rdi+0x20]
   14002c0f8:	test   rcx,rcx
   14002c0fb:	jne    0x14002c101
   14002c0fd:	xor    eax,eax
   14002c0ff:	jmp    0x14002c10a
   14002c101:	call   0x140048610
   14002c106:	test   eax,eax
   14002c108:	js     0x14002c12c
   14002c10a:	mov    rcx,QWORD PTR [rdi+0x20]
   14002c10e:	cmp    eax,DWORD PTR [rcx-0xc]
   14002c111:	jg     0x14002c12c
   14002c113:	mov    DWORD PTR [rcx-0x10],eax
   14002c116:	mov    rcx,QWORD PTR [rdi+0x20]
   14002c11a:	movsxd rdx,eax
   14002c11d:	and    WORD PTR [rcx+rdx*2],0x0
   14002c122:	mov    eax,0x1
   14002c127:	jmp    0x14002bf5a
   14002c12c:	mov    ecx,0x80070057
   14002c131:	call   0x140001430
   14002c136:	int3   
   14002c137:	int3   
   14002c138:	mov    r11,rsp
   14002c13b:	mov    QWORD PTR [r11+0x10],rdx
   14002c13f:	push   rbx
   14002c140:	sub    rsp,0x60
   14002c144:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14002c14d:	mov    rbx,rdx
   14002c150:	and    DWORD PTR [rsp+0x70],0x0
   14002c155:	mov    rax,QWORD PTR [rcx]
   14002c158:	lea    rdx,[r11+0x18]
   14002c15c:	call   QWORD PTR [rax+0x18]
   14002c15f:	nop
   14002c160:	call   0x14002b874
   14002c165:	mov    r11,rax
   14002c168:	xor    ecx,ecx
   14002c16a:	test   rax,rax
   14002c16d:	setne  cl
   14002c170:	test   ecx,ecx
   14002c172:	jne    0x14002c17f
   14002c174:	mov    ecx,0x80004005
   14002c179:	call   0x140001430
   14002c17e:	int3   
   14002c17f:	mov    rax,QWORD PTR [rax]
   14002c182:	mov    rcx,r11
   14002c185:	call   QWORD PTR [rax+0x18]
   14002c188:	add    rax,0x18
   14002c18c:	mov    QWORD PTR [rbx],rax
   14002c18f:	mov    ecx,0x1
   14002c194:	mov    DWORD PTR [rsp+0x70],ecx
   14002c198:	sub    ecx,DWORD PTR [rax-0x8]
   14002c19b:	mov    eax,DWORD PTR [rax-0xc]
   14002c19e:	sub    eax,0x100
   14002c1a3:	or     eax,ecx
   14002c1a5:	jge    0x14002c1b4
   14002c1a7:	mov    edx,0x100
   14002c1ac:	mov    rcx,rbx
   14002c1af:	call   0x140002d40
   14002c1b4:	mov    rax,QWORD PTR [rbx]
   14002c1b7:	and    QWORD PTR [rsp+0x40],0x0
   14002c1bd:	and    QWORD PTR [rsp+0x38],0x0
   14002c1c3:	mov    QWORD PTR [rsp+0x30],0x100
   14002c1cc:	mov    QWORD PTR [rsp+0x28],rax
   14002c1d1:	and    QWORD PTR [rsp+0x20],0x0
   14002c1d7:	xor    r9d,r9d
   14002c1da:	xor    r8d,r8d
   14002c1dd:	xor    edx,edx
   14002c1df:	mov    rcx,QWORD PTR [rsp+0x80]
   14002c1e7:	call   0x140049030
   14002c1ec:	test   eax,eax
   14002c1ee:	je     0x14002c216
   14002c1f0:	cmp    eax,0xc
   14002c1f3:	je     0x14002c210
   14002c1f5:	cmp    eax,0x16
   14002c1f8:	je     0x14002c20a
   14002c1fa:	cmp    eax,0x22
   14002c1fd:	je     0x14002c20a
   14002c1ff:	cmp    eax,0x50
   14002c202:	je     0x14002c216
   14002c204:	call   0x1400208f8
   14002c209:	int3   
   14002c20a:	call   0x1400208f8
   14002c20f:	int3   
   14002c210:	call   0x1400208b0
   14002c215:	int3   
   14002c216:	mov    rcx,QWORD PTR [rbx]
   14002c219:	test   rcx,rcx
   14002c21c:	jne    0x14002c222
   14002c21e:	xor    eax,eax
   14002c220:	jmp    0x14002c22b
   14002c222:	call   0x140048610
   14002c227:	test   eax,eax
   14002c229:	js     0x14002c26a
   14002c22b:	mov    rcx,QWORD PTR [rbx]
   14002c22e:	cmp    eax,DWORD PTR [rcx-0xc]
   14002c231:	jg     0x14002c26a
   14002c233:	mov    DWORD PTR [rcx-0x10],eax
   14002c236:	movsxd rcx,eax
   14002c239:	mov    rax,QWORD PTR [rbx]
   14002c23c:	and    WORD PTR [rax+rcx*2],0x0
   14002c241:	mov    rdx,QWORD PTR [rsp+0x80]
   14002c249:	add    rdx,0xffffffffffffffe8
   14002c24d:	or     eax,0xffffffff
   14002c250:	lock xadd DWORD PTR [rdx+0x10],eax
   14002c255:	add    eax,0xffffffff
   14002c258:	test   eax,eax
   14002c25a:	jg     0x14002c265
   14002c25c:	mov    rcx,QWORD PTR [rdx]
   14002c25f:	mov    rax,QWORD PTR [rcx]
   14002c262:	call   QWORD PTR [rax+0x8]
   14002c265:	mov    rax,rbx
   14002c268:	jmp    0x14002c275
   14002c26a:	mov    ecx,0x80070057
   14002c26f:	call   0x140001430
   14002c274:	nop
   14002c275:	add    rsp,0x60
   14002c279:	pop    rbx
   14002c27a:	ret    
   14002c27b:	int3   
   14002c27c:	int3   
   14002c27d:	int3   
   14002c27e:	int3   
   14002c27f:	int3   
   14002c280:	int3   
   14002c281:	int3   
   14002c282:	int3   
   14002c283:	int3   
   14002c284:	int3   
   14002c285:	int3   
   14002c286:	int3   
   14002c287:	int3   
   14002c288:	rex push rbp
   14002c28a:	sub    rsp,0x20
   14002c28e:	mov    rbp,rdx
   14002c291:	lea    rcx,[rbp+0x80]
   14002c298:	call   0x1400010c0
   14002c29d:	add    rsp,0x20
   14002c2a1:	pop    rbp
   14002c2a2:	ret    
   14002c2a3:	int3   
   14002c2a4:	int3   
   14002c2a5:	int3   
   14002c2a6:	int3   
   14002c2a7:	int3   
   14002c2a8:	rex push rbp
   14002c2aa:	sub    rsp,0x20
   14002c2ae:	mov    rbp,rdx
   14002c2b1:	mov    eax,DWORD PTR [rbp+0x70]
   14002c2b4:	and    eax,0x1
   14002c2b7:	test   eax,eax
   14002c2b9:	je     0x14002c2c8
   14002c2bb:	and    DWORD PTR [rbp+0x70],0xfffffffe
   14002c2bf:	mov    rcx,QWORD PTR [rbp+0x78]
   14002c2c3:	call   0x1400010c0
   14002c2c8:	add    rsp,0x20
   14002c2cc:	pop    rbp
   14002c2cd:	ret    
   14002c2ce:	int3   
   14002c2cf:	int3   
   14002c2d0:	mov    QWORD PTR [rsp+0x10],rdx
   14002c2d5:	push   rdi
   14002c2d6:	sub    rsp,0x30
   14002c2da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c2e3:	mov    QWORD PTR [rsp+0x58],rbx
   14002c2e8:	mov    rdi,rdx
   14002c2eb:	mov    rbx,rcx
   14002c2ee:	and    DWORD PTR [rsp+0x40],0x0
   14002c2f3:	lea    rdx,[rip+0x3ecc6]        # 0x14006afc0
   14002c2fa:	mov    rcx,rdi
   14002c2fd:	call   0x140004d00
   14002c302:	mov    DWORD PTR [rsp+0x40],0x1
   14002c30a:	mov    rax,QWORD PTR [rbx]
   14002c30d:	lea    rdx,[rsp+0x50]
   14002c312:	mov    rcx,rbx
   14002c315:	call   QWORD PTR [rax+0x20]
   14002c318:	nop
   14002c319:	mov    rdx,QWORD PTR [rax]
   14002c31c:	mov    r8d,DWORD PTR [rdx-0x10]
   14002c320:	mov    rcx,rdi
   14002c323:	call   0x14001d2b8
   14002c328:	nop
   14002c329:	mov    rdx,QWORD PTR [rsp+0x50]
   14002c32e:	add    rdx,0xffffffffffffffe8
   14002c332:	or     eax,0xffffffff
   14002c335:	lock xadd DWORD PTR [rdx+0x10],eax
   14002c33a:	add    eax,0xffffffff
   14002c33d:	test   eax,eax
   14002c33f:	jg     0x14002c34a
   14002c341:	mov    rcx,QWORD PTR [rdx]
   14002c344:	mov    rax,QWORD PTR [rcx]
   14002c347:	call   QWORD PTR [rax+0x8]
   14002c34a:	mov    rax,rdi
   14002c34d:	mov    rbx,QWORD PTR [rsp+0x58]
   14002c352:	add    rsp,0x30
   14002c356:	pop    rdi
   14002c357:	ret    
   14002c358:	int3   
   14002c359:	int3   
   14002c35a:	int3   
   14002c35b:	int3   
   14002c35c:	int3   
   14002c35d:	int3   
   14002c35e:	int3   
   14002c35f:	int3   
   14002c360:	rex push rbp
   14002c362:	sub    rsp,0x20
   14002c366:	mov    rbp,rdx
   14002c369:	mov    eax,DWORD PTR [rbp+0x40]
   14002c36c:	and    eax,0x1
   14002c36f:	test   eax,eax
   14002c371:	je     0x14002c380
   14002c373:	and    DWORD PTR [rbp+0x40],0xfffffffe
   14002c377:	mov    rcx,QWORD PTR [rbp+0x48]
   14002c37b:	call   0x1400010c0
   14002c380:	add    rsp,0x20
   14002c384:	pop    rbp
   14002c385:	ret    
   14002c386:	int3   
   14002c387:	int3   
   14002c388:	int3   
   14002c389:	int3   
   14002c38a:	int3   
   14002c38b:	int3   
   14002c38c:	int3   
   14002c38d:	int3   
   14002c38e:	int3   
   14002c38f:	int3   
   14002c390:	rex push rbp
   14002c392:	sub    rsp,0x20
   14002c396:	mov    rbp,rdx
   14002c399:	lea    rcx,[rbp+0x50]
   14002c39d:	call   0x1400010c0
   14002c3a2:	add    rsp,0x20
   14002c3a6:	pop    rbp
   14002c3a7:	ret    
   14002c3a8:	mov    QWORD PTR [rsp+0x10],rdx
   14002c3ad:	push   rdi
   14002c3ae:	sub    rsp,0x30
   14002c3b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c3bb:	mov    QWORD PTR [rsp+0x58],rbx
   14002c3c0:	mov    rbx,rdx
   14002c3c3:	mov    rdi,rcx
   14002c3c6:	and    DWORD PTR [rsp+0x40],0x0
   14002c3cb:	mov    rcx,QWORD PTR [rcx+0x20]
   14002c3cf:	sub    rcx,0x18
   14002c3d3:	call   0x140002da0
   14002c3d8:	lea    r8,[rax+0x18]
   14002c3dc:	mov    QWORD PTR [rbx],r8
   14002c3df:	mov    DWORD PTR [rsp+0x40],0x1
   14002c3e7:	movsxd rax,DWORD PTR [r8-0x10]
   14002c3eb:	lea    rcx,[r8+rax*2]
   14002c3ef:	lea    rax,[rcx-0x2]
   14002c3f3:	cmp    r8,rcx
   14002c3f6:	sbb    rcx,rcx
   14002c3f9:	and    rcx,rax
   14002c3fc:	mov    eax,0x0
   14002c401:	setne  al
   14002c404:	test   eax,eax
   14002c406:	jne    0x14002c40e
   14002c408:	call   0x1400208f8
   14002c40d:	int3   
   14002c40e:	cmp    WORD PTR [rcx],0x5c
   14002c412:	je     0x14002c426
   14002c414:	cmp    WORD PTR [rcx],0x2f
   14002c418:	je     0x14002c426
   14002c41a:	movzx  edx,WORD PTR [rdi+0x28]
   14002c41e:	mov    rcx,rbx
   14002c421:	call   0x140020b9c
   14002c426:	mov    rax,QWORD PTR [rdi]
   14002c429:	lea    rdx,[rsp+0x50]
   14002c42e:	mov    rcx,rdi
   14002c431:	call   QWORD PTR [rax+0x18]
   14002c434:	nop
   14002c435:	mov    rdx,QWORD PTR [rax]
   14002c438:	mov    r8d,DWORD PTR [rdx-0x10]
   14002c43c:	mov    rcx,rbx
   14002c43f:	call   0x14001d2b8
   14002c444:	nop
   14002c445:	mov    rdx,QWORD PTR [rsp+0x50]
   14002c44a:	add    rdx,0xffffffffffffffe8
   14002c44e:	or     eax,0xffffffff
   14002c451:	lock xadd DWORD PTR [rdx+0x10],eax
   14002c456:	add    eax,0xffffffff
   14002c459:	test   eax,eax
   14002c45b:	jg     0x14002c466
   14002c45d:	mov    rcx,QWORD PTR [rdx]
   14002c460:	mov    rax,QWORD PTR [rcx]
   14002c463:	call   QWORD PTR [rax+0x8]
   14002c466:	mov    rax,rbx
   14002c469:	mov    rbx,QWORD PTR [rsp+0x58]
   14002c46e:	add    rsp,0x30
   14002c472:	pop    rdi
   14002c473:	ret    
   14002c474:	int3   
   14002c475:	int3   
   14002c476:	int3   
   14002c477:	int3   
   14002c478:	rex push rbp
   14002c47a:	sub    rsp,0x20
   14002c47e:	mov    rbp,rdx
   14002c481:	mov    eax,DWORD PTR [rbp+0x40]
   14002c484:	and    eax,0x1
   14002c487:	test   eax,eax
   14002c489:	je     0x14002c498
   14002c48b:	and    DWORD PTR [rbp+0x40],0xfffffffe
   14002c48f:	mov    rcx,QWORD PTR [rbp+0x48]
   14002c493:	call   0x1400010c0
   14002c498:	add    rsp,0x20
   14002c49c:	pop    rbp
   14002c49d:	ret    
   14002c49e:	int3   
   14002c49f:	int3   
   14002c4a0:	int3   
   14002c4a1:	int3   
   14002c4a2:	int3   
   14002c4a3:	int3   
   14002c4a4:	int3   
   14002c4a5:	int3   
   14002c4a6:	int3   
   14002c4a7:	int3   
   14002c4a8:	rex push rbp
   14002c4aa:	sub    rsp,0x20
   14002c4ae:	mov    rbp,rdx
   14002c4b1:	lea    rcx,[rbp+0x50]
   14002c4b5:	call   0x1400010c0
   14002c4ba:	add    rsp,0x20
   14002c4be:	pop    rbp
   14002c4bf:	ret    
   14002c4c0:	mov    rax,rsp
   14002c4c3:	mov    QWORD PTR [rax+0x10],rdx
   14002c4c7:	push   rdi
   14002c4c8:	sub    rsp,0x30
   14002c4cc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c4d5:	mov    QWORD PTR [rax+0x8],rbx
   14002c4d9:	mov    QWORD PTR [rax+0x20],rsi
   14002c4dd:	mov    rsi,rdx
   14002c4e0:	mov    rdi,rcx
   14002c4e3:	xor    ebx,ebx
   14002c4e5:	mov    DWORD PTR [rax+0x18],ebx
   14002c4e8:	call   0x14002b874
   14002c4ed:	mov    rcx,rax
   14002c4f0:	mov    r8d,ebx
   14002c4f3:	cmp    rax,rbx
   14002c4f6:	setne  r8b
   14002c4fa:	cmp    r8d,ebx
   14002c4fd:	jne    0x14002c50a
   14002c4ff:	mov    ecx,0x80004005
   14002c504:	call   0x140001430
   14002c509:	int3   
   14002c50a:	mov    rax,QWORD PTR [rax]
   14002c50d:	call   QWORD PTR [rax+0x18]
   14002c510:	add    rax,0x18
   14002c514:	mov    QWORD PTR [rsi],rax
   14002c517:	mov    DWORD PTR [rsp+0x50],0x1
   14002c51f:	mov    rdi,QWORD PTR [rdi+0x8]
   14002c523:	cmp    rdi,rbx
   14002c526:	je     0x14002c549
   14002c528:	add    rdi,0x2c
   14002c52c:	cmp    rdi,rbx
   14002c52f:	je     0x14002c53b
   14002c531:	mov    rcx,rdi
   14002c534:	call   0x140048610
   14002c539:	mov    ebx,eax
   14002c53b:	mov    r8d,ebx
   14002c53e:	mov    rdx,rdi
   14002c541:	mov    rcx,rsi
   14002c544:	call   0x1400037d0
   14002c549:	mov    rax,rsi
   14002c54c:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c551:	mov    rsi,QWORD PTR [rsp+0x58]
   14002c556:	add    rsp,0x30
   14002c55a:	pop    rdi
   14002c55b:	ret    
   14002c55c:	int3   
   14002c55d:	int3   
   14002c55e:	int3   
   14002c55f:	int3   
   14002c560:	rex push rbp
   14002c562:	sub    rsp,0x20
   14002c566:	mov    rbp,rdx
   14002c569:	mov    eax,DWORD PTR [rbp+0x50]
   14002c56c:	and    eax,0x1
   14002c56f:	test   eax,eax
   14002c571:	je     0x14002c580
   14002c573:	and    DWORD PTR [rbp+0x50],0xfffffffe
   14002c577:	mov    rcx,QWORD PTR [rbp+0x48]
   14002c57b:	call   0x1400010c0
   14002c580:	add    rsp,0x20
   14002c584:	pop    rbp
   14002c585:	ret    
   14002c586:	int3   
   14002c587:	int3   
   14002c588:	mov    r11,rsp
   14002c58b:	push   rbx
   14002c58c:	sub    rsp,0x60
   14002c590:	and    QWORD PTR [r11-0x18],0x0
   14002c595:	and    QWORD PTR [r11+0x18],0x0
   14002c59a:	and    QWORD PTR [r11+0x20],0x0
   14002c59f:	lea    rax,[r11+0x18]
   14002c5a3:	mov    rbx,rcx
   14002c5a6:	lea    rdx,[rip+0x3ea6b]        # 0x14006b018
   14002c5ad:	mov    r9d,0x2001f
   14002c5b3:	xor    r8d,r8d
   14002c5b6:	mov    rcx,0xffffffff80000001
   14002c5bd:	mov    QWORD PTR [r11-0x48],rax
   14002c5c1:	call   QWORD PTR [rip+0x37a91]        # 0x140064058
   14002c5c7:	test   eax,eax
   14002c5c9:	jne    0x14002c65a
   14002c5cf:	mov    rdx,QWORD PTR [rbx+0xa8]
   14002c5d6:	mov    rcx,QWORD PTR [rsp+0x80]
   14002c5de:	lea    rax,[rsp+0x78]
   14002c5e3:	mov    QWORD PTR [rsp+0x40],rax
   14002c5e8:	lea    rax,[rsp+0x88]
   14002c5f0:	xor    r9d,r9d
   14002c5f3:	mov    QWORD PTR [rsp+0x38],rax
   14002c5f8:	and    QWORD PTR [rsp+0x30],0x0
   14002c5fe:	xor    r8d,r8d
   14002c601:	mov    DWORD PTR [rsp+0x28],0x2001f
   14002c609:	and    DWORD PTR [rsp+0x20],0x0
   14002c60e:	call   QWORD PTR [rip+0x37a5c]        # 0x140064070
   14002c614:	test   eax,eax
   14002c616:	jne    0x14002c65a
   14002c618:	mov    rdx,QWORD PTR [rbx+0xd0]
   14002c61f:	mov    rcx,QWORD PTR [rsp+0x88]
   14002c627:	lea    rax,[rsp+0x78]
   14002c62c:	mov    QWORD PTR [rsp+0x40],rax
   14002c631:	lea    rax,[rsp+0x50]
   14002c636:	xor    r9d,r9d
   14002c639:	mov    QWORD PTR [rsp+0x38],rax
   14002c63e:	and    QWORD PTR [rsp+0x30],0x0
   14002c644:	xor    r8d,r8d
   14002c647:	mov    DWORD PTR [rsp+0x28],0x2001f
   14002c64f:	and    DWORD PTR [rsp+0x20],0x0
   14002c654:	call   QWORD PTR [rip+0x37a16]        # 0x140064070
   14002c65a:	mov    rcx,QWORD PTR [rsp+0x80]
   14002c662:	test   rcx,rcx
   14002c665:	je     0x14002c66d
   14002c667:	call   QWORD PTR [rip+0x379fb]        # 0x140064068
   14002c66d:	mov    rcx,QWORD PTR [rsp+0x88]
   14002c675:	test   rcx,rcx
   14002c678:	je     0x14002c680
   14002c67a:	call   QWORD PTR [rip+0x379e8]        # 0x140064068
   14002c680:	mov    rax,QWORD PTR [rsp+0x50]
   14002c685:	add    rsp,0x60
   14002c689:	pop    rbx
   14002c68a:	ret    
   14002c68b:	int3   
   14002c68c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c691:	push   rdi
   14002c692:	sub    rsp,0x50
   14002c696:	and    QWORD PTR [rsp+0x78],0x0
   14002c69c:	mov    rdi,rdx
   14002c69f:	call   0x14002c588
   14002c6a4:	test   rax,rax
   14002c6a7:	mov    rbx,rax
   14002c6aa:	je     0x14002c6f3
   14002c6ac:	lea    rax,[rsp+0x70]
   14002c6b1:	xor    r9d,r9d
   14002c6b4:	xor    r8d,r8d
   14002c6b7:	mov    QWORD PTR [rsp+0x40],rax
   14002c6bc:	lea    rax,[rsp+0x78]
   14002c6c1:	mov    rdx,rdi
   14002c6c4:	mov    QWORD PTR [rsp+0x38],rax
   14002c6c9:	and    QWORD PTR [rsp+0x30],0x0
   14002c6cf:	mov    rcx,rbx
   14002c6d2:	mov    DWORD PTR [rsp+0x28],0x2001f
   14002c6da:	and    DWORD PTR [rsp+0x20],0x0
   14002c6df:	call   QWORD PTR [rip+0x3798b]        # 0x140064070
   14002c6e5:	mov    rcx,rbx
   14002c6e8:	call   QWORD PTR [rip+0x3797a]        # 0x140064068
   14002c6ee:	mov    rax,QWORD PTR [rsp+0x78]
   14002c6f3:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c6f8:	add    rsp,0x50
   14002c6fc:	pop    rdi
   14002c6fd:	ret    
   14002c6fe:	int3   
   14002c6ff:	int3   
   14002c700:	rex push rbx
   14002c702:	push   rbp
   14002c703:	push   rsi
   14002c704:	push   rdi
   14002c705:	sub    rsp,0x68
   14002c709:	mov    rax,QWORD PTR [rip+0x5a660]        # 0x140086d70
   14002c710:	xor    rax,rsp
   14002c713:	mov    QWORD PTR [rsp+0x58],rax
   14002c718:	xor    esi,esi
   14002c71a:	mov    rbp,r8
   14002c71d:	mov    rdi,rdx
   14002c720:	cmp    QWORD PTR [rcx+0xa8],rsi
   14002c727:	mov    rbx,rcx
   14002c72a:	mov    DWORD PTR [rsp+0x30],r9d
   14002c72f:	je     0x14002c77b
   14002c731:	call   0x14002c68c
   14002c736:	cmp    rax,rsi
   14002c739:	mov    rdi,rax
   14002c73c:	jne    0x14002c742
   14002c73e:	xor    eax,eax
   14002c740:	jmp    0x14002c7a9
   14002c742:	lea    rax,[rsp+0x30]
   14002c747:	mov    r9d,0x4
   14002c74d:	xor    r8d,r8d
   14002c750:	mov    DWORD PTR [rsp+0x28],r9d
   14002c755:	mov    rdx,rbp
   14002c758:	mov    rcx,rdi
   14002c75b:	mov    QWORD PTR [rsp+0x20],rax
   14002c760:	call   QWORD PTR [rip+0x378e2]        # 0x140064048
   14002c766:	mov    rcx,rdi
   14002c769:	mov    ebx,eax
   14002c76b:	call   QWORD PTR [rip+0x378f7]        # 0x140064068
   14002c771:	cmp    ebx,esi
   14002c773:	sete   sil
   14002c777:	mov    eax,esi
   14002c779:	jmp    0x14002c7a9
   14002c77b:	lea    r8,[rip+0x3dec6]        # 0x14006a648
   14002c782:	lea    rcx,[rsp+0x38]
   14002c787:	mov    edx,0x10
   14002c78c:	call   0x140047c00
   14002c791:	mov    r9,QWORD PTR [rbx+0xd0]
   14002c798:	lea    r8,[rsp+0x38]
   14002c79d:	mov    rdx,rbp
   14002c7a0:	mov    rcx,rdi
   14002c7a3:	call   QWORD PTR [rip+0x37c8f]        # 0x140064438
   14002c7a9:	mov    rcx,QWORD PTR [rsp+0x58]
   14002c7ae:	xor    rcx,rsp
   14002c7b1:	call   0x140046470
   14002c7b6:	add    rsp,0x68
   14002c7ba:	pop    rdi
   14002c7bb:	pop    rsi
   14002c7bc:	pop    rbp
   14002c7bd:	pop    rbx
   14002c7be:	ret    
   14002c7bf:	int3   
   14002c7c0:	lea    rax,[rip+0x3e909]        # 0x14006b0d0
   14002c7c7:	ret    
   14002c7c8:	sub    rsp,0x38
   14002c7cc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c7d5:	xor    eax,eax
   14002c7d7:	test   rcx,rcx
   14002c7da:	setne  al
   14002c7dd:	test   eax,eax
   14002c7df:	jne    0x14002c7e7
   14002c7e1:	call   0x1400208f8
   14002c7e6:	int3   
   14002c7e7:	cmp    QWORD PTR [rcx+0x10],0x0
   14002c7ec:	jne    0x14002c7f2
   14002c7ee:	xor    eax,eax
   14002c7f0:	jmp    0x14002c807
   14002c7f2:	and    QWORD PTR [rsp+0x40],0x0
   14002c7f8:	call   QWORD PTR [rcx+0x10]
   14002c7fb:	mov    QWORD PTR [rsp+0x40],rax
   14002c800:	jmp    0x14002c807
   14002c802:	mov    rax,QWORD PTR [rsp+0x40]
   14002c807:	add    rsp,0x38
   14002c80b:	ret    
   14002c80c:	int3   
   14002c80d:	int3   
   14002c80e:	int3   
   14002c80f:	int3   
   14002c810:	int3   
   14002c811:	int3   
   14002c812:	int3   
   14002c813:	int3   
   14002c814:	int3   
   14002c815:	int3   
   14002c816:	int3   
   14002c817:	int3   
   14002c818:	mov    QWORD PTR [rsp+0x10],rdx
   14002c81d:	push   rbp
   14002c81e:	sub    rsp,0x20
   14002c822:	mov    rbp,rdx
   14002c825:	mov    rcx,QWORD PTR [rbp+0x28]
   14002c829:	call   0x1400207b8
   14002c82e:	nop
   14002c82f:	lea    rax,[rip+0xffffffffffffffcc]        # 0x14002c802
   14002c836:	jmp    0x14002c838
   14002c838:	add    rsp,0x20
   14002c83c:	pop    rbp
   14002c83d:	ret    
   14002c83e:	int3   
   14002c83f:	int3   
   14002c840:	sub    rsp,0x28
   14002c844:	test   rcx,rcx
   14002c847:	jne    0x14002c84f
   14002c849:	call   0x1400208f8
   14002c84e:	int3   
   14002c84f:	test   rdx,rdx
   14002c852:	jne    0x14002c85a
   14002c854:	call   0x1400208f8
   14002c859:	int3   
   14002c85a:	cmp    rcx,rdx
   14002c85d:	je     0x14002c86c
   14002c85f:	mov    rcx,QWORD PTR [rcx+0x18]
   14002c863:	test   rcx,rcx
   14002c866:	jne    0x14002c85a
   14002c868:	xor    eax,eax
   14002c86a:	jmp    0x14002c871
   14002c86c:	mov    eax,0x1
   14002c871:	add    rsp,0x28
   14002c875:	ret    
   14002c876:	int3   
   14002c877:	int3   
   14002c878:	rex push rbx
   14002c87a:	sub    rsp,0x20
   14002c87e:	test   rcx,rcx
   14002c881:	mov    rbx,rdx
   14002c884:	jne    0x14002c88c
   14002c886:	call   0x1400208f8
   14002c88b:	int3   
   14002c88c:	mov    rax,QWORD PTR [rcx]
   14002c88f:	call   QWORD PTR [rax]
   14002c891:	test   rax,rax
   14002c894:	jne    0x14002c89c
   14002c896:	call   0x1400208f8
   14002c89b:	int3   
   14002c89c:	mov    rdx,rbx
   14002c89f:	mov    rcx,rax
   14002c8a2:	add    rsp,0x20
   14002c8a6:	pop    rbx
   14002c8a7:	jmp    0x14002c840
   14002c8ac:	rex push rbx
   14002c8ae:	sub    rsp,0x20
   14002c8b2:	test   rdx,rdx
   14002c8b5:	mov    rbx,rdx
   14002c8b8:	je     0x14002c8ce
   14002c8ba:	mov    rdx,rcx
   14002c8bd:	mov    rcx,rbx
   14002c8c0:	call   0x14002c878
   14002c8c5:	test   eax,eax
   14002c8c7:	je     0x14002c8ce
   14002c8c9:	mov    rax,rbx
   14002c8cc:	jmp    0x14002c8d0
   14002c8ce:	xor    eax,eax
   14002c8d0:	add    rsp,0x20
   14002c8d4:	pop    rbx
   14002c8d5:	ret    
   14002c8d6:	int3   
   14002c8d7:	int3   
   14002c8d8:	mov    QWORD PTR [rsp+0x8],rbx
   14002c8dd:	push   rdi
   14002c8de:	sub    rsp,0x20
   14002c8e2:	mov    rdi,rcx
   14002c8e5:	call   0x140021a70
   14002c8ea:	xor    ecx,ecx
   14002c8ec:	mov    rbx,rax
   14002c8ef:	call   0x14002d810
   14002c8f4:	lea    rcx,[rbx+0x30]
   14002c8f8:	mov    rdx,rdi
   14002c8fb:	call   0x14002cd24
   14002c900:	xor    ecx,ecx
   14002c902:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c907:	add    rsp,0x20
   14002c90b:	pop    rdi
   14002c90c:	jmp    0x14002d8a4
   14002c911:	int3   
   14002c912:	int3   
   14002c913:	int3   
   14002c914:	mov    QWORD PTR [rsp+0x18],rbx
   14002c919:	mov    QWORD PTR [rsp+0x20],rsi
   14002c91e:	push   rdi
   14002c91f:	sub    rsp,0x230
   14002c926:	mov    rax,QWORD PTR [rip+0x5a443]        # 0x140086d70
   14002c92d:	xor    rax,rsp
   14002c930:	mov    QWORD PTR [rsp+0x220],rax
   14002c938:	test   rcx,rcx
   14002c93b:	mov    rbx,rdx
   14002c93e:	mov    rdi,rcx
   14002c941:	jne    0x14002c949
   14002c943:	call   0x1400208f8
   14002c948:	int3   
   14002c949:	test   rdx,rdx
   14002c94c:	jne    0x14002c954
   14002c94e:	call   0x1400208f8
   14002c953:	int3   
   14002c954:	mov    rcx,rdx
   14002c957:	call   QWORD PTR [rip+0x37b23]        # 0x140064480
   14002c95d:	and    WORD PTR [rsp+0x20],0x0
   14002c963:	lea    rcx,[rsp+0x22]
   14002c968:	xor    edx,edx
   14002c96a:	mov    r8d,0x1fe
   14002c970:	mov    esi,eax
   14002c972:	call   0x140047720
   14002c977:	mov    r8d,0x100
   14002c97d:	cmp    esi,r8d
   14002c980:	ja     0x14002c9a6
   14002c982:	lea    rdx,[rsp+0x20]
   14002c987:	mov    rcx,rdi
   14002c98a:	call   QWORD PTR [rip+0x37f00]        # 0x140064890
   14002c990:	cmp    eax,esi
   14002c992:	jne    0x14002c9a6
   14002c994:	lea    rcx,[rsp+0x20]
   14002c999:	mov    rdx,rbx
   14002c99c:	call   QWORD PTR [rip+0x37b66]        # 0x140064508
   14002c9a2:	test   eax,eax
   14002c9a4:	je     0x14002c9b2
   14002c9a6:	mov    rdx,rbx
   14002c9a9:	mov    rcx,rdi
   14002c9ac:	call   QWORD PTR [rip+0x37e6e]        # 0x140064820
   14002c9b2:	mov    rcx,QWORD PTR [rsp+0x220]
   14002c9ba:	xor    rcx,rsp
   14002c9bd:	call   0x140046470
   14002c9c2:	lea    r11,[rsp+0x230]
   14002c9ca:	mov    rbx,QWORD PTR [r11+0x20]
   14002c9ce:	mov    rsi,QWORD PTR [r11+0x28]
   14002c9d2:	mov    rsp,r11
   14002c9d5:	pop    rdi
   14002c9d6:	ret    
   14002c9d7:	int3   
   14002c9d8:	rex push rbx
   14002c9da:	sub    rsp,0x20
   14002c9de:	test   rcx,rcx
   14002c9e1:	mov    rbx,rcx
   14002c9e4:	jne    0x14002c9ec
   14002c9e6:	call   0x1400208f8
   14002c9eb:	int3   
   14002c9ec:	mov    rcx,QWORD PTR [rcx]
   14002c9ef:	test   rcx,rcx
   14002c9f2:	je     0x14002c9fe
   14002c9f4:	call   QWORD PTR [rip+0x3777e]        # 0x140064178
   14002c9fa:	and    QWORD PTR [rbx],0x0
   14002c9fe:	add    rsp,0x20
   14002ca02:	pop    rbx
   14002ca03:	ret    
   14002ca04:	test   rcx,rcx
   14002ca07:	je     0x14002ca44
   14002ca09:	mov    QWORD PTR [rsp+0x8],rbx
   14002ca0e:	push   rdi
   14002ca0f:	sub    rsp,0x20
   14002ca13:	mov    rbx,rcx
   14002ca16:	call   QWORD PTR [rip+0x37a14]        # 0x140064430
   14002ca1c:	test   al,al
   14002ca1e:	movzx  edi,al
   14002ca21:	je     0x14002ca31
   14002ca23:	mov    rcx,rbx
   14002ca26:	call   QWORD PTR [rip+0x37a5c]        # 0x140064488
   14002ca2c:	add    edi,0xffffffff
   14002ca2f:	jne    0x14002ca23
   14002ca31:	mov    rcx,rbx
   14002ca34:	call   QWORD PTR [rip+0x37b46]        # 0x140064580
   14002ca3a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ca3f:	add    rsp,0x20
   14002ca43:	pop    rdi
   14002ca44:	ret    
   14002ca45:	int3   
   14002ca46:	int3   
   14002ca47:	int3   
   14002ca48:	mov    QWORD PTR [rsp+0x8],rbx
   14002ca4d:	push   rdi
   14002ca4e:	sub    rsp,0x20
   14002ca52:	mov    rdi,rcx
   14002ca55:	call   0x1400210b0
   14002ca5a:	test   rax,rax
   14002ca5d:	mov    rbx,rax
   14002ca60:	je     0x14002caa5
   14002ca62:	mov    rcx,QWORD PTR [rax+0x18]
   14002ca66:	test   rcx,rcx
   14002ca69:	je     0x14002caa5
   14002ca6b:	call   0x140049a40
   14002ca70:	lea    rcx,[rdi+0x4]
   14002ca74:	cmp    rax,rcx
   14002ca77:	mov    rcx,QWORD PTR [rbx+0x18]
   14002ca7b:	ja     0x14002ca89
   14002ca7d:	call   0x1400485c0
   14002ca82:	and    QWORD PTR [rbx+0x18],0x0
   14002ca87:	jmp    0x14002ca95
   14002ca89:	sub    rax,rdi
   14002ca8c:	lea    rdx,[rax-0x4]
   14002ca90:	call   0x140049950
   14002ca95:	mov    eax,0x1
   14002ca9a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ca9f:	add    rsp,0x20
   14002caa3:	pop    rdi
   14002caa4:	ret    
   14002caa5:	call   0x1400208b0
   14002caaa:	int3   
   14002caab:	int3   
   14002caac:	rex push rbx
   14002caae:	sub    rsp,0x80
   14002cab5:	mov    rax,QWORD PTR [rip+0x5a2b4]        # 0x140086d70
   14002cabc:	xor    rax,rsp
   14002cabf:	mov    QWORD PTR [rsp+0x70],rax
   14002cac4:	mov    rbx,rdx
   14002cac7:	lea    rdx,[rsp+0x30]
   14002cacc:	mov    r8d,0x20
   14002cad2:	call   QWORD PTR [rip+0x37d88]        # 0x140064860
   14002cad8:	or     r9d,0xffffffff
   14002cadc:	lea    r8,[rsp+0x30]
   14002cae1:	mov    DWORD PTR [rsp+0x28],r9d
   14002cae6:	lea    edx,[r9+0x2]
   14002caea:	mov    ecx,0x409
   14002caef:	mov    QWORD PTR [rsp+0x20],rbx
   14002caf4:	call   QWORD PTR [rip+0x37966]        # 0x140064460
   14002cafa:	cmp    eax,0x2
   14002cafd:	mov    eax,0x0
   14002cb02:	sete   al
   14002cb05:	mov    rcx,QWORD PTR [rsp+0x70]
   14002cb0a:	xor    rcx,rsp
   14002cb0d:	call   0x140046470
   14002cb12:	add    rsp,0x80
   14002cb19:	pop    rbx
   14002cb1a:	ret    
   14002cb1b:	int3   
   14002cb1c:	mov    QWORD PTR [rsp+0x10],rdx
   14002cb21:	push   rbx
   14002cb22:	sub    rsp,0x30
   14002cb26:	lea    rdx,[rsp+0x48]
   14002cb2b:	mov    rbx,rcx
   14002cb2e:	call   QWORD PTR [rip+0x37cb4]        # 0x1400647e8
   14002cb34:	mov    edx,0x5
   14002cb39:	mov    rcx,rbx
   14002cb3c:	call   QWORD PTR [rip+0x37e3e]        # 0x140064980
   14002cb42:	test   rax,rax
   14002cb45:	mov    rbx,rax
   14002cb48:	je     0x14002cb9a
   14002cb4a:	mov    rcx,rax
   14002cb4d:	call   QWORD PTR [rip+0x37dcd]        # 0x140064920
   14002cb53:	test   ax,ax
   14002cb56:	je     0x14002cb8e
   14002cb58:	mov    edx,0xfffffff0
   14002cb5d:	mov    rcx,rbx
   14002cb60:	call   QWORD PTR [rip+0x37e9a]        # 0x140064a00
   14002cb66:	bt     eax,0x1c
   14002cb6a:	jae    0x14002cb8e
   14002cb6c:	lea    rdx,[rsp+0x20]
   14002cb71:	mov    rcx,rbx
   14002cb74:	call   QWORD PTR [rip+0x37dde]        # 0x140064958
   14002cb7a:	mov    rdx,QWORD PTR [rsp+0x48]
   14002cb7f:	lea    rcx,[rsp+0x20]
   14002cb84:	call   QWORD PTR [rip+0x37d8e]        # 0x140064918
   14002cb8a:	test   eax,eax
   14002cb8c:	jne    0x14002cb95
   14002cb8e:	mov    edx,0x2
   14002cb93:	jmp    0x14002cb39
   14002cb95:	mov    rax,rbx
   14002cb98:	jmp    0x14002cb9c
   14002cb9a:	xor    eax,eax
   14002cb9c:	add    rsp,0x30
   14002cba0:	pop    rbx
   14002cba1:	ret    
   14002cba2:	int3   
   14002cba3:	int3   
   14002cba4:	sub    rsp,0x28
   14002cba8:	mov    rdx,rcx
   14002cbab:	mov    ecx,0x40
   14002cbb0:	call   QWORD PTR [rip+0x37a42]        # 0x1400645f8
   14002cbb6:	test   rax,rax
   14002cbb9:	jne    0x14002cbc1
   14002cbbb:	call   0x1400208b0
   14002cbc0:	int3   
   14002cbc1:	add    rsp,0x28
   14002cbc5:	ret    
   14002cbc6:	int3   
   14002cbc7:	int3   
   14002cbc8:	sub    rsp,0x28
   14002cbcc:	test   rcx,rcx
   14002cbcf:	je     0x14002cbd7
   14002cbd1:	call   QWORD PTR [rip+0x37a39]        # 0x140064610
   14002cbd7:	add    rsp,0x28
   14002cbdb:	ret    
   14002cbdc:	mov    QWORD PTR [rsp+0x8],rbx
   14002cbe1:	mov    QWORD PTR [rsp+0x10],rsi
   14002cbe6:	push   rdi
   14002cbe7:	sub    rsp,0x20
   14002cbeb:	mov    rsi,rcx
   14002cbee:	add    rcx,0x28
   14002cbf2:	movsxd rbx,edx
   14002cbf5:	call   QWORD PTR [rip+0x3781d]        # 0x140064418
   14002cbfb:	test   ebx,ebx
   14002cbfd:	jle    0x14002cc2d
   14002cbff:	cmp    ebx,DWORD PTR [rsi+0xc]
   14002cc02:	jge    0x14002cc2d
   14002cc04:	mov    ecx,DWORD PTR [rsi]
   14002cc06:	call   QWORD PTR [rip+0x37814]        # 0x140064420
   14002cc0c:	test   rax,rax
   14002cc0f:	je     0x14002cc2d
   14002cc11:	cmp    ebx,DWORD PTR [rax+0x10]
   14002cc14:	jge    0x14002cc2d
   14002cc16:	mov    rax,QWORD PTR [rax+0x18]
   14002cc1a:	lea    rcx,[rsi+0x28]
   14002cc1e:	mov    rbx,QWORD PTR [rax+rbx*8]
   14002cc22:	call   QWORD PTR [rip+0x37800]        # 0x140064428
   14002cc28:	mov    rax,rbx
   14002cc2b:	jmp    0x14002cc39
   14002cc2d:	lea    rcx,[rsi+0x28]
   14002cc31:	call   QWORD PTR [rip+0x377f1]        # 0x140064428
   14002cc37:	xor    eax,eax
   14002cc39:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cc3e:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cc43:	add    rsp,0x20
   14002cc47:	pop    rdi
   14002cc48:	ret    
   14002cc49:	int3   
   14002cc4a:	int3   
   14002cc4b:	int3   
   14002cc4c:	sub    rsp,0x28
   14002cc50:	mov    edx,DWORD PTR [rcx]
   14002cc52:	test   edx,edx
   14002cc54:	je     0x14002cc69
   14002cc56:	mov    rcx,QWORD PTR [rip+0x5f523]        # 0x14008c180
   14002cc5d:	test   rcx,rcx
   14002cc60:	je     0x14002cc69
   14002cc62:	call   0x14002cbdc
   14002cc67:	jmp    0x14002cc6b
   14002cc69:	xor    eax,eax
   14002cc6b:	add    rsp,0x28
   14002cc6f:	ret    
   14002cc70:	rex push rdi
   14002cc72:	sub    rsp,0x30
   14002cc76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cc7f:	mov    QWORD PTR [rsp+0x40],rbx
   14002cc84:	mov    rdi,rdx
   14002cc87:	mov    rbx,rcx
   14002cc8a:	mov    rax,QWORD PTR [rcx]
   14002cc8d:	test   rax,rax
   14002cc90:	jne    0x14002ccb2
   14002cc92:	lea    ecx,[rax+0x10]
   14002cc95:	call   0x14002d810
   14002cc9a:	nop
   14002cc9b:	mov    rax,QWORD PTR [rbx]
   14002cc9e:	test   rax,rax
   14002cca1:	jne    0x14002cca8
   14002cca3:	call   rdi
   14002cca5:	mov    QWORD PTR [rbx],rax
   14002cca8:	mov    ecx,0x10
   14002ccad:	call   0x14002d8a4
   14002ccb2:	mov    rax,QWORD PTR [rbx]
   14002ccb5:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ccba:	add    rsp,0x30
   14002ccbe:	pop    rdi
   14002ccbf:	ret    
   14002ccc0:	mov    QWORD PTR [rsp+0x10],rdx
   14002ccc5:	push   rbp
   14002ccc6:	sub    rsp,0x20
   14002ccca:	mov    rbp,rdx
   14002cccd:	mov    ecx,0x10
   14002ccd2:	call   0x14002d8a4
   14002ccd7:	xor    edx,edx
   14002ccd9:	xor    ecx,ecx
   14002ccdb:	call   0x140048db0
   14002cce0:	nop
   14002cce1:	add    rsp,0x20
   14002cce5:	pop    rbp
   14002cce6:	ret    
   14002cce7:	int3   
   14002cce8:	sub    rsp,0x28
   14002ccec:	mov    rax,QWORD PTR [rcx]
   14002ccef:	test   rax,rax
   14002ccf2:	je     0x14002cd1f
   14002ccf4:	mov    rax,QWORD PTR [rcx]
   14002ccf7:	mov    QWORD PTR [rsp+0x30],rax
   14002ccfc:	mov    rax,QWORD PTR [rsp+0x30]
   14002cd01:	mov    QWORD PTR [rsp+0x30],rax
   14002cd06:	mov    rax,QWORD PTR [rsp+0x30]
   14002cd0b:	test   rax,rax
   14002cd0e:	je     0x14002cd1f
   14002cd10:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cd15:	mov    edx,0x1
   14002cd1a:	mov    rax,QWORD PTR [rcx]
   14002cd1d:	call   QWORD PTR [rax]
   14002cd1f:	add    rsp,0x28
   14002cd23:	ret    
   14002cd24:	sub    rsp,0x28
   14002cd28:	test   rdx,rdx
   14002cd2b:	mov    r8,rcx
   14002cd2e:	jne    0x14002cd36
   14002cd30:	call   0x1400208f8
   14002cd35:	int3   
   14002cd36:	mov    rax,QWORD PTR [r8]
   14002cd39:	mov    rcx,QWORD PTR [rcx+0x8]
   14002cd3d:	mov    QWORD PTR [rdx+rcx*1],rax
   14002cd41:	mov    QWORD PTR [r8],rdx
   14002cd44:	add    rsp,0x28
   14002cd48:	ret    
   14002cd49:	int3   
   14002cd4a:	int3   
   14002cd4b:	int3   
   14002cd4c:	sub    rsp,0x28
   14002cd50:	mov    r9,QWORD PTR [rcx]
   14002cd53:	xor    r8d,r8d
   14002cd56:	mov    r10,rcx
   14002cd59:	cmp    r9,r8
   14002cd5c:	jne    0x14002cd65
   14002cd5e:	xor    eax,eax
   14002cd60:	add    rsp,0x28
   14002cd64:	ret    
   14002cd65:	cmp    r9,rdx
   14002cd68:	jne    0x14002cd82
   14002cd6a:	cmp    rdx,r8
   14002cd6d:	jne    0x14002cd75
   14002cd6f:	call   0x1400208f8
   14002cd74:	int3   
   14002cd75:	mov    rax,QWORD PTR [rcx+0x8]
   14002cd79:	mov    rcx,QWORD PTR [rdx+rax*1]
   14002cd7d:	mov    QWORD PTR [r10],rcx
   14002cd80:	jmp    0x14002cdb4
   14002cd82:	cmp    r9,r8
   14002cd85:	je     0x14002cdbf
   14002cd87:	mov    rax,QWORD PTR [r10+0x8]
   14002cd8b:	lea    rcx,[rax+r9*1]
   14002cd8f:	cmp    QWORD PTR [rcx],rdx
   14002cd92:	je     0x14002cd9e
   14002cd94:	mov    r9,QWORD PTR [rcx]
   14002cd97:	cmp    r9,r8
   14002cd9a:	jne    0x14002cd87
   14002cd9c:	jmp    0x14002cdba
   14002cd9e:	cmp    rdx,r8
   14002cda1:	jne    0x14002cda9
   14002cda3:	call   0x1400208f8
   14002cda8:	int3   
   14002cda9:	mov    rcx,rax
   14002cdac:	mov    rax,QWORD PTR [rax+rdx*1]
   14002cdb0:	mov    QWORD PTR [rcx+r9*1],rax
   14002cdb4:	mov    r8d,0x1
   14002cdba:	mov    eax,r8d
   14002cdbd:	jmp    0x14002cd60
   14002cdbf:	call   0x1400208f8
   14002cdc4:	int3   
   14002cdc5:	int3   
   14002cdc6:	int3   
   14002cdc7:	int3   
   14002cdc8:	rex push rbx
   14002cdca:	sub    rsp,0x20
   14002cdce:	xor    eax,eax
   14002cdd0:	mov    rbx,rcx
   14002cdd3:	mov    QWORD PTR [rcx+0x18],rax
   14002cdd7:	mov    QWORD PTR [rcx+0x20],0x8
   14002cddf:	mov    DWORD PTR [rcx+0x4],eax
   14002cde2:	mov    DWORD PTR [rcx+0x8],0x1
   14002cde9:	mov    DWORD PTR [rcx+0xc],eax
   14002cdec:	mov    QWORD PTR [rcx+0x10],rax
   14002cdf0:	call   QWORD PTR [rip+0x37612]        # 0x140064408
   14002cdf6:	cmp    eax,0xffffffff
   14002cdf9:	mov    DWORD PTR [rbx],eax
   14002cdfb:	jne    0x14002ce03
   14002cdfd:	call   0x1400208b0
   14002ce02:	int3   
   14002ce03:	lea    rcx,[rbx+0x28]
   14002ce07:	call   QWORD PTR [rip+0x37603]        # 0x140064410
   14002ce0d:	mov    rax,rbx
   14002ce10:	add    rsp,0x20
   14002ce14:	pop    rbx
   14002ce15:	ret    
   14002ce16:	int3   
   14002ce17:	int3   
   14002ce18:	mov    rax,rsp
   14002ce1b:	mov    QWORD PTR [rax+0x8],rbx
   14002ce1f:	mov    QWORD PTR [rax+0x10],rbp
   14002ce23:	mov    QWORD PTR [rax+0x18],rsi
   14002ce27:	mov    QWORD PTR [rax+0x20],rdi
   14002ce2b:	push   r12
   14002ce2d:	sub    rsp,0x20
   14002ce31:	mov    rdi,rcx
   14002ce34:	add    rcx,0x28
   14002ce38:	call   QWORD PTR [rip+0x375da]        # 0x140064418
   14002ce3e:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002ce42:	movsxd rsi,DWORD PTR [rdi+0x8]
   14002ce46:	cmp    esi,ecx
   14002ce48:	jge    0x14002ce5e
   14002ce4a:	mov    rax,QWORD PTR [rdi+0x10]
   14002ce4e:	mov    rdx,rsi
   14002ce51:	add    rdx,rdx
   14002ce54:	test   BYTE PTR [rax+rdx*8],0x1
   14002ce58:	je     0x14002cf68
   14002ce5e:	mov    esi,0x1
   14002ce63:	mov    rdx,rsi
   14002ce66:	cmp    rdx,rcx
   14002ce69:	jge    0x14002ce88
   14002ce6b:	mov    rax,QWORD PTR [rdi+0x10]
   14002ce6f:	add    rax,0x10
   14002ce73:	test   BYTE PTR [rax],0x1
   14002ce76:	je     0x14002ce88
   14002ce78:	add    rdx,0x1
   14002ce7c:	add    esi,0x1
   14002ce7f:	add    rax,0x10
   14002ce83:	cmp    rdx,rcx
   14002ce86:	jl     0x14002ce73
   14002ce88:	cmp    esi,ecx
   14002ce8a:	jl     0x14002cf68
   14002ce90:	lea    r12d,[rcx+0x20]
   14002ce94:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ce98:	test   rcx,rcx
   14002ce9b:	jne    0x14002cec8
   14002ce9d:	mov    eax,r12d
   14002cea0:	mov    ecx,0xffffffff
   14002cea5:	shl    rax,0x4
   14002cea9:	cmp    rax,rcx
   14002ceac:	jbe    0x14002ceb9
   14002ceae:	mov    ecx,0x80070057
   14002ceb3:	call   0x140001430
   14002ceb8:	int3   
   14002ceb9:	mov    edx,eax
   14002cebb:	mov    ecx,0x2
   14002cec0:	call   QWORD PTR [rip+0x376b2]        # 0x140064578
   14002cec6:	jmp    0x14002cf08
   14002cec8:	call   QWORD PTR [rip+0x3752a]        # 0x1400643f8
   14002cece:	mov    rcx,rax
   14002ced1:	mov    rbx,rax
   14002ced4:	call   QWORD PTR [rip+0x375ae]        # 0x140064488
   14002ceda:	mov    r11d,r12d
   14002cedd:	mov    ecx,0xffffffff
   14002cee2:	shl    r11,0x4
   14002cee6:	cmp    r11,rcx
   14002cee9:	jbe    0x14002cef6
   14002ceeb:	mov    ecx,0x80070057
   14002cef0:	call   0x140001430
   14002cef5:	int3   
   14002cef6:	mov    edx,r11d
   14002cef9:	mov    r8d,0x2002
   14002ceff:	mov    rcx,rbx
   14002cf02:	call   QWORD PTR [rip+0x374f8]        # 0x140064400
   14002cf08:	test   rax,rax
   14002cf0b:	jne    0x14002cf35
   14002cf0d:	mov    rcx,QWORD PTR [rdi+0x10]
   14002cf11:	test   rcx,rcx
   14002cf14:	je     0x14002cf25
   14002cf16:	call   QWORD PTR [rip+0x374dc]        # 0x1400643f8
   14002cf1c:	mov    rcx,rax
   14002cf1f:	call   QWORD PTR [rip+0x375db]        # 0x140064500
   14002cf25:	lea    rcx,[rdi+0x28]
   14002cf29:	call   QWORD PTR [rip+0x374f9]        # 0x140064428
   14002cf2f:	call   0x1400208b0
   14002cf34:	int3   
   14002cf35:	mov    rcx,rax
   14002cf38:	call   QWORD PTR [rip+0x375c2]        # 0x140064500
   14002cf3e:	movsxd rcx,DWORD PTR [rdi+0x4]
   14002cf42:	xor    edx,edx
   14002cf44:	mov    rbx,rax
   14002cf47:	mov    eax,r12d
   14002cf4a:	shl    rcx,0x4
   14002cf4e:	sub    eax,DWORD PTR [rdi+0x4]
   14002cf51:	add    rcx,rbx
   14002cf54:	movsxd r8,eax
   14002cf57:	shl    r8,0x4
   14002cf5b:	call   0x140047720
   14002cf60:	mov    DWORD PTR [rdi+0x4],r12d
   14002cf64:	mov    QWORD PTR [rdi+0x10],rbx
   14002cf68:	cmp    esi,DWORD PTR [rdi+0xc]
   14002cf6b:	jl     0x14002cf73
   14002cf6d:	lea    ecx,[rsi+0x1]
   14002cf70:	mov    DWORD PTR [rdi+0xc],ecx
   14002cf73:	mov    rcx,QWORD PTR [rdi+0x10]
   14002cf77:	movsxd rdx,esi
   14002cf7a:	add    rdx,rdx
   14002cf7d:	or     DWORD PTR [rcx+rdx*8],0x1
   14002cf81:	lea    ecx,[rsi+0x1]
   14002cf84:	mov    DWORD PTR [rdi+0x8],ecx
   14002cf87:	lea    rcx,[rdi+0x28]
   14002cf8b:	call   QWORD PTR [rip+0x37497]        # 0x140064428
   14002cf91:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cf96:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cf9b:	mov    rdi,QWORD PTR [rsp+0x48]
   14002cfa0:	mov    eax,esi
   14002cfa2:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cfa7:	add    rsp,0x20
   14002cfab:	pop    r12
   14002cfad:	ret    
   14002cfae:	int3   
   14002cfaf:	int3   
   14002cfb0:	mov    rax,rsp
   14002cfb3:	mov    QWORD PTR [rax+0x8],rbx
   14002cfb7:	mov    QWORD PTR [rax+0x10],rbp
   14002cfbb:	mov    QWORD PTR [rax+0x18],rsi
   14002cfbf:	mov    QWORD PTR [rax+0x20],rdi
   14002cfc3:	push   r12
   14002cfc5:	sub    rsp,0x20
   14002cfc9:	mov    rsi,rcx
   14002cfcc:	add    rcx,0x28
   14002cfd0:	movsxd rdi,edx
   14002cfd3:	call   QWORD PTR [rip+0x3743f]        # 0x140064418
   14002cfd9:	test   edi,edi
   14002cfdb:	jle    0x14002d02e
   14002cfdd:	cmp    edi,DWORD PTR [rsi+0xc]
   14002cfe0:	jge    0x14002d02e
   14002cfe2:	mov    rbx,QWORD PTR [rsi+0x18]
   14002cfe6:	jmp    0x14002d011
   14002cfe8:	cmp    edi,DWORD PTR [rbx+0x10]
   14002cfeb:	jge    0x14002d00d
   14002cfed:	mov    rax,QWORD PTR [rbx+0x18]
   14002cff1:	mov    rcx,QWORD PTR [rax+rdi*8]
   14002cff5:	test   rcx,rcx
   14002cff8:	je     0x14002d004
   14002cffa:	mov    rax,QWORD PTR [rcx]
   14002cffd:	mov    edx,0x1
   14002d002:	call   QWORD PTR [rax]
   14002d004:	mov    rax,QWORD PTR [rbx+0x18]
   14002d008:	and    QWORD PTR [rax+rdi*8],0x0
   14002d00d:	mov    rbx,QWORD PTR [rbx+0x8]
   14002d011:	test   rbx,rbx
   14002d014:	jne    0x14002cfe8
   14002d016:	mov    rax,QWORD PTR [rsi+0x10]
   14002d01a:	mov    rdx,rdi
   14002d01d:	lea    rcx,[rsi+0x28]
   14002d021:	add    rdx,rdx
   14002d024:	and    DWORD PTR [rax+rdx*8],0xfffffffe
   14002d028:	call   QWORD PTR [rip+0x373fa]        # 0x140064428
   14002d02e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d033:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d038:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d03d:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d042:	add    rsp,0x20
   14002d046:	pop    r12
   14002d048:	ret    
   14002d049:	int3   
   14002d04a:	int3   
   14002d04b:	int3   
   14002d04c:	mov    QWORD PTR [rsp+0x8],rcx
   14002d051:	push   rdi
   14002d052:	push   r12
   14002d054:	push   r13
   14002d056:	sub    rsp,0x30
   14002d05a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002d063:	mov    QWORD PTR [rsp+0x58],rbx
   14002d068:	mov    QWORD PTR [rsp+0x60],rsi
   14002d06d:	mov    r13,r8
   14002d070:	movsxd rsi,edx
   14002d073:	mov    rdi,rcx
   14002d076:	add    rcx,0x28
   14002d07a:	call   QWORD PTR [rip+0x37398]        # 0x140064418
   14002d080:	test   esi,esi
   14002d082:	jle    0x14002d1b7
   14002d088:	cmp    esi,DWORD PTR [rdi+0xc]
   14002d08b:	jge    0x14002d1b7
   14002d091:	mov    ecx,DWORD PTR [rdi]
   14002d093:	call   QWORD PTR [rip+0x37387]        # 0x140064420
   14002d099:	mov    rbx,rax
   14002d09c:	test   rax,rax
   14002d09f:	je     0x14002d0b5
   14002d0a1:	cmp    esi,DWORD PTR [rax+0x10]
   14002d0a4:	jl     0x14002d199
   14002d0aa:	test   r13,r13
   14002d0ad:	je     0x14002d199
   14002d0b3:	jmp    0x14002d0ee
   14002d0b5:	mov    ecx,0x20
   14002d0ba:	call   0x14002cba4
   14002d0bf:	mov    rbx,rax
   14002d0c2:	test   rax,rax
   14002d0c5:	je     0x14002d0d3
   14002d0c7:	lea    rax,[rip+0x3e08a]        # 0x14006b158
   14002d0ce:	mov    QWORD PTR [rbx],rax
   14002d0d1:	jmp    0x14002d0d5
   14002d0d3:	xor    ebx,ebx
   14002d0d5:	and    DWORD PTR [rbx+0x10],0x0
   14002d0d9:	and    QWORD PTR [rbx+0x18],0x0
   14002d0de:	mov    rcx,QWORD PTR [rdi+0x20]
   14002d0e2:	mov    rax,QWORD PTR [rdi+0x18]
   14002d0e6:	mov    QWORD PTR [rbx+rcx*1],rax
   14002d0ea:	mov    QWORD PTR [rdi+0x18],rbx
   14002d0ee:	cmp    QWORD PTR [rbx+0x18],0x0
   14002d0f3:	jne    0x14002d120
   14002d0f5:	mov    eax,DWORD PTR [rdi+0xc]
   14002d0f8:	shl    rax,0x3
   14002d0fc:	mov    ecx,0xffffffff
   14002d101:	cmp    rax,rcx
   14002d104:	jbe    0x14002d111
   14002d106:	mov    ecx,0x80070057
   14002d10b:	call   0x140001430
   14002d110:	int3   
   14002d111:	mov    edx,eax
   14002d113:	xor    ecx,ecx
   14002d115:	call   QWORD PTR [rip+0x374dd]        # 0x1400645f8
   14002d11b:	mov    r11,rax
   14002d11e:	jmp    0x14002d151
   14002d120:	mov    eax,DWORD PTR [rdi+0xc]
   14002d123:	shl    rax,0x3
   14002d127:	mov    ecx,0xffffffff
   14002d12c:	cmp    rax,rcx
   14002d12f:	jbe    0x14002d13c
   14002d131:	mov    ecx,0x80070057
   14002d136:	call   0x140001430
   14002d13b:	int3   
   14002d13c:	mov    edx,eax
   14002d13e:	mov    r8d,0x2
   14002d144:	mov    rcx,QWORD PTR [rbx+0x18]
   14002d148:	call   QWORD PTR [rip+0x37102]        # 0x140064250
   14002d14e:	mov    r11,rax
   14002d151:	test   r11,r11
   14002d154:	jne    0x14002d166
   14002d156:	lea    rcx,[rdi+0x28]
   14002d15a:	call   QWORD PTR [rip+0x372c8]        # 0x140064428
   14002d160:	call   0x1400208b0
   14002d165:	int3   
   14002d166:	mov    QWORD PTR [rbx+0x18],r11
   14002d16a:	mov    eax,DWORD PTR [rdi+0xc]
   14002d16d:	sub    eax,DWORD PTR [rbx+0x10]
   14002d170:	movsxd r8,eax
   14002d173:	shl    r8,0x3
   14002d177:	movsxd rax,DWORD PTR [rbx+0x10]
   14002d17b:	lea    rcx,[r11+rax*8]
   14002d17f:	xor    edx,edx
   14002d181:	call   0x140047720
   14002d186:	mov    r11d,DWORD PTR [rdi+0xc]
   14002d18a:	mov    DWORD PTR [rbx+0x10],r11d
   14002d18e:	mov    rdx,rbx
   14002d191:	mov    ecx,DWORD PTR [rdi]
   14002d193:	call   QWORD PTR [rip+0x37257]        # 0x1400643f0
   14002d199:	mov    rcx,QWORD PTR [rbx+0x18]
   14002d19d:	test   rcx,rcx
   14002d1a0:	je     0x14002d1ab
   14002d1a2:	cmp    esi,DWORD PTR [rbx+0x10]
   14002d1a5:	jge    0x14002d1ab
   14002d1a7:	mov    QWORD PTR [rcx+rsi*8],r13
   14002d1ab:	lea    rcx,[rdi+0x28]
   14002d1af:	call   QWORD PTR [rip+0x37273]        # 0x140064428
   14002d1b5:	jmp    0x14002d1c1
   14002d1b7:	lea    rcx,[rdi+0x28]
   14002d1bb:	call   QWORD PTR [rip+0x37267]        # 0x140064428
   14002d1c1:	mov    rbx,QWORD PTR [rsp+0x58]
   14002d1c6:	mov    rsi,QWORD PTR [rsp+0x60]
   14002d1cb:	add    rsp,0x30
   14002d1cf:	pop    r13
   14002d1d1:	pop    r12
   14002d1d3:	pop    rdi
   14002d1d4:	ret    
   14002d1d5:	int3   
   14002d1d6:	int3   
   14002d1d7:	int3   
   14002d1d8:	int3   
   14002d1d9:	int3   
   14002d1da:	int3   
   14002d1db:	int3   
   14002d1dc:	mov    QWORD PTR [rsp+0x10],rdx
   14002d1e1:	push   rbp
   14002d1e2:	sub    rsp,0x20
   14002d1e6:	mov    rbp,rdx
   14002d1e9:	mov    rcx,QWORD PTR [rbp+0x50]
   14002d1ed:	add    rcx,0x28
   14002d1f1:	call   QWORD PTR [rip+0x37231]        # 0x140064428
   14002d1f7:	xor    edx,edx
   14002d1f9:	xor    ecx,ecx
   14002d1fb:	call   0x140048db0
   14002d200:	nop
   14002d201:	add    rsp,0x20
   14002d205:	pop    rbp
   14002d206:	ret    
   14002d207:	int3   
   14002d208:	rex push rbx
   14002d20a:	sub    rsp,0x20
   14002d20e:	test   dl,0x1
   14002d211:	mov    rbx,rcx
   14002d214:	je     0x14002d221
   14002d216:	test   rcx,rcx
   14002d219:	je     0x14002d221
   14002d21b:	call   QWORD PTR [rip+0x373ef]        # 0x140064610
   14002d221:	mov    rax,rbx
   14002d224:	add    rsp,0x20
   14002d228:	pop    rbx
   14002d229:	ret    
   14002d22a:	int3   
   14002d22b:	int3   
   14002d22c:	mov    rax,rsp
   14002d22f:	mov    QWORD PTR [rax+0x8],rbx
   14002d233:	mov    QWORD PTR [rax+0x10],rbp
   14002d237:	mov    QWORD PTR [rax+0x18],rsi
   14002d23b:	mov    QWORD PTR [rax+0x20],rdi
   14002d23f:	push   r12
   14002d241:	push   r13
   14002d243:	push   r14
   14002d245:	sub    rsp,0x20
   14002d249:	mov    esi,0x1
   14002d24e:	mov    r14,r8
   14002d251:	mov    rdi,rdx
   14002d254:	cmp    DWORD PTR [rdx+0x10],esi
   14002d257:	mov    r12,rcx
   14002d25a:	mov    ebp,esi
   14002d25c:	jle    0x14002d2b9
   14002d25e:	lea    ebx,[rsi+0x7]
   14002d261:	lea    r13d,[rsi+0xf]
   14002d265:	test   r14,r14
   14002d268:	je     0x14002d285
   14002d26a:	mov    rax,QWORD PTR [r12+0x10]
   14002d26f:	cmp    QWORD PTR [rax+r13*1+0x8],r14
   14002d274:	je     0x14002d285
   14002d276:	mov    rax,QWORD PTR [rdi+0x18]
   14002d27a:	cmp    QWORD PTR [rbx+rax*1],0x0
   14002d27f:	je     0x14002d2a5
   14002d281:	xor    esi,esi
   14002d283:	jmp    0x14002d2a5
   14002d285:	mov    rax,QWORD PTR [rdi+0x18]
   14002d289:	mov    rcx,QWORD PTR [rbx+rax*1]
   14002d28d:	test   rcx,rcx
   14002d290:	je     0x14002d29c
   14002d292:	mov    rax,QWORD PTR [rcx]
   14002d295:	mov    edx,0x1
   14002d29a:	call   QWORD PTR [rax]
   14002d29c:	mov    rax,QWORD PTR [rdi+0x18]
   14002d2a0:	and    QWORD PTR [rbx+rax*1],0x0
   14002d2a5:	add    ebp,0x1
   14002d2a8:	add    r13,0x10
   14002d2ac:	add    rbx,0x8
   14002d2b0:	cmp    ebp,DWORD PTR [rdi+0x10]
   14002d2b3:	jl     0x14002d265
   14002d2b5:	test   esi,esi
   14002d2b7:	je     0x14002d300
   14002d2b9:	lea    rcx,[r12+0x28]
   14002d2be:	call   QWORD PTR [rip+0x37154]        # 0x140064418
   14002d2c4:	lea    rcx,[r12+0x18]
   14002d2c9:	mov    rdx,rdi
   14002d2cc:	call   0x14002cd4c
   14002d2d1:	lea    rcx,[r12+0x28]
   14002d2d6:	call   QWORD PTR [rip+0x3714c]        # 0x140064428
   14002d2dc:	mov    rcx,QWORD PTR [rdi+0x18]
   14002d2e0:	call   QWORD PTR [rip+0x3732a]        # 0x140064610
   14002d2e6:	mov    r11,QWORD PTR [rdi]
   14002d2e9:	mov    edx,0x1
   14002d2ee:	mov    rcx,rdi
   14002d2f1:	call   QWORD PTR [r11]
   14002d2f4:	mov    ecx,DWORD PTR [r12]
   14002d2f8:	xor    edx,edx
   14002d2fa:	call   QWORD PTR [rip+0x370f0]        # 0x1400643f0
   14002d300:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d305:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d30a:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d30f:	mov    rdi,QWORD PTR [rsp+0x58]
   14002d314:	add    rsp,0x20
   14002d318:	pop    r14
   14002d31a:	pop    r13
   14002d31c:	pop    r12
   14002d31e:	ret    
   14002d31f:	int3   
   14002d320:	mov    QWORD PTR [rsp+0x8],rbx
   14002d325:	mov    QWORD PTR [rsp+0x10],rbp
   14002d32a:	mov    QWORD PTR [rsp+0x18],rsi
   14002d32f:	push   rdi
   14002d330:	sub    rsp,0x20
   14002d334:	mov    rdi,rcx
   14002d337:	add    rcx,0x28
   14002d33b:	mov    ebx,r8d
   14002d33e:	mov    rbp,rdx
   14002d341:	call   QWORD PTR [rip+0x370d1]        # 0x140064418
   14002d347:	test   ebx,ebx
   14002d349:	jne    0x14002d368
   14002d34b:	mov    ecx,DWORD PTR [rdi]
   14002d34d:	call   QWORD PTR [rip+0x370cd]        # 0x140064420
   14002d353:	test   rax,rax
   14002d356:	je     0x14002d388
   14002d358:	mov    r8,rbp
   14002d35b:	mov    rdx,rax
   14002d35e:	mov    rcx,rdi
   14002d361:	call   0x14002d22c
   14002d366:	jmp    0x14002d388
   14002d368:	mov    rdx,QWORD PTR [rdi+0x18]
   14002d36c:	test   rdx,rdx
   14002d36f:	je     0x14002d388
   14002d371:	mov    rbx,QWORD PTR [rdx+0x8]
   14002d375:	mov    r8,rbp
   14002d378:	mov    rcx,rdi
   14002d37b:	call   0x14002d22c
   14002d380:	test   rbx,rbx
   14002d383:	mov    rdx,rbx
   14002d386:	jne    0x14002d371
   14002d388:	lea    rcx,[rdi+0x28]
   14002d38c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d391:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d396:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d39b:	add    rsp,0x20
   14002d39f:	pop    rdi
   14002d3a0:	rex.W jmp QWORD PTR [rip+0x37081]        # 0x140064428
   14002d3a7:	int3   
   14002d3a8:	rex push rdi
   14002d3aa:	sub    rsp,0x30
   14002d3ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002d3b7:	mov    QWORD PTR [rsp+0x40],rbx
   14002d3bc:	mov    QWORD PTR [rsp+0x50],rsi
   14002d3c1:	mov    rsi,rdx
   14002d3c4:	mov    rdi,rcx
   14002d3c7:	xor    eax,eax
   14002d3c9:	test   rdx,rdx
   14002d3cc:	setne  al
   14002d3cf:	test   eax,eax
   14002d3d1:	jne    0x14002d3d9
   14002d3d3:	call   0x1400208f8
   14002d3d8:	int3   
   14002d3d9:	cmp    DWORD PTR [rcx],0x0
   14002d3dc:	jne    0x14002d422
   14002d3de:	mov    rax,QWORD PTR [rip+0x5ed9b]        # 0x14008c180
   14002d3e5:	test   rax,rax
   14002d3e8:	jne    0x14002d40e
   14002d3ea:	lea    rcx,[rip+0x5ed9f]        # 0x14008c190
   14002d3f1:	mov    QWORD PTR [rsp+0x48],rcx
   14002d3f6:	call   0x14002cdc8
   14002d3fb:	nop
   14002d3fc:	mov    QWORD PTR [rip+0x5ed7d],rax        # 0x14008c180
   14002d403:	test   rax,rax
   14002d406:	jne    0x14002d40e
   14002d408:	call   0x1400208f8
   14002d40d:	int3   
   14002d40e:	mov    rcx,rax
   14002d411:	call   0x14002ce18
   14002d416:	mov    DWORD PTR [rdi],eax
   14002d418:	test   eax,eax
   14002d41a:	jne    0x14002d422
   14002d41c:	call   0x1400208f8
   14002d421:	int3   
   14002d422:	mov    edx,DWORD PTR [rdi]
   14002d424:	mov    rcx,QWORD PTR [rip+0x5ed55]        # 0x14008c180
   14002d42b:	call   0x14002cbdc
   14002d430:	mov    rbx,rax
   14002d433:	test   rax,rax
   14002d436:	jne    0x14002d44e
   14002d438:	call   rsi
   14002d43a:	mov    rbx,rax
   14002d43d:	mov    r8,rax
   14002d440:	mov    edx,DWORD PTR [rdi]
   14002d442:	mov    rcx,QWORD PTR [rip+0x5ed37]        # 0x14008c180
   14002d449:	call   0x14002d04c
   14002d44e:	mov    rax,rbx
   14002d451:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d456:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d45b:	add    rsp,0x30
   14002d45f:	pop    rdi
   14002d460:	ret    
   14002d461:	int3   
   14002d462:	int3   
   14002d463:	int3   
   14002d464:	int3   
   14002d465:	int3   
   14002d466:	int3   
   14002d467:	int3   
   14002d468:	rex push rbp
   14002d46a:	sub    rsp,0x20
   14002d46e:	mov    rbp,rdx
   14002d471:	lea    rdx,[rip+0x5ed18]        # 0x14008c190
   14002d478:	mov    rcx,QWORD PTR [rbp+0x48]
   14002d47c:	call   0x1400229a0
   14002d481:	add    rsp,0x20
   14002d485:	pop    rbp
   14002d486:	ret    
   14002d487:	int3   
   14002d488:	rex push rbx
   14002d48a:	sub    rsp,0x20
   14002d48e:	mov    edx,DWORD PTR [rcx]
   14002d490:	mov    rbx,rcx
   14002d493:	test   edx,edx
   14002d495:	je     0x14002d4a8
   14002d497:	mov    rcx,QWORD PTR [rip+0x5ece2]        # 0x14008c180
   14002d49e:	test   rcx,rcx
   14002d4a1:	je     0x14002d4a8
   14002d4a3:	call   0x14002cfb0
   14002d4a8:	and    DWORD PTR [rbx],0x0
   14002d4ab:	add    rsp,0x20
   14002d4af:	pop    rbx
   14002d4b0:	ret    
   14002d4b1:	int3   
   14002d4b2:	int3   
   14002d4b3:	int3   
   14002d4b4:	sub    rsp,0x28
   14002d4b8:	mov    rax,rcx
   14002d4bb:	mov    rcx,QWORD PTR [rip+0x5ecbe]        # 0x14008c180
   14002d4c2:	test   rcx,rcx
   14002d4c5:	je     0x14002d4d2
   14002d4c7:	mov    r8d,edx
   14002d4ca:	mov    rdx,rax
   14002d4cd:	call   0x14002d320
   14002d4d2:	add    rsp,0x28
   14002d4d6:	ret    
   14002d4d7:	int3   
   14002d4d8:	mov    QWORD PTR [rsp+0x8],rbx
   14002d4dd:	push   rdi
   14002d4de:	sub    rsp,0x20
   14002d4e2:	mov    rdx,QWORD PTR [rcx+0x18]
   14002d4e6:	mov    rdi,rcx
   14002d4e9:	test   rdx,rdx
   14002d4ec:	je     0x14002d505
   14002d4ee:	mov    rbx,QWORD PTR [rdx+0x8]
   14002d4f2:	xor    r8d,r8d
   14002d4f5:	mov    rcx,rdi
   14002d4f8:	call   0x14002d22c
   14002d4fd:	test   rbx,rbx
   14002d500:	mov    rdx,rbx
   14002d503:	jne    0x14002d4ee
   14002d505:	cmp    DWORD PTR [rdi],0xffffffff
   14002d508:	je     0x14002d512
   14002d50a:	mov    ecx,DWORD PTR [rdi]
   14002d50c:	call   QWORD PTR [rip+0x36c7e]        # 0x140064190
   14002d512:	mov    rcx,QWORD PTR [rdi+0x10]
   14002d516:	test   rcx,rcx
   14002d519:	je     0x14002d536
   14002d51b:	call   QWORD PTR [rip+0x36ed7]        # 0x1400643f8
   14002d521:	mov    rcx,rax
   14002d524:	mov    rbx,rax
   14002d527:	call   QWORD PTR [rip+0x36f5b]        # 0x140064488
   14002d52d:	mov    rcx,rbx
   14002d530:	call   QWORD PTR [rip+0x3704a]        # 0x140064580
   14002d536:	lea    rcx,[rdi+0x28]
   14002d53a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d53f:	add    rsp,0x20
   14002d543:	pop    rdi
   14002d544:	rex.W jmp QWORD PTR [rip+0x36c3d]        # 0x140064188
   14002d54b:	int3   
   14002d54c:	sub    rsp,0x28
   14002d550:	mov    eax,DWORD PTR [rip+0x5ec8a]        # 0x14008c1e0
   14002d556:	test   eax,eax
   14002d558:	je     0x14002d565
   14002d55a:	sub    eax,0x1
   14002d55d:	mov    DWORD PTR [rip+0x5ec7d],eax        # 0x14008c1e0
   14002d563:	jne    0x14002d57e
   14002d565:	mov    rcx,QWORD PTR [rip+0x5ec14]        # 0x14008c180
   14002d56c:	test   rcx,rcx
   14002d56f:	je     0x14002d57e
   14002d571:	call   0x14002d4d8
   14002d576:	and    QWORD PTR [rip+0x5ec02],0x0        # 0x14008c180
   14002d57e:	add    rsp,0x28
   14002d582:	ret    
   14002d583:	int3   
   14002d584:	sub    rsp,0x28
   14002d588:	call   0x140021a70
   14002d58d:	xor    ecx,ecx
   14002d58f:	cmp    DWORD PTR [rax+0x50],ecx
   14002d592:	sete   cl
   14002d595:	mov    eax,ecx
   14002d597:	add    rsp,0x28
   14002d59b:	ret    
   14002d59c:	sub    rsp,0x28
   14002d5a0:	call   0x140021a70
   14002d5a5:	lock add DWORD PTR [rax+0x50],0x1
   14002d5aa:	add    rsp,0x28
   14002d5ae:	ret    
   14002d5af:	int3   
   14002d5b0:	sub    rsp,0x28
   14002d5b4:	call   0x140021a70
   14002d5b9:	mov    eax,DWORD PTR [rax+0x54]
   14002d5bc:	add    rsp,0x28
   14002d5c0:	ret    
   14002d5c1:	int3   
   14002d5c2:	int3   
   14002d5c3:	int3   
   14002d5c4:	rex push rbx
   14002d5c6:	sub    rsp,0x20
   14002d5ca:	call   0x140021a70
   14002d5cf:	cmp    DWORD PTR [rax+0x54],0x0
   14002d5d3:	jne    0x14002d622
   14002d5d5:	call   0x140021a70
   14002d5da:	mov    DWORD PTR [rax+0x54],0x1
   14002d5e1:	call   0x140021a70
   14002d5e6:	mov    rbx,QWORD PTR [rax+0x8]
   14002d5ea:	test   rbx,rbx
   14002d5ed:	je     0x14002d610
   14002d5ef:	mov    rcx,QWORD PTR [rbx+0x40]
   14002d5f3:	test   rcx,rcx
   14002d5f6:	je     0x14002d610
   14002d5f8:	call   0x140029b3c
   14002d5fd:	test   eax,eax
   14002d5ff:	je     0x14002d622
   14002d601:	mov    rcx,QWORD PTR [rbx+0x40]
   14002d605:	mov    rax,QWORD PTR [rcx]
   14002d608:	call   QWORD PTR [rax+0xc0]
   14002d60e:	jmp    0x14002d622
   14002d610:	call   0x140021a70
   14002d615:	cmp    BYTE PTR [rax+0x28],0x0
   14002d619:	jne    0x14002d622
   14002d61b:	xor    ecx,ecx
   14002d61d:	call   0x14001afa8
   14002d622:	add    rsp,0x20
   14002d626:	pop    rbx
   14002d627:	ret    
   14002d628:	sub    rsp,0x28
   14002d62c:	call   0x140021a70
   14002d631:	lock add DWORD PTR [rax+0x50],0xffffffff
   14002d636:	jne    0x14002d63d
   14002d638:	call   0x14002d5c4
   14002d63d:	add    rsp,0x28
   14002d641:	ret    
   14002d642:	int3   
   14002d643:	int3   
   14002d644:	mov    QWORD PTR [rsp+0x8],rbx
   14002d649:	push   rdi
   14002d64a:	sub    rsp,0x20
   14002d64e:	mov    rdi,rcx
   14002d651:	call   QWORD PTR [rip+0x37201]        # 0x140064858
   14002d657:	jmp    0x14002d67e
   14002d659:	xor    r9d,r9d
   14002d65c:	xor    r8d,r8d
   14002d65f:	mov    edx,0x365
   14002d664:	mov    rcx,rbx
   14002d667:	call   QWORD PTR [rip+0x37503]        # 0x140064b70
   14002d66d:	test   rax,rax
   14002d670:	jne    0x14002d717
   14002d676:	mov    rcx,rbx
   14002d679:	call   0x140027150
   14002d67e:	test   rax,rax
   14002d681:	mov    rbx,rax
   14002d684:	jne    0x14002d659
   14002d686:	call   QWORD PTR [rip+0x3744c]        # 0x140064ad8
   14002d68c:	jmp    0x14002d6af
   14002d68e:	xor    r9d,r9d
   14002d691:	xor    r8d,r8d
   14002d694:	mov    edx,0x365
   14002d699:	mov    rcx,rbx
   14002d69c:	call   QWORD PTR [rip+0x374ce]        # 0x140064b70
   14002d6a2:	test   rax,rax
   14002d6a5:	jne    0x14002d717
   14002d6a7:	mov    rcx,rbx
   14002d6aa:	call   0x140027150
   14002d6af:	test   rax,rax
   14002d6b2:	mov    rbx,rax
   14002d6b5:	jne    0x14002d68e
   14002d6b7:	mov    rcx,rdi
   14002d6ba:	call   0x1400271c8
   14002d6bf:	test   rax,rax
   14002d6c2:	jne    0x14002d6ca
   14002d6c4:	call   0x1400208f8
   14002d6c9:	int3   
   14002d6ca:	mov    rcx,QWORD PTR [rax+0x40]
   14002d6ce:	call   QWORD PTR [rip+0x37334]        # 0x140064a08
   14002d6d4:	jmp    0x14002d6f7
   14002d6d6:	xor    r9d,r9d
   14002d6d9:	xor    r8d,r8d
   14002d6dc:	mov    edx,0x365
   14002d6e1:	mov    rcx,rbx
   14002d6e4:	call   QWORD PTR [rip+0x37486]        # 0x140064b70
   14002d6ea:	test   rax,rax
   14002d6ed:	jne    0x14002d717
   14002d6ef:	mov    rcx,rbx
   14002d6f2:	call   0x140027150
   14002d6f7:	test   rax,rax
   14002d6fa:	mov    rbx,rax
   14002d6fd:	jne    0x14002d6d6
   14002d6ff:	mov    rcx,QWORD PTR [rdi+0x40]
   14002d703:	xor    r9d,r9d
   14002d706:	mov    edx,0x111
   14002d70b:	mov    r8d,0xe147
   14002d711:	call   QWORD PTR [rip+0x37459]        # 0x140064b70
   14002d717:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d71c:	add    rsp,0x20
   14002d720:	pop    rdi
   14002d721:	ret    
   14002d722:	int3   
   14002d723:	int3   
   14002d724:	rex push rbx
   14002d726:	sub    rsp,0x20
   14002d72a:	mov    eax,DWORD PTR [rcx+0xc0]
   14002d730:	mov    rbx,rcx
   14002d733:	test   eax,eax
   14002d735:	je     0x14002d75e
   14002d737:	cmp    eax,0x3f107
   14002d73c:	je     0x14002d763
   14002d73e:	call   0x140021a70
   14002d743:	mov    edx,DWORD PTR [rbx+0xc0]
   14002d749:	mov    r8d,0x1
   14002d74f:	mov    rcx,QWORD PTR [rax+0x8]
   14002d753:	mov    rax,QWORD PTR [rcx]
   14002d756:	call   QWORD PTR [rax+0x158]
   14002d75c:	jmp    0x14002d763
   14002d75e:	call   0x14002d644
   14002d763:	add    rsp,0x20
   14002d767:	pop    rbx
   14002d768:	ret    
   14002d769:	int3   
   14002d76a:	int3   
   14002d76b:	int3   
   14002d76c:	sub    rsp,0x28
   14002d770:	mov    eax,DWORD PTR [rip+0x5ea6e]        # 0x14008c1e4
   14002d776:	test   eax,eax
   14002d778:	jne    0x14002d797
   14002d77a:	lea    rcx,[rip+0x5ed17]        # 0x14008c498
   14002d781:	mov    DWORD PTR [rip+0x5ea59],0x1        # 0x14008c1e4
   14002d78b:	call   QWORD PTR [rip+0x36c7f]        # 0x140064410
   14002d791:	mov    eax,DWORD PTR [rip+0x5ea4d]        # 0x14008c1e4
   14002d797:	add    rsp,0x28
   14002d79b:	ret    
   14002d79c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d7a1:	mov    QWORD PTR [rsp+0x10],rsi
   14002d7a6:	push   rdi
   14002d7a7:	sub    rsp,0x20
   14002d7ab:	mov    eax,DWORD PTR [rip+0x5ea33]        # 0x14008c1e4
   14002d7b1:	test   eax,eax
   14002d7b3:	je     0x14002d7fd
   14002d7b5:	sub    eax,0x1
   14002d7b8:	lea    rcx,[rip+0x5ecd9]        # 0x14008c498
   14002d7bf:	mov    DWORD PTR [rip+0x5ea1f],eax        # 0x14008c1e4
   14002d7c5:	call   QWORD PTR [rip+0x369bd]        # 0x140064188
   14002d7cb:	lea    rbx,[rip+0x5ecee]        # 0x14008c4c0
   14002d7d2:	lea    rdi,[rip+0x5ea17]        # 0x14008c1f0
   14002d7d9:	mov    esi,0x11
   14002d7de:	cmp    DWORD PTR [rbx],0x0
   14002d7e1:	je     0x14002d7ef
   14002d7e3:	mov    rcx,rdi
   14002d7e6:	call   QWORD PTR [rip+0x3699c]        # 0x140064188
   14002d7ec:	add    DWORD PTR [rbx],0xffffffff
   14002d7ef:	add    rdi,0x28
   14002d7f3:	add    rbx,0x4
   14002d7f7:	sub    rsi,0x1
   14002d7fb:	jne    0x14002d7de
   14002d7fd:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d802:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d807:	add    rsp,0x20
   14002d80b:	pop    rdi
   14002d80c:	ret    
   14002d80d:	int3   
   14002d80e:	int3   
   14002d80f:	int3   
   14002d810:	mov    QWORD PTR [rsp+0x8],rbx
   14002d815:	push   rsi
   14002d816:	sub    rsp,0x20
   14002d81a:	movsxd rbx,ecx
   14002d81d:	cmp    ebx,0x11
   14002d820:	jb     0x14002d828
   14002d822:	call   0x1400208f8
   14002d827:	int3   
   14002d828:	cmp    DWORD PTR [rip+0x5e9b5],0x0        # 0x14008c1e4
   14002d82f:	jne    0x14002d836
   14002d831:	call   0x14002d76c
   14002d836:	lea    rsi,[rip+0xfffffffffffd27c3]        # 0x140000000
   14002d83d:	cmp    DWORD PTR [rsi+rbx*4+0x8c4c0],0x0
   14002d845:	jne    0x14002d885
   14002d847:	lea    rcx,[rip+0x5ec4a]        # 0x14008c498
   14002d84e:	call   QWORD PTR [rip+0x36bc4]        # 0x140064418
   14002d854:	cmp    DWORD PTR [rsi+rbx*4+0x8c4c0],0x0
   14002d85c:	jne    0x14002d878
   14002d85e:	lea    rax,[rbx+rbx*4]
   14002d862:	lea    rcx,[rsi+rax*8+0x8c1f0]
   14002d86a:	call   QWORD PTR [rip+0x36ba0]        # 0x140064410
   14002d870:	add    DWORD PTR [rsi+rbx*4+0x8c4c0],0x1
   14002d878:	lea    rcx,[rip+0x5ec19]        # 0x14008c498
   14002d87f:	call   QWORD PTR [rip+0x36ba3]        # 0x140064428
   14002d885:	lea    rax,[rbx+rbx*4]
   14002d889:	lea    rcx,[rsi+rax*8+0x8c1f0]
   14002d891:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d896:	add    rsp,0x20
   14002d89a:	pop    rsi
   14002d89b:	rex.W jmp QWORD PTR [rip+0x36b76]        # 0x140064418
   14002d8a2:	int3   
   14002d8a3:	int3   
   14002d8a4:	sub    rsp,0x28
   14002d8a8:	cmp    ecx,0x11
   14002d8ab:	jb     0x14002d8b3
   14002d8ad:	call   0x1400208f8
   14002d8b2:	int3   
   14002d8b3:	movsxd rax,ecx
   14002d8b6:	lea    rcx,[rax+rax*4]
   14002d8ba:	lea    rax,[rip+0x5e92f]        # 0x14008c1f0
   14002d8c1:	lea    rcx,[rax+rcx*8]
   14002d8c5:	add    rsp,0x28
   14002d8c9:	rex.W jmp QWORD PTR [rip+0x36b58]        # 0x140064428
   14002d8d0:	rex push rbx
   14002d8d2:	sub    rsp,0x20
   14002d8d6:	mov    rbx,rcx
   14002d8d9:	mov    ecx,0xf
   14002d8de:	call   QWORD PTR [rip+0x3701c]        # 0x140064900
   14002d8e4:	mov    ecx,0x10
   14002d8e9:	mov    DWORD PTR [rbx+0x30],eax
   14002d8ec:	call   QWORD PTR [rip+0x3700e]        # 0x140064900
   14002d8f2:	mov    ecx,0x14
   14002d8f7:	mov    DWORD PTR [rbx+0x34],eax
   14002d8fa:	call   QWORD PTR [rip+0x37000]        # 0x140064900
   14002d900:	mov    ecx,0x12
   14002d905:	mov    DWORD PTR [rbx+0x38],eax
   14002d908:	call   QWORD PTR [rip+0x36ff2]        # 0x140064900
   14002d90e:	mov    ecx,0x6
   14002d913:	mov    DWORD PTR [rbx+0x3c],eax
   14002d916:	call   QWORD PTR [rip+0x36fe4]        # 0x140064900
   14002d91c:	mov    ecx,0xf
   14002d921:	mov    DWORD PTR [rbx+0x40],eax
   14002d924:	call   QWORD PTR [rip+0x36e8e]        # 0x1400647b8
   14002d92a:	mov    ecx,0x6
   14002d92f:	mov    QWORD PTR [rbx+0x28],rax
   14002d933:	call   QWORD PTR [rip+0x36e7f]        # 0x1400647b8
   14002d939:	mov    QWORD PTR [rbx+0x20],rax
   14002d93d:	add    rsp,0x20
   14002d941:	pop    rbx
   14002d942:	ret    
   14002d943:	int3   
   14002d944:	mov    QWORD PTR [rsp+0x8],rbx
   14002d949:	push   rdi
   14002d94a:	sub    rsp,0x20
   14002d94e:	mov    rdi,rcx
   14002d951:	mov    ecx,0xb
   14002d956:	call   QWORD PTR [rip+0x371e4]        # 0x140064b40
   14002d95c:	mov    ecx,0xc
   14002d961:	mov    DWORD PTR [rdi+0x8],eax
   14002d964:	call   QWORD PTR [rip+0x371d6]        # 0x140064b40
   14002d96a:	mov    ecx,0x2
   14002d96f:	mov    DWORD PTR [rdi+0xc],eax
   14002d972:	call   QWORD PTR [rip+0x371c8]        # 0x140064b40
   14002d978:	mov    ecx,0x3
   14002d97d:	add    eax,0x1
   14002d980:	mov    DWORD PTR [rip+0x5eb8a],eax        # 0x14008c510
   14002d986:	call   QWORD PTR [rip+0x371b4]        # 0x140064b40
   14002d98c:	xor    ecx,ecx
   14002d98e:	add    eax,0x1
   14002d991:	mov    DWORD PTR [rip+0x5eb7d],eax        # 0x14008c514
   14002d997:	call   QWORD PTR [rip+0x3700b]        # 0x1400649a8
   14002d99d:	mov    edx,0x58
   14002d9a2:	mov    rcx,rax
   14002d9a5:	mov    rbx,rax
   14002d9a8:	call   QWORD PTR [rip+0x36742]        # 0x1400640f0
   14002d9ae:	mov    edx,0x5a
   14002d9b3:	mov    rcx,rbx
   14002d9b6:	mov    DWORD PTR [rdi+0x18],eax
   14002d9b9:	call   QWORD PTR [rip+0x36731]        # 0x1400640f0
   14002d9bf:	mov    rdx,rbx
   14002d9c2:	xor    ecx,ecx
   14002d9c4:	mov    DWORD PTR [rdi+0x1c],eax
   14002d9c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d9cc:	add    rsp,0x20
   14002d9d0:	pop    rdi
   14002d9d1:	rex.W jmp QWORD PTR [rip+0x36fc8]        # 0x1400649a0
   14002d9d8:	rex push rbx
   14002d9da:	sub    rsp,0x20
   14002d9de:	mov    rbx,rcx
   14002d9e1:	call   QWORD PTR [rip+0x36ae9]        # 0x1400644d0
   14002d9e7:	mov    rcx,rbx
   14002d9ea:	shr    eax,0x1f
   14002d9ed:	mov    DWORD PTR [rbx+0x78],eax
   14002d9f0:	call   0x14002d944
   14002d9f5:	and    QWORD PTR [rbx+0x28],0x0
   14002d9fa:	mov    rcx,rbx
   14002d9fd:	call   0x14002d8d0
   14002da02:	mov    edx,0x7f02
   14002da07:	xor    ecx,ecx
   14002da09:	call   QWORD PTR [rip+0x37119]        # 0x140064b28
   14002da0f:	mov    edx,0x7f00
   14002da14:	xor    ecx,ecx
   14002da16:	mov    QWORD PTR [rbx+0x48],rax
   14002da1a:	call   QWORD PTR [rip+0x37108]        # 0x140064b28
   14002da20:	and    QWORD PTR [rbx+0x70],0x0
   14002da25:	and    QWORD PTR [rbx+0x58],0x0
   14002da2a:	mov    QWORD PTR [rbx+0x50],rax
   14002da2e:	mov    eax,0x2
   14002da33:	mov    DWORD PTR [rbx+0x10],eax
   14002da36:	mov    DWORD PTR [rbx+0x14],eax
   14002da39:	mov    rax,rbx
   14002da3c:	add    rsp,0x20
   14002da40:	pop    rbx
   14002da41:	ret    
   14002da42:	int3   
   14002da43:	int3   
   14002da44:	sub    rsp,0x468
   14002da4b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14002da54:	mov    rax,QWORD PTR [rip+0x59315]        # 0x140086d70
   14002da5b:	xor    rax,rsp
   14002da5e:	mov    QWORD PTR [rsp+0x450],rax
   14002da66:	add    rcx,0x70
   14002da6a:	call   0x14002c9d8
   14002da6f:	nop
   14002da70:	mov    rcx,QWORD PTR [rsp+0x450]
   14002da78:	xor    rcx,rsp
   14002da7b:	call   0x140046470
   14002da80:	add    rsp,0x468
   14002da87:	ret    
   14002da88:	int3   
   14002da89:	int3   
   14002da8a:	int3   
   14002da8b:	int3   
   14002da8c:	int3   
   14002da8d:	int3   
   14002da8e:	int3   
   14002da8f:	int3   
   14002da90:	int3   
   14002da91:	int3   
   14002da92:	int3   
   14002da93:	int3   
   14002da94:	mov    QWORD PTR [rsp+0x10],rdx
   14002da99:	push   rbx
   14002da9a:	push   rbp
   14002da9b:	sub    rsp,0x38
   14002da9f:	mov    rbp,rdx
   14002daa2:	call   0x14002b874
   14002daa7:	mov    r11,rax
   14002daaa:	xor    ecx,ecx
   14002daac:	test   rax,rax
   14002daaf:	setne  cl
   14002dab2:	test   ecx,ecx
   14002dab4:	jne    0x14002dac1
   14002dab6:	mov    ecx,0x80004005
   14002dabb:	call   0x140001430
   14002dac0:	int3   
   14002dac1:	mov    rax,QWORD PTR [rax]
   14002dac4:	mov    rcx,r11
   14002dac7:	call   QWORD PTR [rax+0x18]
   14002daca:	add    rax,0x18
   14002dace:	mov    QWORD PTR [rbp+0x30],rax
   14002dad2:	mov    rcx,QWORD PTR [rbp+0x38]
   14002dad6:	mov    rax,QWORD PTR [rcx]
   14002dad9:	xor    r9d,r9d
   14002dadc:	mov    r8d,0x200
   14002dae2:	lea    rdx,[rbp+0x50]
   14002dae6:	call   QWORD PTR [rax+0x18]
   14002dae9:	test   eax,eax
   14002daeb:	je     0x14002db1e
   14002daed:	lea    rax,[rbp+0x50]
   14002daf1:	mov    QWORD PTR [rsp+0x28],rax
   14002daf6:	mov    DWORD PTR [rsp+0x20],0x3c
   14002dafe:	lea    r9,[rip+0x3d6d3]        # 0x14006b1d8
   14002db05:	lea    r8,[rip+0x3a59c]        # 0x1400680a8
   14002db0c:	lea    rdx,[rip+0x3a575]        # 0x140068088
   14002db13:	lea    rcx,[rbp+0x30]
   14002db17:	call   0x140004180
   14002db1c:	jmp    0x14002db44
   14002db1e:	mov    DWORD PTR [rsp+0x20],0x3c
   14002db26:	lea    r9,[rip+0x3d6ab]        # 0x14006b1d8
   14002db2d:	lea    r8,[rip+0x3a574]        # 0x1400680a8
   14002db34:	lea    rdx,[rip+0x3a535]        # 0x140068070
   14002db3b:	lea    rcx,[rbp+0x30]
   14002db3f:	call   0x140004180
   14002db44:	xor    r8d,r8d
   14002db47:	xor    edx,edx
   14002db49:	mov    rbx,QWORD PTR [rbp+0x30]
   14002db4d:	mov    rcx,rbx
   14002db50:	call   0x14001dd9c
   14002db55:	nop
   14002db56:	lea    rdx,[rbx-0x18]
   14002db5a:	or     eax,0xffffffff
   14002db5d:	lock xadd DWORD PTR [rdx+0x10],eax
   14002db62:	add    eax,0xffffffff
   14002db65:	test   eax,eax
   14002db67:	jg     0x14002db72
   14002db69:	mov    rcx,QWORD PTR [rdx]
   14002db6c:	mov    rax,QWORD PTR [rcx]
   14002db6f:	call   QWORD PTR [rax+0x8]
   14002db72:	mov    rcx,QWORD PTR [rbp+0x38]
   14002db76:	mov    rax,QWORD PTR [rcx]
   14002db79:	mov    edx,0x1
   14002db7e:	call   QWORD PTR [rax+0x8]
   14002db81:	nop
   14002db82:	lea    rax,[rip+0xfffffffffffffee7]        # 0x14002da70
   14002db89:	jmp    0x14002db8b
   14002db8b:	add    rsp,0x38
   14002db8f:	pop    rbp
   14002db90:	pop    rbx
   14002db91:	ret    
   14002db92:	int3   
   14002db93:	int3   
   14002db94:	rex push rbp
   14002db96:	sub    rsp,0x20
   14002db9a:	mov    rbp,rdx
   14002db9d:	lea    rcx,[rbp+0x30]
   14002dba1:	call   0x1400010c0
   14002dba6:	add    rsp,0x20
   14002dbaa:	pop    rbp
   14002dbab:	ret    
   14002dbac:	sub    rsp,0x28
   14002dbb0:	call   0x140021ac0
   14002dbb5:	add    DWORD PTR [rax+0x20],0x1
   14002dbb9:	add    rsp,0x28
   14002dbbd:	ret    
   14002dbbe:	int3   
   14002dbbf:	int3   
   14002dbc0:	mov    QWORD PTR [rsp+0x8],rcx
   14002dbc5:	push   rsi
   14002dbc6:	push   rdi
   14002dbc7:	push   r12
   14002dbc9:	sub    rsp,0x30
   14002dbcd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002dbd6:	mov    QWORD PTR [rsp+0x58],rbx
   14002dbdb:	mov    QWORD PTR [rsp+0x60],rbp
   14002dbe0:	mov    rdi,r9
   14002dbe3:	mov    rsi,r8
   14002dbe6:	mov    rbp,rdx
   14002dbe9:	mov    rbx,rcx
   14002dbec:	lea    rax,[rip+0x3d64d]        # 0x14006b240
   14002dbf3:	mov    QWORD PTR [rcx],rax
   14002dbf6:	add    rcx,0x8
   14002dbfa:	mov    r8d,0x40
   14002dc00:	mov    edx,DWORD PTR [rdx+0x8]
   14002dc03:	call   0x140040424
   14002dc08:	nop
   14002dc09:	lea    rcx,[rbx+0x30]
   14002dc0d:	mov    edx,0xa
   14002dc12:	call   0x14002fa14
   14002dc17:	nop
   14002dc18:	mov    edx,0x4
   14002dc1d:	lea    rcx,[rbx+0x68]
   14002dc21:	call   0x14002fa14
   14002dc26:	nop
   14002dc27:	xor    eax,eax
   14002dc29:	test   rsi,rsi
   14002dc2c:	setne  al
   14002dc2f:	test   eax,eax
   14002dc31:	jne    0x14002dc39
   14002dc33:	call   0x1400208f8
   14002dc38:	int3   
   14002dc39:	xor    eax,eax
   14002dc3b:	test   rdi,rdi
   14002dc3e:	setne  al
   14002dc41:	test   eax,eax
   14002dc43:	jne    0x14002dc4b
   14002dc45:	call   0x1400208f8
   14002dc4a:	int3   
   14002dc4b:	xor    r8d,r8d
   14002dc4e:	lea    edx,[r8+0x7]
   14002dc52:	lea    rcx,[rbx+0x68]
   14002dc56:	call   0x14002f784
   14002dc5b:	mov    QWORD PTR [rbx+0xa0],rbp
   14002dc62:	mov    QWORD PTR [rbx+0x20],rsi
   14002dc66:	mov    QWORD PTR [rbx+0x28],rdi
   14002dc6a:	mov    rax,QWORD PTR [rsp+0x70]
   14002dc6f:	mov    QWORD PTR [rbx+0xa8],rax
   14002dc76:	mov    eax,DWORD PTR [rsp+0x78]
   14002dc7a:	mov    DWORD PTR [rbx+0xb0],eax
   14002dc80:	mov    rax,rbx
   14002dc83:	mov    rbx,QWORD PTR [rsp+0x58]
   14002dc88:	mov    rbp,QWORD PTR [rsp+0x60]
   14002dc8d:	add    rsp,0x30
   14002dc91:	pop    r12
   14002dc93:	pop    rdi
   14002dc94:	pop    rsi
   14002dc95:	ret    
   14002dc96:	int3   
   14002dc97:	int3   
   14002dc98:	int3   
   14002dc99:	int3   
   14002dc9a:	int3   
   14002dc9b:	int3   
   14002dc9c:	int3   
   14002dc9d:	int3   
   14002dc9e:	int3   
   14002dc9f:	int3   
   14002dca0:	rex push rbp
   14002dca2:	sub    rsp,0x20
   14002dca6:	mov    rbp,rdx
   14002dca9:	mov    rcx,QWORD PTR [rbp+0x50]
   14002dcad:	add    rcx,0x8
   14002dcb1:	call   0x140040474
   14002dcb6:	add    rsp,0x20
   14002dcba:	pop    rbp
   14002dcbb:	ret    
   14002dcbc:	int3   
   14002dcbd:	int3   
   14002dcbe:	int3   
   14002dcbf:	int3   
   14002dcc0:	rex push rbp
   14002dcc2:	sub    rsp,0x20
   14002dcc6:	mov    rbp,rdx
   14002dcc9:	mov    rcx,QWORD PTR [rbp+0x50]
   14002dccd:	add    rcx,0x30
   14002dcd1:	call   0x14002fa4c
   14002dcd6:	add    rsp,0x20
   14002dcda:	pop    rbp
   14002dcdb:	ret    
   14002dcdc:	int3   
   14002dcdd:	int3   
   14002dcde:	int3   
   14002dcdf:	int3   
   14002dce0:	rex push rbp
   14002dce2:	sub    rsp,0x20
   14002dce6:	mov    rbp,rdx
   14002dce9:	mov    rcx,QWORD PTR [rbp+0x50]
   14002dced:	add    rcx,0x68
   14002dcf1:	call   0x14002fa4c
   14002dcf6:	add    rsp,0x20
   14002dcfa:	pop    rbp
   14002dcfb:	ret    
   14002dcfc:	rex push rdi
   14002dcfe:	push   r12
   14002dd00:	push   r13
   14002dd02:	sub    rsp,0x30
   14002dd06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002dd0f:	mov    QWORD PTR [rsp+0x50],rbx
   14002dd14:	mov    QWORD PTR [rsp+0x60],rsi
   14002dd19:	mov    rbx,rdx
   14002dd1c:	mov    rsi,rcx
   14002dd1f:	test   rdx,rdx
   14002dd22:	jne    0x14002dd2b
   14002dd24:	xor    eax,eax
   14002dd26:	jmp    0x14002ddcc
   14002dd2b:	add    rcx,0x30
   14002dd2f:	call   0x14002f878
   14002dd34:	test   rax,rax
   14002dd37:	jne    0x14002ddcc
   14002dd3d:	mov    rdx,rbx
   14002dd40:	lea    rcx,[rsi+0x68]
   14002dd44:	call   0x14002f878
   14002dd49:	test   rax,rax
   14002dd4c:	je     0x14002dd69
   14002dd4e:	mov    rcx,QWORD PTR [rsi+0xa8]
   14002dd55:	mov    QWORD PTR [rax+rcx*1],rbx
   14002dd59:	cmp    DWORD PTR [rsi+0xb0],0x2
   14002dd60:	jne    0x14002ddcc
   14002dd62:	mov    QWORD PTR [rax+rcx*1+0x8],rbx
   14002dd67:	jmp    0x14002ddcc
   14002dd69:	lea    rcx,[rip+0xffffffffffffecd8]        # 0x14002ca48
   14002dd70:	call   0x14001abfc
   14002dd75:	mov    r12,rax
   14002dd78:	mov    QWORD PTR [rsp+0x58],rax
   14002dd7d:	lea    rcx,[rsi+0x8]
   14002dd81:	call   0x14004047c
   14002dd86:	mov    rdi,rax
   14002dd89:	test   rax,rax
   14002dd8c:	jne    0x14002dd93
   14002dd8e:	call   0x1400208b0
   14002dd93:	mov    rcx,rax
   14002dd96:	call   QWORD PTR [rsi+0x20]
   14002dd99:	mov    rdx,rbx
   14002dd9c:	lea    rcx,[rsi+0x68]
   14002dda0:	call   0x14002fac8
   14002dda5:	mov    QWORD PTR [rax],rdi
   14002dda8:	mov    rcx,r12
   14002ddab:	call   0x14001abfc
   14002ddb0:	mov    r11,QWORD PTR [rsi+0xa8]
   14002ddb7:	mov    QWORD PTR [rdi+r11*1],rbx
   14002ddbb:	cmp    DWORD PTR [rsi+0xb0],0x2
   14002ddc2:	jne    0x14002ddc9
   14002ddc4:	mov    QWORD PTR [rdi+r11*1+0x8],rbx
   14002ddc9:	mov    rax,rdi
   14002ddcc:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ddd1:	mov    rsi,QWORD PTR [rsp+0x60]
   14002ddd6:	add    rsp,0x30
   14002ddda:	pop    r13
   14002dddc:	pop    r12
   14002ddde:	pop    rdi
   14002dddf:	ret    
   14002dde0:	int3   
   14002dde1:	int3   
   14002dde2:	int3   
   14002dde3:	int3   
   14002dde4:	int3   
   14002dde5:	int3   
   14002dde6:	int3   
   14002dde7:	int3   
   14002dde8:	int3   
   14002dde9:	int3   
   14002ddea:	int3   
   14002ddeb:	int3   
   14002ddec:	mov    QWORD PTR [rsp+0x10],rdx
   14002ddf1:	push   rbp
   14002ddf2:	sub    rsp,0x20
   14002ddf6:	mov    rbp,rdx
   14002ddf9:	mov    rcx,QWORD PTR [rbp+0x58]
   14002ddfd:	call   0x14001abfc
   14002de02:	xor    edx,edx
   14002de04:	xor    ecx,ecx
   14002de06:	call   0x140048db0
   14002de0b:	nop
   14002de0c:	add    rsp,0x20
   14002de10:	pop    rbp
   14002de11:	ret    
   14002de12:	int3   
   14002de13:	int3   
   14002de14:	test   rcx,rcx
   14002de17:	je     0x14002dea2
   14002de1d:	mov    QWORD PTR [rsp+0x20],rbx
   14002de22:	push   rdi
   14002de23:	sub    rsp,0x20
   14002de27:	mov    rax,QWORD PTR [rcx+0x80]
   14002de2e:	mov    rbx,rcx
   14002de31:	neg    rax
   14002de34:	sbb    rdx,rdx
   14002de37:	mov    QWORD PTR [rsp+0x38],rdx
   14002de3c:	je     0x14002de86
   14002de3e:	lea    r9,[rsp+0x30]
   14002de43:	lea    r8,[rsp+0x40]
   14002de48:	lea    rdx,[rsp+0x38]
   14002de4d:	lea    rcx,[rbx+0x68]
   14002de51:	call   0x14002f954
   14002de56:	mov    r11,QWORD PTR [rbx+0xa8]
   14002de5d:	mov    rax,QWORD PTR [rsp+0x30]
   14002de62:	and    QWORD PTR [rax+r11*1],0x0
   14002de67:	cmp    DWORD PTR [rbx+0xb0],0x2
   14002de6e:	jne    0x14002de76
   14002de70:	and    QWORD PTR [rax+r11*1+0x8],0x0
   14002de76:	mov    rcx,QWORD PTR [rsp+0x30]
   14002de7b:	call   QWORD PTR [rbx+0x28]
   14002de7e:	cmp    QWORD PTR [rsp+0x38],0x0
   14002de84:	jne    0x14002de3e
   14002de86:	lea    rcx,[rbx+0x68]
   14002de8a:	call   0x14002f804
   14002de8f:	lea    rcx,[rbx+0x8]
   14002de93:	call   0x140040450
   14002de98:	mov    rbx,QWORD PTR [rsp+0x48]
   14002de9d:	add    rsp,0x20
   14002dea1:	pop    rdi
   14002dea2:	ret    
   14002dea3:	int3   
   14002dea4:	mov    QWORD PTR [rsp+0x8],rcx
   14002dea9:	push   rdi
   14002deaa:	sub    rsp,0x30
   14002deae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002deb7:	mov    QWORD PTR [rsp+0x48],rbx
   14002debc:	mov    ebx,edx
   14002debe:	mov    rdi,rcx
   14002dec1:	lea    rax,[rip+0x3d378]        # 0x14006b240
   14002dec8:	mov    QWORD PTR [rcx],rax
   14002decb:	call   0x14002de14
   14002ded0:	nop
   14002ded1:	lea    rcx,[rdi+0x68]
   14002ded5:	call   0x14002fa4c
   14002deda:	nop
   14002dedb:	lea    rcx,[rdi+0x30]
   14002dedf:	call   0x14002fa4c
   14002dee4:	nop
   14002dee5:	lea    rcx,[rdi+0x8]
   14002dee9:	call   0x140040474
   14002deee:	test   bl,0x1
   14002def1:	je     0x14002defb
   14002def3:	mov    rcx,rdi
   14002def6:	call   0x14001ac50
   14002defb:	mov    rax,rdi
   14002defe:	mov    rbx,QWORD PTR [rsp+0x48]
   14002df03:	add    rsp,0x30
   14002df07:	pop    rdi
   14002df08:	ret    
   14002df09:	int3   
   14002df0a:	int3   
   14002df0b:	int3   
   14002df0c:	int3   
   14002df0d:	int3   
   14002df0e:	int3   
   14002df0f:	int3   
   14002df10:	int3   
   14002df11:	int3   
   14002df12:	int3   
   14002df13:	int3   
   14002df14:	rex push rbp
   14002df16:	sub    rsp,0x20
   14002df1a:	mov    rbp,rdx
   14002df1d:	mov    rcx,QWORD PTR [rbp+0x40]
   14002df21:	add    rcx,0x8
   14002df25:	call   0x140040474
   14002df2a:	add    rsp,0x20
   14002df2e:	pop    rbp
   14002df2f:	ret    
   14002df30:	int3   
   14002df31:	int3   
   14002df32:	int3   
   14002df33:	int3   
   14002df34:	rex push rbp
   14002df36:	sub    rsp,0x20
   14002df3a:	mov    rbp,rdx
   14002df3d:	mov    rcx,QWORD PTR [rbp+0x40]
   14002df41:	add    rcx,0x30
   14002df45:	call   0x14002fa4c
   14002df4a:	add    rsp,0x20
   14002df4e:	pop    rbp
   14002df4f:	ret    
   14002df50:	int3   
   14002df51:	int3   
   14002df52:	int3   
   14002df53:	int3   
   14002df54:	rex push rbp
   14002df56:	sub    rsp,0x20
   14002df5a:	mov    rbp,rdx
   14002df5d:	mov    rcx,QWORD PTR [rbp+0x40]
   14002df61:	add    rcx,0x68
   14002df65:	call   0x14002fa4c
   14002df6a:	add    rsp,0x20
   14002df6e:	pop    rbp
   14002df6f:	ret    
   14002df70:	mov    rax,rsp
   14002df73:	push   r13
   14002df75:	sub    rsp,0x30
   14002df79:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002df82:	mov    QWORD PTR [rax+0x8],rbx
   14002df86:	mov    QWORD PTR [rax+0x10],rsi
   14002df8a:	mov    QWORD PTR [rax+0x18],rdi
   14002df8e:	mov    QWORD PTR [rax+0x20],r12
   14002df92:	mov    edi,ecx
   14002df94:	call   0x140021ac0
   14002df99:	mov    rsi,rax
   14002df9c:	mov    edx,DWORD PTR [rax+0x20]
   14002df9f:	xor    ebx,ebx
   14002dfa1:	cmp    edx,ebx
   14002dfa3:	je     0x14002e090
   14002dfa9:	add    edx,0xffffffff
   14002dfac:	mov    DWORD PTR [rax+0x20],edx
   14002dfaf:	cmp    edx,ebx
   14002dfb1:	jne    0x14002e090
   14002dfb7:	cmp    edi,ebx
   14002dfb9:	je     0x14002e007
   14002dfbb:	cmp    edi,0xffffffff
   14002dfbe:	je     0x14002dfda
   14002dfc0:	call   0x14001c840
   14002dfc5:	cmp    rax,rbx
   14002dfc8:	je     0x14002dfda
   14002dfca:	mov    r8,QWORD PTR [rax+0x78]
   14002dfce:	cmp    r8,rbx
   14002dfd1:	je     0x14002dfda
   14002dfd3:	xor    edx,edx
   14002dfd5:	xor    ecx,ecx
   14002dfd7:	call   r8
   14002dfda:	mov    rcx,QWORD PTR [rsi+0x40]
   14002dfde:	call   0x14002de14
   14002dfe3:	mov    rcx,QWORD PTR [rsi+0x38]
   14002dfe7:	call   0x14002de14
   14002dfec:	mov    rcx,QWORD PTR [rsi+0x30]
   14002dff0:	call   0x14002de14
   14002dff5:	mov    rcx,QWORD PTR [rsi+0x28]
   14002dff9:	call   0x14002de14
   14002dffe:	mov    rcx,QWORD PTR [rsi+0x48]
   14002e002:	call   0x14002de14
   14002e007:	call   0x140021a70
   14002e00c:	mov    r12,QWORD PTR [rax+0x8]
   14002e010:	lea    rcx,[rip+0x5abe9]        # 0x140088c00
   14002e017:	call   0x14002cc4c
   14002e01c:	mov    rdi,rax
   14002e01f:	cmp    rax,rbx
   14002e022:	je     0x14002e090
   14002e024:	cmp    r12,rbx
   14002e027:	je     0x14002e090
   14002e029:	mov    rcx,QWORD PTR [rax+0x18]
   14002e02d:	cmp    rcx,rbx
   14002e030:	je     0x14002e041
   14002e032:	call   0x140049a40
   14002e037:	cmp    rax,QWORD PTR [r12+0x128]
   14002e03f:	jae    0x14002e090
   14002e041:	cmp    QWORD PTR [r12+0x128],rbx
   14002e049:	je     0x14002e090
   14002e04b:	mov    r13,rbx
   14002e04e:	mov    rcx,QWORD PTR [rdi+0x18]
   14002e052:	cmp    rcx,rbx
   14002e055:	je     0x14002e069
   14002e057:	call   0x140049a40
   14002e05c:	mov    r13,rax
   14002e05f:	mov    rcx,QWORD PTR [rdi+0x18]
   14002e063:	call   0x1400485c0
   14002e068:	nop
   14002e069:	mov    rcx,QWORD PTR [r12+0x128]
   14002e071:	call   0x1400480c0
   14002e076:	mov    QWORD PTR [rdi+0x18],rax
   14002e07a:	cmp    rax,rbx
   14002e07d:	jne    0x14002e090
   14002e07f:	cmp    r13,rbx
   14002e082:	je     0x14002e090
   14002e084:	mov    rcx,r13
   14002e087:	call   0x1400480c0
   14002e08c:	mov    QWORD PTR [rdi+0x18],rax
   14002e090:	cmp    DWORD PTR [rsi+0x20],ebx
   14002e093:	setne  bl
   14002e096:	mov    eax,ebx
   14002e098:	mov    rbx,QWORD PTR [rsp+0x40]
   14002e09d:	mov    rsi,QWORD PTR [rsp+0x48]
   14002e0a2:	mov    rdi,QWORD PTR [rsp+0x50]
   14002e0a7:	mov    r12,QWORD PTR [rsp+0x58]
   14002e0ac:	add    rsp,0x30
   14002e0b0:	pop    r13
   14002e0b2:	ret    
   14002e0b3:	int3   
   14002e0b4:	int3   
   14002e0b5:	int3   
   14002e0b6:	int3   
   14002e0b7:	int3   
   14002e0b8:	int3   
   14002e0b9:	int3   
   14002e0ba:	int3   
   14002e0bb:	int3   
   14002e0bc:	int3   
   14002e0bd:	int3   
   14002e0be:	int3   
   14002e0bf:	int3   
   14002e0c0:	mov    QWORD PTR [rsp+0x10],rdx
   14002e0c5:	push   rbp
   14002e0c6:	sub    rsp,0x20
   14002e0ca:	mov    rbp,rdx
   14002e0cd:	xor    edx,edx
   14002e0cf:	xor    ecx,ecx
   14002e0d1:	call   0x140048db0
   14002e0d6:	nop
   14002e0d7:	add    rsp,0x20
   14002e0db:	pop    rbp
   14002e0dc:	ret    
   14002e0dd:	int3   
   14002e0de:	int3   
   14002e0df:	int3   
   14002e0e0:	mov    QWORD PTR [rsp+0x8],rcx
   14002e0e5:	push   rdi
   14002e0e6:	sub    rsp,0x30
   14002e0ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e0f3:	mov    QWORD PTR [rsp+0x48],rbx
   14002e0f8:	mov    rbx,rdx
   14002e0fb:	mov    rdi,rcx
   14002e0fe:	xor    eax,eax
   14002e100:	test   r8,r8
   14002e103:	setne  al
   14002e106:	test   eax,eax
   14002e108:	jne    0x14002e115
   14002e10a:	mov    ecx,0x80004005
   14002e10f:	call   0x140001430
   14002e114:	int3   
   14002e115:	mov    rax,QWORD PTR [r8]
   14002e118:	mov    rcx,r8
   14002e11b:	call   QWORD PTR [rax+0x18]
   14002e11e:	add    rax,0x18
   14002e122:	mov    QWORD PTR [rdi],rax
   14002e125:	test   rbx,rbx
   14002e128:	je     0x14002e15c
   14002e12a:	test   rbx,0xffffffffffff0000
   14002e131:	jne    0x14002e152
   14002e133:	movzx  ebx,bx
   14002e136:	mov    ecx,ebx
   14002e138:	call   0x14002b860
   14002e13d:	test   rax,rax
   14002e140:	je     0x14002e16d
   14002e142:	mov    r8d,ebx
   14002e145:	mov    rdx,rax
   14002e148:	mov    rcx,rdi
   14002e14b:	call   0x140003650
   14002e150:	jmp    0x14002e16d
   14002e152:	mov    rcx,rbx
   14002e155:	call   0x140048610
   14002e15a:	jmp    0x14002e15e
   14002e15c:	xor    eax,eax
   14002e15e:	mov    r8d,eax
   14002e161:	mov    rdx,rbx
   14002e164:	mov    rcx,rdi
   14002e167:	call   0x1400037d0
   14002e16c:	nop
   14002e16d:	mov    rax,rdi
   14002e170:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e175:	add    rsp,0x30
   14002e179:	pop    rdi
   14002e17a:	ret    
   14002e17b:	int3   
   14002e17c:	int3   
   14002e17d:	int3   
   14002e17e:	int3   
   14002e17f:	int3   
   14002e180:	rex push rbp
   14002e182:	sub    rsp,0x20
   14002e186:	mov    rbp,rdx
   14002e189:	mov    rcx,QWORD PTR [rbp+0x40]
   14002e18d:	call   0x140001090
   14002e192:	add    rsp,0x20
   14002e196:	pop    rbp
   14002e197:	ret    
   14002e198:	mov    QWORD PTR [rsp+0x8],rbx
   14002e19d:	mov    QWORD PTR [rsp+0x10],rbp
   14002e1a2:	push   rsi
   14002e1a3:	push   rdi
   14002e1a4:	push   r12
   14002e1a6:	push   r13
   14002e1a8:	push   r14
   14002e1aa:	sub    rsp,0x20
   14002e1ae:	movsxd rax,DWORD PTR [r9]
   14002e1b1:	and    DWORD PTR [rsp+0x68],0x0
   14002e1b6:	mov    rbp,r9
   14002e1b9:	test   eax,eax
   14002e1bb:	mov    rsi,r8
   14002e1be:	mov    rdi,rdx
   14002e1c1:	mov    rbx,rcx
   14002e1c4:	jns    0x14002e1d1
   14002e1c6:	mov    ecx,0x80070057
   14002e1cb:	call   0x140001430
   14002e1d0:	int3   
   14002e1d1:	test   r8,r8
   14002e1d4:	je     0x14002e239
   14002e1d6:	cmp    WORD PTR [r8],0x0
   14002e1db:	je     0x14002e239
   14002e1dd:	mov    rcx,QWORD PTR [rcx]
   14002e1e0:	lea    r12,[rcx+rax*2]
   14002e1e4:	movsxd rax,DWORD PTR [rcx-0x10]
   14002e1e8:	lea    r13,[rcx+rax*2]
   14002e1ec:	cmp    r12,r13
   14002e1ef:	jae    0x14002e27f
   14002e1f5:	mov    rdx,r8
   14002e1f8:	mov    rcx,r12
   14002e1fb:	call   0x140049a90
   14002e200:	movsxd rcx,eax
   14002e203:	mov    r14,rax
   14002e206:	lea    rcx,[r12+rcx*2]
   14002e20a:	cmp    rcx,r13
   14002e20d:	jae    0x14002e27f
   14002e20f:	mov    rdx,rsi
   14002e212:	call   0x140049ae0
   14002e217:	mov    ecx,DWORD PTR [rbp+0x0]
   14002e21a:	mov    rdx,rdi
   14002e21d:	lea    r8d,[r14+rcx*1]
   14002e221:	mov    r9d,eax
   14002e224:	lea    ecx,[r8+rax*1+0x1]
   14002e229:	mov    DWORD PTR [rbp+0x0],ecx
   14002e22c:	mov    rcx,rbx
   14002e22f:	call   0x1400031b0
   14002e234:	jmp    0x14002e2cf
   14002e239:	mov    rcx,QWORD PTR [rcx]
   14002e23c:	cmp    eax,DWORD PTR [rcx-0x10]
   14002e23f:	jge    0x14002e27f
   14002e241:	mov    rcx,QWORD PTR [rcx-0x18]
   14002e245:	test   rcx,rcx
   14002e248:	je     0x14002e252
   14002e24a:	mov    rax,QWORD PTR [rcx]
   14002e24d:	call   QWORD PTR [rax+0x20]
   14002e250:	jmp    0x14002e254
   14002e252:	xor    eax,eax
   14002e254:	test   rax,rax
   14002e257:	jne    0x14002e267
   14002e259:	call   0x14002b874
   14002e25e:	mov    rcx,rax
   14002e261:	mov    rdx,QWORD PTR [rax]
   14002e264:	call   QWORD PTR [rdx+0x20]
   14002e267:	mov    rcx,QWORD PTR [rbx]
   14002e26a:	movsxd rdx,DWORD PTR [rbp+0x0]
   14002e26e:	mov    r8,rax
   14002e271:	lea    rdx,[rcx+rdx*2]
   14002e275:	mov    rcx,rdi
   14002e278:	call   0x14002e0e0
   14002e27d:	jmp    0x14002e2cf
   14002e27f:	or     DWORD PTR [rbp+0x0],0xffffffff
   14002e283:	mov    rax,QWORD PTR [rbx]
   14002e286:	mov    rcx,QWORD PTR [rax-0x18]
   14002e28a:	test   rcx,rcx
   14002e28d:	je     0x14002e29a
   14002e28f:	mov    rax,QWORD PTR [rcx]
   14002e292:	call   QWORD PTR [rax+0x20]
   14002e295:	mov    rcx,rax
   14002e298:	jmp    0x14002e29c
   14002e29a:	xor    ecx,ecx
   14002e29c:	test   rcx,rcx
   14002e29f:	jne    0x14002e2c2
   14002e2a1:	call   0x14002b874
   14002e2a6:	mov    rcx,rax
   14002e2a9:	mov    rdx,QWORD PTR [rax]
   14002e2ac:	call   QWORD PTR [rdx+0x20]
   14002e2af:	test   rax,rax
   14002e2b2:	mov    rcx,rax
   14002e2b5:	jne    0x14002e2c2
   14002e2b7:	mov    ecx,0x80004005
   14002e2bc:	call   0x140001430
   14002e2c1:	int3   
   14002e2c2:	mov    rax,QWORD PTR [rcx]
   14002e2c5:	call   QWORD PTR [rax+0x18]
   14002e2c8:	add    rax,0x18
   14002e2cc:	mov    QWORD PTR [rdi],rax
   14002e2cf:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e2d4:	mov    rbp,QWORD PTR [rsp+0x58]
   14002e2d9:	mov    rax,rdi
   14002e2dc:	add    rsp,0x20
   14002e2e0:	pop    r14
   14002e2e2:	pop    r13
   14002e2e4:	pop    r12
   14002e2e6:	pop    rdi
   14002e2e7:	pop    rsi
   14002e2e8:	ret    
   14002e2e9:	int3   
   14002e2ea:	int3   
   14002e2eb:	int3   
   14002e2ec:	lea    rax,[rip+0x3d005]        # 0x14006b2f8
   14002e2f3:	ret    
   14002e2f4:	rex push rbx
   14002e2f6:	sub    rsp,0x30
   14002e2fa:	test   r8d,r8d
   14002e2fd:	mov    rbx,rcx
   14002e300:	jne    0x14002e306
   14002e302:	xor    eax,eax
   14002e304:	jmp    0x14002e337
   14002e306:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e30a:	and    QWORD PTR [rsp+0x20],0x0
   14002e310:	lea    r9,[rsp+0x50]
   14002e315:	call   QWORD PTR [rip+0x35e85]        # 0x1400641a0
   14002e31b:	test   eax,eax
   14002e31d:	jne    0x14002e333
   14002e31f:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e323:	call   QWORD PTR [rip+0x362d7]        # 0x140064600
   14002e329:	mov    rdx,rbx
   14002e32c:	mov    ecx,eax
   14002e32e:	call   0x140040400
   14002e333:	mov    eax,DWORD PTR [rsp+0x50]
   14002e337:	add    rsp,0x30
   14002e33b:	pop    rbx
   14002e33c:	ret    
   14002e33d:	int3   
   14002e33e:	int3   
   14002e33f:	int3   
   14002e340:	test   r8d,r8d
   14002e343:	je     0x14002e3ab
   14002e345:	mov    rax,rsp
   14002e348:	mov    QWORD PTR [rax+0x8],rbx
   14002e34c:	mov    QWORD PTR [rax+0x10],rsi
   14002e350:	push   rdi
   14002e351:	sub    rsp,0x30
   14002e355:	and    QWORD PTR [rax-0x18],0x0
   14002e35a:	mov    rsi,rcx
   14002e35d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e361:	lea    r9,[rax+0x18]
   14002e365:	mov    edi,r8d
   14002e368:	call   QWORD PTR [rip+0x36252]        # 0x1400645c0
   14002e36e:	test   eax,eax
   14002e370:	jne    0x14002e386
   14002e372:	mov    rbx,QWORD PTR [rsi+0x18]
   14002e376:	call   QWORD PTR [rip+0x36284]        # 0x140064600
   14002e37c:	mov    rdx,rbx
   14002e37f:	mov    ecx,eax
   14002e381:	call   0x140040400
   14002e386:	cmp    DWORD PTR [rsp+0x50],edi
   14002e38a:	je     0x14002e39c
   14002e38c:	mov    r8,QWORD PTR [rsi+0x18]
   14002e390:	or     edx,0xffffffff
   14002e393:	lea    ecx,[rdx+0xe]
   14002e396:	call   0x140040388
   14002e39b:	int3   
   14002e39c:	mov    rbx,QWORD PTR [rsp+0x40]
   14002e3a1:	mov    rsi,QWORD PTR [rsp+0x48]
   14002e3a6:	add    rsp,0x30
   14002e3aa:	pop    rdi
   14002e3ab:	ret    
   14002e3ac:	rex push rbx
   14002e3ae:	sub    rsp,0x20
   14002e3b2:	mov    rbx,rcx
   14002e3b5:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e3b9:	mov    r9d,r8d
   14002e3bc:	lea    r8,[rsp+0x34]
   14002e3c1:	mov    QWORD PTR [rsp+0x30],rdx
   14002e3c6:	call   QWORD PTR [rip+0x35ddc]        # 0x1400641a8
   14002e3cc:	cmp    eax,0xffffffff
   14002e3cf:	mov    DWORD PTR [rsp+0x30],eax
   14002e3d3:	jne    0x14002e3f3
   14002e3d5:	call   QWORD PTR [rip+0x36225]        # 0x140064600
   14002e3db:	test   eax,eax
   14002e3dd:	je     0x14002e3f3
   14002e3df:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e3e3:	call   QWORD PTR [rip+0x36217]        # 0x140064600
   14002e3e9:	mov    rdx,rbx
   14002e3ec:	mov    ecx,eax
   14002e3ee:	call   0x140040400
   14002e3f3:	mov    rax,QWORD PTR [rsp+0x30]
   14002e3f8:	add    rsp,0x20
   14002e3fc:	pop    rbx
   14002e3fd:	ret    
   14002e3fe:	int3   
   14002e3ff:	int3   
   14002e400:	rex push rbx
   14002e402:	sub    rsp,0x20
   14002e406:	and    QWORD PTR [rsp+0x30],0x0
   14002e40c:	mov    rbx,rcx
   14002e40f:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e413:	lea    r8,[rsp+0x34]
   14002e418:	mov    r9d,0x1
   14002e41e:	xor    edx,edx
   14002e420:	call   QWORD PTR [rip+0x35d82]        # 0x1400641a8
   14002e426:	cmp    eax,0xffffffff
   14002e429:	mov    DWORD PTR [rsp+0x30],eax
   14002e42d:	jne    0x14002e44d
   14002e42f:	call   QWORD PTR [rip+0x361cb]        # 0x140064600
   14002e435:	test   eax,eax
   14002e437:	je     0x14002e44d
   14002e439:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e43d:	call   QWORD PTR [rip+0x361bd]        # 0x140064600
   14002e443:	mov    rdx,rbx
   14002e446:	mov    ecx,eax
   14002e448:	call   0x140040400
   14002e44d:	mov    rax,QWORD PTR [rsp+0x30]
   14002e452:	add    rsp,0x20
   14002e456:	pop    rbx
   14002e457:	ret    
   14002e458:	rex push rbx
   14002e45a:	sub    rsp,0x20
   14002e45e:	mov    rbx,rcx
   14002e461:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e465:	cmp    rcx,0xffffffffffffffff
   14002e469:	je     0x14002e489
   14002e46b:	call   QWORD PTR [rip+0x35d3f]        # 0x1400641b0
   14002e471:	test   eax,eax
   14002e473:	jne    0x14002e489
   14002e475:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e479:	call   QWORD PTR [rip+0x36181]        # 0x140064600
   14002e47f:	mov    rdx,rbx
   14002e482:	mov    ecx,eax
   14002e484:	call   0x140040400
   14002e489:	add    rsp,0x20
   14002e48d:	pop    rbx
   14002e48e:	ret    
   14002e48f:	int3   
   14002e490:	rex push rbx
   14002e492:	sub    rsp,0x30
   14002e496:	mov    rax,r8
   14002e499:	mov    r9,r8
   14002e49c:	mov    rbx,rcx
   14002e49f:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e4a3:	mov    r8,rdx
   14002e4a6:	shr    rax,0x20
   14002e4aa:	shr    r8,0x20
   14002e4ae:	mov    DWORD PTR [rsp+0x20],eax
   14002e4b2:	call   QWORD PTR [rip+0x35d00]        # 0x1400641b8
   14002e4b8:	test   eax,eax
   14002e4ba:	jne    0x14002e4d0
   14002e4bc:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e4c0:	call   QWORD PTR [rip+0x3613a]        # 0x140064600
   14002e4c6:	mov    rdx,rbx
   14002e4c9:	mov    ecx,eax
   14002e4cb:	call   0x140040400
   14002e4d0:	add    rsp,0x30
   14002e4d4:	pop    rbx
   14002e4d5:	ret    
   14002e4d6:	int3   
   14002e4d7:	int3   
   14002e4d8:	rex push rbx
   14002e4da:	sub    rsp,0x30
   14002e4de:	mov    rax,r8
   14002e4e1:	mov    r9,r8
   14002e4e4:	mov    rbx,rcx
   14002e4e7:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e4eb:	mov    r8,rdx
   14002e4ee:	shr    rax,0x20
   14002e4f2:	shr    r8,0x20
   14002e4f6:	mov    DWORD PTR [rsp+0x20],eax
   14002e4fa:	call   QWORD PTR [rip+0x35cc0]        # 0x1400641c0
   14002e500:	test   eax,eax
   14002e502:	jne    0x14002e518
   14002e504:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e508:	call   QWORD PTR [rip+0x360f2]        # 0x140064600
   14002e50e:	mov    rdx,rbx
   14002e511:	mov    ecx,eax
   14002e513:	call   0x140040400
   14002e518:	add    rsp,0x30
   14002e51c:	pop    rbx
   14002e51d:	ret    
   14002e51e:	int3   
   14002e51f:	int3   
   14002e520:	rex push rbx
   14002e522:	sub    rsp,0x20
   14002e526:	mov    rax,QWORD PTR [rcx]
   14002e529:	xor    r8d,r8d
   14002e52c:	mov    rbx,rcx
   14002e52f:	call   QWORD PTR [rax+0x50]
   14002e532:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e536:	call   QWORD PTR [rip+0x35c8c]        # 0x1400641c8
   14002e53c:	test   eax,eax
   14002e53e:	jne    0x14002e554
   14002e540:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e544:	call   QWORD PTR [rip+0x360b6]        # 0x140064600
   14002e54a:	mov    rdx,rbx
   14002e54d:	mov    ecx,eax
   14002e54f:	call   0x140040400
   14002e554:	add    rsp,0x20
   14002e558:	pop    rbx
   14002e559:	ret    
   14002e55a:	int3   
   14002e55b:	int3   
   14002e55c:	rex push rbx
   14002e55e:	sub    rsp,0x20
   14002e562:	mov    rbx,rcx
   14002e565:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e569:	lea    rdx,[rsp+0x34]
   14002e56e:	call   QWORD PTR [rip+0x35c5c]        # 0x1400641d0
   14002e574:	cmp    eax,0xffffffff
   14002e577:	mov    DWORD PTR [rsp+0x30],eax
   14002e57b:	jne    0x14002e59b
   14002e57d:	call   QWORD PTR [rip+0x3607d]        # 0x140064600
   14002e583:	test   eax,eax
   14002e585:	je     0x14002e59b
   14002e587:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e58b:	call   QWORD PTR [rip+0x3606f]        # 0x140064600
   14002e591:	mov    rdx,rbx
   14002e594:	mov    ecx,eax
   14002e596:	call   0x140040400
   14002e59b:	mov    rax,QWORD PTR [rsp+0x30]
   14002e5a0:	add    rsp,0x20
   14002e5a4:	pop    rbx
   14002e5a5:	ret    
   14002e5a6:	int3   
   14002e5a7:	int3   
   14002e5a8:	rex push rbx
   14002e5aa:	push   rbp
   14002e5ab:	push   rsi
   14002e5ac:	push   rdi
   14002e5ad:	push   r12
   14002e5af:	sub    rsp,0x240
   14002e5b6:	mov    rax,QWORD PTR [rip+0x587b3]        # 0x140086d70
   14002e5bd:	xor    rax,rsp
   14002e5c0:	mov    QWORD PTR [rsp+0x230],rax
   14002e5c8:	xor    ebx,ebx
   14002e5ca:	mov    ebp,r8d
   14002e5cd:	mov    rsi,rdx
   14002e5d0:	cmp    rdx,rbx
   14002e5d3:	mov    r12,rcx
   14002e5d6:	mov    rdi,rdx
   14002e5d9:	jne    0x14002e5e5
   14002e5db:	lea    rdi,[rsp+0x20]
   14002e5e0:	mov    ebp,0x104
   14002e5e5:	movzx  r8d,bp
   14002e5e9:	mov    rdx,rdi
   14002e5ec:	call   QWORD PTR [rip+0x365e6]        # 0x140064bd8
   14002e5f2:	cmp    ax,bx
   14002e5f5:	je     0x14002e607
   14002e5f7:	mov    r8d,ebp
   14002e5fa:	mov    rdx,rsi
   14002e5fd:	mov    rcx,r12
   14002e600:	call   0x14003fb64
   14002e605:	jmp    0x14002e61a
   14002e607:	cmp    rsi,rbx
   14002e60a:	jne    0x14002e618
   14002e60c:	mov    rcx,rdi
   14002e60f:	call   QWORD PTR [rip+0x35e6b]        # 0x140064480
   14002e615:	lea    ebx,[rax+0x1]
   14002e618:	mov    eax,ebx
   14002e61a:	mov    rcx,QWORD PTR [rsp+0x230]
   14002e622:	xor    rcx,rsp
   14002e625:	call   0x140046470
   14002e62a:	add    rsp,0x240
   14002e631:	pop    r12
   14002e633:	pop    rdi
   14002e634:	pop    rsi
   14002e635:	pop    rbp
   14002e636:	pop    rbx
   14002e637:	ret    
   14002e638:	mov    QWORD PTR [rsp+0x8],rbx
   14002e63d:	push   rdi
   14002e63e:	sub    rsp,0x20
   14002e642:	mov    rbx,rcx
   14002e645:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e649:	xor    edi,edi
   14002e64b:	cmp    rcx,0xffffffffffffffff
   14002e64f:	je     0x14002e65d
   14002e651:	call   QWORD PTR [rip+0x35f71]        # 0x1400645c8
   14002e657:	test   eax,eax
   14002e659:	sete   dil
   14002e65d:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002e662:	and    DWORD PTR [rbx+0x10],0x0
   14002e666:	lea    rcx,[rbx+0x18]
   14002e66a:	call   0x140002cb0
   14002e66f:	test   edi,edi
   14002e671:	je     0x14002e687
   14002e673:	mov    rbx,QWORD PTR [rbx+0x18]
   14002e677:	call   QWORD PTR [rip+0x35f83]        # 0x140064600
   14002e67d:	mov    rdx,rbx
   14002e680:	mov    ecx,eax
   14002e682:	call   0x140040400
   14002e687:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e68c:	add    rsp,0x20
   14002e690:	pop    rdi
   14002e691:	ret    
   14002e692:	int3   
   14002e693:	int3   
   14002e694:	rex push rbx
   14002e696:	sub    rsp,0x20
   14002e69a:	mov    rbx,rcx
   14002e69d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e6a1:	cmp    rcx,0xffffffffffffffff
   14002e6a5:	je     0x14002e6b2
   14002e6a7:	call   QWORD PTR [rip+0x35f1b]        # 0x1400645c8
   14002e6ad:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002e6b2:	lea    rcx,[rbx+0x18]
   14002e6b6:	add    rsp,0x20
   14002e6ba:	pop    rbx
   14002e6bb:	jmp    0x140002cb0
   14002e6c0:	rex push rbx
   14002e6c2:	sub    rsp,0x20
   14002e6c6:	lea    rax,[rip+0x3cc6b]        # 0x14006b338
   14002e6cd:	mov    rbx,rcx
   14002e6d0:	mov    QWORD PTR [rcx],rax
   14002e6d3:	call   0x14002b874
   14002e6d8:	test   rax,rax
   14002e6db:	mov    rcx,rax
   14002e6de:	jne    0x14002e6eb
   14002e6e0:	mov    ecx,0x80004005
   14002e6e5:	call   0x140001430
   14002e6ea:	int3   
   14002e6eb:	mov    rax,QWORD PTR [rax]
   14002e6ee:	call   QWORD PTR [rax+0x18]
   14002e6f1:	add    rax,0x18
   14002e6f5:	mov    QWORD PTR [rbx+0x18],rax
   14002e6f9:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002e6fe:	and    DWORD PTR [rbx+0x10],0x0
   14002e702:	mov    rax,rbx
   14002e705:	add    rsp,0x20
   14002e709:	pop    rbx
   14002e70a:	ret    
   14002e70b:	int3   
   14002e70c:	rex push rdi
   14002e70e:	sub    rsp,0x50
   14002e712:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14002e71b:	mov    QWORD PTR [rsp+0x70],rbx
   14002e720:	mov    QWORD PTR [rsp+0x78],rsi
   14002e725:	mov    rsi,rcx
   14002e728:	mov    ecx,0x20
   14002e72d:	call   0x14001ac0c
   14002e732:	mov    QWORD PTR [rsp+0x68],rax
   14002e737:	test   rax,rax
   14002e73a:	je     0x14002e749
   14002e73c:	mov    rcx,rax
   14002e73f:	call   0x14002e6c0
   14002e744:	mov    rdi,rax
   14002e747:	jmp    0x14002e74b
   14002e749:	xor    edi,edi
   14002e74b:	call   QWORD PTR [rip+0x35e47]        # 0x140064598
   14002e751:	mov    rbx,rax
   14002e754:	call   QWORD PTR [rip+0x35e3e]        # 0x140064598
   14002e75a:	mov    rcx,rax
   14002e75d:	mov    DWORD PTR [rsp+0x30],0x2
   14002e765:	and    DWORD PTR [rsp+0x28],0x0
   14002e76a:	and    DWORD PTR [rsp+0x20],0x0
   14002e76f:	lea    r9,[rsp+0x60]
   14002e774:	mov    r8,rbx
   14002e777:	mov    rdx,QWORD PTR [rsi+0x8]
   14002e77b:	call   QWORD PTR [rip+0x35a57]        # 0x1400641d8
   14002e781:	test   eax,eax
   14002e783:	jne    0x14002e7ac
   14002e785:	test   rdi,rdi
   14002e788:	je     0x14002e798
   14002e78a:	mov    rax,QWORD PTR [rdi]
   14002e78d:	mov    edx,0x1
   14002e792:	mov    rcx,rdi
   14002e795:	call   QWORD PTR [rax+0x8]
   14002e798:	mov    rbx,QWORD PTR [rsi+0x18]
   14002e79c:	call   QWORD PTR [rip+0x35e5e]        # 0x140064600
   14002e7a2:	mov    ecx,eax
   14002e7a4:	mov    rdx,rbx
   14002e7a7:	call   0x140040400
   14002e7ac:	mov    rax,QWORD PTR [rsp+0x60]
   14002e7b1:	mov    QWORD PTR [rdi+0x8],rax
   14002e7b5:	mov    eax,DWORD PTR [rsi+0x10]
   14002e7b8:	mov    DWORD PTR [rdi+0x10],eax
   14002e7bb:	mov    rax,rdi
   14002e7be:	mov    rbx,QWORD PTR [rsp+0x70]
   14002e7c3:	mov    rsi,QWORD PTR [rsp+0x78]
   14002e7c8:	add    rsp,0x50
   14002e7cc:	pop    rdi
   14002e7cd:	ret    
   14002e7ce:	int3   
   14002e7cf:	int3   
   14002e7d0:	int3   
   14002e7d1:	int3   
   14002e7d2:	int3   
   14002e7d3:	int3   
   14002e7d4:	int3   
   14002e7d5:	int3   
   14002e7d6:	int3   
   14002e7d7:	int3   
   14002e7d8:	int3   
   14002e7d9:	int3   
   14002e7da:	int3   
   14002e7db:	int3   
   14002e7dc:	rex push rbp
   14002e7de:	sub    rsp,0x20
   14002e7e2:	mov    rbp,rdx
   14002e7e5:	mov    rcx,QWORD PTR [rbp+0x68]
   14002e7e9:	call   0x140001040
   14002e7ee:	add    rsp,0x20
   14002e7f2:	pop    rbp
   14002e7f3:	ret    
   14002e7f4:	mov    QWORD PTR [rsp+0x8],rbx
   14002e7f9:	mov    QWORD PTR [rsp+0x10],rbp
   14002e7fe:	mov    QWORD PTR [rsp+0x18],rsi
   14002e803:	push   rdi
   14002e804:	sub    rsp,0x20
   14002e808:	mov    rax,QWORD PTR [rdx]
   14002e80b:	mov    r8d,0x1
   14002e811:	mov    ebp,0x104
   14002e816:	sub    r8d,DWORD PTR [rax-0x8]
   14002e81a:	mov    eax,DWORD PTR [rax-0xc]
   14002e81d:	mov    rbx,rdx
   14002e820:	sub    eax,ebp
   14002e822:	mov    rsi,rcx
   14002e825:	or     r8d,eax
   14002e828:	jge    0x14002e834
   14002e82a:	mov    edx,ebp
   14002e82c:	mov    rcx,rbx
   14002e82f:	call   0x140002d40
   14002e834:	mov    rdi,QWORD PTR [rbx]
   14002e837:	mov    r8,rbp
   14002e83a:	xor    edx,edx
   14002e83c:	mov    rcx,rdi
   14002e83f:	call   0x140047720
   14002e844:	or     r9,0xffffffffffffffff
   14002e848:	mov    r8,rsi
   14002e84b:	mov    rdx,rbp
   14002e84e:	mov    rcx,rdi
   14002e851:	call   0x140047200
   14002e856:	test   eax,eax
   14002e858:	je     0x14002e880
   14002e85a:	cmp    eax,0xc
   14002e85d:	je     0x14002e87a
   14002e85f:	cmp    eax,0x16
   14002e862:	je     0x14002e874
   14002e864:	cmp    eax,0x22
   14002e867:	je     0x14002e874
   14002e869:	cmp    eax,0x50
   14002e86c:	je     0x14002e880
   14002e86e:	call   0x1400208f8
   14002e873:	int3   
   14002e874:	call   0x1400208f8
   14002e879:	int3   
   14002e87a:	call   0x1400208b0
   14002e87f:	int3   
   14002e880:	mov    rcx,rdi
   14002e883:	call   QWORD PTR [rip+0x35eff]        # 0x140064788
   14002e889:	mov    rcx,QWORD PTR [rbx]
   14002e88c:	test   rcx,rcx
   14002e88f:	jne    0x14002e895
   14002e891:	xor    eax,eax
   14002e893:	jmp    0x14002e89e
   14002e895:	call   0x140048610
   14002e89a:	test   eax,eax
   14002e89c:	js     0x14002e8c9
   14002e89e:	mov    rcx,QWORD PTR [rbx]
   14002e8a1:	cmp    eax,DWORD PTR [rcx-0xc]
   14002e8a4:	jg     0x14002e8c9
   14002e8a6:	mov    rbp,QWORD PTR [rsp+0x38]
   14002e8ab:	mov    rsi,QWORD PTR [rsp+0x40]
   14002e8b0:	mov    DWORD PTR [rcx-0x10],eax
   14002e8b3:	movsxd rcx,eax
   14002e8b6:	mov    rax,QWORD PTR [rbx]
   14002e8b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e8be:	and    WORD PTR [rax+rcx*2],0x0
   14002e8c3:	add    rsp,0x20
   14002e8c7:	pop    rdi
   14002e8c8:	ret    
   14002e8c9:	mov    ecx,0x80070057
   14002e8ce:	call   0x140001430
   14002e8d3:	int3   
   14002e8d4:	mov    QWORD PTR [rsp+0x8],rbx
   14002e8d9:	push   rdi
   14002e8da:	sub    rsp,0x20
   14002e8de:	mov    edi,edx
   14002e8e0:	mov    rdx,QWORD PTR [rcx+0x18]
   14002e8e4:	lea    rax,[rip+0x3cb25]        # 0x14006b410
   14002e8eb:	sub    rdx,0x18
   14002e8ef:	mov    QWORD PTR [rcx],rax
   14002e8f2:	or     eax,0xffffffff
   14002e8f5:	mov    rbx,rcx
   14002e8f8:	lock xadd DWORD PTR [rdx+0x10],eax
   14002e8fd:	add    eax,0xffffffff
   14002e900:	test   eax,eax
   14002e902:	jg     0x14002e90d
   14002e904:	mov    rcx,QWORD PTR [rdx]
   14002e907:	mov    rax,QWORD PTR [rcx]
   14002e90a:	call   QWORD PTR [rax+0x8]
   14002e90d:	test   dil,0x1
   14002e911:	je     0x14002e91b
   14002e913:	mov    rcx,rbx
   14002e916:	call   0x14001ac50
   14002e91b:	mov    rax,rbx
   14002e91e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e923:	add    rsp,0x20
   14002e927:	pop    rdi
   14002e928:	ret    
   14002e929:	int3   
   14002e92a:	int3   
   14002e92b:	int3   
   14002e92c:	rex push rbx
   14002e92e:	sub    rsp,0x460
   14002e935:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14002e93e:	mov    rax,QWORD PTR [rip+0x5842b]        # 0x140086d70
   14002e945:	xor    rax,rsp
   14002e948:	mov    QWORD PTR [rsp+0x450],rax
   14002e950:	mov    rbx,rcx
   14002e953:	mov    QWORD PTR [rsp+0x38],rcx
   14002e958:	lea    rax,[rip+0x3c9d9]        # 0x14006b338
   14002e95f:	mov    QWORD PTR [rcx],rax
   14002e962:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   14002e967:	je     0x14002e975
   14002e969:	cmp    DWORD PTR [rcx+0x10],0x0
   14002e96d:	je     0x14002e975
   14002e96f:	call   0x14002e638
   14002e974:	nop
   14002e975:	jmp    0x14002e97c
   14002e977:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e97c:	mov    rdx,QWORD PTR [rbx+0x18]
   14002e980:	sub    rdx,0x18
   14002e984:	or     eax,0xffffffff
   14002e987:	lock xadd DWORD PTR [rdx+0x10],eax
   14002e98c:	add    eax,0xffffffff
   14002e98f:	test   eax,eax
   14002e991:	jg     0x14002e99c
   14002e993:	mov    rcx,QWORD PTR [rdx]
   14002e996:	mov    rax,QWORD PTR [rcx]
   14002e999:	call   QWORD PTR [rax+0x8]
   14002e99c:	mov    rcx,QWORD PTR [rsp+0x450]
   14002e9a4:	xor    rcx,rsp
   14002e9a7:	call   0x140046470
   14002e9ac:	add    rsp,0x460
   14002e9b3:	pop    rbx
   14002e9b4:	ret    
   14002e9b5:	int3   
   14002e9b6:	int3   
   14002e9b7:	int3   
   14002e9b8:	int3   
   14002e9b9:	int3   
   14002e9ba:	int3   
   14002e9bb:	int3   
   14002e9bc:	rex push rbp
   14002e9be:	sub    rsp,0x20
   14002e9c2:	mov    rbp,rdx
   14002e9c5:	mov    rcx,QWORD PTR [rbp+0x38]
   14002e9c9:	add    rcx,0x18
   14002e9cd:	call   0x1400010c0
   14002e9d2:	add    rsp,0x20
   14002e9d6:	pop    rbp
   14002e9d7:	ret    
   14002e9d8:	int3   
   14002e9d9:	int3   
   14002e9da:	int3   
   14002e9db:	int3   
   14002e9dc:	mov    QWORD PTR [rsp+0x10],rdx
   14002e9e1:	push   rbx
   14002e9e2:	push   rbp
   14002e9e3:	sub    rsp,0x38
   14002e9e7:	mov    rbp,rdx
   14002e9ea:	call   0x14002b874
   14002e9ef:	mov    r11,rax
   14002e9f2:	xor    ecx,ecx
   14002e9f4:	test   rax,rax
   14002e9f7:	setne  cl
   14002e9fa:	test   ecx,ecx
   14002e9fc:	jne    0x14002ea09
   14002e9fe:	mov    ecx,0x80004005
   14002ea03:	call   0x140001430
   14002ea08:	int3   
   14002ea09:	mov    rax,QWORD PTR [rax]
   14002ea0c:	mov    rcx,r11
   14002ea0f:	call   QWORD PTR [rax+0x18]
   14002ea12:	add    rax,0x18
   14002ea16:	mov    QWORD PTR [rbp+0x30],rax
   14002ea1a:	mov    rcx,QWORD PTR [rbp+0x40]
   14002ea1e:	mov    rax,QWORD PTR [rcx]
   14002ea21:	xor    r9d,r9d
   14002ea24:	mov    r8d,0x200
   14002ea2a:	lea    rdx,[rbp+0x50]
   14002ea2e:	call   QWORD PTR [rax+0x18]
   14002ea31:	test   eax,eax
   14002ea33:	je     0x14002ea66
   14002ea35:	lea    rax,[rbp+0x50]
   14002ea39:	mov    QWORD PTR [rsp+0x28],rax
   14002ea3e:	mov    DWORD PTR [rsp+0x20],0x6f
   14002ea46:	lea    r9,[rip+0x3ca1b]        # 0x14006b468
   14002ea4d:	lea    r8,[rip+0x39654]        # 0x1400680a8
   14002ea54:	lea    rdx,[rip+0x3962d]        # 0x140068088
   14002ea5b:	lea    rcx,[rbp+0x30]
   14002ea5f:	call   0x140004180
   14002ea64:	jmp    0x14002ea8c
   14002ea66:	mov    DWORD PTR [rsp+0x20],0x6f
   14002ea6e:	lea    r9,[rip+0x3c9f3]        # 0x14006b468
   14002ea75:	lea    r8,[rip+0x3962c]        # 0x1400680a8
   14002ea7c:	lea    rdx,[rip+0x395ed]        # 0x140068070
   14002ea83:	lea    rcx,[rbp+0x30]
   14002ea87:	call   0x140004180
   14002ea8c:	xor    r8d,r8d
   14002ea8f:	xor    edx,edx
   14002ea91:	mov    rbx,QWORD PTR [rbp+0x30]
   14002ea95:	mov    rcx,rbx
   14002ea98:	call   0x14001dd9c
   14002ea9d:	nop
   14002ea9e:	lea    rdx,[rbx-0x18]
   14002eaa2:	or     eax,0xffffffff
   14002eaa5:	lock xadd DWORD PTR [rdx+0x10],eax
   14002eaaa:	add    eax,0xffffffff
   14002eaad:	test   eax,eax
   14002eaaf:	jg     0x14002eaba
   14002eab1:	mov    rcx,QWORD PTR [rdx]
   14002eab4:	mov    rax,QWORD PTR [rcx]
   14002eab7:	call   QWORD PTR [rax+0x8]
   14002eaba:	mov    rcx,QWORD PTR [rbp+0x40]
   14002eabe:	mov    rax,QWORD PTR [rcx]
   14002eac1:	mov    edx,0x1
   14002eac6:	call   QWORD PTR [rax+0x8]
   14002eac9:	nop
   14002eaca:	lea    rax,[rip+0xfffffffffffffea6]        # 0x14002e977
   14002ead1:	jmp    0x14002ead3
   14002ead3:	add    rsp,0x38
   14002ead7:	pop    rbp
   14002ead8:	pop    rbx
   14002ead9:	ret    
   14002eada:	int3   
   14002eadb:	int3   
   14002eadc:	rex push rbp
   14002eade:	sub    rsp,0x20
   14002eae2:	mov    rbp,rdx
   14002eae5:	lea    rcx,[rbp+0x30]
   14002eae9:	call   0x1400010c0
   14002eaee:	add    rsp,0x20
   14002eaf2:	pop    rbp
   14002eaf3:	ret    
   14002eaf4:	mov    QWORD PTR [rsp+0x8],rbx
   14002eaf9:	push   rdi
   14002eafa:	sub    rsp,0x20
   14002eafe:	mov    ebx,edx
   14002eb00:	mov    rdi,rcx
   14002eb03:	call   0x14002e92c
   14002eb08:	test   bl,0x1
   14002eb0b:	je     0x14002eb15
   14002eb0d:	mov    rcx,rdi
   14002eb10:	call   0x14001ac50
   14002eb15:	mov    rax,rdi
   14002eb18:	mov    rbx,QWORD PTR [rsp+0x30]
   14002eb1d:	add    rsp,0x20
   14002eb21:	pop    rdi
   14002eb22:	ret    
   14002eb23:	int3   
   14002eb24:	mov    QWORD PTR [rsp+0x8],rbx
   14002eb29:	mov    QWORD PTR [rsp+0x10],rsi
   14002eb2e:	push   rdi
   14002eb2f:	sub    rsp,0x20
   14002eb33:	xor    ebx,ebx
   14002eb35:	mov    rdi,rdx
   14002eb38:	mov    rsi,rcx
   14002eb3b:	cmp    rcx,rbx
   14002eb3e:	je     0x14002eb71
   14002eb40:	call   QWORD PTR [rip+0x35aba]        # 0x140064600
   14002eb46:	mov    ecx,eax
   14002eb48:	mov    DWORD PTR [rsi+0x14],eax
   14002eb4b:	call   0x14003ff14
   14002eb50:	cmp    rdi,rbx
   14002eb53:	mov    DWORD PTR [rsi+0x10],eax
   14002eb56:	je     0x14002eb62
   14002eb58:	mov    rcx,rdi
   14002eb5b:	call   0x140048610
   14002eb60:	mov    ebx,eax
   14002eb62:	lea    rcx,[rsi+0x18]
   14002eb66:	mov    r8d,ebx
   14002eb69:	mov    rdx,rdi
   14002eb6c:	call   0x1400037d0
   14002eb71:	mov    rbx,QWORD PTR [rsp+0x30]
   14002eb76:	mov    rsi,QWORD PTR [rsp+0x38]
   14002eb7b:	add    rsp,0x20
   14002eb7f:	pop    rdi
   14002eb80:	ret    
   14002eb81:	int3   
   14002eb82:	int3   
   14002eb83:	int3   
   14002eb84:	mov    rax,rsp
   14002eb87:	push   rbp
   14002eb88:	push   rsi
   14002eb89:	push   rdi
   14002eb8a:	push   r12
   14002eb8c:	push   r13
   14002eb8e:	sub    rsp,0x2d0
   14002eb95:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14002eb9e:	mov    QWORD PTR [rax+0x20],rbx
   14002eba2:	mov    rax,QWORD PTR [rip+0x581c7]        # 0x140086d70
   14002eba9:	xor    rax,rsp
   14002ebac:	mov    QWORD PTR [rsp+0x2c0],rax
   14002ebb4:	mov    rbp,r8
   14002ebb7:	mov    rsi,rdx
   14002ebba:	mov    r13,rcx
   14002ebbd:	xor    edi,edi
   14002ebbf:	mov    eax,edi
   14002ebc1:	cmp    rcx,rdi
   14002ebc4:	setne  al
   14002ebc7:	cmp    eax,edi
   14002ebc9:	jne    0x14002ebd1
   14002ebcb:	call   0x1400208f8
   14002ebd0:	int3   
   14002ebd1:	mov    eax,edi
   14002ebd3:	cmp    rdx,rdi
   14002ebd6:	setne  al
   14002ebd9:	cmp    eax,edi
   14002ebdb:	jne    0x14002ebe3
   14002ebdd:	call   0x1400208f8
   14002ebe2:	int3   
   14002ebe3:	lea    r9,[rsp+0x48]
   14002ebe8:	mov    r8,rcx
   14002ebeb:	mov    r12d,0x104
   14002ebf1:	mov    edx,r12d
   14002ebf4:	mov    rcx,rsi
   14002ebf7:	call   QWORD PTR [rip+0x355eb]        # 0x1400641e8
   14002ebfd:	cmp    eax,edi
   14002ebff:	jne    0x14002ec4f
   14002ec01:	or     r9,0xffffffffffffffff
   14002ec05:	mov    r8,rsi
   14002ec08:	mov    rdx,r12
   14002ec0b:	mov    rcx,r13
   14002ec0e:	call   0x140047200
   14002ec13:	cmp    eax,edi
   14002ec15:	je     0x14002ec3d
   14002ec17:	cmp    eax,0xc
   14002ec1a:	je     0x14002ec37
   14002ec1c:	cmp    eax,0x16
   14002ec1f:	je     0x14002ec31
   14002ec21:	cmp    eax,0x22
   14002ec24:	je     0x14002ec31
   14002ec26:	cmp    eax,0x50
   14002ec29:	je     0x14002ec3d
   14002ec2b:	call   0x1400208f8
   14002ec30:	int3   
   14002ec31:	call   0x1400208f8
   14002ec36:	int3   
   14002ec37:	call   0x1400208b0
   14002ec3c:	int3   
   14002ec3d:	mov    rdx,rsi
   14002ec40:	mov    rcx,rbp
   14002ec43:	call   0x14002eb24
   14002ec48:	xor    eax,eax
   14002ec4a:	jmp    0x14002ee90
   14002ec4f:	cmp    eax,r12d
   14002ec52:	jb     0x14002ec85
   14002ec54:	cmp    rbp,rdi
   14002ec57:	je     0x14002ec7e
   14002ec59:	mov    DWORD PTR [rbp+0x10],0x3
   14002ec60:	cmp    rsi,rdi
   14002ec63:	je     0x14002ec6f
   14002ec65:	mov    rcx,rsi
   14002ec68:	call   0x140048610
   14002ec6d:	mov    edi,eax
   14002ec6f:	mov    r8d,edi
   14002ec72:	mov    rdx,rsi
   14002ec75:	lea    rcx,[rbp+0x18]
   14002ec79:	call   0x1400037d0
   14002ec7e:	xor    eax,eax
   14002ec80:	jmp    0x14002ee90
   14002ec85:	call   0x14002b874
   14002ec8a:	mov    r11,rax
   14002ec8d:	mov    ecx,edi
   14002ec8f:	cmp    rax,rdi
   14002ec92:	setne  cl
   14002ec95:	cmp    ecx,edi
   14002ec97:	jne    0x14002eca4
   14002ec99:	mov    ecx,0x80004005
   14002ec9e:	call   0x140001430
   14002eca3:	int3   
   14002eca4:	mov    rax,QWORD PTR [rax]
   14002eca7:	mov    rcx,r11
   14002ecaa:	call   QWORD PTR [rax+0x18]
   14002ecad:	add    rax,0x18
   14002ecb1:	mov    QWORD PTR [rsp+0x50],rax
   14002ecb6:	lea    rdx,[rsp+0x50]
   14002ecbb:	mov    rcx,r13
   14002ecbe:	call   0x14002e7f4
   14002ecc3:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ecc8:	mov    rcx,rbx
   14002eccb:	call   QWORD PTR [rip+0x35ac7]        # 0x140064798
   14002ecd1:	cmp    eax,edi
   14002ecd3:	jne    0x14002ee6f
   14002ecd9:	mov    DWORD PTR [rsp+0x38],edi
   14002ecdd:	mov    QWORD PTR [rsp+0x30],rdi
   14002ece2:	lea    rax,[rsp+0x40]
   14002ece7:	mov    QWORD PTR [rsp+0x28],rax
   14002ecec:	lea    rax,[rsp+0x58]
   14002ecf1:	mov    QWORD PTR [rsp+0x20],rax
   14002ecf6:	xor    r9d,r9d
   14002ecf9:	xor    r8d,r8d
   14002ecfc:	xor    edx,edx
   14002ecfe:	mov    rcx,rbx
   14002ed01:	call   QWORD PTR [rip+0x354d9]        # 0x1400641e0
   14002ed07:	cmp    eax,edi
   14002ed09:	jne    0x14002ed3a
   14002ed0b:	mov    rdx,rsi
   14002ed0e:	mov    rcx,rbp
   14002ed11:	call   0x14002eb24
   14002ed16:	nop
   14002ed17:	lea    rdx,[rbx-0x18]
   14002ed1b:	or     eax,0xffffffff
   14002ed1e:	lock xadd DWORD PTR [rdx+0x10],eax
   14002ed23:	add    eax,0xffffffff
   14002ed26:	cmp    eax,edi
   14002ed28:	jg     0x14002ed33
   14002ed2a:	mov    rcx,QWORD PTR [rdx]
   14002ed2d:	mov    rax,QWORD PTR [rcx]
   14002ed30:	call   QWORD PTR [rax+0x8]
   14002ed33:	xor    eax,eax
   14002ed35:	jmp    0x14002ee90
   14002ed3a:	mov    eax,DWORD PTR [rsp+0x40]
   14002ed3e:	test   al,0x2
   14002ed40:	jne    0x14002ed4f
   14002ed42:	mov    rcx,r13
   14002ed45:	call   QWORD PTR [rip+0x35dd5]        # 0x140064b20
   14002ed4b:	mov    eax,DWORD PTR [rsp+0x40]
   14002ed4f:	test   al,0x4
   14002ed51:	jne    0x14002ee6f
   14002ed57:	lea    rdx,[rsp+0x70]
   14002ed5c:	mov    rcx,rsi
   14002ed5f:	call   QWORD PTR [rip+0x357c3]        # 0x140064528
   14002ed65:	cmp    rax,0xffffffffffffffff
   14002ed69:	je     0x14002ee6f
   14002ed6f:	mov    rcx,rax
   14002ed72:	call   QWORD PTR [rip+0x357c0]        # 0x140064538
   14002ed78:	cmp    QWORD PTR [rsp+0x48],rdi
   14002ed7d:	je     0x14002ee43
   14002ed83:	cmp    QWORD PTR [rsp+0x48],r13
   14002ed88:	jbe    0x14002ee43
   14002ed8e:	lea    rcx,[rsp+0x9c]
   14002ed96:	call   QWORD PTR [rip+0x356e4]        # 0x140064480
   14002ed9c:	mov    rcx,QWORD PTR [rsp+0x48]
   14002eda1:	mov    rdx,rcx
   14002eda4:	sub    rdx,r13
   14002eda7:	sar    rdx,1
   14002edaa:	add    eax,edx
   14002edac:	cmp    eax,r12d
   14002edaf:	jge    0x14002edf6
   14002edb1:	sub    r12d,edx
   14002edb4:	movsxd rdx,r12d
   14002edb7:	lea    r8,[rsp+0x9c]
   14002edbf:	call   0x140047080
   14002edc4:	cmp    eax,edi
   14002edc6:	je     0x14002ee6f
   14002edcc:	cmp    eax,0xc
   14002edcf:	je     0x14002edf0
   14002edd1:	cmp    eax,0x16
   14002edd4:	je     0x14002edea
   14002edd6:	cmp    eax,0x22
   14002edd9:	je     0x14002edea
   14002eddb:	cmp    eax,0x50
   14002edde:	je     0x14002ee6f
   14002ede4:	call   0x1400208f8
   14002ede9:	int3   
   14002edea:	call   0x1400208f8
   14002edef:	int3   
   14002edf0:	call   0x1400208b0
   14002edf5:	int3   
   14002edf6:	cmp    rbp,rdi
   14002edf9:	je     0x14002ee23
   14002edfb:	mov    DWORD PTR [rbp+0x10],0x3
   14002ee02:	cmp    rsi,rdi
   14002ee05:	jne    0x14002ee0b
   14002ee07:	mov    eax,edi
   14002ee09:	jmp    0x14002ee13
   14002ee0b:	mov    rcx,rsi
   14002ee0e:	call   0x140048610
   14002ee13:	mov    r8d,eax
   14002ee16:	mov    rdx,rsi
   14002ee19:	lea    rcx,[rbp+0x18]
   14002ee1d:	call   0x1400037d0
   14002ee22:	nop
   14002ee23:	lea    rdx,[rbx-0x18]
   14002ee27:	or     eax,0xffffffff
   14002ee2a:	lock xadd DWORD PTR [rdx+0x10],eax
   14002ee2f:	add    eax,0xffffffff
   14002ee32:	cmp    eax,edi
   14002ee34:	jg     0x14002ee3f
   14002ee36:	mov    rcx,QWORD PTR [rdx]
   14002ee39:	mov    rax,QWORD PTR [rcx]
   14002ee3c:	call   QWORD PTR [rax+0x8]
   14002ee3f:	xor    eax,eax
   14002ee41:	jmp    0x14002ee90
   14002ee43:	mov    rdx,rsi
   14002ee46:	mov    rcx,rbp
   14002ee49:	call   0x14002eb24
   14002ee4e:	nop
   14002ee4f:	lea    rdx,[rbx-0x18]
   14002ee53:	or     eax,0xffffffff
   14002ee56:	lock xadd DWORD PTR [rdx+0x10],eax
   14002ee5b:	add    eax,0xffffffff
   14002ee5e:	cmp    eax,edi
   14002ee60:	jg     0x14002ee6b
   14002ee62:	mov    rcx,QWORD PTR [rdx]
   14002ee65:	mov    rax,QWORD PTR [rcx]
   14002ee68:	call   QWORD PTR [rax+0x8]
   14002ee6b:	xor    eax,eax
   14002ee6d:	jmp    0x14002ee90
   14002ee6f:	lea    rdx,[rbx-0x18]
   14002ee73:	or     eax,0xffffffff
   14002ee76:	lock xadd DWORD PTR [rdx+0x10],eax
   14002ee7b:	add    eax,0xffffffff
   14002ee7e:	cmp    eax,edi
   14002ee80:	jg     0x14002ee8b
   14002ee82:	mov    rcx,QWORD PTR [rdx]
   14002ee85:	mov    rax,QWORD PTR [rcx]
   14002ee88:	call   QWORD PTR [rax+0x8]
   14002ee8b:	mov    eax,0x1
   14002ee90:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14002ee98:	xor    rcx,rsp
   14002ee9b:	call   0x140046470
   14002eea0:	mov    rbx,QWORD PTR [rsp+0x318]
   14002eea8:	add    rsp,0x2d0
   14002eeaf:	pop    r13
   14002eeb1:	pop    r12
   14002eeb3:	pop    rdi
   14002eeb4:	pop    rsi
   14002eeb5:	pop    rbp
   14002eeb6:	ret    
   14002eeb7:	int3   
   14002eeb8:	int3   
   14002eeb9:	int3   
   14002eeba:	int3   
   14002eebb:	int3   
   14002eebc:	int3   
   14002eebd:	int3   
   14002eebe:	int3   
   14002eebf:	int3   
   14002eec0:	int3   
   14002eec1:	int3   
   14002eec2:	int3   
   14002eec3:	int3   
   14002eec4:	rex push rbp
   14002eec6:	sub    rsp,0x20
   14002eeca:	mov    rbp,rdx
   14002eecd:	lea    rcx,[rbp+0x50]
   14002eed1:	call   0x1400010c0
   14002eed6:	add    rsp,0x20
   14002eeda:	pop    rbp
   14002eedb:	ret    
   14002eedc:	mov    rax,rsp
   14002eedf:	mov    QWORD PTR [rax+0x8],rcx
   14002eee3:	push   rdi
   14002eee4:	push   r12
   14002eee6:	push   r13
   14002eee8:	sub    rsp,0x30
   14002eeec:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002eef5:	mov    QWORD PTR [rax+0x10],rbx
   14002eef9:	mov    QWORD PTR [rax+0x18],rbp
   14002eefd:	mov    QWORD PTR [rax+0x20],rsi
   14002ef01:	mov    rdi,r9
   14002ef04:	mov    r12d,r8d
   14002ef07:	mov    r13d,edx
   14002ef0a:	mov    rsi,rcx
   14002ef0d:	call   0x14002091c
   14002ef12:	lea    r11,[rip+0x3c4f7]        # 0x14006b410
   14002ef19:	mov    QWORD PTR [rsi],r11
   14002ef1c:	call   0x14002b874
   14002ef21:	mov    rcx,rax
   14002ef24:	xor    ebx,ebx
   14002ef26:	mov    r9d,ebx
   14002ef29:	cmp    rax,rbx
   14002ef2c:	setne  r9b
   14002ef30:	cmp    r9d,ebx
   14002ef33:	jne    0x14002ef40
   14002ef35:	mov    ecx,0x80004005
   14002ef3a:	call   0x140001430
   14002ef3f:	int3   
   14002ef40:	mov    rax,QWORD PTR [rax]
   14002ef43:	call   QWORD PTR [rax+0x18]
   14002ef46:	add    rax,0x18
   14002ef4a:	mov    QWORD PTR [rsi+0x18],rax
   14002ef4e:	mov    DWORD PTR [rsi+0x10],r13d
   14002ef52:	mov    DWORD PTR [rsi+0x14],r12d
   14002ef56:	cmp    rdi,rbx
   14002ef59:	je     0x14002ef65
   14002ef5b:	mov    rcx,rdi
   14002ef5e:	call   0x140048610
   14002ef63:	mov    ebx,eax
   14002ef65:	mov    r8d,ebx
   14002ef68:	mov    rdx,rdi
   14002ef6b:	lea    rcx,[rsi+0x18]
   14002ef6f:	call   0x1400037d0
   14002ef74:	nop
   14002ef75:	mov    rax,rsi
   14002ef78:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ef7d:	mov    rbp,QWORD PTR [rsp+0x60]
   14002ef82:	mov    rsi,QWORD PTR [rsp+0x68]
   14002ef87:	add    rsp,0x30
   14002ef8b:	pop    r13
   14002ef8d:	pop    r12
   14002ef8f:	pop    rdi
   14002ef90:	ret    
   14002ef91:	int3   
   14002ef92:	int3   
   14002ef93:	int3   
   14002ef94:	int3   
   14002ef95:	int3   
   14002ef96:	int3   
   14002ef97:	int3   
   14002ef98:	int3   
   14002ef99:	int3   
   14002ef9a:	int3   
   14002ef9b:	int3   
   14002ef9c:	rex push rbp
   14002ef9e:	sub    rsp,0x20
   14002efa2:	mov    rbp,rdx
   14002efa5:	mov    rcx,QWORD PTR [rbp+0x50]
   14002efa9:	add    rcx,0x18
   14002efad:	call   0x1400010c0
   14002efb2:	add    rsp,0x20
   14002efb6:	pop    rbp
   14002efb7:	ret    
   14002efb8:	mov    QWORD PTR [rsp+0x8],rbx
   14002efbd:	push   rdi
   14002efbe:	sub    rsp,0x20
   14002efc2:	test   rdx,rdx
   14002efc5:	mov    rdi,rdx
   14002efc8:	je     0x14002efee
   14002efca:	lea    rbx,[rcx+0x18]
   14002efce:	mov    rcx,rdx
   14002efd1:	call   0x140048610
   14002efd6:	mov    rdx,rdi
   14002efd9:	mov    rcx,rbx
   14002efdc:	mov    r8d,eax
   14002efdf:	mov    rbx,QWORD PTR [rsp+0x30]
   14002efe4:	add    rsp,0x20
   14002efe8:	pop    rdi
   14002efe9:	jmp    0x1400037d0
   14002efee:	call   0x1400208f8
   14002eff3:	int3   
   14002eff4:	rex push rbx
   14002eff6:	push   rbp
   14002eff7:	push   rsi
   14002eff8:	push   rdi
   14002eff9:	push   r12
   14002effb:	push   r13
   14002effd:	sub    rsp,0x288
   14002f004:	mov    rax,QWORD PTR [rip+0x57d65]        # 0x140086d70
   14002f00b:	xor    rax,rsp
   14002f00e:	mov    QWORD PTR [rsp+0x270],rax
   14002f016:	or     QWORD PTR [rcx+0x8],0xffffffffffffffff
   14002f01b:	mov    esi,r8d
   14002f01e:	mov    r12,rcx
   14002f021:	xor    ebx,ebx
   14002f023:	add    rcx,0x18
   14002f027:	mov    rbp,r9
   14002f02a:	mov    DWORD PTR [rcx-0x8],ebx
   14002f02d:	mov    rdi,rdx
   14002f030:	btr    esi,0xf
   14002f034:	call   0x140002cb0
   14002f039:	cmp    rdi,rbx
   14002f03c:	je     0x14002f19b
   14002f042:	mov    ecx,0x104
   14002f047:	mov    rax,rdi
   14002f04a:	cmp    WORD PTR [rax],bx
   14002f04d:	je     0x14002f059
   14002f04f:	add    rax,0x2
   14002f053:	sub    rcx,0x1
   14002f057:	jne    0x14002f04a
   14002f059:	cmp    rcx,rbx
   14002f05c:	je     0x14002f19b
   14002f062:	lea    rcx,[rsp+0x60]
   14002f067:	mov    r8,rbp
   14002f06a:	mov    rdx,rdi
   14002f06d:	call   0x14002eb84
   14002f072:	cmp    eax,ebx
   14002f074:	je     0x14002f1c6
   14002f07a:	lea    rcx,[rsp+0x60]
   14002f07f:	call   0x140048610
   14002f084:	lea    rdx,[rsp+0x60]
   14002f089:	lea    rcx,[r12+0x18]
   14002f08e:	mov    r8d,eax
   14002f091:	call   0x1400037d0
   14002f096:	mov    eax,esi
   14002f098:	mov    ecx,0x3
   14002f09d:	and    eax,ecx
   14002f09f:	mov    edx,ebx
   14002f0a1:	cmp    eax,ebx
   14002f0a3:	je     0x14002f0bd
   14002f0a5:	sub    eax,0x1
   14002f0a8:	je     0x14002f0b6
   14002f0aa:	cmp    eax,0x1
   14002f0ad:	jne    0x14002f0c2
   14002f0af:	mov    edx,0xc0000000
   14002f0b4:	jmp    0x14002f0c2
   14002f0b6:	mov    edx,0x40000000
   14002f0bb:	jmp    0x14002f0c2
   14002f0bd:	mov    edx,0x80000000
   14002f0c2:	mov    eax,esi
   14002f0c4:	and    eax,0x70
   14002f0c7:	je     0x14002f0f2
   14002f0c9:	cmp    eax,0x10
   14002f0cc:	je     0x14002f0f2
   14002f0ce:	cmp    eax,0x20
   14002f0d1:	je     0x14002f0ea
   14002f0d3:	cmp    eax,0x30
   14002f0d6:	je     0x14002f0e2
   14002f0d8:	cmp    eax,0x40
   14002f0db:	jne    0x14002f0f2
   14002f0dd:	mov    r8d,ecx
   14002f0e0:	jmp    0x14002f0f5
   14002f0e2:	mov    r8d,0x2
   14002f0e8:	jmp    0x14002f0f5
   14002f0ea:	mov    r8d,0x1
   14002f0f0:	jmp    0x14002f0f5
   14002f0f2:	mov    r8d,ebx
   14002f0f5:	mov    eax,esi
   14002f0f7:	mov    DWORD PTR [rsp+0x40],0x18
   14002f0ff:	mov    QWORD PTR [rsp+0x48],rbx
   14002f104:	shr    eax,0x7
   14002f107:	not    eax
   14002f109:	and    eax,0x1
   14002f10c:	bt     esi,0xc
   14002f110:	mov    DWORD PTR [rsp+0x50],eax
   14002f114:	jae    0x14002f127
   14002f116:	mov    eax,esi
   14002f118:	and    eax,0x2000
   14002f11d:	neg    eax
   14002f11f:	sbb    ecx,ecx
   14002f121:	and    ecx,0x2
   14002f124:	add    ecx,0x2
   14002f127:	bt     esi,0x10
   14002f12b:	mov    eax,0x80
   14002f130:	mov    r9d,0x20000080
   14002f136:	cmovb  eax,r9d
   14002f13a:	bt     esi,0x11
   14002f13e:	jae    0x14002f144
   14002f140:	bts    eax,0x1f
   14002f144:	bt     esi,0x12
   14002f148:	jae    0x14002f14e
   14002f14a:	bts    eax,0x1c
   14002f14e:	bt     esi,0x13
   14002f152:	jae    0x14002f158
   14002f154:	bts    eax,0x1b
   14002f158:	mov    QWORD PTR [rsp+0x30],rbx
   14002f15d:	mov    DWORD PTR [rsp+0x28],eax
   14002f161:	mov    DWORD PTR [rsp+0x20],ecx
   14002f165:	lea    r9,[rsp+0x40]
   14002f16a:	mov    rcx,rdi
   14002f16d:	call   QWORD PTR [rip+0x35445]        # 0x1400645b8
   14002f173:	cmp    rax,0xffffffffffffffff
   14002f177:	jne    0x14002f186
   14002f179:	mov    rdx,rdi
   14002f17c:	mov    rcx,rbp
   14002f17f:	call   0x14002eb24
   14002f184:	jmp    0x14002f1c6
   14002f186:	mov    QWORD PTR [r12+0x8],rax
   14002f18b:	mov    DWORD PTR [r12+0x10],0x1
   14002f194:	mov    eax,0x1
   14002f199:	jmp    0x14002f1c8
   14002f19b:	cmp    rbp,rbx
   14002f19e:	je     0x14002f1c6
   14002f1a0:	cmp    rdi,rbx
   14002f1a3:	mov    ecx,0x3
   14002f1a8:	mov    DWORD PTR [rbp+0x10],ecx
   14002f1ab:	je     0x14002f1b7
   14002f1ad:	mov    rcx,rdi
   14002f1b0:	call   0x140048610
   14002f1b5:	mov    ebx,eax
   14002f1b7:	lea    rcx,[rbp+0x18]
   14002f1bb:	mov    r8d,ebx
   14002f1be:	mov    rdx,rdi
   14002f1c1:	call   0x1400037d0
   14002f1c6:	xor    eax,eax
   14002f1c8:	mov    rcx,QWORD PTR [rsp+0x270]
   14002f1d0:	xor    rcx,rsp
   14002f1d3:	call   0x140046470
   14002f1d8:	add    rsp,0x288
   14002f1df:	pop    r13
   14002f1e1:	pop    r12
   14002f1e3:	pop    rdi
   14002f1e4:	pop    rsi
   14002f1e5:	pop    rbp
   14002f1e6:	pop    rbx
   14002f1e7:	ret    
   14002f1e8:	sub    rsp,0x28
   14002f1ec:	mov    rcx,QWORD PTR [rcx]
   14002f1ef:	test   rcx,rcx
   14002f1f2:	je     0x14002f1fa
   14002f1f4:	call   QWORD PTR [rip+0x35386]        # 0x140064580
   14002f1fa:	add    rsp,0x28
   14002f1fe:	ret    
   14002f1ff:	int3   
   14002f200:	mov    rax,QWORD PTR [rcx]
   14002f203:	and    QWORD PTR [rcx],0x0
   14002f207:	ret    
   14002f208:	or     r8w,0xffff
   14002f20e:	lea    rdx,[rcx+0x1a]
   14002f212:	cmp    WORD PTR [rcx+0x2],r8w
   14002f217:	je     0x14002f21d
   14002f219:	lea    rdx,[rcx+0x12]
   14002f21d:	cmp    WORD PTR [rdx],r8w
   14002f221:	jne    0x14002f229
   14002f223:	add    rdx,0x4
   14002f227:	jmp    0x14002f235
   14002f229:	movzx  eax,WORD PTR [rdx]
   14002f22c:	add    rdx,0x2
   14002f230:	test   ax,ax
   14002f233:	jne    0x14002f229
   14002f235:	cmp    WORD PTR [rdx],r8w
   14002f239:	jne    0x14002f241
   14002f23b:	add    rdx,0x4
   14002f23f:	jmp    0x14002f24d
   14002f241:	movzx  ecx,WORD PTR [rdx]
   14002f244:	add    rdx,0x2
   14002f248:	test   cx,cx
   14002f24b:	jne    0x14002f241
   14002f24d:	movzx  ecx,WORD PTR [rdx]
   14002f250:	add    rdx,0x2
   14002f254:	test   cx,cx
   14002f257:	jne    0x14002f24d
   14002f259:	mov    rax,rdx
   14002f25c:	ret    
   14002f25d:	int3   
   14002f25e:	int3   
   14002f25f:	int3   
   14002f260:	mov    QWORD PTR [rsp+0x8],rbx
   14002f265:	mov    QWORD PTR [rsp+0x10],rsi
   14002f26a:	push   rdi
   14002f26b:	sub    rsp,0x20
   14002f26f:	xor    edi,edi
   14002f271:	cmp    WORD PTR [rcx+0x2],0xffff
   14002f277:	mov    rsi,rcx
   14002f27a:	sete   dil
   14002f27e:	call   0x14002f208
   14002f283:	cmp    WORD PTR [rsi+0x2],0xffff
   14002f289:	mov    rbx,rax
   14002f28c:	jne    0x14002f293
   14002f28e:	mov    eax,DWORD PTR [rsi+0xc]
   14002f291:	jmp    0x14002f295
   14002f293:	mov    eax,DWORD PTR [rsi]
   14002f295:	test   al,0x40
   14002f297:	je     0x14002f2ba
   14002f299:	mov    eax,edi
   14002f29b:	neg    eax
   14002f29d:	sbb    ecx,ecx
   14002f29f:	and    ecx,0x2
   14002f2a2:	add    ecx,0x1
   14002f2a5:	lea    eax,[rcx+rcx*1]
   14002f2a8:	cdqe   
   14002f2aa:	add    rbx,rax
   14002f2ad:	mov    rcx,rbx
   14002f2b0:	call   0x140048610
   14002f2b5:	lea    rbx,[rbx+rax*2+0x2]
   14002f2ba:	test   edi,edi
   14002f2bc:	je     0x14002f2c4
   14002f2be:	movzx  edx,WORD PTR [rsi+0x10]
   14002f2c2:	jmp    0x14002f2c8
   14002f2c4:	mov    dx,WORD PTR [rsi+0x8]
   14002f2c8:	test   dx,dx
   14002f2cb:	movsxd r9,edi
   14002f2ce:	je     0x14002f33a
   14002f2d0:	neg    edi
   14002f2d2:	sbb    r8,r8
   14002f2d5:	and    r8d,0x6
   14002f2d9:	add    r8,0x12
   14002f2dd:	lea    rcx,[rbx+0x3]
   14002f2e1:	and    rcx,0xfffffffffffffffc
   14002f2e5:	add    rcx,r8
   14002f2e8:	cmp    WORD PTR [rcx],0xffff
   14002f2ed:	jne    0x14002f2f5
   14002f2ef:	add    rcx,0x4
   14002f2f3:	jmp    0x14002f301
   14002f2f5:	movzx  eax,WORD PTR [rcx]
   14002f2f8:	add    rcx,0x2
   14002f2fc:	test   ax,ax
   14002f2ff:	jne    0x14002f2f5
   14002f301:	cmp    WORD PTR [rcx],0xffff
   14002f306:	jne    0x14002f30e
   14002f308:	add    rcx,0x4
   14002f30c:	jmp    0x14002f31a
   14002f30e:	movzx  eax,WORD PTR [rcx]
   14002f311:	add    rcx,0x2
   14002f315:	test   ax,ax
   14002f318:	jne    0x14002f30e
   14002f31a:	movzx  eax,WORD PTR [rcx]
   14002f31d:	test   ax,ax
   14002f320:	je     0x14002f32b
   14002f322:	test   r9,r9
   14002f325:	jne    0x14002f32b
   14002f327:	add    ax,0xfffe
   14002f32b:	add    dx,0xffff
   14002f330:	movzx  eax,ax
   14002f333:	lea    rbx,[rcx+rax*1+0x2]
   14002f338:	jne    0x14002f2dd
   14002f33a:	sub    rbx,rsi
   14002f33d:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f342:	mov    eax,ebx
   14002f344:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f349:	add    rsp,0x20
   14002f34d:	pop    rdi
   14002f34e:	ret    
   14002f34f:	int3   
   14002f350:	mov    QWORD PTR [rsp+0x8],rbx
   14002f355:	mov    QWORD PTR [rsp+0x10],rsi
   14002f35a:	push   rdi
   14002f35b:	sub    rsp,0x20
   14002f35f:	mov    rsi,rdx
   14002f362:	lea    edx,[r8+0x40]
   14002f366:	mov    eax,r8d
   14002f369:	cmp    rdx,rax
   14002f36c:	mov    rdi,rcx
   14002f36f:	mov    DWORD PTR [rcx+0x8],r8d
   14002f373:	jae    0x14002f37c
   14002f375:	xor    eax,eax
   14002f377:	jmp    0x14002f3fe
   14002f37c:	mov    ecx,0x40
   14002f381:	call   QWORD PTR [rip+0x351f1]        # 0x140064578
   14002f387:	test   rax,rax
   14002f38a:	mov    QWORD PTR [rdi],rax
   14002f38d:	je     0x14002f375
   14002f38f:	mov    rcx,rax
   14002f392:	call   QWORD PTR [rip+0x35168]        # 0x140064500
   14002f398:	mov    edx,DWORD PTR [rdi+0x8]
   14002f39b:	mov    r8,rsi
   14002f39e:	mov    r9,rdx
   14002f3a1:	mov    rcx,rax
   14002f3a4:	mov    rbx,rax
   14002f3a7:	call   0x1400466d0
   14002f3ac:	test   eax,eax
   14002f3ae:	je     0x14002f3d6
   14002f3b0:	cmp    eax,0xc
   14002f3b3:	je     0x14002f3d0
   14002f3b5:	cmp    eax,0x16
   14002f3b8:	je     0x14002f3ca
   14002f3ba:	cmp    eax,0x22
   14002f3bd:	je     0x14002f3ca
   14002f3bf:	cmp    eax,0x50
   14002f3c2:	je     0x14002f3d6
   14002f3c4:	call   0x1400208f8
   14002f3c9:	int3   
   14002f3ca:	call   0x1400208f8
   14002f3cf:	int3   
   14002f3d0:	call   0x1400208b0
   14002f3d5:	int3   
   14002f3d6:	cmp    WORD PTR [rbx+0x2],0xffff
   14002f3dc:	jne    0x14002f3e3
   14002f3de:	mov    eax,DWORD PTR [rbx+0xc]
   14002f3e1:	jmp    0x14002f3e5
   14002f3e3:	mov    eax,DWORD PTR [rbx]
   14002f3e5:	mov    rcx,QWORD PTR [rdi]
   14002f3e8:	shr    eax,0x6
   14002f3eb:	not    eax
   14002f3ed:	and    eax,0x1
   14002f3f0:	mov    DWORD PTR [rdi+0xc],eax
   14002f3f3:	call   QWORD PTR [rip+0x3508f]        # 0x140064488
   14002f3f9:	mov    eax,0x1
   14002f3fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f403:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f408:	add    rsp,0x20
   14002f40c:	pop    rdi
   14002f40d:	ret    
   14002f40e:	int3   
   14002f40f:	int3   
   14002f410:	mov    QWORD PTR [rsp+0x8],rbx
   14002f415:	mov    WORD PTR [rsp+0x18],r8w
   14002f41b:	mov    QWORD PTR [rsp+0x10],rdx
   14002f420:	push   rbp
   14002f421:	push   rsi
   14002f422:	push   rdi
   14002f423:	push   r12
   14002f425:	push   r13
   14002f427:	push   r14
   14002f429:	push   r15
   14002f42b:	sub    rsp,0x20
   14002f42f:	cmp    DWORD PTR [rcx+0x8],0x0
   14002f433:	mov    r13,rdx
   14002f436:	mov    rsi,rcx
   14002f439:	jne    0x14002f442
   14002f43b:	xor    eax,eax
   14002f43d:	jmp    0x14002f5a7
   14002f442:	mov    rcx,QWORD PTR [rcx]
   14002f445:	call   QWORD PTR [rip+0x350b5]        # 0x140064500
   14002f44b:	xor    r12d,r12d
   14002f44e:	mov    rdi,rax
   14002f451:	or     ax,0xffff
   14002f455:	cmp    WORD PTR [rdi+0x2],ax
   14002f459:	sete   r12b
   14002f45d:	cmp    WORD PTR [rdi+0x2],ax
   14002f461:	jne    0x14002f468
   14002f463:	mov    ebx,DWORD PTR [rdi+0xc]
   14002f466:	jmp    0x14002f46a
   14002f468:	mov    ebx,DWORD PTR [rdi]
   14002f46a:	and    ebx,0x40
   14002f46d:	mov    eax,r12d
   14002f470:	neg    eax
   14002f472:	sbb    ebp,ebp
   14002f474:	and    ebp,0x2
   14002f477:	add    ebp,0x1
   14002f47a:	add    ebp,ebp
   14002f47c:	test   r12d,r12d
   14002f47f:	je     0x14002f487
   14002f481:	or     DWORD PTR [rdi+0xc],0x40
   14002f485:	jmp    0x14002f48a
   14002f487:	or     DWORD PTR [rdi],0x40
   14002f48a:	mov    rcx,r13
   14002f48d:	call   QWORD PTR [rip+0x34fed]        # 0x140064480
   14002f493:	cmp    eax,0x20
   14002f496:	jge    0x14002f43b
   14002f498:	lea    r14d,[rbp+rax*2+0x2]
   14002f49d:	cmp    r14d,ebp
   14002f4a0:	jl     0x14002f43b
   14002f4a2:	mov    rcx,rdi
   14002f4a5:	call   0x14002f208
   14002f4aa:	test   ebx,ebx
   14002f4ac:	mov    r15,rax
   14002f4af:	je     0x14002f4c3
   14002f4b1:	movsxd rbx,ebp
   14002f4b4:	lea    rcx,[rbx+rax*1]
   14002f4b8:	call   0x140048610
   14002f4bd:	lea    ecx,[rbx+rax*2+0x2]
   14002f4c1:	jmp    0x14002f4c5
   14002f4c3:	xor    ecx,ecx
   14002f4c5:	movsxd rax,ecx
   14002f4c8:	lea    r13,[rax+r15*1+0x3]
   14002f4cd:	movsxd rax,r14d
   14002f4d0:	lea    rbx,[rax+r15*1+0x3]
   14002f4d5:	and    r13,0xfffffffffffffffc
   14002f4d9:	and    rbx,0xfffffffffffffffc
   14002f4dd:	test   r12d,r12d
   14002f4e0:	je     0x14002f4e8
   14002f4e2:	movzx  eax,WORD PTR [rdi+0x10]
   14002f4e6:	jmp    0x14002f4ec
   14002f4e8:	mov    ax,WORD PTR [rdi+0x8]
   14002f4ec:	cmp    r14d,ecx
   14002f4ef:	je     0x14002f543
   14002f4f1:	test   ax,ax
   14002f4f4:	je     0x14002f543
   14002f4f6:	mov    eax,DWORD PTR [rsi+0x8]
   14002f4f9:	mov    rdx,rax
   14002f4fc:	sub    rdx,r13
   14002f4ff:	add    rdx,rdi
   14002f502:	cmp    rdx,rax
   14002f505:	ja     0x14002f43b
   14002f50b:	mov    r9,rdx
   14002f50e:	mov    r8,r13
   14002f511:	mov    rcx,rbx
   14002f514:	call   0x1400467a0
   14002f519:	test   eax,eax
   14002f51b:	je     0x14002f543
   14002f51d:	cmp    eax,0xc
   14002f520:	je     0x14002f53d
   14002f522:	cmp    eax,0x16
   14002f525:	je     0x14002f537
   14002f527:	cmp    eax,0x22
   14002f52a:	je     0x14002f537
   14002f52c:	cmp    eax,0x50
   14002f52f:	je     0x14002f543
   14002f531:	call   0x1400208f8
   14002f536:	int3   
   14002f537:	call   0x1400208f8
   14002f53c:	int3   
   14002f53d:	call   0x1400208b0
   14002f542:	int3   
   14002f543:	movzx  eax,WORD PTR [rsp+0x70]
   14002f548:	mov    r8,QWORD PTR [rsp+0x68]
   14002f54d:	sub    r14d,ebp
   14002f550:	movsxd rdx,r14d
   14002f553:	movsxd rcx,ebp
   14002f556:	mov    WORD PTR [r15],ax
   14002f55a:	mov    r9,rdx
   14002f55d:	add    rcx,r15
   14002f560:	call   0x1400467a0
   14002f565:	test   eax,eax
   14002f567:	je     0x14002f58f
   14002f569:	cmp    eax,0xc
   14002f56c:	je     0x14002f589
   14002f56e:	cmp    eax,0x16
   14002f571:	je     0x14002f583
   14002f573:	cmp    eax,0x22
   14002f576:	je     0x14002f583
   14002f578:	cmp    eax,0x50
   14002f57b:	je     0x14002f58f
   14002f57d:	call   0x1400208f8
   14002f582:	int3   
   14002f583:	call   0x1400208f8
   14002f588:	int3   
   14002f589:	call   0x1400208b0
   14002f58e:	int3   
   14002f58f:	mov    rcx,QWORD PTR [rsi]
   14002f592:	sub    ebx,r13d
   14002f595:	add    DWORD PTR [rsi+0x8],ebx
   14002f598:	call   QWORD PTR [rip+0x34eea]        # 0x140064488
   14002f59e:	and    DWORD PTR [rsi+0xc],0x0
   14002f5a2:	mov    eax,0x1
   14002f5a7:	mov    rbx,QWORD PTR [rsp+0x60]
   14002f5ac:	add    rsp,0x20
   14002f5b0:	pop    r15
   14002f5b2:	pop    r14
   14002f5b4:	pop    r13
   14002f5b6:	pop    r12
   14002f5b8:	pop    rdi
   14002f5b9:	pop    rsi
   14002f5ba:	pop    rbp
   14002f5bb:	ret    
   14002f5bc:	mov    QWORD PTR [rsp+0x10],rbx
   14002f5c1:	mov    QWORD PTR [rsp+0x18],rbp
   14002f5c6:	push   rsi
   14002f5c7:	push   rdi
   14002f5c8:	push   r12
   14002f5ca:	sub    rsp,0x90
   14002f5d1:	mov    rax,QWORD PTR [rip+0x57798]        # 0x140086d70
   14002f5d8:	xor    rax,rsp
   14002f5db:	mov    QWORD PTR [rsp+0x80],rax
   14002f5e3:	mov    r12,rcx
   14002f5e6:	mov    ecx,0x11
   14002f5eb:	movzx  ebx,dx
   14002f5ee:	lea    rdi,[rip+0x3befb]        # 0x14006b4f0
   14002f5f5:	mov    bp,0xa
   14002f5f9:	call   QWORD PTR [rip+0x34a81]        # 0x140064080
   14002f5ff:	test   rax,rax
   14002f602:	jne    0x14002f612
   14002f604:	lea    ecx,[rax+0xd]
   14002f607:	call   QWORD PTR [rip+0x34a73]        # 0x140064080
   14002f60d:	test   rax,rax
   14002f610:	je     0x14002f674
   14002f612:	lea    r8,[rsp+0x20]
   14002f617:	mov    edx,0x5c
   14002f61c:	mov    rcx,rax
   14002f61f:	call   QWORD PTR [rip+0x34aab]        # 0x1400640d0
   14002f625:	test   eax,eax
   14002f627:	je     0x14002f674
   14002f629:	xor    ecx,ecx
   14002f62b:	lea    rdi,[rsp+0x3c]
   14002f630:	call   QWORD PTR [rip+0x35372]        # 0x1400649a8
   14002f636:	mov    ecx,DWORD PTR [rsp+0x20]
   14002f63a:	test   ecx,ecx
   14002f63c:	mov    rsi,rax
   14002f63f:	jns    0x14002f647
   14002f641:	neg    ecx
   14002f643:	mov    DWORD PTR [rsp+0x20],ecx
   14002f647:	mov    edx,0x5a
   14002f64c:	mov    rcx,rax
   14002f64f:	call   QWORD PTR [rip+0x34a9b]        # 0x1400640f0
   14002f655:	mov    ecx,DWORD PTR [rsp+0x20]
   14002f659:	mov    edx,0x48
   14002f65e:	mov    r8d,eax
   14002f661:	call   QWORD PTR [rip+0x34e11]        # 0x140064478
   14002f667:	mov    rdx,rsi
   14002f66a:	xor    ecx,ecx
   14002f66c:	mov    ebp,eax
   14002f66e:	call   QWORD PTR [rip+0x3532c]        # 0x1400649a0
   14002f674:	test   bx,bx
   14002f677:	mov    rdx,rdi
   14002f67a:	mov    rcx,r12
   14002f67d:	cmove  bx,bp
   14002f681:	movzx  r8d,bx
   14002f685:	call   0x14002f410
   14002f68a:	mov    rcx,QWORD PTR [rsp+0x80]
   14002f692:	xor    rcx,rsp
   14002f695:	call   0x140046470
   14002f69a:	lea    r11,[rsp+0x90]
   14002f6a2:	mov    rbx,QWORD PTR [r11+0x28]
   14002f6a6:	mov    rbp,QWORD PTR [r11+0x30]
   14002f6aa:	mov    rsp,r11
   14002f6ad:	pop    r12
   14002f6af:	pop    rdi
   14002f6b0:	pop    rsi
   14002f6b1:	ret    
   14002f6b2:	int3   
   14002f6b3:	int3   
   14002f6b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002f6b9:	push   rdi
   14002f6ba:	sub    rsp,0x20
   14002f6be:	test   rdx,rdx
   14002f6c1:	mov    rdi,rdx
   14002f6c4:	mov    rbx,rcx
   14002f6c7:	jne    0x14002f6e0
   14002f6c9:	and    QWORD PTR [rcx],rdx
   14002f6cc:	and    DWORD PTR [rcx+0x8],edx
   14002f6cf:	and    DWORD PTR [rcx+0xc],edx
   14002f6d2:	mov    rax,rbx
   14002f6d5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f6da:	add    rsp,0x20
   14002f6de:	pop    rdi
   14002f6df:	ret    
   14002f6e0:	mov    rcx,rdx
   14002f6e3:	call   0x14002f260
   14002f6e8:	mov    rdx,rdi
   14002f6eb:	mov    rcx,rbx
   14002f6ee:	mov    r8d,eax
   14002f6f1:	call   0x14002f350
   14002f6f6:	test   eax,eax
   14002f6f8:	jne    0x14002f6d2
   14002f6fa:	call   0x1400208b0
   14002f6ff:	int3   
   14002f700:	mov    QWORD PTR [rsp+0x8],rbx
   14002f705:	push   rdi
   14002f706:	sub    rsp,0x20
   14002f70a:	or     r11w,0xffff
   14002f710:	mov    r10,r8
   14002f713:	mov    rdi,rdx
   14002f716:	cmp    WORD PTR [rcx+0x2],r11w
   14002f71b:	mov    r9,rcx
   14002f71e:	jne    0x14002f725
   14002f720:	mov    eax,DWORD PTR [rcx+0xc]
   14002f723:	jmp    0x14002f727
   14002f725:	mov    eax,DWORD PTR [rcx]
   14002f727:	test   al,0x40
   14002f729:	jne    0x14002f72f
   14002f72b:	xor    eax,eax
   14002f72d:	jmp    0x14002f777
   14002f72f:	call   0x14002f208
   14002f734:	mov    rbx,rax
   14002f737:	movzx  ecx,WORD PTR [rax]
   14002f73a:	mov    WORD PTR [r10],cx
   14002f73e:	cmp    WORD PTR [r9+0x2],r11w
   14002f743:	mov    ecx,0x1
   14002f748:	lea    eax,[rcx+0x2]
   14002f74b:	cmove  ecx,eax
   14002f74e:	add    ecx,ecx
   14002f750:	movsxd rcx,ecx
   14002f753:	add    rbx,rcx
   14002f756:	jne    0x14002f75c
   14002f758:	xor    eax,eax
   14002f75a:	jmp    0x14002f764
   14002f75c:	mov    rcx,rbx
   14002f75f:	call   0x140048610
   14002f764:	mov    r8d,eax
   14002f767:	mov    rdx,rbx
   14002f76a:	mov    rcx,rdi
   14002f76d:	call   0x1400037d0
   14002f772:	mov    eax,0x1
   14002f777:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f77c:	add    rsp,0x20
   14002f780:	pop    rdi
   14002f781:	ret    
   14002f782:	int3   
   14002f783:	int3   
   14002f784:	mov    QWORD PTR [rsp+0x8],rbx
   14002f789:	mov    QWORD PTR [rsp+0x10],rsi
   14002f78e:	push   rdi
   14002f78f:	sub    rsp,0x20
   14002f793:	test   edx,edx
   14002f795:	mov    rdi,rcx
   14002f798:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f79c:	mov    esi,edx
   14002f79e:	mov    eax,0x11
   14002f7a3:	mov    ebx,r8d
   14002f7a6:	cmove  esi,eax
   14002f7a9:	test   rcx,rcx
   14002f7ac:	je     0x14002f7b8
   14002f7ae:	call   0x14001ac50
   14002f7b3:	and    QWORD PTR [rdi+0x8],0x0
   14002f7b8:	test   ebx,ebx
   14002f7ba:	je     0x14002f7ee
   14002f7bc:	mov    rcx,0xffffffffffffffff
   14002f7c3:	mov    ebx,esi
   14002f7c5:	mov    eax,0x8
   14002f7ca:	mul    rbx
   14002f7cd:	cmovo  rax,rcx
   14002f7d1:	mov    rcx,rax
   14002f7d4:	call   0x14001ac0c
   14002f7d9:	mov    r8d,esi
   14002f7dc:	xor    edx,edx
   14002f7de:	mov    rcx,rax
   14002f7e1:	shl    r8,0x3
   14002f7e5:	mov    QWORD PTR [rdi+0x8],rax
   14002f7e9:	call   0x140047720
   14002f7ee:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f7f3:	mov    DWORD PTR [rdi+0x10],esi
   14002f7f6:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f7fb:	add    rsp,0x20
   14002f7ff:	pop    rdi
   14002f800:	ret    
   14002f801:	int3   
   14002f802:	int3   
   14002f803:	int3   
   14002f804:	rex push rbx
   14002f806:	sub    rsp,0x20
   14002f80a:	mov    rbx,rcx
   14002f80d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f811:	test   rcx,rcx
   14002f814:	je     0x14002f820
   14002f816:	call   0x14001ac50
   14002f81b:	and    QWORD PTR [rbx+0x8],0x0
   14002f820:	mov    rcx,QWORD PTR [rbx+0x28]
   14002f824:	and    QWORD PTR [rbx+0x18],0x0
   14002f829:	and    QWORD PTR [rbx+0x20],0x0
   14002f82e:	call   0x140030360
   14002f833:	and    QWORD PTR [rbx+0x28],0x0
   14002f838:	add    rsp,0x20
   14002f83c:	pop    rbx
   14002f83d:	ret    
   14002f83e:	int3   
   14002f83f:	int3   
   14002f840:	mov    rax,rdx
   14002f843:	mov    r10,rdx
   14002f846:	xor    edx,edx
   14002f848:	shr    rax,0x4
   14002f84c:	mov    DWORD PTR [r9],eax
   14002f84f:	div    DWORD PTR [rcx+0x10]
   14002f852:	mov    DWORD PTR [r8],edx
   14002f855:	mov    r8,QWORD PTR [rcx+0x8]
   14002f859:	test   r8,r8
   14002f85c:	je     0x14002f872
   14002f85e:	mov    rax,QWORD PTR [r8+rdx*8]
   14002f862:	jmp    0x14002f86d
   14002f864:	cmp    QWORD PTR [rax+0x8],r10
   14002f868:	je     0x14002f874
   14002f86a:	mov    rax,QWORD PTR [rax]
   14002f86d:	test   rax,rax
   14002f870:	jne    0x14002f864
   14002f872:	xor    eax,eax
   14002f874:	ret    
   14002f875:	int3   
   14002f876:	int3   
   14002f877:	int3   
   14002f878:	sub    rsp,0x28
   14002f87c:	test   rcx,rcx
   14002f87f:	mov    r9,rdx
   14002f882:	jne    0x14002f88a
   14002f884:	call   0x1400208f8
   14002f889:	int3   
   14002f88a:	mov    r8,QWORD PTR [rcx+0x8]
   14002f88e:	test   r8,r8
   14002f891:	je     0x14002f8b3
   14002f893:	mov    rax,rdx
   14002f896:	xor    edx,edx
   14002f898:	shr    rax,0x4
   14002f89c:	div    DWORD PTR [rcx+0x10]
   14002f89f:	mov    rax,QWORD PTR [r8+rdx*8]
   14002f8a3:	jmp    0x14002f8ae
   14002f8a5:	cmp    QWORD PTR [rax+0x8],r9
   14002f8a9:	je     0x14002f8ba
   14002f8ab:	mov    rax,QWORD PTR [rax]
   14002f8ae:	test   rax,rax
   14002f8b1:	jne    0x14002f8a5
   14002f8b3:	xor    eax,eax
   14002f8b5:	add    rsp,0x28
   14002f8b9:	ret    
   14002f8ba:	mov    rax,QWORD PTR [rax+0x10]
   14002f8be:	jmp    0x14002f8b5
   14002f8c0:	sub    rsp,0x38
   14002f8c4:	mov    r11,r8
   14002f8c7:	lea    r9,[rsp+0x58]
   14002f8cc:	lea    r8,[rsp+0x20]
   14002f8d1:	call   0x14002f840
   14002f8d6:	test   rax,rax
   14002f8d9:	je     0x14002f8e7
   14002f8db:	mov    rax,QWORD PTR [rax+0x10]
   14002f8df:	mov    QWORD PTR [r11],rax
   14002f8e2:	mov    eax,0x1
   14002f8e7:	add    rsp,0x38
   14002f8eb:	ret    
   14002f8ec:	sub    rsp,0x28
   14002f8f0:	mov    r9,QWORD PTR [rcx+0x8]
   14002f8f4:	mov    r10,rdx
   14002f8f7:	mov    r8,rcx
   14002f8fa:	test   r9,r9
   14002f8fd:	je     0x14002f925
   14002f8ff:	mov    rax,rdx
   14002f902:	xor    edx,edx
   14002f904:	shr    rax,0x4
   14002f908:	div    DWORD PTR [rcx+0x10]
   14002f90b:	lea    rdx,[r9+rdx*8]
   14002f90f:	mov    rcx,QWORD PTR [rdx]
   14002f912:	jmp    0x14002f920
   14002f914:	cmp    QWORD PTR [rcx+0x8],r10
   14002f918:	je     0x14002f92c
   14002f91a:	mov    rdx,rcx
   14002f91d:	mov    rcx,QWORD PTR [rcx]
   14002f920:	test   rcx,rcx
   14002f923:	jne    0x14002f914
   14002f925:	xor    eax,eax
   14002f927:	add    rsp,0x28
   14002f92b:	ret    
   14002f92c:	mov    rax,QWORD PTR [rcx]
   14002f92f:	mov    QWORD PTR [rdx],rax
   14002f932:	mov    rax,QWORD PTR [r8+0x20]
   14002f936:	mov    QWORD PTR [rcx],rax
   14002f939:	add    QWORD PTR [r8+0x18],0xffffffffffffffff
   14002f93e:	mov    QWORD PTR [r8+0x20],rcx
   14002f942:	jne    0x14002f94c
   14002f944:	mov    rcx,r8
   14002f947:	call   0x14002f804
   14002f94c:	mov    eax,0x1
   14002f951:	jmp    0x14002f927
   14002f953:	int3   
   14002f954:	mov    QWORD PTR [rsp+0x8],rbx
   14002f959:	mov    QWORD PTR [rsp+0x10],rsi
   14002f95e:	push   rdi
   14002f95f:	sub    rsp,0x20
   14002f963:	mov    r10,QWORD PTR [rdx]
   14002f966:	mov    rdi,r9
   14002f969:	mov    rsi,r8
   14002f96c:	test   r10,r10
   14002f96f:	mov    rbx,rdx
   14002f972:	mov    r11,rcx
   14002f975:	je     0x14002f9fb
   14002f97b:	cmp    r10,0xffffffffffffffff
   14002f97f:	jne    0x14002f9aa
   14002f981:	xor    r9d,r9d
   14002f984:	cmp    DWORD PTR [rcx+0x10],r9d
   14002f988:	jbe    0x14002f9aa
   14002f98a:	mov    rax,QWORD PTR [rcx+0x8]
   14002f98e:	mov    r10,QWORD PTR [rax]
   14002f991:	test   r10,r10
   14002f994:	jne    0x14002f9aa
   14002f996:	add    r9d,0x1
   14002f99a:	add    rax,0x8
   14002f99e:	cmp    r9d,DWORD PTR [rcx+0x10]
   14002f9a2:	jb     0x14002f98e
   14002f9a4:	call   0x1400208f8
   14002f9a9:	int3   
   14002f9aa:	mov    rcx,QWORD PTR [r10]
   14002f9ad:	test   rcx,rcx
   14002f9b0:	jne    0x14002f9ea
   14002f9b2:	mov    r9d,DWORD PTR [r11+0x10]
   14002f9b6:	mov    rax,QWORD PTR [r10+0x8]
   14002f9ba:	xor    edx,edx
   14002f9bc:	shr    rax,0x4
   14002f9c0:	div    r9d
   14002f9c3:	add    edx,0x1
   14002f9c6:	cmp    edx,r9d
   14002f9c9:	movsxd r8,edx
   14002f9cc:	jae    0x14002f9ea
   14002f9ce:	mov    rax,QWORD PTR [r11+0x8]
   14002f9d2:	lea    r8,[rax+r8*8]
   14002f9d6:	mov    rcx,QWORD PTR [r8]
   14002f9d9:	test   rcx,rcx
   14002f9dc:	jne    0x14002f9ea
   14002f9de:	add    edx,0x1
   14002f9e1:	add    r8,0x8
   14002f9e5:	cmp    edx,r9d
   14002f9e8:	jb     0x14002f9d6
   14002f9ea:	mov    QWORD PTR [rbx],rcx
   14002f9ed:	mov    rax,QWORD PTR [r10+0x8]
   14002f9f1:	mov    QWORD PTR [rsi],rax
   14002f9f4:	mov    rax,QWORD PTR [r10+0x10]
   14002f9f8:	mov    QWORD PTR [rdi],rax
   14002f9fb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fa00:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fa05:	add    rsp,0x20
   14002fa09:	pop    rdi
   14002fa0a:	ret    
   14002fa0b:	int3   
   14002fa0c:	lea    rax,[rip+0x3bafd]        # 0x14006b510
   14002fa13:	ret    
   14002fa14:	xor    r8d,r8d
   14002fa17:	lea    rax,[rip+0x3bb2a]        # 0x14006b548
   14002fa1e:	mov    DWORD PTR [rcx+0x10],0x11
   14002fa25:	mov    QWORD PTR [rcx],rax
   14002fa28:	mov    eax,0xa
   14002fa2d:	cmp    rdx,r8
   14002fa30:	cmovle rdx,rax
   14002fa34:	mov    QWORD PTR [rcx+0x8],r8
   14002fa38:	mov    QWORD PTR [rcx+0x18],r8
   14002fa3c:	mov    QWORD PTR [rcx+0x20],r8
   14002fa40:	mov    QWORD PTR [rcx+0x28],r8
   14002fa44:	mov    rax,rcx
   14002fa47:	mov    QWORD PTR [rcx+0x30],rdx
   14002fa4b:	ret    
   14002fa4c:	lea    rax,[rip+0x3baf5]        # 0x14006b548
   14002fa53:	mov    QWORD PTR [rcx],rax
   14002fa56:	jmp    0x14002f804
   14002fa5b:	int3   
   14002fa5c:	rex push rbx
   14002fa5e:	sub    rsp,0x20
   14002fa62:	cmp    QWORD PTR [rcx+0x20],0x0
   14002fa67:	mov    rbx,rcx
   14002fa6a:	jne    0x14002faa7
   14002fa6c:	mov    rdx,QWORD PTR [rbx+0x30]
   14002fa70:	add    rcx,0x28
   14002fa74:	mov    r8d,0x18
   14002fa7a:	call   0x140030328
   14002fa7f:	mov    rdx,QWORD PTR [rbx+0x30]
   14002fa83:	lea    rcx,[rdx+rdx*2]
   14002fa87:	add    rdx,0xffffffffffffffff
   14002fa8b:	lea    r8,[rax+rcx*8-0x10]
   14002fa90:	js     0x14002faa7
   14002fa92:	mov    rax,QWORD PTR [rbx+0x20]
   14002fa96:	mov    QWORD PTR [r8],rax
   14002fa99:	mov    QWORD PTR [rbx+0x20],r8
   14002fa9d:	sub    r8,0x18
   14002faa1:	sub    rdx,0x1
   14002faa5:	jns    0x14002fa92
   14002faa7:	mov    rax,QWORD PTR [rbx+0x20]
   14002faab:	mov    rcx,QWORD PTR [rax]
   14002faae:	add    QWORD PTR [rbx+0x18],0x1
   14002fab3:	mov    QWORD PTR [rbx+0x20],rcx
   14002fab7:	and    QWORD PTR [rax+0x8],0x0
   14002fabc:	and    QWORD PTR [rax+0x10],0x0
   14002fac1:	add    rsp,0x20
   14002fac5:	pop    rbx
   14002fac6:	ret    
   14002fac7:	int3   
   14002fac8:	mov    QWORD PTR [rsp+0x8],rbx
   14002facd:	push   rdi
   14002face:	sub    rsp,0x20
   14002fad2:	lea    r9,[rsp+0x48]
   14002fad7:	lea    r8,[rsp+0x40]
   14002fadc:	mov    rdi,rdx
   14002fadf:	mov    rbx,rcx
   14002fae2:	call   0x14002f840
   14002fae7:	test   rax,rax
   14002faea:	mov    r9,rax
   14002faed:	jne    0x14002fb27
   14002faef:	cmp    QWORD PTR [rcx+0x8],rax
   14002faf3:	jne    0x14002fb01
   14002faf5:	mov    edx,DWORD PTR [rcx+0x10]
   14002faf8:	lea    r8d,[rax+0x1]
   14002fafc:	call   0x14002f784
   14002fb01:	mov    rcx,rbx
   14002fb04:	call   0x14002fa5c
   14002fb09:	mov    edx,DWORD PTR [rsp+0x40]
   14002fb0d:	mov    QWORD PTR [rax+0x8],rdi
   14002fb11:	mov    r9,rax
   14002fb14:	mov    rax,QWORD PTR [rbx+0x8]
   14002fb18:	mov    rcx,QWORD PTR [rax+rdx*8]
   14002fb1c:	mov    QWORD PTR [r9],rcx
   14002fb1f:	mov    rax,QWORD PTR [rbx+0x8]
   14002fb23:	mov    QWORD PTR [rax+rdx*8],r9
   14002fb27:	lea    rax,[r9+0x10]
   14002fb2b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fb30:	add    rsp,0x20
   14002fb34:	pop    rdi
   14002fb35:	ret    
   14002fb36:	int3   
   14002fb37:	int3   
   14002fb38:	mov    QWORD PTR [rsp+0x8],rbx
   14002fb3d:	push   rdi
   14002fb3e:	sub    rsp,0x20
   14002fb42:	lea    rax,[rip+0x3b9ff]        # 0x14006b548
   14002fb49:	mov    ebx,edx
   14002fb4b:	mov    rdi,rcx
   14002fb4e:	mov    QWORD PTR [rcx],rax
   14002fb51:	call   0x14002f804
   14002fb56:	test   bl,0x1
   14002fb59:	je     0x14002fb63
   14002fb5b:	mov    rcx,rdi
   14002fb5e:	call   0x14001ac50
   14002fb63:	mov    rax,rdi
   14002fb66:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fb6b:	add    rsp,0x20
   14002fb6f:	pop    rdi
   14002fb70:	ret    
   14002fb71:	int3   
   14002fb72:	int3   
   14002fb73:	int3   
   14002fb74:	rex push rbx
   14002fb76:	sub    rsp,0x30
   14002fb7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fb83:	mov    rbx,r9
   14002fb86:	mov    rcx,QWORD PTR [rcx+0x8]
   14002fb8a:	call   0x140030784
   14002fb8f:	nop
   14002fb90:	test   rbx,rbx
   14002fb93:	je     0x14002fb97
   14002fb95:	mov    DWORD PTR [rbx],eax
   14002fb97:	xor    eax,eax
   14002fb99:	jmp    0x14002fba0
   14002fb9b:	mov    eax,0x8000ffff
   14002fba0:	add    rsp,0x30
   14002fba4:	pop    rbx
   14002fba5:	ret    
   14002fba6:	int3   
   14002fba7:	int3   
   14002fba8:	int3   
   14002fba9:	int3   
   14002fbaa:	int3   
   14002fbab:	int3   
   14002fbac:	int3   
   14002fbad:	int3   
   14002fbae:	int3   
   14002fbaf:	int3   
   14002fbb0:	int3   
   14002fbb1:	int3   
   14002fbb2:	int3   
   14002fbb3:	int3   
   14002fbb4:	mov    QWORD PTR [rsp+0x10],rdx
   14002fbb9:	push   rbp
   14002fbba:	sub    rsp,0x20
   14002fbbe:	mov    rbp,rdx
   14002fbc1:	mov    rcx,QWORD PTR [rbp+0x28]
   14002fbc5:	test   rcx,rcx
   14002fbc8:	je     0x14002fbd0
   14002fbca:	call   0x1400207b8
   14002fbcf:	nop
   14002fbd0:	lea    rax,[rip+0xffffffffffffffc4]        # 0x14002fb9b
   14002fbd7:	jmp    0x14002fbd9
   14002fbd9:	add    rsp,0x20
   14002fbdd:	pop    rbp
   14002fbde:	ret    
   14002fbdf:	int3   
   14002fbe0:	rex push rdi
   14002fbe2:	sub    rsp,0x30
   14002fbe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fbef:	mov    QWORD PTR [rsp+0x40],rbx
   14002fbf4:	mov    rbx,r9
   14002fbf7:	mov    edi,r8d
   14002fbfa:	mov    rcx,QWORD PTR [rcx+0x8]
   14002fbfe:	call   0x140030cec
   14002fc03:	nop
   14002fc04:	test   rbx,rbx
   14002fc07:	je     0x14002fc0b
   14002fc09:	mov    DWORD PTR [rbx],edi
   14002fc0b:	xor    eax,eax
   14002fc0d:	jmp    0x14002fc14
   14002fc0f:	mov    eax,0x8000ffff
   14002fc14:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fc19:	add    rsp,0x30
   14002fc1d:	pop    rdi
   14002fc1e:	ret    
   14002fc1f:	int3   
   14002fc20:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc25:	push   rbp
   14002fc26:	sub    rsp,0x20
   14002fc2a:	mov    rbp,rdx
   14002fc2d:	mov    rcx,QWORD PTR [rbp+0x28]
   14002fc31:	test   rcx,rcx
   14002fc34:	je     0x14002fc3c
   14002fc36:	call   0x1400207b8
   14002fc3b:	nop
   14002fc3c:	lea    rax,[rip+0xffffffffffffffcc]        # 0x14002fc0f
   14002fc43:	jmp    0x14002fc45
   14002fc45:	add    rsp,0x20
   14002fc49:	pop    rbp
   14002fc4a:	ret    
   14002fc4b:	int3   
   14002fc4c:	mov    eax,0x80004001
   14002fc51:	ret    
   14002fc52:	int3   
   14002fc53:	int3   
   14002fc54:	mov    QWORD PTR [rsp+0x8],rbx
   14002fc59:	mov    QWORD PTR [rsp+0x10],rsi
   14002fc5e:	push   rdi
   14002fc5f:	sub    rsp,0x20
   14002fc63:	mov    rsi,rdx
   14002fc66:	mov    rbx,r8
   14002fc69:	mov    rdi,rcx
   14002fc6c:	lea    rdx,[rip+0x407e5]        # 0x140070458
   14002fc73:	mov    r8d,0x10
   14002fc79:	mov    rcx,rsi
   14002fc7c:	call   0x1400488e0
   14002fc81:	test   eax,eax
   14002fc83:	je     0x14002fca5
   14002fc85:	lea    rdx,[rip+0x4080c]        # 0x140070498
   14002fc8c:	mov    r8d,0x10
   14002fc92:	mov    rcx,rsi
   14002fc95:	call   0x1400488e0
   14002fc9a:	test   eax,eax
   14002fc9c:	je     0x14002fca5
   14002fc9e:	mov    eax,0x80004002
   14002fca3:	jmp    0x14002fcb6
   14002fca5:	test   rbx,rbx
   14002fca8:	jne    0x14002fcb1
   14002fcaa:	mov    eax,0x80004003
   14002fcaf:	jmp    0x14002fcb6
   14002fcb1:	mov    QWORD PTR [rbx],rdi
   14002fcb4:	xor    eax,eax
   14002fcb6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fcbb:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fcc0:	add    rsp,0x20
   14002fcc4:	pop    rdi
   14002fcc5:	ret    
   14002fcc6:	int3   
   14002fcc7:	int3   
   14002fcc8:	push   r12
   14002fcca:	sub    rsp,0x30
   14002fcce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fcd7:	mov    QWORD PTR [rsp+0x40],rbx
   14002fcdc:	mov    QWORD PTR [rsp+0x48],rsi
   14002fce1:	mov    QWORD PTR [rsp+0x50],rdi
   14002fce6:	mov    rdi,r9
   14002fce9:	mov    r12d,r8d
   14002fcec:	mov    rbx,rdx
   14002fcef:	mov    rcx,QWORD PTR [rcx+0x8]
   14002fcf3:	mov    rsi,QWORD PTR [rcx+0x30]
   14002fcf7:	test   rsi,rsi
   14002fcfa:	jne    0x14002fd03
   14002fcfc:	mov    eax,0x80004001
   14002fd01:	jmp    0x14002fd2a
   14002fd03:	call   0x140030960
   14002fd08:	nop
   14002fd09:	mov    rax,QWORD PTR [rsi]
   14002fd0c:	mov    r8d,r12d
   14002fd0f:	mov    rdx,rbx
   14002fd12:	mov    rcx,rsi
   14002fd15:	call   QWORD PTR [rax+0x50]
   14002fd18:	nop
   14002fd19:	test   rdi,rdi
   14002fd1c:	je     0x14002fd21
   14002fd1e:	mov    QWORD PTR [rdi],rax
   14002fd21:	xor    eax,eax
   14002fd23:	jmp    0x14002fd2a
   14002fd25:	mov    eax,0x8000ffff
   14002fd2a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fd2f:	mov    rsi,QWORD PTR [rsp+0x48]
   14002fd34:	mov    rdi,QWORD PTR [rsp+0x50]
   14002fd39:	add    rsp,0x30
   14002fd3d:	pop    r12
   14002fd3f:	ret    
   14002fd40:	int3   
   14002fd41:	int3   
   14002fd42:	int3   
   14002fd43:	int3   
   14002fd44:	int3   
   14002fd45:	int3   
   14002fd46:	int3   
   14002fd47:	int3   
   14002fd48:	mov    QWORD PTR [rsp+0x10],rdx
   14002fd4d:	push   rbp
   14002fd4e:	sub    rsp,0x20
   14002fd52:	mov    rbp,rdx
   14002fd55:	mov    rcx,QWORD PTR [rbp+0x28]
   14002fd59:	test   rcx,rcx
   14002fd5c:	je     0x14002fd64
   14002fd5e:	call   0x1400207b8
   14002fd63:	nop
   14002fd64:	lea    rax,[rip+0xffffffffffffffba]        # 0x14002fd25
   14002fd6b:	jmp    0x14002fd6d
   14002fd6d:	add    rsp,0x20
   14002fd71:	pop    rbp
   14002fd72:	ret    
   14002fd73:	int3   
   14002fd74:	lea    rax,[rip+0x3b86d]        # 0x14006b5e8
   14002fd7b:	mov    QWORD PTR [rcx+0x8],rdx
   14002fd7f:	mov    QWORD PTR [rcx],rax
   14002fd82:	mov    rax,rcx
   14002fd85:	ret    
   14002fd86:	int3   
   14002fd87:	int3   
   14002fd88:	mov    QWORD PTR [rsp+0x8],rbx
   14002fd8d:	mov    QWORD PTR [rsp+0x10],rsi
   14002fd92:	push   rdi
   14002fd93:	sub    rsp,0x20
   14002fd97:	test   rcx,rcx
   14002fd9a:	mov    rsi,rdx
   14002fd9d:	mov    rbx,rcx
   14002fda0:	je     0x14002fe04
   14002fda2:	mov    rcx,QWORD PTR [rcx+0x10]
   14002fda6:	call   QWORD PTR [rip+0x342e4]        # 0x140064090
   14002fdac:	cmp    eax,0x7
   14002fdaf:	mov    edi,eax
   14002fdb1:	jge    0x14002fde0
   14002fdb3:	cmp    eax,0x1
   14002fdb6:	je     0x14002fde0
   14002fdb8:	mov    r8,QWORD PTR [rbx]
   14002fdbb:	mov    edx,0x3
   14002fdc0:	mov    rcx,rbx
   14002fdc3:	call   QWORD PTR [r8+0x68]
   14002fdc7:	mov    rdx,rsi
   14002fdca:	mov    rcx,rbx
   14002fdcd:	call   0x14002aeb0
   14002fdd2:	mov    r11,QWORD PTR [rbx]
   14002fdd5:	mov    edx,edi
   14002fdd7:	mov    rcx,rbx
   14002fdda:	call   QWORD PTR [r11+0x68]
   14002fdde:	jmp    0x14002fe35
   14002fde0:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fde4:	mov    edx,0x58
   14002fde9:	call   QWORD PTR [rip+0x34301]        # 0x1400640f0
   14002fdef:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fdf3:	mov    edx,0x5a
   14002fdf8:	mov    edi,eax
   14002fdfa:	call   QWORD PTR [rip+0x342f0]        # 0x1400640f0
   14002fe00:	mov    ebx,eax
   14002fe02:	jmp    0x14002fe10
   14002fe04:	mov    edi,DWORD PTR [rip+0x5c71e]        # 0x14008c528
   14002fe0a:	mov    ebx,DWORD PTR [rip+0x5c71c]        # 0x14008c52c
   14002fe10:	mov    ecx,DWORD PTR [rsi]
   14002fe12:	mov    r8d,edi
   14002fe15:	mov    edi,0x9ec
   14002fe1a:	mov    edx,edi
   14002fe1c:	call   QWORD PTR [rip+0x34656]        # 0x140064478
   14002fe22:	mov    ecx,DWORD PTR [rsi+0x4]
   14002fe25:	mov    r8d,ebx
   14002fe28:	mov    edx,edi
   14002fe2a:	mov    DWORD PTR [rsi],eax
   14002fe2c:	call   QWORD PTR [rip+0x34646]        # 0x140064478
   14002fe32:	mov    DWORD PTR [rsi+0x4],eax
   14002fe35:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fe3a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fe3f:	add    rsp,0x20
   14002fe43:	pop    rdi
   14002fe44:	ret    
   14002fe45:	int3   
   14002fe46:	int3   
   14002fe47:	int3   
   14002fe48:	mov    QWORD PTR [rsp+0x8],rbx
   14002fe4d:	mov    QWORD PTR [rsp+0x10],rsi
   14002fe52:	push   rdi
   14002fe53:	sub    rsp,0x20
   14002fe57:	test   rcx,rcx
   14002fe5a:	mov    rsi,rdx
   14002fe5d:	mov    rbx,rcx
   14002fe60:	je     0x14002fec4
   14002fe62:	mov    rcx,QWORD PTR [rcx+0x10]
   14002fe66:	call   QWORD PTR [rip+0x34224]        # 0x140064090
   14002fe6c:	cmp    eax,0x7
   14002fe6f:	mov    edi,eax
   14002fe71:	jge    0x14002fea0
   14002fe73:	cmp    eax,0x1
   14002fe76:	je     0x14002fea0
   14002fe78:	mov    r8,QWORD PTR [rbx]
   14002fe7b:	mov    edx,0x3
   14002fe80:	mov    rcx,rbx
   14002fe83:	call   QWORD PTR [r8+0x68]
   14002fe87:	mov    rdx,rsi
   14002fe8a:	mov    rcx,rbx
   14002fe8d:	call   0x14002ae2c
   14002fe92:	mov    r11,QWORD PTR [rbx]
   14002fe95:	mov    edx,edi
   14002fe97:	mov    rcx,rbx
   14002fe9a:	call   QWORD PTR [r11+0x68]
   14002fe9e:	jmp    0x14002fef6
   14002fea0:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fea4:	mov    edx,0x58
   14002fea9:	call   QWORD PTR [rip+0x34241]        # 0x1400640f0
   14002feaf:	mov    rcx,QWORD PTR [rbx+0x10]
   14002feb3:	mov    edx,0x5a
   14002feb8:	mov    edi,eax
   14002feba:	call   QWORD PTR [rip+0x34230]        # 0x1400640f0
   14002fec0:	mov    ebx,eax
   14002fec2:	jmp    0x14002fed0
   14002fec4:	mov    edi,DWORD PTR [rip+0x5c65e]        # 0x14008c528
   14002feca:	mov    ebx,DWORD PTR [rip+0x5c65c]        # 0x14008c52c
   14002fed0:	mov    ecx,DWORD PTR [rsi]
   14002fed2:	mov    r8d,0x9ec
   14002fed8:	mov    edx,edi
   14002feda:	call   QWORD PTR [rip+0x34598]        # 0x140064478
   14002fee0:	mov    ecx,DWORD PTR [rsi+0x4]
   14002fee3:	mov    r8d,0x9ec
   14002fee9:	mov    edx,ebx
   14002feeb:	mov    DWORD PTR [rsi],eax
   14002feed:	call   QWORD PTR [rip+0x34585]        # 0x140064478
   14002fef3:	mov    DWORD PTR [rsi+0x4],eax
   14002fef6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fefb:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ff00:	add    rsp,0x20
   14002ff04:	pop    rdi
   14002ff05:	ret    
   14002ff06:	int3   
   14002ff07:	int3   
   14002ff08:	mov    QWORD PTR [rsp+0x8],rbx
   14002ff0d:	push   rdi
   14002ff0e:	sub    rsp,0x20
   14002ff12:	test   r8,r8
   14002ff15:	mov    rbx,r8
   14002ff18:	mov    edi,edx
   14002ff1a:	jne    0x14002ff22
   14002ff1c:	call   0x1400208f8
   14002ff21:	int3   
   14002ff22:	mov    rax,QWORD PTR [rcx]
   14002ff25:	call   QWORD PTR [rax+0x78]
   14002ff28:	xor    r8d,r8d
   14002ff2b:	cmp    DWORD PTR [rbx],r8d
   14002ff2e:	mov    r11,rax
   14002ff31:	setne  r8b
   14002ff35:	test   rax,rax
   14002ff38:	je     0x14002ff8c
   14002ff3a:	or     r9d,0xffffffff
   14002ff3e:	mov    rax,QWORD PTR [r11+0x8]
   14002ff42:	mov    rcx,QWORD PTR [rax+0x30]
   14002ff46:	cmp    rcx,0xffffffffffffffff
   14002ff4a:	je     0x14002ff84
   14002ff4c:	mov    edx,DWORD PTR [rbx+0x4]
   14002ff4f:	cmp    DWORD PTR [rax+0x8],edx
   14002ff52:	jne    0x14002ff76
   14002ff54:	cmp    rcx,r8
   14002ff57:	jne    0x14002ff76
   14002ff59:	cmp    DWORD PTR [rax+0x44],r9d
   14002ff5d:	jne    0x14002ff6c
   14002ff5f:	cmp    DWORD PTR [rax+0x40],r9d
   14002ff63:	je     0x14002ff8e
   14002ff65:	cmp    DWORD PTR [rax+0x40],edi
   14002ff68:	je     0x14002ff8e
   14002ff6a:	jmp    0x14002ff76
   14002ff6c:	cmp    DWORD PTR [rax+0x40],edi
   14002ff6f:	ja     0x14002ff76
   14002ff71:	cmp    edi,DWORD PTR [rax+0x44]
   14002ff74:	jbe    0x14002ff8e
   14002ff76:	mov    rcx,QWORD PTR [rax+0x78]
   14002ff7a:	add    rax,0x48
   14002ff7e:	cmp    rcx,0xffffffffffffffff
   14002ff82:	jne    0x14002ff4f
   14002ff84:	mov    r11,QWORD PTR [r11]
   14002ff87:	test   r11,r11
   14002ff8a:	jne    0x14002ff3e
   14002ff8c:	xor    eax,eax
   14002ff8e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ff93:	add    rsp,0x20
   14002ff97:	pop    rdi
   14002ff98:	ret    
   14002ff99:	int3   
   14002ff9a:	int3   
   14002ff9b:	int3   
   14002ff9c:	mov    rax,rsp
   14002ff9f:	mov    QWORD PTR [rax+0x18],r8
   14002ffa3:	mov    DWORD PTR [rax+0x10],edx
   14002ffa6:	push   rdi
   14002ffa7:	push   r12
   14002ffa9:	push   r13
   14002ffab:	push   r14
   14002ffad:	push   r15
   14002ffaf:	sub    rsp,0x80
   14002ffb6:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14002ffbf:	mov    QWORD PTR [rax+0x8],rbx
   14002ffc3:	mov    QWORD PTR [rax+0x20],rsi
   14002ffc7:	mov    rdi,r9
   14002ffca:	mov    rsi,r8
   14002ffcd:	mov    r14,rcx
   14002ffd0:	xor    ebx,ebx
   14002ffd2:	mov    r12d,ebx
   14002ffd5:	or     DWORD PTR [rax-0x70],0xffffffff
   14002ffd9:	call   0x14002ff08
   14002ffde:	mov    r13,rax
   14002ffe1:	cmp    rax,rbx
   14002ffe4:	jne    0x14002ffed
   14002ffe6:	xor    eax,eax
   14002ffe8:	jmp    0x1400302a5
   14002ffed:	cmp    rdi,rbx
   14002fff0:	je     0x140030023
   14002fff2:	mov    QWORD PTR [rdi],r14
   14002fff5:	cmp    DWORD PTR [rsi],ebx
   14002fff7:	jl     0x140030015
   14002fff9:	cmp    DWORD PTR [rsi],0x1
   14002fffc:	jle    0x14003000d
   14002fffe:	cmp    DWORD PTR [rsi],0x2
   140030001:	jne    0x140030015
   140030003:	mov    rax,QWORD PTR [rax+0x28]
   140030007:	mov    QWORD PTR [rdi+0x8],rax
   14003000b:	jmp    0x140030015
   14003000d:	mov    rcx,QWORD PTR [rax+0x20]
   140030011:	mov    QWORD PTR [rdi+0x8],rcx
   140030015:	cmp    QWORD PTR [rdi+0x8],rbx
   140030019:	setne  bl
   14003001c:	mov    eax,ebx
   14003001e:	jmp    0x1400302a5
   140030023:	mov    r15d,ebx
   140030026:	cmp    DWORD PTR [rax+0x44],0xffffffff
   14003002a:	setne  r15b
   14003002e:	mov    edi,ebx
   140030030:	mov    DWORD PTR [rsp+0x34],ebx
   140030034:	mov    ecx,DWORD PTR [rsi]
   140030036:	cmp    ecx,ebx
   140030038:	je     0x140030135
   14003003e:	sub    ecx,0x1
   140030041:	je     0x1400300e7
   140030047:	sub    ecx,0x1
   14003004a:	je     0x1400300b3
   14003004c:	cmp    ecx,0x1
   14003004f:	jne    0x140030271
   140030055:	mov    DWORD PTR [rsp+0x30],ecx
   140030059:	cmp    r15d,ebx
   14003005c:	je     0x140030088
   14003005e:	mov    rax,QWORD PTR [rax+0x20]
   140030062:	lea    rcx,[rsp+0x30]
   140030067:	mov    QWORD PTR [rsp+0x20],rcx
   14003006c:	mov    r9d,DWORD PTR [rsi+0x2c]
   140030070:	mov    r8d,DWORD PTR [rsi+0x28]
   140030074:	mov    edx,DWORD PTR [rsp+0xb8]
   14003007b:	mov    rcx,r14
   14003007e:	call   rax
   140030080:	mov    edi,eax
   140030082:	mov    DWORD PTR [rsp+0x34],eax
   140030086:	jmp    0x1400300a3
   140030088:	mov    rax,QWORD PTR [rax+0x20]
   14003008c:	lea    r9,[rsp+0x30]
   140030091:	mov    r8d,DWORD PTR [rsi+0x2c]
   140030095:	mov    edx,DWORD PTR [rsi+0x28]
   140030098:	mov    rcx,r14
   14003009b:	call   rax
   14003009d:	mov    edi,eax
   14003009f:	mov    DWORD PTR [rsp+0x34],eax
   1400300a3:	mov    r12d,ebx
   1400300a6:	cmp    DWORD PTR [rsp+0x30],ebx
   1400300aa:	sete   r12b
   1400300ae:	jmp    0x140030271
   1400300b3:	cmp    r15d,ebx
   1400300b6:	je     0x1400300d0
   1400300b8:	mov    rax,QWORD PTR [rax+0x28]
   1400300bc:	mov    edx,DWORD PTR [rsp+0xb8]
   1400300c3:	mov    rcx,r14
   1400300c6:	call   rax
   1400300c8:	mov    edi,eax
   1400300ca:	mov    DWORD PTR [rsp+0x34],eax
   1400300ce:	jmp    0x1400300df
   1400300d0:	mov    rax,QWORD PTR [rax+0x28]
   1400300d4:	mov    rcx,r14
   1400300d7:	call   rax
   1400300d9:	mov    edi,eax
   1400300db:	mov    DWORD PTR [rsp+0x34],eax
   1400300df:	mov    r12d,ebx
   1400300e2:	jmp    0x140030271
   1400300e7:	mov    DWORD PTR [rsp+0x30],0x1
   1400300ef:	cmp    r15d,ebx
   1400300f2:	je     0x140030111
   1400300f4:	mov    rax,QWORD PTR [rax+0x20]
   1400300f8:	lea    r8,[rsp+0x30]
   1400300fd:	mov    edx,DWORD PTR [rsp+0xb8]
   140030104:	mov    rcx,r14
   140030107:	call   rax
   140030109:	mov    edi,eax
   14003010b:	mov    DWORD PTR [rsp+0x34],eax
   14003010f:	jmp    0x140030125
   140030111:	mov    rax,QWORD PTR [rax+0x20]
   140030115:	lea    rdx,[rsp+0x30]
   14003011a:	mov    rcx,r14
   14003011d:	call   rax
   14003011f:	mov    edi,eax
   140030121:	mov    DWORD PTR [rsp+0x34],eax
   140030125:	mov    r12d,ebx
   140030128:	cmp    DWORD PTR [rsp+0x30],ebx
   14003012c:	sete   r12b
   140030130:	jmp    0x140030271
   140030135:	lea    rcx,[rsp+0x68]
   14003013a:	call   0x14003f678
   14003013f:	mov    QWORD PTR [rsp+0x40],rbx
   140030144:	cmp    r15d,ebx
   140030147:	je     0x14003022d
   14003014d:	mov    edi,0x18
   140030152:	mov    r9,rdi
   140030155:	mov    r8,QWORD PTR [rsi+0x8]
   140030159:	mov    rdx,rdi
   14003015c:	lea    rcx,[rsp+0x40]
   140030161:	call   0x1400466d0
   140030166:	cmp    eax,ebx
   140030168:	je     0x14003018d
   14003016a:	cmp    eax,0xc
   14003016d:	je     0x140030188
   14003016f:	cmp    eax,0x16
   140030172:	je     0x140030183
   140030174:	cmp    eax,0x22
   140030177:	je     0x140030183
   140030179:	cmp    eax,0x50
   14003017c:	je     0x14003018d
   14003017e:	call   0x1400208f8
   140030183:	call   0x1400208f8
   140030188:	call   0x1400208b0
   14003018d:	mov    ecx,DWORD PTR [rsp+0x50]
   140030191:	add    ecx,0x1
   140030194:	mov    DWORD PTR [rsp+0x50],ecx
   140030198:	mov    rax,rdi
   14003019b:	mul    rcx
   14003019e:	mov    rcx,0xffffffffffffffff
   1400301a5:	cmovo  rax,rcx
   1400301a9:	mov    rcx,rax
   1400301ac:	call   0x14001ac0c
   1400301b1:	mov    rcx,rax
   1400301b4:	mov    QWORD PTR [rsp+0x40],rax
   1400301b9:	mov    r10d,DWORD PTR [rsp+0x50]
   1400301be:	lea    eax,[r10-0x1]
   1400301c2:	lea    r9,[rax+rax*2]
   1400301c6:	shl    r9,0x3
   1400301ca:	mov    rax,QWORD PTR [rsi+0x8]
   1400301ce:	mov    r8,QWORD PTR [rax]
   1400301d1:	lea    rdx,[r10+r10*2]
   1400301d5:	shl    rdx,0x3
   1400301d9:	call   0x1400466d0
   1400301de:	cmp    eax,ebx
   1400301e0:	je     0x140030205
   1400301e2:	cmp    eax,0xc
   1400301e5:	je     0x140030200
   1400301e7:	cmp    eax,0x16
   1400301ea:	je     0x1400301fb
   1400301ec:	cmp    eax,0x22
   1400301ef:	je     0x1400301fb
   1400301f1:	cmp    eax,0x50
   1400301f4:	je     0x140030205
   1400301f6:	call   0x1400208f8
   1400301fb:	call   0x1400208f8
   140030200:	call   0x1400208b0
   140030205:	mov    eax,DWORD PTR [rsp+0x50]
   140030209:	add    eax,0xffffffff
   14003020c:	lea    rdx,[rax+rax*2]
   140030210:	mov    rax,QWORD PTR [rsp+0x40]
   140030215:	mov    WORD PTR [rax+rdx*8],0x3
   14003021b:	mov    ecx,DWORD PTR [rsp+0xb8]
   140030222:	mov    DWORD PTR [rax+rdx*8+0x8],ecx
   140030226:	lea    rax,[rsp+0x40]
   14003022b:	jmp    0x140030231
   14003022d:	mov    rax,QWORD PTR [rsi+0x8]
   140030231:	lea    rcx,[rsp+0x38]
   140030236:	mov    QWORD PTR [rsp+0x28],rcx
   14003023b:	mov    QWORD PTR [rsp+0x20],rax
   140030240:	lea    r9,[rsp+0x68]
   140030245:	mov    r8w,0x1
   14003024a:	mov    rdx,r13
   14003024d:	mov    rcx,r14
   140030250:	call   0x140041588
   140030255:	mov    r12d,eax
   140030258:	movsx  edi,WORD PTR [rsp+0x70]
   14003025d:	mov    DWORD PTR [rsp+0x34],edi
   140030261:	cmp    r15d,ebx
   140030264:	je     0x140030271
   140030266:	mov    rcx,QWORD PTR [rsp+0x40]
   14003026b:	call   0x14001ac50
   140030270:	nop
   140030271:	jmp    0x140030286
   140030273:	xor    ebx,ebx
   140030275:	mov    rsi,QWORD PTR [rsp+0xc0]
   14003027d:	mov    r12d,DWORD PTR [rsp+0x30]
   140030282:	mov    edi,DWORD PTR [rsp+0x34]
   140030286:	cmp    r12d,ebx
   140030289:	jge    0x14003029f
   14003028b:	mov    rcx,QWORD PTR [rsi+0x18]
   14003028f:	cmp    rcx,rbx
   140030292:	je     0x14003029f
   140030294:	mov    eax,DWORD PTR [rsp+0x38]
   140030298:	cmp    eax,0xffffffff
   14003029b:	je     0x14003029f
   14003029d:	mov    DWORD PTR [rcx],eax
   14003029f:	mov    DWORD PTR [rsi+0x24],r12d
   1400302a3:	mov    eax,edi
   1400302a5:	lea    r11,[rsp+0x80]
   1400302ad:	mov    rbx,QWORD PTR [r11+0x30]
   1400302b1:	mov    rsi,QWORD PTR [r11+0x48]
   1400302b5:	mov    rsp,r11
   1400302b8:	pop    r15
   1400302ba:	pop    r14
   1400302bc:	pop    r13
   1400302be:	pop    r12
   1400302c0:	pop    rdi
   1400302c1:	ret    
   1400302c2:	int3   
   1400302c3:	int3   
   1400302c4:	int3   
   1400302c5:	int3   
   1400302c6:	int3   
   1400302c7:	int3   
   1400302c8:	int3   
   1400302c9:	int3   
   1400302ca:	int3   
   1400302cb:	int3   
   1400302cc:	mov    QWORD PTR [rsp+0x10],rdx
   1400302d1:	push   rbx
   1400302d2:	push   rbp
   1400302d3:	push   rdi
   1400302d4:	sub    rsp,0x30
   1400302d8:	mov    rbp,rdx
   1400302db:	mov    rax,QWORD PTR [rbp+0xc0]
   1400302e2:	mov    rcx,QWORD PTR [rax+0x10]
   1400302e6:	xor    ebx,ebx
   1400302e8:	cmp    rcx,rbx
   1400302eb:	je     0x1400302fb
   1400302ed:	mov    rdi,QWORD PTR [rbp+0x58]
   1400302f1:	mov    rdx,rdi
   1400302f4:	call   0x140041cf4
   1400302f9:	jmp    0x1400302ff
   1400302fb:	mov    rdi,QWORD PTR [rbp+0x58]
   1400302ff:	cmp    rdi,rbx
   140030302:	je     0x14003030c
   140030304:	mov    rcx,rdi
   140030307:	call   0x1400207b8
   14003030c:	mov    DWORD PTR [rbp+0x30],0x80020009
   140030313:	lea    rax,[rip+0xffffffffffffff59]        # 0x140030273
   14003031a:	jmp    0x14003031c
   14003031c:	add    rsp,0x30
   140030320:	pop    rdi
   140030321:	pop    rbp
   140030322:	pop    rbx
   140030323:	ret    
   140030324:	int3   
   140030325:	int3   
   140030326:	int3   
   140030327:	int3   
   140030328:	rex push rbx
   14003032a:	sub    rsp,0x20
   14003032e:	test   rdx,rdx
   140030331:	mov    rbx,rcx
   140030334:	je     0x140030357
   140030336:	test   r8,r8
   140030339:	je     0x140030357
   14003033b:	imul   rdx,r8
   14003033f:	lea    rcx,[rdx+0x8]
   140030343:	call   0x14001ac0c
   140030348:	mov    rcx,QWORD PTR [rbx]
   14003034b:	mov    QWORD PTR [rax],rcx
   14003034e:	mov    QWORD PTR [rbx],rax
   140030351:	add    rsp,0x20
   140030355:	pop    rbx
   140030356:	ret    
   140030357:	call   0x1400208f8
   14003035c:	int3   
   14003035d:	int3   
   14003035e:	int3   
   14003035f:	int3   
   140030360:	test   rcx,rcx
   140030363:	je     0x14003037f
   140030365:	push   rbx
   140030366:	sub    rsp,0x20
   14003036a:	mov    rbx,QWORD PTR [rcx]
   14003036d:	call   0x14001ac50
   140030372:	test   rbx,rbx
   140030375:	mov    rcx,rbx
   140030378:	jne    0x14003036a
   14003037a:	add    rsp,0x20
   14003037e:	pop    rbx
   14003037f:	ret    
   140030380:	lea    rax,[rip+0x3b311]        # 0x14006b698
   140030387:	ret    
   140030388:	push   r12
   14003038a:	sub    rsp,0x40
   14003038e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140030397:	mov    QWORD PTR [rsp+0x50],rbx
   14003039c:	mov    QWORD PTR [rsp+0x60],rsi
   1400303a1:	mov    QWORD PTR [rsp+0x68],rdi
   1400303a6:	mov    r12d,r8d
   1400303a9:	mov    rsi,rdx
   1400303ac:	mov    rdi,rcx
   1400303af:	test   rdx,rdx
   1400303b2:	jne    0x1400303bb
   1400303b4:	xor    eax,eax
   1400303b6:	jmp    0x1400304d8
   1400303bb:	test   r9,r9
   1400303be:	je     0x1400303cb
   1400303c0:	mov    eax,DWORD PTR [rcx+0x10]
   1400303c3:	add    eax,0xf1b0
   1400303c8:	mov    DWORD PTR [r9],eax
   1400303cb:	call   0x14002b874
   1400303d0:	mov    r11,rax
   1400303d3:	xor    ecx,ecx
   1400303d5:	test   rax,rax
   1400303d8:	setne  cl
   1400303db:	test   ecx,ecx
   1400303dd:	jne    0x1400303ea
   1400303df:	mov    ecx,0x80004005
   1400303e4:	call   0x140001430
   1400303e9:	int3   
   1400303ea:	mov    rax,QWORD PTR [rax]
   1400303ed:	mov    rcx,r11
   1400303f0:	call   QWORD PTR [rax+0x18]
   1400303f3:	add    rax,0x18
   1400303f7:	mov    QWORD PTR [rsp+0x58],rax
   1400303fc:	mov    rcx,QWORD PTR [rdi+0x18]
   140030400:	sub    rcx,0x18
   140030404:	call   0x140002da0
   140030409:	lea    rbx,[rax+0x18]
   14003040d:	mov    QWORD PTR [rsp+0x20],rbx
   140030412:	cmp    DWORD PTR [rbx-0x10],0x0
   140030416:	jne    0x14003043f
   140030418:	mov    ecx,0xf006
   14003041d:	call   0x14002b860
   140030422:	test   rax,rax
   140030425:	je     0x14003043f
   140030427:	mov    r8d,0xf006
   14003042d:	mov    rdx,rax
   140030430:	lea    rcx,[rsp+0x20]
   140030435:	call   0x140003650
   14003043a:	mov    rbx,QWORD PTR [rsp+0x20]
   14003043f:	mov    edx,DWORD PTR [rdi+0x10]
   140030442:	add    edx,0xf1b0
   140030448:	mov    r8,rbx
   14003044b:	lea    rcx,[rsp+0x58]
   140030450:	call   0x14003f530
   140030455:	mov    rdx,r12
   140030458:	or     rdi,0xffffffffffffffff
   14003045c:	mov    r9,rdi
   14003045f:	mov    r8,QWORD PTR [rsp+0x58]
   140030464:	mov    rcx,rsi
   140030467:	call   0x140047200
   14003046c:	test   eax,eax
   14003046e:	je     0x140030494
   140030470:	cmp    eax,0xc
   140030473:	je     0x14003048e
   140030475:	cmp    eax,0x16
   140030478:	je     0x140030489
   14003047a:	cmp    eax,0x22
   14003047d:	je     0x140030489
   14003047f:	cmp    eax,0x50
   140030482:	je     0x140030494
   140030484:	call   0x1400208f8
   140030489:	call   0x1400208f8
   14003048e:	call   0x1400208b0
   140030493:	nop
   140030494:	lea    rdx,[rbx-0x18]
   140030498:	mov    eax,edi
   14003049a:	lock xadd DWORD PTR [rdx+0x10],eax
   14003049f:	add    eax,edi
   1400304a1:	test   eax,eax
   1400304a3:	jg     0x1400304af
   1400304a5:	mov    rcx,QWORD PTR [rdx]
   1400304a8:	mov    rax,QWORD PTR [rcx]
   1400304ab:	call   QWORD PTR [rax+0x8]
   1400304ae:	nop
   1400304af:	mov    rdx,QWORD PTR [rsp+0x58]
   1400304b4:	add    rdx,0xffffffffffffffe8
   1400304b8:	mov    eax,edi
   1400304ba:	lock xadd DWORD PTR [rdx+0x10],eax
   1400304bf:	add    eax,edi
   1400304c1:	test   eax,eax
   1400304c3:	jg     0x1400304cf
   1400304c5:	mov    rcx,QWORD PTR [rdx]
   1400304c8:	mov    rax,QWORD PTR [rcx]
   1400304cb:	call   QWORD PTR [rax+0x8]
   1400304ce:	nop
   1400304cf:	mov    eax,0x1
   1400304d4:	jmp    0x1400304d8
   1400304d6:	xor    eax,eax
   1400304d8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400304dd:	mov    rsi,QWORD PTR [rsp+0x60]
   1400304e2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400304e7:	add    rsp,0x40
   1400304eb:	pop    r12
   1400304ed:	ret    
   1400304ee:	int3   
   1400304ef:	int3   
   1400304f0:	int3   
   1400304f1:	int3   
   1400304f2:	int3   
   1400304f3:	int3   
   1400304f4:	int3   
   1400304f5:	int3   
   1400304f6:	int3   
   1400304f7:	int3   
   1400304f8:	rex push rbp
   1400304fa:	sub    rsp,0x20
   1400304fe:	mov    rbp,rdx
   140030501:	lea    rcx,[rbp+0x58]
   140030505:	call   0x1400010c0
   14003050a:	add    rsp,0x20
   14003050e:	pop    rbp
   14003050f:	ret    
   140030510:	int3   
   140030511:	int3   
   140030512:	int3   
   140030513:	int3   
   140030514:	int3   
   140030515:	int3   
   140030516:	int3   
   140030517:	int3   
   140030518:	rex push rbp
   14003051a:	sub    rsp,0x20
   14003051e:	mov    rbp,rdx
   140030521:	lea    rcx,[rbp+0x20]
   140030525:	call   0x1400010c0
   14003052a:	add    rsp,0x20
   14003052e:	pop    rbp
   14003052f:	ret    
   140030530:	int3   
   140030531:	int3   
   140030532:	int3   
   140030533:	int3   
   140030534:	int3   
   140030535:	int3   
   140030536:	int3   
   140030537:	int3   
   140030538:	mov    QWORD PTR [rsp+0x10],rdx
   14003053d:	push   rbp
   14003053e:	sub    rsp,0x20
   140030542:	mov    rbp,rdx
   140030545:	lea    rax,[rip+0xffffffffffffff8a]        # 0x1400304d6
   14003054c:	jmp    0x14003054e
   14003054e:	add    rsp,0x20
   140030552:	pop    rbp
   140030553:	ret    
   140030554:	int3   
   140030555:	int3   
   140030556:	int3   
   140030557:	int3   
   140030558:	mov    QWORD PTR [rsp+0x8],rcx
   14003055d:	push   rsi
   14003055e:	push   rdi
   14003055f:	push   r12
   140030561:	sub    rsp,0x30
   140030565:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003056e:	mov    QWORD PTR [rsp+0x58],rbx
   140030573:	mov    QWORD PTR [rsp+0x60],rbp
   140030578:	mov    rdi,r8
   14003057b:	mov    r12d,edx
   14003057e:	mov    rsi,rcx
   140030581:	call   0x14002091c
   140030586:	lea    r11,[rip+0x3b193]        # 0x14006b720
   14003058d:	mov    QWORD PTR [rsi],r11
   140030590:	call   0x14002b874
   140030595:	mov    rcx,rax
   140030598:	xor    ebx,ebx
   14003059a:	mov    r9d,ebx
   14003059d:	cmp    rax,rbx
   1400305a0:	setne  r9b
   1400305a4:	cmp    r9d,ebx
   1400305a7:	jne    0x1400305b4
   1400305a9:	mov    ecx,0x80004005
   1400305ae:	call   0x140001430
   1400305b3:	int3   
   1400305b4:	mov    rax,QWORD PTR [rax]
   1400305b7:	call   QWORD PTR [rax+0x18]
   1400305ba:	add    rax,0x18
   1400305be:	mov    QWORD PTR [rsi+0x18],rax
   1400305c2:	mov    DWORD PTR [rsi+0x10],r12d
   1400305c6:	cmp    rdi,rbx
   1400305c9:	je     0x1400305d5
   1400305cb:	mov    rcx,rdi
   1400305ce:	call   0x140048610
   1400305d3:	mov    ebx,eax
   1400305d5:	mov    r8d,ebx
   1400305d8:	mov    rdx,rdi
   1400305db:	lea    rcx,[rsi+0x18]
   1400305df:	call   0x1400037d0
   1400305e4:	nop
   1400305e5:	mov    rax,rsi
   1400305e8:	mov    rbx,QWORD PTR [rsp+0x58]
   1400305ed:	mov    rbp,QWORD PTR [rsp+0x60]
   1400305f2:	add    rsp,0x30
   1400305f6:	pop    r12
   1400305f8:	pop    rdi
   1400305f9:	pop    rsi
   1400305fa:	ret    
   1400305fb:	int3   
   1400305fc:	int3   
   1400305fd:	int3   
   1400305fe:	int3   
   1400305ff:	int3   
   140030600:	int3   
   140030601:	int3   
   140030602:	int3   
   140030603:	int3   
   140030604:	int3   
   140030605:	int3   
   140030606:	int3   
   140030607:	int3   
   140030608:	rex push rbp
   14003060a:	sub    rsp,0x20
   14003060e:	mov    rbp,rdx
   140030611:	mov    rcx,QWORD PTR [rbp+0x50]
   140030615:	add    rcx,0x18
   140030619:	call   0x1400010c0
   14003061e:	add    rsp,0x20
   140030622:	pop    rbp
   140030623:	ret    
   140030624:	mov    QWORD PTR [rsp+0x8],rbx
   140030629:	push   rdi
   14003062a:	sub    rsp,0x20
   14003062e:	mov    edi,edx
   140030630:	mov    rdx,QWORD PTR [rcx+0x18]
   140030634:	lea    rax,[rip+0x3b0e5]        # 0x14006b720
   14003063b:	sub    rdx,0x18
   14003063f:	mov    QWORD PTR [rcx],rax
   140030642:	or     eax,0xffffffff
   140030645:	mov    rbx,rcx
   140030648:	lock xadd DWORD PTR [rdx+0x10],eax
   14003064d:	add    eax,0xffffffff
   140030650:	test   eax,eax
   140030652:	jg     0x14003065d
   140030654:	mov    rcx,QWORD PTR [rdx]
   140030657:	mov    rax,QWORD PTR [rcx]
   14003065a:	call   QWORD PTR [rax+0x8]
   14003065d:	test   dil,0x1
   140030661:	je     0x14003066b
   140030663:	mov    rcx,rbx
   140030666:	call   0x14001ac50
   14003066b:	mov    rax,rbx
   14003066e:	mov    rbx,QWORD PTR [rsp+0x30]
   140030673:	add    rsp,0x20
   140030677:	pop    rdi
   140030678:	ret    
   140030679:	int3   
   14003067a:	int3   
   14003067b:	int3   
   14003067c:	rex push rdi
   14003067e:	sub    rsp,0x30
   140030682:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003068b:	mov    QWORD PTR [rsp+0x40],rbx
   140030690:	mov    rbx,rdx
   140030693:	mov    edi,ecx
   140030695:	mov    ecx,0x20
   14003069a:	call   0x14001ac0c
   14003069f:	mov    rcx,rax
   1400306a2:	mov    QWORD PTR [rsp+0x58],rax
   1400306a7:	xor    eax,eax
   1400306a9:	cmp    rcx,rax
   1400306ac:	je     0x1400306b9
   1400306ae:	mov    r8,rbx
   1400306b1:	mov    edx,edi
   1400306b3:	call   0x140030558
   1400306b8:	nop
   1400306b9:	mov    QWORD PTR [rsp+0x50],rax
   1400306be:	lea    rdx,[rip+0x51aa3]        # 0x140082168
   1400306c5:	lea    rcx,[rsp+0x50]
   1400306ca:	call   0x140048db0
   1400306cf:	int3   
   1400306d0:	int3   
   1400306d1:	int3   
   1400306d2:	int3   
   1400306d3:	int3   
   1400306d4:	int3   
   1400306d5:	int3   
   1400306d6:	int3   
   1400306d7:	int3   
   1400306d8:	int3   
   1400306d9:	int3   
   1400306da:	int3   
   1400306db:	int3   
   1400306dc:	rex push rbp
   1400306de:	sub    rsp,0x20
   1400306e2:	mov    rbp,rdx
   1400306e5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400306e9:	call   0x140001040
   1400306ee:	add    rsp,0x20
   1400306f2:	pop    rbp
   1400306f3:	ret    
   1400306f4:	rex push rbx
   1400306f6:	sub    rsp,0x20
   1400306fa:	and    QWORD PTR [rcx+0x30],0x0
   1400306ff:	cmp    DWORD PTR [rcx+0x24],0x0
   140030703:	mov    rbx,rcx
   140030706:	jne    0x14003071b
   140030708:	mov    rcx,QWORD PTR [rcx+0x48]
   14003070c:	call   0x14001ac50
   140030711:	and    QWORD PTR [rbx+0x48],0x0
   140030716:	and    QWORD PTR [rbx+0x38],0x0
   14003071b:	mov    rcx,QWORD PTR [rbx+0x60]
   14003071f:	test   rcx,rcx
   140030722:	je     0x14003074c
   140030724:	lea    r8,[rsp+0x30]
   140030729:	mov    edx,0x1
   14003072e:	call   0x14002f8c0
   140030733:	test   eax,eax
   140030735:	je     0x14003074c
   140030737:	mov    rcx,QWORD PTR [rsp+0x30]
   14003073c:	test   rcx,rcx
   14003073f:	je     0x14003074c
   140030741:	mov    rax,QWORD PTR [rcx]
   140030744:	mov    edx,0x1
   140030749:	call   QWORD PTR [rax+0x8]
   14003074c:	mov    rcx,QWORD PTR [rbx+0x60]
   140030750:	test   rcx,rcx
   140030753:	je     0x140030760
   140030755:	mov    rax,QWORD PTR [rcx]
   140030758:	mov    edx,0x1
   14003075d:	call   QWORD PTR [rax+0x8]
   140030760:	mov    rcx,QWORD PTR [rbx+0x58]
   140030764:	and    QWORD PTR [rbx+0x60],0x0
   140030769:	test   rcx,rcx
   14003076c:	je     0x140030779
   14003076e:	mov    rax,QWORD PTR [rcx]
   140030771:	mov    edx,0x1
   140030776:	call   QWORD PTR [rax+0x8]
   140030779:	and    QWORD PTR [rbx+0x58],0x0
   14003077e:	add    rsp,0x20
   140030782:	pop    rbx
   140030783:	ret    
   140030784:	mov    QWORD PTR [rsp+0x8],rbx
   140030789:	mov    QWORD PTR [rsp+0x10],rbp
   14003078e:	mov    QWORD PTR [rsp+0x18],rsi
   140030793:	push   rdi
   140030794:	push   r12
   140030796:	push   r13
   140030798:	push   r14
   14003079a:	push   r15
   14003079c:	sub    rsp,0x30
   1400307a0:	test   r8d,r8d
   1400307a3:	mov    ebp,r8d
   1400307a6:	mov    r13,rdx
   1400307a9:	mov    rdi,rcx
   1400307ac:	jne    0x1400307b5
   1400307ae:	xor    eax,eax
   1400307b0:	jmp    0x140030940
   1400307b5:	test   rdx,rdx
   1400307b8:	je     0x1400307ae
   1400307ba:	test   BYTE PTR [rcx+0x20],0x1
   1400307be:	jne    0x1400307cf
   1400307c0:	mov    rdx,QWORD PTR [rcx+0x18]
   1400307c4:	mov    ecx,0x4
   1400307c9:	call   0x14003067c
   1400307ce:	int3   
   1400307cf:	mov    r8,QWORD PTR [rcx+0x38]
   1400307d3:	lea    r15,[rcx+0x40]
   1400307d7:	mov    rdx,rbp
   1400307da:	mov    r12d,DWORD PTR [r15]
   1400307dd:	sub    r12d,DWORD PTR [rcx+0x38]
   1400307e1:	mov    rcx,r13
   1400307e4:	cmp    ebp,r12d
   1400307e7:	cmovb  r12d,ebp
   1400307eb:	mov    r9d,r12d
   1400307ee:	mov    ebx,r12d
   1400307f1:	call   0x1400466d0
   1400307f6:	test   eax,eax
   1400307f8:	je     0x140030820
   1400307fa:	cmp    eax,0xc
   1400307fd:	je     0x14003081a
   1400307ff:	cmp    eax,0x16
   140030802:	je     0x140030814
   140030804:	cmp    eax,0x22
   140030807:	je     0x140030814
   140030809:	cmp    eax,0x50
   14003080c:	je     0x140030820
   14003080e:	call   0x1400208f8
   140030813:	int3   
   140030814:	call   0x1400208f8
   140030819:	int3   
   14003081a:	call   0x1400208b0
   14003081f:	int3   
   140030820:	add    QWORD PTR [rdi+0x38],rbx
   140030824:	mov    esi,ebp
   140030826:	add    r13,rbx
   140030829:	sub    esi,r12d
   14003082c:	je     0x14003093c
   140030832:	xor    edx,edx
   140030834:	mov    eax,esi
   140030836:	mov    r12d,esi
   140030839:	div    DWORD PTR [rdi+0x28]
   14003083c:	sub    r12d,edx
   14003083f:	xor    ebx,ebx
   140030841:	mov    r14d,r12d
   140030844:	mov    rcx,QWORD PTR [rdi+0x30]
   140030848:	mov    r8d,r14d
   14003084b:	mov    rdx,r13
   14003084e:	mov    rax,QWORD PTR [rcx]
   140030851:	call   QWORD PTR [rax+0x68]
   140030854:	mov    ecx,eax
   140030856:	add    ebx,eax
   140030858:	sub    r14d,eax
   14003085b:	add    r13,rcx
   14003085e:	test   eax,eax
   140030860:	je     0x140030867
   140030862:	test   r14d,r14d
   140030865:	jne    0x140030844
   140030867:	sub    esi,ebx
   140030869:	je     0x14003093c
   14003086f:	cmp    ebx,r12d
   140030872:	jne    0x14003093c
   140030878:	cmp    DWORD PTR [rdi+0xc],0x0
   14003087c:	jne    0x1400308cd
   14003087e:	cmp    DWORD PTR [rdi+0x10],0x0
   140030882:	jne    0x14003088e
   140030884:	mov    ebx,DWORD PTR [rdi+0x28]
   140030887:	cmp    esi,ebx
   140030889:	cmova  ebx,esi
   14003088c:	jmp    0x140030890
   14003088e:	mov    ebx,esi
   140030890:	mov    r14,QWORD PTR [rdi+0x48]
   140030894:	xor    r12d,r12d
   140030897:	mov    rcx,QWORD PTR [rdi+0x30]
   14003089b:	mov    r8d,ebx
   14003089e:	mov    rdx,r14
   1400308a1:	mov    rax,QWORD PTR [rcx]
   1400308a4:	call   QWORD PTR [rax+0x68]
   1400308a7:	mov    ecx,eax
   1400308a9:	add    r12d,eax
   1400308ac:	sub    ebx,eax
   1400308ae:	add    r14,rcx
   1400308b1:	test   eax,eax
   1400308b3:	je     0x1400308be
   1400308b5:	test   ebx,ebx
   1400308b7:	je     0x1400308be
   1400308b9:	cmp    r12d,esi
   1400308bc:	jb     0x140030897
   1400308be:	mov    r8,QWORD PTR [rdi+0x48]
   1400308c2:	mov    eax,r12d
   1400308c5:	add    rax,r8
   1400308c8:	mov    QWORD PTR [r15],rax
   1400308cb:	jmp    0x1400308ed
   1400308cd:	mov    rcx,QWORD PTR [rdi+0x30]
   1400308d1:	mov    r8d,DWORD PTR [rdi+0x28]
   1400308d5:	lea    r9,[rdi+0x48]
   1400308d9:	mov    rax,QWORD PTR [rcx]
   1400308dc:	xor    edx,edx
   1400308de:	mov    QWORD PTR [rsp+0x20],r15
   1400308e3:	call   QWORD PTR [rax+0xa0]
   1400308e9:	mov    r8,QWORD PTR [rdi+0x48]
   1400308ed:	mov    ebx,DWORD PTR [r15]
   1400308f0:	mov    edx,esi
   1400308f2:	mov    rcx,r13
   1400308f5:	sub    ebx,r8d
   1400308f8:	mov    QWORD PTR [rdi+0x38],r8
   1400308fc:	cmp    esi,ebx
   1400308fe:	cmovb  ebx,esi
   140030901:	mov    r9d,ebx
   140030904:	mov    r12d,ebx
   140030907:	call   0x1400466d0
   14003090c:	test   eax,eax
   14003090e:	je     0x140030936
   140030910:	cmp    eax,0xc
   140030913:	je     0x140030930
   140030915:	cmp    eax,0x16
   140030918:	je     0x14003092a
   14003091a:	cmp    eax,0x22
   14003091d:	je     0x14003092a
   14003091f:	cmp    eax,0x50
   140030922:	je     0x140030936
   140030924:	call   0x1400208f8
   140030929:	int3   
   14003092a:	call   0x1400208f8
   14003092f:	int3   
   140030930:	call   0x1400208b0
   140030935:	int3   
   140030936:	add    QWORD PTR [rdi+0x38],r12
   14003093a:	sub    esi,ebx
   14003093c:	sub    ebp,esi
   14003093e:	mov    eax,ebp
   140030940:	mov    rbx,QWORD PTR [rsp+0x60]
   140030945:	mov    rbp,QWORD PTR [rsp+0x68]
   14003094a:	mov    rsi,QWORD PTR [rsp+0x70]
   14003094f:	add    rsp,0x30
   140030953:	pop    r15
   140030955:	pop    r14
   140030957:	pop    r13
   140030959:	pop    r12
   14003095b:	pop    rdi
   14003095c:	ret    
   14003095d:	int3   
   14003095e:	int3   
   14003095f:	int3   
   140030960:	mov    QWORD PTR [rsp+0x8],rbx
   140030965:	push   rdi
   140030966:	sub    rsp,0x30
   14003096a:	test   BYTE PTR [rcx+0x20],0x1
   14003096e:	mov    rbx,rcx
   140030971:	je     0x14003099a
   140030973:	mov    rax,QWORD PTR [rcx+0x38]
   140030977:	cmp    QWORD PTR [rcx+0x40],rax
   14003097b:	je     0x140030994
   14003097d:	mov    rcx,QWORD PTR [rcx+0x30]
   140030981:	sub    eax,DWORD PTR [rbx+0x40]
   140030984:	mov    r8d,0x1
   14003098a:	mov    r9,QWORD PTR [rcx]
   14003098d:	movsxd rdx,eax
   140030990:	call   QWORD PTR [r9+0x50]
   140030994:	mov    rax,QWORD PTR [rbx+0x40]
   140030998:	jmp    0x140030a10
   14003099a:	cmp    DWORD PTR [rcx+0xc],0x0
   14003099e:	lea    rdi,[rcx+0x48]
   1400309a2:	jne    0x1400309c0
   1400309a4:	mov    rdx,QWORD PTR [rdi]
   1400309a7:	cmp    QWORD PTR [rcx+0x38],rdx
   1400309ab:	je     0x140030a0d
   1400309ad:	mov    rcx,QWORD PTR [rcx+0x30]
   1400309b1:	mov    r8d,DWORD PTR [rbx+0x38]
   1400309b5:	mov    rax,QWORD PTR [rcx]
   1400309b8:	sub    r8d,edx
   1400309bb:	call   QWORD PTR [rax+0x70]
   1400309be:	jmp    0x140030a0d
   1400309c0:	mov    rax,QWORD PTR [rdi]
   1400309c3:	cmp    QWORD PTR [rcx+0x38],rax
   1400309c7:	je     0x1400309ea
   1400309c9:	mov    rcx,QWORD PTR [rcx+0x30]
   1400309cd:	mov    r8d,DWORD PTR [rbx+0x38]
   1400309d1:	and    QWORD PTR [rsp+0x20],0x0
   1400309d7:	mov    rax,QWORD PTR [rcx]
   1400309da:	sub    r8d,DWORD PTR [rdi]
   1400309dd:	xor    r9d,r9d
   1400309e0:	lea    edx,[r9+0x2]
   1400309e4:	call   QWORD PTR [rax+0xa0]
   1400309ea:	mov    rcx,QWORD PTR [rbx+0x30]
   1400309ee:	mov    r8d,DWORD PTR [rbx+0x28]
   1400309f2:	lea    rax,[rbx+0x40]
   1400309f6:	mov    r10,QWORD PTR [rcx]
   1400309f9:	mov    r9,rdi
   1400309fc:	mov    edx,0x1
   140030a01:	mov    QWORD PTR [rsp+0x20],rax
   140030a06:	call   QWORD PTR [r10+0xa0]
   140030a0d:	mov    rax,QWORD PTR [rdi]
   140030a10:	mov    QWORD PTR [rbx+0x38],rax
   140030a14:	mov    rbx,QWORD PTR [rsp+0x40]
   140030a19:	add    rsp,0x30
   140030a1d:	pop    rdi
   140030a1e:	ret    
   140030a1f:	int3   
   140030a20:	mov    QWORD PTR [rsp+0x8],rbx
   140030a25:	mov    QWORD PTR [rsp+0x10],rbp
   140030a2a:	mov    QWORD PTR [rsp+0x18],rsi
   140030a2f:	push   rdi
   140030a30:	push   r12
   140030a32:	push   r13
   140030a34:	sub    rsp,0x30
   140030a38:	mov    r8d,0x1
   140030a3e:	mov    esi,edx
   140030a40:	mov    rdi,rcx
   140030a43:	test   BYTE PTR [rcx+0x20],r8b
   140030a47:	jne    0x140030a57
   140030a49:	mov    rdx,QWORD PTR [rcx+0x18]
   140030a4d:	lea    ecx,[r8+0x3]
   140030a51:	call   0x14003067c
   140030a56:	int3   
   140030a57:	lea    rbp,[rcx+0x40]
   140030a5b:	mov    ebx,DWORD PTR [rbp+0x0]
   140030a5e:	sub    ebx,DWORD PTR [rcx+0x38]
   140030a61:	cmp    DWORD PTR [rcx+0xc],0x0
   140030a65:	lea    r13d,[rbx+rdx*1]
   140030a69:	jne    0x140030b17
   140030a6f:	mov    r8,QWORD PTR [rcx+0x38]
   140030a73:	mov    rcx,QWORD PTR [rcx+0x48]
   140030a77:	cmp    r8,rcx
   140030a7a:	jbe    0x140030b4e
   140030a80:	test   ebx,ebx
   140030a82:	jle    0x140030acd
   140030a84:	mov    rdx,QWORD PTR [rbp+0x0]
   140030a88:	mov    r9d,ebx
   140030a8b:	sub    rdx,rcx
   140030a8e:	call   0x1400467a0
   140030a93:	test   eax,eax
   140030a95:	je     0x140030abd
   140030a97:	cmp    eax,0xc
   140030a9a:	je     0x140030ab7
   140030a9c:	cmp    eax,0x16
   140030a9f:	je     0x140030ab1
   140030aa1:	cmp    eax,0x22
   140030aa4:	je     0x140030ab1
   140030aa6:	cmp    eax,0x50
   140030aa9:	je     0x140030abd
   140030aab:	call   0x1400208f8
   140030ab0:	int3   
   140030ab1:	call   0x1400208f8
   140030ab6:	int3   
   140030ab7:	call   0x1400208b0
   140030abc:	int3   
   140030abd:	mov    rcx,QWORD PTR [rdi+0x48]
   140030ac1:	mov    QWORD PTR [rdi+0x38],rcx
   140030ac5:	lea    rax,[rbx+rcx*1]
   140030ac9:	mov    QWORD PTR [rbp+0x0],rax
   140030acd:	cmp    DWORD PTR [rdi+0x10],0x0
   140030ad1:	jne    0x140030ad6
   140030ad3:	mov    esi,DWORD PTR [rdi+0x28]
   140030ad6:	mov    r12d,ebx
   140030ad9:	sub    esi,ebx
   140030adb:	add    r12,rcx
   140030ade:	mov    rcx,QWORD PTR [rdi+0x30]
   140030ae2:	mov    r8d,esi
   140030ae5:	mov    rdx,r12
   140030ae8:	mov    rax,QWORD PTR [rcx]
   140030aeb:	call   QWORD PTR [rax+0x68]
   140030aee:	mov    ecx,eax
   140030af0:	add    ebx,eax
   140030af2:	sub    esi,eax
   140030af4:	add    r12,rcx
   140030af7:	test   eax,eax
   140030af9:	je     0x140030b04
   140030afb:	test   esi,esi
   140030afd:	je     0x140030b04
   140030aff:	cmp    ebx,r13d
   140030b02:	jb     0x140030ade
   140030b04:	mov    rcx,QWORD PTR [rdi+0x48]
   140030b08:	mov    eax,ebx
   140030b0a:	add    rax,rcx
   140030b0d:	mov    QWORD PTR [rdi+0x38],rcx
   140030b11:	mov    QWORD PTR [rbp+0x0],rax
   140030b15:	jmp    0x140030b4e
   140030b17:	test   ebx,ebx
   140030b19:	je     0x140030b2a
   140030b1b:	mov    rcx,QWORD PTR [rcx+0x30]
   140030b1f:	neg    ebx
   140030b21:	mov    rax,QWORD PTR [rcx]
   140030b24:	movsxd rdx,ebx
   140030b27:	call   QWORD PTR [rax+0x50]
   140030b2a:	mov    rcx,QWORD PTR [rdi+0x30]
   140030b2e:	mov    r8d,DWORD PTR [rdi+0x28]
   140030b32:	lea    r9,[rdi+0x48]
   140030b36:	mov    rax,QWORD PTR [rcx]
   140030b39:	xor    edx,edx
   140030b3b:	mov    QWORD PTR [rsp+0x20],rbp
   140030b40:	call   QWORD PTR [rax+0xa0]
   140030b46:	mov    r11,QWORD PTR [rdi+0x48]
   140030b4a:	mov    QWORD PTR [rdi+0x38],r11
   140030b4e:	mov    eax,DWORD PTR [rbp+0x0]
   140030b51:	sub    eax,DWORD PTR [rdi+0x38]
   140030b54:	cmp    eax,r13d
   140030b57:	jae    0x140030b64
   140030b59:	xor    edx,edx
   140030b5b:	lea    ecx,[rdx+0x3]
   140030b5e:	call   0x14003067c
   140030b63:	int3   
   140030b64:	mov    rbx,QWORD PTR [rsp+0x50]
   140030b69:	mov    rbp,QWORD PTR [rsp+0x58]
   140030b6e:	mov    rsi,QWORD PTR [rsp+0x60]
   140030b73:	add    rsp,0x30
   140030b77:	pop    r13
   140030b79:	pop    r12
   140030b7b:	pop    rdi
   140030b7c:	ret    
   140030b7d:	int3   
   140030b7e:	int3   
   140030b7f:	int3   
   140030b80:	mov    QWORD PTR [rsp+0x8],rbx
   140030b85:	push   rdi
   140030b86:	sub    rsp,0x20
   140030b8a:	test   rcx,rcx
   140030b8d:	mov    rdi,rcx
   140030b90:	jne    0x140030b98
   140030b92:	call   0x1400208f8
   140030b97:	int3   
   140030b98:	call   0x140021a70
   140030b9d:	xor    ecx,ecx
   140030b9f:	mov    rbx,rax
   140030ba2:	call   0x14002d810
   140030ba7:	mov    rbx,QWORD PTR [rbx+0x30]
   140030bab:	jmp    0x140030bc1
   140030bad:	mov    rdx,QWORD PTR [rbx]
   140030bb0:	mov    rcx,rdi
   140030bb3:	call   QWORD PTR [rip+0x33927]        # 0x1400644e0
   140030bb9:	test   eax,eax
   140030bbb:	je     0x140030bda
   140030bbd:	mov    rbx,QWORD PTR [rbx+0x20]
   140030bc1:	test   rbx,rbx
   140030bc4:	jne    0x140030bad
   140030bc6:	xor    ecx,ecx
   140030bc8:	call   0x14002d8a4
   140030bcd:	xor    eax,eax
   140030bcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140030bd4:	add    rsp,0x20
   140030bd8:	pop    rdi
   140030bd9:	ret    
   140030bda:	xor    ecx,ecx
   140030bdc:	call   0x14002d8a4
   140030be1:	mov    rax,rbx
   140030be4:	jmp    0x140030bcf
   140030be6:	int3   
   140030be7:	int3   
   140030be8:	mov    QWORD PTR [rsp+0x18],rbx
   140030bed:	mov    QWORD PTR [rsp+0x20],rsi
   140030bf2:	push   rdi
   140030bf3:	sub    rsp,0x70
   140030bf7:	mov    rax,QWORD PTR [rip+0x56172]        # 0x140086d70
   140030bfe:	xor    rax,rsp
   140030c01:	mov    QWORD PTR [rsp+0x60],rax
   140030c06:	test   rdx,rdx
   140030c09:	mov    rbx,rdx
   140030c0c:	mov    rdi,rcx
   140030c0f:	je     0x140030ccb
   140030c15:	test   BYTE PTR [rcx+0x20],0x1
   140030c19:	jne    0x140030c2a
   140030c1b:	mov    rdx,QWORD PTR [rcx+0x18]
   140030c1f:	mov    ecx,0x4
   140030c24:	call   0x14003067c
   140030c29:	int3   
   140030c2a:	mov    rax,QWORD PTR [rcx+0x38]
   140030c2e:	add    rax,0x2
   140030c32:	cmp    rax,QWORD PTR [rcx+0x40]
   140030c36:	jbe    0x140030c46
   140030c38:	mov    edx,DWORD PTR [rcx+0x38]
   140030c3b:	sub    edx,DWORD PTR [rcx+0x40]
   140030c3e:	add    edx,0x2
   140030c41:	call   0x140030a20
   140030c46:	mov    rax,QWORD PTR [rdi+0x38]
   140030c4a:	movzx  ecx,WORD PTR [rax]
   140030c4d:	add    rax,0x2
   140030c51:	mov    QWORD PTR [rdi+0x38],rax
   140030c55:	mov    DWORD PTR [rbx],ecx
   140030c57:	test   BYTE PTR [rdi+0x20],0x1
   140030c5b:	jne    0x140030c6c
   140030c5d:	mov    rdx,QWORD PTR [rdi+0x18]
   140030c61:	mov    ecx,0x4
   140030c66:	call   0x14003067c
   140030c6b:	int3   
   140030c6c:	mov    rax,QWORD PTR [rdi+0x38]
   140030c70:	add    rax,0x2
   140030c74:	cmp    rax,QWORD PTR [rdi+0x40]
   140030c78:	jbe    0x140030c8b
   140030c7a:	mov    edx,DWORD PTR [rdi+0x38]
   140030c7d:	mov    rcx,rdi
   140030c80:	sub    edx,DWORD PTR [rdi+0x40]
   140030c83:	add    edx,0x2
   140030c86:	call   0x140030a20
   140030c8b:	mov    rax,QWORD PTR [rdi+0x38]
   140030c8f:	movzx  esi,WORD PTR [rax]
   140030c92:	add    rax,0x2
   140030c96:	cmp    si,0x40
   140030c9a:	mov    QWORD PTR [rdi+0x38],rax
   140030c9e:	jae    0x140030ccb
   140030ca0:	movzx  ebx,si
   140030ca3:	lea    rdx,[rsp+0x20]
   140030ca8:	mov    rcx,rdi
   140030cab:	mov    r8d,ebx
   140030cae:	call   0x140030784
   140030cb3:	cmp    eax,ebx
   140030cb5:	jne    0x140030ccb
   140030cb7:	movzx  eax,si
   140030cba:	lea    rcx,[rsp+0x20]
   140030cbf:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   140030cc4:	call   0x140030b80
   140030cc9:	jmp    0x140030ccd
   140030ccb:	xor    eax,eax
   140030ccd:	mov    rcx,QWORD PTR [rsp+0x60]
   140030cd2:	xor    rcx,rsp
   140030cd5:	call   0x140046470
   140030cda:	lea    r11,[rsp+0x70]
   140030cdf:	mov    rbx,QWORD PTR [r11+0x20]
   140030ce3:	mov    rsi,QWORD PTR [r11+0x28]
   140030ce7:	mov    rsp,r11
   140030cea:	pop    rdi
   140030ceb:	ret    
   140030cec:	test   r8d,r8d
   140030cef:	je     0x140030e65
   140030cf5:	mov    QWORD PTR [rsp+0x8],rbx
   140030cfa:	mov    QWORD PTR [rsp+0x10],rbp
   140030cff:	mov    QWORD PTR [rsp+0x18],rsi
   140030d04:	push   rdi
   140030d05:	push   r12
   140030d07:	push   r13
   140030d09:	sub    rsp,0x30
   140030d0d:	test   rdx,rdx
   140030d10:	mov    esi,r8d
   140030d13:	mov    rbp,rdx
   140030d16:	mov    rdi,rcx
   140030d19:	je     0x140030e4d
   140030d1f:	mov    eax,DWORD PTR [rcx+0x20]
   140030d22:	not    eax
   140030d24:	test   al,0x1
   140030d26:	jne    0x140030d37
   140030d28:	mov    rdx,QWORD PTR [rcx+0x18]
   140030d2c:	mov    ecx,0x2
   140030d31:	call   0x14003067c
   140030d36:	int3   
   140030d37:	lea    r13,[rcx+0x40]
   140030d3b:	mov    r12d,DWORD PTR [r13+0x0]
   140030d3f:	mov    rdx,QWORD PTR [r13+0x0]
   140030d43:	sub    r12d,DWORD PTR [rcx+0x38]
   140030d47:	mov    rcx,QWORD PTR [rcx+0x38]
   140030d4b:	cmp    r8d,r12d
   140030d4e:	cmovb  r12d,r8d
   140030d52:	sub    rdx,rcx
   140030d55:	mov    r8,rbp
   140030d58:	mov    r9d,r12d
   140030d5b:	mov    ebx,r12d
   140030d5e:	call   0x1400466d0
   140030d63:	test   eax,eax
   140030d65:	je     0x140030d8d
   140030d67:	cmp    eax,0xc
   140030d6a:	je     0x140030d87
   140030d6c:	cmp    eax,0x16
   140030d6f:	je     0x140030d81
   140030d71:	cmp    eax,0x22
   140030d74:	je     0x140030d81
   140030d76:	cmp    eax,0x50
   140030d79:	je     0x140030d8d
   140030d7b:	call   0x1400208f8
   140030d80:	int3   
   140030d81:	call   0x1400208f8
   140030d86:	int3   
   140030d87:	call   0x1400208b0
   140030d8c:	int3   
   140030d8d:	add    QWORD PTR [rdi+0x38],rbx
   140030d91:	add    rbp,rbx
   140030d94:	sub    esi,r12d
   140030d97:	je     0x140030e4d
   140030d9d:	mov    rcx,rdi
   140030da0:	call   0x140030960
   140030da5:	mov    rcx,QWORD PTR [rdi+0x30]
   140030da9:	xor    edx,edx
   140030dab:	mov    eax,esi
   140030dad:	mov    ebx,esi
   140030daf:	div    DWORD PTR [rdi+0x28]
   140030db2:	mov    rax,QWORD PTR [rcx]
   140030db5:	sub    ebx,edx
   140030db7:	mov    rdx,rbp
   140030dba:	mov    r8d,ebx
   140030dbd:	call   QWORD PTR [rax+0x70]
   140030dc0:	mov    r11d,ebx
   140030dc3:	sub    esi,ebx
   140030dc5:	add    rbp,r11
   140030dc8:	cmp    DWORD PTR [rdi+0xc],0x0
   140030dcc:	je     0x140030df5
   140030dce:	mov    rcx,QWORD PTR [rdi+0x30]
   140030dd2:	mov    r8d,DWORD PTR [rdi+0x28]
   140030dd6:	lea    r9,[rdi+0x48]
   140030dda:	mov    rax,QWORD PTR [rcx]
   140030ddd:	mov    edx,0x1
   140030de2:	mov    QWORD PTR [rsp+0x20],r13
   140030de7:	call   QWORD PTR [rax+0xa0]
   140030ded:	mov    r11,QWORD PTR [rdi+0x48]
   140030df1:	mov    QWORD PTR [rdi+0x38],r11
   140030df5:	cmp    esi,DWORD PTR [rdi+0x28]
   140030df8:	jb     0x140030e00
   140030dfa:	call   0x1400208f8
   140030dff:	int3   
   140030e00:	mov    rcx,QWORD PTR [rdi+0x38]
   140030e04:	cmp    rcx,QWORD PTR [rdi+0x48]
   140030e08:	je     0x140030e10
   140030e0a:	call   0x1400208f8
   140030e0f:	int3   
   140030e10:	mov    r9d,esi
   140030e13:	mov    r8,rbp
   140030e16:	mov    edx,esi
   140030e18:	mov    ebx,esi
   140030e1a:	call   0x1400466d0
   140030e1f:	test   eax,eax
   140030e21:	je     0x140030e49
   140030e23:	cmp    eax,0xc
   140030e26:	je     0x140030e43
   140030e28:	cmp    eax,0x16
   140030e2b:	je     0x140030e3d
   140030e2d:	cmp    eax,0x22
   140030e30:	je     0x140030e3d
   140030e32:	cmp    eax,0x50
   140030e35:	je     0x140030e49
   140030e37:	call   0x1400208f8
   140030e3c:	int3   
   140030e3d:	call   0x1400208f8
   140030e42:	int3   
   140030e43:	call   0x1400208b0
   140030e48:	int3   
   140030e49:	add    QWORD PTR [rdi+0x38],rbx
   140030e4d:	mov    rbx,QWORD PTR [rsp+0x50]
   140030e52:	mov    rbp,QWORD PTR [rsp+0x58]
   140030e57:	mov    rsi,QWORD PTR [rsp+0x60]
   140030e5c:	add    rsp,0x30
   140030e60:	pop    r13
   140030e62:	pop    r12
   140030e64:	pop    rdi
   140030e65:	ret    
   140030e66:	int3   
   140030e67:	int3   
   140030e68:	mov    QWORD PTR [rsp+0x8],rbx
   140030e6d:	mov    QWORD PTR [rsp+0x10],rbp
   140030e72:	push   rdi
   140030e73:	sub    rsp,0x20
   140030e77:	cmp    rdx,0xffff
   140030e7e:	mov    eax,DWORD PTR [rcx+0x20]
   140030e81:	mov    rdi,rdx
   140030e84:	not    eax
   140030e86:	mov    rbx,rcx
   140030e89:	jae    0x140030ec2
   140030e8b:	test   al,0x1
   140030e8d:	jne    0x140030e9e
   140030e8f:	mov    rdx,QWORD PTR [rcx+0x18]
   140030e93:	mov    ecx,0x2
   140030e98:	call   0x14003067c
   140030e9d:	int3   
   140030e9e:	mov    rax,QWORD PTR [rcx+0x38]
   140030ea2:	add    rax,0x2
   140030ea6:	cmp    rax,QWORD PTR [rcx+0x40]
   140030eaa:	jbe    0x140030eb1
   140030eac:	call   0x140030960
   140030eb1:	mov    rax,QWORD PTR [rbx+0x38]
   140030eb5:	mov    WORD PTR [rax],di
   140030eb8:	add    QWORD PTR [rbx+0x38],0x2
   140030ebd:	jmp    0x140030fa5
   140030ec2:	test   al,0x1
   140030ec4:	jne    0x140030ed5
   140030ec6:	mov    rdx,QWORD PTR [rcx+0x18]
   140030eca:	mov    ecx,0x2
   140030ecf:	call   0x14003067c
   140030ed4:	int3   
   140030ed5:	mov    rax,QWORD PTR [rcx+0x38]
   140030ed9:	add    rax,0x2
   140030edd:	cmp    rax,QWORD PTR [rcx+0x40]
   140030ee1:	jbe    0x140030ee8
   140030ee3:	call   0x140030960
   140030ee8:	mov    rax,QWORD PTR [rbx+0x38]
   140030eec:	mov    ebp,0xffffffff
   140030ef1:	or     WORD PTR [rax],0xffff
   140030ef6:	add    QWORD PTR [rbx+0x38],0x2
   140030efb:	cmp    rdi,rbp
   140030efe:	mov    eax,DWORD PTR [rbx+0x20]
   140030f01:	mov    rcx,QWORD PTR [rbx+0x38]
   140030f05:	not    eax
   140030f07:	jae    0x140030f3b
   140030f09:	test   al,0x1
   140030f0b:	jne    0x140030f1c
   140030f0d:	mov    rdx,QWORD PTR [rbx+0x18]
   140030f11:	mov    ecx,0x2
   140030f16:	call   0x14003067c
   140030f1b:	int3   
   140030f1c:	lea    rax,[rcx+0x4]
   140030f20:	cmp    rax,QWORD PTR [rbx+0x40]
   140030f24:	jbe    0x140030f2e
   140030f26:	mov    rcx,rbx
   140030f29:	call   0x140030960
   140030f2e:	mov    rax,QWORD PTR [rbx+0x38]
   140030f32:	mov    DWORD PTR [rax],edi
   140030f34:	add    QWORD PTR [rbx+0x38],0x4
   140030f39:	jmp    0x140030fa5
   140030f3b:	test   al,0x1
   140030f3d:	jne    0x140030f4e
   140030f3f:	mov    rdx,QWORD PTR [rbx+0x18]
   140030f43:	mov    ecx,0x2
   140030f48:	call   0x14003067c
   140030f4d:	int3   
   140030f4e:	lea    rax,[rcx+0x4]
   140030f52:	cmp    rax,QWORD PTR [rbx+0x40]
   140030f56:	jbe    0x140030f60
   140030f58:	mov    rcx,rbx
   140030f5b:	call   0x140030960
   140030f60:	mov    rax,QWORD PTR [rbx+0x38]
   140030f64:	mov    DWORD PTR [rax],ebp
   140030f66:	add    QWORD PTR [rbx+0x38],0x4
   140030f6b:	mov    eax,DWORD PTR [rbx+0x20]
   140030f6e:	mov    rcx,QWORD PTR [rbx+0x38]
   140030f72:	not    eax
   140030f74:	test   al,0x1
   140030f76:	jne    0x140030f87
   140030f78:	mov    rdx,QWORD PTR [rbx+0x18]
   140030f7c:	mov    ecx,0x2
   140030f81:	call   0x14003067c
   140030f86:	int3   
   140030f87:	lea    rax,[rcx+0x8]
   140030f8b:	cmp    rax,QWORD PTR [rbx+0x40]
   140030f8f:	jbe    0x140030f99
   140030f91:	mov    rcx,rbx
   140030f94:	call   0x140030960
   140030f99:	mov    rax,QWORD PTR [rbx+0x38]
   140030f9d:	mov    QWORD PTR [rax],rdi
   140030fa0:	add    QWORD PTR [rbx+0x38],0x8
   140030fa5:	mov    rbx,QWORD PTR [rsp+0x30]
   140030faa:	mov    rbp,QWORD PTR [rsp+0x38]
   140030faf:	add    rsp,0x20
   140030fb3:	pop    rdi
   140030fb4:	ret    
   140030fb5:	int3   
   140030fb6:	int3   
   140030fb7:	int3   
   140030fb8:	rex push rbx
   140030fba:	sub    rsp,0x20
   140030fbe:	test   BYTE PTR [rcx+0x20],0x1
   140030fc2:	mov    rbx,rcx
   140030fc5:	jne    0x140030fd6
   140030fc7:	mov    rdx,QWORD PTR [rcx+0x18]
   140030fcb:	mov    ecx,0x4
   140030fd0:	call   0x14003067c
   140030fd5:	int3   
   140030fd6:	mov    rax,QWORD PTR [rcx+0x38]
   140030fda:	add    rax,0x2
   140030fde:	cmp    rax,QWORD PTR [rcx+0x40]
   140030fe2:	jbe    0x140030ff2
   140030fe4:	mov    edx,DWORD PTR [rcx+0x38]
   140030fe7:	sub    edx,DWORD PTR [rcx+0x40]
   140030fea:	add    edx,0x2
   140030fed:	call   0x140030a20
   140030ff2:	mov    rax,QWORD PTR [rbx+0x38]
   140030ff6:	movzx  ecx,WORD PTR [rax]
   140030ff9:	add    rax,0x2
   140030ffd:	cmp    cx,0xffff
   140031002:	mov    QWORD PTR [rbx+0x38],rax
   140031006:	je     0x140031010
   140031008:	movzx  eax,cx
   14003100b:	jmp    0x140031097
   140031010:	test   BYTE PTR [rbx+0x20],0x1
   140031014:	jne    0x140031025
   140031016:	mov    rdx,QWORD PTR [rbx+0x18]
   14003101a:	mov    ecx,0x4
   14003101f:	call   0x14003067c
   140031024:	int3   
   140031025:	add    rax,0x4
   140031029:	cmp    rax,QWORD PTR [rbx+0x40]
   14003102d:	jbe    0x140031040
   14003102f:	mov    edx,DWORD PTR [rbx+0x38]
   140031032:	mov    rcx,rbx
   140031035:	sub    edx,DWORD PTR [rbx+0x40]
   140031038:	add    edx,0x4
   14003103b:	call   0x140030a20
   140031040:	mov    rax,QWORD PTR [rbx+0x38]
   140031044:	mov    ecx,DWORD PTR [rax]
   140031046:	add    rax,0x4
   14003104a:	cmp    ecx,0xffffffff
   14003104d:	mov    QWORD PTR [rbx+0x38],rax
   140031051:	je     0x140031058
   140031053:	mov    rax,rcx
   140031056:	jmp    0x140031097
   140031058:	test   BYTE PTR [rbx+0x20],0x1
   14003105c:	jne    0x14003106d
   14003105e:	mov    rdx,QWORD PTR [rbx+0x18]
   140031062:	mov    ecx,0x4
   140031067:	call   0x14003067c
   14003106c:	int3   
   14003106d:	add    rax,0x8
   140031071:	cmp    rax,QWORD PTR [rbx+0x40]
   140031075:	jbe    0x140031088
   140031077:	mov    edx,DWORD PTR [rbx+0x38]
   14003107a:	mov    rcx,rbx
   14003107d:	sub    edx,DWORD PTR [rbx+0x40]
   140031080:	add    edx,0x8
   140031083:	call   0x140030a20
   140031088:	mov    rcx,QWORD PTR [rbx+0x38]
   14003108c:	mov    rax,QWORD PTR [rcx]
   14003108f:	add    rcx,0x8
   140031093:	mov    QWORD PTR [rbx+0x38],rcx
   140031097:	add    rsp,0x20
   14003109b:	pop    rbx
   14003109c:	ret    
   14003109d:	int3   
   14003109e:	int3   
   14003109f:	int3   
   1400310a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400310a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400310aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400310af:	push   rdi
   1400310b0:	sub    rsp,0x20
   1400310b4:	mov    rsi,rcx
   1400310b7:	mov    rcx,QWORD PTR [rcx]
   1400310ba:	mov    rbx,rdx
   1400310bd:	call   QWORD PTR [rip+0x3312d]        # 0x1400641f0
   1400310c3:	mov    r8d,DWORD PTR [rbx+0x20]
   1400310c7:	movzx  ebp,WORD PTR [rsi+0xc]
   1400310cb:	not    r8d
   1400310ce:	mov    edi,eax
   1400310d0:	test   r8b,0x1
   1400310d4:	jne    0x1400310e5
   1400310d6:	mov    rdx,QWORD PTR [rbx+0x18]
   1400310da:	mov    ecx,0x2
   1400310df:	call   0x14003067c
   1400310e4:	int3   
   1400310e5:	mov    rax,QWORD PTR [rbx+0x38]
   1400310e9:	add    rax,0x2
   1400310ed:	cmp    rax,QWORD PTR [rbx+0x40]
   1400310f1:	jbe    0x1400310fb
   1400310f3:	mov    rcx,rbx
   1400310f6:	call   0x140030960
   1400310fb:	mov    rax,QWORD PTR [rbx+0x38]
   1400310ff:	mov    WORD PTR [rax],bp
   140031102:	add    QWORD PTR [rbx+0x38],0x2
   140031107:	mov    eax,DWORD PTR [rbx+0x20]
   14003110a:	mov    rcx,QWORD PTR [rbx+0x38]
   14003110e:	not    eax
   140031110:	test   al,0x1
   140031112:	jne    0x140031123
   140031114:	mov    rdx,QWORD PTR [rbx+0x18]
   140031118:	mov    ecx,0x2
   14003111d:	call   0x14003067c
   140031122:	int3   
   140031123:	lea    rax,[rcx+0x2]
   140031127:	cmp    rax,QWORD PTR [rbx+0x40]
   14003112b:	jbe    0x140031135
   14003112d:	mov    rcx,rbx
   140031130:	call   0x140030960
   140031135:	mov    rax,QWORD PTR [rbx+0x38]
   140031139:	movzx  r8d,di
   14003113d:	mov    rcx,rbx
   140031140:	mov    WORD PTR [rax],di
   140031143:	add    QWORD PTR [rbx+0x38],0x2
   140031148:	mov    rdx,QWORD PTR [rsi]
   14003114b:	mov    rbx,QWORD PTR [rsp+0x30]
   140031150:	mov    rbp,QWORD PTR [rsp+0x38]
   140031155:	mov    rsi,QWORD PTR [rsp+0x40]
   14003115a:	add    rsp,0x20
   14003115e:	pop    rdi
   14003115f:	jmp    0x140030cec
   140031164:	mov    QWORD PTR [rsp+0x8],rcx
   140031169:	push   rbx
   14003116a:	sub    rsp,0x30
   14003116e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031177:	mov    rbx,rcx
   14003117a:	cmp    QWORD PTR [rcx+0x30],0x0
   14003117f:	je     0x140031191
   140031181:	test   BYTE PTR [rcx+0x20],0x2
   140031185:	jne    0x140031191
   140031187:	call   0x140030960
   14003118c:	and    QWORD PTR [rbx+0x30],0x0
   140031191:	mov    rcx,rbx
   140031194:	call   0x1400306f4
   140031199:	nop
   14003119a:	mov    rdx,QWORD PTR [rbx+0x18]
   14003119e:	sub    rdx,0x18
   1400311a2:	or     eax,0xffffffff
   1400311a5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400311aa:	add    eax,0xffffffff
   1400311ad:	test   eax,eax
   1400311af:	jg     0x1400311ba
   1400311b1:	mov    rcx,QWORD PTR [rdx]
   1400311b4:	mov    rax,QWORD PTR [rcx]
   1400311b7:	call   QWORD PTR [rax+0x8]
   1400311ba:	add    rsp,0x30
   1400311be:	pop    rbx
   1400311bf:	ret    
   1400311c0:	int3   
   1400311c1:	int3   
   1400311c2:	int3   
   1400311c3:	int3   
   1400311c4:	rex push rbp
   1400311c6:	sub    rsp,0x20
   1400311ca:	mov    rbp,rdx
   1400311cd:	mov    rcx,QWORD PTR [rbp+0x40]
   1400311d1:	add    rcx,0x18
   1400311d5:	call   0x1400010c0
   1400311da:	add    rsp,0x20
   1400311de:	pop    rbp
   1400311df:	ret    
   1400311e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400311e5:	push   rsi
   1400311e6:	push   rdi
   1400311e7:	push   r12
   1400311e9:	sub    rsp,0x40
   1400311ed:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400311f6:	mov    QWORD PTR [rsp+0x68],rbx
   1400311fb:	mov    QWORD PTR [rsp+0x70],rbp
   140031200:	mov    ebp,r9d
   140031203:	mov    r12d,r8d
   140031206:	mov    rdi,rdx
   140031209:	mov    rbx,rcx
   14003120c:	call   0x14002b874
   140031211:	mov    rcx,rax
   140031214:	xor    r10d,r10d
   140031217:	test   rax,rax
   14003121a:	setne  r10b
   14003121e:	test   r10d,r10d
   140031221:	jne    0x14003122e
   140031223:	mov    ecx,0x80004005
   140031228:	call   0x140001430
   14003122d:	int3   
   14003122e:	mov    rax,QWORD PTR [rax]
   140031231:	call   QWORD PTR [rax+0x18]
   140031234:	add    rax,0x18
   140031238:	mov    QWORD PTR [rbx+0x18],rax
   14003123c:	test   rdi,rdi
   14003123f:	jne    0x140031247
   140031241:	call   0x1400208f8
   140031246:	int3   
   140031247:	mov    rax,QWORD PTR [rdi]
   14003124a:	lea    rdx,[rsp+0x30]
   14003124f:	mov    rcx,rdi
   140031252:	call   QWORD PTR [rax+0x30]
   140031255:	nop
   140031256:	mov    rdx,rax
   140031259:	lea    rcx,[rbx+0x18]
   14003125d:	call   0x1400040f0
   140031262:	nop
   140031263:	mov    rdx,QWORD PTR [rsp+0x30]
   140031268:	add    rdx,0xffffffffffffffe8
   14003126c:	or     eax,0xffffffff
   14003126f:	lock xadd DWORD PTR [rdx+0x10],eax
   140031274:	add    eax,0xffffffff
   140031277:	test   eax,eax
   140031279:	jg     0x140031284
   14003127b:	mov    rcx,QWORD PTR [rdx]
   14003127e:	mov    rax,QWORD PTR [rcx]
   140031281:	call   QWORD PTR [rax+0x8]
   140031284:	mov    DWORD PTR [rbx+0x20],r12d
   140031288:	mov    QWORD PTR [rbx+0x30],rdi
   14003128c:	and    QWORD PTR [rbx+0x60],0x0
   140031291:	and    QWORD PTR [rbx+0x58],0x0
   140031296:	and    QWORD PTR [rbx],0x0
   14003129a:	mov    esi,0x1
   14003129f:	mov    DWORD PTR [rbx+0x8],esi
   1400312a2:	or     DWORD PTR [rbx+0x14],0xffffffff
   1400312a6:	not    r12b
   1400312a9:	and    r12b,sil
   1400312ac:	neg    r12b
   1400312af:	sbb    eax,eax
   1400312b1:	and    eax,0xffffffd0
   1400312b4:	add    eax,0x40
   1400312b7:	mov    DWORD PTR [rbx+0x68],eax
   1400312ba:	mov    DWORD PTR [rbx+0x6c],0x89
   1400312c1:	mov    rax,QWORD PTR [rsp+0x80]
   1400312c9:	mov    QWORD PTR [rbx+0x48],rax
   1400312cd:	mov    DWORD PTR [rbx+0x24],esi
   1400312d0:	and    DWORD PTR [rbx+0xc],0x0
   1400312d4:	mov    rax,QWORD PTR [rdi]
   1400312d7:	and    QWORD PTR [rsp+0x20],0x0
   1400312dd:	xor    r9d,r9d
   1400312e0:	xor    r8d,r8d
   1400312e3:	lea    r12d,[rsi+0x2]
   1400312e7:	mov    edx,r12d
   1400312ea:	mov    rcx,rdi
   1400312ed:	call   QWORD PTR [rax+0xa0]
   1400312f3:	and    eax,0x2
   1400312f6:	mov    DWORD PTR [rbx+0x10],eax
   1400312f9:	lea    eax,[rsi+0x7f]
   1400312fc:	cmp    ebp,eax
   1400312fe:	jge    0x14003130a
   140031300:	mov    DWORD PTR [rbx+0x28],eax
   140031303:	and    QWORD PTR [rbx+0x48],0x0
   140031308:	jmp    0x14003130d
   14003130a:	mov    DWORD PTR [rbx+0x28],ebp
   14003130d:	mov    edi,DWORD PTR [rbx+0x28]
   140031310:	cmp    QWORD PTR [rbx+0x48],0x0
   140031315:	jne    0x14003134f
   140031317:	mov    rcx,QWORD PTR [rbx+0x30]
   14003131b:	mov    rax,QWORD PTR [rcx]
   14003131e:	and    QWORD PTR [rsp+0x20],0x0
   140031324:	xor    r9d,r9d
   140031327:	xor    r8d,r8d
   14003132a:	mov    edx,r12d
   14003132d:	call   QWORD PTR [rax+0xa0]
   140031333:	and    eax,esi
   140031335:	mov    DWORD PTR [rbx+0xc],eax
   140031338:	jne    0x14003134d
   14003133a:	movsxd rcx,DWORD PTR [rbx+0x28]
   14003133e:	call   0x14001ac0c
   140031343:	mov    QWORD PTR [rbx+0x48],rax
   140031347:	and    DWORD PTR [rbx+0x24],0x0
   14003134b:	jmp    0x14003134f
   14003134d:	xor    edi,edi
   14003134f:	mov    rdx,QWORD PTR [rbx+0x48]
   140031353:	movsxd rcx,edi
   140031356:	add    rcx,rdx
   140031359:	mov    QWORD PTR [rbx+0x40],rcx
   14003135d:	test   BYTE PTR [rbx+0x20],sil
   140031361:	cmovne rdx,rcx
   140031365:	mov    QWORD PTR [rbx+0x38],rdx
   140031369:	mov    rax,rbx
   14003136c:	mov    rbx,QWORD PTR [rsp+0x68]
   140031371:	mov    rbp,QWORD PTR [rsp+0x70]
   140031376:	add    rsp,0x40
   14003137a:	pop    r12
   14003137c:	pop    rdi
   14003137d:	pop    rsi
   14003137e:	ret    
   14003137f:	int3   
   140031380:	rex push rbp
   140031382:	sub    rsp,0x20
   140031386:	mov    rbp,rdx
   140031389:	mov    rcx,QWORD PTR [rbp+0x60]
   14003138d:	add    rcx,0x18
   140031391:	call   0x1400010c0
   140031396:	add    rsp,0x20
   14003139a:	pop    rbp
   14003139b:	ret    
   14003139c:	int3   
   14003139d:	int3   
   14003139e:	int3   
   14003139f:	int3   
   1400313a0:	rex push rbp
   1400313a2:	sub    rsp,0x20
   1400313a6:	mov    rbp,rdx
   1400313a9:	lea    rcx,[rbp+0x30]
   1400313ad:	call   0x1400010c0
   1400313b2:	add    rsp,0x20
   1400313b6:	pop    rbp
   1400313b7:	ret    
   1400313b8:	lea    rax,[rip+0x3a4a1]        # 0x14006b860
   1400313bf:	ret    
   1400313c0:	lea    rax,[rip+0x3a4a9]        # 0x14006b870
   1400313c7:	ret    
   1400313c8:	sub    rsp,0x28
   1400313cc:	mov    rcx,QWORD PTR [rcx+0x8]
   1400313d0:	test   rcx,rcx
   1400313d3:	je     0x1400313e0
   1400313d5:	mov    rax,QWORD PTR [rcx]
   1400313d8:	mov    edx,0x1
   1400313dd:	call   QWORD PTR [rax+0x8]
   1400313e0:	add    rsp,0x28
   1400313e4:	ret    
   1400313e5:	int3   
   1400313e6:	int3   
   1400313e7:	int3   
   1400313e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400313ed:	push   rdi
   1400313ee:	sub    rsp,0x20
   1400313f2:	mov    rdi,rcx
   1400313f5:	mov    rcx,QWORD PTR [rcx+0xc8]
   1400313fc:	mov    rbx,rdx
   1400313ff:	test   rcx,rcx
   140031402:	je     0x140031416
   140031404:	cmp    rcx,rdx
   140031407:	je     0x140031416
   140031409:	mov    rcx,QWORD PTR [rcx+0x88]
   140031410:	mov    rax,QWORD PTR [rcx]
   140031413:	call   QWORD PTR [rax+0x30]
   140031416:	mov    QWORD PTR [rdi+0xc8],rbx
   14003141d:	mov    rbx,QWORD PTR [rsp+0x30]
   140031422:	add    rsp,0x20
   140031426:	pop    rdi
   140031427:	ret    
   140031428:	cmp    QWORD PTR [rcx+0xc8],rdx
   14003142f:	jne    0x140031439
   140031431:	and    QWORD PTR [rcx+0xc8],0x0
   140031439:	cmp    QWORD PTR [rcx+0xd8],rdx
   140031440:	jne    0x14003144a
   140031442:	and    QWORD PTR [rcx+0xd8],0x0
   14003144a:	ret    
   14003144b:	int3   
   14003144c:	cmp    edx,r8d
   14003144f:	jg     0x1400314a2
   140031451:	mov    QWORD PTR [rsp+0x8],rbx
   140031456:	mov    QWORD PTR [rsp+0x10],rbp
   14003145b:	mov    QWORD PTR [rsp+0x18],rsi
   140031460:	push   rdi
   140031461:	sub    rsp,0x20
   140031465:	mov    ebp,r9d
   140031468:	mov    edi,r8d
   14003146b:	mov    ebx,edx
   14003146d:	mov    rsi,rcx
   140031470:	mov    rax,QWORD PTR [rsi]
   140031473:	xor    r8d,r8d
   140031476:	cmp    ebx,ebp
   140031478:	mov    edx,ebx
   14003147a:	mov    rcx,rsi
   14003147d:	sete   r8b
   140031481:	call   QWORD PTR [rax+0xd0]
   140031487:	add    ebx,0x1
   14003148a:	cmp    ebx,edi
   14003148c:	jle    0x140031470
   14003148e:	mov    rbx,QWORD PTR [rsp+0x30]
   140031493:	mov    rbp,QWORD PTR [rsp+0x38]
   140031498:	mov    rsi,QWORD PTR [rsp+0x40]
   14003149d:	add    rsp,0x20
   1400314a1:	pop    rdi
   1400314a2:	ret    
   1400314a3:	int3   
   1400314a4:	sub    rsp,0x28
   1400314a8:	mov    rax,QWORD PTR [rcx]
   1400314ab:	lea    r8,[rsp+0x30]
   1400314b0:	call   QWORD PTR [rax+0xe0]
   1400314b6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400314bb:	call   0x1400256f0
   1400314c0:	add    rsp,0x28
   1400314c4:	ret    
   1400314c5:	int3   
   1400314c6:	int3   
   1400314c7:	int3   
   1400314c8:	rex push rbx
   1400314ca:	push   rsi
   1400314cb:	push   rdi
   1400314cc:	sub    rsp,0x230
   1400314d3:	mov    rax,QWORD PTR [rip+0x55896]        # 0x140086d70
   1400314da:	xor    rax,rsp
   1400314dd:	mov    QWORD PTR [rsp+0x220],rax
   1400314e5:	mov    rax,QWORD PTR [rcx]
   1400314e8:	mov    rdi,r8
   1400314eb:	mov    esi,r9d
   1400314ee:	lea    r8,[rsp+0x20]
   1400314f3:	mov    r9d,0x100
   1400314f9:	call   QWORD PTR [rax+0xf8]
   1400314ff:	test   eax,eax
   140031501:	jne    0x14003150e
   140031503:	test   rdi,rdi
   140031506:	je     0x14003150a
   140031508:	and    DWORD PTR [rdi],eax
   14003150a:	xor    eax,eax
   14003150c:	jmp    0x140031578
   14003150e:	movzx  ecx,WORD PTR [rsp+0x20]
   140031513:	lea    rbx,[rsp+0x20]
   140031518:	jmp    0x140031529
   14003151a:	mov    rcx,rbx
   14003151d:	call   QWORD PTR [rip+0x3356d]        # 0x140064a90
   140031523:	mov    rbx,rax
   140031526:	movzx  ecx,WORD PTR [rax]
   140031529:	call   0x140049fa0
   14003152e:	test   eax,eax
   140031530:	jne    0x14003151a
   140031532:	cmp    WORD PTR [rbx],0x2b
   140031536:	je     0x14003153e
   140031538:	cmp    WORD PTR [rbx],0x2d
   14003153c:	jne    0x14003154a
   14003153e:	mov    rcx,rbx
   140031541:	call   QWORD PTR [rip+0x33549]        # 0x140064a90
   140031547:	mov    rbx,rax
   14003154a:	movzx  ecx,WORD PTR [rbx]
   14003154d:	call   0x140049f90
   140031552:	test   rdi,rdi
   140031555:	je     0x140031559
   140031557:	mov    DWORD PTR [rdi],eax
   140031559:	test   eax,eax
   14003155b:	je     0x14003150a
   14003155d:	xor    edx,edx
   14003155f:	test   esi,esi
   140031561:	lea    rcx,[rsp+0x20]
   140031566:	lea    r8d,[rdx+0xa]
   14003156a:	je     0x140031573
   14003156c:	call   0x140047690
   140031571:	jmp    0x140031578
   140031573:	call   0x1400476d0
   140031578:	mov    rcx,QWORD PTR [rsp+0x220]
   140031580:	xor    rcx,rsp
   140031583:	call   0x140046470
   140031588:	add    rsp,0x230
   14003158f:	pop    rdi
   140031590:	pop    rsi
   140031591:	pop    rbx
   140031592:	ret    
   140031593:	int3   
   140031594:	mov    QWORD PTR [rsp+0x8],rbx
   140031599:	push   rdi
   14003159a:	sub    rsp,0x20
   14003159e:	mov    rax,QWORD PTR [rcx]
   1400315a1:	mov    ebx,r9d
   1400315a4:	mov    rdi,r8
   1400315a7:	call   QWORD PTR [rax+0xe8]
   1400315ad:	test   rax,rax
   1400315b0:	je     0x1400315c0
   1400315b2:	mov    r8d,ebx
   1400315b5:	mov    rdx,rdi
   1400315b8:	mov    rcx,rax
   1400315bb:	call   0x14002a0d0
   1400315c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400315c5:	add    rsp,0x20
   1400315c9:	pop    rdi
   1400315ca:	ret    
   1400315cb:	int3   
   1400315cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400315d1:	push   rdi
   1400315d2:	sub    rsp,0x80
   1400315d9:	mov    rax,QWORD PTR [rip+0x55790]        # 0x140086d70
   1400315e0:	xor    rax,rsp
   1400315e3:	mov    QWORD PTR [rsp+0x70],rax
   1400315e8:	mov    eax,r8d
   1400315eb:	mov    r8d,0x22
   1400315f1:	mov    edi,edx
   1400315f3:	mov    rbx,rcx
   1400315f6:	test   r9d,r9d
   1400315f9:	lea    rdx,[rsp+0x20]
   1400315fe:	lea    r9d,[r8-0x18]
   140031602:	mov    ecx,eax
   140031604:	je     0x140031635
   140031606:	call   0x140049c80
   14003160b:	test   eax,eax
   14003160d:	je     0x140031664
   14003160f:	cmp    eax,0xc
   140031612:	je     0x14003162f
   140031614:	cmp    eax,0x16
   140031617:	je     0x140031629
   140031619:	cmp    eax,0x22
   14003161c:	je     0x140031629
   14003161e:	cmp    eax,0x50
   140031621:	je     0x140031664
   140031623:	call   0x1400208f8
   140031628:	int3   
   140031629:	call   0x1400208f8
   14003162e:	int3   
   14003162f:	call   0x1400208b0
   140031634:	int3   
   140031635:	call   0x140049cc0
   14003163a:	test   eax,eax
   14003163c:	je     0x140031664
   14003163e:	cmp    eax,0xc
   140031641:	je     0x14003165e
   140031643:	cmp    eax,0x16
   140031646:	je     0x140031658
   140031648:	cmp    eax,0x22
   14003164b:	je     0x140031658
   14003164d:	cmp    eax,0x50
   140031650:	je     0x140031664
   140031652:	call   0x1400208f8
   140031657:	int3   
   140031658:	call   0x1400208f8
   14003165d:	int3   
   14003165e:	call   0x1400208b0
   140031663:	int3   
   140031664:	mov    rax,QWORD PTR [rbx]
   140031667:	lea    r8,[rsp+0x20]
   14003166c:	mov    edx,edi
   14003166e:	mov    rcx,rbx
   140031671:	call   QWORD PTR [rax+0x110]
   140031677:	mov    rcx,QWORD PTR [rsp+0x70]
   14003167c:	xor    rcx,rsp
   14003167f:	call   0x140046470
   140031684:	mov    rbx,QWORD PTR [rsp+0xa8]
   14003168c:	add    rsp,0x80
   140031693:	pop    rdi
   140031694:	ret    
   140031695:	int3   
   140031696:	int3   
   140031697:	int3   
   140031698:	rex push rbx
   14003169a:	sub    rsp,0x20
   14003169e:	mov    rax,QWORD PTR [rcx]
   1400316a1:	mov    rbx,r8
   1400316a4:	call   QWORD PTR [rax+0xe8]
   1400316aa:	test   rax,rax
   1400316ad:	je     0x1400316ba
   1400316af:	mov    rdx,rbx
   1400316b2:	mov    rcx,rax
   1400316b5:	call   0x140029a24
   1400316ba:	add    rsp,0x20
   1400316be:	pop    rbx
   1400316bf:	ret    
   1400316c0:	xor    eax,eax
   1400316c2:	cmp    QWORD PTR [rcx+0xd8],rax
   1400316c9:	setne  al
   1400316cc:	ret    
   1400316cd:	int3   
   1400316ce:	int3   
   1400316cf:	int3   
   1400316d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400316d5:	push   rdi
   1400316d6:	sub    rsp,0x20
   1400316da:	test   rdx,rdx
   1400316dd:	mov    rbx,rdx
   1400316e0:	mov    edi,ecx
   1400316e2:	je     0x140031707
   1400316e4:	mov    rcx,rbx
   1400316e7:	call   QWORD PTR [rip+0x33233]        # 0x140064920
   1400316ed:	cmp    eax,edi
   1400316ef:	je     0x140031707
   1400316f1:	mov    edx,0x2
   1400316f6:	mov    rcx,rbx
   1400316f9:	call   QWORD PTR [rip+0x33281]        # 0x140064980
   1400316ff:	test   rax,rax
   140031702:	mov    rbx,rax
   140031705:	jne    0x1400316e4
   140031707:	mov    rax,rbx
   14003170a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003170f:	add    rsp,0x20
   140031713:	pop    rdi
   140031714:	ret    
   140031715:	int3   
   140031716:	int3   
   140031717:	int3   
   140031718:	add    rcx,0xffffffffffffff18
   14003171f:	jmp    0x14003eabc
   140031724:	add    rcx,0xffffffffffffff18
   14003172b:	jmp    0x14003ea10
   140031730:	mov    rax,QWORD PTR [rcx-0xa8]
   140031737:	mov    rcx,QWORD PTR [rax+0x40]
   14003173b:	xor    eax,eax
   14003173d:	mov    QWORD PTR [rdx],rcx
   140031740:	ret    
   140031741:	int3   
   140031742:	int3   
   140031743:	int3   
   140031744:	mov    QWORD PTR [rsp+0x8],rbx
   140031749:	mov    QWORD PTR [rsp+0x10],rsi
   14003174e:	push   rdi
   14003174f:	sub    rsp,0x20
   140031753:	mov    rbx,QWORD PTR [rcx-0x20]
   140031757:	mov    rdi,rdx
   14003175a:	mov    rsi,rcx
   14003175d:	test   rbx,rbx
   140031760:	je     0x140031790
   140031762:	test   rdx,rdx
   140031765:	mov    rbx,QWORD PTR [rbx+0x90]
   14003176c:	je     0x140031777
   14003176e:	mov    rax,QWORD PTR [rdx]
   140031771:	mov    rcx,rdx
   140031774:	call   QWORD PTR [rax+0x8]
   140031777:	test   rbx,rbx
   14003177a:	mov    rax,QWORD PTR [rsi-0x20]
   14003177e:	mov    QWORD PTR [rax+0x90],rdi
   140031785:	je     0x140031790
   140031787:	mov    rax,QWORD PTR [rbx]
   14003178a:	mov    rcx,rbx
   14003178d:	call   QWORD PTR [rax+0x10]
   140031790:	mov    rbx,QWORD PTR [rsp+0x30]
   140031795:	mov    rsi,QWORD PTR [rsp+0x38]
   14003179a:	xor    eax,eax
   14003179c:	add    rsp,0x20
   1400317a0:	pop    rdi
   1400317a1:	ret    
   1400317a2:	int3   
   1400317a3:	int3   
   1400317a4:	lea    rax,[rip+0x3a0e5]        # 0x14006b890
   1400317ab:	ret    
   1400317ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400317b1:	push   rdi
   1400317b2:	sub    rsp,0x30
   1400317b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400317bf:	mov    QWORD PTR [rsp+0x48],rbx
   1400317c4:	mov    QWORD PTR [rsp+0x50],rsi
   1400317c9:	mov    rbx,rcx
   1400317cc:	lea    rax,[rip+0x3a0d5]        # 0x14006b8a8
   1400317d3:	mov    QWORD PTR [rcx],rax
   1400317d6:	xor    edi,edi
   1400317d8:	cmp    QWORD PTR [rcx+0x48],rdi
   1400317dc:	jne    0x1400317fc
   1400317de:	mov    rsi,QWORD PTR [rcx+0x50]
   1400317e2:	cmp    DWORD PTR [rcx+0x5c],edi
   1400317e5:	jbe    0x1400317fc
   1400317e7:	mov    rcx,QWORD PTR [rsi]
   1400317ea:	mov    rax,QWORD PTR [rcx]
   1400317ed:	call   QWORD PTR [rax+0x10]
   1400317f0:	add    edi,0x1
   1400317f3:	add    rsi,0x8
   1400317f7:	cmp    edi,DWORD PTR [rbx+0x5c]
   1400317fa:	jb     0x1400317e7
   1400317fc:	mov    rcx,rbx
   1400317ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140031804:	mov    rsi,QWORD PTR [rsp+0x50]
   140031809:	add    rsp,0x30
   14003180d:	pop    rdi
   14003180e:	jmp    0x140041f30
   140031813:	int3   
   140031814:	int3   
   140031815:	int3   
   140031816:	int3   
   140031817:	int3   
   140031818:	int3   
   140031819:	int3   
   14003181a:	int3   
   14003181b:	int3   
   14003181c:	rex push rbp
   14003181e:	sub    rsp,0x20
   140031822:	mov    rbp,rdx
   140031825:	mov    rcx,QWORD PTR [rbp+0x40]
   140031829:	call   0x140041f30
   14003182e:	add    rsp,0x20
   140031832:	pop    rbp
   140031833:	ret    
   140031834:	rex push rbx
   140031836:	sub    rsp,0x20
   14003183a:	mov    rbx,rdx
   14003183d:	call   0x140042014
   140031842:	test   eax,eax
   140031844:	je     0x140031854
   140031846:	mov    rcx,QWORD PTR [rbx]
   140031849:	mov    rax,QWORD PTR [rcx]
   14003184c:	call   QWORD PTR [rax+0x8]
   14003184f:	mov    eax,0x1
   140031854:	add    rsp,0x20
   140031858:	pop    rbx
   140031859:	ret    
   14003185a:	int3   
   14003185b:	int3   
   14003185c:	add    rcx,0xffffffffffffff10
   140031863:	jmp    0x14003eabc
   140031868:	add    rcx,0xffffffffffffff10
   14003186f:	jmp    0x14003ea10
   140031874:	and    QWORD PTR [rcx+0x8],0x0
   140031879:	mov    DWORD PTR [rcx],0x2
   14003187f:	mov    rax,rcx
   140031882:	ret    
   140031883:	int3   
   140031884:	xor    eax,eax
   140031886:	cmp    DWORD PTR [rcx],0x2
   140031889:	setne  al
   14003188c:	ret    
   14003188d:	int3   
   14003188e:	int3   
   14003188f:	int3   
   140031890:	mov    QWORD PTR [rsp+0x10],rdx
   140031895:	sub    rsp,0x38
   140031899:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400318a2:	call   0x14003ed58
   1400318a7:	nop
   1400318a8:	add    rsp,0x38
   1400318ac:	ret    
   1400318ad:	int3   
   1400318ae:	int3   
   1400318af:	int3   
   1400318b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400318b5:	push   rbx
   1400318b6:	push   rbp
   1400318b7:	sub    rsp,0x28
   1400318bb:	mov    rbp,rdx
   1400318be:	mov    rbx,QWORD PTR [rbp+0x48]
   1400318c2:	test   rbx,rbx
   1400318c5:	je     0x1400318e3
   1400318c7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400318cb:	test   rcx,rcx
   1400318ce:	je     0x1400318db
   1400318d0:	mov    rax,QWORD PTR [rcx]
   1400318d3:	mov    edx,0x1
   1400318d8:	call   QWORD PTR [rax+0x8]
   1400318db:	mov    rcx,rbx
   1400318de:	call   0x14001ac50
   1400318e3:	xor    edx,edx
   1400318e5:	xor    ecx,ecx
   1400318e7:	call   0x140048db0
   1400318ec:	nop
   1400318ed:	add    rsp,0x28
   1400318f1:	pop    rbp
   1400318f2:	pop    rbx
   1400318f3:	ret    
   1400318f4:	int3   
   1400318f5:	int3   
   1400318f6:	int3   
   1400318f7:	int3   
   1400318f8:	mov    QWORD PTR [rsp+0x18],r8
   1400318fd:	sub    rsp,0x38
   140031901:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003190a:	call   0x14003ed9c
   14003190f:	nop
   140031910:	add    rsp,0x38
   140031914:	ret    
   140031915:	int3   
   140031916:	int3   
   140031917:	int3   
   140031918:	mov    QWORD PTR [rsp+0x10],rdx
   14003191d:	push   rbx
   14003191e:	push   rbp
   14003191f:	sub    rsp,0x28
   140031923:	mov    rbp,rdx
   140031926:	mov    rbx,QWORD PTR [rbp+0x50]
   14003192a:	test   rbx,rbx
   14003192d:	je     0x14003194b
   14003192f:	mov    rcx,QWORD PTR [rbx+0x8]
   140031933:	test   rcx,rcx
   140031936:	je     0x140031943
   140031938:	mov    rax,QWORD PTR [rcx]
   14003193b:	mov    edx,0x1
   140031940:	call   QWORD PTR [rax+0x8]
   140031943:	mov    rcx,rbx
   140031946:	call   0x14001ac50
   14003194b:	xor    edx,edx
   14003194d:	xor    ecx,ecx
   14003194f:	call   0x140048db0
   140031954:	nop
   140031955:	add    rsp,0x28
   140031959:	pop    rbp
   14003195a:	pop    rbx
   14003195b:	ret    
   14003195c:	int3   
   14003195d:	int3   
   14003195e:	int3   
   14003195f:	int3   
   140031960:	sub    rsp,0x28
   140031964:	mov    rcx,QWORD PTR [rcx]
   140031967:	test   rcx,rcx
   14003196a:	je     0x140031972
   14003196c:	mov    rax,QWORD PTR [rcx]
   14003196f:	call   QWORD PTR [rax+0x10]
   140031972:	add    rsp,0x28
   140031976:	ret    
   140031977:	int3   
   140031978:	mov    DWORD PTR [rsp+0x10],edx
   14003197c:	mov    QWORD PTR [rsp+0x8],rcx
   140031981:	push   rsi
   140031982:	push   rdi
   140031983:	push   r12
   140031985:	sub    rsp,0x30
   140031989:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031992:	mov    QWORD PTR [rsp+0x60],rbx
   140031997:	mov    r12d,edx
   14003199a:	mov    rsi,rcx
   14003199d:	xor    edi,edi
   14003199f:	cmp    QWORD PTR [rcx+0x98],rdi
   1400319a6:	jne    0x140031a17
   1400319a8:	mov    rax,QWORD PTR [rcx]
   1400319ab:	lea    rdx,[rcx+0x98]
   1400319b2:	call   QWORD PTR [rax+0x248]
   1400319b8:	cmp    eax,edi
   1400319ba:	je     0x1400319ec
   1400319bc:	cmp    QWORD PTR [rsi+0x98],rdi
   1400319c3:	jne    0x1400319ec
   1400319c5:	call   0x140021a70
   1400319ca:	mov    rcx,QWORD PTR [rax+0x68]
   1400319ce:	mov    rax,QWORD PTR [rcx]
   1400319d1:	mov    rdx,rsi
   1400319d4:	call   QWORD PTR [rax+0x10]
   1400319d7:	mov    QWORD PTR [rsi+0x98],rax
   1400319de:	jmp    0x1400319ec
   1400319e0:	xor    edi,edi
   1400319e2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400319e7:	mov    r12d,DWORD PTR [rsp+0x58]
   1400319ec:	cmp    r12d,edi
   1400319ef:	jne    0x140031a17
   1400319f1:	mov    rax,QWORD PTR [rsi+0x98]
   1400319f8:	mov    rbx,QWORD PTR [rax]
   1400319fb:	mov    rax,QWORD PTR [rsi]
   1400319fe:	mov    rcx,rsi
   140031a01:	call   QWORD PTR [rax+0x260]
   140031a07:	mov    rdx,rax
   140031a0a:	mov    rcx,QWORD PTR [rsi+0x98]
   140031a11:	call   QWORD PTR [rbx+0x140]
   140031a17:	lea    rbx,[rsi+0x98]
   140031a1e:	cmp    QWORD PTR [rbx],rdi
   140031a21:	je     0x140031a6c
   140031a23:	mov    eax,DWORD PTR [rsi+0x78]
   140031a26:	bt     eax,0x8
   140031a2a:	jb     0x140031a6c
   140031a2c:	bts    eax,0x8
   140031a30:	mov    DWORD PTR [rsi+0x78],eax
   140031a33:	mov    rcx,QWORD PTR [rsi+0x40]
   140031a37:	call   QWORD PTR [rip+0x330a3]        # 0x140064ae0
   140031a3d:	mov    rcx,rax
   140031a40:	call   0x1400256f0
   140031a45:	mov    rsi,rax
   140031a48:	cmp    rax,rdi
   140031a4b:	jne    0x140031a52
   140031a4d:	mov    rcx,rdi
   140031a50:	jmp    0x140031a56
   140031a52:	mov    rcx,QWORD PTR [rax+0x40]
   140031a56:	mov    edx,0xfffffff0
   140031a5b:	call   QWORD PTR [rip+0x32f9f]        # 0x140064a00
   140031a61:	bt     eax,0x1e
   140031a65:	jae    0x140031a6c
   140031a67:	cmp    rsi,rdi
   140031a6a:	jne    0x140031a23
   140031a6c:	cmp    QWORD PTR [rbx],rdi
   140031a6f:	setne  dil
   140031a73:	mov    eax,edi
   140031a75:	mov    rbx,QWORD PTR [rsp+0x60]
   140031a7a:	add    rsp,0x30
   140031a7e:	pop    r12
   140031a80:	pop    rdi
   140031a81:	pop    rsi
   140031a82:	ret    
   140031a83:	int3   
   140031a84:	int3   
   140031a85:	int3   
   140031a86:	int3   
   140031a87:	int3   
   140031a88:	mov    QWORD PTR [rsp+0x10],rdx
   140031a8d:	push   rbp
   140031a8e:	sub    rsp,0x20
   140031a92:	mov    rbp,rdx
   140031a95:	mov    rcx,QWORD PTR [rbp+0x28]
   140031a99:	call   0x1400207b8
   140031a9e:	nop
   140031a9f:	lea    rax,[rip+0xffffffffffffff3a]        # 0x1400319e0
   140031aa6:	jmp    0x140031aa8
   140031aa8:	add    rsp,0x20
   140031aac:	pop    rbp
   140031aad:	ret    
   140031aae:	int3   
   140031aaf:	int3   
   140031ab0:	jmp    0x14003ec7c
   140031ab5:	int3   
   140031ab6:	int3   
   140031ab7:	int3   
   140031ab8:	mov    r11,rsp
   140031abb:	mov    QWORD PTR [r11+0x20],r9
   140031abf:	mov    QWORD PTR [r11+0x18],r8
   140031ac3:	mov    QWORD PTR [r11+0x10],rdx
   140031ac7:	mov    QWORD PTR [r11+0x8],rcx
   140031acb:	push   rsi
   140031acc:	push   rdi
   140031acd:	push   r12
   140031acf:	push   r13
   140031ad1:	push   r14
   140031ad3:	sub    rsp,0x80
   140031ada:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140031ae3:	mov    rdi,r9
   140031ae6:	mov    r12,r8
   140031ae9:	mov    r13,rdx
   140031aec:	mov    rsi,rcx
   140031aef:	and    QWORD PTR [r11-0x48],0x0
   140031af4:	mov    rcx,QWORD PTR [rcx+0x40]
   140031af8:	mov    rax,QWORD PTR [rcx]
   140031afb:	mov    QWORD PTR [rsp+0x20],r8
   140031b00:	mov    r14d,DWORD PTR [rsp+0xf0]
   140031b08:	mov    r9d,r14d
   140031b0b:	lea    r8,[r11-0x48]
   140031b0f:	mov    rdx,rsi
   140031b12:	call   QWORD PTR [rax+0x250]
   140031b18:	test   eax,eax
   140031b1a:	je     0x140031b5c
   140031b1c:	mov    rcx,QWORD PTR [rsp+0x60]
   140031b21:	test   rcx,rcx
   140031b24:	jne    0x140031b61
   140031b26:	call   0x140021a70
   140031b2b:	xor    ecx,ecx
   140031b2d:	cmp    QWORD PTR [rax+0x68],rcx
   140031b31:	setne  cl
   140031b34:	test   ecx,ecx
   140031b36:	jne    0x140031b3d
   140031b38:	call   0x1400208f8
   140031b3d:	call   0x140021a70
   140031b42:	mov    rcx,QWORD PTR [rax+0x68]
   140031b46:	mov    rax,QWORD PTR [rcx]
   140031b49:	mov    r8,rdi
   140031b4c:	mov    rdx,rsi
   140031b4f:	call   QWORD PTR [rax+0x18]
   140031b52:	mov    rcx,rax
   140031b55:	mov    QWORD PTR [rsp+0x60],rax
   140031b5a:	jmp    0x140031b61
   140031b5c:	mov    rcx,QWORD PTR [rsp+0x60]
   140031b61:	jmp    0x140031b90
   140031b63:	mov    rsi,QWORD PTR [rsp+0xb0]
   140031b6b:	mov    r14d,DWORD PTR [rsp+0xf0]
   140031b73:	mov    rdi,QWORD PTR [rsp+0xc8]
   140031b7b:	mov    r12,QWORD PTR [rsp+0xc0]
   140031b83:	mov    r13,QWORD PTR [rsp+0xb8]
   140031b8b:	mov    rcx,QWORD PTR [rsp+0x60]
   140031b90:	test   rcx,rcx
   140031b93:	jne    0x140031b9c
   140031b95:	xor    eax,eax
   140031b97:	jmp    0x140031cd2
   140031b9c:	cmp    DWORD PTR [rdi],0x2
   140031b9f:	je     0x140031bde
   140031ba1:	mov    DWORD PTR [rsp+0x30],r14d
   140031ba6:	mov    rax,QWORD PTR [rsp+0xe8]
   140031bae:	mov    QWORD PTR [rsp+0x28],rax
   140031bb3:	mov    rax,QWORD PTR [rsp+0xe0]
   140031bbb:	mov    QWORD PTR [rsp+0x20],rax
   140031bc0:	mov    r9d,DWORD PTR [rsp+0xd8]
   140031bc8:	mov    r8,rdi
   140031bcb:	mov    rdx,r13
   140031bce:	call   0x1400335e0
   140031bd3:	xor    r12d,r12d
   140031bd6:	test   eax,eax
   140031bd8:	setns  r12b
   140031bdc:	jmp    0x140031c4e
   140031bde:	mov    r10,QWORD PTR [rcx]
   140031be1:	mov    rax,QWORD PTR [rsp+0x108]
   140031be9:	mov    QWORD PTR [rsp+0x50],rax
   140031bee:	mov    eax,DWORD PTR [rsp+0x100]
   140031bf5:	mov    DWORD PTR [rsp+0x48],eax
   140031bf9:	mov    rax,QWORD PTR [rsp+0xf8]
   140031c01:	mov    QWORD PTR [rsp+0x40],rax
   140031c06:	mov    DWORD PTR [rsp+0x38],r14d
   140031c0b:	mov    rax,QWORD PTR [rsp+0xe8]
   140031c13:	mov    QWORD PTR [rsp+0x30],rax
   140031c18:	mov    rax,QWORD PTR [rsp+0xe0]
   140031c20:	mov    QWORD PTR [rsp+0x28],rax
   140031c25:	mov    eax,DWORD PTR [rsp+0xd8]
   140031c2c:	mov    DWORD PTR [rsp+0x20],eax
   140031c30:	mov    r9,QWORD PTR [rsp+0xd0]
   140031c38:	mov    r8,r12
   140031c3b:	mov    rdx,r13
   140031c3e:	call   QWORD PTR [r10+0xa0]
   140031c45:	xor    r12d,r12d
   140031c48:	test   eax,eax
   140031c4a:	setns  r12b
   140031c4e:	test   r12d,r12d
   140031c51:	je     0x140031cb9
   140031c53:	mov    ecx,0x18
   140031c58:	call   0x14001ac0c
   140031c5d:	mov    rdx,rax
   140031c60:	test   rax,rax
   140031c63:	je     0x140031c78
   140031c65:	mov    rax,QWORD PTR [rsp+0x60]
   140031c6a:	and    QWORD PTR [rdx],0x0
   140031c6e:	mov    QWORD PTR [rdx+0x8],rax
   140031c72:	and    DWORD PTR [rdx+0x10],0x0
   140031c76:	jmp    0x140031c7a
   140031c78:	xor    edx,edx
   140031c7a:	lea    rcx,[rsi+0x80]
   140031c81:	call   0x14003ed58
   140031c86:	mov    rdi,QWORD PTR [rsp+0x60]
   140031c8b:	cmp    QWORD PTR [rdi+0x48],0x0
   140031c90:	je     0x140031ca7
   140031c92:	lea    rcx,[rsi+0x48]
   140031c96:	mov    rdx,QWORD PTR [rdi+0x48]
   140031c9a:	call   0x14002fac8
   140031c9f:	mov    QWORD PTR [rax],rdi
   140031ca2:	mov    rdi,QWORD PTR [rsp+0x60]
   140031ca7:	mov    rax,QWORD PTR [rsp+0x110]
   140031caf:	test   rax,rax
   140031cb2:	je     0x140031ccf
   140031cb4:	mov    QWORD PTR [rax],rdi
   140031cb7:	jmp    0x140031ccf
   140031cb9:	mov    rcx,QWORD PTR [rsp+0x60]
   140031cbe:	test   rcx,rcx
   140031cc1:	je     0x140031ccf
   140031cc3:	mov    r8,QWORD PTR [rcx]
   140031cc6:	mov    edx,0x1
   140031ccb:	call   QWORD PTR [r8+0x8]
   140031ccf:	mov    eax,r12d
   140031cd2:	add    rsp,0x80
   140031cd9:	pop    r14
   140031cdb:	pop    r13
   140031cdd:	pop    r12
   140031cdf:	pop    rdi
   140031ce0:	pop    rsi
   140031ce1:	ret    
   140031ce2:	int3   
   140031ce3:	int3   
   140031ce4:	int3   
   140031ce5:	int3   
   140031ce6:	int3   
   140031ce7:	int3   
   140031ce8:	mov    QWORD PTR [rsp+0x10],rdx
   140031ced:	push   rbp
   140031cee:	sub    rsp,0x60
   140031cf2:	mov    rbp,rdx
   140031cf5:	mov    rcx,QWORD PTR [rbp+0x70]
   140031cf9:	call   0x1400207b8
   140031cfe:	nop
   140031cff:	lea    rax,[rip+0xfffffffffffffe5d]        # 0x140031b63
   140031d06:	jmp    0x140031d08
   140031d08:	add    rsp,0x60
   140031d0c:	pop    rbp
   140031d0d:	ret    
   140031d0e:	int3   
   140031d0f:	int3   
   140031d10:	rex push rbx
   140031d12:	push   rdi
   140031d13:	sub    rsp,0xa8
   140031d1a:	mov    rax,QWORD PTR [rip+0x5504f]        # 0x140086d70
   140031d21:	xor    rax,rsp
   140031d24:	mov    QWORD PTR [rsp+0x90],rax
   140031d2c:	mov    rax,QWORD PTR [rsp+0x118]
   140031d34:	mov    r10,QWORD PTR [rsp+0x110]
   140031d3c:	mov    r11,QWORD PTR [rsp+0x100]
   140031d44:	movdqu xmm0,XMMWORD PTR [r8]
   140031d49:	movdqu XMMWORD PTR [rsp+0x80],xmm0
   140031d52:	and    QWORD PTR [rsp+0x78],0x0
   140031d58:	mov    QWORD PTR [rsp+0x60],rax
   140031d5d:	mov    eax,DWORD PTR [rsp+0x108]
   140031d64:	mov    QWORD PTR [rsp+0x58],r10
   140031d69:	mov    DWORD PTR [rsp+0x50],eax
   140031d6d:	mov    eax,DWORD PTR [rsp+0xf8]
   140031d74:	mov    QWORD PTR [rsp+0x48],r11
   140031d79:	mov    DWORD PTR [rsp+0x40],eax
   140031d7d:	mov    eax,DWORD PTR [rsp+0xe0]
   140031d84:	mov    rbx,rcx
   140031d87:	mov    rcx,QWORD PTR [rsp+0xf0]
   140031d8f:	mov    rdi,rdx
   140031d92:	mov    rdx,QWORD PTR [rsp+0xe8]
   140031d9a:	mov    QWORD PTR [rsp+0x38],rcx
   140031d9f:	mov    rcx,rbx
   140031da2:	mov    QWORD PTR [rsp+0x30],rdx
   140031da7:	mov    DWORD PTR [rsp+0x28],eax
   140031dab:	mov    QWORD PTR [rsp+0x20],r9
   140031db0:	lea    r9,[rsp+0x70]
   140031db5:	mov    rdx,rdi
   140031db8:	mov    DWORD PTR [rsp+0x70],0x2
   140031dc0:	call   0x140031ab8
   140031dc5:	mov    rcx,QWORD PTR [rsp+0x90]
   140031dcd:	xor    rcx,rsp
   140031dd0:	call   0x140046470
   140031dd5:	add    rsp,0xa8
   140031ddc:	pop    rdi
   140031ddd:	pop    rbx
   140031dde:	ret    
   140031ddf:	int3   
   140031de0:	rex push rbx
   140031de2:	sub    rsp,0x20
   140031de6:	mov    rax,QWORD PTR [rcx]
   140031de9:	mov    ebx,r8d
   140031dec:	call   QWORD PTR [rax+0xe8]
   140031df2:	test   rax,rax
   140031df5:	je     0x140031e31
   140031df7:	cmp    QWORD PTR [rax+0xa0],0x0
   140031dff:	jne    0x140031e18
   140031e01:	mov    rcx,QWORD PTR [rax+0x40]
   140031e05:	mov    r8,rbx
   140031e08:	xor    r9d,r9d
   140031e0b:	mov    edx,0xf1
   140031e10:	call   QWORD PTR [rip+0x32d5a]        # 0x140064b70
   140031e16:	jmp    0x140031e31
   140031e18:	mov    rcx,QWORD PTR [rax+0xa0]
   140031e1f:	xor    edx,edx
   140031e21:	mov    r9d,ebx
   140031e24:	mov    rax,QWORD PTR [rcx]
   140031e27:	lea    r8d,[rdx+0x3]
   140031e2b:	call   QWORD PTR [rax+0xe8]
   140031e31:	add    rsp,0x20
   140031e35:	pop    rbx
   140031e36:	ret    
   140031e37:	int3   
   140031e38:	mov    QWORD PTR [rsp+0x8],rbx
   140031e3d:	mov    QWORD PTR [rsp+0x10],rbp
   140031e42:	mov    QWORD PTR [rsp+0x18],rsi
   140031e47:	push   rdi
   140031e48:	sub    rsp,0x20
   140031e4c:	mov    rsi,rcx
   140031e4f:	mov    rcx,QWORD PTR [rcx+0x40]
   140031e53:	mov    rdi,r8
   140031e56:	test   rcx,rcx
   140031e59:	mov    ebp,edx
   140031e5b:	je     0x140031e61
   140031e5d:	mov    rcx,QWORD PTR [rcx+0x40]
   140031e61:	call   QWORD PTR [rip+0x32b79]        # 0x1400649e0
   140031e67:	test   rax,rax
   140031e6a:	mov    rbx,rax
   140031e6d:	jne    0x140031e87
   140031e6f:	mov    r8,QWORD PTR [rsi]
   140031e72:	mov    edx,ebp
   140031e74:	mov    rcx,rsi
   140031e77:	call   QWORD PTR [r8+0xa8]
   140031e7e:	test   rax,rax
   140031e81:	je     0x140031e87
   140031e83:	mov    rbx,QWORD PTR [rax+0x48]
   140031e87:	mov    rbp,QWORD PTR [rsp+0x38]
   140031e8c:	mov    rsi,QWORD PTR [rsp+0x40]
   140031e91:	mov    QWORD PTR [rdi],rbx
   140031e94:	mov    rbx,QWORD PTR [rsp+0x30]
   140031e99:	add    rsp,0x20
   140031e9d:	pop    rdi
   140031e9e:	ret    
   140031e9f:	int3   
   140031ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140031ea5:	push   rdi
   140031ea6:	sub    rsp,0x20
   140031eaa:	mov    rax,QWORD PTR [rcx]
   140031ead:	mov    rbx,r9
   140031eb0:	mov    edi,r8d
   140031eb3:	call   QWORD PTR [rax+0xe8]
   140031eb9:	test   rax,rax
   140031ebc:	je     0x140031ed2
   140031ebe:	mov    r9,QWORD PTR [rsp+0x50]
   140031ec3:	mov    rcx,QWORD PTR [rax+0x40]
   140031ec7:	mov    r8,rbx
   140031eca:	mov    edx,edi
   140031ecc:	call   QWORD PTR [rip+0x32c9e]        # 0x140064b70
   140031ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140031ed7:	add    rsp,0x20
   140031edb:	pop    rdi
   140031edc:	ret    
   140031edd:	int3   
   140031ede:	int3   
   140031edf:	int3   
   140031ee0:	sub    rsp,0x38
   140031ee4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031eed:	mov    rax,QWORD PTR [rcx]
   140031ef0:	call   QWORD PTR [rax+0xe8]
   140031ef6:	test   rax,rax
   140031ef9:	je     0x140031f42
   140031efb:	cmp    QWORD PTR [rax+0xa0],0x0
   140031f03:	jne    0x140031f1c
   140031f05:	xor    r9d,r9d
   140031f08:	xor    r8d,r8d
   140031f0b:	mov    edx,0xf0
   140031f10:	mov    rcx,QWORD PTR [rax+0x40]
   140031f14:	call   QWORD PTR [rip+0x32c56]        # 0x140064b70
   140031f1a:	jmp    0x140031f42
   140031f1c:	lea    r9,[rsp+0x40]
   140031f21:	mov    r8w,0x3
   140031f26:	xor    edx,edx
   140031f28:	mov    rcx,rax
   140031f2b:	call   0x140029c10
   140031f30:	nop
   140031f31:	mov    eax,DWORD PTR [rsp+0x40]
   140031f35:	mov    ecx,0x1
   140031f3a:	cmp    eax,0xffff
   140031f3f:	cmove  eax,ecx
   140031f42:	add    rsp,0x38
   140031f46:	ret    
   140031f47:	int3   
   140031f48:	int3   
   140031f49:	int3   
   140031f4a:	int3   
   140031f4b:	int3   
   140031f4c:	int3   
   140031f4d:	int3   
   140031f4e:	int3   
   140031f4f:	int3   
   140031f50:	mov    QWORD PTR [rsp+0x10],rdx
   140031f55:	push   rbp
   140031f56:	sub    rsp,0x20
   140031f5a:	mov    rbp,rdx
   140031f5d:	mov    rcx,QWORD PTR [rbp+0x28]
   140031f61:	test   rcx,rcx
   140031f64:	je     0x140031f6b
   140031f66:	call   0x1400207b8
   140031f6b:	and    DWORD PTR [rbp+0x40],0x0
   140031f6f:	lea    rax,[rip+0xffffffffffffffbb]        # 0x140031f31
   140031f76:	jmp    0x140031f78
   140031f78:	add    rsp,0x20
   140031f7c:	pop    rbp
   140031f7d:	ret    
   140031f7e:	int3   
   140031f7f:	int3   
   140031f80:	mov    eax,0x1
   140031f85:	lock xadd DWORD PTR [rcx-0xe0],eax
   140031f8d:	add    eax,0x1
   140031f90:	ret    
   140031f91:	int3   
   140031f92:	int3   
   140031f93:	int3   
   140031f94:	mov    QWORD PTR [rsp+0x8],rbx
   140031f99:	push   rdi
   140031f9a:	sub    rsp,0x20
   140031f9e:	mov    ebx,edx
   140031fa0:	mov    rdi,rcx
   140031fa3:	call   0x1400317ac
   140031fa8:	test   bl,0x1
   140031fab:	je     0x140031fb5
   140031fad:	mov    rcx,rdi
   140031fb0:	call   0x14001ac50
   140031fb5:	mov    rax,rdi
   140031fb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140031fbd:	add    rsp,0x20
   140031fc1:	pop    rdi
   140031fc2:	ret    
   140031fc3:	int3   
   140031fc4:	mov    eax,0x1
   140031fc9:	lock xadd DWORD PTR [rcx-0xe8],eax
   140031fd1:	add    eax,0x1
   140031fd4:	ret    
   140031fd5:	int3   
   140031fd6:	int3   
   140031fd7:	int3   
   140031fd8:	mov    QWORD PTR [rsp+0x8],rbx
   140031fdd:	push   rdi
   140031fde:	sub    rsp,0x20
   140031fe2:	mov    ebx,edx
   140031fe4:	mov    rdi,rcx
   140031fe7:	call   0x14003ec7c
   140031fec:	test   bl,0x1
   140031fef:	je     0x140031ff9
   140031ff1:	mov    rcx,rdi
   140031ff4:	call   0x14001ac50
   140031ff9:	mov    rax,rdi
   140031ffc:	mov    rbx,QWORD PTR [rsp+0x30]
   140032001:	add    rsp,0x20
   140032005:	pop    rdi
   140032006:	ret    
   140032007:	int3   
   140032008:	mov    QWORD PTR [rsp+0x8],rcx
   14003200d:	push   rdi
   14003200e:	sub    rsp,0x30
   140032012:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003201b:	mov    QWORD PTR [rsp+0x50],rbx
   140032020:	mov    QWORD PTR [rsp+0x58],rsi
   140032025:	mov    rbx,rcx
   140032028:	lea    rax,[rip+0x39a79]        # 0x14006baa8
   14003202f:	mov    QWORD PTR [rcx],rax
   140032032:	mov    rdi,QWORD PTR [rcx+0x88]
   140032039:	test   rdi,rdi
   14003203c:	je     0x14003209d
   14003203e:	mov    rdx,rdi
   140032041:	mov    rsi,rdi
   140032044:	test   rdi,rdi
   140032047:	je     0x140032097
   140032049:	mov    rdi,QWORD PTR [rdi]
   14003204c:	mov    rsi,QWORD PTR [rsi+0x10]
   140032050:	test   rsi,rsi
   140032053:	je     0x140032090
   140032055:	mov    rax,QWORD PTR [rsi+0x8]
   140032059:	test   rax,rax
   14003205c:	je     0x140032090
   14003205e:	cmp    QWORD PTR [rax+0xd8],0x0
   140032066:	jne    0x140032090
   140032068:	lea    rcx,[rbx+0x80]
   14003206f:	call   0x14003ebe0
   140032074:	mov    rcx,QWORD PTR [rsi+0x8]
   140032078:	test   rcx,rcx
   14003207b:	je     0x140032088
   14003207d:	mov    rax,QWORD PTR [rcx]
   140032080:	mov    edx,0x1
   140032085:	call   QWORD PTR [rax+0x8]
   140032088:	mov    rcx,rsi
   14003208b:	call   0x14001ac50
   140032090:	test   rdi,rdi
   140032093:	jne    0x14003203e
   140032095:	jmp    0x14003209d
   140032097:	call   0x1400208f8
   14003209c:	int3   
   14003209d:	cmp    QWORD PTR [rbx+0x98],0x0
   1400320a5:	je     0x1400320e2
   1400320a7:	lea    rcx,[rbx+0x80]
   1400320ae:	call   0x14003eb94
   1400320b3:	mov    rdi,rax
   1400320b6:	test   rax,rax
   1400320b9:	je     0x1400320d8
   1400320bb:	mov    rcx,QWORD PTR [rax+0x8]
   1400320bf:	test   rcx,rcx
   1400320c2:	je     0x1400320d0
   1400320c4:	mov    r8,QWORD PTR [rcx]
   1400320c7:	mov    edx,0x1
   1400320cc:	call   QWORD PTR [r8+0x8]
   1400320d0:	mov    rcx,rdi
   1400320d3:	call   0x14001ac50
   1400320d8:	cmp    QWORD PTR [rbx+0x98],0x0
   1400320e0:	jne    0x1400320a7
   1400320e2:	lea    rcx,[rbx+0x48]
   1400320e6:	call   0x14002f804
   1400320eb:	lea    rcx,[rbx+0xc0]
   1400320f2:	call   0x14003e7dc
   1400320f7:	cmp    DWORD PTR [rbx+0x8],0x0
   1400320fb:	jle    0x140032137
   1400320fd:	and    QWORD PTR [rsp+0x48],0x0
   140032103:	lea    r8,[rsp+0x48]
   140032108:	lea    rdx,[rip+0x3e349]        # 0x140070458
   14003210f:	mov    rcx,rbx
   140032112:	call   0x14003eabc
   140032117:	test   eax,eax
   140032119:	js     0x140032126
   14003211b:	mov    rcx,QWORD PTR [rsp+0x48]
   140032120:	call   0x14003e804
   140032125:	nop
   140032126:	mov    rcx,QWORD PTR [rsp+0x48]
   14003212b:	test   rcx,rcx
   14003212e:	je     0x140032137
   140032130:	mov    rax,QWORD PTR [rcx]
   140032133:	call   QWORD PTR [rax+0x10]
   140032136:	nop
   140032137:	lea    rcx,[rbx+0x80]
   14003213e:	call   0x14003ec7c
   140032143:	nop
   140032144:	lea    rcx,[rbx+0x48]
   140032148:	call   0x14002fa4c
   14003214d:	nop
   14003214e:	mov    rcx,rbx
   140032151:	mov    rbx,QWORD PTR [rsp+0x50]
   140032156:	mov    rsi,QWORD PTR [rsp+0x58]
   14003215b:	add    rsp,0x30
   14003215f:	pop    rdi
   140032160:	jmp    0x14001c420
   140032165:	int3   
   140032166:	int3   
   140032167:	int3   
   140032168:	rex push rbp
   14003216a:	sub    rsp,0x20
   14003216e:	mov    rbp,rdx
   140032171:	mov    rcx,QWORD PTR [rbp+0x40]
   140032175:	call   0x14001c420
   14003217a:	add    rsp,0x20
   14003217e:	pop    rbp
   14003217f:	ret    
   140032180:	int3   
   140032181:	int3   
   140032182:	int3   
   140032183:	int3   
   140032184:	int3   
   140032185:	int3   
   140032186:	int3   
   140032187:	int3   
   140032188:	rex push rbp
   14003218a:	sub    rsp,0x20
   14003218e:	mov    rbp,rdx
   140032191:	mov    rcx,QWORD PTR [rbp+0x40]
   140032195:	add    rcx,0x48
   140032199:	call   0x14002fa4c
   14003219e:	add    rsp,0x20
   1400321a2:	pop    rbp
   1400321a3:	ret    
   1400321a4:	int3   
   1400321a5:	int3   
   1400321a6:	int3   
   1400321a7:	int3   
   1400321a8:	rex push rbp
   1400321aa:	sub    rsp,0x20
   1400321ae:	mov    rbp,rdx
   1400321b1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400321b5:	add    rcx,0x80
   1400321bc:	call   0x140031ab0
   1400321c1:	add    rsp,0x20
   1400321c5:	pop    rbp
   1400321c6:	ret    
   1400321c7:	int3   
   1400321c8:	rex push rbp
   1400321ca:	sub    rsp,0x20
   1400321ce:	mov    rbp,rdx
   1400321d1:	lea    rcx,[rbp+0x48]
   1400321d5:	call   0x140031960
   1400321da:	add    rsp,0x20
   1400321de:	pop    rbp
   1400321df:	ret    
   1400321e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400321e5:	push   rdi
   1400321e6:	sub    rsp,0x20
   1400321ea:	mov    rbx,QWORD PTR [rcx+0x88]
   1400321f1:	mov    edi,edx
   1400321f3:	jmp    0x140032256
   1400321f5:	test   rbx,rbx
   1400321f8:	mov    rax,rbx
   1400321fb:	je     0x140032266
   1400321fd:	mov    rcx,QWORD PTR [rax+0x10]
   140032201:	mov    rbx,QWORD PTR [rbx]
   140032204:	mov    rax,QWORD PTR [rcx+0x8]
   140032208:	test   rax,rax
   14003220b:	je     0x140032256
   14003220d:	cmp    QWORD PTR [rax+0x80],0x0
   140032215:	je     0x140032256
   140032217:	and    QWORD PTR [rsp+0x30],0x0
   14003221d:	mov    rax,QWORD PTR [rcx+0x8]
   140032221:	lea    r8,[rsp+0x30]
   140032226:	mov    rcx,QWORD PTR [rax+0x80]
   14003222d:	lea    rdx,[rip+0x3e324]        # 0x140070558
   140032234:	mov    rax,QWORD PTR [rcx]
   140032237:	call   QWORD PTR [rax]
   140032239:	mov    rcx,QWORD PTR [rsp+0x30]
   14003223e:	test   rcx,rcx
   140032241:	je     0x140032256
   140032243:	mov    rax,QWORD PTR [rcx]
   140032246:	mov    edx,edi
   140032248:	call   QWORD PTR [rax+0x28]
   14003224b:	mov    rcx,QWORD PTR [rsp+0x30]
   140032250:	mov    rax,QWORD PTR [rcx]
   140032253:	call   QWORD PTR [rax+0x10]
   140032256:	test   rbx,rbx
   140032259:	jne    0x1400321f5
   14003225b:	mov    rbx,QWORD PTR [rsp+0x38]
   140032260:	add    rsp,0x20
   140032264:	pop    rdi
   140032265:	ret    
   140032266:	call   0x1400208f8
   14003226b:	int3   
   14003226c:	mov    rax,rsp
   14003226f:	mov    QWORD PTR [rax+0x8],rbx
   140032273:	mov    QWORD PTR [rax+0x10],rbp
   140032277:	mov    QWORD PTR [rax+0x18],rsi
   14003227b:	push   rdi
   14003227c:	sub    rsp,0x80
   140032283:	mov    rsi,rdx
   140032286:	mov    rdx,QWORD PTR [rsp+0xb8]
   14003228e:	mov    rbp,rcx
   140032291:	lea    rcx,[rax-0x18]
   140032295:	mov    rbx,r9
   140032298:	mov    rdi,r8
   14003229b:	call   QWORD PTR [rip+0x3270f]        # 0x1400649b0
   1400322a1:	mov    r11,QWORD PTR [rsp+0x70]
   1400322a6:	mov    eax,DWORD PTR [rsp+0x78]
   1400322aa:	sub    eax,r11d
   1400322ad:	mov    r9,rbx
   1400322b0:	mov    r8,rdi
   1400322b3:	mov    DWORD PTR [rsp+0x60],eax
   1400322b7:	mov    eax,DWORD PTR [rsp+0x7c]
   1400322bb:	mov    rdx,rsi
   1400322be:	sub    eax,DWORD PTR [rsp+0x74]
   1400322c2:	mov    rcx,rbp
   1400322c5:	mov    QWORD PTR [rsp+0x68],r11
   1400322ca:	mov    DWORD PTR [rsp+0x64],eax
   1400322ce:	mov    rax,QWORD PTR [rsp+0x60]
   1400322d3:	mov    QWORD PTR [rsp+0x60],rax
   1400322d8:	mov    rax,QWORD PTR [rsp+0xe0]
   1400322e0:	mov    QWORD PTR [rsp+0x58],rax
   1400322e5:	mov    rax,QWORD PTR [rsp+0xd8]
   1400322ed:	mov    QWORD PTR [rsp+0x50],rax
   1400322f2:	mov    eax,DWORD PTR [rsp+0xd0]
   1400322f9:	mov    DWORD PTR [rsp+0x48],eax
   1400322fd:	mov    rax,QWORD PTR [rsp+0xc8]
   140032305:	mov    QWORD PTR [rsp+0x40],rax
   14003230a:	mov    eax,DWORD PTR [rsp+0xc0]
   140032311:	mov    DWORD PTR [rsp+0x38],eax
   140032315:	lea    rax,[rsp+0x60]
   14003231a:	mov    QWORD PTR [rsp+0x30],rax
   14003231f:	lea    rax,[rsp+0x68]
   140032324:	mov    QWORD PTR [rsp+0x28],rax
   140032329:	mov    eax,DWORD PTR [rsp+0xb0]
   140032330:	mov    DWORD PTR [rsp+0x20],eax
   140032334:	call   0x140031d10
   140032339:	lea    r11,[rsp+0x80]
   140032341:	mov    rbx,QWORD PTR [r11+0x10]
   140032345:	mov    rbp,QWORD PTR [r11+0x18]
   140032349:	mov    rsi,QWORD PTR [r11+0x20]
   14003234d:	mov    rsp,r11
   140032350:	pop    rdi
   140032351:	ret    
   140032352:	int3   
   140032353:	int3   
   140032354:	mov    QWORD PTR [rsp+0x8],rbx
   140032359:	mov    QWORD PTR [rsp+0x10],rsi
   14003235e:	push   rdi
   14003235f:	sub    rsp,0x20
   140032363:	mov    rbx,QWORD PTR [rcx+0x88]
   14003236a:	mov    esi,edx
   14003236c:	test   rbx,rbx
   14003236f:	je     0x1400323a4
   140032371:	mov    rdi,rbx
   140032374:	mov    rbx,QWORD PTR [rbx]
   140032377:	mov    rdi,QWORD PTR [rdi+0x10]
   14003237b:	test   rdi,rdi
   14003237e:	je     0x14003239e
   140032380:	cmp    QWORD PTR [rdi+0x8],0x0
   140032385:	je     0x14003236c
   140032387:	mov    rcx,QWORD PTR [rdi+0x8]
   14003238b:	mov    rax,QWORD PTR [rcx]
   14003238e:	call   QWORD PTR [rax+0x120]
   140032394:	cmp    eax,esi
   140032396:	jne    0x14003236c
   140032398:	mov    rax,QWORD PTR [rdi+0x8]
   14003239c:	jmp    0x1400323a6
   14003239e:	call   0x1400208f8
   1400323a3:	int3   
   1400323a4:	xor    eax,eax
   1400323a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400323ab:	mov    rsi,QWORD PTR [rsp+0x38]
   1400323b0:	add    rsp,0x20
   1400323b4:	pop    rdi
   1400323b5:	ret    
   1400323b6:	int3   
   1400323b7:	int3   
   1400323b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400323bd:	push   rdi
   1400323be:	sub    rsp,0x20
   1400323c2:	mov    rbx,QWORD PTR [rcx+0x88]
   1400323c9:	mov    edi,edx
   1400323cb:	jmp    0x1400323ec
   1400323cd:	test   rbx,rbx
   1400323d0:	mov    rax,rbx
   1400323d3:	je     0x1400323fc
   1400323d5:	mov    rax,QWORD PTR [rax+0x10]
   1400323d9:	mov    rbx,QWORD PTR [rbx]
   1400323dc:	mov    rcx,QWORD PTR [rax+0x8]
   1400323e0:	test   rcx,rcx
   1400323e3:	je     0x1400323ec
   1400323e5:	mov    edx,edi
   1400323e7:	call   0x140033cbc
   1400323ec:	test   rbx,rbx
   1400323ef:	jne    0x1400323cd
   1400323f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400323f6:	add    rsp,0x20
   1400323fa:	pop    rdi
   1400323fb:	ret    
   1400323fc:	call   0x1400208f8
   140032401:	int3   
   140032402:	int3   
   140032403:	int3   
   140032404:	mov    QWORD PTR [rsp+0x8],rbx
   140032409:	mov    QWORD PTR [rsp+0x10],rbp
   14003240e:	mov    QWORD PTR [rsp+0x18],rsi
   140032413:	push   rdi
   140032414:	sub    rsp,0x20
   140032418:	mov    rbx,QWORD PTR [rcx+0x88]
   14003241f:	mov    esi,r8d
   140032422:	mov    ebp,edx
   140032424:	jmp    0x140032465
   140032426:	test   rbx,rbx
   140032429:	mov    rax,rbx
   14003242c:	je     0x14003247f
   14003242e:	mov    rdi,QWORD PTR [rax+0x10]
   140032432:	mov    rbx,QWORD PTR [rbx]
   140032435:	mov    rcx,QWORD PTR [rdi+0x8]
   140032439:	test   rcx,rcx
   14003243c:	je     0x140032465
   14003243e:	add    rcx,0x5c
   140032442:	mov    r8d,esi
   140032445:	mov    edx,ebp
   140032447:	call   QWORD PTR [rip+0x324f3]        # 0x140064940
   14003244d:	mov    r11,QWORD PTR [rdi+0x8]
   140032451:	mov    rcx,QWORD PTR [r11+0x88]
   140032458:	lea    rdx,[r11+0x5c]
   14003245c:	mov    rax,QWORD PTR [rcx]
   14003245f:	mov    r8,rdx
   140032462:	call   QWORD PTR [rax+0x38]
   140032465:	test   rbx,rbx
   140032468:	jne    0x140032426
   14003246a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003246f:	mov    rbp,QWORD PTR [rsp+0x38]
   140032474:	mov    rsi,QWORD PTR [rsp+0x40]
   140032479:	add    rsp,0x20
   14003247d:	pop    rdi
   14003247e:	ret    
   14003247f:	call   0x1400208f8
   140032484:	int3   
   140032485:	int3   
   140032486:	int3   
   140032487:	int3   
   140032488:	mov    rax,rsp
   14003248b:	mov    QWORD PTR [rax+0x8],rbx
   14003248f:	mov    QWORD PTR [rax+0x10],rbp
   140032493:	mov    QWORD PTR [rax+0x18],rsi
   140032497:	mov    QWORD PTR [rax+0x20],rdi
   14003249b:	push   r12
   14003249d:	push   r13
   14003249f:	push   r14
   1400324a1:	sub    rsp,0x30
   1400324a5:	mov    r12,QWORD PTR [rsp+0x70]
   1400324aa:	xor    edi,edi
   1400324ac:	cmp    edx,0x10f
   1400324b2:	mov    r13,r9
   1400324b5:	mov    r14,r8
   1400324b8:	mov    ebx,edx
   1400324ba:	mov    QWORD PTR [r12],rdi
   1400324be:	mov    rsi,rcx
   1400324c1:	ja     0x14003250e
   1400324c3:	cmp    edx,0x10d
   1400324c9:	jae    0x14003253e
   1400324cb:	cmp    edx,0x1f
   1400324ce:	je     0x14003253e
   1400324d0:	cmp    edx,0x53
   1400324d3:	je     0x14003253e
   1400324d5:	cmp    edx,0xff
   1400324db:	jbe    0x1400324ed
   1400324dd:	cmp    edx,0x105
   1400324e3:	jbe    0x14003253e
   1400324e5:	cmp    edx,0x107
   1400324eb:	je     0x14003253e
   1400324ed:	xor    eax,eax
   1400324ef:	mov    rbx,QWORD PTR [rsp+0x50]
   1400324f4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400324f9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400324fe:	mov    rdi,QWORD PTR [rsp+0x68]
   140032503:	add    rsp,0x30
   140032507:	pop    r14
   140032509:	pop    r13
   14003250b:	pop    r12
   14003250d:	ret    
   14003250e:	cmp    edx,0x200
   140032514:	jb     0x1400324ed
   140032516:	cmp    edx,0x209
   14003251c:	jbe    0x14003256b
   14003251e:	cmp    edx,0x280
   140032524:	jbe    0x1400324ed
   140032526:	cmp    edx,0x286
   14003252c:	jbe    0x14003253e
   14003252e:	cmp    edx,0x28f
   140032534:	jbe    0x1400324ed
   140032536:	cmp    edx,0x291
   14003253c:	ja     0x1400324ed
   14003253e:	mov    rax,QWORD PTR [rcx+0xd8]
   140032545:	cmp    rax,rdi
   140032548:	je     0x1400324ed
   14003254a:	cmp    QWORD PTR [rax+0x98],rdi
   140032551:	je     0x1400324ed
   140032553:	mov    rcx,QWORD PTR [rax+0x98]
   14003255a:	mov    QWORD PTR [rsp+0x20],r12
   14003255f:	mov    r10,QWORD PTR [rcx]
   140032562:	call   QWORD PTR [r10+0x48]
   140032566:	jmp    0x1400325f2
   14003256b:	mov    rcx,QWORD PTR [rcx+0xd0]
   140032572:	cmp    rcx,rdi
   140032575:	jne    0x1400325d8
   140032577:	mov    rsi,QWORD PTR [rsi+0x88]
   14003257e:	cmp    rsi,rdi
   140032581:	je     0x1400324ed
   140032587:	mov    rbp,rsi
   14003258a:	mov    rsi,QWORD PTR [rsi]
   14003258d:	mov    rbp,QWORD PTR [rbp+0x10]
   140032591:	mov    rdx,QWORD PTR [rbp+0x8]
   140032595:	cmp    rdx,rdi
   140032598:	je     0x14003257e
   14003259a:	cmp    DWORD PTR [rdx+0xb4],edi
   1400325a0:	je     0x14003257e
   1400325a2:	movsx  eax,r13w
   1400325a6:	mov    ecx,r13d
   1400325a9:	shr    rcx,0x10
   1400325ad:	mov    DWORD PTR [rsp+0x70],eax
   1400325b1:	movsx  eax,cx
   1400325b4:	lea    rcx,[rdx+0x5c]
   1400325b8:	mov    DWORD PTR [rsp+0x74],eax
   1400325bc:	mov    rdx,QWORD PTR [rsp+0x70]
   1400325c1:	call   QWORD PTR [rip+0x32351]        # 0x140064918
   1400325c7:	cmp    eax,edi
   1400325c9:	je     0x14003257e
   1400325cb:	mov    rcx,QWORD PTR [rbp+0x8]
   1400325cf:	cmp    rcx,rdi
   1400325d2:	je     0x1400324ed
   1400325d8:	mov    rcx,QWORD PTR [rcx+0x98]
   1400325df:	mov    r9,r13
   1400325e2:	mov    r8,r14
   1400325e5:	mov    rax,QWORD PTR [rcx]
   1400325e8:	mov    edx,ebx
   1400325ea:	mov    QWORD PTR [rsp+0x20],r12
   1400325ef:	call   QWORD PTR [rax+0x48]
   1400325f2:	cmp    eax,edi
   1400325f4:	sete   dil
   1400325f8:	mov    eax,edi
   1400325fa:	jmp    0x1400324ef
   1400325ff:	int3   
   140032600:	mov    QWORD PTR [rsp+0x10],rbx
   140032605:	mov    QWORD PTR [rsp+0x18],rsi
   14003260a:	mov    QWORD PTR [rsp+0x20],rdi
   14003260f:	push   r12
   140032611:	sub    rsp,0x60
   140032615:	mov    rbx,QWORD PTR [rcx+0x88]
   14003261c:	xor    esi,esi
   14003261e:	mov    rdi,rdx
   140032621:	test   rbx,rbx
   140032624:	je     0x1400326f0
   14003262a:	lea    r12d,[rsi+0x1]
   14003262e:	test   rbx,rbx
   140032631:	mov    rcx,rbx
   140032634:	je     0x140032709
   14003263a:	mov    rcx,QWORD PTR [rcx+0x10]
   14003263e:	mov    rbx,QWORD PTR [rbx]
   140032641:	mov    rax,QWORD PTR [rcx+0x8]
   140032645:	test   rax,rax
   140032648:	je     0x1400326e7
   14003264e:	cmp    DWORD PTR [rax+0xb4],0x0
   140032655:	je     0x1400326e7
   14003265b:	and    QWORD PTR [rsp+0x70],0x0
   140032661:	mov    rax,QWORD PTR [rcx+0x8]
   140032665:	lea    r8,[rsp+0x70]
   14003266a:	mov    rcx,QWORD PTR [rax+0x80]
   140032671:	lea    rdx,[rip+0x3dd60]        # 0x1400703d8
   140032678:	mov    rax,QWORD PTR [rcx]
   14003267b:	call   QWORD PTR [rax]
   14003267d:	mov    r11,QWORD PTR [rsp+0x70]
   140032682:	test   r11,r11
   140032685:	je     0x1400326e7
   140032687:	test   rdi,rdi
   14003268a:	jne    0x140032690
   14003268c:	xor    ecx,ecx
   14003268e:	jmp    0x140032694
   140032690:	mov    rcx,QWORD PTR [rdi+0x8]
   140032694:	and    QWORD PTR [rsp+0x50],0x0
   14003269a:	and    QWORD PTR [rsp+0x48],0x0
   1400326a0:	and    QWORD PTR [rsp+0x40],0x0
   1400326a6:	and    QWORD PTR [rsp+0x38],0x0
   1400326ac:	mov    rax,QWORD PTR [r11]
   1400326af:	mov    QWORD PTR [rsp+0x30],rcx
   1400326b4:	and    QWORD PTR [rsp+0x28],0x0
   1400326ba:	and    QWORD PTR [rsp+0x20],0x0
   1400326c0:	mov    rcx,r11
   1400326c3:	xor    r9d,r9d
   1400326c6:	or     r8d,0xffffffff
   1400326ca:	mov    edx,r12d
   1400326cd:	call   QWORD PTR [rax+0x18]
   1400326d0:	mov    rcx,QWORD PTR [rsp+0x70]
   1400326d5:	test   eax,eax
   1400326d7:	mov    rax,QWORD PTR [rcx]
   1400326da:	cmovns esi,r12d
   1400326de:	call   QWORD PTR [rax+0x10]
   1400326e1:	and    QWORD PTR [rsp+0x70],0x0
   1400326e7:	test   rbx,rbx
   1400326ea:	jne    0x14003262e
   1400326f0:	lea    r11,[rsp+0x60]
   1400326f5:	mov    eax,esi
   1400326f7:	mov    rbx,QWORD PTR [r11+0x18]
   1400326fb:	mov    rsi,QWORD PTR [r11+0x20]
   1400326ff:	mov    rdi,QWORD PTR [r11+0x28]
   140032703:	mov    rsp,r11
   140032706:	pop    r12
   140032708:	ret    
   140032709:	call   0x1400208f8
   14003270e:	int3   
   14003270f:	int3   
   140032710:	mov    QWORD PTR [rsp+0x8],rbx
   140032715:	push   rbp
   140032716:	push   rsi
   140032717:	push   rdi
   140032718:	push   r12
   14003271a:	push   r13
   14003271c:	push   r14
   14003271e:	push   r15
   140032720:	sub    rsp,0x20
   140032724:	test   rdx,rdx
   140032727:	mov    rsi,rdx
   14003272a:	mov    r13,rcx
   14003272d:	jne    0x140032736
   14003272f:	xor    eax,eax
   140032731:	jmp    0x140032898
   140032736:	mov    rbx,QWORD PTR [rcx+0x88]
   14003273d:	xor    ebp,ebp
   14003273f:	test   rbx,rbx
   140032742:	mov    QWORD PTR [rsp+0x70],rbx
   140032747:	je     0x140032750
   140032749:	mov    rbp,QWORD PTR [rbx+0x10]
   14003274d:	mov    rbx,QWORD PTR [rbx]
   140032750:	xor    r15d,r15d
   140032753:	and    DWORD PTR [rsp+0x68],r15d
   140032758:	cmp    DWORD PTR [rdx+0x10],r15d
   14003275c:	jbe    0x140032893
   140032762:	xor    r14d,r14d
   140032765:	test   rbp,rbp
   140032768:	je     0x1400327a7
   14003276a:	mov    rdx,QWORD PTR [rbp+0x8]
   14003276e:	test   rdx,rdx
   140032771:	je     0x1400327a7
   140032773:	mov    rax,QWORD PTR [rsi+0x18]
   140032777:	mov    ecx,DWORD PTR [r14+rax*1]
   14003277b:	cmp    DWORD PTR [rdx+0x58],ecx
   14003277e:	jne    0x1400327a7
   140032780:	cmp    QWORD PTR [rdx+0x48],0x0
   140032785:	mov    QWORD PTR [rsp+0x70],rbx
   14003278a:	cmovne r15,QWORD PTR [rdx+0x48]
   14003278f:	test   rbx,rbx
   140032792:	je     0x1400327a0
   140032794:	mov    rbp,QWORD PTR [rbx+0x10]
   140032798:	mov    rbx,QWORD PTR [rbx]
   14003279b:	jmp    0x14003287b
   1400327a0:	xor    ebp,ebp
   1400327a2:	jmp    0x14003287b
   1400327a7:	mov    rax,QWORD PTR [rsi+0x18]
   1400327ab:	cmp    DWORD PTR [r14+rax*1],0x0
   1400327b0:	je     0x14003287b
   1400327b6:	test   r15,r15
   1400327b9:	jne    0x1400327d3
   1400327bb:	mov    rax,QWORD PTR [r13+0x40]
   1400327bf:	test   rax,rax
   1400327c2:	jne    0x1400327c8
   1400327c4:	xor    ecx,ecx
   1400327c6:	jmp    0x1400327cc
   1400327c8:	mov    rcx,QWORD PTR [rax+0x40]
   1400327cc:	mov    edx,0x5
   1400327d1:	jmp    0x1400327db
   1400327d3:	mov    edx,0x2
   1400327d8:	mov    rcx,r15
   1400327db:	call   QWORD PTR [rip+0x3219f]        # 0x140064980
   1400327e1:	mov    rdx,rax
   1400327e4:	mov    rax,QWORD PTR [rsi+0x18]
   1400327e8:	mov    ecx,DWORD PTR [rax+r14*1]
   1400327ec:	call   0x1400316d0
   1400327f1:	test   rax,rax
   1400327f4:	mov    r12,rax
   1400327f7:	jne    0x14003281b
   1400327f9:	mov    rax,QWORD PTR [r13+0x40]
   1400327fd:	test   rax,rax
   140032800:	jne    0x140032806
   140032802:	xor    ecx,ecx
   140032804:	jmp    0x14003280a
   140032806:	mov    rcx,QWORD PTR [rax+0x40]
   14003280a:	mov    rax,QWORD PTR [rsi+0x18]
   14003280e:	mov    edx,DWORD PTR [rax+r14*1]
   140032812:	call   QWORD PTR [rip+0x321c8]        # 0x1400649e0
   140032818:	mov    r12,rax
   14003281b:	mov    ecx,0x18
   140032820:	call   0x14001ac0c
   140032825:	test   rax,rax
   140032828:	mov    rdi,rax
   14003282b:	je     0x140032843
   14003282d:	mov    rax,QWORD PTR [rsi+0x18]
   140032831:	mov    ecx,DWORD PTR [rax+r14*1+0x4]
   140032836:	and    QWORD PTR [rdi+0x8],0x0
   14003283b:	mov    QWORD PTR [rdi],r12
   14003283e:	mov    DWORD PTR [rdi+0x10],ecx
   140032841:	jmp    0x140032845
   140032843:	xor    edi,edi
   140032845:	mov    rcx,QWORD PTR [rdi]
   140032848:	call   QWORD PTR [rip+0x3218a]        # 0x1400649d8
   14003284e:	test   eax,eax
   140032850:	je     0x14003287b
   140032852:	mov    r12,QWORD PTR [rsp+0x70]
   140032857:	mov    r15,QWORD PTR [rdi]
   14003285a:	lea    rcx,[r13+0x80]
   140032861:	test   r12,r12
   140032864:	je     0x140032873
   140032866:	mov    r8,rdi
   140032869:	mov    rdx,r12
   14003286c:	call   0x1400318f8
   140032871:	jmp    0x14003287b
   140032873:	mov    rdx,rdi
   140032876:	call   0x140031890
   14003287b:	mov    eax,DWORD PTR [rsp+0x68]
   14003287f:	add    r14,0x8
   140032883:	add    eax,0x1
   140032886:	cmp    eax,DWORD PTR [rsi+0x10]
   140032889:	mov    DWORD PTR [rsp+0x68],eax
   14003288d:	jb     0x140032765
   140032893:	mov    eax,0x1
   140032898:	mov    rbx,QWORD PTR [rsp+0x60]
   14003289d:	add    rsp,0x20
   1400328a1:	pop    r15
   1400328a3:	pop    r14
   1400328a5:	pop    r13
   1400328a7:	pop    r12
   1400328a9:	pop    rdi
   1400328aa:	pop    rsi
   1400328ab:	pop    rbp
   1400328ac:	ret    
   1400328ad:	int3   
   1400328ae:	int3   
   1400328af:	int3   
   1400328b0:	mov    QWORD PTR [rsp+0x18],r8
   1400328b5:	push   rbx
   1400328b6:	push   rsi
   1400328b7:	push   rdi
   1400328b8:	push   r12
   1400328ba:	push   r13
   1400328bc:	push   r14
   1400328be:	push   r15
   1400328c0:	sub    rsp,0x50
   1400328c4:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400328cd:	mov    r14,r8
   1400328d0:	mov    rdi,rcx
   1400328d3:	xor    ebx,ebx
   1400328d5:	mov    QWORD PTR [r8],rbx
   1400328d8:	mov    r15d,ebx
   1400328db:	mov    QWORD PTR [rsp+0x90],rbx
   1400328e3:	mov    rsi,rbx
   1400328e6:	mov    QWORD PTR [rsp+0xa8],rbx
   1400328ee:	mov    r12,rbx
   1400328f1:	mov    QWORD PTR [rsp+0x30],rbx
   1400328f6:	test   dl,0x1
   1400328f9:	je     0x14003295e
   1400328fb:	lea    eax,[rbx+0x8]
   1400328fe:	mul    QWORD PTR [rcx-0x58]
   140032902:	lea    rcx,[rbx-0x1]
   140032906:	cmovo  rax,rcx
   14003290a:	mov    rcx,rax
   14003290d:	call   0x14001ac0c
   140032912:	mov    r12,rax
   140032915:	mov    QWORD PTR [rsp+0x30],rax
   14003291a:	mov    rdi,QWORD PTR [rdi-0x68]
   14003291e:	cmp    rdi,rbx
   140032921:	je     0x14003295e
   140032923:	mov    r13,QWORD PTR [rdi+0x10]
   140032927:	mov    rdi,QWORD PTR [rdi]
   14003292a:	cmp    QWORD PTR [r13+0x8],rbx
   14003292e:	je     0x14003291e
   140032930:	mov    rax,QWORD PTR [r13+0x8]
   140032934:	mov    rcx,QWORD PTR [rax+0x80]
   14003293b:	mov    rax,QWORD PTR [rcx]
   14003293e:	call   QWORD PTR [rax+0x8]
   140032941:	mov    rax,QWORD PTR [r13+0x8]
   140032945:	mov    rcx,QWORD PTR [rax+0x80]
   14003294c:	mov    QWORD PTR [r12+rsi*8],rcx
   140032950:	add    rsi,0x1
   140032954:	mov    QWORD PTR [rsp+0xa8],rsi
   14003295c:	jmp    0x14003291e
   14003295e:	mov    ecx,0x70
   140032963:	call   0x14001ac0c
   140032968:	mov    rdi,rax
   14003296b:	mov    QWORD PTR [rsp+0x40],rax
   140032970:	cmp    rax,rbx
   140032973:	je     0x14003299c
   140032975:	mov    DWORD PTR [rsp+0x20],0x1
   14003297d:	mov    r9d,esi
   140032980:	mov    r8,r12
   140032983:	mov    edx,0x8
   140032988:	mov    rcx,rax
   14003298b:	call   0x140042390
   140032990:	lea    rax,[rip+0x38f11]        # 0x14006b8a8
   140032997:	mov    QWORD PTR [rdi],rax
   14003299a:	jmp    0x14003299f
   14003299c:	mov    rdi,rbx
   14003299f:	mov    QWORD PTR [rsp+0x90],rdi
   1400329a7:	jmp    0x1400329d0
   1400329a9:	xor    ebx,ebx
   1400329ab:	mov    r14,QWORD PTR [rsp+0xa0]
   1400329b3:	mov    r15d,DWORD PTR [rsp+0x98]
   1400329bb:	mov    rdi,QWORD PTR [rsp+0x90]
   1400329c3:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400329cb:	mov    r12,QWORD PTR [rsp+0x30]
   1400329d0:	cmp    r15d,ebx
   1400329d3:	jl     0x1400329de
   1400329d5:	lea    rax,[rdi+0x68]
   1400329d9:	mov    QWORD PTR [r14],rax
   1400329dc:	jmp    0x1400329fb
   1400329de:	cmp    r12,rbx
   1400329e1:	je     0x1400329fb
   1400329e3:	cmp    rsi,rbx
   1400329e6:	jbe    0x1400329fb
   1400329e8:	mov    rcx,QWORD PTR [r12+rbx*8]
   1400329ec:	mov    rdx,QWORD PTR [rcx]
   1400329ef:	call   QWORD PTR [rdx+0x10]
   1400329f2:	add    rbx,0x1
   1400329f6:	cmp    rbx,rsi
   1400329f9:	jb     0x1400329e8
   1400329fb:	mov    eax,r15d
   1400329fe:	add    rsp,0x50
   140032a02:	pop    r15
   140032a04:	pop    r14
   140032a06:	pop    r13
   140032a08:	pop    r12
   140032a0a:	pop    rdi
   140032a0b:	pop    rsi
   140032a0c:	pop    rbx
   140032a0d:	ret    
   140032a0e:	int3   
   140032a0f:	int3   
   140032a10:	rex push rbp
   140032a12:	sub    rsp,0x20
   140032a16:	mov    rbp,rdx
   140032a19:	mov    rcx,QWORD PTR [rbp+0x40]
   140032a1d:	call   0x140001040
   140032a22:	add    rsp,0x20
   140032a26:	pop    rbp
   140032a27:	ret    
   140032a28:	int3   
   140032a29:	int3   
   140032a2a:	int3   
   140032a2b:	int3   
   140032a2c:	int3   
   140032a2d:	int3   
   140032a2e:	int3   
   140032a2f:	int3   
   140032a30:	mov    QWORD PTR [rsp+0x10],rdx
   140032a35:	push   rbp
   140032a36:	sub    rsp,0x30
   140032a3a:	mov    rbp,rdx
   140032a3d:	mov    DWORD PTR [rbp+0x98],0x8007000e
   140032a47:	lea    rax,[rip+0xffffffffffffff5b]        # 0x1400329a9
   140032a4e:	jmp    0x140032a50
   140032a50:	add    rsp,0x30
   140032a54:	pop    rbp
   140032a55:	ret    
   140032a56:	int3   
   140032a57:	int3   
   140032a58:	mov    QWORD PTR [rsp+0x8],rbx
   140032a5d:	push   rdi
   140032a5e:	sub    rsp,0x20
   140032a62:	mov    ebx,edx
   140032a64:	mov    rdi,rcx
   140032a67:	call   0x140032008
   140032a6c:	test   bl,0x1
   140032a6f:	je     0x140032a79
   140032a71:	mov    rcx,rdi
   140032a74:	call   0x14001ac50
   140032a79:	mov    rax,rdi
   140032a7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140032a81:	add    rsp,0x20
   140032a85:	pop    rdi
   140032a86:	ret    
   140032a87:	int3   
   140032a88:	mov    QWORD PTR [rsp+0x8],rcx
   140032a8d:	push   rdi
   140032a8e:	sub    rsp,0x30
   140032a92:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140032a9b:	mov    QWORD PTR [rsp+0x48],rbx
   140032aa0:	mov    rbx,rdx
   140032aa3:	mov    rdi,rcx
   140032aa6:	call   0x14001c3e8
   140032aab:	nop
   140032aac:	lea    rax,[rip+0x38ff5]        # 0x14006baa8
   140032ab3:	mov    QWORD PTR [rdi],rax
   140032ab6:	mov    QWORD PTR [rdi+0x40],rbx
   140032aba:	lea    rcx,[rdi+0x48]
   140032abe:	mov    edx,0xa
   140032ac3:	call   0x14002fa14
   140032ac8:	nop
   140032ac9:	mov    edx,0xa
   140032ace:	lea    rcx,[rdi+0x80]
   140032ad5:	call   0x14003ec54
   140032ada:	lea    r11,[rip+0x38f7f]        # 0x14006ba60
   140032ae1:	mov    QWORD PTR [rdi+0x80],r11
   140032ae8:	or     eax,0xffffffff
   140032aeb:	mov    DWORD PTR [rdi+0xb8],eax
   140032af1:	mov    DWORD PTR [rdi+0xbc],eax
   140032af7:	xor    eax,eax
   140032af9:	mov    QWORD PTR [rdi+0xc0],rax
   140032b00:	mov    QWORD PTR [rdi+0xc8],rax
   140032b07:	mov    QWORD PTR [rdi+0xd0],rax
   140032b0e:	mov    QWORD PTR [rdi+0xd8],rax
   140032b15:	mov    DWORD PTR [rdi+0xe0],eax
   140032b1b:	lea    rax,[rip+0x39136]        # 0x14006bc58
   140032b22:	mov    QWORD PTR [rdi+0xe8],rax
   140032b29:	lea    rax,[rip+0x390f0]        # 0x14006bc20
   140032b30:	mov    QWORD PTR [rdi+0xf0],rax
   140032b37:	mov    rax,rdi
   140032b3a:	mov    rbx,QWORD PTR [rsp+0x48]
   140032b3f:	add    rsp,0x30
   140032b43:	pop    rdi
   140032b44:	ret    
   140032b45:	int3   
   140032b46:	int3   
   140032b47:	int3   
   140032b48:	rex push rbp
   140032b4a:	sub    rsp,0x20
   140032b4e:	mov    rbp,rdx
   140032b51:	mov    rcx,QWORD PTR [rbp+0x40]
   140032b55:	call   0x14001c420
   140032b5a:	add    rsp,0x20
   140032b5e:	pop    rbp
   140032b5f:	ret    
   140032b60:	int3   
   140032b61:	int3   
   140032b62:	int3   
   140032b63:	int3   
   140032b64:	int3   
   140032b65:	int3   
   140032b66:	int3   
   140032b67:	int3   
   140032b68:	rex push rbp
   140032b6a:	sub    rsp,0x20
   140032b6e:	mov    rbp,rdx
   140032b71:	mov    rcx,QWORD PTR [rbp+0x40]
   140032b75:	add    rcx,0x48
   140032b79:	call   0x14002fa4c
   140032b7e:	add    rsp,0x20
   140032b82:	pop    rbp
   140032b83:	ret    
   140032b84:	lea    rax,[rip+0x39175]        # 0x14006bd00
   140032b8b:	mov    QWORD PTR [rcx],rax
   140032b8e:	jmp    0x14001ef90
   140032b93:	int3   
   140032b94:	mov    QWORD PTR [rsp+0x8],rbx
   140032b99:	push   rdi
   140032b9a:	sub    rsp,0x20
   140032b9e:	lea    rax,[rip+0x3915b]        # 0x14006bd00
   140032ba5:	mov    ebx,edx
   140032ba7:	mov    rdi,rcx
   140032baa:	mov    QWORD PTR [rcx],rax
   140032bad:	call   0x14001ef90
   140032bb2:	test   bl,0x1
   140032bb5:	je     0x140032bbf
   140032bb7:	mov    rcx,rdi
   140032bba:	call   0x14001ac50
   140032bbf:	mov    rax,rdi
   140032bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140032bc7:	add    rsp,0x20
   140032bcb:	pop    rdi
   140032bcc:	ret    
   140032bcd:	int3   
   140032bce:	int3   
   140032bcf:	int3   
   140032bd0:	mov    rax,rsp
   140032bd3:	push   rdi
   140032bd4:	sub    rsp,0x100
   140032bdb:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140032be4:	mov    QWORD PTR [rax+0x18],rbx
   140032be8:	mov    QWORD PTR [rax+0x20],rbp
   140032bec:	mov    rax,QWORD PTR [rip+0x5417d]        # 0x140086d70
   140032bf3:	xor    rax,rsp
   140032bf6:	mov    QWORD PTR [rsp+0xf0],rax
   140032bfe:	mov    rax,rdx
   140032c01:	mov    rdi,rcx
   140032c04:	and    QWORD PTR [rsp+0x28],0x0
   140032c0a:	lea    rbp,[rip+0x390ef]        # 0x14006bd00
   140032c11:	mov    QWORD PTR [rsp+0x20],rbp
   140032c16:	test   rdx,rdx
   140032c19:	je     0x140032c22
   140032c1b:	cmp    QWORD PTR [rdx+0x8],0x0
   140032c20:	jne    0x140032c6a
   140032c22:	mov    ecx,0x11
   140032c27:	call   QWORD PTR [rip+0x31453]        # 0x140064080
   140032c2d:	mov    QWORD PTR [rsp+0x28],rax
   140032c32:	test   rax,rax
   140032c35:	jne    0x140032c65
   140032c37:	lea    ecx,[rax+0xd]
   140032c3a:	call   QWORD PTR [rip+0x31440]        # 0x140064080
   140032c40:	mov    QWORD PTR [rsp+0x28],rax
   140032c45:	test   rax,rax
   140032c48:	jne    0x140032c65
   140032c4a:	and    QWORD PTR [rdi+0xc0],rax
   140032c51:	mov    QWORD PTR [rsp+0x20],rbp
   140032c56:	lea    rcx,[rsp+0x20]
   140032c5b:	call   0x14001ef90
   140032c60:	jmp    0x140032d95
   140032c65:	lea    rax,[rsp+0x20]
   140032c6a:	lea    r8,[rsp+0x90]
   140032c72:	mov    edx,0x5c
   140032c77:	mov    rcx,QWORD PTR [rax+0x8]
   140032c7b:	call   QWORD PTR [rip+0x3144f]        # 0x1400640d0
   140032c81:	mov    DWORD PTR [rsp+0x38],0x28
   140032c89:	lea    rdx,[rsp+0xac]
   140032c91:	lea    rcx,[rsp+0x30]
   140032c96:	call   0x14000c360
   140032c9b:	nop
   140032c9c:	mov    rax,QWORD PTR [rsp+0x30]
   140032ca1:	mov    QWORD PTR [rsp+0x40],rax
   140032ca6:	movzx  eax,WORD PTR [rsp+0xa0]
   140032cae:	mov    WORD PTR [rsp+0x50],ax
   140032cb3:	movzx  eax,BYTE PTR [rsp+0xa7]
   140032cbb:	mov    WORD PTR [rsp+0x52],ax
   140032cc0:	movzx  eax,BYTE PTR [rsp+0xa4]
   140032cc8:	mov    DWORD PTR [rsp+0x54],eax
   140032ccc:	movzx  eax,BYTE PTR [rsp+0xa5]
   140032cd4:	mov    DWORD PTR [rsp+0x58],eax
   140032cd8:	movzx  eax,BYTE PTR [rsp+0xa6]
   140032ce0:	mov    DWORD PTR [rsp+0x5c],eax
   140032ce4:	mov    ebx,DWORD PTR [rsp+0x90]
   140032ceb:	test   ebx,ebx
   140032ced:	jns    0x140032cf1
   140032cef:	neg    ebx
   140032cf1:	mov    rdx,QWORD PTR [rdi+0x40]
   140032cf5:	lea    rcx,[rsp+0x68]
   140032cfa:	call   0x14002b2ac
   140032cff:	nop
   140032d00:	mov    edx,0x5a
   140032d05:	mov    rcx,QWORD PTR [rsp+0x78]
   140032d0a:	call   QWORD PTR [rip+0x313e0]        # 0x1400640f0
   140032d10:	mov    r11d,eax
   140032d13:	imul   ebx,ebx,0xafc80
   140032d19:	mov    eax,ebx
   140032d1b:	cdq    
   140032d1c:	idiv   r11d
   140032d1f:	mov    DWORD PTR [rsp+0x48],eax
   140032d23:	and    DWORD PTR [rsp+0x4c],0x0
   140032d28:	lea    rcx,[rdi+0xc0]
   140032d2f:	call   0x14003e7dc
   140032d34:	lea    r8,[rdi+0xc0]
   140032d3b:	lea    rdx,[rip+0x3d7b6]        # 0x1400704f8
   140032d42:	lea    rcx,[rsp+0x38]
   140032d47:	call   QWORD PTR [rip+0x31933]        # 0x140064680
   140032d4d:	test   eax,eax
   140032d4f:	jns    0x140032d59
   140032d51:	and    QWORD PTR [rdi+0xc0],0x0
   140032d59:	lea    rcx,[rsp+0x68]
   140032d5e:	call   0x14002b334
   140032d63:	nop
   140032d64:	mov    rdx,QWORD PTR [rsp+0x30]
   140032d69:	add    rdx,0xffffffffffffffe8
   140032d6d:	or     eax,0xffffffff
   140032d70:	lock xadd DWORD PTR [rdx+0x10],eax
   140032d75:	add    eax,0xffffffff
   140032d78:	test   eax,eax
   140032d7a:	jg     0x140032d86
   140032d7c:	mov    rcx,QWORD PTR [rdx]
   140032d7f:	mov    rax,QWORD PTR [rcx]
   140032d82:	call   QWORD PTR [rax+0x8]
   140032d85:	nop
   140032d86:	mov    QWORD PTR [rsp+0x20],rbp
   140032d8b:	lea    rcx,[rsp+0x20]
   140032d90:	call   0x14001ef90
   140032d95:	mov    rcx,QWORD PTR [rsp+0xf0]
   140032d9d:	xor    rcx,rsp
   140032da0:	call   0x140046470
   140032da5:	lea    r11,[rsp+0x100]
   140032dad:	mov    rbx,QWORD PTR [r11+0x20]
   140032db1:	mov    rbp,QWORD PTR [r11+0x28]
   140032db5:	mov    rsp,r11
   140032db8:	pop    rdi
   140032db9:	ret    
   140032dba:	int3   
   140032dbb:	int3   
   140032dbc:	int3   
   140032dbd:	int3   
   140032dbe:	int3   
   140032dbf:	int3   
   140032dc0:	rex push rbp
   140032dc2:	sub    rsp,0x20
   140032dc6:	mov    rbp,rdx
   140032dc9:	lea    rcx,[rbp+0x20]
   140032dcd:	call   0x140032b84
   140032dd2:	add    rsp,0x20
   140032dd6:	pop    rbp
   140032dd7:	ret    
   140032dd8:	int3   
   140032dd9:	int3   
   140032dda:	int3   
   140032ddb:	int3   
   140032ddc:	int3   
   140032ddd:	int3   
   140032dde:	int3   
   140032ddf:	int3   
   140032de0:	rex push rbp
   140032de2:	sub    rsp,0x20
   140032de6:	mov    rbp,rdx
   140032de9:	lea    rcx,[rbp+0x30]
   140032ded:	call   0x1400010c0
   140032df2:	add    rsp,0x20
   140032df6:	pop    rbp
   140032df7:	ret    
   140032df8:	int3   
   140032df9:	int3   
   140032dfa:	int3   
   140032dfb:	int3   
   140032dfc:	int3   
   140032dfd:	int3   
   140032dfe:	int3   
   140032dff:	int3   
   140032e00:	rex push rbp
   140032e02:	sub    rsp,0x20
   140032e06:	mov    rbp,rdx
   140032e09:	lea    rcx,[rbp+0x68]
   140032e0d:	call   0x14002b334
   140032e12:	add    rsp,0x20
   140032e16:	pop    rbp
   140032e17:	ret    
   140032e18:	rex push rdi
   140032e1a:	sub    rsp,0x60
   140032e1e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140032e27:	mov    QWORD PTR [rsp+0x70],rbx
   140032e2c:	mov    QWORD PTR [rsp+0x78],rsi
   140032e31:	mov    rdi,r9
   140032e34:	mov    esi,r8d
   140032e37:	mov    rbx,rcx
   140032e3a:	lea    eax,[r8+0x2cc]
   140032e41:	cmp    eax,0xf
   140032e44:	ja     0x1400330e2
   140032e4a:	cdqe   
   140032e4c:	lea    rcx,[rip+0xfffffffffffcd1ad]        # 0x140000000
   140032e53:	mov    r10d,DWORD PTR [rcx+rax*4+0x330f4]
   140032e5b:	add    r10,rcx
   140032e5e:	jmp    r10
   140032e61:	mov    WORD PTR [r9],0xb
   140032e67:	or     WORD PTR [r9+0x8],0xffff
   140032e6d:	mov    eax,0x1
   140032e72:	jmp    0x1400330e4
   140032e77:	mov    WORD PTR [r9],0xb
   140032e7d:	and    WORD PTR [r9+0x8],0x0
   140032e83:	mov    eax,0x1
   140032e88:	jmp    0x1400330e4
   140032e8d:	mov    WORD PTR [r9],0x2
   140032e93:	mov    WORD PTR [r9+0x8],0x1
   140032e9a:	mov    eax,0x1
   140032e9f:	jmp    0x1400330e4
   140032ea4:	cmp    DWORD PTR [rbx+0xb8],0xffffffff
   140032eab:	jne    0x140032f02
   140032ead:	mov    rdx,QWORD PTR [rbx+0x40]
   140032eb1:	lea    rcx,[rsp+0x38]
   140032eb6:	call   0x14002b2ac
   140032ebb:	mov    rcx,QWORD PTR [rbx+0x40]
   140032ebf:	mov    r9,QWORD PTR [rcx+0x40]
   140032ec3:	mov    r8,QWORD PTR [rsp+0x40]
   140032ec8:	mov    edx,0x138
   140032ecd:	mov    rcx,r9
   140032ed0:	call   QWORD PTR [rip+0x31c9a]        # 0x140064b70
   140032ed6:	mov    rcx,QWORD PTR [rsp+0x48]
   140032edb:	call   QWORD PTR [rip+0x311b7]        # 0x140064098
   140032ee1:	mov    DWORD PTR [rbx+0xb8],eax
   140032ee7:	mov    rcx,QWORD PTR [rsp+0x48]
   140032eec:	call   QWORD PTR [rip+0x311ae]        # 0x1400640a0
   140032ef2:	mov    DWORD PTR [rbx+0xbc],eax
   140032ef8:	lea    rcx,[rsp+0x38]
   140032efd:	call   0x14002b334
   140032f02:	mov    WORD PTR [rdi],0x3
   140032f07:	cmp    esi,0xfffffd43
   140032f0d:	jne    0x140032f17
   140032f0f:	mov    eax,DWORD PTR [rbx+0xb8]
   140032f15:	jmp    0x140032f1d
   140032f17:	mov    eax,DWORD PTR [rbx+0xbc]
   140032f1d:	mov    DWORD PTR [rdi+0x8],eax
   140032f20:	mov    eax,0x1
   140032f25:	jmp    0x1400330e4
   140032f2a:	cmp    QWORD PTR [rbx+0xc0],0x0
   140032f32:	jne    0x140032f5f
   140032f34:	mov    rcx,QWORD PTR [rbx+0x40]
   140032f38:	xor    r9d,r9d
   140032f3b:	xor    r8d,r8d
   140032f3e:	lea    edx,[r9+0x31]
   140032f42:	mov    rcx,QWORD PTR [rcx+0x40]
   140032f46:	call   QWORD PTR [rip+0x31c24]        # 0x140064b70
   140032f4c:	mov    rcx,rax
   140032f4f:	call   0x14002b534
   140032f54:	mov    rdx,rax
   140032f57:	mov    rcx,rbx
   140032f5a:	call   0x140032bd0
   140032f5f:	cmp    QWORD PTR [rbx+0xc0],0x0
   140032f67:	jne    0x140032f70
   140032f69:	xor    eax,eax
   140032f6b:	jmp    0x1400330e4
   140032f70:	mov    WORD PTR [rdi],0x9
   140032f75:	mov    rcx,QWORD PTR [rbx+0xc0]
   140032f7c:	mov    rax,QWORD PTR [rcx]
   140032f7f:	call   QWORD PTR [rax+0x8]
   140032f82:	mov    r11,QWORD PTR [rbx+0xc0]
   140032f89:	mov    QWORD PTR [rdi+0x8],r11
   140032f8d:	mov    eax,0x1
   140032f92:	jmp    0x1400330e4
   140032f97:	mov    WORD PTR [r9],0xb
   140032f9d:	mov    rcx,rdx
   140032fa0:	call   0x140033724
   140032fa5:	neg    eax
   140032fa7:	sbb    cx,cx
   140032faa:	mov    WORD PTR [rdi+0x8],cx
   140032fae:	mov    eax,0x1
   140032fb3:	jmp    0x1400330e4
   140032fb8:	mov    WORD PTR [r9],0x3
   140032fbe:	call   QWORD PTR [rip+0x311d4]        # 0x140064198
   140032fc4:	mov    DWORD PTR [rdi+0x8],eax
   140032fc7:	mov    eax,0x1
   140032fcc:	jmp    0x1400330e4
   140032fd1:	call   0x14002b874
   140032fd6:	mov    r11,rax
   140032fd9:	xor    ecx,ecx
   140032fdb:	test   rax,rax
   140032fde:	setne  cl
   140032fe1:	test   ecx,ecx
   140032fe3:	jne    0x140032ff0
   140032fe5:	mov    ecx,0x80004005
   140032fea:	call   0x140001430
   140032fef:	int3   
   140032ff0:	mov    rax,QWORD PTR [rax]
   140032ff3:	mov    rcx,r11
   140032ff6:	call   QWORD PTR [rax+0x18]
   140032ff9:	lea    rbx,[rax+0x18]
   140032ffd:	mov    QWORD PTR [rsp+0x30],rbx
   140033002:	mov    WORD PTR [rdi],0x8
   140033007:	mov    edx,DWORD PTR [rbx-0x10]
   14003300a:	mov    rcx,rbx
   14003300d:	call   QWORD PTR [rip+0x31695]        # 0x1400646a8
   140033013:	test   rax,rax
   140033016:	jne    0x14003301e
   140033018:	call   0x1400021a0
   14003301d:	int3   
   14003301e:	mov    QWORD PTR [rdi+0x8],rax
   140033022:	lea    rdx,[rbx-0x18]
   140033026:	or     eax,0xffffffff
   140033029:	lock xadd DWORD PTR [rdx+0x10],eax
   14003302e:	add    eax,0xffffffff
   140033031:	test   eax,eax
   140033033:	jg     0x14003303e
   140033035:	mov    rcx,QWORD PTR [rdx]
   140033038:	mov    rax,QWORD PTR [rcx]
   14003303b:	call   QWORD PTR [rax+0x8]
   14003303e:	mov    eax,0x1
   140033043:	jmp    0x1400330e4
   140033048:	call   0x14002b874
   14003304d:	mov    r11,rax
   140033050:	xor    ecx,ecx
   140033052:	test   rax,rax
   140033055:	setne  cl
   140033058:	test   ecx,ecx
   14003305a:	jne    0x140033067
   14003305c:	mov    ecx,0x80004005
   140033061:	call   0x140001430
   140033066:	int3   
   140033067:	mov    rax,QWORD PTR [rax]
   14003306a:	mov    rcx,r11
   14003306d:	call   QWORD PTR [rax+0x18]
   140033070:	lea    rbx,[rax+0x18]
   140033074:	mov    QWORD PTR [rsp+0x20],rbx
   140033079:	mov    esi,0xf1c0
   14003307e:	mov    ecx,esi
   140033080:	call   0x14002b860
   140033085:	test   rax,rax
   140033088:	je     0x14003309f
   14003308a:	mov    r8d,esi
   14003308d:	mov    rdx,rax
   140033090:	lea    rcx,[rsp+0x20]
   140033095:	call   0x140003650
   14003309a:	mov    rbx,QWORD PTR [rsp+0x20]
   14003309f:	mov    WORD PTR [rdi],0x8
   1400330a4:	mov    edx,DWORD PTR [rbx-0x10]
   1400330a7:	mov    rcx,rbx
   1400330aa:	call   QWORD PTR [rip+0x315f8]        # 0x1400646a8
   1400330b0:	test   rax,rax
   1400330b3:	jne    0x1400330bb
   1400330b5:	call   0x1400021a0
   1400330ba:	int3   
   1400330bb:	mov    QWORD PTR [rdi+0x8],rax
   1400330bf:	lea    rdx,[rbx-0x18]
   1400330c3:	or     eax,0xffffffff
   1400330c6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400330cb:	add    eax,0xffffffff
   1400330ce:	test   eax,eax
   1400330d0:	jg     0x1400330db
   1400330d2:	mov    rcx,QWORD PTR [rdx]
   1400330d5:	mov    rax,QWORD PTR [rcx]
   1400330d8:	call   QWORD PTR [rax+0x8]
   1400330db:	mov    eax,0x1
   1400330e0:	jmp    0x1400330e4
   1400330e2:	xor    eax,eax
   1400330e4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400330e9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400330ee:	add    rsp,0x60
   1400330f2:	pop    rdi
   1400330f3:	ret    
   1400330f4:	lea    ebp,[rsi]
   1400330f6:	add    eax,DWORD PTR [rax]
   1400330f8:	(bad)  
   1400330f9:	add    eax,DWORD PTR cs:[rax]
   1400330fc:	(bad)  
   1400330fd:	add    eax,DWORD PTR cs:[rax]
   140033100:	xchg   edi,eax
   140033101:	(bad)  
   140033102:	add    eax,DWORD PTR [rax]
   140033104:	ja     0x140033134
   140033106:	add    eax,DWORD PTR [rax]
   140033108:	ja     0x140033138
   14003310a:	add    eax,DWORD PTR [rax]
   14003310c:	ja     0x14003313c
   14003310e:	add    eax,DWORD PTR [rax]
   140033110:	(bad)  
   140033111:	add    eax,DWORD PTR cs:[rax]
   140033114:	loop   0x140033146
   140033116:	add    eax,DWORD PTR [rax]
   140033118:	rex.W xor BYTE PTR [rbx],al
   14003311b:	add    BYTE PTR [rcx+0x2e],ah
   14003311e:	add    eax,DWORD PTR [rax]
   140033120:	mov    eax,0xa400032f
   140033125:	add    eax,DWORD PTR cs:[rax]
   140033128:	sub    ch,BYTE PTR [rdi]
   14003312a:	add    eax,DWORD PTR [rax]
   14003312c:	shr    DWORD PTR [rdi],1
   14003312e:	add    eax,DWORD PTR [rax]
   140033130:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140033131:	add    eax,DWORD PTR cs:[rax]
   140033134:	int3   
   140033135:	int3   
   140033136:	int3   
   140033137:	int3   
   140033138:	rex push rbp
   14003313a:	sub    rsp,0x20
   14003313e:	mov    rbp,rdx
   140033141:	lea    rcx,[rbp+0x30]
   140033145:	call   0x1400010c0
   14003314a:	add    rsp,0x20
   14003314e:	pop    rbp
   14003314f:	ret    
   140033150:	int3   
   140033151:	int3   
   140033152:	int3   
   140033153:	int3   
   140033154:	int3   
   140033155:	int3   
   140033156:	int3   
   140033157:	int3   
   140033158:	rex push rbp
   14003315a:	sub    rsp,0x20
   14003315e:	mov    rbp,rdx
   140033161:	lea    rcx,[rbp+0x20]
   140033165:	call   0x1400010c0
   14003316a:	add    rsp,0x20
   14003316e:	pop    rbp
   14003316f:	ret    
   140033170:	mov    DWORD PTR [rsp+0x10],edx
   140033174:	mov    QWORD PTR [rsp+0x8],rcx
   140033179:	push   rdi
   14003317a:	sub    rsp,0x30
   14003317e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140033187:	mov    QWORD PTR [rsp+0x50],rbx
   14003318c:	movsxd rdi,edx
   14003318f:	mov    rbx,rcx
   140033192:	and    QWORD PTR [rcx],0x0
   140033196:	mov    eax,0x10
   14003319b:	mul    rdi
   14003319e:	mov    rcx,0xffffffffffffffff
   1400331a5:	cmovo  rax,rcx
   1400331a9:	mov    rcx,rax
   1400331ac:	call   0x14001ac0c
   1400331b1:	mov    QWORD PTR [rbx],rax
   1400331b4:	jmp    0x1400331bf
   1400331b6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400331bb:	mov    edi,DWORD PTR [rsp+0x48]
   1400331bf:	cmp    QWORD PTR [rbx],0x0
   1400331c3:	jne    0x1400331cc
   1400331c5:	mov    eax,0x8007000e
   1400331ca:	jmp    0x1400331d1
   1400331cc:	mov    DWORD PTR [rbx+0x8],edi
   1400331cf:	xor    eax,eax
   1400331d1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400331d6:	add    rsp,0x30
   1400331da:	pop    rdi
   1400331db:	ret    
   1400331dc:	int3   
   1400331dd:	int3   
   1400331de:	int3   
   1400331df:	int3   
   1400331e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400331e5:	push   rbp
   1400331e6:	sub    rsp,0x20
   1400331ea:	mov    rbp,rdx
   1400331ed:	mov    rcx,QWORD PTR [rbp+0x28]
   1400331f1:	call   0x1400207b8
   1400331f6:	nop
   1400331f7:	lea    rax,[rip+0xffffffffffffffb8]        # 0x1400331b6
   1400331fe:	jmp    0x140033200
   140033200:	add    rsp,0x20
   140033204:	pop    rbp
   140033205:	ret    
   140033206:	int3   
   140033207:	int3   
   140033208:	mov    QWORD PTR [rsp+0x8],rbx
   14003320d:	mov    QWORD PTR [rsp+0x10],rsi
   140033212:	push   rdi
   140033213:	sub    rsp,0x40
   140033217:	test   rcx,rcx
   14003321a:	mov    rdi,rdx
   14003321d:	mov    rbx,rcx
   140033220:	jne    0x140033229
   140033222:	mov    eax,0x80004005
   140033227:	jmp    0x140033280
   140033229:	test   r8,r8
   14003322c:	je     0x140033222
   14003322e:	mov    rcx,QWORD PTR [rsp+0x70]
   140033233:	test   rcx,rcx
   140033236:	je     0x140033222
   140033238:	mov    eax,DWORD PTR [rbx+0x40]
   14003323b:	neg    eax
   14003323d:	mov    rax,QWORD PTR [rcx]
   140033240:	sbb    edx,edx
   140033242:	and    QWORD PTR [rsp+0x30],0x0
   140033248:	mov    QWORD PTR [rsp+0x28],r8
   14003324d:	and    edx,0x2
   140033250:	mov    QWORD PTR [rsp+0x20],r9
   140033255:	mov    r8,rdi
   140033258:	add    edx,0x2
   14003325b:	mov    r9,rbx
   14003325e:	call   QWORD PTR [rax+0x20]
   140033261:	test   rdi,rdi
   140033264:	mov    esi,eax
   140033266:	je     0x14003327e
   140033268:	add    rbx,0x28
   14003326c:	mov    rcx,QWORD PTR [rbx]
   14003326f:	call   0x14001ac50
   140033274:	add    rbx,0x58
   140033278:	sub    rdi,0x1
   14003327c:	jne    0x14003326c
   14003327e:	mov    eax,esi
   140033280:	mov    rbx,QWORD PTR [rsp+0x50]
   140033285:	mov    rsi,QWORD PTR [rsp+0x58]
   14003328a:	add    rsp,0x40
   14003328e:	pop    rdi
   14003328f:	ret    
   140033290:	bt     cx,0xe
   140033295:	jae    0x1400332a2
   140033297:	movabs rax,0x8
   1400332a1:	ret    
   1400332a2:	bt     cx,0xd
   1400332a7:	jb     0x140033297
   1400332a9:	bt     cx,0xc
   1400332ae:	jb     0x140033297
   1400332b0:	movzx  ecx,cx
   1400332b3:	cmp    ecx,0x48
   1400332b6:	jg     0x14003332c
   1400332b8:	je     0x1400332f1
   1400332ba:	cmp    ecx,0xb
   1400332bd:	jg     0x1400332fc
   1400332bf:	je     0x140033354
   1400332c5:	sub    ecx,0x2
   1400332c8:	je     0x140033354
   1400332ce:	mov    eax,0x1
   1400332d3:	sub    ecx,eax
   1400332d5:	je     0x1400332f1
   1400332d7:	sub    ecx,eax
   1400332d9:	je     0x1400332f1
   1400332db:	sub    ecx,eax
   1400332dd:	je     0x140033297
   1400332df:	sub    ecx,eax
   1400332e1:	je     0x140033297
   1400332e3:	sub    ecx,eax
   1400332e5:	je     0x140033297
   1400332e7:	sub    ecx,eax
   1400332e9:	je     0x140033297
   1400332eb:	sub    ecx,eax
   1400332ed:	je     0x140033297
   1400332ef:	jmp    0x14003334b
   1400332f1:	movabs rax,0x4
   1400332fb:	ret    
   1400332fc:	sub    ecx,0xc
   1400332ff:	je     0x140033297
   140033301:	mov    eax,0x1
   140033306:	sub    ecx,eax
   140033308:	je     0x140033297
   14003330a:	sub    ecx,eax
   14003330c:	je     0x140033297
   14003330e:	sub    ecx,0x2
   140033311:	je     0x14003335e
   140033313:	sub    ecx,eax
   140033315:	je     0x14003335e
   140033317:	sub    ecx,eax
   140033319:	je     0x140033354
   14003331b:	sub    ecx,eax
   14003331d:	je     0x1400332f1
   14003331f:	sub    ecx,eax
   140033321:	je     0x14003335e
   140033323:	cmp    ecx,eax
   140033325:	jne    0x140033297
   14003332b:	ret    
   14003332c:	add    ecx,0xffffff80
   14003332f:	mov    eax,0x1
   140033334:	je     0x14003335e
   140033336:	sub    ecx,eax
   140033338:	je     0x14003335e
   14003333a:	sub    ecx,eax
   14003333c:	je     0x140033354
   14003333e:	sub    ecx,eax
   140033340:	je     0x14003335e
   140033342:	sub    ecx,0x2
   140033345:	je     0x140033354
   140033347:	sub    ecx,eax
   140033349:	je     0x140033354
   14003334b:	cmp    ecx,eax
   14003334d:	je     0x1400332f1
   14003334f:	jmp    0x140033297
   140033354:	movabs rax,0x2
   14003335e:	ret    
   14003335f:	int3   
   140033360:	mov    QWORD PTR [rsp+0x8],rbx
   140033365:	mov    QWORD PTR [rsp+0x10],rbp
   14003336a:	mov    QWORD PTR [rsp+0x18],rsi
   14003336f:	push   rdi
   140033370:	sub    rsp,0x30
   140033374:	xor    esi,esi
   140033376:	mov    rbp,rdx
   140033379:	mov    rdi,rcx
   14003337c:	cmp    rdx,rsi
   14003337f:	jne    0x14003338c
   140033381:	mov    ecx,0x80004005
   140033386:	call   0x140001430
   14003338b:	int3   
   14003338c:	call   QWORD PTR [rip+0x312de]        # 0x140064670
   140033392:	xor    edx,edx
   140033394:	lea    rcx,[rsp+0x20]
   140033399:	lea    r8d,[rdx+0x10]
   14003339d:	mov    ebx,eax
   14003339f:	call   0x140047720
   1400333a4:	cmp    ebx,esi
   1400333a6:	je     0x140033402
   1400333a8:	movsd  xmm0,QWORD PTR [rbp+0x0]
   1400333ad:	lea    rdx,[rsp+0x20]
   1400333b2:	call   QWORD PTR [rip+0x312c0]        # 0x140064678
   1400333b8:	cmp    eax,esi
   1400333ba:	je     0x140033402
   1400333bc:	movzx  eax,WORD PTR [rsp+0x20]
   1400333c1:	cmp    WORD PTR [rdi],ax
   1400333c4:	jne    0x140033402
   1400333c6:	movzx  eax,WORD PTR [rsp+0x22]
   1400333cb:	cmp    WORD PTR [rdi+0x2],ax
   1400333cf:	jne    0x140033402
   1400333d1:	movzx  eax,WORD PTR [rsp+0x26]
   1400333d6:	cmp    WORD PTR [rdi+0x6],ax
   1400333da:	jne    0x140033402
   1400333dc:	movzx  eax,WORD PTR [rsp+0x28]
   1400333e1:	cmp    WORD PTR [rdi+0x8],ax
   1400333e5:	jne    0x140033402
   1400333e7:	movzx  eax,WORD PTR [rsp+0x2a]
   1400333ec:	cmp    WORD PTR [rdi+0xa],ax
   1400333f0:	jne    0x140033402
   1400333f2:	movzx  eax,WORD PTR [rsp+0x2c]
   1400333f7:	cmp    WORD PTR [rdi+0xc],ax
   1400333fb:	jne    0x140033402
   1400333fd:	mov    esi,0x1
   140033402:	mov    rbx,QWORD PTR [rsp+0x40]
   140033407:	mov    rbp,QWORD PTR [rsp+0x48]
   14003340c:	mov    eax,esi
   14003340e:	mov    rsi,QWORD PTR [rsp+0x50]
   140033413:	add    rsp,0x30
   140033417:	pop    rdi
   140033418:	ret    
   140033419:	int3   
   14003341a:	int3   
   14003341b:	int3   
   14003341c:	rex push rbx
   14003341e:	sub    rsp,0x20
   140033422:	mov    rbx,rcx
   140033425:	mov    rcx,QWORD PTR [rcx+0x18]
   140033429:	call   0x14001ac50
   14003342e:	mov    rcx,QWORD PTR [rbx+0x48]
   140033432:	add    rsp,0x20
   140033436:	pop    rbx
   140033437:	jmp    0x14001ac50
   14003343c:	mov    DWORD PTR [rsp+0x10],edx
   140033440:	mov    QWORD PTR [rsp+0x8],rcx
   140033445:	push   rdi
   140033446:	sub    rsp,0x30
   14003344a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140033453:	mov    QWORD PTR [rsp+0x50],rbx
   140033458:	mov    rax,r8
   14003345b:	movsxd rdi,edx
   14003345e:	mov    rbx,rcx
   140033461:	mov    QWORD PTR [rcx+0x10],rax
   140033465:	mov    QWORD PTR [rcx+0x30],r9
   140033469:	and    QWORD PTR [rcx+0x20],0x0
   14003346e:	and    QWORD PTR [rcx+0x28],0x0
   140033473:	mov    r8,r9
   140033476:	xor    edx,edx
   140033478:	mov    rcx,rax
   14003347b:	call   0x140047720
   140033480:	mov    rcx,QWORD PTR [rbx+0x18]
   140033484:	call   0x14001ac50
   140033489:	and    QWORD PTR [rbx+0x18],0x0
   14003348e:	mov    eax,0x58
   140033493:	mul    rdi
   140033496:	mov    rcx,0xffffffffffffffff
   14003349d:	cmovo  rax,rcx
   1400334a1:	mov    rcx,rax
   1400334a4:	call   0x14001ac0c
   1400334a9:	mov    QWORD PTR [rbx+0x18],rax
   1400334ad:	jmp    0x1400334b8
   1400334af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400334b4:	mov    edi,DWORD PTR [rsp+0x48]
   1400334b8:	cmp    QWORD PTR [rbx+0x18],0x0
   1400334bd:	jne    0x1400334c6
   1400334bf:	mov    eax,0x8007000e
   1400334c4:	jmp    0x1400334cf
   1400334c6:	movsxd rax,edi
   1400334c9:	mov    QWORD PTR [rbx+0x20],rax
   1400334cd:	xor    eax,eax
   1400334cf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400334d4:	add    rsp,0x30
   1400334d8:	pop    rdi
   1400334d9:	ret    
   1400334da:	int3   
   1400334db:	int3   
   1400334dc:	mov    QWORD PTR [rsp+0x10],rdx
   1400334e1:	push   rbp
   1400334e2:	sub    rsp,0x20
   1400334e6:	mov    rbp,rdx
   1400334e9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400334ed:	call   0x1400207b8
   1400334f2:	nop
   1400334f3:	lea    rax,[rip+0xffffffffffffffb5]        # 0x1400334af
   1400334fa:	jmp    0x1400334fc
   1400334fc:	add    rsp,0x20
   140033500:	pop    rbp
   140033501:	ret    
   140033502:	int3   
   140033503:	int3   
   140033504:	lea    rax,[rip+0x38915]        # 0x14006be20
   14003350b:	ret    
   14003350c:	rex push rbx
   14003350e:	push   rbp
   14003350f:	push   rsi
   140033510:	push   rdi
   140033511:	push   r12
   140033513:	push   r13
   140033515:	push   r14
   140033517:	push   r15
   140033519:	sub    rsp,0x98
   140033520:	mov    rax,QWORD PTR [rip+0x53849]        # 0x140086d70
   140033527:	xor    rax,rsp
   14003352a:	mov    QWORD PTR [rsp+0x80],rax
   140033532:	mov    rbp,QWORD PTR [rsp+0x108]
   14003353a:	mov    rsi,QWORD PTR [rsp+0x110]
   140033542:	mov    rdi,QWORD PTR [rsp+0x120]
   14003354a:	mov    rbx,QWORD PTR [rsp+0x130]
   140033552:	mov    r13,rcx
   140033555:	lea    rcx,[rsp+0x60]
   14003355a:	mov    r12,r9
   14003355d:	mov    r15,r8
   140033560:	mov    r14,rdx
   140033563:	call   0x140031874
   140033568:	mov    eax,DWORD PTR [rsp+0x128]
   14003356f:	mov    r11,QWORD PTR [r13+0x0]
   140033573:	mov    QWORD PTR [rsp+0x58],rbx
   140033578:	mov    DWORD PTR [rsp+0x50],eax
   14003357c:	mov    eax,DWORD PTR [rsp+0x118]
   140033583:	mov    QWORD PTR [rsp+0x48],rdi
   140033588:	mov    DWORD PTR [rsp+0x40],eax
   14003358c:	mov    eax,DWORD PTR [rsp+0x100]
   140033593:	mov    QWORD PTR [rsp+0x38],rsi
   140033598:	mov    QWORD PTR [rsp+0x30],rbp
   14003359d:	mov    DWORD PTR [rsp+0x28],eax
   1400335a1:	lea    r9,[rsp+0x60]
   1400335a6:	mov    r8,r15
   1400335a9:	mov    rdx,r14
   1400335ac:	mov    rcx,r13
   1400335af:	mov    QWORD PTR [rsp+0x20],r12
   1400335b4:	call   QWORD PTR [r11+0x188]
   1400335bb:	mov    rcx,QWORD PTR [rsp+0x80]
   1400335c3:	xor    rcx,rsp
   1400335c6:	call   0x140046470
   1400335cb:	add    rsp,0x98
   1400335d2:	pop    r15
   1400335d4:	pop    r14
   1400335d6:	pop    r13
   1400335d8:	pop    r12
   1400335da:	pop    rdi
   1400335db:	pop    rsi
   1400335dc:	pop    rbp
   1400335dd:	pop    rbx
   1400335de:	ret    
   1400335df:	int3   
   1400335e0:	sub    rsp,0x68
   1400335e4:	and    QWORD PTR [rsp+0x58],0x0
   1400335ea:	and    DWORD PTR [rsp+0x50],0x0
   1400335ef:	and    QWORD PTR [rsp+0x48],0x0
   1400335f5:	mov    eax,DWORD PTR [rsp+0xa0]
   1400335fc:	mov    r10,QWORD PTR [rcx]
   1400335ff:	mov    r11,r8
   140033602:	mov    DWORD PTR [rsp+0x40],eax
   140033606:	mov    rax,QWORD PTR [rsp+0x98]
   14003360e:	add    r8,0x10
   140033612:	mov    QWORD PTR [rsp+0x38],rax
   140033617:	mov    rax,QWORD PTR [rsp+0x90]
   14003361f:	mov    QWORD PTR [rsp+0x30],rax
   140033624:	mov    DWORD PTR [rsp+0x28],r9d
   140033629:	and    QWORD PTR [rsp+0x20],0x0
   14003362f:	mov    r9,r11
   140033632:	call   QWORD PTR [r10+0x188]
   140033639:	add    rsp,0x68
   14003363d:	ret    
   14003363e:	int3   
   14003363f:	int3   
   140033640:	mov    rax,rsp
   140033643:	mov    QWORD PTR [rax+0x8],rbx
   140033647:	mov    QWORD PTR [rax+0x10],rbp
   14003364b:	mov    QWORD PTR [rax+0x18],rsi
   14003364f:	mov    QWORD PTR [rax+0x20],rdi
   140033653:	push   r12
   140033655:	sub    rsp,0x40
   140033659:	mov    rsi,QWORD PTR [rsp+0x78]
   14003365e:	mov    rdi,rcx
   140033661:	mov    rbp,r9
   140033664:	mov    rcx,rsi
   140033667:	mov    ebx,r8d
   14003366a:	mov    r12,rdx
   14003366d:	call   QWORD PTR [rip+0x31015]        # 0x140064688
   140033673:	and    QWORD PTR [rsp+0x30],0x0
   140033679:	xor    r8d,r8d
   14003367c:	test   eax,eax
   14003367e:	lea    rax,[rsp+0x30]
   140033683:	mov    edx,ebx
   140033685:	mov    QWORD PTR [rsp+0x20],rax
   14003368a:	mov    rcx,rdi
   14003368d:	jne    0x1400336ba
   14003368f:	lea    r9,[rip+0x3cdb2]        # 0x140070448
   140033696:	call   QWORD PTR [rip+0x31574]        # 0x140064c10
   14003369c:	test   eax,eax
   14003369e:	mov    ebx,eax
   1400336a0:	js     0x1400336fe
   1400336a2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400336a7:	mov    r9,QWORD PTR [rsp+0x70]
   1400336ac:	mov    r8,rbp
   1400336af:	mov    rax,QWORD PTR [rcx]
   1400336b2:	mov    rdx,r12
   1400336b5:	call   QWORD PTR [rax+0x18]
   1400336b8:	jmp    0x1400336f1
   1400336ba:	lea    r9,[rip+0x3cec7]        # 0x140070588
   1400336c1:	call   QWORD PTR [rip+0x31549]        # 0x140064c10
   1400336c7:	test   eax,eax
   1400336c9:	mov    ebx,eax
   1400336cb:	js     0x1400336fe
   1400336cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400336d2:	mov    rax,QWORD PTR [rsp+0x70]
   1400336d7:	mov    r9,rbp
   1400336da:	mov    r10,QWORD PTR [rcx]
   1400336dd:	mov    QWORD PTR [rsp+0x28],rax
   1400336e2:	xor    r8d,r8d
   1400336e5:	mov    rdx,r12
   1400336e8:	mov    QWORD PTR [rsp+0x20],rsi
   1400336ed:	call   QWORD PTR [r10+0x38]
   1400336f1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400336f6:	mov    ebx,eax
   1400336f8:	mov    rax,QWORD PTR [rcx]
   1400336fb:	call   QWORD PTR [rax+0x10]
   1400336fe:	mov    rbp,QWORD PTR [rsp+0x58]
   140033703:	mov    rsi,QWORD PTR [rsp+0x60]
   140033708:	mov    rdi,QWORD PTR [rsp+0x68]
   14003370d:	mov    eax,ebx
   14003370f:	mov    rbx,QWORD PTR [rsp+0x50]
   140033714:	add    rsp,0x40
   140033718:	pop    r12
   14003371a:	ret    
   14003371b:	int3   
   14003371c:	mov    eax,0x8000ffff
   140033721:	ret    
   140033722:	int3   
   140033723:	int3   
   140033724:	bt     DWORD PTR [rcx+0xb0],0xc
   14003372c:	jae    0x14003373b
   14003372e:	mov    eax,0x1
   140033733:	test   BYTE PTR [rcx+0xac],al
   140033739:	jne    0x14003373d
   14003373b:	xor    eax,eax
   14003373d:	ret    
   14003373e:	int3   
   14003373f:	int3   
   140033740:	bt     DWORD PTR [rcx+0xb0],0xc
   140033748:	jae    0x14003375d
   14003374a:	mov    eax,DWORD PTR [rcx+0xac]
   140033750:	and    al,0x1
   140033752:	neg    al
   140033754:	sbb    eax,eax
   140033756:	and    eax,0xfffffff0
   140033759:	add    eax,0x20
   14003375c:	ret    
   14003375d:	xor    eax,eax
   14003375f:	ret    
   140033760:	sub    rsp,0x28
   140033764:	bt     DWORD PTR [rcx+0xb0],0xc
   14003376c:	jae    0x1400337dc
   14003376e:	mov    r9d,DWORD PTR [rcx+0xac]
   140033775:	xor    r8d,r8d
   140033778:	test   edx,edx
   14003377a:	setne  r8b
   14003377e:	mov    eax,r9d
   140033781:	and    eax,0x1
   140033784:	cmp    eax,r8d
   140033787:	je     0x1400337dc
   140033789:	and    QWORD PTR [rsp+0x30],0x0
   14003378f:	xor    r9d,0x1
   140033793:	mov    DWORD PTR [rcx+0xac],r9d
   14003379a:	mov    rcx,QWORD PTR [rcx+0x80]
   1400337a1:	test   rcx,rcx
   1400337a4:	jne    0x1400337ac
   1400337a6:	call   0x1400208f8
   1400337ab:	int3   
   1400337ac:	mov    rax,QWORD PTR [rcx]
   1400337af:	lea    r8,[rsp+0x30]
   1400337b4:	lea    rdx,[rip+0x3cd9d]        # 0x140070558
   1400337bb:	call   QWORD PTR [rax]
   1400337bd:	test   eax,eax
   1400337bf:	js     0x1400337dc
   1400337c1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400337c6:	mov    edx,0xfffffd37
   1400337cb:	mov    rax,QWORD PTR [rcx]
   1400337ce:	call   QWORD PTR [rax+0x28]
   1400337d1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400337d6:	mov    rax,QWORD PTR [rcx]
   1400337d9:	call   QWORD PTR [rax+0x10]
   1400337dc:	add    rsp,0x28
   1400337e0:	ret    
   1400337e1:	int3   
   1400337e2:	int3   
   1400337e3:	int3   
   1400337e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400337e9:	push   rdi
   1400337ea:	sub    rsp,0x30
   1400337ee:	cmp    QWORD PTR [rcx+0x80],0x0
   1400337f6:	mov    rdi,r8
   1400337f9:	mov    rbx,rdx
   1400337fc:	je     0x14003386b
   1400337fe:	mov    rcx,QWORD PTR [rcx+0x80]
   140033805:	lea    r8,[rsp+0x20]
   14003380a:	lea    rdx,[rip+0x3cd87]        # 0x140070598
   140033811:	mov    rax,QWORD PTR [rcx]
   140033814:	call   QWORD PTR [rax]
   140033816:	test   eax,eax
   140033818:	js     0x14003386b
   14003381a:	mov    rcx,QWORD PTR [rsp+0x20]
   14003381f:	and    QWORD PTR [rsp+0x58],0x0
   140033825:	and    DWORD PTR [rsp+0x40],0x0
   14003382a:	mov    rax,QWORD PTR [rcx]
   14003382d:	lea    r8,[rsp+0x58]
   140033832:	mov    rdx,rbx
   140033835:	call   QWORD PTR [rax+0x20]
   140033838:	test   eax,eax
   14003383a:	js     0x14003385a
   14003383c:	mov    rcx,QWORD PTR [rsp+0x58]
   140033841:	lea    r8,[rsp+0x40]
   140033846:	mov    rdx,rdi
   140033849:	mov    rax,QWORD PTR [rcx]
   14003384c:	call   QWORD PTR [rax+0x28]
   14003384f:	mov    rcx,QWORD PTR [rsp+0x58]
   140033854:	mov    rax,QWORD PTR [rcx]
   140033857:	call   QWORD PTR [rax+0x10]
   14003385a:	mov    rcx,QWORD PTR [rsp+0x20]
   14003385f:	mov    rax,QWORD PTR [rcx]
   140033862:	call   QWORD PTR [rax+0x10]
   140033865:	mov    eax,DWORD PTR [rsp+0x40]
   140033869:	jmp    0x14003386d
   14003386b:	xor    eax,eax
   14003386d:	mov    rbx,QWORD PTR [rsp+0x48]
   140033872:	add    rsp,0x30
   140033876:	pop    rdi
   140033877:	ret    
   140033878:	test   r8d,r8d
   14003387b:	je     0x140033901
   140033881:	mov    QWORD PTR [rsp+0x8],rbx
   140033886:	push   rdi
   140033887:	sub    rsp,0x30
   14003388b:	cmp    QWORD PTR [rcx+0x80],0x0
   140033893:	mov    ebx,r8d
   140033896:	mov    rdi,rdx
   140033899:	je     0x1400338f7
   14003389b:	mov    rcx,QWORD PTR [rcx+0x80]
   1400338a2:	lea    r8,[rsp+0x20]
   1400338a7:	lea    rdx,[rip+0x3ccea]        # 0x140070598
   1400338ae:	mov    rax,QWORD PTR [rcx]
   1400338b1:	call   QWORD PTR [rax]
   1400338b3:	test   eax,eax
   1400338b5:	js     0x1400338f7
   1400338b7:	mov    rcx,QWORD PTR [rsp+0x20]
   1400338bc:	and    QWORD PTR [rsp+0x58],0x0
   1400338c2:	lea    r8,[rsp+0x58]
   1400338c7:	mov    rax,QWORD PTR [rcx]
   1400338ca:	mov    rdx,rdi
   1400338cd:	call   QWORD PTR [rax+0x20]
   1400338d0:	test   eax,eax
   1400338d2:	js     0x1400338ec
   1400338d4:	mov    rcx,QWORD PTR [rsp+0x58]
   1400338d9:	mov    edx,ebx
   1400338db:	mov    rax,QWORD PTR [rcx]
   1400338de:	call   QWORD PTR [rax+0x30]
   1400338e1:	mov    rcx,QWORD PTR [rsp+0x58]
   1400338e6:	mov    rax,QWORD PTR [rcx]
   1400338e9:	call   QWORD PTR [rax+0x10]
   1400338ec:	mov    rcx,QWORD PTR [rsp+0x20]
   1400338f1:	mov    rax,QWORD PTR [rcx]
   1400338f4:	call   QWORD PTR [rax+0x10]
   1400338f7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400338fc:	add    rsp,0x30
   140033900:	pop    rdi
   140033901:	ret    
   140033902:	int3   
   140033903:	int3   
   140033904:	rex push rbx
   140033906:	push   rsi
   140033907:	push   rdi
   140033908:	sub    rsp,0x40
   14003390c:	movdqu xmm0,XMMWORD PTR [rip+0x3caa4]        # 0x1400703b8
   140033914:	mov    rdi,rcx
   140033917:	mov    rsi,rdx
   14003391a:	xor    ebx,ebx
   14003391c:	lea    r8,[rsp+0x20]
   140033921:	mov    QWORD PTR [rsp+0x20],rbx
   140033926:	movdqu XMMWORD PTR [rdx],xmm0
   14003392a:	mov    rcx,QWORD PTR [rcx+0x80]
   140033931:	lea    rdx,[rip+0x3cc30]        # 0x140070568
   140033938:	mov    rax,QWORD PTR [rcx]
   14003393b:	call   QWORD PTR [rax]
   14003393d:	cmp    eax,ebx
   14003393f:	jl     0x14003395d
   140033941:	mov    rcx,QWORD PTR [rsp+0x20]
   140033946:	lea    edx,[rbx+0x1]
   140033949:	mov    r8,rsi
   14003394c:	mov    rax,QWORD PTR [rcx]
   14003394f:	call   QWORD PTR [rax+0x20]
   140033952:	mov    rcx,QWORD PTR [rsp+0x20]
   140033957:	mov    rax,QWORD PTR [rcx]
   14003395a:	call   QWORD PTR [rax+0x10]
   14003395d:	lea    rdx,[rip+0x3ca54]        # 0x1400703b8
   140033964:	mov    r8d,0x10
   14003396a:	mov    rcx,rsi
   14003396d:	mov    QWORD PTR [rsp+0x30],rbx
   140033972:	call   0x1400488e0
   140033977:	cmp    eax,ebx
   140033979:	jne    0x140033aaf
   14003397f:	mov    rcx,QWORD PTR [rdi+0x80]
   140033986:	lea    r8,[rsp+0x30]
   14003398b:	lea    rdx,[rip+0x3cbe6]        # 0x140070578
   140033992:	mov    rax,QWORD PTR [rcx]
   140033995:	call   QWORD PTR [rax]
   140033997:	cmp    eax,ebx
   140033999:	jl     0x140033aaf
   14003399f:	mov    rcx,QWORD PTR [rsp+0x30]
   1400339a4:	mov    QWORD PTR [rsp+0x70],rbx
   1400339a9:	lea    rdx,[rsp+0x70]
   1400339ae:	mov    rax,QWORD PTR [rcx]
   1400339b1:	call   QWORD PTR [rax+0x18]
   1400339b4:	cmp    eax,ebx
   1400339b6:	jl     0x140033aa3
   1400339bc:	mov    rcx,QWORD PTR [rsp+0x70]
   1400339c1:	lea    rdx,[rsp+0x28]
   1400339c6:	mov    rax,QWORD PTR [rcx]
   1400339c9:	call   QWORD PTR [rax+0x18]
   1400339cc:	cmp    eax,ebx
   1400339ce:	jl     0x140033a98
   1400339d4:	mov    rax,QWORD PTR [rsp+0x28]
   1400339d9:	mov    edi,ebx
   1400339db:	cmp    WORD PTR [rax+0x34],bx
   1400339df:	jbe    0x140033a85
   1400339e5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400339ea:	lea    r8,[rsp+0x60]
   1400339ef:	mov    edx,edi
   1400339f1:	mov    rax,QWORD PTR [rcx]
   1400339f4:	call   QWORD PTR [rax+0x48]
   1400339f7:	cmp    eax,ebx
   1400339f9:	jl     0x140033a06
   1400339fb:	mov    eax,DWORD PTR [rsp+0x60]
   1400339ff:	and    eax,0x7
   140033a02:	cmp    al,0x3
   140033a04:	je     0x140033a18
   140033a06:	mov    rax,QWORD PTR [rsp+0x28]
   140033a0b:	add    edi,0x1
   140033a0e:	movzx  ecx,WORD PTR [rax+0x34]
   140033a12:	cmp    edi,ecx
   140033a14:	jae    0x140033a85
   140033a16:	jmp    0x1400339e5
   140033a18:	mov    rcx,QWORD PTR [rsp+0x70]
   140033a1d:	mov    QWORD PTR [rsp+0x78],rbx
   140033a22:	lea    r8,[rsp+0x68]
   140033a27:	mov    rax,QWORD PTR [rcx]
   140033a2a:	mov    edx,edi
   140033a2c:	call   QWORD PTR [rax+0x40]
   140033a2f:	cmp    eax,ebx
   140033a31:	jl     0x140033a85
   140033a33:	mov    rcx,QWORD PTR [rsp+0x70]
   140033a38:	mov    edx,DWORD PTR [rsp+0x68]
   140033a3c:	lea    r8,[rsp+0x78]
   140033a41:	mov    rax,QWORD PTR [rcx]
   140033a44:	call   QWORD PTR [rax+0x70]
   140033a47:	cmp    eax,ebx
   140033a49:	jl     0x140033a85
   140033a4b:	mov    rcx,QWORD PTR [rsp+0x78]
   140033a50:	lea    rdx,[rsp+0x38]
   140033a55:	mov    rax,QWORD PTR [rcx]
   140033a58:	call   QWORD PTR [rax+0x18]
   140033a5b:	cmp    eax,ebx
   140033a5d:	jl     0x140033a7a
   140033a5f:	mov    rdx,QWORD PTR [rsp+0x38]
   140033a64:	mov    rcx,QWORD PTR [rsp+0x78]
   140033a69:	movdqu xmm0,XMMWORD PTR [rdx]
   140033a6d:	movdqu XMMWORD PTR [rsi],xmm0
   140033a71:	mov    rax,QWORD PTR [rcx]
   140033a74:	call   QWORD PTR [rax+0x98]
   140033a7a:	mov    rcx,QWORD PTR [rsp+0x78]
   140033a7f:	mov    rax,QWORD PTR [rcx]
   140033a82:	call   QWORD PTR [rax+0x10]
   140033a85:	mov    rcx,QWORD PTR [rsp+0x70]
   140033a8a:	mov    rdx,QWORD PTR [rsp+0x28]
   140033a8f:	mov    rax,QWORD PTR [rcx]
   140033a92:	call   QWORD PTR [rax+0x98]
   140033a98:	mov    rcx,QWORD PTR [rsp+0x70]
   140033a9d:	mov    rax,QWORD PTR [rcx]
   140033aa0:	call   QWORD PTR [rax+0x10]
   140033aa3:	mov    rcx,QWORD PTR [rsp+0x30]
   140033aa8:	mov    r9,QWORD PTR [rcx]
   140033aab:	call   QWORD PTR [r9+0x10]
   140033aaf:	lea    rdx,[rip+0x3c902]        # 0x1400703b8
   140033ab6:	mov    r8d,0x10
   140033abc:	mov    rcx,rsi
   140033abf:	call   0x1400488e0
   140033ac4:	cmp    eax,ebx
   140033ac6:	setne  bl
   140033ac9:	mov    eax,ebx
   140033acb:	add    rsp,0x40
   140033acf:	pop    rdi
   140033ad0:	pop    rsi
   140033ad1:	pop    rbx
   140033ad2:	ret    
   140033ad3:	int3   
   140033ad4:	mov    QWORD PTR [rsp+0x10],rbx
   140033ad9:	push   rdi
   140033ada:	sub    rsp,0x20
   140033ade:	xor    edx,edx
   140033ae0:	mov    rbx,rcx
   140033ae3:	add    rcx,0xb8
   140033aea:	lea    r8d,[rdx+0x18]
   140033aee:	call   0x140047720
   140033af3:	mov    rcx,QWORD PTR [rbx+0x80]
   140033afa:	and    QWORD PTR [rsp+0x30],0x0
   140033b00:	test   rcx,rcx
   140033b03:	mov    DWORD PTR [rbx+0xb8],0x18
   140033b0d:	jne    0x140033b15
   140033b0f:	call   0x1400208f8
   140033b14:	int3   
   140033b15:	mov    rax,QWORD PTR [rcx]
   140033b18:	lea    r8,[rsp+0x30]
   140033b1d:	lea    rdx,[rip+0x3ca34]        # 0x140070558
   140033b24:	call   QWORD PTR [rax]
   140033b26:	test   eax,eax
   140033b28:	js     0x140033b47
   140033b2a:	mov    rcx,QWORD PTR [rsp+0x30]
   140033b2f:	lea    rdx,[rbx+0xb8]
   140033b36:	mov    rax,QWORD PTR [rcx]
   140033b39:	call   QWORD PTR [rax+0x18]
   140033b3c:	mov    rcx,QWORD PTR [rsp+0x30]
   140033b41:	mov    rax,QWORD PTR [rcx]
   140033b44:	call   QWORD PTR [rax+0x10]
   140033b47:	mov    rbx,QWORD PTR [rsp+0x38]
   140033b4c:	add    rsp,0x20
   140033b50:	pop    rdi
   140033b51:	ret    
   140033b52:	int3   
   140033b53:	int3   
   140033b54:	mov    QWORD PTR [rsp+0x8],rbx
   140033b59:	mov    QWORD PTR [rsp+0x10],rbp
   140033b5e:	mov    QWORD PTR [rsp+0x18],rsi
   140033b63:	push   rdi
   140033b64:	sub    rsp,0x20
   140033b68:	movzx  eax,WORD PTR [rcx+0xc8]
   140033b6f:	xor    ebx,ebx
   140033b71:	mov    rsi,rdx
   140033b74:	cmp    ax,bx
   140033b77:	mov    rdi,rcx
   140033b7a:	je     0x140033c20
   140033b80:	cmp    QWORD PTR [rcx+0xc0],rbx
   140033b87:	je     0x140033c20
   140033b8d:	movzx  r8d,ax
   140033b91:	lea    rcx,[rbx-0x1]
   140033b95:	lea    eax,[rbx+0x6]
   140033b98:	mul    r8
   140033b9b:	cmovo  rax,rcx
   140033b9f:	mov    rcx,rax
   140033ba2:	call   0x14001ac0c
   140033ba7:	movzx  r8d,WORD PTR [rdi+0xc8]
   140033baf:	mov    rcx,QWORD PTR [rdi+0xc0]
   140033bb6:	mov    rdx,rax
   140033bb9:	mov    rbp,rax
   140033bbc:	call   QWORD PTR [rip+0x30ec6]        # 0x140064a88
   140033bc2:	mov    r8,rbx
   140033bc5:	movsxd r9,eax
   140033bc8:	cmp    r9,rbx
   140033bcb:	jle    0x140033c07
   140033bcd:	mov    rdx,rbp
   140033bd0:	cmp    rsi,rbx
   140033bd3:	je     0x140033c1a
   140033bd5:	cmp    DWORD PTR [rsi+0x8],0x106
   140033bdc:	mov    eax,0x10
   140033be1:	mov    ecx,ebx
   140033be3:	cmove  ecx,eax
   140033be6:	movzx  eax,BYTE PTR [rdx]
   140033be9:	and    eax,0xfffffffd
   140033bec:	cmp    eax,ecx
   140033bee:	jne    0x140033bfa
   140033bf0:	movzx  eax,WORD PTR [rsi+0x10]
   140033bf4:	cmp    WORD PTR [rdx+0x2],ax
   140033bf8:	je     0x140033c13
   140033bfa:	add    r8,0x1
   140033bfe:	add    rdx,0x6
   140033c02:	cmp    r8,r9
   140033c05:	jl     0x140033bd0
   140033c07:	mov    rcx,rbp
   140033c0a:	call   0x14001ac50
   140033c0f:	mov    eax,ebx
   140033c11:	jmp    0x140033c22
   140033c13:	mov    ebx,0x1
   140033c18:	jmp    0x140033c07
   140033c1a:	call   0x1400208f8
   140033c1f:	int3   
   140033c20:	xor    eax,eax
   140033c22:	mov    rbx,QWORD PTR [rsp+0x30]
   140033c27:	mov    rbp,QWORD PTR [rsp+0x38]
   140033c2c:	mov    rsi,QWORD PTR [rsp+0x40]
   140033c31:	add    rsp,0x20
   140033c35:	pop    rdi
   140033c36:	ret    
   140033c37:	int3   
   140033c38:	mov    QWORD PTR [rsp+0x10],rbx
   140033c3d:	push   rdi
   140033c3e:	sub    rsp,0x20
   140033c42:	bt     DWORD PTR [rcx+0xb0],0xe
   140033c4a:	mov    rdi,rdx
   140033c4d:	mov    rbx,rcx
   140033c50:	jb     0x140033c5b
   140033c52:	mov    rax,QWORD PTR [rcx]
   140033c55:	call   QWORD PTR [rax+0x160]
   140033c5b:	and    QWORD PTR [rsp+0x30],0x0
   140033c61:	cmp    QWORD PTR [rbx+0x80],0x0
   140033c69:	jne    0x140033c71
   140033c6b:	call   0x1400208f8
   140033c70:	int3   
   140033c71:	mov    rcx,QWORD PTR [rbx+0x80]
   140033c78:	lea    r8,[rsp+0x30]
   140033c7d:	lea    rdx,[rip+0x3c8d4]        # 0x140070558
   140033c84:	mov    rax,QWORD PTR [rcx]
   140033c87:	call   QWORD PTR [rax]
   140033c89:	test   eax,eax
   140033c8b:	js     0x140033cb1
   140033c8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140033c92:	test   rcx,rcx
   140033c95:	jne    0x140033c9d
   140033c97:	call   0x1400208f8
   140033c9c:	int3   
   140033c9d:	mov    rax,QWORD PTR [rcx]
   140033ca0:	mov    rdx,rdi
   140033ca3:	call   QWORD PTR [rax+0x20]
   140033ca6:	mov    rcx,QWORD PTR [rsp+0x30]
   140033cab:	mov    rax,QWORD PTR [rcx]
   140033cae:	call   QWORD PTR [rax+0x10]
   140033cb1:	mov    rbx,QWORD PTR [rsp+0x38]
   140033cb6:	add    rsp,0x20
   140033cba:	pop    rdi
   140033cbb:	ret    
   140033cbc:	rex push rbx
   140033cbe:	sub    rsp,0x20
   140033cc2:	cmp    QWORD PTR [rcx+0x80],0x0
   140033cca:	mov    ebx,edx
   140033ccc:	jne    0x140033cd4
   140033cce:	call   0x1400208f8
   140033cd3:	int3   
   140033cd4:	mov    rcx,QWORD PTR [rcx+0x80]
   140033cdb:	and    QWORD PTR [rsp+0x30],0x0
   140033ce1:	lea    r8,[rsp+0x30]
   140033ce6:	mov    rax,QWORD PTR [rcx]
   140033ce9:	lea    rdx,[rip+0x3c868]        # 0x140070558
   140033cf0:	call   QWORD PTR [rax]
   140033cf2:	test   eax,eax
   140033cf4:	js     0x140033d19
   140033cf6:	mov    rcx,QWORD PTR [rsp+0x30]
   140033cfb:	test   rcx,rcx
   140033cfe:	jne    0x140033d06
   140033d00:	call   0x1400208f8
   140033d05:	int3   
   140033d06:	mov    rax,QWORD PTR [rcx]
   140033d09:	mov    edx,ebx
   140033d0b:	call   QWORD PTR [rax+0x30]
   140033d0e:	mov    rcx,QWORD PTR [rsp+0x30]
   140033d13:	mov    rax,QWORD PTR [rcx]
   140033d16:	call   QWORD PTR [rax+0x10]
   140033d19:	add    rsp,0x20
   140033d1d:	pop    rbx
   140033d1e:	ret    
   140033d1f:	int3   
   140033d20:	rex push rbx
   140033d22:	sub    rsp,0x20
   140033d26:	mov    rbx,rcx
   140033d29:	mov    rcx,QWORD PTR [rcx+0x88]
   140033d30:	test   rcx,rcx
   140033d33:	jne    0x140033d3b
   140033d35:	call   0x1400208f8
   140033d3a:	int3   
   140033d3b:	and    QWORD PTR [rsp+0x30],0x0
   140033d41:	mov    rax,QWORD PTR [rcx]
   140033d44:	lea    rdx,[rsp+0x30]
   140033d49:	call   QWORD PTR [rax+0x18]
   140033d4c:	test   eax,eax
   140033d4e:	js     0x140033d78
   140033d50:	mov    rdx,QWORD PTR [rsp+0x30]
   140033d55:	cmp    QWORD PTR [rbx+0x48],rdx
   140033d59:	je     0x140033d78
   140033d5b:	mov    rcx,QWORD PTR [rbx+0x50]
   140033d5f:	mov    QWORD PTR [rbx+0x48],rdx
   140033d63:	test   rcx,rcx
   140033d66:	je     0x140033d78
   140033d68:	call   0x140025760
   140033d6d:	mov    r11,QWORD PTR [rbx+0x50]
   140033d71:	mov    QWORD PTR [r11+0xa0],rbx
   140033d78:	add    rsp,0x20
   140033d7c:	pop    rbx
   140033d7d:	ret    
   140033d7e:	int3   
   140033d7f:	int3   
   140033d80:	mov    QWORD PTR [rsp+0x8],rbx
   140033d85:	push   rdi
   140033d86:	sub    rsp,0x20
   140033d8a:	and    QWORD PTR [rcx+0x48],0x0
   140033d8f:	mov    rbx,rcx
   140033d92:	mov    rcx,QWORD PTR [rcx+0x50]
   140033d96:	test   rcx,rcx
   140033d99:	je     0x140033de4
   140033d9b:	cmp    QWORD PTR [rcx+0x40],0x0
   140033da0:	je     0x140033dd8
   140033da2:	mov    rax,QWORD PTR [rcx]
   140033da5:	call   QWORD PTR [rax+0x1e0]
   140033dab:	mov    rcx,QWORD PTR [rbx+0x50]
   140033daf:	mov    rcx,QWORD PTR [rcx+0x40]
   140033db3:	mov    rdi,rax
   140033db6:	call   QWORD PTR [rip+0x30c1c]        # 0x1400649d8
   140033dbc:	test   eax,eax
   140033dbe:	je     0x140033dcf
   140033dc0:	cmp    QWORD PTR [rdi],0x0
   140033dc4:	je     0x140033dcf
   140033dc6:	mov    rcx,QWORD PTR [rbx+0x50]
   140033dca:	call   0x140025f20
   140033dcf:	mov    rcx,QWORD PTR [rbx+0x50]
   140033dd3:	call   0x1400257c0
   140033dd8:	mov    rax,QWORD PTR [rbx+0x50]
   140033ddc:	and    QWORD PTR [rax+0xa0],0x0
   140033de4:	mov    rbx,QWORD PTR [rsp+0x30]
   140033de9:	add    rsp,0x20
   140033ded:	pop    rdi
   140033dee:	ret    
   140033def:	int3   
   140033df0:	mov    QWORD PTR [rsp+0x8],rbx
   140033df5:	push   rdi
   140033df6:	sub    rsp,0x30
   140033dfa:	cmp    QWORD PTR [rcx+0x50],0x0
   140033dff:	mov    rdi,rdx
   140033e02:	mov    rbx,rcx
   140033e05:	je     0x140033e37
   140033e07:	mov    rcx,QWORD PTR [rcx+0x50]
   140033e0b:	and    QWORD PTR [rsp+0x20],0x0
   140033e11:	mov    r9,rdx
   140033e14:	mov    rax,QWORD PTR [rcx]
   140033e17:	mov    edx,DWORD PTR [rbx+0x58]
   140033e1a:	mov    r8d,0xfffffffe
   140033e20:	call   QWORD PTR [rax+0x18]
   140033e23:	test   eax,eax
   140033e25:	je     0x140033e37
   140033e27:	mov    eax,0x1
   140033e2c:	mov    rbx,QWORD PTR [rsp+0x40]
   140033e31:	add    rsp,0x30
   140033e35:	pop    rdi
   140033e36:	ret    
   140033e37:	mov    rax,QWORD PTR [rbx+0x40]
   140033e3b:	test   rax,rax
   140033e3e:	je     0x140033e65
   140033e40:	cmp    QWORD PTR [rax+0x40],0x0
   140033e45:	je     0x140033e65
   140033e47:	mov    rcx,QWORD PTR [rax+0x40]
   140033e4b:	mov    edx,DWORD PTR [rbx+0x58]
   140033e4e:	and    QWORD PTR [rsp+0x20],0x0
   140033e54:	mov    rax,QWORD PTR [rcx]
   140033e57:	mov    r9,rdi
   140033e5a:	mov    r8d,0xfffffffe
   140033e60:	call   QWORD PTR [rax+0x18]
   140033e63:	jmp    0x140033e2c
   140033e65:	call   0x1400208f8
   140033e6a:	int3   
   140033e6b:	int3   
   140033e6c:	mov    r11,rsp
   140033e6f:	mov    QWORD PTR [r11+0x10],rbx
   140033e73:	mov    QWORD PTR [r11+0x18],rbp
   140033e77:	mov    QWORD PTR [r11+0x20],rsi
   140033e7b:	push   rdi
   140033e7c:	sub    rsp,0x40
   140033e80:	lea    rbx,[rcx+0x120]
   140033e87:	movzx  edi,r9w
   140033e8b:	movzx  esi,r8w
   140033e8f:	cmp    QWORD PTR [rbx],0x0
   140033e93:	mov    ebp,edx
   140033e95:	jne    0x140033ed5
   140033e97:	cmp    QWORD PTR [rcx+0x80],0x0
   140033e9f:	je     0x140033ecf
   140033ea1:	mov    rcx,QWORD PTR [rcx+0x80]
   140033ea8:	lea    r8,[r11+0x8]
   140033eac:	lea    rdx,[rip+0x3c515]        # 0x1400703c8
   140033eb3:	mov    rax,QWORD PTR [rcx]
   140033eb6:	call   QWORD PTR [rax]
   140033eb8:	test   eax,eax
   140033eba:	js     0x140033ecf
   140033ebc:	mov    rdx,QWORD PTR [rsp+0x50]
   140033ec1:	mov    r8d,0x1
   140033ec7:	mov    rcx,rbx
   140033eca:	call   0x1400424d0
   140033ecf:	cmp    QWORD PTR [rbx],0x0
   140033ed3:	je     0x140033f08
   140033ed5:	mov    rax,QWORD PTR [rsp+0x80]
   140033edd:	movzx  r9d,di
   140033ee1:	movzx  r8d,si
   140033ee5:	mov    QWORD PTR [rsp+0x30],rax
   140033eea:	mov    rax,QWORD PTR [rsp+0x78]
   140033eef:	mov    edx,ebp
   140033ef1:	mov    QWORD PTR [rsp+0x28],rax
   140033ef6:	mov    rax,QWORD PTR [rsp+0x70]
   140033efb:	mov    rcx,rbx
   140033efe:	mov    QWORD PTR [rsp+0x20],rax
   140033f03:	call   0x140042570
   140033f08:	mov    rbx,QWORD PTR [rsp+0x58]
   140033f0d:	mov    rbp,QWORD PTR [rsp+0x60]
   140033f12:	mov    rsi,QWORD PTR [rsp+0x68]
   140033f17:	add    rsp,0x40
   140033f1b:	pop    rdi
   140033f1c:	ret    
   140033f1d:	int3   
   140033f1e:	int3   
   140033f1f:	int3   
   140033f20:	sub    rsp,0x48
   140033f24:	bt     r8w,0xe
   140033f2a:	mov    r10,rcx
   140033f2d:	jae    0x140033f3a
   140033f2f:	and    r8w,0xbfff
   140033f35:	or     r8w,0x40
   140033f3a:	bt     r8w,0xf
   140033f40:	mov    ecx,0x8
   140033f45:	jae    0x140033f4f
   140033f47:	and    r8w,0x7fff
   140033f4d:	jmp    0x140033f60
   140033f4f:	mov    eax,0x4
   140033f54:	cmp    r8w,0x9
   140033f59:	cmove  ax,cx
   140033f5d:	mov    cx,ax
   140033f60:	mov    rax,QWORD PTR [r10]
   140033f63:	mov    QWORD PTR [rsp+0x30],r9
   140033f68:	mov    BYTE PTR [rsp+0x60],r8b
   140033f6d:	lea    r8,[rsp+0x60]
   140033f72:	xor    r9d,r9d
   140033f75:	mov    BYTE PTR [rsp+0x61],0x0
   140033f7a:	mov    QWORD PTR [rsp+0x28],r8
   140033f7f:	and    QWORD PTR [rsp+0x20],0x0
   140033f85:	movzx  r8d,cx
   140033f89:	mov    rcx,r10
   140033f8c:	call   QWORD PTR [rax+0xc0]
   140033f92:	add    rsp,0x48
   140033f96:	ret    
   140033f97:	int3   
   140033f98:	mov    r11,rsp
   140033f9b:	sub    rsp,0x48
   140033f9f:	mov    r10,QWORD PTR [rcx]
   140033fa2:	lea    rax,[r11+0x38]
   140033fa6:	mov    QWORD PTR [r11-0x18],rax
   140033faa:	mov    rax,QWORD PTR [r11+0x30]
   140033fae:	mov    QWORD PTR [r11-0x20],rax
   140033fb2:	mov    rax,QWORD PTR [rsp+0x70]
   140033fb7:	mov    QWORD PTR [r11-0x28],rax
   140033fbb:	call   QWORD PTR [r10+0xc0]
   140033fc2:	add    rsp,0x48
   140033fc6:	ret    
   140033fc7:	int3   
   140033fc8:	sub    rsp,0x38
   140033fcc:	and    QWORD PTR [rsp+0x28],0x0
   140033fd2:	mov    rax,QWORD PTR [rcx]
   140033fd5:	mov    QWORD PTR [rsp+0x20],r9
   140033fda:	movzx  r9d,r8w
   140033fde:	mov    r8d,0x2
   140033fe4:	call   QWORD PTR [rax+0xd0]
   140033fea:	add    rsp,0x38
   140033fee:	ret    
   140033fef:	int3   
   140033ff0:	mov    WORD PTR [rsp+0x18],r8w
   140033ff6:	mov    QWORD PTR [rsp+0x20],r9
   140033ffb:	sub    rsp,0x28
   140033fff:	mov    rax,QWORD PTR [rcx]
   140034002:	lea    r9,[rsp+0x48]
   140034007:	call   QWORD PTR [rax+0xc8]
   14003400d:	add    rsp,0x28
   140034011:	ret    
   140034012:	int3   
   140034013:	int3   
   140034014:	mov    r11,rsp
   140034017:	mov    WORD PTR [r11+0x18],r8w
   14003401c:	mov    QWORD PTR [r11+0x20],r9
   140034020:	sub    rsp,0x48
   140034024:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14003402d:	lea    r9,[r11+0x20]
   140034031:	mov    rax,QWORD PTR [rcx]
   140034034:	movzx  r8d,WORD PTR [r11+0x18]
   140034039:	call   QWORD PTR [rax+0xc8]
   14003403f:	mov    eax,0x1
   140034044:	jmp    0x14003404a
   140034046:	mov    eax,DWORD PTR [rsp+0x20]
   14003404a:	add    rsp,0x48
   14003404e:	ret    
   14003404f:	int3   
   140034050:	int3   
   140034051:	int3   
   140034052:	int3   
   140034053:	int3   
   140034054:	mov    QWORD PTR [rsp+0x10],rdx
   140034059:	push   rbp
   14003405a:	sub    rsp,0x20
   14003405e:	mov    rbp,rdx
   140034061:	mov    rcx,QWORD PTR [rbp+0x30]
   140034065:	test   rcx,rcx
   140034068:	je     0x14003406f
   14003406a:	call   0x1400207b8
   14003406f:	and    DWORD PTR [rbp+0x20],0x0
   140034073:	lea    rax,[rip+0xffffffffffffffcc]        # 0x140034046
   14003407a:	jmp    0x14003407c
   14003407c:	add    rsp,0x20
   140034080:	pop    rbp
   140034081:	ret    
   140034082:	int3   
   140034083:	int3   
   140034084:	mov    QWORD PTR [rsp+0x8],rcx
   140034089:	push   rdi
   14003408a:	sub    rsp,0x40
   14003408e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140034097:	mov    QWORD PTR [rsp+0x68],rbx
   14003409c:	mov    rdi,rcx
   14003409f:	mov    ebx,DWORD PTR [rcx+0xac]
   1400340a5:	mov    DWORD PTR [rsp+0x58],ebx
   1400340a9:	cmp    DWORD PTR [rcx+0xb4],0x0
   1400340b0:	jne    0x1400340cc
   1400340b2:	mov    edx,0xfffffff0
   1400340b7:	mov    rcx,QWORD PTR [rcx+0x48]
   1400340bb:	call   QWORD PTR [rip+0x3093f]        # 0x140064a00
   1400340c1:	and    eax,0x18000000
   1400340c6:	or     ebx,eax
   1400340c8:	mov    DWORD PTR [rsp+0x58],ebx
   1400340cc:	mov    DWORD PTR [rsp+0x60],0x1
   1400340d4:	mov    rax,QWORD PTR [rdi]
   1400340d7:	lea    r9,[rsp+0x60]
   1400340dc:	mov    r8w,0xb
   1400340e1:	mov    edx,0xfffffdfe
   1400340e6:	mov    rcx,rdi
   1400340e9:	call   QWORD PTR [rax+0xd8]
   1400340ef:	mov    eax,ebx
   1400340f1:	btr    eax,0x1b
   1400340f5:	bts    ebx,0x1b
   1400340f9:	cmp    DWORD PTR [rsp+0x60],0x0
   1400340fe:	cmovne ebx,eax
   140034101:	mov    DWORD PTR [rsp+0x58],ebx
   140034105:	jmp    0x140034110
   140034107:	mov    rdi,QWORD PTR [rsp+0x50]
   14003410c:	mov    ebx,DWORD PTR [rsp+0x58]
   140034110:	and    WORD PTR [rsp+0x50],0x0
   140034116:	mov    rax,QWORD PTR [rdi]
   140034119:	lea    r9,[rsp+0x50]
   14003411e:	mov    r8w,0x2
   140034123:	mov    edx,0xfffffe08
   140034128:	mov    rcx,rdi
   14003412b:	call   QWORD PTR [rax+0xd8]
   140034131:	cmp    WORD PTR [rsp+0x50],0x1
   140034137:	jne    0x140034141
   140034139:	bts    ebx,0x17
   14003413d:	mov    DWORD PTR [rsp+0x58],ebx
   140034141:	jmp    0x140034147
   140034143:	mov    ebx,DWORD PTR [rsp+0x58]
   140034147:	mov    eax,ebx
   140034149:	mov    rbx,QWORD PTR [rsp+0x68]
   14003414e:	add    rsp,0x40
   140034152:	pop    rdi
   140034153:	ret    
   140034154:	mov    QWORD PTR [rsp+0x10],rdx
   140034159:	push   rbp
   14003415a:	sub    rsp,0x20
   14003415e:	mov    rbp,rdx
   140034161:	mov    rcx,QWORD PTR [rbp+0x28]
   140034165:	call   0x1400207b8
   14003416a:	nop
   14003416b:	lea    rax,[rip+0xffffffffffffff95]        # 0x140034107
   140034172:	jmp    0x140034174
   140034174:	add    rsp,0x20
   140034178:	pop    rbp
   140034179:	ret    
   14003417a:	int3   
   14003417b:	int3   
   14003417c:	int3   
   14003417d:	int3   
   14003417e:	int3   
   14003417f:	int3   
   140034180:	int3   
   140034181:	int3   
   140034182:	int3   
   140034183:	int3   
   140034184:	mov    QWORD PTR [rsp+0x10],rdx
   140034189:	push   rbp
   14003418a:	sub    rsp,0x20
   14003418e:	mov    rbp,rdx
   140034191:	mov    rcx,QWORD PTR [rbp+0x30]
   140034195:	call   0x1400207b8
   14003419a:	nop
   14003419b:	lea    rax,[rip+0xffffffffffffffa1]        # 0x140034143
   1400341a2:	jmp    0x1400341a4
   1400341a4:	add    rsp,0x20
   1400341a8:	pop    rbp
   1400341a9:	ret    
   1400341aa:	int3   
   1400341ab:	int3   
   1400341ac:	rex push rdi
   1400341ae:	sub    rsp,0x30
   1400341b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400341bb:	mov    QWORD PTR [rsp+0x50],rbx
   1400341c0:	mov    rdi,rcx
   1400341c3:	mov    edx,0xffffffec
   1400341c8:	mov    rcx,QWORD PTR [rcx+0x48]
   1400341cc:	call   QWORD PTR [rip+0x3082e]        # 0x140064a00
   1400341d2:	mov    ebx,eax
   1400341d4:	mov    DWORD PTR [rsp+0x48],eax
   1400341d8:	and    WORD PTR [rsp+0x40],0x0
   1400341de:	mov    r10,QWORD PTR [rdi]
   1400341e1:	lea    r9,[rsp+0x40]
   1400341e6:	mov    r8w,0x2
   1400341eb:	mov    edx,0xfffffdf8
   1400341f0:	mov    rcx,rdi
   1400341f3:	call   QWORD PTR [r10+0xd8]
   1400341fa:	cmp    WORD PTR [rsp+0x40],0x1
   140034200:	jne    0x14003420a
   140034202:	bts    ebx,0x9
   140034206:	mov    DWORD PTR [rsp+0x48],ebx
   14003420a:	jmp    0x140034210
   14003420c:	mov    ebx,DWORD PTR [rsp+0x48]
   140034210:	mov    eax,ebx
   140034212:	mov    rbx,QWORD PTR [rsp+0x50]
   140034217:	add    rsp,0x30
   14003421b:	pop    rdi
   14003421c:	ret    
   14003421d:	int3   
   14003421e:	int3   
   14003421f:	int3   
   140034220:	int3   
   140034221:	int3   
   140034222:	int3   
   140034223:	int3   
   140034224:	int3   
   140034225:	int3   
   140034226:	int3   
   140034227:	int3   
   140034228:	int3   
   140034229:	int3   
   14003422a:	int3   
   14003422b:	int3   
   14003422c:	mov    QWORD PTR [rsp+0x10],rdx
   140034231:	push   rbp
   140034232:	sub    rsp,0x20
   140034236:	mov    rbp,rdx
   140034239:	mov    rcx,QWORD PTR [rbp+0x28]
   14003423d:	call   0x1400207b8
   140034242:	nop
   140034243:	lea    rax,[rip+0xffffffffffffffc2]        # 0x14003420c
   14003424a:	jmp    0x14003424c
   14003424c:	add    rsp,0x20
   140034250:	pop    rbp
   140034251:	ret    
   140034252:	int3   
   140034253:	int3   
   140034254:	mov    QWORD PTR [rsp+0x8],rbx
   140034259:	mov    QWORD PTR [rsp+0x10],rbp
   14003425e:	mov    QWORD PTR [rsp+0x18],rsi
   140034263:	push   rdi
   140034264:	sub    rsp,0x20
   140034268:	mov    eax,edx
   14003426a:	mov    ebp,r9d
   14003426d:	mov    ebx,r8d
   140034270:	not    eax
   140034272:	mov    edi,edx
   140034274:	mov    rsi,rcx
   140034277:	and    eax,DWORD PTR [rcx+0xac]
   14003427d:	or     eax,r8d
   140034280:	and    eax,DWORD PTR [rcx+0xa8]
   140034286:	bt     edx,0x1b
   14003428a:	mov    DWORD PTR [rcx+0xac],eax
   140034290:	jb     0x140034298
   140034292:	bt     ebx,0x1b
   140034296:	jae    0x1400342c5
   140034298:	mov    rax,QWORD PTR [rcx]
   14003429b:	mov    r9d,ebx
   14003429e:	mov    edx,0xfffffdfe
   1400342a3:	not    r9d
   1400342a6:	mov    r8d,0xb
   1400342ac:	and    r9d,0x8000000
   1400342b3:	call   QWORD PTR [rax+0xe8]
   1400342b9:	test   eax,eax
   1400342bb:	je     0x1400342c5
   1400342bd:	btr    edi,0x1b
   1400342c1:	btr    ebx,0x1b
   1400342c5:	bt     edi,0x17
   1400342c9:	jb     0x1400342d1
   1400342cb:	bt     ebx,0x17
   1400342cf:	jae    0x1400342fe
   1400342d1:	mov    rax,QWORD PTR [rsi]
   1400342d4:	mov    r9d,ebx
   1400342d7:	mov    edx,0xfffffe08
   1400342dc:	mov    r8d,0x2
   1400342e2:	mov    rcx,rsi
   1400342e5:	and    r9d,0x800000
   1400342ec:	call   QWORD PTR [rax+0xe8]
   1400342f2:	test   eax,eax
   1400342f4:	je     0x1400342fe
   1400342f6:	btr    edi,0x17
   1400342fa:	btr    ebx,0x17
   1400342fe:	mov    rcx,QWORD PTR [rsi+0x48]
   140034302:	test   rcx,rcx
   140034305:	je     0x140034316
   140034307:	mov    r9d,ebp
   14003430a:	mov    r8d,ebx
   14003430d:	mov    edx,edi
   14003430f:	call   0x140022960
   140034314:	jmp    0x14003431b
   140034316:	mov    eax,0x1
   14003431b:	mov    rbx,QWORD PTR [rsp+0x30]
   140034320:	mov    rbp,QWORD PTR [rsp+0x38]
   140034325:	mov    rsi,QWORD PTR [rsp+0x40]
   14003432a:	add    rsp,0x20
   14003432e:	pop    rdi
   14003432f:	ret    
   140034330:	mov    QWORD PTR [rsp+0x8],rbx
   140034335:	mov    QWORD PTR [rsp+0x10],rbp
   14003433a:	mov    QWORD PTR [rsp+0x18],rsi
   14003433f:	push   rdi
   140034340:	sub    rsp,0x20
   140034344:	bt     edx,0x9
   140034348:	mov    ebp,r9d
   14003434b:	mov    ebx,r8d
   14003434e:	mov    edi,edx
   140034350:	mov    rsi,rcx
   140034353:	jb     0x14003435b
   140034355:	bt     ebx,0x9
   140034359:	jae    0x140034385
   14003435b:	mov    rax,QWORD PTR [rcx]
   14003435e:	mov    r9d,ebx
   140034361:	mov    edx,0xfffffdf8
   140034366:	and    r9d,0x200
   14003436d:	mov    r8d,0x2
   140034373:	call   QWORD PTR [rax+0xe8]
   140034379:	test   eax,eax
   14003437b:	je     0x140034385
   14003437d:	btr    edi,0x9
   140034381:	btr    ebx,0x9
   140034385:	mov    rcx,QWORD PTR [rsi+0x48]
   140034389:	test   rcx,rcx
   14003438c:	je     0x14003439d
   14003438e:	mov    r9d,ebp
   140034391:	mov    r8d,ebx
   140034394:	mov    edx,edi
   140034396:	call   0x140022980
   14003439b:	jmp    0x1400343a2
   14003439d:	mov    eax,0x1
   1400343a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400343a7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400343ac:	mov    rsi,QWORD PTR [rsp+0x40]
   1400343b1:	add    rsp,0x20
   1400343b5:	pop    rdi
   1400343b6:	ret    
   1400343b7:	int3   
   1400343b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400343bd:	push   rdi
   1400343be:	sub    rsp,0x20
   1400343c2:	test   rdx,rdx
   1400343c5:	mov    rbx,rdx
   1400343c8:	mov    rdi,rcx
   1400343cb:	jne    0x1400343d3
   1400343cd:	call   0x1400208f8
   1400343d2:	int3   
   1400343d3:	mov    rax,QWORD PTR [rcx]
   1400343d6:	mov    r9,rdx
   1400343d9:	mov    r8d,0x8
   1400343df:	mov    edx,0xfffffdfa
   1400343e4:	call   QWORD PTR [rax+0xe8]
   1400343ea:	test   eax,eax
   1400343ec:	jne    0x140034408
   1400343ee:	mov    rax,QWORD PTR [rdi]
   1400343f1:	mov    r9,rbx
   1400343f4:	mov    edx,0xfffffdfb
   1400343f9:	mov    r8d,0x8
   1400343ff:	mov    rcx,rdi
   140034402:	call   QWORD PTR [rax+0xe8]
   140034408:	mov    rbx,QWORD PTR [rsp+0x30]
   14003440d:	add    rsp,0x20
   140034411:	pop    rdi
   140034412:	ret    
   140034413:	int3   
   140034414:	mov    QWORD PTR [rsp+0x10],rdx
   140034419:	mov    QWORD PTR [rsp+0x8],rcx
   14003441e:	sub    rsp,0x48
   140034422:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003442b:	mov    rax,QWORD PTR [rcx]
   14003442e:	mov    r9,rdx
   140034431:	mov    r8w,0x8
   140034436:	mov    edx,0xfffffdfa
   14003443b:	call   QWORD PTR [rax+0xd8]
   140034441:	nop
   140034442:	add    rsp,0x48
   140034446:	ret    
   140034447:	int3   
   140034448:	int3   
   140034449:	int3   
   14003444a:	int3   
   14003444b:	int3   
   14003444c:	int3   
   14003444d:	int3   
   14003444e:	int3   
   14003444f:	int3   
   140034450:	int3   
   140034451:	int3   
   140034452:	int3   
   140034453:	int3   
   140034454:	mov    QWORD PTR [rsp+0x10],rdx
   140034459:	push   rbp
   14003445a:	sub    rsp,0x20
   14003445e:	mov    rbp,rdx
   140034461:	mov    rcx,QWORD PTR [rbp+0x28]
   140034465:	test   rcx,rcx
   140034468:	je     0x140034470
   14003446a:	call   0x1400207b8
   14003446f:	nop
   140034470:	mov    rcx,QWORD PTR [rbp+0x50]
   140034474:	mov    rax,QWORD PTR [rcx]
   140034477:	mov    r9,QWORD PTR [rbp+0x58]
   14003447b:	mov    r8w,0x8
   140034480:	mov    edx,0xfffffdfb
   140034485:	call   QWORD PTR [rax+0xd8]
   14003448b:	nop
   14003448c:	lea    rax,[rip+0xffffffffffffffaf]        # 0x140034442
   140034493:	add    rsp,0x20
   140034497:	pop    rbp
   140034498:	ret    
   140034499:	int3   
   14003449a:	int3   
   14003449b:	int3   
   14003449c:	int3   
   14003449d:	int3   
   14003449e:	int3   
   14003449f:	int3   
   1400344a0:	int3   
   1400344a1:	int3   
   1400344a2:	int3   
   1400344a3:	int3   
   1400344a4:	mov    QWORD PTR [rsp+0x10],rdx
   1400344a9:	push   rbp
   1400344aa:	sub    rsp,0x20
   1400344ae:	mov    rbp,rdx
   1400344b1:	mov    rcx,QWORD PTR [rbp+0x30]
   1400344b5:	call   0x1400207b8
   1400344ba:	nop
   1400344bb:	lea    rax,[rip+0xffffffffffffffca]        # 0x14003448c
   1400344c2:	jmp    0x1400344c4
   1400344c4:	add    rsp,0x20
   1400344c8:	pop    rbp
   1400344c9:	ret    
   1400344ca:	int3   
   1400344cb:	int3   
   1400344cc:	mov    eax,DWORD PTR [rcx+0x58]
   1400344cf:	ret    
   1400344d0:	mov    eax,DWORD PTR [rcx+0x58]
   1400344d3:	mov    DWORD PTR [rcx+0x58],edx
   1400344d6:	ret    
   1400344d7:	int3   
   1400344d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400344dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400344e2:	push   rdi
   1400344e3:	sub    rsp,0x20
   1400344e7:	mov    rsi,rcx
   1400344ea:	mov    rcx,QWORD PTR [rcx+0x48]
   1400344ee:	mov    ebx,edx
   1400344f0:	call   QWORD PTR [rip+0x30552]        # 0x140064a48
   1400344f6:	test   ebx,ebx
   1400344f8:	mov    edi,eax
   1400344fa:	je     0x140034510
   1400344fc:	cmp    ebx,0x1
   1400344ff:	je     0x14003450b
   140034501:	cmp    ebx,0x3
   140034504:	jle    0x140034524
   140034506:	cmp    ebx,0x5
   140034509:	jg     0x140034524
   14003450b:	or     edx,0xffffffff
   14003450e:	jmp    0x140034515
   140034510:	mov    edx,0xfffffffd
   140034515:	mov    rax,QWORD PTR [rsi]
   140034518:	xor    r8d,r8d
   14003451b:	mov    rcx,rsi
   14003451e:	call   QWORD PTR [rax+0xb8]
   140034524:	mov    rbx,QWORD PTR [rsp+0x30]
   140034529:	mov    rsi,QWORD PTR [rsp+0x38]
   14003452e:	mov    eax,edi
   140034530:	add    rsp,0x20
   140034534:	pop    rdi
   140034535:	ret    
   140034536:	int3   
   140034537:	int3   
   140034538:	rex push rbx
   14003453a:	sub    rsp,0x30
   14003453e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140034547:	mov    rbx,rcx
   14003454a:	mov    DWORD PTR [rsp+0x40],0x1
   140034552:	cmp    DWORD PTR [rcx+0xb4],0x0
   140034559:	jne    0x140034569
   14003455b:	mov    rcx,QWORD PTR [rcx+0x48]
   14003455f:	call   QWORD PTR [rip+0x304ab]        # 0x140064a10
   140034565:	mov    DWORD PTR [rsp+0x40],eax
   140034569:	mov    rax,QWORD PTR [rbx]
   14003456c:	lea    r9,[rsp+0x40]
   140034571:	mov    r8w,0xb
   140034576:	mov    edx,0xfffffdfe
   14003457b:	mov    rcx,rbx
   14003457e:	call   QWORD PTR [rax+0xd8]
   140034584:	nop
   140034585:	mov    eax,DWORD PTR [rsp+0x40]
   140034589:	add    rsp,0x30
   14003458d:	pop    rbx
   14003458e:	ret    
   14003458f:	int3   
   140034590:	int3   
   140034591:	int3   
   140034592:	int3   
   140034593:	int3   
   140034594:	int3   
   140034595:	int3   
   140034596:	int3   
   140034597:	int3   
   140034598:	mov    QWORD PTR [rsp+0x10],rdx
   14003459d:	push   rbp
   14003459e:	sub    rsp,0x20
   1400345a2:	mov    rbp,rdx
   1400345a5:	mov    rcx,QWORD PTR [rbp+0x28]
   1400345a9:	call   0x1400207b8
   1400345ae:	nop
   1400345af:	lea    rax,[rip+0xffffffffffffffcf]        # 0x140034585
   1400345b6:	jmp    0x1400345b8
   1400345b8:	add    rsp,0x20
   1400345bc:	pop    rbp
   1400345bd:	ret    
   1400345be:	int3   
   1400345bf:	int3   
   1400345c0:	mov    DWORD PTR [rsp+0x10],edx
   1400345c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400345c9:	push   rdi
   1400345ca:	sub    rsp,0x40
   1400345ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400345d7:	mov    QWORD PTR [rsp+0x68],rbx
   1400345dc:	mov    edi,edx
   1400345de:	mov    rbx,rcx
   1400345e1:	mov    rax,QWORD PTR [rcx]
   1400345e4:	lea    r9,[rsp+0x60]
   1400345e9:	mov    r8w,0xb
   1400345ee:	mov    edx,0xfffffdfe
   1400345f3:	call   QWORD PTR [rax+0xd8]
   1400345f9:	xor    eax,eax
   1400345fb:	cmp    DWORD PTR [rsp+0x60],eax
   1400345ff:	sete   al
   140034602:	mov    DWORD PTR [rsp+0x60],eax
   140034606:	mov    rax,QWORD PTR [rbx]
   140034609:	mov    r9d,edi
   14003460c:	mov    edx,0xfffffdfe
   140034611:	mov    r8d,0xb
   140034617:	mov    rcx,rbx
   14003461a:	call   QWORD PTR [rax+0xe0]
   140034620:	nop
   140034621:	mov    eax,DWORD PTR [rsp+0x60]
   140034625:	mov    rbx,QWORD PTR [rsp+0x68]
   14003462a:	add    rsp,0x40
   14003462e:	pop    rdi
   14003462f:	ret    
   140034630:	mov    QWORD PTR [rsp+0x10],rdx
   140034635:	push   rbx
   140034636:	push   rbp
   140034637:	sub    rsp,0x28
   14003463b:	mov    rbp,rdx
   14003463e:	mov    rbx,QWORD PTR [rbp+0x28]
   140034642:	cmp    DWORD PTR [rbx+0x10],0x80020003
   140034649:	jne    0x140034669
   14003464b:	xor    eax,eax
   14003464d:	mov    rcx,QWORD PTR [rbp+0x50]
   140034651:	cmp    DWORD PTR [rcx+0xb4],eax
   140034657:	jne    0x140034669
   140034659:	mov    edx,DWORD PTR [rbp+0x58]
   14003465c:	mov    rcx,QWORD PTR [rcx+0x48]
   140034660:	call   QWORD PTR [rip+0x304e2]        # 0x140064b48
   140034666:	mov    DWORD PTR [rbp+0x60],eax
   140034669:	mov    rcx,rbx
   14003466c:	call   0x1400207b8
   140034671:	nop
   140034672:	lea    rax,[rip+0xffffffffffffffa8]        # 0x140034621
   140034679:	jmp    0x14003467b
   14003467b:	add    rsp,0x28
   14003467f:	pop    rbp
   140034680:	pop    rbx
   140034681:	ret    
   140034682:	int3   
   140034683:	int3   
   140034684:	int3   
   140034685:	int3   
   140034686:	int3   
   140034687:	int3   
   140034688:	int3   
   140034689:	int3   
   14003468a:	int3   
   14003468b:	int3   
   14003468c:	int3   
   14003468d:	int3   
   14003468e:	int3   
   14003468f:	int3   
   140034690:	mov    QWORD PTR [rsp+0x10],rdx
   140034695:	push   rbp
   140034696:	sub    rsp,0x20
   14003469a:	mov    rbp,rdx
   14003469d:	mov    rcx,QWORD PTR [rbp+0x30]
   1400346a1:	xor    eax,eax
   1400346a3:	cmp    rcx,rax
   1400346a6:	je     0x1400346ad
   1400346a8:	call   0x1400207b8
   1400346ad:	mov    DWORD PTR [rbp+0x60],0x1
   1400346b4:	lea    rax,[rip+0xffffffffffffff66]        # 0x140034621
   1400346bb:	jmp    0x1400346bd
   1400346bd:	add    rsp,0x20
   1400346c1:	pop    rbp
   1400346c2:	ret    
   1400346c3:	int3   
   1400346c4:	add    rcx,0xfffffffffffffec8
   1400346cb:	jmp    0x14003ea10
   1400346d0:	add    rcx,0xfffffffffffffec8
   1400346d7:	jmp    0x14003eabc
   1400346dc:	mov    rcx,QWORD PTR [rcx-0xf8]
   1400346e3:	mov    r8,rdx
   1400346e6:	lea    rdx,[rip+0x3bd4b]        # 0x140070438
   1400346ed:	jmp    0x14003eabc
   1400346f2:	int3   
   1400346f3:	int3   
   1400346f4:	add    rcx,0xfffffffffffffec0
   1400346fb:	jmp    0x14003ea10
   140034700:	add    rcx,0xfffffffffffffec0
   140034707:	jmp    0x14003eabc
   14003470c:	sub    rsp,0x28
   140034710:	lea    rdx,[rcx-0x140]
   140034717:	cmp    QWORD PTR [rdx+0x40],0x0
   14003471c:	jne    0x140034724
   14003471e:	call   0x1400208f8
   140034723:	int3   
   140034724:	mov    rcx,QWORD PTR [rdx+0x40]
   140034728:	mov    rax,QWORD PTR [rcx]
   14003472b:	call   QWORD PTR [rax+0xc0]
   140034731:	xor    eax,eax
   140034733:	add    rsp,0x28
   140034737:	ret    
   140034738:	sub    rsp,0x28
   14003473c:	lea    rdx,[rcx-0x140]
   140034743:	mov    rcx,QWORD PTR [rdx+0x40]
   140034747:	mov    rax,QWORD PTR [rcx]
   14003474a:	call   QWORD PTR [rax+0xc8]
   140034750:	xor    eax,eax
   140034752:	add    rsp,0x28
   140034756:	ret    
   140034757:	int3   
   140034758:	sub    rsp,0x28
   14003475c:	cmp    QWORD PTR [rcx-0xb8],0x0
   140034764:	jne    0x14003476c
   140034766:	call   0x1400208f8
   14003476b:	int3   
   14003476c:	mov    rcx,QWORD PTR [rcx-0xb8]
   140034773:	mov    rax,QWORD PTR [rcx]
   140034776:	call   QWORD PTR [rax+0x30]
   140034779:	xor    eax,eax
   14003477b:	add    rsp,0x28
   14003477f:	ret    
   140034780:	mov    rax,QWORD PTR [rcx]
   140034783:	rex.W jmp QWORD PTR [rax+0x58]
   140034787:	int3   
   140034788:	add    rcx,0xfffffffffffffeb8
   14003478f:	jmp    0x14003ea10
   140034794:	add    rcx,0xfffffffffffffeb8
   14003479b:	jmp    0x14003eabc
   1400347a0:	sub    rsp,0x28
   1400347a4:	add    rcx,0xfffffffffffffeb8
   1400347ab:	call   0x140033ad4
   1400347b0:	xor    eax,eax
   1400347b2:	add    rsp,0x28
   1400347b6:	ret    
   1400347b7:	int3   
   1400347b8:	add    rcx,0xfffffffffffffeb0
   1400347bf:	jmp    0x14003ea10
   1400347c4:	add    rcx,0xfffffffffffffeb0
   1400347cb:	jmp    0x14003eabc
   1400347d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400347d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400347da:	push   rdi
   1400347db:	sub    rsp,0x20
   1400347df:	mov    rsi,rdx
   1400347e2:	mov    rdi,r8
   1400347e5:	mov    rbx,rcx
   1400347e8:	lea    rdx,[rip+0x3bc69]        # 0x140070458
   1400347ef:	mov    r8d,0x10
   1400347f5:	mov    rcx,rsi
   1400347f8:	call   0x1400488e0
   1400347fd:	test   eax,eax
   1400347ff:	je     0x140034821
   140034801:	lea    rdx,[rip+0x3bd30]        # 0x140070538
   140034808:	mov    r8d,0x10
   14003480e:	mov    rcx,rsi
   140034811:	call   0x1400488e0
   140034816:	test   eax,eax
   140034818:	je     0x140034821
   14003481a:	mov    eax,0x80004002
   14003481f:	jmp    0x14003482f
   140034821:	mov    QWORD PTR [rdi],rbx
   140034824:	mov    rax,QWORD PTR [rbx]
   140034827:	mov    rcx,rbx
   14003482a:	call   QWORD PTR [rax+0x8]
   14003482d:	xor    eax,eax
   14003482f:	mov    rbx,QWORD PTR [rsp+0x30]
   140034834:	mov    rsi,QWORD PTR [rsp+0x38]
   140034839:	add    rsp,0x20
   14003483d:	pop    rdi
   14003483e:	ret    
   14003483f:	int3   
   140034840:	mov    QWORD PTR [rsp+0x8],rbx
   140034845:	mov    QWORD PTR [rsp+0x10],rbp
   14003484a:	mov    QWORD PTR [rsp+0x18],rsi
   14003484f:	push   rdi
   140034850:	sub    rsp,0x20
   140034854:	mov    rdi,rdx
   140034857:	mov    rsi,r8
   14003485a:	mov    rbx,rcx
   14003485d:	mov    ebp,0x10
   140034862:	lea    rdx,[rip+0x3bbef]        # 0x140070458
   140034869:	mov    rcx,rdi
   14003486c:	mov    r8,rbp
   14003486f:	call   0x1400488e0
   140034874:	test   eax,eax
   140034876:	je     0x1400348ab
   140034878:	lea    rdx,[rip+0x3bb49]        # 0x1400703c8
   14003487f:	mov    r8,rbp
   140034882:	mov    rcx,rdi
   140034885:	call   0x1400488e0
   14003488a:	test   eax,eax
   14003488c:	je     0x1400348ab
   14003488e:	lea    rdx,[rbx-0xf4]
   140034895:	mov    r8,rbp
   140034898:	mov    rcx,rdi
   14003489b:	call   0x1400488e0
   1400348a0:	test   eax,eax
   1400348a2:	je     0x1400348ab
   1400348a4:	mov    eax,0x80004002
   1400348a9:	jmp    0x1400348b9
   1400348ab:	mov    QWORD PTR [rsi],rbx
   1400348ae:	mov    rax,QWORD PTR [rbx]
   1400348b1:	mov    rcx,rbx
   1400348b4:	call   QWORD PTR [rax+0x8]
   1400348b7:	xor    eax,eax
   1400348b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400348be:	mov    rbp,QWORD PTR [rsp+0x38]
   1400348c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400348c8:	add    rsp,0x20
   1400348cc:	pop    rdi
   1400348cd:	ret    
   1400348ce:	int3   
   1400348cf:	int3   
   1400348d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400348d5:	push   rdi
   1400348d6:	sub    rsp,0x20
   1400348da:	xor    edi,edi
   1400348dc:	mov    QWORD PTR [rcx+0x8],rdx
   1400348e0:	lea    rax,[rip+0x376e1]        # 0x14006bfc8
   1400348e7:	mov    QWORD PTR [rcx],rax
   1400348ea:	mov    rbx,rcx
   1400348ed:	mov    QWORD PTR [rcx+0x10],rdi
   1400348f1:	mov    QWORD PTR [rcx+0x18],rdi
   1400348f5:	mov    QWORD PTR [rcx+0x20],rdi
   1400348f9:	mov    QWORD PTR [rcx+0x28],rdi
   1400348fd:	lea    edx,[rdi+0xa]
   140034900:	add    rcx,0x30
   140034904:	call   0x14003ec54
   140034909:	mov    QWORD PTR [rbx+0x68],rdi
   14003490d:	mov    QWORD PTR [rbx+0x70],rdi
   140034911:	mov    QWORD PTR [rbx+0x78],rdi
   140034915:	mov    QWORD PTR [rbx+0x80],rdi
   14003491c:	mov    DWORD PTR [rbx+0x88],edi
   140034922:	mov    QWORD PTR [rbx+0x90],rdi
   140034929:	mov    QWORD PTR [rbx+0x98],rdi
   140034930:	mov    QWORD PTR [rbx+0xa0],rdi
   140034937:	mov    QWORD PTR [rbx+0xa8],rdi
   14003493e:	mov    DWORD PTR [rbx+0xb0],edi
   140034944:	mov    rax,rbx
   140034947:	mov    rbx,QWORD PTR [rsp+0x30]
   14003494c:	add    rsp,0x20
   140034950:	pop    rdi
   140034951:	ret    
   140034952:	int3   
   140034953:	int3   
   140034954:	rex push rbx
   140034956:	sub    rsp,0x20
   14003495a:	mov    rdx,QWORD PTR [rcx+0x90]
   140034961:	xor    ebx,ebx
   140034963:	cmp    rdx,rbx
   140034966:	je     0x14003497a
   140034968:	mov    rax,QWORD PTR [rcx+0xa0]
   14003496f:	neg    rax
   140034972:	sbb    rax,rax
   140034975:	and    rax,rdx
   140034978:	jmp    0x1400349e7
   14003497a:	cmp    QWORD PTR [rcx+0x10],rbx
   14003497e:	jne    0x1400349c6
   140034980:	mov    rax,QWORD PTR [rcx+0x8]
   140034984:	lea    r8,[rsp+0x38]
   140034989:	lea    rdx,[rip+0x374e0]        # 0x14006be70
   140034990:	mov    rcx,QWORD PTR [rax+0x80]
   140034997:	mov    rax,QWORD PTR [rcx]
   14003499a:	call   QWORD PTR [rax]
   14003499c:	cmp    eax,ebx
   14003499e:	jge    0x1400349a4
   1400349a0:	xor    eax,eax
   1400349a2:	jmp    0x1400349e7
   1400349a4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400349a9:	lea    rdx,[rsp+0x30]
   1400349ae:	mov    rax,QWORD PTR [rcx]
   1400349b1:	call   QWORD PTR [rax+0x28]
   1400349b4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400349b9:	mov    rax,QWORD PTR [rcx]
   1400349bc:	call   QWORD PTR [rax+0x10]
   1400349bf:	mov    rax,QWORD PTR [rsp+0x30]
   1400349c4:	jmp    0x1400349e7
   1400349c6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400349ca:	lea    r8,[rsp+0x30]
   1400349cf:	lea    rdx,[rip+0x3b9d2]        # 0x1400703a8
   1400349d6:	mov    r9,QWORD PTR [rcx]
   1400349d9:	call   QWORD PTR [r9]
   1400349dc:	cmp    eax,ebx
   1400349de:	cmovge rbx,QWORD PTR [rsp+0x30]
   1400349e4:	mov    rax,rbx
   1400349e7:	add    rsp,0x20
   1400349eb:	pop    rbx
   1400349ec:	ret    
   1400349ed:	int3   
   1400349ee:	int3   
   1400349ef:	int3   
   1400349f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400349f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400349fa:	push   rdi
   1400349fb:	sub    rsp,0x20
   1400349ff:	mov    eax,DWORD PTR [r8+0x10]
   140034a03:	mov    rbx,r8
   140034a06:	mov    rdi,rdx
   140034a09:	mov    DWORD PTR [rdx+0x10],eax
   140034a0c:	mov    ecx,DWORD PTR [r8+0x10]
   140034a10:	test   ecx,ecx
   140034a12:	je     0x140034a32
   140034a14:	sub    ecx,0x1
   140034a17:	je     0x140034a20
   140034a19:	cmp    ecx,0x1
   140034a1c:	je     0x140034a3b
   140034a1e:	jmp    0x140034a84
   140034a20:	movdqu xmm0,XMMWORD PTR [r8]
   140034a25:	movdqu XMMWORD PTR [rdx],xmm0
   140034a29:	mov    eax,DWORD PTR [r8+0x18]
   140034a2d:	mov    DWORD PTR [rdx+0x18],eax
   140034a30:	jmp    0x140034a84
   140034a32:	movdqu xmm0,XMMWORD PTR [r8]
   140034a37:	movdqu XMMWORD PTR [rdx],xmm0
   140034a3b:	mov    rcx,QWORD PTR [r8+0x18]
   140034a3f:	call   0x140048610
   140034a44:	mov    ecx,0xffffffff
   140034a49:	lea    rsi,[rax+0x1]
   140034a4d:	cmp    rsi,rcx
   140034a50:	jbe    0x140034a56
   140034a52:	xor    eax,eax
   140034a54:	jmp    0x140034a89
   140034a56:	mov    eax,esi
   140034a58:	add    rax,rax
   140034a5b:	cmp    rax,rcx
   140034a5e:	jbe    0x140034a64
   140034a60:	xor    eax,eax
   140034a62:	jmp    0x140034a6c
   140034a64:	mov    ecx,eax
   140034a66:	call   QWORD PTR [rip+0x301ac]        # 0x140064c18
   140034a6c:	test   rax,rax
   140034a6f:	mov    QWORD PTR [rdi+0x18],rax
   140034a73:	je     0x140034a52
   140034a75:	mov    r8,QWORD PTR [rbx+0x18]
   140034a79:	mov    rdx,rsi
   140034a7c:	mov    rcx,rax
   140034a7f:	call   0x140047080
   140034a84:	mov    eax,0x1
   140034a89:	mov    rbx,QWORD PTR [rsp+0x30]
   140034a8e:	mov    rsi,QWORD PTR [rsp+0x38]
   140034a93:	add    rsp,0x20
   140034a97:	pop    rdi
   140034a98:	ret    
   140034a99:	int3   
   140034a9a:	int3   
   140034a9b:	int3   
   140034a9c:	mov    QWORD PTR [rsp+0x8],rbx
   140034aa1:	push   rdi
   140034aa2:	sub    rsp,0x20
   140034aa6:	test   r8d,r8d
   140034aa9:	mov    rax,QWORD PTR [rcx]
   140034aac:	mov    rdi,rdx
   140034aaf:	mov    rbx,rcx
   140034ab2:	je     0x140034ac8
   140034ab4:	xor    r8d,r8d
   140034ab7:	call   QWORD PTR [rax+0x8]
   140034aba:	lea    rcx,[rbx+0x30]
   140034abe:	mov    rdx,rdi
   140034ac1:	call   0x14003ed58
   140034ac6:	jmp    0x140034aeb
   140034ac8:	call   QWORD PTR [rax+0x28]
   140034acb:	lea    rcx,[rbx+0x30]
   140034acf:	xor    r8d,r8d
   140034ad2:	mov    rdx,rdi
   140034ad5:	call   0x14003ec2c
   140034ada:	test   rax,rax
   140034add:	je     0x140034aeb
   140034adf:	lea    rcx,[rbx+0x30]
   140034ae3:	mov    rdx,rax
   140034ae6:	call   0x14003ebe0
   140034aeb:	mov    rbx,QWORD PTR [rsp+0x30]
   140034af0:	add    rsp,0x20
   140034af4:	pop    rdi
   140034af5:	ret    
   140034af6:	int3   
   140034af7:	int3   
   140034af8:	xor    eax,eax
   140034afa:	mov    WORD PTR [rcx+0x8],r9w
   140034aff:	mov    DWORD PTR [rcx+0xc],r8d
   140034b03:	mov    QWORD PTR [rcx],rax
   140034b06:	mov    QWORD PTR [rcx+0x10],rax
   140034b0a:	mov    DWORD PTR [rcx+0x1c],eax
   140034b0d:	mov    rax,rcx
   140034b10:	mov    QWORD PTR [rcx+0x20],rdx
   140034b14:	ret    
   140034b15:	int3   
   140034b16:	int3   
   140034b17:	int3   
   140034b18:	mov    QWORD PTR [rcx],rdx
   140034b1b:	ret    
   140034b1c:	mov    rax,QWORD PTR [rcx+0x20]
   140034b20:	ret    
   140034b21:	int3   
   140034b22:	int3   
   140034b23:	int3   
   140034b24:	rex push rbx
   140034b26:	sub    rsp,0x20
   140034b2a:	cmp    QWORD PTR [rcx+0x10],0x0
   140034b2f:	mov    rbx,rcx
   140034b32:	jne    0x140034b38
   140034b34:	xor    eax,eax
   140034b36:	jmp    0x140034b6f
   140034b38:	mov    rcx,QWORD PTR [rcx+0x10]
   140034b3c:	mov    rax,QWORD PTR [rcx]
   140034b3f:	call   QWORD PTR [rax+0x168]
   140034b45:	mov    r11,QWORD PTR [rbx+0x10]
   140034b49:	mov    r8d,0x1
   140034b4f:	mov    rcx,QWORD PTR [r11+0xd8]
   140034b56:	mov    rdx,rbx
   140034b59:	mov    rax,QWORD PTR [rcx]
   140034b5c:	call   QWORD PTR [rax+0x8]
   140034b5f:	mov    r11,QWORD PTR [rbx+0x10]
   140034b63:	mov    rcx,QWORD PTR [r11+0xd8]
   140034b6a:	mov    rax,QWORD PTR [rcx]
   140034b6d:	call   QWORD PTR [rax]
   140034b6f:	add    rsp,0x20
   140034b73:	pop    rbx
   140034b74:	ret    
   140034b75:	int3   
   140034b76:	int3   
   140034b77:	int3   
   140034b78:	rex push rbx
   140034b7a:	sub    rsp,0x20
   140034b7e:	test   r9,r9
   140034b81:	mov    rbx,r8
   140034b84:	je     0x140034b8a
   140034b86:	and    QWORD PTR [r9],0x0
   140034b8a:	mov    rcx,QWORD PTR [rcx+0xe0]
   140034b91:	jmp    0x140034b9c
   140034b93:	cmp    DWORD PTR [rcx+0xc],edx
   140034b96:	je     0x140034ba3
   140034b98:	mov    rcx,QWORD PTR [rcx+0x20]
   140034b9c:	test   rcx,rcx
   140034b9f:	jne    0x140034b93
   140034ba1:	jmp    0x140034bab
   140034ba3:	call   0x140034b24
   140034ba8:	mov    QWORD PTR [rbx],rax
   140034bab:	xor    eax,eax
   140034bad:	add    rsp,0x20
   140034bb1:	pop    rbx
   140034bb2:	ret    
   140034bb3:	int3   
   140034bb4:	mov    QWORD PTR [rsp+0x8],rbx
   140034bb9:	mov    QWORD PTR [rsp+0x10],rsi
   140034bbe:	push   rdi
   140034bbf:	sub    rsp,0x20
   140034bc3:	mov    rsi,rdx
   140034bc6:	mov    rdi,r8
   140034bc9:	mov    rbx,rcx
   140034bcc:	lea    rdx,[rip+0x3b885]        # 0x140070458
   140034bd3:	mov    r8d,0x10
   140034bd9:	mov    rcx,rsi
   140034bdc:	call   0x1400488e0
   140034be1:	test   eax,eax
   140034be3:	je     0x140034c05
   140034be5:	lea    rdx,[rip+0x3b78c]        # 0x140070378
   140034bec:	mov    r8d,0x10
   140034bf2:	mov    rcx,rsi
   140034bf5:	call   0x1400488e0
   140034bfa:	test   eax,eax
   140034bfc:	je     0x140034c05
   140034bfe:	mov    eax,0x80004002
   140034c03:	jmp    0x140034c13
   140034c05:	mov    QWORD PTR [rdi],rbx
   140034c08:	mov    rax,QWORD PTR [rbx]
   140034c0b:	mov    rcx,rbx
   140034c0e:	call   QWORD PTR [rax+0x8]
   140034c11:	xor    eax,eax
   140034c13:	mov    rbx,QWORD PTR [rsp+0x30]
   140034c18:	mov    rsi,QWORD PTR [rsp+0x38]
   140034c1d:	add    rsp,0x20
   140034c21:	pop    rdi
   140034c22:	ret    
   140034c23:	int3   
   140034c24:	mov    eax,0x1
   140034c29:	ret    
   140034c2a:	int3   
   140034c2b:	int3   
   140034c2c:	mov    QWORD PTR [rsp+0x8],rbx
   140034c31:	mov    QWORD PTR [rsp+0x10],rsi
   140034c36:	push   rdi
   140034c37:	sub    rsp,0x20
   140034c3b:	mov    rsi,rdx
   140034c3e:	mov    rdi,r8
   140034c41:	mov    rbx,rcx
   140034c44:	lea    rdx,[rip+0x3b80d]        # 0x140070458
   140034c4b:	mov    r8d,0x10
   140034c51:	mov    rcx,rsi
   140034c54:	call   0x1400488e0
   140034c59:	test   eax,eax
   140034c5b:	je     0x140034c7d
   140034c5d:	lea    rdx,[rip+0x3ba74]        # 0x1400706d8
   140034c64:	mov    r8d,0x10
   140034c6a:	mov    rcx,rsi
   140034c6d:	call   0x1400488e0
   140034c72:	test   eax,eax
   140034c74:	je     0x140034c7d
   140034c76:	mov    eax,0x80004002
   140034c7b:	jmp    0x140034c8b
   140034c7d:	mov    QWORD PTR [rdi],rbx
   140034c80:	mov    rax,QWORD PTR [rbx]
   140034c83:	mov    rcx,rbx
   140034c86:	call   QWORD PTR [rax+0x8]
   140034c89:	xor    eax,eax
   140034c8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140034c90:	mov    rsi,QWORD PTR [rsp+0x38]
   140034c95:	add    rsp,0x20
   140034c99:	pop    rdi
   140034c9a:	ret    
   140034c9b:	int3   
   140034c9c:	mov    rax,rsp
   140034c9f:	mov    QWORD PTR [rax+0x8],rbx
   140034ca3:	mov    QWORD PTR [rax+0x10],rbp
   140034ca7:	mov    QWORD PTR [rax+0x18],rsi
   140034cab:	push   rdi
   140034cac:	sub    rsp,0x30
   140034cb0:	mov    ebx,edx
   140034cb2:	xor    edx,edx
   140034cb4:	mov    edi,r8d
   140034cb7:	mov    rbp,rcx
   140034cba:	lea    r8d,[rdx+0x10]
   140034cbe:	lea    rcx,[rax-0x18]
   140034cc2:	mov    esi,r9d
   140034cc5:	call   0x140047720
   140034cca:	movzx  eax,WORD PTR [rsp+0x60]
   140034ccf:	mov    WORD PTR [rsp+0x28],ax
   140034cd4:	movzx  eax,WORD PTR [rsp+0x68]
   140034cd9:	lea    rcx,[rsp+0x20]
   140034cde:	mov    WORD PTR [rsp+0x2a],ax
   140034ce3:	movzx  eax,WORD PTR [rsp+0x70]
   140034ce8:	mov    rdx,rbp
   140034ceb:	mov    WORD PTR [rsp+0x20],bx
   140034cf0:	mov    WORD PTR [rsp+0x22],di
   140034cf5:	mov    WORD PTR [rsp+0x26],si
   140034cfa:	mov    WORD PTR [rsp+0x2c],ax
   140034cff:	call   0x140033360
   140034d04:	mov    rbx,QWORD PTR [rsp+0x40]
   140034d09:	mov    rsi,QWORD PTR [rsp+0x50]
   140034d0e:	xor    ecx,ecx
   140034d10:	cmp    eax,ecx
   140034d12:	sete   cl
   140034d15:	mov    DWORD PTR [rbp+0x8],ecx
   140034d18:	mov    rbp,QWORD PTR [rsp+0x48]
   140034d1d:	mov    eax,ecx
   140034d1f:	add    rsp,0x30
   140034d23:	pop    rdi
   140034d24:	ret    
   140034d25:	int3   
   140034d26:	int3   
   140034d27:	int3   
   140034d28:	jmp    0x140042488
   140034d2d:	int3   
   140034d2e:	int3   
   140034d2f:	int3   
   140034d30:	rex.W jmp QWORD PTR [rip+0x2f969]        # 0x1400646a0
   140034d37:	int3   
   140034d38:	sub    rsp,0x28
   140034d3c:	xor    r10d,r10d
   140034d3f:	cmp    rcx,r10
   140034d42:	jne    0x140034d4f
   140034d44:	mov    ecx,0x80004005
   140034d49:	call   0x140001430
   140034d4e:	int3   
   140034d4f:	movzx  eax,r8w
   140034d53:	mov    QWORD PTR [rcx],rdx
   140034d56:	mov    WORD PTR [rcx+0x54],r8w
   140034d5b:	shr    eax,0xe
   140034d5e:	mov    DWORD PTR [rcx+0x50],r10d
   140034d62:	mov    QWORD PTR [rcx+0x10],r10
   140034d66:	and    eax,0x1
   140034d69:	mov    QWORD PTR [rcx+0x18],r10
   140034d6d:	mov    QWORD PTR [rcx+0x20],r10
   140034d71:	mov    DWORD PTR [rcx+0x3c],eax
   140034d74:	mov    rax,QWORD PTR [rsp+0x80]
   140034d7c:	mov    QWORD PTR [rcx+0x30],r10
   140034d80:	mov    QWORD PTR [rcx+0x28],rax
   140034d84:	mov    eax,DWORD PTR [rsp+0x60]
   140034d88:	mov    QWORD PTR [rcx+0x48],r9
   140034d8c:	mov    DWORD PTR [rcx+0x40],eax
   140034d8f:	mov    al,BYTE PTR [rsp+0x50]
   140034d93:	mov    DWORD PTR [rcx+0x38],0x1
   140034d9a:	mov    BYTE PTR [rcx+0x56],al
   140034d9d:	mov    al,BYTE PTR [rsp+0x58]
   140034da1:	mov    BYTE PTR [rcx+0x57],al
   140034da4:	mov    rax,QWORD PTR [rsp+0x68]
   140034da9:	mov    QWORD PTR [rcx+0x8],rax
   140034dad:	mov    rax,QWORD PTR [rsp+0x70]
   140034db2:	cmp    rax,r10
   140034db5:	je     0x140034dc2
   140034db7:	mov    DWORD PTR [rcx+0x38],0x3
   140034dbe:	mov    QWORD PTR [rcx+0x10],rax
   140034dc2:	mov    rax,QWORD PTR [rsp+0x78]
   140034dc7:	cmp    rax,r10
   140034dca:	je     0x140034dd4
   140034dcc:	or     DWORD PTR [rcx+0x38],0x4
   140034dd0:	mov    QWORD PTR [rcx+0x18],rax
   140034dd4:	add    rsp,0x28
   140034dd8:	ret    
   140034dd9:	int3   
   140034dda:	int3   
   140034ddb:	int3   
   140034ddc:	sub    rsp,0x28
   140034de0:	mov    rcx,QWORD PTR [rcx]
   140034de3:	test   rcx,rcx
   140034de6:	je     0x140034dee
   140034de8:	mov    rax,QWORD PTR [rcx]
   140034deb:	call   QWORD PTR [rax+0x10]
   140034dee:	add    rsp,0x28
   140034df2:	ret    
   140034df3:	int3   
   140034df4:	mov    QWORD PTR [rsp+0x8],rbx
   140034df9:	cmp    BYTE PTR [rcx+0x38],0x0
   140034dfd:	mov    r11,r8
   140034e00:	je     0x140034e38
   140034e02:	mov    r10,QWORD PTR [rcx+0x18]
   140034e06:	xor    r9d,r9d
   140034e09:	test   r10,r10
   140034e0c:	je     0x140034e2b
   140034e0e:	mov    rbx,QWORD PTR [rcx+0x28]
   140034e12:	lea    rcx,[rbx+0x10]
   140034e16:	cmp    QWORD PTR [rcx],rdx
   140034e19:	je     0x140034e33
   140034e1b:	add    r9d,0x1
   140034e1f:	add    rcx,0x50
   140034e23:	mov    eax,r9d
   140034e26:	cmp    rax,r10
   140034e29:	jb     0x140034e16
   140034e2b:	xor    al,al
   140034e2d:	mov    rbx,QWORD PTR [rsp+0x8]
   140034e32:	ret    
   140034e33:	mov    edx,r9d
   140034e36:	jmp    0x140034e51
   140034e38:	mov    rbx,QWORD PTR [rcx+0x28]
   140034e3c:	mov    rax,QWORD PTR [rcx+0x18]
   140034e40:	mov    r8,QWORD PTR [rbx+0x10]
   140034e44:	lea    rcx,[rax+r8*1-0x1]
   140034e49:	cmp    rdx,rcx
   140034e4c:	ja     0x140034e2b
   140034e4e:	sub    rdx,r8
   140034e51:	test   r11,r11
   140034e54:	je     0x140034e2b
   140034e56:	lea    rcx,[rdx+rdx*4]
   140034e5a:	mov    al,0x1
   140034e5c:	add    rcx,rcx
   140034e5f:	movzx  ecx,WORD PTR [rbx+rcx*8+0x28]
   140034e64:	mov    WORD PTR [r11],cx
   140034e68:	jmp    0x140034e2d
   140034e6a:	int3   
   140034e6b:	int3   
   140034e6c:	sub    rsp,0x28
   140034e70:	mov    rcx,QWORD PTR [rcx]
   140034e73:	test   rcx,rcx
   140034e76:	je     0x140034e7e
   140034e78:	mov    rax,QWORD PTR [rcx]
   140034e7b:	call   QWORD PTR [rax+0x10]
   140034e7e:	add    rsp,0x28
   140034e82:	ret    
   140034e83:	int3   
   140034e84:	rex push rdi
   140034e86:	sub    rsp,0x50
   140034e8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140034e93:	mov    QWORD PTR [rsp+0x68],rbx
   140034e98:	mov    QWORD PTR [rsp+0x70],rsi
   140034e9d:	mov    rdi,rcx
   140034ea0:	mov    edx,DWORD PTR [rcx+0x68]
   140034ea3:	sub    edx,DWORD PTR [rcx+0x60]
   140034ea6:	mov    eax,DWORD PTR [rcx+0x64]
   140034ea9:	sub    eax,DWORD PTR [rcx+0x5c]
   140034eac:	mov    DWORD PTR [rsp+0x60],eax
   140034eb0:	mov    DWORD PTR [rsp+0x64],edx
   140034eb4:	xor    edx,edx
   140034eb6:	lea    rcx,[rsp+0x28]
   140034ebb:	call   0x14002b1cc
   140034ec0:	nop
   140034ec1:	lea    rdx,[rsp+0x60]
   140034ec6:	lea    rcx,[rsp+0x28]
   140034ecb:	call   0x14002fd88
   140034ed0:	mov    rcx,QWORD PTR [rdi+0x80]
   140034ed7:	xor    ebx,ebx
   140034ed9:	mov    eax,ebx
   140034edb:	cmp    rcx,rbx
   140034ede:	setne  al
   140034ee1:	cmp    eax,ebx
   140034ee3:	jne    0x140034eeb
   140034ee5:	call   0x1400208f8
   140034eea:	int3   
   140034eeb:	mov    rax,QWORD PTR [rcx]
   140034eee:	lea    r8,[rsp+0x60]
   140034ef3:	mov    edx,0x1
   140034ef8:	call   QWORD PTR [rax+0x88]
   140034efe:	mov    esi,eax
   140034f00:	cmp    eax,ebx
   140034f02:	jl     0x140034f47
   140034f04:	mov    rcx,QWORD PTR [rdi+0x80]
   140034f0b:	mov    rax,QWORD PTR [rcx]
   140034f0e:	lea    r8,[rsp+0x60]
   140034f13:	mov    edx,0x1
   140034f18:	call   QWORD PTR [rax+0x90]
   140034f1e:	cmp    eax,ebx
   140034f20:	jl     0x140034f47
   140034f22:	lea    rdx,[rsp+0x60]
   140034f27:	lea    rcx,[rsp+0x28]
   140034f2c:	call   0x14002fe48
   140034f31:	mov    ecx,DWORD PTR [rsp+0x60]
   140034f35:	add    ecx,DWORD PTR [rdi+0x5c]
   140034f38:	mov    DWORD PTR [rdi+0x64],ecx
   140034f3b:	mov    edx,DWORD PTR [rdi+0x60]
   140034f3e:	mov    ecx,DWORD PTR [rsp+0x64]
   140034f42:	add    edx,ecx
   140034f44:	mov    DWORD PTR [rdi+0x68],edx
   140034f47:	cmp    esi,ebx
   140034f49:	setge  bl
   140034f4c:	lea    rcx,[rsp+0x28]
   140034f51:	call   0x14002b254
   140034f56:	mov    eax,ebx
   140034f58:	mov    rbx,QWORD PTR [rsp+0x68]
   140034f5d:	mov    rsi,QWORD PTR [rsp+0x70]
   140034f62:	add    rsp,0x50
   140034f66:	pop    rdi
   140034f67:	ret    
   140034f68:	int3   
   140034f69:	int3   
   140034f6a:	int3   
   140034f6b:	int3   
   140034f6c:	int3   
   140034f6d:	int3   
   140034f6e:	int3   
   140034f6f:	int3   
   140034f70:	int3   
   140034f71:	int3   
   140034f72:	int3   
   140034f73:	int3   
   140034f74:	rex push rbp
   140034f76:	sub    rsp,0x20
   140034f7a:	mov    rbp,rdx
   140034f7d:	lea    rcx,[rbp+0x28]
   140034f81:	call   0x14002b254
   140034f86:	add    rsp,0x20
   140034f8a:	pop    rbp
   140034f8b:	ret    
   140034f8c:	mov    rax,rsp
   140034f8f:	mov    QWORD PTR [rax+0x10],rbx
   140034f93:	mov    QWORD PTR [rax+0x18],rbp
   140034f97:	mov    QWORD PTR [rax+0x20],rsi
   140034f9b:	push   rdi
   140034f9c:	sub    rsp,0x80
   140034fa3:	mov    rsi,rdx
   140034fa6:	mov    rdx,QWORD PTR [rsp+0xb8]
   140034fae:	mov    rbp,rcx
   140034fb1:	lea    rcx,[rax-0x20]
   140034fb5:	mov    rbx,r9
   140034fb8:	mov    rdi,r8
   140034fbb:	call   QWORD PTR [rip+0x2f9ef]        # 0x1400649b0
   140034fc1:	mov    r11,QWORD PTR [rsp+0x68]
   140034fc6:	mov    eax,DWORD PTR [rsp+0x70]
   140034fca:	mov    r10,QWORD PTR [rbp+0x0]
   140034fce:	sub    eax,r11d
   140034fd1:	mov    r9,rbx
   140034fd4:	mov    DWORD PTR [rsp+0x90],eax
   140034fdb:	mov    eax,DWORD PTR [rsp+0x74]
   140034fdf:	mov    r8,rdi
   140034fe2:	sub    eax,DWORD PTR [rsp+0x6c]
   140034fe6:	mov    rdx,rsi
   140034fe9:	mov    rcx,rbp
   140034fec:	mov    DWORD PTR [rsp+0x94],eax
   140034ff3:	mov    rax,QWORD PTR [rsp+0x90]
   140034ffb:	mov    QWORD PTR [rsp+0x60],r11
   140035000:	mov    QWORD PTR [rsp+0x90],rax
   140035008:	mov    rax,QWORD PTR [rsp+0xd8]
   140035010:	mov    QWORD PTR [rsp+0x50],rax
   140035015:	mov    eax,DWORD PTR [rsp+0xd0]
   14003501c:	mov    DWORD PTR [rsp+0x48],eax
   140035020:	mov    rax,QWORD PTR [rsp+0xc8]
   140035028:	mov    QWORD PTR [rsp+0x40],rax
   14003502d:	mov    eax,DWORD PTR [rsp+0xc0]
   140035034:	mov    DWORD PTR [rsp+0x38],eax
   140035038:	lea    rax,[rsp+0x90]
   140035040:	mov    QWORD PTR [rsp+0x30],rax
   140035045:	lea    rax,[rsp+0x60]
   14003504a:	mov    QWORD PTR [rsp+0x28],rax
   14003504f:	mov    eax,DWORD PTR [rsp+0xb0]
   140035056:	mov    DWORD PTR [rsp+0x20],eax
   14003505a:	call   QWORD PTR [r10+0xa0]
   140035061:	lea    r11,[rsp+0x80]
   140035069:	mov    rbx,QWORD PTR [r11+0x18]
   14003506d:	mov    rbp,QWORD PTR [r11+0x20]
   140035071:	mov    rsi,QWORD PTR [r11+0x28]
   140035075:	mov    rsp,r11
   140035078:	pop    rdi
   140035079:	ret    
   14003507a:	int3   
   14003507b:	int3   
   14003507c:	mov    rax,rsp
   14003507f:	push   rsi
   140035080:	push   rdi
   140035081:	push   r12
   140035083:	sub    rsp,0x70
   140035087:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140035090:	mov    QWORD PTR [rax+0x10],rbx
   140035094:	mov    QWORD PTR [rax+0x18],rbp
   140035098:	mov    rdi,r9
   14003509b:	mov    rsi,r8
   14003509e:	mov    rbx,rcx
   1400350a1:	and    QWORD PTR [rcx+0x48],0x0
   1400350a6:	test   rdx,rdx
   1400350a9:	je     0x1400350b6
   1400350ab:	mov    QWORD PTR [rcx+0x50],rdx
   1400350af:	mov    QWORD PTR [rdx+0xa0],rcx
   1400350b6:	call   0x1400210b0
   1400350bb:	cmp    DWORD PTR [rax+0x1dc],0x0
   1400350c2:	jne    0x1400350d7
   1400350c4:	call   0x1400431ac
   1400350c9:	test   eax,eax
   1400350cb:	jne    0x1400350d7
   1400350cd:	mov    eax,0x80004005
   1400350d2:	jmp    0x140035466
   1400350d7:	mov    rcx,rdi
   1400350da:	call   0x140031884
   1400350df:	test   eax,eax
   1400350e1:	je     0x1400350f6
   1400350e3:	mov    rax,QWORD PTR [rbx]
   1400350e6:	mov    rdx,rdi
   1400350e9:	mov    rcx,rbx
   1400350ec:	call   QWORD PTR [rax+0x198]
   1400350f2:	mov    esi,eax
   1400350f4:	jmp    0x140035125
   1400350f6:	mov    r10,QWORD PTR [rbx]
   1400350f9:	mov    rax,QWORD PTR [rsp+0xe8]
   140035101:	mov    QWORD PTR [rsp+0x20],rax
   140035106:	mov    r9d,DWORD PTR [rsp+0xe0]
   14003510e:	mov    r8,QWORD PTR [rsp+0xd8]
   140035116:	mov    rdx,rsi
   140035119:	mov    rcx,rbx
   14003511c:	call   QWORD PTR [r10+0x190]
   140035123:	mov    esi,eax
   140035125:	test   esi,esi
   140035127:	js     0x140035464
   14003512d:	xor    eax,eax
   14003512f:	cmp    QWORD PTR [rbx+0x80],rax
   140035136:	setne  al
   140035139:	test   eax,eax
   14003513b:	jne    0x140035143
   14003513d:	call   0x1400208f8
   140035142:	int3   
   140035143:	mov    eax,DWORD PTR [rsp+0xd0]
   14003514a:	mov    DWORD PTR [rbx+0x58],eax
   14003514d:	xor    eax,eax
   14003514f:	mov    rdi,QWORD PTR [rsp+0xc0]
   140035157:	test   rdi,rdi
   14003515a:	setne  al
   14003515d:	test   eax,eax
   14003515f:	jne    0x140035167
   140035161:	call   0x1400208f8
   140035166:	int3   
   140035167:	mov    rcx,QWORD PTR [rsp+0xc8]
   14003516f:	test   rcx,rcx
   140035172:	jne    0x1400351fc
   140035178:	xor    edx,edx
   14003517a:	lea    rcx,[rsp+0x48]
   14003517f:	call   0x14002b1cc
   140035184:	nop
   140035185:	mov    rcx,QWORD PTR [rbx+0x80]
   14003518c:	mov    rax,QWORD PTR [rcx]
   14003518f:	lea    r8,[rsp+0x90]
   140035197:	mov    edx,0x1
   14003519c:	call   QWORD PTR [rax+0x90]
   1400351a2:	lea    rdx,[rsp+0x90]
   1400351aa:	lea    rcx,[rsp+0x48]
   1400351af:	call   0x14002fe48
   1400351b4:	mov    r11,QWORD PTR [rdi]
   1400351b7:	mov    DWORD PTR [rsp+0x38],r11d
   1400351bc:	mov    rax,QWORD PTR [rsp+0x90]
   1400351c4:	lea    ecx,[rax+r11*1]
   1400351c8:	mov    DWORD PTR [rsp+0x40],ecx
   1400351cc:	shr    r11,0x20
   1400351d0:	mov    DWORD PTR [rsp+0x3c],r11d
   1400351d5:	shr    rax,0x20
   1400351d9:	add    eax,r11d
   1400351dc:	mov    DWORD PTR [rsp+0x44],eax
   1400351e0:	lea    r12,[rbx+0x5c]
   1400351e4:	movdqu xmm0,XMMWORD PTR [rsp+0x38]
   1400351ea:	movdqu XMMWORD PTR [r12],xmm0
   1400351f0:	lea    rcx,[rsp+0x48]
   1400351f5:	call   0x14002b254
   1400351fa:	jmp    0x14003522f
   1400351fc:	mov    rcx,QWORD PTR [rcx]
   1400351ff:	mov    rax,QWORD PTR [rdi]
   140035202:	mov    DWORD PTR [rsp+0x38],eax
   140035206:	lea    edx,[rax+rcx*1]
   140035209:	mov    DWORD PTR [rsp+0x40],edx
   14003520d:	shr    rax,0x20
   140035211:	mov    DWORD PTR [rsp+0x3c],eax
   140035215:	shr    rcx,0x20
   140035219:	add    ecx,eax
   14003521b:	mov    DWORD PTR [rsp+0x44],ecx
   14003521f:	lea    r12,[rbx+0x5c]
   140035223:	movdqu xmm0,XMMWORD PTR [rsp+0x38]
   140035229:	movdqu XMMWORD PTR [r12],xmm0
   14003522f:	mov    DWORD PTR [rbx+0xa8],0x30000
   140035239:	mov    eax,DWORD PTR [rbx+0xb0]
   14003523f:	bt     eax,0xc
   140035243:	jae    0x14003524f
   140035245:	mov    DWORD PTR [rbx+0xa8],0x30001
   14003524f:	bt     eax,0xa
   140035253:	jae    0x140035262
   140035255:	mov    edi,DWORD PTR [rsp+0xb8]
   14003525c:	btr    edi,0x1c
   140035260:	jmp    0x140035269
   140035262:	mov    edi,DWORD PTR [rsp+0xb8]
   140035269:	mov    eax,DWORD PTR [rbx+0xa8]
   14003526f:	and    eax,edi
   140035271:	mov    DWORD PTR [rbx+0xac],eax
   140035277:	cmp    esi,0x1
   14003527a:	je     0x1400352b1
   14003527c:	lea    r8,[rbx+0x160]
   140035283:	lea    rdx,[rbx+0x6c]
   140035287:	mov    rcx,rbx
   14003528a:	call   0x1400337e4
   14003528f:	mov    DWORD PTR [rbx+0xa0],eax
   140035295:	lea    r8,[rbx+0x158]
   14003529c:	lea    rdx,[rip+0x3b295]        # 0x140070538
   1400352a3:	mov    rcx,rbx
   1400352a6:	call   0x1400337e4
   1400352ab:	mov    DWORD PTR [rbx+0xa4],eax
   1400352b1:	lea    r8,[rbx+0x170]
   1400352b8:	lea    rdx,[rip+0x3b0b9]        # 0x140070378
   1400352bf:	mov    rcx,rbx
   1400352c2:	call   0x1400337e4
   1400352c7:	mov    DWORD PTR [rbx+0xd4],eax
   1400352cd:	mov    rcx,rbx
   1400352d0:	call   0x140034e84
   1400352d5:	mov    rcx,QWORD PTR [rbx+0x80]
   1400352dc:	mov    rax,QWORD PTR [rcx]
   1400352df:	lea    r8,[rbx+0x88]
   1400352e6:	lea    rdx,[rip+0x3b10b]        # 0x1400703f8
   1400352ed:	call   QWORD PTR [rax]
   1400352ef:	mov    esi,eax
   1400352f1:	test   eax,eax
   1400352f3:	js     0x14003539c
   1400352f9:	bt     edi,0x1c
   1400352fd:	jae    0x140035316
   1400352ff:	mov    rax,QWORD PTR [rbx]
   140035302:	xor    r8d,r8d
   140035305:	lea    edx,[r8-0x5]
   140035309:	mov    rcx,rbx
   14003530c:	call   QWORD PTR [rax+0xb8]
   140035312:	mov    esi,eax
   140035314:	jmp    0x140035380
   140035316:	mov    edx,0xffff8300
   14003531b:	mov    r8d,edx
   14003531e:	mov    rcx,r12
   140035321:	call   QWORD PTR [rip+0x2f619]        # 0x140064940
   140035327:	mov    r11,QWORD PTR [rbx]
   14003532a:	xor    r8d,r8d
   14003532d:	lea    edx,[r8-0x5]
   140035331:	mov    rcx,rbx
   140035334:	call   QWORD PTR [r11+0xb8]
   14003533b:	mov    esi,eax
   14003533d:	test   eax,eax
   14003533f:	js     0x14003539c
   140035341:	mov    rax,QWORD PTR [rbx]
   140035344:	xor    r8d,r8d
   140035347:	lea    edx,[r8-0x3]
   14003534b:	mov    rcx,rbx
   14003534e:	call   QWORD PTR [rax+0xb8]
   140035354:	mov    esi,eax
   140035356:	test   eax,eax
   140035358:	js     0x14003539c
   14003535a:	mov    edx,0x7d00
   14003535f:	mov    r8d,edx
   140035362:	mov    rcx,r12
   140035365:	call   QWORD PTR [rip+0x2f5d5]        # 0x140064940
   14003536b:	mov    rcx,QWORD PTR [rbx+0x88]
   140035372:	mov    rax,QWORD PTR [rcx]
   140035375:	mov    r8,r12
   140035378:	mov    rdx,r12
   14003537b:	call   QWORD PTR [rax+0x38]
   14003537e:	mov    esi,eax
   140035380:	test   esi,esi
   140035382:	js     0x14003539c
   140035384:	mov    rax,QWORD PTR [rbx+0x40]
   140035388:	mov    QWORD PTR [rax+0xd8],rbx
   14003538f:	mov    rcx,rbx
   140035392:	call   0x140033ad4
   140035397:	jmp    0x140035423
   14003539c:	mov    rcx,QWORD PTR [rbx+0x88]
   1400353a3:	test   rcx,rcx
   1400353a6:	je     0x1400353b6
   1400353a8:	mov    rax,QWORD PTR [rcx]
   1400353ab:	call   QWORD PTR [rax+0x10]
   1400353ae:	and    QWORD PTR [rbx+0x88],0x0
   1400353b6:	lea    rdx,[rbx+0x6c]
   1400353ba:	mov    r8d,DWORD PTR [rbx+0xa0]
   1400353c1:	mov    rcx,rbx
   1400353c4:	call   0x140033878
   1400353c9:	mov    r8d,DWORD PTR [rbx+0xa4]
   1400353d0:	lea    rdx,[rip+0x3b161]        # 0x140070538
   1400353d7:	mov    rcx,rbx
   1400353da:	call   0x140033878
   1400353df:	mov    r8d,DWORD PTR [rbx+0xd4]
   1400353e6:	lea    rdx,[rip+0x3af8b]        # 0x140070378
   1400353ed:	mov    rcx,rbx
   1400353f0:	call   0x140033878
   1400353f5:	and    DWORD PTR [rbx+0xa0],0x0
   1400353fc:	and    DWORD PTR [rbx+0xa4],0x0
   140035403:	and    DWORD PTR [rbx+0xd4],0x0
   14003540a:	mov    rcx,QWORD PTR [rbx+0x80]
   140035411:	mov    rax,QWORD PTR [rcx]
   140035414:	call   QWORD PTR [rax+0x10]
   140035417:	and    QWORD PTR [rbx+0x80],0x0
   14003541f:	test   esi,esi
   140035421:	js     0x140035464
   140035423:	mov    rcx,rbx
   140035426:	call   0x140033d20
   14003542b:	mov    rdx,QWORD PTR [rsp+0xb0]
   140035433:	test   rdx,rdx
   140035436:	je     0x140035444
   140035438:	mov    rax,QWORD PTR [rbx]
   14003543b:	mov    rcx,rbx
   14003543e:	call   QWORD PTR [rax+0x110]
   140035444:	mov    rax,QWORD PTR [rbx]
   140035447:	and    edi,0x8800000
   14003544d:	or     edi,DWORD PTR [rbx+0xac]
   140035453:	xor    r9d,r9d
   140035456:	mov    r8d,edi
   140035459:	xor    edx,edx
   14003545b:	mov    rcx,rbx
   14003545e:	call   QWORD PTR [rax+0x100]
   140035464:	mov    eax,esi
   140035466:	lea    r11,[rsp+0x70]
   14003546b:	mov    rbx,QWORD PTR [r11+0x28]
   14003546f:	mov    rbp,QWORD PTR [r11+0x30]
   140035473:	mov    rsp,r11
   140035476:	pop    r12
   140035478:	pop    rdi
   140035479:	pop    rsi
   14003547a:	ret    
   14003547b:	int3   
   14003547c:	rex push rbp
   14003547e:	sub    rsp,0x20
   140035482:	mov    rbp,rdx
   140035485:	lea    rcx,[rbp+0x48]
   140035489:	call   0x14002b254
   14003548e:	add    rsp,0x20
   140035492:	pop    rbp
   140035493:	ret    
   140035494:	mov    QWORD PTR [rsp+0x8],rbx
   140035499:	push   rdi
   14003549a:	sub    rsp,0x20
   14003549e:	mov    rdx,QWORD PTR [rcx+0x48]
   1400354a2:	mov    rbx,rcx
   1400354a5:	test   rdx,rdx
   1400354a8:	je     0x1400354b7
   1400354aa:	mov    rcx,QWORD PTR [rcx+0x40]
   1400354ae:	add    rcx,0x48
   1400354b2:	call   0x14002f8ec
   1400354b7:	mov    rax,QWORD PTR [rbx]
   1400354ba:	xor    edx,edx
   1400354bc:	mov    rcx,rbx
   1400354bf:	call   QWORD PTR [rax+0x140]
   1400354c5:	mov    r11,QWORD PTR [rbx+0x40]
   1400354c9:	mov    rdx,QWORD PTR [r11+0x88]
   1400354d0:	test   rdx,rdx
   1400354d3:	je     0x140035520
   1400354d5:	test   rdx,rdx
   1400354d8:	mov    rax,rdx
   1400354db:	mov    rcx,rdx
   1400354de:	je     0x14003551a
   1400354e0:	mov    rdi,QWORD PTR [rcx+0x10]
   1400354e4:	mov    rdx,QWORD PTR [rdx]
   1400354e7:	cmp    QWORD PTR [rdi+0x8],rbx
   1400354eb:	je     0x1400354f4
   1400354ed:	test   rdx,rdx
   1400354f0:	jne    0x1400354d5
   1400354f2:	jmp    0x1400354f7
   1400354f4:	mov    rdx,rax
   1400354f7:	test   rdx,rdx
   1400354fa:	je     0x140035520
   1400354fc:	lea    rcx,[r11+0x80]
   140035503:	call   0x14003ebe0
   140035508:	mov    rcx,rdi
   14003550b:	call   0x1400313c8
   140035510:	mov    rcx,rdi
   140035513:	call   0x14001ac50
   140035518:	jmp    0x14003552f
   14003551a:	call   0x1400208f8
   14003551f:	int3   
   140035520:	mov    r8,QWORD PTR [rbx]
   140035523:	mov    edx,0x1
   140035528:	mov    rcx,rbx
   14003552b:	call   QWORD PTR [r8+0x8]
   14003552f:	mov    eax,0x1
   140035534:	mov    rbx,QWORD PTR [rsp+0x30]
   140035539:	add    rsp,0x20
   14003553d:	pop    rdi
   14003553e:	ret    
   14003553f:	int3   
   140035540:	mov    rax,rsp
   140035543:	push   rdi
   140035544:	push   r12
   140035546:	push   r13
   140035548:	sub    rsp,0xd0
   14003554f:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
   14003555b:	mov    QWORD PTR [rax+0x10],rbx
   14003555f:	mov    QWORD PTR [rax+0x18],rbp
   140035563:	mov    QWORD PTR [rax+0x20],rsi
   140035567:	mov    rbx,rcx
   14003556a:	mov    rcx,QWORD PTR [rcx+0x80]
   140035571:	xor    r13d,r13d
   140035574:	mov    eax,r13d
   140035577:	cmp    rcx,r13
   14003557a:	setne  al
   14003557d:	cmp    eax,r13d
   140035580:	jne    0x140035588
   140035582:	call   0x1400208f8
   140035587:	int3   
   140035588:	mov    r12d,r13d
   14003558b:	mov    QWORD PTR [rsp+0xf0],r13
   140035593:	mov    rax,QWORD PTR [rcx]
   140035596:	lea    r8,[rsp+0xf0]
   14003559e:	lea    rdx,[rip+0x3af13]        # 0x1400704b8
   1400355a5:	call   QWORD PTR [rax]
   1400355a7:	cmp    eax,r13d
   1400355aa:	jl     0x1400357e6
   1400355b0:	mov    eax,r13d
   1400355b3:	cmp    QWORD PTR [rsp+0xf0],r13
   1400355bb:	setne  al
   1400355be:	cmp    eax,r13d
   1400355c1:	jne    0x1400355c9
   1400355c3:	call   0x1400208f8
   1400355c8:	int3   
   1400355c9:	mov    DWORD PTR [rsp+0x50],0x70
   1400355d1:	lea    rax,[rbx+0x138]
   1400355d8:	mov    QWORD PTR [rsp+0x58],rax
   1400355dd:	mov    QWORD PTR [rsp+0x60],r13
   1400355e2:	lea    rax,[rbx+0x158]
   1400355e9:	mov    QWORD PTR [rsp+0x68],rax
   1400355ee:	lea    rax,[rbx+0x160]
   1400355f5:	mov    QWORD PTR [rsp+0x70],rax
   1400355fa:	mov    QWORD PTR [rsp+0x90],r13
   140035602:	mov    QWORD PTR [rsp+0xa0],r13
   14003560a:	mov    QWORD PTR [rsp+0xa8],r13
   140035612:	lea    rcx,[rsp+0x20]
   140035617:	call   0x14003f678
   14003561c:	nop
   14003561d:	mov    rsi,QWORD PTR [rbx+0x40]
   140035621:	mov    eax,r13d
   140035624:	cmp    rsi,r13
   140035627:	setne  al
   14003562a:	cmp    eax,r13d
   14003562d:	jne    0x140035635
   14003562f:	call   0x1400208f8
   140035634:	int3   
   140035635:	mov    rsi,QWORD PTR [rsi+0x40]
   140035639:	mov    DWORD PTR [rsp+0x78],r13d
   14003563e:	mov    eax,r13d
   140035641:	cmp    rsi,r13
   140035644:	setne  al
   140035647:	cmp    eax,r13d
   14003564a:	jne    0x140035652
   14003564c:	call   0x1400208f8
   140035651:	int3   
   140035652:	lea    rdi,[rip+0x367db]        # 0x14006be34
   140035659:	mov    ebp,0x8
   14003565e:	mov    rax,QWORD PTR [rsi]
   140035661:	lea    r9,[rsp+0x20]
   140035666:	mov    r8d,DWORD PTR [rdi-0x4]
   14003566a:	mov    rdx,rbx
   14003566d:	mov    rcx,rsi
   140035670:	call   QWORD PTR [rax+0x208]
   140035676:	cmp    WORD PTR [rsp+0x28],r13w
   14003567c:	je     0x140035684
   14003567e:	mov    eax,DWORD PTR [rdi]
   140035680:	or     DWORD PTR [rsp+0x78],eax
   140035684:	add    rdi,0x8
   140035688:	sub    rbp,0x1
   14003568c:	jne    0x14003565e
   14003568e:	mov    rax,QWORD PTR [rsi]
   140035691:	lea    r9,[rsp+0x20]
   140035696:	mov    r8d,0xfffffd40
   14003569c:	mov    rdx,rbx
   14003569f:	mov    rcx,rsi
   1400356a2:	call   QWORD PTR [rax+0x208]
   1400356a8:	mov    r11d,DWORD PTR [rsp+0x28]
   1400356ad:	mov    DWORD PTR [rsp+0x7c],r11d
   1400356b2:	mov    rax,QWORD PTR [rsi]
   1400356b5:	lea    r9,[rsp+0x20]
   1400356ba:	mov    r8d,0xfffffd43
   1400356c0:	mov    rdx,rbx
   1400356c3:	mov    rcx,rsi
   1400356c6:	call   QWORD PTR [rax+0x208]
   1400356cc:	mov    r11d,DWORD PTR [rsp+0x28]
   1400356d1:	mov    DWORD PTR [rsp+0x80],r11d
   1400356d9:	mov    rax,QWORD PTR [rsi]
   1400356dc:	lea    r9,[rsp+0x20]
   1400356e1:	mov    r8d,0xfffffd34
   1400356e7:	mov    rdx,rbx
   1400356ea:	mov    rcx,rsi
   1400356ed:	call   QWORD PTR [rax+0x208]
   1400356f3:	movsx  r11d,WORD PTR [rsp+0x28]
   1400356f9:	mov    DWORD PTR [rsp+0x98],r11d
   140035701:	mov    rax,QWORD PTR [rsi]
   140035704:	lea    r9,[rsp+0x20]
   140035709:	mov    r8d,0xfffffd3f
   14003570f:	mov    rdx,rbx
   140035712:	mov    rcx,rsi
   140035715:	call   QWORD PTR [rax+0x208]
   14003571b:	mov    r11d,DWORD PTR [rsp+0x28]
   140035720:	mov    DWORD PTR [rsp+0x9c],r11d
   140035728:	mov    rax,QWORD PTR [rsi]
   14003572b:	lea    r9,[rsp+0x20]
   140035730:	mov    r8d,0xfffffd41
   140035736:	mov    rdx,rbx
   140035739:	mov    rcx,rsi
   14003573c:	call   QWORD PTR [rax+0x208]
   140035742:	mov    rcx,QWORD PTR [rsp+0x28]
   140035747:	mov    rax,QWORD PTR [rcx]
   14003574a:	lea    r8,[rsp+0x88]
   140035752:	lea    rdx,[rip+0x3adaf]        # 0x140070508
   140035759:	call   QWORD PTR [rax]
   14003575b:	mov    rcx,QWORD PTR [rsp+0x88]
   140035763:	cmp    eax,r13d
   140035766:	cmovl  rcx,r13
   14003576a:	mov    QWORD PTR [rsp+0x88],rcx
   140035772:	mov    DWORD PTR [rsp+0x38],0x18
   14003577a:	mov    rcx,QWORD PTR [rsp+0xf0]
   140035782:	mov    rax,QWORD PTR [rcx]
   140035785:	lea    r8,[rsp+0x38]
   14003578a:	lea    rdx,[rsp+0x50]
   14003578f:	call   QWORD PTR [rax+0x18]
   140035792:	cmp    eax,r13d
   140035795:	jl     0x1400357b9
   140035797:	mov    eax,DWORD PTR [rsp+0x3c]
   14003579b:	mov    DWORD PTR [rbx+0xb0],eax
   1400357a1:	mov    eax,DWORD PTR [rsp+0x44]
   1400357a5:	mov    DWORD PTR [rbx+0xa0],eax
   1400357ab:	mov    eax,DWORD PTR [rsp+0x48]
   1400357af:	mov    DWORD PTR [rbx+0xa4],eax
   1400357b5:	lea    r12d,[rbp+0x1]
   1400357b9:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400357c1:	mov    rax,QWORD PTR [rcx]
   1400357c4:	call   QWORD PTR [rax+0x10]
   1400357c7:	mov    rcx,QWORD PTR [rsp+0x88]
   1400357cf:	cmp    rcx,r13
   1400357d2:	je     0x1400357db
   1400357d4:	mov    rdx,QWORD PTR [rcx]
   1400357d7:	call   QWORD PTR [rdx+0x10]
   1400357da:	nop
   1400357db:	lea    rcx,[rsp+0x20]
   1400357e0:	call   QWORD PTR [rip+0x2eeba]        # 0x1400646a0
   1400357e6:	mov    eax,r12d
   1400357e9:	lea    r11,[rsp+0xd0]
   1400357f1:	mov    rbx,QWORD PTR [r11+0x28]
   1400357f5:	mov    rbp,QWORD PTR [r11+0x30]
   1400357f9:	mov    rsi,QWORD PTR [r11+0x38]
   1400357fd:	mov    rsp,r11
   140035800:	pop    r13
   140035802:	pop    r12
   140035804:	pop    rdi
   140035805:	ret    
   140035806:	int3   
   140035807:	int3   
   140035808:	int3   
   140035809:	int3   
   14003580a:	int3   
   14003580b:	int3   
   14003580c:	int3   
   14003580d:	int3   
   14003580e:	int3   
   14003580f:	int3   
   140035810:	rex push rbp
   140035812:	sub    rsp,0x20
   140035816:	mov    rbp,rdx
   140035819:	lea    rcx,[rbp+0x20]
   14003581d:	call   0x140034d30
   140035822:	add    rsp,0x20
   140035826:	pop    rbp
   140035827:	ret    
   140035828:	mov    rax,rsp
   14003582b:	push   rdi
   14003582c:	push   r12
   14003582e:	push   r13
   140035830:	push   r14
   140035832:	push   r15
   140035834:	sub    rsp,0xd0
   14003583b:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140035844:	mov    QWORD PTR [rax+0x10],rbx
   140035848:	mov    QWORD PTR [rax+0x18],rbp
   14003584c:	mov    QWORD PTR [rax+0x20],rsi
   140035850:	mov    r13d,r9d
   140035853:	mov    rsi,r8
   140035856:	mov    r10,rdx
   140035859:	mov    r12,rcx
   14003585c:	xor    r15d,r15d
   14003585f:	mov    edi,r15d
   140035862:	lea    rbp,[rcx+0x80]
   140035869:	cmp    QWORD PTR [rbp+0x0],r15
   14003586d:	jne    0x1400358a1
   14003586f:	mov    rax,QWORD PTR [rsp+0x120]
   140035877:	mov    QWORD PTR [rsp+0x28],rax
   14003587c:	mov    QWORD PTR [rsp+0x20],rbp
   140035881:	lea    r9,[rip+0x3ab90]        # 0x140070418
   140035888:	xor    edx,edx
   14003588a:	lea    r8d,[r15+0x3]
   14003588e:	mov    rcx,r10
   140035891:	call   0x140033640
   140035896:	mov    edi,eax
   140035898:	cmp    eax,r15d
   14003589b:	jl     0x140035c6e
   1400358a1:	mov    QWORD PTR [rsp+0x50],r15
   1400358a6:	mov    QWORD PTR [rsp+0x48],r15
   1400358ab:	mov    QWORD PTR [rsp+0x100],r15
   1400358b3:	lea    rdx,[r12+0x6c]
   1400358b8:	mov    rcx,r12
   1400358bb:	call   0x140033904
   1400358c0:	mov    r11,QWORD PTR [r12]
   1400358c4:	mov    rcx,r12
   1400358c7:	call   QWORD PTR [r11+0x180]
   1400358ce:	mov    r14d,eax
   1400358d1:	mov    ebx,0x1
   1400358d6:	cmp    eax,r15d
   1400358d9:	jne    0x14003591c
   1400358db:	mov    rcx,QWORD PTR [rbp+0x0]
   1400358df:	mov    r9,QWORD PTR [rcx]
   1400358e2:	lea    r8,[r12+0xb0]
   1400358ea:	mov    edx,ebx
   1400358ec:	call   QWORD PTR [r9+0xb0]
   1400358f3:	bt     DWORD PTR [r12+0xb0],0x11
   1400358fd:	jae    0x14003591c
   1400358ff:	mov    rcx,QWORD PTR [rbp+0x0]
   140035903:	mov    rax,QWORD PTR [rcx]
   140035906:	lea    rdx,[r12+0x138]
   14003590e:	call   QWORD PTR [rax+0x18]
   140035911:	mov    edi,eax
   140035913:	cmp    eax,r15d
   140035916:	jl     0x140035c1c
   14003591c:	cmp    rsi,r15
   14003591f:	je     0x1400359d4
   140035925:	cmp    r13d,r15d
   140035928:	jne    0x140035a6b
   14003592e:	mov    rcx,QWORD PTR [rbp+0x0]
   140035932:	mov    rax,QWORD PTR [rcx]
   140035935:	lea    r8,[rsp+0x100]
   14003593d:	lea    rdx,[rip+0x3abe4]        # 0x140070528
   140035944:	call   QWORD PTR [rax]
   140035946:	cmp    eax,r15d
   140035949:	jl     0x1400359dd
   14003594f:	mov    rax,QWORD PTR [rsi]
   140035952:	mov    QWORD PTR [rsp+0x20],r15
   140035957:	xor    r9d,r9d
   14003595a:	xor    r8d,r8d
   14003595d:	lea    edx,[r9+0x3]
   140035961:	mov    rcx,rsi
   140035964:	call   QWORD PTR [rax+0xa0]
   14003596a:	cmp    eax,r15d
   14003596d:	je     0x1400359dd
   14003596f:	mov    QWORD PTR [rsp+0x38],r15
   140035974:	mov    rax,QWORD PTR [rsi]
   140035977:	lea    rcx,[rsp+0x30]
   14003597c:	mov    QWORD PTR [rsp+0x20],rcx
   140035981:	lea    r9,[rsp+0x38]
   140035986:	mov    r8d,0xffffffff
   14003598c:	xor    edx,edx
   14003598e:	mov    rcx,rsi
   140035991:	call   QWORD PTR [rax+0xa0]
   140035997:	mov    rcx,QWORD PTR [rsp+0x100]
   14003599f:	mov    r9,QWORD PTR [rcx]
   1400359a2:	mov    r8d,eax
   1400359a5:	mov    rdx,QWORD PTR [rsp+0x38]
   1400359aa:	call   QWORD PTR [r9+0x28]
   1400359ae:	mov    edi,eax
   1400359b0:	mov    rcx,QWORD PTR [rsp+0x100]
   1400359b8:	mov    rax,QWORD PTR [rcx]
   1400359bb:	call   QWORD PTR [rax+0x10]
   1400359be:	mov    QWORD PTR [rsp+0x100],r15
   1400359c6:	cmp    edi,r15d
   1400359c9:	jl     0x140035c1c
   1400359cf:	jmp    0x140035bf2
   1400359d4:	cmp    r13d,r15d
   1400359d7:	jne    0x140035a6b
   1400359dd:	mov    rcx,QWORD PTR [rbp+0x0]
   1400359e1:	mov    rax,QWORD PTR [rcx]
   1400359e4:	lea    r8,[rsp+0x50]
   1400359e9:	lea    rdx,[rip+0x3ab28]        # 0x140070518
   1400359f0:	call   QWORD PTR [rax]
   1400359f2:	cmp    eax,r15d
   1400359f5:	jl     0x140035a6b
   1400359f7:	cmp    rsi,r15
   1400359fa:	jne    0x140035a0b
   1400359fc:	mov    rcx,QWORD PTR [rsp+0x50]
   140035a01:	mov    rax,QWORD PTR [rcx]
   140035a04:	call   QWORD PTR [rax+0x40]
   140035a07:	mov    edi,eax
   140035a09:	jmp    0x140035a52
   140035a0b:	mov    QWORD PTR [rsp+0x20],r15
   140035a10:	mov    r9d,0x1000
   140035a16:	mov    r8d,ebx
   140035a19:	mov    rdx,rsi
   140035a1c:	lea    rcx,[rsp+0x60]
   140035a21:	call   0x1400311e0
   140035a26:	nop
   140035a27:	lea    rdx,[rsp+0x60]
   140035a2c:	lea    rcx,[rsp+0x38]
   140035a31:	call   0x14002fd74
   140035a36:	mov    rcx,QWORD PTR [rsp+0x50]
   140035a3b:	mov    rax,QWORD PTR [rcx]
   140035a3e:	lea    rdx,[rsp+0x38]
   140035a43:	call   QWORD PTR [rax+0x28]
   140035a46:	mov    edi,eax
   140035a48:	lea    rcx,[rsp+0x60]
   140035a4d:	call   0x140031164
   140035a52:	mov    rcx,QWORD PTR [rsp+0x50]
   140035a57:	mov    rax,QWORD PTR [rcx]
   140035a5a:	call   QWORD PTR [rax+0x10]
   140035a5d:	cmp    edi,r15d
   140035a60:	jl     0x140035c1c
   140035a66:	jmp    0x140035bf2
   140035a6b:	mov    rcx,QWORD PTR [rbp+0x0]
   140035a6f:	mov    rax,QWORD PTR [rcx]
   140035a72:	lea    r8,[rsp+0x48]
   140035a77:	lea    rdx,[rip+0x3aa0a]        # 0x140070488
   140035a7e:	call   QWORD PTR [rax]
   140035a80:	cmp    eax,r15d
   140035a83:	jl     0x140035c17
   140035a89:	cmp    rsi,r15
   140035a8c:	jne    0x140035afe
   140035a8e:	mov    QWORD PTR [rsp+0x38],r15
   140035a93:	lea    r8,[rsp+0x38]
   140035a98:	mov    edx,ebx
   140035a9a:	xor    ecx,ecx
   140035a9c:	call   QWORD PTR [rip+0x2f156]        # 0x140064bf8
   140035aa2:	mov    edi,eax
   140035aa4:	cmp    eax,r15d
   140035aa7:	jl     0x140035be2
   140035aad:	mov    QWORD PTR [rsp+0x30],r15
   140035ab2:	lea    r9,[rsp+0x30]
   140035ab7:	xor    r8d,r8d
   140035aba:	mov    edx,0x1012
   140035abf:	mov    rcx,QWORD PTR [rsp+0x38]
   140035ac4:	call   QWORD PTR [rip+0x2f136]        # 0x140064c00
   140035aca:	mov    edi,eax
   140035acc:	cmp    eax,r15d
   140035acf:	jl     0x140035aee
   140035ad1:	mov    rcx,QWORD PTR [rsp+0x48]
   140035ad6:	mov    rax,QWORD PTR [rcx]
   140035ad9:	mov    rdx,QWORD PTR [rsp+0x30]
   140035ade:	call   QWORD PTR [rax+0x28]
   140035ae1:	mov    edi,eax
   140035ae3:	mov    rcx,QWORD PTR [rsp+0x30]
   140035ae8:	mov    rax,QWORD PTR [rcx]
   140035aeb:	call   QWORD PTR [rax+0x10]
   140035aee:	mov    rcx,QWORD PTR [rsp+0x38]
   140035af3:	mov    rax,QWORD PTR [rcx]
   140035af6:	call   QWORD PTR [rax+0x10]
   140035af9:	jmp    0x140035be2
   140035afe:	cmp    r13d,r15d
   140035b01:	je     0x140035bdd
   140035b07:	mov    rax,QWORD PTR [rsi]
   140035b0a:	mov    rcx,rsi
   140035b0d:	call   QWORD PTR [rax+0x60]
   140035b10:	mov    r13,rax
   140035b13:	mov    ecx,0xffffffff
   140035b18:	cmp    rax,rcx
   140035b1b:	jae    0x140035b58
   140035b1d:	mov    edx,eax
   140035b1f:	xor    ecx,ecx
   140035b21:	call   QWORD PTR [rip+0x2ea51]        # 0x140064578
   140035b27:	mov    rbx,rax
   140035b2a:	cmp    rax,r15
   140035b2d:	je     0x140035b58
   140035b2f:	mov    rcx,rax
   140035b32:	call   QWORD PTR [rip+0x2e9c8]        # 0x140064500
   140035b38:	cmp    rax,r15
   140035b3b:	je     0x140035b58
   140035b3d:	mov    r9,QWORD PTR [rsi]
   140035b40:	mov    r8d,r13d
   140035b43:	mov    rdx,rax
   140035b46:	mov    rcx,rsi
   140035b49:	call   QWORD PTR [r9+0x68]
   140035b4d:	mov    rcx,rbx
   140035b50:	call   QWORD PTR [rip+0x2e932]        # 0x140064488
   140035b56:	jmp    0x140035b60
   140035b58:	mov    edi,0x8007000e
   140035b5d:	mov    rbx,r15
   140035b60:	mov    QWORD PTR [rsp+0x30],r15
   140035b65:	cmp    rbx,r15
   140035b68:	je     0x140035be2
   140035b6a:	lea    r8,[rsp+0x30]
   140035b6f:	mov    edx,0x1
   140035b74:	mov    rcx,rbx
   140035b77:	call   QWORD PTR [rip+0x2f07b]        # 0x140064bf8
   140035b7d:	mov    edi,eax
   140035b7f:	cmp    eax,r15d
   140035b82:	jl     0x140035be2
   140035b84:	mov    QWORD PTR [rsp+0x38],r15
   140035b89:	lea    rax,[rsp+0x38]
   140035b8e:	mov    QWORD PTR [rsp+0x28],rax
   140035b93:	mov    DWORD PTR [rsp+0x20],r15d
   140035b98:	xor    r9d,r9d
   140035b9b:	xor    edx,edx
   140035b9d:	lea    r8d,[r9+0x12]
   140035ba1:	mov    rcx,QWORD PTR [rsp+0x30]
   140035ba6:	call   QWORD PTR [rip+0x2f05c]        # 0x140064c08
   140035bac:	mov    edi,eax
   140035bae:	cmp    eax,r15d
   140035bb1:	jl     0x140035bd0
   140035bb3:	mov    rcx,QWORD PTR [rsp+0x48]
   140035bb8:	mov    rax,QWORD PTR [rcx]
   140035bbb:	mov    rdx,QWORD PTR [rsp+0x38]
   140035bc0:	call   QWORD PTR [rax+0x30]
   140035bc3:	mov    edi,eax
   140035bc5:	mov    rcx,QWORD PTR [rsp+0x38]
   140035bca:	mov    rax,QWORD PTR [rcx]
   140035bcd:	call   QWORD PTR [rax+0x10]
   140035bd0:	mov    rcx,QWORD PTR [rsp+0x30]
   140035bd5:	mov    rax,QWORD PTR [rcx]
   140035bd8:	call   QWORD PTR [rax+0x10]
   140035bdb:	jmp    0x140035be2
   140035bdd:	mov    edi,0x8000ffff
   140035be2:	mov    rcx,QWORD PTR [rsp+0x48]
   140035be7:	mov    rax,QWORD PTR [rcx]
   140035bea:	call   QWORD PTR [rax+0x10]
   140035bed:	cmp    edi,r15d
   140035bf0:	jl     0x140035c1c
   140035bf2:	cmp    r14d,r15d
   140035bf5:	jne    0x140035c17
   140035bf7:	bt     DWORD PTR [r12+0xb0],0x11
   140035c01:	jb     0x140035c17
   140035c03:	mov    rcx,QWORD PTR [rbp+0x0]
   140035c07:	mov    rax,QWORD PTR [rcx]
   140035c0a:	lea    rdx,[r12+0x138]
   140035c12:	call   QWORD PTR [rax+0x18]
   140035c15:	mov    edi,eax
   140035c17:	cmp    edi,r15d
   140035c1a:	jge    0x140035c49
   140035c1c:	mov    rcx,QWORD PTR [rbp+0x0]
   140035c20:	cmp    rcx,r15
   140035c23:	je     0x140035c42
   140035c25:	mov    rax,QWORD PTR [rcx]
   140035c28:	mov    ebx,0x1
   140035c2d:	mov    edx,ebx
   140035c2f:	call   QWORD PTR [rax+0x30]
   140035c32:	mov    rcx,QWORD PTR [rbp+0x0]
   140035c36:	mov    rax,QWORD PTR [rcx]
   140035c39:	call   QWORD PTR [rax+0x10]
   140035c3c:	mov    QWORD PTR [rbp+0x0],r15
   140035c40:	jmp    0x140035c4e
   140035c42:	mov    ebx,0x1
   140035c47:	jmp    0x140035c4e
   140035c49:	mov    ebx,0x1
   140035c4e:	mov    rcx,QWORD PTR [rsp+0x100]
   140035c56:	cmp    rcx,r15
   140035c59:	je     0x140035c61
   140035c5b:	mov    rax,QWORD PTR [rcx]
   140035c5e:	call   QWORD PTR [rax+0x10]
   140035c61:	cmp    r14d,r15d
   140035c64:	je     0x140035c6c
   140035c66:	cmp    edi,r15d
   140035c69:	cmovge edi,ebx
   140035c6c:	mov    eax,edi
   140035c6e:	lea    r11,[rsp+0xd0]
   140035c76:	mov    rbx,QWORD PTR [r11+0x38]
   140035c7a:	mov    rbp,QWORD PTR [r11+0x40]
   140035c7e:	mov    rsi,QWORD PTR [r11+0x48]
   140035c82:	mov    rsp,r11
   140035c85:	pop    r15
   140035c87:	pop    r14
   140035c89:	pop    r13
   140035c8b:	pop    r12
   140035c8d:	pop    rdi
   140035c8e:	ret    
   140035c8f:	int3   
   140035c90:	int3   
   140035c91:	int3   
   140035c92:	int3   
   140035c93:	int3   
   140035c94:	int3   
   140035c95:	int3   
   140035c96:	int3   
   140035c97:	int3   
   140035c98:	rex push rbp
   140035c9a:	sub    rsp,0x20
   140035c9e:	mov    rbp,rdx
   140035ca1:	lea    rcx,[rbp+0x60]
   140035ca5:	call   0x140031164
   140035caa:	add    rsp,0x20
   140035cae:	pop    rbp
   140035caf:	ret    
   140035cb0:	sub    rsp,0x48
   140035cb4:	cmp    QWORD PTR [rcx+0x80],0x0
   140035cbc:	mov    r9,rcx
   140035cbf:	je     0x140035d04
   140035cc1:	mov    rax,QWORD PTR [rcx+0x40]
   140035cc5:	test   rax,rax
   140035cc8:	je     0x140035d04
   140035cca:	mov    r11,QWORD PTR [rax+0x40]
   140035cce:	test   r11,r11
   140035cd1:	je     0x140035d04
   140035cd3:	mov    rcx,QWORD PTR [rcx+0x80]
   140035cda:	lea    rax,[r9+0x5c]
   140035cde:	add    r9,0x138
   140035ce5:	mov    r10,QWORD PTR [rcx]
   140035ce8:	mov    QWORD PTR [rsp+0x30],rax
   140035ced:	mov    rax,QWORD PTR [r11+0x40]
   140035cf1:	mov    QWORD PTR [rsp+0x28],rax
   140035cf6:	and    DWORD PTR [rsp+0x20],0x0
   140035cfb:	call   QWORD PTR [r10+0x58]
   140035cff:	add    rsp,0x48
   140035d03:	ret    
   140035d04:	call   0x1400208f8
   140035d09:	int3   
   140035d0a:	int3   
   140035d0b:	int3   
   140035d0c:	mov    rax,rsp
   140035d0f:	mov    QWORD PTR [rax+0x8],rbx
   140035d13:	mov    QWORD PTR [rax+0x10],rbp
   140035d17:	mov    QWORD PTR [rax+0x18],rsi
   140035d1b:	push   rdi
   140035d1c:	sub    rsp,0x40
   140035d20:	cmp    QWORD PTR [rcx+0x88],0x0
   140035d28:	movaps XMMWORD PTR [rax-0x18],xmm6
   140035d2c:	mov    esi,r8d
   140035d2f:	mov    ebp,edx
   140035d31:	mov    rbx,rcx
   140035d34:	jne    0x140035d3c
   140035d36:	call   0x1400208f8
   140035d3b:	int3   
   140035d3c:	cmp    QWORD PTR [rcx+0x80],0x0
   140035d44:	jne    0x140035d4c
   140035d46:	call   0x1400208f8
   140035d4b:	int3   
   140035d4c:	movdqu xmm6,XMMWORD PTR [rcx+0x5c]
   140035d51:	mov    eax,DWORD PTR [rsp+0x70]
   140035d55:	add    r9d,edx
   140035d58:	lea    ecx,[r8+rax*1]
   140035d5c:	mov    DWORD PTR [rsp+0x20],ecx
   140035d60:	lea    rcx,[rbx+0x5c]
   140035d64:	call   QWORD PTR [rip+0x2ed0e]        # 0x140064a78
   140035d6a:	mov    rcx,rbx
   140035d6d:	call   0x140034e84
   140035d72:	test   eax,eax
   140035d74:	je     0x140035db3
   140035d76:	mov    eax,DWORD PTR [rbx+0x68]
   140035d79:	mov    r9d,DWORD PTR [rbx+0x64]
   140035d7d:	lea    rcx,[rbx+0x5c]
   140035d81:	sub    eax,DWORD PTR [rbx+0x60]
   140035d84:	sub    r9d,DWORD PTR [rbx+0x5c]
   140035d88:	mov    r8d,esi
   140035d8b:	add    eax,esi
   140035d8d:	add    r9d,ebp
   140035d90:	mov    edx,ebp
   140035d92:	mov    DWORD PTR [rsp+0x20],eax
   140035d96:	call   QWORD PTR [rip+0x2ecdc]        # 0x140064a78
   140035d9c:	mov    rcx,QWORD PTR [rbx+0x88]
   140035da3:	mov    rax,QWORD PTR [rcx]
   140035da6:	lea    r8,[rbx+0x5c]
   140035daa:	lea    rdx,[rbx+0x5c]
   140035dae:	call   QWORD PTR [rax+0x38]
   140035db1:	jmp    0x140035db8
   140035db3:	movdqu XMMWORD PTR [rbx+0x5c],xmm6
   140035db8:	mov    rbx,QWORD PTR [rsp+0x50]
   140035dbd:	mov    rbp,QWORD PTR [rsp+0x58]
   140035dc2:	mov    rsi,QWORD PTR [rsp+0x60]
   140035dc7:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140035dcc:	add    rsp,0x40
   140035dd0:	pop    rdi
   140035dd1:	ret    
   140035dd2:	int3   
   140035dd3:	int3   
   140035dd4:	mov    rax,rsp
   140035dd7:	mov    QWORD PTR [rax+0x8],rbx
   140035ddb:	mov    QWORD PTR [rax+0x10],rbp
   140035ddf:	mov    QWORD PTR [rax+0x18],rsi
   140035de3:	mov    QWORD PTR [rax+0x20],rdi
   140035de7:	push   r12
   140035de9:	push   r13
   140035deb:	push   r14
   140035ded:	sub    rsp,0x40
   140035df1:	mov    ebx,DWORD PTR [rsp+0x90]
   140035df8:	mov    r13d,r9d
   140035dfb:	mov    r14d,r8d
   140035dfe:	test   bl,bl
   140035e00:	mov    rsi,rdx
   140035e03:	mov    rdi,rcx
   140035e06:	jns    0x140035e13
   140035e08:	mov    rax,QWORD PTR [rcx]
   140035e0b:	xor    edx,edx
   140035e0d:	call   QWORD PTR [rax+0x140]
   140035e13:	mov    ebp,DWORD PTR [rsp+0x88]
   140035e1a:	mov    r12d,DWORD PTR [rsp+0x80]
   140035e22:	mov    eax,ebx
   140035e24:	and    eax,0x3
   140035e27:	cmp    al,0x3
   140035e29:	je     0x140035e69
   140035e2b:	test   bl,0x2
   140035e2e:	je     0x140035e39
   140035e30:	mov    edx,DWORD PTR [rdi+0x5c]
   140035e33:	mov    r8d,DWORD PTR [rdi+0x60]
   140035e37:	jmp    0x140035e3f
   140035e39:	mov    edx,r14d
   140035e3c:	mov    r8d,r13d
   140035e3f:	test   bl,0x1
   140035e42:	je     0x140035e54
   140035e44:	mov    r9d,DWORD PTR [rdi+0x64]
   140035e48:	mov    ecx,DWORD PTR [rdi+0x68]
   140035e4b:	sub    r9d,DWORD PTR [rdi+0x5c]
   140035e4f:	sub    ecx,DWORD PTR [rdi+0x60]
   140035e52:	jmp    0x140035e59
   140035e54:	mov    r9d,r12d
   140035e57:	mov    ecx,ebp
   140035e59:	mov    rax,QWORD PTR [rdi]
   140035e5c:	mov    DWORD PTR [rsp+0x20],ecx
   140035e60:	mov    rcx,rdi
   140035e63:	call   QWORD PTR [rax+0x130]
   140035e69:	test   bl,0x40
   140035e6c:	je     0x140035e7f
   140035e6e:	mov    rax,QWORD PTR [rdi]
   140035e71:	mov    edx,0x5
   140035e76:	mov    rcx,rdi
   140035e79:	call   QWORD PTR [rax+0x140]
   140035e7f:	and    ebx,0xffffff3f
   140035e85:	xor    edx,edx
   140035e87:	or     ebx,0x3
   140035e8a:	cmp    rsi,rdx
   140035e8d:	je     0x140035e93
   140035e8f:	mov    rdx,QWORD PTR [rsi+0x40]
   140035e93:	mov    rcx,QWORD PTR [rdi+0x48]
   140035e97:	mov    DWORD PTR [rsp+0x30],ebx
   140035e9b:	mov    r9d,r13d
   140035e9e:	mov    r8d,r14d
   140035ea1:	mov    DWORD PTR [rsp+0x28],ebp
   140035ea5:	mov    DWORD PTR [rsp+0x20],r12d
   140035eaa:	call   QWORD PTR [rip+0x2eae8]        # 0x140064998
   140035eb0:	mov    rbx,QWORD PTR [rsp+0x60]
   140035eb5:	mov    rbp,QWORD PTR [rsp+0x68]
   140035eba:	mov    rsi,QWORD PTR [rsp+0x70]
   140035ebf:	mov    rdi,QWORD PTR [rsp+0x78]
   140035ec4:	add    rsp,0x40
   140035ec8:	pop    r14
   140035eca:	pop    r13
   140035ecc:	pop    r12
   140035ece:	ret    
   140035ecf:	int3   
   140035ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140035ed5:	push   rdi
   140035ed6:	sub    rsp,0x20
   140035eda:	bt     DWORD PTR [rcx+0xb0],0xe
   140035ee2:	mov    rbx,rcx
   140035ee5:	jae    0x140035f04
   140035ee7:	cmp    DWORD PTR [rcx+0xb4],0x0
   140035eee:	jne    0x140035f04
   140035ef0:	mov    rcx,QWORD PTR [rcx+0x48]
   140035ef4:	call   QWORD PTR [rip+0x2e98e]        # 0x140064888
   140035efa:	mov    rcx,rax
   140035efd:	call   0x1400256f0
   140035f02:	jmp    0x140035f45
   140035f04:	call   QWORD PTR [rip+0x2ebce]        # 0x140064ad8
   140035f0a:	mov    rcx,rax
   140035f0d:	call   0x1400256f0
   140035f12:	bt     DWORD PTR [rbx+0xb0],0xa
   140035f1a:	mov    rdi,rax
   140035f1d:	jb     0x140035f42
   140035f1f:	mov    r9,QWORD PTR [rbx]
   140035f22:	xor    r8d,r8d
   140035f25:	mov    rcx,rbx
   140035f28:	lea    edx,[r8-0x4]
   140035f2c:	call   QWORD PTR [r9+0xb8]
   140035f33:	test   eax,eax
   140035f35:	js     0x140035f42
   140035f37:	mov    rcx,QWORD PTR [rbx+0x40]
   140035f3b:	mov    QWORD PTR [rcx+0xd8],rbx
   140035f42:	mov    rax,rdi
   140035f45:	mov    rbx,QWORD PTR [rsp+0x30]
   140035f4a:	add    rsp,0x20
   140035f4e:	pop    rdi
   140035f4f:	ret    
   140035f50:	mov    QWORD PTR [rsp+0x8],rbx
   140035f55:	mov    QWORD PTR [rsp+0x10],rsi
   140035f5a:	push   rdi
   140035f5b:	sub    rsp,0x20
   140035f5f:	bt     DWORD PTR [rcx+0xb0],0xe
   140035f67:	mov    rsi,rdx
   140035f6a:	mov    rbx,rcx
   140035f6d:	jae    0x140035f8c
   140035f6f:	cmp    DWORD PTR [rcx+0xb4],0x0
   140035f76:	jne    0x140035f8c
   140035f78:	mov    rcx,QWORD PTR [rcx+0x48]
   140035f7c:	call   QWORD PTR [rip+0x2e906]        # 0x140064888
   140035f82:	mov    rcx,rax
   140035f85:	call   0x1400256f0
   140035f8a:	jmp    0x140035fce
   140035f8c:	call   QWORD PTR [rip+0x2eb46]        # 0x140064ad8
   140035f92:	mov    rcx,rax
   140035f95:	call   0x1400256f0
   140035f9a:	bt     DWORD PTR [rbx+0xb0],0xa
   140035fa2:	mov    rdi,rax
   140035fa5:	jb     0x140035fcb
   140035fa7:	mov    r9,QWORD PTR [rbx]
   140035faa:	mov    r8,rsi
   140035fad:	mov    edx,0xfffffffc
   140035fb2:	mov    rcx,rbx
   140035fb5:	call   QWORD PTR [r9+0xb8]
   140035fbc:	test   eax,eax
   140035fbe:	js     0x140035fcb
   140035fc0:	mov    rcx,QWORD PTR [rbx+0x40]
   140035fc4:	mov    QWORD PTR [rcx+0xd8],rbx
   140035fcb:	mov    rax,rdi
   140035fce:	mov    rbx,QWORD PTR [rsp+0x30]
   140035fd3:	mov    rsi,QWORD PTR [rsp+0x38]
   140035fd8:	add    rsp,0x20
   140035fdc:	pop    rdi
   140035fdd:	ret    
   140035fde:	int3   
   140035fdf:	int3   
   140035fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140035fe5:	mov    QWORD PTR [rsp+0x10],rbp
   140035fea:	mov    QWORD PTR [rsp+0x18],rsi
   140035fef:	push   rdi
   140035ff0:	push   r12
   140035ff2:	push   r13
   140035ff4:	sub    rsp,0x20
   140035ff8:	test   r8,r8
   140035ffb:	mov    r13,r8
   140035ffe:	mov    ebp,edx
   140036000:	mov    r12,rcx
   140036003:	je     0x1400360a1
   140036009:	cmp    edx,0xffffffff
   14003600c:	je     0x1400360a1
   140036012:	mov    ecx,0x28
   140036017:	call   0x14001ac0c
   14003601c:	test   rax,rax
   14003601f:	mov    r11,rax
   140036022:	je     0x140036047
   140036024:	mov    rcx,QWORD PTR [r12+0xe0]
   14003602c:	and    QWORD PTR [rax],0x0
   140036030:	and    WORD PTR [rax+0x8],0x0
   140036035:	and    QWORD PTR [rax+0x10],0x0
   14003603a:	and    DWORD PTR [rax+0x1c],0x0
   14003603e:	mov    QWORD PTR [rax+0x20],rcx
   140036042:	mov    DWORD PTR [rax+0xc],ebp
   140036045:	jmp    0x14003604a
   140036047:	xor    r11d,r11d
   14003604a:	mov    QWORD PTR [r12+0xe0],r11
   140036052:	mov    rax,QWORD PTR [r13+0xa0]
   140036059:	mov    QWORD PTR [r11+0x10],rax
   14003605d:	mov    rax,QWORD PTR [r12+0xe0]
   140036065:	mov    QWORD PTR [rax],r12
   140036068:	mov    rax,QWORD PTR [r12+0xe0]
   140036070:	mov    rcx,QWORD PTR [rax+0x10]
   140036074:	mov    rax,QWORD PTR [rcx]
   140036077:	call   QWORD PTR [rax+0x168]
   14003607d:	mov    rdx,QWORD PTR [r12+0xe0]
   140036085:	mov    r8d,0x1
   14003608b:	mov    rax,QWORD PTR [rdx+0x10]
   14003608f:	mov    rcx,QWORD PTR [rax+0xd8]
   140036096:	mov    rax,QWORD PTR [rcx]
   140036099:	call   QWORD PTR [rax+0x8]
   14003609c:	jmp    0x140036121
   1400360a1:	mov    rbx,QWORD PTR [rcx+0xe0]
   1400360a8:	xor    edi,edi
   1400360aa:	test   rbx,rbx
   1400360ad:	je     0x140036121
   1400360af:	cmp    ebp,0xffffffff
   1400360b2:	mov    rsi,QWORD PTR [rbx+0x20]
   1400360b6:	je     0x1400360bd
   1400360b8:	cmp    DWORD PTR [rbx+0xc],ebp
   1400360bb:	jne    0x140036110
   1400360bd:	test   r13,r13
   1400360c0:	je     0x1400360cf
   1400360c2:	mov    rax,QWORD PTR [rbx+0x10]
   1400360c6:	cmp    QWORD PTR [r13+0xa0],rax
   1400360cd:	jne    0x140036110
   1400360cf:	test   rdi,rdi
   1400360d2:	je     0x1400360da
   1400360d4:	mov    QWORD PTR [rdi+0x20],rsi
   1400360d8:	jmp    0x1400360e2
   1400360da:	mov    QWORD PTR [r12+0xe0],rsi
   1400360e2:	mov    rax,QWORD PTR [rbx+0x10]
   1400360e6:	test   rax,rax
   1400360e9:	je     0x140036108
   1400360eb:	cmp    QWORD PTR [rax+0xd8],0x0
   1400360f3:	je     0x140036108
   1400360f5:	mov    rcx,QWORD PTR [rax+0xd8]
   1400360fc:	xor    r8d,r8d
   1400360ff:	mov    rdx,rbx
   140036102:	mov    rax,QWORD PTR [rcx]
   140036105:	call   QWORD PTR [rax+0x8]
   140036108:	mov    rcx,rbx
   14003610b:	call   0x14001ac50
   140036110:	test   rdi,rdi
   140036113:	je     0x140036119
   140036115:	mov    rdi,QWORD PTR [rdi+0x20]
   140036119:	test   rsi,rsi
   14003611c:	mov    rbx,rsi
   14003611f:	jne    0x1400360af
   140036121:	mov    rbx,QWORD PTR [rsp+0x40]
   140036126:	mov    rbp,QWORD PTR [rsp+0x48]
   14003612b:	mov    rsi,QWORD PTR [rsp+0x50]
   140036130:	add    rsp,0x20
   140036134:	pop    r13
   140036136:	pop    r12
   140036138:	pop    rdi
   140036139:	ret    
   14003613a:	int3   
   14003613b:	int3   
   14003613c:	mov    eax,0x1
   140036141:	lock xadd DWORD PTR [rcx-0x130],eax
   140036149:	add    eax,0x1
   14003614c:	ret    
   14003614d:	int3   
   14003614e:	int3   
   14003614f:	int3   
   140036150:	rex push rbx
   140036152:	sub    rsp,0x40
   140036156:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003615f:	lea    rbx,[rcx-0x138]
   140036166:	mov    rdx,QWORD PTR [rbx+0x38]
   14003616a:	lea    rcx,[rsp+0x28]
   14003616f:	call   0x140021aec
   140036174:	nop
   140036175:	mov    rcx,rbx
   140036178:	call   0x140033d20
   14003617d:	nop
   14003617e:	cmp    DWORD PTR [rsp+0x30],0x0
   140036183:	je     0x140036191
   140036185:	mov    rdx,QWORD PTR [rsp+0x28]
   14003618a:	xor    ecx,ecx
   14003618c:	call   0x140020cc4
   140036191:	xor    eax,eax
   140036193:	add    rsp,0x40
   140036197:	pop    rbx
   140036198:	ret    
   140036199:	int3   
   14003619a:	int3   
   14003619b:	int3   
   14003619c:	int3   
   14003619d:	int3   
   14003619e:	int3   
   14003619f:	int3   
   1400361a0:	rex push rbp
   1400361a2:	sub    rsp,0x20
   1400361a6:	mov    rbp,rdx
   1400361a9:	lea    rcx,[rbp+0x28]
   1400361ad:	call   0x1400236a8
   1400361b2:	add    rsp,0x20
   1400361b6:	pop    rbp
   1400361b7:	ret    
   1400361b8:	mov    eax,0x1
   1400361bd:	lock xadd DWORD PTR [rcx-0x138],eax
   1400361c5:	add    eax,0x1
   1400361c8:	ret    
   1400361c9:	int3   
   1400361ca:	int3   
   1400361cb:	int3   
   1400361cc:	mov    rax,QWORD PTR [rcx-0x100]
   1400361d3:	mov    rcx,QWORD PTR [rax+0x40]
   1400361d7:	xor    eax,eax
   1400361d9:	cmp    rcx,rax
   1400361dc:	je     0x1400361e2
   1400361de:	mov    rax,QWORD PTR [rcx+0x40]
   1400361e2:	mov    QWORD PTR [rdx],rax
   1400361e5:	neg    rax
   1400361e8:	sbb    eax,eax
   1400361ea:	not    eax
   1400361ec:	and    eax,0x80004005
   1400361f1:	ret    
   1400361f2:	int3   
   1400361f3:	int3   
   1400361f4:	mov    rax,rsp
   1400361f7:	push   rdi
   1400361f8:	sub    rsp,0x40
   1400361fc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036205:	mov    QWORD PTR [rax+0x8],rbx
   140036209:	mov    QWORD PTR [rax+0x10],rbp
   14003620d:	mov    QWORD PTR [rax+0x18],rsi
   140036211:	mov    rbp,r9
   140036214:	mov    rbx,r8
   140036217:	mov    rsi,rdx
   14003621a:	mov    rdi,rcx
   14003621d:	mov    rdx,QWORD PTR [rcx-0x108]
   140036224:	lea    rcx,[rax-0x20]
   140036228:	call   0x140021aec
   14003622d:	nop
   14003622e:	test   rbx,rbx
   140036231:	je     0x140036237
   140036233:	and    QWORD PTR [rbx],0x0
   140036237:	mov    r8,rsi
   14003623a:	lea    rdx,[rip+0x3a1c7]        # 0x140070408
   140036241:	mov    rcx,QWORD PTR [rdi-0x100]
   140036248:	call   0x14003eabc
   14003624d:	test   eax,eax
   14003624f:	jns    0x14003626b
   140036251:	cmp    DWORD PTR [rsp+0x30],0x0
   140036256:	je     0x140036264
   140036258:	mov    rdx,QWORD PTR [rsp+0x28]
   14003625d:	xor    ecx,ecx
   14003625f:	call   0x140020cc4
   140036264:	mov    eax,0x80004005
   140036269:	jmp    0x1400362c6
   14003626b:	mov    rax,QWORD PTR [rdi-0x100]
   140036272:	mov    rbx,QWORD PTR [rax+0x40]
   140036276:	lea    rdx,[rdi-0xe4]
   14003627d:	mov    rcx,rbp
   140036280:	call   QWORD PTR [rip+0x2e72a]        # 0x1400649b0
   140036286:	mov    rdx,QWORD PTR [rsp+0x70]
   14003628b:	mov    rcx,QWORD PTR [rbx+0x40]
   14003628f:	call   QWORD PTR [rip+0x2e8cb]        # 0x140064b60
   140036295:	mov    r11,QWORD PTR [rsp+0x78]
   14003629a:	and    DWORD PTR [r11+0x4],0x0
   14003629f:	mov    rax,QWORD PTR [rbx+0x40]
   1400362a3:	mov    QWORD PTR [r11+0x8],rax
   1400362a7:	and    QWORD PTR [r11+0x10],0x0
   1400362ac:	and    DWORD PTR [r11+0x18],0x0
   1400362b1:	cmp    DWORD PTR [rsp+0x30],0x0
   1400362b6:	je     0x1400362c4
   1400362b8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400362bd:	xor    ecx,ecx
   1400362bf:	call   0x140020cc4
   1400362c4:	xor    eax,eax
   1400362c6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400362cb:	mov    rbp,QWORD PTR [rsp+0x58]
   1400362d0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400362d5:	add    rsp,0x40
   1400362d9:	pop    rdi
   1400362da:	ret    
   1400362db:	int3   
   1400362dc:	int3   
   1400362dd:	int3   
   1400362de:	int3   
   1400362df:	int3   
   1400362e0:	int3   
   1400362e1:	int3   
   1400362e2:	int3   
   1400362e3:	int3   
   1400362e4:	rex push rbp
   1400362e6:	sub    rsp,0x20
   1400362ea:	mov    rbp,rdx
   1400362ed:	lea    rcx,[rbp+0x28]
   1400362f1:	call   0x1400236a8
   1400362f6:	add    rsp,0x20
   1400362fa:	pop    rbp
   1400362fb:	ret    
   1400362fc:	rex push rbx
   1400362fe:	sub    rsp,0x40
   140036302:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003630b:	lea    rbx,[rcx-0x140]
   140036312:	mov    rdx,QWORD PTR [rbx+0x38]
   140036316:	lea    rcx,[rsp+0x28]
   14003631b:	call   0x140021aec
   140036320:	nop
   140036321:	mov    rcx,rbx
   140036324:	call   0x140033d80
   140036329:	cmp    DWORD PTR [rbx+0xb4],0x0
   140036330:	je     0x14003635e
   140036332:	mov    rcx,QWORD PTR [rbx+0x98]
   140036339:	test   rcx,rcx
   14003633c:	je     0x14003634c
   14003633e:	mov    rax,QWORD PTR [rcx]
   140036341:	call   QWORD PTR [rax+0x10]
   140036344:	and    QWORD PTR [rbx+0x98],0x0
   14003634c:	mov    rax,QWORD PTR [rbx+0x40]
   140036350:	add    DWORD PTR [rax+0xe0],0xffffffff
   140036357:	and    DWORD PTR [rbx+0xb4],0x0
   14003635e:	cmp    DWORD PTR [rsp+0x30],0x0
   140036363:	je     0x140036371
   140036365:	mov    rdx,QWORD PTR [rsp+0x28]
   14003636a:	xor    ecx,ecx
   14003636c:	call   0x140020cc4
   140036371:	xor    eax,eax
   140036373:	add    rsp,0x40
   140036377:	pop    rbx
   140036378:	ret    
   140036379:	int3   
   14003637a:	int3   
   14003637b:	int3   
   14003637c:	rex push rbp
   14003637e:	sub    rsp,0x20
   140036382:	mov    rbp,rdx
   140036385:	lea    rcx,[rbp+0x28]
   140036389:	call   0x1400236a8
   14003638e:	add    rsp,0x20
   140036392:	pop    rbp
   140036393:	ret    
   140036394:	mov    QWORD PTR [rsp+0x8],rbx
   140036399:	push   rdi
   14003639a:	sub    rsp,0x40
   14003639e:	mov    rax,QWORD PTR [rcx-0x100]
   1400363a5:	mov    rdi,rdx
   1400363a8:	mov    rbx,rcx
   1400363ab:	test   rax,rax
   1400363ae:	je     0x140036414
   1400363b0:	mov    rcx,QWORD PTR [rax+0x40]
   1400363b4:	test   rcx,rcx
   1400363b7:	je     0x140036414
   1400363b9:	cmp    QWORD PTR [rbx-0xb8],0x0
   1400363c1:	jne    0x1400363c9
   1400363c3:	call   0x1400208f8
   1400363c8:	int3   
   1400363c9:	mov    rcx,QWORD PTR [rcx+0x40]
   1400363cd:	lea    rdx,[rsp+0x30]
   1400363d2:	call   QWORD PTR [rip+0x2e788]        # 0x140064b60
   1400363d8:	lea    rcx,[rsp+0x20]
   1400363dd:	mov    rdx,rdi
   1400363e0:	call   QWORD PTR [rip+0x2e5ca]        # 0x1400649b0
   1400363e6:	mov    rcx,QWORD PTR [rbx-0xb8]
   1400363ed:	lea    rdx,[rbx-0xe4]
   1400363f4:	movdqu xmm0,XMMWORD PTR [rsp+0x20]
   1400363fa:	movdqu XMMWORD PTR [rdx],xmm0
   1400363fe:	mov    rax,QWORD PTR [rcx]
   140036401:	lea    r8,[rsp+0x30]
   140036406:	call   QWORD PTR [rax+0x38]
   140036409:	mov    rbx,QWORD PTR [rsp+0x50]
   14003640e:	add    rsp,0x40
   140036412:	pop    rdi
   140036413:	ret    
   140036414:	call   0x1400208f8
   140036419:	int3   
   14003641a:	int3   
   14003641b:	int3   
   14003641c:	rex push rdi
   14003641e:	sub    rsp,0x40
   140036422:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003642b:	mov    QWORD PTR [rsp+0x50],rbx
   140036430:	mov    QWORD PTR [rsp+0x58],rsi
   140036435:	mov    ebx,r8d
   140036438:	mov    rdi,rdx
   14003643b:	mov    rsi,rcx
   14003643e:	mov    rdx,QWORD PTR [rcx-0x108]
   140036445:	lea    rcx,[rsp+0x28]
   14003644a:	call   0x140021aec
   14003644f:	nop
   140036450:	test   bl,0x1
   140036453:	je     0x140036487
   140036455:	mov    rcx,QWORD PTR [rsi-0xc0]
   14003645c:	mov    rax,QWORD PTR [rcx]
   14003645f:	lea    r8,[rsi-0xa8]
   140036466:	lea    rdx,[rip+0x3a07b]        # 0x1400704e8
   14003646d:	call   QWORD PTR [rax]
   14003646f:	mov    DWORD PTR [rsi-0x8c],0x1
   140036479:	mov    rax,QWORD PTR [rsi-0x100]
   140036480:	add    DWORD PTR [rax+0xe0],0x1
   140036487:	test   rdi,rdi
   14003648a:	je     0x14003648f
   14003648c:	and    DWORD PTR [rdi],0x0
   14003648f:	cmp    DWORD PTR [rsp+0x30],0x0
   140036494:	je     0x1400364a2
   140036496:	mov    rdx,QWORD PTR [rsp+0x28]
   14003649b:	xor    ecx,ecx
   14003649d:	call   0x140020cc4
   1400364a2:	xor    eax,eax
   1400364a4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400364a9:	mov    rsi,QWORD PTR [rsp+0x58]
   1400364ae:	add    rsp,0x40
   1400364b2:	pop    rdi
   1400364b3:	ret    
   1400364b4:	int3   
   1400364b5:	int3   
   1400364b6:	int3   
   1400364b7:	int3   
   1400364b8:	int3   
   1400364b9:	int3   
   1400364ba:	int3   
   1400364bb:	int3   
   1400364bc:	rex push rbp
   1400364be:	sub    rsp,0x20
   1400364c2:	mov    rbp,rdx
   1400364c5:	lea    rcx,[rbp+0x28]
   1400364c9:	call   0x1400236a8
   1400364ce:	add    rsp,0x20
   1400364d2:	pop    rbp
   1400364d3:	ret    
   1400364d4:	sub    rsp,0x38
   1400364d8:	mov    rdx,QWORD PTR [rcx-0x108]
   1400364df:	lea    rcx,[rsp+0x20]
   1400364e4:	call   0x140021aec
   1400364e9:	cmp    DWORD PTR [rsp+0x28],0x0
   1400364ee:	je     0x1400364fc
   1400364f0:	mov    rdx,QWORD PTR [rsp+0x20]
   1400364f5:	xor    ecx,ecx
   1400364f7:	call   0x140020cc4
   1400364fc:	xor    eax,eax
   1400364fe:	add    rsp,0x38
   140036502:	ret    
   140036503:	int3   
   140036504:	sub    rsp,0x38
   140036508:	mov    rdx,QWORD PTR [rcx-0x108]
   14003650f:	lea    rcx,[rsp+0x20]
   140036514:	call   0x140021aec
   140036519:	cmp    DWORD PTR [rsp+0x28],0x0
   14003651e:	je     0x14003652c
   140036520:	mov    rdx,QWORD PTR [rsp+0x20]
   140036525:	xor    ecx,ecx
   140036527:	call   0x140020cc4
   14003652c:	mov    eax,0x80004001
   140036531:	add    rsp,0x38
   140036535:	ret    
   140036536:	int3   
   140036537:	int3   
   140036538:	sub    rsp,0x38
   14003653c:	mov    rdx,QWORD PTR [rcx-0x108]
   140036543:	lea    rcx,[rsp+0x20]
   140036548:	call   0x140021aec
   14003654d:	cmp    DWORD PTR [rsp+0x28],0x0
   140036552:	je     0x140036560
   140036554:	mov    rdx,QWORD PTR [rsp+0x20]
   140036559:	xor    ecx,ecx
   14003655b:	call   0x140020cc4
   140036560:	xor    eax,eax
   140036562:	add    rsp,0x38
   140036566:	ret    
   140036567:	int3   
   140036568:	rex push rbx
   14003656a:	sub    rsp,0x40
   14003656e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036577:	lea    rbx,[rcx-0x140]
   14003657e:	mov    rdx,QWORD PTR [rbx+0x38]
   140036582:	lea    rcx,[rsp+0x28]
   140036587:	call   0x140021aec
   14003658c:	nop
   14003658d:	mov    rax,QWORD PTR [rbx+0x40]
   140036591:	cmp    QWORD PTR [rax+0xd0],rbx
   140036598:	jne    0x1400365b1
   14003659a:	cmp    DWORD PTR [rsp+0x30],0x0
   14003659f:	je     0x1400365ad
   1400365a1:	mov    rdx,QWORD PTR [rsp+0x28]
   1400365a6:	xor    ecx,ecx
   1400365a8:	call   0x140020cc4
   1400365ad:	xor    eax,eax
   1400365af:	jmp    0x1400365c9
   1400365b1:	cmp    DWORD PTR [rsp+0x30],0x0
   1400365b6:	je     0x1400365c4
   1400365b8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400365bd:	xor    ecx,ecx
   1400365bf:	call   0x140020cc4
   1400365c4:	mov    eax,0x1
   1400365c9:	add    rsp,0x40
   1400365cd:	pop    rbx
   1400365ce:	ret    
   1400365cf:	int3   
   1400365d0:	int3   
   1400365d1:	int3   
   1400365d2:	int3   
   1400365d3:	int3   
   1400365d4:	int3   
   1400365d5:	int3   
   1400365d6:	int3   
   1400365d7:	int3   
   1400365d8:	rex push rbp
   1400365da:	sub    rsp,0x20
   1400365de:	mov    rbp,rdx
   1400365e1:	lea    rcx,[rbp+0x28]
   1400365e5:	call   0x1400236a8
   1400365ea:	add    rsp,0x20
   1400365ee:	pop    rbp
   1400365ef:	ret    
   1400365f0:	sub    rsp,0x38
   1400365f4:	mov    rdx,QWORD PTR [rcx-0x108]
   1400365fb:	lea    rcx,[rsp+0x20]
   140036600:	call   0x140021aec
   140036605:	cmp    DWORD PTR [rsp+0x28],0x0
   14003660a:	je     0x140036618
   14003660c:	mov    rdx,QWORD PTR [rsp+0x20]
   140036611:	xor    ecx,ecx
   140036613:	call   0x140020cc4
   140036618:	mov    eax,0x80004001
   14003661d:	add    rsp,0x38
   140036621:	ret    
   140036622:	int3   
   140036623:	int3   
   140036624:	mov    QWORD PTR [rsp+0x8],rbx
   140036629:	mov    QWORD PTR [rsp+0x10],rsi
   14003662e:	push   rdi
   14003662f:	sub    rsp,0x40
   140036633:	mov    rdi,rdx
   140036636:	mov    rdx,QWORD PTR [rcx-0x108]
   14003663d:	mov    rbx,rcx
   140036640:	lea    rcx,[rsp+0x30]
   140036645:	mov    esi,r8d
   140036648:	call   0x140021aec
   14003664d:	test   rdi,rdi
   140036650:	jne    0x140036662
   140036652:	movdqu xmm0,XMMWORD PTR [rbx-0xe4]
   14003665a:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140036660:	jmp    0x140036685
   140036662:	lea    r8,[rbx-0xe4]
   140036669:	lea    rcx,[rsp+0x20]
   14003666e:	mov    rdx,rdi
   140036671:	call   QWORD PTR [rip+0x2e2d1]        # 0x140064948
   140036677:	lea    rcx,[rsp+0x20]
   14003667c:	mov    rdx,rdi
   14003667f:	call   QWORD PTR [rip+0x2e28b]        # 0x140064910
   140036685:	lea    rcx,[rsp+0x20]
   14003668a:	call   QWORD PTR [rip+0x2e3f0]        # 0x140064a80
   140036690:	test   eax,eax
   140036692:	jne    0x1400366b1
   140036694:	mov    rax,QWORD PTR [rbx-0x100]
   14003669b:	lea    rdx,[rsp+0x20]
   1400366a0:	mov    r8d,esi
   1400366a3:	mov    rcx,QWORD PTR [rax+0x40]
   1400366a7:	mov    rcx,QWORD PTR [rcx+0x40]
   1400366ab:	call   QWORD PTR [rip+0x2e3bf]        # 0x140064a70
   1400366b1:	cmp    DWORD PTR [rsp+0x38],0x0
   1400366b6:	je     0x1400366c4
   1400366b8:	mov    rdx,QWORD PTR [rsp+0x30]
   1400366bd:	xor    ecx,ecx
   1400366bf:	call   0x140020cc4
   1400366c4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400366c9:	mov    rsi,QWORD PTR [rsp+0x58]
   1400366ce:	xor    eax,eax
   1400366d0:	add    rsp,0x40
   1400366d4:	pop    rdi
   1400366d5:	ret    
   1400366d6:	int3   
   1400366d7:	int3   
   1400366d8:	sub    rsp,0x38
   1400366dc:	mov    rdx,QWORD PTR [rcx-0x108]
   1400366e3:	lea    rcx,[rsp+0x20]
   1400366e8:	call   0x140021aec
   1400366ed:	cmp    DWORD PTR [rsp+0x28],0x0
   1400366f2:	je     0x140036700
   1400366f4:	mov    rdx,QWORD PTR [rsp+0x20]
   1400366f9:	xor    ecx,ecx
   1400366fb:	call   0x140020cc4
   140036700:	mov    eax,0x80004001
   140036705:	add    rsp,0x38
   140036709:	ret    
   14003670a:	int3   
   14003670b:	int3   
   14003670c:	rex push rbx
   14003670e:	sub    rsp,0x30
   140036712:	mov    rdx,QWORD PTR [rcx-0x108]
   140036719:	mov    rbx,rcx
   14003671c:	lea    rcx,[rsp+0x20]
   140036721:	call   0x140021aec
   140036726:	mov    rax,QWORD PTR [rbx-0x100]
   14003672d:	mov    rdx,QWORD PTR [rbx-0x10]
   140036731:	mov    rcx,QWORD PTR [rax+0x40]
   140036735:	mov    rdx,QWORD PTR [rdx+0x8]
   140036739:	mov    rcx,QWORD PTR [rcx+0x40]
   14003673d:	call   QWORD PTR [rip+0x2e25d]        # 0x1400649a0
   140036743:	and    QWORD PTR [rbx-0x10],0x0
   140036748:	cmp    DWORD PTR [rsp+0x28],0x0
   14003674d:	je     0x14003675b
   14003674f:	mov    rdx,QWORD PTR [rsp+0x20]
   140036754:	xor    ecx,ecx
   140036756:	call   0x140020cc4
   14003675b:	xor    eax,eax
   14003675d:	add    rsp,0x30
   140036761:	pop    rbx
   140036762:	ret    
   140036763:	int3   
   140036764:	sub    rsp,0x38
   140036768:	mov    rdx,QWORD PTR [rcx-0x108]
   14003676f:	lea    rcx,[rsp+0x20]
   140036774:	call   0x140021aec
   140036779:	cmp    DWORD PTR [rsp+0x28],0x0
   14003677e:	je     0x14003678c
   140036780:	mov    rdx,QWORD PTR [rsp+0x20]
   140036785:	xor    ecx,ecx
   140036787:	call   0x140020cc4
   14003678c:	mov    eax,0x80004001
   140036791:	add    rsp,0x38
   140036795:	ret    
   140036796:	int3   
   140036797:	int3   
   140036798:	rex push rdi
   14003679a:	sub    rsp,0x40
   14003679e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400367a7:	mov    QWORD PTR [rsp+0x50],rbx
   1400367ac:	mov    ebx,edx
   1400367ae:	lea    rdi,[rcx-0x140]
   1400367b5:	mov    rdx,QWORD PTR [rdi+0x38]
   1400367b9:	lea    rcx,[rsp+0x28]
   1400367be:	call   0x140021aec
   1400367c3:	nop
   1400367c4:	test   ebx,ebx
   1400367c6:	je     0x1400367ef
   1400367c8:	mov    rax,QWORD PTR [rdi+0x40]
   1400367cc:	mov    rcx,QWORD PTR [rax+0x40]
   1400367d0:	mov    rcx,QWORD PTR [rcx+0x40]
   1400367d4:	call   QWORD PTR [rip+0x2dfee]        # 0x1400647c8
   1400367da:	mov    rcx,rax
   1400367dd:	call   0x1400256f0
   1400367e2:	mov    r11,QWORD PTR [rdi+0x40]
   1400367e6:	mov    QWORD PTR [r11+0xd0],rdi
   1400367ed:	jmp    0x140036802
   1400367ef:	mov    rax,QWORD PTR [rdi+0x40]
   1400367f3:	and    QWORD PTR [rax+0xd0],0x0
   1400367fb:	call   QWORD PTR [rip+0x2dfbf]        # 0x1400647c0
   140036801:	nop
   140036802:	cmp    DWORD PTR [rsp+0x30],0x0
   140036807:	je     0x140036815
   140036809:	mov    rdx,QWORD PTR [rsp+0x28]
   14003680e:	xor    ecx,ecx
   140036810:	call   0x140020cc4
   140036815:	xor    eax,eax
   140036817:	mov    rbx,QWORD PTR [rsp+0x50]
   14003681c:	add    rsp,0x40
   140036820:	pop    rdi
   140036821:	ret    
   140036822:	int3   
   140036823:	int3   
   140036824:	int3   
   140036825:	int3   
   140036826:	int3   
   140036827:	int3   
   140036828:	rex push rbp
   14003682a:	sub    rsp,0x20
   14003682e:	mov    rbp,rdx
   140036831:	lea    rcx,[rbp+0x28]
   140036835:	call   0x1400236a8
   14003683a:	add    rsp,0x20
   14003683e:	pop    rbp
   14003683f:	ret    
   140036840:	rex push rdi
   140036842:	sub    rsp,0x40
   140036846:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003684f:	mov    QWORD PTR [rsp+0x50],rbx
   140036854:	mov    ebx,edx
   140036856:	lea    rdi,[rcx-0x140]
   14003685d:	mov    rdx,QWORD PTR [rdi+0x38]
   140036861:	lea    rcx,[rsp+0x28]
   140036866:	call   0x140021aec
   14003686b:	nop
   14003686c:	test   ebx,ebx
   14003686e:	je     0x14003688a
   140036870:	mov    rax,QWORD PTR [rdi+0x40]
   140036874:	mov    QWORD PTR [rax+0xd8],rdi
   14003687b:	mov    rcx,QWORD PTR [rdi+0x40]
   14003687f:	mov    rcx,QWORD PTR [rcx+0x40]
   140036883:	call   0x140029b9c
   140036888:	jmp    0x140036896
   14003688a:	mov    rax,QWORD PTR [rdi+0x40]
   14003688e:	and    QWORD PTR [rax+0xd8],0x0
   140036896:	cmp    DWORD PTR [rsp+0x30],0x0
   14003689b:	je     0x1400368a9
   14003689d:	mov    rdx,QWORD PTR [rsp+0x28]
   1400368a2:	xor    ecx,ecx
   1400368a4:	call   0x140020cc4
   1400368a9:	xor    eax,eax
   1400368ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400368b0:	add    rsp,0x40
   1400368b4:	pop    rdi
   1400368b5:	ret    
   1400368b6:	int3   
   1400368b7:	int3   
   1400368b8:	int3   
   1400368b9:	int3   
   1400368ba:	int3   
   1400368bb:	int3   
   1400368bc:	int3   
   1400368bd:	int3   
   1400368be:	int3   
   1400368bf:	int3   
   1400368c0:	rex push rbp
   1400368c2:	sub    rsp,0x20
   1400368c6:	mov    rbp,rdx
   1400368c9:	lea    rcx,[rbp+0x28]
   1400368cd:	call   0x1400236a8
   1400368d2:	add    rsp,0x20
   1400368d6:	pop    rbp
   1400368d7:	ret    
   1400368d8:	mov    eax,0x1
   1400368dd:	lock xadd DWORD PTR [rcx-0x140],eax
   1400368e5:	add    eax,0x1
   1400368e8:	ret    
   1400368e9:	int3   
   1400368ea:	int3   
   1400368eb:	int3   
   1400368ec:	mov    rax,rsp
   1400368ef:	push   rsi
   1400368f0:	push   rdi
   1400368f1:	push   r12
   1400368f3:	sub    rsp,0x50
   1400368f7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036900:	mov    QWORD PTR [rax+0x10],rbx
   140036904:	mov    QWORD PTR [rax+0x18],rbp
   140036908:	mov    r12d,r9d
   14003690b:	mov    rbp,r8
   14003690e:	mov    rsi,rdx
   140036911:	mov    rbx,rcx
   140036914:	xor    edi,edi
   140036916:	lea    rcx,[rax-0x40]
   14003691a:	call   0x14002a948
   14003691f:	nop
   140036920:	mov    rcx,QWORD PTR [rbx-0x100]
   140036927:	call   QWORD PTR [rip+0x2e07b]        # 0x1400649a8
   14003692d:	mov    rdx,rax
   140036930:	lea    rcx,[rsp+0x28]
   140036935:	call   0x14002b108
   14003693a:	test   r12b,0x4
   14003693e:	je     0x1400369b0
   140036940:	mov    eax,DWORD PTR [rsi]
   140036942:	mov    DWORD PTR [rsp+0x70],eax
   140036946:	mov    eax,DWORD PTR [rsi+0x4]
   140036949:	mov    DWORD PTR [rsp+0x74],eax
   14003694d:	lea    rdx,[rsp+0x70]
   140036952:	lea    rcx,[rsp+0x28]
   140036957:	call   0x14002fe48
   14003695c:	test   r12b,0x2
   140036960:	je     0x14003698b
   140036962:	mov    ecx,DWORD PTR [rsp+0x70]
   140036966:	call   0x140048e80
   14003696b:	cvtsi2ss xmm0,eax
   14003696f:	movss  DWORD PTR [rbp+0x0],xmm0
   140036974:	mov    ecx,DWORD PTR [rsp+0x74]
   140036978:	call   0x140048e80
   14003697d:	cvtsi2ss xmm0,eax
   140036981:	movss  DWORD PTR [rbp+0x4],xmm0
   140036986:	jmp    0x140036a17
   14003698b:	test   r12b,0x1
   14003698f:	je     0x1400369a9
   140036991:	cvtsi2ss xmm0,DWORD PTR [rsp+0x70]
   140036997:	movss  DWORD PTR [rbp+0x0],xmm0
   14003699c:	cvtsi2ss xmm1,DWORD PTR [rsp+0x74]
   1400369a2:	movss  DWORD PTR [rbp+0x4],xmm1
   1400369a7:	jmp    0x140036a17
   1400369a9:	mov    edi,0x80070057
   1400369ae:	jmp    0x140036a17
   1400369b0:	test   r12b,0x8
   1400369b4:	je     0x140036a12
   1400369b6:	cvttss2si eax,DWORD PTR [rbp+0x0]
   1400369bb:	mov    DWORD PTR [rsp+0x70],eax
   1400369bf:	cvttss2si eax,DWORD PTR [rbp+0x4]
   1400369c4:	mov    DWORD PTR [rsp+0x74],eax
   1400369c8:	lea    rdx,[rsp+0x70]
   1400369cd:	lea    rcx,[rsp+0x28]
   1400369d2:	call   0x14002fd88
   1400369d7:	test   r12b,0x2
   1400369db:	je     0x1400369f6
   1400369dd:	mov    ecx,DWORD PTR [rsp+0x70]
   1400369e1:	call   0x140048e80
   1400369e6:	mov    DWORD PTR [rsi],eax
   1400369e8:	mov    ecx,DWORD PTR [rsp+0x74]
   1400369ec:	call   0x140048e80
   1400369f1:	mov    DWORD PTR [rsi+0x4],eax
   1400369f4:	jmp    0x140036a17
   1400369f6:	test   r12b,0x1
   1400369fa:	je     0x140036a0b
   1400369fc:	mov    eax,DWORD PTR [rsp+0x70]
   140036a00:	mov    DWORD PTR [rsi],eax
   140036a02:	mov    eax,DWORD PTR [rsp+0x74]
   140036a06:	mov    DWORD PTR [rsi+0x4],eax
   140036a09:	jmp    0x140036a17
   140036a0b:	mov    edi,0x80070057
   140036a10:	jmp    0x140036a17
   140036a12:	mov    edi,0x80070057
   140036a17:	lea    rcx,[rsp+0x28]
   140036a1c:	call   0x14002b1a4
   140036a21:	mov    eax,edi
   140036a23:	lea    r11,[rsp+0x50]
   140036a28:	mov    rbx,QWORD PTR [r11+0x28]
   140036a2c:	mov    rbp,QWORD PTR [r11+0x30]
   140036a30:	mov    rsp,r11
   140036a33:	pop    r12
   140036a35:	pop    rdi
   140036a36:	pop    rsi
   140036a37:	ret    
   140036a38:	int3   
   140036a39:	int3   
   140036a3a:	int3   
   140036a3b:	int3   
   140036a3c:	rex push rbp
   140036a3e:	sub    rsp,0x20
   140036a42:	mov    rbp,rdx
   140036a45:	lea    rcx,[rbp+0x28]
   140036a49:	call   0x14002b1a4
   140036a4e:	add    rsp,0x20
   140036a52:	pop    rbp
   140036a53:	ret    
   140036a54:	mov    eax,0x1
   140036a59:	lock xadd DWORD PTR [rcx-0x148],eax
   140036a61:	add    eax,0x1
   140036a64:	ret    
   140036a65:	int3   
   140036a66:	int3   
   140036a67:	int3   
   140036a68:	rex push rdi
   140036a6a:	sub    rsp,0x40
   140036a6e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036a77:	mov    QWORD PTR [rsp+0x50],rbx
   140036a7c:	mov    edi,edx
   140036a7e:	lea    rbx,[rcx-0x150]
   140036a85:	mov    rdx,QWORD PTR [rbx+0x38]
   140036a89:	lea    rcx,[rsp+0x28]
   140036a8e:	call   0x140021aec
   140036a93:	nop
   140036a94:	mov    rcx,QWORD PTR [rbx+0x40]
   140036a98:	xor    eax,eax
   140036a9a:	test   rcx,rcx
   140036a9d:	setne  al
   140036aa0:	test   eax,eax
   140036aa2:	jne    0x140036aaa
   140036aa4:	call   0x1400208f8
   140036aa9:	int3   
   140036aaa:	xor    eax,eax
   140036aac:	cmp    QWORD PTR [rcx+0x40],rax
   140036ab0:	setne  al
   140036ab3:	test   eax,eax
   140036ab5:	jne    0x140036abd
   140036ab7:	call   0x1400208f8
   140036abc:	int3   
   140036abd:	mov    rcx,QWORD PTR [rcx+0x40]
   140036ac1:	mov    rax,QWORD PTR [rcx]
   140036ac4:	mov    r9,QWORD PTR [rsp+0x80]
   140036acc:	mov    r8d,edi
   140036acf:	mov    rdx,rbx
   140036ad2:	call   QWORD PTR [rax+0x208]
   140036ad8:	neg    eax
   140036ada:	sbb    ebx,ebx
   140036adc:	not    ebx
   140036ade:	and    ebx,0x80020003
   140036ae4:	cmp    DWORD PTR [rsp+0x30],0x0
   140036ae9:	je     0x140036af7
   140036aeb:	mov    rdx,QWORD PTR [rsp+0x28]
   140036af0:	xor    ecx,ecx
   140036af2:	call   0x140020cc4
   140036af7:	mov    eax,ebx
   140036af9:	mov    rbx,QWORD PTR [rsp+0x50]
   140036afe:	add    rsp,0x40
   140036b02:	pop    rdi
   140036b03:	ret    
   140036b04:	int3   
   140036b05:	int3   
   140036b06:	int3   
   140036b07:	int3   
   140036b08:	rex push rbp
   140036b0a:	sub    rsp,0x20
   140036b0e:	mov    rbp,rdx
   140036b11:	lea    rcx,[rbp+0x28]
   140036b15:	call   0x1400236a8
   140036b1a:	add    rsp,0x20
   140036b1e:	pop    rbp
   140036b1f:	ret    
   140036b20:	mov    rax,rsp
   140036b23:	push   rbp
   140036b24:	push   rsi
   140036b25:	push   rdi
   140036b26:	sub    rsp,0xe0
   140036b2d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   140036b39:	mov    QWORD PTR [rax+0x10],rbx
   140036b3d:	mov    esi,edx
   140036b3f:	lea    rbx,[rcx-0x158]
   140036b46:	mov    rdx,QWORD PTR [rbx+0x38]
   140036b4a:	lea    rcx,[rsp+0x50]
   140036b4f:	call   0x140021aec
   140036b54:	nop
   140036b55:	xor    ebp,ebp
   140036b57:	cmp    DWORD PTR [rbx+0xd0],ebp
   140036b5d:	je     0x140036b78
   140036b5f:	cmp    DWORD PTR [rsp+0x58],ebp
   140036b63:	je     0x140036b71
   140036b65:	mov    rdx,QWORD PTR [rsp+0x50]
   140036b6a:	xor    ecx,ecx
   140036b6c:	call   0x140020cc4
   140036b71:	xor    eax,eax
   140036b73:	jmp    0x140036d53
   140036b78:	cmp    QWORD PTR [rbx+0xd8],rbp
   140036b7f:	jne    0x140036be2
   140036b81:	mov    DWORD PTR [rsp+0x60],0x2
   140036b89:	mov    DWORD PTR [rsp+0x64],esi
   140036b8d:	mov    QWORD PTR [rsp+0x68],rbp
   140036b92:	mov    QWORD PTR [rsp+0x70],rbp
   140036b97:	mov    QWORD PTR [rsp+0x78],rbp
   140036b9c:	mov    DWORD PTR [rsp+0x84],ebp
   140036ba3:	mov    DWORD PTR [rsp+0x88],ebp
   140036baa:	mov    DWORD PTR [rsp+0x8c],ebp
   140036bb1:	lea    rdx,[rsp+0x60]
   140036bb6:	mov    rcx,rbx
   140036bb9:	call   0x140033df0
   140036bbe:	mov    edi,DWORD PTR [rsp+0x84]
   140036bc5:	cmp    edi,ebp
   140036bc7:	je     0x140036be2
   140036bc9:	cmp    DWORD PTR [rsp+0x58],ebp
   140036bcd:	je     0x140036bdb
   140036bcf:	mov    rdx,QWORD PTR [rsp+0x50]
   140036bd4:	xor    ecx,ecx
   140036bd6:	call   0x140020cc4
   140036bdb:	mov    eax,edi
   140036bdd:	jmp    0x140036d53
   140036be2:	cmp    DWORD PTR [rbx+0xf0],esi
   140036be8:	jne    0x140036d3f
   140036bee:	lea    rdi,[rbx+0x108]
   140036bf5:	mov    rcx,rdi
   140036bf8:	call   QWORD PTR [rip+0x2daa2]        # 0x1400646a0
   140036bfe:	mov    QWORD PTR [rsp+0x110],rbp
   140036c06:	mov    rcx,QWORD PTR [rbx+0x80]
   140036c0d:	mov    eax,ebp
   140036c0f:	cmp    rcx,rbp
   140036c12:	setne  al
   140036c15:	cmp    eax,ebp
   140036c17:	jne    0x140036c1f
   140036c19:	call   0x1400208f8
   140036c1e:	int3   
   140036c1f:	mov    rax,QWORD PTR [rcx]
   140036c22:	lea    r8,[rsp+0x110]
   140036c2a:	lea    rdx,[rip+0x39797]        # 0x1400703c8
   140036c31:	call   QWORD PTR [rax]
   140036c33:	cmp    eax,ebp
   140036c35:	jge    0x140036c50
   140036c37:	cmp    DWORD PTR [rsp+0x58],ebp
   140036c3b:	je     0x140036c49
   140036c3d:	mov    rdx,QWORD PTR [rsp+0x50]
   140036c42:	xor    ecx,ecx
   140036c44:	call   0x140020cc4
   140036c49:	xor    eax,eax
   140036c4b:	jmp    0x140036d53
   140036c50:	xor    edx,edx
   140036c52:	lea    r8d,[rdx+0x40]
   140036c56:	lea    rcx,[rsp+0xa0]
   140036c5e:	call   0x140047720
   140036c63:	xor    edx,edx
   140036c65:	lea    r8d,[rdx+0x18]
   140036c69:	lea    rcx,[rsp+0x60]
   140036c6e:	call   0x140047720
   140036c73:	mov    r11d,ebp
   140036c76:	mov    rcx,QWORD PTR [rsp+0x110]
   140036c7e:	cmp    rcx,rbp
   140036c81:	setne  r11b
   140036c85:	cmp    r11d,ebp
   140036c88:	jne    0x140036c90
   140036c8a:	call   0x1400208f8
   140036c8f:	int3   
   140036c90:	mov    rax,QWORD PTR [rcx]
   140036c93:	lea    rdx,[rsp+0x100]
   140036c9b:	mov    QWORD PTR [rsp+0x40],rdx
   140036ca0:	lea    rdx,[rsp+0xa0]
   140036ca8:	mov    QWORD PTR [rsp+0x38],rdx
   140036cad:	mov    QWORD PTR [rsp+0x30],rdi
   140036cb2:	lea    rdx,[rsp+0x60]
   140036cb7:	mov    QWORD PTR [rsp+0x28],rdx
   140036cbc:	mov    WORD PTR [rsp+0x20],0x2
   140036cc3:	xor    r9d,r9d
   140036cc6:	lea    r8,[rip+0x396eb]        # 0x1400703b8
   140036ccd:	mov    edx,esi
   140036ccf:	call   QWORD PTR [rax+0x30]
   140036cd2:	mov    edi,eax
   140036cd4:	mov    rcx,QWORD PTR [rsp+0xa8]
   140036cdc:	cmp    rcx,rbp
   140036cdf:	je     0x140036ce7
   140036ce1:	call   QWORD PTR [rip+0x2d9a9]        # 0x140064690
   140036ce7:	mov    rcx,QWORD PTR [rsp+0xb0]
   140036cef:	cmp    rcx,rbp
   140036cf2:	je     0x140036cfa
   140036cf4:	call   QWORD PTR [rip+0x2d996]        # 0x140064690
   140036cfa:	mov    rcx,QWORD PTR [rsp+0xb8]
   140036d02:	cmp    rcx,rbp
   140036d05:	je     0x140036d0d
   140036d07:	call   QWORD PTR [rip+0x2d983]        # 0x140064690
   140036d0d:	mov    rcx,QWORD PTR [rsp+0x110]
   140036d15:	mov    rax,QWORD PTR [rcx]
   140036d18:	call   QWORD PTR [rax+0x10]
   140036d1b:	cmp    edi,ebp
   140036d1d:	jge    0x140036d35
   140036d1f:	cmp    DWORD PTR [rsp+0x58],ebp
   140036d23:	je     0x140036d31
   140036d25:	mov    rdx,QWORD PTR [rsp+0x50]
   140036d2a:	xor    ecx,ecx
   140036d2c:	call   0x140020cc4
   140036d31:	xor    eax,eax
   140036d33:	jmp    0x140036d53
   140036d35:	mov    DWORD PTR [rbx+0x100],0x1
   140036d3f:	cmp    DWORD PTR [rsp+0x58],ebp
   140036d43:	je     0x140036d51
   140036d45:	mov    rdx,QWORD PTR [rsp+0x50]
   140036d4a:	xor    ecx,ecx
   140036d4c:	call   0x140020cc4
   140036d51:	xor    eax,eax
   140036d53:	mov    rbx,QWORD PTR [rsp+0x108]
   140036d5b:	add    rsp,0xe0
   140036d62:	pop    rdi
   140036d63:	pop    rsi
   140036d64:	pop    rbp
   140036d65:	ret    
   140036d66:	int3   
   140036d67:	int3   
   140036d68:	int3   
   140036d69:	int3   
   140036d6a:	int3   
   140036d6b:	int3   
   140036d6c:	int3   
   140036d6d:	int3   
   140036d6e:	int3   
   140036d6f:	int3   
   140036d70:	rex push rbp
   140036d72:	sub    rsp,0x20
   140036d76:	mov    rbp,rdx
   140036d79:	lea    rcx,[rbp+0x50]
   140036d7d:	call   0x1400236a8
   140036d82:	add    rsp,0x20
   140036d86:	pop    rbp
   140036d87:	ret    
   140036d88:	mov    rax,rsp
   140036d8b:	push   rdi
   140036d8c:	sub    rsp,0x70
   140036d90:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036d99:	mov    QWORD PTR [rax+0x8],rbx
   140036d9d:	mov    edi,edx
   140036d9f:	lea    rbx,[rcx-0x158]
   140036da6:	mov    rdx,QWORD PTR [rbx+0x38]
   140036daa:	lea    rcx,[rax-0x50]
   140036dae:	call   0x140021aec
   140036db3:	nop
   140036db4:	cmp    DWORD PTR [rbx+0xd0],0x0
   140036dbb:	je     0x140036dd4
   140036dbd:	cmp    DWORD PTR [rsp+0x30],0x0
   140036dc2:	je     0x140036dd0
   140036dc4:	mov    rdx,QWORD PTR [rsp+0x28]
   140036dc9:	xor    ecx,ecx
   140036dcb:	call   0x140020cc4
   140036dd0:	xor    eax,eax
   140036dd2:	jmp    0x140036e4c
   140036dd4:	cmp    QWORD PTR [rbx+0xd8],0x0
   140036ddc:	jne    0x140036e37
   140036dde:	mov    DWORD PTR [rsp+0x38],0x1
   140036de6:	mov    DWORD PTR [rsp+0x3c],edi
   140036dea:	and    QWORD PTR [rsp+0x40],0x0
   140036df0:	and    QWORD PTR [rsp+0x48],0x0
   140036df6:	and    QWORD PTR [rsp+0x50],0x0
   140036dfc:	and    DWORD PTR [rsp+0x5c],0x0
   140036e01:	and    DWORD PTR [rsp+0x60],0x0
   140036e06:	and    DWORD PTR [rsp+0x64],0x0
   140036e0b:	lea    rdx,[rsp+0x38]
   140036e10:	mov    rcx,rbx
   140036e13:	call   0x140033df0
   140036e18:	mov    ebx,DWORD PTR [rsp+0x5c]
   140036e1c:	test   ebx,ebx
   140036e1e:	je     0x140036e37
   140036e20:	cmp    DWORD PTR [rsp+0x30],0x0
   140036e25:	je     0x140036e33
   140036e27:	mov    rdx,QWORD PTR [rsp+0x28]
   140036e2c:	xor    ecx,ecx
   140036e2e:	call   0x140020cc4
   140036e33:	mov    eax,ebx
   140036e35:	jmp    0x140036e4c
   140036e37:	cmp    DWORD PTR [rsp+0x30],0x0
   140036e3c:	je     0x140036e4a
   140036e3e:	mov    rdx,QWORD PTR [rsp+0x28]
   140036e43:	xor    ecx,ecx
   140036e45:	call   0x140020cc4
   140036e4a:	xor    eax,eax
   140036e4c:	mov    rbx,QWORD PTR [rsp+0x80]
   140036e54:	add    rsp,0x70
   140036e58:	pop    rdi
   140036e59:	ret    
   140036e5a:	int3   
   140036e5b:	int3   
   140036e5c:	int3   
   140036e5d:	int3   
   140036e5e:	int3   
   140036e5f:	int3   
   140036e60:	int3   
   140036e61:	int3   
   140036e62:	int3   
   140036e63:	int3   
   140036e64:	int3   
   140036e65:	int3   
   140036e66:	int3   
   140036e67:	int3   
   140036e68:	rex push rbp
   140036e6a:	sub    rsp,0x20
   140036e6e:	mov    rbp,rdx
   140036e71:	lea    rcx,[rbp+0x28]
   140036e75:	call   0x1400236a8
   140036e7a:	add    rsp,0x20
   140036e7e:	pop    rbp
   140036e7f:	ret    
   140036e80:	mov    rax,rsp
   140036e83:	push   rdi
   140036e84:	sub    rsp,0x70
   140036e88:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036e91:	mov    QWORD PTR [rax+0x8],rbx
   140036e95:	mov    ebx,edx
   140036e97:	lea    rdi,[rcx-0x160]
   140036e9e:	mov    rdx,QWORD PTR [rdi+0x38]
   140036ea2:	lea    rcx,[rax-0x50]
   140036ea6:	call   0x140021aec
   140036eab:	nop
   140036eac:	and    DWORD PTR [rsp+0x38],0x0
   140036eb1:	mov    DWORD PTR [rsp+0x3c],ebx
   140036eb5:	mov    rax,QWORD PTR [rsp+0xa8]
   140036ebd:	mov    QWORD PTR [rsp+0x40],rax
   140036ec2:	mov    rax,QWORD PTR [rsp+0xb8]
   140036eca:	mov    QWORD PTR [rsp+0x48],rax
   140036ecf:	mov    rax,QWORD PTR [rsp+0xc0]
   140036ed7:	mov    QWORD PTR [rsp+0x50],rax
   140036edc:	and    DWORD PTR [rsp+0x5c],0x0
   140036ee1:	and    DWORD PTR [rsp+0x60],0x0
   140036ee6:	and    DWORD PTR [rsp+0x64],0x0
   140036eeb:	lea    rdx,[rsp+0x38]
   140036ef0:	mov    rcx,rdi
   140036ef3:	call   0x140033df0
   140036ef8:	mov    rcx,QWORD PTR [rsp+0xb0]
   140036f00:	test   rcx,rcx
   140036f03:	je     0x140036f0b
   140036f05:	call   QWORD PTR [rip+0x2d795]        # 0x1400646a0
   140036f0b:	mov    ebx,DWORD PTR [rsp+0x5c]
   140036f0f:	cmp    DWORD PTR [rsp+0x30],0x0
   140036f14:	je     0x140036f22
   140036f16:	mov    rdx,QWORD PTR [rsp+0x28]
   140036f1b:	xor    ecx,ecx
   140036f1d:	call   0x140020cc4
   140036f22:	mov    eax,ebx
   140036f24:	mov    rbx,QWORD PTR [rsp+0x80]
   140036f2c:	add    rsp,0x70
   140036f30:	pop    rdi
   140036f31:	ret    
   140036f32:	int3   
   140036f33:	int3   
   140036f34:	int3   
   140036f35:	int3   
   140036f36:	int3   
   140036f37:	int3   
   140036f38:	int3   
   140036f39:	int3   
   140036f3a:	int3   
   140036f3b:	int3   
   140036f3c:	int3   
   140036f3d:	int3   
   140036f3e:	int3   
   140036f3f:	int3   
   140036f40:	rex push rbp
   140036f42:	sub    rsp,0x20
   140036f46:	mov    rbp,rdx
   140036f49:	lea    rcx,[rbp+0x28]
   140036f4d:	call   0x1400236a8
   140036f52:	add    rsp,0x20
   140036f56:	pop    rbp
   140036f57:	ret    
   140036f58:	mov    QWORD PTR [rsp+0x10],rbx
   140036f5d:	push   rdi
   140036f5e:	sub    rsp,0x20
   140036f62:	cmp    DWORD PTR [rcx+0xc],0x80010001
   140036f69:	mov    rdi,rcx
   140036f6c:	je     0x140037012
   140036f72:	mov    rcx,QWORD PTR [rcx]
   140036f75:	xor    ebx,ebx
   140036f77:	cmp    rcx,rbx
   140036f7a:	je     0x140037012
   140036f80:	cmp    QWORD PTR [rcx+0x80],rbx
   140036f87:	jne    0x140036f8f
   140036f89:	call   0x1400208f8
   140036f8e:	int3   
   140036f8f:	mov    rcx,QWORD PTR [rcx+0x80]
   140036f96:	lea    r8,[rsp+0x30]
   140036f9b:	lea    rdx,[rip+0x393c6]        # 0x140070368
   140036fa2:	mov    rax,QWORD PTR [rcx]
   140036fa5:	call   QWORD PTR [rax]
   140036fa7:	cmp    eax,ebx
   140036fa9:	jl     0x140036fd4
   140036fab:	mov    rcx,QWORD PTR [rsp+0x30]
   140036fb0:	cmp    QWORD PTR [rdi+0x10],rbx
   140036fb4:	mov    edx,DWORD PTR [rdi+0xc]
   140036fb7:	mov    rax,QWORD PTR [rcx]
   140036fba:	setne  bl
   140036fbd:	lea    r9,[rdi+0x18]
   140036fc1:	mov    r8d,ebx
   140036fc4:	call   QWORD PTR [rax+0x18]
   140036fc7:	mov    rcx,QWORD PTR [rsp+0x30]
   140036fcc:	mov    rax,QWORD PTR [rcx]
   140036fcf:	call   QWORD PTR [rax+0x10]
   140036fd2:	jmp    0x140037012
   140036fd4:	mov    rcx,rdi
   140036fd7:	call   0x140034b24
   140036fdc:	cmp    rax,rbx
   140036fdf:	je     0x140037012
   140036fe1:	mov    rcx,QWORD PTR [rdi+0x10]
   140036fe5:	mov    dx,0xd
   140036fe9:	mov    r8d,0x800d
   140036fef:	cmp    QWORD PTR [rcx+0xd8],rbx
   140036ff6:	mov    rcx,QWORD PTR [rdi]
   140036ff9:	mov    r9,rax
   140036ffc:	mov    r10,QWORD PTR [rcx]
   140036fff:	cmovne dx,r8w
   140037004:	movzx  r8d,dx
   140037008:	mov    edx,DWORD PTR [rdi+0xc]
   14003700b:	call   QWORD PTR [r10+0xe0]
   140037012:	mov    rbx,QWORD PTR [rsp+0x38]
   140037017:	add    rsp,0x20
   14003701b:	pop    rdi
   14003701c:	ret    
   14003701d:	int3   
   14003701e:	int3   
   14003701f:	int3   
   140037020:	rex push rbx
   140037022:	sub    rsp,0x40
   140037026:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003702f:	lea    rbx,[rcx-0x168]
   140037036:	mov    rdx,QWORD PTR [rbx+0x38]
   14003703a:	lea    rcx,[rsp+0x28]
   14003703f:	call   0x140021aec
   140037044:	nop
   140037045:	mov    rcx,rbx
   140037048:	call   0x14003e9e4
   14003704d:	mov    ebx,eax
   14003704f:	cmp    DWORD PTR [rsp+0x30],0x0
   140037054:	je     0x140037062
   140037056:	mov    rdx,QWORD PTR [rsp+0x28]
   14003705b:	xor    ecx,ecx
   14003705d:	call   0x140020cc4
   140037062:	mov    eax,ebx
   140037064:	add    rsp,0x40
   140037068:	pop    rbx
   140037069:	ret    
   14003706a:	int3   
   14003706b:	int3   
   14003706c:	int3   
   14003706d:	int3   
   14003706e:	int3   
   14003706f:	int3   
   140037070:	rex push rbp
   140037072:	sub    rsp,0x20
   140037076:	mov    rbp,rdx
   140037079:	lea    rcx,[rbp+0x28]
   14003707d:	call   0x1400236a8
   140037082:	add    rsp,0x20
   140037086:	pop    rbp
   140037087:	ret    
   140037088:	rex push rbx
   14003708a:	sub    rsp,0x40
   14003708e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140037097:	lea    rbx,[rcx-0x168]
   14003709e:	mov    rdx,QWORD PTR [rbx+0x38]
   1400370a2:	lea    rcx,[rsp+0x28]
   1400370a7:	call   0x140021aec
   1400370ac:	nop
   1400370ad:	mov    rcx,rbx
   1400370b0:	call   0x14003ea98
   1400370b5:	mov    ebx,eax
   1400370b7:	cmp    DWORD PTR [rsp+0x30],0x0
   1400370bc:	je     0x1400370ca
   1400370be:	mov    rdx,QWORD PTR [rsp+0x28]
   1400370c3:	xor    ecx,ecx
   1400370c5:	call   0x140020cc4
   1400370ca:	mov    eax,ebx
   1400370cc:	add    rsp,0x40
   1400370d0:	pop    rbx
   1400370d1:	ret    
   1400370d2:	int3   
   1400370d3:	int3   
   1400370d4:	int3   
   1400370d5:	int3   
   1400370d6:	int3   
   1400370d7:	int3   
   1400370d8:	rex push rbp
   1400370da:	sub    rsp,0x20
   1400370de:	mov    rbp,rdx
   1400370e1:	lea    rcx,[rbp+0x28]
   1400370e5:	call   0x1400236a8
   1400370ea:	add    rsp,0x20
   1400370ee:	pop    rbp
   1400370ef:	ret    
   1400370f0:	rex push rdi
   1400370f2:	sub    rsp,0x40
   1400370f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400370ff:	mov    QWORD PTR [rsp+0x50],rbx
   140037104:	mov    QWORD PTR [rsp+0x58],rsi
   140037109:	mov    rdi,r8
   14003710c:	mov    rsi,rdx
   14003710f:	lea    rbx,[rcx-0x168]
   140037116:	mov    rdx,QWORD PTR [rbx+0x38]
   14003711a:	lea    rcx,[rsp+0x28]
   14003711f:	call   0x140021aec
   140037124:	nop
   140037125:	mov    r8,rdi
   140037128:	mov    rdx,rsi
   14003712b:	mov    rcx,rbx
   14003712e:	call   0x14003eb14
   140037133:	mov    ebx,eax
   140037135:	cmp    DWORD PTR [rsp+0x30],0x0
   14003713a:	je     0x140037148
   14003713c:	mov    rdx,QWORD PTR [rsp+0x28]
   140037141:	xor    ecx,ecx
   140037143:	call   0x140020cc4
   140037148:	mov    eax,ebx
   14003714a:	mov    rbx,QWORD PTR [rsp+0x50]
   14003714f:	mov    rsi,QWORD PTR [rsp+0x58]
   140037154:	add    rsp,0x40
   140037158:	pop    rdi
   140037159:	ret    
   14003715a:	int3   
   14003715b:	int3   
   14003715c:	int3   
   14003715d:	int3   
   14003715e:	int3   
   14003715f:	int3   
   140037160:	rex push rbp
   140037162:	sub    rsp,0x20
   140037166:	mov    rbp,rdx
   140037169:	lea    rcx,[rbp+0x28]
   14003716d:	call   0x1400236a8
   140037172:	add    rsp,0x20
   140037176:	pop    rbp
   140037177:	ret    
   140037178:	mov    rax,rsp
   14003717b:	push   rdi
   14003717c:	sub    rsp,0x40
   140037180:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140037189:	mov    QWORD PTR [rax+0x8],rbx
   14003718d:	mov    QWORD PTR [rax+0x10],rbp
   140037191:	mov    QWORD PTR [rax+0x18],rsi
   140037195:	mov    rdi,r9
   140037198:	mov    rsi,r8
   14003719b:	mov    ebp,edx
   14003719d:	lea    rbx,[rcx-0x168]
   1400371a4:	mov    rdx,QWORD PTR [rbx+0x38]
   1400371a8:	lea    rcx,[rax-0x20]
   1400371ac:	call   0x140021aec
   1400371b1:	nop
   1400371b2:	mov    r9,rdi
   1400371b5:	mov    r8,rsi
   1400371b8:	mov    edx,ebp
   1400371ba:	mov    rcx,rbx
   1400371bd:	call   0x140034b78
   1400371c2:	mov    ebx,eax
   1400371c4:	cmp    DWORD PTR [rsp+0x30],0x0
   1400371c9:	je     0x1400371d7
   1400371cb:	mov    rdx,QWORD PTR [rsp+0x28]
   1400371d0:	xor    ecx,ecx
   1400371d2:	call   0x140020cc4
   1400371d7:	mov    eax,ebx
   1400371d9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400371de:	mov    rbp,QWORD PTR [rsp+0x58]
   1400371e3:	mov    rsi,QWORD PTR [rsp+0x60]
   1400371e8:	add    rsp,0x40
   1400371ec:	pop    rdi
   1400371ed:	ret    
   1400371ee:	int3   
   1400371ef:	int3   
   1400371f0:	int3   
   1400371f1:	int3   
   1400371f2:	int3   
   1400371f3:	int3   
   1400371f4:	int3   
   1400371f5:	int3   
   1400371f6:	int3   
   1400371f7:	int3   
   1400371f8:	rex push rbp
   1400371fa:	sub    rsp,0x20
   1400371fe:	mov    rbp,rdx
   140037201:	lea    rcx,[rbp+0x28]
   140037205:	call   0x1400236a8
   14003720a:	add    rsp,0x20
   14003720e:	pop    rbp
   14003720f:	ret    
   140037210:	sub    rsp,0x58
   140037214:	lea    r10,[rcx-0x170]
   14003721b:	mov    ecx,0x1
   140037220:	test   cl,dl
   140037222:	jne    0x140037229
   140037224:	test   dl,0x2
   140037227:	je     0x1400372a1
   140037229:	xor    r11d,r11d
   14003722c:	cmp    r8d,r11d
   14003722f:	mov    edx,r11d
   140037232:	jbe    0x1400372a1
   140037234:	mov    eax,DWORD PTR [r9]
   140037237:	cmp    eax,0x13
   14003723a:	ja     0x14003727b
   14003723c:	je     0x140037274
   14003723e:	cmp    eax,0x8
   140037241:	ja     0x14003725b
   140037243:	cmp    eax,0x6
   140037246:	jae    0x140037274
   140037248:	sub    eax,ecx
   14003724a:	je     0x1400372a8
   14003724c:	sub    eax,ecx
   14003724e:	je     0x1400372bd
   140037250:	cmp    eax,ecx
   140037252:	jne    0x140037296
   140037254:	mov    ecx,0x6
   140037259:	jmp    0x1400372c2
   14003725b:	cmp    eax,0x9
   14003725e:	jb     0x140037296
   140037260:	cmp    eax,0xa
   140037263:	jbe    0x140037254
   140037265:	cmp    eax,0xc
   140037268:	jbe    0x140037274
   14003726a:	cmp    eax,0xe
   14003726d:	jbe    0x140037296
   14003726f:	cmp    eax,0x10
   140037272:	ja     0x140037296
   140037274:	mov    ecx,0x7
   140037279:	jmp    0x1400372c2
   14003727b:	sub    eax,0x14
   14003727e:	je     0x1400372bd
   140037280:	sub    eax,ecx
   140037282:	je     0x140037274
   140037284:	sub    eax,0x2
   140037287:	je     0x140037254
   140037289:	sub    eax,ecx
   14003728b:	je     0x1400372b6
   14003728d:	sub    eax,ecx
   14003728f:	je     0x1400372c2
   140037291:	cmp    eax,0x6
   140037294:	je     0x1400372af
   140037296:	add    edx,ecx
   140037298:	add    r9,0x38
   14003729c:	cmp    edx,r8d
   14003729f:	jb     0x140037234
   1400372a1:	xor    eax,eax
   1400372a3:	add    rsp,0x58
   1400372a7:	ret    
   1400372a8:	mov    ecx,0x3
   1400372ad:	jmp    0x1400372c2
   1400372af:	mov    ecx,0x4
   1400372b4:	jmp    0x1400372c2
   1400372b6:	mov    ecx,0x2
   1400372bb:	jmp    0x1400372c2
   1400372bd:	mov    ecx,0x5
   1400372c2:	mov    eax,DWORD PTR [rsp+0x80]
   1400372c9:	or     DWORD PTR [rsp+0x24],0xffffffff
   1400372ce:	mov    DWORD PTR [rsp+0x4c],ecx
   1400372d2:	lea    rdx,[rsp+0x20]
   1400372d7:	mov    rcx,r10
   1400372da:	mov    DWORD PTR [rsp+0x48],eax
   1400372de:	mov    DWORD PTR [rsp+0x20],0x3
   1400372e6:	mov    QWORD PTR [rsp+0x28],r11
   1400372eb:	mov    QWORD PTR [rsp+0x30],r11
   1400372f0:	mov    QWORD PTR [rsp+0x38],r11
   1400372f5:	mov    DWORD PTR [rsp+0x44],r11d
   1400372fa:	call   0x140033df0
   1400372ff:	mov    eax,DWORD PTR [rsp+0x44]
   140037303:	jmp    0x1400372a3
   140037305:	int3   
   140037306:	int3   
   140037307:	int3   
   140037308:	rex push rbx
   14003730a:	sub    rsp,0x20
   14003730e:	mov    rbx,rcx
   140037311:	mov    rcx,QWORD PTR [rcx]
   140037314:	call   0x14001ac50
   140037319:	and    QWORD PTR [rbx],0x0
   14003731d:	add    rsp,0x20
   140037321:	pop    rbx
   140037322:	ret    
   140037323:	int3   
   140037324:	mov    QWORD PTR [rsp+0x8],rbx
   140037329:	mov    QWORD PTR [rsp+0x10],rbp
   14003732e:	mov    QWORD PTR [rsp+0x18],rsi
   140037333:	push   rdi
   140037334:	sub    rsp,0x20
   140037338:	mov    rax,QWORD PTR [rcx+0x10]
   14003733c:	xor    edx,edx
   14003733e:	xor    ebx,ebx
   140037340:	mov    ebp,DWORD PTR [rax+0x8]
   140037343:	mov    rsi,rcx
   140037346:	test   ebp,ebp
   140037348:	je     0x140037397
   14003734a:	xor    edi,edi
   14003734c:	mov    rax,QWORD PTR [rsi+0x10]
   140037350:	cmp    ebx,DWORD PTR [rax+0x8]
   140037353:	jae    0x14003738c
   140037355:	mov    rcx,QWORD PTR [rax]
   140037358:	test   rcx,rcx
   14003735b:	je     0x14003738c
   14003735d:	cmp    BYTE PTR [rdi+rcx*1+0x8],0x0
   140037362:	je     0x14003738c
   140037364:	cmp    ebx,DWORD PTR [rax+0x8]
   140037367:	mov    rcx,QWORD PTR [rsi]
   14003736a:	mov    r9,QWORD PTR [rax+0x10]
   14003736e:	jb     0x140037375
   140037370:	xor    r8d,r8d
   140037373:	jmp    0x14003737c
   140037375:	mov    rax,QWORD PTR [rax]
   140037378:	mov    r8,QWORD PTR [rdi+rax*1]
   14003737c:	mov    rax,QWORD PTR [rcx]
   14003737f:	mov    rdx,QWORD PTR [rsi+0x18]
   140037383:	call   QWORD PTR [rax+0x20]
   140037386:	test   eax,eax
   140037388:	mov    edx,eax
   14003738a:	js     0x140037399
   14003738c:	add    ebx,0x1
   14003738f:	add    rdi,0x10
   140037393:	cmp    ebx,ebp
   140037395:	jb     0x14003734c
   140037397:	mov    eax,edx
   140037399:	mov    rbx,QWORD PTR [rsp+0x30]
   14003739e:	mov    rbp,QWORD PTR [rsp+0x38]
   1400373a3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400373a8:	add    rsp,0x20
   1400373ac:	pop    rdi
   1400373ad:	ret    
   1400373ae:	int3   
   1400373af:	int3   
   1400373b0:	sub    rsp,0x28
   1400373b4:	mov    rcx,QWORD PTR [rcx]
   1400373b7:	test   rcx,rcx
   1400373ba:	je     0x1400373c2
   1400373bc:	mov    rax,QWORD PTR [rcx]
   1400373bf:	call   QWORD PTR [rax+0x10]
   1400373c2:	add    rsp,0x28
   1400373c6:	ret    
   1400373c7:	int3   
   1400373c8:	sub    rsp,0x28
   1400373cc:	mov    rcx,QWORD PTR [rcx]
   1400373cf:	test   rcx,rcx
   1400373d2:	je     0x1400373da
   1400373d4:	mov    rax,QWORD PTR [rcx]
   1400373d7:	call   QWORD PTR [rax+0x10]
   1400373da:	add    rsp,0x28
   1400373de:	ret    
   1400373df:	int3   
   1400373e0:	mov    r11,rsp
   1400373e3:	mov    QWORD PTR [r11+0x10],rbx
   1400373e7:	push   rbp
   1400373e8:	push   rsi
   1400373e9:	push   rdi
   1400373ea:	sub    rsp,0x30
   1400373ee:	and    QWORD PTR [r11+0x20],0x0
   1400373f3:	lea    rbx,[rcx+0x18]
   1400373f7:	mov    sil,r8b
   1400373fa:	cmp    QWORD PTR [rbx],0x0
   1400373fe:	movsxd rbp,edx
   140037401:	mov    rdi,rcx
   140037404:	je     0x140037427
   140037406:	mov    rcx,QWORD PTR [rcx]
   140037409:	and    QWORD PTR [r11-0x20],0x0
   14003740e:	and    QWORD PTR [r11-0x28],0x0
   140037413:	mov    rax,QWORD PTR [rcx]
   140037416:	xor    r9d,r9d
   140037419:	mov    r8,rbx
   14003741c:	lea    edx,[r9+0x1]
   140037420:	call   QWORD PTR [rax+0x30]
   140037423:	and    QWORD PTR [rbx],0x0
   140037427:	mov    rcx,QWORD PTR [rdi]
   14003742a:	lea    rdx,[rsp+0x50]
   14003742f:	mov    QWORD PTR [rsp+0x50],rbx
   140037434:	mov    rax,QWORD PTR [rcx]
   140037437:	mov    QWORD PTR [rsp+0x28],rdx
   14003743c:	lea    rdx,[rsp+0x68]
   140037441:	mov    QWORD PTR [rsp+0x20],rdx
   140037446:	neg    sil
   140037449:	mov    r8,rbp
   14003744c:	sbb    r9,r9
   14003744f:	xor    edx,edx
   140037451:	and    r9d,0x2
   140037455:	add    r9,0xffffffffffffffff
   140037459:	call   QWORD PTR [rax+0x28]
   14003745c:	test   eax,eax
   14003745e:	jne    0x14003749a
   140037460:	mov    rcx,rdi
   140037463:	call   0x140037324
   140037468:	test   eax,eax
   14003746a:	mov    esi,eax
   14003746c:	jns    0x140037498
   14003746e:	cmp    QWORD PTR [rbx],0x0
   140037472:	je     0x140037498
   140037474:	mov    rcx,QWORD PTR [rdi]
   140037477:	and    QWORD PTR [rsp+0x28],0x0
   14003747d:	and    QWORD PTR [rsp+0x20],0x0
   140037483:	mov    r10,QWORD PTR [rcx]
   140037486:	xor    r9d,r9d
   140037489:	mov    r8,rbx
   14003748c:	lea    edx,[r9+0x1]
   140037490:	call   QWORD PTR [r10+0x30]
   140037494:	and    QWORD PTR [rbx],0x0
   140037498:	mov    eax,esi
   14003749a:	mov    rbx,QWORD PTR [rsp+0x58]
   14003749f:	add    rsp,0x30
   1400374a3:	pop    rdi
   1400374a4:	pop    rsi
   1400374a5:	pop    rbp
   1400374a6:	ret    
   1400374a7:	int3   
   1400374a8:	xor    r9d,r9d
   1400374ab:	mov    r11,r8
   1400374ae:	mov    r10,rcx
   1400374b1:	cmp    r8,r9
   1400374b4:	je     0x1400374e0
   1400374b6:	cmp    BYTE PTR [rcx+0x38],r9b
   1400374ba:	je     0x1400374e8
   1400374bc:	cmp    QWORD PTR [rcx+0x18],r9
   1400374c0:	jbe    0x1400374e0
   1400374c2:	mov    r8,QWORD PTR [rcx+0x28]
   1400374c6:	lea    rcx,[r8+0x10]
   1400374ca:	cmp    QWORD PTR [rcx],rdx
   1400374cd:	je     0x1400374e3
   1400374cf:	add    r9d,0x1
   1400374d3:	add    rcx,0x50
   1400374d7:	mov    eax,r9d
   1400374da:	cmp    rax,QWORD PTR [r10+0x18]
   1400374de:	jb     0x1400374ca
   1400374e0:	xor    al,al
   1400374e2:	ret    
   1400374e3:	mov    edx,r9d
   1400374e6:	jmp    0x140037501
   1400374e8:	mov    r8,QWORD PTR [rcx+0x28]
   1400374ec:	mov    rax,QWORD PTR [rcx+0x18]
   1400374f0:	mov    r9,QWORD PTR [r8+0x10]
   1400374f4:	lea    rcx,[rax+r9*1-0x1]
   1400374f9:	cmp    rdx,rcx
   1400374fc:	ja     0x1400374e0
   1400374fe:	sub    rdx,r9
   140037501:	lea    rcx,[rdx+rdx*4]
   140037505:	mov    al,0x1
   140037507:	add    rcx,rcx
   14003750a:	mov    rdx,QWORD PTR [r8+rcx*8+0x8]
   14003750f:	add    rdx,QWORD PTR [r10+0x10]
   140037513:	mov    rcx,QWORD PTR [rdx]
   140037516:	mov    QWORD PTR [r11],rcx
   140037519:	mov    rcx,QWORD PTR [rdx+0x8]
   14003751d:	mov    QWORD PTR [r11+0x8],rcx
   140037521:	movzx  ecx,WORD PTR [rdx+0x10]
   140037525:	mov    WORD PTR [r11+0x10],cx
   14003752a:	mov    cl,BYTE PTR [rdx+0x12]
   14003752d:	mov    BYTE PTR [r11+0x12],cl
   140037531:	ret    
   140037532:	int3   
   140037533:	int3   
   140037534:	xor    r9d,r9d
   140037537:	mov    r11,r8
   14003753a:	mov    r10,rcx
   14003753d:	cmp    r8,r9
   140037540:	je     0x14003756c
   140037542:	cmp    BYTE PTR [rcx+0x38],r9b
   140037546:	je     0x140037574
   140037548:	cmp    QWORD PTR [rcx+0x18],r9
   14003754c:	jbe    0x14003756c
   14003754e:	mov    r8,QWORD PTR [rcx+0x28]
   140037552:	lea    rcx,[r8+0x10]
   140037556:	cmp    QWORD PTR [rcx],rdx
   140037559:	je     0x14003756f
   14003755b:	add    r9d,0x1
   14003755f:	add    rcx,0x50
   140037563:	mov    eax,r9d
   140037566:	cmp    rax,QWORD PTR [r10+0x18]
   14003756a:	jb     0x140037556
   14003756c:	xor    al,al
   14003756e:	ret    
   14003756f:	mov    edx,r9d
   140037572:	jmp    0x14003758d
   140037574:	mov    r8,QWORD PTR [rcx+0x28]
   140037578:	mov    rax,QWORD PTR [rcx+0x18]
   14003757c:	mov    r9,QWORD PTR [r8+0x10]
   140037580:	lea    rcx,[rax+r9*1-0x1]
   140037585:	cmp    rdx,rcx
   140037588:	ja     0x14003756c
   14003758a:	sub    rdx,r9
   14003758d:	lea    rcx,[rdx+rdx*4]
   140037591:	mov    al,0x1
   140037593:	add    rcx,rcx
   140037596:	mov    rdx,QWORD PTR [r8+rcx*8+0x8]
   14003759b:	add    rdx,QWORD PTR [r10+0x10]
   14003759f:	mov    ecx,DWORD PTR [rdx]
   1400375a1:	mov    DWORD PTR [r11],ecx
   1400375a4:	movzx  ecx,WORD PTR [rdx+0x4]
   1400375a8:	mov    WORD PTR [r11+0x4],cx
   1400375ad:	ret    
   1400375ae:	int3   
   1400375af:	int3   
   1400375b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400375b5:	xor    r9d,r9d
   1400375b8:	mov    rbx,r8
   1400375bb:	mov    r10,rcx
   1400375be:	cmp    r8,r9
   1400375c1:	je     0x1400375ed
   1400375c3:	cmp    BYTE PTR [rcx+0x38],r9b
   1400375c7:	je     0x1400375fa
   1400375c9:	cmp    QWORD PTR [rcx+0x18],r9
   1400375cd:	jbe    0x1400375ed
   1400375cf:	mov    r11,QWORD PTR [rcx+0x28]
   1400375d3:	lea    rcx,[r11+0x10]
   1400375d7:	cmp    QWORD PTR [rcx],rdx
   1400375da:	je     0x1400375f5
   1400375dc:	add    r9d,0x1
   1400375e0:	add    rcx,0x50
   1400375e4:	mov    eax,r9d
   1400375e7:	cmp    rax,QWORD PTR [r10+0x18]
   1400375eb:	jb     0x1400375d7
   1400375ed:	xor    al,al
   1400375ef:	mov    rbx,QWORD PTR [rsp+0x8]
   1400375f4:	ret    
   1400375f5:	mov    edx,r9d
   1400375f8:	jmp    0x140037613
   1400375fa:	mov    r11,QWORD PTR [rcx+0x28]
   1400375fe:	mov    rax,QWORD PTR [rcx+0x18]
   140037602:	mov    r8,QWORD PTR [r11+0x10]
   140037606:	lea    rcx,[rax+r8*1-0x1]
   14003760b:	cmp    rdx,rcx
   14003760e:	ja     0x1400375ed
   140037610:	sub    rdx,r8
   140037613:	lea    rcx,[rdx+rdx*4]
   140037617:	mov    al,0x1
   140037619:	add    rcx,rcx
   14003761c:	mov    rdx,QWORD PTR [r11+rcx*8+0x8]
   140037621:	add    rdx,QWORD PTR [r10+0x10]
   140037625:	movdqu xmm0,XMMWORD PTR [rdx]
   140037629:	movdqu XMMWORD PTR [rbx],xmm0
   14003762d:	jmp    0x1400375ef
   14003762f:	int3   
   140037630:	mov    QWORD PTR [rsp+0x8],rbx
   140037635:	mov    r9,rdx
   140037638:	xor    edx,edx
   14003763a:	mov    rbx,r8
   14003763d:	cmp    BYTE PTR [rcx+0x38],dl
   140037640:	mov    r10,rcx
   140037643:	je     0x140037674
   140037645:	cmp    QWORD PTR [rcx+0x18],rdx
   140037649:	jbe    0x140037667
   14003764b:	mov    r11,QWORD PTR [rcx+0x28]
   14003764f:	lea    rcx,[r11+0x10]
   140037653:	cmp    QWORD PTR [rcx],r9
   140037656:	je     0x14003766f
   140037658:	add    edx,0x1
   14003765b:	add    rcx,0x50
   14003765f:	mov    eax,edx
   140037661:	cmp    rax,QWORD PTR [r10+0x18]
   140037665:	jb     0x140037653
   140037667:	xor    al,al
   140037669:	mov    rbx,QWORD PTR [rsp+0x8]
   14003766e:	ret    
   14003766f:	mov    r9d,edx
   140037672:	jmp    0x14003768d
   140037674:	mov    r11,QWORD PTR [rcx+0x28]
   140037678:	mov    rcx,QWORD PTR [rcx+0x18]
   14003767c:	mov    r8,QWORD PTR [r11+0x10]
   140037680:	lea    rdx,[rcx+r8*1-0x1]
   140037685:	cmp    r9,rdx
   140037688:	ja     0x140037667
   14003768a:	sub    r9,r8
   14003768d:	mov    rdx,QWORD PTR [r10+0x10]
   140037691:	lea    rcx,[r9+r9*4]
   140037695:	mov    al,0x1
   140037697:	add    rcx,rcx
   14003769a:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   14003769f:	movzx  ecx,WORD PTR [rbx]
   1400376a2:	mov    WORD PTR [r8+rdx*1],cx
   1400376a7:	jmp    0x140037669
   1400376a9:	int3   
   1400376aa:	int3   
   1400376ab:	int3   
   1400376ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400376b1:	mov    r9,rdx
   1400376b4:	xor    edx,edx
   1400376b6:	mov    rbx,r8
   1400376b9:	cmp    BYTE PTR [rcx+0x38],dl
   1400376bc:	mov    r10,rcx
   1400376bf:	je     0x1400376f0
   1400376c1:	cmp    QWORD PTR [rcx+0x18],rdx
   1400376c5:	jbe    0x1400376e3
   1400376c7:	mov    r11,QWORD PTR [rcx+0x28]
   1400376cb:	lea    rcx,[r11+0x10]
   1400376cf:	cmp    QWORD PTR [rcx],r9
   1400376d2:	je     0x1400376eb
   1400376d4:	add    edx,0x1
   1400376d7:	add    rcx,0x50
   1400376db:	mov    eax,edx
   1400376dd:	cmp    rax,QWORD PTR [r10+0x18]
   1400376e1:	jb     0x1400376cf
   1400376e3:	xor    al,al
   1400376e5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400376ea:	ret    
   1400376eb:	mov    r9d,edx
   1400376ee:	jmp    0x140037709
   1400376f0:	mov    r11,QWORD PTR [rcx+0x28]
   1400376f4:	mov    rcx,QWORD PTR [rcx+0x18]
   1400376f8:	mov    r8,QWORD PTR [r11+0x10]
   1400376fc:	lea    rdx,[rcx+r8*1-0x1]
   140037701:	cmp    r9,rdx
   140037704:	ja     0x1400376e3
   140037706:	sub    r9,r8
   140037709:	mov    rdx,QWORD PTR [r10+0x10]
   14003770d:	lea    rcx,[r9+r9*4]
   140037711:	mov    al,0x1
   140037713:	add    rcx,rcx
   140037716:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   14003771b:	mov    ecx,DWORD PTR [rbx]
   14003771d:	mov    DWORD PTR [r8+rdx*1],ecx
   140037721:	jmp    0x1400376e5
   140037723:	int3   
   140037724:	mov    QWORD PTR [rsp+0x8],rbx
   140037729:	mov    r9,rdx
   14003772c:	xor    edx,edx
   14003772e:	mov    rbx,r8
   140037731:	cmp    BYTE PTR [rcx+0x38],dl
   140037734:	mov    r10,rcx
   140037737:	je     0x140037768
   140037739:	cmp    QWORD PTR [rcx+0x18],rdx
   14003773d:	jbe    0x14003775b
   14003773f:	mov    r11,QWORD PTR [rcx+0x28]
   140037743:	lea    rcx,[r11+0x10]
   140037747:	cmp    QWORD PTR [rcx],r9
   14003774a:	je     0x140037763
   14003774c:	add    edx,0x1
   14003774f:	add    rcx,0x50
   140037753:	mov    eax,edx
   140037755:	cmp    rax,QWORD PTR [r10+0x18]
   140037759:	jb     0x140037747
   14003775b:	xor    al,al
   14003775d:	mov    rbx,QWORD PTR [rsp+0x8]
   140037762:	ret    
   140037763:	mov    r9d,edx
   140037766:	jmp    0x140037781
   140037768:	mov    r11,QWORD PTR [rcx+0x28]
   14003776c:	mov    rcx,QWORD PTR [rcx+0x18]
   140037770:	mov    r8,QWORD PTR [r11+0x10]
   140037774:	lea    rdx,[rcx+r8*1-0x1]
   140037779:	cmp    r9,rdx
   14003777c:	ja     0x14003775b
   14003777e:	sub    r9,r8
   140037781:	mov    rdx,QWORD PTR [r10+0x10]
   140037785:	lea    rcx,[r9+r9*4]
   140037789:	mov    al,0x1
   14003778b:	add    rcx,rcx
   14003778e:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   140037793:	mov    ecx,DWORD PTR [rbx]
   140037795:	mov    DWORD PTR [r8+rdx*1],ecx
   140037799:	jmp    0x14003775d
   14003779b:	int3   
   14003779c:	mov    QWORD PTR [rsp+0x8],rbx
   1400377a1:	mov    r9,rdx
   1400377a4:	xor    edx,edx
   1400377a6:	mov    rbx,r8
   1400377a9:	cmp    BYTE PTR [rcx+0x38],dl
   1400377ac:	mov    r10,rcx
   1400377af:	je     0x1400377e0
   1400377b1:	cmp    QWORD PTR [rcx+0x18],rdx
   1400377b5:	jbe    0x1400377d3
   1400377b7:	mov    r11,QWORD PTR [rcx+0x28]
   1400377bb:	lea    rcx,[r11+0x10]
   1400377bf:	cmp    QWORD PTR [rcx],r9
   1400377c2:	je     0x1400377db
   1400377c4:	add    edx,0x1
   1400377c7:	add    rcx,0x50
   1400377cb:	mov    eax,edx
   1400377cd:	cmp    rax,QWORD PTR [r10+0x18]
   1400377d1:	jb     0x1400377bf
   1400377d3:	xor    al,al
   1400377d5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400377da:	ret    
   1400377db:	mov    r9d,edx
   1400377de:	jmp    0x1400377f9
   1400377e0:	mov    r11,QWORD PTR [rcx+0x28]
   1400377e4:	mov    rcx,QWORD PTR [rcx+0x18]
   1400377e8:	mov    r8,QWORD PTR [r11+0x10]
   1400377ec:	lea    rdx,[rcx+r8*1-0x1]
   1400377f1:	cmp    r9,rdx
   1400377f4:	ja     0x1400377d3
   1400377f6:	sub    r9,r8
   1400377f9:	mov    rdx,QWORD PTR [r10+0x10]
   1400377fd:	lea    rcx,[r9+r9*4]
   140037801:	mov    al,0x1
   140037803:	add    rcx,rcx
   140037806:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   14003780b:	mov    rcx,QWORD PTR [rbx]
   14003780e:	mov    QWORD PTR [r8+rdx*1],rcx
   140037812:	jmp    0x1400377d5
   140037814:	mov    QWORD PTR [rsp+0x8],rbx
   140037819:	mov    QWORD PTR [rsp+0x10],rdi
   14003781e:	xor    r9d,r9d
   140037821:	mov    rdi,r8
   140037824:	mov    r10,rdx
   140037827:	cmp    r8,r9
   14003782a:	mov    r11,rcx
   14003782d:	je     0x140037859
   14003782f:	cmp    BYTE PTR [rcx+0x38],r9b
   140037833:	je     0x14003786b
   140037835:	cmp    QWORD PTR [rcx+0x18],r9
   140037839:	jbe    0x140037859
   14003783b:	mov    rbx,QWORD PTR [rcx+0x28]
   14003783f:	lea    rcx,[rbx+0x10]
   140037843:	cmp    QWORD PTR [rcx],rdx
   140037846:	je     0x140037866
   140037848:	add    r9d,0x1
   14003784c:	add    rcx,0x50
   140037850:	mov    eax,r9d
   140037853:	cmp    rax,QWORD PTR [r11+0x18]
   140037857:	jb     0x140037843
   140037859:	xor    al,al
   14003785b:	mov    rbx,QWORD PTR [rsp+0x8]
   140037860:	mov    rdi,QWORD PTR [rsp+0x10]
   140037865:	ret    
   140037866:	mov    r10d,r9d
   140037869:	jmp    0x140037884
   14003786b:	mov    rbx,QWORD PTR [rcx+0x28]
   14003786f:	mov    rcx,QWORD PTR [rcx+0x18]
   140037873:	mov    r8,QWORD PTR [rbx+0x10]
   140037877:	lea    rdx,[rcx+r8*1-0x1]
   14003787c:	cmp    r10,rdx
   14003787f:	ja     0x140037859
   140037881:	sub    r10,r8
   140037884:	lea    rcx,[r10+r10*4]
   140037888:	mov    al,0x1
   14003788a:	add    rcx,rcx
   14003788d:	mov    rdx,QWORD PTR [rbx+rcx*8+0x8]
   140037892:	mov    rcx,QWORD PTR [r11+0x10]
   140037896:	mov    rdx,QWORD PTR [rdx+rcx*1]
   14003789a:	mov    QWORD PTR [rdi],rdx
   14003789d:	jmp    0x14003785b
   14003789f:	int3   
   1400378a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400378a5:	mov    r9,rdx
   1400378a8:	xor    edx,edx
   1400378aa:	mov    rbx,r8
   1400378ad:	cmp    BYTE PTR [rcx+0x38],dl
   1400378b0:	mov    r10,rcx
   1400378b3:	je     0x1400378e4
   1400378b5:	cmp    QWORD PTR [rcx+0x18],rdx
   1400378b9:	jbe    0x1400378d7
   1400378bb:	mov    r11,QWORD PTR [rcx+0x28]
   1400378bf:	lea    rcx,[r11+0x10]
   1400378c3:	cmp    QWORD PTR [rcx],r9
   1400378c6:	je     0x1400378df
   1400378c8:	add    edx,0x1
   1400378cb:	add    rcx,0x50
   1400378cf:	mov    eax,edx
   1400378d1:	cmp    rax,QWORD PTR [r10+0x18]
   1400378d5:	jb     0x1400378c3
   1400378d7:	xor    al,al
   1400378d9:	mov    rbx,QWORD PTR [rsp+0x8]
   1400378de:	ret    
   1400378df:	mov    r9d,edx
   1400378e2:	jmp    0x1400378fd
   1400378e4:	mov    r11,QWORD PTR [rcx+0x28]
   1400378e8:	mov    rcx,QWORD PTR [rcx+0x18]
   1400378ec:	mov    r8,QWORD PTR [r11+0x10]
   1400378f0:	lea    rdx,[rcx+r8*1-0x1]
   1400378f5:	cmp    r9,rdx
   1400378f8:	ja     0x1400378d7
   1400378fa:	sub    r9,r8
   1400378fd:	mov    rdx,QWORD PTR [r10+0x10]
   140037901:	lea    rcx,[r9+r9*4]
   140037905:	mov    al,0x1
   140037907:	add    rcx,rcx
   14003790a:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   14003790f:	mov    rcx,QWORD PTR [rbx]
   140037912:	mov    QWORD PTR [r8+rdx*1],rcx
   140037916:	jmp    0x1400378d9
   140037918:	mov    QWORD PTR [rsp+0x8],rbx
   14003791d:	mov    r9,rdx
   140037920:	xor    edx,edx
   140037922:	mov    rbx,r8
   140037925:	cmp    BYTE PTR [rcx+0x38],dl
   140037928:	mov    r10,rcx
   14003792b:	je     0x14003795c
   14003792d:	cmp    QWORD PTR [rcx+0x18],rdx
   140037931:	jbe    0x14003794f
   140037933:	mov    r11,QWORD PTR [rcx+0x28]
   140037937:	lea    rcx,[r11+0x10]
   14003793b:	cmp    QWORD PTR [rcx],r9
   14003793e:	je     0x140037957
   140037940:	add    edx,0x1
   140037943:	add    rcx,0x50
   140037947:	mov    eax,edx
   140037949:	cmp    rax,QWORD PTR [r10+0x18]
   14003794d:	jb     0x14003793b
   14003794f:	xor    al,al
   140037951:	mov    rbx,QWORD PTR [rsp+0x8]
   140037956:	ret    
   140037957:	mov    r9d,edx
   14003795a:	jmp    0x140037975
   14003795c:	mov    r11,QWORD PTR [rcx+0x28]
   140037960:	mov    rcx,QWORD PTR [rcx+0x18]
   140037964:	mov    r8,QWORD PTR [r11+0x10]
   140037968:	lea    rdx,[rcx+r8*1-0x1]
   14003796d:	cmp    r9,rdx
   140037970:	ja     0x14003794f
   140037972:	sub    r9,r8
   140037975:	movdqu xmm0,XMMWORD PTR [rbx]
   140037979:	lea    rcx,[r9+r9*4]
   14003797d:	mov    al,0x1
   14003797f:	add    rcx,rcx
   140037982:	mov    rdx,QWORD PTR [r11+rcx*8+0x8]
   140037987:	mov    rcx,QWORD PTR [r10+0x10]
   14003798b:	movdqu XMMWORD PTR [rdx+rcx*1],xmm0
   140037990:	jmp    0x140037951
   140037992:	int3   
   140037993:	int3   
   140037994:	mov    QWORD PTR [rsp+0x8],rbx
   140037999:	mov    r9,rdx
   14003799c:	xor    edx,edx
   14003799e:	mov    rbx,r8
   1400379a1:	cmp    BYTE PTR [rcx+0x38],dl
   1400379a4:	mov    r10,rcx
   1400379a7:	je     0x1400379d8
   1400379a9:	cmp    QWORD PTR [rcx+0x18],rdx
   1400379ad:	jbe    0x1400379cb
   1400379af:	mov    r11,QWORD PTR [rcx+0x28]
   1400379b3:	lea    rcx,[r11+0x10]
   1400379b7:	cmp    QWORD PTR [rcx],r9
   1400379ba:	je     0x1400379d3
   1400379bc:	add    edx,0x1
   1400379bf:	add    rcx,0x50
   1400379c3:	mov    eax,edx
   1400379c5:	cmp    rax,QWORD PTR [r10+0x18]
   1400379c9:	jb     0x1400379b7
   1400379cb:	xor    al,al
   1400379cd:	mov    rbx,QWORD PTR [rsp+0x8]
   1400379d2:	ret    
   1400379d3:	mov    r9d,edx
   1400379d6:	jmp    0x1400379f1
   1400379d8:	mov    r11,QWORD PTR [rcx+0x28]
   1400379dc:	mov    rcx,QWORD PTR [rcx+0x18]
   1400379e0:	mov    r8,QWORD PTR [r11+0x10]
   1400379e4:	lea    rdx,[rcx+r8*1-0x1]
   1400379e9:	cmp    r9,rdx
   1400379ec:	ja     0x1400379cb
   1400379ee:	sub    r9,r8
   1400379f1:	mov    rdx,QWORD PTR [r10+0x10]
   1400379f5:	lea    rcx,[r9+r9*4]
   1400379f9:	mov    al,0x1
   1400379fb:	add    rcx,rcx
   1400379fe:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   140037a03:	mov    cl,BYTE PTR [rbx]
   140037a05:	mov    BYTE PTR [r8+rdx*1],cl
   140037a09:	jmp    0x1400379cd
   140037a0b:	int3   
   140037a0c:	mov    QWORD PTR [rsp+0x8],rbx
   140037a11:	mov    r9,rdx
   140037a14:	xor    edx,edx
   140037a16:	mov    rbx,r8
   140037a19:	cmp    BYTE PTR [rcx+0x38],dl
   140037a1c:	mov    r10,rcx
   140037a1f:	je     0x140037a50
   140037a21:	cmp    QWORD PTR [rcx+0x18],rdx
   140037a25:	jbe    0x140037a43
   140037a27:	mov    r11,QWORD PTR [rcx+0x28]
   140037a2b:	lea    rcx,[r11+0x10]
   140037a2f:	cmp    QWORD PTR [rcx],r9
   140037a32:	je     0x140037a4b
   140037a34:	add    edx,0x1
   140037a37:	add    rcx,0x50
   140037a3b:	mov    eax,edx
   140037a3d:	cmp    rax,QWORD PTR [r10+0x18]
   140037a41:	jb     0x140037a2f
   140037a43:	xor    al,al
   140037a45:	mov    rbx,QWORD PTR [rsp+0x8]
   140037a4a:	ret    
   140037a4b:	mov    r9d,edx
   140037a4e:	jmp    0x140037a69
   140037a50:	mov    r11,QWORD PTR [rcx+0x28]
   140037a54:	mov    rcx,QWORD PTR [rcx+0x18]
   140037a58:	mov    r8,QWORD PTR [r11+0x10]
   140037a5c:	lea    rdx,[rcx+r8*1-0x1]
   140037a61:	cmp    r9,rdx
   140037a64:	ja     0x140037a43
   140037a66:	sub    r9,r8
   140037a69:	mov    rdx,QWORD PTR [r10+0x10]
   140037a6d:	lea    rcx,[r9+r9*4]
   140037a71:	mov    al,0x1
   140037a73:	add    rcx,rcx
   140037a76:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   140037a7b:	mov    cl,BYTE PTR [rbx]
   140037a7d:	mov    BYTE PTR [r8+rdx*1],cl
   140037a81:	jmp    0x140037a45
   140037a83:	int3   
   140037a84:	mov    QWORD PTR [rsp+0x8],rbx
   140037a89:	mov    r9,rdx
   140037a8c:	xor    edx,edx
   140037a8e:	mov    rbx,r8
   140037a91:	cmp    BYTE PTR [rcx+0x38],dl
   140037a94:	mov    r10,rcx
   140037a97:	je     0x140037ac8
   140037a99:	cmp    QWORD PTR [rcx+0x18],rdx
   140037a9d:	jbe    0x140037abb
   140037a9f:	mov    r11,QWORD PTR [rcx+0x28]
   140037aa3:	lea    rcx,[r11+0x10]
   140037aa7:	cmp    QWORD PTR [rcx],r9
   140037aaa:	je     0x140037ac3
   140037aac:	add    edx,0x1
   140037aaf:	add    rcx,0x50
   140037ab3:	mov    eax,edx
   140037ab5:	cmp    rax,QWORD PTR [r10+0x18]
   140037ab9:	jb     0x140037aa7
   140037abb:	xor    al,al
   140037abd:	mov    rbx,QWORD PTR [rsp+0x8]
   140037ac2:	ret    
   140037ac3:	mov    r9d,edx
   140037ac6:	jmp    0x140037ae1
   140037ac8:	mov    r11,QWORD PTR [rcx+0x28]
   140037acc:	mov    rcx,QWORD PTR [rcx+0x18]
   140037ad0:	mov    r8,QWORD PTR [r11+0x10]
   140037ad4:	lea    rdx,[rcx+r8*1-0x1]
   140037ad9:	cmp    r9,rdx
   140037adc:	ja     0x140037abb
   140037ade:	sub    r9,r8
   140037ae1:	mov    rdx,QWORD PTR [r10+0x10]
   140037ae5:	lea    rcx,[r9+r9*4]
   140037ae9:	mov    al,0x1
   140037aeb:	add    rcx,rcx
   140037aee:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   140037af3:	movzx  ecx,WORD PTR [rbx]
   140037af6:	mov    WORD PTR [r8+rdx*1],cx
   140037afb:	jmp    0x140037abd
   140037afd:	int3   
   140037afe:	int3   
   140037aff:	int3   
   140037b00:	mov    QWORD PTR [rsp+0x8],rbx
   140037b05:	mov    r9,rdx
   140037b08:	xor    edx,edx
   140037b0a:	mov    rbx,r8
   140037b0d:	cmp    BYTE PTR [rcx+0x38],dl
   140037b10:	mov    r10,rcx
   140037b13:	je     0x140037b44
   140037b15:	cmp    QWORD PTR [rcx+0x18],rdx
   140037b19:	jbe    0x140037b37
   140037b1b:	mov    r11,QWORD PTR [rcx+0x28]
   140037b1f:	lea    rcx,[r11+0x10]
   140037b23:	cmp    QWORD PTR [rcx],r9
   140037b26:	je     0x140037b3f
   140037b28:	add    edx,0x1
   140037b2b:	add    rcx,0x50
   140037b2f:	mov    eax,edx
   140037b31:	cmp    rax,QWORD PTR [r10+0x18]
   140037b35:	jb     0x140037b23
   140037b37:	xor    al,al
   140037b39:	mov    rbx,QWORD PTR [rsp+0x8]
   140037b3e:	ret    
   140037b3f:	mov    r9d,edx
   140037b42:	jmp    0x140037b5d
   140037b44:	mov    r11,QWORD PTR [rcx+0x28]
   140037b48:	mov    rcx,QWORD PTR [rcx+0x18]
   140037b4c:	mov    r8,QWORD PTR [r11+0x10]
   140037b50:	lea    rdx,[rcx+r8*1-0x1]
   140037b55:	cmp    r9,rdx
   140037b58:	ja     0x140037b37
   140037b5a:	sub    r9,r8
   140037b5d:	mov    rdx,QWORD PTR [r10+0x10]
   140037b61:	lea    rcx,[r9+r9*4]
   140037b65:	mov    al,0x1
   140037b67:	add    rcx,rcx
   140037b6a:	mov    r8,QWORD PTR [r11+rcx*8+0x8]
   140037b6f:	mov    ecx,DWORD PTR [rbx]
   140037b71:	mov    DWORD PTR [r8+rdx*1],ecx
   140037b75:	jmp    0x140037b39
   140037b77:	int3   
   140037b78:	mov    QWORD PTR [rsp+0x8],rbx
   140037b7d:	mov    QWORD PTR [rsp+0x18],rbp
   140037b82:	mov    QWORD PTR [rsp+0x20],rsi
   140037b87:	push   rdi
   140037b88:	sub    rsp,0x20
   140037b8c:	test   rdx,rdx
   140037b8f:	mov    r9,rdx
   140037b92:	mov    rbx,rcx
   140037b95:	jne    0x140037ba1
   140037b97:	mov    eax,0x80004005
   140037b9c:	jmp    0x140037c2f
   140037ba1:	xor    edi,edi
   140037ba3:	cmp    DWORD PTR [rcx+0x8],edi
   140037ba6:	jbe    0x140037c2d
   140037bac:	mov    rax,QWORD PTR [rdx]
   140037baf:	and    QWORD PTR [rsp+0x38],rdi
   140037bb4:	lea    r8,[rsp+0x38]
   140037bb9:	lea    rdx,[rip+0x34458]        # 0x14006c018
   140037bc0:	mov    rcx,r9
   140037bc3:	call   QWORD PTR [rax]
   140037bc5:	test   eax,eax
   140037bc7:	mov    edi,eax
   140037bc9:	js     0x140037c0d
   140037bcb:	cmp    QWORD PTR [rbx],0x0
   140037bcf:	jne    0x140037be3
   140037bd1:	mov    rcx,QWORD PTR [rsp+0x38]
   140037bd6:	test   rcx,rcx
   140037bd9:	je     0x140037b97
   140037bdb:	mov    rax,QWORD PTR [rcx]
   140037bde:	call   QWORD PTR [rax+0x10]
   140037be1:	jmp    0x140037b97
   140037be3:	xor    esi,esi
   140037be5:	cmp    DWORD PTR [rbx+0x8],esi
   140037be8:	jbe    0x140037c0d
   140037bea:	xor    ebp,ebp
   140037bec:	mov    rcx,QWORD PTR [rsp+0x38]
   140037bf1:	mov    rdx,QWORD PTR [rbx]
   140037bf4:	xor    r8d,r8d
   140037bf7:	mov    rax,QWORD PTR [rcx]
   140037bfa:	mov    rdx,QWORD PTR [rdx+rbp*1]
   140037bfe:	call   QWORD PTR [rax+0x30]
   140037c01:	add    esi,0x1
   140037c04:	add    rbp,0x10
   140037c08:	cmp    esi,DWORD PTR [rbx+0x8]
   140037c0b:	jb     0x140037bec
   140037c0d:	mov    rcx,QWORD PTR [rbx]
   140037c10:	and    DWORD PTR [rbx+0x8],0x0
   140037c14:	call   0x14001ac50
   140037c19:	mov    rcx,QWORD PTR [rsp+0x38]
   140037c1e:	and    QWORD PTR [rbx],0x0
   140037c22:	test   rcx,rcx
   140037c25:	je     0x140037c2d
   140037c27:	mov    rax,QWORD PTR [rcx]
   140037c2a:	call   QWORD PTR [rax+0x10]
   140037c2d:	mov    eax,edi
   140037c2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140037c34:	mov    rbp,QWORD PTR [rsp+0x40]
   140037c39:	mov    rsi,QWORD PTR [rsp+0x48]
   140037c3e:	add    rsp,0x20
   140037c42:	pop    rdi
   140037c43:	ret    
   140037c44:	sub    rsp,0x28
   140037c48:	xor    r9d,r9d
   140037c4b:	mov    r11,r8
   140037c4e:	mov    r10,rcx
   140037c51:	cmp    r8,r9
   140037c54:	jne    0x140037c61
   140037c56:	mov    ecx,0x80004005
   140037c5b:	call   0x140001430
   140037c60:	int3   
   140037c61:	cmp    BYTE PTR [rcx+0x38],r9b
   140037c65:	je     0x140037c97
   140037c67:	cmp    QWORD PTR [rcx+0x18],r9
   140037c6b:	jbe    0x140037c8b
   140037c6d:	mov    rcx,QWORD PTR [rcx+0x28]
   140037c71:	add    rcx,0x10
   140037c75:	cmp    QWORD PTR [rcx],rdx
   140037c78:	je     0x140037c92
   140037c7a:	add    r9d,0x1
   140037c7e:	add    rcx,0x50
   140037c82:	mov    eax,r9d
   140037c85:	cmp    rax,QWORD PTR [r10+0x18]
   140037c89:	jb     0x140037c75
   140037c8b:	xor    al,al
   140037c8d:	add    rsp,0x28
   140037c91:	ret    
   140037c92:	mov    edx,r9d
   140037c95:	jmp    0x140037cb0
   140037c97:	mov    rax,QWORD PTR [rcx+0x28]
   140037c9b:	mov    r8,QWORD PTR [rax+0x10]
   140037c9f:	mov    rax,QWORD PTR [rcx+0x18]
   140037ca3:	lea    rcx,[rax+r8*1-0x1]
   140037ca8:	cmp    rdx,rcx
   140037cab:	ja     0x140037c8b
   140037cad:	sub    rdx,r8
   140037cb0:	mov    rcx,QWORD PTR [r10+0x28]
   140037cb4:	lea    r8,[rdx+rdx*4]
   140037cb8:	mov    al,0x1
   140037cba:	add    r8,r8
   140037cbd:	mov    rdx,QWORD PTR [rcx+r8*8+0x20]
   140037cc2:	mov    rcx,QWORD PTR [rcx+r8*8+0x8]
   140037cc7:	lea    r8,[rdx+rcx*1+0x7]
   140037ccc:	mov    rcx,QWORD PTR [r10+0x10]
   140037cd0:	and    r8,0xfffffffffffffff8
   140037cd4:	add    r8,0x8
   140037cd8:	and    r8,0xfffffffffffffffc
   140037cdc:	mov    edx,DWORD PTR [r8+rcx*1]
   140037ce0:	mov    DWORD PTR [r11],edx
   140037ce3:	jmp    0x140037c8d
   140037ce5:	int3   
   140037ce6:	int3   
   140037ce7:	int3   
   140037ce8:	mov    QWORD PTR [rsp+0x8],rbx
   140037ced:	push   rdi
   140037cee:	sub    rsp,0x30
   140037cf2:	test   rdx,rdx
   140037cf5:	mov    r9,rdx
   140037cf8:	mov    rbx,rcx
   140037cfb:	jne    0x140037d07
   140037cfd:	mov    eax,0x80004005
   140037d02:	jmp    0x140037d8d
   140037d07:	mov    rax,QWORD PTR [rdx]
   140037d0a:	and    QWORD PTR [rsp+0x48],0x0
   140037d10:	lea    r8,[rsp+0x48]
   140037d15:	lea    rdx,[rip+0x342fc]        # 0x14006c018
   140037d1c:	mov    rcx,r9
   140037d1f:	call   QWORD PTR [rax]
   140037d21:	test   eax,eax
   140037d23:	mov    edi,eax
   140037d25:	jns    0x140037d3b
   140037d27:	mov    rcx,QWORD PTR [rsp+0x48]
   140037d2c:	test   rcx,rcx
   140037d2f:	je     0x140037d37
   140037d31:	mov    rdx,QWORD PTR [rcx]
   140037d34:	call   QWORD PTR [rdx+0x10]
   140037d37:	mov    eax,edi
   140037d39:	jmp    0x140037d8d
   140037d3b:	cmp    QWORD PTR [rbx],0x0
   140037d3f:	jne    0x140037d5b
   140037d41:	mov    edx,0x1
   140037d46:	mov    rcx,rbx
   140037d49:	call   0x140033170
   140037d4e:	test   eax,eax
   140037d50:	mov    edi,eax
   140037d52:	js     0x140037d27
   140037d54:	mov    rax,QWORD PTR [rbx]
   140037d57:	mov    BYTE PTR [rax+0x8],0x1
   140037d5b:	mov    rax,QWORD PTR [rsp+0x48]
   140037d60:	mov    r9,QWORD PTR [rbx+0x30]
   140037d64:	mov    r8,QWORD PTR [rbx]
   140037d67:	mov    rdx,QWORD PTR [rbx+0x20]
   140037d6b:	mov    rcx,QWORD PTR [rbx+0x18]
   140037d6f:	mov    QWORD PTR [rsp+0x20],rax
   140037d74:	call   0x140033208
   140037d79:	mov    rcx,QWORD PTR [rsp+0x48]
   140037d7e:	test   rcx,rcx
   140037d81:	mov    ebx,eax
   140037d83:	je     0x140037d8b
   140037d85:	mov    rdx,QWORD PTR [rcx]
   140037d88:	call   QWORD PTR [rdx+0x10]
   140037d8b:	mov    eax,ebx
   140037d8d:	mov    rbx,QWORD PTR [rsp+0x40]
   140037d92:	add    rsp,0x30
   140037d96:	pop    rdi
   140037d97:	ret    
   140037d98:	sub    rsp,0x68
   140037d9c:	xor    r8d,r8d
   140037d9f:	cmp    QWORD PTR [rcx+0x90],r8
   140037da6:	je     0x140037dc5
   140037da8:	mov    rcx,QWORD PTR [rcx+0xa0]
   140037daf:	cmp    rcx,r8
   140037db2:	jne    0x140037db8
   140037db4:	xor    eax,eax
   140037db6:	jmp    0x140037e1a
   140037db8:	cmp    QWORD PTR [rcx+0x18],r8
   140037dbc:	je     0x140037db4
   140037dbe:	call   0x140037324
   140037dc3:	jmp    0x140037e1a
   140037dc5:	cmp    QWORD PTR [rcx+0x70],r8
   140037dc9:	je     0x140037db4
   140037dcb:	mov    rax,QWORD PTR [rcx+0x80]
   140037dd2:	mov    rcx,QWORD PTR [rcx+0x10]
   140037dd6:	mov    QWORD PTR [rsp+0x48],r8
   140037ddb:	mov    QWORD PTR [rsp+0x50],r8
   140037de0:	mov    DWORD PTR [rsp+0x38],r8d
   140037de5:	mov    DWORD PTR [rsp+0x70],r8d
   140037dea:	mov    DWORD PTR [rsp+0x74],r8d
   140037def:	mov    r9,QWORD PTR [rsp+0x70]
   140037df4:	mov    edx,0x1
   140037df9:	lea    r8,[rsp+0x30]
   140037dfe:	mov    QWORD PTR [rsp+0x40],rax
   140037e03:	mov    QWORD PTR [rsp+0x30],rdx
   140037e08:	mov    rax,QWORD PTR [rcx]
   140037e0b:	mov    QWORD PTR [rsp+0x20],r8
   140037e10:	lea    r8,[rip+0x38ca1]        # 0x140070ab8
   140037e17:	call   QWORD PTR [rax+0x40]
   140037e1a:	add    rsp,0x68
   140037e1e:	ret    
   140037e1f:	int3   
   140037e20:	sub    rsp,0x28
   140037e24:	cmp    QWORD PTR [rcx+0x10],rdx
   140037e28:	je     0x140037e33
   140037e2a:	mov    QWORD PTR [rcx+0x10],rdx
   140037e2e:	call   0x140036f58
   140037e33:	add    rsp,0x28
   140037e37:	ret    
   140037e38:	mov    rax,rsp
   140037e3b:	push   rdi
   140037e3c:	sub    rsp,0x50
   140037e40:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140037e49:	mov    QWORD PTR [rax+0x8],rbx
   140037e4d:	mov    QWORD PTR [rax+0x10],rbp
   140037e51:	mov    QWORD PTR [rax+0x18],rsi
   140037e55:	mov    rsi,r9
   140037e58:	mov    ebx,r8d
   140037e5b:	mov    edi,edx
   140037e5d:	mov    rbp,rcx
   140037e60:	mov    rdx,QWORD PTR [rcx-0x138]
   140037e67:	lea    rcx,[rax-0x20]
   140037e6b:	call   0x140021aec
   140037e70:	nop
   140037e71:	mov    DWORD PTR [rsp+0x20],0x1
   140037e79:	mov    r9,rsi
   140037e7c:	mov    r8d,ebx
   140037e7f:	mov    edx,edi
   140037e81:	mov    rcx,rbp
   140037e84:	call   0x140037210
   140037e89:	mov    ebx,eax
   140037e8b:	test   eax,eax
   140037e8d:	jns    0x140037ea9
   140037e8f:	cmp    DWORD PTR [rsp+0x40],0x0
   140037e94:	je     0x140037ea2
   140037e96:	mov    rdx,QWORD PTR [rsp+0x38]
   140037e9b:	xor    ecx,ecx
   140037e9d:	call   0x140020cc4
   140037ea2:	mov    eax,ebx
   140037ea4:	jmp    0x140037f53
   140037ea9:	cmp    DWORD PTR [rsi],0x1e
   140037eac:	je     0x140037f3e
   140037eb2:	cmp    DWORD PTR [rsi],0x2
   140037eb5:	je     0x140037f3e
   140037ebb:	cmp    DWORD PTR [rsi],0x3
   140037ebe:	je     0x140037f3e
   140037ec0:	and    edi,0x1
   140037ec3:	jne    0x140037ee5
   140037ec5:	cmp    DWORD PTR [rsi],0x1
   140037ec8:	je     0x140037ee5
   140037eca:	cmp    DWORD PTR [rsi],0x14
   140037ecd:	je     0x140037ee5
   140037ecf:	cmp    DWORD PTR [rsp+0x40],edi
   140037ed3:	je     0x140037ee1
   140037ed5:	mov    rdx,QWORD PTR [rsp+0x38]
   140037eda:	xor    ecx,ecx
   140037edc:	call   0x140020cc4
   140037ee1:	xor    eax,eax
   140037ee3:	jmp    0x140037f53
   140037ee5:	mov    rcx,QWORD PTR [rbp-0x98]
   140037eec:	test   rcx,rcx
   140037eef:	jne    0x140037f05
   140037ef1:	cmp    DWORD PTR [rsp+0x40],ecx
   140037ef5:	je     0x140037f01
   140037ef7:	mov    rdx,QWORD PTR [rsp+0x38]
   140037efc:	call   0x140020cc4
   140037f01:	xor    eax,eax
   140037f03:	jmp    0x140037f53
   140037f05:	test   edi,edi
   140037f07:	jne    0x140037f1f
   140037f09:	cmp    DWORD PTR [rsp+0x40],edi
   140037f0d:	je     0x140037f1b
   140037f0f:	mov    rdx,QWORD PTR [rsp+0x38]
   140037f14:	xor    ecx,ecx
   140037f16:	call   0x140020cc4
   140037f1b:	xor    eax,eax
   140037f1d:	jmp    0x140037f53
   140037f1f:	mov    rax,QWORD PTR [rcx]
   140037f22:	call   QWORD PTR [rax+0x28]
   140037f25:	mov    ebx,eax
   140037f27:	cmp    DWORD PTR [rsp+0x40],0x0
   140037f2c:	je     0x140037f3a
   140037f2e:	mov    rdx,QWORD PTR [rsp+0x38]
   140037f33:	xor    ecx,ecx
   140037f35:	call   0x140020cc4
   140037f3a:	mov    eax,ebx
   140037f3c:	jmp    0x140037f53
   140037f3e:	cmp    DWORD PTR [rsp+0x40],0x0
   140037f43:	je     0x140037f51
   140037f45:	mov    rdx,QWORD PTR [rsp+0x38]
   140037f4a:	xor    ecx,ecx
   140037f4c:	call   0x140020cc4
   140037f51:	xor    eax,eax
   140037f53:	mov    rbx,QWORD PTR [rsp+0x60]
   140037f58:	mov    rbp,QWORD PTR [rsp+0x68]
   140037f5d:	mov    rsi,QWORD PTR [rsp+0x70]
   140037f62:	add    rsp,0x50
   140037f66:	pop    rdi
   140037f67:	ret    
   140037f68:	rex push rbp
   140037f6a:	sub    rsp,0x20
   140037f6e:	mov    rbp,rdx
   140037f71:	lea    rcx,[rbp+0x38]
   140037f75:	call   0x1400236a8
   140037f7a:	add    rsp,0x20
   140037f7e:	pop    rbp
   140037f7f:	ret    
   140037f80:	mov    rax,rsp
   140037f83:	push   rdi
   140037f84:	sub    rsp,0x50
   140037f88:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140037f91:	mov    QWORD PTR [rax+0x8],rbx
   140037f95:	mov    QWORD PTR [rax+0x10],rbp
   140037f99:	mov    QWORD PTR [rax+0x18],rsi
   140037f9d:	mov    rbx,r9
   140037fa0:	mov    edi,r8d
   140037fa3:	mov    esi,edx
   140037fa5:	mov    rbp,rcx
   140037fa8:	mov    rdx,QWORD PTR [rcx-0x138]
   140037faf:	lea    rcx,[rax-0x20]
   140037fb3:	call   0x140021aec
   140037fb8:	nop
   140037fb9:	mov    DWORD PTR [rsp+0x20],0x2
   140037fc1:	mov    r9,rbx
   140037fc4:	mov    r8d,edi
   140037fc7:	mov    edx,esi
   140037fc9:	mov    rcx,rbp
   140037fcc:	call   0x140037210
   140037fd1:	mov    ebx,eax
   140037fd3:	test   eax,eax
   140037fd5:	jns    0x140037fee
   140037fd7:	cmp    DWORD PTR [rsp+0x40],0x0
   140037fdc:	je     0x140037fea
   140037fde:	mov    rdx,QWORD PTR [rsp+0x38]
   140037fe3:	xor    ecx,ecx
   140037fe5:	call   0x140020cc4
   140037fea:	mov    eax,ebx
   140037fec:	jmp    0x140038003
   140037fee:	cmp    DWORD PTR [rsp+0x40],0x0
   140037ff3:	je     0x140038001
   140037ff5:	mov    rdx,QWORD PTR [rsp+0x38]
   140037ffa:	xor    ecx,ecx
   140037ffc:	call   0x140020cc4
   140038001:	xor    eax,eax
   140038003:	mov    rbx,QWORD PTR [rsp+0x60]
   140038008:	mov    rbp,QWORD PTR [rsp+0x68]
   14003800d:	mov    rsi,QWORD PTR [rsp+0x70]
   140038012:	add    rsp,0x50
   140038016:	pop    rdi
   140038017:	ret    
   140038018:	int3   
   140038019:	int3   
   14003801a:	int3   
   14003801b:	int3   
   14003801c:	int3   
   14003801d:	int3   
   14003801e:	int3   
   14003801f:	int3   
   140038020:	rex push rbp
   140038022:	sub    rsp,0x20
   140038026:	mov    rbp,rdx
   140038029:	lea    rcx,[rbp+0x38]
   14003802d:	call   0x1400236a8
   140038032:	add    rsp,0x20
   140038036:	pop    rbp
   140038037:	ret    
   140038038:	mov    rax,rsp
   14003803b:	push   rdi
   14003803c:	sub    rsp,0x50
   140038040:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140038049:	mov    QWORD PTR [rax+0x8],rbx
   14003804d:	mov    QWORD PTR [rax+0x10],rbp
   140038051:	mov    QWORD PTR [rax+0x18],rsi
   140038055:	mov    rsi,r9
   140038058:	mov    ebx,r8d
   14003805b:	mov    ebp,edx
   14003805d:	mov    rdi,rcx
   140038060:	mov    rdx,QWORD PTR [rcx-0x138]
   140038067:	lea    rcx,[rax-0x20]
   14003806b:	call   0x140021aec
   140038070:	nop
   140038071:	mov    DWORD PTR [rsp+0x20],0x3
   140038079:	mov    r9,rsi
   14003807c:	mov    r8d,ebx
   14003807f:	mov    edx,ebp
   140038081:	mov    rcx,rdi
   140038084:	call   0x140037210
   140038089:	mov    ebx,eax
   14003808b:	test   eax,eax
   14003808d:	jns    0x1400380a6
   14003808f:	cmp    DWORD PTR [rsp+0x40],0x0
   140038094:	je     0x1400380a2
   140038096:	mov    rdx,QWORD PTR [rsp+0x38]
   14003809b:	xor    ecx,ecx
   14003809d:	call   0x140020cc4
   1400380a2:	mov    eax,ebx
   1400380a4:	jmp    0x14003810d
   1400380a6:	cmp    DWORD PTR [rsi],0x2
   1400380a9:	je     0x1400380cc
   1400380ab:	cmp    DWORD PTR [rsi],0x3
   1400380ae:	je     0x1400380cc
   1400380b0:	cmp    DWORD PTR [rsi],0x14
   1400380b3:	je     0x1400380cc
   1400380b5:	cmp    DWORD PTR [rsp+0x40],0x0
   1400380ba:	je     0x1400380c8
   1400380bc:	mov    rdx,QWORD PTR [rsp+0x38]
   1400380c1:	xor    ecx,ecx
   1400380c3:	call   0x140020cc4
   1400380c8:	xor    eax,eax
   1400380ca:	jmp    0x14003810d
   1400380cc:	mov    rcx,QWORD PTR [rdi-0x98]
   1400380d3:	test   rcx,rcx
   1400380d6:	jne    0x1400380ec
   1400380d8:	cmp    DWORD PTR [rsp+0x40],ecx
   1400380dc:	je     0x1400380e8
   1400380de:	mov    rdx,QWORD PTR [rsp+0x38]
   1400380e3:	call   0x140020cc4
   1400380e8:	xor    eax,eax
   1400380ea:	jmp    0x14003810d
   1400380ec:	test   bpl,bpl
   1400380ef:	jns    0x1400380f8
   1400380f1:	mov    rax,QWORD PTR [rcx]
   1400380f4:	call   QWORD PTR [rax+0x28]
   1400380f7:	nop
   1400380f8:	cmp    DWORD PTR [rsp+0x40],0x0
   1400380fd:	je     0x14003810b
   1400380ff:	mov    rdx,QWORD PTR [rsp+0x38]
   140038104:	xor    ecx,ecx
   140038106:	call   0x140020cc4
   14003810b:	xor    eax,eax
   14003810d:	mov    rbx,QWORD PTR [rsp+0x60]
   140038112:	mov    rbp,QWORD PTR [rsp+0x68]
   140038117:	mov    rsi,QWORD PTR [rsp+0x70]
   14003811c:	add    rsp,0x50
   140038120:	pop    rdi
   140038121:	ret    
   140038122:	int3   
   140038123:	int3   
   140038124:	int3   
   140038125:	int3   
   140038126:	int3   
   140038127:	int3   
   140038128:	rex push rbp
   14003812a:	sub    rsp,0x20
   14003812e:	mov    rbp,rdx
   140038131:	lea    rcx,[rbp+0x38]
   140038135:	call   0x1400236a8
   14003813a:	add    rsp,0x20
   14003813e:	pop    rbp
   14003813f:	ret    
   140038140:	mov    rax,rsp
   140038143:	push   rdi
   140038144:	sub    rsp,0x50
   140038148:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140038151:	mov    QWORD PTR [rax+0x8],rbx
   140038155:	mov    QWORD PTR [rax+0x10],rbp
   140038159:	mov    QWORD PTR [rax+0x18],rsi
   14003815d:	mov    rbx,r9
   140038160:	mov    edi,r8d
   140038163:	mov    esi,edx
   140038165:	mov    rbp,rcx
   140038168:	mov    rdx,QWORD PTR [rcx-0x138]
   14003816f:	lea    rcx,[rax-0x20]
   140038173:	call   0x140021aec
   140038178:	nop
   140038179:	mov    DWORD PTR [rsp+0x20],0x4
   140038181:	mov    r9,rbx
   140038184:	mov    r8d,edi
   140038187:	mov    edx,esi
   140038189:	mov    rcx,rbp
   14003818c:	call   0x140037210
   140038191:	mov    ebx,eax
   140038193:	test   eax,eax
   140038195:	jns    0x1400381ae
   140038197:	cmp    DWORD PTR [rsp+0x40],0x0
   14003819c:	je     0x1400381aa
   14003819e:	mov    rdx,QWORD PTR [rsp+0x38]
   1400381a3:	xor    ecx,ecx
   1400381a5:	call   0x140020cc4
   1400381aa:	mov    eax,ebx
   1400381ac:	jmp    0x1400381c3
   1400381ae:	cmp    DWORD PTR [rsp+0x40],0x0
   1400381b3:	je     0x1400381c1
   1400381b5:	mov    rdx,QWORD PTR [rsp+0x38]
   1400381ba:	xor    ecx,ecx
   1400381bc:	call   0x140020cc4
   1400381c1:	xor    eax,eax
   1400381c3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400381c8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400381cd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400381d2:	add    rsp,0x50
   1400381d6:	pop    rdi
   1400381d7:	ret    
   1400381d8:	int3   
   1400381d9:	int3   
   1400381da:	int3   
   1400381db:	int3   
   1400381dc:	int3   
   1400381dd:	int3   
   1400381de:	int3   
   1400381df:	int3   
   1400381e0:	rex push rbp
   1400381e2:	sub    rsp,0x20
   1400381e6:	mov    rbp,rdx
   1400381e9:	lea    rcx,[rbp+0x38]
   1400381ed:	call   0x1400236a8
   1400381f2:	add    rsp,0x20
   1400381f6:	pop    rbp
   1400381f7:	ret    
   1400381f8:	mov    rax,rsp
   1400381fb:	push   rdi
   1400381fc:	sub    rsp,0x50
   140038200:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140038209:	mov    QWORD PTR [rax+0x8],rbx
   14003820d:	mov    QWORD PTR [rax+0x10],rbp
   140038211:	mov    QWORD PTR [rax+0x18],rsi
   140038215:	mov    rbx,r9
   140038218:	mov    edi,r8d
   14003821b:	mov    esi,edx
   14003821d:	mov    rbp,rcx
   140038220:	mov    rdx,QWORD PTR [rcx-0x138]
   140038227:	lea    rcx,[rax-0x20]
   14003822b:	call   0x140021aec
   140038230:	nop
   140038231:	mov    DWORD PTR [rsp+0x20],0x5
   140038239:	mov    r9,rbx
   14003823c:	mov    r8d,edi
   14003823f:	mov    edx,esi
   140038241:	mov    rcx,rbp
   140038244:	call   0x140037210
   140038249:	mov    ebx,eax
   14003824b:	test   eax,eax
   14003824d:	jns    0x140038266
   14003824f:	cmp    DWORD PTR [rsp+0x40],0x0
   140038254:	je     0x140038262
   140038256:	mov    rdx,QWORD PTR [rsp+0x38]
   14003825b:	xor    ecx,ecx
   14003825d:	call   0x140020cc4
   140038262:	mov    eax,ebx
   140038264:	jmp    0x14003827b
   140038266:	cmp    DWORD PTR [rsp+0x40],0x0
   14003826b:	je     0x140038279
   14003826d:	mov    rdx,QWORD PTR [rsp+0x38]
   140038272:	xor    ecx,ecx
   140038274:	call   0x140020cc4
   140038279:	xor    eax,eax
   14003827b:	mov    rbx,QWORD PTR [rsp+0x60]
   140038280:	mov    rbp,QWORD PTR [rsp+0x68]
   140038285:	mov    rsi,QWORD PTR [rsp+0x70]
   14003828a:	add    rsp,0x50
   14003828e:	pop    rdi
   14003828f:	ret    
   140038290:	int3   
   140038291:	int3   
   140038292:	int3   
   140038293:	int3   
   140038294:	int3   
   140038295:	int3   
   140038296:	int3   
   140038297:	int3   
   140038298:	rex push rbp
   14003829a:	sub    rsp,0x20
   14003829e:	mov    rbp,rdx
   1400382a1:	lea    rcx,[rbp+0x38]
   1400382a5:	call   0x1400236a8
   1400382aa:	add    rsp,0x20
   1400382ae:	pop    rbp
   1400382af:	ret    
   1400382b0:	mov    rax,rsp
   1400382b3:	push   rdi
   1400382b4:	sub    rsp,0x50
   1400382b8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400382c1:	mov    QWORD PTR [rax+0x8],rbx
   1400382c5:	mov    QWORD PTR [rax+0x10],rbp
   1400382c9:	mov    QWORD PTR [rax+0x18],rsi
   1400382cd:	mov    rsi,r9
   1400382d0:	mov    ebx,r8d
   1400382d3:	mov    ebp,edx
   1400382d5:	mov    rdi,rcx
   1400382d8:	mov    rdx,QWORD PTR [rcx-0x138]
   1400382df:	lea    rcx,[rax-0x20]
   1400382e3:	call   0x140021aec
   1400382e8:	nop
   1400382e9:	mov    DWORD PTR [rsp+0x20],0x6
   1400382f1:	mov    r9,rsi
   1400382f4:	mov    r8d,ebx
   1400382f7:	mov    edx,ebp
   1400382f9:	mov    rcx,rdi
   1400382fc:	call   0x140037210
   140038301:	mov    ebx,eax
   140038303:	test   eax,eax
   140038305:	jns    0x140038321
   140038307:	cmp    DWORD PTR [rsp+0x40],0x0
   14003830c:	je     0x14003831a
   14003830e:	mov    rdx,QWORD PTR [rsp+0x38]
   140038313:	xor    ecx,ecx
   140038315:	call   0x140020cc4
   14003831a:	mov    eax,ebx
   14003831c:	jmp    0x1400383cf
   140038321:	mov    rbx,QWORD PTR [rdi-0x98]
   140038328:	test   rbx,rbx
   14003832b:	jne    0x140038346
   14003832d:	cmp    DWORD PTR [rsp+0x40],ebx
   140038331:	je     0x14003833f
   140038333:	mov    rdx,QWORD PTR [rsp+0x38]
   140038338:	xor    ecx,ecx
   14003833a:	call   0x140020cc4
   14003833f:	xor    eax,eax
   140038341:	jmp    0x1400383cf
   140038346:	cmp    DWORD PTR [rbx+0x88],0x0
   14003834d:	jne    0x1400383ba
   14003834f:	cmp    DWORD PTR [rsi],0x1f
   140038352:	je     0x1400383ba
   140038354:	cmp    DWORD PTR [rsi],0x1e
   140038357:	je     0x1400383ba
   140038359:	test   bpl,0x3
   14003835d:	jne    0x140038376
   14003835f:	cmp    DWORD PTR [rsp+0x40],0x0
   140038364:	je     0x140038372
   140038366:	mov    rdx,QWORD PTR [rsp+0x38]
   14003836b:	xor    ecx,ecx
   14003836d:	call   0x140020cc4
   140038372:	xor    eax,eax
   140038374:	jmp    0x1400383cf
   140038376:	cmp    DWORD PTR [rsi],0x2
   140038379:	je     0x1400383a3
   14003837b:	cmp    DWORD PTR [rsi],0x3
   14003837e:	je     0x1400383a3
   140038380:	mov    DWORD PTR [rbx+0x88],0x1
   14003838a:	mov    rcx,rbx
   14003838d:	call   0x140037d98
   140038392:	and    DWORD PTR [rbx+0x88],0x0
   140038399:	mov    rax,QWORD PTR [rbx]
   14003839c:	mov    rcx,rbx
   14003839f:	call   QWORD PTR [rax+0x20]
   1400383a2:	nop
   1400383a3:	cmp    DWORD PTR [rsp+0x40],0x0
   1400383a8:	je     0x1400383b6
   1400383aa:	mov    rdx,QWORD PTR [rsp+0x38]
   1400383af:	xor    ecx,ecx
   1400383b1:	call   0x140020cc4
   1400383b6:	xor    eax,eax
   1400383b8:	jmp    0x1400383cf
   1400383ba:	cmp    DWORD PTR [rsp+0x40],0x0
   1400383bf:	je     0x1400383cd
   1400383c1:	mov    rdx,QWORD PTR [rsp+0x38]
   1400383c6:	xor    ecx,ecx
   1400383c8:	call   0x140020cc4
   1400383cd:	xor    eax,eax
   1400383cf:	mov    rbx,QWORD PTR [rsp+0x60]
   1400383d4:	mov    rbp,QWORD PTR [rsp+0x68]
   1400383d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400383de:	add    rsp,0x50
   1400383e2:	pop    rdi
   1400383e3:	ret    
   1400383e4:	int3   
   1400383e5:	int3   
   1400383e6:	int3   
   1400383e7:	int3   
   1400383e8:	int3   
   1400383e9:	int3   
   1400383ea:	int3   
   1400383eb:	int3   
   1400383ec:	int3   
   1400383ed:	int3   
   1400383ee:	int3   
   1400383ef:	int3   
   1400383f0:	rex push rbp
   1400383f2:	sub    rsp,0x20
   1400383f6:	mov    rbp,rdx
   1400383f9:	lea    rcx,[rbp+0x38]
   1400383fd:	call   0x1400236a8
   140038402:	add    rsp,0x20
   140038406:	pop    rbp
   140038407:	ret    
   140038408:	mov    rax,rsp
   14003840b:	push   rdi
   14003840c:	sub    rsp,0x50
   140038410:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140038419:	mov    QWORD PTR [rax+0x8],rbx
   14003841d:	mov    QWORD PTR [rax+0x10],rbp
   140038421:	mov    QWORD PTR [rax+0x18],rsi
   140038425:	mov    rbx,r9
   140038428:	mov    edi,r8d
   14003842b:	mov    ebp,edx
   14003842d:	mov    rsi,rcx
   140038430:	mov    rdx,QWORD PTR [rcx-0x138]
   140038437:	lea    rcx,[rax-0x20]
   14003843b:	call   0x140021aec
   140038440:	nop
   140038441:	mov    DWORD PTR [rsp+0x20],0x7
   140038449:	mov    r9,rbx
   14003844c:	mov    r8d,edi
   14003844f:	mov    edx,ebp
   140038451:	mov    rcx,rsi
   140038454:	call   0x140037210
   140038459:	mov    ebx,eax
   14003845b:	test   eax,eax
   14003845d:	jns    0x140038476
   14003845f:	cmp    DWORD PTR [rsp+0x40],0x0
   140038464:	je     0x140038472
   140038466:	mov    rdx,QWORD PTR [rsp+0x38]
   14003846b:	xor    ecx,ecx
   14003846d:	call   0x140020cc4
   140038472:	mov    eax,ebx
   140038474:	jmp    0x1400384da
   140038476:	mov    rdi,QWORD PTR [rsi-0x98]
   14003847d:	test   rdi,rdi
   140038480:	jne    0x140038498
   140038482:	cmp    DWORD PTR [rsp+0x40],edi
   140038486:	je     0x140038494
   140038488:	mov    rdx,QWORD PTR [rsp+0x38]
   14003848d:	xor    ecx,ecx
   14003848f:	call   0x140020cc4
   140038494:	xor    eax,eax
   140038496:	jmp    0x1400384da
   140038498:	test   bpl,bpl
   14003849b:	jns    0x1400384c5
   14003849d:	mov    ebx,DWORD PTR [rdi+0x88]
   1400384a3:	mov    DWORD PTR [rdi+0x88],0x1
   1400384ad:	mov    rcx,rdi
   1400384b0:	call   0x140037d98
   1400384b5:	mov    DWORD PTR [rdi+0x88],ebx
   1400384bb:	mov    rax,QWORD PTR [rdi]
   1400384be:	mov    rcx,rdi
   1400384c1:	call   QWORD PTR [rax+0x20]
   1400384c4:	nop
   1400384c5:	cmp    DWORD PTR [rsp+0x40],0x0
   1400384ca:	je     0x1400384d8
   1400384cc:	mov    rdx,QWORD PTR [rsp+0x38]
   1400384d1:	xor    ecx,ecx
   1400384d3:	call   0x140020cc4
   1400384d8:	xor    eax,eax
   1400384da:	mov    rbx,QWORD PTR [rsp+0x60]
   1400384df:	mov    rbp,QWORD PTR [rsp+0x68]
   1400384e4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400384e9:	add    rsp,0x50
   1400384ed:	pop    rdi
   1400384ee:	ret    
   1400384ef:	int3   
   1400384f0:	int3   
   1400384f1:	int3   
   1400384f2:	int3   
   1400384f3:	int3   
   1400384f4:	int3   
   1400384f5:	int3   
   1400384f6:	int3   
   1400384f7:	int3   
   1400384f8:	rex push rbp
   1400384fa:	sub    rsp,0x20
   1400384fe:	mov    rbp,rdx
   140038501:	lea    rcx,[rbp+0x38]
   140038505:	call   0x1400236a8
   14003850a:	add    rsp,0x20
   14003850e:	pop    rbp
   14003850f:	ret    
   140038510:	mov    rax,rsp
   140038513:	push   rdi
   140038514:	sub    rsp,0x70
   140038518:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038521:	mov    QWORD PTR [rax+0x8],rbx
   140038525:	mov    QWORD PTR [rax+0x10],rsi
   140038529:	lea    rsi,[rcx-0x178]
   140038530:	mov    rdx,QWORD PTR [rsi+0x38]
   140038534:	lea    rcx,[rax-0x50]
   140038538:	call   0x140021aec
   14003853d:	nop
   14003853e:	xor    ebx,ebx
   140038540:	mov    eax,DWORD PTR [rsp+0xb0]
   140038547:	test   eax,eax
   140038549:	je     0x1400385c9
   14003854b:	sub    eax,0x1
   14003854e:	je     0x1400385c2
   140038550:	sub    eax,0x1
   140038553:	je     0x1400385bb
   140038555:	sub    eax,0x1
   140038558:	je     0x1400385b4
   14003855a:	cmp    eax,0x1
   14003855d:	jne    0x1400385ce
   14003855f:	lea    ebx,[rax+0x6]
   140038562:	mov    rdi,QWORD PTR [rsi+0xd8]
   140038569:	test   rdi,rdi
   14003856c:	jne    0x140038587
   14003856e:	cmp    DWORD PTR [rsp+0x30],edi
   140038572:	je     0x140038580
   140038574:	mov    rdx,QWORD PTR [rsp+0x28]
   140038579:	xor    ecx,ecx
   14003857b:	call   0x140020cc4
   140038580:	xor    eax,eax
   140038582:	jmp    0x140038624
   140038587:	cmp    DWORD PTR [rdi+0x88],0x0
   14003858e:	jne    0x1400385ce
   140038590:	mov    DWORD PTR [rdi+0x88],0x1
   14003859a:	mov    rcx,rdi
   14003859d:	call   0x140037d98
   1400385a2:	and    DWORD PTR [rdi+0x88],0x0
   1400385a9:	mov    rax,QWORD PTR [rdi]
   1400385ac:	mov    rcx,rdi
   1400385af:	call   QWORD PTR [rax+0x20]
   1400385b2:	jmp    0x1400385ce
   1400385b4:	mov    ebx,0x5
   1400385b9:	jmp    0x1400385ce
   1400385bb:	mov    ebx,0x6
   1400385c0:	jmp    0x1400385ce
   1400385c2:	mov    ebx,0x4
   1400385c7:	jmp    0x1400385ce
   1400385c9:	mov    ebx,0x1
   1400385ce:	mov    DWORD PTR [rsp+0x38],0x3
   1400385d6:	or     DWORD PTR [rsp+0x3c],0xffffffff
   1400385db:	and    QWORD PTR [rsp+0x40],0x0
   1400385e1:	and    QWORD PTR [rsp+0x48],0x0
   1400385e7:	and    QWORD PTR [rsp+0x50],0x0
   1400385ed:	and    DWORD PTR [rsp+0x5c],0x0
   1400385f2:	mov    DWORD PTR [rsp+0x60],ebx
   1400385f6:	mov    DWORD PTR [rsp+0x64],0x6
   1400385fe:	lea    rdx,[rsp+0x38]
   140038603:	mov    rcx,rsi
   140038606:	call   0x140033df0
   14003860b:	mov    ebx,DWORD PTR [rsp+0x5c]
   14003860f:	cmp    DWORD PTR [rsp+0x30],0x0
   140038614:	je     0x140038622
   140038616:	mov    rdx,QWORD PTR [rsp+0x28]
   14003861b:	xor    ecx,ecx
   14003861d:	call   0x140020cc4
   140038622:	mov    eax,ebx
   140038624:	lea    r11,[rsp+0x70]
   140038629:	mov    rbx,QWORD PTR [r11+0x10]
   14003862d:	mov    rsi,QWORD PTR [r11+0x18]
   140038631:	mov    rsp,r11
   140038634:	pop    rdi
   140038635:	ret    
   140038636:	int3   
   140038637:	int3   
   140038638:	int3   
   140038639:	int3   
   14003863a:	int3   
   14003863b:	int3   
   14003863c:	int3   
   14003863d:	int3   
   14003863e:	int3   
   14003863f:	int3   
   140038640:	rex push rbp
   140038642:	sub    rsp,0x20
   140038646:	mov    rbp,rdx
   140038649:	lea    rcx,[rbp+0x28]
   14003864d:	call   0x1400236a8
   140038652:	add    rsp,0x20
   140038656:	pop    rbp
   140038657:	ret    
   140038658:	mov    rax,rsp
   14003865b:	push   rdi
   14003865c:	push   r12
   14003865e:	push   r13
   140038660:	sub    rsp,0x70
   140038664:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003866d:	mov    QWORD PTR [rax+0x8],rbx
   140038671:	mov    QWORD PTR [rax+0x10],rbp
   140038675:	mov    QWORD PTR [rax+0x18],rsi
   140038679:	mov    r13,r9
   14003867c:	mov    rbx,r8
   14003867f:	lea    r12,[rcx-0x178]
   140038686:	mov    rdx,QWORD PTR [r12+0x38]
   14003868b:	lea    rcx,[rax-0x60]
   14003868f:	call   0x140021aec
   140038694:	nop
   140038695:	xor    ebp,ebp
   140038697:	mov    eax,DWORD PTR [rsp+0xb8]
   14003869e:	lea    ecx,[rbp+0x7]
   1400386a1:	lea    edx,[rbp+0x5]
   1400386a4:	test   eax,eax
   1400386a6:	je     0x1400386d2
   1400386a8:	sub    eax,0x1
   1400386ab:	je     0x1400386cb
   1400386ad:	sub    eax,0x1
   1400386b0:	je     0x1400386c4
   1400386b2:	sub    eax,0x1
   1400386b5:	je     0x1400386c0
   1400386b7:	cmp    eax,0x1
   1400386ba:	jne    0x1400386d7
   1400386bc:	mov    ebp,ecx
   1400386be:	jmp    0x1400386d7
   1400386c0:	mov    ebp,edx
   1400386c2:	jmp    0x1400386d7
   1400386c4:	mov    ebp,0x6
   1400386c9:	jmp    0x1400386d7
   1400386cb:	mov    ebp,0x4
   1400386d0:	jmp    0x1400386d7
   1400386d2:	mov    ebp,0x1
   1400386d7:	xor    esi,esi
   1400386d9:	mov    eax,DWORD PTR [rsp+0xb0]
   1400386e0:	cmp    eax,0x4
   1400386e3:	je     0x140038704
   1400386e5:	cmp    eax,0x6
   1400386e8:	je     0x1400386fd
   1400386ea:	cmp    eax,0x8
   1400386ed:	je     0x1400386f9
   1400386ef:	cmp    eax,0xd
   1400386f2:	jne    0x140038706
   1400386f4:	lea    esi,[rax-0xb]
   1400386f7:	jmp    0x140038706
   1400386f9:	mov    esi,edx
   1400386fb:	jmp    0x140038706
   1400386fd:	mov    esi,0x3
   140038702:	jmp    0x140038706
   140038704:	mov    esi,ecx
   140038706:	mov    rdi,QWORD PTR [r12+0xd8]
   14003870e:	test   rdi,rdi
   140038711:	jne    0x14003872c
   140038713:	cmp    DWORD PTR [rsp+0x30],edi
   140038717:	je     0x140038725
   140038719:	mov    rdx,QWORD PTR [rsp+0x28]
   14003871e:	xor    ecx,ecx
   140038720:	call   0x140020cc4
   140038725:	xor    eax,eax
   140038727:	jmp    0x140038808
   14003872c:	cmp    esi,0x2
   14003872f:	jne    0x140038741
   140038731:	cmp    ebp,0x4
   140038734:	jne    0x14003874b
   140038736:	mov    rax,QWORD PTR [rdi]
   140038739:	mov    rcx,rdi
   14003873c:	call   QWORD PTR [rax+0x28]
   14003873f:	jmp    0x14003879b
   140038741:	cmp    esi,ecx
   140038743:	jne    0x14003874b
   140038745:	cmp    rbx,0x1
   140038749:	je     0x140038754
   14003874b:	cmp    ebp,0x6
   14003874e:	jne    0x140038797
   140038750:	cmp    esi,edx
   140038752:	jne    0x140038797
   140038754:	mov    rax,QWORD PTR [rdi]
   140038757:	mov    rcx,rdi
   14003875a:	call   QWORD PTR [rax+0x28]
   14003875d:	mov    r11,QWORD PTR [rdi+0xa0]
   140038764:	mov    rax,QWORD PTR [r13+0x0]
   140038768:	mov    QWORD PTR [r11+0x18],rax
   14003876c:	mov    ebx,DWORD PTR [rdi+0x88]
   140038772:	mov    DWORD PTR [rdi+0x88],0x1
   14003877c:	mov    rcx,rdi
   14003877f:	call   0x140037d98
   140038784:	mov    DWORD PTR [rdi+0x88],ebx
   14003878a:	test   ebx,ebx
   14003878c:	jne    0x140038797
   14003878e:	mov    rax,QWORD PTR [rdi]
   140038791:	mov    rcx,rdi
   140038794:	call   QWORD PTR [rax+0x20]
   140038797:	test   esi,esi
   140038799:	je     0x1400387f3
   14003879b:	mov    DWORD PTR [rsp+0x38],0x3
   1400387a3:	or     DWORD PTR [rsp+0x3c],0xffffffff
   1400387a8:	and    QWORD PTR [rsp+0x40],0x0
   1400387ae:	and    QWORD PTR [rsp+0x48],0x0
   1400387b4:	and    QWORD PTR [rsp+0x50],0x0
   1400387ba:	and    DWORD PTR [rsp+0x5c],0x0
   1400387bf:	mov    DWORD PTR [rsp+0x60],ebp
   1400387c3:	mov    DWORD PTR [rsp+0x64],esi
   1400387c7:	lea    rdx,[rsp+0x38]
   1400387cc:	mov    rcx,r12
   1400387cf:	call   0x140033df0
   1400387d4:	mov    ebx,DWORD PTR [rsp+0x5c]
   1400387d8:	test   ebx,ebx
   1400387da:	jns    0x1400387f3
   1400387dc:	cmp    DWORD PTR [rsp+0x30],0x0
   1400387e1:	je     0x1400387ef
   1400387e3:	mov    rdx,QWORD PTR [rsp+0x28]
   1400387e8:	xor    ecx,ecx
   1400387ea:	call   0x140020cc4
   1400387ef:	mov    eax,ebx
   1400387f1:	jmp    0x140038808
   1400387f3:	cmp    DWORD PTR [rsp+0x30],0x0
   1400387f8:	je     0x140038806
   1400387fa:	mov    rdx,QWORD PTR [rsp+0x28]
   1400387ff:	xor    ecx,ecx
   140038801:	call   0x140020cc4
   140038806:	xor    eax,eax
   140038808:	lea    r11,[rsp+0x70]
   14003880d:	mov    rbx,QWORD PTR [r11+0x20]
   140038811:	mov    rbp,QWORD PTR [r11+0x28]
   140038815:	mov    rsi,QWORD PTR [r11+0x30]
   140038819:	mov    rsp,r11
   14003881c:	pop    r13
   14003881e:	pop    r12
   140038820:	pop    rdi
   140038821:	ret    
   140038822:	int3   
   140038823:	int3   
   140038824:	int3   
   140038825:	int3   
   140038826:	int3   
   140038827:	int3   
   140038828:	rex push rbp
   14003882a:	sub    rsp,0x20
   14003882e:	mov    rbp,rdx
   140038831:	lea    rcx,[rbp+0x28]
   140038835:	call   0x1400236a8
   14003883a:	add    rsp,0x20
   14003883e:	pop    rbp
   14003883f:	ret    
   140038840:	test   rdx,rdx
   140038843:	je     0x14003892e
   140038849:	mov    QWORD PTR [rsp+0x8],rbx
   14003884e:	push   rdi
   14003884f:	sub    rsp,0x20
   140038853:	bt     cx,0xd
   140038858:	mov    r9,r8
   14003885b:	mov    rbx,rdx
   14003885e:	movzx  edi,cx
   140038861:	jae    0x14003887a
   140038863:	mov    rcx,QWORD PTR [rdx]
   140038866:	test   rcx,rcx
   140038869:	je     0x140038905
   14003886f:	call   QWORD PTR [rip+0x2bdf3]        # 0x140064668
   140038875:	jmp    0x140038901
   14003887a:	movzx  ecx,di
   14003887d:	sub    ecx,0x8
   140038880:	je     0x1400388f8
   140038882:	sub    ecx,0x1
   140038885:	je     0x1400388e8
   140038887:	sub    ecx,0x3
   14003888a:	je     0x1400388dd
   14003888c:	sub    ecx,0x1
   14003888f:	je     0x1400388e8
   140038891:	cmp    ecx,0x7b
   140038894:	jne    0x140038905
   140038896:	and    QWORD PTR [rsp+0x38],0x0
   14003889c:	test   r8,r8
   14003889f:	je     0x140038905
   1400388a1:	mov    rax,QWORD PTR [r8]
   1400388a4:	lea    rdx,[rip+0x33e3d]        # 0x14006c6e8
   1400388ab:	lea    r8,[rsp+0x38]
   1400388b0:	mov    rcx,r9
   1400388b3:	call   QWORD PTR [rax]
   1400388b5:	mov    rcx,QWORD PTR [rsp+0x38]
   1400388ba:	test   rcx,rcx
   1400388bd:	je     0x140038905
   1400388bf:	mov    rax,QWORD PTR [rcx]
   1400388c2:	mov    rdx,QWORD PTR [rbx]
   1400388c5:	xor    r8d,r8d
   1400388c8:	call   QWORD PTR [rax+0x20]
   1400388cb:	mov    rcx,QWORD PTR [rsp+0x38]
   1400388d0:	test   rcx,rcx
   1400388d3:	je     0x140038905
   1400388d5:	mov    rax,QWORD PTR [rcx]
   1400388d8:	call   QWORD PTR [rax+0x10]
   1400388db:	jmp    0x140038905
   1400388dd:	mov    rcx,rdx
   1400388e0:	call   QWORD PTR [rip+0x2bdba]        # 0x1400646a0
   1400388e6:	jmp    0x140038905
   1400388e8:	mov    rcx,QWORD PTR [rdx]
   1400388eb:	test   rcx,rcx
   1400388ee:	je     0x140038905
   1400388f0:	mov    rax,QWORD PTR [rcx]
   1400388f3:	call   QWORD PTR [rax+0x10]
   1400388f6:	jmp    0x140038901
   1400388f8:	mov    rcx,QWORD PTR [rdx]
   1400388fb:	call   QWORD PTR [rip+0x2bd8f]        # 0x140064690
   140038901:	and    QWORD PTR [rbx],0x0
   140038905:	bt     di,0xc
   14003890a:	jae    0x140038924
   14003890c:	mov    ax,di
   14003890f:	and    eax,0x4000
   140038914:	not    eax
   140038916:	test   eax,eax
   140038918:	je     0x140038924
   14003891a:	mov    rcx,QWORD PTR [rbx+0x8]
   14003891e:	call   QWORD PTR [rip+0x2c2fc]        # 0x140064c20
   140038924:	mov    rbx,QWORD PTR [rsp+0x30]
   140038929:	add    rsp,0x20
   14003892d:	pop    rdi
   14003892e:	ret    
   14003892f:	int3   
   140038930:	mov    rax,rsp
   140038933:	mov    QWORD PTR [rax+0x8],rbx
   140038937:	mov    QWORD PTR [rax+0x10],rbp
   14003893b:	mov    QWORD PTR [rax+0x18],rsi
   14003893f:	mov    QWORD PTR [rax+0x20],rdi
   140038943:	push   r12
   140038945:	sub    rsp,0x20
   140038949:	xor    ebp,ebp
   14003894b:	mov    r12,rdx
   14003894e:	mov    rbx,rcx
   140038951:	cmp    QWORD PTR [rcx+0x18],rbp
   140038955:	jbe    0x140038a36
   14003895b:	xor    eax,eax
   14003895d:	xor    edi,edi
   14003895f:	mov    rcx,QWORD PTR [rbx+0x20]
   140038963:	test   rcx,rcx
   140038966:	je     0x1400389bf
   140038968:	cmp    BYTE PTR [rcx+rax*1],0x1
   14003896c:	jne    0x1400389bf
   14003896e:	mov    rax,QWORD PTR [rbx+0x28]
   140038972:	mov    r8,QWORD PTR [rbx+0x10]
   140038976:	mov    rcx,QWORD PTR [rax+rdi*1+0x20]
   14003897b:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
   140038980:	lea    rdx,[rcx+rax*1+0x7]
   140038985:	and    rdx,0xfffffffffffffff8
   140038989:	add    rdx,0x8
   14003898d:	and    rdx,0xfffffffffffffffc
   140038991:	cmp    DWORD PTR [rdx+r8*1],0x3
   140038996:	je     0x140038a23
   14003899c:	mov    rax,QWORD PTR [rbx+0x28]
   1400389a0:	mov    rsi,QWORD PTR [rax+rdi*1+0x8]
   1400389a5:	add    rsi,r8
   1400389a8:	je     0x140038a23
   1400389aa:	cmp    QWORD PTR [rsi],0x0
   1400389ae:	je     0x140038a23
   1400389b0:	mov    rcx,QWORD PTR [rsi]
   1400389b3:	call   QWORD PTR [rip+0x2c267]        # 0x140064c20
   1400389b9:	and    QWORD PTR [rsi],0x0
   1400389bd:	jmp    0x140038a23
   1400389bf:	mov    rax,QWORD PTR [rbx+0x28]
   1400389c3:	cmp    WORD PTR [rax+rdi*1+0x28],0xd
   1400389c9:	je     0x1400389e3
   1400389cb:	cmp    WORD PTR [rax+rdi*1+0x28],0x9
   1400389d1:	je     0x1400389e3
   1400389d3:	mov    rdx,QWORD PTR [rax+rdi*1+0x8]
   1400389d8:	movzx  ecx,WORD PTR [rax+rdi*1+0x28]
   1400389dd:	add    rdx,QWORD PTR [rbx+0x10]
   1400389e1:	jmp    0x140038a1b
   1400389e3:	mov    rcx,QWORD PTR [rax+rdi*1+0x20]
   1400389e8:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
   1400389ed:	mov    r8,QWORD PTR [rbx+0x10]
   1400389f1:	lea    rdx,[rcx+rax*1+0x7]
   1400389f6:	and    rdx,0xfffffffffffffff8
   1400389fa:	add    rdx,0x8
   1400389fe:	and    rdx,0xfffffffffffffffc
   140038a02:	cmp    DWORD PTR [rdx+r8*1],0x0
   140038a07:	jne    0x140038a23
   140038a09:	mov    rcx,QWORD PTR [rbx+0x28]
   140038a0d:	mov    rax,QWORD PTR [rcx+rdi*1+0x8]
   140038a12:	movzx  ecx,WORD PTR [rcx+rdi*1+0x28]
   140038a17:	lea    rdx,[r8+rax*1]
   140038a1b:	mov    r8,r12
   140038a1e:	call   0x140038840
   140038a23:	add    ebp,0x1
   140038a26:	add    rdi,0x50
   140038a2a:	mov    eax,ebp
   140038a2c:	cmp    rax,QWORD PTR [rbx+0x18]
   140038a30:	jb     0x14003895f
   140038a36:	mov    rbx,QWORD PTR [rsp+0x30]
   140038a3b:	mov    rbp,QWORD PTR [rsp+0x38]
   140038a40:	mov    rsi,QWORD PTR [rsp+0x40]
   140038a45:	mov    rdi,QWORD PTR [rsp+0x48]
   140038a4a:	add    rsp,0x20
   140038a4e:	pop    r12
   140038a50:	ret    
   140038a51:	int3   
   140038a52:	int3   
   140038a53:	int3   
   140038a54:	mov    QWORD PTR [rsp+0x10],rbx
   140038a59:	mov    QWORD PTR [rsp+0x18],rbp
   140038a5e:	mov    QWORD PTR [rsp+0x20],rsi
   140038a63:	push   rdi
   140038a64:	push   r12
   140038a66:	push   r13
   140038a68:	push   r14
   140038a6a:	push   r15
   140038a6c:	sub    rsp,0x30
   140038a70:	xor    r13d,r13d
   140038a73:	mov    rdi,rcx
   140038a76:	cmp    QWORD PTR [rcx+0x90],r13
   140038a7d:	jne    0x140038ca1
   140038a83:	cmp    QWORD PTR [rcx+0x80],r13
   140038a8a:	je     0x140038ad9
   140038a8c:	cmp    QWORD PTR [rcx+0x70],r13
   140038a90:	mov    rbx,r13
   140038a93:	jle    0x140038ab7
   140038a95:	mov    rsi,r13
   140038a98:	mov    rax,QWORD PTR [rdi+0x80]
   140038a9f:	lea    rcx,[rsi+rax*1]
   140038aa3:	call   QWORD PTR [rip+0x2bbf7]        # 0x1400646a0
   140038aa9:	add    rbx,0x1
   140038aad:	add    rsi,0x18
   140038ab1:	cmp    rbx,QWORD PTR [rdi+0x70]
   140038ab5:	jl     0x140038a98
   140038ab7:	cmp    QWORD PTR [rdi+0x70],r13
   140038abb:	jle    0x140038ad2
   140038abd:	mov    rcx,QWORD PTR [rdi+0x80]
   140038ac4:	call   0x14001ac50
   140038ac9:	mov    rcx,QWORD PTR [rdi+0x78]
   140038acd:	call   0x14001ac50
   140038ad2:	mov    QWORD PTR [rdi+0x80],r13
   140038ad9:	cmp    QWORD PTR [rdi+0x20],r13
   140038add:	mov    QWORD PTR [rdi+0x70],r13
   140038ae1:	mov    r8,r13
   140038ae4:	jle    0x140038b07
   140038ae6:	mov    rdx,QWORD PTR [rdi+0x28]
   140038aea:	add    rdx,0x38
   140038aee:	mov    rax,QWORD PTR [rdx]
   140038af1:	add    r8,0x1
   140038af5:	add    rdx,0x40
   140038af9:	mov    rcx,QWORD PTR [rax+0x18]
   140038afd:	add    QWORD PTR [rdi+0x70],rcx
   140038b01:	cmp    r8,QWORD PTR [rdi+0x20]
   140038b05:	jl     0x140038aee
   140038b07:	or     rbx,0xffffffffffffffff
   140038b0b:	cmp    QWORD PTR [rdi+0x70],r13
   140038b0f:	jle    0x140038b28
   140038b11:	lea    eax,[rbx+0x39]
   140038b14:	mul    QWORD PTR [rdi+0x70]
   140038b18:	cmovo  rax,rbx
   140038b1c:	mov    rcx,rax
   140038b1f:	call   0x14001ac0c
   140038b24:	mov    QWORD PTR [rdi+0x78],rax
   140038b28:	cmp    QWORD PTR [rdi+0x20],r13
   140038b2c:	mov    rdx,r13
   140038b2f:	mov    r15d,r13d
   140038b32:	mov    QWORD PTR [rsp+0x60],rdx
   140038b37:	mov    r12,r13
   140038b3a:	jle    0x140038c18
   140038b40:	mov    rsi,r13
   140038b43:	mov    rax,QWORD PTR [rdi+0x28]
   140038b47:	mov    rcx,QWORD PTR [rax+rsi*1+0x38]
   140038b4c:	mov    rbp,QWORD PTR [rcx+0x8]
   140038b50:	cmp    rbp,r13
   140038b53:	je     0x140038c02
   140038b59:	lea    r14d,[r15+r15*2]
   140038b5d:	mov    r13,rdx
   140038b60:	imul   r13,r13,0x38
   140038b64:	shl    r14d,0x3
   140038b68:	test   rbp,rbp
   140038b6b:	mov    rbx,rbp
   140038b6e:	je     0x140038ccc
   140038b74:	mov    rax,QWORD PTR [rdi+0x28]
   140038b78:	mov    rbp,QWORD PTR [rbp+0x0]
   140038b7c:	mov    rbx,QWORD PTR [rbx+0x10]
   140038b80:	movsxd rdx,r15d
   140038b83:	lea    r8,[rsi+rax*1]
   140038b87:	mov    rcx,rdi
   140038b8a:	imul   rdx,rdx,0x38
   140038b8e:	add    rdx,QWORD PTR [rdi+0x78]
   140038b92:	call   0x1400349f0
   140038b97:	mov    r11,QWORD PTR [rdi+0x78]
   140038b9b:	mov    rdx,QWORD PTR [rsp+0x60]
   140038ba0:	mov    DWORD PTR [r13+r11*1+0x20],r14d
   140038ba5:	mov    rax,QWORD PTR [rdi+0x78]
   140038ba9:	or     r8d,0xffffffff
   140038bad:	and    DWORD PTR [r13+rax*1+0x24],0x0
   140038bb3:	mov    rax,QWORD PTR [rdi+0x78]
   140038bb7:	add    rdx,0x1
   140038bbb:	mov    DWORD PTR [r13+rax*1+0x2c],r8d
   140038bc0:	mov    rax,QWORD PTR [rdi+0x78]
   140038bc4:	add    r13,0x38
   140038bc8:	mov    DWORD PTR [r13+rax*1-0x10],r8d
   140038bcd:	mov    rax,QWORD PTR [rdi+0x78]
   140038bd1:	add    r15d,0x1
   140038bd5:	mov    DWORD PTR [r13+rax*1-0x8],0x1
   140038bde:	mov    rcx,QWORD PTR [rdi+0x78]
   140038be2:	mov    eax,DWORD PTR [rbx+0xf4]
   140038be8:	mov    DWORD PTR [r13+rcx*1-0x4],eax
   140038bed:	add    r14d,0x18
   140038bf1:	test   rbp,rbp
   140038bf4:	mov    QWORD PTR [rsp+0x60],rdx
   140038bf9:	jne    0x140038b68
   140038bff:	xor    r13d,r13d
   140038c02:	add    r12,0x1
   140038c06:	add    rsi,0x40
   140038c0a:	cmp    r12,QWORD PTR [rdi+0x20]
   140038c0e:	jl     0x140038b43
   140038c14:	or     rbx,0xffffffffffffffff
   140038c18:	mov    rdx,QWORD PTR [rdi+0x70]
   140038c1c:	mov    rcx,QWORD PTR [rdi+0x10]
   140038c20:	mov    r8,QWORD PTR [rdi+0x78]
   140038c24:	mov    rax,QWORD PTR [rcx]
   140038c27:	lea    r9,[rdx+rdx*2]
   140038c2b:	mov    DWORD PTR [rsp+0x20],r13d
   140038c30:	shl    r9,0x3
   140038c34:	call   QWORD PTR [rax+0x20]
   140038c37:	cmp    QWORD PTR [rdi+0x70],r13
   140038c3b:	je     0x140038c59
   140038c3d:	mov    eax,0x18
   140038c42:	mul    QWORD PTR [rdi+0x70]
   140038c46:	cmovo  rax,rbx
   140038c4a:	mov    rcx,rax
   140038c4d:	call   0x14001ac0c
   140038c52:	mov    QWORD PTR [rdi+0x80],rax
   140038c59:	cmp    QWORD PTR [rdi+0x70],r13
   140038c5d:	mov    ebx,r13d
   140038c60:	jle    0x140038c9e
   140038c62:	mov    rax,r13
   140038c65:	mov    rsi,r13
   140038c68:	lea    rcx,[rax+rax*2]
   140038c6c:	mov    rax,QWORD PTR [rdi+0x80]
   140038c73:	xor    edx,edx
   140038c75:	lea    rcx,[rax+rcx*8]
   140038c79:	lea    r8d,[rdx+0x18]
   140038c7d:	call   0x140047720
   140038c82:	mov    r11,QWORD PTR [rdi+0x80]
   140038c89:	add    ebx,0x1
   140038c8c:	mov    WORD PTR [rsi+r11*1],r13w
   140038c91:	movsxd rax,ebx
   140038c94:	add    rsi,0x18
   140038c98:	cmp    rax,QWORD PTR [rdi+0x70]
   140038c9c:	jl     0x140038c68
   140038c9e:	mov    rcx,rdi
   140038ca1:	call   0x140037d98
   140038ca6:	mov    r11,QWORD PTR [rdi]
   140038ca9:	mov    rcx,rdi
   140038cac:	mov    rbx,QWORD PTR [rsp+0x68]
   140038cb1:	mov    rbp,QWORD PTR [rsp+0x70]
   140038cb6:	mov    rsi,QWORD PTR [rsp+0x78]
   140038cbb:	add    rsp,0x30
   140038cbf:	pop    r15
   140038cc1:	pop    r14
   140038cc3:	pop    r13
   140038cc5:	pop    r12
   140038cc7:	pop    rdi
   140038cc8:	rex.WB jmp QWORD PTR [r11+0x20]
   140038ccc:	call   0x1400208f8
   140038cd1:	int3   
   140038cd2:	int3   
   140038cd3:	int3   
   140038cd4:	mov    QWORD PTR [rsp+0x8],rbx
   140038cd9:	mov    QWORD PTR [rsp+0x10],rbp
   140038cde:	mov    QWORD PTR [rsp+0x18],rsi
   140038ce3:	push   rdi
   140038ce4:	sub    rsp,0x20
   140038ce8:	mov    rax,QWORD PTR [rcx+0x10]
   140038cec:	xor    edx,edx
   140038cee:	xor    ebx,ebx
   140038cf0:	mov    ebp,DWORD PTR [rax+0x8]
   140038cf3:	mov    rdi,rcx
   140038cf6:	test   ebp,ebp
   140038cf8:	je     0x140038d40
   140038cfa:	xor    esi,esi
   140038cfc:	mov    rcx,QWORD PTR [rdi+0x8]
   140038d00:	test   rcx,rcx
   140038d03:	je     0x140038d2c
   140038d05:	mov    rax,QWORD PTR [rdi+0x10]
   140038d09:	cmp    ebx,DWORD PTR [rax+0x8]
   140038d0c:	mov    r9,QWORD PTR [rax+0x10]
   140038d10:	jb     0x140038d17
   140038d12:	xor    r8d,r8d
   140038d15:	jmp    0x140038d1e
   140038d17:	mov    rax,QWORD PTR [rax]
   140038d1a:	mov    r8,QWORD PTR [rsi+rax*1]
   140038d1e:	mov    rax,QWORD PTR [rcx]
   140038d21:	mov    rdx,QWORD PTR [rdi+0x18]
   140038d25:	call   QWORD PTR [rax+0x20]
   140038d28:	mov    edx,eax
   140038d2a:	jmp    0x140038d31
   140038d2c:	mov    edx,0x80004002
   140038d31:	test   edx,edx
   140038d33:	js     0x140038d40
   140038d35:	add    ebx,0x1
   140038d38:	add    rsi,0x10
   140038d3c:	cmp    ebx,ebp
   140038d3e:	jb     0x140038cfc
   140038d40:	mov    rbx,QWORD PTR [rsp+0x30]
   140038d45:	mov    rbp,QWORD PTR [rsp+0x38]
   140038d4a:	mov    rsi,QWORD PTR [rsp+0x40]
   140038d4f:	mov    eax,edx
   140038d51:	add    rsp,0x20
   140038d55:	pop    rdi
   140038d56:	ret    
   140038d57:	int3   
   140038d58:	mov    QWORD PTR [rsp+0x8],rbx
   140038d5d:	push   rbp
   140038d5e:	push   rsi
   140038d5f:	push   rdi
   140038d60:	sub    rsp,0x70
   140038d64:	mov    rax,QWORD PTR [rip+0x4e005]        # 0x140086d70
   140038d6b:	xor    rax,rsp
   140038d6e:	mov    QWORD PTR [rsp+0x68],rax
   140038d73:	test   rdx,rdx
   140038d76:	mov    rbx,r9
   140038d79:	mov    rbp,r8
   140038d7c:	mov    r9,rdx
   140038d7f:	jne    0x140038d8b
   140038d81:	mov    eax,0x80004005
   140038d86:	jmp    0x140038e79
   140038d8b:	test   rbx,rbx
   140038d8e:	je     0x140038d81
   140038d90:	mov    rax,QWORD PTR [rdx]
   140038d93:	and    QWORD PTR [rsp+0x38],0x0
   140038d99:	lea    r8,[rsp+0x38]
   140038d9e:	lea    rdx,[rip+0x33263]        # 0x14006c008
   140038da5:	mov    rcx,r9
   140038da8:	call   QWORD PTR [rax]
   140038daa:	mov    esi,DWORD PTR [rsp+0xb0]
   140038db1:	test   esi,esi
   140038db3:	mov    edi,eax
   140038db5:	je     0x140038dc8
   140038db7:	mov    r8,rsi
   140038dba:	xor    edx,edx
   140038dbc:	mov    rcx,rbx
   140038dbf:	shl    r8,0x2
   140038dc3:	call   0x140047720
   140038dc8:	test   edi,edi
   140038dca:	js     0x140038e67
   140038dd0:	movdqu xmm0,XMMWORD PTR [rip+0x37db8]        # 0x140070b90
   140038dd8:	mov    rcx,QWORD PTR [rsp+0x38]
   140038ddd:	and    DWORD PTR [rsp+0x40],0x0
   140038de2:	and    QWORD PTR [rsp+0x30],0x0
   140038de8:	lea    rdx,[rsp+0x30]
   140038ded:	mov    QWORD PTR [rsp+0x48],rbp
   140038df2:	movdqu XMMWORD PTR [rsp+0x54],xmm0
   140038df8:	mov    DWORD PTR [rsp+0x50],esi
   140038dfc:	mov    rax,QWORD PTR [rcx]
   140038dff:	mov    QWORD PTR [rsp+0x20],rdx
   140038e04:	lea    r9,[rsp+0x40]
   140038e09:	lea    r8,[rsp+0x48]
   140038e0e:	mov    edx,0x1
   140038e13:	call   QWORD PTR [rax+0x18]
   140038e16:	mov    rcx,QWORD PTR [rsp+0x30]
   140038e1b:	test   eax,eax
   140038e1d:	mov    edi,eax
   140038e1f:	js     0x140038e61
   140038e21:	xor    r9d,r9d
   140038e24:	xor    r8d,r8d
   140038e27:	cmp    DWORD PTR [rcx+0x8],esi
   140038e2a:	mov    eax,esi
   140038e2c:	cmovb  eax,DWORD PTR [rcx+0x8]
   140038e30:	cmp    r9d,eax
   140038e33:	mov    rax,QWORD PTR [rcx]
   140038e36:	jae    0x140038e4e
   140038e38:	movsx  edx,WORD PTR [rax+r8*1+0x38]
   140038e3e:	add    r9d,0x1
   140038e42:	add    r8,0x48
   140038e46:	mov    DWORD PTR [rbx],edx
   140038e48:	add    rbx,0x4
   140038e4c:	jmp    0x140038e27
   140038e4e:	test   rax,rax
   140038e51:	je     0x140038e61
   140038e53:	mov    rcx,rax
   140038e56:	call   QWORD PTR [rip+0x2bdc4]        # 0x140064c20
   140038e5c:	mov    rcx,QWORD PTR [rsp+0x30]
   140038e61:	call   QWORD PTR [rip+0x2bdb9]        # 0x140064c20
   140038e67:	mov    rcx,QWORD PTR [rsp+0x38]
   140038e6c:	test   rcx,rcx
   140038e6f:	je     0x140038e77
   140038e71:	mov    rax,QWORD PTR [rcx]
   140038e74:	call   QWORD PTR [rax+0x10]
   140038e77:	mov    eax,edi
   140038e79:	mov    rcx,QWORD PTR [rsp+0x68]
   140038e7e:	xor    rcx,rsp
   140038e81:	call   0x140046470
   140038e86:	mov    rbx,QWORD PTR [rsp+0x90]
   140038e8e:	add    rsp,0x70
   140038e92:	pop    rdi
   140038e93:	pop    rsi
   140038e94:	pop    rbp
   140038e95:	ret    
   140038e96:	int3   
   140038e97:	int3   
   140038e98:	mov    r11,rsp
   140038e9b:	push   rdi
   140038e9c:	push   r12
   140038e9e:	push   r13
   140038ea0:	push   r14
   140038ea2:	push   r15
   140038ea4:	sub    rsp,0x120
   140038eab:	mov    QWORD PTR [rsp+0xd0],0xfffffffffffffffe
   140038eb7:	mov    QWORD PTR [r11+0x18],rbx
   140038ebb:	mov    QWORD PTR [r11+0x20],rsi
   140038ebf:	mov    rax,QWORD PTR [rip+0x4deaa]        # 0x140086d70
   140038ec6:	xor    rax,rsp
   140038ec9:	mov    QWORD PTR [rsp+0x110],rax
   140038ed1:	mov    r13,rdx
   140038ed4:	mov    QWORD PTR [rsp+0x98],rdx
   140038edc:	mov    r12,rcx
   140038edf:	mov    QWORD PTR [rsp+0xa0],rcx
   140038ee7:	mov    QWORD PTR [rsp+0xb8],rdx
   140038eef:	movdqu xmm0,XMMWORD PTR [rip+0x33849]        # 0x14006c740
   140038ef7:	movdqu XMMWORD PTR [r11-0x48],xmm0
   140038efd:	xor    esi,esi
   140038eff:	mov    BYTE PTR [rsp+0x60],sil
   140038f04:	mov    eax,esi
   140038f06:	cmp    rdx,rsi
   140038f09:	setne  al
   140038f0c:	cmp    eax,esi
   140038f0e:	jne    0x140038f1a
   140038f10:	mov    eax,0x80004005
   140038f15:	jmp    0x14003999c
   140038f1a:	mov    QWORD PTR [rsp+0x78],rsi
   140038f1f:	mov    rax,QWORD PTR [rdx]
   140038f22:	lea    r8,[rsp+0x78]
   140038f27:	lea    rdx,[rip+0x330ea]        # 0x14006c018
   140038f2e:	mov    rcx,r13
   140038f31:	call   QWORD PTR [rax]
   140038f33:	mov    ebx,eax
   140038f35:	cmp    eax,esi
   140038f37:	jge    0x140038f50
   140038f39:	mov    rcx,QWORD PTR [rsp+0x78]
   140038f3e:	cmp    rcx,rsi
   140038f41:	je     0x140038f49
   140038f43:	mov    rdx,QWORD PTR [rcx]
   140038f46:	call   QWORD PTR [rdx+0x10]
   140038f49:	mov    eax,ebx
   140038f4b:	jmp    0x14003999c
   140038f50:	mov    rdi,rsi
   140038f53:	mov    QWORD PTR [rsp+0x68],rsi
   140038f58:	cmp    QWORD PTR [r12+0x28],rsi
   140038f5d:	jne    0x14003901e
   140038f63:	mov    QWORD PTR [rsp+0x80],rsi
   140038f6b:	mov    rax,QWORD PTR [r13+0x0]
   140038f6f:	lea    r8,[rsp+0x80]
   140038f77:	lea    rdx,[rip+0x3307a]        # 0x14006bff8
   140038f7e:	mov    rcx,r13
   140038f81:	call   QWORD PTR [rax]
   140038f83:	mov    r13d,eax
   140038f86:	cmp    eax,esi
   140038f88:	jge    0x140038fb6
   140038f8a:	mov    rcx,QWORD PTR [rsp+0x80]
   140038f92:	cmp    rcx,rsi
   140038f95:	je     0x140038f9e
   140038f97:	mov    rdx,QWORD PTR [rcx]
   140038f9a:	call   QWORD PTR [rdx+0x10]
   140038f9d:	nop
   140038f9e:	mov    rcx,QWORD PTR [rsp+0x78]
   140038fa3:	cmp    rcx,rsi
   140038fa6:	je     0x140038fae
   140038fa8:	mov    rax,QWORD PTR [rcx]
   140038fab:	call   QWORD PTR [rax+0x10]
   140038fae:	mov    eax,r13d
   140038fb1:	jmp    0x14003999c
   140038fb6:	mov    rcx,QWORD PTR [rsp+0x80]
   140038fbe:	mov    rax,QWORD PTR [rcx]
   140038fc1:	lea    r9,[r12+0x30]
   140038fc6:	lea    rdx,[r12+0x18]
   140038fcb:	lea    r8,[r12+0x28]
   140038fd0:	call   QWORD PTR [rax+0x18]
   140038fd3:	mov    ebx,eax
   140038fd5:	cmp    eax,esi
   140038fd7:	jge    0x140039004
   140038fd9:	mov    rcx,QWORD PTR [rsp+0x80]
   140038fe1:	cmp    rcx,rsi
   140038fe4:	je     0x140038fed
   140038fe6:	mov    rdx,QWORD PTR [rcx]
   140038fe9:	call   QWORD PTR [rdx+0x10]
   140038fec:	nop
   140038fed:	mov    rcx,QWORD PTR [rsp+0x78]
   140038ff2:	cmp    rcx,rsi
   140038ff5:	je     0x140038ffd
   140038ff7:	mov    rax,QWORD PTR [rcx]
   140038ffa:	call   QWORD PTR [rax+0x10]
   140038ffd:	mov    eax,ebx
   140038fff:	jmp    0x14003999c
   140039004:	mov    BYTE PTR [r12+0x38],sil
   140039009:	mov    rcx,QWORD PTR [rsp+0x80]
   140039011:	cmp    rcx,rsi
   140039014:	je     0x140039024
   140039016:	mov    rax,QWORD PTR [rcx]
   140039019:	call   QWORD PTR [rax+0x10]
   14003901c:	jmp    0x140039024
   14003901e:	mov    BYTE PTR [r12+0x38],0x1
   140039024:	mov    QWORD PTR [rsp+0x80],rsi
   14003902c:	mov    eax,0x58
   140039031:	mul    QWORD PTR [r12+0x18]
   140039036:	mov    rcx,0xffffffffffffffff
   14003903d:	cmovo  rax,rcx
   140039041:	mov    rcx,rax
   140039044:	call   0x14001ac0c
   140039049:	mov    r14,rax
   14003904c:	mov    QWORD PTR [rsp+0x80],rax
   140039054:	jmp    0x14003907b
   140039056:	xor    esi,esi
   140039058:	mov    rdi,rsi
   14003905b:	mov    r14,QWORD PTR [rsp+0x80]
   140039063:	mov    r12,QWORD PTR [rsp+0xa0]
   14003906b:	mov    rax,QWORD PTR [rsp+0xb8]
   140039073:	mov    QWORD PTR [rsp+0x98],rax
   14003907b:	cmp    r14,rsi
   14003907e:	jne    0x14003909a
   140039080:	mov    rcx,QWORD PTR [rsp+0x78]
   140039085:	cmp    rcx,rsi
   140039088:	je     0x140039090
   14003908a:	mov    rax,QWORD PTR [rcx]
   14003908d:	call   QWORD PTR [rax+0x10]
   140039090:	mov    eax,0x8007000e
   140039095:	jmp    0x14003999c
   14003909a:	mov    rbx,r14
   14003909d:	mov    QWORD PTR [rsp+0xb0],rbx
   1400390a5:	mov    rcx,QWORD PTR [r12+0x18]
   1400390aa:	call   0x14001ac0c
   1400390af:	mov    QWORD PTR [r12+0x20],rax
   1400390b4:	mov    rcx,QWORD PTR [rsp+0x98]
   1400390bc:	jmp    0x1400390eb
   1400390be:	xor    esi,esi
   1400390c0:	mov    rdi,rsi
   1400390c3:	mov    r14,QWORD PTR [rsp+0x80]
   1400390cb:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400390d3:	mov    r12,QWORD PTR [rsp+0xa0]
   1400390db:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400390e3:	mov    QWORD PTR [rsp+0x98],rcx
   1400390eb:	cmp    QWORD PTR [r12+0x20],rsi
   1400390f0:	jne    0x140039115
   1400390f2:	mov    rcx,r14
   1400390f5:	call   0x14001ac50
   1400390fa:	nop
   1400390fb:	mov    rcx,QWORD PTR [rsp+0x78]
   140039100:	cmp    rcx,rsi
   140039103:	je     0x14003910b
   140039105:	mov    rax,QWORD PTR [rcx]
   140039108:	call   QWORD PTR [rax+0x10]
   14003910b:	mov    eax,0x8007000e
   140039110:	jmp    0x14003999c
   140039115:	mov    r13,r14
   140039118:	mov    QWORD PTR [rsp+0x90],r14
   140039120:	mov    eax,esi
   140039122:	mov    DWORD PTR [rsp+0x74],eax
   140039126:	mov    r8d,eax
   140039129:	cmp    r8,QWORD PTR [r12+0x18]
   14003912e:	jae    0x14003983c
   140039134:	mov    rax,QWORD PTR [r12+0x20]
   140039139:	mov    BYTE PTR [r8+rax*1],sil
   14003913d:	lea    r15,[r8+r8*4]
   140039141:	shl    r15,0x4
   140039145:	mov    rdx,QWORD PTR [r12+0x28]
   14003914a:	mov    rax,QWORD PTR [r12+0x40]
   14003914f:	cmp    QWORD PTR [rdx+r15*1+0x20],rax
   140039154:	jbe    0x140039591
   14003915a:	cmp    WORD PTR [rdx+r15*1+0x28],0xd
   140039161:	je     0x140039591
   140039167:	cmp    DWORD PTR [r12+0x3c],0x2
   14003916d:	jne    0x140039245
   140039173:	mov    r8,rsi
   140039176:	lea    rcx,[rdi+0x7]
   14003917a:	and    rcx,0xfffffffffffffff8
   14003917e:	lea    rdi,[rcx+0xb]
   140039182:	and    rdi,0xfffffffffffffffc
   140039186:	mov    r9,rdi
   140039189:	add    rdi,0x4
   14003918d:	mov    QWORD PTR [rsp+0x68],rdi
   140039192:	mov    QWORD PTR [rdx+r15*1+0x20],rsi
   140039197:	mov    rax,QWORD PTR [r12+0x28]
   14003919c:	mov    dl,BYTE PTR [rax+r15*1+0x2b]
   1400391a1:	mov    r10b,BYTE PTR [rax+r15*1+0x2a]
   1400391a6:	mov    r11,QWORD PTR [rax+r15*1+0x20]
   1400391ab:	movzx  ebx,WORD PTR [rax+r15*1+0x28]
   1400391b1:	mov    WORD PTR [rsp+0x70],bx
   1400391b6:	mov    rax,QWORD PTR [rax+r15*1+0x10]
   1400391bb:	cmp    r13,rsi
   1400391be:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400391c6:	jne    0x1400391d3
   1400391c8:	mov    ecx,0x80004005
   1400391cd:	call   0x140001430
   1400391d2:	int3   
   1400391d3:	mov    DWORD PTR [r13+0x3c],esi
   1400391d7:	mov    QWORD PTR [r13+0x28],rsi
   1400391db:	mov    DWORD PTR [r13+0x40],esi
   1400391df:	mov    QWORD PTR [r13+0x0],rax
   1400391e3:	mov    ax,WORD PTR [rsp+0x70]
   1400391e8:	mov    WORD PTR [r13+0x54],ax
   1400391ed:	mov    BYTE PTR [r13+0x56],r10b
   1400391f1:	mov    BYTE PTR [r13+0x57],dl
   1400391f5:	mov    DWORD PTR [r13+0x50],esi
   1400391f9:	mov    QWORD PTR [r13+0x8],rsi
   1400391fd:	mov    QWORD PTR [r13+0x10],rsi
   140039201:	mov    QWORD PTR [r13+0x18],rsi
   140039205:	mov    QWORD PTR [r13+0x20],rsi
   140039209:	mov    QWORD PTR [r13+0x30],rsi
   14003920d:	mov    QWORD PTR [r13+0x48],r11
   140039211:	mov    DWORD PTR [r13+0x38],esi
   140039215:	cmp    rcx,rsi
   140039218:	je     0x140039226
   14003921a:	mov    DWORD PTR [r13+0x38],0x2
   140039222:	mov    QWORD PTR [r13+0x10],rcx
   140039226:	cmp    r9,rsi
   140039229:	je     0x140039234
   14003922b:	or     DWORD PTR [r13+0x38],0x4
   140039230:	mov    QWORD PTR [r13+0x18],r9
   140039234:	add    r13,0x58
   140039238:	mov    QWORD PTR [rsp+0x90],r13
   140039240:	jmp    0x14003981a
   140039245:	cmp    DWORD PTR [r12+0x3c],0x1
   14003924b:	jne    0x14003935a
   140039251:	or     WORD PTR [rdx+r15*1+0x28],0x4000
   140039259:	mov    rax,QWORD PTR [r12+0x28]
   14003925e:	mov    QWORD PTR [rax+r15*1+0x20],0x8
   140039267:	mov    rax,QWORD PTR [r12+0x20]
   14003926c:	mov    BYTE PTR [r8+rax*1],0x1
   140039271:	mov    rdi,QWORD PTR [r12+0x28]
   140039276:	movzx  eax,WORD PTR [rdi+r15*1+0x28]
   14003927c:	mov    WORD PTR [rsp+0x70],ax
   140039281:	movzx  ecx,ax
   140039284:	call   0x140033290
   140039289:	lea    r8d,[rax-0x1]
   14003928d:	add    r8,QWORD PTR [rsp+0x68]
   140039292:	mov    ecx,eax
   140039294:	sub    rcx,0x1
   140039298:	not    rcx
   14003929b:	and    r8,rcx
   14003929e:	mov    r9,QWORD PTR [rdi+r15*1+0x20]
   1400392a3:	lea    rcx,[r9+r8*1+0x7]
   1400392a8:	and    rcx,0xfffffffffffffff8
   1400392ac:	lea    rax,[rcx+0xb]
   1400392b0:	and    rax,0xfffffffffffffffc
   1400392b4:	mov    rdx,rax
   1400392b7:	add    rax,0x4
   1400392bb:	mov    QWORD PTR [rsp+0x68],rax
   1400392c0:	mov    r10b,BYTE PTR [rdi+r15*1+0x2b]
   1400392c5:	mov    r11b,BYTE PTR [rdi+r15*1+0x2a]
   1400392ca:	mov    rax,QWORD PTR [rdi+r15*1+0x10]
   1400392cf:	cmp    r13,rsi
   1400392d2:	jne    0x1400392df
   1400392d4:	mov    ecx,0x80004005
   1400392d9:	call   0x140001430
   1400392de:	int3   
   1400392df:	mov    DWORD PTR [r13+0x3c],esi
   1400392e3:	mov    QWORD PTR [r13+0x28],rsi
   1400392e7:	mov    DWORD PTR [r13+0x40],esi
   1400392eb:	mov    QWORD PTR [r13+0x0],rax
   1400392ef:	mov    ax,WORD PTR [rsp+0x70]
   1400392f4:	mov    WORD PTR [r13+0x54],ax
   1400392f9:	mov    BYTE PTR [r13+0x56],r11b
   1400392fd:	mov    BYTE PTR [r13+0x57],r10b
   140039301:	mov    DWORD PTR [r13+0x50],esi
   140039305:	mov    QWORD PTR [r13+0x10],rsi
   140039309:	mov    QWORD PTR [r13+0x18],rsi
   14003930d:	mov    QWORD PTR [r13+0x20],rsi
   140039311:	mov    QWORD PTR [r13+0x30],rsi
   140039315:	mov    QWORD PTR [r13+0x48],r9
   140039319:	mov    DWORD PTR [r13+0x38],0x1
   140039321:	mov    QWORD PTR [r13+0x8],r8
   140039325:	cmp    rcx,rsi
   140039328:	je     0x140039336
   14003932a:	mov    DWORD PTR [r13+0x38],0x3
   140039332:	mov    QWORD PTR [r13+0x10],rcx
   140039336:	cmp    rdx,rsi
   140039339:	je     0x140039344
   14003933b:	or     DWORD PTR [r13+0x38],0x4
   140039340:	mov    QWORD PTR [r13+0x18],rdx
   140039344:	add    r13,0x58
   140039348:	mov    QWORD PTR [rsp+0x90],r13
   140039350:	mov    rdi,QWORD PTR [rsp+0x68]
   140039355:	jmp    0x14003981a
   14003935a:	cmp    BYTE PTR [rsp+0x60],sil
   14003935f:	jne    0x1400393e7
   140039365:	mov    DWORD PTR [rsp+0xc8],0x89
   140039370:	mov    DWORD PTR [rsp+0xcc],0x8b
   14003937b:	mov    DWORD PTR [rsp+0xc0],esi
   140039382:	mov    DWORD PTR [rsp+0xc4],esi
   140039389:	mov    DWORD PTR [rsp+0x20],0x2
   140039391:	lea    r9,[rsp+0xc0]
   140039399:	lea    r8,[rsp+0xc8]
   1400393a1:	mov    rdx,rcx
   1400393a4:	mov    rcx,r12
   1400393a7:	call   0x140038d58
   1400393ac:	cmp    DWORD PTR [rsp+0xc0],esi
   1400393b3:	je     0x1400393c8
   1400393b5:	movdqu xmm0,XMMWORD PTR [rip+0x33383]        # 0x14006c740
   1400393bd:	movdqu XMMWORD PTR [rsp+0x100],xmm0
   1400393c6:	jmp    0x1400393e2
   1400393c8:	cmp    DWORD PTR [rsp+0xc4],esi
   1400393cf:	je     0x1400393e2
   1400393d1:	movdqu xmm0,XMMWORD PTR [rip+0x33357]        # 0x14006c730
   1400393d9:	movdqu XMMWORD PTR [rsp+0x100],xmm0
   1400393e2:	mov    BYTE PTR [rsp+0x60],0x1
   1400393e7:	mov    QWORD PTR [rsp+0x88],rsi
   1400393ef:	mov    ecx,0x14
   1400393f4:	call   0x14001ac0c
   1400393f9:	mov    rcx,rax
   1400393fc:	mov    QWORD PTR [rsp+0xa8],rax
   140039404:	mov    QWORD PTR [rsp+0x88],rax
   14003940c:	jmp    0x140039450
   14003940e:	xor    esi,esi
   140039410:	mov    r14,QWORD PTR [rsp+0x80]
   140039418:	mov    rbx,QWORD PTR [rsp+0xb0]
   140039420:	mov    r13,QWORD PTR [rsp+0x90]
   140039428:	mov    rcx,QWORD PTR [rsp+0x88]
   140039430:	mov    QWORD PTR [rsp+0xa8],rcx
   140039438:	mov    r12,QWORD PTR [rsp+0xa0]
   140039440:	mov    rax,QWORD PTR [rsp+0xb8]
   140039448:	mov    QWORD PTR [rsp+0x98],rax
   140039450:	cmp    rcx,rsi
   140039453:	jne    0x1400394a8
   140039455:	mov    eax,DWORD PTR [rsp+0x74]
   140039459:	cmp    eax,esi
   14003945b:	jbe    0x140039476
   14003945d:	add    r14,0x28
   140039461:	mov    rdi,rax
   140039464:	mov    rcx,QWORD PTR [r14]
   140039467:	call   0x14001ac50
   14003946c:	add    r14,0x58
   140039470:	sub    rdi,0x1
   140039474:	jne    0x140039464
   140039476:	mov    rcx,QWORD PTR [r12+0x20]
   14003947b:	call   0x14001ac50
   140039480:	mov    QWORD PTR [r12+0x20],rsi
   140039485:	mov    rcx,rbx
   140039488:	call   0x14001ac50
   14003948d:	nop
   14003948e:	mov    rcx,QWORD PTR [rsp+0x78]
   140039493:	cmp    rcx,rsi
   140039496:	je     0x14003949e
   140039498:	mov    rax,QWORD PTR [rcx]
   14003949b:	call   QWORD PTR [rax+0x10]
   14003949e:	mov    eax,0x8007000e
   1400394a3:	jmp    0x14003999c
   1400394a8:	mov    DWORD PTR [rcx],esi
   1400394aa:	movdqu xmm0,XMMWORD PTR [rsp+0x100]
   1400394b3:	movdqu XMMWORD PTR [rcx+0x4],xmm0
   1400394b8:	mov    eax,DWORD PTR [rsp+0x74]
   1400394bc:	lea    r15,[rax+rax*4]
   1400394c0:	shl    r15,0x4
   1400394c4:	mov    rax,QWORD PTR [r12+0x28]
   1400394c9:	mov    WORD PTR [rax+r15*1+0x28],0xd
   1400394d1:	mov    rax,QWORD PTR [r12+0x28]
   1400394d6:	mov    QWORD PTR [rax+r15*1+0x20],0x8
   1400394df:	mov    rdi,QWORD PTR [r12+0x28]
   1400394e4:	movzx  ecx,WORD PTR [rdi+r15*1+0x28]
   1400394ea:	call   0x140033290
   1400394ef:	lea    r8d,[rax-0x1]
   1400394f3:	add    r8,QWORD PTR [rsp+0x68]
   1400394f8:	mov    ecx,eax
   1400394fa:	sub    rcx,0x1
   1400394fe:	not    rcx
   140039501:	and    r8,rcx
   140039504:	mov    QWORD PTR [rsp+0x88],r8
   14003950c:	mov    r9,QWORD PTR [rdi+r15*1+0x20]
   140039511:	lea    rcx,[r9+r8*1+0x7]
   140039516:	and    rcx,0xfffffffffffffff8
   14003951a:	lea    rdx,[rcx+0xb]
   14003951e:	and    rdx,0xfffffffffffffffc
   140039522:	mov    rax,rdx
   140039525:	add    rdx,0x4
   140039529:	mov    QWORD PTR [rsp+0x68],rdx
   14003952e:	mov    rdx,QWORD PTR [rsp+0xa8]
   140039536:	mov    QWORD PTR [rsp+0x50],rdx
   14003953b:	mov    QWORD PTR [rsp+0x48],rax
   140039540:	mov    QWORD PTR [rsp+0x40],rcx
   140039545:	mov    QWORD PTR [rsp+0x38],r8
   14003954a:	mov    DWORD PTR [rsp+0x30],esi
   14003954e:	mov    al,BYTE PTR [rdi+r15*1+0x2b]
   140039553:	mov    BYTE PTR [rsp+0x28],al
   140039557:	mov    al,BYTE PTR [rdi+r15*1+0x2a]
   14003955c:	mov    BYTE PTR [rsp+0x20],al
   140039560:	movzx  r8d,WORD PTR [rdi+r15*1+0x28]
   140039566:	mov    rdx,QWORD PTR [rdi+r15*1+0x10]
   14003956b:	mov    rcx,r13
   14003956e:	call   0x140034d38
   140039573:	add    r13,0x58
   140039577:	mov    QWORD PTR [rsp+0x90],r13
   14003957f:	mov    rdi,QWORD PTR [rsp+0x68]
   140039584:	mov    r8,QWORD PTR [rsp+0x88]
   14003958c:	jmp    0x14003981a
   140039591:	cmp    WORD PTR [rdx+r15*1+0x28],0xd
   140039598:	jne    0x140039747
   14003959e:	mov    QWORD PTR [rsp+0x88],rsi
   1400395a6:	mov    ecx,0x14
   1400395ab:	call   0x14001ac0c
   1400395b0:	mov    rcx,rax
   1400395b3:	mov    QWORD PTR [rsp+0xa8],rax
   1400395bb:	mov    QWORD PTR [rsp+0x88],rax
   1400395c3:	jmp    0x140039607
   1400395c5:	xor    esi,esi
   1400395c7:	mov    r14,QWORD PTR [rsp+0x80]
   1400395cf:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400395d7:	mov    r13,QWORD PTR [rsp+0x90]
   1400395df:	mov    rcx,QWORD PTR [rsp+0x88]
   1400395e7:	mov    QWORD PTR [rsp+0xa8],rcx
   1400395ef:	mov    r12,QWORD PTR [rsp+0xa0]
   1400395f7:	mov    rax,QWORD PTR [rsp+0xb8]
   1400395ff:	mov    QWORD PTR [rsp+0x98],rax
   140039607:	cmp    rcx,rsi
   14003960a:	jne    0x14003965f
   14003960c:	mov    eax,DWORD PTR [rsp+0x74]
   140039610:	cmp    eax,esi
   140039612:	jbe    0x14003962d
   140039614:	add    r14,0x28
   140039618:	mov    rdi,rax
   14003961b:	mov    rcx,QWORD PTR [r14]
   14003961e:	call   0x14001ac50
   140039623:	add    r14,0x58
   140039627:	sub    rdi,0x1
   14003962b:	jne    0x14003961b
   14003962d:	mov    rcx,QWORD PTR [r12+0x20]
   140039632:	call   0x14001ac50
   140039637:	mov    QWORD PTR [r12+0x20],rsi
   14003963c:	mov    rcx,rbx
   14003963f:	call   0x14001ac50
   140039644:	nop
   140039645:	mov    rcx,QWORD PTR [rsp+0x78]
   14003964a:	cmp    rcx,rsi
   14003964d:	je     0x140039655
   14003964f:	mov    rax,QWORD PTR [rcx]
   140039652:	call   QWORD PTR [rax+0x10]
   140039655:	mov    eax,0x8007000e
   14003965a:	jmp    0x14003999c
   14003965f:	mov    DWORD PTR [rcx],esi
   140039661:	movdqu xmm0,XMMWORD PTR [rip+0x330b7]        # 0x14006c720
   140039669:	movdqu XMMWORD PTR [rcx+0x4],xmm0
   14003966e:	mov    eax,DWORD PTR [rsp+0x74]
   140039672:	lea    r15,[rax+rax*4]
   140039676:	shl    r15,0x4
   14003967a:	mov    rax,QWORD PTR [r12+0x28]
   14003967f:	mov    WORD PTR [rax+r15*1+0x28],0xd
   140039687:	mov    rax,QWORD PTR [r12+0x28]
   14003968c:	mov    QWORD PTR [rax+r15*1+0x20],0x8
   140039695:	mov    rdi,QWORD PTR [r12+0x28]
   14003969a:	movzx  ecx,WORD PTR [rdi+r15*1+0x28]
   1400396a0:	call   0x140033290
   1400396a5:	lea    r8d,[rax-0x1]
   1400396a9:	add    r8,QWORD PTR [rsp+0x68]
   1400396ae:	mov    ecx,eax
   1400396b0:	sub    rcx,0x1
   1400396b4:	not    rcx
   1400396b7:	and    r8,rcx
   1400396ba:	mov    QWORD PTR [rsp+0x88],r8
   1400396c2:	mov    r9,QWORD PTR [rdi+r15*1+0x20]
   1400396c7:	lea    rcx,[r9+r8*1+0x7]
   1400396cc:	and    rcx,0xfffffffffffffff8
   1400396d0:	lea    rdx,[rcx+0xb]
   1400396d4:	and    rdx,0xfffffffffffffffc
   1400396d8:	mov    rax,rdx
   1400396db:	add    rdx,0x4
   1400396df:	mov    QWORD PTR [rsp+0x68],rdx
   1400396e4:	mov    rdx,QWORD PTR [rsp+0xa8]
   1400396ec:	mov    QWORD PTR [rsp+0x50],rdx
   1400396f1:	mov    QWORD PTR [rsp+0x48],rax
   1400396f6:	mov    QWORD PTR [rsp+0x40],rcx
   1400396fb:	mov    QWORD PTR [rsp+0x38],r8
   140039700:	mov    DWORD PTR [rsp+0x30],esi
   140039704:	mov    al,BYTE PTR [rdi+r15*1+0x2b]
   140039709:	mov    BYTE PTR [rsp+0x28],al
   14003970d:	mov    al,BYTE PTR [rdi+r15*1+0x2a]
   140039712:	mov    BYTE PTR [rsp+0x20],al
   140039716:	movzx  r8d,WORD PTR [rdi+r15*1+0x28]
   14003971c:	mov    rdx,QWORD PTR [rdi+r15*1+0x10]
   140039721:	mov    rcx,r13
   140039724:	call   0x140034d38
   140039729:	add    r13,0x58
   14003972d:	mov    QWORD PTR [rsp+0x90],r13
   140039735:	mov    rdi,QWORD PTR [rsp+0x68]
   14003973a:	mov    r8,QWORD PTR [rsp+0x88]
   140039742:	jmp    0x14003981a
   140039747:	cmp    WORD PTR [rdx+r15*1+0x28],0x81
   14003974f:	jne    0x140039757
   140039751:	add    QWORD PTR [rdx+r15*1+0x20],0x1
   140039757:	mov    rcx,QWORD PTR [r12+0x28]
   14003975c:	cmp    WORD PTR [rcx+r15*1+0x28],0x82
   140039764:	jne    0x140039775
   140039766:	mov    rax,QWORD PTR [rcx+r15*1+0x20]
   14003976b:	lea    rax,[rax+rax*1+0x2]
   140039770:	mov    QWORD PTR [rcx+r15*1+0x20],rax
   140039775:	mov    rdi,QWORD PTR [r12+0x28]
   14003977a:	movzx  ecx,WORD PTR [rdi+r15*1+0x28]
   140039780:	call   0x140033290
   140039785:	lea    r8d,[rax-0x1]
   140039789:	add    r8,QWORD PTR [rsp+0x68]
   14003978e:	mov    ecx,eax
   140039790:	sub    rcx,0x1
   140039794:	not    rcx
   140039797:	and    r8,rcx
   14003979a:	mov    QWORD PTR [rsp+0x88],r8
   1400397a2:	mov    r9,QWORD PTR [rdi+r15*1+0x20]
   1400397a7:	lea    rcx,[r9+r8*1+0x7]
   1400397ac:	and    rcx,0xfffffffffffffff8
   1400397b0:	lea    rdx,[rcx+0xb]
   1400397b4:	and    rdx,0xfffffffffffffffc
   1400397b8:	mov    rax,rdx
   1400397bb:	add    rdx,0x4
   1400397bf:	mov    QWORD PTR [rsp+0x68],rdx
   1400397c4:	mov    QWORD PTR [rsp+0x50],rsi
   1400397c9:	mov    QWORD PTR [rsp+0x48],rax
   1400397ce:	mov    QWORD PTR [rsp+0x40],rcx
   1400397d3:	mov    QWORD PTR [rsp+0x38],r8
   1400397d8:	mov    DWORD PTR [rsp+0x30],esi
   1400397dc:	mov    al,BYTE PTR [rdi+r15*1+0x2b]
   1400397e1:	mov    BYTE PTR [rsp+0x28],al
   1400397e5:	mov    al,BYTE PTR [rdi+r15*1+0x2a]
   1400397ea:	mov    BYTE PTR [rsp+0x20],al
   1400397ee:	movzx  r8d,WORD PTR [rdi+r15*1+0x28]
   1400397f4:	mov    rdx,QWORD PTR [rdi+r15*1+0x10]
   1400397f9:	mov    rcx,r13
   1400397fc:	call   0x140034d38
   140039801:	add    r13,0x58
   140039805:	mov    QWORD PTR [rsp+0x90],r13
   14003980d:	mov    rdi,QWORD PTR [rsp+0x68]
   140039812:	mov    r8,QWORD PTR [rsp+0x88]
   14003981a:	mov    rax,QWORD PTR [r12+0x28]
   14003981f:	mov    QWORD PTR [rax+r15*1+0x8],r8
   140039824:	mov    eax,DWORD PTR [rsp+0x74]
   140039828:	add    eax,0x1
   14003982b:	mov    DWORD PTR [rsp+0x74],eax
   14003982f:	mov    rcx,QWORD PTR [rsp+0x98]
   140039837:	jmp    0x140039126
   14003983c:	cmp    QWORD PTR [r12],rsi
   140039840:	jne    0x1400398b3
   140039842:	mov    edx,0x1
   140039847:	mov    rcx,r12
   14003984a:	call   0x140033170
   14003984f:	mov    r13d,eax
   140039852:	cmp    eax,esi
   140039854:	jge    0x1400398ab
   140039856:	mov    edi,esi
   140039858:	cmp    QWORD PTR [r12+0x18],rsi
   14003985d:	jbe    0x14003987b
   14003985f:	add    r14,0x28
   140039863:	mov    rcx,QWORD PTR [r14]
   140039866:	call   0x14001ac50
   14003986b:	add    edi,0x1
   14003986e:	add    r14,0x58
   140039872:	mov    eax,edi
   140039874:	cmp    rax,QWORD PTR [r12+0x18]
   140039879:	jb     0x140039863
   14003987b:	mov    rcx,QWORD PTR [r12+0x20]
   140039880:	call   0x14001ac50
   140039885:	mov    QWORD PTR [r12+0x20],rsi
   14003988a:	mov    rcx,rbx
   14003988d:	call   0x14001ac50
   140039892:	nop
   140039893:	mov    rcx,QWORD PTR [rsp+0x78]
   140039898:	cmp    rcx,rsi
   14003989b:	je     0x1400398a3
   14003989d:	mov    rax,QWORD PTR [rcx]
   1400398a0:	call   QWORD PTR [rax+0x10]
   1400398a3:	mov    eax,r13d
   1400398a6:	jmp    0x14003999c
   1400398ab:	mov    rax,QWORD PTR [r12]
   1400398af:	mov    BYTE PTR [rax+0x8],0x1
   1400398b3:	mov    QWORD PTR [r12+0x10],rsi
   1400398b8:	mov    rcx,rdi
   1400398bb:	call   0x14001ac0c
   1400398c0:	mov    QWORD PTR [r12+0x10],rax
   1400398c5:	jmp    0x1400398e6
   1400398c7:	xor    esi,esi
   1400398c9:	mov    rdi,QWORD PTR [rsp+0x68]
   1400398ce:	mov    r14,QWORD PTR [rsp+0x80]
   1400398d6:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400398de:	mov    r12,QWORD PTR [rsp+0xa0]
   1400398e6:	mov    rcx,QWORD PTR [r12+0x10]
   1400398eb:	cmp    rcx,rsi
   1400398ee:	jne    0x140039944
   1400398f0:	mov    edi,esi
   1400398f2:	cmp    QWORD PTR [r12+0x18],rsi
   1400398f7:	jbe    0x140039915
   1400398f9:	add    r14,0x28
   1400398fd:	mov    rcx,QWORD PTR [r14]
   140039900:	call   0x14001ac50
   140039905:	add    edi,0x1
   140039908:	add    r14,0x58
   14003990c:	mov    eax,edi
   14003990e:	cmp    rax,QWORD PTR [r12+0x18]
   140039913:	jb     0x1400398fd
   140039915:	mov    rcx,QWORD PTR [r12+0x20]
   14003991a:	call   0x14001ac50
   14003991f:	mov    QWORD PTR [r12+0x20],rsi
   140039924:	mov    rcx,rbx
   140039927:	call   0x14001ac50
   14003992c:	nop
   14003992d:	mov    rcx,QWORD PTR [rsp+0x78]
   140039932:	cmp    rcx,rsi
   140039935:	je     0x14003993d
   140039937:	mov    rax,QWORD PTR [rcx]
   14003993a:	call   QWORD PTR [rax+0x10]
   14003993d:	mov    eax,0x8007000e
   140039942:	jmp    0x14003999c
   140039944:	mov    r8,rdi
   140039947:	xor    edx,edx
   140039949:	call   0x140047720
   14003994e:	mov    r11,QWORD PTR [rsp+0x78]
   140039953:	mov    QWORD PTR [rsp+0x20],r11
   140039958:	mov    r9,rdi
   14003995b:	mov    r8,QWORD PTR [r12]
   14003995f:	mov    rdx,QWORD PTR [r12+0x18]
   140039964:	mov    rcx,r14
   140039967:	call   0x140033208
   14003996c:	mov    edi,eax
   14003996e:	cmp    eax,esi
   140039970:	jge    0x140039981
   140039972:	mov    rcx,QWORD PTR [r12+0x20]
   140039977:	call   0x14001ac50
   14003997c:	mov    QWORD PTR [r12+0x20],rsi
   140039981:	mov    rcx,rbx
   140039984:	call   0x14001ac50
   140039989:	nop
   14003998a:	mov    rcx,QWORD PTR [rsp+0x78]
   14003998f:	cmp    rcx,rsi
   140039992:	je     0x14003999a
   140039994:	mov    rax,QWORD PTR [rcx]
   140039997:	call   QWORD PTR [rax+0x10]
   14003999a:	mov    eax,edi
   14003999c:	mov    rcx,QWORD PTR [rsp+0x110]
   1400399a4:	xor    rcx,rsp
   1400399a7:	call   0x140046470
   1400399ac:	lea    r11,[rsp+0x120]
   1400399b4:	mov    rbx,QWORD PTR [r11+0x40]
   1400399b8:	mov    rsi,QWORD PTR [r11+0x48]
   1400399bc:	mov    rsp,r11
   1400399bf:	pop    r15
   1400399c1:	pop    r14
   1400399c3:	pop    r13
   1400399c5:	pop    r12
   1400399c7:	pop    rdi
   1400399c8:	ret    
   1400399c9:	int3   
   1400399ca:	int3   
   1400399cb:	int3   
   1400399cc:	int3   
   1400399cd:	int3   
   1400399ce:	int3   
   1400399cf:	int3   
   1400399d0:	int3   
   1400399d1:	int3   
   1400399d2:	int3   
   1400399d3:	int3   
   1400399d4:	int3   
   1400399d5:	int3   
   1400399d6:	int3   
   1400399d7:	int3   
   1400399d8:	rex push rbp
   1400399da:	sub    rsp,0x20
   1400399de:	mov    rbp,rdx
   1400399e1:	lea    rcx,[rbp+0x78]
   1400399e5:	call   0x140034ddc
   1400399ea:	add    rsp,0x20
   1400399ee:	pop    rbp
   1400399ef:	ret    
   1400399f0:	int3   
   1400399f1:	int3   
   1400399f2:	int3   
   1400399f3:	int3   
   1400399f4:	int3   
   1400399f5:	int3   
   1400399f6:	int3   
   1400399f7:	int3   
   1400399f8:	rex push rbp
   1400399fa:	sub    rsp,0x20
   1400399fe:	mov    rbp,rdx
   140039a01:	lea    rcx,[rbp+0x80]
   140039a08:	call   0x140034e6c
   140039a0d:	add    rsp,0x20
   140039a11:	pop    rbp
   140039a12:	ret    
   140039a13:	int3   
   140039a14:	int3   
   140039a15:	int3   
   140039a16:	int3   
   140039a17:	int3   
   140039a18:	mov    QWORD PTR [rsp+0x10],rdx
   140039a1d:	push   rbp
   140039a1e:	sub    rsp,0x60
   140039a22:	mov    rbp,rdx
   140039a25:	mov    rcx,QWORD PTR [rbp+0xf8]
   140039a2c:	call   0x1400207b8
   140039a31:	nop
   140039a32:	lea    rax,[rip+0xfffffffffffff61d]        # 0x140039056
   140039a39:	jmp    0x140039a3b
   140039a3b:	add    rsp,0x60
   140039a3f:	pop    rbp
   140039a40:	ret    
   140039a41:	int3   
   140039a42:	int3   
   140039a43:	int3   
   140039a44:	int3   
   140039a45:	int3   
   140039a46:	int3   
   140039a47:	int3   
   140039a48:	rex push rbp
   140039a4a:	sub    rsp,0x20
   140039a4e:	mov    rbp,rdx
   140039a51:	lea    rcx,[rbp+0xb0]
   140039a58:	call   0x140037308
   140039a5d:	add    rsp,0x20
   140039a61:	pop    rbp
   140039a62:	ret    
   140039a63:	int3   
   140039a64:	int3   
   140039a65:	int3   
   140039a66:	int3   
   140039a67:	int3   
   140039a68:	mov    QWORD PTR [rsp+0x10],rdx
   140039a6d:	push   rbp
   140039a6e:	sub    rsp,0x60
   140039a72:	mov    rbp,rdx
   140039a75:	mov    rcx,QWORD PTR [rbp+0xe8]
   140039a7c:	call   0x1400207b8
   140039a81:	nop
   140039a82:	lea    rax,[rip+0xfffffffffffff635]        # 0x1400390be
   140039a89:	jmp    0x140039a8b
   140039a8b:	add    rsp,0x60
   140039a8f:	pop    rbp
   140039a90:	ret    
   140039a91:	int3   
   140039a92:	int3   
   140039a93:	int3   
   140039a94:	int3   
   140039a95:	int3   
   140039a96:	int3   
   140039a97:	int3   
   140039a98:	mov    QWORD PTR [rsp+0x10],rdx
   140039a9d:	push   rbp
   140039a9e:	sub    rsp,0x60
   140039aa2:	mov    rbp,rdx
   140039aa5:	mov    rcx,QWORD PTR [rbp+0xd8]
   140039aac:	call   0x1400207b8
   140039ab1:	nop
   140039ab2:	lea    rax,[rip+0xfffffffffffff955]        # 0x14003940e
   140039ab9:	jmp    0x140039abb
   140039abb:	add    rsp,0x60
   140039abf:	pop    rbp
   140039ac0:	ret    
   140039ac1:	int3   
   140039ac2:	int3   
   140039ac3:	int3   
   140039ac4:	int3   
   140039ac5:	int3   
   140039ac6:	int3   
   140039ac7:	int3   
   140039ac8:	mov    QWORD PTR [rsp+0x10],rdx
   140039acd:	push   rbp
   140039ace:	sub    rsp,0x60
   140039ad2:	mov    rbp,rdx
   140039ad5:	mov    rcx,QWORD PTR [rbp+0xe0]
   140039adc:	call   0x1400207b8
   140039ae1:	nop
   140039ae2:	lea    rax,[rip+0xfffffffffffffadc]        # 0x1400395c5
   140039ae9:	jmp    0x140039aeb
   140039aeb:	add    rsp,0x60
   140039aef:	pop    rbp
   140039af0:	ret    
   140039af1:	int3   
   140039af2:	int3   
   140039af3:	int3   
   140039af4:	int3   
   140039af5:	int3   
   140039af6:	int3   
   140039af7:	int3   
   140039af8:	mov    QWORD PTR [rsp+0x10],rdx
   140039afd:	push   rbp
   140039afe:	sub    rsp,0x60
   140039b02:	mov    rbp,rdx
   140039b05:	mov    rcx,QWORD PTR [rbp+0xf0]
   140039b0c:	call   0x1400207b8
   140039b11:	nop
   140039b12:	lea    rax,[rip+0xfffffffffffffdae]        # 0x1400398c7
   140039b19:	jmp    0x140039b1b
   140039b1b:	add    rsp,0x60
   140039b1f:	pop    rbp
   140039b20:	ret    
   140039b21:	int3   
   140039b22:	int3   
   140039b23:	int3   
   140039b24:	mov    rax,rsp
   140039b27:	push   rsi
   140039b28:	push   rdi
   140039b29:	push   r13
   140039b2b:	push   r14
   140039b2d:	push   r15
   140039b2f:	sub    rsp,0x110
   140039b36:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   140039b42:	mov    QWORD PTR [rax+0x10],rbx
   140039b46:	mov    QWORD PTR [rax+0x18],rbp
   140039b4a:	mov    rax,QWORD PTR [rip+0x4d21f]        # 0x140086d70
   140039b51:	xor    rax,rsp
   140039b54:	mov    QWORD PTR [rsp+0x100],rax
   140039b5c:	mov    rdi,rcx
   140039b5f:	mov    r15,QWORD PTR [rcx+0x28]
   140039b63:	mov    rax,QWORD PTR [rcx+0x20]
   140039b67:	mov    QWORD PTR [rsp+0x48],rax
   140039b6c:	xor    ebx,ebx
   140039b6e:	cmp    QWORD PTR [rcx+0x90],rbx
   140039b75:	je     0x140039dd2
   140039b7b:	mov    rcx,QWORD PTR [rcx+0x98]
   140039b82:	mov    rax,QWORD PTR [rcx]
   140039b85:	lea    r8,[rsp+0x40]
   140039b8a:	lea    rdx,[rip+0x36a27]        # 0x1400705b8
   140039b91:	call   QWORD PTR [rax+0x28]
   140039b94:	mov    r14d,eax
   140039b97:	cmp    eax,ebx
   140039b99:	jl     0x14003a01f
   140039b9f:	mov    rcx,QWORD PTR [rsp+0x40]
   140039ba4:	mov    rax,QWORD PTR [rcx]
   140039ba7:	lea    r8,[rsp+0x38]
   140039bac:	lea    rdx,[rip+0x369e5]        # 0x140070598
   140039bb3:	call   QWORD PTR [rax]
   140039bb5:	cmp    eax,ebx
   140039bb7:	jl     0x140039c0c
   140039bb9:	mov    QWORD PTR [rsp+0x30],rbx
   140039bbe:	mov    rcx,QWORD PTR [rsp+0x38]
   140039bc3:	mov    rax,QWORD PTR [rcx]
   140039bc6:	lea    r8,[rsp+0x30]
   140039bcb:	lea    rdx,[rip+0x36b06]        # 0x1400706d8
   140039bd2:	call   QWORD PTR [rax+0x20]
   140039bd5:	cmp    eax,ebx
   140039bd7:	jl     0x140039c01
   140039bd9:	mov    rcx,QWORD PTR [rsp+0x30]
   140039bde:	mov    rax,QWORD PTR [rcx]
   140039be1:	lea    r8,[rdi+0xb0]
   140039be8:	mov    rdx,QWORD PTR [rdi+0x8]
   140039bec:	add    rdx,0x178
   140039bf3:	call   QWORD PTR [rax+0x28]
   140039bf6:	mov    rcx,QWORD PTR [rsp+0x30]
   140039bfb:	mov    rax,QWORD PTR [rcx]
   140039bfe:	call   QWORD PTR [rax+0x10]
   140039c01:	mov    rcx,QWORD PTR [rsp+0x38]
   140039c06:	mov    rax,QWORD PTR [rcx]
   140039c09:	call   QWORD PTR [rax+0x10]
   140039c0c:	mov    ecx,0x28
   140039c11:	call   0x14001ac0c
   140039c16:	mov    rsi,rax
   140039c19:	mov    QWORD PTR [rsp+0x38],rax
   140039c1e:	cmp    rax,rbx
   140039c21:	je     0x140039c62
   140039c23:	mov    rbp,QWORD PTR [rsp+0x40]
   140039c28:	mov    QWORD PTR [rax],rbx
   140039c2b:	mov    QWORD PTR [rax+0x8],rbx
   140039c2f:	mov    QWORD PTR [rax+0x20],rbx
   140039c33:	mov    QWORD PTR [rax+0x10],rbx
   140039c37:	mov    QWORD PTR [rax+0x18],rbx
   140039c3b:	cmp    QWORD PTR [rax],rbp
   140039c3e:	je     0x140039c60
   140039c40:	cmp    rbp,rbx
   140039c43:	je     0x140039c4f
   140039c45:	mov    rax,QWORD PTR [rbp+0x0]
   140039c49:	mov    rcx,rbp
   140039c4c:	call   QWORD PTR [rax+0x8]
   140039c4f:	mov    rcx,QWORD PTR [rsi]
   140039c52:	cmp    rcx,rbx
   140039c55:	je     0x140039c5d
   140039c57:	mov    rax,QWORD PTR [rcx]
   140039c5a:	call   QWORD PTR [rax+0x10]
   140039c5d:	mov    QWORD PTR [rsi],rbp
   140039c60:	jmp    0x140039c65
   140039c62:	mov    rsi,rbx
   140039c65:	mov    QWORD PTR [rdi+0xa0],rsi
   140039c6c:	mov    rcx,QWORD PTR [rsp+0x40]
   140039c71:	mov    rax,QWORD PTR [rcx]
   140039c74:	call   QWORD PTR [rax+0x10]
   140039c77:	mov    r8,QWORD PTR [rdi+0xa0]
   140039c7e:	mov    rcx,QWORD PTR [r8]
   140039c81:	cmp    rcx,rbx
   140039c84:	je     0x140039c96
   140039c86:	mov    rax,QWORD PTR [rcx]
   140039c89:	add    r8,0x8
   140039c8d:	lea    rdx,[rip+0x32394]        # 0x14006c028
   140039c94:	call   QWORD PTR [rax]
   140039c96:	mov    ecx,0x48
   140039c9b:	call   0x14001ac0c
   140039ca0:	mov    rcx,rax
   140039ca3:	cmp    rax,rbx
   140039ca6:	je     0x140039ccf
   140039ca8:	mov    QWORD PTR [rax],rbx
   140039cab:	mov    DWORD PTR [rax+0x8],ebx
   140039cae:	mov    QWORD PTR [rax+0x10],rbx
   140039cb2:	mov    QWORD PTR [rax+0x18],rbx
   140039cb6:	mov    QWORD PTR [rax+0x28],rbx
   140039cba:	mov    QWORD PTR [rax+0x30],rbx
   140039cbe:	mov    DWORD PTR [rax+0x3c],ebx
   140039cc1:	mov    QWORD PTR [rax+0x40],0x1f40
   140039cc9:	mov    QWORD PTR [rax+0x20],rbx
   140039ccd:	jmp    0x140039cd2
   140039ccf:	mov    rcx,rbx
   140039cd2:	mov    QWORD PTR [rdi+0xa8],rcx
   140039cd9:	mov    rax,QWORD PTR [rdi+0xa0]
   140039ce0:	mov    rdx,QWORD PTR [rax]
   140039ce3:	call   0x140038e98
   140039ce8:	mov    r11,QWORD PTR [rdi+0xa8]
   140039cef:	mov    rax,QWORD PTR [rdi+0xa0]
   140039cf6:	mov    QWORD PTR [rax+0x10],r11
   140039cfa:	mov    rax,QWORD PTR [rdi+0xa8]
   140039d01:	mov    rcx,QWORD PTR [rax+0x18]
   140039d05:	mov    QWORD PTR [rdi+0x20],rcx
   140039d09:	cmp    rcx,0x1ffffff
   140039d10:	jbe    0x140039d1c
   140039d12:	mov    eax,0x8007000e
   140039d17:	jmp    0x14003a01f
   140039d1c:	shl    rcx,0x6
   140039d20:	call   QWORD PTR [rip+0x2aef2]        # 0x140064c18
   140039d26:	mov    QWORD PTR [rdi+0x28],rax
   140039d2a:	mov    ecx,ebx
   140039d2c:	cmp    rax,rbx
   140039d2f:	setne  cl
   140039d32:	cmp    ecx,ebx
   140039d34:	jne    0x140039d3c
   140039d36:	call   0x1400208b0
   140039d3b:	int3   
   140039d3c:	mov    r8,QWORD PTR [rdi+0x20]
   140039d40:	shl    r8,0x6
   140039d44:	xor    edx,edx
   140039d46:	mov    rcx,rax
   140039d49:	call   0x140047720
   140039d4e:	mov    rsi,QWORD PTR [rdi+0xa0]
   140039d55:	cmp    QWORD PTR [rsi+0x18],rbx
   140039d59:	je     0x140039d7d
   140039d5b:	mov    rcx,QWORD PTR [rsi]
   140039d5e:	mov    rax,QWORD PTR [rcx]
   140039d61:	mov    QWORD PTR [rsp+0x28],rbx
   140039d66:	mov    QWORD PTR [rsp+0x20],rbx
   140039d6b:	xor    r9d,r9d
   140039d6e:	lea    r8,[rsi+0x18]
   140039d72:	lea    edx,[r9+0x1]
   140039d76:	call   QWORD PTR [rax+0x30]
   140039d79:	mov    QWORD PTR [rsi+0x18],rbx
   140039d7d:	mov    rcx,QWORD PTR [rsi]
   140039d80:	mov    rax,QWORD PTR [rcx]
   140039d83:	xor    edx,edx
   140039d85:	call   QWORD PTR [rax+0x38]
   140039d88:	cmp    eax,ebx
   140039d8a:	jl     0x140039d99
   140039d8c:	mov    r8b,0x1
   140039d8f:	xor    edx,edx
   140039d91:	mov    rcx,rsi
   140039d94:	call   0x1400373e0
   140039d99:	mov    rcx,QWORD PTR [rdi+0xa0]
   140039da0:	lea    rsi,[rcx+0x18]
   140039da4:	cmp    QWORD PTR [rsi],rbx
   140039da7:	je     0x140039f4c
   140039dad:	mov    rcx,QWORD PTR [rcx]
   140039db0:	mov    rax,QWORD PTR [rcx]
   140039db3:	mov    QWORD PTR [rsp+0x28],rbx
   140039db8:	mov    QWORD PTR [rsp+0x20],rbx
   140039dbd:	xor    r9d,r9d
   140039dc0:	mov    r8,rsi
   140039dc3:	lea    edx,[r9+0x1]
   140039dc7:	call   QWORD PTR [rax+0x30]
   140039dca:	mov    QWORD PTR [rsi],rbx
   140039dcd:	jmp    0x140039f4c
   140039dd2:	mov    rcx,QWORD PTR [rcx+0x10]
   140039dd6:	cmp    rcx,rbx
   140039dd9:	jne    0x140039de2
   140039ddb:	xor    eax,eax
   140039ddd:	jmp    0x14003a01f
   140039de2:	mov    rax,QWORD PTR [rcx]
   140039de5:	lea    r9,[rsp+0x38]
   140039dea:	lea    r8,[rsp+0x30]
   140039def:	lea    rdx,[rip+0x365b2]        # 0x1400703a8
   140039df6:	call   QWORD PTR [rax+0x18]
   140039df9:	cmp    eax,ebx
   140039dfb:	jl     0x14003a01f
   140039e01:	lea    r8,[rip+0x36cd8]        # 0x140070ae0
   140039e08:	lea    rdx,[rsp+0x90]
   140039e10:	mov    rcx,rdi
   140039e13:	call   0x1400349f0
   140039e18:	mov    DWORD PTR [rsp+0xb0],ebx
   140039e1f:	mov    DWORD PTR [rsp+0xb4],ebx
   140039e26:	mov    DWORD PTR [rsp+0xbc],0x20
   140039e31:	or     esi,0xffffffff
   140039e34:	mov    DWORD PTR [rsp+0xb8],esi
   140039e3b:	mov    DWORD PTR [rsp+0xc0],ebx
   140039e42:	mov    DWORD PTR [rsp+0xc4],0x1fb
   140039e4d:	lea    r8,[rip+0x36c6c]        # 0x140070ac0
   140039e54:	lea    rdx,[rsp+0xc8]
   140039e5c:	mov    rcx,rdi
   140039e5f:	call   0x1400349f0
   140039e64:	mov    DWORD PTR [rsp+0xe8],0x28
   140039e6f:	mov    DWORD PTR [rsp+0xec],ebx
   140039e76:	mov    DWORD PTR [rsp+0xf4],0x30
   140039e81:	mov    DWORD PTR [rsp+0xf0],esi
   140039e88:	mov    DWORD PTR [rsp+0xf8],ebx
   140039e8f:	mov    DWORD PTR [rsp+0xfc],0x1e
   140039e9a:	mov    rcx,QWORD PTR [rsp+0x30]
   140039e9f:	mov    rax,QWORD PTR [rcx]
   140039ea2:	mov    DWORD PTR [rsp+0x20],ebx
   140039ea6:	mov    r9d,0x40
   140039eac:	lea    r8,[rsp+0x90]
   140039eb4:	lea    edx,[r9-0x3e]
   140039eb8:	call   QWORD PTR [rax+0x20]
   140039ebb:	mov    esi,eax
   140039ebd:	cmp    eax,ebx
   140039ebf:	jge    0x140039ed3
   140039ec1:	mov    rcx,QWORD PTR [rsp+0x30]
   140039ec6:	mov    rdx,QWORD PTR [rcx]
   140039ec9:	call   QWORD PTR [rdx+0x10]
   140039ecc:	mov    eax,esi
   140039ece:	jmp    0x14003a01f
   140039ed3:	mov    rax,QWORD PTR [rsp+0x38]
   140039ed8:	mov    QWORD PTR [rsp+0x50],rax
   140039edd:	mov    DWORD PTR [rsp+0x58],0x1
   140039ee5:	mov    QWORD PTR [rsp+0x60],rbx
   140039eea:	mov    QWORD PTR [rsp+0x68],rbx
   140039eef:	mov    QWORD PTR [rsp+0x70],rbx
   140039ef4:	mov    rcx,QWORD PTR [rsp+0x30]
   140039ef9:	mov    rax,QWORD PTR [rcx]
   140039efc:	lea    r8,[rsp+0x50]
   140039f01:	mov    rdx,rbx
   140039f04:	call   QWORD PTR [rax+0x30]
   140039f07:	mov    r14d,eax
   140039f0a:	cmp    eax,ebx
   140039f0c:	jge    0x140039f21
   140039f0e:	mov    rcx,QWORD PTR [rsp+0x30]
   140039f13:	mov    rax,QWORD PTR [rcx]
   140039f16:	call   QWORD PTR [rax+0x10]
   140039f19:	mov    eax,r14d
   140039f1c:	jmp    0x14003a01f
   140039f21:	mov    rax,QWORD PTR [rsp+0x60]
   140039f26:	mov    QWORD PTR [rdi+0x28],rax
   140039f2a:	mov    rcx,QWORD PTR [rsp+0x78]
   140039f2f:	mov    QWORD PTR [rsp+0x38],rcx
   140039f34:	mov    rax,QWORD PTR [rsp+0x68]
   140039f39:	mov    QWORD PTR [rdi+0x68],rax
   140039f3d:	mov    QWORD PTR [rdi+0x20],rcx
   140039f41:	mov    rcx,QWORD PTR [rsp+0x30]
   140039f46:	mov    rax,QWORD PTR [rcx]
   140039f49:	call   QWORD PTR [rax+0x10]
   140039f4c:	mov    ebp,ebx
   140039f4e:	cmp    QWORD PTR [rdi+0x20],rbx
   140039f52:	jle    0x140039f99
   140039f54:	mov    rsi,rbx
   140039f57:	mov    ecx,0x38
   140039f5c:	call   0x14001ac0c
   140039f61:	mov    QWORD PTR [rsp+0x38],rax
   140039f66:	cmp    rax,rbx
   140039f69:	je     0x140039f7d
   140039f6b:	mov    edx,0xa
   140039f70:	mov    rcx,rax
   140039f73:	call   0x14003ec54
   140039f78:	mov    r11,rax
   140039f7b:	jmp    0x140039f80
   140039f7d:	mov    r11,rbx
   140039f80:	mov    rax,QWORD PTR [rdi+0x28]
   140039f84:	mov    QWORD PTR [rsi+rax*1+0x38],r11
   140039f89:	add    ebp,0x1
   140039f8c:	add    rsi,0x40
   140039f90:	movsxd rax,ebp
   140039f93:	cmp    rax,QWORD PTR [rdi+0x20]
   140039f97:	jl     0x140039f57
   140039f99:	cmp    r15,rbx
   140039f9c:	je     0x14003a01c
   140039f9e:	mov    r13d,ebx
   140039fa1:	cmp    QWORD PTR [rsp+0x48],rbx
   140039fa6:	jle    0x14003a013
   140039fa8:	lea    rbp,[r15+0x38]
   140039fac:	mov    rax,QWORD PTR [rbp+0x0]
   140039fb0:	mov    rsi,QWORD PTR [rax+0x8]
   140039fb4:	cmp    rsi,rbx
   140039fb7:	je     0x140039fdc
   140039fb9:	mov    rdx,rsi
   140039fbc:	cmp    rsi,rbx
   140039fbf:	je     0x14003a00d
   140039fc1:	mov    rsi,QWORD PTR [rsi]
   140039fc4:	mov    rax,QWORD PTR [rdi]
   140039fc7:	mov    r8d,0x1
   140039fcd:	mov    rdx,QWORD PTR [rdx+0x10]
   140039fd1:	mov    rcx,rdi
   140039fd4:	call   QWORD PTR [rax+0x10]
   140039fd7:	cmp    rsi,rbx
   140039fda:	jne    0x140039fb9
   140039fdc:	mov    rcx,QWORD PTR [rbp+0x0]
   140039fe0:	call   0x14003eb34
   140039fe5:	mov    rcx,QWORD PTR [rbp+0x0]
   140039fe9:	cmp    rcx,rbx
   140039fec:	je     0x140039ff9
   140039fee:	mov    rax,QWORD PTR [rcx]
   140039ff1:	mov    edx,0x1
   140039ff6:	call   QWORD PTR [rax+0x8]
   140039ff9:	add    r13d,0x1
   140039ffd:	add    rbp,0x40
   14003a001:	movsxd rax,r13d
   14003a004:	cmp    rax,QWORD PTR [rsp+0x48]
   14003a009:	jge    0x14003a013
   14003a00b:	jmp    0x140039fac
   14003a00d:	call   0x1400208f8
   14003a012:	int3   
   14003a013:	mov    rcx,r15
   14003a016:	call   QWORD PTR [rip+0x2ac04]        # 0x140064c20
   14003a01c:	mov    eax,r14d
   14003a01f:	mov    rcx,QWORD PTR [rsp+0x100]
   14003a027:	xor    rcx,rsp
   14003a02a:	call   0x140046470
   14003a02f:	lea    r11,[rsp+0x110]
   14003a037:	mov    rbx,QWORD PTR [r11+0x38]
   14003a03b:	mov    rbp,QWORD PTR [r11+0x40]
   14003a03f:	mov    rsp,r11
   14003a042:	pop    r15
   14003a044:	pop    r14
   14003a046:	pop    r13
   14003a048:	pop    rdi
   14003a049:	pop    rsi
   14003a04a:	ret    
   14003a04b:	int3   
   14003a04c:	int3   
   14003a04d:	int3   
   14003a04e:	int3   
   14003a04f:	int3   
   14003a050:	int3   
   14003a051:	int3   
   14003a052:	int3   
   14003a053:	int3   
   14003a054:	rex push rbp
   14003a056:	sub    rsp,0x20
   14003a05a:	mov    rbp,rdx
   14003a05d:	mov    rcx,QWORD PTR [rbp+0x38]
   14003a061:	call   0x14001ac50
   14003a066:	add    rsp,0x20
   14003a06a:	pop    rbp
   14003a06b:	ret    
   14003a06c:	int3   
   14003a06d:	int3   
   14003a06e:	int3   
   14003a06f:	int3   
   14003a070:	int3   
   14003a071:	int3   
   14003a072:	int3   
   14003a073:	int3   
   14003a074:	rex push rbp
   14003a076:	sub    rsp,0x20
   14003a07a:	mov    rbp,rdx
   14003a07d:	mov    rcx,QWORD PTR [rbp+0x38]
   14003a081:	call   0x1400373b0
   14003a086:	add    rsp,0x20
   14003a08a:	pop    rbp
   14003a08b:	ret    
   14003a08c:	int3   
   14003a08d:	int3   
   14003a08e:	int3   
   14003a08f:	int3   
   14003a090:	int3   
   14003a091:	int3   
   14003a092:	int3   
   14003a093:	int3   
   14003a094:	rex push rbp
   14003a096:	sub    rsp,0x20
   14003a09a:	mov    rbp,rdx
   14003a09d:	mov    rcx,QWORD PTR [rbp+0x38]
   14003a0a1:	add    rcx,0x8
   14003a0a5:	call   0x1400373c8
   14003a0aa:	add    rsp,0x20
   14003a0ae:	pop    rbp
   14003a0af:	ret    
   14003a0b0:	int3   
   14003a0b1:	int3   
   14003a0b2:	int3   
   14003a0b3:	int3   
   14003a0b4:	rex push rbp
   14003a0b6:	sub    rsp,0x20
   14003a0ba:	mov    rbp,rdx
   14003a0bd:	mov    rcx,QWORD PTR [rbp+0x38]
   14003a0c1:	call   0x140001040
   14003a0c6:	add    rsp,0x20
   14003a0ca:	pop    rbp
   14003a0cb:	ret    
   14003a0cc:	rex push rbx
   14003a0ce:	push   rbp
   14003a0cf:	push   rsi
   14003a0d0:	push   rdi
   14003a0d1:	push   r12
   14003a0d3:	push   r13
   14003a0d5:	push   r14
   14003a0d7:	push   r15
   14003a0d9:	sub    rsp,0x128
   14003a0e0:	mov    QWORD PTR [rsp+0x110],0xfffffffffffffffe
   14003a0ec:	mov    rdi,rcx
   14003a0ef:	xor    r15d,r15d
   14003a0f2:	mov    r9d,r15d
   14003a0f5:	mov    DWORD PTR [rsp+0x180],r15d
   14003a0fd:	mov    r14d,r15d
   14003a100:	cmp    QWORD PTR [rcx+0x90],r15
   14003a107:	je     0x14003a929
   14003a10d:	cmp    QWORD PTR [rcx+0xa8],r15
   14003a114:	jne    0x14003a11d
   14003a116:	xor    eax,eax
   14003a118:	jmp    0x14003ac5a
   14003a11d:	mov    ebx,0x1
   14003a122:	mov    r15d,ebx
   14003a125:	mov    r13,rbx
   14003a128:	cmp    QWORD PTR [rcx+0x20],rbx
   14003a12c:	jl     0x14003a922
   14003a132:	mov    rcx,r13
   14003a135:	shl    rcx,0x6
   14003a139:	mov    rax,QWORD PTR [rdi+0x28]
   14003a13d:	mov    rdx,QWORD PTR [rcx+rax*1-0x8]
   14003a142:	test   rdx,rdx
   14003a145:	je     0x14003a8db
   14003a14b:	mov    r12,QWORD PTR [rdx+0x8]
   14003a14f:	test   r12,r12
   14003a152:	je     0x14003a8db
   14003a158:	mov    rbp,r12
   14003a15b:	test   r12,r12
   14003a15e:	je     0x14003a910
   14003a164:	mov    r12,QWORD PTR [r12]
   14003a168:	mov    rbp,QWORD PTR [rbp+0x10]
   14003a16c:	cmp    DWORD PTR [rbp+0x100],0x0
   14003a173:	je     0x14003a8bd
   14003a179:	and    DWORD PTR [rbp+0x100],0x0
   14003a180:	add    r14d,ebx
   14003a183:	cmp    r14d,ebx
   14003a186:	jne    0x14003a18e
   14003a188:	mov    DWORD PTR [rdi+0x88],ebx
   14003a18e:	movsxd rsi,r15d
   14003a191:	lea    r8,[rsp+0x178]
   14003a199:	mov    rdx,rsi
   14003a19c:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a1a3:	call   0x140034df4
   14003a1a8:	test   al,al
   14003a1aa:	je     0x14003a8ca
   14003a1b0:	lea    rax,[rbp+0x108]
   14003a1b7:	mov    QWORD PTR [rsp+0x188],rax
   14003a1bf:	mov    rdx,rax
   14003a1c2:	lea    rcx,[rsp+0x60]
   14003a1c7:	call   0x14003f894
   14003a1cc:	nop
   14003a1cd:	xor    r11d,r11d
   14003a1d0:	mov    QWORD PTR [rsp+0xb0],r11
   14003a1d8:	mov    DWORD PTR [rsp+0xb8],r11d
   14003a1e0:	mov    QWORD PTR [rsp+0xc0],r11
   14003a1e8:	mov    QWORD PTR [rsp+0xc8],r11
   14003a1f0:	mov    QWORD PTR [rsp+0xe8],r11
   14003a1f8:	mov    QWORD PTR [rsp+0xf8],r11
   14003a200:	mov    QWORD PTR [rsp+0xd0],r11
   14003a208:	mov    QWORD PTR [rsp+0x108],r11
   14003a210:	mov    rdx,rsi
   14003a213:	mov    r9,QWORD PTR [rdi+0xa8]
   14003a21a:	cmp    BYTE PTR [r9+0x38],r11b
   14003a21e:	je     0x14003a24a
   14003a220:	mov    ecx,r11d
   14003a223:	cmp    QWORD PTR [r9+0x18],r11
   14003a227:	jbe    0x14003a275
   14003a229:	mov    r8,QWORD PTR [r9+0x28]
   14003a22d:	lea    r10,[r8+0x10]
   14003a231:	cmp    QWORD PTR [r10],rdx
   14003a234:	je     0x14003a246
   14003a236:	add    ecx,ebx
   14003a238:	add    r10,0x50
   14003a23c:	mov    eax,ecx
   14003a23e:	cmp    rax,QWORD PTR [r9+0x18]
   14003a242:	jb     0x14003a231
   14003a244:	jmp    0x14003a275
   14003a246:	mov    edx,ecx
   14003a248:	jmp    0x14003a263
   14003a24a:	mov    r8,QWORD PTR [r9+0x28]
   14003a24e:	mov    r10,QWORD PTR [r8+0x10]
   14003a252:	mov    rax,QWORD PTR [r9+0x18]
   14003a256:	lea    rcx,[rax+r10*1-0x1]
   14003a25b:	cmp    rdx,rcx
   14003a25e:	ja     0x14003a275
   14003a260:	sub    rdx,r10
   14003a263:	lea    rax,[rdx+rdx*4]
   14003a267:	add    rax,rax
   14003a26a:	mov    r8,QWORD PTR [r8+rax*8+0x8]
   14003a26f:	add    r8,QWORD PTR [r9+0x10]
   14003a273:	jmp    0x14003a278
   14003a275:	mov    r8,r11
   14003a278:	lea    rbp,[r13+r13*4+0x0]
   14003a27d:	add    rbp,rbp
   14003a280:	mov    r9,QWORD PTR [r9+0x28]
   14003a284:	mov    r9,QWORD PTR [r9+rbp*8+0x20]
   14003a289:	mov    edx,ebx
   14003a28b:	lea    rcx,[rsp+0xb0]
   14003a293:	call   0x14003343c
   14003a298:	mov    r11,rsi
   14003a29b:	mov    rdx,QWORD PTR [rdi+0xa8]
   14003a2a2:	xor    r10d,r10d
   14003a2a5:	cmp    BYTE PTR [rdx+0x38],r10b
   14003a2a9:	je     0x14003a2d6
   14003a2ab:	mov    ecx,r10d
   14003a2ae:	cmp    QWORD PTR [rdx+0x18],r10
   14003a2b2:	jbe    0x14003a301
   14003a2b4:	mov    r8,QWORD PTR [rdx+0x28]
   14003a2b8:	lea    r9,[r8+0x10]
   14003a2bc:	cmp    QWORD PTR [r9],rsi
   14003a2bf:	je     0x14003a2d1
   14003a2c1:	add    ecx,ebx
   14003a2c3:	add    r9,0x50
   14003a2c7:	mov    eax,ecx
   14003a2c9:	cmp    rax,QWORD PTR [rdx+0x18]
   14003a2cd:	jb     0x14003a2bc
   14003a2cf:	jmp    0x14003a301
   14003a2d1:	mov    r11d,ecx
   14003a2d4:	jmp    0x14003a2ef
   14003a2d6:	mov    r8,QWORD PTR [rdx+0x28]
   14003a2da:	mov    r9,QWORD PTR [r8+0x10]
   14003a2de:	mov    rax,QWORD PTR [rdx+0x18]
   14003a2e2:	lea    rcx,[rax+r9*1-0x1]
   14003a2e7:	cmp    rsi,rcx
   14003a2ea:	ja     0x14003a301
   14003a2ec:	sub    r11,r9
   14003a2ef:	lea    rax,[r11+r11*4]
   14003a2f3:	add    rax,rax
   14003a2f6:	mov    r8,QWORD PTR [r8+rax*8+0x8]
   14003a2fb:	add    r8,QWORD PTR [rdx+0x10]
   14003a2ff:	jmp    0x14003a304
   14003a301:	mov    r8,r10
   14003a304:	mov    rax,QWORD PTR [rdx+0x28]
   14003a308:	sub    r8,QWORD PTR [rsp+0xc0]
   14003a310:	mov    rcx,QWORD PTR [rsp+0xd8]
   14003a318:	imul   rcx,rcx,0x58
   14003a31c:	add    rcx,QWORD PTR [rsp+0xc8]
   14003a324:	mov    QWORD PTR [rsp+0x50],r10
   14003a329:	mov    QWORD PTR [rsp+0x48],r10
   14003a32e:	mov    QWORD PTR [rsp+0x40],r10
   14003a333:	mov    QWORD PTR [rsp+0x38],r8
   14003a338:	mov    DWORD PTR [rsp+0x30],r10d
   14003a33d:	mov    BYTE PTR [rsp+0x28],r10b
   14003a342:	mov    BYTE PTR [rsp+0x20],r10b
   14003a347:	mov    r9,QWORD PTR [rax+rbp*8+0x20]
   14003a34c:	movzx  r8d,WORD PTR [rax+rbp*8+0x28]
   14003a352:	mov    rdx,QWORD PTR [rax+rbp*8+0x10]
   14003a357:	call   0x140034d38
   14003a35c:	add    QWORD PTR [rsp+0xd8],rbx
   14003a364:	mov    rax,QWORD PTR [rdi+0xa0]
   14003a36b:	mov    rdx,QWORD PTR [rax]
   14003a36e:	lea    rcx,[rsp+0xb0]
   14003a376:	call   0x140037ce8
   14003a37b:	movzx  r11d,WORD PTR [rsp+0x178]
   14003a384:	mov    eax,0x81
   14003a389:	cmp    r11d,eax
   14003a38c:	jg     0x14003a78c
   14003a392:	cmp    r11d,eax
   14003a395:	je     0x14003a6e0
   14003a39b:	cmp    r11d,0x8
   14003a39f:	jg     0x14003a5a3
   14003a3a5:	cmp    r11d,0x8
   14003a3a9:	je     0x14003a535
   14003a3af:	sub    r11d,0x2
   14003a3b3:	je     0x14003a50b
   14003a3b9:	sub    r11d,ebx
   14003a3bc:	je     0x14003a4e1
   14003a3c2:	sub    r11d,ebx
   14003a3c5:	je     0x14003a4b7
   14003a3cb:	sub    r11d,ebx
   14003a3ce:	je     0x14003a48d
   14003a3d4:	sub    r11d,ebx
   14003a3d7:	je     0x14003a40c
   14003a3d9:	cmp    r11d,ebx
   14003a3dc:	jne    0x14003a84f
   14003a3e2:	xor    r8d,r8d
   14003a3e5:	mov    dx,0x7
   14003a3e9:	lea    rcx,[rsp+0x60]
   14003a3ee:	call   0x14003f5fc
   14003a3f3:	lea    r8,[rsp+0x68]
   14003a3f8:	mov    rdx,rsi
   14003a3fb:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a402:	call   0x14003779c
   14003a407:	jmp    0x14003a84f
   14003a40c:	xor    r8d,r8d
   14003a40f:	mov    dx,0x6
   14003a413:	lea    rcx,[rsp+0x60]
   14003a418:	call   0x14003f5fc
   14003a41d:	mov    rdx,QWORD PTR [rdi+0xa8]
   14003a424:	cmp    BYTE PTR [rdx+0x38],0x0
   14003a428:	je     0x14003a453
   14003a42a:	xor    ecx,ecx
   14003a42c:	cmp    QWORD PTR [rdx+0x18],rcx
   14003a430:	jbe    0x14003a47e
   14003a432:	mov    r8,QWORD PTR [rdx+0x28]
   14003a436:	lea    r9,[r8+0x10]
   14003a43a:	cmp    QWORD PTR [r9],rsi
   14003a43d:	je     0x14003a44f
   14003a43f:	add    ecx,ebx
   14003a441:	add    r9,0x50
   14003a445:	mov    eax,ecx
   14003a447:	cmp    rax,QWORD PTR [rdx+0x18]
   14003a44b:	jb     0x14003a43a
   14003a44d:	jmp    0x14003a47e
   14003a44f:	mov    esi,ecx
   14003a451:	jmp    0x14003a46c
   14003a453:	mov    r8,QWORD PTR [rdx+0x28]
   14003a457:	mov    r9,QWORD PTR [r8+0x10]
   14003a45b:	mov    rax,QWORD PTR [rdx+0x18]
   14003a45f:	lea    rcx,[rax+r9*1-0x1]
   14003a464:	cmp    rsi,rcx
   14003a467:	ja     0x14003a47e
   14003a469:	sub    rsi,r9
   14003a46c:	lea    rax,[rsi+rsi*4]
   14003a470:	add    rax,rax
   14003a473:	mov    rcx,QWORD PTR [r8+rax*8+0x8]
   14003a478:	add    rcx,QWORD PTR [rdx+0x10]
   14003a47c:	jmp    0x14003a480
   14003a47e:	xor    ecx,ecx
   14003a480:	mov    rax,QWORD PTR [rsp+0x68]
   14003a485:	mov    QWORD PTR [rcx],rax
   14003a488:	jmp    0x14003a84f
   14003a48d:	xor    r8d,r8d
   14003a490:	mov    dx,0x5
   14003a494:	lea    rcx,[rsp+0x60]
   14003a499:	call   0x14003f5fc
   14003a49e:	lea    r8,[rsp+0x68]
   14003a4a3:	mov    rdx,rsi
   14003a4a6:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a4ad:	call   0x14003779c
   14003a4b2:	jmp    0x14003a84f
   14003a4b7:	xor    r8d,r8d
   14003a4ba:	mov    dx,0x4
   14003a4be:	lea    rcx,[rsp+0x60]
   14003a4c3:	call   0x14003f5fc
   14003a4c8:	lea    r8,[rsp+0x68]
   14003a4cd:	mov    rdx,rsi
   14003a4d0:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a4d7:	call   0x140037724
   14003a4dc:	jmp    0x14003a84f
   14003a4e1:	xor    r8d,r8d
   14003a4e4:	mov    dx,0x3
   14003a4e8:	lea    rcx,[rsp+0x60]
   14003a4ed:	call   0x14003f5fc
   14003a4f2:	lea    r8,[rsp+0x68]
   14003a4f7:	mov    rdx,rsi
   14003a4fa:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a501:	call   0x1400376ac
   14003a506:	jmp    0x14003a84f
   14003a50b:	xor    r8d,r8d
   14003a50e:	mov    dx,0x2
   14003a512:	lea    rcx,[rsp+0x60]
   14003a517:	call   0x14003f5fc
   14003a51c:	lea    r8,[rsp+0x68]
   14003a521:	mov    rdx,rsi
   14003a524:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a52b:	call   0x140037630
   14003a530:	jmp    0x14003a84f
   14003a535:	xor    r8d,r8d
   14003a538:	mov    dx,0x8
   14003a53c:	lea    rcx,[rsp+0x60]
   14003a541:	call   0x14003f5fc
   14003a546:	and    QWORD PTR [rsp+0x170],0x0
   14003a54f:	lea    r8,[rsp+0x170]
   14003a557:	mov    rdx,rsi
   14003a55a:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a561:	call   0x140037814
   14003a566:	mov    rcx,QWORD PTR [rsp+0x170]
   14003a56e:	call   QWORD PTR [rip+0x2a11c]        # 0x140064690
   14003a574:	mov    rcx,QWORD PTR [rsp+0x68]
   14003a579:	call   QWORD PTR [rip+0x2a0e1]        # 0x140064660
   14003a57f:	mov    QWORD PTR [rsp+0x170],rax
   14003a587:	lea    r8,[rsp+0x170]
   14003a58f:	mov    rdx,rsi
   14003a592:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a599:	call   0x1400378a0
   14003a59e:	jmp    0x14003a84f
   14003a5a3:	sub    r11d,0xb
   14003a5a7:	je     0x14003a6b6
   14003a5ad:	sub    r11d,0x3
   14003a5b1:	je     0x14003a68c
   14003a5b7:	sub    r11d,0x2
   14003a5bb:	je     0x14003a652
   14003a5c1:	sub    r11d,ebx
   14003a5c4:	je     0x14003a628
   14003a5c6:	sub    r11d,ebx
   14003a5c9:	je     0x14003a5fe
   14003a5cb:	cmp    r11d,ebx
   14003a5ce:	jne    0x14003a84f
   14003a5d4:	xor    r8d,r8d
   14003a5d7:	mov    dx,0x13
   14003a5db:	lea    rcx,[rsp+0x60]
   14003a5e0:	call   0x14003f5fc
   14003a5e5:	lea    r8,[rsp+0x68]
   14003a5ea:	mov    rdx,rsi
   14003a5ed:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a5f4:	call   0x140037b00
   14003a5f9:	jmp    0x14003a84f
   14003a5fe:	xor    r8d,r8d
   14003a601:	mov    dx,0x12
   14003a605:	lea    rcx,[rsp+0x60]
   14003a60a:	call   0x14003f5fc
   14003a60f:	lea    r8,[rsp+0x68]
   14003a614:	mov    rdx,rsi
   14003a617:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a61e:	call   0x140037a84
   14003a623:	jmp    0x14003a84f
   14003a628:	xor    r8d,r8d
   14003a62b:	mov    dx,0x11
   14003a62f:	lea    rcx,[rsp+0x60]
   14003a634:	call   0x14003f5fc
   14003a639:	lea    r8,[rsp+0x68]
   14003a63e:	mov    rdx,rsi
   14003a641:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a648:	call   0x140037994
   14003a64d:	jmp    0x14003a84f
   14003a652:	xor    r8d,r8d
   14003a655:	mov    dx,0x10
   14003a659:	lea    rcx,[rsp+0x60]
   14003a65e:	call   0x14003f5fc
   14003a663:	mov    r11b,BYTE PTR [rsp+0x68]
   14003a668:	mov    BYTE PTR [rsp+0x170],r11b
   14003a670:	lea    r8,[rsp+0x170]
   14003a678:	mov    rdx,rsi
   14003a67b:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a682:	call   0x140037a0c
   14003a687:	jmp    0x14003a84f
   14003a68c:	xor    r8d,r8d
   14003a68f:	mov    dx,0xe
   14003a693:	lea    rcx,[rsp+0x60]
   14003a698:	call   0x14003f5fc
   14003a69d:	lea    r8,[rsp+0x60]
   14003a6a2:	mov    rdx,rsi
   14003a6a5:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a6ac:	call   0x140037918
   14003a6b1:	jmp    0x14003a84f
   14003a6b6:	xor    r8d,r8d
   14003a6b9:	mov    dx,0xb
   14003a6bd:	lea    rcx,[rsp+0x60]
   14003a6c2:	call   0x14003f5fc
   14003a6c7:	lea    r8,[rsp+0x68]
   14003a6cc:	mov    rdx,rsi
   14003a6cf:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003a6d6:	call   0x140037630
   14003a6db:	jmp    0x14003a84f
   14003a6e0:	xor    r8d,r8d
   14003a6e3:	mov    dx,0x8
   14003a6e7:	lea    rcx,[rsp+0x60]
   14003a6ec:	call   0x14003f5fc
   14003a6f1:	mov    rdx,QWORD PTR [rdi+0xa8]
   14003a6f8:	xor    r10d,r10d
   14003a6fb:	cmp    BYTE PTR [rdx+0x38],r10b
   14003a6ff:	je     0x14003a72b
   14003a701:	mov    ecx,r10d
   14003a704:	cmp    QWORD PTR [rdx+0x18],r10
   14003a708:	jbe    0x14003a756
   14003a70a:	mov    r8,QWORD PTR [rdx+0x28]
   14003a70e:	lea    r9,[r8+0x10]
   14003a712:	cmp    QWORD PTR [r9],rsi
   14003a715:	je     0x14003a727
   14003a717:	add    ecx,ebx
   14003a719:	add    r9,0x50
   14003a71d:	mov    eax,ecx
   14003a71f:	cmp    rax,QWORD PTR [rdx+0x18]
   14003a723:	jb     0x14003a712
   14003a725:	jmp    0x14003a756
   14003a727:	mov    esi,ecx
   14003a729:	jmp    0x14003a744
   14003a72b:	mov    r8,QWORD PTR [rdx+0x28]
   14003a72f:	mov    r9,QWORD PTR [r8+0x10]
   14003a733:	mov    rax,QWORD PTR [rdx+0x18]
   14003a737:	lea    rcx,[rax+r9*1-0x1]
   14003a73c:	cmp    rsi,rcx
   14003a73f:	ja     0x14003a756
   14003a741:	sub    rsi,r9
   14003a744:	lea    rax,[rsi+rsi*4]
   14003a748:	add    rax,rax
   14003a74b:	mov    rcx,QWORD PTR [r8+rax*8+0x8]
   14003a750:	add    rcx,QWORD PTR [rdx+0x10]
   14003a754:	jmp    0x14003a759
   14003a756:	mov    rcx,r10
   14003a759:	mov    rax,QWORD PTR [rdx+0x28]
   14003a75d:	mov    QWORD PTR [rsp+0x38],r10
   14003a762:	mov    QWORD PTR [rsp+0x30],r10
   14003a767:	mov    eax,DWORD PTR [rax+rbp*8+0x20]
   14003a76b:	mov    DWORD PTR [rsp+0x28],eax
   14003a76f:	mov    QWORD PTR [rsp+0x20],rcx
   14003a774:	or     r9d,0xffffffff
   14003a778:	mov    r8,QWORD PTR [rsp+0x68]
   14003a77d:	xor    edx,edx
   14003a77f:	xor    ecx,ecx
   14003a781:	call   QWORD PTR [rip+0x29d69]        # 0x1400644f0
   14003a787:	jmp    0x14003a84f
   14003a78c:	cmp    r11d,0x82
   14003a793:	jne    0x14003a84f
   14003a799:	xor    r8d,r8d
   14003a79c:	mov    dx,0x8
   14003a7a0:	lea    rcx,[rsp+0x60]
   14003a7a5:	call   0x14003f5fc
   14003a7aa:	mov    rdx,QWORD PTR [rdi+0xa8]
   14003a7b1:	cmp    BYTE PTR [rdx+0x38],0x0
   14003a7b5:	je     0x14003a7e0
   14003a7b7:	xor    ecx,ecx
   14003a7b9:	cmp    QWORD PTR [rdx+0x18],rcx
   14003a7bd:	jbe    0x14003a80b
   14003a7bf:	mov    r8,QWORD PTR [rdx+0x28]
   14003a7c3:	lea    r9,[r8+0x10]
   14003a7c7:	cmp    QWORD PTR [r9],rsi
   14003a7ca:	je     0x14003a7dc
   14003a7cc:	add    ecx,ebx
   14003a7ce:	add    r9,0x50
   14003a7d2:	mov    eax,ecx
   14003a7d4:	cmp    rax,QWORD PTR [rdx+0x18]
   14003a7d8:	jb     0x14003a7c7
   14003a7da:	jmp    0x14003a80b
   14003a7dc:	mov    esi,ecx
   14003a7de:	jmp    0x14003a7f9
   14003a7e0:	mov    r8,QWORD PTR [rdx+0x28]
   14003a7e4:	mov    r9,QWORD PTR [r8+0x10]
   14003a7e8:	mov    rax,QWORD PTR [rdx+0x18]
   14003a7ec:	lea    rcx,[rax+r9*1-0x1]
   14003a7f1:	cmp    rsi,rcx
   14003a7f4:	ja     0x14003a80b
   14003a7f6:	sub    rsi,r9
   14003a7f9:	lea    rax,[rsi+rsi*4]
   14003a7fd:	add    rax,rax
   14003a800:	mov    rcx,QWORD PTR [r8+rax*8+0x8]
   14003a805:	add    rcx,QWORD PTR [rdx+0x10]
   14003a809:	jmp    0x14003a80d
   14003a80b:	xor    ecx,ecx
   14003a80d:	mov    rax,QWORD PTR [rdx+0x28]
   14003a811:	mov    rdx,QWORD PTR [rax+rbp*8+0x20]
   14003a816:	shr    rdx,1
   14003a819:	lea    r9,[rdx-0x1]
   14003a81d:	mov    r8,QWORD PTR [rsp+0x68]
   14003a822:	call   0x140047200
   14003a827:	test   eax,eax
   14003a829:	je     0x14003a84f
   14003a82b:	cmp    eax,0xc
   14003a82e:	je     0x14003a905
   14003a834:	cmp    eax,0x16
   14003a837:	je     0x14003a8fa
   14003a83d:	cmp    eax,0x22
   14003a840:	je     0x14003a8fa
   14003a846:	cmp    eax,0x50
   14003a849:	jne    0x14003a8ef
   14003a84f:	mov    rax,QWORD PTR [rdi+0xa0]
   14003a856:	lea    rcx,[rsp+0xb0]
   14003a85e:	mov    QWORD PTR [rax+0x10],rcx
   14003a862:	mov    rcx,QWORD PTR [rdi+0xa0]
   14003a869:	call   0x140038cd4
   14003a86e:	mov    r11,QWORD PTR [rdi+0xa8]
   14003a875:	mov    rax,QWORD PTR [rdi+0xa0]
   14003a87c:	mov    QWORD PTR [rax+0x10],r11
   14003a880:	mov    rcx,QWORD PTR [rsp+0x188]
   14003a888:	call   QWORD PTR [rip+0x29e12]        # 0x1400646a0
   14003a88e:	nop
   14003a88f:	mov    rcx,QWORD PTR [rsp+0xc8]
   14003a897:	call   0x14001ac50
   14003a89c:	mov    rcx,QWORD PTR [rsp+0xf8]
   14003a8a4:	call   0x14001ac50
   14003a8a9:	nop
   14003a8aa:	lea    rcx,[rsp+0x60]
   14003a8af:	call   QWORD PTR [rip+0x29deb]        # 0x1400646a0
   14003a8b5:	mov    r9d,DWORD PTR [rsp+0x180]
   14003a8bd:	add    r9d,ebx
   14003a8c0:	mov    DWORD PTR [rsp+0x180],r9d
   14003a8c8:	jmp    0x14003a8d2
   14003a8ca:	mov    r9d,DWORD PTR [rsp+0x180]
   14003a8d2:	test   r12,r12
   14003a8d5:	jne    0x14003a158
   14003a8db:	add    r15d,ebx
   14003a8de:	add    r13,rbx
   14003a8e1:	movsxd rax,r15d
   14003a8e4:	cmp    rax,QWORD PTR [rdi+0x20]
   14003a8e8:	jg     0x14003a916
   14003a8ea:	jmp    0x14003a132
   14003a8ef:	mov    ecx,0x80004005
   14003a8f4:	call   0x140001430
   14003a8f9:	int3   
   14003a8fa:	mov    ecx,0x80070057
   14003a8ff:	call   0x140001430
   14003a904:	int3   
   14003a905:	mov    ecx,0x8007000e
   14003a90a:	call   0x140001430
   14003a90f:	nop
   14003a910:	call   0x1400208f8
   14003a915:	int3   
   14003a916:	test   r14d,r14d
   14003a919:	jle    0x14003a922
   14003a91b:	and    DWORD PTR [rdi+0x88],0x0
   14003a922:	xor    eax,eax
   14003a924:	jmp    0x14003ac5a
   14003a929:	cmp    QWORD PTR [rcx+0x18],r15
   14003a92d:	jne    0x14003a952
   14003a92f:	mov    rcx,QWORD PTR [rcx+0x10]
   14003a933:	mov    rax,QWORD PTR [rcx]
   14003a936:	lea    r8,[rdi+0x18]
   14003a93a:	lea    rdx,[rip+0x35a47]        # 0x140070388
   14003a941:	call   QWORD PTR [rax]
   14003a943:	cmp    eax,r15d
   14003a946:	jge    0x14003a94f
   14003a948:	xor    eax,eax
   14003a94a:	jmp    0x14003ac5a
   14003a94f:	mov    r9d,r14d
   14003a952:	mov    edx,r15d
   14003a955:	mov    DWORD PTR [rsp+0x170],edx
   14003a95c:	mov    r8,r15
   14003a95f:	mov    QWORD PTR [rsp+0x78],r15
   14003a964:	mov    ebx,0x1
   14003a969:	cmp    QWORD PTR [rdi+0x20],r15
   14003a96d:	jle    0x14003ab5f
   14003a973:	mov    rcx,r15
   14003a976:	mov    QWORD PTR [rsp+0x80],rcx
   14003a97e:	mov    rax,QWORD PTR [rdi+0x28]
   14003a982:	mov    rcx,QWORD PTR [rcx+rax*1+0x38]
   14003a987:	mov    rsi,QWORD PTR [rcx+0x8]
   14003a98b:	cmp    rsi,r15
   14003a98e:	je     0x14003ab2e
   14003a994:	mov    r12,r8
   14003a997:	imul   r12,r12,0x38
   14003a99b:	mov    r13,rsi
   14003a99e:	cmp    rsi,r15
   14003a9a1:	je     0x14003ab59
   14003a9a7:	mov    rsi,QWORD PTR [rsi]
   14003a9aa:	mov    r13,QWORD PTR [r13+0x10]
   14003a9ae:	cmp    DWORD PTR [r13+0x100],r15d
   14003a9b5:	je     0x14003ab07
   14003a9bb:	mov    DWORD PTR [r13+0x100],r15d
   14003a9c2:	add    r14d,ebx
   14003a9c5:	mov    DWORD PTR [rsp+0x188],r14d
   14003a9cd:	cmp    r14d,ebx
   14003a9d0:	jne    0x14003aa11
   14003a9d2:	mov    rcx,QWORD PTR [rdi+0x18]
   14003a9d6:	mov    rax,QWORD PTR [rcx]
   14003a9d9:	lea    rdx,[rsp+0x178]
   14003a9e1:	call   QWORD PTR [rax+0x30]
   14003a9e4:	cmp    eax,r15d
   14003a9e7:	jl     0x14003ac5a
   14003a9ed:	cmp    DWORD PTR [rsp+0x178],ebx
   14003a9f4:	jne    0x14003aa0b
   14003a9f6:	mov    rcx,QWORD PTR [rdi+0x18]
   14003a9fa:	mov    rax,QWORD PTR [rcx]
   14003a9fd:	mov    edx,ebx
   14003a9ff:	call   QWORD PTR [rax+0x18]
   14003aa02:	cmp    eax,r15d
   14003aa05:	jl     0x14003ac5a
   14003aa0b:	mov    DWORD PTR [rdi+0x88],ebx
   14003aa11:	mov    r15d,0x18
   14003aa17:	lea    rcx,[rsp+0x60]
   14003aa1c:	call   0x14003f678
   14003aa21:	nop
   14003aa22:	movzx  eax,WORD PTR [r13+0x108]
   14003aa2a:	test   eax,eax
   14003aa2c:	js     0x14003aa68
   14003aa2e:	cmp    eax,ebx
   14003aa30:	jle    0x14003aa51
   14003aa32:	cmp    eax,0x8
   14003aa35:	je     0x14003aa3e
   14003aa37:	cmp    eax,0xa
   14003aa3a:	je     0x14003aa51
   14003aa3c:	jmp    0x14003aa68
   14003aa3e:	mov    rax,QWORD PTR [r13+0x110]
   14003aa45:	cmp    WORD PTR [rax],0x0
   14003aa49:	jne    0x14003aa68
   14003aa4b:	or     r15d,0xffffffff
   14003aa4f:	jmp    0x14003aa79
   14003aa51:	or     r15d,0xffffffff
   14003aa55:	lea    rdx,[r13+0x108]
   14003aa5c:	lea    rcx,[rsp+0x60]
   14003aa61:	call   0x14003f630
   14003aa66:	jmp    0x14003aa79
   14003aa68:	lea    rdx,[r13+0x108]
   14003aa6f:	lea    rcx,[rsp+0x60]
   14003aa74:	call   0x14003f630
   14003aa79:	and    DWORD PTR [rsp+0x88],0x0
   14003aa81:	mov    DWORD PTR [rsp+0x8c],ebx
   14003aa88:	mov    r8,QWORD PTR [rdi+0x78]
   14003aa8c:	mov    eax,DWORD PTR [r12+r8*1+0x34]
   14003aa91:	mov    DWORD PTR [rsp+0x90],eax
   14003aa98:	and    DWORD PTR [rsp+0x94],0x0
   14003aaa0:	mov    DWORD PTR [rsp+0x98],r15d
   14003aaa8:	lea    rax,[rsp+0x60]
   14003aaad:	mov    QWORD PTR [rsp+0xa0],rax
   14003aab5:	mov    rcx,QWORD PTR [rdi+0x18]
   14003aab9:	mov    rax,QWORD PTR [rcx]
   14003aabc:	movsxd rdx,DWORD PTR [rsp+0x180]
   14003aac4:	imul   rdx,rdx,0x38
   14003aac8:	add    rdx,r8
   14003aacb:	lea    r8,[rsp+0x88]
   14003aad3:	call   QWORD PTR [rax+0x20]
   14003aad6:	lea    rcx,[r13+0x108]
   14003aadd:	call   QWORD PTR [rip+0x29bbd]        # 0x1400646a0
   14003aae3:	nop
   14003aae4:	lea    rcx,[rsp+0x60]
   14003aae9:	call   QWORD PTR [rip+0x29bb1]        # 0x1400646a0
   14003aaef:	mov    r8,QWORD PTR [rsp+0x78]
   14003aaf4:	mov    r14d,DWORD PTR [rsp+0x188]
   14003aafc:	mov    r9d,DWORD PTR [rsp+0x180]
   14003ab04:	xor    r15d,r15d
   14003ab07:	add    r9d,ebx
   14003ab0a:	mov    DWORD PTR [rsp+0x180],r9d
   14003ab12:	add    r8,rbx
   14003ab15:	mov    QWORD PTR [rsp+0x78],r8
   14003ab1a:	add    r12,0x38
   14003ab1e:	cmp    rsi,r15
   14003ab21:	jne    0x14003a99b
   14003ab27:	mov    edx,DWORD PTR [rsp+0x170]
   14003ab2e:	add    edx,ebx
   14003ab30:	mov    DWORD PTR [rsp+0x170],edx
   14003ab37:	mov    rcx,QWORD PTR [rsp+0x80]
   14003ab3f:	add    rcx,0x40
   14003ab43:	mov    QWORD PTR [rsp+0x80],rcx
   14003ab4b:	movsxd rax,edx
   14003ab4e:	cmp    rax,QWORD PTR [rdi+0x20]
   14003ab52:	jge    0x14003ab5f
   14003ab54:	jmp    0x14003a97e
   14003ab59:	call   0x1400208f8
   14003ab5e:	int3   
   14003ab5f:	mov    rsi,QWORD PTR [rdi+0x38]
   14003ab63:	cmp    rsi,r15
   14003ab66:	je     0x14003ac26
   14003ab6c:	mov    r12,rsi
   14003ab6f:	cmp    rsi,r15
   14003ab72:	je     0x14003ac20
   14003ab78:	mov    rsi,QWORD PTR [rsi]
   14003ab7b:	mov    r12,QWORD PTR [r12+0x10]
   14003ab80:	mov    rcx,QWORD PTR [r12]
   14003ab84:	cmp    QWORD PTR [rcx+0x80],r15
   14003ab8b:	je     0x14003ac16
   14003ab91:	mov    rcx,QWORD PTR [rcx+0x80]
   14003ab98:	mov    rax,QWORD PTR [rcx]
   14003ab9b:	lea    r8,[rsp+0x178]
   14003aba3:	lea    rdx,[rip+0x357be]        # 0x140070368
   14003abaa:	call   QWORD PTR [rax]
   14003abac:	cmp    eax,r15d
   14003abaf:	jl     0x14003ac16
   14003abb1:	mov    rcx,QWORD PTR [rsp+0x178]
   14003abb9:	mov    rax,QWORD PTR [rcx]
   14003abbc:	mov    edx,DWORD PTR [r12+0xc]
   14003abc1:	call   QWORD PTR [rax+0x20]
   14003abc4:	cmp    eax,r15d
   14003abc7:	jne    0x14003ac08
   14003abc9:	add    r14d,ebx
   14003abcc:	cmp    r14d,ebx
   14003abcf:	jne    0x14003ac08
   14003abd1:	mov    rcx,QWORD PTR [rdi+0x18]
   14003abd5:	mov    rax,QWORD PTR [rcx]
   14003abd8:	lea    rdx,[rsp+0x170]
   14003abe0:	call   QWORD PTR [rax+0x30]
   14003abe3:	cmp    eax,r15d
   14003abe6:	jl     0x14003ac5a
   14003abe8:	cmp    DWORD PTR [rsp+0x170],ebx
   14003abef:	jne    0x14003ac02
   14003abf1:	mov    rcx,QWORD PTR [rdi+0x18]
   14003abf5:	mov    rax,QWORD PTR [rcx]
   14003abf8:	mov    edx,ebx
   14003abfa:	call   QWORD PTR [rax+0x18]
   14003abfd:	cmp    eax,r15d
   14003ac00:	jl     0x14003ac5a
   14003ac02:	mov    DWORD PTR [rdi+0x88],ebx
   14003ac08:	mov    rcx,QWORD PTR [rsp+0x178]
   14003ac10:	mov    rax,QWORD PTR [rcx]
   14003ac13:	call   QWORD PTR [rax+0x10]
   14003ac16:	cmp    rsi,r15
   14003ac19:	je     0x14003ac26
   14003ac1b:	jmp    0x14003ab6c
   14003ac20:	call   0x1400208f8
   14003ac25:	int3   
   14003ac26:	cmp    r14d,r15d
   14003ac29:	jle    0x14003ac58
   14003ac2b:	mov    rcx,QWORD PTR [rdi+0x18]
   14003ac2f:	mov    rax,QWORD PTR [rcx]
   14003ac32:	xor    r9d,r9d
   14003ac35:	xor    r8d,r8d
   14003ac38:	xor    edx,edx
   14003ac3a:	call   QWORD PTR [rax+0x38]
   14003ac3d:	mov    ebx,eax
   14003ac3f:	mov    DWORD PTR [rdi+0x88],r15d
   14003ac46:	cmp    eax,r15d
   14003ac49:	jge    0x14003ac58
   14003ac4b:	mov    rdx,QWORD PTR [rdi]
   14003ac4e:	mov    rcx,rdi
   14003ac51:	call   QWORD PTR [rdx+0x20]
   14003ac54:	mov    eax,ebx
   14003ac56:	jmp    0x14003ac5a
   14003ac58:	xor    eax,eax
   14003ac5a:	add    rsp,0x128
   14003ac61:	pop    r15
   14003ac63:	pop    r14
   14003ac65:	pop    r13
   14003ac67:	pop    r12
   14003ac69:	pop    rdi
   14003ac6a:	pop    rsi
   14003ac6b:	pop    rbp
   14003ac6c:	pop    rbx
   14003ac6d:	ret    
   14003ac6e:	int3   
   14003ac6f:	int3   
   14003ac70:	int3   
   14003ac71:	int3   
   14003ac72:	int3   
   14003ac73:	int3   
   14003ac74:	int3   
   14003ac75:	int3   
   14003ac76:	int3   
   14003ac77:	int3   
   14003ac78:	int3   
   14003ac79:	int3   
   14003ac7a:	int3   
   14003ac7b:	int3   
   14003ac7c:	rex push rbp
   14003ac7e:	sub    rsp,0x20
   14003ac82:	mov    rbp,rdx
   14003ac85:	lea    rcx,[rbp+0x60]
   14003ac89:	call   0x140034d30
   14003ac8e:	add    rsp,0x20
   14003ac92:	pop    rbp
   14003ac93:	ret    
   14003ac94:	int3   
   14003ac95:	int3   
   14003ac96:	int3   
   14003ac97:	int3   
   14003ac98:	int3   
   14003ac99:	int3   
   14003ac9a:	int3   
   14003ac9b:	int3   
   14003ac9c:	rex push rbp
   14003ac9e:	sub    rsp,0x20
   14003aca2:	mov    rbp,rdx
   14003aca5:	lea    rcx,[rbp+0xb0]
   14003acac:	call   0x14003341c
   14003acb1:	add    rsp,0x20
   14003acb5:	pop    rbp
   14003acb6:	ret    
   14003acb7:	int3   
   14003acb8:	int3   
   14003acb9:	int3   
   14003acba:	int3   
   14003acbb:	int3   
   14003acbc:	rex push rbp
   14003acbe:	sub    rsp,0x20
   14003acc2:	mov    rbp,rdx
   14003acc5:	lea    rcx,[rbp+0x60]
   14003acc9:	call   0x140034d30
   14003acce:	add    rsp,0x20
   14003acd2:	pop    rbp
   14003acd3:	ret    
   14003acd4:	rex push rdi
   14003acd6:	sub    rsp,0x40
   14003acda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003ace3:	mov    QWORD PTR [rsp+0x50],rbx
   14003ace8:	mov    QWORD PTR [rsp+0x58],rsi
   14003aced:	mov    ebx,r8d
   14003acf0:	mov    rdi,rcx
   14003acf3:	mov    rdx,QWORD PTR [rcx-0x140]
   14003acfa:	lea    rcx,[rsp+0x28]
   14003acff:	call   0x140021aec
   14003ad04:	nop
   14003ad05:	cmp    ebx,0xe
   14003ad08:	jne    0x14003ae30
   14003ad0e:	mov    rdi,QWORD PTR [rdi-0xa0]
   14003ad15:	test   rdi,rdi
   14003ad18:	jne    0x14003ad33
   14003ad1a:	cmp    DWORD PTR [rsp+0x30],edi
   14003ad1e:	je     0x14003ad2c
   14003ad20:	mov    rdx,QWORD PTR [rsp+0x28]
   14003ad25:	xor    ecx,ecx
   14003ad27:	call   0x140020cc4
   14003ad2c:	xor    eax,eax
   14003ad2e:	jmp    0x14003ae45
   14003ad33:	mov    rbx,QWORD PTR [rdi+0xa0]
   14003ad3a:	xor    eax,eax
   14003ad3c:	test   rbx,rbx
   14003ad3f:	setne  al
   14003ad42:	test   eax,eax
   14003ad44:	jne    0x14003ad4c
   14003ad46:	call   0x1400208f8
   14003ad4b:	int3   
   14003ad4c:	mov    rsi,QWORD PTR [rdi+0xa8]
   14003ad53:	xor    eax,eax
   14003ad55:	test   rsi,rsi
   14003ad58:	setne  al
   14003ad5b:	test   eax,eax
   14003ad5d:	jne    0x14003ad65
   14003ad5f:	call   0x1400208f8
   14003ad64:	int3   
   14003ad65:	mov    rbx,QWORD PTR [rbx]
   14003ad68:	mov    rdx,rbx
   14003ad6b:	mov    rcx,rsi
   14003ad6e:	call   0x140038930
   14003ad73:	mov    rdx,rbx
   14003ad76:	mov    rcx,rsi
   14003ad79:	call   0x140037b78
   14003ad7e:	mov    rbx,QWORD PTR [rdi+0xa8]
   14003ad85:	mov    rcx,QWORD PTR [rbx+0x28]
   14003ad89:	call   QWORD PTR [rip+0x29e91]        # 0x140064c20
   14003ad8f:	and    QWORD PTR [rbx+0x28],0x0
   14003ad94:	mov    rcx,QWORD PTR [rbx+0x30]
   14003ad98:	call   QWORD PTR [rip+0x29e82]        # 0x140064c20
   14003ad9e:	and    QWORD PTR [rbx+0x30],0x0
   14003ada3:	mov    rcx,QWORD PTR [rbx+0x10]
   14003ada7:	call   0x14001ac50
   14003adac:	and    QWORD PTR [rbx+0x10],0x0
   14003adb1:	mov    rcx,QWORD PTR [rbx+0x20]
   14003adb5:	call   0x14001ac50
   14003adba:	and    QWORD PTR [rbx+0x20],0x0
   14003adbf:	and    QWORD PTR [rbx+0x18],0x0
   14003adc4:	mov    rax,QWORD PTR [rdi+0xa0]
   14003adcb:	mov    rdx,QWORD PTR [rax]
   14003adce:	mov    rcx,QWORD PTR [rdi+0xa8]
   14003add5:	call   0x140038e98
   14003adda:	mov    r11,QWORD PTR [rdi+0xa8]
   14003ade1:	mov    rcx,QWORD PTR [r11+0x18]
   14003ade5:	movsxd rax,ecx
   14003ade8:	cmp    QWORD PTR [rdi+0x20],rax
   14003adec:	je     0x14003ae30
   14003adee:	mov    QWORD PTR [rdi+0x20],rcx
   14003adf2:	mov    rcx,QWORD PTR [rdi+0x28]
   14003adf6:	call   QWORD PTR [rip+0x29e24]        # 0x140064c20
   14003adfc:	mov    eax,DWORD PTR [rdi+0x20]
   14003adff:	shl    rax,0x6
   14003ae03:	mov    ecx,0xffffffff
   14003ae08:	cmp    rax,rcx
   14003ae0b:	jbe    0x14003ae11
   14003ae0d:	xor    eax,eax
   14003ae0f:	jmp    0x14003ae19
   14003ae11:	mov    ecx,eax
   14003ae13:	call   QWORD PTR [rip+0x29dff]        # 0x140064c18
   14003ae19:	mov    QWORD PTR [rdi+0x28],rax
   14003ae1d:	mov    r8,QWORD PTR [rdi+0x20]
   14003ae21:	shl    r8,0x6
   14003ae25:	xor    edx,edx
   14003ae27:	mov    rcx,rax
   14003ae2a:	call   0x140047720
   14003ae2f:	nop
   14003ae30:	cmp    DWORD PTR [rsp+0x30],0x0
   14003ae35:	je     0x14003ae43
   14003ae37:	mov    rdx,QWORD PTR [rsp+0x28]
   14003ae3c:	xor    ecx,ecx
   14003ae3e:	call   0x140020cc4
   14003ae43:	xor    eax,eax
   14003ae45:	mov    rbx,QWORD PTR [rsp+0x50]
   14003ae4a:	mov    rsi,QWORD PTR [rsp+0x58]
   14003ae4f:	add    rsp,0x40
   14003ae53:	pop    rdi
   14003ae54:	ret    
   14003ae55:	int3   
   14003ae56:	int3   
   14003ae57:	int3   
   14003ae58:	int3   
   14003ae59:	int3   
   14003ae5a:	int3   
   14003ae5b:	int3   
   14003ae5c:	int3   
   14003ae5d:	int3   
   14003ae5e:	int3   
   14003ae5f:	int3   
   14003ae60:	int3   
   14003ae61:	int3   
   14003ae62:	int3   
   14003ae63:	int3   
   14003ae64:	rex push rbp
   14003ae66:	sub    rsp,0x20
   14003ae6a:	mov    rbp,rdx
   14003ae6d:	lea    rcx,[rbp+0x28]
   14003ae71:	call   0x1400236a8
   14003ae76:	add    rsp,0x20
   14003ae7a:	pop    rbp
   14003ae7b:	ret    
   14003ae7c:	mov    QWORD PTR [rsp+0x8],rbx
   14003ae81:	mov    QWORD PTR [rsp+0x10],rbp
   14003ae86:	mov    QWORD PTR [rsp+0x18],rsi
   14003ae8b:	push   rdi
   14003ae8c:	sub    rsp,0x30
   14003ae90:	mov    rsi,QWORD PTR [rcx+0x20]
   14003ae94:	xor    ebp,ebp
   14003ae96:	mov    rbx,rcx
   14003ae99:	cmp    rsi,rbp
   14003ae9c:	je     0x14003af0b
   14003ae9e:	mov    rdi,QWORD PTR [rcx]
   14003aea1:	cmp    rdi,rbp
   14003aea4:	je     0x14003aebc
   14003aea6:	mov    rdx,rdi
   14003aea9:	mov    rcx,rsi
   14003aeac:	call   0x140038930
   14003aeb1:	mov    rdx,rdi
   14003aeb4:	mov    rcx,rsi
   14003aeb7:	call   0x140037b78
   14003aebc:	mov    rdi,QWORD PTR [rbx+0x20]
   14003aec0:	cmp    rdi,rbp
   14003aec3:	je     0x14003af07
   14003aec5:	mov    rcx,QWORD PTR [rdi+0x28]
   14003aec9:	call   QWORD PTR [rip+0x29d51]        # 0x140064c20
   14003aecf:	mov    rcx,QWORD PTR [rdi+0x30]
   14003aed3:	mov    QWORD PTR [rdi+0x28],rbp
   14003aed7:	call   QWORD PTR [rip+0x29d43]        # 0x140064c20
   14003aedd:	mov    rcx,QWORD PTR [rdi+0x10]
   14003aee1:	mov    QWORD PTR [rdi+0x30],rbp
   14003aee5:	call   0x14001ac50
   14003aeea:	mov    rcx,QWORD PTR [rdi+0x20]
   14003aeee:	mov    QWORD PTR [rdi+0x10],rbp
   14003aef2:	call   0x14001ac50
   14003aef7:	mov    rcx,rdi
   14003aefa:	mov    QWORD PTR [rdi+0x20],rbp
   14003aefe:	mov    QWORD PTR [rdi+0x18],rbp
   14003af02:	call   0x14001ac50
   14003af07:	mov    QWORD PTR [rbx+0x20],rbp
   14003af0b:	mov    rcx,QWORD PTR [rbx]
   14003af0e:	cmp    rcx,rbp
   14003af11:	je     0x14003af5c
   14003af13:	cmp    QWORD PTR [rbx+0x18],rbp
   14003af17:	je     0x14003af38
   14003af19:	mov    rax,QWORD PTR [rcx]
   14003af1c:	xor    r9d,r9d
   14003af1f:	lea    r8,[rbx+0x18]
   14003af23:	lea    edx,[r9+0x1]
   14003af27:	mov    QWORD PTR [rsp+0x28],rbp
   14003af2c:	mov    QWORD PTR [rsp+0x20],rbp
   14003af31:	call   QWORD PTR [rax+0x30]
   14003af34:	mov    QWORD PTR [rbx+0x18],rbp
   14003af38:	mov    rcx,QWORD PTR [rbx]
   14003af3b:	cmp    rcx,rbp
   14003af3e:	je     0x14003af49
   14003af40:	mov    QWORD PTR [rbx],rbp
   14003af43:	mov    rax,QWORD PTR [rcx]
   14003af46:	call   QWORD PTR [rax+0x10]
   14003af49:	mov    rcx,QWORD PTR [rbx+0x8]
   14003af4d:	cmp    rcx,rbp
   14003af50:	je     0x14003af5c
   14003af52:	mov    QWORD PTR [rbx+0x8],rbp
   14003af56:	mov    rax,QWORD PTR [rcx]
   14003af59:	call   QWORD PTR [rax+0x10]
   14003af5c:	mov    rbx,QWORD PTR [rsp+0x40]
   14003af61:	mov    rbp,QWORD PTR [rsp+0x48]
   14003af66:	mov    rsi,QWORD PTR [rsp+0x50]
   14003af6b:	add    rsp,0x30
   14003af6f:	pop    rdi
   14003af70:	ret    
   14003af71:	int3   
   14003af72:	int3   
   14003af73:	int3   
   14003af74:	mov    QWORD PTR [rsp+0x18],rbx
   14003af79:	mov    QWORD PTR [rsp+0x20],rbp
   14003af7e:	push   rsi
   14003af7f:	push   rdi
   14003af80:	push   r12
   14003af82:	sub    rsp,0x50
   14003af86:	mov    rax,QWORD PTR [rcx+0x8]
   14003af8a:	mov    rdi,rcx
   14003af8d:	test   rax,rax
   14003af90:	jne    0x14003af98
   14003af92:	call   0x1400208f8
   14003af97:	int3   
   14003af98:	mov    rcx,QWORD PTR [rax+0x50]
   14003af9c:	test   rcx,rcx
   14003af9f:	jne    0x14003afa7
   14003afa1:	call   0x1400208f8
   14003afa6:	int3   
   14003afa7:	call   0x1400271c8
   14003afac:	test   rax,rax
   14003afaf:	mov    rsi,rax
   14003afb2:	jne    0x14003afba
   14003afb4:	call   0x1400208f8
   14003afb9:	int3   
   14003afba:	mov    rcx,QWORD PTR [rax+0x40]
   14003afbe:	call   QWORD PTR [rip+0x29a84]        # 0x140064a48
   14003afc4:	xor    ebp,ebp
   14003afc6:	test   eax,eax
   14003afc8:	sete   bpl
   14003afcc:	test   ebp,ebp
   14003afce:	je     0x14003b03d
   14003afd0:	call   QWORD PTR [rip+0x299e2]        # 0x1400649b8
   14003afd6:	mov    rcx,rax
   14003afd9:	call   0x1400256f0
   14003afde:	lea    rdx,[rsp+0x40]
   14003afe3:	mov    rcx,QWORD PTR [rax+0x40]
   14003afe7:	call   QWORD PTR [rip+0x2996b]        # 0x140064958
   14003afed:	mov    rcx,QWORD PTR [rsi+0x40]
   14003aff1:	lea    rdx,[rsp+0x30]
   14003aff6:	call   QWORD PTR [rip+0x2995c]        # 0x140064958
   14003affc:	mov    eax,DWORD PTR [rsp+0x4c]
   14003b000:	and    DWORD PTR [rsp+0x28],0x0
   14003b005:	sub    eax,DWORD PTR [rsp+0x44]
   14003b009:	and    DWORD PTR [rsp+0x20],0x0
   14003b00e:	xor    r9d,r9d
   14003b011:	cdq    
   14003b012:	mov    rcx,rsi
   14003b015:	sub    eax,edx
   14003b017:	sar    eax,1
   14003b019:	mov    r8d,eax
   14003b01c:	mov    eax,DWORD PTR [rsp+0x48]
   14003b020:	sub    eax,DWORD PTR [rsp+0x40]
   14003b024:	cdq    
   14003b025:	sub    eax,edx
   14003b027:	sar    eax,1
   14003b029:	mov    edx,eax
   14003b02b:	call   0x140029ac4
   14003b030:	mov    edx,0x1
   14003b035:	mov    rcx,rsi
   14003b038:	call   0x140029b0c
   14003b03d:	mov    rax,QWORD PTR [rdi+0x8]
   14003b041:	lea    r8,[rdi+0x90]
   14003b048:	lea    rdx,[rip+0x30dc1]        # 0x14006be10
   14003b04f:	mov    rcx,QWORD PTR [rax+0x80]
   14003b056:	mov    rax,QWORD PTR [rcx]
   14003b059:	call   QWORD PTR [rax]
   14003b05b:	test   eax,eax
   14003b05d:	js     0x14003b0d8
   14003b05f:	mov    rcx,QWORD PTR [rdi+0x90]
   14003b066:	lea    r9,[rdi+0x98]
   14003b06d:	lea    r8,[rip+0x355b4]        # 0x140070628
   14003b074:	mov    rax,QWORD PTR [rcx]
   14003b077:	xor    edx,edx
   14003b079:	call   QWORD PTR [rax+0x18]
   14003b07c:	cmp    QWORD PTR [rdi+0x98],0x0
   14003b084:	mov    r12d,eax
   14003b087:	mov    eax,0x80004003
   14003b08c:	cmove  r12d,eax
   14003b090:	test   r12d,r12d
   14003b093:	jns    0x14003b15d
   14003b099:	test   ebp,ebp
   14003b09b:	je     0x14003b0d0
   14003b09d:	mov    ecx,DWORD PTR [rsp+0x3c]
   14003b0a1:	mov    r8d,DWORD PTR [rsp+0x34]
   14003b0a6:	mov    r9d,DWORD PTR [rsp+0x38]
   14003b0ab:	mov    edx,DWORD PTR [rsp+0x30]
   14003b0af:	and    DWORD PTR [rsp+0x28],0x0
   14003b0b4:	sub    ecx,r8d
   14003b0b7:	mov    DWORD PTR [rsp+0x20],ecx
   14003b0bb:	mov    rcx,rsi
   14003b0be:	sub    r9d,edx
   14003b0c1:	call   0x140029ac4
   14003b0c6:	xor    edx,edx
   14003b0c8:	mov    rcx,rsi
   14003b0cb:	call   0x140029b0c
   14003b0d0:	mov    eax,r12d
   14003b0d3:	jmp    0x14003b1a0
   14003b0d8:	mov    rax,QWORD PTR [rdi+0x8]
   14003b0dc:	lea    r8,[rsp+0x70]
   14003b0e1:	lea    rdx,[rip+0x30d88]        # 0x14006be70
   14003b0e8:	mov    rcx,QWORD PTR [rax+0x80]
   14003b0ef:	mov    rax,QWORD PTR [rcx]
   14003b0f2:	call   QWORD PTR [rax]
   14003b0f4:	test   eax,eax
   14003b0f6:	js     0x14003b1a0
   14003b0fc:	mov    rcx,QWORD PTR [rsp+0x70]
   14003b101:	lea    rdx,[rsp+0x78]
   14003b106:	mov    rax,QWORD PTR [rcx]
   14003b109:	call   QWORD PTR [rax+0x28]
   14003b10c:	mov    rcx,QWORD PTR [rsp+0x70]
   14003b111:	mov    rax,QWORD PTR [rcx]
   14003b114:	call   QWORD PTR [rax+0x10]
   14003b117:	mov    rcx,QWORD PTR [rsp+0x78]
   14003b11c:	test   rcx,rcx
   14003b11f:	jne    0x14003b128
   14003b121:	mov    eax,0x80004005
   14003b126:	jmp    0x14003b1a0
   14003b128:	mov    rax,QWORD PTR [rcx]
   14003b12b:	lea    r8,[rdi+0x10]
   14003b12f:	lea    rdx,[rip+0x35262]        # 0x140070398
   14003b136:	call   QWORD PTR [rax]
   14003b138:	mov    rcx,QWORD PTR [rsp+0x78]
   14003b13d:	mov    rdx,QWORD PTR [rcx]
   14003b140:	mov    ebx,eax
   14003b142:	call   QWORD PTR [rdx+0x10]
   14003b145:	test   ebx,ebx
   14003b147:	js     0x14003b19e
   14003b149:	mov    rcx,QWORD PTR [rdi+0x10]
   14003b14d:	lea    r8,[rdi+0x18]
   14003b151:	lea    rdx,[rip+0x35230]        # 0x140070388
   14003b158:	mov    rax,QWORD PTR [rcx]
   14003b15b:	call   QWORD PTR [rax]
   14003b15d:	mov    rcx,rdi
   14003b160:	call   0x140039b24
   14003b165:	test   ebp,ebp
   14003b167:	mov    ebx,eax
   14003b169:	je     0x14003b19e
   14003b16b:	mov    ecx,DWORD PTR [rsp+0x3c]
   14003b16f:	mov    r8d,DWORD PTR [rsp+0x34]
   14003b174:	mov    r9d,DWORD PTR [rsp+0x38]
   14003b179:	mov    edx,DWORD PTR [rsp+0x30]
   14003b17d:	and    DWORD PTR [rsp+0x28],0x0
   14003b182:	sub    ecx,r8d
   14003b185:	mov    DWORD PTR [rsp+0x20],ecx
   14003b189:	mov    rcx,rsi
   14003b18c:	sub    r9d,edx
   14003b18f:	call   0x140029ac4
   14003b194:	xor    edx,edx
   14003b196:	mov    rcx,rsi
   14003b199:	call   0x140029b0c
   14003b19e:	mov    eax,ebx
   14003b1a0:	lea    r11,[rsp+0x50]
   14003b1a5:	mov    rbx,QWORD PTR [r11+0x30]
   14003b1a9:	mov    rbp,QWORD PTR [r11+0x38]
   14003b1ad:	mov    rsp,r11
   14003b1b0:	pop    r12
   14003b1b2:	pop    rdi
   14003b1b3:	pop    rsi
   14003b1b4:	ret    
   14003b1b5:	int3   
   14003b1b6:	int3   
   14003b1b7:	int3   
   14003b1b8:	mov    QWORD PTR [rsp+0x8],rcx
   14003b1bd:	push   rdi
   14003b1be:	sub    rsp,0x30
   14003b1c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003b1cb:	mov    QWORD PTR [rsp+0x48],rbx
   14003b1d0:	mov    QWORD PTR [rsp+0x50],rsi
   14003b1d5:	mov    rbx,rdx
   14003b1d8:	mov    rdi,rcx
   14003b1db:	call   0x14001c3e8
   14003b1e0:	nop
   14003b1e1:	lea    rax,[rip+0x31710]        # 0x14006c8f8
   14003b1e8:	mov    QWORD PTR [rdi],rax
   14003b1eb:	mov    QWORD PTR [rdi+0x40],rbx
   14003b1ef:	xor    esi,esi
   14003b1f1:	mov    QWORD PTR [rdi+0x50],rsi
   14003b1f5:	or     DWORD PTR [rdi+0x58],0xffffffff
   14003b1f9:	mov    QWORD PTR [rdi+0x80],rsi
   14003b200:	mov    QWORD PTR [rdi+0x88],rsi
   14003b207:	mov    QWORD PTR [rdi+0x90],rsi
   14003b20e:	mov    QWORD PTR [rdi+0x98],rsi
   14003b215:	mov    DWORD PTR [rdi+0xa0],esi
   14003b21b:	mov    DWORD PTR [rdi+0xa4],esi
   14003b221:	mov    DWORD PTR [rdi+0xb0],esi
   14003b227:	mov    DWORD PTR [rdi+0xb4],esi
   14003b22d:	mov    DWORD PTR [rdi+0xd0],esi
   14003b233:	mov    DWORD PTR [rdi+0xd4],esi
   14003b239:	mov    QWORD PTR [rdi+0xd8],rsi
   14003b240:	mov    QWORD PTR [rdi+0xe0],rsi
   14003b247:	mov    QWORD PTR [rdi+0xe8],rsi
   14003b24e:	mov    DWORD PTR [rdi+0xf0],esi
   14003b254:	mov    DWORD PTR [rdi+0xf4],esi
   14003b25a:	call   0x14002b874
   14003b25f:	mov    r11,rax
   14003b262:	mov    ecx,esi
   14003b264:	cmp    rax,rsi
   14003b267:	setne  cl
   14003b26a:	cmp    ecx,esi
   14003b26c:	jne    0x14003b279
   14003b26e:	mov    ecx,0x80004005
   14003b273:	call   0x140001430
   14003b278:	int3   
   14003b279:	mov    rax,QWORD PTR [rax]
   14003b27c:	mov    rcx,r11
   14003b27f:	call   QWORD PTR [rax+0x18]
   14003b282:	add    rax,0x18
   14003b286:	mov    QWORD PTR [rdi+0xf8],rax
   14003b28d:	mov    DWORD PTR [rdi+0x100],esi
   14003b293:	lea    rcx,[rdi+0x120]
   14003b29a:	call   0x140042478
   14003b29f:	mov    QWORD PTR [rdi+0x130],rsi
   14003b2a6:	lea    rax,[rip+0x310bb]        # 0x14006c368
   14003b2ad:	mov    QWORD PTR [rdi+0x138],rax
   14003b2b4:	lea    rax,[rip+0x3151d]        # 0x14006c7d8
   14003b2bb:	mov    QWORD PTR [rdi+0x140],rax
   14003b2c2:	lea    rax,[rip+0x310ef]        # 0x14006c3b8
   14003b2c9:	mov    QWORD PTR [rdi+0x148],rax
   14003b2d0:	lea    rax,[rip+0x31141]        # 0x14006c418
   14003b2d7:	mov    QWORD PTR [rdi+0x150],rax
   14003b2de:	lea    rax,[rip+0x31173]        # 0x14006c458
   14003b2e5:	mov    QWORD PTR [rdi+0x158],rax
   14003b2ec:	lea    rax,[rip+0x31195]        # 0x14006c488
   14003b2f3:	mov    QWORD PTR [rdi+0x160],rax
   14003b2fa:	lea    rax,[rip+0x311c7]        # 0x14006c4c8
   14003b301:	mov    QWORD PTR [rdi+0x168],rax
   14003b308:	lea    rax,[rip+0x311e9]        # 0x14006c4f8
   14003b30f:	mov    QWORD PTR [rdi+0x170],rax
   14003b316:	lea    rax,[rip+0x31233]        # 0x14006c550
   14003b31d:	mov    QWORD PTR [rdi+0x178],rax
   14003b324:	xor    edx,edx
   14003b326:	lea    r8d,[rdx+0x18]
   14003b32a:	lea    rcx,[rdi+0x108]
   14003b331:	call   0x140047720
   14003b336:	mov    WORD PTR [rdi+0x108],si
   14003b33d:	mov    rax,rdi
   14003b340:	mov    rbx,QWORD PTR [rsp+0x48]
   14003b345:	mov    rsi,QWORD PTR [rsp+0x50]
   14003b34a:	add    rsp,0x30
   14003b34e:	pop    rdi
   14003b34f:	ret    
   14003b350:	int3   
   14003b351:	int3   
   14003b352:	int3   
   14003b353:	int3   
   14003b354:	int3   
   14003b355:	int3   
   14003b356:	int3   
   14003b357:	int3   
   14003b358:	rex push rbp
   14003b35a:	sub    rsp,0x20
   14003b35e:	mov    rbp,rdx
   14003b361:	mov    rcx,QWORD PTR [rbp+0x40]
   14003b365:	call   0x14001c420
   14003b36a:	add    rsp,0x20
   14003b36e:	pop    rbp
   14003b36f:	ret    
   14003b370:	int3   
   14003b371:	int3   
   14003b372:	int3   
   14003b373:	int3   
   14003b374:	int3   
   14003b375:	int3   
   14003b376:	int3   
   14003b377:	int3   
   14003b378:	rex push rbp
   14003b37a:	sub    rsp,0x20
   14003b37e:	mov    rbp,rdx
   14003b381:	mov    rcx,QWORD PTR [rbp+0x40]
   14003b385:	add    rcx,0xf8
   14003b38c:	call   0x1400010c0
   14003b391:	add    rsp,0x20
   14003b395:	pop    rbp
   14003b396:	ret    
   14003b397:	int3   
   14003b398:	rex push rdi
   14003b39a:	sub    rsp,0x30
   14003b39e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003b3a7:	mov    QWORD PTR [rsp+0x48],rbx
   14003b3ac:	mov    rdi,rcx
   14003b3af:	xor    ebx,ebx
   14003b3b1:	cmp    QWORD PTR [rcx+0xd8],rbx
   14003b3b8:	jne    0x14003b3eb
   14003b3ba:	mov    ecx,0xb8
   14003b3bf:	call   0x14001ac0c
   14003b3c4:	mov    QWORD PTR [rsp+0x40],rax
   14003b3c9:	cmp    rax,rbx
   14003b3cc:	je     0x14003b3dc
   14003b3ce:	mov    rdx,rdi
   14003b3d1:	mov    rcx,rax
   14003b3d4:	call   0x1400348d0
   14003b3d9:	mov    rbx,rax
   14003b3dc:	mov    QWORD PTR [rdi+0xd8],rbx
   14003b3e3:	mov    rcx,rbx
   14003b3e6:	call   0x14003af74
   14003b3eb:	mov    rbx,QWORD PTR [rsp+0x48]
   14003b3f0:	add    rsp,0x30
   14003b3f4:	pop    rdi
   14003b3f5:	ret    
   14003b3f6:	int3   
   14003b3f7:	int3   
   14003b3f8:	rex push rbp
   14003b3fa:	sub    rsp,0x20
   14003b3fe:	mov    rbp,rdx
   14003b401:	mov    rcx,QWORD PTR [rbp+0x40]
   14003b405:	call   0x14001ac50
   14003b40a:	add    rsp,0x20
   14003b40e:	pop    rbp
   14003b40f:	ret    
   14003b410:	mov    rax,rsp
   14003b413:	push   r12
   14003b415:	sub    rsp,0x60
   14003b419:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003b422:	mov    QWORD PTR [rax+0x8],rbx
   14003b426:	mov    QWORD PTR [rax+0x10],rsi
   14003b42a:	mov    QWORD PTR [rax+0x18],rdi
   14003b42e:	mov    rdi,r9
   14003b431:	mov    rsi,rdx
   14003b434:	mov    rbx,rcx
   14003b437:	and    QWORD PTR [rax-0x38],0x0
   14003b43c:	lea    r12,[rip+0x2d6dd]        # 0x140068b20
   14003b443:	mov    QWORD PTR [rax-0x40],r12
   14003b447:	mov    rdx,QWORD PTR [rcx-0x108]
   14003b44e:	lea    rcx,[rax-0x30]
   14003b452:	call   0x140021aec
   14003b457:	nop
   14003b458:	xor    eax,eax
   14003b45a:	test   rdi,rdi
   14003b45d:	setne  al
   14003b460:	test   eax,eax
   14003b462:	jne    0x14003b46a
   14003b464:	call   0x1400208f8
   14003b469:	int3   
   14003b46a:	and    QWORD PTR [rdi],0x0
   14003b46e:	cmp    QWORD PTR [rbx-0x10],0x0
   14003b473:	je     0x14003b4a2
   14003b475:	cmp    DWORD PTR [rsp+0x40],0x0
   14003b47a:	je     0x14003b489
   14003b47c:	mov    rdx,QWORD PTR [rsp+0x38]
   14003b481:	xor    ecx,ecx
   14003b483:	call   0x140020cc4
   14003b488:	nop
   14003b489:	mov    QWORD PTR [rsp+0x28],r12
   14003b48e:	lea    rcx,[rsp+0x28]
   14003b493:	call   0x14001ef90
   14003b498:	mov    eax,0x80004005
   14003b49d:	jmp    0x14003b57f
   14003b4a2:	mov    rax,QWORD PTR [rbx-0x100]
   14003b4a9:	mov    rcx,QWORD PTR [rax+0x40]
   14003b4ad:	mov    rcx,QWORD PTR [rcx+0x40]
   14003b4b1:	call   QWORD PTR [rip+0x294f1]        # 0x1400649a8
   14003b4b7:	mov    rcx,rax
   14003b4ba:	call   0x14002b0e4
   14003b4bf:	mov    QWORD PTR [rbx-0x10],rax
   14003b4c3:	test   rax,rax
   14003b4c6:	jne    0x14003b4f4
   14003b4c8:	cmp    DWORD PTR [rsp+0x40],eax
   14003b4cc:	je     0x14003b4db
   14003b4ce:	mov    rdx,QWORD PTR [rsp+0x38]
   14003b4d3:	xor    ecx,ecx
   14003b4d5:	call   0x140020cc4
   14003b4da:	nop
   14003b4db:	mov    QWORD PTR [rsp+0x28],r12
   14003b4e0:	lea    rcx,[rsp+0x28]
   14003b4e5:	call   0x14001ef90
   14003b4ea:	mov    eax,0x80004005
   14003b4ef:	jmp    0x14003b57f
   14003b4f4:	test   rsi,rsi
   14003b4f7:	jne    0x14003b509
   14003b4f9:	movdqu xmm0,XMMWORD PTR [rbx-0xe4]
   14003b501:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14003b507:	jmp    0x14003b51e
   14003b509:	lea    rdx,[rbx-0xe4]
   14003b510:	mov    r8,rsi
   14003b513:	lea    rcx,[rsp+0x48]
   14003b518:	call   QWORD PTR [rip+0x2942a]        # 0x140064948
   14003b51e:	lea    rcx,[rsp+0x48]
   14003b523:	call   QWORD PTR [rip+0x28bcf]        # 0x1400640f8
   14003b529:	mov    rdx,rax
   14003b52c:	lea    rcx,[rsp+0x28]
   14003b531:	call   0x14002b558
   14003b536:	mov    r8d,0x1
   14003b53c:	lea    rdx,[rsp+0x28]
   14003b541:	mov    rcx,QWORD PTR [rbx-0x10]
   14003b545:	call   0x14002adb8
   14003b54a:	mov    rax,QWORD PTR [rbx-0x10]
   14003b54e:	test   rax,rax
   14003b551:	je     0x14003b557
   14003b553:	mov    rax,QWORD PTR [rax+0x8]
   14003b557:	mov    QWORD PTR [rdi],rax
   14003b55a:	cmp    DWORD PTR [rsp+0x40],0x0
   14003b55f:	je     0x14003b56e
   14003b561:	mov    rdx,QWORD PTR [rsp+0x38]
   14003b566:	xor    ecx,ecx
   14003b568:	call   0x140020cc4
   14003b56d:	nop
   14003b56e:	mov    QWORD PTR [rsp+0x28],r12
   14003b573:	lea    rcx,[rsp+0x28]
   14003b578:	call   0x14001ef90
   14003b57d:	xor    eax,eax
   14003b57f:	lea    r11,[rsp+0x60]
   14003b584:	mov    rbx,QWORD PTR [r11+0x10]
   14003b588:	mov    rsi,QWORD PTR [r11+0x18]
   14003b58c:	mov    rdi,QWORD PTR [r11+0x20]
   14003b590:	mov    rsp,r11
   14003b593:	pop    r12
   14003b595:	ret    
   14003b596:	int3   
   14003b597:	int3   
   14003b598:	int3   
   14003b599:	int3   
   14003b59a:	int3   
   14003b59b:	int3   
   14003b59c:	int3   
   14003b59d:	int3   
   14003b59e:	int3   
   14003b59f:	int3   
   14003b5a0:	rex push rbp
   14003b5a2:	sub    rsp,0x20
   14003b5a6:	mov    rbp,rdx
   14003b5a9:	lea    rcx,[rbp+0x28]
   14003b5ad:	call   0x14001f0f8
   14003b5b2:	add    rsp,0x20
   14003b5b6:	pop    rbp
   14003b5b7:	ret    
   14003b5b8:	int3   
   14003b5b9:	int3   
   14003b5ba:	int3   
   14003b5bb:	int3   
   14003b5bc:	int3   
   14003b5bd:	int3   
   14003b5be:	int3   
   14003b5bf:	int3   
   14003b5c0:	rex push rbp
   14003b5c2:	sub    rsp,0x20
   14003b5c6:	mov    rbp,rdx
   14003b5c9:	lea    rcx,[rbp+0x38]
   14003b5cd:	call   0x1400236a8
   14003b5d2:	add    rsp,0x20
   14003b5d6:	pop    rbp
   14003b5d7:	ret    
   14003b5d8:	mov    rax,rsp
   14003b5db:	push   r12
   14003b5dd:	sub    rsp,0x70
   14003b5e1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003b5ea:	mov    QWORD PTR [rax+0x8],rbx
   14003b5ee:	mov    QWORD PTR [rax+0x10],rsi
   14003b5f2:	mov    QWORD PTR [rax+0x18],rdi
   14003b5f6:	mov    edi,r8d
   14003b5f9:	mov    rsi,rdx
   14003b5fc:	mov    rbx,rcx
   14003b5ff:	and    QWORD PTR [rax-0x38],0x0
   14003b604:	lea    r12,[rip+0x2d515]        # 0x140068b20
   14003b60b:	mov    QWORD PTR [rax-0x40],r12
   14003b60f:	mov    rdx,QWORD PTR [rcx-0x108]
   14003b616:	lea    rcx,[rax-0x50]
   14003b61a:	call   0x140021aec
   14003b61f:	nop
   14003b620:	test   rsi,rsi
   14003b623:	jne    0x14003b650
   14003b625:	mov    rax,QWORD PTR [rbx]
   14003b628:	mov    r8d,edi
   14003b62b:	xor    edx,edx
   14003b62d:	mov    rcx,rbx
   14003b630:	call   QWORD PTR [rax+0xc8]
   14003b636:	mov    ebx,eax
   14003b638:	cmp    DWORD PTR [rsp+0x30],esi
   14003b63c:	je     0x14003b64b
   14003b63e:	mov    rdx,QWORD PTR [rsp+0x28]
   14003b643:	xor    ecx,ecx
   14003b645:	call   0x140020cc4
   14003b64a:	nop
   14003b64b:	jmp    0x14003b6f1
   14003b650:	mov    rcx,rsi
   14003b653:	call   0x14002b534
   14003b658:	mov    rsi,rax
   14003b65b:	lea    rdx,[rsp+0x48]
   14003b660:	mov    rcx,QWORD PTR [rax+0x8]
   14003b664:	call   QWORD PTR [rip+0x28a3e]        # 0x1400640a8
   14003b66a:	lea    r8,[rbx-0xe4]
   14003b671:	lea    rdx,[rsp+0x48]
   14003b676:	lea    rcx,[rsp+0x58]
   14003b67b:	call   QWORD PTR [rip+0x292c7]        # 0x140064948
   14003b681:	lea    rdx,[rsp+0x48]
   14003b686:	lea    rcx,[rsp+0x58]
   14003b68b:	call   QWORD PTR [rip+0x2927f]        # 0x140064910
   14003b691:	test   eax,eax
   14003b693:	jne    0x14003b6be
   14003b695:	mov    rax,QWORD PTR [rbx]
   14003b698:	mov    r8d,edi
   14003b69b:	xor    edx,edx
   14003b69d:	mov    rcx,rbx
   14003b6a0:	call   QWORD PTR [rax+0xc8]
   14003b6a6:	mov    ebx,eax
   14003b6a8:	cmp    DWORD PTR [rsp+0x30],0x0
   14003b6ad:	je     0x14003b6bc
   14003b6af:	mov    rdx,QWORD PTR [rsp+0x28]
   14003b6b4:	xor    ecx,ecx
   14003b6b6:	call   0x140020cc4
   14003b6bb:	nop
   14003b6bc:	jmp    0x14003b6f1
   14003b6be:	mov    rax,QWORD PTR [rbx-0x100]
   14003b6c5:	mov    rcx,QWORD PTR [rax+0x40]
   14003b6c9:	mov    r8d,edi
   14003b6cc:	mov    rdx,QWORD PTR [rsi+0x8]
   14003b6d0:	mov    rcx,QWORD PTR [rcx+0x40]
   14003b6d4:	call   QWORD PTR [rip+0x2938e]        # 0x140064a68
   14003b6da:	nop
   14003b6db:	cmp    DWORD PTR [rsp+0x30],0x0
   14003b6e0:	je     0x14003b6ef
   14003b6e2:	mov    rdx,QWORD PTR [rsp+0x28]
   14003b6e7:	xor    ecx,ecx
   14003b6e9:	call   0x140020cc4
   14003b6ee:	nop
   14003b6ef:	xor    ebx,ebx
   14003b6f1:	mov    QWORD PTR [rsp+0x38],r12
   14003b6f6:	lea    rcx,[rsp+0x38]
   14003b6fb:	call   0x14001ef90
   14003b700:	mov    eax,ebx
   14003b702:	lea    r11,[rsp+0x70]
   14003b707:	mov    rbx,QWORD PTR [r11+0x10]
   14003b70b:	mov    rsi,QWORD PTR [r11+0x18]
   14003b70f:	mov    rdi,QWORD PTR [r11+0x20]
   14003b713:	mov    rsp,r11
   14003b716:	pop    r12
   14003b718:	ret    
   14003b719:	int3   
   14003b71a:	int3   
   14003b71b:	int3   
   14003b71c:	int3   
   14003b71d:	int3   
   14003b71e:	int3   
   14003b71f:	int3   
   14003b720:	int3   
   14003b721:	int3   
   14003b722:	int3   
   14003b723:	int3   
   14003b724:	int3   
   14003b725:	int3   
   14003b726:	int3   
   14003b727:	int3   
   14003b728:	rex push rbp
   14003b72a:	sub    rsp,0x20
   14003b72e:	mov    rbp,rdx
   14003b731:	lea    rcx,[rbp+0x38]
   14003b735:	call   0x14001f0f8
   14003b73a:	add    rsp,0x20
   14003b73e:	pop    rbp
   14003b73f:	ret    
   14003b740:	int3   
   14003b741:	int3   
   14003b742:	int3   
   14003b743:	int3   
   14003b744:	int3   
   14003b745:	int3   
   14003b746:	int3   
   14003b747:	int3   
   14003b748:	rex push rbp
   14003b74a:	sub    rsp,0x20
   14003b74e:	mov    rbp,rdx
   14003b751:	lea    rcx,[rbp+0x28]
   14003b755:	call   0x1400236a8
   14003b75a:	add    rsp,0x20
   14003b75e:	pop    rbp
   14003b75f:	ret    
   14003b760:	mov    rax,rsp
   14003b763:	mov    QWORD PTR [rax+0x8],rbx
   14003b767:	mov    QWORD PTR [rax+0x10],rbp
   14003b76b:	mov    QWORD PTR [rax+0x18],rsi
   14003b76f:	mov    QWORD PTR [rax+0x20],rdi
   14003b773:	push   r12
   14003b775:	sub    rsp,0x20
   14003b779:	mov    rbx,rcx
   14003b77c:	mov    rcx,QWORD PTR [rcx+0xe8]
   14003b783:	mov    rsi,r9
   14003b786:	test   rcx,rcx
   14003b789:	movzx  ebp,r8w
   14003b78d:	mov    r12d,edx
   14003b790:	je     0x14003b7c1
   14003b792:	mov    rcx,QWORD PTR [rcx+0xd8]
   14003b799:	xor    r8d,r8d
   14003b79c:	mov    rdx,rbx
   14003b79f:	mov    rax,QWORD PTR [rcx]
   14003b7a2:	call   QWORD PTR [rax+0x10]
   14003b7a5:	mov    r11,QWORD PTR [rbx+0xe8]
   14003b7ac:	mov    rcx,QWORD PTR [r11+0xd8]
   14003b7b3:	mov    rax,QWORD PTR [rcx]
   14003b7b6:	call   QWORD PTR [rax+0x18]
   14003b7b9:	and    QWORD PTR [rbx+0xe8],0x0
   14003b7c1:	mov    rdi,QWORD PTR [rsp+0x50]
   14003b7c6:	test   rdi,rdi
   14003b7c9:	je     0x14003b856
   14003b7cf:	mov    rcx,QWORD PTR [rdi+0xa0]
   14003b7d6:	mov    rax,QWORD PTR [rcx]
   14003b7d9:	call   QWORD PTR [rax+0x168]
   14003b7df:	test   rsi,rsi
   14003b7e2:	mov    r11,QWORD PTR [rdi+0xa0]
   14003b7e9:	movzx  eax,bp
   14003b7ec:	mov    DWORD PTR [rbx+0xf0],r12d
   14003b7f3:	mov    QWORD PTR [rbx+0xe8],r11
   14003b7fa:	mov    DWORD PTR [rbx+0xf4],eax
   14003b800:	jne    0x14003b806
   14003b802:	xor    eax,eax
   14003b804:	jmp    0x14003b80e
   14003b806:	mov    rcx,rsi
   14003b809:	call   0x140048610
   14003b80e:	lea    rcx,[rbx+0xf8]
   14003b815:	mov    r8d,eax
   14003b818:	mov    rdx,rsi
   14003b81b:	call   0x1400037d0
   14003b820:	mov    r11,QWORD PTR [rbx+0xe8]
   14003b827:	mov    r8d,0x1
   14003b82d:	mov    rcx,QWORD PTR [r11+0xd8]
   14003b834:	mov    rdx,rbx
   14003b837:	mov    rax,QWORD PTR [rcx]
   14003b83a:	call   QWORD PTR [rax+0x10]
   14003b83d:	mov    rcx,QWORD PTR [rbx+0xe8]
   14003b844:	test   rcx,rcx
   14003b847:	je     0x14003b856
   14003b849:	mov    rcx,QWORD PTR [rcx+0xd8]
   14003b850:	mov    rax,QWORD PTR [rcx]
   14003b853:	call   QWORD PTR [rax+0x18]
   14003b856:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b85b:	mov    rbp,QWORD PTR [rsp+0x38]
   14003b860:	mov    rsi,QWORD PTR [rsp+0x40]
   14003b865:	mov    rdi,QWORD PTR [rsp+0x48]
   14003b86a:	add    rsp,0x20
   14003b86e:	pop    r12
   14003b870:	ret    
   14003b871:	int3   
   14003b872:	int3   
   14003b873:	int3   
   14003b874:	mov    QWORD PTR [rsp+0x8],rcx
   14003b879:	push   rbx
   14003b87a:	push   rbp
   14003b87b:	push   rsi
   14003b87c:	push   rdi
   14003b87d:	push   r12
   14003b87f:	sub    rsp,0x30
   14003b883:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003b88c:	mov    rdi,rcx
   14003b88f:	lea    rax,[rip+0x30732]        # 0x14006bfc8
   14003b896:	mov    QWORD PTR [rcx],rax
   14003b899:	xor    r12d,r12d
   14003b89c:	cmp    DWORD PTR [rcx+0xb0],r12d
   14003b8a3:	je     0x14003b91c
   14003b8a5:	mov    rcx,QWORD PTR [rcx+0xa0]
   14003b8ac:	cmp    rcx,r12
   14003b8af:	je     0x14003b91c
   14003b8b1:	mov    rcx,QWORD PTR [rcx]
   14003b8b4:	mov    rax,QWORD PTR [rcx]
   14003b8b7:	lea    r8,[rsp+0x70]
   14003b8bc:	lea    rdx,[rip+0x34cd5]        # 0x140070598
   14003b8c3:	call   QWORD PTR [rax]
   14003b8c5:	cmp    eax,r12d
   14003b8c8:	jl     0x14003b91c
   14003b8ca:	mov    rcx,QWORD PTR [rsp+0x70]
   14003b8cf:	cmp    rcx,r12
   14003b8d2:	je     0x14003b91c
   14003b8d4:	mov    QWORD PTR [rsp+0x68],r12
   14003b8d9:	mov    rax,QWORD PTR [rcx]
   14003b8dc:	lea    r8,[rsp+0x68]
   14003b8e1:	lea    rdx,[rip+0x34df0]        # 0x1400706d8
   14003b8e8:	call   QWORD PTR [rax+0x20]
   14003b8eb:	cmp    eax,r12d
   14003b8ee:	jl     0x14003b911
   14003b8f0:	mov    rcx,QWORD PTR [rsp+0x68]
   14003b8f5:	cmp    rcx,r12
   14003b8f8:	je     0x14003b911
   14003b8fa:	mov    rax,QWORD PTR [rcx]
   14003b8fd:	mov    edx,DWORD PTR [rdi+0xb0]
   14003b903:	call   QWORD PTR [rax+0x30]
   14003b906:	mov    rcx,QWORD PTR [rsp+0x68]
   14003b90b:	mov    rax,QWORD PTR [rcx]
   14003b90e:	call   QWORD PTR [rax+0x10]
   14003b911:	mov    rcx,QWORD PTR [rsp+0x70]
   14003b916:	mov    rax,QWORD PTR [rcx]
   14003b919:	call   QWORD PTR [rax+0x10]
   14003b91c:	cmp    QWORD PTR [rdi+0x48],r12
   14003b920:	je     0x14003b956
   14003b922:	mov    rax,QWORD PTR [rdi+0x38]
   14003b926:	mov    rbx,QWORD PTR [rax+0x10]
   14003b92a:	cmp    rbx,r12
   14003b92d:	je     0x14003b956
   14003b92f:	mov    rcx,QWORD PTR [rbx]
   14003b932:	cmp    rcx,r12
   14003b935:	je     0x14003b956
   14003b937:	mov    rax,QWORD PTR [rcx]
   14003b93a:	xor    r8d,r8d
   14003b93d:	mov    edx,DWORD PTR [rbx+0xc]
   14003b940:	call   QWORD PTR [rax+0x178]
   14003b946:	mov    r11,QWORD PTR [rbx]
   14003b949:	mov    QWORD PTR [r11+0xe8],r12
   14003b950:	cmp    QWORD PTR [rdi+0x48],r12
   14003b954:	jne    0x14003b922
   14003b956:	lea    rcx,[rdi+0x30]
   14003b95a:	call   0x14003eb34
   14003b95f:	cmp    QWORD PTR [rdi+0x80],r12
   14003b966:	je     0x14003b9b0
   14003b968:	mov    ebx,r12d
   14003b96b:	cmp    QWORD PTR [rdi+0x70],r12
   14003b96f:	jle    0x14003b995
   14003b971:	mov    rax,r12
   14003b974:	lea    rcx,[rax+rax*2]
   14003b978:	mov    rax,QWORD PTR [rdi+0x80]
   14003b97f:	lea    rcx,[rax+rcx*8]
   14003b983:	call   QWORD PTR [rip+0x28d17]        # 0x1400646a0
   14003b989:	add    ebx,0x1
   14003b98c:	movsxd rax,ebx
   14003b98f:	cmp    rax,QWORD PTR [rdi+0x70]
   14003b993:	jl     0x14003b974
   14003b995:	cmp    QWORD PTR [rdi+0x70],r12
   14003b999:	je     0x14003b9b0
   14003b99b:	mov    rcx,QWORD PTR [rdi+0x78]
   14003b99f:	call   0x14001ac50
   14003b9a4:	mov    rcx,QWORD PTR [rdi+0x80]
   14003b9ab:	call   0x14001ac50
   14003b9b0:	mov    rcx,QWORD PTR [rdi+0x10]
   14003b9b4:	cmp    rcx,r12
   14003b9b7:	je     0x14003b9bf
   14003b9b9:	mov    rax,QWORD PTR [rcx]
   14003b9bc:	call   QWORD PTR [rax+0x10]
   14003b9bf:	mov    rcx,QWORD PTR [rdi+0x18]
   14003b9c3:	cmp    rcx,r12
   14003b9c6:	je     0x14003b9ce
   14003b9c8:	mov    rax,QWORD PTR [rcx]
   14003b9cb:	call   QWORD PTR [rax+0x10]
   14003b9ce:	cmp    QWORD PTR [rdi+0x28],r12
   14003b9d2:	je     0x14003ba5a
   14003b9d8:	mov    esi,r12d
   14003b9db:	cmp    QWORD PTR [rdi+0x20],r12
   14003b9df:	jle    0x14003ba50
   14003b9e1:	mov    rbx,r12
   14003b9e4:	mov    rax,QWORD PTR [rdi+0x28]
   14003b9e8:	mov    rcx,QWORD PTR [rbx+rax*1+0x38]
   14003b9ed:	mov    rdx,QWORD PTR [rcx+0x8]
   14003b9f1:	cmp    rdx,r12
   14003b9f4:	je     0x14003ba11
   14003b9f6:	mov    rax,rdx
   14003b9f9:	cmp    rdx,r12
   14003b9fc:	je     0x14003ba4a
   14003b9fe:	mov    rdx,QWORD PTR [rdx]
   14003ba01:	mov    rax,QWORD PTR [rax+0x10]
   14003ba05:	mov    QWORD PTR [rax+0xe8],r12
   14003ba0c:	cmp    rdx,r12
   14003ba0f:	jne    0x14003b9f6
   14003ba11:	mov    rcx,QWORD PTR [rdi+0x28]
   14003ba15:	mov    rcx,QWORD PTR [rbx+rcx*1+0x38]
   14003ba1a:	call   0x14003eb34
   14003ba1f:	mov    r11,QWORD PTR [rdi+0x28]
   14003ba23:	mov    rcx,QWORD PTR [rbx+r11*1+0x38]
   14003ba28:	cmp    rcx,r12
   14003ba2b:	je     0x14003ba38
   14003ba2d:	mov    rax,QWORD PTR [rcx]
   14003ba30:	mov    edx,0x1
   14003ba35:	call   QWORD PTR [rax+0x8]
   14003ba38:	add    esi,0x1
   14003ba3b:	add    rbx,0x40
   14003ba3f:	movsxd rax,esi
   14003ba42:	cmp    rax,QWORD PTR [rdi+0x20]
   14003ba46:	jge    0x14003ba50
   14003ba48:	jmp    0x14003b9e4
   14003ba4a:	call   0x1400208f8
   14003ba4f:	int3   
   14003ba50:	mov    rcx,QWORD PTR [rdi+0x28]
   14003ba54:	call   QWORD PTR [rip+0x291c6]        # 0x140064c20
   14003ba5a:	mov    rcx,QWORD PTR [rdi+0x68]
   14003ba5e:	cmp    rcx,r12
   14003ba61:	je     0x14003ba69
   14003ba63:	call   QWORD PTR [rip+0x291b7]        # 0x140064c20
   14003ba69:	mov    rsi,QWORD PTR [rdi+0xa8]
   14003ba70:	cmp    rsi,r12
   14003ba73:	je     0x14003bad6
   14003ba75:	mov    rax,QWORD PTR [rdi+0xa0]
   14003ba7c:	mov    rbx,QWORD PTR [rax]
   14003ba7f:	mov    rdx,rbx
   14003ba82:	mov    rcx,rsi
   14003ba85:	call   0x140038930
   14003ba8a:	mov    rdx,rbx
   14003ba8d:	mov    rcx,rsi
   14003ba90:	call   0x140037b78
   14003ba95:	mov    rbx,QWORD PTR [rdi+0xa8]
   14003ba9c:	mov    rcx,QWORD PTR [rbx+0x28]
   14003baa0:	call   QWORD PTR [rip+0x2917a]        # 0x140064c20
   14003baa6:	mov    QWORD PTR [rbx+0x28],r12
   14003baaa:	mov    rcx,QWORD PTR [rbx+0x30]
   14003baae:	call   QWORD PTR [rip+0x2916c]        # 0x140064c20
   14003bab4:	mov    QWORD PTR [rbx+0x30],r12
   14003bab8:	mov    rcx,QWORD PTR [rbx+0x10]
   14003babc:	call   0x14001ac50
   14003bac1:	mov    QWORD PTR [rbx+0x10],r12
   14003bac5:	mov    rcx,QWORD PTR [rbx+0x20]
   14003bac9:	call   0x14001ac50
   14003bace:	mov    QWORD PTR [rbx+0x20],r12
   14003bad2:	mov    QWORD PTR [rbx+0x18],r12
   14003bad6:	mov    rbx,QWORD PTR [rdi+0xa8]
   14003badd:	cmp    rbx,r12
   14003bae0:	je     0x14003bb24
   14003bae2:	mov    rcx,QWORD PTR [rbx+0x28]
   14003bae6:	call   QWORD PTR [rip+0x29134]        # 0x140064c20
   14003baec:	mov    QWORD PTR [rbx+0x28],r12
   14003baf0:	mov    rcx,QWORD PTR [rbx+0x30]
   14003baf4:	call   QWORD PTR [rip+0x29126]        # 0x140064c20
   14003bafa:	mov    QWORD PTR [rbx+0x30],r12
   14003bafe:	mov    rcx,QWORD PTR [rbx+0x10]
   14003bb02:	call   0x14001ac50
   14003bb07:	mov    QWORD PTR [rbx+0x10],r12
   14003bb0b:	mov    rcx,QWORD PTR [rbx+0x20]
   14003bb0f:	call   0x14001ac50
   14003bb14:	mov    QWORD PTR [rbx+0x20],r12
   14003bb18:	mov    QWORD PTR [rbx+0x18],r12
   14003bb1c:	mov    rcx,rbx
   14003bb1f:	call   0x14001ac50
   14003bb24:	mov    rbx,QWORD PTR [rdi+0xa0]
   14003bb2b:	mov    QWORD PTR [rsp+0x68],rbx
   14003bb30:	cmp    rbx,r12
   14003bb33:	je     0x14003bb63
   14003bb35:	mov    rcx,rbx
   14003bb38:	call   0x14003ae7c
   14003bb3d:	mov    rcx,QWORD PTR [rbx+0x8]
   14003bb41:	cmp    rcx,r12
   14003bb44:	je     0x14003bb4d
   14003bb46:	mov    rax,QWORD PTR [rcx]
   14003bb49:	call   QWORD PTR [rax+0x10]
   14003bb4c:	nop
   14003bb4d:	mov    rcx,QWORD PTR [rbx]
   14003bb50:	cmp    rcx,r12
   14003bb53:	je     0x14003bb5b
   14003bb55:	mov    rax,QWORD PTR [rcx]
   14003bb58:	call   QWORD PTR [rax+0x10]
   14003bb5b:	mov    rcx,rbx
   14003bb5e:	call   0x14001ac50
   14003bb63:	mov    rcx,QWORD PTR [rdi+0x98]
   14003bb6a:	cmp    rcx,r12
   14003bb6d:	je     0x14003bb75
   14003bb6f:	mov    rax,QWORD PTR [rcx]
   14003bb72:	call   QWORD PTR [rax+0x10]
   14003bb75:	mov    rcx,QWORD PTR [rdi+0x90]
   14003bb7c:	cmp    rcx,r12
   14003bb7f:	je     0x14003bb88
   14003bb81:	mov    rax,QWORD PTR [rcx]
   14003bb84:	call   QWORD PTR [rax+0x10]
   14003bb87:	nop
   14003bb88:	lea    rcx,[rdi+0x30]
   14003bb8c:	add    rsp,0x30
   14003bb90:	pop    r12
   14003bb92:	pop    rdi
   14003bb93:	pop    rsi
   14003bb94:	pop    rbp
   14003bb95:	pop    rbx
   14003bb96:	jmp    0x14003ec7c
   14003bb9b:	int3   
   14003bb9c:	int3   
   14003bb9d:	int3   
   14003bb9e:	int3   
   14003bb9f:	int3   
   14003bba0:	int3   
   14003bba1:	int3   
   14003bba2:	int3   
   14003bba3:	int3   
   14003bba4:	rex push rbp
   14003bba6:	sub    rsp,0x20
   14003bbaa:	mov    rbp,rdx
   14003bbad:	mov    rcx,QWORD PTR [rbp+0x60]
   14003bbb1:	add    rcx,0x30
   14003bbb5:	call   0x14003ec7c
   14003bbba:	add    rsp,0x20
   14003bbbe:	pop    rbp
   14003bbbf:	ret    
   14003bbc0:	int3   
   14003bbc1:	int3   
   14003bbc2:	int3   
   14003bbc3:	int3   
   14003bbc4:	rex push rbp
   14003bbc6:	sub    rsp,0x20
   14003bbca:	mov    rbp,rdx
   14003bbcd:	mov    rcx,QWORD PTR [rbp+0x68]
   14003bbd1:	call   0x1400373b0
   14003bbd6:	add    rsp,0x20
   14003bbda:	pop    rbp
   14003bbdb:	ret    
   14003bbdc:	mov    QWORD PTR [rsp+0x8],rbx
   14003bbe1:	mov    QWORD PTR [rsp+0x10],rbp
   14003bbe6:	push   rsi
   14003bbe7:	push   rdi
   14003bbe8:	push   r12
   14003bbea:	sub    rsp,0x30
   14003bbee:	test   r8d,r8d
   14003bbf1:	mov    rax,QWORD PTR [rcx]
   14003bbf4:	mov    rbp,rdx
   14003bbf7:	mov    rbx,rcx
   14003bbfa:	je     0x14003bdb7
   14003bc00:	xor    r8d,r8d
   14003bc03:	call   QWORD PTR [rax+0x10]
   14003bc06:	xor    edi,edi
   14003bc08:	cmp    QWORD PTR [rbx+0x90],rdi
   14003bc0f:	je     0x14003bd2f
   14003bc15:	cmp    QWORD PTR [rbx+0x20],rdi
   14003bc19:	jle    0x14003bcbe
   14003bc1f:	mov    rax,QWORD PTR [rbx+0xa8]
   14003bc26:	lea    r12d,[rdi+0x1]
   14003bc2a:	cmp    BYTE PTR [rax+0x38],0x0
   14003bc2e:	movsxd rdx,r12d
   14003bc31:	je     0x14003bcdd
   14003bc37:	mov    r10,QWORD PTR [rax+0x18]
   14003bc3b:	xor    ecx,ecx
   14003bc3d:	test   r10,r10
   14003bc40:	je     0x14003bc61
   14003bc42:	mov    r9,QWORD PTR [rax+0x28]
   14003bc46:	lea    r8,[r9+0x10]
   14003bc4a:	cmp    QWORD PTR [r8],rdx
   14003bc4d:	je     0x14003bcd9
   14003bc53:	add    ecx,0x1
   14003bc56:	add    r8,0x50
   14003bc5a:	mov    eax,ecx
   14003bc5c:	cmp    rax,r10
   14003bc5f:	jb     0x14003bc4a
   14003bc61:	xor    edx,edx
   14003bc63:	lea    rcx,[rsp+0x68]
   14003bc68:	call   0x14000c360
   14003bc6d:	mov    rdx,QWORD PTR [rax]
   14003bc70:	test   rdx,rdx
   14003bc73:	je     0x14003bd24
   14003bc79:	mov    rcx,QWORD PTR [rbp+0xf8]
   14003bc80:	call   0x140048b70
   14003bc85:	mov    rdx,QWORD PTR [rsp+0x68]
   14003bc8a:	test   eax,eax
   14003bc8c:	sete   sil
   14003bc90:	add    rdx,0xffffffffffffffe8
   14003bc94:	or     eax,0xffffffff
   14003bc97:	lock xadd DWORD PTR [rdx+0x10],eax
   14003bc9c:	add    eax,0xffffffff
   14003bc9f:	test   eax,eax
   14003bca1:	jg     0x14003bcac
   14003bca3:	mov    rcx,QWORD PTR [rdx]
   14003bca6:	mov    rax,QWORD PTR [rcx]
   14003bca9:	call   QWORD PTR [rax+0x8]
   14003bcac:	test   sil,sil
   14003bcaf:	jne    0x14003bd0a
   14003bcb1:	movsxd rdi,r12d
   14003bcb4:	cmp    rdi,QWORD PTR [rbx+0x20]
   14003bcb8:	jl     0x14003bc1f
   14003bcbe:	and    QWORD PTR [rbp+0xe8],0x0
   14003bcc6:	mov    rbx,QWORD PTR [rsp+0x50]
   14003bccb:	mov    rbp,QWORD PTR [rsp+0x58]
   14003bcd0:	add    rsp,0x30
   14003bcd4:	pop    r12
   14003bcd6:	pop    rdi
   14003bcd7:	pop    rsi
   14003bcd8:	ret    
   14003bcd9:	mov    edx,ecx
   14003bcdb:	jmp    0x14003bcfa
   14003bcdd:	mov    r9,QWORD PTR [rax+0x28]
   14003bce1:	mov    rax,QWORD PTR [rax+0x18]
   14003bce5:	mov    r8,QWORD PTR [r9+0x10]
   14003bce9:	lea    rcx,[rax+r8*1-0x1]
   14003bcee:	cmp    rdx,rcx
   14003bcf1:	ja     0x14003bc61
   14003bcf7:	sub    rdx,r8
   14003bcfa:	lea    rax,[rdx+rdx*4]
   14003bcfe:	add    rax,rax
   14003bd01:	mov    rdx,QWORD PTR [r9+rax*8]
   14003bd05:	jmp    0x14003bc63
   14003bd0a:	mov    rcx,QWORD PTR [rbx+0x28]
   14003bd0e:	movsxd rax,edi
   14003bd11:	mov    rdx,rbp
   14003bd14:	shl    rax,0x6
   14003bd18:	mov    rcx,QWORD PTR [rax+rcx*1+0x38]
   14003bd1d:	call   0x14003ed58
   14003bd22:	jmp    0x14003bcc6
   14003bd24:	mov    ecx,0x80004005
   14003bd29:	call   0x140001430
   14003bd2e:	int3   
   14003bd2f:	cmp    QWORD PTR [rbx+0x20],rdi
   14003bd33:	jle    0x14003bcbe
   14003bd35:	xor    esi,esi
   14003bd37:	mov    rdx,QWORD PTR [rbx+0x28]
   14003bd3b:	cmp    QWORD PTR [rsi+rdx*1+0x28],0x0
   14003bd41:	je     0x14003bd96
   14003bd43:	mov    rdx,QWORD PTR [rsi+rdx*1+0x28]
   14003bd48:	lea    rcx,[rsp+0x20]
   14003bd4d:	call   0x140004d00
   14003bd52:	mov    rdx,QWORD PTR [rax]
   14003bd55:	test   rdx,rdx
   14003bd58:	je     0x14003bdac
   14003bd5a:	mov    rcx,QWORD PTR [rbp+0xf8]
   14003bd61:	call   0x140048b70
   14003bd66:	mov    rdx,QWORD PTR [rsp+0x20]
   14003bd6b:	test   eax,eax
   14003bd6d:	sete   r12b
   14003bd71:	add    rdx,0xffffffffffffffe8
   14003bd75:	or     eax,0xffffffff
   14003bd78:	lock xadd DWORD PTR [rdx+0x10],eax
   14003bd7d:	add    eax,0xffffffff
   14003bd80:	test   eax,eax
   14003bd82:	jg     0x14003bd8d
   14003bd84:	mov    rcx,QWORD PTR [rdx]
   14003bd87:	mov    rax,QWORD PTR [rcx]
   14003bd8a:	call   QWORD PTR [rax+0x8]
   14003bd8d:	test   r12b,r12b
   14003bd90:	jne    0x14003bd0a
   14003bd96:	add    edi,0x1
   14003bd99:	add    rsi,0x40
   14003bd9d:	movsxd rax,edi
   14003bda0:	cmp    rax,QWORD PTR [rbx+0x20]
   14003bda4:	jge    0x14003bcbe
   14003bdaa:	jmp    0x14003bd37
   14003bdac:	mov    ecx,0x80004005
   14003bdb1:	call   0x140001430
   14003bdb6:	int3   
   14003bdb7:	call   QWORD PTR [rax+0x28]
   14003bdba:	mov    r8,QWORD PTR [rbx+0x20]
   14003bdbe:	xor    r11d,r11d
   14003bdc1:	test   r8,r8
   14003bdc4:	jle    0x14003bcc6
   14003bdca:	mov    r9,QWORD PTR [rbx+0x28]
   14003bdce:	lea    rdx,[r9+0x38]
   14003bdd2:	mov    rax,QWORD PTR [rdx]
   14003bdd5:	mov    rcx,QWORD PTR [rax+0x8]
   14003bdd9:	jmp    0x14003bdef
   14003bddb:	test   rcx,rcx
   14003bdde:	mov    rax,rcx
   14003bde1:	mov    r10,rcx
   14003bde4:	je     0x14003be23
   14003bde6:	cmp    QWORD PTR [r10+0x10],rbp
   14003bdea:	mov    rcx,QWORD PTR [rcx]
   14003bded:	je     0x14003be0a
   14003bdef:	test   rcx,rcx
   14003bdf2:	jne    0x14003bddb
   14003bdf4:	add    r11d,0x1
   14003bdf8:	add    rdx,0x40
   14003bdfc:	movsxd rax,r11d
   14003bdff:	cmp    rax,r8
   14003be02:	jge    0x14003bcc6
   14003be08:	jmp    0x14003bdd2
   14003be0a:	movsxd rcx,r11d
   14003be0d:	mov    rdx,rax
   14003be10:	shl    rcx,0x6
   14003be14:	mov    rcx,QWORD PTR [rcx+r9*1+0x38]
   14003be19:	call   0x14003ebe0
   14003be1e:	jmp    0x14003bcc6
   14003be23:	call   0x1400208f8
   14003be28:	int3   
   14003be29:	int3   
   14003be2a:	int3   
   14003be2b:	int3   
   14003be2c:	mov    rax,rsp
   14003be2f:	push   rbp
   14003be30:	push   rsi
   14003be31:	push   rdi
   14003be32:	sub    rsp,0x250
   14003be39:	mov    QWORD PTR [rsp+0x188],0xfffffffffffffffe
   14003be45:	mov    QWORD PTR [rax+0x20],rbx
   14003be49:	mov    rax,QWORD PTR [rip+0x4af20]        # 0x140086d70
   14003be50:	xor    rax,rsp
   14003be53:	mov    QWORD PTR [rsp+0x248],rax
   14003be5b:	movsxd rdi,r8d
   14003be5e:	mov    rbp,rdx
   14003be61:	mov    rsi,rcx
   14003be64:	xor    ebx,ebx
   14003be66:	mov    DWORD PTR [rsp+0x40],ebx
   14003be6a:	mov    eax,ebx
   14003be6c:	cmp    QWORD PTR [rcx+0x90],rbx
   14003be73:	setne  al
   14003be76:	cmp    eax,ebx
   14003be78:	jne    0x14003be80
   14003be7a:	call   0x1400208f8
   14003be7f:	int3   
   14003be80:	mov    eax,ebx
   14003be82:	cmp    QWORD PTR [rcx+0xa8],rbx
   14003be89:	setne  al
   14003be8c:	cmp    eax,ebx
   14003be8e:	jne    0x14003be96
   14003be90:	call   0x1400208f8
   14003be95:	int3   
   14003be96:	lea    rcx,[rsp+0x48]
   14003be9b:	call   0x14003f678
   14003bea0:	nop
   14003bea1:	mov    DWORD PTR [rsp+0x40],0x3
   14003bea9:	lea    r8,[rsp+0x40]
   14003beae:	mov    rdx,rdi
   14003beb1:	mov    rcx,QWORD PTR [rsi+0xa8]
   14003beb8:	call   0x140037c44
   14003bebd:	cmp    DWORD PTR [rsp+0x40],0x3
   14003bec2:	jne    0x14003bee5
   14003bec4:	lea    rdx,[rsp+0x48]
   14003bec9:	mov    rcx,rbp
   14003becc:	call   0x14003f90c
   14003bed1:	nop
   14003bed2:	lea    rcx,[rsp+0x48]
   14003bed7:	call   QWORD PTR [rip+0x287c3]        # 0x1400646a0
   14003bedd:	mov    rax,rbp
   14003bee0:	jmp    0x14003c90b
   14003bee5:	mov    rsi,QWORD PTR [rsi+0xa8]
   14003beec:	lea    r8,[rsp+0x44]
   14003bef1:	mov    rdx,rdi
   14003bef4:	mov    rcx,rsi
   14003bef7:	call   0x140034df4
   14003befc:	cmp    al,bl
   14003befe:	jne    0x14003bf21
   14003bf00:	lea    rdx,[rsp+0x48]
   14003bf05:	mov    rcx,rbp
   14003bf08:	call   0x14003f90c
   14003bf0d:	nop
   14003bf0e:	lea    rcx,[rsp+0x48]
   14003bf13:	call   QWORD PTR [rip+0x28787]        # 0x1400646a0
   14003bf19:	mov    rax,rbp
   14003bf1c:	jmp    0x14003c90b
   14003bf21:	movzx  ecx,WORD PTR [rsp+0x44]
   14003bf26:	mov    eax,0x81
   14003bf2b:	cmp    ecx,eax
   14003bf2d:	jg     0x14003c59d
   14003bf33:	cmp    ecx,eax
   14003bf35:	je     0x14003c4d2
   14003bf3b:	cmp    ecx,0x8
   14003bf3e:	jg     0x14003c1d5
   14003bf44:	cmp    ecx,0x8
   14003bf47:	je     0x14003c82d
   14003bf4d:	sub    ecx,0x2
   14003bf50:	je     0x14003c299
   14003bf56:	sub    ecx,0x1
   14003bf59:	je     0x14003c20b
   14003bf5f:	sub    ecx,0x1
   14003bf62:	je     0x14003c140
   14003bf68:	sub    ecx,0x1
   14003bf6b:	je     0x14003c0ab
   14003bf71:	sub    ecx,0x1
   14003bf74:	je     0x14003c018
   14003bf7a:	cmp    ecx,0x1
   14003bf7d:	jne    0x14003c8ef
   14003bf83:	cmp    BYTE PTR [rsi+0x38],bl
   14003bf86:	je     0x14003bfb2
   14003bf88:	mov    ecx,ebx
   14003bf8a:	cmp    QWORD PTR [rsi+0x18],rbx
   14003bf8e:	jbe    0x14003bfdb
   14003bf90:	mov    rdx,QWORD PTR [rsi+0x28]
   14003bf94:	lea    r8,[rdx+0x10]
   14003bf98:	cmp    QWORD PTR [r8],rdi
   14003bf9b:	je     0x14003bfae
   14003bf9d:	add    ecx,0x1
   14003bfa0:	add    r8,0x50
   14003bfa4:	mov    eax,ecx
   14003bfa6:	cmp    rax,QWORD PTR [rsi+0x18]
   14003bfaa:	jb     0x14003bf98
   14003bfac:	jmp    0x14003bfdb
   14003bfae:	mov    edi,ecx
   14003bfb0:	jmp    0x14003bfcb
   14003bfb2:	mov    rdx,QWORD PTR [rsi+0x28]
   14003bfb6:	mov    r8,QWORD PTR [rdx+0x10]
   14003bfba:	mov    rax,QWORD PTR [rsi+0x18]
   14003bfbe:	lea    rcx,[rax+r8*1-0x1]
   14003bfc3:	cmp    rdi,rcx
   14003bfc6:	ja     0x14003bfdb
   14003bfc8:	sub    rdi,r8
   14003bfcb:	lea    rax,[rdi+rdi*4]
   14003bfcf:	add    rax,rax
   14003bfd2:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003bfd7:	add    rbx,QWORD PTR [rsi+0x10]
   14003bfdb:	movsd  xmm0,QWORD PTR [rbx]
   14003bfdf:	mov    WORD PTR [rsp+0xb0],0x7
   14003bfe9:	movsd  QWORD PTR [rsp+0xb8],xmm0
   14003bff2:	lea    rdx,[rsp+0xb0]
   14003bffa:	lea    rcx,[rsp+0x48]
   14003bfff:	call   0x14003f654
   14003c004:	nop
   14003c005:	lea    rcx,[rsp+0xb0]
   14003c00d:	call   QWORD PTR [rip+0x2868d]        # 0x1400646a0
   14003c013:	jmp    0x14003c8ef
   14003c018:	cmp    BYTE PTR [rsi+0x38],bl
   14003c01b:	je     0x14003c047
   14003c01d:	mov    ecx,ebx
   14003c01f:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c023:	jbe    0x14003c070
   14003c025:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c029:	lea    r8,[rdx+0x10]
   14003c02d:	cmp    QWORD PTR [r8],rdi
   14003c030:	je     0x14003c043
   14003c032:	add    ecx,0x1
   14003c035:	add    r8,0x50
   14003c039:	mov    eax,ecx
   14003c03b:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c03f:	jb     0x14003c02d
   14003c041:	jmp    0x14003c070
   14003c043:	mov    edi,ecx
   14003c045:	jmp    0x14003c060
   14003c047:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c04b:	mov    r8,QWORD PTR [rdx+0x10]
   14003c04f:	mov    rax,QWORD PTR [rsi+0x18]
   14003c053:	lea    rcx,[rax+r8*1-0x1]
   14003c058:	cmp    rdi,rcx
   14003c05b:	ja     0x14003c070
   14003c05d:	sub    rdi,r8
   14003c060:	lea    rax,[rdi+rdi*4]
   14003c064:	add    rax,rax
   14003c067:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c06c:	add    rbx,QWORD PTR [rsi+0x10]
   14003c070:	mov    rax,QWORD PTR [rbx]
   14003c073:	mov    WORD PTR [rsp+0x158],0x6
   14003c07d:	mov    QWORD PTR [rsp+0x160],rax
   14003c085:	lea    rdx,[rsp+0x158]
   14003c08d:	lea    rcx,[rsp+0x48]
   14003c092:	call   0x14003f654
   14003c097:	nop
   14003c098:	lea    rcx,[rsp+0x158]
   14003c0a0:	call   QWORD PTR [rip+0x285fa]        # 0x1400646a0
   14003c0a6:	jmp    0x14003c8ef
   14003c0ab:	cmp    BYTE PTR [rsi+0x38],bl
   14003c0ae:	je     0x14003c0da
   14003c0b0:	mov    ecx,ebx
   14003c0b2:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c0b6:	jbe    0x14003c103
   14003c0b8:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c0bc:	lea    r8,[rdx+0x10]
   14003c0c0:	cmp    QWORD PTR [r8],rdi
   14003c0c3:	je     0x14003c0d6
   14003c0c5:	add    ecx,0x1
   14003c0c8:	add    r8,0x50
   14003c0cc:	mov    eax,ecx
   14003c0ce:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c0d2:	jb     0x14003c0c0
   14003c0d4:	jmp    0x14003c103
   14003c0d6:	mov    edi,ecx
   14003c0d8:	jmp    0x14003c0f3
   14003c0da:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c0de:	mov    r8,QWORD PTR [rdx+0x10]
   14003c0e2:	mov    rax,QWORD PTR [rsi+0x18]
   14003c0e6:	lea    rcx,[rax+r8*1-0x1]
   14003c0eb:	cmp    rdi,rcx
   14003c0ee:	ja     0x14003c103
   14003c0f0:	sub    rdi,r8
   14003c0f3:	lea    rax,[rdi+rdi*4]
   14003c0f7:	add    rax,rax
   14003c0fa:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c0ff:	add    rbx,QWORD PTR [rsi+0x10]
   14003c103:	movsd  xmm0,QWORD PTR [rbx]
   14003c107:	mov    WORD PTR [rsp+0x128],0x5
   14003c111:	movsd  QWORD PTR [rsp+0x130],xmm0
   14003c11a:	lea    rdx,[rsp+0x128]
   14003c122:	lea    rcx,[rsp+0x48]
   14003c127:	call   0x14003f654
   14003c12c:	nop
   14003c12d:	lea    rcx,[rsp+0x128]
   14003c135:	call   QWORD PTR [rip+0x28565]        # 0x1400646a0
   14003c13b:	jmp    0x14003c8ef
   14003c140:	cmp    BYTE PTR [rsi+0x38],bl
   14003c143:	je     0x14003c16f
   14003c145:	mov    ecx,ebx
   14003c147:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c14b:	jbe    0x14003c198
   14003c14d:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c151:	lea    r8,[rdx+0x10]
   14003c155:	cmp    QWORD PTR [r8],rdi
   14003c158:	je     0x14003c16b
   14003c15a:	add    ecx,0x1
   14003c15d:	add    r8,0x50
   14003c161:	mov    eax,ecx
   14003c163:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c167:	jb     0x14003c155
   14003c169:	jmp    0x14003c198
   14003c16b:	mov    edi,ecx
   14003c16d:	jmp    0x14003c188
   14003c16f:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c173:	mov    r8,QWORD PTR [rdx+0x10]
   14003c177:	mov    rax,QWORD PTR [rsi+0x18]
   14003c17b:	lea    rcx,[rax+r8*1-0x1]
   14003c180:	cmp    rdi,rcx
   14003c183:	ja     0x14003c198
   14003c185:	sub    rdi,r8
   14003c188:	lea    rax,[rdi+rdi*4]
   14003c18c:	add    rax,rax
   14003c18f:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c194:	add    rbx,QWORD PTR [rsi+0x10]
   14003c198:	movss  xmm0,DWORD PTR [rbx]
   14003c19c:	mov    WORD PTR [rsp+0xe0],0x4
   14003c1a6:	movss  DWORD PTR [rsp+0xe8],xmm0
   14003c1af:	lea    rdx,[rsp+0xe0]
   14003c1b7:	lea    rcx,[rsp+0x48]
   14003c1bc:	call   0x14003f654
   14003c1c1:	nop
   14003c1c2:	lea    rcx,[rsp+0xe0]
   14003c1ca:	call   QWORD PTR [rip+0x284d0]        # 0x1400646a0
   14003c1d0:	jmp    0x14003c8ef
   14003c1d5:	cmp    ecx,0xb
   14003c1d8:	je     0x14003c443
   14003c1de:	cmp    ecx,0xc
   14003c1e1:	je     0x14003c3b9
   14003c1e7:	cmp    ecx,0xf
   14003c1ea:	jle    0x14003c8ef
   14003c1f0:	cmp    ecx,0x11
   14003c1f3:	jle    0x14003c328
   14003c1f9:	cmp    ecx,0x12
   14003c1fc:	je     0x14003c299
   14003c202:	cmp    ecx,0x13
   14003c205:	jne    0x14003c8ef
   14003c20b:	cmp    BYTE PTR [rsi+0x38],bl
   14003c20e:	je     0x14003c23a
   14003c210:	mov    ecx,ebx
   14003c212:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c216:	jbe    0x14003c263
   14003c218:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c21c:	lea    r8,[rdx+0x10]
   14003c220:	cmp    QWORD PTR [r8],rdi
   14003c223:	je     0x14003c236
   14003c225:	add    ecx,0x1
   14003c228:	add    r8,0x50
   14003c22c:	mov    eax,ecx
   14003c22e:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c232:	jb     0x14003c220
   14003c234:	jmp    0x14003c263
   14003c236:	mov    edi,ecx
   14003c238:	jmp    0x14003c253
   14003c23a:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c23e:	mov    r8,QWORD PTR [rdx+0x10]
   14003c242:	mov    rax,QWORD PTR [rsi+0x18]
   14003c246:	lea    rcx,[rax+r8*1-0x1]
   14003c24b:	cmp    rdi,rcx
   14003c24e:	ja     0x14003c263
   14003c250:	sub    rdi,r8
   14003c253:	lea    rax,[rdi+rdi*4]
   14003c257:	add    rax,rax
   14003c25a:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c25f:	add    rbx,QWORD PTR [rsi+0x10]
   14003c263:	mov    r8w,0x3
   14003c268:	mov    edx,DWORD PTR [rbx]
   14003c26a:	lea    rcx,[rsp+0x1d0]
   14003c272:	call   0x14003f598
   14003c277:	nop
   14003c278:	mov    rdx,rax
   14003c27b:	lea    rcx,[rsp+0x48]
   14003c280:	call   0x14003f654
   14003c285:	nop
   14003c286:	lea    rcx,[rsp+0x1d0]
   14003c28e:	call   QWORD PTR [rip+0x2840c]        # 0x1400646a0
   14003c294:	jmp    0x14003c8ef
   14003c299:	cmp    BYTE PTR [rsi+0x38],bl
   14003c29c:	je     0x14003c2c8
   14003c29e:	mov    ecx,ebx
   14003c2a0:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c2a4:	jbe    0x14003c2f1
   14003c2a6:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c2aa:	lea    r8,[rdx+0x10]
   14003c2ae:	cmp    QWORD PTR [r8],rdi
   14003c2b1:	je     0x14003c2c4
   14003c2b3:	add    ecx,0x1
   14003c2b6:	add    r8,0x50
   14003c2ba:	mov    eax,ecx
   14003c2bc:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c2c0:	jb     0x14003c2ae
   14003c2c2:	jmp    0x14003c2f1
   14003c2c4:	mov    edi,ecx
   14003c2c6:	jmp    0x14003c2e1
   14003c2c8:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c2cc:	mov    r8,QWORD PTR [rdx+0x10]
   14003c2d0:	mov    rax,QWORD PTR [rsi+0x18]
   14003c2d4:	lea    rcx,[rax+r8*1-0x1]
   14003c2d9:	cmp    rdi,rcx
   14003c2dc:	ja     0x14003c2f1
   14003c2de:	sub    rdi,r8
   14003c2e1:	lea    rax,[rdi+rdi*4]
   14003c2e5:	add    rax,rax
   14003c2e8:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c2ed:	add    rbx,QWORD PTR [rsi+0x10]
   14003c2f1:	mov    r8w,0x2
   14003c2f6:	movzx  edx,WORD PTR [rbx]
   14003c2f9:	lea    rcx,[rsp+0x1a0]
   14003c301:	call   0x14003f574
   14003c306:	nop
   14003c307:	mov    rdx,rax
   14003c30a:	lea    rcx,[rsp+0x48]
   14003c30f:	call   0x14003f654
   14003c314:	nop
   14003c315:	lea    rcx,[rsp+0x1a0]
   14003c31d:	call   QWORD PTR [rip+0x2837d]        # 0x1400646a0
   14003c323:	jmp    0x14003c8ef
   14003c328:	cmp    BYTE PTR [rsi+0x38],bl
   14003c32b:	je     0x14003c357
   14003c32d:	mov    ecx,ebx
   14003c32f:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c333:	jbe    0x14003c380
   14003c335:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c339:	lea    r8,[rdx+0x10]
   14003c33d:	cmp    QWORD PTR [r8],rdi
   14003c340:	je     0x14003c353
   14003c342:	add    ecx,0x1
   14003c345:	add    r8,0x50
   14003c349:	mov    eax,ecx
   14003c34b:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c34f:	jb     0x14003c33d
   14003c351:	jmp    0x14003c380
   14003c353:	mov    edi,ecx
   14003c355:	jmp    0x14003c370
   14003c357:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c35b:	mov    r8,QWORD PTR [rdx+0x10]
   14003c35f:	mov    rax,QWORD PTR [rsi+0x18]
   14003c363:	lea    rcx,[rax+r8*1-0x1]
   14003c368:	cmp    rdi,rcx
   14003c36b:	ja     0x14003c380
   14003c36d:	sub    rdi,r8
   14003c370:	lea    rax,[rdi+rdi*4]
   14003c374:	add    rax,rax
   14003c377:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c37c:	add    rbx,QWORD PTR [rsi+0x10]
   14003c380:	mov    al,BYTE PTR [rbx]
   14003c382:	mov    WORD PTR [rsp+0x110],0x11
   14003c38c:	mov    BYTE PTR [rsp+0x118],al
   14003c393:	lea    rdx,[rsp+0x110]
   14003c39b:	lea    rcx,[rsp+0x48]
   14003c3a0:	call   0x14003f654
   14003c3a5:	nop
   14003c3a6:	lea    rcx,[rsp+0x110]
   14003c3ae:	call   QWORD PTR [rip+0x282ec]        # 0x1400646a0
   14003c3b4:	jmp    0x14003c8ef
   14003c3b9:	cmp    BYTE PTR [rsi+0x38],bl
   14003c3bc:	je     0x14003c3e8
   14003c3be:	mov    ecx,ebx
   14003c3c0:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c3c4:	jbe    0x14003c411
   14003c3c6:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c3ca:	lea    r8,[rdx+0x10]
   14003c3ce:	cmp    QWORD PTR [r8],rdi
   14003c3d1:	je     0x14003c3e4
   14003c3d3:	add    ecx,0x1
   14003c3d6:	add    r8,0x50
   14003c3da:	mov    eax,ecx
   14003c3dc:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c3e0:	jb     0x14003c3ce
   14003c3e2:	jmp    0x14003c411
   14003c3e4:	mov    edi,ecx
   14003c3e6:	jmp    0x14003c401
   14003c3e8:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c3ec:	mov    r8,QWORD PTR [rdx+0x10]
   14003c3f0:	mov    rax,QWORD PTR [rsi+0x18]
   14003c3f4:	lea    rcx,[rax+r8*1-0x1]
   14003c3f9:	cmp    rdi,rcx
   14003c3fc:	ja     0x14003c411
   14003c3fe:	sub    rdi,r8
   14003c401:	lea    rax,[rdi+rdi*4]
   14003c405:	add    rax,rax
   14003c408:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c40d:	add    rbx,QWORD PTR [rsi+0x10]
   14003c411:	mov    rdx,rbx
   14003c414:	lea    rcx,[rsp+0x1b8]
   14003c41c:	call   0x14003f8d0
   14003c421:	nop
   14003c422:	mov    rdx,rax
   14003c425:	lea    rcx,[rsp+0x48]
   14003c42a:	call   0x14003f654
   14003c42f:	nop
   14003c430:	lea    rcx,[rsp+0x1b8]
   14003c438:	call   QWORD PTR [rip+0x28262]        # 0x1400646a0
   14003c43e:	jmp    0x14003c8ef
   14003c443:	cmp    BYTE PTR [rsi+0x38],bl
   14003c446:	je     0x14003c472
   14003c448:	mov    ecx,ebx
   14003c44a:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c44e:	jbe    0x14003c49b
   14003c450:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c454:	lea    r8,[rdx+0x10]
   14003c458:	cmp    QWORD PTR [r8],rdi
   14003c45b:	je     0x14003c46e
   14003c45d:	add    ecx,0x1
   14003c460:	add    r8,0x50
   14003c464:	mov    eax,ecx
   14003c466:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c46a:	jb     0x14003c458
   14003c46c:	jmp    0x14003c49b
   14003c46e:	mov    edi,ecx
   14003c470:	jmp    0x14003c48b
   14003c472:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c476:	mov    r8,QWORD PTR [rdx+0x10]
   14003c47a:	mov    rax,QWORD PTR [rsi+0x18]
   14003c47e:	lea    rcx,[rax+r8*1-0x1]
   14003c483:	cmp    rdi,rcx
   14003c486:	ja     0x14003c49b
   14003c488:	sub    rdi,r8
   14003c48b:	lea    rax,[rdi+rdi*4]
   14003c48f:	add    rax,rax
   14003c492:	mov    rbx,QWORD PTR [rdx+rax*8+0x8]
   14003c497:	add    rbx,QWORD PTR [rsi+0x10]
   14003c49b:	mov    r8w,0xb
   14003c4a0:	movzx  edx,WORD PTR [rbx]
   14003c4a3:	lea    rcx,[rsp+0x1e8]
   14003c4ab:	call   0x14003f574
   14003c4b0:	nop
   14003c4b1:	mov    rdx,rax
   14003c4b4:	lea    rcx,[rsp+0x48]
   14003c4b9:	call   0x14003f654
   14003c4be:	nop
   14003c4bf:	lea    rcx,[rsp+0x1e8]
   14003c4c7:	call   QWORD PTR [rip+0x281d3]        # 0x1400646a0
   14003c4cd:	jmp    0x14003c8ef
   14003c4d2:	cmp    BYTE PTR [rsi+0x38],bl
   14003c4d5:	je     0x14003c501
   14003c4d7:	mov    ecx,ebx
   14003c4d9:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c4dd:	jbe    0x14003c52c
   14003c4df:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c4e3:	lea    r8,[rdx+0x10]
   14003c4e7:	cmp    QWORD PTR [r8],rdi
   14003c4ea:	je     0x14003c4fd
   14003c4ec:	add    ecx,0x1
   14003c4ef:	add    r8,0x50
   14003c4f3:	mov    eax,ecx
   14003c4f5:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c4f9:	jb     0x14003c4e7
   14003c4fb:	jmp    0x14003c52c
   14003c4fd:	mov    edi,ecx
   14003c4ff:	jmp    0x14003c51a
   14003c501:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c505:	mov    r8,QWORD PTR [rdx+0x10]
   14003c509:	mov    rax,QWORD PTR [rsi+0x18]
   14003c50d:	lea    rcx,[rax+r8*1-0x1]
   14003c512:	cmp    rdi,rcx
   14003c515:	ja     0x14003c52c
   14003c517:	sub    rdi,r8
   14003c51a:	lea    rax,[rdi+rdi*4]
   14003c51e:	add    rax,rax
   14003c521:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
   14003c526:	add    rdx,QWORD PTR [rsi+0x10]
   14003c52a:	jmp    0x14003c52f
   14003c52c:	mov    rdx,rbx
   14003c52f:	lea    rcx,[rsp+0x80]
   14003c537:	call   0x140004d00
   14003c53c:	nop
   14003c53d:	mov    r8w,0x8
   14003c542:	mov    rdx,QWORD PTR [rax]
   14003c545:	lea    rcx,[rsp+0x218]
   14003c54d:	call   0x14003fabc
   14003c552:	nop
   14003c553:	mov    rdx,rax
   14003c556:	lea    rcx,[rsp+0x48]
   14003c55b:	call   0x14003f654
   14003c560:	nop
   14003c561:	lea    rcx,[rsp+0x218]
   14003c569:	call   QWORD PTR [rip+0x28131]        # 0x1400646a0
   14003c56f:	nop
   14003c570:	mov    rdx,QWORD PTR [rsp+0x80]
   14003c578:	add    rdx,0xffffffffffffffe8
   14003c57c:	or     eax,0xffffffff
   14003c57f:	lock xadd DWORD PTR [rdx+0x10],eax
   14003c584:	add    eax,0xffffffff
   14003c587:	cmp    eax,ebx
   14003c589:	jg     0x14003c8ef
   14003c58f:	mov    rcx,QWORD PTR [rdx]
   14003c592:	mov    rax,QWORD PTR [rcx]
   14003c595:	call   QWORD PTR [rax+0x8]
   14003c598:	jmp    0x14003c8ef
   14003c59d:	sub    ecx,0x82
   14003c5a3:	je     0x14003c82d
   14003c5a9:	sub    ecx,0x1
   14003c5ac:	je     0x14003c79f
   14003c5b2:	sub    ecx,0x2
   14003c5b5:	je     0x14003c707
   14003c5bb:	sub    ecx,0x1
   14003c5be:	je     0x14003c662
   14003c5c4:	cmp    ecx,0x1
   14003c5c7:	jne    0x14003c8ef
   14003c5cd:	lea    r8,[rsp+0x70]
   14003c5d2:	mov    rdx,rdi
   14003c5d5:	mov    rcx,rsi
   14003c5d8:	call   0x1400375b0
   14003c5dd:	cmp    al,bl
   14003c5df:	je     0x14003c8ef
   14003c5e5:	movzx  eax,WORD PTR [rsp+0x7a]
   14003c5ea:	movzx  ecx,WORD PTR [rsp+0x78]
   14003c5ef:	movzx  r10d,WORD PTR [rsp+0x76]
   14003c5f5:	movzx  r9d,WORD PTR [rsp+0x74]
   14003c5fb:	movzx  r8d,WORD PTR [rsp+0x72]
   14003c601:	movsx  edx,WORD PTR [rsp+0x70]
   14003c606:	mov    DWORD PTR [rsp+0x30],eax
   14003c60a:	mov    DWORD PTR [rsp+0x28],ecx
   14003c60e:	mov    DWORD PTR [rsp+0x20],r10d
   14003c613:	lea    rcx,[rsp+0x190]
   14003c61b:	call   0x140034c9c
   14003c620:	mov    WORD PTR [rsp+0x140],0x7
   14003c62a:	movsd  xmm0,QWORD PTR [rsp+0x190]
   14003c633:	movsd  QWORD PTR [rsp+0x148],xmm0
   14003c63c:	lea    rdx,[rsp+0x140]
   14003c644:	lea    rcx,[rsp+0x48]
   14003c649:	call   0x14003f654
   14003c64e:	nop
   14003c64f:	lea    rcx,[rsp+0x140]
   14003c657:	call   QWORD PTR [rip+0x28043]        # 0x1400646a0
   14003c65d:	jmp    0x14003c8ef
   14003c662:	lea    r8,[rsp+0x60]
   14003c667:	mov    rdx,rdi
   14003c66a:	mov    rcx,rsi
   14003c66d:	call   0x140037534
   14003c672:	cmp    al,bl
   14003c674:	je     0x14003c8ef
   14003c67a:	xorpd  xmm0,xmm0
   14003c67e:	movsd  QWORD PTR [rsp+0x98],xmm0
   14003c687:	mov    DWORD PTR [rsp+0xa0],ebx
   14003c68e:	movzx  eax,WORD PTR [rsp+0x64]
   14003c693:	movzx  ecx,WORD PTR [rsp+0x62]
   14003c698:	movzx  edx,WORD PTR [rsp+0x60]
   14003c69d:	mov    DWORD PTR [rsp+0x30],eax
   14003c6a1:	mov    DWORD PTR [rsp+0x28],ecx
   14003c6a5:	mov    DWORD PTR [rsp+0x20],edx
   14003c6a9:	mov    edx,0x76b
   14003c6ae:	mov    r9d,0x1e
   14003c6b4:	lea    r8d,[r9-0x12]
   14003c6b8:	lea    rcx,[rsp+0x98]
   14003c6c0:	call   0x140034c9c
   14003c6c5:	mov    WORD PTR [rsp+0xc8],0x7
   14003c6cf:	movsd  xmm0,QWORD PTR [rsp+0x98]
   14003c6d8:	movsd  QWORD PTR [rsp+0xd0],xmm0
   14003c6e1:	lea    rdx,[rsp+0xc8]
   14003c6e9:	lea    rcx,[rsp+0x48]
   14003c6ee:	call   0x14003f654
   14003c6f3:	nop
   14003c6f4:	lea    rcx,[rsp+0xc8]
   14003c6fc:	call   QWORD PTR [rip+0x27f9e]        # 0x1400646a0
   14003c702:	jmp    0x14003c8ef
   14003c707:	lea    r8,[rsp+0x68]
   14003c70c:	mov    rdx,rdi
   14003c70f:	mov    rcx,rsi
   14003c712:	call   0x140037534
   14003c717:	cmp    al,bl
   14003c719:	je     0x14003c8ef
   14003c71f:	xorpd  xmm0,xmm0
   14003c723:	movsd  QWORD PTR [rsp+0x88],xmm0
   14003c72c:	mov    DWORD PTR [rsp+0x90],ebx
   14003c733:	movzx  r9d,WORD PTR [rsp+0x6c]
   14003c739:	movzx  r8d,WORD PTR [rsp+0x6a]
   14003c73f:	movsx  edx,WORD PTR [rsp+0x68]
   14003c744:	mov    DWORD PTR [rsp+0x30],ebx
   14003c748:	mov    DWORD PTR [rsp+0x28],ebx
   14003c74c:	mov    DWORD PTR [rsp+0x20],ebx
   14003c750:	lea    rcx,[rsp+0x88]
   14003c758:	call   0x140034c9c
   14003c75d:	mov    WORD PTR [rsp+0x170],0x7
   14003c767:	movsd  xmm0,QWORD PTR [rsp+0x88]
   14003c770:	movsd  QWORD PTR [rsp+0x178],xmm0
   14003c779:	lea    rdx,[rsp+0x170]
   14003c781:	lea    rcx,[rsp+0x48]
   14003c786:	call   0x14003f654
   14003c78b:	nop
   14003c78c:	lea    rcx,[rsp+0x170]
   14003c794:	call   QWORD PTR [rip+0x27f06]        # 0x1400646a0
   14003c79a:	jmp    0x14003c8ef
   14003c79f:	lea    r8,[rsp+0x230]
   14003c7a7:	mov    rdx,rdi
   14003c7aa:	mov    rcx,rsi
   14003c7ad:	call   0x1400374a8
   14003c7b2:	cmp    al,bl
   14003c7b4:	je     0x14003c8ef
   14003c7ba:	cvtsi2sd xmm1,QWORD PTR [rsp+0x233]
   14003c7c4:	mov    al,BYTE PTR [rsp+0x231]
   14003c7cb:	cmp    al,bl
   14003c7cd:	jbe    0x14003c7db
   14003c7cf:	add    al,0xff
   14003c7d1:	divsd  xmm1,QWORD PTR [rip+0x3038f]        # 0x14006cb68
   14003c7d9:	jne    0x14003c7cf
   14003c7db:	cmp    BYTE PTR [rsp+0x232],bl
   14003c7e2:	jne    0x14003c7f4
   14003c7e4:	movsd  xmm0,QWORD PTR [rip+0x30374]        # 0x14006cb60
   14003c7ec:	subsd  xmm0,xmm1
   14003c7f0:	movsd  xmm1,xmm0
   14003c7f4:	mov    WORD PTR [rsp+0xf8],0x5
   14003c7fe:	movsd  QWORD PTR [rsp+0x100],xmm1
   14003c807:	lea    rdx,[rsp+0xf8]
   14003c80f:	lea    rcx,[rsp+0x48]
   14003c814:	call   0x14003f654
   14003c819:	nop
   14003c81a:	lea    rcx,[rsp+0xf8]
   14003c822:	call   QWORD PTR [rip+0x27e78]        # 0x1400646a0
   14003c828:	jmp    0x14003c8ef
   14003c82d:	cmp    BYTE PTR [rsi+0x38],bl
   14003c830:	je     0x14003c85c
   14003c832:	mov    ecx,ebx
   14003c834:	cmp    QWORD PTR [rsi+0x18],rbx
   14003c838:	jbe    0x14003c887
   14003c83a:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c83e:	lea    r8,[rdx+0x10]
   14003c842:	cmp    QWORD PTR [r8],rdi
   14003c845:	je     0x14003c858
   14003c847:	add    ecx,0x1
   14003c84a:	add    r8,0x50
   14003c84e:	mov    eax,ecx
   14003c850:	cmp    rax,QWORD PTR [rsi+0x18]
   14003c854:	jb     0x14003c842
   14003c856:	jmp    0x14003c887
   14003c858:	mov    edi,ecx
   14003c85a:	jmp    0x14003c875
   14003c85c:	mov    rdx,QWORD PTR [rsi+0x28]
   14003c860:	mov    r8,QWORD PTR [rdx+0x10]
   14003c864:	mov    rax,QWORD PTR [rsi+0x18]
   14003c868:	lea    rcx,[rax+r8*1-0x1]
   14003c86d:	cmp    rdi,rcx
   14003c870:	ja     0x14003c887
   14003c872:	sub    rdi,r8
   14003c875:	lea    rax,[rdi+rdi*4]
   14003c879:	add    rax,rax
   14003c87c:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
   14003c881:	add    rdx,QWORD PTR [rsi+0x10]
   14003c885:	jmp    0x14003c88a
   14003c887:	mov    rdx,rbx
   14003c88a:	lea    rcx,[rsp+0xa8]
   14003c892:	call   0x14000c360
   14003c897:	nop
   14003c898:	mov    r8w,0x8
   14003c89d:	mov    rdx,QWORD PTR [rax]
   14003c8a0:	lea    rcx,[rsp+0x200]
   14003c8a8:	call   0x14003fabc
   14003c8ad:	nop
   14003c8ae:	mov    rdx,rax
   14003c8b1:	lea    rcx,[rsp+0x48]
   14003c8b6:	call   0x14003f654
   14003c8bb:	nop
   14003c8bc:	lea    rcx,[rsp+0x200]
   14003c8c4:	call   QWORD PTR [rip+0x27dd6]        # 0x1400646a0
   14003c8ca:	nop
   14003c8cb:	mov    rdx,QWORD PTR [rsp+0xa8]
   14003c8d3:	add    rdx,0xffffffffffffffe8
   14003c8d7:	or     eax,0xffffffff
   14003c8da:	lock xadd DWORD PTR [rdx+0x10],eax
   14003c8df:	add    eax,0xffffffff
   14003c8e2:	cmp    eax,ebx
   14003c8e4:	jg     0x14003c8ef
   14003c8e6:	mov    rcx,QWORD PTR [rdx]
   14003c8e9:	mov    rax,QWORD PTR [rcx]
   14003c8ec:	call   QWORD PTR [rax+0x8]
   14003c8ef:	lea    rdx,[rsp+0x48]
   14003c8f4:	mov    rcx,rbp
   14003c8f7:	call   0x14003f90c
   14003c8fc:	nop
   14003c8fd:	lea    rcx,[rsp+0x48]
   14003c902:	call   QWORD PTR [rip+0x27d98]        # 0x1400646a0
   14003c908:	mov    rax,rbp
   14003c90b:	mov    rcx,QWORD PTR [rsp+0x248]
   14003c913:	xor    rcx,rsp
   14003c916:	call   0x140046470
   14003c91b:	mov    rbx,QWORD PTR [rsp+0x288]
   14003c923:	add    rsp,0x250
   14003c92a:	pop    rdi
   14003c92b:	pop    rsi
   14003c92c:	pop    rbp
   14003c92d:	ret    
   14003c92e:	int3   
   14003c92f:	int3   
   14003c930:	int3   
   14003c931:	int3   
   14003c932:	int3   
   14003c933:	int3   
   14003c934:	int3   
   14003c935:	int3   
   14003c936:	int3   
   14003c937:	int3   
   14003c938:	int3   
   14003c939:	int3   
   14003c93a:	int3   
   14003c93b:	int3   
   14003c93c:	rex push rbp
   14003c93e:	sub    rsp,0x20
   14003c942:	mov    rbp,rdx
   14003c945:	lea    rcx,[rbp+0x48]
   14003c949:	call   0x140034d30
   14003c94e:	add    rsp,0x20
   14003c952:	pop    rbp
   14003c953:	ret    
   14003c954:	int3   
   14003c955:	int3   
   14003c956:	int3   
   14003c957:	int3   
   14003c958:	int3   
   14003c959:	int3   
   14003c95a:	int3   
   14003c95b:	int3   
   14003c95c:	rex push rbp
   14003c95e:	sub    rsp,0x20
   14003c962:	mov    rbp,rdx
   14003c965:	lea    rcx,[rbp+0x1b8]
   14003c96c:	call   0x140034d30
   14003c971:	add    rsp,0x20
   14003c975:	pop    rbp
   14003c976:	ret    
   14003c977:	int3   
   14003c978:	int3   
   14003c979:	int3   
   14003c97a:	int3   
   14003c97b:	int3   
   14003c97c:	rex push rbp
   14003c97e:	sub    rsp,0x20
   14003c982:	mov    rbp,rdx
   14003c985:	lea    rcx,[rbp+0x80]
   14003c98c:	call   0x1400010c0
   14003c991:	add    rsp,0x20
   14003c995:	pop    rbp
   14003c996:	ret    
   14003c997:	int3   
   14003c998:	int3   
   14003c999:	int3   
   14003c99a:	int3   
   14003c99b:	int3   
   14003c99c:	rex push rbp
   14003c99e:	sub    rsp,0x20
   14003c9a2:	mov    rbp,rdx
   14003c9a5:	lea    rcx,[rbp+0x218]
   14003c9ac:	call   0x140034d30
   14003c9b1:	add    rsp,0x20
   14003c9b5:	pop    rbp
   14003c9b6:	ret    
   14003c9b7:	int3   
   14003c9b8:	int3   
   14003c9b9:	int3   
   14003c9ba:	int3   
   14003c9bb:	int3   
   14003c9bc:	rex push rbp
   14003c9be:	sub    rsp,0x20
   14003c9c2:	mov    rbp,rdx
   14003c9c5:	lea    rcx,[rbp+0xa8]
   14003c9cc:	call   0x1400010c0
   14003c9d1:	add    rsp,0x20
   14003c9d5:	pop    rbp
   14003c9d6:	ret    
   14003c9d7:	int3   
   14003c9d8:	int3   
   14003c9d9:	int3   
   14003c9da:	int3   
   14003c9db:	int3   
   14003c9dc:	rex push rbp
   14003c9de:	sub    rsp,0x20
   14003c9e2:	mov    rbp,rdx
   14003c9e5:	lea    rcx,[rbp+0x200]
   14003c9ec:	call   0x140034d30
   14003c9f1:	add    rsp,0x20
   14003c9f5:	pop    rbp
   14003c9f6:	ret    
   14003c9f7:	int3   
   14003c9f8:	int3   
   14003c9f9:	int3   
   14003c9fa:	int3   
   14003c9fb:	int3   
   14003c9fc:	rex push rbp
   14003c9fe:	sub    rsp,0x20
   14003ca02:	mov    rbp,rdx
   14003ca05:	lea    rcx,[rbp+0x110]
   14003ca0c:	call   0x140034d30
   14003ca11:	add    rsp,0x20
   14003ca15:	pop    rbp
   14003ca16:	ret    
   14003ca17:	int3   
   14003ca18:	int3   
   14003ca19:	int3   
   14003ca1a:	int3   
   14003ca1b:	int3   
   14003ca1c:	rex push rbp
   14003ca1e:	sub    rsp,0x20
   14003ca22:	mov    rbp,rdx
   14003ca25:	lea    rcx,[rbp+0x1a0]
   14003ca2c:	call   0x140034d30
   14003ca31:	add    rsp,0x20
   14003ca35:	pop    rbp
   14003ca36:	ret    
   14003ca37:	int3   
   14003ca38:	int3   
   14003ca39:	int3   
   14003ca3a:	int3   
   14003ca3b:	int3   
   14003ca3c:	rex push rbp
   14003ca3e:	sub    rsp,0x20
   14003ca42:	mov    rbp,rdx
   14003ca45:	lea    rcx,[rbp+0x1d0]
   14003ca4c:	call   0x140034d30
   14003ca51:	add    rsp,0x20
   14003ca55:	pop    rbp
   14003ca56:	ret    
   14003ca57:	int3   
   14003ca58:	int3   
   14003ca59:	int3   
   14003ca5a:	int3   
   14003ca5b:	int3   
   14003ca5c:	rex push rbp
   14003ca5e:	sub    rsp,0x20
   14003ca62:	mov    rbp,rdx
   14003ca65:	lea    rcx,[rbp+0xe0]
   14003ca6c:	call   0x140034d30
   14003ca71:	add    rsp,0x20
   14003ca75:	pop    rbp
   14003ca76:	ret    
   14003ca77:	int3   
   14003ca78:	int3   
   14003ca79:	int3   
   14003ca7a:	int3   
   14003ca7b:	int3   
   14003ca7c:	rex push rbp
   14003ca7e:	sub    rsp,0x20
   14003ca82:	mov    rbp,rdx
   14003ca85:	lea    rcx,[rbp+0x128]
   14003ca8c:	call   0x140034d30
   14003ca91:	add    rsp,0x20
   14003ca95:	pop    rbp
   14003ca96:	ret    
   14003ca97:	int3   
   14003ca98:	int3   
   14003ca99:	int3   
   14003ca9a:	int3   
   14003ca9b:	int3   
   14003ca9c:	rex push rbp
   14003ca9e:	sub    rsp,0x20
   14003caa2:	mov    rbp,rdx
   14003caa5:	lea    rcx,[rbp+0x1e8]
   14003caac:	call   0x140034d30
   14003cab1:	add    rsp,0x20
   14003cab5:	pop    rbp
   14003cab6:	ret    
   14003cab7:	int3   
   14003cab8:	int3   
   14003cab9:	int3   
   14003caba:	int3   
   14003cabb:	int3   
   14003cabc:	rex push rbp
   14003cabe:	sub    rsp,0x20
   14003cac2:	mov    rbp,rdx
   14003cac5:	lea    rcx,[rbp+0xb0]
   14003cacc:	call   0x140034d30
   14003cad1:	add    rsp,0x20
   14003cad5:	pop    rbp
   14003cad6:	ret    
   14003cad7:	int3   
   14003cad8:	int3   
   14003cad9:	int3   
   14003cada:	int3   
   14003cadb:	int3   
   14003cadc:	rex push rbp
   14003cade:	sub    rsp,0x20
   14003cae2:	mov    rbp,rdx
   14003cae5:	lea    rcx,[rbp+0x158]
   14003caec:	call   0x140034d30
   14003caf1:	add    rsp,0x20
   14003caf5:	pop    rbp
   14003caf6:	ret    
   14003caf7:	int3   
   14003caf8:	int3   
   14003caf9:	int3   
   14003cafa:	int3   
   14003cafb:	int3   
   14003cafc:	rex push rbp
   14003cafe:	sub    rsp,0x20
   14003cb02:	mov    rbp,rdx
   14003cb05:	lea    rcx,[rbp+0xf8]
   14003cb0c:	call   0x140034d30
   14003cb11:	add    rsp,0x20
   14003cb15:	pop    rbp
   14003cb16:	ret    
   14003cb17:	int3   
   14003cb18:	int3   
   14003cb19:	int3   
   14003cb1a:	int3   
   14003cb1b:	int3   
   14003cb1c:	rex push rbp
   14003cb1e:	sub    rsp,0x20
   14003cb22:	mov    rbp,rdx
   14003cb25:	lea    rcx,[rbp+0x170]
   14003cb2c:	call   0x140034d30
   14003cb31:	add    rsp,0x20
   14003cb35:	pop    rbp
   14003cb36:	ret    
   14003cb37:	int3   
   14003cb38:	int3   
   14003cb39:	int3   
   14003cb3a:	int3   
   14003cb3b:	int3   
   14003cb3c:	rex push rbp
   14003cb3e:	sub    rsp,0x20
   14003cb42:	mov    rbp,rdx
   14003cb45:	lea    rcx,[rbp+0xc8]
   14003cb4c:	call   0x140034d30
   14003cb51:	add    rsp,0x20
   14003cb55:	pop    rbp
   14003cb56:	ret    
   14003cb57:	int3   
   14003cb58:	int3   
   14003cb59:	int3   
   14003cb5a:	int3   
   14003cb5b:	int3   
   14003cb5c:	rex push rbp
   14003cb5e:	sub    rsp,0x20
   14003cb62:	mov    rbp,rdx
   14003cb65:	lea    rcx,[rbp+0x140]
   14003cb6c:	call   0x140034d30
   14003cb71:	add    rsp,0x20
   14003cb75:	pop    rbp
   14003cb76:	ret    
   14003cb77:	int3   
   14003cb78:	mov    rax,rsp
   14003cb7b:	push   rbp
   14003cb7c:	push   rsi
   14003cb7d:	push   rdi
   14003cb7e:	push   r12
   14003cb80:	push   r13
   14003cb82:	sub    rsp,0xe0
   14003cb89:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   14003cb95:	mov    QWORD PTR [rax+0x20],rbx
   14003cb99:	mov    rbx,rcx
   14003cb9c:	mov    DWORD PTR [rcx+0x88],0x1
   14003cba6:	xor    r13d,r13d
   14003cba9:	xor    esi,esi
   14003cbab:	cmp    QWORD PTR [rcx+0x20],rsi
   14003cbaf:	jle    0x14003cdb3
   14003cbb5:	xor    ebp,ebp
   14003cbb7:	mov    rax,QWORD PTR [rbx+0x28]
   14003cbbb:	mov    rdi,QWORD PTR [rax+rbp*1+0x38]
   14003cbc0:	test   rdi,rdi
   14003cbc3:	je     0x14003cd98
   14003cbc9:	mov    rdi,QWORD PTR [rdi+0x8]
   14003cbcd:	test   rdi,rdi
   14003cbd0:	je     0x14003cd98
   14003cbd6:	mov    r12,rdi
   14003cbd9:	test   rdi,rdi
   14003cbdc:	je     0x14003cdad
   14003cbe2:	mov    rdi,QWORD PTR [rdi]
   14003cbe5:	mov    r12,QWORD PTR [r12+0x10]
   14003cbea:	mov    DWORD PTR [rsp+0x110],0xfffffffd
   14003cbf5:	xor    edx,edx
   14003cbf7:	lea    r8d,[rdx+0x40]
   14003cbfb:	lea    rcx,[rsp+0xa0]
   14003cc03:	call   0x140047720
   14003cc08:	lea    rcx,[rsp+0x50]
   14003cc0d:	call   0x14003f678
   14003cc12:	nop
   14003cc13:	cmp    QWORD PTR [rbx+0x90],0x0
   14003cc1b:	je     0x14003cc5a
   14003cc1d:	lea    r8d,[rsi+0x1]
   14003cc21:	lea    rdx,[rsp+0x88]
   14003cc29:	mov    rcx,rbx
   14003cc2c:	call   0x14003be2c
   14003cc31:	nop
   14003cc32:	mov    rdx,rax
   14003cc35:	lea    rcx,[rsp+0x50]
   14003cc3a:	call   0x14003f654
   14003cc3f:	nop
   14003cc40:	lea    rcx,[rsp+0x88]
   14003cc48:	call   QWORD PTR [rip+0x27a52]        # 0x1400646a0
   14003cc4e:	lea    r11,[rsp+0x50]
   14003cc53:	mov    QWORD PTR [rsp+0x68],r11
   14003cc58:	jmp    0x14003cc71
   14003cc5a:	movsxd rax,r13d
   14003cc5d:	lea    rcx,[rax+rax*2]
   14003cc61:	mov    rax,QWORD PTR [rbx+0x80]
   14003cc68:	lea    rcx,[rax+rcx*8]
   14003cc6c:	mov    QWORD PTR [rsp+0x68],rcx
   14003cc71:	lea    rax,[rsp+0x110]
   14003cc79:	mov    QWORD PTR [rsp+0x70],rax
   14003cc7e:	mov    DWORD PTR [rsp+0x78],0x1
   14003cc86:	mov    DWORD PTR [rsp+0x7c],0x1
   14003cc8e:	mov    DWORD PTR [r12+0xd0],0x1
   14003cc9a:	mov    rcx,QWORD PTR [r12+0x80]
   14003cca2:	test   rcx,rcx
   14003cca5:	jne    0x14003ccb7
   14003cca7:	lea    rcx,[rsp+0x50]
   14003ccac:	call   QWORD PTR [rip+0x279ee]        # 0x1400646a0
   14003ccb2:	jmp    0x14003cd8f
   14003ccb7:	mov    rax,QWORD PTR [rcx]
   14003ccba:	lea    r8,[rsp+0x120]
   14003ccc2:	lea    rdx,[rip+0x336ff]        # 0x1400703c8
   14003ccc9:	call   QWORD PTR [rax]
   14003cccb:	test   eax,eax
   14003cccd:	jns    0x14003ccdf
   14003cccf:	lea    rcx,[rsp+0x50]
   14003ccd4:	call   QWORD PTR [rip+0x279c6]        # 0x1400646a0
   14003ccda:	jmp    0x14003cd8f
   14003ccdf:	mov    rcx,QWORD PTR [rsp+0x120]
   14003cce7:	mov    rax,QWORD PTR [rcx]
   14003ccea:	lea    rdx,[rsp+0x118]
   14003ccf2:	mov    QWORD PTR [rsp+0x40],rdx
   14003ccf7:	lea    rdx,[rsp+0xa0]
   14003ccff:	mov    QWORD PTR [rsp+0x38],rdx
   14003cd04:	and    QWORD PTR [rsp+0x30],0x0
   14003cd0a:	lea    rdx,[rsp+0x68]
   14003cd0f:	mov    QWORD PTR [rsp+0x28],rdx
   14003cd14:	mov    WORD PTR [rsp+0x20],0x4
   14003cd1b:	xor    r9d,r9d
   14003cd1e:	lea    r8,[rip+0x33693]        # 0x1400703b8
   14003cd25:	mov    edx,DWORD PTR [r12+0xf0]
   14003cd2d:	call   QWORD PTR [rax+0x30]
   14003cd30:	mov    rcx,QWORD PTR [rsp+0x120]
   14003cd38:	mov    rax,QWORD PTR [rcx]
   14003cd3b:	call   QWORD PTR [rax+0x10]
   14003cd3e:	and    DWORD PTR [r12+0xd0],0x0
   14003cd47:	mov    rcx,QWORD PTR [rsp+0xa8]
   14003cd4f:	test   rcx,rcx
   14003cd52:	je     0x14003cd5a
   14003cd54:	call   QWORD PTR [rip+0x27936]        # 0x140064690
   14003cd5a:	mov    rcx,QWORD PTR [rsp+0xb0]
   14003cd62:	test   rcx,rcx
   14003cd65:	je     0x14003cd6d
   14003cd67:	call   QWORD PTR [rip+0x27923]        # 0x140064690
   14003cd6d:	mov    rcx,QWORD PTR [rsp+0xb8]
   14003cd75:	test   rcx,rcx
   14003cd78:	je     0x14003cd80
   14003cd7a:	call   QWORD PTR [rip+0x27910]        # 0x140064690
   14003cd80:	add    r13d,0x1
   14003cd84:	lea    rcx,[rsp+0x50]
   14003cd89:	call   QWORD PTR [rip+0x27911]        # 0x1400646a0
   14003cd8f:	test   rdi,rdi
   14003cd92:	jne    0x14003cbd6
   14003cd98:	add    esi,0x1
   14003cd9b:	add    rbp,0x40
   14003cd9f:	movsxd rax,esi
   14003cda2:	cmp    rax,QWORD PTR [rbx+0x20]
   14003cda6:	jge    0x14003cdb3
   14003cda8:	jmp    0x14003cbb7
   14003cdad:	call   0x1400208f8
   14003cdb2:	int3   
   14003cdb3:	and    DWORD PTR [rbx+0x88],0x0
   14003cdba:	xor    eax,eax
   14003cdbc:	mov    rbx,QWORD PTR [rsp+0x128]
   14003cdc4:	add    rsp,0xe0
   14003cdcb:	pop    r13
   14003cdcd:	pop    r12
   14003cdcf:	pop    rdi
   14003cdd0:	pop    rsi
   14003cdd1:	pop    rbp
   14003cdd2:	ret    
   14003cdd3:	int3   
   14003cdd4:	int3   
   14003cdd5:	int3   
   14003cdd6:	int3   
   14003cdd7:	int3   
   14003cdd8:	rex push rbp
   14003cdda:	sub    rsp,0x20
   14003cdde:	mov    rbp,rdx
   14003cde1:	lea    rcx,[rbp+0x50]
   14003cde5:	call   0x140034d30
   14003cdea:	add    rsp,0x20
   14003cdee:	pop    rbp
   14003cdef:	ret    
   14003cdf0:	int3   
   14003cdf1:	int3   
   14003cdf2:	int3   
   14003cdf3:	int3   
   14003cdf4:	int3   
   14003cdf5:	int3   
   14003cdf6:	int3   
   14003cdf7:	int3   
   14003cdf8:	rex push rbp
   14003cdfa:	sub    rsp,0x20
   14003cdfe:	mov    rbp,rdx
   14003ce01:	lea    rcx,[rbp+0x88]
   14003ce08:	call   0x140034d30
   14003ce0d:	add    rsp,0x20
   14003ce11:	pop    rbp
   14003ce12:	ret    
   14003ce13:	int3   
   14003ce14:	mov    QWORD PTR [rsp+0x8],rcx
   14003ce19:	push   rbp
   14003ce1a:	push   rsi
   14003ce1b:	push   rdi
   14003ce1c:	sub    rsp,0x30
   14003ce20:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003ce29:	mov    QWORD PTR [rsp+0x68],rbx
   14003ce2e:	mov    rbx,rcx
   14003ce31:	lea    rax,[rip+0x2fac0]        # 0x14006c8f8
   14003ce38:	mov    QWORD PTR [rcx],rax
   14003ce3b:	mov    rax,QWORD PTR [rcx+0x40]
   14003ce3f:	test   rax,rax
   14003ce42:	je     0x14003ce55
   14003ce44:	cmp    QWORD PTR [rax+0xd0],rcx
   14003ce4b:	jne    0x14003ce55
   14003ce4d:	and    QWORD PTR [rax+0xd0],0x0
   14003ce55:	mov    rdi,QWORD PTR [rcx+0xd8]
   14003ce5c:	test   rdi,rdi
   14003ce5f:	je     0x14003ce71
   14003ce61:	mov    rcx,rdi
   14003ce64:	call   0x14003b874
   14003ce69:	mov    rcx,rdi
   14003ce6c:	call   0x14001ac50
   14003ce71:	mov    rcx,rbx
   14003ce74:	call   0x140033d80
   14003ce79:	lea    rdx,[rbx+0x6c]
   14003ce7d:	mov    r8d,DWORD PTR [rbx+0xa0]
   14003ce84:	mov    rcx,rbx
   14003ce87:	call   0x140033878
   14003ce8c:	mov    r8d,DWORD PTR [rbx+0xa4]
   14003ce93:	lea    rdx,[rip+0x3369e]        # 0x140070538
   14003ce9a:	mov    rcx,rbx
   14003ce9d:	call   0x140033878
   14003cea2:	mov    r8d,DWORD PTR [rbx+0xd4]
   14003cea9:	lea    rdx,[rip+0x334c8]        # 0x140070378
   14003ceb0:	mov    rcx,rbx
   14003ceb3:	call   0x140033878
   14003ceb8:	mov    rcx,QWORD PTR [rbx+0x98]
   14003cebf:	test   rcx,rcx
   14003cec2:	je     0x14003ced2
   14003cec4:	mov    rax,QWORD PTR [rcx]
   14003cec7:	call   QWORD PTR [rax+0x10]
   14003ceca:	and    QWORD PTR [rbx+0x98],0x0
   14003ced2:	mov    rcx,QWORD PTR [rbx+0x88]
   14003ced9:	test   rcx,rcx
   14003cedc:	je     0x14003cef9
   14003cede:	mov    rax,QWORD PTR [rcx]
   14003cee1:	call   QWORD PTR [rax+0x28]
   14003cee4:	mov    rcx,QWORD PTR [rbx+0x88]
   14003ceeb:	mov    rax,QWORD PTR [rcx]
   14003ceee:	call   QWORD PTR [rax+0x10]
   14003cef1:	and    QWORD PTR [rbx+0x88],0x0
   14003cef9:	mov    rcx,QWORD PTR [rbx+0x90]
   14003cf00:	test   rcx,rcx
   14003cf03:	je     0x14003cf13
   14003cf05:	mov    rax,QWORD PTR [rcx]
   14003cf08:	call   QWORD PTR [rax+0x10]
   14003cf0b:	and    QWORD PTR [rbx+0x90],0x0
   14003cf13:	mov    rcx,QWORD PTR [rbx+0x80]
   14003cf1a:	test   rcx,rcx
   14003cf1d:	je     0x14003cf4e
   14003cf1f:	mov    rax,QWORD PTR [rcx]
   14003cf22:	xor    edx,edx
   14003cf24:	call   QWORD PTR [rax+0x18]
   14003cf27:	mov    rcx,QWORD PTR [rbx+0x80]
   14003cf2e:	mov    rax,QWORD PTR [rcx]
   14003cf31:	mov    edx,0x1
   14003cf36:	call   QWORD PTR [rax+0x30]
   14003cf39:	mov    rcx,QWORD PTR [rbx+0x80]
   14003cf40:	mov    rax,QWORD PTR [rcx]
   14003cf43:	call   QWORD PTR [rax+0x10]
   14003cf46:	and    QWORD PTR [rbx+0x80],0x0
   14003cf4e:	lea    rcx,[rbx+0x108]
   14003cf55:	call   QWORD PTR [rip+0x27745]        # 0x1400646a0
   14003cf5b:	mov    rdi,QWORD PTR [rbx+0xe0]
   14003cf62:	xor    esi,esi
   14003cf64:	test   rdi,rdi
   14003cf67:	je     0x14003cfbe
   14003cf69:	mov    rbp,QWORD PTR [rdi+0x20]
   14003cf6d:	test   rsi,rsi
   14003cf70:	je     0x14003cf78
   14003cf72:	mov    QWORD PTR [rsi+0x20],rbp
   14003cf76:	jmp    0x14003cf7f
   14003cf78:	mov    QWORD PTR [rbx+0xe0],rbp
   14003cf7f:	mov    rax,QWORD PTR [rdi+0x10]
   14003cf83:	test   rax,rax
   14003cf86:	je     0x14003cfa5
   14003cf88:	cmp    QWORD PTR [rax+0xd8],0x0
   14003cf90:	je     0x14003cfa5
   14003cf92:	mov    rcx,QWORD PTR [rax+0xd8]
   14003cf99:	mov    rax,QWORD PTR [rcx]
   14003cf9c:	xor    r8d,r8d
   14003cf9f:	mov    rdx,rdi
   14003cfa2:	call   QWORD PTR [rax+0x8]
   14003cfa5:	mov    rcx,rdi
   14003cfa8:	call   0x14001ac50
   14003cfad:	test   rsi,rsi
   14003cfb0:	je     0x14003cfb6
   14003cfb2:	mov    rsi,QWORD PTR [rsi+0x20]
   14003cfb6:	mov    rdi,rbp
   14003cfb9:	test   rbp,rbp
   14003cfbc:	jne    0x14003cf69
   14003cfbe:	cmp    DWORD PTR [rbx+0xf0],0x0
   14003cfc5:	je     0x14003cff0
   14003cfc7:	mov    rcx,QWORD PTR [rbx+0xe8]
   14003cfce:	test   rcx,rcx
   14003cfd1:	je     0x14003cff0
   14003cfd3:	cmp    QWORD PTR [rcx+0xd8],0x0
   14003cfdb:	je     0x14003cff0
   14003cfdd:	mov    rcx,QWORD PTR [rcx+0xd8]
   14003cfe4:	mov    rax,QWORD PTR [rcx]
   14003cfe7:	xor    r8d,r8d
   14003cfea:	mov    rdx,rbx
   14003cfed:	call   QWORD PTR [rax+0x10]
   14003cff0:	mov    rax,QWORD PTR [rbx+0x40]
   14003cff4:	test   rax,rax
   14003cff7:	je     0x14003d009
   14003cff9:	cmp    DWORD PTR [rbx+0xb4],0x0
   14003d000:	je     0x14003d009
   14003d002:	add    DWORD PTR [rax+0xe0],0xffffffff
   14003d009:	and    QWORD PTR [rsp+0x60],0x0
   14003d00f:	lea    rcx,[rbx+0x158]
   14003d016:	mov    rax,QWORD PTR [rcx]
   14003d019:	lea    r8,[rsp+0x60]
   14003d01e:	lea    rdx,[rip+0x33433]        # 0x140070458
   14003d025:	call   QWORD PTR [rax]
   14003d027:	test   eax,eax
   14003d029:	js     0x14003d035
   14003d02b:	mov    rcx,QWORD PTR [rsp+0x60]
   14003d030:	call   0x14003e804
   14003d035:	and    QWORD PTR [rsp+0x58],0x0
   14003d03b:	lea    rcx,[rbx+0x160]
   14003d042:	mov    rax,QWORD PTR [rcx]
   14003d045:	lea    r8,[rsp+0x58]
   14003d04a:	lea    rdx,[rip+0x33407]        # 0x140070458
   14003d051:	call   QWORD PTR [rax]
   14003d053:	test   eax,eax
   14003d055:	js     0x14003d062
   14003d057:	mov    rcx,QWORD PTR [rsp+0x58]
   14003d05c:	call   0x14003e804
   14003d061:	nop
   14003d062:	mov    rcx,QWORD PTR [rsp+0x58]
   14003d067:	test   rcx,rcx
   14003d06a:	je     0x14003d073
   14003d06c:	mov    rax,QWORD PTR [rcx]
   14003d06f:	call   QWORD PTR [rax+0x10]
   14003d072:	nop
   14003d073:	mov    rcx,QWORD PTR [rsp+0x60]
   14003d078:	test   rcx,rcx
   14003d07b:	je     0x14003d084
   14003d07d:	mov    rax,QWORD PTR [rcx]
   14003d080:	call   QWORD PTR [rax+0x10]
   14003d083:	nop
   14003d084:	lea    rcx,[rbx+0x120]
   14003d08b:	call   0x140042488
   14003d090:	nop
   14003d091:	mov    rdx,QWORD PTR [rbx+0xf8]
   14003d098:	sub    rdx,0x18
   14003d09c:	or     eax,0xffffffff
   14003d09f:	lock xadd DWORD PTR [rdx+0x10],eax
   14003d0a4:	add    eax,0xffffffff
   14003d0a7:	test   eax,eax
   14003d0a9:	jg     0x14003d0b5
   14003d0ab:	mov    rcx,QWORD PTR [rdx]
   14003d0ae:	mov    rax,QWORD PTR [rcx]
   14003d0b1:	call   QWORD PTR [rax+0x8]
   14003d0b4:	nop
   14003d0b5:	mov    rcx,rbx
   14003d0b8:	mov    rbx,QWORD PTR [rsp+0x68]
   14003d0bd:	add    rsp,0x30
   14003d0c1:	pop    rdi
   14003d0c2:	pop    rsi
   14003d0c3:	pop    rbp
   14003d0c4:	jmp    0x14001c420
   14003d0c9:	int3   
   14003d0ca:	int3   
   14003d0cb:	int3   
   14003d0cc:	int3   
   14003d0cd:	int3   
   14003d0ce:	int3   
   14003d0cf:	int3   
   14003d0d0:	int3   
   14003d0d1:	int3   
   14003d0d2:	int3   
   14003d0d3:	int3   
   14003d0d4:	rex push rbp
   14003d0d6:	sub    rsp,0x20
   14003d0da:	mov    rbp,rdx
   14003d0dd:	mov    rcx,QWORD PTR [rbp+0x50]
   14003d0e1:	call   0x14001c420
   14003d0e6:	add    rsp,0x20
   14003d0ea:	pop    rbp
   14003d0eb:	ret    
   14003d0ec:	int3   
   14003d0ed:	int3   
   14003d0ee:	int3   
   14003d0ef:	int3   
   14003d0f0:	int3   
   14003d0f1:	int3   
   14003d0f2:	int3   
   14003d0f3:	int3   
   14003d0f4:	rex push rbp
   14003d0f6:	sub    rsp,0x20
   14003d0fa:	mov    rbp,rdx
   14003d0fd:	mov    rcx,QWORD PTR [rbp+0x50]
   14003d101:	add    rcx,0xf8
   14003d108:	call   0x1400010c0
   14003d10d:	add    rsp,0x20
   14003d111:	pop    rbp
   14003d112:	ret    
   14003d113:	int3   
   14003d114:	rex push rbp
   14003d116:	sub    rsp,0x20
   14003d11a:	mov    rbp,rdx
   14003d11d:	mov    rcx,QWORD PTR [rbp+0x50]
   14003d121:	add    rcx,0x120
   14003d128:	call   0x140034d28
   14003d12d:	add    rsp,0x20
   14003d131:	pop    rbp
   14003d132:	ret    
   14003d133:	int3   
   14003d134:	rex push rbp
   14003d136:	sub    rsp,0x20
   14003d13a:	mov    rbp,rdx
   14003d13d:	lea    rcx,[rbp+0x60]
   14003d141:	call   0x140031960
   14003d146:	add    rsp,0x20
   14003d14a:	pop    rbp
   14003d14b:	ret    
   14003d14c:	int3   
   14003d14d:	int3   
   14003d14e:	int3   
   14003d14f:	int3   
   14003d150:	int3   
   14003d151:	int3   
   14003d152:	int3   
   14003d153:	int3   
   14003d154:	rex push rbp
   14003d156:	sub    rsp,0x20
   14003d15a:	mov    rbp,rdx
   14003d15d:	lea    rcx,[rbp+0x58]
   14003d161:	call   0x140031960
   14003d166:	add    rsp,0x20
   14003d16a:	pop    rbp
   14003d16b:	ret    
   14003d16c:	mov    QWORD PTR [rsp+0x8],rbx
   14003d171:	push   rdi
   14003d172:	sub    rsp,0x20
   14003d176:	mov    ebx,edx
   14003d178:	mov    rdi,rcx
   14003d17b:	call   0x14003ce14
   14003d180:	test   bl,0x1
   14003d183:	je     0x14003d18d
   14003d185:	mov    rcx,rdi
   14003d188:	call   0x14001ac50
   14003d18d:	mov    rax,rdi
   14003d190:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d195:	add    rsp,0x20
   14003d199:	pop    rdi
   14003d19a:	ret    
   14003d19b:	int3   
   14003d19c:	sub    rsp,0x28
   14003d1a0:	xor    r8d,r8d
   14003d1a3:	cmp    rcx,r8
   14003d1a6:	jne    0x14003d1ac
   14003d1a8:	xor    eax,eax
   14003d1aa:	jmp    0x14003d1c7
   14003d1ac:	cmp    rdx,r8
   14003d1af:	je     0x14003d1b5
   14003d1b1:	mov    r8,QWORD PTR [rdx+0x10]
   14003d1b5:	mov    rcx,QWORD PTR [rcx+0x40]
   14003d1b9:	mov    r9,rdx
   14003d1bc:	mov    edx,0x87
   14003d1c1:	call   QWORD PTR [rip+0x279a9]        # 0x140064b70
   14003d1c7:	add    rsp,0x28
   14003d1cb:	ret    
   14003d1cc:	mov    QWORD PTR [rsp+0x8],rbx
   14003d1d1:	push   rdi
   14003d1d2:	sub    rsp,0x20
   14003d1d6:	xor    ebx,ebx
   14003d1d8:	mov    rdi,rcx
   14003d1db:	cmp    rcx,rbx
   14003d1de:	jne    0x14003d1e4
   14003d1e0:	xor    eax,eax
   14003d1e2:	jmp    0x14003d238
   14003d1e4:	mov    rax,QWORD PTR [rcx+0x8]
   14003d1e8:	cmp    rax,rbx
   14003d1eb:	je     0x14003d1f3
   14003d1ed:	mov    rcx,QWORD PTR [rax+0x48]
   14003d1f1:	jmp    0x14003d1f6
   14003d1f3:	mov    rcx,QWORD PTR [rcx]
   14003d1f6:	cmp    rcx,rbx
   14003d1f9:	je     0x14003d207
   14003d1fb:	call   QWORD PTR [rip+0x2780f]        # 0x140064a10
   14003d201:	cmp    eax,ebx
   14003d203:	jne    0x14003d21e
   14003d205:	jmp    0x14003d1e0
   14003d207:	cmp    rax,rbx
   14003d20a:	je     0x14003d21e
   14003d20c:	mov    rcx,rax
   14003d20f:	mov    rax,QWORD PTR [rax]
   14003d212:	call   QWORD PTR [rax+0xf0]
   14003d218:	bt     eax,0x1b
   14003d21c:	jb     0x14003d1e0
   14003d21e:	mov    rax,QWORD PTR [rdi+0x8]
   14003d222:	cmp    rax,rbx
   14003d225:	je     0x14003d236
   14003d227:	bt     DWORD PTR [rax+0xb0],0xd
   14003d22f:	jae    0x14003d236
   14003d231:	mov    ebx,0x1
   14003d236:	mov    eax,ebx
   14003d238:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d23d:	add    rsp,0x20
   14003d241:	pop    rdi
   14003d242:	ret    
   14003d243:	int3   
   14003d244:	sub    rsp,0x28
   14003d248:	test   rcx,rcx
   14003d24b:	jne    0x14003d251
   14003d24d:	xor    eax,eax
   14003d24f:	jmp    0x14003d27f
   14003d251:	mov    rax,QWORD PTR [rcx+0xa0]
   14003d258:	test   rax,rax
   14003d25b:	je     0x14003d267
   14003d25d:	mov    rcx,rax
   14003d260:	call   0x140033740
   14003d265:	jmp    0x14003d27f
   14003d267:	mov    rcx,QWORD PTR [rcx+0x40]
   14003d26b:	xor    r9d,r9d
   14003d26e:	xor    r8d,r8d
   14003d271:	mov    edx,0x87
   14003d276:	call   QWORD PTR [rip+0x278f4]        # 0x140064b70
   14003d27c:	and    eax,0x30
   14003d27f:	add    rsp,0x28
   14003d283:	ret    
   14003d284:	rex push rbx
   14003d286:	sub    rsp,0x20
   14003d28a:	xor    eax,eax
   14003d28c:	mov    rbx,rcx
   14003d28f:	cmp    rcx,rax
   14003d292:	je     0x14003d2a9
   14003d294:	mov    rcx,QWORD PTR [rcx+0x40]
   14003d298:	xor    r9d,r9d
   14003d29b:	xor    r8d,r8d
   14003d29e:	mov    edx,0x87
   14003d2a3:	call   QWORD PTR [rip+0x278c7]        # 0x140064b70
   14003d2a9:	test   al,0x8
   14003d2ab:	je     0x14003d2c3
   14003d2ad:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d2b1:	or     r9,0xffffffffffffffff
   14003d2b5:	xor    r8d,r8d
   14003d2b8:	mov    edx,0xb1
   14003d2bd:	call   QWORD PTR [rip+0x278ad]        # 0x140064b70
   14003d2c3:	mov    rcx,rbx
   14003d2c6:	add    rsp,0x20
   14003d2ca:	pop    rbx
   14003d2cb:	jmp    0x140029b9c
   14003d2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14003d2d5:	mov    QWORD PTR [rsp+0x10],rsi
   14003d2da:	push   rdi
   14003d2db:	sub    rsp,0x20
   14003d2df:	xor    edi,edi
   14003d2e1:	mov    rbx,rdx
   14003d2e4:	mov    rsi,rcx
   14003d2e7:	cmp    rdx,rdi
   14003d2ea:	je     0x14003d339
   14003d2ec:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d2f0:	mov    edx,0xfffffff0
   14003d2f5:	call   QWORD PTR [rip+0x27705]        # 0x140064a00
   14003d2fb:	and    eax,0xc0000000
   14003d300:	cmp    eax,0x40000000
   14003d305:	jne    0x14003d339
   14003d307:	cmp    rbx,rsi
   14003d30a:	je     0x14003d339
   14003d30c:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d310:	mov    rdi,rbx
   14003d313:	call   QWORD PTR [rip+0x277c7]        # 0x140064ae0
   14003d319:	mov    rcx,rax
   14003d31c:	call   0x1400256f0
   14003d321:	mov    edx,0xffffffec
   14003d326:	mov    rcx,QWORD PTR [rax+0x40]
   14003d32a:	mov    rbx,rax
   14003d32d:	call   QWORD PTR [rip+0x276cd]        # 0x140064a00
   14003d333:	bt     eax,0x10
   14003d337:	jae    0x14003d2ec
   14003d339:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d33e:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d343:	mov    rax,rdi
   14003d346:	add    rsp,0x20
   14003d34a:	pop    rdi
   14003d34b:	ret    
   14003d34c:	mov    QWORD PTR [rsp+0x8],rbx
   14003d351:	mov    QWORD PTR [rsp+0x10],rsi
   14003d356:	push   rdi
   14003d357:	sub    rsp,0x20
   14003d35b:	test   rdx,rdx
   14003d35e:	mov    esi,r8d
   14003d361:	mov    rbx,rdx
   14003d364:	mov    rdi,rcx
   14003d367:	je     0x14003d412
   14003d36d:	mov    rcx,QWORD PTR [rdx+0x40]
   14003d371:	jmp    0x14003d39d
   14003d373:	call   QWORD PTR [rip+0x27767]        # 0x140064ae0
   14003d379:	mov    rcx,rax
   14003d37c:	call   0x1400256f0
   14003d381:	mov    rcx,rdi
   14003d384:	mov    rdx,rax
   14003d387:	call   0x14003d2d0
   14003d38c:	test   rax,rax
   14003d38f:	mov    rbx,rax
   14003d392:	je     0x14003d412
   14003d394:	cmp    rax,rdi
   14003d397:	je     0x14003d412
   14003d399:	mov    rcx,QWORD PTR [rax+0x40]
   14003d39d:	mov    edx,0x2
   14003d3a2:	call   QWORD PTR [rip+0x275d8]        # 0x140064980
   14003d3a8:	mov    rcx,rax
   14003d3ab:	call   0x1400256f0
   14003d3b0:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d3b4:	test   rax,rax
   14003d3b7:	je     0x14003d373
   14003d3b9:	mov    edx,0x2
   14003d3be:	call   QWORD PTR [rip+0x275bc]        # 0x140064980
   14003d3c4:	mov    rcx,rax
   14003d3c7:	call   0x1400256f0
   14003d3cc:	mov    rbx,rax
   14003d3cf:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d3d3:	mov    edx,0xffffffec
   14003d3d8:	call   QWORD PTR [rip+0x27622]        # 0x140064a00
   14003d3de:	bt     eax,0x10
   14003d3e2:	jae    0x14003d441
   14003d3e4:	test   sil,0x1
   14003d3e8:	je     0x14003d3f8
   14003d3ea:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d3ee:	call   QWORD PTR [rip+0x27654]        # 0x140064a48
   14003d3f4:	test   eax,eax
   14003d3f6:	je     0x14003d40a
   14003d3f8:	test   sil,0x2
   14003d3fc:	je     0x14003d431
   14003d3fe:	mov    rcx,rbx
   14003d401:	call   0x140029b3c
   14003d406:	test   eax,eax
   14003d408:	jne    0x14003d431
   14003d40a:	mov    rdx,rbx
   14003d40d:	mov    rcx,rdi
   14003d410:	jmp    0x14003d436
   14003d412:	mov    rcx,QWORD PTR [rdi+0x40]
   14003d416:	call   QWORD PTR [rip+0x27484]        # 0x1400648a0
   14003d41c:	mov    rcx,rax
   14003d41f:	call   0x1400256f0
   14003d424:	test   rax,rax
   14003d427:	mov    rbx,rax
   14003d42a:	jne    0x14003d3cf
   14003d42c:	mov    rax,rdi
   14003d42f:	jmp    0x14003d444
   14003d431:	xor    edx,edx
   14003d433:	mov    rcx,rbx
   14003d436:	mov    r8d,esi
   14003d439:	call   0x14003d34c
   14003d43e:	mov    rbx,rax
   14003d441:	mov    rax,rbx
   14003d444:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d449:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d44e:	add    rsp,0x20
   14003d452:	pop    rdi
   14003d453:	ret    
   14003d454:	test   rcx,rcx
   14003d457:	je     0x14003d4f1
   14003d45d:	mov    QWORD PTR [rsp+0x8],rbx
   14003d462:	mov    QWORD PTR [rsp+0x10],rsi
   14003d467:	push   rdi
   14003d468:	sub    rsp,0x20
   14003d46c:	mov    rbx,rcx
   14003d46f:	mov    rax,rcx
   14003d472:	xor    edi,edi
   14003d474:	mov    rsi,QWORD PTR [rax+0x98]
   14003d47b:	test   rsi,rsi
   14003d47e:	jne    0x14003d4a3
   14003d480:	mov    rdi,QWORD PTR [rax+0xa0]
   14003d487:	test   rdi,rdi
   14003d48a:	jne    0x14003d4a3
   14003d48c:	mov    rcx,QWORD PTR [rax+0x40]
   14003d490:	call   QWORD PTR [rip+0x2764a]        # 0x140064ae0
   14003d496:	mov    rcx,rax
   14003d499:	call   0x1400256f0
   14003d49e:	test   rax,rax
   14003d4a1:	jne    0x14003d474
   14003d4a3:	test   rax,rax
   14003d4a6:	je     0x14003d4e2
   14003d4a8:	test   rsi,rsi
   14003d4ab:	jne    0x14003d4e2
   14003d4ad:	mov    rax,QWORD PTR [rdi]
   14003d4b0:	mov    rcx,rdi
   14003d4b3:	call   QWORD PTR [rax+0x160]
   14003d4b9:	call   QWORD PTR [rip+0x27619]        # 0x140064ad8
   14003d4bf:	mov    rcx,rax
   14003d4c2:	call   0x1400256f0
   14003d4c7:	cmp    rax,rbx
   14003d4ca:	je     0x14003d4e2
   14003d4cc:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d4d0:	call   QWORD PTR [rip+0x27502]        # 0x1400649d8
   14003d4d6:	test   eax,eax
   14003d4d8:	je     0x14003d4e2
   14003d4da:	mov    rcx,rbx
   14003d4dd:	call   0x140029b9c
   14003d4e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d4e7:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d4ec:	add    rsp,0x20
   14003d4f0:	pop    rdi
   14003d4f1:	ret    
   14003d4f2:	int3   
   14003d4f3:	int3   
   14003d4f4:	test   rcx,rcx
   14003d4f7:	je     0x14003d5b3
   14003d4fd:	mov    QWORD PTR [rsp+0x8],rbx
   14003d502:	mov    QWORD PTR [rsp+0x10],rsi
   14003d507:	push   rdi
   14003d508:	sub    rsp,0x20
   14003d50c:	mov    rbx,rcx
   14003d50f:	mov    rcx,QWORD PTR [rcx+0x40]
   14003d513:	mov    rsi,rdx
   14003d516:	call   QWORD PTR [rip+0x274bc]        # 0x1400649d8
   14003d51c:	test   eax,eax
   14003d51e:	je     0x14003d5a4
   14003d524:	cmp    rbx,rsi
   14003d527:	je     0x14003d5a4
   14003d529:	mov    rdi,QWORD PTR [rbx+0x98]
   14003d530:	test   rdi,rdi
   14003d533:	jne    0x14003d551
   14003d535:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d539:	call   QWORD PTR [rip+0x275a1]        # 0x140064ae0
   14003d53f:	mov    rcx,rax
   14003d542:	call   0x1400256f0
   14003d547:	test   rax,rax
   14003d54a:	mov    rbx,rax
   14003d54d:	jne    0x14003d529
   14003d54f:	jmp    0x14003d5a4
   14003d551:	mov    rcx,QWORD PTR [rdi+0xc8]
   14003d558:	xor    eax,eax
   14003d55a:	test   rcx,rcx
   14003d55d:	je     0x14003d575
   14003d55f:	cmp    DWORD PTR [rcx+0xb4],eax
   14003d565:	jne    0x14003d575
   14003d567:	mov    rcx,QWORD PTR [rcx+0x48]
   14003d56b:	call   0x1400256f0
   14003d570:	test   rax,rax
   14003d573:	je     0x14003d5a4
   14003d575:	test   rsi,rsi
   14003d578:	je     0x14003d596
   14003d57a:	test   rax,rax
   14003d57d:	je     0x14003d596
   14003d57f:	cmp    rsi,rax
   14003d582:	je     0x14003d5a4
   14003d584:	mov    rdx,QWORD PTR [rsi+0x40]
   14003d588:	mov    rcx,QWORD PTR [rax+0x40]
   14003d58c:	call   QWORD PTR [rip+0x272be]        # 0x140064850
   14003d592:	test   eax,eax
   14003d594:	jne    0x14003d5a4
   14003d596:	mov    rax,QWORD PTR [rdi]
   14003d599:	xor    edx,edx
   14003d59b:	mov    rcx,rdi
   14003d59e:	call   QWORD PTR [rax+0xc0]
   14003d5a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d5a9:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d5ae:	add    rsp,0x20
   14003d5b2:	pop    rdi
   14003d5b3:	ret    
   14003d5b4:	mov    QWORD PTR [rsp+0x8],rbx
   14003d5b9:	mov    QWORD PTR [rsp+0x10],rbp
   14003d5be:	mov    QWORD PTR [rsp+0x18],rsi
   14003d5c3:	push   rdi
   14003d5c4:	sub    rsp,0x20
   14003d5c8:	mov    ebp,edx
   14003d5ca:	mov    rsi,rcx
   14003d5cd:	call   0x1400298d8
   14003d5d2:	test   rax,rax
   14003d5d5:	jne    0x14003d623
   14003d5d7:	lea    r8d,[rax+0x1]
   14003d5db:	xor    edx,edx
   14003d5dd:	mov    rcx,rsi
   14003d5e0:	call   0x14003d34c
   14003d5e5:	cmp    rax,rsi
   14003d5e8:	mov    rdi,rax
   14003d5eb:	jne    0x14003d5f1
   14003d5ed:	xor    eax,eax
   14003d5ef:	jmp    0x14003d623
   14003d5f1:	mov    rbx,rax
   14003d5f4:	mov    rcx,rbx
   14003d5f7:	call   0x140029a94
   14003d5fc:	cmp    eax,ebp
   14003d5fe:	je     0x14003d620
   14003d600:	mov    r8d,0x1
   14003d606:	mov    rdx,rbx
   14003d609:	mov    rcx,rsi
   14003d60c:	call   0x14003d34c
   14003d611:	test   rax,rax
   14003d614:	mov    rbx,rax
   14003d617:	je     0x14003d5ed
   14003d619:	cmp    rax,rdi
   14003d61c:	jne    0x14003d5f4
   14003d61e:	jmp    0x14003d5ed
   14003d620:	mov    rax,rbx
   14003d623:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d628:	mov    rbp,QWORD PTR [rsp+0x38]
   14003d62d:	mov    rsi,QWORD PTR [rsp+0x40]
   14003d632:	add    rsp,0x20
   14003d636:	pop    rdi
   14003d637:	ret    
   14003d638:	mov    QWORD PTR [rsp+0x8],rbx
   14003d63d:	mov    QWORD PTR [rsp+0x10],rsi
   14003d642:	push   rdi
   14003d643:	sub    rsp,0x20
   14003d647:	mov    rsi,rcx
   14003d64a:	mov    rcx,QWORD PTR [rcx+0xa0]
   14003d651:	xor    ebx,ebx
   14003d653:	cmp    rcx,rbx
   14003d656:	mov    edi,edx
   14003d658:	je     0x14003d661
   14003d65a:	call   0x140033760
   14003d65f:	jmp    0x14003d6a3
   14003d661:	mov    rcx,QWORD PTR [rsi+0x40]
   14003d665:	xor    r9d,r9d
   14003d668:	xor    r8d,r8d
   14003d66b:	mov    edx,0x87
   14003d670:	call   QWORD PTR [rip+0x274fa]        # 0x140064b70
   14003d676:	mov    ecx,edi
   14003d678:	neg    ecx
   14003d67a:	sbb    edx,edx
   14003d67c:	and    edx,0x10
   14003d67f:	add    edx,0x10
   14003d682:	test   eax,edx
   14003d684:	je     0x14003d6a3
   14003d686:	mov    rcx,QWORD PTR [rsi+0x40]
   14003d68a:	cmp    edi,ebx
   14003d68c:	mov    r9d,0x1
   14003d692:	setne  bl
   14003d695:	mov    edx,0xf4
   14003d69a:	mov    r8,rbx
   14003d69d:	call   QWORD PTR [rip+0x274cd]        # 0x140064b70
   14003d6a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d6a8:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d6ad:	add    rsp,0x20
   14003d6b1:	pop    rdi
   14003d6b2:	ret    
   14003d6b3:	int3   
   14003d6b4:	mov    QWORD PTR [rsp+0x8],rbx
   14003d6b9:	mov    QWORD PTR [rsp+0x10],rsi
   14003d6be:	push   rdi
   14003d6bf:	sub    rsp,0x20
   14003d6c3:	test   rdx,rdx
   14003d6c6:	mov    rbx,rdx
   14003d6c9:	mov    rsi,rcx
   14003d6cc:	je     0x14003d6f0
   14003d6ce:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d6d2:	mov    edx,0xffffffec
   14003d6d7:	call   QWORD PTR [rip+0x27323]        # 0x140064a00
   14003d6dd:	bt     eax,0x10
   14003d6e1:	jb     0x14003d6f0
   14003d6e3:	mov    rdx,rbx
   14003d6e6:	mov    rcx,rsi
   14003d6e9:	call   0x14003d2d0
   14003d6ee:	jmp    0x14003d6fe
   14003d6f0:	xor    edx,edx
   14003d6f2:	mov    rcx,rsi
   14003d6f5:	lea    r8d,[rdx+0x3]
   14003d6f9:	call   0x14003d34c
   14003d6fe:	test   rax,rax
   14003d701:	mov    rbx,rax
   14003d704:	je     0x14003d72e
   14003d706:	mov    rdi,rax
   14003d709:	xor    edx,edx
   14003d70b:	mov    rcx,rdi
   14003d70e:	call   0x14003d638
   14003d713:	xor    r8d,r8d
   14003d716:	mov    rdx,rdi
   14003d719:	mov    rcx,rsi
   14003d71c:	call   0x14003d34c
   14003d721:	test   rax,rax
   14003d724:	mov    rdi,rax
   14003d727:	je     0x14003d72e
   14003d729:	cmp    rax,rbx
   14003d72c:	jne    0x14003d709
   14003d72e:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d733:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d738:	add    rsp,0x20
   14003d73c:	pop    rdi
   14003d73d:	ret    
   14003d73e:	int3   
   14003d73f:	int3   
   14003d740:	sub    rsp,0x28
   14003d744:	mov    rcx,QWORD PTR [rcx+0x40]
   14003d748:	xor    r9d,r9d
   14003d74b:	xor    r8d,r8d
   14003d74e:	mov    edx,0x400
   14003d753:	call   QWORD PTR [rip+0x27417]        # 0x140064b70
   14003d759:	mov    rdx,rax
   14003d75c:	movzx  ecx,ax
   14003d75f:	mov    eax,0x1
   14003d764:	shr    rdx,0x10
   14003d768:	cmp    dx,0x534b
   14003d76d:	cmove  eax,ecx
   14003d770:	add    rsp,0x28
   14003d774:	ret    
   14003d775:	int3   
   14003d776:	int3   
   14003d777:	int3   
   14003d778:	mov    QWORD PTR [rsp+0x8],rbx
   14003d77d:	mov    QWORD PTR [rsp+0x10],rbp
   14003d782:	mov    QWORD PTR [rsp+0x18],rsi
   14003d787:	push   rdi
   14003d788:	sub    rsp,0x20
   14003d78c:	xor    esi,esi
   14003d78e:	test   r8,r8
   14003d791:	mov    rbx,r8
   14003d794:	mov    rdi,rdx
   14003d797:	mov    rbp,rcx
   14003d79a:	jne    0x14003d7a0
   14003d79c:	xor    edx,edx
   14003d79e:	jmp    0x14003d7a4
   14003d7a0:	mov    rdx,QWORD PTR [r8+0x40]
   14003d7a4:	mov    rcx,QWORD PTR [rcx+0x40]
   14003d7a8:	call   QWORD PTR [rip+0x270a2]        # 0x140064850
   14003d7ae:	test   eax,eax
   14003d7b0:	je     0x14003d88b
   14003d7b6:	test   rbx,rbx
   14003d7b9:	je     0x14003d7de
   14003d7bb:	mov    rcx,QWORD PTR [rbx+0x40]
   14003d7bf:	mov    edx,0xffffffec
   14003d7c4:	call   QWORD PTR [rip+0x27236]        # 0x140064a00
   14003d7ca:	bt     eax,0x10
   14003d7ce:	jb     0x14003d88b
   14003d7d4:	mov    rcx,rbx
   14003d7d7:	call   0x14003d244
   14003d7dc:	mov    esi,eax
   14003d7de:	cmp    rdi,rbx
   14003d7e1:	jne    0x14003d826
   14003d7e3:	test   sil,0x20
   14003d7e7:	je     0x14003d88b
   14003d7ed:	test   rdi,rdi
   14003d7f0:	je     0x14003d87e
   14003d7f6:	mov    rcx,rbp
   14003d7f9:	call   0x14003d740
   14003d7fe:	mov    rcx,rbp
   14003d801:	mov    edx,eax
   14003d803:	call   0x14003d5b4
   14003d808:	test   rax,rax
   14003d80b:	mov    rdi,rax
   14003d80e:	je     0x14003d87e
   14003d810:	cmp    rax,rbx
   14003d813:	je     0x14003d87e
   14003d815:	mov    rcx,rax
   14003d818:	call   0x14003d244
   14003d81d:	test   al,0x10
   14003d81f:	je     0x14003d87e
   14003d821:	mov    rdx,rdi
   14003d824:	jmp    0x14003d843
   14003d826:	test   rdi,rdi
   14003d829:	je     0x14003d837
   14003d82b:	mov    rcx,rdi
   14003d82e:	call   0x14003d244
   14003d833:	test   eax,eax
   14003d835:	jne    0x14003d840
   14003d837:	test   rbx,rbx
   14003d83a:	je     0x14003d84b
   14003d83c:	test   esi,esi
   14003d83e:	je     0x14003d84b
   14003d840:	mov    rdx,rbx
   14003d843:	mov    rcx,rbp
   14003d846:	call   0x14003d6b4
   14003d84b:	test   sil,0x30
   14003d84f:	jne    0x14003d87e
   14003d851:	mov    rcx,rbp
   14003d854:	call   0x14003d740
   14003d859:	mov    rcx,rbp
   14003d85c:	mov    edx,eax
   14003d85e:	call   0x14003d5b4
   14003d863:	mov    rcx,rax
   14003d866:	mov    rbx,rax
   14003d869:	call   0x14003d244
   14003d86e:	test   al,0x20
   14003d870:	je     0x14003d88b
   14003d872:	mov    rcx,rbx
   14003d875:	call   0x140029b3c
   14003d87a:	test   eax,eax
   14003d87c:	je     0x14003d88b
   14003d87e:	mov    edx,0x1
   14003d883:	mov    rcx,rbx
   14003d886:	call   0x14003d638
   14003d88b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d890:	mov    rbp,QWORD PTR [rsp+0x38]
   14003d895:	mov    rsi,QWORD PTR [rsp+0x40]
   14003d89a:	add    rsp,0x20
   14003d89e:	pop    rdi
   14003d89f:	ret    
   14003d8a0:	rex push rbx
   14003d8a2:	sub    rsp,0x20
   14003d8a6:	mov    rbx,rdx
   14003d8a9:	call   0x140023154
   14003d8ae:	test   rax,rax
   14003d8b1:	je     0x14003d8ec
   14003d8b3:	mov    rcx,QWORD PTR [rax+0x88]
   14003d8ba:	jmp    0x14003d8e7
   14003d8bc:	test   rcx,rcx
   14003d8bf:	mov    rdx,rcx
   14003d8c2:	je     0x14003d8f9
   14003d8c4:	mov    rdx,QWORD PTR [rdx+0x10]
   14003d8c8:	mov    rcx,QWORD PTR [rcx]
   14003d8cb:	mov    r8,QWORD PTR [rdx+0x8]
   14003d8cf:	test   r8,r8
   14003d8d2:	je     0x14003d8de
   14003d8d4:	mov    rax,QWORD PTR [rbx+0x40]
   14003d8d8:	cmp    QWORD PTR [r8+0x48],rax
   14003d8dc:	je     0x14003d8f4
   14003d8de:	mov    rax,QWORD PTR [rbx+0x40]
   14003d8e2:	cmp    QWORD PTR [rdx],rax
   14003d8e5:	je     0x14003d8f4
   14003d8e7:	test   rcx,rcx
   14003d8ea:	jne    0x14003d8bc
   14003d8ec:	xor    eax,eax
   14003d8ee:	add    rsp,0x20
   14003d8f2:	pop    rbx
   14003d8f3:	ret    
   14003d8f4:	mov    rax,rdx
   14003d8f7:	jmp    0x14003d8ee
   14003d8f9:	call   0x1400208f8
   14003d8fe:	int3   
   14003d8ff:	int3   
   14003d900:	mov    rax,rsp
   14003d903:	mov    QWORD PTR [rax+0x8],rbx
   14003d907:	mov    QWORD PTR [rax+0x10],rbp
   14003d90b:	mov    QWORD PTR [rax+0x18],rsi
   14003d90f:	mov    QWORD PTR [rax+0x20],rdi
   14003d913:	push   r12
   14003d915:	sub    rsp,0x20
   14003d919:	test   rcx,rcx
   14003d91c:	mov    r12,r8
   14003d91f:	mov    rdi,rdx
   14003d922:	mov    rsi,rcx
   14003d925:	jne    0x14003d92d
   14003d927:	call   0x1400208f8
   14003d92c:	int3   
   14003d92d:	xor    ebp,ebp
   14003d92f:	test   rdx,rdx
   14003d932:	mov    rbx,rdx
   14003d935:	je     0x14003d971
   14003d937:	mov    rcx,QWORD PTR [rdx+0x8]
   14003d93b:	test   rcx,rcx
   14003d93e:	je     0x14003d946
   14003d940:	mov    rcx,QWORD PTR [rcx+0x48]
   14003d944:	jmp    0x14003d949
   14003d946:	mov    rcx,QWORD PTR [rdx]
   14003d949:	test   rcx,rcx
   14003d94c:	je     0x14003d971
   14003d94e:	call   0x1400256f0
   14003d953:	mov    rcx,rsi
   14003d956:	mov    rdx,rax
   14003d959:	call   0x14003d2d0
   14003d95e:	test   rax,rax
   14003d961:	je     0x14003d971
   14003d963:	mov    rdx,rax
   14003d966:	mov    rcx,rsi
   14003d969:	call   0x14003d8a0
   14003d96e:	mov    rbx,rax
   14003d971:	mov    rdx,rbx
   14003d974:	mov    rcx,rsi
   14003d977:	call   0x14002a5b4
   14003d97c:	test   rax,rax
   14003d97f:	mov    rbx,rax
   14003d982:	je     0x14003d9ae
   14003d984:	add    ebp,0x1
   14003d987:	cmp    rax,rdi
   14003d98a:	je     0x14003d9ae
   14003d98c:	cmp    ebp,0x3c
   14003d98f:	jg     0x14003d9ae
   14003d991:	mov    rcx,QWORD PTR [rax+0x8]
   14003d995:	test   rcx,rcx
   14003d998:	je     0x14003d971
   14003d99a:	mov    rdx,r12
   14003d99d:	call   0x140033b54
   14003d9a2:	test   eax,eax
   14003d9a4:	je     0x14003d971
   14003d9a6:	mov    rax,rbx
   14003d9a9:	jmp    0x14003daa9
   14003d9ae:	mov    rcx,rsi
   14003d9b1:	call   0x140023154
   14003d9b6:	test   rax,rax
   14003d9b9:	mov    rbp,rax
   14003d9bc:	je     0x14003daa7
   14003d9c2:	test   rdi,rdi
   14003d9c5:	mov    rbx,QWORD PTR [rax+0x88]
   14003d9cc:	je     0x14003d9fa
   14003d9ce:	xor    eax,eax
   14003d9d0:	test   rbx,rbx
   14003d9d3:	je     0x14003daa7
   14003d9d9:	cmp    rax,rdi
   14003d9dc:	je     0x14003da12
   14003d9de:	test   rbx,rbx
   14003d9e1:	mov    rax,rbx
   14003d9e4:	je     0x14003d9f4
   14003d9e6:	mov    rbx,QWORD PTR [rbx]
   14003d9e9:	mov    rax,QWORD PTR [rax+0x10]
   14003d9ed:	test   rbx,rbx
   14003d9f0:	jne    0x14003d9d9
   14003d9f2:	jmp    0x14003da12
   14003d9f4:	call   0x1400208f8
   14003d9f9:	int3   
   14003d9fa:	test   rbx,rbx
   14003d9fd:	mov    rdi,rbx
   14003da00:	jne    0x14003da08
   14003da02:	call   0x1400208f8
   14003da07:	int3   
   14003da08:	mov    rdi,QWORD PTR [rdi+0x10]
   14003da0c:	mov    rbx,QWORD PTR [rbx]
   14003da0f:	mov    rax,rdi
   14003da12:	test   rbx,rbx
   14003da15:	je     0x14003daa7
   14003da1b:	test   rax,rax
   14003da1e:	je     0x14003daa7
   14003da24:	test   rdi,rdi
   14003da27:	je     0x14003daa7
   14003da29:	test   rbx,rbx
   14003da2c:	jne    0x14003da35
   14003da2e:	mov    rbx,QWORD PTR [rbp+0x88]
   14003da35:	test   rbx,rbx
   14003da38:	mov    rsi,rbx
   14003da3b:	je     0x14003daa1
   14003da3d:	mov    rsi,QWORD PTR [rsi+0x10]
   14003da41:	mov    rbx,QWORD PTR [rbx]
   14003da44:	mov    rcx,QWORD PTR [rsi+0x8]
   14003da48:	test   rcx,rcx
   14003da4b:	je     0x14003da96
   14003da4d:	mov    rdx,r12
   14003da50:	call   0x140033b54
   14003da55:	test   eax,eax
   14003da57:	je     0x14003da96
   14003da59:	mov    rax,QWORD PTR [rsi+0x8]
   14003da5d:	test   rax,rax
   14003da60:	je     0x14003da68
   14003da62:	mov    rcx,QWORD PTR [rax+0x48]
   14003da66:	jmp    0x14003da6b
   14003da68:	mov    rcx,QWORD PTR [rsi]
   14003da6b:	test   rcx,rcx
   14003da6e:	je     0x14003da7f
   14003da70:	call   QWORD PTR [rip+0x26f9a]        # 0x140064a10
   14003da76:	test   eax,eax
   14003da78:	je     0x14003da96
   14003da7a:	mov    rax,rsi
   14003da7d:	jmp    0x14003daa9
   14003da7f:	test   rax,rax
   14003da82:	je     0x14003da9b
   14003da84:	mov    rcx,rax
   14003da87:	mov    rax,QWORD PTR [rax]
   14003da8a:	call   QWORD PTR [rax+0xf0]
   14003da90:	bt     eax,0x1b
   14003da94:	jae    0x14003da7a
   14003da96:	cmp    rsi,rdi
   14003da99:	jmp    0x14003da27
   14003da9b:	call   0x1400208f8
   14003daa0:	int3   
   14003daa1:	call   0x1400208f8
   14003daa6:	int3   
   14003daa7:	xor    eax,eax
   14003daa9:	mov    rbx,QWORD PTR [rsp+0x30]
   14003daae:	mov    rbp,QWORD PTR [rsp+0x38]
   14003dab3:	mov    rsi,QWORD PTR [rsp+0x40]
   14003dab8:	mov    rdi,QWORD PTR [rsp+0x48]
   14003dabd:	add    rsp,0x20
   14003dac1:	pop    r12
   14003dac3:	ret    
   14003dac4:	mov    rax,rsp
   14003dac7:	mov    QWORD PTR [rax+0x8],rbx
   14003dacb:	mov    QWORD PTR [rax+0x10],rbp
   14003dacf:	mov    QWORD PTR [rax+0x18],rsi
   14003dad3:	mov    QWORD PTR [rax+0x20],rdi
   14003dad7:	push   r12
   14003dad9:	push   r13
   14003dadb:	push   r14
   14003dadd:	sub    rsp,0x20
   14003dae1:	mov    r14,r8
   14003dae4:	mov    r13,rcx
   14003dae7:	xor    r12d,r12d
   14003daea:	call   0x14003d8a0
   14003daef:	test   rax,rax
   14003daf2:	mov    rbx,rax
   14003daf5:	jne    0x14003db42
   14003daf7:	mov    rcx,r13
   14003dafa:	call   0x140023154
   14003daff:	test   rax,rax
   14003db02:	mov    rbp,rax
   14003db05:	je     0x14003db42
   14003db07:	mov    rdi,QWORD PTR [rax+0x88]
   14003db0e:	test   rdi,rdi
   14003db11:	je     0x14003db42
   14003db13:	mov    rsi,rdi
   14003db16:	mov    rdi,QWORD PTR [rdi]
   14003db19:	mov    rsi,QWORD PTR [rsi+0x10]
   14003db1d:	mov    rax,QWORD PTR [rsi+0x8]
   14003db21:	test   rax,rax
   14003db24:	je     0x14003db2f
   14003db26:	cmp    rax,QWORD PTR [rbp+0xd8]
   14003db2d:	je     0x14003db3f
   14003db2f:	cmp    QWORD PTR [rsi],r12
   14003db32:	je     0x14003db0e
   14003db34:	call   QWORD PTR [rip+0x26f9e]        # 0x140064ad8
   14003db3a:	cmp    QWORD PTR [rsi],rax
   14003db3d:	jne    0x14003db0e
   14003db3f:	mov    rbx,rsi
   14003db42:	xor    edi,edi
   14003db44:	mov    r8,r14
   14003db47:	mov    rdx,rbx
   14003db4a:	mov    rcx,r13
   14003db4d:	call   0x14003d900
   14003db52:	test   rax,rax
   14003db55:	mov    rbx,rax
   14003db58:	je     0x14003dbe0
   14003db5e:	mov    rcx,rax
   14003db61:	call   0x14003d1cc
   14003db66:	test   eax,eax
   14003db68:	je     0x14003db80
   14003db6a:	xor    r8d,r8d
   14003db6d:	mov    rdx,rbx
   14003db70:	mov    rcx,r13
   14003db73:	call   0x140029e0c
   14003db78:	test   rax,rax
   14003db7b:	mov    rbx,rax
   14003db7e:	je     0x14003dbe0
   14003db80:	test   rbx,rbx
   14003db83:	je     0x14003dbab
   14003db85:	mov    rcx,QWORD PTR [rbx+0x8]
   14003db89:	test   rcx,rcx
   14003db8c:	je     0x14003db94
   14003db8e:	mov    rcx,QWORD PTR [rcx+0x48]
   14003db92:	jmp    0x14003db97
   14003db94:	mov    rcx,QWORD PTR [rbx]
   14003db97:	test   rcx,rcx
   14003db9a:	je     0x14003dbab
   14003db9c:	call   QWORD PTR [rip+0x26e6e]        # 0x140064a10
   14003dba2:	test   eax,eax
   14003dba4:	je     0x14003dbc5
   14003dba6:	mov    rax,rbx
   14003dba9:	jmp    0x14003dbe2
   14003dbab:	cmp    QWORD PTR [rbx+0x8],0x0
   14003dbb0:	je     0x14003dc01
   14003dbb2:	mov    rcx,QWORD PTR [rbx+0x8]
   14003dbb6:	mov    rax,QWORD PTR [rcx]
   14003dbb9:	call   QWORD PTR [rax+0xf0]
   14003dbbf:	bt     eax,0x1b
   14003dbc3:	jae    0x14003dba6
   14003dbc5:	cmp    rbx,r12
   14003dbc8:	je     0x14003dbe0
   14003dbca:	test   r12,r12
   14003dbcd:	cmove  r12,rbx
   14003dbd1:	add    edi,0x1
   14003dbd4:	cmp    edi,0x200
   14003dbda:	jl     0x14003db44
   14003dbe0:	xor    eax,eax
   14003dbe2:	mov    rbx,QWORD PTR [rsp+0x40]
   14003dbe7:	mov    rbp,QWORD PTR [rsp+0x48]
   14003dbec:	mov    rsi,QWORD PTR [rsp+0x50]
   14003dbf1:	mov    rdi,QWORD PTR [rsp+0x58]
   14003dbf6:	add    rsp,0x20
   14003dbfa:	pop    r14
   14003dbfc:	pop    r13
   14003dbfe:	pop    r12
   14003dc00:	ret    
   14003dc01:	call   0x1400208f8
   14003dc06:	int3   
   14003dc07:	int3   
   14003dc08:	mov    rax,rsp
   14003dc0b:	mov    QWORD PTR [rax+0x18],r8
   14003dc0f:	mov    QWORD PTR [rax+0x10],rdx
   14003dc13:	push   rdi
   14003dc14:	push   r12
   14003dc16:	push   r13
   14003dc18:	push   r14
   14003dc1a:	push   r15
   14003dc1c:	sub    rsp,0x60
   14003dc20:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14003dc29:	mov    QWORD PTR [rax+0x8],rsi
   14003dc2d:	mov    r15,r8
   14003dc30:	mov    rsi,rdx
   14003dc33:	test   rdx,rdx
   14003dc36:	jne    0x14003dc3f
   14003dc38:	and    QWORD PTR [rsp+0x30],rdx
   14003dc3d:	jmp    0x14003dc48
   14003dc3f:	mov    rax,QWORD PTR [rdx+0x40]
   14003dc43:	mov    QWORD PTR [rsp+0x30],rax
   14003dc48:	mov    r12d,DWORD PTR [r8+0x8]
   14003dc4c:	call   QWORD PTR [rip+0x26e86]        # 0x140064ad8
   14003dc52:	mov    QWORD PTR [rsp+0x40],rax
   14003dc57:	mov    rcx,rax
   14003dc5a:	call   0x1400256f0
   14003dc5f:	mov    r13,rax
   14003dc62:	mov    QWORD PTR [rsp+0x38],rax
   14003dc67:	mov    r14d,0x100
   14003dc6d:	cmp    r12d,r14d
   14003dc70:	jb     0x14003dc7b
   14003dc72:	cmp    r12d,0x109
   14003dc79:	jbe    0x14003dc8c
   14003dc7b:	lea    eax,[r12-0x200]
   14003dc83:	cmp    eax,0x9
   14003dc86:	ja     0x14003dd70
   14003dc8c:	test   r13,r13
   14003dc8f:	je     0x14003dd70
   14003dc95:	mov    rdi,r13
   14003dc98:	cmp    QWORD PTR [rdi+0xa0],0x0
   14003dca0:	jne    0x14003dcd3
   14003dca2:	mov    rcx,QWORD PTR [rdi+0x40]
   14003dca6:	call   QWORD PTR [rip+0x26e34]        # 0x140064ae0
   14003dcac:	mov    rcx,rax
   14003dcaf:	call   0x1400256f0
   14003dcb4:	cmp    rax,rsi
   14003dcb7:	je     0x14003dcd3
   14003dcb9:	mov    rcx,QWORD PTR [rdi+0x40]
   14003dcbd:	call   QWORD PTR [rip+0x26e1d]        # 0x140064ae0
   14003dcc3:	mov    rcx,rax
   14003dcc6:	call   0x1400256f0
   14003dccb:	mov    rdi,rax
   14003dcce:	test   rax,rax
   14003dcd1:	jne    0x14003dc98
   14003dcd3:	test   rdi,rdi
   14003dcd6:	je     0x14003dd0c
   14003dcd8:	mov    rax,QWORD PTR [rdi+0xa0]
   14003dcdf:	test   rax,rax
   14003dce2:	je     0x14003dd0c
   14003dce4:	cmp    QWORD PTR [rax+0x90],0x0
   14003dcec:	je     0x14003dd0c
   14003dcee:	mov    rcx,QWORD PTR [rax+0x90]
   14003dcf5:	mov    rax,QWORD PTR [rcx]
   14003dcf8:	mov    rdx,r15
   14003dcfb:	call   QWORD PTR [rax+0x28]
   14003dcfe:	test   eax,eax
   14003dd00:	jne    0x14003dd0c
   14003dd02:	mov    eax,0x1
   14003dd07:	jmp    0x14003e1f8
   14003dd0c:	cmp    r12d,0x101
   14003dd13:	je     0x14003dd23
   14003dd15:	cmp    r12d,r14d
   14003dd18:	je     0x14003dd23
   14003dd1a:	cmp    r12d,0x102
   14003dd21:	jne    0x14003dd69
   14003dd23:	test   rdi,rdi
   14003dd26:	je     0x14003dd69
   14003dd28:	mov    rax,QWORD PTR [rdi+0xa0]
   14003dd2f:	test   rax,rax
   14003dd32:	je     0x14003dd69
   14003dd34:	cmp    WORD PTR [r15+0x10],0xd
   14003dd3a:	jne    0x14003dd45
   14003dd3c:	test   BYTE PTR [rax+0xcc],0x1
   14003dd43:	jne    0x14003dd5b
   14003dd45:	cmp    WORD PTR [r15+0x10],0x1b
   14003dd4b:	jne    0x14003dd62
   14003dd4d:	mov    edi,0x2
   14003dd52:	test   BYTE PTR [rax+0xcc],dil
   14003dd59:	je     0x14003dd75
   14003dd5b:	xor    eax,eax
   14003dd5d:	jmp    0x14003e1f8
   14003dd62:	mov    edi,0x2
   14003dd67:	jmp    0x14003dd75
   14003dd69:	mov    edi,0x2
   14003dd6e:	jmp    0x14003dd75
   14003dd70:	mov    edi,0x2
   14003dd75:	xor    r14d,r14d
   14003dd78:	mov    rcx,QWORD PTR [r15]
   14003dd7b:	call   0x1400256f0
   14003dd80:	mov    r15,rax
   14003dd83:	and    DWORD PTR [rsp+0xa8],r14d
   14003dd8b:	mov    ecx,r12d
   14003dd8e:	sub    ecx,0x100
   14003dd94:	je     0x14003de56
   14003dd9a:	sub    ecx,edi
   14003dd9c:	je     0x14003ddd4
   14003dd9e:	cmp    ecx,0x4
   14003dda1:	jne    0x14003e11a
   14003dda7:	test   r13,r13
   14003ddaa:	jne    0x14003ddbf
   14003ddac:	lea    ecx,[r14+0x12]
   14003ddb0:	call   QWORD PTR [rip+0x26cea]        # 0x140064aa0
   14003ddb6:	test   ax,ax
   14003ddb9:	jns    0x14003e156
   14003ddbf:	mov    rdx,QWORD PTR [rsp+0xa0]
   14003ddc7:	cmp    WORD PTR [rdx+0x10],0x20
   14003ddcc:	je     0x14003e14c
   14003ddd2:	jmp    0x14003dddc
   14003ddd4:	mov    rdx,QWORD PTR [rsp+0xa0]
   14003dddc:	mov    rcx,r15
   14003dddf:	call   0x14003d19c
   14003dde4:	cmp    r12d,0x102
   14003ddeb:	jne    0x14003ddf5
   14003dded:	test   al,0x84
   14003ddef:	jne    0x14003e142
   14003ddf5:	mov    r12,QWORD PTR [rsp+0xa0]
   14003ddfd:	cmp    WORD PTR [r12+0x10],0x9
   14003de04:	jne    0x14003de0f
   14003de06:	test   dil,al
   14003de09:	jne    0x14003e15e
   14003de0f:	cmp    WORD PTR [r12+0x10],0x20
   14003de16:	jne    0x14003de1f
   14003de18:	xor    eax,eax
   14003de1a:	jmp    0x14003e1f8
   14003de1f:	mov    r8,r12
   14003de22:	mov    rdx,r15
   14003de25:	mov    rcx,rsi
   14003de28:	call   0x14003dac4
   14003de2d:	test   rax,rax
   14003de30:	je     0x14003e15e
   14003de36:	mov    rcx,QWORD PTR [rax+0x8]
   14003de3a:	test   rcx,rcx
   14003de3d:	je     0x14003e15e
   14003de43:	mov    rdx,r12
   14003de46:	call   0x140033c38
   14003de4b:	mov    r14d,0x1
   14003de51:	jmp    0x14003e1a2
   14003de56:	mov    r12,QWORD PTR [rsp+0xa0]
   14003de5e:	mov    rdx,r12
   14003de61:	mov    rcx,rax
   14003de64:	call   0x14003d19c
   14003de69:	movzx  ecx,WORD PTR [r12+0x10]
   14003de6f:	cmp    ecx,0x3
   14003de72:	je     0x14003e0a2
   14003de78:	cmp    ecx,0x9
   14003de7b:	je     0x14003dfef
   14003de81:	cmp    ecx,0xd
   14003de84:	je     0x14003dfb1
   14003de8a:	cmp    ecx,0x1b
   14003de8d:	je     0x14003e0a2
   14003de93:	cmp    ecx,0x24
   14003de96:	jle    0x14003e15e
   14003de9c:	cmp    ecx,0x26
   14003de9f:	jle    0x14003deb4
   14003dea1:	cmp    ecx,0x28
   14003dea4:	jle    0x14003debc
   14003dea6:	cmp    ecx,0x2b
   14003dea9:	je     0x14003dfb1
   14003deaf:	jmp    0x14003e15e
   14003deb4:	mov    r15d,0x1
   14003deba:	jmp    0x14003dec4
   14003debc:	mov    r15d,DWORD PTR [rsp+0xa8]
   14003dec4:	mov    rdx,r12
   14003dec7:	mov    rcx,r13
   14003deca:	call   0x14003d19c
   14003decf:	test   al,0x1
   14003ded1:	jne    0x14003e15e
   14003ded7:	test   r15d,r15d
   14003deda:	je     0x14003deeb
   14003dedc:	xor    edx,edx
   14003dede:	mov    rcx,rsi
   14003dee1:	call   0x14002a550
   14003dee6:	mov    rdi,rax
   14003dee9:	jmp    0x14003def8
   14003deeb:	xor    edx,edx
   14003deed:	mov    rcx,rsi
   14003def0:	call   0x14002a5b4
   14003def5:	mov    rdi,rax
   14003def8:	test   rdi,rdi
   14003defb:	je     0x14003e15e
   14003df01:	cmp    DWORD PTR [rdi+0x10],r14d
   14003df05:	je     0x14003df12
   14003df07:	mov    rdx,rdi
   14003df0a:	mov    rcx,rsi
   14003df0d:	call   0x140029fb0
   14003df12:	cmp    QWORD PTR [rdi+0x8],r14
   14003df16:	je     0x14003df33
   14003df18:	mov    rcx,QWORD PTR [rdi+0x8]
   14003df1c:	mov    rax,QWORD PTR [rcx]
   14003df1f:	mov    rdx,r12
   14003df22:	call   QWORD PTR [rax+0x158]
   14003df28:	mov    r14d,0x1
   14003df2e:	jmp    0x14003e1a2
   14003df33:	cmp    QWORD PTR [rdi],r14
   14003df36:	je     0x14003df45
   14003df38:	mov    rcx,QWORD PTR [rdi]
   14003df3b:	call   0x1400256f0
   14003df40:	mov    r12,rax
   14003df43:	jmp    0x14003df6a
   14003df45:	test   r13,r13
   14003df48:	jne    0x14003df4e
   14003df4a:	xor    edx,edx
   14003df4c:	jmp    0x14003df52
   14003df4e:	mov    rdx,QWORD PTR [r13+0x40]
   14003df52:	mov    r8d,r15d
   14003df55:	mov    rcx,QWORD PTR [rsi+0x40]
   14003df59:	call   QWORD PTR [rip+0x26b01]        # 0x140064a60
   14003df5f:	mov    rcx,rax
   14003df62:	call   0x1400256f0
   14003df67:	mov    r12,rax
   14003df6a:	test   r12,r12
   14003df6d:	je     0x14003e138
   14003df73:	mov    rax,QWORD PTR [rsi+0x98]
   14003df7a:	and    QWORD PTR [rax+0xd8],r14
   14003df81:	mov    rcx,r12
   14003df84:	call   0x14003d284
   14003df89:	cmp    DWORD PTR [rdi+0x10],r14d
   14003df8d:	je     0x14003dfa6
   14003df8f:	xor    r9d,r9d
   14003df92:	mov    edx,0xf1
   14003df97:	lea    r8d,[r9+0x1]
   14003df9b:	mov    rcx,QWORD PTR [r12+0x40]
   14003dfa0:	call   QWORD PTR [rip+0x26bca]        # 0x140064b70
   14003dfa6:	mov    r14d,0x1
   14003dfac:	jmp    0x14003e1a2
   14003dfb1:	test   al,0x4
   14003dfb3:	jne    0x14003e15e
   14003dfb9:	mov    rcx,r13
   14003dfbc:	call   0x14003d244
   14003dfc1:	test   al,0x10
   14003dfc3:	je     0x14003dfe0
   14003dfc5:	mov    r12,r13
   14003dfc8:	mov    rcx,r13
   14003dfcb:	call   0x140029a94
   14003dfd0:	mov    edi,eax
   14003dfd2:	test   r13,r13
   14003dfd5:	jne    0x14003e0b4
   14003dfdb:	jmp    0x14003e0a2
   14003dfe0:	mov    rcx,rsi
   14003dfe3:	call   0x14003d740
   14003dfe8:	mov    edi,eax
   14003dfea:	jmp    0x14003e0a2
   14003dfef:	test   dil,al
   14003dff2:	jne    0x14003e15e
   14003dff8:	mov    ecx,0x10
   14003dffd:	call   QWORD PTR [rip+0x26a9d]        # 0x140064aa0
   14003e003:	xor    edi,edi
   14003e005:	test   ax,ax
   14003e008:	sets   dil
   14003e00c:	mov    r8d,edi
   14003e00f:	xor    edx,edx
   14003e011:	mov    rcx,rsi
   14003e014:	call   0x140029e0c
   14003e019:	test   rax,rax
   14003e01c:	je     0x14003e15e
   14003e022:	cmp    QWORD PTR [rax+0x8],r14
   14003e026:	je     0x14003e03a
   14003e028:	mov    rcx,QWORD PTR [rax+0x8]
   14003e02c:	mov    rax,QWORD PTR [rcx]
   14003e02f:	mov    rdx,r12
   14003e032:	call   QWORD PTR [rax+0x158]
   14003e038:	jmp    0x14003e097
   14003e03a:	cmp    QWORD PTR [rax],r14
   14003e03d:	je     0x14003e04c
   14003e03f:	mov    rcx,QWORD PTR [rax]
   14003e042:	call   0x1400256f0
   14003e047:	mov    rdi,rax
   14003e04a:	jmp    0x14003e071
   14003e04c:	test   r15,r15
   14003e04f:	jne    0x14003e055
   14003e051:	xor    edx,edx
   14003e053:	jmp    0x14003e059
   14003e055:	mov    rdx,QWORD PTR [r15+0x40]
   14003e059:	mov    r8d,edi
   14003e05c:	mov    rcx,QWORD PTR [rsi+0x40]
   14003e060:	call   QWORD PTR [rip+0x26982]        # 0x1400649e8
   14003e066:	mov    rcx,rax
   14003e069:	call   0x1400256f0
   14003e06e:	mov    rdi,rax
   14003e071:	test   rdi,rdi
   14003e074:	je     0x14003e097
   14003e076:	mov    rax,QWORD PTR [rsi+0x98]
   14003e07d:	and    QWORD PTR [rax+0xd8],r14
   14003e084:	mov    rcx,rdi
   14003e087:	call   0x14003d284
   14003e08c:	mov    rdx,rdi
   14003e08f:	mov    rcx,r13
   14003e092:	call   0x14003d4f4
   14003e097:	mov    r14d,0x1
   14003e09d:	jmp    0x14003e1a2
   14003e0a2:	mov    edx,edi
   14003e0a4:	mov    rcx,rsi
   14003e0a7:	call   0x14003d5b4
   14003e0ac:	mov    r12,rax
   14003e0af:	test   rax,rax
   14003e0b2:	je     0x14003e12e
   14003e0b4:	mov    rcx,r12
   14003e0b7:	call   0x140029b3c
   14003e0bc:	test   eax,eax
   14003e0be:	jne    0x14003e0d5
   14003e0c0:	xor    ecx,ecx
   14003e0c2:	call   QWORD PTR [rip+0x26990]        # 0x140064a58
   14003e0c8:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e0d0:	jmp    0x14003e15e
   14003e0d5:	cmp    QWORD PTR [r12+0xa0],r14
   14003e0dd:	je     0x14003e124
   14003e0df:	and    QWORD PTR [rsp+0x28],0x0
   14003e0e5:	and    QWORD PTR [rsp+0x20],0x0
   14003e0eb:	xor    r9d,r9d
   14003e0ee:	mov    edx,0xfffffdd9
   14003e0f3:	lea    r8d,[r9+0x1]
   14003e0f7:	mov    rcx,r12
   14003e0fa:	call   0x140029bd4
   14003e0ff:	nop
   14003e100:	jmp    0x14003e10f
   14003e102:	mov    rsi,QWORD PTR [rsp+0x98]
   14003e10a:	mov    r13,QWORD PTR [rsp+0x38]
   14003e10f:	mov    r14d,0x1
   14003e115:	jmp    0x14003e1a2
   14003e11a:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e122:	jmp    0x14003e15e
   14003e124:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e12c:	jmp    0x14003e15e
   14003e12e:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e136:	jmp    0x14003e15e
   14003e138:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e140:	jmp    0x14003e15e
   14003e142:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e14a:	jmp    0x14003e15e
   14003e14c:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e154:	jmp    0x14003e15e
   14003e156:	mov    r12,QWORD PTR [rsp+0xa0]
   14003e15e:	bt     DWORD PTR [rsi+0x78],0xc
   14003e163:	jb     0x14003e1a2
   14003e165:	mov    rdx,r12
   14003e168:	mov    rcx,QWORD PTR [rsi+0x40]
   14003e16c:	call   QWORD PTR [rip+0x266b6]        # 0x140064828
   14003e172:	mov    r14d,eax
   14003e175:	test   eax,eax
   14003e177:	je     0x14003e1a2
   14003e179:	call   QWORD PTR [rip+0x26959]        # 0x140064ad8
   14003e17f:	mov    rcx,rax
   14003e182:	call   0x1400256f0
   14003e187:	cmp    rax,r13
   14003e18a:	je     0x14003e1a2
   14003e18c:	call   QWORD PTR [rip+0x26946]        # 0x140064ad8
   14003e192:	mov    rcx,rax
   14003e195:	call   0x1400256f0
   14003e19a:	mov    rcx,rax
   14003e19d:	call   0x14003d454
   14003e1a2:	mov    rcx,QWORD PTR [rsp+0x40]
   14003e1a7:	call   QWORD PTR [rip+0x2682b]        # 0x1400649d8
   14003e1ad:	test   eax,eax
   14003e1af:	je     0x14003e1f5
   14003e1b1:	call   QWORD PTR [rip+0x26921]        # 0x140064ad8
   14003e1b7:	mov    rcx,rax
   14003e1ba:	call   0x1400256f0
   14003e1bf:	mov    rdx,rax
   14003e1c2:	mov    rcx,r13
   14003e1c5:	call   0x14003d4f4
   14003e1ca:	mov    rcx,QWORD PTR [rsp+0x30]
   14003e1cf:	call   QWORD PTR [rip+0x26803]        # 0x1400649d8
   14003e1d5:	test   eax,eax
   14003e1d7:	je     0x14003e1f5
   14003e1d9:	call   QWORD PTR [rip+0x268f9]        # 0x140064ad8
   14003e1df:	mov    rcx,rax
   14003e1e2:	call   0x1400256f0
   14003e1e7:	mov    r8,rax
   14003e1ea:	mov    rdx,r13
   14003e1ed:	mov    rcx,rsi
   14003e1f0:	call   0x14003d778
   14003e1f5:	mov    eax,r14d
   14003e1f8:	mov    rsi,QWORD PTR [rsp+0x90]
   14003e200:	add    rsp,0x60
   14003e204:	pop    r15
   14003e206:	pop    r14
   14003e208:	pop    r13
   14003e20a:	pop    r12
   14003e20c:	pop    rdi
   14003e20d:	ret    
   14003e20e:	int3   
   14003e20f:	int3   
   14003e210:	int3   
   14003e211:	int3   
   14003e212:	int3   
   14003e213:	int3   
   14003e214:	int3   
   14003e215:	int3   
   14003e216:	int3   
   14003e217:	int3   
   14003e218:	mov    QWORD PTR [rsp+0x10],rdx
   14003e21d:	push   rbp
   14003e21e:	sub    rsp,0x30
   14003e222:	mov    rbp,rdx
   14003e225:	mov    rcx,QWORD PTR [rbp+0x50]
   14003e229:	call   0x1400207b8
   14003e22e:	nop
   14003e22f:	lea    rax,[rip+0xfffffffffffffecc]        # 0x14003e102
   14003e236:	jmp    0x14003e238
   14003e238:	add    rsp,0x30
   14003e23c:	pop    rbp
   14003e23d:	ret    
   14003e23e:	int3   
   14003e23f:	int3   
   14003e240:	mov    rax,rsp
   14003e243:	mov    QWORD PTR [rax+0x8],rcx
   14003e247:	push   rdi
   14003e248:	sub    rsp,0x30
   14003e24c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003e255:	mov    QWORD PTR [rax+0x10],rbx
   14003e259:	mov    QWORD PTR [rax+0x18],rbp
   14003e25d:	mov    QWORD PTR [rax+0x20],rsi
   14003e261:	mov    esi,r9d
   14003e264:	mov    edi,r8d
   14003e267:	mov    rbp,rdx
   14003e26a:	mov    rbx,rcx
   14003e26d:	call   0x14002e6c0
   14003e272:	nop
   14003e273:	lea    rax,[rip+0x2e9be]        # 0x14006cc38
   14003e27a:	mov    QWORD PTR [rbx],rax
   14003e27d:	test   rbp,rbp
   14003e280:	jne    0x14003e28c
   14003e282:	test   edi,edi
   14003e284:	je     0x14003e28c
   14003e286:	call   0x1400208f8
   14003e28b:	int3   
   14003e28c:	mov    QWORD PTR [rbx+0x20],rsi
   14003e290:	and    QWORD PTR [rbx+0x28],0x0
   14003e295:	mov    QWORD PTR [rbx+0x30],rdi
   14003e299:	xor    eax,eax
   14003e29b:	test   esi,esi
   14003e29d:	cmove  eax,edi
   14003e2a0:	mov    QWORD PTR [rbx+0x38],rax
   14003e2a4:	mov    QWORD PTR [rbx+0x40],rbp
   14003e2a8:	and    DWORD PTR [rbx+0x48],0x0
   14003e2ac:	mov    rax,rbx
   14003e2af:	mov    rbx,QWORD PTR [rsp+0x48]
   14003e2b4:	mov    rbp,QWORD PTR [rsp+0x50]
   14003e2b9:	mov    rsi,QWORD PTR [rsp+0x58]
   14003e2be:	add    rsp,0x30
   14003e2c2:	pop    rdi
   14003e2c3:	ret    
   14003e2c4:	int3   
   14003e2c5:	int3   
   14003e2c6:	int3   
   14003e2c7:	int3   
   14003e2c8:	int3   
   14003e2c9:	int3   
   14003e2ca:	int3   
   14003e2cb:	int3   
   14003e2cc:	int3   
   14003e2cd:	int3   
   14003e2ce:	int3   
   14003e2cf:	int3   
   14003e2d0:	rex push rbp
   14003e2d2:	sub    rsp,0x20
   14003e2d6:	mov    rbp,rdx
   14003e2d9:	mov    rcx,QWORD PTR [rbp+0x40]
   14003e2dd:	call   0x14002e92c
   14003e2e2:	add    rsp,0x20
   14003e2e6:	pop    rbp
   14003e2e7:	ret    
   14003e2e8:	mov    rcx,rdx
   14003e2eb:	jmp    0x1400480c0
   14003e2f0:	mov    rcx,rdx
   14003e2f3:	mov    rdx,r8
   14003e2f6:	jmp    0x140048e90
   14003e2fb:	int3   
   14003e2fc:	mov    rax,QWORD PTR [rcx+0x28]
   14003e300:	ret    
   14003e301:	int3   
   14003e302:	int3   
   14003e303:	int3   
   14003e304:	mov    QWORD PTR [rsp+0x8],rbx
   14003e309:	push   rdi
   14003e30a:	sub    rsp,0x20
   14003e30e:	mov    rbx,QWORD PTR [rcx+0x30]
   14003e312:	mov    rdi,rcx
   14003e315:	cmp    rdx,rbx
   14003e318:	jbe    0x14003e363
   14003e31a:	cmp    QWORD PTR [rcx+0x20],0x0
   14003e31f:	jne    0x14003e32b
   14003e321:	call   0x1400208b0
   14003e326:	int3   
   14003e327:	add    rbx,QWORD PTR [rcx+0x20]
   14003e32b:	cmp    rbx,rdx
   14003e32e:	jb     0x14003e327
   14003e330:	mov    rdx,QWORD PTR [rcx+0x40]
   14003e334:	mov    rax,QWORD PTR [rcx]
   14003e337:	test   rdx,rdx
   14003e33a:	jne    0x14003e347
   14003e33c:	mov    rdx,rbx
   14003e33f:	call   QWORD PTR [rax+0xa8]
   14003e345:	jmp    0x14003e350
   14003e347:	mov    r8,rbx
   14003e34a:	call   QWORD PTR [rax+0xb0]
   14003e350:	test   rax,rax
   14003e353:	jne    0x14003e35b
   14003e355:	call   0x1400208b0
   14003e35a:	int3   
   14003e35b:	mov    QWORD PTR [rdi+0x40],rax
   14003e35f:	mov    QWORD PTR [rdi+0x30],rbx
   14003e363:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e368:	add    rsp,0x20
   14003e36c:	pop    rdi
   14003e36d:	ret    
   14003e36e:	int3   
   14003e36f:	int3   
   14003e370:	mov    rax,QWORD PTR [rcx+0x38]
   14003e374:	ret    
   14003e375:	int3   
   14003e376:	int3   
   14003e377:	int3   
   14003e378:	mov    QWORD PTR [rsp+0x8],rbx
   14003e37d:	push   rdi
   14003e37e:	sub    rsp,0x20
   14003e382:	mov    eax,0xffffffff
   14003e387:	mov    rbx,rdx
   14003e38a:	mov    rdi,rcx
   14003e38d:	cmp    rdx,rax
   14003e390:	jbe    0x14003e398
   14003e392:	call   0x1400208b0
   14003e397:	int3   
   14003e398:	cmp    rdx,QWORD PTR [rcx+0x30]
   14003e39c:	jbe    0x14003e3a7
   14003e39e:	mov    rax,QWORD PTR [rcx]
   14003e3a1:	call   QWORD PTR [rax+0xc8]
   14003e3a7:	cmp    rbx,QWORD PTR [rdi+0x28]
   14003e3ab:	jae    0x14003e3b1
   14003e3ad:	mov    QWORD PTR [rdi+0x28],rbx
   14003e3b1:	mov    QWORD PTR [rdi+0x38],rbx
   14003e3b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e3ba:	add    rsp,0x20
   14003e3be:	pop    rdi
   14003e3bf:	ret    
   14003e3c0:	mov    QWORD PTR [rsp+0x8],rbx
   14003e3c5:	mov    QWORD PTR [rsp+0x10],rsi
   14003e3ca:	push   rdi
   14003e3cb:	sub    rsp,0x20
   14003e3cf:	test   r8d,r8d
   14003e3d2:	mov    edi,r8d
   14003e3d5:	mov    r11,rdx
   14003e3d8:	mov    rsi,rcx
   14003e3db:	jne    0x14003e3e1
   14003e3dd:	xor    eax,eax
   14003e3df:	jmp    0x14003e42d
   14003e3e1:	test   rdx,rdx
   14003e3e4:	jne    0x14003e3ec
   14003e3e6:	call   0x1400208f8
   14003e3eb:	int3   
   14003e3ec:	mov    rdx,QWORD PTR [rcx+0x28]
   14003e3f0:	cmp    rdx,QWORD PTR [rcx+0x38]
   14003e3f4:	ja     0x14003e3dd
   14003e3f6:	lea    rcx,[rdx+rdi*1]
   14003e3fa:	cmp    rcx,QWORD PTR [rsi+0x38]
   14003e3fe:	ja     0x14003e405
   14003e400:	cmp    rcx,rdx
   14003e403:	jae    0x14003e40a
   14003e405:	mov    edi,DWORD PTR [rsi+0x38]
   14003e408:	sub    edi,edx
   14003e40a:	mov    rcx,QWORD PTR [rsi+0x40]
   14003e40e:	mov    r10,QWORD PTR [rsi]
   14003e411:	mov    r9d,edi
   14003e414:	lea    r8,[rdx+rcx*1]
   14003e418:	mov    rdx,r11
   14003e41b:	mov    rcx,rsi
   14003e41e:	mov    ebx,edi
   14003e420:	call   QWORD PTR [r10+0xb8]
   14003e427:	add    QWORD PTR [rsi+0x28],rbx
   14003e42b:	mov    eax,edi
   14003e42d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e432:	mov    rsi,QWORD PTR [rsp+0x38]
   14003e437:	add    rsp,0x20
   14003e43b:	pop    rdi
   14003e43c:	ret    
   14003e43d:	int3   
   14003e43e:	int3   
   14003e43f:	int3   
   14003e440:	test   r8d,r8d
   14003e443:	je     0x14003e4de
   14003e449:	mov    QWORD PTR [rsp+0x8],rbx
   14003e44e:	mov    QWORD PTR [rsp+0x10],rsi
   14003e453:	push   rdi
   14003e454:	sub    rsp,0x20
   14003e458:	test   rdx,rdx
   14003e45b:	mov    rsi,rdx
   14003e45e:	mov    rbx,rcx
   14003e461:	jne    0x14003e469
   14003e463:	call   0x1400208f8
   14003e468:	int3   
   14003e469:	mov    rax,QWORD PTR [rcx+0x28]
   14003e46d:	mov    edi,r8d
   14003e470:	lea    rdx,[rax+rdi*1]
   14003e474:	cmp    rdx,rax
   14003e477:	jae    0x14003e47f
   14003e479:	call   0x1400208f8
   14003e47e:	int3   
   14003e47f:	cmp    rdx,QWORD PTR [rcx+0x30]
   14003e483:	jbe    0x14003e48e
   14003e485:	mov    rax,QWORD PTR [rcx]
   14003e488:	call   QWORD PTR [rax+0xc8]
   14003e48e:	mov    rcx,QWORD PTR [rbx+0x28]
   14003e492:	lea    rax,[rcx+rdi*1]
   14003e496:	cmp    rax,QWORD PTR [rbx+0x30]
   14003e49a:	jbe    0x14003e4a2
   14003e49c:	call   0x1400208f8
   14003e4a1:	int3   
   14003e4a2:	mov    rax,QWORD PTR [rbx+0x40]
   14003e4a6:	mov    r10,QWORD PTR [rbx]
   14003e4a9:	mov    r9,rdi
   14003e4ac:	lea    rdx,[rcx+rax*1]
   14003e4b0:	mov    r8,rsi
   14003e4b3:	mov    rcx,rbx
   14003e4b6:	call   QWORD PTR [r10+0xb8]
   14003e4bd:	add    QWORD PTR [rbx+0x28],rdi
   14003e4c1:	mov    rax,QWORD PTR [rbx+0x28]
   14003e4c5:	cmp    rax,QWORD PTR [rbx+0x38]
   14003e4c9:	jbe    0x14003e4cf
   14003e4cb:	mov    QWORD PTR [rbx+0x38],rax
   14003e4cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e4d4:	mov    rsi,QWORD PTR [rsp+0x38]
   14003e4d9:	add    rsp,0x20
   14003e4dd:	pop    rdi
   14003e4de:	ret    
   14003e4df:	int3   
   14003e4e0:	mov    QWORD PTR [rsp+0x8],rbx
   14003e4e5:	push   rdi
   14003e4e6:	sub    rsp,0x20
   14003e4ea:	test   r8d,r8d
   14003e4ed:	mov    rbx,QWORD PTR [rcx+0x28]
   14003e4f1:	mov    rdi,rcx
   14003e4f4:	jne    0x14003e4fb
   14003e4f6:	mov    rbx,rdx
   14003e4f9:	jmp    0x14003e528
   14003e4fb:	cmp    r8d,0x1
   14003e4ff:	jne    0x14003e506
   14003e501:	add    rbx,rdx
   14003e504:	jmp    0x14003e528
   14003e506:	cmp    r8d,0x2
   14003e50a:	jne    0x14003e558
   14003e50c:	test   rdx,rdx
   14003e50f:	jle    0x14003e520
   14003e511:	or     edx,0xffffffff
   14003e514:	xor    r8d,r8d
   14003e517:	lea    ecx,[rdx+0xa]
   14003e51a:	call   0x140040388
   14003e51f:	int3   
   14003e520:	mov    rax,QWORD PTR [rcx+0x38]
   14003e524:	lea    rbx,[rdx+rax*1]
   14003e528:	test   rbx,rbx
   14003e52b:	jns    0x14003e53c
   14003e52d:	or     edx,0xffffffff
   14003e530:	xor    r8d,r8d
   14003e533:	lea    ecx,[rdx+0xa]
   14003e536:	call   0x140040388
   14003e53b:	int3   
   14003e53c:	mov    ecx,ebx
   14003e53e:	cmp    rcx,QWORD PTR [rdi+0x38]
   14003e542:	jbe    0x14003e554
   14003e544:	mov    r8,QWORD PTR [rdi]
   14003e547:	mov    rdx,rbx
   14003e54a:	mov    rcx,rdi
   14003e54d:	call   QWORD PTR [r8+0xc8]
   14003e554:	mov    QWORD PTR [rdi+0x28],rbx
   14003e558:	mov    rax,rbx
   14003e55b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e560:	add    rsp,0x20
   14003e564:	pop    rdi
   14003e565:	ret    
   14003e566:	int3   
   14003e567:	int3   
   14003e568:	rex push rbx
   14003e56a:	sub    rsp,0x20
   14003e56e:	mov    rdx,QWORD PTR [rcx+0x40]
   14003e572:	and    QWORD PTR [rcx+0x20],0x0
   14003e577:	and    QWORD PTR [rcx+0x28],0x0
   14003e57c:	and    QWORD PTR [rcx+0x30],0x0
   14003e581:	and    QWORD PTR [rcx+0x38],0x0
   14003e586:	test   rdx,rdx
   14003e589:	mov    rbx,rcx
   14003e58c:	je     0x14003e59d
   14003e58e:	cmp    DWORD PTR [rcx+0x48],0x0
   14003e592:	je     0x14003e59d
   14003e594:	mov    rax,QWORD PTR [rcx]
   14003e597:	call   QWORD PTR [rax+0xc0]
   14003e59d:	and    QWORD PTR [rbx+0x40],0x0
   14003e5a2:	add    rsp,0x20
   14003e5a6:	pop    rbx
   14003e5a7:	ret    
   14003e5a8:	mov    rax,QWORD PTR [rcx]
   14003e5ab:	rex.W jmp QWORD PTR [rax+0x98]
   14003e5b2:	int3   
   14003e5b3:	int3   
   14003e5b4:	sub    rsp,0x28
   14003e5b8:	call   0x1400208d4
   14003e5bd:	int3   
   14003e5be:	int3   
   14003e5bf:	int3   
   14003e5c0:	sub    rsp,0x28
   14003e5c4:	call   0x1400208d4
   14003e5c9:	int3   
   14003e5ca:	int3   
   14003e5cb:	int3   
   14003e5cc:	sub    rsp,0x28
   14003e5d0:	call   0x1400208d4
   14003e5d5:	int3   
   14003e5d6:	int3   
   14003e5d7:	int3   
   14003e5d8:	mov    rax,rsp
   14003e5db:	mov    QWORD PTR [rax+0x8],rbx
   14003e5df:	mov    QWORD PTR [rax+0x10],rbp
   14003e5e3:	mov    QWORD PTR [rax+0x18],rsi
   14003e5e7:	mov    QWORD PTR [rax+0x20],rdi
   14003e5eb:	push   r12
   14003e5ed:	sub    rsp,0x20
   14003e5f1:	cmp    edx,0x3
   14003e5f4:	mov    rbp,r9
   14003e5f7:	mov    edi,r8d
   14003e5fa:	mov    esi,edx
   14003e5fc:	mov    rbx,rcx
   14003e5ff:	jne    0x14003e60f
   14003e601:	xor    eax,eax
   14003e603:	cmp    QWORD PTR [rcx+0x20],rax
   14003e607:	seta   al
   14003e60a:	jmp    0x14003e6d5
   14003e60f:	cmp    edx,0x2
   14003e612:	jne    0x14003e62d
   14003e614:	add    QWORD PTR [rcx+0x28],rdi
   14003e618:	mov    rax,QWORD PTR [rcx+0x28]
   14003e61c:	cmp    rax,QWORD PTR [rcx+0x38]
   14003e620:	jbe    0x14003e626
   14003e622:	mov    QWORD PTR [rcx+0x38],rax
   14003e626:	xor    eax,eax
   14003e628:	jmp    0x14003e6d5
   14003e62d:	xor    eax,eax
   14003e62f:	cmp    r9,rax
   14003e632:	je     0x14003e6d5
   14003e638:	mov    r12,QWORD PTR [rsp+0x50]
   14003e63d:	cmp    r12,rax
   14003e640:	je     0x14003e6d5
   14003e646:	cmp    edx,0x1
   14003e649:	jne    0x14003e66c
   14003e64b:	mov    rax,QWORD PTR [rcx+0x28]
   14003e64f:	lea    rdx,[rax+rdi*1]
   14003e653:	cmp    rdx,rax
   14003e656:	jb     0x14003e69b
   14003e658:	cmp    rdx,rdi
   14003e65b:	jb     0x14003e69b
   14003e65d:	cmp    rdx,QWORD PTR [rcx+0x30]
   14003e661:	jbe    0x14003e66c
   14003e663:	mov    rax,QWORD PTR [rcx]
   14003e666:	call   QWORD PTR [rax+0xc8]
   14003e66c:	mov    rax,QWORD PTR [rbx+0x28]
   14003e670:	add    rax,QWORD PTR [rbx+0x40]
   14003e674:	cmp    esi,0x1
   14003e677:	mov    QWORD PTR [rbp+0x0],rax
   14003e67b:	jne    0x14003e6a1
   14003e67d:	mov    rax,QWORD PTR [rbx+0x40]
   14003e681:	mov    rdx,rdi
   14003e684:	add    rdx,QWORD PTR [rbx+0x28]
   14003e688:	cmp    QWORD PTR [rbx+0x30],rdx
   14003e68c:	cmovb  rdx,QWORD PTR [rbx+0x30]
   14003e691:	lea    rcx,[rdx+rax*1]
   14003e695:	mov    QWORD PTR [r12],rcx
   14003e699:	jmp    0x14003e6ce
   14003e69b:	call   0x1400208f8
   14003e6a0:	int3   
   14003e6a1:	cmp    edi,0xffffffff
   14003e6a4:	jne    0x14003e6ac
   14003e6a6:	mov    edi,DWORD PTR [rbx+0x30]
   14003e6a9:	sub    edi,DWORD PTR [rbx+0x28]
   14003e6ac:	mov    rcx,QWORD PTR [rbx+0x40]
   14003e6b0:	mov    edx,edi
   14003e6b2:	add    rdx,QWORD PTR [rbx+0x28]
   14003e6b6:	cmp    QWORD PTR [rbx+0x38],rdx
   14003e6ba:	cmovb  rdx,QWORD PTR [rbx+0x38]
   14003e6bf:	add    rcx,rdx
   14003e6c2:	mov    QWORD PTR [r12],rcx
   14003e6c6:	sub    rcx,QWORD PTR [rbp+0x0]
   14003e6ca:	add    QWORD PTR [rbx+0x28],rcx
   14003e6ce:	mov    eax,DWORD PTR [r12]
   14003e6d2:	sub    eax,DWORD PTR [rbp+0x0]
   14003e6d5:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e6da:	mov    rbp,QWORD PTR [rsp+0x38]
   14003e6df:	mov    rsi,QWORD PTR [rsp+0x40]
   14003e6e4:	mov    rdi,QWORD PTR [rsp+0x48]
   14003e6e9:	add    rsp,0x20
   14003e6ed:	pop    r12
   14003e6ef:	ret    
   14003e6f0:	lea    rax,[rip+0x2e501]        # 0x14006cbf8
   14003e6f7:	ret    
   14003e6f8:	mov    QWORD PTR [rsp+0x8],rcx
   14003e6fd:	push   rbx
   14003e6fe:	sub    rsp,0x30
   14003e702:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003e70b:	mov    rbx,rcx
   14003e70e:	lea    rax,[rip+0x2e523]        # 0x14006cc38
   14003e715:	mov    QWORD PTR [rcx],rax
   14003e718:	cmp    QWORD PTR [rcx+0x40],0x0
   14003e71d:	je     0x14003e724
   14003e71f:	call   0x14003e568
   14003e724:	and    QWORD PTR [rbx+0x20],0x0
   14003e729:	and    QWORD PTR [rbx+0x28],0x0
   14003e72e:	and    QWORD PTR [rbx+0x30],0x0
   14003e733:	and    QWORD PTR [rbx+0x38],0x0
   14003e738:	mov    rcx,rbx
   14003e73b:	add    rsp,0x30
   14003e73f:	pop    rbx
   14003e740:	jmp    0x14002e92c
   14003e745:	int3   
   14003e746:	int3   
   14003e747:	int3   
   14003e748:	rex push rbp
   14003e74a:	sub    rsp,0x20
   14003e74e:	mov    rbp,rdx
   14003e751:	mov    rcx,QWORD PTR [rbp+0x40]
   14003e755:	call   0x14002e92c
   14003e75a:	add    rsp,0x20
   14003e75e:	pop    rbp
   14003e75f:	ret    
   14003e760:	rex push rbx
   14003e762:	sub    rsp,0x20
   14003e766:	mov    rbx,rdx
   14003e769:	mov    rax,r9
   14003e76c:	mov    rdx,rax
   14003e76f:	mov    rcx,rbx
   14003e772:	call   0x1400466d0
   14003e777:	test   eax,eax
   14003e779:	je     0x14003e7a1
   14003e77b:	cmp    eax,0xc
   14003e77e:	je     0x14003e79b
   14003e780:	cmp    eax,0x16
   14003e783:	je     0x14003e795
   14003e785:	cmp    eax,0x22
   14003e788:	je     0x14003e795
   14003e78a:	cmp    eax,0x50
   14003e78d:	je     0x14003e7a1
   14003e78f:	call   0x1400208f8
   14003e794:	int3   
   14003e795:	call   0x1400208f8
   14003e79a:	int3   
   14003e79b:	call   0x1400208b0
   14003e7a0:	int3   
   14003e7a1:	mov    rax,rbx
   14003e7a4:	add    rsp,0x20
   14003e7a8:	pop    rbx
   14003e7a9:	ret    
   14003e7aa:	int3   
   14003e7ab:	int3   
   14003e7ac:	mov    QWORD PTR [rsp+0x8],rbx
   14003e7b1:	push   rdi
   14003e7b2:	sub    rsp,0x20
   14003e7b6:	mov    ebx,edx
   14003e7b8:	mov    rdi,rcx
   14003e7bb:	call   0x14003e6f8
   14003e7c0:	test   bl,0x1
   14003e7c3:	je     0x14003e7cd
   14003e7c5:	mov    rcx,rdi
   14003e7c8:	call   0x14001ac50
   14003e7cd:	mov    rax,rdi
   14003e7d0:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e7d5:	add    rsp,0x20
   14003e7d9:	pop    rdi
   14003e7da:	ret    
   14003e7db:	int3   
   14003e7dc:	rex push rbx
   14003e7de:	sub    rsp,0x20
   14003e7e2:	mov    rbx,rcx
   14003e7e5:	mov    rcx,QWORD PTR [rcx]
   14003e7e8:	test   rcx,rcx
   14003e7eb:	je     0x14003e7f9
   14003e7ed:	mov    rax,QWORD PTR [rcx]
   14003e7f0:	call   QWORD PTR [rax+0x10]
   14003e7f3:	and    QWORD PTR [rbx],0x0
   14003e7f7:	jmp    0x14003e7fb
   14003e7f9:	xor    eax,eax
   14003e7fb:	add    rsp,0x20
   14003e7ff:	pop    rbx
   14003e800:	ret    
   14003e801:	int3   
   14003e802:	int3   
   14003e803:	int3   
   14003e804:	rex push rbx
   14003e806:	sub    rsp,0x40
   14003e80a:	mov    rax,QWORD PTR [rip+0x4855f]        # 0x140086d70
   14003e811:	xor    rax,rsp
   14003e814:	mov    QWORD PTR [rsp+0x38],rax
   14003e819:	mov    rax,QWORD PTR [rip+0x2e558]        # 0x14006cd78
   14003e820:	mov    rbx,rcx
   14003e823:	lea    rcx,[rsp+0x20]
   14003e828:	mov    QWORD PTR [rcx],rax
   14003e82b:	mov    rax,QWORD PTR [rip+0x2e54e]        # 0x14006cd80
   14003e832:	mov    QWORD PTR [rcx+0x8],rax
   14003e836:	mov    rax,QWORD PTR [rip+0x2e54b]        # 0x14006cd88
   14003e83d:	mov    QWORD PTR [rcx+0x10],rax
   14003e841:	lea    rcx,[rsp+0x20]
   14003e846:	call   QWORD PTR [rip+0x25d44]        # 0x140064590
   14003e84c:	test   rax,rax
   14003e84f:	je     0x14003e86b
   14003e851:	lea    rdx,[rip+0x2e500]        # 0x14006cd58
   14003e858:	mov    rcx,rax
   14003e85b:	call   QWORD PTR [rip+0x25d87]        # 0x1400645e8
   14003e861:	test   rax,rax
   14003e864:	je     0x14003e86b
   14003e866:	mov    rcx,rbx
   14003e869:	call   rax
   14003e86b:	mov    rcx,QWORD PTR [rsp+0x38]
   14003e870:	xor    rcx,rsp
   14003e873:	call   0x140046470
   14003e878:	add    rsp,0x40
   14003e87c:	pop    rbx
   14003e87d:	ret    
   14003e87e:	int3   
   14003e87f:	int3   
   14003e880:	mov    QWORD PTR [rsp+0x8],rbx
   14003e885:	push   rdi
   14003e886:	sub    rsp,0x20
   14003e88a:	mov    rax,QWORD PTR [rcx]
   14003e88d:	mov    rbx,rdx
   14003e890:	mov    rdi,rcx
   14003e893:	call   QWORD PTR [rax+0x88]
   14003e899:	test   rax,rax
   14003e89c:	jne    0x14003e946
   14003e8a2:	mov    rax,QWORD PTR [rdi]
   14003e8a5:	mov    rcx,rdi
   14003e8a8:	call   QWORD PTR [rax+0x70]
   14003e8ab:	mov    r8d,DWORD PTR [rbx]
   14003e8ae:	cmp    DWORD PTR [rip+0x31ba3],r8d        # 0x140070458
   14003e8b5:	mov    r11,rax
   14003e8b8:	jne    0x14003e901
   14003e8ba:	mov    ecx,DWORD PTR [rip+0x31b9c]        # 0x14007045c
   14003e8c0:	cmp    DWORD PTR [rbx+0x4],ecx
   14003e8c3:	jne    0x14003e901
   14003e8c5:	mov    ecx,DWORD PTR [rip+0x31b95]        # 0x140070460
   14003e8cb:	cmp    DWORD PTR [rbx+0x8],ecx
   14003e8ce:	jne    0x14003e901
   14003e8d0:	mov    ecx,DWORD PTR [rip+0x31b8e]        # 0x140070464
   14003e8d6:	cmp    DWORD PTR [rbx+0xc],ecx
   14003e8d9:	jne    0x14003e901
   14003e8db:	mov    rcx,QWORD PTR [r11+0x8]
   14003e8df:	jmp    0x14003e8f1
   14003e8e1:	mov    rax,QWORD PTR [rcx+0x8]
   14003e8e5:	add    rax,rdi
   14003e8e8:	cmp    DWORD PTR [rax],0x0
   14003e8eb:	jne    0x14003e946
   14003e8ed:	add    rcx,0x10
   14003e8f1:	cmp    QWORD PTR [rcx],0x0
   14003e8f5:	jne    0x14003e8e1
   14003e8f7:	mov    r11,QWORD PTR [r11]
   14003e8fa:	test   r11,r11
   14003e8fd:	je     0x14003e944
   14003e8ff:	jmp    0x14003e8db
   14003e901:	mov    rdx,QWORD PTR [r11+0x8]
   14003e905:	jmp    0x14003e934
   14003e907:	cmp    DWORD PTR [rcx],r8d
   14003e90a:	jne    0x14003e930
   14003e90c:	mov    eax,DWORD PTR [rbx+0x4]
   14003e90f:	cmp    DWORD PTR [rcx+0x4],eax
   14003e912:	jne    0x14003e930
   14003e914:	mov    eax,DWORD PTR [rbx+0x8]
   14003e917:	cmp    DWORD PTR [rcx+0x8],eax
   14003e91a:	jne    0x14003e930
   14003e91c:	mov    eax,DWORD PTR [rbx+0xc]
   14003e91f:	cmp    DWORD PTR [rcx+0xc],eax
   14003e922:	jne    0x14003e930
   14003e924:	mov    rax,QWORD PTR [rdx+0x8]
   14003e928:	add    rax,rdi
   14003e92b:	cmp    DWORD PTR [rax],0x0
   14003e92e:	jne    0x14003e946
   14003e930:	add    rdx,0x10
   14003e934:	mov    rcx,QWORD PTR [rdx]
   14003e937:	test   rcx,rcx
   14003e93a:	jne    0x14003e907
   14003e93c:	mov    r11,QWORD PTR [r11]
   14003e93f:	test   r11,r11
   14003e942:	jne    0x14003e901
   14003e944:	xor    eax,eax
   14003e946:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e94b:	add    rsp,0x20
   14003e94f:	pop    rdi
   14003e950:	ret    
   14003e951:	int3   
   14003e952:	int3   
   14003e953:	int3   
   14003e954:	mov    QWORD PTR [rsp+0x10],rbx
   14003e959:	mov    QWORD PTR [rsp+0x18],rbp
   14003e95e:	mov    QWORD PTR [rsp+0x20],rsi
   14003e963:	push   rdi
   14003e964:	sub    rsp,0x20
   14003e968:	mov    rax,QWORD PTR [rcx]
   14003e96b:	mov    rbp,rdx
   14003e96e:	mov    rsi,rcx
   14003e971:	call   QWORD PTR [rax+0x70]
   14003e974:	mov    rdi,rax
   14003e977:	mov    r8,QWORD PTR [rdi+0x8]
   14003e97b:	jmp    0x14003e981
   14003e97d:	add    r8,0x10
   14003e981:	cmp    QWORD PTR [r8],0x0
   14003e985:	jne    0x14003e97d
   14003e987:	lea    rbx,[r8+0x8]
   14003e98b:	jmp    0x14003e9be
   14003e98d:	mov    rax,QWORD PTR [rbx]
   14003e990:	mov    rcx,QWORD PTR [rsi+rax*1]
   14003e994:	test   rcx,rcx
   14003e997:	je     0x14003e9ba
   14003e999:	mov    rax,QWORD PTR [rcx]
   14003e99c:	and    QWORD PTR [rsp+0x30],0x0
   14003e9a2:	lea    r8,[rsp+0x30]
   14003e9a7:	mov    rdx,rbp
   14003e9aa:	call   QWORD PTR [rax]
   14003e9ac:	test   eax,eax
   14003e9ae:	jne    0x14003e9ba
   14003e9b0:	mov    rax,QWORD PTR [rsp+0x30]
   14003e9b5:	test   rax,rax
   14003e9b8:	jne    0x14003e9ce
   14003e9ba:	add    rbx,0x10
   14003e9be:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14003e9c2:	jne    0x14003e98d
   14003e9c4:	mov    rdi,QWORD PTR [rdi]
   14003e9c7:	test   rdi,rdi
   14003e9ca:	jne    0x14003e977
   14003e9cc:	xor    eax,eax
   14003e9ce:	mov    rbx,QWORD PTR [rsp+0x38]
   14003e9d3:	mov    rbp,QWORD PTR [rsp+0x40]
   14003e9d8:	mov    rsi,QWORD PTR [rsp+0x48]
   14003e9dd:	add    rsp,0x20
   14003e9e1:	pop    rdi
   14003e9e2:	ret    
   14003e9e3:	int3   
   14003e9e4:	sub    rsp,0x28
   14003e9e8:	cmp    QWORD PTR [rcx+0x10],0x0
   14003e9ed:	je     0x14003e9fb
   14003e9ef:	mov    rcx,QWORD PTR [rcx+0x10]
   14003e9f3:	mov    rax,QWORD PTR [rcx]
   14003e9f6:	call   QWORD PTR [rax+0x8]
   14003e9f9:	jmp    0x14003ea08
   14003e9fb:	mov    eax,0x1
   14003ea00:	lock xadd DWORD PTR [rcx+0x8],eax
   14003ea05:	add    eax,0x1
   14003ea08:	add    rsp,0x28
   14003ea0c:	ret    
   14003ea0d:	int3   
   14003ea0e:	int3   
   14003ea0f:	int3   
   14003ea10:	rex push rdi
   14003ea12:	sub    rsp,0x40
   14003ea16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003ea1f:	mov    QWORD PTR [rsp+0x50],rbx
   14003ea24:	mov    rbx,rcx
   14003ea27:	cmp    DWORD PTR [rcx+0x8],0x0
   14003ea2b:	jne    0x14003ea31
   14003ea2d:	xor    eax,eax
   14003ea2f:	jmp    0x14003ea6b
   14003ea31:	or     edi,0xffffffff
   14003ea34:	lock xadd DWORD PTR [rcx+0x8],edi
   14003ea39:	add    edi,0xffffffff
   14003ea3c:	jne    0x14003ea69
   14003ea3e:	mov    rdx,QWORD PTR [rcx+0x38]
   14003ea42:	lea    rcx,[rsp+0x28]
   14003ea47:	call   0x140021aec
   14003ea4c:	nop
   14003ea4d:	mov    rdx,QWORD PTR [rbx]
   14003ea50:	mov    rcx,rbx
   14003ea53:	call   QWORD PTR [rdx+0x20]
   14003ea56:	nop
   14003ea57:	cmp    DWORD PTR [rsp+0x30],edi
   14003ea5b:	je     0x14003ea69
   14003ea5d:	mov    rdx,QWORD PTR [rsp+0x28]
   14003ea62:	xor    ecx,ecx
   14003ea64:	call   0x140020cc4
   14003ea69:	mov    eax,edi
   14003ea6b:	mov    rbx,QWORD PTR [rsp+0x50]
   14003ea70:	add    rsp,0x40
   14003ea74:	pop    rdi
   14003ea75:	ret    
   14003ea76:	int3   
   14003ea77:	int3   
   14003ea78:	int3   
   14003ea79:	int3   
   14003ea7a:	int3   
   14003ea7b:	int3   
   14003ea7c:	int3   
   14003ea7d:	int3   
   14003ea7e:	int3   
   14003ea7f:	int3   
   14003ea80:	rex push rbp
   14003ea82:	sub    rsp,0x20
   14003ea86:	mov    rbp,rdx
   14003ea89:	lea    rcx,[rbp+0x28]
   14003ea8d:	call   0x1400236a8
   14003ea92:	add    rsp,0x20
   14003ea96:	pop    rbp
   14003ea97:	ret    
   14003ea98:	sub    rsp,0x28
   14003ea9c:	cmp    QWORD PTR [rcx+0x10],0x0
   14003eaa1:	je     0x14003eaaf
   14003eaa3:	mov    rcx,QWORD PTR [rcx+0x10]
   14003eaa7:	mov    rax,QWORD PTR [rcx]
   14003eaaa:	call   QWORD PTR [rax+0x10]
   14003eaad:	jmp    0x14003eab4
   14003eaaf:	call   0x14003ea10
   14003eab4:	add    rsp,0x28
   14003eab8:	ret    
   14003eab9:	int3   
   14003eaba:	int3   
   14003eabb:	int3   
   14003eabc:	mov    QWORD PTR [rsp+0x8],rbx
   14003eac1:	mov    QWORD PTR [rsp+0x10],rsi
   14003eac6:	push   rdi
   14003eac7:	sub    rsp,0x20
   14003eacb:	mov    rdi,r8
   14003eace:	mov    rsi,rdx
   14003ead1:	mov    rbx,rcx
   14003ead4:	call   0x14003e880
   14003ead9:	mov    rcx,rbx
   14003eadc:	test   rax,rax
   14003eadf:	mov    QWORD PTR [rdi],rax
   14003eae2:	je     0x14003eaed
   14003eae4:	call   0x14003e9e4
   14003eae9:	xor    eax,eax
   14003eaeb:	jmp    0x14003eb04
   14003eaed:	mov    rdx,rsi
   14003eaf0:	call   0x14003e954
   14003eaf5:	mov    QWORD PTR [rdi],rax
   14003eaf8:	neg    rax
   14003eafb:	sbb    eax,eax
   14003eafd:	not    eax
   14003eaff:	and    eax,0x80004002
   14003eb04:	mov    rbx,QWORD PTR [rsp+0x30]
   14003eb09:	mov    rsi,QWORD PTR [rsp+0x38]
   14003eb0e:	add    rsp,0x20
   14003eb12:	pop    rdi
   14003eb13:	ret    
   14003eb14:	sub    rsp,0x28
   14003eb18:	cmp    QWORD PTR [rcx+0x10],0x0
   14003eb1d:	je     0x14003eb2a
   14003eb1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14003eb23:	mov    rax,QWORD PTR [rcx]
   14003eb26:	call   QWORD PTR [rax]
   14003eb28:	jmp    0x14003eb2f
   14003eb2a:	call   0x14003eabc
   14003eb2f:	add    rsp,0x28
   14003eb33:	ret    
   14003eb34:	rex push rbx
   14003eb36:	sub    rsp,0x20
   14003eb3a:	and    QWORD PTR [rcx+0x18],0x0
   14003eb3f:	and    QWORD PTR [rcx+0x20],0x0
   14003eb44:	and    QWORD PTR [rcx+0x10],0x0
   14003eb49:	and    QWORD PTR [rcx+0x8],0x0
   14003eb4e:	mov    rbx,rcx
   14003eb51:	mov    rcx,QWORD PTR [rcx+0x28]
   14003eb55:	call   0x140030360
   14003eb5a:	and    QWORD PTR [rbx+0x28],0x0
   14003eb5f:	add    rsp,0x20
   14003eb63:	pop    rbx
   14003eb64:	ret    
   14003eb65:	int3   
   14003eb66:	int3   
   14003eb67:	int3   
   14003eb68:	sub    rsp,0x28
   14003eb6c:	test   rdx,rdx
   14003eb6f:	jne    0x14003eb77
   14003eb71:	call   0x1400208f8
   14003eb76:	int3   
   14003eb77:	mov    rax,QWORD PTR [rcx+0x20]
   14003eb7b:	mov    QWORD PTR [rdx],rax
   14003eb7e:	add    QWORD PTR [rcx+0x18],0xffffffffffffffff
   14003eb83:	mov    QWORD PTR [rcx+0x20],rdx
   14003eb87:	jne    0x14003eb8e
   14003eb89:	call   0x14003eb34
   14003eb8e:	add    rsp,0x28
   14003eb92:	ret    
   14003eb93:	int3   
   14003eb94:	rex push rbx
   14003eb96:	sub    rsp,0x20
   14003eb9a:	test   rcx,rcx
   14003eb9d:	jne    0x14003eba5
   14003eb9f:	call   0x1400208f8
   14003eba4:	int3   
   14003eba5:	mov    rdx,QWORD PTR [rcx+0x8]
   14003eba9:	test   rdx,rdx
   14003ebac:	jne    0x14003ebb4
   14003ebae:	call   0x1400208f8
   14003ebb3:	int3   
   14003ebb4:	mov    rax,QWORD PTR [rdx]
   14003ebb7:	mov    rbx,QWORD PTR [rdx+0x10]
   14003ebbb:	test   rax,rax
   14003ebbe:	mov    QWORD PTR [rcx+0x8],rax
   14003ebc2:	je     0x14003ebcb
   14003ebc4:	and    QWORD PTR [rax+0x8],0x0
   14003ebc9:	jmp    0x14003ebd0
   14003ebcb:	and    QWORD PTR [rcx+0x10],0x0
   14003ebd0:	call   0x14003eb68
   14003ebd5:	mov    rax,rbx
   14003ebd8:	add    rsp,0x20
   14003ebdc:	pop    rbx
   14003ebdd:	ret    
   14003ebde:	int3   
   14003ebdf:	int3   
   14003ebe0:	sub    rsp,0x28
   14003ebe4:	test   rdx,rdx
   14003ebe7:	mov    r8,rcx
   14003ebea:	jne    0x14003ebf2
   14003ebec:	call   0x1400208f8
   14003ebf1:	int3   
   14003ebf2:	cmp    rdx,QWORD PTR [rcx+0x8]
   14003ebf6:	mov    rax,QWORD PTR [rdx]
   14003ebf9:	jne    0x14003ec01
   14003ebfb:	mov    QWORD PTR [rcx+0x8],rax
   14003ebff:	jmp    0x14003ec08
   14003ec01:	mov    rcx,QWORD PTR [rdx+0x8]
   14003ec05:	mov    QWORD PTR [rcx],rax
   14003ec08:	cmp    rdx,QWORD PTR [r8+0x10]
   14003ec0c:	mov    rax,QWORD PTR [rdx+0x8]
   14003ec10:	jne    0x14003ec18
   14003ec12:	mov    QWORD PTR [r8+0x10],rax
   14003ec16:	jmp    0x14003ec1f
   14003ec18:	mov    rcx,QWORD PTR [rdx]
   14003ec1b:	mov    QWORD PTR [rcx+0x8],rax
   14003ec1f:	mov    rcx,r8
   14003ec22:	add    rsp,0x28
   14003ec26:	jmp    0x14003eb68
   14003ec2b:	int3   
   14003ec2c:	test   r8,r8
   14003ec2f:	jne    0x14003ec37
   14003ec31:	mov    rax,QWORD PTR [rcx+0x8]
   14003ec35:	jmp    0x14003ec45
   14003ec37:	mov    rax,QWORD PTR [r8]
   14003ec3a:	jmp    0x14003ec45
   14003ec3c:	cmp    QWORD PTR [rax+0x10],rdx
   14003ec40:	je     0x14003ec4a
   14003ec42:	mov    rax,QWORD PTR [rax]
   14003ec45:	test   rax,rax
   14003ec48:	jne    0x14003ec3c
   14003ec4a:	ret    
   14003ec4b:	int3   
   14003ec4c:	lea    rax,[rip+0x2e175]        # 0x14006cdc8
   14003ec53:	ret    
   14003ec54:	lea    rax,[rip+0x2e1a5]        # 0x14006ce00
   14003ec5b:	mov    QWORD PTR [rcx+0x30],rdx
   14003ec5f:	mov    QWORD PTR [rcx],rax
   14003ec62:	xor    eax,eax
   14003ec64:	mov    QWORD PTR [rcx+0x18],rax
   14003ec68:	mov    QWORD PTR [rcx+0x20],rax
   14003ec6c:	mov    QWORD PTR [rcx+0x10],rax
   14003ec70:	mov    QWORD PTR [rcx+0x8],rax
   14003ec74:	mov    QWORD PTR [rcx+0x28],rax
   14003ec78:	mov    rax,rcx
   14003ec7b:	ret    
   14003ec7c:	lea    rax,[rip+0x2e17d]        # 0x14006ce00
   14003ec83:	mov    QWORD PTR [rcx],rax
   14003ec86:	jmp    0x14003eb34
   14003ec8b:	int3   
   14003ec8c:	mov    QWORD PTR [rsp+0x8],rbx
   14003ec91:	mov    QWORD PTR [rsp+0x10],rsi
   14003ec96:	push   rdi
   14003ec97:	sub    rsp,0x20
   14003ec9b:	cmp    QWORD PTR [rcx+0x20],0x0
   14003eca0:	mov    rdi,r8
   14003eca3:	mov    rsi,rdx
   14003eca6:	mov    rbx,rcx
   14003eca9:	jne    0x14003ece6
   14003ecab:	mov    rdx,QWORD PTR [rbx+0x30]
   14003ecaf:	add    rcx,0x28
   14003ecb3:	mov    r8d,0x18
   14003ecb9:	call   0x140030328
   14003ecbe:	mov    rdx,QWORD PTR [rbx+0x30]
   14003ecc2:	lea    rcx,[rdx+rdx*2]
   14003ecc6:	add    rdx,0xffffffffffffffff
   14003ecca:	lea    r8,[rax+rcx*8-0x10]
   14003eccf:	js     0x14003ece6
   14003ecd1:	mov    rax,QWORD PTR [rbx+0x20]
   14003ecd5:	mov    QWORD PTR [r8],rax
   14003ecd8:	mov    QWORD PTR [rbx+0x20],r8
   14003ecdc:	sub    r8,0x18
   14003ece0:	sub    rdx,0x1
   14003ece4:	jns    0x14003ecd1
   14003ece6:	mov    rax,QWORD PTR [rbx+0x20]
   14003ecea:	mov    rcx,QWORD PTR [rax]
   14003eced:	mov    QWORD PTR [rbx+0x20],rcx
   14003ecf1:	mov    QWORD PTR [rax+0x8],rsi
   14003ecf5:	mov    rsi,QWORD PTR [rsp+0x38]
   14003ecfa:	mov    QWORD PTR [rax],rdi
   14003ecfd:	add    QWORD PTR [rbx+0x18],0x1
   14003ed02:	and    QWORD PTR [rax+0x10],0x0
   14003ed07:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ed0c:	add    rsp,0x20
   14003ed10:	pop    rdi
   14003ed11:	ret    
   14003ed12:	int3   
   14003ed13:	int3   
   14003ed14:	mov    QWORD PTR [rsp+0x8],rbx
   14003ed19:	push   rdi
   14003ed1a:	sub    rsp,0x20
   14003ed1e:	mov    r8,QWORD PTR [rcx+0x8]
   14003ed22:	mov    rbx,rdx
   14003ed25:	xor    edx,edx
   14003ed27:	mov    rdi,rcx
   14003ed2a:	call   0x14003ec8c
   14003ed2f:	mov    QWORD PTR [rax+0x10],rbx
   14003ed33:	mov    rcx,QWORD PTR [rdi+0x8]
   14003ed37:	test   rcx,rcx
   14003ed3a:	je     0x14003ed42
   14003ed3c:	mov    QWORD PTR [rcx+0x8],rax
   14003ed40:	jmp    0x14003ed46
   14003ed42:	mov    QWORD PTR [rdi+0x10],rax
   14003ed46:	mov    QWORD PTR [rdi+0x8],rax
   14003ed4a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ed4f:	add    rsp,0x20
   14003ed53:	pop    rdi
   14003ed54:	ret    
   14003ed55:	int3   
   14003ed56:	int3   
   14003ed57:	int3   
   14003ed58:	mov    QWORD PTR [rsp+0x8],rbx
   14003ed5d:	push   rdi
   14003ed5e:	sub    rsp,0x20
   14003ed62:	mov    rbx,rdx
   14003ed65:	mov    rdx,QWORD PTR [rcx+0x10]
   14003ed69:	xor    r8d,r8d
   14003ed6c:	mov    rdi,rcx
   14003ed6f:	call   0x14003ec8c
   14003ed74:	mov    QWORD PTR [rax+0x10],rbx
   14003ed78:	mov    rcx,QWORD PTR [rdi+0x10]
   14003ed7c:	test   rcx,rcx
   14003ed7f:	je     0x14003ed86
   14003ed81:	mov    QWORD PTR [rcx],rax
   14003ed84:	jmp    0x14003ed8a
   14003ed86:	mov    QWORD PTR [rdi+0x8],rax
   14003ed8a:	mov    QWORD PTR [rdi+0x10],rax
   14003ed8e:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ed93:	add    rsp,0x20
   14003ed97:	pop    rdi
   14003ed98:	ret    
   14003ed99:	int3   
   14003ed9a:	int3   
   14003ed9b:	int3   
   14003ed9c:	mov    QWORD PTR [rsp+0x8],rbx
   14003eda1:	mov    QWORD PTR [rsp+0x10],rsi
   14003eda6:	push   rdi
   14003eda7:	sub    rsp,0x20
   14003edab:	test   rdx,rdx
   14003edae:	mov    rsi,r8
   14003edb1:	mov    rbx,rdx
   14003edb4:	mov    rdi,rcx
   14003edb7:	jne    0x14003edc3
   14003edb9:	mov    rdx,r8
   14003edbc:	call   0x14003ed14
   14003edc1:	jmp    0x14003ede9
   14003edc3:	mov    r8,rdx
   14003edc6:	mov    rdx,QWORD PTR [rdx+0x8]
   14003edca:	call   0x14003ec8c
   14003edcf:	mov    QWORD PTR [rax+0x10],rsi
   14003edd3:	mov    rcx,QWORD PTR [rbx+0x8]
   14003edd7:	test   rcx,rcx
   14003edda:	je     0x14003ede1
   14003eddc:	mov    QWORD PTR [rcx],rax
   14003eddf:	jmp    0x14003ede5
   14003ede1:	mov    QWORD PTR [rdi+0x8],rax
   14003ede5:	mov    QWORD PTR [rbx+0x8],rax
   14003ede9:	mov    rbx,QWORD PTR [rsp+0x30]
   14003edee:	mov    rsi,QWORD PTR [rsp+0x38]
   14003edf3:	add    rsp,0x20
   14003edf7:	pop    rdi
   14003edf8:	ret    
   14003edf9:	int3   
   14003edfa:	int3   
   14003edfb:	int3   
   14003edfc:	mov    QWORD PTR [rsp+0x8],rbx
   14003ee01:	push   rdi
   14003ee02:	sub    rsp,0x20
   14003ee06:	lea    rax,[rip+0x2dff3]        # 0x14006ce00
   14003ee0d:	mov    ebx,edx
   14003ee0f:	mov    rdi,rcx
   14003ee12:	mov    QWORD PTR [rcx],rax
   14003ee15:	call   0x14003eb34
   14003ee1a:	test   bl,0x1
   14003ee1d:	je     0x14003ee27
   14003ee1f:	mov    rcx,rdi
   14003ee22:	call   0x14001ac50
   14003ee27:	mov    rax,rdi
   14003ee2a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ee2f:	add    rsp,0x20
   14003ee33:	pop    rdi
   14003ee34:	ret    
   14003ee35:	int3   
   14003ee36:	int3   
   14003ee37:	int3   
   14003ee38:	rex push rbx
   14003ee3a:	sub    rsp,0x30
   14003ee3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003ee47:	call   0x140021a70
   14003ee4c:	mov    rbx,rax
   14003ee4f:	mov    ecx,0x1
   14003ee54:	call   0x14002d810
   14003ee59:	and    DWORD PTR [rsp+0x40],0x0
   14003ee5e:	add    rbx,0x58
   14003ee62:	lea    r9,[rsp+0x40]
   14003ee67:	lea    r8,[rip+0x2dfd2]        # 0x14006ce40
   14003ee6e:	lea    rdx,[rsp+0x48]
   14003ee73:	mov    rcx,rbx
   14003ee76:	call   0x14002e198
   14003ee7b:	nop
   14003ee7c:	mov    rax,QWORD PTR [rsp+0x48]
   14003ee81:	cmp    DWORD PTR [rax-0x10],0x0
   14003ee85:	je     0x14003eeef
   14003ee87:	call   0x140021a70
   14003ee8c:	mov    rdx,QWORD PTR [rax+0x10]
   14003ee90:	mov    rcx,QWORD PTR [rsp+0x48]
   14003ee95:	call   QWORD PTR [rip+0x25bb5]        # 0x140064a50
   14003ee9b:	lea    r9,[rsp+0x40]
   14003eea0:	lea    r8,[rip+0x2df99]        # 0x14006ce40
   14003eea7:	lea    rdx,[rsp+0x50]
   14003eeac:	mov    rcx,rbx
   14003eeaf:	call   0x14002e198
   14003eeb4:	nop
   14003eeb5:	mov    rdx,rax
   14003eeb8:	lea    rcx,[rsp+0x48]
   14003eebd:	call   0x1400040f0
   14003eec2:	nop
   14003eec3:	mov    rdx,QWORD PTR [rsp+0x50]
   14003eec8:	add    rdx,0xffffffffffffffe8
   14003eecc:	or     eax,0xffffffff
   14003eecf:	lock xadd DWORD PTR [rdx+0x10],eax
   14003eed4:	add    eax,0xffffffff
   14003eed7:	test   eax,eax
   14003eed9:	jg     0x14003eee4
   14003eedb:	mov    rcx,QWORD PTR [rdx]
   14003eede:	mov    rax,QWORD PTR [rcx]
   14003eee1:	call   QWORD PTR [rax+0x8]
   14003eee4:	mov    rax,QWORD PTR [rsp+0x48]
   14003eee9:	cmp    DWORD PTR [rax-0x10],0x0
   14003eeed:	jne    0x14003ee87
   14003eeef:	mov    rcx,rbx
   14003eef2:	call   0x140002cb0
   14003eef7:	mov    ecx,0x1
   14003eefc:	call   0x14002d8a4
   14003ef01:	nop
   14003ef02:	mov    rdx,QWORD PTR [rsp+0x48]
   14003ef07:	add    rdx,0xffffffffffffffe8
   14003ef0b:	or     eax,0xffffffff
   14003ef0e:	lock xadd DWORD PTR [rdx+0x10],eax
   14003ef13:	add    eax,0xffffffff
   14003ef16:	test   eax,eax
   14003ef18:	jg     0x14003ef23
   14003ef1a:	mov    rcx,QWORD PTR [rdx]
   14003ef1d:	mov    rax,QWORD PTR [rcx]
   14003ef20:	call   QWORD PTR [rax+0x8]
   14003ef23:	add    rsp,0x30
   14003ef27:	pop    rbx
   14003ef28:	ret    
   14003ef29:	int3   
   14003ef2a:	int3   
   14003ef2b:	int3   
   14003ef2c:	int3   
   14003ef2d:	int3   
   14003ef2e:	int3   
   14003ef2f:	int3   
   14003ef30:	int3   
   14003ef31:	int3   
   14003ef32:	int3   
   14003ef33:	int3   
   14003ef34:	int3   
   14003ef35:	int3   
   14003ef36:	int3   
   14003ef37:	int3   
   14003ef38:	rex push rbp
   14003ef3a:	sub    rsp,0x20
   14003ef3e:	mov    rbp,rdx
   14003ef41:	lea    rcx,[rbp+0x48]
   14003ef45:	call   0x1400010c0
   14003ef4a:	add    rsp,0x20
   14003ef4e:	pop    rbp
   14003ef4f:	ret    
   14003ef50:	int3   
   14003ef51:	int3   
   14003ef52:	int3   
   14003ef53:	int3   
   14003ef54:	int3   
   14003ef55:	int3   
   14003ef56:	int3   
   14003ef57:	int3   
   14003ef58:	rex push rbp
   14003ef5a:	sub    rsp,0x20
   14003ef5e:	mov    rbp,rdx
   14003ef61:	lea    rcx,[rbp+0x50]
   14003ef65:	call   0x1400010c0
   14003ef6a:	add    rsp,0x20
   14003ef6e:	pop    rbp
   14003ef6f:	ret    
   14003ef70:	rex push rbx
   14003ef72:	sub    rsp,0x20
   14003ef76:	call   0x14003ee38
   14003ef7b:	call   0x140021a70
   14003ef80:	mov    rax,QWORD PTR [rax+0x8]
   14003ef84:	test   rax,rax
   14003ef87:	je     0x14003ef99
   14003ef89:	mov    rax,QWORD PTR [rax+0x78]
   14003ef8d:	test   rax,rax
   14003ef90:	je     0x14003ef99
   14003ef92:	xor    edx,edx
   14003ef94:	lea    ecx,[rdx+0x1]
   14003ef97:	call   rax
   14003ef99:	call   0x140021ac0
   14003ef9e:	mov    rbx,rax
   14003efa1:	mov    rcx,QWORD PTR [rax+0x78]
   14003efa5:	test   rcx,rcx
   14003efa8:	je     0x14003efbc
   14003efaa:	mov    rdx,QWORD PTR [rcx]
   14003efad:	call   QWORD PTR [rdx+0x278]
   14003efb3:	test   eax,eax
   14003efb5:	je     0x14003efbc
   14003efb7:	and    QWORD PTR [rbx+0x78],0x0
   14003efbc:	call   0x1400210b0
   14003efc1:	mov    rbx,rax
   14003efc4:	call   0x140021a70
   14003efc9:	cmp    BYTE PTR [rax+0x28],0x0
   14003efcd:	jne    0x14003eff7
   14003efcf:	mov    rcx,QWORD PTR [rbx+0x50]
   14003efd3:	test   rcx,rcx
   14003efd6:	je     0x14003efe3
   14003efd8:	call   QWORD PTR [rip+0x25982]        # 0x140064960
   14003efde:	and    QWORD PTR [rbx+0x50],0x0
   14003efe3:	mov    rcx,QWORD PTR [rbx+0x48]
   14003efe7:	test   rcx,rcx
   14003efea:	je     0x14003eff7
   14003efec:	call   QWORD PTR [rip+0x2596e]        # 0x140064960
   14003eff2:	and    QWORD PTR [rbx+0x48],0x0
   14003eff7:	add    rsp,0x20
   14003effb:	pop    rbx
   14003effc:	ret    
   14003effd:	int3   
   14003effe:	int3   
   14003efff:	int3   
   14003f000:	lea    rax,[rip+0x2de49]        # 0x14006ce50
   14003f007:	ret    
   14003f008:	sub    rsp,0x28
   14003f00c:	mov    ecx,0x10
   14003f011:	call   0x14001ac0c
   14003f016:	test   rax,rax
   14003f019:	je     0x14003f02c
   14003f01b:	and    QWORD PTR [rax+0x8],0x0
   14003f020:	lea    rcx,[rip+0x2de61]        # 0x14006ce88
   14003f027:	mov    QWORD PTR [rax],rcx
   14003f02a:	jmp    0x14003f02e
   14003f02c:	xor    eax,eax
   14003f02e:	add    rsp,0x28
   14003f032:	ret    
   14003f033:	int3   
   14003f034:	test   rcx,rcx
   14003f037:	je     0x14003f048
   14003f039:	and    QWORD PTR [rcx+0x8],0x0
   14003f03e:	lea    rax,[rip+0x2de43]        # 0x14006ce88
   14003f045:	mov    QWORD PTR [rcx],rax
   14003f048:	ret    
   14003f049:	int3   
   14003f04a:	int3   
   14003f04b:	int3   
   14003f04c:	rex push rdi
   14003f04e:	sub    rsp,0x40
   14003f052:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003f05b:	mov    QWORD PTR [rsp+0x50],rbx
   14003f060:	mov    QWORD PTR [rsp+0x60],rsi
   14003f065:	mov    esi,ecx
   14003f067:	call   0x140021ac0
   14003f06c:	mov    rdi,rax
   14003f06f:	xor    ebx,ebx
   14003f071:	cmp    QWORD PTR [rax+0x30],rbx
   14003f075:	jne    0x14003f0db
   14003f077:	cmp    esi,ebx
   14003f079:	je     0x14003f0db
   14003f07b:	lea    rcx,[rip+0xfffffffffffed9c6]        # 0x14002ca48
   14003f082:	call   0x14001abfc
   14003f087:	mov    rsi,rax
   14003f08a:	mov    ecx,0xb8
   14003f08f:	call   0x14001ac0c
   14003f094:	mov    QWORD PTR [rsp+0x58],rax
   14003f099:	cmp    rax,rbx
   14003f09c:	je     0x14003f0cf
   14003f09e:	mov    DWORD PTR [rsp+0x28],0x1
   14003f0a6:	mov    QWORD PTR [rsp+0x20],0x8
   14003f0af:	lea    r9,[rip+0xfffffffffffeb886]        # 0x14002a93c
   14003f0b6:	lea    r8,[rip+0xffffffffffffff77]        # 0x14003f034
   14003f0bd:	lea    rdx,[rip+0x2dd8c]        # 0x14006ce50
   14003f0c4:	mov    rcx,rax
   14003f0c7:	call   0x14002dbc0
   14003f0cc:	mov    rbx,rax
   14003f0cf:	mov    QWORD PTR [rdi+0x30],rbx
   14003f0d3:	mov    rcx,rsi
   14003f0d6:	call   0x14001abfc
   14003f0db:	mov    rax,QWORD PTR [rdi+0x30]
   14003f0df:	mov    rbx,QWORD PTR [rsp+0x50]
   14003f0e4:	mov    rsi,QWORD PTR [rsp+0x60]
   14003f0e9:	add    rsp,0x40
   14003f0ed:	pop    rdi
   14003f0ee:	ret    
   14003f0ef:	int3   
   14003f0f0:	int3   
   14003f0f1:	int3   
   14003f0f2:	int3   
   14003f0f3:	int3   
   14003f0f4:	int3   
   14003f0f5:	int3   
   14003f0f6:	int3   
   14003f0f7:	int3   
   14003f0f8:	int3   
   14003f0f9:	int3   
   14003f0fa:	int3   
   14003f0fb:	int3   
   14003f0fc:	rex push rbp
   14003f0fe:	sub    rsp,0x20
   14003f102:	mov    rbp,rdx
   14003f105:	mov    rcx,QWORD PTR [rbp+0x58]
   14003f109:	call   0x14001ac50
   14003f10e:	add    rsp,0x20
   14003f112:	pop    rbp
   14003f113:	ret    
   14003f114:	rex push rbx
   14003f116:	sub    rsp,0x20
   14003f11a:	mov    rbx,rcx
   14003f11d:	mov    ecx,0x1
   14003f122:	call   0x14003f04c
   14003f127:	mov    rdx,rbx
   14003f12a:	mov    rcx,rax
   14003f12d:	add    rsp,0x20
   14003f131:	pop    rbx
   14003f132:	jmp    0x14002dcfc
   14003f137:	int3   
   14003f138:	rex push rbx
   14003f13a:	sub    rsp,0x20
   14003f13e:	mov    rbx,rcx
   14003f141:	call   0x140021ac0
   14003f146:	mov    rcx,QWORD PTR [rax+0x30]
   14003f14a:	xor    eax,eax
   14003f14c:	cmp    rcx,rax
   14003f14f:	je     0x14003f15d
   14003f151:	add    rcx,0x30
   14003f155:	mov    rdx,rbx
   14003f158:	call   0x14002f878
   14003f15d:	add    rsp,0x20
   14003f161:	pop    rbx
   14003f162:	ret    
   14003f163:	int3   
   14003f164:	mov    QWORD PTR [rsp+0x8],rbx
   14003f169:	push   rdi
   14003f16a:	sub    rsp,0x20
   14003f16e:	mov    rdi,QWORD PTR [rcx+0x8]
   14003f172:	mov    rbx,rcx
   14003f175:	test   rdi,rdi
   14003f178:	je     0x14003f195
   14003f17a:	call   0x140021ac0
   14003f17f:	mov    rcx,QWORD PTR [rax+0x30]
   14003f183:	test   rcx,rcx
   14003f186:	je     0x14003f195
   14003f188:	mov    rdx,QWORD PTR [rbx+0x8]
   14003f18c:	add    rcx,0x30
   14003f190:	call   0x14002f8ec
   14003f195:	and    QWORD PTR [rbx+0x8],0x0
   14003f19a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f19f:	mov    rax,rdi
   14003f1a2:	add    rsp,0x20
   14003f1a6:	pop    rdi
   14003f1a7:	ret    
   14003f1a8:	sub    rsp,0x28
   14003f1ac:	cmp    QWORD PTR [rcx+0x8],0x0
   14003f1b1:	jne    0x14003f1b7
   14003f1b3:	xor    eax,eax
   14003f1b5:	jmp    0x14003f1c5
   14003f1b7:	call   0x14003f164
   14003f1bc:	mov    rcx,rax
   14003f1bf:	call   QWORD PTR [rip+0x256f3]        # 0x1400648b8
   14003f1c5:	add    rsp,0x28
   14003f1c9:	ret    
   14003f1ca:	int3   
   14003f1cb:	int3   
   14003f1cc:	mov    QWORD PTR [rsp+0x8],rbx
   14003f1d1:	push   rdi
   14003f1d2:	sub    rsp,0x20
   14003f1d6:	lea    rax,[rip+0x2dcab]        # 0x14006ce88
   14003f1dd:	mov    ebx,edx
   14003f1df:	mov    rdi,rcx
   14003f1e2:	mov    QWORD PTR [rcx],rax
   14003f1e5:	call   0x14003f1a8
   14003f1ea:	test   bl,0x1
   14003f1ed:	je     0x14003f1f7
   14003f1ef:	mov    rcx,rdi
   14003f1f2:	call   0x14001ac50
   14003f1f7:	mov    rax,rdi
   14003f1fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f1ff:	add    rsp,0x20
   14003f203:	pop    rdi
   14003f204:	ret    
   14003f205:	int3   
   14003f206:	int3   
   14003f207:	int3   
   14003f208:	xor    eax,eax
   14003f20a:	cmp    rcx,rax
   14003f20d:	setne  al
   14003f210:	ret    
   14003f211:	int3   
   14003f212:	int3   
   14003f213:	int3   
   14003f214:	mov    QWORD PTR [rsp+0x8],rbx
   14003f219:	mov    QWORD PTR [rsp+0x10],rbp
   14003f21e:	mov    QWORD PTR [rsp+0x18],rsi
   14003f223:	push   rdi
   14003f224:	push   r12
   14003f226:	push   r13
   14003f228:	push   r14
   14003f22a:	push   r15
   14003f22c:	sub    rsp,0x20
   14003f230:	xor    r13d,r13d
   14003f233:	mov    r15d,r9d
   14003f236:	mov    r14,r8
   14003f239:	cmp    rdx,r13
   14003f23c:	mov    rsi,rdx
   14003f23f:	mov    rbp,rcx
   14003f242:	jne    0x14003f24a
   14003f244:	call   0x1400208f8
   14003f249:	int3   
   14003f24a:	cmp    r8,r13
   14003f24d:	jne    0x14003f255
   14003f24f:	call   0x1400208f8
   14003f254:	int3   
   14003f255:	cmp    WORD PTR [rdx],r13w
   14003f259:	mov    edi,r13d
   14003f25c:	mov    rbx,rdx
   14003f25f:	je     0x14003f2c3
   14003f261:	cmp    WORD PTR [rbx],0x25
   14003f265:	jne    0x14003f2b6
   14003f267:	movzx  eax,WORD PTR [rbx+0x2]
   14003f26b:	cmp    ax,0x31
   14003f26f:	jb     0x14003f277
   14003f271:	cmp    ax,0x39
   14003f275:	jbe    0x14003f291
   14003f277:	cmp    ax,0x41
   14003f27b:	jb     0x14003f2b6
   14003f27d:	cmp    ax,0x5a
   14003f281:	ja     0x14003f2b6
   14003f283:	cmp    ax,0x39
   14003f287:	jbe    0x14003f291
   14003f289:	movzx  ecx,ax
   14003f28c:	sub    ecx,0x38
   14003f28f:	jmp    0x14003f297
   14003f291:	movzx  ecx,ax
   14003f294:	sub    ecx,0x31
   14003f297:	add    rbx,0x4
   14003f29b:	cmp    ecx,r15d
   14003f29e:	jge    0x14003f2ba
   14003f2a0:	movsxd rax,ecx
   14003f2a3:	mov    rcx,QWORD PTR [r14+rax*8]
   14003f2a7:	cmp    rcx,r13
   14003f2aa:	je     0x14003f2bd
   14003f2ac:	call   QWORD PTR [rip+0x251ce]        # 0x140064480
   14003f2b2:	add    edi,eax
   14003f2b4:	jmp    0x14003f2bd
   14003f2b6:	add    rbx,0x2
   14003f2ba:	add    edi,0x1
   14003f2bd:	cmp    WORD PTR [rbx],r13w
   14003f2c1:	jne    0x14003f261
   14003f2c3:	mov    rax,QWORD PTR [rbp+0x0]
   14003f2c7:	mov    ecx,0x1
   14003f2cc:	sub    ecx,DWORD PTR [rax-0x8]
   14003f2cf:	mov    eax,DWORD PTR [rax-0xc]
   14003f2d2:	sub    eax,edi
   14003f2d4:	or     ecx,eax
   14003f2d6:	jge    0x14003f2e2
   14003f2d8:	mov    edx,edi
   14003f2da:	mov    rcx,rbp
   14003f2dd:	call   0x140002d40
   14003f2e2:	mov    rbx,QWORD PTR [rbp+0x0]
   14003f2e6:	cmp    WORD PTR [rsi],r13w
   14003f2ea:	je     0x14003f3b3
   14003f2f0:	movzx  ecx,WORD PTR [rsi]
   14003f2f3:	cmp    cx,0x25
   14003f2f7:	jne    0x14003f38e
   14003f2fd:	movzx  eax,WORD PTR [rsi+0x2]
   14003f301:	cmp    ax,0x31
   14003f305:	jb     0x14003f30d
   14003f307:	cmp    ax,0x39
   14003f30b:	jbe    0x14003f327
   14003f30d:	cmp    ax,0x41
   14003f311:	jb     0x14003f38e
   14003f313:	cmp    ax,0x5a
   14003f317:	ja     0x14003f38e
   14003f319:	cmp    ax,0x39
   14003f31d:	jbe    0x14003f327
   14003f31f:	movzx  ecx,ax
   14003f322:	sub    ecx,0x38
   14003f325:	jmp    0x14003f32d
   14003f327:	movzx  ecx,ax
   14003f32a:	sub    ecx,0x31
   14003f32d:	add    rsi,0x4
   14003f331:	cmp    ecx,r15d
   14003f334:	jl     0x14003f33d
   14003f336:	mov    WORD PTR [rbx],0x3f
   14003f33b:	jmp    0x14003f395
   14003f33d:	movsxd r12,ecx
   14003f340:	mov    rcx,QWORD PTR [r14+r12*8]
   14003f344:	cmp    rcx,r13
   14003f347:	je     0x14003f2e6
   14003f349:	call   QWORD PTR [rip+0x25131]        # 0x140064480
   14003f34f:	mov    r8,QWORD PTR [r14+r12*8]
   14003f353:	lea    ecx,[rdi+0x1]
   14003f356:	movsxd rdx,ecx
   14003f359:	mov    rcx,rbx
   14003f35c:	movsxd r13,eax
   14003f35f:	call   0x140047080
   14003f364:	test   eax,eax
   14003f366:	je     0x14003f37c
   14003f368:	cmp    eax,0xc
   14003f36b:	je     0x14003f3ad
   14003f36d:	cmp    eax,0x16
   14003f370:	je     0x14003f3a7
   14003f372:	cmp    eax,0x22
   14003f375:	je     0x14003f3a7
   14003f377:	cmp    eax,0x50
   14003f37a:	jne    0x14003f3a1
   14003f37c:	sub    edi,r13d
   14003f37f:	mov    rax,r13
   14003f382:	lea    rbx,[rbx+r13*2]
   14003f386:	xor    r13d,r13d
   14003f389:	jmp    0x14003f2e6
   14003f38e:	mov    WORD PTR [rbx],cx
   14003f391:	add    rsi,0x2
   14003f395:	add    rbx,0x2
   14003f399:	sub    edi,0x1
   14003f39c:	jmp    0x14003f2e6
   14003f3a1:	call   0x1400208f8
   14003f3a6:	int3   
   14003f3a7:	call   0x1400208f8
   14003f3ac:	int3   
   14003f3ad:	call   0x1400208b0
   14003f3b2:	int3   
   14003f3b3:	mov    rcx,QWORD PTR [rbp+0x0]
   14003f3b7:	sub    rbx,rcx
   14003f3ba:	sar    rbx,1
   14003f3bd:	cmp    ebx,0xffffffff
   14003f3c0:	jne    0x14003f3d3
   14003f3c2:	cmp    rcx,r13
   14003f3c5:	jne    0x14003f3cc
   14003f3c7:	mov    ebx,r13d
   14003f3ca:	jmp    0x14003f3d8
   14003f3cc:	call   0x140048610
   14003f3d1:	mov    ebx,eax
   14003f3d3:	cmp    ebx,r13d
   14003f3d6:	jl     0x14003f40d
   14003f3d8:	mov    rax,QWORD PTR [rbp+0x0]
   14003f3dc:	cmp    ebx,DWORD PTR [rax-0xc]
   14003f3df:	jg     0x14003f40d
   14003f3e1:	mov    rsi,QWORD PTR [rsp+0x60]
   14003f3e6:	mov    DWORD PTR [rax-0x10],ebx
   14003f3e9:	mov    rax,QWORD PTR [rbp+0x0]
   14003f3ed:	mov    rbp,QWORD PTR [rsp+0x58]
   14003f3f2:	movsxd rcx,ebx
   14003f3f5:	mov    rbx,QWORD PTR [rsp+0x50]
   14003f3fa:	mov    WORD PTR [rax+rcx*2],r13w
   14003f3ff:	add    rsp,0x20
   14003f403:	pop    r15
   14003f405:	pop    r14
   14003f407:	pop    r13
   14003f409:	pop    r12
   14003f40b:	pop    rdi
   14003f40c:	ret    
   14003f40d:	mov    ecx,0x80070057
   14003f412:	call   0x140001430
   14003f417:	int3   
   14003f418:	mov    rax,rsp
   14003f41b:	push   r12
   14003f41d:	sub    rsp,0x30
   14003f421:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14003f42a:	mov    QWORD PTR [rax+0x8],rbx
   14003f42e:	mov    QWORD PTR [rax+0x10],rbp
   14003f432:	mov    QWORD PTR [rax+0x18],rsi
   14003f436:	mov    QWORD PTR [rax+0x20],rdi
   14003f43a:	mov    esi,r9d
   14003f43d:	mov    rbp,r8
   14003f440:	mov    edi,edx
   14003f442:	mov    r12,rcx
   14003f445:	call   0x14002b874
   14003f44a:	mov    rcx,rax
   14003f44d:	xor    r10d,r10d
   14003f450:	test   rax,rax
   14003f453:	setne  r10b
   14003f457:	test   r10d,r10d
   14003f45a:	jne    0x14003f467
   14003f45c:	mov    ecx,0x80004005
   14003f461:	call   0x140001430
   14003f466:	int3   
   14003f467:	mov    rax,QWORD PTR [rax]
   14003f46a:	call   QWORD PTR [rax+0x18]
   14003f46d:	lea    rbx,[rax+0x18]
   14003f471:	mov    QWORD PTR [rsp+0x20],rbx
   14003f476:	mov    ecx,edi
   14003f478:	call   0x14002b860
   14003f47d:	test   rax,rax
   14003f480:	je     0x14003f4d2
   14003f482:	mov    r8d,edi
   14003f485:	mov    rdx,rax
   14003f488:	lea    rcx,[rsp+0x20]
   14003f48d:	call   0x140003650
   14003f492:	test   eax,eax
   14003f494:	jne    0x14003f49d
   14003f496:	mov    rbx,QWORD PTR [rsp+0x20]
   14003f49b:	jmp    0x14003f4d2
   14003f49d:	mov    r9d,esi
   14003f4a0:	mov    r8,rbp
   14003f4a3:	mov    rbx,QWORD PTR [rsp+0x20]
   14003f4a8:	mov    rdx,rbx
   14003f4ab:	mov    rcx,r12
   14003f4ae:	call   0x14003f214
   14003f4b3:	nop
   14003f4b4:	lea    rdx,[rbx-0x18]
   14003f4b8:	or     eax,0xffffffff
   14003f4bb:	lock xadd DWORD PTR [rdx+0x10],eax
   14003f4c0:	add    eax,0xffffffff
   14003f4c3:	test   eax,eax
   14003f4c5:	jg     0x14003f4ee
   14003f4c7:	mov    rcx,QWORD PTR [rdx]
   14003f4ca:	mov    rax,QWORD PTR [rcx]
   14003f4cd:	call   QWORD PTR [rax+0x8]
   14003f4d0:	jmp    0x14003f4ee
   14003f4d2:	lea    rdx,[rbx-0x18]
   14003f4d6:	or     eax,0xffffffff
   14003f4d9:	lock xadd DWORD PTR [rdx+0x10],eax
   14003f4de:	add    eax,0xffffffff
   14003f4e1:	test   eax,eax
   14003f4e3:	jg     0x14003f4ee
   14003f4e5:	mov    rcx,QWORD PTR [rdx]
   14003f4e8:	mov    rax,QWORD PTR [rcx]
   14003f4eb:	call   QWORD PTR [rax+0x8]
   14003f4ee:	mov    rbx,QWORD PTR [rsp+0x40]
   14003f4f3:	mov    rbp,QWORD PTR [rsp+0x48]
   14003f4f8:	mov    rsi,QWORD PTR [rsp+0x50]
   14003f4fd:	mov    rdi,QWORD PTR [rsp+0x58]
   14003f502:	add    rsp,0x30
   14003f506:	pop    r12
   14003f508:	ret    
   14003f509:	int3   
   14003f50a:	int3   
   14003f50b:	int3   
   14003f50c:	int3   
   14003f50d:	int3   
   14003f50e:	int3   
   14003f50f:	int3   
   14003f510:	int3   
   14003f511:	int3   
   14003f512:	int3   
   14003f513:	int3   
   14003f514:	int3   
   14003f515:	int3   
   14003f516:	int3   
   14003f517:	int3   
   14003f518:	rex push rbp
   14003f51a:	sub    rsp,0x20
   14003f51e:	mov    rbp,rdx
   14003f521:	lea    rcx,[rbp+0x20]
   14003f525:	call   0x1400010c0
   14003f52a:	add    rsp,0x20
   14003f52e:	pop    rbp
   14003f52f:	ret    
   14003f530:	mov    QWORD PTR [rsp+0x18],r8
   14003f535:	sub    rsp,0x28
   14003f539:	lea    r8,[rsp+0x40]
   14003f53e:	mov    r9d,0x1
   14003f544:	call   0x14003f418
   14003f549:	add    rsp,0x28
   14003f54d:	ret    
   14003f54e:	int3   
   14003f54f:	int3   
   14003f550:	sub    rsp,0x28
   14003f554:	test   ecx,ecx
   14003f556:	jns    0x14003f56c
   14003f558:	cmp    ecx,0x8007000e
   14003f55e:	jne    0x14003f566
   14003f560:	call   0x1400208b0
   14003f565:	int3   
   14003f566:	call   0x140020a44
   14003f56b:	int3   
   14003f56c:	add    rsp,0x28
   14003f570:	ret    
   14003f571:	int3   
   14003f572:	int3   
   14003f573:	int3   
   14003f574:	cmp    r8w,0xb
   14003f579:	jne    0x14003f58b
   14003f57b:	neg    dx
   14003f57e:	mov    WORD PTR [rcx],r8w
   14003f582:	sbb    ax,ax
   14003f585:	mov    WORD PTR [rcx+0x8],ax
   14003f589:	jmp    0x14003f594
   14003f58b:	mov    WORD PTR [rcx],0x2
   14003f590:	mov    WORD PTR [rcx+0x8],dx
   14003f594:	mov    rax,rcx
   14003f597:	ret    
   14003f598:	cmp    r8w,0xa
   14003f59d:	jne    0x14003f5a5
   14003f59f:	mov    WORD PTR [rcx],r8w
   14003f5a3:	jmp    0x14003f5f4
   14003f5a5:	cmp    r8w,0xb
   14003f5aa:	jne    0x14003f5bb
   14003f5ac:	neg    edx
   14003f5ae:	mov    WORD PTR [rcx],r8w
   14003f5b2:	sbb    ax,ax
   14003f5b5:	mov    WORD PTR [rcx+0x8],ax
   14003f5b9:	jmp    0x14003f5f7
   14003f5bb:	cmp    r8w,0x16
   14003f5c0:	jne    0x14003f5c8
   14003f5c2:	mov    WORD PTR [rcx],r8w
   14003f5c6:	jmp    0x14003f5f4
   14003f5c8:	cmp    r8w,0x17
   14003f5cd:	jne    0x14003f5d5
   14003f5cf:	mov    WORD PTR [rcx],r8w
   14003f5d3:	jmp    0x14003f5f4
   14003f5d5:	cmp    r8w,0x19
   14003f5da:	jne    0x14003f5e2
   14003f5dc:	mov    WORD PTR [rcx],r8w
   14003f5e0:	jmp    0x14003f5f4
   14003f5e2:	cmp    r8w,0x13
   14003f5e7:	jne    0x14003f5ef
   14003f5e9:	mov    WORD PTR [rcx],r8w
   14003f5ed:	jmp    0x14003f5f4
   14003f5ef:	mov    WORD PTR [rcx],0x3
   14003f5f4:	mov    DWORD PTR [rcx+0x8],edx
   14003f5f7:	mov    rax,rcx
   14003f5fa:	ret    
   14003f5fb:	int3   
   14003f5fc:	sub    rsp,0x28
   14003f600:	test   r8,r8
   14003f603:	mov    rax,r8
   14003f606:	cmove  rax,rcx
   14003f60a:	cmp    rax,rcx
   14003f60d:	jne    0x14003f614
   14003f60f:	cmp    dx,WORD PTR [rcx]
   14003f612:	je     0x14003f62b
   14003f614:	movzx  r9d,dx
   14003f618:	xor    r8d,r8d
   14003f61b:	mov    rdx,rax
   14003f61e:	call   QWORD PTR [rip+0x25074]        # 0x140064698
   14003f624:	mov    ecx,eax
   14003f626:	call   0x14003f550
   14003f62b:	add    rsp,0x28
   14003f62f:	ret    
   14003f630:	rex push rbx
   14003f632:	sub    rsp,0x20
   14003f636:	cmp    rcx,rdx
   14003f639:	mov    rbx,rcx
   14003f63c:	je     0x14003f64b
   14003f63e:	call   QWORD PTR [rip+0x25014]        # 0x140064658
   14003f644:	mov    ecx,eax
   14003f646:	call   0x14003f550
   14003f64b:	mov    rax,rbx
   14003f64e:	add    rsp,0x20
   14003f652:	pop    rbx
   14003f653:	ret    
   14003f654:	rex push rbx
   14003f656:	sub    rsp,0x20
   14003f65a:	cmp    rcx,rdx
   14003f65d:	mov    rbx,rcx
   14003f660:	je     0x14003f66f
   14003f662:	call   QWORD PTR [rip+0x24ff0]        # 0x140064658
   14003f668:	mov    ecx,eax
   14003f66a:	call   0x14003f550
   14003f66f:	mov    rax,rbx
   14003f672:	add    rsp,0x20
   14003f676:	pop    rbx
   14003f677:	ret    
   14003f678:	xor    edx,edx
   14003f67a:	lea    r8d,[rdx+0x18]
   14003f67e:	jmp    0x140047720
   14003f683:	int3   
   14003f684:	lea    rax,[rip+0x2d87d]        # 0x14006cf08
   14003f68b:	mov    QWORD PTR [rcx],rax
   14003f68e:	ret    
   14003f68f:	int3   
   14003f690:	mov    QWORD PTR [rsp+0x8],rbx
   14003f695:	mov    QWORD PTR [rsp+0x10],rbp
   14003f69a:	mov    QWORD PTR [rsp+0x18],rsi
   14003f69f:	push   rdi
   14003f6a0:	sub    rsp,0x20
   14003f6a4:	mov    rax,QWORD PTR [rcx+0x10]
   14003f6a8:	xor    ebp,ebp
   14003f6aa:	mov    edi,edx
   14003f6ac:	cmp    edx,ebp
   14003f6ae:	mov    esi,r8d
   14003f6b1:	mov    rbx,rcx
   14003f6b4:	cmovl  edi,ebp
   14003f6b7:	cmp    edi,DWORD PTR [rax+0xc]
   14003f6ba:	jle    0x14003f6f3
   14003f6bc:	mov    rcx,QWORD PTR [rip+0x48fe5]        # 0x1400886a8
   14003f6c3:	cmp    rcx,rbp
   14003f6c6:	je     0x14003f6d7
   14003f6c8:	mov    r10,QWORD PTR [rcx]
   14003f6cb:	mov    r8d,DWORD PTR [rax+0xc]
   14003f6cf:	mov    r9,rax
   14003f6d2:	mov    edx,edi
   14003f6d4:	call   QWORD PTR [r10]
   14003f6d7:	mov    rcx,QWORD PTR [rbx+0x8]
   14003f6db:	mov    r8d,esi
   14003f6de:	mov    edx,edi
   14003f6e0:	mov    rax,QWORD PTR [rcx]
   14003f6e3:	call   QWORD PTR [rax]
   14003f6e5:	cmp    rax,rbp
   14003f6e8:	je     0x14003f709
   14003f6ea:	or     DWORD PTR [rax+0x10],0xffffffff
   14003f6ee:	mov    QWORD PTR [rax],rbx
   14003f6f1:	jmp    0x14003f709
   14003f6f3:	or     DWORD PTR [rax+0x10],0xffffffff
   14003f6f7:	mov    rax,QWORD PTR [rcx+0x10]
   14003f6fb:	mov    DWORD PTR [rax+0x8],ebp
   14003f6fe:	mov    rax,QWORD PTR [rcx+0x10]
   14003f702:	mov    QWORD PTR [rax],rcx
   14003f705:	mov    rax,QWORD PTR [rcx+0x10]
   14003f709:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f70e:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f713:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f718:	add    rsp,0x20
   14003f71c:	pop    rdi
   14003f71d:	ret    
   14003f71e:	int3   
   14003f71f:	int3   
   14003f720:	rex push rbx
   14003f722:	sub    rsp,0x20
   14003f726:	cmp    rdx,QWORD PTR [rcx+0x10]
   14003f72a:	mov    rbx,rcx
   14003f72d:	je     0x14003f740
   14003f72f:	mov    rax,QWORD PTR [rcx+0x8]
   14003f733:	mov    QWORD PTR [rdx],rax
   14003f736:	mov    rcx,QWORD PTR [rcx+0x8]
   14003f73a:	mov    rax,QWORD PTR [rcx]
   14003f73d:	call   QWORD PTR [rax+0x8]
   14003f740:	mov    rax,QWORD PTR [rbx+0x10]
   14003f744:	or     DWORD PTR [rax+0x10],0xffffffff
   14003f748:	mov    rax,QWORD PTR [rbx+0x10]
   14003f74c:	and    DWORD PTR [rax+0x8],0x0
   14003f750:	mov    rax,QWORD PTR [rbx+0x10]
   14003f754:	and    WORD PTR [rax+0x18],0x0
   14003f759:	add    rsp,0x20
   14003f75d:	pop    rbx
   14003f75e:	ret    
   14003f75f:	int3   
   14003f760:	mov    rax,rsp
   14003f763:	mov    QWORD PTR [rax+0x8],rbx
   14003f767:	mov    QWORD PTR [rax+0x10],rbp
   14003f76b:	mov    QWORD PTR [rax+0x18],rsi
   14003f76f:	mov    QWORD PTR [rax+0x20],rdi
   14003f773:	push   r12
   14003f775:	sub    rsp,0x20
   14003f779:	cmp    rdx,QWORD PTR [rcx+0x10]
   14003f77d:	mov    r12d,r9d
   14003f780:	mov    ebp,r8d
   14003f783:	mov    rdi,rdx
   14003f786:	mov    rsi,rcx
   14003f789:	je     0x14003f7b4
   14003f78b:	mov    rax,QWORD PTR [rcx+0x8]
   14003f78f:	mov    QWORD PTR [rdx],rax
   14003f792:	mov    rcx,QWORD PTR [rcx+0x8]
   14003f796:	mov    rax,QWORD PTR [rcx]
   14003f799:	call   QWORD PTR [rax+0x10]
   14003f79c:	test   rax,rax
   14003f79f:	mov    rbx,rax
   14003f7a2:	jne    0x14003f7ac
   14003f7a4:	mov    QWORD PTR [rdi],rsi
   14003f7a7:	jmp    0x14003f84d
   14003f7ac:	mov    QWORD PTR [rax],rsi
   14003f7af:	jmp    0x14003f84d
   14003f7b4:	mov    r8d,DWORD PTR [rdx+0xc]
   14003f7b8:	cmp    ebp,r8d
   14003f7bb:	jle    0x14003f84a
   14003f7c1:	mov    rcx,QWORD PTR [rip+0x48ee0]        # 0x1400886a8
   14003f7c8:	test   rcx,rcx
   14003f7cb:	je     0x14003f7d8
   14003f7cd:	mov    rax,QWORD PTR [rcx]
   14003f7d0:	mov    r9,rdx
   14003f7d3:	mov    edx,ebp
   14003f7d5:	call   QWORD PTR [rax+0x8]
   14003f7d8:	mov    rcx,QWORD PTR [rsi+0x8]
   14003f7dc:	mov    r8d,r12d
   14003f7df:	mov    edx,ebp
   14003f7e1:	mov    rax,QWORD PTR [rcx]
   14003f7e4:	call   QWORD PTR [rax]
   14003f7e6:	test   rax,rax
   14003f7e9:	mov    rbx,rax
   14003f7ec:	je     0x14003f850
   14003f7ee:	mov    eax,DWORD PTR [rdi+0xc]
   14003f7f1:	imul   ebp,r12d
   14003f7f5:	lea    r8,[rdi+0x18]
   14003f7f9:	add    eax,0x1
   14003f7fc:	lea    rcx,[rbx+0x18]
   14003f800:	movsxd rdx,ebp
   14003f803:	imul   eax,r12d
   14003f807:	movsxd r9,eax
   14003f80a:	call   0x1400466d0
   14003f80f:	test   eax,eax
   14003f811:	je     0x14003f839
   14003f813:	cmp    eax,0xc
   14003f816:	je     0x14003f833
   14003f818:	cmp    eax,0x16
   14003f81b:	je     0x14003f82d
   14003f81d:	cmp    eax,0x22
   14003f820:	je     0x14003f82d
   14003f822:	cmp    eax,0x50
   14003f825:	je     0x14003f839
   14003f827:	call   0x1400208f8
   14003f82c:	int3   
   14003f82d:	call   0x1400208f8
   14003f832:	int3   
   14003f833:	call   0x1400208b0
   14003f838:	int3   
   14003f839:	mov    eax,DWORD PTR [rdi+0x10]
   14003f83c:	mov    QWORD PTR [rbx],rsi
   14003f83f:	mov    DWORD PTR [rbx+0x10],eax
   14003f842:	mov    eax,DWORD PTR [rdi+0x8]
   14003f845:	mov    DWORD PTR [rbx+0x8],eax
   14003f848:	jmp    0x14003f84d
   14003f84a:	mov    rbx,rdx
   14003f84d:	mov    rax,rbx
   14003f850:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f855:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f85a:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f85f:	mov    rdi,QWORD PTR [rsp+0x48]
   14003f864:	add    rsp,0x20
   14003f868:	pop    r12
   14003f86a:	ret    
   14003f86b:	int3   
   14003f86c:	rex push rbx
   14003f86e:	sub    rsp,0x20
   14003f872:	test   dl,0x1
   14003f875:	lea    rax,[rip+0x2d68c]        # 0x14006cf08
   14003f87c:	mov    rbx,rcx
   14003f87f:	mov    QWORD PTR [rcx],rax
   14003f882:	je     0x14003f889
   14003f884:	call   0x14001ac50
   14003f889:	mov    rax,rbx
   14003f88c:	add    rsp,0x20
   14003f890:	pop    rbx
   14003f891:	ret    
   14003f892:	int3   
   14003f893:	int3   
   14003f894:	mov    QWORD PTR [rsp+0x8],rbx
   14003f899:	push   rdi
   14003f89a:	sub    rsp,0x20
   14003f89e:	mov    rbx,rdx
   14003f8a1:	xor    edx,edx
   14003f8a3:	mov    rdi,rcx
   14003f8a6:	lea    r8d,[rdx+0x18]
   14003f8aa:	call   0x140047720
   14003f8af:	mov    rdx,rbx
   14003f8b2:	mov    rcx,rdi
   14003f8b5:	call   QWORD PTR [rip+0x24d9d]        # 0x140064658
   14003f8bb:	mov    ecx,eax
   14003f8bd:	call   0x14003f550
   14003f8c2:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f8c7:	mov    rax,rdi
   14003f8ca:	add    rsp,0x20
   14003f8ce:	pop    rdi
   14003f8cf:	ret    
   14003f8d0:	mov    QWORD PTR [rsp+0x8],rbx
   14003f8d5:	push   rdi
   14003f8d6:	sub    rsp,0x20
   14003f8da:	mov    rbx,rdx
   14003f8dd:	xor    edx,edx
   14003f8df:	mov    rdi,rcx
   14003f8e2:	lea    r8d,[rdx+0x18]
   14003f8e6:	call   0x140047720
   14003f8eb:	mov    rdx,rbx
   14003f8ee:	mov    rcx,rdi
   14003f8f1:	call   QWORD PTR [rip+0x24d61]        # 0x140064658
   14003f8f7:	mov    ecx,eax
   14003f8f9:	call   0x14003f550
   14003f8fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f903:	mov    rax,rdi
   14003f906:	add    rsp,0x20
   14003f90a:	pop    rdi
   14003f90b:	ret    
   14003f90c:	mov    QWORD PTR [rsp+0x8],rbx
   14003f911:	push   rdi
   14003f912:	sub    rsp,0x20
   14003f916:	mov    rbx,rdx
   14003f919:	xor    edx,edx
   14003f91b:	mov    rdi,rcx
   14003f91e:	lea    r8d,[rdx+0x18]
   14003f922:	call   0x140047720
   14003f927:	mov    rdx,rbx
   14003f92a:	mov    rcx,rdi
   14003f92d:	call   QWORD PTR [rip+0x24d25]        # 0x140064658
   14003f933:	mov    ecx,eax
   14003f935:	call   0x14003f550
   14003f93a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f93f:	mov    rax,rdi
   14003f942:	add    rsp,0x20
   14003f946:	pop    rdi
   14003f947:	ret    
   14003f948:	mov    QWORD PTR [rsp+0x8],rbx
   14003f94d:	push   rdi
   14003f94e:	sub    rsp,0x20
   14003f952:	lea    rax,[rip+0x2d5e7]        # 0x14006cf40
   14003f959:	mov    rdi,rcx
   14003f95c:	mov    QWORD PTR [rcx],rax
   14003f95f:	add    rcx,0x18
   14003f963:	call   0x140002cb0
   14003f968:	mov    rdx,QWORD PTR [rdi+0x18]
   14003f96c:	sub    rdx,0x18
   14003f970:	or     eax,0xffffffff
   14003f973:	lock xadd DWORD PTR [rdx+0x10],eax
   14003f978:	add    eax,0xffffffff
   14003f97b:	test   eax,eax
   14003f97d:	jg     0x14003f988
   14003f97f:	mov    rcx,QWORD PTR [rdx]
   14003f982:	mov    rax,QWORD PTR [rcx]
   14003f985:	call   QWORD PTR [rax+0x8]
   14003f988:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f98d:	lea    rax,[rip+0x2d574]        # 0x14006cf08
   14003f994:	mov    QWORD PTR [rdi],rax
   14003f997:	add    rsp,0x20
   14003f99b:	pop    rdi
   14003f99c:	ret    
   14003f99d:	int3   
   14003f99e:	int3   
   14003f99f:	int3   
   14003f9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14003f9a5:	mov    QWORD PTR [rsp+0x10],rsi
   14003f9aa:	push   rdi
   14003f9ab:	sub    rsp,0x20
   14003f9af:	lea    rax,[rip+0x2d58a]        # 0x14006cf40
   14003f9b6:	mov    rdi,rcx
   14003f9b9:	mov    esi,edx
   14003f9bb:	mov    QWORD PTR [rcx],rax
   14003f9be:	add    rcx,0x18
   14003f9c2:	call   0x140002cb0
   14003f9c7:	mov    rdx,QWORD PTR [rdi+0x18]
   14003f9cb:	sub    rdx,0x18
   14003f9cf:	or     eax,0xffffffff
   14003f9d2:	lock xadd DWORD PTR [rdx+0x10],eax
   14003f9d7:	add    eax,0xffffffff
   14003f9da:	test   eax,eax
   14003f9dc:	jg     0x14003f9e7
   14003f9de:	mov    rcx,QWORD PTR [rdx]
   14003f9e1:	mov    rax,QWORD PTR [rcx]
   14003f9e4:	call   QWORD PTR [rax+0x8]
   14003f9e7:	test   sil,0x1
   14003f9eb:	lea    rax,[rip+0x2d516]        # 0x14006cf08
   14003f9f2:	mov    QWORD PTR [rdi],rax
   14003f9f5:	je     0x14003f9ff
   14003f9f7:	mov    rcx,rdi
   14003f9fa:	call   0x14001ac50
   14003f9ff:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fa04:	mov    rsi,QWORD PTR [rsp+0x38]
   14003fa09:	mov    rax,rdi
   14003fa0c:	add    rsp,0x20
   14003fa10:	pop    rdi
   14003fa11:	ret    
   14003fa12:	int3   
   14003fa13:	int3   
   14003fa14:	mov    QWORD PTR [rsp+0x8],rcx
   14003fa19:	push   rdi
   14003fa1a:	sub    rsp,0x30
   14003fa1e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003fa27:	mov    QWORD PTR [rsp+0x48],rbx
   14003fa2c:	mov    rbx,rdx
   14003fa2f:	mov    rdi,rcx
   14003fa32:	call   0x14002b874
   14003fa37:	lea    rcx,[rip+0x2d4ca]        # 0x14006cf08
   14003fa3e:	mov    QWORD PTR [rdi],rcx
   14003fa41:	mov    QWORD PTR [rdi+0x8],rax
   14003fa45:	lea    rax,[rdi+0x20]
   14003fa49:	mov    QWORD PTR [rdi+0x10],rax
   14003fa4d:	or     DWORD PTR [rax+0x10],0xffffffff
   14003fa51:	mov    rax,QWORD PTR [rdi+0x10]
   14003fa55:	and    DWORD PTR [rax+0x8],0x0
   14003fa59:	mov    rax,QWORD PTR [rdi+0x10]
   14003fa5d:	mov    DWORD PTR [rax+0xc],0x100
   14003fa64:	mov    rax,QWORD PTR [rdi+0x10]
   14003fa68:	mov    QWORD PTR [rax],rdi
   14003fa6b:	mov    rax,QWORD PTR [rdi+0x10]
   14003fa6f:	and    WORD PTR [rax+0x18],0x0
   14003fa74:	lea    rcx,[rdi+0x18]
   14003fa78:	mov    r8,rdi
   14003fa7b:	mov    rdx,rbx
   14003fa7e:	call   0x14002e0e0
   14003fa83:	lea    r11,[rip+0x2d4b6]        # 0x14006cf40
   14003fa8a:	mov    QWORD PTR [rdi],r11
   14003fa8d:	mov    rax,rdi
   14003fa90:	mov    rbx,QWORD PTR [rsp+0x48]
   14003fa95:	add    rsp,0x30
   14003fa99:	pop    rdi
   14003fa9a:	ret    
   14003fa9b:	int3   
   14003fa9c:	int3   
   14003fa9d:	int3   
   14003fa9e:	int3   
   14003fa9f:	int3   
   14003faa0:	int3   
   14003faa1:	int3   
   14003faa2:	int3   
   14003faa3:	int3   
   14003faa4:	rex push rbp
   14003faa6:	sub    rsp,0x20
   14003faaa:	mov    rbp,rdx
   14003faad:	mov    rcx,QWORD PTR [rbp+0x40]
   14003fab1:	call   0x14003f684
   14003fab6:	add    rsp,0x20
   14003faba:	pop    rbp
   14003fabb:	ret    
   14003fabc:	rex push rbx
   14003fabe:	sub    rsp,0x270
   14003fac5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003face:	mov    rbx,rcx
   14003fad1:	mov    WORD PTR [rcx],0x8
   14003fad6:	and    QWORD PTR [rcx+0x8],0x0
   14003fadb:	test   rdx,rdx
   14003fade:	je     0x14003fb3e
   14003fae0:	lea    rcx,[rsp+0x28]
   14003fae5:	call   0x14003fa14
   14003faea:	nop
   14003faeb:	mov    rcx,QWORD PTR [rax+0x18]
   14003faef:	mov    edx,DWORD PTR [rcx-0x10]
   14003faf2:	call   QWORD PTR [rip+0x24bb0]        # 0x1400646a8
   14003faf8:	test   rax,rax
   14003fafb:	jne    0x14003fb03
   14003fafd:	call   0x1400021a0
   14003fb02:	int3   
   14003fb03:	mov    QWORD PTR [rbx+0x8],rax
   14003fb07:	lea    rax,[rip+0x2d432]        # 0x14006cf40
   14003fb0e:	mov    QWORD PTR [rsp+0x28],rax
   14003fb13:	lea    rcx,[rsp+0x40]
   14003fb18:	call   0x140002cb0
   14003fb1d:	mov    rdx,QWORD PTR [rsp+0x40]
   14003fb22:	add    rdx,0xffffffffffffffe8
   14003fb26:	or     eax,0xffffffff
   14003fb29:	lock xadd DWORD PTR [rdx+0x10],eax
   14003fb2e:	add    eax,0xffffffff
   14003fb31:	test   eax,eax
   14003fb33:	jg     0x14003fb3e
   14003fb35:	mov    rcx,QWORD PTR [rdx]
   14003fb38:	mov    rax,QWORD PTR [rcx]
   14003fb3b:	call   QWORD PTR [rax+0x8]
   14003fb3e:	mov    rax,rbx
   14003fb41:	add    rsp,0x270
   14003fb48:	pop    rbx
   14003fb49:	ret    
   14003fb4a:	int3   
   14003fb4b:	int3   
   14003fb4c:	rex push rbp
   14003fb4e:	sub    rsp,0x20
   14003fb52:	mov    rbp,rdx
   14003fb55:	lea    rcx,[rbp+0x28]
   14003fb59:	call   0x14003f948
   14003fb5e:	add    rsp,0x20
   14003fb62:	pop    rbp
   14003fb63:	ret    
   14003fb64:	mov    QWORD PTR [rsp+0x8],rbx
   14003fb69:	push   rdi
   14003fb6a:	sub    rsp,0x20
   14003fb6e:	test   rcx,rcx
   14003fb71:	mov    edi,r8d
   14003fb74:	mov    rbx,rdx
   14003fb77:	jne    0x14003fb7f
   14003fb79:	call   0x1400208f8
   14003fb7e:	int3   
   14003fb7f:	call   QWORD PTR [rip+0x24bfb]        # 0x140064780
   14003fb85:	test   rbx,rbx
   14003fb88:	jne    0x14003fb98
   14003fb8a:	mov    rcx,rax
   14003fb8d:	call   QWORD PTR [rip+0x248ed]        # 0x140064480
   14003fb93:	add    eax,0x1
   14003fb96:	jmp    0x14003fbd6
   14003fb98:	mov    rdx,rdi
   14003fb9b:	or     r9,0xffffffffffffffff
   14003fb9f:	mov    r8,rax
   14003fba2:	mov    rcx,rbx
   14003fba5:	call   0x140047200
   14003fbaa:	test   eax,eax
   14003fbac:	je     0x14003fbd4
   14003fbae:	cmp    eax,0xc
   14003fbb1:	je     0x14003fbce
   14003fbb3:	cmp    eax,0x16
   14003fbb6:	je     0x14003fbc8
   14003fbb8:	cmp    eax,0x22
   14003fbbb:	je     0x14003fbc8
   14003fbbd:	cmp    eax,0x50
   14003fbc0:	je     0x14003fbd4
   14003fbc2:	call   0x1400208f8
   14003fbc7:	int3   
   14003fbc8:	call   0x1400208f8
   14003fbcd:	int3   
   14003fbce:	call   0x1400208b0
   14003fbd3:	int3   
   14003fbd4:	xor    eax,eax
   14003fbd6:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fbdb:	add    rsp,0x20
   14003fbdf:	pop    rdi
   14003fbe0:	ret    
   14003fbe1:	int3   
   14003fbe2:	int3   
   14003fbe3:	int3   
   14003fbe4:	mov    QWORD PTR [rsp+0x10],rbx
   14003fbe9:	mov    QWORD PTR [rsp+0x18],rsi
   14003fbee:	mov    QWORD PTR [rsp+0x20],rdi
   14003fbf3:	push   r12
   14003fbf5:	sub    rsp,0x650
   14003fbfc:	mov    rax,QWORD PTR [rip+0x4716d]        # 0x140086d70
   14003fc03:	xor    rax,rsp
   14003fc06:	mov    QWORD PTR [rsp+0x640],rax
   14003fc0e:	mov    rbx,rcx
   14003fc11:	call   0x140021a70
   14003fc16:	mov    rdx,QWORD PTR [rbx+0x88]
   14003fc1d:	mov    QWORD PTR [rax+0x10],rdx
   14003fc21:	mov    rdx,QWORD PTR [rbx+0x88]
   14003fc28:	mov    r12d,0x104
   14003fc2e:	mov    QWORD PTR [rax+0x18],rdx
   14003fc32:	mov    rcx,QWORD PTR [rbx+0x88]
   14003fc39:	lea    rdx,[rsp+0x20]
   14003fc3e:	mov    r8d,r12d
   14003fc41:	mov    rsi,rax
   14003fc44:	call   QWORD PTR [rip+0x24906]        # 0x140064550
   14003fc4a:	test   eax,eax
   14003fc4c:	je     0x14003fc53
   14003fc4e:	cmp    eax,r12d
   14003fc51:	jne    0x14003fc58
   14003fc53:	call   0x14002a918
   14003fc58:	lea    rcx,[rsp+0x20]
   14003fc5d:	call   QWORD PTR [rip+0x24b15]        # 0x140064778
   14003fc63:	test   rax,rax
   14003fc66:	mov    rdi,rax
   14003fc69:	jne    0x14003fc70
   14003fc6b:	call   0x14002a918
   14003fc70:	and    WORD PTR [rdi],0x0
   14003fc74:	lea    rdx,[rsp+0x230]
   14003fc7c:	lea    rcx,[rsp+0x20]
   14003fc81:	mov    r8d,r12d
   14003fc84:	call   0x14003fb64
   14003fc89:	test   eax,eax
   14003fc8b:	je     0x14003fc92
   14003fc8d:	call   0x14002a918
   14003fc92:	cmp    QWORD PTR [rbx+0xc0],0x0
   14003fc9a:	jne    0x14003fcbb
   14003fc9c:	lea    rcx,[rsp+0x230]
   14003fca4:	call   0x140048830
   14003fca9:	test   rax,rax
   14003fcac:	mov    QWORD PTR [rbx+0xc0],rax
   14003fcb3:	jne    0x14003fcbb
   14003fcb5:	call   0x1400208b0
   14003fcba:	int3   
   14003fcbb:	mov    rax,QWORD PTR [rbx+0xa0]
   14003fcc2:	test   rax,rax
   14003fcc5:	jne    0x14003fd09
   14003fcc7:	lea    rdx,[rsp+0x440]
   14003fccf:	mov    r8d,0x100
   14003fcd5:	mov    ecx,0xe000
   14003fcda:	call   0x14002b77c
   14003fcdf:	lea    rcx,[rsp+0x440]
   14003fce7:	test   eax,eax
   14003fce9:	jne    0x14003fcf2
   14003fceb:	mov    rcx,QWORD PTR [rbx+0xc0]
   14003fcf2:	call   0x140048830
   14003fcf7:	test   rax,rax
   14003fcfa:	mov    QWORD PTR [rbx+0xa0],rax
   14003fd01:	jne    0x14003fd09
   14003fd03:	call   0x1400208b0
   14003fd08:	int3   
   14003fd09:	mov    QWORD PTR [rsi+0x20],rax
   14003fd0d:	cmp    QWORD PTR [rbx+0xc8],0x0
   14003fd15:	jne    0x14003fdc7
   14003fd1b:	lea    rcx,[rsp+0x20]
   14003fd20:	mov    rax,rdi
   14003fd23:	mov    rdx,r12
   14003fd26:	sub    rax,rcx
   14003fd29:	mov    rcx,rdi
   14003fd2c:	sar    rax,1
   14003fd2f:	sub    rdx,rax
   14003fd32:	cmp    DWORD PTR [rbx+0xd8],0x1
   14003fd39:	jne    0x14003fd71
   14003fd3b:	lea    r8,[rip+0x2d29e]        # 0x14006cfe0
   14003fd42:	call   0x140047080
   14003fd47:	test   eax,eax
   14003fd49:	je     0x14003fda7
   14003fd4b:	cmp    eax,0xc
   14003fd4e:	je     0x14003fd6b
   14003fd50:	cmp    eax,0x16
   14003fd53:	je     0x14003fd65
   14003fd55:	cmp    eax,0x22
   14003fd58:	je     0x14003fd65
   14003fd5a:	cmp    eax,0x50
   14003fd5d:	je     0x14003fda7
   14003fd5f:	call   0x1400208f8
   14003fd64:	int3   
   14003fd65:	call   0x1400208f8
   14003fd6a:	int3   
   14003fd6b:	call   0x1400208b0
   14003fd70:	int3   
   14003fd71:	lea    r8,[rip+0x2d258]        # 0x14006cfd0
   14003fd78:	call   0x140047080
   14003fd7d:	test   eax,eax
   14003fd7f:	je     0x14003fda7
   14003fd81:	cmp    eax,0xc
   14003fd84:	je     0x14003fda1
   14003fd86:	cmp    eax,0x16
   14003fd89:	je     0x14003fd9b
   14003fd8b:	cmp    eax,0x22
   14003fd8e:	je     0x14003fd9b
   14003fd90:	cmp    eax,0x50
   14003fd93:	je     0x14003fda7
   14003fd95:	call   0x1400208f8
   14003fd9a:	int3   
   14003fd9b:	call   0x1400208f8
   14003fda0:	int3   
   14003fda1:	call   0x1400208b0
   14003fda6:	int3   
   14003fda7:	lea    rcx,[rsp+0x20]
   14003fdac:	call   0x140048830
   14003fdb1:	test   rax,rax
   14003fdb4:	mov    QWORD PTR [rbx+0xc8],rax
   14003fdbb:	jne    0x14003fdc3
   14003fdbd:	call   0x1400208b0
   14003fdc2:	int3   
   14003fdc3:	and    WORD PTR [rdi],0x0
   14003fdc7:	cmp    QWORD PTR [rbx+0xd0],0x0
   14003fdcf:	jne    0x14003fe31
   14003fdd1:	lea    r8,[rip+0x2d1e8]        # 0x14006cfc0
   14003fdd8:	lea    rcx,[rsp+0x230]
   14003fde0:	mov    rdx,r12
   14003fde3:	call   0x140047130
   14003fde8:	test   eax,eax
   14003fdea:	je     0x14003fe12
   14003fdec:	cmp    eax,0xc
   14003fdef:	je     0x14003fe0c
   14003fdf1:	cmp    eax,0x16
   14003fdf4:	je     0x14003fe06
   14003fdf6:	cmp    eax,0x22
   14003fdf9:	je     0x14003fe06
   14003fdfb:	cmp    eax,0x50
   14003fdfe:	je     0x14003fe12
   14003fe00:	call   0x1400208f8
   14003fe05:	int3   
   14003fe06:	call   0x1400208f8
   14003fe0b:	int3   
   14003fe0c:	call   0x1400208b0
   14003fe11:	int3   
   14003fe12:	lea    rcx,[rsp+0x230]
   14003fe1a:	call   0x140048830
   14003fe1f:	test   rax,rax
   14003fe22:	mov    QWORD PTR [rbx+0xd0],rax
   14003fe29:	jne    0x14003fe31
   14003fe2b:	call   0x1400208b0
   14003fe30:	int3   
   14003fe31:	mov    rcx,QWORD PTR [rsp+0x640]
   14003fe39:	xor    rcx,rsp
   14003fe3c:	call   0x140046470
   14003fe41:	lea    r11,[rsp+0x650]
   14003fe49:	mov    rbx,QWORD PTR [r11+0x18]
   14003fe4d:	mov    rsi,QWORD PTR [r11+0x20]
   14003fe51:	mov    rdi,QWORD PTR [r11+0x28]
   14003fe55:	mov    rsp,r11
   14003fe58:	pop    r12
   14003fe5a:	ret    
   14003fe5b:	int3   
   14003fe5c:	mov    QWORD PTR [rsp+0x8],rbx
   14003fe61:	mov    QWORD PTR [rsp+0x10],rsi
   14003fe66:	push   rdi
   14003fe67:	sub    rsp,0x20
   14003fe6b:	mov    rbx,rcx
   14003fe6e:	xor    ecx,ecx
   14003fe70:	mov    edi,r9d
   14003fe73:	mov    rsi,r8
   14003fe76:	call   QWORD PTR [rip+0x2437c]        # 0x1400641f8
   14003fe7c:	or     eax,0x8001
   14003fe81:	mov    ecx,eax
   14003fe83:	call   QWORD PTR [rip+0x2436f]        # 0x1400641f8
   14003fe89:	call   0x140021a70
   14003fe8e:	mov    rcx,rax
   14003fe91:	mov    QWORD PTR [rax+0x10],rbx
   14003fe95:	mov    QWORD PTR [rax+0x18],rbx
   14003fe99:	call   0x140020d18
   14003fe9e:	call   0x140021a70
   14003fea3:	mov    rcx,QWORD PTR [rax+0x8]
   14003fea7:	test   rcx,rcx
   14003feaa:	je     0x14003fec5
   14003feac:	mov    QWORD PTR [rcx+0x88],rbx
   14003feb3:	mov    QWORD PTR [rcx+0x90],rsi
   14003feba:	mov    DWORD PTR [rcx+0x98],edi
   14003fec0:	call   0x14003fbe4
   14003fec5:	call   0x140021a70
   14003feca:	cmp    BYTE PTR [rax+0x28],0x0
   14003fece:	jne    0x14003fed5
   14003fed0:	call   0x14001d0bc
   14003fed5:	lea    rcx,[rip+0x2d124]        # 0x14006d000
   14003fedc:	call   QWORD PTR [rip+0x246ae]        # 0x140064590
   14003fee2:	test   rax,rax
   14003fee5:	je     0x14003fefe
   14003fee7:	lea    rdx,[rip+0x2d102]        # 0x14006cff0
   14003feee:	mov    rcx,rax
   14003fef1:	call   QWORD PTR [rip+0x246f1]        # 0x1400645e8
   14003fef7:	mov    QWORD PTR [rip+0x4bd62],rax        # 0x14008bc60
   14003fefe:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ff03:	mov    rsi,QWORD PTR [rsp+0x38]
   14003ff08:	mov    eax,0x1
   14003ff0d:	add    rsp,0x20
   14003ff11:	pop    rdi
   14003ff12:	ret    
   14003ff13:	int3   
   14003ff14:	mov    edx,0x10b
   14003ff19:	mov    eax,0x1
   14003ff1e:	cmp    ecx,edx
   14003ff20:	ja     0x1400401b7
   14003ff26:	je     0x14003ff78
   14003ff28:	cmp    ecx,0x3e
   14003ff2b:	ja     0x140040066
   14003ff31:	je     0x140040060
   14003ff37:	cmp    ecx,0x19
   14003ff3a:	ja     0x14003ffda
   14003ff40:	je     0x14003ffd4
   14003ff46:	cmp    ecx,0x10
   14003ff49:	ja     0x14003ff9f
   14003ff4b:	je     0x14003ff99
   14003ff4d:	test   ecx,ecx
   14003ff4f:	je     0x14003ff96
   14003ff51:	sub    ecx,0x2
   14003ff54:	je     0x14003ff90
   14003ff56:	sub    ecx,eax
   14003ff58:	je     0x14003ff78
   14003ff5a:	sub    ecx,eax
   14003ff5c:	je     0x14003ff8a
   14003ff5e:	sub    ecx,eax
   14003ff60:	je     0x14003ff84
   14003ff62:	sub    ecx,eax
   14003ff64:	je     0x14003ff90
   14003ff66:	sub    ecx,0x5
   14003ff69:	je     0x14003ff7e
   14003ff6b:	sub    ecx,eax
   14003ff6d:	je     0x14003ff84
   14003ff6f:	cmp    ecx,0x3
   14003ff72:	jne    0x14004005f
   14003ff78:	mov    eax,0x3
   14003ff7d:	ret    
   14003ff7e:	mov    eax,0x6
   14003ff83:	ret    
   14003ff84:	mov    eax,0x5
   14003ff89:	ret    
   14003ff8a:	mov    eax,0x4
   14003ff8f:	ret    
   14003ff90:	mov    eax,0x2
   14003ff95:	ret    
   14003ff96:	xor    eax,eax
   14003ff98:	ret    
   14003ff99:	mov    eax,0x7
   14003ff9e:	ret    
   14003ff9f:	sub    ecx,0x11
   14003ffa2:	je     0x14003ff78
   14003ffa4:	sub    ecx,eax
   14003ffa6:	je     0x14003ff90
   14003ffa8:	sub    ecx,eax
   14003ffaa:	je     0x14003ff84
   14003ffac:	sub    ecx,eax
   14003ffae:	je     0x14004005a
   14003ffb4:	sub    ecx,eax
   14003ffb6:	je     0x14004005a
   14003ffbc:	sub    ecx,eax
   14003ffbe:	je     0x14004005a
   14003ffc4:	sub    ecx,eax
   14003ffc6:	je     0x14004005a
   14003ffcc:	cmp    ecx,eax
   14003ffce:	jne    0x14004005f
   14003ffd4:	mov    eax,0x9
   14003ffd9:	ret    
   14003ffda:	cmp    ecx,0x27
   14003ffdd:	ja     0x140040024
   14003ffdf:	je     0x14004001e
   14003ffe1:	sub    ecx,0x1a
   14003ffe4:	je     0x14003ff7e
   14003ffe6:	sub    ecx,eax
   14003ffe8:	je     0x14003ffd4
   14003ffea:	sub    ecx,0x2
   14003ffed:	je     0x14003ff84
   14003ffef:	sub    ecx,eax
   14003fff1:	je     0x14003ffd4
   14003fff3:	sub    ecx,0x2
   14003fff6:	je     0x140040018
   14003fff8:	sub    ecx,eax
   14003fffa:	je     0x140040012
   14003fffc:	sub    ecx,eax
   14003fffe:	je     0x14003ff78
   140040004:	sub    ecx,0x2
   140040007:	je     0x14003ff8a
   140040009:	cmp    ecx,0x2
   14004000c:	jne    0x14004005f
   14004000e:	lea    eax,[rcx+0xc]
   140040011:	ret    
   140040012:	mov    eax,0xc
   140040017:	ret    
   140040018:	mov    eax,0xb
   14004001d:	ret    
   14004001e:	mov    eax,0xd
   140040023:	ret    
   140040024:	sub    ecx,0x34
   140040027:	je     0x14003ff78
   14004002d:	sub    ecx,eax
   14004002f:	je     0x14003ff78
   140040035:	sub    ecx,eax
   140040037:	je     0x14003ff84
   14004003d:	sub    ecx,eax
   14004003f:	je     0x14003ff78
   140040045:	sub    ecx,0x2
   140040048:	je     0x14004005a
   14004004a:	sub    ecx,eax
   14004004c:	je     0x14003ff84
   140040052:	sub    ecx,eax
   140040054:	jne    0x140040113
   14004005a:	mov    eax,0xa
   14004005f:	ret    
   140040060:	mov    eax,0x8
   140040065:	ret    
   140040066:	cmp    ecx,0x6b
   140040069:	ja     0x1400400d7
   14004006b:	je     0x14003ff90
   140040071:	cmp    ecx,0x47
   140040074:	ja     0x1400400ad
   140040076:	je     0x14003ff84
   14004007c:	sub    ecx,0x40
   14004007f:	je     0x14003ff84
   140040085:	sub    ecx,eax
   140040087:	je     0x14003ff84
   14004008d:	sub    ecx,eax
   14004008f:	je     0x14003ff7e
   140040095:	sub    ecx,eax
   140040097:	je     0x14003ff78
   14004009d:	sub    ecx,eax
   14004009f:	je     0x14003ff8a
   1400400a5:	cmp    ecx,0x2
   1400400a8:	jmp    0x14003ff72
   1400400ad:	sub    ecx,0x50
   1400400b0:	je     0x14003ff84
   1400400b6:	sub    ecx,0x2
   1400400b9:	je     0x14003ff84
   1400400bf:	sub    ecx,0x3
   1400400c2:	je     0x14003ff78
   1400400c8:	sub    ecx,eax
   1400400ca:	je     0x14003ff84
   1400400d0:	cmp    ecx,0x2
   1400400d3:	jne    0x14004005f
   1400400d5:	jmp    0x14004005a
   1400400d7:	mov    edx,0x90
   1400400dc:	cmp    ecx,edx
   1400400de:	ja     0x140040147
   1400400e0:	je     0x14003ff78
   1400400e6:	cmp    ecx,0x75
   1400400e9:	ja     0x140040120
   1400400eb:	je     0x14004005a
   1400400f1:	sub    ecx,0x6c
   1400400f4:	je     0x140040012
   1400400fa:	sub    ecx,0x3
   1400400fd:	je     0x14003ff78
   140040103:	sub    ecx,eax
   140040105:	je     0x14004001e
   14004010b:	sub    ecx,eax
   14004010d:	je     0x14003ff8a
   140040113:	cmp    ecx,eax
   140040115:	jne    0x14004005f
   14004011b:	jmp    0x14003ff7e
   140040120:	sub    ecx,0x7b
   140040123:	je     0x14003ff78
   140040129:	sub    ecx,eax
   14004012b:	je     0x14003ff78
   140040131:	sub    ecx,eax
   140040133:	je     0x14003ff78
   140040139:	sub    ecx,0x6
   14004013c:	je     0x14003ffd4
   140040142:	jmp    0x14003ffcc
   140040147:	mov    edx,0xb6
   14004014c:	cmp    ecx,edx
   14004014e:	ja     0x14004018b
   140040150:	je     0x14003ff7e
   140040156:	sub    ecx,0x91
   14004015c:	je     0x14003ff99
   140040162:	sub    ecx,0x9
   140040165:	je     0x14003ff78
   14004016b:	sub    ecx,0x7
   14004016e:	je     0x14003ff78
   140040174:	sub    ecx,0x6
   140040177:	je     0x140040012
   14004017d:	cmp    ecx,0x3
   140040180:	jne    0x14004005f
   140040186:	jmp    0x14003ff84
   14004018b:	sub    ecx,0xb7
   140040191:	je     0x14003ff84
   140040197:	sub    ecx,0x8
   14004019a:	je     0x14003ff7e
   1400401a0:	sub    ecx,0x2
   1400401a3:	je     0x14003ff7e
   1400401a9:	sub    ecx,0xd
   1400401ac:	je     0x14003ff78
   1400401b2:	jmp    0x1400400a5
   1400401b7:	sub    ecx,0x3e3
   1400401bd:	je     0x14004005a
   1400401c3:	sub    ecx,eax
   1400401c5:	je     0x14004005a
   1400401cb:	sub    ecx,eax
   1400401cd:	je     0x14004005a
   1400401d3:	cmp    ecx,0x2
   1400401d6:	jmp    0x140040180
   1400401d8:	lea    rax,[rip+0x2ce49]        # 0x14006d028
   1400401df:	ret    
   1400401e0:	rex push rdi
   1400401e2:	sub    rsp,0x30
   1400401e6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400401ef:	mov    QWORD PTR [rsp+0x40],rbx
   1400401f4:	mov    QWORD PTR [rsp+0x50],rbp
   1400401f9:	mov    QWORD PTR [rsp+0x58],rsi
   1400401fe:	mov    esi,r8d
   140040201:	mov    rbp,rdx
   140040204:	mov    rdi,rcx
   140040207:	test   rdx,rdx
   14004020a:	je     0x140040335
   140040210:	test   r8d,r8d
   140040213:	je     0x140040335
   140040219:	test   r9,r9
   14004021c:	je     0x140040229
   14004021e:	mov    eax,DWORD PTR [rcx+0x10]
   140040221:	add    eax,0xf1a0
   140040226:	mov    DWORD PTR [r9],eax
   140040229:	call   0x14002b874
   14004022e:	mov    r11,rax
   140040231:	xor    ecx,ecx
   140040233:	test   rax,rax
   140040236:	setne  cl
   140040239:	test   ecx,ecx
   14004023b:	jne    0x140040248
   14004023d:	mov    ecx,0x80004005
   140040242:	call   0x140001430
   140040247:	int3   
   140040248:	mov    rax,QWORD PTR [rax]
   14004024b:	mov    rcx,r11
   14004024e:	call   QWORD PTR [rax+0x18]
   140040251:	add    rax,0x18
   140040255:	mov    QWORD PTR [rsp+0x48],rax
   14004025a:	mov    rcx,QWORD PTR [rdi+0x18]
   14004025e:	sub    rcx,0x18
   140040262:	call   0x140002da0
   140040267:	lea    rbx,[rax+0x18]
   14004026b:	mov    QWORD PTR [rsp+0x20],rbx
   140040270:	cmp    DWORD PTR [rbx-0x10],0x0
   140040274:	jne    0x14004029d
   140040276:	mov    ecx,0xf006
   14004027b:	call   0x14002b860
   140040280:	test   rax,rax
   140040283:	je     0x14004029d
   140040285:	mov    r8d,0xf006
   14004028b:	mov    rdx,rax
   14004028e:	lea    rcx,[rsp+0x20]
   140040293:	call   0x140003650
   140040298:	mov    rbx,QWORD PTR [rsp+0x20]
   14004029d:	mov    edx,DWORD PTR [rdi+0x10]
   1400402a0:	add    edx,0xf1a0
   1400402a6:	mov    r8,rbx
   1400402a9:	lea    rcx,[rsp+0x48]
   1400402ae:	call   0x14003f530
   1400402b3:	mov    rdx,rsi
   1400402b6:	or     rdi,0xffffffffffffffff
   1400402ba:	mov    r9,rdi
   1400402bd:	mov    r8,QWORD PTR [rsp+0x48]
   1400402c2:	mov    rcx,rbp
   1400402c5:	call   0x140047200
   1400402ca:	test   eax,eax
   1400402cc:	je     0x1400402f4
   1400402ce:	cmp    eax,0xc
   1400402d1:	je     0x1400402ee
   1400402d3:	cmp    eax,0x16
   1400402d6:	je     0x1400402e8
   1400402d8:	cmp    eax,0x22
   1400402db:	je     0x1400402e8
   1400402dd:	cmp    eax,0x50
   1400402e0:	je     0x1400402f4
   1400402e2:	call   0x1400208f8
   1400402e7:	int3   
   1400402e8:	call   0x1400208f8
   1400402ed:	int3   
   1400402ee:	call   0x1400208b0
   1400402f3:	nop
   1400402f4:	lea    rdx,[rbx-0x18]
   1400402f8:	mov    eax,edi
   1400402fa:	lock xadd DWORD PTR [rdx+0x10],eax
   1400402ff:	add    eax,edi
   140040301:	test   eax,eax
   140040303:	jg     0x14004030f
   140040305:	mov    rcx,QWORD PTR [rdx]
   140040308:	mov    rax,QWORD PTR [rcx]
   14004030b:	call   QWORD PTR [rax+0x8]
   14004030e:	nop
   14004030f:	mov    rdx,QWORD PTR [rsp+0x48]
   140040314:	add    rdx,0xffffffffffffffe8
   140040318:	mov    eax,edi
   14004031a:	lock xadd DWORD PTR [rdx+0x10],eax
   14004031f:	add    eax,edi
   140040321:	test   eax,eax
   140040323:	jg     0x14004032e
   140040325:	mov    rcx,QWORD PTR [rdx]
   140040328:	mov    rax,QWORD PTR [rcx]
   14004032b:	call   QWORD PTR [rax+0x8]
   14004032e:	mov    eax,0x1
   140040333:	jmp    0x140040337
   140040335:	xor    eax,eax
   140040337:	mov    rbx,QWORD PTR [rsp+0x40]
   14004033c:	mov    rbp,QWORD PTR [rsp+0x50]
   140040341:	mov    rsi,QWORD PTR [rsp+0x58]
   140040346:	add    rsp,0x30
   14004034a:	pop    rdi
   14004034b:	ret    
   14004034c:	int3   
   14004034d:	int3   
   14004034e:	int3   
   14004034f:	int3   
   140040350:	rex push rbp
   140040352:	sub    rsp,0x20
   140040356:	mov    rbp,rdx
   140040359:	lea    rcx,[rbp+0x48]
   14004035d:	call   0x1400010c0
   140040362:	add    rsp,0x20
   140040366:	pop    rbp
   140040367:	ret    
   140040368:	int3   
   140040369:	int3   
   14004036a:	int3   
   14004036b:	int3   
   14004036c:	int3   
   14004036d:	int3   
   14004036e:	int3   
   14004036f:	int3   
   140040370:	rex push rbp
   140040372:	sub    rsp,0x20
   140040376:	mov    rbp,rdx
   140040379:	lea    rcx,[rbp+0x20]
   14004037d:	call   0x1400010c0
   140040382:	add    rsp,0x20
   140040386:	pop    rbp
   140040387:	ret    
   140040388:	rex push rdi
   14004038a:	sub    rsp,0x30
   14004038e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040397:	mov    QWORD PTR [rsp+0x40],rbx
   14004039c:	mov    QWORD PTR [rsp+0x48],rsi
   1400403a1:	mov    rbx,r8
   1400403a4:	mov    edi,edx
   1400403a6:	mov    esi,ecx
   1400403a8:	mov    ecx,0x20
   1400403ad:	call   0x14001ac0c
   1400403b2:	mov    rcx,rax
   1400403b5:	mov    QWORD PTR [rsp+0x28],rax
   1400403ba:	xor    eax,eax
   1400403bc:	cmp    rcx,rax
   1400403bf:	je     0x1400403cf
   1400403c1:	mov    r9,rbx
   1400403c4:	mov    r8d,edi
   1400403c7:	mov    edx,esi
   1400403c9:	call   0x14002eedc
   1400403ce:	nop
   1400403cf:	mov    QWORD PTR [rsp+0x58],rax
   1400403d4:	lea    rdx,[rip+0x41dfd]        # 0x1400821d8
   1400403db:	lea    rcx,[rsp+0x58]
   1400403e0:	call   0x140048db0
   1400403e5:	int3   
   1400403e6:	int3   
   1400403e7:	int3   
   1400403e8:	rex push rbp
   1400403ea:	sub    rsp,0x20
   1400403ee:	mov    rbp,rdx
   1400403f1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400403f5:	call   0x140001040
   1400403fa:	add    rsp,0x20
   1400403fe:	pop    rbp
   1400403ff:	ret    
   140040400:	sub    rsp,0x28
   140040404:	test   ecx,ecx
   140040406:	mov    r8,rdx
   140040409:	mov    r9d,ecx
   14004040c:	je     0x14004041e
   14004040e:	call   0x14003ff14
   140040413:	mov    edx,r9d
   140040416:	mov    ecx,eax
   140040418:	call   0x140040388
   14004041d:	int3   
   14004041e:	add    rsp,0x28
   140040422:	ret    
   140040423:	int3   
   140040424:	mov    eax,0x8
   140040429:	cmp    edx,eax
   14004042b:	cmovb  edx,eax
   14004042e:	mov    eax,0x40
   140040433:	cmp    r8d,0x1
   140040437:	cmovbe r8d,eax
   14004043b:	and    QWORD PTR [rcx+0x10],0x0
   140040440:	and    QWORD PTR [rcx+0x8],0x0
   140040445:	mov    DWORD PTR [rcx+0x4],r8d
   140040449:	mov    DWORD PTR [rcx],edx
   14004044b:	mov    rax,rcx
   14004044e:	ret    
   14004044f:	int3   
   140040450:	rex push rbx
   140040452:	sub    rsp,0x20
   140040456:	mov    rbx,rcx
   140040459:	mov    rcx,QWORD PTR [rcx+0x8]
   14004045d:	call   0x140030360
   140040462:	and    QWORD PTR [rbx+0x8],0x0
   140040467:	and    QWORD PTR [rbx+0x10],0x0
   14004046c:	add    rsp,0x20
   140040470:	pop    rbx
   140040471:	ret    
   140040472:	int3   
   140040473:	int3   
   140040474:	jmp    0x140040450
   140040479:	int3   
   14004047a:	int3   
   14004047b:	int3   
   14004047c:	rex push rbx
   14004047e:	sub    rsp,0x20
   140040482:	cmp    QWORD PTR [rcx+0x10],0x0
   140040487:	mov    rbx,rcx
   14004048a:	jne    0x1400404c5
   14004048c:	mov    r8d,DWORD PTR [rcx]
   14004048f:	mov    edx,DWORD PTR [rcx+0x4]
   140040492:	add    rcx,0x8
   140040496:	call   0x140030328
   14004049b:	mov    edx,DWORD PTR [rbx+0x4]
   14004049e:	lea    ecx,[rdx-0x1]
   1400404a1:	lea    r11,[rax+0x8]
   1400404a5:	imul   ecx,DWORD PTR [rbx]
   1400404a8:	add    r11,rcx
   1400404ab:	add    edx,0xffffffff
   1400404ae:	js     0x1400404c5
   1400404b0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400404b4:	mov    QWORD PTR [r11],rcx
   1400404b7:	mov    eax,DWORD PTR [rbx]
   1400404b9:	mov    QWORD PTR [rbx+0x10],r11
   1400404bd:	sub    r11,rax
   1400404c0:	sub    edx,0x1
   1400404c3:	jns    0x1400404b0
   1400404c5:	mov    rax,QWORD PTR [rbx+0x10]
   1400404c9:	mov    rcx,QWORD PTR [rax]
   1400404cc:	mov    QWORD PTR [rbx+0x10],rcx
   1400404d0:	add    rsp,0x20
   1400404d4:	pop    rbx
   1400404d5:	ret    
   1400404d6:	int3   
   1400404d7:	int3   
   1400404d8:	rex push rbx
   1400404da:	push   rbp
   1400404db:	push   rsi
   1400404dc:	push   rdi
   1400404dd:	sub    rsp,0x38
   1400404e1:	mov    rbx,rdx
   1400404e4:	mov    rdi,rcx
   1400404e7:	mov    r8d,0x230
   1400404ed:	mov    rcx,rbx
   1400404f0:	xor    edx,edx
   1400404f2:	call   0x140047720
   1400404f7:	mov    r8,QWORD PTR [rdi+0x18]
   1400404fb:	lea    rcx,[rbx+0x22]
   1400404ff:	or     r9,0xffffffffffffffff
   140040503:	mov    edx,0x104
   140040508:	call   0x140047200
   14004050d:	xor    esi,esi
   14004050f:	cmp    eax,esi
   140040511:	je     0x140040539
   140040513:	cmp    eax,0xc
   140040516:	je     0x140040533
   140040518:	cmp    eax,0x16
   14004051b:	je     0x14004052d
   14004051d:	cmp    eax,0x22
   140040520:	je     0x14004052d
   140040522:	cmp    eax,0x50
   140040525:	je     0x140040539
   140040527:	call   0x1400208f8
   14004052c:	int3   
   14004052d:	call   0x1400208f8
   140040532:	int3   
   140040533:	call   0x1400208b0
   140040538:	int3   
   140040539:	mov    rcx,QWORD PTR [rdi+0x8]
   14004053d:	cmp    rcx,QWORD PTR [rip+0x2adac]        # 0x14006b2f0
   140040544:	je     0x140040697
   14004054a:	lea    r9,[rsp+0x70]
   14004054f:	lea    r8,[rsp+0x68]
   140040554:	lea    rdx,[rsp+0x60]
   140040559:	call   QWORD PTR [rip+0x23ca9]        # 0x140064208
   14004055f:	cmp    eax,esi
   140040561:	jne    0x14004056a
   140040563:	xor    eax,eax
   140040565:	jmp    0x14004069c
   14004056a:	mov    rcx,QWORD PTR [rdi+0x8]
   14004056e:	xor    edx,edx
   140040570:	call   QWORD PTR [rip+0x23c5a]        # 0x1400641d0
   140040576:	mov    ebp,0xffffffff
   14004057b:	mov    r11d,eax
   14004057e:	cmp    r11,rbp
   140040581:	mov    QWORD PTR [rbx+0x18],r11
   140040585:	je     0x140040563
   140040587:	mov    rcx,QWORD PTR [rdi+0x18]
   14004058b:	cmp    DWORD PTR [rcx-0x10],esi
   14004058e:	jne    0x140040596
   140040590:	mov    BYTE PTR [rbx+0x20],sil
   140040594:	jmp    0x1400405a7
   140040596:	call   QWORD PTR [rip+0x23c64]        # 0x140064200
   14004059c:	movzx  ecx,al
   14004059f:	cmp    eax,ebp
   1400405a1:	cmove  ecx,esi
   1400405a4:	mov    BYTE PTR [rbx+0x20],cl
   1400405a7:	lea    rdx,[rsp+0x78]
   1400405ac:	lea    rcx,[rsp+0x60]
   1400405b1:	call   QWORD PTR [rip+0x23e89]        # 0x140064440
   1400405b7:	cmp    eax,esi
   1400405b9:	je     0x1400405ea
   1400405bb:	lea    rdx,[rsp+0x20]
   1400405c0:	lea    rcx,[rsp+0x78]
   1400405c5:	call   QWORD PTR [rip+0x23e7d]        # 0x140064448
   1400405cb:	cmp    eax,esi
   1400405cd:	je     0x1400405ea
   1400405cf:	lea    rdx,[rsp+0x60]
   1400405d4:	lea    rcx,[rsp+0x78]
   1400405d9:	or     r8d,0xffffffff
   1400405dd:	call   0x14002bb24
   1400405e2:	mov    rcx,QWORD PTR [rax]
   1400405e5:	mov    QWORD PTR [rbx],rcx
   1400405e8:	jmp    0x1400405ed
   1400405ea:	mov    QWORD PTR [rbx],rsi
   1400405ed:	lea    rdx,[rsp+0x78]
   1400405f2:	lea    rcx,[rsp+0x68]
   1400405f7:	call   QWORD PTR [rip+0x23e43]        # 0x140064440
   1400405fd:	cmp    eax,esi
   1400405ff:	je     0x140040631
   140040601:	lea    rdx,[rsp+0x20]
   140040606:	lea    rcx,[rsp+0x78]
   14004060b:	call   QWORD PTR [rip+0x23e37]        # 0x140064448
   140040611:	cmp    eax,esi
   140040613:	je     0x140040631
   140040615:	lea    rdx,[rsp+0x68]
   14004061a:	lea    rcx,[rsp+0x78]
   14004061f:	or     r8d,0xffffffff
   140040623:	call   0x14002bb24
   140040628:	mov    rax,QWORD PTR [rax]
   14004062b:	mov    QWORD PTR [rbx+0x10],rax
   14004062f:	jmp    0x140040635
   140040631:	mov    QWORD PTR [rbx+0x10],rsi
   140040635:	lea    rdx,[rsp+0x78]
   14004063a:	lea    rcx,[rsp+0x70]
   14004063f:	call   QWORD PTR [rip+0x23dfb]        # 0x140064440
   140040645:	cmp    eax,esi
   140040647:	je     0x140040679
   140040649:	lea    rdx,[rsp+0x20]
   14004064e:	lea    rcx,[rsp+0x78]
   140040653:	call   QWORD PTR [rip+0x23def]        # 0x140064448
   140040659:	cmp    eax,esi
   14004065b:	je     0x140040679
   14004065d:	lea    rdx,[rsp+0x70]
   140040662:	lea    rcx,[rsp+0x78]
   140040667:	or     r8d,0xffffffff
   14004066b:	call   0x14002bb24
   140040670:	mov    rax,QWORD PTR [rax]
   140040673:	mov    QWORD PTR [rbx+0x8],rax
   140040677:	jmp    0x14004067d
   140040679:	mov    QWORD PTR [rbx+0x8],rsi
   14004067d:	cmp    QWORD PTR [rbx],rsi
   140040680:	jne    0x140040689
   140040682:	mov    rax,QWORD PTR [rbx+0x8]
   140040686:	mov    QWORD PTR [rbx],rax
   140040689:	cmp    QWORD PTR [rbx+0x10],rsi
   14004068d:	jne    0x140040697
   14004068f:	mov    rax,QWORD PTR [rbx+0x8]
   140040693:	mov    QWORD PTR [rbx+0x10],rax
   140040697:	mov    eax,0x1
   14004069c:	add    rsp,0x38
   1400406a0:	pop    rdi
   1400406a1:	pop    rsi
   1400406a2:	pop    rbp
   1400406a3:	pop    rbx
   1400406a4:	ret    
   1400406a5:	int3   
   1400406a6:	int3   
   1400406a7:	int3   
   1400406a8:	rex push rbx
   1400406aa:	sub    rsp,0x280
   1400406b1:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400406ba:	mov    rax,QWORD PTR [rip+0x466af]        # 0x140086d70
   1400406c1:	xor    rax,rsp
   1400406c4:	mov    QWORD PTR [rsp+0x270],rax
   1400406cc:	mov    rbx,rdx
   1400406cf:	mov    QWORD PTR [rsp+0x30],rdx
   1400406d4:	and    DWORD PTR [rsp+0x20],0x0
   1400406d9:	and    QWORD PTR [rsp+0x40],0x0
   1400406df:	and    QWORD PTR [rsp+0x48],0x0
   1400406e5:	and    QWORD PTR [rsp+0x50],0x0
   1400406eb:	lea    rdx,[rsp+0x40]
   1400406f0:	call   0x1400404d8
   1400406f5:	call   0x14002b874
   1400406fa:	mov    rcx,rax
   1400406fd:	xor    eax,eax
   1400406ff:	test   rcx,rcx
   140040702:	setne  al
   140040705:	test   eax,eax
   140040707:	jne    0x140040714
   140040709:	mov    ecx,0x80004005
   14004070e:	call   0x140001430
   140040713:	int3   
   140040714:	mov    rax,QWORD PTR [rcx]
   140040717:	call   QWORD PTR [rax+0x18]
   14004071a:	add    rax,0x18
   14004071e:	mov    QWORD PTR [rbx],rax
   140040721:	mov    ecx,0x1
   140040726:	mov    DWORD PTR [rsp+0x20],ecx
   14004072a:	sub    ecx,DWORD PTR [rax-0x8]
   14004072d:	mov    eax,DWORD PTR [rax-0xc]
   140040730:	sub    eax,0x100
   140040735:	or     eax,ecx
   140040737:	jge    0x140040746
   140040739:	mov    edx,0x100
   14004073e:	mov    rcx,rbx
   140040741:	call   0x140002d40
   140040746:	mov    r8d,0x100
   14004074c:	mov    rdx,QWORD PTR [rbx]
   14004074f:	lea    rcx,[rsp+0x62]
   140040754:	call   0x14003fb64
   140040759:	mov    rcx,QWORD PTR [rbx]
   14004075c:	test   rcx,rcx
   14004075f:	jne    0x140040765
   140040761:	xor    eax,eax
   140040763:	jmp    0x14004076e
   140040765:	call   0x140048610
   14004076a:	test   eax,eax
   14004076c:	js     0x140040789
   14004076e:	mov    rcx,QWORD PTR [rbx]
   140040771:	cmp    eax,DWORD PTR [rcx-0xc]
   140040774:	jg     0x140040789
   140040776:	mov    DWORD PTR [rcx-0x10],eax
   140040779:	movsxd rdx,eax
   14004077c:	mov    rcx,QWORD PTR [rbx]
   14004077f:	and    WORD PTR [rcx+rdx*2],0x0
   140040784:	mov    rax,rbx
   140040787:	jmp    0x140040794
   140040789:	mov    ecx,0x80070057
   14004078e:	call   0x140001430
   140040793:	nop
   140040794:	mov    rcx,QWORD PTR [rsp+0x270]
   14004079c:	xor    rcx,rsp
   14004079f:	call   0x140046470
   1400407a4:	add    rsp,0x280
   1400407ab:	pop    rbx
   1400407ac:	ret    
   1400407ad:	int3   
   1400407ae:	int3   
   1400407af:	int3   
   1400407b0:	int3   
   1400407b1:	int3   
   1400407b2:	int3   
   1400407b3:	int3   
   1400407b4:	int3   
   1400407b5:	int3   
   1400407b6:	int3   
   1400407b7:	int3   
   1400407b8:	rex push rbp
   1400407ba:	sub    rsp,0x20
   1400407be:	mov    rbp,rdx
   1400407c1:	mov    eax,DWORD PTR [rbp+0x20]
   1400407c4:	and    eax,0x1
   1400407c7:	test   eax,eax
   1400407c9:	je     0x1400407d8
   1400407cb:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400407cf:	mov    rcx,QWORD PTR [rbp+0x30]
   1400407d3:	call   0x1400010c0
   1400407d8:	add    rsp,0x20
   1400407dc:	pop    rbp
   1400407dd:	ret    
   1400407de:	int3   
   1400407df:	int3   
   1400407e0:	rex push rbx
   1400407e2:	sub    rsp,0x280
   1400407e9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400407f2:	mov    rax,QWORD PTR [rip+0x46577]        # 0x140086d70
   1400407f9:	xor    rax,rsp
   1400407fc:	mov    QWORD PTR [rsp+0x270],rax
   140040804:	mov    rbx,rdx
   140040807:	mov    QWORD PTR [rsp+0x30],rdx
   14004080c:	and    DWORD PTR [rsp+0x20],0x0
   140040811:	and    QWORD PTR [rsp+0x40],0x0
   140040817:	and    QWORD PTR [rsp+0x48],0x0
   14004081d:	and    QWORD PTR [rsp+0x50],0x0
   140040823:	lea    rdx,[rsp+0x40]
   140040828:	call   0x1400404d8
   14004082d:	call   0x14002b874
   140040832:	mov    rcx,rax
   140040835:	xor    eax,eax
   140040837:	test   rcx,rcx
   14004083a:	setne  al
   14004083d:	test   eax,eax
   14004083f:	jne    0x14004084c
   140040841:	mov    ecx,0x80004005
   140040846:	call   0x140001430
   14004084b:	int3   
   14004084c:	mov    rax,QWORD PTR [rcx]
   14004084f:	call   QWORD PTR [rax+0x18]
   140040852:	add    rax,0x18
   140040856:	mov    QWORD PTR [rbx],rax
   140040859:	mov    ecx,0x1
   14004085e:	mov    DWORD PTR [rsp+0x20],ecx
   140040862:	sub    ecx,DWORD PTR [rax-0x8]
   140040865:	mov    eax,DWORD PTR [rax-0xc]
   140040868:	sub    eax,0x100
   14004086d:	or     eax,ecx
   14004086f:	jge    0x14004087e
   140040871:	mov    edx,0x100
   140040876:	mov    rcx,rbx
   140040879:	call   0x140002d40
   14004087e:	mov    r8d,0x100
   140040884:	mov    rdx,QWORD PTR [rbx]
   140040887:	lea    rcx,[rsp+0x62]
   14004088c:	call   0x14002e5a8
   140040891:	mov    rcx,QWORD PTR [rbx]
   140040894:	test   rcx,rcx
   140040897:	jne    0x14004089d
   140040899:	xor    eax,eax
   14004089b:	jmp    0x1400408a6
   14004089d:	call   0x140048610
   1400408a2:	test   eax,eax
   1400408a4:	js     0x1400408c1
   1400408a6:	mov    rcx,QWORD PTR [rbx]
   1400408a9:	cmp    eax,DWORD PTR [rcx-0xc]
   1400408ac:	jg     0x1400408c1
   1400408ae:	mov    DWORD PTR [rcx-0x10],eax
   1400408b1:	movsxd rdx,eax
   1400408b4:	mov    rcx,QWORD PTR [rbx]
   1400408b7:	and    WORD PTR [rcx+rdx*2],0x0
   1400408bc:	mov    rax,rbx
   1400408bf:	jmp    0x1400408cc
   1400408c1:	mov    ecx,0x80070057
   1400408c6:	call   0x140001430
   1400408cb:	nop
   1400408cc:	mov    rcx,QWORD PTR [rsp+0x270]
   1400408d4:	xor    rcx,rsp
   1400408d7:	call   0x140046470
   1400408dc:	add    rsp,0x280
   1400408e3:	pop    rbx
   1400408e4:	ret    
   1400408e5:	int3   
   1400408e6:	int3   
   1400408e7:	int3   
   1400408e8:	int3   
   1400408e9:	int3   
   1400408ea:	int3   
   1400408eb:	int3   
   1400408ec:	int3   
   1400408ed:	int3   
   1400408ee:	int3   
   1400408ef:	int3   
   1400408f0:	rex push rbp
   1400408f2:	sub    rsp,0x20
   1400408f6:	mov    rbp,rdx
   1400408f9:	mov    eax,DWORD PTR [rbp+0x20]
   1400408fc:	and    eax,0x1
   1400408ff:	test   eax,eax
   140040901:	je     0x140040910
   140040903:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140040907:	mov    rcx,QWORD PTR [rbp+0x30]
   14004090b:	call   0x1400010c0
   140040910:	add    rsp,0x20
   140040914:	pop    rbp
   140040915:	ret    
   140040916:	int3   
   140040917:	int3   
   140040918:	rex push rbx
   14004091a:	sub    rsp,0x270
   140040921:	mov    rax,QWORD PTR [rip+0x46448]        # 0x140086d70
   140040928:	xor    rax,rsp
   14004092b:	mov    QWORD PTR [rsp+0x260],rax
   140040933:	xor    eax,eax
   140040935:	mov    rbx,rdx
   140040938:	lea    rdx,[rsp+0x30]
   14004093d:	mov    DWORD PTR [rsp+0x20],eax
   140040941:	mov    QWORD PTR [rsp+0x30],rax
   140040946:	mov    QWORD PTR [rsp+0x38],rax
   14004094b:	mov    QWORD PTR [rsp+0x40],rax
   140040950:	call   0x1400404d8
   140040955:	lea    rdx,[rsp+0x52]
   14004095a:	mov    rcx,rbx
   14004095d:	call   0x14000c360
   140040962:	mov    rax,rbx
   140040965:	mov    rcx,QWORD PTR [rsp+0x260]
   14004096d:	xor    rcx,rsp
   140040970:	call   0x140046470
   140040975:	add    rsp,0x270
   14004097c:	pop    rbx
   14004097d:	ret    
   14004097e:	int3   
   14004097f:	int3   
   140040980:	sub    rsp,0x28
   140040984:	cmp    dx,0x16
   140040988:	mov    r8,rcx
   14004098b:	jb     0x140040993
   14004098d:	call   0x1400208f8
   140040992:	int3   
   140040993:	movzx  eax,dx
   140040996:	lea    rcx,[rip+0x2c853]        # 0x14006d1f0
   14004099d:	mov    r10d,0xfffffff8
   1400409a3:	mov    edx,DWORD PTR [rcx+rax*4]
   1400409a6:	add    edx,0xf
   1400409a9:	and    edx,r10d
   1400409ac:	mov    cl,BYTE PTR [r8]
   1400409af:	test   cl,cl
   1400409b1:	je     0x1400409f3
   1400409b3:	cmp    cl,0xff
   1400409b6:	je     0x1400409e7
   1400409b8:	lea    rax,[rip+0x2c771]        # 0x14006d130
   1400409bf:	test   cl,0x40
   1400409c2:	lea    r9,[rip+0x2c7c7]        # 0x14006d190
   1400409c9:	cmove  r9,rax
   1400409cd:	mov    al,cl
   1400409cf:	and    al,0xbf
   1400409d1:	cmp    al,0x16
   1400409d3:	jae    0x1400409ed
   1400409d5:	mov    al,cl
   1400409d7:	and    eax,0xbf
   1400409dc:	mov    eax,DWORD PTR [r9+rax*4]
   1400409e0:	lea    edx,[rax+rdx*1+0x7]
   1400409e4:	and    edx,r10d
   1400409e7:	add    r8,0x1
   1400409eb:	jmp    0x1400409ac
   1400409ed:	call   0x1400208f8
   1400409f2:	int3   
   1400409f3:	mov    eax,edx
   1400409f5:	add    rsp,0x28
   1400409f9:	ret    
   1400409fa:	int3   
   1400409fb:	int3   
   1400409fc:	lea    rax,[rip+0x2c845]        # 0x14006d248
   140040a03:	ret    
   140040a04:	sub    rsp,0x28
   140040a08:	cmp    DWORD PTR [rcx+0x10],0x0
   140040a0c:	je     0x140040a16
   140040a0e:	mov    rcx,QWORD PTR [rcx]
   140040a11:	call   0x14001ac50
   140040a16:	add    rsp,0x28
   140040a1a:	ret    
   140040a1b:	int3   
   140040a1c:	sub    rsp,0x28
   140040a20:	test   r9,r9
   140040a23:	mov    rax,rdx
   140040a26:	je     0x140040a2c
   140040a28:	and    DWORD PTR [r9],0x0
   140040a2c:	mov    edx,r8d
   140040a2f:	mov    r8,QWORD PTR [rcx+0x18]
   140040a33:	or     r9,0xffffffffffffffff
   140040a37:	mov    rcx,rax
   140040a3a:	call   0x140047200
   140040a3f:	test   eax,eax
   140040a41:	je     0x140040a69
   140040a43:	cmp    eax,0xc
   140040a46:	je     0x140040a63
   140040a48:	cmp    eax,0x16
   140040a4b:	je     0x140040a5d
   140040a4d:	cmp    eax,0x22
   140040a50:	je     0x140040a5d
   140040a52:	cmp    eax,0x50
   140040a55:	je     0x140040a69
   140040a57:	call   0x1400208f8
   140040a5c:	int3   
   140040a5d:	call   0x1400208f8
   140040a62:	int3   
   140040a63:	call   0x1400208b0
   140040a68:	int3   
   140040a69:	mov    eax,0x1
   140040a6e:	add    rsp,0x28
   140040a72:	ret    
   140040a73:	int3   
   140040a74:	rex push rbp
   140040a76:	sub    rsp,0x30
   140040a7a:	lea    rbp,[rsp+0x20]
   140040a7f:	mov    QWORD PTR [rbp+0x20],rbx
   140040a83:	mov    rax,QWORD PTR [rip+0x462e6]        # 0x140086d70
   140040a8a:	xor    rax,rbp
   140040a8d:	mov    QWORD PTR [rbp+0x8],rax
   140040a91:	mov    bl,0x1
   140040a93:	or     rax,0xffffffffffffffff
   140040a97:	sub    rax,rcx
   140040a9a:	cmp    rax,0x4000
   140040aa0:	jb     0x140040acd
   140040aa2:	lea    rax,[rcx+0x4000]
   140040aa9:	lea    rcx,[rax+0xf]
   140040aad:	cmp    rcx,rax
   140040ab0:	ja     0x140040abc
   140040ab2:	movabs rcx,0xffffffffffffff0
   140040abc:	and    rcx,0xfffffffffffffff0
   140040ac0:	mov    rax,rcx
   140040ac3:	call   0x140063500
   140040ac8:	sub    rsp,rcx
   140040acb:	jmp    0x140040ad2
   140040acd:	xor    ebx,ebx
   140040acf:	mov    BYTE PTR [rbp+0x0],bl
   140040ad2:	jmp    0x140040adf
   140040ad4:	xor    ebx,ebx
   140040ad6:	mov    BYTE PTR [rbp+0x0],bl
   140040ad9:	call   0x14004a450
   140040ade:	nop
   140040adf:	mov    al,bl
   140040ae1:	mov    rcx,QWORD PTR [rbp+0x8]
   140040ae5:	xor    rcx,rbp
   140040ae8:	call   0x140046470
   140040aed:	mov    rbx,QWORD PTR [rbp+0x20]
   140040af1:	lea    rsp,[rbp+0x10]
   140040af5:	pop    rbp
   140040af6:	ret    
   140040af7:	int3   
   140040af8:	int3   
   140040af9:	int3   
   140040afa:	int3   
   140040afb:	int3   
   140040afc:	int3   
   140040afd:	int3   
   140040afe:	int3   
   140040aff:	int3   
   140040b00:	int3   
   140040b01:	int3   
   140040b02:	int3   
   140040b03:	int3   
   140040b04:	rex push rbx
   140040b06:	push   rbp
   140040b07:	sub    rsp,0x28
   140040b0b:	lea    rbp,[rdx+0x20]
   140040b0f:	mov    rax,QWORD PTR [rcx]
   140040b12:	xor    ebx,ebx
   140040b14:	cmp    DWORD PTR [rax],0xc00000fd
   140040b1a:	sete   bl
   140040b1d:	mov    eax,ebx
   140040b1f:	mov    eax,ebx
   140040b21:	add    rsp,0x28
   140040b25:	pop    rbp
   140040b26:	pop    rbx
   140040b27:	ret    
   140040b28:	mov    QWORD PTR [rsp+0x8],rbx
   140040b2d:	mov    QWORD PTR [rsp+0x10],rbp
   140040b32:	mov    QWORD PTR [rsp+0x18],rsi
   140040b37:	push   rdi
   140040b38:	push   r12
   140040b3a:	push   r13
   140040b3c:	sub    rsp,0x20
   140040b40:	xor    r13d,r13d
   140040b43:	mov    rsi,rdx
   140040b46:	mov    rdi,rcx
   140040b49:	cmp    rdx,r13
   140040b4c:	jge    0x140040b54
   140040b4e:	call   0x1400208f8
   140040b53:	int3   
   140040b54:	cmp    r8,r13
   140040b57:	jl     0x140040b5d
   140040b59:	mov    QWORD PTR [rcx+0x20],r8
   140040b5d:	cmp    rdx,r13
   140040b60:	jne    0x140040bb2
   140040b62:	cmp    QWORD PTR [rcx+0x8],r13
   140040b66:	je     0x140040ba5
   140040b68:	cmp    QWORD PTR [rcx+0x10],r13
   140040b6c:	mov    esi,r13d
   140040b6f:	jle    0x140040b98
   140040b71:	mov    rbx,r13
   140040b74:	mov    rcx,QWORD PTR [rdi+0x8]
   140040b78:	cmp    DWORD PTR [rbx+rcx*1+0x10],r13d
   140040b7d:	je     0x140040b88
   140040b7f:	mov    rcx,QWORD PTR [rbx+rcx*1]
   140040b83:	call   0x14001ac50
   140040b88:	add    esi,0x1
   140040b8b:	add    rbx,0x18
   140040b8f:	movsxd rax,esi
   140040b92:	cmp    rax,QWORD PTR [rdi+0x10]
   140040b96:	jl     0x140040b74
   140040b98:	mov    rcx,QWORD PTR [rdi+0x8]
   140040b9c:	call   0x14001ac50
   140040ba1:	mov    QWORD PTR [rdi+0x8],r13
   140040ba5:	mov    QWORD PTR [rdi+0x18],r13
   140040ba9:	mov    QWORD PTR [rdi+0x10],r13
   140040bad:	jmp    0x140040e12
   140040bb2:	mov    rdx,QWORD PTR [rcx+0x8]
   140040bb6:	cmp    rdx,r13
   140040bb9:	jne    0x140040c20
   140040bbb:	mov    rbp,QWORD PTR [rcx+0x20]
   140040bbf:	cmp    rsi,rbp
   140040bc2:	cmovg  rbp,rsi
   140040bc6:	lea    rbx,[rbp+rbp*2+0x0]
   140040bcb:	shl    rbx,0x3
   140040bcf:	mov    rcx,rbx
   140040bd2:	call   0x14001ac0c
   140040bd7:	mov    r8,rbx
   140040bda:	xor    edx,edx
   140040bdc:	mov    rcx,rax
   140040bdf:	mov    QWORD PTR [rdi+0x8],rax
   140040be3:	call   0x140047720
   140040be8:	cmp    rsi,r13
   140040beb:	mov    r11d,r13d
   140040bee:	jle    0x140040e0a
   140040bf4:	mov    rdx,r13
   140040bf7:	mov    rax,QWORD PTR [rdi+0x8]
   140040bfb:	lea    rcx,[rdx+rax*1]
   140040bff:	cmp    rcx,r13
   140040c02:	je     0x140040c0b
   140040c04:	mov    QWORD PTR [rcx],r13
   140040c07:	mov    QWORD PTR [rcx+0x8],r13
   140040c0b:	add    r11d,0x1
   140040c0f:	add    rdx,0x18
   140040c13:	movsxd rax,r11d
   140040c16:	cmp    rax,rsi
   140040c19:	jl     0x140040bf7
   140040c1b:	jmp    0x140040e0a
   140040c20:	mov    r8,QWORD PTR [rcx+0x18]
   140040c24:	cmp    rsi,r8
   140040c27:	jg     0x140040cf1
   140040c2d:	mov    rcx,QWORD PTR [rcx+0x10]
   140040c31:	cmp    rcx,rsi
   140040c34:	jge    0x140040ca5
   140040c36:	mov    rax,rsi
   140040c39:	sub    rax,rcx
   140040c3c:	lea    r8,[rax+rax*2]
   140040c40:	lea    rax,[rcx+rcx*2]
   140040c44:	lea    rcx,[rdx+rax*8]
   140040c48:	shl    r8,0x3
   140040c4c:	xor    edx,edx
   140040c4e:	call   0x140047720
   140040c53:	mov    rax,rsi
   140040c56:	mov    r11d,r13d
   140040c59:	sub    rax,QWORD PTR [rdi+0x10]
   140040c5d:	mov    r8,r13
   140040c60:	cmp    rax,r13
   140040c63:	jle    0x140040e0e
   140040c69:	mov    rax,QWORD PTR [rdi+0x10]
   140040c6d:	lea    rcx,[r8+rax*1]
   140040c71:	mov    rax,QWORD PTR [rdi+0x8]
   140040c75:	lea    rdx,[rcx+rcx*2]
   140040c79:	lea    rcx,[rax+rdx*8]
   140040c7d:	cmp    rcx,r13
   140040c80:	je     0x140040c89
   140040c82:	mov    QWORD PTR [rcx],r13
   140040c85:	mov    QWORD PTR [rcx+0x8],r13
   140040c89:	add    r11d,0x1
   140040c8d:	mov    rcx,rsi
   140040c90:	add    r8,0x1
   140040c94:	sub    rcx,QWORD PTR [rdi+0x10]
   140040c98:	movsxd rax,r11d
   140040c9b:	cmp    rax,rcx
   140040c9e:	jl     0x140040c69
   140040ca0:	jmp    0x140040e0e
   140040ca5:	jle    0x140040e0e
   140040cab:	sub    rcx,rsi
   140040cae:	mov    ebp,r13d
   140040cb1:	cmp    rcx,r13
   140040cb4:	jle    0x140040e0e
   140040cba:	lea    rbx,[rsi+rsi*2]
   140040cbe:	shl    rbx,0x3
   140040cc2:	mov    rcx,QWORD PTR [rdi+0x8]
   140040cc6:	cmp    DWORD PTR [rbx+rcx*1+0x10],r13d
   140040ccb:	je     0x140040cd6
   140040ccd:	mov    rcx,QWORD PTR [rbx+rcx*1]
   140040cd1:	call   0x14001ac50
   140040cd6:	mov    rcx,QWORD PTR [rdi+0x10]
   140040cda:	add    ebp,0x1
   140040cdd:	add    rbx,0x18
   140040ce1:	sub    rcx,rsi
   140040ce4:	movsxd rax,ebp
   140040ce7:	cmp    rax,rcx
   140040cea:	jl     0x140040cc2
   140040cec:	jmp    0x140040e0e
   140040cf1:	mov    rax,QWORD PTR [rcx+0x20]
   140040cf5:	cmp    rax,r13
   140040cf8:	jne    0x140040d25
   140040cfa:	mov    rax,QWORD PTR [rcx+0x10]
   140040cfe:	cqo    
   140040d00:	and    edx,0x7
   140040d03:	add    rax,rdx
   140040d06:	mov    edx,0x400
   140040d0b:	sar    rax,0x3
   140040d0f:	cmp    rax,rdx
   140040d12:	mov    rcx,rax
   140040d15:	cmovg  rax,rdx
   140040d19:	mov    edx,0x4
   140040d1e:	cmp    rcx,rdx
   140040d21:	cmovl  rax,rdx
   140040d25:	add    rax,r8
   140040d28:	mov    rbp,rsi
   140040d2b:	cmp    rsi,rax
   140040d2e:	cmovl  rbp,rax
   140040d32:	cmp    rbp,r8
   140040d35:	jge    0x140040d3d
   140040d37:	call   0x1400208f8
   140040d3c:	int3   
   140040d3d:	lea    rbx,[rbp+rbp*2+0x0]
   140040d42:	shl    rbx,0x3
   140040d46:	mov    rcx,rbx
   140040d49:	call   0x14001ac0c
   140040d4e:	mov    rcx,QWORD PTR [rdi+0x10]
   140040d52:	mov    r8,QWORD PTR [rdi+0x8]
   140040d56:	lea    r9,[rcx+rcx*2]
   140040d5a:	mov    rdx,rbx
   140040d5d:	mov    rcx,rax
   140040d60:	shl    r9,0x3
   140040d64:	mov    r12,rax
   140040d67:	call   0x1400466d0
   140040d6c:	cmp    eax,r13d
   140040d6f:	je     0x140040d97
   140040d71:	cmp    eax,0xc
   140040d74:	je     0x140040d91
   140040d76:	cmp    eax,0x16
   140040d79:	je     0x140040d8b
   140040d7b:	cmp    eax,0x22
   140040d7e:	je     0x140040d8b
   140040d80:	cmp    eax,0x50
   140040d83:	je     0x140040d97
   140040d85:	call   0x1400208f8
   140040d8a:	int3   
   140040d8b:	call   0x1400208f8
   140040d90:	int3   
   140040d91:	call   0x1400208b0
   140040d96:	int3   
   140040d97:	mov    rcx,QWORD PTR [rdi+0x10]
   140040d9b:	mov    rax,rsi
   140040d9e:	xor    edx,edx
   140040da0:	sub    rax,rcx
   140040da3:	lea    r8,[rax+rax*2]
   140040da7:	lea    rax,[rcx+rcx*2]
   140040dab:	lea    rcx,[r12+rax*8]
   140040daf:	shl    r8,0x3
   140040db3:	call   0x140047720
   140040db8:	mov    rax,rsi
   140040dbb:	mov    r11d,r13d
   140040dbe:	sub    rax,QWORD PTR [rdi+0x10]
   140040dc2:	mov    rdx,r13
   140040dc5:	cmp    rax,r13
   140040dc8:	jle    0x140040dfd
   140040dca:	mov    rax,QWORD PTR [rdi+0x10]
   140040dce:	lea    rcx,[rdx+rax*1]
   140040dd2:	lea    rax,[rcx+rcx*2]
   140040dd6:	lea    rcx,[r12+rax*8]
   140040dda:	cmp    rcx,r13
   140040ddd:	je     0x140040de6
   140040ddf:	mov    QWORD PTR [rcx],r13
   140040de2:	mov    QWORD PTR [rcx+0x8],r13
   140040de6:	add    r11d,0x1
   140040dea:	mov    rcx,rsi
   140040ded:	add    rdx,0x1
   140040df1:	sub    rcx,QWORD PTR [rdi+0x10]
   140040df5:	movsxd rax,r11d
   140040df8:	cmp    rax,rcx
   140040dfb:	jl     0x140040dca
   140040dfd:	mov    rcx,QWORD PTR [rdi+0x8]
   140040e01:	call   0x14001ac50
   140040e06:	mov    QWORD PTR [rdi+0x8],r12
   140040e0a:	mov    QWORD PTR [rdi+0x18],rbp
   140040e0e:	mov    QWORD PTR [rdi+0x10],rsi
   140040e12:	mov    rbx,QWORD PTR [rsp+0x40]
   140040e17:	mov    rbp,QWORD PTR [rsp+0x48]
   140040e1c:	mov    rsi,QWORD PTR [rsp+0x50]
   140040e21:	add    rsp,0x20
   140040e25:	pop    r13
   140040e27:	pop    r12
   140040e29:	pop    rdi
   140040e2a:	ret    
   140040e2b:	int3   
   140040e2c:	mov    rax,rsp
   140040e2f:	mov    QWORD PTR [rax+0x8],rbx
   140040e33:	mov    QWORD PTR [rax+0x10],rsi
   140040e37:	mov    QWORD PTR [rax+0x18],rdi
   140040e3b:	mov    QWORD PTR [rax+0x20],r12
   140040e3f:	push   r13
   140040e41:	sub    rsp,0x20
   140040e45:	test   r8,r8
   140040e48:	mov    rdi,r8
   140040e4b:	mov    rsi,rdx
   140040e4e:	mov    r12,rcx
   140040e51:	je     0x140040e5e
   140040e53:	test   rdx,rdx
   140040e56:	jne    0x140040e5e
   140040e58:	call   0x1400208f8
   140040e5d:	int3   
   140040e5e:	mov    eax,DWORD PTR [rcx+0x20]
   140040e61:	not    eax
   140040e63:	test   al,0x1
   140040e65:	je     0x140040eb5
   140040e67:	test   r8,r8
   140040e6a:	je     0x140040e9a
   140040e6c:	mov    ebx,0x5555555
   140040e71:	mov    rdx,rsi
   140040e74:	mov    rcx,r12
   140040e77:	cmp    rdi,rbx
   140040e7a:	cmovb  ebx,edi
   140040e7d:	lea    r8d,[rbx+rbx*2]
   140040e81:	shl    r8d,0x3
   140040e85:	call   0x140030cec
   140040e8a:	lea    rax,[rbx+rbx*2]
   140040e8e:	mov    r11d,ebx
   140040e91:	sub    rdi,r11
   140040e94:	lea    rsi,[rsi+rax*8]
   140040e98:	jne    0x140040e6c
   140040e9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140040e9f:	mov    rsi,QWORD PTR [rsp+0x38]
   140040ea4:	mov    rdi,QWORD PTR [rsp+0x40]
   140040ea9:	mov    r12,QWORD PTR [rsp+0x48]
   140040eae:	add    rsp,0x20
   140040eb2:	pop    r13
   140040eb4:	ret    
   140040eb5:	test   r8,r8
   140040eb8:	je     0x140040e9a
   140040eba:	mov    r13d,0x5555555
   140040ec0:	mov    rdx,rsi
   140040ec3:	mov    rcx,r12
   140040ec6:	cmp    rdi,r13
   140040ec9:	cmovb  r13d,edi
   140040ecd:	lea    ebx,[r13+r13*2+0x0]
   140040ed2:	shl    ebx,0x3
   140040ed5:	mov    r8d,ebx
   140040ed8:	call   0x140030784
   140040edd:	cmp    eax,ebx
   140040edf:	jne    0x140040ef4
   140040ee1:	mov    eax,r13d
   140040ee4:	sub    rdi,rax
   140040ee7:	lea    rax,[r13+r13*2+0x0]
   140040eec:	lea    rsi,[rsi+rax*8]
   140040ef0:	jne    0x140040eba
   140040ef2:	jmp    0x140040e9a
   140040ef4:	xor    edx,edx
   140040ef6:	lea    ecx,[rdx+0x3]
   140040ef9:	call   0x14003067c
   140040efe:	int3   
   140040eff:	int3   
   140040f00:	sub    rsp,0x28
   140040f04:	mov    rdx,QWORD PTR [rcx+0x10]
   140040f08:	xor    r11d,r11d
   140040f0b:	xor    r10d,r10d
   140040f0e:	test   rdx,rdx
   140040f11:	mov    r9,rcx
   140040f14:	jle    0x140040f5c
   140040f16:	xor    r8d,r8d
   140040f19:	test   r8,r8
   140040f1c:	js     0x140040f67
   140040f1e:	cmp    r10,rdx
   140040f21:	jge    0x140040f67
   140040f23:	mov    rax,QWORD PTR [r9+0x8]
   140040f27:	mov    rcx,QWORD PTR [rax+r8*1]
   140040f2b:	test   rcx,rcx
   140040f2e:	je     0x140040f61
   140040f30:	mov    rdx,QWORD PTR [rax+r8*1+0x8]
   140040f35:	test   rdx,rdx
   140040f38:	je     0x140040f61
   140040f3a:	mov    eax,DWORD PTR [rcx]
   140040f3c:	neg    eax
   140040f3e:	sbb    cx,cx
   140040f41:	add    r11d,0x1
   140040f45:	add    r10,0x1
   140040f49:	mov    WORD PTR [rdx],cx
   140040f4c:	mov    rdx,QWORD PTR [r9+0x10]
   140040f50:	movsxd rax,r11d
   140040f53:	add    r8,0x18
   140040f57:	cmp    rax,rdx
   140040f5a:	jl     0x140040f19
   140040f5c:	add    rsp,0x28
   140040f60:	ret    
   140040f61:	call   0x1400208f8
   140040f66:	int3   
   140040f67:	call   0x1400208f8
   140040f6c:	int3   
   140040f6d:	int3   
   140040f6e:	int3   
   140040f6f:	int3   
   140040f70:	mov    QWORD PTR [rsp+0x8],rbx
   140040f75:	mov    QWORD PTR [rsp+0x10],rsi
   140040f7a:	push   rdi
   140040f7b:	sub    rsp,0x20
   140040f7f:	cmp    QWORD PTR [rcx+0x8],0x0
   140040f84:	lea    rax,[rip+0x2c2f5]        # 0x14006d280
   140040f8b:	mov    rbx,rcx
   140040f8e:	mov    QWORD PTR [rcx],rax
   140040f91:	je     0x140040fca
   140040f93:	xor    esi,esi
   140040f95:	cmp    QWORD PTR [rcx+0x10],rsi
   140040f99:	jle    0x140040fc1
   140040f9b:	xor    edi,edi
   140040f9d:	mov    rcx,QWORD PTR [rbx+0x8]
   140040fa1:	cmp    DWORD PTR [rdi+rcx*1+0x10],0x0
   140040fa6:	je     0x140040fb1
   140040fa8:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140040fac:	call   0x14001ac50
   140040fb1:	add    esi,0x1
   140040fb4:	add    rdi,0x18
   140040fb8:	movsxd rax,esi
   140040fbb:	cmp    rax,QWORD PTR [rbx+0x10]
   140040fbf:	jl     0x140040f9d
   140040fc1:	mov    rcx,QWORD PTR [rbx+0x8]
   140040fc5:	call   0x14001ac50
   140040fca:	mov    rbx,QWORD PTR [rsp+0x30]
   140040fcf:	mov    rsi,QWORD PTR [rsp+0x38]
   140040fd4:	add    rsp,0x20
   140040fd8:	pop    rdi
   140040fd9:	ret    
   140040fda:	int3   
   140040fdb:	int3   
   140040fdc:	mov    QWORD PTR [rsp+0x8],rbx
   140040fe1:	push   rdi
   140040fe2:	sub    rsp,0x20
   140040fe6:	mov    eax,DWORD PTR [rdx+0x20]
   140040fe9:	mov    rdi,rdx
   140040fec:	mov    rbx,rcx
   140040fef:	not    eax
   140040ff1:	test   al,0x1
   140040ff3:	je     0x140041003
   140040ff5:	mov    rdx,QWORD PTR [rcx+0x10]
   140040ff9:	mov    rcx,rdi
   140040ffc:	call   0x140030e68
   140041001:	jmp    0x14004101a
   140041003:	mov    rcx,rdx
   140041006:	call   0x140030fb8
   14004100b:	or     r8,0xffffffffffffffff
   14004100f:	mov    rcx,rbx
   140041012:	mov    rdx,rax
   140041015:	call   0x140040b28
   14004101a:	mov    r8,QWORD PTR [rbx+0x10]
   14004101e:	mov    rdx,QWORD PTR [rbx+0x8]
   140041022:	mov    rcx,rdi
   140041025:	mov    rbx,QWORD PTR [rsp+0x30]
   14004102a:	add    rsp,0x20
   14004102e:	pop    rdi
   14004102f:	jmp    0x140040e2c
   140041034:	mov    QWORD PTR [rsp+0x8],rbx
   140041039:	push   rdi
   14004103a:	sub    rsp,0x20
   14004103e:	mov    ebx,edx
   140041040:	mov    rdi,rcx
   140041043:	call   0x140040f70
   140041048:	test   bl,0x1
   14004104b:	je     0x140041055
   14004104d:	mov    rcx,rdi
   140041050:	call   0x14001ac50
   140041055:	mov    rax,rdi
   140041058:	mov    rbx,QWORD PTR [rsp+0x30]
   14004105d:	add    rsp,0x20
   140041061:	pop    rdi
   140041062:	ret    
   140041063:	int3   
   140041064:	jmp    0x140040f70
   140041069:	int3   
   14004106a:	int3   
   14004106b:	int3   
   14004106c:	mov    QWORD PTR [rsp+0x8],rbx
   140041071:	mov    QWORD PTR [rsp+0x10],rsi
   140041076:	push   rdi
   140041077:	sub    rsp,0x20
   14004107b:	test   rdx,rdx
   14004107e:	mov    rbx,r8
   140041081:	mov    rdi,rdx
   140041084:	mov    rsi,rcx
   140041087:	jns    0x14004108f
   140041089:	call   0x1400208f8
   14004108e:	int3   
   14004108f:	cmp    rdx,QWORD PTR [rcx+0x10]
   140041093:	jl     0x1400410a2
   140041095:	add    rdx,0x1
   140041099:	or     r8,0xffffffffffffffff
   14004109d:	call   0x140040b28
   1400410a2:	mov    rax,QWORD PTR [rsi+0x8]
   1400410a6:	lea    rcx,[rdi+rdi*2]
   1400410aa:	lea    rdx,[rax+rcx*8]
   1400410ae:	cmp    rdx,rbx
   1400410b1:	je     0x1400410d1
   1400410b3:	cmp    DWORD PTR [rbx+0x10],0x0
   1400410b7:	mov    rax,QWORD PTR [rbx]
   1400410ba:	je     0x1400410c0
   1400410bc:	and    QWORD PTR [rbx],0x0
   1400410c0:	mov    QWORD PTR [rdx],rax
   1400410c3:	mov    rax,QWORD PTR [rbx+0x8]
   1400410c7:	mov    QWORD PTR [rdx+0x8],rax
   1400410cb:	mov    eax,DWORD PTR [rbx+0x10]
   1400410ce:	mov    DWORD PTR [rdx+0x10],eax
   1400410d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400410d6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400410db:	add    rsp,0x20
   1400410df:	pop    rdi
   1400410e0:	ret    
   1400410e1:	int3   
   1400410e2:	int3   
   1400410e3:	int3   
   1400410e4:	rex push rbx
   1400410e6:	sub    rsp,0x20
   1400410ea:	mov    rdx,QWORD PTR [rcx+0x30]
   1400410ee:	lea    rax,[rip+0x2c1ab]        # 0x14006d2a0
   1400410f5:	mov    rbx,rcx
   1400410f8:	sub    rdx,0x18
   1400410fc:	mov    QWORD PTR [rcx],rax
   1400410ff:	or     eax,0xffffffff
   140041102:	lock xadd DWORD PTR [rdx+0x10],eax
   140041107:	add    eax,0xffffffff
   14004110a:	test   eax,eax
   14004110c:	jg     0x140041117
   14004110e:	mov    rcx,QWORD PTR [rdx]
   140041111:	mov    rax,QWORD PTR [rcx]
   140041114:	call   QWORD PTR [rax+0x8]
   140041117:	mov    rdx,QWORD PTR [rbx+0x28]
   14004111b:	sub    rdx,0x18
   14004111f:	or     eax,0xffffffff
   140041122:	lock xadd DWORD PTR [rdx+0x10],eax
   140041127:	add    eax,0xffffffff
   14004112a:	test   eax,eax
   14004112c:	jg     0x140041137
   14004112e:	mov    rcx,QWORD PTR [rdx]
   140041131:	mov    rax,QWORD PTR [rcx]
   140041134:	call   QWORD PTR [rax+0x8]
   140041137:	mov    rdx,QWORD PTR [rbx+0x18]
   14004113b:	sub    rdx,0x18
   14004113f:	or     eax,0xffffffff
   140041142:	lock xadd DWORD PTR [rdx+0x10],eax
   140041147:	add    eax,0xffffffff
   14004114a:	test   eax,eax
   14004114c:	jg     0x140041157
   14004114e:	mov    rcx,QWORD PTR [rdx]
   140041151:	mov    rax,QWORD PTR [rcx]
   140041154:	call   QWORD PTR [rax+0x8]
   140041157:	add    rsp,0x20
   14004115b:	pop    rbx
   14004115c:	ret    
   14004115d:	int3   
   14004115e:	int3   
   14004115f:	int3   
   140041160:	mov    QWORD PTR [rsp+0x8],rbx
   140041165:	push   rdi
   140041166:	sub    rsp,0x20
   14004116a:	mov    ebx,edx
   14004116c:	mov    rdi,rcx
   14004116f:	call   0x1400410e4
   140041174:	test   bl,0x1
   140041177:	je     0x140041181
   140041179:	mov    rcx,rdi
   14004117c:	call   0x14001ac50
   140041181:	mov    rax,rdi
   140041184:	mov    rbx,QWORD PTR [rsp+0x30]
   140041189:	add    rsp,0x20
   14004118d:	pop    rdi
   14004118e:	ret    
   14004118f:	int3   
   140041190:	mov    rax,rsp
   140041193:	push   rdi
   140041194:	push   r12
   140041196:	push   r13
   140041198:	push   r14
   14004119a:	push   r15
   14004119c:	sub    rsp,0x40
   1400411a0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400411a9:	mov    QWORD PTR [rax+0x8],rbx
   1400411ad:	mov    QWORD PTR [rax+0x10],rbp
   1400411b1:	mov    QWORD PTR [rax+0x18],rsi
   1400411b5:	mov    r13,r8
   1400411b8:	mov    QWORD PTR [rdx],rcx
   1400411bb:	lea    rbx,[rdx+0x8]
   1400411bf:	cmp    WORD PTR [rsp+0x90],0x6
   1400411c8:	je     0x1400411d5
   1400411ca:	cmp    WORD PTR [rsp+0x90],0xc
   1400411d3:	jne    0x1400411dc
   1400411d5:	mov    QWORD PTR [rbx],r9
   1400411d8:	add    rbx,0x8
   1400411dc:	mov    r14,QWORD PTR [rsp+0x98]
   1400411e4:	mov    rdx,QWORD PTR [r14]
   1400411e7:	mov    QWORD PTR [rsp+0x98],rdx
   1400411ef:	xor    r15d,r15d
   1400411f2:	mov    r12d,DWORD PTR [r14+0x10]
   1400411f6:	mov    eax,DWORD PTR [r14+0x14]
   1400411fa:	mov    DWORD PTR [rsp+0x90],eax
   140041201:	cmp    BYTE PTR [r8],r15b
   140041204:	je     0x140041511
   14004120a:	sub    r12d,0x1
   14004120e:	movzx  esi,BYTE PTR [r13+0x0]
   140041213:	cmp    si,0xff
   140041218:	je     0x14004122a
   14004121a:	test   sil,0x40
   14004121e:	je     0x14004122a
   140041220:	and    si,0xffbf
   140041225:	or     si,0x4000
   14004122a:	cmp    r12d,eax
   14004122d:	jl     0x14004127f
   14004122f:	cmp    si,0xff
   140041234:	je     0x140041511
   14004123a:	movsxd rax,r12d
   14004123d:	lea    rcx,[rax+rax*2]
   140041241:	lea    rdi,[rdx+rcx*8]
   140041245:	cmp    si,0xc
   140041249:	je     0x1400412c9
   14004124b:	cmp    si,WORD PTR [rdi]
   14004124e:	je     0x1400412c9
   140041250:	mov    rax,QWORD PTR [rsp+0xa8]
   140041258:	lea    rbp,[rax+rcx*8]
   14004125c:	movzx  r9d,si
   140041260:	xor    r8d,r8d
   140041263:	mov    rdx,rdi
   140041266:	mov    rcx,rbp
   140041269:	call   QWORD PTR [rip+0x23429]        # 0x140064698
   14004126f:	mov    r11d,eax
   140041272:	test   eax,eax
   140041274:	js     0x14004151c
   14004127a:	mov    rdi,rbp
   14004127d:	jmp    0x1400412c9
   14004127f:	cmp    si,0xff
   140041284:	jne    0x14004129c
   140041286:	mov    r12d,DWORD PTR [r14+0x14]
   14004128a:	xor    eax,eax
   14004128c:	mov    DWORD PTR [rsp+0x90],eax
   140041293:	lea    r15d,[rax+0x1]
   140041297:	jmp    0x1400414fb
   14004129c:	test   r15d,r15d
   14004129f:	jne    0x140041511
   1400412a5:	cmp    si,0xc
   1400412a9:	jne    0x140041511
   1400412af:	mov    WORD PTR [rip+0x4b2e0],0xa        # 0x14008c598
   1400412b8:	mov    DWORD PTR [rip+0x4b2de],0x80020004        # 0x14008c5a0
   1400412c2:	lea    rdi,[rip+0x4b2cf]        # 0x14008c598
   1400412c9:	bt     si,0xe
   1400412ce:	jae    0x140041374
   1400412d4:	cmp    si,0x400b
   1400412d9:	jne    0x140041364
   1400412df:	cmp    QWORD PTR [rsp+0xb0],0x0
   1400412e8:	je     0x140041364
   1400412ea:	mov    rax,QWORD PTR [rdi+0x8]
   1400412ee:	xor    ebp,ebp
   1400412f0:	cmp    WORD PTR [rax],bp
   1400412f3:	setne  bpl
   1400412f7:	mov    ecx,0x4
   1400412fc:	call   0x14001ac0c
   140041301:	mov    rsi,rax
   140041304:	test   rax,rax
   140041307:	je     0x14004130d
   140041309:	mov    DWORD PTR [rax],ebp
   14004130b:	jmp    0x14004130f
   14004130d:	xor    esi,esi
   14004130f:	mov    rax,QWORD PTR [rdi+0x8]
   140041313:	mov    QWORD PTR [rsp+0x28],rsi
   140041318:	mov    QWORD PTR [rsp+0x30],rax
   14004131d:	mov    DWORD PTR [rsp+0x38],0x1
   140041325:	test   rsi,rsi
   140041328:	je     0x14004150b
   14004132e:	test   rax,rax
   140041331:	je     0x14004150b
   140041337:	lea    r8,[rsp+0x28]
   14004133c:	mov    rax,QWORD PTR [rsp+0xb0]
   140041344:	mov    rdx,QWORD PTR [rax+0x10]
   140041348:	mov    rcx,rax
   14004134b:	call   0x14004106c
   140041350:	nop
   140041351:	cmp    DWORD PTR [rsp+0x38],0x0
   140041356:	je     0x140041368
   140041358:	mov    rcx,QWORD PTR [rsp+0x28]
   14004135d:	call   0x14001ac50
   140041362:	jmp    0x140041368
   140041364:	mov    rsi,QWORD PTR [rdi+0x8]
   140041368:	mov    QWORD PTR [rbx],rsi
   14004136b:	add    rbx,0x8
   14004136f:	jmp    0x1400414e4
   140041374:	movzx  ecx,si
   140041377:	cmp    ecx,0xb
   14004137a:	jg     0x14004145a
   140041380:	cmp    ecx,0xb
   140041383:	je     0x140041445
   140041389:	sub    ecx,0x2
   14004138c:	je     0x140041434
   140041392:	sub    ecx,0x1
   140041395:	je     0x140041424
   14004139b:	sub    ecx,0x1
   14004139e:	je     0x140041416
   1400413a0:	sub    ecx,0x1
   1400413a3:	je     0x140041406
   1400413a5:	sub    ecx,0x1
   1400413a8:	je     0x1400413f6
   1400413aa:	sub    ecx,0x1
   1400413ad:	je     0x1400413e6
   1400413af:	sub    ecx,0x1
   1400413b2:	je     0x1400413d6
   1400413b4:	sub    ecx,0x1
   1400413b7:	je     0x1400414d0
   1400413bd:	cmp    ecx,0x1
   1400413c0:	jne    0x1400414e4
   1400413c6:	movsxd rax,DWORD PTR [rdi+0x8]
   1400413ca:	mov    QWORD PTR [rbx],rax
   1400413cd:	add    rbx,0x8
   1400413d1:	jmp    0x1400414e4
   1400413d6:	mov    rax,QWORD PTR [rdi+0x8]
   1400413da:	mov    QWORD PTR [rbx],rax
   1400413dd:	add    rbx,0x8
   1400413e1:	jmp    0x1400414e4
   1400413e6:	mov    rax,QWORD PTR [rdi+0x8]
   1400413ea:	mov    QWORD PTR [rbx],rax
   1400413ed:	add    rbx,0x8
   1400413f1:	jmp    0x1400414e4
   1400413f6:	mov    rax,QWORD PTR [rdi+0x8]
   1400413fa:	mov    QWORD PTR [rbx],rax
   1400413fd:	add    rbx,0x8
   140041401:	jmp    0x1400414e4
   140041406:	mov    rax,QWORD PTR [rdi+0x8]
   14004140a:	mov    QWORD PTR [rbx],rax
   14004140d:	add    rbx,0x8
   140041411:	jmp    0x1400414e4
   140041416:	mov    eax,DWORD PTR [rdi+0x8]
   140041419:	mov    DWORD PTR [rbx],eax
   14004141b:	add    rbx,0x4
   14004141f:	jmp    0x1400414e4
   140041424:	movsxd rax,DWORD PTR [rdi+0x8]
   140041428:	mov    QWORD PTR [rbx],rax
   14004142b:	add    rbx,0x8
   14004142f:	jmp    0x1400414e4
   140041434:	movsx  rax,WORD PTR [rdi+0x8]
   140041439:	mov    QWORD PTR [rbx],rax
   14004143c:	add    rbx,0x8
   140041440:	jmp    0x1400414e4
   140041445:	xor    eax,eax
   140041447:	cmp    WORD PTR [rdi+0x8],ax
   14004144b:	setne  al
   14004144e:	mov    QWORD PTR [rbx],rax
   140041451:	add    rbx,0x8
   140041455:	jmp    0x1400414e4
   14004145a:	sub    ecx,0xc
   14004145d:	je     0x1400414dd
   14004145f:	sub    ecx,0x1
   140041462:	je     0x1400414d0
   140041464:	sub    ecx,0x3
   140041467:	je     0x1400414c2
   140041469:	sub    ecx,0x1
   14004146c:	je     0x1400414b5
   14004146e:	sub    ecx,0x1
   140041471:	je     0x1400414a8
   140041473:	sub    ecx,0x1
   140041476:	je     0x14004149c
   140041478:	sub    ecx,0x1
   14004147b:	je     0x14004148f
   14004147d:	cmp    ecx,0x1
   140041480:	jne    0x1400414e4
   140041482:	mov    rax,QWORD PTR [rdi+0x8]
   140041486:	mov    QWORD PTR [rbx],rax
   140041489:	add    rbx,0x8
   14004148d:	jmp    0x1400414e4
   14004148f:	mov    rax,QWORD PTR [rdi+0x8]
   140041493:	mov    QWORD PTR [rbx],rax
   140041496:	add    rbx,0x8
   14004149a:	jmp    0x1400414e4
   14004149c:	mov    eax,DWORD PTR [rdi+0x8]
   14004149f:	mov    QWORD PTR [rbx],rax
   1400414a2:	add    rbx,0x8
   1400414a6:	jmp    0x1400414e4
   1400414a8:	movzx  eax,WORD PTR [rdi+0x8]
   1400414ac:	mov    QWORD PTR [rbx],rax
   1400414af:	add    rbx,0x8
   1400414b3:	jmp    0x1400414e4
   1400414b5:	movzx  eax,BYTE PTR [rdi+0x8]
   1400414b9:	mov    QWORD PTR [rbx],rax
   1400414bc:	add    rbx,0x8
   1400414c0:	jmp    0x1400414e4
   1400414c2:	movsx  rax,BYTE PTR [rdi+0x8]
   1400414c7:	mov    QWORD PTR [rbx],rax
   1400414ca:	add    rbx,0x8
   1400414ce:	jmp    0x1400414e4
   1400414d0:	mov    rax,QWORD PTR [rdi+0x8]
   1400414d4:	mov    QWORD PTR [rbx],rax
   1400414d7:	add    rbx,0x8
   1400414db:	jmp    0x1400414e4
   1400414dd:	mov    QWORD PTR [rbx],rdi
   1400414e0:	add    rbx,0x8
   1400414e4:	add    rbx,0x7
   1400414e8:	and    rbx,0xfffffffffffffff8
   1400414ec:	mov    eax,DWORD PTR [rsp+0x90]
   1400414f3:	mov    rdx,QWORD PTR [rsp+0x98]
   1400414fb:	add    r13,0x1
   1400414ff:	cmp    BYTE PTR [r13+0x0],0x0
   140041504:	je     0x140041511
   140041506:	jmp    0x14004120a
   14004150b:	call   0x1400208f8
   140041510:	int3   
   140041511:	test   r12d,r12d
   140041514:	jle    0x14004152c
   140041516:	mov    r11d,0x8002000e
   14004151c:	mov    rax,QWORD PTR [rsp+0xa0]
   140041524:	mov    DWORD PTR [rax],r12d
   140041527:	mov    eax,r11d
   14004152a:	jmp    0x14004154a
   14004152c:	cmp    BYTE PTR [r13+0x0],0x0
   140041531:	je     0x140041548
   140041533:	mov    ecx,DWORD PTR [r14+0x10]
   140041537:	mov    rax,QWORD PTR [rsp+0xa0]
   14004153f:	mov    DWORD PTR [rax],ecx
   140041541:	mov    eax,0x8002000f
   140041546:	jmp    0x14004154a
   140041548:	xor    eax,eax
   14004154a:	lea    r11,[rsp+0x40]
   14004154f:	mov    rbx,QWORD PTR [r11+0x30]
   140041553:	mov    rbp,QWORD PTR [r11+0x38]
   140041557:	mov    rsi,QWORD PTR [r11+0x40]
   14004155b:	mov    rsp,r11
   14004155e:	pop    r15
   140041560:	pop    r14
   140041562:	pop    r13
   140041564:	pop    r12
   140041566:	pop    rdi
   140041567:	ret    
   140041568:	int3   
   140041569:	int3   
   14004156a:	int3   
   14004156b:	int3   
   14004156c:	int3   
   14004156d:	int3   
   14004156e:	int3   
   14004156f:	int3   
   140041570:	rex push rbp
   140041572:	sub    rsp,0x20
   140041576:	mov    rbp,rdx
   140041579:	lea    rcx,[rbp+0x28]
   14004157d:	call   0x140040a04
   140041582:	add    rsp,0x20
   140041586:	pop    rbp
   140041587:	ret    
   140041588:	rex push rbp
   14004158a:	push   r12
   14004158c:	push   r13
   14004158e:	push   r14
   140041590:	push   r15
   140041592:	sub    rsp,0xe0
   140041599:	lea    rbp,[rsp+0x50]
   14004159e:	mov    QWORD PTR [rbp+0x78],0xfffffffffffffffe
   1400415a6:	mov    QWORD PTR [rbp+0xc0],rbx
   1400415ad:	mov    QWORD PTR [rbp+0xc8],rsi
   1400415b4:	mov    QWORD PTR [rbp+0xd0],rdi
   1400415bb:	mov    rax,QWORD PTR [rip+0x457ae]        # 0x140086d70
   1400415c2:	xor    rax,rbp
   1400415c5:	mov    QWORD PTR [rbp+0x88],rax
   1400415cc:	mov    rsi,r9
   1400415cf:	mov    QWORD PTR [rbp+0x40],r9
   1400415d3:	movzx  ebx,r8w
   1400415d7:	mov    r15,rdx
   1400415da:	mov    QWORD PTR [rbp+0x48],rcx
   1400415de:	mov    rdx,QWORD PTR [rcx+0x38]
   1400415e2:	lea    rcx,[rbp+0x10]
   1400415e6:	call   0x140021aec
   1400415eb:	nop
   1400415ec:	xor    edi,edi
   1400415ee:	mov    BYTE PTR [rbp+0x0],dil
   1400415f2:	lea    rax,[rbp+0x0]
   1400415f6:	cmp    QWORD PTR [r15+0x10],rdi
   1400415fa:	cmovne rax,QWORD PTR [r15+0x10]
   1400415ff:	mov    QWORD PTR [rbp+0x8],rax
   140041603:	mov    rcx,rax
   140041606:	call   QWORD PTR [rip+0x22be4]        # 0x1400641f0
   14004160c:	mov    r12d,eax
   14004160f:	mov    r14,QWORD PTR [r15+0x20]
   140041613:	movzx  r13d,WORD PTR [r15+0x18]
   140041618:	test   bl,0xc
   14004161b:	je     0x1400416e4
   140041621:	lea    ecx,[r12+0x3]
   140041626:	mov    r13d,ecx
   140041629:	call   0x140040a74
   14004162e:	cmp    al,dil
   140041631:	jne    0x14004164d
   140041633:	cmp    DWORD PTR [rbp+0x18],edi
   140041636:	je     0x140041643
   140041638:	mov    rdx,QWORD PTR [rbp+0x10]
   14004163c:	xor    ecx,ecx
   14004163e:	call   0x140020cc4
   140041643:	mov    eax,0x8007000e
   140041648:	jmp    0x140041aa4
   14004164d:	lea    rax,[r13+0xf]
   140041651:	cmp    rax,r13
   140041654:	ja     0x140041665
   140041656:	movabs rbx,0xffffffffffffff0
   140041660:	mov    rax,rbx
   140041663:	jmp    0x14004166f
   140041665:	movabs rbx,0xffffffffffffff0
   14004166f:	and    rax,0xfffffffffffffff0
   140041673:	call   0x140063500
   140041678:	sub    rsp,rax
   14004167b:	lea    r14,[rsp+0x50]
   140041680:	mov    r9,r12
   140041683:	mov    r8,QWORD PTR [rbp+0x8]
   140041687:	mov    rdx,r13
   14004168a:	mov    rcx,r14
   14004168d:	call   0x1400466d0
   140041692:	cmp    eax,edi
   140041694:	je     0x1400416bc
   140041696:	cmp    eax,0xc
   140041699:	je     0x1400416b6
   14004169b:	cmp    eax,0x16
   14004169e:	je     0x1400416b0
   1400416a0:	cmp    eax,0x22
   1400416a3:	je     0x1400416b0
   1400416a5:	cmp    eax,0x50
   1400416a8:	je     0x1400416bc
   1400416aa:	call   0x1400208f8
   1400416af:	int3   
   1400416b0:	call   0x1400208f8
   1400416b5:	int3   
   1400416b6:	call   0x1400208b0
   1400416bb:	int3   
   1400416bc:	mov    QWORD PTR [rbp+0x8],r14
   1400416c0:	movzx  ecx,WORD PTR [r15+0x18]
   1400416c5:	mov    BYTE PTR [r12+r14*1],0xff
   1400416ca:	add    r12d,0x1
   1400416ce:	mov    BYTE PTR [r12+r14*1],cl
   1400416d2:	add    r12d,0x1
   1400416d6:	mov    BYTE PTR [r12+r14*1],dil
   1400416da:	mov    r14,QWORD PTR [r15+0x28]
   1400416de:	mov    r13w,di
   1400416e2:	jmp    0x1400416ee
   1400416e4:	movabs rbx,0xffffffffffffff0
   1400416ee:	mov    r12,QWORD PTR [rbp+0xe0]
   1400416f5:	mov    eax,DWORD PTR [r12+0x10]
   1400416fa:	lea    rcx,[rax+rax*2]
   1400416fe:	shl    rcx,0x3
   140041702:	call   0x140040a74
   140041707:	cmp    al,dil
   14004170a:	jne    0x140041726
   14004170c:	cmp    DWORD PTR [rbp+0x18],edi
   14004170f:	je     0x14004171c
   140041711:	mov    rdx,QWORD PTR [rbp+0x10]
   140041715:	xor    ecx,ecx
   140041717:	call   0x140020cc4
   14004171c:	mov    eax,0x8007000e
   140041721:	jmp    0x140041aa4
   140041726:	cmp    DWORD PTR [r12+0x10],0x5555555
   14004172f:	jbe    0x14004174b
   140041731:	cmp    DWORD PTR [rbp+0x18],edi
   140041734:	je     0x140041741
   140041736:	mov    rdx,QWORD PTR [rbp+0x10]
   14004173a:	xor    ecx,ecx
   14004173c:	call   0x140020cc4
   140041741:	mov    eax,0x8007000e
   140041746:	jmp    0x140041aa4
   14004174b:	mov    eax,DWORD PTR [r12+0x10]
   140041750:	lea    r8,[rax+rax*2]
   140041754:	shl    r8,0x3
   140041758:	lea    rax,[r8+0xf]
   14004175c:	cmp    rax,r8
   14004175f:	ja     0x140041764
   140041761:	mov    rax,rbx
   140041764:	and    rax,0xfffffffffffffff0
   140041768:	call   0x140063500
   14004176d:	sub    rsp,rax
   140041770:	lea    rax,[rsp+0x50]
   140041775:	mov    QWORD PTR [rbp+0x20],rax
   140041779:	xor    edx,edx
   14004177b:	mov    rcx,rax
   14004177e:	call   0x140047720
   140041783:	movzx  edx,r13w
   140041787:	mov    rcx,QWORD PTR [rbp+0x8]
   14004178b:	call   0x140040980
   140041790:	mov    r15d,eax
   140041793:	lea    ecx,[rax+0x20]
   140041796:	mov    r12d,ecx
   140041799:	call   0x140040a74
   14004179e:	cmp    al,dil
   1400417a1:	jne    0x1400417bd
   1400417a3:	cmp    DWORD PTR [rbp+0x18],edi
   1400417a6:	je     0x1400417b3
   1400417a8:	mov    rdx,QWORD PTR [rbp+0x10]
   1400417ac:	xor    ecx,ecx
   1400417ae:	call   0x140020cc4
   1400417b3:	mov    eax,0x8007000e
   1400417b8:	jmp    0x140041aa4
   1400417bd:	lea    rax,[r12+0xf]
   1400417c2:	cmp    rax,r12
   1400417c5:	ja     0x1400417ca
   1400417c7:	mov    rax,rbx
   1400417ca:	and    rax,0xfffffffffffffff0
   1400417ce:	call   0x140063500
   1400417d3:	sub    rsp,rax
   1400417d6:	lea    r12,[rsp+0x50]
   1400417db:	lea    rax,[rip+0x2ba9e]        # 0x14006d280
   1400417e2:	mov    QWORD PTR [rbp+0x50],rax
   1400417e6:	mov    QWORD PTR [rbp+0x58],rdi
   1400417ea:	mov    QWORD PTR [rbp+0x70],rdi
   1400417ee:	mov    QWORD PTR [rbp+0x68],rdi
   1400417f2:	mov    QWORD PTR [rbp+0x60],rdi
   1400417f6:	lea    rax,[rbp+0x50]
   1400417fa:	mov    QWORD PTR [rsp+0x40],rax
   1400417ff:	mov    rax,QWORD PTR [rbp+0x20]
   140041803:	mov    QWORD PTR [rsp+0x38],rax
   140041808:	mov    rax,QWORD PTR [rbp+0xe8]
   14004180f:	mov    QWORD PTR [rsp+0x30],rax
   140041814:	mov    rax,QWORD PTR [rbp+0xe0]
   14004181b:	mov    QWORD PTR [rsp+0x28],rax
   140041820:	mov    WORD PTR [rsp+0x20],r13w
   140041826:	lea    r9,[rbp+0x28]
   14004182a:	mov    r8,QWORD PTR [rbp+0x8]
   14004182e:	mov    rdx,r12
   140041831:	mov    rcx,QWORD PTR [rbp+0x48]
   140041835:	call   0x140041190
   14004183a:	mov    DWORD PTR [rbp+0x8],eax
   14004183d:	mov    rbx,rdi
   140041840:	cmp    eax,edi
   140041842:	jne    0x1400418c3
   140041844:	movzx  eax,r13w
   140041848:	cmp    eax,0x4
   14004184b:	je     0x1400418b0
   14004184d:	cmp    eax,0x5
   140041850:	je     0x14004189b
   140041852:	cmp    eax,0x7
   140041855:	je     0x140041886
   140041857:	add    eax,0xffffffec
   14004185a:	cmp    eax,0x1
   14004185d:	ja     0x140041873
   14004185f:	mov    r8d,r15d
   140041862:	mov    rdx,r12
   140041865:	mov    rcx,r14
   140041868:	call   0x140043980
   14004186d:	mov    QWORD PTR [rbp+0x28],rax
   140041871:	jmp    0x1400418c3
   140041873:	mov    r8d,r15d
   140041876:	mov    rdx,r12
   140041879:	mov    rcx,r14
   14004187c:	call   0x140043980
   140041881:	mov    rbx,rax
   140041884:	jmp    0x1400418c3
   140041886:	mov    r8d,r15d
   140041889:	mov    rdx,r12
   14004188c:	mov    rcx,r14
   14004188f:	call   0x140043980
   140041894:	movsd  QWORD PTR [rbp+0x28],xmm0
   140041899:	jmp    0x1400418c3
   14004189b:	mov    r8d,r15d
   14004189e:	mov    rdx,r12
   1400418a1:	mov    rcx,r14
   1400418a4:	call   0x140043980
   1400418a9:	movsd  QWORD PTR [rbp+0x28],xmm0
   1400418ae:	jmp    0x1400418c3
   1400418b0:	mov    r8d,r15d
   1400418b3:	mov    rdx,r12
   1400418b6:	mov    rcx,r14
   1400418b9:	call   0x140043980
   1400418be:	movss  DWORD PTR [rbp+0x28],xmm0
   1400418c3:	mov    r12d,edi
   1400418c6:	mov    r14,QWORD PTR [rbp+0xe0]
   1400418cd:	cmp    DWORD PTR [r14+0x10],edi
   1400418d1:	jbe    0x1400418f6
   1400418d3:	mov    rsi,QWORD PTR [rbp+0x20]
   1400418d7:	mov    eax,r12d
   1400418da:	lea    rcx,[rax+rax*2]
   1400418de:	lea    rcx,[rsi+rcx*8]
   1400418e2:	call   QWORD PTR [rip+0x22db8]        # 0x1400646a0
   1400418e8:	add    r12d,0x1
   1400418ec:	cmp    r12d,DWORD PTR [r14+0x10]
   1400418f0:	jb     0x1400418d7
   1400418f2:	mov    rsi,QWORD PTR [rbp+0x40]
   1400418f6:	mov    r12d,DWORD PTR [rbp+0x8]
   1400418fa:	cmp    r12d,edi
   1400418fd:	je     0x140041921
   1400418ff:	lea    rcx,[rbp+0x50]
   140041903:	call   0x140040f70
   140041908:	nop
   140041909:	cmp    DWORD PTR [rbp+0x18],edi
   14004190c:	je     0x140041919
   14004190e:	mov    rdx,QWORD PTR [rbp+0x10]
   140041912:	xor    ecx,ecx
   140041914:	call   0x140020cc4
   140041919:	mov    eax,r12d
   14004191c:	jmp    0x140041aa4
   140041921:	lea    rcx,[rbp+0x50]
   140041925:	call   0x140040f00
   14004192a:	cmp    rsi,rdi
   14004192d:	je     0x140041a48
   140041933:	mov    WORD PTR [rsi],r13w
   140041937:	movzx  ecx,r13w
   14004193b:	cmp    ecx,0xa
   14004193e:	jg     0x1400419cd
   140041944:	cmp    ecx,0xa
   140041947:	je     0x1400419c5
   140041949:	sub    ecx,0x2
   14004194c:	je     0x140041a0f
   140041952:	sub    ecx,0x1
   140041955:	je     0x140041a0a
   14004195b:	sub    ecx,0x1
   14004195e:	je     0x1400419b6
   140041960:	sub    ecx,0x1
   140041963:	je     0x1400419a7
   140041965:	sub    ecx,0x1
   140041968:	je     0x14004199a
   14004196a:	sub    ecx,0x1
   14004196d:	je     0x14004198b
   14004196f:	sub    ecx,0x1
   140041972:	je     0x140041982
   140041974:	cmp    ecx,0x1
   140041977:	je     0x140041a1a
   14004197d:	jmp    0x140041a88
   140041982:	mov    QWORD PTR [rsi+0x8],rbx
   140041986:	jmp    0x140041a88
   14004198b:	movsd  xmm0,QWORD PTR [rbp+0x28]
   140041990:	movsd  QWORD PTR [rsi+0x8],xmm0
   140041995:	jmp    0x140041a88
   14004199a:	mov    rax,QWORD PTR [rbp+0x28]
   14004199e:	mov    QWORD PTR [rsi+0x8],rax
   1400419a2:	jmp    0x140041a88
   1400419a7:	movsd  xmm0,QWORD PTR [rbp+0x28]
   1400419ac:	movsd  QWORD PTR [rsi+0x8],xmm0
   1400419b1:	jmp    0x140041a88
   1400419b6:	movss  xmm0,DWORD PTR [rbp+0x28]
   1400419bb:	movss  DWORD PTR [rsi+0x8],xmm0
   1400419c0:	jmp    0x140041a88
   1400419c5:	mov    DWORD PTR [rsi+0x8],ebx
   1400419c8:	jmp    0x140041a88
   1400419cd:	cmp    ecx,0xb
   1400419d0:	je     0x140041a3c
   1400419d2:	cmp    ecx,0xc
   1400419d5:	je     0x140041a20
   1400419d7:	cmp    ecx,0xd
   1400419da:	je     0x140041a1a
   1400419dc:	cmp    ecx,0xf
   1400419df:	jle    0x140041a88
   1400419e5:	cmp    ecx,0x11
   1400419e8:	jle    0x140041a15
   1400419ea:	cmp    ecx,0x12
   1400419ed:	je     0x140041a0f
   1400419ef:	cmp    ecx,0x13
   1400419f2:	je     0x140041a0a
   1400419f4:	lea    eax,[rcx-0x14]
   1400419f7:	cmp    eax,0x1
   1400419fa:	ja     0x140041a88
   140041a00:	mov    rax,QWORD PTR [rbp+0x28]
   140041a04:	mov    QWORD PTR [rsi+0x8],rax
   140041a08:	jmp    0x140041a88
   140041a0a:	mov    DWORD PTR [rsi+0x8],ebx
   140041a0d:	jmp    0x140041a88
   140041a0f:	mov    WORD PTR [rsi+0x8],bx
   140041a13:	jmp    0x140041a88
   140041a15:	mov    BYTE PTR [rsi+0x8],bl
   140041a18:	jmp    0x140041a88
   140041a1a:	mov    QWORD PTR [rsi+0x8],rbx
   140041a1e:	jmp    0x140041a88
   140041a20:	lea    rcx,[rbp+0x28]
   140041a24:	mov    rax,QWORD PTR [rcx]
   140041a27:	mov    QWORD PTR [rsi],rax
   140041a2a:	mov    rax,QWORD PTR [rcx+0x8]
   140041a2e:	mov    QWORD PTR [rsi+0x8],rax
   140041a32:	mov    rax,QWORD PTR [rcx+0x10]
   140041a36:	mov    QWORD PTR [rsi+0x10],rax
   140041a3a:	jmp    0x140041a88
   140041a3c:	neg    bx
   140041a3f:	sbb    ax,ax
   140041a42:	mov    WORD PTR [rsi+0x8],ax
   140041a46:	jmp    0x140041a88
   140041a48:	movzx  ecx,r13w
   140041a4c:	sub    ecx,0x8
   140041a4f:	je     0x140041a7e
   140041a51:	sub    ecx,0x1
   140041a54:	je     0x140041a6e
   140041a56:	sub    ecx,0x3
   140041a59:	je     0x140041a62
   140041a5b:	cmp    ecx,0x1
   140041a5e:	je     0x140041a6e
   140041a60:	jmp    0x140041a88
   140041a62:	lea    rcx,[rbp+0x28]
   140041a66:	call   QWORD PTR [rip+0x22c34]        # 0x1400646a0
   140041a6c:	jmp    0x140041a88
   140041a6e:	cmp    rbx,rdi
   140041a71:	je     0x140041a88
   140041a73:	mov    rax,QWORD PTR [rbx]
   140041a76:	mov    rcx,rbx
   140041a79:	call   QWORD PTR [rax+0x10]
   140041a7c:	jmp    0x140041a88
   140041a7e:	mov    rcx,rbx
   140041a81:	call   QWORD PTR [rip+0x22c09]        # 0x140064690
   140041a87:	nop
   140041a88:	lea    rcx,[rbp+0x50]
   140041a8c:	call   0x140040f70
   140041a91:	nop
   140041a92:	cmp    DWORD PTR [rbp+0x18],edi
   140041a95:	je     0x140041aa2
   140041a97:	mov    rdx,QWORD PTR [rbp+0x10]
   140041a9b:	xor    ecx,ecx
   140041a9d:	call   0x140020cc4
   140041aa2:	xor    eax,eax
   140041aa4:	mov    rcx,QWORD PTR [rbp+0x88]
   140041aab:	xor    rcx,rbp
   140041aae:	call   0x140046470
   140041ab3:	mov    rbx,QWORD PTR [rbp+0xc0]
   140041aba:	mov    rsi,QWORD PTR [rbp+0xc8]
   140041ac1:	mov    rdi,QWORD PTR [rbp+0xd0]
   140041ac8:	lea    rsp,[rbp+0x90]
   140041acf:	pop    r15
   140041ad1:	pop    r14
   140041ad3:	pop    r13
   140041ad5:	pop    r12
   140041ad7:	pop    rbp
   140041ad8:	ret    
   140041ad9:	int3   
   140041ada:	int3   
   140041adb:	int3   
   140041adc:	int3   
   140041add:	int3   
   140041ade:	int3   
   140041adf:	int3   
   140041ae0:	int3   
   140041ae1:	int3   
   140041ae2:	int3   
   140041ae3:	int3   
   140041ae4:	int3   
   140041ae5:	int3   
   140041ae6:	int3   
   140041ae7:	int3   
   140041ae8:	rex push rbp
   140041aea:	sub    rsp,0x20
   140041aee:	lea    rbp,[rdx+0x50]
   140041af2:	lea    rcx,[rbp+0x10]
   140041af6:	call   0x1400236a8
   140041afb:	add    rsp,0x20
   140041aff:	pop    rbp
   140041b00:	ret    
   140041b01:	int3   
   140041b02:	int3   
   140041b03:	int3   
   140041b04:	int3   
   140041b05:	int3   
   140041b06:	int3   
   140041b07:	int3   
   140041b08:	rex push rbp
   140041b0a:	sub    rsp,0x20
   140041b0e:	lea    rbp,[rdx+0x50]
   140041b12:	lea    rcx,[rbp+0x50]
   140041b16:	call   0x140041064
   140041b1b:	add    rsp,0x20
   140041b1f:	pop    rbp
   140041b20:	ret    
   140041b21:	int3   
   140041b22:	int3   
   140041b23:	int3   
   140041b24:	int3   
   140041b25:	int3   
   140041b26:	int3   
   140041b27:	int3   
   140041b28:	mov    QWORD PTR [rsp+0x10],rdx
   140041b2d:	push   rbx
   140041b2e:	push   rbp
   140041b2f:	push   rsi
   140041b30:	push   rdi
   140041b31:	sub    rsp,0x58
   140041b35:	lea    rbp,[rdx+0x50]
   140041b39:	xor    edi,edi
   140041b3b:	mov    rbx,QWORD PTR [rbp+0xe0]
   140041b42:	cmp    DWORD PTR [rbx+0x10],edi
   140041b45:	jbe    0x140041b63
   140041b47:	mov    rsi,QWORD PTR [rbp+0x20]
   140041b4b:	mov    eax,edi
   140041b4d:	lea    rcx,[rax+rax*2]
   140041b51:	lea    rcx,[rsi+rcx*8]
   140041b55:	call   QWORD PTR [rip+0x22b45]        # 0x1400646a0
   140041b5b:	add    edi,0x1
   140041b5e:	cmp    edi,DWORD PTR [rbx+0x10]
   140041b61:	jb     0x140041b4b
   140041b63:	xor    edx,edx
   140041b65:	xor    ecx,ecx
   140041b67:	call   0x140048db0
   140041b6c:	nop
   140041b6d:	add    rsp,0x58
   140041b71:	pop    rdi
   140041b72:	pop    rsi
   140041b73:	pop    rbp
   140041b74:	pop    rbx
   140041b75:	ret    
   140041b76:	int3   
   140041b77:	int3   
   140041b78:	mov    QWORD PTR [rsp+0x8],rcx
   140041b7d:	push   rsi
   140041b7e:	push   rdi
   140041b7f:	push   r12
   140041b81:	sub    rsp,0x30
   140041b85:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140041b8e:	mov    QWORD PTR [rsp+0x58],rbx
   140041b93:	mov    QWORD PTR [rsp+0x60],rbp
   140041b98:	movzx  edi,r9w
   140041b9c:	mov    ebp,r8d
   140041b9f:	mov    rsi,rdx
   140041ba2:	mov    rbx,rcx
   140041ba5:	call   0x14002091c
   140041baa:	lea    r11,[rip+0x2b6ef]        # 0x14006d2a0
   140041bb1:	mov    QWORD PTR [rbx],r11
   140041bb4:	call   0x14002b874
   140041bb9:	mov    rcx,rax
   140041bbc:	xor    r9d,r9d
   140041bbf:	test   rax,rax
   140041bc2:	setne  r9b
   140041bc6:	test   r9d,r9d
   140041bc9:	jne    0x140041bd6
   140041bcb:	mov    ecx,0x80004005
   140041bd0:	call   0x140001430
   140041bd5:	int3   
   140041bd6:	mov    rax,QWORD PTR [rax]
   140041bd9:	call   QWORD PTR [rax+0x18]
   140041bdc:	add    rax,0x18
   140041be0:	mov    QWORD PTR [rbx+0x18],rax
   140041be4:	call   0x14002b874
   140041be9:	mov    r11,rax
   140041bec:	xor    ecx,ecx
   140041bee:	test   rax,rax
   140041bf1:	setne  cl
   140041bf4:	test   ecx,ecx
   140041bf6:	jne    0x140041c03
   140041bf8:	mov    ecx,0x80004005
   140041bfd:	call   0x140001430
   140041c02:	int3   
   140041c03:	mov    rax,QWORD PTR [rax]
   140041c06:	mov    rcx,r11
   140041c09:	call   QWORD PTR [rax+0x18]
   140041c0c:	add    rax,0x18
   140041c10:	mov    QWORD PTR [rbx+0x28],rax
   140041c14:	call   0x14002b874
   140041c19:	mov    r11,rax
   140041c1c:	xor    ecx,ecx
   140041c1e:	test   rax,rax
   140041c21:	setne  cl
   140041c24:	test   ecx,ecx
   140041c26:	jne    0x140041c33
   140041c28:	mov    ecx,0x80004005
   140041c2d:	call   0x140001430
   140041c32:	int3   
   140041c33:	mov    rax,QWORD PTR [rax]
   140041c36:	mov    rcx,r11
   140041c39:	call   QWORD PTR [rax+0x18]
   140041c3c:	add    rax,0x18
   140041c40:	mov    QWORD PTR [rbx+0x30],rax
   140041c44:	lea    edx,[rbp+0x60000]
   140041c4a:	neg    ebp
   140041c4c:	sbb    eax,eax
   140041c4e:	and    eax,edx
   140041c50:	mov    DWORD PTR [rbx+0x20],eax
   140041c53:	mov    WORD PTR [rbx+0x10],di
   140041c57:	test   rsi,rsi
   140041c5a:	je     0x140041c73
   140041c5c:	mov    rcx,rsi
   140041c5f:	call   0x140048610
   140041c64:	mov    r8d,eax
   140041c67:	mov    rdx,rsi
   140041c6a:	lea    rcx,[rbx+0x18]
   140041c6e:	call   0x1400037d0
   140041c73:	neg    di
   140041c76:	sbb    eax,eax
   140041c78:	not    eax
   140041c7a:	and    eax,0x8000ffff
   140041c7f:	mov    DWORD PTR [rbx+0x38],eax
   140041c82:	mov    rax,rbx
   140041c85:	mov    rbx,QWORD PTR [rsp+0x58]
   140041c8a:	mov    rbp,QWORD PTR [rsp+0x60]
   140041c8f:	add    rsp,0x30
   140041c93:	pop    r12
   140041c95:	pop    rdi
   140041c96:	pop    rsi
   140041c97:	ret    
   140041c98:	rex push rbp
   140041c9a:	sub    rsp,0x20
   140041c9e:	mov    rbp,rdx
   140041ca1:	mov    rcx,QWORD PTR [rbp+0x50]
   140041ca5:	add    rcx,0x18
   140041ca9:	call   0x1400010c0
   140041cae:	add    rsp,0x20
   140041cb2:	pop    rbp
   140041cb3:	ret    
   140041cb4:	int3   
   140041cb5:	int3   
   140041cb6:	int3   
   140041cb7:	int3   
   140041cb8:	rex push rbp
   140041cba:	sub    rsp,0x20
   140041cbe:	mov    rbp,rdx
   140041cc1:	mov    rcx,QWORD PTR [rbp+0x50]
   140041cc5:	add    rcx,0x28
   140041cc9:	call   0x1400010c0
   140041cce:	add    rsp,0x20
   140041cd2:	pop    rbp
   140041cd3:	ret    
   140041cd4:	int3   
   140041cd5:	int3   
   140041cd6:	int3   
   140041cd7:	int3   
   140041cd8:	rex push rbp
   140041cda:	sub    rsp,0x20
   140041cde:	mov    rbp,rdx
   140041ce1:	mov    rcx,QWORD PTR [rbp+0x50]
   140041ce5:	add    rcx,0x30
   140041ce9:	call   0x1400010c0
   140041cee:	add    rsp,0x20
   140041cf2:	pop    rbp
   140041cf3:	ret    
   140041cf4:	mov    QWORD PTR [rsp+0x18],rbx
   140041cf9:	mov    QWORD PTR [rsp+0x20],rbp
   140041cfe:	push   rsi
   140041cff:	push   rdi
   140041d00:	push   r13
   140041d02:	sub    rsp,0x260
   140041d09:	mov    rax,QWORD PTR [rip+0x45060]        # 0x140086d70
   140041d10:	xor    rax,rsp
   140041d13:	mov    QWORD PTR [rsp+0x250],rax
   140041d1b:	mov    rsi,rdx
   140041d1e:	xor    edx,edx
   140041d20:	mov    rdi,rcx
   140041d23:	lea    r8d,[rdx+0x40]
   140041d27:	call   0x140047720
   140041d2c:	lea    rdx,[rip+0x2b515]        # 0x14006d248
   140041d33:	mov    rcx,rsi
   140041d36:	lea    rbp,[rsp+0x50]
   140041d3b:	call   0x14002c878
   140041d40:	or     r13d,0xffffffff
   140041d44:	test   eax,eax
   140041d46:	je     0x140041def
   140041d4c:	movzx  eax,WORD PTR [rsi+0x10]
   140041d50:	mov    rbp,QWORD PTR [rsi+0x18]
   140041d54:	mov    WORD PTR [rdi],ax
   140041d57:	mov    eax,DWORD PTR [rsi+0x20]
   140041d5a:	mov    DWORD PTR [rdi+0x20],eax
   140041d5d:	mov    eax,DWORD PTR [rsi+0x38]
   140041d60:	mov    DWORD PTR [rdi+0x38],eax
   140041d63:	mov    rcx,QWORD PTR [rsi+0x28]
   140041d67:	cmp    DWORD PTR [rcx-0x10],0x0
   140041d6b:	je     0x140041da8
   140041d6d:	add    rcx,0xffffffffffffffe8
   140041d71:	call   0x140002da0
   140041d76:	lea    rbx,[rax+0x18]
   140041d7a:	mov    rcx,rbx
   140041d7d:	mov    QWORD PTR [rsp+0x38],rbx
   140041d82:	call   QWORD PTR [rip+0x228d8]        # 0x140064660
   140041d88:	lea    rdx,[rbx-0x18]
   140041d8c:	mov    QWORD PTR [rdi+0x18],rax
   140041d90:	mov    eax,r13d
   140041d93:	lock xadd DWORD PTR [rdx+0x10],eax
   140041d98:	add    eax,r13d
   140041d9b:	test   eax,eax
   140041d9d:	jg     0x140041da8
   140041d9f:	mov    rcx,QWORD PTR [rdx]
   140041da2:	mov    rax,QWORD PTR [rcx]
   140041da5:	call   QWORD PTR [rax+0x8]
   140041da8:	mov    rcx,QWORD PTR [rsi+0x30]
   140041dac:	cmp    DWORD PTR [rcx-0x10],0x0
   140041db0:	je     0x140041e2d
   140041db2:	add    rcx,0xffffffffffffffe8
   140041db6:	call   0x140002da0
   140041dbb:	lea    rbx,[rax+0x18]
   140041dbf:	mov    rcx,rbx
   140041dc2:	mov    QWORD PTR [rsp+0x40],rbx
   140041dc7:	call   QWORD PTR [rip+0x22893]        # 0x140064660
   140041dcd:	lea    rdx,[rbx-0x18]
   140041dd1:	mov    QWORD PTR [rdi+0x8],rax
   140041dd5:	mov    eax,r13d
   140041dd8:	lock xadd DWORD PTR [rdx+0x10],eax
   140041ddd:	add    eax,r13d
   140041de0:	test   eax,eax
   140041de2:	jg     0x140041e2d
   140041de4:	mov    rcx,QWORD PTR [rdx]
   140041de7:	mov    rax,QWORD PTR [rcx]
   140041dea:	call   QWORD PTR [rax+0x8]
   140041ded:	jmp    0x140041e2d
   140041def:	lea    rdx,[rip+0x26f7a]        # 0x140068d70
   140041df6:	mov    rcx,rsi
   140041df9:	call   0x14002c878
   140041dfe:	mov    r8d,0x100
   140041e04:	lea    rdx,[rsp+0x50]
   140041e09:	test   eax,eax
   140041e0b:	je     0x140041e1e
   140041e0d:	mov    ecx,0xf10a
   140041e12:	call   0x14002b77c
   140041e17:	mov    WORD PTR [rdi],0xf10a
   140041e1c:	jmp    0x140041e2d
   140041e1e:	mov    ecx,0xf108
   140041e23:	call   0x14002b77c
   140041e28:	mov    WORD PTR [rdi],0xf108
   140041e2d:	lea    rcx,[rsp+0x30]
   140041e32:	mov    rdx,rbp
   140041e35:	call   0x14000c360
   140041e3a:	mov    rcx,QWORD PTR [rax]
   140041e3d:	call   QWORD PTR [rip+0x2281d]        # 0x140064660
   140041e43:	mov    rdx,QWORD PTR [rsp+0x30]
   140041e48:	mov    QWORD PTR [rdi+0x10],rax
   140041e4c:	add    rdx,0xffffffffffffffe8
   140041e50:	mov    eax,r13d
   140041e53:	lock xadd DWORD PTR [rdx+0x10],eax
   140041e58:	add    eax,r13d
   140041e5b:	test   eax,eax
   140041e5d:	jg     0x140041e68
   140041e5f:	mov    rcx,QWORD PTR [rdx]
   140041e62:	mov    rax,QWORD PTR [rcx]
   140041e65:	call   QWORD PTR [rax+0x8]
   140041e68:	cmp    QWORD PTR [rdi+0x8],0x0
   140041e6d:	jne    0x140041eb0
   140041e6f:	call   0x140021a70
   140041e74:	lea    rcx,[rsp+0x28]
   140041e79:	mov    rdx,QWORD PTR [rax+0x20]
   140041e7d:	call   0x14000c360
   140041e82:	mov    rcx,QWORD PTR [rax]
   140041e85:	call   QWORD PTR [rip+0x227d5]        # 0x140064660
   140041e8b:	mov    rdx,QWORD PTR [rsp+0x28]
   140041e90:	mov    QWORD PTR [rdi+0x8],rax
   140041e94:	add    rdx,0xffffffffffffffe8
   140041e98:	mov    eax,r13d
   140041e9b:	lock xadd DWORD PTR [rdx+0x10],eax
   140041ea0:	add    eax,r13d
   140041ea3:	test   eax,eax
   140041ea5:	jg     0x140041eb0
   140041ea7:	mov    rcx,QWORD PTR [rdx]
   140041eaa:	mov    rax,QWORD PTR [rcx]
   140041ead:	call   QWORD PTR [rax+0x8]
   140041eb0:	cmp    QWORD PTR [rdi+0x18],0x0
   140041eb5:	jne    0x140041f05
   140041eb7:	cmp    DWORD PTR [rdi+0x20],0x0
   140041ebb:	je     0x140041f05
   140041ebd:	call   0x140021a70
   140041ec2:	lea    rcx,[rsp+0x20]
   140041ec7:	mov    rdx,QWORD PTR [rax+0x8]
   140041ecb:	mov    rdx,QWORD PTR [rdx+0xc8]
   140041ed2:	call   0x14000c360
   140041ed7:	mov    rcx,QWORD PTR [rax]
   140041eda:	call   QWORD PTR [rip+0x22780]        # 0x140064660
   140041ee0:	mov    rdx,QWORD PTR [rsp+0x20]
   140041ee5:	mov    QWORD PTR [rdi+0x18],rax
   140041ee9:	add    rdx,0xffffffffffffffe8
   140041eed:	mov    eax,r13d
   140041ef0:	lock xadd DWORD PTR [rdx+0x10],eax
   140041ef5:	add    eax,r13d
   140041ef8:	test   eax,eax
   140041efa:	jg     0x140041f05
   140041efc:	mov    rcx,QWORD PTR [rdx]
   140041eff:	mov    rax,QWORD PTR [rcx]
   140041f02:	call   QWORD PTR [rax+0x8]
   140041f05:	mov    rcx,QWORD PTR [rsp+0x250]
   140041f0d:	xor    rcx,rsp
   140041f10:	call   0x140046470
   140041f15:	lea    r11,[rsp+0x260]
   140041f1d:	mov    rbx,QWORD PTR [r11+0x30]
   140041f21:	mov    rbp,QWORD PTR [r11+0x38]
   140041f25:	mov    rsp,r11
   140041f28:	pop    r13
   140041f2a:	pop    rdi
   140041f2b:	pop    rsi
   140041f2c:	ret    
   140041f2d:	int3   
   140041f2e:	int3   
   140041f2f:	int3   
   140041f30:	mov    QWORD PTR [rsp+0x8],rcx
   140041f35:	push   rbx
   140041f36:	sub    rsp,0x30
   140041f3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140041f43:	mov    rbx,rcx
   140041f46:	lea    rax,[rip+0x2b42b]        # 0x14006d378
   140041f4d:	mov    QWORD PTR [rcx],rax
   140041f50:	mov    rcx,QWORD PTR [rcx+0x48]
   140041f54:	test   rcx,rcx
   140041f57:	je     0x140041f5e
   140041f59:	call   0x14003ea10
   140041f5e:	cmp    DWORD PTR [rbx+0x60],0x0
   140041f62:	je     0x140041f6e
   140041f64:	mov    rcx,QWORD PTR [rbx+0x50]
   140041f68:	call   0x14001ac50
   140041f6d:	nop
   140041f6e:	mov    rcx,rbx
   140041f71:	add    rsp,0x30
   140041f75:	pop    rbx
   140041f76:	jmp    0x14001c420
   140041f7b:	int3   
   140041f7c:	int3   
   140041f7d:	int3   
   140041f7e:	int3   
   140041f7f:	int3   
   140041f80:	rex push rbp
   140041f82:	sub    rsp,0x20
   140041f86:	mov    rbp,rdx
   140041f89:	mov    rcx,QWORD PTR [rbp+0x40]
   140041f8d:	call   0x14001c420
   140041f92:	add    rsp,0x20
   140041f96:	pop    rbp
   140041f97:	ret    
   140041f98:	mov    rax,rcx
   140041f9b:	mov    ecx,DWORD PTR [rcx+0x58]
   140041f9e:	mov    edx,DWORD PTR [rax+0x5c]
   140041fa1:	cmp    ecx,edx
   140041fa3:	jb     0x140041fa8
   140041fa5:	xor    eax,eax
   140041fa7:	ret    
   140041fa8:	add    ecx,0x1
   140041fab:	mov    DWORD PTR [rax+0x58],ecx
   140041fae:	xor    eax,eax
   140041fb0:	cmp    ecx,edx
   140041fb2:	setb   al
   140041fb5:	ret    
   140041fb6:	int3   
   140041fb7:	int3   
   140041fb8:	and    DWORD PTR [rcx+0x58],0x0
   140041fbc:	ret    
   140041fbd:	int3   
   140041fbe:	int3   
   140041fbf:	int3   
   140041fc0:	add    rcx,0xffffffffffffff98
   140041fc4:	jmp    0x14003e9e4
   140041fc9:	int3   
   140041fca:	int3   
   140041fcb:	int3   
   140041fcc:	add    rcx,0xffffffffffffff98
   140041fd0:	jmp    0x14003ea98
   140041fd5:	int3   
   140041fd6:	int3   
   140041fd7:	int3   
   140041fd8:	add    rcx,0xffffffffffffff98
   140041fdc:	jmp    0x14003eb14
   140041fe1:	int3   
   140041fe2:	int3   
   140041fe3:	int3   
   140041fe4:	mov    QWORD PTR [rsp+0x8],rbx
   140041fe9:	push   rdi
   140041fea:	sub    rsp,0x20
   140041fee:	mov    ebx,edx
   140041ff0:	mov    rdi,rcx
   140041ff3:	call   0x140041f30
   140041ff8:	test   bl,0x1
   140041ffb:	je     0x140042005
   140041ffd:	mov    rcx,rdi
   140042000:	call   0x14001ac50
   140042005:	mov    rax,rdi
   140042008:	mov    rbx,QWORD PTR [rsp+0x30]
   14004200d:	add    rsp,0x20
   140042011:	pop    rdi
   140042012:	ret    
   140042013:	int3   
   140042014:	rex push rbx
   140042016:	sub    rsp,0x20
   14004201a:	mov    eax,DWORD PTR [rcx+0x58]
   14004201d:	mov    r10,rdx
   140042020:	mov    rbx,rcx
   140042023:	cmp    eax,DWORD PTR [rcx+0x5c]
   140042026:	jb     0x14004202c
   140042028:	xor    eax,eax
   14004202a:	jmp    0x140042078
   14004202c:	mov    rdx,QWORD PTR [rcx+0x40]
   140042030:	mov    r8,rax
   140042033:	mov    r9,rdx
   140042036:	imul   r8,rdx
   14004203a:	add    r8,QWORD PTR [rcx+0x50]
   14004203e:	mov    rcx,r10
   140042041:	call   0x1400466d0
   140042046:	test   eax,eax
   140042048:	je     0x140042070
   14004204a:	cmp    eax,0xc
   14004204d:	je     0x14004206a
   14004204f:	cmp    eax,0x16
   140042052:	je     0x140042064
   140042054:	cmp    eax,0x22
   140042057:	je     0x140042064
   140042059:	cmp    eax,0x50
   14004205c:	je     0x140042070
   14004205e:	call   0x1400208f8
   140042063:	int3   
   140042064:	call   0x1400208f8
   140042069:	int3   
   14004206a:	call   0x1400208b0
   14004206f:	int3   
   140042070:	mov    eax,0x1
   140042075:	add    DWORD PTR [rbx+0x58],eax
   140042078:	add    rsp,0x20
   14004207c:	pop    rbx
   14004207d:	ret    
   14004207e:	int3   
   14004207f:	int3   
   140042080:	rex push rdi
   140042082:	push   r12
   140042084:	push   r13
   140042086:	sub    rsp,0x40
   14004208a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140042093:	mov    QWORD PTR [rsp+0x60],rbx
   140042098:	mov    QWORD PTR [rsp+0x70],rsi
   14004209d:	mov    rsi,r9
   1400420a0:	mov    r12,r8
   1400420a3:	mov    ebx,edx
   1400420a5:	lea    r13,[rcx-0x68]
   1400420a9:	mov    rdx,QWORD PTR [r13+0x38]
   1400420ad:	lea    rcx,[rsp+0x30]
   1400420b2:	call   0x140021aec
   1400420b7:	nop
   1400420b8:	test   rsi,rsi
   1400420bb:	je     0x1400420c0
   1400420bd:	and    DWORD PTR [rsi],0x0
   1400420c0:	mov    edi,ebx
   1400420c2:	mov    DWORD PTR [rsp+0x68],0x8000ffff
   1400420ca:	test   edi,edi
   1400420cc:	je     0x1400420eb
   1400420ce:	mov    rax,QWORD PTR [r13+0x0]
   1400420d2:	mov    rdx,r12
   1400420d5:	mov    rcx,r13
   1400420d8:	call   QWORD PTR [rax+0xa0]
   1400420de:	test   eax,eax
   1400420e0:	je     0x1400420eb
   1400420e2:	add    r12,QWORD PTR [r13+0x40]
   1400420e6:	add    edi,0xffffffff
   1400420e9:	jmp    0x1400420ca
   1400420eb:	test   rsi,rsi
   1400420ee:	je     0x1400420f4
   1400420f0:	sub    ebx,edi
   1400420f2:	mov    DWORD PTR [rsi],ebx
   1400420f4:	xor    ebx,ebx
   1400420f6:	test   edi,edi
   1400420f8:	setne  bl
   1400420fb:	mov    DWORD PTR [rsp+0x68],ebx
   1400420ff:	jmp    0x140042105
   140042101:	mov    ebx,DWORD PTR [rsp+0x68]
   140042105:	cmp    DWORD PTR [rsp+0x38],0x0
   14004210a:	je     0x140042118
   14004210c:	mov    rdx,QWORD PTR [rsp+0x30]
   140042111:	xor    ecx,ecx
   140042113:	call   0x140020cc4
   140042118:	mov    eax,ebx
   14004211a:	mov    rbx,QWORD PTR [rsp+0x60]
   14004211f:	mov    rsi,QWORD PTR [rsp+0x70]
   140042124:	add    rsp,0x40
   140042128:	pop    r13
   14004212a:	pop    r12
   14004212c:	pop    rdi
   14004212d:	ret    
   14004212e:	int3   
   14004212f:	int3   
   140042130:	rex push rbp
   140042132:	sub    rsp,0x20
   140042136:	mov    rbp,rdx
   140042139:	lea    rcx,[rbp+0x30]
   14004213d:	call   0x1400236a8
   140042142:	add    rsp,0x20
   140042146:	pop    rbp
   140042147:	ret    
   140042148:	int3   
   140042149:	int3   
   14004214a:	int3   
   14004214b:	int3   
   14004214c:	int3   
   14004214d:	int3   
   14004214e:	int3   
   14004214f:	int3   
   140042150:	mov    QWORD PTR [rsp+0x10],rdx
   140042155:	push   rbp
   140042156:	sub    rsp,0x20
   14004215a:	mov    rbp,rdx
   14004215d:	mov    rcx,QWORD PTR [rbp+0x28]
   140042161:	call   0x1400207b8
   140042166:	nop
   140042167:	lea    rax,[rip+0xffffffffffffff93]        # 0x140042101
   14004216e:	jmp    0x140042170
   140042170:	add    rsp,0x20
   140042174:	pop    rbp
   140042175:	ret    
   140042176:	int3   
   140042177:	int3   
   140042178:	rex push rdi
   14004217a:	sub    rsp,0x40
   14004217e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140042187:	mov    QWORD PTR [rsp+0x50],rbx
   14004218c:	mov    ebx,edx
   14004218e:	lea    rdi,[rcx-0x68]
   140042192:	mov    rdx,QWORD PTR [rdi+0x38]
   140042196:	lea    rcx,[rsp+0x30]
   14004219b:	call   0x140021aec
   1400421a0:	nop
   1400421a1:	mov    DWORD PTR [rsp+0x58],ebx
   1400421a5:	test   ebx,ebx
   1400421a7:	je     0x1400421c2
   1400421a9:	mov    rax,QWORD PTR [rdi]
   1400421ac:	mov    rcx,rdi
   1400421af:	call   QWORD PTR [rax+0xa8]
   1400421b5:	test   eax,eax
   1400421b7:	je     0x1400421c2
   1400421b9:	add    ebx,0xffffffff
   1400421bc:	mov    DWORD PTR [rsp+0x58],ebx
   1400421c0:	jmp    0x1400421a5
   1400421c2:	jmp    0x1400421c8
   1400421c4:	mov    ebx,DWORD PTR [rsp+0x58]
   1400421c8:	xor    edi,edi
   1400421ca:	test   ebx,ebx
   1400421cc:	setne  dil
   1400421d0:	cmp    DWORD PTR [rsp+0x38],0x0
   1400421d5:	je     0x1400421e3
   1400421d7:	mov    rdx,QWORD PTR [rsp+0x30]
   1400421dc:	xor    ecx,ecx
   1400421de:	call   0x140020cc4
   1400421e3:	mov    eax,edi
   1400421e5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400421ea:	add    rsp,0x40
   1400421ee:	pop    rdi
   1400421ef:	ret    
   1400421f0:	int3   
   1400421f1:	int3   
   1400421f2:	int3   
   1400421f3:	int3   
   1400421f4:	int3   
   1400421f5:	int3   
   1400421f6:	int3   
   1400421f7:	int3   
   1400421f8:	rex push rbp
   1400421fa:	sub    rsp,0x20
   1400421fe:	mov    rbp,rdx
   140042201:	lea    rcx,[rbp+0x30]
   140042205:	call   0x1400236a8
   14004220a:	add    rsp,0x20
   14004220e:	pop    rbp
   14004220f:	ret    
   140042210:	int3   
   140042211:	int3   
   140042212:	int3   
   140042213:	int3   
   140042214:	int3   
   140042215:	int3   
   140042216:	int3   
   140042217:	int3   
   140042218:	mov    QWORD PTR [rsp+0x10],rdx
   14004221d:	push   rbp
   14004221e:	sub    rsp,0x20
   140042222:	mov    rbp,rdx
   140042225:	mov    rcx,QWORD PTR [rbp+0x28]
   140042229:	call   0x1400207b8
   14004222e:	nop
   14004222f:	lea    rax,[rip+0xffffffffffffff8e]        # 0x1400421c4
   140042236:	jmp    0x140042238
   140042238:	add    rsp,0x20
   14004223c:	pop    rbp
   14004223d:	ret    
   14004223e:	int3   
   14004223f:	int3   
   140042240:	rex push rbx
   140042242:	sub    rsp,0x40
   140042246:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004224f:	lea    rbx,[rcx-0x68]
   140042253:	mov    rdx,QWORD PTR [rbx+0x38]
   140042257:	lea    rcx,[rsp+0x28]
   14004225c:	call   0x140021aec
   140042261:	nop
   140042262:	mov    rax,QWORD PTR [rbx]
   140042265:	mov    rcx,rbx
   140042268:	call   QWORD PTR [rax+0xb0]
   14004226e:	nop
   14004226f:	cmp    DWORD PTR [rsp+0x30],0x0
   140042274:	je     0x140042282
   140042276:	mov    rdx,QWORD PTR [rsp+0x28]
   14004227b:	xor    ecx,ecx
   14004227d:	call   0x140020cc4
   140042282:	xor    eax,eax
   140042284:	add    rsp,0x40
   140042288:	pop    rbx
   140042289:	ret    
   14004228a:	int3   
   14004228b:	int3   
   14004228c:	int3   
   14004228d:	int3   
   14004228e:	int3   
   14004228f:	int3   
   140042290:	rex push rbp
   140042292:	sub    rsp,0x20
   140042296:	mov    rbp,rdx
   140042299:	lea    rcx,[rbp+0x28]
   14004229d:	call   0x1400236a8
   1400422a2:	add    rsp,0x20
   1400422a6:	pop    rbp
   1400422a7:	ret    
   1400422a8:	rex push rdi
   1400422aa:	sub    rsp,0x40
   1400422ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400422b7:	mov    QWORD PTR [rsp+0x58],rbx
   1400422bc:	mov    rdi,rdx
   1400422bf:	lea    rbx,[rcx-0x68]
   1400422c3:	mov    rdx,QWORD PTR [rbx+0x38]
   1400422c7:	lea    rcx,[rsp+0x30]
   1400422cc:	call   0x140021aec
   1400422d1:	nop
   1400422d2:	and    QWORD PTR [rdi],0x0
   1400422d6:	mov    DWORD PTR [rsp+0x50],0x8000ffff
   1400422de:	mov    rax,QWORD PTR [rbx]
   1400422e1:	mov    rcx,rbx
   1400422e4:	call   QWORD PTR [rax+0xb8]
   1400422ea:	mov    r11,rax
   1400422ed:	mov    rax,QWORD PTR [rbx+0x48]
   1400422f1:	test   rax,rax
   1400422f4:	je     0x1400422fc
   1400422f6:	mov    QWORD PTR [r11+0x48],rax
   1400422fa:	jmp    0x140042300
   1400422fc:	mov    QWORD PTR [r11+0x48],rbx
   140042300:	mov    rax,QWORD PTR [r11+0x48]
   140042304:	lock add DWORD PTR [rax+0x8],0x1
   140042309:	lea    rax,[r11+0x68]
   14004230d:	mov    QWORD PTR [rdi],rax
   140042310:	xor    ebx,ebx
   140042312:	mov    DWORD PTR [rsp+0x50],ebx
   140042316:	jmp    0x14004231c
   140042318:	mov    ebx,DWORD PTR [rsp+0x50]
   14004231c:	cmp    DWORD PTR [rsp+0x38],0x0
   140042321:	je     0x14004232f
   140042323:	mov    rdx,QWORD PTR [rsp+0x30]
   140042328:	xor    ecx,ecx
   14004232a:	call   0x140020cc4
   14004232f:	mov    eax,ebx
   140042331:	mov    rbx,QWORD PTR [rsp+0x58]
   140042336:	add    rsp,0x40
   14004233a:	pop    rdi
   14004233b:	ret    
   14004233c:	int3   
   14004233d:	int3   
   14004233e:	int3   
   14004233f:	int3   
   140042340:	int3   
   140042341:	int3   
   140042342:	int3   
   140042343:	int3   
   140042344:	int3   
   140042345:	int3   
   140042346:	int3   
   140042347:	int3   
   140042348:	rex push rbp
   14004234a:	sub    rsp,0x20
   14004234e:	mov    rbp,rdx
   140042351:	lea    rcx,[rbp+0x30]
   140042355:	call   0x1400236a8
   14004235a:	add    rsp,0x20
   14004235e:	pop    rbp
   14004235f:	ret    
   140042360:	int3   
   140042361:	int3   
   140042362:	int3   
   140042363:	int3   
   140042364:	int3   
   140042365:	int3   
   140042366:	int3   
   140042367:	int3   
   140042368:	mov    QWORD PTR [rsp+0x10],rdx
   14004236d:	push   rbp
   14004236e:	sub    rsp,0x20
   140042372:	mov    rbp,rdx
   140042375:	mov    rcx,QWORD PTR [rbp+0x28]
   140042379:	call   0x1400207b8
   14004237e:	nop
   14004237f:	lea    rax,[rip+0xffffffffffffff92]        # 0x140042318
   140042386:	jmp    0x140042388
   140042388:	add    rsp,0x20
   14004238c:	pop    rbp
   14004238d:	ret    
   14004238e:	int3   
   14004238f:	int3   
   140042390:	mov    QWORD PTR [rsp+0x8],rbx
   140042395:	mov    QWORD PTR [rsp+0x10],rbp
   14004239a:	mov    QWORD PTR [rsp+0x18],rsi
   14004239f:	push   rdi
   1400423a0:	sub    rsp,0x20
   1400423a4:	mov    edi,r9d
   1400423a7:	mov    rsi,r8
   1400423aa:	mov    rbx,rdx
   1400423ad:	mov    rbp,rcx
   1400423b0:	call   0x14001c3e8
   1400423b5:	lea    rax,[rip+0x2b12c]        # 0x14006d4e8
   1400423bc:	lea    r11,[rip+0x2afb5]        # 0x14006d378
   1400423c3:	mov    QWORD PTR [rbp+0x0],r11
   1400423c7:	mov    QWORD PTR [rbp+0x68],rax
   1400423cb:	mov    eax,DWORD PTR [rsp+0x50]
   1400423cf:	and    QWORD PTR [rbp+0x48],0x0
   1400423d4:	and    DWORD PTR [rbp+0x58],0x0
   1400423d8:	mov    DWORD PTR [rbp+0x60],eax
   1400423db:	mov    QWORD PTR [rbp+0x40],rbx
   1400423df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400423e4:	mov    QWORD PTR [rbp+0x50],rsi
   1400423e8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400423ed:	mov    rax,rbp
   1400423f0:	mov    DWORD PTR [rbp+0x5c],edi
   1400423f3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400423f8:	add    rsp,0x20
   1400423fc:	pop    rdi
   1400423fd:	ret    
   1400423fe:	int3   
   1400423ff:	int3   
   140042400:	rex push rbx
   140042402:	sub    rsp,0x40
   140042406:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14004240f:	mov    rbx,rcx
   140042412:	mov    ecx,0x70
   140042417:	call   0x14001ac0c
   14004241c:	mov    QWORD PTR [rsp+0x50],rax
   140042421:	xor    edx,edx
   140042423:	cmp    rax,rdx
   140042426:	je     0x140042443
   140042428:	mov    DWORD PTR [rsp+0x20],edx
   14004242c:	mov    r9d,DWORD PTR [rbx+0x5c]
   140042430:	mov    r8,QWORD PTR [rbx+0x50]
   140042434:	mov    rdx,QWORD PTR [rbx+0x40]
   140042438:	mov    rcx,rax
   14004243b:	call   0x140042390
   140042440:	mov    rdx,rax
   140042443:	mov    eax,DWORD PTR [rbx+0x58]
   140042446:	mov    DWORD PTR [rdx+0x58],eax
   140042449:	mov    rax,rdx
   14004244c:	add    rsp,0x40
   140042450:	pop    rbx
   140042451:	ret    
   140042452:	int3   
   140042453:	int3   
   140042454:	int3   
   140042455:	int3   
   140042456:	int3   
   140042457:	int3   
   140042458:	int3   
   140042459:	int3   
   14004245a:	int3   
   14004245b:	int3   
   14004245c:	int3   
   14004245d:	int3   
   14004245e:	int3   
   14004245f:	int3   
   140042460:	rex push rbp
   140042462:	sub    rsp,0x20
   140042466:	mov    rbp,rdx
   140042469:	mov    rcx,QWORD PTR [rbp+0x50]
   14004246d:	call   0x140001040
   140042472:	add    rsp,0x20
   140042476:	pop    rbp
   140042477:	ret    
   140042478:	and    QWORD PTR [rcx],0x0
   14004247c:	mov    DWORD PTR [rcx+0x8],0x1
   140042483:	mov    rax,rcx
   140042486:	ret    
   140042487:	int3   
   140042488:	rex push rbx
   14004248a:	sub    rsp,0x20
   14004248e:	mov    rbx,rcx
   140042491:	mov    rcx,QWORD PTR [rcx]
   140042494:	test   rcx,rcx
   140042497:	je     0x1400424a9
   140042499:	cmp    DWORD PTR [rbx+0x8],0x0
   14004249d:	je     0x1400424a5
   14004249f:	mov    rax,QWORD PTR [rcx]
   1400424a2:	call   QWORD PTR [rax+0x10]
   1400424a5:	and    QWORD PTR [rbx],0x0
   1400424a9:	add    rsp,0x20
   1400424ad:	pop    rbx
   1400424ae:	ret    
   1400424af:	int3   
   1400424b0:	rex push rbx
   1400424b2:	sub    rsp,0x20
   1400424b6:	mov    rbx,rcx
   1400424b9:	mov    rcx,QWORD PTR [rcx]
   1400424bc:	test   rcx,rcx
   1400424bf:	je     0x1400424ca
   1400424c1:	call   0x14001ac50
   1400424c6:	and    QWORD PTR [rbx],0x0
   1400424ca:	add    rsp,0x20
   1400424ce:	pop    rbx
   1400424cf:	ret    
   1400424d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400424d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400424da:	push   rdi
   1400424db:	sub    rsp,0x20
   1400424df:	mov    esi,r8d
   1400424e2:	mov    rbx,rdx
   1400424e5:	mov    rdi,rcx
   1400424e8:	call   0x140042488
   1400424ed:	mov    QWORD PTR [rdi],rbx
   1400424f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400424f5:	mov    DWORD PTR [rdi+0x8],esi
   1400424f8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400424fd:	add    rsp,0x20
   140042501:	pop    rdi
   140042502:	ret    
   140042503:	int3   
   140042504:	sub    rsp,0x28
   140042508:	mov    rdx,QWORD PTR [rcx+0x10]
   14004250c:	xor    r11d,r11d
   14004250f:	xor    r9d,r9d
   140042512:	test   rdx,rdx
   140042515:	jle    0x14004255e
   140042517:	xor    r8d,r8d
   14004251a:	test   r8,r8
   14004251d:	js     0x140042569
   14004251f:	cmp    r9,rdx
   140042522:	jge    0x140042569
   140042524:	mov    rax,QWORD PTR [rcx+0x8]
   140042528:	mov    r10,QWORD PTR [rax+r8*1]
   14004252c:	test   r10,r10
   14004252f:	je     0x140042563
   140042531:	mov    rdx,QWORD PTR [rax+r8*1+0x8]
   140042536:	test   rdx,rdx
   140042539:	je     0x140042563
   14004253b:	xor    eax,eax
   14004253d:	cmp    WORD PTR [rdx],ax
   140042540:	setne  al
   140042543:	add    r11d,0x1
   140042547:	add    r9,0x1
   14004254b:	mov    DWORD PTR [r10],eax
   14004254e:	mov    rdx,QWORD PTR [rcx+0x10]
   140042552:	movsxd rax,r11d
   140042555:	add    r8,0x18
   140042559:	cmp    rax,rdx
   14004255c:	jl     0x14004251a
   14004255e:	add    rsp,0x28
   140042562:	ret    
   140042563:	call   0x1400208f8
   140042568:	int3   
   140042569:	call   0x1400208f8
   14004256e:	int3   
   14004256f:	int3   
   140042570:	mov    rax,rsp
   140042573:	mov    WORD PTR [rax+0x18],r8w
   140042578:	mov    DWORD PTR [rax+0x10],edx
   14004257b:	push   rbp
   14004257c:	push   rsi
   14004257d:	push   rdi
   14004257e:	push   r12
   140042580:	push   r13
   140042582:	push   r14
   140042584:	push   r15
   140042586:	sub    rsp,0x120
   14004258d:	mov    QWORD PTR [rsp+0x118],0xfffffffffffffffe
   140042599:	mov    QWORD PTR [rax+0x20],rbx
   14004259d:	movzx  r13d,r9w
   1400425a1:	movzx  ebx,r8w
   1400425a5:	mov    r15,rcx
   1400425a8:	xor    esi,esi
   1400425aa:	cmp    QWORD PTR [rcx],rsi
   1400425ad:	je     0x140042f6a
   1400425b3:	mov    QWORD PTR [rsp+0x68],rsi
   1400425b8:	mov    QWORD PTR [rsp+0x70],rsi
   1400425bd:	mov    DWORD PTR [rsp+0x78],esi
   1400425c1:	mov    DWORD PTR [rsp+0x7c],esi
   1400425c5:	xor    edx,edx
   1400425c7:	lea    r8d,[rsi+0x18]
   1400425cb:	lea    rcx,[rsp+0x68]
   1400425d0:	call   0x140047720
   1400425d5:	mov    r12,QWORD PTR [rsp+0x188]
   1400425dd:	cmp    r12,rsi
   1400425e0:	je     0x1400425f1
   1400425e2:	mov    rcx,r12
   1400425e5:	call   QWORD PTR [rip+0x21c05]        # 0x1400641f0
   1400425eb:	mov    DWORD PTR [rsp+0x78],eax
   1400425ef:	jmp    0x1400425f5
   1400425f1:	mov    eax,DWORD PTR [rsp+0x78]
   1400425f5:	mov    DWORD PTR [rsp+0x160],0xfffffffd
   140042600:	test   bl,0xc
   140042603:	je     0x14004261a
   140042605:	mov    DWORD PTR [rsp+0x7c],0x1
   14004260d:	lea    rcx,[rsp+0x160]
   140042615:	mov    QWORD PTR [rsp+0x70],rcx
   14004261a:	lea    rcx,[rip+0x2ac5f]        # 0x14006d280
   140042621:	mov    QWORD PTR [rsp+0xf0],rcx
   140042629:	mov    QWORD PTR [rsp+0xf8],rsi
   140042631:	mov    QWORD PTR [rsp+0x110],rsi
   140042639:	mov    QWORD PTR [rsp+0x108],rsi
   140042641:	mov    QWORD PTR [rsp+0x100],rsi
   140042649:	cmp    eax,esi
   14004264b:	je     0x140042aaa
   140042651:	mov    ecx,eax
   140042653:	mov    eax,0x18
   140042658:	mul    rcx
   14004265b:	mov    rcx,0xffffffffffffffff
   140042662:	cmovo  rax,rcx
   140042666:	mov    rcx,rax
   140042669:	call   0x14001ac0c
   14004266e:	mov    rbx,rax
   140042671:	mov    QWORD PTR [rsp+0x68],rax
   140042676:	mov    ecx,DWORD PTR [rsp+0x78]
   14004267a:	lea    r8,[rcx+rcx*2]
   14004267e:	shl    r8,0x3
   140042682:	xor    edx,edx
   140042684:	mov    rcx,rax
   140042687:	call   0x140047720
   14004268c:	mov    r14,r12
   14004268f:	mov    ecx,DWORD PTR [rsp+0x78]
   140042693:	add    ecx,0xffffffff
   140042696:	lea    rcx,[rcx+rcx*2]
   14004269a:	lea    rbp,[rbx+rcx*8]
   14004269e:	cmp    BYTE PTR [r12],sil
   1400426a2:	je     0x140042aaa
   1400426a8:	mov    rdi,QWORD PTR [rsp+0x190]
   1400426b0:	add    rdi,0xfffffffffffffff8
   1400426b4:	movzx  eax,BYTE PTR [r14]
   1400426b8:	mov    WORD PTR [rbp+0x0],ax
   1400426bc:	test   al,0x40
   1400426be:	je     0x1400426cc
   1400426c0:	and    ax,0xffbf
   1400426c4:	or     ax,0x4000
   1400426c8:	mov    WORD PTR [rbp+0x0],ax
   1400426cc:	movzx  ecx,WORD PTR [rbp+0x0]
   1400426d0:	cmp    ecx,0x4002
   1400426d6:	jg     0x1400428c8
   1400426dc:	cmp    ecx,0x4002
   1400426e2:	je     0x1400428b8
   1400426e8:	cmp    ecx,0xb
   1400426eb:	jg     0x1400427fb
   1400426f1:	cmp    ecx,0xb
   1400426f4:	je     0x1400427e7
   1400426fa:	sub    ecx,0x2
   1400426fd:	je     0x1400427d7
   140042703:	sub    ecx,0x1
   140042706:	je     0x1400427c9
   14004270c:	sub    ecx,0x1
   14004270f:	je     0x1400427b7
   140042715:	sub    ecx,0x1
   140042718:	je     0x1400427a7
   14004271e:	sub    ecx,0x1
   140042721:	je     0x140042794
   140042723:	sub    ecx,0x1
   140042726:	je     0x140042784
   140042728:	sub    ecx,0x1
   14004272b:	je     0x140042759
   14004272d:	sub    ecx,0x1
   140042730:	je     0x140042749
   140042732:	cmp    ecx,0x1
   140042735:	jne    0x140042a92
   14004273b:	add    rdi,0x8
   14004273f:	mov    eax,DWORD PTR [rdi]
   140042741:	mov    DWORD PTR [rbp+0x8],eax
   140042744:	jmp    0x140042a92
   140042749:	add    rdi,0x8
   14004274d:	mov    rax,QWORD PTR [rdi]
   140042750:	mov    QWORD PTR [rbp+0x8],rax
   140042754:	jmp    0x140042a92
   140042759:	add    rdi,0x8
   14004275d:	mov    rbx,QWORD PTR [rdi]
   140042760:	mov    rcx,rbx
   140042763:	call   QWORD PTR [rip+0x21ef7]        # 0x140064660
   140042769:	mov    QWORD PTR [rbp+0x8],rax
   14004276d:	cmp    rbx,rsi
   140042770:	je     0x140042a92
   140042776:	cmp    rax,rsi
   140042779:	je     0x140042aa4
   14004277f:	jmp    0x140042a92
   140042784:	add    rdi,0x8
   140042788:	mov    rax,QWORD PTR [rdi]
   14004278b:	mov    QWORD PTR [rbp+0x8],rax
   14004278f:	jmp    0x140042a92
   140042794:	add    rdi,0x8
   140042798:	mov    rax,QWORD PTR [rdi]
   14004279b:	mov    rcx,QWORD PTR [rax]
   14004279e:	mov    QWORD PTR [rbp+0x8],rcx
   1400427a2:	jmp    0x140042a92
   1400427a7:	add    rdi,0x8
   1400427ab:	mov    rax,QWORD PTR [rdi]
   1400427ae:	mov    QWORD PTR [rbp+0x8],rax
   1400427b2:	jmp    0x140042a92
   1400427b7:	add    rdi,0x8
   1400427bb:	cvtsd2ss xmm0,QWORD PTR [rdi]
   1400427bf:	movss  DWORD PTR [rbp+0x8],xmm0
   1400427c4:	jmp    0x140042a92
   1400427c9:	add    rdi,0x8
   1400427cd:	mov    eax,DWORD PTR [rdi]
   1400427cf:	mov    DWORD PTR [rbp+0x8],eax
   1400427d2:	jmp    0x140042a92
   1400427d7:	add    rdi,0x8
   1400427db:	movzx  eax,WORD PTR [rdi]
   1400427de:	mov    WORD PTR [rbp+0x8],ax
   1400427e2:	jmp    0x140042a92
   1400427e7:	add    rdi,0x8
   1400427eb:	mov    eax,DWORD PTR [rdi]
   1400427ed:	neg    eax
   1400427ef:	sbb    cx,cx
   1400427f2:	mov    WORD PTR [rbp+0x8],cx
   1400427f6:	jmp    0x140042a92
   1400427fb:	sub    ecx,0xc
   1400427fe:	je     0x140042895
   140042804:	sub    ecx,0x1
   140042807:	je     0x140042885
   140042809:	sub    ecx,0x3
   14004280c:	je     0x140042877
   14004280e:	sub    ecx,0x1
   140042811:	je     0x140042869
   140042813:	sub    ecx,0x1
   140042816:	je     0x140042859
   140042818:	sub    ecx,0x1
   14004281b:	je     0x14004284b
   14004281d:	sub    ecx,0x1
   140042820:	je     0x14004283b
   140042822:	cmp    ecx,0x1
   140042825:	jne    0x140042a92
   14004282b:	add    rdi,0x8
   14004282f:	mov    rax,QWORD PTR [rdi]
   140042832:	mov    QWORD PTR [rbp+0x8],rax
   140042836:	jmp    0x140042a92
   14004283b:	add    rdi,0x8
   14004283f:	mov    rax,QWORD PTR [rdi]
   140042842:	mov    QWORD PTR [rbp+0x8],rax
   140042846:	jmp    0x140042a92
   14004284b:	add    rdi,0x8
   14004284f:	mov    eax,DWORD PTR [rdi]
   140042851:	mov    DWORD PTR [rbp+0x8],eax
   140042854:	jmp    0x140042a92
   140042859:	add    rdi,0x8
   14004285d:	movzx  eax,WORD PTR [rdi]
   140042860:	mov    WORD PTR [rbp+0x8],ax
   140042864:	jmp    0x140042a92
   140042869:	add    rdi,0x8
   14004286d:	mov    al,BYTE PTR [rdi]
   14004286f:	mov    BYTE PTR [rbp+0x8],al
   140042872:	jmp    0x140042a92
   140042877:	add    rdi,0x8
   14004287b:	mov    al,BYTE PTR [rdi]
   14004287d:	mov    BYTE PTR [rbp+0x8],al
   140042880:	jmp    0x140042a92
   140042885:	add    rdi,0x8
   140042889:	mov    rax,QWORD PTR [rdi]
   14004288c:	mov    QWORD PTR [rbp+0x8],rax
   140042890:	jmp    0x140042a92
   140042895:	add    rdi,0x8
   140042899:	mov    rcx,QWORD PTR [rdi]
   14004289c:	mov    rax,QWORD PTR [rcx]
   14004289f:	mov    QWORD PTR [rbp+0x0],rax
   1400428a3:	mov    rax,QWORD PTR [rcx+0x8]
   1400428a7:	mov    QWORD PTR [rbp+0x8],rax
   1400428ab:	mov    rax,QWORD PTR [rcx+0x10]
   1400428af:	mov    QWORD PTR [rbp+0x10],rax
   1400428b3:	jmp    0x140042a92
   1400428b8:	add    rdi,0x8
   1400428bc:	mov    rax,QWORD PTR [rdi]
   1400428bf:	mov    QWORD PTR [rbp+0x8],rax
   1400428c3:	jmp    0x140042a92
   1400428c8:	cmp    ecx,0x400b
   1400428ce:	jg     0x140042a01
   1400428d4:	cmp    ecx,0x400b
   1400428da:	je     0x140042997
   1400428e0:	sub    ecx,0x4003
   1400428e6:	je     0x140042987
   1400428ec:	sub    ecx,0x1
   1400428ef:	je     0x140042977
   1400428f5:	sub    ecx,0x1
   1400428f8:	je     0x140042967
   1400428fa:	sub    ecx,0x1
   1400428fd:	je     0x140042957
   1400428ff:	sub    ecx,0x1
   140042902:	je     0x140042947
   140042904:	sub    ecx,0x1
   140042907:	je     0x140042937
   140042909:	sub    ecx,0x1
   14004290c:	je     0x140042927
   14004290e:	cmp    ecx,0x1
   140042911:	jne    0x140042a92
   140042917:	add    rdi,0x8
   14004291b:	mov    rax,QWORD PTR [rdi]
   14004291e:	mov    QWORD PTR [rbp+0x8],rax
   140042922:	jmp    0x140042a92
   140042927:	add    rdi,0x8
   14004292b:	mov    rax,QWORD PTR [rdi]
   14004292e:	mov    QWORD PTR [rbp+0x8],rax
   140042932:	jmp    0x140042a92
   140042937:	add    rdi,0x8
   14004293b:	mov    rax,QWORD PTR [rdi]
   14004293e:	mov    QWORD PTR [rbp+0x8],rax
   140042942:	jmp    0x140042a92
   140042947:	add    rdi,0x8
   14004294b:	mov    rax,QWORD PTR [rdi]
   14004294e:	mov    QWORD PTR [rbp+0x8],rax
   140042952:	jmp    0x140042a92
   140042957:	add    rdi,0x8
   14004295b:	mov    rax,QWORD PTR [rdi]
   14004295e:	mov    QWORD PTR [rbp+0x8],rax
   140042962:	jmp    0x140042a92
   140042967:	add    rdi,0x8
   14004296b:	mov    rax,QWORD PTR [rdi]
   14004296e:	mov    QWORD PTR [rbp+0x8],rax
   140042972:	jmp    0x140042a92
   140042977:	add    rdi,0x8
   14004297b:	mov    rax,QWORD PTR [rdi]
   14004297e:	mov    QWORD PTR [rbp+0x8],rax
   140042982:	jmp    0x140042a92
   140042987:	add    rdi,0x8
   14004298b:	mov    rax,QWORD PTR [rdi]
   14004298e:	mov    QWORD PTR [rbp+0x8],rax
   140042992:	jmp    0x140042a92
   140042997:	add    rdi,0x8
   14004299b:	mov    rdx,QWORD PTR [rdi]
   14004299e:	mov    eax,DWORD PTR [rdx]
   1400429a0:	neg    eax
   1400429a2:	sbb    ecx,ecx
   1400429a4:	movzx  ecx,cx
   1400429a7:	mov    DWORD PTR [rdx],ecx
   1400429a9:	mov    QWORD PTR [rbp+0x8],rdx
   1400429ad:	mov    QWORD PTR [rsp+0x90],rdx
   1400429b5:	mov    QWORD PTR [rsp+0x98],rdx
   1400429bd:	mov    DWORD PTR [rsp+0xa0],esi
   1400429c4:	lea    r8,[rsp+0x90]
   1400429cc:	mov    rdx,QWORD PTR [rsp+0x100]
   1400429d4:	lea    rcx,[rsp+0xf0]
   1400429dc:	call   0x14004106c
   1400429e1:	nop
   1400429e2:	cmp    DWORD PTR [rsp+0xa0],esi
   1400429e9:	je     0x140042a92
   1400429ef:	mov    rcx,QWORD PTR [rsp+0x90]
   1400429f7:	call   0x14001ac50
   1400429fc:	jmp    0x140042a92
   140042a01:	sub    ecx,0x400c
   140042a07:	je     0x140042a87
   140042a09:	sub    ecx,0x1
   140042a0c:	je     0x140042a7a
   140042a0e:	sub    ecx,0x3
   140042a11:	je     0x140042a6d
   140042a13:	sub    ecx,0x1
   140042a16:	je     0x140042a60
   140042a18:	sub    ecx,0x1
   140042a1b:	je     0x140042a53
   140042a1d:	sub    ecx,0x1
   140042a20:	je     0x140042a46
   140042a22:	sub    ecx,0x1
   140042a25:	je     0x140042a39
   140042a27:	cmp    ecx,0x1
   140042a2a:	jne    0x140042a92
   140042a2c:	add    rdi,0x8
   140042a30:	mov    rax,QWORD PTR [rdi]
   140042a33:	mov    QWORD PTR [rbp+0x8],rax
   140042a37:	jmp    0x140042a92
   140042a39:	add    rdi,0x8
   140042a3d:	mov    rax,QWORD PTR [rdi]
   140042a40:	mov    QWORD PTR [rbp+0x8],rax
   140042a44:	jmp    0x140042a92
   140042a46:	add    rdi,0x8
   140042a4a:	mov    rax,QWORD PTR [rdi]
   140042a4d:	mov    QWORD PTR [rbp+0x8],rax
   140042a51:	jmp    0x140042a92
   140042a53:	add    rdi,0x8
   140042a57:	mov    rax,QWORD PTR [rdi]
   140042a5a:	mov    QWORD PTR [rbp+0x8],rax
   140042a5e:	jmp    0x140042a92
   140042a60:	add    rdi,0x8
   140042a64:	mov    rax,QWORD PTR [rdi]
   140042a67:	mov    QWORD PTR [rbp+0x8],rax
   140042a6b:	jmp    0x140042a92
   140042a6d:	add    rdi,0x8
   140042a71:	mov    rax,QWORD PTR [rdi]
   140042a74:	mov    QWORD PTR [rbp+0x8],rax
   140042a78:	jmp    0x140042a92
   140042a7a:	add    rdi,0x8
   140042a7e:	mov    rax,QWORD PTR [rdi]
   140042a81:	mov    QWORD PTR [rbp+0x8],rax
   140042a85:	jmp    0x140042a92
   140042a87:	add    rdi,0x8
   140042a8b:	mov    rax,QWORD PTR [rdi]
   140042a8e:	mov    QWORD PTR [rbp+0x8],rax
   140042a92:	sub    rbp,0x18
   140042a96:	add    r14,0x1
   140042a9a:	cmp    BYTE PTR [r14],sil
   140042a9d:	je     0x140042aaa
   140042a9f:	jmp    0x1400426b4
   140042aa4:	call   0x1400208b0
   140042aa9:	int3   
   140042aaa:	lea    rcx,[rsp+0x50]
   140042aaf:	call   0x14003f678
   140042ab4:	lea    rbx,[rsp+0x50]
   140042ab9:	cmp    r13w,si
   140042abd:	cmove  rbx,rsi
   140042ac1:	xor    edx,edx
   140042ac3:	lea    r8d,[rdx+0x40]
   140042ac7:	lea    rcx,[rsp+0xb0]
   140042acf:	call   0x140047720
   140042ad4:	or     DWORD PTR [rsp+0x80],0xffffffff
   140042adc:	mov    rcx,QWORD PTR [r15]
   140042adf:	mov    rax,QWORD PTR [rcx]
   140042ae2:	lea    rdx,[rsp+0x80]
   140042aea:	mov    QWORD PTR [rsp+0x40],rdx
   140042aef:	lea    rdx,[rsp+0xb0]
   140042af7:	mov    QWORD PTR [rsp+0x38],rdx
   140042afc:	mov    QWORD PTR [rsp+0x30],rbx
   140042b01:	lea    rdx,[rsp+0x68]
   140042b06:	mov    QWORD PTR [rsp+0x28],rdx
   140042b0b:	mov    dx,WORD PTR [rsp+0x170]
   140042b13:	mov    WORD PTR [rsp+0x20],dx
   140042b18:	xor    r9d,r9d
   140042b1b:	lea    r8,[rip+0x2d896]        # 0x1400703b8
   140042b22:	mov    edx,DWORD PTR [rsp+0x168]
   140042b29:	call   QWORD PTR [rax+0x30]
   140042b2c:	mov    ebx,eax
   140042b2e:	lea    rcx,[rsp+0xf0]
   140042b36:	call   0x140042504
   140042b3b:	cmp    DWORD PTR [rsp+0x78],esi
   140042b3f:	je     0x140042b77
   140042b41:	mov    ecx,DWORD PTR [rsp+0x78]
   140042b45:	lea    rdx,[rcx+rcx*2]
   140042b49:	mov    rcx,QWORD PTR [rsp+0x68]
   140042b4e:	lea    rdi,[rcx+rdx*8-0x18]
   140042b53:	cmp    BYTE PTR [r12],sil
   140042b57:	je     0x140042b77
   140042b59:	cmp    BYTE PTR [r12],0x8
   140042b5e:	jne    0x140042b69
   140042b60:	mov    rcx,rdi
   140042b63:	call   QWORD PTR [rip+0x21b37]        # 0x1400646a0
   140042b69:	sub    rdi,0x18
   140042b6d:	add    r12,0x1
   140042b71:	cmp    BYTE PTR [r12],sil
   140042b75:	jne    0x140042b59
   140042b77:	mov    rcx,QWORD PTR [rsp+0x68]
   140042b7c:	call   0x14001ac50
   140042b81:	mov    QWORD PTR [rsp+0x68],rsi
   140042b86:	cmp    ebx,esi
   140042b88:	jge    0x140042cfe
   140042b8e:	lea    rcx,[rsp+0x50]
   140042b93:	call   QWORD PTR [rip+0x21b07]        # 0x1400646a0
   140042b99:	cmp    ebx,0x80020009
   140042b9f:	je     0x140042ba9
   140042ba1:	mov    ecx,ebx
   140042ba3:	call   0x140020a44
   140042ba8:	int3   
   140042ba9:	mov    rax,QWORD PTR [rsp+0xe0]
   140042bb1:	cmp    rax,rsi
   140042bb4:	je     0x140042bc0
   140042bb6:	lea    rcx,[rsp+0xb0]
   140042bbe:	call   rax
   140042bc0:	mov    ecx,0x40
   140042bc5:	call   0x14001ac0c
   140042bca:	mov    QWORD PTR [rsp+0x88],rax
   140042bd2:	cmp    rax,rsi
   140042bd5:	je     0x140042bf2
   140042bd7:	movzx  r9d,WORD PTR [rsp+0xb0]
   140042be0:	xor    r8d,r8d
   140042be3:	xor    edx,edx
   140042be5:	mov    rcx,rax
   140042be8:	call   0x140041b78
   140042bed:	mov    rbx,rax
   140042bf0:	jmp    0x140042bf5
   140042bf2:	mov    rbx,rsi
   140042bf5:	mov    rcx,QWORD PTR [rsp+0xb8]
   140042bfd:	call   QWORD PTR [rip+0x21a85]        # 0x140064688
   140042c03:	cmp    eax,esi
   140042c05:	je     0x140042c2f
   140042c07:	mov    rdi,QWORD PTR [rsp+0xb8]
   140042c0f:	cmp    rdi,rsi
   140042c12:	jne    0x140042c18
   140042c14:	mov    eax,esi
   140042c16:	jmp    0x140042c20
   140042c18:	mov    rcx,rdi
   140042c1b:	call   0x140048610
   140042c20:	mov    r8d,eax
   140042c23:	mov    rdx,rdi
   140042c26:	lea    rcx,[rbx+0x30]
   140042c2a:	call   0x1400037d0
   140042c2f:	mov    rcx,QWORD PTR [rsp+0xb8]
   140042c37:	call   QWORD PTR [rip+0x21a53]        # 0x140064690
   140042c3d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140042c45:	call   QWORD PTR [rip+0x21a3d]        # 0x140064688
   140042c4b:	cmp    eax,esi
   140042c4d:	je     0x140042c77
   140042c4f:	mov    rdi,QWORD PTR [rsp+0xc0]
   140042c57:	cmp    rdi,rsi
   140042c5a:	jne    0x140042c60
   140042c5c:	mov    eax,esi
   140042c5e:	jmp    0x140042c68
   140042c60:	mov    rcx,rdi
   140042c63:	call   0x140048610
   140042c68:	mov    r8d,eax
   140042c6b:	mov    rdx,rdi
   140042c6e:	lea    rcx,[rbx+0x18]
   140042c72:	call   0x1400037d0
   140042c77:	mov    rcx,QWORD PTR [rsp+0xc0]
   140042c7f:	call   QWORD PTR [rip+0x21a0b]        # 0x140064690
   140042c85:	mov    rcx,QWORD PTR [rsp+0xc8]
   140042c8d:	call   QWORD PTR [rip+0x219f5]        # 0x140064688
   140042c93:	cmp    eax,esi
   140042c95:	je     0x140042cbd
   140042c97:	mov    rdi,QWORD PTR [rsp+0xc8]
   140042c9f:	cmp    rdi,rsi
   140042ca2:	je     0x140042cae
   140042ca4:	mov    rcx,rdi
   140042ca7:	call   0x140048610
   140042cac:	mov    esi,eax
   140042cae:	mov    r8d,esi
   140042cb1:	mov    rdx,rdi
   140042cb4:	lea    rcx,[rbx+0x28]
   140042cb8:	call   0x1400037d0
   140042cbd:	mov    rcx,QWORD PTR [rsp+0xc8]
   140042cc5:	call   QWORD PTR [rip+0x219c5]        # 0x140064690
   140042ccb:	mov    r11d,DWORD PTR [rsp+0xd0]
   140042cd3:	mov    DWORD PTR [rbx+0x20],r11d
   140042cd7:	mov    eax,DWORD PTR [rsp+0xe8]
   140042cde:	mov    DWORD PTR [rbx+0x38],eax
   140042ce1:	mov    QWORD PTR [rsp+0x88],rbx
   140042ce9:	lea    rdx,[rip+0x3f558]        # 0x140082248
   140042cf0:	lea    rcx,[rsp+0x88]
   140042cf8:	call   0x140048db0
   140042cfd:	int3   
   140042cfe:	cmp    r13w,si
   140042d02:	je     0x140042f4d
   140042d08:	cmp    r13w,0xc
   140042d0d:	je     0x140042d3f
   140042d0f:	movzx  r9d,r13w
   140042d13:	xor    r8d,r8d
   140042d16:	lea    rdx,[rsp+0x50]
   140042d1b:	lea    rcx,[rsp+0x50]
   140042d20:	call   QWORD PTR [rip+0x21972]        # 0x140064698
   140042d26:	mov    ebx,eax
   140042d28:	cmp    eax,esi
   140042d2a:	jge    0x140042d3f
   140042d2c:	lea    rcx,[rsp+0x50]
   140042d31:	call   QWORD PTR [rip+0x21969]        # 0x1400646a0
   140042d37:	mov    ecx,ebx
   140042d39:	call   0x140020a44
   140042d3e:	int3   
   140042d3f:	movzx  ecx,r13w
   140042d43:	cmp    ecx,0xb
   140042d46:	jg     0x140042e7b
   140042d4c:	cmp    ecx,0xb
   140042d4f:	je     0x140042e62
   140042d55:	sub    ecx,0x2
   140042d58:	je     0x140042e4d
   140042d5e:	sub    ecx,0x1
   140042d61:	je     0x140042e3a
   140042d67:	sub    ecx,0x1
   140042d6a:	je     0x140042e23
   140042d70:	sub    ecx,0x1
   140042d73:	je     0x140042e0c
   140042d79:	sub    ecx,0x1
   140042d7c:	je     0x140042df7
   140042d7e:	sub    ecx,0x1
   140042d81:	je     0x140042de0
   140042d83:	sub    ecx,0x1
   140042d86:	je     0x140042dbe
   140042d88:	sub    ecx,0x1
   140042d8b:	je     0x140042da9
   140042d8d:	cmp    ecx,0x1
   140042d90:	jne    0x140042f4d
   140042d96:	mov    rcx,QWORD PTR [rsp+0x180]
   140042d9e:	mov    eax,DWORD PTR [rsp+0x58]
   140042da2:	mov    DWORD PTR [rcx],eax
   140042da4:	jmp    0x140042f4d
   140042da9:	mov    rcx,QWORD PTR [rsp+0x180]
   140042db1:	mov    rax,QWORD PTR [rsp+0x58]
   140042db6:	mov    QWORD PTR [rcx],rax
   140042db9:	jmp    0x140042f4d
   140042dbe:	mov    rdx,QWORD PTR [rsp+0x58]
   140042dc3:	mov    rcx,QWORD PTR [rsp+0x180]
   140042dcb:	call   0x140043884
   140042dd0:	mov    rcx,QWORD PTR [rsp+0x58]
   140042dd5:	call   QWORD PTR [rip+0x218b5]        # 0x140064690
   140042ddb:	jmp    0x140042f4d
   140042de0:	mov    rax,QWORD PTR [rsp+0x180]
   140042de8:	movsd  xmm0,QWORD PTR [rsp+0x58]
   140042dee:	movsd  QWORD PTR [rax],xmm0
   140042df2:	jmp    0x140042f4d
   140042df7:	mov    rcx,QWORD PTR [rsp+0x180]
   140042dff:	mov    rax,QWORD PTR [rsp+0x58]
   140042e04:	mov    QWORD PTR [rcx],rax
   140042e07:	jmp    0x140042f4d
   140042e0c:	mov    rax,QWORD PTR [rsp+0x180]
   140042e14:	movsd  xmm0,QWORD PTR [rsp+0x58]
   140042e1a:	movsd  QWORD PTR [rax],xmm0
   140042e1e:	jmp    0x140042f4d
   140042e23:	mov    rax,QWORD PTR [rsp+0x180]
   140042e2b:	movss  xmm0,DWORD PTR [rsp+0x58]
   140042e31:	movss  DWORD PTR [rax],xmm0
   140042e35:	jmp    0x140042f4d
   140042e3a:	mov    rcx,QWORD PTR [rsp+0x180]
   140042e42:	mov    eax,DWORD PTR [rsp+0x58]
   140042e46:	mov    DWORD PTR [rcx],eax
   140042e48:	jmp    0x140042f4d
   140042e4d:	mov    rcx,QWORD PTR [rsp+0x180]
   140042e55:	movzx  eax,WORD PTR [rsp+0x58]
   140042e5a:	mov    WORD PTR [rcx],ax
   140042e5d:	jmp    0x140042f4d
   140042e62:	mov    ecx,esi
   140042e64:	cmp    WORD PTR [rsp+0x58],si
   140042e69:	setne  cl
   140042e6c:	mov    rax,QWORD PTR [rsp+0x180]
   140042e74:	mov    DWORD PTR [rax],ecx
   140042e76:	jmp    0x140042f4d
   140042e7b:	sub    ecx,0xc
   140042e7e:	je     0x140042f2a
   140042e84:	sub    ecx,0x1
   140042e87:	je     0x140042f18
   140042e8d:	sub    ecx,0x3
   140042e90:	je     0x140042f08
   140042e92:	sub    ecx,0x1
   140042e95:	je     0x140042ef8
   140042e97:	sub    ecx,0x1
   140042e9a:	je     0x140042ee6
   140042e9c:	sub    ecx,0x1
   140042e9f:	je     0x140042ed6
   140042ea1:	sub    ecx,0x1
   140042ea4:	je     0x140042ec4
   140042ea6:	cmp    ecx,0x1
   140042ea9:	jne    0x140042f4d
   140042eaf:	mov    rcx,QWORD PTR [rsp+0x180]
   140042eb7:	mov    rax,QWORD PTR [rsp+0x58]
   140042ebc:	mov    QWORD PTR [rcx],rax
   140042ebf:	jmp    0x140042f4d
   140042ec4:	mov    rcx,QWORD PTR [rsp+0x180]
   140042ecc:	mov    rax,QWORD PTR [rsp+0x58]
   140042ed1:	mov    QWORD PTR [rcx],rax
   140042ed4:	jmp    0x140042f4d
   140042ed6:	mov    rcx,QWORD PTR [rsp+0x180]
   140042ede:	mov    eax,DWORD PTR [rsp+0x58]
   140042ee2:	mov    DWORD PTR [rcx],eax
   140042ee4:	jmp    0x140042f4d
   140042ee6:	mov    rcx,QWORD PTR [rsp+0x180]
   140042eee:	movzx  eax,WORD PTR [rsp+0x58]
   140042ef3:	mov    WORD PTR [rcx],ax
   140042ef6:	jmp    0x140042f4d
   140042ef8:	mov    rcx,QWORD PTR [rsp+0x180]
   140042f00:	mov    al,BYTE PTR [rsp+0x58]
   140042f04:	mov    BYTE PTR [rcx],al
   140042f06:	jmp    0x140042f4d
   140042f08:	mov    rcx,QWORD PTR [rsp+0x180]
   140042f10:	mov    al,BYTE PTR [rsp+0x58]
   140042f14:	mov    BYTE PTR [rcx],al
   140042f16:	jmp    0x140042f4d
   140042f18:	mov    rcx,QWORD PTR [rsp+0x180]
   140042f20:	mov    rax,QWORD PTR [rsp+0x58]
   140042f25:	mov    QWORD PTR [rcx],rax
   140042f28:	jmp    0x140042f4d
   140042f2a:	mov    rcx,QWORD PTR [rsp+0x180]
   140042f32:	lea    rdx,[rsp+0x50]
   140042f37:	mov    rax,QWORD PTR [rdx]
   140042f3a:	mov    QWORD PTR [rcx],rax
   140042f3d:	mov    rax,QWORD PTR [rdx+0x8]
   140042f41:	mov    QWORD PTR [rcx+0x8],rax
   140042f45:	mov    rax,QWORD PTR [rdx+0x10]
   140042f49:	mov    QWORD PTR [rcx+0x10],rax
   140042f4d:	lea    rcx,[rsp+0xf0]
   140042f55:	call   0x140040f70
   140042f5a:	nop
   140042f5b:	mov    rcx,QWORD PTR [rsp+0x68]
   140042f60:	cmp    rcx,rsi
   140042f63:	je     0x140042f6a
   140042f65:	call   0x14001ac50
   140042f6a:	mov    rbx,QWORD PTR [rsp+0x178]
   140042f72:	add    rsp,0x120
   140042f79:	pop    r15
   140042f7b:	pop    r14
   140042f7d:	pop    r13
   140042f7f:	pop    r12
   140042f81:	pop    rdi
   140042f82:	pop    rsi
   140042f83:	pop    rbp
   140042f84:	ret    
   140042f85:	int3   
   140042f86:	int3   
   140042f87:	int3   
   140042f88:	int3   
   140042f89:	int3   
   140042f8a:	int3   
   140042f8b:	int3   
   140042f8c:	int3   
   140042f8d:	int3   
   140042f8e:	int3   
   140042f8f:	int3   
   140042f90:	rex push rbp
   140042f92:	sub    rsp,0x20
   140042f96:	mov    rbp,rdx
   140042f99:	lea    rcx,[rbp+0x68]
   140042f9d:	call   0x1400424b0
   140042fa2:	add    rsp,0x20
   140042fa6:	pop    rbp
   140042fa7:	ret    
   140042fa8:	int3   
   140042fa9:	int3   
   140042faa:	int3   
   140042fab:	int3   
   140042fac:	int3   
   140042fad:	int3   
   140042fae:	int3   
   140042faf:	int3   
   140042fb0:	rex push rbp
   140042fb2:	sub    rsp,0x20
   140042fb6:	mov    rbp,rdx
   140042fb9:	lea    rcx,[rbp+0xf0]
   140042fc0:	call   0x140041064
   140042fc5:	add    rsp,0x20
   140042fc9:	pop    rbp
   140042fca:	ret    
   140042fcb:	int3   
   140042fcc:	int3   
   140042fcd:	int3   
   140042fce:	int3   
   140042fcf:	int3   
   140042fd0:	rex push rbp
   140042fd2:	sub    rsp,0x20
   140042fd6:	mov    rbp,rdx
   140042fd9:	lea    rcx,[rbp+0x90]
   140042fe0:	call   0x140040a04
   140042fe5:	add    rsp,0x20
   140042fe9:	pop    rbp
   140042fea:	ret    
   140042feb:	int3   
   140042fec:	int3   
   140042fed:	int3   
   140042fee:	int3   
   140042fef:	int3   
   140042ff0:	rex push rbp
   140042ff2:	sub    rsp,0x20
   140042ff6:	mov    rbp,rdx
   140042ff9:	mov    rcx,QWORD PTR [rbp+0x88]
   140043000:	call   0x140001040
   140043005:	add    rsp,0x20
   140043009:	pop    rbp
   14004300a:	ret    
   14004300b:	int3   
   14004300c:	rex push rbx
   14004300e:	sub    rsp,0x20
   140043012:	mov    rbx,rcx
   140043015:	lea    rcx,[rip+0x2a6c4]        # 0x14006d6e0
   14004301c:	call   QWORD PTR [rip+0x21786]        # 0x1400647a8
   140043022:	lea    rcx,[rip+0x2a69f]        # 0x14006d6c8
   140043029:	mov    DWORD PTR [rbx],eax
   14004302b:	call   QWORD PTR [rip+0x21777]        # 0x1400647a8
   140043031:	lea    rcx,[rip+0x2a678]        # 0x14006d6b0
   140043038:	mov    DWORD PTR [rbx+0x4],eax
   14004303b:	call   QWORD PTR [rip+0x21767]        # 0x1400647a8
   140043041:	lea    rcx,[rip+0x2a648]        # 0x14006d690
   140043048:	mov    DWORD PTR [rbx+0x8],eax
   14004304b:	call   QWORD PTR [rip+0x21757]        # 0x1400647a8
   140043051:	lea    rcx,[rip+0x2a618]        # 0x14006d670
   140043058:	mov    DWORD PTR [rbx+0xc],eax
   14004305b:	call   QWORD PTR [rip+0x21747]        # 0x1400647a8
   140043061:	lea    rcx,[rip+0x2a5f0]        # 0x14006d658
   140043068:	mov    DWORD PTR [rbx+0x10],eax
   14004306b:	call   QWORD PTR [rip+0x21737]        # 0x1400647a8
   140043071:	lea    rcx,[rip+0x2a5b8]        # 0x14006d630
   140043078:	mov    DWORD PTR [rbx+0x14],eax
   14004307b:	call   QWORD PTR [rip+0x21727]        # 0x1400647a8
   140043081:	lea    rcx,[rip+0x2a578]        # 0x14006d600
   140043088:	mov    DWORD PTR [rbx+0x18],eax
   14004308b:	call   QWORD PTR [rip+0x21717]        # 0x1400647a8
   140043091:	lea    rcx,[rip+0x2a550]        # 0x14006d5e8
   140043098:	mov    DWORD PTR [rbx+0x1c],eax
   14004309b:	call   QWORD PTR [rip+0x21707]        # 0x1400647a8
   1400430a1:	lea    rcx,[rip+0x2a528]        # 0x14006d5d0
   1400430a8:	mov    DWORD PTR [rbx+0x20],eax
   1400430ab:	call   QWORD PTR [rip+0x216f7]        # 0x1400647a8
   1400430b1:	lea    rcx,[rip+0x2a4f0]        # 0x14006d5a8
   1400430b8:	mov    DWORD PTR [rbx+0x24],eax
   1400430bb:	call   QWORD PTR [rip+0x216e7]        # 0x1400647a8
   1400430c1:	lea    rcx,[rip+0x2a4a8]        # 0x14006d570
   1400430c8:	mov    DWORD PTR [rbx+0x28],eax
   1400430cb:	call   QWORD PTR [rip+0x216d7]        # 0x1400647a8
   1400430d1:	mov    DWORD PTR [rbx+0x2c],eax
   1400430d4:	mov    rax,rbx
   1400430d7:	add    rsp,0x20
   1400430db:	pop    rbx
   1400430dc:	ret    
   1400430dd:	int3   
   1400430de:	int3   
   1400430df:	int3   
   1400430e0:	rex push rbx
   1400430e2:	sub    rsp,0x20
   1400430e6:	mov    ebx,ecx
   1400430e8:	call   0x140043b24
   1400430ed:	call   0x140043a38
   1400430f2:	call   0x1400439b4
   1400430f7:	test   ebx,ebx
   1400430f9:	jne    0x14004314c
   1400430fb:	call   0x14001c840
   140043100:	test   rax,rax
   140043103:	mov    rbx,rax
   140043106:	je     0x140043128
   140043108:	mov    rcx,QWORD PTR [rax+0x80]
   14004310f:	test   rcx,rcx
   140043112:	je     0x140043120
   140043114:	mov    r8,QWORD PTR [rcx]
   140043117:	mov    edx,0x1
   14004311c:	call   QWORD PTR [r8+0x8]
   140043120:	and    QWORD PTR [rbx+0x80],0x0
   140043128:	call   0x1400210b0
   14004312d:	mov    rbx,rax
   140043130:	cmp    DWORD PTR [rax+0x1dc],0x1
   140043137:	jne    0x14004314c
   140043139:	call   QWORD PTR [rip+0x21b01]        # 0x140064c40
   14004313f:	call   QWORD PTR [rip+0x21af3]        # 0x140064c38
   140043145:	and    DWORD PTR [rbx+0x1dc],0x0
   14004314c:	add    rsp,0x20
   140043150:	pop    rbx
   140043151:	ret    
   140043152:	int3   
   140043153:	int3   
   140043154:	sub    rsp,0x28
   140043158:	test   ecx,ecx
   14004315a:	je     0x140043165
   14004315c:	mov    ecx,edx
   14004315e:	call   0x1400430e0
   140043163:	jmp    0x1400431a6
   140043165:	cmp    DWORD PTR [rip+0x49444],0x0        # 0x14008c5b0
   14004316c:	jne    0x140043181
   14004316e:	call   QWORD PTR [rip+0x2109c]        # 0x140064210
   140043174:	add    DWORD PTR [rip+0x49435],0x1        # 0x14008c5b0
   14004317b:	mov    DWORD PTR [rip+0x4397f],eax        # 0x140086b00
   140043181:	call   QWORD PTR [rip+0x21089]        # 0x140064210
   140043187:	sub    eax,DWORD PTR [rip+0x43973]        # 0x140086b00
   14004318d:	cmp    eax,0xea60
   140043192:	jbe    0x1400431a6
   140043194:	call   QWORD PTR [rip+0x21aa6]        # 0x140064c40
   14004319a:	call   QWORD PTR [rip+0x21070]        # 0x140064210
   1400431a0:	mov    DWORD PTR [rip+0x4395a],eax        # 0x140086b00
   1400431a6:	add    rsp,0x28
   1400431aa:	ret    
   1400431ab:	int3   
   1400431ac:	rex push rdi
   1400431ae:	sub    rsp,0x30
   1400431b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400431bb:	mov    QWORD PTR [rsp+0x48],rbx
   1400431c0:	call   0x1400210b0
   1400431c5:	mov    rdi,rax
   1400431c8:	call   0x140021a70
   1400431cd:	xor    ebx,ebx
   1400431cf:	cmp    BYTE PTR [rax+0x28],bl
   1400431d2:	je     0x1400431e0
   1400431d4:	or     DWORD PTR [rdi+0x1dc],0xffffffff
   1400431db:	lea    eax,[rbx+0x1]
   1400431de:	jmp    0x140043259
   1400431e0:	xor    ecx,ecx
   1400431e2:	call   QWORD PTR [rip+0x21a60]        # 0x140064c48
   1400431e8:	cmp    eax,ebx
   1400431ea:	jge    0x1400431f7
   1400431ec:	xor    ecx,ecx
   1400431ee:	call   0x1400430e0
   1400431f3:	xor    eax,eax
   1400431f5:	jmp    0x140043259
   1400431f7:	mov    DWORD PTR [rdi+0x1dc],0x1
   140043201:	call   0x14001c840
   140043206:	mov    rdi,rax
   140043209:	lea    rax,[rip+0xffffffffffffff44]        # 0x140043154
   140043210:	mov    QWORD PTR [rdi+0x78],rax
   140043214:	cmp    QWORD PTR [rdi+0x80],rbx
   14004321b:	jne    0x140043254
   14004321d:	mov    ecx,0x68
   140043222:	call   0x14001ac0c
   140043227:	mov    QWORD PTR [rsp+0x40],rax
   14004322c:	cmp    rax,rbx
   14004322f:	je     0x14004323c
   140043231:	mov    rcx,rax
   140043234:	call   0x140044158
   140043239:	mov    rbx,rax
   14004323c:	mov    QWORD PTR [rdi+0x80],rbx
   140043243:	call   0x14001c840
   140043248:	mov    rcx,QWORD PTR [rax+0x80]
   14004324f:	call   0x140043b58
   140043254:	mov    eax,0x1
   140043259:	mov    rbx,QWORD PTR [rsp+0x48]
   14004325e:	add    rsp,0x30
   140043262:	pop    rdi
   140043263:	ret    
   140043264:	int3   
   140043265:	int3   
   140043266:	int3   
   140043267:	int3   
   140043268:	int3   
   140043269:	int3   
   14004326a:	int3   
   14004326b:	int3   
   14004326c:	rex push rbp
   14004326e:	sub    rsp,0x20
   140043272:	mov    rbp,rdx
   140043275:	mov    rcx,QWORD PTR [rbp+0x40]
   140043279:	call   0x140001040
   14004327e:	add    rsp,0x20
   140043282:	pop    rbp
   140043283:	ret    
   140043284:	lea    rax,[rip+0x4387d]        # 0x140086b08
   14004328b:	ret    
   14004328c:	mov    QWORD PTR [rsp+0x8],rbx
   140043291:	mov    QWORD PTR [rsp+0x10],rbp
   140043296:	mov    QWORD PTR [rsp+0x18],rsi
   14004329b:	push   rdi
   14004329c:	sub    rsp,0x20
   1400432a0:	test   rdx,rdx
   1400432a3:	mov    rdi,rdx
   1400432a6:	mov    rbx,rcx
   1400432a9:	jns    0x1400432b1
   1400432ab:	call   0x1400208f8
   1400432b0:	int3   
   1400432b1:	test   r8,r8
   1400432b4:	js     0x1400432ba
   1400432b6:	mov    QWORD PTR [rcx+0x20],r8
   1400432ba:	test   rdx,rdx
   1400432bd:	mov    rcx,QWORD PTR [rcx+0x8]
   1400432c1:	jne    0x1400432dc
   1400432c3:	call   0x14001ac50
   1400432c8:	and    QWORD PTR [rbx+0x8],0x0
   1400432cd:	and    QWORD PTR [rbx+0x18],0x0
   1400432d2:	and    QWORD PTR [rbx+0x10],0x0
   1400432d7:	jmp    0x140043402
   1400432dc:	test   rcx,rcx
   1400432df:	jne    0x140043313
   1400432e1:	mov    eax,0xffffffff
   1400432e6:	cmp    rdx,rax
   1400432e9:	jbe    0x1400432f1
   1400432eb:	call   0x1400208f8
   1400432f0:	int3   
   1400432f1:	mov    rcx,rdx
   1400432f4:	call   0x14001ac0c
   1400432f9:	mov    r8,rdi
   1400432fc:	xor    edx,edx
   1400432fe:	mov    rcx,rax
   140043301:	mov    QWORD PTR [rbx+0x8],rax
   140043305:	call   0x140047720
   14004330a:	mov    QWORD PTR [rbx+0x18],rdi
   14004330e:	jmp    0x1400433fe
   140043313:	mov    r8,QWORD PTR [rbx+0x18]
   140043317:	cmp    rdx,r8
   14004331a:	jg     0x14004333e
   14004331c:	mov    rax,QWORD PTR [rbx+0x10]
   140043320:	cmp    rdx,rax
   140043323:	jle    0x1400433fe
   140043329:	mov    r8,rdx
   14004332c:	add    rcx,rax
   14004332f:	xor    edx,edx
   140043331:	sub    r8,rax
   140043334:	call   0x140047720
   140043339:	jmp    0x1400433fe
   14004333e:	mov    rax,QWORD PTR [rbx+0x20]
   140043342:	test   rax,rax
   140043345:	jne    0x140043378
   140043347:	mov    rax,QWORD PTR [rbx+0x10]
   14004334b:	cqo    
   14004334d:	and    edx,0x7
   140043350:	add    rax,rdx
   140043353:	mov    edx,0x4
   140043358:	sar    rax,0x3
   14004335c:	cmp    rax,rdx
   14004335f:	mov    rcx,rax
   140043362:	jl     0x14004336e
   140043364:	mov    eax,0x400
   140043369:	cmp    rcx,rax
   14004336c:	jg     0x140043378
   14004336e:	mov    rax,rcx
   140043371:	cmp    rcx,rdx
   140043374:	cmovl  rax,rdx
   140043378:	add    rax,r8
   14004337b:	mov    rsi,rdi
   14004337e:	cmp    rdi,rax
   140043381:	cmovl  rsi,rax
   140043385:	cmp    rsi,r8
   140043388:	jge    0x140043390
   14004338a:	call   0x1400208f8
   14004338f:	int3   
   140043390:	mov    rcx,rsi
   140043393:	call   0x14001ac0c
   140043398:	mov    r9,QWORD PTR [rbx+0x10]
   14004339c:	mov    r8,QWORD PTR [rbx+0x8]
   1400433a0:	mov    rcx,rax
   1400433a3:	mov    rdx,rsi
   1400433a6:	mov    rbp,rax
   1400433a9:	call   0x1400466d0
   1400433ae:	test   eax,eax
   1400433b0:	je     0x1400433d8
   1400433b2:	cmp    eax,0xc
   1400433b5:	je     0x1400433d2
   1400433b7:	cmp    eax,0x16
   1400433ba:	je     0x1400433cc
   1400433bc:	cmp    eax,0x22
   1400433bf:	je     0x1400433cc
   1400433c1:	cmp    eax,0x50
   1400433c4:	je     0x1400433d8
   1400433c6:	call   0x1400208f8
   1400433cb:	int3   
   1400433cc:	call   0x1400208f8
   1400433d1:	int3   
   1400433d2:	call   0x1400208b0
   1400433d7:	int3   
   1400433d8:	mov    rax,QWORD PTR [rbx+0x10]
   1400433dc:	mov    r8,rdi
   1400433df:	xor    edx,edx
   1400433e1:	lea    rcx,[rax+rbp*1]
   1400433e5:	sub    r8,rax
   1400433e8:	call   0x140047720
   1400433ed:	mov    rcx,QWORD PTR [rbx+0x8]
   1400433f1:	call   0x14001ac50
   1400433f6:	mov    QWORD PTR [rbx+0x8],rbp
   1400433fa:	mov    QWORD PTR [rbx+0x18],rsi
   1400433fe:	mov    QWORD PTR [rbx+0x10],rdi
   140043402:	mov    rbx,QWORD PTR [rsp+0x30]
   140043407:	mov    rbp,QWORD PTR [rsp+0x38]
   14004340c:	mov    rsi,QWORD PTR [rsp+0x40]
   140043411:	add    rsp,0x20
   140043415:	pop    rdi
   140043416:	ret    
   140043417:	int3   
   140043418:	mov    QWORD PTR [rsp+0x8],rbx
   14004341d:	mov    QWORD PTR [rsp+0x10],rbp
   140043422:	mov    QWORD PTR [rsp+0x18],rsi
   140043427:	push   r12
   140043429:	sub    rsp,0x20
   14004342d:	mov    eax,DWORD PTR [rdx+0x20]
   140043430:	mov    rsi,rdx
   140043433:	mov    rbx,rcx
   140043436:	not    eax
   140043438:	test   al,0x1
   14004343a:	je     0x14004348f
   14004343c:	mov    rdx,QWORD PTR [rcx+0x10]
   140043440:	mov    rcx,rsi
   140043443:	call   0x140030e68
   140043448:	mov    rbp,QWORD PTR [rbx+0x10]
   14004344c:	mov    r12,QWORD PTR [rbx+0x8]
   140043450:	test   rbp,rbp
   140043453:	je     0x140043479
   140043455:	mov    ebx,0x7fffffff
   14004345a:	mov    rdx,r12
   14004345d:	mov    rcx,rsi
   140043460:	cmp    rbp,rbx
   140043463:	cmovb  ebx,ebp
   140043466:	mov    r8d,ebx
   140043469:	call   0x140030cec
   14004346e:	mov    r11d,ebx
   140043471:	add    r12,r11
   140043474:	sub    rbp,r11
   140043477:	jne    0x140043455
   140043479:	mov    rbx,QWORD PTR [rsp+0x30]
   14004347e:	mov    rbp,QWORD PTR [rsp+0x38]
   140043483:	mov    rsi,QWORD PTR [rsp+0x40]
   140043488:	add    rsp,0x20
   14004348c:	pop    r12
   14004348e:	ret    
   14004348f:	mov    rcx,rdx
   140043492:	call   0x140030fb8
   140043497:	or     r8,0xffffffffffffffff
   14004349b:	mov    rcx,rbx
   14004349e:	mov    rdx,rax
   1400434a1:	call   0x14004328c
   1400434a6:	mov    rbp,QWORD PTR [rbx+0x10]
   1400434aa:	mov    rbx,QWORD PTR [rbx+0x8]
   1400434ae:	test   rbp,rbp
   1400434b1:	je     0x140043479
   1400434b3:	mov    r12d,0x7fffffff
   1400434b9:	mov    rdx,rbx
   1400434bc:	mov    rcx,rsi
   1400434bf:	cmp    rbp,r12
   1400434c2:	cmovb  r12d,ebp
   1400434c6:	mov    r8d,r12d
   1400434c9:	call   0x140030784
   1400434ce:	cmp    eax,r12d
   1400434d1:	jne    0x1400434e0
   1400434d3:	mov    eax,r12d
   1400434d6:	add    rbx,rax
   1400434d9:	sub    rbp,rax
   1400434dc:	jne    0x1400434b3
   1400434de:	jmp    0x140043479
   1400434e0:	xor    edx,edx
   1400434e2:	lea    ecx,[rdx+0x3]
   1400434e5:	call   0x14003067c
   1400434ea:	int3   
   1400434eb:	int3   
   1400434ec:	sub    rsp,0x28
   1400434f0:	mov    ecx,0x28
   1400434f5:	call   0x14001ac0c
   1400434fa:	xor    edx,edx
   1400434fc:	cmp    rax,rdx
   1400434ff:	je     0x14004351d
   140043501:	lea    rcx,[rip+0x2a228]        # 0x14006d730
   140043508:	mov    QWORD PTR [rax+0x8],rdx
   14004350c:	mov    QWORD PTR [rax+0x20],rdx
   140043510:	mov    QWORD PTR [rax+0x18],rdx
   140043514:	mov    QWORD PTR [rax+0x10],rdx
   140043518:	mov    QWORD PTR [rax],rcx
   14004351b:	jmp    0x140043520
   14004351d:	mov    rax,rdx
   140043520:	add    rsp,0x28
   140043524:	ret    
   140043525:	int3   
   140043526:	int3   
   140043527:	int3   
   140043528:	mov    QWORD PTR [rsp+0x8],rbx
   14004352d:	push   rdi
   14004352e:	sub    rsp,0x20
   140043532:	lea    rax,[rip+0x2a1f7]        # 0x14006d730
   140043539:	mov    rdi,rcx
   14004353c:	mov    ebx,edx
   14004353e:	mov    QWORD PTR [rcx],rax
   140043541:	mov    rcx,QWORD PTR [rcx+0x8]
   140043545:	call   0x14001ac50
   14004354a:	test   bl,0x1
   14004354d:	je     0x140043557
   14004354f:	mov    rcx,rdi
   140043552:	call   0x14001ac50
   140043557:	mov    rax,rdi
   14004355a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004355f:	add    rsp,0x20
   140043563:	pop    rdi
   140043564:	ret    
   140043565:	int3   
   140043566:	int3   
   140043567:	int3   
   140043568:	lea    rax,[rip+0x435f1]        # 0x140086b60
   14004356f:	ret    
   140043570:	mov    rax,rsp
   140043573:	mov    QWORD PTR [rax+0x8],rbx
   140043577:	mov    QWORD PTR [rax+0x10],rbp
   14004357b:	mov    QWORD PTR [rax+0x18],rsi
   14004357f:	mov    QWORD PTR [rax+0x20],rdi
   140043583:	push   r12
   140043585:	sub    rsp,0x20
   140043589:	test   rdx,rdx
   14004358c:	mov    rsi,rdx
   14004358f:	mov    rdi,rcx
   140043592:	jns    0x14004359a
   140043594:	call   0x1400208f8
   140043599:	int3   
   14004359a:	test   r8,r8
   14004359d:	js     0x1400435a3
   14004359f:	mov    QWORD PTR [rcx+0x20],r8
   1400435a3:	test   rdx,rdx
   1400435a6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400435aa:	jne    0x1400435c5
   1400435ac:	call   0x14001ac50
   1400435b1:	and    QWORD PTR [rdi+0x8],0x0
   1400435b6:	and    QWORD PTR [rdi+0x18],0x0
   1400435bb:	and    QWORD PTR [rdi+0x10],0x0
   1400435c0:	jmp    0x1400436f6
   1400435c5:	test   rcx,rcx
   1400435c8:	jne    0x1400435f3
   1400435ca:	mov    rbx,rdx
   1400435cd:	shl    rbx,0x3
   1400435d1:	mov    rcx,rbx
   1400435d4:	call   0x14001ac0c
   1400435d9:	mov    r8,rbx
   1400435dc:	xor    edx,edx
   1400435de:	mov    rcx,rax
   1400435e1:	mov    QWORD PTR [rdi+0x8],rax
   1400435e5:	call   0x140047720
   1400435ea:	mov    QWORD PTR [rdi+0x18],rsi
   1400435ee:	jmp    0x1400436f2
   1400435f3:	mov    r8,QWORD PTR [rdi+0x18]
   1400435f7:	cmp    rdx,r8
   1400435fa:	jg     0x140043623
   1400435fc:	mov    rax,QWORD PTR [rdi+0x10]
   140043600:	cmp    rdx,rax
   140043603:	jle    0x1400436f2
   140043609:	mov    r8,rdx
   14004360c:	lea    rcx,[rcx+rax*8]
   140043610:	xor    edx,edx
   140043612:	sub    r8,rax
   140043615:	shl    r8,0x3
   140043619:	call   0x140047720
   14004361e:	jmp    0x1400436f2
   140043623:	mov    rax,QWORD PTR [rdi+0x20]
   140043627:	test   rax,rax
   14004362a:	jne    0x14004365d
   14004362c:	mov    rax,QWORD PTR [rdi+0x10]
   140043630:	cqo    
   140043632:	and    edx,0x7
   140043635:	add    rax,rdx
   140043638:	mov    edx,0x4
   14004363d:	sar    rax,0x3
   140043641:	cmp    rax,rdx
   140043644:	mov    rcx,rax
   140043647:	jl     0x140043653
   140043649:	mov    eax,0x400
   14004364e:	cmp    rcx,rax
   140043651:	jg     0x14004365d
   140043653:	mov    rax,rcx
   140043656:	cmp    rcx,rdx
   140043659:	cmovl  rax,rdx
   14004365d:	add    rax,r8
   140043660:	mov    rbp,rsi
   140043663:	cmp    rsi,rax
   140043666:	cmovl  rbp,rax
   14004366a:	cmp    rbp,r8
   14004366d:	jge    0x140043675
   14004366f:	call   0x1400208f8
   140043674:	int3   
   140043675:	mov    rbx,rbp
   140043678:	shl    rbx,0x3
   14004367c:	mov    rcx,rbx
   14004367f:	call   0x14001ac0c
   140043684:	mov    r9,QWORD PTR [rdi+0x10]
   140043688:	mov    r8,QWORD PTR [rdi+0x8]
   14004368c:	shl    r9,0x3
   140043690:	mov    rdx,rbx
   140043693:	mov    rcx,rax
   140043696:	mov    r12,rax
   140043699:	call   0x1400466d0
   14004369e:	test   eax,eax
   1400436a0:	je     0x1400436c8
   1400436a2:	cmp    eax,0xc
   1400436a5:	je     0x1400436c2
   1400436a7:	cmp    eax,0x16
   1400436aa:	je     0x1400436bc
   1400436ac:	cmp    eax,0x22
   1400436af:	je     0x1400436bc
   1400436b1:	cmp    eax,0x50
   1400436b4:	je     0x1400436c8
   1400436b6:	call   0x1400208f8
   1400436bb:	int3   
   1400436bc:	call   0x1400208f8
   1400436c1:	int3   
   1400436c2:	call   0x1400208b0
   1400436c7:	int3   
   1400436c8:	mov    rax,QWORD PTR [rdi+0x10]
   1400436cc:	mov    r8,rsi
   1400436cf:	xor    edx,edx
   1400436d1:	sub    r8,rax
   1400436d4:	lea    rcx,[r12+rax*8]
   1400436d8:	shl    r8,0x3
   1400436dc:	call   0x140047720
   1400436e1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400436e5:	call   0x14001ac50
   1400436ea:	mov    QWORD PTR [rdi+0x8],r12
   1400436ee:	mov    QWORD PTR [rdi+0x18],rbp
   1400436f2:	mov    QWORD PTR [rdi+0x10],rsi
   1400436f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400436fb:	mov    rbp,QWORD PTR [rsp+0x38]
   140043700:	mov    rsi,QWORD PTR [rsp+0x40]
   140043705:	mov    rdi,QWORD PTR [rsp+0x48]
   14004370a:	add    rsp,0x20
   14004370e:	pop    r12
   140043710:	ret    
   140043711:	int3   
   140043712:	int3   
   140043713:	int3   
   140043714:	mov    QWORD PTR [rsp+0x8],rbx
   140043719:	mov    QWORD PTR [rsp+0x10],rbp
   14004371e:	mov    QWORD PTR [rsp+0x18],rsi
   140043723:	push   rdi
   140043724:	sub    rsp,0x20
   140043728:	mov    eax,DWORD PTR [rdx+0x20]
   14004372b:	mov    rbp,rdx
   14004372e:	mov    rsi,rcx
   140043731:	not    eax
   140043733:	test   al,0x1
   140043735:	je     0x140043767
   140043737:	mov    rdx,QWORD PTR [rcx+0x10]
   14004373b:	mov    rcx,rbp
   14004373e:	call   0x140030e68
   140043743:	xor    edi,edi
   140043745:	cmp    QWORD PTR [rsi+0x10],rdi
   140043749:	jle    0x1400437a2
   14004374b:	mov    rdx,QWORD PTR [rsi+0x8]
   14004374f:	mov    rcx,rbp
   140043752:	mov    rdx,QWORD PTR [rdx+rdi*8]
   140043756:	call   0x140044e3c
   14004375b:	add    rdi,0x1
   14004375f:	cmp    rdi,QWORD PTR [rsi+0x10]
   140043763:	jl     0x14004374b
   140043765:	jmp    0x1400437a2
   140043767:	mov    rcx,rdx
   14004376a:	call   0x140030fb8
   14004376f:	or     r8,0xffffffffffffffff
   140043773:	mov    rcx,rsi
   140043776:	mov    rdx,rax
   140043779:	call   0x140043570
   14004377e:	xor    edi,edi
   140043780:	cmp    QWORD PTR [rsi+0x10],rdi
   140043784:	jle    0x1400437a2
   140043786:	mov    rbx,QWORD PTR [rsi+0x8]
   14004378a:	xor    edx,edx
   14004378c:	mov    rcx,rbp
   14004378f:	call   0x140044fc8
   140043794:	mov    QWORD PTR [rbx+rdi*8],rax
   140043798:	add    rdi,0x1
   14004379c:	cmp    rdi,QWORD PTR [rsi+0x10]
   1400437a0:	jl     0x140043786
   1400437a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400437a7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400437ac:	mov    rsi,QWORD PTR [rsp+0x40]
   1400437b1:	add    rsp,0x20
   1400437b5:	pop    rdi
   1400437b6:	ret    
   1400437b7:	int3   
   1400437b8:	sub    rsp,0x28
   1400437bc:	mov    ecx,0x28
   1400437c1:	call   0x14001ac0c
   1400437c6:	xor    edx,edx
   1400437c8:	cmp    rax,rdx
   1400437cb:	je     0x1400437e9
   1400437cd:	lea    rcx,[rip+0x29f8c]        # 0x14006d760
   1400437d4:	mov    QWORD PTR [rax+0x8],rdx
   1400437d8:	mov    QWORD PTR [rax+0x20],rdx
   1400437dc:	mov    QWORD PTR [rax+0x18],rdx
   1400437e0:	mov    QWORD PTR [rax+0x10],rdx
   1400437e4:	mov    QWORD PTR [rax],rcx
   1400437e7:	jmp    0x1400437ec
   1400437e9:	mov    rax,rdx
   1400437ec:	add    rsp,0x28
   1400437f0:	ret    
   1400437f1:	int3   
   1400437f2:	int3   
   1400437f3:	int3   
   1400437f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400437f9:	push   rdi
   1400437fa:	sub    rsp,0x20
   1400437fe:	lea    rax,[rip+0x29f5b]        # 0x14006d760
   140043805:	mov    rdi,rcx
   140043808:	mov    ebx,edx
   14004380a:	mov    QWORD PTR [rcx],rax
   14004380d:	mov    rcx,QWORD PTR [rcx+0x8]
   140043811:	call   0x14001ac50
   140043816:	test   bl,0x1
   140043819:	je     0x140043823
   14004381b:	mov    rcx,rdi
   14004381e:	call   0x14001ac50
   140043823:	mov    rax,rdi
   140043826:	mov    rbx,QWORD PTR [rsp+0x30]
   14004382b:	add    rsp,0x20
   14004382f:	pop    rdi
   140043830:	ret    
   140043831:	int3   
   140043832:	int3   
   140043833:	int3   
   140043834:	rex push rbx
   140043836:	sub    rsp,0x20
   14004383a:	mov    edx,0x1
   14004383f:	mov    rbx,rcx
   140043842:	call   0x140024d08
   140043847:	test   eax,eax
   140043849:	je     0x140043853
   14004384b:	mov    rcx,rbx
   14004384e:	call   0x1400255d4
   140043853:	add    rsp,0x20
   140043857:	pop    rbx
   140043858:	ret    
   140043859:	int3   
   14004385a:	int3   
   14004385b:	int3   
   14004385c:	jmp    0x1400255d4
   140043861:	int3   
   140043862:	int3   
   140043863:	int3   
   140043864:	sub    rsp,0x28
   140043868:	call   0x1400255d4
   14004386d:	xor    ecx,ecx
   14004386f:	cmp    rax,rcx
   140043872:	setne  cl
   140043875:	mov    eax,ecx
   140043877:	add    rsp,0x28
   14004387b:	ret    
   14004387c:	lea    rax,[rip+0x29ef5]        # 0x14006d778
   140043883:	ret    
   140043884:	test   rcx,rcx
   140043887:	je     0x140043969
   14004388d:	mov    QWORD PTR [rsp+0x8],rbx
   140043892:	mov    QWORD PTR [rsp+0x10],rsi
   140043897:	push   rdi
   140043898:	sub    rsp,0x20
   14004389c:	mov    rdi,rcx
   14004389f:	mov    rcx,rdx
   1400438a2:	mov    rsi,rdx
   1400438a5:	call   QWORD PTR [rip+0x20ddd]        # 0x140064688
   1400438ab:	mov    r8d,0x1
   1400438b1:	movsxd rbx,eax
   1400438b4:	mov    rax,QWORD PTR [rdi]
   1400438b7:	sub    r8d,DWORD PTR [rax-0x8]
   1400438bb:	mov    eax,DWORD PTR [rax-0xc]
   1400438be:	sub    eax,ebx
   1400438c0:	or     r8d,eax
   1400438c3:	jge    0x1400438cf
   1400438c5:	mov    edx,ebx
   1400438c7:	mov    rcx,rdi
   1400438ca:	call   0x140002d40
   1400438cf:	test   ebx,ebx
   1400438d1:	mov    rcx,QWORD PTR [rdi]
   1400438d4:	js     0x140043975
   1400438da:	cmp    ebx,DWORD PTR [rcx-0xc]
   1400438dd:	jg     0x140043975
   1400438e3:	mov    DWORD PTR [rcx-0x10],ebx
   1400438e6:	mov    rax,QWORD PTR [rdi]
   1400438e9:	lea    rdx,[rbx+rbx*1]
   1400438ed:	and    WORD PTR [rdx+rax*1],0x0
   1400438f2:	mov    r9,rdx
   1400438f5:	mov    r8,rsi
   1400438f8:	call   0x1400466d0
   1400438fd:	test   eax,eax
   1400438ff:	je     0x140043927
   140043901:	cmp    eax,0xc
   140043904:	je     0x140043921
   140043906:	cmp    eax,0x16
   140043909:	je     0x14004391b
   14004390b:	cmp    eax,0x22
   14004390e:	je     0x14004391b
   140043910:	cmp    eax,0x50
   140043913:	je     0x140043927
   140043915:	call   0x1400208f8
   14004391a:	int3   
   14004391b:	call   0x1400208f8
   140043920:	int3   
   140043921:	call   0x1400208b0
   140043926:	int3   
   140043927:	cmp    ebx,0xffffffff
   14004392a:	jne    0x140043940
   14004392c:	mov    rcx,QWORD PTR [rdi]
   14004392f:	test   rcx,rcx
   140043932:	jne    0x140043938
   140043934:	xor    ebx,ebx
   140043936:	jmp    0x140043944
   140043938:	call   0x140048610
   14004393d:	mov    rbx,rax
   140043940:	test   ebx,ebx
   140043942:	js     0x14004396a
   140043944:	mov    rax,QWORD PTR [rdi]
   140043947:	cmp    ebx,DWORD PTR [rax-0xc]
   14004394a:	jg     0x14004396a
   14004394c:	mov    rsi,QWORD PTR [rsp+0x38]
   140043951:	mov    DWORD PTR [rax-0x10],ebx
   140043954:	mov    rax,QWORD PTR [rdi]
   140043957:	movsxd rcx,ebx
   14004395a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004395f:	and    WORD PTR [rax+rcx*2],0x0
   140043964:	add    rsp,0x20
   140043968:	pop    rdi
   140043969:	ret    
   14004396a:	mov    ecx,0x80070057
   14004396f:	call   0x140001430
   140043974:	int3   
   140043975:	mov    ecx,0x80070057
   14004397a:	call   0x140001430
   14004397f:	int3   
   140043980:	mov    rax,QWORD PTR [rsp]
   140043984:	mov    QWORD PTR [rdx-0x8],rax
   140043988:	lea    rsp,[rdx-0x8]
   14004398c:	mov    rax,rcx
   14004398f:	movsd  xmm0,QWORD PTR [rdx]
   140043993:	movsd  xmm1,QWORD PTR [rdx+0x8]
   140043998:	movsd  xmm2,QWORD PTR [rdx+0x10]
   14004399d:	movsd  xmm3,QWORD PTR [rdx+0x18]
   1400439a2:	mov    rcx,QWORD PTR [rdx]
   1400439a5:	mov    r8,QWORD PTR [rdx+0x10]
   1400439a9:	mov    r9,QWORD PTR [rdx+0x18]
   1400439ad:	mov    rdx,QWORD PTR [rdx+0x8]
   1400439b1:	jmp    rax
   1400439b3:	int3   
   1400439b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400439b9:	push   rdi
   1400439ba:	sub    rsp,0x20
   1400439be:	call   0x140021a70
   1400439c3:	mov    ecx,0xb
   1400439c8:	mov    rdi,rax
   1400439cb:	call   0x14002d810
   1400439d0:	jmp    0x1400439f0
   1400439d2:	lea    rcx,[rdi+0x70]
   1400439d6:	mov    rdx,rbx
   1400439d9:	call   0x14002cd4c
   1400439de:	test   rbx,rbx
   1400439e1:	je     0x1400439f0
   1400439e3:	mov    rax,QWORD PTR [rbx]
   1400439e6:	mov    edx,0x1
   1400439eb:	mov    rcx,rbx
   1400439ee:	call   QWORD PTR [rax]
   1400439f0:	mov    rbx,QWORD PTR [rdi+0x70]
   1400439f4:	test   rbx,rbx
   1400439f7:	jne    0x1400439d2
   1400439f9:	lea    ecx,[rbx+0xb]
   1400439fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140043a01:	add    rsp,0x20
   140043a05:	pop    rdi
   140043a06:	jmp    0x14002d8a4
   140043a0b:	int3   
   140043a0c:	rex push rbx
   140043a0e:	sub    rsp,0x20
   140043a12:	cmp    BYTE PTR [rcx+0x7a],0x0
   140043a16:	mov    rbx,rcx
   140043a19:	je     0x140043a30
   140043a1b:	mov    ecx,DWORD PTR [rcx+0x48]
   140043a1e:	test   ecx,ecx
   140043a20:	je     0x140043a2c
   140043a22:	call   QWORD PTR [rip+0x21240]        # 0x140064c68
   140043a28:	and    DWORD PTR [rbx+0x48],0x0
   140043a2c:	mov    BYTE PTR [rbx+0x7a],0x0
   140043a30:	add    rsp,0x20
   140043a34:	pop    rbx
   140043a35:	ret    
   140043a36:	int3   
   140043a37:	int3   
   140043a38:	rex push rbx
   140043a3a:	sub    rsp,0x20
   140043a3e:	call   0x140021a70
   140043a43:	xor    ecx,ecx
   140043a45:	mov    rbx,rax
   140043a48:	call   0x14002d810
   140043a4d:	jmp    0x140043a57
   140043a4f:	mov    rcx,rbx
   140043a52:	call   0x140043a0c
   140043a57:	mov    rbx,QWORD PTR [rbx+0x40]
   140043a5b:	test   rbx,rbx
   140043a5e:	jne    0x140043a4f
   140043a60:	xor    ecx,ecx
   140043a62:	add    rsp,0x20
   140043a66:	pop    rbx
   140043a67:	jmp    0x14002d8a4
   140043a6c:	sub    rsp,0x38
   140043a70:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140043a79:	mov    ecx,0x20
   140043a7e:	call   0x14002cba4
   140043a83:	mov    rcx,rax
   140043a86:	mov    QWORD PTR [rsp+0x40],rax
   140043a8b:	xor    eax,eax
   140043a8d:	cmp    rcx,rax
   140043a90:	je     0x140043a98
   140043a92:	call   0x1400454d4
   140043a97:	nop
   140043a98:	add    rsp,0x38
   140043a9c:	ret    
   140043a9d:	int3   
   140043a9e:	int3   
   140043a9f:	int3   
   140043aa0:	int3   
   140043aa1:	int3   
   140043aa2:	int3   
   140043aa3:	int3   
   140043aa4:	int3   
   140043aa5:	int3   
   140043aa6:	int3   
   140043aa7:	int3   
   140043aa8:	int3   
   140043aa9:	int3   
   140043aaa:	int3   
   140043aab:	int3   
   140043aac:	rex push rbp
   140043aae:	sub    rsp,0x20
   140043ab2:	mov    rbp,rdx
   140043ab5:	mov    rcx,QWORD PTR [rbp+0x40]
   140043ab9:	call   0x14002cbc8
   140043abe:	add    rsp,0x20
   140043ac2:	pop    rbp
   140043ac3:	ret    
   140043ac4:	rex push rbx
   140043ac6:	sub    rsp,0x20
   140043aca:	lea    rdx,[rip+0xffffffffffffff9b]        # 0x140043a6c
   140043ad1:	lea    rcx,[rip+0x48b30]        # 0x14008c608
   140043ad8:	call   0x14002cc70
   140043add:	test   rax,rax
   140043ae0:	mov    rbx,rax
   140043ae3:	jne    0x140043aeb
   140043ae5:	call   0x1400208f8
   140043aea:	int3   
   140043aeb:	mov    rcx,QWORD PTR [rax+0x10]
   140043aef:	test   rcx,rcx
   140043af2:	jne    0x140043af8
   140043af4:	xor    eax,eax
   140043af6:	jmp    0x140043b1c
   140043af8:	lea    rdx,[rip+0x2c979]        # 0x140070478
   140043aff:	call   0x14003e880
   140043b04:	mov    rcx,rax
   140043b07:	call   QWORD PTR [rip+0x21153]        # 0x140064c60
   140043b0d:	test   eax,eax
   140043b0f:	je     0x140043b18
   140043b11:	and    QWORD PTR [rbx+0x10],0x0
   140043b16:	jmp    0x140043af4
   140043b18:	mov    rax,QWORD PTR [rbx+0x10]
   140043b1c:	add    rsp,0x20
   140043b20:	pop    rbx
   140043b21:	ret    
   140043b22:	int3   
   140043b23:	int3   
   140043b24:	sub    rsp,0x28
   140043b28:	call   0x140043ac4
   140043b2d:	test   rax,rax
   140043b30:	je     0x140043b38
   140043b32:	call   QWORD PTR [rip+0x21120]        # 0x140064c58
   140043b38:	add    rsp,0x28
   140043b3c:	ret    
   140043b3d:	int3   
   140043b3e:	int3   
   140043b3f:	int3   
   140043b40:	add    DWORD PTR [rcx+0x44],0x1
   140043b44:	ret    
   140043b45:	int3   
   140043b46:	int3   
   140043b47:	int3   
   140043b48:	mov    eax,DWORD PTR [rcx+0x44]
   140043b4b:	test   eax,eax
   140043b4d:	je     0x140043b55
   140043b4f:	add    eax,0xffffffff
   140043b52:	mov    DWORD PTR [rcx+0x44],eax
   140043b55:	ret    
   140043b56:	int3   
   140043b57:	int3   
   140043b58:	rex push rbx
   140043b5a:	sub    rsp,0x20
   140043b5e:	mov    rbx,rcx
   140043b61:	xor    edx,edx
   140043b63:	add    rcx,0x60
   140043b67:	call   QWORD PTR [rip+0x210e3]        # 0x140064c50
   140043b6d:	test   eax,eax
   140043b6f:	jne    0x140043b7b
   140043b71:	mov    eax,0x1
   140043b76:	mov    DWORD PTR [rbx+0x40],eax
   140043b79:	jmp    0x140043b7d
   140043b7b:	xor    eax,eax
   140043b7d:	add    rsp,0x20
   140043b81:	pop    rbx
   140043b82:	ret    
   140043b83:	int3   
   140043b84:	rex push rbx
   140043b86:	sub    rsp,0x20
   140043b8a:	cmp    DWORD PTR [rcx+0x40],0x0
   140043b8e:	mov    rbx,rcx
   140043b91:	je     0x140043ba1
   140043b93:	xor    edx,edx
   140043b95:	xor    ecx,ecx
   140043b97:	call   QWORD PTR [rip+0x210b3]        # 0x140064c50
   140043b9d:	and    DWORD PTR [rbx+0x40],0x0
   140043ba1:	add    rsp,0x20
   140043ba5:	pop    rbx
   140043ba6:	ret    
   140043ba7:	int3   
   140043ba8:	rex push rbx
   140043baa:	sub    rsp,0x60
   140043bae:	xor    ebx,ebx
   140043bb0:	lea    rcx,[rsp+0x30]
   140043bb5:	xor    edx,edx
   140043bb7:	lea    r9d,[rbx+0xf]
   140043bbb:	mov    DWORD PTR [rsp+0x20],0x3
   140043bc3:	mov    r8d,r9d
   140043bc6:	call   QWORD PTR [rip+0x20edc]        # 0x140064aa8
   140043bcc:	test   eax,eax
   140043bce:	je     0x140043c00
   140043bd0:	mov    ebx,0x1
   140043bd5:	lea    rcx,[rsp+0x30]
   140043bda:	call   QWORD PTR [rip+0x20e58]        # 0x140064a38
   140043be0:	xor    edx,edx
   140043be2:	lea    rcx,[rsp+0x30]
   140043be7:	lea    r9d,[rdx+0xf]
   140043beb:	mov    DWORD PTR [rsp+0x20],0x3
   140043bf3:	mov    r8d,r9d
   140043bf6:	call   QWORD PTR [rip+0x20eac]        # 0x140064aa8
   140043bfc:	test   eax,eax
   140043bfe:	jne    0x140043bd5
   140043c00:	mov    eax,ebx
   140043c02:	add    rsp,0x60
   140043c06:	pop    rbx
   140043c07:	ret    
   140043c08:	mov    QWORD PTR [rsp+0x8],rbx
   140043c0d:	push   rdi
   140043c0e:	sub    rsp,0x60
   140043c12:	xor    ebx,ebx
   140043c14:	lea    rdi,[rip+0x29c1d]        # 0x14006d838
   140043c1b:	mov    r9d,DWORD PTR [rdi]
   140043c1e:	lea    rcx,[rsp+0x30]
   140043c23:	xor    edx,edx
   140043c25:	mov    r8d,r9d
   140043c28:	mov    DWORD PTR [rsp+0x20],0x2
   140043c30:	call   QWORD PTR [rip+0x20e72]        # 0x140064aa8
   140043c36:	test   eax,eax
   140043c38:	je     0x140043c5e
   140043c3a:	cmp    DWORD PTR [rsp+0x38],0x100
   140043c42:	je     0x140043c4e
   140043c44:	cmp    DWORD PTR [rsp+0x38],0x104
   140043c4c:	jne    0x140043c77
   140043c4e:	mov    rax,QWORD PTR [rsp+0x48]
   140043c53:	shr    rax,0x10
   140043c57:	bt     ax,0xe
   140043c5c:	jae    0x140043c77
   140043c5e:	add    ebx,0x1
   140043c61:	add    rdi,0x4
   140043c65:	cmp    ebx,0xf
   140043c68:	jb     0x140043c1b
   140043c6a:	xor    eax,eax
   140043c6c:	mov    rbx,QWORD PTR [rsp+0x70]
   140043c71:	add    rsp,0x60
   140043c75:	pop    rdi
   140043c76:	ret    
   140043c77:	mov    eax,0x1
   140043c7c:	jmp    0x140043c6c
   140043c7e:	int3   
   140043c7f:	int3   
   140043c80:	lea    rax,[rip+0x29bf1]        # 0x14006d878
   140043c87:	ret    
   140043c88:	add    rcx,0xffffffffffffffa0
   140043c8c:	jmp    0x14003e9e4
   140043c91:	int3   
   140043c92:	int3   
   140043c93:	int3   
   140043c94:	add    rcx,0xffffffffffffffa0
   140043c98:	jmp    0x14003ea98
   140043c9d:	int3   
   140043c9e:	int3   
   140043c9f:	int3   
   140043ca0:	add    rcx,0xffffffffffffffa0
   140043ca4:	jmp    0x14003eb14
   140043ca9:	int3   
   140043caa:	int3   
   140043cab:	int3   
   140043cac:	sub    rsp,0x68
   140043cb0:	cmp    DWORD PTR [rcx-0x1c],0x0
   140043cb4:	jne    0x140043cfc
   140043cb6:	cmp    edx,0x1
   140043cb9:	je     0x140043cc0
   140043cbb:	cmp    edx,0x4
   140043cbe:	jne    0x140043cf8
   140043cc0:	and    DWORD PTR [rsp+0x20],0x0
   140043cc5:	mov    r9d,0x36a
   140043ccb:	lea    rcx,[rsp+0x30]
   140043cd0:	mov    r8d,r9d
   140043cd3:	xor    edx,edx
   140043cd5:	call   QWORD PTR [rip+0x20dcd]        # 0x140064aa8
   140043cdb:	test   eax,eax
   140043cdd:	jne    0x140043cf8
   140043cdf:	call   QWORD PTR [rip+0x207db]        # 0x1400644c0
   140043ce5:	xor    r9d,r9d
   140043ce8:	xor    r8d,r8d
   140043ceb:	mov    ecx,eax
   140043ced:	mov    edx,0x36a
   140043cf2:	call   QWORD PTR [rip+0x20ab8]        # 0x1400647b0
   140043cf8:	xor    eax,eax
   140043cfa:	jmp    0x140043d09
   140043cfc:	cmp    edx,0x1
   140043cff:	je     0x140043d06
   140043d01:	cmp    edx,0x4
   140043d04:	jne    0x140043cf8
   140043d06:	mov    eax,DWORD PTR [rcx-0x8]
   140043d09:	add    rsp,0x68
   140043d0d:	ret    
   140043d0e:	int3   
   140043d0f:	int3   
   140043d10:	rex push rbx
   140043d12:	sub    rsp,0x20
   140043d16:	lea    rax,[rip+0x29b7b]        # 0x14006d898
   140043d1d:	mov    rbx,rcx
   140043d20:	mov    QWORD PTR [rcx],rax
   140043d23:	call   0x140043b84
   140043d28:	mov    rcx,rbx
   140043d2b:	add    rsp,0x20
   140043d2f:	pop    rbx
   140043d30:	jmp    0x14001c420
   140043d35:	int3   
   140043d36:	int3   
   140043d37:	int3   
   140043d38:	rex push rbx
   140043d3a:	sub    rsp,0x190
   140043d41:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140043d4a:	and    QWORD PTR [rsp+0x20],0x0
   140043d50:	xor    r9d,r9d
   140043d53:	xor    r8d,r8d
   140043d56:	lea    rcx,[rsp+0x40]
   140043d5b:	call   0x14004555c
   140043d60:	nop
   140043d61:	or     ebx,0xffffffff
   140043d64:	mov    DWORD PTR [rsp+0x1b0],ebx
   140043d6b:	lea    rcx,[rsp+0x40]
   140043d70:	call   0x140045610
   140043d75:	cmp    rax,0x1
   140043d79:	cmove  ebx,DWORD PTR [rsp+0x180]
   140043d81:	mov    DWORD PTR [rsp+0x1b0],ebx
   140043d88:	jmp    0x140043d91
   140043d8a:	mov    ebx,DWORD PTR [rsp+0x1b0]
   140043d91:	lea    rcx,[rsp+0x40]
   140043d96:	call   0x140045600
   140043d9b:	mov    eax,ebx
   140043d9d:	add    rsp,0x190
   140043da4:	pop    rbx
   140043da5:	ret    
   140043da6:	int3   
   140043da7:	int3   
   140043da8:	rex push rbp
   140043daa:	sub    rsp,0x20
   140043dae:	mov    rbp,rdx
   140043db1:	lea    rcx,[rbp+0x40]
   140043db5:	call   0x140045600
   140043dba:	add    rsp,0x20
   140043dbe:	pop    rbp
   140043dbf:	ret    
   140043dc0:	int3   
   140043dc1:	int3   
   140043dc2:	int3   
   140043dc3:	int3   
   140043dc4:	int3   
   140043dc5:	int3   
   140043dc6:	int3   
   140043dc7:	int3   
   140043dc8:	mov    QWORD PTR [rsp+0x10],rdx
   140043dcd:	push   rbp
   140043dce:	sub    rsp,0x30
   140043dd2:	mov    rbp,rdx
   140043dd5:	mov    rcx,QWORD PTR [rbp+0x30]
   140043dd9:	call   0x1400207b8
   140043dde:	nop
   140043ddf:	lea    rax,[rip+0xffffffffffffffa4]        # 0x140043d8a
   140043de6:	jmp    0x140043de8
   140043de8:	add    rsp,0x30
   140043dec:	pop    rbp
   140043ded:	ret    
   140043dee:	int3   
   140043def:	int3   
   140043df0:	rex push rbx
   140043df2:	sub    rsp,0x190
   140043df9:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140043e02:	and    QWORD PTR [rsp+0x20],0x0
   140043e08:	xor    r9d,r9d
   140043e0b:	lea    r8d,[r9+0x1]
   140043e0f:	lea    rcx,[rsp+0x40]
   140043e14:	call   0x14004555c
   140043e19:	nop
   140043e1a:	or     ebx,0xffffffff
   140043e1d:	mov    DWORD PTR [rsp+0x1b0],ebx
   140043e24:	lea    rcx,[rsp+0x40]
   140043e29:	call   0x140045610
   140043e2e:	cmp    rax,0x1
   140043e32:	cmove  ebx,DWORD PTR [rsp+0x180]
   140043e3a:	mov    DWORD PTR [rsp+0x1b0],ebx
   140043e41:	jmp    0x140043e4a
   140043e43:	mov    ebx,DWORD PTR [rsp+0x1b0]
   140043e4a:	lea    rcx,[rsp+0x40]
   140043e4f:	call   0x140045600
   140043e54:	mov    eax,ebx
   140043e56:	add    rsp,0x190
   140043e5d:	pop    rbx
   140043e5e:	ret    
   140043e5f:	int3   
   140043e60:	rex push rbp
   140043e62:	sub    rsp,0x20
   140043e66:	mov    rbp,rdx
   140043e69:	lea    rcx,[rbp+0x40]
   140043e6d:	call   0x140045600
   140043e72:	add    rsp,0x20
   140043e76:	pop    rbp
   140043e77:	ret    
   140043e78:	int3   
   140043e79:	int3   
   140043e7a:	int3   
   140043e7b:	int3   
   140043e7c:	int3   
   140043e7d:	int3   
   140043e7e:	int3   
   140043e7f:	int3   
   140043e80:	mov    QWORD PTR [rsp+0x10],rdx
   140043e85:	push   rbp
   140043e86:	sub    rsp,0x30
   140043e8a:	mov    rbp,rdx
   140043e8d:	mov    rcx,QWORD PTR [rbp+0x30]
   140043e91:	call   0x1400207b8
   140043e96:	nop
   140043e97:	lea    rax,[rip+0xffffffffffffffa5]        # 0x140043e43
   140043e9e:	jmp    0x140043ea0
   140043ea0:	add    rsp,0x30
   140043ea4:	pop    rbp
   140043ea5:	ret    
   140043ea6:	int3   
   140043ea7:	int3   
   140043ea8:	mov    rax,rsp
   140043eab:	push   rdi
   140043eac:	sub    rsp,0x40
   140043eb0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140043eb9:	mov    QWORD PTR [rax+0x8],rbx
   140043ebd:	mov    QWORD PTR [rax+0x10],rbp
   140043ec1:	mov    QWORD PTR [rax+0x18],rsi
   140043ec5:	mov    ebx,r9d
   140043ec8:	mov    esi,r8d
   140043ecb:	mov    rbp,rdx
   140043ece:	lea    rdi,[rcx-0x60]
   140043ed2:	mov    rdx,QWORD PTR [rdi+0x38]
   140043ed6:	lea    rcx,[rax-0x20]
   140043eda:	call   0x140021aec
   140043edf:	nop
   140043ee0:	cmp    ebx,0x1
   140043ee3:	jne    0x140043f00
   140043ee5:	cmp    DWORD PTR [rsp+0x30],0x0
   140043eea:	je     0x140043ef8
   140043eec:	mov    rdx,QWORD PTR [rsp+0x28]
   140043ef1:	xor    ecx,ecx
   140043ef3:	call   0x140020cc4
   140043ef8:	or     eax,0xffffffff
   140043efb:	jmp    0x140043f82
   140043f00:	cmp    esi,DWORD PTR [rdi+0x54]
   140043f03:	ja     0x140043f1c
   140043f05:	cmp    DWORD PTR [rsp+0x30],0x0
   140043f0a:	je     0x140043f18
   140043f0c:	mov    rdx,QWORD PTR [rsp+0x28]
   140043f11:	xor    ecx,ecx
   140043f13:	call   0x140020cc4
   140043f18:	xor    eax,eax
   140043f1a:	jmp    0x140043f82
   140043f1c:	cmp    DWORD PTR [rdi+0x48],0x0
   140043f20:	je     0x140043f6a
   140043f22:	mov    rax,QWORD PTR [rdi]
   140043f25:	mov    rdx,rbp
   140043f28:	mov    rcx,rdi
   140043f2b:	call   QWORD PTR [rax+0xc0]
   140043f31:	cmp    eax,0xffffffff
   140043f34:	je     0x140043f52
   140043f36:	cmp    eax,0x2
   140043f39:	jne    0x140043f6a
   140043f3b:	cmp    DWORD PTR [rsp+0x30],0x0
   140043f40:	je     0x140043f4e
   140043f42:	mov    rdx,QWORD PTR [rsp+0x28]
   140043f47:	xor    ecx,ecx
   140043f49:	call   0x140020cc4
   140043f4e:	xor    eax,eax
   140043f50:	jmp    0x140043f82
   140043f52:	cmp    DWORD PTR [rsp+0x30],0x0
   140043f57:	je     0x140043f65
   140043f59:	mov    rdx,QWORD PTR [rsp+0x28]
   140043f5e:	xor    ecx,ecx
   140043f60:	call   0x140020cc4
   140043f65:	or     eax,0xffffffff
   140043f68:	jmp    0x140043f82
   140043f6a:	mov    ebx,DWORD PTR [rdi+0x54]
   140043f6d:	cmp    DWORD PTR [rsp+0x30],0x0
   140043f72:	je     0x140043f80
   140043f74:	mov    rdx,QWORD PTR [rsp+0x28]
   140043f79:	xor    ecx,ecx
   140043f7b:	call   0x140020cc4
   140043f80:	mov    eax,ebx
   140043f82:	mov    rbx,QWORD PTR [rsp+0x50]
   140043f87:	mov    rbp,QWORD PTR [rsp+0x58]
   140043f8c:	mov    rsi,QWORD PTR [rsp+0x60]
   140043f91:	add    rsp,0x40
   140043f95:	pop    rdi
   140043f96:	ret    
   140043f97:	int3   
   140043f98:	rex push rbp
   140043f9a:	sub    rsp,0x20
   140043f9e:	mov    rbp,rdx
   140043fa1:	lea    rcx,[rbp+0x28]
   140043fa5:	call   0x1400236a8
   140043faa:	add    rsp,0x20
   140043fae:	pop    rbp
   140043faf:	ret    
   140043fb0:	mov    rax,rsp
   140043fb3:	push   rdi
   140043fb4:	sub    rsp,0x80
   140043fbb:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140043fc4:	mov    QWORD PTR [rax+0x8],rbx
   140043fc8:	mov    QWORD PTR [rax+0x10],rsi
   140043fcc:	mov    ebx,r8d
   140043fcf:	mov    rsi,rdx
   140043fd2:	lea    rdi,[rcx-0x60]
   140043fd6:	mov    rdx,QWORD PTR [rdi+0x38]
   140043fda:	lea    rcx,[rax-0x50]
   140043fde:	call   0x140021aec
   140043fe3:	nop
   140043fe4:	cmp    ebx,DWORD PTR [rdi+0x5c]
   140043fe7:	jbe    0x14004408a
   140043fed:	cmp    DWORD PTR [rdi+0x50],0x0
   140043ff1:	jne    0x14004408a
   140043ff7:	mov    rax,QWORD PTR [rdi]
   140043ffa:	lea    rdx,[rsp+0x48]
   140043fff:	mov    rcx,rdi
   140044002:	call   QWORD PTR [rax+0xb8]
   140044008:	test   eax,eax
   14004400a:	je     0x14004408a
   14004400c:	cmp    DWORD PTR [rdi+0x4c],0x0
   140044010:	je     0x14004408a
   140044012:	mov    DWORD PTR [rdi+0x50],0x1
   140044019:	mov    ebx,0x3
   14004401e:	mov    DWORD PTR [rsp+0x20],ebx
   140044022:	xor    edx,edx
   140044024:	mov    r9d,0x209
   14004402a:	lea    r8d,[r9-0x9]
   14004402e:	lea    rcx,[rsp+0x48]
   140044033:	call   QWORD PTR [rip+0x20a6f]        # 0x140064aa8
   140044039:	test   eax,eax
   14004403b:	jne    0x14004401e
   14004403d:	mov    DWORD PTR [rsp+0x20],ebx
   140044041:	xor    edx,edx
   140044043:	mov    r9d,0x109
   140044049:	lea    r8d,[r9-0x9]
   14004404d:	lea    rcx,[rsp+0x48]
   140044052:	call   QWORD PTR [rip+0x20a50]        # 0x140064aa8
   140044058:	test   eax,eax
   14004405a:	jne    0x14004403d
   14004405c:	mov    r8,QWORD PTR [rdi]
   14004405f:	mov    rdx,rsi
   140044062:	mov    rcx,rdi
   140044065:	call   QWORD PTR [r8+0xc8]
   14004406c:	and    DWORD PTR [rdi+0x50],0x0
   140044070:	cmp    DWORD PTR [rsp+0x40],0x0
   140044075:	je     0x140044083
   140044077:	mov    rdx,QWORD PTR [rsp+0x38]
   14004407c:	xor    ecx,ecx
   14004407e:	call   0x140020cc4
   140044083:	mov    eax,0x1
   140044088:	jmp    0x1400440f3
   14004408a:	cmp    DWORD PTR [rdi+0x50],0x0
   14004408e:	je     0x1400440aa
   140044090:	cmp    DWORD PTR [rsp+0x40],0x0
   140044095:	je     0x1400440a3
   140044097:	mov    rdx,QWORD PTR [rsp+0x38]
   14004409c:	xor    ecx,ecx
   14004409e:	call   0x140020cc4
   1400440a3:	mov    eax,0x2
   1400440a8:	jmp    0x1400440f3
   1400440aa:	mov    DWORD PTR [rsp+0x20],0x2
   1400440b2:	xor    r9d,r9d
   1400440b5:	xor    r8d,r8d
   1400440b8:	xor    edx,edx
   1400440ba:	lea    rcx,[rsp+0x48]
   1400440bf:	call   QWORD PTR [rip+0x209e3]        # 0x140064aa8
   1400440c5:	test   eax,eax
   1400440c7:	je     0x1400440db
   1400440c9:	mov    rax,QWORD PTR [rdi]
   1400440cc:	lea    rdx,[rsp+0x48]
   1400440d1:	mov    rcx,rdi
   1400440d4:	call   QWORD PTR [rax+0xb0]
   1400440da:	nop
   1400440db:	cmp    DWORD PTR [rsp+0x40],0x0
   1400440e0:	je     0x1400440ee
   1400440e2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400440e7:	xor    ecx,ecx
   1400440e9:	call   0x140020cc4
   1400440ee:	mov    eax,0x1
   1400440f3:	lea    r11,[rsp+0x80]
   1400440fb:	mov    rbx,QWORD PTR [r11+0x10]
   1400440ff:	mov    rsi,QWORD PTR [r11+0x18]
   140044103:	mov    rsp,r11
   140044106:	pop    rdi
   140044107:	ret    
   140044108:	int3   
   140044109:	int3   
   14004410a:	int3   
   14004410b:	int3   
   14004410c:	int3   
   14004410d:	int3   
   14004410e:	int3   
   14004410f:	int3   
   140044110:	rex push rbp
   140044112:	sub    rsp,0x20
   140044116:	mov    rbp,rdx
   140044119:	lea    rcx,[rbp+0x38]
   14004411d:	call   0x1400236a8
   140044122:	add    rsp,0x20
   140044126:	pop    rbp
   140044127:	ret    
   140044128:	mov    QWORD PTR [rsp+0x8],rbx
   14004412d:	push   rdi
   14004412e:	sub    rsp,0x20
   140044132:	mov    ebx,edx
   140044134:	mov    rdi,rcx
   140044137:	call   0x140043d10
   14004413c:	test   bl,0x1
   14004413f:	je     0x140044149
   140044141:	mov    rcx,rdi
   140044144:	call   0x14001ac50
   140044149:	mov    rax,rdi
   14004414c:	mov    rbx,QWORD PTR [rsp+0x30]
   140044151:	add    rsp,0x20
   140044155:	pop    rdi
   140044156:	ret    
   140044157:	int3   
   140044158:	rex push rbx
   14004415a:	sub    rsp,0x20
   14004415e:	mov    rbx,rcx
   140044161:	call   0x14001c3e8
   140044166:	xor    ecx,ecx
   140044168:	lea    rax,[rip+0x298a1]        # 0x14006da10
   14004416f:	lea    r11,[rip+0x29722]        # 0x14006d898
   140044176:	mov    QWORD PTR [rbx],r11
   140044179:	mov    QWORD PTR [rbx+0x60],rax
   14004417d:	lea    eax,[rcx+0x1]
   140044180:	mov    DWORD PTR [rbx+0x48],eax
   140044183:	mov    DWORD PTR [rbx+0x4c],eax
   140044186:	mov    DWORD PTR [rbx+0x44],ecx
   140044189:	mov    rax,rbx
   14004418c:	mov    DWORD PTR [rbx+0x58],0x2
   140044193:	mov    DWORD PTR [rbx+0x54],0x2710
   14004419a:	mov    DWORD PTR [rbx+0x5c],0x1f40
   1400441a1:	mov    DWORD PTR [rbx+0x50],ecx
   1400441a4:	mov    DWORD PTR [rbx+0x40],ecx
   1400441a7:	add    rsp,0x20
   1400441ab:	pop    rbx
   1400441ac:	ret    
   1400441ad:	int3   
   1400441ae:	int3   
   1400441af:	int3   
   1400441b0:	sub    rsp,0x28
   1400441b4:	cmp    DWORD PTR [rcx+0x50],0x3ffffffe
   1400441bb:	jb     0x1400441cc
   1400441bd:	mov    rdx,QWORD PTR [rcx+0x18]
   1400441c1:	mov    ecx,0x5
   1400441c6:	call   0x14003067c
   1400441cb:	int3   
   1400441cc:	add    rsp,0x28
   1400441d0:	ret    
   1400441d1:	int3   
   1400441d2:	int3   
   1400441d3:	int3   
   1400441d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400441d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400441de:	mov    QWORD PTR [rsp+0x18],rsi
   1400441e3:	push   rdi
   1400441e4:	push   r12
   1400441e6:	push   r13
   1400441e8:	sub    rsp,0x20
   1400441ec:	xor    edi,edi
   1400441ee:	mov    rbp,rdx
   1400441f1:	mov    rsi,rcx
   1400441f4:	cmp    rdx,rdi
   1400441f7:	jge    0x1400441ff
   1400441f9:	call   0x1400208f8
   1400441fe:	int3   
   1400441ff:	cmp    r8,rdi
   140044202:	jl     0x140044208
   140044204:	mov    QWORD PTR [rcx+0x20],r8
   140044208:	cmp    rdx,rdi
   14004420b:	mov    rcx,QWORD PTR [rcx+0x8]
   14004420f:	jne    0x140044240
   140044211:	cmp    rcx,rdi
   140044214:	je     0x140044233
   140044216:	cmp    QWORD PTR [rsi+0x10],rdi
   14004421a:	mov    edx,edi
   14004421c:	jle    0x14004422a
   14004421e:	add    edx,0x1
   140044221:	movsxd rax,edx
   140044224:	cmp    rax,QWORD PTR [rsi+0x10]
   140044228:	jl     0x14004421e
   14004422a:	call   0x14001ac50
   14004422f:	mov    QWORD PTR [rsi+0x8],rdi
   140044233:	mov    QWORD PTR [rsi+0x18],rdi
   140044237:	mov    QWORD PTR [rsi+0x10],rdi
   14004423b:	jmp    0x1400443ec
   140044240:	cmp    rcx,rdi
   140044243:	jne    0x140044289
   140044245:	mov    r12,QWORD PTR [rsi+0x20]
   140044249:	cmp    rdx,r12
   14004424c:	cmovg  r12,rdx
   140044250:	mov    rbx,r12
   140044253:	shl    rbx,0x2
   140044257:	mov    rcx,rbx
   14004425a:	call   0x14001ac0c
   14004425f:	mov    r8,rbx
   140044262:	xor    edx,edx
   140044264:	mov    rcx,rax
   140044267:	mov    QWORD PTR [rsi+0x8],rax
   14004426b:	call   0x140047720
   140044270:	cmp    rbp,rdi
   140044273:	jle    0x1400443e4
   140044279:	add    edi,0x1
   14004427c:	movsxd rax,edi
   14004427f:	cmp    rax,rbp
   140044282:	jl     0x140044279
   140044284:	jmp    0x1400443e4
   140044289:	mov    r8,QWORD PTR [rsi+0x18]
   14004428d:	cmp    rdx,r8
   140044290:	jg     0x140044300
   140044292:	mov    rax,QWORD PTR [rsi+0x10]
   140044296:	cmp    rax,rdx
   140044299:	jge    0x1400442d7
   14004429b:	mov    r8,rdx
   14004429e:	lea    rcx,[rcx+rax*4]
   1400442a2:	xor    edx,edx
   1400442a4:	sub    r8,rax
   1400442a7:	shl    r8,0x2
   1400442ab:	call   0x140047720
   1400442b0:	mov    rax,rbp
   1400442b3:	sub    rax,QWORD PTR [rsi+0x10]
   1400442b7:	cmp    rax,rdi
   1400442ba:	jle    0x1400443e8
   1400442c0:	mov    rcx,rbp
   1400442c3:	sub    rcx,QWORD PTR [rsi+0x10]
   1400442c7:	add    edi,0x1
   1400442ca:	movsxd rax,edi
   1400442cd:	cmp    rax,rcx
   1400442d0:	jl     0x1400442c7
   1400442d2:	jmp    0x1400443e8
   1400442d7:	jle    0x1400443e8
   1400442dd:	sub    rax,rdx
   1400442e0:	cmp    rax,rdi
   1400442e3:	jle    0x1400443e8
   1400442e9:	mov    rcx,QWORD PTR [rsi+0x10]
   1400442ed:	sub    rcx,rdx
   1400442f0:	add    edi,0x1
   1400442f3:	movsxd rax,edi
   1400442f6:	cmp    rax,rcx
   1400442f9:	jl     0x1400442f0
   1400442fb:	jmp    0x1400443e8
   140044300:	mov    rax,QWORD PTR [rsi+0x20]
   140044304:	cmp    rax,rdi
   140044307:	jne    0x140044334
   140044309:	mov    rax,QWORD PTR [rsi+0x10]
   14004430d:	cqo    
   14004430f:	and    edx,0x7
   140044312:	add    rax,rdx
   140044315:	mov    edx,0x400
   14004431a:	sar    rax,0x3
   14004431e:	cmp    rax,rdx
   140044321:	mov    rcx,rax
   140044324:	cmovg  rax,rdx
   140044328:	mov    edx,0x4
   14004432d:	cmp    rcx,rdx
   140044330:	cmovl  rax,rdx
   140044334:	add    rax,r8
   140044337:	mov    r12,rbp
   14004433a:	cmp    rbp,rax
   14004433d:	cmovl  r12,rax
   140044341:	cmp    r12,r8
   140044344:	jge    0x14004434c
   140044346:	call   0x1400208f8
   14004434b:	int3   
   14004434c:	mov    rbx,r12
   14004434f:	shl    rbx,0x2
   140044353:	mov    rcx,rbx
   140044356:	call   0x14001ac0c
   14004435b:	mov    r9,QWORD PTR [rsi+0x10]
   14004435f:	mov    r8,QWORD PTR [rsi+0x8]
   140044363:	shl    r9,0x2
   140044367:	mov    rdx,rbx
   14004436a:	mov    rcx,rax
   14004436d:	mov    r13,rax
   140044370:	call   0x1400466d0
   140044375:	cmp    eax,edi
   140044377:	je     0x14004439f
   140044379:	cmp    eax,0xc
   14004437c:	je     0x140044399
   14004437e:	cmp    eax,0x16
   140044381:	je     0x140044393
   140044383:	cmp    eax,0x22
   140044386:	je     0x140044393
   140044388:	cmp    eax,0x50
   14004438b:	je     0x14004439f
   14004438d:	call   0x1400208f8
   140044392:	int3   
   140044393:	call   0x1400208f8
   140044398:	int3   
   140044399:	call   0x1400208b0
   14004439e:	int3   
   14004439f:	mov    rax,QWORD PTR [rsi+0x10]
   1400443a3:	mov    r8,rbp
   1400443a6:	xor    edx,edx
   1400443a8:	sub    r8,rax
   1400443ab:	lea    rcx,[r13+rax*4+0x0]
   1400443b0:	shl    r8,0x2
   1400443b4:	call   0x140047720
   1400443b9:	mov    rax,rbp
   1400443bc:	sub    rax,QWORD PTR [rsi+0x10]
   1400443c0:	cmp    rax,rdi
   1400443c3:	jle    0x1400443d7
   1400443c5:	mov    rcx,rbp
   1400443c8:	sub    rcx,QWORD PTR [rsi+0x10]
   1400443cc:	add    edi,0x1
   1400443cf:	movsxd rax,edi
   1400443d2:	cmp    rax,rcx
   1400443d5:	jl     0x1400443cc
   1400443d7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400443db:	call   0x14001ac50
   1400443e0:	mov    QWORD PTR [rsi+0x8],r13
   1400443e4:	mov    QWORD PTR [rsi+0x18],r12
   1400443e8:	mov    QWORD PTR [rsi+0x10],rbp
   1400443ec:	mov    rbx,QWORD PTR [rsp+0x40]
   1400443f1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400443f6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400443fb:	add    rsp,0x20
   1400443ff:	pop    r13
   140044401:	pop    r12
   140044403:	pop    rdi
   140044404:	ret    
   140044405:	int3   
   140044406:	int3   
   140044407:	int3   
   140044408:	mov    rax,rsp
   14004440b:	mov    QWORD PTR [rax+0x8],rbx
   14004440f:	mov    QWORD PTR [rax+0x10],rbp
   140044413:	mov    QWORD PTR [rax+0x18],rsi
   140044417:	mov    QWORD PTR [rax+0x20],rdi
   14004441b:	push   r12
   14004441d:	sub    rsp,0x20
   140044421:	test   rdx,rdx
   140044424:	mov    rbx,r9
   140044427:	mov    r12,r8
   14004442a:	mov    rsi,rdx
   14004442d:	mov    rdi,rcx
   140044430:	js     0x140044521
   140044436:	test   rbx,rbx
   140044439:	jle    0x140044521
   14004443f:	or     r8,0xffffffffffffffff
   140044443:	cmp    rdx,QWORD PTR [rcx+0x10]
   140044447:	jl     0x140044456
   140044449:	add    rdx,r9
   14004444c:	call   0x1400441d4
   140044451:	jmp    0x1400444ed
   140044456:	mov    rbp,QWORD PTR [rcx+0x10]
   14004445a:	lea    rdx,[r9+rbp*1]
   14004445e:	call   0x1400441d4
   140044463:	xor    r11d,r11d
   140044466:	test   rbx,rbx
   140044469:	jle    0x140044477
   14004446b:	add    r11d,0x1
   14004446f:	movsxd rax,r11d
   140044472:	cmp    rax,rbx
   140044475:	jl     0x14004446b
   140044477:	mov    rcx,QWORD PTR [rdi+0x8]
   14004447b:	lea    rax,[rsi+rbx*1]
   14004447f:	sub    rbp,rsi
   140044482:	lea    r8,[rcx+rsi*4]
   140044486:	shl    rbp,0x2
   14004448a:	lea    rcx,[rcx+rax*4]
   14004448e:	mov    r9,rbp
   140044491:	mov    rdx,rbp
   140044494:	call   0x1400467a0
   140044499:	test   eax,eax
   14004449b:	je     0x1400444c3
   14004449d:	cmp    eax,0xc
   1400444a0:	je     0x1400444bd
   1400444a2:	cmp    eax,0x16
   1400444a5:	je     0x1400444b7
   1400444a7:	cmp    eax,0x22
   1400444aa:	je     0x1400444b7
   1400444ac:	cmp    eax,0x50
   1400444af:	je     0x1400444c3
   1400444b1:	call   0x1400208f8
   1400444b6:	int3   
   1400444b7:	call   0x1400208f8
   1400444bc:	int3   
   1400444bd:	call   0x1400208b0
   1400444c2:	int3   
   1400444c3:	mov    rax,QWORD PTR [rdi+0x8]
   1400444c7:	mov    r8,rbx
   1400444ca:	xor    edx,edx
   1400444cc:	lea    rcx,[rax+rsi*4]
   1400444d0:	shl    r8,0x2
   1400444d4:	call   0x140047720
   1400444d9:	xor    r11d,r11d
   1400444dc:	test   rbx,rbx
   1400444df:	jle    0x1400444ed
   1400444e1:	add    r11d,0x1
   1400444e5:	movsxd rax,r11d
   1400444e8:	cmp    rax,rbx
   1400444eb:	jl     0x1400444e1
   1400444ed:	shl    rsi,0x2
   1400444f1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400444f5:	mov    eax,DWORD PTR [r12]
   1400444f9:	mov    DWORD PTR [rsi+rcx*1],eax
   1400444fc:	add    rsi,0x4
   140044500:	sub    rbx,0x1
   140044504:	jne    0x1400444f1
   140044506:	mov    rbx,QWORD PTR [rsp+0x30]
   14004450b:	mov    rbp,QWORD PTR [rsp+0x38]
   140044510:	mov    rsi,QWORD PTR [rsp+0x40]
   140044515:	mov    rdi,QWORD PTR [rsp+0x48]
   14004451a:	add    rsp,0x20
   14004451e:	pop    r12
   140044520:	ret    
   140044521:	call   0x1400208f8
   140044526:	int3   
   140044527:	int3   
   140044528:	sub    rsp,0x28
   14004452c:	lea    rax,[rip+0x29515]        # 0x14006da48
   140044533:	xor    edx,edx
   140044535:	cmp    QWORD PTR [rcx+0x8],rdx
   140044539:	mov    QWORD PTR [rcx],rax
   14004453c:	je     0x140044559
   14004453e:	cmp    QWORD PTR [rcx+0x10],rdx
   140044542:	jle    0x140044550
   140044544:	add    edx,0x1
   140044547:	movsxd rax,edx
   14004454a:	cmp    rax,QWORD PTR [rcx+0x10]
   14004454e:	jl     0x140044544
   140044550:	mov    rcx,QWORD PTR [rcx+0x8]
   140044554:	call   0x14001ac50
   140044559:	add    rsp,0x28
   14004455d:	ret    
   14004455e:	int3   
   14004455f:	int3   
   140044560:	mov    QWORD PTR [rsp+0x8],rbx
   140044565:	push   rdi
   140044566:	sub    rsp,0x20
   14004456a:	mov    ebx,edx
   14004456c:	mov    rdi,rcx
   14004456f:	call   0x140044528
   140044574:	test   bl,0x1
   140044577:	je     0x140044581
   140044579:	mov    rcx,rdi
   14004457c:	call   0x14001ac50
   140044581:	mov    rax,rdi
   140044584:	mov    rbx,QWORD PTR [rsp+0x30]
   140044589:	add    rsp,0x20
   14004458d:	pop    rdi
   14004458e:	ret    
   14004458f:	int3   
   140044590:	mov    rax,rsp
   140044593:	mov    QWORD PTR [rax+0x8],rbx
   140044597:	mov    QWORD PTR [rax+0x10],rsi
   14004459b:	mov    QWORD PTR [rax+0x18],rdi
   14004459f:	mov    QWORD PTR [rax+0x20],r12
   1400445a3:	push   r13
   1400445a5:	sub    rsp,0x20
   1400445a9:	test   r8,r8
   1400445ac:	mov    rdi,r8
   1400445af:	mov    rsi,rdx
   1400445b2:	mov    r12,rcx
   1400445b5:	je     0x1400445c2
   1400445b7:	test   rdx,rdx
   1400445ba:	jne    0x1400445c2
   1400445bc:	call   0x1400208f8
   1400445c1:	int3   
   1400445c2:	mov    eax,DWORD PTR [rcx+0x20]
   1400445c5:	not    eax
   1400445c7:	test   al,0x1
   1400445c9:	je     0x140044614
   1400445cb:	test   r8,r8
   1400445ce:	je     0x1400445f9
   1400445d0:	mov    ebx,0x1fffffff
   1400445d5:	mov    rdx,rsi
   1400445d8:	mov    rcx,r12
   1400445db:	cmp    rdi,rbx
   1400445de:	cmovb  ebx,edi
   1400445e1:	mov    r8d,ebx
   1400445e4:	shl    r8d,0x2
   1400445e8:	call   0x140030cec
   1400445ed:	mov    r11d,ebx
   1400445f0:	lea    rsi,[rsi+rbx*4]
   1400445f4:	sub    rdi,r11
   1400445f7:	jne    0x1400445d0
   1400445f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400445fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140044603:	mov    rdi,QWORD PTR [rsp+0x40]
   140044608:	mov    r12,QWORD PTR [rsp+0x48]
   14004460d:	add    rsp,0x20
   140044611:	pop    r13
   140044613:	ret    
   140044614:	test   r8,r8
   140044617:	je     0x1400445f9
   140044619:	mov    r13d,0x1fffffff
   14004461f:	mov    rdx,rsi
   140044622:	mov    rcx,r12
   140044625:	cmp    rdi,r13
   140044628:	cmovb  r13d,edi
   14004462c:	mov    ebx,r13d
   14004462f:	shl    ebx,0x2
   140044632:	mov    r8d,ebx
   140044635:	call   0x140030784
   14004463a:	cmp    eax,ebx
   14004463c:	jne    0x14004464c
   14004463e:	mov    eax,r13d
   140044641:	lea    rsi,[rsi+r13*4]
   140044645:	sub    rdi,rax
   140044648:	jne    0x140044619
   14004464a:	jmp    0x1400445f9
   14004464c:	xor    edx,edx
   14004464e:	lea    ecx,[rdx+0x3]
   140044651:	call   0x14003067c
   140044656:	int3   
   140044657:	int3   
   140044658:	rex push rsi
   14004465a:	push   rdi
   14004465b:	push   r13
   14004465d:	sub    rsp,0x30
   140044661:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004466a:	mov    QWORD PTR [rsp+0x60],rbx
   14004466f:	mov    QWORD PTR [rsp+0x68],rbp
   140044674:	mov    rsi,rdx
   140044677:	mov    rbp,rcx
   14004467a:	mov    rdi,QWORD PTR [rcx+0x60]
   14004467e:	and    QWORD PTR [rsp+0x50],0x0
   140044684:	test   rdi,rdi
   140044687:	jne    0x1400446ad
   140044689:	lea    ecx,[rdi+0x38]
   14004468c:	call   0x14001ac0c
   140044691:	mov    QWORD PTR [rsp+0x58],rax
   140044696:	test   rax,rax
   140044699:	je     0x1400446ab
   14004469b:	lea    edx,[rdi+0xa]
   14004469e:	mov    rcx,rax
   1400446a1:	call   0x14002fa14
   1400446a6:	mov    rdi,rax
   1400446a9:	jmp    0x1400446ad
   1400446ab:	xor    edi,edi
   1400446ad:	lea    r8,[rsp+0x50]
   1400446b2:	mov    r13d,0x1
   1400446b8:	mov    rdx,r13
   1400446bb:	mov    rcx,rdi
   1400446be:	call   0x14002f8c0
   1400446c3:	test   eax,eax
   1400446c5:	je     0x1400446ce
   1400446c7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400446cc:	jmp    0x14004471f
   1400446ce:	mov    ecx,0x28
   1400446d3:	call   0x14001ac0c
   1400446d8:	mov    rbx,rax
   1400446db:	test   rax,rax
   1400446de:	je     0x140044700
   1400446e0:	lea    rax,[rip+0x29361]        # 0x14006da48
   1400446e7:	mov    QWORD PTR [rbx],rax
   1400446ea:	and    QWORD PTR [rbx+0x8],0x0
   1400446ef:	and    QWORD PTR [rbx+0x20],0x0
   1400446f4:	and    QWORD PTR [rbx+0x18],0x0
   1400446f9:	and    QWORD PTR [rbx+0x10],0x0
   1400446fe:	jmp    0x140044702
   140044700:	xor    ebx,ebx
   140044702:	mov    r8d,DWORD PTR [rbp+0x68]
   140044706:	mov    rdx,r13
   140044709:	mov    rcx,rbx
   14004470c:	call   0x1400441d4
   140044711:	mov    rdx,r13
   140044714:	mov    rcx,rdi
   140044717:	call   0x14002fac8
   14004471c:	mov    QWORD PTR [rax],rbx
   14004471f:	mov    QWORD PTR [rbp+0x60],rdi
   140044723:	test   rsi,rsi
   140044726:	je     0x14004472b
   140044728:	mov    QWORD PTR [rsi],rbx
   14004472b:	mov    rbx,QWORD PTR [rsp+0x60]
   140044730:	mov    rbp,QWORD PTR [rsp+0x68]
   140044735:	add    rsp,0x30
   140044739:	pop    r13
   14004473b:	pop    rdi
   14004473c:	pop    rsi
   14004473d:	ret    
   14004473e:	int3   
   14004473f:	int3   
   140044740:	int3   
   140044741:	int3   
   140044742:	int3   
   140044743:	int3   
   140044744:	int3   
   140044745:	int3   
   140044746:	int3   
   140044747:	int3   
   140044748:	rex push rbp
   14004474a:	sub    rsp,0x20
   14004474e:	mov    rbp,rdx
   140044751:	mov    rcx,QWORD PTR [rbp+0x58]
   140044755:	call   0x140001040
   14004475a:	add    rsp,0x20
   14004475e:	pop    rbp
   14004475f:	ret    
   140044760:	rex push rbp
   140044762:	push   rsi
   140044763:	push   rdi
   140044764:	sub    rsp,0x30
   140044768:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140044771:	mov    QWORD PTR [rsp+0x58],rbx
   140044776:	mov    rsi,rdx
   140044779:	mov    rdi,rcx
   14004477c:	mov    eax,DWORD PTR [rcx+0x20]
   14004477f:	not    eax
   140044781:	mov    ebp,0x1
   140044786:	test   bpl,al
   140044789:	je     0x140044803
   14004478b:	xor    ebx,ebx
   14004478d:	cmp    QWORD PTR [rcx+0x58],rbx
   140044791:	jne    0x1400447d8
   140044793:	lea    ecx,[rbp+0x37]
   140044796:	call   0x14001ac0c
   14004479b:	mov    QWORD PTR [rsp+0x50],rax
   1400447a0:	cmp    rax,rbx
   1400447a3:	je     0x1400447b2
   1400447a5:	mov    edx,DWORD PTR [rdi+0x68]
   1400447a8:	mov    rcx,rax
   1400447ab:	call   0x14002fa14
   1400447b0:	jmp    0x1400447b5
   1400447b2:	mov    rax,rbx
   1400447b5:	mov    QWORD PTR [rdi+0x58],rax
   1400447b9:	mov    r8d,ebp
   1400447bc:	mov    edx,DWORD PTR [rdi+0x6c]
   1400447bf:	mov    rcx,rax
   1400447c2:	call   0x14002f784
   1400447c7:	xor    edx,edx
   1400447c9:	mov    rcx,QWORD PTR [rdi+0x58]
   1400447cd:	call   0x14002fac8
   1400447d2:	mov    QWORD PTR [rax],rbx
   1400447d5:	mov    DWORD PTR [rdi+0x50],ebp
   1400447d8:	cmp    rsi,rbx
   1400447db:	je     0x1400448e1
   1400447e1:	mov    rcx,rdi
   1400447e4:	call   0x1400441b0
   1400447e9:	mov    ebx,DWORD PTR [rdi+0x50]
   1400447ec:	mov    rdx,rsi
   1400447ef:	mov    rcx,QWORD PTR [rdi+0x58]
   1400447f3:	call   0x14002fac8
   1400447f8:	mov    QWORD PTR [rax],rbx
   1400447fb:	add    DWORD PTR [rdi+0x50],ebp
   1400447fe:	jmp    0x1400448e1
   140044803:	xor    ebx,ebx
   140044805:	cmp    QWORD PTR [rcx+0x58],rbx
   140044809:	jne    0x140044881
   14004480b:	lea    ecx,[rbx+0x28]
   14004480e:	call   0x14001ac0c
   140044813:	mov    QWORD PTR [rsp+0x50],rax
   140044818:	cmp    rax,rbx
   14004481b:	je     0x140044827
   14004481d:	mov    rcx,rax
   140044820:	call   0x1400451d4
   140044825:	jmp    0x14004482a
   140044827:	mov    rax,rbx
   14004482a:	mov    QWORD PTR [rdi+0x58],rax
   14004482e:	mov    r8d,DWORD PTR [rdi+0x68]
   140044832:	mov    rdx,rbp
   140044835:	mov    rcx,rax
   140044838:	call   0x1400451f4
   14004483d:	mov    rax,QWORD PTR [rdi+0x58]
   140044841:	cmp    QWORD PTR [rax+0x10],rbx
   140044845:	jg     0x14004484d
   140044847:	call   0x1400208f8
   14004484c:	int3   
   14004484d:	mov    rax,QWORD PTR [rax+0x8]
   140044851:	mov    QWORD PTR [rax],rbx
   140044854:	mov    DWORD PTR [rdi+0x50],ebp
   140044857:	mov    QWORD PTR [rsp+0x60],rbx
   14004485c:	lea    rdx,[rsp+0x60]
   140044861:	mov    rcx,rdi
   140044864:	call   0x140044658
   140044869:	mov    DWORD PTR [rsp+0x50],ebx
   14004486d:	mov    r9,rbp
   140044870:	lea    r8,[rsp+0x50]
   140044875:	xor    edx,edx
   140044877:	mov    rcx,QWORD PTR [rsp+0x60]
   14004487c:	call   0x140044408
   140044881:	cmp    rsi,rbx
   140044884:	je     0x1400448e1
   140044886:	mov    rcx,rdi
   140044889:	call   0x1400441b0
   14004488e:	mov    edx,DWORD PTR [rdi+0x50]
   140044891:	mov    r9,rbp
   140044894:	mov    r8,rsi
   140044897:	mov    rcx,QWORD PTR [rdi+0x58]
   14004489b:	call   0x140045398
   1400448a0:	mov    QWORD PTR [rsp+0x60],rbx
   1400448a5:	lea    r8,[rsp+0x60]
   1400448aa:	mov    rdx,rbp
   1400448ad:	mov    rcx,QWORD PTR [rdi+0x60]
   1400448b1:	call   0x14002f8c0
   1400448b6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400448bb:	cmp    rcx,rbx
   1400448be:	jne    0x1400448c6
   1400448c0:	call   0x1400208f8
   1400448c5:	int3   
   1400448c6:	mov    DWORD PTR [rsp+0x50],0x2
   1400448ce:	mov    edx,DWORD PTR [rdi+0x50]
   1400448d1:	mov    r9,rbp
   1400448d4:	lea    r8,[rsp+0x50]
   1400448d9:	call   0x140044408
   1400448de:	add    DWORD PTR [rdi+0x50],ebp
   1400448e1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400448e6:	add    rsp,0x30
   1400448ea:	pop    rdi
   1400448eb:	pop    rsi
   1400448ec:	pop    rbp
   1400448ed:	ret    
   1400448ee:	int3   
   1400448ef:	int3   
   1400448f0:	rex push rbp
   1400448f2:	sub    rsp,0x20
   1400448f6:	mov    rbp,rdx
   1400448f9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400448fd:	call   0x140001040
   140044902:	add    rsp,0x20
   140044906:	pop    rbp
   140044907:	ret    
   140044908:	int3   
   140044909:	int3   
   14004490a:	int3   
   14004490b:	int3   
   14004490c:	int3   
   14004490d:	int3   
   14004490e:	int3   
   14004490f:	int3   
   140044910:	rex push rbp
   140044912:	sub    rsp,0x20
   140044916:	mov    rbp,rdx
   140044919:	mov    rcx,QWORD PTR [rbp+0x50]
   14004491d:	call   0x140001040
   140044922:	add    rsp,0x20
   140044926:	pop    rbp
   140044927:	ret    
   140044928:	mov    QWORD PTR [rsp+0x8],rbx
   14004492d:	mov    QWORD PTR [rsp+0x10],rsi
   140044932:	push   rdi
   140044933:	sub    rsp,0x20
   140044937:	test   rdx,rdx
   14004493a:	mov    rsi,rdx
   14004493d:	mov    rdi,rcx
   140044940:	jne    0x14004494f
   140044942:	mov    rdx,QWORD PTR [rcx+0x18]
   140044946:	lea    ecx,[rsi+0x6]
   140044949:	call   0x14003067c
   14004494e:	int3   
   14004494f:	mov    eax,DWORD PTR [rcx+0x20]
   140044952:	not    eax
   140044954:	test   al,0x1
   140044956:	jne    0x140044967
   140044958:	mov    rdx,QWORD PTR [rcx+0x18]
   14004495c:	mov    ecx,0x1
   140044961:	call   0x14003067c
   140044966:	int3   
   140044967:	cmp    DWORD PTR [rdx+0xc],0xffff
   14004496e:	jne    0x140044976
   140044970:	call   0x1400208d4
   140044975:	int3   
   140044976:	xor    edx,edx
   140044978:	call   0x140044760
   14004497d:	mov    rcx,QWORD PTR [rdi+0x58]
   140044981:	mov    rdx,rsi
   140044984:	call   0x14002fac8
   140044989:	mov    ebx,DWORD PTR [rax]
   14004498b:	mov    eax,DWORD PTR [rdi+0x20]
   14004498e:	test   ebx,ebx
   140044990:	not    eax
   140044992:	je     0x140044a55
   140044998:	cmp    ebx,0x7fff
   14004499e:	jae    0x1400449df
   1400449a0:	test   al,0x1
   1400449a2:	jne    0x1400449b3
   1400449a4:	mov    rdx,QWORD PTR [rdi+0x18]
   1400449a8:	mov    ecx,0x2
   1400449ad:	call   0x14003067c
   1400449b2:	int3   
   1400449b3:	mov    rax,QWORD PTR [rdi+0x38]
   1400449b7:	add    rax,0x2
   1400449bb:	cmp    rax,QWORD PTR [rdi+0x40]
   1400449bf:	jbe    0x1400449c9
   1400449c1:	mov    rcx,rdi
   1400449c4:	call   0x140030960
   1400449c9:	mov    rax,QWORD PTR [rdi+0x38]
   1400449cd:	or     bx,0x8000
   1400449d2:	mov    WORD PTR [rax],bx
   1400449d5:	add    QWORD PTR [rdi+0x38],0x2
   1400449da:	jmp    0x140044ab5
   1400449df:	test   al,0x1
   1400449e1:	jne    0x1400449f2
   1400449e3:	mov    rdx,QWORD PTR [rdi+0x18]
   1400449e7:	mov    ecx,0x2
   1400449ec:	call   0x14003067c
   1400449f1:	int3   
   1400449f2:	mov    rax,QWORD PTR [rdi+0x38]
   1400449f6:	add    rax,0x2
   1400449fa:	cmp    rax,QWORD PTR [rdi+0x40]
   1400449fe:	jbe    0x140044a08
   140044a00:	mov    rcx,rdi
   140044a03:	call   0x140030960
   140044a08:	mov    rax,QWORD PTR [rdi+0x38]
   140044a0c:	mov    WORD PTR [rax],0x7fff
   140044a11:	add    QWORD PTR [rdi+0x38],0x2
   140044a16:	mov    eax,DWORD PTR [rdi+0x20]
   140044a19:	mov    rcx,QWORD PTR [rdi+0x38]
   140044a1d:	not    eax
   140044a1f:	test   al,0x1
   140044a21:	jne    0x140044a32
   140044a23:	mov    rdx,QWORD PTR [rdi+0x18]
   140044a27:	mov    ecx,0x2
   140044a2c:	call   0x14003067c
   140044a31:	int3   
   140044a32:	lea    rax,[rcx+0x4]
   140044a36:	cmp    rax,QWORD PTR [rdi+0x40]
   140044a3a:	jbe    0x140044a44
   140044a3c:	mov    rcx,rdi
   140044a3f:	call   0x140030960
   140044a44:	mov    rax,QWORD PTR [rdi+0x38]
   140044a48:	bts    ebx,0x1f
   140044a4c:	mov    DWORD PTR [rax],ebx
   140044a4e:	add    QWORD PTR [rdi+0x38],0x4
   140044a53:	jmp    0x140044ab5
   140044a55:	test   al,0x1
   140044a57:	jne    0x140044a68
   140044a59:	mov    rdx,QWORD PTR [rdi+0x18]
   140044a5d:	mov    ecx,0x2
   140044a62:	call   0x14003067c
   140044a67:	int3   
   140044a68:	mov    rax,QWORD PTR [rdi+0x38]
   140044a6c:	add    rax,0x2
   140044a70:	cmp    rax,QWORD PTR [rdi+0x40]
   140044a74:	jbe    0x140044a7e
   140044a76:	mov    rcx,rdi
   140044a79:	call   0x140030960
   140044a7e:	mov    rax,QWORD PTR [rdi+0x38]
   140044a82:	mov    rdx,rdi
   140044a85:	mov    rcx,rsi
   140044a88:	or     WORD PTR [rax],0xffff
   140044a8d:	add    QWORD PTR [rdi+0x38],0x2
   140044a92:	call   0x1400310a0
   140044a97:	mov    rcx,rdi
   140044a9a:	call   0x1400441b0
   140044a9f:	mov    rcx,QWORD PTR [rdi+0x58]
   140044aa3:	mov    ebx,DWORD PTR [rdi+0x50]
   140044aa6:	mov    rdx,rsi
   140044aa9:	call   0x14002fac8
   140044aae:	mov    QWORD PTR [rax],rbx
   140044ab1:	add    DWORD PTR [rdi+0x50],0x1
   140044ab5:	mov    rbx,QWORD PTR [rsp+0x30]
   140044aba:	mov    rsi,QWORD PTR [rsp+0x38]
   140044abf:	add    rsp,0x20
   140044ac3:	pop    rdi
   140044ac4:	ret    
   140044ac5:	int3   
   140044ac6:	int3   
   140044ac7:	int3   
   140044ac8:	mov    QWORD PTR [rsp+0x10],rbx
   140044acd:	mov    QWORD PTR [rsp+0x18],rbp
   140044ad2:	push   rsi
   140044ad3:	push   rdi
   140044ad4:	push   r12
   140044ad6:	push   r13
   140044ad8:	push   r14
   140044ada:	sub    rsp,0x30
   140044ade:	mov    esi,0x1
   140044ae3:	mov    r12,r9
   140044ae6:	mov    r14,r8
   140044ae9:	test   BYTE PTR [rcx+0x20],sil
   140044aed:	mov    r13,rdx
   140044af0:	mov    rdi,rcx
   140044af3:	jne    0x140044b01
   140044af5:	mov    rdx,QWORD PTR [rcx+0x18]
   140044af9:	mov    ecx,esi
   140044afb:	call   0x14003067c
   140044b00:	int3   
   140044b01:	test   rdx,rdx
   140044b04:	je     0x140044b15
   140044b06:	cmp    DWORD PTR [rdx+0xc],0xffff
   140044b0d:	jne    0x140044b15
   140044b0f:	call   0x1400208d4
   140044b14:	int3   
   140044b15:	xor    edx,edx
   140044b17:	call   0x140044760
   140044b1c:	test   BYTE PTR [rdi+0x20],sil
   140044b20:	jne    0x140044b31
   140044b22:	mov    rdx,QWORD PTR [rdi+0x18]
   140044b26:	mov    ecx,0x4
   140044b2b:	call   0x14003067c
   140044b30:	int3   
   140044b31:	mov    rax,QWORD PTR [rdi+0x38]
   140044b35:	add    rax,0x2
   140044b39:	cmp    rax,QWORD PTR [rdi+0x40]
   140044b3d:	jbe    0x140044b50
   140044b3f:	mov    edx,DWORD PTR [rdi+0x38]
   140044b42:	mov    rcx,rdi
   140044b45:	sub    edx,DWORD PTR [rdi+0x40]
   140044b48:	add    edx,0x2
   140044b4b:	call   0x140030a20
   140044b50:	mov    rax,QWORD PTR [rdi+0x38]
   140044b54:	movzx  ebx,WORD PTR [rax]
   140044b57:	add    rax,0x2
   140044b5b:	cmp    bx,0x7fff
   140044b60:	mov    QWORD PTR [rdi+0x38],rax
   140044b64:	jne    0x140044ba6
   140044b66:	test   BYTE PTR [rdi+0x20],sil
   140044b6a:	jne    0x140044b7b
   140044b6c:	mov    rdx,QWORD PTR [rdi+0x18]
   140044b70:	mov    ecx,0x4
   140044b75:	call   0x14003067c
   140044b7a:	int3   
   140044b7b:	add    rax,0x4
   140044b7f:	cmp    rax,QWORD PTR [rdi+0x40]
   140044b83:	jbe    0x140044b96
   140044b85:	mov    edx,DWORD PTR [rdi+0x38]
   140044b88:	mov    rcx,rdi
   140044b8b:	sub    edx,DWORD PTR [rdi+0x40]
   140044b8e:	add    edx,0x4
   140044b91:	call   0x140030a20
   140044b96:	mov    rax,QWORD PTR [rdi+0x38]
   140044b9a:	mov    ebp,DWORD PTR [rax]
   140044b9c:	add    rax,0x4
   140044ba0:	mov    QWORD PTR [rdi+0x38],rax
   140044ba4:	jmp    0x140044bba
   140044ba6:	movzx  eax,bx
   140044ba9:	mov    ebp,eax
   140044bab:	shl    ebp,0x10
   140044bae:	and    ebp,0x80008000
   140044bb4:	or     ebp,eax
   140044bb6:	btr    ebp,0xf
   140044bba:	bt     ebp,0x1f
   140044bbe:	jb     0x140044bf1
   140044bc0:	test   r12,r12
   140044bc3:	jne    0x140044bd4
   140044bc5:	mov    rdx,QWORD PTR [rdi+0x18]
   140044bc9:	lea    ecx,[r12+0x5]
   140044bce:	call   0x14003067c
   140044bd3:	int3   
   140044bd4:	mov    DWORD PTR [r12],ebp
   140044bd8:	xor    eax,eax
   140044bda:	mov    rbx,QWORD PTR [rsp+0x68]
   140044bdf:	mov    rbp,QWORD PTR [rsp+0x70]
   140044be4:	add    rsp,0x30
   140044be8:	pop    r14
   140044bea:	pop    r13
   140044bec:	pop    r12
   140044bee:	pop    rdi
   140044bef:	pop    rsi
   140044bf0:	ret    
   140044bf1:	cmp    bx,0xffff
   140044bf6:	jne    0x140044cc4
   140044bfc:	lea    rdx,[rsp+0x60]
   140044c01:	mov    rcx,rdi
   140044c04:	call   0x140030be8
   140044c09:	test   rax,rax
   140044c0c:	mov    rsi,rax
   140044c0f:	jne    0x140044c1e
   140044c11:	mov    rdx,QWORD PTR [rdi+0x18]
   140044c15:	lea    ecx,[rax+0x6]
   140044c18:	call   0x14003067c
   140044c1d:	int3   
   140044c1e:	mov    eax,DWORD PTR [rax+0xc]
   140044c21:	btr    eax,0x1f
   140044c25:	cmp    eax,DWORD PTR [rsp+0x60]
   140044c29:	je     0x140044c5e
   140044c2b:	bt     DWORD PTR [rsi+0xc],0x1f
   140044c30:	jb     0x140044c41
   140044c32:	mov    rdx,QWORD PTR [rdi+0x18]
   140044c36:	mov    ecx,0x7
   140044c3b:	call   0x14003067c
   140044c40:	int3   
   140044c41:	xor    edx,edx
   140044c43:	mov    rcx,rdi
   140044c46:	call   0x140044658
   140044c4b:	mov    rcx,QWORD PTR [rdi+0x60]
   140044c4f:	mov    ebx,DWORD PTR [rsp+0x60]
   140044c53:	mov    rdx,rsi
   140044c56:	call   0x14002fac8
   140044c5b:	mov    QWORD PTR [rax],rbx
   140044c5e:	mov    rcx,rdi
   140044c61:	call   0x1400441b0
   140044c66:	mov    edx,DWORD PTR [rdi+0x50]
   140044c69:	mov    rcx,QWORD PTR [rdi+0x58]
   140044c6d:	mov    ebx,0x1
   140044c72:	mov    r8,rsi
   140044c75:	mov    r9,rbx
   140044c78:	call   0x140045398
   140044c7d:	mov    rcx,QWORD PTR [rdi+0x60]
   140044c81:	and    QWORD PTR [rsp+0x28],0x0
   140044c87:	lea    r8,[rsp+0x28]
   140044c8c:	mov    rdx,rbx
   140044c8f:	call   0x14002f8c0
   140044c94:	mov    rcx,QWORD PTR [rsp+0x28]
   140044c99:	test   rcx,rcx
   140044c9c:	jne    0x140044ca4
   140044c9e:	call   0x1400208f8
   140044ca3:	int3   
   140044ca4:	mov    edx,DWORD PTR [rdi+0x50]
   140044ca7:	lea    r8,[rsp+0x20]
   140044cac:	mov    r9,rbx
   140044caf:	mov    DWORD PTR [rsp+0x20],ebx
   140044cb3:	call   0x140044408
   140044cb8:	add    DWORD PTR [rdi+0x50],ebx
   140044cbb:	mov    eax,DWORD PTR [rsp+0x60]
   140044cbf:	jmp    0x140044d83
   140044cc4:	mov    ebx,ebp
   140044cc6:	btr    ebx,0x1f
   140044cca:	test   ebx,ebx
   140044ccc:	je     0x140044dd2
   140044cd2:	mov    rax,QWORD PTR [rdi+0x58]
   140044cd6:	mov    ecx,DWORD PTR [rax+0x10]
   140044cd9:	sub    ecx,esi
   140044cdb:	cmp    ebx,ecx
   140044cdd:	ja     0x140044dd2
   140044ce3:	mov    rcx,QWORD PTR [rdi+0x60]
   140044ce7:	and    QWORD PTR [rsp+0x20],0x0
   140044ced:	lea    r8,[rsp+0x20]
   140044cf2:	mov    rdx,rsi
   140044cf5:	call   0x14002f8c0
   140044cfa:	mov    rax,QWORD PTR [rsp+0x20]
   140044cff:	test   rax,rax
   140044d02:	jne    0x140044d0a
   140044d04:	call   0x1400208f8
   140044d09:	int3   
   140044d0a:	mov    esi,ebx
   140044d0c:	test   rsi,rsi
   140044d0f:	js     0x140044dcc
   140044d15:	cmp    rsi,QWORD PTR [rax+0x10]
   140044d19:	jge    0x140044dcc
   140044d1f:	mov    rax,QWORD PTR [rax+0x8]
   140044d23:	cmp    DWORD PTR [rax+rbx*4],0x2
   140044d27:	jne    0x140044d38
   140044d29:	mov    rdx,QWORD PTR [rdi+0x18]
   140044d2d:	mov    ecx,0x5
   140044d32:	call   0x14003067c
   140044d37:	int3   
   140044d38:	test   rsi,rsi
   140044d3b:	mov    rax,QWORD PTR [rdi+0x58]
   140044d3f:	js     0x140044dc6
   140044d45:	cmp    rsi,QWORD PTR [rax+0x10]
   140044d49:	jge    0x140044dc6
   140044d4b:	mov    rax,QWORD PTR [rax+0x8]
   140044d4f:	mov    rcx,QWORD PTR [rdi+0x60]
   140044d53:	mov    rsi,QWORD PTR [rax+rbx*8]
   140044d57:	and    DWORD PTR [rsp+0x60],0x0
   140044d5c:	test   rcx,rcx
   140044d5f:	je     0x140044d78
   140044d61:	lea    r8,[rsp+0x20]
   140044d66:	mov    rdx,rsi
   140044d69:	call   0x14002f8c0
   140044d6e:	test   eax,eax
   140044d70:	je     0x140044d78
   140044d72:	mov    eax,DWORD PTR [rsp+0x20]
   140044d76:	jmp    0x140044d7f
   140044d78:	mov    eax,DWORD PTR [rsi+0xc]
   140044d7b:	btr    eax,0x1f
   140044d7f:	mov    DWORD PTR [rsp+0x60],eax
   140044d83:	test   r13,r13
   140044d86:	je     0x140044da8
   140044d88:	mov    rdx,r13
   140044d8b:	mov    rcx,rsi
   140044d8e:	call   0x14002c840
   140044d93:	test   eax,eax
   140044d95:	jne    0x140044da4
   140044d97:	mov    rdx,QWORD PTR [rdi+0x18]
   140044d9b:	lea    ecx,[rax+0x6]
   140044d9e:	call   0x14003067c
   140044da3:	int3   
   140044da4:	mov    eax,DWORD PTR [rsp+0x60]
   140044da8:	test   r14,r14
   140044dab:	je     0x140044db2
   140044dad:	mov    DWORD PTR [r14],eax
   140044db0:	jmp    0x140044db5
   140044db2:	mov    DWORD PTR [rdi+0x14],eax
   140044db5:	test   r12,r12
   140044db8:	je     0x140044dbe
   140044dba:	mov    DWORD PTR [r12],ebp
   140044dbe:	mov    rax,rsi
   140044dc1:	jmp    0x140044bda
   140044dc6:	call   0x1400208f8
   140044dcb:	int3   
   140044dcc:	call   0x1400208f8
   140044dd1:	int3   
   140044dd2:	mov    rdx,QWORD PTR [rdi+0x18]
   140044dd6:	mov    ecx,0x5
   140044ddb:	call   0x14003067c
   140044de0:	int3   
   140044de1:	int3   
   140044de2:	int3   
   140044de3:	int3   
   140044de4:	mov    QWORD PTR [rsp+0x8],rbx
   140044de9:	push   rdi
   140044dea:	sub    rsp,0x20
   140044dee:	mov    eax,DWORD PTR [rdx+0x20]
   140044df1:	mov    rdi,rdx
   140044df4:	mov    rbx,rcx
   140044df7:	not    eax
   140044df9:	test   al,0x1
   140044dfb:	je     0x140044e0b
   140044dfd:	mov    rdx,QWORD PTR [rcx+0x10]
   140044e01:	mov    rcx,rdi
   140044e04:	call   0x140030e68
   140044e09:	jmp    0x140044e22
   140044e0b:	mov    rcx,rdx
   140044e0e:	call   0x140030fb8
   140044e13:	or     r8,0xffffffffffffffff
   140044e17:	mov    rcx,rbx
   140044e1a:	mov    rdx,rax
   140044e1d:	call   0x1400441d4
   140044e22:	mov    r8,QWORD PTR [rbx+0x10]
   140044e26:	mov    rdx,QWORD PTR [rbx+0x8]
   140044e2a:	mov    rcx,rdi
   140044e2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140044e32:	add    rsp,0x20
   140044e36:	pop    rdi
   140044e37:	jmp    0x140044590
   140044e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140044e41:	mov    QWORD PTR [rsp+0x10],rsi
   140044e46:	push   rdi
   140044e47:	sub    rsp,0x20
   140044e4b:	mov    eax,DWORD PTR [rcx+0x20]
   140044e4e:	mov    rsi,rdx
   140044e51:	mov    rdi,rcx
   140044e54:	not    eax
   140044e56:	test   al,0x1
   140044e58:	jne    0x140044e69
   140044e5a:	mov    rdx,QWORD PTR [rcx+0x18]
   140044e5e:	mov    ecx,0x2
   140044e63:	call   0x14003067c
   140044e68:	int3   
   140044e69:	xor    edx,edx
   140044e6b:	call   0x140044760
   140044e70:	test   rsi,rsi
   140044e73:	jne    0x140044eb3
   140044e75:	mov    eax,DWORD PTR [rdi+0x20]
   140044e78:	not    eax
   140044e7a:	test   al,0x1
   140044e7c:	jne    0x140044e8b
   140044e7e:	mov    rdx,QWORD PTR [rdi+0x18]
   140044e82:	lea    ecx,[rsi+0x2]
   140044e85:	call   0x14003067c
   140044e8a:	int3   
   140044e8b:	mov    rax,QWORD PTR [rdi+0x38]
   140044e8f:	add    rax,0x2
   140044e93:	cmp    rax,QWORD PTR [rdi+0x40]
   140044e97:	jbe    0x140044ea1
   140044e99:	mov    rcx,rdi
   140044e9c:	call   0x140030960
   140044ea1:	mov    rax,QWORD PTR [rdi+0x38]
   140044ea5:	and    WORD PTR [rax],0x0
   140044ea9:	add    QWORD PTR [rdi+0x38],0x2
   140044eae:	jmp    0x140044fb7
   140044eb3:	mov    rcx,QWORD PTR [rdi+0x58]
   140044eb7:	mov    rdx,rsi
   140044eba:	call   0x14002fac8
   140044ebf:	mov    ebx,DWORD PTR [rax]
   140044ec1:	test   ebx,ebx
   140044ec3:	je     0x140044f7a
   140044ec9:	cmp    ebx,0x7fff
   140044ecf:	mov    eax,DWORD PTR [rdi+0x20]
   140044ed2:	not    eax
   140044ed4:	jae    0x140044f08
   140044ed6:	test   al,0x1
   140044ed8:	jne    0x140044ee9
   140044eda:	mov    rdx,QWORD PTR [rdi+0x18]
   140044ede:	mov    ecx,0x2
   140044ee3:	call   0x14003067c
   140044ee8:	int3   
   140044ee9:	mov    rax,QWORD PTR [rdi+0x38]
   140044eed:	add    rax,0x2
   140044ef1:	cmp    rax,QWORD PTR [rdi+0x40]
   140044ef5:	jbe    0x140044eff
   140044ef7:	mov    rcx,rdi
   140044efa:	call   0x140030960
   140044eff:	mov    rax,QWORD PTR [rdi+0x38]
   140044f03:	mov    WORD PTR [rax],bx
   140044f06:	jmp    0x140044ea9
   140044f08:	test   al,0x1
   140044f0a:	jne    0x140044f1b
   140044f0c:	mov    rdx,QWORD PTR [rdi+0x18]
   140044f10:	mov    ecx,0x2
   140044f15:	call   0x14003067c
   140044f1a:	int3   
   140044f1b:	mov    rax,QWORD PTR [rdi+0x38]
   140044f1f:	add    rax,0x2
   140044f23:	cmp    rax,QWORD PTR [rdi+0x40]
   140044f27:	jbe    0x140044f31
   140044f29:	mov    rcx,rdi
   140044f2c:	call   0x140030960
   140044f31:	mov    rax,QWORD PTR [rdi+0x38]
   140044f35:	mov    WORD PTR [rax],0x7fff
   140044f3a:	add    QWORD PTR [rdi+0x38],0x2
   140044f3f:	mov    eax,DWORD PTR [rdi+0x20]
   140044f42:	mov    rcx,QWORD PTR [rdi+0x38]
   140044f46:	not    eax
   140044f48:	test   al,0x1
   140044f4a:	jne    0x140044f5b
   140044f4c:	mov    rdx,QWORD PTR [rdi+0x18]
   140044f50:	mov    ecx,0x2
   140044f55:	call   0x14003067c
   140044f5a:	int3   
   140044f5b:	lea    rax,[rcx+0x4]
   140044f5f:	cmp    rax,QWORD PTR [rdi+0x40]
   140044f63:	jbe    0x140044f6d
   140044f65:	mov    rcx,rdi
   140044f68:	call   0x140030960
   140044f6d:	mov    rax,QWORD PTR [rdi+0x38]
   140044f71:	mov    DWORD PTR [rax],ebx
   140044f73:	add    QWORD PTR [rdi+0x38],0x4
   140044f78:	jmp    0x140044fb7
   140044f7a:	mov    rax,QWORD PTR [rsi]
   140044f7d:	mov    rcx,rsi
   140044f80:	call   QWORD PTR [rax]
   140044f82:	mov    rcx,rdi
   140044f85:	mov    rdx,rax
   140044f88:	call   0x140044928
   140044f8d:	mov    rcx,rdi
   140044f90:	call   0x1400441b0
   140044f95:	mov    rcx,QWORD PTR [rdi+0x58]
   140044f99:	mov    ebx,DWORD PTR [rdi+0x50]
   140044f9c:	mov    rdx,rsi
   140044f9f:	call   0x14002fac8
   140044fa4:	mov    rdx,rdi
   140044fa7:	mov    rcx,rsi
   140044faa:	mov    QWORD PTR [rax],rbx
   140044fad:	add    DWORD PTR [rdi+0x50],0x1
   140044fb1:	mov    rax,QWORD PTR [rsi]
   140044fb4:	call   QWORD PTR [rax+0x10]
   140044fb7:	mov    rbx,QWORD PTR [rsp+0x30]
   140044fbc:	mov    rsi,QWORD PTR [rsp+0x38]
   140044fc1:	add    rsp,0x20
   140044fc5:	pop    rdi
   140044fc6:	ret    
   140044fc7:	int3   
   140044fc8:	rex push rsi
   140044fca:	push   rdi
   140044fcb:	push   r12
   140044fcd:	sub    rsp,0x40
   140044fd1:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140044fda:	mov    QWORD PTR [rsp+0x68],rbx
   140044fdf:	mov    r12,rdx
   140044fe2:	mov    rbx,rcx
   140044fe5:	mov    esi,0x1
   140044fea:	test   BYTE PTR [rcx+0x20],sil
   140044fee:	jne    0x140044ffd
   140044ff0:	mov    rdx,QWORD PTR [rcx+0x18]
   140044ff4:	lea    ecx,[rsi+0x3]
   140044ff7:	call   0x14003067c
   140044ffc:	int3   
   140044ffd:	lea    r9,[rsp+0x60]
   140045002:	lea    r8,[rsp+0x70]
   140045007:	call   0x140044ac8
   14004500c:	and    QWORD PTR [rsp+0x20],0x0
   140045012:	test   rax,rax
   140045015:	jne    0x1400450e7
   14004501b:	mov    rax,QWORD PTR [rbx+0x58]
   14004501f:	mov    ecx,DWORD PTR [rax+0x10]
   140045022:	sub    ecx,esi
   140045024:	mov    edi,DWORD PTR [rsp+0x60]
   140045028:	cmp    edi,ecx
   14004502a:	jbe    0x14004503b
   14004502c:	mov    rdx,QWORD PTR [rbx+0x18]
   140045030:	mov    ecx,0x5
   140045035:	call   0x14003067c
   14004503a:	int3   
   14004503b:	and    QWORD PTR [rsp+0x60],0x0
   140045041:	lea    r8,[rsp+0x60]
   140045046:	mov    rdx,rsi
   140045049:	mov    rcx,QWORD PTR [rbx+0x60]
   14004504d:	call   0x14002f8c0
   140045052:	test   eax,eax
   140045054:	je     0x140045098
   140045056:	mov    rcx,QWORD PTR [rsp+0x60]
   14004505b:	test   rcx,rcx
   14004505e:	jne    0x140045066
   140045060:	call   0x1400208f8
   140045065:	int3   
   140045066:	mov    eax,DWORD PTR [rcx+0x10]
   140045069:	sub    eax,esi
   14004506b:	cmp    edi,eax
   14004506d:	ja     0x140045098
   14004506f:	test   rdi,rdi
   140045072:	js     0x140045092
   140045074:	cmp    rdi,QWORD PTR [rcx+0x10]
   140045078:	jge    0x140045092
   14004507a:	mov    rax,QWORD PTR [rcx+0x8]
   14004507e:	cmp    DWORD PTR [rax+rdi*4],esi
   140045081:	jne    0x140045098
   140045083:	mov    rdx,QWORD PTR [rbx+0x18]
   140045087:	mov    ecx,0x5
   14004508c:	call   0x14003067c
   140045091:	int3   
   140045092:	call   0x1400208f8
   140045097:	int3   
   140045098:	mov    rax,QWORD PTR [rbx+0x58]
   14004509c:	test   rdi,rdi
   14004509f:	js     0x1400450e1
   1400450a1:	cmp    rdi,QWORD PTR [rax+0x10]
   1400450a5:	jge    0x1400450e1
   1400450a7:	mov    rax,QWORD PTR [rax+0x8]
   1400450ab:	mov    rdi,QWORD PTR [rax+rdi*8]
   1400450af:	test   rdi,rdi
   1400450b2:	je     0x14004517d
   1400450b8:	test   r12,r12
   1400450bb:	je     0x14004517d
   1400450c1:	mov    rdx,r12
   1400450c4:	mov    rcx,rdi
   1400450c7:	call   0x14002c878
   1400450cc:	test   eax,eax
   1400450ce:	jne    0x14004517d
   1400450d4:	mov    rdx,QWORD PTR [rbx+0x18]
   1400450d8:	lea    ecx,[rax+0x6]
   1400450db:	call   0x14003067c
   1400450e0:	int3   
   1400450e1:	call   0x1400208f8
   1400450e6:	nop
   1400450e7:	mov    rcx,rax
   1400450ea:	call   0x14002c7c8
   1400450ef:	mov    rdi,rax
   1400450f2:	mov    QWORD PTR [rsp+0x20],rax
   1400450f7:	test   rax,rax
   1400450fa:	jne    0x140045101
   1400450fc:	call   0x1400208b0
   140045101:	mov    rcx,rbx
   140045104:	call   0x1400441b0
   140045109:	mov    edx,DWORD PTR [rbx+0x50]
   14004510c:	mov    r9,rsi
   14004510f:	mov    r8,rdi
   140045112:	mov    rcx,QWORD PTR [rbx+0x58]
   140045116:	call   0x140045398
   14004511b:	and    QWORD PTR [rsp+0x78],0x0
   140045121:	lea    r8,[rsp+0x78]
   140045126:	mov    rdx,rsi
   140045129:	mov    rcx,QWORD PTR [rbx+0x60]
   14004512d:	call   0x14002f8c0
   140045132:	xor    eax,eax
   140045134:	mov    rcx,QWORD PTR [rsp+0x78]
   140045139:	test   rcx,rcx
   14004513c:	setne  al
   14004513f:	test   eax,eax
   140045141:	jne    0x140045148
   140045143:	call   0x1400208f8
   140045148:	mov    DWORD PTR [rsp+0x60],0x2
   140045150:	mov    edx,DWORD PTR [rbx+0x50]
   140045153:	mov    r9,rsi
   140045156:	lea    r8,[rsp+0x60]
   14004515b:	call   0x140044408
   140045160:	add    DWORD PTR [rbx+0x50],esi
   140045163:	mov    esi,DWORD PTR [rbx+0x14]
   140045166:	mov    eax,DWORD PTR [rsp+0x70]
   14004516a:	mov    DWORD PTR [rbx+0x14],eax
   14004516d:	mov    r8,QWORD PTR [rdi]
   140045170:	mov    rdx,rbx
   140045173:	mov    rcx,rdi
   140045176:	call   QWORD PTR [r8+0x10]
   14004517a:	mov    DWORD PTR [rbx+0x14],esi
   14004517d:	mov    rax,rdi
   140045180:	mov    rbx,QWORD PTR [rsp+0x68]
   140045185:	add    rsp,0x40
   140045189:	pop    r12
   14004518b:	pop    rdi
   14004518c:	pop    rsi
   14004518d:	ret    
   14004518e:	int3   
   14004518f:	int3   
   140045190:	int3   
   140045191:	int3   
   140045192:	int3   
   140045193:	int3   
   140045194:	int3   
   140045195:	int3   
   140045196:	int3   
   140045197:	int3   
   140045198:	mov    QWORD PTR [rsp+0x10],rdx
   14004519d:	push   rbp
   14004519e:	push   rsi
   14004519f:	sub    rsp,0x28
   1400451a3:	mov    rbp,rdx
   1400451a6:	mov    rcx,QWORD PTR [rbp+0x20]
   1400451aa:	test   rcx,rcx
   1400451ad:	je     0x1400451ba
   1400451af:	mov    rax,QWORD PTR [rcx]
   1400451b2:	mov    edx,0x1
   1400451b7:	call   QWORD PTR [rax+0x8]
   1400451ba:	xor    edx,edx
   1400451bc:	xor    ecx,ecx
   1400451be:	call   0x140048db0
   1400451c3:	nop
   1400451c4:	add    rsp,0x28
   1400451c8:	pop    rsi
   1400451c9:	pop    rbp
   1400451ca:	ret    
   1400451cb:	int3   
   1400451cc:	lea    rax,[rip+0x28915]        # 0x14006dae8
   1400451d3:	ret    
   1400451d4:	lea    rax,[rip+0x28945]        # 0x14006db20
   1400451db:	mov    QWORD PTR [rcx],rax
   1400451de:	xor    eax,eax
   1400451e0:	mov    QWORD PTR [rcx+0x8],rax
   1400451e4:	mov    QWORD PTR [rcx+0x20],rax
   1400451e8:	mov    QWORD PTR [rcx+0x18],rax
   1400451ec:	mov    QWORD PTR [rcx+0x10],rax
   1400451f0:	mov    rax,rcx
   1400451f3:	ret    
   1400451f4:	mov    rax,rsp
   1400451f7:	mov    QWORD PTR [rax+0x8],rbx
   1400451fb:	mov    QWORD PTR [rax+0x10],rbp
   1400451ff:	mov    QWORD PTR [rax+0x18],rsi
   140045203:	mov    QWORD PTR [rax+0x20],rdi
   140045207:	push   r12
   140045209:	sub    rsp,0x20
   14004520d:	test   rdx,rdx
   140045210:	mov    rsi,rdx
   140045213:	mov    rdi,rcx
   140045216:	jns    0x14004521e
   140045218:	call   0x1400208f8
   14004521d:	int3   
   14004521e:	test   r8,r8
   140045221:	js     0x140045227
   140045223:	mov    QWORD PTR [rcx+0x20],r8
   140045227:	test   rdx,rdx
   14004522a:	mov    rcx,QWORD PTR [rcx+0x8]
   14004522e:	jne    0x140045249
   140045230:	call   0x14001ac50
   140045235:	and    QWORD PTR [rdi+0x8],0x0
   14004523a:	and    QWORD PTR [rdi+0x18],0x0
   14004523f:	and    QWORD PTR [rdi+0x10],0x0
   140045244:	jmp    0x14004537a
   140045249:	test   rcx,rcx
   14004524c:	jne    0x140045277
   14004524e:	mov    rbx,rdx
   140045251:	shl    rbx,0x3
   140045255:	mov    rcx,rbx
   140045258:	call   0x14001ac0c
   14004525d:	mov    r8,rbx
   140045260:	xor    edx,edx
   140045262:	mov    rcx,rax
   140045265:	mov    QWORD PTR [rdi+0x8],rax
   140045269:	call   0x140047720
   14004526e:	mov    QWORD PTR [rdi+0x18],rsi
   140045272:	jmp    0x140045376
   140045277:	mov    r8,QWORD PTR [rdi+0x18]
   14004527b:	cmp    rdx,r8
   14004527e:	jg     0x1400452a7
   140045280:	mov    rax,QWORD PTR [rdi+0x10]
   140045284:	cmp    rdx,rax
   140045287:	jle    0x140045376
   14004528d:	mov    r8,rdx
   140045290:	lea    rcx,[rcx+rax*8]
   140045294:	xor    edx,edx
   140045296:	sub    r8,rax
   140045299:	shl    r8,0x3
   14004529d:	call   0x140047720
   1400452a2:	jmp    0x140045376
   1400452a7:	mov    rax,QWORD PTR [rdi+0x20]
   1400452ab:	test   rax,rax
   1400452ae:	jne    0x1400452e1
   1400452b0:	mov    rax,QWORD PTR [rdi+0x10]
   1400452b4:	cqo    
   1400452b6:	and    edx,0x7
   1400452b9:	add    rax,rdx
   1400452bc:	mov    edx,0x4
   1400452c1:	sar    rax,0x3
   1400452c5:	cmp    rax,rdx
   1400452c8:	mov    rcx,rax
   1400452cb:	jl     0x1400452d7
   1400452cd:	mov    eax,0x400
   1400452d2:	cmp    rcx,rax
   1400452d5:	jg     0x1400452e1
   1400452d7:	mov    rax,rcx
   1400452da:	cmp    rcx,rdx
   1400452dd:	cmovl  rax,rdx
   1400452e1:	add    rax,r8
   1400452e4:	mov    rbp,rsi
   1400452e7:	cmp    rsi,rax
   1400452ea:	cmovl  rbp,rax
   1400452ee:	cmp    rbp,r8
   1400452f1:	jge    0x1400452f9
   1400452f3:	call   0x1400208f8
   1400452f8:	int3   
   1400452f9:	mov    rbx,rbp
   1400452fc:	shl    rbx,0x3
   140045300:	mov    rcx,rbx
   140045303:	call   0x14001ac0c
   140045308:	mov    r9,QWORD PTR [rdi+0x10]
   14004530c:	mov    r8,QWORD PTR [rdi+0x8]
   140045310:	shl    r9,0x3
   140045314:	mov    rdx,rbx
   140045317:	mov    rcx,rax
   14004531a:	mov    r12,rax
   14004531d:	call   0x1400466d0
   140045322:	test   eax,eax
   140045324:	je     0x14004534c
   140045326:	cmp    eax,0xc
   140045329:	je     0x140045346
   14004532b:	cmp    eax,0x16
   14004532e:	je     0x140045340
   140045330:	cmp    eax,0x22
   140045333:	je     0x140045340
   140045335:	cmp    eax,0x50
   140045338:	je     0x14004534c
   14004533a:	call   0x1400208f8
   14004533f:	int3   
   140045340:	call   0x1400208f8
   140045345:	int3   
   140045346:	call   0x1400208b0
   14004534b:	int3   
   14004534c:	mov    rax,QWORD PTR [rdi+0x10]
   140045350:	mov    r8,rsi
   140045353:	xor    edx,edx
   140045355:	sub    r8,rax
   140045358:	lea    rcx,[r12+rax*8]
   14004535c:	shl    r8,0x3
   140045360:	call   0x140047720
   140045365:	mov    rcx,QWORD PTR [rdi+0x8]
   140045369:	call   0x14001ac50
   14004536e:	mov    QWORD PTR [rdi+0x8],r12
   140045372:	mov    QWORD PTR [rdi+0x18],rbp
   140045376:	mov    QWORD PTR [rdi+0x10],rsi
   14004537a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004537f:	mov    rbp,QWORD PTR [rsp+0x38]
   140045384:	mov    rsi,QWORD PTR [rsp+0x40]
   140045389:	mov    rdi,QWORD PTR [rsp+0x48]
   14004538e:	add    rsp,0x20
   140045392:	pop    r12
   140045394:	ret    
   140045395:	int3   
   140045396:	int3   
   140045397:	int3   
   140045398:	mov    rax,rsp
   14004539b:	mov    QWORD PTR [rax+0x8],rbx
   14004539f:	mov    QWORD PTR [rax+0x10],rbp
   1400453a3:	mov    QWORD PTR [rax+0x18],rsi
   1400453a7:	mov    QWORD PTR [rax+0x20],rdi
   1400453ab:	push   r12
   1400453ad:	sub    rsp,0x20
   1400453b1:	test   rdx,rdx
   1400453b4:	mov    rdi,r9
   1400453b7:	mov    r12,r8
   1400453ba:	mov    rsi,rdx
   1400453bd:	mov    rbp,rcx
   1400453c0:	js     0x14004548e
   1400453c6:	test   r9,r9
   1400453c9:	jle    0x14004548e
   1400453cf:	or     r8,0xffffffffffffffff
   1400453d3:	cmp    rdx,QWORD PTR [rcx+0x10]
   1400453d7:	jl     0x1400453e3
   1400453d9:	add    rdx,r9
   1400453dc:	call   0x1400451f4
   1400453e1:	jmp    0x14004545d
   1400453e3:	mov    rbx,QWORD PTR [rcx+0x10]
   1400453e7:	lea    rdx,[rbx+r9*1]
   1400453eb:	call   0x1400451f4
   1400453f0:	mov    rcx,QWORD PTR [rbp+0x8]
   1400453f4:	mov    rdx,QWORD PTR [rbp+0x10]
   1400453f8:	sub    rdx,rsi
   1400453fb:	lea    rax,[rsi+rdi*1]
   1400453ff:	lea    r8,[rcx+rsi*8]
   140045403:	sub    rdx,rdi
   140045406:	sub    rbx,rsi
   140045409:	lea    rcx,[rcx+rax*8]
   14004540d:	shl    rbx,0x3
   140045411:	shl    rdx,0x3
   140045415:	mov    r9,rbx
   140045418:	call   0x1400467a0
   14004541d:	test   eax,eax
   14004541f:	je     0x140045447
   140045421:	cmp    eax,0xc
   140045424:	je     0x140045441
   140045426:	cmp    eax,0x16
   140045429:	je     0x14004543b
   14004542b:	cmp    eax,0x22
   14004542e:	je     0x14004543b
   140045430:	cmp    eax,0x50
   140045433:	je     0x140045447
   140045435:	call   0x1400208f8
   14004543a:	int3   
   14004543b:	call   0x1400208f8
   140045440:	int3   
   140045441:	call   0x1400208b0
   140045446:	int3   
   140045447:	mov    rax,QWORD PTR [rbp+0x8]
   14004544b:	mov    r8,rdi
   14004544e:	xor    edx,edx
   140045450:	lea    rcx,[rax+rsi*8]
   140045454:	shl    r8,0x3
   140045458:	call   0x140047720
   14004545d:	shl    rsi,0x3
   140045461:	mov    rax,QWORD PTR [rbp+0x8]
   140045465:	mov    QWORD PTR [rsi+rax*1],r12
   140045469:	add    rsi,0x8
   14004546d:	sub    rdi,0x1
   140045471:	jne    0x140045461
   140045473:	mov    rbx,QWORD PTR [rsp+0x30]
   140045478:	mov    rbp,QWORD PTR [rsp+0x38]
   14004547d:	mov    rsi,QWORD PTR [rsp+0x40]
   140045482:	mov    rdi,QWORD PTR [rsp+0x48]
   140045487:	add    rsp,0x20
   14004548b:	pop    r12
   14004548d:	ret    
   14004548e:	call   0x1400208f8
   140045493:	int3   
   140045494:	mov    QWORD PTR [rsp+0x8],rbx
   140045499:	push   rdi
   14004549a:	sub    rsp,0x20
   14004549e:	lea    rax,[rip+0x2867b]        # 0x14006db20
   1400454a5:	mov    rdi,rcx
   1400454a8:	mov    ebx,edx
   1400454aa:	mov    QWORD PTR [rcx],rax
   1400454ad:	mov    rcx,QWORD PTR [rcx+0x8]
   1400454b1:	call   0x14001ac50
   1400454b6:	test   bl,0x1
   1400454b9:	je     0x1400454c3
   1400454bb:	mov    rcx,rdi
   1400454be:	call   0x14001ac50
   1400454c3:	mov    rax,rdi
   1400454c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400454cb:	add    rsp,0x20
   1400454cf:	pop    rdi
   1400454d0:	ret    
   1400454d1:	int3   
   1400454d2:	int3   
   1400454d3:	int3   
   1400454d4:	lea    rax,[rip+0x28dad]        # 0x14006e288
   1400454db:	mov    QWORD PTR [rcx],rax
   1400454de:	mov    rax,rcx
   1400454e1:	ret    
   1400454e2:	int3   
   1400454e3:	int3   
   1400454e4:	rex push rbx
   1400454e6:	sub    rsp,0x20
   1400454ea:	test   dl,0x1
   1400454ed:	lea    rax,[rip+0x28d94]        # 0x14006e288
   1400454f4:	mov    rbx,rcx
   1400454f7:	mov    QWORD PTR [rcx],rax
   1400454fa:	je     0x140045501
   1400454fc:	call   0x14002cbc8
   140045501:	mov    rax,rbx
   140045504:	add    rsp,0x20
   140045508:	pop    rbx
   140045509:	ret    
   14004550a:	int3   
   14004550b:	int3   
   14004550c:	sub    rsp,0x28
   140045510:	mov    eax,0x110
   140045515:	cmp    edx,eax
   140045517:	jne    0x140045522
   140045519:	mov    edx,eax
   14004551b:	call   0x14001decc
   140045520:	jmp    0x14004554c
   140045522:	mov    eax,0x111
   140045527:	cmp    edx,eax
   140045529:	jne    0x14004554a
   14004552b:	cmp    r8w,0x63
   140045530:	jne    0x14004554a
   140045532:	xor    r9d,r9d
   140045535:	mov    r8d,0xe146
   14004553b:	mov    edx,eax
   14004553d:	call   QWORD PTR [rip+0x1f62d]        # 0x140064b70
   140045543:	mov    eax,0x1
   140045548:	jmp    0x14004554c
   14004554a:	xor    eax,eax
   14004554c:	add    rsp,0x28
   140045550:	ret    
   140045551:	int3   
   140045552:	int3   
   140045553:	int3   
   140045554:	lea    rax,[rip+0x28d85]        # 0x14006e2e0
   14004555b:	ret    
   14004555c:	mov    rax,rsp
   14004555f:	mov    QWORD PTR [rax+0x8],rbx
   140045563:	mov    QWORD PTR [rax+0x10],rbp
   140045567:	mov    QWORD PTR [rax+0x18],rsi
   14004556b:	mov    QWORD PTR [rax+0x20],rdi
   14004556f:	push   r12
   140045571:	sub    rsp,0x20
   140045575:	mov    edi,r8d
   140045578:	mov    r8,QWORD PTR [rsp+0x50]
   14004557d:	mov    r12,rdx
   140045580:	xor    edx,edx
   140045582:	mov    ebp,r9d
   140045585:	mov    rsi,rcx
   140045588:	call   0x14001e01c
   14004558d:	or     DWORD PTR [rsi+0xe8],0xffffffff
   140045594:	xor    edx,edx
   140045596:	lea    rax,[rip+0x28d7b]        # 0x14006e318
   14004559d:	lea    rcx,[rsi+0xf0]
   1400455a4:	lea    r8d,[rdx+0x50]
   1400455a8:	mov    QWORD PTR [rsi],rax
   1400455ab:	call   0x140047720
   1400455b0:	test   edi,edi
   1400455b2:	mov    DWORD PTR [rsi+0xf0],0x50
   1400455bc:	mov    DWORD PTR [rsi+0xf4],ebp
   1400455c2:	je     0x1400455cd
   1400455c4:	or     ebp,0x8
   1400455c7:	mov    DWORD PTR [rsi+0xf4],ebp
   1400455cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400455d2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400455d7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400455dc:	lea    rax,[rip+0xffffffffffffff29]        # 0x14004550c
   1400455e3:	mov    QWORD PTR [rsi+0x130],r12
   1400455ea:	mov    QWORD PTR [rsi+0x108],rax
   1400455f1:	mov    rax,rsi
   1400455f4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400455f9:	add    rsp,0x20
   1400455fd:	pop    r12
   1400455ff:	ret    
   140045600:	lea    rax,[rip+0x28d11]        # 0x14006e318
   140045607:	mov    QWORD PTR [rcx],rax
   14004560a:	jmp    0x14001df14
   14004560f:	int3   
   140045610:	mov    QWORD PTR [rsp+0x10],rbx
   140045615:	mov    QWORD PTR [rsp+0x18],rsi
   14004561a:	push   rdi
   14004561b:	sub    rsp,0x20
   14004561f:	mov    rax,QWORD PTR [rcx+0xd0]
   140045626:	mov    rbx,rcx
   140045629:	test   rax,rax
   14004562c:	jne    0x140045632
   14004562e:	xor    ecx,ecx
   140045630:	jmp    0x140045636
   140045632:	mov    rcx,QWORD PTR [rax+0x40]
   140045636:	lea    rdx,[rsp+0x30]
   14004563b:	call   0x14001db00
   140045640:	mov    rcx,rbx
   140045643:	mov    QWORD PTR [rbx+0xf8],rax
   14004564a:	call   0x140027b2c
   14004564f:	lea    rcx,[rbx+0xf0]
   140045656:	call   0x140062d1c
   14004565b:	mov    edi,eax
   14004565d:	call   0x14002580c
   140045662:	mov    rcx,rbx
   140045665:	call   0x1400257c0
   14004566a:	mov    rcx,QWORD PTR [rsp+0x30]
   14004566f:	mov    esi,0x1
   140045674:	test   rcx,rcx
   140045677:	je     0x140045681
   140045679:	mov    edx,esi
   14004567b:	call   QWORD PTR [rip+0x1f4c7]        # 0x140064b48
   140045681:	mov    eax,0x2
   140045686:	cmp    edi,eax
   140045688:	je     0x1400456cc
   14004568a:	cmp    edi,0x75
   14004568d:	jne    0x140045697
   14004568f:	mov    DWORD PTR [rbx+0x140],esi
   140045695:	jmp    0x1400456c9
   140045697:	cmp    edi,0x76
   14004569a:	jne    0x1400456a4
   14004569c:	mov    DWORD PTR [rbx+0x140],eax
   1400456a2:	jmp    0x1400456c9
   1400456a4:	cmp    edi,0x77
   1400456a7:	jne    0x1400456b5
   1400456a9:	mov    DWORD PTR [rbx+0x140],0x3
   1400456b3:	jmp    0x1400456c9
   1400456b5:	or     ecx,0xffffffff
   1400456b8:	cmp    edi,esi
   1400456ba:	mov    DWORD PTR [rbx+0xe8],edi
   1400456c0:	cmove  ecx,esi
   1400456c3:	mov    DWORD PTR [rbx+0x140],ecx
   1400456c9:	mov    rax,rsi
   1400456cc:	mov    rbx,QWORD PTR [rsp+0x38]
   1400456d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400456d6:	add    rsp,0x20
   1400456da:	pop    rdi
   1400456db:	ret    
   1400456dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400456e1:	push   rdi
   1400456e2:	sub    rsp,0x20
   1400456e6:	lea    rax,[rip+0x28c2b]        # 0x14006e318
   1400456ed:	mov    ebx,edx
   1400456ef:	mov    rdi,rcx
   1400456f2:	mov    QWORD PTR [rcx],rax
   1400456f5:	call   0x14001df14
   1400456fa:	test   bl,0x1
   1400456fd:	je     0x140045707
   1400456ff:	mov    rcx,rdi
   140045702:	call   0x14001ac50
   140045707:	mov    rax,rdi
   14004570a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004570f:	add    rsp,0x20
   140045713:	pop    rdi
   140045714:	ret    
   140045715:	int3   
   140045716:	int3   
   140045717:	int3   
   140045718:	int3   
   140045719:	int3   
   14004571a:	int3   
   14004571b:	int3   
   14004571c:	int3   
   14004571d:	int3   
   14004571e:	int3   
   14004571f:	int3   
   140045720:	mov    QWORD PTR [rsp+0x10],rbx
   140045725:	mov    QWORD PTR [rsp+0x18],rsi
   14004572a:	push   rdi
   14004572b:	push   r12
   14004572d:	push   r13
   14004572f:	sub    rsp,0xa0
   140045736:	lea    rcx,[rsp+0x30]
   14004573b:	call   QWORD PTR [rip+0x1eaef]        # 0x140064230
   140045741:	nop
   140045742:	call   QWORD PTR [rip+0x1eae0]        # 0x140064228
   140045748:	mov    rcx,rax
   14004574b:	xor    edx,edx
   14004574d:	mov    r8d,0x94
   140045753:	call   QWORD PTR [rip+0x1eac7]        # 0x140064220
   140045759:	mov    rbx,rax
   14004575c:	test   rax,rax
   14004575f:	jne    0x14004578d
   140045761:	cmp    DWORD PTR [rip+0x46eb8],0x1        # 0x14008c620
   140045768:	jne    0x14004576f
   14004576a:	call   0x14004a8e0
   14004576f:	mov    ecx,0x12
   140045774:	call   0x14004a6a0
   140045779:	mov    ecx,0xff
   14004577e:	call   0x1400481c0
   140045783:	mov    eax,0xff
   140045788:	jmp    0x1400459bb
   14004578d:	mov    DWORD PTR [rax],0x94
   140045793:	mov    rcx,rax
   140045796:	call   QWORD PTR [rip+0x1ecd4]        # 0x140064470
   14004579c:	test   eax,eax
   14004579e:	jne    0x1400457be
   1400457a0:	call   QWORD PTR [rip+0x1ea82]        # 0x140064228
   1400457a6:	mov    rcx,rax
   1400457a9:	mov    r8,rbx
   1400457ac:	xor    edx,edx
   1400457ae:	call   QWORD PTR [rip+0x1ea64]        # 0x140064218
   1400457b4:	mov    eax,0xff
   1400457b9:	jmp    0x1400459bb
   1400457be:	mov    r13d,DWORD PTR [rbx+0x10]
   1400457c2:	mov    esi,DWORD PTR [rbx+0x4]
   1400457c5:	mov    r12d,DWORD PTR [rbx+0x8]
   1400457c9:	mov    edi,DWORD PTR [rbx+0xc]
   1400457cc:	and    edi,0x7fff
   1400457d2:	call   QWORD PTR [rip+0x1ea50]        # 0x140064228
   1400457d8:	mov    rcx,rax
   1400457db:	mov    r8,rbx
   1400457de:	xor    edx,edx
   1400457e0:	call   QWORD PTR [rip+0x1ea32]        # 0x140064218
   1400457e6:	cmp    r13d,0x2
   1400457ea:	je     0x1400457f0
   1400457ec:	bts    edi,0xf
   1400457f0:	mov    eax,esi
   1400457f2:	shl    eax,0x8
   1400457f5:	add    eax,r12d
   1400457f8:	mov    DWORD PTR [rip+0x46e2d],r13d        # 0x14008c62c
   1400457ff:	mov    DWORD PTR [rip+0x46e2f],eax        # 0x14008c634
   140045805:	mov    DWORD PTR [rip+0x46e2d],esi        # 0x14008c638
   14004580b:	mov    DWORD PTR [rip+0x46e2a],r12d        # 0x14008c63c
   140045812:	mov    DWORD PTR [rip+0x46e18],edi        # 0x14008c630
   140045818:	cmp    WORD PTR [rip+0xfffffffffffba7df],0x5a4d        # 0x140000000
   140045821:	jne    0x140045882
   140045823:	movsxd rax,DWORD PTR [rip+0xfffffffffffba812]        # 0x14000003c
   14004582a:	lea    rdi,[rip+0xfffffffffffba7cf]        # 0x140000000
   140045831:	add    rax,rdi
   140045834:	cmp    DWORD PTR [rax],0x4550
   14004583a:	je     0x140045847
   14004583c:	xor    ebx,ebx
   14004583e:	mov    DWORD PTR [rsp+0xc0],ebx
   140045845:	jmp    0x140045892
   140045847:	cmp    WORD PTR [rax+0x18],0x20b
   14004584d:	je     0x14004585a
   14004584f:	xor    ebx,ebx
   140045851:	mov    DWORD PTR [rsp+0xc0],ebx
   140045858:	jmp    0x140045892
   14004585a:	cmp    DWORD PTR [rax+0x84],0xe
   140045861:	ja     0x14004586e
   140045863:	xor    ebx,ebx
   140045865:	mov    DWORD PTR [rsp+0xc0],ebx
   14004586c:	jmp    0x140045892
   14004586e:	xor    ebx,ebx
   140045870:	cmp    DWORD PTR [rax+0xf8],ebx
   140045876:	setne  bl
   140045879:	mov    DWORD PTR [rsp+0xc0],ebx
   140045880:	jmp    0x140045892
   140045882:	xor    ebx,ebx
   140045884:	mov    DWORD PTR [rsp+0xc0],ebx
   14004588b:	lea    rdi,[rip+0xfffffffffffba76e]        # 0x140000000
   140045892:	mov    ecx,0x1
   140045897:	call   0x14004c090
   14004589c:	test   eax,eax
   14004589e:	jne    0x1400458c2
   1400458a0:	cmp    DWORD PTR [rip+0x46d79],0x1        # 0x14008c620
   1400458a7:	jne    0x1400458ae
   1400458a9:	call   0x14004a8e0
   1400458ae:	mov    ecx,0x1c
   1400458b3:	call   0x14004a6a0
   1400458b8:	mov    ecx,0xff
   1400458bd:	call   0x1400481c0
   1400458c2:	call   0x14004bf70
   1400458c7:	test   eax,eax
   1400458c9:	jne    0x1400458ed
   1400458cb:	cmp    DWORD PTR [rip+0x46d4e],0x1        # 0x14008c620
   1400458d2:	jne    0x1400458d9
   1400458d4:	call   0x14004a8e0
   1400458d9:	mov    ecx,0x10
   1400458de:	call   0x14004a6a0
   1400458e3:	mov    ecx,0xff
   1400458e8:	call   0x1400481c0
   1400458ed:	call   0x14004b830
   1400458f2:	nop
   1400458f3:	call   0x14004b500
   1400458f8:	test   eax,eax
   1400458fa:	jns    0x140045906
   1400458fc:	mov    ecx,0x1b
   140045901:	call   0x140048190
   140045906:	call   0x14004b3e0
   14004590b:	mov    QWORD PTR [rip+0x49016],rax        # 0x14008e928
   140045912:	call   0x14004b1e0
   140045917:	mov    QWORD PTR [rip+0x46cfa],rax        # 0x14008c618
   14004591e:	call   0x14004af70
   140045923:	test   eax,eax
   140045925:	jns    0x140045931
   140045927:	mov    ecx,0x8
   14004592c:	call   0x140048190
   140045931:	call   0x14004ac40
   140045936:	test   eax,eax
   140045938:	jns    0x140045944
   14004593a:	mov    ecx,0x9
   14004593f:	call   0x140048190
   140045944:	mov    ecx,0x1
   140045949:	call   0x140048300
   14004594e:	test   eax,eax
   140045950:	je     0x140045959
   140045952:	mov    ecx,eax
   140045954:	call   0x140048190
   140045959:	call   0x14004abe0
   14004595e:	test   BYTE PTR [rsp+0x6c],0x1
   140045963:	je     0x14004596d
   140045965:	movzx  r9d,WORD PTR [rsp+0x70]
   14004596b:	jmp    0x140045973
   14004596d:	mov    r9d,0xa
   140045973:	mov    r8,rax
   140045976:	xor    edx,edx
   140045978:	mov    rcx,rdi
   14004597b:	call   0x1400633e8
   140045980:	mov    edi,eax
   140045982:	mov    DWORD PTR [rsp+0x20],eax
   140045986:	test   ebx,ebx
   140045988:	jne    0x140045991
   14004598a:	mov    ecx,eax
   14004598c:	call   0x140048510
   140045991:	call   0x140048530
   140045996:	jmp    0x1400459b2
   140045998:	mov    edi,eax
   14004599a:	cmp    DWORD PTR [rsp+0xc0],0x0
   1400459a2:	jne    0x1400459ac
   1400459a4:	mov    ecx,eax
   1400459a6:	call   0x140048520
   1400459ab:	int3   
   1400459ac:	call   0x140048540
   1400459b1:	nop
   1400459b2:	mov    eax,edi
   1400459b4:	jmp    0x1400459bb
   1400459b6:	mov    eax,0xff
   1400459bb:	lea    r11,[rsp+0xa0]
   1400459c3:	mov    rbx,QWORD PTR [r11+0x28]
   1400459c7:	mov    rsi,QWORD PTR [r11+0x30]
   1400459cb:	mov    rsp,r11
   1400459ce:	pop    r13
   1400459d0:	pop    r12
   1400459d2:	pop    rdi
   1400459d3:	ret    
   1400459d4:	int3   
   1400459d5:	int3   
   1400459d6:	int3   
   1400459d7:	int3   
   1400459d8:	int3   
   1400459d9:	int3   
   1400459da:	int3   
   1400459db:	int3   
   1400459dc:	int3   
   1400459dd:	int3   
   1400459de:	int3   
   1400459df:	int3   
   1400459e0:	rex push rbp
   1400459e2:	sub    rsp,0x20
   1400459e6:	mov    rbp,rdx
   1400459e9:	mov    rax,QWORD PTR [rcx]
   1400459ec:	mov    rdx,rcx
   1400459ef:	mov    ecx,DWORD PTR [rax]
   1400459f1:	call   0x14004a9d0
   1400459f6:	add    rsp,0x20
   1400459fa:	pop    rbp
   1400459fb:	ret    
   1400459fc:	int3   
   1400459fd:	int3   
   1400459fe:	int3   
   1400459ff:	int3   
   140045a00:	sub    rsp,0x28
   140045a04:	call   0x14004c0f0
   140045a09:	add    rsp,0x28
   140045a0d:	jmp    0x140045720
   140045a12:	int3   
   140045a13:	int3   
   140045a14:	int3   
   140045a15:	int3   
   140045a16:	int3   
   140045a17:	int3   
   140045a18:	int3   
   140045a19:	int3   
   140045a1a:	int3   
   140045a1b:	int3   
   140045a1c:	int3   
   140045a1d:	int3   
   140045a1e:	int3   
   140045a1f:	int3   
   140045a20:	mov    QWORD PTR [rsp+0x8],rbx
   140045a25:	push   rdi
   140045a26:	sub    rsp,0x20
   140045a2a:	lea    rax,[rip+0x28bd7]        # 0x14006e608
   140045a31:	mov    ebx,edx
   140045a33:	mov    rdi,rcx
   140045a36:	mov    QWORD PTR [rcx],rax
   140045a39:	call   0x14004c1b0
   140045a3e:	test   bl,0x1
   140045a41:	je     0x140045a4b
   140045a43:	mov    rcx,rdi
   140045a46:	call   0x14001ac50
   140045a4b:	mov    rax,rdi
   140045a4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140045a53:	add    rsp,0x20
   140045a57:	pop    rdi
   140045a58:	ret    
   140045a59:	int3   
   140045a5a:	int3   
   140045a5b:	int3   
   140045a5c:	int3   
   140045a5d:	int3   
   140045a5e:	int3   
   140045a5f:	int3   
   140045a60:	lea    r8,[rcx+0x11]
   140045a64:	add    rdx,0x11
   140045a68:	sub    r8,rdx
   140045a6b:	xchg   ax,ax
   140045a6d:	data16 xchg ax,ax
   140045a70:	movzx  ecx,BYTE PTR [rdx]
   140045a73:	movzx  eax,BYTE PTR [rdx+r8*1]
   140045a78:	sub    ecx,eax
   140045a7a:	jne    0x140045a84
   140045a7c:	add    rdx,0x1
   140045a80:	test   eax,eax
   140045a82:	jne    0x140045a70
   140045a84:	test   ecx,ecx
   140045a86:	sete   al
   140045a89:	ret    
   140045a8a:	int3   
   140045a8b:	int3   
   140045a8c:	int3   
   140045a8d:	int3   
   140045a8e:	int3   
   140045a8f:	int3   
   140045a90:	mov    QWORD PTR [rsp+0x10],rbx
   140045a95:	mov    DWORD PTR [rsp+0x18],r8d
   140045a9a:	mov    QWORD PTR [rsp+0x8],rcx
   140045a9f:	push   rsi
   140045aa0:	push   rdi
   140045aa1:	push   r12
   140045aa3:	sub    rsp,0x40
   140045aa7:	mov    rsi,r9
   140045aaa:	mov    edi,r8d
   140045aad:	mov    r12,rdx
   140045ab0:	mov    rbx,rcx
   140045ab3:	sub    edi,0x1
   140045ab6:	mov    DWORD PTR [rsp+0x70],edi
   140045aba:	js     0x140045acb
   140045abc:	sub    rbx,r12
   140045abf:	mov    QWORD PTR [rsp+0x60],rbx
   140045ac4:	mov    rcx,rbx
   140045ac7:	call   rsi
   140045ac9:	jmp    0x140045ab3
   140045acb:	jmp    0x140045acd
   140045acd:	mov    rbx,QWORD PTR [rsp+0x68]
   140045ad2:	add    rsp,0x40
   140045ad6:	pop    r12
   140045ad8:	pop    rdi
   140045ad9:	pop    rsi
   140045ada:	ret    
   140045adb:	int3   
   140045adc:	int3   
   140045add:	int3   
   140045ade:	int3   
   140045adf:	int3   
   140045ae0:	rex push rbp
   140045ae2:	sub    rsp,0x20
   140045ae6:	mov    rbp,rdx
   140045ae9:	mov    QWORD PTR [rbp+0x38],rcx
   140045aed:	mov    QWORD PTR [rbp+0x28],rcx
   140045af1:	mov    rax,QWORD PTR [rbp+0x28]
   140045af5:	mov    rcx,QWORD PTR [rax]
   140045af8:	mov    QWORD PTR [rbp+0x30],rcx
   140045afc:	mov    rax,QWORD PTR [rbp+0x30]
   140045b00:	cmp    DWORD PTR [rax],0xe06d7363
   140045b06:	je     0x140045b14
   140045b08:	mov    DWORD PTR [rbp+0x20],0x0
   140045b0f:	mov    eax,DWORD PTR [rbp+0x20]
   140045b12:	jmp    0x140045b19
   140045b14:	call   0x14004c250
   140045b19:	add    rsp,0x20
   140045b1d:	pop    rbp
   140045b1e:	ret    
   140045b1f:	int3   
   140045b20:	mov    QWORD PTR [rsp+0x20],r9
   140045b25:	mov    DWORD PTR [rsp+0x18],r8d
   140045b2a:	mov    QWORD PTR [rsp+0x10],rdx
   140045b2f:	push   rbx
   140045b30:	push   rsi
   140045b31:	push   rdi
   140045b32:	push   r12
   140045b34:	sub    rsp,0x38
   140045b38:	mov    r12,r9
   140045b3b:	movsxd rdi,r8d
   140045b3e:	mov    rsi,rdx
   140045b41:	mov    DWORD PTR [rsp+0x20],0x0
   140045b49:	mov    rbx,rdi
   140045b4c:	imul   rbx,rdx
   140045b50:	add    rbx,rcx
   140045b53:	mov    QWORD PTR [rsp+0x60],rbx
   140045b58:	data16 data16 xchg ax,ax
   140045b5c:	data16 data16 xchg ax,ax
   140045b60:	sub    edi,0x1
   140045b63:	mov    DWORD PTR [rsp+0x70],edi
   140045b67:	js     0x140045b79
   140045b69:	sub    rbx,rsi
   140045b6c:	mov    QWORD PTR [rsp+0x60],rbx
   140045b71:	mov    rcx,rbx
   140045b74:	call   r12
   140045b77:	jmp    0x140045b60
   140045b79:	mov    DWORD PTR [rsp+0x20],0x1
   140045b81:	add    rsp,0x38
   140045b85:	pop    r12
   140045b87:	pop    rdi
   140045b88:	pop    rsi
   140045b89:	pop    rbx
   140045b8a:	ret    
   140045b8b:	int3   
   140045b8c:	int3   
   140045b8d:	int3   
   140045b8e:	int3   
   140045b8f:	int3   
   140045b90:	rex push rbp
   140045b92:	sub    rsp,0x20
   140045b96:	mov    rbp,rdx
   140045b99:	cmp    DWORD PTR [rbp+0x20],0x0
   140045b9d:	jne    0x140045bb4
   140045b9f:	mov    r9,QWORD PTR [rbp+0x78]
   140045ba3:	mov    r8d,DWORD PTR [rbp+0x70]
   140045ba7:	mov    rdx,QWORD PTR [rbp+0x68]
   140045bab:	mov    rcx,QWORD PTR [rbp+0x60]
   140045baf:	call   0x140045a90
   140045bb4:	add    rsp,0x20
   140045bb8:	pop    rbp
   140045bb9:	ret    
   140045bba:	int3   
   140045bbb:	int3   
   140045bbc:	int3   
   140045bbd:	int3   
   140045bbe:	int3   
   140045bbf:	int3   
   140045bc0:	mov    QWORD PTR [rsp+0x20],rbp
   140045bc5:	push   rdi
   140045bc6:	push   r12
   140045bc8:	push   r13
   140045bca:	push   r14
   140045bcc:	push   r15
   140045bce:	sub    rsp,0x20
   140045bd2:	movsxd rdi,DWORD PTR [r8+0xc]
   140045bd6:	mov    r15,rcx
   140045bd9:	mov    rcx,r8
   140045bdc:	mov    r12,r9
   140045bdf:	mov    r14,r8
   140045be2:	mov    r13,rdx
   140045be5:	call   0x14004c360
   140045bea:	test   edi,edi
   140045bec:	mov    r10,QWORD PTR [r15]
   140045bef:	mov    QWORD PTR [r12],r10
   140045bf3:	mov    ebp,eax
   140045bf5:	je     0x140045cb9
   140045bfb:	lea    rcx,[rdi+rdi*4]
   140045bff:	mov    QWORD PTR [rsp+0x58],rbx
   140045c04:	mov    QWORD PTR [rsp+0x60],rsi
   140045c09:	lea    rsi,[rcx*4-0x14]
   140045c11:	data16 xchg ax,ax
   140045c14:	data16 data16 xchg ax,ax
   140045c18:	data16 data16 xchg ax,ax
   140045c1c:	data16 data16 xchg ax,ax
   140045c20:	movsxd rbx,DWORD PTR [r14+0x10]
   140045c24:	add    rbx,QWORD PTR [r13+0x8]
   140045c28:	add    rbx,rsi
   140045c2b:	cmp    ebp,DWORD PTR [rbx+0x4]
   140045c2e:	jle    0x140045c7a
   140045c30:	cmp    ebp,DWORD PTR [rbx+0x8]
   140045c33:	jg     0x140045c7a
   140045c35:	mov    rcx,QWORD PTR [r13+0x0]
   140045c39:	lea    rdx,[rsp+0x50]
   140045c3e:	xor    r8d,r8d
   140045c41:	call   0x140062cf2
   140045c46:	movsxd r10,DWORD PTR [rbx+0x10]
   140045c4a:	mov    r8d,DWORD PTR [rbx+0xc]
   140045c4e:	add    r10,QWORD PTR [rsp+0x50]
   140045c53:	mov    r9d,DWORD PTR [rax]
   140045c56:	xor    edx,edx
   140045c58:	test   r8d,r8d
   140045c5b:	je     0x140045c75
   140045c5d:	lea    rcx,[r10+0xc]
   140045c61:	movsxd rax,DWORD PTR [rcx]
   140045c64:	cmp    rax,r9
   140045c67:	je     0x140045c75
   140045c69:	add    edx,0x1
   140045c6c:	add    rcx,0x14
   140045c70:	cmp    edx,r8d
   140045c73:	jb     0x140045c61
   140045c75:	cmp    edx,r8d
   140045c78:	jb     0x140045c85
   140045c7a:	sub    rsi,0x14
   140045c7e:	add    edi,0xffffffff
   140045c81:	jne    0x140045c20
   140045c83:	jmp    0x140045c99
   140045c85:	mov    rax,QWORD PTR [r15]
   140045c88:	lea    rcx,[rdx+rdx*4]
   140045c8c:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   140045c91:	mov    rcx,QWORD PTR [rcx+rax*1]
   140045c95:	mov    QWORD PTR [r12],rcx
   140045c99:	mov    rbx,QWORD PTR [rsp+0x58]
   140045c9e:	mov    rsi,QWORD PTR [rsp+0x60]
   140045ca3:	mov    rax,r12
   140045ca6:	mov    rbp,QWORD PTR [rsp+0x68]
   140045cab:	add    rsp,0x20
   140045caf:	pop    r15
   140045cb1:	pop    r14
   140045cb3:	pop    r13
   140045cb5:	pop    r12
   140045cb7:	pop    rdi
   140045cb8:	ret    
   140045cb9:	mov    rax,r12
   140045cbc:	mov    rbp,QWORD PTR [rsp+0x68]
   140045cc1:	add    rsp,0x20
   140045cc5:	pop    r15
   140045cc7:	pop    r14
   140045cc9:	pop    r13
   140045ccb:	pop    r12
   140045ccd:	pop    rdi
   140045cce:	ret    
   140045ccf:	int3   
   140045cd0:	sub    rsp,0x28
   140045cd4:	call   0x14004bd60
   140045cd9:	mov    rax,QWORD PTR [rax+0x128]
   140045ce0:	add    rsp,0x28
   140045ce4:	ret    
   140045ce5:	int3   
   140045ce6:	int3   
   140045ce7:	int3   
   140045ce8:	int3   
   140045ce9:	int3   
   140045cea:	int3   
   140045ceb:	int3   
   140045cec:	int3   
   140045ced:	int3   
   140045cee:	int3   
   140045cef:	int3   
   140045cf0:	sub    rsp,0x28
   140045cf4:	call   0x14004bd60
   140045cf9:	mov    rax,QWORD PTR [rax+0x130]
   140045d00:	add    rsp,0x28
   140045d04:	ret    
   140045d05:	int3   
   140045d06:	int3   
   140045d07:	int3   
   140045d08:	int3   
   140045d09:	int3   
   140045d0a:	int3   
   140045d0b:	int3   
   140045d0c:	int3   
   140045d0d:	int3   
   140045d0e:	int3   
   140045d0f:	int3   
   140045d10:	rex push rbx
   140045d12:	sub    rsp,0x20
   140045d16:	mov    rbx,rcx
   140045d19:	call   0x14004bd60
   140045d1e:	mov    QWORD PTR [rax+0x128],rbx
   140045d25:	add    rsp,0x20
   140045d29:	pop    rbx
   140045d2a:	ret    
   140045d2b:	int3   
   140045d2c:	int3   
   140045d2d:	int3   
   140045d2e:	int3   
   140045d2f:	int3   
   140045d30:	rex push rbx
   140045d32:	sub    rsp,0x20
   140045d36:	mov    rbx,rcx
   140045d39:	call   0x14004bd60
   140045d3e:	mov    QWORD PTR [rax+0x130],rbx
   140045d45:	add    rsp,0x20
   140045d49:	pop    rbx
   140045d4a:	ret    
   140045d4b:	int3   
   140045d4c:	int3   
   140045d4d:	int3   
   140045d4e:	int3   
   140045d4f:	int3   
   140045d50:	mov    QWORD PTR [rsp+0x10],rbx
   140045d55:	mov    QWORD PTR [rsp+0x20],rbp
   140045d5a:	push   rsi
   140045d5b:	push   rdi
   140045d5c:	push   r12
   140045d5e:	push   r13
   140045d60:	push   r14
   140045d62:	sub    rsp,0x20
   140045d66:	movsxd rdi,DWORD PTR [r8+0xc]
   140045d6a:	mov    r14,rcx
   140045d6d:	mov    rcx,r8
   140045d70:	mov    rbp,r8
   140045d73:	mov    r13,rdx
   140045d76:	call   0x14004c360
   140045d7b:	test   edi,edi
   140045d7d:	mov    r9,QWORD PTR [r14]
   140045d80:	mov    r12d,eax
   140045d83:	mov    QWORD PTR [rsp+0x50],r9
   140045d88:	je     0x140045e1c
   140045d8e:	lea    rcx,[rdi+rdi*4]
   140045d92:	lea    rsi,[rcx*4-0x14]
   140045d9a:	data16 xchg ax,ax
   140045d9d:	data16 xchg ax,ax
   140045da0:	movsxd rbx,DWORD PTR [rbp+0x10]
   140045da4:	add    rbx,QWORD PTR [r13+0x8]
   140045da8:	add    rbx,rsi
   140045dab:	cmp    r12d,DWORD PTR [rbx+0x4]
   140045daf:	jle    0x140045dfc
   140045db1:	cmp    r12d,DWORD PTR [rbx+0x8]
   140045db5:	jg     0x140045dfc
   140045db7:	mov    rcx,QWORD PTR [r13+0x0]
   140045dbb:	lea    rdx,[rsp+0x60]
   140045dc0:	xor    r8d,r8d
   140045dc3:	call   0x140062cf2
   140045dc8:	movsxd r10,DWORD PTR [rbx+0x10]
   140045dcc:	mov    r8d,DWORD PTR [rbx+0xc]
   140045dd0:	add    r10,QWORD PTR [rsp+0x60]
   140045dd5:	mov    r9d,DWORD PTR [rax]
   140045dd8:	xor    edx,edx
   140045dda:	test   r8d,r8d
   140045ddd:	je     0x140045df7
   140045ddf:	lea    rcx,[r10+0xc]
   140045de3:	movsxd rax,DWORD PTR [rcx]
   140045de6:	cmp    rax,r9
   140045de9:	je     0x140045df7
   140045deb:	add    edx,0x1
   140045dee:	add    rcx,0x14
   140045df2:	cmp    edx,r8d
   140045df5:	jb     0x140045de3
   140045df7:	cmp    edx,r8d
   140045dfa:	jb     0x140045e07
   140045dfc:	sub    rsi,0x14
   140045e00:	add    edi,0xffffffff
   140045e03:	jne    0x140045da0
   140045e05:	jmp    0x140045e1c
   140045e07:	mov    rax,QWORD PTR [r14]
   140045e0a:	lea    rcx,[rdx+rdx*4]
   140045e0e:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   140045e13:	mov    rcx,QWORD PTR [rcx+rax*1]
   140045e17:	mov    QWORD PTR [rsp+0x50],rcx
   140045e1c:	mov    rdx,r13
   140045e1f:	mov    rcx,rbp
   140045e22:	call   0x14004c360
   140045e27:	movsxd rbx,DWORD PTR [rbp+0xc]
   140045e2b:	test   ebx,ebx
   140045e2d:	mov    esi,eax
   140045e2f:	je     0x140045e68
   140045e31:	lea    rcx,[rbx+rbx*4]
   140045e35:	lea    rdi,[rcx*4-0x14]
   140045e3d:	data16 xchg ax,ax
   140045e40:	call   0x14004bd60
   140045e45:	movsxd rcx,DWORD PTR [rbp+0x10]
   140045e49:	mov    rdx,QWORD PTR [rax+0x128]
   140045e50:	add    rdx,rcx
   140045e53:	cmp    esi,DWORD PTR [rdx+rdi*1+0x4]
   140045e57:	jle    0x140045e5f
   140045e59:	cmp    esi,DWORD PTR [rdx+rdi*1+0x8]
   140045e5d:	jle    0x140045e93
   140045e5f:	sub    rdi,0x14
   140045e63:	add    ebx,0xffffffff
   140045e66:	jne    0x140045e40
   140045e68:	or     r9d,0xffffffff
   140045e6c:	lea    rcx,[rsp+0x50]
   140045e71:	mov    r8,rbp
   140045e74:	mov    rdx,r13
   140045e77:	call   0x14004c5b0
   140045e7c:	mov    rbx,QWORD PTR [rsp+0x58]
   140045e81:	mov    rbp,QWORD PTR [rsp+0x68]
   140045e86:	add    rsp,0x20
   140045e8a:	pop    r14
   140045e8c:	pop    r13
   140045e8e:	pop    r12
   140045e90:	pop    rdi
   140045e91:	pop    rsi
   140045e92:	ret    
   140045e93:	mov    r9d,DWORD PTR [rdx+rdi*1+0x4]
   140045e98:	jmp    0x140045e6c
   140045e9a:	int3   
   140045e9b:	int3   
   140045e9c:	int3   
   140045e9d:	int3   
   140045e9e:	int3   
   140045e9f:	int3   
   140045ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140045ea5:	mov    QWORD PTR [rsp+0x18],rsi
   140045eaa:	push   rdi
   140045eab:	sub    rsp,0x40
   140045eaf:	mov    rbx,r9
   140045eb2:	mov    rdi,r8
   140045eb5:	mov    rsi,rcx
   140045eb8:	mov    QWORD PTR [rsp+0x50],rdx
   140045ebd:	call   0x14004bd60
   140045ec2:	mov    rdx,QWORD PTR [rbx+0x8]
   140045ec6:	mov    QWORD PTR [rax+0x128],rdx
   140045ecd:	call   0x14004bd60
   140045ed2:	mov    rdx,QWORD PTR [rsi+0x38]
   140045ed6:	mov    QWORD PTR [rax+0x130],rdx
   140045edd:	call   0x14004bd60
   140045ee2:	mov    rdx,QWORD PTR [rbx+0x38]
   140045ee6:	mov    r8d,DWORD PTR [rdx]
   140045ee9:	lea    rdx,[rsp+0x50]
   140045eee:	mov    r9,rbx
   140045ef1:	add    r8,QWORD PTR [rax+0x128]
   140045ef8:	xor    eax,eax
   140045efa:	mov    rcx,rsi
   140045efd:	mov    DWORD PTR [rsp+0x38],eax
   140045f01:	mov    QWORD PTR [rsp+0x30],rax
   140045f06:	mov    DWORD PTR [rsp+0x28],eax
   140045f0a:	mov    QWORD PTR [rsp+0x20],r8
   140045f0f:	mov    r8,rdi
   140045f12:	call   0x14004dab0
   140045f17:	mov    rbx,QWORD PTR [rsp+0x58]
   140045f1c:	mov    rsi,QWORD PTR [rsp+0x60]
   140045f21:	add    rsp,0x40
   140045f25:	pop    rdi
   140045f26:	ret    
   140045f27:	int3   
   140045f28:	int3   
   140045f29:	int3   
   140045f2a:	int3   
   140045f2b:	int3   
   140045f2c:	int3   
   140045f2d:	int3   
   140045f2e:	int3   
   140045f2f:	int3   
   140045f30:	mov    QWORD PTR [rsp+0x8],rbx
   140045f35:	mov    QWORD PTR [rsp+0x10],rbp
   140045f3a:	mov    QWORD PTR [rsp+0x18],rsi
   140045f3f:	push   rdi
   140045f40:	sub    rsp,0x40
   140045f44:	mov    rsi,r9
   140045f47:	mov    rbp,r8
   140045f4a:	mov    rbx,rdx
   140045f4d:	mov    rdi,rcx
   140045f50:	call   0x14004bd60
   140045f55:	mov    QWORD PTR [rax+0x138],rbx
   140045f5c:	mov    rbx,QWORD PTR [rdi]
   140045f5f:	call   0x14004bd60
   140045f64:	mov    rdx,QWORD PTR [rbx+0x38]
   140045f68:	mov    rcx,QWORD PTR [rsp+0x78]
   140045f6d:	mov    r9,QWORD PTR [rsp+0x70]
   140045f72:	mov    DWORD PTR [rsp+0x38],0x1
   140045f7a:	mov    QWORD PTR [rax+0x130],rdx
   140045f81:	xor    ebx,ebx
   140045f83:	mov    QWORD PTR [rsp+0x30],rbx
   140045f88:	mov    DWORD PTR [rsp+0x28],ebx
   140045f8c:	mov    QWORD PTR [rsp+0x20],rcx
   140045f91:	mov    rcx,QWORD PTR [rdi]
   140045f94:	mov    r8,rsi
   140045f97:	mov    rdx,rbp
   140045f9a:	call   0x14004dab0
   140045f9f:	call   0x14004bd60
   140045fa4:	mov    rcx,QWORD PTR [rsp+0x80]
   140045fac:	mov    rbp,QWORD PTR [rsp+0x58]
   140045fb1:	mov    rsi,QWORD PTR [rsp+0x60]
   140045fb6:	mov    QWORD PTR [rax+0x138],rbx
   140045fbd:	lea    eax,[rbx+0x1]
   140045fc0:	mov    rbx,QWORD PTR [rsp+0x50]
   140045fc5:	mov    DWORD PTR [rcx],0x1
   140045fcb:	add    rsp,0x40
   140045fcf:	pop    rdi
   140045fd0:	ret    
   140045fd1:	int3   
   140045fd2:	int3   
   140045fd3:	int3   
   140045fd4:	int3   
   140045fd5:	int3   
   140045fd6:	int3   
   140045fd7:	int3   
   140045fd8:	int3   
   140045fd9:	int3   
   140045fda:	int3   
   140045fdb:	int3   
   140045fdc:	int3   
   140045fdd:	int3   
   140045fde:	int3   
   140045fdf:	int3   
   140045fe0:	mov    rax,rsp
   140045fe3:	mov    QWORD PTR [rax+0x20],r9
   140045fe7:	mov    QWORD PTR [rax+0x18],r8
   140045feb:	mov    QWORD PTR [rax+0x10],rdx
   140045fef:	mov    QWORD PTR [rax+0x8],rcx
   140045ff3:	push   rbx
   140045ff4:	sub    rsp,0x60
   140045ff8:	mov    rbx,rcx
   140045ffb:	mov    DWORD PTR [rax-0x28],0x0
   140046002:	mov    QWORD PTR [rax-0x20],rcx
   140046006:	mov    QWORD PTR [rax-0x18],r8
   14004600a:	call   0x14004bd60
   14004600f:	mov    r8,QWORD PTR [rax+0xe0]
   140046016:	lea    rdx,[rsp+0x48]
   14004601b:	mov    ecx,DWORD PTR [rbx]
   14004601d:	call   r8
   140046020:	mov    DWORD PTR [rsp+0x40],0x0
   140046028:	jmp    0x14004602a
   14004602a:	mov    eax,DWORD PTR [rsp+0x40]
   14004602e:	add    rsp,0x60
   140046032:	pop    rbx
   140046033:	ret    
   140046034:	int3   
   140046035:	int3   
   140046036:	int3   
   140046037:	int3   
   140046038:	int3   
   140046039:	int3   
   14004603a:	int3   
   14004603b:	int3   
   14004603c:	int3   
   14004603d:	int3   
   14004603e:	int3   
   14004603f:	int3   
   140046040:	rex push rbp
   140046042:	sub    rsp,0x40
   140046046:	mov    rbp,rdx
   140046049:	lea    rax,[rbp+0x40]
   14004604d:	mov    QWORD PTR [rsp+0x30],rax
   140046052:	mov    rax,QWORD PTR [rbp+0x90]
   140046059:	mov    QWORD PTR [rsp+0x28],rax
   14004605e:	mov    rax,QWORD PTR [rbp+0x88]
   140046065:	mov    QWORD PTR [rsp+0x20],rax
   14004606a:	mov    r9,QWORD PTR [rbp+0x80]
   140046071:	mov    r8,QWORD PTR [rbp+0x78]
   140046075:	mov    rdx,QWORD PTR [rbp+0x70]
   140046079:	call   0x140045f30
   14004607e:	add    rsp,0x40
   140046082:	pop    rbp
   140046083:	ret    
   140046084:	int3   
   140046085:	int3   
   140046086:	int3   
   140046087:	int3   
   140046088:	int3   
   140046089:	int3   
   14004608a:	int3   
   14004608b:	int3   
   14004608c:	int3   
   14004608d:	int3   
   14004608e:	int3   
   14004608f:	int3   
   140046090:	mov    QWORD PTR [rsp+0x8],rbx
   140046095:	mov    QWORD PTR [rsp+0x10],rbp
   14004609a:	mov    QWORD PTR [rsp+0x18],rsi
   14004609f:	push   rdi
   1400460a0:	push   r12
   1400460a2:	push   r13
   1400460a4:	sub    rsp,0x20
   1400460a8:	movsxd rsi,DWORD PTR [rdx+0xc]
   1400460ac:	mov    r13,QWORD PTR [rsp+0x70]
   1400460b1:	mov    r12,rdx
   1400460b4:	mov    rcx,r12
   1400460b7:	mov    rdx,r13
   1400460ba:	mov    ebp,r9d
   1400460bd:	xor    edi,edi
   1400460bf:	call   0x14004c360
   1400460c4:	test   esi,esi
   1400460c6:	mov    ebx,eax
   1400460c8:	jne    0x1400460cf
   1400460ca:	call   0x14004c280
   1400460cf:	test   esi,esi
   1400460d1:	mov    r10,QWORD PTR [rsp+0x68]
   1400460d6:	mov    r9,QWORD PTR [rsp+0x60]
   1400460db:	mov    DWORD PTR [r10],0xffffffff
   1400460e2:	mov    DWORD PTR [r9],0xffffffff
   1400460e9:	mov    r8d,esi
   1400460ec:	je     0x140046117
   1400460ee:	movsxd rcx,DWORD PTR [r12+0x10]
   1400460f3:	lea    rax,[rsi+rsi*4]
   1400460f7:	lea    rcx,[rcx+rax*4]
   1400460fb:	mov    rax,QWORD PTR [r13+0x8]
   1400460ff:	lea    rdx,[rcx+rax*1-0xc]
   140046104:	cmp    ebx,DWORD PTR [rdx-0x4]
   140046107:	jle    0x14004610d
   140046109:	cmp    ebx,DWORD PTR [rdx]
   14004610b:	jle    0x140046117
   14004610d:	sub    rdx,0x14
   140046111:	add    r8d,0xffffffff
   140046115:	jne    0x140046104
   140046117:	test   r8d,r8d
   14004611a:	je     0x140046131
   14004611c:	lea    eax,[r8-0x1]
   140046120:	lea    rdx,[rax+rax*4]
   140046124:	movsxd rax,DWORD PTR [r12+0x10]
   140046129:	lea    rdi,[rax+rdx*4]
   14004612d:	add    rdi,QWORD PTR [r13+0x8]
   140046131:	xor    edx,edx
   140046133:	test   esi,esi
   140046135:	je     0x14004619e
   140046137:	xor    r8d,r8d
   14004613a:	data16 xchg ax,ax
   14004613d:	data16 xchg ax,ax
   140046140:	movsxd rcx,DWORD PTR [r12+0x10]
   140046145:	add    rcx,QWORD PTR [r13+0x8]
   140046149:	add    rcx,r8
   14004614c:	test   rdi,rdi
   14004614f:	je     0x140046160
   140046151:	mov    eax,DWORD PTR [rdi+0x4]
   140046154:	cmp    DWORD PTR [rcx],eax
   140046156:	jle    0x140046178
   140046158:	mov    eax,DWORD PTR [rdi+0x8]
   14004615b:	cmp    DWORD PTR [rcx+0x4],eax
   14004615e:	jg     0x140046178
   140046160:	cmp    ebp,DWORD PTR [rcx]
   140046162:	jl     0x140046178
   140046164:	cmp    ebp,DWORD PTR [rcx+0x4]
   140046167:	jg     0x140046178
   140046169:	cmp    DWORD PTR [r9],0xffffffff
   14004616d:	jne    0x140046172
   14004616f:	mov    DWORD PTR [r9],edx
   140046172:	lea    eax,[rdx+0x1]
   140046175:	mov    DWORD PTR [r10],eax
   140046178:	add    edx,0x1
   14004617b:	add    r8,0x14
   14004617f:	cmp    edx,esi
   140046181:	jb     0x140046140
   140046183:	mov    eax,DWORD PTR [r9]
   140046186:	cmp    eax,0xffffffff
   140046189:	je     0x14004619e
   14004618b:	lea    rcx,[rax+rax*4]
   14004618f:	movsxd rax,DWORD PTR [r12+0x10]
   140046194:	lea    rax,[rax+rcx*4]
   140046198:	add    rax,QWORD PTR [r13+0x8]
   14004619c:	jmp    0x1400461ae
   14004619e:	mov    DWORD PTR [r9],0x0
   1400461a5:	xor    eax,eax
   1400461a7:	mov    DWORD PTR [r10],0x0
   1400461ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400461b3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400461b8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400461bd:	add    rsp,0x20
   1400461c1:	pop    r13
   1400461c3:	pop    r12
   1400461c5:	pop    rdi
   1400461c6:	ret    
   1400461c7:	int3   
   1400461c8:	int3   
   1400461c9:	int3   
   1400461ca:	int3   
   1400461cb:	int3   
   1400461cc:	int3   
   1400461cd:	int3   
   1400461ce:	int3   
   1400461cf:	int3   
   1400461d0:	rex push rbx
   1400461d2:	sub    rsp,0x20
   1400461d6:	mov    rbx,rcx
   1400461d9:	mov    QWORD PTR [rcx],rdx
   1400461dc:	call   0x14004bd60
   1400461e1:	cmp    rbx,QWORD PTR [rax+0x120]
   1400461e8:	jae    0x1400461f8
   1400461ea:	call   0x14004bd60
   1400461ef:	mov    rcx,QWORD PTR [rax+0x120]
   1400461f6:	jmp    0x1400461fa
   1400461f8:	xor    ecx,ecx
   1400461fa:	mov    QWORD PTR [rbx+0x8],rcx
   1400461fe:	call   0x14004bd60
   140046203:	mov    QWORD PTR [rax+0x120],rbx
   14004620a:	mov    rax,rbx
   14004620d:	add    rsp,0x20
   140046211:	pop    rbx
   140046212:	ret    
   140046213:	int3   
   140046214:	int3   
   140046215:	int3   
   140046216:	int3   
   140046217:	int3   
   140046218:	int3   
   140046219:	int3   
   14004621a:	int3   
   14004621b:	int3   
   14004621c:	int3   
   14004621d:	int3   
   14004621e:	int3   
   14004621f:	int3   
   140046220:	rex push rbx
   140046222:	sub    rsp,0x20
   140046226:	mov    rbx,rcx
   140046229:	call   0x14004bd60
   14004622e:	mov    rdx,QWORD PTR [rax+0x120]
   140046235:	test   rdx,rdx
   140046238:	je     0x14004624e
   14004623a:	data16 xchg ax,ax
   14004623d:	data16 xchg ax,ax
   140046240:	cmp    QWORD PTR [rdx],rbx
   140046243:	je     0x140046259
   140046245:	mov    rdx,QWORD PTR [rdx+0x8]
   140046249:	test   rdx,rdx
   14004624c:	jne    0x140046240
   14004624e:	mov    eax,0x1
   140046253:	add    rsp,0x20
   140046257:	pop    rbx
   140046258:	ret    
   140046259:	xor    eax,eax
   14004625b:	add    rsp,0x20
   14004625f:	pop    rbx
   140046260:	ret    
   140046261:	int3   
   140046262:	int3   
   140046263:	int3   
   140046264:	int3   
   140046265:	int3   
   140046266:	int3   
   140046267:	int3   
   140046268:	int3   
   140046269:	int3   
   14004626a:	int3   
   14004626b:	int3   
   14004626c:	int3   
   14004626d:	int3   
   14004626e:	int3   
   14004626f:	int3   
   140046270:	mov    QWORD PTR [rsp+0x8],rbx
   140046275:	push   rdi
   140046276:	sub    rsp,0x20
   14004627a:	mov    rdi,rcx
   14004627d:	call   0x14004bd60
   140046282:	cmp    rdi,QWORD PTR [rax+0x120]
   140046289:	je     0x140046290
   14004628b:	call   0x14004c280
   140046290:	call   0x14004bd60
   140046295:	mov    rbx,QWORD PTR [rax+0x120]
   14004629c:	test   rbx,rbx
   14004629f:	je     0x1400462af
   1400462a1:	cmp    rdi,rbx
   1400462a4:	je     0x1400462be
   1400462a6:	mov    rbx,QWORD PTR [rbx+0x8]
   1400462aa:	test   rbx,rbx
   1400462ad:	jne    0x1400462a1
   1400462af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400462b4:	add    rsp,0x20
   1400462b8:	pop    rdi
   1400462b9:	jmp    0x14004c280
   1400462be:	call   0x14004bd60
   1400462c3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400462c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400462cc:	mov    QWORD PTR [rax+0x120],rcx
   1400462d3:	add    rsp,0x20
   1400462d7:	pop    rdi
   1400462d8:	ret    
   1400462d9:	int3   
   1400462da:	int3   
   1400462db:	int3   
   1400462dc:	int3   
   1400462dd:	int3   
   1400462de:	int3   
   1400462df:	int3   
   1400462e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400462e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400462ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400462ef:	push   rdi
   1400462f0:	sub    rsp,0x5a0
   1400462f7:	mov    rsi,rdx
   1400462fa:	mov    rbp,rcx
   1400462fd:	mov    rdi,r8
   140046300:	lea    rcx,[rsp+0x30]
   140046305:	lea    rdx,[rip+0x28304]        # 0x14006e610
   14004630c:	mov    r8d,0x98
   140046312:	mov    rbx,r9
   140046315:	call   0x1400478c0
   14004631a:	mov    rax,QWORD PTR [rsp+0x5d0]
   140046322:	mov    rdx,QWORD PTR [rsp+0x5e8]
   14004632a:	mov    rcx,QWORD PTR [rbp+0x0]
   14004632e:	mov    QWORD PTR [rsp+0x60],rax
   140046333:	movsxd rax,DWORD PTR [rsp+0x5d8]
   14004633b:	lea    r11,[rip+0x688e]        # 0x14004cbd0
   140046342:	lea    r8,[rsp+0x30]
   140046347:	mov    QWORD PTR [rsp+0x68],rax
   14004634c:	mov    rax,QWORD PTR [rsp+0x5e0]
   140046354:	xor    r9d,r9d
   140046357:	mov    QWORD PTR [rsp+0x78],rax
   14004635c:	movzx  eax,BYTE PTR [rsp+0x5f0]
   140046364:	mov    QWORD PTR [rsp+0x50],r11
   140046369:	mov    QWORD PTR [rsp+0x88],rax
   140046371:	mov    rax,QWORD PTR [rdx+0x40]
   140046375:	mov    rdx,QWORD PTR [rdx]
   140046378:	mov    QWORD PTR [rsp+0x28],rax
   14004637d:	lea    rax,[rsp+0xd0]
   140046385:	mov    QWORD PTR [rsp+0x58],rbx
   14004638a:	mov    QWORD PTR [rsp+0x70],rdi
   14004638f:	mov    QWORD PTR [rsp+0x80],rsi
   140046397:	mov    QWORD PTR [rsp+0x90],0x19930520
   1400463a3:	mov    QWORD PTR [rsp+0x20],rax
   1400463a8:	call   0x140062cf8
   1400463ad:	lea    r11,[rsp+0x5a0]
   1400463b5:	mov    rbx,QWORD PTR [r11+0x10]
   1400463b9:	mov    rbp,QWORD PTR [r11+0x18]
   1400463bd:	mov    rsi,QWORD PTR [r11+0x20]
   1400463c1:	mov    rsp,r11
   1400463c4:	pop    rdi
   1400463c5:	ret    
   1400463c6:	int3   
   1400463c7:	int3   
   1400463c8:	int3   
   1400463c9:	int3   
   1400463ca:	int3   
   1400463cb:	int3   
   1400463cc:	int3   
   1400463cd:	int3   
   1400463ce:	int3   
   1400463cf:	int3   
   1400463d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400463d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400463da:	mov    QWORD PTR [rsp+0x18],rsi
   1400463df:	mov    QWORD PTR [rsp+0x20],rdi
   1400463e4:	push   r12
   1400463e6:	sub    rsp,0x20
   1400463ea:	mov    rbx,QWORD PTR [r9+0x38]
   1400463ee:	mov    rsi,rdx
   1400463f1:	mov    r12,r8
   1400463f4:	mov    rbp,rcx
   1400463f7:	lea    r8,[rbx+0x4]
   1400463fb:	mov    rdx,r9
   1400463fe:	mov    rcx,rsi
   140046401:	mov    rdi,r9
   140046404:	call   0x140046fa0
   140046409:	test   BYTE PTR [rbp+0x4],0x66
   14004640d:	mov    r11d,DWORD PTR [rbx+0x4]
   140046411:	jne    0x140046419
   140046413:	and    r11d,0x1
   140046417:	jmp    0x14004641d
   140046419:	and    r11d,0x2
   14004641d:	test   r11d,r11d
   140046420:	je     0x140046435
   140046422:	mov    r9,rdi
   140046425:	mov    r8,r12
   140046428:	mov    rdx,rsi
   14004642b:	mov    rcx,rbp
   14004642e:	call   0x140045ea0
   140046433:	jmp    0x14004643a
   140046435:	mov    eax,0x1
   14004643a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004643f:	mov    rbp,QWORD PTR [rsp+0x38]
   140046444:	mov    rsi,QWORD PTR [rsp+0x40]
   140046449:	mov    rdi,QWORD PTR [rsp+0x48]
   14004644e:	add    rsp,0x20
   140046452:	pop    r12
   140046454:	ret    
   140046455:	int3   
   140046456:	int3   
   140046457:	int3   
   140046458:	int3   
   140046459:	int3   
   14004645a:	int3   
   14004645b:	int3   
   14004645c:	int3   
   14004645d:	int3   
   14004645e:	int3   
   14004645f:	int3   
   140046460:	int3   
   140046461:	int3   
   140046462:	int3   
   140046463:	int3   
   140046464:	int3   
   140046465:	int3   
   140046466:	data16 data16 xchg ax,ax
   14004646a:	data16 data16 xchg ax,ax
   14004646e:	xchg   ax,ax
   140046470:	cmp    rcx,QWORD PTR [rip+0x408f9]        # 0x140086d70
   140046477:	jne    0x14004648a
   140046479:	rol    rcx,0x10
   14004647d:	test   cx,0xffff
   140046482:	jne    0x140046486
   140046484:	repz ret 
   140046486:	ror    rcx,0x10
   14004648a:	jmp    0x14004dcd0
   14004648f:	int3   
   140046490:	rex push rbx
   140046492:	sub    rsp,0x20
   140046496:	mov    edx,0x8
   14004649b:	lea    ecx,[rdx+0x18]
   14004649e:	call   0x14004de90
   1400464a3:	mov    rcx,rax
   1400464a6:	mov    rbx,rax
   1400464a9:	call   0x14004b8b0
   1400464ae:	test   rbx,rbx
   1400464b1:	mov    QWORD PTR [rip+0x48458],rax        # 0x14008e910
   1400464b8:	mov    QWORD PTR [rip+0x48449],rax        # 0x14008e908
   1400464bf:	jne    0x1400464ca
   1400464c1:	lea    eax,[rbx+0x18]
   1400464c4:	add    rsp,0x20
   1400464c8:	pop    rbx
   1400464c9:	ret    
   1400464ca:	mov    QWORD PTR [rbx],0x0
   1400464d1:	xor    eax,eax
   1400464d3:	add    rsp,0x20
   1400464d7:	pop    rbx
   1400464d8:	ret    
   1400464d9:	int3   
   1400464da:	int3   
   1400464db:	int3   
   1400464dc:	int3   
   1400464dd:	int3   
   1400464de:	int3   
   1400464df:	int3   
   1400464e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400464e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400464ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400464ef:	push   r12
   1400464f1:	push   r13
   1400464f3:	push   r14
   1400464f5:	sub    rsp,0x20
   1400464f9:	mov    rbx,rcx
   1400464fc:	call   0x140048200
   140046501:	nop
   140046502:	mov    rcx,QWORD PTR [rip+0x48407]        # 0x14008e910
   140046509:	call   0x14004ba70
   14004650e:	mov    r13,rax
   140046511:	mov    rcx,QWORD PTR [rip+0x483f0]        # 0x14008e908
   140046518:	call   0x14004ba70
   14004651d:	mov    rsi,rax
   140046520:	cmp    rax,r13
   140046523:	jb     0x1400465bf
   140046529:	mov    rdi,rax
   14004652c:	sub    rdi,r13
   14004652f:	lea    r14,[rdi+0x8]
   140046533:	cmp    r14,0x8
   140046537:	jb     0x1400465bf
   14004653d:	mov    rcx,r13
   140046540:	call   0x140049a40
   140046545:	mov    r12,rax
   140046548:	cmp    rax,r14
   14004654b:	jae    0x1400465a2
   14004654d:	mov    edx,0x1000
   140046552:	cmp    rax,rdx
   140046555:	cmovb  rdx,rax
   140046559:	add    rdx,rax
   14004655c:	cmp    rdx,rax
   14004655f:	jb     0x14004656e
   140046561:	mov    rcx,r13
   140046564:	call   0x14004df20
   140046569:	test   rax,rax
   14004656c:	jne    0x140046585
   14004656e:	lea    rdx,[r12+0x20]
   140046573:	cmp    rdx,r12
   140046576:	jb     0x14004659e
   140046578:	mov    rcx,r13
   14004657b:	call   0x14004df20
   140046580:	test   rax,rax
   140046583:	je     0x14004659e
   140046585:	sar    rdi,0x3
   140046589:	lea    rsi,[rax+rdi*8]
   14004658d:	mov    rcx,rax
   140046590:	call   0x14004b8b0
   140046595:	mov    QWORD PTR [rip+0x48374],rax        # 0x14008e910
   14004659c:	jmp    0x1400465a2
   14004659e:	xor    ebx,ebx
   1400465a0:	jmp    0x1400465c1
   1400465a2:	mov    rcx,rbx
   1400465a5:	call   0x14004b8b0
   1400465aa:	mov    QWORD PTR [rsi],rax
   1400465ad:	lea    rcx,[rsi+0x8]
   1400465b1:	call   0x14004b8b0
   1400465b6:	mov    QWORD PTR [rip+0x4834b],rax        # 0x14008e908
   1400465bd:	jmp    0x1400465c1
   1400465bf:	xor    ebx,ebx
   1400465c1:	call   0x140048210
   1400465c6:	mov    rax,rbx
   1400465c9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400465ce:	mov    rsi,QWORD PTR [rsp+0x48]
   1400465d3:	mov    rdi,QWORD PTR [rsp+0x50]
   1400465d8:	add    rsp,0x20
   1400465dc:	pop    r14
   1400465de:	pop    r13
   1400465e0:	pop    r12
   1400465e2:	ret    
   1400465e3:	int3   
   1400465e4:	int3   
   1400465e5:	int3   
   1400465e6:	int3   
   1400465e7:	int3   
   1400465e8:	int3   
   1400465e9:	int3   
   1400465ea:	int3   
   1400465eb:	int3   
   1400465ec:	int3   
   1400465ed:	int3   
   1400465ee:	int3   
   1400465ef:	int3   
   1400465f0:	rex push rbp
   1400465f2:	sub    rsp,0x20
   1400465f6:	mov    rbp,rdx
   1400465f9:	call   0x140048210
   1400465fe:	add    rsp,0x20
   140046602:	pop    rbp
   140046603:	ret    
   140046604:	int3   
   140046605:	int3   
   140046606:	int3   
   140046607:	int3   
   140046608:	int3   
   140046609:	int3   
   14004660a:	int3   
   14004660b:	int3   
   14004660c:	int3   
   14004660d:	int3   
   14004660e:	int3   
   14004660f:	int3   
   140046610:	sub    rsp,0x28
   140046614:	call   0x1400464e0
   140046619:	neg    rax
   14004661c:	sbb    eax,eax
   14004661e:	neg    eax
   140046620:	sub    eax,0x1
   140046623:	add    rsp,0x28
   140046627:	ret    
   140046628:	int3   
   140046629:	int3   
   14004662a:	int3   
   14004662b:	int3   
   14004662c:	int3   
   14004662d:	int3   
   14004662e:	int3   
   14004662f:	int3   
   140046630:	mov    r8,rcx
   140046633:	movzx  eax,WORD PTR [rcx]
   140046636:	add    rcx,0x2
   14004663a:	test   ax,ax
   14004663d:	jne    0x140046633
   14004663f:	nop
   140046640:	sub    rcx,0x2
   140046644:	cmp    rcx,r8
   140046647:	je     0x140046652
   140046649:	cmp    WORD PTR [rcx],dx
   14004664c:	jne    0x140046640
   14004664e:	mov    rax,rcx
   140046651:	ret    
   140046652:	cmp    WORD PTR [rcx],dx
   140046655:	jne    0x14004665b
   140046657:	mov    rax,rcx
   14004665a:	ret    
   14004665b:	xor    eax,eax
   14004665d:	ret    
   14004665e:	int3   
   14004665f:	int3   
   140046660:	cmp    WORD PTR [rdx],0x0
   140046664:	mov    r10,rdx
   140046667:	mov    r9,rcx
   14004666a:	jne    0x140046670
   14004666c:	mov    rax,rcx
   14004666f:	ret    
   140046670:	movzx  eax,WORD PTR [rcx]
   140046673:	test   ax,ax
   140046676:	je     0x1400466c0
   140046678:	mov    r8,rcx
   14004667b:	sub    r8,rdx
   14004667e:	xchg   ax,ax
   140046680:	test   ax,ax
   140046683:	mov    rdx,r10
   140046686:	je     0x1400466a8
   140046688:	movzx  eax,WORD PTR [rdx]
   14004668b:	test   ax,ax
   14004668e:	je     0x1400466c3
   140046690:	movzx  ecx,WORD PTR [r8+rdx*1]
   140046695:	movzx  eax,ax
   140046698:	cmp    ecx,eax
   14004669a:	jne    0x1400466a8
   14004669c:	add    rdx,0x2
   1400466a0:	cmp    WORD PTR [r8+rdx*1],0x0
   1400466a6:	jne    0x140046688
   1400466a8:	cmp    WORD PTR [rdx],0x0
   1400466ac:	je     0x1400466c3
   1400466ae:	mov    ax,WORD PTR [r9+0x2]
   1400466b3:	add    r9,0x2
   1400466b7:	add    r8,0x2
   1400466bb:	test   ax,ax
   1400466be:	jne    0x140046680
   1400466c0:	xor    eax,eax
   1400466c2:	ret    
   1400466c3:	mov    rax,r9
   1400466c6:	ret    
   1400466c7:	int3   
   1400466c8:	int3   
   1400466c9:	int3   
   1400466ca:	int3   
   1400466cb:	int3   
   1400466cc:	int3   
   1400466cd:	int3   
   1400466ce:	int3   
   1400466cf:	int3   
   1400466d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400466d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400466da:	push   rdi
   1400466db:	sub    rsp,0x30
   1400466df:	test   r9,r9
   1400466e2:	mov    rbx,r9
   1400466e5:	mov    rsi,r8
   1400466e8:	mov    rdi,rdx
   1400466eb:	je     0x14004673f
   1400466ed:	test   rcx,rcx
   1400466f0:	jne    0x14004672a
   1400466f2:	call   0x140048680
   1400466f7:	xor    r9d,r9d
   1400466fa:	xor    r8d,r8d
   1400466fd:	xor    edx,edx
   1400466ff:	xor    ecx,ecx
   140046701:	mov    QWORD PTR [rsp+0x20],0x0
   14004670a:	mov    DWORD PTR [rax],0x16
   140046710:	call   0x14004e100
   140046715:	mov    eax,0x16
   14004671a:	mov    rbx,QWORD PTR [rsp+0x40]
   14004671f:	mov    rsi,QWORD PTR [rsp+0x48]
   140046724:	add    rsp,0x30
   140046728:	pop    rdi
   140046729:	ret    
   14004672a:	test   r8,r8
   14004672d:	je     0x140046751
   14004672f:	cmp    rdx,rbx
   140046732:	jb     0x140046751
   140046734:	mov    r8,rbx
   140046737:	mov    rdx,rsi
   14004673a:	call   0x1400478c0
   14004673f:	xor    eax,eax
   140046741:	mov    rbx,QWORD PTR [rsp+0x40]
   140046746:	mov    rsi,QWORD PTR [rsp+0x48]
   14004674b:	add    rsp,0x30
   14004674f:	pop    rdi
   140046750:	ret    
   140046751:	mov    r8,rdx
   140046754:	xor    edx,edx
   140046756:	call   0x140047720
   14004675b:	test   rsi,rsi
   14004675e:	je     0x1400466f2
   140046760:	cmp    rdi,rbx
   140046763:	jae    0x140046715
   140046765:	call   0x140048680
   14004676a:	xor    r9d,r9d
   14004676d:	xor    r8d,r8d
   140046770:	xor    edx,edx
   140046772:	xor    ecx,ecx
   140046774:	mov    QWORD PTR [rsp+0x20],0x0
   14004677d:	mov    DWORD PTR [rax],0x22
   140046783:	call   0x14004e100
   140046788:	mov    rbx,QWORD PTR [rsp+0x40]
   14004678d:	mov    rsi,QWORD PTR [rsp+0x48]
   140046792:	mov    eax,0x22
   140046797:	add    rsp,0x30
   14004679b:	pop    rdi
   14004679c:	ret    
   14004679d:	int3   
   14004679e:	int3   
   14004679f:	int3   
   1400467a0:	sub    rsp,0x38
   1400467a4:	test   r9,r9
   1400467a7:	mov    rax,r8
   1400467aa:	je     0x140046820
   1400467ac:	test   rcx,rcx
   1400467af:	jne    0x1400467de
   1400467b1:	call   0x140048680
   1400467b6:	xor    r9d,r9d
   1400467b9:	xor    r8d,r8d
   1400467bc:	xor    edx,edx
   1400467be:	xor    ecx,ecx
   1400467c0:	mov    QWORD PTR [rsp+0x20],0x0
   1400467c9:	mov    DWORD PTR [rax],0x16
   1400467cf:	call   0x14004e100
   1400467d4:	mov    eax,0x16
   1400467d9:	add    rsp,0x38
   1400467dd:	ret    
   1400467de:	test   rax,rax
   1400467e1:	je     0x1400467b1
   1400467e3:	cmp    rdx,r9
   1400467e6:	jae    0x140046815
   1400467e8:	call   0x140048680
   1400467ed:	xor    r9d,r9d
   1400467f0:	xor    r8d,r8d
   1400467f3:	xor    edx,edx
   1400467f5:	xor    ecx,ecx
   1400467f7:	mov    QWORD PTR [rsp+0x20],0x0
   140046800:	mov    DWORD PTR [rax],0x22
   140046806:	call   0x14004e100
   14004680b:	mov    eax,0x22
   140046810:	add    rsp,0x38
   140046814:	ret    
   140046815:	mov    r8,r9
   140046818:	mov    rdx,rax
   14004681b:	call   0x1400478c0
   140046820:	xor    eax,eax
   140046822:	add    rsp,0x38
   140046826:	ret    
   140046827:	int3   
   140046828:	int3   
   140046829:	int3   
   14004682a:	int3   
   14004682b:	int3   
   14004682c:	int3   
   14004682d:	int3   
   14004682e:	int3   
   14004682f:	int3   
   140046830:	rex push rbp
   140046832:	push   r12
   140046834:	push   r13
   140046836:	sub    rsp,0x50
   14004683a:	lea    rbp,[rsp+0x40]
   14004683f:	mov    QWORD PTR [rbp+0x30],rbx
   140046843:	mov    QWORD PTR [rbp+0x38],rsi
   140046847:	mov    QWORD PTR [rbp+0x40],rdi
   14004684b:	mov    rax,QWORD PTR [rip+0x4051e]        # 0x140086d70
   140046852:	xor    rax,rbp
   140046855:	mov    QWORD PTR [rbp+0x0],rax
   140046859:	test   rcx,rcx
   14004685c:	mov    r12,r8
   14004685f:	mov    rsi,rdx
   140046862:	mov    rbx,rcx
   140046865:	je     0x140046876
   140046867:	call   0x14004f5e0
   14004686c:	cmp    rax,rsi
   14004686f:	jb     0x14004689f
   140046871:	mov    WORD PTR [rbx],0x0
   140046876:	call   0x140048680
   14004687b:	xor    edi,edi
   14004687d:	xor    r9d,r9d
   140046880:	xor    r8d,r8d
   140046883:	xor    edx,edx
   140046885:	xor    ecx,ecx
   140046887:	mov    DWORD PTR [rax],0x16
   14004688d:	mov    QWORD PTR [rsp+0x20],rdi
   140046892:	call   0x14004e100
   140046897:	lea    eax,[rdi+0x16]
   14004689a:	jmp    0x140046a46
   14004689f:	mov    rax,QWORD PTR [r12]
   1400468a3:	mov    edx,DWORD PTR [rax+0x14]
   1400468a6:	test   edx,edx
   1400468a8:	jne    0x1400468d7
   1400468aa:	cmp    WORD PTR [rbx],dx
   1400468ad:	je     0x1400468d0
   1400468af:	nop
   1400468b0:	movzx  eax,WORD PTR [rbx]
   1400468b3:	cmp    ax,0x61
   1400468b7:	jb     0x1400468c6
   1400468b9:	cmp    ax,0x7a
   1400468bd:	ja     0x1400468c6
   1400468bf:	sub    ax,0x20
   1400468c3:	mov    WORD PTR [rbx],ax
   1400468c6:	add    rbx,0x2
   1400468ca:	cmp    WORD PTR [rbx],0x0
   1400468ce:	jne    0x1400468b0
   1400468d0:	xor    eax,eax
   1400468d2:	jmp    0x140046a46
   1400468d7:	mov    eax,DWORD PTR [rax+0x4]
   1400468da:	xor    edi,edi
   1400468dc:	mov    r9,rbx
   1400468df:	mov    DWORD PTR [rsp+0x38],eax
   1400468e3:	mov    DWORD PTR [rsp+0x30],edi
   1400468e7:	mov    r8d,0x200
   1400468ed:	mov    rcx,r12
   1400468f0:	mov    QWORD PTR [rsp+0x28],rdi
   1400468f5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400468fd:	call   0x14004f490
   140046902:	test   eax,eax
   140046904:	movsxd r13,eax
   140046907:	jne    0x14004691a
   140046909:	call   0x140048680
   14004690e:	mov    ebx,0x2a
   140046913:	mov    DWORD PTR [rax],ebx
   140046915:	jmp    0x140046a3f
   14004691a:	cmp    rsi,r13
   14004691d:	mov    rcx,r13
   140046920:	jae    0x14004694e
   140046922:	mov    WORD PTR [rbx],di
   140046925:	call   0x140048680
   14004692a:	xor    r9d,r9d
   14004692d:	xor    r8d,r8d
   140046930:	xor    edx,edx
   140046932:	xor    ecx,ecx
   140046934:	mov    DWORD PTR [rax],0x22
   14004693a:	mov    QWORD PTR [rsp+0x20],rdi
   14004693f:	call   0x14004e100
   140046944:	mov    eax,0x22
   140046949:	jmp    0x140046a46
   14004694e:	test   eax,eax
   140046950:	jle    0x140046a34
   140046956:	xor    edx,edx
   140046958:	mov    rax,0xffffffffffffffe0
   14004695f:	div    rcx
   140046962:	cmp    rax,0x2
   140046966:	jb     0x140046a34
   14004696c:	lea    rcx,[r13+r13*1+0x10]
   140046971:	cmp    rcx,0x400
   140046978:	ja     0x1400469af
   14004697a:	lea    rax,[rcx+0xf]
   14004697e:	cmp    rax,rcx
   140046981:	ja     0x14004698d
   140046983:	movabs rax,0xffffffffffffff0
   14004698d:	and    rax,0xfffffffffffffff0
   140046991:	call   0x140063500
   140046996:	sub    rsp,rax
   140046999:	lea    rdi,[rsp+0x40]
   14004699e:	test   rdi,rdi
   1400469a1:	je     0x140046a34
   1400469a7:	mov    DWORD PTR [rdi],0xcccc
   1400469ad:	jmp    0x1400469c2
   1400469af:	call   0x1400480c0
   1400469b4:	test   rax,rax
   1400469b7:	mov    rdi,rax
   1400469ba:	je     0x1400469c6
   1400469bc:	mov    DWORD PTR [rax],0xdddd
   1400469c2:	add    rdi,0x10
   1400469c6:	test   rdi,rdi
   1400469c9:	je     0x140046a34
   1400469cb:	mov    rcx,QWORD PTR [r12]
   1400469cf:	mov    r9,rbx
   1400469d2:	mov    r8d,0x200
   1400469d8:	mov    eax,DWORD PTR [rcx+0x4]
   1400469db:	mov    edx,DWORD PTR [rcx+0x14]
   1400469de:	mov    rcx,r12
   1400469e1:	mov    DWORD PTR [rsp+0x38],eax
   1400469e5:	mov    DWORD PTR [rsp+0x30],r13d
   1400469ea:	mov    QWORD PTR [rsp+0x28],rdi
   1400469ef:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400469f7:	call   0x14004f490
   1400469fc:	test   eax,eax
   1400469fe:	je     0x140046a12
   140046a00:	mov    r8,rdi
   140046a03:	mov    rdx,rsi
   140046a06:	mov    rcx,rbx
   140046a09:	call   0x140047080
   140046a0e:	mov    ebx,eax
   140046a10:	jmp    0x140046a1e
   140046a12:	call   0x140048680
   140046a17:	mov    ebx,0x2a
   140046a1c:	mov    DWORD PTR [rax],ebx
   140046a1e:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140046a25:	lea    rcx,[rdi-0x10]
   140046a29:	jne    0x140046a30
   140046a2b:	call   0x1400485c0
   140046a30:	mov    eax,ebx
   140046a32:	jmp    0x140046a46
   140046a34:	call   0x140048680
   140046a39:	mov    DWORD PTR [rax],0xc
   140046a3f:	call   0x140048680
   140046a44:	mov    eax,DWORD PTR [rax]
   140046a46:	mov    rcx,QWORD PTR [rbp+0x0]
   140046a4a:	xor    rcx,rbp
   140046a4d:	call   0x140046470
   140046a52:	mov    rbx,QWORD PTR [rbp+0x30]
   140046a56:	mov    rsi,QWORD PTR [rbp+0x38]
   140046a5a:	mov    rdi,QWORD PTR [rbp+0x40]
   140046a5e:	lea    rsp,[rbp+0x10]
   140046a62:	pop    r13
   140046a64:	pop    r12
   140046a66:	pop    rbp
   140046a67:	ret    
   140046a68:	int3   
   140046a69:	int3   
   140046a6a:	int3   
   140046a6b:	int3   
   140046a6c:	int3   
   140046a6d:	int3   
   140046a6e:	int3   
   140046a6f:	int3   
   140046a70:	mov    QWORD PTR [rsp+0x8],rbx
   140046a75:	push   rdi
   140046a76:	sub    rsp,0x40
   140046a7a:	mov    rbx,rdx
   140046a7d:	mov    rdi,rcx
   140046a80:	mov    BYTE PTR [rsp+0x38],0x0
   140046a85:	call   0x14004bd60
   140046a8a:	mov    QWORD PTR [rsp+0x30],rax
   140046a8f:	mov    r11,rax
   140046a92:	mov    r8,QWORD PTR [rax+0xc0]
   140046a99:	cmp    r8,QWORD PTR [rip+0x40e00]        # 0x1400878a0
   140046aa0:	mov    QWORD PTR [rsp+0x20],r8
   140046aa5:	mov    rax,QWORD PTR [rax+0xb8]
   140046aac:	mov    QWORD PTR [rsp+0x28],rax
   140046ab1:	je     0x140046ad7
   140046ab3:	mov    r8d,DWORD PTR [r11+0xc8]
   140046aba:	test   DWORD PTR [rip+0x40c67],r8d        # 0x140087728
   140046ac1:	jne    0x140046ad7
   140046ac3:	call   0x14004f030
   140046ac8:	mov    r11,QWORD PTR [rsp+0x30]
   140046acd:	mov    QWORD PTR [rsp+0x20],rax
   140046ad2:	mov    rax,QWORD PTR [rsp+0x28]
   140046ad7:	cmp    rax,QWORD PTR [rip+0x40b42]        # 0x140087620
   140046ade:	je     0x140046afe
   140046ae0:	mov    eax,DWORD PTR [r11+0xc8]
   140046ae7:	test   DWORD PTR [rip+0x40c3b],eax        # 0x140087728
   140046aed:	jne    0x140046afe
   140046aef:	call   0x14004e4e0
   140046af4:	mov    r11,QWORD PTR [rsp+0x30]
   140046af9:	mov    QWORD PTR [rsp+0x28],rax
   140046afe:	test   BYTE PTR [r11+0xc8],0x2
   140046b06:	jne    0x140046b15
   140046b08:	or     DWORD PTR [r11+0xc8],0x2
   140046b10:	mov    BYTE PTR [rsp+0x38],0x1
   140046b15:	lea    r8,[rsp+0x20]
   140046b1a:	mov    rdx,rbx
   140046b1d:	mov    rcx,rdi
   140046b20:	call   0x140046830
   140046b25:	cmp    BYTE PTR [rsp+0x38],0x0
   140046b2a:	je     0x140046b38
   140046b2c:	mov    rcx,QWORD PTR [rsp+0x30]
   140046b31:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140046b38:	mov    rbx,QWORD PTR [rsp+0x50]
   140046b3d:	add    rsp,0x40
   140046b41:	pop    rdi
   140046b42:	ret    
   140046b43:	int3   
   140046b44:	int3   
   140046b45:	int3   
   140046b46:	int3   
   140046b47:	int3   
   140046b48:	int3   
   140046b49:	int3   
   140046b4a:	int3   
   140046b4b:	int3   
   140046b4c:	int3   
   140046b4d:	int3   
   140046b4e:	int3   
   140046b4f:	int3   
   140046b50:	sub    rsp,0x68
   140046b54:	test   rcx,rcx
   140046b57:	jne    0x140046b82
   140046b59:	call   0x140048680
   140046b5e:	xor    r9d,r9d
   140046b61:	xor    r8d,r8d
   140046b64:	mov    DWORD PTR [rax],0x16
   140046b6a:	xor    eax,eax
   140046b6c:	xor    edx,edx
   140046b6e:	xor    ecx,ecx
   140046b70:	mov    QWORD PTR [rsp+0x20],rax
   140046b75:	call   0x14004e100
   140046b7a:	or     eax,0xffffffff
   140046b7d:	add    rsp,0x68
   140046b81:	ret    
   140046b82:	xor    eax,eax
   140046b84:	mov    r9,rdx
   140046b87:	mov    rdx,rcx
   140046b8a:	lea    rcx,[rsp+0x30]
   140046b8f:	xor    r8d,r8d
   140046b92:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140046b9a:	mov    DWORD PTR [rsp+0x48],0x42
   140046ba2:	mov    QWORD PTR [rsp+0x40],rax
   140046ba7:	mov    QWORD PTR [rsp+0x30],rax
   140046bac:	call   0x14004f890
   140046bb1:	add    rsp,0x68
   140046bb5:	ret    
   140046bb6:	int3   
   140046bb7:	int3   
   140046bb8:	int3   
   140046bb9:	int3   
   140046bba:	int3   
   140046bbb:	int3   
   140046bbc:	int3   
   140046bbd:	int3   
   140046bbe:	int3   
   140046bbf:	int3   
   140046bc0:	mov    QWORD PTR [rsp+0x10],rbx
   140046bc5:	push   rsi
   140046bc6:	sub    rsp,0x60
   140046bca:	test   r9,r9
   140046bcd:	mov    r10,r9
   140046bd0:	mov    rsi,r8
   140046bd3:	mov    rbx,rdx
   140046bd6:	mov    r11,rcx
   140046bd9:	jne    0x140046c0a
   140046bdb:	call   0x140048680
   140046be0:	xor    r9d,r9d
   140046be3:	xor    r8d,r8d
   140046be6:	mov    DWORD PTR [rax],0x16
   140046bec:	xor    eax,eax
   140046bee:	xor    edx,edx
   140046bf0:	xor    ecx,ecx
   140046bf2:	mov    QWORD PTR [rsp+0x20],rax
   140046bf7:	call   0x14004e100
   140046bfc:	or     eax,0xffffffff
   140046bff:	mov    rbx,QWORD PTR [rsp+0x78]
   140046c04:	add    rsp,0x60
   140046c08:	pop    rsi
   140046c09:	ret    
   140046c0a:	test   r8,r8
   140046c0d:	je     0x140046c14
   140046c0f:	test   rdx,rdx
   140046c12:	je     0x140046bdb
   140046c14:	cmp    r8,0x3fffffff
   140046c1b:	mov    QWORD PTR [rsp+0x70],rdi
   140046c20:	mov    DWORD PTR [rsp+0x48],0x42
   140046c28:	mov    QWORD PTR [rsp+0x40],rdx
   140046c2d:	mov    QWORD PTR [rsp+0x30],rdx
   140046c32:	jbe    0x140046c3e
   140046c34:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140046c3c:	jmp    0x140046c46
   140046c3e:	lea    eax,[r8+r8*1]
   140046c42:	mov    DWORD PTR [rsp+0x38],eax
   140046c46:	mov    r9,QWORD PTR [rsp+0x98]
   140046c4e:	mov    r8,QWORD PTR [rsp+0x90]
   140046c56:	lea    rcx,[rsp+0x30]
   140046c5b:	mov    rdx,r10
   140046c5e:	call   r11
   140046c61:	test   rbx,rbx
   140046c64:	mov    edi,eax
   140046c66:	je     0x140046cf7
   140046c6c:	test   eax,eax
   140046c6e:	js     0x140046ce4
   140046c70:	sub    DWORD PTR [rsp+0x38],0x1
   140046c75:	js     0x140046c8f
   140046c77:	mov    rax,QWORD PTR [rsp+0x30]
   140046c7c:	mov    BYTE PTR [rax],0x0
   140046c7f:	mov    rax,QWORD PTR [rsp+0x30]
   140046c84:	add    rax,0x1
   140046c88:	mov    QWORD PTR [rsp+0x30],rax
   140046c8d:	jmp    0x140046ca5
   140046c8f:	lea    rdx,[rsp+0x30]
   140046c94:	xor    ecx,ecx
   140046c96:	call   0x14004f600
   140046c9b:	cmp    eax,0xffffffff
   140046c9e:	je     0x140046ce4
   140046ca0:	mov    rax,QWORD PTR [rsp+0x30]
   140046ca5:	sub    DWORD PTR [rsp+0x38],0x1
   140046caa:	js     0x140046cc1
   140046cac:	mov    BYTE PTR [rax],0x0
   140046caf:	mov    eax,edi
   140046cb1:	mov    rdi,QWORD PTR [rsp+0x70]
   140046cb6:	mov    rbx,QWORD PTR [rsp+0x78]
   140046cbb:	add    rsp,0x60
   140046cbf:	pop    rsi
   140046cc0:	ret    
   140046cc1:	lea    rdx,[rsp+0x30]
   140046cc6:	xor    ecx,ecx
   140046cc8:	call   0x14004f600
   140046ccd:	cmp    eax,0xffffffff
   140046cd0:	je     0x140046ce4
   140046cd2:	mov    eax,edi
   140046cd4:	mov    rdi,QWORD PTR [rsp+0x70]
   140046cd9:	mov    rbx,QWORD PTR [rsp+0x78]
   140046cde:	add    rsp,0x60
   140046ce2:	pop    rsi
   140046ce3:	ret    
   140046ce4:	xor    eax,eax
   140046ce6:	mov    WORD PTR [rbx+rsi*2-0x2],0x0
   140046ced:	cmp    DWORD PTR [rsp+0x38],eax
   140046cf1:	setge  al
   140046cf4:	add    eax,0xfffffffe
   140046cf7:	mov    rdi,QWORD PTR [rsp+0x70]
   140046cfc:	mov    rbx,QWORD PTR [rsp+0x78]
   140046d01:	add    rsp,0x60
   140046d05:	pop    rsi
   140046d06:	ret    
   140046d07:	int3   
   140046d08:	int3   
   140046d09:	int3   
   140046d0a:	int3   
   140046d0b:	int3   
   140046d0c:	int3   
   140046d0d:	int3   
   140046d0e:	int3   
   140046d0f:	int3   
   140046d10:	rex push rbx
   140046d12:	sub    rsp,0x30
   140046d16:	test   r8,r8
   140046d19:	mov    rbx,rcx
   140046d1c:	je     0x140046d67
   140046d1e:	test   rcx,rcx
   140046d21:	je     0x140046d67
   140046d23:	test   rdx,rdx
   140046d26:	je     0x140046d67
   140046d28:	mov    rax,QWORD PTR [rsp+0x60]
   140046d2d:	mov    QWORD PTR [rsp+0x28],rax
   140046d32:	mov    QWORD PTR [rsp+0x20],r9
   140046d37:	mov    r9,r8
   140046d3a:	mov    r8,rdx
   140046d3d:	mov    rdx,rcx
   140046d40:	lea    rcx,[rip+0x9b49]        # 0x140050890
   140046d47:	call   0x140046bc0
   140046d4c:	test   eax,eax
   140046d4e:	jns    0x140046d55
   140046d50:	mov    WORD PTR [rbx],0x0
   140046d55:	cmp    eax,0xfffffffe
   140046d58:	jne    0x140046d8d
   140046d5a:	call   0x140048680
   140046d5f:	mov    DWORD PTR [rax],0x22
   140046d65:	jmp    0x140046d72
   140046d67:	call   0x140048680
   140046d6c:	mov    DWORD PTR [rax],0x16
   140046d72:	xor    r9d,r9d
   140046d75:	xor    r8d,r8d
   140046d78:	xor    edx,edx
   140046d7a:	xor    ecx,ecx
   140046d7c:	mov    QWORD PTR [rsp+0x20],0x0
   140046d85:	call   0x14004e100
   140046d8a:	or     eax,0xffffffff
   140046d8d:	add    rsp,0x30
   140046d91:	pop    rbx
   140046d92:	ret    
   140046d93:	int3   
   140046d94:	int3   
   140046d95:	int3   
   140046d96:	int3   
   140046d97:	int3   
   140046d98:	int3   
   140046d99:	int3   
   140046d9a:	int3   
   140046d9b:	int3   
   140046d9c:	int3   
   140046d9d:	int3   
   140046d9e:	int3   
   140046d9f:	int3   
   140046da0:	rex push rbx
   140046da2:	sub    rsp,0x30
   140046da6:	test   r8,r8
   140046da9:	mov    rbx,rcx
   140046dac:	je     0x140046df6
   140046dae:	test   rcx,rcx
   140046db1:	je     0x140046df6
   140046db3:	test   rdx,rdx
   140046db6:	je     0x140046df6
   140046db8:	mov    QWORD PTR [rsp+0x28],r9
   140046dbd:	mov    r9,r8
   140046dc0:	mov    r8,rdx
   140046dc3:	mov    rdx,rcx
   140046dc6:	lea    rcx,[rip+0x9ac3]        # 0x140050890
   140046dcd:	mov    QWORD PTR [rsp+0x20],0x0
   140046dd6:	call   0x140046bc0
   140046ddb:	test   eax,eax
   140046ddd:	jns    0x140046de4
   140046ddf:	mov    WORD PTR [rbx],0x0
   140046de4:	cmp    eax,0xfffffffe
   140046de7:	jne    0x140046e1c
   140046de9:	call   0x140048680
   140046dee:	mov    DWORD PTR [rax],0x22
   140046df4:	jmp    0x140046e01
   140046df6:	call   0x140048680
   140046dfb:	mov    DWORD PTR [rax],0x16
   140046e01:	xor    r9d,r9d
   140046e04:	xor    r8d,r8d
   140046e07:	xor    edx,edx
   140046e09:	xor    ecx,ecx
   140046e0b:	mov    QWORD PTR [rsp+0x20],0x0
   140046e14:	call   0x14004e100
   140046e19:	or     eax,0xffffffff
   140046e1c:	add    rsp,0x30
   140046e20:	pop    rbx
   140046e21:	ret    
   140046e22:	int3   
   140046e23:	int3   
   140046e24:	int3   
   140046e25:	int3   
   140046e26:	int3   
   140046e27:	int3   
   140046e28:	int3   
   140046e29:	int3   
   140046e2a:	int3   
   140046e2b:	int3   
   140046e2c:	int3   
   140046e2d:	int3   
   140046e2e:	int3   
   140046e2f:	int3   
   140046e30:	mov    QWORD PTR [rsp+0x10],rbx
   140046e35:	mov    QWORD PTR [rsp+0x18],rbp
   140046e3a:	mov    QWORD PTR [rsp+0x20],rsi
   140046e3f:	push   rdi
   140046e40:	sub    rsp,0x30
   140046e44:	test   r9,r9
   140046e47:	mov    rbp,r9
   140046e4a:	mov    rsi,r8
   140046e4d:	mov    rdi,rdx
   140046e50:	mov    rbx,rcx
   140046e53:	jne    0x140046e80
   140046e55:	call   0x140048680
   140046e5a:	xor    r9d,r9d
   140046e5d:	xor    r8d,r8d
   140046e60:	xor    edx,edx
   140046e62:	xor    ecx,ecx
   140046e64:	mov    QWORD PTR [rsp+0x20],0x0
   140046e6d:	mov    DWORD PTR [rax],0x16
   140046e73:	call   0x14004e100
   140046e78:	or     eax,0xffffffff
   140046e7b:	jmp    0x140046f8a
   140046e80:	test   r8,r8
   140046e83:	jne    0x140046e96
   140046e85:	test   rcx,rcx
   140046e88:	jne    0x140046e9b
   140046e8a:	test   rdx,rdx
   140046e8d:	jne    0x140046e55
   140046e8f:	xor    eax,eax
   140046e91:	jmp    0x140046f8a
   140046e96:	test   rcx,rcx
   140046e99:	je     0x140046e55
   140046e9b:	test   rdx,rdx
   140046e9e:	je     0x140046e55
   140046ea0:	cmp    rdx,r8
   140046ea3:	mov    QWORD PTR [rsp+0x40],r12
   140046ea8:	jbe    0x140046efa
   140046eaa:	call   0x140048680
   140046eaf:	lea    r8,[rsi+0x1]
   140046eb3:	lea    rcx,[rip+0x99d6]        # 0x140050890
   140046eba:	mov    edi,DWORD PTR [rax]
   140046ebc:	mov    rax,QWORD PTR [rsp+0x68]
   140046ec1:	mov    r9,rbp
   140046ec4:	mov    QWORD PTR [rsp+0x28],rax
   140046ec9:	mov    rax,QWORD PTR [rsp+0x60]
   140046ece:	mov    rdx,rbx
   140046ed1:	mov    QWORD PTR [rsp+0x20],rax
   140046ed6:	call   0x140046bc0
   140046edb:	cmp    eax,0xfffffffe
   140046ede:	jne    0x140046f51
   140046ee0:	call   0x140048680
   140046ee5:	cmp    DWORD PTR [rax],0x22
   140046ee8:	jne    0x140046f82
   140046eee:	call   0x140048680
   140046ef3:	mov    DWORD PTR [rax],edi
   140046ef5:	jmp    0x140046f82
   140046efa:	call   0x140048680
   140046eff:	lea    rcx,[rip+0x998a]        # 0x140050890
   140046f06:	mov    r9,rbp
   140046f09:	mov    r12d,DWORD PTR [rax]
   140046f0c:	mov    rax,QWORD PTR [rsp+0x68]
   140046f11:	mov    r8,rdi
   140046f14:	mov    QWORD PTR [rsp+0x28],rax
   140046f19:	mov    rax,QWORD PTR [rsp+0x60]
   140046f1e:	mov    rdx,rbx
   140046f21:	mov    QWORD PTR [rsp+0x20],rax
   140046f26:	call   0x140046bc0
   140046f2b:	mov    WORD PTR [rbx+rdi*2-0x2],0x0
   140046f32:	cmp    eax,0xfffffffe
   140046f35:	jne    0x140046f51
   140046f37:	cmp    rsi,0xffffffffffffffff
   140046f3b:	jne    0x140046f55
   140046f3d:	call   0x140048680
   140046f42:	cmp    DWORD PTR [rax],0x22
   140046f45:	jne    0x140046f82
   140046f47:	call   0x140048680
   140046f4c:	mov    DWORD PTR [rax],r12d
   140046f4f:	jmp    0x140046f82
   140046f51:	test   eax,eax
   140046f53:	jns    0x140046f85
   140046f55:	cmp    eax,0xfffffffe
   140046f58:	mov    WORD PTR [rbx],0x0
   140046f5d:	jne    0x140046f82
   140046f5f:	call   0x140048680
   140046f64:	xor    r9d,r9d
   140046f67:	xor    r8d,r8d
   140046f6a:	xor    edx,edx
   140046f6c:	xor    ecx,ecx
   140046f6e:	mov    QWORD PTR [rsp+0x20],0x0
   140046f77:	mov    DWORD PTR [rax],0x22
   140046f7d:	call   0x14004e100
   140046f82:	or     eax,0xffffffff
   140046f85:	mov    r12,QWORD PTR [rsp+0x40]
   140046f8a:	mov    rbx,QWORD PTR [rsp+0x48]
   140046f8f:	mov    rbp,QWORD PTR [rsp+0x50]
   140046f94:	mov    rsi,QWORD PTR [rsp+0x58]
   140046f99:	add    rsp,0x30
   140046f9d:	pop    rdi
   140046f9e:	ret    
   140046f9f:	int3   
   140046fa0:	rex push rbx
   140046fa2:	sub    rsp,0x20
   140046fa6:	mov    eax,DWORD PTR [r8]
   140046fa9:	mov    rbx,rdx
   140046fac:	mov    r9,rcx
   140046faf:	mov    r11d,eax
   140046fb2:	mov    r10,rcx
   140046fb5:	and    r11d,0xfffffff8
   140046fb9:	test   al,0x4
   140046fbb:	je     0x140046fd0
   140046fbd:	mov    eax,DWORD PTR [r8+0x8]
   140046fc1:	movsxd r10,DWORD PTR [r8+0x4]
   140046fc5:	neg    eax
   140046fc7:	add    r10,rcx
   140046fca:	movsxd rcx,eax
   140046fcd:	and    r10,rcx
   140046fd0:	movsxd rax,r11d
   140046fd3:	mov    rdx,QWORD PTR [rax+r10*1]
   140046fd7:	mov    rax,QWORD PTR [rbx+0x10]
   140046fdb:	mov    ecx,DWORD PTR [rax+0x8]
   140046fde:	add    rcx,QWORD PTR [rbx+0x8]
   140046fe2:	movzx  eax,BYTE PTR [rcx+0x3]
   140046fe6:	test   al,0xf
   140046fe8:	je     0x140046ff5
   140046fea:	movzx  eax,al
   140046fed:	and    eax,0xfffffff0
   140046ff0:	cdqe   
   140046ff2:	add    r9,rax
   140046ff5:	xor    r9,rdx
   140046ff8:	mov    rcx,r9
   140046ffb:	add    rsp,0x20
   140046fff:	pop    rbx
   140047000:	jmp    0x140046470
   140047005:	int3   
   140047006:	int3   
   140047007:	int3   
   140047008:	int3   
   140047009:	int3   
   14004700a:	int3   
   14004700b:	int3   
   14004700c:	int3   
   14004700d:	int3   
   14004700e:	int3   
   14004700f:	int3   
   140047010:	sub    rsp,0x28
   140047014:	mov    rcx,QWORD PTR [r9+0x38]
   140047018:	mov    r10,r9
   14004701b:	mov    r8,rdx
   14004701e:	mov    eax,DWORD PTR [rcx]
   140047020:	mov    r9d,eax
   140047023:	and    r9d,0xfffffff8
   140047027:	test   al,0x4
   140047029:	je     0x14004703d
   14004702b:	mov    eax,DWORD PTR [rcx+0x8]
   14004702e:	movsxd r8,DWORD PTR [rcx+0x4]
   140047032:	neg    eax
   140047034:	add    r8,rdx
   140047037:	movsxd rcx,eax
   14004703a:	and    r8,rcx
   14004703d:	movsxd rax,r9d
   140047040:	mov    r9,QWORD PTR [rax+r8*1]
   140047044:	mov    rax,QWORD PTR [r10+0x10]
   140047048:	mov    ecx,DWORD PTR [rax+0x8]
   14004704b:	add    rcx,QWORD PTR [r10+0x8]
   14004704f:	movzx  eax,BYTE PTR [rcx+0x3]
   140047053:	test   al,0xf
   140047055:	je     0x140047062
   140047057:	movzx  eax,al
   14004705a:	and    eax,0xfffffff0
   14004705d:	cdqe   
   14004705f:	add    rdx,rax
   140047062:	xor    rdx,r9
   140047065:	mov    rcx,rdx
   140047068:	call   0x140046470
   14004706d:	mov    eax,0x1
   140047072:	add    rsp,0x28
   140047076:	ret    
   140047077:	int3   
   140047078:	int3   
   140047079:	int3   
   14004707a:	int3   
   14004707b:	int3   
   14004707c:	int3   
   14004707d:	int3   
   14004707e:	int3   
   14004707f:	int3   
   140047080:	sub    rsp,0x38
   140047084:	test   rcx,rcx
   140047087:	mov    r9,rcx
   14004708a:	je     0x14004709a
   14004708c:	test   rdx,rdx
   14004708f:	je     0x14004709a
   140047091:	test   r8,r8
   140047094:	jne    0x1400470d0
   140047096:	mov    WORD PTR [rcx],r8w
   14004709a:	call   0x140048680
   14004709f:	xor    r9d,r9d
   1400470a2:	xor    r8d,r8d
   1400470a5:	xor    edx,edx
   1400470a7:	xor    ecx,ecx
   1400470a9:	mov    QWORD PTR [rsp+0x20],0x0
   1400470b2:	mov    DWORD PTR [rax],0x16
   1400470b8:	call   0x14004e100
   1400470bd:	mov    eax,0x16
   1400470c2:	add    rsp,0x38
   1400470c6:	ret    
   1400470c7:	data16 xchg ax,ax
   1400470ca:	data16 xchg ax,ax
   1400470cd:	data16 xchg ax,ax
   1400470d0:	movzx  eax,WORD PTR [r8]
   1400470d4:	add    rcx,0x2
   1400470d8:	add    r8,0x2
   1400470dc:	test   ax,ax
   1400470df:	mov    WORD PTR [rcx-0x2],ax
   1400470e3:	je     0x1400470eb
   1400470e5:	sub    rdx,0x1
   1400470e9:	jne    0x1400470d0
   1400470eb:	test   rdx,rdx
   1400470ee:	jne    0x140047121
   1400470f0:	mov    WORD PTR [r9],dx
   1400470f4:	call   0x140048680
   1400470f9:	xor    r9d,r9d
   1400470fc:	xor    r8d,r8d
   1400470ff:	xor    edx,edx
   140047101:	xor    ecx,ecx
   140047103:	mov    DWORD PTR [rax],0x22
   140047109:	mov    QWORD PTR [rsp+0x20],0x0
   140047112:	call   0x14004e100
   140047117:	mov    eax,0x22
   14004711c:	add    rsp,0x38
   140047120:	ret    
   140047121:	xor    eax,eax
   140047123:	add    rsp,0x38
   140047127:	ret    
   140047128:	int3   
   140047129:	int3   
   14004712a:	int3   
   14004712b:	int3   
   14004712c:	int3   
   14004712d:	int3   
   14004712e:	int3   
   14004712f:	int3   
   140047130:	sub    rsp,0x38
   140047134:	test   rcx,rcx
   140047137:	mov    r9,rcx
   14004713a:	je     0x14004714a
   14004713c:	test   rdx,rdx
   14004713f:	je     0x14004714a
   140047141:	test   r8,r8
   140047144:	jne    0x140047177
   140047146:	mov    WORD PTR [rcx],r8w
   14004714a:	call   0x140048680
   14004714f:	xor    r9d,r9d
   140047152:	xor    r8d,r8d
   140047155:	xor    edx,edx
   140047157:	xor    ecx,ecx
   140047159:	mov    QWORD PTR [rsp+0x20],0x0
   140047162:	mov    DWORD PTR [rax],0x16
   140047168:	call   0x14004e100
   14004716d:	mov    eax,0x16
   140047172:	add    rsp,0x38
   140047176:	ret    
   140047177:	cmp    WORD PTR [rcx],0x0
   14004717b:	je     0x140047187
   14004717d:	add    rcx,0x2
   140047181:	sub    rdx,0x1
   140047185:	jne    0x140047177
   140047187:	test   rdx,rdx
   14004718a:	jne    0x1400471a0
   14004718c:	mov    WORD PTR [r9],dx
   140047190:	jmp    0x14004714a
   140047192:	xchg   ax,ax
   140047194:	data16 data16 xchg ax,ax
   140047198:	data16 data16 xchg ax,ax
   14004719c:	data16 data16 xchg ax,ax
   1400471a0:	movzx  eax,WORD PTR [r8]
   1400471a4:	add    rcx,0x2
   1400471a8:	add    r8,0x2
   1400471ac:	test   ax,ax
   1400471af:	mov    WORD PTR [rcx-0x2],ax
   1400471b3:	je     0x1400471bb
   1400471b5:	sub    rdx,0x1
   1400471b9:	jne    0x1400471a0
   1400471bb:	test   rdx,rdx
   1400471be:	jne    0x1400471f1
   1400471c0:	mov    WORD PTR [r9],dx
   1400471c4:	call   0x140048680
   1400471c9:	xor    r9d,r9d
   1400471cc:	xor    r8d,r8d
   1400471cf:	xor    edx,edx
   1400471d1:	xor    ecx,ecx
   1400471d3:	mov    DWORD PTR [rax],0x22
   1400471d9:	mov    QWORD PTR [rsp+0x20],0x0
   1400471e2:	call   0x14004e100
   1400471e7:	mov    eax,0x22
   1400471ec:	add    rsp,0x38
   1400471f0:	ret    
   1400471f1:	xor    eax,eax
   1400471f3:	add    rsp,0x38
   1400471f7:	ret    
   1400471f8:	int3   
   1400471f9:	int3   
   1400471fa:	int3   
   1400471fb:	int3   
   1400471fc:	int3   
   1400471fd:	int3   
   1400471fe:	int3   
   1400471ff:	int3   
   140047200:	sub    rsp,0x38
   140047204:	test   r9,r9
   140047207:	mov    r11,rdx
   14004720a:	mov    r10,rcx
   14004720d:	jne    0x140047220
   14004720f:	test   rcx,rcx
   140047212:	jne    0x140047225
   140047214:	test   rdx,rdx
   140047217:	jne    0x140047243
   140047219:	xor    eax,eax
   14004721b:	add    rsp,0x38
   14004721f:	ret    
   140047220:	test   rcx,rcx
   140047223:	je     0x140047243
   140047225:	test   rdx,rdx
   140047228:	je     0x140047243
   14004722a:	test   r9,r9
   14004722d:	jne    0x14004723a
   14004722f:	mov    WORD PTR [rcx],r9w
   140047233:	xor    eax,eax
   140047235:	add    rsp,0x38
   140047239:	ret    
   14004723a:	test   r8,r8
   14004723d:	jne    0x140047270
   14004723f:	mov    WORD PTR [rcx],r8w
   140047243:	call   0x140048680
   140047248:	xor    r9d,r9d
   14004724b:	xor    r8d,r8d
   14004724e:	xor    edx,edx
   140047250:	xor    ecx,ecx
   140047252:	mov    QWORD PTR [rsp+0x20],0x0
   14004725b:	mov    DWORD PTR [rax],0x16
   140047261:	call   0x14004e100
   140047266:	mov    eax,0x16
   14004726b:	add    rsp,0x38
   14004726f:	ret    
   140047270:	cmp    r9,0xffffffffffffffff
   140047274:	mov    rdx,rcx
   140047277:	mov    rcx,r11
   14004727a:	jne    0x1400472a0
   14004727c:	data16 data16 xchg ax,ax
   140047280:	movzx  eax,WORD PTR [r8]
   140047284:	add    rdx,0x2
   140047288:	add    r8,0x2
   14004728c:	test   ax,ax
   14004728f:	mov    WORD PTR [rdx-0x2],ax
   140047293:	je     0x1400472ca
   140047295:	sub    rcx,0x1
   140047299:	jne    0x140047280
   14004729b:	jmp    0x1400472ca
   14004729d:	data16 xchg ax,ax
   1400472a0:	movzx  eax,WORD PTR [r8]
   1400472a4:	add    rdx,0x2
   1400472a8:	add    r8,0x2
   1400472ac:	test   ax,ax
   1400472af:	mov    WORD PTR [rdx-0x2],ax
   1400472b3:	je     0x1400472c1
   1400472b5:	sub    rcx,0x1
   1400472b9:	je     0x1400472c1
   1400472bb:	sub    r9,0x1
   1400472bf:	jne    0x1400472a0
   1400472c1:	test   r9,r9
   1400472c4:	jne    0x1400472ca
   1400472c6:	mov    WORD PTR [rdx],r9w
   1400472ca:	test   rcx,rcx
   1400472cd:	jne    0x140047219
   1400472d3:	cmp    r9,0xffffffffffffffff
   1400472d7:	jne    0x1400472e7
   1400472d9:	mov    WORD PTR [r10+r11*2-0x2],cx
   1400472df:	lea    eax,[rcx+0x50]
   1400472e2:	add    rsp,0x38
   1400472e6:	ret    
   1400472e7:	mov    WORD PTR [r10],0x0
   1400472ed:	call   0x140048680
   1400472f2:	xor    r9d,r9d
   1400472f5:	xor    r8d,r8d
   1400472f8:	xor    edx,edx
   1400472fa:	xor    ecx,ecx
   1400472fc:	mov    DWORD PTR [rax],0x22
   140047302:	mov    QWORD PTR [rsp+0x20],0x0
   14004730b:	call   0x14004e100
   140047310:	mov    eax,0x22
   140047315:	add    rsp,0x38
   140047319:	ret    
   14004731a:	int3   
   14004731b:	int3   
   14004731c:	int3   
   14004731d:	int3   
   14004731e:	int3   
   14004731f:	int3   
   140047320:	mov    QWORD PTR [rsp+0x10],rdx
   140047325:	push   r12
   140047327:	push   r14
   140047329:	sub    rsp,0x68
   14004732d:	test   rcx,rcx
   140047330:	mov    r12d,r9d
   140047333:	mov    r14,r8
   140047336:	mov    BYTE PTR [rsp+0x48],0x0
   14004733b:	jne    0x1400473da
   140047341:	call   0x14004bd60
   140047346:	mov    QWORD PTR [rsp+0x40],rax
   14004734b:	mov    r11,rax
   14004734e:	mov    rcx,QWORD PTR [rax+0xc0]
   140047355:	cmp    rcx,QWORD PTR [rip+0x40544]        # 0x1400878a0
   14004735c:	mov    QWORD PTR [rsp+0x30],rcx
   140047361:	mov    rax,QWORD PTR [rax+0xb8]
   140047368:	mov    QWORD PTR [rsp+0x38],rax
   14004736d:	je     0x140047392
   14004736f:	mov    ecx,DWORD PTR [r11+0xc8]
   140047376:	test   DWORD PTR [rip+0x403ac],ecx        # 0x140087728
   14004737c:	jne    0x140047392
   14004737e:	call   0x14004f030
   140047383:	mov    r11,QWORD PTR [rsp+0x40]
   140047388:	mov    QWORD PTR [rsp+0x30],rax
   14004738d:	mov    rax,QWORD PTR [rsp+0x38]
   140047392:	cmp    rax,QWORD PTR [rip+0x40287]        # 0x140087620
   140047399:	je     0x1400473b9
   14004739b:	mov    eax,DWORD PTR [r11+0xc8]
   1400473a2:	test   DWORD PTR [rip+0x40380],eax        # 0x140087728
   1400473a8:	jne    0x1400473b9
   1400473aa:	call   0x14004e4e0
   1400473af:	mov    r11,QWORD PTR [rsp+0x40]
   1400473b4:	mov    QWORD PTR [rsp+0x38],rax
   1400473b9:	test   BYTE PTR [r11+0xc8],0x2
   1400473c1:	jne    0x1400473ef
   1400473c3:	or     DWORD PTR [r11+0xc8],0x2
   1400473cb:	mov    rdx,QWORD PTR [rsp+0x88]
   1400473d3:	mov    BYTE PTR [rsp+0x48],0x1
   1400473d8:	jmp    0x1400473f7
   1400473da:	mov    rax,QWORD PTR [rcx]
   1400473dd:	lea    r8,[rsp+0x30]
   1400473e2:	mov    QWORD PTR [r8],rax
   1400473e5:	mov    rax,QWORD PTR [rcx+0x8]
   1400473e9:	mov    QWORD PTR [r8+0x8],rax
   1400473ed:	jmp    0x1400473f7
   1400473ef:	mov    rdx,QWORD PTR [rsp+0x88]
   1400473f7:	test   r14,r14
   1400473fa:	je     0x1400473ff
   1400473fc:	mov    QWORD PTR [r14],rdx
   1400473ff:	test   rdx,rdx
   140047402:	jne    0x140047445
   140047404:	call   0x140048680
   140047409:	xor    r9d,r9d
   14004740c:	xor    r8d,r8d
   14004740f:	xor    edx,edx
   140047411:	xor    ecx,ecx
   140047413:	mov    QWORD PTR [rsp+0x20],0x0
   14004741c:	mov    DWORD PTR [rax],0x16
   140047422:	call   0x14004e100
   140047427:	cmp    BYTE PTR [rsp+0x48],0x0
   14004742c:	je     0x14004743a
   14004742e:	mov    rax,QWORD PTR [rsp+0x40]
   140047433:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14004743a:	xor    eax,eax
   14004743c:	add    rsp,0x68
   140047440:	pop    r14
   140047442:	pop    r12
   140047444:	ret    
   140047445:	test   r12d,r12d
   140047448:	je     0x140047456
   14004744a:	cmp    r12d,0x2
   14004744e:	jl     0x140047404
   140047450:	cmp    r12d,0x24
   140047454:	jg     0x140047404
   140047456:	mov    QWORD PTR [rsp+0x80],rbx
   14004745e:	movzx  ebx,WORD PTR [rdx]
   140047461:	mov    QWORD PTR [rsp+0x90],rbp
   140047469:	mov    QWORD PTR [rsp+0x98],rsi
   140047471:	mov    QWORD PTR [rsp+0x60],rdi
   140047476:	lea    rdi,[rdx+0x2]
   14004747a:	lea    r8,[rsp+0x30]
   14004747f:	movzx  ecx,bx
   140047482:	mov    dx,0x8
   140047486:	mov    QWORD PTR [rsp+0x58],r13
   14004748b:	xor    esi,esi
   14004748d:	mov    QWORD PTR [rsp+0x50],r15
   140047492:	call   0x140051a30
   140047497:	test   eax,eax
   140047499:	je     0x1400474bc
   14004749b:	xchg   ax,ax
   14004749d:	data16 xchg ax,ax
   1400474a0:	mov    bx,WORD PTR [rdi]
   1400474a3:	lea    r8,[rsp+0x30]
   1400474a8:	mov    dx,0x8
   1400474ac:	movzx  ecx,bx
   1400474af:	add    rdi,0x2
   1400474b3:	call   0x140051a30
   1400474b8:	test   eax,eax
   1400474ba:	jne    0x1400474a0
   1400474bc:	cmp    bx,0x2d
   1400474c0:	jne    0x1400474d5
   1400474c2:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400474c9:	mov    bx,WORD PTR [rdi]
   1400474cc:	or     ebp,0x2
   1400474cf:	add    rdi,0x2
   1400474d3:	jmp    0x1400474f2
   1400474d5:	cmp    bx,0x2b
   1400474d9:	jne    0x1400474eb
   1400474db:	mov    bx,WORD PTR [rdi]
   1400474de:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400474e5:	add    rdi,0x2
   1400474e9:	jmp    0x1400474f2
   1400474eb:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400474f2:	test   r12d,r12d
   1400474f5:	jne    0x14004752a
   1400474f7:	movzx  ecx,bx
   1400474fa:	call   0x140051850
   1400474ff:	test   eax,eax
   140047501:	je     0x14004750b
   140047503:	mov    r12d,0xa
   140047509:	jmp    0x140047553
   14004750b:	movzx  eax,WORD PTR [rdi]
   14004750e:	cmp    ax,0x78
   140047512:	je     0x140047522
   140047514:	cmp    ax,0x58
   140047518:	je     0x140047522
   14004751a:	mov    r12d,0x8
   140047520:	jmp    0x140047553
   140047522:	mov    r12d,0x10
   140047528:	jmp    0x140047530
   14004752a:	cmp    r12d,0x10
   14004752e:	jne    0x140047553
   140047530:	movzx  ecx,bx
   140047533:	call   0x140051850
   140047538:	test   eax,eax
   14004753a:	jne    0x140047553
   14004753c:	movzx  eax,WORD PTR [rdi]
   14004753f:	cmp    ax,0x78
   140047543:	je     0x14004754b
   140047545:	cmp    ax,0x58
   140047549:	jne    0x140047553
   14004754b:	mov    bx,WORD PTR [rdi+0x2]
   14004754f:	add    rdi,0x4
   140047553:	xor    edx,edx
   140047555:	or     eax,0xffffffff
   140047558:	div    r12d
   14004755b:	mov    r15d,edx
   14004755e:	mov    r13d,eax
   140047561:	movzx  ecx,bx
   140047564:	call   0x140051850
   140047569:	cmp    eax,0xffffffff
   14004756c:	jne    0x14004759a
   14004756e:	cmp    bx,0x41
   140047572:	jb     0x14004757a
   140047574:	cmp    bx,0x5a
   140047578:	jbe    0x140047583
   14004757a:	lea    eax,[rbx-0x61]
   14004757d:	cmp    ax,0x19
   140047581:	ja     0x1400475b9
   140047583:	lea    eax,[rbx-0x61]
   140047586:	cmp    ax,0x19
   14004758a:	ja     0x140047594
   14004758c:	movzx  eax,bx
   14004758f:	sub    eax,0x20
   140047592:	jmp    0x140047597
   140047594:	movzx  eax,bx
   140047597:	add    eax,0xffffffc9
   14004759a:	cmp    eax,r12d
   14004759d:	jae    0x1400475b9
   14004759f:	or     ebp,0x8
   1400475a2:	cmp    esi,r13d
   1400475a5:	jb     0x1400475e5
   1400475a7:	cmp    esi,r13d
   1400475aa:	jne    0x1400475b1
   1400475ac:	cmp    eax,r15d
   1400475af:	jbe    0x1400475e5
   1400475b1:	or     ebp,0x4
   1400475b4:	test   r14,r14
   1400475b7:	jne    0x1400475eb
   1400475b9:	mov    r15,QWORD PTR [rsp+0x50]
   1400475be:	mov    r13,QWORD PTR [rsp+0x58]
   1400475c3:	mov    rbx,QWORD PTR [rsp+0x80]
   1400475cb:	sub    rdi,0x2
   1400475cf:	test   bpl,0x8
   1400475d3:	jne    0x1400475f7
   1400475d5:	test   r14,r14
   1400475d8:	cmovne rdi,QWORD PTR [rsp+0x88]
   1400475e1:	xor    esi,esi
   1400475e3:	jmp    0x140047647
   1400475e5:	imul   esi,r12d
   1400475e9:	add    esi,eax
   1400475eb:	mov    bx,WORD PTR [rdi]
   1400475ee:	add    rdi,0x2
   1400475f2:	jmp    0x140047561
   1400475f7:	test   bpl,0x4
   1400475fb:	jne    0x14004761e
   1400475fd:	test   bpl,0x1
   140047601:	jne    0x140047647
   140047603:	mov    eax,ebp
   140047605:	and    eax,0x2
   140047608:	je     0x140047612
   14004760a:	cmp    esi,0x80000000
   140047610:	ja     0x14004761e
   140047612:	test   eax,eax
   140047614:	jne    0x140047647
   140047616:	cmp    esi,0x7fffffff
   14004761c:	jbe    0x140047647
   14004761e:	call   0x140048680
   140047623:	test   bpl,0x1
   140047627:	mov    DWORD PTR [rax],0x22
   14004762d:	je     0x140047634
   14004762f:	or     esi,0xffffffff
   140047632:	jmp    0x140047647
   140047634:	test   bpl,0x2
   140047638:	mov    esi,0x0
   14004763d:	setne  sil
   140047641:	add    esi,0x7fffffff
   140047647:	test   r14,r14
   14004764a:	je     0x14004764f
   14004764c:	mov    QWORD PTR [r14],rdi
   14004764f:	mov    rdi,QWORD PTR [rsp+0x60]
   140047654:	test   bpl,0x2
   140047658:	mov    rbp,QWORD PTR [rsp+0x90]
   140047660:	je     0x140047664
   140047662:	neg    esi
   140047664:	cmp    BYTE PTR [rsp+0x48],0x0
   140047669:	je     0x140047677
   14004766b:	mov    rcx,QWORD PTR [rsp+0x40]
   140047670:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140047677:	mov    eax,esi
   140047679:	mov    rsi,QWORD PTR [rsp+0x98]
   140047681:	add    rsp,0x68
   140047685:	pop    r14
   140047687:	pop    r12
   140047689:	ret    
   14004768a:	int3   
   14004768b:	int3   
   14004768c:	int3   
   14004768d:	int3   
   14004768e:	int3   
   14004768f:	int3   
   140047690:	sub    rsp,0x38
   140047694:	cmp    DWORD PTR [rip+0x45b05],0x0        # 0x14008d1a0
   14004769b:	mov    r9d,r8d
   14004769e:	mov    r8,rdx
   1400476a1:	mov    rdx,rcx
   1400476a4:	mov    DWORD PTR [rsp+0x20],0x0
   1400476ac:	jne    0x1400476bf
   1400476ae:	lea    rcx,[rip+0x401fb]        # 0x1400878b0
   1400476b5:	call   0x140047320
   1400476ba:	add    rsp,0x38
   1400476be:	ret    
   1400476bf:	xor    ecx,ecx
   1400476c1:	call   0x140047320
   1400476c6:	add    rsp,0x38
   1400476ca:	ret    
   1400476cb:	int3   
   1400476cc:	int3   
   1400476cd:	int3   
   1400476ce:	int3   
   1400476cf:	int3   
   1400476d0:	sub    rsp,0x38
   1400476d4:	cmp    DWORD PTR [rip+0x45ac5],0x0        # 0x14008d1a0
   1400476db:	mov    r9d,r8d
   1400476de:	mov    r8,rdx
   1400476e1:	mov    rdx,rcx
   1400476e4:	mov    DWORD PTR [rsp+0x20],0x1
   1400476ec:	jne    0x1400476ff
   1400476ee:	lea    rcx,[rip+0x401bb]        # 0x1400878b0
   1400476f5:	call   0x140047320
   1400476fa:	add    rsp,0x38
   1400476fe:	ret    
   1400476ff:	xor    ecx,ecx
   140047701:	call   0x140047320
   140047706:	add    rsp,0x38
   14004770a:	ret    
   14004770b:	int3   
   14004770c:	int3   
   14004770d:	int3   
   14004770e:	int3   
   14004770f:	int3   
   140047710:	int3   
   140047711:	int3   
   140047712:	int3   
   140047713:	int3   
   140047714:	int3   
   140047715:	int3   
   140047716:	data16 data16 xchg ax,ax
   14004771a:	data16 data16 xchg ax,ax
   14004771e:	xchg   ax,ax
   140047720:	mov    rax,rcx
   140047723:	cmp    r8,0x8
   140047727:	jb     0x14004777c
   140047729:	movzx  edx,dl
   14004772c:	movabs r9,0x101010101010101
   140047736:	imul   rdx,r9
   14004773a:	cmp    r8,0x40
   14004773e:	jb     0x14004775e
   140047740:	neg    rcx
   140047743:	and    ecx,0x7
   140047746:	je     0x14004774e
   140047748:	sub    r8,rcx
   14004774b:	mov    QWORD PTR [rax],rdx
   14004774e:	add    rcx,rax
   140047751:	mov    r9,r8
   140047754:	and    r8,0x3f
   140047758:	shr    r9,0x6
   14004775c:	jne    0x140047797
   14004775e:	mov    r9,r8
   140047761:	and    r8,0x7
   140047765:	shr    r9,0x3
   140047769:	je     0x14004777c
   14004776b:	data16 data16 xchg ax,ax
   14004776f:	nop
   140047770:	mov    QWORD PTR [rcx],rdx
   140047773:	add    rcx,0x8
   140047777:	dec    r9
   14004777a:	jne    0x140047770
   14004777c:	test   r8,r8
   14004777f:	je     0x14004778b
   140047781:	mov    BYTE PTR [rcx],dl
   140047783:	inc    rcx
   140047786:	dec    r8
   140047789:	jne    0x140047781
   14004778b:	ret    
   14004778c:	data16 data16 xchg ax,ax
   140047790:	data16 data16 xchg ax,ax
   140047794:	data16 xchg ax,ax
   140047797:	cmp    r9,0x1c00
   14004779e:	jae    0x1400477d0
   1400477a0:	mov    QWORD PTR [rcx],rdx
   1400477a3:	mov    QWORD PTR [rcx+0x8],rdx
   1400477a7:	mov    QWORD PTR [rcx+0x10],rdx
   1400477ab:	add    rcx,0x40
   1400477af:	mov    QWORD PTR [rcx-0x28],rdx
   1400477b3:	mov    QWORD PTR [rcx-0x20],rdx
   1400477b7:	dec    r9
   1400477ba:	mov    QWORD PTR [rcx-0x18],rdx
   1400477be:	mov    QWORD PTR [rcx-0x10],rdx
   1400477c2:	mov    QWORD PTR [rcx-0x8],rdx
   1400477c6:	jne    0x1400477a0
   1400477c8:	jmp    0x14004775e
   1400477ca:	data16 xchg ax,ax
   1400477cd:	data16 xchg ax,ax
   1400477d0:	movnti QWORD PTR [rcx],rdx
   1400477d4:	movnti QWORD PTR [rcx+0x8],rdx
   1400477d9:	movnti QWORD PTR [rcx+0x10],rdx
   1400477de:	add    rcx,0x40
   1400477e2:	movnti QWORD PTR [rcx-0x28],rdx
   1400477e7:	movnti QWORD PTR [rcx-0x20],rdx
   1400477ec:	dec    r9
   1400477ef:	movnti QWORD PTR [rcx-0x18],rdx
   1400477f4:	movnti QWORD PTR [rcx-0x10],rdx
   1400477f9:	movnti QWORD PTR [rcx-0x8],rdx
   1400477fe:	jne    0x1400477d0
   140047800:	lock or BYTE PTR [rsp],0x0
   140047805:	jmp    0x14004775e
   14004780a:	int3   
   14004780b:	int3   
   14004780c:	int3   
   14004780d:	int3   
   14004780e:	int3   
   14004780f:	int3   
   140047810:	mov    QWORD PTR [rsp+0x18],rbx
   140047815:	mov    QWORD PTR [rsp+0x20],rsi
   14004781a:	mov    QWORD PTR [rsp+0x10],rdx
   14004781f:	mov    QWORD PTR [rsp+0x8],rcx
   140047824:	push   rdi
   140047825:	push   r12
   140047827:	push   r13
   140047829:	sub    rsp,0x30
   14004782d:	mov    r13,r9
   140047830:	mov    esi,r8d
   140047833:	mov    r12,rdx
   140047836:	mov    rdi,rcx
   140047839:	xor    ebx,ebx
   14004783b:	mov    DWORD PTR [rsp+0x20],ebx
   14004783f:	mov    DWORD PTR [rsp+0x24],ebx
   140047843:	cmp    ebx,esi
   140047845:	jge    0x14004785e
   140047847:	mov    rcx,rdi
   14004784a:	call   r13
   14004784d:	add    rdi,r12
   140047850:	mov    QWORD PTR [rsp+0x50],rdi
   140047855:	add    ebx,0x1
   140047858:	mov    DWORD PTR [rsp+0x24],ebx
   14004785c:	jmp    0x140047843
   14004785e:	mov    DWORD PTR [rsp+0x20],0x1
   140047866:	mov    rbx,QWORD PTR [rsp+0x60]
   14004786b:	mov    rsi,QWORD PTR [rsp+0x68]
   140047870:	add    rsp,0x30
   140047874:	pop    r13
   140047876:	pop    r12
   140047878:	pop    rdi
   140047879:	ret    
   14004787a:	int3   
   14004787b:	int3   
   14004787c:	int3   
   14004787d:	int3   
   14004787e:	int3   
   14004787f:	int3   
   140047880:	rex push rbp
   140047882:	sub    rsp,0x20
   140047886:	mov    rbp,rdx
   140047889:	cmp    DWORD PTR [rbp+0x20],0x0
   14004788d:	jne    0x1400478a4
   14004788f:	mov    r9,QWORD PTR [rbp+0x70]
   140047893:	mov    r8d,DWORD PTR [rbp+0x24]
   140047897:	mov    rdx,QWORD PTR [rbp+0x58]
   14004789b:	mov    rcx,QWORD PTR [rbp+0x50]
   14004789f:	call   0x140045a90
   1400478a4:	add    rsp,0x20
   1400478a8:	pop    rbp
   1400478a9:	ret    
   1400478aa:	int3   
   1400478ab:	int3   
   1400478ac:	int3   
   1400478ad:	int3   
   1400478ae:	int3   
   1400478af:	int3   
   1400478b0:	int3   
   1400478b1:	int3   
   1400478b2:	int3   
   1400478b3:	int3   
   1400478b4:	int3   
   1400478b5:	int3   
   1400478b6:	data16 data16 xchg ax,ax
   1400478ba:	data16 data16 xchg ax,ax
   1400478be:	xchg   ax,ax
   1400478c0:	mov    r11,rcx
   1400478c3:	sub    rdx,rcx
   1400478c6:	jb     0x140047a6a
   1400478cc:	cmp    r8,0x8
   1400478d0:	jb     0x140047933
   1400478d2:	test   cl,0x7
   1400478d5:	je     0x14004790d
   1400478d7:	test   cl,0x1
   1400478da:	je     0x1400478e7
   1400478dc:	mov    al,BYTE PTR [rdx+rcx*1]
   1400478df:	dec    r8
   1400478e2:	mov    BYTE PTR [rcx],al
   1400478e4:	inc    rcx
   1400478e7:	test   cl,0x2
   1400478ea:	je     0x1400478fb
   1400478ec:	mov    ax,WORD PTR [rdx+rcx*1]
   1400478f0:	sub    r8,0x2
   1400478f4:	mov    WORD PTR [rcx],ax
   1400478f7:	add    rcx,0x2
   1400478fb:	test   cl,0x4
   1400478fe:	je     0x14004790d
   140047900:	mov    eax,DWORD PTR [rdx+rcx*1]
   140047903:	sub    r8,0x4
   140047907:	mov    DWORD PTR [rcx],eax
   140047909:	add    rcx,0x4
   14004790d:	mov    r9,r8
   140047910:	shr    r9,0x5
   140047914:	jne    0x140047967
   140047916:	mov    r9,r8
   140047919:	shr    r9,0x3
   14004791d:	je     0x140047933
   14004791f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140047923:	mov    QWORD PTR [rcx],rax
   140047926:	add    rcx,0x8
   14004792a:	dec    r9
   14004792d:	jne    0x14004791f
   14004792f:	and    r8,0x7
   140047933:	test   r8,r8
   140047936:	jne    0x140047940
   140047938:	mov    rax,r11
   14004793b:	ret    
   14004793c:	data16 data16 xchg ax,ax
   140047940:	mov    al,BYTE PTR [rdx+rcx*1]
   140047943:	mov    BYTE PTR [rcx],al
   140047945:	inc    rcx
   140047948:	dec    r8
   14004794b:	jne    0x140047940
   14004794d:	mov    rax,r11
   140047950:	ret    
   140047951:	data16 data16 xchg ax,ax
   140047955:	data16 data16 xchg ax,ax
   140047959:	data16 data16 xchg ax,ax
   14004795d:	data16 xchg ax,ax
   140047960:	data16 data16 xchg ax,ax
   140047964:	data16 xchg ax,ax
   140047967:	cmp    r9,0x2000
   14004796e:	jae    0x1400479b2
   140047970:	mov    rax,QWORD PTR [rdx+rcx*1]
   140047974:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140047979:	add    rcx,0x20
   14004797d:	mov    QWORD PTR [rcx-0x20],rax
   140047981:	mov    QWORD PTR [rcx-0x18],r10
   140047985:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14004798a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14004798f:	dec    r9
   140047992:	mov    QWORD PTR [rcx-0x10],rax
   140047996:	mov    QWORD PTR [rcx-0x8],r10
   14004799a:	jne    0x140047970
   14004799c:	and    r8,0x1f
   1400479a0:	jmp    0x140047916
   1400479a5:	data16 data16 xchg ax,ax
   1400479a9:	data16 data16 xchg ax,ax
   1400479ad:	data16 xchg ax,ax
   1400479b0:	xchg   ax,ax
   1400479b2:	cmp    rdx,0x1000
   1400479b9:	jb     0x140047970
   1400479bb:	mov    eax,0x20
   1400479c0:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400479c4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400479c9:	add    rcx,0x80
   1400479d0:	dec    eax
   1400479d2:	jne    0x1400479c0
   1400479d4:	sub    rcx,0x1000
   1400479db:	mov    eax,0x40
   1400479e0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400479e4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400479e9:	movnti QWORD PTR [rcx],r9
   1400479ed:	movnti QWORD PTR [rcx+0x8],r10
   1400479f2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400479f7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400479fc:	movnti QWORD PTR [rcx+0x10],r9
   140047a01:	movnti QWORD PTR [rcx+0x18],r10
   140047a06:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   140047a0b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140047a10:	add    rcx,0x40
   140047a14:	movnti QWORD PTR [rcx-0x20],r9
   140047a19:	movnti QWORD PTR [rcx-0x18],r10
   140047a1e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140047a23:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140047a28:	dec    eax
   140047a2a:	movnti QWORD PTR [rcx-0x10],r9
   140047a2f:	movnti QWORD PTR [rcx-0x8],r10
   140047a34:	jne    0x1400479e0
   140047a36:	sub    r8,0x1000
   140047a3d:	cmp    r8,0x1000
   140047a44:	jae    0x1400479bb
   140047a4a:	lock or BYTE PTR [rsp],0x0
   140047a4f:	jmp    0x14004790d
   140047a54:	data16 data16 xchg ax,ax
   140047a58:	data16 data16 xchg ax,ax
   140047a5c:	data16 data16 xchg ax,ax
   140047a60:	data16 data16 xchg ax,ax
   140047a64:	data16 data16 xchg ax,ax
   140047a68:	xchg   ax,ax
   140047a6a:	add    rcx,r8
   140047a6d:	cmp    r8,0x8
   140047a71:	jb     0x140047ad4
   140047a73:	test   cl,0x7
   140047a76:	je     0x140047aae
   140047a78:	test   cl,0x1
   140047a7b:	je     0x140047a88
   140047a7d:	dec    rcx
   140047a80:	mov    al,BYTE PTR [rdx+rcx*1]
   140047a83:	dec    r8
   140047a86:	mov    BYTE PTR [rcx],al
   140047a88:	test   cl,0x2
   140047a8b:	je     0x140047a9c
   140047a8d:	sub    rcx,0x2
   140047a91:	mov    ax,WORD PTR [rdx+rcx*1]
   140047a95:	sub    r8,0x2
   140047a99:	mov    WORD PTR [rcx],ax
   140047a9c:	test   cl,0x4
   140047a9f:	je     0x140047aae
   140047aa1:	sub    rcx,0x4
   140047aa5:	mov    eax,DWORD PTR [rdx+rcx*1]
   140047aa8:	sub    r8,0x4
   140047aac:	mov    DWORD PTR [rcx],eax
   140047aae:	mov    r9,r8
   140047ab1:	shr    r9,0x5
   140047ab5:	jne    0x140047b07
   140047ab7:	mov    r9,r8
   140047aba:	shr    r9,0x3
   140047abe:	je     0x140047ad4
   140047ac0:	sub    rcx,0x8
   140047ac4:	mov    rax,QWORD PTR [rdx+rcx*1]
   140047ac8:	dec    r9
   140047acb:	mov    QWORD PTR [rcx],rax
   140047ace:	jne    0x140047ac0
   140047ad0:	and    r8,0x7
   140047ad4:	test   r8,r8
   140047ad7:	jne    0x140047ae0
   140047ad9:	mov    rax,r11
   140047adc:	ret    
   140047add:	data16 xchg ax,ax
   140047ae0:	dec    rcx
   140047ae3:	mov    al,BYTE PTR [rdx+rcx*1]
   140047ae6:	dec    r8
   140047ae9:	mov    BYTE PTR [rcx],al
   140047aeb:	jne    0x140047ae0
   140047aed:	mov    rax,r11
   140047af0:	ret    
   140047af1:	data16 data16 xchg ax,ax
   140047af5:	data16 data16 xchg ax,ax
   140047af9:	data16 data16 xchg ax,ax
   140047afd:	data16 xchg ax,ax
   140047b00:	data16 data16 xchg ax,ax
   140047b04:	data16 xchg ax,ax
   140047b07:	cmp    r9,0x2000
   140047b0e:	jae    0x140047b52
   140047b10:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140047b15:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140047b1a:	sub    rcx,0x20
   140047b1e:	mov    QWORD PTR [rcx+0x18],rax
   140047b22:	mov    QWORD PTR [rcx+0x10],r10
   140047b26:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140047b2b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140047b2f:	dec    r9
   140047b32:	mov    QWORD PTR [rcx+0x8],rax
   140047b36:	mov    QWORD PTR [rcx],r10
   140047b39:	jne    0x140047b10
   140047b3b:	and    r8,0x1f
   140047b3f:	jmp    0x140047ab7
   140047b44:	data16 data16 xchg ax,ax
   140047b48:	data16 data16 xchg ax,ax
   140047b4c:	data16 data16 xchg ax,ax
   140047b50:	xchg   ax,ax
   140047b52:	cmp    rdx,0xfffffffffffff000
   140047b59:	ja     0x140047b10
   140047b5b:	mov    eax,0x20
   140047b60:	sub    rcx,0x80
   140047b67:	prefetchnta BYTE PTR [rdx+rcx*1]
   140047b6b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140047b70:	dec    eax
   140047b72:	jne    0x140047b60
   140047b74:	add    rcx,0x1000
   140047b7b:	mov    eax,0x40
   140047b80:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140047b85:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140047b8a:	movnti QWORD PTR [rcx-0x8],r9
   140047b8f:	movnti QWORD PTR [rcx-0x10],r10
   140047b94:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140047b99:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   140047b9e:	movnti QWORD PTR [rcx-0x18],r9
   140047ba3:	movnti QWORD PTR [rcx-0x20],r10
   140047ba8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   140047bad:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140047bb2:	sub    rcx,0x40
   140047bb6:	movnti QWORD PTR [rcx+0x18],r9
   140047bbb:	movnti QWORD PTR [rcx+0x10],r10
   140047bc0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140047bc5:	mov    r10,QWORD PTR [rdx+rcx*1]
   140047bc9:	dec    eax
   140047bcb:	movnti QWORD PTR [rcx+0x8],r9
   140047bd0:	movnti QWORD PTR [rcx],r10
   140047bd4:	jne    0x140047b80
   140047bd6:	sub    r8,0x1000
   140047bdd:	cmp    r8,0x1000
   140047be4:	jae    0x140047b5b
   140047bea:	lock or BYTE PTR [rsp],0x0
   140047bef:	jmp    0x140047aae
   140047bf4:	int3   
   140047bf5:	int3   
   140047bf6:	int3   
   140047bf7:	int3   
   140047bf8:	int3   
   140047bf9:	int3   
   140047bfa:	int3   
   140047bfb:	int3   
   140047bfc:	int3   
   140047bfd:	int3   
   140047bfe:	int3   
   140047bff:	int3   
   140047c00:	mov    QWORD PTR [rsp+0x18],r8
   140047c05:	mov    QWORD PTR [rsp+0x20],r9
   140047c0a:	sub    rsp,0x38
   140047c0e:	lea    rax,[rsp+0x58]
   140047c13:	xor    r9d,r9d
   140047c16:	mov    QWORD PTR [rsp+0x20],rax
   140047c1b:	call   0x140046d10
   140047c20:	add    rsp,0x38
   140047c24:	ret    
   140047c25:	int3   
   140047c26:	int3   
   140047c27:	int3   
   140047c28:	int3   
   140047c29:	int3   
   140047c2a:	int3   
   140047c2b:	int3   
   140047c2c:	int3   
   140047c2d:	int3   
   140047c2e:	int3   
   140047c2f:	int3   
   140047c30:	mov    QWORD PTR [rsp+0x20],r9
   140047c35:	sub    rsp,0x38
   140047c39:	lea    rax,[rsp+0x60]
   140047c3e:	mov    QWORD PTR [rsp+0x28],rax
   140047c43:	mov    QWORD PTR [rsp+0x20],0x0
   140047c4c:	call   0x140046e30
   140047c51:	add    rsp,0x38
   140047c55:	ret    
   140047c56:	int3   
   140047c57:	int3   
   140047c58:	int3   
   140047c59:	int3   
   140047c5a:	int3   
   140047c5b:	int3   
   140047c5c:	int3   
   140047c5d:	int3   
   140047c5e:	int3   
   140047c5f:	int3   
   140047c60:	mov    QWORD PTR [rsp+0x8],rbx
   140047c65:	push   rsi
   140047c66:	sub    rsp,0x30
   140047c6a:	or     esi,0xffffffff
   140047c6d:	test   rcx,rcx
   140047c70:	mov    rbx,rcx
   140047c73:	jne    0x140047ca1
   140047c75:	call   0x140048680
   140047c7a:	xor    r9d,r9d
   140047c7d:	xor    r8d,r8d
   140047c80:	xor    edx,edx
   140047c82:	xor    ecx,ecx
   140047c84:	mov    QWORD PTR [rsp+0x20],rbx
   140047c89:	mov    DWORD PTR [rax],0x16
   140047c8f:	call   0x14004e100
   140047c94:	or     eax,esi
   140047c96:	mov    rbx,QWORD PTR [rsp+0x40]
   140047c9b:	add    rsp,0x30
   140047c9f:	pop    rsi
   140047ca0:	ret    
   140047ca1:	test   BYTE PTR [rcx+0x18],0x83
   140047ca5:	je     0x140047ce4
   140047ca7:	call   0x140051ec0
   140047cac:	mov    rcx,rbx
   140047caf:	mov    esi,eax
   140047cb1:	call   0x140051e80
   140047cb6:	mov    rcx,rbx
   140047cb9:	call   0x140051e40
   140047cbe:	mov    ecx,eax
   140047cc0:	call   0x140051d10
   140047cc5:	test   eax,eax
   140047cc7:	jns    0x140047cce
   140047cc9:	or     esi,0xffffffff
   140047ccc:	jmp    0x140047ce4
   140047cce:	mov    rcx,QWORD PTR [rbx+0x28]
   140047cd2:	test   rcx,rcx
   140047cd5:	je     0x140047ce4
   140047cd7:	call   0x1400485c0
   140047cdc:	mov    QWORD PTR [rbx+0x28],0x0
   140047ce4:	mov    DWORD PTR [rbx+0x18],0x0
   140047ceb:	mov    rbx,QWORD PTR [rsp+0x40]
   140047cf0:	mov    eax,esi
   140047cf2:	add    rsp,0x30
   140047cf6:	pop    rsi
   140047cf7:	ret    
   140047cf8:	int3   
   140047cf9:	int3   
   140047cfa:	int3   
   140047cfb:	int3   
   140047cfc:	int3   
   140047cfd:	int3   
   140047cfe:	int3   
   140047cff:	int3   
   140047d00:	mov    QWORD PTR [rsp+0x10],rbx
   140047d05:	mov    QWORD PTR [rsp+0x8],rcx
   140047d0a:	push   rdi
   140047d0b:	sub    rsp,0x30
   140047d0f:	mov    rbx,rcx
   140047d12:	or     edi,0xffffffff
   140047d15:	xor    eax,eax
   140047d17:	test   rcx,rcx
   140047d1a:	setne  al
   140047d1d:	test   eax,eax
   140047d1f:	jne    0x140047d48
   140047d21:	call   0x140048680
   140047d26:	mov    DWORD PTR [rax],0x16
   140047d2c:	mov    QWORD PTR [rsp+0x20],0x0
   140047d35:	xor    r9d,r9d
   140047d38:	xor    r8d,r8d
   140047d3b:	xor    edx,edx
   140047d3d:	xor    ecx,ecx
   140047d3f:	call   0x14004e100
   140047d44:	mov    eax,edi
   140047d46:	jmp    0x140047d71
   140047d48:	test   BYTE PTR [rcx+0x18],0x40
   140047d4c:	je     0x140047d57
   140047d4e:	mov    DWORD PTR [rcx+0x18],0x0
   140047d55:	jmp    0x140047d6f
   140047d57:	call   0x1400522a0
   140047d5c:	nop
   140047d5d:	mov    rcx,rbx
   140047d60:	call   0x140047c60
   140047d65:	mov    edi,eax
   140047d67:	mov    rcx,rbx
   140047d6a:	call   0x140052350
   140047d6f:	mov    eax,edi
   140047d71:	mov    rbx,QWORD PTR [rsp+0x48]
   140047d76:	add    rsp,0x30
   140047d7a:	pop    rdi
   140047d7b:	ret    
   140047d7c:	int3   
   140047d7d:	int3   
   140047d7e:	int3   
   140047d7f:	int3   
   140047d80:	rex push rbp
   140047d82:	sub    rsp,0x30
   140047d86:	mov    rbp,rdx
   140047d89:	mov    rcx,QWORD PTR [rbp+0x40]
   140047d8d:	call   0x140052350
   140047d92:	add    rsp,0x30
   140047d96:	pop    rbp
   140047d97:	ret    
   140047d98:	int3   
   140047d99:	int3   
   140047d9a:	int3   
   140047d9b:	int3   
   140047d9c:	int3   
   140047d9d:	int3   
   140047d9e:	int3   
   140047d9f:	int3   
   140047da0:	mov    QWORD PTR [rsp+0x18],rbx
   140047da5:	push   rsi
   140047da6:	push   rdi
   140047da7:	push   r13
   140047da9:	sub    rsp,0x40
   140047dad:	mov    r13,r8
   140047db0:	mov    esi,edx
   140047db2:	mov    rbx,rcx
   140047db5:	mov    rdi,rcx
   140047db8:	test   rcx,rcx
   140047dbb:	jne    0x140047de7
   140047dbd:	test   edx,edx
   140047dbf:	je     0x140047de7
   140047dc1:	call   0x140048680
   140047dc6:	mov    DWORD PTR [rax],0x16
   140047dcc:	mov    QWORD PTR [rsp+0x20],rdi
   140047dd1:	xor    r9d,r9d
   140047dd4:	xor    r8d,r8d
   140047dd7:	xor    edx,edx
   140047dd9:	xor    ecx,ecx
   140047ddb:	call   0x14004e100
   140047de0:	xor    eax,eax
   140047de2:	jmp    0x140047ebc
   140047de7:	xor    eax,eax
   140047de9:	test   edx,edx
   140047deb:	setns  al
   140047dee:	test   eax,eax
   140047df0:	jne    0x140047e1c
   140047df2:	call   0x140048680
   140047df7:	mov    DWORD PTR [rax],0x16
   140047dfd:	mov    QWORD PTR [rsp+0x20],0x0
   140047e06:	xor    r9d,r9d
   140047e09:	xor    r8d,r8d
   140047e0c:	xor    edx,edx
   140047e0e:	xor    ecx,ecx
   140047e10:	call   0x14004e100
   140047e15:	xor    eax,eax
   140047e17:	jmp    0x140047ebc
   140047e1c:	xor    eax,eax
   140047e1e:	test   r8,r8
   140047e21:	setne  al
   140047e24:	test   eax,eax
   140047e26:	jne    0x140047e4f
   140047e28:	call   0x140048680
   140047e2d:	mov    DWORD PTR [rax],0x16
   140047e33:	mov    QWORD PTR [rsp+0x20],0x0
   140047e3c:	xor    r9d,r9d
   140047e3f:	xor    r8d,r8d
   140047e42:	xor    edx,edx
   140047e44:	xor    ecx,ecx
   140047e46:	call   0x14004e100
   140047e4b:	xor    eax,eax
   140047e4d:	jmp    0x140047ebc
   140047e4f:	test   edx,edx
   140047e51:	jne    0x140047e57
   140047e53:	xor    eax,eax
   140047e55:	jmp    0x140047ebc
   140047e57:	mov    QWORD PTR [rsp+0x60],r8
   140047e5c:	mov    rcx,r8
   140047e5f:	call   0x1400522a0
   140047e64:	nop
   140047e65:	test   rbx,rbx
   140047e68:	je     0x140047eb1
   140047e6a:	data16 xchg ax,ax
   140047e6d:	data16 xchg ax,ax
   140047e70:	sub    esi,0x1
   140047e73:	mov    DWORD PTR [rsp+0x68],esi
   140047e77:	je     0x140047eac
   140047e79:	mov    rcx,r13
   140047e7c:	call   0x1400523c0
   140047e81:	movzx  r11d,ax
   140047e85:	cmp    r11d,0xffff
   140047e8c:	jne    0x140047e97
   140047e8e:	cmp    rdi,rbx
   140047e91:	jne    0x140047eac
   140047e93:	xor    ebx,ebx
   140047e95:	jmp    0x140047eb1
   140047e97:	mov    WORD PTR [rdi],r11w
   140047e9b:	add    rdi,0x2
   140047e9f:	mov    QWORD PTR [rsp+0x30],rdi
   140047ea4:	cmp    r11d,0xa
   140047ea8:	je     0x140047eac
   140047eaa:	jmp    0x140047e70
   140047eac:	mov    WORD PTR [rdi],0x0
   140047eb1:	mov    rcx,r13
   140047eb4:	call   0x140052350
   140047eb9:	mov    rax,rbx
   140047ebc:	mov    rbx,QWORD PTR [rsp+0x70]
   140047ec1:	add    rsp,0x40
   140047ec5:	pop    r13
   140047ec7:	pop    rdi
   140047ec8:	pop    rsi
   140047ec9:	ret    
   140047eca:	int3   
   140047ecb:	int3   
   140047ecc:	int3   
   140047ecd:	int3   
   140047ece:	int3   
   140047ecf:	int3   
   140047ed0:	rex push rbp
   140047ed2:	sub    rsp,0x30
   140047ed6:	mov    rbp,rdx
   140047ed9:	mov    rcx,QWORD PTR [rbp+0x60]
   140047edd:	call   0x140052350
   140047ee2:	add    rsp,0x30
   140047ee6:	pop    rbp
   140047ee7:	ret    
   140047ee8:	int3   
   140047ee9:	int3   
   140047eea:	int3   
   140047eeb:	int3   
   140047eec:	int3   
   140047eed:	int3   
   140047eee:	int3   
   140047eef:	int3   
   140047ef0:	mov    QWORD PTR [rsp+0x10],rbx
   140047ef5:	mov    QWORD PTR [rsp+0x18],rsi
   140047efa:	mov    QWORD PTR [rsp+0x20],rdi
   140047eff:	push   r12
   140047f01:	sub    rsp,0x40
   140047f05:	mov    QWORD PTR [rsp+0x30],rsp
   140047f0a:	mov    r12d,r8d
   140047f0d:	mov    rdi,rdx
   140047f10:	mov    rsi,rcx
   140047f13:	xor    ebx,ebx
   140047f15:	mov    eax,ebx
   140047f17:	test   rcx,rcx
   140047f1a:	setne  al
   140047f1d:	test   eax,eax
   140047f1f:	jne    0x140047f47
   140047f21:	call   0x140048680
   140047f26:	mov    DWORD PTR [rax],0x16
   140047f2c:	mov    QWORD PTR [rsp+0x20],rbx
   140047f31:	xor    r9d,r9d
   140047f34:	xor    r8d,r8d
   140047f37:	xor    edx,edx
   140047f39:	xor    ecx,ecx
   140047f3b:	call   0x14004e100
   140047f40:	xor    eax,eax
   140047f42:	jmp    0x140048010
   140047f47:	mov    eax,ebx
   140047f49:	test   rdx,rdx
   140047f4c:	setne  al
   140047f4f:	test   eax,eax
   140047f51:	jne    0x140047f79
   140047f53:	call   0x140048680
   140047f58:	mov    DWORD PTR [rax],0x16
   140047f5e:	mov    QWORD PTR [rsp+0x20],rbx
   140047f63:	xor    r9d,r9d
   140047f66:	xor    r8d,r8d
   140047f69:	xor    edx,edx
   140047f6b:	xor    ecx,ecx
   140047f6d:	call   0x14004e100
   140047f72:	xor    eax,eax
   140047f74:	jmp    0x140048010
   140047f79:	mov    eax,ebx
   140047f7b:	cmp    WORD PTR [rdx],ax
   140047f7e:	setne  al
   140047f81:	test   eax,eax
   140047f83:	jne    0x140047fa8
   140047f85:	call   0x140048680
   140047f8a:	mov    DWORD PTR [rax],0x16
   140047f90:	mov    QWORD PTR [rsp+0x20],rbx
   140047f95:	xor    r9d,r9d
   140047f98:	xor    r8d,r8d
   140047f9b:	xor    edx,edx
   140047f9d:	xor    ecx,ecx
   140047f9f:	call   0x14004e100
   140047fa4:	xor    eax,eax
   140047fa6:	jmp    0x140048010
   140047fa8:	call   0x140052960
   140047fad:	mov    rbx,rax
   140047fb0:	mov    QWORD PTR [rsp+0x50],rax
   140047fb5:	test   rax,rax
   140047fb8:	jne    0x140047fc9
   140047fba:	call   0x140048680
   140047fbf:	mov    DWORD PTR [rax],0x18
   140047fc5:	xor    eax,eax
   140047fc7:	jmp    0x140048010
   140047fc9:	cmp    WORD PTR [rsi],0x0
   140047fcd:	jne    0x140047ff1
   140047fcf:	call   0x140048680
   140047fd4:	mov    DWORD PTR [rax],0x16
   140047fda:	lea    rdx,[rip+0xc]        # 0x140047fed
   140047fe1:	mov    rcx,QWORD PTR [rsp+0x30]
   140047fe6:	call   0x140052b10
   140047feb:	nop
   140047fec:	nop
   140047fed:	xor    eax,eax
   140047fef:	jmp    0x140048010
   140047ff1:	mov    r9,rax
   140047ff4:	mov    r8d,r12d
   140047ff7:	mov    rdx,rdi
   140047ffa:	mov    rcx,rsi
   140047ffd:	call   0x1400525f0
   140048002:	mov    rdi,rax
   140048005:	mov    rcx,rbx
   140048008:	call   0x140052350
   14004800d:	mov    rax,rdi
   140048010:	mov    rbx,QWORD PTR [rsp+0x58]
   140048015:	mov    rsi,QWORD PTR [rsp+0x60]
   14004801a:	mov    rdi,QWORD PTR [rsp+0x68]
   14004801f:	add    rsp,0x40
   140048023:	pop    r12
   140048025:	ret    
   140048026:	int3   
   140048027:	int3   
   140048028:	int3   
   140048029:	int3   
   14004802a:	int3   
   14004802b:	int3   
   14004802c:	int3   
   14004802d:	int3   
   14004802e:	int3   
   14004802f:	int3   
   140048030:	rex push rbp
   140048032:	sub    rsp,0x30
   140048036:	mov    rbp,rdx
   140048039:	mov    rcx,QWORD PTR [rbp+0x50]
   14004803d:	call   0x140052350
   140048042:	add    rsp,0x30
   140048046:	pop    rbp
   140048047:	ret    
   140048048:	int3   
   140048049:	int3   
   14004804a:	int3   
   14004804b:	int3   
   14004804c:	int3   
   14004804d:	int3   
   14004804e:	int3   
   14004804f:	int3   
   140048050:	rex push rbx
   140048052:	sub    rsp,0x30
   140048056:	test   rcx,rcx
   140048059:	mov    rax,r8
   14004805c:	mov    r9,rdx
   14004805f:	mov    rbx,rcx
   140048062:	jne    0x14004808c
   140048064:	call   0x140048680
   140048069:	xor    r9d,r9d
   14004806c:	xor    r8d,r8d
   14004806f:	xor    edx,edx
   140048071:	xor    ecx,ecx
   140048073:	mov    QWORD PTR [rsp+0x20],rbx
   140048078:	mov    DWORD PTR [rax],0x16
   14004807e:	call   0x14004e100
   140048083:	lea    eax,[rbx+0x16]
   140048086:	add    rsp,0x30
   14004808a:	pop    rbx
   14004808b:	ret    
   14004808c:	mov    r8d,0x80
   140048092:	mov    rdx,rax
   140048095:	mov    rcx,r9
   140048098:	call   0x140047ef0
   14004809d:	test   rax,rax
   1400480a0:	mov    QWORD PTR [rbx],rax
   1400480a3:	je     0x1400480ad
   1400480a5:	xor    eax,eax
   1400480a7:	add    rsp,0x30
   1400480ab:	pop    rbx
   1400480ac:	ret    
   1400480ad:	call   0x140048680
   1400480b2:	mov    eax,DWORD PTR [rax]
   1400480b4:	add    rsp,0x30
   1400480b8:	pop    rbx
   1400480b9:	ret    
   1400480ba:	int3   
   1400480bb:	int3   
   1400480bc:	int3   
   1400480bd:	int3   
   1400480be:	int3   
   1400480bf:	int3   
   1400480c0:	rex push rbx
   1400480c2:	sub    rsp,0x20
   1400480c6:	cmp    rcx,0xffffffffffffffe0
   1400480ca:	mov    rbx,rcx
   1400480cd:	ja     0x14004816e
   1400480d3:	mov    QWORD PTR [rsp+0x30],rsi
   1400480d8:	test   rcx,rcx
   1400480db:	mov    esi,0x1
   1400480e0:	cmovne rsi,rcx
   1400480e4:	mov    QWORD PTR [rsp+0x38],rdi
   1400480e9:	data16 xchg ax,ax
   1400480ec:	data16 data16 xchg ax,ax
   1400480f0:	mov    rcx,QWORD PTR [rip+0x44ae1]        # 0x14008cbd8
   1400480f7:	test   rcx,rcx
   1400480fa:	jne    0x14004811c
   1400480fc:	call   0x14004a8e0
   140048101:	mov    ecx,0x1e
   140048106:	call   0x14004a6a0
   14004810b:	mov    ecx,0xff
   140048110:	call   0x1400481c0
   140048115:	mov    rcx,QWORD PTR [rip+0x44abc]        # 0x14008cbd8
   14004811c:	mov    r8,rsi
   14004811f:	xor    edx,edx
   140048121:	call   QWORD PTR [rip+0x1c0f9]        # 0x140064220
   140048127:	test   rax,rax
   14004812a:	mov    rdi,rax
   14004812d:	jne    0x14004815b
   14004812f:	cmp    DWORD PTR [rip+0x450a3],eax        # 0x14008d1d8
   140048135:	je     0x140048145
   140048137:	mov    rcx,rbx
   14004813a:	call   0x140052b90
   14004813f:	test   eax,eax
   140048141:	jne    0x1400480f0
   140048143:	jmp    0x140048150
   140048145:	call   0x140048680
   14004814a:	mov    DWORD PTR [rax],0xc
   140048150:	call   0x140048680
   140048155:	mov    DWORD PTR [rax],0xc
   14004815b:	mov    rsi,QWORD PTR [rsp+0x30]
   140048160:	mov    rax,rdi
   140048163:	mov    rdi,QWORD PTR [rsp+0x38]
   140048168:	add    rsp,0x20
   14004816c:	pop    rbx
   14004816d:	ret    
   14004816e:	call   0x140052b90
   140048173:	call   0x140048680
   140048178:	mov    DWORD PTR [rax],0xc
   14004817e:	xor    eax,eax
   140048180:	add    rsp,0x20
   140048184:	pop    rbx
   140048185:	ret    
   140048186:	int3   
   140048187:	int3   
   140048188:	int3   
   140048189:	int3   
   14004818a:	int3   
   14004818b:	int3   
   14004818c:	int3   
   14004818d:	int3   
   14004818e:	int3   
   14004818f:	int3   
   140048190:	rex push rbx
   140048192:	sub    rsp,0x20
   140048196:	mov    ebx,ecx
   140048198:	call   0x14004a8e0
   14004819d:	mov    ecx,ebx
   14004819f:	call   0x14004a6a0
   1400481a4:	mov    rcx,QWORD PTR [rip+0x3ebd5]        # 0x140086d80
   1400481ab:	call   0x14004ba70
   1400481b0:	mov    ecx,0xff
   1400481b5:	add    rsp,0x20
   1400481b9:	pop    rbx
   1400481ba:	rex.W jmp rax
   1400481bd:	int3   
   1400481be:	int3   
   1400481bf:	int3   
   1400481c0:	rex push rbx
   1400481c2:	sub    rsp,0x20
   1400481c6:	mov    ebx,ecx
   1400481c8:	lea    rcx,[rip+0x264e9]        # 0x14006e6b8
   1400481cf:	call   QWORD PTR [rip+0x1c27b]        # 0x140064450
   1400481d5:	test   rax,rax
   1400481d8:	je     0x1400481f3
   1400481da:	lea    rdx,[rip+0x264c7]        # 0x14006e6a8
   1400481e1:	mov    rcx,rax
   1400481e4:	call   QWORD PTR [rip+0x1c3fe]        # 0x1400645e8
   1400481ea:	test   rax,rax
   1400481ed:	je     0x1400481f3
   1400481ef:	mov    ecx,ebx
   1400481f1:	call   rax
   1400481f3:	mov    ecx,ebx
   1400481f5:	call   QWORD PTR [rip+0x1c04d]        # 0x140064248
   1400481fb:	int3   
   1400481fc:	int3   
   1400481fd:	int3   
   1400481fe:	int3   
   1400481ff:	int3   
   140048200:	mov    ecx,0x8
   140048205:	jmp    0x140052e40
   14004820a:	int3   
   14004820b:	int3   
   14004820c:	int3   
   14004820d:	int3   
   14004820e:	int3   
   14004820f:	int3   
   140048210:	mov    ecx,0x8
   140048215:	jmp    0x140052d10
   14004821a:	int3   
   14004821b:	int3   
   14004821c:	int3   
   14004821d:	int3   
   14004821e:	int3   
   14004821f:	int3   
   140048220:	cmp    rcx,rdx
   140048223:	jae    0x140048252
   140048225:	mov    QWORD PTR [rsp+0x8],rbx
   14004822a:	push   rdi
   14004822b:	sub    rsp,0x20
   14004822f:	mov    rdi,rdx
   140048232:	mov    rbx,rcx
   140048235:	mov    rax,QWORD PTR [rbx]
   140048238:	test   rax,rax
   14004823b:	je     0x14004823f
   14004823d:	call   rax
   14004823f:	add    rbx,0x8
   140048243:	cmp    rbx,rdi
   140048246:	jb     0x140048235
   140048248:	mov    rbx,QWORD PTR [rsp+0x30]
   14004824d:	add    rsp,0x20
   140048251:	pop    rdi
   140048252:	ret    0x0
   140048255:	int3   
   140048256:	int3   
   140048257:	int3   
   140048258:	int3   
   140048259:	int3   
   14004825a:	int3   
   14004825b:	int3   
   14004825c:	int3   
   14004825d:	int3   
   14004825e:	int3   
   14004825f:	int3   
   140048260:	sub    rsp,0x38
   140048264:	test   rcx,rcx
   140048267:	jne    0x140048296
   140048269:	call   0x140048680
   14004826e:	xor    r9d,r9d
   140048271:	xor    r8d,r8d
   140048274:	xor    edx,edx
   140048276:	xor    ecx,ecx
   140048278:	mov    QWORD PTR [rsp+0x20],0x0
   140048281:	mov    DWORD PTR [rax],0x16
   140048287:	call   0x14004e100
   14004828c:	mov    eax,0x16
   140048291:	add    rsp,0x38
   140048295:	ret    
   140048296:	mov    eax,DWORD PTR [rip+0x44390]        # 0x14008c62c
   14004829c:	test   eax,eax
   14004829e:	je     0x140048269
   1400482a0:	mov    DWORD PTR [rcx],eax
   1400482a2:	xor    eax,eax
   1400482a4:	add    rsp,0x38
   1400482a8:	ret    
   1400482a9:	int3   
   1400482aa:	int3   
   1400482ab:	int3   
   1400482ac:	int3   
   1400482ad:	int3   
   1400482ae:	int3   
   1400482af:	int3   
   1400482b0:	sub    rsp,0x38
   1400482b4:	test   rcx,rcx
   1400482b7:	jne    0x1400482e6
   1400482b9:	call   0x140048680
   1400482be:	xor    r9d,r9d
   1400482c1:	xor    r8d,r8d
   1400482c4:	xor    edx,edx
   1400482c6:	xor    ecx,ecx
   1400482c8:	mov    QWORD PTR [rsp+0x20],0x0
   1400482d1:	mov    DWORD PTR [rax],0x16
   1400482d7:	call   0x14004e100
   1400482dc:	mov    eax,0x16
   1400482e1:	add    rsp,0x38
   1400482e5:	ret    
   1400482e6:	cmp    DWORD PTR [rip+0x4433f],0x0        # 0x14008c62c
   1400482ed:	je     0x1400482b9
   1400482ef:	mov    eax,DWORD PTR [rip+0x44343]        # 0x14008c638
   1400482f5:	mov    DWORD PTR [rcx],eax
   1400482f7:	xor    eax,eax
   1400482f9:	add    rsp,0x38
   1400482fd:	ret    
   1400482fe:	int3   
   1400482ff:	int3   
   140048300:	mov    QWORD PTR [rsp+0x8],rbx
   140048305:	push   rdi
   140048306:	sub    rsp,0x20
   14004830a:	cmp    QWORD PTR [rip+0x263fe],0x0        # 0x14006e710
   140048312:	mov    ebx,ecx
   140048314:	je     0x14004832e
   140048316:	lea    rcx,[rip+0x263f3]        # 0x14006e710
   14004831d:	call   0x140052f50
   140048322:	test   eax,eax
   140048324:	je     0x14004832e
   140048326:	mov    ecx,ebx
   140048328:	call   QWORD PTR [rip+0x263e2]        # 0x14006e710
   14004832e:	call   0x140052e90
   140048333:	lea    rbx,[rip+0x1ca36]        # 0x140064d70
   14004833a:	lea    rdi,[rip+0x1ca57]        # 0x140064d98
   140048341:	xor    eax,eax
   140048343:	cmp    rbx,rdi
   140048346:	jae    0x140048363
   140048348:	test   eax,eax
   14004834a:	jne    0x1400483c0
   14004834c:	mov    rcx,QWORD PTR [rbx]
   14004834f:	test   rcx,rcx
   140048352:	je     0x140048356
   140048354:	call   rcx
   140048356:	add    rbx,0x8
   14004835a:	cmp    rbx,rdi
   14004835d:	jb     0x140048348
   14004835f:	test   eax,eax
   140048361:	jne    0x1400483c0
   140048363:	lea    rcx,[rip+0x3506]        # 0x14004b870
   14004836a:	call   0x140046610
   14004836f:	lea    rbx,[rip+0x1c912]        # 0x140064c88
   140048376:	lea    rdi,[rip+0x1c9eb]        # 0x140064d68
   14004837d:	cmp    rbx,rdi
   140048380:	jae    0x140048395
   140048382:	mov    rax,QWORD PTR [rbx]
   140048385:	test   rax,rax
   140048388:	je     0x14004838c
   14004838a:	call   rax
   14004838c:	add    rbx,0x8
   140048390:	cmp    rbx,rdi
   140048393:	jb     0x140048382
   140048395:	cmp    QWORD PTR [rip+0x46583],0x0        # 0x14008e920
   14004839d:	je     0x1400483be
   14004839f:	lea    rcx,[rip+0x4657a]        # 0x14008e920
   1400483a6:	call   0x140052f50
   1400483ab:	test   eax,eax
   1400483ad:	je     0x1400483be
   1400483af:	xor    r8d,r8d
   1400483b2:	xor    ecx,ecx
   1400483b4:	lea    edx,[r8+0x2]
   1400483b8:	call   QWORD PTR [rip+0x46562]        # 0x14008e920
   1400483be:	xor    eax,eax
   1400483c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400483c5:	add    rsp,0x20
   1400483c9:	pop    rdi
   1400483ca:	ret    
   1400483cb:	int3   
   1400483cc:	int3   
   1400483cd:	int3   
   1400483ce:	int3   
   1400483cf:	int3   
   1400483d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400483d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400483da:	mov    DWORD PTR [rsp+0x18],r8d
   1400483df:	push   rdi
   1400483e0:	push   r12
   1400483e2:	push   r13
   1400483e4:	sub    rsp,0x30
   1400483e8:	mov    r12d,r8d
   1400483eb:	mov    ebx,edx
   1400483ed:	mov    r13d,ecx
   1400483f0:	mov    ecx,0x8
   1400483f5:	call   0x140052e40
   1400483fa:	nop
   1400483fb:	cmp    DWORD PTR [rip+0x4428a],0x1        # 0x14008c68c
   140048402:	je     0x1400484a4
   140048408:	mov    DWORD PTR [rip+0x44276],0x1        # 0x14008c688
   140048412:	mov    BYTE PTR [rip+0x4422b],r12b        # 0x14008c644
   140048419:	test   ebx,ebx
   14004841b:	jne    0x140048490
   14004841d:	mov    rcx,QWORD PTR [rip+0x464ec]        # 0x14008e910
   140048424:	call   0x14004ba70
   140048429:	mov    rsi,rax
   14004842c:	mov    rcx,QWORD PTR [rip+0x464d5]        # 0x14008e908
   140048433:	call   0x14004ba70
   140048438:	mov    rbx,rax
   14004843b:	mov    QWORD PTR [rsp+0x20],rax
   140048440:	test   rsi,rsi
   140048443:	je     0x14004847d
   140048445:	data16 data16 xchg ax,ax
   140048449:	data16 xchg ax,ax
   14004844c:	data16 data16 xchg ax,ax
   140048450:	sub    rbx,0x8
   140048454:	mov    QWORD PTR [rsp+0x20],rbx
   140048459:	cmp    rbx,rsi
   14004845c:	jb     0x14004847d
   14004845e:	cmp    QWORD PTR [rbx],0x0
   140048462:	je     0x14004847b
   140048464:	mov    rdi,QWORD PTR [rbx]
   140048467:	call   0x14004b980
   14004846c:	cmp    rdi,rax
   14004846f:	je     0x14004847b
   140048471:	mov    rcx,rdi
   140048474:	call   0x14004ba70
   140048479:	call   rax
   14004847b:	jmp    0x140048450
   14004847d:	lea    rdx,[rip+0x1c934]        # 0x140064db8
   140048484:	lea    rcx,[rip+0x1c915]        # 0x140064da0
   14004848b:	call   0x140048220
   140048490:	lea    rdx,[rip+0x1c931]        # 0x140064dc8
   140048497:	lea    rcx,[rip+0x1c922]        # 0x140064dc0
   14004849e:	call   0x140048220
   1400484a3:	nop
   1400484a4:	test   r12d,r12d
   1400484a7:	je     0x1400484b3
   1400484a9:	mov    ecx,0x8
   1400484ae:	call   0x140052d10
   1400484b3:	test   r12d,r12d
   1400484b6:	jne    0x1400484d5
   1400484b8:	mov    DWORD PTR [rip+0x441ca],0x1        # 0x14008c68c
   1400484c2:	lea    ecx,[r12+0x8]
   1400484c7:	call   0x140052d10
   1400484cc:	mov    ecx,r13d
   1400484cf:	call   0x1400481c0
   1400484d4:	int3   
   1400484d5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400484da:	mov    rsi,QWORD PTR [rsp+0x58]
   1400484df:	add    rsp,0x30
   1400484e3:	pop    r13
   1400484e5:	pop    r12
   1400484e7:	pop    rdi
   1400484e8:	ret    
   1400484e9:	int3   
   1400484ea:	int3   
   1400484eb:	int3   
   1400484ec:	int3   
   1400484ed:	int3   
   1400484ee:	int3   
   1400484ef:	int3   
   1400484f0:	rex push rbp
   1400484f2:	sub    rsp,0x20
   1400484f6:	mov    rbp,rdx
   1400484f9:	cmp    DWORD PTR [rbp+0x60],0x0
   1400484fd:	je     0x140048509
   1400484ff:	mov    ecx,0x8
   140048504:	call   0x140052d10
   140048509:	add    rsp,0x20
   14004850d:	pop    rbp
   14004850e:	ret    
   14004850f:	int3   
   140048510:	xor    r8d,r8d
   140048513:	xor    edx,edx
   140048515:	jmp    0x1400483d0
   14004851a:	int3   
   14004851b:	int3   
   14004851c:	int3   
   14004851d:	int3   
   14004851e:	int3   
   14004851f:	int3   
   140048520:	xor    r8d,r8d
   140048523:	lea    edx,[r8+0x1]
   140048527:	jmp    0x1400483d0
   14004852c:	int3   
   14004852d:	int3   
   14004852e:	int3   
   14004852f:	int3   
   140048530:	xor    edx,edx
   140048532:	xor    ecx,ecx
   140048534:	lea    r8d,[rdx+0x1]
   140048538:	jmp    0x1400483d0
   14004853d:	int3   
   14004853e:	int3   
   14004853f:	int3   
   140048540:	mov    edx,0x1
   140048545:	xor    ecx,ecx
   140048547:	mov    r8d,edx
   14004854a:	jmp    0x1400483d0
   14004854f:	int3   
   140048550:	rex push rbx
   140048552:	sub    rsp,0x20
   140048556:	call   0x14004b980
   14004855b:	mov    rcx,rax
   14004855e:	mov    rbx,rax
   140048561:	call   0x140052b80
   140048566:	mov    rcx,rbx
   140048569:	call   0x1400532c0
   14004856e:	mov    rcx,rbx
   140048571:	call   0x14004e050
   140048576:	mov    rcx,rbx
   140048579:	call   0x1400532b0
   14004857e:	mov    rcx,rbx
   140048581:	call   0x1400532a0
   140048586:	mov    rcx,rbx
   140048589:	call   0x140052fc0
   14004858e:	mov    rcx,rbx
   140048591:	call   0x1400014f0
   140048596:	mov    rcx,rbx
   140048599:	call   0x14004c2b0
   14004859e:	lea    rcx,[rip+0xffffffffffffff7b]        # 0x140048520
   1400485a5:	call   0x14004b8b0
   1400485aa:	mov    QWORD PTR [rip+0x3e7cf],rax        # 0x140086d80
   1400485b1:	add    rsp,0x20
   1400485b5:	pop    rbx
   1400485b6:	ret    
   1400485b7:	int3   
   1400485b8:	int3   
   1400485b9:	int3   
   1400485ba:	int3   
   1400485bb:	int3   
   1400485bc:	int3   
   1400485bd:	int3   
   1400485be:	int3   
   1400485bf:	int3   
   1400485c0:	sub    rsp,0x28
   1400485c4:	test   rcx,rcx
   1400485c7:	je     0x140048600
   1400485c9:	mov    r8,rcx
   1400485cc:	mov    rcx,QWORD PTR [rip+0x44605]        # 0x14008cbd8
   1400485d3:	xor    edx,edx
   1400485d5:	call   QWORD PTR [rip+0x1bc3d]        # 0x140064218
   1400485db:	test   eax,eax
   1400485dd:	jne    0x140048600
   1400485df:	mov    QWORD PTR [rsp+0x20],rbx
   1400485e4:	call   0x140048680
   1400485e9:	mov    rbx,rax
   1400485ec:	call   QWORD PTR [rip+0x1c00e]        # 0x140064600
   1400485f2:	mov    ecx,eax
   1400485f4:	call   0x140048630
   1400485f9:	mov    DWORD PTR [rbx],eax
   1400485fb:	mov    rbx,QWORD PTR [rsp+0x20]
   140048600:	add    rsp,0x28
   140048604:	ret    
   140048605:	int3   
   140048606:	int3   
   140048607:	int3   
   140048608:	int3   
   140048609:	int3   
   14004860a:	int3   
   14004860b:	int3   
   14004860c:	int3   
   14004860d:	int3   
   14004860e:	int3   
   14004860f:	int3   
   140048610:	mov    rax,rcx
   140048613:	movzx  edx,WORD PTR [rax]
   140048616:	add    rax,0x2
   14004861a:	test   dx,dx
   14004861d:	jne    0x140048613
   14004861f:	sub    rax,rcx
   140048622:	sar    rax,1
   140048625:	sub    rax,0x1
   140048629:	ret    
   14004862a:	int3   
   14004862b:	int3   
   14004862c:	int3   
   14004862d:	int3   
   14004862e:	int3   
   14004862f:	int3   
   140048630:	lea    r8,[rip+0x3e759]        # 0x140086d90
   140048637:	xor    edx,edx
   140048639:	mov    rax,r8
   14004863c:	data16 data16 xchg ax,ax
   140048640:	cmp    ecx,DWORD PTR [rax]
   140048642:	je     0x140048675
   140048644:	add    edx,0x1
   140048647:	add    rax,0x8
   14004864b:	cmp    edx,0x2d
   14004864e:	jb     0x140048640
   140048650:	lea    eax,[rcx-0x13]
   140048653:	cmp    eax,0x11
   140048656:	ja     0x14004865e
   140048658:	mov    eax,0xd
   14004865d:	ret    
   14004865e:	add    ecx,0xffffff44
   140048664:	mov    eax,0x16
   140048669:	mov    edx,0x8
   14004866e:	cmp    ecx,0xe
   140048671:	cmovbe eax,edx
   140048674:	ret    
   140048675:	movsxd rax,edx
   140048678:	mov    eax,DWORD PTR [r8+rax*8+0x4]
   14004867d:	ret    
   14004867e:	int3   
   14004867f:	int3   
   140048680:	sub    rsp,0x28
   140048684:	call   0x14004bcd0
   140048689:	test   rax,rax
   14004868c:	jne    0x14004869a
   14004868e:	lea    rax,[rip+0x3e863]        # 0x140086ef8
   140048695:	add    rsp,0x28
   140048699:	ret    
   14004869a:	add    rax,0x10
   14004869e:	add    rsp,0x28
   1400486a2:	ret    
   1400486a3:	int3   
   1400486a4:	int3   
   1400486a5:	int3   
   1400486a6:	int3   
   1400486a7:	int3   
   1400486a8:	int3   
   1400486a9:	int3   
   1400486aa:	int3   
   1400486ab:	int3   
   1400486ac:	int3   
   1400486ad:	int3   
   1400486ae:	int3   
   1400486af:	int3   
   1400486b0:	sub    rsp,0x28
   1400486b4:	call   0x14004bcd0
   1400486b9:	test   rax,rax
   1400486bc:	jne    0x1400486ca
   1400486be:	lea    rax,[rip+0x3e837]        # 0x140086efc
   1400486c5:	add    rsp,0x28
   1400486c9:	ret    
   1400486ca:	add    rax,0x14
   1400486ce:	add    rsp,0x28
   1400486d2:	ret    
   1400486d3:	int3   
   1400486d4:	int3   
   1400486d5:	int3   
   1400486d6:	int3   
   1400486d7:	int3   
   1400486d8:	int3   
   1400486d9:	int3   
   1400486da:	int3   
   1400486db:	int3   
   1400486dc:	int3   
   1400486dd:	int3   
   1400486de:	int3   
   1400486df:	int3   
   1400486e0:	rex push rbx
   1400486e2:	sub    rsp,0x20
   1400486e6:	mov    ebx,ecx
   1400486e8:	call   0x14004bcd0
   1400486ed:	test   rax,rax
   1400486f0:	jne    0x1400486fb
   1400486f2:	lea    rax,[rip+0x3e803]        # 0x140086efc
   1400486f9:	jmp    0x1400486ff
   1400486fb:	add    rax,0x14
   1400486ff:	lea    rdx,[rip+0x3e68a]        # 0x140086d90
   140048706:	mov    DWORD PTR [rax],ebx
   140048708:	xor    ecx,ecx
   14004870a:	mov    rax,rdx
   14004870d:	data16 xchg ax,ax
   140048710:	cmp    ebx,DWORD PTR [rax]
   140048712:	je     0x140048747
   140048714:	add    ecx,0x1
   140048717:	add    rax,0x8
   14004871b:	cmp    ecx,0x2d
   14004871e:	jb     0x140048710
   140048720:	lea    eax,[rbx-0x13]
   140048723:	cmp    eax,0x11
   140048726:	ja     0x14004872f
   140048728:	mov    ebx,0xd
   14004872d:	jmp    0x14004874e
   14004872f:	lea    eax,[rbx-0xbc]
   140048735:	mov    ecx,0x8
   14004873a:	mov    ebx,0x16
   14004873f:	cmp    eax,0xe
   140048742:	cmovbe ebx,ecx
   140048745:	jmp    0x14004874e
   140048747:	movsxd rax,ecx
   14004874a:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
   14004874e:	call   0x14004bcd0
   140048753:	test   rax,rax
   140048756:	jne    0x140048764
   140048758:	mov    DWORD PTR [rip+0x3e79a],ebx        # 0x140086ef8
   14004875e:	add    rsp,0x20
   140048762:	pop    rbx
   140048763:	ret    
   140048764:	mov    DWORD PTR [rax+0x10],ebx
   140048767:	add    rsp,0x20
   14004876b:	pop    rbx
   14004876c:	ret    
   14004876d:	int3   
   14004876e:	int3   
   14004876f:	int3   
   140048770:	mov    rax,rsp
   140048773:	mov    QWORD PTR [rax+0x10],rdx
   140048777:	mov    QWORD PTR [rax+0x18],r8
   14004877b:	mov    QWORD PTR [rax+0x20],r9
   14004877f:	push   rdi
   140048780:	sub    rsp,0x60
   140048784:	mov    r8,rcx
   140048787:	or     rcx,0xffffffffffffffff
   14004878b:	lea    r9,[rax+0x18]
   14004878f:	xor    eax,eax
   140048791:	mov    rdi,r8
   140048794:	repnz scas ax,WORD PTR es:[rdi]
   140048797:	not    rcx
   14004879a:	sub    rcx,0x1
   14004879e:	test   r8,r8
   1400487a1:	jne    0x1400487cf
   1400487a3:	call   0x140048680
   1400487a8:	xor    r9d,r9d
   1400487ab:	xor    r8d,r8d
   1400487ae:	xor    edx,edx
   1400487b0:	xor    ecx,ecx
   1400487b2:	mov    QWORD PTR [rsp+0x20],0x0
   1400487bb:	mov    DWORD PTR [rax],0x16
   1400487c1:	call   0x14004e100
   1400487c6:	or     eax,0xffffffff
   1400487c9:	add    rsp,0x60
   1400487cd:	pop    rdi
   1400487ce:	ret    
   1400487cf:	test   rdx,rdx
   1400487d2:	je     0x1400487a3
   1400487d4:	cmp    rcx,0x3fffffff
   1400487db:	mov    DWORD PTR [rsp+0x48],0x49
   1400487e3:	mov    QWORD PTR [rsp+0x40],r8
   1400487e8:	mov    QWORD PTR [rsp+0x30],r8
   1400487ed:	jbe    0x14004880a
   1400487ef:	lea    rcx,[rsp+0x30]
   1400487f4:	xor    r8d,r8d
   1400487f7:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   1400487ff:	call   0x140053460
   140048804:	add    rsp,0x60
   140048808:	pop    rdi
   140048809:	ret    
   14004880a:	lea    eax,[rcx+rcx*1]
   14004880d:	lea    rcx,[rsp+0x30]
   140048812:	xor    r8d,r8d
   140048815:	mov    DWORD PTR [rsp+0x38],eax
   140048819:	call   0x140053460
   14004881e:	add    rsp,0x60
   140048822:	pop    rdi
   140048823:	ret    
   140048824:	int3   
   140048825:	int3   
   140048826:	int3   
   140048827:	int3   
   140048828:	int3   
   140048829:	int3   
   14004882a:	int3   
   14004882b:	int3   
   14004882c:	int3   
   14004882d:	int3   
   14004882e:	int3   
   14004882f:	int3   
   140048830:	rex push rbx
   140048832:	sub    rsp,0x30
   140048836:	test   rcx,rcx
   140048839:	mov    rbx,rcx
   14004883c:	jne    0x140048846
   14004883e:	xor    eax,eax
   140048840:	add    rsp,0x30
   140048844:	pop    rbx
   140048845:	ret    
   140048846:	xor    eax,eax
   140048848:	or     rcx,0xffffffffffffffff
   14004884c:	mov    QWORD PTR [rsp+0x40],rsi
   140048851:	mov    QWORD PTR [rsp+0x48],rdi
   140048856:	mov    rdi,rbx
   140048859:	lea    edx,[rax+0x2]
   14004885c:	repnz scas ax,WORD PTR es:[rdi]
   14004885f:	not    rcx
   140048862:	lea    rsi,[rcx-0x1]
   140048866:	call   0x140048c80
   14004886b:	test   rax,rax
   14004886e:	mov    rdi,rax
   140048871:	je     0x1400488b1
   140048873:	lea    rdx,[rsi+0x1]
   140048877:	mov    r8,rbx
   14004887a:	mov    rcx,rax
   14004887d:	call   0x140047080
   140048882:	test   eax,eax
   140048884:	je     0x14004889e
   140048886:	xor    r9d,r9d
   140048889:	xor    r8d,r8d
   14004888c:	xor    edx,edx
   14004888e:	xor    ecx,ecx
   140048890:	mov    QWORD PTR [rsp+0x20],0x0
   140048899:	call   0x14004e060
   14004889e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400488a3:	mov    rax,rdi
   1400488a6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400488ab:	add    rsp,0x30
   1400488af:	pop    rbx
   1400488b0:	ret    
   1400488b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400488b6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400488bb:	xor    eax,eax
   1400488bd:	add    rsp,0x30
   1400488c1:	pop    rbx
   1400488c2:	ret    
   1400488c3:	int3   
   1400488c4:	int3   
   1400488c5:	int3   
   1400488c6:	int3   
   1400488c7:	int3   
   1400488c8:	int3   
   1400488c9:	int3   
   1400488ca:	int3   
   1400488cb:	int3   
   1400488cc:	int3   
   1400488cd:	int3   
   1400488ce:	int3   
   1400488cf:	int3   
   1400488d0:	int3   
   1400488d1:	int3   
   1400488d2:	int3   
   1400488d3:	int3   
   1400488d4:	int3   
   1400488d5:	int3   
   1400488d6:	data16 data16 xchg ax,ax
   1400488da:	data16 data16 xchg ax,ax
   1400488de:	xchg   ax,ax
   1400488e0:	sub    rdx,rcx
   1400488e3:	cmp    r8,0x8
   1400488e7:	jb     0x14004890b
   1400488e9:	test   cl,0x7
   1400488ec:	je     0x140048902
   1400488ee:	xchg   ax,ax
   1400488f0:	mov    al,BYTE PTR [rcx]
   1400488f2:	cmp    al,BYTE PTR [rdx+rcx*1]
   1400488f5:	jne    0x140048923
   1400488f7:	inc    rcx
   1400488fa:	dec    r8
   1400488fd:	test   cl,0x7
   140048900:	jne    0x1400488f0
   140048902:	mov    r9,r8
   140048905:	shr    r9,0x3
   140048909:	jne    0x14004892a
   14004890b:	test   r8,r8
   14004890e:	je     0x14004891f
   140048910:	mov    al,BYTE PTR [rcx]
   140048912:	cmp    al,BYTE PTR [rdx+rcx*1]
   140048915:	jne    0x140048923
   140048917:	inc    rcx
   14004891a:	dec    r8
   14004891d:	jne    0x140048910
   14004891f:	xor    rax,rax
   140048922:	ret    
   140048923:	sbb    eax,eax
   140048925:	sbb    eax,0xffffffff
   140048928:	ret    
   140048929:	nop
   14004892a:	shr    r9,0x2
   14004892e:	je     0x140048967
   140048930:	mov    rax,QWORD PTR [rcx]
   140048933:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140048937:	jne    0x140048994
   140048939:	mov    rax,QWORD PTR [rcx+0x8]
   14004893d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140048942:	jne    0x140048990
   140048944:	mov    rax,QWORD PTR [rcx+0x10]
   140048948:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14004894d:	jne    0x14004898c
   14004894f:	mov    rax,QWORD PTR [rcx+0x18]
   140048953:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140048958:	jne    0x140048988
   14004895a:	add    rcx,0x20
   14004895e:	dec    r9
   140048961:	jne    0x140048930
   140048963:	and    r8,0x1f
   140048967:	mov    r9,r8
   14004896a:	shr    r9,0x3
   14004896e:	je     0x14004890b
   140048970:	mov    rax,QWORD PTR [rcx]
   140048973:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140048977:	jne    0x140048994
   140048979:	add    rcx,0x8
   14004897d:	dec    r9
   140048980:	jne    0x140048970
   140048982:	and    r8,0x7
   140048986:	jmp    0x14004890b
   140048988:	add    rcx,0x8
   14004898c:	add    rcx,0x8
   140048990:	add    rcx,0x8
   140048994:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140048998:	bswap  rax
   14004899b:	bswap  rcx
   14004899e:	cmp    rax,rcx
   1400489a1:	sbb    eax,eax
   1400489a3:	sbb    eax,0xffffffff
   1400489a6:	ret    
   1400489a7:	int3   
   1400489a8:	int3   
   1400489a9:	int3   
   1400489aa:	int3   
   1400489ab:	int3   
   1400489ac:	int3   
   1400489ad:	int3   
   1400489ae:	int3   
   1400489af:	int3   
   1400489b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400489b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400489ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400489bf:	mov    QWORD PTR [rsp+0x10],rdx
   1400489c4:	push   rdi
   1400489c5:	push   r12
   1400489c7:	push   r13
   1400489c9:	push   r14
   1400489cb:	push   r15
   1400489cd:	sub    rsp,0x40
   1400489d1:	mov    r14,QWORD PTR [r9+0x8]
   1400489d5:	mov    rbp,QWORD PTR [r9]
   1400489d8:	mov    r13,QWORD PTR [r9+0x38]
   1400489dc:	sub    rbp,r14
   1400489df:	xor    edi,edi
   1400489e1:	test   BYTE PTR [rcx+0x4],0x66
   1400489e5:	mov    r15,r9
   1400489e8:	mov    rsi,rdx
   1400489eb:	mov    r12,rcx
   1400489ee:	jne    0x140048ada
   1400489f4:	mov    QWORD PTR [rsp+0x30],rcx
   1400489f9:	mov    QWORD PTR [rsp+0x38],r8
   1400489fe:	cmp    DWORD PTR [r13+0x0],edi
   140048a02:	jbe    0x140048b43
   140048a08:	lea    rbx,[r13+0xc]
   140048a0c:	data16 data16 xchg ax,ax
   140048a10:	mov    eax,DWORD PTR [rbx-0x8]
   140048a13:	cmp    rbp,rax
   140048a16:	jb     0x140048ac3
   140048a1c:	mov    eax,DWORD PTR [rbx-0x4]
   140048a1f:	cmp    rbp,rax
   140048a22:	jae    0x140048ac3
   140048a28:	cmp    DWORD PTR [rbx+0x4],0x0
   140048a2c:	je     0x140048ac3
   140048a32:	mov    eax,DWORD PTR [rbx]
   140048a34:	cmp    eax,0x1
   140048a37:	je     0x140048a50
   140048a39:	lea    rcx,[rsp+0x30]
   140048a3e:	add    rax,r14
   140048a41:	mov    rdx,rsi
   140048a44:	call   rax
   140048a46:	test   eax,eax
   140048a48:	js     0x140048ad6
   140048a4e:	jle    0x140048ac3
   140048a50:	cmp    DWORD PTR [r12],0xe06d7363
   140048a58:	jne    0x140048a82
   140048a5a:	cmp    QWORD PTR [rip+0x26316],0x0        # 0x14006ed78
   140048a62:	je     0x140048a82
   140048a64:	lea    rcx,[rip+0x2630d]        # 0x14006ed78
   140048a6b:	call   0x140052f50
   140048a70:	test   eax,eax
   140048a72:	je     0x140048a82
   140048a74:	mov    edx,0x1
   140048a79:	mov    rcx,r12
   140048a7c:	call   QWORD PTR [rip+0x262f6]        # 0x14006ed78
   140048a82:	mov    ecx,DWORD PTR [rbx+0x4]
   140048a85:	mov    r8d,0x1
   140048a8b:	mov    rdx,rsi
   140048a8e:	add    rcx,r14
   140048a91:	call   0x140052b40
   140048a96:	mov    rax,QWORD PTR [r15+0x40]
   140048a9a:	mov    edx,DWORD PTR [rbx+0x4]
   140048a9d:	movsxd r9,DWORD PTR [r12]
   140048aa1:	mov    QWORD PTR [rsp+0x28],rax
   140048aa6:	mov    rax,QWORD PTR [r15+0x28]
   140048aaa:	add    rdx,r14
   140048aad:	mov    r8,r12
   140048ab0:	mov    rcx,rsi
   140048ab3:	mov    QWORD PTR [rsp+0x20],rax
   140048ab8:	call   QWORD PTR [rip+0x1b782]        # 0x140064240
   140048abe:	call   0x140052b70
   140048ac3:	add    edi,0x1
   140048ac6:	add    rbx,0x10
   140048aca:	cmp    edi,DWORD PTR [r13+0x0]
   140048ace:	jb     0x140048a10
   140048ad4:	jmp    0x140048b43
   140048ad6:	xor    eax,eax
   140048ad8:	jmp    0x140048b48
   140048ada:	mov    rsi,QWORD PTR [r9+0x20]
   140048ade:	sub    rsi,r14
   140048ae1:	cmp    DWORD PTR [r13+0x0],edi
   140048ae5:	jbe    0x140048b43
   140048ae7:	lea    rbx,[r13+0x10]
   140048aeb:	xchg   ax,ax
   140048aed:	data16 xchg ax,ax
   140048af0:	mov    ecx,DWORD PTR [rbx-0xc]
   140048af3:	cmp    rbp,rcx
   140048af6:	jb     0x140048b36
   140048af8:	mov    eax,DWORD PTR [rbx-0x8]
   140048afb:	cmp    rbp,rax
   140048afe:	jae    0x140048b36
   140048b00:	cmp    rsi,rcx
   140048b03:	jb     0x140048b12
   140048b05:	cmp    rsi,rax
   140048b08:	ja     0x140048b12
   140048b0a:	test   BYTE PTR [r12+0x4],0x20
   140048b10:	jne    0x140048b43
   140048b12:	mov    ecx,DWORD PTR [rbx]
   140048b14:	test   ecx,ecx
   140048b16:	je     0x140048b1f
   140048b18:	cmp    rsi,rcx
   140048b1b:	je     0x140048b43
   140048b1d:	jmp    0x140048b36
   140048b1f:	mov    rdx,QWORD PTR [rsp+0x78]
   140048b24:	add    rax,r14
   140048b27:	mov    cl,0x1
   140048b29:	mov    QWORD PTR [r15],rax
   140048b2c:	mov    r8d,DWORD PTR [rbx-0x4]
   140048b30:	add    r8,r14
   140048b33:	call   r8
   140048b36:	add    edi,0x1
   140048b39:	add    rbx,0x10
   140048b3d:	cmp    edi,DWORD PTR [r13+0x0]
   140048b41:	jb     0x140048af0
   140048b43:	mov    eax,0x1
   140048b48:	lea    r11,[rsp+0x40]
   140048b4d:	mov    rbx,QWORD PTR [r11+0x30]
   140048b51:	mov    rbp,QWORD PTR [r11+0x40]
   140048b55:	mov    rsi,QWORD PTR [r11+0x48]
   140048b59:	mov    rsp,r11
   140048b5c:	pop    r15
   140048b5e:	pop    r14
   140048b60:	pop    r13
   140048b62:	pop    r12
   140048b64:	pop    rdi
   140048b65:	ret    
   140048b66:	int3   
   140048b67:	int3   
   140048b68:	int3   
   140048b69:	int3   
   140048b6a:	int3   
   140048b6b:	int3   
   140048b6c:	int3   
   140048b6d:	int3   
   140048b6e:	int3   
   140048b6f:	int3   
   140048b70:	movzx  r8d,WORD PTR [rdx]
   140048b74:	movzx  eax,WORD PTR [rcx]
   140048b77:	sub    eax,r8d
   140048b7a:	jne    0x140048b9c
   140048b7c:	data16 data16 xchg ax,ax
   140048b80:	test   r8w,r8w
   140048b84:	je     0x140048b9c
   140048b86:	movzx  r8d,WORD PTR [rdx+0x2]
   140048b8b:	movzx  eax,WORD PTR [rcx+0x2]
   140048b8f:	add    rcx,0x2
   140048b93:	add    rdx,0x2
   140048b97:	sub    eax,r8d
   140048b9a:	je     0x140048b80
   140048b9c:	test   eax,eax
   140048b9e:	jns    0x140048ba4
   140048ba0:	or     eax,0xffffffff
   140048ba3:	ret    
   140048ba4:	mov    ecx,0x1
   140048ba9:	test   eax,eax
   140048bab:	cmovg  eax,ecx
   140048bae:	ret    
   140048baf:	int3   
   140048bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140048bb5:	push   rdi
   140048bb6:	sub    rsp,0x30
   140048bba:	test   rcx,rcx
   140048bbd:	mov    rdi,r8
   140048bc0:	mov    rbx,rdx
   140048bc3:	je     0x140048c06
   140048bc5:	xor    edx,edx
   140048bc7:	mov    rax,0xffffffffffffffe0
   140048bce:	div    rcx
   140048bd1:	cmp    rax,rbx
   140048bd4:	jae    0x140048c06
   140048bd6:	call   0x140048680
   140048bdb:	xor    r9d,r9d
   140048bde:	xor    r8d,r8d
   140048be1:	xor    edx,edx
   140048be3:	xor    ecx,ecx
   140048be5:	mov    QWORD PTR [rsp+0x20],0x0
   140048bee:	mov    DWORD PTR [rax],0xc
   140048bf4:	call   0x14004e100
   140048bf9:	xor    eax,eax
   140048bfb:	mov    rbx,QWORD PTR [rsp+0x40]
   140048c00:	add    rsp,0x30
   140048c04:	pop    rdi
   140048c05:	ret    
   140048c06:	imul   rbx,rcx
   140048c0a:	mov    eax,0x1
   140048c0f:	test   rbx,rbx
   140048c12:	cmove  rbx,rax
   140048c16:	xor    eax,eax
   140048c18:	cmp    rbx,0xffffffffffffffe0
   140048c1c:	ja     0x140048c36
   140048c1e:	mov    rcx,QWORD PTR [rip+0x43fb3]        # 0x14008cbd8
   140048c25:	lea    edx,[rax+0x8]
   140048c28:	mov    r8,rbx
   140048c2b:	call   QWORD PTR [rip+0x1b5ef]        # 0x140064220
   140048c31:	test   rax,rax
   140048c34:	jne    0x140048c6e
   140048c36:	cmp    DWORD PTR [rip+0x4459b],0x0        # 0x14008d1d8
   140048c3d:	je     0x140048c63
   140048c3f:	mov    rcx,rbx
   140048c42:	call   0x140052b90
   140048c47:	test   eax,eax
   140048c49:	jne    0x140048c16
   140048c4b:	test   rdi,rdi
   140048c4e:	je     0x140048c56
   140048c50:	mov    DWORD PTR [rdi],0xc
   140048c56:	xor    eax,eax
   140048c58:	mov    rbx,QWORD PTR [rsp+0x40]
   140048c5d:	add    rsp,0x30
   140048c61:	pop    rdi
   140048c62:	ret    
   140048c63:	test   rdi,rdi
   140048c66:	je     0x140048c6e
   140048c68:	mov    DWORD PTR [rdi],0xc
   140048c6e:	mov    rbx,QWORD PTR [rsp+0x40]
   140048c73:	add    rsp,0x30
   140048c77:	pop    rdi
   140048c78:	ret    
   140048c79:	int3   
   140048c7a:	int3   
   140048c7b:	int3   
   140048c7c:	int3   
   140048c7d:	int3   
   140048c7e:	int3   
   140048c7f:	int3   
   140048c80:	mov    QWORD PTR [rsp+0x8],rbx
   140048c85:	mov    QWORD PTR [rsp+0x10],rsi
   140048c8a:	push   rdi
   140048c8b:	sub    rsp,0x30
   140048c8f:	xor    ebx,ebx
   140048c91:	test   rcx,rcx
   140048c94:	mov    r8,rdx
   140048c97:	mov    esi,ebx
   140048c99:	mov    rdi,rcx
   140048c9c:	je     0x140048ce2
   140048c9e:	xor    edx,edx
   140048ca0:	mov    rax,0xffffffffffffffe0
   140048ca7:	div    rdi
   140048caa:	cmp    rax,r8
   140048cad:	jae    0x140048ce2
   140048caf:	call   0x140048680
   140048cb4:	mov    esi,0xc
   140048cb9:	xor    r9d,r9d
   140048cbc:	xor    r8d,r8d
   140048cbf:	xor    edx,edx
   140048cc1:	xor    ecx,ecx
   140048cc3:	mov    DWORD PTR [rax],esi
   140048cc5:	mov    QWORD PTR [rsp+0x20],rbx
   140048cca:	call   0x14004e100
   140048ccf:	mov    rax,rbx
   140048cd2:	mov    rbx,QWORD PTR [rsp+0x40]
   140048cd7:	mov    rsi,QWORD PTR [rsp+0x48]
   140048cdc:	add    rsp,0x30
   140048ce0:	pop    rdi
   140048ce1:	ret    
   140048ce2:	imul   rdi,r8
   140048ce6:	mov    eax,0x1
   140048ceb:	test   rdi,rdi
   140048cee:	cmove  rdi,rax
   140048cf2:	cmp    rdi,0xffffffffffffffe0
   140048cf6:	mov    rax,rbx
   140048cf9:	ja     0x140048d15
   140048cfb:	mov    rcx,QWORD PTR [rip+0x43ed6]        # 0x14008cbd8
   140048d02:	mov    r8,rdi
   140048d05:	mov    edx,0x8
   140048d0a:	call   QWORD PTR [rip+0x1b510]        # 0x140064220
   140048d10:	test   rax,rax
   140048d13:	jne    0x140048d33
   140048d15:	cmp    DWORD PTR [rip+0x444bd],ebx        # 0x14008d1d8
   140048d1b:	je     0x140048d2e
   140048d1d:	mov    rcx,rdi
   140048d20:	call   0x140052b90
   140048d25:	test   eax,eax
   140048d27:	jne    0x140048cf2
   140048d29:	lea    esi,[rax+0xc]
   140048d2c:	jmp    0x140048d3f
   140048d2e:	mov    esi,0xc
   140048d33:	test   rax,rax
   140048d36:	mov    rbx,rax
   140048d39:	jne    0x140048d53
   140048d3b:	test   esi,esi
   140048d3d:	je     0x140048d53
   140048d3f:	call   0x140048680
   140048d44:	test   rax,rax
   140048d47:	je     0x140048d50
   140048d49:	call   0x140048680
   140048d4e:	mov    DWORD PTR [rax],esi
   140048d50:	mov    rax,rbx
   140048d53:	mov    rbx,QWORD PTR [rsp+0x40]
   140048d58:	mov    rsi,QWORD PTR [rsp+0x48]
   140048d5d:	add    rsp,0x30
   140048d61:	pop    rdi
   140048d62:	ret    
   140048d63:	int3   
   140048d64:	int3   
   140048d65:	int3   
   140048d66:	int3   
   140048d67:	int3   
   140048d68:	int3   
   140048d69:	int3   
   140048d6a:	int3   
   140048d6b:	int3   
   140048d6c:	int3   
   140048d6d:	int3   
   140048d6e:	int3   
   140048d6f:	int3   
   140048d70:	sub    rsp,0x28
   140048d74:	mov    rcx,QWORD PTR [rip+0x446cd]        # 0x14008d448
   140048d7b:	call   0x14004ba70
   140048d80:	test   rax,rax
   140048d83:	je     0x140048d87
   140048d85:	call   rax
   140048d87:	mov    ecx,0x19
   140048d8c:	call   0x14004a6a0
   140048d91:	mov    edx,0x1
   140048d96:	xor    ecx,ecx
   140048d98:	call   0x140054e10
   140048d9d:	add    rsp,0x28
   140048da1:	jmp    0x140054d60
   140048da6:	int3   
   140048da7:	int3   
   140048da8:	int3   
   140048da9:	int3   
   140048daa:	int3   
   140048dab:	int3   
   140048dac:	int3   
   140048dad:	int3   
   140048dae:	int3   
   140048daf:	int3   
   140048db0:	rex push rbx
   140048db2:	sub    rsp,0x60
   140048db6:	mov    rax,QWORD PTR [rip+0x25913]        # 0x14006e6d0
   140048dbd:	mov    rbx,rdx
   140048dc0:	lea    rdx,[rsp+0x20]
   140048dc5:	mov    QWORD PTR [rdx],rax
   140048dc8:	mov    rax,QWORD PTR [rip+0x25909]        # 0x14006e6d8
   140048dcf:	mov    QWORD PTR [rdx+0x8],rax
   140048dd3:	mov    rax,QWORD PTR [rip+0x25906]        # 0x14006e6e0
   140048dda:	mov    QWORD PTR [rdx+0x10],rax
   140048dde:	mov    rax,QWORD PTR [rip+0x25903]        # 0x14006e6e8
   140048de5:	mov    QWORD PTR [rdx+0x18],rax
   140048de9:	mov    rax,QWORD PTR [rip+0x25900]        # 0x14006e6f0
   140048df0:	mov    QWORD PTR [rdx+0x20],rax
   140048df4:	mov    rax,QWORD PTR [rip+0x258fd]        # 0x14006e6f8
   140048dfb:	mov    QWORD PTR [rdx+0x28],rax
   140048dff:	mov    rax,QWORD PTR [rip+0x258fa]        # 0x14006e700
   140048e06:	mov    QWORD PTR [rdx+0x30],rax
   140048e0a:	mov    rax,QWORD PTR [rip+0x258f7]        # 0x14006e708
   140048e11:	mov    QWORD PTR [rdx+0x38],rax
   140048e15:	mov    QWORD PTR [rsp+0x48],rcx
   140048e1a:	lea    rdx,[rsp+0x70]
   140048e1f:	mov    rcx,rbx
   140048e22:	mov    QWORD PTR [rsp+0x50],rbx
   140048e27:	call   0x140062cfe
   140048e2c:	test   rbx,rbx
   140048e2f:	mov    r11,rax
   140048e32:	mov    QWORD PTR [rsp+0x70],rax
   140048e37:	mov    QWORD PTR [rsp+0x58],rax
   140048e3c:	je     0x140048e5c
   140048e3e:	test   BYTE PTR [rbx],0x8
   140048e41:	mov    ecx,0x1994000
   140048e46:	je     0x140048e4e
   140048e48:	mov    DWORD PTR [rsp+0x40],ecx
   140048e4c:	jmp    0x140048e5c
   140048e4e:	mov    eax,DWORD PTR [rsp+0x40]
   140048e52:	test   r11,r11
   140048e55:	cmove  eax,ecx
   140048e58:	mov    DWORD PTR [rsp+0x40],eax
   140048e5c:	mov    r8d,DWORD PTR [rsp+0x38]
   140048e61:	mov    edx,DWORD PTR [rsp+0x24]
   140048e65:	mov    ecx,DWORD PTR [rsp+0x20]
   140048e69:	lea    r9,[rsp+0x40]
   140048e6e:	call   QWORD PTR [rip+0x1b7cc]        # 0x140064640
   140048e74:	add    rsp,0x60
   140048e78:	pop    rbx
   140048e79:	ret    
   140048e7a:	int3   
   140048e7b:	int3   
   140048e7c:	int3   
   140048e7d:	int3   
   140048e7e:	int3   
   140048e7f:	int3   
   140048e80:	test   ecx,ecx
   140048e82:	jns    0x140048e86
   140048e84:	neg    ecx
   140048e86:	mov    eax,ecx
   140048e88:	ret    
   140048e89:	int3   
   140048e8a:	int3   
   140048e8b:	int3   
   140048e8c:	int3   
   140048e8d:	int3   
   140048e8e:	int3   
   140048e8f:	int3   
   140048e90:	mov    QWORD PTR [rsp+0x18],rbx
   140048e95:	push   rdi
   140048e96:	sub    rsp,0x20
   140048e9a:	test   rcx,rcx
   140048e9d:	mov    rbx,rdx
   140048ea0:	mov    rdi,rcx
   140048ea3:	jne    0x140048eb7
   140048ea5:	mov    rcx,rdx
   140048ea8:	mov    rbx,QWORD PTR [rsp+0x40]
   140048ead:	add    rsp,0x20
   140048eb1:	pop    rdi
   140048eb2:	jmp    0x1400480c0
   140048eb7:	test   rdx,rdx
   140048eba:	jne    0x140048ece
   140048ebc:	call   0x1400485c0
   140048ec1:	xor    eax,eax
   140048ec3:	mov    rbx,QWORD PTR [rsp+0x40]
   140048ec8:	add    rsp,0x20
   140048ecc:	pop    rdi
   140048ecd:	ret    
   140048ece:	cmp    rdx,0xffffffffffffffe0
   140048ed2:	mov    QWORD PTR [rsp+0x30],rbp
   140048ed7:	mov    QWORD PTR [rsp+0x38],rsi
   140048edc:	ja     0x140048f21
   140048ede:	mov    ebp,0x1
   140048ee3:	mov    rcx,QWORD PTR [rip+0x43cee]        # 0x14008cbd8
   140048eea:	test   rbx,rbx
   140048eed:	mov    r8,rdi
   140048ef0:	cmove  rbx,rbp
   140048ef4:	xor    edx,edx
   140048ef6:	mov    r9,rbx
   140048ef9:	call   QWORD PTR [rip+0x1b361]        # 0x140064260
   140048eff:	test   rax,rax
   140048f02:	mov    rsi,rax
   140048f05:	jne    0x140048f7b
   140048f07:	cmp    DWORD PTR [rip+0x442cb],eax        # 0x14008d1d8
   140048f0d:	je     0x140048f64
   140048f0f:	mov    rcx,rbx
   140048f12:	call   0x140052b90
   140048f17:	test   eax,eax
   140048f19:	je     0x140048f4b
   140048f1b:	cmp    rbx,0xffffffffffffffe0
   140048f1f:	jbe    0x140048ee3
   140048f21:	mov    rcx,rbx
   140048f24:	call   0x140052b90
   140048f29:	call   0x140048680
   140048f2e:	mov    DWORD PTR [rax],0xc
   140048f34:	xor    eax,eax
   140048f36:	mov    rbp,QWORD PTR [rsp+0x30]
   140048f3b:	mov    rsi,QWORD PTR [rsp+0x38]
   140048f40:	mov    rbx,QWORD PTR [rsp+0x40]
   140048f45:	add    rsp,0x20
   140048f49:	pop    rdi
   140048f4a:	ret    
   140048f4b:	call   0x140048680
   140048f50:	mov    rbx,rax
   140048f53:	call   QWORD PTR [rip+0x1b6a7]        # 0x140064600
   140048f59:	mov    ecx,eax
   140048f5b:	call   0x140048630
   140048f60:	mov    DWORD PTR [rbx],eax
   140048f62:	jmp    0x140048f34
   140048f64:	call   0x140048680
   140048f69:	mov    rbx,rax
   140048f6c:	call   QWORD PTR [rip+0x1b68e]        # 0x140064600
   140048f72:	mov    ecx,eax
   140048f74:	call   0x140048630
   140048f79:	mov    DWORD PTR [rbx],eax
   140048f7b:	mov    rax,rsi
   140048f7e:	jmp    0x140048f36
   140048f80:	mov    QWORD PTR [rsp+0x8],rbx
   140048f85:	mov    QWORD PTR [rsp+0x10],rsi
   140048f8a:	push   rdi
   140048f8b:	sub    rsp,0x30
   140048f8f:	xor    edi,edi
   140048f91:	test   rdx,rdx
   140048f94:	mov    rbx,rdx
   140048f97:	mov    rsi,rcx
   140048f9a:	je     0x140048fde
   140048f9c:	xor    edx,edx
   140048f9e:	mov    rax,0xffffffffffffffe0
   140048fa5:	div    rbx
   140048fa8:	cmp    rax,r8
   140048fab:	jae    0x140048fde
   140048fad:	call   0x140048680
   140048fb2:	xor    r9d,r9d
   140048fb5:	xor    r8d,r8d
   140048fb8:	xor    edx,edx
   140048fba:	xor    ecx,ecx
   140048fbc:	mov    QWORD PTR [rsp+0x20],rdi
   140048fc1:	mov    DWORD PTR [rax],0xc
   140048fc7:	call   0x14004e100
   140048fcc:	xor    eax,eax
   140048fce:	mov    rbx,QWORD PTR [rsp+0x40]
   140048fd3:	mov    rsi,QWORD PTR [rsp+0x48]
   140048fd8:	add    rsp,0x30
   140048fdc:	pop    rdi
   140048fdd:	ret    
   140048fde:	imul   rbx,r8
   140048fe2:	test   rcx,rcx
   140048fe5:	je     0x140048fef
   140048fe7:	call   0x140049a40
   140048fec:	mov    rdi,rax
   140048fef:	mov    rdx,rbx
   140048ff2:	mov    rcx,rsi
   140048ff5:	call   0x140048e90
   140048ffa:	test   rax,rax
   140048ffd:	mov    rsi,rax
   140049000:	je     0x140049018
   140049002:	cmp    rdi,rbx
   140049005:	jae    0x140049018
   140049007:	sub    rbx,rdi
   14004900a:	lea    rcx,[rdi+rax*1]
   14004900e:	xor    edx,edx
   140049010:	mov    r8,rbx
   140049013:	call   0x140047720
   140049018:	mov    rbx,QWORD PTR [rsp+0x40]
   14004901d:	mov    rax,rsi
   140049020:	mov    rsi,QWORD PTR [rsp+0x48]
   140049025:	add    rsp,0x30
   140049029:	pop    rdi
   14004902a:	ret    
   14004902b:	int3   
   14004902c:	int3   
   14004902d:	int3   
   14004902e:	int3   
   14004902f:	int3   
   140049030:	mov    QWORD PTR [rsp+0x10],rbx
   140049035:	mov    QWORD PTR [rsp+0x18],r8
   14004903a:	push   rbp
   14004903b:	push   rsi
   14004903c:	push   rdi
   14004903d:	push   r12
   14004903f:	push   r13
   140049041:	push   r14
   140049043:	push   r15
   140049045:	sub    rsp,0x30
   140049049:	mov    r12,QWORD PTR [rsp+0xa8]
   140049051:	mov    rsi,QWORD PTR [rsp+0xa0]
   140049059:	mov    r14,QWORD PTR [rsp+0x98]
   140049061:	mov    rbp,rcx
   140049064:	mov    rcx,QWORD PTR [rsp+0x90]
   14004906c:	mov    r15,r9
   14004906f:	test   rbp,rbp
   140049072:	mov    r9,QWORD PTR [rsp+0xb0]
   14004907a:	mov    rdi,r8
   14004907d:	mov    r13,rdx
   140049080:	mov    DWORD PTR [rsp+0x70],0x0
   140049088:	je     0x140049094
   14004908a:	test   rdx,rdx
   14004908d:	jne    0x14004909e
   14004908f:	test   r8,r8
   140049092:	je     0x1400490a3
   140049094:	mov    eax,0x1
   140049099:	jmp    0x14004927b
   14004909e:	test   r8,r8
   1400490a1:	je     0x140049094
   1400490a3:	test   r15,r15
   1400490a6:	jne    0x1400490af
   1400490a8:	test   rcx,rcx
   1400490ab:	jne    0x140049094
   1400490ad:	jmp    0x1400490b4
   1400490af:	test   rcx,rcx
   1400490b2:	je     0x140049094
   1400490b4:	test   r14,r14
   1400490b7:	jne    0x1400490c0
   1400490b9:	test   rsi,rsi
   1400490bc:	jne    0x140049094
   1400490be:	jmp    0x1400490c5
   1400490c0:	test   rsi,rsi
   1400490c3:	je     0x140049094
   1400490c5:	test   r12,r12
   1400490c8:	jne    0x1400490d1
   1400490ca:	test   r9,r9
   1400490cd:	jne    0x140049094
   1400490cf:	jmp    0x1400490d6
   1400490d1:	test   r9,r9
   1400490d4:	je     0x140049094
   1400490d6:	mov    eax,0x1
   1400490db:	mov    rbx,rbp
   1400490de:	xchg   ax,ax
   1400490e0:	cmp    WORD PTR [rbx],0x0
   1400490e4:	je     0x1400490f0
   1400490e6:	add    rbx,0x2
   1400490ea:	sub    rax,0x1
   1400490ee:	jne    0x1400490e0
   1400490f0:	cmp    WORD PTR [rbx],0x3a
   1400490f4:	jne    0x140049127
   1400490f6:	test   rdx,rdx
   1400490f9:	je     0x140049121
   1400490fb:	cmp    r8,0x3
   1400490ff:	jb     0x140049277
   140049105:	mov    r9d,0x2
   14004910b:	mov    r8,rbp
   14004910e:	mov    rdx,rdi
   140049111:	mov    rcx,r13
   140049114:	call   0x140047200
   140049119:	mov    rcx,QWORD PTR [rsp+0x90]
   140049121:	lea    rbp,[rbx+0x2]
   140049125:	jmp    0x140049131
   140049127:	test   rdx,rdx
   14004912a:	je     0x140049131
   14004912c:	mov    WORD PTR [rdx],0x0
   140049131:	movzx  eax,WORD PTR [rbp+0x0]
   140049135:	xor    esi,esi
   140049137:	xor    edi,edi
   140049139:	test   ax,ax
   14004913c:	mov    rbx,rbp
   14004913f:	je     0x140049198
   140049141:	cmp    ax,0x2f
   140049145:	je     0x140049158
   140049147:	cmp    ax,0x5c
   14004914b:	je     0x140049158
   14004914d:	cmp    ax,0x2e
   140049151:	jne    0x14004915c
   140049153:	mov    rdi,rbx
   140049156:	jmp    0x14004915c
   140049158:	lea    rsi,[rbx+0x2]
   14004915c:	mov    ax,WORD PTR [rbx+0x2]
   140049160:	add    rbx,0x2
   140049164:	test   ax,ax
   140049167:	jne    0x140049141
   140049169:	test   rsi,rsi
   14004916c:	je     0x140049198
   14004916e:	test   r15,r15
   140049171:	je     0x140049193
   140049173:	mov    r9,rsi
   140049176:	sub    r9,rbp
   140049179:	sar    r9,1
   14004917c:	cmp    rcx,r9
   14004917f:	jbe    0x14004924b
   140049185:	mov    rdx,rcx
   140049188:	mov    r8,rbp
   14004918b:	mov    rcx,r15
   14004918e:	call   0x140047200
   140049193:	mov    rbp,rsi
   140049196:	jmp    0x1400491a3
   140049198:	test   r15,r15
   14004919b:	je     0x1400491a3
   14004919d:	mov    WORD PTR [r15],0x0
   1400491a3:	test   rdi,rdi
   1400491a6:	je     0x14004920f
   1400491a8:	cmp    rdi,rbp
   1400491ab:	jb     0x14004920f
   1400491ad:	test   r14,r14
   1400491b0:	mov    rsi,QWORD PTR [rsp+0xa0]
   1400491b8:	je     0x1400491da
   1400491ba:	mov    r9,rdi
   1400491bd:	sub    r9,rbp
   1400491c0:	sar    r9,1
   1400491c3:	cmp    rsi,r9
   1400491c6:	jbe    0x14004925f
   1400491cc:	mov    r8,rbp
   1400491cf:	mov    rdx,rsi
   1400491d2:	mov    rcx,r14
   1400491d5:	call   0x140047200
   1400491da:	test   r12,r12
   1400491dd:	je     0x140049244
   1400491df:	mov    r9,QWORD PTR [rsp+0xb0]
   1400491e7:	sub    rbx,rdi
   1400491ea:	sar    rbx,1
   1400491ed:	cmp    r9,rbx
   1400491f0:	jbe    0x140049255
   1400491f2:	mov    rdx,QWORD PTR [rsp+0xb0]
   1400491fa:	mov    r9,rbx
   1400491fd:	mov    r8,rdi
   140049200:	mov    rcx,r12
   140049203:	call   0x140047200
   140049208:	xor    eax,eax
   14004920a:	jmp    0x140049300
   14004920f:	test   r14,r14
   140049212:	je     0x140049238
   140049214:	mov    rsi,QWORD PTR [rsp+0xa0]
   14004921c:	sub    rbx,rbp
   14004921f:	sar    rbx,1
   140049222:	cmp    rsi,rbx
   140049225:	jbe    0x14004925f
   140049227:	mov    r9,rbx
   14004922a:	mov    r8,rbp
   14004922d:	mov    rdx,rsi
   140049230:	mov    rcx,r14
   140049233:	call   0x140047200
   140049238:	test   r12,r12
   14004923b:	je     0x140049244
   14004923d:	mov    WORD PTR [r12],0x0
   140049244:	xor    eax,eax
   140049246:	jmp    0x140049300
   14004924b:	mov    rsi,QWORD PTR [rsp+0xa0]
   140049253:	jmp    0x140049267
   140049255:	mov    rcx,QWORD PTR [rsp+0x90]
   14004925d:	jmp    0x14004926f
   14004925f:	mov    rcx,QWORD PTR [rsp+0x90]
   140049267:	mov    r9,QWORD PTR [rsp+0xb0]
   14004926f:	mov    rdi,QWORD PTR [rsp+0x80]
   140049277:	mov    eax,DWORD PTR [rsp+0x70]
   14004927b:	test   r13,r13
   14004927e:	je     0x14004928c
   140049280:	test   rdi,rdi
   140049283:	je     0x14004928c
   140049285:	mov    WORD PTR [r13+0x0],0x0
   14004928c:	test   r15,r15
   14004928f:	je     0x14004929c
   140049291:	test   rcx,rcx
   140049294:	je     0x14004929c
   140049296:	mov    WORD PTR [r15],0x0
   14004929c:	test   r14,r14
   14004929f:	je     0x1400492ac
   1400492a1:	test   rsi,rsi
   1400492a4:	je     0x1400492ac
   1400492a6:	mov    WORD PTR [r14],0x0
   1400492ac:	test   r12,r12
   1400492af:	je     0x1400492bd
   1400492b1:	test   r9,r9
   1400492b4:	je     0x1400492bd
   1400492b6:	mov    WORD PTR [r12],0x0
   1400492bd:	test   rbp,rbp
   1400492c0:	jne    0x1400492ec
   1400492c2:	call   0x140048680
   1400492c7:	xor    r9d,r9d
   1400492ca:	xor    r8d,r8d
   1400492cd:	xor    edx,edx
   1400492cf:	xor    ecx,ecx
   1400492d1:	mov    QWORD PTR [rsp+0x20],0x0
   1400492da:	mov    DWORD PTR [rax],0x16
   1400492e0:	call   0x14004e100
   1400492e5:	mov    eax,0x16
   1400492ea:	jmp    0x140049300
   1400492ec:	test   eax,eax
   1400492ee:	jne    0x1400492c2
   1400492f0:	call   0x140048680
   1400492f5:	mov    DWORD PTR [rax],0x22
   1400492fb:	mov    eax,0x22
   140049300:	mov    rbx,QWORD PTR [rsp+0x78]
   140049305:	add    rsp,0x30
   140049309:	pop    r15
   14004930b:	pop    r14
   14004930d:	pop    r13
   14004930f:	pop    r12
   140049311:	pop    rdi
   140049312:	pop    rsi
   140049313:	pop    rbp
   140049314:	ret    
   140049315:	int3   
   140049316:	int3   
   140049317:	int3   
   140049318:	int3   
   140049319:	int3   
   14004931a:	int3   
   14004931b:	int3   
   14004931c:	int3   
   14004931d:	int3   
   14004931e:	int3   
   14004931f:	int3   
   140049320:	rex push rbx
   140049322:	sub    rsp,0x30
   140049326:	test   rcx,rcx
   140049329:	mov    rbx,rcx
   14004932c:	je     0x140049499
   140049332:	test   rdx,rdx
   140049335:	je     0x140049499
   14004933b:	xor    r10d,r10d
   14004933e:	test   r8,r8
   140049341:	mov    r11,rcx
   140049344:	je     0x14004936e
   140049346:	movzx  eax,WORD PTR [r8]
   14004934a:	test   ax,ax
   14004934d:	je     0x14004936e
   14004934f:	mov    r10d,0x2
   140049355:	cmp    rdx,r10
   140049358:	jbe    0x140049458
   14004935e:	lea    r11,[rcx+0x2]
   140049362:	mov    WORD PTR [rcx],ax
   140049365:	mov    WORD PTR [r11],0x3a
   14004936b:	add    r11,r10
   14004936e:	test   r9,r9
   140049371:	je     0x1400493cd
   140049373:	cmp    WORD PTR [r9],0x0
   140049378:	je     0x1400493cd
   14004937a:	data16 xchg ax,ax
   14004937d:	data16 xchg ax,ax
   140049380:	add    r10,0x1
   140049384:	cmp    r10,rdx
   140049387:	jae    0x140049458
   14004938d:	movzx  eax,WORD PTR [r9]
   140049391:	add    r9,0x2
   140049395:	add    r11,0x2
   140049399:	mov    WORD PTR [r11-0x2],ax
   14004939e:	cmp    WORD PTR [r9],0x0
   1400493a3:	jne    0x140049380
   1400493a5:	movzx  eax,WORD PTR [r9-0x2]
   1400493aa:	cmp    ax,0x2f
   1400493ae:	je     0x1400493cd
   1400493b0:	cmp    ax,0x5c
   1400493b4:	je     0x1400493cd
   1400493b6:	add    r10,0x1
   1400493ba:	cmp    r10,rdx
   1400493bd:	jae    0x140049458
   1400493c3:	mov    WORD PTR [r11],0x5c
   1400493c9:	add    r11,0x2
   1400493cd:	mov    rcx,QWORD PTR [rsp+0x60]
   1400493d2:	test   rcx,rcx
   1400493d5:	je     0x1400493ff
   1400493d7:	cmp    WORD PTR [rcx],0x0
   1400493db:	je     0x1400493ff
   1400493dd:	data16 xchg ax,ax
   1400493e0:	add    r10,0x1
   1400493e4:	cmp    r10,rdx
   1400493e7:	jae    0x140049458
   1400493e9:	movzx  eax,WORD PTR [rcx]
   1400493ec:	add    rcx,0x2
   1400493f0:	add    r11,0x2
   1400493f4:	mov    WORD PTR [r11-0x2],ax
   1400493f9:	cmp    WORD PTR [rcx],0x0
   1400493fd:	jne    0x1400493e0
   1400493ff:	mov    rcx,QWORD PTR [rsp+0x68]
   140049404:	test   rcx,rcx
   140049407:	je     0x14004944f
   140049409:	movzx  eax,WORD PTR [rcx]
   14004940c:	test   ax,ax
   14004940f:	je     0x14004944f
   140049411:	cmp    ax,0x2e
   140049415:	je     0x14004942a
   140049417:	add    r10,0x1
   14004941b:	cmp    r10,rdx
   14004941e:	jae    0x140049458
   140049420:	mov    WORD PTR [r11],0x2e
   140049426:	add    r11,0x2
   14004942a:	cmp    WORD PTR [rcx],0x0
   14004942e:	je     0x14004944f
   140049430:	add    r10,0x1
   140049434:	cmp    r10,rdx
   140049437:	jae    0x140049458
   140049439:	movzx  eax,WORD PTR [rcx]
   14004943c:	add    rcx,0x2
   140049440:	add    r11,0x2
   140049444:	mov    WORD PTR [r11-0x2],ax
   140049449:	cmp    WORD PTR [rcx],0x0
   14004944d:	jne    0x140049430
   14004944f:	lea    rax,[r10+0x1]
   140049453:	cmp    rax,rdx
   140049456:	jbe    0x14004948b
   140049458:	mov    WORD PTR [rbx],0x0
   14004945d:	call   0x140048680
   140049462:	xor    r9d,r9d
   140049465:	xor    r8d,r8d
   140049468:	xor    edx,edx
   14004946a:	xor    ecx,ecx
   14004946c:	mov    DWORD PTR [rax],0x22
   140049472:	mov    QWORD PTR [rsp+0x20],0x0
   14004947b:	call   0x14004e100
   140049480:	mov    eax,0x22
   140049485:	add    rsp,0x30
   140049489:	pop    rbx
   14004948a:	ret    
   14004948b:	mov    WORD PTR [r11],0x0
   140049491:	xor    eax,eax
   140049493:	add    rsp,0x30
   140049497:	pop    rbx
   140049498:	ret    
   140049499:	call   0x140048680
   14004949e:	xor    r9d,r9d
   1400494a1:	xor    r8d,r8d
   1400494a4:	xor    edx,edx
   1400494a6:	xor    ecx,ecx
   1400494a8:	mov    QWORD PTR [rsp+0x20],0x0
   1400494b1:	mov    DWORD PTR [rax],0x16
   1400494b7:	call   0x14004e100
   1400494bc:	mov    eax,0x16
   1400494c1:	add    rsp,0x30
   1400494c5:	pop    rbx
   1400494c6:	ret    
   1400494c7:	int3   
   1400494c8:	int3   
   1400494c9:	int3   
   1400494ca:	int3   
   1400494cb:	int3   
   1400494cc:	int3   
   1400494cd:	int3   
   1400494ce:	int3   
   1400494cf:	int3   
   1400494d0:	mov    rax,rsp
   1400494d3:	push   rbx
   1400494d4:	push   rsi
   1400494d5:	push   rdi
   1400494d6:	sub    rsp,0x60
   1400494da:	xor    esi,esi
   1400494dc:	test   rcx,rcx
   1400494df:	mov    edi,edx
   1400494e1:	mov    DWORD PTR [rax+0x18],esi
   1400494e4:	mov    DWORD PTR [rax+0x8],esi
   1400494e7:	mov    rbx,rcx
   1400494ea:	jne    0x140049517
   1400494ec:	call   0x140048680
   1400494f1:	xor    r9d,r9d
   1400494f4:	xor    r8d,r8d
   1400494f7:	xor    edx,edx
   1400494f9:	xor    ecx,ecx
   1400494fb:	mov    QWORD PTR [rsp+0x20],rsi
   140049500:	mov    DWORD PTR [rax],0x16
   140049506:	call   0x14004e100
   14004950b:	or     rax,0xffffffffffffffff
   14004950f:	add    rsp,0x60
   140049513:	pop    rdi
   140049514:	pop    rsi
   140049515:	pop    rbx
   140049516:	ret    
   140049517:	movsxd r10,DWORD PTR [rcx+0x14]
   14004951b:	mov    QWORD PTR [rsp+0x98],r10
   140049523:	lea    rax,[r10-0x45]
   140049527:	cmp    rax,0x408
   14004952d:	ja     0x140049766
   140049533:	mov    ecx,DWORD PTR [rcx+0x10]
   140049536:	test   ecx,ecx
   140049538:	js     0x14004953f
   14004953a:	cmp    ecx,0xb
   14004953d:	jle    0x14004958e
   14004953f:	mov    eax,0x2aaaaaab
   140049544:	imul   ecx
   140049546:	sar    edx,1
   140049548:	mov    eax,edx
   14004954a:	shr    eax,0x1f
   14004954d:	add    edx,eax
   14004954f:	lea    eax,[rdx+rdx*2]
   140049552:	shl    eax,0x2
   140049555:	sub    ecx,eax
   140049557:	movsxd rax,edx
   14004955a:	add    r10,rax
   14004955d:	test   ecx,ecx
   14004955f:	mov    DWORD PTR [rbx+0x10],ecx
   140049562:	mov    QWORD PTR [rsp+0x98],r10
   14004956a:	jns    0x14004957e
   14004956c:	lea    eax,[rcx+0xc]
   14004956f:	sub    r10,0x1
   140049573:	mov    DWORD PTR [rbx+0x10],eax
   140049576:	mov    QWORD PTR [rsp+0x98],r10
   14004957e:	lea    rax,[r10-0x45]
   140049582:	cmp    rax,0x408
   140049588:	ja     0x140049766
   14004958e:	movsxd r8,DWORD PTR [rbx+0x10]
   140049592:	mov    rax,r10
   140049595:	lea    rcx,[rip+0x3ea7c]        # 0x140088018
   14004959c:	movsxd r11,DWORD PTR [rcx+r8*4]
   1400495a0:	cqo    
   1400495a2:	mov    QWORD PTR [rsp+0x88],rbp
   1400495aa:	and    edx,0x3
   1400495ad:	movabs rbp,0xa3d70a3d70a3d70b
   1400495b7:	add    rax,rdx
   1400495ba:	and    eax,0x3
   1400495bd:	cmp    rax,rdx
   1400495c0:	jne    0x1400495e2
   1400495c2:	mov    rax,rbp
   1400495c5:	imul   r10
   1400495c8:	add    rdx,r10
   1400495cb:	sar    rdx,0x6
   1400495cf:	mov    rax,rdx
   1400495d2:	shr    rax,0x3f
   1400495d6:	add    rdx,rax
   1400495d9:	imul   rdx,rdx,0x64
   1400495dd:	cmp    r10,rdx
   1400495e0:	jne    0x14004960c
   1400495e2:	lea    rcx,[r10+0x76c]
   1400495e9:	mov    rax,rbp
   1400495ec:	imul   rcx
   1400495ef:	add    rdx,rcx
   1400495f2:	sar    rdx,0x8
   1400495f6:	mov    rax,rdx
   1400495f9:	shr    rax,0x3f
   1400495fd:	add    rdx,rax
   140049600:	imul   rdx,rdx,0x190
   140049607:	cmp    rcx,rdx
   14004960a:	jne    0x140049616
   14004960c:	cmp    r8d,0x1
   140049610:	jle    0x140049616
   140049612:	add    r11,0x1
   140049616:	lea    rcx,[r10+0x12b]
   14004961d:	lea    r8,[r10-0x1]
   140049621:	mov    rax,rbp
   140049624:	imul   r10,r10,0x16d
   14004962b:	imul   rcx
   14004962e:	mov    rax,rbp
   140049631:	mov    rbp,QWORD PTR [rsp+0x88]
   140049639:	lea    r9,[rcx+rdx*1]
   14004963d:	sar    r9,0x8
   140049641:	mov    rcx,r9
   140049644:	shr    rcx,0x3f
   140049648:	imul   r8
   14004964b:	add    r9,rcx
   14004964e:	movsxd rcx,DWORD PTR [rbx+0xc]
   140049652:	add    rdx,r8
   140049655:	add    r9,rcx
   140049658:	sar    rdx,0x6
   14004965c:	mov    rax,r8
   14004965f:	mov    rcx,rdx
   140049662:	shr    rcx,0x3f
   140049666:	add    rdx,rcx
   140049669:	sub    r9,rdx
   14004966c:	cqo    
   14004966e:	and    edx,0x3
   140049671:	add    rax,rdx
   140049674:	sar    rax,0x2
   140049678:	add    rax,r11
   14004967b:	add    rax,r9
   14004967e:	lea    rax,[r10+rax*1-0x63df]
   140049686:	lea    rcx,[rax+rax*2]
   14004968a:	movsxd rax,DWORD PTR [rbx+0x8]
   14004968e:	shl    rcx,0x3
   140049692:	add    rax,rcx
   140049695:	movsxd rcx,DWORD PTR [rbx+0x4]
   140049699:	imul   rax,rax,0x3c
   14004969d:	add    rcx,rax
   1400496a0:	movsxd rax,DWORD PTR [rbx]
   1400496a3:	imul   rcx,rcx,0x3c
   1400496a7:	add    rax,rcx
   1400496aa:	test   edi,edi
   1400496ac:	mov    QWORD PTR [rsp+0x98],rax
   1400496b4:	je     0x14004977d
   1400496ba:	call   0x140056000
   1400496bf:	lea    rcx,[rsp+0x90]
   1400496c7:	call   0x1400551b0
   1400496cc:	test   eax,eax
   1400496ce:	je     0x1400496e4
   1400496d0:	xor    r9d,r9d
   1400496d3:	xor    r8d,r8d
   1400496d6:	xor    edx,edx
   1400496d8:	xor    ecx,ecx
   1400496da:	mov    QWORD PTR [rsp+0x20],rsi
   1400496df:	call   0x14004e060
   1400496e4:	lea    rcx,[rsp+0x80]
   1400496ec:	call   0x140055200
   1400496f1:	test   eax,eax
   1400496f3:	je     0x140049709
   1400496f5:	xor    r9d,r9d
   1400496f8:	xor    r8d,r8d
   1400496fb:	xor    edx,edx
   1400496fd:	xor    ecx,ecx
   1400496ff:	mov    QWORD PTR [rsp+0x20],rsi
   140049704:	call   0x14004e060
   140049709:	movsxd rax,DWORD PTR [rsp+0x80]
   140049711:	lea    rdx,[rsp+0x98]
   140049719:	lea    rcx,[rsp+0x30]
   14004971e:	add    QWORD PTR [rsp+0x98],rax
   140049726:	call   0x14004a040
   14004972b:	test   eax,eax
   14004972d:	jne    0x140049766
   14004972f:	mov    eax,DWORD PTR [rbx+0x20]
   140049732:	test   eax,eax
   140049734:	jg     0x140049740
   140049736:	test   eax,eax
   140049738:	jns    0x140049793
   14004973a:	cmp    DWORD PTR [rsp+0x50],esi
   14004973e:	jle    0x140049793
   140049740:	movsxd rax,DWORD PTR [rsp+0x90]
   140049748:	lea    rdx,[rsp+0x98]
   140049750:	lea    rcx,[rsp+0x30]
   140049755:	add    QWORD PTR [rsp+0x98],rax
   14004975d:	call   0x14004a040
   140049762:	test   eax,eax
   140049764:	je     0x140049793
   140049766:	call   0x140048680
   14004976b:	mov    DWORD PTR [rax],0x16
   140049771:	or     rax,0xffffffffffffffff
   140049775:	add    rsp,0x60
   140049779:	pop    rdi
   14004977a:	pop    rsi
   14004977b:	pop    rbx
   14004977c:	ret    
   14004977d:	lea    rdx,[rsp+0x98]
   140049785:	lea    rcx,[rsp+0x30]
   14004978a:	call   0x140054e30
   14004978f:	test   eax,eax
   140049791:	jne    0x140049766
   140049793:	lea    rcx,[rsp+0x30]
   140049798:	mov    eax,DWORD PTR [rcx]
   14004979a:	mov    DWORD PTR [rbx],eax
   14004979c:	mov    eax,DWORD PTR [rcx+0x4]
   14004979f:	mov    DWORD PTR [rbx+0x4],eax
   1400497a2:	mov    eax,DWORD PTR [rcx+0x8]
   1400497a5:	mov    DWORD PTR [rbx+0x8],eax
   1400497a8:	mov    eax,DWORD PTR [rcx+0xc]
   1400497ab:	mov    DWORD PTR [rbx+0xc],eax
   1400497ae:	mov    eax,DWORD PTR [rcx+0x10]
   1400497b1:	mov    DWORD PTR [rbx+0x10],eax
   1400497b4:	mov    eax,DWORD PTR [rcx+0x14]
   1400497b7:	mov    DWORD PTR [rbx+0x14],eax
   1400497ba:	mov    eax,DWORD PTR [rcx+0x18]
   1400497bd:	mov    DWORD PTR [rbx+0x18],eax
   1400497c0:	mov    eax,DWORD PTR [rcx+0x1c]
   1400497c3:	mov    DWORD PTR [rbx+0x1c],eax
   1400497c6:	mov    eax,DWORD PTR [rcx+0x20]
   1400497c9:	mov    DWORD PTR [rbx+0x20],eax
   1400497cc:	mov    rax,QWORD PTR [rsp+0x98]
   1400497d4:	add    rsp,0x60
   1400497d8:	pop    rdi
   1400497d9:	pop    rsi
   1400497da:	pop    rbx
   1400497db:	ret    
   1400497dc:	int3   
   1400497dd:	int3   
   1400497de:	int3   
   1400497df:	int3   
   1400497e0:	mov    edx,0x1
   1400497e5:	jmp    0x1400494d0
   1400497ea:	int3   
   1400497eb:	int3   
   1400497ec:	int3   
   1400497ed:	int3   
   1400497ee:	int3   
   1400497ef:	int3   
   1400497f0:	mov    QWORD PTR [rsp+0x18],rbp
   1400497f5:	mov    QWORD PTR [rsp+0x20],rsi
   1400497fa:	push   rdi
   1400497fb:	sub    rsp,0x30
   1400497ff:	test   rdx,rdx
   140049802:	mov    rdi,r8
   140049805:	mov    rbp,rdx
   140049808:	mov    rsi,rcx
   14004980b:	je     0x140049931
   140049811:	cmp    WORD PTR [rdx],0x0
   140049815:	je     0x140049931
   14004981b:	test   rcx,rcx
   14004981e:	mov    QWORD PTR [rsp+0x40],rbx
   140049823:	jne    0x14004989c
   140049825:	xor    r9d,r9d
   140049828:	xor    r8d,r8d
   14004982b:	xor    edx,edx
   14004982d:	mov    rcx,rbp
   140049830:	call   QWORD PTR [rip+0x1a9b2]        # 0x1400641e8
   140049836:	test   eax,eax
   140049838:	je     0x140049915
   14004983e:	mov    eax,eax
   140049840:	cmp    rdi,rax
   140049843:	cmovbe rdi,rax
   140049847:	movabs rax,0x7fffffffffffffff
   140049851:	cmp    rdi,rax
   140049854:	jbe    0x140049878
   140049856:	call   0x140048680
   14004985b:	mov    DWORD PTR [rax],0x16
   140049861:	xor    eax,eax
   140049863:	mov    rbx,QWORD PTR [rsp+0x40]
   140049868:	mov    rbp,QWORD PTR [rsp+0x50]
   14004986d:	mov    rsi,QWORD PTR [rsp+0x58]
   140049872:	add    rsp,0x30
   140049876:	pop    rdi
   140049877:	ret    
   140049878:	mov    edx,0x2
   14004987d:	mov    rcx,rdi
   140049880:	call   0x140048c80
   140049885:	test   rax,rax
   140049888:	mov    rbx,rax
   14004988b:	jne    0x1400498cb
   14004988d:	call   0x140048680
   140049892:	mov    DWORD PTR [rax],0xc
   140049898:	xor    eax,eax
   14004989a:	jmp    0x140049863
   14004989c:	test   r8,r8
   14004989f:	jne    0x1400498c8
   1400498a1:	call   0x140048680
   1400498a6:	xor    r9d,r9d
   1400498a9:	xor    r8d,r8d
   1400498ac:	xor    edx,edx
   1400498ae:	xor    ecx,ecx
   1400498b0:	mov    QWORD PTR [rsp+0x20],0x0
   1400498b9:	mov    DWORD PTR [rax],0x16
   1400498bf:	call   0x14004e100
   1400498c4:	xor    eax,eax
   1400498c6:	jmp    0x140049863
   1400498c8:	mov    rbx,rcx
   1400498cb:	lea    r9,[rsp+0x48]
   1400498d0:	mov    r8,rbx
   1400498d3:	mov    edx,edi
   1400498d5:	mov    rcx,rbp
   1400498d8:	call   QWORD PTR [rip+0x1a90a]        # 0x1400641e8
   1400498de:	mov    ecx,eax
   1400498e0:	cmp    rcx,rdi
   1400498e3:	jb     0x140049904
   1400498e5:	test   rsi,rsi
   1400498e8:	jne    0x1400498f2
   1400498ea:	mov    rcx,rbx
   1400498ed:	call   0x1400485c0
   1400498f2:	call   0x140048680
   1400498f7:	mov    DWORD PTR [rax],0x22
   1400498fd:	xor    eax,eax
   1400498ff:	jmp    0x140049863
   140049904:	test   eax,eax
   140049906:	jne    0x140049929
   140049908:	test   rsi,rsi
   14004990b:	jne    0x140049915
   14004990d:	mov    rcx,rbx
   140049910:	call   0x1400485c0
   140049915:	call   QWORD PTR [rip+0x1ace5]        # 0x140064600
   14004991b:	mov    ecx,eax
   14004991d:	call   0x1400486e0
   140049922:	xor    eax,eax
   140049924:	jmp    0x140049863
   140049929:	mov    rax,rbx
   14004992c:	jmp    0x140049863
   140049931:	mov    edx,r8d
   140049934:	call   0x140056240
   140049939:	mov    rbp,QWORD PTR [rsp+0x50]
   14004993e:	mov    rsi,QWORD PTR [rsp+0x58]
   140049943:	add    rsp,0x30
   140049947:	pop    rdi
   140049948:	ret    
   140049949:	int3   
   14004994a:	int3   
   14004994b:	int3   
   14004994c:	int3   
   14004994d:	int3   
   14004994e:	int3   
   14004994f:	int3   
   140049950:	mov    QWORD PTR [rsp+0x18],rbx
   140049955:	push   rdi
   140049956:	sub    rsp,0x30
   14004995a:	test   rcx,rcx
   14004995d:	mov    rbx,rdx
   140049960:	mov    rdi,rcx
   140049963:	jne    0x140049991
   140049965:	call   0x140048680
   14004996a:	xor    r9d,r9d
   14004996d:	xor    r8d,r8d
   140049970:	xor    edx,edx
   140049972:	xor    ecx,ecx
   140049974:	mov    QWORD PTR [rsp+0x20],rdi
   140049979:	mov    DWORD PTR [rax],0x16
   14004997f:	call   0x14004e100
   140049984:	xor    eax,eax
   140049986:	mov    rbx,QWORD PTR [rsp+0x50]
   14004998b:	add    rsp,0x30
   14004998f:	pop    rdi
   140049990:	ret    
   140049991:	cmp    rdx,0xffffffffffffffe0
   140049995:	jbe    0x1400499af
   140049997:	call   0x140048680
   14004999c:	mov    DWORD PTR [rax],0xc
   1400499a2:	xor    eax,eax
   1400499a4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400499a9:	add    rsp,0x30
   1400499ad:	pop    rdi
   1400499ae:	ret    
   1400499af:	test   rdx,rdx
   1400499b2:	mov    eax,0x1
   1400499b7:	mov    r8,rcx
   1400499ba:	mov    rcx,QWORD PTR [rip+0x43217]        # 0x14008cbd8
   1400499c1:	cmove  rbx,rax
   1400499c5:	xor    edx,edx
   1400499c7:	mov    QWORD PTR [rsp+0x40],rbp
   1400499cc:	mov    QWORD PTR [rsp+0x48],rsi
   1400499d1:	call   QWORD PTR [rip+0x1a891]        # 0x140064268
   1400499d7:	mov    rcx,QWORD PTR [rip+0x431fa]        # 0x14008cbd8
   1400499de:	mov    r9,rbx
   1400499e1:	mov    r8,rdi
   1400499e4:	mov    edx,0x10
   1400499e9:	mov    rbp,rax
   1400499ec:	call   QWORD PTR [rip+0x1a86e]        # 0x140064260
   1400499f2:	test   rax,rax
   1400499f5:	mov    rsi,rax
   1400499f8:	jne    0x140049a21
   1400499fa:	cmp    rbp,0xffffffffffffffff
   1400499fe:	je     0x140049a0a
   140049a00:	cmp    rbx,rbp
   140049a03:	ja     0x140049a0a
   140049a05:	mov    rsi,rdi
   140049a08:	jmp    0x140049a21
   140049a0a:	call   0x140048680
   140049a0f:	mov    rbx,rax
   140049a12:	call   QWORD PTR [rip+0x1abe8]        # 0x140064600
   140049a18:	mov    ecx,eax
   140049a1a:	call   0x140048630
   140049a1f:	mov    DWORD PTR [rbx],eax
   140049a21:	mov    rbp,QWORD PTR [rsp+0x40]
   140049a26:	mov    rbx,QWORD PTR [rsp+0x50]
   140049a2b:	mov    rax,rsi
   140049a2e:	mov    rsi,QWORD PTR [rsp+0x48]
   140049a33:	add    rsp,0x30
   140049a37:	pop    rdi
   140049a38:	ret    
   140049a39:	int3   
   140049a3a:	int3   
   140049a3b:	int3   
   140049a3c:	int3   
   140049a3d:	int3   
   140049a3e:	int3   
   140049a3f:	int3   
   140049a40:	sub    rsp,0x38
   140049a44:	test   rcx,rcx
   140049a47:	jne    0x140049a75
   140049a49:	call   0x140048680
   140049a4e:	xor    r9d,r9d
   140049a51:	xor    r8d,r8d
   140049a54:	xor    edx,edx
   140049a56:	xor    ecx,ecx
   140049a58:	mov    QWORD PTR [rsp+0x20],0x0
   140049a61:	mov    DWORD PTR [rax],0x16
   140049a67:	call   0x14004e100
   140049a6c:	or     rax,0xffffffffffffffff
   140049a70:	add    rsp,0x38
   140049a74:	ret    
   140049a75:	mov    r8,rcx
   140049a78:	mov    rcx,QWORD PTR [rip+0x43159]        # 0x14008cbd8
   140049a7f:	xor    edx,edx
   140049a81:	add    rsp,0x38
   140049a85:	rex.W jmp QWORD PTR [rip+0x1a7dc]        # 0x140064268
   140049a8c:	int3   
   140049a8d:	int3   
   140049a8e:	int3   
   140049a8f:	int3   
   140049a90:	movzx  r10d,WORD PTR [rcx]
   140049a94:	mov    r8,rcx
   140049a97:	test   r10w,r10w
   140049a9b:	je     0x140049ad3
   140049a9d:	movzx  r11d,WORD PTR [rdx]
   140049aa1:	cmp    r11w,r10w
   140049aa5:	mov    r9,rdx
   140049aa8:	je     0x140049ac4
   140049aaa:	movzx  eax,r11w
   140049aae:	xchg   ax,ax
   140049ab0:	test   ax,ax
   140049ab3:	je     0x140049ad3
   140049ab5:	mov    ax,WORD PTR [r9+0x2]
   140049aba:	add    r9,0x2
   140049abe:	cmp    ax,r10w
   140049ac2:	jne    0x140049ab0
   140049ac4:	mov    r10w,WORD PTR [r8+0x2]
   140049ac9:	add    r8,0x2
   140049acd:	test   r10w,r10w
   140049ad1:	jne    0x140049aa1
   140049ad3:	sub    r8,rcx
   140049ad6:	sar    r8,1
   140049ad9:	mov    rax,r8
   140049adc:	ret    
   140049add:	int3   
   140049ade:	int3   
   140049adf:	int3   
   140049ae0:	cmp    WORD PTR [rcx],0x0
   140049ae4:	mov    r10,rdx
   140049ae7:	mov    r11,rcx
   140049aea:	mov    rax,rcx
   140049aed:	je     0x140049b20
   140049aef:	movzx  r9d,WORD PTR [rdx]
   140049af3:	test   r9w,r9w
   140049af7:	mov    r8,r10
   140049afa:	je     0x140049b16
   140049afc:	movzx  ecx,WORD PTR [rax]
   140049aff:	movzx  edx,r9w
   140049b03:	cmp    dx,cx
   140049b06:	je     0x140049b20
   140049b08:	mov    dx,WORD PTR [r8+0x2]
   140049b0d:	add    r8,0x2
   140049b11:	test   dx,dx
   140049b14:	jne    0x140049b03
   140049b16:	add    rax,0x2
   140049b1a:	cmp    WORD PTR [rax],0x0
   140049b1e:	jne    0x140049af3
   140049b20:	sub    rax,r11
   140049b23:	sar    rax,1
   140049b26:	ret    
   140049b27:	int3   
   140049b28:	int3   
   140049b29:	int3   
   140049b2a:	int3   
   140049b2b:	int3   
   140049b2c:	int3   
   140049b2d:	int3   
   140049b2e:	int3   
   140049b2f:	int3   
   140049b30:	mov    QWORD PTR [rsp+0x8],rsi
   140049b35:	push   rdi
   140049b36:	sub    rsp,0x30
   140049b3a:	test   rdx,rdx
   140049b3d:	mov    esi,r9d
   140049b40:	mov    r10,r8
   140049b43:	mov    rdi,rdx
   140049b46:	mov    r11d,ecx
   140049b49:	jne    0x140049b7e
   140049b4b:	call   0x140048680
   140049b50:	xor    r9d,r9d
   140049b53:	xor    r8d,r8d
   140049b56:	xor    edx,edx
   140049b58:	xor    ecx,ecx
   140049b5a:	mov    QWORD PTR [rsp+0x20],0x0
   140049b63:	mov    DWORD PTR [rax],0x16
   140049b69:	call   0x14004e100
   140049b6e:	mov    eax,0x16
   140049b73:	mov    rsi,QWORD PTR [rsp+0x40]
   140049b78:	add    rsp,0x30
   140049b7c:	pop    rdi
   140049b7d:	ret    
   140049b7e:	test   r8,r8
   140049b81:	je     0x140049b4b
   140049b83:	xor    eax,eax
   140049b85:	mov    WORD PTR [rdx],0x0
   140049b8a:	mov    edx,DWORD PTR [rsp+0x60]
   140049b8e:	test   edx,edx
   140049b90:	setne  al
   140049b93:	add    rax,0x1
   140049b97:	cmp    r8,rax
   140049b9a:	ja     0x140049bcf
   140049b9c:	call   0x140048680
   140049ba1:	xor    r9d,r9d
   140049ba4:	xor    r8d,r8d
   140049ba7:	xor    edx,edx
   140049ba9:	xor    ecx,ecx
   140049bab:	mov    QWORD PTR [rsp+0x20],0x0
   140049bb4:	mov    DWORD PTR [rax],0x22
   140049bba:	call   0x14004e100
   140049bbf:	mov    eax,0x22
   140049bc4:	mov    rsi,QWORD PTR [rsp+0x40]
   140049bc9:	add    rsp,0x30
   140049bcd:	pop    rdi
   140049bce:	ret    
   140049bcf:	lea    eax,[r9-0x2]
   140049bd3:	cmp    eax,0x22
   140049bd6:	ja     0x140049b4b
   140049bdc:	xor    ecx,ecx
   140049bde:	test   edx,edx
   140049be0:	mov    r8,rdi
   140049be3:	je     0x140049bf6
   140049be5:	mov    WORD PTR [rdi],0x2d
   140049bea:	lea    r8,[rdi+0x2]
   140049bee:	mov    ecx,0x1
   140049bf3:	neg    r11d
   140049bf6:	mov    r9,r8
   140049bf9:	data16 xchg ax,ax
   140049bfc:	data16 data16 xchg ax,ax
   140049c00:	xor    edx,edx
   140049c02:	mov    eax,r11d
   140049c05:	div    esi
   140049c07:	cmp    edx,0x9
   140049c0a:	mov    r11d,eax
   140049c0d:	jbe    0x140049c15
   140049c0f:	add    dx,0x57
   140049c13:	jmp    0x140049c19
   140049c15:	add    dx,0x30
   140049c19:	mov    WORD PTR [r8],dx
   140049c1d:	add    r8,0x2
   140049c21:	add    rcx,0x1
   140049c25:	test   eax,eax
   140049c27:	je     0x140049c30
   140049c29:	cmp    rcx,r10
   140049c2c:	jb     0x140049c00
   140049c2e:	jmp    0x140049c35
   140049c30:	cmp    rcx,r10
   140049c33:	jb     0x140049c43
   140049c35:	cmp    rcx,r10
   140049c38:	mov    WORD PTR [rdi],0x0
   140049c3d:	jae    0x140049b9c
   140049c43:	mov    WORD PTR [r8],0x0
   140049c49:	sub    r8,0x2
   140049c4d:	data16 xchg ax,ax
   140049c50:	movzx  eax,WORD PTR [r9]
   140049c54:	movzx  ecx,WORD PTR [r8]
   140049c58:	add    r9,0x2
   140049c5c:	mov    WORD PTR [r8],ax
   140049c60:	mov    WORD PTR [r9-0x2],cx
   140049c65:	sub    r8,0x2
   140049c69:	cmp    r9,r8
   140049c6c:	jb     0x140049c50
   140049c6e:	xor    eax,eax
   140049c70:	mov    rsi,QWORD PTR [rsp+0x40]
   140049c75:	add    rsp,0x30
   140049c79:	pop    rdi
   140049c7a:	ret    
   140049c7b:	int3   
   140049c7c:	int3   
   140049c7d:	int3   
   140049c7e:	int3   
   140049c7f:	int3   
   140049c80:	sub    rsp,0x38
   140049c84:	cmp    r9d,0xa
   140049c88:	jne    0x140049ca1
   140049c8a:	test   ecx,ecx
   140049c8c:	jns    0x140049ca1
   140049c8e:	mov    eax,0x1
   140049c93:	mov    DWORD PTR [rsp+0x20],eax
   140049c97:	call   0x140049b30
   140049c9c:	add    rsp,0x38
   140049ca0:	ret    
   140049ca1:	xor    eax,eax
   140049ca3:	mov    DWORD PTR [rsp+0x20],eax
   140049ca7:	call   0x140049b30
   140049cac:	add    rsp,0x38
   140049cb0:	ret    
   140049cb1:	int3   
   140049cb2:	int3   
   140049cb3:	int3   
   140049cb4:	int3   
   140049cb5:	int3   
   140049cb6:	int3   
   140049cb7:	int3   
   140049cb8:	int3   
   140049cb9:	int3   
   140049cba:	int3   
   140049cbb:	int3   
   140049cbc:	int3   
   140049cbd:	int3   
   140049cbe:	int3   
   140049cbf:	int3   
   140049cc0:	rex push rbx
   140049cc2:	sub    rsp,0x30
   140049cc6:	test   rdx,rdx
   140049cc9:	mov    ebx,r9d
   140049ccc:	mov    r11,r8
   140049ccf:	mov    r9d,ecx
   140049cd2:	mov    r10,rdx
   140049cd5:	jne    0x140049d05
   140049cd7:	call   0x140048680
   140049cdc:	xor    r9d,r9d
   140049cdf:	xor    r8d,r8d
   140049ce2:	xor    edx,edx
   140049ce4:	xor    ecx,ecx
   140049ce6:	mov    QWORD PTR [rsp+0x20],0x0
   140049cef:	mov    DWORD PTR [rax],0x16
   140049cf5:	call   0x14004e100
   140049cfa:	mov    eax,0x16
   140049cff:	add    rsp,0x30
   140049d03:	pop    rbx
   140049d04:	ret    
   140049d05:	test   r8,r8
   140049d08:	je     0x140049cd7
   140049d0a:	cmp    r8,0x1
   140049d0e:	mov    WORD PTR [rdx],0x0
   140049d13:	ja     0x140049d43
   140049d15:	call   0x140048680
   140049d1a:	xor    r9d,r9d
   140049d1d:	xor    r8d,r8d
   140049d20:	xor    edx,edx
   140049d22:	xor    ecx,ecx
   140049d24:	mov    QWORD PTR [rsp+0x20],0x0
   140049d2d:	mov    DWORD PTR [rax],0x22
   140049d33:	call   0x14004e100
   140049d38:	mov    eax,0x22
   140049d3d:	add    rsp,0x30
   140049d41:	pop    rbx
   140049d42:	ret    
   140049d43:	lea    eax,[rbx-0x2]
   140049d46:	cmp    eax,0x22
   140049d49:	ja     0x140049cd7
   140049d4b:	xor    ecx,ecx
   140049d4d:	mov    r8,rdx
   140049d50:	xor    edx,edx
   140049d52:	mov    eax,r9d
   140049d55:	div    ebx
   140049d57:	cmp    edx,0x9
   140049d5a:	mov    r9d,eax
   140049d5d:	jbe    0x140049d65
   140049d5f:	add    dx,0x57
   140049d63:	jmp    0x140049d69
   140049d65:	add    dx,0x30
   140049d69:	mov    WORD PTR [r8],dx
   140049d6d:	add    r8,0x2
   140049d71:	add    rcx,0x1
   140049d75:	test   eax,eax
   140049d77:	je     0x140049d80
   140049d79:	cmp    rcx,r11
   140049d7c:	jb     0x140049d50
   140049d7e:	jmp    0x140049d85
   140049d80:	cmp    rcx,r11
   140049d83:	jb     0x140049d90
   140049d85:	cmp    rcx,r11
   140049d88:	mov    WORD PTR [r10],0x0
   140049d8e:	jae    0x140049d15
   140049d90:	mov    WORD PTR [r8],0x0
   140049d96:	sub    r8,0x2
   140049d9a:	data16 xchg ax,ax
   140049d9d:	data16 xchg ax,ax
   140049da0:	movzx  ecx,WORD PTR [r10]
   140049da4:	movzx  edx,WORD PTR [r8]
   140049da8:	add    r10,0x2
   140049dac:	mov    WORD PTR [r8],cx
   140049db0:	mov    WORD PTR [r10-0x2],dx
   140049db5:	sub    r8,0x2
   140049db9:	cmp    r10,r8
   140049dbc:	jb     0x140049da0
   140049dbe:	xor    eax,eax
   140049dc0:	add    rsp,0x30
   140049dc4:	pop    rbx
   140049dc5:	ret    
   140049dc6:	int3   
   140049dc7:	int3   
   140049dc8:	int3   
   140049dc9:	int3   
   140049dca:	int3   
   140049dcb:	int3   
   140049dcc:	int3   
   140049dcd:	int3   
   140049dce:	int3   
   140049dcf:	int3   
   140049dd0:	rex push rbx
   140049dd2:	sub    rsp,0x40
   140049dd6:	mov    QWORD PTR [rsp+0x58],rsi
   140049ddb:	mov    QWORD PTR [rsp+0x60],rdi
   140049de0:	xor    dil,dil
   140049de3:	test   rdx,rdx
   140049de6:	mov    QWORD PTR [rsp+0x68],r12
   140049deb:	mov    BYTE PTR [rsp+0x38],dil
   140049df0:	mov    r12d,ecx
   140049df3:	jne    0x140049e69
   140049df5:	mov    QWORD PTR [rsp+0x50],rbp
   140049dfa:	call   0x14004bd60
   140049dff:	mov    rsi,QWORD PTR [rax+0xc0]
   140049e06:	mov    rbp,QWORD PTR [rax+0xb8]
   140049e0d:	mov    rbx,rax
   140049e10:	cmp    rsi,QWORD PTR [rip+0x3da89]        # 0x1400878a0
   140049e17:	je     0x140049e2f
   140049e19:	mov    edx,DWORD PTR [rax+0xc8]
   140049e1f:	test   DWORD PTR [rip+0x3d903],edx        # 0x140087728
   140049e25:	jne    0x140049e2f
   140049e27:	call   0x14004f030
   140049e2c:	mov    rsi,rax
   140049e2f:	cmp    rbp,QWORD PTR [rip+0x3d7ea]        # 0x140087620
   140049e36:	mov    rbp,QWORD PTR [rsp+0x50]
   140049e3b:	je     0x140049e50
   140049e3d:	mov    ecx,DWORD PTR [rbx+0xc8]
   140049e43:	test   DWORD PTR [rip+0x3d8df],ecx        # 0x140087728
   140049e49:	jne    0x140049e50
   140049e4b:	call   0x14004e4e0
   140049e50:	mov    ecx,DWORD PTR [rbx+0xc8]
   140049e56:	test   cl,0x2
   140049e59:	jne    0x140049e8b
   140049e5b:	or     ecx,0x2
   140049e5e:	mov    dil,0x1
   140049e61:	mov    DWORD PTR [rbx+0xc8],ecx
   140049e67:	jmp    0x140049e8b
   140049e69:	mov    rax,QWORD PTR [rdx]
   140049e6c:	lea    rcx,[rsp+0x20]
   140049e71:	mov    QWORD PTR [rcx],rax
   140049e74:	mov    rax,QWORD PTR [rdx+0x8]
   140049e78:	mov    QWORD PTR [rcx+0x8],rax
   140049e7c:	movzx  edi,BYTE PTR [rsp+0x38]
   140049e81:	mov    rbx,QWORD PTR [rsp+0x30]
   140049e86:	mov    rsi,QWORD PTR [rsp+0x20]
   140049e8b:	mov    rax,QWORD PTR [rsi+0x140]
   140049e92:	mov    rsi,QWORD PTR [rsp+0x58]
   140049e97:	movzx  ecx,r12b
   140049e9b:	mov    ax,WORD PTR [rax+rcx*2]
   140049e9f:	mov    r12,QWORD PTR [rsp+0x68]
   140049ea4:	and    eax,0x8000
   140049ea9:	test   dil,dil
   140049eac:	mov    rdi,QWORD PTR [rsp+0x60]
   140049eb1:	je     0x140049eba
   140049eb3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140049eba:	add    rsp,0x40
   140049ebe:	pop    rbx
   140049ebf:	ret    
   140049ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140049ec5:	mov    QWORD PTR [rsp+0x10],rbp
   140049eca:	mov    QWORD PTR [rsp+0x18],rsi
   140049ecf:	mov    QWORD PTR [rsp+0x20],rdi
   140049ed4:	push   r12
   140049ed6:	sub    rsp,0x20
   140049eda:	mov    r12d,ecx
   140049edd:	xor    bpl,bpl
   140049ee0:	call   0x14004bd60
   140049ee5:	mov    rsi,QWORD PTR [rax+0xc0]
   140049eec:	mov    rdi,QWORD PTR [rax+0xb8]
   140049ef3:	mov    rbx,rax
   140049ef6:	cmp    rsi,QWORD PTR [rip+0x3d9a3]        # 0x1400878a0
   140049efd:	je     0x140049f15
   140049eff:	mov    edx,DWORD PTR [rax+0xc8]
   140049f05:	test   DWORD PTR [rip+0x3d81d],edx        # 0x140087728
   140049f0b:	jne    0x140049f15
   140049f0d:	call   0x14004f030
   140049f12:	mov    rsi,rax
   140049f15:	cmp    rdi,QWORD PTR [rip+0x3d704]        # 0x140087620
   140049f1c:	je     0x140049f31
   140049f1e:	mov    ecx,DWORD PTR [rbx+0xc8]
   140049f24:	test   DWORD PTR [rip+0x3d7fe],ecx        # 0x140087728
   140049f2a:	jne    0x140049f31
   140049f2c:	call   0x14004e4e0
   140049f31:	mov    ecx,DWORD PTR [rbx+0xc8]
   140049f37:	test   cl,0x2
   140049f3a:	jne    0x140049f48
   140049f3c:	or     ecx,0x2
   140049f3f:	mov    bpl,0x1
   140049f42:	mov    DWORD PTR [rbx+0xc8],ecx
   140049f48:	mov    rax,QWORD PTR [rsi+0x140]
   140049f4f:	movzx  ecx,r12b
   140049f53:	mov    ax,WORD PTR [rax+rcx*2]
   140049f57:	and    eax,0x8000
   140049f5c:	test   bpl,bpl
   140049f5f:	je     0x140049f68
   140049f61:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140049f68:	mov    rbx,QWORD PTR [rsp+0x30]
   140049f6d:	mov    rbp,QWORD PTR [rsp+0x38]
   140049f72:	mov    rsi,QWORD PTR [rsp+0x40]
   140049f77:	mov    rdi,QWORD PTR [rsp+0x48]
   140049f7c:	add    rsp,0x20
   140049f80:	pop    r12
   140049f82:	ret    
   140049f83:	int3   
   140049f84:	int3   
   140049f85:	int3   
   140049f86:	int3   
   140049f87:	int3   
   140049f88:	int3   
   140049f89:	int3   
   140049f8a:	int3   
   140049f8b:	int3   
   140049f8c:	int3   
   140049f8d:	int3   
   140049f8e:	int3   
   140049f8f:	int3   
   140049f90:	mov    dx,0x4
   140049f94:	jmp    0x140051ba0
   140049f99:	int3   
   140049f9a:	int3   
   140049f9b:	int3   
   140049f9c:	int3   
   140049f9d:	int3   
   140049f9e:	int3   
   140049f9f:	int3   
   140049fa0:	mov    dx,0x8
   140049fa4:	jmp    0x140051ba0
   140049fa9:	int3   
   140049faa:	int3   
   140049fab:	int3   
   140049fac:	int3   
   140049fad:	int3   
   140049fae:	int3   
   140049faf:	int3   
   140049fb0:	lea    rax,[rip+0xc679]        # 0x140056630
   140049fb7:	lea    rcx,[rip+0xd502]        # 0x1400574c0
   140049fbe:	mov    QWORD PTR [rip+0x3df03],rax        # 0x140087ec8
   140049fc5:	lea    rax,[rip+0xc604]        # 0x1400565d0
   140049fcc:	mov    QWORD PTR [rip+0x3deed],rcx        # 0x140087ec0
   140049fd3:	mov    QWORD PTR [rip+0x3def6],rax        # 0x140087ed0
   140049fda:	lea    rax,[rip+0xc63f]        # 0x140056620
   140049fe1:	mov    QWORD PTR [rip+0x3df00],rcx        # 0x140087ee8
   140049fe8:	mov    QWORD PTR [rip+0x3dee9],rax        # 0x140087ed8
   140049fef:	lea    rax,[rip+0xc56a]        # 0x140056560
   140049ff6:	mov    QWORD PTR [rip+0x3dee3],rax        # 0x140087ee0
   140049ffd:	lea    rax,[rip+0xd41c]        # 0x140057420
   14004a004:	mov    QWORD PTR [rip+0x3dee5],rax        # 0x140087ef0
   14004a00b:	lea    rax,[rip+0xc56e]        # 0x140056580
   14004a012:	mov    QWORD PTR [rip+0x3dedf],rax        # 0x140087ef8
   14004a019:	lea    rax,[rip+0xc3d0]        # 0x1400563f0
   14004a020:	mov    QWORD PTR [rip+0x3ded9],rax        # 0x140087f00
   14004a027:	lea    rax,[rip+0xc282]        # 0x1400562b0
   14004a02e:	mov    QWORD PTR [rip+0x3ded3],rax        # 0x140087f08
   14004a035:	ret    
   14004a036:	int3   
   14004a037:	int3   
   14004a038:	int3   
   14004a039:	int3   
   14004a03a:	int3   
   14004a03b:	int3   
   14004a03c:	int3   
   14004a03d:	int3   
   14004a03e:	int3   
   14004a03f:	int3   
   14004a040:	rex push rbx
   14004a042:	push   rsi
   14004a043:	push   rdi
   14004a044:	sub    rsp,0x40
   14004a048:	xor    esi,esi
   14004a04a:	test   rcx,rcx
   14004a04d:	mov    rdi,rdx
   14004a050:	mov    DWORD PTR [rsp+0x70],esi
   14004a054:	mov    DWORD PTR [rsp+0x78],esi
   14004a058:	mov    DWORD PTR [rsp+0x60],esi
   14004a05c:	mov    rbx,rcx
   14004a05f:	jne    0x14004a08d
   14004a061:	call   0x140048680
   14004a066:	xor    r9d,r9d
   14004a069:	xor    r8d,r8d
   14004a06c:	xor    edx,edx
   14004a06e:	xor    ecx,ecx
   14004a070:	mov    QWORD PTR [rsp+0x20],rsi
   14004a075:	mov    DWORD PTR [rax],0x16
   14004a07b:	call   0x14004e100
   14004a080:	mov    eax,0x16
   14004a085:	add    rsp,0x40
   14004a089:	pop    rdi
   14004a08a:	pop    rsi
   14004a08b:	pop    rbx
   14004a08c:	ret    
   14004a08d:	test   rdx,rdx
   14004a090:	mov    DWORD PTR [rcx],0xffffffff
   14004a096:	mov    DWORD PTR [rcx+0x4],0xffffffff
   14004a09d:	mov    DWORD PTR [rcx+0x8],0xffffffff
   14004a0a4:	mov    DWORD PTR [rcx+0xc],0xffffffff
   14004a0ab:	mov    DWORD PTR [rcx+0x10],0xffffffff
   14004a0b2:	mov    DWORD PTR [rcx+0x14],0xffffffff
   14004a0b9:	mov    DWORD PTR [rcx+0x18],0xffffffff
   14004a0c0:	mov    DWORD PTR [rcx+0x1c],0xffffffff
   14004a0c7:	mov    DWORD PTR [rcx+0x20],0xffffffff
   14004a0ce:	je     0x14004a061
   14004a0d0:	mov    rax,QWORD PTR [rdx]
   14004a0d3:	test   rax,rax
   14004a0d6:	jns    0x14004a0f0
   14004a0d8:	call   0x140048680
   14004a0dd:	mov    DWORD PTR [rax],0x16
   14004a0e3:	mov    eax,0x16
   14004a0e8:	add    rsp,0x40
   14004a0ec:	pop    rdi
   14004a0ed:	pop    rsi
   14004a0ee:	pop    rbx
   14004a0ef:	ret    
   14004a0f0:	movabs rcx,0x793406fff
   14004a0fa:	cmp    rax,rcx
   14004a0fd:	jg     0x14004a061
   14004a103:	call   0x140056000
   14004a108:	lea    rcx,[rsp+0x70]
   14004a10d:	call   0x140055160
   14004a112:	test   eax,eax
   14004a114:	je     0x14004a12a
   14004a116:	xor    r9d,r9d
   14004a119:	xor    r8d,r8d
   14004a11c:	xor    edx,edx
   14004a11e:	xor    ecx,ecx
   14004a120:	mov    QWORD PTR [rsp+0x20],rsi
   14004a125:	call   0x14004e060
   14004a12a:	lea    rcx,[rsp+0x78]
   14004a12f:	call   0x1400551b0
   14004a134:	test   eax,eax
   14004a136:	je     0x14004a14c
   14004a138:	xor    r9d,r9d
   14004a13b:	xor    r8d,r8d
   14004a13e:	xor    edx,edx
   14004a140:	xor    ecx,ecx
   14004a142:	mov    QWORD PTR [rsp+0x20],rsi
   14004a147:	call   0x14004e060
   14004a14c:	lea    rcx,[rsp+0x60]
   14004a151:	call   0x140055200
   14004a156:	test   eax,eax
   14004a158:	je     0x14004a16e
   14004a15a:	xor    r9d,r9d
   14004a15d:	xor    r8d,r8d
   14004a160:	xor    edx,edx
   14004a162:	xor    ecx,ecx
   14004a164:	mov    QWORD PTR [rsp+0x20],rsi
   14004a169:	call   0x14004e060
   14004a16e:	mov    rcx,QWORD PTR [rdi]
   14004a171:	cmp    rcx,0x3f480
   14004a178:	jle    0x14004a1e4
   14004a17a:	movsxd rax,DWORD PTR [rsp+0x60]
   14004a17f:	lea    rdx,[rsp+0x30]
   14004a184:	sub    rcx,rax
   14004a187:	mov    QWORD PTR [rsp+0x30],rcx
   14004a18c:	mov    rcx,rbx
   14004a18f:	call   0x140054e30
   14004a194:	test   eax,eax
   14004a196:	jne    0x14004a358
   14004a19c:	cmp    DWORD PTR [rsp+0x70],esi
   14004a1a0:	je     0x14004a356
   14004a1a6:	mov    rcx,rbx
   14004a1a9:	call   0x140056060
   14004a1ae:	test   eax,eax
   14004a1b0:	je     0x14004a356
   14004a1b6:	movsxd rax,DWORD PTR [rsp+0x78]
   14004a1bb:	lea    rdx,[rsp+0x30]
   14004a1c0:	mov    rcx,rbx
   14004a1c3:	sub    QWORD PTR [rsp+0x30],rax
   14004a1c8:	call   0x140054e30
   14004a1cd:	test   eax,eax
   14004a1cf:	jne    0x14004a358
   14004a1d5:	mov    DWORD PTR [rbx+0x20],0x1
   14004a1dc:	add    rsp,0x40
   14004a1e0:	pop    rdi
   14004a1e1:	pop    rsi
   14004a1e2:	pop    rbx
   14004a1e3:	ret    
   14004a1e4:	mov    rdx,rdi
   14004a1e7:	mov    rcx,rbx
   14004a1ea:	call   0x140054e30
   14004a1ef:	test   eax,eax
   14004a1f1:	jne    0x14004a358
   14004a1f7:	cmp    DWORD PTR [rsp+0x70],esi
   14004a1fb:	je     0x14004a21e
   14004a1fd:	mov    rcx,rbx
   14004a200:	call   0x140056060
   14004a205:	test   eax,eax
   14004a207:	je     0x14004a21e
   14004a209:	mov    eax,DWORD PTR [rsp+0x60]
   14004a20d:	mov    ecx,DWORD PTR [rsp+0x78]
   14004a211:	mov    DWORD PTR [rbx+0x20],0x1
   14004a218:	add    eax,ecx
   14004a21a:	cdqe   
   14004a21c:	jmp    0x14004a223
   14004a21e:	movsxd rax,DWORD PTR [rsp+0x60]
   14004a223:	movsxd rcx,DWORD PTR [rbx]
   14004a226:	movabs r8,0x8888888888888889
   14004a230:	sub    rcx,rax
   14004a233:	mov    rax,r8
   14004a236:	imul   rcx
   14004a239:	add    rdx,rcx
   14004a23c:	sar    rdx,0x5
   14004a240:	mov    rax,rdx
   14004a243:	shr    rax,0x3f
   14004a247:	add    rdx,rax
   14004a24a:	mov    rax,rcx
   14004a24d:	imul   rdx,rdx,0x3c
   14004a251:	sub    rax,rdx
   14004a254:	test   eax,eax
   14004a256:	mov    DWORD PTR [rbx],eax
   14004a258:	jns    0x14004a263
   14004a25a:	add    eax,0x3c
   14004a25d:	sub    rcx,0x3c
   14004a261:	mov    DWORD PTR [rbx],eax
   14004a263:	mov    rax,r8
   14004a266:	imul   rcx
   14004a269:	lea    r9,[rcx+rdx*1]
   14004a26d:	sar    r9,0x5
   14004a271:	mov    rax,r9
   14004a274:	shr    rax,0x3f
   14004a278:	add    r9,rax
   14004a27b:	movsxd rax,DWORD PTR [rbx+0x4]
   14004a27f:	add    r9,rax
   14004a282:	mov    rax,r8
   14004a285:	mov    rcx,r9
   14004a288:	imul   r9
   14004a28b:	add    rdx,r9
   14004a28e:	sar    rdx,0x5
   14004a292:	mov    rax,rdx
   14004a295:	shr    rax,0x3f
   14004a299:	add    rdx,rax
   14004a29c:	imul   rdx,rdx,0x3c
   14004a2a0:	sub    rcx,rdx
   14004a2a3:	test   ecx,ecx
   14004a2a5:	mov    DWORD PTR [rbx+0x4],ecx
   14004a2a8:	jns    0x14004a2b4
   14004a2aa:	add    ecx,0x3c
   14004a2ad:	sub    r9,0x3c
   14004a2b1:	mov    DWORD PTR [rbx+0x4],ecx
   14004a2b4:	mov    rax,r8
   14004a2b7:	imul   r9
   14004a2ba:	lea    r8,[r9+rdx*1]
   14004a2be:	movabs r9,0x2aaaaaaaaaaaaaab
   14004a2c8:	sar    r8,0x5
   14004a2cc:	mov    rax,r8
   14004a2cf:	shr    rax,0x3f
   14004a2d3:	add    r8,rax
   14004a2d6:	movsxd rax,DWORD PTR [rbx+0x8]
   14004a2da:	add    r8,rax
   14004a2dd:	mov    rax,r9
   14004a2e0:	imul   r8
   14004a2e3:	sar    rdx,0x2
   14004a2e7:	mov    rax,rdx
   14004a2ea:	shr    rax,0x3f
   14004a2ee:	add    rdx,rax
   14004a2f1:	lea    rcx,[rdx+rdx*2]
   14004a2f5:	mov    rdx,r8
   14004a2f8:	shl    rcx,0x3
   14004a2fc:	sub    rdx,rcx
   14004a2ff:	test   edx,edx
   14004a301:	mov    DWORD PTR [rbx+0x8],edx
   14004a304:	jns    0x14004a310
   14004a306:	lea    ecx,[rdx+0x18]
   14004a309:	sub    r8,0x18
   14004a30d:	mov    DWORD PTR [rbx+0x8],ecx
   14004a310:	mov    rax,r9
   14004a313:	imul   r8
   14004a316:	mov    r8,rdx
   14004a319:	sar    r8,0x2
   14004a31d:	mov    rax,r8
   14004a320:	shr    rax,0x3f
   14004a324:	add    r8,rax
   14004a327:	test   r8,r8
   14004a32a:	jle    0x14004a360
   14004a32c:	mov    eax,DWORD PTR [rbx+0x18]
   14004a32f:	lea    ecx,[r8+rax*1]
   14004a333:	mov    eax,0x92492493
   14004a338:	imul   ecx
   14004a33a:	add    edx,ecx
   14004a33c:	sar    edx,0x2
   14004a33f:	mov    eax,edx
   14004a341:	shr    eax,0x1f
   14004a344:	add    edx,eax
   14004a346:	imul   edx,edx,0x7
   14004a349:	sub    ecx,edx
   14004a34b:	add    DWORD PTR [rbx+0xc],r8d
   14004a34f:	mov    DWORD PTR [rbx+0x18],ecx
   14004a352:	add    DWORD PTR [rbx+0x1c],r8d
   14004a356:	xor    eax,eax
   14004a358:	add    rsp,0x40
   14004a35c:	pop    rdi
   14004a35d:	pop    rsi
   14004a35e:	pop    rbx
   14004a35f:	ret    
   14004a360:	jns    0x14004a356
   14004a362:	mov    eax,DWORD PTR [rbx+0x18]
   14004a365:	add    DWORD PTR [rbx+0xc],r8d
   14004a369:	lea    ecx,[r8+rax*1+0x7]
   14004a36e:	mov    eax,0x92492493
   14004a373:	imul   ecx
   14004a375:	add    edx,ecx
   14004a377:	sar    edx,0x2
   14004a37a:	mov    eax,edx
   14004a37c:	shr    eax,0x1f
   14004a37f:	add    edx,eax
   14004a381:	mov    eax,DWORD PTR [rbx+0xc]
   14004a384:	imul   edx,edx,0x7
   14004a387:	sub    ecx,edx
   14004a389:	test   eax,eax
   14004a38b:	mov    DWORD PTR [rbx+0x18],ecx
   14004a38e:	jg     0x14004a352
   14004a390:	add    DWORD PTR [rbx+0x14],0xffffffff
   14004a394:	add    eax,0x1f
   14004a397:	mov    DWORD PTR [rbx+0x10],0xb
   14004a39e:	mov    DWORD PTR [rbx+0xc],eax
   14004a3a1:	lea    eax,[r8+0x16d]
   14004a3a8:	add    DWORD PTR [rbx+0x1c],eax
   14004a3ab:	xor    eax,eax
   14004a3ad:	add    rsp,0x40
   14004a3b1:	pop    rdi
   14004a3b2:	pop    rsi
   14004a3b3:	pop    rbx
   14004a3b4:	ret    
   14004a3b5:	int3   
   14004a3b6:	int3   
   14004a3b7:	int3   
   14004a3b8:	int3   
   14004a3b9:	int3   
   14004a3ba:	int3   
   14004a3bb:	int3   
   14004a3bc:	int3   
   14004a3bd:	int3   
   14004a3be:	int3   
   14004a3bf:	int3   
   14004a3c0:	mov    QWORD PTR [rsp+0x8],rbx
   14004a3c5:	mov    QWORD PTR [rsp+0x10],rbp
   14004a3ca:	mov    QWORD PTR [rsp+0x18],rsi
   14004a3cf:	mov    QWORD PTR [rsp+0x20],rdi
   14004a3d4:	push   r12
   14004a3d6:	sub    rsp,0x20
   14004a3da:	mov    r10,QWORD PTR [r9+0x38]
   14004a3de:	mov    rsi,rdx
   14004a3e1:	mov    r12,r8
   14004a3e4:	mov    eax,DWORD PTR [r10]
   14004a3e7:	mov    rbp,rcx
   14004a3ea:	mov    rdx,r9
   14004a3ed:	add    rax,rax
   14004a3f0:	mov    rcx,rsi
   14004a3f3:	mov    rdi,r9
   14004a3f6:	lea    rbx,[r10+rax*8+0x4]
   14004a3fb:	mov    r8,rbx
   14004a3fe:	call   0x140046fa0
   14004a403:	test   BYTE PTR [rbp+0x4],0x66
   14004a407:	mov    r11d,DWORD PTR [rbx]
   14004a40a:	jne    0x14004a412
   14004a40c:	and    r11d,0x1
   14004a410:	jmp    0x14004a416
   14004a412:	and    r11d,0x2
   14004a416:	test   r11d,r11d
   14004a419:	je     0x14004a42e
   14004a41b:	mov    r9,rdi
   14004a41e:	mov    r8,r12
   14004a421:	mov    rdx,rsi
   14004a424:	mov    rcx,rbp
   14004a427:	call   0x1400489b0
   14004a42c:	jmp    0x14004a433
   14004a42e:	mov    eax,0x1
   14004a433:	mov    rbx,QWORD PTR [rsp+0x30]
   14004a438:	mov    rbp,QWORD PTR [rsp+0x38]
   14004a43d:	mov    rsi,QWORD PTR [rsp+0x40]
   14004a442:	mov    rdi,QWORD PTR [rsp+0x48]
   14004a447:	add    rsp,0x20
   14004a44b:	pop    r12
   14004a44d:	ret    
   14004a44e:	int3   
   14004a44f:	int3   
   14004a450:	rex push rbp
   14004a452:	push   r12
   14004a454:	push   r13
   14004a456:	push   r14
   14004a458:	push   r15
   14004a45a:	sub    rsp,0xb0
   14004a461:	lea    rbp,[rsp+0x30]
   14004a466:	mov    QWORD PTR [rbp+0xb0],rbx
   14004a46d:	mov    QWORD PTR [rbp+0xb8],rsi
   14004a474:	mov    QWORD PTR [rbp+0xc0],rdi
   14004a47b:	mov    rax,QWORD PTR [rip+0x3c8ee]        # 0x140086d70
   14004a482:	xor    rax,rbp
   14004a485:	mov    QWORD PTR [rbp+0x70],rax
   14004a489:	mov    eax,DWORD PTR [rsp]
   14004a48c:	xor    ebx,ebx
   14004a48e:	mov    DWORD PTR [rbp+0x0],ebx
   14004a491:	sub    rsp,0x10
   14004a495:	lea    r13,[rsp+0x30]
   14004a49a:	mov    eax,DWORD PTR [r13+0x0]
   14004a49e:	lea    r8d,[rbx+0x30]
   14004a4a2:	lea    rdx,[rbp+0x10]
   14004a4a6:	mov    rcx,r13
   14004a4a9:	call   QWORD PTR [rip+0x19dd9]        # 0x140064288
   14004a4af:	test   rax,rax
   14004a4b2:	je     0x14004a5bc
   14004a4b8:	mov    r14,QWORD PTR [rbp+0x18]
   14004a4bc:	lea    rcx,[rbp+0x40]
   14004a4c0:	call   QWORD PTR [rip+0x19dba]        # 0x140064280
   14004a4c6:	mov    edi,DWORD PTR [rbp+0x44]
   14004a4c9:	lea    rcx,[rbp+0x0]
   14004a4cd:	call   0x140048260
   14004a4d2:	test   eax,eax
   14004a4d4:	je     0x14004a4ea
   14004a4d6:	xor    r9d,r9d
   14004a4d9:	xor    r8d,r8d
   14004a4dc:	xor    edx,edx
   14004a4de:	xor    ecx,ecx
   14004a4e0:	mov    QWORD PTR [rsp+0x20],rbx
   14004a4e5:	call   0x14004e060
   14004a4ea:	mov    ecx,DWORD PTR [rbp+0x0]
   14004a4ed:	cmp    ecx,0x2
   14004a4f0:	jne    0x14004a532
   14004a4f2:	lea    rcx,[rip+0x24247]        # 0x14006e740
   14004a4f9:	call   QWORD PTR [rip+0x19f51]        # 0x140064450
   14004a4ff:	test   rax,rax
   14004a502:	je     0x14004a52f
   14004a504:	lea    rdx,[rip+0x2421d]        # 0x14006e728
   14004a50b:	mov    rcx,rax
   14004a50e:	call   QWORD PTR [rip+0x1a0d4]        # 0x1400645e8
   14004a514:	test   rax,rax
   14004a517:	je     0x14004a52f
   14004a519:	lea    rcx,[rbp+0x4]
   14004a51d:	mov    DWORD PTR [rbp+0x4],ebx
   14004a520:	call   rax
   14004a522:	cmp    eax,0x1
   14004a525:	jne    0x14004a52f
   14004a527:	mov    eax,DWORD PTR [rbp+0x4]
   14004a52a:	test   eax,eax
   14004a52c:	cmovne ebx,eax
   14004a52f:	mov    ecx,DWORD PTR [rbp+0x0]
   14004a532:	mov    r15d,0x1
   14004a538:	lea    r8d,[rdi-0x1]
   14004a53c:	lea    edx,[rbx+rdi*1-0x1]
   14004a540:	cmp    ecx,r15d
   14004a543:	mov    eax,r8d
   14004a546:	mov    esi,0x104
   14004a54b:	not    eax
   14004a54d:	cmove  esi,r15d
   14004a551:	and    edx,eax
   14004a553:	je     0x14004a557
   14004a555:	add    edx,edi
   14004a557:	lea    eax,[rdi+rdi*1]
   14004a55a:	mov    ebx,r8d
   14004a55d:	cmp    edx,eax
   14004a55f:	not    rbx
   14004a562:	cmovb  edx,eax
   14004a565:	and    rbx,r13
   14004a568:	mov    eax,0x11
   14004a56d:	mov    r12d,edx
   14004a570:	sub    rbx,r12
   14004a573:	cmp    ecx,r15d
   14004a576:	cmove  edi,eax
   14004a579:	mov    eax,edi
   14004a57b:	add    rax,r14
   14004a57e:	cmp    rbx,rax
   14004a581:	jb     0x14004a5bc
   14004a583:	mov    r9d,0x4
   14004a589:	mov    r8d,0x1000
   14004a58f:	mov    rdx,r12
   14004a592:	mov    rcx,rbx
   14004a595:	call   QWORD PTR [rip+0x19cdd]        # 0x140064278
   14004a59b:	test   rax,rax
   14004a59e:	je     0x14004a5bc
   14004a5a0:	lea    r9,[rbp+0x8]
   14004a5a4:	mov    r8d,esi
   14004a5a7:	mov    rdx,r12
   14004a5aa:	mov    rcx,rbx
   14004a5ad:	call   QWORD PTR [rip+0x19cbd]        # 0x140064270
   14004a5b3:	test   eax,eax
   14004a5b5:	je     0x14004a5bc
   14004a5b7:	mov    eax,r15d
   14004a5ba:	jmp    0x14004a5be
   14004a5bc:	xor    eax,eax
   14004a5be:	mov    rcx,QWORD PTR [rbp+0x70]
   14004a5c2:	xor    rcx,rbp
   14004a5c5:	call   0x140046470
   14004a5ca:	mov    rbx,QWORD PTR [rbp+0xb0]
   14004a5d1:	mov    rsi,QWORD PTR [rbp+0xb8]
   14004a5d8:	mov    rdi,QWORD PTR [rbp+0xc0]
   14004a5df:	lea    rsp,[rbp+0x80]
   14004a5e6:	pop    r15
   14004a5e8:	pop    r14
   14004a5ea:	pop    r13
   14004a5ec:	pop    r12
   14004a5ee:	pop    rbp
   14004a5ef:	ret    
   14004a5f0:	test   r8,r8
   14004a5f3:	jne    0x14004a5f8
   14004a5f5:	xor    eax,eax
   14004a5f7:	ret    
   14004a5f8:	sub    r8,0x1
   14004a5fc:	je     0x14004a61b
   14004a5fe:	xchg   ax,ax
   14004a600:	movzx  eax,WORD PTR [rcx]
   14004a603:	test   ax,ax
   14004a606:	je     0x14004a61b
   14004a608:	cmp    ax,WORD PTR [rdx]
   14004a60b:	jne    0x14004a61b
   14004a60d:	add    rcx,0x2
   14004a611:	add    rdx,0x2
   14004a615:	sub    r8,0x1
   14004a619:	jne    0x14004a600
   14004a61b:	movzx  eax,WORD PTR [rcx]
   14004a61e:	movzx  ecx,WORD PTR [rdx]
   14004a621:	sub    eax,ecx
   14004a623:	ret    
   14004a624:	int3   
   14004a625:	int3   
   14004a626:	int3   
   14004a627:	int3   
   14004a628:	int3   
   14004a629:	int3   
   14004a62a:	int3   
   14004a62b:	int3   
   14004a62c:	int3   
   14004a62d:	int3   
   14004a62e:	int3   
   14004a62f:	int3   
   14004a630:	sub    rsp,0x28
   14004a634:	mov    rax,QWORD PTR [rcx]
   14004a637:	cmp    DWORD PTR [rax],0xe06d7363
   14004a63d:	jne    0x14004a66a
   14004a63f:	cmp    DWORD PTR [rax+0x18],0x4
   14004a643:	jne    0x14004a66a
   14004a645:	mov    eax,DWORD PTR [rax+0x20]
   14004a648:	cmp    eax,0x19930520
   14004a64d:	je     0x14004a664
   14004a64f:	cmp    eax,0x19930521
   14004a654:	je     0x14004a664
   14004a656:	cmp    eax,0x19930522
   14004a65b:	je     0x14004a664
   14004a65d:	cmp    eax,0x1994000
   14004a662:	jne    0x14004a66a
   14004a664:	call   0x14004c250
   14004a669:	int3   
   14004a66a:	xor    eax,eax
   14004a66c:	add    rsp,0x28
   14004a670:	ret    
   14004a671:	int3   
   14004a672:	int3   
   14004a673:	int3   
   14004a674:	int3   
   14004a675:	int3   
   14004a676:	int3   
   14004a677:	int3   
   14004a678:	int3   
   14004a679:	int3   
   14004a67a:	int3   
   14004a67b:	int3   
   14004a67c:	int3   
   14004a67d:	int3   
   14004a67e:	int3   
   14004a67f:	int3   
   14004a680:	sub    rsp,0x28
   14004a684:	lea    rcx,[rip+0xffffffffffffffa5]        # 0x14004a630
   14004a68b:	call   QWORD PTR [rip+0x19bff]        # 0x140064290
   14004a691:	xor    eax,eax
   14004a693:	add    rsp,0x28
   14004a697:	ret    
   14004a698:	int3   
   14004a699:	int3   
   14004a69a:	int3   
   14004a69b:	int3   
   14004a69c:	int3   
   14004a69d:	int3   
   14004a69e:	int3   
   14004a69f:	int3   
   14004a6a0:	mov    QWORD PTR [rsp+0x18],rbx
   14004a6a5:	push   rsi
   14004a6a6:	push   rdi
   14004a6a7:	push   r12
   14004a6a9:	sub    rsp,0x30
   14004a6ad:	lea    r12,[rip+0x3c85c]        # 0x140086f10
   14004a6b4:	xor    esi,esi
   14004a6b6:	mov    edi,ecx
   14004a6b8:	mov    rax,r12
   14004a6bb:	mov    ebx,esi
   14004a6bd:	data16 xchg ax,ax
   14004a6c0:	cmp    ecx,DWORD PTR [rax]
   14004a6c2:	je     0x14004a6de
   14004a6c4:	add    ebx,0x1
   14004a6c7:	add    rax,0x10
   14004a6cb:	cmp    ebx,0x17
   14004a6ce:	jb     0x14004a6c0
   14004a6d0:	mov    rbx,QWORD PTR [rsp+0x60]
   14004a6d5:	add    rsp,0x30
   14004a6d9:	pop    r12
   14004a6db:	pop    rdi
   14004a6dc:	pop    rsi
   14004a6dd:	ret    
   14004a6de:	cmp    ebx,0x17
   14004a6e1:	jae    0x14004a8c5
   14004a6e7:	mov    ecx,0x3
   14004a6ec:	call   0x140057a50
   14004a6f1:	cmp    eax,0x1
   14004a6f4:	je     0x14004a87c
   14004a6fa:	mov    ecx,0x3
   14004a6ff:	call   0x140057a50
   14004a704:	test   eax,eax
   14004a706:	jne    0x14004a715
   14004a708:	cmp    DWORD PTR [rip+0x3c635],0x1        # 0x140086d44
   14004a70f:	je     0x14004a87c
   14004a715:	cmp    edi,0xfc
   14004a71b:	je     0x14004a8c5
   14004a721:	mov    QWORD PTR [rsp+0x50],rbp
   14004a726:	lea    rbp,[rip+0x41f73]        # 0x14008c6a0
   14004a72d:	lea    r8,[rip+0x245ec]        # 0x14006ed20
   14004a734:	mov    rcx,rbp
   14004a737:	mov    edx,0x314
   14004a73c:	call   0x1400579a0
   14004a741:	test   eax,eax
   14004a743:	je     0x14004a759
   14004a745:	xor    r9d,r9d
   14004a748:	xor    r8d,r8d
   14004a74b:	xor    edx,edx
   14004a74d:	xor    ecx,ecx
   14004a74f:	mov    QWORD PTR [rsp+0x20],rsi
   14004a754:	call   0x14004e060
   14004a759:	lea    rdx,[rip+0x41f59]        # 0x14008c6b9
   14004a760:	mov    r8d,0x104
   14004a766:	xor    ecx,ecx
   14004a768:	mov    BYTE PTR [rip+0x4204e],sil        # 0x14008c7bd
   14004a76f:	call   QWORD PTR [rip+0x19b2b]        # 0x1400642a0
   14004a775:	test   eax,eax
   14004a777:	jne    0x14004a7a9
   14004a779:	lea    r8,[rip+0x24588]        # 0x14006ed08
   14004a780:	lea    rcx,[rip+0x41f32]        # 0x14008c6b9
   14004a787:	mov    edx,0x2fb
   14004a78c:	call   0x1400579a0
   14004a791:	test   eax,eax
   14004a793:	je     0x14004a7a9
   14004a795:	xor    r9d,r9d
   14004a798:	xor    r8d,r8d
   14004a79b:	xor    edx,edx
   14004a79d:	xor    ecx,ecx
   14004a79f:	mov    QWORD PTR [rsp+0x20],rsi
   14004a7a4:	call   0x14004e060
   14004a7a9:	or     rcx,0xffffffffffffffff
   14004a7ad:	xor    eax,eax
   14004a7af:	lea    rdi,[rip+0x41f03]        # 0x14008c6b9
   14004a7b6:	repnz scas al,BYTE PTR es:[rdi]
   14004a7b8:	not    rcx
   14004a7bb:	cmp    rcx,0x3c
   14004a7bf:	jbe    0x14004a7f8
   14004a7c1:	lea    rcx,[rcx+rbp*1-0x23]
   14004a7c6:	lea    rdx,[rip+0x421e7]        # 0x14008c9b4
   14004a7cd:	lea    r9d,[rax+0x3]
   14004a7d1:	lea    r8,[rip+0x2452c]        # 0x14006ed04
   14004a7d8:	sub    rdx,rcx
   14004a7db:	call   0x140057880
   14004a7e0:	test   eax,eax
   14004a7e2:	je     0x14004a7f8
   14004a7e4:	xor    r9d,r9d
   14004a7e7:	xor    r8d,r8d
   14004a7ea:	xor    edx,edx
   14004a7ec:	xor    ecx,ecx
   14004a7ee:	mov    QWORD PTR [rsp+0x20],rsi
   14004a7f3:	call   0x14004e060
   14004a7f8:	lea    r8,[rip+0x24501]        # 0x14006ed00
   14004a7ff:	mov    edx,0x314
   14004a804:	mov    rcx,rbp
   14004a807:	call   0x1400577c0
   14004a80c:	test   eax,eax
   14004a80e:	je     0x14004a824
   14004a810:	xor    r9d,r9d
   14004a813:	xor    r8d,r8d
   14004a816:	xor    edx,edx
   14004a818:	xor    ecx,ecx
   14004a81a:	mov    QWORD PTR [rsp+0x20],rsi
   14004a81f:	call   0x14004e060
   14004a824:	movsxd r8,ebx
   14004a827:	mov    edx,0x314
   14004a82c:	mov    rcx,rbp
   14004a82f:	add    r8,r8
   14004a832:	mov    r8,QWORD PTR [r12+r8*8+0x8]
   14004a837:	call   0x1400577c0
   14004a83c:	test   eax,eax
   14004a83e:	je     0x14004a854
   14004a840:	xor    r9d,r9d
   14004a843:	xor    r8d,r8d
   14004a846:	xor    edx,edx
   14004a848:	xor    ecx,ecx
   14004a84a:	mov    QWORD PTR [rsp+0x20],rsi
   14004a84f:	call   0x14004e060
   14004a854:	lea    rdx,[rip+0x2447d]        # 0x14006ecd8
   14004a85b:	mov    r8d,0x12010
   14004a861:	mov    rcx,rbp
   14004a864:	call   0x140057560
   14004a869:	mov    rbp,QWORD PTR [rsp+0x50]
   14004a86e:	mov    rbx,QWORD PTR [rsp+0x60]
   14004a873:	add    rsp,0x30
   14004a877:	pop    r12
   14004a879:	pop    rdi
   14004a87a:	pop    rsi
   14004a87b:	ret    
   14004a87c:	mov    ecx,0xfffffff4
   14004a881:	call   QWORD PTR [rip+0x19a11]        # 0x140064298
   14004a887:	test   rax,rax
   14004a88a:	mov    r11,rax
   14004a88d:	je     0x14004a8c5
   14004a88f:	cmp    rax,0xffffffffffffffff
   14004a893:	je     0x14004a8c5
   14004a895:	xor    eax,eax
   14004a897:	movsxd rcx,ebx
   14004a89a:	lea    r9,[rsp+0x58]
   14004a89f:	add    rcx,rcx
   14004a8a2:	mov    QWORD PTR [rsp+0x20],rsi
   14004a8a7:	mov    rdx,QWORD PTR [r12+rcx*8+0x8]
   14004a8ac:	or     rcx,0xffffffffffffffff
   14004a8b0:	mov    rdi,rdx
   14004a8b3:	repnz scas al,BYTE PTR es:[rdi]
   14004a8b5:	not    rcx
   14004a8b8:	lea    r8,[rcx-0x1]
   14004a8bc:	mov    rcx,r11
   14004a8bf:	call   QWORD PTR [rip+0x19cfb]        # 0x1400645c0
   14004a8c5:	mov    rbx,QWORD PTR [rsp+0x60]
   14004a8ca:	add    rsp,0x30
   14004a8ce:	pop    r12
   14004a8d0:	pop    rdi
   14004a8d1:	pop    rsi
   14004a8d2:	ret    
   14004a8d3:	int3   
   14004a8d4:	int3   
   14004a8d5:	int3   
   14004a8d6:	int3   
   14004a8d7:	int3   
   14004a8d8:	int3   
   14004a8d9:	int3   
   14004a8da:	int3   
   14004a8db:	int3   
   14004a8dc:	int3   
   14004a8dd:	int3   
   14004a8de:	int3   
   14004a8df:	int3   
   14004a8e0:	sub    rsp,0x38
   14004a8e4:	mov    ecx,0x3
   14004a8e9:	call   0x140057a50
   14004a8ee:	cmp    eax,0x1
   14004a8f1:	je     0x14004a912
   14004a8f3:	mov    ecx,0x3
   14004a8f8:	call   0x140057a50
   14004a8fd:	test   eax,eax
   14004a8ff:	jne    0x14004a9c6
   14004a905:	cmp    DWORD PTR [rip+0x3c438],0x1        # 0x140086d44
   14004a90c:	jne    0x14004a9c6
   14004a912:	mov    QWORD PTR [rsp+0x48],rbx
   14004a917:	lea    rbx,[rip+0x3c5f2]        # 0x140086f10
   14004a91e:	mov    QWORD PTR [rsp+0x30],rdi
   14004a923:	mov    rax,rbx
   14004a926:	xor    edi,edi
   14004a928:	cmp    DWORD PTR [rax],0xfc
   14004a92e:	je     0x14004a93e
   14004a930:	add    edi,0x1
   14004a933:	add    rax,0x10
   14004a937:	cmp    edi,0x17
   14004a93a:	jb     0x14004a928
   14004a93c:	jmp    0x14004a9b2
   14004a93e:	cmp    edi,0x17
   14004a941:	jae    0x14004a9b2
   14004a943:	mov    ecx,0x3
   14004a948:	call   0x140057a50
   14004a94d:	cmp    eax,0x1
   14004a950:	je     0x14004a969
   14004a952:	mov    ecx,0x3
   14004a957:	call   0x140057a50
   14004a95c:	test   eax,eax
   14004a95e:	jne    0x14004a9b2
   14004a960:	cmp    DWORD PTR [rip+0x3c3dd],0x1        # 0x140086d44
   14004a967:	jne    0x14004a9b2
   14004a969:	mov    ecx,0xfffffff4
   14004a96e:	call   QWORD PTR [rip+0x19924]        # 0x140064298
   14004a974:	test   rax,rax
   14004a977:	mov    r11,rax
   14004a97a:	je     0x14004a9b2
   14004a97c:	cmp    rax,0xffffffffffffffff
   14004a980:	je     0x14004a9b2
   14004a982:	movsxd rcx,edi
   14004a985:	xor    eax,eax
   14004a987:	lea    r9,[rsp+0x40]
   14004a98c:	add    rcx,rcx
   14004a98f:	mov    QWORD PTR [rsp+0x20],rax
   14004a994:	mov    rdx,QWORD PTR [rbx+rcx*8+0x8]
   14004a999:	or     rcx,0xffffffffffffffff
   14004a99d:	mov    rdi,rdx
   14004a9a0:	repnz scas al,BYTE PTR es:[rdi]
   14004a9a2:	not    rcx
   14004a9a5:	lea    r8,[rcx-0x1]
   14004a9a9:	mov    rcx,r11
   14004a9ac:	call   QWORD PTR [rip+0x19c0e]        # 0x1400645c0
   14004a9b2:	mov    ecx,0xff
   14004a9b7:	call   0x14004a6a0
   14004a9bc:	mov    rdi,QWORD PTR [rsp+0x30]
   14004a9c1:	mov    rbx,QWORD PTR [rsp+0x48]
   14004a9c6:	add    rsp,0x38
   14004a9ca:	ret    
   14004a9cb:	int3   
   14004a9cc:	int3   
   14004a9cd:	int3   
   14004a9ce:	int3   
   14004a9cf:	int3   
   14004a9d0:	mov    QWORD PTR [rsp+0x10],rbx
   14004a9d5:	mov    QWORD PTR [rsp+0x18],rsi
   14004a9da:	push   rdi
   14004a9db:	sub    rsp,0x20
   14004a9df:	mov    rsi,rdx
   14004a9e2:	mov    edi,ecx
   14004a9e4:	call   0x14004bcd0
   14004a9e9:	test   rax,rax
   14004a9ec:	mov    rbx,rax
   14004a9ef:	je     0x14004abce
   14004a9f5:	mov    rcx,QWORD PTR [rax+0xa0]
   14004a9fc:	movsxd r8,DWORD PTR [rip+0x3c729]        # 0x14008712c
   14004aa03:	mov    rdx,rcx
   14004aa06:	cmp    DWORD PTR [rdx],edi
   14004aa08:	je     0x14004aa1d
   14004aa0a:	mov    rax,r8
   14004aa0d:	add    rdx,0x10
   14004aa11:	shl    rax,0x4
   14004aa15:	add    rax,rcx
   14004aa18:	cmp    rdx,rax
   14004aa1b:	jb     0x14004aa06
   14004aa1d:	mov    rax,r8
   14004aa20:	shl    rax,0x4
   14004aa24:	add    rax,rcx
   14004aa27:	cmp    rdx,rax
   14004aa2a:	jae    0x14004abce
   14004aa30:	cmp    DWORD PTR [rdx],edi
   14004aa32:	jne    0x14004abce
   14004aa38:	mov    r9,QWORD PTR [rdx+0x8]
   14004aa3c:	test   r9,r9
   14004aa3f:	je     0x14004abce
   14004aa45:	cmp    r9,0x5
   14004aa49:	jne    0x14004aa66
   14004aa4b:	xor    r8d,r8d
   14004aa4e:	lea    eax,[r9-0x4]
   14004aa52:	mov    QWORD PTR [rdx+0x8],r8
   14004aa56:	mov    rbx,QWORD PTR [rsp+0x38]
   14004aa5b:	mov    rsi,QWORD PTR [rsp+0x40]
   14004aa60:	add    rsp,0x20
   14004aa64:	pop    rdi
   14004aa65:	ret    
   14004aa66:	cmp    r9,0x1
   14004aa6a:	jne    0x14004aa7f
   14004aa6c:	or     eax,0xffffffff
   14004aa6f:	mov    rbx,QWORD PTR [rsp+0x38]
   14004aa74:	mov    rsi,QWORD PTR [rsp+0x40]
   14004aa79:	add    rsp,0x20
   14004aa7d:	pop    rdi
   14004aa7e:	ret    
   14004aa7f:	mov    QWORD PTR [rsp+0x30],rbp
   14004aa84:	mov    rbp,QWORD PTR [rbx+0xa8]
   14004aa8b:	mov    QWORD PTR [rbx+0xa8],rsi
   14004aa92:	mov    ecx,DWORD PTR [rdx+0x4]
   14004aa95:	cmp    ecx,0x8
   14004aa98:	jne    0x14004aba5
   14004aa9e:	movsxd r10,DWORD PTR [rip+0x3c67b]        # 0x140087120
   14004aaa5:	mov    ecx,DWORD PTR [rip+0x3c679]        # 0x140087124
   14004aaab:	add    ecx,r10d
   14004aaae:	mov    r11,r10
   14004aab1:	cmp    r10d,ecx
   14004aab4:	jge    0x14004aae7
   14004aab6:	shl    r11,0x4
   14004aaba:	xor    r8d,r8d
   14004aabd:	data16 xchg ax,ax
   14004aac0:	mov    rax,QWORD PTR [rbx+0xa0]
   14004aac7:	add    r10d,0x1
   14004aacb:	add    r11,0x10
   14004aacf:	mov    QWORD PTR [r11+rax*1-0x8],r8
   14004aad4:	mov    ecx,DWORD PTR [rip+0x3c64a]        # 0x140087124
   14004aada:	mov    eax,DWORD PTR [rip+0x3c640]        # 0x140087120
   14004aae0:	add    ecx,eax
   14004aae2:	cmp    r10d,ecx
   14004aae5:	jl     0x14004aac0
   14004aae7:	mov    eax,DWORD PTR [rdx]
   14004aae9:	mov    edi,DWORD PTR [rbx+0xb0]
   14004aaef:	cmp    eax,0xc000008e
   14004aaf4:	jne    0x14004ab02
   14004aaf6:	mov    DWORD PTR [rbx+0xb0],0x83
   14004ab00:	jmp    0x14004ab72
   14004ab02:	cmp    eax,0xc0000090
   14004ab07:	jne    0x14004ab15
   14004ab09:	mov    DWORD PTR [rbx+0xb0],0x81
   14004ab13:	jmp    0x14004ab72
   14004ab15:	cmp    eax,0xc0000091
   14004ab1a:	jne    0x14004ab28
   14004ab1c:	mov    DWORD PTR [rbx+0xb0],0x84
   14004ab26:	jmp    0x14004ab72
   14004ab28:	cmp    eax,0xc0000093
   14004ab2d:	jne    0x14004ab3b
   14004ab2f:	mov    DWORD PTR [rbx+0xb0],0x85
   14004ab39:	jmp    0x14004ab72
   14004ab3b:	cmp    eax,0xc000008d
   14004ab40:	jne    0x14004ab4e
   14004ab42:	mov    DWORD PTR [rbx+0xb0],0x82
   14004ab4c:	jmp    0x14004ab72
   14004ab4e:	cmp    eax,0xc000008f
   14004ab53:	jne    0x14004ab61
   14004ab55:	mov    DWORD PTR [rbx+0xb0],0x86
   14004ab5f:	jmp    0x14004ab72
   14004ab61:	cmp    eax,0xc0000092
   14004ab66:	jne    0x14004ab72
   14004ab68:	mov    DWORD PTR [rbx+0xb0],0x8a
   14004ab72:	mov    edx,DWORD PTR [rbx+0xb0]
   14004ab78:	mov    ecx,0x8
   14004ab7d:	call   r9
   14004ab80:	mov    QWORD PTR [rbx+0xa8],rbp
   14004ab87:	mov    rbp,QWORD PTR [rsp+0x30]
   14004ab8c:	mov    DWORD PTR [rbx+0xb0],edi
   14004ab92:	or     eax,0xffffffff
   14004ab95:	mov    rbx,QWORD PTR [rsp+0x38]
   14004ab9a:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ab9f:	add    rsp,0x20
   14004aba3:	pop    rdi
   14004aba4:	ret    
   14004aba5:	xor    r8d,r8d
   14004aba8:	mov    QWORD PTR [rdx+0x8],r8
   14004abac:	call   r9
   14004abaf:	mov    QWORD PTR [rbx+0xa8],rbp
   14004abb6:	mov    rbp,QWORD PTR [rsp+0x30]
   14004abbb:	or     eax,0xffffffff
   14004abbe:	mov    rbx,QWORD PTR [rsp+0x38]
   14004abc3:	mov    rsi,QWORD PTR [rsp+0x40]
   14004abc8:	add    rsp,0x20
   14004abcc:	pop    rdi
   14004abcd:	ret    
   14004abce:	mov    rbx,QWORD PTR [rsp+0x38]
   14004abd3:	mov    rsi,QWORD PTR [rsp+0x40]
   14004abd8:	xor    eax,eax
   14004abda:	add    rsp,0x20
   14004abde:	pop    rdi
   14004abdf:	ret    
   14004abe0:	mov    rcx,QWORD PTR [rip+0x43d41]        # 0x14008e928
   14004abe7:	lea    rax,[rip+0x1a75a]        # 0x140065348
   14004abee:	xor    edx,edx
   14004abf0:	test   rcx,rcx
   14004abf3:	cmove  rcx,rax
   14004abf7:	movzx  eax,WORD PTR [rcx]
   14004abfa:	cmp    ax,0x20
   14004abfe:	ja     0x14004ac09
   14004ac00:	test   ax,ax
   14004ac03:	je     0x14004ac39
   14004ac05:	test   edx,edx
   14004ac07:	je     0x14004ac1e
   14004ac09:	cmp    ax,0x22
   14004ac0d:	jne    0x14004ac18
   14004ac0f:	xor    eax,eax
   14004ac11:	test   edx,edx
   14004ac13:	sete   al
   14004ac16:	mov    edx,eax
   14004ac18:	add    rcx,0x2
   14004ac1c:	jmp    0x14004abf7
   14004ac1e:	movzx  eax,WORD PTR [rcx]
   14004ac21:	test   ax,ax
   14004ac24:	je     0x14004ac39
   14004ac26:	cmp    ax,0x20
   14004ac2a:	ja     0x14004ac39
   14004ac2c:	mov    ax,WORD PTR [rcx+0x2]
   14004ac30:	add    rcx,0x2
   14004ac34:	test   ax,ax
   14004ac37:	jne    0x14004ac26
   14004ac39:	mov    rax,rcx
   14004ac3c:	ret    
   14004ac3d:	int3   
   14004ac3e:	int3   
   14004ac3f:	int3   
   14004ac40:	push   r12
   14004ac42:	sub    rsp,0x30
   14004ac46:	mov    rdx,QWORD PTR [rip+0x419cb]        # 0x14008c618
   14004ac4d:	xor    r12d,r12d
   14004ac50:	test   rdx,rdx
   14004ac53:	mov    r8d,r12d
   14004ac56:	jne    0x14004ac62
   14004ac58:	or     eax,0xffffffff
   14004ac5b:	add    rsp,0x30
   14004ac5f:	pop    r12
   14004ac61:	ret    
   14004ac62:	movzx  eax,WORD PTR [rdx]
   14004ac65:	mov    QWORD PTR [rsp+0x50],rsi
   14004ac6a:	mov    QWORD PTR [rsp+0x58],rdi
   14004ac6f:	test   ax,ax
   14004ac72:	je     0x14004ac99
   14004ac74:	cmp    ax,0x3d
   14004ac78:	je     0x14004ac7e
   14004ac7a:	add    r8d,0x1
   14004ac7e:	xor    eax,eax
   14004ac80:	or     rcx,0xffffffffffffffff
   14004ac84:	mov    rdi,rdx
   14004ac87:	repnz scas ax,WORD PTR es:[rdi]
   14004ac8a:	not    rcx
   14004ac8d:	lea    rdx,[rdx+rcx*2]
   14004ac91:	mov    ax,WORD PTR [rdx]
   14004ac94:	test   ax,ax
   14004ac97:	jne    0x14004ac74
   14004ac99:	lea    eax,[r8+0x1]
   14004ac9d:	mov    edx,0x8
   14004aca2:	movsxd rcx,eax
   14004aca5:	call   0x14004de90
   14004acaa:	test   rax,rax
   14004acad:	mov    rsi,rax
   14004acb0:	mov    QWORD PTR [rip+0x419b1],rax        # 0x14008c668
   14004acb7:	jne    0x14004accd
   14004acb9:	mov    rsi,QWORD PTR [rsp+0x50]
   14004acbe:	mov    rdi,QWORD PTR [rsp+0x58]
   14004acc3:	or     eax,0xffffffff
   14004acc6:	add    rsp,0x30
   14004acca:	pop    r12
   14004accc:	ret    
   14004accd:	mov    QWORD PTR [rsp+0x40],rbx
   14004acd2:	mov    rbx,QWORD PTR [rip+0x4193f]        # 0x14008c618
   14004acd9:	mov    QWORD PTR [rsp+0x48],rbp
   14004acde:	movzx  edx,WORD PTR [rbx]
   14004ace1:	test   dx,dx
   14004ace4:	je     0x14004ad5c
   14004ace6:	data16 data16 xchg ax,ax
   14004acea:	data16 xchg ax,ax
   14004aced:	data16 xchg ax,ax
   14004acf0:	or     rcx,0xffffffffffffffff
   14004acf4:	xor    eax,eax
   14004acf6:	mov    rdi,rbx
   14004acf9:	repnz scas ax,WORD PTR es:[rdi]
   14004acfc:	cmp    dx,0x3d
   14004ad00:	not    rcx
   14004ad03:	movsxd rdi,ecx
   14004ad06:	je     0x14004ad48
   14004ad08:	movsxd rbp,ecx
   14004ad0b:	lea    edx,[rax+0x2]
   14004ad0e:	mov    rcx,rbp
   14004ad11:	call   0x14004de90
   14004ad16:	test   rax,rax
   14004ad19:	mov    QWORD PTR [rsi],rax
   14004ad1c:	je     0x14004ad95
   14004ad1e:	mov    r8,rbx
   14004ad21:	mov    rdx,rbp
   14004ad24:	mov    rcx,rax
   14004ad27:	call   0x140047080
   14004ad2c:	test   eax,eax
   14004ad2e:	je     0x14004ad44
   14004ad30:	xor    r9d,r9d
   14004ad33:	xor    r8d,r8d
   14004ad36:	xor    edx,edx
   14004ad38:	xor    ecx,ecx
   14004ad3a:	mov    QWORD PTR [rsp+0x20],r12
   14004ad3f:	call   0x14004e060
   14004ad44:	add    rsi,0x8
   14004ad48:	mov    dx,WORD PTR [rbx+rdi*2]
   14004ad4c:	lea    rbx,[rbx+rdi*2]
   14004ad50:	test   dx,dx
   14004ad53:	jne    0x14004acf0
   14004ad55:	mov    rbx,QWORD PTR [rip+0x418bc]        # 0x14008c618
   14004ad5c:	mov    rcx,rbx
   14004ad5f:	call   0x1400485c0
   14004ad64:	mov    QWORD PTR [rip+0x418ad],r12        # 0x14008c618
   14004ad6b:	mov    QWORD PTR [rsi],r12
   14004ad6e:	mov    DWORD PTR [rip+0x43b88],0x1        # 0x14008e900
   14004ad78:	xor    eax,eax
   14004ad7a:	mov    rbp,QWORD PTR [rsp+0x48]
   14004ad7f:	mov    rbx,QWORD PTR [rsp+0x40]
   14004ad84:	mov    rsi,QWORD PTR [rsp+0x50]
   14004ad89:	mov    rdi,QWORD PTR [rsp+0x58]
   14004ad8e:	add    rsp,0x30
   14004ad92:	pop    r12
   14004ad94:	ret    
   14004ad95:	mov    rcx,QWORD PTR [rip+0x418cc]        # 0x14008c668
   14004ad9c:	call   0x1400485c0
   14004ada1:	mov    QWORD PTR [rip+0x418c0],r12        # 0x14008c668
   14004ada8:	or     eax,0xffffffff
   14004adab:	jmp    0x14004ad7a
   14004adad:	int3   
   14004adae:	int3   
   14004adaf:	int3   
   14004adb0:	mov    QWORD PTR [rsp+0x8],rbx
   14004adb5:	mov    QWORD PTR [rsp+0x10],rdi
   14004adba:	test   rdx,rdx
   14004adbd:	mov    r11,QWORD PTR [rsp+0x28]
   14004adc2:	mov    rdi,r9
   14004adc5:	mov    DWORD PTR [r11],0x0
   14004adcc:	mov    rbx,rdx
   14004adcf:	mov    r10,rcx
   14004add2:	mov    DWORD PTR [r9],0x1
   14004add9:	je     0x14004ade2
   14004addb:	mov    QWORD PTR [rdx],r8
   14004adde:	add    rbx,0x8
   14004ade2:	xor    ecx,ecx
   14004ade4:	cmp    WORD PTR [r10],0x22
   14004ade9:	jne    0x14004adfe
   14004adeb:	xor    eax,eax
   14004aded:	test   ecx,ecx
   14004adef:	sete   al
   14004adf2:	add    r10,0x2
   14004adf6:	mov    ecx,eax
   14004adf8:	mov    ax,0x22
   14004adfc:	jmp    0x14004ae21
   14004adfe:	add    DWORD PTR [r11],0x1
   14004ae02:	test   r8,r8
   14004ae05:	je     0x14004ae14
   14004ae07:	movzx  eax,WORD PTR [r10]
   14004ae0b:	add    r8,0x2
   14004ae0f:	mov    WORD PTR [r8-0x2],ax
   14004ae14:	movzx  eax,WORD PTR [r10]
   14004ae18:	add    r10,0x2
   14004ae1c:	test   ax,ax
   14004ae1f:	je     0x14004ae3f
   14004ae21:	test   ecx,ecx
   14004ae23:	jne    0x14004ade4
   14004ae25:	cmp    ax,0x20
   14004ae29:	je     0x14004ae31
   14004ae2b:	cmp    ax,0x9
   14004ae2f:	jne    0x14004ade4
   14004ae31:	test   r8,r8
   14004ae34:	je     0x14004ae43
   14004ae36:	mov    WORD PTR [r8-0x2],0x0
   14004ae3d:	jmp    0x14004ae43
   14004ae3f:	sub    r10,0x2
   14004ae43:	xor    r9d,r9d
   14004ae46:	data16 data16 xchg ax,ax
   14004ae4a:	data16 xchg ax,ax
   14004ae4d:	data16 xchg ax,ax
   14004ae50:	cmp    WORD PTR [r10],0x0
   14004ae55:	je     0x14004af4b
   14004ae5b:	xchg   ax,ax
   14004ae5d:	data16 xchg ax,ax
   14004ae60:	movzx  eax,WORD PTR [r10]
   14004ae64:	cmp    ax,0x20
   14004ae68:	je     0x14004ae70
   14004ae6a:	cmp    ax,0x9
   14004ae6e:	jne    0x14004ae76
   14004ae70:	add    r10,0x2
   14004ae74:	jmp    0x14004ae60
   14004ae76:	cmp    WORD PTR [r10],0x0
   14004ae7b:	je     0x14004af4b
   14004ae81:	test   rbx,rbx
   14004ae84:	je     0x14004ae8d
   14004ae86:	mov    QWORD PTR [rbx],r8
   14004ae89:	add    rbx,0x8
   14004ae8d:	add    DWORD PTR [rdi],0x1
   14004ae90:	xor    ecx,ecx
   14004ae92:	cmp    WORD PTR [r10],0x5c
   14004ae97:	mov    edx,0x1
   14004ae9c:	jne    0x14004aead
   14004ae9e:	xchg   ax,ax
   14004aea0:	add    r10,0x2
   14004aea4:	add    ecx,edx
   14004aea6:	cmp    WORD PTR [r10],0x5c
   14004aeab:	je     0x14004aea0
   14004aead:	cmp    WORD PTR [r10],0x22
   14004aeb2:	jne    0x14004aedd
   14004aeb4:	test   dl,cl
   14004aeb6:	jne    0x14004aedb
   14004aeb8:	test   r9d,r9d
   14004aebb:	je     0x14004aece
   14004aebd:	cmp    WORD PTR [r10+0x2],0x22
   14004aec3:	lea    rax,[r10+0x2]
   14004aec7:	jne    0x14004aece
   14004aec9:	mov    r10,rax
   14004aecc:	jmp    0x14004aedb
   14004aece:	xor    eax,eax
   14004aed0:	xor    edx,edx
   14004aed2:	test   r9d,r9d
   14004aed5:	sete   al
   14004aed8:	mov    r9d,eax
   14004aedb:	shr    ecx,1
   14004aedd:	test   ecx,ecx
   14004aedf:	je     0x14004aefb
   14004aee1:	add    ecx,0xffffffff
   14004aee4:	test   r8,r8
   14004aee7:	je     0x14004aef3
   14004aee9:	mov    WORD PTR [r8],0x5c
   14004aeef:	add    r8,0x2
   14004aef3:	add    DWORD PTR [r11],0x1
   14004aef7:	test   ecx,ecx
   14004aef9:	jne    0x14004aee1
   14004aefb:	movzx  eax,WORD PTR [r10]
   14004aeff:	test   ax,ax
   14004af02:	je     0x14004af33
   14004af04:	test   r9d,r9d
   14004af07:	jne    0x14004af15
   14004af09:	cmp    ax,0x20
   14004af0d:	je     0x14004af33
   14004af0f:	cmp    ax,0x9
   14004af13:	je     0x14004af33
   14004af15:	test   edx,edx
   14004af17:	je     0x14004af2a
   14004af19:	test   r8,r8
   14004af1c:	je     0x14004af26
   14004af1e:	mov    WORD PTR [r8],ax
   14004af22:	add    r8,0x2
   14004af26:	add    DWORD PTR [r11],0x1
   14004af2a:	add    r10,0x2
   14004af2e:	jmp    0x14004ae90
   14004af33:	test   r8,r8
   14004af36:	je     0x14004af42
   14004af38:	mov    WORD PTR [r8],0x0
   14004af3e:	add    r8,0x2
   14004af42:	add    DWORD PTR [r11],0x1
   14004af46:	jmp    0x14004ae50
   14004af4b:	test   rbx,rbx
   14004af4e:	je     0x14004af57
   14004af50:	mov    QWORD PTR [rbx],0x0
   14004af57:	add    DWORD PTR [rdi],0x1
   14004af5a:	mov    rbx,QWORD PTR [rsp+0x8]
   14004af5f:	mov    rdi,QWORD PTR [rsp+0x10]
   14004af64:	ret    
   14004af65:	int3   
   14004af66:	int3   
   14004af67:	int3   
   14004af68:	int3   
   14004af69:	int3   
   14004af6a:	int3   
   14004af6b:	int3   
   14004af6c:	int3   
   14004af6d:	int3   
   14004af6e:	int3   
   14004af6f:	int3   
   14004af70:	mov    QWORD PTR [rsp+0x18],rbx
   14004af75:	mov    QWORD PTR [rsp+0x20],rsi
   14004af7a:	push   rdi
   14004af7b:	sub    rsp,0x30
   14004af7f:	lea    rbx,[rip+0x41a3a]        # 0x14008c9c0
   14004af86:	mov    r8d,0x104
   14004af8c:	xor    ecx,ecx
   14004af8e:	mov    rdx,rbx
   14004af91:	mov    WORD PTR [rip+0x41c2e],0x0        # 0x14008cbc8
   14004af9a:	call   QWORD PTR [rip+0x195b0]        # 0x140064550
   14004afa0:	mov    rsi,QWORD PTR [rip+0x43981]        # 0x14008e928
   14004afa7:	mov    QWORD PTR [rip+0x416d2],rbx        # 0x14008c680
   14004afae:	test   rsi,rsi
   14004afb1:	je     0x14004afb9
   14004afb3:	cmp    WORD PTR [rsi],0x0
   14004afb7:	jne    0x14004afbc
   14004afb9:	mov    rsi,rbx
   14004afbc:	xor    ebx,ebx
   14004afbe:	xor    r9d,r9d
   14004afc1:	xor    r8d,r8d
   14004afc4:	mov    rdx,rsi
   14004afc7:	xor    ecx,ecx
   14004afc9:	lea    edi,[rbx+0x1]
   14004afcc:	mov    DWORD PTR [rsp+0x40],r9d
   14004afd1:	movzx  eax,WORD PTR [rdx]
   14004afd4:	cmp    ax,0x22
   14004afd8:	jne    0x14004afed
   14004afda:	xor    eax,eax
   14004afdc:	test   ecx,ecx
   14004afde:	sete   al
   14004afe1:	add    rdx,0x2
   14004afe5:	mov    ecx,eax
   14004afe7:	mov    ax,0x22
   14004afeb:	jmp    0x14004b00e
   14004afed:	add    r9d,edi
   14004aff0:	test   r8,r8
   14004aff3:	mov    DWORD PTR [rsp+0x40],r9d
   14004aff8:	je     0x14004b002
   14004affa:	mov    WORD PTR [r8],ax
   14004affe:	add    r8,0x2
   14004b002:	movzx  eax,WORD PTR [rdx]
   14004b005:	add    rdx,0x2
   14004b009:	test   ax,ax
   14004b00c:	je     0x14004b02a
   14004b00e:	test   ecx,ecx
   14004b010:	jne    0x14004afd1
   14004b012:	cmp    ax,0x20
   14004b016:	je     0x14004b01e
   14004b018:	cmp    ax,0x9
   14004b01c:	jne    0x14004afd1
   14004b01e:	test   r8,r8
   14004b021:	je     0x14004b02e
   14004b023:	mov    WORD PTR [r8-0x2],bx
   14004b028:	jmp    0x14004b02e
   14004b02a:	sub    rdx,0x2
   14004b02e:	xor    r11d,r11d
   14004b031:	cmp    WORD PTR [rdx],0x0
   14004b035:	je     0x14004b12f
   14004b03b:	xchg   ax,ax
   14004b03d:	data16 xchg ax,ax
   14004b040:	movzx  eax,WORD PTR [rdx]
   14004b043:	cmp    ax,0x20
   14004b047:	je     0x14004b04f
   14004b049:	cmp    ax,0x9
   14004b04d:	jne    0x14004b055
   14004b04f:	add    rdx,0x2
   14004b053:	jmp    0x14004b040
   14004b055:	cmp    WORD PTR [rdx],0x0
   14004b059:	je     0x14004b12f
   14004b05f:	test   rbx,rbx
   14004b062:	je     0x14004b06b
   14004b064:	mov    QWORD PTR [rbx],r8
   14004b067:	add    rbx,0x8
   14004b06b:	add    edi,0x1
   14004b06e:	xchg   ax,ax
   14004b070:	xor    ecx,ecx
   14004b072:	cmp    WORD PTR [rdx],0x5c
   14004b076:	lea    r10d,[rcx+0x1]
   14004b07a:	jne    0x14004b08d
   14004b07c:	data16 data16 xchg ax,ax
   14004b080:	add    rdx,0x2
   14004b084:	add    ecx,r10d
   14004b087:	cmp    WORD PTR [rdx],0x5c
   14004b08b:	je     0x14004b080
   14004b08d:	cmp    WORD PTR [rdx],0x22
   14004b091:	jne    0x14004b0bd
   14004b093:	test   r10b,cl
   14004b096:	jne    0x14004b0bb
   14004b098:	test   r11d,r11d
   14004b09b:	je     0x14004b0ad
   14004b09d:	cmp    WORD PTR [rdx+0x2],0x22
   14004b0a2:	lea    rax,[rdx+0x2]
   14004b0a6:	jne    0x14004b0ad
   14004b0a8:	mov    rdx,rax
   14004b0ab:	jmp    0x14004b0bb
   14004b0ad:	xor    eax,eax
   14004b0af:	xor    r10d,r10d
   14004b0b2:	test   r11d,r11d
   14004b0b5:	sete   al
   14004b0b8:	mov    r11d,eax
   14004b0bb:	shr    ecx,1
   14004b0bd:	test   ecx,ecx
   14004b0bf:	je     0x14004b0da
   14004b0c1:	add    r9d,ecx
   14004b0c4:	add    ecx,0xffffffff
   14004b0c7:	test   r8,r8
   14004b0ca:	je     0x14004b0d6
   14004b0cc:	mov    WORD PTR [r8],0x5c
   14004b0d2:	add    r8,0x2
   14004b0d6:	test   ecx,ecx
   14004b0d8:	jne    0x14004b0c4
   14004b0da:	movzx  eax,WORD PTR [rdx]
   14004b0dd:	test   ax,ax
   14004b0e0:	je     0x14004b112
   14004b0e2:	test   r11d,r11d
   14004b0e5:	jne    0x14004b0f3
   14004b0e7:	cmp    ax,0x20
   14004b0eb:	je     0x14004b112
   14004b0ed:	cmp    ax,0x9
   14004b0f1:	je     0x14004b112
   14004b0f3:	test   r10d,r10d
   14004b0f6:	je     0x14004b109
   14004b0f8:	test   r8,r8
   14004b0fb:	je     0x14004b105
   14004b0fd:	mov    WORD PTR [r8],ax
   14004b101:	add    r8,0x2
   14004b105:	add    r9d,0x1
   14004b109:	add    rdx,0x2
   14004b10d:	jmp    0x14004b070
   14004b112:	test   r8,r8
   14004b115:	je     0x14004b121
   14004b117:	mov    WORD PTR [r8],0x0
   14004b11d:	add    r8,0x2
   14004b121:	add    r9d,0x1
   14004b125:	mov    DWORD PTR [rsp+0x40],r9d
   14004b12a:	jmp    0x14004b031
   14004b12f:	test   rbx,rbx
   14004b132:	je     0x14004b13b
   14004b134:	mov    QWORD PTR [rbx],0x0
   14004b13b:	add    edi,0x1
   14004b13e:	movabs rax,0x1fffffffffffffff
   14004b148:	mov    DWORD PTR [rsp+0x48],edi
   14004b14c:	movsxd rdi,edi
   14004b14f:	cmp    rdi,rax
   14004b152:	jae    0x14004b1c9
   14004b154:	movsxd rax,r9d
   14004b157:	movabs rcx,0x7fffffffffffffff
   14004b161:	cmp    rax,rcx
   14004b164:	jae    0x14004b1c9
   14004b166:	lea    rcx,[rax+rdi*4]
   14004b16a:	add    rax,rax
   14004b16d:	add    rcx,rcx
   14004b170:	cmp    rcx,rax
   14004b173:	jb     0x14004b1c9
   14004b175:	call   0x14004de20
   14004b17a:	test   rax,rax
   14004b17d:	mov    rbx,rax
   14004b180:	je     0x14004b1c9
   14004b182:	lea    r8,[rax+rdi*8]
   14004b186:	lea    rax,[rsp+0x40]
   14004b18b:	lea    r9,[rsp+0x48]
   14004b190:	mov    rdx,rbx
   14004b193:	mov    rcx,rsi
   14004b196:	mov    QWORD PTR [rsp+0x20],rax
   14004b19b:	call   0x14004adb0
   14004b1a0:	mov    r11d,DWORD PTR [rsp+0x48]
   14004b1a5:	mov    QWORD PTR [rip+0x414a4],rbx        # 0x14008c650
   14004b1ac:	add    r11d,0xffffffff
   14004b1b0:	xor    eax,eax
   14004b1b2:	mov    DWORD PTR [rip+0x41487],r11d        # 0x14008c640
   14004b1b9:	mov    rbx,QWORD PTR [rsp+0x50]
   14004b1be:	mov    rsi,QWORD PTR [rsp+0x58]
   14004b1c3:	add    rsp,0x30
   14004b1c7:	pop    rdi
   14004b1c8:	ret    
   14004b1c9:	mov    rbx,QWORD PTR [rsp+0x50]
   14004b1ce:	mov    rsi,QWORD PTR [rsp+0x58]
   14004b1d3:	or     eax,0xffffffff
   14004b1d6:	add    rsp,0x30
   14004b1da:	pop    rdi
   14004b1db:	ret    
   14004b1dc:	int3   
   14004b1dd:	int3   
   14004b1de:	int3   
   14004b1df:	int3   
   14004b1e0:	mov    QWORD PTR [rsp+0x10],rbx
   14004b1e5:	mov    QWORD PTR [rsp+0x18],rbp
   14004b1ea:	push   rsi
   14004b1eb:	push   rdi
   14004b1ec:	push   r12
   14004b1ee:	sub    rsp,0x30
   14004b1f2:	mov    eax,DWORD PTR [rip+0x419d4]        # 0x14008cbcc
   14004b1f8:	xor    r12d,r12d
   14004b1fb:	test   eax,eax
   14004b1fd:	mov    ebp,r12d
   14004b200:	jne    0x14004b23c
   14004b202:	call   QWORD PTR [rip+0x190b8]        # 0x1400642c0
   14004b208:	test   rax,rax
   14004b20b:	mov    rdi,rax
   14004b20e:	je     0x14004b21c
   14004b210:	mov    DWORD PTR [rip+0x419b2],0x1        # 0x14008cbcc
   14004b21a:	jmp    0x14004b24f
   14004b21c:	call   QWORD PTR [rip+0x193de]        # 0x140064600
   14004b222:	cmp    eax,0x78
   14004b225:	jne    0x14004b236
   14004b227:	mov    DWORD PTR [rip+0x4199b],0x2        # 0x14008cbcc
   14004b231:	jmp    0x14004b2b9
   14004b236:	mov    eax,DWORD PTR [rip+0x41990]        # 0x14008cbcc
   14004b23c:	cmp    eax,0x1
   14004b23f:	jne    0x14004b2b0
   14004b241:	call   QWORD PTR [rip+0x19079]        # 0x1400642c0
   14004b247:	test   rax,rax
   14004b24a:	mov    rdi,rax
   14004b24d:	je     0x14004b28a
   14004b24f:	cmp    WORD PTR [rdi],bp
   14004b252:	mov    rax,rdi
   14004b255:	je     0x14004b269
   14004b257:	add    rax,0x2
   14004b25b:	cmp    WORD PTR [rax],bp
   14004b25e:	jne    0x14004b257
   14004b260:	add    rax,0x2
   14004b264:	cmp    WORD PTR [rax],bp
   14004b267:	jne    0x14004b257
   14004b269:	sub    eax,edi
   14004b26b:	add    eax,0x2
   14004b26e:	movsxd rsi,eax
   14004b271:	mov    rcx,rsi
   14004b274:	call   0x14004de20
   14004b279:	test   rax,rax
   14004b27c:	mov    rbx,rax
   14004b27f:	jne    0x14004b291
   14004b281:	mov    rcx,rdi
   14004b284:	call   QWORD PTR [rip+0x1902e]        # 0x1400642b8
   14004b28a:	xor    eax,eax
   14004b28c:	jmp    0x14004b3ab
   14004b291:	mov    r8,rsi
   14004b294:	mov    rdx,rdi
   14004b297:	mov    rcx,rax
   14004b29a:	call   0x1400478c0
   14004b29f:	mov    rcx,rdi
   14004b2a2:	call   QWORD PTR [rip+0x19010]        # 0x1400642b8
   14004b2a8:	mov    rax,rbx
   14004b2ab:	jmp    0x14004b3ab
   14004b2b0:	cmp    eax,0x2
   14004b2b3:	je     0x14004b2b9
   14004b2b5:	test   eax,eax
   14004b2b7:	jne    0x14004b28a
   14004b2b9:	call   QWORD PTR [rip+0x18ff1]        # 0x1400642b0
   14004b2bf:	test   rax,rax
   14004b2c2:	mov    rsi,rax
   14004b2c5:	je     0x14004b28a
   14004b2c7:	cmp    BYTE PTR [rax],bpl
   14004b2ca:	mov    rbx,rax
   14004b2cd:	je     0x14004b308
   14004b2cf:	nop
   14004b2d0:	or     r9d,0xffffffff
   14004b2d4:	mov    r8,rbx
   14004b2d7:	xor    ecx,ecx
   14004b2d9:	lea    edx,[r9+0x2]
   14004b2dd:	mov    DWORD PTR [rsp+0x28],r12d
   14004b2e2:	mov    QWORD PTR [rsp+0x20],r12
   14004b2e7:	call   QWORD PTR [rip+0x1932b]        # 0x140064618
   14004b2ed:	test   eax,eax
   14004b2ef:	je     0x14004b28a
   14004b2f1:	or     rcx,0xffffffffffffffff
   14004b2f5:	add    ebp,eax
   14004b2f7:	mov    rdi,rbx
   14004b2fa:	xor    eax,eax
   14004b2fc:	repnz scas al,BYTE PTR es:[rdi]
   14004b2fe:	not    rcx
   14004b301:	add    rbx,rcx
   14004b304:	cmp    BYTE PTR [rbx],al
   14004b306:	jne    0x14004b2d0
   14004b308:	add    ebp,0x1
   14004b30b:	mov    edx,0x2
   14004b310:	movsxd rcx,ebp
   14004b313:	call   0x14004de90
   14004b318:	test   rax,rax
   14004b31b:	mov    r12,rax
   14004b31e:	jne    0x14004b32d
   14004b320:	mov    rcx,rsi
   14004b323:	call   QWORD PTR [rip+0x18f7f]        # 0x1400642a8
   14004b329:	xor    eax,eax
   14004b32b:	jmp    0x14004b3ab
   14004b32d:	cmp    BYTE PTR [rsi],0x0
   14004b330:	mov    QWORD PTR [rsp+0x50],r13
   14004b335:	mov    rbx,rax
   14004b338:	mov    r13,rsi
   14004b33b:	je     0x14004b395
   14004b33d:	data16 xchg ax,ax
   14004b340:	or     r9d,0xffffffff
   14004b344:	mov    eax,ebp
   14004b346:	mov    rcx,rbx
   14004b349:	sub    rcx,r12
   14004b34c:	lea    edx,[r9+0x2]
   14004b350:	mov    r8,r13
   14004b353:	sar    rcx,1
   14004b356:	sub    eax,ecx
   14004b358:	xor    ecx,ecx
   14004b35a:	mov    DWORD PTR [rsp+0x28],eax
   14004b35e:	mov    QWORD PTR [rsp+0x20],rbx
   14004b363:	call   QWORD PTR [rip+0x192af]        # 0x140064618
   14004b369:	test   eax,eax
   14004b36b:	je     0x14004b3be
   14004b36d:	or     rcx,0xffffffffffffffff
   14004b371:	xor    eax,eax
   14004b373:	mov    rdi,r13
   14004b376:	repnz scas al,BYTE PTR es:[rdi]
   14004b378:	mov    rdi,rbx
   14004b37b:	not    rcx
   14004b37e:	add    r13,rcx
   14004b381:	or     rcx,0xffffffffffffffff
   14004b385:	repnz scas ax,WORD PTR es:[rdi]
   14004b388:	cmp    BYTE PTR [r13+0x0],al
   14004b38c:	not    rcx
   14004b38f:	lea    rbx,[rbx+rcx*2]
   14004b393:	jne    0x14004b340
   14004b395:	mov    rcx,rsi
   14004b398:	mov    WORD PTR [rbx],0x0
   14004b39d:	call   QWORD PTR [rip+0x18f05]        # 0x1400642a8
   14004b3a3:	mov    rax,r12
   14004b3a6:	mov    r13,QWORD PTR [rsp+0x50]
   14004b3ab:	mov    rbx,QWORD PTR [rsp+0x58]
   14004b3b0:	mov    rbp,QWORD PTR [rsp+0x60]
   14004b3b5:	add    rsp,0x30
   14004b3b9:	pop    r12
   14004b3bb:	pop    rdi
   14004b3bc:	pop    rsi
   14004b3bd:	ret    
   14004b3be:	mov    rcx,r12
   14004b3c1:	call   0x1400485c0
   14004b3c6:	mov    rcx,rsi
   14004b3c9:	call   QWORD PTR [rip+0x18ed9]        # 0x1400642a8
   14004b3cf:	xor    eax,eax
   14004b3d1:	jmp    0x14004b3a6
   14004b3d3:	int3   
   14004b3d4:	int3   
   14004b3d5:	int3   
   14004b3d6:	int3   
   14004b3d7:	int3   
   14004b3d8:	int3   
   14004b3d9:	int3   
   14004b3da:	int3   
   14004b3db:	int3   
   14004b3dc:	int3   
   14004b3dd:	int3   
   14004b3de:	int3   
   14004b3df:	int3   
   14004b3e0:	sub    rsp,0x38
   14004b3e4:	mov    eax,DWORD PTR [rip+0x417e6]        # 0x14008cbd0
   14004b3ea:	test   eax,eax
   14004b3ec:	jne    0x14004b42c
   14004b3ee:	call   QWORD PTR [rip+0x19164]        # 0x140064558
   14004b3f4:	test   rax,rax
   14004b3f7:	je     0x14004b40e
   14004b3f9:	mov    DWORD PTR [rip+0x417cd],0x1        # 0x14008cbd0
   14004b403:	add    rsp,0x38
   14004b407:	rex.W jmp QWORD PTR [rip+0x1914a]        # 0x140064558
   14004b40e:	call   QWORD PTR [rip+0x191ec]        # 0x140064600
   14004b414:	cmp    eax,0x78
   14004b417:	jne    0x14004b425
   14004b419:	mov    DWORD PTR [rip+0x417ad],0x2        # 0x14008cbd0
   14004b423:	jmp    0x14004b441
   14004b425:	xor    eax,eax
   14004b427:	add    rsp,0x38
   14004b42b:	ret    
   14004b42c:	cmp    eax,0x1
   14004b42f:	jne    0x14004b43c
   14004b431:	add    rsp,0x38
   14004b435:	rex.W jmp QWORD PTR [rip+0x1911c]        # 0x140064558
   14004b43c:	cmp    eax,0x2
   14004b43f:	jne    0x14004b425
   14004b441:	mov    QWORD PTR [rsp+0x48],rsi
   14004b446:	mov    QWORD PTR [rsp+0x30],rdi
   14004b44b:	call   QWORD PTR [rip+0x18e77]        # 0x1400642c8
   14004b451:	mov    rsi,rax
   14004b454:	xor    eax,eax
   14004b456:	or     r9d,0xffffffff
   14004b45a:	mov    DWORD PTR [rsp+0x28],eax
   14004b45e:	lea    edx,[rax+0x1]
   14004b461:	mov    r8,rsi
   14004b464:	xor    ecx,ecx
   14004b466:	mov    QWORD PTR [rsp+0x20],rax
   14004b46b:	call   QWORD PTR [rip+0x191a7]        # 0x140064618
   14004b471:	test   eax,eax
   14004b473:	movsxd rdi,eax
   14004b476:	jne    0x14004b489
   14004b478:	mov    rsi,QWORD PTR [rsp+0x48]
   14004b47d:	mov    rdi,QWORD PTR [rsp+0x30]
   14004b482:	xor    eax,eax
   14004b484:	add    rsp,0x38
   14004b488:	ret    
   14004b489:	mov    rcx,rdi
   14004b48c:	mov    edx,0x2
   14004b491:	mov    QWORD PTR [rsp+0x40],rbx
   14004b496:	call   0x14004de90
   14004b49b:	test   rax,rax
   14004b49e:	mov    rbx,rax
   14004b4a1:	je     0x14004b4e2
   14004b4a3:	or     r9d,0xffffffff
   14004b4a7:	mov    r8,rsi
   14004b4aa:	xor    ecx,ecx
   14004b4ac:	lea    edx,[r9+0x2]
   14004b4b0:	mov    DWORD PTR [rsp+0x28],edi
   14004b4b4:	mov    QWORD PTR [rsp+0x20],rax
   14004b4b9:	call   QWORD PTR [rip+0x19159]        # 0x140064618
   14004b4bf:	test   eax,eax
   14004b4c1:	je     0x14004b4da
   14004b4c3:	mov    rsi,QWORD PTR [rsp+0x48]
   14004b4c8:	mov    rdi,QWORD PTR [rsp+0x30]
   14004b4cd:	mov    rax,rbx
   14004b4d0:	mov    rbx,QWORD PTR [rsp+0x40]
   14004b4d5:	add    rsp,0x38
   14004b4d9:	ret    
   14004b4da:	mov    rcx,rbx
   14004b4dd:	call   0x1400485c0
   14004b4e2:	mov    rbx,QWORD PTR [rsp+0x40]
   14004b4e7:	mov    rsi,QWORD PTR [rsp+0x48]
   14004b4ec:	mov    rdi,QWORD PTR [rsp+0x30]
   14004b4f1:	xor    eax,eax
   14004b4f3:	add    rsp,0x38
   14004b4f7:	ret    
   14004b4f8:	int3   
   14004b4f9:	int3   
   14004b4fa:	int3   
   14004b4fb:	int3   
   14004b4fc:	int3   
   14004b4fd:	int3   
   14004b4fe:	int3   
   14004b4ff:	int3   
   14004b500:	mov    QWORD PTR [rsp+0x8],rbx
   14004b505:	mov    QWORD PTR [rsp+0x10],rsi
   14004b50a:	mov    QWORD PTR [rsp+0x18],rdi
   14004b50f:	mov    QWORD PTR [rsp+0x20],r12
   14004b514:	push   r13
   14004b516:	push   r14
   14004b518:	push   r15
   14004b51a:	sub    rsp,0x90
   14004b521:	lea    rcx,[rsp+0x20]
   14004b526:	call   QWORD PTR [rip+0x18db4]        # 0x1400642e0
   14004b52c:	nop
   14004b52d:	mov    edx,0x50
   14004b532:	lea    ecx,[rdx-0x30]
   14004b535:	call   0x14004de90
   14004b53a:	mov    r11,rax
   14004b53d:	test   rax,rax
   14004b540:	jne    0x14004b54a
   14004b542:	or     eax,0xffffffff
   14004b545:	jmp    0x14004b7ec
   14004b54a:	mov    QWORD PTR [rip+0x431af],rax        # 0x14008e700
   14004b551:	mov    ecx,0x20
   14004b556:	mov    DWORD PTR [rip+0x43188],ecx        # 0x14008e6e4
   14004b55c:	add    rax,0xa00
   14004b562:	cmp    r11,rax
   14004b565:	jae    0x14004b5b0
   14004b567:	xor    r12d,r12d
   14004b56a:	data16 xchg ax,ax
   14004b56d:	data16 xchg ax,ax
   14004b570:	mov    BYTE PTR [r11+0x8],r12b
   14004b574:	mov    QWORD PTR [r11],0xffffffffffffffff
   14004b57b:	mov    BYTE PTR [r11+0x9],0xa
   14004b580:	mov    DWORD PTR [r11+0xc],r12d
   14004b584:	mov    BYTE PTR [r11+0x38],r12b
   14004b588:	mov    BYTE PTR [r11+0x39],0xa
   14004b58d:	mov    BYTE PTR [r11+0x3a],0xa
   14004b592:	add    r11,0x50
   14004b596:	mov    rax,QWORD PTR [rip+0x43163]        # 0x14008e700
   14004b59d:	add    rax,0xa00
   14004b5a3:	cmp    r11,rax
   14004b5a6:	jb     0x14004b570
   14004b5a8:	mov    ecx,DWORD PTR [rip+0x43136]        # 0x14008e6e4
   14004b5ae:	jmp    0x14004b5b3
   14004b5b0:	xor    r12d,r12d
   14004b5b3:	cmp    WORD PTR [rsp+0x62],0x0
   14004b5b9:	je     0x14004b711
   14004b5bf:	mov    r14,QWORD PTR [rsp+0x68]
   14004b5c4:	test   r14,r14
   14004b5c7:	je     0x14004b711
   14004b5cd:	movsxd rax,DWORD PTR [r14]
   14004b5d0:	add    r14,0x4
   14004b5d4:	lea    r13,[r14+rax*1]
   14004b5d8:	mov    r15d,0x800
   14004b5de:	cmp    eax,r15d
   14004b5e1:	cmovl  r15d,eax
   14004b5e5:	mov    ebx,0x1
   14004b5ea:	cmp    ecx,r15d
   14004b5ed:	jge    0x14004b685
   14004b5f3:	lea    rdi,[rip+0x43106]        # 0x14008e700
   14004b5fa:	data16 xchg ax,ax
   14004b5fd:	data16 xchg ax,ax
   14004b600:	mov    edx,0x50
   14004b605:	lea    ecx,[rdx-0x30]
   14004b608:	call   0x14004de90
   14004b60d:	mov    r11,rax
   14004b610:	test   rax,rax
   14004b613:	je     0x14004b67c
   14004b615:	mov    QWORD PTR [rdi+rbx*8],rax
   14004b619:	mov    eax,DWORD PTR [rip+0x430c5]        # 0x14008e6e4
   14004b61f:	add    eax,0x20
   14004b622:	mov    DWORD PTR [rip+0x430bc],eax        # 0x14008e6e4
   14004b628:	lea    rcx,[r11+0xa00]
   14004b62f:	cmp    r11,rcx
   14004b632:	jae    0x14004b671
   14004b634:	mov    BYTE PTR [r11+0x8],0x0
   14004b639:	mov    QWORD PTR [r11],0xffffffffffffffff
   14004b640:	mov    BYTE PTR [r11+0x9],0xa
   14004b645:	mov    DWORD PTR [r11+0xc],r12d
   14004b649:	and    BYTE PTR [r11+0x38],0x80
   14004b64e:	mov    BYTE PTR [r11+0x39],0xa
   14004b653:	mov    BYTE PTR [r11+0x3a],0xa
   14004b658:	add    r11,0x50
   14004b65c:	mov    rax,QWORD PTR [rdi+rbx*8]
   14004b660:	add    rax,0xa00
   14004b666:	cmp    r11,rax
   14004b669:	jb     0x14004b634
   14004b66b:	mov    eax,DWORD PTR [rip+0x43073]        # 0x14008e6e4
   14004b671:	add    rbx,0x1
   14004b675:	cmp    eax,r15d
   14004b678:	jl     0x14004b600
   14004b67a:	jmp    0x14004b68c
   14004b67c:	mov    r15d,DWORD PTR [rip+0x43061]        # 0x14008e6e4
   14004b683:	jmp    0x14004b68c
   14004b685:	lea    rdi,[rip+0x43074]        # 0x14008e700
   14004b68c:	mov    ebx,r12d
   14004b68f:	test   r15d,r15d
   14004b692:	jle    0x14004b711
   14004b694:	mov    rcx,QWORD PTR [r13+0x0]
   14004b698:	cmp    rcx,0xffffffffffffffff
   14004b69c:	je     0x14004b701
   14004b69e:	cmp    rcx,0xfffffffffffffffe
   14004b6a2:	je     0x14004b701
   14004b6a4:	movzx  eax,BYTE PTR [r14]
   14004b6a8:	test   al,0x1
   14004b6aa:	je     0x14004b701
   14004b6ac:	test   al,0x8
   14004b6ae:	jne    0x14004b6ba
   14004b6b0:	call   QWORD PTR [rip+0x18c22]        # 0x1400642d8
   14004b6b6:	test   eax,eax
   14004b6b8:	je     0x14004b701
   14004b6ba:	movsxd rax,ebx
   14004b6bd:	mov    rcx,rax
   14004b6c0:	sar    rcx,0x5
   14004b6c4:	and    eax,0x1f
   14004b6c7:	lea    rsi,[rax+rax*4]
   14004b6cb:	shl    rsi,0x4
   14004b6cf:	add    rsi,QWORD PTR [rdi+rcx*8]
   14004b6d3:	mov    rax,QWORD PTR [r13+0x0]
   14004b6d7:	mov    QWORD PTR [rsi],rax
   14004b6da:	movzx  eax,BYTE PTR [r14]
   14004b6de:	mov    BYTE PTR [rsi+0x8],al
   14004b6e1:	lea    rcx,[rsi+0x10]
   14004b6e5:	mov    edx,0xfa0
   14004b6ea:	call   0x1400532f0
   14004b6ef:	test   eax,eax
   14004b6f1:	je     0x14004b6f9
   14004b6f3:	add    DWORD PTR [rsi+0xc],0x1
   14004b6f7:	jmp    0x14004b701
   14004b6f9:	or     eax,0xffffffff
   14004b6fc:	jmp    0x14004b7ec
   14004b701:	add    ebx,0x1
   14004b704:	add    r14,0x1
   14004b708:	add    r13,0x8
   14004b70c:	cmp    ebx,r15d
   14004b70f:	jl     0x14004b694
   14004b711:	mov    r13d,r12d
   14004b714:	mov    rdi,r12
   14004b717:	data16 xchg ax,ax
   14004b71a:	data16 xchg ax,ax
   14004b71d:	data16 xchg ax,ax
   14004b720:	lea    rbx,[rdi+rdi*4]
   14004b724:	shl    rbx,0x4
   14004b728:	add    rbx,QWORD PTR [rip+0x42fd1]        # 0x14008e700
   14004b72f:	mov    rax,QWORD PTR [rbx]
   14004b732:	cmp    rax,0xffffffffffffffff
   14004b736:	je     0x14004b747
   14004b738:	cmp    rax,0xfffffffffffffffe
   14004b73c:	je     0x14004b747
   14004b73e:	or     BYTE PTR [rbx+0x8],0x80
   14004b742:	jmp    0x14004b7c7
   14004b747:	mov    BYTE PTR [rbx+0x8],0x81
   14004b74b:	test   rdi,rdi
   14004b74e:	jne    0x14004b757
   14004b750:	mov    ecx,0xfffffff6
   14004b755:	jmp    0x14004b764
   14004b757:	mov    ecx,r12d
   14004b75a:	cmp    r13d,0x1
   14004b75e:	sete   cl
   14004b761:	add    ecx,0xfffffff4
   14004b764:	call   QWORD PTR [rip+0x18b2e]        # 0x140064298
   14004b76a:	mov    rsi,rax
   14004b76d:	cmp    rax,0xffffffffffffffff
   14004b771:	je     0x14004b7bc
   14004b773:	test   rax,rax
   14004b776:	je     0x14004b7bc
   14004b778:	mov    rcx,rax
   14004b77b:	call   QWORD PTR [rip+0x18b57]        # 0x1400642d8
   14004b781:	test   eax,eax
   14004b783:	je     0x14004b7bc
   14004b785:	mov    QWORD PTR [rbx],rsi
   14004b788:	movzx  eax,al
   14004b78b:	cmp    eax,0x2
   14004b78e:	jne    0x14004b796
   14004b790:	or     BYTE PTR [rbx+0x8],0x40
   14004b794:	jmp    0x14004b79f
   14004b796:	cmp    eax,0x3
   14004b799:	jne    0x14004b79f
   14004b79b:	or     BYTE PTR [rbx+0x8],0x8
   14004b79f:	lea    rcx,[rbx+0x10]
   14004b7a3:	mov    edx,0xfa0
   14004b7a8:	call   0x1400532f0
   14004b7ad:	test   eax,eax
   14004b7af:	je     0x14004b7b7
   14004b7b1:	add    DWORD PTR [rbx+0xc],0x1
   14004b7b5:	jmp    0x14004b7c7
   14004b7b7:	or     eax,0xffffffff
   14004b7ba:	jmp    0x14004b7ec
   14004b7bc:	or     BYTE PTR [rbx+0x8],0x40
   14004b7c0:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   14004b7c7:	add    r13d,0x1
   14004b7cb:	add    rdi,0x1
   14004b7cf:	cmp    rdi,0x3
   14004b7d3:	jl     0x14004b720
   14004b7d9:	mov    ecx,DWORD PTR [rip+0x42f05]        # 0x14008e6e4
   14004b7df:	call   QWORD PTR [rip+0x18aeb]        # 0x1400642d0
   14004b7e5:	xor    eax,eax
   14004b7e7:	jmp    0x14004b7ec
   14004b7e9:	or     eax,0xffffffff
   14004b7ec:	lea    r11,[rsp+0x90]
   14004b7f4:	mov    rbx,QWORD PTR [r11+0x20]
   14004b7f8:	mov    rsi,QWORD PTR [r11+0x28]
   14004b7fc:	mov    rdi,QWORD PTR [r11+0x30]
   14004b800:	mov    r12,QWORD PTR [r11+0x38]
   14004b804:	mov    rsp,r11
   14004b807:	pop    r15
   14004b809:	pop    r14
   14004b80b:	pop    r13
   14004b80d:	ret    
   14004b80e:	int3   
   14004b80f:	int3   
   14004b810:	rex push rbx
   14004b812:	push   rbp
   14004b813:	sub    rsp,0x28
   14004b817:	mov    rbp,rdx
   14004b81a:	mov    ebx,0x1
   14004b81f:	mov    eax,ebx
   14004b821:	mov    eax,ebx
   14004b823:	add    rsp,0x28
   14004b827:	pop    rbp
   14004b828:	pop    rbx
   14004b829:	ret    
   14004b82a:	int3   
   14004b82b:	int3   
   14004b82c:	int3   
   14004b82d:	int3   
   14004b82e:	int3   
   14004b82f:	int3   
   14004b830:	mov    QWORD PTR [rsp+0x8],rbx
   14004b835:	push   rdi
   14004b836:	sub    rsp,0x20
   14004b83a:	lea    rbx,[rip+0x28c6f]        # 0x1400744b0
   14004b841:	lea    rdi,[rip+0x28c68]        # 0x1400744b0
   14004b848:	cmp    rbx,rdi
   14004b84b:	jae    0x14004b863
   14004b84d:	data16 xchg ax,ax
   14004b850:	mov    rax,QWORD PTR [rbx]
   14004b853:	test   rax,rax
   14004b856:	je     0x14004b85a
   14004b858:	call   rax
   14004b85a:	add    rbx,0x8
   14004b85e:	cmp    rbx,rdi
   14004b861:	jb     0x14004b850
   14004b863:	mov    rbx,QWORD PTR [rsp+0x30]
   14004b868:	add    rsp,0x20
   14004b86c:	pop    rdi
   14004b86d:	ret    
   14004b86e:	int3   
   14004b86f:	int3   
   14004b870:	mov    QWORD PTR [rsp+0x8],rbx
   14004b875:	push   rdi
   14004b876:	sub    rsp,0x20
   14004b87a:	lea    rbx,[rip+0x28c3f]        # 0x1400744c0
   14004b881:	lea    rdi,[rip+0x28c38]        # 0x1400744c0
   14004b888:	cmp    rbx,rdi
   14004b88b:	jae    0x14004b8a3
   14004b88d:	data16 xchg ax,ax
   14004b890:	mov    rax,QWORD PTR [rbx]
   14004b893:	test   rax,rax
   14004b896:	je     0x14004b89a
   14004b898:	call   rax
   14004b89a:	add    rbx,0x8
   14004b89e:	cmp    rbx,rdi
   14004b8a1:	jb     0x14004b890
   14004b8a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14004b8a8:	add    rsp,0x20
   14004b8ac:	pop    rdi
   14004b8ad:	ret    
   14004b8ae:	int3   
   14004b8af:	int3   
   14004b8b0:	mov    QWORD PTR [rsp+0x10],rbx
   14004b8b5:	mov    QWORD PTR [rsp+0x18],rbp
   14004b8ba:	push   rsi
   14004b8bb:	push   rdi
   14004b8bc:	push   r12
   14004b8be:	sub    rsp,0x20
   14004b8c2:	mov    rbp,rcx
   14004b8c5:	mov    ecx,DWORD PTR [rip+0x3b8b5]        # 0x140087180
   14004b8cb:	cmp    ecx,0xffffffff
   14004b8ce:	je     0x14004b8e4
   14004b8d0:	call   QWORD PTR [rip+0x18a12]        # 0x1400642e8
   14004b8d6:	test   rax,rax
   14004b8d9:	je     0x14004b8e4
   14004b8db:	mov    rax,QWORD PTR [rax+0x2a8]
   14004b8e2:	jmp    0x14004b95e
   14004b8e4:	lea    rcx,[rip+0x2346d]        # 0x14006ed58
   14004b8eb:	call   QWORD PTR [rip+0x18b5f]        # 0x140064450
   14004b8f1:	test   rax,rax
   14004b8f4:	mov    r12,rax
   14004b8f7:	je     0x14004b96a
   14004b8f9:	lea    rcx,[rsp+0x40]
   14004b8fe:	xor    ebx,ebx
   14004b900:	mov    DWORD PTR [rsp+0x40],ebx
   14004b904:	call   0x1400482b0
   14004b909:	cmp    DWORD PTR [rsp+0x40],0x5
   14004b90e:	jg     0x14004b94e
   14004b910:	xor    ecx,ecx
   14004b912:	call   QWORD PTR [rip+0x18b38]        # 0x140064450
   14004b918:	movsxd rcx,DWORD PTR [rax+0x3c]
   14004b91c:	add    rcx,rax
   14004b91f:	movzx  eax,WORD PTR [rcx+0x14]
   14004b923:	lea    rdx,[rax+rcx*1+0x18]
   14004b928:	movzx  eax,WORD PTR [rcx+0x6]
   14004b92c:	test   eax,eax
   14004b92e:	je     0x14004b94e
   14004b930:	lea    rsi,[rip+0x23409]        # 0x14006ed40
   14004b937:	mov    rdi,rdx
   14004b93a:	mov    ecx,0x8
   14004b93f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b941:	je     0x14004b96a
   14004b943:	add    ebx,0x1
   14004b946:	add    rdx,0x28
   14004b94a:	cmp    ebx,eax
   14004b94c:	jb     0x14004b930
   14004b94e:	lea    rdx,[rip+0x233f3]        # 0x14006ed48
   14004b955:	mov    rcx,r12
   14004b958:	call   QWORD PTR [rip+0x18c8a]        # 0x1400645e8
   14004b95e:	test   rax,rax
   14004b961:	je     0x14004b96a
   14004b963:	mov    rcx,rbp
   14004b966:	call   rax
   14004b968:	jmp    0x14004b96d
   14004b96a:	mov    rax,rbp
   14004b96d:	mov    rbx,QWORD PTR [rsp+0x48]
   14004b972:	mov    rbp,QWORD PTR [rsp+0x50]
   14004b977:	add    rsp,0x20
   14004b97b:	pop    r12
   14004b97d:	pop    rdi
   14004b97e:	pop    rsi
   14004b97f:	ret    
   14004b980:	mov    QWORD PTR [rsp+0x10],rbx
   14004b985:	mov    QWORD PTR [rsp+0x18],rsi
   14004b98a:	push   rdi
   14004b98b:	sub    rsp,0x20
   14004b98f:	mov    ecx,DWORD PTR [rip+0x3b7eb]        # 0x140087180
   14004b995:	cmp    ecx,0xffffffff
   14004b998:	je     0x14004b9b1
   14004b99a:	call   QWORD PTR [rip+0x18948]        # 0x1400642e8
   14004b9a0:	test   rax,rax
   14004b9a3:	je     0x14004b9b1
   14004b9a5:	mov    rax,QWORD PTR [rax+0x2a8]
   14004b9ac:	jmp    0x14004ba3e
   14004b9b1:	lea    rcx,[rip+0x233a0]        # 0x14006ed58
   14004b9b8:	call   QWORD PTR [rip+0x18a92]        # 0x140064450
   14004b9be:	test   rax,rax
   14004b9c1:	mov    rbx,rax
   14004b9c4:	je     0x14004ba57
   14004b9ca:	lea    rcx,[rsp+0x30]
   14004b9cf:	mov    DWORD PTR [rsp+0x30],0x0
   14004b9d7:	call   0x1400482b0
   14004b9dc:	cmp    DWORD PTR [rsp+0x30],0x5
   14004b9e1:	jg     0x14004ba2e
   14004b9e3:	xor    ecx,ecx
   14004b9e5:	call   QWORD PTR [rip+0x18a65]        # 0x140064450
   14004b9eb:	xor    edx,edx
   14004b9ed:	movsxd rcx,DWORD PTR [rax+0x3c]
   14004b9f1:	add    rcx,rax
   14004b9f4:	movzx  eax,WORD PTR [rcx+0x14]
   14004b9f8:	lea    r8,[rax+rcx*1+0x18]
   14004b9fd:	movzx  eax,WORD PTR [rcx+0x6]
   14004ba01:	test   eax,eax
   14004ba03:	je     0x14004ba2e
   14004ba05:	data16 data16 xchg ax,ax
   14004ba09:	data16 xchg ax,ax
   14004ba0c:	data16 data16 xchg ax,ax
   14004ba10:	lea    rsi,[rip+0x23329]        # 0x14006ed40
   14004ba17:	mov    rdi,r8
   14004ba1a:	mov    ecx,0x8
   14004ba1f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ba21:	je     0x14004ba57
   14004ba23:	add    edx,0x1
   14004ba26:	add    r8,0x28
   14004ba2a:	cmp    edx,eax
   14004ba2c:	jb     0x14004ba10
   14004ba2e:	lea    rdx,[rip+0x23313]        # 0x14006ed48
   14004ba35:	mov    rcx,rbx
   14004ba38:	call   QWORD PTR [rip+0x18baa]        # 0x1400645e8
   14004ba3e:	test   rax,rax
   14004ba41:	je     0x14004ba57
   14004ba43:	xor    ecx,ecx
   14004ba45:	call   rax
   14004ba47:	mov    rbx,QWORD PTR [rsp+0x38]
   14004ba4c:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ba51:	add    rsp,0x20
   14004ba55:	pop    rdi
   14004ba56:	ret    
   14004ba57:	mov    rbx,QWORD PTR [rsp+0x38]
   14004ba5c:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ba61:	xor    eax,eax
   14004ba63:	add    rsp,0x20
   14004ba67:	pop    rdi
   14004ba68:	ret    
   14004ba69:	int3   
   14004ba6a:	int3   
   14004ba6b:	int3   
   14004ba6c:	int3   
   14004ba6d:	int3   
   14004ba6e:	int3   
   14004ba6f:	int3   
   14004ba70:	mov    QWORD PTR [rsp+0x10],rbx
   14004ba75:	mov    QWORD PTR [rsp+0x18],rbp
   14004ba7a:	push   rsi
   14004ba7b:	push   rdi
   14004ba7c:	push   r12
   14004ba7e:	sub    rsp,0x20
   14004ba82:	mov    rbp,rcx
   14004ba85:	mov    ecx,DWORD PTR [rip+0x3b6f5]        # 0x140087180
   14004ba8b:	cmp    ecx,0xffffffff
   14004ba8e:	je     0x14004baa4
   14004ba90:	call   QWORD PTR [rip+0x18852]        # 0x1400642e8
   14004ba96:	test   rax,rax
   14004ba99:	je     0x14004baa4
   14004ba9b:	mov    rax,QWORD PTR [rax+0x2b0]
   14004baa2:	jmp    0x14004bb1e
   14004baa4:	lea    rcx,[rip+0x232ad]        # 0x14006ed58
   14004baab:	call   QWORD PTR [rip+0x1899f]        # 0x140064450
   14004bab1:	test   rax,rax
   14004bab4:	mov    r12,rax
   14004bab7:	je     0x14004bb2a
   14004bab9:	lea    rcx,[rsp+0x40]
   14004babe:	xor    ebx,ebx
   14004bac0:	mov    DWORD PTR [rsp+0x40],ebx
   14004bac4:	call   0x1400482b0
   14004bac9:	cmp    DWORD PTR [rsp+0x40],0x5
   14004bace:	jg     0x14004bb0e
   14004bad0:	xor    ecx,ecx
   14004bad2:	call   QWORD PTR [rip+0x18978]        # 0x140064450
   14004bad8:	movsxd rcx,DWORD PTR [rax+0x3c]
   14004badc:	add    rcx,rax
   14004badf:	movzx  eax,WORD PTR [rcx+0x14]
   14004bae3:	lea    rdx,[rax+rcx*1+0x18]
   14004bae8:	movzx  eax,WORD PTR [rcx+0x6]
   14004baec:	test   eax,eax
   14004baee:	je     0x14004bb0e
   14004baf0:	lea    rsi,[rip+0x23249]        # 0x14006ed40
   14004baf7:	mov    rdi,rdx
   14004bafa:	mov    ecx,0x8
   14004baff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bb01:	je     0x14004bb2a
   14004bb03:	add    ebx,0x1
   14004bb06:	add    rdx,0x28
   14004bb0a:	cmp    ebx,eax
   14004bb0c:	jb     0x14004baf0
   14004bb0e:	lea    rdx,[rip+0x23253]        # 0x14006ed68
   14004bb15:	mov    rcx,r12
   14004bb18:	call   QWORD PTR [rip+0x18aca]        # 0x1400645e8
   14004bb1e:	test   rax,rax
   14004bb21:	je     0x14004bb2a
   14004bb23:	mov    rcx,rbp
   14004bb26:	call   rax
   14004bb28:	jmp    0x14004bb2d
   14004bb2a:	mov    rax,rbp
   14004bb2d:	mov    rbx,QWORD PTR [rsp+0x48]
   14004bb32:	mov    rbp,QWORD PTR [rsp+0x50]
   14004bb37:	add    rsp,0x20
   14004bb3b:	pop    r12
   14004bb3d:	pop    rdi
   14004bb3e:	pop    rsi
   14004bb3f:	ret    
   14004bb40:	mov    QWORD PTR [rsp+0x10],rbx
   14004bb45:	mov    QWORD PTR [rsp+0x18],rsi
   14004bb4a:	mov    QWORD PTR [rsp+0x20],rdi
   14004bb4f:	push   r12
   14004bb51:	push   r13
   14004bb53:	push   r14
   14004bb55:	sub    rsp,0x20
   14004bb59:	mov    r13,rdx
   14004bb5c:	mov    r12,rcx
   14004bb5f:	lea    rcx,[rip+0x231f2]        # 0x14006ed58
   14004bb66:	call   QWORD PTR [rip+0x188e4]        # 0x140064450
   14004bb6c:	mov    r14,rax
   14004bb6f:	lea    rax,[rip+0x3b50a]        # 0x140087080
   14004bb76:	mov    QWORD PTR [r12+0xa0],rax
   14004bb7e:	mov    DWORD PTR [r12+0x1c],0x1
   14004bb87:	test   r14,r14
   14004bb8a:	je     0x14004bc1e
   14004bb90:	xor    ebx,ebx
   14004bb92:	mov    DWORD PTR [rsp+0x40],ebx
   14004bb96:	lea    rcx,[rsp+0x40]
   14004bb9b:	call   0x1400482b0
   14004bba0:	cmp    DWORD PTR [rsp+0x40],0x5
   14004bba5:	jg     0x14004bbee
   14004bba7:	xor    ecx,ecx
   14004bba9:	call   QWORD PTR [rip+0x188a1]        # 0x140064450
   14004bbaf:	movsxd rcx,DWORD PTR [rax+0x3c]
   14004bbb3:	add    rcx,rax
   14004bbb6:	movzx  eax,WORD PTR [rcx+0x14]
   14004bbba:	lea    rdx,[rax+rcx*1+0x18]
   14004bbbf:	movzx  eax,WORD PTR [rcx+0x6]
   14004bbc3:	test   eax,eax
   14004bbc5:	je     0x14004bbee
   14004bbc7:	data16 xchg ax,ax
   14004bbca:	data16 xchg ax,ax
   14004bbcd:	data16 xchg ax,ax
   14004bbd0:	lea    rsi,[rip+0x23169]        # 0x14006ed40
   14004bbd7:	mov    rdi,rdx
   14004bbda:	mov    ecx,0x8
   14004bbdf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bbe1:	je     0x14004bc1e
   14004bbe3:	add    ebx,0x1
   14004bbe6:	add    rdx,0x28
   14004bbea:	cmp    ebx,eax
   14004bbec:	jb     0x14004bbd0
   14004bbee:	lea    rdx,[rip+0x23153]        # 0x14006ed48
   14004bbf5:	mov    rcx,r14
   14004bbf8:	call   QWORD PTR [rip+0x189ea]        # 0x1400645e8
   14004bbfe:	mov    QWORD PTR [r12+0x2a8],rax
   14004bc06:	lea    rdx,[rip+0x2315b]        # 0x14006ed68
   14004bc0d:	mov    rcx,r14
   14004bc10:	call   QWORD PTR [rip+0x189d2]        # 0x1400645e8
   14004bc16:	mov    QWORD PTR [r12+0x2b0],rax
   14004bc1e:	mov    DWORD PTR [r12+0xc8],0x1
   14004bc2a:	mov    BYTE PTR [r12+0x174],0x43
   14004bc33:	mov    BYTE PTR [r12+0x1f7],0x43
   14004bc3c:	lea    rax,[rip+0x3b5ad]        # 0x1400871f0
   14004bc43:	mov    QWORD PTR [r12+0xb8],rax
   14004bc4b:	lock add DWORD PTR [rip+0x3b59d],0x1        # 0x1400871f0
   14004bc53:	mov    ecx,0xc
   14004bc58:	call   0x140052e40
   14004bc5d:	nop
   14004bc5e:	mov    QWORD PTR [r12+0xc0],r13
   14004bc66:	test   r13,r13
   14004bc69:	jne    0x14004bc7a
   14004bc6b:	mov    rax,QWORD PTR [rip+0x3bc2e]        # 0x1400878a0
   14004bc72:	mov    QWORD PTR [r12+0xc0],rax
   14004bc7a:	mov    rcx,QWORD PTR [r12+0xc0]
   14004bc82:	call   0x14004ee80
   14004bc87:	nop
   14004bc88:	mov    ecx,0xc
   14004bc8d:	call   0x140052d10
   14004bc92:	mov    rbx,QWORD PTR [rsp+0x48]
   14004bc97:	mov    rsi,QWORD PTR [rsp+0x50]
   14004bc9c:	mov    rdi,QWORD PTR [rsp+0x58]
   14004bca1:	add    rsp,0x20
   14004bca5:	pop    r14
   14004bca7:	pop    r13
   14004bca9:	pop    r12
   14004bcab:	ret    
   14004bcac:	int3   
   14004bcad:	int3   
   14004bcae:	int3   
   14004bcaf:	int3   
   14004bcb0:	rex push rbp
   14004bcb2:	sub    rsp,0x20
   14004bcb6:	mov    rbp,rdx
   14004bcb9:	mov    ecx,0xc
   14004bcbe:	call   0x140052d10
   14004bcc3:	add    rsp,0x20
   14004bcc7:	pop    rbp
   14004bcc8:	ret    
   14004bcc9:	int3   
   14004bcca:	int3   
   14004bccb:	int3   
   14004bccc:	int3   
   14004bccd:	int3   
   14004bcce:	int3   
   14004bccf:	int3   
   14004bcd0:	mov    QWORD PTR [rsp+0x8],rbx
   14004bcd5:	push   rdi
   14004bcd6:	sub    rsp,0x20
   14004bcda:	call   QWORD PTR [rip+0x18920]        # 0x140064600
   14004bce0:	mov    ecx,DWORD PTR [rip+0x3b49a]        # 0x140087180
   14004bce6:	mov    edi,eax
   14004bce8:	call   QWORD PTR [rip+0x185fa]        # 0x1400642e8
   14004bcee:	test   rax,rax
   14004bcf1:	mov    rbx,rax
   14004bcf4:	jne    0x14004bd41
   14004bcf6:	lea    ecx,[rax+0x1]
   14004bcf9:	mov    edx,0x2d8
   14004bcfe:	call   0x14004de90
   14004bd03:	test   rax,rax
   14004bd06:	mov    rbx,rax
   14004bd09:	je     0x14004bd41
   14004bd0b:	mov    ecx,DWORD PTR [rip+0x3b46f]        # 0x140087180
   14004bd11:	mov    rdx,rax
   14004bd14:	call   QWORD PTR [rip+0x185d6]        # 0x1400642f0
   14004bd1a:	mov    rcx,rbx
   14004bd1d:	test   eax,eax
   14004bd1f:	je     0x14004bd3a
   14004bd21:	xor    edx,edx
   14004bd23:	call   0x14004bb40
   14004bd28:	call   QWORD PTR [rip+0x18792]        # 0x1400644c0
   14004bd2e:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14004bd36:	mov    DWORD PTR [rbx],eax
   14004bd38:	jmp    0x14004bd41
   14004bd3a:	call   0x1400485c0
   14004bd3f:	xor    ebx,ebx
   14004bd41:	mov    ecx,edi
   14004bd43:	call   QWORD PTR [rip+0x18757]        # 0x1400644a0
   14004bd49:	mov    rax,rbx
   14004bd4c:	mov    rbx,QWORD PTR [rsp+0x30]
   14004bd51:	add    rsp,0x20
   14004bd55:	pop    rdi
   14004bd56:	ret    
   14004bd57:	int3   
   14004bd58:	int3   
   14004bd59:	int3   
   14004bd5a:	int3   
   14004bd5b:	int3   
   14004bd5c:	int3   
   14004bd5d:	int3   
   14004bd5e:	int3   
   14004bd5f:	int3   
   14004bd60:	mov    QWORD PTR [rsp+0x8],rbx
   14004bd65:	push   rdi
   14004bd66:	sub    rsp,0x20
   14004bd6a:	call   QWORD PTR [rip+0x18890]        # 0x140064600
   14004bd70:	mov    ecx,DWORD PTR [rip+0x3b40a]        # 0x140087180
   14004bd76:	mov    edi,eax
   14004bd78:	call   QWORD PTR [rip+0x1856a]        # 0x1400642e8
   14004bd7e:	test   rax,rax
   14004bd81:	mov    rbx,rax
   14004bd84:	jne    0x14004bdd1
   14004bd86:	lea    ecx,[rax+0x1]
   14004bd89:	mov    edx,0x2d8
   14004bd8e:	call   0x14004de90
   14004bd93:	test   rax,rax
   14004bd96:	mov    rbx,rax
   14004bd99:	je     0x14004bdd1
   14004bd9b:	mov    ecx,DWORD PTR [rip+0x3b3df]        # 0x140087180
   14004bda1:	mov    rdx,rax
   14004bda4:	call   QWORD PTR [rip+0x18546]        # 0x1400642f0
   14004bdaa:	mov    rcx,rbx
   14004bdad:	test   eax,eax
   14004bdaf:	je     0x14004bdca
   14004bdb1:	xor    edx,edx
   14004bdb3:	call   0x14004bb40
   14004bdb8:	call   QWORD PTR [rip+0x18702]        # 0x1400644c0
   14004bdbe:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14004bdc6:	mov    DWORD PTR [rbx],eax
   14004bdc8:	jmp    0x14004bdd1
   14004bdca:	call   0x1400485c0
   14004bdcf:	xor    ebx,ebx
   14004bdd1:	mov    ecx,edi
   14004bdd3:	call   QWORD PTR [rip+0x186c7]        # 0x1400644a0
   14004bdd9:	test   rbx,rbx
   14004bddc:	jne    0x14004bde6
   14004bdde:	lea    ecx,[rbx+0x10]
   14004bde1:	call   0x140048190
   14004bde6:	mov    rax,rbx
   14004bde9:	mov    rbx,QWORD PTR [rsp+0x30]
   14004bdee:	add    rsp,0x20
   14004bdf2:	pop    rdi
   14004bdf3:	ret    
   14004bdf4:	int3   
   14004bdf5:	int3   
   14004bdf6:	int3   
   14004bdf7:	int3   
   14004bdf8:	int3   
   14004bdf9:	int3   
   14004bdfa:	int3   
   14004bdfb:	int3   
   14004bdfc:	int3   
   14004bdfd:	int3   
   14004bdfe:	int3   
   14004bdff:	int3   
   14004be00:	test   rcx,rcx
   14004be03:	je     0x14004bf26
   14004be09:	mov    QWORD PTR [rsp+0x10],rbx
   14004be0e:	push   rdi
   14004be0f:	sub    rsp,0x20
   14004be13:	mov    rbx,rcx
   14004be16:	mov    rcx,QWORD PTR [rcx+0x38]
   14004be1a:	test   rcx,rcx
   14004be1d:	je     0x14004be24
   14004be1f:	call   0x1400485c0
   14004be24:	mov    rcx,QWORD PTR [rbx+0x48]
   14004be28:	test   rcx,rcx
   14004be2b:	je     0x14004be32
   14004be2d:	call   0x1400485c0
   14004be32:	mov    rcx,QWORD PTR [rbx+0x58]
   14004be36:	test   rcx,rcx
   14004be39:	je     0x14004be40
   14004be3b:	call   0x1400485c0
   14004be40:	mov    rcx,QWORD PTR [rbx+0x68]
   14004be44:	test   rcx,rcx
   14004be47:	je     0x14004be4e
   14004be49:	call   0x1400485c0
   14004be4e:	mov    rcx,QWORD PTR [rbx+0x78]
   14004be52:	test   rcx,rcx
   14004be55:	je     0x14004be5c
   14004be57:	call   0x1400485c0
   14004be5c:	mov    rcx,QWORD PTR [rbx+0x80]
   14004be63:	test   rcx,rcx
   14004be66:	je     0x14004be6d
   14004be68:	call   0x1400485c0
   14004be6d:	mov    rcx,QWORD PTR [rbx+0xa0]
   14004be74:	lea    rax,[rip+0x3b205]        # 0x140087080
   14004be7b:	cmp    rcx,rax
   14004be7e:	je     0x14004be85
   14004be80:	call   0x1400485c0
   14004be85:	mov    ecx,0xd
   14004be8a:	call   0x140052e40
   14004be8f:	nop
   14004be90:	mov    rcx,QWORD PTR [rbx+0xb8]
   14004be97:	mov    QWORD PTR [rsp+0x30],rcx
   14004be9c:	test   rcx,rcx
   14004be9f:	je     0x14004bebe
   14004bea1:	lock add DWORD PTR [rcx],0xffffffff
   14004bea5:	jne    0x14004bebe
   14004bea7:	lea    rax,[rip+0x3b342]        # 0x1400871f0
   14004beae:	mov    rcx,QWORD PTR [rsp+0x30]
   14004beb3:	cmp    rcx,rax
   14004beb6:	je     0x14004bebe
   14004beb8:	call   0x1400485c0
   14004bebd:	nop
   14004bebe:	mov    ecx,0xd
   14004bec3:	call   0x140052d10
   14004bec8:	mov    ecx,0xc
   14004becd:	call   0x140052e40
   14004bed2:	nop
   14004bed3:	mov    rdi,QWORD PTR [rbx+0xc0]
   14004beda:	test   rdi,rdi
   14004bedd:	je     0x14004bf0a
   14004bedf:	mov    rcx,rdi
   14004bee2:	call   0x14004ef20
   14004bee7:	cmp    rdi,QWORD PTR [rip+0x3b9b2]        # 0x1400878a0
   14004beee:	je     0x14004bf0a
   14004bef0:	lea    rax,[rip+0x3b849]        # 0x140087740
   14004bef7:	cmp    rdi,rax
   14004befa:	je     0x14004bf0a
   14004befc:	cmp    DWORD PTR [rdi],0x0
   14004beff:	jne    0x14004bf0a
   14004bf01:	mov    rcx,rdi
   14004bf04:	call   0x14004ecf0
   14004bf09:	nop
   14004bf0a:	mov    ecx,0xc
   14004bf0f:	call   0x140052d10
   14004bf14:	mov    rcx,rbx
   14004bf17:	call   0x1400485c0
   14004bf1c:	mov    rbx,QWORD PTR [rsp+0x38]
   14004bf21:	add    rsp,0x20
   14004bf25:	pop    rdi
   14004bf26:	ret    0x0
   14004bf29:	int3   
   14004bf2a:	int3   
   14004bf2b:	int3   
   14004bf2c:	int3   
   14004bf2d:	int3   
   14004bf2e:	int3   
   14004bf2f:	int3   
   14004bf30:	rex push rbp
   14004bf32:	sub    rsp,0x20
   14004bf36:	mov    rbp,rdx
   14004bf39:	mov    ecx,0xd
   14004bf3e:	call   0x140052d10
   14004bf43:	add    rsp,0x20
   14004bf47:	pop    rbp
   14004bf48:	ret    
   14004bf49:	int3   
   14004bf4a:	int3   
   14004bf4b:	int3   
   14004bf4c:	int3   
   14004bf4d:	int3   
   14004bf4e:	int3   
   14004bf4f:	int3   
   14004bf50:	rex push rbp
   14004bf52:	sub    rsp,0x20
   14004bf56:	mov    rbp,rdx
   14004bf59:	mov    ecx,0xc
   14004bf5e:	call   0x140052d10
   14004bf63:	add    rsp,0x20
   14004bf67:	pop    rbp
   14004bf68:	ret    
   14004bf69:	int3   
   14004bf6a:	int3   
   14004bf6b:	int3   
   14004bf6c:	int3   
   14004bf6d:	int3   
   14004bf6e:	int3   
   14004bf6f:	int3   
   14004bf70:	sub    rsp,0x28
   14004bf74:	call   0x140048550
   14004bf79:	call   0x140052bd0
   14004bf7e:	test   eax,eax
   14004bf80:	jne    0x14004bfc4
   14004bf82:	mov    ecx,DWORD PTR [rip+0x3b1f8]        # 0x140087180
   14004bf88:	cmp    ecx,0xffffffff
   14004bf8b:	je     0x14004bf9d
   14004bf8d:	call   QWORD PTR [rip+0x18365]        # 0x1400642f8
   14004bf93:	mov    DWORD PTR [rip+0x3b1e3],0xffffffff        # 0x140087180
   14004bf9d:	mov    ecx,DWORD PTR [rip+0x3b1e1]        # 0x140087184
   14004bfa3:	cmp    ecx,0xffffffff
   14004bfa6:	je     0x14004bfb8
   14004bfa8:	call   QWORD PTR [rip+0x181e2]        # 0x140064190
   14004bfae:	mov    DWORD PTR [rip+0x3b1cc],0xffffffff        # 0x140087184
   14004bfb8:	call   0x140052c70
   14004bfbd:	xor    eax,eax
   14004bfbf:	add    rsp,0x28
   14004bfc3:	ret    
   14004bfc4:	lea    rcx,[rip+0xfffffffffffffe35]        # 0x14004be00
   14004bfcb:	call   QWORD PTR [rip+0x1832f]        # 0x140064300
   14004bfd1:	cmp    eax,0xffffffff
   14004bfd4:	mov    DWORD PTR [rip+0x3b1a6],eax        # 0x140087180
   14004bfda:	jne    0x14004bfe8
   14004bfdc:	mov    ecx,DWORD PTR [rip+0x3b1a2]        # 0x140087184
   14004bfe2:	cmp    ecx,eax
   14004bfe4:	je     0x14004bfb8
   14004bfe6:	jmp    0x14004bfa8
   14004bfe8:	mov    edx,0x2d8
   14004bfed:	mov    ecx,0x1
   14004bff2:	mov    QWORD PTR [rsp+0x20],rbx
   14004bff7:	call   0x14004de90
   14004bffc:	test   rax,rax
   14004bfff:	mov    rbx,rax
   14004c002:	je     0x14004c040
   14004c004:	mov    ecx,DWORD PTR [rip+0x3b176]        # 0x140087180
   14004c00a:	mov    rdx,rax
   14004c00d:	call   QWORD PTR [rip+0x182dd]        # 0x1400642f0
   14004c013:	test   eax,eax
   14004c015:	je     0x14004c040
   14004c017:	xor    edx,edx
   14004c019:	mov    rcx,rbx
   14004c01c:	call   0x14004bb40
   14004c021:	call   QWORD PTR [rip+0x18499]        # 0x1400644c0
   14004c027:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14004c02f:	mov    DWORD PTR [rbx],eax
   14004c031:	mov    rbx,QWORD PTR [rsp+0x20]
   14004c036:	mov    eax,0x1
   14004c03b:	add    rsp,0x28
   14004c03f:	ret    
   14004c040:	mov    ecx,DWORD PTR [rip+0x3b13a]        # 0x140087180
   14004c046:	cmp    ecx,0xffffffff
   14004c049:	je     0x14004c05b
   14004c04b:	call   QWORD PTR [rip+0x182a7]        # 0x1400642f8
   14004c051:	mov    DWORD PTR [rip+0x3b125],0xffffffff        # 0x140087180
   14004c05b:	mov    ecx,DWORD PTR [rip+0x3b123]        # 0x140087184
   14004c061:	cmp    ecx,0xffffffff
   14004c064:	je     0x14004c076
   14004c066:	call   QWORD PTR [rip+0x18124]        # 0x140064190
   14004c06c:	mov    DWORD PTR [rip+0x3b10e],0xffffffff        # 0x140087184
   14004c076:	call   0x140052c70
   14004c07b:	mov    rbx,QWORD PTR [rsp+0x20]
   14004c080:	xor    eax,eax
   14004c082:	add    rsp,0x28
   14004c086:	ret    
   14004c087:	int3   
   14004c088:	int3   
   14004c089:	int3   
   14004c08a:	int3   
   14004c08b:	int3   
   14004c08c:	int3   
   14004c08d:	int3   
   14004c08e:	int3   
   14004c08f:	int3   
   14004c090:	mov    DWORD PTR [rsp+0x8],ecx
   14004c094:	sub    rsp,0x28
   14004c098:	xor    r8d,r8d
   14004c09b:	mov    edx,0x1000
   14004c0a0:	xor    ecx,ecx
   14004c0a2:	call   QWORD PTR [rip+0x18268]        # 0x140064310
   14004c0a8:	test   rax,rax
   14004c0ab:	mov    QWORD PTR [rip+0x40b26],rax        # 0x14008cbd8
   14004c0b2:	jne    0x14004c0b9
   14004c0b4:	add    rsp,0x28
   14004c0b8:	ret    
   14004c0b9:	lea    r8,[rsp+0x30]
   14004c0be:	mov    r9d,0x4
   14004c0c4:	xor    edx,edx
   14004c0c6:	mov    rcx,rax
   14004c0c9:	mov    DWORD PTR [rsp+0x30],0x2
   14004c0d1:	call   QWORD PTR [rip+0x18231]        # 0x140064308
   14004c0d7:	mov    eax,0x1
   14004c0dc:	add    rsp,0x28
   14004c0e0:	ret    
   14004c0e1:	int3   
   14004c0e2:	int3   
   14004c0e3:	int3   
   14004c0e4:	int3   
   14004c0e5:	int3   
   14004c0e6:	int3   
   14004c0e7:	int3   
   14004c0e8:	int3   
   14004c0e9:	int3   
   14004c0ea:	int3   
   14004c0eb:	int3   
   14004c0ec:	int3   
   14004c0ed:	int3   
   14004c0ee:	int3   
   14004c0ef:	int3   
   14004c0f0:	rex push rdi
   14004c0f2:	sub    rsp,0x20
   14004c0f6:	mov    rax,QWORD PTR [rip+0x3ac73]        # 0x140086d70
   14004c0fd:	movabs rdi,0x2b992ddfa232
   14004c107:	mov    QWORD PTR [rsp+0x30],0x0
   14004c110:	cmp    rax,rdi
   14004c113:	je     0x14004c125
   14004c115:	not    rax
   14004c118:	mov    QWORD PTR [rip+0x3ac59],rax        # 0x140086d78
   14004c11f:	add    rsp,0x20
   14004c123:	pop    rdi
   14004c124:	ret    
   14004c125:	lea    rcx,[rsp+0x30]
   14004c12a:	mov    QWORD PTR [rsp+0x40],rbx
   14004c12f:	call   QWORD PTR [rip+0x181eb]        # 0x140064320
   14004c135:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c13a:	call   QWORD PTR [rip+0x18358]        # 0x140064498
   14004c140:	mov    r11d,eax
   14004c143:	xor    rbx,r11
   14004c146:	call   QWORD PTR [rip+0x18374]        # 0x1400644c0
   14004c14c:	mov    r11d,eax
   14004c14f:	xor    rbx,r11
   14004c152:	call   QWORD PTR [rip+0x180b8]        # 0x140064210
   14004c158:	lea    rcx,[rsp+0x38]
   14004c15d:	mov    r11d,eax
   14004c160:	xor    rbx,r11
   14004c163:	call   QWORD PTR [rip+0x181af]        # 0x140064318
   14004c169:	mov    r11,QWORD PTR [rsp+0x38]
   14004c16e:	xor    r11,rbx
   14004c171:	mov    rbx,QWORD PTR [rsp+0x40]
   14004c176:	movabs rax,0xffffffffffff
   14004c180:	and    r11,rax
   14004c183:	movabs rax,0x2b992ddfa233
   14004c18d:	cmp    r11,rdi
   14004c190:	cmove  r11,rax
   14004c194:	mov    QWORD PTR [rip+0x3abd5],r11        # 0x140086d70
   14004c19b:	not    r11
   14004c19e:	mov    QWORD PTR [rip+0x3abd3],r11        # 0x140086d78
   14004c1a5:	add    rsp,0x20
   14004c1a9:	pop    rdi
   14004c1aa:	ret    
   14004c1ab:	int3   
   14004c1ac:	int3   
   14004c1ad:	int3   
   14004c1ae:	int3   
   14004c1af:	int3   
   14004c1b0:	rex push rbx
   14004c1b2:	sub    rsp,0x30
   14004c1b6:	mov    rbx,rcx
   14004c1b9:	mov    ecx,0xe
   14004c1be:	call   0x140052e40
   14004c1c3:	nop
   14004c1c4:	mov    rax,QWORD PTR [rbx+0x8]
   14004c1c8:	test   rax,rax
   14004c1cb:	je     0x14004c214
   14004c1cd:	mov    rcx,QWORD PTR [rip+0x40a14]        # 0x14008cbe8
   14004c1d4:	mov    QWORD PTR [rsp+0x20],rcx
   14004c1d9:	lea    rdx,[rip+0x40a00]        # 0x14008cbe0
   14004c1e0:	test   rcx,rcx
   14004c1e3:	je     0x14004c203
   14004c1e5:	cmp    QWORD PTR [rcx],rax
   14004c1e8:	jne    0x14004c1f9
   14004c1ea:	mov    rax,QWORD PTR [rcx+0x8]
   14004c1ee:	mov    QWORD PTR [rdx+0x8],rax
   14004c1f2:	call   0x1400485c0
   14004c1f7:	jmp    0x14004c203
   14004c1f9:	mov    rdx,rcx
   14004c1fc:	mov    QWORD PTR [rsp+0x20],rcx
   14004c201:	jmp    0x14004c1e0
   14004c203:	mov    rcx,QWORD PTR [rbx+0x8]
   14004c207:	call   0x1400485c0
   14004c20c:	mov    QWORD PTR [rbx+0x8],0x0
   14004c214:	mov    ecx,0xe
   14004c219:	call   0x140052d10
   14004c21e:	add    rsp,0x30
   14004c222:	pop    rbx
   14004c223:	ret    
   14004c224:	int3   
   14004c225:	int3   
   14004c226:	int3   
   14004c227:	int3   
   14004c228:	int3   
   14004c229:	int3   
   14004c22a:	int3   
   14004c22b:	int3   
   14004c22c:	int3   
   14004c22d:	int3   
   14004c22e:	int3   
   14004c22f:	int3   
   14004c230:	rex push rbp
   14004c232:	sub    rsp,0x20
   14004c236:	mov    rbp,rdx
   14004c239:	mov    ecx,0xe
   14004c23e:	call   0x140052d10
   14004c243:	add    rsp,0x20
   14004c247:	pop    rbp
   14004c248:	ret    
   14004c249:	int3   
   14004c24a:	int3   
   14004c24b:	int3   
   14004c24c:	int3   
   14004c24d:	int3   
   14004c24e:	int3   
   14004c24f:	int3   
   14004c250:	sub    rsp,0x28
   14004c254:	call   0x14004bd60
   14004c259:	mov    rcx,QWORD PTR [rax+0xd0]
   14004c260:	test   rcx,rcx
   14004c263:	je     0x14004c269
   14004c265:	call   rcx
   14004c267:	jmp    0x14004c269
   14004c269:	call   0x140054d60
   14004c26e:	add    rsp,0x28
   14004c272:	ret    
   14004c273:	int3   
   14004c274:	int3   
   14004c275:	int3   
   14004c276:	int3   
   14004c277:	int3   
   14004c278:	int3   
   14004c279:	int3   
   14004c27a:	int3   
   14004c27b:	int3   
   14004c27c:	int3   
   14004c27d:	int3   
   14004c27e:	int3   
   14004c27f:	int3   
   14004c280:	sub    rsp,0x28
   14004c284:	mov    rcx,QWORD PTR [rip+0x40965]        # 0x14008cbf0
   14004c28b:	call   0x14004ba70
   14004c290:	test   rax,rax
   14004c293:	je     0x14004c299
   14004c295:	call   rax
   14004c297:	jmp    0x14004c299
   14004c299:	call   0x14004c250
   14004c29e:	int3   
   14004c29f:	add    rsp,0x28
   14004c2a3:	ret    
   14004c2a4:	int3   
   14004c2a5:	int3   
   14004c2a6:	int3   
   14004c2a7:	int3   
   14004c2a8:	int3   
   14004c2a9:	int3   
   14004c2aa:	int3   
   14004c2ab:	int3   
   14004c2ac:	int3   
   14004c2ad:	int3   
   14004c2ae:	int3   
   14004c2af:	int3   
   14004c2b0:	sub    rsp,0x28
   14004c2b4:	lea    rcx,[rip+0xffffffffffffff95]        # 0x14004c250
   14004c2bb:	call   0x14004b8b0
   14004c2c0:	mov    QWORD PTR [rip+0x40929],rax        # 0x14008cbf0
   14004c2c7:	add    rsp,0x28
   14004c2cb:	ret    
   14004c2cc:	int3   
   14004c2cd:	int3   
   14004c2ce:	int3   
   14004c2cf:	int3   
   14004c2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14004c2d5:	mov    QWORD PTR [rsp+0x10],rbp
   14004c2da:	mov    QWORD PTR [rsp+0x18],rsi
   14004c2df:	push   rdi
   14004c2e0:	sub    rsp,0x20
   14004c2e4:	test   rcx,rcx
   14004c2e7:	mov    rsi,r8
   14004c2ea:	mov    rbp,rdx
   14004c2ed:	mov    rbx,rcx
   14004c2f0:	jne    0x14004c2f7
   14004c2f2:	call   0x14004c280
   14004c2f7:	movsxd rax,DWORD PTR [rbx+0x18]
   14004c2fb:	mov    edi,DWORD PTR [rbx+0x14]
   14004c2fe:	add    rax,QWORD PTR [rbp+0x8]
   14004c302:	jne    0x14004c309
   14004c304:	call   0x14004c280
   14004c309:	xor    ecx,ecx
   14004c30b:	test   edi,edi
   14004c30d:	je     0x14004c348
   14004c30f:	mov    r8,QWORD PTR [rbp+0x8]
   14004c313:	movsxd r9,DWORD PTR [rbx+0x18]
   14004c317:	lea    rdx,[r8+r9*1]
   14004c31b:	xchg   ax,ax
   14004c31d:	data16 xchg ax,ax
   14004c320:	movsxd rax,DWORD PTR [rdx]
   14004c323:	add    rax,r8
   14004c326:	cmp    rsi,rax
   14004c329:	jl     0x14004c336
   14004c32b:	add    ecx,0x1
   14004c32e:	add    rdx,0x8
   14004c332:	cmp    ecx,edi
   14004c334:	jb     0x14004c320
   14004c336:	test   ecx,ecx
   14004c338:	je     0x14004c348
   14004c33a:	lea    eax,[rcx-0x1]
   14004c33d:	lea    rdx,[r9+rax*8]
   14004c341:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   14004c346:	jmp    0x14004c34b
   14004c348:	or     eax,0xffffffff
   14004c34b:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c350:	mov    rbp,QWORD PTR [rsp+0x38]
   14004c355:	mov    rsi,QWORD PTR [rsp+0x40]
   14004c35a:	add    rsp,0x20
   14004c35e:	pop    rdi
   14004c35f:	ret    
   14004c360:	mov    QWORD PTR [rsp+0x8],rbx
   14004c365:	mov    QWORD PTR [rsp+0x10],rbp
   14004c36a:	mov    QWORD PTR [rsp+0x18],rsi
   14004c36f:	push   rdi
   14004c370:	sub    rsp,0x20
   14004c374:	test   rcx,rcx
   14004c377:	mov    rbp,QWORD PTR [rdx]
   14004c37a:	mov    rsi,rdx
   14004c37d:	mov    rbx,rcx
   14004c380:	jne    0x14004c387
   14004c382:	call   0x14004c280
   14004c387:	movsxd rax,DWORD PTR [rbx+0x18]
   14004c38b:	mov    edi,DWORD PTR [rbx+0x14]
   14004c38e:	add    rax,QWORD PTR [rsi+0x8]
   14004c392:	jne    0x14004c399
   14004c394:	call   0x14004c280
   14004c399:	xor    ecx,ecx
   14004c39b:	test   edi,edi
   14004c39d:	je     0x14004c3d8
   14004c39f:	mov    r8,QWORD PTR [rsi+0x8]
   14004c3a3:	movsxd r9,DWORD PTR [rbx+0x18]
   14004c3a7:	lea    rdx,[r8+r9*1]
   14004c3ab:	xchg   ax,ax
   14004c3ad:	data16 xchg ax,ax
   14004c3b0:	movsxd rax,DWORD PTR [rdx]
   14004c3b3:	add    rax,r8
   14004c3b6:	cmp    rbp,rax
   14004c3b9:	jl     0x14004c3c6
   14004c3bb:	add    ecx,0x1
   14004c3be:	add    rdx,0x8
   14004c3c2:	cmp    ecx,edi
   14004c3c4:	jb     0x14004c3b0
   14004c3c6:	test   ecx,ecx
   14004c3c8:	je     0x14004c3d8
   14004c3ca:	lea    eax,[rcx-0x1]
   14004c3cd:	lea    rcx,[r8+rax*8]
   14004c3d1:	mov    eax,DWORD PTR [rcx+r9*1+0x4]
   14004c3d6:	jmp    0x14004c3db
   14004c3d8:	or     eax,0xffffffff
   14004c3db:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c3e0:	mov    rbp,QWORD PTR [rsp+0x38]
   14004c3e5:	mov    rsi,QWORD PTR [rsp+0x40]
   14004c3ea:	add    rsp,0x20
   14004c3ee:	pop    rdi
   14004c3ef:	ret    
   14004c3f0:	mov    QWORD PTR [rsp+0x18],rbp
   14004c3f5:	push   rdi
   14004c3f6:	sub    rsp,0x20
   14004c3fa:	movsxd r9,DWORD PTR [r8+0x1c]
   14004c3fe:	mov    rax,QWORD PTR [rcx]
   14004c401:	mov    rdi,r8
   14004c404:	mov    eax,DWORD PTR [r9+rax*1]
   14004c408:	mov    rbp,rdx
   14004c40b:	cmp    eax,0xfffffffe
   14004c40e:	jne    0x14004c477
   14004c410:	movsxd rax,DWORD PTR [r8+0x18]
   14004c414:	mov    QWORD PTR [rsp+0x30],rbx
   14004c419:	mov    ebx,DWORD PTR [r8+0x14]
   14004c41d:	add    rax,QWORD PTR [rdx+0x8]
   14004c421:	mov    QWORD PTR [rsp+0x38],rsi
   14004c426:	mov    rsi,QWORD PTR [rdx]
   14004c429:	jne    0x14004c430
   14004c42b:	call   0x14004c280
   14004c430:	xor    ecx,ecx
   14004c432:	test   ebx,ebx
   14004c434:	je     0x14004c46a
   14004c436:	mov    r8,QWORD PTR [rbp+0x8]
   14004c43a:	movsxd r9,DWORD PTR [rdi+0x18]
   14004c43e:	lea    rdx,[r8+r9*1]
   14004c442:	movsxd rax,DWORD PTR [rdx]
   14004c445:	add    rax,r8
   14004c448:	cmp    rsi,rax
   14004c44b:	jl     0x14004c458
   14004c44d:	add    ecx,0x1
   14004c450:	add    rdx,0x8
   14004c454:	cmp    ecx,ebx
   14004c456:	jb     0x14004c442
   14004c458:	test   ecx,ecx
   14004c45a:	je     0x14004c46a
   14004c45c:	lea    eax,[rcx-0x1]
   14004c45f:	lea    rdx,[r9+rax*8]
   14004c463:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   14004c468:	jmp    0x14004c46d
   14004c46a:	or     eax,0xffffffff
   14004c46d:	mov    rsi,QWORD PTR [rsp+0x38]
   14004c472:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c477:	mov    rbp,QWORD PTR [rsp+0x40]
   14004c47c:	add    rsp,0x20
   14004c480:	pop    rdi
   14004c481:	ret    
   14004c482:	int3   
   14004c483:	int3   
   14004c484:	int3   
   14004c485:	int3   
   14004c486:	int3   
   14004c487:	int3   
   14004c488:	int3   
   14004c489:	int3   
   14004c48a:	int3   
   14004c48b:	int3   
   14004c48c:	int3   
   14004c48d:	int3   
   14004c48e:	int3   
   14004c48f:	int3   
   14004c490:	movsxd rdx,DWORD PTR [r8+0x1c]
   14004c494:	mov    rax,QWORD PTR [rcx]
   14004c497:	mov    DWORD PTR [rdx+rax*1],r9d
   14004c49b:	ret    
   14004c49c:	int3   
   14004c49d:	int3   
   14004c49e:	int3   
   14004c49f:	int3   
   14004c4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14004c4a5:	push   rdi
   14004c4a6:	sub    rsp,0x20
   14004c4aa:	mov    edi,r9d
   14004c4ad:	lea    r9,[rsp+0x40]
   14004c4b2:	mov    rbx,r8
   14004c4b5:	call   0x140045bc0
   14004c4ba:	mov    rcx,QWORD PTR [rax]
   14004c4bd:	movsxd rax,DWORD PTR [rbx+0x1c]
   14004c4c1:	mov    QWORD PTR [rsp+0x40],rcx
   14004c4c6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14004c4ca:	jle    0x14004c4d0
   14004c4cc:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14004c4d0:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c4d5:	add    rsp,0x20
   14004c4d9:	pop    rdi
   14004c4da:	ret    
   14004c4db:	int3   
   14004c4dc:	int3   
   14004c4dd:	int3   
   14004c4de:	int3   
   14004c4df:	int3   
   14004c4e0:	rex push rbx
   14004c4e2:	sub    rsp,0x20
   14004c4e6:	lea    r9,[rsp+0x40]
   14004c4eb:	mov    rbx,r8
   14004c4ee:	call   0x140045bc0
   14004c4f3:	mov    rcx,QWORD PTR [rax]
   14004c4f6:	movsxd rax,DWORD PTR [rbx+0x1c]
   14004c4fa:	mov    QWORD PTR [rsp+0x40],rcx
   14004c4ff:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14004c503:	add    rsp,0x20
   14004c507:	pop    rbx
   14004c508:	ret    
   14004c509:	int3   
   14004c50a:	int3   
   14004c50b:	int3   
   14004c50c:	int3   
   14004c50d:	int3   
   14004c50e:	int3   
   14004c50f:	int3   
   14004c510:	lea    rax,[rip+0x22871]        # 0x14006ed88
   14004c517:	mov    QWORD PTR [rcx],rax
   14004c51a:	jmp    0x140057bf0
   14004c51f:	int3   
   14004c520:	mov    QWORD PTR [rsp+0x8],rbx
   14004c525:	push   rdi
   14004c526:	sub    rsp,0x20
   14004c52a:	lea    rax,[rip+0x22857]        # 0x14006ed88
   14004c531:	mov    ebx,edx
   14004c533:	mov    rdi,rcx
   14004c536:	mov    QWORD PTR [rcx],rax
   14004c539:	call   0x140057bf0
   14004c53e:	test   bl,0x1
   14004c541:	je     0x14004c54b
   14004c543:	mov    rcx,rdi
   14004c546:	call   0x14001ac50
   14004c54b:	mov    rax,rdi
   14004c54e:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c553:	add    rsp,0x20
   14004c557:	pop    rdi
   14004c558:	ret    
   14004c559:	int3   
   14004c55a:	int3   
   14004c55b:	int3   
   14004c55c:	int3   
   14004c55d:	int3   
   14004c55e:	int3   
   14004c55f:	int3   
   14004c560:	sub    rsp,0x28
   14004c564:	mov    rax,QWORD PTR [rcx]
   14004c567:	mov    ecx,DWORD PTR [rax]
   14004c569:	cmp    ecx,0xe0434f4d
   14004c56f:	je     0x14004c58e
   14004c571:	cmp    ecx,0xe06d7363
   14004c577:	jne    0x14004c5a8
   14004c579:	call   0x14004bd60
   14004c57e:	mov    DWORD PTR [rax+0x100],0x0
   14004c588:	call   0x14004c250
   14004c58d:	int3   
   14004c58e:	call   0x14004bd60
   14004c593:	cmp    DWORD PTR [rax+0x100],0x0
   14004c59a:	jle    0x14004c5a8
   14004c59c:	call   0x14004bd60
   14004c5a1:	add    DWORD PTR [rax+0x100],0xffffffff
   14004c5a8:	xor    eax,eax
   14004c5aa:	add    rsp,0x28
   14004c5ae:	ret    
   14004c5af:	int3   
   14004c5b0:	mov    DWORD PTR [rsp+0x20],r9d
   14004c5b5:	mov    QWORD PTR [rsp+0x18],r8
   14004c5ba:	mov    QWORD PTR [rsp+0x10],rdx
   14004c5bf:	mov    QWORD PTR [rsp+0x8],rcx
   14004c5c4:	push   rbx
   14004c5c5:	push   rsi
   14004c5c6:	push   rdi
   14004c5c7:	push   r12
   14004c5c9:	push   r13
   14004c5cb:	push   r14
   14004c5cd:	push   r15
   14004c5cf:	sub    rsp,0x30
   14004c5d3:	mov    r13d,r9d
   14004c5d6:	mov    rsi,r8
   14004c5d9:	mov    rbx,rdx
   14004c5dc:	mov    r14,rcx
   14004c5df:	call   0x14004c3f0
   14004c5e4:	mov    edi,eax
   14004c5e6:	call   0x140045cd0
   14004c5eb:	mov    r15,rax
   14004c5ee:	mov    QWORD PTR [rsp+0x28],rax
   14004c5f3:	call   0x14004bd60
   14004c5f8:	add    DWORD PTR [rax+0x100],0x1
   14004c5ff:	nop
   14004c600:	cmp    edi,0xffffffff
   14004c603:	je     0x14004c6f8
   14004c609:	cmp    edi,r13d
   14004c60c:	jle    0x14004c6f8
   14004c612:	cmp    edi,0xffffffff
   14004c615:	jle    0x14004c61c
   14004c617:	cmp    edi,DWORD PTR [rsi+0x4]
   14004c61a:	jl     0x14004c621
   14004c61c:	call   0x14004c280
   14004c621:	movsxd r12,edi
   14004c624:	call   0x140045cd0
   14004c629:	movsxd rcx,DWORD PTR [rsi+0x8]
   14004c62d:	lea    rax,[rax+r12*8]
   14004c631:	mov    edi,DWORD PTR [rcx+rax*1]
   14004c634:	mov    DWORD PTR [rsp+0x20],edi
   14004c638:	call   0x140045cd0
   14004c63d:	movsxd rcx,DWORD PTR [rsi+0x8]
   14004c641:	lea    rax,[rax+r12*8]
   14004c645:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14004c64a:	je     0x14004c6ca
   14004c64c:	call   0x140045cd0
   14004c651:	movsxd rcx,DWORD PTR [rsi+0x8]
   14004c655:	lea    rax,[rax+r12*8]
   14004c659:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14004c65e:	call   0x140045cd0
   14004c663:	lea    rcx,[rax+rbx*1]
   14004c667:	test   rcx,rcx
   14004c66a:	je     0x14004c6ca
   14004c66c:	mov    r9d,edi
   14004c66f:	mov    r8,rsi
   14004c672:	mov    rdx,QWORD PTR [rsp+0x78]
   14004c677:	mov    rcx,r14
   14004c67a:	call   0x14004c490
   14004c67f:	call   0x140045cd0
   14004c684:	movsxd rcx,DWORD PTR [rsi+0x8]
   14004c688:	lea    rax,[rax+r12*8]
   14004c68c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14004c691:	je     0x14004c6af
   14004c693:	call   0x140045cd0
   14004c698:	movsxd rcx,DWORD PTR [rsi+0x8]
   14004c69c:	lea    rax,[rax+r12*8]
   14004c6a0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14004c6a5:	call   0x140045cd0
   14004c6aa:	add    rax,rbx
   14004c6ad:	jmp    0x14004c6b1
   14004c6af:	xor    eax,eax
   14004c6b1:	mov    r8d,0x103
   14004c6b7:	mov    rdx,r14
   14004c6ba:	mov    rcx,rax
   14004c6bd:	call   0x140063560
   14004c6c2:	mov    rcx,r15
   14004c6c5:	call   0x140045d10
   14004c6ca:	jmp    0x14004c6ea
   14004c6cc:	mov    r13d,DWORD PTR [rsp+0x88]
   14004c6d4:	mov    rsi,QWORD PTR [rsp+0x80]
   14004c6dc:	mov    r14,QWORD PTR [rsp+0x70]
   14004c6e1:	mov    r15,QWORD PTR [rsp+0x28]
   14004c6e6:	mov    edi,DWORD PTR [rsp+0x20]
   14004c6ea:	mov    DWORD PTR [rsp+0x24],edi
   14004c6ee:	mov    rbx,QWORD PTR [rsp+0x78]
   14004c6f3:	jmp    0x14004c600
   14004c6f8:	call   0x14004bd60
   14004c6fd:	cmp    DWORD PTR [rax+0x100],0x0
   14004c704:	jle    0x14004c712
   14004c706:	call   0x14004bd60
   14004c70b:	add    DWORD PTR [rax+0x100],0xffffffff
   14004c712:	cmp    edi,0xffffffff
   14004c715:	je     0x14004c721
   14004c717:	cmp    edi,r13d
   14004c71a:	jle    0x14004c721
   14004c71c:	call   0x14004c280
   14004c721:	mov    r9d,edi
   14004c724:	mov    r8,rsi
   14004c727:	mov    rdx,rbx
   14004c72a:	mov    rcx,r14
   14004c72d:	call   0x14004c490
   14004c732:	add    rsp,0x30
   14004c736:	pop    r15
   14004c738:	pop    r14
   14004c73a:	pop    r13
   14004c73c:	pop    r12
   14004c73e:	pop    rdi
   14004c73f:	pop    rsi
   14004c740:	pop    rbx
   14004c741:	ret    
   14004c742:	int3   
   14004c743:	int3   
   14004c744:	int3   
   14004c745:	int3   
   14004c746:	int3   
   14004c747:	int3   
   14004c748:	int3   
   14004c749:	int3   
   14004c74a:	int3   
   14004c74b:	int3   
   14004c74c:	int3   
   14004c74d:	int3   
   14004c74e:	int3   
   14004c74f:	int3   
   14004c750:	rex push rbp
   14004c752:	sub    rsp,0x20
   14004c756:	mov    rbp,rdx
   14004c759:	call   0x14004c560
   14004c75e:	add    rsp,0x20
   14004c762:	pop    rbp
   14004c763:	ret    
   14004c764:	int3   
   14004c765:	int3   
   14004c766:	int3   
   14004c767:	int3   
   14004c768:	int3   
   14004c769:	int3   
   14004c76a:	int3   
   14004c76b:	int3   
   14004c76c:	int3   
   14004c76d:	int3   
   14004c76e:	int3   
   14004c76f:	int3   
   14004c770:	rex push rbp
   14004c772:	sub    rsp,0x20
   14004c776:	mov    rbp,rdx
   14004c779:	call   0x14004bd60
   14004c77e:	cmp    DWORD PTR [rax+0x100],0x0
   14004c785:	jle    0x14004c793
   14004c787:	call   0x14004bd60
   14004c78c:	add    DWORD PTR [rax+0x100],0xffffffff
   14004c793:	add    rsp,0x20
   14004c797:	pop    rbp
   14004c798:	ret    
   14004c799:	int3   
   14004c79a:	int3   
   14004c79b:	int3   
   14004c79c:	int3   
   14004c79d:	int3   
   14004c79e:	int3   
   14004c79f:	int3   
   14004c7a0:	rex push rbx
   14004c7a2:	sub    rsp,0x20
   14004c7a6:	mov    r9,QWORD PTR [rcx]
   14004c7a9:	mov    DWORD PTR [r8],0x0
   14004c7b0:	mov    rbx,r8
   14004c7b3:	cmp    DWORD PTR [r9],0xe06d7363
   14004c7ba:	jne    0x14004c844
   14004c7c0:	cmp    DWORD PTR [r9+0x18],0x4
   14004c7c5:	jne    0x14004c7f1
   14004c7c7:	mov    eax,DWORD PTR [r9+0x20]
   14004c7cb:	cmp    eax,0x19930520
   14004c7d0:	je     0x14004c7e0
   14004c7d2:	cmp    eax,0x19930521
   14004c7d7:	je     0x14004c7e0
   14004c7d9:	cmp    eax,0x19930522
   14004c7de:	jne    0x14004c7f1
   14004c7e0:	mov    rax,QWORD PTR [rdx+0x28]
   14004c7e4:	cmp    QWORD PTR [r9+0x28],rax
   14004c7e8:	jne    0x14004c7f1
   14004c7ea:	mov    DWORD PTR [r8],0x1
   14004c7f1:	cmp    DWORD PTR [r9],0xe06d7363
   14004c7f8:	jne    0x14004c844
   14004c7fa:	cmp    DWORD PTR [r9+0x18],0x4
   14004c7ff:	jne    0x14004c844
   14004c801:	mov    ecx,DWORD PTR [r9+0x20]
   14004c805:	cmp    ecx,0x19930520
   14004c80b:	je     0x14004c81d
   14004c80d:	cmp    ecx,0x19930521
   14004c813:	je     0x14004c81d
   14004c815:	cmp    ecx,0x19930522
   14004c81b:	jne    0x14004c844
   14004c81d:	cmp    QWORD PTR [r9+0x30],0x0
   14004c822:	jne    0x14004c844
   14004c824:	call   0x14004bd60
   14004c829:	mov    DWORD PTR [rax+0x2d0],0x1
   14004c833:	mov    DWORD PTR [rbx],0x1
   14004c839:	mov    eax,0x1
   14004c83e:	add    rsp,0x20
   14004c842:	pop    rbx
   14004c843:	ret    
   14004c844:	xor    eax,eax
   14004c846:	add    rsp,0x20
   14004c84a:	pop    rbx
   14004c84b:	ret    
   14004c84c:	int3   
   14004c84d:	int3   
   14004c84e:	int3   
   14004c84f:	int3   
   14004c850:	test   rcx,rcx
   14004c853:	je     0x14004c892
   14004c855:	mov    BYTE PTR [rsp+0x10],dl
   14004c859:	sub    rsp,0x28
   14004c85d:	cmp    DWORD PTR [rcx],0xe06d7363
   14004c863:	jne    0x14004c88e
   14004c865:	mov    rax,QWORD PTR [rcx+0x30]
   14004c869:	test   rax,rax
   14004c86c:	je     0x14004c88e
   14004c86e:	movsxd rdx,DWORD PTR [rax+0x4]
   14004c872:	test   edx,edx
   14004c874:	je     0x14004c88e
   14004c876:	mov    rax,rdx
   14004c879:	mov    rdx,QWORD PTR [rcx+0x38]
   14004c87d:	add    rdx,rax
   14004c880:	mov    rcx,QWORD PTR [rcx+0x28]
   14004c884:	call   rdx
   14004c886:	jmp    0x14004c88e
   14004c888:	call   0x14004c250
   14004c88d:	nop
   14004c88e:	add    rsp,0x28
   14004c892:	ret    0x0
   14004c895:	int3   
   14004c896:	int3   
   14004c897:	int3   
   14004c898:	int3   
   14004c899:	int3   
   14004c89a:	int3   
   14004c89b:	int3   
   14004c89c:	int3   
   14004c89d:	int3   
   14004c89e:	int3   
   14004c89f:	int3   
   14004c8a0:	rex push rbp
   14004c8a2:	sub    rsp,0x20
   14004c8a6:	mov    rbp,rdx
   14004c8a9:	xor    eax,eax
   14004c8ab:	cmp    BYTE PTR [rbp+0x38],al
   14004c8ae:	setne  al
   14004c8b1:	add    rsp,0x20
   14004c8b5:	pop    rbp
   14004c8b6:	ret    
   14004c8b7:	int3   
   14004c8b8:	int3   
   14004c8b9:	int3   
   14004c8ba:	int3   
   14004c8bb:	int3   
   14004c8bc:	int3   
   14004c8bd:	int3   
   14004c8be:	int3   
   14004c8bf:	int3   
   14004c8c0:	movsxd rax,DWORD PTR [rdx]
   14004c8c3:	add    rax,rcx
   14004c8c6:	cmp    DWORD PTR [rdx+0x4],0x0
   14004c8ca:	jl     0x14004c8e2
   14004c8cc:	movsxd r9,DWORD PTR [rdx+0x4]
   14004c8d0:	movsxd rdx,DWORD PTR [rdx+0x8]
   14004c8d4:	mov    rcx,QWORD PTR [r9+rcx*1]
   14004c8d8:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14004c8dc:	add    r8,r9
   14004c8df:	add    rax,r8
   14004c8e2:	ret    0x0
   14004c8e5:	int3   
   14004c8e6:	int3   
   14004c8e7:	int3   
   14004c8e8:	int3   
   14004c8e9:	int3   
   14004c8ea:	int3   
   14004c8eb:	int3   
   14004c8ec:	int3   
   14004c8ed:	int3   
   14004c8ee:	int3   
   14004c8ef:	int3   
   14004c8f0:	mov    QWORD PTR [rsp+0x10],rdx
   14004c8f5:	mov    QWORD PTR [rsp+0x8],rcx
   14004c8fa:	push   rbx
   14004c8fb:	push   rdi
   14004c8fc:	sub    rsp,0x48
   14004c900:	test   rdx,rdx
   14004c903:	mov    rbx,rdx
   14004c906:	mov    rdi,rcx
   14004c909:	jne    0x14004c916
   14004c90b:	call   0x14004c280
   14004c910:	call   0x14004c250
   14004c915:	int3   
   14004c916:	mov    QWORD PTR [rsp+0x78],rbp
   14004c91b:	xor    bpl,bpl
   14004c91e:	mov    QWORD PTR [rsp+0x28],r14
   14004c923:	xor    r14d,r14d
   14004c926:	mov    BYTE PTR [rsp+0x70],bpl
   14004c92b:	cmp    DWORD PTR [rdx],r14d
   14004c92e:	jle    0x14004cb20
   14004c934:	mov    QWORD PTR [rsp+0x40],rsi
   14004c939:	mov    QWORD PTR [rsp+0x38],r12
   14004c93e:	mov    QWORD PTR [rsp+0x30],r13
   14004c943:	mov    QWORD PTR [rsp+0x20],r15
   14004c948:	xor    r15d,r15d
   14004c94b:	xchg   ax,ax
   14004c94d:	data16 xchg ax,ax
   14004c950:	call   0x140045cf0
   14004c955:	mov    r11,rax
   14004c958:	mov    rax,QWORD PTR [rdi+0x30]
   14004c95c:	movsxd rcx,DWORD PTR [rax+0xc]
   14004c960:	lea    r12,[r11+rcx*1+0x4]
   14004c965:	call   0x140045cf0
   14004c96a:	mov    r11,rax
   14004c96d:	mov    rax,QWORD PTR [rdi+0x30]
   14004c971:	movsxd rcx,DWORD PTR [rax+0xc]
   14004c975:	mov    esi,DWORD PTR [r11+rcx*1]
   14004c979:	test   esi,esi
   14004c97b:	jle    0x14004cafb
   14004c981:	call   0x140045cf0
   14004c986:	mov    r13,QWORD PTR [rdi+0x30]
   14004c98a:	mov    rbp,rax
   14004c98d:	movsxd rax,DWORD PTR [r12]
   14004c991:	add    rbp,rax
   14004c994:	call   0x140045cd0
   14004c999:	movsxd rdi,DWORD PTR [rbx+0x4]
   14004c99d:	add    rax,r15
   14004c9a0:	add    rdi,rax
   14004c9a3:	cmp    DWORD PTR [rdi+0x4],0x0
   14004c9a7:	je     0x14004cadd
   14004c9ad:	movsxd rbx,DWORD PTR [rdi+0x4]
   14004c9b1:	call   0x140045cd0
   14004c9b6:	mov    r11,rax
   14004c9b9:	add    r11,rbx
   14004c9bc:	je     0x14004cab0
   14004c9c2:	test   ebx,ebx
   14004c9c4:	je     0x14004c9d5
   14004c9c6:	movsxd rbx,DWORD PTR [rdi+0x4]
   14004c9ca:	call   0x140045cd0
   14004c9cf:	lea    r11,[rbx+rax*1]
   14004c9d3:	jmp    0x14004c9d8
   14004c9d5:	xor    r11d,r11d
   14004c9d8:	cmp    BYTE PTR [r11+0x10],0x0
   14004c9dd:	je     0x14004ca9c
   14004c9e3:	test   ebx,ebx
   14004c9e5:	je     0x14004c9f8
   14004c9e7:	call   0x140045cd0
   14004c9ec:	mov    rbx,rax
   14004c9ef:	movsxd rax,DWORD PTR [rdi+0x4]
   14004c9f3:	add    rbx,rax
   14004c9f6:	jmp    0x14004c9fa
   14004c9f8:	xor    ebx,ebx
   14004c9fa:	call   0x140045cf0
   14004c9ff:	mov    r11,rax
   14004ca02:	movsxd rax,DWORD PTR [rbp+0x4]
   14004ca06:	add    r11,rax
   14004ca09:	cmp    rbx,r11
   14004ca0c:	je     0x14004ca58
   14004ca0e:	cmp    DWORD PTR [rdi+0x4],0x0
   14004ca12:	je     0x14004ca25
   14004ca14:	call   0x140045cd0
   14004ca19:	mov    rbx,rax
   14004ca1c:	movsxd rax,DWORD PTR [rdi+0x4]
   14004ca20:	add    rbx,rax
   14004ca23:	jmp    0x14004ca27
   14004ca25:	xor    ebx,ebx
   14004ca27:	call   0x140045cf0
   14004ca2c:	mov    r11,rax
   14004ca2f:	movsxd rax,DWORD PTR [rbp+0x4]
   14004ca33:	lea    r8,[r11+rax*1+0x10]
   14004ca38:	lea    rax,[rbx+0x10]
   14004ca3c:	sub    r8,rax
   14004ca3f:	nop
   14004ca40:	movzx  edx,BYTE PTR [rax]
   14004ca43:	movzx  ecx,BYTE PTR [rax+r8*1]
   14004ca48:	sub    edx,ecx
   14004ca4a:	jne    0x14004ca54
   14004ca4c:	add    rax,0x1
   14004ca50:	test   ecx,ecx
   14004ca52:	jne    0x14004ca40
   14004ca54:	test   edx,edx
   14004ca56:	jne    0x14004ca82
   14004ca58:	test   BYTE PTR [rbp+0x0],0x2
   14004ca5c:	je     0x14004ca63
   14004ca5e:	test   BYTE PTR [rdi],0x8
   14004ca61:	je     0x14004ca82
   14004ca63:	mov    eax,DWORD PTR [r13+0x0]
   14004ca67:	test   al,0x1
   14004ca69:	je     0x14004ca70
   14004ca6b:	test   BYTE PTR [rdi],0x1
   14004ca6e:	je     0x14004ca82
   14004ca70:	test   al,0x4
   14004ca72:	je     0x14004ca79
   14004ca74:	test   BYTE PTR [rdi],0x4
   14004ca77:	je     0x14004ca82
   14004ca79:	test   al,0x2
   14004ca7b:	je     0x14004cad8
   14004ca7d:	test   BYTE PTR [rdi],0x2
   14004ca80:	jne    0x14004cac4
   14004ca82:	sub    esi,0x1
   14004ca85:	add    r12,0x4
   14004ca89:	test   esi,esi
   14004ca8b:	jle    0x14004caec
   14004ca8d:	mov    rbx,QWORD PTR [rsp+0x68]
   14004ca92:	mov    rdi,QWORD PTR [rsp+0x60]
   14004ca97:	jmp    0x14004c981
   14004ca9c:	mov    rbx,QWORD PTR [rsp+0x68]
   14004caa1:	mov    rdi,QWORD PTR [rsp+0x60]
   14004caa6:	mov    bpl,0x1
   14004caa9:	mov    BYTE PTR [rsp+0x70],bpl
   14004caae:	jmp    0x14004cafb
   14004cab0:	mov    rbx,QWORD PTR [rsp+0x68]
   14004cab5:	mov    rdi,QWORD PTR [rsp+0x60]
   14004caba:	mov    bpl,0x1
   14004cabd:	mov    BYTE PTR [rsp+0x70],bpl
   14004cac2:	jmp    0x14004cafb
   14004cac4:	mov    rbx,QWORD PTR [rsp+0x68]
   14004cac9:	mov    rdi,QWORD PTR [rsp+0x60]
   14004cace:	mov    bpl,0x1
   14004cad1:	mov    BYTE PTR [rsp+0x70],bpl
   14004cad6:	jmp    0x14004cafb
   14004cad8:	mov    rbx,QWORD PTR [rsp+0x68]
   14004cadd:	mov    rdi,QWORD PTR [rsp+0x60]
   14004cae2:	mov    bpl,0x1
   14004cae5:	mov    BYTE PTR [rsp+0x70],bpl
   14004caea:	jmp    0x14004cafb
   14004caec:	mov    rbx,QWORD PTR [rsp+0x68]
   14004caf1:	mov    rdi,QWORD PTR [rsp+0x60]
   14004caf6:	movzx  ebp,BYTE PTR [rsp+0x70]
   14004cafb:	add    r14d,0x1
   14004caff:	add    r15,0x14
   14004cb03:	cmp    r14d,DWORD PTR [rbx]
   14004cb06:	jl     0x14004c950
   14004cb0c:	mov    r15,QWORD PTR [rsp+0x20]
   14004cb11:	mov    r13,QWORD PTR [rsp+0x30]
   14004cb16:	mov    r12,QWORD PTR [rsp+0x38]
   14004cb1b:	mov    rsi,QWORD PTR [rsp+0x40]
   14004cb20:	mov    r14,QWORD PTR [rsp+0x28]
   14004cb25:	mov    al,bpl
   14004cb28:	mov    rbp,QWORD PTR [rsp+0x78]
   14004cb2d:	add    rsp,0x48
   14004cb31:	pop    rdi
   14004cb32:	pop    rbx
   14004cb33:	ret    
   14004cb34:	int3   
   14004cb35:	int3   
   14004cb36:	int3   
   14004cb37:	int3   
   14004cb38:	int3   
   14004cb39:	int3   
   14004cb3a:	int3   
   14004cb3b:	int3   
   14004cb3c:	int3   
   14004cb3d:	int3   
   14004cb3e:	int3   
   14004cb3f:	int3   
   14004cb40:	mov    QWORD PTR [rsp+0x8],rbx
   14004cb45:	mov    QWORD PTR [rsp+0x10],rbp
   14004cb4a:	mov    QWORD PTR [rsp+0x18],rsi
   14004cb4f:	push   rdi
   14004cb50:	sub    rsp,0x20
   14004cb54:	xor    edi,edi
   14004cb56:	mov    rbp,rcx
   14004cb59:	cmp    DWORD PTR [rcx],edi
   14004cb5b:	jle    0x14004cbaf
   14004cb5d:	xor    esi,esi
   14004cb5f:	nop
   14004cb60:	call   0x140045cd0
   14004cb65:	movsxd rcx,DWORD PTR [rbp+0x4]
   14004cb69:	add    rax,rsi
   14004cb6c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14004cb71:	je     0x14004cb8e
   14004cb73:	call   0x140045cd0
   14004cb78:	movsxd rcx,DWORD PTR [rbp+0x4]
   14004cb7c:	add    rax,rsi
   14004cb7f:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14004cb84:	call   0x140045cd0
   14004cb89:	add    rax,rbx
   14004cb8c:	jmp    0x14004cb90
   14004cb8e:	xor    eax,eax
   14004cb90:	lea    rdx,[rip+0x3a609]        # 0x1400871a0
   14004cb97:	mov    rcx,rax
   14004cb9a:	call   0x140045a60
   14004cb9f:	test   al,al
   14004cba1:	jne    0x14004cbc6
   14004cba3:	add    edi,0x1
   14004cba6:	add    rsi,0x14
   14004cbaa:	cmp    edi,DWORD PTR [rbp+0x0]
   14004cbad:	jl     0x14004cb60
   14004cbaf:	xor    al,al
   14004cbb1:	mov    rbx,QWORD PTR [rsp+0x30]
   14004cbb6:	mov    rbp,QWORD PTR [rsp+0x38]
   14004cbbb:	mov    rsi,QWORD PTR [rsp+0x40]
   14004cbc0:	add    rsp,0x20
   14004cbc4:	pop    rdi
   14004cbc5:	ret    
   14004cbc6:	mov    al,0x1
   14004cbc8:	jmp    0x14004cbb1
   14004cbca:	int3   
   14004cbcb:	int3   
   14004cbcc:	int3   
   14004cbcd:	int3   
   14004cbce:	int3   
   14004cbcf:	int3   
   14004cbd0:	rex push rbx
   14004cbd2:	push   rsi
   14004cbd3:	push   rdi
   14004cbd4:	push   r12
   14004cbd6:	push   r13
   14004cbd8:	push   r14
   14004cbda:	push   r15
   14004cbdc:	sub    rsp,0x70
   14004cbe0:	mov    rdi,rcx
   14004cbe3:	xor    r12d,r12d
   14004cbe6:	mov    DWORD PTR [rsp+0x20],r12d
   14004cbeb:	mov    DWORD PTR [rsp+0xb0],r12d
   14004cbf3:	mov    QWORD PTR [rsp+0x40],r12
   14004cbf8:	mov    QWORD PTR [rsp+0xc8],r12
   14004cc00:	call   0x14004bd60
   14004cc05:	mov    r15,QWORD PTR [rax+0xf8]
   14004cc0c:	mov    QWORD PTR [rsp+0x28],r15
   14004cc11:	call   0x14004bd60
   14004cc16:	mov    rax,QWORD PTR [rax+0xf0]
   14004cc1d:	mov    QWORD PTR [rsp+0xc0],rax
   14004cc25:	mov    rsi,QWORD PTR [rdi+0x50]
   14004cc29:	mov    QWORD PTR [rsp+0xb8],rsi
   14004cc31:	mov    rax,QWORD PTR [rdi+0x48]
   14004cc35:	mov    QWORD PTR [rsp+0x38],rax
   14004cc3a:	mov    rbx,QWORD PTR [rdi+0x40]
   14004cc3e:	mov    rax,QWORD PTR [rdi+0x30]
   14004cc42:	mov    QWORD PTR [rsp+0x48],rax
   14004cc47:	mov    r13,QWORD PTR [rdi+0x28]
   14004cc4b:	mov    QWORD PTR [rsp+0x50],r13
   14004cc50:	call   0x14004bd60
   14004cc55:	mov    QWORD PTR [rax+0xf0],rsi
   14004cc5c:	call   0x14004bd60
   14004cc61:	mov    QWORD PTR [rax+0xf8],rbx
   14004cc68:	call   0x14004bd60
   14004cc6d:	mov    rdx,QWORD PTR [rax+0xf0]
   14004cc74:	mov    rdx,QWORD PTR [rdx+0x28]
   14004cc78:	lea    rcx,[rsp+0x60]
   14004cc7d:	call   0x1400461d0
   14004cc82:	mov    r14,rax
   14004cc85:	mov    QWORD PTR [rsp+0x30],rax
   14004cc8a:	cmp    QWORD PTR [rdi+0x58],r12
   14004cc8e:	je     0x14004ccbb
   14004cc90:	mov    DWORD PTR [rsp+0xb0],0x1
   14004cc9b:	call   0x14004bd60
   14004cca0:	mov    rbx,QWORD PTR [rax+0x138]
   14004cca7:	mov    QWORD PTR [rsp+0xc8],rbx
   14004ccaf:	call   0x14004bd60
   14004ccb4:	mov    QWORD PTR [rax+0xf0],rbx
   14004ccbb:	mov    r8d,0x100
   14004ccc1:	mov    rdx,r13
   14004ccc4:	mov    rcx,QWORD PTR [rsp+0x48]
   14004ccc9:	call   0x140063560
   14004ccce:	mov    rbx,rax
   14004ccd1:	mov    QWORD PTR [rsp+0x40],rax
   14004ccd6:	mov    rdi,QWORD PTR [rsp+0xc0]
   14004ccde:	jmp    0x14004cd71
   14004cce3:	mov    DWORD PTR [rsp+0x20],0x1
   14004cceb:	call   0x14004bd60
   14004ccf0:	xor    r12d,r12d
   14004ccf3:	mov    DWORD PTR [rax+0x2d0],r12d
   14004ccfa:	cmp    DWORD PTR [rsp+0xb0],r12d
   14004cd02:	je     0x14004cd35
   14004cd04:	mov    dl,0x1
   14004cd06:	mov    rsi,QWORD PTR [rsp+0xb8]
   14004cd0e:	mov    rcx,rsi
   14004cd11:	call   0x14004c850
   14004cd16:	mov    r11,QWORD PTR [rsp+0xc8]
   14004cd1e:	lea    r9,[r11+0x20]
   14004cd22:	mov    r8d,DWORD PTR [r11+0x18]
   14004cd26:	mov    edx,DWORD PTR [r11+0x4]
   14004cd2a:	mov    ecx,DWORD PTR [r11]
   14004cd2d:	call   QWORD PTR [rip+0x1790d]        # 0x140064640
   14004cd33:	jmp    0x14004cd50
   14004cd35:	mov    rsi,QWORD PTR [rsp+0xb8]
   14004cd3d:	lea    r9,[rsi+0x20]
   14004cd41:	mov    r8d,DWORD PTR [rsi+0x18]
   14004cd45:	mov    edx,DWORD PTR [rsi+0x4]
   14004cd48:	mov    ecx,DWORD PTR [rsi]
   14004cd4a:	call   QWORD PTR [rip+0x178f0]        # 0x140064640
   14004cd50:	mov    r12d,DWORD PTR [rsp+0x20]
   14004cd55:	mov    rbx,QWORD PTR [rsp+0x40]
   14004cd5a:	mov    r15,QWORD PTR [rsp+0x28]
   14004cd5f:	mov    rdi,QWORD PTR [rsp+0xc0]
   14004cd67:	mov    r13,QWORD PTR [rsp+0x50]
   14004cd6c:	mov    r14,QWORD PTR [rsp+0x30]
   14004cd71:	mov    rcx,r14
   14004cd74:	call   0x140046270
   14004cd79:	test   r12d,r12d
   14004cd7c:	jne    0x14004cdbb
   14004cd7e:	cmp    DWORD PTR [rsi],0xe06d7363
   14004cd84:	jne    0x14004cdbb
   14004cd86:	cmp    DWORD PTR [rsi+0x18],0x4
   14004cd8a:	jne    0x14004cdbb
   14004cd8c:	mov    eax,DWORD PTR [rsi+0x20]
   14004cd8f:	cmp    eax,0x19930520
   14004cd94:	je     0x14004cda4
   14004cd96:	cmp    eax,0x19930521
   14004cd9b:	je     0x14004cda4
   14004cd9d:	cmp    eax,0x19930522
   14004cda2:	jne    0x14004cdbb
   14004cda4:	mov    rcx,QWORD PTR [rsi+0x28]
   14004cda8:	call   0x140046220
   14004cdad:	test   eax,eax
   14004cdaf:	je     0x14004cdbb
   14004cdb1:	mov    dl,0x1
   14004cdb3:	mov    rcx,rsi
   14004cdb6:	call   0x14004c850
   14004cdbb:	call   0x14004bd60
   14004cdc0:	mov    QWORD PTR [rax+0xf0],rdi
   14004cdc7:	call   0x14004bd60
   14004cdcc:	mov    QWORD PTR [rax+0xf8],r15
   14004cdd3:	mov    rax,QWORD PTR [rsp+0x38]
   14004cdd8:	movsxd rcx,DWORD PTR [rax+0x1c]
   14004cddc:	mov    rax,QWORD PTR [r13+0x0]
   14004cde0:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14004cde8:	mov    rax,rbx
   14004cdeb:	add    rsp,0x70
   14004cdef:	pop    r15
   14004cdf1:	pop    r14
   14004cdf3:	pop    r13
   14004cdf5:	pop    r12
   14004cdf7:	pop    rdi
   14004cdf8:	pop    rsi
   14004cdf9:	pop    rbx
   14004cdfa:	ret    
   14004cdfb:	int3   
   14004cdfc:	int3   
   14004cdfd:	int3   
   14004cdfe:	int3   
   14004cdff:	int3   
   14004ce00:	rex push rbp
   14004ce02:	sub    rsp,0x20
   14004ce06:	mov    rbp,rdx
   14004ce09:	mov    QWORD PTR [rbp+0x58],rcx
   14004ce0d:	lea    r8,[rbp+0x20]
   14004ce11:	mov    rdx,QWORD PTR [rbp+0xb8]
   14004ce18:	call   0x14004c7a0
   14004ce1d:	add    rsp,0x20
   14004ce21:	pop    rbp
   14004ce22:	ret    
   14004ce23:	int3   
   14004ce24:	int3   
   14004ce25:	int3   
   14004ce26:	int3   
   14004ce27:	int3   
   14004ce28:	int3   
   14004ce29:	int3   
   14004ce2a:	int3   
   14004ce2b:	int3   
   14004ce2c:	int3   
   14004ce2d:	int3   
   14004ce2e:	int3   
   14004ce2f:	int3   
   14004ce30:	rex push rbx
   14004ce32:	push   rbp
   14004ce33:	sub    rsp,0x28
   14004ce37:	mov    rbp,rdx
   14004ce3a:	mov    rcx,QWORD PTR [rbp+0x30]
   14004ce3e:	call   0x140046270
   14004ce43:	cmp    DWORD PTR [rbp+0x20],0x0
   14004ce47:	jne    0x14004ce8d
   14004ce49:	mov    rbx,QWORD PTR [rbp+0xb8]
   14004ce50:	cmp    DWORD PTR [rbx],0xe06d7363
   14004ce56:	jne    0x14004ce8d
   14004ce58:	cmp    DWORD PTR [rbx+0x18],0x4
   14004ce5c:	jne    0x14004ce8d
   14004ce5e:	mov    eax,DWORD PTR [rbx+0x20]
   14004ce61:	cmp    eax,0x19930520
   14004ce66:	je     0x14004ce76
   14004ce68:	cmp    eax,0x19930521
   14004ce6d:	je     0x14004ce76
   14004ce6f:	cmp    eax,0x19930522
   14004ce74:	jne    0x14004ce8d
   14004ce76:	mov    rcx,QWORD PTR [rbx+0x28]
   14004ce7a:	call   0x140046220
   14004ce7f:	test   eax,eax
   14004ce81:	je     0x14004ce8d
   14004ce83:	mov    dl,0x1
   14004ce85:	mov    rcx,rbx
   14004ce88:	call   0x14004c850
   14004ce8d:	call   0x14004bd60
   14004ce92:	mov    rcx,QWORD PTR [rbp+0xc0]
   14004ce99:	mov    QWORD PTR [rax+0xf0],rcx
   14004cea0:	call   0x14004bd60
   14004cea5:	mov    rcx,QWORD PTR [rbp+0x28]
   14004cea9:	mov    QWORD PTR [rax+0xf8],rcx
   14004ceb0:	add    rsp,0x28
   14004ceb4:	pop    rbp
   14004ceb5:	pop    rbx
   14004ceb6:	ret    
   14004ceb7:	int3   
   14004ceb8:	int3   
   14004ceb9:	int3   
   14004ceba:	int3   
   14004cebb:	int3   
   14004cebc:	int3   
   14004cebd:	int3   
   14004cebe:	int3   
   14004cebf:	int3   
   14004cec0:	mov    QWORD PTR [rsp+0x8],rbx
   14004cec5:	mov    QWORD PTR [rsp+0x10],rsi
   14004ceca:	mov    QWORD PTR [rsp+0x18],rdi
   14004cecf:	push   r12
   14004ced1:	push   r13
   14004ced3:	push   r14
   14004ced5:	sub    rsp,0x30
   14004ced9:	mov    rdi,r9
   14004cedc:	mov    r12,r8
   14004cedf:	mov    rsi,rdx
   14004cee2:	mov    r14,rcx
   14004cee5:	xor    ebx,ebx
   14004cee7:	cmp    DWORD PTR [r8+0x4],ebx
   14004ceeb:	je     0x14004d0cb
   14004cef1:	movsxd r13,DWORD PTR [r8+0x4]
   14004cef5:	call   0x140045cd0
   14004cefa:	lea    rdx,[r13+rax*1+0x0]
   14004ceff:	test   rdx,rdx
   14004cf02:	je     0x14004d0cb
   14004cf08:	test   r13d,r13d
   14004cf0b:	je     0x14004cf1f
   14004cf0d:	call   0x140045cd0
   14004cf12:	mov    r11,rax
   14004cf15:	movsxd rax,DWORD PTR [r12+0x4]
   14004cf1a:	add    r11,rax
   14004cf1d:	jmp    0x14004cf22
   14004cf1f:	mov    r11,rbx
   14004cf22:	cmp    BYTE PTR [r11+0x10],bl
   14004cf26:	je     0x14004d0cb
   14004cf2c:	movsxd rax,DWORD PTR [r12+0x8]
   14004cf31:	test   eax,eax
   14004cf33:	jne    0x14004cf41
   14004cf35:	bt     DWORD PTR [r12],0x1f
   14004cf3b:	jae    0x14004d0cb
   14004cf41:	mov    ecx,DWORD PTR [r12]
   14004cf45:	bt     ecx,0x1f
   14004cf49:	jb     0x14004cf51
   14004cf4b:	add    rax,QWORD PTR [rsi]
   14004cf4e:	mov    rsi,rax
   14004cf51:	test   cl,0x8
   14004cf54:	je     0x14004cf9b
   14004cf56:	mov    edx,0x1
   14004cf5b:	mov    rcx,QWORD PTR [r14+0x28]
   14004cf5f:	call   0x140057ca0
   14004cf64:	test   eax,eax
   14004cf66:	je     0x14004cf91
   14004cf68:	mov    edx,0x1
   14004cf6d:	mov    rcx,rsi
   14004cf70:	call   0x140057ca0
   14004cf75:	test   eax,eax
   14004cf77:	je     0x14004cf91
   14004cf79:	mov    rcx,QWORD PTR [r14+0x28]
   14004cf7d:	mov    QWORD PTR [rsi],rcx
   14004cf80:	lea    rdx,[rdi+0x8]
   14004cf84:	call   0x14004c8c0
   14004cf89:	mov    QWORD PTR [rsi],rax
   14004cf8c:	jmp    0x14004d0c1
   14004cf91:	call   0x14004c280
   14004cf96:	jmp    0x14004d0c1
   14004cf9b:	test   BYTE PTR [rdi],0x1
   14004cf9e:	je     0x14004d004
   14004cfa0:	mov    edx,0x1
   14004cfa5:	mov    rcx,QWORD PTR [r14+0x28]
   14004cfa9:	call   0x140057ca0
   14004cfae:	test   eax,eax
   14004cfb0:	je     0x14004cffa
   14004cfb2:	mov    edx,0x1
   14004cfb7:	mov    rcx,rsi
   14004cfba:	call   0x140057ca0
   14004cfbf:	test   eax,eax
   14004cfc1:	je     0x14004cffa
   14004cfc3:	movsxd r8,DWORD PTR [rdi+0x14]
   14004cfc7:	mov    rdx,QWORD PTR [r14+0x28]
   14004cfcb:	mov    rcx,rsi
   14004cfce:	call   0x1400478c0
   14004cfd3:	cmp    DWORD PTR [rdi+0x14],0x8
   14004cfd7:	jne    0x14004d0c1
   14004cfdd:	mov    rcx,QWORD PTR [rsi]
   14004cfe0:	test   rcx,rcx
   14004cfe3:	je     0x14004d0c1
   14004cfe9:	lea    rdx,[rdi+0x8]
   14004cfed:	call   0x14004c8c0
   14004cff2:	mov    QWORD PTR [rsi],rax
   14004cff5:	jmp    0x14004d0c1
   14004cffa:	call   0x14004c280
   14004cfff:	jmp    0x14004d0c1
   14004d004:	cmp    DWORD PTR [rdi+0x18],0x0
   14004d008:	je     0x14004d077
   14004d00a:	call   0x140045cf0
   14004d00f:	mov    rdx,rax
   14004d012:	movsxd rax,DWORD PTR [rdi+0x18]
   14004d016:	add    rdx,rax
   14004d019:	je     0x14004d077
   14004d01b:	mov    edx,0x1
   14004d020:	mov    rcx,QWORD PTR [r14+0x28]
   14004d024:	call   0x140057ca0
   14004d029:	test   eax,eax
   14004d02b:	je     0x14004d070
   14004d02d:	mov    edx,0x1
   14004d032:	mov    rcx,rsi
   14004d035:	call   0x140057ca0
   14004d03a:	test   eax,eax
   14004d03c:	je     0x14004d070
   14004d03e:	cmp    DWORD PTR [rdi+0x18],0x0
   14004d042:	je     0x14004d055
   14004d044:	call   0x140045cf0
   14004d049:	mov    rcx,rax
   14004d04c:	movsxd rax,DWORD PTR [rdi+0x18]
   14004d050:	add    rcx,rax
   14004d053:	jmp    0x14004d058
   14004d055:	mov    rcx,rbx
   14004d058:	call   0x140057ca0
   14004d05d:	test   eax,eax
   14004d05f:	je     0x14004d070
   14004d061:	test   BYTE PTR [rdi],0x4
   14004d064:	setne  bl
   14004d067:	add    ebx,0x1
   14004d06a:	mov    DWORD PTR [rsp+0x20],ebx
   14004d06e:	jmp    0x14004d0c1
   14004d070:	call   0x14004c280
   14004d075:	jmp    0x14004d0c1
   14004d077:	mov    edx,0x1
   14004d07c:	mov    rcx,QWORD PTR [r14+0x28]
   14004d080:	call   0x140057ca0
   14004d085:	test   eax,eax
   14004d087:	je     0x14004d0bb
   14004d089:	mov    edx,0x1
   14004d08e:	mov    rcx,rsi
   14004d091:	call   0x140057ca0
   14004d096:	test   eax,eax
   14004d098:	je     0x14004d0bb
   14004d09a:	movsxd r10,DWORD PTR [rdi+0x14]
   14004d09e:	lea    rdx,[rdi+0x8]
   14004d0a2:	mov    rcx,QWORD PTR [r14+0x28]
   14004d0a6:	call   0x14004c8c0
   14004d0ab:	mov    rdx,rax
   14004d0ae:	mov    r8,r10
   14004d0b1:	mov    rcx,rsi
   14004d0b4:	call   0x1400478c0
   14004d0b9:	jmp    0x14004d0c1
   14004d0bb:	call   0x14004c280
   14004d0c0:	nop
   14004d0c1:	mov    eax,ebx
   14004d0c3:	jmp    0x14004d0cd
   14004d0c5:	call   0x14004c250
   14004d0ca:	nop
   14004d0cb:	xor    eax,eax
   14004d0cd:	mov    rbx,QWORD PTR [rsp+0x50]
   14004d0d2:	mov    rsi,QWORD PTR [rsp+0x58]
   14004d0d7:	mov    rdi,QWORD PTR [rsp+0x60]
   14004d0dc:	add    rsp,0x30
   14004d0e0:	pop    r14
   14004d0e2:	pop    r13
   14004d0e4:	pop    r12
   14004d0e6:	ret    
   14004d0e7:	int3   
   14004d0e8:	int3   
   14004d0e9:	int3   
   14004d0ea:	int3   
   14004d0eb:	int3   
   14004d0ec:	int3   
   14004d0ed:	int3   
   14004d0ee:	int3   
   14004d0ef:	int3   
   14004d0f0:	mov    QWORD PTR [rsp+0x8],rbx
   14004d0f5:	mov    QWORD PTR [rsp+0x10],rsi
   14004d0fa:	push   rdi
   14004d0fb:	sub    rsp,0x20
   14004d0ff:	mov    rbx,r9
   14004d102:	mov    rsi,rcx
   14004d105:	bt     DWORD PTR [r8],0x1f
   14004d10a:	jae    0x14004d111
   14004d10c:	mov    rdi,rdx
   14004d10f:	jmp    0x14004d118
   14004d111:	movsxd rdi,DWORD PTR [r8+0x8]
   14004d115:	add    rdi,QWORD PTR [rdx]
   14004d118:	call   0x14004cec0
   14004d11d:	sub    eax,0x1
   14004d120:	je     0x14004d15f
   14004d122:	cmp    eax,0x1
   14004d125:	jne    0x14004d18c
   14004d127:	cmp    DWORD PTR [rbx+0x18],0x0
   14004d12b:	je     0x14004d13e
   14004d12d:	call   0x140045cf0
   14004d132:	mov    r11,rax
   14004d135:	movsxd rax,DWORD PTR [rbx+0x18]
   14004d139:	add    r11,rax
   14004d13c:	jmp    0x14004d141
   14004d13e:	xor    r11d,r11d
   14004d141:	lea    rdx,[rbx+0x8]
   14004d145:	mov    rcx,QWORD PTR [rsi+0x28]
   14004d149:	call   0x14004c8c0
   14004d14e:	mov    rdx,rax
   14004d151:	mov    r8d,0x1
   14004d157:	mov    rcx,rdi
   14004d15a:	call   r11
   14004d15d:	jmp    0x14004d18c
   14004d15f:	cmp    DWORD PTR [rbx+0x18],0x0
   14004d163:	je     0x14004d173
   14004d165:	call   0x140045cf0
   14004d16a:	movsxd r11,DWORD PTR [rbx+0x18]
   14004d16e:	add    r11,rax
   14004d171:	jmp    0x14004d176
   14004d173:	xor    r11d,r11d
   14004d176:	lea    rdx,[rbx+0x8]
   14004d17a:	mov    rcx,QWORD PTR [rsi+0x28]
   14004d17e:	call   0x14004c8c0
   14004d183:	mov    rdx,rax
   14004d186:	mov    rcx,rdi
   14004d189:	call   r11
   14004d18c:	jmp    0x14004d194
   14004d18e:	call   0x14004c250
   14004d193:	nop
   14004d194:	mov    rbx,QWORD PTR [rsp+0x30]
   14004d199:	mov    rsi,QWORD PTR [rsp+0x38]
   14004d19e:	add    rsp,0x20
   14004d1a2:	pop    rdi
   14004d1a3:	ret    
   14004d1a4:	int3   
   14004d1a5:	int3   
   14004d1a6:	int3   
   14004d1a7:	int3   
   14004d1a8:	int3   
   14004d1a9:	int3   
   14004d1aa:	int3   
   14004d1ab:	int3   
   14004d1ac:	int3   
   14004d1ad:	int3   
   14004d1ae:	int3   
   14004d1af:	int3   
   14004d1b0:	mov    rax,rsp
   14004d1b3:	mov    QWORD PTR [rax+0x18],r8
   14004d1b7:	push   rsi
   14004d1b8:	push   r12
   14004d1ba:	push   r14
   14004d1bc:	push   r15
   14004d1be:	sub    rsp,0x78
   14004d1c2:	cmp    DWORD PTR [rcx],0x80000003
   14004d1c8:	mov    r14,r9
   14004d1cb:	mov    rsi,r8
   14004d1ce:	mov    r15,rdx
   14004d1d1:	mov    r12,rcx
   14004d1d4:	je     0x14004d41b
   14004d1da:	mov    QWORD PTR [rax+0x10],rbx
   14004d1de:	mov    QWORD PTR [rax-0x30],rdi
   14004d1e2:	mov    QWORD PTR [rax-0x38],r13
   14004d1e6:	call   0x14004bd60
   14004d1eb:	mov    edi,DWORD PTR [rsp+0xd0]
   14004d1f2:	mov    r13,QWORD PTR [rsp+0xc0]
   14004d1fa:	cmp    QWORD PTR [rax+0xe0],0x0
   14004d202:	je     0x14004d253
   14004d204:	call   0x14004bd60
   14004d209:	mov    rbx,rax
   14004d20c:	call   0x14004b980
   14004d211:	cmp    QWORD PTR [rbx+0xe0],rax
   14004d218:	je     0x14004d253
   14004d21a:	cmp    DWORD PTR [r12],0xe0434f4d
   14004d222:	je     0x14004d253
   14004d224:	mov    rax,QWORD PTR [rsp+0xd8]
   14004d22c:	mov    r9,r14
   14004d22f:	mov    r8,rsi
   14004d232:	mov    QWORD PTR [rsp+0x30],rax
   14004d237:	mov    rdx,r15
   14004d23a:	mov    rcx,r12
   14004d23d:	mov    DWORD PTR [rsp+0x28],edi
   14004d241:	mov    QWORD PTR [rsp+0x20],r13
   14004d246:	call   0x140045fe0
   14004d24b:	test   eax,eax
   14004d24d:	jne    0x14004d409
   14004d253:	cmp    DWORD PTR [r13+0xc],0x0
   14004d258:	mov    QWORD PTR [rsp+0x70],rbp
   14004d25d:	jne    0x14004d264
   14004d25f:	call   0x14004c280
   14004d264:	mov    ebp,DWORD PTR [rsp+0xc8]
   14004d26b:	lea    rax,[rsp+0x50]
   14004d270:	mov    QWORD PTR [rsp+0x30],r14
   14004d275:	mov    QWORD PTR [rsp+0x28],rax
   14004d27a:	lea    rax,[rsp+0xa0]
   14004d282:	mov    r8d,edi
   14004d285:	mov    r9d,ebp
   14004d288:	mov    rdx,r13
   14004d28b:	mov    rcx,r15
   14004d28e:	mov    QWORD PTR [rsp+0x20],rax
   14004d293:	call   0x140046090
   14004d298:	mov    rsi,rax
   14004d29b:	mov    eax,DWORD PTR [rsp+0xa0]
   14004d2a2:	cmp    eax,DWORD PTR [rsp+0x50]
   14004d2a6:	jae    0x14004d404
   14004d2ac:	data16 data16 xchg ax,ax
   14004d2b0:	cmp    ebp,DWORD PTR [rsi]
   14004d2b2:	jl     0x14004d3ec
   14004d2b8:	cmp    ebp,DWORD PTR [rsi+0x4]
   14004d2bb:	jg     0x14004d3ec
   14004d2c1:	call   0x140045cd0
   14004d2c6:	movsxd rcx,DWORD PTR [rsi+0xc]
   14004d2ca:	lea    rdx,[rcx+rcx*4]
   14004d2ce:	movsxd rcx,DWORD PTR [rsi+0x10]
   14004d2d2:	lea    rdx,[rcx+rdx*4]
   14004d2d6:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14004d2db:	je     0x14004d351
   14004d2dd:	call   0x140045cd0
   14004d2e2:	movsxd rcx,DWORD PTR [rsi+0xc]
   14004d2e6:	lea    rdx,[rcx+rcx*4]
   14004d2ea:	movsxd rcx,DWORD PTR [rsi+0x10]
   14004d2ee:	lea    rdx,[rcx+rdx*4]
   14004d2f2:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14004d2f7:	call   0x140045cd0
   14004d2fc:	lea    rcx,[rax+rbx*1]
   14004d300:	test   rcx,rcx
   14004d303:	je     0x14004d351
   14004d305:	call   0x140045cd0
   14004d30a:	movsxd rcx,DWORD PTR [rsi+0xc]
   14004d30e:	lea    rdx,[rcx+rcx*4]
   14004d312:	movsxd rcx,DWORD PTR [rsi+0x10]
   14004d316:	lea    rdx,[rcx+rdx*4]
   14004d31a:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14004d31f:	je     0x14004d345
   14004d321:	call   0x140045cd0
   14004d326:	movsxd rcx,DWORD PTR [rsi+0xc]
   14004d32a:	lea    rdx,[rcx+rcx*4]
   14004d32e:	movsxd rcx,DWORD PTR [rsi+0x10]
   14004d332:	lea    rdx,[rcx+rdx*4]
   14004d336:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14004d33b:	call   0x140045cd0
   14004d340:	add    rax,rbx
   14004d343:	jmp    0x14004d347
   14004d345:	xor    eax,eax
   14004d347:	cmp    BYTE PTR [rax+0x10],0x0
   14004d34b:	jne    0x14004d3e5
   14004d351:	call   0x140045cd0
   14004d356:	movsxd rcx,DWORD PTR [rsi+0xc]
   14004d35a:	lea    rdx,[rcx+rcx*4]
   14004d35e:	movsxd rcx,DWORD PTR [rsi+0x10]
   14004d362:	lea    rdx,[rcx+rdx*4]
   14004d366:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14004d36b:	jne    0x14004d3e5
   14004d36d:	call   0x140045cd0
   14004d372:	mov    ecx,DWORD PTR [rsi+0xc]
   14004d375:	lea    r9,[rsp+0x58]
   14004d37a:	sub    ecx,0x1
   14004d37d:	mov    r8,r13
   14004d380:	movsxd rcx,ecx
   14004d383:	lea    rdx,[rcx+rcx*4]
   14004d387:	mov    rcx,r15
   14004d38a:	lea    rdi,[rax+rdx*4]
   14004d38e:	movsxd rax,DWORD PTR [rsi+0x10]
   14004d392:	mov    rdx,r14
   14004d395:	add    rdi,rax
   14004d398:	call   0x140045bc0
   14004d39d:	mov    rbx,rax
   14004d3a0:	call   0x140045cd0
   14004d3a5:	movsxd rcx,DWORD PTR [rdi+0xc]
   14004d3a9:	mov    r8,QWORD PTR [rsp+0xb0]
   14004d3b1:	add    rax,rcx
   14004d3b4:	mov    ecx,DWORD PTR [rsi]
   14004d3b6:	mov    BYTE PTR [rsp+0x40],0x0
   14004d3bb:	mov    QWORD PTR [rsp+0x38],r14
   14004d3c0:	mov    QWORD PTR [rsp+0x30],r13
   14004d3c5:	mov    DWORD PTR [rsp+0x28],ecx
   14004d3c9:	mov    r9,rbx
   14004d3cc:	mov    rdx,r12
   14004d3cf:	mov    rcx,r15
   14004d3d2:	mov    QWORD PTR [rsp+0x20],rax
   14004d3d7:	call   0x1400462e0
   14004d3dc:	mov    eax,DWORD PTR [rsp+0xa0]
   14004d3e3:	jmp    0x14004d3ec
   14004d3e5:	mov    eax,DWORD PTR [rsp+0xa0]
   14004d3ec:	add    eax,0x1
   14004d3ef:	add    rsi,0x14
   14004d3f3:	cmp    eax,DWORD PTR [rsp+0x50]
   14004d3f7:	mov    DWORD PTR [rsp+0xa0],eax
   14004d3fe:	jb     0x14004d2b0
   14004d404:	mov    rbp,QWORD PTR [rsp+0x70]
   14004d409:	mov    rdi,QWORD PTR [rsp+0x68]
   14004d40e:	mov    rbx,QWORD PTR [rsp+0xa8]
   14004d416:	mov    r13,QWORD PTR [rsp+0x60]
   14004d41b:	add    rsp,0x78
   14004d41f:	pop    r15
   14004d421:	pop    r14
   14004d423:	pop    r12
   14004d425:	pop    rsi
   14004d426:	ret    
   14004d427:	int3   
   14004d428:	int3   
   14004d429:	int3   
   14004d42a:	int3   
   14004d42b:	int3   
   14004d42c:	int3   
   14004d42d:	int3   
   14004d42e:	int3   
   14004d42f:	int3   
   14004d430:	mov    QWORD PTR [rsp+0x20],r9
   14004d435:	mov    QWORD PTR [rsp+0x18],r8
   14004d43a:	mov    QWORD PTR [rsp+0x10],rdx
   14004d43f:	push   rbx
   14004d440:	push   rbp
   14004d441:	push   rdi
   14004d442:	push   r12
   14004d444:	push   r13
   14004d446:	push   r14
   14004d448:	push   r15
   14004d44a:	sub    rsp,0x570
   14004d451:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14004d459:	mov    r13,rdx
   14004d45c:	mov    r14,rcx
   14004d45f:	xor    r15b,r15b
   14004d462:	mov    rdx,r9
   14004d465:	mov    rcx,rbp
   14004d468:	mov    r12,r9
   14004d46b:	mov    rbx,r8
   14004d46e:	mov    BYTE PTR [rsp+0x5b0],r15b
   14004d476:	call   0x14004c360
   14004d47b:	lea    r9,[rsp+0x68]
   14004d480:	mov    r8,rbp
   14004d483:	mov    rdx,r12
   14004d486:	mov    rcx,r13
   14004d489:	mov    edi,eax
   14004d48b:	mov    DWORD PTR [rsp+0x58],eax
   14004d48f:	call   0x140045bc0
   14004d494:	mov    r8,rbp
   14004d497:	mov    rdx,r12
   14004d49a:	mov    rcx,r13
   14004d49d:	call   0x14004c4e0
   14004d4a2:	cmp    edi,eax
   14004d4a4:	jle    0x14004d4cc
   14004d4a6:	lea    rcx,[rsp+0x68]
   14004d4ab:	mov    r9d,edi
   14004d4ae:	mov    r8,rbp
   14004d4b1:	mov    rdx,r12
   14004d4b4:	call   0x14004c490
   14004d4b9:	mov    r9d,edi
   14004d4bc:	mov    r8,rbp
   14004d4bf:	mov    rdx,r12
   14004d4c2:	mov    rcx,r13
   14004d4c5:	call   0x14004c4a0
   14004d4ca:	jmp    0x14004d4e0
   14004d4cc:	mov    r8,rbp
   14004d4cf:	mov    rdx,r12
   14004d4d2:	mov    rcx,r13
   14004d4d5:	call   0x14004c4e0
   14004d4da:	mov    edi,eax
   14004d4dc:	mov    DWORD PTR [rsp+0x58],eax
   14004d4e0:	cmp    edi,0xffffffff
   14004d4e3:	jl     0x14004d4ea
   14004d4e5:	cmp    edi,DWORD PTR [rbp+0x4]
   14004d4e8:	jl     0x14004d4ef
   14004d4ea:	call   0x14004c280
   14004d4ef:	cmp    DWORD PTR [r14],0xe06d7363
   14004d4f6:	jne    0x14004d657
   14004d4fc:	cmp    DWORD PTR [r14+0x18],0x4
   14004d501:	jne    0x14004d657
   14004d507:	mov    eax,DWORD PTR [r14+0x20]
   14004d50b:	cmp    eax,0x19930520
   14004d510:	je     0x14004d524
   14004d512:	cmp    eax,0x19930521
   14004d517:	je     0x14004d524
   14004d519:	cmp    eax,0x19930522
   14004d51e:	jne    0x14004d657
   14004d524:	cmp    QWORD PTR [r14+0x30],0x0
   14004d529:	jne    0x14004d657
   14004d52f:	call   0x14004bd60
   14004d534:	cmp    QWORD PTR [rax+0xf0],0x0
   14004d53c:	je     0x14004da16
   14004d542:	call   0x14004bd60
   14004d547:	mov    r14,QWORD PTR [rax+0xf0]
   14004d54e:	call   0x14004bd60
   14004d553:	mov    rcx,QWORD PTR [r14+0x38]
   14004d557:	mov    rbx,QWORD PTR [rax+0xf8]
   14004d55e:	mov    QWORD PTR [rsp+0x5c0],rbx
   14004d566:	call   0x140045d30
   14004d56b:	mov    edx,0x1
   14004d570:	mov    rcx,r14
   14004d573:	call   0x140057ca0
   14004d578:	test   eax,eax
   14004d57a:	jne    0x14004d581
   14004d57c:	call   0x14004c280
   14004d581:	cmp    DWORD PTR [r14],0xe06d7363
   14004d588:	jne    0x14004d5b6
   14004d58a:	cmp    DWORD PTR [r14+0x18],0x4
   14004d58f:	jne    0x14004d5b6
   14004d591:	mov    eax,DWORD PTR [r14+0x20]
   14004d595:	cmp    eax,0x19930520
   14004d59a:	je     0x14004d5aa
   14004d59c:	cmp    eax,0x19930521
   14004d5a1:	je     0x14004d5aa
   14004d5a3:	cmp    eax,0x19930522
   14004d5a8:	jne    0x14004d5b6
   14004d5aa:	cmp    QWORD PTR [r14+0x30],0x0
   14004d5af:	jne    0x14004d5b6
   14004d5b1:	call   0x14004c280
   14004d5b6:	call   0x14004bd60
   14004d5bb:	cmp    QWORD PTR [rax+0x108],0x0
   14004d5c3:	je     0x14004d657
   14004d5c9:	call   0x14004bd60
   14004d5ce:	mov    rbx,QWORD PTR [rax+0x108]
   14004d5d5:	call   0x14004bd60
   14004d5da:	mov    rdx,rbx
   14004d5dd:	mov    rcx,r14
   14004d5e0:	mov    QWORD PTR [rax+0x108],0x0
   14004d5eb:	call   0x14004c8f0
   14004d5f0:	test   al,al
   14004d5f2:	jne    0x14004d64f
   14004d5f4:	mov    rcx,rbx
   14004d5f7:	call   0x14004cb40
   14004d5fc:	test   al,al
   14004d5fe:	je     0x14004d649
   14004d600:	mov    dl,0x1
   14004d602:	mov    rcx,r14
   14004d605:	call   0x14004c850
   14004d60a:	lea    r11,[rip+0x21787]        # 0x14006ed98
   14004d611:	lea    rdx,[rsp+0x5b0]
   14004d619:	lea    rcx,[rsp+0x78]
   14004d61e:	mov    QWORD PTR [rsp+0x5b0],r11
   14004d626:	call   0x140057ab0
   14004d62b:	lea    r11,[rip+0x21756]        # 0x14006ed88
   14004d632:	lea    rdx,[rip+0x34c7f]        # 0x1400822b8
   14004d639:	lea    rcx,[rsp+0x78]
   14004d63e:	mov    QWORD PTR [rsp+0x78],r11
   14004d643:	call   0x140048db0
   14004d648:	int3   
   14004d649:	call   0x14004c250
   14004d64e:	int3   
   14004d64f:	mov    rbx,QWORD PTR [rsp+0x5c0]
   14004d657:	cmp    DWORD PTR [r14],0xe06d7363
   14004d65e:	jne    0x14004da29
   14004d664:	cmp    DWORD PTR [r14+0x18],0x4
   14004d669:	jne    0x14004da29
   14004d66f:	mov    eax,DWORD PTR [r14+0x20]
   14004d673:	cmp    eax,0x19930520
   14004d678:	je     0x14004d68c
   14004d67a:	cmp    eax,0x19930521
   14004d67f:	je     0x14004d68c
   14004d681:	cmp    eax,0x19930522
   14004d686:	jne    0x14004da29
   14004d68c:	cmp    DWORD PTR [rbp+0xc],0x0
   14004d690:	jbe    0x14004d947
   14004d696:	mov    r8d,DWORD PTR [rsp+0x5e0]
   14004d69e:	lea    rax,[rsp+0x54]
   14004d6a3:	mov    QWORD PTR [rsp+0x30],r12
   14004d6a8:	mov    QWORD PTR [rsp+0x28],rax
   14004d6ad:	lea    rax,[rsp+0x50]
   14004d6b2:	mov    r9d,edi
   14004d6b5:	mov    rdx,rbp
   14004d6b8:	mov    rcx,r13
   14004d6bb:	mov    QWORD PTR [rsp+0x20],rax
   14004d6c0:	call   0x140046090
   14004d6c5:	mov    ecx,DWORD PTR [rsp+0x50]
   14004d6c9:	mov    edx,DWORD PTR [rsp+0x54]
   14004d6cd:	cmp    ecx,edx
   14004d6cf:	mov    rbx,rax
   14004d6d2:	mov    QWORD PTR [rsp+0x60],rax
   14004d6d7:	jae    0x14004d947
   14004d6dd:	mov    QWORD PTR [rsp+0x568],rsi
   14004d6e5:	cmp    DWORD PTR [rbx],edi
   14004d6e7:	jg     0x14004d91e
   14004d6ed:	cmp    edi,DWORD PTR [rbx+0x4]
   14004d6f0:	jg     0x14004d91e
   14004d6f6:	call   0x140045cd0
   14004d6fb:	movsxd rdi,DWORD PTR [rbx+0x10]
   14004d6ff:	mov    r15d,DWORD PTR [rbx+0xc]
   14004d703:	add    rdi,rax
   14004d706:	test   r15d,r15d
   14004d709:	jle    0x14004d90a
   14004d70f:	nop
   14004d710:	call   0x140045cf0
   14004d715:	mov    rcx,QWORD PTR [r14+0x30]
   14004d719:	movsxd rdx,DWORD PTR [rcx+0xc]
   14004d71d:	lea    r13,[rax+rdx*1+0x4]
   14004d722:	call   0x140045cf0
   14004d727:	mov    rcx,QWORD PTR [r14+0x30]
   14004d72b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14004d72f:	mov    ebp,DWORD PTR [rax+rdx*1]
   14004d732:	test   ebp,ebp
   14004d734:	jle    0x14004d830
   14004d73a:	data16 xchg ax,ax
   14004d73d:	data16 xchg ax,ax
   14004d740:	call   0x140045cf0
   14004d745:	mov    r12,QWORD PTR [r14+0x30]
   14004d749:	mov    rsi,rax
   14004d74c:	movsxd rax,DWORD PTR [r13+0x0]
   14004d750:	add    rsi,rax
   14004d753:	cmp    DWORD PTR [rdi+0x4],0x0
   14004d757:	je     0x14004d86c
   14004d75d:	movsxd rbx,DWORD PTR [rdi+0x4]
   14004d761:	call   0x140045cd0
   14004d766:	add    rax,rbx
   14004d769:	je     0x14004d86c
   14004d76f:	test   ebx,ebx
   14004d771:	je     0x14004d781
   14004d773:	movsxd rbx,DWORD PTR [rdi+0x4]
   14004d777:	call   0x140045cd0
   14004d77c:	add    rax,rbx
   14004d77f:	jmp    0x14004d783
   14004d781:	xor    eax,eax
   14004d783:	cmp    BYTE PTR [rax+0x10],0x0
   14004d787:	je     0x14004d86c
   14004d78d:	test   ebx,ebx
   14004d78f:	je     0x14004d79f
   14004d791:	call   0x140045cd0
   14004d796:	movsxd rbx,DWORD PTR [rdi+0x4]
   14004d79a:	add    rbx,rax
   14004d79d:	jmp    0x14004d7a1
   14004d79f:	xor    ebx,ebx
   14004d7a1:	call   0x140045cf0
   14004d7a6:	movsxd rcx,DWORD PTR [rsi+0x4]
   14004d7aa:	add    rax,rcx
   14004d7ad:	cmp    rbx,rax
   14004d7b0:	je     0x14004d7f8
   14004d7b2:	cmp    DWORD PTR [rdi+0x4],0x0
   14004d7b6:	je     0x14004d7c6
   14004d7b8:	call   0x140045cd0
   14004d7bd:	movsxd rbx,DWORD PTR [rdi+0x4]
   14004d7c1:	add    rbx,rax
   14004d7c4:	jmp    0x14004d7c8
   14004d7c6:	xor    ebx,ebx
   14004d7c8:	call   0x140045cf0
   14004d7cd:	movsxd rcx,DWORD PTR [rsi+0x4]
   14004d7d1:	lea    r8,[rax+rcx*1+0x10]
   14004d7d6:	lea    rcx,[rbx+0x10]
   14004d7da:	sub    r8,rcx
   14004d7dd:	data16 xchg ax,ax
   14004d7e0:	movzx  edx,BYTE PTR [rcx]
   14004d7e3:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d7e8:	sub    edx,eax
   14004d7ea:	jne    0x14004d7f4
   14004d7ec:	add    rcx,0x1
   14004d7f0:	test   eax,eax
   14004d7f2:	jne    0x14004d7e0
   14004d7f4:	test   edx,edx
   14004d7f6:	jne    0x14004d821
   14004d7f8:	test   BYTE PTR [rsi],0x2
   14004d7fb:	je     0x14004d802
   14004d7fd:	test   BYTE PTR [rdi],0x8
   14004d800:	je     0x14004d821
   14004d802:	mov    eax,DWORD PTR [r12]
   14004d806:	test   al,0x1
   14004d808:	je     0x14004d80f
   14004d80a:	test   BYTE PTR [rdi],0x1
   14004d80d:	je     0x14004d821
   14004d80f:	test   al,0x4
   14004d811:	je     0x14004d818
   14004d813:	test   BYTE PTR [rdi],0x4
   14004d816:	je     0x14004d821
   14004d818:	test   al,0x2
   14004d81a:	je     0x14004d86c
   14004d81c:	test   BYTE PTR [rdi],0x2
   14004d81f:	jne    0x14004d86c
   14004d821:	sub    ebp,0x1
   14004d824:	add    r13,0x4
   14004d828:	test   ebp,ebp
   14004d82a:	jg     0x14004d740
   14004d830:	sub    r15d,0x1
   14004d834:	add    rdi,0x14
   14004d838:	test   r15d,r15d
   14004d83b:	jg     0x14004d710
   14004d841:	mov    rbx,QWORD PTR [rsp+0x60]
   14004d846:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14004d84e:	mov    r12,QWORD PTR [rsp+0x5c8]
   14004d856:	mov    r13,QWORD PTR [rsp+0x5b8]
   14004d85e:	movzx  r15d,BYTE PTR [rsp+0x5b0]
   14004d867:	jmp    0x14004d912
   14004d86c:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14004d874:	mov    r12,QWORD PTR [rsp+0x5c8]
   14004d87c:	mov    r13,QWORD PTR [rsp+0x5b8]
   14004d884:	lea    r9,[rsp+0x70]
   14004d889:	mov    r15b,0x1
   14004d88c:	mov    r8,rbp
   14004d88f:	mov    rdx,r12
   14004d892:	mov    rcx,r13
   14004d895:	mov    BYTE PTR [rsp+0x5b0],r15b
   14004d89d:	call   0x140045bc0
   14004d8a2:	test   rsi,rsi
   14004d8a5:	mov    rbx,rax
   14004d8a8:	je     0x14004d8bb
   14004d8aa:	mov    r9,rsi
   14004d8ad:	mov    r8,rdi
   14004d8b0:	mov    rdx,rax
   14004d8b3:	mov    rcx,r14
   14004d8b6:	call   0x14004d0f0
   14004d8bb:	call   0x140045cd0
   14004d8c0:	movsxd rcx,DWORD PTR [rdi+0xc]
   14004d8c4:	mov    r8,QWORD PTR [rsp+0x5c0]
   14004d8cc:	add    rax,rcx
   14004d8cf:	movzx  ecx,BYTE PTR [rsp+0x5d8]
   14004d8d7:	mov    r9,rbx
   14004d8da:	mov    BYTE PTR [rsp+0x40],cl
   14004d8de:	mov    rcx,QWORD PTR [rsp+0x60]
   14004d8e3:	mov    QWORD PTR [rsp+0x38],r12
   14004d8e8:	mov    ecx,DWORD PTR [rcx]
   14004d8ea:	mov    QWORD PTR [rsp+0x30],rbp
   14004d8ef:	mov    rdx,r14
   14004d8f2:	mov    DWORD PTR [rsp+0x28],ecx
   14004d8f6:	mov    rcx,r13
   14004d8f9:	mov    QWORD PTR [rsp+0x20],rax
   14004d8fe:	call   0x1400462e0
   14004d903:	mov    rbx,QWORD PTR [rsp+0x60]
   14004d908:	jmp    0x14004d912
   14004d90a:	mov    r15b,BYTE PTR [rsp+0x5b0]
   14004d912:	mov    edx,DWORD PTR [rsp+0x54]
   14004d916:	mov    ecx,DWORD PTR [rsp+0x50]
   14004d91a:	mov    edi,DWORD PTR [rsp+0x58]
   14004d91e:	add    ecx,0x1
   14004d921:	add    rbx,0x14
   14004d925:	cmp    ecx,edx
   14004d927:	mov    DWORD PTR [rsp+0x50],ecx
   14004d92b:	mov    QWORD PTR [rsp+0x60],rbx
   14004d930:	jb     0x14004d6e5
   14004d936:	test   r15b,r15b
   14004d939:	mov    rsi,QWORD PTR [rsp+0x568]
   14004d941:	jne    0x14004da02
   14004d947:	mov    eax,DWORD PTR [rbp+0x0]
   14004d94a:	and    eax,0x1fffffff
   14004d94f:	cmp    eax,0x19930521
   14004d954:	jb     0x14004da02
   14004d95a:	cmp    DWORD PTR [rbp+0x20],0x0
   14004d95e:	je     0x14004da02
   14004d964:	movsxd rbx,DWORD PTR [rbp+0x20]
   14004d968:	call   0x140045cd0
   14004d96d:	add    rax,rbx
   14004d970:	je     0x14004da02
   14004d976:	test   ebx,ebx
   14004d978:	je     0x14004d98b
   14004d97a:	call   0x140045cd0
   14004d97f:	mov    rdx,rax
   14004d982:	movsxd rax,DWORD PTR [rbp+0x20]
   14004d986:	add    rdx,rax
   14004d989:	jmp    0x14004d98d
   14004d98b:	xor    edx,edx
   14004d98d:	mov    rcx,r14
   14004d990:	call   0x14004c8f0
   14004d995:	test   al,al
   14004d997:	jne    0x14004da02
   14004d999:	lea    r9,[rsp+0x5b0]
   14004d9a1:	mov    r8,rbp
   14004d9a4:	mov    rdx,r12
   14004d9a7:	mov    rcx,r13
   14004d9aa:	call   0x140045bc0
   14004d9af:	mov    rbx,rax
   14004d9b2:	call   0x14004bd60
   14004d9b7:	mov    r8,QWORD PTR [rsp+0x5c0]
   14004d9bf:	lea    rcx,[rsp+0x90]
   14004d9c7:	mov    r9,rbx
   14004d9ca:	mov    rdx,r14
   14004d9cd:	mov    QWORD PTR [rax+0x110],rcx
   14004d9d4:	mov    al,BYTE PTR [rsp+0x5d8]
   14004d9db:	mov    rcx,r13
   14004d9de:	mov    BYTE PTR [rsp+0x40],al
   14004d9e2:	mov    QWORD PTR [rsp+0x38],r12
   14004d9e7:	mov    QWORD PTR [rsp+0x30],rbp
   14004d9ec:	mov    DWORD PTR [rsp+0x28],0xffffffff
   14004d9f4:	mov    QWORD PTR [rsp+0x20],0x0
   14004d9fd:	call   0x1400462e0
   14004da02:	call   0x14004bd60
   14004da07:	cmp    QWORD PTR [rax+0x108],0x0
   14004da0f:	je     0x14004da16
   14004da11:	call   0x14004c280
   14004da16:	add    rsp,0x570
   14004da1d:	pop    r15
   14004da1f:	pop    r14
   14004da21:	pop    r13
   14004da23:	pop    r12
   14004da25:	pop    rdi
   14004da26:	pop    rbp
   14004da27:	pop    rbx
   14004da28:	ret    
   14004da29:	cmp    DWORD PTR [rbp+0xc],0x0
   14004da2d:	jbe    0x14004da02
   14004da2f:	cmp    BYTE PTR [rsp+0x5d8],0x0
   14004da37:	jne    0x14004da6d
   14004da39:	mov    rax,QWORD PTR [rsp+0x5e8]
   14004da41:	mov    r9,r12
   14004da44:	mov    r8,rbx
   14004da47:	mov    QWORD PTR [rsp+0x38],rax
   14004da4c:	mov    eax,DWORD PTR [rsp+0x5e0]
   14004da53:	mov    rdx,r13
   14004da56:	mov    DWORD PTR [rsp+0x30],eax
   14004da5a:	mov    rcx,r14
   14004da5d:	mov    DWORD PTR [rsp+0x28],edi
   14004da61:	mov    QWORD PTR [rsp+0x20],rbp
   14004da66:	call   0x14004d1b0
   14004da6b:	jmp    0x14004da02
   14004da6d:	call   0x14004c250
   14004da72:	int3   
   14004da73:	int3   
   14004da74:	int3   
   14004da75:	int3   
   14004da76:	int3   
   14004da77:	int3   
   14004da78:	int3   
   14004da79:	int3   
   14004da7a:	int3   
   14004da7b:	int3   
   14004da7c:	int3   
   14004da7d:	int3   
   14004da7e:	int3   
   14004da7f:	int3   
   14004da80:	rex push rbx
   14004da82:	sub    rsp,0x20
   14004da86:	mov    rbx,rcx
   14004da89:	call   0x140057b40
   14004da8e:	lea    r11,[rip+0x212f3]        # 0x14006ed88
   14004da95:	mov    QWORD PTR [rbx],r11
   14004da98:	mov    rax,rbx
   14004da9b:	add    rsp,0x20
   14004da9f:	pop    rbx
   14004daa0:	ret    
   14004daa1:	int3   
   14004daa2:	int3   
   14004daa3:	int3   
   14004daa4:	int3   
   14004daa5:	int3   
   14004daa6:	int3   
   14004daa7:	int3   
   14004daa8:	int3   
   14004daa9:	int3   
   14004daaa:	int3   
   14004daab:	int3   
   14004daac:	int3   
   14004daad:	int3   
   14004daae:	int3   
   14004daaf:	int3   
   14004dab0:	mov    QWORD PTR [rsp+0x8],rbx
   14004dab5:	mov    QWORD PTR [rsp+0x10],rbp
   14004daba:	mov    QWORD PTR [rsp+0x18],rsi
   14004dabf:	mov    QWORD PTR [rsp+0x20],rdi
   14004dac4:	push   r12
   14004dac6:	sub    rsp,0x40
   14004daca:	mov    rbp,r9
   14004dacd:	mov    r12,r8
   14004dad0:	mov    rsi,rdx
   14004dad3:	mov    rbx,rcx
   14004dad6:	call   0x14004bd60
   14004dadb:	mov    rdi,QWORD PTR [rsp+0x70]
   14004dae0:	cmp    DWORD PTR [rax+0x2d0],0x0
   14004dae7:	jne    0x14004db28
   14004dae9:	mov    eax,DWORD PTR [rbx]
   14004daeb:	cmp    eax,0xe06d7363
   14004daf0:	je     0x14004db28
   14004daf2:	cmp    eax,0x80000029
   14004daf7:	jne    0x14004db09
   14004daf9:	cmp    DWORD PTR [rbx+0x18],0xf
   14004dafd:	jne    0x14004db09
   14004daff:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14004db07:	je     0x14004db28
   14004db09:	cmp    eax,0x80000026
   14004db0e:	je     0x14004db28
   14004db10:	mov    eax,DWORD PTR [rdi]
   14004db12:	and    eax,0x1fffffff
   14004db17:	cmp    eax,0x19930522
   14004db1c:	jb     0x14004db28
   14004db1e:	test   BYTE PTR [rdi+0x24],0x1
   14004db22:	jne    0x14004dcab
   14004db28:	mov    eax,DWORD PTR [rbx+0x4]
   14004db2b:	test   al,0x66
   14004db2d:	je     0x14004dbd7
   14004db33:	mov    ecx,DWORD PTR [rdi+0x4]
   14004db36:	test   ecx,ecx
   14004db38:	je     0x14004dcab
   14004db3e:	cmp    DWORD PTR [rsp+0x78],0x0
   14004db43:	jne    0x14004dcab
   14004db49:	and    eax,0x20
   14004db4c:	je     0x14004db90
   14004db4e:	cmp    DWORD PTR [rbx],0x80000026
   14004db54:	jne    0x14004db90
   14004db56:	mov    r8,QWORD PTR [r12+0xf8]
   14004db5e:	mov    rdx,rbp
   14004db61:	mov    rcx,rdi
   14004db64:	call   0x14004c2d0
   14004db69:	cmp    eax,0xffffffff
   14004db6c:	mov    ebx,eax
   14004db6e:	jl     0x14004db75
   14004db70:	cmp    eax,DWORD PTR [rdi+0x4]
   14004db73:	jl     0x14004db7a
   14004db75:	call   0x14004c280
   14004db7a:	mov    r9d,ebx
   14004db7d:	mov    r8,rdi
   14004db80:	mov    rdx,rbp
   14004db83:	mov    rcx,rsi
   14004db86:	call   0x14004c5b0
   14004db8b:	jmp    0x14004dcab
   14004db90:	test   eax,eax
   14004db92:	je     0x14004dbc4
   14004db94:	cmp    DWORD PTR [rbx],0x80000029
   14004db9a:	jne    0x14004dbc4
   14004db9c:	mov    esi,DWORD PTR [rbx+0x38]
   14004db9f:	cmp    esi,0xffffffff
   14004dba2:	jl     0x14004dba8
   14004dba4:	cmp    esi,ecx
   14004dba6:	jl     0x14004dbad
   14004dba8:	call   0x14004c280
   14004dbad:	mov    rcx,QWORD PTR [rbx+0x28]
   14004dbb1:	mov    r9d,esi
   14004dbb4:	mov    r8,rdi
   14004dbb7:	mov    rdx,rbp
   14004dbba:	call   0x14004c5b0
   14004dbbf:	jmp    0x14004dcab
   14004dbc4:	mov    r8,rdi
   14004dbc7:	mov    rdx,rbp
   14004dbca:	mov    rcx,rsi
   14004dbcd:	call   0x140045d50
   14004dbd2:	jmp    0x14004dcab
   14004dbd7:	cmp    DWORD PTR [rdi+0xc],0x0
   14004dbdb:	jne    0x14004dc0b
   14004dbdd:	mov    eax,DWORD PTR [rdi]
   14004dbdf:	and    eax,0x1fffffff
   14004dbe4:	cmp    eax,0x19930521
   14004dbe9:	jb     0x14004dcab
   14004dbef:	cmp    DWORD PTR [rdi+0x20],0x0
   14004dbf3:	je     0x14004dcab
   14004dbf9:	call   0x140045cd0
   14004dbfe:	movsxd rcx,DWORD PTR [rdi+0x20]
   14004dc02:	add    rax,rcx
   14004dc05:	je     0x14004dcab
   14004dc0b:	cmp    DWORD PTR [rbx],0xe06d7363
   14004dc11:	jne    0x14004dc74
   14004dc13:	cmp    DWORD PTR [rbx+0x18],0x3
   14004dc17:	jb     0x14004dc74
   14004dc19:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14004dc20:	jbe    0x14004dc74
   14004dc22:	mov    rax,QWORD PTR [rbx+0x30]
   14004dc26:	cmp    DWORD PTR [rax+0x8],0x0
   14004dc2a:	je     0x14004dc74
   14004dc2c:	call   0x140045cf0
   14004dc31:	mov    rcx,QWORD PTR [rbx+0x30]
   14004dc35:	movsxd rdx,DWORD PTR [rcx+0x8]
   14004dc39:	add    rax,rdx
   14004dc3c:	je     0x14004dc74
   14004dc3e:	movzx  ecx,BYTE PTR [rsp+0x88]
   14004dc46:	mov    r9,rbp
   14004dc49:	mov    r8,r12
   14004dc4c:	mov    DWORD PTR [rsp+0x38],ecx
   14004dc50:	mov    rcx,QWORD PTR [rsp+0x80]
   14004dc58:	mov    rdx,rsi
   14004dc5b:	mov    QWORD PTR [rsp+0x30],rcx
   14004dc60:	mov    ecx,DWORD PTR [rsp+0x78]
   14004dc64:	mov    DWORD PTR [rsp+0x28],ecx
   14004dc68:	mov    rcx,rbx
   14004dc6b:	mov    QWORD PTR [rsp+0x20],rdi
   14004dc70:	call   rax
   14004dc72:	jmp    0x14004dcb0
   14004dc74:	mov    rax,QWORD PTR [rsp+0x80]
   14004dc7c:	mov    r9,rbp
   14004dc7f:	mov    r8,r12
   14004dc82:	mov    QWORD PTR [rsp+0x38],rax
   14004dc87:	mov    eax,DWORD PTR [rsp+0x78]
   14004dc8b:	mov    rdx,rsi
   14004dc8e:	mov    DWORD PTR [rsp+0x30],eax
   14004dc92:	movzx  eax,BYTE PTR [rsp+0x88]
   14004dc9a:	mov    rcx,rbx
   14004dc9d:	mov    BYTE PTR [rsp+0x28],al
   14004dca1:	mov    QWORD PTR [rsp+0x20],rdi
   14004dca6:	call   0x14004d430
   14004dcab:	mov    eax,0x1
   14004dcb0:	mov    rbx,QWORD PTR [rsp+0x50]
   14004dcb5:	mov    rbp,QWORD PTR [rsp+0x58]
   14004dcba:	mov    rsi,QWORD PTR [rsp+0x60]
   14004dcbf:	mov    rdi,QWORD PTR [rsp+0x68]
   14004dcc4:	add    rsp,0x40
   14004dcc8:	pop    r12
   14004dcca:	ret    
   14004dccb:	int3   
   14004dccc:	int3   
   14004dccd:	int3   
   14004dcce:	int3   
   14004dccf:	int3   
   14004dcd0:	mov    QWORD PTR [rsp+0x8],rcx
   14004dcd5:	sub    rsp,0x88
   14004dcdc:	lea    rcx,[rip+0x3efbd]        # 0x14008cca0
   14004dce3:	call   QWORD PTR [rip+0x1665f]        # 0x140064348
   14004dce9:	mov    rax,QWORD PTR [rip+0x3f0a8]        # 0x14008cd98
   14004dcf0:	mov    QWORD PTR [rsp+0x58],rax
   14004dcf5:	xor    r8d,r8d
   14004dcf8:	lea    rdx,[rsp+0x60]
   14004dcfd:	mov    rcx,QWORD PTR [rsp+0x58]
   14004dd02:	call   0x140062cf2
   14004dd07:	mov    QWORD PTR [rsp+0x50],rax
   14004dd0c:	cmp    QWORD PTR [rsp+0x50],0x0
   14004dd12:	je     0x14004dd55
   14004dd14:	mov    QWORD PTR [rsp+0x38],0x0
   14004dd1d:	lea    rax,[rsp+0x48]
   14004dd22:	mov    QWORD PTR [rsp+0x30],rax
   14004dd27:	lea    rax,[rsp+0x40]
   14004dd2c:	mov    QWORD PTR [rsp+0x28],rax
   14004dd31:	lea    rax,[rip+0x3ef68]        # 0x14008cca0
   14004dd38:	mov    QWORD PTR [rsp+0x20],rax
   14004dd3d:	mov    r9,QWORD PTR [rsp+0x50]
   14004dd42:	mov    r8,QWORD PTR [rsp+0x58]
   14004dd47:	mov    rdx,QWORD PTR [rsp+0x60]
   14004dd4c:	xor    ecx,ecx
   14004dd4e:	call   0x140062d04
   14004dd53:	jmp    0x14004dd77
   14004dd55:	mov    rax,QWORD PTR [rsp+0x88]
   14004dd5d:	mov    QWORD PTR [rip+0x3f034],rax        # 0x14008cd98
   14004dd64:	lea    rax,[rsp+0x88]
   14004dd6c:	add    rax,0x8
   14004dd70:	mov    QWORD PTR [rip+0x3efc1],rax        # 0x14008cd38
   14004dd77:	mov    rax,QWORD PTR [rip+0x3f01a]        # 0x14008cd98
   14004dd7e:	mov    QWORD PTR [rip+0x3ee8b],rax        # 0x14008cc10
   14004dd85:	mov    rax,QWORD PTR [rsp+0x90]
   14004dd8d:	mov    QWORD PTR [rip+0x3ef8c],rax        # 0x14008cd20
   14004dd94:	mov    DWORD PTR [rip+0x3ee62],0xc0000409        # 0x14008cc00
   14004dd9e:	mov    DWORD PTR [rip+0x3ee5c],0x1        # 0x14008cc04
   14004dda8:	mov    rax,QWORD PTR [rip+0x38fc1]        # 0x140086d70
   14004ddaf:	mov    QWORD PTR [rsp+0x68],rax
   14004ddb4:	mov    rax,QWORD PTR [rip+0x38fbd]        # 0x140086d78
   14004ddbb:	mov    QWORD PTR [rsp+0x70],rax
   14004ddc0:	call   QWORD PTR [rip+0x16572]        # 0x140064338
   14004ddc6:	mov    DWORD PTR [rip+0x3eecc],eax        # 0x14008cc98
   14004ddcc:	mov    ecx,0x1
   14004ddd1:	call   0x140057cb0
   14004ddd6:	xor    ecx,ecx
   14004ddd8:	call   QWORD PTR [rip+0x164b2]        # 0x140064290
   14004ddde:	lea    rcx,[rip+0x20fc3]        # 0x14006eda8
   14004dde5:	call   QWORD PTR [rip+0x16545]        # 0x140064330
   14004ddeb:	cmp    DWORD PTR [rip+0x3eea6],0x0        # 0x14008cc98
   14004ddf2:	jne    0x14004ddfe
   14004ddf4:	mov    ecx,0x1
   14004ddf9:	call   0x140057cb0
   14004ddfe:	call   QWORD PTR [rip+0x16794]        # 0x140064598
   14004de04:	mov    edx,0xc0000409
   14004de09:	mov    rcx,rax
   14004de0c:	call   QWORD PTR [rip+0x16516]        # 0x140064328
   14004de12:	add    rsp,0x88
   14004de19:	ret    
   14004de1a:	int3   
   14004de1b:	int3   
   14004de1c:	int3   
   14004de1d:	int3   
   14004de1e:	int3   
   14004de1f:	int3   
   14004de20:	mov    QWORD PTR [rsp+0x8],rbx
   14004de25:	mov    QWORD PTR [rsp+0x10],rbp
   14004de2a:	mov    QWORD PTR [rsp+0x18],rsi
   14004de2f:	push   rdi
   14004de30:	sub    rsp,0x20
   14004de34:	xor    edi,edi
   14004de36:	mov    rsi,rcx
   14004de39:	or     ebp,0xffffffff
   14004de3c:	data16 data16 xchg ax,ax
   14004de40:	mov    rcx,rsi
   14004de43:	call   0x1400480c0
   14004de48:	test   rax,rax
   14004de4b:	mov    rbx,rax
   14004de4e:	jne    0x14004de7b
   14004de50:	cmp    DWORD PTR [rip+0x3f31a],eax        # 0x14008d170
   14004de56:	jbe    0x14004de7b
   14004de58:	mov    ecx,edi
   14004de5a:	call   QWORD PTR [rip+0x16728]        # 0x140064588
   14004de60:	lea    r11d,[rdi+0x3e8]
   14004de67:	cmp    r11d,DWORD PTR [rip+0x3f302]        # 0x14008d170
   14004de6e:	mov    edi,r11d
   14004de71:	cmova  edi,ebp
   14004de74:	cmp    edi,ebp
   14004de76:	jne    0x14004de40
   14004de78:	mov    rax,rbx
   14004de7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14004de80:	mov    rbp,QWORD PTR [rsp+0x38]
   14004de85:	mov    rsi,QWORD PTR [rsp+0x40]
   14004de8a:	add    rsp,0x20
   14004de8e:	pop    rdi
   14004de8f:	ret    
   14004de90:	mov    QWORD PTR [rsp+0x8],rbx
   14004de95:	mov    QWORD PTR [rsp+0x10],rbp
   14004de9a:	mov    QWORD PTR [rsp+0x18],rsi
   14004de9f:	mov    QWORD PTR [rsp+0x20],rdi
   14004dea4:	push   r12
   14004dea6:	sub    rsp,0x20
   14004deaa:	xor    edi,edi
   14004deac:	mov    rsi,rdx
   14004deaf:	mov    rbp,rcx
   14004deb2:	or     r12d,0xffffffff
   14004deb6:	data16 data16 xchg ax,ax
   14004deba:	data16 xchg ax,ax
   14004debd:	data16 xchg ax,ax
   14004dec0:	xor    r8d,r8d
   14004dec3:	mov    rdx,rsi
   14004dec6:	mov    rcx,rbp
   14004dec9:	call   0x140048bb0
   14004dece:	test   rax,rax
   14004ded1:	mov    rbx,rax
   14004ded4:	jne    0x14004df03
   14004ded6:	cmp    DWORD PTR [rip+0x3f294],eax        # 0x14008d170
   14004dedc:	jbe    0x14004df03
   14004dede:	mov    ecx,edi
   14004dee0:	call   QWORD PTR [rip+0x166a2]        # 0x140064588
   14004dee6:	lea    r11d,[rdi+0x3e8]
   14004deed:	cmp    r11d,DWORD PTR [rip+0x3f27c]        # 0x14008d170
   14004def4:	mov    edi,r11d
   14004def7:	cmova  edi,r12d
   14004defb:	cmp    edi,r12d
   14004defe:	jne    0x14004dec0
   14004df00:	mov    rax,rbx
   14004df03:	mov    rbx,QWORD PTR [rsp+0x30]
   14004df08:	mov    rbp,QWORD PTR [rsp+0x38]
   14004df0d:	mov    rsi,QWORD PTR [rsp+0x40]
   14004df12:	mov    rdi,QWORD PTR [rsp+0x48]
   14004df17:	add    rsp,0x20
   14004df1b:	pop    r12
   14004df1d:	ret    
   14004df1e:	int3   
   14004df1f:	int3   
   14004df20:	mov    QWORD PTR [rsp+0x8],rbx
   14004df25:	mov    QWORD PTR [rsp+0x10],rbp
   14004df2a:	mov    QWORD PTR [rsp+0x18],rsi
   14004df2f:	mov    QWORD PTR [rsp+0x20],rdi
   14004df34:	push   r12
   14004df36:	sub    rsp,0x20
   14004df3a:	xor    esi,esi
   14004df3c:	mov    rdi,rdx
   14004df3f:	mov    rbp,rcx
   14004df42:	or     r12d,0xffffffff
   14004df46:	data16 data16 xchg ax,ax
   14004df4a:	data16 xchg ax,ax
   14004df4d:	data16 xchg ax,ax
   14004df50:	mov    rdx,rdi
   14004df53:	mov    rcx,rbp
   14004df56:	call   0x140048e90
   14004df5b:	test   rax,rax
   14004df5e:	mov    rbx,rax
   14004df61:	jne    0x14004df95
   14004df63:	test   rdi,rdi
   14004df66:	je     0x14004df95
   14004df68:	cmp    DWORD PTR [rip+0x3f202],eax        # 0x14008d170
   14004df6e:	jbe    0x14004df95
   14004df70:	mov    ecx,esi
   14004df72:	call   QWORD PTR [rip+0x16610]        # 0x140064588
   14004df78:	lea    r11d,[rsi+0x3e8]
   14004df7f:	cmp    r11d,DWORD PTR [rip+0x3f1ea]        # 0x14008d170
   14004df86:	mov    esi,r11d
   14004df89:	cmova  esi,r12d
   14004df8d:	cmp    esi,r12d
   14004df90:	jne    0x14004df50
   14004df92:	mov    rax,rbx
   14004df95:	mov    rbx,QWORD PTR [rsp+0x30]
   14004df9a:	mov    rbp,QWORD PTR [rsp+0x38]
   14004df9f:	mov    rsi,QWORD PTR [rsp+0x40]
   14004dfa4:	mov    rdi,QWORD PTR [rsp+0x48]
   14004dfa9:	add    rsp,0x20
   14004dfad:	pop    r12
   14004dfaf:	ret    
   14004dfb0:	mov    QWORD PTR [rsp+0x8],rbx
   14004dfb5:	mov    QWORD PTR [rsp+0x10],rbp
   14004dfba:	mov    QWORD PTR [rsp+0x18],rsi
   14004dfbf:	push   rdi
   14004dfc0:	push   r12
   14004dfc2:	push   r13
   14004dfc4:	sub    rsp,0x20
   14004dfc8:	xor    esi,esi
   14004dfca:	mov    rdi,r8
   14004dfcd:	mov    rbp,rdx
   14004dfd0:	or     r13d,0xffffffff
   14004dfd4:	mov    r12,rcx
   14004dfd7:	data16 xchg ax,ax
   14004dfda:	data16 xchg ax,ax
   14004dfdd:	data16 xchg ax,ax
   14004dfe0:	mov    r8,rdi
   14004dfe3:	mov    rdx,rbp
   14004dfe6:	mov    rcx,r12
   14004dfe9:	call   0x140048f80
   14004dfee:	test   rax,rax
   14004dff1:	mov    rbx,rax
   14004dff4:	jne    0x14004e028
   14004dff6:	test   rdi,rdi
   14004dff9:	je     0x14004e028
   14004dffb:	cmp    DWORD PTR [rip+0x3f16f],eax        # 0x14008d170
   14004e001:	jbe    0x14004e028
   14004e003:	mov    ecx,esi
   14004e005:	call   QWORD PTR [rip+0x1657d]        # 0x140064588
   14004e00b:	lea    r11d,[rsi+0x3e8]
   14004e012:	cmp    r11d,DWORD PTR [rip+0x3f157]        # 0x14008d170
   14004e019:	mov    esi,r11d
   14004e01c:	cmova  esi,r13d
   14004e020:	cmp    esi,r13d
   14004e023:	jne    0x14004dfe0
   14004e025:	mov    rax,rbx
   14004e028:	mov    rbx,QWORD PTR [rsp+0x40]
   14004e02d:	mov    rbp,QWORD PTR [rsp+0x48]
   14004e032:	mov    rsi,QWORD PTR [rsp+0x50]
   14004e037:	add    rsp,0x20
   14004e03b:	pop    r13
   14004e03d:	pop    r12
   14004e03f:	pop    rdi
   14004e040:	ret    
   14004e041:	int3   
   14004e042:	int3   
   14004e043:	int3   
   14004e044:	int3   
   14004e045:	int3   
   14004e046:	int3   
   14004e047:	int3   
   14004e048:	int3   
   14004e049:	int3   
   14004e04a:	int3   
   14004e04b:	int3   
   14004e04c:	int3   
   14004e04d:	int3   
   14004e04e:	int3   
   14004e04f:	int3   
   14004e050:	mov    QWORD PTR [rip+0x3f121],rcx        # 0x14008d178
   14004e057:	ret    
   14004e058:	int3   
   14004e059:	int3   
   14004e05a:	int3   
   14004e05b:	int3   
   14004e05c:	int3   
   14004e05d:	int3   
   14004e05e:	int3   
   14004e05f:	int3   
   14004e060:	rex push rbx
   14004e062:	sub    rsp,0x5a0
   14004e069:	lea    rcx,[rsp+0xd0]
   14004e071:	call   QWORD PTR [rip+0x162d1]        # 0x140064348
   14004e077:	lea    rcx,[rsp+0x30]
   14004e07c:	xor    edx,edx
   14004e07e:	mov    r8d,0x98
   14004e084:	call   0x140047720
   14004e089:	mov    rax,QWORD PTR [rsp+0x5a8]
   14004e091:	mov    DWORD PTR [rsp+0x30],0xc000000d
   14004e099:	mov    QWORD PTR [rsp+0x40],rax
   14004e09e:	lea    rax,[rsp+0x30]
   14004e0a3:	mov    QWORD PTR [rsp+0x20],rax
   14004e0a8:	lea    rax,[rsp+0xd0]
   14004e0b0:	mov    QWORD PTR [rsp+0x28],rax
   14004e0b5:	call   QWORD PTR [rip+0x1627d]        # 0x140064338
   14004e0bb:	xor    ecx,ecx
   14004e0bd:	mov    ebx,eax
   14004e0bf:	call   QWORD PTR [rip+0x161cb]        # 0x140064290
   14004e0c5:	lea    rcx,[rsp+0x20]
   14004e0ca:	call   QWORD PTR [rip+0x16260]        # 0x140064330
   14004e0d0:	test   eax,eax
   14004e0d2:	jne    0x14004e0e0
   14004e0d4:	test   ebx,ebx
   14004e0d6:	jne    0x14004e0e0
   14004e0d8:	lea    ecx,[rax+0x2]
   14004e0db:	call   0x140057cb0
   14004e0e0:	call   QWORD PTR [rip+0x164b2]        # 0x140064598
   14004e0e6:	mov    edx,0xc000000d
   14004e0eb:	mov    rcx,rax
   14004e0ee:	call   QWORD PTR [rip+0x16234]        # 0x140064328
   14004e0f4:	add    rsp,0x5a0
   14004e0fb:	pop    rbx
   14004e0fc:	ret    
   14004e0fd:	int3   
   14004e0fe:	int3   
   14004e0ff:	int3   
   14004e100:	mov    QWORD PTR [rsp+0x8],rbx
   14004e105:	mov    QWORD PTR [rsp+0x10],rbp
   14004e10a:	mov    QWORD PTR [rsp+0x18],rsi
   14004e10f:	push   rdi
   14004e110:	sub    rsp,0x5b0
   14004e117:	mov    rbp,rcx
   14004e11a:	mov    rcx,QWORD PTR [rip+0x3f057]        # 0x14008d178
   14004e121:	mov    ebx,r9d
   14004e124:	mov    rdi,r8
   14004e127:	mov    rsi,rdx
   14004e12a:	call   0x14004ba70
   14004e12f:	test   rax,rax
   14004e132:	je     0x14004e154
   14004e134:	mov    r10,QWORD PTR [rsp+0x5e0]
   14004e13c:	mov    r9d,ebx
   14004e13f:	mov    r8,rdi
   14004e142:	mov    rdx,rsi
   14004e145:	mov    rcx,rbp
   14004e148:	mov    QWORD PTR [rsp+0x20],r10
   14004e14d:	call   rax
   14004e14f:	jmp    0x14004e1e9
   14004e154:	mov    ecx,0x2
   14004e159:	call   0x140057cb0
   14004e15e:	lea    rcx,[rsp+0xe0]
   14004e166:	call   QWORD PTR [rip+0x161dc]        # 0x140064348
   14004e16c:	lea    rcx,[rsp+0x40]
   14004e171:	xor    edx,edx
   14004e173:	mov    r8d,0x98
   14004e179:	call   0x140047720
   14004e17e:	mov    rax,QWORD PTR [rsp+0x5b8]
   14004e186:	mov    DWORD PTR [rsp+0x40],0xc000000d
   14004e18e:	mov    QWORD PTR [rsp+0x50],rax
   14004e193:	lea    rax,[rsp+0x40]
   14004e198:	mov    QWORD PTR [rsp+0x30],rax
   14004e19d:	lea    rax,[rsp+0xe0]
   14004e1a5:	mov    QWORD PTR [rsp+0x38],rax
   14004e1aa:	call   QWORD PTR [rip+0x16188]        # 0x140064338
   14004e1b0:	xor    ecx,ecx
   14004e1b2:	mov    ebx,eax
   14004e1b4:	call   QWORD PTR [rip+0x160d6]        # 0x140064290
   14004e1ba:	lea    rcx,[rsp+0x30]
   14004e1bf:	call   QWORD PTR [rip+0x1616b]        # 0x140064330
   14004e1c5:	test   eax,eax
   14004e1c7:	jne    0x14004e1d5
   14004e1c9:	test   ebx,ebx
   14004e1cb:	jne    0x14004e1d5
   14004e1cd:	lea    ecx,[rax+0x2]
   14004e1d0:	call   0x140057cb0
   14004e1d5:	call   QWORD PTR [rip+0x163bd]        # 0x140064598
   14004e1db:	mov    edx,0xc000000d
   14004e1e0:	mov    rcx,rax
   14004e1e3:	call   QWORD PTR [rip+0x1613f]        # 0x140064328
   14004e1e9:	lea    r11,[rsp+0x5b0]
   14004e1f1:	mov    rbx,QWORD PTR [r11+0x10]
   14004e1f5:	mov    rbp,QWORD PTR [r11+0x18]
   14004e1f9:	mov    rsi,QWORD PTR [r11+0x20]
   14004e1fd:	mov    rsp,r11
   14004e200:	pop    rdi
   14004e201:	ret    
   14004e202:	int3   
   14004e203:	int3   
   14004e204:	int3   
   14004e205:	int3   
   14004e206:	int3   
   14004e207:	int3   
   14004e208:	int3   
   14004e209:	int3   
   14004e20a:	int3   
   14004e20b:	int3   
   14004e20c:	int3   
   14004e20d:	int3   
   14004e20e:	int3   
   14004e20f:	int3   
   14004e210:	mov    QWORD PTR [rsp+0x8],rbx
   14004e215:	mov    QWORD PTR [rsp+0x10],rsi
   14004e21a:	push   rdi
   14004e21b:	sub    rsp,0x20
   14004e21f:	lea    rbx,[rcx+0x1c]
   14004e223:	mov    rsi,rcx
   14004e226:	mov    edi,0x101
   14004e22b:	mov    rcx,rbx
   14004e22e:	mov    r8,rdi
   14004e231:	xor    edx,edx
   14004e233:	call   0x140047720
   14004e238:	xor    r11d,r11d
   14004e23b:	lea    r8,[rip+0x38fae]        # 0x1400871f0
   14004e242:	mov    DWORD PTR [rsi+0x4],r11d
   14004e246:	mov    DWORD PTR [rsi+0x8],r11d
   14004e24a:	mov    DWORD PTR [rsi+0xc],r11d
   14004e24e:	mov    QWORD PTR [rsi+0x10],r11
   14004e252:	sub    r8,rsi
   14004e255:	mov    DWORD PTR [rsi+0x18],r11d
   14004e259:	data16 xchg ax,ax
   14004e25c:	data16 data16 xchg ax,ax
   14004e260:	movzx  eax,BYTE PTR [r8+rbx*1]
   14004e265:	add    rbx,0x1
   14004e269:	sub    rdi,0x1
   14004e26d:	mov    BYTE PTR [rbx-0x1],al
   14004e270:	jne    0x14004e260
   14004e272:	lea    r9,[rip+0x38f78]        # 0x1400871f1
   14004e279:	lea    rcx,[rsi+0x11d]
   14004e280:	mov    edx,0x80
   14004e285:	sub    r9,rsi
   14004e288:	data16 data16 xchg ax,ax
   14004e28c:	data16 data16 xchg ax,ax
   14004e290:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004e295:	add    rcx,0x2
   14004e299:	sub    rdx,0x1
   14004e29d:	mov    BYTE PTR [rcx-0x2],al
   14004e2a0:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   14004e2a6:	mov    BYTE PTR [rcx-0x1],al
   14004e2a9:	jne    0x14004e290
   14004e2ab:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e2b0:	mov    rsi,QWORD PTR [rsp+0x38]
   14004e2b5:	add    rsp,0x20
   14004e2b9:	pop    rdi
   14004e2ba:	ret    
   14004e2bb:	int3   
   14004e2bc:	int3   
   14004e2bd:	int3   
   14004e2be:	int3   
   14004e2bf:	int3   
   14004e2c0:	mov    QWORD PTR [rsp+0x18],rbx
   14004e2c5:	mov    QWORD PTR [rsp+0x20],rbp
   14004e2ca:	push   rdi
   14004e2cb:	sub    rsp,0x580
   14004e2d2:	mov    rax,QWORD PTR [rip+0x38a97]        # 0x140086d70
   14004e2d9:	xor    rax,rsp
   14004e2dc:	mov    QWORD PTR [rsp+0x570],rax
   14004e2e4:	mov    rbp,rcx
   14004e2e7:	mov    ecx,DWORD PTR [rcx+0x4]
   14004e2ea:	lea    rdx,[rsp+0x50]
   14004e2ef:	call   QWORD PTR [rip+0x1605b]        # 0x140064350
   14004e2f5:	test   eax,eax
   14004e2f7:	je     0x14004e45d
   14004e2fd:	xor    ebx,ebx
   14004e2ff:	mov    QWORD PTR [rsp+0x598],rsi
   14004e307:	lea    rdx,[rsp+0x70]
   14004e30c:	mov    eax,ebx
   14004e30e:	mov    edi,0x100
   14004e313:	mov    BYTE PTR [rdx],al
   14004e315:	add    eax,0x1
   14004e318:	add    rdx,0x1
   14004e31c:	cmp    eax,edi
   14004e31e:	jb     0x14004e313
   14004e320:	movzx  eax,BYTE PTR [rsp+0x56]
   14004e325:	mov    BYTE PTR [rsp+0x70],0x20
   14004e32a:	lea    rsi,[rsp+0x56]
   14004e32f:	test   al,al
   14004e331:	je     0x14004e361
   14004e333:	movzx  edx,BYTE PTR [rsi+0x1]
   14004e337:	movzx  r8d,al
   14004e33b:	cmp    r8d,edx
   14004e33e:	ja     0x14004e356
   14004e340:	sub    edx,r8d
   14004e343:	mov    rax,r8
   14004e346:	lea    rcx,[rsp+r8*1+0x70]
   14004e34b:	lea    r8d,[rdx+0x1]
   14004e34f:	mov    dl,0x20
   14004e351:	call   0x140047720
   14004e356:	mov    al,BYTE PTR [rsi+0x2]
   14004e359:	add    rsi,0x2
   14004e35d:	test   al,al
   14004e35f:	jne    0x14004e333
   14004e361:	mov    eax,DWORD PTR [rbp+0xc]
   14004e364:	mov    DWORD PTR [rsp+0x38],ebx
   14004e368:	lea    r8,[rsp+0x70]
   14004e36d:	mov    DWORD PTR [rsp+0x30],eax
   14004e371:	mov    eax,DWORD PTR [rbp+0x4]
   14004e374:	mov    r9d,edi
   14004e377:	mov    DWORD PTR [rsp+0x28],eax
   14004e37b:	lea    rax,[rsp+0x370]
   14004e383:	mov    edx,0x1
   14004e388:	xor    ecx,ecx
   14004e38a:	mov    QWORD PTR [rsp+0x20],rax
   14004e38f:	call   0x1400585c0
   14004e394:	mov    eax,DWORD PTR [rbp+0x4]
   14004e397:	mov    edx,DWORD PTR [rbp+0xc]
   14004e39a:	mov    DWORD PTR [rsp+0x40],ebx
   14004e39e:	mov    DWORD PTR [rsp+0x38],eax
   14004e3a2:	lea    rax,[rsp+0x170]
   14004e3aa:	mov    DWORD PTR [rsp+0x30],edi
   14004e3ae:	mov    QWORD PTR [rsp+0x28],rax
   14004e3b3:	lea    r9,[rsp+0x70]
   14004e3b8:	mov    r8d,edi
   14004e3bb:	xor    ecx,ecx
   14004e3bd:	mov    DWORD PTR [rsp+0x20],edi
   14004e3c1:	call   0x140058200
   14004e3c6:	mov    eax,DWORD PTR [rbp+0x4]
   14004e3c9:	mov    edx,DWORD PTR [rbp+0xc]
   14004e3cc:	mov    DWORD PTR [rsp+0x40],ebx
   14004e3d0:	mov    DWORD PTR [rsp+0x38],eax
   14004e3d4:	lea    rax,[rsp+0x270]
   14004e3dc:	mov    DWORD PTR [rsp+0x30],edi
   14004e3e0:	mov    QWORD PTR [rsp+0x28],rax
   14004e3e5:	lea    r9,[rsp+0x70]
   14004e3ea:	mov    r8d,0x200
   14004e3f0:	xor    ecx,ecx
   14004e3f2:	mov    DWORD PTR [rsp+0x20],edi
   14004e3f6:	call   0x140058200
   14004e3fb:	mov    rsi,QWORD PTR [rsp+0x598]
   14004e403:	lea    r11,[rsp+0x370]
   14004e40b:	lea    rcx,[rbp+0x1d]
   14004e40f:	nop
   14004e410:	movzx  eax,WORD PTR [r11]
   14004e414:	test   al,0x1
   14004e416:	je     0x14004e42b
   14004e418:	movzx  eax,BYTE PTR [rsp+rbx*1+0x170]
   14004e420:	or     BYTE PTR [rcx],0x10
   14004e423:	mov    BYTE PTR [rcx+0x100],al
   14004e429:	jmp    0x14004e449
   14004e42b:	test   al,0x2
   14004e42d:	je     0x14004e442
   14004e42f:	movzx  eax,BYTE PTR [rsp+rbx*1+0x270]
   14004e437:	or     BYTE PTR [rcx],0x20
   14004e43a:	mov    BYTE PTR [rcx+0x100],al
   14004e440:	jmp    0x14004e449
   14004e442:	mov    BYTE PTR [rcx+0x100],0x0
   14004e449:	add    rcx,0x1
   14004e44d:	add    rbx,0x1
   14004e451:	add    r11,0x2
   14004e455:	sub    rdi,0x1
   14004e459:	jne    0x14004e410
   14004e45b:	jmp    0x14004e4ae
   14004e45d:	xor    ebx,ebx
   14004e45f:	lea    rcx,[rbp+0x1d]
   14004e463:	mov    edi,0x100
   14004e468:	data16 data16 xchg ax,ax
   14004e46c:	data16 data16 xchg ax,ax
   14004e470:	lea    edx,[rbx-0x61]
   14004e473:	lea    eax,[rdx+0x20]
   14004e476:	cmp    eax,0x19
   14004e479:	ja     0x14004e489
   14004e47b:	or     BYTE PTR [rcx],0x10
   14004e47e:	lea    eax,[rbx+0x20]
   14004e481:	mov    BYTE PTR [rcx+0x100],al
   14004e487:	jmp    0x14004e4a3
   14004e489:	cmp    edx,0x19
   14004e48c:	ja     0x14004e49c
   14004e48e:	or     BYTE PTR [rcx],0x20
   14004e491:	lea    eax,[rbx-0x20]
   14004e494:	mov    BYTE PTR [rcx+0x100],al
   14004e49a:	jmp    0x14004e4a3
   14004e49c:	mov    BYTE PTR [rcx+0x100],0x0
   14004e4a3:	add    ebx,0x1
   14004e4a6:	add    rcx,0x1
   14004e4aa:	cmp    ebx,edi
   14004e4ac:	jb     0x14004e470
   14004e4ae:	mov    rcx,QWORD PTR [rsp+0x570]
   14004e4b6:	xor    rcx,rsp
   14004e4b9:	call   0x140046470
   14004e4be:	lea    r11,[rsp+0x580]
   14004e4c6:	mov    rbx,QWORD PTR [r11+0x20]
   14004e4ca:	mov    rbp,QWORD PTR [r11+0x28]
   14004e4ce:	mov    rsp,r11
   14004e4d1:	pop    rdi
   14004e4d2:	ret    
   14004e4d3:	int3   
   14004e4d4:	int3   
   14004e4d5:	int3   
   14004e4d6:	int3   
   14004e4d7:	int3   
   14004e4d8:	int3   
   14004e4d9:	int3   
   14004e4da:	int3   
   14004e4db:	int3   
   14004e4dc:	int3   
   14004e4dd:	int3   
   14004e4de:	int3   
   14004e4df:	int3   
   14004e4e0:	mov    QWORD PTR [rsp+0x10],rbx
   14004e4e5:	push   rdi
   14004e4e6:	sub    rsp,0x20
   14004e4ea:	call   0x14004bd60
   14004e4ef:	mov    rdi,rax
   14004e4f2:	mov    ecx,DWORD PTR [rax+0xc8]
   14004e4f8:	test   DWORD PTR [rip+0x3922a],ecx        # 0x140087728
   14004e4fe:	je     0x14004e513
   14004e500:	cmp    QWORD PTR [rax+0xc0],0x0
   14004e508:	je     0x14004e513
   14004e50a:	mov    rbx,QWORD PTR [rax+0xb8]
   14004e511:	jmp    0x14004e581
   14004e513:	mov    ecx,0xd
   14004e518:	call   0x140052e40
   14004e51d:	nop
   14004e51e:	mov    rbx,QWORD PTR [rdi+0xb8]
   14004e525:	mov    QWORD PTR [rsp+0x30],rbx
   14004e52a:	cmp    rbx,QWORD PTR [rip+0x390ef]        # 0x140087620
   14004e531:	je     0x14004e577
   14004e533:	test   rbx,rbx
   14004e536:	je     0x14004e554
   14004e538:	lock add DWORD PTR [rbx],0xffffffff
   14004e53c:	jne    0x14004e554
   14004e53e:	lea    rax,[rip+0x38cab]        # 0x1400871f0
   14004e545:	mov    rcx,QWORD PTR [rsp+0x30]
   14004e54a:	cmp    rcx,rax
   14004e54d:	je     0x14004e554
   14004e54f:	call   0x1400485c0
   14004e554:	mov    rax,QWORD PTR [rip+0x390c5]        # 0x140087620
   14004e55b:	mov    QWORD PTR [rdi+0xb8],rax
   14004e562:	mov    rax,QWORD PTR [rip+0x390b7]        # 0x140087620
   14004e569:	mov    QWORD PTR [rsp+0x30],rax
   14004e56e:	lock add DWORD PTR [rax],0x1
   14004e572:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e577:	mov    ecx,0xd
   14004e57c:	call   0x140052d10
   14004e581:	test   rbx,rbx
   14004e584:	jne    0x14004e58e
   14004e586:	lea    ecx,[rbx+0x20]
   14004e589:	call   0x140048190
   14004e58e:	mov    rax,rbx
   14004e591:	mov    rbx,QWORD PTR [rsp+0x38]
   14004e596:	add    rsp,0x20
   14004e59a:	pop    rdi
   14004e59b:	ret    
   14004e59c:	int3   
   14004e59d:	int3   
   14004e59e:	int3   
   14004e59f:	int3   
   14004e5a0:	rex push rbp
   14004e5a2:	sub    rsp,0x20
   14004e5a6:	mov    rbp,rdx
   14004e5a9:	mov    ecx,0xd
   14004e5ae:	call   0x140052d10
   14004e5b3:	add    rsp,0x20
   14004e5b7:	pop    rbp
   14004e5b8:	ret    
   14004e5b9:	int3   
   14004e5ba:	int3   
   14004e5bb:	int3   
   14004e5bc:	int3   
   14004e5bd:	int3   
   14004e5be:	int3   
   14004e5bf:	int3   
   14004e5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14004e5c5:	mov    QWORD PTR [rsp+0x10],rbp
   14004e5ca:	mov    QWORD PTR [rsp+0x18],rsi
   14004e5cf:	mov    QWORD PTR [rsp+0x20],rdi
   14004e5d4:	push   r12
   14004e5d6:	sub    rsp,0x20
   14004e5da:	mov    edi,ecx
   14004e5dc:	xor    sil,sil
   14004e5df:	call   0x14004bd60
   14004e5e4:	mov    r12,QWORD PTR [rax+0xc0]
   14004e5eb:	mov    rbp,QWORD PTR [rax+0xb8]
   14004e5f2:	mov    rbx,rax
   14004e5f5:	cmp    r12,QWORD PTR [rip+0x392a4]        # 0x1400878a0
   14004e5fc:	je     0x14004e614
   14004e5fe:	mov    edx,DWORD PTR [rax+0xc8]
   14004e604:	test   DWORD PTR [rip+0x3911e],edx        # 0x140087728
   14004e60a:	jne    0x14004e614
   14004e60c:	call   0x14004f030
   14004e611:	mov    r12,rax
   14004e614:	cmp    rbp,QWORD PTR [rip+0x39005]        # 0x140087620
   14004e61b:	je     0x14004e630
   14004e61d:	mov    ecx,DWORD PTR [rbx+0xc8]
   14004e623:	test   DWORD PTR [rip+0x390ff],ecx        # 0x140087728
   14004e629:	jne    0x14004e630
   14004e62b:	call   0x14004e4e0
   14004e630:	mov    ecx,DWORD PTR [rbx+0xc8]
   14004e636:	test   cl,0x2
   14004e639:	jne    0x14004e647
   14004e63b:	or     ecx,0x2
   14004e63e:	mov    sil,0x1
   14004e641:	mov    DWORD PTR [rbx+0xc8],ecx
   14004e647:	cmp    edi,0xfffffffe
   14004e64a:	mov    DWORD PTR [rip+0x3eb2c],0x0        # 0x14008d180
   14004e654:	jne    0x14004e674
   14004e656:	mov    DWORD PTR [rip+0x3eb20],0x1        # 0x14008d180
   14004e660:	call   QWORD PTR [rip+0x15cfa]        # 0x140064360
   14004e666:	test   sil,sil
   14004e669:	je     0x14004e6af
   14004e66b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14004e672:	jmp    0x14004e6af
   14004e674:	cmp    edi,0xfffffffd
   14004e677:	jne    0x14004e68b
   14004e679:	mov    DWORD PTR [rip+0x3eafd],0x1        # 0x14008d180
   14004e683:	call   QWORD PTR [rip+0x15ccf]        # 0x140064358
   14004e689:	jmp    0x14004e666
   14004e68b:	cmp    edi,0xfffffffc
   14004e68e:	jne    0x14004e6a1
   14004e690:	mov    eax,DWORD PTR [r12+0x4]
   14004e695:	mov    DWORD PTR [rip+0x3eae1],0x1        # 0x14008d180
   14004e69f:	jmp    0x14004e666
   14004e6a1:	test   sil,sil
   14004e6a4:	je     0x14004e6ad
   14004e6a6:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14004e6ad:	mov    eax,edi
   14004e6af:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e6b4:	mov    rbp,QWORD PTR [rsp+0x38]
   14004e6b9:	mov    rsi,QWORD PTR [rsp+0x40]
   14004e6be:	mov    rdi,QWORD PTR [rsp+0x48]
   14004e6c3:	add    rsp,0x20
   14004e6c7:	pop    r12
   14004e6c9:	ret    
   14004e6ca:	int3   
   14004e6cb:	int3   
   14004e6cc:	int3   
   14004e6cd:	int3   
   14004e6ce:	int3   
   14004e6cf:	int3   
   14004e6d0:	rex push rbx
   14004e6d2:	push   rbp
   14004e6d3:	push   rsi
   14004e6d4:	push   rdi
   14004e6d5:	sub    rsp,0x48
   14004e6d9:	mov    rax,QWORD PTR [rip+0x38690]        # 0x140086d70
   14004e6e0:	xor    rax,rsp
   14004e6e3:	mov    QWORD PTR [rsp+0x38],rax
   14004e6e8:	mov    rbx,rdx
   14004e6eb:	call   0x14004e5c0
   14004e6f0:	test   eax,eax
   14004e6f2:	mov    edi,eax
   14004e6f4:	jne    0x14004e781
   14004e6fa:	lea    rdi,[rbx+0x1c]
   14004e6fe:	mov    esi,0x101
   14004e703:	xor    edx,edx
   14004e705:	mov    rcx,rdi
   14004e708:	mov    r8,rsi
   14004e70b:	call   0x140047720
   14004e710:	xor    ebp,ebp
   14004e712:	lea    rdx,[rip+0x38ad7]        # 0x1400871f0
   14004e719:	mov    DWORD PTR [rbx+0x4],ebp
   14004e71c:	mov    DWORD PTR [rbx+0x8],ebp
   14004e71f:	mov    DWORD PTR [rbx+0xc],ebp
   14004e722:	mov    QWORD PTR [rbx+0x10],rbp
   14004e726:	sub    rdx,rbx
   14004e729:	mov    DWORD PTR [rbx+0x18],ebp
   14004e72c:	data16 data16 xchg ax,ax
   14004e730:	movzx  eax,BYTE PTR [rdx+rdi*1]
   14004e734:	add    rdi,0x1
   14004e738:	sub    rsi,0x1
   14004e73c:	mov    BYTE PTR [rdi-0x1],al
   14004e73f:	jne    0x14004e730
   14004e741:	lea    r9,[rip+0x38aa9]        # 0x1400871f1
   14004e748:	lea    rcx,[rbx+0x11d]
   14004e74f:	mov    r8d,0x80
   14004e755:	sub    r9,rbx
   14004e758:	data16 data16 xchg ax,ax
   14004e75c:	data16 data16 xchg ax,ax
   14004e760:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004e764:	add    rcx,0x2
   14004e768:	sub    r8,0x1
   14004e76c:	mov    BYTE PTR [rcx-0x2],al
   14004e76f:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   14004e775:	mov    BYTE PTR [rcx-0x1],al
   14004e778:	jne    0x14004e760
   14004e77a:	xor    eax,eax
   14004e77c:	jmp    0x14004ea76
   14004e781:	mov    QWORD PTR [rsp+0x80],r12
   14004e789:	xor    ebp,ebp
   14004e78b:	mov    QWORD PTR [rsp+0x40],r13
   14004e790:	lea    r13,[rip+0x38e99]        # 0x140087630
   14004e797:	mov    ecx,ebp
   14004e799:	mov    r12,rbp
   14004e79c:	mov    rax,r13
   14004e79f:	nop
   14004e7a0:	cmp    DWORD PTR [rax],edi
   14004e7a2:	je     0x14004e94b
   14004e7a8:	add    ecx,0x1
   14004e7ab:	add    r12,0x1
   14004e7af:	add    rax,0x30
   14004e7b3:	cmp    ecx,0x5
   14004e7b6:	jb     0x14004e7a0
   14004e7b8:	cmp    edi,0xfde8
   14004e7be:	je     0x14004e943
   14004e7c4:	cmp    edi,0xfde9
   14004e7ca:	je     0x14004e943
   14004e7d0:	movzx  ecx,di
   14004e7d3:	call   QWORD PTR [rip+0x15b8f]        # 0x140064368
   14004e7d9:	test   eax,eax
   14004e7db:	je     0x14004e943
   14004e7e1:	lea    rdx,[rsp+0x20]
   14004e7e6:	mov    ecx,edi
   14004e7e8:	call   QWORD PTR [rip+0x15b62]        # 0x140064350
   14004e7ee:	test   eax,eax
   14004e7f0:	je     0x14004e92e
   14004e7f6:	lea    rcx,[rbx+0x1c]
   14004e7fa:	mov    r8d,0x101
   14004e800:	xor    edx,edx
   14004e802:	call   0x140047720
   14004e807:	cmp    DWORD PTR [rsp+0x20],0x1
   14004e80c:	mov    DWORD PTR [rbx+0x4],edi
   14004e80f:	mov    DWORD PTR [rbx+0xc],ebp
   14004e812:	jbe    0x14004e91f
   14004e818:	cmp    BYTE PTR [rsp+0x26],bpl
   14004e81d:	lea    rdx,[rsp+0x26]
   14004e822:	je     0x14004e859
   14004e824:	movzx  eax,BYTE PTR [rdx+0x1]
   14004e828:	test   al,al
   14004e82a:	je     0x14004e859
   14004e82c:	movzx  r8d,BYTE PTR [rdx]
   14004e830:	movzx  ecx,al
   14004e833:	cmp    r8d,ecx
   14004e836:	ja     0x14004e850
   14004e838:	sub    ecx,r8d
   14004e83b:	lea    rax,[r8+rbx*1+0x1d]
   14004e840:	add    ecx,0x1
   14004e843:	or     BYTE PTR [rax],0x4
   14004e846:	add    rax,0x1
   14004e84a:	sub    rcx,0x1
   14004e84e:	jne    0x14004e843
   14004e850:	add    rdx,0x2
   14004e854:	cmp    BYTE PTR [rdx],bpl
   14004e857:	jne    0x14004e824
   14004e859:	lea    rax,[rbx+0x1f]
   14004e85d:	mov    ecx,0x7f
   14004e862:	xchg   ax,ax
   14004e864:	data16 data16 xchg ax,ax
   14004e868:	data16 data16 xchg ax,ax
   14004e86c:	data16 data16 xchg ax,ax
   14004e870:	or     BYTE PTR [rax-0x1],0x8
   14004e874:	or     BYTE PTR [rax],0x8
   14004e877:	add    rax,0x2
   14004e87b:	sub    rcx,0x1
   14004e87f:	jne    0x14004e870
   14004e881:	mov    ecx,DWORD PTR [rbx+0x4]
   14004e884:	sub    ecx,0x3a4
   14004e88a:	je     0x14004e904
   14004e88c:	sub    ecx,0x4
   14004e88f:	je     0x14004e8e9
   14004e891:	sub    ecx,0xd
   14004e894:	je     0x14004e8ce
   14004e896:	cmp    ecx,0x1
   14004e899:	je     0x14004e8b3
   14004e89b:	mov    DWORD PTR [rbx+0x8],0x1
   14004e8a2:	mov    eax,ebp
   14004e8a4:	mov    DWORD PTR [rbx+0xc],eax
   14004e8a7:	mov    QWORD PTR [rbx+0x10],rbp
   14004e8ab:	mov    DWORD PTR [rbx+0x18],ebp
   14004e8ae:	jmp    0x14004ea5f
   14004e8b3:	mov    DWORD PTR [rbx+0x8],0x1
   14004e8ba:	mov    eax,0x404
   14004e8bf:	mov    DWORD PTR [rbx+0xc],eax
   14004e8c2:	mov    QWORD PTR [rbx+0x10],rbp
   14004e8c6:	mov    DWORD PTR [rbx+0x18],ebp
   14004e8c9:	jmp    0x14004ea5f
   14004e8ce:	mov    DWORD PTR [rbx+0x8],0x1
   14004e8d5:	mov    eax,0x412
   14004e8da:	mov    DWORD PTR [rbx+0xc],eax
   14004e8dd:	mov    QWORD PTR [rbx+0x10],rbp
   14004e8e1:	mov    DWORD PTR [rbx+0x18],ebp
   14004e8e4:	jmp    0x14004ea5f
   14004e8e9:	mov    DWORD PTR [rbx+0x8],0x1
   14004e8f0:	mov    eax,0x804
   14004e8f5:	mov    DWORD PTR [rbx+0xc],eax
   14004e8f8:	mov    QWORD PTR [rbx+0x10],rbp
   14004e8fc:	mov    DWORD PTR [rbx+0x18],ebp
   14004e8ff:	jmp    0x14004ea5f
   14004e904:	mov    DWORD PTR [rbx+0x8],0x1
   14004e90b:	mov    eax,0x411
   14004e910:	mov    DWORD PTR [rbx+0xc],eax
   14004e913:	mov    QWORD PTR [rbx+0x10],rbp
   14004e917:	mov    DWORD PTR [rbx+0x18],ebp
   14004e91a:	jmp    0x14004ea5f
   14004e91f:	mov    DWORD PTR [rbx+0x8],ebp
   14004e922:	mov    QWORD PTR [rbx+0x10],rbp
   14004e926:	mov    DWORD PTR [rbx+0x18],ebp
   14004e929:	jmp    0x14004ea5f
   14004e92e:	cmp    DWORD PTR [rip+0x3e84c],ebp        # 0x14008d180
   14004e934:	je     0x14004e943
   14004e936:	mov    rcx,rbx
   14004e939:	call   0x14004e210
   14004e93e:	jmp    0x14004ea67
   14004e943:	or     eax,0xffffffff
   14004e946:	jmp    0x14004ea69
   14004e94b:	lea    rcx,[rbx+0x1c]
   14004e94f:	mov    r8d,0x101
   14004e955:	xor    edx,edx
   14004e957:	call   0x140047720
   14004e95c:	lea    r9,[r12+r12*2]
   14004e960:	lea    rax,[rip+0x38cd9]        # 0x140087640
   14004e967:	shl    r9,0x4
   14004e96b:	lea    r11,[rip+0x38cb6]        # 0x140087628
   14004e972:	mov    r10d,0x4
   14004e978:	add    r9,rax
   14004e97b:	xchg   ax,ax
   14004e97d:	data16 xchg ax,ax
   14004e980:	cmp    BYTE PTR [r9],bpl
   14004e983:	mov    r8,r9
   14004e986:	je     0x14004e9d0
   14004e988:	data16 data16 xchg ax,ax
   14004e98c:	data16 data16 xchg ax,ax
   14004e990:	movzx  eax,BYTE PTR [r8+0x1]
   14004e995:	test   al,al
   14004e997:	je     0x14004e9d0
   14004e999:	movzx  edx,BYTE PTR [r8]
   14004e99d:	movzx  eax,al
   14004e9a0:	cmp    edx,eax
   14004e9a2:	ja     0x14004e9c7
   14004e9a4:	lea    rcx,[rdx+rbx*1+0x1d]
   14004e9a9:	data16 xchg ax,ax
   14004e9ac:	data16 data16 xchg ax,ax
   14004e9b0:	movzx  eax,BYTE PTR [r11]
   14004e9b4:	add    edx,0x1
   14004e9b7:	add    rcx,0x1
   14004e9bb:	or     BYTE PTR [rcx-0x1],al
   14004e9be:	movzx  eax,BYTE PTR [r8+0x1]
   14004e9c3:	cmp    edx,eax
   14004e9c5:	jbe    0x14004e9b0
   14004e9c7:	add    r8,0x2
   14004e9cb:	cmp    BYTE PTR [r8],bpl
   14004e9ce:	jne    0x14004e990
   14004e9d0:	add    r9,0x8
   14004e9d4:	add    r11,0x1
   14004e9d8:	sub    r10,0x1
   14004e9dc:	jne    0x14004e980
   14004e9de:	mov    DWORD PTR [rbx+0x4],edi
   14004e9e1:	sub    edi,0x3a4
   14004e9e7:	mov    DWORD PTR [rbx+0x8],0x1
   14004e9ee:	je     0x14004ea14
   14004e9f0:	sub    edi,0x4
   14004e9f3:	je     0x14004ea0d
   14004e9f5:	sub    edi,0xd
   14004e9f8:	je     0x14004ea06
   14004e9fa:	cmp    edi,0x1
   14004e9fd:	jne    0x14004ea19
   14004e9ff:	mov    ebp,0x404
   14004ea04:	jmp    0x14004ea19
   14004ea06:	mov    ebp,0x412
   14004ea0b:	jmp    0x14004ea19
   14004ea0d:	mov    ebp,0x804
   14004ea12:	jmp    0x14004ea19
   14004ea14:	mov    ebp,0x411
   14004ea19:	mov    DWORD PTR [rbx+0xc],ebp
   14004ea1c:	lea    rcx,[r12+r12*2]
   14004ea20:	add    rcx,rcx
   14004ea23:	movzx  eax,WORD PTR [r13+rcx*8+0x4]
   14004ea29:	mov    WORD PTR [rbx+0x10],ax
   14004ea2d:	movzx  eax,WORD PTR [r13+rcx*8+0x6]
   14004ea33:	mov    WORD PTR [rbx+0x12],ax
   14004ea37:	movzx  eax,WORD PTR [r13+rcx*8+0x8]
   14004ea3d:	mov    WORD PTR [rbx+0x14],ax
   14004ea41:	movzx  eax,WORD PTR [r13+rcx*8+0xa]
   14004ea47:	mov    WORD PTR [rbx+0x16],ax
   14004ea4b:	movzx  eax,WORD PTR [r13+rcx*8+0xc]
   14004ea51:	mov    WORD PTR [rbx+0x18],ax
   14004ea55:	movzx  eax,WORD PTR [r13+rcx*8+0xe]
   14004ea5b:	mov    WORD PTR [rbx+0x1a],ax
   14004ea5f:	mov    rcx,rbx
   14004ea62:	call   0x14004e2c0
   14004ea67:	xor    eax,eax
   14004ea69:	mov    r12,QWORD PTR [rsp+0x80]
   14004ea71:	mov    r13,QWORD PTR [rsp+0x40]
   14004ea76:	mov    rcx,QWORD PTR [rsp+0x38]
   14004ea7b:	xor    rcx,rsp
   14004ea7e:	call   0x140046470
   14004ea83:	add    rsp,0x48
   14004ea87:	pop    rdi
   14004ea88:	pop    rsi
   14004ea89:	pop    rbp
   14004ea8a:	pop    rbx
   14004ea8b:	ret    
   14004ea8c:	int3   
   14004ea8d:	int3   
   14004ea8e:	int3   
   14004ea8f:	int3   
   14004ea90:	mov    QWORD PTR [rsp+0x8],rbx
   14004ea95:	mov    QWORD PTR [rsp+0x10],rsi
   14004ea9a:	mov    QWORD PTR [rsp+0x18],rdi
   14004ea9f:	push   r12
   14004eaa1:	push   r13
   14004eaa3:	push   r14
   14004eaa5:	sub    rsp,0x30
   14004eaa9:	mov    edi,ecx
   14004eaab:	or     r14d,0xffffffff
   14004eaaf:	call   0x14004bd60
   14004eab4:	mov    rsi,rax
   14004eab7:	call   0x14004e4e0
   14004eabc:	mov    rbx,QWORD PTR [rsi+0xb8]
   14004eac3:	mov    ecx,edi
   14004eac5:	call   0x14004e5c0
   14004eaca:	mov    r12d,eax
   14004eacd:	cmp    eax,DWORD PTR [rbx+0x4]
   14004ead0:	je     0x14004ec6f
   14004ead6:	mov    ecx,0x220
   14004eadb:	call   0x14004de20
   14004eae0:	mov    rdi,rax
   14004eae3:	test   rax,rax
   14004eae6:	je     0x14004ec74
   14004eaec:	mov    rdx,QWORD PTR [rsi+0xb8]
   14004eaf3:	mov    rcx,rax
   14004eaf6:	mov    r8d,0x220
   14004eafc:	call   0x1400478c0
   14004eb01:	xor    ebx,ebx
   14004eb03:	mov    DWORD PTR [rdi],ebx
   14004eb05:	mov    rdx,rdi
   14004eb08:	mov    ecx,r12d
   14004eb0b:	call   0x14004e6d0
   14004eb10:	mov    r14d,eax
   14004eb13:	test   eax,eax
   14004eb15:	jne    0x14004ec49
   14004eb1b:	mov    rcx,QWORD PTR [rsi+0xb8]
   14004eb22:	lock add DWORD PTR [rcx],0xffffffff
   14004eb26:	jne    0x14004eb42
   14004eb28:	mov    rcx,QWORD PTR [rsi+0xb8]
   14004eb2f:	lea    r12,[rip+0x386ba]        # 0x1400871f0
   14004eb36:	cmp    rcx,r12
   14004eb39:	je     0x14004eb49
   14004eb3b:	call   0x1400485c0
   14004eb40:	jmp    0x14004eb49
   14004eb42:	lea    r12,[rip+0x386a7]        # 0x1400871f0
   14004eb49:	mov    QWORD PTR [rsi+0xb8],rdi
   14004eb50:	lock add DWORD PTR [rdi],0x1
   14004eb54:	test   BYTE PTR [rsi+0xc8],0x2
   14004eb5b:	jne    0x14004ec74
   14004eb61:	test   BYTE PTR [rip+0x38bc0],0x1        # 0x140087728
   14004eb68:	jne    0x14004ec74
   14004eb6e:	mov    ecx,0xd
   14004eb73:	call   0x140052e40
   14004eb78:	nop
   14004eb79:	mov    eax,DWORD PTR [rdi+0x4]
   14004eb7c:	mov    DWORD PTR [rip+0x3e612],eax        # 0x14008d194
   14004eb82:	mov    eax,DWORD PTR [rdi+0x8]
   14004eb85:	mov    DWORD PTR [rip+0x3e60d],eax        # 0x14008d198
   14004eb8b:	mov    eax,DWORD PTR [rdi+0xc]
   14004eb8e:	mov    DWORD PTR [rip+0x3e608],eax        # 0x14008d19c
   14004eb94:	mov    edx,ebx
   14004eb96:	mov    DWORD PTR [rsp+0x20],ebx
   14004eb9a:	lea    r8,[rip+0xfffffffffffb145f]        # 0x140000000
   14004eba1:	cmp    edx,0x5
   14004eba4:	jge    0x14004ebc0
   14004eba6:	movsxd rcx,edx
   14004eba9:	movzx  eax,WORD PTR [rdi+rcx*2+0x10]
   14004ebae:	mov    WORD PTR [r8+rcx*2+0x8d188],ax
   14004ebb7:	add    edx,0x1
   14004ebba:	mov    DWORD PTR [rsp+0x20],edx
   14004ebbe:	jmp    0x14004eba1
   14004ebc0:	mov    edx,ebx
   14004ebc2:	mov    DWORD PTR [rsp+0x20],ebx
   14004ebc6:	cmp    edx,0x101
   14004ebcc:	jge    0x14004ebe7
   14004ebce:	movsxd rcx,edx
   14004ebd1:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1c]
   14004ebd6:	mov    BYTE PTR [rcx+r8*1+0x87410],al
   14004ebde:	add    edx,0x1
   14004ebe1:	mov    DWORD PTR [rsp+0x20],edx
   14004ebe5:	jmp    0x14004ebc6
   14004ebe7:	mov    DWORD PTR [rsp+0x20],ebx
   14004ebeb:	xchg   ax,ax
   14004ebed:	data16 xchg ax,ax
   14004ebf0:	cmp    ebx,0x100
   14004ebf6:	jge    0x14004ec14
   14004ebf8:	movsxd rcx,ebx
   14004ebfb:	movzx  eax,BYTE PTR [rcx+rdi*1+0x11d]
   14004ec03:	mov    BYTE PTR [rcx+r8*1+0x87520],al
   14004ec0b:	add    ebx,0x1
   14004ec0e:	mov    DWORD PTR [rsp+0x20],ebx
   14004ec12:	jmp    0x14004ebf0
   14004ec14:	mov    rax,QWORD PTR [rip+0x38a05]        # 0x140087620
   14004ec1b:	lock add DWORD PTR [rax],0xffffffff
   14004ec1f:	jne    0x14004ec32
   14004ec21:	mov    rcx,QWORD PTR [rip+0x389f8]        # 0x140087620
   14004ec28:	cmp    rcx,r12
   14004ec2b:	je     0x14004ec32
   14004ec2d:	call   0x1400485c0
   14004ec32:	mov    QWORD PTR [rip+0x389e7],rdi        # 0x140087620
   14004ec39:	lock add DWORD PTR [rdi],0x1
   14004ec3d:	mov    ecx,0xd
   14004ec42:	call   0x140052d10
   14004ec47:	jmp    0x14004ec74
   14004ec49:	cmp    eax,0xffffffff
   14004ec4c:	jne    0x14004ec74
   14004ec4e:	lea    r12,[rip+0x3859b]        # 0x1400871f0
   14004ec55:	cmp    rdi,r12
   14004ec58:	je     0x14004ec62
   14004ec5a:	mov    rcx,rdi
   14004ec5d:	call   0x1400485c0
   14004ec62:	call   0x140048680
   14004ec67:	mov    DWORD PTR [rax],0x16
   14004ec6d:	jmp    0x14004ec74
   14004ec6f:	xor    ebx,ebx
   14004ec71:	mov    r14d,ebx
   14004ec74:	mov    eax,r14d
   14004ec77:	mov    rbx,QWORD PTR [rsp+0x50]
   14004ec7c:	mov    rsi,QWORD PTR [rsp+0x58]
   14004ec81:	mov    rdi,QWORD PTR [rsp+0x60]
   14004ec86:	add    rsp,0x30
   14004ec8a:	pop    r14
   14004ec8c:	pop    r13
   14004ec8e:	pop    r12
   14004ec90:	ret    
   14004ec91:	int3   
   14004ec92:	int3   
   14004ec93:	int3   
   14004ec94:	int3   
   14004ec95:	int3   
   14004ec96:	int3   
   14004ec97:	int3   
   14004ec98:	int3   
   14004ec99:	int3   
   14004ec9a:	int3   
   14004ec9b:	int3   
   14004ec9c:	int3   
   14004ec9d:	int3   
   14004ec9e:	int3   
   14004ec9f:	int3   
   14004eca0:	rex push rbp
   14004eca2:	sub    rsp,0x20
   14004eca6:	mov    rbp,rdx
   14004eca9:	mov    ecx,0xd
   14004ecae:	call   0x140052d10
   14004ecb3:	add    rsp,0x20
   14004ecb7:	pop    rbp
   14004ecb8:	ret    
   14004ecb9:	int3   
   14004ecba:	int3   
   14004ecbb:	int3   
   14004ecbc:	int3   
   14004ecbd:	int3   
   14004ecbe:	int3   
   14004ecbf:	int3   
   14004ecc0:	sub    rsp,0x28
   14004ecc4:	cmp    DWORD PTR [rip+0x3fc4d],0x0        # 0x14008e918
   14004eccb:	jne    0x14004ece1
   14004eccd:	mov    ecx,0xfffffffd
   14004ecd2:	call   0x14004ea90
   14004ecd7:	mov    DWORD PTR [rip+0x3fc37],0x1        # 0x14008e918
   14004ece1:	xor    eax,eax
   14004ece3:	add    rsp,0x28
   14004ece7:	ret    
   14004ece8:	int3   
   14004ece9:	int3   
   14004ecea:	int3   
   14004eceb:	int3   
   14004ecec:	int3   
   14004eced:	int3   
   14004ecee:	int3   
   14004ecef:	int3   
   14004ecf0:	mov    QWORD PTR [rsp+0x8],rbx
   14004ecf5:	mov    QWORD PTR [rsp+0x10],rbp
   14004ecfa:	mov    QWORD PTR [rsp+0x18],rsi
   14004ecff:	push   rdi
   14004ed00:	sub    rsp,0x20
   14004ed04:	mov    rax,QWORD PTR [rcx+0x128]
   14004ed0b:	mov    rdi,rcx
   14004ed0e:	test   rax,rax
   14004ed11:	je     0x14004ed8c
   14004ed13:	lea    rcx,[rip+0x394d6]        # 0x1400881f0
   14004ed1a:	cmp    rax,rcx
   14004ed1d:	je     0x14004ed8c
   14004ed1f:	mov    rax,QWORD PTR [rdi+0x110]
   14004ed26:	test   rax,rax
   14004ed29:	je     0x14004ed8c
   14004ed2b:	cmp    DWORD PTR [rax],0x0
   14004ed2e:	jne    0x14004ed8c
   14004ed30:	mov    rcx,QWORD PTR [rdi+0x120]
   14004ed37:	test   rcx,rcx
   14004ed3a:	je     0x14004ed52
   14004ed3c:	cmp    DWORD PTR [rcx],0x0
   14004ed3f:	jne    0x14004ed52
   14004ed41:	call   0x1400485c0
   14004ed46:	mov    rcx,QWORD PTR [rdi+0x128]
   14004ed4d:	call   0x140058950
   14004ed52:	mov    rcx,QWORD PTR [rdi+0x118]
   14004ed59:	test   rcx,rcx
   14004ed5c:	je     0x14004ed74
   14004ed5e:	cmp    DWORD PTR [rcx],0x0
   14004ed61:	jne    0x14004ed74
   14004ed63:	call   0x1400485c0
   14004ed68:	mov    rcx,QWORD PTR [rdi+0x128]
   14004ed6f:	call   0x140058900
   14004ed74:	mov    rcx,QWORD PTR [rdi+0x110]
   14004ed7b:	call   0x1400485c0
   14004ed80:	mov    rcx,QWORD PTR [rdi+0x128]
   14004ed87:	call   0x1400485c0
   14004ed8c:	mov    rax,QWORD PTR [rdi+0x130]
   14004ed93:	test   rax,rax
   14004ed96:	je     0x14004eddc
   14004ed98:	cmp    DWORD PTR [rax],0x0
   14004ed9b:	jne    0x14004eddc
   14004ed9d:	mov    rcx,QWORD PTR [rdi+0x138]
   14004eda4:	sub    rcx,0xfe
   14004edab:	call   0x1400485c0
   14004edb0:	mov    rcx,QWORD PTR [rdi+0x148]
   14004edb7:	add    rcx,0xffffffffffffff80
   14004edbb:	call   0x1400485c0
   14004edc0:	mov    rcx,QWORD PTR [rdi+0x150]
   14004edc7:	add    rcx,0xffffffffffffff80
   14004edcb:	call   0x1400485c0
   14004edd0:	mov    rcx,QWORD PTR [rdi+0x130]
   14004edd7:	call   0x1400485c0
   14004eddc:	mov    rcx,QWORD PTR [rdi+0x158]
   14004ede3:	lea    rax,[rip+0x39286]        # 0x140088070
   14004edea:	cmp    rcx,rax
   14004eded:	je     0x14004ee09
   14004edef:	cmp    DWORD PTR [rcx+0x160],0x0
   14004edf6:	jne    0x14004ee09
   14004edf8:	call   0x140058710
   14004edfd:	mov    rcx,QWORD PTR [rdi+0x158]
   14004ee04:	call   0x1400485c0
   14004ee09:	lea    rbx,[rdi+0x58]
   14004ee0d:	mov    esi,0x6
   14004ee12:	lea    rbp,[rip+0x38917]        # 0x140087730
   14004ee19:	data16 xchg ax,ax
   14004ee1c:	data16 data16 xchg ax,ax
   14004ee20:	cmp    QWORD PTR [rbx-0x10],rbp
   14004ee24:	je     0x14004ee38
   14004ee26:	mov    rcx,QWORD PTR [rbx]
   14004ee29:	test   rcx,rcx
   14004ee2c:	je     0x14004ee38
   14004ee2e:	cmp    DWORD PTR [rcx],0x0
   14004ee31:	jne    0x14004ee38
   14004ee33:	call   0x1400485c0
   14004ee38:	cmp    QWORD PTR [rbx-0x8],0x0
   14004ee3d:	je     0x14004ee52
   14004ee3f:	mov    rcx,QWORD PTR [rbx+0x8]
   14004ee43:	test   rcx,rcx
   14004ee46:	je     0x14004ee52
   14004ee48:	cmp    DWORD PTR [rcx],0x0
   14004ee4b:	jne    0x14004ee52
   14004ee4d:	call   0x1400485c0
   14004ee52:	add    rbx,0x20
   14004ee56:	sub    rsi,0x1
   14004ee5a:	jne    0x14004ee20
   14004ee5c:	mov    rcx,rdi
   14004ee5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ee64:	mov    rbp,QWORD PTR [rsp+0x38]
   14004ee69:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ee6e:	add    rsp,0x20
   14004ee72:	pop    rdi
   14004ee73:	jmp    0x1400485c0
   14004ee78:	int3   
   14004ee79:	int3   
   14004ee7a:	int3   
   14004ee7b:	int3   
   14004ee7c:	int3   
   14004ee7d:	int3   
   14004ee7e:	int3   
   14004ee7f:	int3   
   14004ee80:	mov    rdx,rcx
   14004ee83:	lock add DWORD PTR [rcx],0x1
   14004ee87:	mov    rax,QWORD PTR [rcx+0x110]
   14004ee8e:	test   rax,rax
   14004ee91:	je     0x14004ee97
   14004ee93:	lock add DWORD PTR [rax],0x1
   14004ee97:	mov    rax,QWORD PTR [rcx+0x120]
   14004ee9e:	test   rax,rax
   14004eea1:	je     0x14004eea7
   14004eea3:	lock add DWORD PTR [rax],0x1
   14004eea7:	mov    rax,QWORD PTR [rcx+0x118]
   14004eeae:	test   rax,rax
   14004eeb1:	je     0x14004eeb7
   14004eeb3:	lock add DWORD PTR [rax],0x1
   14004eeb7:	mov    rax,QWORD PTR [rcx+0x130]
   14004eebe:	test   rax,rax
   14004eec1:	je     0x14004eec7
   14004eec3:	lock add DWORD PTR [rax],0x1
   14004eec7:	lea    rax,[rcx+0x58]
   14004eecb:	mov    r8d,0x6
   14004eed1:	lea    r9,[rip+0x38858]        # 0x140087730
   14004eed8:	cmp    QWORD PTR [rax-0x10],r9
   14004eedc:	je     0x14004eeea
   14004eede:	mov    rcx,QWORD PTR [rax]
   14004eee1:	test   rcx,rcx
   14004eee4:	je     0x14004eeea
   14004eee6:	lock add DWORD PTR [rcx],0x1
   14004eeea:	cmp    QWORD PTR [rax-0x8],0x0
   14004eeef:	je     0x14004eefe
   14004eef1:	mov    rcx,QWORD PTR [rax+0x8]
   14004eef5:	test   rcx,rcx
   14004eef8:	je     0x14004eefe
   14004eefa:	lock add DWORD PTR [rcx],0x1
   14004eefe:	add    rax,0x20
   14004ef02:	sub    r8,0x1
   14004ef06:	jne    0x14004eed8
   14004ef08:	mov    rax,QWORD PTR [rdx+0x158]
   14004ef0f:	lock add DWORD PTR [rax+0x160],0x1
   14004ef17:	ret    
   14004ef18:	int3   
   14004ef19:	int3   
   14004ef1a:	int3   
   14004ef1b:	int3   
   14004ef1c:	int3   
   14004ef1d:	int3   
   14004ef1e:	int3   
   14004ef1f:	int3   
   14004ef20:	test   rcx,rcx
   14004ef23:	je     0x14004efbf
   14004ef29:	lock add DWORD PTR [rcx],0xffffffff
   14004ef2d:	mov    rax,QWORD PTR [rcx+0x110]
   14004ef34:	test   rax,rax
   14004ef37:	je     0x14004ef3d
   14004ef39:	lock add DWORD PTR [rax],0xffffffff
   14004ef3d:	mov    rax,QWORD PTR [rcx+0x120]
   14004ef44:	test   rax,rax
   14004ef47:	je     0x14004ef4d
   14004ef49:	lock add DWORD PTR [rax],0xffffffff
   14004ef4d:	mov    rax,QWORD PTR [rcx+0x118]
   14004ef54:	test   rax,rax
   14004ef57:	je     0x14004ef5d
   14004ef59:	lock add DWORD PTR [rax],0xffffffff
   14004ef5d:	mov    rax,QWORD PTR [rcx+0x130]
   14004ef64:	test   rax,rax
   14004ef67:	je     0x14004ef6d
   14004ef69:	lock add DWORD PTR [rax],0xffffffff
   14004ef6d:	lea    rax,[rcx+0x58]
   14004ef71:	mov    r8d,0x6
   14004ef77:	lea    r9,[rip+0x387b2]        # 0x140087730
   14004ef7e:	xchg   ax,ax
   14004ef80:	cmp    QWORD PTR [rax-0x10],r9
   14004ef84:	je     0x14004ef92
   14004ef86:	mov    rdx,QWORD PTR [rax]
   14004ef89:	test   rdx,rdx
   14004ef8c:	je     0x14004ef92
   14004ef8e:	lock add DWORD PTR [rdx],0xffffffff
   14004ef92:	cmp    QWORD PTR [rax-0x8],0x0
   14004ef97:	je     0x14004efa6
   14004ef99:	mov    rdx,QWORD PTR [rax+0x8]
   14004ef9d:	test   rdx,rdx
   14004efa0:	je     0x14004efa6
   14004efa2:	lock add DWORD PTR [rdx],0xffffffff
   14004efa6:	add    rax,0x20
   14004efaa:	sub    r8,0x1
   14004efae:	jne    0x14004ef80
   14004efb0:	mov    rax,QWORD PTR [rcx+0x158]
   14004efb7:	lock add DWORD PTR [rax+0x160],0xffffffff
   14004efbf:	mov    rax,rcx
   14004efc2:	ret    
   14004efc3:	int3   
   14004efc4:	int3   
   14004efc5:	int3   
   14004efc6:	int3   
   14004efc7:	int3   
   14004efc8:	int3   
   14004efc9:	int3   
   14004efca:	int3   
   14004efcb:	int3   
   14004efcc:	int3   
   14004efcd:	int3   
   14004efce:	int3   
   14004efcf:	int3   
   14004efd0:	rex push rbx
   14004efd2:	sub    rsp,0x20
   14004efd6:	test   rdx,rdx
   14004efd9:	mov    rbx,rdx
   14004efdc:	je     0x14004f023
   14004efde:	test   rcx,rcx
   14004efe1:	je     0x14004f023
   14004efe3:	mov    r10,QWORD PTR [rcx]
   14004efe6:	cmp    r10,rdx
   14004efe9:	je     0x14004f01a
   14004efeb:	mov    QWORD PTR [rcx],rdx
   14004efee:	mov    rcx,rdx
   14004eff1:	call   0x14004ee80
   14004eff6:	test   r10,r10
   14004eff9:	je     0x14004f01a
   14004effb:	mov    rcx,r10
   14004effe:	call   0x14004ef20
   14004f003:	cmp    DWORD PTR [r10],0x0
   14004f007:	jne    0x14004f01a
   14004f009:	lea    rax,[rip+0x38730]        # 0x140087740
   14004f010:	cmp    r10,rax
   14004f013:	je     0x14004f01a
   14004f015:	call   0x14004ecf0
   14004f01a:	mov    rax,rbx
   14004f01d:	add    rsp,0x20
   14004f021:	pop    rbx
   14004f022:	ret    
   14004f023:	xor    eax,eax
   14004f025:	add    rsp,0x20
   14004f029:	pop    rbx
   14004f02a:	ret    
   14004f02b:	int3   
   14004f02c:	int3   
   14004f02d:	int3   
   14004f02e:	int3   
   14004f02f:	int3   
   14004f030:	rex push rbx
   14004f032:	sub    rsp,0x20
   14004f036:	call   0x14004bd60
   14004f03b:	mov    rbx,rax
   14004f03e:	mov    ecx,DWORD PTR [rax+0xc8]
   14004f044:	test   DWORD PTR [rip+0x386de],ecx        # 0x140087728
   14004f04a:	je     0x14004f064
   14004f04c:	cmp    QWORD PTR [rax+0xc0],0x0
   14004f054:	je     0x14004f064
   14004f056:	call   0x14004bd60
   14004f05b:	mov    rbx,QWORD PTR [rax+0xc0]
   14004f062:	jmp    0x14004f08f
   14004f064:	mov    ecx,0xc
   14004f069:	call   0x140052e40
   14004f06e:	nop
   14004f06f:	lea    rcx,[rbx+0xc0]
   14004f076:	mov    rdx,QWORD PTR [rip+0x38823]        # 0x1400878a0
   14004f07d:	call   0x14004efd0
   14004f082:	mov    rbx,rax
   14004f085:	mov    ecx,0xc
   14004f08a:	call   0x140052d10
   14004f08f:	test   rbx,rbx
   14004f092:	jne    0x14004f09c
   14004f094:	lea    ecx,[rbx+0x20]
   14004f097:	call   0x140048190
   14004f09c:	mov    rax,rbx
   14004f09f:	add    rsp,0x20
   14004f0a3:	pop    rbx
   14004f0a4:	ret    
   14004f0a5:	int3   
   14004f0a6:	int3   
   14004f0a7:	int3   
   14004f0a8:	int3   
   14004f0a9:	int3   
   14004f0aa:	int3   
   14004f0ab:	int3   
   14004f0ac:	int3   
   14004f0ad:	int3   
   14004f0ae:	int3   
   14004f0af:	int3   
   14004f0b0:	rex push rbp
   14004f0b2:	sub    rsp,0x20
   14004f0b6:	mov    rbp,rdx
   14004f0b9:	mov    ecx,0xc
   14004f0be:	call   0x140052d10
   14004f0c3:	add    rsp,0x20
   14004f0c7:	pop    rbp
   14004f0c8:	ret    
   14004f0c9:	int3   
   14004f0ca:	int3   
   14004f0cb:	int3   
   14004f0cc:	int3   
   14004f0cd:	int3   
   14004f0ce:	int3   
   14004f0cf:	int3   
   14004f0d0:	rex push rbp
   14004f0d2:	push   r12
   14004f0d4:	push   r13
   14004f0d6:	push   r14
   14004f0d8:	push   r15
   14004f0da:	sub    rsp,0x60
   14004f0de:	lea    rbp,[rsp+0x40]
   14004f0e3:	mov    QWORD PTR [rbp+0x50],rbx
   14004f0e7:	mov    QWORD PTR [rbp+0x58],rsi
   14004f0eb:	mov    QWORD PTR [rbp+0x60],rdi
   14004f0ef:	mov    rax,QWORD PTR [rip+0x37c7a]        # 0x140086d70
   14004f0f6:	xor    rax,rbp
   14004f0f9:	mov    QWORD PTR [rbp+0x10],rax
   14004f0fd:	mov    r10d,DWORD PTR [rip+0x3e0c4]        # 0x14008d1c8
   14004f104:	xor    r13d,r13d
   14004f107:	mov    r12,r9
   14004f10a:	test   r10d,r10d
   14004f10d:	mov    QWORD PTR [rbp+0x8],r9
   14004f111:	mov    r11d,r8d
   14004f114:	mov    DWORD PTR [rbp+0x0],r8d
   14004f118:	mov    r15d,edx
   14004f11b:	mov    rdi,rcx
   14004f11e:	jne    0x14004f170
   14004f120:	lea    r9d,[r13+0x1]
   14004f124:	lea    r8,[rip+0x1fd19]        # 0x14006ee44
   14004f12b:	mov    edx,0x100
   14004f130:	xor    ecx,ecx
   14004f132:	mov    DWORD PTR [rsp+0x28],r13d
   14004f137:	mov    QWORD PTR [rsp+0x20],r13
   14004f13c:	call   QWORD PTR [rip+0x15236]        # 0x140064378
   14004f142:	test   eax,eax
   14004f144:	je     0x14004f14c
   14004f146:	lea    r10d,[r13+0x1]
   14004f14a:	jmp    0x14004f165
   14004f14c:	call   QWORD PTR [rip+0x154ae]        # 0x140064600
   14004f152:	mov    r10d,DWORD PTR [rip+0x3e06f]        # 0x14008d1c8
   14004f159:	mov    ecx,0x2
   14004f15e:	cmp    eax,0x78
   14004f161:	cmove  r10d,ecx
   14004f165:	mov    r11d,DWORD PTR [rbp+0x0]
   14004f169:	mov    DWORD PTR [rip+0x3e058],r10d        # 0x14008d1c8
   14004f170:	mov    ebx,DWORD PTR [rbp+0x70]
   14004f173:	test   ebx,ebx
   14004f175:	jle    0x14004f19a
   14004f177:	mov    eax,ebx
   14004f179:	mov    rcx,r12
   14004f17c:	data16 data16 xchg ax,ax
   14004f180:	sub    eax,0x1
   14004f183:	or     edx,0xffffffff
   14004f186:	cmp    WORD PTR [rcx],r13w
   14004f18a:	je     0x14004f196
   14004f18c:	add    rcx,0x2
   14004f190:	test   eax,eax
   14004f192:	jne    0x14004f180
   14004f194:	mov    eax,edx
   14004f196:	sub    edx,eax
   14004f198:	add    ebx,edx
   14004f19a:	cmp    r10d,0x1
   14004f19e:	jne    0x14004f1ca
   14004f1a0:	mov    eax,DWORD PTR [rbp+0x80]
   14004f1a6:	mov    r9d,ebx
   14004f1a9:	mov    r8,r12
   14004f1ac:	mov    DWORD PTR [rsp+0x28],eax
   14004f1b0:	mov    rax,QWORD PTR [rbp+0x78]
   14004f1b4:	mov    edx,r11d
   14004f1b7:	mov    ecx,r15d
   14004f1ba:	mov    QWORD PTR [rsp+0x20],rax
   14004f1bf:	call   QWORD PTR [rip+0x151b3]        # 0x140064378
   14004f1c5:	jmp    0x14004f45f
   14004f1ca:	cmp    r10d,0x2
   14004f1ce:	je     0x14004f1d9
   14004f1d0:	test   r10d,r10d
   14004f1d3:	jne    0x14004f45d
   14004f1d9:	test   r15d,r15d
   14004f1dc:	mov    r14d,r13d
   14004f1df:	jne    0x14004f1e8
   14004f1e1:	mov    rax,QWORD PTR [rdi]
   14004f1e4:	mov    r15d,DWORD PTR [rax+0x14]
   14004f1e8:	mov    esi,DWORD PTR [rbp+0x88]
   14004f1ee:	test   esi,esi
   14004f1f0:	jne    0x14004f1f8
   14004f1f2:	mov    rax,QWORD PTR [rdi]
   14004f1f5:	mov    esi,DWORD PTR [rax+0x4]
   14004f1f8:	mov    ecx,r15d
   14004f1fb:	call   0x140058b00
   14004f200:	cmp    esi,eax
   14004f202:	je     0x14004f20a
   14004f204:	cmp    eax,0xffffffff
   14004f207:	cmovne esi,eax
   14004f20a:	mov    QWORD PTR [rsp+0x38],r13
   14004f20f:	mov    QWORD PTR [rsp+0x30],r13
   14004f214:	mov    r9d,ebx
   14004f217:	mov    r8,r12
   14004f21a:	xor    edx,edx
   14004f21c:	mov    ecx,esi
   14004f21e:	mov    DWORD PTR [rsp+0x28],r13d
   14004f223:	mov    QWORD PTR [rsp+0x20],r13
   14004f228:	call   QWORD PTR [rip+0x152c2]        # 0x1400644f0
   14004f22e:	test   eax,eax
   14004f230:	movsxd r13,eax
   14004f233:	je     0x14004f45d
   14004f239:	jle    0x14004f45d
   14004f23f:	xor    edx,edx
   14004f241:	mov    rax,0xffffffffffffffe0
   14004f248:	mov    rcx,r13
   14004f24b:	div    r13
   14004f24e:	cmp    rax,0x1
   14004f252:	jb     0x14004f45d
   14004f258:	add    rcx,0x10
   14004f25c:	movabs rdx,0xffffffffffffff0
   14004f266:	cmp    rcx,0x400
   14004f26d:	ja     0x14004f29f
   14004f26f:	lea    rax,[rcx+0xf]
   14004f273:	cmp    rax,rcx
   14004f276:	ja     0x14004f27b
   14004f278:	mov    rax,rdx
   14004f27b:	and    rax,0xfffffffffffffff0
   14004f27f:	call   0x140063500
   14004f284:	sub    rsp,rax
   14004f287:	lea    r12,[rsp+0x40]
   14004f28c:	test   r12,r12
   14004f28f:	je     0x14004f45d
   14004f295:	mov    DWORD PTR [r12],0xcccc
   14004f29d:	jmp    0x14004f2b2
   14004f29f:	call   0x1400480c0
   14004f2a4:	test   rax,rax
   14004f2a7:	mov    r12,rax
   14004f2aa:	je     0x14004f2b6
   14004f2ac:	mov    DWORD PTR [rax],0xdddd
   14004f2b2:	add    r12,0x10
   14004f2b6:	test   r12,r12
   14004f2b9:	je     0x14004f45d
   14004f2bf:	mov    r8,QWORD PTR [rbp+0x8]
   14004f2c3:	xor    edi,edi
   14004f2c5:	mov    r9d,ebx
   14004f2c8:	mov    QWORD PTR [rsp+0x38],rdi
   14004f2cd:	mov    QWORD PTR [rsp+0x30],rdi
   14004f2d2:	xor    edx,edx
   14004f2d4:	mov    ecx,esi
   14004f2d6:	mov    DWORD PTR [rsp+0x28],r13d
   14004f2db:	mov    QWORD PTR [rsp+0x20],r12
   14004f2e0:	call   QWORD PTR [rip+0x1520a]        # 0x1400644f0
   14004f2e6:	test   eax,eax
   14004f2e8:	je     0x14004f443
   14004f2ee:	mov    edx,DWORD PTR [rbp+0x0]
   14004f2f1:	mov    r9d,r13d
   14004f2f4:	mov    r8,r12
   14004f2f7:	mov    ecx,r15d
   14004f2fa:	mov    DWORD PTR [rsp+0x28],edi
   14004f2fe:	mov    QWORD PTR [rsp+0x20],rdi
   14004f303:	call   QWORD PTR [rip+0x15067]        # 0x140064370
   14004f309:	test   eax,eax
   14004f30b:	movsxd rdi,eax
   14004f30e:	jle    0x14004f443
   14004f314:	xor    edx,edx
   14004f316:	mov    rax,0xffffffffffffffe0
   14004f31d:	mov    rcx,rdi
   14004f320:	div    rdi
   14004f323:	cmp    rax,0x1
   14004f327:	jb     0x14004f443
   14004f32d:	add    rcx,0x10
   14004f331:	cmp    rcx,0x400
   14004f338:	ja     0x14004f36f
   14004f33a:	lea    rax,[rcx+0xf]
   14004f33e:	cmp    rax,rcx
   14004f341:	ja     0x14004f34d
   14004f343:	movabs rax,0xffffffffffffff0
   14004f34d:	and    rax,0xfffffffffffffff0
   14004f351:	call   0x140063500
   14004f356:	sub    rsp,rax
   14004f359:	lea    rbx,[rsp+0x40]
   14004f35e:	test   rbx,rbx
   14004f361:	je     0x14004f443
   14004f367:	mov    DWORD PTR [rbx],0xcccc
   14004f36d:	jmp    0x14004f382
   14004f36f:	call   0x1400480c0
   14004f374:	test   rax,rax
   14004f377:	mov    rbx,rax
   14004f37a:	je     0x14004f386
   14004f37c:	mov    DWORD PTR [rax],0xdddd
   14004f382:	add    rbx,0x10
   14004f386:	test   rbx,rbx
   14004f389:	je     0x14004f443
   14004f38f:	mov    r9d,r13d
   14004f392:	mov    r13d,DWORD PTR [rbp+0x0]
   14004f396:	mov    r8,r12
   14004f399:	mov    ecx,r15d
   14004f39c:	mov    edx,r13d
   14004f39f:	mov    DWORD PTR [rsp+0x28],edi
   14004f3a3:	mov    QWORD PTR [rsp+0x20],rbx
   14004f3a8:	call   QWORD PTR [rip+0x14fc2]        # 0x140064370
   14004f3ae:	test   eax,eax
   14004f3b0:	je     0x14004f431
   14004f3b2:	bt     r13d,0xa
   14004f3b7:	jae    0x14004f3fc
   14004f3b9:	movsxd rax,DWORD PTR [rbp+0x80]
   14004f3c0:	mov    r14d,edi
   14004f3c3:	test   eax,eax
   14004f3c5:	je     0x14004f431
   14004f3c7:	cmp    eax,edi
   14004f3c9:	jg     0x14004f3ce
   14004f3cb:	lea    edi,[rax-0x1]
   14004f3ce:	mov    rcx,QWORD PTR [rbp+0x78]
   14004f3d2:	movsxd r9,edi
   14004f3d5:	mov    rdx,rax
   14004f3d8:	mov    r8,rbx
   14004f3db:	call   0x140057880
   14004f3e0:	test   eax,eax
   14004f3e2:	je     0x14004f431
   14004f3e4:	xor    eax,eax
   14004f3e6:	xor    r9d,r9d
   14004f3e9:	xor    r8d,r8d
   14004f3ec:	xor    edx,edx
   14004f3ee:	xor    ecx,ecx
   14004f3f0:	mov    QWORD PTR [rsp+0x20],rax
   14004f3f5:	call   0x14004e060
   14004f3fa:	jmp    0x14004f431
   14004f3fc:	mov    eax,DWORD PTR [rbp+0x80]
   14004f402:	mov    r9d,edi
   14004f405:	mov    r8,rbx
   14004f408:	test   eax,eax
   14004f40a:	mov    edx,0x1
   14004f40f:	mov    ecx,esi
   14004f411:	jne    0x14004f41b
   14004f413:	xor    eax,eax
   14004f415:	mov    DWORD PTR [rsp+0x28],eax
   14004f419:	jmp    0x14004f423
   14004f41b:	mov    DWORD PTR [rsp+0x28],eax
   14004f41f:	mov    rax,QWORD PTR [rbp+0x78]
   14004f423:	mov    QWORD PTR [rsp+0x20],rax
   14004f428:	call   QWORD PTR [rip+0x151ea]        # 0x140064618
   14004f42e:	mov    r14d,eax
   14004f431:	cmp    DWORD PTR [rbx-0x10],0xdddd
   14004f438:	lea    rcx,[rbx-0x10]
   14004f43c:	jne    0x14004f443
   14004f43e:	call   0x1400485c0
   14004f443:	cmp    DWORD PTR [r12-0x10],0xdddd
   14004f44c:	lea    rcx,[r12-0x10]
   14004f451:	jne    0x14004f458
   14004f453:	call   0x1400485c0
   14004f458:	mov    eax,r14d
   14004f45b:	jmp    0x14004f45f
   14004f45d:	xor    eax,eax
   14004f45f:	mov    rcx,QWORD PTR [rbp+0x10]
   14004f463:	xor    rcx,rbp
   14004f466:	call   0x140046470
   14004f46b:	mov    rbx,QWORD PTR [rbp+0x50]
   14004f46f:	mov    rsi,QWORD PTR [rbp+0x58]
   14004f473:	mov    rdi,QWORD PTR [rbp+0x60]
   14004f477:	lea    rsp,[rbp+0x20]
   14004f47b:	pop    r15
   14004f47d:	pop    r14
   14004f47f:	pop    r13
   14004f481:	pop    r12
   14004f483:	pop    rbp
   14004f484:	ret    
   14004f485:	int3   
   14004f486:	int3   
   14004f487:	int3   
   14004f488:	int3   
   14004f489:	int3   
   14004f48a:	int3   
   14004f48b:	int3   
   14004f48c:	int3   
   14004f48d:	int3   
   14004f48e:	int3   
   14004f48f:	int3   
   14004f490:	mov    rax,rsp
   14004f493:	push   rbx
   14004f494:	sub    rsp,0x70
   14004f498:	mov    QWORD PTR [rax+0x8],rbp
   14004f49c:	mov    QWORD PTR [rax+0x18],rdi
   14004f4a0:	xor    dil,dil
   14004f4a3:	test   rcx,rcx
   14004f4a6:	mov    QWORD PTR [rax-0x10],r12
   14004f4aa:	mov    QWORD PTR [rax-0x18],r13
   14004f4ae:	mov    BYTE PTR [rax-0x20],dil
   14004f4b2:	mov    rbp,r9
   14004f4b5:	mov    r12d,r8d
   14004f4b8:	mov    r13d,edx
   14004f4bb:	jne    0x14004f54e
   14004f4c1:	mov    QWORD PTR [rax+0x10],rsi
   14004f4c5:	call   0x14004bd60
   14004f4ca:	mov    rcx,QWORD PTR [rax+0xc0]
   14004f4d1:	mov    rsi,QWORD PTR [rax+0xb8]
   14004f4d8:	mov    rbx,rax
   14004f4db:	cmp    rcx,QWORD PTR [rip+0x383be]        # 0x1400878a0
   14004f4e2:	mov    QWORD PTR [rsp+0x50],rax
   14004f4e7:	mov    QWORD PTR [rsp+0x40],rcx
   14004f4ec:	mov    QWORD PTR [rsp+0x48],rsi
   14004f4f1:	je     0x14004f50b
   14004f4f3:	mov    ecx,DWORD PTR [rax+0xc8]
   14004f4f9:	test   DWORD PTR [rip+0x38229],ecx        # 0x140087728
   14004f4ff:	jne    0x14004f50b
   14004f501:	call   0x14004f030
   14004f506:	mov    QWORD PTR [rsp+0x40],rax
   14004f50b:	cmp    rsi,QWORD PTR [rip+0x3810e]        # 0x140087620
   14004f512:	mov    rsi,QWORD PTR [rsp+0x88]
   14004f51a:	je     0x14004f534
   14004f51c:	mov    eax,DWORD PTR [rbx+0xc8]
   14004f522:	test   DWORD PTR [rip+0x38200],eax        # 0x140087728
   14004f528:	jne    0x14004f534
   14004f52a:	call   0x14004e4e0
   14004f52f:	mov    QWORD PTR [rsp+0x48],rax
   14004f534:	test   BYTE PTR [rbx+0xc8],0x2
   14004f53b:	jne    0x14004f56b
   14004f53d:	or     DWORD PTR [rbx+0xc8],0x2
   14004f544:	mov    dil,0x1
   14004f547:	mov    BYTE PTR [rsp+0x58],dil
   14004f54c:	jmp    0x14004f56b
   14004f54e:	mov    rax,QWORD PTR [rcx]
   14004f551:	lea    rdx,[rsp+0x40]
   14004f556:	mov    QWORD PTR [rdx],rax
   14004f559:	mov    rax,QWORD PTR [rcx+0x8]
   14004f55d:	mov    QWORD PTR [rdx+0x8],rax
   14004f561:	movzx  edi,BYTE PTR [rsp+0x58]
   14004f566:	mov    rbx,QWORD PTR [rsp+0x50]
   14004f56b:	mov    eax,DWORD PTR [rsp+0xb8]
   14004f572:	lea    rcx,[rsp+0x40]
   14004f577:	mov    r9,rbp
   14004f57a:	mov    DWORD PTR [rsp+0x38],eax
   14004f57e:	mov    eax,DWORD PTR [rsp+0xb0]
   14004f585:	mov    r8d,r12d
   14004f588:	mov    DWORD PTR [rsp+0x30],eax
   14004f58c:	mov    rax,QWORD PTR [rsp+0xa8]
   14004f594:	mov    edx,r13d
   14004f597:	mov    QWORD PTR [rsp+0x28],rax
   14004f59c:	mov    eax,DWORD PTR [rsp+0xa0]
   14004f5a3:	mov    DWORD PTR [rsp+0x20],eax
   14004f5a7:	call   0x14004f0d0
   14004f5ac:	mov    r13,QWORD PTR [rsp+0x60]
   14004f5b1:	mov    r12,QWORD PTR [rsp+0x68]
   14004f5b6:	mov    rbp,QWORD PTR [rsp+0x80]
   14004f5be:	test   dil,dil
   14004f5c1:	mov    rdi,QWORD PTR [rsp+0x90]
   14004f5c9:	je     0x14004f5d2
   14004f5cb:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14004f5d2:	add    rsp,0x70
   14004f5d6:	pop    rbx
   14004f5d7:	ret    
   14004f5d8:	int3   
   14004f5d9:	int3   
   14004f5da:	int3   
   14004f5db:	int3   
   14004f5dc:	int3   
   14004f5dd:	int3   
   14004f5de:	int3   
   14004f5df:	int3   
   14004f5e0:	xor    eax,eax
   14004f5e2:	test   rdx,rdx
   14004f5e5:	je     0x14004f5fa
   14004f5e7:	cmp    WORD PTR [rcx],0x0
   14004f5eb:	je     0x14004f5fa
   14004f5ed:	add    rax,0x1
   14004f5f1:	add    rcx,0x2
   14004f5f5:	cmp    rax,rdx
   14004f5f8:	jb     0x14004f5e7
   14004f5fa:	ret    0x0
   14004f5fd:	int3   
   14004f5fe:	int3   
   14004f5ff:	int3   
   14004f600:	mov    QWORD PTR [rsp+0x20],rbx
   14004f605:	mov    DWORD PTR [rsp+0x8],ecx
   14004f609:	push   rdi
   14004f60a:	sub    rsp,0x20
   14004f60e:	mov    rcx,rdx
   14004f611:	mov    rbx,rdx
   14004f614:	call   0x140051e40
   14004f619:	mov    ecx,DWORD PTR [rbx+0x18]
   14004f61c:	test   cl,0x82
   14004f61f:	movsxd rdi,eax
   14004f622:	jne    0x14004f641
   14004f624:	call   0x140048680
   14004f629:	mov    DWORD PTR [rax],0x9
   14004f62f:	or     DWORD PTR [rbx+0x18],0x20
   14004f633:	or     eax,0xffffffff
   14004f636:	mov    rbx,QWORD PTR [rsp+0x48]
   14004f63b:	add    rsp,0x20
   14004f63f:	pop    rdi
   14004f640:	ret    
   14004f641:	test   cl,0x40
   14004f644:	je     0x14004f663
   14004f646:	call   0x140048680
   14004f64b:	mov    DWORD PTR [rax],0x22
   14004f651:	or     DWORD PTR [rbx+0x18],0x20
   14004f655:	or     eax,0xffffffff
   14004f658:	mov    rbx,QWORD PTR [rsp+0x48]
   14004f65d:	add    rsp,0x20
   14004f661:	pop    rdi
   14004f662:	ret    
   14004f663:	mov    QWORD PTR [rsp+0x40],rsi
   14004f668:	xor    esi,esi
   14004f66a:	test   cl,0x1
   14004f66d:	je     0x14004f688
   14004f66f:	test   cl,0x10
   14004f672:	mov    DWORD PTR [rbx+0x8],esi
   14004f675:	je     0x14004f718
   14004f67b:	mov    rax,QWORD PTR [rbx+0x10]
   14004f67f:	and    ecx,0xfffffffe
   14004f682:	mov    QWORD PTR [rbx],rax
   14004f685:	mov    DWORD PTR [rbx+0x18],ecx
   14004f688:	mov    eax,DWORD PTR [rbx+0x18]
   14004f68b:	mov    DWORD PTR [rbx+0x8],esi
   14004f68e:	and    eax,0xffffffef
   14004f691:	or     eax,0x2
   14004f694:	test   eax,0x10c
   14004f699:	mov    DWORD PTR [rbx+0x18],eax
   14004f69c:	jne    0x14004f6cd
   14004f69e:	call   0x140052160
   14004f6a3:	add    rax,0x30
   14004f6a7:	cmp    rbx,rax
   14004f6aa:	je     0x14004f6ba
   14004f6ac:	call   0x140052160
   14004f6b1:	add    rax,0x60
   14004f6b5:	cmp    rbx,rax
   14004f6b8:	jne    0x14004f6c5
   14004f6ba:	mov    ecx,edi
   14004f6bc:	call   0x140059940
   14004f6c1:	test   eax,eax
   14004f6c3:	jne    0x14004f6cd
   14004f6c5:	mov    rcx,rbx
   14004f6c8:	call   0x1400598e0
   14004f6cd:	test   DWORD PTR [rbx+0x18],0x108
   14004f6d4:	mov    QWORD PTR [rsp+0x38],rbp
   14004f6d9:	je     0x14004f789
   14004f6df:	mov    ebp,DWORD PTR [rbx]
   14004f6e1:	mov    rdx,QWORD PTR [rbx+0x10]
   14004f6e5:	sub    ebp,DWORD PTR [rbx+0x10]
   14004f6e8:	lea    rax,[rdx+0x1]
   14004f6ec:	mov    QWORD PTR [rbx],rax
   14004f6ef:	mov    eax,DWORD PTR [rbx+0x24]
   14004f6f2:	sub    eax,0x1
   14004f6f5:	test   ebp,ebp
   14004f6f7:	mov    DWORD PTR [rbx+0x8],eax
   14004f6fa:	jle    0x14004f731
   14004f6fc:	mov    r8d,ebp
   14004f6ff:	mov    ecx,edi
   14004f701:	call   0x140059790
   14004f706:	mov    rcx,QWORD PTR [rbx+0x10]
   14004f70a:	mov    esi,eax
   14004f70c:	movzx  eax,BYTE PTR [rsp+0x30]
   14004f711:	mov    BYTE PTR [rcx],al
   14004f713:	jmp    0x14004f79f
   14004f718:	mov    rsi,QWORD PTR [rsp+0x40]
   14004f71d:	or     ecx,0x20
   14004f720:	or     eax,0xffffffff
   14004f723:	mov    DWORD PTR [rbx+0x18],ecx
   14004f726:	mov    rbx,QWORD PTR [rsp+0x48]
   14004f72b:	add    rsp,0x20
   14004f72f:	pop    rdi
   14004f730:	ret    
   14004f731:	cmp    edi,0xffffffff
   14004f734:	je     0x14004f75d
   14004f736:	cmp    edi,0xfffffffe
   14004f739:	je     0x14004f75d
   14004f73b:	mov    rax,rdi
   14004f73e:	mov    rcx,rdi
   14004f741:	lea    r8,[rip+0x3efb8]        # 0x14008e700
   14004f748:	and    eax,0x1f
   14004f74b:	sar    rcx,0x5
   14004f74f:	lea    rdx,[rax+rax*4]
   14004f753:	shl    rdx,0x4
   14004f757:	add    rdx,QWORD PTR [r8+rcx*8]
   14004f75b:	jmp    0x14004f764
   14004f75d:	lea    rdx,[rip+0x379cc]        # 0x140087130
   14004f764:	test   BYTE PTR [rdx+0x8],0x20
   14004f768:	je     0x14004f77d
   14004f76a:	xor    edx,edx
   14004f76c:	mov    ecx,edi
   14004f76e:	lea    r8d,[rdx+0x2]
   14004f772:	call   0x140058eb0
   14004f777:	cmp    rax,0xffffffffffffffff
   14004f77b:	je     0x14004f7a3
   14004f77d:	mov    rcx,QWORD PTR [rbx+0x10]
   14004f781:	mov    al,BYTE PTR [rsp+0x30]
   14004f785:	mov    BYTE PTR [rcx],al
   14004f787:	jmp    0x14004f79f
   14004f789:	mov    ebp,0x1
   14004f78e:	lea    rdx,[rsp+0x30]
   14004f793:	mov    ecx,edi
   14004f795:	mov    r8d,ebp
   14004f798:	call   0x140059790
   14004f79d:	mov    esi,eax
   14004f79f:	cmp    esi,ebp
   14004f7a1:	je     0x14004f7ac
   14004f7a3:	or     DWORD PTR [rbx+0x18],0x20
   14004f7a7:	or     eax,0xffffffff
   14004f7aa:	jmp    0x14004f7b1
   14004f7ac:	movzx  eax,BYTE PTR [rsp+0x30]
   14004f7b1:	mov    rbp,QWORD PTR [rsp+0x38]
   14004f7b6:	mov    rsi,QWORD PTR [rsp+0x40]
   14004f7bb:	mov    rbx,QWORD PTR [rsp+0x48]
   14004f7c0:	add    rsp,0x20
   14004f7c4:	pop    rdi
   14004f7c5:	ret    
   14004f7c6:	int3   
   14004f7c7:	int3   
   14004f7c8:	int3   
   14004f7c9:	int3   
   14004f7ca:	int3   
   14004f7cb:	int3   
   14004f7cc:	int3   
   14004f7cd:	int3   
   14004f7ce:	int3   
   14004f7cf:	int3   
   14004f7d0:	mov    QWORD PTR [rsp+0x8],rbx
   14004f7d5:	mov    QWORD PTR [rsp+0x10],rbp
   14004f7da:	mov    QWORD PTR [rsp+0x18],rsi
   14004f7df:	push   rdi
   14004f7e0:	sub    rsp,0x20
   14004f7e4:	test   BYTE PTR [r8+0x18],0x40
   14004f7e9:	mov    rbx,r9
   14004f7ec:	mov    rdi,r8
   14004f7ef:	mov    esi,edx
   14004f7f1:	mov    rbp,rcx
   14004f7f4:	je     0x14004f802
   14004f7f6:	cmp    QWORD PTR [r8+0x10],0x0
   14004f7fb:	jne    0x14004f802
   14004f7fd:	add    DWORD PTR [r9],edx
   14004f800:	jmp    0x14004f874
   14004f802:	test   edx,edx
   14004f804:	jle    0x14004f874
   14004f806:	sub    esi,0x1
   14004f809:	test   BYTE PTR [rdi+0x18],0x40
   14004f80d:	je     0x14004f816
   14004f80f:	cmp    QWORD PTR [rdi+0x10],0x0
   14004f814:	je     0x14004f830
   14004f816:	movzx  ecx,WORD PTR [rbp+0x0]
   14004f81a:	mov    rdx,rdi
   14004f81d:	call   0x1400599c0
   14004f822:	cmp    ax,0xffff
   14004f826:	jne    0x14004f830
   14004f828:	mov    DWORD PTR [rbx],0xffffffff
   14004f82e:	jmp    0x14004f833
   14004f830:	add    DWORD PTR [rbx],0x1
   14004f833:	add    rbp,0x2
   14004f837:	cmp    DWORD PTR [rbx],0xffffffff
   14004f83a:	jne    0x14004f870
   14004f83c:	call   0x140048680
   14004f841:	cmp    DWORD PTR [rax],0x2a
   14004f844:	jne    0x14004f874
   14004f846:	test   BYTE PTR [rdi+0x18],0x40
   14004f84a:	je     0x14004f853
   14004f84c:	cmp    QWORD PTR [rdi+0x10],0x0
   14004f851:	je     0x14004f86d
   14004f853:	mov    rdx,rdi
   14004f856:	mov    cx,0x3f
   14004f85a:	call   0x1400599c0
   14004f85f:	cmp    ax,0xffff
   14004f863:	jne    0x14004f86d
   14004f865:	mov    DWORD PTR [rbx],0xffffffff
   14004f86b:	jmp    0x14004f870
   14004f86d:	add    DWORD PTR [rbx],0x1
   14004f870:	test   esi,esi
   14004f872:	jg     0x14004f806
   14004f874:	mov    rbx,QWORD PTR [rsp+0x30]
   14004f879:	mov    rbp,QWORD PTR [rsp+0x38]
   14004f87e:	mov    rsi,QWORD PTR [rsp+0x40]
   14004f883:	add    rsp,0x20
   14004f887:	pop    rdi
   14004f888:	ret    
   14004f889:	int3   
   14004f88a:	int3   
   14004f88b:	int3   
   14004f88c:	int3   
   14004f88d:	int3   
   14004f88e:	int3   
   14004f88f:	int3   
   14004f890:	rex push rbx
   14004f892:	push   rsi
   14004f893:	push   rdi
   14004f894:	push   r13
   14004f896:	push   r14
   14004f898:	sub    rsp,0x4f0
   14004f89f:	mov    rax,QWORD PTR [rip+0x374ca]        # 0x140086d70
   14004f8a6:	xor    rax,rsp
   14004f8a9:	mov    QWORD PTR [rsp+0x4c0],rax
   14004f8b1:	xor    ebx,ebx
   14004f8b3:	test   r8,r8
   14004f8b6:	mov    rdi,r9
   14004f8b9:	mov    QWORD PTR [rsp+0x58],r9
   14004f8be:	mov    rsi,rdx
   14004f8c1:	mov    r13,rcx
   14004f8c4:	mov    DWORD PTR [rsp+0x74],ebx
   14004f8c8:	mov    r14d,ebx
   14004f8cb:	mov    DWORD PTR [rsp+0x40],ebx
   14004f8cf:	mov    r11d,ebx
   14004f8d2:	mov    DWORD PTR [rsp+0x50],ebx
   14004f8d6:	mov    r9d,ebx
   14004f8d9:	mov    DWORD PTR [rsp+0x48],ebx
   14004f8dd:	mov    r10d,ebx
   14004f8e0:	mov    DWORD PTR [rsp+0x4c],ebx
   14004f8e4:	mov    DWORD PTR [rsp+0x70],ebx
   14004f8e8:	mov    DWORD PTR [rsp+0x60],ebx
   14004f8ec:	mov    BYTE PTR [rsp+0x90],bl
   14004f8f3:	jne    0x14004f9b7
   14004f8f9:	call   0x14004bd60
   14004f8fe:	mov    QWORD PTR [rsp+0x88],rax
   14004f906:	mov    rdx,rax
   14004f909:	mov    rcx,QWORD PTR [rax+0xc0]
   14004f910:	cmp    rcx,QWORD PTR [rip+0x37f89]        # 0x1400878a0
   14004f917:	mov    QWORD PTR [rsp+0x78],rcx
   14004f91c:	mov    rax,QWORD PTR [rax+0xb8]
   14004f923:	mov    QWORD PTR [rsp+0x80],rax
   14004f92b:	je     0x14004f955
   14004f92d:	mov    ecx,DWORD PTR [rdx+0xc8]
   14004f933:	test   DWORD PTR [rip+0x37def],ecx        # 0x140087728
   14004f939:	jne    0x14004f955
   14004f93b:	call   0x14004f030
   14004f940:	mov    rdx,QWORD PTR [rsp+0x88]
   14004f948:	mov    QWORD PTR [rsp+0x78],rax
   14004f94d:	mov    rax,QWORD PTR [rsp+0x80]
   14004f955:	cmp    rax,QWORD PTR [rip+0x37cc4]        # 0x140087620
   14004f95c:	je     0x14004f981
   14004f95e:	mov    eax,DWORD PTR [rdx+0xc8]
   14004f964:	test   DWORD PTR [rip+0x37dbe],eax        # 0x140087728
   14004f96a:	jne    0x14004f981
   14004f96c:	call   0x14004e4e0
   14004f971:	mov    rdx,QWORD PTR [rsp+0x88]
   14004f979:	mov    QWORD PTR [rsp+0x80],rax
   14004f981:	test   BYTE PTR [rdx+0xc8],0x2
   14004f988:	jne    0x14004f9ac
   14004f98a:	or     DWORD PTR [rdx+0xc8],0x2
   14004f991:	mov    rdx,QWORD PTR [rsp+0x88]
   14004f999:	mov    r9d,ebx
   14004f99c:	mov    BYTE PTR [rsp+0x90],0x1
   14004f9a4:	mov    r10d,ebx
   14004f9a7:	mov    r11d,ebx
   14004f9aa:	jmp    0x14004f9d2
   14004f9ac:	mov    r9d,ebx
   14004f9af:	mov    r10d,ebx
   14004f9b2:	mov    r11d,ebx
   14004f9b5:	jmp    0x14004f9d2
   14004f9b7:	mov    rax,QWORD PTR [r8]
   14004f9ba:	lea    rcx,[rsp+0x78]
   14004f9bf:	mov    QWORD PTR [rcx],rax
   14004f9c2:	mov    rax,QWORD PTR [r8+0x8]
   14004f9c6:	mov    QWORD PTR [rcx+0x8],rax
   14004f9ca:	mov    rdx,QWORD PTR [rsp+0x88]
   14004f9d2:	test   r13,r13
   14004f9d5:	jne    0x14004fa16
   14004f9d7:	call   0x140048680
   14004f9dc:	xor    r9d,r9d
   14004f9df:	xor    r8d,r8d
   14004f9e2:	xor    edx,edx
   14004f9e4:	xor    ecx,ecx
   14004f9e6:	mov    QWORD PTR [rsp+0x20],rbx
   14004f9eb:	mov    DWORD PTR [rax],0x16
   14004f9f1:	call   0x14004e100
   14004f9f6:	cmp    BYTE PTR [rsp+0x90],bl
   14004f9fd:	je     0x14004fa0e
   14004f9ff:	mov    rax,QWORD PTR [rsp+0x88]
   14004fa07:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14004fa0e:	or     eax,0xffffffff
   14004fa11:	jmp    0x140050716
   14004fa16:	test   rsi,rsi
   14004fa19:	je     0x14004f9d7
   14004fa1b:	mov    QWORD PTR [rsp+0x4e8],rbp
   14004fa23:	mov    QWORD PTR [rsp+0x4e0],r12
   14004fa2b:	movzx  r12d,WORD PTR [rsi]
   14004fa2f:	test   r12w,r12w
   14004fa33:	mov    QWORD PTR [rsp+0x4d8],r15
   14004fa3b:	mov    ebp,ebx
   14004fa3d:	mov    DWORD PTR [rsp+0x44],ebx
   14004fa41:	mov    r8d,ebx
   14004fa44:	mov    QWORD PTR [rsp+0xa0],rbx
   14004fa4c:	mov    r15d,ebx
   14004fa4f:	je     0x1400506eb
   14004fa55:	mov    rbx,QWORD PTR [rsp+0xb0]
   14004fa5d:	lea    rdx,[rip+0xfffffffffffb059c]        # 0x140000000
   14004fa64:	data16 data16 xchg ax,ax
   14004fa68:	data16 data16 xchg ax,ax
   14004fa6c:	data16 data16 xchg ax,ax
   14004fa70:	add    rsi,0x2
   14004fa74:	test   ebp,ebp
   14004fa76:	mov    QWORD PTR [rsp+0xa8],rsi
   14004fa7e:	js     0x1400506e3
   14004fa84:	lea    eax,[r12-0x20]
   14004fa89:	cmp    ax,0x58
   14004fa8d:	ja     0x14004fa9f
   14004fa8f:	movzx  eax,r12w
   14004fa93:	mov    cl,BYTE PTR [rax+rdx*1+0x70240]
   14004fa9a:	and    ecx,0xf
   14004fa9d:	jmp    0x14004faa3
   14004fa9f:	xor    eax,eax
   14004faa1:	mov    ecx,eax
   14004faa3:	movsxd rax,r8d
   14004faa6:	movsxd rcx,ecx
   14004faa9:	lea    rdx,[rax+rcx*8]
   14004faad:	lea    rax,[rip+0xfffffffffffb054c]        # 0x140000000
   14004fab4:	movsx  eax,BYTE PTR [rdx+rax*1+0x70260]
   14004fabc:	sar    eax,0x4
   14004fabf:	cmp    eax,0x7
   14004fac2:	mov    DWORD PTR [rsp+0x98],eax
   14004fac9:	ja     0x140050686
   14004facf:	lea    rdx,[rip+0xfffffffffffb052a]        # 0x140000000
   14004fad6:	cdqe   
   14004fad8:	mov    ecx,DWORD PTR [rdx+rax*4+0x50738]
   14004fadf:	add    rcx,rdx
   14004fae2:	jmp    rcx
   14004fae4:	xor    eax,eax
   14004fae6:	or     r9d,0xffffffff
   14004faea:	mov    DWORD PTR [rsp+0x48],r9d
   14004faef:	mov    DWORD PTR [rsp+0x9c],eax
   14004faf6:	mov    DWORD PTR [rsp+0x70],eax
   14004fafa:	mov    r11d,eax
   14004fafd:	mov    DWORD PTR [rsp+0x50],eax
   14004fb01:	mov    r10d,eax
   14004fb04:	mov    DWORD PTR [rsp+0x4c],eax
   14004fb08:	mov    r14d,eax
   14004fb0b:	mov    DWORD PTR [rsp+0x40],eax
   14004fb0f:	mov    DWORD PTR [rsp+0x60],eax
   14004fb13:	jmp    0x14005068d
   14004fb18:	movzx  eax,r12w
   14004fb1c:	cmp    eax,0x20
   14004fb1f:	je     0x14004fb72
   14004fb21:	cmp    eax,0x23
   14004fb24:	je     0x14004fb63
   14004fb26:	cmp    eax,0x2b
   14004fb29:	je     0x14004fb55
   14004fb2b:	cmp    eax,0x2d
   14004fb2e:	je     0x14004fb47
   14004fb30:	cmp    eax,0x30
   14004fb33:	jne    0x14005068d
   14004fb39:	or     r14d,0x8
   14004fb3d:	mov    DWORD PTR [rsp+0x40],r14d
   14004fb42:	jmp    0x14005068d
   14004fb47:	or     r14d,0x4
   14004fb4b:	mov    DWORD PTR [rsp+0x40],r14d
   14004fb50:	jmp    0x14005068d
   14004fb55:	or     r14d,0x1
   14004fb59:	mov    DWORD PTR [rsp+0x40],r14d
   14004fb5e:	jmp    0x14005068d
   14004fb63:	bts    r14d,0x7
   14004fb68:	mov    DWORD PTR [rsp+0x40],r14d
   14004fb6d:	jmp    0x14005068d
   14004fb72:	or     r14d,0x2
   14004fb76:	mov    DWORD PTR [rsp+0x40],r14d
   14004fb7b:	jmp    0x14005068d
   14004fb80:	cmp    r12w,0x2a
   14004fb85:	jne    0x14004fbb7
   14004fb87:	mov    r11d,DWORD PTR [rdi]
   14004fb8a:	add    rdi,0x8
   14004fb8e:	test   r11d,r11d
   14004fb91:	mov    QWORD PTR [rsp+0x58],rdi
   14004fb96:	mov    DWORD PTR [rsp+0x50],r11d
   14004fb9b:	jns    0x14005068d
   14004fba1:	or     r14d,0x4
   14004fba5:	neg    r11d
   14004fba8:	mov    DWORD PTR [rsp+0x50],r11d
   14004fbad:	mov    DWORD PTR [rsp+0x40],r14d
   14004fbb2:	jmp    0x14005068d
   14004fbb7:	lea    ecx,[r11+r11*4]
   14004fbbb:	movzx  eax,r12w
   14004fbbf:	lea    r11d,[rax+rcx*2-0x30]
   14004fbc4:	mov    DWORD PTR [rsp+0x50],r11d
   14004fbc9:	jmp    0x14005068d
   14004fbce:	xor    eax,eax
   14004fbd0:	mov    r9d,eax
   14004fbd3:	mov    DWORD PTR [rsp+0x48],eax
   14004fbd7:	jmp    0x14005068d
   14004fbdc:	cmp    r12w,0x2a
   14004fbe1:	jne    0x14004fc0b
   14004fbe3:	mov    r9d,DWORD PTR [rdi]
   14004fbe6:	add    rdi,0x8
   14004fbea:	test   r9d,r9d
   14004fbed:	mov    QWORD PTR [rsp+0x58],rdi
   14004fbf2:	mov    DWORD PTR [rsp+0x48],r9d
   14004fbf7:	jns    0x14005068d
   14004fbfd:	or     r9d,0xffffffff
   14004fc01:	mov    DWORD PTR [rsp+0x48],r9d
   14004fc06:	jmp    0x14005068d
   14004fc0b:	lea    ecx,[r9+r9*4]
   14004fc0f:	movzx  eax,r12w
   14004fc13:	lea    r9d,[rax+rcx*2-0x30]
   14004fc18:	mov    DWORD PTR [rsp+0x48],r9d
   14004fc1d:	jmp    0x14005068d
   14004fc22:	movzx  eax,r12w
   14004fc26:	cmp    eax,0x49
   14004fc29:	je     0x14004fc82
   14004fc2b:	cmp    eax,0x68
   14004fc2e:	je     0x14004fc74
   14004fc30:	cmp    eax,0x6c
   14004fc33:	je     0x14004fc4d
   14004fc35:	cmp    eax,0x77
   14004fc38:	jne    0x14005068d
   14004fc3e:	bts    r14d,0xb
   14004fc43:	mov    DWORD PTR [rsp+0x40],r14d
   14004fc48:	jmp    0x14005068d
   14004fc4d:	cmp    WORD PTR [rsi],0x6c
   14004fc51:	jne    0x14004fc66
   14004fc53:	add    rsi,0x2
   14004fc57:	bts    r14d,0xc
   14004fc5c:	mov    DWORD PTR [rsp+0x40],r14d
   14004fc61:	jmp    0x14005068d
   14004fc66:	or     r14d,0x10
   14004fc6a:	mov    DWORD PTR [rsp+0x40],r14d
   14004fc6f:	jmp    0x14005068d
   14004fc74:	or     r14d,0x20
   14004fc78:	mov    DWORD PTR [rsp+0x40],r14d
   14004fc7d:	jmp    0x14005068d
   14004fc82:	movzx  eax,WORD PTR [rsi]
   14004fc85:	bts    r14d,0xf
   14004fc8a:	cmp    ax,0x36
   14004fc8e:	mov    DWORD PTR [rsp+0x40],r14d
   14004fc93:	jne    0x14004fcaf
   14004fc95:	cmp    WORD PTR [rsi+0x2],0x34
   14004fc9a:	jne    0x14004fcaf
   14004fc9c:	add    rsi,0x4
   14004fca0:	bts    r14d,0xf
   14004fca5:	mov    DWORD PTR [rsp+0x40],r14d
   14004fcaa:	jmp    0x14005068d
   14004fcaf:	cmp    ax,0x33
   14004fcb3:	jne    0x14004fccf
   14004fcb5:	cmp    WORD PTR [rsi+0x2],0x32
   14004fcba:	jne    0x14004fccf
   14004fcbc:	add    rsi,0x4
   14004fcc0:	btr    r14d,0xf
   14004fcc5:	mov    DWORD PTR [rsp+0x40],r14d
   14004fcca:	jmp    0x14005068d
   14004fccf:	cmp    ax,0x64
   14004fcd3:	je     0x14005068d
   14004fcd9:	cmp    ax,0x69
   14004fcdd:	je     0x14005068d
   14004fce3:	cmp    ax,0x6f
   14004fce7:	je     0x14005068d
   14004fced:	cmp    ax,0x75
   14004fcf1:	je     0x14005068d
   14004fcf7:	cmp    ax,0x78
   14004fcfb:	je     0x14005068d
   14004fd01:	cmp    ax,0x58
   14004fd05:	je     0x14005068d
   14004fd0b:	xor    eax,eax
   14004fd0d:	mov    DWORD PTR [rsp+0x98],eax
   14004fd14:	test   BYTE PTR [r13+0x18],0x40
   14004fd19:	mov    DWORD PTR [rsp+0x60],0x1
   14004fd21:	je     0x14004fd36
   14004fd23:	cmp    QWORD PTR [r13+0x10],0x0
   14004fd28:	jne    0x14004fd36
   14004fd2a:	add    ebp,0x1
   14004fd2d:	mov    DWORD PTR [rsp+0x44],ebp
   14004fd31:	jmp    0x14005068d
   14004fd36:	mov    rdx,r13
   14004fd39:	movzx  ecx,r12w
   14004fd3d:	call   0x1400599c0
   14004fd42:	cmp    ax,0xffff
   14004fd46:	jne    0x14004fd6a
   14004fd48:	mov    r9d,DWORD PTR [rsp+0x48]
   14004fd4d:	mov    r10d,DWORD PTR [rsp+0x4c]
   14004fd52:	mov    r11d,DWORD PTR [rsp+0x50]
   14004fd57:	or     ebp,0xffffffff
   14004fd5a:	lea    rdx,[rip+0xfffffffffffb029f]        # 0x140000000
   14004fd61:	mov    DWORD PTR [rsp+0x44],ebp
   14004fd65:	jmp    0x14005068d
   14004fd6a:	mov    r9d,DWORD PTR [rsp+0x48]
   14004fd6f:	mov    r10d,DWORD PTR [rsp+0x4c]
   14004fd74:	mov    r11d,DWORD PTR [rsp+0x50]
   14004fd79:	add    ebp,0x1
   14004fd7c:	lea    rdx,[rip+0xfffffffffffb027d]        # 0x140000000
   14004fd83:	mov    DWORD PTR [rsp+0x44],ebp
   14004fd87:	jmp    0x14005068d
   14004fd8c:	movzx  eax,r12w
   14004fd90:	add    eax,0xffffffbf
   14004fd93:	cmp    eax,0x37
   14004fd96:	ja     0x1400502e7
   14004fd9c:	cdqe   
   14004fd9e:	movzx  eax,BYTE PTR [rdx+rax*1+0x50794]
   14004fda6:	mov    ecx,DWORD PTR [rdx+rax*4+0x50758]
   14004fdad:	add    rcx,rdx
   14004fdb0:	jmp    rcx
   14004fdb2:	test   r14d,0x830
   14004fdb9:	jne    0x14004fdc4
   14004fdbb:	or     r14d,0x20
   14004fdbf:	mov    DWORD PTR [rsp+0x40],r14d
   14004fdc4:	movzx  eax,WORD PTR [rdi]
   14004fdc7:	add    rdi,0x8
   14004fdcb:	test   r14b,0x20
   14004fdcf:	mov    WORD PTR [rsp+0x68],ax
   14004fdd4:	mov    DWORD PTR [rsp+0x60],0x1
   14004fddc:	mov    QWORD PTR [rsp+0x58],rdi
   14004fde1:	je     0x14004fe2e
   14004fde3:	mov    BYTE PTR [rsp+0x6c],al
   14004fde7:	mov    rax,QWORD PTR [rsp+0x78]
   14004fdec:	mov    BYTE PTR [rsp+0x6d],0x0
   14004fdf1:	movsxd r8,DWORD PTR [rax+0x10c]
   14004fdf8:	lea    r9,[rsp+0x78]
   14004fdfd:	lea    rdx,[rsp+0x6c]
   14004fe02:	lea    rcx,[rsp+0xc0]
   14004fe0a:	call   0x140059c60
   14004fe0f:	test   eax,eax
   14004fe11:	jns    0x14004fe36
   14004fe13:	mov    DWORD PTR [rsp+0x70],0x1
   14004fe1b:	lea    rbx,[rsp+0xc0]
   14004fe23:	mov    r15d,0x1
   14004fe29:	jmp    0x1400502e7
   14004fe2e:	mov    WORD PTR [rsp+0xc0],ax
   14004fe36:	lea    rbx,[rsp+0xc0]
   14004fe3e:	mov    r15d,0x1
   14004fe44:	jmp    0x1400502e7
   14004fe49:	mov    rax,QWORD PTR [rdi]
   14004fe4c:	add    rdi,0x8
   14004fe50:	test   rax,rax
   14004fe53:	mov    QWORD PTR [rsp+0x58],rdi
   14004fe58:	je     0x14004fe91
   14004fe5a:	mov    rbx,QWORD PTR [rax+0x8]
   14004fe5e:	test   rbx,rbx
   14004fe61:	je     0x14004fe91
   14004fe63:	bt     r14d,0xb
   14004fe68:	jae    0x14004fe82
   14004fe6a:	movsx  eax,WORD PTR [rax]
   14004fe6d:	mov    DWORD PTR [rsp+0x60],0x1
   14004fe75:	cdq    
   14004fe76:	sub    eax,edx
   14004fe78:	sar    eax,1
   14004fe7a:	mov    r15d,eax
   14004fe7d:	jmp    0x1400502e7
   14004fe82:	movsx  r15d,WORD PTR [rax]
   14004fe86:	xor    ecx,ecx
   14004fe88:	mov    DWORD PTR [rsp+0x60],ecx
   14004fe8c:	jmp    0x1400502e7
   14004fe91:	mov    rbx,QWORD PTR [rip+0x383c8]        # 0x140088260
   14004fe98:	or     rcx,0xffffffffffffffff
   14004fe9c:	xor    eax,eax
   14004fe9e:	mov    rdi,rbx
   14004fea1:	repnz scas al,BYTE PTR es:[rdi]
   14004fea3:	not    rcx
   14004fea6:	sub    rcx,0x1
   14004feaa:	mov    r15,rcx
   14004fead:	jmp    0x1400502e7
   14004feb2:	test   r14d,0x830
   14004feb9:	jne    0x14004fec4
   14004febb:	or     r14d,0x20
   14004febf:	mov    DWORD PTR [rsp+0x40],r14d
   14004fec4:	mov    rbx,QWORD PTR [rdi]
   14004fec7:	cmp    r9d,0xffffffff
   14004fecb:	mov    esi,r9d
   14004fece:	mov    eax,0x7fffffff
   14004fed3:	cmove  esi,eax
   14004fed6:	add    rdi,0x8
   14004feda:	test   r14b,0x20
   14004fede:	mov    QWORD PTR [rsp+0x58],rdi
   14004fee3:	je     0x14004ff32
   14004fee5:	test   rbx,rbx
   14004fee8:	cmove  rbx,QWORD PTR [rip+0x38370]        # 0x140088260
   14004fef0:	xor    eax,eax
   14004fef2:	test   esi,esi
   14004fef4:	mov    rdi,rbx
   14004fef7:	mov    r15d,eax
   14004fefa:	jle    0x1400502e7
   14004ff00:	movzx  eax,BYTE PTR [rdi]
   14004ff03:	test   al,al
   14004ff05:	je     0x1400502e7
   14004ff0b:	lea    rdx,[rsp+0x78]
   14004ff10:	movzx  ecx,al
   14004ff13:	call   0x140049dd0
   14004ff18:	test   eax,eax
   14004ff1a:	je     0x14004ff20
   14004ff1c:	add    rdi,0x1
   14004ff20:	add    r15d,0x1
   14004ff24:	add    rdi,0x1
   14004ff28:	cmp    r15d,esi
   14004ff2b:	jl     0x14004ff00
   14004ff2d:	jmp    0x1400502e7
   14004ff32:	test   rbx,rbx
   14004ff35:	mov    DWORD PTR [rsp+0x60],0x1
   14004ff3d:	cmove  rbx,QWORD PTR [rip+0x38323]        # 0x140088268
   14004ff45:	test   esi,esi
   14004ff47:	mov    rax,rbx
   14004ff4a:	je     0x14004ff61
   14004ff4c:	data16 data16 xchg ax,ax
   14004ff50:	sub    esi,0x1
   14004ff53:	cmp    WORD PTR [rax],0x0
   14004ff57:	je     0x14004ff61
   14004ff59:	add    rax,0x2
   14004ff5d:	test   esi,esi
   14004ff5f:	jne    0x14004ff50
   14004ff61:	sub    rax,rbx
   14004ff64:	sar    rax,1
   14004ff67:	mov    r15d,eax
   14004ff6a:	jmp    0x1400502e7
   14004ff6f:	add    rdi,0x8
   14004ff73:	mov    QWORD PTR [rsp+0x58],rdi
   14004ff78:	mov    rdi,QWORD PTR [rdi-0x8]
   14004ff7c:	call   0x140059c40
   14004ff81:	test   eax,eax
   14004ff83:	je     0x1400506a4
   14004ff89:	test   r14b,0x20
   14004ff8d:	je     0x14004ff9f
   14004ff8f:	mov    WORD PTR [rdi],bp
   14004ff92:	mov    DWORD PTR [rsp+0x70],0x1
   14004ff9a:	jmp    0x1400505f3
   14004ff9f:	mov    DWORD PTR [rdi],ebp
   14004ffa1:	mov    DWORD PTR [rsp+0x70],0x1
   14004ffa9:	jmp    0x1400505f3
   14004ffae:	mov    DWORD PTR [rsp+0x9c],0x1
   14004ffb9:	add    r12w,0x20
   14004ffbe:	or     r14d,0x40
   14004ffc2:	test   r9d,r9d
   14004ffc5:	mov    eax,0x200
   14004ffca:	mov    DWORD PTR [rsp+0x40],r14d
   14004ffcf:	mov    esi,eax
   14004ffd1:	lea    rbx,[rsp+0xc0]
   14004ffd9:	jns    0x14004ffe8
   14004ffdb:	mov    r15d,0x6
   14004ffe1:	mov    DWORD PTR [rsp+0x48],r15d
   14004ffe6:	jmp    0x140050063
   14004ffe8:	test   r9d,r9d
   14004ffeb:	jne    0x140050001
   14004ffed:	cmp    r12w,0x67
   14004fff2:	jne    0x140050057
   14004fff4:	mov    r15d,0x1
   14004fffa:	mov    DWORD PTR [rsp+0x48],r15d
   14004ffff:	jmp    0x140050063
   140050001:	cmp    r9d,eax
   140050004:	jle    0x14005000f
   140050006:	mov    r9d,eax
   140050009:	mov    DWORD PTR [rsp+0x48],eax
   14005000d:	jmp    0x140050018
   14005000f:	cmp    r9d,0xa3
   140050016:	jle    0x14005005e
   140050018:	lea    edi,[r9+0x15d]
   14005001f:	movsxd rcx,edi
   140050022:	call   0x14004de20
   140050027:	test   rax,rax
   14005002a:	mov    QWORD PTR [rsp+0xa0],rax
   140050032:	je     0x140050045
   140050034:	mov    r15d,DWORD PTR [rsp+0x48]
   140050039:	mov    esi,edi
   14005003b:	mov    rdi,QWORD PTR [rsp+0x58]
   140050040:	mov    rbx,rax
   140050043:	jmp    0x140050063
   140050045:	mov    rdi,QWORD PTR [rsp+0x58]
   14005004a:	mov    r15d,0xa3
   140050050:	mov    DWORD PTR [rsp+0x48],r15d
   140050055:	jmp    0x140050063
   140050057:	mov    r15d,DWORD PTR [rsp+0x48]
   14005005c:	jmp    0x140050063
   14005005e:	mov    r15d,DWORD PTR [rsp+0x48]
   140050063:	mov    rax,QWORD PTR [rdi]
   140050066:	mov    rcx,QWORD PTR [rip+0x37e83]        # 0x140087ef0
   14005006d:	add    rdi,0x8
   140050071:	mov    QWORD PTR [rsp+0x58],rdi
   140050076:	movsxd rsi,esi
   140050079:	mov    QWORD PTR [rsp+0xb0],rax
   140050081:	movsx  edi,r12b
   140050085:	call   0x14004ba70
   14005008a:	lea    rcx,[rsp+0x78]
   14005008f:	mov    QWORD PTR [rsp+0x30],rcx
   140050094:	mov    ecx,DWORD PTR [rsp+0x9c]
   14005009b:	mov    r9d,edi
   14005009e:	mov    DWORD PTR [rsp+0x28],ecx
   1400500a2:	lea    rcx,[rsp+0xb0]
   1400500aa:	mov    r8,rsi
   1400500ad:	mov    rdx,rbx
   1400500b0:	mov    DWORD PTR [rsp+0x20],r15d
   1400500b5:	call   rax
   1400500b7:	mov    edi,r14d
   1400500ba:	and    edi,0x80
   1400500c0:	je     0x1400500dd
   1400500c2:	test   r15d,r15d
   1400500c5:	jne    0x1400500dd
   1400500c7:	mov    rcx,QWORD PTR [rip+0x37e3a]        # 0x140087f08
   1400500ce:	call   0x14004ba70
   1400500d3:	lea    rdx,[rsp+0x78]
   1400500d8:	mov    rcx,rbx
   1400500db:	call   rax
   1400500dd:	cmp    r12w,0x67
   1400500e2:	jne    0x1400500fe
   1400500e4:	test   edi,edi
   1400500e6:	jne    0x1400500fe
   1400500e8:	mov    rcx,QWORD PTR [rip+0x37e11]        # 0x140087f00
   1400500ef:	call   0x14004ba70
   1400500f4:	lea    rdx,[rsp+0x78]
   1400500f9:	mov    rcx,rbx
   1400500fc:	call   rax
   1400500fe:	cmp    BYTE PTR [rbx],0x2d
   140050101:	jne    0x140050111
   140050103:	bts    r14d,0x8
   140050108:	add    rbx,0x1
   14005010c:	mov    DWORD PTR [rsp+0x40],r14d
   140050111:	or     rcx,0xffffffffffffffff
   140050115:	xor    eax,eax
   140050117:	mov    rdi,rbx
   14005011a:	repnz scas al,BYTE PTR es:[rdi]
   14005011c:	not    rcx
   14005011f:	sub    rcx,0x1
   140050123:	mov    r15d,ecx
   140050126:	jmp    0x1400502e7
   14005012b:	or     r14d,0x40
   14005012f:	mov    r8d,0xa
   140050135:	mov    DWORD PTR [rsp+0x40],r14d
   14005013a:	jmp    0x14005019e
   14005013c:	mov    r8d,0xa
   140050142:	jmp    0x14005019e
   140050144:	bts    r14d,0xf
   140050149:	mov    r9d,0x10
   14005014f:	mov    DWORD PTR [rsp+0x40],r14d
   140050154:	mov    eax,0x7
   140050159:	mov    DWORD PTR [rsp+0x74],eax
   14005015d:	jmp    0x140050168
   14005015f:	mov    eax,0x27
   140050164:	mov    DWORD PTR [rsp+0x74],eax
   140050168:	test   r14b,r14b
   14005016b:	mov    r8d,0x10
   140050171:	jns    0x14005019e
   140050173:	add    ax,0x51
   140050177:	mov    WORD PTR [rsp+0x64],0x30
   14005017e:	lea    r10d,[r8-0xe]
   140050182:	mov    WORD PTR [rsp+0x66],ax
   140050187:	jmp    0x14005019e
   140050189:	test   r14b,r14b
   14005018c:	mov    r8d,0x8
   140050192:	jns    0x14005019e
   140050194:	bts    r14d,0x9
   140050199:	mov    DWORD PTR [rsp+0x40],r14d
   14005019e:	bt     r14d,0xf
   1400501a3:	jae    0x1400501b4
   1400501a5:	add    rdi,0x8
   1400501a9:	mov    QWORD PTR [rsp+0x58],rdi
   1400501ae:	mov    rdi,QWORD PTR [rdi-0x8]
   1400501b2:	jmp    0x140050216
   1400501b4:	bt     r14d,0xc
   1400501b9:	jae    0x1400501ca
   1400501bb:	add    rdi,0x8
   1400501bf:	mov    QWORD PTR [rsp+0x58],rdi
   1400501c4:	mov    rdi,QWORD PTR [rdi-0x8]
   1400501c8:	jmp    0x140050216
   1400501ca:	test   r14b,0x20
   1400501ce:	je     0x1400501f5
   1400501d0:	test   r14b,0x40
   1400501d4:	je     0x1400501e6
   1400501d6:	add    rdi,0x8
   1400501da:	mov    QWORD PTR [rsp+0x58],rdi
   1400501df:	movsx  rdi,WORD PTR [rdi-0x8]
   1400501e4:	jmp    0x140050216
   1400501e6:	add    rdi,0x8
   1400501ea:	mov    QWORD PTR [rsp+0x58],rdi
   1400501ef:	movzx  edi,WORD PTR [rdi-0x8]
   1400501f3:	jmp    0x140050216
   1400501f5:	test   r14b,0x40
   1400501f9:	je     0x14005020a
   1400501fb:	add    rdi,0x8
   1400501ff:	mov    QWORD PTR [rsp+0x58],rdi
   140050204:	movsxd rdi,DWORD PTR [rdi-0x8]
   140050208:	jmp    0x140050216
   14005020a:	add    rdi,0x8
   14005020e:	mov    QWORD PTR [rsp+0x58],rdi
   140050213:	mov    edi,DWORD PTR [rdi-0x8]
   140050216:	test   r14b,0x40
   14005021a:	je     0x14005022e
   14005021c:	test   rdi,rdi
   14005021f:	jns    0x14005022e
   140050221:	neg    rdi
   140050224:	bts    r14d,0x8
   140050229:	mov    DWORD PTR [rsp+0x40],r14d
   14005022e:	bt     r14d,0xf
   140050233:	jb     0x14005023e
   140050235:	bt     r14d,0xc
   14005023a:	jb     0x14005023e
   14005023c:	mov    edi,edi
   14005023e:	test   r9d,r9d
   140050241:	jns    0x14005024b
   140050243:	mov    r9d,0x1
   140050249:	jmp    0x140050260
   14005024b:	mov    eax,0x200
   140050250:	and    r14d,0xfffffff7
   140050254:	cmp    r9d,eax
   140050257:	mov    DWORD PTR [rsp+0x40],r14d
   14005025c:	cmovg  r9d,eax
   140050260:	mov    r14d,DWORD PTR [rsp+0x74]
   140050265:	test   rdi,rdi
   140050268:	mov    eax,0x0
   14005026d:	cmove  r10d,eax
   140050271:	lea    rbx,[rsp+0x2bf]
   140050279:	mov    DWORD PTR [rsp+0x4c],r10d
   14005027e:	xchg   ax,ax
   140050280:	mov    ecx,r9d
   140050283:	sub    r9d,0x1
   140050287:	test   ecx,ecx
   140050289:	jg     0x140050290
   14005028b:	test   rdi,rdi
   14005028e:	je     0x1400502b1
   140050290:	xor    edx,edx
   140050292:	mov    rax,rdi
   140050295:	movsxd rcx,r8d
   140050298:	div    rcx
   14005029b:	mov    rdi,rax
   14005029e:	lea    eax,[rdx+0x30]
   1400502a1:	cmp    eax,0x39
   1400502a4:	jle    0x1400502a9
   1400502a6:	add    eax,r14d
   1400502a9:	mov    BYTE PTR [rbx],al
   1400502ab:	sub    rbx,0x1
   1400502af:	jmp    0x140050280
   1400502b1:	mov    r14d,DWORD PTR [rsp+0x40]
   1400502b6:	lea    rax,[rsp+0x2bf]
   1400502be:	mov    DWORD PTR [rsp+0x48],r9d
   1400502c3:	sub    eax,ebx
   1400502c5:	add    rbx,0x1
   1400502c9:	bt     r14d,0x9
   1400502ce:	mov    r15d,eax
   1400502d1:	jae    0x1400502e7
   1400502d3:	test   eax,eax
   1400502d5:	je     0x1400502dc
   1400502d7:	cmp    BYTE PTR [rbx],0x30
   1400502da:	je     0x1400502e7
   1400502dc:	sub    rbx,0x1
   1400502e0:	add    r15d,0x1
   1400502e4:	mov    BYTE PTR [rbx],0x30
   1400502e7:	cmp    DWORD PTR [rsp+0x70],0x0
   1400502ec:	jne    0x1400505f3
   1400502f2:	test   r14b,0x40
   1400502f6:	je     0x140050341
   1400502f8:	bt     r14d,0x8
   1400502fd:	jae    0x140050311
   1400502ff:	mov    eax,0x1
   140050304:	mov    WORD PTR [rsp+0x64],0x2d
   14005030b:	mov    DWORD PTR [rsp+0x4c],eax
   14005030f:	jmp    0x14005034b
   140050311:	test   r14b,0x1
   140050315:	je     0x140050329
   140050317:	mov    eax,0x1
   14005031c:	mov    WORD PTR [rsp+0x64],0x2b
   140050323:	mov    DWORD PTR [rsp+0x4c],eax
   140050327:	jmp    0x14005034b
   140050329:	test   r14b,0x2
   14005032d:	je     0x140050347
   14005032f:	mov    eax,0x1
   140050334:	mov    WORD PTR [rsp+0x64],0x20
   14005033b:	mov    DWORD PTR [rsp+0x4c],eax
   14005033f:	jmp    0x14005034b
   140050341:	mov    eax,DWORD PTR [rsp+0x4c]
   140050345:	jmp    0x14005034b
   140050347:	mov    eax,DWORD PTR [rsp+0x4c]
   14005034b:	mov    r14d,DWORD PTR [rsp+0x50]
   140050350:	mov    r12d,DWORD PTR [rsp+0x40]
   140050355:	sub    r14d,r15d
   140050358:	sub    r14d,eax
   14005035b:	test   r12b,0xc
   14005035f:	jne    0x1400503bd
   140050361:	test   r14d,r14d
   140050364:	mov    edi,r14d
   140050367:	jle    0x1400503bd
   140050369:	data16 xchg ax,ax
   14005036c:	data16 data16 xchg ax,ax
   140050370:	sub    edi,0x1
   140050373:	test   BYTE PTR [r13+0x18],0x40
   140050378:	je     0x14005038a
   14005037a:	cmp    QWORD PTR [r13+0x10],0x0
   14005037f:	jne    0x14005038a
   140050381:	add    ebp,0x1
   140050384:	mov    DWORD PTR [rsp+0x44],ebp
   140050388:	jmp    0x1400503a3
   14005038a:	mov    rdx,r13
   14005038d:	mov    cx,0x20
   140050391:	call   0x1400599c0
   140050396:	cmp    ax,0xffff
   14005039a:	je     0x1400503b2
   14005039c:	add    ebp,0x1
   14005039f:	mov    DWORD PTR [rsp+0x44],ebp
   1400503a3:	cmp    ebp,0xffffffff
   1400503a6:	je     0x1400503ac
   1400503a8:	test   edi,edi
   1400503aa:	jg     0x140050370
   1400503ac:	mov    eax,DWORD PTR [rsp+0x4c]
   1400503b0:	jmp    0x1400503bd
   1400503b2:	mov    eax,DWORD PTR [rsp+0x4c]
   1400503b6:	or     ebp,0xffffffff
   1400503b9:	mov    DWORD PTR [rsp+0x44],ebp
   1400503bd:	test   BYTE PTR [r13+0x18],0x40
   1400503c2:	mov    esi,eax
   1400503c4:	lea    rdi,[rsp+0x64]
   1400503c9:	je     0x1400503dd
   1400503cb:	cmp    QWORD PTR [r13+0x10],0x0
   1400503d0:	jne    0x1400503dd
   1400503d2:	add    ebp,eax
   1400503d4:	mov    DWORD PTR [rsp+0x44],ebp
   1400503d8:	jmp    0x14005047f
   1400503dd:	test   eax,eax
   1400503df:	jle    0x14005047f
   1400503e5:	xor    r12d,r12d
   1400503e8:	data16 data16 xchg ax,ax
   1400503ec:	data16 data16 xchg ax,ax
   1400503f0:	sub    esi,0x1
   1400503f3:	test   BYTE PTR [r13+0x18],0x40
   1400503f8:	je     0x140050409
   1400503fa:	cmp    QWORD PTR [r13+0x10],r12
   1400503fe:	jne    0x140050409
   140050400:	add    ebp,0x1
   140050403:	mov    DWORD PTR [rsp+0x44],ebp
   140050407:	jmp    0x14005042a
   140050409:	movzx  ecx,WORD PTR [rdi]
   14005040c:	mov    rdx,r13
   14005040f:	call   0x1400599c0
   140050414:	cmp    ax,0xffff
   140050418:	jne    0x140050423
   14005041a:	or     ebp,0xffffffff
   14005041d:	mov    DWORD PTR [rsp+0x44],ebp
   140050421:	jmp    0x14005042a
   140050423:	add    ebp,0x1
   140050426:	mov    DWORD PTR [rsp+0x44],ebp
   14005042a:	add    rdi,0x2
   14005042e:	cmp    ebp,0xffffffff
   140050431:	jne    0x140050472
   140050433:	call   0x140048680
   140050438:	cmp    DWORD PTR [rax],0x2a
   14005043b:	jne    0x14005047a
   14005043d:	test   BYTE PTR [r13+0x18],0x40
   140050442:	je     0x140050454
   140050444:	cmp    QWORD PTR [r13+0x10],r12
   140050448:	jne    0x140050454
   14005044a:	mov    ebp,r12d
   14005044d:	mov    DWORD PTR [rsp+0x44],r12d
   140050452:	jmp    0x140050472
   140050454:	mov    rdx,r13
   140050457:	mov    cx,0x3f
   14005045b:	call   0x1400599c0
   140050460:	mov    ebp,r12d
   140050463:	cmp    ax,0xffff
   140050467:	setne  bpl
   14005046b:	sub    ebp,0x1
   14005046e:	mov    DWORD PTR [rsp+0x44],ebp
   140050472:	test   esi,esi
   140050474:	jg     0x1400503f0
   14005047a:	mov    r12d,DWORD PTR [rsp+0x40]
   14005047f:	test   r12b,0x8
   140050483:	je     0x1400504d8
   140050485:	test   r12b,0x4
   140050489:	jne    0x1400504d8
   14005048b:	test   r14d,r14d
   14005048e:	mov    edi,r14d
   140050491:	jle    0x1400504d8
   140050493:	sub    edi,0x1
   140050496:	test   BYTE PTR [r13+0x18],0x40
   14005049b:	je     0x1400504ad
   14005049d:	cmp    QWORD PTR [r13+0x10],0x0
   1400504a2:	jne    0x1400504ad
   1400504a4:	add    ebp,0x1
   1400504a7:	mov    DWORD PTR [rsp+0x44],ebp
   1400504ab:	jmp    0x1400504c6
   1400504ad:	mov    rdx,r13
   1400504b0:	mov    cx,0x30
   1400504b4:	call   0x1400599c0
   1400504b9:	cmp    ax,0xffff
   1400504bd:	je     0x1400504d1
   1400504bf:	add    ebp,0x1
   1400504c2:	mov    DWORD PTR [rsp+0x44],ebp
   1400504c6:	cmp    ebp,0xffffffff
   1400504c9:	je     0x1400504d8
   1400504cb:	test   edi,edi
   1400504cd:	jg     0x140050493
   1400504cf:	jmp    0x1400504d8
   1400504d1:	or     ebp,0xffffffff
   1400504d4:	mov    DWORD PTR [rsp+0x44],ebp
   1400504d8:	cmp    DWORD PTR [rsp+0x60],0x0
   1400504dd:	jne    0x14005057e
   1400504e3:	test   r15d,r15d
   1400504e6:	jle    0x14005057e
   1400504ec:	mov    rdi,rbx
   1400504ef:	mov    esi,r15d
   1400504f2:	xchg   ax,ax
   1400504f4:	data16 data16 xchg ax,ax
   1400504f8:	data16 data16 xchg ax,ax
   1400504fc:	data16 data16 xchg ax,ax
   140050500:	mov    rax,QWORD PTR [rsp+0x78]
   140050505:	lea    r9,[rsp+0x78]
   14005050a:	lea    rcx,[rsp+0x68]
   14005050f:	movsxd r8,DWORD PTR [rax+0x10c]
   140050516:	mov    rdx,rdi
   140050519:	sub    esi,0x1
   14005051c:	call   0x140059c60
   140050521:	test   eax,eax
   140050523:	movsxd r12,eax
   140050526:	jle    0x140050570
   140050528:	test   BYTE PTR [r13+0x18],0x40
   14005052d:	je     0x14005053f
   14005052f:	cmp    QWORD PTR [r13+0x10],0x0
   140050534:	jne    0x14005053f
   140050536:	add    ebp,0x1
   140050539:	mov    DWORD PTR [rsp+0x44],ebp
   14005053d:	jmp    0x140050562
   14005053f:	movzx  ecx,WORD PTR [rsp+0x68]
   140050544:	mov    rdx,r13
   140050547:	call   0x1400599c0
   14005054c:	cmp    ax,0xffff
   140050550:	jne    0x14005055b
   140050552:	or     ebp,0xffffffff
   140050555:	mov    DWORD PTR [rsp+0x44],ebp
   140050559:	jmp    0x140050562
   14005055b:	add    ebp,0x1
   14005055e:	mov    DWORD PTR [rsp+0x44],ebp
   140050562:	add    rdi,r12
   140050565:	test   esi,esi
   140050567:	jg     0x140050500
   140050569:	mov    r12d,DWORD PTR [rsp+0x40]
   14005056e:	jmp    0x140050595
   140050570:	mov    r14d,DWORD PTR [rsp+0x40]
   140050575:	or     ebp,0xffffffff
   140050578:	mov    DWORD PTR [rsp+0x44],ebp
   14005057c:	jmp    0x1400505f3
   14005057e:	lea    r9,[rsp+0x44]
   140050583:	mov    r8,r13
   140050586:	mov    edx,r15d
   140050589:	mov    rcx,rbx
   14005058c:	call   0x14004f7d0
   140050591:	mov    ebp,DWORD PTR [rsp+0x44]
   140050595:	test   ebp,ebp
   140050597:	js     0x140050653
   14005059d:	test   r12b,0x4
   1400505a1:	je     0x14005065a
   1400505a7:	test   r14d,r14d
   1400505aa:	jle    0x14005064c
   1400505b0:	sub    r14d,0x1
   1400505b4:	test   BYTE PTR [r13+0x18],0x40
   1400505b9:	je     0x1400505cb
   1400505bb:	cmp    QWORD PTR [r13+0x10],0x0
   1400505c0:	jne    0x1400505cb
   1400505c2:	add    ebp,0x1
   1400505c5:	mov    DWORD PTR [rsp+0x44],ebp
   1400505c9:	jmp    0x1400505e4
   1400505cb:	mov    rdx,r13
   1400505ce:	mov    cx,0x20
   1400505d2:	call   0x1400599c0
   1400505d7:	cmp    ax,0xffff
   1400505db:	je     0x140050637
   1400505dd:	add    ebp,0x1
   1400505e0:	mov    DWORD PTR [rsp+0x44],ebp
   1400505e4:	cmp    ebp,0xffffffff
   1400505e7:	je     0x140050645
   1400505e9:	test   r14d,r14d
   1400505ec:	jg     0x1400505b0
   1400505ee:	mov    r14d,DWORD PTR [rsp+0x40]
   1400505f3:	mov    rax,QWORD PTR [rsp+0xa0]
   1400505fb:	test   rax,rax
   1400505fe:	je     0x140050661
   140050600:	mov    rcx,rax
   140050603:	call   0x1400485c0
   140050608:	mov    r9d,DWORD PTR [rsp+0x48]
   14005060d:	mov    rdi,QWORD PTR [rsp+0x58]
   140050612:	mov    rsi,QWORD PTR [rsp+0xa8]
   14005061a:	mov    r10d,DWORD PTR [rsp+0x4c]
   14005061f:	mov    r11d,DWORD PTR [rsp+0x50]
   140050624:	xor    ecx,ecx
   140050626:	lea    rdx,[rip+0xfffffffffffaf9d3]        # 0x140000000
   14005062d:	mov    QWORD PTR [rsp+0xa0],rcx
   140050635:	jmp    0x14005068d
   140050637:	mov    r14d,DWORD PTR [rsp+0x40]
   14005063c:	or     ebp,0xffffffff
   14005063f:	mov    DWORD PTR [rsp+0x44],ebp
   140050643:	jmp    0x1400505f3
   140050645:	mov    r14d,DWORD PTR [rsp+0x40]
   14005064a:	jmp    0x1400505f3
   14005064c:	mov    r14d,DWORD PTR [rsp+0x40]
   140050651:	jmp    0x1400505f3
   140050653:	mov    r14d,DWORD PTR [rsp+0x40]
   140050658:	jmp    0x1400505f3
   14005065a:	mov    r14d,DWORD PTR [rsp+0x40]
   14005065f:	jmp    0x1400505f3
   140050661:	mov    r9d,DWORD PTR [rsp+0x48]
   140050666:	mov    rdi,QWORD PTR [rsp+0x58]
   14005066b:	mov    rsi,QWORD PTR [rsp+0xa8]
   140050673:	mov    r10d,DWORD PTR [rsp+0x4c]
   140050678:	mov    r11d,DWORD PTR [rsp+0x50]
   14005067d:	lea    rdx,[rip+0xfffffffffffaf97c]        # 0x140000000
   140050684:	jmp    0x14005068d
   140050686:	lea    rdx,[rip+0xfffffffffffaf973]        # 0x140000000
   14005068d:	mov    r12w,WORD PTR [rsi]
   140050691:	test   r12w,r12w
   140050695:	je     0x1400506e3
   140050697:	mov    r8d,DWORD PTR [rsp+0x98]
   14005069f:	jmp    0x14004fa70
   1400506a4:	call   0x140048680
   1400506a9:	xor    r9d,r9d
   1400506ac:	xor    r8d,r8d
   1400506af:	mov    DWORD PTR [rax],0x16
   1400506b5:	xor    eax,eax
   1400506b7:	xor    edx,edx
   1400506b9:	xor    ecx,ecx
   1400506bb:	mov    QWORD PTR [rsp+0x20],rax
   1400506c0:	call   0x14004e100
   1400506c5:	cmp    BYTE PTR [rsp+0x90],0x0
   1400506cd:	je     0x1400506de
   1400506cf:	mov    rax,QWORD PTR [rsp+0x88]
   1400506d7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400506de:	or     eax,0xffffffff
   1400506e1:	jmp    0x1400506fe
   1400506e3:	mov    rdx,QWORD PTR [rsp+0x88]
   1400506eb:	cmp    BYTE PTR [rsp+0x90],0x0
   1400506f3:	je     0x1400506fc
   1400506f5:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   1400506fc:	mov    eax,ebp
   1400506fe:	mov    r12,QWORD PTR [rsp+0x4e0]
   140050706:	mov    rbp,QWORD PTR [rsp+0x4e8]
   14005070e:	mov    r15,QWORD PTR [rsp+0x4d8]
   140050716:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14005071e:	xor    rcx,rsp
   140050721:	call   0x140046470
   140050726:	add    rsp,0x4f0
   14005072d:	pop    r14
   14005072f:	pop    r13
   140050731:	pop    rdi
   140050732:	pop    rsi
   140050733:	pop    rbx
   140050734:	ret    
   140050735:	data16 xchg ax,ax
   140050738:	adc    al,0xfd
   14005073a:	add    al,0x0
   14005073c:	in     al,0xfa
   14005073e:	add    al,0x0
   140050740:	sbb    bl,bh
   140050742:	add    al,0x0
   140050744:	cmp    bl,0x4
   140050747:	add    dh,cl
   140050749:	sti    
   14005074a:	add    al,0x0
   14005074c:	fdiv   st(3),st
   14005074e:	add    al,0x0
   140050750:	and    bh,ah
   140050752:	add    al,0x0
   140050754:	mov    ebp,?
   140050756:	add    al,0x0
   140050758:	scas   al,BYTE PTR es:[rdi]
   140050759:	inc    DWORD PTR [rax+rax*1]
   14005075c:	mov    dl,0xfd
   14005075e:	add    al,0x0
   140050760:	mov    dl,0xfe
   140050762:	add    al,0x0
   140050764:	push   rsp
   140050765:	add    DWORD PTR [rip+0x4fe4900],eax        # 0x14503506b
   14005076b:	add    BYTE PTR [rsi-0x3bfffb01],bh
   140050771:	std    
   140050772:	add    al,0x0
   140050774:	sub    eax,DWORD PTR [rcx]
   140050776:	add    eax,0x4ff6f00
   14005077b:	add    BYTE PTR [rcx+0x44000501],cl
   140050781:	add    DWORD PTR [rip+0x4fec400],eax        # 0x14503cb87
   140050787:	add    BYTE PTR [rcx+rax*1],bh
   14005078a:	add    eax,0x5015f00
   14005078f:	add    bh,ah
   140050791:	add    al,BYTE PTR [rip+0x10e0000]        # 0x141130797
   140050797:	(bad)  
   140050798:	add    BYTE PTR [rsi],cl
   14005079a:	add    BYTE PTR [rsi],cl
   14005079c:	(bad)  
   14005079d:	(bad)  
   14005079e:	(bad)  
   14005079f:	(bad)  
   1400507a0:	(bad)  
   1400507a1:	(bad)  
   1400507a2:	(bad)  
   1400507a3:	(bad)  
   1400507a4:	(bad)  
   1400507a5:	(bad)  
   1400507a6:	add    cl,BYTE PTR [rsi]
   1400507a8:	(bad)  
   1400507a9:	(bad)  
   1400507aa:	(bad)  
   1400507ab:	add    ecx,DWORD PTR [rsi]
   1400507ad:	add    al,0xe
   1400507af:	(bad)  
   1400507b0:	(bad)  
   1400507b1:	(bad)  
   1400507b2:	(bad)  
   1400507b3:	(bad)  
   1400507b4:	add    eax,0x507060e
   1400507b9:	add    eax,0xe070e05
   1400507be:	(bad)  
   1400507bf:	(bad)  
   1400507c0:	(bad)  
   1400507c1:	or     BYTE PTR [rcx],cl
   1400507c3:	or     cl,BYTE PTR [rsi]
   1400507c5:	(bad)  
   1400507c6:	or     ecx,DWORD PTR [rsi]
   1400507c8:	or     al,0xe
   1400507ca:	(bad)  
   1400507cb:	or     eax,0xcccccccc
   1400507d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400507d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400507da:	mov    QWORD PTR [rsp+0x18],rsi
   1400507df:	push   rdi
   1400507e0:	sub    rsp,0x20
   1400507e4:	test   BYTE PTR [r8+0x18],0x40
   1400507e9:	mov    rbx,r9
   1400507ec:	mov    rdi,r8
   1400507ef:	mov    esi,edx
   1400507f1:	mov    rbp,rcx
   1400507f4:	je     0x140050802
   1400507f6:	cmp    QWORD PTR [r8+0x10],0x0
   1400507fb:	jne    0x140050802
   1400507fd:	add    DWORD PTR [r9],edx
   140050800:	jmp    0x140050874
   140050802:	test   edx,edx
   140050804:	jle    0x140050874
   140050806:	sub    esi,0x1
   140050809:	test   BYTE PTR [rdi+0x18],0x40
   14005080d:	je     0x140050816
   14005080f:	cmp    QWORD PTR [rdi+0x10],0x0
   140050814:	je     0x140050830
   140050816:	movzx  ecx,WORD PTR [rbp+0x0]
   14005081a:	mov    rdx,rdi
   14005081d:	call   0x1400599c0
   140050822:	cmp    ax,0xffff
   140050826:	jne    0x140050830
   140050828:	mov    DWORD PTR [rbx],0xffffffff
   14005082e:	jmp    0x140050833
   140050830:	add    DWORD PTR [rbx],0x1
   140050833:	add    rbp,0x2
   140050837:	cmp    DWORD PTR [rbx],0xffffffff
   14005083a:	jne    0x140050870
   14005083c:	call   0x140048680
   140050841:	cmp    DWORD PTR [rax],0x2a
   140050844:	jne    0x140050874
   140050846:	test   BYTE PTR [rdi+0x18],0x40
   14005084a:	je     0x140050853
   14005084c:	cmp    QWORD PTR [rdi+0x10],0x0
   140050851:	je     0x14005086d
   140050853:	mov    rdx,rdi
   140050856:	mov    cx,0x3f
   14005085a:	call   0x1400599c0
   14005085f:	cmp    ax,0xffff
   140050863:	jne    0x14005086d
   140050865:	mov    DWORD PTR [rbx],0xffffffff
   14005086b:	jmp    0x140050870
   14005086d:	add    DWORD PTR [rbx],0x1
   140050870:	test   esi,esi
   140050872:	jg     0x140050806
   140050874:	mov    rbx,QWORD PTR [rsp+0x30]
   140050879:	mov    rbp,QWORD PTR [rsp+0x38]
   14005087e:	mov    rsi,QWORD PTR [rsp+0x40]
   140050883:	add    rsp,0x20
   140050887:	pop    rdi
   140050888:	ret    
   140050889:	int3   
   14005088a:	int3   
   14005088b:	int3   
   14005088c:	int3   
   14005088d:	int3   
   14005088e:	int3   
   14005088f:	int3   
   140050890:	rex push rbx
   140050892:	push   rsi
   140050893:	push   rdi
   140050894:	push   r13
   140050896:	push   r14
   140050898:	sub    rsp,0x4f0
   14005089f:	mov    rax,QWORD PTR [rip+0x364ca]        # 0x140086d70
   1400508a6:	xor    rax,rsp
   1400508a9:	mov    QWORD PTR [rsp+0x4c0],rax
   1400508b1:	xor    ebx,ebx
   1400508b3:	test   r8,r8
   1400508b6:	mov    rdi,r9
   1400508b9:	mov    QWORD PTR [rsp+0x58],r9
   1400508be:	mov    rsi,rdx
   1400508c1:	mov    r13,rcx
   1400508c4:	mov    DWORD PTR [rsp+0x98],ebx
   1400508cb:	mov    r14d,ebx
   1400508ce:	mov    DWORD PTR [rsp+0x44],ebx
   1400508d2:	mov    r11d,ebx
   1400508d5:	mov    DWORD PTR [rsp+0x54],ebx
   1400508d9:	mov    r9d,ebx
   1400508dc:	mov    DWORD PTR [rsp+0x4c],ebx
   1400508e0:	mov    r10d,ebx
   1400508e3:	mov    DWORD PTR [rsp+0x50],ebx
   1400508e7:	mov    DWORD PTR [rsp+0x70],ebx
   1400508eb:	mov    DWORD PTR [rsp+0x60],ebx
   1400508ef:	mov    BYTE PTR [rsp+0x90],bl
   1400508f6:	jne    0x1400509ba
   1400508fc:	call   0x14004bd60
   140050901:	mov    QWORD PTR [rsp+0x88],rax
   140050909:	mov    rdx,rax
   14005090c:	mov    rcx,QWORD PTR [rax+0xc0]
   140050913:	cmp    rcx,QWORD PTR [rip+0x36f86]        # 0x1400878a0
   14005091a:	mov    QWORD PTR [rsp+0x78],rcx
   14005091f:	mov    rax,QWORD PTR [rax+0xb8]
   140050926:	mov    QWORD PTR [rsp+0x80],rax
   14005092e:	je     0x140050958
   140050930:	mov    ecx,DWORD PTR [rdx+0xc8]
   140050936:	test   DWORD PTR [rip+0x36dec],ecx        # 0x140087728
   14005093c:	jne    0x140050958
   14005093e:	call   0x14004f030
   140050943:	mov    rdx,QWORD PTR [rsp+0x88]
   14005094b:	mov    QWORD PTR [rsp+0x78],rax
   140050950:	mov    rax,QWORD PTR [rsp+0x80]
   140050958:	cmp    rax,QWORD PTR [rip+0x36cc1]        # 0x140087620
   14005095f:	je     0x140050984
   140050961:	mov    eax,DWORD PTR [rdx+0xc8]
   140050967:	test   DWORD PTR [rip+0x36dbb],eax        # 0x140087728
   14005096d:	jne    0x140050984
   14005096f:	call   0x14004e4e0
   140050974:	mov    rdx,QWORD PTR [rsp+0x88]
   14005097c:	mov    QWORD PTR [rsp+0x80],rax
   140050984:	test   BYTE PTR [rdx+0xc8],0x2
   14005098b:	jne    0x1400509af
   14005098d:	or     DWORD PTR [rdx+0xc8],0x2
   140050994:	mov    rdx,QWORD PTR [rsp+0x88]
   14005099c:	mov    r9d,ebx
   14005099f:	mov    BYTE PTR [rsp+0x90],0x1
   1400509a7:	mov    r10d,ebx
   1400509aa:	mov    r11d,ebx
   1400509ad:	jmp    0x1400509d5
   1400509af:	mov    r9d,ebx
   1400509b2:	mov    r10d,ebx
   1400509b5:	mov    r11d,ebx
   1400509b8:	jmp    0x1400509d5
   1400509ba:	mov    rax,QWORD PTR [r8]
   1400509bd:	lea    rcx,[rsp+0x78]
   1400509c2:	mov    QWORD PTR [rcx],rax
   1400509c5:	mov    rax,QWORD PTR [r8+0x8]
   1400509c9:	mov    QWORD PTR [rcx+0x8],rax
   1400509cd:	mov    rdx,QWORD PTR [rsp+0x88]
   1400509d5:	test   r13,r13
   1400509d8:	jne    0x140050a19
   1400509da:	call   0x140048680
   1400509df:	xor    r9d,r9d
   1400509e2:	xor    r8d,r8d
   1400509e5:	xor    edx,edx
   1400509e7:	xor    ecx,ecx
   1400509e9:	mov    QWORD PTR [rsp+0x20],rbx
   1400509ee:	mov    DWORD PTR [rax],0x16
   1400509f4:	call   0x14004e100
   1400509f9:	cmp    BYTE PTR [rsp+0x90],bl
   140050a00:	je     0x140050a11
   140050a02:	mov    rax,QWORD PTR [rsp+0x88]
   140050a0a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140050a11:	or     eax,0xffffffff
   140050a14:	jmp    0x140051799
   140050a19:	test   rsi,rsi
   140050a1c:	je     0x1400509da
   140050a1e:	xor    r8d,r8d
   140050a21:	mov    QWORD PTR [rsp+0x4e8],rbp
   140050a29:	mov    QWORD PTR [rsp+0x4e0],r12
   140050a31:	movzx  r12d,WORD PTR [rsi]
   140050a35:	mov    eax,r8d
   140050a38:	mov    rcx,r8
   140050a3b:	test   r12w,r12w
   140050a3f:	mov    QWORD PTR [rsp+0x4d8],r15
   140050a47:	mov    ebp,r8d
   140050a4a:	mov    DWORD PTR [rsp+0x48],r8d
   140050a4f:	mov    DWORD PTR [rsp+0x40],eax
   140050a53:	mov    QWORD PTR [rsp+0xa0],rcx
   140050a5b:	mov    r15d,r8d
   140050a5e:	je     0x14005176e
   140050a64:	mov    rbx,QWORD PTR [rsp+0xb0]
   140050a6c:	lea    rdx,[rip+0xfffffffffffaf58d]        # 0x140000000
   140050a73:	nop
   140050a74:	data16 data16 xchg ax,ax
   140050a78:	data16 data16 xchg ax,ax
   140050a7c:	data16 data16 xchg ax,ax
   140050a80:	add    rsi,0x2
   140050a84:	test   ebp,ebp
   140050a86:	mov    QWORD PTR [rsp+0xa8],rsi
   140050a8e:	js     0x14005171e
   140050a94:	lea    eax,[r12-0x20]
   140050a99:	cmp    ax,0x58
   140050a9d:	ja     0x140050aaf
   140050a9f:	movzx  eax,r12w
   140050aa3:	mov    cl,BYTE PTR [rax+rdx*1+0x702a0]
   140050aaa:	and    ecx,0xf
   140050aad:	jmp    0x140050ab2
   140050aaf:	mov    ecx,r8d
   140050ab2:	movsxd rax,ecx
   140050ab5:	lea    rcx,[rax+rax*8]
   140050ab9:	movsxd rax,DWORD PTR [rsp+0x40]
   140050abe:	add    rcx,rax
   140050ac1:	movzx  eax,BYTE PTR [rcx+rdx*1+0x702c0]
   140050ac9:	shr    eax,0x4
   140050acc:	cmp    eax,0x8
   140050acf:	mov    DWORD PTR [rsp+0x40],eax
   140050ad3:	je     0x140051727
   140050ad9:	cmp    eax,0x7
   140050adc:	ja     0x140051710
   140050ae2:	mov    ecx,DWORD PTR [rdx+rax*4+0x517b8]
   140050ae9:	add    rcx,rdx
   140050aec:	jmp    rcx
   140050aee:	or     r9d,0xffffffff
   140050af2:	mov    DWORD PTR [rsp+0x9c],r8d
   140050afa:	mov    DWORD PTR [rsp+0x70],r8d
   140050aff:	mov    r11d,r8d
   140050b02:	mov    DWORD PTR [rsp+0x54],r8d
   140050b07:	mov    r10d,r8d
   140050b0a:	mov    DWORD PTR [rsp+0x4c],r9d
   140050b0f:	mov    DWORD PTR [rsp+0x50],r8d
   140050b14:	mov    r14d,r8d
   140050b17:	mov    DWORD PTR [rsp+0x44],r8d
   140050b1c:	mov    DWORD PTR [rsp+0x60],r8d
   140050b21:	jmp    0x140051710
   140050b26:	movzx  eax,r12w
   140050b2a:	cmp    eax,0x20
   140050b2d:	je     0x140050b90
   140050b2f:	cmp    eax,0x23
   140050b32:	je     0x140050b7d
   140050b34:	cmp    eax,0x2b
   140050b37:	je     0x140050b6b
   140050b39:	cmp    eax,0x2d
   140050b3c:	je     0x140050b59
   140050b3e:	cmp    eax,0x30
   140050b41:	jne    0x14005170c
   140050b47:	mov    eax,DWORD PTR [rsp+0x40]
   140050b4b:	or     r14d,0x8
   140050b4f:	mov    DWORD PTR [rsp+0x44],r14d
   140050b54:	jmp    0x140051710
   140050b59:	mov    eax,DWORD PTR [rsp+0x40]
   140050b5d:	or     r14d,0x4
   140050b61:	mov    DWORD PTR [rsp+0x44],r14d
   140050b66:	jmp    0x140051710
   140050b6b:	mov    eax,DWORD PTR [rsp+0x40]
   140050b6f:	or     r14d,0x1
   140050b73:	mov    DWORD PTR [rsp+0x44],r14d
   140050b78:	jmp    0x140051710
   140050b7d:	mov    eax,DWORD PTR [rsp+0x40]
   140050b81:	bts    r14d,0x7
   140050b86:	mov    DWORD PTR [rsp+0x44],r14d
   140050b8b:	jmp    0x140051710
   140050b90:	mov    eax,DWORD PTR [rsp+0x40]
   140050b94:	or     r14d,0x2
   140050b98:	mov    DWORD PTR [rsp+0x44],r14d
   140050b9d:	jmp    0x140051710
   140050ba2:	cmp    r12w,0x2a
   140050ba7:	jne    0x140050bd9
   140050ba9:	mov    r11d,DWORD PTR [rdi]
   140050bac:	add    rdi,0x8
   140050bb0:	test   r11d,r11d
   140050bb3:	mov    QWORD PTR [rsp+0x58],rdi
   140050bb8:	mov    DWORD PTR [rsp+0x54],r11d
   140050bbd:	jns    0x140051710
   140050bc3:	or     r14d,0x4
   140050bc7:	neg    r11d
   140050bca:	mov    DWORD PTR [rsp+0x54],r11d
   140050bcf:	mov    DWORD PTR [rsp+0x44],r14d
   140050bd4:	jmp    0x140051710
   140050bd9:	movzx  eax,r12w
   140050bdd:	lea    ecx,[r11+r11*4]
   140050be1:	lea    r11d,[rax+rcx*2-0x30]
   140050be6:	mov    eax,DWORD PTR [rsp+0x40]
   140050bea:	mov    DWORD PTR [rsp+0x54],r11d
   140050bef:	jmp    0x140051710
   140050bf4:	mov    r9d,r8d
   140050bf7:	mov    DWORD PTR [rsp+0x4c],r8d
   140050bfc:	jmp    0x140051710
   140050c01:	cmp    r12w,0x2a
   140050c06:	jne    0x140050c30
   140050c08:	mov    r9d,DWORD PTR [rdi]
   140050c0b:	add    rdi,0x8
   140050c0f:	test   r9d,r9d
   140050c12:	mov    QWORD PTR [rsp+0x58],rdi
   140050c17:	mov    DWORD PTR [rsp+0x4c],r9d
   140050c1c:	jns    0x140051710
   140050c22:	or     r9d,0xffffffff
   140050c26:	mov    DWORD PTR [rsp+0x4c],r9d
   140050c2b:	jmp    0x140051710
   140050c30:	movzx  eax,r12w
   140050c34:	lea    ecx,[r9+r9*4]
   140050c38:	lea    r9d,[rax+rcx*2-0x30]
   140050c3d:	mov    eax,DWORD PTR [rsp+0x40]
   140050c41:	mov    DWORD PTR [rsp+0x4c],r9d
   140050c46:	jmp    0x140051710
   140050c4b:	movzx  eax,r12w
   140050c4f:	cmp    eax,0x49
   140050c52:	je     0x140050cbb
   140050c54:	cmp    eax,0x68
   140050c57:	je     0x140050ca9
   140050c59:	cmp    eax,0x6c
   140050c5c:	je     0x140050c7a
   140050c5e:	cmp    eax,0x77
   140050c61:	jne    0x1400516e2
   140050c67:	mov    eax,DWORD PTR [rsp+0x40]
   140050c6b:	bts    r14d,0xb
   140050c70:	mov    DWORD PTR [rsp+0x44],r14d
   140050c75:	jmp    0x140051710
   140050c7a:	cmp    WORD PTR [rsi],0x6c
   140050c7e:	jne    0x140050c97
   140050c80:	mov    eax,DWORD PTR [rsp+0x40]
   140050c84:	add    rsi,0x2
   140050c88:	bts    r14d,0xc
   140050c8d:	mov    DWORD PTR [rsp+0x44],r14d
   140050c92:	jmp    0x140051710
   140050c97:	mov    eax,DWORD PTR [rsp+0x40]
   140050c9b:	or     r14d,0x10
   140050c9f:	mov    DWORD PTR [rsp+0x44],r14d
   140050ca4:	jmp    0x140051710
   140050ca9:	mov    eax,DWORD PTR [rsp+0x40]
   140050cad:	or     r14d,0x20
   140050cb1:	mov    DWORD PTR [rsp+0x44],r14d
   140050cb6:	jmp    0x140051710
   140050cbb:	movzx  eax,WORD PTR [rsi]
   140050cbe:	bts    r14d,0xf
   140050cc3:	cmp    ax,0x36
   140050cc7:	mov    DWORD PTR [rsp+0x44],r14d
   140050ccc:	jne    0x140050cec
   140050cce:	cmp    WORD PTR [rsi+0x2],0x34
   140050cd3:	jne    0x140050cec
   140050cd5:	mov    eax,DWORD PTR [rsp+0x40]
   140050cd9:	add    rsi,0x4
   140050cdd:	bts    r14d,0xf
   140050ce2:	mov    DWORD PTR [rsp+0x44],r14d
   140050ce7:	jmp    0x140051710
   140050cec:	cmp    ax,0x33
   140050cf0:	jne    0x140050d10
   140050cf2:	cmp    WORD PTR [rsi+0x2],0x32
   140050cf7:	jne    0x140050d10
   140050cf9:	mov    eax,DWORD PTR [rsp+0x40]
   140050cfd:	add    rsi,0x4
   140050d01:	btr    r14d,0xf
   140050d06:	mov    DWORD PTR [rsp+0x44],r14d
   140050d0b:	jmp    0x140051710
   140050d10:	cmp    ax,0x64
   140050d14:	je     0x140051706
   140050d1a:	cmp    ax,0x69
   140050d1e:	je     0x140051700
   140050d24:	cmp    ax,0x6f
   140050d28:	je     0x1400516fa
   140050d2e:	cmp    ax,0x75
   140050d32:	je     0x1400516f4
   140050d38:	cmp    ax,0x78
   140050d3c:	je     0x1400516ee
   140050d42:	cmp    ax,0x58
   140050d46:	je     0x1400516e8
   140050d4c:	mov    eax,r8d
   140050d4f:	mov    DWORD PTR [rsp+0x40],eax
   140050d53:	test   BYTE PTR [r13+0x18],0x40
   140050d58:	mov    DWORD PTR [rsp+0x60],0x1
   140050d60:	je     0x140050d75
   140050d62:	cmp    QWORD PTR [r13+0x10],0x0
   140050d67:	jne    0x140050d75
   140050d69:	add    ebp,0x1
   140050d6c:	mov    DWORD PTR [rsp+0x48],ebp
   140050d70:	jmp    0x140051710
   140050d75:	mov    rdx,r13
   140050d78:	movzx  ecx,r12w
   140050d7c:	call   0x1400599c0
   140050d81:	cmp    ax,0xffff
   140050d85:	jne    0x140050db0
   140050d87:	mov    r9d,DWORD PTR [rsp+0x4c]
   140050d8c:	mov    eax,DWORD PTR [rsp+0x40]
   140050d90:	mov    r10d,DWORD PTR [rsp+0x50]
   140050d95:	mov    r11d,DWORD PTR [rsp+0x54]
   140050d9a:	or     ebp,0xffffffff
   140050d9d:	lea    rdx,[rip+0xfffffffffffaf25c]        # 0x140000000
   140050da4:	mov    DWORD PTR [rsp+0x48],ebp
   140050da8:	xor    r8d,r8d
   140050dab:	jmp    0x140051710
   140050db0:	mov    r9d,DWORD PTR [rsp+0x4c]
   140050db5:	mov    eax,DWORD PTR [rsp+0x40]
   140050db9:	mov    r10d,DWORD PTR [rsp+0x50]
   140050dbe:	mov    r11d,DWORD PTR [rsp+0x54]
   140050dc3:	add    ebp,0x1
   140050dc6:	lea    rdx,[rip+0xfffffffffffaf233]        # 0x140000000
   140050dcd:	mov    DWORD PTR [rsp+0x48],ebp
   140050dd1:	xor    r8d,r8d
   140050dd4:	jmp    0x140051710
   140050dd9:	movzx  eax,r12w
   140050ddd:	add    eax,0xffffffbf
   140050de0:	cmp    eax,0x37
   140050de3:	ja     0x14005133b
   140050de9:	cdqe   
   140050deb:	movzx  eax,BYTE PTR [rdx+rax*1+0x51814]
   140050df3:	mov    ecx,DWORD PTR [rdx+rax*4+0x517d8]
   140050dfa:	add    rcx,rdx
   140050dfd:	jmp    rcx
   140050dff:	test   r14d,0x830
   140050e06:	jne    0x140050e11
   140050e08:	or     r14d,0x20
   140050e0c:	mov    DWORD PTR [rsp+0x44],r14d
   140050e11:	movzx  eax,WORD PTR [rdi]
   140050e14:	add    rdi,0x8
   140050e18:	test   r14b,0x20
   140050e1c:	mov    WORD PTR [rsp+0x68],ax
   140050e21:	mov    DWORD PTR [rsp+0x60],0x1
   140050e29:	mov    QWORD PTR [rsp+0x58],rdi
   140050e2e:	je     0x140050e7b
   140050e30:	mov    BYTE PTR [rsp+0x6c],al
   140050e34:	mov    rax,QWORD PTR [rsp+0x78]
   140050e39:	mov    BYTE PTR [rsp+0x6d],0x0
   140050e3e:	movsxd r8,DWORD PTR [rax+0x10c]
   140050e45:	lea    r9,[rsp+0x78]
   140050e4a:	lea    rdx,[rsp+0x6c]
   140050e4f:	lea    rcx,[rsp+0xc0]
   140050e57:	call   0x140059c60
   140050e5c:	test   eax,eax
   140050e5e:	jns    0x140050e83
   140050e60:	mov    DWORD PTR [rsp+0x70],0x1
   140050e68:	lea    rbx,[rsp+0xc0]
   140050e70:	mov    r15d,0x1
   140050e76:	jmp    0x14005133b
   140050e7b:	mov    WORD PTR [rsp+0xc0],ax
   140050e83:	lea    rbx,[rsp+0xc0]
   140050e8b:	mov    r15d,0x1
   140050e91:	jmp    0x14005133b
   140050e96:	mov    rax,QWORD PTR [rdi]
   140050e99:	add    rdi,0x8
   140050e9d:	test   rax,rax
   140050ea0:	mov    QWORD PTR [rsp+0x58],rdi
   140050ea5:	je     0x140050edd
   140050ea7:	mov    rbx,QWORD PTR [rax+0x8]
   140050eab:	test   rbx,rbx
   140050eae:	je     0x140050edd
   140050eb0:	bt     r14d,0xb
   140050eb5:	jae    0x140050ecf
   140050eb7:	movsx  eax,WORD PTR [rax]
   140050eba:	mov    DWORD PTR [rsp+0x60],0x1
   140050ec2:	cdq    
   140050ec3:	sub    eax,edx
   140050ec5:	sar    eax,1
   140050ec7:	mov    r15d,eax
   140050eca:	jmp    0x14005133b
   140050ecf:	movsx  r15d,WORD PTR [rax]
   140050ed3:	mov    DWORD PTR [rsp+0x60],r8d
   140050ed8:	jmp    0x14005133b
   140050edd:	mov    rbx,QWORD PTR [rip+0x3737c]        # 0x140088260
   140050ee4:	or     rcx,0xffffffffffffffff
   140050ee8:	xor    eax,eax
   140050eea:	mov    rdi,rbx
   140050eed:	repnz scas al,BYTE PTR es:[rdi]
   140050eef:	not    rcx
   140050ef2:	lea    r15,[rcx-0x1]
   140050ef6:	jmp    0x14005133b
   140050efb:	test   r14d,0x830
   140050f02:	jne    0x140050f0d
   140050f04:	or     r14d,0x20
   140050f08:	mov    DWORD PTR [rsp+0x44],r14d
   140050f0d:	mov    rbx,QWORD PTR [rdi]
   140050f10:	cmp    r9d,0xffffffff
   140050f14:	mov    esi,r9d
   140050f17:	mov    eax,0x7fffffff
   140050f1c:	cmove  esi,eax
   140050f1f:	add    rdi,0x8
   140050f23:	test   r14b,0x20
   140050f27:	mov    QWORD PTR [rsp+0x58],rdi
   140050f2c:	je     0x140050f82
   140050f2e:	test   rbx,rbx
   140050f31:	mov    r15d,r8d
   140050f34:	cmove  rbx,QWORD PTR [rip+0x37324]        # 0x140088260
   140050f3c:	test   esi,esi
   140050f3e:	mov    rdi,rbx
   140050f41:	jle    0x14005133b
   140050f47:	data16 xchg ax,ax
   140050f4a:	data16 xchg ax,ax
   140050f4d:	data16 xchg ax,ax
   140050f50:	movzx  eax,BYTE PTR [rdi]
   140050f53:	test   al,al
   140050f55:	je     0x14005133b
   140050f5b:	lea    rdx,[rsp+0x78]
   140050f60:	movzx  ecx,al
   140050f63:	call   0x140049dd0
   140050f68:	test   eax,eax
   140050f6a:	je     0x140050f70
   140050f6c:	add    rdi,0x1
   140050f70:	add    r15d,0x1
   140050f74:	add    rdi,0x1
   140050f78:	cmp    r15d,esi
   140050f7b:	jl     0x140050f50
   140050f7d:	jmp    0x14005133b
   140050f82:	test   rbx,rbx
   140050f85:	mov    DWORD PTR [rsp+0x60],0x1
   140050f8d:	cmove  rbx,QWORD PTR [rip+0x372d3]        # 0x140088268
   140050f95:	test   esi,esi
   140050f97:	mov    rax,rbx
   140050f9a:	je     0x140050fb1
   140050f9c:	data16 data16 xchg ax,ax
   140050fa0:	sub    esi,0x1
   140050fa3:	cmp    WORD PTR [rax],0x0
   140050fa7:	je     0x140050fb1
   140050fa9:	add    rax,0x2
   140050fad:	test   esi,esi
   140050faf:	jne    0x140050fa0
   140050fb1:	sub    rax,rbx
   140050fb4:	sar    rax,1
   140050fb7:	mov    r15d,eax
   140050fba:	jmp    0x14005133b
   140050fbf:	add    rdi,0x8
   140050fc3:	mov    QWORD PTR [rsp+0x58],rdi
   140050fc8:	mov    rdi,QWORD PTR [rdi-0x8]
   140050fcc:	call   0x140059c40
   140050fd1:	test   eax,eax
   140050fd3:	je     0x140051727
   140050fd9:	test   r14b,0x20
   140050fdd:	je     0x140050fef
   140050fdf:	mov    WORD PTR [rdi],bp
   140050fe2:	mov    DWORD PTR [rsp+0x70],0x1
   140050fea:	jmp    0x140051643
   140050fef:	mov    DWORD PTR [rdi],ebp
   140050ff1:	mov    DWORD PTR [rsp+0x70],0x1
   140050ff9:	jmp    0x140051643
   140050ffe:	mov    DWORD PTR [rsp+0x9c],0x1
   140051009:	add    r12w,0x20
   14005100e:	or     r14d,0x40
   140051012:	test   r9d,r9d
   140051015:	mov    eax,0x200
   14005101a:	mov    DWORD PTR [rsp+0x44],r14d
   14005101f:	mov    esi,eax
   140051021:	lea    rbx,[rsp+0xc0]
   140051029:	jns    0x140051038
   14005102b:	mov    r15d,0x6
   140051031:	mov    DWORD PTR [rsp+0x4c],r15d
   140051036:	jmp    0x1400510b3
   140051038:	test   r9d,r9d
   14005103b:	jne    0x140051051
   14005103d:	cmp    r12w,0x67
   140051042:	jne    0x1400510a7
   140051044:	mov    r15d,0x1
   14005104a:	mov    DWORD PTR [rsp+0x4c],r15d
   14005104f:	jmp    0x1400510b3
   140051051:	cmp    r9d,eax
   140051054:	jle    0x14005105f
   140051056:	mov    r9d,eax
   140051059:	mov    DWORD PTR [rsp+0x4c],eax
   14005105d:	jmp    0x140051068
   14005105f:	cmp    r9d,0xa3
   140051066:	jle    0x1400510ae
   140051068:	lea    edi,[r9+0x15d]
   14005106f:	movsxd rcx,edi
   140051072:	call   0x14004de20
   140051077:	test   rax,rax
   14005107a:	mov    QWORD PTR [rsp+0xa0],rax
   140051082:	je     0x140051095
   140051084:	mov    r15d,DWORD PTR [rsp+0x4c]
   140051089:	mov    esi,edi
   14005108b:	mov    rdi,QWORD PTR [rsp+0x58]
   140051090:	mov    rbx,rax
   140051093:	jmp    0x1400510b3
   140051095:	mov    rdi,QWORD PTR [rsp+0x58]
   14005109a:	mov    r15d,0xa3
   1400510a0:	mov    DWORD PTR [rsp+0x4c],r15d
   1400510a5:	jmp    0x1400510b3
   1400510a7:	mov    r15d,DWORD PTR [rsp+0x4c]
   1400510ac:	jmp    0x1400510b3
   1400510ae:	mov    r15d,DWORD PTR [rsp+0x4c]
   1400510b3:	mov    rax,QWORD PTR [rdi]
   1400510b6:	mov    rcx,QWORD PTR [rip+0x36e33]        # 0x140087ef0
   1400510bd:	add    rdi,0x8
   1400510c1:	mov    QWORD PTR [rsp+0x58],rdi
   1400510c6:	movsxd rsi,esi
   1400510c9:	mov    QWORD PTR [rsp+0xb0],rax
   1400510d1:	movsx  edi,r12b
   1400510d5:	call   0x14004ba70
   1400510da:	lea    rcx,[rsp+0x78]
   1400510df:	mov    QWORD PTR [rsp+0x30],rcx
   1400510e4:	mov    ecx,DWORD PTR [rsp+0x9c]
   1400510eb:	mov    r9d,edi
   1400510ee:	mov    DWORD PTR [rsp+0x28],ecx
   1400510f2:	lea    rcx,[rsp+0xb0]
   1400510fa:	mov    r8,rsi
   1400510fd:	mov    rdx,rbx
   140051100:	mov    DWORD PTR [rsp+0x20],r15d
   140051105:	call   rax
   140051107:	mov    edi,r14d
   14005110a:	and    edi,0x80
   140051110:	je     0x14005112d
   140051112:	test   r15d,r15d
   140051115:	jne    0x14005112d
   140051117:	mov    rcx,QWORD PTR [rip+0x36dea]        # 0x140087f08
   14005111e:	call   0x14004ba70
   140051123:	lea    rdx,[rsp+0x78]
   140051128:	mov    rcx,rbx
   14005112b:	call   rax
   14005112d:	cmp    r12w,0x67
   140051132:	jne    0x14005114e
   140051134:	test   edi,edi
   140051136:	jne    0x14005114e
   140051138:	mov    rcx,QWORD PTR [rip+0x36dc1]        # 0x140087f00
   14005113f:	call   0x14004ba70
   140051144:	lea    rdx,[rsp+0x78]
   140051149:	mov    rcx,rbx
   14005114c:	call   rax
   14005114e:	cmp    BYTE PTR [rbx],0x2d
   140051151:	jne    0x140051161
   140051153:	bts    r14d,0x8
   140051158:	add    rbx,0x1
   14005115c:	mov    DWORD PTR [rsp+0x44],r14d
   140051161:	or     rcx,0xffffffffffffffff
   140051165:	xor    eax,eax
   140051167:	mov    rdi,rbx
   14005116a:	repnz scas al,BYTE PTR es:[rdi]
   14005116c:	not    rcx
   14005116f:	lea    r15d,[rcx-0x1]
   140051173:	jmp    0x14005133b
   140051178:	or     r14d,0x40
   14005117c:	mov    r8d,0xa
   140051182:	mov    DWORD PTR [rsp+0x44],r14d
   140051187:	jmp    0x1400511f1
   140051189:	mov    r8d,0xa
   14005118f:	jmp    0x1400511f1
   140051191:	bts    r14d,0xf
   140051196:	mov    r9d,0x10
   14005119c:	mov    DWORD PTR [rsp+0x44],r14d
   1400511a1:	mov    eax,0x7
   1400511a6:	mov    DWORD PTR [rsp+0x98],eax
   1400511ad:	jmp    0x1400511bb
   1400511af:	mov    eax,0x27
   1400511b4:	mov    DWORD PTR [rsp+0x98],eax
   1400511bb:	test   r14b,r14b
   1400511be:	mov    r8d,0x10
   1400511c4:	jns    0x1400511f1
   1400511c6:	add    ax,0x51
   1400511ca:	mov    WORD PTR [rsp+0x64],0x30
   1400511d1:	lea    r10d,[r8-0xe]
   1400511d5:	mov    WORD PTR [rsp+0x66],ax
   1400511da:	jmp    0x1400511f1
   1400511dc:	test   r14b,r14b
   1400511df:	mov    r8d,0x8
   1400511e5:	jns    0x1400511f1
   1400511e7:	bts    r14d,0x9
   1400511ec:	mov    DWORD PTR [rsp+0x44],r14d
   1400511f1:	bt     r14d,0xf
   1400511f6:	jae    0x140051207
   1400511f8:	add    rdi,0x8
   1400511fc:	mov    QWORD PTR [rsp+0x58],rdi
   140051201:	mov    rdi,QWORD PTR [rdi-0x8]
   140051205:	jmp    0x140051269
   140051207:	bt     r14d,0xc
   14005120c:	jae    0x14005121d
   14005120e:	add    rdi,0x8
   140051212:	mov    QWORD PTR [rsp+0x58],rdi
   140051217:	mov    rdi,QWORD PTR [rdi-0x8]
   14005121b:	jmp    0x140051269
   14005121d:	test   r14b,0x20
   140051221:	je     0x140051248
   140051223:	test   r14b,0x40
   140051227:	je     0x140051239
   140051229:	add    rdi,0x8
   14005122d:	mov    QWORD PTR [rsp+0x58],rdi
   140051232:	movsx  rdi,WORD PTR [rdi-0x8]
   140051237:	jmp    0x140051269
   140051239:	add    rdi,0x8
   14005123d:	mov    QWORD PTR [rsp+0x58],rdi
   140051242:	movzx  edi,WORD PTR [rdi-0x8]
   140051246:	jmp    0x140051269
   140051248:	test   r14b,0x40
   14005124c:	je     0x14005125d
   14005124e:	add    rdi,0x8
   140051252:	mov    QWORD PTR [rsp+0x58],rdi
   140051257:	movsxd rdi,DWORD PTR [rdi-0x8]
   14005125b:	jmp    0x140051269
   14005125d:	add    rdi,0x8
   140051261:	mov    QWORD PTR [rsp+0x58],rdi
   140051266:	mov    edi,DWORD PTR [rdi-0x8]
   140051269:	test   r14b,0x40
   14005126d:	je     0x140051281
   14005126f:	test   rdi,rdi
   140051272:	jns    0x140051281
   140051274:	neg    rdi
   140051277:	bts    r14d,0x8
   14005127c:	mov    DWORD PTR [rsp+0x44],r14d
   140051281:	bt     r14d,0xf
   140051286:	jb     0x140051291
   140051288:	bt     r14d,0xc
   14005128d:	jb     0x140051291
   14005128f:	mov    edi,edi
   140051291:	test   r9d,r9d
   140051294:	jns    0x14005129e
   140051296:	mov    r9d,0x1
   14005129c:	jmp    0x1400512b3
   14005129e:	mov    eax,0x200
   1400512a3:	and    r14d,0xfffffff7
   1400512a7:	cmp    r9d,eax
   1400512aa:	mov    DWORD PTR [rsp+0x44],r14d
   1400512af:	cmovg  r9d,eax
   1400512b3:	mov    r14d,DWORD PTR [rsp+0x98]
   1400512bb:	test   rdi,rdi
   1400512be:	mov    eax,0x0
   1400512c3:	cmove  r10d,eax
   1400512c7:	lea    rbx,[rsp+0x2bf]
   1400512cf:	mov    DWORD PTR [rsp+0x50],r10d
   1400512d4:	mov    ecx,r9d
   1400512d7:	sub    r9d,0x1
   1400512db:	test   ecx,ecx
   1400512dd:	jg     0x1400512e4
   1400512df:	test   rdi,rdi
   1400512e2:	je     0x140051305
   1400512e4:	xor    edx,edx
   1400512e6:	mov    rax,rdi
   1400512e9:	movsxd rcx,r8d
   1400512ec:	div    rcx
   1400512ef:	mov    rdi,rax
   1400512f2:	lea    eax,[rdx+0x30]
   1400512f5:	cmp    eax,0x39
   1400512f8:	jle    0x1400512fd
   1400512fa:	add    eax,r14d
   1400512fd:	mov    BYTE PTR [rbx],al
   1400512ff:	sub    rbx,0x1
   140051303:	jmp    0x1400512d4
   140051305:	mov    r14d,DWORD PTR [rsp+0x44]
   14005130a:	lea    rax,[rsp+0x2bf]
   140051312:	mov    DWORD PTR [rsp+0x4c],r9d
   140051317:	sub    eax,ebx
   140051319:	add    rbx,0x1
   14005131d:	bt     r14d,0x9
   140051322:	mov    r15d,eax
   140051325:	jae    0x14005133b
   140051327:	test   eax,eax
   140051329:	je     0x140051330
   14005132b:	cmp    BYTE PTR [rbx],0x30
   14005132e:	je     0x14005133b
   140051330:	sub    rbx,0x1
   140051334:	add    r15d,0x1
   140051338:	mov    BYTE PTR [rbx],0x30
   14005133b:	cmp    DWORD PTR [rsp+0x70],0x0
   140051340:	jne    0x140051643
   140051346:	test   r14b,0x40
   14005134a:	je     0x140051395
   14005134c:	bt     r14d,0x8
   140051351:	jae    0x140051365
   140051353:	mov    eax,0x1
   140051358:	mov    WORD PTR [rsp+0x64],0x2d
   14005135f:	mov    DWORD PTR [rsp+0x50],eax
   140051363:	jmp    0x14005139f
   140051365:	test   r14b,0x1
   140051369:	je     0x14005137d
   14005136b:	mov    eax,0x1
   140051370:	mov    WORD PTR [rsp+0x64],0x2b
   140051377:	mov    DWORD PTR [rsp+0x50],eax
   14005137b:	jmp    0x14005139f
   14005137d:	test   r14b,0x2
   140051381:	je     0x14005139b
   140051383:	mov    eax,0x1
   140051388:	mov    WORD PTR [rsp+0x64],0x20
   14005138f:	mov    DWORD PTR [rsp+0x50],eax
   140051393:	jmp    0x14005139f
   140051395:	mov    eax,DWORD PTR [rsp+0x50]
   140051399:	jmp    0x14005139f
   14005139b:	mov    eax,DWORD PTR [rsp+0x50]
   14005139f:	mov    r14d,DWORD PTR [rsp+0x54]
   1400513a4:	mov    r12d,DWORD PTR [rsp+0x44]
   1400513a9:	sub    r14d,r15d
   1400513ac:	sub    r14d,eax
   1400513af:	test   r12b,0xc
   1400513b3:	jne    0x14005140d
   1400513b5:	test   r14d,r14d
   1400513b8:	mov    edi,r14d
   1400513bb:	jle    0x14005140d
   1400513bd:	data16 xchg ax,ax
   1400513c0:	sub    edi,0x1
   1400513c3:	test   BYTE PTR [r13+0x18],0x40
   1400513c8:	je     0x1400513da
   1400513ca:	cmp    QWORD PTR [r13+0x10],0x0
   1400513cf:	jne    0x1400513da
   1400513d1:	add    ebp,0x1
   1400513d4:	mov    DWORD PTR [rsp+0x48],ebp
   1400513d8:	jmp    0x1400513f3
   1400513da:	mov    rdx,r13
   1400513dd:	mov    cx,0x20
   1400513e1:	call   0x1400599c0
   1400513e6:	cmp    ax,0xffff
   1400513ea:	je     0x140051402
   1400513ec:	add    ebp,0x1
   1400513ef:	mov    DWORD PTR [rsp+0x48],ebp
   1400513f3:	cmp    ebp,0xffffffff
   1400513f6:	je     0x1400513fc
   1400513f8:	test   edi,edi
   1400513fa:	jg     0x1400513c0
   1400513fc:	mov    eax,DWORD PTR [rsp+0x50]
   140051400:	jmp    0x14005140d
   140051402:	mov    eax,DWORD PTR [rsp+0x50]
   140051406:	or     ebp,0xffffffff
   140051409:	mov    DWORD PTR [rsp+0x48],ebp
   14005140d:	test   BYTE PTR [r13+0x18],0x40
   140051412:	mov    esi,eax
   140051414:	lea    rdi,[rsp+0x64]
   140051419:	je     0x14005142d
   14005141b:	cmp    QWORD PTR [r13+0x10],0x0
   140051420:	jne    0x14005142d
   140051422:	add    ebp,eax
   140051424:	mov    DWORD PTR [rsp+0x48],ebp
   140051428:	jmp    0x1400514cf
   14005142d:	test   eax,eax
   14005142f:	jle    0x1400514cf
   140051435:	xor    r12d,r12d
   140051438:	data16 data16 xchg ax,ax
   14005143c:	data16 data16 xchg ax,ax
   140051440:	sub    esi,0x1
   140051443:	test   BYTE PTR [r13+0x18],0x40
   140051448:	je     0x140051459
   14005144a:	cmp    QWORD PTR [r13+0x10],r12
   14005144e:	jne    0x140051459
   140051450:	add    ebp,0x1
   140051453:	mov    DWORD PTR [rsp+0x48],ebp
   140051457:	jmp    0x14005147a
   140051459:	movzx  ecx,WORD PTR [rdi]
   14005145c:	mov    rdx,r13
   14005145f:	call   0x1400599c0
   140051464:	cmp    ax,0xffff
   140051468:	jne    0x140051473
   14005146a:	or     ebp,0xffffffff
   14005146d:	mov    DWORD PTR [rsp+0x48],ebp
   140051471:	jmp    0x14005147a
   140051473:	add    ebp,0x1
   140051476:	mov    DWORD PTR [rsp+0x48],ebp
   14005147a:	add    rdi,0x2
   14005147e:	cmp    ebp,0xffffffff
   140051481:	jne    0x1400514c2
   140051483:	call   0x140048680
   140051488:	cmp    DWORD PTR [rax],0x2a
   14005148b:	jne    0x1400514ca
   14005148d:	test   BYTE PTR [r13+0x18],0x40
   140051492:	je     0x1400514a4
   140051494:	cmp    QWORD PTR [r13+0x10],r12
   140051498:	jne    0x1400514a4
   14005149a:	mov    ebp,r12d
   14005149d:	mov    DWORD PTR [rsp+0x48],r12d
   1400514a2:	jmp    0x1400514c2
   1400514a4:	mov    rdx,r13
   1400514a7:	mov    cx,0x3f
   1400514ab:	call   0x1400599c0
   1400514b0:	mov    ebp,r12d
   1400514b3:	cmp    ax,0xffff
   1400514b7:	setne  bpl
   1400514bb:	sub    ebp,0x1
   1400514be:	mov    DWORD PTR [rsp+0x48],ebp
   1400514c2:	test   esi,esi
   1400514c4:	jg     0x140051440
   1400514ca:	mov    r12d,DWORD PTR [rsp+0x44]
   1400514cf:	test   r12b,0x8
   1400514d3:	je     0x140051528
   1400514d5:	test   r12b,0x4
   1400514d9:	jne    0x140051528
   1400514db:	test   r14d,r14d
   1400514de:	mov    edi,r14d
   1400514e1:	jle    0x140051528
   1400514e3:	sub    edi,0x1
   1400514e6:	test   BYTE PTR [r13+0x18],0x40
   1400514eb:	je     0x1400514fd
   1400514ed:	cmp    QWORD PTR [r13+0x10],0x0
   1400514f2:	jne    0x1400514fd
   1400514f4:	add    ebp,0x1
   1400514f7:	mov    DWORD PTR [rsp+0x48],ebp
   1400514fb:	jmp    0x140051516
   1400514fd:	mov    rdx,r13
   140051500:	mov    cx,0x30
   140051504:	call   0x1400599c0
   140051509:	cmp    ax,0xffff
   14005150d:	je     0x140051521
   14005150f:	add    ebp,0x1
   140051512:	mov    DWORD PTR [rsp+0x48],ebp
   140051516:	cmp    ebp,0xffffffff
   140051519:	je     0x140051528
   14005151b:	test   edi,edi
   14005151d:	jg     0x1400514e3
   14005151f:	jmp    0x140051528
   140051521:	or     ebp,0xffffffff
   140051524:	mov    DWORD PTR [rsp+0x48],ebp
   140051528:	cmp    DWORD PTR [rsp+0x60],0x0
   14005152d:	jne    0x1400515ce
   140051533:	test   r15d,r15d
   140051536:	jle    0x1400515ce
   14005153c:	mov    rdi,rbx
   14005153f:	mov    esi,r15d
   140051542:	xchg   ax,ax
   140051544:	data16 data16 xchg ax,ax
   140051548:	data16 data16 xchg ax,ax
   14005154c:	data16 data16 xchg ax,ax
   140051550:	mov    rax,QWORD PTR [rsp+0x78]
   140051555:	lea    r9,[rsp+0x78]
   14005155a:	lea    rcx,[rsp+0x68]
   14005155f:	movsxd r8,DWORD PTR [rax+0x10c]
   140051566:	mov    rdx,rdi
   140051569:	sub    esi,0x1
   14005156c:	call   0x140059c60
   140051571:	test   eax,eax
   140051573:	movsxd r12,eax
   140051576:	jle    0x1400515c0
   140051578:	test   BYTE PTR [r13+0x18],0x40
   14005157d:	je     0x14005158f
   14005157f:	cmp    QWORD PTR [r13+0x10],0x0
   140051584:	jne    0x14005158f
   140051586:	add    ebp,0x1
   140051589:	mov    DWORD PTR [rsp+0x48],ebp
   14005158d:	jmp    0x1400515b2
   14005158f:	movzx  ecx,WORD PTR [rsp+0x68]
   140051594:	mov    rdx,r13
   140051597:	call   0x1400599c0
   14005159c:	cmp    ax,0xffff
   1400515a0:	jne    0x1400515ab
   1400515a2:	or     ebp,0xffffffff
   1400515a5:	mov    DWORD PTR [rsp+0x48],ebp
   1400515a9:	jmp    0x1400515b2
   1400515ab:	add    ebp,0x1
   1400515ae:	mov    DWORD PTR [rsp+0x48],ebp
   1400515b2:	add    rdi,r12
   1400515b5:	test   esi,esi
   1400515b7:	jg     0x140051550
   1400515b9:	mov    r12d,DWORD PTR [rsp+0x44]
   1400515be:	jmp    0x1400515e5
   1400515c0:	mov    r14d,DWORD PTR [rsp+0x44]
   1400515c5:	or     ebp,0xffffffff
   1400515c8:	mov    DWORD PTR [rsp+0x48],ebp
   1400515cc:	jmp    0x140051643
   1400515ce:	lea    r9,[rsp+0x48]
   1400515d3:	mov    r8,r13
   1400515d6:	mov    edx,r15d
   1400515d9:	mov    rcx,rbx
   1400515dc:	call   0x1400507d0
   1400515e1:	mov    ebp,DWORD PTR [rsp+0x48]
   1400515e5:	test   ebp,ebp
   1400515e7:	js     0x1400516a8
   1400515ed:	test   r12b,0x4
   1400515f1:	je     0x1400516af
   1400515f7:	test   r14d,r14d
   1400515fa:	jle    0x1400516a1
   140051600:	sub    r14d,0x1
   140051604:	test   BYTE PTR [r13+0x18],0x40
   140051609:	je     0x14005161b
   14005160b:	cmp    QWORD PTR [r13+0x10],0x0
   140051610:	jne    0x14005161b
   140051612:	add    ebp,0x1
   140051615:	mov    DWORD PTR [rsp+0x48],ebp
   140051619:	jmp    0x140051634
   14005161b:	mov    rdx,r13
   14005161e:	mov    cx,0x20
   140051622:	call   0x1400599c0
   140051627:	cmp    ax,0xffff
   14005162b:	je     0x14005168c
   14005162d:	add    ebp,0x1
   140051630:	mov    DWORD PTR [rsp+0x48],ebp
   140051634:	cmp    ebp,0xffffffff
   140051637:	je     0x14005169a
   140051639:	test   r14d,r14d
   14005163c:	jg     0x140051600
   14005163e:	mov    r14d,DWORD PTR [rsp+0x44]
   140051643:	mov    rcx,QWORD PTR [rsp+0xa0]
   14005164b:	test   rcx,rcx
   14005164e:	je     0x1400516b6
   140051650:	call   0x1400485c0
   140051655:	mov    r9d,DWORD PTR [rsp+0x4c]
   14005165a:	mov    rdi,QWORD PTR [rsp+0x58]
   14005165f:	mov    rsi,QWORD PTR [rsp+0xa8]
   140051667:	mov    eax,DWORD PTR [rsp+0x40]
   14005166b:	mov    r10d,DWORD PTR [rsp+0x50]
   140051670:	mov    r11d,DWORD PTR [rsp+0x54]
   140051675:	xor    r8d,r8d
   140051678:	lea    rdx,[rip+0xfffffffffffae981]        # 0x140000000
   14005167f:	mov    QWORD PTR [rsp+0xa0],r8
   140051687:	jmp    0x140051710
   14005168c:	mov    r14d,DWORD PTR [rsp+0x44]
   140051691:	or     ebp,0xffffffff
   140051694:	mov    DWORD PTR [rsp+0x48],ebp
   140051698:	jmp    0x140051643
   14005169a:	mov    r14d,DWORD PTR [rsp+0x44]
   14005169f:	jmp    0x140051643
   1400516a1:	mov    r14d,DWORD PTR [rsp+0x44]
   1400516a6:	jmp    0x140051643
   1400516a8:	mov    r14d,DWORD PTR [rsp+0x44]
   1400516ad:	jmp    0x140051643
   1400516af:	mov    r14d,DWORD PTR [rsp+0x44]
   1400516b4:	jmp    0x140051643
   1400516b6:	mov    r9d,DWORD PTR [rsp+0x4c]
   1400516bb:	mov    rdi,QWORD PTR [rsp+0x58]
   1400516c0:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400516c8:	mov    eax,DWORD PTR [rsp+0x40]
   1400516cc:	mov    r10d,DWORD PTR [rsp+0x50]
   1400516d1:	mov    r11d,DWORD PTR [rsp+0x54]
   1400516d6:	xor    r8d,r8d
   1400516d9:	lea    rdx,[rip+0xfffffffffffae920]        # 0x140000000
   1400516e0:	jmp    0x140051710
   1400516e2:	mov    eax,DWORD PTR [rsp+0x40]
   1400516e6:	jmp    0x140051710
   1400516e8:	mov    eax,DWORD PTR [rsp+0x40]
   1400516ec:	jmp    0x140051710
   1400516ee:	mov    eax,DWORD PTR [rsp+0x40]
   1400516f2:	jmp    0x140051710
   1400516f4:	mov    eax,DWORD PTR [rsp+0x40]
   1400516f8:	jmp    0x140051710
   1400516fa:	mov    eax,DWORD PTR [rsp+0x40]
   1400516fe:	jmp    0x140051710
   140051700:	mov    eax,DWORD PTR [rsp+0x40]
   140051704:	jmp    0x140051710
   140051706:	mov    eax,DWORD PTR [rsp+0x40]
   14005170a:	jmp    0x140051710
   14005170c:	mov    eax,DWORD PTR [rsp+0x40]
   140051710:	mov    r12w,WORD PTR [rsi]
   140051714:	test   r12w,r12w
   140051718:	jne    0x140050a80
   14005171e:	test   eax,eax
   140051720:	je     0x140051766
   140051722:	cmp    eax,0x7
   140051725:	je     0x140051766
   140051727:	call   0x140048680
   14005172c:	xor    r9d,r9d
   14005172f:	xor    r8d,r8d
   140051732:	mov    DWORD PTR [rax],0x16
   140051738:	xor    eax,eax
   14005173a:	xor    edx,edx
   14005173c:	xor    ecx,ecx
   14005173e:	mov    QWORD PTR [rsp+0x20],rax
   140051743:	call   0x14004e100
   140051748:	cmp    BYTE PTR [rsp+0x90],0x0
   140051750:	je     0x140051761
   140051752:	mov    rax,QWORD PTR [rsp+0x88]
   14005175a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140051761:	or     eax,0xffffffff
   140051764:	jmp    0x140051781
   140051766:	mov    rdx,QWORD PTR [rsp+0x88]
   14005176e:	cmp    BYTE PTR [rsp+0x90],0x0
   140051776:	je     0x14005177f
   140051778:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   14005177f:	mov    eax,ebp
   140051781:	mov    r12,QWORD PTR [rsp+0x4e0]
   140051789:	mov    rbp,QWORD PTR [rsp+0x4e8]
   140051791:	mov    r15,QWORD PTR [rsp+0x4d8]
   140051799:	mov    rcx,QWORD PTR [rsp+0x4c0]
   1400517a1:	xor    rcx,rsp
   1400517a4:	call   0x140046470
   1400517a9:	add    rsp,0x4f0
   1400517b0:	pop    r14
   1400517b2:	pop    r13
   1400517b4:	pop    rdi
   1400517b5:	pop    rsi
   1400517b6:	pop    rbx
   1400517b7:	ret    
   1400517b8:	push   rbx
   1400517b9:	or     eax,0xaee0005
   1400517be:	add    eax,0x50b2600
   1400517c3:	add    BYTE PTR [rdx-0xbfffaf5],ah
   1400517c9:	or     eax,DWORD PTR [rip+0x50c0100]        # 0x1451118cf
   1400517cf:	add    BYTE PTR [rbx+0xc],cl
   1400517d2:	add    eax,0x50dd900
   1400517d7:	add    dh,bh
   1400517d9:	syscall 
   1400517db:	add    bh,bh
   1400517dd:	or     eax,0xefb0005
   1400517e2:	add    eax,0x511a100
   1400517e7:	add    BYTE PTR [rsi+0xe00050e],dl
   1400517ed:	adc    BYTE PTR [rip+0x50e1100],al        # 0x1451328f3
   1400517f3:	add    BYTE PTR [rax+0x11],bh
   1400517f6:	add    eax,0x50fbf00
   1400517fb:	add    ah,bl
   1400517fd:	adc    DWORD PTR [rip+0x5119100],eax        # 0x14516a903
   140051803:	add    BYTE PTR [rip+0xffffffff8900050f],cl        # 0xc9051d18
   140051809:	adc    DWORD PTR [rip+0x511af00],eax        # 0x14516c70f
   14005180f:	add    BYTE PTR [rbx],bh
   140051811:	adc    eax,DWORD PTR [rip+0x10e0000]        # 0x141131817
   140051817:	(bad)  
   140051818:	add    BYTE PTR [rsi],cl
   14005181a:	add    BYTE PTR [rsi],cl
   14005181c:	(bad)  
   14005181d:	(bad)  
   14005181e:	(bad)  
   14005181f:	(bad)  
   140051820:	(bad)  
   140051821:	(bad)  
   140051822:	(bad)  
   140051823:	(bad)  
   140051824:	(bad)  
   140051825:	(bad)  
   140051826:	add    cl,BYTE PTR [rsi]
   140051828:	(bad)  
   140051829:	(bad)  
   14005182a:	(bad)  
   14005182b:	add    ecx,DWORD PTR [rsi]
   14005182d:	add    al,0xe
   14005182f:	(bad)  
   140051830:	(bad)  
   140051831:	(bad)  
   140051832:	(bad)  
   140051833:	(bad)  
   140051834:	add    eax,0x507060e
   140051839:	add    eax,0xe070e05
   14005183e:	(bad)  
   14005183f:	(bad)  
   140051840:	(bad)  
   140051841:	or     BYTE PTR [rcx],cl
   140051843:	or     cl,BYTE PTR [rsi]
   140051845:	(bad)  
   140051846:	or     ecx,DWORD PTR [rsi]
   140051848:	or     al,0xe
   14005184a:	(bad)  
   14005184b:	or     eax,0xcccccccc
   140051850:	cmp    cx,0x30
   140051854:	jb     0x140051a1e
   14005185a:	cmp    cx,0x3a
   14005185e:	jae    0x140051867
   140051860:	movzx  eax,cx
   140051863:	sub    eax,0x30
   140051866:	ret    
   140051867:	cmp    cx,0xff10
   14005186c:	jae    0x140051a0e
   140051872:	cmp    cx,0x660
   140051877:	jb     0x140051a1e
   14005187d:	cmp    cx,0x66a
   140051882:	jae    0x14005188d
   140051884:	movzx  eax,cx
   140051887:	sub    eax,0x660
   14005188c:	ret    
   14005188d:	cmp    cx,0x6f0
   140051892:	jb     0x140051a1e
   140051898:	cmp    cx,0x6fa
   14005189d:	jae    0x1400518a8
   14005189f:	movzx  eax,cx
   1400518a2:	sub    eax,0x6f0
   1400518a7:	ret    
   1400518a8:	cmp    cx,0x966
   1400518ad:	jb     0x140051a1e
   1400518b3:	cmp    cx,0x970
   1400518b8:	jae    0x1400518c3
   1400518ba:	movzx  eax,cx
   1400518bd:	sub    eax,0x966
   1400518c2:	ret    
   1400518c3:	cmp    cx,0x9e6
   1400518c8:	jb     0x140051a1e
   1400518ce:	cmp    cx,0x9f0
   1400518d3:	jae    0x1400518de
   1400518d5:	movzx  eax,cx
   1400518d8:	sub    eax,0x9e6
   1400518dd:	ret    
   1400518de:	cmp    cx,0xa66
   1400518e3:	jb     0x140051a1e
   1400518e9:	cmp    cx,0xa70
   1400518ee:	jae    0x1400518f9
   1400518f0:	movzx  eax,cx
   1400518f3:	sub    eax,0xa66
   1400518f8:	ret    
   1400518f9:	cmp    cx,0xae6
   1400518fe:	jb     0x140051a1e
   140051904:	cmp    cx,0xaf0
   140051909:	jae    0x140051914
   14005190b:	movzx  eax,cx
   14005190e:	sub    eax,0xae6
   140051913:	ret    
   140051914:	cmp    cx,0xb66
   140051919:	jb     0x140051a1e
   14005191f:	cmp    cx,0xb70
   140051924:	jae    0x14005192f
   140051926:	movzx  eax,cx
   140051929:	sub    eax,0xb66
   14005192e:	ret    
   14005192f:	cmp    cx,0xc66
   140051934:	jb     0x140051a1e
   14005193a:	cmp    cx,0xc70
   14005193f:	jae    0x14005194a
   140051941:	movzx  eax,cx
   140051944:	sub    eax,0xc66
   140051949:	ret    
   14005194a:	cmp    cx,0xce6
   14005194f:	jb     0x140051a1e
   140051955:	cmp    cx,0xcf0
   14005195a:	jae    0x140051965
   14005195c:	movzx  eax,cx
   14005195f:	sub    eax,0xce6
   140051964:	ret    
   140051965:	cmp    cx,0xd66
   14005196a:	jb     0x140051a1e
   140051970:	cmp    cx,0xd70
   140051975:	jae    0x140051980
   140051977:	movzx  eax,cx
   14005197a:	sub    eax,0xd66
   14005197f:	ret    
   140051980:	cmp    cx,0xe50
   140051985:	jb     0x140051a1e
   14005198b:	cmp    cx,0xe5a
   140051990:	jae    0x14005199b
   140051992:	movzx  eax,cx
   140051995:	sub    eax,0xe50
   14005199a:	ret    
   14005199b:	cmp    cx,0xed0
   1400519a0:	jb     0x140051a1e
   1400519a2:	cmp    cx,0xeda
   1400519a7:	jae    0x1400519b2
   1400519a9:	movzx  eax,cx
   1400519ac:	sub    eax,0xed0
   1400519b1:	ret    
   1400519b2:	cmp    cx,0xf20
   1400519b7:	jb     0x140051a1e
   1400519b9:	cmp    cx,0xf2a
   1400519be:	jae    0x1400519c9
   1400519c0:	movzx  eax,cx
   1400519c3:	sub    eax,0xf20
   1400519c8:	ret    
   1400519c9:	cmp    cx,0x1040
   1400519ce:	jb     0x140051a1e
   1400519d0:	cmp    cx,0x104a
   1400519d5:	jae    0x1400519e0
   1400519d7:	movzx  eax,cx
   1400519da:	sub    eax,0x1040
   1400519df:	ret    
   1400519e0:	cmp    cx,0x17e0
   1400519e5:	jb     0x140051a1e
   1400519e7:	cmp    cx,0x17ea
   1400519ec:	jae    0x1400519f7
   1400519ee:	movzx  eax,cx
   1400519f1:	sub    eax,0x17e0
   1400519f6:	ret    
   1400519f7:	cmp    cx,0x1810
   1400519fc:	jb     0x140051a1e
   1400519fe:	cmp    cx,0x181a
   140051a03:	jae    0x140051a1e
   140051a05:	movzx  eax,cx
   140051a08:	sub    eax,0x1810
   140051a0d:	ret    
   140051a0e:	cmp    cx,0xff1a
   140051a13:	jae    0x140051a1e
   140051a15:	movzx  eax,cx
   140051a18:	sub    eax,0xff10
   140051a1d:	ret    
   140051a1e:	or     eax,0xffffffff
   140051a21:	ret    
   140051a22:	int3   
   140051a23:	int3   
   140051a24:	int3   
   140051a25:	int3   
   140051a26:	int3   
   140051a27:	int3   
   140051a28:	int3   
   140051a29:	int3   
   140051a2a:	int3   
   140051a2b:	int3   
   140051a2c:	int3   
   140051a2d:	int3   
   140051a2e:	int3   
   140051a2f:	int3   
   140051a30:	mov    WORD PTR [rsp+0x8],cx
   140051a35:	push   rbx
   140051a36:	sub    rsp,0x60
   140051a3a:	cmp    cx,0xffff
   140051a3f:	movzx  ebx,dx
   140051a42:	jne    0x140051a55
   140051a44:	xor    cx,cx
   140051a47:	movzx  eax,cx
   140051a4a:	movzx  ecx,dx
   140051a4d:	and    eax,ecx
   140051a4f:	add    rsp,0x60
   140051a53:	pop    rbx
   140051a54:	ret    
   140051a55:	cmp    cx,0x100
   140051a5a:	jae    0x140051a7b
   140051a5c:	mov    rax,QWORD PTR [rip+0x36605]        # 0x140088068
   140051a63:	movzx  ecx,cx
   140051a66:	movzx  ecx,WORD PTR [rax+rcx*2]
   140051a6a:	and    cx,bx
   140051a6d:	movzx  eax,cx
   140051a70:	movzx  ecx,bx
   140051a73:	and    eax,ecx
   140051a75:	add    rsp,0x60
   140051a79:	pop    rbx
   140051a7a:	ret    
   140051a7b:	test   r8,r8
   140051a7e:	mov    BYTE PTR [rsp+0x58],0x0
   140051a83:	jne    0x140051b1b
   140051a89:	call   0x14004bd60
   140051a8e:	mov    QWORD PTR [rsp+0x50],rax
   140051a93:	mov    rdx,QWORD PTR [rax+0xc0]
   140051a9a:	cmp    rdx,QWORD PTR [rip+0x35dff]        # 0x1400878a0
   140051aa1:	mov    QWORD PTR [rsp+0x40],rdx
   140051aa6:	mov    r8,QWORD PTR [rax+0xb8]
   140051aad:	mov    QWORD PTR [rsp+0x48],r8
   140051ab2:	je     0x140051ad9
   140051ab4:	mov    ecx,DWORD PTR [rax+0xc8]
   140051aba:	test   DWORD PTR [rip+0x35c68],ecx        # 0x140087728
   140051ac0:	jne    0x140051ad9
   140051ac2:	call   0x14004f030
   140051ac7:	mov    r8,QWORD PTR [rsp+0x48]
   140051acc:	mov    rdx,rax
   140051acf:	mov    QWORD PTR [rsp+0x40],rax
   140051ad4:	mov    rax,QWORD PTR [rsp+0x50]
   140051ad9:	cmp    r8,QWORD PTR [rip+0x35b40]        # 0x140087620
   140051ae0:	je     0x140051b04
   140051ae2:	mov    ecx,DWORD PTR [rax+0xc8]
   140051ae8:	test   DWORD PTR [rip+0x35c3a],ecx        # 0x140087728
   140051aee:	jne    0x140051b04
   140051af0:	call   0x14004e4e0
   140051af5:	mov    rdx,QWORD PTR [rsp+0x40]
   140051afa:	mov    QWORD PTR [rsp+0x48],rax
   140051aff:	mov    rax,QWORD PTR [rsp+0x50]
   140051b04:	test   BYTE PTR [rax+0xc8],0x2
   140051b0b:	jne    0x140051b33
   140051b0d:	or     DWORD PTR [rax+0xc8],0x2
   140051b14:	mov    BYTE PTR [rsp+0x58],0x1
   140051b19:	jmp    0x140051b2e
   140051b1b:	mov    rax,QWORD PTR [r8]
   140051b1e:	lea    rcx,[rsp+0x40]
   140051b23:	mov    QWORD PTR [rcx],rax
   140051b26:	mov    rax,QWORD PTR [r8+0x8]
   140051b2a:	mov    QWORD PTR [rcx+0x8],rax
   140051b2e:	mov    rdx,QWORD PTR [rsp+0x40]
   140051b33:	mov    eax,DWORD PTR [rdx+0x14]
   140051b36:	mov    r9d,0x1
   140051b3c:	lea    r8,[rsp+0x70]
   140051b41:	mov    DWORD PTR [rsp+0x30],eax
   140051b45:	mov    eax,DWORD PTR [rdx+0x4]
   140051b48:	lea    rcx,[rsp+0x40]
   140051b4d:	mov    DWORD PTR [rsp+0x28],eax
   140051b51:	lea    rax,[rsp+0x78]
   140051b56:	mov    edx,r9d
   140051b59:	mov    QWORD PTR [rsp+0x20],rax
   140051b5e:	call   0x14005a1f0
   140051b63:	mov    cx,WORD PTR [rsp+0x78]
   140051b68:	xor    edx,edx
   140051b6a:	test   eax,eax
   140051b6c:	cmove  cx,dx
   140051b70:	cmp    BYTE PTR [rsp+0x58],dl
   140051b74:	mov    WORD PTR [rsp+0x78],cx
   140051b79:	je     0x140051b8c
   140051b7b:	mov    rax,QWORD PTR [rsp+0x50]
   140051b80:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140051b87:	mov    cx,WORD PTR [rsp+0x78]
   140051b8c:	movzx  eax,cx
   140051b8f:	movzx  ecx,bx
   140051b92:	and    eax,ecx
   140051b94:	add    rsp,0x60
   140051b98:	pop    rbx
   140051b99:	ret    
   140051b9a:	int3   
   140051b9b:	int3   
   140051b9c:	int3   
   140051b9d:	int3   
   140051b9e:	int3   
   140051b9f:	int3   
   140051ba0:	mov    WORD PTR [rsp+0x8],cx
   140051ba5:	push   rbx
   140051ba6:	sub    rsp,0x40
   140051baa:	cmp    cx,0xffff
   140051baf:	movzx  ebx,dx
   140051bb2:	jne    0x140051bbc
   140051bb4:	xor    eax,eax
   140051bb6:	add    rsp,0x40
   140051bba:	pop    rbx
   140051bbb:	ret    
   140051bbc:	cmp    cx,0x100
   140051bc1:	jae    0x140051bdc
   140051bc3:	mov    rax,QWORD PTR [rip+0x3649e]        # 0x140088068
   140051bca:	movzx  ecx,cx
   140051bcd:	movzx  eax,WORD PTR [rax+rcx*2]
   140051bd1:	movzx  ecx,bx
   140051bd4:	and    eax,ecx
   140051bd6:	add    rsp,0x40
   140051bda:	pop    rbx
   140051bdb:	ret    
   140051bdc:	cmp    DWORD PTR [rip+0x3b5bd],0x0        # 0x14008d1a0
   140051be3:	jne    0x140051c22
   140051be5:	mov    eax,DWORD PTR [rip+0x35b69]        # 0x140087754
   140051beb:	mov    r9d,0x1
   140051bf1:	lea    r8,[rsp+0x50]
   140051bf6:	mov    DWORD PTR [rsp+0x30],eax
   140051bfa:	mov    eax,DWORD PTR [rip+0x35b44]        # 0x140087744
   140051c00:	lea    rcx,[rip+0x35ca9]        # 0x1400878b0
   140051c07:	mov    DWORD PTR [rsp+0x28],eax
   140051c0b:	lea    rax,[rsp+0x60]
   140051c10:	mov    edx,r9d
   140051c13:	mov    QWORD PTR [rsp+0x20],rax
   140051c18:	call   0x14005a1f0
   140051c1d:	movzx  ecx,WORD PTR [rsp+0x50]
   140051c22:	xor    r8d,r8d
   140051c25:	movzx  edx,bx
   140051c28:	call   0x140051a30
   140051c2d:	add    rsp,0x40
   140051c31:	pop    rbx
   140051c32:	ret    
   140051c33:	int3   
   140051c34:	int3   
   140051c35:	int3   
   140051c36:	int3   
   140051c37:	int3   
   140051c38:	int3   
   140051c39:	int3   
   140051c3a:	int3   
   140051c3b:	int3   
   140051c3c:	int3   
   140051c3d:	int3   
   140051c3e:	int3   
   140051c3f:	int3   
   140051c40:	mov    QWORD PTR [rsp+0x8],rbx
   140051c45:	push   rdi
   140051c46:	sub    rsp,0x20
   140051c4a:	movsxd rdi,ecx
   140051c4d:	mov    ecx,edi
   140051c4f:	call   0x14005a4c0
   140051c54:	cmp    rax,0xffffffffffffffff
   140051c58:	je     0x140051cbd
   140051c5a:	cmp    edi,0x1
   140051c5d:	jne    0x140051c71
   140051c5f:	mov    rax,QWORD PTR [rip+0x3ca9a]        # 0x14008e700
   140051c66:	test   BYTE PTR [rax+0xa8],dil
   140051c6d:	jne    0x140051c83
   140051c6f:	jmp    0x140051c9f
   140051c71:	cmp    edi,0x2
   140051c74:	jne    0x140051c9f
   140051c76:	mov    rax,QWORD PTR [rip+0x3ca83]        # 0x14008e700
   140051c7d:	test   BYTE PTR [rax+0x58],0x1
   140051c81:	je     0x140051c9f
   140051c83:	mov    ecx,0x2
   140051c88:	call   0x14005a4c0
   140051c8d:	mov    ecx,0x1
   140051c92:	mov    rbx,rax
   140051c95:	call   0x14005a4c0
   140051c9a:	cmp    rax,rbx
   140051c9d:	je     0x140051cbd
   140051c9f:	mov    ecx,edi
   140051ca1:	call   0x14005a4c0
   140051ca6:	mov    rcx,rax
   140051ca9:	call   QWORD PTR [rip+0x12919]        # 0x1400645c8
   140051caf:	test   eax,eax
   140051cb1:	jne    0x140051cbd
   140051cb3:	call   QWORD PTR [rip+0x12947]        # 0x140064600
   140051cb9:	mov    ebx,eax
   140051cbb:	jmp    0x140051cbf
   140051cbd:	xor    ebx,ebx
   140051cbf:	mov    ecx,edi
   140051cc1:	call   0x14005a3f0
   140051cc6:	mov    rax,rdi
   140051cc9:	mov    rdx,rdi
   140051ccc:	and    eax,0x1f
   140051ccf:	sar    rdx,0x5
   140051cd3:	lea    r8,[rip+0x3ca26]        # 0x14008e700
   140051cda:	lea    rcx,[rax+rax*4]
   140051cde:	mov    rax,QWORD PTR [r8+rdx*8]
   140051ce2:	add    rcx,rcx
   140051ce5:	test   ebx,ebx
   140051ce7:	mov    BYTE PTR [rax+rcx*8+0x8],0x0
   140051cec:	je     0x140051d03
   140051cee:	mov    ecx,ebx
   140051cf0:	call   0x1400486e0
   140051cf5:	or     eax,0xffffffff
   140051cf8:	mov    rbx,QWORD PTR [rsp+0x30]
   140051cfd:	add    rsp,0x20
   140051d01:	pop    rdi
   140051d02:	ret    
   140051d03:	xor    eax,eax
   140051d05:	mov    rbx,QWORD PTR [rsp+0x30]
   140051d0a:	add    rsp,0x20
   140051d0e:	pop    rdi
   140051d0f:	ret    
   140051d10:	mov    QWORD PTR [rsp+0x18],rbx
   140051d15:	mov    DWORD PTR [rsp+0x8],ecx
   140051d19:	push   rsi
   140051d1a:	push   rdi
   140051d1b:	push   r12
   140051d1d:	sub    rsp,0x30
   140051d21:	movsxd rbx,ecx
   140051d24:	cmp    ebx,0xfffffffe
   140051d27:	jne    0x140051d45
   140051d29:	call   0x1400486b0
   140051d2e:	xor    ebx,ebx
   140051d30:	mov    DWORD PTR [rax],ebx
   140051d32:	call   0x140048680
   140051d37:	mov    DWORD PTR [rax],0x9
   140051d3d:	or     eax,0xffffffff
   140051d40:	jmp    0x140051e10
   140051d45:	test   ecx,ecx
   140051d47:	js     0x140051de5
   140051d4d:	cmp    ebx,DWORD PTR [rip+0x3c991]        # 0x14008e6e4
   140051d53:	jae    0x140051de5
   140051d59:	mov    rax,rbx
   140051d5c:	mov    rdi,rbx
   140051d5f:	sar    rdi,0x5
   140051d63:	lea    r12,[rip+0x3c996]        # 0x14008e700
   140051d6a:	and    eax,0x1f
   140051d6d:	lea    rsi,[rax+rax*4]
   140051d71:	add    rsi,rsi
   140051d74:	mov    rax,QWORD PTR [r12+rdi*8]
   140051d78:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140051d7c:	and    ecx,0x1
   140051d7f:	jne    0x140051dae
   140051d81:	call   0x1400486b0
   140051d86:	xor    ebx,ebx
   140051d88:	mov    DWORD PTR [rax],ebx
   140051d8a:	call   0x140048680
   140051d8f:	mov    DWORD PTR [rax],0x9
   140051d95:	mov    QWORD PTR [rsp+0x20],rbx
   140051d9a:	xor    r9d,r9d
   140051d9d:	xor    r8d,r8d
   140051da0:	xor    edx,edx
   140051da2:	xor    ecx,ecx
   140051da4:	call   0x14004e100
   140051da9:	or     eax,0xffffffff
   140051dac:	jmp    0x140051e10
   140051dae:	mov    ecx,ebx
   140051db0:	call   0x14005a560
   140051db5:	nop
   140051db6:	mov    rax,QWORD PTR [r12+rdi*8]
   140051dba:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   140051dbf:	je     0x140051dcc
   140051dc1:	mov    ecx,ebx
   140051dc3:	call   0x140051c40
   140051dc8:	mov    edi,eax
   140051dca:	jmp    0x140051dda
   140051dcc:	call   0x140048680
   140051dd1:	mov    DWORD PTR [rax],0x9
   140051dd7:	or     edi,0xffffffff
   140051dda:	mov    ecx,ebx
   140051ddc:	call   0x14005a630
   140051de1:	mov    eax,edi
   140051de3:	jmp    0x140051e10
   140051de5:	call   0x1400486b0
   140051dea:	xor    ebx,ebx
   140051dec:	mov    DWORD PTR [rax],ebx
   140051dee:	call   0x140048680
   140051df3:	mov    DWORD PTR [rax],0x9
   140051df9:	mov    QWORD PTR [rsp+0x20],rbx
   140051dfe:	xor    r9d,r9d
   140051e01:	xor    r8d,r8d
   140051e04:	xor    edx,edx
   140051e06:	xor    ecx,ecx
   140051e08:	call   0x14004e100
   140051e0d:	or     eax,0xffffffff
   140051e10:	mov    rbx,QWORD PTR [rsp+0x60]
   140051e15:	add    rsp,0x30
   140051e19:	pop    r12
   140051e1b:	pop    rdi
   140051e1c:	pop    rsi
   140051e1d:	ret    
   140051e1e:	int3   
   140051e1f:	int3   
   140051e20:	rex push rbp
   140051e22:	sub    rsp,0x30
   140051e26:	mov    rbp,rdx
   140051e29:	mov    ecx,DWORD PTR [rbp+0x50]
   140051e2c:	call   0x14005a630
   140051e31:	add    rsp,0x30
   140051e35:	pop    rbp
   140051e36:	ret    
   140051e37:	int3   
   140051e38:	int3   
   140051e39:	int3   
   140051e3a:	int3   
   140051e3b:	int3   
   140051e3c:	int3   
   140051e3d:	int3   
   140051e3e:	int3   
   140051e3f:	int3   
   140051e40:	sub    rsp,0x38
   140051e44:	test   rcx,rcx
   140051e47:	jne    0x140051e74
   140051e49:	call   0x140048680
   140051e4e:	xor    r9d,r9d
   140051e51:	xor    r8d,r8d
   140051e54:	xor    edx,edx
   140051e56:	xor    ecx,ecx
   140051e58:	mov    QWORD PTR [rsp+0x20],0x0
   140051e61:	mov    DWORD PTR [rax],0x16
   140051e67:	call   0x14004e100
   140051e6c:	or     eax,0xffffffff
   140051e6f:	add    rsp,0x38
   140051e73:	ret    
   140051e74:	mov    eax,DWORD PTR [rcx+0x1c]
   140051e77:	add    rsp,0x38
   140051e7b:	ret    
   140051e7c:	int3   
   140051e7d:	int3   
   140051e7e:	int3   
   140051e7f:	int3   
   140051e80:	rex push rbx
   140051e82:	sub    rsp,0x20
   140051e86:	mov    eax,DWORD PTR [rcx+0x18]
   140051e89:	mov    rbx,rcx
   140051e8c:	test   al,0x83
   140051e8e:	je     0x140051eb0
   140051e90:	test   al,0x8
   140051e92:	je     0x140051eb0
   140051e94:	mov    rcx,QWORD PTR [rcx+0x10]
   140051e98:	call   0x1400485c0
   140051e9d:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140051ea4:	xor    eax,eax
   140051ea6:	mov    QWORD PTR [rbx],rax
   140051ea9:	mov    QWORD PTR [rbx+0x10],rax
   140051ead:	mov    DWORD PTR [rbx+0x8],eax
   140051eb0:	add    rsp,0x20
   140051eb4:	pop    rbx
   140051eb5:	ret    
   140051eb6:	int3   
   140051eb7:	int3   
   140051eb8:	int3   
   140051eb9:	int3   
   140051eba:	int3   
   140051ebb:	int3   
   140051ebc:	int3   
   140051ebd:	int3   
   140051ebe:	int3   
   140051ebf:	int3   
   140051ec0:	mov    QWORD PTR [rsp+0x10],rbx
   140051ec5:	push   rsi
   140051ec6:	sub    rsp,0x20
   140051eca:	mov    rbx,rcx
   140051ecd:	mov    ecx,DWORD PTR [rcx+0x18]
   140051ed0:	xor    esi,esi
   140051ed2:	mov    eax,ecx
   140051ed4:	and    al,0x3
   140051ed6:	cmp    al,0x2
   140051ed8:	jne    0x140051f25
   140051eda:	test   ecx,0x108
   140051ee0:	je     0x140051f25
   140051ee2:	mov    QWORD PTR [rsp+0x30],rdi
   140051ee7:	mov    edi,DWORD PTR [rbx]
   140051ee9:	sub    edi,DWORD PTR [rbx+0x10]
   140051eec:	test   edi,edi
   140051eee:	jle    0x140051f20
   140051ef0:	mov    rcx,rbx
   140051ef3:	call   0x140051e40
   140051ef8:	mov    rdx,QWORD PTR [rbx+0x10]
   140051efc:	mov    r8d,edi
   140051eff:	mov    ecx,eax
   140051f01:	call   0x140059790
   140051f06:	cmp    eax,edi
   140051f08:	jne    0x140051f19
   140051f0a:	mov    eax,DWORD PTR [rbx+0x18]
   140051f0d:	test   al,al
   140051f0f:	jns    0x140051f20
   140051f11:	and    eax,0xfffffffd
   140051f14:	mov    DWORD PTR [rbx+0x18],eax
   140051f17:	jmp    0x140051f20
   140051f19:	or     DWORD PTR [rbx+0x18],0x20
   140051f1d:	or     esi,0xffffffff
   140051f20:	mov    rdi,QWORD PTR [rsp+0x30]
   140051f25:	mov    rcx,QWORD PTR [rbx+0x10]
   140051f29:	mov    DWORD PTR [rbx+0x8],0x0
   140051f30:	mov    eax,esi
   140051f32:	mov    QWORD PTR [rbx],rcx
   140051f35:	mov    rbx,QWORD PTR [rsp+0x38]
   140051f3a:	add    rsp,0x20
   140051f3e:	pop    rsi
   140051f3f:	ret    
   140051f40:	rex push rbx
   140051f42:	sub    rsp,0x20
   140051f46:	test   rcx,rcx
   140051f49:	mov    rbx,rcx
   140051f4c:	jne    0x140051f58
   140051f4e:	add    rsp,0x20
   140051f52:	pop    rbx
   140051f53:	jmp    0x140052000
   140051f58:	mov    ecx,DWORD PTR [rcx+0x18]
   140051f5b:	mov    QWORD PTR [rsp+0x30],rsi
   140051f60:	xor    esi,esi
   140051f62:	mov    eax,ecx
   140051f64:	and    al,0x3
   140051f66:	cmp    al,0x2
   140051f68:	jne    0x140051fb5
   140051f6a:	test   ecx,0x108
   140051f70:	je     0x140051fb5
   140051f72:	mov    QWORD PTR [rsp+0x38],rdi
   140051f77:	mov    edi,DWORD PTR [rbx]
   140051f79:	sub    edi,DWORD PTR [rbx+0x10]
   140051f7c:	test   edi,edi
   140051f7e:	jle    0x140051fb0
   140051f80:	mov    rcx,rbx
   140051f83:	call   0x140051e40
   140051f88:	mov    rdx,QWORD PTR [rbx+0x10]
   140051f8c:	mov    r8d,edi
   140051f8f:	mov    ecx,eax
   140051f91:	call   0x140059790
   140051f96:	cmp    eax,edi
   140051f98:	jne    0x140051fa9
   140051f9a:	mov    eax,DWORD PTR [rbx+0x18]
   140051f9d:	test   al,al
   140051f9f:	jns    0x140051fb0
   140051fa1:	and    eax,0xfffffffd
   140051fa4:	mov    DWORD PTR [rbx+0x18],eax
   140051fa7:	jmp    0x140051fb0
   140051fa9:	or     DWORD PTR [rbx+0x18],0x20
   140051fad:	or     esi,0xffffffff
   140051fb0:	mov    rdi,QWORD PTR [rsp+0x38]
   140051fb5:	mov    rcx,QWORD PTR [rbx+0x10]
   140051fb9:	test   esi,esi
   140051fbb:	mov    rsi,QWORD PTR [rsp+0x30]
   140051fc0:	mov    QWORD PTR [rbx],rcx
   140051fc3:	mov    DWORD PTR [rbx+0x8],0x0
   140051fca:	je     0x140051fd5
   140051fcc:	or     eax,0xffffffff
   140051fcf:	add    rsp,0x20
   140051fd3:	pop    rbx
   140051fd4:	ret    
   140051fd5:	bt     DWORD PTR [rbx+0x18],0xe
   140051fda:	jae    0x140051ff5
   140051fdc:	mov    rcx,rbx
   140051fdf:	call   0x140051e40
   140051fe4:	mov    ecx,eax
   140051fe6:	call   0x14005a8d0
   140051feb:	neg    eax
   140051fed:	sbb    eax,eax
   140051fef:	add    rsp,0x20
   140051ff3:	pop    rbx
   140051ff4:	ret    
   140051ff5:	xor    eax,eax
   140051ff7:	add    rsp,0x20
   140051ffb:	pop    rbx
   140051ffc:	ret    
   140051ffd:	int3   
   140051ffe:	int3   
   140051fff:	int3   
   140052000:	mov    QWORD PTR [rsp+0x8],rbx
   140052005:	mov    QWORD PTR [rsp+0x10],rsi
   14005200a:	mov    QWORD PTR [rsp+0x18],rdi
   14005200f:	push   r12
   140052011:	push   r13
   140052013:	push   r14
   140052015:	sub    rsp,0x30
   140052019:	mov    r12d,ecx
   14005201c:	xor    edi,edi
   14005201e:	mov    r13d,edi
   140052021:	lea    ecx,[rdi+0x1]
   140052024:	call   0x140052e40
   140052029:	nop
   14005202a:	mov    ebx,edi
   14005202c:	mov    DWORD PTR [rsp+0x20],ebx
   140052030:	or     r14d,0xffffffff
   140052034:	cmp    ebx,DWORD PTR [rip+0x3c6a6]        # 0x14008e6e0
   14005203a:	jge    0x1400520c6
   140052040:	movsxd rsi,ebx
   140052043:	mov    rax,QWORD PTR [rip+0x3b676]        # 0x14008d6c0
   14005204a:	cmp    QWORD PTR [rax+rsi*8],0x0
   14005204f:	je     0x1400520ba
   140052051:	mov    rdx,QWORD PTR [rax+rsi*8]
   140052055:	test   BYTE PTR [rdx+0x18],0x83
   140052059:	je     0x1400520ba
   14005205b:	mov    ecx,ebx
   14005205d:	call   0x140052310
   140052062:	nop
   140052063:	mov    rax,QWORD PTR [rip+0x3b656]        # 0x14008d6c0
   14005206a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14005206e:	mov    eax,DWORD PTR [rcx+0x18]
   140052071:	test   al,0x83
   140052073:	je     0x1400520a8
   140052075:	cmp    r12d,0x1
   140052079:	jne    0x14005208e
   14005207b:	call   0x140051f40
   140052080:	cmp    eax,0xffffffff
   140052083:	je     0x1400520a8
   140052085:	add    edi,r12d
   140052088:	mov    DWORD PTR [rsp+0x24],edi
   14005208c:	jmp    0x1400520a8
   14005208e:	test   r12d,r12d
   140052091:	jne    0x1400520a8
   140052093:	test   al,0x2
   140052095:	je     0x1400520a8
   140052097:	call   0x140051f40
   14005209c:	cmp    eax,0xffffffff
   14005209f:	cmove  r13d,r14d
   1400520a3:	mov    DWORD PTR [rsp+0x28],r13d
   1400520a8:	mov    rdx,QWORD PTR [rip+0x3b611]        # 0x14008d6c0
   1400520af:	mov    rdx,QWORD PTR [rdx+rsi*8]
   1400520b3:	mov    ecx,ebx
   1400520b5:	call   0x1400523a0
   1400520ba:	add    ebx,0x1
   1400520bd:	mov    DWORD PTR [rsp+0x20],ebx
   1400520c1:	jmp    0x140052034
   1400520c6:	mov    ecx,0x1
   1400520cb:	call   0x140052d10
   1400520d0:	cmp    r12d,0x1
   1400520d4:	cmove  r13d,edi
   1400520d8:	mov    eax,r13d
   1400520db:	mov    rbx,QWORD PTR [rsp+0x50]
   1400520e0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400520e5:	mov    rdi,QWORD PTR [rsp+0x60]
   1400520ea:	add    rsp,0x30
   1400520ee:	pop    r14
   1400520f0:	pop    r13
   1400520f2:	pop    r12
   1400520f4:	ret    
   1400520f5:	int3   
   1400520f6:	int3   
   1400520f7:	int3   
   1400520f8:	int3   
   1400520f9:	int3   
   1400520fa:	int3   
   1400520fb:	int3   
   1400520fc:	int3   
   1400520fd:	int3   
   1400520fe:	int3   
   1400520ff:	int3   
   140052100:	rex push rbp
   140052102:	sub    rsp,0x20
   140052106:	mov    rbp,rdx
   140052109:	movsxd rcx,DWORD PTR [rbp+0x20]
   14005210d:	mov    rax,rcx
   140052110:	mov    rdx,QWORD PTR [rip+0x3b5a9]        # 0x14008d6c0
   140052117:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14005211b:	call   0x1400523a0
   140052120:	add    rsp,0x20
   140052124:	pop    rbp
   140052125:	ret    
   140052126:	int3   
   140052127:	int3   
   140052128:	int3   
   140052129:	int3   
   14005212a:	int3   
   14005212b:	int3   
   14005212c:	int3   
   14005212d:	int3   
   14005212e:	int3   
   14005212f:	int3   
   140052130:	rex push rbp
   140052132:	sub    rsp,0x20
   140052136:	mov    rbp,rdx
   140052139:	mov    ecx,0x1
   14005213e:	call   0x140052d10
   140052143:	add    rsp,0x20
   140052147:	pop    rbp
   140052148:	ret    
   140052149:	int3   
   14005214a:	int3   
   14005214b:	int3   
   14005214c:	int3   
   14005214d:	int3   
   14005214e:	int3   
   14005214f:	int3   
   140052150:	mov    ecx,0x1
   140052155:	jmp    0x140052000
   14005215a:	int3   
   14005215b:	int3   
   14005215c:	int3   
   14005215d:	int3   
   14005215e:	int3   
   14005215f:	int3   
   140052160:	lea    rax,[rip+0x35759]        # 0x1400878c0
   140052167:	ret    
   140052168:	int3   
   140052169:	int3   
   14005216a:	int3   
   14005216b:	int3   
   14005216c:	int3   
   14005216d:	int3   
   14005216e:	int3   
   14005216f:	int3   
   140052170:	rex push rbx
   140052172:	sub    rsp,0x20
   140052176:	mov    eax,DWORD PTR [rip+0x3c564]        # 0x14008e6e0
   14005217c:	mov    ebx,0x14
   140052181:	test   eax,eax
   140052183:	jne    0x14005218c
   140052185:	mov    eax,0x200
   14005218a:	jmp    0x140052191
   14005218c:	cmp    eax,ebx
   14005218e:	cmovl  eax,ebx
   140052191:	movsxd rcx,eax
   140052194:	mov    edx,0x8
   140052199:	mov    DWORD PTR [rip+0x3c541],eax        # 0x14008e6e0
   14005219f:	call   0x14004de90
   1400521a4:	test   rax,rax
   1400521a7:	mov    QWORD PTR [rip+0x3b512],rax        # 0x14008d6c0
   1400521ae:	jne    0x1400521d8
   1400521b0:	lea    edx,[rax+0x8]
   1400521b3:	mov    rcx,rbx
   1400521b6:	mov    DWORD PTR [rip+0x3c524],ebx        # 0x14008e6e0
   1400521bc:	call   0x14004de90
   1400521c1:	test   rax,rax
   1400521c4:	mov    QWORD PTR [rip+0x3b4f5],rax        # 0x14008d6c0
   1400521cb:	jne    0x1400521d8
   1400521cd:	mov    eax,0x1a
   1400521d2:	add    rsp,0x20
   1400521d6:	pop    rbx
   1400521d7:	ret    
   1400521d8:	xor    r9d,r9d
   1400521db:	lea    rdx,[rip+0x356de]        # 0x1400878c0
   1400521e2:	mov    rcx,r9
   1400521e5:	data16 data16 xchg ax,ax
   1400521e9:	data16 xchg ax,ax
   1400521ec:	data16 data16 xchg ax,ax
   1400521f0:	mov    QWORD PTR [rcx+rax*1],rdx
   1400521f4:	add    rcx,0x8
   1400521f8:	add    rdx,0x30
   1400521fc:	sub    rbx,0x1
   140052200:	je     0x14005220b
   140052202:	mov    rax,QWORD PTR [rip+0x3b4b7]        # 0x14008d6c0
   140052209:	jmp    0x1400521f0
   14005220b:	lea    r8,[rip+0x356ca]        # 0x1400878dc
   140052212:	mov    r10d,0x3
   140052218:	lea    r11,[rip+0x3c4e1]        # 0x14008e700
   14005221f:	nop
   140052220:	mov    al,r9b
   140052223:	mov    rdx,r9
   140052226:	and    eax,0x1f
   140052229:	sar    rdx,0x5
   14005222d:	lea    rcx,[rax+rax*4]
   140052231:	mov    rax,QWORD PTR [r11+rdx*8]
   140052235:	add    rcx,rcx
   140052238:	mov    rdx,QWORD PTR [rax+rcx*8]
   14005223c:	cmp    rdx,0xffffffffffffffff
   140052240:	je     0x14005224d
   140052242:	cmp    rdx,0xfffffffffffffffe
   140052246:	je     0x14005224d
   140052248:	test   rdx,rdx
   14005224b:	jne    0x140052254
   14005224d:	mov    DWORD PTR [r8],0xfffffffe
   140052254:	add    r9,0x1
   140052258:	add    r8,0x30
   14005225c:	sub    r10,0x1
   140052260:	jne    0x140052220
   140052262:	xor    eax,eax
   140052264:	add    rsp,0x20
   140052268:	pop    rbx
   140052269:	ret    
   14005226a:	int3   
   14005226b:	int3   
   14005226c:	int3   
   14005226d:	int3   
   14005226e:	int3   
   14005226f:	int3   
   140052270:	sub    rsp,0x28
   140052274:	call   0x140052150
   140052279:	cmp    BYTE PTR [rip+0x3a3c4],0x0        # 0x14008c644
   140052280:	je     0x140052287
   140052282:	call   0x14005aa10
   140052287:	mov    rcx,QWORD PTR [rip+0x3b432]        # 0x14008d6c0
   14005228e:	add    rsp,0x28
   140052292:	jmp    0x1400485c0
   140052297:	int3   
   140052298:	int3   
   140052299:	int3   
   14005229a:	int3   
   14005229b:	int3   
   14005229c:	int3   
   14005229d:	int3   
   14005229e:	int3   
   14005229f:	int3   
   1400522a0:	rex push rbx
   1400522a2:	sub    rsp,0x20
   1400522a6:	mov    rbx,rcx
   1400522a9:	lea    rcx,[rip+0x35610]        # 0x1400878c0
   1400522b0:	cmp    rbx,rcx
   1400522b3:	jb     0x1400522f5
   1400522b5:	lea    rax,[rip+0x35994]        # 0x140087c50
   1400522bc:	cmp    rbx,rax
   1400522bf:	ja     0x1400522f5
   1400522c1:	mov    rdx,rbx
   1400522c4:	movabs rax,0x2aaaaaaaaaaaaaab
   1400522ce:	sub    rdx,rcx
   1400522d1:	imul   rdx
   1400522d4:	sar    rdx,0x3
   1400522d8:	mov    rcx,rdx
   1400522db:	shr    rcx,0x3f
   1400522df:	lea    ecx,[rcx+rdx*1+0x10]
   1400522e3:	call   0x140052e40
   1400522e8:	or     DWORD PTR [rbx+0x18],0x8000
   1400522ef:	add    rsp,0x20
   1400522f3:	pop    rbx
   1400522f4:	ret    
   1400522f5:	lea    rcx,[rbx+0x30]
   1400522f9:	add    rsp,0x20
   1400522fd:	pop    rbx
   1400522fe:	rex.W jmp QWORD PTR [rip+0x12113]        # 0x140064418
   140052305:	int3   
   140052306:	int3   
   140052307:	int3   
   140052308:	int3   
   140052309:	int3   
   14005230a:	int3   
   14005230b:	int3   
   14005230c:	int3   
   14005230d:	int3   
   14005230e:	int3   
   14005230f:	int3   
   140052310:	rex push rbx
   140052312:	sub    rsp,0x20
   140052316:	cmp    ecx,0x14
   140052319:	mov    rbx,rdx
   14005231c:	jge    0x140052333
   14005231e:	add    ecx,0x10
   140052321:	call   0x140052e40
   140052326:	or     DWORD PTR [rbx+0x18],0x8000
   14005232d:	add    rsp,0x20
   140052331:	pop    rbx
   140052332:	ret    
   140052333:	lea    rcx,[rdx+0x30]
   140052337:	add    rsp,0x20
   14005233b:	pop    rbx
   14005233c:	rex.W jmp QWORD PTR [rip+0x120d5]        # 0x140064418
   140052343:	int3   
   140052344:	int3   
   140052345:	int3   
   140052346:	int3   
   140052347:	int3   
   140052348:	int3   
   140052349:	int3   
   14005234a:	int3   
   14005234b:	int3   
   14005234c:	int3   
   14005234d:	int3   
   14005234e:	int3   
   14005234f:	int3   
   140052350:	lea    rdx,[rip+0x35569]        # 0x1400878c0
   140052357:	cmp    rcx,rdx
   14005235a:	jb     0x140052393
   14005235c:	lea    rax,[rip+0x358ed]        # 0x140087c50
   140052363:	cmp    rcx,rax
   140052366:	ja     0x140052393
   140052368:	and    DWORD PTR [rcx+0x18],0xffff7fff
   14005236f:	sub    rcx,rdx
   140052372:	movabs rax,0x2aaaaaaaaaaaaaab
   14005237c:	imul   rcx
   14005237f:	sar    rdx,0x3
   140052383:	mov    rcx,rdx
   140052386:	shr    rcx,0x3f
   14005238a:	lea    ecx,[rcx+rdx*1+0x10]
   14005238e:	jmp    0x140052d10
   140052393:	add    rcx,0x30
   140052397:	rex.W jmp QWORD PTR [rip+0x1208a]        # 0x140064428
   14005239e:	int3   
   14005239f:	int3   
   1400523a0:	cmp    ecx,0x14
   1400523a3:	jge    0x1400523b4
   1400523a5:	and    DWORD PTR [rdx+0x18],0xffff7fff
   1400523ac:	add    ecx,0x10
   1400523af:	jmp    0x140052d10
   1400523b4:	lea    rcx,[rdx+0x30]
   1400523b8:	rex.W jmp QWORD PTR [rip+0x12069]        # 0x140064428
   1400523bf:	int3   
   1400523c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400523c5:	push   rbp
   1400523c6:	push   rsi
   1400523c7:	push   rdi
   1400523c8:	sub    rsp,0x20
   1400523cc:	test   BYTE PTR [rcx+0x18],0x40
   1400523d0:	mov    rdi,rcx
   1400523d3:	lea    rbp,[rip+0x3c326]        # 0x14008e700
   1400523da:	lea    rsi,[rip+0x34d4f]        # 0x140087130
   1400523e1:	jne    0x1400524a0
   1400523e7:	call   0x140051e40
   1400523ec:	cmp    eax,0xffffffff
   1400523ef:	je     0x14005242b
   1400523f1:	mov    rcx,rdi
   1400523f4:	call   0x140051e40
   1400523f9:	cmp    eax,0xfffffffe
   1400523fc:	je     0x14005242b
   1400523fe:	mov    rcx,rdi
   140052401:	call   0x140051e40
   140052406:	mov    rcx,rdi
   140052409:	movsxd rbx,eax
   14005240c:	sar    rbx,0x5
   140052410:	call   0x140051e40
   140052415:	mov    r11d,eax
   140052418:	and    r11d,0x1f
   14005241c:	lea    rax,[r11+r11*4]
   140052420:	shl    rax,0x4
   140052424:	add    rax,QWORD PTR [rbp+rbx*8+0x0]
   140052429:	jmp    0x14005242e
   14005242b:	mov    rax,rsi
   14005242e:	test   BYTE PTR [rax+0x38],0x7f
   140052432:	je     0x1400524a0
   140052434:	add    DWORD PTR [rdi+0x8],0xffffffff
   140052438:	js     0x14005244a
   14005243a:	mov    rax,QWORD PTR [rdi]
   14005243d:	add    rax,0x1
   140052441:	movzx  ecx,BYTE PTR [rax-0x1]
   140052445:	mov    QWORD PTR [rdi],rax
   140052448:	jmp    0x140052454
   14005244a:	mov    rcx,rdi
   14005244d:	call   0x14005aeb0
   140052452:	mov    ecx,eax
   140052454:	cmp    ecx,0xffffffff
   140052457:	je     0x140052561
   14005245d:	add    DWORD PTR [rdi+0x8],0xffffffff
   140052461:	mov    BYTE PTR [rsp+0x40],cl
   140052465:	js     0x140052477
   140052467:	mov    rax,QWORD PTR [rdi]
   14005246a:	add    rax,0x1
   14005246e:	movzx  ecx,BYTE PTR [rax-0x1]
   140052472:	mov    QWORD PTR [rdi],rax
   140052475:	jmp    0x140052481
   140052477:	mov    rcx,rdi
   14005247a:	call   0x14005aeb0
   14005247f:	mov    ecx,eax
   140052481:	cmp    ecx,0xffffffff
   140052484:	je     0x140052561
   14005248a:	mov    BYTE PTR [rsp+0x41],cl
   14005248e:	mov    ax,WORD PTR [rsp+0x40]
   140052493:	mov    rbx,QWORD PTR [rsp+0x50]
   140052498:	add    rsp,0x20
   14005249c:	pop    rdi
   14005249d:	pop    rsi
   14005249e:	pop    rbp
   14005249f:	ret    
   1400524a0:	test   BYTE PTR [rdi+0x18],0x40
   1400524a4:	jne    0x1400525b2
   1400524aa:	mov    rcx,rdi
   1400524ad:	call   0x140051e40
   1400524b2:	cmp    eax,0xffffffff
   1400524b5:	je     0x1400524ef
   1400524b7:	mov    rcx,rdi
   1400524ba:	call   0x140051e40
   1400524bf:	cmp    eax,0xfffffffe
   1400524c2:	je     0x1400524ef
   1400524c4:	mov    rcx,rdi
   1400524c7:	call   0x140051e40
   1400524cc:	mov    rcx,rdi
   1400524cf:	movsxd rbx,eax
   1400524d2:	sar    rbx,0x5
   1400524d6:	call   0x140051e40
   1400524db:	mov    r11d,eax
   1400524de:	and    r11d,0x1f
   1400524e2:	lea    rsi,[r11+r11*4]
   1400524e6:	shl    rsi,0x4
   1400524ea:	add    rsi,QWORD PTR [rbp+rbx*8+0x0]
   1400524ef:	test   BYTE PTR [rsi+0x8],0x80
   1400524f3:	je     0x1400525b2
   1400524f9:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400524fd:	mov    ebx,0x1
   140052502:	js     0x140052512
   140052504:	mov    rax,QWORD PTR [rdi]
   140052507:	movzx  ecx,BYTE PTR [rax]
   14005250a:	add    rax,rbx
   14005250d:	mov    QWORD PTR [rdi],rax
   140052510:	jmp    0x14005251c
   140052512:	mov    rcx,rdi
   140052515:	call   0x14005aeb0
   14005251a:	mov    ecx,eax
   14005251c:	cmp    ecx,0xffffffff
   14005251f:	je     0x140052561
   140052521:	mov    BYTE PTR [rsp+0x48],cl
   140052525:	movzx  ecx,cl
   140052528:	call   0x140049ec0
   14005252d:	test   eax,eax
   14005252f:	je     0x14005257b
   140052531:	add    DWORD PTR [rdi+0x8],0xffffffff
   140052535:	js     0x140052545
   140052537:	mov    rax,QWORD PTR [rdi]
   14005253a:	movzx  ecx,BYTE PTR [rax]
   14005253d:	add    rax,rbx
   140052540:	mov    QWORD PTR [rdi],rax
   140052543:	jmp    0x14005254f
   140052545:	mov    rcx,rdi
   140052548:	call   0x14005aeb0
   14005254d:	mov    ecx,eax
   14005254f:	cmp    ecx,0xffffffff
   140052552:	jne    0x140052572
   140052554:	movsx  ecx,BYTE PTR [rsp+0x48]
   140052559:	mov    rdx,rdi
   14005255c:	call   0x14005ae10
   140052561:	or     ax,0xffff
   140052565:	mov    rbx,QWORD PTR [rsp+0x50]
   14005256a:	add    rsp,0x20
   14005256e:	pop    rdi
   14005256f:	pop    rsi
   140052570:	pop    rbp
   140052571:	ret    
   140052572:	mov    BYTE PTR [rsp+0x49],cl
   140052576:	mov    ebx,0x2
   14005257b:	lea    rdx,[rsp+0x48]
   140052580:	lea    rcx,[rsp+0x40]
   140052585:	movsxd r8,ebx
   140052588:	call   0x140059ec0
   14005258d:	cmp    eax,0xffffffff
   140052590:	jne    0x14005248e
   140052596:	call   0x140048680
   14005259b:	mov    DWORD PTR [rax],0x2a
   1400525a1:	or     ax,0xffff
   1400525a5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400525aa:	add    rsp,0x20
   1400525ae:	pop    rdi
   1400525af:	pop    rsi
   1400525b0:	pop    rbp
   1400525b1:	ret    
   1400525b2:	add    DWORD PTR [rdi+0x8],0xfffffffe
   1400525b6:	js     0x1400525d3
   1400525b8:	mov    rcx,QWORD PTR [rdi]
   1400525bb:	add    rcx,0x2
   1400525bf:	movzx  eax,WORD PTR [rcx-0x2]
   1400525c3:	mov    QWORD PTR [rdi],rcx
   1400525c6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400525cb:	add    rsp,0x20
   1400525cf:	pop    rdi
   1400525d0:	pop    rsi
   1400525d1:	pop    rbp
   1400525d2:	ret    
   1400525d3:	mov    rcx,rdi
   1400525d6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400525db:	add    rsp,0x20
   1400525df:	pop    rdi
   1400525e0:	pop    rsi
   1400525e1:	pop    rbp
   1400525e2:	jmp    0x14005ab00
   1400525e7:	int3   
   1400525e8:	int3   
   1400525e9:	int3   
   1400525ea:	int3   
   1400525eb:	int3   
   1400525ec:	int3   
   1400525ed:	int3   
   1400525ee:	int3   
   1400525ef:	int3   
   1400525f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400525f5:	push   rbp
   1400525f6:	push   rsi
   1400525f7:	push   r12
   1400525f9:	push   r13
   1400525fb:	push   r14
   1400525fd:	sub    rsp,0x30
   140052601:	mov    esi,DWORD PTR [rip+0x3afc5]        # 0x14008d5cc
   140052607:	xor    r14d,r14d
   14005260a:	cmp    WORD PTR [rdx],0x20
   14005260e:	mov    rbp,r9
   140052611:	mov    r10d,r14d
   140052614:	mov    r11d,r14d
   140052617:	mov    r12d,r8d
   14005261a:	mov    rbx,rdx
   14005261d:	mov    r13,rcx
   140052620:	mov    r9d,r14d
   140052623:	jne    0x14005262f
   140052625:	add    rbx,0x2
   140052629:	cmp    WORD PTR [rbx],0x20
   14005262d:	je     0x140052625
   14005262f:	movzx  eax,WORD PTR [rbx]
   140052632:	mov    QWORD PTR [rsp+0x60],rdi
   140052637:	cmp    eax,0x61
   14005263a:	je     0x14005267e
   14005263c:	cmp    eax,0x72
   14005263f:	je     0x140052676
   140052641:	cmp    eax,0x77
   140052644:	je     0x14005266c
   140052646:	call   0x140048680
   14005264b:	xor    r9d,r9d
   14005264e:	xor    r8d,r8d
   140052651:	xor    edx,edx
   140052653:	xor    ecx,ecx
   140052655:	mov    QWORD PTR [rsp+0x20],r14
   14005265a:	mov    DWORD PTR [rax],0x16
   140052660:	call   0x14004e100
   140052665:	xor    eax,eax
   140052667:	jmp    0x1400528bb
   14005266c:	mov    edi,0x301
   140052671:	or     esi,0x2
   140052674:	jmp    0x140052686
   140052676:	mov    edi,r14d
   140052679:	or     esi,0x1
   14005267c:	jmp    0x140052686
   14005267e:	mov    edi,0x109
   140052683:	or     esi,0x2
   140052686:	movzx  eax,WORD PTR [rbx+0x2]
   14005268a:	add    rbx,0x2
   14005268e:	mov    edx,0x1
   140052693:	test   ax,ax
   140052696:	je     0x140052854
   14005269c:	lea    r8,[rip+0xfffffffffffad95d]        # 0x140000000
   1400526a3:	test   edx,edx
   1400526a5:	je     0x1400527ba
   1400526ab:	movzx  eax,ax
   1400526ae:	add    eax,0xffffffe0
   1400526b1:	cmp    eax,0x54
   1400526b4:	ja     0x140052646
   1400526b6:	cdqe   
   1400526b8:	movzx  eax,BYTE PTR [r8+rax*1+0x52908]
   1400526c1:	mov    ecx,DWORD PTR [r8+rax*4+0x528d4]
   1400526c9:	add    rcx,r8
   1400526cc:	jmp    rcx
   1400526ce:	test   dil,0x2
   1400526d2:	je     0x1400526dc
   1400526d4:	mov    edx,r14d
   1400526d7:	jmp    0x1400527a9
   1400526dc:	and    edi,0xfffffffe
   1400526df:	and    esi,0xfffffffc
   1400526e2:	or     edi,0x2
   1400526e5:	bts    esi,0x7
   1400526e9:	jmp    0x1400527a9
   1400526ee:	test   edi,0xc000
   1400526f4:	je     0x1400526fe
   1400526f6:	mov    edx,r14d
   1400526f9:	jmp    0x1400527a9
   1400526fe:	bts    edi,0xf
   140052702:	jmp    0x1400527a9
   140052707:	test   edi,0xc000
   14005270d:	je     0x140052717
   14005270f:	mov    edx,r14d
   140052712:	jmp    0x1400527a9
   140052717:	bts    edi,0xe
   14005271b:	jmp    0x1400527a9
   140052720:	test   r9d,r9d
   140052723:	je     0x14005272d
   140052725:	mov    edx,r14d
   140052728:	jmp    0x1400527a9
   14005272d:	mov    r9d,0x1
   140052733:	bts    esi,0xe
   140052737:	jmp    0x1400527a9
   140052739:	test   r9d,r9d
   14005273c:	je     0x140052743
   14005273e:	mov    edx,r14d
   140052741:	jmp    0x1400527a9
   140052743:	mov    r9d,0x1
   140052749:	btr    esi,0xe
   14005274d:	jmp    0x1400527a9
   14005274f:	test   r10d,r10d
   140052752:	je     0x140052759
   140052754:	mov    edx,r14d
   140052757:	jmp    0x1400527a9
   140052759:	mov    r10d,0x1
   14005275f:	or     edi,0x20
   140052762:	jmp    0x1400527a9
   140052764:	test   r10d,r10d
   140052767:	je     0x14005276e
   140052769:	mov    edx,r14d
   14005276c:	jmp    0x1400527a9
   14005276e:	mov    r10d,0x1
   140052774:	or     edi,0x10
   140052777:	jmp    0x1400527a9
   140052779:	bt     edi,0xc
   14005277d:	jae    0x140052784
   14005277f:	mov    edx,r14d
   140052782:	jmp    0x1400527a9
   140052784:	bts    edi,0xc
   140052788:	jmp    0x1400527a9
   14005278a:	test   dil,0x40
   14005278e:	je     0x140052795
   140052790:	mov    edx,r14d
   140052793:	jmp    0x1400527a9
   140052795:	or     edi,0x40
   140052798:	jmp    0x1400527a9
   14005279a:	bts    edi,0x7
   14005279e:	jmp    0x1400527a9
   1400527a0:	mov    r11d,0x1
   1400527a6:	mov    edx,r14d
   1400527a9:	mov    ax,WORD PTR [rbx+0x2]
   1400527ad:	add    rbx,0x2
   1400527b1:	test   ax,ax
   1400527b4:	jne    0x1400526a3
   1400527ba:	test   r11d,r11d
   1400527bd:	je     0x140052854
   1400527c3:	cmp    WORD PTR [rbx],0x20
   1400527c7:	jne    0x1400527da
   1400527c9:	data16 xchg ax,ax
   1400527cc:	data16 data16 xchg ax,ax
   1400527d0:	add    rbx,0x2
   1400527d4:	cmp    WORD PTR [rbx],0x20
   1400527d8:	je     0x1400527d0
   1400527da:	lea    rcx,[rip+0x1c667]        # 0x14006ee48
   1400527e1:	mov    r8d,0x4
   1400527e7:	mov    rdx,rbx
   1400527ea:	call   0x14004a5f0
   1400527ef:	test   eax,eax
   1400527f1:	jne    0x140052646
   1400527f7:	add    rbx,0x8
   1400527fb:	lea    rdx,[rip+0x1c656]        # 0x14006ee58
   140052802:	mov    rcx,rbx
   140052805:	call   0x14005bcf0
   14005280a:	test   eax,eax
   14005280c:	jne    0x140052818
   14005280e:	add    rbx,0xa
   140052812:	bts    edi,0x12
   140052816:	jmp    0x140052854
   140052818:	lea    rdx,[rip+0x1c649]        # 0x14006ee68
   14005281f:	mov    rcx,rbx
   140052822:	call   0x14005bcf0
   140052827:	test   eax,eax
   140052829:	jne    0x140052835
   14005282b:	add    rbx,0x10
   14005282f:	bts    edi,0x11
   140052833:	jmp    0x140052854
   140052835:	lea    rdx,[rip+0x1c644]        # 0x14006ee80
   14005283c:	mov    rcx,rbx
   14005283f:	call   0x14005bcf0
   140052844:	test   eax,eax
   140052846:	jne    0x140052646
   14005284c:	add    rbx,0xe
   140052850:	bts    edi,0x10
   140052854:	cmp    WORD PTR [rbx],0x20
   140052858:	jne    0x14005286a
   14005285a:	data16 xchg ax,ax
   14005285d:	data16 xchg ax,ax
   140052860:	add    rbx,0x2
   140052864:	cmp    WORD PTR [rbx],0x20
   140052868:	je     0x140052860
   14005286a:	cmp    WORD PTR [rbx],r14w
   14005286e:	jne    0x140052646
   140052874:	lea    rcx,[rsp+0x68]
   140052879:	mov    r9d,r12d
   14005287c:	mov    r8d,edi
   14005287f:	mov    rdx,r13
   140052882:	mov    DWORD PTR [rsp+0x20],0x180
   14005288a:	call   0x14005bae0
   14005288f:	test   eax,eax
   140052891:	jne    0x140052665
   140052897:	add    DWORD PTR [rip+0x3a92e],0x1        # 0x14008d1cc
   14005289e:	mov    eax,DWORD PTR [rsp+0x68]
   1400528a2:	mov    DWORD PTR [rbp+0x18],esi
   1400528a5:	mov    DWORD PTR [rbp+0x1c],eax
   1400528a8:	mov    DWORD PTR [rbp+0x8],r14d
   1400528ac:	mov    QWORD PTR [rbp+0x0],r14
   1400528b0:	mov    rax,rbp
   1400528b3:	mov    QWORD PTR [rbp+0x10],r14
   1400528b7:	mov    QWORD PTR [rbp+0x28],r14
   1400528bb:	mov    rdi,QWORD PTR [rsp+0x60]
   1400528c0:	mov    rbx,QWORD PTR [rsp+0x70]
   1400528c5:	add    rsp,0x30
   1400528c9:	pop    r14
   1400528cb:	pop    r13
   1400528cd:	pop    r12
   1400528cf:	pop    rsi
   1400528d0:	pop    rbp
   1400528d1:	ret    
   1400528d2:	xchg   ax,ax
   1400528d4:	test   eax,0xce000527
   1400528d9:	es add eax,0x527a000
   1400528df:	add    BYTE PTR [rdx-0x65fffad9],cl
   1400528e5:	(bad)  
   1400528e6:	add    eax,0x5276400
   1400528eb:	add    BYTE PTR [rdi+0x27],cl
   1400528ee:	add    eax,0x5277900
   1400528f3:	add    dh,ch
   1400528f5:	es add eax,0x5272000
   1400528fb:	add    BYTE PTR [rcx],bh
   1400528fd:	(bad)  
   1400528fe:	add    eax,0x5270700
   140052903:	add    BYTE PTR [rsi+0x26],al
   140052906:	add    eax,0xc0c0000
   14005290b:	or     al,0xc
   14005290d:	or     al,0xc
   14005290f:	or     al,0xc
   140052911:	or     al,0xc
   140052913:	add    DWORD PTR [rdx],eax
   140052915:	or     al,0xc
   140052917:	or     al,0xc
   140052919:	or     al,0xc
   14005291b:	or     al,0xc
   14005291d:	or     al,0xc
   14005291f:	or     al,0xc
   140052921:	or     al,0xc
   140052923:	or     al,0xc
   140052925:	or     al,0xc
   140052927:	or     al,0xc
   140052929:	or     al,0xc
   14005292b:	or     al,0x3
   14005292d:	or     al,0xc
   14005292f:	or     al,0xc
   140052931:	or     al,0xc
   140052933:	or     al,0xc
   140052935:	or     al,0x4
   140052937:	or     al,0xc
   140052939:	or     al,0x5
   14005293b:	(bad)  
   14005293c:	(bad)  
   14005293d:	or     al,0xc
   14005293f:	or     al,0xc
   140052941:	or     al,0xc
   140052943:	or     al,0xc
   140052945:	or     al,0xc
   140052947:	or     al,0xc
   140052949:	or     al,0x8
   14005294b:	or     DWORD PTR [rsp+rcx*1],ecx
   14005294e:	or     al,0xc
   140052950:	or     al,0xc
   140052952:	or     al,0xc
   140052954:	or     al,0xc
   140052956:	or     cl,BYTE PTR [rsp+rcx*1]
   140052959:	or     al,0xc
   14005295b:	or     al,0xb
   14005295d:	int3   
   14005295e:	int3   
   14005295f:	int3   
   140052960:	mov    QWORD PTR [rsp+0x8],rbx
   140052965:	mov    QWORD PTR [rsp+0x10],rsi
   14005296a:	mov    QWORD PTR [rsp+0x18],rdi
   14005296f:	push   r12
   140052971:	sub    rsp,0x30
   140052975:	xor    r12d,r12d
   140052978:	mov    rdi,r12
   14005297b:	lea    ecx,[r12+0x1]
   140052980:	call   0x140052e40
   140052985:	nop
   140052986:	mov    ebx,r12d
   140052989:	mov    DWORD PTR [rsp+0x20],ebx
   14005298d:	data16 xchg ax,ax
   140052990:	cmp    ebx,DWORD PTR [rip+0x3bd4a]        # 0x14008e6e0
   140052996:	jge    0x140052a93
   14005299c:	movsxd rsi,ebx
   14005299f:	mov    rax,QWORD PTR [rip+0x3ad1a]        # 0x14008d6c0
   1400529a6:	cmp    QWORD PTR [rax+rsi*8],0x0
   1400529ab:	je     0x140052a1a
   1400529ad:	mov    rax,QWORD PTR [rax+rsi*8]
   1400529b1:	mov    ecx,DWORD PTR [rax+0x18]
   1400529b4:	test   cl,0x83
   1400529b7:	jne    0x140052a0e
   1400529b9:	bt     ecx,0xf
   1400529bd:	jb     0x140052a0e
   1400529bf:	lea    eax,[rbx-0x3]
   1400529c2:	cmp    eax,0x10
   1400529c5:	ja     0x1400529d7
   1400529c7:	lea    ecx,[rbx+0x10]
   1400529ca:	call   0x140052d30
   1400529cf:	test   eax,eax
   1400529d1:	je     0x140052a93
   1400529d7:	mov    rdx,QWORD PTR [rip+0x3ace2]        # 0x14008d6c0
   1400529de:	mov    rdx,QWORD PTR [rdx+rsi*8]
   1400529e2:	mov    ecx,ebx
   1400529e4:	call   0x140052310
   1400529e9:	mov    r11,QWORD PTR [rip+0x3acd0]        # 0x14008d6c0
   1400529f0:	mov    rax,QWORD PTR [r11+rsi*8]
   1400529f4:	test   BYTE PTR [rax+0x18],0x83
   1400529f8:	je     0x140052a06
   1400529fa:	mov    rdx,rax
   1400529fd:	mov    ecx,ebx
   1400529ff:	call   0x1400523a0
   140052a04:	jmp    0x140052a0e
   140052a06:	mov    rdi,rax
   140052a09:	jmp    0x140052a93
   140052a0e:	add    ebx,0x1
   140052a11:	mov    DWORD PTR [rsp+0x20],ebx
   140052a15:	jmp    0x140052990
   140052a1a:	movsxd rbx,ebx
   140052a1d:	mov    ecx,0x58
   140052a22:	call   0x14004de20
   140052a27:	mov    rcx,QWORD PTR [rip+0x3ac92]        # 0x14008d6c0
   140052a2e:	mov    QWORD PTR [rcx+rbx*8],rax
   140052a32:	mov    rcx,QWORD PTR [rip+0x3ac87]        # 0x14008d6c0
   140052a39:	cmp    QWORD PTR [rcx+rbx*8],0x0
   140052a3e:	je     0x140052a93
   140052a40:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140052a44:	add    rcx,0x30
   140052a48:	mov    edx,0xfa0
   140052a4d:	call   0x1400532f0
   140052a52:	test   eax,eax
   140052a54:	jne    0x140052a73
   140052a56:	mov    rcx,QWORD PTR [rip+0x3ac63]        # 0x14008d6c0
   140052a5d:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140052a61:	call   0x1400485c0
   140052a66:	mov    r11,QWORD PTR [rip+0x3ac53]        # 0x14008d6c0
   140052a6d:	mov    QWORD PTR [r11+rbx*8],r12
   140052a71:	jmp    0x140052a93
   140052a73:	mov    rax,QWORD PTR [rip+0x3ac46]        # 0x14008d6c0
   140052a7a:	mov    rcx,QWORD PTR [rax+rbx*8]
   140052a7e:	add    rcx,0x30
   140052a82:	call   QWORD PTR [rip+0x11990]        # 0x140064418
   140052a88:	mov    r11,QWORD PTR [rip+0x3ac31]        # 0x14008d6c0
   140052a8f:	mov    rdi,QWORD PTR [r11+rbx*8]
   140052a93:	test   rdi,rdi
   140052a96:	je     0x140052ab5
   140052a98:	and    DWORD PTR [rdi+0x18],0x8000
   140052a9f:	mov    DWORD PTR [rdi+0x8],r12d
   140052aa3:	mov    QWORD PTR [rdi+0x10],r12
   140052aa7:	mov    QWORD PTR [rdi],r12
   140052aaa:	mov    QWORD PTR [rdi+0x28],r12
   140052aae:	mov    DWORD PTR [rdi+0x1c],0xffffffff
   140052ab5:	mov    ecx,0x1
   140052aba:	call   0x140052d10
   140052abf:	mov    rax,rdi
   140052ac2:	mov    rbx,QWORD PTR [rsp+0x40]
   140052ac7:	mov    rsi,QWORD PTR [rsp+0x48]
   140052acc:	mov    rdi,QWORD PTR [rsp+0x50]
   140052ad1:	add    rsp,0x30
   140052ad5:	pop    r12
   140052ad7:	ret    
   140052ad8:	int3   
   140052ad9:	int3   
   140052ada:	int3   
   140052adb:	int3   
   140052adc:	int3   
   140052add:	int3   
   140052ade:	int3   
   140052adf:	int3   
   140052ae0:	rex push rbp
   140052ae2:	sub    rsp,0x20
   140052ae6:	mov    rbp,rdx
   140052ae9:	mov    ecx,0x1
   140052aee:	call   0x140052d10
   140052af3:	add    rsp,0x20
   140052af7:	pop    rbp
   140052af8:	ret    
   140052af9:	int3   
   140052afa:	int3   
   140052afb:	int3   
   140052afc:	int3   
   140052afd:	int3   
   140052afe:	int3   
   140052aff:	int3   
   140052b00:	int3   
   140052b01:	int3   
   140052b02:	int3   
   140052b03:	int3   
   140052b04:	int3   
   140052b05:	int3   
   140052b06:	data16 data16 xchg ax,ax
   140052b0a:	data16 data16 xchg ax,ax
   140052b0e:	xchg   ax,ax
   140052b10:	sub    rsp,0x4d8
   140052b17:	xor    r8,r8
   140052b1a:	xor    r9,r9
   140052b1d:	mov    QWORD PTR [rsp+0x20],rsp
   140052b22:	mov    QWORD PTR [rsp+0x28],r8
   140052b27:	call   0x140062cf8
   140052b2c:	add    rsp,0x4d8
   140052b33:	ret    
   140052b34:	int3   
   140052b35:	int3   
   140052b36:	int3   
   140052b37:	int3   
   140052b38:	int3   
   140052b39:	int3   
   140052b3a:	data16 xchg ax,ax
   140052b3d:	data16 xchg ax,ax
   140052b40:	mov    QWORD PTR [rsp+0x8],rcx
   140052b45:	mov    QWORD PTR [rsp+0x18],rdx
   140052b4a:	mov    DWORD PTR [rsp+0x10],r8d
   140052b4f:	mov    r9,0x19930520
   140052b56:	jmp    0x140052b60
   140052b58:	int3   
   140052b59:	int3   
   140052b5a:	int3   
   140052b5b:	int3   
   140052b5c:	int3   
   140052b5d:	int3   
   140052b5e:	xchg   ax,ax
   140052b60:	ret    
   140052b61:	int3   
   140052b62:	int3   
   140052b63:	int3   
   140052b64:	int3   
   140052b65:	int3   
   140052b66:	int3   
   140052b67:	data16 data16 xchg ax,ax
   140052b6b:	data16 data16 xchg ax,ax
   140052b6f:	nop
   140052b70:	ret    
   140052b71:	int3   
   140052b72:	int3   
   140052b73:	int3   
   140052b74:	int3   
   140052b75:	int3   
   140052b76:	int3   
   140052b77:	int3   
   140052b78:	int3   
   140052b79:	int3   
   140052b7a:	int3   
   140052b7b:	int3   
   140052b7c:	int3   
   140052b7d:	int3   
   140052b7e:	int3   
   140052b7f:	int3   
   140052b80:	mov    QWORD PTR [rip+0x3a649],rcx        # 0x14008d1d0
   140052b87:	ret    
   140052b88:	int3   
   140052b89:	int3   
   140052b8a:	int3   
   140052b8b:	int3   
   140052b8c:	int3   
   140052b8d:	int3   
   140052b8e:	int3   
   140052b8f:	int3   
   140052b90:	rex push rbx
   140052b92:	sub    rsp,0x20
   140052b96:	mov    rbx,rcx
   140052b99:	mov    rcx,QWORD PTR [rip+0x3a630]        # 0x14008d1d0
   140052ba0:	call   0x14004ba70
   140052ba5:	test   rax,rax
   140052ba8:	je     0x140052bbe
   140052baa:	mov    rcx,rbx
   140052bad:	call   rax
   140052baf:	test   eax,eax
   140052bb1:	je     0x140052bbe
   140052bb3:	mov    eax,0x1
   140052bb8:	add    rsp,0x20
   140052bbc:	pop    rbx
   140052bbd:	ret    
   140052bbe:	xor    eax,eax
   140052bc0:	add    rsp,0x20
   140052bc4:	pop    rbx
   140052bc5:	ret    
   140052bc6:	int3   
   140052bc7:	int3   
   140052bc8:	int3   
   140052bc9:	int3   
   140052bca:	int3   
   140052bcb:	int3   
   140052bcc:	int3   
   140052bcd:	int3   
   140052bce:	int3   
   140052bcf:	int3   
   140052bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140052bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140052bda:	mov    QWORD PTR [rsp+0x18],rsi
   140052bdf:	push   rdi
   140052be0:	push   r12
   140052be2:	push   r13
   140052be4:	sub    rsp,0x20
   140052be8:	lea    r12,[rip+0x35091]        # 0x140087c80
   140052bef:	xor    esi,esi
   140052bf1:	lea    r13,[rip+0x3a5e8]        # 0x14008d1e0
   140052bf8:	xor    edi,edi
   140052bfa:	lea    rbp,[rip+0x352bf]        # 0x140087ec0
   140052c01:	mov    rbx,r12
   140052c04:	cmp    DWORD PTR [rbx+0x8],0x1
   140052c08:	jne    0x140052c2a
   140052c0a:	movsxd rax,esi
   140052c0d:	mov    edx,0xfa0
   140052c12:	add    esi,0x1
   140052c15:	lea    rcx,[rax+rax*4]
   140052c19:	lea    rcx,[r13+rcx*8+0x0]
   140052c1e:	mov    QWORD PTR [rbx],rcx
   140052c21:	call   0x1400532f0
   140052c26:	test   eax,eax
   140052c28:	je     0x140052c54
   140052c2a:	add    rbx,0x10
   140052c2e:	add    edi,0x1
   140052c31:	cmp    rbx,rbp
   140052c34:	jl     0x140052c04
   140052c36:	mov    eax,0x1
   140052c3b:	mov    rbx,QWORD PTR [rsp+0x40]
   140052c40:	mov    rbp,QWORD PTR [rsp+0x48]
   140052c45:	mov    rsi,QWORD PTR [rsp+0x50]
   140052c4a:	add    rsp,0x20
   140052c4e:	pop    r13
   140052c50:	pop    r12
   140052c52:	pop    rdi
   140052c53:	ret    
   140052c54:	movsxd rax,edi
   140052c57:	add    rax,rax
   140052c5a:	mov    QWORD PTR [r12+rax*8],0x0
   140052c62:	xor    eax,eax
   140052c64:	jmp    0x140052c3b
   140052c66:	int3   
   140052c67:	int3   
   140052c68:	int3   
   140052c69:	int3   
   140052c6a:	int3   
   140052c6b:	int3   
   140052c6c:	int3   
   140052c6d:	int3   
   140052c6e:	int3   
   140052c6f:	int3   
   140052c70:	mov    QWORD PTR [rsp+0x8],rbx
   140052c75:	mov    QWORD PTR [rsp+0x10],rbp
   140052c7a:	mov    QWORD PTR [rsp+0x18],rsi
   140052c7f:	mov    QWORD PTR [rsp+0x20],rdi
   140052c84:	push   r12
   140052c86:	sub    rsp,0x20
   140052c8a:	lea    rbx,[rip+0x34fef]        # 0x140087c80
   140052c91:	xor    r12d,r12d
   140052c94:	lea    rbp,[rip+0x35225]        # 0x140087ec0
   140052c9b:	mov    rdi,rbx
   140052c9e:	xchg   ax,ax
   140052ca0:	mov    rsi,QWORD PTR [rdi]
   140052ca3:	test   rsi,rsi
   140052ca6:	je     0x140052cc2
   140052ca8:	cmp    DWORD PTR [rdi+0x8],0x1
   140052cac:	je     0x140052cc2
   140052cae:	mov    rcx,rsi
   140052cb1:	call   QWORD PTR [rip+0x114d1]        # 0x140064188
   140052cb7:	mov    rcx,rsi
   140052cba:	call   0x1400485c0
   140052cbf:	mov    QWORD PTR [rdi],r12
   140052cc2:	add    rdi,0x10
   140052cc6:	cmp    rdi,rbp
   140052cc9:	jl     0x140052ca0
   140052ccb:	xchg   ax,ax
   140052ccd:	data16 xchg ax,ax
   140052cd0:	mov    rcx,QWORD PTR [rbx]
   140052cd3:	test   rcx,rcx
   140052cd6:	je     0x140052ce4
   140052cd8:	cmp    DWORD PTR [rbx+0x8],0x1
   140052cdc:	jne    0x140052ce4
   140052cde:	call   QWORD PTR [rip+0x114a4]        # 0x140064188
   140052ce4:	add    rbx,0x10
   140052ce8:	cmp    rbx,rbp
   140052ceb:	jl     0x140052cd0
   140052ced:	mov    rbx,QWORD PTR [rsp+0x30]
   140052cf2:	mov    rbp,QWORD PTR [rsp+0x38]
   140052cf7:	mov    rsi,QWORD PTR [rsp+0x40]
   140052cfc:	mov    rdi,QWORD PTR [rsp+0x48]
   140052d01:	add    rsp,0x20
   140052d05:	pop    r12
   140052d07:	ret    
   140052d08:	int3   
   140052d09:	int3   
   140052d0a:	int3   
   140052d0b:	int3   
   140052d0c:	int3   
   140052d0d:	int3   
   140052d0e:	int3   
   140052d0f:	int3   
   140052d10:	movsxd rcx,ecx
   140052d13:	lea    rax,[rip+0x34f66]        # 0x140087c80
   140052d1a:	add    rcx,rcx
   140052d1d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140052d21:	rex.W jmp QWORD PTR [rip+0x11700]        # 0x140064428
   140052d28:	int3   
   140052d29:	int3   
   140052d2a:	int3   
   140052d2b:	int3   
   140052d2c:	int3   
   140052d2d:	int3   
   140052d2e:	int3   
   140052d2f:	int3   
   140052d30:	mov    QWORD PTR [rsp+0x8],rbx
   140052d35:	mov    QWORD PTR [rsp+0x10],rsi
   140052d3a:	mov    QWORD PTR [rsp+0x18],rdi
   140052d3f:	push   r12
   140052d41:	sub    rsp,0x20
   140052d45:	movsxd rbx,ecx
   140052d48:	mov    esi,0x1
   140052d4d:	cmp    QWORD PTR [rip+0x39e83],0x0        # 0x14008cbd8
   140052d55:	jne    0x140052d6e
   140052d57:	call   0x14004a8e0
   140052d5c:	lea    ecx,[rsi+0x1d]
   140052d5f:	call   0x14004a6a0
   140052d64:	mov    ecx,0xff
   140052d69:	call   0x1400481c0
   140052d6e:	mov    rdi,rbx
   140052d71:	add    rdi,rdi
   140052d74:	lea    r12,[rip+0x34f05]        # 0x140087c80
   140052d7b:	cmp    QWORD PTR [r12+rdi*8],0x0
   140052d80:	je     0x140052d86
   140052d82:	mov    eax,esi
   140052d84:	jmp    0x140052dff
   140052d86:	mov    ecx,0x28
   140052d8b:	call   0x14004de20
   140052d90:	mov    rbx,rax
   140052d93:	test   rax,rax
   140052d96:	jne    0x140052da7
   140052d98:	call   0x140048680
   140052d9d:	mov    DWORD PTR [rax],0xc
   140052da3:	xor    eax,eax
   140052da5:	jmp    0x140052dff
   140052da7:	mov    ecx,0xa
   140052dac:	call   0x140052e40
   140052db1:	nop
   140052db2:	cmp    QWORD PTR [r12+rdi*8],0x0
   140052db7:	jne    0x140052de7
   140052db9:	mov    edx,0xfa0
   140052dbe:	mov    rcx,rbx
   140052dc1:	call   0x1400532f0
   140052dc6:	test   eax,eax
   140052dc8:	jne    0x140052de1
   140052dca:	mov    rcx,rbx
   140052dcd:	call   0x1400485c0
   140052dd2:	call   0x140048680
   140052dd7:	mov    DWORD PTR [rax],0xc
   140052ddd:	xor    esi,esi
   140052ddf:	jmp    0x140052df0
   140052de1:	mov    QWORD PTR [r12+rdi*8],rbx
   140052de5:	jmp    0x140052df0
   140052de7:	mov    rcx,rbx
   140052dea:	call   0x1400485c0
   140052def:	nop
   140052df0:	mov    rcx,QWORD PTR [rip+0x34f29]        # 0x140087d20
   140052df7:	call   QWORD PTR [rip+0x1162b]        # 0x140064428
   140052dfd:	mov    eax,esi
   140052dff:	mov    rbx,QWORD PTR [rsp+0x30]
   140052e04:	mov    rsi,QWORD PTR [rsp+0x38]
   140052e09:	mov    rdi,QWORD PTR [rsp+0x40]
   140052e0e:	add    rsp,0x20
   140052e12:	pop    r12
   140052e14:	ret    
   140052e15:	int3   
   140052e16:	int3   
   140052e17:	int3   
   140052e18:	int3   
   140052e19:	int3   
   140052e1a:	int3   
   140052e1b:	int3   
   140052e1c:	int3   
   140052e1d:	int3   
   140052e1e:	int3   
   140052e1f:	int3   
   140052e20:	rex push rbp
   140052e22:	sub    rsp,0x20
   140052e26:	mov    rbp,rdx
   140052e29:	mov    rcx,QWORD PTR [rip+0x34ef0]        # 0x140087d20
   140052e30:	call   QWORD PTR [rip+0x115f2]        # 0x140064428
   140052e36:	add    rsp,0x20
   140052e3a:	pop    rbp
   140052e3b:	ret    
   140052e3c:	int3   
   140052e3d:	int3   
   140052e3e:	int3   
   140052e3f:	int3   
   140052e40:	mov    QWORD PTR [rsp+0x8],rbx
   140052e45:	push   rdi
   140052e46:	sub    rsp,0x20
   140052e4a:	movsxd rbx,ecx
   140052e4d:	lea    rdi,[rip+0x34e2c]        # 0x140087c80
   140052e54:	add    rbx,rbx
   140052e57:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140052e5c:	jne    0x140052e6f
   140052e5e:	call   0x140052d30
   140052e63:	test   eax,eax
   140052e65:	jne    0x140052e6f
   140052e67:	lea    ecx,[rax+0x11]
   140052e6a:	call   0x140048190
   140052e6f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140052e73:	mov    rbx,QWORD PTR [rsp+0x30]
   140052e78:	add    rsp,0x20
   140052e7c:	pop    rdi
   140052e7d:	rex.W jmp QWORD PTR [rip+0x11594]        # 0x140064418
   140052e84:	int3   
   140052e85:	int3   
   140052e86:	int3   
   140052e87:	int3   
   140052e88:	int3   
   140052e89:	int3   
   140052e8a:	int3   
   140052e8b:	int3   
   140052e8c:	int3   
   140052e8d:	int3   
   140052e8e:	int3   
   140052e8f:	int3   
   140052e90:	mov    QWORD PTR [rsp+0x8],rbx
   140052e95:	push   rdi
   140052e96:	sub    rsp,0x20
   140052e9a:	lea    rbx,[rip+0x3501f]        # 0x140087ec0
   140052ea1:	mov    edi,0xa
   140052ea6:	mov    rcx,QWORD PTR [rbx]
   140052ea9:	call   0x14004b8b0
   140052eae:	add    rbx,0x8
   140052eb2:	sub    rdi,0x1
   140052eb6:	mov    QWORD PTR [rbx-0x8],rax
   140052eba:	jne    0x140052ea6
   140052ebc:	mov    rbx,QWORD PTR [rsp+0x30]
   140052ec1:	add    rsp,0x20
   140052ec5:	pop    rdi
   140052ec6:	ret    
   140052ec7:	int3   
   140052ec8:	int3   
   140052ec9:	int3   
   140052eca:	int3   
   140052ecb:	int3   
   140052ecc:	int3   
   140052ecd:	int3   
   140052ece:	int3   
   140052ecf:	int3   
   140052ed0:	xor    eax,eax
   140052ed2:	cmp    WORD PTR [rcx],0x5a4d
   140052ed7:	jne    0x140052ef0
   140052ed9:	movsxd rdx,DWORD PTR [rcx+0x3c]
   140052edd:	cmp    DWORD PTR [rdx+rcx*1],0x4550
   140052ee4:	jne    0x140052ef0
   140052ee6:	cmp    WORD PTR [rdx+rcx*1+0x18],0x20b
   140052eed:	sete   al
   140052ef0:	ret    0x0
   140052ef3:	int3   
   140052ef4:	int3   
   140052ef5:	int3   
   140052ef6:	int3   
   140052ef7:	int3   
   140052ef8:	int3   
   140052ef9:	int3   
   140052efa:	int3   
   140052efb:	int3   
   140052efc:	int3   
   140052efd:	int3   
   140052efe:	int3   
   140052eff:	int3   
   140052f00:	movsxd r8,DWORD PTR [rcx+0x3c]
   140052f04:	xor    r9d,r9d
   140052f07:	mov    r10,rdx
   140052f0a:	add    r8,rcx
   140052f0d:	movzx  eax,WORD PTR [r8+0x14]
   140052f12:	movzx  r11d,WORD PTR [r8+0x6]
   140052f17:	test   r11d,r11d
   140052f1a:	lea    rcx,[rax+r8*1+0x18]
   140052f1f:	je     0x140052f40
   140052f21:	mov    edx,DWORD PTR [rcx+0xc]
   140052f24:	cmp    r10,rdx
   140052f27:	jb     0x140052f33
   140052f29:	mov    eax,DWORD PTR [rcx+0x8]
   140052f2c:	add    eax,edx
   140052f2e:	cmp    r10,rax
   140052f31:	jb     0x140052f43
   140052f33:	add    r9d,0x1
   140052f37:	add    rcx,0x28
   140052f3b:	cmp    r9d,r11d
   140052f3e:	jb     0x140052f21
   140052f40:	xor    eax,eax
   140052f42:	ret    
   140052f43:	mov    rax,rcx
   140052f46:	ret    
   140052f47:	int3   
   140052f48:	int3   
   140052f49:	int3   
   140052f4a:	int3   
   140052f4b:	int3   
   140052f4c:	int3   
   140052f4d:	int3   
   140052f4e:	int3   
   140052f4f:	int3   
   140052f50:	sub    rsp,0x28
   140052f54:	mov    r8,rcx
   140052f57:	lea    rcx,[rip+0xfffffffffffad0a2]        # 0x140000000
   140052f5e:	call   0x140052ed0
   140052f63:	test   eax,eax
   140052f65:	je     0x140052f86
   140052f67:	sub    r8,rcx
   140052f6a:	mov    rdx,r8
   140052f6d:	call   0x140052f00
   140052f72:	test   rax,rax
   140052f75:	je     0x140052f86
   140052f77:	mov    eax,DWORD PTR [rax+0x24]
   140052f7a:	shr    eax,0x1f
   140052f7d:	not    eax
   140052f7f:	and    eax,0x1
   140052f82:	jmp    0x140052f86
   140052f84:	xor    eax,eax
   140052f86:	add    rsp,0x28
   140052f8a:	ret    
   140052f8b:	int3   
   140052f8c:	int3   
   140052f8d:	int3   
   140052f8e:	int3   
   140052f8f:	int3   
   140052f90:	rex push rbp
   140052f92:	sub    rsp,0x20
   140052f96:	mov    rbp,rdx
   140052f99:	mov    rax,QWORD PTR [rcx]
   140052f9c:	xor    ecx,ecx
   140052f9e:	cmp    DWORD PTR [rax],0xc0000005
   140052fa4:	sete   cl
   140052fa7:	mov    eax,ecx
   140052fa9:	mov    eax,ecx
   140052fab:	add    rsp,0x20
   140052faf:	pop    rbp
   140052fb0:	ret    
   140052fb1:	int3   
   140052fb2:	int3   
   140052fb3:	int3   
   140052fb4:	int3   
   140052fb5:	int3   
   140052fb6:	int3   
   140052fb7:	int3   
   140052fb8:	int3   
   140052fb9:	int3   
   140052fba:	int3   
   140052fbb:	int3   
   140052fbc:	int3   
   140052fbd:	int3   
   140052fbe:	int3   
   140052fbf:	int3   
   140052fc0:	mov    QWORD PTR [rip+0x3a449],rcx        # 0x14008d410
   140052fc7:	mov    QWORD PTR [rip+0x3a44a],rcx        # 0x14008d418
   140052fce:	mov    QWORD PTR [rip+0x3a44b],rcx        # 0x14008d420
   140052fd5:	mov    QWORD PTR [rip+0x3a44c],rcx        # 0x14008d428
   140052fdc:	ret    
   140052fdd:	int3   
   140052fde:	int3   
   140052fdf:	int3   
   140052fe0:	mov    rcx,QWORD PTR [rip+0x3a439]        # 0x14008d420
   140052fe7:	jmp    0x14004ba70
   140052fec:	int3   
   140052fed:	int3   
   140052fee:	int3   
   140052fef:	int3   
   140052ff0:	mov    QWORD PTR [rsp+0x10],rbx
   140052ff5:	mov    QWORD PTR [rsp+0x18],rsi
   140052ffa:	push   rdi
   140052ffb:	push   r12
   140052ffd:	push   r13
   140052fff:	push   r14
   140053001:	push   r15
   140053003:	sub    rsp,0x40
   140053007:	mov    ebx,ecx
   140053009:	xor    r14d,r14d
   14005300c:	mov    edi,r14d
   14005300f:	mov    DWORD PTR [rsp+0x70],r14d
   140053014:	mov    rsi,r14
   140053017:	lea    eax,[rcx-0x2]
   14005301a:	cmp    eax,0x14
   14005301d:	ja     0x14005320e
   140053023:	cdqe   
   140053025:	lea    rcx,[rip+0xfffffffffffacfd4]        # 0x140000000
   14005302c:	movzx  eax,BYTE PTR [rcx+rax*1+0x53264]
   140053034:	mov    edx,DWORD PTR [rcx+rax*4+0x5324c]
   14005303b:	add    rdx,rcx
   14005303e:	jmp    rdx
   140053040:	lea    r12,[rip+0x3a3c9]        # 0x14008d410
   140053047:	mov    rcx,QWORD PTR [rip+0x3a3c2]        # 0x14008d410
   14005304e:	mov    edi,0x1
   140053053:	mov    DWORD PTR [rsp+0x70],edi
   140053057:	jmp    0x1400530a2
   140053059:	lea    r12,[rip+0x3a3b8]        # 0x14008d418
   140053060:	mov    rcx,QWORD PTR [rip+0x3a3b1]        # 0x14008d418
   140053067:	mov    edi,0x1
   14005306c:	mov    DWORD PTR [rsp+0x70],edi
   140053070:	jmp    0x1400530a2
   140053072:	lea    r12,[rip+0x3a3a7]        # 0x14008d420
   140053079:	mov    rcx,QWORD PTR [rip+0x3a3a0]        # 0x14008d420
   140053080:	mov    edi,0x1
   140053085:	mov    DWORD PTR [rsp+0x70],edi
   140053089:	jmp    0x1400530a2
   14005308b:	lea    r12,[rip+0x3a396]        # 0x14008d428
   140053092:	mov    rcx,QWORD PTR [rip+0x3a38f]        # 0x14008d428
   140053099:	mov    edi,0x1
   14005309e:	mov    DWORD PTR [rsp+0x70],edi
   1400530a2:	call   0x14004ba70
   1400530a7:	mov    r13,rax
   1400530aa:	jmp    0x140053109
   1400530ac:	call   0x14004bcd0
   1400530b1:	mov    rsi,rax
   1400530b4:	test   rax,rax
   1400530b7:	jne    0x1400530c1
   1400530b9:	or     eax,0xffffffff
   1400530bc:	jmp    0x140053230
   1400530c1:	mov    rdx,QWORD PTR [rax+0xa0]
   1400530c8:	mov    rcx,rdx
   1400530cb:	movsxd r8,DWORD PTR [rip+0x3405a]        # 0x14008712c
   1400530d2:	cmp    DWORD PTR [rcx+0x4],ebx
   1400530d5:	je     0x1400530ea
   1400530d7:	add    rcx,0x10
   1400530db:	mov    rax,r8
   1400530de:	shl    rax,0x4
   1400530e2:	add    rax,rdx
   1400530e5:	cmp    rcx,rax
   1400530e8:	jb     0x1400530d2
   1400530ea:	mov    rax,r8
   1400530ed:	shl    rax,0x4
   1400530f1:	add    rax,rdx
   1400530f4:	cmp    rcx,rax
   1400530f7:	jae    0x1400530fe
   1400530f9:	cmp    DWORD PTR [rcx+0x4],ebx
   1400530fc:	je     0x140053101
   1400530fe:	mov    rcx,r14
   140053101:	lea    r12,[rcx+0x8]
   140053105:	mov    r13,QWORD PTR [r12]
   140053109:	cmp    r13,0x1
   14005310d:	jne    0x140053116
   14005310f:	xor    eax,eax
   140053111:	jmp    0x140053230
   140053116:	test   r13,r13
   140053119:	jne    0x140053125
   14005311b:	lea    ecx,[r13+0x3]
   14005311f:	call   0x140048520
   140053124:	int3   
   140053125:	test   edi,edi
   140053127:	je     0x140053131
   140053129:	xor    ecx,ecx
   14005312b:	call   0x140052e40
   140053130:	nop
   140053131:	cmp    ebx,0x8
   140053134:	je     0x14005314c
   140053136:	cmp    ebx,0xb
   140053139:	je     0x14005314c
   14005313b:	cmp    ebx,0x4
   14005313e:	je     0x14005314c
   140053140:	mov    r15,QWORD PTR [rsp+0x38]
   140053145:	mov    r14d,DWORD PTR [rsp+0x70]
   14005314a:	jmp    0x14005317c
   14005314c:	mov    r15,QWORD PTR [rsi+0xa8]
   140053153:	mov    QWORD PTR [rsp+0x38],r15
   140053158:	mov    QWORD PTR [rsi+0xa8],r14
   14005315f:	cmp    ebx,0x8
   140053162:	jne    0x140053177
   140053164:	mov    r14d,DWORD PTR [rsi+0xb0]
   14005316b:	mov    DWORD PTR [rsi+0xb0],0x8c
   140053175:	jmp    0x14005317c
   140053177:	mov    r14d,DWORD PTR [rsp+0x70]
   14005317c:	cmp    ebx,0x8
   14005317f:	jne    0x1400531bd
   140053181:	mov    ecx,DWORD PTR [rip+0x33f99]        # 0x140087120
   140053187:	mov    edx,ecx
   140053189:	mov    DWORD PTR [rsp+0x30],ecx
   14005318d:	xor    r8d,r8d
   140053190:	mov    eax,DWORD PTR [rip+0x33f8e]        # 0x140087124
   140053196:	add    ecx,eax
   140053198:	cmp    edx,ecx
   14005319a:	jge    0x1400531c6
   14005319c:	movsxd rcx,edx
   14005319f:	add    rcx,rcx
   1400531a2:	mov    rax,QWORD PTR [rsi+0xa0]
   1400531a9:	mov    QWORD PTR [rax+rcx*8+0x8],r8
   1400531ae:	add    edx,0x1
   1400531b1:	mov    DWORD PTR [rsp+0x30],edx
   1400531b5:	mov    ecx,DWORD PTR [rip+0x33f65]        # 0x140087120
   1400531bb:	jmp    0x140053190
   1400531bd:	call   0x14004b980
   1400531c2:	mov    QWORD PTR [r12],rax
   1400531c6:	test   edi,edi
   1400531c8:	je     0x1400531d1
   1400531ca:	xor    ecx,ecx
   1400531cc:	call   0x140052d10
   1400531d1:	cmp    ebx,0x8
   1400531d4:	jne    0x1400531e3
   1400531d6:	mov    edx,DWORD PTR [rsi+0xb0]
   1400531dc:	mov    ecx,ebx
   1400531de:	call   r13
   1400531e1:	jmp    0x1400531e8
   1400531e3:	mov    ecx,ebx
   1400531e5:	call   r13
   1400531e8:	cmp    ebx,0x8
   1400531eb:	je     0x1400531f7
   1400531ed:	cmp    ebx,0xb
   1400531f0:	je     0x1400531f7
   1400531f2:	cmp    ebx,0x4
   1400531f5:	jne    0x14005320a
   1400531f7:	mov    QWORD PTR [rsi+0xa8],r15
   1400531fe:	cmp    ebx,0x8
   140053201:	jne    0x14005320a
   140053203:	mov    DWORD PTR [rsi+0xb0],r14d
   14005320a:	xor    eax,eax
   14005320c:	jmp    0x140053230
   14005320e:	call   0x140048680
   140053213:	mov    DWORD PTR [rax],0x16
   140053219:	mov    QWORD PTR [rsp+0x20],r14
   14005321e:	xor    r9d,r9d
   140053221:	xor    r8d,r8d
   140053224:	xor    edx,edx
   140053226:	xor    ecx,ecx
   140053228:	call   0x14004e100
   14005322d:	or     eax,0xffffffff
   140053230:	mov    rbx,QWORD PTR [rsp+0x78]
   140053235:	mov    rsi,QWORD PTR [rsp+0x80]
   14005323d:	add    rsp,0x40
   140053241:	pop    r15
   140053243:	pop    r14
   140053245:	pop    r13
   140053247:	pop    r12
   140053249:	pop    rdi
   14005324a:	ret    
   14005324b:	nop
   14005324c:	xor    BYTE PTR [rip+0x530ac00],al        # 0x14535de53
   140053253:	add    BYTE PTR [rdx+0x30],dh
   140053256:	add    eax,0x5308b00
   14005325b:	add    BYTE PTR [rcx+0x30],bl
   14005325e:	add    eax,0x5320e00
   140053263:	add    BYTE PTR [rax],al
   140053265:	add    eax,0x5020501
   14005326a:	add    DWORD PTR [rip+0x5050105],eax        # 0x1450a3375
   140053270:	add    eax,0x5050503
   140053275:	add    eax,0xcc020405
   14005327a:	int3   
   14005327b:	int3   
   14005327c:	int3   
   14005327d:	int3   
   14005327e:	int3   
   14005327f:	int3   
   140053280:	rex push rbp
   140053282:	sub    rsp,0x30
   140053286:	mov    rbp,rdx
   140053289:	cmp    DWORD PTR [rbp+0x70],0x0
   14005328d:	je     0x140053296
   14005328f:	xor    ecx,ecx
   140053291:	call   0x140052d10
   140053296:	add    rsp,0x30
   14005329a:	pop    rbp
   14005329b:	ret    
   14005329c:	int3   
   14005329d:	int3   
   14005329e:	int3   
   14005329f:	int3   
   1400532a0:	mov    QWORD PTR [rip+0x3a191],rcx        # 0x14008d438
   1400532a7:	ret    
   1400532a8:	int3   
   1400532a9:	int3   
   1400532aa:	int3   
   1400532ab:	int3   
   1400532ac:	int3   
   1400532ad:	int3   
   1400532ae:	int3   
   1400532af:	int3   
   1400532b0:	mov    QWORD PTR [rip+0x3a191],rcx        # 0x14008d448
   1400532b7:	ret    
   1400532b8:	int3   
   1400532b9:	int3   
   1400532ba:	int3   
   1400532bb:	int3   
   1400532bc:	int3   
   1400532bd:	int3   
   1400532be:	int3   
   1400532bf:	int3   
   1400532c0:	mov    QWORD PTR [rip+0x3a189],rcx        # 0x14008d450
   1400532c7:	ret    
   1400532c8:	int3   
   1400532c9:	int3   
   1400532ca:	int3   
   1400532cb:	int3   
   1400532cc:	int3   
   1400532cd:	int3   
   1400532ce:	int3   
   1400532cf:	int3   
   1400532d0:	sub    rsp,0x28
   1400532d4:	call   QWORD PTR [rip+0x11136]        # 0x140064410
   1400532da:	mov    eax,0x1
   1400532df:	add    rsp,0x28
   1400532e3:	ret    
   1400532e4:	int3   
   1400532e5:	int3   
   1400532e6:	int3   
   1400532e7:	int3   
   1400532e8:	int3   
   1400532e9:	int3   
   1400532ea:	int3   
   1400532eb:	int3   
   1400532ec:	int3   
   1400532ed:	int3   
   1400532ee:	int3   
   1400532ef:	int3   
   1400532f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400532f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400532fa:	mov    QWORD PTR [rsp+0x20],rdi
   1400532ff:	push   r12
   140053301:	sub    rsp,0x40
   140053305:	mov    esi,edx
   140053307:	mov    r12,rcx
   14005330a:	xor    edi,edi
   14005330c:	mov    DWORD PTR [rsp+0x60],edi
   140053310:	mov    rcx,QWORD PTR [rip+0x3a139]        # 0x14008d450
   140053317:	call   0x14004ba70
   14005331c:	mov    rbx,rax
   14005331f:	test   rax,rax
   140053322:	jne    0x14005339f
   140053324:	lea    rcx,[rsp+0x60]
   140053329:	call   0x140048260
   14005332e:	test   eax,eax
   140053330:	je     0x140053346
   140053332:	mov    QWORD PTR [rsp+0x20],rdi
   140053337:	xor    r9d,r9d
   14005333a:	xor    r8d,r8d
   14005333d:	xor    edx,edx
   14005333f:	xor    ecx,ecx
   140053341:	call   0x14004e060
   140053346:	cmp    DWORD PTR [rsp+0x60],0x1
   14005334b:	jne    0x140053356
   14005334d:	lea    rbx,[rip+0xffffffffffffff7c]        # 0x1400532d0
   140053354:	jmp    0x140053390
   140053356:	lea    rcx,[rip+0x1b3e3]        # 0x14006e740
   14005335d:	call   QWORD PTR [rip+0x110ed]        # 0x140064450
   140053363:	test   rax,rax
   140053366:	je     0x140053389
   140053368:	lea    rdx,[rip+0x1bb21]        # 0x14006ee90
   14005336f:	mov    rcx,rax
   140053372:	call   QWORD PTR [rip+0x11270]        # 0x1400645e8
   140053378:	mov    rbx,rax
   14005337b:	test   rax,rax
   14005337e:	jne    0x140053390
   140053380:	lea    rbx,[rip+0xffffffffffffff49]        # 0x1400532d0
   140053387:	jmp    0x140053390
   140053389:	lea    rbx,[rip+0xffffffffffffff40]        # 0x1400532d0
   140053390:	mov    rcx,rbx
   140053393:	call   0x14004b8b0
   140053398:	mov    QWORD PTR [rip+0x3a0b1],rax        # 0x14008d450
   14005339f:	mov    edx,esi
   1400533a1:	mov    rcx,r12
   1400533a4:	call   rbx
   1400533a6:	mov    edi,eax
   1400533a8:	mov    DWORD PTR [rsp+0x30],eax
   1400533ac:	jmp    0x1400533c6
   1400533ae:	cmp    eax,0xc0000017
   1400533b3:	jne    0x1400533c0
   1400533b5:	mov    ecx,0x8
   1400533ba:	call   QWORD PTR [rip+0x110e0]        # 0x1400644a0
   1400533c0:	xor    edi,edi
   1400533c2:	mov    DWORD PTR [rsp+0x30],edi
   1400533c6:	mov    eax,edi
   1400533c8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400533cd:	mov    rsi,QWORD PTR [rsp+0x58]
   1400533d2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400533d7:	add    rsp,0x40
   1400533db:	pop    r12
   1400533dd:	ret    
   1400533de:	int3   
   1400533df:	int3   
   1400533e0:	rex push rbp
   1400533e2:	push   rdi
   1400533e3:	sub    rsp,0x38
   1400533e7:	mov    rbp,rdx
   1400533ea:	mov    rax,QWORD PTR [rcx]
   1400533ed:	xor    edi,edi
   1400533ef:	cmp    DWORD PTR [rax],0xc0000017
   1400533f5:	sete   dil
   1400533f9:	mov    eax,edi
   1400533fb:	add    rsp,0x38
   1400533ff:	pop    rdi
   140053400:	pop    rbp
   140053401:	ret    
   140053402:	int3   
   140053403:	int3   
   140053404:	int3   
   140053405:	int3   
   140053406:	int3   
   140053407:	int3   
   140053408:	int3   
   140053409:	int3   
   14005340a:	int3   
   14005340b:	int3   
   14005340c:	int3   
   14005340d:	int3   
   14005340e:	int3   
   14005340f:	int3   
   140053410:	mov    QWORD PTR [rsp+0x8],rbx
   140053415:	push   rdi
   140053416:	sub    rsp,0x20
   14005341a:	test   cx,0xff00
   14005341f:	movzx  ebx,cx
   140053422:	jne    0x140053442
   140053424:	movzx  edi,cx
   140053427:	movzx  ecx,dil
   14005342b:	call   0x14005bdb0
   140053430:	test   eax,eax
   140053432:	je     0x140053442
   140053434:	mov    ax,di
   140053437:	mov    rbx,QWORD PTR [rsp+0x30]
   14005343c:	add    rsp,0x20
   140053440:	pop    rdi
   140053441:	ret    
   140053442:	movzx  eax,bx
   140053445:	mov    rbx,QWORD PTR [rsp+0x30]
   14005344a:	and    eax,0xffffffdf
   14005344d:	sub    eax,0x7
   140053450:	add    rsp,0x20
   140053454:	pop    rdi
   140053455:	ret    
   140053456:	int3   
   140053457:	int3   
   140053458:	int3   
   140053459:	int3   
   14005345a:	int3   
   14005345b:	int3   
   14005345c:	int3   
   14005345d:	int3   
   14005345e:	int3   
   14005345f:	int3   
   140053460:	rex push rbx
   140053462:	push   rbp
   140053463:	push   rsi
   140053464:	push   rdi
   140053465:	push   r12
   140053467:	push   r14
   140053469:	push   r15
   14005346b:	sub    rsp,0x3c0
   140053472:	mov    rax,QWORD PTR [rip+0x338f7]        # 0x140086d70
   140053479:	xor    rax,rsp
   14005347c:	mov    QWORD PTR [rsp+0x3a0],rax
   140053484:	xor    r14d,r14d
   140053487:	lea    rbp,[rsp+0xe0]
   14005348f:	xor    di,di
   140053492:	test   rdx,rdx
   140053495:	mov    ebx,r14d
   140053498:	mov    QWORD PTR [rsp+0xa8],r9
   1400534a0:	mov    rsi,rdx
   1400534a3:	mov    QWORD PTR [rsp+0x78],rdx
   1400534a8:	mov    r12,rcx
   1400534ab:	mov    DWORD PTR [rsp+0x3c],ebx
   1400534af:	mov    QWORD PTR [rsp+0x70],rcx
   1400534b4:	mov    QWORD PTR [rsp+0x48],rbp
   1400534b9:	mov    r15d,0x15e
   1400534bf:	mov    DWORD PTR [rsp+0x80],r14d
   1400534c7:	mov    QWORD PTR [rsp+0x58],r14
   1400534cc:	mov    DWORD PTR [rsp+0xb0],r14d
   1400534d4:	jne    0x1400534fd
   1400534d6:	call   0x140048680
   1400534db:	xor    r9d,r9d
   1400534de:	xor    r8d,r8d
   1400534e1:	xor    edx,edx
   1400534e3:	xor    ecx,ecx
   1400534e5:	mov    QWORD PTR [rsp+0x20],r14
   1400534ea:	mov    DWORD PTR [rax],0x16
   1400534f0:	call   0x14004e100
   1400534f5:	or     eax,0xffffffff
   1400534f8:	jmp    0x140054c61
   1400534fd:	test   rcx,rcx
   140053500:	je     0x1400534d6
   140053502:	test   r8,r8
   140053505:	mov    QWORD PTR [rsp+0x3b8],r13
   14005350d:	mov    BYTE PTR [rsp+0xd0],bl
   140053514:	jne    0x1400535ce
   14005351a:	call   0x14004bd60
   14005351f:	mov    r11,rax
   140053522:	mov    QWORD PTR [rsp+0xc8],rax
   14005352a:	mov    rax,QWORD PTR [rax+0xc0]
   140053531:	cmp    rax,QWORD PTR [rip+0x34368]        # 0x1400878a0
   140053538:	mov    QWORD PTR [rsp+0xb8],rax
   140053540:	mov    rcx,QWORD PTR [r11+0xb8]
   140053547:	mov    QWORD PTR [rsp+0xc0],rcx
   14005354f:	je     0x14005357d
   140053551:	mov    eax,DWORD PTR [r11+0xc8]
   140053558:	test   DWORD PTR [rip+0x341ca],eax        # 0x140087728
   14005355e:	jne    0x14005357d
   140053560:	call   0x14004f030
   140053565:	mov    r11,QWORD PTR [rsp+0xc8]
   14005356d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140053575:	mov    QWORD PTR [rsp+0xb8],rax
   14005357d:	cmp    rcx,QWORD PTR [rip+0x3409c]        # 0x140087620
   140053584:	je     0x1400535aa
   140053586:	mov    eax,DWORD PTR [r11+0xc8]
   14005358d:	test   DWORD PTR [rip+0x34195],eax        # 0x140087728
   140053593:	jne    0x1400535aa
   140053595:	call   0x14004e4e0
   14005359a:	mov    r11,QWORD PTR [rsp+0xc8]
   1400535a2:	mov    QWORD PTR [rsp+0xc0],rax
   1400535aa:	test   BYTE PTR [r11+0xc8],0x2
   1400535b2:	jne    0x1400535ec
   1400535b4:	or     DWORD PTR [r11+0xc8],0x2
   1400535bc:	mov    r11,QWORD PTR [rsp+0xc8]
   1400535c4:	mov    BYTE PTR [rsp+0xd0],0x1
   1400535cc:	jmp    0x1400535ec
   1400535ce:	mov    rax,QWORD PTR [r8]
   1400535d1:	lea    rcx,[rsp+0xb8]
   1400535d9:	mov    QWORD PTR [rcx],rax
   1400535dc:	mov    rax,QWORD PTR [r8+0x8]
   1400535e0:	mov    QWORD PTR [rcx+0x8],rax
   1400535e4:	mov    r11,QWORD PTR [rsp+0xc8]
   1400535ec:	xor    al,al
   1400535ee:	mov    ecx,r14d
   1400535f1:	mov    r13d,r14d
   1400535f4:	mov    BYTE PTR [rsp+0x42],al
   1400535f8:	movzx  eax,WORD PTR [rsi]
   1400535fb:	mov    DWORD PTR [rsp+0x34],r14d
   140053600:	test   ax,ax
   140053603:	mov    DWORD PTR [rsp+0x38],ecx
   140053607:	je     0x140054c45
   14005360d:	data16 xchg ax,ax
   140053610:	mov    dx,0x8
   140053614:	movzx  ecx,ax
   140053617:	call   0x140051ba0
   14005361c:	test   eax,eax
   14005361e:	je     0x14005367f
   140053620:	sub    r13d,0x1
   140053624:	add    r13d,0x1
   140053628:	mov    rcx,r12
   14005362b:	mov    DWORD PTR [rsp+0x34],r13d
   140053630:	call   0x1400523c0
   140053635:	cmp    ax,0xffff
   140053639:	movzx  ebx,ax
   14005363c:	je     0x140053660
   14005363e:	mov    dx,0x8
   140053642:	movzx  ecx,ax
   140053645:	call   0x140051ba0
   14005364a:	test   eax,eax
   14005364c:	jne    0x140053624
   14005364e:	mov    rdx,r12
   140053651:	movzx  ecx,bx
   140053654:	call   0x14005bfd0
   140053659:	data16 xchg ax,ax
   14005365c:	data16 data16 xchg ax,ax
   140053660:	movzx  ecx,WORD PTR [rsi+0x2]
   140053664:	add    rsi,0x2
   140053668:	mov    dx,0x8
   14005366c:	call   0x140051ba0
   140053671:	test   eax,eax
   140053673:	jne    0x140053660
   140053675:	mov    QWORD PTR [rsp+0x78],rsi
   14005367a:	jmp    0x1400548bf
   14005367f:	mov    r9,QWORD PTR [rsp+0x78]
   140053684:	cmp    WORD PTR [r9],0x25
   140053689:	jne    0x140054875
   14005368f:	xor    edx,edx
   140053691:	xor    r13d,r13d
   140053694:	xor    si,si
   140053697:	xor    r8d,r8d
   14005369a:	xor    r14d,r14d
   14005369d:	xor    bpl,bpl
   1400536a0:	mov    DWORD PTR [rsp+0xa4],r13d
   1400536a8:	mov    WORD PTR [rsp+0x90],si
   1400536b0:	mov    DWORD PTR [rsp+0x60],r13d
   1400536b5:	mov    r13b,0x1
   1400536b8:	lea    rsi,[rip+0xfffffffffffac941]        # 0x140000000
   1400536bf:	mov    DWORD PTR [rsp+0x68],r8d
   1400536c4:	mov    DWORD PTR [rsp+0x50],edx
   1400536c8:	mov    QWORD PTR [rsp+0x88],r14
   1400536d0:	mov    BYTE PTR [rsp+0x41],dl
   1400536d4:	mov    BYTE PTR [rsp+0x54],dl
   1400536d8:	mov    BYTE PTR [rsp+0x30],dl
   1400536dc:	mov    BYTE PTR [rsp+0xa0],dl
   1400536e3:	xor    r12b,r12b
   1400536e6:	data16 data16 xchg ax,ax
   1400536ea:	data16 xchg ax,ax
   1400536ed:	data16 xchg ax,ax
   1400536f0:	movzx  ebx,WORD PTR [r9+0x2]
   1400536f5:	add    r9,0x2
   1400536f9:	test   bx,0xff00
   1400536fe:	mov    QWORD PTR [rsp+0x78],r9
   140053703:	jne    0x14005374b
   140053705:	movzx  ecx,bl
   140053708:	call   0x14005bdb0
   14005370d:	test   eax,eax
   14005370f:	je     0x14005373d
   140053711:	mov    edx,DWORD PTR [rsp+0x50]
   140053715:	mov    r8d,DWORD PTR [rsp+0x68]
   14005371a:	mov    r9,QWORD PTR [rsp+0x78]
   14005371f:	movzx  ecx,BYTE PTR [rsp+0x30]
   140053724:	lea    eax,[rdx+rdx*4]
   140053727:	add    r8d,0x1
   14005372b:	lea    edx,[rbx+rax*2-0x30]
   14005372f:	mov    DWORD PTR [rsp+0x68],r8d
   140053734:	mov    DWORD PTR [rsp+0x50],edx
   140053738:	jmp    0x14005387b
   14005373d:	mov    edx,DWORD PTR [rsp+0x50]
   140053741:	mov    r8d,DWORD PTR [rsp+0x68]
   140053746:	mov    r9,QWORD PTR [rsp+0x78]
   14005374b:	add    ebx,0xffffffd6
   14005374e:	cmp    ebx,0x4d
   140053751:	ja     0x140053808
   140053757:	movsxd rax,ebx
   14005375a:	movzx  eax,BYTE PTR [rsi+rax*1+0x54ca4]
   140053762:	mov    ecx,DWORD PTR [rsi+rax*4+0x54c84]
   140053769:	add    rcx,rsi
   14005376c:	jmp    rcx
   14005376e:	mov    cl,BYTE PTR [rsp+0x30]
   140053772:	add    r13b,0xff
   140053776:	add    r12b,0xff
   14005377a:	jmp    0x14005387b
   14005377f:	movzx  eax,WORD PTR [r9+0x2]
   140053784:	cmp    ax,0x36
   140053788:	jne    0x1400537b7
   14005378a:	cmp    WORD PTR [r9+0x4],0x34
   140053790:	lea    rcx,[r9+0x4]
   140053794:	jne    0x1400537b7
   140053796:	mov    r9,rcx
   140053799:	mov    QWORD PTR [rsp+0x78],rcx
   14005379e:	mov    cl,BYTE PTR [rsp+0x30]
   1400537a2:	add    r14d,0x1
   1400537a6:	mov    QWORD PTR [rsp+0x98],0x0
   1400537b2:	jmp    0x14005387b
   1400537b7:	cmp    ax,0x33
   1400537bb:	jne    0x1400537da
   1400537bd:	cmp    WORD PTR [r9+0x4],0x32
   1400537c3:	lea    rcx,[r9+0x4]
   1400537c7:	jne    0x1400537da
   1400537c9:	mov    r9,rcx
   1400537cc:	mov    QWORD PTR [rsp+0x78],rcx
   1400537d1:	mov    cl,BYTE PTR [rsp+0x30]
   1400537d5:	jmp    0x14005387b
   1400537da:	cmp    ax,0x64
   1400537de:	je     0x140053812
   1400537e0:	cmp    ax,0x69
   1400537e4:	je     0x140053812
   1400537e6:	cmp    ax,0x6f
   1400537ea:	je     0x140053812
   1400537ec:	cmp    ax,0x78
   1400537f0:	je     0x140053812
   1400537f2:	cmp    ax,0x58
   1400537f6:	je     0x140053812
   1400537f8:	add    r14d,0x1
   1400537fc:	mov    QWORD PTR [rsp+0x98],0x0
   140053808:	mov    cl,BYTE PTR [rsp+0x30]
   14005380c:	add    bpl,0x1
   140053810:	jmp    0x14005387b
   140053812:	mov    cl,BYTE PTR [rsp+0x30]
   140053816:	add    r14d,0x1
   14005381a:	mov    QWORD PTR [rsp+0x98],0x0
   140053826:	jmp    0x14005387b
   140053828:	mov    cl,BYTE PTR [rsp+0x30]
   14005382c:	add    r13b,0x1
   140053830:	jmp    0x14005387b
   140053832:	cmp    WORD PTR [r9+0x2],0x6c
   140053838:	lea    rax,[r9+0x2]
   14005383c:	jne    0x14005385c
   14005383e:	mov    cl,BYTE PTR [rsp+0x30]
   140053842:	mov    r9,rax
   140053845:	mov    QWORD PTR [rsp+0x78],rax
   14005384a:	add    r14d,0x1
   14005384e:	mov    QWORD PTR [rsp+0x98],0x0
   14005385a:	jmp    0x14005387b
   14005385c:	add    r13b,0x1
   140053860:	mov    cl,BYTE PTR [rsp+0x30]
   140053864:	add    r12b,0x1
   140053868:	jmp    0x14005387b
   14005386a:	mov    cl,BYTE PTR [rsp+0x30]
   14005386e:	add    cl,0x1
   140053871:	mov    BYTE PTR [rsp+0x30],cl
   140053875:	jmp    0x14005387b
   140053877:	mov    cl,BYTE PTR [rsp+0x30]
   14005387b:	test   bpl,bpl
   14005387e:	je     0x1400536f0
   140053884:	test   cl,cl
   140053886:	movzx  esi,WORD PTR [rsp+0x90]
   14005388e:	mov    BYTE PTR [rsp+0x40],r13b
   140053893:	mov    r13d,DWORD PTR [rsp+0xa4]
   14005389b:	mov    DWORD PTR [rsp+0x64],r14d
   1400538a0:	mov    r14,QWORD PTR [rsp+0x88]
   1400538a8:	jne    0x1400538d4
   1400538aa:	mov    rax,QWORD PTR [rsp+0xa8]
   1400538b2:	mov    QWORD PTR [rsp+0xd8],rax
   1400538ba:	add    rax,0x8
   1400538be:	mov    QWORD PTR [rsp+0xa8],rax
   1400538c6:	mov    rax,QWORD PTR [rax-0x8]
   1400538ca:	mov    QWORD PTR [rsp+0x88],rax
   1400538d2:	jmp    0x1400538dc
   1400538d4:	mov    QWORD PTR [rsp+0x88],r14
   1400538dc:	xor    bl,bl
   1400538de:	test   r12b,r12b
   1400538e1:	jne    0x1400538fb
   1400538e3:	movzx  eax,WORD PTR [r9]
   1400538e7:	cmp    ax,0x53
   1400538eb:	je     0x1400538f8
   1400538ed:	cmp    ax,0x43
   1400538f1:	je     0x1400538f8
   1400538f3:	mov    r12b,0x1
   1400538f6:	jmp    0x1400538fb
   1400538f8:	mov    r12b,0xff
   1400538fb:	movzx  ebp,WORD PTR [r9]
   1400538ff:	or     ebp,0x20
   140053902:	cmp    ebp,0x6e
   140053905:	mov    DWORD PTR [rsp+0xa4],ebp
   14005390c:	je     0x140053985
   14005390e:	cmp    ebp,0x63
   140053911:	je     0x140053956
   140053913:	cmp    ebp,0x7b
   140053916:	je     0x140053956
   140053918:	mov    ebp,DWORD PTR [rsp+0x34]
   14005391c:	mov    rbx,QWORD PTR [rsp+0x70]
   140053921:	mov    rcx,rbx
   140053924:	add    ebp,0x1
   140053927:	call   0x1400523c0
   14005392c:	cmp    ax,0xffff
   140053930:	movzx  edi,ax
   140053933:	je     0x140053945
   140053935:	mov    dx,0x8
   140053939:	movzx  ecx,ax
   14005393c:	call   0x140051ba0
   140053941:	test   eax,eax
   140053943:	jne    0x140053921
   140053945:	mov    DWORD PTR [rsp+0x34],ebp
   140053949:	mov    ebp,DWORD PTR [rsp+0xa4]
   140053950:	movzx  ebx,r14b
   140053954:	jmp    0x140053968
   140053956:	mov    rcx,QWORD PTR [rsp+0x70]
   14005395b:	add    DWORD PTR [rsp+0x34],0x1
   140053960:	call   0x1400523c0
   140053965:	mov    di,ax
   140053968:	cmp    di,0xffff
   14005396d:	je     0x140054a6e
   140053973:	mov    edx,DWORD PTR [rsp+0x50]
   140053977:	mov    r8d,DWORD PTR [rsp+0x68]
   14005397c:	mov    r9,QWORD PTR [rsp+0x78]
   140053981:	mov    cl,BYTE PTR [rsp+0x30]
   140053985:	test   r8d,r8d
   140053988:	je     0x140053992
   14005398a:	test   edx,edx
   14005398c:	je     0x1400548de
   140053992:	test   cl,cl
   140053994:	jne    0x140053a01
   140053996:	cmp    ebp,0x63
   140053999:	je     0x1400539a5
   14005399b:	cmp    ebp,0x73
   14005399e:	je     0x1400539a5
   1400539a0:	cmp    ebp,0x7b
   1400539a3:	jne    0x1400539ef
   1400539a5:	mov    r10,QWORD PTR [rsp+0xd8]
   1400539ad:	mov    rax,QWORD PTR [r10]
   1400539b0:	add    r10,0x8
   1400539b4:	mov    r14d,DWORD PTR [r10]
   1400539b7:	mov    r11,r10
   1400539ba:	mov    QWORD PTR [rsp+0xd8],r10
   1400539c2:	add    r10,0x8
   1400539c6:	cmp    r14,0x1
   1400539ca:	mov    QWORD PTR [rsp+0x88],rax
   1400539d2:	mov    QWORD PTR [rsp+0xa8],r10
   1400539da:	jae    0x140053a11
   1400539dc:	test   r12b,r12b
   1400539df:	jle    0x14005490d
   1400539e5:	mov    WORD PTR [rax],0x0
   1400539ea:	jmp    0x140054910
   1400539ef:	mov    r10,QWORD PTR [rsp+0xa8]
   1400539f7:	mov    r11,QWORD PTR [rsp+0xd8]
   1400539ff:	jmp    0x140053a11
   140053a01:	mov    r10,QWORD PTR [rsp+0xa8]
   140053a09:	mov    r11,QWORD PTR [rsp+0xd8]
   140053a11:	lea    eax,[rbp-0x63]
   140053a14:	cmp    eax,0x18
   140053a17:	ja     0x1400547ff
   140053a1d:	cdqe   
   140053a1f:	lea    rcx,[rip+0xfffffffffffac5da]        # 0x140000000
   140053a26:	mov    ecx,DWORD PTR [rcx+rax*4+0x54cf4]
   140053a2d:	lea    rax,[rip+0xfffffffffffac5cc]        # 0x140000000
   140053a34:	add    rcx,rax
   140053a37:	jmp    rcx
   140053a39:	test   r8d,r8d
   140053a3c:	jne    0x140053a4d
   140053a3e:	add    edx,0x1
   140053a41:	mov    DWORD PTR [rsp+0x68],0x1
   140053a49:	mov    DWORD PTR [rsp+0x50],edx
   140053a4d:	test   r12b,r12b
   140053a50:	jle    0x140053bf5
   140053a56:	movzx  r12d,BYTE PTR [rsp+0x41]
   140053a5c:	mov    r13b,0x1
   140053a5f:	jmp    0x140053c02
   140053a64:	test   r12b,r12b
   140053a67:	jle    0x140053be6
   140053a6d:	mov    r12b,BYTE PTR [rsp+0x41]
   140053a72:	mov    r13b,0x1
   140053a75:	jmp    0x140053c02
   140053a7a:	mov    r13d,DWORD PTR [rsp+0xa0]
   140053a82:	test   r12b,r12b
   140053a85:	mov    eax,0x1
   140053a8a:	movzx  r13d,r13b
   140053a8e:	cmovg  r13d,eax
   140053a92:	add    r9,0x2
   140053a96:	cmp    WORD PTR [r9],0x5e
   140053a9b:	mov    QWORD PTR [rsp+0x78],r9
   140053aa0:	mov    rbx,r9
   140053aa3:	jne    0x140053aae
   140053aa5:	lea    rbx,[r9+0x2]
   140053aa9:	mov    r12b,0xff
   140053aac:	jmp    0x140053ab3
   140053aae:	mov    r12b,BYTE PTR [rsp+0x41]
   140053ab3:	mov    r11,QWORD PTR [rsp+0x58]
   140053ab8:	test   r11,r11
   140053abb:	jne    0x140053ae4
   140053abd:	mov    ecx,0x2000
   140053ac2:	call   0x14004de20
   140053ac7:	test   rax,rax
   140053aca:	mov    r11,rax
   140053acd:	mov    QWORD PTR [rsp+0x58],rax
   140053ad2:	je     0x140054a44
   140053ad8:	mov    eax,0x1
   140053add:	mov    DWORD PTR [rsp+0xb0],eax
   140053ae4:	xor    edx,edx
   140053ae6:	mov    r8d,0x2000
   140053aec:	mov    rcx,r11
   140053aef:	call   0x140047720
   140053af4:	cmp    ebp,0x7b
   140053af7:	jne    0x140053b13
   140053af9:	cmp    WORD PTR [rbx],0x5d
   140053afd:	jne    0x140053b1a
   140053aff:	mov    r11,QWORD PTR [rsp+0x58]
   140053b04:	mov    si,0x5d
   140053b08:	add    rbx,0x2
   140053b0c:	mov    BYTE PTR [r11+0xb],0x20
   140053b11:	jmp    0x140053b1f
   140053b13:	mov    r11,QWORD PTR [rsp+0x58]
   140053b18:	jmp    0x140053b1f
   140053b1a:	mov    r11,QWORD PTR [rsp+0x58]
   140053b1f:	movzx  ecx,WORD PTR [rbx]
   140053b22:	cmp    cx,0x5d
   140053b26:	je     0x140053bc9
   140053b2c:	data16 data16 xchg ax,ax
   140053b30:	add    rbx,0x2
   140053b34:	cmp    cx,0x2d
   140053b38:	jne    0x140053b9e
   140053b3a:	test   si,si
   140053b3d:	je     0x140053b9e
   140053b3f:	movzx  eax,WORD PTR [rbx]
   140053b42:	cmp    ax,0x5d
   140053b46:	je     0x140053b9e
   140053b48:	add    rbx,0x2
   140053b4c:	cmp    si,ax
   140053b4f:	jae    0x140053b57
   140053b51:	movzx  r10d,ax
   140053b55:	jmp    0x140053b5e
   140053b57:	mov    r10w,si
   140053b5b:	mov    si,ax
   140053b5e:	cmp    si,r10w
   140053b62:	ja     0x140053b99
   140053b64:	movzx  r9d,si
   140053b68:	data16 data16 xchg ax,ax
   140053b6c:	data16 data16 xchg ax,ax
   140053b70:	mov    al,sil
   140053b73:	mov    r8,r9
   140053b76:	mov    edx,0x1
   140053b7b:	and    eax,0x7
   140053b7e:	shr    r8,0x3
   140053b82:	add    si,0x1
   140053b86:	movzx  ecx,al
   140053b89:	add    r9,0x1
   140053b8d:	shl    dl,cl
   140053b8f:	or     BYTE PTR [r8+r11*1],dl
   140053b93:	cmp    si,r10w
   140053b97:	jbe    0x140053b70
   140053b99:	xor    si,si
   140053b9c:	jmp    0x140053bbc
   140053b9e:	mov    al,cl
   140053ba0:	movzx  r8d,cx
   140053ba4:	mov    si,cx
   140053ba7:	and    eax,0x7
   140053baa:	mov    edx,0x1
   140053baf:	shr    r8,0x3
   140053bb3:	movzx  ecx,al
   140053bb6:	shl    dl,cl
   140053bb8:	or     BYTE PTR [r8+r11*1],dl
   140053bbc:	mov    cx,WORD PTR [rbx]
   140053bbf:	cmp    cx,0x5d
   140053bc3:	jne    0x140053b30
   140053bc9:	cmp    WORD PTR [rbx],0x0
   140053bcd:	je     0x140054a31
   140053bd3:	mov    rax,QWORD PTR [rsp+0x78]
   140053bd8:	cmp    ebp,0x7b
   140053bdb:	cmove  rax,rbx
   140053bdf:	mov    QWORD PTR [rsp+0x78],rax
   140053be4:	jmp    0x140053c02
   140053be6:	mov    r13d,DWORD PTR [rsp+0xa0]
   140053bee:	mov    r12b,BYTE PTR [rsp+0x41]
   140053bf3:	jmp    0x140053c02
   140053bf5:	mov    r13d,DWORD PTR [rsp+0xa0]
   140053bfd:	mov    r12b,BYTE PTR [rsp+0x41]
   140053c02:	mov    esi,DWORD PTR [rsp+0x34]
   140053c06:	mov    rbx,QWORD PTR [rsp+0x88]
   140053c0e:	sub    esi,0x1
   140053c11:	cmp    di,0xffff
   140053c16:	mov    DWORD PTR [rsp+0x34],esi
   140053c1a:	je     0x140053c29
   140053c1c:	mov    rdx,QWORD PTR [rsp+0x70]
   140053c21:	movzx  ecx,di
   140053c24:	call   0x14005bfd0
   140053c29:	cmp    ebp,0x63
   140053c2c:	je     0x140053c32
   140053c2e:	sub    r14,0x1
   140053c32:	cmp    DWORD PTR [rsp+0x68],0x0
   140053c37:	je     0x140053c4a
   140053c39:	mov    ecx,DWORD PTR [rsp+0x50]
   140053c3d:	mov    eax,ecx
   140053c3f:	sub    ecx,0x1
   140053c42:	test   eax,eax
   140053c44:	mov    DWORD PTR [rsp+0x50],ecx
   140053c48:	je     0x140053ca7
   140053c4a:	mov    rcx,QWORD PTR [rsp+0x70]
   140053c4f:	add    esi,0x1
   140053c52:	mov    DWORD PTR [rsp+0x34],esi
   140053c56:	call   0x1400523c0
   140053c5b:	cmp    ax,0xffff
   140053c5f:	mov    di,ax
   140053c62:	je     0x140053c8c
   140053c64:	cmp    ebp,0x63
   140053c67:	je     0x140053d23
   140053c6d:	cmp    ebp,0x73
   140053c70:	jne    0x140053cf7
   140053c76:	cmp    ax,0x9
   140053c7a:	jb     0x140053c82
   140053c7c:	cmp    ax,0xd
   140053c80:	jbe    0x140053c8c
   140053c82:	cmp    di,0x20
   140053c86:	jne    0x140053d23
   140053c8c:	sub    esi,0x1
   140053c8f:	cmp    di,0xffff
   140053c94:	mov    DWORD PTR [rsp+0x34],esi
   140053c98:	je     0x140053ca7
   140053c9a:	mov    rdx,QWORD PTR [rsp+0x70]
   140053c9f:	movzx  ecx,di
   140053ca2:	call   0x14005bfd0
   140053ca7:	mov    rax,QWORD PTR [rsp+0x88]
   140053caf:	cmp    rbx,rax
   140053cb2:	je     0x140054a19
   140053cb8:	cmp    BYTE PTR [rsp+0x30],0x0
   140053cbd:	jne    0x140054845
   140053cc3:	mov    r12d,DWORD PTR [rsp+0x38]
   140053cc8:	add    r12d,0x1
   140053ccc:	cmp    ebp,0x63
   140053ccf:	mov    DWORD PTR [rsp+0x38],r12d
   140053cd4:	je     0x140054851
   140053cda:	test   r13b,r13b
   140053cdd:	je     0x140053da9
   140053ce3:	mov    rbp,QWORD PTR [rsp+0x48]
   140053ce8:	mov    r13d,DWORD PTR [rsp+0x34]
   140053ced:	mov    WORD PTR [rax],0x0
   140053cf2:	jmp    0x14005485b
   140053cf7:	cmp    ebp,0x7b
   140053cfa:	jne    0x140053c8c
   140053cfc:	mov    rcx,QWORD PTR [rsp+0x58]
   140053d01:	mov    al,dil
   140053d04:	and    eax,0x7
   140053d07:	mov    edx,eax
   140053d09:	movzx  eax,di
   140053d0c:	shr    rax,0x3
   140053d10:	movsx  ecx,BYTE PTR [rax+rcx*1]
   140053d14:	movsx  eax,r12b
   140053d18:	xor    ecx,eax
   140053d1a:	bt     ecx,edx
   140053d1d:	jae    0x140053c8c
   140053d23:	cmp    BYTE PTR [rsp+0x30],0x0
   140053d28:	jne    0x140053da0
   140053d2a:	test   r14,r14
   140053d2d:	je     0x140054933
   140053d33:	test   r13b,r13b
   140053d36:	je     0x140053d59
   140053d38:	mov    rcx,QWORD PTR [rsp+0x88]
   140053d40:	add    rcx,0x2
   140053d44:	sub    r14,0x1
   140053d48:	mov    WORD PTR [rcx-0x2],di
   140053d4c:	mov    QWORD PTR [rsp+0x88],rcx
   140053d54:	jmp    0x140053c32
   140053d59:	mov    rdx,QWORD PTR [rsp+0x88]
   140053d61:	lea    rcx,[rsp+0x60]
   140053d66:	movzx  r9d,di
   140053d6a:	mov    r8,r14
   140053d6d:	mov    DWORD PTR [rsp+0x60],0x0
   140053d75:	call   0x14005ca00
   140053d7a:	cmp    eax,0x22
   140053d7d:	je     0x140054933
   140053d83:	movsxd rax,DWORD PTR [rsp+0x60]
   140053d88:	test   eax,eax
   140053d8a:	jle    0x140053c32
   140053d90:	add    QWORD PTR [rsp+0x88],rax
   140053d98:	sub    r14,rax
   140053d9b:	jmp    0x140053c32
   140053da0:	add    rbx,0x2
   140053da4:	jmp    0x140053c32
   140053da9:	mov    rbp,QWORD PTR [rsp+0x48]
   140053dae:	mov    r13d,DWORD PTR [rsp+0x34]
   140053db3:	mov    BYTE PTR [rax],0x0
   140053db6:	jmp    0x14005485b
   140053dbb:	mov    ebp,0x64
   140053dc0:	cmp    di,0x2d
   140053dc4:	jne    0x140053dcb
   140053dc6:	mov    r14b,0x1
   140053dc9:	jmp    0x140053dd7
   140053dcb:	cmp    di,0x2b
   140053dcf:	jne    0x140053e13
   140053dd1:	movzx  r14d,BYTE PTR [rsp+0x54]
   140053dd7:	sub    edx,0x1
   140053dda:	mov    DWORD PTR [rsp+0x50],edx
   140053dde:	jne    0x140053df3
   140053de0:	test   r8d,r8d
   140053de3:	je     0x140053df3
   140053de5:	mov    r12d,DWORD PTR [rsp+0x34]
   140053dea:	mov    rsi,QWORD PTR [rsp+0x70]
   140053def:	mov    bl,0x1
   140053df1:	jmp    0x140053e22
   140053df3:	mov    r12d,DWORD PTR [rsp+0x34]
   140053df8:	mov    rsi,QWORD PTR [rsp+0x70]
   140053dfd:	add    r12d,0x1
   140053e01:	mov    rcx,rsi
   140053e04:	mov    DWORD PTR [rsp+0x34],r12d
   140053e09:	call   0x1400523c0
   140053e0e:	mov    di,ax
   140053e11:	jmp    0x140053e22
   140053e13:	mov    r14b,BYTE PTR [rsp+0x54]
   140053e18:	mov    r12d,DWORD PTR [rsp+0x34]
   140053e1d:	mov    rsi,QWORD PTR [rsp+0x70]
   140053e22:	cmp    di,0x30
   140053e26:	jne    0x140053f50
   140053e2c:	add    r12d,0x1
   140053e30:	mov    rcx,rsi
   140053e33:	mov    DWORD PTR [rsp+0x34],r12d
   140053e38:	call   0x1400523c0
   140053e3d:	cmp    ax,0x78
   140053e41:	mov    di,ax
   140053e44:	je     0x140053ea7
   140053e46:	cmp    ax,0x58
   140053e4a:	je     0x140053ea7
   140053e4c:	cmp    ebp,0x78
   140053e4f:	mov    eax,0x1
   140053e54:	mov    esi,eax
   140053e56:	je     0x140053e7d
   140053e58:	cmp    DWORD PTR [rsp+0x68],0x0
   140053e5d:	je     0x140053e6e
   140053e5f:	mov    eax,DWORD PTR [rsp+0x50]
   140053e63:	sub    eax,esi
   140053e65:	mov    DWORD PTR [rsp+0x50],eax
   140053e69:	jne    0x140053e6e
   140053e6b:	add    bl,sil
   140053e6e:	mov    r12d,DWORD PTR [rsp+0x64]
   140053e73:	mov    ebp,0x6f
   140053e78:	jmp    0x140053f62
   140053e7d:	sub    r12d,eax
   140053e80:	cmp    di,0xffff
   140053e85:	mov    DWORD PTR [rsp+0x34],r12d
   140053e8a:	je     0x140053e99
   140053e8c:	mov    rdx,QWORD PTR [rsp+0x70]
   140053e91:	movzx  ecx,di
   140053e94:	call   0x14005bfd0
   140053e99:	mov    r12d,DWORD PTR [rsp+0x64]
   140053e9e:	mov    di,0x30
   140053ea2:	jmp    0x140053f62
   140053ea7:	add    r12d,0x1
   140053eab:	mov    rcx,rsi
   140053eae:	mov    DWORD PTR [rsp+0x34],r12d
   140053eb3:	call   0x1400523c0
   140053eb8:	cmp    DWORD PTR [rsp+0x68],0x0
   140053ebd:	mov    di,ax
   140053ec0:	je     0x140053ed5
   140053ec2:	mov    eax,DWORD PTR [rsp+0x50]
   140053ec6:	sub    eax,0x2
   140053ec9:	cmp    eax,0x1
   140053ecc:	mov    DWORD PTR [rsp+0x50],eax
   140053ed0:	jge    0x140053ed5
   140053ed2:	add    bl,0x1
   140053ed5:	mov    esi,DWORD PTR [rsp+0x60]
   140053ed9:	mov    r12d,DWORD PTR [rsp+0x64]
   140053ede:	mov    ebp,0x78
   140053ee3:	jmp    0x140053f62
   140053ee5:	mov    r12d,DWORD PTR [rsp+0x64]
   140053eea:	mov    BYTE PTR [rsp+0x40],0x1
   140053eef:	mov    QWORD PTR [rsp+0x98],0x0
   140053efb:	add    r12d,0x1
   140053eff:	jmp    0x140053f06
   140053f01:	mov    r12d,DWORD PTR [rsp+0x64]
   140053f06:	cmp    di,0x2d
   140053f0a:	jne    0x140053f11
   140053f0c:	mov    r14b,0x1
   140053f0f:	jmp    0x140053f1c
   140053f11:	cmp    di,0x2b
   140053f15:	jne    0x140053f5b
   140053f17:	mov    r14b,BYTE PTR [rsp+0x54]
   140053f1c:	sub    edx,0x1
   140053f1f:	mov    DWORD PTR [rsp+0x50],edx
   140053f23:	jne    0x140053f32
   140053f25:	test   r8d,r8d
   140053f28:	je     0x140053f32
   140053f2a:	mov    esi,DWORD PTR [rsp+0x60]
   140053f2e:	mov    bl,0x1
   140053f30:	jmp    0x140053f62
   140053f32:	mov    eax,DWORD PTR [rsp+0x34]
   140053f36:	mov    rcx,QWORD PTR [rsp+0x70]
   140053f3b:	add    eax,0x1
   140053f3e:	mov    DWORD PTR [rsp+0x34],eax
   140053f42:	call   0x1400523c0
   140053f47:	mov    esi,DWORD PTR [rsp+0x60]
   140053f4b:	mov    di,ax
   140053f4e:	jmp    0x140053f62
   140053f50:	mov    esi,DWORD PTR [rsp+0x60]
   140053f54:	mov    r12d,DWORD PTR [rsp+0x64]
   140053f59:	jmp    0x140053f62
   140053f5b:	mov    esi,DWORD PTR [rsp+0x60]
   140053f5f:	mov    r14b,sil
   140053f62:	test   r12d,r12d
   140053f65:	je     0x140054088
   140053f6b:	test   bl,bl
   140053f6d:	jne    0x14005405d
   140053f73:	mov    ebx,DWORD PTR [rsp+0x34]
   140053f77:	cmp    ebp,0x78
   140053f7a:	je     0x140053fcb
   140053f7c:	cmp    ebp,0x70
   140053f7f:	je     0x140053fcb
   140053f81:	test   di,0xff00
   140053f86:	jne    0x140054038
   140053f8c:	movzx  ecx,dil
   140053f90:	call   0x14005bdb0
   140053f95:	test   eax,eax
   140053f97:	je     0x140054038
   140053f9d:	cmp    ebp,0x6f
   140053fa0:	jne    0x140053fba
   140053fa2:	cmp    di,0x38
   140053fa6:	jae    0x140054038
   140053fac:	mov    rcx,QWORD PTR [rsp+0x98]
   140053fb4:	shl    rcx,0x3
   140053fb8:	jmp    0x140053ffb
   140053fba:	mov    rcx,QWORD PTR [rsp+0x98]
   140053fc2:	lea    rcx,[rcx+rcx*4]
   140053fc6:	add    rcx,rcx
   140053fc9:	jmp    0x140053ffb
   140053fcb:	test   di,0xff00
   140053fd0:	jne    0x140054038
   140053fd2:	movzx  ecx,dil
   140053fd6:	call   0x14005bec0
   140053fdb:	test   eax,eax
   140053fdd:	je     0x140054038
   140053fdf:	shl    QWORD PTR [rsp+0x98],0x4
   140053fe8:	movzx  ecx,di
   140053feb:	call   0x140053410
   140053ff0:	mov    rcx,QWORD PTR [rsp+0x98]
   140053ff8:	mov    di,ax
   140053ffb:	movzx  eax,di
   140053ffe:	add    esi,0x1
   140054001:	sub    eax,0x30
   140054004:	cdqe   
   140054006:	add    rcx,rax
   140054009:	cmp    DWORD PTR [rsp+0x68],0x0
   14005400e:	mov    QWORD PTR [rsp+0x98],rcx
   140054016:	je     0x14005401f
   140054018:	sub    DWORD PTR [rsp+0x50],0x1
   14005401d:	je     0x14005406f
   14005401f:	mov    rcx,QWORD PTR [rsp+0x70]
   140054024:	add    ebx,0x1
   140054027:	mov    DWORD PTR [rsp+0x34],ebx
   14005402b:	call   0x1400523c0
   140054030:	mov    di,ax
   140054033:	jmp    0x140053f77
   140054038:	sub    ebx,0x1
   14005403b:	cmp    di,0xffff
   140054040:	mov    DWORD PTR [rsp+0x34],ebx
   140054044:	je     0x140054067
   140054046:	mov    rdx,QWORD PTR [rsp+0x70]
   14005404b:	movzx  ecx,di
   14005404e:	call   0x14005bfd0
   140054053:	mov    rcx,QWORD PTR [rsp+0x98]
   14005405b:	jmp    0x14005406f
   14005405d:	mov    rcx,QWORD PTR [rsp+0x98]
   140054065:	jmp    0x14005406f
   140054067:	mov    rcx,QWORD PTR [rsp+0x98]
   14005406f:	test   r14b,r14b
   140054072:	je     0x14005414a
   140054078:	neg    rcx
   14005407b:	mov    QWORD PTR [rsp+0x98],rcx
   140054083:	jmp    0x14005414a
   140054088:	test   bl,bl
   14005408a:	jne    0x140054142
   140054090:	mov    ebx,DWORD PTR [rsp+0x34]
   140054094:	cmp    ebp,0x78
   140054097:	je     0x1400540d2
   140054099:	cmp    ebp,0x70
   14005409c:	je     0x1400540d2
   14005409e:	test   di,0xff00
   1400540a3:	jne    0x140054127
   1400540a9:	movzx  ecx,dil
   1400540ad:	call   0x14005bdb0
   1400540b2:	test   eax,eax
   1400540b4:	je     0x140054127
   1400540b6:	cmp    ebp,0x6f
   1400540b9:	jne    0x1400540c7
   1400540bb:	cmp    di,0x38
   1400540bf:	jae    0x140054127
   1400540c1:	shl    r13d,0x3
   1400540c5:	jmp    0x1400540f5
   1400540c7:	lea    eax,[r13+r13*4+0x0]
   1400540cc:	lea    r13d,[rax+rax*1]
   1400540d0:	jmp    0x1400540f5
   1400540d2:	test   di,0xff00
   1400540d7:	jne    0x140054127
   1400540d9:	movzx  ecx,dil
   1400540dd:	call   0x14005bec0
   1400540e2:	test   eax,eax
   1400540e4:	je     0x140054127
   1400540e6:	movzx  ecx,di
   1400540e9:	shl    r13d,0x4
   1400540ed:	call   0x140053410
   1400540f2:	mov    di,ax
   1400540f5:	movzx  eax,di
   1400540f8:	add    esi,0x1
   1400540fb:	cmp    DWORD PTR [rsp+0x68],0x0
   140054100:	lea    r13d,[r13+rax*1-0x30]
   140054105:	je     0x14005410e
   140054107:	sub    DWORD PTR [rsp+0x50],0x1
   14005410c:	je     0x140054142
   14005410e:	mov    rcx,QWORD PTR [rsp+0x70]
   140054113:	add    ebx,0x1
   140054116:	mov    DWORD PTR [rsp+0x34],ebx
   14005411a:	call   0x1400523c0
   14005411f:	mov    di,ax
   140054122:	jmp    0x140054094
   140054127:	sub    ebx,0x1
   14005412a:	cmp    di,0xffff
   14005412f:	mov    DWORD PTR [rsp+0x34],ebx
   140054133:	je     0x140054142
   140054135:	mov    rdx,QWORD PTR [rsp+0x70]
   14005413a:	movzx  ecx,di
   14005413d:	call   0x14005bfd0
   140054142:	test   r14b,r14b
   140054145:	je     0x14005414a
   140054147:	neg    r13d
   14005414a:	cmp    ebp,0x46
   14005414d:	je     0x1400549e9
   140054153:	test   esi,esi
   140054155:	je     0x140054a01
   14005415b:	cmp    BYTE PTR [rsp+0x30],0x0
   140054160:	jne    0x140054839
   140054166:	add    DWORD PTR [rsp+0x38],0x1
   14005416b:	jmp    0x140054184
   14005416d:	cmp    BYTE PTR [rsp+0x30],0x0
   140054172:	mov    eax,DWORD PTR [rsp+0x34]
   140054176:	mov    r13d,eax
   140054179:	jne    0x14005482f
   14005417f:	mov    r12d,DWORD PTR [rsp+0x64]
   140054184:	test   r12d,r12d
   140054187:	je     0x1400541ab
   140054189:	mov    rax,QWORD PTR [rsp+0x88]
   140054191:	mov    rcx,QWORD PTR [rsp+0x98]
   140054199:	mov    rbp,QWORD PTR [rsp+0x48]
   14005419e:	mov    r13d,DWORD PTR [rsp+0x34]
   1400541a3:	mov    QWORD PTR [rax],rcx
   1400541a6:	jmp    0x14005485b
   1400541ab:	cmp    BYTE PTR [rsp+0x40],0x0
   1400541b0:	je     0x1400541cc
   1400541b2:	mov    rax,QWORD PTR [rsp+0x88]
   1400541ba:	mov    rbp,QWORD PTR [rsp+0x48]
   1400541bf:	mov    DWORD PTR [rax],r13d
   1400541c2:	mov    r13d,DWORD PTR [rsp+0x34]
   1400541c7:	jmp    0x14005485b
   1400541cc:	mov    rax,QWORD PTR [rsp+0x88]
   1400541d4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400541d9:	mov    WORD PTR [rax],r13w
   1400541dd:	mov    r13d,DWORD PTR [rsp+0x34]
   1400541e2:	jmp    0x14005485b
   1400541e7:	xor    ebx,ebx
   1400541e9:	cmp    di,0x2d
   1400541ed:	jne    0x1400541fe
   1400541ef:	mov    rax,QWORD PTR [rsp+0x48]
   1400541f4:	mov    ebx,0x1
   1400541f9:	mov    WORD PTR [rax],di
   1400541fc:	jmp    0x140054204
   1400541fe:	cmp    di,0x2b
   140054202:	jne    0x14005422d
   140054204:	mov    r14,QWORD PTR [rsp+0x70]
   140054209:	mov    r12d,DWORD PTR [rsp+0x50]
   14005420e:	mov    r13d,DWORD PTR [rsp+0x34]
   140054213:	mov    rcx,r14
   140054216:	sub    r12d,0x1
   14005421a:	add    r13d,0x1
   14005421e:	call   0x1400523c0
   140054223:	mov    r8d,DWORD PTR [rsp+0x68]
   140054228:	mov    di,ax
   14005422b:	jmp    0x14005423c
   14005422d:	mov    r12d,DWORD PTR [rsp+0x50]
   140054232:	mov    r13d,DWORD PTR [rsp+0x34]
   140054237:	mov    r14,QWORD PTR [rsp+0x70]
   14005423c:	test   r8d,r8d
   14005423f:	mov    eax,0xffffffff
   140054244:	cmove  r12d,eax
   140054248:	test   di,0xff00
   14005424d:	jne    0x140054318
   140054253:	movzx  ecx,dil
   140054257:	call   0x14005bdb0
   14005425c:	test   eax,eax
   14005425e:	je     0x140054318
   140054264:	mov    eax,r12d
   140054267:	sub    r12d,0x1
   14005426b:	test   eax,eax
   14005426d:	je     0x140054318
   140054273:	mov    rbp,QWORD PTR [rsp+0x48]
   140054278:	add    DWORD PTR [rsp+0x60],0x1
   14005427d:	movsx  eax,dil
   140054281:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   140054286:	add    rbx,0x1
   14005428a:	cmp    rbx,r15
   14005428d:	jne    0x1400542ff
   14005428f:	lea    rax,[rsp+0xe0]
   140054297:	cmp    rbp,rax
   14005429a:	jne    0x1400542dd
   14005429c:	mov    edx,0x4
   1400542a1:	mov    rcx,r15
   1400542a4:	call   0x14004de90
   1400542a9:	test   rax,rax
   1400542ac:	mov    rbp,rax
   1400542af:	mov    QWORD PTR [rsp+0x48],rax
   1400542b4:	je     0x140054b55
   1400542ba:	add    r15,r15
   1400542bd:	lea    rdx,[rsp+0xe0]
   1400542c5:	mov    rcx,rax
   1400542c8:	mov    r8,r15
   1400542cb:	mov    DWORD PTR [rsp+0x80],0x1
   1400542d6:	call   0x1400478c0
   1400542db:	jmp    0x1400542ff
   1400542dd:	mov    r8d,0x4
   1400542e3:	mov    rdx,r15
   1400542e6:	mov    rcx,rbp
   1400542e9:	call   0x14004dfb0
   1400542ee:	test   rax,rax
   1400542f1:	je     0x140054b45
   1400542f7:	mov    QWORD PTR [rsp+0x48],rax
   1400542fc:	add    r15,r15
   1400542ff:	mov    rcx,r14
   140054302:	add    r13d,0x1
   140054306:	call   0x1400523c0
   14005430b:	test   ax,0xff00
   14005430f:	mov    di,ax
   140054312:	je     0x140054253
   140054318:	mov    rax,QWORD PTR [rsp+0xb8]
   140054320:	mov    WORD PTR [rsp+0x94],0x2e
   14005432a:	lea    r9,[rsp+0xb8]
   140054332:	mov    rdx,QWORD PTR [rax+0x128]
   140054339:	movsxd r8,DWORD PTR [rax+0x10c]
   140054340:	lea    rcx,[rsp+0x94]
   140054348:	mov    rdx,QWORD PTR [rdx]
   14005434b:	call   0x140059c60
   140054350:	movzx  r11d,WORD PTR [rsp+0x94]
   140054359:	movsx  eax,dil
   14005435d:	cmp    r11d,eax
   140054360:	jne    0x1400544eb
   140054366:	mov    eax,r12d
   140054369:	sub    r12d,0x1
   14005436d:	test   eax,eax
   14005436f:	je     0x1400544eb
   140054375:	mov    rcx,r14
   140054378:	add    r13d,0x1
   14005437c:	call   0x1400523c0
   140054381:	mov    rbp,QWORD PTR [rsp+0x48]
   140054386:	add    rbx,0x1
   14005438a:	cmp    rbx,r15
   14005438d:	mov    di,ax
   140054390:	movzx  eax,WORD PTR [rsp+0x94]
   140054398:	mov    WORD PTR [rbp+rbx*2-0x2],ax
   14005439d:	jne    0x14005441c
   14005439f:	lea    rax,[rsp+0xe0]
   1400543a7:	cmp    rbp,rax
   1400543aa:	jne    0x1400543f0
   1400543ac:	mov    edx,0x4
   1400543b1:	mov    rcx,r15
   1400543b4:	call   0x14004de90
   1400543b9:	test   rax,rax
   1400543bc:	mov    rbp,rax
   1400543bf:	mov    QWORD PTR [rsp+0x48],rax
   1400543c4:	je     0x140054b35
   1400543ca:	add    r15,r15
   1400543cd:	mov    esi,0x1
   1400543d2:	lea    rdx,[rsp+0xe0]
   1400543da:	mov    eax,esi
   1400543dc:	mov    r8,r15
   1400543df:	mov    rcx,rbp
   1400543e2:	mov    DWORD PTR [rsp+0x80],eax
   1400543e9:	call   0x1400478c0
   1400543ee:	jmp    0x140054421
   1400543f0:	mov    r8d,0x4
   1400543f6:	mov    rdx,r15
   1400543f9:	mov    rcx,rbp
   1400543fc:	call   0x14004dfb0
   140054401:	test   rax,rax
   140054404:	je     0x140054b25
   14005440a:	mov    rbp,rax
   14005440d:	mov    QWORD PTR [rsp+0x48],rax
   140054412:	add    r15,r15
   140054415:	mov    esi,0x1
   14005441a:	jmp    0x140054421
   14005441c:	mov    esi,0x1
   140054421:	test   di,0xff00
   140054426:	jne    0x1400544eb
   14005442c:	data16 data16 xchg ax,ax
   140054430:	movzx  ecx,dil
   140054434:	call   0x14005bdb0
   140054439:	test   eax,eax
   14005443b:	je     0x1400544eb
   140054441:	mov    eax,r12d
   140054444:	sub    r12d,0x1
   140054448:	test   eax,eax
   14005444a:	je     0x1400544eb
   140054450:	add    DWORD PTR [rsp+0x60],0x1
   140054455:	mov    WORD PTR [rbp+rbx*2+0x0],di
   14005445a:	add    rbx,0x1
   14005445e:	cmp    rbx,r15
   140054461:	jne    0x1400544d2
   140054463:	lea    rax,[rsp+0xe0]
   14005446b:	cmp    rbp,rax
   14005446e:	jne    0x1400544ad
   140054470:	mov    edx,0x4
   140054475:	mov    rcx,r15
   140054478:	call   0x14004de90
   14005447d:	test   rax,rax
   140054480:	mov    rbp,rax
   140054483:	mov    QWORD PTR [rsp+0x48],rax
   140054488:	je     0x140054b15
   14005448e:	add    r15,r15
   140054491:	lea    rdx,[rsp+0xe0]
   140054499:	mov    rcx,rax
   14005449c:	mov    r8,r15
   14005449f:	mov    DWORD PTR [rsp+0x80],esi
   1400544a6:	call   0x1400478c0
   1400544ab:	jmp    0x1400544d2
   1400544ad:	mov    r8d,0x4
   1400544b3:	mov    rdx,r15
   1400544b6:	mov    rcx,rbp
   1400544b9:	call   0x14004dfb0
   1400544be:	test   rax,rax
   1400544c1:	je     0x140054b05
   1400544c7:	mov    rbp,rax
   1400544ca:	mov    QWORD PTR [rsp+0x48],rax
   1400544cf:	add    r15,r15
   1400544d2:	mov    rcx,r14
   1400544d5:	add    r13d,0x1
   1400544d9:	call   0x1400523c0
   1400544de:	test   ax,0xff00
   1400544e2:	mov    di,ax
   1400544e5:	je     0x140054430
   1400544eb:	mov    esi,DWORD PTR [rsp+0x60]
   1400544ef:	test   esi,esi
   1400544f1:	je     0x140054726
   1400544f7:	cmp    di,0x65
   1400544fb:	je     0x140054507
   1400544fd:	cmp    di,0x45
   140054501:	jne    0x140054726
   140054507:	mov    eax,r12d
   14005450a:	sub    r12d,0x1
   14005450e:	test   eax,eax
   140054510:	je     0x140054726
   140054516:	mov    rbp,QWORD PTR [rsp+0x48]
   14005451b:	add    rbx,0x1
   14005451f:	cmp    rbx,r15
   140054522:	mov    WORD PTR [rbp+rbx*2-0x2],0x65
   140054529:	jne    0x14005459e
   14005452b:	lea    rax,[rsp+0xe0]
   140054533:	cmp    rbp,rax
   140054536:	jne    0x140054579
   140054538:	mov    edx,0x4
   14005453d:	mov    rcx,r15
   140054540:	call   0x14004de90
   140054545:	test   rax,rax
   140054548:	mov    rbp,rax
   14005454b:	mov    QWORD PTR [rsp+0x48],rax
   140054550:	je     0x140054af2
   140054556:	add    r15,r15
   140054559:	lea    rdx,[rsp+0xe0]
   140054561:	mov    rcx,rax
   140054564:	mov    r8,r15
   140054567:	mov    DWORD PTR [rsp+0x80],0x1
   140054572:	call   0x1400478c0
   140054577:	jmp    0x14005459e
   140054579:	mov    r8d,0x4
   14005457f:	mov    rdx,r15
   140054582:	mov    rcx,rbp
   140054585:	call   0x14004dfb0
   14005458a:	test   rax,rax
   14005458d:	je     0x140054adf
   140054593:	mov    rbp,rax
   140054596:	mov    QWORD PTR [rsp+0x48],rax
   14005459b:	add    r15,r15
   14005459e:	mov    rcx,r14
   1400545a1:	add    r13d,0x1
   1400545a5:	call   0x1400523c0
   1400545aa:	cmp    ax,0x2d
   1400545ae:	mov    di,ax
   1400545b1:	jne    0x140054637
   1400545b7:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   1400545bc:	add    rbx,0x1
   1400545c0:	cmp    rbx,r15
   1400545c3:	jne    0x14005463d
   1400545c5:	lea    rax,[rsp+0xe0]
   1400545cd:	cmp    rbp,rax
   1400545d0:	jne    0x140054613
   1400545d2:	mov    edx,0x4
   1400545d7:	mov    rcx,r15
   1400545da:	call   0x14004de90
   1400545df:	test   rax,rax
   1400545e2:	mov    rbp,rax
   1400545e5:	mov    QWORD PTR [rsp+0x48],rax
   1400545ea:	je     0x140054acc
   1400545f0:	add    r15,r15
   1400545f3:	lea    rdx,[rsp+0xe0]
   1400545fb:	mov    rcx,rax
   1400545fe:	mov    r8,r15
   140054601:	mov    DWORD PTR [rsp+0x80],0x1
   14005460c:	call   0x1400478c0
   140054611:	jmp    0x14005463d
   140054613:	mov    r8d,0x4
   140054619:	mov    rdx,r15
   14005461c:	mov    rcx,rbp
   14005461f:	call   0x14004dfb0
   140054624:	test   rax,rax
   140054627:	je     0x140054ab9
   14005462d:	mov    QWORD PTR [rsp+0x48],rax
   140054632:	add    r15,r15
   140054635:	jmp    0x14005463d
   140054637:	cmp    di,0x2b
   14005463b:	jne    0x14005465c
   14005463d:	mov    eax,r12d
   140054640:	sub    r12d,0x1
   140054644:	test   eax,eax
   140054646:	jne    0x14005464d
   140054648:	xor    r12d,r12d
   14005464b:	jmp    0x14005465c
   14005464d:	mov    rcx,r14
   140054650:	add    r13d,0x1
   140054654:	call   0x1400523c0
   140054659:	mov    di,ax
   14005465c:	test   di,0xff00
   140054661:	jne    0x140054726
   140054667:	movzx  ecx,dil
   14005466b:	call   0x14005bdb0
   140054670:	test   eax,eax
   140054672:	je     0x140054726
   140054678:	mov    eax,r12d
   14005467b:	sub    r12d,0x1
   14005467f:	test   eax,eax
   140054681:	je     0x140054726
   140054687:	mov    rbp,QWORD PTR [rsp+0x48]
   14005468c:	add    rbx,0x1
   140054690:	add    esi,0x1
   140054693:	cmp    rbx,r15
   140054696:	mov    WORD PTR [rbp+rbx*2-0x2],di
   14005469b:	jne    0x14005470d
   14005469d:	lea    rax,[rsp+0xe0]
   1400546a5:	cmp    rbp,rax
   1400546a8:	jne    0x1400546eb
   1400546aa:	mov    edx,0x4
   1400546af:	mov    rcx,r15
   1400546b2:	call   0x14004de90
   1400546b7:	test   rax,rax
   1400546ba:	mov    rbp,rax
   1400546bd:	mov    QWORD PTR [rsp+0x48],rax
   1400546c2:	je     0x140054aa6
   1400546c8:	add    r15,r15
   1400546cb:	lea    rdx,[rsp+0xe0]
   1400546d3:	mov    rcx,rax
   1400546d6:	mov    r8,r15
   1400546d9:	mov    DWORD PTR [rsp+0x80],0x1
   1400546e4:	call   0x1400478c0
   1400546e9:	jmp    0x14005470d
   1400546eb:	mov    r8d,0x4
   1400546f1:	mov    rdx,r15
   1400546f4:	mov    rcx,rbp
   1400546f7:	call   0x14004dfb0
   1400546fc:	test   rax,rax
   1400546ff:	je     0x140054a93
   140054705:	mov    QWORD PTR [rsp+0x48],rax
   14005470a:	add    r15,r15
   14005470d:	mov    rcx,r14
   140054710:	add    r13d,0x1
   140054714:	call   0x1400523c0
   140054719:	test   ax,0xff00
   14005471d:	mov    di,ax
   140054720:	je     0x140054667
   140054726:	sub    r13d,0x1
   14005472a:	cmp    di,0xffff
   14005472f:	mov    DWORD PTR [rsp+0x34],r13d
   140054734:	je     0x140054741
   140054736:	mov    rdx,r14
   140054739:	movzx  ecx,di
   14005473c:	call   0x14005bfd0
   140054741:	test   esi,esi
   140054743:	je     0x1400549d1
   140054749:	cmp    BYTE PTR [rsp+0x30],0x0
   14005474e:	jne    0x140054828
   140054754:	mov    r12d,DWORD PTR [rsp+0x38]
   140054759:	mov    rbp,QWORD PTR [rsp+0x48]
   14005475e:	mov    WORD PTR [rbp+rbx*2+0x0],0x0
   140054765:	lea    rbx,[r15+r15*1+0x2]
   14005476a:	add    r12d,0x1
   14005476e:	mov    rcx,rbx
   140054771:	mov    DWORD PTR [rsp+0x38],r12d
   140054776:	call   0x14004de20
   14005477b:	test   rax,rax
   14005477e:	mov    rsi,rax
   140054781:	je     0x140054a85
   140054787:	lea    rcx,[rbx-0x1]
   14005478b:	mov    r9,rbp
   14005478e:	mov    r8,rbx
   140054791:	mov    QWORD PTR [rsp+0x20],rcx
   140054796:	xor    ecx,ecx
   140054798:	mov    rdx,rax
   14005479b:	call   0x14005c720
   1400547a0:	test   eax,eax
   1400547a2:	je     0x1400547c6
   1400547a4:	cmp    eax,0x16
   1400547a7:	je     0x1400547ae
   1400547a9:	cmp    eax,0x22
   1400547ac:	jne    0x1400547c6
   1400547ae:	xor    r9d,r9d
   1400547b1:	xor    r8d,r8d
   1400547b4:	xor    edx,edx
   1400547b6:	xor    ecx,ecx
   1400547b8:	mov    QWORD PTR [rsp+0x20],0x0
   1400547c1:	call   0x14004e060
   1400547c6:	movsx  ebx,BYTE PTR [rsp+0x40]
   1400547cb:	mov    rcx,QWORD PTR [rip+0x33726]        # 0x140087ef8
   1400547d2:	sub    ebx,0x1
   1400547d5:	call   0x14004ba70
   1400547da:	mov    rdx,QWORD PTR [rsp+0x88]
   1400547e2:	lea    r9,[rsp+0xb8]
   1400547ea:	mov    r8,rsi
   1400547ed:	mov    ecx,ebx
   1400547ef:	call   rax
   1400547f1:	mov    rcx,rsi
   1400547f4:	call   0x1400485c0
   1400547f9:	jmp    0x14005485b
   1400547fb:	mov    cl,BYTE PTR [rsp+0x30]
   1400547ff:	cmp    WORD PTR [r9],di
   140054803:	jne    0x14005497b
   140054809:	add    BYTE PTR [rsp+0x42],0xff
   14005480e:	mov    rbp,QWORD PTR [rsp+0x48]
   140054813:	mov    r13d,DWORD PTR [rsp+0x34]
   140054818:	test   cl,cl
   14005481a:	cmove  r10,r11
   14005481e:	mov    QWORD PTR [rsp+0xa8],r10
   140054826:	jmp    0x14005485b
   140054828:	mov    rbp,QWORD PTR [rsp+0x48]
   14005482d:	jmp    0x14005485b
   14005482f:	mov    rbp,QWORD PTR [rsp+0x48]
   140054834:	mov    r13d,eax
   140054837:	jmp    0x14005485b
   140054839:	mov    rbp,QWORD PTR [rsp+0x48]
   14005483e:	mov    r13d,DWORD PTR [rsp+0x34]
   140054843:	jmp    0x14005485b
   140054845:	mov    rbp,QWORD PTR [rsp+0x48]
   14005484a:	mov    r13d,DWORD PTR [rsp+0x34]
   14005484f:	jmp    0x14005485b
   140054851:	mov    rbp,QWORD PTR [rsp+0x48]
   140054856:	mov    r13d,DWORD PTR [rsp+0x34]
   14005485b:	mov    rsi,QWORD PTR [rsp+0x78]
   140054860:	add    BYTE PTR [rsp+0x42],0x1
   140054865:	mov    r12,QWORD PTR [rsp+0x70]
   14005486a:	add    rsi,0x2
   14005486e:	mov    QWORD PTR [rsp+0x78],rsi
   140054873:	jmp    0x1400548a3
   140054875:	add    r13d,0x1
   140054879:	mov    rcx,r12
   14005487c:	mov    DWORD PTR [rsp+0x34],r13d
   140054881:	call   0x1400523c0
   140054886:	mov    rsi,QWORD PTR [rsp+0x78]
   14005488b:	mov    di,ax
   14005488e:	movzx  eax,WORD PTR [rsi]
   140054891:	add    rsi,0x2
   140054895:	cmp    ax,di
   140054898:	mov    QWORD PTR [rsp+0x78],rsi
   14005489d:	jne    0x1400549a8
   1400548a3:	cmp    di,0xffff
   1400548a8:	jne    0x1400548bf
   1400548aa:	cmp    WORD PTR [rsi],0x25
   1400548ae:	jne    0x140054b75
   1400548b4:	cmp    WORD PTR [rsi+0x2],0x6e
   1400548b9:	jne    0x140054b85
   1400548bf:	mov    ax,WORD PTR [rsi]
   1400548c2:	test   ax,ax
   1400548c5:	jne    0x140053610
   1400548cb:	mov    r11,QWORD PTR [rsp+0x58]
   1400548d0:	mov    r12d,DWORD PTR [rsp+0x38]
   1400548d5:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400548d9:	jmp    0x140054b93
   1400548de:	cmp    di,0xffff
   1400548e3:	je     0x140054a57
   1400548e9:	mov    rdx,QWORD PTR [rsp+0x70]
   1400548ee:	movzx  ecx,di
   1400548f1:	call   0x14005bfd0
   1400548f6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400548fb:	mov    r11,QWORD PTR [rsp+0x58]
   140054900:	mov    r12d,DWORD PTR [rsp+0x38]
   140054905:	mov    ebx,r14d
   140054908:	jmp    0x140054b93
   14005490d:	mov    BYTE PTR [rax],0x0
   140054910:	call   0x140048680
   140054915:	mov    rbp,QWORD PTR [rsp+0x48]
   14005491a:	mov    r11,QWORD PTR [rsp+0x58]
   14005491f:	mov    r12d,DWORD PTR [rsp+0x38]
   140054924:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054928:	mov    DWORD PTR [rax],0xc
   14005492e:	jmp    0x140054b93
   140054933:	call   0x140048680
   140054938:	test   r13b,r13b
   14005493b:	mov    DWORD PTR [rax],0xc
   140054941:	je     0x140054960
   140054943:	mov    rbp,QWORD PTR [rsp+0x48]
   140054948:	mov    r11,QWORD PTR [rsp+0x58]
   14005494d:	mov    r12d,DWORD PTR [rsp+0x38]
   140054952:	mov    WORD PTR [rbx],0x0
   140054957:	mov    ebx,DWORD PTR [rsp+0x3c]
   14005495b:	jmp    0x140054b93
   140054960:	mov    rbp,QWORD PTR [rsp+0x48]
   140054965:	mov    r11,QWORD PTR [rsp+0x58]
   14005496a:	mov    r12d,DWORD PTR [rsp+0x38]
   14005496f:	mov    BYTE PTR [rbx],0x0
   140054972:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054976:	jmp    0x140054b93
   14005497b:	cmp    di,0xffff
   140054980:	je     0x14005498f
   140054982:	mov    rdx,QWORD PTR [rsp+0x70]
   140054987:	movzx  ecx,di
   14005498a:	call   0x14005bfd0
   14005498f:	mov    rbp,QWORD PTR [rsp+0x48]
   140054994:	mov    r11,QWORD PTR [rsp+0x58]
   140054999:	mov    r12d,DWORD PTR [rsp+0x38]
   14005499e:	mov    ebx,0x1
   1400549a3:	jmp    0x140054b93
   1400549a8:	cmp    di,0xffff
   1400549ad:	je     0x140054b65
   1400549b3:	mov    rdx,r12
   1400549b6:	movzx  ecx,di
   1400549b9:	call   0x14005bfd0
   1400549be:	mov    r11,QWORD PTR [rsp+0x58]
   1400549c3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400549c8:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400549cc:	jmp    0x140054b93
   1400549d1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400549d6:	mov    r11,QWORD PTR [rsp+0x58]
   1400549db:	mov    r12d,DWORD PTR [rsp+0x38]
   1400549e0:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400549e4:	jmp    0x140054b93
   1400549e9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400549ee:	mov    r11,QWORD PTR [rsp+0x58]
   1400549f3:	mov    r12d,DWORD PTR [rsp+0x38]
   1400549f8:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400549fc:	jmp    0x140054b93
   140054a01:	mov    rbp,QWORD PTR [rsp+0x48]
   140054a06:	mov    r11,QWORD PTR [rsp+0x58]
   140054a0b:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a10:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054a14:	jmp    0x140054b93
   140054a19:	mov    rbp,QWORD PTR [rsp+0x48]
   140054a1e:	mov    r11,QWORD PTR [rsp+0x58]
   140054a23:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a28:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054a2c:	jmp    0x140054b93
   140054a31:	mov    rbp,QWORD PTR [rsp+0x48]
   140054a36:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a3b:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054a3f:	jmp    0x140054b93
   140054a44:	mov    rbp,QWORD PTR [rsp+0x48]
   140054a49:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a4e:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054a52:	jmp    0x140054b93
   140054a57:	mov    rbp,QWORD PTR [rsp+0x48]
   140054a5c:	mov    r11,QWORD PTR [rsp+0x58]
   140054a61:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a66:	mov    ebx,r14d
   140054a69:	jmp    0x140054b93
   140054a6e:	mov    rbp,QWORD PTR [rsp+0x48]
   140054a73:	mov    r11,QWORD PTR [rsp+0x58]
   140054a78:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a7d:	mov    ebx,r14d
   140054a80:	jmp    0x140054b93
   140054a85:	mov    r11,QWORD PTR [rsp+0x58]
   140054a8a:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054a8e:	jmp    0x140054b93
   140054a93:	mov    r11,QWORD PTR [rsp+0x58]
   140054a98:	mov    r12d,DWORD PTR [rsp+0x38]
   140054a9d:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054aa1:	jmp    0x140054b93
   140054aa6:	mov    r11,QWORD PTR [rsp+0x58]
   140054aab:	mov    r12d,DWORD PTR [rsp+0x38]
   140054ab0:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054ab4:	jmp    0x140054b93
   140054ab9:	mov    r11,QWORD PTR [rsp+0x58]
   140054abe:	mov    r12d,DWORD PTR [rsp+0x38]
   140054ac3:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054ac7:	jmp    0x140054b93
   140054acc:	mov    r11,QWORD PTR [rsp+0x58]
   140054ad1:	mov    r12d,DWORD PTR [rsp+0x38]
   140054ad6:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054ada:	jmp    0x140054b93
   140054adf:	mov    r11,QWORD PTR [rsp+0x58]
   140054ae4:	mov    r12d,DWORD PTR [rsp+0x38]
   140054ae9:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054aed:	jmp    0x140054b93
   140054af2:	mov    r11,QWORD PTR [rsp+0x58]
   140054af7:	mov    r12d,DWORD PTR [rsp+0x38]
   140054afc:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b00:	jmp    0x140054b93
   140054b05:	mov    r11,QWORD PTR [rsp+0x58]
   140054b0a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b0f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b13:	jmp    0x140054b93
   140054b15:	mov    r11,QWORD PTR [rsp+0x58]
   140054b1a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b1f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b23:	jmp    0x140054b93
   140054b25:	mov    r11,QWORD PTR [rsp+0x58]
   140054b2a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b2f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b33:	jmp    0x140054b93
   140054b35:	mov    r11,QWORD PTR [rsp+0x58]
   140054b3a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b3f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b43:	jmp    0x140054b93
   140054b45:	mov    r11,QWORD PTR [rsp+0x58]
   140054b4a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b4f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b53:	jmp    0x140054b93
   140054b55:	mov    r11,QWORD PTR [rsp+0x58]
   140054b5a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b5f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b63:	jmp    0x140054b93
   140054b65:	mov    r11,QWORD PTR [rsp+0x58]
   140054b6a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b6f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b73:	jmp    0x140054b93
   140054b75:	mov    r11,QWORD PTR [rsp+0x58]
   140054b7a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b7f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b83:	jmp    0x140054b93
   140054b85:	mov    r11,QWORD PTR [rsp+0x58]
   140054b8a:	mov    r12d,DWORD PTR [rsp+0x38]
   140054b8f:	mov    ebx,DWORD PTR [rsp+0x3c]
   140054b93:	mov    eax,DWORD PTR [rsp+0xb0]
   140054b9a:	cmp    eax,0x1
   140054b9d:	jne    0x140054ba7
   140054b9f:	mov    rcx,r11
   140054ba2:	call   0x1400485c0
   140054ba7:	mov    eax,DWORD PTR [rsp+0x80]
   140054bae:	cmp    eax,0x1
   140054bb1:	jne    0x140054bbb
   140054bb3:	mov    rcx,rbp
   140054bb6:	call   0x1400485c0
   140054bbb:	cmp    di,0xffff
   140054bc0:	jne    0x140054bf3
   140054bc2:	test   r12d,r12d
   140054bc5:	jne    0x140054bd5
   140054bc7:	movzx  eax,BYTE PTR [rsp+0x42]
   140054bcc:	test   al,al
   140054bce:	jne    0x140054bd5
   140054bd0:	or     eax,0xffffffff
   140054bd3:	jmp    0x140054bd8
   140054bd5:	mov    eax,r12d
   140054bd8:	cmp    BYTE PTR [rsp+0xd0],0x0
   140054be0:	je     0x140054c59
   140054be2:	mov    rcx,QWORD PTR [rsp+0xc8]
   140054bea:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140054bf1:	jmp    0x140054c59
   140054bf3:	cmp    ebx,0x1
   140054bf6:	jne    0x140054c39
   140054bf8:	call   0x140048680
   140054bfd:	xor    r9d,r9d
   140054c00:	xor    r8d,r8d
   140054c03:	xor    edx,edx
   140054c05:	xor    ecx,ecx
   140054c07:	mov    QWORD PTR [rsp+0x20],0x0
   140054c10:	mov    DWORD PTR [rax],0x16
   140054c16:	call   0x14004e100
   140054c1b:	cmp    BYTE PTR [rsp+0xd0],0x0
   140054c23:	je     0x140054c34
   140054c25:	mov    rcx,QWORD PTR [rsp+0xc8]
   140054c2d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140054c34:	mov    eax,r12d
   140054c37:	jmp    0x140054c59
   140054c39:	mov    r11,QWORD PTR [rsp+0xc8]
   140054c41:	mov    ecx,DWORD PTR [rsp+0x38]
   140054c45:	cmp    BYTE PTR [rsp+0xd0],0x0
   140054c4d:	je     0x140054c57
   140054c4f:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140054c57:	mov    eax,ecx
   140054c59:	mov    r13,QWORD PTR [rsp+0x3b8]
   140054c61:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140054c69:	xor    rcx,rsp
   140054c6c:	call   0x140046470
   140054c71:	add    rsp,0x3c0
   140054c78:	pop    r15
   140054c7a:	pop    r14
   140054c7c:	pop    r12
   140054c7e:	pop    rdi
   140054c7f:	pop    rsi
   140054c80:	pop    rbp
   140054c81:	pop    rbx
   140054c82:	ret    
   140054c83:	nop
   140054c84:	push   0x38
   140054c86:	add    eax,0x5387700
   140054c8b:	add    BYTE PTR [rdi+0x37],bh
   140054c8e:	add    eax,0x5382800
   140054c93:	add    BYTE PTR [rsi+0x37],ch
   140054c96:	add    eax,0x5383200
   140054c9b:	add    BYTE PTR [rax+0x38],ah
   140054c9e:	add    eax,0x5380800
   140054ca3:	add    BYTE PTR [rax],al
   140054ca5:	(bad)  
   140054ca6:	(bad)  
   140054ca7:	(bad)  
   140054ca8:	(bad)  
   140054ca9:	(bad)  
   140054caa:	(bad)  
   140054cab:	(bad)  
   140054cac:	(bad)  
   140054cad:	(bad)  
   140054cae:	(bad)  
   140054caf:	(bad)  
   140054cb0:	(bad)  
   140054cb1:	(bad)  
   140054cb2:	(bad)  
   140054cb3:	(bad)  
   140054cb4:	(bad)  
   140054cb5:	(bad)  
   140054cb6:	(bad)  
   140054cb7:	(bad)  
   140054cb8:	(bad)  
   140054cb9:	(bad)  
   140054cba:	(bad)  
   140054cbb:	(bad)  
   140054cbc:	(bad)  
   140054cbd:	(bad)  
   140054cbe:	(bad)  
   140054cbf:	(bad)  
   140054cc0:	add    DWORD PTR [rdi],eax
   140054cc2:	(bad)  
   140054cc3:	add    al,BYTE PTR [rdi]
   140054cc5:	(bad)  
   140054cc6:	add    eax,DWORD PTR [rdi]
   140054cc8:	add    DWORD PTR [rdi],eax
   140054cca:	(bad)  
   140054ccb:	(bad)  
   140054ccc:	(bad)  
   140054ccd:	(bad)  
   140054cce:	(bad)  
   140054ccf:	(bad)  
   140054cd0:	(bad)  
   140054cd1:	(bad)  
   140054cd2:	(bad)  
   140054cd3:	(bad)  
   140054cd4:	(bad)  
   140054cd5:	(bad)  
   140054cd6:	(bad)  
   140054cd7:	(bad)  
   140054cd8:	(bad)  
   140054cd9:	(bad)  
   140054cda:	(bad)  
   140054cdb:	(bad)  
   140054cdc:	(bad)  
   140054cdd:	(bad)  
   140054cde:	(bad)  
   140054cdf:	(bad)  
   140054ce0:	(bad)  
   140054ce1:	(bad)  
   140054ce2:	add    al,0x7
   140054ce4:	(bad)  
   140054ce5:	(bad)  
   140054ce6:	add    eax,0x7070707
   140054ceb:	(bad)  
   140054cec:	(bad)  
   140054ced:	(bad)  
   140054cee:	(bad)  
   140054cef:	(bad)  
   140054cf0:	(bad)  
   140054cf1:	(bad)  
   140054cf2:	xchg   ax,ax
   140054cf4:	cmp    DWORD PTR [rdx],edi
   140054cf6:	add    eax,0x53f0100
   140054cfb:	add    bh,ah
   140054cfd:	rex.B add eax,0x541e700
   140054d03:	add    bh,ah
   140054d05:	rex.B add eax,0x547fb00
   140054d0b:	add    BYTE PTR [rbx-0x4fffac3],bh
   140054d11:	rex.RXB add eax,0x547fb00
   140054d17:	add    bl,bh
   140054d19:	rex.RXB add eax,0x547fb00
   140054d1f:	add    BYTE PTR [rbp+0x41],ch
   140054d22:	add    eax,0x53f0100
   140054d27:	add    ch,ah
   140054d29:	ds add eax,0x547fb00
   140054d2f:	add    bl,bh
   140054d31:	rex.RXB add eax,0x53a6400
   140054d37:	add    bl,bh
   140054d39:	rex.RXB add eax,0x53f0100
   140054d3f:	add    bl,bh
   140054d41:	rex.RXB add eax,0x547fb00
   140054d47:	add    al,al
   140054d49:	cmp    eax,0x47fb0005
   140054d4e:	add    eax,0x547fb00
   140054d53:	add    BYTE PTR [rdx+0x3a],bh
   140054d56:	add    eax,0xcccccc00
   140054d5b:	int3   
   140054d5c:	int3   
   140054d5d:	int3   
   140054d5e:	int3   
   140054d5f:	int3   
   140054d60:	sub    rsp,0x5a8
   140054d67:	test   BYTE PTR [rip+0x331a2],0x1        # 0x140087f10
   140054d6e:	je     0x140054d7a
   140054d70:	mov    ecx,0xa
   140054d75:	call   0x14004a6a0
   140054d7a:	call   0x140052fe0
   140054d7f:	test   rax,rax
   140054d82:	je     0x140054d8e
   140054d84:	mov    ecx,0x16
   140054d89:	call   0x140052ff0
   140054d8e:	test   BYTE PTR [rip+0x3317b],0x2        # 0x140087f10
   140054d95:	je     0x140054df6
   140054d97:	lea    rcx,[rsp+0xd0]
   140054d9f:	call   QWORD PTR [rip+0xf5a3]        # 0x140064348
   140054da5:	lea    rcx,[rsp+0x30]
   140054daa:	xor    edx,edx
   140054dac:	mov    r8d,0x98
   140054db2:	call   0x140047720
   140054db7:	mov    rax,QWORD PTR [rsp+0x5a8]
   140054dbf:	xor    ecx,ecx
   140054dc1:	mov    QWORD PTR [rsp+0x40],rax
   140054dc6:	lea    rax,[rsp+0x30]
   140054dcb:	mov    DWORD PTR [rsp+0x30],0x40000015
   140054dd3:	mov    QWORD PTR [rsp+0x20],rax
   140054dd8:	lea    rax,[rsp+0xd0]
   140054de0:	mov    QWORD PTR [rsp+0x28],rax
   140054de5:	call   QWORD PTR [rip+0xf4a5]        # 0x140064290
   140054deb:	lea    rcx,[rsp+0x20]
   140054df0:	call   QWORD PTR [rip+0xf53a]        # 0x140064330
   140054df6:	mov    ecx,0x3
   140054dfb:	call   0x140048520
   140054e00:	int3   
   140054e01:	int3   
   140054e02:	int3   
   140054e03:	int3   
   140054e04:	int3   
   140054e05:	int3   
   140054e06:	int3   
   140054e07:	int3   
   140054e08:	int3   
   140054e09:	int3   
   140054e0a:	int3   
   140054e0b:	int3   
   140054e0c:	int3   
   140054e0d:	int3   
   140054e0e:	int3   
   140054e0f:	int3   
   140054e10:	mov    eax,DWORD PTR [rip+0x330fa]        # 0x140087f10
   140054e16:	mov    r8d,edx
   140054e19:	and    ecx,edx
   140054e1b:	not    r8d
   140054e1e:	and    r8d,eax
   140054e21:	or     r8d,ecx
   140054e24:	mov    DWORD PTR [rip+0x330e5],r8d        # 0x140087f10
   140054e2b:	ret    
   140054e2c:	int3   
   140054e2d:	int3   
   140054e2e:	int3   
   140054e2f:	int3   
   140054e30:	mov    QWORD PTR [rsp+0x10],rbx
   140054e35:	mov    QWORD PTR [rsp+0x18],rbp
   140054e3a:	push   rdi
   140054e3b:	sub    rsp,0x30
   140054e3f:	xor    ebp,ebp
   140054e41:	test   rcx,rcx
   140054e44:	mov    rdi,rdx
   140054e47:	mov    ebx,ebp
   140054e49:	mov    r8,rcx
   140054e4c:	jne    0x140054e82
   140054e4e:	call   0x140048680
   140054e53:	xor    r9d,r9d
   140054e56:	xor    r8d,r8d
   140054e59:	xor    edx,edx
   140054e5b:	xor    ecx,ecx
   140054e5d:	mov    QWORD PTR [rsp+0x20],rbp
   140054e62:	mov    DWORD PTR [rax],0x16
   140054e68:	call   0x14004e100
   140054e6d:	mov    eax,0x16
   140054e72:	mov    rbx,QWORD PTR [rsp+0x48]
   140054e77:	mov    rbp,QWORD PTR [rsp+0x50]
   140054e7c:	add    rsp,0x30
   140054e80:	pop    rdi
   140054e81:	ret    
   140054e82:	test   rdx,rdx
   140054e85:	mov    DWORD PTR [rcx],0xffffffff
   140054e8b:	mov    DWORD PTR [rcx+0x4],0xffffffff
   140054e92:	mov    DWORD PTR [rcx+0x8],0xffffffff
   140054e99:	mov    DWORD PTR [rcx+0xc],0xffffffff
   140054ea0:	mov    DWORD PTR [rcx+0x10],0xffffffff
   140054ea7:	mov    DWORD PTR [rcx+0x14],0xffffffff
   140054eae:	mov    DWORD PTR [rcx+0x18],0xffffffff
   140054eb5:	mov    DWORD PTR [rcx+0x1c],0xffffffff
   140054ebc:	mov    DWORD PTR [rcx+0x20],0xffffffff
   140054ec3:	je     0x140054e4e
   140054ec5:	mov    r11,QWORD PTR [rdx]
   140054ec8:	test   r11,r11
   140054ecb:	jns    0x140054eed
   140054ecd:	call   0x140048680
   140054ed2:	mov    DWORD PTR [rax],0x16
   140054ed8:	mov    eax,0x16
   140054edd:	mov    rbx,QWORD PTR [rsp+0x48]
   140054ee2:	mov    rbp,QWORD PTR [rsp+0x50]
   140054ee7:	add    rsp,0x30
   140054eeb:	pop    rdi
   140054eec:	ret    
   140054eed:	movabs rax,0x793406fff
   140054ef7:	cmp    r11,rax
   140054efa:	jg     0x140054e4e
   140054f00:	movabs rax,0x883148f5cb1270b9
   140054f0a:	mov    QWORD PTR [rsp+0x40],rsi
   140054f0f:	mov    r10d,0x1
   140054f15:	imul   r11
   140054f18:	lea    r9,[r11+rdx*1]
   140054f1c:	sar    r9,0x18
   140054f20:	mov    rax,r9
   140054f23:	shr    rax,0x3f
   140054f27:	add    r9,rax
   140054f2a:	mov    eax,0x51eb851f
   140054f2f:	add    r9d,0x46
   140054f33:	lea    ecx,[r9+0x12b]
   140054f3a:	lea    esi,[r9-0x1]
   140054f3e:	imul   ecx
   140054f40:	mov    ecx,edx
   140054f42:	sar    ecx,0x7
   140054f45:	mov    eax,ecx
   140054f47:	shr    eax,0x1f
   140054f4a:	add    ecx,eax
   140054f4c:	mov    eax,0x51eb851f
   140054f51:	imul   esi
   140054f53:	sar    edx,0x5
   140054f56:	mov    eax,edx
   140054f58:	shr    eax,0x1f
   140054f5b:	add    edx,eax
   140054f5d:	mov    eax,esi
   140054f5f:	sub    ecx,edx
   140054f61:	cdq    
   140054f62:	and    edx,0x3
   140054f65:	add    eax,edx
   140054f67:	sar    eax,0x2
   140054f6a:	lea    ecx,[rcx+rax*1-0x11]
   140054f6e:	lea    eax,[r9-0x46]
   140054f72:	movsxd rdx,ecx
   140054f75:	movsxd rcx,eax
   140054f78:	imul   rcx,rcx,0xfffffffffffffe93
   140054f7f:	sub    rcx,rdx
   140054f82:	imul   rcx,rcx,0x15180
   140054f89:	add    r11,rcx
   140054f8c:	jns    0x140054fed
   140054f8e:	mov    eax,esi
   140054f90:	add    r11,0x1e13380
   140054f97:	mov    r9d,esi
   140054f9a:	cdq    
   140054f9b:	and    edx,0x3
   140054f9e:	add    eax,edx
   140054fa0:	and    eax,0x3
   140054fa3:	cmp    eax,edx
   140054fa5:	jne    0x140054fc0
   140054fa7:	mov    eax,0x51eb851f
   140054fac:	imul   r9d
   140054faf:	sar    edx,0x5
   140054fb2:	mov    ecx,edx
   140054fb4:	shr    ecx,0x1f
   140054fb7:	add    edx,ecx
   140054fb9:	imul   edx,edx,0x64
   140054fbc:	cmp    esi,edx
   140054fbe:	jne    0x140054fe1
   140054fc0:	lea    ecx,[rsi+0x76c]
   140054fc6:	mov    eax,0x51eb851f
   140054fcb:	imul   ecx
   140054fcd:	sar    edx,0x7
   140054fd0:	mov    eax,edx
   140054fd2:	shr    eax,0x1f
   140054fd5:	add    edx,eax
   140054fd7:	imul   edx,edx,0x190
   140054fdd:	cmp    ecx,edx
   140054fdf:	jne    0x14005503c
   140054fe1:	add    r11,0x15180
   140054fe8:	mov    ebx,r10d
   140054feb:	jmp    0x14005503c
   140054fed:	mov    eax,r9d
   140054ff0:	cdq    
   140054ff1:	and    edx,0x3
   140054ff4:	add    eax,edx
   140054ff6:	and    eax,0x3
   140054ff9:	cmp    eax,edx
   140054ffb:	jne    0x140055017
   140054ffd:	mov    eax,0x51eb851f
   140055002:	imul   r9d
   140055005:	sar    edx,0x5
   140055008:	mov    eax,edx
   14005500a:	shr    eax,0x1f
   14005500d:	add    edx,eax
   14005500f:	imul   edx,edx,0x64
   140055012:	cmp    r9d,edx
   140055015:	jne    0x140055039
   140055017:	lea    ecx,[r9+0x76c]
   14005501e:	mov    eax,0x51eb851f
   140055023:	imul   ecx
   140055025:	sar    edx,0x7
   140055028:	mov    eax,edx
   14005502a:	shr    eax,0x1f
   14005502d:	add    edx,eax
   14005502f:	imul   edx,edx,0x190
   140055035:	cmp    ecx,edx
   140055037:	jne    0x14005503c
   140055039:	mov    ebx,r10d
   14005503c:	mov    DWORD PTR [r8+0x14],r9d
   140055040:	movabs rsi,0x1845c8a0ce512957
   14005504a:	lea    r9,[rip+0x32f8f]        # 0x140087fe0
   140055051:	mov    rax,rsi
   140055054:	imul   r11
   140055057:	sar    rdx,0xd
   14005505b:	mov    rax,rdx
   14005505e:	shr    rax,0x3f
   140055062:	add    rdx,rax
   140055065:	movsxd rax,edx
   140055068:	mov    DWORD PTR [r8+0x1c],edx
   14005506c:	imul   rax,rax,0xfffffffffffeae80
   140055073:	add    r11,rax
   140055076:	lea    rax,[rip+0x32f9b]        # 0x140088018
   14005507d:	test   ebx,ebx
   14005507f:	cmove  r9,rax
   140055083:	cmp    DWORD PTR [r9+0x4],edx
   140055087:	mov    eax,edx
   140055089:	lea    rcx,[r9+0x4]
   14005508d:	jge    0x14005509c
   14005508f:	nop
   140055090:	add    rcx,0x4
   140055094:	add    r10d,0x1
   140055098:	cmp    DWORD PTR [rcx],edx
   14005509a:	jl     0x140055090
   14005509c:	mov    rbx,QWORD PTR [rsp+0x48]
   1400550a1:	sub    r10d,0x1
   1400550a5:	movsxd rcx,r10d
   1400550a8:	mov    DWORD PTR [r8+0x10],r10d
   1400550ac:	sub    eax,DWORD PTR [r9+rcx*4]
   1400550b0:	mov    DWORD PTR [r8+0xc],eax
   1400550b4:	mov    rax,rsi
   1400550b7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400550bc:	imul   QWORD PTR [rdi]
   1400550bf:	mov    rcx,rdx
   1400550c2:	mov    DWORD PTR [r8+0x20],ebp
   1400550c6:	mov    rbp,QWORD PTR [rsp+0x50]
   1400550cb:	sar    rcx,0xd
   1400550cf:	mov    rax,rcx
   1400550d2:	shr    rax,0x3f
   1400550d6:	add    rcx,rax
   1400550d9:	mov    eax,0x92492493
   1400550de:	add    ecx,0x4
   1400550e1:	imul   ecx
   1400550e3:	add    edx,ecx
   1400550e5:	sar    edx,0x2
   1400550e8:	mov    eax,edx
   1400550ea:	shr    eax,0x1f
   1400550ed:	add    edx,eax
   1400550ef:	movabs rax,0x48d159e26af37c05
   1400550f9:	imul   edx,edx,0x7
   1400550fc:	sub    ecx,edx
   1400550fe:	imul   r11
   140055101:	mov    DWORD PTR [r8+0x18],ecx
   140055105:	sar    rdx,0xa
   140055109:	mov    rax,rdx
   14005510c:	shr    rax,0x3f
   140055110:	add    rdx,rax
   140055113:	movsxd rax,edx
   140055116:	mov    DWORD PTR [r8+0x8],edx
   14005511a:	imul   rax,rax,0xfffffffffffff1f0
   140055121:	add    r11,rax
   140055124:	movabs rax,0x8888888888888889
   14005512e:	imul   r11
   140055131:	add    rdx,r11
   140055134:	sar    rdx,0x5
   140055138:	mov    rax,rdx
   14005513b:	shr    rax,0x3f
   14005513f:	add    rdx,rax
   140055142:	mov    DWORD PTR [r8+0x4],edx
   140055146:	imul   edx,edx,0x3c
   140055149:	sub    r11d,edx
   14005514c:	xor    eax,eax
   14005514e:	mov    DWORD PTR [r8],r11d
   140055151:	add    rsp,0x30
   140055155:	pop    rdi
   140055156:	ret    
   140055157:	int3   
   140055158:	int3   
   140055159:	int3   
   14005515a:	int3   
   14005515b:	int3   
   14005515c:	int3   
   14005515d:	int3   
   14005515e:	int3   
   14005515f:	int3   
   140055160:	sub    rsp,0x38
   140055164:	test   rcx,rcx
   140055167:	jne    0x140055196
   140055169:	call   0x140048680
   14005516e:	xor    r9d,r9d
   140055171:	xor    r8d,r8d
   140055174:	xor    edx,edx
   140055176:	xor    ecx,ecx
   140055178:	mov    QWORD PTR [rsp+0x20],0x0
   140055181:	mov    DWORD PTR [rax],0x16
   140055187:	call   0x14004e100
   14005518c:	mov    eax,0x16
   140055191:	add    rsp,0x38
   140055195:	ret    
   140055196:	mov    eax,DWORD PTR [rip+0x32d88]        # 0x140087f24
   14005519c:	mov    DWORD PTR [rcx],eax
   14005519e:	xor    eax,eax
   1400551a0:	add    rsp,0x38
   1400551a4:	ret    
   1400551a5:	int3   
   1400551a6:	int3   
   1400551a7:	int3   
   1400551a8:	int3   
   1400551a9:	int3   
   1400551aa:	int3   
   1400551ab:	int3   
   1400551ac:	int3   
   1400551ad:	int3   
   1400551ae:	int3   
   1400551af:	int3   
   1400551b0:	sub    rsp,0x38
   1400551b4:	test   rcx,rcx
   1400551b7:	jne    0x1400551e6
   1400551b9:	call   0x140048680
   1400551be:	xor    r9d,r9d
   1400551c1:	xor    r8d,r8d
   1400551c4:	xor    edx,edx
   1400551c6:	xor    ecx,ecx
   1400551c8:	mov    QWORD PTR [rsp+0x20],0x0
   1400551d1:	mov    DWORD PTR [rax],0x16
   1400551d7:	call   0x14004e100
   1400551dc:	mov    eax,0x16
   1400551e1:	add    rsp,0x38
   1400551e5:	ret    
   1400551e6:	mov    eax,DWORD PTR [rip+0x32d3c]        # 0x140087f28
   1400551ec:	mov    DWORD PTR [rcx],eax
   1400551ee:	xor    eax,eax
   1400551f0:	add    rsp,0x38
   1400551f4:	ret    
   1400551f5:	int3   
   1400551f6:	int3   
   1400551f7:	int3   
   1400551f8:	int3   
   1400551f9:	int3   
   1400551fa:	int3   
   1400551fb:	int3   
   1400551fc:	int3   
   1400551fd:	int3   
   1400551fe:	int3   
   1400551ff:	int3   
   140055200:	sub    rsp,0x38
   140055204:	test   rcx,rcx
   140055207:	jne    0x140055236
   140055209:	call   0x140048680
   14005520e:	xor    r9d,r9d
   140055211:	xor    r8d,r8d
   140055214:	xor    edx,edx
   140055216:	xor    ecx,ecx
   140055218:	mov    QWORD PTR [rsp+0x20],0x0
   140055221:	mov    DWORD PTR [rax],0x16
   140055227:	call   0x14004e100
   14005522c:	mov    eax,0x16
   140055231:	add    rsp,0x38
   140055235:	ret    
   140055236:	mov    eax,DWORD PTR [rip+0x32ce4]        # 0x140087f20
   14005523c:	mov    DWORD PTR [rcx],eax
   14005523e:	xor    eax,eax
   140055240:	add    rsp,0x38
   140055244:	ret    
   140055245:	int3   
   140055246:	int3   
   140055247:	int3   
   140055248:	int3   
   140055249:	int3   
   14005524a:	int3   
   14005524b:	int3   
   14005524c:	int3   
   14005524d:	int3   
   14005524e:	int3   
   14005524f:	int3   
   140055250:	lea    rax,[rip+0x32ccd]        # 0x140087f24
   140055257:	ret    
   140055258:	int3   
   140055259:	int3   
   14005525a:	int3   
   14005525b:	int3   
   14005525c:	int3   
   14005525d:	int3   
   14005525e:	int3   
   14005525f:	int3   
   140055260:	lea    rax,[rip+0x32cc1]        # 0x140087f28
   140055267:	ret    
   140055268:	int3   
   140055269:	int3   
   14005526a:	int3   
   14005526b:	int3   
   14005526c:	int3   
   14005526d:	int3   
   14005526e:	int3   
   14005526f:	int3   
   140055270:	lea    rax,[rip+0x32ca9]        # 0x140087f20
   140055277:	ret    
   140055278:	int3   
   140055279:	int3   
   14005527a:	int3   
   14005527b:	int3   
   14005527c:	int3   
   14005527d:	int3   
   14005527e:	int3   
   14005527f:	int3   
   140055280:	lea    rax,[rip+0x32d29]        # 0x140087fb0
   140055287:	ret    
   140055288:	int3   
   140055289:	int3   
   14005528a:	int3   
   14005528b:	int3   
   14005528c:	int3   
   14005528d:	int3   
   14005528e:	int3   
   14005528f:	int3   
   140055290:	mov    rax,rsp
   140055293:	push   rbx
   140055294:	push   rsi
   140055295:	push   rdi
   140055296:	push   r12
   140055298:	push   r13
   14005529a:	push   r14
   14005529c:	sub    rsp,0x58
   1400552a0:	xor    r14d,r14d
   1400552a3:	mov    r13d,r14d
   1400552a6:	mov    r12d,r14d
   1400552a9:	mov    DWORD PTR [rax+0x8],r14d
   1400552ad:	mov    DWORD PTR [rax+0x10],r14d
   1400552b1:	mov    DWORD PTR [rax+0x18],r14d
   1400552b5:	lea    ecx,[r14+0x7]
   1400552b9:	call   0x140052e40
   1400552be:	nop
   1400552bf:	call   0x140055280
   1400552c4:	mov    rsi,rax
   1400552c7:	lea    rcx,[rsp+0x90]
   1400552cf:	call   0x140055200
   1400552d4:	test   eax,eax
   1400552d6:	je     0x1400552ec
   1400552d8:	mov    QWORD PTR [rsp+0x20],r14
   1400552dd:	xor    r9d,r9d
   1400552e0:	xor    r8d,r8d
   1400552e3:	xor    edx,edx
   1400552e5:	xor    ecx,ecx
   1400552e7:	call   0x14004e060
   1400552ec:	lea    rcx,[rsp+0x98]
   1400552f4:	call   0x140055160
   1400552f9:	test   eax,eax
   1400552fb:	je     0x140055311
   1400552fd:	mov    QWORD PTR [rsp+0x20],r14
   140055302:	xor    r9d,r9d
   140055305:	xor    r8d,r8d
   140055308:	xor    edx,edx
   14005530a:	xor    ecx,ecx
   14005530c:	call   0x14004e060
   140055311:	lea    rcx,[rsp+0xa0]
   140055319:	call   0x1400551b0
   14005531e:	test   eax,eax
   140055320:	je     0x140055336
   140055322:	mov    QWORD PTR [rsp+0x20],r14
   140055327:	xor    r9d,r9d
   14005532a:	xor    r8d,r8d
   14005532d:	xor    edx,edx
   14005532f:	xor    ecx,ecx
   140055331:	call   0x14004e060
   140055336:	call   0x1400589f0
   14005533b:	mov    edi,eax
   14005533d:	mov    DWORD PTR [rip+0x381c8],r14d        # 0x14008d50c
   140055344:	mov    DWORD PTR [rip+0x32c82],0xffffffff        # 0x140087fd0
   14005534e:	mov    DWORD PTR [rip+0x32c68],0xffffffff        # 0x140087fc0
   140055358:	lea    rcx,[rip+0x19b99]        # 0x14006eef8
   14005535f:	call   0x14005ca30
   140055364:	mov    rbx,rax
   140055367:	mov    QWORD PTR [rsp+0x40],rax
   14005536c:	test   rax,rax
   14005536f:	je     0x140055425
   140055375:	cmp    BYTE PTR [rax],0x0
   140055378:	je     0x140055425
   14005537e:	mov    r8,QWORD PTR [rip+0x3818b]        # 0x14008d510
   140055385:	test   r8,r8
   140055388:	je     0x1400553b0
   14005538a:	mov    rdi,r8
   14005538d:	sub    rdi,rax
   140055390:	movzx  edx,BYTE PTR [rax]
   140055393:	movzx  ecx,BYTE PTR [rax+rdi*1]
   140055397:	sub    edx,ecx
   140055399:	jne    0x1400553a3
   14005539b:	add    rax,0x1
   14005539f:	test   ecx,ecx
   1400553a1:	jne    0x140055390
   1400553a3:	test   edx,edx
   1400553a5:	jne    0x1400553b0
   1400553a7:	lea    r12d,[rdx+0x1]
   1400553ab:	jmp    0x140055581
   1400553b0:	test   r8,r8
   1400553b3:	je     0x1400553bd
   1400553b5:	mov    rcx,r8
   1400553b8:	call   0x1400485c0
   1400553bd:	xor    eax,eax
   1400553bf:	or     rcx,0xffffffffffffffff
   1400553c3:	mov    rdi,rbx
   1400553c6:	repnz scas al,BYTE PTR es:[rdi]
   1400553c8:	not    rcx
   1400553cb:	call   0x14004de20
   1400553d0:	mov    r11,rax
   1400553d3:	mov    QWORD PTR [rip+0x38136],rax        # 0x14008d510
   1400553da:	test   rax,rax
   1400553dd:	jne    0x1400553e8
   1400553df:	lea    r12d,[rax+0x1]
   1400553e3:	jmp    0x140055581
   1400553e8:	xor    eax,eax
   1400553ea:	or     rcx,0xffffffffffffffff
   1400553ee:	mov    rdi,rbx
   1400553f1:	repnz scas al,BYTE PTR es:[rdi]
   1400553f3:	not    rcx
   1400553f6:	mov    r8,rbx
   1400553f9:	mov    rdx,rcx
   1400553fc:	mov    rcx,r11
   1400553ff:	call   0x1400579a0
   140055404:	test   eax,eax
   140055406:	je     0x140055581
   14005540c:	mov    QWORD PTR [rsp+0x20],r14
   140055411:	xor    r9d,r9d
   140055414:	xor    r8d,r8d
   140055417:	xor    edx,edx
   140055419:	xor    ecx,ecx
   14005541b:	call   0x14004e060
   140055420:	jmp    0x140055581
   140055425:	mov    rcx,QWORD PTR [rip+0x380e4]        # 0x14008d510
   14005542c:	test   rcx,rcx
   14005542f:	je     0x14005543d
   140055431:	call   0x1400485c0
   140055436:	mov    QWORD PTR [rip+0x380d3],r14        # 0x14008d510
   14005543d:	lea    rcx,[rip+0x3801c]        # 0x14008d460
   140055444:	call   QWORD PTR [rip+0xef36]        # 0x140064380
   14005544a:	cmp    eax,0xffffffff
   14005544d:	je     0x14005557b
   140055453:	mov    DWORD PTR [rip+0x380af],0x1        # 0x14008d50c
   14005545d:	mov    ecx,DWORD PTR [rip+0x37ffd]        # 0x14008d460
   140055463:	imul   ecx,ecx,0x3c
   140055466:	mov    DWORD PTR [rsp+0x90],ecx
   14005546d:	cmp    WORD PTR [rip+0x38031],0x0        # 0x14008d4a6
   140055475:	je     0x14005548d
   140055477:	mov    edx,DWORD PTR [rip+0x38037]        # 0x14008d4b4
   14005547d:	mov    eax,edx
   14005547f:	imul   eax,eax,0x3c
   140055482:	add    ecx,eax
   140055484:	mov    DWORD PTR [rsp+0x90],ecx
   14005548b:	jmp    0x140055493
   14005548d:	mov    edx,DWORD PTR [rip+0x38021]        # 0x14008d4b4
   140055493:	cmp    WORD PTR [rip+0x3805f],0x0        # 0x14008d4fa
   14005549b:	je     0x1400554c0
   14005549d:	mov    eax,DWORD PTR [rip+0x38065]        # 0x14008d508
   1400554a3:	test   eax,eax
   1400554a5:	je     0x1400554c0
   1400554a7:	mov    DWORD PTR [rsp+0x98],0x1
   1400554b2:	sub    eax,edx
   1400554b4:	imul   eax,eax,0x3c
   1400554b7:	mov    DWORD PTR [rsp+0xa0],eax
   1400554be:	jmp    0x1400554d0
   1400554c0:	mov    DWORD PTR [rsp+0x98],r14d
   1400554c8:	mov    DWORD PTR [rsp+0xa0],r14d
   1400554d0:	lea    rax,[rsp+0xa8]
   1400554d8:	mov    QWORD PTR [rsp+0x38],rax
   1400554dd:	mov    QWORD PTR [rsp+0x30],r14
   1400554e2:	mov    DWORD PTR [rsp+0x28],0x3f
   1400554ea:	mov    rax,QWORD PTR [rsi]
   1400554ed:	mov    QWORD PTR [rsp+0x20],rax
   1400554f2:	or     r9d,0xffffffff
   1400554f6:	lea    r8,[rip+0x37f67]        # 0x14008d464
   1400554fd:	xor    edx,edx
   1400554ff:	mov    ecx,edi
   140055501:	call   QWORD PTR [rip+0xefe9]        # 0x1400644f0
   140055507:	test   eax,eax
   140055509:	je     0x14005551e
   14005550b:	cmp    DWORD PTR [rsp+0xa8],0x0
   140055513:	jne    0x14005551e
   140055515:	mov    rax,QWORD PTR [rsi]
   140055518:	mov    BYTE PTR [rax+0x3f],0x0
   14005551c:	jmp    0x140055524
   14005551e:	mov    rax,QWORD PTR [rsi]
   140055521:	mov    BYTE PTR [rax],0x0
   140055524:	lea    rax,[rsp+0xa8]
   14005552c:	mov    QWORD PTR [rsp+0x38],rax
   140055531:	mov    QWORD PTR [rsp+0x30],r14
   140055536:	mov    DWORD PTR [rsp+0x28],0x3f
   14005553e:	mov    rax,QWORD PTR [rsi+0x8]
   140055542:	mov    QWORD PTR [rsp+0x20],rax
   140055547:	or     r9d,0xffffffff
   14005554b:	lea    r8,[rip+0x37f66]        # 0x14008d4b8
   140055552:	xor    edx,edx
   140055554:	mov    ecx,edi
   140055556:	call   QWORD PTR [rip+0xef94]        # 0x1400644f0
   14005555c:	test   eax,eax
   14005555e:	je     0x140055574
   140055560:	cmp    DWORD PTR [rsp+0xa8],0x0
   140055568:	jne    0x140055574
   14005556a:	mov    rax,QWORD PTR [rsi+0x8]
   14005556e:	mov    BYTE PTR [rax+0x3f],0x0
   140055572:	jmp    0x14005557b
   140055574:	mov    rax,QWORD PTR [rsi+0x8]
   140055578:	mov    BYTE PTR [rax],0x0
   14005557b:	mov    r12d,0x1
   140055581:	mov    edi,DWORD PTR [rsp+0x90]
   140055588:	call   0x140055270
   14005558d:	mov    DWORD PTR [rax],edi
   14005558f:	mov    edi,DWORD PTR [rsp+0x98]
   140055596:	call   0x140055250
   14005559b:	mov    DWORD PTR [rax],edi
   14005559d:	mov    edi,DWORD PTR [rsp+0xa0]
   1400555a4:	call   0x140055260
   1400555a9:	mov    DWORD PTR [rax],edi
   1400555ab:	mov    ecx,0x7
   1400555b0:	call   0x140052d10
   1400555b5:	test   r12d,r12d
   1400555b8:	jne    0x140055718
   1400555be:	lea    r9d,[r12+0x3]
   1400555c3:	mov    r8,rbx
   1400555c6:	lea    edx,[r12+0x40]
   1400555cb:	mov    rcx,QWORD PTR [rsi]
   1400555ce:	call   0x140057880
   1400555d3:	test   eax,eax
   1400555d5:	je     0x1400555eb
   1400555d7:	mov    QWORD PTR [rsp+0x20],r14
   1400555dc:	xor    r9d,r9d
   1400555df:	xor    r8d,r8d
   1400555e2:	xor    edx,edx
   1400555e4:	xor    ecx,ecx
   1400555e6:	call   0x14004e060
   1400555eb:	add    rbx,0x3
   1400555ef:	cmp    BYTE PTR [rbx],0x2d
   1400555f2:	jne    0x1400555fd
   1400555f4:	mov    r13d,0x1
   1400555fa:	add    rbx,r13
   1400555fd:	mov    rcx,rbx
   140055600:	call   0x14005ca20
   140055605:	mov    edx,eax
   140055607:	imul   edx,edx,0xe10
   14005560d:	mov    DWORD PTR [rsp+0x90],edx
   140055614:	movzx  eax,BYTE PTR [rbx]
   140055617:	cmp    al,0x2b
   140055619:	je     0x14005570f
   14005561f:	cmp    al,0x30
   140055621:	jl     0x14005562b
   140055623:	cmp    al,0x39
   140055625:	jle    0x14005570f
   14005562b:	cmp    BYTE PTR [rbx],0x3a
   14005562e:	jne    0x14005569e
   140055630:	add    rbx,0x1
   140055634:	mov    rcx,rbx
   140055637:	call   0x14005ca20
   14005563c:	imul   eax,eax,0x3c
   14005563f:	mov    edx,DWORD PTR [rsp+0x90]
   140055646:	add    edx,eax
   140055648:	mov    DWORD PTR [rsp+0x90],edx
   14005564f:	movzx  eax,BYTE PTR [rbx]
   140055652:	cmp    al,0x30
   140055654:	jl     0x140055664
   140055656:	cmp    al,0x39
   140055658:	jg     0x140055664
   14005565a:	add    rbx,0x1
   14005565e:	mov    al,BYTE PTR [rbx]
   140055660:	cmp    al,0x30
   140055662:	jge    0x140055656
   140055664:	cmp    BYTE PTR [rbx],0x3a
   140055667:	jne    0x14005569e
   140055669:	add    rbx,0x1
   14005566d:	mov    rcx,rbx
   140055670:	call   0x14005ca20
   140055675:	mov    edx,DWORD PTR [rsp+0x90]
   14005567c:	add    edx,eax
   14005567e:	mov    DWORD PTR [rsp+0x90],edx
   140055685:	movzx  eax,BYTE PTR [rbx]
   140055688:	cmp    al,0x30
   14005568a:	jl     0x14005569e
   14005568c:	data16 data16 xchg ax,ax
   140055690:	cmp    al,0x39
   140055692:	jg     0x14005569e
   140055694:	add    rbx,0x1
   140055698:	mov    al,BYTE PTR [rbx]
   14005569a:	cmp    al,0x30
   14005569c:	jge    0x140055690
   14005569e:	test   r13d,r13d
   1400556a1:	je     0x1400556ac
   1400556a3:	neg    edx
   1400556a5:	mov    DWORD PTR [rsp+0x90],edx
   1400556ac:	movsx  eax,BYTE PTR [rbx]
   1400556af:	mov    DWORD PTR [rsp+0x98],eax
   1400556b6:	test   eax,eax
   1400556b8:	je     0x1400556ea
   1400556ba:	mov    r9d,0x3
   1400556c0:	mov    r8,rbx
   1400556c3:	lea    edx,[r9+0x3d]
   1400556c7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400556cb:	call   0x140057880
   1400556d0:	test   eax,eax
   1400556d2:	je     0x1400556f1
   1400556d4:	mov    QWORD PTR [rsp+0x20],r14
   1400556d9:	xor    r9d,r9d
   1400556dc:	xor    r8d,r8d
   1400556df:	xor    edx,edx
   1400556e1:	xor    ecx,ecx
   1400556e3:	call   0x14004e060
   1400556e8:	jmp    0x1400556f1
   1400556ea:	mov    rax,QWORD PTR [rsi+0x8]
   1400556ee:	mov    BYTE PTR [rax],0x0
   1400556f1:	mov    edi,DWORD PTR [rsp+0x90]
   1400556f8:	call   0x140055270
   1400556fd:	mov    DWORD PTR [rax],edi
   1400556ff:	mov    edi,DWORD PTR [rsp+0x98]
   140055706:	call   0x140055250
   14005570b:	mov    DWORD PTR [rax],edi
   14005570d:	jmp    0x140055718
   14005570f:	add    rbx,0x1
   140055713:	jmp    0x140055614
   140055718:	add    rsp,0x58
   14005571c:	pop    r14
   14005571e:	pop    r13
   140055720:	pop    r12
   140055722:	pop    rdi
   140055723:	pop    rsi
   140055724:	pop    rbx
   140055725:	ret    
   140055726:	int3   
   140055727:	int3   
   140055728:	int3   
   140055729:	int3   
   14005572a:	int3   
   14005572b:	int3   
   14005572c:	int3   
   14005572d:	int3   
   14005572e:	int3   
   14005572f:	int3   
   140055730:	rex push rbp
   140055732:	sub    rsp,0x40
   140055736:	mov    rbp,rdx
   140055739:	mov    ecx,0x7
   14005573e:	call   0x140052d10
   140055743:	add    rsp,0x40
   140055747:	pop    rbp
   140055748:	ret    
   140055749:	int3   
   14005574a:	int3   
   14005574b:	int3   
   14005574c:	int3   
   14005574d:	int3   
   14005574e:	int3   
   14005574f:	int3   
   140055750:	rex push rbx
   140055752:	sub    rsp,0x30
   140055756:	cmp    edx,0x1
   140055759:	mov    QWORD PTR [rsp+0x48],rbp
   14005575e:	mov    QWORD PTR [rsp+0x50],rsi
   140055763:	mov    QWORD PTR [rsp+0x58],rdi
   140055768:	mov    ebx,r8d
   14005576b:	mov    ebp,ecx
   14005576d:	mov    DWORD PTR [rsp+0x40],0x0
   140055775:	jne    0x1400558f5
   14005577b:	mov    eax,ebx
   14005577d:	cdq    
   14005577e:	and    edx,0x3
   140055781:	lea    esi,[rdx+rax*1]
   140055784:	and    esi,0x3
   140055787:	sub    esi,edx
   140055789:	jne    0x1400557a3
   14005578b:	mov    eax,0x51eb851f
   140055790:	imul   ebx
   140055792:	sar    edx,0x5
   140055795:	mov    eax,edx
   140055797:	shr    eax,0x1f
   14005579a:	add    edx,eax
   14005579c:	imul   edx,edx,0x64
   14005579f:	cmp    ebx,edx
   1400557a1:	jne    0x1400557d9
   1400557a3:	lea    ecx,[r8+0x76c]
   1400557aa:	mov    eax,0x51eb851f
   1400557af:	imul   ecx
   1400557b1:	sar    edx,0x7
   1400557b4:	mov    eax,edx
   1400557b6:	shr    eax,0x1f
   1400557b9:	add    edx,eax
   1400557bb:	imul   edx,edx,0x190
   1400557c1:	cmp    ecx,edx
   1400557c3:	je     0x1400557d9
   1400557c5:	lea    r11,[rip+0xfffffffffffaa834]        # 0x140000000
   1400557cc:	movsxd rdi,r9d
   1400557cf:	mov    r10d,DWORD PTR [r11+rdi*4+0x88014]
   1400557d7:	jmp    0x1400557eb
   1400557d9:	lea    r11,[rip+0xfffffffffffaa820]        # 0x140000000
   1400557e0:	movsxd rdi,r9d
   1400557e3:	mov    r10d,DWORD PTR [r11+rdi*4+0x87fdc]
   1400557eb:	add    r8d,0xffffffff
   1400557ef:	lea    ecx,[rbx+0x12b]
   1400557f5:	mov    eax,0x51eb851f
   1400557fa:	add    r10d,0x1
   1400557fe:	imul   ecx
   140055800:	mov    r9d,edx
   140055803:	sar    r9d,0x7
   140055807:	mov    eax,r9d
   14005580a:	shr    eax,0x1f
   14005580d:	add    r9d,eax
   140055810:	mov    eax,0x51eb851f
   140055815:	imul   r8d
   140055818:	sar    edx,0x5
   14005581b:	mov    eax,edx
   14005581d:	shr    eax,0x1f
   140055820:	add    edx,eax
   140055822:	mov    eax,r8d
   140055825:	sub    r9d,edx
   140055828:	cdq    
   140055829:	and    edx,0x3
   14005582c:	add    eax,edx
   14005582e:	sar    eax,0x2
   140055831:	lea    ecx,[r10+rax*1]
   140055835:	mov    eax,ebx
   140055837:	add    ecx,r9d
   14005583a:	imul   eax,eax,0x16d
   140055840:	lea    r8d,[rax+rcx*1-0x63db]
   140055848:	mov    eax,0x92492493
   14005584d:	imul   r8d
   140055850:	add    edx,r8d
   140055853:	sar    edx,0x2
   140055856:	mov    eax,edx
   140055858:	shr    eax,0x1f
   14005585b:	add    edx,eax
   14005585d:	imul   edx,edx,0x7
   140055860:	sub    r8d,edx
   140055863:	mov    edx,DWORD PTR [rsp+0x68]
   140055867:	cmp    r8d,edx
   14005586a:	jg     0x140055881
   14005586c:	mov    ecx,DWORD PTR [rsp+0x60]
   140055870:	mov    eax,ecx
   140055872:	imul   eax,eax,0x7
   140055875:	sub    eax,r8d
   140055878:	add    eax,edx
   14005587a:	lea    r10d,[r10+rax*1-0x7]
   14005587f:	jmp    0x140055892
   140055881:	mov    ecx,DWORD PTR [rsp+0x60]
   140055885:	mov    eax,ecx
   140055887:	imul   eax,eax,0x7
   14005588a:	sub    eax,r8d
   14005588d:	add    eax,edx
   14005588f:	add    r10d,eax
   140055892:	cmp    ecx,0x5
   140055895:	jne    0x140055969
   14005589b:	test   esi,esi
   14005589d:	jne    0x1400558b7
   14005589f:	mov    eax,0x51eb851f
   1400558a4:	imul   ebx
   1400558a6:	sar    edx,0x5
   1400558a9:	mov    ecx,edx
   1400558ab:	shr    ecx,0x1f
   1400558ae:	add    edx,ecx
   1400558b0:	imul   edx,edx,0x64
   1400558b3:	cmp    ebx,edx
   1400558b5:	jne    0x1400558e2
   1400558b7:	lea    ecx,[rbx+0x76c]
   1400558bd:	mov    eax,0x51eb851f
   1400558c2:	imul   ecx
   1400558c4:	sar    edx,0x7
   1400558c7:	mov    eax,edx
   1400558c9:	shr    eax,0x1f
   1400558cc:	add    edx,eax
   1400558ce:	imul   edx,edx,0x190
   1400558d4:	cmp    ecx,edx
   1400558d6:	je     0x1400558e2
   1400558d8:	mov    eax,DWORD PTR [r11+rdi*4+0x88018]
   1400558e0:	jmp    0x1400558ea
   1400558e2:	mov    eax,DWORD PTR [r11+rdi*4+0x87fe0]
   1400558ea:	cmp    r10d,eax
   1400558ed:	jle    0x140055969
   1400558ef:	sub    r10d,0x7
   1400558f3:	jmp    0x140055969
   1400558f5:	mov    eax,ebx
   1400558f7:	cdq    
   1400558f8:	and    edx,0x3
   1400558fb:	add    eax,edx
   1400558fd:	and    eax,0x3
   140055900:	cmp    eax,edx
   140055902:	jne    0x14005591c
   140055904:	mov    eax,0x51eb851f
   140055909:	imul   ebx
   14005590b:	sar    edx,0x5
   14005590e:	mov    eax,edx
   140055910:	shr    eax,0x1f
   140055913:	add    edx,eax
   140055915:	imul   edx,edx,0x64
   140055918:	cmp    ebx,edx
   14005591a:	jne    0x140055952
   14005591c:	lea    ecx,[r8+0x76c]
   140055923:	mov    eax,0x51eb851f
   140055928:	imul   ecx
   14005592a:	sar    edx,0x7
   14005592d:	mov    eax,edx
   14005592f:	shr    eax,0x1f
   140055932:	add    edx,eax
   140055934:	imul   edx,edx,0x190
   14005593a:	cmp    ecx,edx
   14005593c:	je     0x140055952
   14005593e:	lea    r11,[rip+0xfffffffffffaa6bb]        # 0x140000000
   140055945:	movsxd rax,r9d
   140055948:	mov    r10d,DWORD PTR [r11+rax*4+0x88014]
   140055950:	jmp    0x140055964
   140055952:	lea    r11,[rip+0xfffffffffffaa6a7]        # 0x140000000
   140055959:	movsxd rax,r9d
   14005595c:	mov    r10d,DWORD PTR [r11+rax*4+0x87fdc]
   140055964:	add    r10d,DWORD PTR [rsp+0x70]
   140055969:	mov    rdi,QWORD PTR [rsp+0x58]
   14005596e:	mov    rsi,QWORD PTR [rsp+0x50]
   140055973:	cmp    ebp,0x1
   140055976:	mov    rbp,QWORD PTR [rsp+0x48]
   14005597b:	jne    0x1400559bb
   14005597d:	mov    eax,DWORD PTR [rsp+0x78]
   140055981:	mov    DWORD PTR [rip+0x3263c],r10d        # 0x140087fc4
   140055988:	mov    DWORD PTR [rip+0x32632],ebx        # 0x140087fc0
   14005598e:	imul   eax,eax,0x3c
   140055991:	add    eax,DWORD PTR [rsp+0x80]
   140055998:	imul   eax,eax,0x3c
   14005599b:	add    eax,DWORD PTR [rsp+0x88]
   1400559a2:	imul   eax,eax,0x3e8
   1400559a8:	add    eax,DWORD PTR [rsp+0x90]
   1400559af:	mov    DWORD PTR [rip+0x32613],eax        # 0x140087fc8
   1400559b5:	add    rsp,0x30
   1400559b9:	pop    rbx
   1400559ba:	ret    
   1400559bb:	mov    eax,DWORD PTR [rsp+0x78]
   1400559bf:	lea    rcx,[rsp+0x40]
   1400559c4:	mov    DWORD PTR [rip+0x32609],r10d        # 0x140087fd4
   1400559cb:	imul   eax,eax,0x3c
   1400559ce:	add    eax,DWORD PTR [rsp+0x80]
   1400559d5:	imul   eax,eax,0x3c
   1400559d8:	add    eax,DWORD PTR [rsp+0x88]
   1400559df:	imul   eax,eax,0x3e8
   1400559e5:	add    eax,DWORD PTR [rsp+0x90]
   1400559ec:	mov    DWORD PTR [rip+0x325e6],eax        # 0x140087fd8
   1400559f2:	call   0x1400551b0
   1400559f7:	test   eax,eax
   1400559f9:	je     0x140055a13
   1400559fb:	xor    r9d,r9d
   1400559fe:	xor    r8d,r8d
   140055a01:	xor    edx,edx
   140055a03:	xor    ecx,ecx
   140055a05:	mov    QWORD PTR [rsp+0x20],0x0
   140055a0e:	call   0x14004e060
   140055a13:	mov    ecx,DWORD PTR [rip+0x325bf]        # 0x140087fd8
   140055a19:	mov    eax,DWORD PTR [rsp+0x40]
   140055a1d:	imul   eax,eax,0x3e8
   140055a23:	add    ecx,eax
   140055a25:	mov    DWORD PTR [rip+0x325ad],ecx        # 0x140087fd8
   140055a2b:	jns    0x140055a4c
   140055a2d:	add    ecx,0x5265c00
   140055a33:	sub    DWORD PTR [rip+0x3259a],0x1        # 0x140087fd4
   140055a3a:	mov    DWORD PTR [rip+0x32590],ebx        # 0x140087fd0
   140055a40:	mov    DWORD PTR [rip+0x32592],ecx        # 0x140087fd8
   140055a46:	add    rsp,0x30
   140055a4a:	pop    rbx
   140055a4b:	ret    
   140055a4c:	cmp    ecx,0x5265c00
   140055a52:	jl     0x140055a67
   140055a54:	sub    ecx,0x5265c00
   140055a5a:	add    DWORD PTR [rip+0x32573],0x1        # 0x140087fd4
   140055a61:	mov    DWORD PTR [rip+0x32571],ecx        # 0x140087fd8
   140055a67:	mov    DWORD PTR [rip+0x32563],ebx        # 0x140087fd0
   140055a6d:	add    rsp,0x30
   140055a71:	pop    rbx
   140055a72:	ret    
   140055a73:	int3   
   140055a74:	int3   
   140055a75:	int3   
   140055a76:	int3   
   140055a77:	int3   
   140055a78:	int3   
   140055a79:	int3   
   140055a7a:	int3   
   140055a7b:	int3   
   140055a7c:	int3   
   140055a7d:	int3   
   140055a7e:	int3   
   140055a7f:	int3   
   140055a80:	mov    rax,rsp
   140055a83:	push   rbx
   140055a84:	push   rsi
   140055a85:	sub    rsp,0x78
   140055a89:	mov    rsi,rcx
   140055a8c:	lea    rcx,[rax+0x10]
   140055a90:	xor    ebx,ebx
   140055a92:	mov    DWORD PTR [rax+0x10],ebx
   140055a95:	call   0x140055160
   140055a9a:	test   eax,eax
   140055a9c:	je     0x140055ab2
   140055a9e:	xor    r9d,r9d
   140055aa1:	xor    r8d,r8d
   140055aa4:	xor    edx,edx
   140055aa6:	xor    ecx,ecx
   140055aa8:	mov    QWORD PTR [rsp+0x20],rbx
   140055aad:	call   0x14004e060
   140055ab2:	cmp    DWORD PTR [rsp+0x98],ebx
   140055ab9:	jne    0x140055ac4
   140055abb:	xor    eax,eax
   140055abd:	add    rsp,0x78
   140055ac1:	pop    rsi
   140055ac2:	pop    rbx
   140055ac3:	ret    
   140055ac4:	mov    QWORD PTR [rsp+0x90],rbp
   140055acc:	mov    QWORD PTR [rsp+0x70],rdi
   140055ad1:	mov    edi,DWORD PTR [rsi+0x14]
   140055ad4:	cmp    edi,DWORD PTR [rip+0x324e6]        # 0x140087fc0
   140055ada:	mov    QWORD PTR [rsp+0x68],r12
   140055adf:	mov    QWORD PTR [rsp+0x60],r13
   140055ae4:	jne    0x140055aff
   140055ae6:	cmp    edi,DWORD PTR [rip+0x324e4]        # 0x140087fd0
   140055aec:	jne    0x140055aff
   140055aee:	mov    ecx,DWORD PTR [rip+0x324e4]        # 0x140087fd8
   140055af4:	mov    eax,DWORD PTR [rip+0x324da]        # 0x140087fd4
   140055afa:	jmp    0x140055f62
   140055aff:	cmp    DWORD PTR [rip+0x37a07],ebx        # 0x14008d50c
   140055b05:	je     0x140055e22
   140055b0b:	cmp    WORD PTR [rip+0x379e6],bx        # 0x14008d4f8
   140055b12:	lea    r13,[rip+0xfffffffffffaa4e7]        # 0x140000000
   140055b19:	jne    0x140055b83
   140055b1b:	movzx  ecx,WORD PTR [rip+0x379e2]        # 0x14008d504
   140055b22:	movzx  edx,WORD PTR [rip+0x379d9]        # 0x14008d502
   140055b29:	movzx  r8d,WORD PTR [rip+0x379cd]        # 0x14008d4fe
   140055b31:	movzx  eax,WORD PTR [rip+0x379ce]        # 0x14008d506
   140055b38:	movzx  r10d,WORD PTR [rip+0x379c0]        # 0x14008d500
   140055b40:	movzx  r11d,WORD PTR [rip+0x379b4]        # 0x14008d4fc
   140055b48:	movzx  r9d,WORD PTR [rip+0x379aa]        # 0x14008d4fa
   140055b50:	mov    DWORD PTR [rsp+0x50],eax
   140055b54:	mov    DWORD PTR [rsp+0x48],ecx
   140055b58:	mov    DWORD PTR [rsp+0x40],edx
   140055b5c:	mov    DWORD PTR [rsp+0x38],r10d
   140055b61:	mov    DWORD PTR [rsp+0x30],ebx
   140055b65:	mov    edx,0x1
   140055b6a:	mov    DWORD PTR [rsp+0x28],r11d
   140055b6f:	mov    DWORD PTR [rsp+0x20],r8d
   140055b74:	mov    r8d,edi
   140055b77:	mov    ecx,edx
   140055b79:	call   0x140055750
   140055b7e:	jmp    0x140055c3e
   140055b83:	movzx  r10d,WORD PTR [rip+0x3797b]        # 0x14008d506
   140055b8b:	movzx  r11d,WORD PTR [rip+0x37971]        # 0x14008d504
   140055b93:	movzx  ebp,WORD PTR [rip+0x37968]        # 0x14008d502
   140055b9a:	movzx  r8d,WORD PTR [rip+0x3795e]        # 0x14008d500
   140055ba2:	movzx  r12d,WORD PTR [rip+0x37954]        # 0x14008d4fe
   140055baa:	movzx  r9d,WORD PTR [rip+0x37948]        # 0x14008d4fa
   140055bb2:	mov    eax,edi
   140055bb4:	cdq    
   140055bb5:	and    edx,0x3
   140055bb8:	add    eax,edx
   140055bba:	and    eax,0x3
   140055bbd:	cmp    eax,edx
   140055bbf:	jne    0x140055bd9
   140055bc1:	mov    eax,0x51eb851f
   140055bc6:	imul   edi
   140055bc8:	sar    edx,0x5
   140055bcb:	mov    eax,edx
   140055bcd:	shr    eax,0x1f
   140055bd0:	add    edx,eax
   140055bd2:	imul   edx,edx,0x64
   140055bd5:	cmp    edi,edx
   140055bd7:	jne    0x140055c07
   140055bd9:	lea    ecx,[rdi+0x76c]
   140055bdf:	mov    eax,0x51eb851f
   140055be4:	imul   ecx
   140055be6:	sar    edx,0x7
   140055be9:	mov    eax,edx
   140055beb:	shr    eax,0x1f
   140055bee:	add    edx,eax
   140055bf0:	imul   edx,edx,0x190
   140055bf6:	cmp    ecx,edx
   140055bf8:	je     0x140055c07
   140055bfa:	movsxd rax,r9d
   140055bfd:	mov    ecx,DWORD PTR [r13+rax*4+0x88014]
   140055c05:	jmp    0x140055c0f
   140055c07:	mov    ecx,DWORD PTR [r13+r9*4+0x87fdc]
   140055c0f:	imul   r8d,r8d,0x3c
   140055c13:	lea    eax,[rcx+r12*1]
   140055c17:	mov    DWORD PTR [rip+0x323a3],edi        # 0x140087fc0
   140055c1d:	add    r8d,ebp
   140055c20:	mov    DWORD PTR [rip+0x3239e],eax        # 0x140087fc4
   140055c26:	imul   r8d,r8d,0x3c
   140055c2a:	add    r8d,r11d
   140055c2d:	imul   r8d,r8d,0x3e8
   140055c34:	add    r8d,r10d
   140055c37:	mov    DWORD PTR [rip+0x3238a],r8d        # 0x140087fc8
   140055c3e:	cmp    WORD PTR [rip+0x3785f],bx        # 0x14008d4a4
   140055c45:	jne    0x140055cbc
   140055c47:	movzx  ecx,WORD PTR [rip+0x37862]        # 0x14008d4b0
   140055c4e:	movzx  edx,WORD PTR [rip+0x37859]        # 0x14008d4ae
   140055c55:	movzx  r8d,WORD PTR [rip+0x3784f]        # 0x14008d4ac
   140055c5d:	movzx  eax,WORD PTR [rip+0x3784e]        # 0x14008d4b2
   140055c64:	movzx  r10d,WORD PTR [rip+0x3783c]        # 0x14008d4a8
   140055c6c:	movzx  r11d,WORD PTR [rip+0x37836]        # 0x14008d4aa
   140055c74:	movzx  r9d,WORD PTR [rip+0x3782a]        # 0x14008d4a6
   140055c7c:	mov    DWORD PTR [rsp+0x50],eax
   140055c80:	mov    DWORD PTR [rsp+0x48],ecx
   140055c84:	mov    DWORD PTR [rsp+0x40],edx
   140055c88:	mov    DWORD PTR [rsp+0x38],r8d
   140055c8d:	mov    r8d,DWORD PTR [rsi+0x14]
   140055c91:	mov    DWORD PTR [rsp+0x30],ebx
   140055c95:	mov    DWORD PTR [rsp+0x28],r10d
   140055c9a:	mov    edx,0x1
   140055c9f:	xor    ecx,ecx
   140055ca1:	mov    DWORD PTR [rsp+0x20],r11d
   140055ca6:	call   0x140055750
   140055cab:	mov    ecx,DWORD PTR [rip+0x32327]        # 0x140087fd8
   140055cb1:	mov    eax,DWORD PTR [rip+0x3231d]        # 0x140087fd4
   140055cb7:	jmp    0x140055f62
   140055cbc:	mov    edi,DWORD PTR [rsi+0x14]
   140055cbf:	movzx  r10d,WORD PTR [rip+0x377eb]        # 0x14008d4b2
   140055cc7:	movzx  r11d,WORD PTR [rip+0x377e1]        # 0x14008d4b0
   140055ccf:	movzx  ebp,WORD PTR [rip+0x377d8]        # 0x14008d4ae
   140055cd6:	movzx  r8d,WORD PTR [rip+0x377ce]        # 0x14008d4ac
   140055cde:	movzx  r12d,WORD PTR [rip+0x377c4]        # 0x14008d4aa
   140055ce6:	movzx  r9d,WORD PTR [rip+0x377b8]        # 0x14008d4a6
   140055cee:	mov    eax,edi
   140055cf0:	mov    DWORD PTR [rsp+0xa0],ebx
   140055cf7:	cdq    
   140055cf8:	and    edx,0x3
   140055cfb:	add    eax,edx
   140055cfd:	and    eax,0x3
   140055d00:	cmp    eax,edx
   140055d02:	jne    0x140055d1c
   140055d04:	mov    eax,0x51eb851f
   140055d09:	imul   edi
   140055d0b:	sar    edx,0x5
   140055d0e:	mov    eax,edx
   140055d10:	shr    eax,0x1f
   140055d13:	add    edx,eax
   140055d15:	imul   edx,edx,0x64
   140055d18:	cmp    edi,edx
   140055d1a:	jne    0x140055d4a
   140055d1c:	lea    ecx,[rdi+0x76c]
   140055d22:	mov    eax,0x51eb851f
   140055d27:	imul   ecx
   140055d29:	sar    edx,0x7
   140055d2c:	mov    eax,edx
   140055d2e:	shr    eax,0x1f
   140055d31:	add    edx,eax
   140055d33:	imul   edx,edx,0x190
   140055d39:	cmp    ecx,edx
   140055d3b:	je     0x140055d4a
   140055d3d:	movsxd rax,r9d
   140055d40:	mov    ecx,DWORD PTR [r13+rax*4+0x88014]
   140055d48:	jmp    0x140055d52
   140055d4a:	mov    ecx,DWORD PTR [r13+r9*4+0x87fdc]
   140055d52:	imul   r8d,r8d,0x3c
   140055d56:	lea    eax,[rcx+r12*1]
   140055d5a:	lea    rcx,[rsp+0xa0]
   140055d62:	add    r8d,ebp
   140055d65:	mov    DWORD PTR [rip+0x32269],eax        # 0x140087fd4
   140055d6b:	imul   r8d,r8d,0x3c
   140055d6f:	add    r8d,r11d
   140055d72:	imul   r8d,r8d,0x3e8
   140055d79:	add    r8d,r10d
   140055d7c:	mov    DWORD PTR [rip+0x32255],r8d        # 0x140087fd8
   140055d83:	call   0x1400551b0
   140055d88:	test   eax,eax
   140055d8a:	je     0x140055da0
   140055d8c:	xor    r9d,r9d
   140055d8f:	xor    r8d,r8d
   140055d92:	xor    edx,edx
   140055d94:	xor    ecx,ecx
   140055d96:	mov    QWORD PTR [rsp+0x20],rbx
   140055d9b:	call   0x14004e060
   140055da0:	mov    ecx,DWORD PTR [rip+0x32232]        # 0x140087fd8
   140055da6:	mov    eax,DWORD PTR [rsp+0xa0]
   140055dad:	imul   eax,eax,0x3e8
   140055db3:	add    ecx,eax
   140055db5:	mov    DWORD PTR [rip+0x3221d],ecx        # 0x140087fd8
   140055dbb:	jns    0x140055de3
   140055dbd:	mov    eax,DWORD PTR [rip+0x32211]        # 0x140087fd4
   140055dc3:	add    ecx,0x5265c00
   140055dc9:	mov    DWORD PTR [rip+0x32201],edi        # 0x140087fd0
   140055dcf:	sub    eax,0x1
   140055dd2:	mov    DWORD PTR [rip+0x32200],ecx        # 0x140087fd8
   140055dd8:	mov    DWORD PTR [rip+0x321f6],eax        # 0x140087fd4
   140055dde:	jmp    0x140055f62
   140055de3:	cmp    ecx,0x5265c00
   140055de9:	jl     0x140055e11
   140055deb:	mov    eax,DWORD PTR [rip+0x321e3]        # 0x140087fd4
   140055df1:	sub    ecx,0x5265c00
   140055df7:	mov    DWORD PTR [rip+0x321d3],edi        # 0x140087fd0
   140055dfd:	add    eax,0x1
   140055e00:	mov    DWORD PTR [rip+0x321d2],ecx        # 0x140087fd8
   140055e06:	mov    DWORD PTR [rip+0x321c8],eax        # 0x140087fd4
   140055e0c:	jmp    0x140055f62
   140055e11:	mov    eax,DWORD PTR [rip+0x321bd]        # 0x140087fd4
   140055e17:	mov    DWORD PTR [rip+0x321b3],edi        # 0x140087fd0
   140055e1d:	jmp    0x140055f62
   140055e22:	mov    eax,edi
   140055e24:	cdq    
   140055e25:	and    edx,0x3
   140055e28:	add    eax,edx
   140055e2a:	and    eax,0x3
   140055e2d:	cmp    eax,edx
   140055e2f:	jne    0x140055e49
   140055e31:	mov    eax,0x51eb851f
   140055e36:	imul   edi
   140055e38:	sar    edx,0x5
   140055e3b:	mov    eax,edx
   140055e3d:	shr    eax,0x1f
   140055e40:	add    edx,eax
   140055e42:	imul   edx,edx,0x64
   140055e45:	cmp    edi,edx
   140055e47:	jne    0x140055e73
   140055e49:	lea    ecx,[rdi+0x76c]
   140055e4f:	mov    eax,0x51eb851f
   140055e54:	imul   ecx
   140055e56:	sar    edx,0x7
   140055e59:	mov    eax,edx
   140055e5b:	shr    eax,0x1f
   140055e5e:	add    edx,eax
   140055e60:	imul   edx,edx,0x190
   140055e66:	cmp    ecx,edx
   140055e68:	je     0x140055e73
   140055e6a:	mov    r10d,DWORD PTR [rip+0x321b3]        # 0x140088024
   140055e71:	jmp    0x140055e7a
   140055e73:	mov    r10d,DWORD PTR [rip+0x32172]        # 0x140087fec
   140055e7a:	lea    r8d,[rdi-0x1]
   140055e7e:	lea    ecx,[rdi+0x12b]
   140055e84:	mov    eax,0x51eb851f
   140055e89:	add    r10d,0x1
   140055e8d:	imul   ecx
   140055e8f:	mov    r9d,edx
   140055e92:	sar    r9d,0x7
   140055e96:	mov    eax,r9d
   140055e99:	shr    eax,0x1f
   140055e9c:	add    r9d,eax
   140055e9f:	mov    eax,0x51eb851f
   140055ea4:	imul   r8d
   140055ea7:	sar    edx,0x5
   140055eaa:	mov    eax,edx
   140055eac:	shr    eax,0x1f
   140055eaf:	add    edx,eax
   140055eb1:	mov    eax,r8d
   140055eb4:	sub    r9d,edx
   140055eb7:	cdq    
   140055eb8:	and    edx,0x3
   140055ebb:	add    eax,edx
   140055ebd:	sar    eax,0x2
   140055ec0:	lea    ecx,[r10+rax*1]
   140055ec4:	mov    eax,edi
   140055ec6:	add    ecx,r9d
   140055ec9:	imul   eax,eax,0x16d
   140055ecf:	lea    r8d,[rax+rcx*1-0x63db]
   140055ed7:	mov    eax,0x92492493
   140055edc:	imul   r8d
   140055edf:	add    edx,r8d
   140055ee2:	sar    edx,0x2
   140055ee5:	mov    eax,edx
   140055ee7:	shr    eax,0x1f
   140055eea:	add    edx,eax
   140055eec:	imul   edx,edx,0x7
   140055eef:	sub    r8d,edx
   140055ef2:	test   r8d,r8d
   140055ef5:	jg     0x140055efc
   140055ef7:	sub    r10d,r8d
   140055efa:	jmp    0x140055f07
   140055efc:	mov    eax,0x7
   140055f01:	sub    eax,r8d
   140055f04:	add    r10d,eax
   140055f07:	mov    DWORD PTR [rsp+0x50],ebx
   140055f0b:	mov    DWORD PTR [rsp+0x48],ebx
   140055f0f:	mov    DWORD PTR [rsp+0x40],ebx
   140055f13:	mov    DWORD PTR [rsp+0x38],0x2
   140055f1b:	mov    r9d,0xa
   140055f21:	mov    DWORD PTR [rsp+0x30],ebx
   140055f25:	lea    edx,[r9-0x9]
   140055f29:	mov    r8d,edi
   140055f2c:	xor    ecx,ecx
   140055f2e:	mov    DWORD PTR [rsp+0x28],ebx
   140055f32:	mov    DWORD PTR [rip+0x3208b],r10d        # 0x140087fc4
   140055f39:	mov    DWORD PTR [rip+0x32085],0x6ddd00        # 0x140087fc8
   140055f43:	mov    DWORD PTR [rip+0x32077],edi        # 0x140087fc0
   140055f49:	mov    DWORD PTR [rsp+0x20],0x5
   140055f51:	call   0x140055750
   140055f56:	mov    ecx,DWORD PTR [rip+0x3207c]        # 0x140087fd8
   140055f5c:	mov    eax,DWORD PTR [rip+0x32072]        # 0x140087fd4
   140055f62:	mov    r8d,DWORD PTR [rip+0x3205b]        # 0x140087fc4
   140055f69:	mov    r13,QWORD PTR [rsp+0x60]
   140055f6e:	mov    r12,QWORD PTR [rsp+0x68]
   140055f73:	cmp    r8d,eax
   140055f76:	mov    rdi,QWORD PTR [rsp+0x70]
   140055f7b:	mov    rbp,QWORD PTR [rsp+0x90]
   140055f83:	jge    0x140055fae
   140055f85:	mov    edx,DWORD PTR [rsi+0x1c]
   140055f88:	cmp    edx,r8d
   140055f8b:	jl     0x140055abb
   140055f91:	cmp    edx,eax
   140055f93:	jg     0x140055abb
   140055f99:	cmp    edx,r8d
   140055f9c:	jle    0x140055fc7
   140055f9e:	cmp    edx,eax
   140055fa0:	jge    0x140055fc7
   140055fa2:	mov    eax,0x1
   140055fa7:	add    rsp,0x78
   140055fab:	pop    rsi
   140055fac:	pop    rbx
   140055fad:	ret    
   140055fae:	mov    edx,DWORD PTR [rsi+0x1c]
   140055fb1:	cmp    edx,eax
   140055fb3:	jl     0x140055fa2
   140055fb5:	cmp    edx,r8d
   140055fb8:	jg     0x140055fa2
   140055fba:	cmp    edx,eax
   140055fbc:	jle    0x140055fc7
   140055fbe:	cmp    edx,r8d
   140055fc1:	jl     0x140055abb
   140055fc7:	mov    eax,DWORD PTR [rsi+0x8]
   140055fca:	imul   eax,eax,0x3c
   140055fcd:	add    eax,DWORD PTR [rsi+0x4]
   140055fd0:	imul   eax,eax,0x3c
   140055fd3:	add    eax,DWORD PTR [rsi]
   140055fd5:	imul   eax,eax,0x3e8
   140055fdb:	cmp    edx,r8d
   140055fde:	jne    0x140055ff2
   140055fe0:	cmp    eax,DWORD PTR [rip+0x31fe2]        # 0x140087fc8
   140055fe6:	setge  bl
   140055fe9:	mov    eax,ebx
   140055feb:	add    rsp,0x78
   140055fef:	pop    rsi
   140055ff0:	pop    rbx
   140055ff1:	ret    
   140055ff2:	cmp    eax,ecx
   140055ff4:	setl   bl
   140055ff7:	mov    eax,ebx
   140055ff9:	add    rsp,0x78
   140055ffd:	pop    rsi
   140055ffe:	pop    rbx
   140055fff:	ret    
   140056000:	sub    rsp,0x28
   140056004:	cmp    DWORD PTR [rip+0x3750d],0x0        # 0x14008d518
   14005600b:	jne    0x140056037
   14005600d:	mov    ecx,0x6
   140056012:	call   0x140052e40
   140056017:	nop
   140056018:	cmp    DWORD PTR [rip+0x374f9],0x0        # 0x14008d518
   14005601f:	jne    0x14005602d
   140056021:	call   0x140055290
   140056026:	add    DWORD PTR [rip+0x374eb],0x1        # 0x14008d518
   14005602d:	mov    ecx,0x6
   140056032:	call   0x140052d10
   140056037:	add    rsp,0x28
   14005603b:	ret    
   14005603c:	int3   
   14005603d:	int3   
   14005603e:	int3   
   14005603f:	int3   
   140056040:	rex push rbp
   140056042:	sub    rsp,0x20
   140056046:	mov    rbp,rdx
   140056049:	mov    ecx,0x6
   14005604e:	call   0x140052d10
   140056053:	add    rsp,0x20
   140056057:	pop    rbp
   140056058:	ret    
   140056059:	int3   
   14005605a:	int3   
   14005605b:	int3   
   14005605c:	int3   
   14005605d:	int3   
   14005605e:	int3   
   14005605f:	int3   
   140056060:	rex push rbx
   140056062:	sub    rsp,0x20
   140056066:	mov    rbx,rcx
   140056069:	mov    ecx,0x6
   14005606e:	call   0x140052e40
   140056073:	nop
   140056074:	mov    rcx,rbx
   140056077:	call   0x140055a80
   14005607c:	mov    ebx,eax
   14005607e:	mov    ecx,0x6
   140056083:	call   0x140052d10
   140056088:	mov    eax,ebx
   14005608a:	add    rsp,0x20
   14005608e:	pop    rbx
   14005608f:	ret    
   140056090:	rex push rbp
   140056092:	sub    rsp,0x20
   140056096:	mov    rbp,rdx
   140056099:	mov    ecx,0x6
   14005609e:	call   0x140052d10
   1400560a3:	add    rsp,0x20
   1400560a7:	pop    rbp
   1400560a8:	ret    
   1400560a9:	int3   
   1400560aa:	int3   
   1400560ab:	int3   
   1400560ac:	int3   
   1400560ad:	int3   
   1400560ae:	int3   
   1400560af:	int3   
   1400560b0:	mov    QWORD PTR [rsp+0x20],rbx
   1400560b5:	push   rbp
   1400560b6:	push   rsi
   1400560b7:	push   rdi
   1400560b8:	sub    rsp,0x50
   1400560bc:	mov    rax,QWORD PTR [rip+0x30cad]        # 0x140086d70
   1400560c3:	xor    rax,rsp
   1400560c6:	mov    QWORD PTR [rsp+0x40],rax
   1400560cb:	test   ecx,ecx
   1400560cd:	mov    ebp,r8d
   1400560d0:	mov    rbx,rdx
   1400560d3:	mov    edi,ecx
   1400560d5:	je     0x140056111
   1400560d7:	call   0x14005cc10
   1400560dc:	test   eax,eax
   1400560de:	jne    0x140056118
   1400560e0:	call   0x1400486b0
   1400560e5:	mov    DWORD PTR [rax],0xf
   1400560eb:	call   0x140048680
   1400560f0:	xor    esi,esi
   1400560f2:	xor    r9d,r9d
   1400560f5:	xor    r8d,r8d
   1400560f8:	xor    edx,edx
   1400560fa:	xor    ecx,ecx
   1400560fc:	mov    DWORD PTR [rax],0xd
   140056102:	mov    QWORD PTR [rsp+0x20],rsi
   140056107:	call   0x14004e100
   14005610c:	jmp    0x140056219
   140056111:	call   0x14005cb10
   140056116:	mov    edi,eax
   140056118:	test   rbx,rbx
   14005611b:	je     0x140056150
   14005611d:	test   ebp,ebp
   14005611f:	jg     0x140056147
   140056121:	call   0x140048680
   140056126:	xor    esi,esi
   140056128:	xor    r9d,r9d
   14005612b:	xor    r8d,r8d
   14005612e:	xor    edx,edx
   140056130:	xor    ecx,ecx
   140056132:	mov    DWORD PTR [rax],0x16
   140056138:	mov    QWORD PTR [rsp+0x20],rsi
   14005613d:	call   0x14004e100
   140056142:	jmp    0x140056219
   140056147:	mov    esi,ebp
   140056149:	mov    WORD PTR [rbx],0x0
   14005614e:	jmp    0x140056152
   140056150:	xor    esi,esi
   140056152:	test   edi,edi
   140056154:	je     0x140056176
   140056156:	add    di,0x40
   14005615a:	mov    WORD PTR [rsp+0x3a],0x3a
   140056161:	mov    WORD PTR [rsp+0x3c],0x2e
   140056168:	mov    WORD PTR [rsp+0x38],di
   14005616d:	mov    WORD PTR [rsp+0x3e],0x0
   140056174:	jmp    0x140056184
   140056176:	mov    WORD PTR [rsp+0x38],0x2e
   14005617d:	mov    WORD PTR [rsp+0x3a],0x0
   140056184:	lea    r9,[rsp+0x30]
   140056189:	lea    rcx,[rsp+0x38]
   14005618e:	mov    r8,rbx
   140056191:	mov    edx,esi
   140056193:	call   QWORD PTR [rip+0xe04f]        # 0x1400641e8
   140056199:	test   eax,eax
   14005619b:	je     0x14005620c
   14005619d:	test   rbx,rbx
   1400561a0:	je     0x1400561bd
   1400561a2:	cmp    eax,esi
   1400561a4:	jge    0x1400561ab
   1400561a6:	mov    rax,rbx
   1400561a9:	jmp    0x14005621b
   1400561ab:	call   0x140048680
   1400561b0:	mov    DWORD PTR [rax],0x22
   1400561b6:	mov    WORD PTR [rbx],0x0
   1400561bb:	jmp    0x140056219
   1400561bd:	cmp    eax,ebp
   1400561bf:	mov    edx,0x2
   1400561c4:	cmovg  ebp,eax
   1400561c7:	movsxd rcx,ebp
   1400561ca:	call   0x140048c80
   1400561cf:	test   rax,rax
   1400561d2:	mov    rbx,rax
   1400561d5:	jne    0x1400561ef
   1400561d7:	call   0x140048680
   1400561dc:	mov    DWORD PTR [rax],0xc
   1400561e2:	call   0x1400486b0
   1400561e7:	mov    DWORD PTR [rax],0x8
   1400561ed:	jmp    0x140056219
   1400561ef:	lea    r9,[rsp+0x30]
   1400561f4:	lea    rcx,[rsp+0x38]
   1400561f9:	mov    r8,rax
   1400561fc:	mov    edx,ebp
   1400561fe:	call   QWORD PTR [rip+0xdfe4]        # 0x1400641e8
   140056204:	test   eax,eax
   140056206:	je     0x14005620c
   140056208:	cmp    eax,ebp
   14005620a:	jl     0x1400561a6
   14005620c:	call   QWORD PTR [rip+0xe3ee]        # 0x140064600
   140056212:	mov    ecx,eax
   140056214:	call   0x1400486e0
   140056219:	xor    eax,eax
   14005621b:	mov    rcx,QWORD PTR [rsp+0x40]
   140056220:	xor    rcx,rsp
   140056223:	call   0x140046470
   140056228:	mov    rbx,QWORD PTR [rsp+0x88]
   140056230:	add    rsp,0x50
   140056234:	pop    rdi
   140056235:	pop    rsi
   140056236:	pop    rbp
   140056237:	ret    
   140056238:	int3   
   140056239:	int3   
   14005623a:	int3   
   14005623b:	int3   
   14005623c:	int3   
   14005623d:	int3   
   14005623e:	int3   
   14005623f:	int3   
   140056240:	mov    QWORD PTR [rsp+0x8],rbx
   140056245:	push   rdi
   140056246:	sub    rsp,0x20
   14005624a:	mov    ebx,edx
   14005624c:	mov    rdi,rcx
   14005624f:	mov    ecx,0x7
   140056254:	call   0x140052e40
   140056259:	nop
   14005625a:	mov    r8d,ebx
   14005625d:	mov    rdx,rdi
   140056260:	xor    ecx,ecx
   140056262:	call   0x1400560b0
   140056267:	mov    rbx,rax
   14005626a:	mov    ecx,0x7
   14005626f:	call   0x140052d10
   140056274:	mov    rax,rbx
   140056277:	mov    rbx,QWORD PTR [rsp+0x30]
   14005627c:	add    rsp,0x20
   140056280:	pop    rdi
   140056281:	ret    
   140056282:	int3   
   140056283:	int3   
   140056284:	int3   
   140056285:	int3   
   140056286:	int3   
   140056287:	int3   
   140056288:	int3   
   140056289:	int3   
   14005628a:	int3   
   14005628b:	int3   
   14005628c:	int3   
   14005628d:	int3   
   14005628e:	int3   
   14005628f:	int3   
   140056290:	rex push rbp
   140056292:	sub    rsp,0x20
   140056296:	mov    rbp,rdx
   140056299:	mov    ecx,0x7
   14005629e:	call   0x140052d10
   1400562a3:	add    rsp,0x20
   1400562a7:	pop    rbp
   1400562a8:	ret    
   1400562a9:	int3   
   1400562aa:	int3   
   1400562ab:	int3   
   1400562ac:	int3   
   1400562ad:	int3   
   1400562ae:	int3   
   1400562af:	int3   
   1400562b0:	rex push rdi
   1400562b2:	sub    rsp,0x40
   1400562b6:	mov    QWORD PTR [rsp+0x50],rbx
   1400562bb:	mov    QWORD PTR [rsp+0x58],rbp
   1400562c0:	xor    bpl,bpl
   1400562c3:	test   rdx,rdx
   1400562c6:	mov    QWORD PTR [rsp+0x68],r12
   1400562cb:	mov    rbx,rcx
   1400562ce:	mov    BYTE PTR [rsp+0x38],bpl
   1400562d3:	jne    0x140056349
   1400562d5:	mov    QWORD PTR [rsp+0x60],rsi
   1400562da:	call   0x14004bd60
   1400562df:	mov    r12,QWORD PTR [rax+0xc0]
   1400562e6:	mov    rsi,QWORD PTR [rax+0xb8]
   1400562ed:	mov    rdi,rax
   1400562f0:	cmp    r12,QWORD PTR [rip+0x315a9]        # 0x1400878a0
   1400562f7:	je     0x14005630f
   1400562f9:	mov    edx,DWORD PTR [rax+0xc8]
   1400562ff:	test   DWORD PTR [rip+0x31423],edx        # 0x140087728
   140056305:	jne    0x14005630f
   140056307:	call   0x14004f030
   14005630c:	mov    r12,rax
   14005630f:	cmp    rsi,QWORD PTR [rip+0x3130a]        # 0x140087620
   140056316:	mov    rsi,QWORD PTR [rsp+0x60]
   14005631b:	je     0x140056330
   14005631d:	mov    ecx,DWORD PTR [rdi+0xc8]
   140056323:	test   DWORD PTR [rip+0x313ff],ecx        # 0x140087728
   140056329:	jne    0x140056330
   14005632b:	call   0x14004e4e0
   140056330:	mov    ecx,DWORD PTR [rdi+0xc8]
   140056336:	test   cl,0x2
   140056339:	jne    0x14005636b
   14005633b:	or     ecx,0x2
   14005633e:	mov    bpl,0x1
   140056341:	mov    DWORD PTR [rdi+0xc8],ecx
   140056347:	jmp    0x14005636b
   140056349:	mov    rax,QWORD PTR [rdx]
   14005634c:	lea    rcx,[rsp+0x20]
   140056351:	mov    QWORD PTR [rcx],rax
   140056354:	mov    rax,QWORD PTR [rdx+0x8]
   140056358:	mov    QWORD PTR [rcx+0x8],rax
   14005635c:	movzx  ebp,BYTE PTR [rsp+0x38]
   140056361:	mov    rdi,QWORD PTR [rsp+0x30]
   140056366:	mov    r12,QWORD PTR [rsp+0x20]
   14005636b:	movsx  ecx,BYTE PTR [rbx]
   14005636e:	call   0x14005cf00
   140056373:	cmp    eax,0x65
   140056376:	je     0x140056391
   140056378:	data16 data16 xchg ax,ax
   14005637c:	data16 data16 xchg ax,ax
   140056380:	movzx  ecx,BYTE PTR [rbx+0x1]
   140056384:	add    rbx,0x1
   140056388:	call   0x14005bdb0
   14005638d:	test   eax,eax
   14005638f:	jne    0x140056380
   140056391:	movsx  ecx,BYTE PTR [rbx]
   140056394:	call   0x14005cf00
   140056399:	cmp    eax,0x78
   14005639c:	jne    0x1400563a2
   14005639e:	add    rbx,0x2
   1400563a2:	mov    rax,QWORD PTR [r12+0x128]
   1400563aa:	movzx  edx,BYTE PTR [rbx]
   1400563ad:	mov    r12,QWORD PTR [rsp+0x68]
   1400563b2:	mov    rcx,QWORD PTR [rax]
   1400563b5:	add    rbx,0x1
   1400563b9:	movzx  eax,BYTE PTR [rcx]
   1400563bc:	mov    BYTE PTR [rbx-0x1],al
   1400563bf:	nop
   1400563c0:	movzx  eax,BYTE PTR [rbx]
   1400563c3:	mov    BYTE PTR [rbx],dl
   1400563c5:	add    rbx,0x1
   1400563c9:	mov    dl,al
   1400563cb:	movzx  eax,BYTE PTR [rbx-0x1]
   1400563cf:	test   al,al
   1400563d1:	jne    0x1400563c0
   1400563d3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400563d8:	test   bpl,bpl
   1400563db:	mov    rbp,QWORD PTR [rsp+0x58]
   1400563e0:	je     0x1400563e9
   1400563e2:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   1400563e9:	add    rsp,0x40
   1400563ed:	pop    rdi
   1400563ee:	ret    
   1400563ef:	int3   
   1400563f0:	rex push rdi
   1400563f2:	sub    rsp,0x40
   1400563f6:	mov    QWORD PTR [rsp+0x50],rbx
   1400563fb:	mov    QWORD PTR [rsp+0x58],rbp
   140056400:	mov    QWORD PTR [rsp+0x68],r12
   140056405:	xor    r12b,r12b
   140056408:	test   rdx,rdx
   14005640b:	mov    rbx,rcx
   14005640e:	mov    BYTE PTR [rsp+0x38],r12b
   140056413:	jne    0x140056489
   140056415:	mov    QWORD PTR [rsp+0x60],rsi
   14005641a:	call   0x14004bd60
   14005641f:	mov    rbp,QWORD PTR [rax+0xc0]
   140056426:	mov    rsi,QWORD PTR [rax+0xb8]
   14005642d:	mov    rdi,rax
   140056430:	cmp    rbp,QWORD PTR [rip+0x31469]        # 0x1400878a0
   140056437:	je     0x14005644f
   140056439:	mov    edx,DWORD PTR [rax+0xc8]
   14005643f:	test   DWORD PTR [rip+0x312e3],edx        # 0x140087728
   140056445:	jne    0x14005644f
   140056447:	call   0x14004f030
   14005644c:	mov    rbp,rax
   14005644f:	cmp    rsi,QWORD PTR [rip+0x311ca]        # 0x140087620
   140056456:	mov    rsi,QWORD PTR [rsp+0x60]
   14005645b:	je     0x140056470
   14005645d:	mov    ecx,DWORD PTR [rdi+0xc8]
   140056463:	test   DWORD PTR [rip+0x312bf],ecx        # 0x140087728
   140056469:	jne    0x140056470
   14005646b:	call   0x14004e4e0
   140056470:	mov    ecx,DWORD PTR [rdi+0xc8]
   140056476:	test   cl,0x2
   140056479:	jne    0x1400564ac
   14005647b:	or     ecx,0x2
   14005647e:	mov    r12b,0x1
   140056481:	mov    DWORD PTR [rdi+0xc8],ecx
   140056487:	jmp    0x1400564ac
   140056489:	mov    rax,QWORD PTR [rdx]
   14005648c:	lea    rcx,[rsp+0x20]
   140056491:	mov    QWORD PTR [rcx],rax
   140056494:	mov    rax,QWORD PTR [rdx+0x8]
   140056498:	mov    QWORD PTR [rcx+0x8],rax
   14005649c:	movzx  r12d,BYTE PTR [rsp+0x38]
   1400564a2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400564a7:	mov    rbp,QWORD PTR [rsp+0x20]
   1400564ac:	movzx  edx,BYTE PTR [rbx]
   1400564af:	test   dl,dl
   1400564b1:	je     0x1400564cf
   1400564b3:	mov    rax,QWORD PTR [rbp+0x128]
   1400564ba:	mov    rcx,QWORD PTR [rax]
   1400564bd:	movzx  eax,BYTE PTR [rcx]
   1400564c0:	cmp    dl,al
   1400564c2:	je     0x1400564cf
   1400564c4:	mov    dl,BYTE PTR [rbx+0x1]
   1400564c7:	add    rbx,0x1
   1400564cb:	test   dl,dl
   1400564cd:	jne    0x1400564c0
   1400564cf:	movzx  eax,BYTE PTR [rbx]
   1400564d2:	add    rbx,0x1
   1400564d6:	test   al,al
   1400564d8:	je     0x140056531
   1400564da:	movzx  eax,BYTE PTR [rbx]
   1400564dd:	test   al,al
   1400564df:	je     0x1400564f4
   1400564e1:	cmp    al,0x65
   1400564e3:	je     0x1400564f4
   1400564e5:	cmp    al,0x45
   1400564e7:	je     0x1400564f4
   1400564e9:	mov    al,BYTE PTR [rbx+0x1]
   1400564ec:	add    rbx,0x1
   1400564f0:	test   al,al
   1400564f2:	jne    0x1400564e1
   1400564f4:	mov    rdx,rbx
   1400564f7:	sub    rbx,0x1
   1400564fb:	cmp    BYTE PTR [rbx],0x30
   1400564fe:	jne    0x140056509
   140056500:	sub    rbx,0x1
   140056504:	cmp    BYTE PTR [rbx],0x30
   140056507:	je     0x140056500
   140056509:	mov    rax,QWORD PTR [rbp+0x128]
   140056510:	mov    rcx,QWORD PTR [rax]
   140056513:	movzx  eax,BYTE PTR [rcx]
   140056516:	cmp    BYTE PTR [rbx],al
   140056518:	jne    0x140056520
   14005651a:	sub    rbx,0x1
   14005651e:	xchg   ax,ax
   140056520:	movzx  eax,BYTE PTR [rdx]
   140056523:	add    rbx,0x1
   140056527:	add    rdx,0x1
   14005652b:	test   al,al
   14005652d:	mov    BYTE PTR [rbx],al
   14005652f:	jne    0x140056520
   140056531:	mov    rbp,QWORD PTR [rsp+0x58]
   140056536:	mov    rbx,QWORD PTR [rsp+0x50]
   14005653b:	test   r12b,r12b
   14005653e:	mov    r12,QWORD PTR [rsp+0x68]
   140056543:	je     0x14005654c
   140056545:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   14005654c:	add    rsp,0x40
   140056550:	pop    rdi
   140056551:	ret    
   140056552:	int3   
   140056553:	int3   
   140056554:	int3   
   140056555:	int3   
   140056556:	int3   
   140056557:	int3   
   140056558:	int3   
   140056559:	int3   
   14005655a:	int3   
   14005655b:	int3   
   14005655c:	int3   
   14005655d:	int3   
   14005655e:	int3   
   14005655f:	int3   
   140056560:	movsd  xmm0,QWORD PTR [rcx]
   140056564:	comisd xmm0,QWORD PTR [rip+0x18994]        # 0x14006ef00
   14005656c:	jb     0x140056574
   14005656e:	mov    eax,0x1
   140056573:	ret    
   140056574:	xor    eax,eax
   140056576:	ret    
   140056577:	int3   
   140056578:	int3   
   140056579:	int3   
   14005657a:	int3   
   14005657b:	int3   
   14005657c:	int3   
   14005657d:	int3   
   14005657e:	int3   
   14005657f:	int3   
   140056580:	rex push rbx
   140056582:	sub    rsp,0x30
   140056586:	test   ecx,ecx
   140056588:	mov    rax,r8
   14005658b:	mov    rbx,rdx
   14005658e:	mov    rdx,rax
   140056591:	mov    r8,r9
   140056594:	je     0x1400565ae
   140056596:	lea    rcx,[rsp+0x20]
   14005659b:	call   0x14005cf20
   1400565a0:	mov    r11,QWORD PTR [rsp+0x20]
   1400565a5:	mov    QWORD PTR [rbx],r11
   1400565a8:	add    rsp,0x30
   1400565ac:	pop    rbx
   1400565ad:	ret    
   1400565ae:	lea    rcx,[rsp+0x40]
   1400565b3:	call   0x14005d0b0
   1400565b8:	mov    r11d,DWORD PTR [rsp+0x40]
   1400565bd:	mov    DWORD PTR [rbx],r11d
   1400565c0:	add    rsp,0x30
   1400565c4:	pop    rbx
   1400565c5:	ret    
   1400565c6:	int3   
   1400565c7:	int3   
   1400565c8:	int3   
   1400565c9:	int3   
   1400565ca:	int3   
   1400565cb:	int3   
   1400565cc:	int3   
   1400565cd:	int3   
   1400565ce:	int3   
   1400565cf:	int3   
   1400565d0:	rex push rbx
   1400565d2:	sub    rsp,0x20
   1400565d6:	mov    rax,r8
   1400565d9:	xor    r8d,r8d
   1400565dc:	test   ecx,ecx
   1400565de:	mov    rbx,rdx
   1400565e1:	mov    rdx,rax
   1400565e4:	je     0x1400565fe
   1400565e6:	lea    rcx,[rsp+0x48]
   1400565eb:	call   0x14005cf20
   1400565f0:	mov    r11,QWORD PTR [rsp+0x48]
   1400565f5:	mov    QWORD PTR [rbx],r11
   1400565f8:	add    rsp,0x20
   1400565fc:	pop    rbx
   1400565fd:	ret    
   1400565fe:	lea    rcx,[rsp+0x30]
   140056603:	call   0x14005d0b0
   140056608:	mov    r11d,DWORD PTR [rsp+0x30]
   14005660d:	mov    DWORD PTR [rbx],r11d
   140056610:	add    rsp,0x20
   140056614:	pop    rbx
   140056615:	ret    
   140056616:	int3   
   140056617:	int3   
   140056618:	int3   
   140056619:	int3   
   14005661a:	int3   
   14005661b:	int3   
   14005661c:	int3   
   14005661d:	int3   
   14005661e:	int3   
   14005661f:	int3   
   140056620:	xor    edx,edx
   140056622:	jmp    0x1400562b0
   140056627:	int3   
   140056628:	int3   
   140056629:	int3   
   14005662a:	int3   
   14005662b:	int3   
   14005662c:	int3   
   14005662d:	int3   
   14005662e:	int3   
   14005662f:	int3   
   140056630:	xor    edx,edx
   140056632:	jmp    0x1400563f0
   140056637:	int3   
   140056638:	int3   
   140056639:	int3   
   14005663a:	int3   
   14005663b:	int3   
   14005663c:	int3   
   14005663d:	int3   
   14005663e:	int3   
   14005663f:	int3   
   140056640:	mov    DWORD PTR [rsp+0x20],r9d
   140056645:	mov    QWORD PTR [rsp+0x10],rdx
   14005664a:	push   rbx
   14005664b:	push   rsi
   14005664c:	push   rdi
   14005664d:	push   r12
   14005664f:	push   r13
   140056651:	push   r15
   140056653:	sub    rsp,0x58
   140056657:	xor    r12b,r12b
   14005665a:	mov    r13,rcx
   14005665d:	mov    rcx,QWORD PTR [rsp+0xc0]
   140056665:	test   rcx,rcx
   140056668:	movsxd r15,r8d
   14005666b:	mov    r8,rdx
   14005666e:	mov    BYTE PTR [rsp+0x48],r12b
   140056673:	jne    0x1400566fb
   140056679:	call   0x14004bd60
   14005667e:	mov    rbx,rax
   140056681:	mov    rdi,QWORD PTR [rax+0xc0]
   140056688:	mov    rsi,QWORD PTR [rax+0xb8]
   14005668f:	cmp    rdi,QWORD PTR [rip+0x3120a]        # 0x1400878a0
   140056696:	mov    QWORD PTR [rsp+0xc0],rdi
   14005669e:	je     0x1400566be
   1400566a0:	mov    ecx,DWORD PTR [rax+0xc8]
   1400566a6:	test   DWORD PTR [rip+0x3107c],ecx        # 0x140087728
   1400566ac:	jne    0x1400566be
   1400566ae:	call   0x14004f030
   1400566b3:	mov    rdi,rax
   1400566b6:	mov    QWORD PTR [rsp+0xc0],rax
   1400566be:	cmp    rsi,QWORD PTR [rip+0x30f5b]        # 0x140087620
   1400566c5:	je     0x1400566da
   1400566c7:	mov    ecx,DWORD PTR [rbx+0xc8]
   1400566cd:	test   DWORD PTR [rip+0x31055],ecx        # 0x140087728
   1400566d3:	jne    0x1400566da
   1400566d5:	call   0x14004e4e0
   1400566da:	mov    ecx,DWORD PTR [rbx+0xc8]
   1400566e0:	test   cl,0x2
   1400566e3:	jne    0x140056728
   1400566e5:	mov    r8,QWORD PTR [rsp+0x98]
   1400566ed:	or     ecx,0x2
   1400566f0:	mov    r12b,0x1
   1400566f3:	mov    DWORD PTR [rbx+0xc8],ecx
   1400566f9:	jmp    0x140056730
   1400566fb:	mov    rax,QWORD PTR [rcx]
   1400566fe:	lea    rdx,[rsp+0x30]
   140056703:	mov    QWORD PTR [rdx],rax
   140056706:	mov    rax,QWORD PTR [rcx+0x8]
   14005670a:	mov    QWORD PTR [rdx+0x8],rax
   14005670e:	mov    rdi,QWORD PTR [rsp+0x30]
   140056713:	movzx  r12d,BYTE PTR [rsp+0x48]
   140056719:	mov    rbx,QWORD PTR [rsp+0x40]
   14005671e:	mov    QWORD PTR [rsp+0xc0],rdi
   140056726:	jmp    0x140056730
   140056728:	mov    r8,QWORD PTR [rsp+0x98]
   140056730:	test   r13,r13
   140056733:	jne    0x140056775
   140056735:	call   0x140048680
   14005673a:	xor    esi,esi
   14005673c:	xor    r9d,r9d
   14005673f:	xor    r8d,r8d
   140056742:	xor    edx,edx
   140056744:	xor    ecx,ecx
   140056746:	mov    DWORD PTR [rax],0x16
   14005674c:	mov    QWORD PTR [rsp+0x20],rsi
   140056751:	call   0x14004e100
   140056756:	test   r12b,r12b
   140056759:	je     0x140056762
   14005675b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140056762:	mov    eax,0x16
   140056767:	add    rsp,0x58
   14005676b:	pop    r15
   14005676d:	pop    r13
   14005676f:	pop    r12
   140056771:	pop    rdi
   140056772:	pop    rsi
   140056773:	pop    rbx
   140056774:	ret    
   140056775:	test   r8,r8
   140056778:	je     0x140056735
   14005677a:	xor    esi,esi
   14005677c:	test   r15d,r15d
   14005677f:	mov    eax,esi
   140056781:	cmovg  eax,r15d
   140056785:	add    eax,0x9
   140056788:	cdqe   
   14005678a:	cmp    r8,rax
   14005678d:	ja     0x1400567cd
   14005678f:	call   0x140048680
   140056794:	xor    r9d,r9d
   140056797:	xor    r8d,r8d
   14005679a:	xor    edx,edx
   14005679c:	xor    ecx,ecx
   14005679e:	mov    QWORD PTR [rsp+0x20],rsi
   1400567a3:	mov    DWORD PTR [rax],0x22
   1400567a9:	call   0x14004e100
   1400567ae:	test   r12b,r12b
   1400567b1:	je     0x1400567ba
   1400567b3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   1400567ba:	mov    eax,0x22
   1400567bf:	add    rsp,0x58
   1400567c3:	pop    r15
   1400567c5:	pop    r13
   1400567c7:	pop    r12
   1400567c9:	pop    rdi
   1400567ca:	pop    rsi
   1400567cb:	pop    rbx
   1400567cc:	ret    
   1400567cd:	movzx  r9d,BYTE PTR [rsp+0xb8]
   1400567d6:	mov    QWORD PTR [rsp+0x90],rbp
   1400567de:	or     rbp,0xffffffffffffffff
   1400567e2:	test   r9b,r9b
   1400567e5:	mov    QWORD PTR [rsp+0x50],r14
   1400567ea:	mov    r14,QWORD PTR [rsp+0xb0]
   1400567f2:	je     0x140056850
   1400567f4:	cmp    DWORD PTR [r14],0x2d
   1400567f8:	mov    rdx,rsi
   1400567fb:	mov    r9d,esi
   1400567fe:	sete   dl
   140056801:	add    rdx,r13
   140056804:	test   r15d,r15d
   140056807:	setg   r9b
   14005680b:	test   r9d,r9d
   14005680e:	je     0x140056848
   140056810:	xor    eax,eax
   140056812:	mov    rdi,rdx
   140056815:	mov    rcx,rbp
   140056818:	repnz scas al,BYTE PTR es:[rdi]
   14005681a:	movsxd rax,r9d
   14005681d:	not    rcx
   140056820:	add    rax,rdx
   140056823:	mov    r8,rcx
   140056826:	mov    rcx,rax
   140056829:	call   0x1400478c0
   14005682e:	mov    rdi,QWORD PTR [rsp+0xc0]
   140056836:	mov    r8,QWORD PTR [rsp+0x98]
   14005683e:	mov    r9b,BYTE PTR [rsp+0xb8]
   140056846:	jmp    0x140056850
   140056848:	mov    r9b,BYTE PTR [rsp+0xb8]
   140056850:	cmp    DWORD PTR [r14],0x2d
   140056854:	mov    rdx,r13
   140056857:	jne    0x140056862
   140056859:	mov    BYTE PTR [r13+0x0],0x2d
   14005685e:	lea    rdx,[r13+0x1]
   140056862:	test   r15d,r15d
   140056865:	jle    0x140056881
   140056867:	movzx  eax,BYTE PTR [rdx+0x1]
   14005686b:	add    rdx,0x1
   14005686f:	mov    BYTE PTR [rdx-0x1],al
   140056872:	mov    rax,QWORD PTR [rdi+0x128]
   140056879:	mov    rcx,QWORD PTR [rax]
   14005687c:	movzx  eax,BYTE PTR [rcx]
   14005687f:	mov    BYTE PTR [rdx],al
   140056881:	test   r9b,r9b
   140056884:	mov    rcx,rsi
   140056887:	lea    rdi,[rdx+r15*1]
   14005688b:	sete   cl
   14005688e:	add    rdi,rcx
   140056891:	cmp    r8,0xffffffffffffffff
   140056895:	je     0x1400568a0
   140056897:	mov    rbp,r13
   14005689a:	sub    rbp,rdi
   14005689d:	add    rbp,r8
   1400568a0:	lea    r8,[rip+0x18661]        # 0x14006ef08
   1400568a7:	mov    rdx,rbp
   1400568aa:	mov    rcx,rdi
   1400568ad:	call   0x1400579a0
   1400568b2:	mov    rbp,QWORD PTR [rsp+0x90]
   1400568ba:	test   eax,eax
   1400568bc:	je     0x1400568d2
   1400568be:	xor    r9d,r9d
   1400568c1:	xor    r8d,r8d
   1400568c4:	xor    edx,edx
   1400568c6:	xor    ecx,ecx
   1400568c8:	mov    QWORD PTR [rsp+0x20],rsi
   1400568cd:	call   0x14004e060
   1400568d2:	cmp    DWORD PTR [rsp+0xa8],esi
   1400568d9:	lea    rcx,[rdi+0x2]
   1400568dd:	je     0x1400568e2
   1400568df:	mov    BYTE PTR [rdi],0x45
   1400568e2:	mov    rax,QWORD PTR [r14+0x10]
   1400568e6:	cmp    BYTE PTR [rax],0x30
   1400568e9:	je     0x140056942
   1400568eb:	mov    r8d,DWORD PTR [r14+0x4]
   1400568ef:	sub    r8d,0x1
   1400568f3:	jns    0x1400568fc
   1400568f5:	neg    r8d
   1400568f8:	mov    BYTE PTR [rdi+0x1],0x2d
   1400568fc:	cmp    r8d,0x64
   140056900:	jl     0x14005691d
   140056902:	mov    eax,0x51eb851f
   140056907:	imul   r8d
   14005690a:	sar    edx,0x5
   14005690d:	mov    eax,edx
   14005690f:	shr    eax,0x1f
   140056912:	add    edx,eax
   140056914:	add    BYTE PTR [rdi+0x2],dl
   140056917:	imul   edx,edx,0xffffff9c
   14005691a:	add    r8d,edx
   14005691d:	cmp    r8d,0xa
   140056921:	jl     0x14005693e
   140056923:	mov    eax,0x66666667
   140056928:	imul   r8d
   14005692b:	sar    edx,0x2
   14005692e:	mov    eax,edx
   140056930:	shr    eax,0x1f
   140056933:	add    edx,eax
   140056935:	add    BYTE PTR [rdi+0x3],dl
   140056938:	imul   edx,edx,0xfffffff6
   14005693b:	add    r8d,edx
   14005693e:	add    BYTE PTR [rdi+0x4],r8b
   140056942:	test   BYTE PTR [rip+0x36c87],0x1        # 0x14008d5d0
   140056949:	mov    r14,QWORD PTR [rsp+0x50]
   14005694e:	je     0x140056964
   140056950:	cmp    BYTE PTR [rcx],0x30
   140056953:	jne    0x140056964
   140056955:	lea    rdx,[rcx+0x1]
   140056959:	mov    r8d,0x3
   14005695f:	call   0x1400478c0
   140056964:	test   r12b,r12b
   140056967:	je     0x140056970
   140056969:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140056970:	xor    eax,eax
   140056972:	add    rsp,0x58
   140056976:	pop    r15
   140056978:	pop    r13
   14005697a:	pop    r12
   14005697c:	pop    rdi
   14005697d:	pop    rsi
   14005697e:	pop    rbx
   14005697f:	ret    
   140056980:	rex push rbx
   140056982:	push   rbp
   140056983:	push   rsi
   140056984:	push   rdi
   140056985:	sub    rsp,0x88
   14005698c:	mov    rax,QWORD PTR [rip+0x303dd]        # 0x140086d70
   140056993:	xor    rax,rsp
   140056996:	mov    QWORD PTR [rsp+0x70],rax
   14005699b:	mov    rcx,QWORD PTR [rcx]
   14005699e:	mov    rbp,QWORD PTR [rsp+0xd8]
   1400569a6:	mov    rbx,r8
   1400569a9:	mov    rdi,rdx
   1400569ac:	mov    esi,r9d
   1400569af:	lea    r8,[rsp+0x58]
   1400569b4:	lea    rdx,[rsp+0x40]
   1400569b9:	mov    r9d,0x16
   1400569bf:	call   0x14005d360
   1400569c4:	test   rdi,rdi
   1400569c7:	jne    0x1400569f2
   1400569c9:	call   0x140048680
   1400569ce:	xor    ecx,ecx
   1400569d0:	xor    r9d,r9d
   1400569d3:	xor    r8d,r8d
   1400569d6:	xor    edx,edx
   1400569d8:	mov    DWORD PTR [rax],0x16
   1400569de:	mov    QWORD PTR [rsp+0x20],rcx
   1400569e3:	call   0x14004e100
   1400569e8:	mov    eax,0x16
   1400569ed:	jmp    0x140056a7a
   1400569f2:	test   rbx,rbx
   1400569f5:	je     0x1400569c9
   1400569f7:	mov    r9d,DWORD PTR [rsp+0x40]
   1400569fc:	xor    ecx,ecx
   1400569fe:	cmp    rbx,0xffffffffffffffff
   140056a02:	jne    0x140056a09
   140056a04:	or     rdx,rbx
   140056a07:	jmp    0x140056a24
   140056a09:	cmp    r9d,0x2d
   140056a0d:	mov    rax,rcx
   140056a10:	mov    rdx,rbx
   140056a13:	sete   al
   140056a16:	sub    rdx,rax
   140056a19:	test   esi,esi
   140056a1b:	mov    rax,rcx
   140056a1e:	setg   al
   140056a21:	sub    rdx,rax
   140056a24:	mov    rax,rcx
   140056a27:	cmp    r9d,0x2d
   140056a2b:	lea    r8d,[rsi+0x1]
   140056a2f:	sete   al
   140056a32:	test   esi,esi
   140056a34:	lea    r9,[rsp+0x40]
   140056a39:	setg   cl
   140056a3c:	add    rax,rdi
   140056a3f:	add    rcx,rax
   140056a42:	call   0x14005d240
   140056a47:	test   eax,eax
   140056a49:	je     0x140056a50
   140056a4b:	mov    BYTE PTR [rdi],0x0
   140056a4e:	jmp    0x140056a7a
   140056a50:	mov    r9d,DWORD PTR [rsp+0xd0]
   140056a58:	lea    rax,[rsp+0x40]
   140056a5d:	mov    QWORD PTR [rsp+0x30],rbp
   140056a62:	mov    r8d,esi
   140056a65:	mov    rdx,rbx
   140056a68:	mov    rcx,rdi
   140056a6b:	mov    BYTE PTR [rsp+0x28],0x0
   140056a70:	mov    QWORD PTR [rsp+0x20],rax
   140056a75:	call   0x140056640
   140056a7a:	mov    rcx,QWORD PTR [rsp+0x70]
   140056a7f:	xor    rcx,rsp
   140056a82:	call   0x140046470
   140056a87:	add    rsp,0x88
   140056a8e:	pop    rdi
   140056a8f:	pop    rsi
   140056a90:	pop    rbp
   140056a91:	pop    rbx
   140056a92:	ret    
   140056a93:	int3   
   140056a94:	int3   
   140056a95:	int3   
   140056a96:	int3   
   140056a97:	int3   
   140056a98:	int3   
   140056a99:	int3   
   140056a9a:	int3   
   140056a9b:	int3   
   140056a9c:	int3   
   140056a9d:	int3   
   140056a9e:	int3   
   140056a9f:	int3   
   140056aa0:	mov    QWORD PTR [rsp+0x18],rbx
   140056aa5:	mov    QWORD PTR [rsp+0x8],rcx
   140056aaa:	push   rbp
   140056aab:	push   rsi
   140056aac:	push   rdi
   140056aad:	push   r12
   140056aaf:	push   r13
   140056ab1:	push   r14
   140056ab3:	push   r15
   140056ab5:	sub    rsp,0x50
   140056ab9:	xor    r15b,r15b
   140056abc:	mov    rdi,rdx
   140056abf:	mov    rdx,QWORD PTR [rsp+0xb8]
   140056ac7:	test   rdx,rdx
   140056aca:	mov    ebx,r9d
   140056acd:	mov    r9d,0x3ff
   140056ad3:	mov    r12,r8
   140056ad6:	mov    r14,rcx
   140056ad9:	mov    bp,0x30
   140056add:	mov    QWORD PTR [rsp+0x98],r9
   140056ae5:	mov    BYTE PTR [rsp+0x48],r15b
   140056aea:	jne    0x140056b64
   140056aec:	call   0x14004bd60
   140056af1:	mov    rsi,rax
   140056af4:	mov    r13,QWORD PTR [rax+0xc0]
   140056afb:	mov    r14,QWORD PTR [rax+0xb8]
   140056b02:	cmp    r13,QWORD PTR [rip+0x30d97]        # 0x1400878a0
   140056b09:	je     0x140056b21
   140056b0b:	mov    ecx,DWORD PTR [rax+0xc8]
   140056b11:	test   DWORD PTR [rip+0x30c11],ecx        # 0x140087728
   140056b17:	jne    0x140056b21
   140056b19:	call   0x14004f030
   140056b1e:	mov    r13,rax
   140056b21:	cmp    r14,QWORD PTR [rip+0x30af8]        # 0x140087620
   140056b28:	je     0x140056b3d
   140056b2a:	mov    ecx,DWORD PTR [rsi+0xc8]
   140056b30:	test   DWORD PTR [rip+0x30bf2],ecx        # 0x140087728
   140056b36:	jne    0x140056b3d
   140056b38:	call   0x14004e4e0
   140056b3d:	mov    ecx,DWORD PTR [rsi+0xc8]
   140056b43:	mov    r14,QWORD PTR [rsp+0x90]
   140056b4b:	mov    r9d,0x3ff
   140056b51:	test   cl,0x2
   140056b54:	jne    0x140056b87
   140056b56:	or     ecx,0x2
   140056b59:	mov    r15b,0x1
   140056b5c:	mov    DWORD PTR [rsi+0xc8],ecx
   140056b62:	jmp    0x140056b87
   140056b64:	mov    rax,QWORD PTR [rdx]
   140056b67:	lea    rcx,[rsp+0x30]
   140056b6c:	mov    QWORD PTR [rcx],rax
   140056b6f:	mov    rax,QWORD PTR [rdx+0x8]
   140056b73:	mov    QWORD PTR [rcx+0x8],rax
   140056b77:	movzx  r15d,BYTE PTR [rsp+0x48]
   140056b7d:	mov    rsi,QWORD PTR [rsp+0x40]
   140056b82:	mov    r13,QWORD PTR [rsp+0x30]
   140056b87:	xor    edx,edx
   140056b89:	test   ebx,ebx
   140056b8b:	cmovs  ebx,edx
   140056b8e:	test   rdi,rdi
   140056b91:	jne    0x140056bcc
   140056b93:	call   0x140048680
   140056b98:	xor    r9d,r9d
   140056b9b:	xor    r8d,r8d
   140056b9e:	xor    edx,edx
   140056ba0:	xor    ecx,ecx
   140056ba2:	mov    QWORD PTR [rsp+0x20],0x0
   140056bab:	mov    DWORD PTR [rax],0x16
   140056bb1:	call   0x14004e100
   140056bb6:	test   r15b,r15b
   140056bb9:	je     0x140056bc2
   140056bbb:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140056bc2:	mov    eax,0x16
   140056bc7:	jmp    0x140056f48
   140056bcc:	test   r12,r12
   140056bcf:	je     0x140056b93
   140056bd1:	lea    eax,[rbx+0xb]
   140056bd4:	mov    BYTE PTR [rdi],dl
   140056bd6:	movsxd rcx,eax
   140056bd9:	cmp    r12,rcx
   140056bdc:	ja     0x140056c17
   140056bde:	call   0x140048680
   140056be3:	xor    r9d,r9d
   140056be6:	xor    r8d,r8d
   140056be9:	xor    edx,edx
   140056beb:	xor    ecx,ecx
   140056bed:	mov    QWORD PTR [rsp+0x20],0x0
   140056bf6:	mov    DWORD PTR [rax],0x22
   140056bfc:	call   0x14004e100
   140056c01:	test   r15b,r15b
   140056c04:	je     0x140056c0d
   140056c06:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140056c0d:	mov    eax,0x22
   140056c12:	jmp    0x140056f48
   140056c17:	mov    rcx,QWORD PTR [r14]
   140056c1a:	mov    rax,rcx
   140056c1d:	shr    rax,0x34
   140056c21:	and    eax,0x7ff
   140056c26:	cmp    rax,0x7ff
   140056c2c:	jne    0x140056cd0
   140056c32:	cmp    r12,0xffffffffffffffff
   140056c36:	jne    0x140056c3d
   140056c38:	or     r8,r12
   140056c3b:	jmp    0x140056c42
   140056c3d:	lea    r8,[r12-0x2]
   140056c42:	mov    QWORD PTR [rsp+0x28],rdx
   140056c47:	mov    DWORD PTR [rsp+0x20],edx
   140056c4b:	lea    rdx,[rdi+0x2]
   140056c4f:	mov    r9d,ebx
   140056c52:	mov    rcx,r14
   140056c55:	call   0x140056980
   140056c5a:	test   eax,eax
   140056c5c:	je     0x140056c76
   140056c5e:	test   r15b,r15b
   140056c61:	mov    BYTE PTR [rdi],0x0
   140056c64:	je     0x140056f48
   140056c6a:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140056c71:	jmp    0x140056f48
   140056c76:	cmp    BYTE PTR [rdi+0x2],0x2d
   140056c7a:	jne    0x140056c83
   140056c7c:	mov    BYTE PTR [rdi],0x2d
   140056c7f:	add    rdi,0x1
   140056c83:	mov    ebx,DWORD PTR [rsp+0xb0]
   140056c8a:	mov    eax,0x78
   140056c8f:	mov    ecx,0x58
   140056c94:	mov    BYTE PTR [rdi],0x30
   140056c97:	test   ebx,ebx
   140056c99:	mov    edx,0x65
   140056c9e:	cmovne eax,ecx
   140056ca1:	lea    rcx,[rdi+0x2]
   140056ca5:	mov    BYTE PTR [rdi+0x1],al
   140056ca8:	call   0x14005cc60
   140056cad:	test   rax,rax
   140056cb0:	je     0x140056f3a
   140056cb6:	mov    ecx,0x70
   140056cbb:	mov    edx,0x50
   140056cc0:	test   ebx,ebx
   140056cc2:	cmovne ecx,edx
   140056cc5:	mov    BYTE PTR [rax],cl
   140056cc7:	mov    BYTE PTR [rax+0x3],0x0
   140056ccb:	jmp    0x140056f3a
   140056cd0:	movabs rax,0x8000000000000000
   140056cda:	test   rax,rcx
   140056cdd:	je     0x140056ce6
   140056cdf:	mov    BYTE PTR [rdi],0x2d
   140056ce2:	add    rdi,0x1
   140056ce6:	mov    edx,DWORD PTR [rsp+0xb0]
   140056ced:	mov    eax,0x78
   140056cf2:	mov    BYTE PTR [rdi],0x30
   140056cf5:	test   edx,edx
   140056cf7:	mov    ecx,0x58
   140056cfc:	mov    r8d,0x61
   140056d02:	cmovne eax,ecx
   140056d05:	test   edx,edx
   140056d07:	movabs r10,0xfffffffffffff
   140056d11:	mov    BYTE PTR [rdi+0x1],al
   140056d14:	mov    eax,0x41
   140056d19:	cmovne r8d,eax
   140056d1d:	movabs rax,0x7ff0000000000000
   140056d27:	sub    r8d,0x3a
   140056d2b:	test   QWORD PTR [r14],rax
   140056d2e:	jne    0x140056d55
   140056d30:	mov    BYTE PTR [rdi+0x2],0x30
   140056d34:	mov    rax,QWORD PTR [r14]
   140056d37:	add    rdi,0x3
   140056d3b:	and    rax,r10
   140056d3e:	neg    rax
   140056d41:	sbb    r9,r9
   140056d44:	and    r9d,0x3fe
   140056d4b:	mov    QWORD PTR [rsp+0x98],r9
   140056d53:	jmp    0x140056d5d
   140056d55:	mov    BYTE PTR [rdi+0x2],0x31
   140056d59:	add    rdi,0x3
   140056d5d:	mov    r12,rdi
   140056d60:	add    rdi,0x1
   140056d64:	test   ebx,ebx
   140056d66:	jne    0x140056d6e
   140056d68:	mov    BYTE PTR [r12],bl
   140056d6c:	jmp    0x140056d7f
   140056d6e:	mov    rax,QWORD PTR [r13+0x128]
   140056d75:	mov    rcx,QWORD PTR [rax]
   140056d78:	movzx  eax,BYTE PTR [rcx]
   140056d7b:	mov    BYTE PTR [r12],al
   140056d7f:	test   QWORD PTR [r14],r10
   140056d82:	jbe    0x140056e1f
   140056d88:	movabs rdx,0xf000000000000
   140056d92:	test   ebx,ebx
   140056d94:	jle    0x140056dc9
   140056d96:	mov    rax,QWORD PTR [r14]
   140056d99:	movzx  ecx,bpl
   140056d9d:	and    rax,rdx
   140056da0:	and    rax,r10
   140056da3:	shr    rax,cl
   140056da6:	add    ax,0x30
   140056daa:	cmp    ax,0x39
   140056dae:	jbe    0x140056db4
   140056db0:	add    ax,r8w
   140056db4:	mov    BYTE PTR [rdi],al
   140056db6:	add    rdi,0x1
   140056dba:	shr    rdx,0x4
   140056dbe:	sub    ebx,0x1
   140056dc1:	add    bp,0xfffc
   140056dc5:	jns    0x140056d92
   140056dc7:	jmp    0x140056e1f
   140056dc9:	test   bp,bp
   140056dcc:	js     0x140056e1f
   140056dce:	mov    rax,QWORD PTR [r14]
   140056dd1:	movzx  ecx,bpl
   140056dd5:	and    rax,rdx
   140056dd8:	and    rax,r10
   140056ddb:	shr    rax,cl
   140056dde:	cmp    ax,0x8
   140056de2:	jbe    0x140056e1f
   140056de4:	lea    rax,[rdi-0x1]
   140056de8:	movzx  ecx,BYTE PTR [rax]
   140056deb:	cmp    cl,0x66
   140056dee:	je     0x140056df5
   140056df0:	cmp    cl,0x46
   140056df3:	jne    0x140056dfe
   140056df5:	mov    BYTE PTR [rax],0x30
   140056df8:	sub    rax,0x1
   140056dfc:	jmp    0x140056de8
   140056dfe:	cmp    rax,r12
   140056e01:	je     0x140056e1b
   140056e03:	movzx  ecx,BYTE PTR [rax]
   140056e06:	cmp    cl,0x39
   140056e09:	jne    0x140056e14
   140056e0b:	add    r8b,0x3a
   140056e0f:	mov    BYTE PTR [rax],r8b
   140056e12:	jmp    0x140056e1f
   140056e14:	add    cl,0x1
   140056e17:	mov    BYTE PTR [rax],cl
   140056e19:	jmp    0x140056e1f
   140056e1b:	add    BYTE PTR [rax-0x1],0x1
   140056e1f:	test   ebx,ebx
   140056e21:	jle    0x140056e3b
   140056e23:	mov    r8,rbx
   140056e26:	mov    dl,0x30
   140056e28:	mov    rcx,rdi
   140056e2b:	call   0x140047720
   140056e30:	mov    r9,QWORD PTR [rsp+0x98]
   140056e38:	add    rdi,rbx
   140056e3b:	cmp    BYTE PTR [r12],0x0
   140056e40:	mov    ecx,0x70
   140056e45:	mov    edx,0x50
   140056e4a:	cmove  rdi,r12
   140056e4e:	cmp    DWORD PTR [rsp+0xb0],0x0
   140056e56:	cmovne ecx,edx
   140056e59:	mov    BYTE PTR [rdi],cl
   140056e5b:	mov    rcx,QWORD PTR [r14]
   140056e5e:	shr    rcx,0x34
   140056e62:	and    ecx,0x7ff
   140056e68:	sub    rcx,r9
   140056e6b:	js     0x140056e77
   140056e6d:	mov    BYTE PTR [rdi+0x1],0x2b
   140056e71:	add    rdi,0x2
   140056e75:	jmp    0x140056e82
   140056e77:	mov    BYTE PTR [rdi+0x1],0x2d
   140056e7b:	add    rdi,0x2
   140056e7f:	neg    rcx
   140056e82:	cmp    rcx,0x3e8
   140056e89:	mov    r8,rdi
   140056e8c:	mov    BYTE PTR [rdi],0x30
   140056e8f:	jl     0x140056ec5
   140056e91:	movabs rax,0x20c49ba5e353f7cf
   140056e9b:	add    rdi,0x1
   140056e9f:	imul   rcx
   140056ea2:	sar    rdx,0x7
   140056ea6:	mov    rax,rdx
   140056ea9:	shr    rax,0x3f
   140056ead:	add    rdx,rax
   140056eb0:	lea    eax,[rdx+0x30]
   140056eb3:	imul   rdx,rdx,0xfffffffffffffc18
   140056eba:	mov    BYTE PTR [rdi-0x1],al
   140056ebd:	add    rcx,rdx
   140056ec0:	cmp    rdi,r8
   140056ec3:	jne    0x140056ecb
   140056ec5:	cmp    rcx,0x64
   140056ec9:	jl     0x140056efa
   140056ecb:	movabs rax,0xa3d70a3d70a3d70b
   140056ed5:	add    rdi,0x1
   140056ed9:	imul   rcx
   140056edc:	add    rdx,rcx
   140056edf:	sar    rdx,0x6
   140056ee3:	mov    rax,rdx
   140056ee6:	shr    rax,0x3f
   140056eea:	add    rdx,rax
   140056eed:	lea    eax,[rdx+0x30]
   140056ef0:	imul   rdx,rdx,0xffffffffffffff9c
   140056ef4:	mov    BYTE PTR [rdi-0x1],al
   140056ef7:	add    rcx,rdx
   140056efa:	cmp    rdi,r8
   140056efd:	jne    0x140056f05
   140056eff:	cmp    rcx,0xa
   140056f03:	jl     0x140056f31
   140056f05:	movabs rax,0x6666666666666667
   140056f0f:	add    rdi,0x1
   140056f13:	imul   rcx
   140056f16:	sar    rdx,0x2
   140056f1a:	mov    rax,rdx
   140056f1d:	shr    rax,0x3f
   140056f21:	add    rdx,rax
   140056f24:	lea    eax,[rdx+0x30]
   140056f27:	imul   rdx,rdx,0xfffffffffffffff6
   140056f2b:	mov    BYTE PTR [rdi-0x1],al
   140056f2e:	add    rcx,rdx
   140056f31:	add    cl,0x30
   140056f34:	mov    BYTE PTR [rdi],cl
   140056f36:	mov    BYTE PTR [rdi+0x1],0x0
   140056f3a:	test   r15b,r15b
   140056f3d:	je     0x140056f46
   140056f3f:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140056f46:	xor    eax,eax
   140056f48:	mov    rbx,QWORD PTR [rsp+0xa0]
   140056f50:	add    rsp,0x50
   140056f54:	pop    r15
   140056f56:	pop    r14
   140056f58:	pop    r13
   140056f5a:	pop    r12
   140056f5c:	pop    rdi
   140056f5d:	pop    rsi
   140056f5e:	pop    rbp
   140056f5f:	ret    
   140056f60:	mov    QWORD PTR [rsp+0x8],rbx
   140056f65:	mov    QWORD PTR [rsp+0x18],rbp
   140056f6a:	mov    QWORD PTR [rsp+0x20],rsi
   140056f6f:	mov    QWORD PTR [rsp+0x10],rdx
   140056f74:	push   rdi
   140056f75:	push   r12
   140056f77:	push   r13
   140056f79:	push   r14
   140056f7b:	push   r15
   140056f7d:	sub    rsp,0x50
   140056f81:	mov    edi,DWORD PTR [r9+0x4]
   140056f85:	xor    r12b,r12b
   140056f88:	mov    rbp,rcx
   140056f8b:	mov    rcx,QWORD PTR [rsp+0xa8]
   140056f93:	sub    edi,0x1
   140056f96:	mov    r14,r9
   140056f99:	test   rcx,rcx
   140056f9c:	mov    r15d,r8d
   140056f9f:	mov    BYTE PTR [rsp+0x48],r12b
   140056fa4:	jne    0x140057025
   140056fa6:	call   0x14004bd60
   140056fab:	mov    rsi,rax
   140056fae:	mov    r13,QWORD PTR [rax+0xc0]
   140056fb5:	mov    rbx,QWORD PTR [rax+0xb8]
   140056fbc:	cmp    r13,QWORD PTR [rip+0x308dd]        # 0x1400878a0
   140056fc3:	mov    QWORD PTR [rsp+0xa8],r13
   140056fcb:	je     0x140056fe8
   140056fcd:	mov    ecx,DWORD PTR [rax+0xc8]
   140056fd3:	test   DWORD PTR [rip+0x3074f],ecx        # 0x140087728
   140056fd9:	jne    0x140056fe8
   140056fdb:	call   0x14004f030
   140056fe0:	mov    QWORD PTR [rsp+0xa8],rax
   140056fe8:	cmp    rbx,QWORD PTR [rip+0x30631]        # 0x140087620
   140056fef:	je     0x140057004
   140056ff1:	mov    ecx,DWORD PTR [rsi+0xc8]
   140056ff7:	test   DWORD PTR [rip+0x3072b],ecx        # 0x140087728
   140056ffd:	jne    0x140057004
   140056fff:	call   0x14004e4e0
   140057004:	mov    ecx,DWORD PTR [rsi+0xc8]
   14005700a:	mov    rdx,QWORD PTR [rsp+0x88]
   140057012:	test   cl,0x2
   140057015:	jne    0x140057050
   140057017:	or     ecx,0x2
   14005701a:	mov    r12b,0x1
   14005701d:	mov    DWORD PTR [rsi+0xc8],ecx
   140057023:	jmp    0x140057050
   140057025:	mov    rax,QWORD PTR [rcx]
   140057028:	lea    r8,[rsp+0x30]
   14005702d:	mov    QWORD PTR [r8],rax
   140057030:	mov    rax,QWORD PTR [rcx+0x8]
   140057034:	mov    QWORD PTR [r8+0x8],rax
   140057038:	mov    rax,QWORD PTR [rsp+0x30]
   14005703d:	movzx  r12d,BYTE PTR [rsp+0x48]
   140057043:	mov    rsi,QWORD PTR [rsp+0x40]
   140057048:	mov    QWORD PTR [rsp+0xa8],rax
   140057050:	test   rbp,rbp
   140057053:	jne    0x14005708c
   140057055:	call   0x140048680
   14005705a:	xor    r9d,r9d
   14005705d:	xor    r8d,r8d
   140057060:	mov    DWORD PTR [rax],0x16
   140057066:	xor    eax,eax
   140057068:	xor    edx,edx
   14005706a:	xor    ecx,ecx
   14005706c:	mov    QWORD PTR [rsp+0x20],rax
   140057071:	call   0x14004e100
   140057076:	test   r12b,r12b
   140057079:	je     0x140057082
   14005707b:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   140057082:	mov    eax,0x16
   140057087:	jmp    0x14005719c
   14005708c:	test   rdx,rdx
   14005708f:	je     0x140057055
   140057091:	cmp    BYTE PTR [rsp+0xa0],0x0
   140057099:	je     0x1400570b8
   14005709b:	cmp    edi,r15d
   14005709e:	jne    0x1400570b8
   1400570a0:	xor    eax,eax
   1400570a2:	cmp    DWORD PTR [r14],0x2d
   1400570a6:	movsxd rcx,edi
   1400570a9:	sete   al
   1400570ac:	add    rax,rbp
   1400570af:	mov    BYTE PTR [rcx+rax*1],0x30
   1400570b3:	mov    BYTE PTR [rcx+rax*1+0x1],0x0
   1400570b8:	cmp    DWORD PTR [r14],0x2d
   1400570bc:	jne    0x1400570c6
   1400570be:	mov    BYTE PTR [rbp+0x0],0x2d
   1400570c2:	add    rbp,0x1
   1400570c6:	movsxd rax,DWORD PTR [r14+0x4]
   1400570ca:	test   eax,eax
   1400570cc:	jg     0x1400570f5
   1400570ce:	or     rcx,0xffffffffffffffff
   1400570d2:	xor    eax,eax
   1400570d4:	mov    rdi,rbp
   1400570d7:	repnz scas al,BYTE PTR es:[rdi]
   1400570d9:	mov    rdx,rbp
   1400570dc:	not    rcx
   1400570df:	mov    r8,rcx
   1400570e2:	lea    rcx,[rbp+0x1]
   1400570e6:	call   0x1400478c0
   1400570eb:	mov    BYTE PTR [rbp+0x0],0x30
   1400570ef:	add    rbp,0x1
   1400570f3:	jmp    0x1400570f8
   1400570f5:	add    rbp,rax
   1400570f8:	test   r15d,r15d
   1400570fb:	jle    0x14005718e
   140057101:	or     rcx,0xffffffffffffffff
   140057105:	xor    eax,eax
   140057107:	mov    rdi,rbp
   14005710a:	repnz scas al,BYTE PTR es:[rdi]
   14005710c:	lea    r13,[rbp+0x1]
   140057110:	mov    rdx,rbp
   140057113:	not    rcx
   140057116:	mov    r8,rcx
   140057119:	mov    rcx,r13
   14005711c:	call   0x1400478c0
   140057121:	mov    rcx,QWORD PTR [rsp+0xa8]
   140057129:	mov    rdx,QWORD PTR [rcx+0x128]
   140057130:	mov    rax,QWORD PTR [rdx]
   140057133:	movzx  ecx,BYTE PTR [rax]
   140057136:	mov    BYTE PTR [rbp+0x0],cl
   140057139:	mov    ebx,DWORD PTR [r14+0x4]
   14005713d:	test   ebx,ebx
   14005713f:	jns    0x14005718e
   140057141:	neg    ebx
   140057143:	cmp    BYTE PTR [rsp+0xa0],0x0
   14005714b:	jne    0x140057158
   14005714d:	mov    eax,ebx
   14005714f:	mov    ebx,r15d
   140057152:	cmp    r15d,eax
   140057155:	cmovge ebx,eax
   140057158:	test   ebx,ebx
   14005715a:	je     0x14005717e
   14005715c:	xor    eax,eax
   14005715e:	or     rcx,0xffffffffffffffff
   140057162:	mov    rdi,r13
   140057165:	repnz scas al,BYTE PTR es:[rdi]
   140057167:	movsxd rax,ebx
   14005716a:	mov    rdx,r13
   14005716d:	not    rcx
   140057170:	add    rax,r13
   140057173:	mov    r8,rcx
   140057176:	mov    rcx,rax
   140057179:	call   0x1400478c0
   14005717e:	movsxd r8,ebx
   140057181:	mov    edx,0x30
   140057186:	mov    rcx,r13
   140057189:	call   0x140047720
   14005718e:	test   r12b,r12b
   140057191:	je     0x14005719a
   140057193:	and    DWORD PTR [rsi+0xc8],0xfffffffd
   14005719a:	xor    eax,eax
   14005719c:	lea    r11,[rsp+0x50]
   1400571a1:	mov    rbx,QWORD PTR [r11+0x30]
   1400571a5:	mov    rbp,QWORD PTR [r11+0x40]
   1400571a9:	mov    rsi,QWORD PTR [r11+0x48]
   1400571ad:	mov    rsp,r11
   1400571b0:	pop    r15
   1400571b2:	pop    r14
   1400571b4:	pop    r13
   1400571b6:	pop    r12
   1400571b8:	pop    rdi
   1400571b9:	ret    
   1400571ba:	int3   
   1400571bb:	int3   
   1400571bc:	int3   
   1400571bd:	int3   
   1400571be:	int3   
   1400571bf:	int3   
   1400571c0:	rex push rbx
   1400571c2:	push   rbp
   1400571c3:	push   rsi
   1400571c4:	push   rdi
   1400571c5:	sub    rsp,0x78
   1400571c9:	mov    rax,QWORD PTR [rip+0x2fba0]        # 0x140086d70
   1400571d0:	xor    rax,rsp
   1400571d3:	mov    QWORD PTR [rsp+0x60],rax
   1400571d8:	mov    rcx,QWORD PTR [rcx]
   1400571db:	mov    rbp,QWORD PTR [rsp+0xc0]
   1400571e3:	mov    rbx,r8
   1400571e6:	mov    rdi,rdx
   1400571e9:	mov    esi,r9d
   1400571ec:	lea    r8,[rsp+0x48]
   1400571f1:	lea    rdx,[rsp+0x30]
   1400571f6:	mov    r9d,0x16
   1400571fc:	call   0x14005d360
   140057201:	test   rdi,rdi
   140057204:	jne    0x14005722c
   140057206:	call   0x140048680
   14005720b:	xor    ecx,ecx
   14005720d:	xor    r9d,r9d
   140057210:	xor    r8d,r8d
   140057213:	xor    edx,edx
   140057215:	mov    DWORD PTR [rax],0x16
   14005721b:	mov    QWORD PTR [rsp+0x20],rcx
   140057220:	call   0x14004e100
   140057225:	mov    eax,0x16
   14005722a:	jmp    0x140057295
   14005722c:	test   rbx,rbx
   14005722f:	je     0x140057206
   140057231:	mov    r9d,DWORD PTR [rsp+0x30]
   140057236:	xor    ecx,ecx
   140057238:	cmp    rbx,0xffffffffffffffff
   14005723c:	jne    0x140057243
   14005723e:	or     rdx,rbx
   140057241:	jmp    0x140057253
   140057243:	cmp    r9d,0x2d
   140057247:	mov    rax,rcx
   14005724a:	mov    rdx,rbx
   14005724d:	sete   al
   140057250:	sub    rdx,rax
   140057253:	mov    r8d,DWORD PTR [rsp+0x34]
   140057258:	add    r8d,esi
   14005725b:	cmp    r9d,0x2d
   14005725f:	lea    r9,[rsp+0x30]
   140057264:	sete   cl
   140057267:	add    rcx,rdi
   14005726a:	call   0x14005d240
   14005726f:	test   eax,eax
   140057271:	je     0x140057278
   140057273:	mov    BYTE PTR [rdi],0x0
   140057276:	jmp    0x140057295
   140057278:	lea    r9,[rsp+0x30]
   14005727d:	mov    r8d,esi
   140057280:	mov    rdx,rbx
   140057283:	mov    rcx,rdi
   140057286:	mov    QWORD PTR [rsp+0x28],rbp
   14005728b:	mov    BYTE PTR [rsp+0x20],0x0
   140057290:	call   0x140056f60
   140057295:	mov    rcx,QWORD PTR [rsp+0x60]
   14005729a:	xor    rcx,rsp
   14005729d:	call   0x140046470
   1400572a2:	add    rsp,0x78
   1400572a6:	pop    rdi
   1400572a7:	pop    rsi
   1400572a8:	pop    rbp
   1400572a9:	pop    rbx
   1400572aa:	ret    
   1400572ab:	int3   
   1400572ac:	int3   
   1400572ad:	int3   
   1400572ae:	int3   
   1400572af:	int3   
   1400572b0:	rex push rbp
   1400572b2:	push   rsi
   1400572b3:	push   rdi
   1400572b4:	push   r13
   1400572b6:	sub    rsp,0x98
   1400572bd:	mov    rax,QWORD PTR [rip+0x2faac]        # 0x140086d70
   1400572c4:	xor    rax,rsp
   1400572c7:	mov    QWORD PTR [rsp+0x70],rax
   1400572cc:	mov    rcx,QWORD PTR [rcx]
   1400572cf:	mov    r13,QWORD PTR [rsp+0xe8]
   1400572d7:	mov    rdi,r8
   1400572da:	mov    rsi,rdx
   1400572dd:	mov    ebp,r9d
   1400572e0:	lea    r8,[rsp+0x58]
   1400572e5:	lea    rdx,[rsp+0x40]
   1400572ea:	mov    r9d,0x16
   1400572f0:	call   0x14005d360
   1400572f5:	test   rsi,rsi
   1400572f8:	jne    0x140057323
   1400572fa:	call   0x140048680
   1400572ff:	xor    ecx,ecx
   140057301:	xor    r9d,r9d
   140057304:	xor    r8d,r8d
   140057307:	xor    edx,edx
   140057309:	mov    DWORD PTR [rax],0x16
   14005730f:	mov    QWORD PTR [rsp+0x20],rcx
   140057314:	call   0x14004e100
   140057319:	mov    eax,0x16
   14005731e:	jmp    0x1400573fa
   140057323:	test   rdi,rdi
   140057326:	je     0x1400572fa
   140057328:	xor    ecx,ecx
   14005732a:	mov    QWORD PTR [rsp+0x90],rbx
   140057332:	mov    QWORD PTR [rsp+0x88],r12
   14005733a:	mov    r12d,DWORD PTR [rsp+0x44]
   14005733f:	add    r12d,0xffffffff
   140057343:	cmp    DWORD PTR [rsp+0x40],0x2d
   140057348:	sete   cl
   14005734b:	cmp    rdi,0xffffffffffffffff
   14005734f:	lea    rbx,[rcx+rsi*1]
   140057353:	jne    0x14005735a
   140057355:	or     rdx,rdi
   140057358:	jmp    0x140057360
   14005735a:	mov    rdx,rdi
   14005735d:	sub    rdx,rcx
   140057360:	lea    r9,[rsp+0x40]
   140057365:	mov    r8d,ebp
   140057368:	mov    rcx,rbx
   14005736b:	call   0x14005d240
   140057370:	test   eax,eax
   140057372:	je     0x140057379
   140057374:	mov    BYTE PTR [rsi],0x0
   140057377:	jmp    0x1400573ea
   140057379:	mov    eax,DWORD PTR [rsp+0x44]
   14005737d:	add    eax,0xffffffff
   140057380:	cmp    r12d,eax
   140057383:	setl   cl
   140057386:	cmp    eax,0xfffffffc
   140057389:	jl     0x1400573c0
   14005738b:	cmp    eax,ebp
   14005738d:	jge    0x1400573c0
   14005738f:	test   cl,cl
   140057391:	je     0x1400573a1
   140057393:	movzx  eax,BYTE PTR [rbx]
   140057396:	add    rbx,0x1
   14005739a:	test   al,al
   14005739c:	jne    0x140057393
   14005739e:	mov    BYTE PTR [rbx-0x2],al
   1400573a1:	lea    r9,[rsp+0x40]
   1400573a6:	mov    r8d,ebp
   1400573a9:	mov    rdx,rdi
   1400573ac:	mov    rcx,rsi
   1400573af:	mov    QWORD PTR [rsp+0x28],r13
   1400573b4:	mov    BYTE PTR [rsp+0x20],0x1
   1400573b9:	call   0x140056f60
   1400573be:	jmp    0x1400573ea
   1400573c0:	mov    r9d,DWORD PTR [rsp+0xe0]
   1400573c8:	lea    rax,[rsp+0x40]
   1400573cd:	mov    QWORD PTR [rsp+0x30],r13
   1400573d2:	mov    r8d,ebp
   1400573d5:	mov    rdx,rdi
   1400573d8:	mov    rcx,rsi
   1400573db:	mov    BYTE PTR [rsp+0x28],0x1
   1400573e0:	mov    QWORD PTR [rsp+0x20],rax
   1400573e5:	call   0x140056640
   1400573ea:	mov    rbx,QWORD PTR [rsp+0x90]
   1400573f2:	mov    r12,QWORD PTR [rsp+0x88]
   1400573fa:	mov    rcx,QWORD PTR [rsp+0x70]
   1400573ff:	xor    rcx,rsp
   140057402:	call   0x140046470
   140057407:	add    rsp,0x98
   14005740e:	pop    r13
   140057410:	pop    rdi
   140057411:	pop    rsi
   140057412:	pop    rbp
   140057413:	ret    
   140057414:	int3   
   140057415:	int3   
   140057416:	int3   
   140057417:	int3   
   140057418:	int3   
   140057419:	int3   
   14005741a:	int3   
   14005741b:	int3   
   14005741c:	int3   
   14005741d:	int3   
   14005741e:	int3   
   14005741f:	int3   
   140057420:	sub    rsp,0x38
   140057424:	cmp    r9d,0x65
   140057428:	je     0x14005749d
   14005742a:	cmp    r9d,0x45
   14005742e:	je     0x14005749d
   140057430:	cmp    r9d,0x66
   140057434:	jne    0x14005744f
   140057436:	mov    rax,QWORD PTR [rsp+0x70]
   14005743b:	mov    r9d,DWORD PTR [rsp+0x60]
   140057440:	mov    QWORD PTR [rsp+0x20],rax
   140057445:	call   0x1400571c0
   14005744a:	add    rsp,0x38
   14005744e:	ret    
   14005744f:	cmp    r9d,0x61
   140057453:	je     0x14005747c
   140057455:	cmp    r9d,0x41
   140057459:	je     0x14005747c
   14005745b:	mov    rax,QWORD PTR [rsp+0x70]
   140057460:	mov    r9d,DWORD PTR [rsp+0x60]
   140057465:	mov    QWORD PTR [rsp+0x28],rax
   14005746a:	mov    eax,DWORD PTR [rsp+0x68]
   14005746e:	mov    DWORD PTR [rsp+0x20],eax
   140057472:	call   0x1400572b0
   140057477:	add    rsp,0x38
   14005747b:	ret    
   14005747c:	mov    rax,QWORD PTR [rsp+0x70]
   140057481:	mov    r9d,DWORD PTR [rsp+0x60]
   140057486:	mov    QWORD PTR [rsp+0x28],rax
   14005748b:	mov    eax,DWORD PTR [rsp+0x68]
   14005748f:	mov    DWORD PTR [rsp+0x20],eax
   140057493:	call   0x140056aa0
   140057498:	add    rsp,0x38
   14005749c:	ret    
   14005749d:	mov    rax,QWORD PTR [rsp+0x70]
   1400574a2:	mov    r9d,DWORD PTR [rsp+0x60]
   1400574a7:	mov    QWORD PTR [rsp+0x28],rax
   1400574ac:	mov    eax,DWORD PTR [rsp+0x68]
   1400574b0:	mov    DWORD PTR [rsp+0x20],eax
   1400574b4:	call   0x140056980
   1400574b9:	add    rsp,0x38
   1400574bd:	ret    
   1400574be:	int3   
   1400574bf:	int3   
   1400574c0:	sub    rsp,0x38
   1400574c4:	cmp    r9d,0x65
   1400574c8:	je     0x14005753a
   1400574ca:	cmp    r9d,0x45
   1400574ce:	je     0x14005753a
   1400574d0:	cmp    r9d,0x66
   1400574d4:	jne    0x1400574ee
   1400574d6:	mov    r9d,DWORD PTR [rsp+0x60]
   1400574db:	mov    QWORD PTR [rsp+0x20],0x0
   1400574e4:	call   0x1400571c0
   1400574e9:	add    rsp,0x38
   1400574ed:	ret    
   1400574ee:	cmp    r9d,0x61
   1400574f2:	je     0x14005751a
   1400574f4:	cmp    r9d,0x41
   1400574f8:	je     0x14005751a
   1400574fa:	mov    eax,DWORD PTR [rsp+0x68]
   1400574fe:	mov    r9d,DWORD PTR [rsp+0x60]
   140057503:	mov    QWORD PTR [rsp+0x28],0x0
   14005750c:	mov    DWORD PTR [rsp+0x20],eax
   140057510:	call   0x1400572b0
   140057515:	add    rsp,0x38
   140057519:	ret    
   14005751a:	mov    eax,DWORD PTR [rsp+0x68]
   14005751e:	mov    r9d,DWORD PTR [rsp+0x60]
   140057523:	mov    QWORD PTR [rsp+0x28],0x0
   14005752c:	mov    DWORD PTR [rsp+0x20],eax
   140057530:	call   0x140056aa0
   140057535:	add    rsp,0x38
   140057539:	ret    
   14005753a:	mov    eax,DWORD PTR [rsp+0x68]
   14005753e:	mov    r9d,DWORD PTR [rsp+0x60]
   140057543:	mov    QWORD PTR [rsp+0x28],0x0
   14005754c:	mov    DWORD PTR [rsp+0x20],eax
   140057550:	call   0x140056980
   140057555:	add    rsp,0x38
   140057559:	ret    
   14005755a:	int3   
   14005755b:	int3   
   14005755c:	int3   
   14005755d:	int3   
   14005755e:	int3   
   14005755f:	int3   
   140057560:	mov    QWORD PTR [rsp+0x10],rbx
   140057565:	push   rbp
   140057566:	push   rsi
   140057567:	push   rdi
   140057568:	push   r13
   14005756a:	push   r14
   14005756c:	sub    rsp,0x50
   140057570:	mov    edi,r8d
   140057573:	mov    r13,rdx
   140057576:	mov    r14,rcx
   140057579:	call   0x14004b980
   14005757e:	xor    ebx,ebx
   140057580:	cmp    QWORD PTR [rip+0x35f99],rbx        # 0x14008d520
   140057587:	mov    rbp,rax
   14005758a:	mov    DWORD PTR [rsp+0x98],ebx
   140057591:	mov    DWORD PTR [rsp+0x30],ebx
   140057595:	jne    0x14005768c
   14005759b:	lea    rcx,[rip+0x179de]        # 0x14006ef80
   1400575a2:	call   QWORD PTR [rip+0xcec0]        # 0x140064468
   1400575a8:	test   rax,rax
   1400575ab:	mov    rsi,rax
   1400575ae:	je     0x14005779f
   1400575b4:	lea    rdx,[rip+0x179b5]        # 0x14006ef70
   1400575bb:	mov    rcx,rax
   1400575be:	call   QWORD PTR [rip+0xd024]        # 0x1400645e8
   1400575c4:	test   rax,rax
   1400575c7:	je     0x14005779f
   1400575cd:	mov    rcx,rax
   1400575d0:	call   0x14004b8b0
   1400575d5:	lea    rdx,[rip+0x17984]        # 0x14006ef60
   1400575dc:	mov    rcx,rsi
   1400575df:	mov    QWORD PTR [rip+0x35f3a],rax        # 0x14008d520
   1400575e6:	call   QWORD PTR [rip+0xcffc]        # 0x1400645e8
   1400575ec:	mov    rcx,rax
   1400575ef:	call   0x14004b8b0
   1400575f4:	lea    rdx,[rip+0x1794d]        # 0x14006ef48
   1400575fb:	mov    rcx,rsi
   1400575fe:	mov    QWORD PTR [rip+0x35f23],rax        # 0x14008d528
   140057605:	call   QWORD PTR [rip+0xcfdd]        # 0x1400645e8
   14005760b:	mov    rcx,rax
   14005760e:	call   0x14004b8b0
   140057613:	lea    rcx,[rsp+0x98]
   14005761b:	mov    QWORD PTR [rip+0x35f0e],rax        # 0x14008d530
   140057622:	call   0x140048260
   140057627:	test   eax,eax
   140057629:	je     0x14005763f
   14005762b:	xor    r9d,r9d
   14005762e:	xor    r8d,r8d
   140057631:	xor    edx,edx
   140057633:	xor    ecx,ecx
   140057635:	mov    QWORD PTR [rsp+0x20],rbx
   14005763a:	call   0x14004e060
   14005763f:	cmp    DWORD PTR [rsp+0x98],0x2
   140057647:	jne    0x14005768c
   140057649:	lea    rdx,[rip+0x178d8]        # 0x14006ef28
   140057650:	mov    rcx,rsi
   140057653:	call   QWORD PTR [rip+0xcf8f]        # 0x1400645e8
   140057659:	mov    rcx,rax
   14005765c:	call   0x14004b8b0
   140057661:	test   rax,rax
   140057664:	mov    QWORD PTR [rip+0x35ed5],rax        # 0x14008d540
   14005766b:	je     0x14005768c
   14005766d:	lea    rdx,[rip+0x1789c]        # 0x14006ef10
   140057674:	mov    rcx,rsi
   140057677:	call   QWORD PTR [rip+0xcf6b]        # 0x1400645e8
   14005767d:	mov    rcx,rax
   140057680:	call   0x14004b8b0
   140057685:	mov    QWORD PTR [rip+0x35eac],rax        # 0x14008d538
   14005768c:	mov    rcx,QWORD PTR [rip+0x35ea5]        # 0x14008d538
   140057693:	mov    QWORD PTR [rsp+0x80],r12
   14005769b:	cmp    rcx,rbp
   14005769e:	je     0x140057738
   1400576a4:	cmp    QWORD PTR [rip+0x35e95],rbp        # 0x14008d540
   1400576ab:	je     0x140057738
   1400576b1:	call   0x14004ba70
   1400576b6:	mov    rcx,QWORD PTR [rip+0x35e83]        # 0x14008d540
   1400576bd:	mov    rsi,rax
   1400576c0:	call   0x14004ba70
   1400576c5:	test   rsi,rsi
   1400576c8:	mov    r12,rax
   1400576cb:	je     0x140057738
   1400576cd:	test   rax,rax
   1400576d0:	je     0x140057738
   1400576d2:	call   rsi
   1400576d4:	test   rax,rax
   1400576d7:	je     0x140057703
   1400576d9:	lea    rcx,[rsp+0x34]
   1400576de:	mov    r9d,0xc
   1400576e4:	lea    r8,[rsp+0x38]
   1400576e9:	mov    QWORD PTR [rsp+0x20],rcx
   1400576ee:	lea    edx,[r9-0xb]
   1400576f2:	mov    rcx,rax
   1400576f5:	call   r12
   1400576f8:	test   eax,eax
   1400576fa:	je     0x140057703
   1400576fc:	test   BYTE PTR [rsp+0x40],0x1
   140057701:	jne    0x140057738
   140057703:	lea    rcx,[rsp+0x30]
   140057708:	call   0x1400482b0
   14005770d:	test   eax,eax
   14005770f:	je     0x140057725
   140057711:	xor    r9d,r9d
   140057714:	xor    r8d,r8d
   140057717:	xor    edx,edx
   140057719:	xor    ecx,ecx
   14005771b:	mov    QWORD PTR [rsp+0x20],rbx
   140057720:	call   0x14004e060
   140057725:	cmp    DWORD PTR [rsp+0x30],0x4
   14005772a:	jb     0x140057732
   14005772c:	bts    edi,0x15
   140057730:	jmp    0x140057776
   140057732:	bts    edi,0x12
   140057736:	jmp    0x140057776
   140057738:	mov    rcx,QWORD PTR [rip+0x35de9]        # 0x14008d528
   14005773f:	cmp    rcx,rbp
   140057742:	je     0x140057776
   140057744:	call   0x14004ba70
   140057749:	test   rax,rax
   14005774c:	je     0x140057776
   14005774e:	call   rax
   140057750:	test   rax,rax
   140057753:	mov    rbx,rax
   140057756:	je     0x140057776
   140057758:	mov    rcx,QWORD PTR [rip+0x35dd1]        # 0x14008d530
   14005775f:	cmp    rcx,rbp
   140057762:	je     0x140057776
   140057764:	call   0x14004ba70
   140057769:	test   rax,rax
   14005776c:	je     0x140057776
   14005776e:	mov    rcx,rbx
   140057771:	call   rax
   140057773:	mov    rbx,rax
   140057776:	mov    rcx,QWORD PTR [rip+0x35da3]        # 0x14008d520
   14005777d:	call   0x14004ba70
   140057782:	mov    r12,QWORD PTR [rsp+0x80]
   14005778a:	test   rax,rax
   14005778d:	je     0x14005779f
   14005778f:	mov    r9d,edi
   140057792:	mov    r8,r13
   140057795:	mov    rdx,r14
   140057798:	mov    rcx,rbx
   14005779b:	call   rax
   14005779d:	jmp    0x1400577a1
   14005779f:	xor    eax,eax
   1400577a1:	mov    rbx,QWORD PTR [rsp+0x88]
   1400577a9:	add    rsp,0x50
   1400577ad:	pop    r14
   1400577af:	pop    r13
   1400577b1:	pop    rdi
   1400577b2:	pop    rsi
   1400577b3:	pop    rbp
   1400577b4:	ret    
   1400577b5:	int3   
   1400577b6:	int3   
   1400577b7:	int3   
   1400577b8:	int3   
   1400577b9:	int3   
   1400577ba:	int3   
   1400577bb:	int3   
   1400577bc:	int3   
   1400577bd:	int3   
   1400577be:	int3   
   1400577bf:	int3   
   1400577c0:	sub    rsp,0x38
   1400577c4:	test   rcx,rcx
   1400577c7:	mov    r9,rcx
   1400577ca:	je     0x1400577d9
   1400577cc:	test   rdx,rdx
   1400577cf:	je     0x1400577d9
   1400577d1:	test   r8,r8
   1400577d4:	jne    0x140057806
   1400577d6:	mov    BYTE PTR [rcx],r8b
   1400577d9:	call   0x140048680
   1400577de:	xor    r9d,r9d
   1400577e1:	xor    r8d,r8d
   1400577e4:	xor    edx,edx
   1400577e6:	xor    ecx,ecx
   1400577e8:	mov    QWORD PTR [rsp+0x20],0x0
   1400577f1:	mov    DWORD PTR [rax],0x16
   1400577f7:	call   0x14004e100
   1400577fc:	mov    eax,0x16
   140057801:	add    rsp,0x38
   140057805:	ret    
   140057806:	cmp    BYTE PTR [rcx],0x0
   140057809:	je     0x140057815
   14005780b:	add    rcx,0x1
   14005780f:	sub    rdx,0x1
   140057813:	jne    0x140057806
   140057815:	test   rdx,rdx
   140057818:	jne    0x140057820
   14005781a:	mov    BYTE PTR [r9],dl
   14005781d:	jmp    0x1400577d9
   14005781f:	nop
   140057820:	movzx  eax,BYTE PTR [r8]
   140057824:	add    rcx,0x1
   140057828:	add    r8,0x1
   14005782c:	test   al,al
   14005782e:	mov    BYTE PTR [rcx-0x1],al
   140057831:	je     0x140057839
   140057833:	sub    rdx,0x1
   140057837:	jne    0x140057820
   140057839:	test   rdx,rdx
   14005783c:	jne    0x14005786e
   14005783e:	mov    BYTE PTR [r9],dl
   140057841:	call   0x140048680
   140057846:	xor    r9d,r9d
   140057849:	xor    r8d,r8d
   14005784c:	xor    edx,edx
   14005784e:	xor    ecx,ecx
   140057850:	mov    DWORD PTR [rax],0x22
   140057856:	mov    QWORD PTR [rsp+0x20],0x0
   14005785f:	call   0x14004e100
   140057864:	mov    eax,0x22
   140057869:	add    rsp,0x38
   14005786d:	ret    
   14005786e:	xor    eax,eax
   140057870:	add    rsp,0x38
   140057874:	ret    
   140057875:	int3   
   140057876:	int3   
   140057877:	int3   
   140057878:	int3   
   140057879:	int3   
   14005787a:	int3   
   14005787b:	int3   
   14005787c:	int3   
   14005787d:	int3   
   14005787e:	int3   
   14005787f:	int3   
   140057880:	sub    rsp,0x38
   140057884:	test   r9,r9
   140057887:	mov    r11,rdx
   14005788a:	mov    r10,rcx
   14005788d:	jne    0x1400578a0
   14005788f:	test   rcx,rcx
   140057892:	jne    0x1400578a5
   140057894:	test   rdx,rdx
   140057897:	jne    0x1400578c1
   140057899:	xor    eax,eax
   14005789b:	add    rsp,0x38
   14005789f:	ret    
   1400578a0:	test   rcx,rcx
   1400578a3:	je     0x1400578c1
   1400578a5:	test   rdx,rdx
   1400578a8:	je     0x1400578c1
   1400578aa:	test   r9,r9
   1400578ad:	jne    0x1400578b9
   1400578af:	mov    BYTE PTR [rcx],r9b
   1400578b2:	xor    eax,eax
   1400578b4:	add    rsp,0x38
   1400578b8:	ret    
   1400578b9:	test   r8,r8
   1400578bc:	jne    0x1400578ee
   1400578be:	mov    BYTE PTR [rcx],r8b
   1400578c1:	call   0x140048680
   1400578c6:	xor    r9d,r9d
   1400578c9:	xor    r8d,r8d
   1400578cc:	xor    edx,edx
   1400578ce:	xor    ecx,ecx
   1400578d0:	mov    QWORD PTR [rsp+0x20],0x0
   1400578d9:	mov    DWORD PTR [rax],0x16
   1400578df:	call   0x14004e100
   1400578e4:	mov    eax,0x16
   1400578e9:	add    rsp,0x38
   1400578ed:	ret    
   1400578ee:	cmp    r9,0xffffffffffffffff
   1400578f2:	mov    rdx,rcx
   1400578f5:	mov    rcx,r11
   1400578f8:	jne    0x140057920
   1400578fa:	data16 xchg ax,ax
   1400578fd:	data16 xchg ax,ax
   140057900:	movzx  eax,BYTE PTR [r8]
   140057904:	add    rdx,0x1
   140057908:	add    r8,0x1
   14005790c:	test   al,al
   14005790e:	mov    BYTE PTR [rdx-0x1],al
   140057911:	je     0x140057947
   140057913:	sub    rcx,0x1
   140057917:	jne    0x140057900
   140057919:	jmp    0x140057947
   14005791b:	xchg   ax,ax
   14005791d:	data16 xchg ax,ax
   140057920:	movzx  eax,BYTE PTR [r8]
   140057924:	add    rdx,0x1
   140057928:	add    r8,0x1
   14005792c:	test   al,al
   14005792e:	mov    BYTE PTR [rdx-0x1],al
   140057931:	je     0x14005793f
   140057933:	sub    rcx,0x1
   140057937:	je     0x14005793f
   140057939:	sub    r9,0x1
   14005793d:	jne    0x140057920
   14005793f:	test   r9,r9
   140057942:	jne    0x140057947
   140057944:	mov    BYTE PTR [rdx],r9b
   140057947:	test   rcx,rcx
   14005794a:	jne    0x140057899
   140057950:	cmp    r9,0xffffffffffffffff
   140057954:	jne    0x140057963
   140057956:	mov    BYTE PTR [r10+r11*1-0x1],cl
   14005795b:	lea    eax,[rcx+0x50]
   14005795e:	add    rsp,0x38
   140057962:	ret    
   140057963:	mov    BYTE PTR [r10],0x0
   140057967:	call   0x140048680
   14005796c:	xor    r9d,r9d
   14005796f:	xor    r8d,r8d
   140057972:	xor    edx,edx
   140057974:	xor    ecx,ecx
   140057976:	mov    DWORD PTR [rax],0x22
   14005797c:	mov    QWORD PTR [rsp+0x20],0x0
   140057985:	call   0x14004e100
   14005798a:	mov    eax,0x22
   14005798f:	add    rsp,0x38
   140057993:	ret    
   140057994:	int3   
   140057995:	int3   
   140057996:	int3   
   140057997:	int3   
   140057998:	int3   
   140057999:	int3   
   14005799a:	int3   
   14005799b:	int3   
   14005799c:	int3   
   14005799d:	int3   
   14005799e:	int3   
   14005799f:	int3   
   1400579a0:	sub    rsp,0x38
   1400579a4:	test   rcx,rcx
   1400579a7:	mov    r9,rcx
   1400579aa:	je     0x1400579b9
   1400579ac:	test   rdx,rdx
   1400579af:	je     0x1400579b9
   1400579b1:	test   r8,r8
   1400579b4:	jne    0x1400579f0
   1400579b6:	mov    BYTE PTR [rcx],r8b
   1400579b9:	call   0x140048680
   1400579be:	xor    r9d,r9d
   1400579c1:	xor    r8d,r8d
   1400579c4:	xor    edx,edx
   1400579c6:	xor    ecx,ecx
   1400579c8:	mov    QWORD PTR [rsp+0x20],0x0
   1400579d1:	mov    DWORD PTR [rax],0x16
   1400579d7:	call   0x14004e100
   1400579dc:	mov    eax,0x16
   1400579e1:	add    rsp,0x38
   1400579e5:	ret    
   1400579e6:	data16 data16 xchg ax,ax
   1400579ea:	data16 xchg ax,ax
   1400579ed:	data16 xchg ax,ax
   1400579f0:	movzx  eax,BYTE PTR [r8]
   1400579f4:	add    rcx,0x1
   1400579f8:	add    r8,0x1
   1400579fc:	test   al,al
   1400579fe:	mov    BYTE PTR [rcx-0x1],al
   140057a01:	je     0x140057a09
   140057a03:	sub    rdx,0x1
   140057a07:	jne    0x1400579f0
   140057a09:	test   rdx,rdx
   140057a0c:	jne    0x140057a3e
   140057a0e:	mov    BYTE PTR [r9],dl
   140057a11:	call   0x140048680
   140057a16:	xor    r9d,r9d
   140057a19:	xor    r8d,r8d
   140057a1c:	xor    edx,edx
   140057a1e:	xor    ecx,ecx
   140057a20:	mov    DWORD PTR [rax],0x22
   140057a26:	mov    QWORD PTR [rsp+0x20],0x0
   140057a2f:	call   0x14004e100
   140057a34:	mov    eax,0x22
   140057a39:	add    rsp,0x38
   140057a3d:	ret    
   140057a3e:	xor    eax,eax
   140057a40:	add    rsp,0x38
   140057a44:	ret    
   140057a45:	int3   
   140057a46:	int3   
   140057a47:	int3   
   140057a48:	int3   
   140057a49:	int3   
   140057a4a:	int3   
   140057a4b:	int3   
   140057a4c:	int3   
   140057a4d:	int3   
   140057a4e:	int3   
   140057a4f:	int3   
   140057a50:	sub    rsp,0x38
   140057a54:	test   ecx,ecx
   140057a56:	js     0x140057a7e
   140057a58:	cmp    ecx,0x2
   140057a5b:	jle    0x140057a6d
   140057a5d:	cmp    ecx,0x3
   140057a60:	jne    0x140057a7e
   140057a62:	mov    eax,DWORD PTR [rip+0x34bb8]        # 0x14008c620
   140057a68:	add    rsp,0x38
   140057a6c:	ret    
   140057a6d:	mov    eax,DWORD PTR [rip+0x34bad]        # 0x14008c620
   140057a73:	mov    DWORD PTR [rip+0x34ba7],ecx        # 0x14008c620
   140057a79:	add    rsp,0x38
   140057a7d:	ret    
   140057a7e:	call   0x140048680
   140057a83:	xor    r9d,r9d
   140057a86:	xor    r8d,r8d
   140057a89:	xor    edx,edx
   140057a8b:	xor    ecx,ecx
   140057a8d:	mov    QWORD PTR [rsp+0x20],0x0
   140057a96:	mov    DWORD PTR [rax],0x16
   140057a9c:	call   0x14004e100
   140057aa1:	or     eax,0xffffffff
   140057aa4:	add    rsp,0x38
   140057aa8:	ret    
   140057aa9:	int3   
   140057aaa:	int3   
   140057aab:	int3   
   140057aac:	int3   
   140057aad:	int3   
   140057aae:	int3   
   140057aaf:	int3   
   140057ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140057ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140057aba:	push   rdi
   140057abb:	sub    rsp,0x20
   140057abf:	lea    rax,[rip+0x17df2]        # 0x14006f8b8
   140057ac6:	mov    rsi,rdx
   140057ac9:	mov    rbx,rcx
   140057acc:	mov    QWORD PTR [rcx],rax
   140057acf:	mov    rdi,QWORD PTR [rdx]
   140057ad2:	test   rdi,rdi
   140057ad5:	je     0x140057b1d
   140057ad7:	or     rcx,0xffffffffffffffff
   140057adb:	xor    eax,eax
   140057add:	repnz scas al,BYTE PTR es:[rdi]
   140057adf:	not    rcx
   140057ae2:	lea    rdi,[rcx-0x1]
   140057ae6:	call   0x1400480c0
   140057aeb:	test   rax,rax
   140057aee:	mov    QWORD PTR [rbx+0x8],rax
   140057af2:	je     0x140057b03
   140057af4:	mov    r8,QWORD PTR [rsi]
   140057af7:	lea    rdx,[rdi+0x1]
   140057afb:	mov    rcx,rax
   140057afe:	call   0x1400579a0
   140057b03:	mov    DWORD PTR [rbx+0x10],0x1
   140057b0a:	mov    rax,rbx
   140057b0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140057b12:	mov    rsi,QWORD PTR [rsp+0x38]
   140057b17:	add    rsp,0x20
   140057b1b:	pop    rdi
   140057b1c:	ret    
   140057b1d:	mov    rsi,QWORD PTR [rsp+0x38]
   140057b22:	mov    rax,rbx
   140057b25:	mov    rbx,QWORD PTR [rsp+0x30]
   140057b2a:	mov    QWORD PTR [rcx+0x8],0x0
   140057b32:	mov    DWORD PTR [rcx+0x10],0x1
   140057b39:	add    rsp,0x20
   140057b3d:	pop    rdi
   140057b3e:	ret    
   140057b3f:	int3   
   140057b40:	mov    QWORD PTR [rsp+0x10],rbx
   140057b45:	push   rsi
   140057b46:	sub    rsp,0x20
   140057b4a:	lea    rax,[rip+0x17d67]        # 0x14006f8b8
   140057b51:	mov    rsi,rdx
   140057b54:	mov    rbx,rcx
   140057b57:	mov    QWORD PTR [rcx],rax
   140057b5a:	mov    eax,DWORD PTR [rdx+0x10]
   140057b5d:	test   eax,eax
   140057b5f:	mov    DWORD PTR [rcx+0x10],eax
   140057b62:	je     0x140057bcd
   140057b64:	mov    QWORD PTR [rsp+0x30],rdi
   140057b69:	mov    rdi,QWORD PTR [rdx+0x8]
   140057b6d:	test   rdi,rdi
   140057b70:	je     0x140057bb2
   140057b72:	or     rcx,0xffffffffffffffff
   140057b76:	xor    eax,eax
   140057b78:	repnz scas al,BYTE PTR es:[rdi]
   140057b7a:	not    rcx
   140057b7d:	lea    rdi,[rcx-0x1]
   140057b81:	call   0x1400480c0
   140057b86:	test   rax,rax
   140057b89:	mov    QWORD PTR [rbx+0x8],rax
   140057b8d:	je     0x140057b9f
   140057b8f:	mov    r8,QWORD PTR [rsi+0x8]
   140057b93:	lea    rdx,[rdi+0x1]
   140057b97:	mov    rcx,rax
   140057b9a:	call   0x1400579a0
   140057b9f:	mov    rax,rbx
   140057ba2:	mov    rdi,QWORD PTR [rsp+0x30]
   140057ba7:	mov    rbx,QWORD PTR [rsp+0x38]
   140057bac:	add    rsp,0x20
   140057bb0:	pop    rsi
   140057bb1:	ret    
   140057bb2:	mov    rdi,QWORD PTR [rsp+0x30]
   140057bb7:	mov    QWORD PTR [rcx+0x8],0x0
   140057bbf:	mov    rax,rbx
   140057bc2:	mov    rbx,QWORD PTR [rsp+0x38]
   140057bc7:	add    rsp,0x20
   140057bcb:	pop    rsi
   140057bcc:	ret    
   140057bcd:	mov    rax,QWORD PTR [rdx+0x8]
   140057bd1:	mov    rbx,QWORD PTR [rsp+0x38]
   140057bd6:	mov    QWORD PTR [rcx+0x8],rax
   140057bda:	mov    rax,rcx
   140057bdd:	add    rsp,0x20
   140057be1:	pop    rsi
   140057be2:	ret    
   140057be3:	int3   
   140057be4:	int3   
   140057be5:	int3   
   140057be6:	int3   
   140057be7:	int3   
   140057be8:	int3   
   140057be9:	int3   
   140057bea:	int3   
   140057beb:	int3   
   140057bec:	int3   
   140057bed:	int3   
   140057bee:	int3   
   140057bef:	int3   
   140057bf0:	sub    rsp,0x28
   140057bf4:	cmp    DWORD PTR [rcx+0x10],0x0
   140057bf8:	lea    rax,[rip+0x17cb9]        # 0x14006f8b8
   140057bff:	mov    QWORD PTR [rcx],rax
   140057c02:	je     0x140057c0d
   140057c04:	mov    rcx,QWORD PTR [rcx+0x8]
   140057c08:	call   0x1400485c0
   140057c0d:	add    rsp,0x28
   140057c11:	ret    
   140057c12:	int3   
   140057c13:	int3   
   140057c14:	int3   
   140057c15:	int3   
   140057c16:	int3   
   140057c17:	int3   
   140057c18:	int3   
   140057c19:	int3   
   140057c1a:	int3   
   140057c1b:	int3   
   140057c1c:	int3   
   140057c1d:	int3   
   140057c1e:	int3   
   140057c1f:	int3   
   140057c20:	mov    rax,QWORD PTR [rcx+0x8]
   140057c24:	test   rax,rax
   140057c27:	jne    0x140057c30
   140057c29:	lea    rax,[rip+0x17c98]        # 0x14006f8c8
   140057c30:	ret    0x0
   140057c33:	int3   
   140057c34:	int3   
   140057c35:	int3   
   140057c36:	int3   
   140057c37:	int3   
   140057c38:	int3   
   140057c39:	int3   
   140057c3a:	int3   
   140057c3b:	int3   
   140057c3c:	int3   
   140057c3d:	int3   
   140057c3e:	int3   
   140057c3f:	int3   
   140057c40:	mov    QWORD PTR [rsp+0x8],rbx
   140057c45:	push   rdi
   140057c46:	sub    rsp,0x20
   140057c4a:	cmp    DWORD PTR [rcx+0x10],0x0
   140057c4e:	lea    rax,[rip+0x17c63]        # 0x14006f8b8
   140057c55:	mov    edi,edx
   140057c57:	mov    QWORD PTR [rcx],rax
   140057c5a:	mov    rbx,rcx
   140057c5d:	je     0x140057c68
   140057c5f:	mov    rcx,QWORD PTR [rcx+0x8]
   140057c63:	call   0x1400485c0
   140057c68:	test   dil,0x1
   140057c6c:	je     0x140057c76
   140057c6e:	mov    rcx,rbx
   140057c71:	call   0x14001ac50
   140057c76:	mov    rax,rbx
   140057c79:	mov    rbx,QWORD PTR [rsp+0x30]
   140057c7e:	add    rsp,0x20
   140057c82:	pop    rdi
   140057c83:	ret    
   140057c84:	int3   
   140057c85:	int3   
   140057c86:	int3   
   140057c87:	int3   
   140057c88:	int3   
   140057c89:	int3   
   140057c8a:	int3   
   140057c8b:	int3   
   140057c8c:	int3   
   140057c8d:	int3   
   140057c8e:	int3   
   140057c8f:	int3   
   140057c90:	mov    rax,QWORD PTR [rsp]
   140057c94:	mov    QWORD PTR [rcx],rax
   140057c97:	ret    
   140057c98:	int3   
   140057c99:	int3   
   140057c9a:	int3   
   140057c9b:	int3   
   140057c9c:	int3   
   140057c9d:	int3   
   140057c9e:	int3   
   140057c9f:	int3   
   140057ca0:	xor    edx,edx
   140057ca2:	mov    eax,0x1
   140057ca7:	test   rcx,rcx
   140057caa:	cmove  eax,edx
   140057cad:	ret    
   140057cae:	int3   
   140057caf:	int3   
   140057cb0:	mov    DWORD PTR [rip+0x35a02],0x0        # 0x14008d6bc
   140057cba:	ret    
   140057cbb:	int3   
   140057cbc:	int3   
   140057cbd:	int3   
   140057cbe:	int3   
   140057cbf:	int3   
   140057cc0:	rex push rbp
   140057cc2:	push   r12
   140057cc4:	push   r13
   140057cc6:	push   r14
   140057cc8:	push   r15
   140057cca:	sub    rsp,0x60
   140057cce:	lea    rbp,[rsp+0x40]
   140057cd3:	mov    QWORD PTR [rbp+0x50],rbx
   140057cd7:	mov    QWORD PTR [rbp+0x58],rsi
   140057cdb:	mov    QWORD PTR [rbp+0x60],rdi
   140057cdf:	mov    rax,QWORD PTR [rip+0x2f08a]        # 0x140086d70
   140057ce6:	xor    rax,rbp
   140057ce9:	mov    QWORD PTR [rbp+0x18],rax
   140057ced:	mov    r10d,DWORD PTR [rip+0x358c0]        # 0x14008d5b4
   140057cf4:	xor    ebx,ebx
   140057cf6:	mov    r14,r9
   140057cf9:	test   r10d,r10d
   140057cfc:	mov    QWORD PTR [rbp+0x8],r9
   140057d00:	mov    DWORD PTR [rbp+0x0],r8d
   140057d04:	mov    r15d,edx
   140057d07:	mov    DWORD PTR [rbp+0x10],edx
   140057d0a:	mov    rdi,rcx
   140057d0d:	jne    0x140057d5a
   140057d0f:	lea    r9d,[rbx+0x1]
   140057d13:	lea    r8,[rip+0x1712a]        # 0x14006ee44
   140057d1a:	mov    edx,0x100
   140057d1f:	xor    ecx,ecx
   140057d21:	mov    DWORD PTR [rsp+0x28],ebx
   140057d25:	mov    QWORD PTR [rsp+0x20],rbx
   140057d2a:	call   QWORD PTR [rip+0xc648]        # 0x140064378
   140057d30:	test   eax,eax
   140057d32:	je     0x140057d3a
   140057d34:	lea    r10d,[rbx+0x1]
   140057d38:	jmp    0x140057d53
   140057d3a:	call   QWORD PTR [rip+0xc8c0]        # 0x140064600
   140057d40:	mov    r10d,DWORD PTR [rip+0x3586d]        # 0x14008d5b4
   140057d47:	mov    ecx,0x2
   140057d4c:	cmp    eax,0x78
   140057d4f:	cmove  r10d,ecx
   140057d53:	mov    DWORD PTR [rip+0x3585a],r10d        # 0x14008d5b4
   140057d5a:	mov    r9d,DWORD PTR [rbp+0x70]
   140057d5e:	test   r9d,r9d
   140057d61:	jle    0x140057d9f
   140057d63:	mov    eax,r9d
   140057d66:	mov    rcx,r14
   140057d69:	data16 xchg ax,ax
   140057d6c:	data16 data16 xchg ax,ax
   140057d70:	sub    eax,0x1
   140057d73:	cmp    BYTE PTR [rcx],bl
   140057d75:	je     0x140057d82
   140057d77:	add    rcx,0x1
   140057d7b:	test   eax,eax
   140057d7d:	jne    0x140057d70
   140057d7f:	or     eax,0xffffffff
   140057d82:	mov    ecx,r9d
   140057d85:	sub    ecx,eax
   140057d87:	sub    ecx,0x1
   140057d8a:	cmp    ecx,r9d
   140057d8d:	jge    0x140057d99
   140057d8f:	lea    r9d,[rcx+0x1]
   140057d93:	mov    DWORD PTR [rbp+0x70],r9d
   140057d97:	jmp    0x140057d9f
   140057d99:	mov    r9d,ecx
   140057d9c:	mov    DWORD PTR [rbp+0x70],ecx
   140057d9f:	cmp    r10d,0x2
   140057da3:	je     0x14005801a
   140057da9:	test   r10d,r10d
   140057dac:	je     0x14005801a
   140057db2:	cmp    r10d,0x1
   140057db6:	jne    0x14005804d
   140057dbc:	mov    r13d,DWORD PTR [rbp+0x88]
   140057dc3:	mov    r12d,ebx
   140057dc6:	test   r13d,r13d
   140057dc9:	jne    0x140057dd2
   140057dcb:	mov    rax,QWORD PTR [rdi]
   140057dce:	mov    r13d,DWORD PTR [rax+0x4]
   140057dd2:	cmp    DWORD PTR [rbp+0x90],ebx
   140057dd8:	mov    edx,0x1
   140057ddd:	mov    eax,0x9
   140057de2:	mov    r8,r14
   140057de5:	mov    ecx,r13d
   140057de8:	cmovne edx,eax
   140057deb:	mov    DWORD PTR [rsp+0x28],ebx
   140057def:	mov    QWORD PTR [rsp+0x20],rbx
   140057df4:	call   QWORD PTR [rip+0xc81e]        # 0x140064618
   140057dfa:	test   eax,eax
   140057dfc:	movsxd r14,eax
   140057dff:	je     0x14005804d
   140057e05:	jle    0x14005804d
   140057e0b:	xor    edx,edx
   140057e0d:	mov    rax,0xffffffffffffffe0
   140057e14:	div    r14
   140057e17:	cmp    rax,0x2
   140057e1b:	jb     0x14005804d
   140057e21:	lea    rcx,[r14+r14*1+0x10]
   140057e26:	movabs rdi,0xffffffffffffff0
   140057e30:	cmp    rcx,0x400
   140057e37:	ja     0x140057e67
   140057e39:	lea    rax,[rcx+0xf]
   140057e3d:	cmp    rax,rcx
   140057e40:	ja     0x140057e45
   140057e42:	mov    rax,rdi
   140057e45:	and    rax,0xfffffffffffffff0
   140057e49:	call   0x140063500
   140057e4e:	sub    rsp,rax
   140057e51:	lea    rsi,[rsp+0x40]
   140057e56:	test   rsi,rsi
   140057e59:	je     0x14005804d
   140057e5f:	mov    DWORD PTR [rsi],0xcccc
   140057e65:	jmp    0x140057e7a
   140057e67:	call   0x1400480c0
   140057e6c:	test   rax,rax
   140057e6f:	mov    rsi,rax
   140057e72:	je     0x140057e7e
   140057e74:	mov    DWORD PTR [rax],0xdddd
   140057e7a:	add    rsi,0x10
   140057e7e:	test   rsi,rsi
   140057e81:	je     0x14005804d
   140057e87:	mov    r9d,DWORD PTR [rbp+0x70]
   140057e8b:	mov    r8,QWORD PTR [rbp+0x8]
   140057e8f:	mov    edx,0x1
   140057e94:	mov    ecx,r13d
   140057e97:	mov    DWORD PTR [rsp+0x28],r14d
   140057e9c:	mov    QWORD PTR [rsp+0x20],rsi
   140057ea1:	call   QWORD PTR [rip+0xc771]        # 0x140064618
   140057ea7:	test   eax,eax
   140057ea9:	je     0x140058000
   140057eaf:	mov    edx,DWORD PTR [rbp+0x0]
   140057eb2:	mov    r9d,r14d
   140057eb5:	mov    r8,rsi
   140057eb8:	mov    ecx,r15d
   140057ebb:	mov    DWORD PTR [rsp+0x28],ebx
   140057ebf:	mov    QWORD PTR [rsp+0x20],rbx
   140057ec4:	call   QWORD PTR [rip+0xc4ae]        # 0x140064378
   140057eca:	test   eax,eax
   140057ecc:	movsxd r12,eax
   140057ecf:	je     0x140058000
   140057ed5:	mov    ecx,DWORD PTR [rbp+0x0]
   140057ed8:	bt     ecx,0xa
   140057edc:	jae    0x140057f18
   140057ede:	mov    eax,DWORD PTR [rbp+0x80]
   140057ee4:	test   eax,eax
   140057ee6:	je     0x140058000
   140057eec:	cmp    r12d,eax
   140057eef:	jg     0x140058000
   140057ef5:	mov    DWORD PTR [rsp+0x28],eax
   140057ef9:	mov    rax,QWORD PTR [rbp+0x78]
   140057efd:	mov    edx,ecx
   140057eff:	mov    r9d,r14d
   140057f02:	mov    r8,rsi
   140057f05:	mov    ecx,r15d
   140057f08:	mov    QWORD PTR [rsp+0x20],rax
   140057f0d:	call   QWORD PTR [rip+0xc465]        # 0x140064378
   140057f13:	jmp    0x140058000
   140057f18:	test   eax,eax
   140057f1a:	jle    0x140058000
   140057f20:	xor    edx,edx
   140057f22:	mov    rax,0xffffffffffffffe0
   140057f29:	div    r12
   140057f2c:	cmp    rax,0x2
   140057f30:	jb     0x140058000
   140057f36:	lea    rcx,[r12+r12*1+0x10]
   140057f3b:	cmp    rcx,0x400
   140057f42:	ja     0x140057f72
   140057f44:	lea    rax,[rcx+0xf]
   140057f48:	cmp    rax,rcx
   140057f4b:	ja     0x140057f50
   140057f4d:	mov    rax,rdi
   140057f50:	and    rax,0xfffffffffffffff0
   140057f54:	call   0x140063500
   140057f59:	sub    rsp,rax
   140057f5c:	lea    rdi,[rsp+0x40]
   140057f61:	test   rdi,rdi
   140057f64:	je     0x140058000
   140057f6a:	mov    DWORD PTR [rdi],0xcccc
   140057f70:	jmp    0x140057f85
   140057f72:	call   0x1400480c0
   140057f77:	test   rax,rax
   140057f7a:	mov    rdi,rax
   140057f7d:	je     0x140057f89
   140057f7f:	mov    DWORD PTR [rax],0xdddd
   140057f85:	add    rdi,0x10
   140057f89:	test   rdi,rdi
   140057f8c:	je     0x140058000
   140057f8e:	mov    edx,DWORD PTR [rbp+0x0]
   140057f91:	mov    r9d,r14d
   140057f94:	mov    r8,rsi
   140057f97:	mov    ecx,r15d
   140057f9a:	mov    DWORD PTR [rsp+0x28],r12d
   140057f9f:	mov    QWORD PTR [rsp+0x20],rdi
   140057fa4:	call   QWORD PTR [rip+0xc3ce]        # 0x140064378
   140057faa:	test   eax,eax
   140057fac:	je     0x140057fee
   140057fae:	mov    eax,DWORD PTR [rbp+0x80]
   140057fb4:	xor    edx,edx
   140057fb6:	mov    QWORD PTR [rsp+0x38],rbx
   140057fbb:	test   eax,eax
   140057fbd:	mov    r9d,r12d
   140057fc0:	mov    r8,rdi
   140057fc3:	mov    ecx,r13d
   140057fc6:	mov    QWORD PTR [rsp+0x30],rbx
   140057fcb:	jne    0x140057fd8
   140057fcd:	mov    DWORD PTR [rsp+0x28],ebx
   140057fd1:	mov    QWORD PTR [rsp+0x20],rbx
   140057fd6:	jmp    0x140057fe5
   140057fd8:	mov    DWORD PTR [rsp+0x28],eax
   140057fdc:	mov    rax,QWORD PTR [rbp+0x78]
   140057fe0:	mov    QWORD PTR [rsp+0x20],rax
   140057fe5:	call   QWORD PTR [rip+0xc505]        # 0x1400644f0
   140057feb:	mov    r12d,eax
   140057fee:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140057ff5:	lea    rcx,[rdi-0x10]
   140057ff9:	jne    0x140058000
   140057ffb:	call   0x1400485c0
   140058000:	cmp    DWORD PTR [rsi-0x10],0xdddd
   140058007:	lea    rcx,[rsi-0x10]
   14005800b:	jne    0x140058012
   14005800d:	call   0x1400485c0
   140058012:	mov    eax,r12d
   140058015:	jmp    0x1400581d6
   14005801a:	test   r15d,r15d
   14005801d:	mov    r12,rbx
   140058020:	jne    0x14005802d
   140058022:	mov    rax,QWORD PTR [rdi]
   140058025:	mov    r15d,DWORD PTR [rax+0x14]
   140058029:	mov    DWORD PTR [rbp+0x10],r15d
   14005802d:	mov    esi,DWORD PTR [rbp+0x88]
   140058033:	test   esi,esi
   140058035:	jne    0x14005803d
   140058037:	mov    rax,QWORD PTR [rdi]
   14005803a:	mov    esi,DWORD PTR [rax+0x4]
   14005803d:	mov    ecx,r15d
   140058040:	call   0x140058b00
   140058045:	cmp    eax,0xffffffff
   140058048:	mov    r13d,eax
   14005804b:	jne    0x140058054
   14005804d:	xor    eax,eax
   14005804f:	jmp    0x1400581d6
   140058054:	cmp    eax,esi
   140058056:	mov    r8,r14
   140058059:	je     0x1400581af
   14005805f:	lea    r9,[rbp+0x70]
   140058063:	mov    edx,eax
   140058065:	mov    ecx,esi
   140058067:	mov    DWORD PTR [rsp+0x28],ebx
   14005806b:	mov    QWORD PTR [rsp+0x20],rbx
   140058070:	call   0x140058b70
   140058075:	test   rax,rax
   140058078:	mov    r14,rax
   14005807b:	je     0x14005804d
   14005807d:	mov    r9d,DWORD PTR [rbp+0x70]
   140058081:	mov    edx,DWORD PTR [rbp+0x0]
   140058084:	mov    r8,rax
   140058087:	mov    ecx,r15d
   14005808a:	mov    DWORD PTR [rsp+0x28],ebx
   14005808e:	mov    QWORD PTR [rsp+0x20],rbx
   140058093:	call   QWORD PTR [rip+0xc2d7]        # 0x140064370
   140058099:	mov    r15,QWORD PTR [rbp+0x78]
   14005809d:	test   eax,eax
   14005809f:	movsxd r9,eax
   1400580a2:	mov    DWORD PTR [rbp+0x8],r9d
   1400580a6:	jle    0x140058193
   1400580ac:	cmp    r9,0xffffffffffffffe0
   1400580b0:	mov    rcx,r9
   1400580b3:	ja     0x140058193
   1400580b9:	add    rcx,0x10
   1400580bd:	cmp    rcx,0x400
   1400580c4:	ja     0x1400580fe
   1400580c6:	lea    rdi,[rcx+0xf]
   1400580ca:	cmp    rdi,rcx
   1400580cd:	ja     0x1400580d9
   1400580cf:	movabs rdi,0xffffffffffffff0
   1400580d9:	and    rdi,0xfffffffffffffff0
   1400580dd:	mov    rax,rdi
   1400580e0:	call   0x140063500
   1400580e5:	sub    rsp,rdi
   1400580e8:	lea    rdi,[rsp+0x40]
   1400580ed:	test   rdi,rdi
   1400580f0:	je     0x140058193
   1400580f6:	mov    DWORD PTR [rdi],0xcccc
   1400580fc:	jmp    0x140058111
   1400580fe:	call   0x1400480c0
   140058103:	test   rax,rax
   140058106:	mov    rdi,rax
   140058109:	je     0x140058115
   14005810b:	mov    DWORD PTR [rax],0xdddd
   140058111:	add    rdi,0x10
   140058115:	test   rdi,rdi
   140058118:	mov    r9d,DWORD PTR [rbp+0x8]
   14005811c:	je     0x140058193
   14005811e:	movsxd r8,r9d
   140058121:	xor    edx,edx
   140058123:	mov    rcx,rdi
   140058126:	call   0x140047720
   14005812b:	mov    r11d,DWORD PTR [rbp+0x8]
   14005812f:	mov    r9d,DWORD PTR [rbp+0x70]
   140058133:	mov    edx,DWORD PTR [rbp+0x0]
   140058136:	mov    ecx,DWORD PTR [rbp+0x10]
   140058139:	mov    DWORD PTR [rsp+0x28],r11d
   14005813e:	mov    r8,r14
   140058141:	mov    QWORD PTR [rsp+0x20],rdi
   140058146:	call   QWORD PTR [rip+0xc224]        # 0x140064370
   14005814c:	test   eax,eax
   14005814e:	mov    DWORD PTR [rbp+0x8],eax
   140058151:	je     0x140058181
   140058153:	mov    eax,DWORD PTR [rbp+0x80]
   140058159:	lea    r9,[rbp+0x8]
   14005815d:	mov    r8,rdi
   140058160:	mov    DWORD PTR [rsp+0x28],eax
   140058164:	mov    edx,esi
   140058166:	mov    ecx,r13d
   140058169:	mov    QWORD PTR [rsp+0x20],r15
   14005816e:	call   0x140058b70
   140058173:	mov    ecx,DWORD PTR [rbp+0x8]
   140058176:	test   rax,rax
   140058179:	mov    r12,rax
   14005817c:	cmove  ecx,ebx
   14005817f:	mov    ebx,ecx
   140058181:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140058188:	lea    rcx,[rdi-0x10]
   14005818c:	jne    0x140058193
   14005818e:	call   0x1400485c0
   140058193:	mov    rcx,r14
   140058196:	call   0x1400485c0
   14005819b:	test   r12,r12
   14005819e:	je     0x1400581d4
   1400581a0:	cmp    r15,r12
   1400581a3:	je     0x1400581d4
   1400581a5:	mov    rcx,r12
   1400581a8:	call   0x1400485c0
   1400581ad:	jmp    0x1400581d4
   1400581af:	mov    eax,DWORD PTR [rbp+0x80]
   1400581b5:	mov    r9d,DWORD PTR [rbp+0x70]
   1400581b9:	mov    edx,DWORD PTR [rbp+0x0]
   1400581bc:	mov    DWORD PTR [rsp+0x28],eax
   1400581c0:	mov    rax,QWORD PTR [rbp+0x78]
   1400581c4:	mov    ecx,r15d
   1400581c7:	mov    QWORD PTR [rsp+0x20],rax
   1400581cc:	call   QWORD PTR [rip+0xc19e]        # 0x140064370
   1400581d2:	mov    ebx,eax
   1400581d4:	mov    eax,ebx
   1400581d6:	mov    rcx,QWORD PTR [rbp+0x18]
   1400581da:	xor    rcx,rbp
   1400581dd:	call   0x140046470
   1400581e2:	mov    rbx,QWORD PTR [rbp+0x50]
   1400581e6:	mov    rsi,QWORD PTR [rbp+0x58]
   1400581ea:	mov    rdi,QWORD PTR [rbp+0x60]
   1400581ee:	lea    rsp,[rbp+0x20]
   1400581f2:	pop    r15
   1400581f4:	pop    r14
   1400581f6:	pop    r13
   1400581f8:	pop    r12
   1400581fa:	pop    rbp
   1400581fb:	ret    
   1400581fc:	int3   
   1400581fd:	int3   
   1400581fe:	int3   
   1400581ff:	int3   
   140058200:	mov    rax,rsp
   140058203:	push   rbx
   140058204:	sub    rsp,0x80
   14005820b:	mov    QWORD PTR [rax+0x8],rbp
   14005820f:	mov    QWORD PTR [rax+0x18],rdi
   140058213:	xor    dil,dil
   140058216:	test   rcx,rcx
   140058219:	mov    QWORD PTR [rax-0x10],r12
   14005821d:	mov    QWORD PTR [rax-0x18],r13
   140058221:	mov    BYTE PTR [rax-0x20],dil
   140058225:	mov    rbp,r9
   140058228:	mov    r12d,r8d
   14005822b:	mov    r13d,edx
   14005822e:	jne    0x1400582c1
   140058234:	mov    QWORD PTR [rax+0x10],rsi
   140058238:	call   0x14004bd60
   14005823d:	mov    rcx,QWORD PTR [rax+0xc0]
   140058244:	mov    rsi,QWORD PTR [rax+0xb8]
   14005824b:	mov    rbx,rax
   14005824e:	cmp    rcx,QWORD PTR [rip+0x2f64b]        # 0x1400878a0
   140058255:	mov    QWORD PTR [rsp+0x60],rax
   14005825a:	mov    QWORD PTR [rsp+0x50],rcx
   14005825f:	mov    QWORD PTR [rsp+0x58],rsi
   140058264:	je     0x14005827e
   140058266:	mov    ecx,DWORD PTR [rax+0xc8]
   14005826c:	test   DWORD PTR [rip+0x2f4b6],ecx        # 0x140087728
   140058272:	jne    0x14005827e
   140058274:	call   0x14004f030
   140058279:	mov    QWORD PTR [rsp+0x50],rax
   14005827e:	cmp    rsi,QWORD PTR [rip+0x2f39b]        # 0x140087620
   140058285:	mov    rsi,QWORD PTR [rsp+0x98]
   14005828d:	je     0x1400582a7
   14005828f:	mov    eax,DWORD PTR [rbx+0xc8]
   140058295:	test   DWORD PTR [rip+0x2f48d],eax        # 0x140087728
   14005829b:	jne    0x1400582a7
   14005829d:	call   0x14004e4e0
   1400582a2:	mov    QWORD PTR [rsp+0x58],rax
   1400582a7:	test   BYTE PTR [rbx+0xc8],0x2
   1400582ae:	jne    0x1400582de
   1400582b0:	or     DWORD PTR [rbx+0xc8],0x2
   1400582b7:	mov    dil,0x1
   1400582ba:	mov    BYTE PTR [rsp+0x68],dil
   1400582bf:	jmp    0x1400582de
   1400582c1:	mov    rax,QWORD PTR [rcx]
   1400582c4:	lea    rdx,[rsp+0x50]
   1400582c9:	mov    QWORD PTR [rdx],rax
   1400582cc:	mov    rax,QWORD PTR [rcx+0x8]
   1400582d0:	mov    QWORD PTR [rdx+0x8],rax
   1400582d4:	movzx  edi,BYTE PTR [rsp+0x68]
   1400582d9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400582de:	mov    eax,DWORD PTR [rsp+0xd0]
   1400582e5:	lea    rcx,[rsp+0x50]
   1400582ea:	mov    r9,rbp
   1400582ed:	mov    DWORD PTR [rsp+0x40],eax
   1400582f1:	mov    eax,DWORD PTR [rsp+0xc8]
   1400582f8:	mov    r8d,r12d
   1400582fb:	mov    DWORD PTR [rsp+0x38],eax
   1400582ff:	mov    eax,DWORD PTR [rsp+0xc0]
   140058306:	mov    edx,r13d
   140058309:	mov    DWORD PTR [rsp+0x30],eax
   14005830d:	mov    rax,QWORD PTR [rsp+0xb8]
   140058315:	mov    QWORD PTR [rsp+0x28],rax
   14005831a:	mov    eax,DWORD PTR [rsp+0xb0]
   140058321:	mov    DWORD PTR [rsp+0x20],eax
   140058325:	call   0x140057cc0
   14005832a:	mov    r13,QWORD PTR [rsp+0x70]
   14005832f:	mov    r12,QWORD PTR [rsp+0x78]
   140058334:	mov    rbp,QWORD PTR [rsp+0x90]
   14005833c:	test   dil,dil
   14005833f:	mov    rdi,QWORD PTR [rsp+0xa0]
   140058347:	je     0x140058350
   140058349:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140058350:	add    rsp,0x80
   140058357:	pop    rbx
   140058358:	ret    
   140058359:	int3   
   14005835a:	int3   
   14005835b:	int3   
   14005835c:	int3   
   14005835d:	int3   
   14005835e:	int3   
   14005835f:	int3   
   140058360:	mov    DWORD PTR [rsp+0x20],r9d
   140058365:	push   rbp
   140058366:	push   r12
   140058368:	push   r13
   14005836a:	push   r14
   14005836c:	push   r15
   14005836e:	sub    rsp,0x40
   140058372:	lea    rbp,[rsp+0x30]
   140058377:	mov    QWORD PTR [rbp+0x40],rbx
   14005837b:	mov    QWORD PTR [rbp+0x48],rsi
   14005837f:	mov    QWORD PTR [rbp+0x50],rdi
   140058383:	mov    rax,QWORD PTR [rip+0x2e9e6]        # 0x140086d70
   14005838a:	xor    rax,rbp
   14005838d:	mov    QWORD PTR [rbp+0x8],rax
   140058391:	mov    eax,DWORD PTR [rip+0x35221]        # 0x14008d5b8
   140058397:	mov    r14,r8
   14005839a:	mov    r15d,edx
   14005839d:	test   eax,eax
   14005839f:	mov    r12,rcx
   1400583a2:	jne    0x14005841e
   1400583a4:	mov    r8d,0x1
   1400583aa:	lea    r9,[rbp+0x0]
   1400583ae:	lea    rdx,[rip+0x16a8f]        # 0x14006ee44
   1400583b5:	mov    ecx,r8d
   1400583b8:	call   QWORD PTR [rip+0xbfd2]        # 0x140064390
   1400583be:	test   eax,eax
   1400583c0:	je     0x1400583ce
   1400583c2:	mov    DWORD PTR [rip+0x351ec],0x1        # 0x14008d5b8
   1400583cc:	jmp    0x14005842c
   1400583ce:	call   QWORD PTR [rip+0xc22c]        # 0x140064600
   1400583d4:	cmp    eax,0x78
   1400583d7:	jne    0x140058418
   1400583d9:	mov    DWORD PTR [rip+0x351d5],0x2        # 0x14008d5b8
   1400583e3:	mov    esi,DWORD PTR [rbp+0x70]
   1400583e6:	xor    edi,edi
   1400583e8:	test   esi,esi
   1400583ea:	jne    0x1400583f3
   1400583ec:	mov    rax,QWORD PTR [r12]
   1400583f0:	mov    esi,DWORD PTR [rax+0x14]
   1400583f3:	mov    ebx,DWORD PTR [rbp+0x68]
   1400583f6:	test   ebx,ebx
   1400583f8:	jne    0x140058401
   1400583fa:	mov    rax,QWORD PTR [r12]
   1400583fe:	mov    ebx,DWORD PTR [rax+0x4]
   140058401:	mov    ecx,esi
   140058403:	call   0x140058b00
   140058408:	cmp    eax,0xffffffff
   14005840b:	jne    0x14005853a
   140058411:	xor    eax,eax
   140058413:	jmp    0x140058592
   140058418:	mov    eax,DWORD PTR [rip+0x3519a]        # 0x14008d5b8
   14005841e:	cmp    eax,0x2
   140058421:	je     0x1400583e3
   140058423:	test   eax,eax
   140058425:	je     0x1400583e3
   140058427:	cmp    eax,0x1
   14005842a:	jne    0x140058411
   14005842c:	mov    esi,DWORD PTR [rbp+0x68]
   14005842f:	xor    edi,edi
   140058431:	test   esi,esi
   140058433:	jne    0x14005843c
   140058435:	mov    rax,QWORD PTR [r12]
   140058439:	mov    esi,DWORD PTR [rax+0x4]
   14005843c:	cmp    DWORD PTR [rbp+0x78],edi
   14005843f:	mov    r9d,DWORD PTR [rbp+0x58]
   140058443:	mov    edx,0x1
   140058448:	mov    eax,0x9
   14005844d:	mov    r8,r14
   140058450:	mov    ecx,esi
   140058452:	cmovne edx,eax
   140058455:	mov    DWORD PTR [rsp+0x28],edi
   140058459:	mov    QWORD PTR [rsp+0x20],rdi
   14005845e:	call   QWORD PTR [rip+0xc1b4]        # 0x140064618
   140058464:	test   eax,eax
   140058466:	movsxd r12,eax
   140058469:	je     0x140058411
   14005846b:	jle    0x140058411
   14005846d:	movabs rax,0x7ffffffffffffff0
   140058477:	cmp    r12,rax
   14005847a:	ja     0x140058411
   14005847c:	lea    rcx,[r12+r12*1+0x10]
   140058481:	cmp    rcx,0x400
   140058488:	ja     0x1400584bf
   14005848a:	lea    rax,[rcx+0xf]
   14005848e:	cmp    rax,rcx
   140058491:	ja     0x14005849d
   140058493:	movabs rax,0xffffffffffffff0
   14005849d:	and    rax,0xfffffffffffffff0
   1400584a1:	call   0x140063500
   1400584a6:	sub    rsp,rax
   1400584a9:	lea    rbx,[rsp+0x30]
   1400584ae:	test   rbx,rbx
   1400584b1:	je     0x140058411
   1400584b7:	mov    DWORD PTR [rbx],0xcccc
   1400584bd:	jmp    0x1400584d2
   1400584bf:	call   0x1400480c0
   1400584c4:	test   rax,rax
   1400584c7:	mov    rbx,rax
   1400584ca:	je     0x1400584d6
   1400584cc:	mov    DWORD PTR [rax],0xdddd
   1400584d2:	add    rbx,0x10
   1400584d6:	test   rbx,rbx
   1400584d9:	je     0x140058411
   1400584df:	lea    r8,[r12+r12*1]
   1400584e3:	xor    edx,edx
   1400584e5:	mov    rcx,rbx
   1400584e8:	call   0x140047720
   1400584ed:	mov    r9d,DWORD PTR [rbp+0x58]
   1400584f1:	mov    r8,r14
   1400584f4:	mov    edx,0x1
   1400584f9:	mov    ecx,esi
   1400584fb:	mov    DWORD PTR [rsp+0x28],r12d
   140058500:	mov    QWORD PTR [rsp+0x20],rbx
   140058505:	call   QWORD PTR [rip+0xc10d]        # 0x140064618
   14005850b:	test   eax,eax
   14005850d:	je     0x140058524
   14005850f:	mov    r9,QWORD PTR [rbp+0x60]
   140058513:	mov    r8d,eax
   140058516:	mov    rdx,rbx
   140058519:	mov    ecx,r15d
   14005851c:	call   QWORD PTR [rip+0xbe6e]        # 0x140064390
   140058522:	mov    edi,eax
   140058524:	cmp    DWORD PTR [rbx-0x10],0xdddd
   14005852b:	lea    rcx,[rbx-0x10]
   14005852f:	jne    0x140058536
   140058531:	call   0x1400485c0
   140058536:	mov    eax,edi
   140058538:	jmp    0x140058592
   14005853a:	cmp    eax,ebx
   14005853c:	je     0x140058566
   14005853e:	lea    r9,[rbp+0x58]
   140058542:	mov    r8,r14
   140058545:	mov    edx,eax
   140058547:	mov    ecx,ebx
   140058549:	mov    DWORD PTR [rsp+0x28],edi
   14005854d:	mov    QWORD PTR [rsp+0x20],rdi
   140058552:	call   0x140058b70
   140058557:	test   rax,rax
   14005855a:	mov    rdi,rax
   14005855d:	je     0x140058411
   140058563:	mov    r14,rax
   140058566:	mov    rax,QWORD PTR [rbp+0x60]
   14005856a:	mov    r9d,DWORD PTR [rbp+0x58]
   14005856e:	mov    r8,r14
   140058571:	mov    edx,r15d
   140058574:	mov    ecx,esi
   140058576:	mov    QWORD PTR [rsp+0x20],rax
   14005857b:	call   QWORD PTR [rip+0xbe07]        # 0x140064388
   140058581:	test   rdi,rdi
   140058584:	mov    ebx,eax
   140058586:	je     0x140058590
   140058588:	mov    rcx,rdi
   14005858b:	call   0x1400485c0
   140058590:	mov    eax,ebx
   140058592:	mov    rcx,QWORD PTR [rbp+0x8]
   140058596:	xor    rcx,rbp
   140058599:	call   0x140046470
   14005859e:	mov    rbx,QWORD PTR [rbp+0x40]
   1400585a2:	mov    rsi,QWORD PTR [rbp+0x48]
   1400585a6:	mov    rdi,QWORD PTR [rbp+0x50]
   1400585aa:	lea    rsp,[rbp+0x10]
   1400585ae:	pop    r15
   1400585b0:	pop    r14
   1400585b2:	pop    r13
   1400585b4:	pop    r12
   1400585b6:	pop    rbp
   1400585b7:	ret    
   1400585b8:	int3   
   1400585b9:	int3   
   1400585ba:	int3   
   1400585bb:	int3   
   1400585bc:	int3   
   1400585bd:	int3   
   1400585be:	int3   
   1400585bf:	int3   
   1400585c0:	mov    rax,rsp
   1400585c3:	push   rbx
   1400585c4:	sub    rsp,0x70
   1400585c8:	mov    QWORD PTR [rax+0x8],rbp
   1400585cc:	mov    QWORD PTR [rax+0x18],rdi
   1400585d0:	xor    dil,dil
   1400585d3:	test   rcx,rcx
   1400585d6:	mov    QWORD PTR [rax-0x10],r12
   1400585da:	mov    QWORD PTR [rax-0x18],r13
   1400585de:	mov    BYTE PTR [rax-0x20],dil
   1400585e2:	mov    ebp,r9d
   1400585e5:	mov    r12,r8
   1400585e8:	mov    r13d,edx
   1400585eb:	jne    0x14005867e
   1400585f1:	mov    QWORD PTR [rax+0x10],rsi
   1400585f5:	call   0x14004bd60
   1400585fa:	mov    rcx,QWORD PTR [rax+0xc0]
   140058601:	mov    rsi,QWORD PTR [rax+0xb8]
   140058608:	mov    rbx,rax
   14005860b:	cmp    rcx,QWORD PTR [rip+0x2f28e]        # 0x1400878a0
   140058612:	mov    QWORD PTR [rsp+0x50],rax
   140058617:	mov    QWORD PTR [rsp+0x40],rcx
   14005861c:	mov    QWORD PTR [rsp+0x48],rsi
   140058621:	je     0x14005863b
   140058623:	mov    ecx,DWORD PTR [rax+0xc8]
   140058629:	test   DWORD PTR [rip+0x2f0f9],ecx        # 0x140087728
   14005862f:	jne    0x14005863b
   140058631:	call   0x14004f030
   140058636:	mov    QWORD PTR [rsp+0x40],rax
   14005863b:	cmp    rsi,QWORD PTR [rip+0x2efde]        # 0x140087620
   140058642:	mov    rsi,QWORD PTR [rsp+0x88]
   14005864a:	je     0x140058664
   14005864c:	mov    eax,DWORD PTR [rbx+0xc8]
   140058652:	test   DWORD PTR [rip+0x2f0d0],eax        # 0x140087728
   140058658:	jne    0x140058664
   14005865a:	call   0x14004e4e0
   14005865f:	mov    QWORD PTR [rsp+0x48],rax
   140058664:	test   BYTE PTR [rbx+0xc8],0x2
   14005866b:	jne    0x14005869b
   14005866d:	or     DWORD PTR [rbx+0xc8],0x2
   140058674:	mov    dil,0x1
   140058677:	mov    BYTE PTR [rsp+0x58],dil
   14005867c:	jmp    0x14005869b
   14005867e:	mov    rax,QWORD PTR [rcx]
   140058681:	lea    rdx,[rsp+0x40]
   140058686:	mov    QWORD PTR [rdx],rax
   140058689:	mov    rax,QWORD PTR [rcx+0x8]
   14005868d:	mov    QWORD PTR [rdx+0x8],rax
   140058691:	movzx  edi,BYTE PTR [rsp+0x58]
   140058696:	mov    rbx,QWORD PTR [rsp+0x50]
   14005869b:	mov    eax,DWORD PTR [rsp+0xb8]
   1400586a2:	lea    rcx,[rsp+0x40]
   1400586a7:	mov    r9d,ebp
   1400586aa:	mov    DWORD PTR [rsp+0x38],eax
   1400586ae:	mov    eax,DWORD PTR [rsp+0xb0]
   1400586b5:	mov    r8,r12
   1400586b8:	mov    DWORD PTR [rsp+0x30],eax
   1400586bc:	mov    eax,DWORD PTR [rsp+0xa8]
   1400586c3:	mov    edx,r13d
   1400586c6:	mov    DWORD PTR [rsp+0x28],eax
   1400586ca:	mov    rax,QWORD PTR [rsp+0xa0]
   1400586d2:	mov    QWORD PTR [rsp+0x20],rax
   1400586d7:	call   0x140058360
   1400586dc:	mov    r13,QWORD PTR [rsp+0x60]
   1400586e1:	mov    r12,QWORD PTR [rsp+0x68]
   1400586e6:	mov    rbp,QWORD PTR [rsp+0x80]
   1400586ee:	test   dil,dil
   1400586f1:	mov    rdi,QWORD PTR [rsp+0x90]
   1400586f9:	je     0x140058702
   1400586fb:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140058702:	add    rsp,0x70
   140058706:	pop    rbx
   140058707:	ret    
   140058708:	int3   
   140058709:	int3   
   14005870a:	int3   
   14005870b:	int3   
   14005870c:	int3   
   14005870d:	int3   
   14005870e:	int3   
   14005870f:	int3   
   140058710:	test   rcx,rcx
   140058713:	je     0x1400588f9
   140058719:	push   rbx
   14005871a:	sub    rsp,0x20
   14005871e:	mov    rbx,rcx
   140058721:	mov    rcx,QWORD PTR [rcx+0x8]
   140058725:	call   0x1400485c0
   14005872a:	mov    rcx,QWORD PTR [rbx+0x10]
   14005872e:	call   0x1400485c0
   140058733:	mov    rcx,QWORD PTR [rbx+0x18]
   140058737:	call   0x1400485c0
   14005873c:	mov    rcx,QWORD PTR [rbx+0x20]
   140058740:	call   0x1400485c0
   140058745:	mov    rcx,QWORD PTR [rbx+0x28]
   140058749:	call   0x1400485c0
   14005874e:	mov    rcx,QWORD PTR [rbx+0x30]
   140058752:	call   0x1400485c0
   140058757:	mov    rcx,QWORD PTR [rbx]
   14005875a:	call   0x1400485c0
   14005875f:	mov    rcx,QWORD PTR [rbx+0x40]
   140058763:	call   0x1400485c0
   140058768:	mov    rcx,QWORD PTR [rbx+0x48]
   14005876c:	call   0x1400485c0
   140058771:	mov    rcx,QWORD PTR [rbx+0x50]
   140058775:	call   0x1400485c0
   14005877a:	mov    rcx,QWORD PTR [rbx+0x58]
   14005877e:	call   0x1400485c0
   140058783:	mov    rcx,QWORD PTR [rbx+0x60]
   140058787:	call   0x1400485c0
   14005878c:	mov    rcx,QWORD PTR [rbx+0x68]
   140058790:	call   0x1400485c0
   140058795:	mov    rcx,QWORD PTR [rbx+0x38]
   140058799:	call   0x1400485c0
   14005879e:	mov    rcx,QWORD PTR [rbx+0x70]
   1400587a2:	call   0x1400485c0
   1400587a7:	mov    rcx,QWORD PTR [rbx+0x78]
   1400587ab:	call   0x1400485c0
   1400587b0:	mov    rcx,QWORD PTR [rbx+0x80]
   1400587b7:	call   0x1400485c0
   1400587bc:	mov    rcx,QWORD PTR [rbx+0x88]
   1400587c3:	call   0x1400485c0
   1400587c8:	mov    rcx,QWORD PTR [rbx+0x90]
   1400587cf:	call   0x1400485c0
   1400587d4:	mov    rcx,QWORD PTR [rbx+0x98]
   1400587db:	call   0x1400485c0
   1400587e0:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400587e7:	call   0x1400485c0
   1400587ec:	mov    rcx,QWORD PTR [rbx+0xa8]
   1400587f3:	call   0x1400485c0
   1400587f8:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400587ff:	call   0x1400485c0
   140058804:	mov    rcx,QWORD PTR [rbx+0xb8]
   14005880b:	call   0x1400485c0
   140058810:	mov    rcx,QWORD PTR [rbx+0xc0]
   140058817:	call   0x1400485c0
   14005881c:	mov    rcx,QWORD PTR [rbx+0xc8]
   140058823:	call   0x1400485c0
   140058828:	mov    rcx,QWORD PTR [rbx+0xd0]
   14005882f:	call   0x1400485c0
   140058834:	mov    rcx,QWORD PTR [rbx+0xd8]
   14005883b:	call   0x1400485c0
   140058840:	mov    rcx,QWORD PTR [rbx+0xe0]
   140058847:	call   0x1400485c0
   14005884c:	mov    rcx,QWORD PTR [rbx+0xe8]
   140058853:	call   0x1400485c0
   140058858:	mov    rcx,QWORD PTR [rbx+0xf0]
   14005885f:	call   0x1400485c0
   140058864:	mov    rcx,QWORD PTR [rbx+0xf8]
   14005886b:	call   0x1400485c0
   140058870:	mov    rcx,QWORD PTR [rbx+0x100]
   140058877:	call   0x1400485c0
   14005887c:	mov    rcx,QWORD PTR [rbx+0x108]
   140058883:	call   0x1400485c0
   140058888:	mov    rcx,QWORD PTR [rbx+0x110]
   14005888f:	call   0x1400485c0
   140058894:	mov    rcx,QWORD PTR [rbx+0x118]
   14005889b:	call   0x1400485c0
   1400588a0:	mov    rcx,QWORD PTR [rbx+0x120]
   1400588a7:	call   0x1400485c0
   1400588ac:	mov    rcx,QWORD PTR [rbx+0x128]
   1400588b3:	call   0x1400485c0
   1400588b8:	mov    rcx,QWORD PTR [rbx+0x130]
   1400588bf:	call   0x1400485c0
   1400588c4:	mov    rcx,QWORD PTR [rbx+0x138]
   1400588cb:	call   0x1400485c0
   1400588d0:	mov    rcx,QWORD PTR [rbx+0x140]
   1400588d7:	call   0x1400485c0
   1400588dc:	mov    rcx,QWORD PTR [rbx+0x148]
   1400588e3:	call   0x1400485c0
   1400588e8:	mov    rcx,QWORD PTR [rbx+0x150]
   1400588ef:	call   0x1400485c0
   1400588f4:	add    rsp,0x20
   1400588f8:	pop    rbx
   1400588f9:	ret    0x0
   1400588fc:	int3   
   1400588fd:	int3   
   1400588fe:	int3   
   1400588ff:	int3   
   140058900:	test   rcx,rcx
   140058903:	je     0x140058947
   140058905:	push   rbx
   140058906:	sub    rsp,0x20
   14005890a:	mov    rbx,rcx
   14005890d:	mov    rcx,QWORD PTR [rcx]
   140058910:	cmp    rcx,QWORD PTR [rip+0x2f8d9]        # 0x1400881f0
   140058917:	je     0x14005891e
   140058919:	call   0x1400485c0
   14005891e:	mov    rcx,QWORD PTR [rbx+0x8]
   140058922:	cmp    rcx,QWORD PTR [rip+0x2f8cf]        # 0x1400881f8
   140058929:	je     0x140058930
   14005892b:	call   0x1400485c0
   140058930:	mov    rcx,QWORD PTR [rbx+0x10]
   140058934:	cmp    rcx,QWORD PTR [rip+0x2f8c5]        # 0x140088200
   14005893b:	je     0x140058942
   14005893d:	call   0x1400485c0
   140058942:	add    rsp,0x20
   140058946:	pop    rbx
   140058947:	ret    0x0
   14005894a:	int3   
   14005894b:	int3   
   14005894c:	int3   
   14005894d:	int3   
   14005894e:	int3   
   14005894f:	int3   
   140058950:	test   rcx,rcx
   140058953:	je     0x1400589e4
   140058959:	push   rbx
   14005895a:	sub    rsp,0x20
   14005895e:	mov    rbx,rcx
   140058961:	mov    rcx,QWORD PTR [rcx+0x18]
   140058965:	cmp    rcx,QWORD PTR [rip+0x2f89c]        # 0x140088208
   14005896c:	je     0x140058973
   14005896e:	call   0x1400485c0
   140058973:	mov    rcx,QWORD PTR [rbx+0x20]
   140058977:	cmp    rcx,QWORD PTR [rip+0x2f892]        # 0x140088210
   14005897e:	je     0x140058985
   140058980:	call   0x1400485c0
   140058985:	mov    rcx,QWORD PTR [rbx+0x28]
   140058989:	cmp    rcx,QWORD PTR [rip+0x2f888]        # 0x140088218
   140058990:	je     0x140058997
   140058992:	call   0x1400485c0
   140058997:	mov    rcx,QWORD PTR [rbx+0x30]
   14005899b:	cmp    rcx,QWORD PTR [rip+0x2f87e]        # 0x140088220
   1400589a2:	je     0x1400589a9
   1400589a4:	call   0x1400485c0
   1400589a9:	mov    rcx,QWORD PTR [rbx+0x38]
   1400589ad:	cmp    rcx,QWORD PTR [rip+0x2f874]        # 0x140088228
   1400589b4:	je     0x1400589bb
   1400589b6:	call   0x1400485c0
   1400589bb:	mov    rcx,QWORD PTR [rbx+0x40]
   1400589bf:	cmp    rcx,QWORD PTR [rip+0x2f86a]        # 0x140088230
   1400589c6:	je     0x1400589cd
   1400589c8:	call   0x1400485c0
   1400589cd:	mov    rcx,QWORD PTR [rbx+0x48]
   1400589d1:	cmp    rcx,QWORD PTR [rip+0x2f860]        # 0x140088238
   1400589d8:	je     0x1400589df
   1400589da:	call   0x1400485c0
   1400589df:	add    rsp,0x20
   1400589e3:	pop    rbx
   1400589e4:	ret    0x0
   1400589e7:	int3   
   1400589e8:	int3   
   1400589e9:	int3   
   1400589ea:	int3   
   1400589eb:	int3   
   1400589ec:	int3   
   1400589ed:	int3   
   1400589ee:	int3   
   1400589ef:	int3   
   1400589f0:	sub    rsp,0x28
   1400589f4:	call   0x14004bd60
   1400589f9:	mov    rcx,QWORD PTR [rax+0xc0]
   140058a00:	cmp    rcx,QWORD PTR [rip+0x2ee99]        # 0x1400878a0
   140058a07:	je     0x140058a24
   140058a09:	mov    eax,DWORD PTR [rax+0xc8]
   140058a0f:	test   DWORD PTR [rip+0x2ed13],eax        # 0x140087728
   140058a15:	jne    0x140058a24
   140058a17:	call   0x14004f030
   140058a1c:	mov    eax,DWORD PTR [rax+0x4]
   140058a1f:	add    rsp,0x28
   140058a23:	ret    
   140058a24:	mov    eax,DWORD PTR [rcx+0x4]
   140058a27:	add    rsp,0x28
   140058a2b:	ret    
   140058a2c:	int3   
   140058a2d:	int3   
   140058a2e:	int3   
   140058a2f:	int3   
   140058a30:	int3   
   140058a31:	int3   
   140058a32:	int3   
   140058a33:	int3   
   140058a34:	int3   
   140058a35:	int3   
   140058a36:	data16 data16 xchg ax,ax
   140058a3a:	data16 data16 xchg ax,ax
   140058a3e:	xchg   ax,ax
   140058a40:	test   r8,r8
   140058a43:	je     0x140058aba
   140058a45:	sub    rdx,rcx
   140058a48:	mov    r9,rdx
   140058a4b:	movabs r11,0x8101010101010100
   140058a55:	test   cl,0x7
   140058a58:	je     0x140058a79
   140058a5a:	mov    al,BYTE PTR [rcx]
   140058a5c:	mov    dl,BYTE PTR [rcx+r9*1]
   140058a60:	inc    rcx
   140058a63:	cmp    al,dl
   140058a65:	jne    0x140058abe
   140058a67:	dec    r8
   140058a6a:	je     0x140058aba
   140058a6c:	test   al,al
   140058a6e:	je     0x140058aba
   140058a70:	test   rcx,0x7
   140058a77:	jne    0x140058a5a
   140058a79:	lea    rdx,[rcx+r9*1]
   140058a7d:	and    dx,0xfff
   140058a82:	cmp    dx,0xff8
   140058a87:	ja     0x140058a5a
   140058a89:	mov    rax,QWORD PTR [rcx]
   140058a8c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140058a90:	cmp    rax,rdx
   140058a93:	jne    0x140058a5a
   140058a95:	add    rcx,0x8
   140058a99:	sub    r8,0x8
   140058a9d:	movabs r10,0x7efefefefefefeff
   140058aa7:	jbe    0x140058aba
   140058aa9:	xor    rax,0xffffffffffffffff
   140058aad:	add    r10,rdx
   140058ab0:	xor    rax,r10
   140058ab3:	test   r11,rax
   140058ab6:	je     0x140058a79
   140058ab8:	jmp    0x140058ac6
   140058aba:	xor    rax,rax
   140058abd:	ret    
   140058abe:	sbb    rax,rax
   140058ac1:	sbb    rax,0xffffffffffffffff
   140058ac5:	ret    
   140058ac6:	test   dl,dl
   140058ac8:	je     0x140058af1
   140058aca:	test   dh,dh
   140058acc:	je     0x140058af1
   140058ace:	shr    rdx,0x10
   140058ad2:	test   dl,dl
   140058ad4:	je     0x140058af1
   140058ad6:	test   dh,dh
   140058ad8:	je     0x140058af1
   140058ada:	shr    rdx,0x10
   140058ade:	test   dl,dl
   140058ae0:	je     0x140058af1
   140058ae2:	test   dh,dh
   140058ae4:	je     0x140058af1
   140058ae6:	shr    edx,0x10
   140058ae9:	test   dl,dl
   140058aeb:	je     0x140058af1
   140058aed:	test   dh,dh
   140058aef:	jne    0x140058a79
   140058af1:	xor    rax,rax
   140058af4:	ret    
   140058af5:	int3   
   140058af6:	int3   
   140058af7:	int3   
   140058af8:	int3   
   140058af9:	int3   
   140058afa:	int3   
   140058afb:	int3   
   140058afc:	int3   
   140058afd:	int3   
   140058afe:	int3   
   140058aff:	int3   
   140058b00:	sub    rsp,0x38
   140058b04:	mov    rax,QWORD PTR [rip+0x2e265]        # 0x140086d70
   140058b0b:	xor    rax,rsp
   140058b0e:	mov    QWORD PTR [rsp+0x28],rax
   140058b13:	lea    r8,[rsp+0x20]
   140058b18:	mov    r9d,0x6
   140058b1e:	mov    edx,0x1004
   140058b23:	mov    BYTE PTR [rsp+0x26],0x0
   140058b28:	call   QWORD PTR [rip+0xb86a]        # 0x140064398
   140058b2e:	test   eax,eax
   140058b30:	jne    0x140058b47
   140058b32:	or     eax,0xffffffff
   140058b35:	mov    rcx,QWORD PTR [rsp+0x28]
   140058b3a:	xor    rcx,rsp
   140058b3d:	call   0x140046470
   140058b42:	add    rsp,0x38
   140058b46:	ret    
   140058b47:	lea    rcx,[rsp+0x20]
   140058b4c:	call   0x14005ca20
   140058b51:	mov    rcx,QWORD PTR [rsp+0x28]
   140058b56:	xor    rcx,rsp
   140058b59:	call   0x140046470
   140058b5e:	add    rsp,0x38
   140058b62:	ret    
   140058b63:	int3   
   140058b64:	int3   
   140058b65:	int3   
   140058b66:	int3   
   140058b67:	int3   
   140058b68:	int3   
   140058b69:	int3   
   140058b6a:	int3   
   140058b6b:	int3   
   140058b6c:	int3   
   140058b6d:	int3   
   140058b6e:	int3   
   140058b6f:	int3   
   140058b70:	rex push rbp
   140058b72:	push   rbx
   140058b73:	push   rsi
   140058b74:	push   rdi
   140058b75:	push   r12
   140058b77:	push   r13
   140058b79:	push   r14
   140058b7b:	push   r15
   140058b7d:	sub    rsp,0x88
   140058b84:	lea    rbp,[rsp+0x40]
   140058b89:	mov    rax,QWORD PTR [rip+0x2e1e0]        # 0x140086d70
   140058b90:	xor    rax,rbp
   140058b93:	mov    QWORD PTR [rbp+0x30],rax
   140058b97:	mov    r15,QWORD PTR [rbp+0xb0]
   140058b9e:	mov    r12d,DWORD PTR [r9]
   140058ba1:	xor    r13d,r13d
   140058ba4:	cmp    ecx,edx
   140058ba6:	mov    rbx,r8
   140058ba9:	mov    rsi,r13
   140058bac:	mov    DWORD PTR [rbp+0x0],r13d
   140058bb0:	mov    QWORD PTR [rbp+0x10],r9
   140058bb4:	mov    r14d,edx
   140058bb7:	mov    QWORD PTR [rbp+0x8],rbx
   140058bbb:	mov    edi,ecx
   140058bbd:	mov    DWORD PTR [rbp+0x4],ecx
   140058bc0:	je     0x140058dd3
   140058bc6:	lea    rdx,[rbp+0x18]
   140058bca:	call   QWORD PTR [rip+0xb780]        # 0x140064350
   140058bd0:	test   eax,eax
   140058bd2:	je     0x140058c78
   140058bd8:	cmp    DWORD PTR [rbp+0x18],0x1
   140058bdc:	jne    0x140058c78
   140058be2:	lea    rdx,[rbp+0x18]
   140058be6:	mov    ecx,r14d
   140058be9:	call   QWORD PTR [rip+0xb761]        # 0x140064350
   140058bef:	test   eax,eax
   140058bf1:	je     0x140058c78
   140058bf7:	cmp    DWORD PTR [rbp+0x18],0x1
   140058bfb:	jne    0x140058c78
   140058bfd:	cmp    r12d,0xffffffff
   140058c01:	mov    DWORD PTR [rbp+0x0],0x1
   140058c08:	je     0x140058c66
   140058c0a:	mov    ebx,r12d
   140058c0d:	test   ebx,ebx
   140058c0f:	jle    0x140058c9f
   140058c15:	movsxd r13,ebx
   140058c18:	movabs rax,0x7ffffffffffffff0
   140058c22:	cmp    r13,rax
   140058c25:	ja     0x140058c9f
   140058c27:	lea    rcx,[r13+r13*1+0x10]
   140058c2c:	cmp    rcx,0x400
   140058c33:	ja     0x140058ca6
   140058c35:	lea    rax,[rcx+0xf]
   140058c39:	cmp    rax,rcx
   140058c3c:	ja     0x140058c48
   140058c3e:	movabs rax,0xffffffffffffff0
   140058c48:	and    rax,0xfffffffffffffff0
   140058c4c:	call   0x140063500
   140058c51:	sub    rsp,rax
   140058c54:	lea    rdi,[rsp+0x40]
   140058c59:	test   rdi,rdi
   140058c5c:	je     0x140058c9f
   140058c5e:	mov    DWORD PTR [rdi],0xcccc
   140058c64:	jmp    0x140058cb9
   140058c66:	or     rcx,0xffffffffffffffff
   140058c6a:	mov    rdi,rbx
   140058c6d:	xor    eax,eax
   140058c6f:	repnz scas al,BYTE PTR es:[rdi]
   140058c71:	not    rcx
   140058c74:	mov    ebx,ecx
   140058c76:	jmp    0x140058c0d
   140058c78:	mov    r9d,r12d
   140058c7b:	mov    r8,rbx
   140058c7e:	mov    edx,0x1
   140058c83:	mov    ecx,edi
   140058c85:	mov    DWORD PTR [rsp+0x28],r13d
   140058c8a:	mov    QWORD PTR [rsp+0x20],r13
   140058c8f:	call   QWORD PTR [rip+0xb983]        # 0x140064618
   140058c95:	test   eax,eax
   140058c97:	mov    ebx,eax
   140058c99:	jne    0x140058c0d
   140058c9f:	xor    eax,eax
   140058ca1:	jmp    0x140058dd6
   140058ca6:	call   0x1400480c0
   140058cab:	test   rax,rax
   140058cae:	mov    rdi,rax
   140058cb1:	je     0x140058cbd
   140058cb3:	mov    DWORD PTR [rax],0xdddd
   140058cb9:	add    rdi,0x10
   140058cbd:	test   rdi,rdi
   140058cc0:	je     0x140058c9f
   140058cc2:	lea    r8,[r13+r13*1+0x0]
   140058cc7:	xor    edx,edx
   140058cc9:	mov    rcx,rdi
   140058ccc:	call   0x140047720
   140058cd1:	mov    r8,QWORD PTR [rbp+0x8]
   140058cd5:	mov    ecx,DWORD PTR [rbp+0x4]
   140058cd8:	mov    r9d,r12d
   140058cdb:	mov    edx,0x1
   140058ce0:	mov    DWORD PTR [rsp+0x28],ebx
   140058ce4:	mov    QWORD PTR [rsp+0x20],rdi
   140058ce9:	call   QWORD PTR [rip+0xb929]        # 0x140064618
   140058cef:	test   eax,eax
   140058cf1:	je     0x140058dc1
   140058cf7:	test   r15,r15
   140058cfa:	je     0x140058d38
   140058cfc:	xor    eax,eax
   140058cfe:	mov    r9d,ebx
   140058d01:	mov    r8,rdi
   140058d04:	mov    QWORD PTR [rsp+0x38],rax
   140058d09:	mov    QWORD PTR [rsp+0x30],rax
   140058d0e:	mov    eax,DWORD PTR [rbp+0xb8]
   140058d14:	mov    DWORD PTR [rsp+0x28],eax
   140058d18:	xor    edx,edx
   140058d1a:	mov    ecx,r14d
   140058d1d:	mov    QWORD PTR [rsp+0x20],r15
   140058d22:	call   QWORD PTR [rip+0xb7c8]        # 0x1400644f0
   140058d28:	test   eax,eax
   140058d2a:	je     0x140058dc1
   140058d30:	mov    rsi,r15
   140058d33:	jmp    0x140058dc1
   140058d38:	xor    r13d,r13d
   140058d3b:	cmp    DWORD PTR [rbp+0x0],esi
   140058d3e:	jne    0x140058d6b
   140058d40:	mov    QWORD PTR [rsp+0x38],r13
   140058d45:	mov    QWORD PTR [rsp+0x30],r13
   140058d4a:	mov    r9d,ebx
   140058d4d:	mov    r8,rdi
   140058d50:	xor    edx,edx
   140058d52:	mov    ecx,r14d
   140058d55:	mov    DWORD PTR [rsp+0x28],r13d
   140058d5a:	mov    QWORD PTR [rsp+0x20],r13
   140058d5f:	call   QWORD PTR [rip+0xb78b]        # 0x1400644f0
   140058d65:	test   eax,eax
   140058d67:	mov    ebx,eax
   140058d69:	je     0x140058dc1
   140058d6b:	movsxd rdx,ebx
   140058d6e:	mov    ecx,0x1
   140058d73:	call   0x14004de90
   140058d78:	test   rax,rax
   140058d7b:	mov    rsi,rax
   140058d7e:	je     0x140058dc1
   140058d80:	mov    QWORD PTR [rsp+0x38],r13
   140058d85:	mov    QWORD PTR [rsp+0x30],r13
   140058d8a:	mov    r9d,ebx
   140058d8d:	mov    r8,rdi
   140058d90:	xor    edx,edx
   140058d92:	mov    ecx,r14d
   140058d95:	mov    DWORD PTR [rsp+0x28],ebx
   140058d99:	mov    QWORD PTR [rsp+0x20],rax
   140058d9e:	call   QWORD PTR [rip+0xb74c]        # 0x1400644f0
   140058da4:	test   eax,eax
   140058da6:	jne    0x140058db5
   140058da8:	mov    rcx,rsi
   140058dab:	call   0x1400485c0
   140058db0:	mov    rsi,r13
   140058db3:	jmp    0x140058dc1
   140058db5:	cmp    r12d,0xffffffff
   140058db9:	je     0x140058dc1
   140058dbb:	mov    rcx,QWORD PTR [rbp+0x10]
   140058dbf:	mov    DWORD PTR [rcx],eax
   140058dc1:	cmp    DWORD PTR [rdi-0x10],0xdddd
   140058dc8:	lea    rcx,[rdi-0x10]
   140058dcc:	jne    0x140058dd3
   140058dce:	call   0x1400485c0
   140058dd3:	mov    rax,rsi
   140058dd6:	mov    rcx,QWORD PTR [rbp+0x30]
   140058dda:	xor    rcx,rbp
   140058ddd:	call   0x140046470
   140058de2:	lea    rsp,[rbp+0x48]
   140058de6:	pop    r15
   140058de8:	pop    r14
   140058dea:	pop    r13
   140058dec:	pop    r12
   140058dee:	pop    rdi
   140058def:	pop    rsi
   140058df0:	pop    rbx
   140058df1:	pop    rbp
   140058df2:	ret    
   140058df3:	int3   
   140058df4:	int3   
   140058df5:	int3   
   140058df6:	int3   
   140058df7:	int3   
   140058df8:	int3   
   140058df9:	int3   
   140058dfa:	int3   
   140058dfb:	int3   
   140058dfc:	int3   
   140058dfd:	int3   
   140058dfe:	int3   
   140058dff:	int3   
   140058e00:	mov    QWORD PTR [rsp+0x8],rbx
   140058e05:	push   rdi
   140058e06:	sub    rsp,0x20
   140058e0a:	movsxd rdi,ecx
   140058e0d:	mov    ebx,r8d
   140058e10:	mov    QWORD PTR [rsp+0x38],rdx
   140058e15:	mov    ecx,edi
   140058e17:	call   0x14005a4c0
   140058e1c:	cmp    rax,0xffffffffffffffff
   140058e20:	jne    0x140058e3c
   140058e22:	call   0x140048680
   140058e27:	mov    DWORD PTR [rax],0x9
   140058e2d:	or     rax,0xffffffffffffffff
   140058e31:	mov    rbx,QWORD PTR [rsp+0x30]
   140058e36:	add    rsp,0x20
   140058e3a:	pop    rdi
   140058e3b:	ret    
   140058e3c:	mov    edx,DWORD PTR [rsp+0x38]
   140058e40:	lea    r8,[rsp+0x3c]
   140058e45:	mov    r9d,ebx
   140058e48:	mov    rcx,rax
   140058e4b:	call   QWORD PTR [rip+0xb357]        # 0x1400641a8
   140058e51:	cmp    eax,0xffffffff
   140058e54:	mov    DWORD PTR [rsp+0x38],eax
   140058e58:	jne    0x140058e7a
   140058e5a:	call   QWORD PTR [rip+0xb7a0]        # 0x140064600
   140058e60:	test   eax,eax
   140058e62:	je     0x140058e7a
   140058e64:	mov    ecx,eax
   140058e66:	call   0x1400486e0
   140058e6b:	or     rax,0xffffffffffffffff
   140058e6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140058e74:	add    rsp,0x20
   140058e78:	pop    rdi
   140058e79:	ret    
   140058e7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140058e7f:	mov    rax,rdi
   140058e82:	mov    rdx,rdi
   140058e85:	and    eax,0x1f
   140058e88:	sar    rdx,0x5
   140058e8c:	lea    r8,[rip+0x3586d]        # 0x14008e700
   140058e93:	lea    rcx,[rax+rax*4]
   140058e97:	mov    rax,QWORD PTR [r8+rdx*8]
   140058e9b:	add    rcx,rcx
   140058e9e:	and    BYTE PTR [rax+rcx*8+0x8],0xfd
   140058ea3:	mov    rax,QWORD PTR [rsp+0x38]
   140058ea8:	add    rsp,0x20
   140058eac:	pop    rdi
   140058ead:	ret    
   140058eae:	int3   
   140058eaf:	int3   
   140058eb0:	mov    QWORD PTR [rsp+0x10],rbx
   140058eb5:	mov    DWORD PTR [rsp+0x8],ecx
   140058eb9:	push   rsi
   140058eba:	push   rdi
   140058ebb:	push   r12
   140058ebd:	push   r13
   140058ebf:	push   r14
   140058ec1:	sub    rsp,0x30
   140058ec5:	mov    r12d,r8d
   140058ec8:	mov    r13,rdx
   140058ecb:	movsxd rbx,ecx
   140058ece:	cmp    ebx,0xfffffffe
   140058ed1:	jne    0x140058ef0
   140058ed3:	call   0x1400486b0
   140058ed8:	xor    edi,edi
   140058eda:	mov    DWORD PTR [rax],edi
   140058edc:	call   0x140048680
   140058ee1:	mov    DWORD PTR [rax],0x9
   140058ee7:	or     rax,0xffffffffffffffff
   140058eeb:	jmp    0x140058fcf
   140058ef0:	test   ecx,ecx
   140058ef2:	js     0x140058fa3
   140058ef8:	cmp    ebx,DWORD PTR [rip+0x357e6]        # 0x14008e6e4
   140058efe:	jae    0x140058fa3
   140058f04:	mov    rax,rbx
   140058f07:	mov    rdi,rbx
   140058f0a:	sar    rdi,0x5
   140058f0e:	lea    r14,[rip+0x357eb]        # 0x14008e700
   140058f15:	and    eax,0x1f
   140058f18:	lea    rsi,[rax+rax*4]
   140058f1c:	add    rsi,rsi
   140058f1f:	mov    rax,QWORD PTR [r14+rdi*8]
   140058f23:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140058f27:	and    ecx,0x1
   140058f2a:	jne    0x140058f5a
   140058f2c:	call   0x1400486b0
   140058f31:	xor    edi,edi
   140058f33:	mov    DWORD PTR [rax],edi
   140058f35:	call   0x140048680
   140058f3a:	mov    DWORD PTR [rax],0x9
   140058f40:	mov    QWORD PTR [rsp+0x20],rdi
   140058f45:	xor    r9d,r9d
   140058f48:	xor    r8d,r8d
   140058f4b:	xor    edx,edx
   140058f4d:	xor    ecx,ecx
   140058f4f:	call   0x14004e100
   140058f54:	or     rax,0xffffffffffffffff
   140058f58:	jmp    0x140058fcf
   140058f5a:	mov    ecx,ebx
   140058f5c:	call   0x14005a560
   140058f61:	nop
   140058f62:	mov    rax,QWORD PTR [r14+rdi*8]
   140058f66:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   140058f6b:	je     0x140058f7f
   140058f6d:	mov    r8d,r12d
   140058f70:	mov    rdx,r13
   140058f73:	mov    ecx,ebx
   140058f75:	call   0x140058e00
   140058f7a:	mov    rdi,rax
   140058f7d:	jmp    0x140058f97
   140058f7f:	call   0x140048680
   140058f84:	mov    DWORD PTR [rax],0x9
   140058f8a:	call   0x1400486b0
   140058f8f:	xor    edi,edi
   140058f91:	mov    DWORD PTR [rax],edi
   140058f93:	or     rdi,0xffffffffffffffff
   140058f97:	mov    ecx,ebx
   140058f99:	call   0x14005a630
   140058f9e:	mov    rax,rdi
   140058fa1:	jmp    0x140058fcf
   140058fa3:	call   0x1400486b0
   140058fa8:	xor    edi,edi
   140058faa:	mov    DWORD PTR [rax],edi
   140058fac:	call   0x140048680
   140058fb1:	mov    DWORD PTR [rax],0x9
   140058fb7:	mov    QWORD PTR [rsp+0x20],rdi
   140058fbc:	xor    r9d,r9d
   140058fbf:	xor    r8d,r8d
   140058fc2:	xor    edx,edx
   140058fc4:	xor    ecx,ecx
   140058fc6:	call   0x14004e100
   140058fcb:	or     rax,0xffffffffffffffff
   140058fcf:	mov    rbx,QWORD PTR [rsp+0x68]
   140058fd4:	add    rsp,0x30
   140058fd8:	pop    r14
   140058fda:	pop    r13
   140058fdc:	pop    r12
   140058fde:	pop    rdi
   140058fdf:	pop    rsi
   140058fe0:	ret    
   140058fe1:	int3   
   140058fe2:	int3   
   140058fe3:	int3   
   140058fe4:	int3   
   140058fe5:	int3   
   140058fe6:	int3   
   140058fe7:	int3   
   140058fe8:	int3   
   140058fe9:	int3   
   140058fea:	int3   
   140058feb:	int3   
   140058fec:	int3   
   140058fed:	int3   
   140058fee:	int3   
   140058fef:	int3   
   140058ff0:	rex push rbp
   140058ff2:	sub    rsp,0x30
   140058ff6:	mov    rbp,rdx
   140058ff9:	mov    ecx,DWORD PTR [rbp+0x60]
   140058ffc:	call   0x14005a630
   140059001:	add    rsp,0x30
   140059005:	pop    rbp
   140059006:	ret    
   140059007:	int3   
   140059008:	int3   
   140059009:	int3   
   14005900a:	int3   
   14005900b:	int3   
   14005900c:	int3   
   14005900d:	int3   
   14005900e:	int3   
   14005900f:	int3   
   140059010:	rex push rbx
   140059012:	push   rbp
   140059013:	push   rsi
   140059014:	push   rdi
   140059015:	push   r12
   140059017:	push   r14
   140059019:	sub    rsp,0x5f8
   140059020:	mov    rax,QWORD PTR [rip+0x2dd49]        # 0x140086d70
   140059027:	xor    rax,rsp
   14005902a:	mov    QWORD PTR [rsp+0x5e0],rax
   140059032:	xor    edi,edi
   140059034:	test   r8d,r8d
   140059037:	mov    ebp,r8d
   14005903a:	mov    r12,rdx
   14005903d:	movsxd rbx,ecx
   140059040:	mov    r14d,edi
   140059043:	mov    esi,edi
   140059045:	jne    0x14005904e
   140059047:	xor    eax,eax
   140059049:	jmp    0x140059768
   14005904e:	test   rdx,rdx
   140059051:	jne    0x140059081
   140059053:	call   0x1400486b0
   140059058:	mov    DWORD PTR [rax],edi
   14005905a:	call   0x140048680
   14005905f:	xor    r9d,r9d
   140059062:	xor    r8d,r8d
   140059065:	xor    edx,edx
   140059067:	xor    ecx,ecx
   140059069:	mov    DWORD PTR [rax],0x16
   14005906f:	mov    QWORD PTR [rsp+0x20],rdi
   140059074:	call   0x14004e100
   140059079:	or     eax,0xffffffff
   14005907c:	jmp    0x140059768
   140059081:	mov    QWORD PTR [rsp+0x648],r13
   140059089:	mov    rax,rbx
   14005908c:	mov    QWORD PTR [rsp+0x5f0],r15
   140059094:	and    eax,0x1f
   140059097:	mov    r15,rbx
   14005909a:	lea    rcx,[rip+0x3565f]        # 0x14008e700
   1400590a1:	sar    r15,0x5
   1400590a5:	lea    r13,[rax+rax*4]
   1400590a9:	mov    rcx,QWORD PTR [rcx+r15*8]
   1400590ad:	shl    r13,0x4
   1400590b1:	mov    QWORD PTR [rsp+0x50],r15
   1400590b6:	movzx  edi,BYTE PTR [r13+rcx*1+0x38]
   1400590bc:	mov    QWORD PTR [rsp+0x58],r13
   1400590c1:	add    dil,dil
   1400590c4:	sar    dil,1
   1400590c7:	cmp    dil,0x2
   1400590cb:	je     0x1400590d3
   1400590cd:	cmp    dil,0x1
   1400590d1:	jne    0x140059108
   1400590d3:	mov    eax,ebp
   1400590d5:	not    eax
   1400590d7:	test   al,0x1
   1400590d9:	jne    0x140059108
   1400590db:	call   0x1400486b0
   1400590e0:	xor    ebx,ebx
   1400590e2:	mov    DWORD PTR [rax],ebx
   1400590e4:	call   0x140048680
   1400590e9:	xor    r9d,r9d
   1400590ec:	xor    r8d,r8d
   1400590ef:	xor    edx,edx
   1400590f1:	xor    ecx,ecx
   1400590f3:	mov    DWORD PTR [rax],0x16
   1400590f9:	mov    QWORD PTR [rsp+0x20],rbx
   1400590fe:	call   0x14004e100
   140059103:	jmp    0x140059755
   140059108:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14005910e:	je     0x14005911d
   140059110:	xor    edx,edx
   140059112:	mov    ecx,ebx
   140059114:	lea    r8d,[rdx+0x2]
   140059118:	call   0x140058e00
   14005911d:	mov    ecx,ebx
   14005911f:	call   0x140059940
   140059124:	test   eax,eax
   140059126:	je     0x1400593d0
   14005912c:	lea    rdx,[rip+0x355cd]        # 0x14008e700
   140059133:	mov    rax,QWORD PTR [rdx+r15*8]
   140059137:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14005913d:	je     0x1400593e9
   140059143:	call   0x14004bd60
   140059148:	xor    ebx,ebx
   14005914a:	lea    rdx,[rsp+0x48]
   14005914f:	mov    rcx,QWORD PTR [rax+0xc0]
   140059156:	lea    rax,[rip+0x355a3]        # 0x14008e700
   14005915d:	cmp    DWORD PTR [rcx+0x14],ebx
   140059160:	mov    rcx,QWORD PTR [rax+r15*8]
   140059164:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140059169:	sete   bl
   14005916c:	call   QWORD PTR [rip+0xb236]        # 0x1400643a8
   140059172:	test   eax,eax
   140059174:	je     0x1400593e2
   14005917a:	test   ebx,ebx
   14005917c:	je     0x140059187
   14005917e:	test   dil,dil
   140059181:	je     0x1400593d9
   140059187:	call   QWORD PTR [rip+0xb213]        # 0x1400643a0
   14005918d:	test   ebp,ebp
   14005918f:	mov    DWORD PTR [rsp+0x4c],esi
   140059193:	mov    r13d,eax
   140059196:	mov    DWORD PTR [rsp+0x48],eax
   14005919a:	mov    rbx,r12
   14005919d:	je     0x1400593c6
   1400591a3:	mov    r15d,DWORD PTR [rsp+0x48]
   1400591a8:	data16 data16 xchg ax,ax
   1400591ac:	data16 data16 xchg ax,ax
   1400591b0:	test   dil,dil
   1400591b3:	jne    0x140059310
   1400591b9:	movsx  ecx,BYTE PTR [rbx]
   1400591bc:	xor    r15d,r15d
   1400591bf:	cmp    cl,0xa
   1400591c2:	sete   r15b
   1400591c6:	call   0x140049ec0
   1400591cb:	test   eax,eax
   1400591cd:	jne    0x1400591ef
   1400591cf:	lea    r8d,[rax+0x1]
   1400591d3:	lea    rcx,[rsp+0x40]
   1400591d8:	mov    rdx,rbx
   1400591db:	call   0x140059ec0
   1400591e0:	cmp    eax,0xffffffff
   1400591e3:	jne    0x14005921a
   1400591e5:	mov    r15d,DWORD PTR [rsp+0x48]
   1400591ea:	jmp    0x1400596d7
   1400591ef:	mov    rax,rbp
   1400591f2:	sub    rax,rbx
   1400591f5:	add    rax,r12
   1400591f8:	cmp    rax,0x1
   1400591fc:	jle    0x1400591e5
   1400591fe:	lea    rcx,[rsp+0x40]
   140059203:	mov    r8d,0x2
   140059209:	mov    rdx,rbx
   14005920c:	call   0x140059ec0
   140059211:	cmp    eax,0xffffffff
   140059214:	je     0x1400591e5
   140059216:	add    rbx,0x1
   14005921a:	xor    eax,eax
   14005921c:	lea    r8,[rsp+0x40]
   140059221:	mov    r9d,0x1
   140059227:	mov    QWORD PTR [rsp+0x38],rax
   14005922c:	mov    QWORD PTR [rsp+0x30],rax
   140059231:	lea    rax,[rsp+0x60]
   140059236:	xor    edx,edx
   140059238:	mov    ecx,r13d
   14005923b:	mov    DWORD PTR [rsp+0x28],0x5
   140059243:	mov    QWORD PTR [rsp+0x20],rax
   140059248:	add    rbx,0x1
   14005924c:	call   QWORD PTR [rip+0xb29e]        # 0x1400644f0
   140059252:	test   eax,eax
   140059254:	mov    r13d,eax
   140059257:	je     0x1400591e5
   140059259:	mov    rax,QWORD PTR [rsp+0x50]
   14005925e:	lea    rcx,[rip+0x3549b]        # 0x14008e700
   140059265:	lea    r9,[rsp+0x4c]
   14005926a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14005926e:	mov    rax,QWORD PTR [rsp+0x58]
   140059273:	lea    rdx,[rsp+0x60]
   140059278:	mov    rcx,QWORD PTR [rax+rcx*1]
   14005927c:	mov    r8d,r13d
   14005927f:	mov    QWORD PTR [rsp+0x20],0x0
   140059288:	call   QWORD PTR [rip+0xb332]        # 0x1400645c0
   14005928e:	test   eax,eax
   140059290:	je     0x14005939c
   140059296:	mov    eax,DWORD PTR [rsp+0x4c]
   14005929a:	add    r14d,eax
   14005929d:	cmp    eax,r13d
   1400592a0:	jl     0x1400591e5
   1400592a6:	test   r15d,r15d
   1400592a9:	je     0x140059309
   1400592ab:	mov    rax,QWORD PTR [rsp+0x50]
   1400592b0:	mov    BYTE PTR [rsp+0x60],0xd
   1400592b5:	lea    rcx,[rip+0x35444]        # 0x14008e700
   1400592bc:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400592c0:	mov    rax,QWORD PTR [rsp+0x58]
   1400592c5:	lea    r9,[rsp+0x4c]
   1400592ca:	mov    rcx,QWORD PTR [rax+rcx*1]
   1400592ce:	lea    rdx,[rsp+0x60]
   1400592d3:	mov    r8d,0x1
   1400592d9:	mov    QWORD PTR [rsp+0x20],0x0
   1400592e2:	call   QWORD PTR [rip+0xb2d8]        # 0x1400645c0
   1400592e8:	test   eax,eax
   1400592ea:	je     0x14005938e
   1400592f0:	cmp    DWORD PTR [rsp+0x4c],0x1
   1400592f5:	jl     0x1400591e5
   1400592fb:	mov    r13d,DWORD PTR [rsp+0x48]
   140059300:	add    esi,0x1
   140059303:	add    r14d,0x1
   140059307:	jmp    0x140059377
   140059309:	mov    r13d,DWORD PTR [rsp+0x48]
   14005930e:	jmp    0x140059377
   140059310:	cmp    dil,0x1
   140059314:	je     0x14005931c
   140059316:	cmp    dil,0x2
   14005931a:	jne    0x140059333
   14005931c:	movzx  eax,WORD PTR [rbx]
   14005931f:	xor    r15d,r15d
   140059322:	cmp    ax,0xa
   140059326:	mov    WORD PTR [rsp+0x40],ax
   14005932b:	sete   r15b
   14005932f:	add    rbx,0x2
   140059333:	cmp    dil,0x1
   140059337:	je     0x14005933f
   140059339:	cmp    dil,0x2
   14005933d:	jne    0x140059377
   14005933f:	movzx  ecx,WORD PTR [rsp+0x40]
   140059344:	call   0x14005d730
   140059349:	cmp    ax,WORD PTR [rsp+0x40]
   14005934e:	jne    0x1400593b8
   140059350:	add    r14d,0x1
   140059354:	test   r15d,r15d
   140059357:	je     0x140059377
   140059359:	mov    cx,0xd
   14005935d:	mov    WORD PTR [rsp+0x40],0xd
   140059364:	call   0x14005d730
   140059369:	cmp    ax,WORD PTR [rsp+0x40]
   14005936e:	jne    0x1400593aa
   140059370:	add    r14d,0x1
   140059374:	add    esi,0x1
   140059377:	mov    eax,ebx
   140059379:	sub    eax,r12d
   14005937c:	cmp    eax,ebp
   14005937e:	jb     0x1400591b0
   140059384:	mov    r15d,DWORD PTR [rsp+0x48]
   140059389:	jmp    0x1400596d7
   14005938e:	call   QWORD PTR [rip+0xb26c]        # 0x140064600
   140059394:	mov    r15d,eax
   140059397:	jmp    0x1400596d7
   14005939c:	call   QWORD PTR [rip+0xb25e]        # 0x140064600
   1400593a2:	mov    r15d,eax
   1400593a5:	jmp    0x1400596d7
   1400593aa:	call   QWORD PTR [rip+0xb250]        # 0x140064600
   1400593b0:	mov    r15d,eax
   1400593b3:	jmp    0x1400596d7
   1400593b8:	call   QWORD PTR [rip+0xb242]        # 0x140064600
   1400593be:	mov    r15d,eax
   1400593c1:	jmp    0x1400596d7
   1400593c6:	mov    r15d,DWORD PTR [rsp+0x48]
   1400593cb:	jmp    0x1400596ed
   1400593d0:	lea    rdx,[rip+0x35329]        # 0x14008e700
   1400593d7:	jmp    0x1400593e9
   1400593d9:	lea    rdx,[rip+0x35320]        # 0x14008e700
   1400593e0:	jmp    0x1400593e9
   1400593e2:	lea    rdx,[rip+0x35317]        # 0x14008e700
   1400593e9:	mov    rcx,QWORD PTR [rdx+r15*8]
   1400593ed:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   1400593f3:	je     0x1400596b0
   1400593f9:	xor    r15d,r15d
   1400593fc:	test   dil,dil
   1400593ff:	jne    0x1400594be
   140059405:	test   ebp,ebp
   140059407:	mov    rdi,r12
   14005940a:	je     0x140059723
   140059410:	lea    rbx,[rsp+0x70]
   140059415:	xor    ecx,ecx
   140059417:	mov    eax,edi
   140059419:	sub    eax,r12d
   14005941c:	cmp    eax,ebp
   14005941e:	jae    0x14005944c
   140059420:	movzx  eax,BYTE PTR [rdi]
   140059423:	add    rdi,0x1
   140059427:	cmp    al,0xa
   140059429:	jne    0x140059439
   14005942b:	mov    BYTE PTR [rbx],0xd
   14005942e:	add    rbx,0x1
   140059432:	add    esi,0x1
   140059435:	add    rcx,0x1
   140059439:	add    rcx,0x1
   14005943d:	mov    BYTE PTR [rbx],al
   14005943f:	add    rbx,0x1
   140059443:	cmp    rcx,0x400
   14005944a:	jb     0x140059417
   14005944c:	lea    rax,[rsp+0x70]
   140059451:	mov    r8d,ebx
   140059454:	lea    r9,[rsp+0x44]
   140059459:	sub    r8d,eax
   14005945c:	mov    rax,QWORD PTR [rsp+0x50]
   140059461:	mov    QWORD PTR [rsp+0x20],r15
   140059466:	mov    rcx,QWORD PTR [rdx+rax*8]
   14005946a:	lea    rdx,[rsp+0x70]
   14005946f:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140059474:	call   QWORD PTR [rip+0xb146]        # 0x1400645c0
   14005947a:	test   eax,eax
   14005947c:	je     0x1400594b0
   14005947e:	movsxd rax,DWORD PTR [rsp+0x44]
   140059483:	lea    rcx,[rsp+0x70]
   140059488:	sub    rbx,rcx
   14005948b:	add    r14d,eax
   14005948e:	cmp    rax,rbx
   140059491:	jl     0x1400596d7
   140059497:	mov    eax,edi
   140059499:	lea    rdx,[rip+0x35260]        # 0x14008e700
   1400594a0:	sub    eax,r12d
   1400594a3:	cmp    eax,ebp
   1400594a5:	jb     0x140059410
   1400594ab:	jmp    0x1400596d7
   1400594b0:	call   QWORD PTR [rip+0xb14a]        # 0x140064600
   1400594b6:	mov    r15d,eax
   1400594b9:	jmp    0x1400596d7
   1400594be:	cmp    dil,0x2
   1400594c2:	jne    0x140059593
   1400594c8:	test   ebp,ebp
   1400594ca:	mov    rdi,r12
   1400594cd:	je     0x140059723
   1400594d3:	nop
   1400594d4:	data16 data16 xchg ax,ax
   1400594d8:	data16 data16 xchg ax,ax
   1400594dc:	data16 data16 xchg ax,ax
   1400594e0:	lea    rbx,[rsp+0x70]
   1400594e5:	xor    ecx,ecx
   1400594e7:	mov    eax,edi
   1400594e9:	sub    eax,r12d
   1400594ec:	cmp    eax,ebp
   1400594ee:	jae    0x140059521
   1400594f0:	movzx  eax,WORD PTR [rdi]
   1400594f3:	add    rdi,0x2
   1400594f7:	cmp    ax,0xa
   1400594fb:	jne    0x14005950d
   1400594fd:	mov    WORD PTR [rbx],0xd
   140059502:	add    rbx,0x2
   140059506:	add    esi,0x2
   140059509:	add    rcx,0x2
   14005950d:	add    rcx,0x2
   140059511:	mov    WORD PTR [rbx],ax
   140059514:	add    rbx,0x2
   140059518:	cmp    rcx,0x3ff
   14005951f:	jb     0x1400594e7
   140059521:	lea    rax,[rsp+0x70]
   140059526:	mov    r8d,ebx
   140059529:	lea    r9,[rsp+0x44]
   14005952e:	sub    r8d,eax
   140059531:	mov    rax,QWORD PTR [rsp+0x50]
   140059536:	mov    QWORD PTR [rsp+0x20],r15
   14005953b:	mov    rcx,QWORD PTR [rdx+rax*8]
   14005953f:	lea    rdx,[rsp+0x70]
   140059544:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140059549:	call   QWORD PTR [rip+0xb071]        # 0x1400645c0
   14005954f:	test   eax,eax
   140059551:	je     0x140059585
   140059553:	movsxd rax,DWORD PTR [rsp+0x44]
   140059558:	lea    rcx,[rsp+0x70]
   14005955d:	sub    rbx,rcx
   140059560:	add    r14d,eax
   140059563:	cmp    rax,rbx
   140059566:	jl     0x1400596d7
   14005956c:	mov    eax,edi
   14005956e:	lea    rdx,[rip+0x3518b]        # 0x14008e700
   140059575:	sub    eax,r12d
   140059578:	cmp    eax,ebp
   14005957a:	jb     0x1400594e0
   140059580:	jmp    0x1400596d7
   140059585:	call   QWORD PTR [rip+0xb075]        # 0x140064600
   14005958b:	mov    r15d,eax
   14005958e:	jmp    0x1400596d7
   140059593:	test   ebp,ebp
   140059595:	mov    rdi,r12
   140059598:	je     0x140059723
   14005959e:	xchg   ax,ax
   1400595a0:	lea    rcx,[rsp+0x480]
   1400595a8:	xor    edx,edx
   1400595aa:	data16 xchg ax,ax
   1400595ad:	data16 xchg ax,ax
   1400595b0:	mov    eax,edi
   1400595b2:	sub    eax,r12d
   1400595b5:	cmp    eax,ebp
   1400595b7:	jae    0x1400595e7
   1400595b9:	movzx  eax,WORD PTR [rdi]
   1400595bc:	add    rdi,0x2
   1400595c0:	cmp    ax,0xa
   1400595c4:	jne    0x1400595d3
   1400595c6:	mov    WORD PTR [rcx],0xd
   1400595cb:	add    rcx,0x2
   1400595cf:	add    rdx,0x2
   1400595d3:	add    rdx,0x2
   1400595d7:	mov    WORD PTR [rcx],ax
   1400595da:	add    rcx,0x2
   1400595de:	cmp    rdx,0x152
   1400595e5:	jb     0x1400595b0
   1400595e7:	lea    rax,[rsp+0x480]
   1400595ef:	mov    QWORD PTR [rsp+0x38],rsi
   1400595f4:	mov    QWORD PTR [rsp+0x30],rsi
   1400595f9:	sub    ecx,eax
   1400595fb:	lea    r8,[rsp+0x480]
   140059603:	mov    DWORD PTR [rsp+0x28],0x2ab
   14005960b:	mov    eax,ecx
   14005960d:	mov    ecx,0xfde9
   140059612:	cdq    
   140059613:	sub    eax,edx
   140059615:	xor    edx,edx
   140059617:	sar    eax,1
   140059619:	mov    r9d,eax
   14005961c:	lea    rax,[rsp+0x70]
   140059621:	mov    QWORD PTR [rsp+0x20],rax
   140059626:	call   QWORD PTR [rip+0xaec4]        # 0x1400644f0
   14005962c:	test   eax,eax
   14005962e:	mov    r13d,eax
   140059631:	je     0x1400596a5
   140059633:	xor    ebx,ebx
   140059635:	data16 data16 xchg ax,ax
   140059639:	data16 xchg ax,ax
   14005963c:	data16 data16 xchg ax,ax
   140059640:	mov    rax,QWORD PTR [rsp+0x50]
   140059645:	movsxd rcx,ebx
   140059648:	mov    r8d,r13d
   14005964b:	lea    rdx,[rsp+rcx*1+0x70]
   140059650:	lea    rcx,[rip+0x350a9]        # 0x14008e700
   140059657:	lea    r9,[rsp+0x44]
   14005965c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140059660:	mov    rax,QWORD PTR [rsp+0x58]
   140059665:	sub    r8d,ebx
   140059668:	mov    rcx,QWORD PTR [rax+rcx*1]
   14005966c:	mov    QWORD PTR [rsp+0x20],rsi
   140059671:	call   QWORD PTR [rip+0xaf49]        # 0x1400645c0
   140059677:	test   eax,eax
   140059679:	je     0x140059686
   14005967b:	add    ebx,DWORD PTR [rsp+0x44]
   14005967f:	cmp    r13d,ebx
   140059682:	jg     0x140059640
   140059684:	jmp    0x140059694
   140059686:	call   QWORD PTR [rip+0xaf74]        # 0x140064600
   14005968c:	cmp    r13d,ebx
   14005968f:	mov    r15d,eax
   140059692:	jg     0x1400596d7
   140059694:	mov    r14d,edi
   140059697:	sub    r14d,r12d
   14005969a:	cmp    r14d,ebp
   14005969d:	jb     0x1400595a0
   1400596a3:	jmp    0x1400596d7
   1400596a5:	call   QWORD PTR [rip+0xaf55]        # 0x140064600
   1400596ab:	mov    r15d,eax
   1400596ae:	jmp    0x1400596d7
   1400596b0:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400596b5:	lea    r9,[rsp+0x44]
   1400596ba:	mov    r8d,ebp
   1400596bd:	mov    rdx,r12
   1400596c0:	mov    QWORD PTR [rsp+0x20],rsi
   1400596c5:	call   QWORD PTR [rip+0xaef5]        # 0x1400645c0
   1400596cb:	test   eax,eax
   1400596cd:	je     0x1400596e4
   1400596cf:	mov    r14d,DWORD PTR [rsp+0x44]
   1400596d4:	xor    r15d,r15d
   1400596d7:	test   r14d,r14d
   1400596da:	je     0x1400596ed
   1400596dc:	sub    r14d,esi
   1400596df:	mov    eax,r14d
   1400596e2:	jmp    0x140059758
   1400596e4:	call   QWORD PTR [rip+0xaf16]        # 0x140064600
   1400596ea:	mov    r15d,eax
   1400596ed:	test   r15d,r15d
   1400596f0:	je     0x140059717
   1400596f2:	cmp    r15d,0x5
   1400596f6:	jne    0x14005970d
   1400596f8:	call   0x140048680
   1400596fd:	mov    DWORD PTR [rax],0x9
   140059703:	call   0x1400486b0
   140059708:	mov    DWORD PTR [rax],r15d
   14005970b:	jmp    0x140059755
   14005970d:	mov    ecx,r15d
   140059710:	call   0x1400486e0
   140059715:	jmp    0x140059755
   140059717:	mov    r13,QWORD PTR [rsp+0x58]
   14005971c:	lea    rdx,[rip+0x34fdd]        # 0x14008e700
   140059723:	mov    rax,QWORD PTR [rsp+0x50]
   140059728:	mov    rax,QWORD PTR [rdx+rax*8]
   14005972c:	test   BYTE PTR [r13+rax*1+0x8],0x40
   140059732:	je     0x14005973f
   140059734:	cmp    BYTE PTR [r12],0x1a
   140059739:	jne    0x14005973f
   14005973b:	xor    eax,eax
   14005973d:	jmp    0x140059758
   14005973f:	call   0x140048680
   140059744:	mov    DWORD PTR [rax],0x1c
   14005974a:	call   0x1400486b0
   14005974f:	mov    DWORD PTR [rax],0x0
   140059755:	or     eax,0xffffffff
   140059758:	mov    r13,QWORD PTR [rsp+0x648]
   140059760:	mov    r15,QWORD PTR [rsp+0x5f0]
   140059768:	mov    rcx,QWORD PTR [rsp+0x5e0]
   140059770:	xor    rcx,rsp
   140059773:	call   0x140046470
   140059778:	add    rsp,0x5f8
   14005977f:	pop    r14
   140059781:	pop    r12
   140059783:	pop    rdi
   140059784:	pop    rsi
   140059785:	pop    rbp
   140059786:	pop    rbx
   140059787:	ret    
   140059788:	int3   
   140059789:	int3   
   14005978a:	int3   
   14005978b:	int3   
   14005978c:	int3   
   14005978d:	int3   
   14005978e:	int3   
   14005978f:	int3   
   140059790:	mov    QWORD PTR [rsp+0x10],rbx
   140059795:	mov    DWORD PTR [rsp+0x8],ecx
   140059799:	push   rsi
   14005979a:	push   rdi
   14005979b:	push   r12
   14005979d:	push   r13
   14005979f:	push   r14
   1400597a1:	sub    rsp,0x30
   1400597a5:	mov    r12d,r8d
   1400597a8:	mov    r13,rdx
   1400597ab:	movsxd rbx,ecx
   1400597ae:	cmp    ebx,0xfffffffe
   1400597b1:	jne    0x1400597cf
   1400597b3:	call   0x1400486b0
   1400597b8:	xor    edi,edi
   1400597ba:	mov    DWORD PTR [rax],edi
   1400597bc:	call   0x140048680
   1400597c1:	mov    DWORD PTR [rax],0x9
   1400597c7:	or     eax,0xffffffff
   1400597ca:	jmp    0x1400598a9
   1400597cf:	test   ecx,ecx
   1400597d1:	js     0x14005987e
   1400597d7:	cmp    ebx,DWORD PTR [rip+0x34f07]        # 0x14008e6e4
   1400597dd:	jae    0x14005987e
   1400597e3:	mov    rax,rbx
   1400597e6:	mov    rdi,rbx
   1400597e9:	sar    rdi,0x5
   1400597ed:	lea    r14,[rip+0x34f0c]        # 0x14008e700
   1400597f4:	and    eax,0x1f
   1400597f7:	lea    rsi,[rax+rax*4]
   1400597fb:	add    rsi,rsi
   1400597fe:	mov    rax,QWORD PTR [r14+rdi*8]
   140059802:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140059806:	and    ecx,0x1
   140059809:	jne    0x140059838
   14005980b:	call   0x1400486b0
   140059810:	xor    edi,edi
   140059812:	mov    DWORD PTR [rax],edi
   140059814:	call   0x140048680
   140059819:	mov    DWORD PTR [rax],0x9
   14005981f:	mov    QWORD PTR [rsp+0x20],rdi
   140059824:	xor    r9d,r9d
   140059827:	xor    r8d,r8d
   14005982a:	xor    edx,edx
   14005982c:	xor    ecx,ecx
   14005982e:	call   0x14004e100
   140059833:	or     eax,0xffffffff
   140059836:	jmp    0x1400598a9
   140059838:	mov    ecx,ebx
   14005983a:	call   0x14005a560
   14005983f:	nop
   140059840:	mov    rax,QWORD PTR [r14+rdi*8]
   140059844:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   140059849:	je     0x14005985c
   14005984b:	mov    r8d,r12d
   14005984e:	mov    rdx,r13
   140059851:	mov    ecx,ebx
   140059853:	call   0x140059010
   140059858:	mov    edi,eax
   14005985a:	jmp    0x140059873
   14005985c:	call   0x140048680
   140059861:	mov    DWORD PTR [rax],0x9
   140059867:	call   0x1400486b0
   14005986c:	xor    edi,edi
   14005986e:	mov    DWORD PTR [rax],edi
   140059870:	or     edi,0xffffffff
   140059873:	mov    ecx,ebx
   140059875:	call   0x14005a630
   14005987a:	mov    eax,edi
   14005987c:	jmp    0x1400598a9
   14005987e:	call   0x1400486b0
   140059883:	xor    edi,edi
   140059885:	mov    DWORD PTR [rax],edi
   140059887:	call   0x140048680
   14005988c:	mov    DWORD PTR [rax],0x9
   140059892:	mov    QWORD PTR [rsp+0x20],rdi
   140059897:	xor    r9d,r9d
   14005989a:	xor    r8d,r8d
   14005989d:	xor    edx,edx
   14005989f:	xor    ecx,ecx
   1400598a1:	call   0x14004e100
   1400598a6:	or     eax,0xffffffff
   1400598a9:	mov    rbx,QWORD PTR [rsp+0x68]
   1400598ae:	add    rsp,0x30
   1400598b2:	pop    r14
   1400598b4:	pop    r13
   1400598b6:	pop    r12
   1400598b8:	pop    rdi
   1400598b9:	pop    rsi
   1400598ba:	ret    
   1400598bb:	int3   
   1400598bc:	int3   
   1400598bd:	int3   
   1400598be:	int3   
   1400598bf:	int3   
   1400598c0:	rex push rbp
   1400598c2:	sub    rsp,0x30
   1400598c6:	mov    rbp,rdx
   1400598c9:	mov    ecx,DWORD PTR [rbp+0x60]
   1400598cc:	call   0x14005a630
   1400598d1:	add    rsp,0x30
   1400598d5:	pop    rbp
   1400598d6:	ret    
   1400598d7:	int3   
   1400598d8:	int3   
   1400598d9:	int3   
   1400598da:	int3   
   1400598db:	int3   
   1400598dc:	int3   
   1400598dd:	int3   
   1400598de:	int3   
   1400598df:	int3   
   1400598e0:	rex push rbx
   1400598e2:	sub    rsp,0x20
   1400598e6:	add    DWORD PTR [rip+0x338df],0x1        # 0x14008d1cc
   1400598ed:	mov    rbx,rcx
   1400598f0:	mov    ecx,0x1000
   1400598f5:	call   0x14004de20
   1400598fa:	test   rax,rax
   1400598fd:	mov    QWORD PTR [rbx+0x10],rax
   140059901:	je     0x140059910
   140059903:	or     DWORD PTR [rbx+0x18],0x8
   140059907:	mov    DWORD PTR [rbx+0x24],0x1000
   14005990e:	jmp    0x140059923
   140059910:	or     DWORD PTR [rbx+0x18],0x4
   140059914:	lea    rax,[rbx+0x20]
   140059918:	mov    DWORD PTR [rbx+0x24],0x2
   14005991f:	mov    QWORD PTR [rbx+0x10],rax
   140059923:	mov    rax,QWORD PTR [rbx+0x10]
   140059927:	mov    DWORD PTR [rbx+0x8],0x0
   14005992e:	mov    QWORD PTR [rbx],rax
   140059931:	add    rsp,0x20
   140059935:	pop    rbx
   140059936:	ret    
   140059937:	int3   
   140059938:	int3   
   140059939:	int3   
   14005993a:	int3   
   14005993b:	int3   
   14005993c:	int3   
   14005993d:	int3   
   14005993e:	int3   
   14005993f:	int3   
   140059940:	sub    rsp,0x38
   140059944:	cmp    ecx,0xfffffffe
   140059947:	jne    0x14005995b
   140059949:	call   0x140048680
   14005994e:	mov    DWORD PTR [rax],0x9
   140059954:	xor    eax,eax
   140059956:	add    rsp,0x38
   14005995a:	ret    
   14005995b:	test   ecx,ecx
   14005995d:	js     0x140059992
   14005995f:	cmp    ecx,DWORD PTR [rip+0x34d7f]        # 0x14008e6e4
   140059965:	jae    0x140059992
   140059967:	movsxd rax,ecx
   14005996a:	lea    r8,[rip+0x34d8f]        # 0x14008e700
   140059971:	mov    rdx,rax
   140059974:	and    eax,0x1f
   140059977:	lea    rcx,[rax+rax*4]
   14005997b:	sar    rdx,0x5
   14005997f:	mov    rax,QWORD PTR [r8+rdx*8]
   140059983:	add    rcx,rcx
   140059986:	mov    al,BYTE PTR [rax+rcx*8+0x8]
   14005998a:	and    eax,0x40
   14005998d:	add    rsp,0x38
   140059991:	ret    
   140059992:	call   0x140048680
   140059997:	xor    r9d,r9d
   14005999a:	xor    r8d,r8d
   14005999d:	xor    edx,edx
   14005999f:	xor    ecx,ecx
   1400599a1:	mov    QWORD PTR [rsp+0x20],0x0
   1400599aa:	mov    DWORD PTR [rax],0x9
   1400599b0:	call   0x14004e100
   1400599b5:	xor    eax,eax
   1400599b7:	add    rsp,0x38
   1400599bb:	ret    
   1400599bc:	int3   
   1400599bd:	int3   
   1400599be:	int3   
   1400599bf:	int3   
   1400599c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400599c5:	mov    QWORD PTR [rsp+0x20],rbp
   1400599ca:	push   rsi
   1400599cb:	push   rdi
   1400599cc:	push   r12
   1400599ce:	sub    rsp,0x40
   1400599d2:	mov    rax,QWORD PTR [rip+0x2d397]        # 0x140086d70
   1400599d9:	xor    rax,rsp
   1400599dc:	mov    QWORD PTR [rsp+0x30],rax
   1400599e1:	test   BYTE PTR [rdx+0x18],0x40
   1400599e5:	mov    rdi,rdx
   1400599e8:	movzx  ebp,cx
   1400599eb:	mov    WORD PTR [rsp+0x20],cx
   1400599f0:	jne    0x140059bf7
   1400599f6:	mov    rcx,rdx
   1400599f9:	call   0x140051e40
   1400599fe:	lea    rsi,[rip+0x2d72b]        # 0x140087130
   140059a05:	lea    r12,[rip+0x34cf4]        # 0x14008e700
   140059a0c:	cmp    eax,0xffffffff
   140059a0f:	je     0x140059a4a
   140059a11:	mov    rcx,rdi
   140059a14:	call   0x140051e40
   140059a19:	cmp    eax,0xfffffffe
   140059a1c:	je     0x140059a4a
   140059a1e:	mov    rcx,rdi
   140059a21:	call   0x140051e40
   140059a26:	mov    rcx,rdi
   140059a29:	movsxd rbx,eax
   140059a2c:	sar    rbx,0x5
   140059a30:	call   0x140051e40
   140059a35:	mov    r11d,eax
   140059a38:	and    r11d,0x1f
   140059a3c:	lea    rax,[r11+r11*4]
   140059a40:	shl    rax,0x4
   140059a44:	add    rax,QWORD PTR [r12+rbx*8]
   140059a48:	jmp    0x140059a4d
   140059a4a:	mov    rax,rsi
   140059a4d:	movzx  ecx,BYTE PTR [rax+0x38]
   140059a51:	and    cl,0x7f
   140059a54:	cmp    cl,0x2
   140059a57:	jne    0x140059a75
   140059a59:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140059a5d:	js     0x140059c0c
   140059a63:	mov    rcx,QWORD PTR [rdi]
   140059a66:	mov    ax,bp
   140059a69:	mov    WORD PTR [rcx],bp
   140059a6c:	add    QWORD PTR [rdi],0x2
   140059a70:	jmp    0x140059c17
   140059a75:	mov    rcx,rdi
   140059a78:	call   0x140051e40
   140059a7d:	cmp    eax,0xffffffff
   140059a80:	je     0x140059abb
   140059a82:	mov    rcx,rdi
   140059a85:	call   0x140051e40
   140059a8a:	cmp    eax,0xfffffffe
   140059a8d:	je     0x140059abb
   140059a8f:	mov    rcx,rdi
   140059a92:	call   0x140051e40
   140059a97:	mov    rcx,rdi
   140059a9a:	movsxd rbx,eax
   140059a9d:	sar    rbx,0x5
   140059aa1:	call   0x140051e40
   140059aa6:	mov    r11d,eax
   140059aa9:	and    r11d,0x1f
   140059aad:	lea    rax,[r11+r11*4]
   140059ab1:	shl    rax,0x4
   140059ab5:	add    rax,QWORD PTR [r12+rbx*8]
   140059ab9:	jmp    0x140059abe
   140059abb:	mov    rax,rsi
   140059abe:	movzx  eax,BYTE PTR [rax+0x38]
   140059ac2:	and    al,0x7f
   140059ac4:	cmp    al,0x1
   140059ac6:	jne    0x140059b3a
   140059ac8:	add    DWORD PTR [rdi+0x8],0xffffffff
   140059acc:	js     0x140059ae3
   140059ace:	mov    rax,QWORD PTR [rdi]
   140059ad1:	mov    BYTE PTR [rax],bpl
   140059ad4:	mov    rax,QWORD PTR [rdi]
   140059ad7:	movzx  ecx,BYTE PTR [rax]
   140059ada:	add    rax,0x1
   140059ade:	mov    QWORD PTR [rdi],rax
   140059ae1:	jmp    0x140059af1
   140059ae3:	movsx  ecx,bpl
   140059ae7:	mov    rdx,rdi
   140059aea:	call   0x14004f600
   140059aef:	mov    ecx,eax
   140059af1:	cmp    ecx,0xffffffff
   140059af4:	jne    0x140059aff
   140059af6:	or     ax,0xffff
   140059afa:	jmp    0x140059c17
   140059aff:	add    DWORD PTR [rdi+0x8],0xffffffff
   140059b03:	js     0x140059b1e
   140059b05:	mov    rcx,QWORD PTR [rdi]
   140059b08:	movzx  eax,BYTE PTR [rsp+0x21]
   140059b0d:	mov    BYTE PTR [rcx],al
   140059b0f:	mov    rax,QWORD PTR [rdi]
   140059b12:	movzx  ecx,BYTE PTR [rax]
   140059b15:	add    rax,0x1
   140059b19:	mov    QWORD PTR [rdi],rax
   140059b1c:	jmp    0x140059b2d
   140059b1e:	movsx  ecx,BYTE PTR [rsp+0x21]
   140059b23:	mov    rdx,rdi
   140059b26:	call   0x14004f600
   140059b2b:	mov    ecx,eax
   140059b2d:	cmp    ecx,0xffffffff
   140059b30:	je     0x140059af6
   140059b32:	mov    ax,bp
   140059b35:	jmp    0x140059c17
   140059b3a:	mov    rcx,rdi
   140059b3d:	call   0x140051e40
   140059b42:	cmp    eax,0xffffffff
   140059b45:	je     0x140059b7e
   140059b47:	mov    rcx,rdi
   140059b4a:	call   0x140051e40
   140059b4f:	cmp    eax,0xfffffffe
   140059b52:	je     0x140059b7e
   140059b54:	mov    rcx,rdi
   140059b57:	call   0x140051e40
   140059b5c:	mov    rcx,rdi
   140059b5f:	movsxd rbx,eax
   140059b62:	sar    rbx,0x5
   140059b66:	call   0x140051e40
   140059b6b:	mov    r11d,eax
   140059b6e:	and    r11d,0x1f
   140059b72:	lea    rsi,[r11+r11*4]
   140059b76:	shl    rsi,0x4
   140059b7a:	add    rsi,QWORD PTR [r12+rbx*8]
   140059b7e:	test   BYTE PTR [rsi+0x8],0x80
   140059b82:	je     0x140059bf7
   140059b84:	lea    rdx,[rsp+0x24]
   140059b89:	lea    rcx,[rsp+0x20]
   140059b8e:	movzx  r9d,bp
   140059b92:	mov    r8d,0x5
   140059b98:	call   0x14005ca00
   140059b9d:	test   eax,eax
   140059b9f:	jne    0x140059af6
   140059ba5:	xor    esi,esi
   140059ba7:	cmp    DWORD PTR [rsp+0x20],esi
   140059bab:	jle    0x140059b32
   140059bad:	lea    rbx,[rsp+0x24]
   140059bb2:	add    DWORD PTR [rdi+0x8],0xffffffff
   140059bb6:	js     0x140059bcf
   140059bb8:	mov    rcx,QWORD PTR [rdi]
   140059bbb:	movzx  eax,BYTE PTR [rbx]
   140059bbe:	mov    BYTE PTR [rcx],al
   140059bc0:	mov    rax,QWORD PTR [rdi]
   140059bc3:	movzx  ecx,BYTE PTR [rax]
   140059bc6:	add    rax,0x1
   140059bca:	mov    QWORD PTR [rdi],rax
   140059bcd:	jmp    0x140059bdc
   140059bcf:	movsx  ecx,BYTE PTR [rbx]
   140059bd2:	mov    rdx,rdi
   140059bd5:	call   0x14004f600
   140059bda:	mov    ecx,eax
   140059bdc:	cmp    ecx,0xffffffff
   140059bdf:	je     0x140059af6
   140059be5:	add    esi,0x1
   140059be8:	add    rbx,0x1
   140059bec:	cmp    esi,DWORD PTR [rsp+0x20]
   140059bf0:	jl     0x140059bb2
   140059bf2:	mov    ax,bp
   140059bf5:	jmp    0x140059c17
   140059bf7:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140059bfb:	js     0x140059c0c
   140059bfd:	mov    rax,QWORD PTR [rdi]
   140059c00:	mov    WORD PTR [rax],bp
   140059c03:	add    QWORD PTR [rdi],0x2
   140059c07:	mov    ax,bp
   140059c0a:	jmp    0x140059c17
   140059c0c:	mov    rdx,rdi
   140059c0f:	movzx  ecx,bp
   140059c12:	call   0x14005d860
   140059c17:	mov    rcx,QWORD PTR [rsp+0x30]
   140059c1c:	xor    rcx,rsp
   140059c1f:	call   0x140046470
   140059c24:	mov    rbx,QWORD PTR [rsp+0x70]
   140059c29:	mov    rbp,QWORD PTR [rsp+0x78]
   140059c2e:	add    rsp,0x40
   140059c32:	pop    r12
   140059c34:	pop    rdi
   140059c35:	pop    rsi
   140059c36:	ret    
   140059c37:	int3   
   140059c38:	int3   
   140059c39:	int3   
   140059c3a:	int3   
   140059c3b:	int3   
   140059c3c:	int3   
   140059c3d:	int3   
   140059c3e:	int3   
   140059c3f:	int3   
   140059c40:	mov    rcx,QWORD PTR [rip+0x2d129]        # 0x140086d70
   140059c47:	xor    eax,eax
   140059c49:	or     rcx,0x1
   140059c4d:	cmp    QWORD PTR [rip+0x3396c],rcx        # 0x14008d5c0
   140059c54:	sete   al
   140059c57:	ret    
   140059c58:	int3   
   140059c59:	int3   
   140059c5a:	int3   
   140059c5b:	int3   
   140059c5c:	int3   
   140059c5d:	int3   
   140059c5e:	int3   
   140059c5f:	int3   
   140059c60:	mov    QWORD PTR [rsp+0x8],rbx
   140059c65:	mov    QWORD PTR [rsp+0x10],rsi
   140059c6a:	push   rdi
   140059c6b:	sub    rsp,0x50
   140059c6f:	test   rdx,rdx
   140059c72:	mov    rsi,r8
   140059c75:	mov    rdi,rdx
   140059c78:	mov    rbx,rcx
   140059c7b:	je     0x140059c91
   140059c7d:	test   r8,r8
   140059c80:	je     0x140059c91
   140059c82:	cmp    BYTE PTR [rdx],0x0
   140059c85:	jne    0x140059ca3
   140059c87:	test   rcx,rcx
   140059c8a:	je     0x140059c91
   140059c8c:	mov    WORD PTR [rcx],0x0
   140059c91:	xor    eax,eax
   140059c93:	mov    rbx,QWORD PTR [rsp+0x60]
   140059c98:	mov    rsi,QWORD PTR [rsp+0x68]
   140059c9d:	add    rsp,0x50
   140059ca1:	pop    rdi
   140059ca2:	ret    
   140059ca3:	test   r9,r9
   140059ca6:	mov    BYTE PTR [rsp+0x48],0x0
   140059cab:	jne    0x140059d42
   140059cb1:	call   0x14004bd60
   140059cb6:	mov    QWORD PTR [rsp+0x40],rax
   140059cbb:	mov    r11,rax
   140059cbe:	mov    rcx,QWORD PTR [rax+0xc0]
   140059cc5:	cmp    rcx,QWORD PTR [rip+0x2dbd4]        # 0x1400878a0
   140059ccc:	mov    QWORD PTR [rsp+0x30],rcx
   140059cd1:	mov    rax,QWORD PTR [rax+0xb8]
   140059cd8:	mov    QWORD PTR [rsp+0x38],rax
   140059cdd:	je     0x140059d02
   140059cdf:	mov    ecx,DWORD PTR [r11+0xc8]
   140059ce6:	test   DWORD PTR [rip+0x2da3c],ecx        # 0x140087728
   140059cec:	jne    0x140059d02
   140059cee:	call   0x14004f030
   140059cf3:	mov    r11,QWORD PTR [rsp+0x40]
   140059cf8:	mov    QWORD PTR [rsp+0x30],rax
   140059cfd:	mov    rax,QWORD PTR [rsp+0x38]
   140059d02:	cmp    rax,QWORD PTR [rip+0x2d917]        # 0x140087620
   140059d09:	je     0x140059d29
   140059d0b:	mov    eax,DWORD PTR [r11+0xc8]
   140059d12:	test   DWORD PTR [rip+0x2da10],eax        # 0x140087728
   140059d18:	jne    0x140059d29
   140059d1a:	call   0x14004e4e0
   140059d1f:	mov    r11,QWORD PTR [rsp+0x40]
   140059d24:	mov    QWORD PTR [rsp+0x38],rax
   140059d29:	test   BYTE PTR [r11+0xc8],0x2
   140059d31:	jne    0x140059d5a
   140059d33:	or     DWORD PTR [r11+0xc8],0x2
   140059d3b:	mov    BYTE PTR [rsp+0x48],0x1
   140059d40:	jmp    0x140059d55
   140059d42:	mov    rax,QWORD PTR [r9]
   140059d45:	lea    rcx,[rsp+0x30]
   140059d4a:	mov    QWORD PTR [rcx],rax
   140059d4d:	mov    rax,QWORD PTR [r9+0x8]
   140059d51:	mov    QWORD PTR [rcx+0x8],rax
   140059d55:	mov    r11,QWORD PTR [rsp+0x40]
   140059d5a:	mov    rax,QWORD PTR [rsp+0x30]
   140059d5f:	cmp    DWORD PTR [rax+0x14],0x0
   140059d63:	jne    0x140059d94
   140059d65:	test   rbx,rbx
   140059d68:	je     0x140059d70
   140059d6a:	movzx  eax,BYTE PTR [rdi]
   140059d6d:	mov    WORD PTR [rbx],ax
   140059d70:	cmp    BYTE PTR [rsp+0x48],0x0
   140059d75:	je     0x140059d7f
   140059d77:	and    DWORD PTR [r11+0xc8],0xfffffffd
   140059d7f:	mov    eax,0x1
   140059d84:	mov    rbx,QWORD PTR [rsp+0x60]
   140059d89:	mov    rsi,QWORD PTR [rsp+0x68]
   140059d8e:	add    rsp,0x50
   140059d92:	pop    rdi
   140059d93:	ret    
   140059d94:	movzx  ecx,BYTE PTR [rdi]
   140059d97:	lea    rdx,[rsp+0x30]
   140059d9c:	call   0x140049dd0
   140059da1:	test   eax,eax
   140059da3:	je     0x140059e5b
   140059da9:	mov    rcx,QWORD PTR [rsp+0x30]
   140059dae:	mov    r9d,DWORD PTR [rcx+0x10c]
   140059db5:	cmp    r9d,0x1
   140059db9:	jle    0x140059deb
   140059dbb:	cmp    esi,r9d
   140059dbe:	jl     0x140059deb
   140059dc0:	mov    ecx,DWORD PTR [rcx+0x4]
   140059dc3:	xor    eax,eax
   140059dc5:	test   rbx,rbx
   140059dc8:	setne  al
   140059dcb:	mov    r8,rdi
   140059dce:	mov    edx,0x9
   140059dd3:	mov    DWORD PTR [rsp+0x28],eax
   140059dd7:	mov    QWORD PTR [rsp+0x20],rbx
   140059ddc:	call   QWORD PTR [rip+0xa836]        # 0x140064618
   140059de2:	test   eax,eax
   140059de4:	mov    rcx,QWORD PTR [rsp+0x30]
   140059de9:	jne    0x140059dfd
   140059deb:	movsxd rax,DWORD PTR [rcx+0x10c]
   140059df2:	cmp    rsi,rax
   140059df5:	jb     0x140059e2a
   140059df7:	cmp    BYTE PTR [rdi+0x1],0x0
   140059dfb:	je     0x140059e2a
   140059dfd:	cmp    BYTE PTR [rsp+0x48],0x0
   140059e02:	mov    eax,DWORD PTR [rcx+0x10c]
   140059e08:	je     0x140059c93
   140059e0e:	mov    rcx,QWORD PTR [rsp+0x40]
   140059e13:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140059e1a:	mov    rbx,QWORD PTR [rsp+0x60]
   140059e1f:	mov    rsi,QWORD PTR [rsp+0x68]
   140059e24:	add    rsp,0x50
   140059e28:	pop    rdi
   140059e29:	ret    
   140059e2a:	call   0x140048680
   140059e2f:	mov    DWORD PTR [rax],0x2a
   140059e35:	cmp    BYTE PTR [rsp+0x48],0x0
   140059e3a:	je     0x140059e48
   140059e3c:	mov    rax,QWORD PTR [rsp+0x40]
   140059e41:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140059e48:	or     eax,0xffffffff
   140059e4b:	mov    rbx,QWORD PTR [rsp+0x60]
   140059e50:	mov    rsi,QWORD PTR [rsp+0x68]
   140059e55:	add    rsp,0x50
   140059e59:	pop    rdi
   140059e5a:	ret    
   140059e5b:	xor    eax,eax
   140059e5d:	mov    r9d,0x1
   140059e63:	test   rbx,rbx
   140059e66:	setne  al
   140059e69:	lea    edx,[r9+0x8]
   140059e6d:	mov    r8,rdi
   140059e70:	mov    DWORD PTR [rsp+0x28],eax
   140059e74:	mov    rax,QWORD PTR [rsp+0x30]
   140059e79:	mov    QWORD PTR [rsp+0x20],rbx
   140059e7e:	mov    ecx,DWORD PTR [rax+0x4]
   140059e81:	call   QWORD PTR [rip+0xa791]        # 0x140064618
   140059e87:	test   eax,eax
   140059e89:	je     0x140059e2a
   140059e8b:	cmp    BYTE PTR [rsp+0x48],0x0
   140059e90:	je     0x140059e9e
   140059e92:	mov    rax,QWORD PTR [rsp+0x40]
   140059e97:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140059e9e:	mov    rbx,QWORD PTR [rsp+0x60]
   140059ea3:	mov    rsi,QWORD PTR [rsp+0x68]
   140059ea8:	mov    eax,0x1
   140059ead:	add    rsp,0x50
   140059eb1:	pop    rdi
   140059eb2:	ret    
   140059eb3:	int3   
   140059eb4:	int3   
   140059eb5:	int3   
   140059eb6:	int3   
   140059eb7:	int3   
   140059eb8:	int3   
   140059eb9:	int3   
   140059eba:	int3   
   140059ebb:	int3   
   140059ebc:	int3   
   140059ebd:	int3   
   140059ebe:	int3   
   140059ebf:	int3   
   140059ec0:	xor    r9d,r9d
   140059ec3:	jmp    0x140059c60
   140059ec8:	int3   
   140059ec9:	int3   
   140059eca:	int3   
   140059ecb:	int3   
   140059ecc:	int3   
   140059ecd:	int3   
   140059ece:	int3   
   140059ecf:	int3   
   140059ed0:	rex push rbp
   140059ed2:	push   r12
   140059ed4:	push   r13
   140059ed6:	push   r14
   140059ed8:	push   r15
   140059eda:	sub    rsp,0x60
   140059ede:	lea    rbp,[rsp+0x40]
   140059ee3:	mov    QWORD PTR [rbp+0x50],rbx
   140059ee7:	mov    QWORD PTR [rbp+0x58],rsi
   140059eeb:	mov    QWORD PTR [rbp+0x60],rdi
   140059eef:	mov    rax,QWORD PTR [rip+0x2ce7a]        # 0x140086d70
   140059ef6:	xor    rax,rbp
   140059ef9:	mov    QWORD PTR [rbp+0x18],rax
   140059efd:	movsxd r13,r9d
   140059f00:	mov    rdi,r8
   140059f03:	mov    ebx,edx
   140059f05:	cmp    r13d,0xffffffff
   140059f09:	mov    DWORD PTR [rbp+0x0],edx
   140059f0c:	mov    rsi,rcx
   140059f0f:	mov    QWORD PTR [rbp+0x10],rcx
   140059f13:	jl     0x14005a1ba
   140059f19:	mov    eax,DWORD PTR [rip+0x336a9]        # 0x14008d5c8
   140059f1f:	test   eax,eax
   140059f21:	jne    0x140059f6a
   140059f23:	mov    r8d,0x1
   140059f29:	lea    r9,[rbp+0x4]
   140059f2d:	lea    rdx,[rip+0x14f10]        # 0x14006ee44
   140059f34:	mov    ecx,r8d
   140059f37:	call   QWORD PTR [rip+0xa453]        # 0x140064390
   140059f3d:	test   eax,eax
   140059f3f:	je     0x140059f4d
   140059f41:	mov    DWORD PTR [rip+0x3367d],0x1        # 0x14008d5c8
   140059f4b:	jmp    0x140059f6f
   140059f4d:	call   QWORD PTR [rip+0xa6ad]        # 0x140064600
   140059f53:	cmp    eax,0x78
   140059f56:	jne    0x140059f64
   140059f58:	mov    DWORD PTR [rip+0x33666],0x2        # 0x14008d5c8
   140059f62:	jmp    0x140059f93
   140059f64:	mov    eax,DWORD PTR [rip+0x3365e]        # 0x14008d5c8
   140059f6a:	cmp    eax,0x1
   140059f6d:	jne    0x140059f86
   140059f6f:	mov    r9,QWORD PTR [rbp+0x70]
   140059f73:	mov    r8d,r13d
   140059f76:	mov    rdx,rdi
   140059f79:	mov    ecx,ebx
   140059f7b:	call   QWORD PTR [rip+0xa40f]        # 0x140064390
   140059f81:	jmp    0x14005a1bc
   140059f86:	cmp    eax,0x2
   140059f89:	je     0x140059f93
   140059f8b:	test   eax,eax
   140059f8d:	jne    0x14005a1ba
   140059f93:	mov    r12d,DWORD PTR [rbp+0x80]
   140059f9a:	xor    r14d,r14d
   140059f9d:	test   r12d,r12d
   140059fa0:	mov    r15d,r14d
   140059fa3:	jne    0x140059fac
   140059fa5:	mov    rax,QWORD PTR [rsi]
   140059fa8:	mov    r12d,DWORD PTR [rax+0x14]
   140059fac:	mov    ebx,DWORD PTR [rbp+0x78]
   140059faf:	test   ebx,ebx
   140059fb1:	jne    0x140059fb9
   140059fb3:	mov    rax,QWORD PTR [rsi]
   140059fb6:	mov    ebx,DWORD PTR [rax+0x4]
   140059fb9:	mov    ecx,r12d
   140059fbc:	call   0x140058b00
   140059fc1:	cmp    ebx,eax
   140059fc3:	je     0x140059fcb
   140059fc5:	cmp    eax,0xffffffff
   140059fc8:	cmovne ebx,eax
   140059fcb:	mov    QWORD PTR [rsp+0x38],r14
   140059fd0:	mov    QWORD PTR [rsp+0x30],r14
   140059fd5:	mov    r9d,r13d
   140059fd8:	mov    r8,rdi
   140059fdb:	xor    edx,edx
   140059fdd:	mov    ecx,ebx
   140059fdf:	mov    DWORD PTR [rsp+0x28],r14d
   140059fe4:	mov    QWORD PTR [rsp+0x20],r14
   140059fe9:	call   QWORD PTR [rip+0xa501]        # 0x1400644f0
   140059fef:	test   eax,eax
   140059ff1:	movsxd r14,eax
   140059ff4:	je     0x14005a1ba
   140059ffa:	jle    0x14005a1ba
   14005a000:	cmp    r14,0xffffffffffffffe0
   14005a004:	ja     0x14005a1ba
   14005a00a:	lea    rcx,[r14+0x10]
   14005a00e:	movabs rdx,0xffffffffffffff0
   14005a018:	cmp    rcx,0x400
   14005a01f:	ja     0x14005a04f
   14005a021:	lea    rax,[rcx+0xf]
   14005a025:	cmp    rax,rcx
   14005a028:	ja     0x14005a02d
   14005a02a:	mov    rax,rdx
   14005a02d:	and    rax,0xfffffffffffffff0
   14005a031:	call   0x140063500
   14005a036:	sub    rsp,rax
   14005a039:	lea    rsi,[rsp+0x40]
   14005a03e:	test   rsi,rsi
   14005a041:	je     0x14005a1ba
   14005a047:	mov    DWORD PTR [rsi],0xcccc
   14005a04d:	jmp    0x14005a062
   14005a04f:	call   0x1400480c0
   14005a054:	test   rax,rax
   14005a057:	mov    rsi,rax
   14005a05a:	je     0x14005a066
   14005a05c:	mov    DWORD PTR [rax],0xdddd
   14005a062:	add    rsi,0x10
   14005a066:	test   rsi,rsi
   14005a069:	je     0x14005a1ba
   14005a06f:	mov    r8,r14
   14005a072:	xor    edx,edx
   14005a074:	mov    rcx,rsi
   14005a077:	call   0x140047720
   14005a07c:	xor    eax,eax
   14005a07e:	mov    r9d,r13d
   14005a081:	mov    QWORD PTR [rsp+0x38],rax
   14005a086:	mov    QWORD PTR [rsp+0x30],rax
   14005a08b:	mov    r8,rdi
   14005a08e:	xor    edx,edx
   14005a090:	mov    ecx,ebx
   14005a092:	mov    DWORD PTR [rsp+0x28],r14d
   14005a097:	mov    QWORD PTR [rsp+0x20],rsi
   14005a09c:	call   QWORD PTR [rip+0xa44e]        # 0x1400644f0
   14005a0a2:	test   eax,eax
   14005a0a4:	je     0x14005a1a3
   14005a0aa:	lea    eax,[r14+0x1]
   14005a0ae:	test   eax,eax
   14005a0b0:	jle    0x14005a1a3
   14005a0b6:	movsxd rcx,eax
   14005a0b9:	movabs rax,0x7ffffffffffffff0
   14005a0c3:	cmp    rcx,rax
   14005a0c6:	ja     0x14005a1a3
   14005a0cc:	lea    rcx,[rcx+rcx*1+0x10]
   14005a0d1:	cmp    rcx,0x400
   14005a0d8:	ja     0x14005a10f
   14005a0da:	lea    rax,[rcx+0xf]
   14005a0de:	cmp    rax,rcx
   14005a0e1:	ja     0x14005a0ed
   14005a0e3:	movabs rax,0xffffffffffffff0
   14005a0ed:	and    rax,0xfffffffffffffff0
   14005a0f1:	call   0x140063500
   14005a0f6:	sub    rsp,rax
   14005a0f9:	lea    rdi,[rsp+0x40]
   14005a0fe:	test   rdi,rdi
   14005a101:	je     0x14005a1a3
   14005a107:	mov    DWORD PTR [rdi],0xcccc
   14005a10d:	jmp    0x14005a122
   14005a10f:	call   0x1400480c0
   14005a114:	test   rax,rax
   14005a117:	mov    rdi,rax
   14005a11a:	je     0x14005a126
   14005a11c:	mov    DWORD PTR [rax],0xdddd
   14005a122:	add    rdi,0x10
   14005a126:	test   rdi,rdi
   14005a129:	je     0x14005a1a3
   14005a12b:	test   r12d,r12d
   14005a12e:	jne    0x14005a13b
   14005a130:	mov    rax,QWORD PTR [rbp+0x10]
   14005a134:	mov    rax,QWORD PTR [rax]
   14005a137:	mov    r12d,DWORD PTR [rax+0x14]
   14005a13b:	mov    edx,DWORD PTR [rbp+0x0]
   14005a13e:	mov    rbx,r13
   14005a141:	add    r13,r13
   14005a144:	mov    r9d,r14d
   14005a147:	mov    r8,rsi
   14005a14a:	mov    ecx,r12d
   14005a14d:	mov    WORD PTR [r13+rdi*1+0x0],0xffff
   14005a155:	mov    WORD PTR [rdi+rbx*2-0x2],0xffff
   14005a15c:	mov    QWORD PTR [rsp+0x20],rdi
   14005a161:	call   QWORD PTR [rip+0xa221]        # 0x140064388
   14005a167:	cmp    WORD PTR [rdi+rbx*2-0x2],0xffff
   14005a16e:	mov    r15d,eax
   14005a171:	je     0x14005a18e
   14005a173:	cmp    WORD PTR [r13+rdi*1+0x0],0xffff
   14005a17b:	jne    0x14005a18e
   14005a17d:	mov    rcx,QWORD PTR [rbp+0x70]
   14005a181:	mov    r8,r13
   14005a184:	mov    rdx,rdi
   14005a187:	call   0x1400478c0
   14005a18c:	jmp    0x14005a191
   14005a18e:	xor    r15d,r15d
   14005a191:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14005a198:	lea    rcx,[rdi-0x10]
   14005a19c:	jne    0x14005a1a3
   14005a19e:	call   0x1400485c0
   14005a1a3:	cmp    DWORD PTR [rsi-0x10],0xdddd
   14005a1aa:	lea    rcx,[rsi-0x10]
   14005a1ae:	jne    0x14005a1b5
   14005a1b0:	call   0x1400485c0
   14005a1b5:	mov    eax,r15d
   14005a1b8:	jmp    0x14005a1bc
   14005a1ba:	xor    eax,eax
   14005a1bc:	mov    rcx,QWORD PTR [rbp+0x18]
   14005a1c0:	xor    rcx,rbp
   14005a1c3:	call   0x140046470
   14005a1c8:	mov    rbx,QWORD PTR [rbp+0x50]
   14005a1cc:	mov    rsi,QWORD PTR [rbp+0x58]
   14005a1d0:	mov    rdi,QWORD PTR [rbp+0x60]
   14005a1d4:	lea    rsp,[rbp+0x20]
   14005a1d8:	pop    r15
   14005a1da:	pop    r14
   14005a1dc:	pop    r13
   14005a1de:	pop    r12
   14005a1e0:	pop    rbp
   14005a1e1:	ret    
   14005a1e2:	int3   
   14005a1e3:	int3   
   14005a1e4:	int3   
   14005a1e5:	int3   
   14005a1e6:	int3   
   14005a1e7:	int3   
   14005a1e8:	int3   
   14005a1e9:	int3   
   14005a1ea:	int3   
   14005a1eb:	int3   
   14005a1ec:	int3   
   14005a1ed:	int3   
   14005a1ee:	int3   
   14005a1ef:	int3   
   14005a1f0:	mov    rax,rsp
   14005a1f3:	push   rbx
   14005a1f4:	sub    rsp,0x70
   14005a1f8:	mov    QWORD PTR [rax+0x8],rbp
   14005a1fc:	mov    QWORD PTR [rax+0x18],rdi
   14005a200:	xor    dil,dil
   14005a203:	test   rcx,rcx
   14005a206:	mov    QWORD PTR [rax-0x10],r12
   14005a20a:	mov    QWORD PTR [rax-0x18],r13
   14005a20e:	mov    BYTE PTR [rax-0x20],dil
   14005a212:	mov    ebp,r9d
   14005a215:	mov    r12,r8
   14005a218:	mov    r13d,edx
   14005a21b:	jne    0x14005a2ae
   14005a221:	mov    QWORD PTR [rax+0x10],rsi
   14005a225:	call   0x14004bd60
   14005a22a:	mov    rcx,QWORD PTR [rax+0xc0]
   14005a231:	mov    rsi,QWORD PTR [rax+0xb8]
   14005a238:	mov    rbx,rax
   14005a23b:	cmp    rcx,QWORD PTR [rip+0x2d65e]        # 0x1400878a0
   14005a242:	mov    QWORD PTR [rsp+0x50],rax
   14005a247:	mov    QWORD PTR [rsp+0x40],rcx
   14005a24c:	mov    QWORD PTR [rsp+0x48],rsi
   14005a251:	je     0x14005a26b
   14005a253:	mov    ecx,DWORD PTR [rax+0xc8]
   14005a259:	test   DWORD PTR [rip+0x2d4c9],ecx        # 0x140087728
   14005a25f:	jne    0x14005a26b
   14005a261:	call   0x14004f030
   14005a266:	mov    QWORD PTR [rsp+0x40],rax
   14005a26b:	cmp    rsi,QWORD PTR [rip+0x2d3ae]        # 0x140087620
   14005a272:	mov    rsi,QWORD PTR [rsp+0x88]
   14005a27a:	je     0x14005a294
   14005a27c:	mov    eax,DWORD PTR [rbx+0xc8]
   14005a282:	test   DWORD PTR [rip+0x2d4a0],eax        # 0x140087728
   14005a288:	jne    0x14005a294
   14005a28a:	call   0x14004e4e0
   14005a28f:	mov    QWORD PTR [rsp+0x48],rax
   14005a294:	test   BYTE PTR [rbx+0xc8],0x2
   14005a29b:	jne    0x14005a2cb
   14005a29d:	or     DWORD PTR [rbx+0xc8],0x2
   14005a2a4:	mov    dil,0x1
   14005a2a7:	mov    BYTE PTR [rsp+0x58],dil
   14005a2ac:	jmp    0x14005a2cb
   14005a2ae:	mov    rax,QWORD PTR [rcx]
   14005a2b1:	lea    rdx,[rsp+0x40]
   14005a2b6:	mov    QWORD PTR [rdx],rax
   14005a2b9:	mov    rax,QWORD PTR [rcx+0x8]
   14005a2bd:	mov    QWORD PTR [rdx+0x8],rax
   14005a2c1:	movzx  edi,BYTE PTR [rsp+0x58]
   14005a2c6:	mov    rbx,QWORD PTR [rsp+0x50]
   14005a2cb:	mov    eax,DWORD PTR [rsp+0xb0]
   14005a2d2:	lea    rcx,[rsp+0x40]
   14005a2d7:	mov    r9d,ebp
   14005a2da:	mov    DWORD PTR [rsp+0x30],eax
   14005a2de:	mov    eax,DWORD PTR [rsp+0xa8]
   14005a2e5:	mov    r8,r12
   14005a2e8:	mov    DWORD PTR [rsp+0x28],eax
   14005a2ec:	mov    rax,QWORD PTR [rsp+0xa0]
   14005a2f4:	mov    edx,r13d
   14005a2f7:	mov    QWORD PTR [rsp+0x20],rax
   14005a2fc:	call   0x140059ed0
   14005a301:	mov    r13,QWORD PTR [rsp+0x60]
   14005a306:	mov    r12,QWORD PTR [rsp+0x68]
   14005a30b:	mov    rbp,QWORD PTR [rsp+0x80]
   14005a313:	test   dil,dil
   14005a316:	mov    rdi,QWORD PTR [rsp+0x90]
   14005a31e:	je     0x14005a327
   14005a320:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005a327:	add    rsp,0x70
   14005a32b:	pop    rbx
   14005a32c:	ret    
   14005a32d:	int3   
   14005a32e:	int3   
   14005a32f:	int3   
   14005a330:	mov    QWORD PTR [rsp+0x8],rbx
   14005a335:	mov    QWORD PTR [rsp+0x10],rbp
   14005a33a:	mov    QWORD PTR [rsp+0x18],rsi
   14005a33f:	push   rdi
   14005a340:	sub    rsp,0x20
   14005a344:	test   ecx,ecx
   14005a346:	mov    rbx,rdx
   14005a349:	js     0x14005a3b7
   14005a34b:	cmp    ecx,DWORD PTR [rip+0x34393]        # 0x14008e6e4
   14005a351:	jae    0x14005a3b7
   14005a353:	movsxd rax,ecx
   14005a356:	lea    rbp,[rip+0x343a3]        # 0x14008e700
   14005a35d:	mov    rdi,rax
   14005a360:	and    eax,0x1f
   14005a363:	sar    rdi,0x5
   14005a367:	lea    rsi,[rax+rax*4]
   14005a36b:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14005a370:	add    rsi,rsi
   14005a373:	cmp    QWORD PTR [rax+rsi*8],0xffffffffffffffff
   14005a378:	jne    0x14005a3b7
   14005a37a:	cmp    DWORD PTR [rip+0x2c9c3],0x1        # 0x140086d44
   14005a381:	jne    0x14005a3aa
   14005a383:	test   ecx,ecx
   14005a385:	je     0x14005a39f
   14005a387:	sub    ecx,0x1
   14005a38a:	je     0x14005a398
   14005a38c:	cmp    ecx,0x1
   14005a38f:	jne    0x14005a3aa
   14005a391:	mov    ecx,0xfffffff4
   14005a396:	jmp    0x14005a3a4
   14005a398:	mov    ecx,0xfffffff5
   14005a39d:	jmp    0x14005a3a4
   14005a39f:	mov    ecx,0xfffffff6
   14005a3a4:	call   QWORD PTR [rip+0xa006]        # 0x1400643b0
   14005a3aa:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14005a3af:	mov    QWORD PTR [rax+rsi*8],rbx
   14005a3b3:	xor    eax,eax
   14005a3b5:	jmp    0x14005a3d0
   14005a3b7:	call   0x140048680
   14005a3bc:	mov    DWORD PTR [rax],0x9
   14005a3c2:	call   0x1400486b0
   14005a3c7:	mov    DWORD PTR [rax],0x0
   14005a3cd:	or     eax,0xffffffff
   14005a3d0:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a3d5:	mov    rbp,QWORD PTR [rsp+0x38]
   14005a3da:	mov    rsi,QWORD PTR [rsp+0x40]
   14005a3df:	add    rsp,0x20
   14005a3e3:	pop    rdi
   14005a3e4:	ret    
   14005a3e5:	int3   
   14005a3e6:	int3   
   14005a3e7:	int3   
   14005a3e8:	int3   
   14005a3e9:	int3   
   14005a3ea:	int3   
   14005a3eb:	int3   
   14005a3ec:	int3   
   14005a3ed:	int3   
   14005a3ee:	int3   
   14005a3ef:	int3   
   14005a3f0:	mov    QWORD PTR [rsp+0x8],rbx
   14005a3f5:	mov    QWORD PTR [rsp+0x10],rsi
   14005a3fa:	push   rdi
   14005a3fb:	sub    rsp,0x20
   14005a3ff:	test   ecx,ecx
   14005a401:	js     0x14005a48c
   14005a407:	cmp    ecx,DWORD PTR [rip+0x342d7]        # 0x14008e6e4
   14005a40d:	jae    0x14005a48c
   14005a40f:	movsxd rax,ecx
   14005a412:	lea    rsi,[rip+0x342e7]        # 0x14008e700
   14005a419:	mov    rdi,rax
   14005a41c:	and    eax,0x1f
   14005a41f:	sar    rdi,0x5
   14005a423:	lea    rbx,[rax+rax*4]
   14005a427:	mov    rax,QWORD PTR [rsi+rdi*8]
   14005a42b:	add    rbx,rbx
   14005a42e:	test   BYTE PTR [rax+rbx*8+0x8],0x1
   14005a433:	je     0x14005a48c
   14005a435:	cmp    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14005a43a:	je     0x14005a48c
   14005a43c:	cmp    DWORD PTR [rip+0x2c901],0x1        # 0x140086d44
   14005a443:	jne    0x14005a46e
   14005a445:	test   ecx,ecx
   14005a447:	je     0x14005a461
   14005a449:	sub    ecx,0x1
   14005a44c:	je     0x14005a45a
   14005a44e:	cmp    ecx,0x1
   14005a451:	jne    0x14005a46e
   14005a453:	mov    ecx,0xfffffff4
   14005a458:	jmp    0x14005a466
   14005a45a:	mov    ecx,0xfffffff5
   14005a45f:	jmp    0x14005a466
   14005a461:	mov    ecx,0xfffffff6
   14005a466:	xor    edx,edx
   14005a468:	call   QWORD PTR [rip+0x9f42]        # 0x1400643b0
   14005a46e:	mov    rax,QWORD PTR [rsi+rdi*8]
   14005a472:	mov    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14005a47a:	xor    eax,eax
   14005a47c:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a481:	mov    rsi,QWORD PTR [rsp+0x38]
   14005a486:	add    rsp,0x20
   14005a48a:	pop    rdi
   14005a48b:	ret    
   14005a48c:	call   0x140048680
   14005a491:	mov    DWORD PTR [rax],0x9
   14005a497:	call   0x1400486b0
   14005a49c:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a4a1:	mov    rsi,QWORD PTR [rsp+0x38]
   14005a4a6:	mov    DWORD PTR [rax],0x0
   14005a4ac:	or     eax,0xffffffff
   14005a4af:	add    rsp,0x20
   14005a4b3:	pop    rdi
   14005a4b4:	ret    
   14005a4b5:	int3   
   14005a4b6:	int3   
   14005a4b7:	int3   
   14005a4b8:	int3   
   14005a4b9:	int3   
   14005a4ba:	int3   
   14005a4bb:	int3   
   14005a4bc:	int3   
   14005a4bd:	int3   
   14005a4be:	int3   
   14005a4bf:	int3   
   14005a4c0:	sub    rsp,0x38
   14005a4c4:	cmp    ecx,0xfffffffe
   14005a4c7:	jne    0x14005a4e8
   14005a4c9:	call   0x1400486b0
   14005a4ce:	mov    DWORD PTR [rax],0x0
   14005a4d4:	call   0x140048680
   14005a4d9:	mov    DWORD PTR [rax],0x9
   14005a4df:	or     rax,0xffffffffffffffff
   14005a4e3:	add    rsp,0x38
   14005a4e7:	ret    
   14005a4e8:	test   ecx,ecx
   14005a4ea:	js     0x14005a523
   14005a4ec:	cmp    ecx,DWORD PTR [rip+0x341f2]        # 0x14008e6e4
   14005a4f2:	jae    0x14005a523
   14005a4f4:	movsxd rax,ecx
   14005a4f7:	lea    rdx,[rip+0x34202]        # 0x14008e700
   14005a4fe:	mov    rcx,rax
   14005a501:	and    eax,0x1f
   14005a504:	sar    rcx,0x5
   14005a508:	lea    rax,[rax+rax*4]
   14005a50c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14005a510:	add    rax,rax
   14005a513:	test   BYTE PTR [rdx+rax*8+0x8],0x1
   14005a518:	je     0x14005a523
   14005a51a:	mov    rax,QWORD PTR [rdx+rax*8]
   14005a51e:	add    rsp,0x38
   14005a522:	ret    
   14005a523:	call   0x1400486b0
   14005a528:	mov    DWORD PTR [rax],0x0
   14005a52e:	call   0x140048680
   14005a533:	xor    r9d,r9d
   14005a536:	xor    r8d,r8d
   14005a539:	xor    edx,edx
   14005a53b:	xor    ecx,ecx
   14005a53d:	mov    DWORD PTR [rax],0x9
   14005a543:	mov    QWORD PTR [rsp+0x20],0x0
   14005a54c:	call   0x14004e100
   14005a551:	or     rax,0xffffffffffffffff
   14005a555:	add    rsp,0x38
   14005a559:	ret    
   14005a55a:	int3   
   14005a55b:	int3   
   14005a55c:	int3   
   14005a55d:	int3   
   14005a55e:	int3   
   14005a55f:	int3   
   14005a560:	mov    QWORD PTR [rsp+0x8],rbx
   14005a565:	mov    QWORD PTR [rsp+0x10],rsi
   14005a56a:	mov    QWORD PTR [rsp+0x18],rdi
   14005a56f:	mov    QWORD PTR [rsp+0x20],r12
   14005a574:	push   r13
   14005a576:	sub    rsp,0x20
   14005a57a:	movsxd rax,ecx
   14005a57d:	mov    r12,rax
   14005a580:	sar    r12,0x5
   14005a584:	lea    r13,[rip+0x34175]        # 0x14008e700
   14005a58b:	and    eax,0x1f
   14005a58e:	lea    rdi,[rax+rax*4]
   14005a592:	add    rdi,rdi
   14005a595:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14005a59a:	mov    ebx,0x1
   14005a59f:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14005a5a4:	jne    0x14005a5db
   14005a5a6:	lea    ecx,[rbx+0x9]
   14005a5a9:	call   0x140052e40
   14005a5ae:	nop
   14005a5af:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14005a5b4:	jne    0x14005a5d1
   14005a5b6:	lea    rcx,[rsi+rdi*8+0x10]
   14005a5bb:	mov    edx,0xfa0
   14005a5c0:	call   0x1400532f0
   14005a5c5:	xor    ecx,ecx
   14005a5c7:	test   eax,eax
   14005a5c9:	cmove  ebx,ecx
   14005a5cc:	add    DWORD PTR [rsi+rdi*8+0xc],0x1
   14005a5d1:	mov    ecx,0xa
   14005a5d6:	call   0x140052d10
   14005a5db:	test   ebx,ebx
   14005a5dd:	je     0x14005a5ef
   14005a5df:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14005a5e4:	lea    rcx,[rcx+rdi*8+0x10]
   14005a5e9:	call   QWORD PTR [rip+0x9e29]        # 0x140064418
   14005a5ef:	mov    eax,ebx
   14005a5f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a5f6:	mov    rsi,QWORD PTR [rsp+0x38]
   14005a5fb:	mov    rdi,QWORD PTR [rsp+0x40]
   14005a600:	mov    r12,QWORD PTR [rsp+0x48]
   14005a605:	add    rsp,0x20
   14005a609:	pop    r13
   14005a60b:	ret    
   14005a60c:	int3   
   14005a60d:	int3   
   14005a60e:	int3   
   14005a60f:	int3   
   14005a610:	rex push rbp
   14005a612:	sub    rsp,0x20
   14005a616:	mov    rbp,rdx
   14005a619:	mov    ecx,0xa
   14005a61e:	call   0x140052d10
   14005a623:	add    rsp,0x20
   14005a627:	pop    rbp
   14005a628:	ret    
   14005a629:	int3   
   14005a62a:	int3   
   14005a62b:	int3   
   14005a62c:	int3   
   14005a62d:	int3   
   14005a62e:	int3   
   14005a62f:	int3   
   14005a630:	movsxd rax,ecx
   14005a633:	lea    r8,[rip+0x340c6]        # 0x14008e700
   14005a63a:	mov    rdx,rax
   14005a63d:	and    eax,0x1f
   14005a640:	lea    rcx,[rax+rax*4]
   14005a644:	sar    rdx,0x5
   14005a648:	mov    rax,QWORD PTR [r8+rdx*8]
   14005a64c:	add    rcx,rcx
   14005a64f:	lea    rcx,[rax+rcx*8+0x10]
   14005a654:	rex.W jmp QWORD PTR [rip+0x9dcd]        # 0x140064428
   14005a65b:	int3   
   14005a65c:	int3   
   14005a65d:	int3   
   14005a65e:	int3   
   14005a65f:	int3   
   14005a660:	mov    QWORD PTR [rsp+0x8],rbx
   14005a665:	mov    QWORD PTR [rsp+0x10],rsi
   14005a66a:	mov    QWORD PTR [rsp+0x18],rdi
   14005a66f:	mov    QWORD PTR [rsp+0x20],r12
   14005a674:	push   r13
   14005a676:	push   r14
   14005a678:	push   r15
   14005a67a:	sub    rsp,0x40
   14005a67e:	or     rdi,0xffffffffffffffff
   14005a682:	mov    r14d,edi
   14005a685:	xor    esi,esi
   14005a687:	lea    ecx,[rdi+0xc]
   14005a68a:	call   0x140052d30
   14005a68f:	test   eax,eax
   14005a691:	jne    0x14005a69a
   14005a693:	mov    eax,edi
   14005a695:	jmp    0x14005a863
   14005a69a:	mov    ecx,0xb
   14005a69f:	call   0x140052e40
   14005a6a4:	nop
   14005a6a5:	xor    r12d,r12d
   14005a6a8:	mov    DWORD PTR [rsp+0x24],r12d
   14005a6ad:	lea    r15,[rip+0x3404c]        # 0x14008e700
   14005a6b4:	cmp    r12d,0x40
   14005a6b8:	jge    0x14005a856
   14005a6be:	movsxd r13,r12d
   14005a6c1:	mov    rbx,QWORD PTR [r15+r13*8]
   14005a6c5:	test   rbx,rbx
   14005a6c8:	je     0x14005a7bd
   14005a6ce:	mov    QWORD PTR [rsp+0x30],rbx
   14005a6d3:	mov    rax,QWORD PTR [r15+r13*8]
   14005a6d7:	add    rax,0xa00
   14005a6dd:	cmp    rbx,rax
   14005a6e0:	jae    0x14005a7a5
   14005a6e6:	test   BYTE PTR [rbx+0x8],0x1
   14005a6ea:	jne    0x14005a793
   14005a6f0:	cmp    DWORD PTR [rbx+0xc],0x0
   14005a6f4:	jne    0x14005a732
   14005a6f6:	mov    ecx,0xa
   14005a6fb:	call   0x140052e40
   14005a700:	nop
   14005a701:	cmp    DWORD PTR [rbx+0xc],0x0
   14005a705:	jne    0x14005a728
   14005a707:	lea    rcx,[rbx+0x10]
   14005a70b:	mov    edx,0xfa0
   14005a710:	call   0x1400532f0
   14005a715:	test   eax,eax
   14005a717:	jne    0x14005a724
   14005a719:	mov    esi,0x1
   14005a71e:	mov    DWORD PTR [rsp+0x28],esi
   14005a722:	jmp    0x14005a728
   14005a724:	add    DWORD PTR [rbx+0xc],0x1
   14005a728:	mov    ecx,0xa
   14005a72d:	call   0x140052d10
   14005a732:	test   esi,esi
   14005a734:	jne    0x14005a756
   14005a736:	lea    rcx,[rbx+0x10]
   14005a73a:	call   QWORD PTR [rip+0x9cd8]        # 0x140064418
   14005a740:	test   BYTE PTR [rbx+0x8],0x1
   14005a744:	je     0x14005a752
   14005a746:	lea    rcx,[rbx+0x10]
   14005a74a:	call   QWORD PTR [rip+0x9cd8]        # 0x140064428
   14005a750:	jmp    0x14005a793
   14005a752:	or     rdi,0xffffffffffffffff
   14005a756:	test   esi,esi
   14005a758:	jne    0x14005a793
   14005a75a:	mov    BYTE PTR [rbx+0x8],0x1
   14005a75e:	mov    QWORD PTR [rbx],rdi
   14005a761:	sub    rbx,QWORD PTR [r15+r13*8]
   14005a765:	movabs rax,0x6666666666666667
   14005a76f:	imul   rbx
   14005a772:	mov    r14,rdx
   14005a775:	sar    r14,0x5
   14005a779:	mov    rax,r14
   14005a77c:	shr    rax,0x3f
   14005a780:	add    r14,rax
   14005a783:	mov    eax,r12d
   14005a786:	shl    eax,0x5
   14005a789:	add    r14d,eax
   14005a78c:	mov    DWORD PTR [rsp+0x20],r14d
   14005a791:	jmp    0x14005a7a5
   14005a793:	add    rbx,0x50
   14005a797:	mov    QWORD PTR [rsp+0x30],rbx
   14005a79c:	or     rdi,0xffffffffffffffff
   14005a7a0:	jmp    0x14005a6d3
   14005a7a5:	cmp    r14d,0xffffffff
   14005a7a9:	jne    0x14005a856
   14005a7af:	add    r12d,0x1
   14005a7b3:	mov    DWORD PTR [rsp+0x24],r12d
   14005a7b8:	jmp    0x14005a6b4
   14005a7bd:	mov    edx,0x50
   14005a7c2:	lea    ecx,[rdx-0x30]
   14005a7c5:	call   0x14004de90
   14005a7ca:	mov    QWORD PTR [rsp+0x30],rax
   14005a7cf:	test   rax,rax
   14005a7d2:	je     0x14005a856
   14005a7d8:	movsxd rdx,r12d
   14005a7db:	mov    QWORD PTR [r15+rdx*8],rax
   14005a7df:	add    DWORD PTR [rip+0x33efe],0x20        # 0x14008e6e4
   14005a7e6:	xor    r8d,r8d
   14005a7e9:	data16 xchg ax,ax
   14005a7ec:	data16 data16 xchg ax,ax
   14005a7f0:	mov    rcx,QWORD PTR [r15+rdx*8]
   14005a7f4:	add    rcx,0xa00
   14005a7fb:	cmp    rax,rcx
   14005a7fe:	jae    0x14005a81a
   14005a800:	mov    BYTE PTR [rax+0x8],r8b
   14005a804:	mov    QWORD PTR [rax],rdi
   14005a807:	mov    BYTE PTR [rax+0x9],0xa
   14005a80b:	mov    DWORD PTR [rax+0xc],r8d
   14005a80f:	add    rax,0x50
   14005a813:	mov    QWORD PTR [rsp+0x30],rax
   14005a818:	jmp    0x14005a7f0
   14005a81a:	shl    r12d,0x5
   14005a81e:	mov    DWORD PTR [rsp+0x20],r12d
   14005a823:	movsxd rax,r12d
   14005a826:	mov    rdx,rax
   14005a829:	sar    rdx,0x5
   14005a82d:	and    eax,0x1f
   14005a830:	lea    rcx,[rax+rax*4]
   14005a834:	add    rcx,rcx
   14005a837:	mov    rax,QWORD PTR [r15+rdx*8]
   14005a83b:	mov    BYTE PTR [rax+rcx*8+0x8],0x1
   14005a840:	mov    ecx,r12d
   14005a843:	call   0x14005a560
   14005a848:	test   eax,eax
   14005a84a:	cmove  r12d,edi
   14005a84e:	mov    r14d,r12d
   14005a851:	mov    DWORD PTR [rsp+0x20],r12d
   14005a856:	mov    ecx,0xb
   14005a85b:	call   0x140052d10
   14005a860:	mov    eax,r14d
   14005a863:	mov    rbx,QWORD PTR [rsp+0x60]
   14005a868:	mov    rsi,QWORD PTR [rsp+0x68]
   14005a86d:	mov    rdi,QWORD PTR [rsp+0x70]
   14005a872:	mov    r12,QWORD PTR [rsp+0x78]
   14005a877:	add    rsp,0x40
   14005a87b:	pop    r15
   14005a87d:	pop    r14
   14005a87f:	pop    r13
   14005a881:	ret    
   14005a882:	int3   
   14005a883:	int3   
   14005a884:	int3   
   14005a885:	int3   
   14005a886:	int3   
   14005a887:	int3   
   14005a888:	int3   
   14005a889:	int3   
   14005a88a:	int3   
   14005a88b:	int3   
   14005a88c:	int3   
   14005a88d:	int3   
   14005a88e:	int3   
   14005a88f:	int3   
   14005a890:	rex push rbp
   14005a892:	sub    rsp,0x20
   14005a896:	mov    rbp,rdx
   14005a899:	mov    ecx,0xa
   14005a89e:	call   0x140052d10
   14005a8a3:	add    rsp,0x20
   14005a8a7:	pop    rbp
   14005a8a8:	ret    
   14005a8a9:	int3   
   14005a8aa:	int3   
   14005a8ab:	int3   
   14005a8ac:	int3   
   14005a8ad:	int3   
   14005a8ae:	int3   
   14005a8af:	int3   
   14005a8b0:	rex push rbp
   14005a8b2:	sub    rsp,0x20
   14005a8b6:	mov    rbp,rdx
   14005a8b9:	mov    ecx,0xb
   14005a8be:	call   0x140052d10
   14005a8c3:	add    rsp,0x20
   14005a8c7:	pop    rbp
   14005a8c8:	ret    
   14005a8c9:	int3   
   14005a8ca:	int3   
   14005a8cb:	int3   
   14005a8cc:	int3   
   14005a8cd:	int3   
   14005a8ce:	int3   
   14005a8cf:	int3   
   14005a8d0:	mov    QWORD PTR [rsp+0x18],rbx
   14005a8d5:	mov    DWORD PTR [rsp+0x8],ecx
   14005a8d9:	push   rsi
   14005a8da:	push   rdi
   14005a8db:	push   r12
   14005a8dd:	sub    rsp,0x30
   14005a8e1:	movsxd rbx,ecx
   14005a8e4:	cmp    ebx,0xfffffffe
   14005a8e7:	jne    0x14005a8fc
   14005a8e9:	call   0x140048680
   14005a8ee:	mov    DWORD PTR [rax],0x9
   14005a8f4:	or     eax,0xffffffff
   14005a8f7:	jmp    0x14005a9db
   14005a8fc:	test   ecx,ecx
   14005a8fe:	js     0x14005a9b7
   14005a904:	cmp    ebx,DWORD PTR [rip+0x33dda]        # 0x14008e6e4
   14005a90a:	jae    0x14005a9b7
   14005a910:	mov    rax,rbx
   14005a913:	mov    rdi,rbx
   14005a916:	sar    rdi,0x5
   14005a91a:	lea    r12,[rip+0x33ddf]        # 0x14008e700
   14005a921:	and    eax,0x1f
   14005a924:	lea    rsi,[rax+rax*4]
   14005a928:	add    rsi,rsi
   14005a92b:	mov    rax,QWORD PTR [r12+rdi*8]
   14005a92f:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14005a933:	and    ecx,0x1
   14005a936:	jne    0x14005a95e
   14005a938:	call   0x140048680
   14005a93d:	mov    DWORD PTR [rax],0x9
   14005a943:	xor    edi,edi
   14005a945:	mov    QWORD PTR [rsp+0x20],rdi
   14005a94a:	xor    r9d,r9d
   14005a94d:	xor    r8d,r8d
   14005a950:	xor    edx,edx
   14005a952:	xor    ecx,ecx
   14005a954:	call   0x14004e100
   14005a959:	or     eax,0xffffffff
   14005a95c:	jmp    0x14005a9db
   14005a95e:	mov    ecx,ebx
   14005a960:	call   0x14005a560
   14005a965:	nop
   14005a966:	mov    rax,QWORD PTR [r12+rdi*8]
   14005a96a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14005a96f:	je     0x14005a99e
   14005a971:	mov    ecx,ebx
   14005a973:	call   0x14005a4c0
   14005a978:	mov    rcx,rax
   14005a97b:	call   QWORD PTR [rip+0x982f]        # 0x1400641b0
   14005a981:	test   eax,eax
   14005a983:	jne    0x14005a99a
   14005a985:	call   QWORD PTR [rip+0x9c75]        # 0x140064600
   14005a98b:	mov    edi,eax
   14005a98d:	test   eax,eax
   14005a98f:	je     0x14005a9ac
   14005a991:	call   0x1400486b0
   14005a996:	mov    DWORD PTR [rax],edi
   14005a998:	jmp    0x14005a99e
   14005a99a:	xor    edi,edi
   14005a99c:	jmp    0x14005a9ac
   14005a99e:	call   0x140048680
   14005a9a3:	mov    DWORD PTR [rax],0x9
   14005a9a9:	or     edi,0xffffffff
   14005a9ac:	mov    ecx,ebx
   14005a9ae:	call   0x14005a630
   14005a9b3:	mov    eax,edi
   14005a9b5:	jmp    0x14005a9db
   14005a9b7:	call   0x140048680
   14005a9bc:	mov    DWORD PTR [rax],0x9
   14005a9c2:	xor    edi,edi
   14005a9c4:	mov    QWORD PTR [rsp+0x20],rdi
   14005a9c9:	xor    r9d,r9d
   14005a9cc:	xor    r8d,r8d
   14005a9cf:	xor    edx,edx
   14005a9d1:	xor    ecx,ecx
   14005a9d3:	call   0x14004e100
   14005a9d8:	or     eax,0xffffffff
   14005a9db:	mov    rbx,QWORD PTR [rsp+0x60]
   14005a9e0:	add    rsp,0x30
   14005a9e4:	pop    r12
   14005a9e6:	pop    rdi
   14005a9e7:	pop    rsi
   14005a9e8:	ret    
   14005a9e9:	int3   
   14005a9ea:	int3   
   14005a9eb:	int3   
   14005a9ec:	int3   
   14005a9ed:	int3   
   14005a9ee:	int3   
   14005a9ef:	int3   
   14005a9f0:	rex push rbp
   14005a9f2:	sub    rsp,0x30
   14005a9f6:	mov    rbp,rdx
   14005a9f9:	mov    ecx,DWORD PTR [rbp+0x50]
   14005a9fc:	call   0x14005a630
   14005aa01:	add    rsp,0x30
   14005aa05:	pop    rbp
   14005aa06:	ret    
   14005aa07:	int3   
   14005aa08:	int3   
   14005aa09:	int3   
   14005aa0a:	int3   
   14005aa0b:	int3   
   14005aa0c:	int3   
   14005aa0d:	int3   
   14005aa0e:	int3   
   14005aa0f:	int3   
   14005aa10:	mov    QWORD PTR [rsp+0x8],rbx
   14005aa15:	mov    QWORD PTR [rsp+0x10],rsi
   14005aa1a:	mov    QWORD PTR [rsp+0x18],rdi
   14005aa1f:	push   r12
   14005aa21:	sub    rsp,0x30
   14005aa25:	xor    r12d,r12d
   14005aa28:	mov    edi,r12d
   14005aa2b:	lea    ecx,[r12+0x1]
   14005aa30:	call   0x140052e40
   14005aa35:	nop
   14005aa36:	mov    ebx,0x3
   14005aa3b:	mov    DWORD PTR [rsp+0x20],ebx
   14005aa3f:	nop
   14005aa40:	cmp    ebx,DWORD PTR [rip+0x33c9a]        # 0x14008e6e0
   14005aa46:	jge    0x14005aab2
   14005aa48:	movsxd rsi,ebx
   14005aa4b:	mov    rax,QWORD PTR [rip+0x32c6e]        # 0x14008d6c0
   14005aa52:	cmp    QWORD PTR [rax+rsi*8],0x0
   14005aa57:	je     0x14005aaa9
   14005aa59:	mov    rcx,QWORD PTR [rax+rsi*8]
   14005aa5d:	test   BYTE PTR [rcx+0x18],0x83
   14005aa61:	je     0x14005aa74
   14005aa63:	call   0x140047d00
   14005aa68:	cmp    eax,0xffffffff
   14005aa6b:	je     0x14005aa74
   14005aa6d:	add    edi,0x1
   14005aa70:	mov    DWORD PTR [rsp+0x24],edi
   14005aa74:	cmp    ebx,0x14
   14005aa77:	jl     0x14005aaa9
   14005aa79:	mov    rax,QWORD PTR [rip+0x32c40]        # 0x14008d6c0
   14005aa80:	mov    rcx,QWORD PTR [rax+rsi*8]
   14005aa84:	add    rcx,0x30
   14005aa88:	call   QWORD PTR [rip+0x96fa]        # 0x140064188
   14005aa8e:	mov    rcx,QWORD PTR [rip+0x32c2b]        # 0x14008d6c0
   14005aa95:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14005aa99:	call   0x1400485c0
   14005aa9e:	mov    r11,QWORD PTR [rip+0x32c1b]        # 0x14008d6c0
   14005aaa5:	mov    QWORD PTR [r11+rsi*8],r12
   14005aaa9:	add    ebx,0x1
   14005aaac:	mov    DWORD PTR [rsp+0x20],ebx
   14005aab0:	jmp    0x14005aa40
   14005aab2:	mov    ecx,0x1
   14005aab7:	call   0x140052d10
   14005aabc:	mov    eax,edi
   14005aabe:	mov    rbx,QWORD PTR [rsp+0x40]
   14005aac3:	mov    rsi,QWORD PTR [rsp+0x48]
   14005aac8:	mov    rdi,QWORD PTR [rsp+0x50]
   14005aacd:	add    rsp,0x30
   14005aad1:	pop    r12
   14005aad3:	ret    
   14005aad4:	int3   
   14005aad5:	int3   
   14005aad6:	int3   
   14005aad7:	int3   
   14005aad8:	int3   
   14005aad9:	int3   
   14005aada:	int3   
   14005aadb:	int3   
   14005aadc:	int3   
   14005aadd:	int3   
   14005aade:	int3   
   14005aadf:	int3   
   14005aae0:	rex push rbp
   14005aae2:	sub    rsp,0x20
   14005aae6:	mov    rbp,rdx
   14005aae9:	mov    ecx,0x1
   14005aaee:	call   0x140052d10
   14005aaf3:	add    rsp,0x20
   14005aaf7:	pop    rbp
   14005aaf8:	ret    
   14005aaf9:	int3   
   14005aafa:	int3   
   14005aafb:	int3   
   14005aafc:	int3   
   14005aafd:	int3   
   14005aafe:	int3   
   14005aaff:	int3   
   14005ab00:	rex push rdi
   14005ab02:	sub    rsp,0x30
   14005ab06:	test   rcx,rcx
   14005ab09:	mov    rdi,rcx
   14005ab0c:	jne    0x14005ab38
   14005ab0e:	call   0x140048680
   14005ab13:	xor    r9d,r9d
   14005ab16:	xor    r8d,r8d
   14005ab19:	xor    edx,edx
   14005ab1b:	xor    ecx,ecx
   14005ab1d:	mov    QWORD PTR [rsp+0x20],rdi
   14005ab22:	mov    DWORD PTR [rax],0x16
   14005ab28:	call   0x14004e100
   14005ab2d:	mov    eax,0xffff
   14005ab32:	add    rsp,0x30
   14005ab36:	pop    rdi
   14005ab37:	ret    
   14005ab38:	mov    eax,DWORD PTR [rcx+0x18]
   14005ab3b:	test   al,0x83
   14005ab3d:	je     0x14005ac7f
   14005ab43:	test   al,0x40
   14005ab45:	jne    0x14005ac7f
   14005ab4b:	test   al,0x2
   14005ab4d:	je     0x14005ab60
   14005ab4f:	or     eax,0x20
   14005ab52:	mov    DWORD PTR [rcx+0x18],eax
   14005ab55:	mov    eax,0xffff
   14005ab5a:	add    rsp,0x30
   14005ab5e:	pop    rdi
   14005ab5f:	ret    
   14005ab60:	or     eax,0x1
   14005ab63:	test   eax,0x10c
   14005ab68:	mov    DWORD PTR [rcx+0x18],eax
   14005ab6b:	jne    0x14005ab74
   14005ab6d:	call   0x1400598e0
   14005ab72:	jmp    0x14005ab7b
   14005ab74:	mov    rax,QWORD PTR [rcx+0x10]
   14005ab78:	mov    QWORD PTR [rcx],rax
   14005ab7b:	mov    rcx,rdi
   14005ab7e:	call   0x140051e40
   14005ab83:	mov    r8d,DWORD PTR [rdi+0x24]
   14005ab87:	mov    rdx,QWORD PTR [rdi+0x10]
   14005ab8b:	mov    ecx,eax
   14005ab8d:	call   0x14005e710
   14005ab92:	test   eax,eax
   14005ab94:	mov    r11d,eax
   14005ab97:	mov    DWORD PTR [rdi+0x8],eax
   14005ab9a:	je     0x14005ac65
   14005aba0:	cmp    eax,0x1
   14005aba3:	je     0x14005ac65
   14005aba9:	cmp    eax,0xffffffff
   14005abac:	je     0x14005ac65
   14005abb2:	test   BYTE PTR [rdi+0x18],0x82
   14005abb6:	jne    0x14005ac31
   14005abb8:	mov    rcx,rdi
   14005abbb:	call   0x140051e40
   14005abc0:	cmp    eax,0xffffffff
   14005abc3:	je     0x14005ac19
   14005abc5:	mov    rcx,rdi
   14005abc8:	call   0x140051e40
   14005abcd:	cmp    eax,0xfffffffe
   14005abd0:	je     0x14005ac19
   14005abd2:	mov    rcx,rdi
   14005abd5:	mov    QWORD PTR [rsp+0x40],rbx
   14005abda:	mov    QWORD PTR [rsp+0x48],rsi
   14005abdf:	call   0x140051e40
   14005abe4:	mov    rcx,rdi
   14005abe7:	lea    rsi,[rip+0x33b12]        # 0x14008e700
   14005abee:	movsxd rbx,eax
   14005abf1:	sar    rbx,0x5
   14005abf5:	call   0x140051e40
   14005abfa:	mov    r11d,eax
   14005abfd:	and    r11d,0x1f
   14005ac01:	lea    rax,[r11+r11*4]
   14005ac05:	shl    rax,0x4
   14005ac09:	add    rax,QWORD PTR [rsi+rbx*8]
   14005ac0d:	mov    rsi,QWORD PTR [rsp+0x48]
   14005ac12:	mov    rbx,QWORD PTR [rsp+0x40]
   14005ac17:	jmp    0x14005ac20
   14005ac19:	lea    rax,[rip+0x2c510]        # 0x140087130
   14005ac20:	movzx  eax,BYTE PTR [rax+0x8]
   14005ac24:	and    al,0x82
   14005ac26:	cmp    al,0x82
   14005ac28:	jne    0x14005ac31
   14005ac2a:	or     DWORD PTR [rdi+0x18],0x2000
   14005ac31:	cmp    DWORD PTR [rdi+0x24],0x200
   14005ac38:	jne    0x14005ac4e
   14005ac3a:	mov    eax,DWORD PTR [rdi+0x18]
   14005ac3d:	test   al,0x8
   14005ac3f:	je     0x14005ac4e
   14005ac41:	bt     eax,0xa
   14005ac45:	jb     0x14005ac4e
   14005ac47:	mov    DWORD PTR [rdi+0x24],0x1000
   14005ac4e:	mov    rcx,QWORD PTR [rdi]
   14005ac51:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14005ac55:	movzx  eax,WORD PTR [rcx]
   14005ac58:	add    rcx,0x2
   14005ac5c:	mov    QWORD PTR [rdi],rcx
   14005ac5f:	add    rsp,0x30
   14005ac63:	pop    rdi
   14005ac64:	ret    
   14005ac65:	test   r11d,r11d
   14005ac68:	mov    eax,0x10
   14005ac6d:	mov    ecx,0x20
   14005ac72:	cmovne eax,ecx
   14005ac75:	mov    DWORD PTR [rdi+0x8],0x0
   14005ac7c:	or     DWORD PTR [rdi+0x18],eax
   14005ac7f:	mov    eax,0xffff
   14005ac84:	add    rsp,0x30
   14005ac88:	pop    rdi
   14005ac89:	ret    
   14005ac8a:	int3   
   14005ac8b:	int3   
   14005ac8c:	int3   
   14005ac8d:	int3   
   14005ac8e:	int3   
   14005ac8f:	int3   
   14005ac90:	mov    QWORD PTR [rsp+0x8],rbx
   14005ac95:	mov    QWORD PTR [rsp+0x10],rbp
   14005ac9a:	mov    QWORD PTR [rsp+0x18],rsi
   14005ac9f:	mov    QWORD PTR [rsp+0x20],rdi
   14005aca4:	push   r12
   14005aca6:	sub    rsp,0x30
   14005acaa:	test   BYTE PTR [rdx+0x18],0x40
   14005acae:	mov    rdi,rdx
   14005acb1:	mov    esi,ecx
   14005acb3:	jne    0x14005ada1
   14005acb9:	mov    rcx,rdx
   14005acbc:	call   0x140051e40
   14005acc1:	lea    rbp,[rip+0x2c468]        # 0x140087130
   14005acc8:	lea    r12,[rip+0x33a31]        # 0x14008e700
   14005accf:	cmp    eax,0xffffffff
   14005acd2:	je     0x14005ad0d
   14005acd4:	mov    rcx,rdi
   14005acd7:	call   0x140051e40
   14005acdc:	cmp    eax,0xfffffffe
   14005acdf:	je     0x14005ad0d
   14005ace1:	mov    rcx,rdi
   14005ace4:	call   0x140051e40
   14005ace9:	mov    rcx,rdi
   14005acec:	movsxd rbx,eax
   14005acef:	sar    rbx,0x5
   14005acf3:	call   0x140051e40
   14005acf8:	mov    r11d,eax
   14005acfb:	and    r11d,0x1f
   14005acff:	lea    rax,[r11+r11*4]
   14005ad03:	shl    rax,0x4
   14005ad07:	add    rax,QWORD PTR [r12+rbx*8]
   14005ad0b:	jmp    0x14005ad10
   14005ad0d:	mov    rax,rbp
   14005ad10:	test   BYTE PTR [rax+0x38],0x7f
   14005ad14:	jne    0x14005ad60
   14005ad16:	mov    rcx,rdi
   14005ad19:	call   0x140051e40
   14005ad1e:	cmp    eax,0xffffffff
   14005ad21:	je     0x14005ad5a
   14005ad23:	mov    rcx,rdi
   14005ad26:	call   0x140051e40
   14005ad2b:	cmp    eax,0xfffffffe
   14005ad2e:	je     0x14005ad5a
   14005ad30:	mov    rcx,rdi
   14005ad33:	call   0x140051e40
   14005ad38:	mov    rcx,rdi
   14005ad3b:	movsxd rbx,eax
   14005ad3e:	sar    rbx,0x5
   14005ad42:	call   0x140051e40
   14005ad47:	mov    r11d,eax
   14005ad4a:	and    r11d,0x1f
   14005ad4e:	lea    rbp,[r11+r11*4]
   14005ad52:	shl    rbp,0x4
   14005ad56:	add    rbp,QWORD PTR [r12+rbx*8]
   14005ad5a:	test   BYTE PTR [rbp+0x38],0x80
   14005ad5e:	je     0x14005ada1
   14005ad60:	call   0x140048680
   14005ad65:	xor    r9d,r9d
   14005ad68:	xor    r8d,r8d
   14005ad6b:	xor    edx,edx
   14005ad6d:	xor    ecx,ecx
   14005ad6f:	mov    QWORD PTR [rsp+0x20],0x0
   14005ad78:	mov    DWORD PTR [rax],0x16
   14005ad7e:	call   0x14004e100
   14005ad83:	or     eax,0xffffffff
   14005ad86:	mov    rbx,QWORD PTR [rsp+0x40]
   14005ad8b:	mov    rbp,QWORD PTR [rsp+0x48]
   14005ad90:	mov    rsi,QWORD PTR [rsp+0x50]
   14005ad95:	mov    rdi,QWORD PTR [rsp+0x58]
   14005ad9a:	add    rsp,0x30
   14005ad9e:	pop    r12
   14005ada0:	ret    
   14005ada1:	cmp    esi,0xffffffff
   14005ada4:	je     0x14005ad83
   14005ada6:	mov    eax,DWORD PTR [rdi+0x18]
   14005ada9:	test   al,0x1
   14005adab:	jne    0x14005adb5
   14005adad:	test   al,al
   14005adaf:	jns    0x14005ad83
   14005adb1:	test   al,0x2
   14005adb3:	jne    0x14005ad83
   14005adb5:	cmp    QWORD PTR [rdi+0x10],0x0
   14005adba:	jne    0x14005adc4
   14005adbc:	mov    rcx,rdi
   14005adbf:	call   0x1400598e0
   14005adc4:	mov    rax,QWORD PTR [rdi]
   14005adc7:	cmp    rax,QWORD PTR [rdi+0x10]
   14005adcb:	jne    0x14005adda
   14005adcd:	cmp    DWORD PTR [rdi+0x8],0x0
   14005add1:	jne    0x14005ad83
   14005add3:	add    rax,0x1
   14005add7:	mov    QWORD PTR [rdi],rax
   14005adda:	add    QWORD PTR [rdi],0xffffffffffffffff
   14005adde:	test   BYTE PTR [rdi+0x18],0x40
   14005ade2:	mov    rax,QWORD PTR [rdi]
   14005ade5:	je     0x14005adf5
   14005ade7:	cmp    BYTE PTR [rax],sil
   14005adea:	je     0x14005adf8
   14005adec:	add    rax,0x1
   14005adf0:	mov    QWORD PTR [rdi],rax
   14005adf3:	jmp    0x14005ad83
   14005adf5:	mov    BYTE PTR [rax],sil
   14005adf8:	add    DWORD PTR [rdi+0x8],0x1
   14005adfc:	and    DWORD PTR [rdi+0x18],0xffffffef
   14005ae00:	or     DWORD PTR [rdi+0x18],0x1
   14005ae04:	movzx  eax,sil
   14005ae08:	jmp    0x14005ad86
   14005ae0d:	int3   
   14005ae0e:	int3   
   14005ae0f:	int3   
   14005ae10:	mov    QWORD PTR [rsp+0x8],rbx
   14005ae15:	mov    QWORD PTR [rsp+0x10],rdx
   14005ae1a:	push   rdi
   14005ae1b:	sub    rsp,0x30
   14005ae1f:	mov    rbx,rdx
   14005ae22:	mov    edi,ecx
   14005ae24:	xor    eax,eax
   14005ae26:	test   rdx,rdx
   14005ae29:	setne  al
   14005ae2c:	test   eax,eax
   14005ae2e:	jne    0x14005ae58
   14005ae30:	call   0x140048680
   14005ae35:	mov    DWORD PTR [rax],0x16
   14005ae3b:	mov    QWORD PTR [rsp+0x20],0x0
   14005ae44:	xor    r9d,r9d
   14005ae47:	xor    r8d,r8d
   14005ae4a:	xor    edx,edx
   14005ae4c:	xor    ecx,ecx
   14005ae4e:	call   0x14004e100
   14005ae53:	or     eax,0xffffffff
   14005ae56:	jmp    0x14005ae77
   14005ae58:	mov    rcx,rdx
   14005ae5b:	call   0x1400522a0
   14005ae60:	nop
   14005ae61:	mov    rdx,rbx
   14005ae64:	mov    ecx,edi
   14005ae66:	call   0x14005ac90
   14005ae6b:	mov    edi,eax
   14005ae6d:	mov    rcx,rbx
   14005ae70:	call   0x140052350
   14005ae75:	mov    eax,edi
   14005ae77:	mov    rbx,QWORD PTR [rsp+0x40]
   14005ae7c:	add    rsp,0x30
   14005ae80:	pop    rdi
   14005ae81:	ret    
   14005ae82:	int3   
   14005ae83:	int3   
   14005ae84:	int3   
   14005ae85:	int3   
   14005ae86:	int3   
   14005ae87:	int3   
   14005ae88:	int3   
   14005ae89:	int3   
   14005ae8a:	int3   
   14005ae8b:	int3   
   14005ae8c:	int3   
   14005ae8d:	int3   
   14005ae8e:	int3   
   14005ae8f:	int3   
   14005ae90:	rex push rbp
   14005ae92:	sub    rsp,0x30
   14005ae96:	mov    rbp,rdx
   14005ae99:	mov    rcx,QWORD PTR [rbp+0x48]
   14005ae9d:	call   0x140052350
   14005aea2:	add    rsp,0x30
   14005aea6:	pop    rbp
   14005aea7:	ret    
   14005aea8:	int3   
   14005aea9:	int3   
   14005aeaa:	int3   
   14005aeab:	int3   
   14005aeac:	int3   
   14005aead:	int3   
   14005aeae:	int3   
   14005aeaf:	int3   
   14005aeb0:	rex push rdi
   14005aeb2:	sub    rsp,0x30
   14005aeb6:	test   rcx,rcx
   14005aeb9:	mov    rdi,rcx
   14005aebc:	jne    0x14005aee6
   14005aebe:	call   0x140048680
   14005aec3:	xor    r9d,r9d
   14005aec6:	xor    r8d,r8d
   14005aec9:	xor    edx,edx
   14005aecb:	xor    ecx,ecx
   14005aecd:	mov    QWORD PTR [rsp+0x20],rdi
   14005aed2:	mov    DWORD PTR [rax],0x16
   14005aed8:	call   0x14004e100
   14005aedd:	or     eax,0xffffffff
   14005aee0:	add    rsp,0x30
   14005aee4:	pop    rdi
   14005aee5:	ret    
   14005aee6:	mov    eax,DWORD PTR [rcx+0x18]
   14005aee9:	test   al,0x83
   14005aeeb:	je     0x14005b022
   14005aef1:	test   al,0x40
   14005aef3:	jne    0x14005b022
   14005aef9:	test   al,0x2
   14005aefb:	je     0x14005af0c
   14005aefd:	or     eax,0x20
   14005af00:	mov    DWORD PTR [rcx+0x18],eax
   14005af03:	or     eax,0xffffffff
   14005af06:	add    rsp,0x30
   14005af0a:	pop    rdi
   14005af0b:	ret    
   14005af0c:	or     eax,0x1
   14005af0f:	test   eax,0x10c
   14005af14:	mov    DWORD PTR [rcx+0x18],eax
   14005af17:	jne    0x14005af20
   14005af19:	call   0x1400598e0
   14005af1e:	jmp    0x14005af27
   14005af20:	mov    rax,QWORD PTR [rcx+0x10]
   14005af24:	mov    QWORD PTR [rcx],rax
   14005af27:	mov    rcx,rdi
   14005af2a:	call   0x140051e40
   14005af2f:	mov    r8d,DWORD PTR [rdi+0x24]
   14005af33:	mov    rdx,QWORD PTR [rdi+0x10]
   14005af37:	mov    ecx,eax
   14005af39:	call   0x14005e710
   14005af3e:	test   eax,eax
   14005af40:	mov    r11d,eax
   14005af43:	mov    DWORD PTR [rdi+0x8],eax
   14005af46:	je     0x14005b008
   14005af4c:	cmp    eax,0xffffffff
   14005af4f:	je     0x14005b008
   14005af55:	test   BYTE PTR [rdi+0x18],0x82
   14005af59:	jne    0x14005afd4
   14005af5b:	mov    rcx,rdi
   14005af5e:	call   0x140051e40
   14005af63:	cmp    eax,0xffffffff
   14005af66:	je     0x14005afbc
   14005af68:	mov    rcx,rdi
   14005af6b:	call   0x140051e40
   14005af70:	cmp    eax,0xfffffffe
   14005af73:	je     0x14005afbc
   14005af75:	mov    rcx,rdi
   14005af78:	mov    QWORD PTR [rsp+0x40],rbx
   14005af7d:	mov    QWORD PTR [rsp+0x48],rsi
   14005af82:	call   0x140051e40
   14005af87:	mov    rcx,rdi
   14005af8a:	lea    rsi,[rip+0x3376f]        # 0x14008e700
   14005af91:	movsxd rbx,eax
   14005af94:	sar    rbx,0x5
   14005af98:	call   0x140051e40
   14005af9d:	mov    r11d,eax
   14005afa0:	and    r11d,0x1f
   14005afa4:	lea    rax,[r11+r11*4]
   14005afa8:	shl    rax,0x4
   14005afac:	add    rax,QWORD PTR [rsi+rbx*8]
   14005afb0:	mov    rsi,QWORD PTR [rsp+0x48]
   14005afb5:	mov    rbx,QWORD PTR [rsp+0x40]
   14005afba:	jmp    0x14005afc3
   14005afbc:	lea    rax,[rip+0x2c16d]        # 0x140087130
   14005afc3:	movzx  eax,BYTE PTR [rax+0x8]
   14005afc7:	and    al,0x82
   14005afc9:	cmp    al,0x82
   14005afcb:	jne    0x14005afd4
   14005afcd:	or     DWORD PTR [rdi+0x18],0x2000
   14005afd4:	cmp    DWORD PTR [rdi+0x24],0x200
   14005afdb:	jne    0x14005aff1
   14005afdd:	mov    eax,DWORD PTR [rdi+0x18]
   14005afe0:	test   al,0x8
   14005afe2:	je     0x14005aff1
   14005afe4:	bt     eax,0xa
   14005afe8:	jb     0x14005aff1
   14005afea:	mov    DWORD PTR [rdi+0x24],0x1000
   14005aff1:	mov    rcx,QWORD PTR [rdi]
   14005aff4:	add    DWORD PTR [rdi+0x8],0xffffffff
   14005aff8:	movzx  eax,BYTE PTR [rcx]
   14005affb:	add    rcx,0x1
   14005afff:	mov    QWORD PTR [rdi],rcx
   14005b002:	add    rsp,0x30
   14005b006:	pop    rdi
   14005b007:	ret    
   14005b008:	test   r11d,r11d
   14005b00b:	mov    eax,0x10
   14005b010:	mov    ecx,0x20
   14005b015:	cmovne eax,ecx
   14005b018:	mov    DWORD PTR [rdi+0x8],0x0
   14005b01f:	or     DWORD PTR [rdi+0x18],eax
   14005b022:	or     eax,0xffffffff
   14005b025:	add    rsp,0x30
   14005b029:	pop    rdi
   14005b02a:	ret    
   14005b02b:	int3   
   14005b02c:	int3   
   14005b02d:	int3   
   14005b02e:	int3   
   14005b02f:	int3   
   14005b030:	mov    rax,rsp
   14005b033:	mov    QWORD PTR [rax+0x18],r8
   14005b037:	mov    QWORD PTR [rax+0x8],rcx
   14005b03b:	push   rbx
   14005b03c:	push   rbp
   14005b03d:	push   rsi
   14005b03e:	push   rdi
   14005b03f:	push   r12
   14005b041:	sub    rsp,0x90
   14005b048:	xor    ebx,ebx
   14005b04a:	test   r9b,r9b
   14005b04d:	mov    ebp,r9d
   14005b050:	mov    rdi,rdx
   14005b053:	mov    DWORD PTR [rax-0x50],0x18
   14005b05a:	lea    esi,[rbx+0x1]
   14005b05d:	mov    DWORD PTR [rax-0x64],ebx
   14005b060:	mov    DWORD PTR [rax-0x60],ebx
   14005b063:	mov    BYTE PTR [rsp+0xd8],bl
   14005b06a:	mov    QWORD PTR [rax-0x48],rbx
   14005b06e:	jns    0x14005b078
   14005b070:	mov    DWORD PTR [rax-0x40],ebx
   14005b073:	mov    r12b,0x10
   14005b076:	jmp    0x14005b07f
   14005b078:	mov    DWORD PTR [rsp+0x78],esi
   14005b07c:	xor    r12b,r12b
   14005b07f:	lea    rcx,[rsp+0x54]
   14005b084:	call   0x14005ec30
   14005b089:	test   eax,eax
   14005b08b:	je     0x14005b0a1
   14005b08d:	xor    r9d,r9d
   14005b090:	xor    r8d,r8d
   14005b093:	xor    edx,edx
   14005b095:	xor    ecx,ecx
   14005b097:	mov    QWORD PTR [rsp+0x20],rbx
   14005b09c:	call   0x14004e060
   14005b0a1:	lea    rcx,[rsp+0x58]
   14005b0a6:	call   0x140048260
   14005b0ab:	test   eax,eax
   14005b0ad:	je     0x14005b0c3
   14005b0af:	xor    r9d,r9d
   14005b0b2:	xor    r8d,r8d
   14005b0b5:	xor    edx,edx
   14005b0b7:	xor    ecx,ecx
   14005b0b9:	mov    QWORD PTR [rsp+0x20],rbx
   14005b0be:	call   0x14004e060
   14005b0c3:	bt     ebp,0xf
   14005b0c7:	jb     0x14005b0e5
   14005b0c9:	test   ebp,0x74000
   14005b0cf:	je     0x14005b0d7
   14005b0d1:	or     r12b,0x80
   14005b0d5:	jmp    0x14005b0e5
   14005b0d7:	cmp    DWORD PTR [rsp+0x54],0x8000
   14005b0df:	je     0x14005b0e5
   14005b0e1:	or     r12b,0x80
   14005b0e5:	mov    ecx,ebp
   14005b0e7:	mov    QWORD PTR [rsp+0x88],r14
   14005b0ef:	and    ecx,0x3
   14005b0f2:	je     0x14005b158
   14005b0f4:	sub    ecx,esi
   14005b0f6:	je     0x14005b13a
   14005b0f8:	cmp    ecx,esi
   14005b0fa:	je     0x14005b132
   14005b0fc:	call   0x1400486b0
   14005b101:	mov    DWORD PTR [rax],ebx
   14005b103:	mov    DWORD PTR [rdi],0xffffffff
   14005b109:	call   0x140048680
   14005b10e:	xor    r9d,r9d
   14005b111:	xor    r8d,r8d
   14005b114:	xor    edx,edx
   14005b116:	xor    ecx,ecx
   14005b118:	mov    DWORD PTR [rax],0x16
   14005b11e:	mov    QWORD PTR [rsp+0x20],rbx
   14005b123:	call   0x14004e100
   14005b128:	mov    eax,0x16
   14005b12d:	jmp    0x14005b91e
   14005b132:	mov    r14d,0xc0000000
   14005b138:	jmp    0x14005b15e
   14005b13a:	test   bpl,0x8
   14005b13e:	je     0x14005b150
   14005b140:	test   ebp,0x70000
   14005b146:	je     0x14005b150
   14005b148:	mov    r14d,0xc0000000
   14005b14e:	jmp    0x14005b15e
   14005b150:	mov    r14d,0x40000000
   14005b156:	jmp    0x14005b15e
   14005b158:	mov    r14d,0x80000000
   14005b15e:	mov    ecx,DWORD PTR [rsp+0xe0]
   14005b165:	mov    QWORD PTR [rsp+0xc8],r13
   14005b16d:	mov    r13d,0x2
   14005b173:	sub    ecx,0x10
   14005b176:	je     0x14005b1be
   14005b178:	sub    ecx,0x10
   14005b17b:	je     0x14005b1b6
   14005b17d:	sub    ecx,0x10
   14005b180:	je     0x14005b1ad
   14005b182:	sub    ecx,0x10
   14005b185:	je     0x14005b1a2
   14005b187:	cmp    ecx,0x40
   14005b18a:	jne    0x14005b21a
   14005b190:	mov    ecx,ebx
   14005b192:	cmp    r14d,0x80000000
   14005b199:	sete   cl
   14005b19c:	mov    DWORD PTR [rsp+0x40],ecx
   14005b1a0:	jmp    0x14005b1c4
   14005b1a2:	mov    ecx,0x3
   14005b1a7:	mov    DWORD PTR [rsp+0x40],ecx
   14005b1ab:	jmp    0x14005b1c4
   14005b1ad:	mov    ecx,r13d
   14005b1b0:	mov    DWORD PTR [rsp+0x40],ecx
   14005b1b4:	jmp    0x14005b1c4
   14005b1b6:	mov    ecx,esi
   14005b1b8:	mov    DWORD PTR [rsp+0x40],ecx
   14005b1bc:	jmp    0x14005b1c4
   14005b1be:	mov    ecx,ebx
   14005b1c0:	mov    DWORD PTR [rsp+0x40],ebx
   14005b1c4:	mov    eax,ebp
   14005b1c6:	and    eax,0x700
   14005b1cb:	cmp    eax,0x400
   14005b1d0:	jg     0x14005b205
   14005b1d2:	cmp    eax,0x400
   14005b1d7:	je     0x14005b1fe
   14005b1d9:	test   eax,eax
   14005b1db:	je     0x14005b1fe
   14005b1dd:	cmp    eax,0x100
   14005b1e2:	je     0x14005b1f7
   14005b1e4:	cmp    eax,0x200
   14005b1e9:	je     0x14005b250
   14005b1eb:	cmp    eax,0x300
   14005b1f0:	jne    0x14005b21a
   14005b1f2:	mov    esi,r13d
   14005b1f5:	jmp    0x14005b255
   14005b1f7:	mov    esi,0x4
   14005b1fc:	jmp    0x14005b255
   14005b1fe:	mov    esi,0x3
   14005b203:	jmp    0x14005b255
   14005b205:	cmp    eax,0x500
   14005b20a:	je     0x14005b255
   14005b20c:	cmp    eax,0x600
   14005b211:	je     0x14005b250
   14005b213:	cmp    eax,0x700
   14005b218:	je     0x14005b255
   14005b21a:	call   0x1400486b0
   14005b21f:	mov    DWORD PTR [rax],ebx
   14005b221:	mov    DWORD PTR [rdi],0xffffffff
   14005b227:	call   0x140048680
   14005b22c:	xor    r9d,r9d
   14005b22f:	xor    r8d,r8d
   14005b232:	xor    edx,edx
   14005b234:	xor    ecx,ecx
   14005b236:	mov    DWORD PTR [rax],0x16
   14005b23c:	mov    QWORD PTR [rsp+0x20],rbx
   14005b241:	call   0x14004e100
   14005b246:	mov    eax,0x16
   14005b24b:	jmp    0x14005b916
   14005b250:	mov    esi,0x5
   14005b255:	bt     ebp,0x8
   14005b259:	mov    QWORD PTR [rsp+0x80],r15
   14005b261:	mov    r15d,0x80
   14005b267:	mov    DWORD PTR [rsp+0x4c],r15d
   14005b26c:	jae    0x14005b28e
   14005b26e:	movzx  eax,BYTE PTR [rip+0x313b3]        # 0x14008c628
   14005b275:	not    al
   14005b277:	and    al,BYTE PTR [rsp+0xe8]
   14005b27e:	test   al,0x80
   14005b280:	mov    eax,0x1
   14005b285:	cmove  r15d,eax
   14005b289:	mov    DWORD PTR [rsp+0x4c],r15d
   14005b28e:	test   bpl,0x40
   14005b292:	je     0x14005b2b1
   14005b294:	bts    r15d,0x1a
   14005b299:	bts    r14d,0x10
   14005b29e:	cmp    DWORD PTR [rsp+0x58],r13d
   14005b2a3:	mov    DWORD PTR [rsp+0x4c],r15d
   14005b2a8:	jne    0x14005b2b1
   14005b2aa:	or     ecx,0x4
   14005b2ad:	mov    DWORD PTR [rsp+0x40],ecx
   14005b2b1:	bt     ebp,0xc
   14005b2b5:	jae    0x14005b2c1
   14005b2b7:	bts    r15d,0x8
   14005b2bc:	mov    DWORD PTR [rsp+0x4c],r15d
   14005b2c1:	test   bpl,0x20
   14005b2c5:	je     0x14005b2d3
   14005b2c7:	bts    r15d,0x1b
   14005b2cc:	mov    DWORD PTR [rsp+0x4c],r15d
   14005b2d1:	jmp    0x14005b2e3
   14005b2d3:	test   bpl,0x10
   14005b2d7:	je     0x14005b2e3
   14005b2d9:	bts    r15d,0x1c
   14005b2de:	mov    DWORD PTR [rsp+0x4c],r15d
   14005b2e3:	call   0x14005a660
   14005b2e8:	cmp    eax,0xffffffff
   14005b2eb:	mov    DWORD PTR [rdi],eax
   14005b2ed:	jne    0x14005b313
   14005b2ef:	call   0x1400486b0
   14005b2f4:	mov    DWORD PTR [rax],ebx
   14005b2f6:	mov    DWORD PTR [rdi],0xffffffff
   14005b2fc:	call   0x140048680
   14005b301:	mov    DWORD PTR [rax],0x18
   14005b307:	call   0x140048680
   14005b30c:	mov    eax,DWORD PTR [rax]
   14005b30e:	jmp    0x14005b90e
   14005b313:	mov    rax,QWORD PTR [rsp+0xc0]
   14005b31b:	mov    r8d,DWORD PTR [rsp+0x40]
   14005b320:	mov    rcx,QWORD PTR [rsp+0xd0]
   14005b328:	mov    QWORD PTR [rsp+0x30],rbx
   14005b32d:	lea    r9,[rsp+0x68]
   14005b332:	mov    edx,r14d
   14005b335:	mov    DWORD PTR [rsp+0x28],r15d
   14005b33a:	mov    DWORD PTR [rax],0x1
   14005b340:	mov    DWORD PTR [rsp+0x20],esi
   14005b344:	call   QWORD PTR [rip+0x926e]        # 0x1400645b8
   14005b34a:	cmp    rax,0xffffffffffffffff
   14005b34e:	mov    QWORD PTR [rsp+0x60],rax
   14005b353:	jne    0x14005b3e4
   14005b359:	mov    eax,r14d
   14005b35c:	and    eax,0xc0000000
   14005b361:	cmp    eax,0xc0000000
   14005b366:	jne    0x14005b3a7
   14005b368:	test   bpl,0x1
   14005b36c:	je     0x14005b3a7
   14005b36e:	mov    r8d,DWORD PTR [rsp+0x40]
   14005b373:	mov    rcx,QWORD PTR [rsp+0xd0]
   14005b37b:	mov    QWORD PTR [rsp+0x30],rbx
   14005b380:	btr    r14d,0x1f
   14005b385:	lea    r9,[rsp+0x68]
   14005b38a:	mov    DWORD PTR [rsp+0x28],r15d
   14005b38f:	mov    edx,r14d
   14005b392:	mov    DWORD PTR [rsp+0x20],esi
   14005b396:	call   QWORD PTR [rip+0x921c]        # 0x1400645b8
   14005b39c:	cmp    rax,0xffffffffffffffff
   14005b3a0:	mov    QWORD PTR [rsp+0x60],rax
   14005b3a5:	jne    0x14005b3e4
   14005b3a7:	movsxd rax,DWORD PTR [rdi]
   14005b3aa:	lea    r15,[rip+0x3334f]        # 0x14008e700
   14005b3b1:	mov    rdx,rax
   14005b3b4:	and    eax,0x1f
   14005b3b7:	lea    rcx,[rax+rax*4]
   14005b3bb:	sar    rdx,0x5
   14005b3bf:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b3c3:	add    rcx,rcx
   14005b3c6:	and    BYTE PTR [rax+rcx*8+0x8],0xfe
   14005b3cb:	call   QWORD PTR [rip+0x922f]        # 0x140064600
   14005b3d1:	mov    ecx,eax
   14005b3d3:	call   0x1400486e0
   14005b3d8:	call   0x140048680
   14005b3dd:	mov    ebx,DWORD PTR [rax]
   14005b3df:	jmp    0x14005b90c
   14005b3e4:	mov    rcx,rax
   14005b3e7:	call   QWORD PTR [rip+0x8eeb]        # 0x1400642d8
   14005b3ed:	test   eax,eax
   14005b3ef:	jne    0x14005b44a
   14005b3f1:	movsxd rax,DWORD PTR [rdi]
   14005b3f4:	lea    r15,[rip+0x33305]        # 0x14008e700
   14005b3fb:	mov    rdx,rax
   14005b3fe:	and    eax,0x1f
   14005b401:	lea    rcx,[rax+rax*4]
   14005b405:	sar    rdx,0x5
   14005b409:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b40d:	add    rcx,rcx
   14005b410:	and    BYTE PTR [rax+rcx*8+0x8],0xfe
   14005b415:	call   QWORD PTR [rip+0x91e5]        # 0x140064600
   14005b41b:	mov    ecx,eax
   14005b41d:	mov    ebx,eax
   14005b41f:	call   0x1400486e0
   14005b424:	mov    rcx,QWORD PTR [rsp+0x60]
   14005b429:	call   QWORD PTR [rip+0x9199]        # 0x1400645c8
   14005b42f:	test   ebx,ebx
   14005b431:	jne    0x14005b43e
   14005b433:	call   0x140048680
   14005b438:	mov    DWORD PTR [rax],0xd
   14005b43e:	call   0x140048680
   14005b443:	mov    ebx,DWORD PTR [rax]
   14005b445:	jmp    0x14005b90c
   14005b44a:	cmp    eax,r13d
   14005b44d:	jne    0x14005b455
   14005b44f:	or     r12b,0x40
   14005b453:	jmp    0x14005b45e
   14005b455:	cmp    eax,0x3
   14005b458:	jne    0x14005b45e
   14005b45a:	or     r12b,0x8
   14005b45e:	mov    rdx,QWORD PTR [rsp+0x60]
   14005b463:	mov    ecx,DWORD PTR [rdi]
   14005b465:	call   0x14005a330
   14005b46a:	movsxd rax,DWORD PTR [rdi]
   14005b46d:	or     r12b,0x1
   14005b471:	mov    rdx,rax
   14005b474:	and    eax,0x1f
   14005b477:	lea    r15,[rip+0x33282]        # 0x14008e700
   14005b47e:	lea    rcx,[rax+rax*4]
   14005b482:	sar    rdx,0x5
   14005b486:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b48a:	add    rcx,rcx
   14005b48d:	mov    BYTE PTR [rax+rcx*8+0x8],r12b
   14005b492:	movsxd rax,DWORD PTR [rdi]
   14005b495:	mov    rdx,rax
   14005b498:	and    eax,0x1f
   14005b49b:	lea    rcx,[rax+rax*4]
   14005b49f:	sar    rdx,0x5
   14005b4a3:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b4a7:	add    rcx,rcx
   14005b4aa:	and    BYTE PTR [rax+rcx*8+0x38],0x80
   14005b4af:	movzx  eax,r12b
   14005b4b3:	and    al,0x48
   14005b4b5:	mov    BYTE PTR [rsp+0x48],al
   14005b4b9:	jne    0x14005b548
   14005b4bf:	test   r12b,r12b
   14005b4c2:	jns    0x14005b548
   14005b4c8:	test   r13b,bpl
   14005b4cb:	je     0x14005b548
   14005b4cd:	mov    ecx,DWORD PTR [rdi]
   14005b4cf:	mov    r8d,r13d
   14005b4d2:	or     edx,0xffffffff
   14005b4d5:	call   0x14005ea70
   14005b4da:	cmp    eax,0xffffffff
   14005b4dd:	mov    DWORD PTR [rsp+0x44],eax
   14005b4e1:	jne    0x14005b503
   14005b4e3:	call   0x1400486b0
   14005b4e8:	cmp    DWORD PTR [rax],0x83
   14005b4ee:	je     0x14005b548
   14005b4f0:	mov    ecx,DWORD PTR [rdi]
   14005b4f2:	call   0x140051c40
   14005b4f7:	call   0x140048680
   14005b4fc:	mov    ebx,DWORD PTR [rax]
   14005b4fe:	jmp    0x14005b90c
   14005b503:	mov    ecx,DWORD PTR [rdi]
   14005b505:	lea    rdx,[rsp+0x50]
   14005b50a:	mov    r8d,0x1
   14005b510:	mov    WORD PTR [rsp+0x50],bx
   14005b515:	call   0x14005de00
   14005b51a:	test   eax,eax
   14005b51c:	jne    0x14005b537
   14005b51e:	cmp    WORD PTR [rsp+0x50],0x1a
   14005b524:	jne    0x14005b537
   14005b526:	movsxd rdx,DWORD PTR [rsp+0x44]
   14005b52b:	mov    ecx,DWORD PTR [rdi]
   14005b52d:	call   0x14005e8b0
   14005b532:	cmp    eax,0xffffffff
   14005b535:	je     0x14005b4f0
   14005b537:	mov    ecx,DWORD PTR [rdi]
   14005b539:	xor    r8d,r8d
   14005b53c:	xor    edx,edx
   14005b53e:	call   0x14005ea70
   14005b543:	cmp    eax,0xffffffff
   14005b546:	je     0x14005b4f0
   14005b548:	test   r12b,r12b
   14005b54b:	jns    0x14005b7d5
   14005b551:	test   ebp,0x74000
   14005b557:	jne    0x14005b56c
   14005b559:	mov    eax,DWORD PTR [rsp+0x54]
   14005b55d:	and    eax,0x74000
   14005b562:	jne    0x14005b56a
   14005b564:	bts    ebp,0xe
   14005b568:	jmp    0x14005b56c
   14005b56a:	or     ebp,eax
   14005b56c:	mov    eax,ebp
   14005b56e:	and    eax,0x74000
   14005b573:	cmp    eax,0x20000
   14005b578:	jg     0x14005b5b7
   14005b57a:	cmp    eax,0x20000
   14005b57f:	je     0x14005b5d6
   14005b581:	cmp    eax,0x4000
   14005b586:	je     0x14005b5ae
   14005b588:	cmp    eax,0x10000
   14005b58d:	je     0x14005b596
   14005b58f:	cmp    eax,0x14000
   14005b594:	jne    0x14005b5de
   14005b596:	mov    eax,ebp
   14005b598:	and    eax,0x301
   14005b59d:	cmp    eax,0x301
   14005b5a2:	jne    0x14005b5de
   14005b5a4:	mov    BYTE PTR [rsp+0xd8],r13b
   14005b5ac:	jmp    0x14005b5de
   14005b5ae:	mov    BYTE PTR [rsp+0xd8],bl
   14005b5b5:	jmp    0x14005b5de
   14005b5b7:	cmp    eax,0x24000
   14005b5bc:	je     0x14005b5d6
   14005b5be:	cmp    eax,0x40000
   14005b5c3:	je     0x14005b5cc
   14005b5c5:	cmp    eax,0x44000
   14005b5ca:	jne    0x14005b5de
   14005b5cc:	mov    BYTE PTR [rsp+0xd8],0x1
   14005b5d4:	jmp    0x14005b5de
   14005b5d6:	mov    BYTE PTR [rsp+0xd8],r13b
   14005b5de:	test   ebp,0x70000
   14005b5e4:	je     0x14005b7d5
   14005b5ea:	test   r12b,0x40
   14005b5ee:	mov    DWORD PTR [rsp+0x44],ebx
   14005b5f2:	jne    0x14005b7d5
   14005b5f8:	mov    eax,r14d
   14005b5fb:	and    eax,0xc0000000
   14005b600:	cmp    eax,0x40000000
   14005b605:	je     0x14005b73e
   14005b60b:	cmp    eax,0x80000000
   14005b610:	je     0x14005b688
   14005b612:	cmp    eax,0xc0000000
   14005b617:	jne    0x14005b7d5
   14005b61d:	test   esi,esi
   14005b61f:	je     0x14005b7d5
   14005b625:	cmp    esi,r13d
   14005b628:	jbe    0x14005b638
   14005b62a:	cmp    esi,0x4
   14005b62d:	jbe    0x14005b661
   14005b62f:	cmp    esi,0x5
   14005b632:	jne    0x14005b7d5
   14005b638:	movsx  ecx,BYTE PTR [rsp+0xd8]
   14005b640:	mov    esi,ebx
   14005b642:	sub    ecx,0x1
   14005b645:	je     0x14005b799
   14005b64b:	cmp    ecx,0x1
   14005b64e:	jne    0x14005b7d5
   14005b654:	mov    DWORD PTR [rsp+0x44],0xfeff
   14005b65c:	jmp    0x14005b7b0
   14005b661:	mov    ecx,DWORD PTR [rdi]
   14005b663:	mov    r8d,r13d
   14005b666:	xor    edx,edx
   14005b668:	call   0x140058e00
   14005b66d:	test   rax,rax
   14005b670:	je     0x14005b638
   14005b672:	mov    ecx,DWORD PTR [rdi]
   14005b674:	xor    r8d,r8d
   14005b677:	xor    edx,edx
   14005b679:	call   0x140058e00
   14005b67e:	cmp    rax,0xffffffffffffffff
   14005b682:	je     0x14005b4f0
   14005b688:	mov    ecx,DWORD PTR [rdi]
   14005b68a:	lea    rdx,[rsp+0x44]
   14005b68f:	mov    r8d,0x3
   14005b695:	call   0x14005de00
   14005b69a:	cmp    eax,0xffffffff
   14005b69d:	je     0x14005b4f0
   14005b6a3:	cmp    eax,r13d
   14005b6a6:	mov    ecx,DWORD PTR [rsp+0x44]
   14005b6aa:	je     0x14005b6c6
   14005b6ac:	cmp    eax,0x3
   14005b6af:	jne    0x14005b716
   14005b6b1:	cmp    ecx,0xbfbbef
   14005b6b7:	jne    0x14005b6c6
   14005b6b9:	mov    BYTE PTR [rsp+0xd8],0x1
   14005b6c1:	jmp    0x14005b7d5
   14005b6c6:	movzx  eax,cx
   14005b6c9:	cmp    eax,0xfffe
   14005b6ce:	jne    0x14005b6ec
   14005b6d0:	mov    ecx,DWORD PTR [rdi]
   14005b6d2:	call   0x140051c40
   14005b6d7:	call   0x140048680
   14005b6dc:	mov    ebx,0x16
   14005b6e1:	mov    DWORD PTR [rax],0x16
   14005b6e7:	jmp    0x14005b90c
   14005b6ec:	cmp    eax,0xfeff
   14005b6f1:	jne    0x14005b716
   14005b6f3:	mov    ecx,DWORD PTR [rdi]
   14005b6f5:	xor    r8d,r8d
   14005b6f8:	mov    edx,r13d
   14005b6fb:	call   0x14005ea70
   14005b700:	cmp    eax,0xffffffff
   14005b703:	je     0x14005b4f0
   14005b709:	mov    BYTE PTR [rsp+0xd8],r13b
   14005b711:	jmp    0x14005b7d5
   14005b716:	mov    ecx,DWORD PTR [rdi]
   14005b718:	xor    r8d,r8d
   14005b71b:	xor    edx,edx
   14005b71d:	call   0x14005ea70
   14005b722:	cmp    eax,0xffffffff
   14005b725:	jne    0x14005b7d5
   14005b72b:	mov    ecx,DWORD PTR [rdi]
   14005b72d:	call   0x140051c40
   14005b732:	call   0x140048680
   14005b737:	mov    ebx,DWORD PTR [rax]
   14005b739:	jmp    0x14005b90c
   14005b73e:	test   esi,esi
   14005b740:	je     0x14005b7d5
   14005b746:	cmp    esi,r13d
   14005b749:	jbe    0x14005b638
   14005b74f:	cmp    esi,0x4
   14005b752:	jbe    0x14005b75f
   14005b754:	cmp    esi,0x5
   14005b757:	je     0x14005b638
   14005b75d:	jmp    0x14005b7d5
   14005b75f:	mov    ecx,DWORD PTR [rdi]
   14005b761:	mov    r8d,r13d
   14005b764:	xor    edx,edx
   14005b766:	call   0x140058e00
   14005b76b:	test   rax,rax
   14005b76e:	je     0x14005b638
   14005b774:	mov    ecx,DWORD PTR [rdi]
   14005b776:	xor    r8d,r8d
   14005b779:	xor    edx,edx
   14005b77b:	call   0x140058e00
   14005b780:	cmp    rax,0xffffffffffffffff
   14005b784:	jne    0x14005b7d5
   14005b786:	mov    ecx,DWORD PTR [rdi]
   14005b788:	call   0x140051c40
   14005b78d:	call   0x140048680
   14005b792:	mov    ebx,DWORD PTR [rax]
   14005b794:	jmp    0x14005b90c
   14005b799:	mov    DWORD PTR [rsp+0x44],0xbfbbef
   14005b7a1:	mov    r13d,0x3
   14005b7a7:	data16 xchg ax,ax
   14005b7aa:	data16 xchg ax,ax
   14005b7ad:	data16 xchg ax,ax
   14005b7b0:	mov    ecx,DWORD PTR [rdi]
   14005b7b2:	movsxd rax,esi
   14005b7b5:	mov    r8d,r13d
   14005b7b8:	lea    rdx,[rsp+rax*1+0x44]
   14005b7bd:	sub    r8d,esi
   14005b7c0:	call   0x140059790
   14005b7c5:	cmp    eax,0xffffffff
   14005b7c8:	je     0x14005b4f0
   14005b7ce:	add    esi,eax
   14005b7d0:	cmp    r13d,esi
   14005b7d3:	jg     0x14005b7b0
   14005b7d5:	movsxd rax,DWORD PTR [rdi]
   14005b7d8:	mov    rdx,rax
   14005b7db:	and    eax,0x1f
   14005b7de:	lea    rcx,[rax+rax*4]
   14005b7e2:	sar    rdx,0x5
   14005b7e6:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b7ea:	movzx  edx,BYTE PTR [rsp+0xd8]
   14005b7f2:	add    rcx,rcx
   14005b7f5:	and    BYTE PTR [rax+rcx*8+0x38],0x80
   14005b7fa:	and    dl,0x7f
   14005b7fd:	or     BYTE PTR [rax+rcx*8+0x38],dl
   14005b801:	movsxd rax,DWORD PTR [rdi]
   14005b804:	mov    rcx,rax
   14005b807:	and    eax,0x1f
   14005b80a:	lea    rdx,[rax+rax*4]
   14005b80e:	sar    rcx,0x5
   14005b812:	mov    eax,ebp
   14005b814:	mov    rcx,QWORD PTR [r15+rcx*8]
   14005b818:	add    rdx,rdx
   14005b81b:	shr    eax,0x10
   14005b81e:	and    BYTE PTR [rcx+rdx*8+0x38],0x7f
   14005b823:	shl    al,0x7
   14005b826:	or     BYTE PTR [rcx+rdx*8+0x38],al
   14005b82a:	cmp    BYTE PTR [rsp+0x48],bl
   14005b82e:	jne    0x14005b853
   14005b830:	test   bpl,0x8
   14005b834:	je     0x14005b853
   14005b836:	movsxd rax,DWORD PTR [rdi]
   14005b839:	mov    rdx,rax
   14005b83c:	and    eax,0x1f
   14005b83f:	sar    rdx,0x5
   14005b843:	lea    rcx,[rax+rax*4]
   14005b847:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b84b:	add    rcx,rcx
   14005b84e:	or     BYTE PTR [rax+rcx*8+0x8],0x20
   14005b853:	mov    eax,r14d
   14005b856:	and    eax,0xc0000000
   14005b85b:	cmp    eax,0xc0000000
   14005b860:	jne    0x14005b90c
   14005b866:	test   bpl,0x1
   14005b86a:	je     0x14005b90c
   14005b870:	mov    rcx,QWORD PTR [rsp+0x60]
   14005b875:	call   QWORD PTR [rip+0x8d4d]        # 0x1400645c8
   14005b87b:	mov    eax,DWORD PTR [rsp+0x4c]
   14005b87f:	mov    r8d,DWORD PTR [rsp+0x40]
   14005b884:	mov    rcx,QWORD PTR [rsp+0xd0]
   14005b88c:	mov    QWORD PTR [rsp+0x30],rbx
   14005b891:	mov    DWORD PTR [rsp+0x28],eax
   14005b895:	btr    r14d,0x1f
   14005b89a:	lea    r9,[rsp+0x68]
   14005b89f:	mov    DWORD PTR [rsp+0x20],0x3
   14005b8a7:	mov    edx,r14d
   14005b8aa:	call   QWORD PTR [rip+0x8d08]        # 0x1400645b8
   14005b8b0:	cmp    rax,0xffffffffffffffff
   14005b8b4:	jne    0x14005b8f0
   14005b8b6:	call   QWORD PTR [rip+0x8d44]        # 0x140064600
   14005b8bc:	mov    ecx,eax
   14005b8be:	call   0x1400486e0
   14005b8c3:	movsxd rax,DWORD PTR [rdi]
   14005b8c6:	mov    rdx,rax
   14005b8c9:	and    eax,0x1f
   14005b8cc:	lea    rcx,[rax+rax*4]
   14005b8d0:	sar    rdx,0x5
   14005b8d4:	mov    rax,QWORD PTR [r15+rdx*8]
   14005b8d8:	add    rcx,rcx
   14005b8db:	and    BYTE PTR [rax+rcx*8+0x8],0xfe
   14005b8e0:	mov    ecx,DWORD PTR [rdi]
   14005b8e2:	call   0x14005a3f0
   14005b8e7:	call   0x140048680
   14005b8ec:	mov    ebx,DWORD PTR [rax]
   14005b8ee:	jmp    0x14005b90c
   14005b8f0:	movsxd rcx,DWORD PTR [rdi]
   14005b8f3:	mov    r8,rcx
   14005b8f6:	and    ecx,0x1f
   14005b8f9:	sar    r8,0x5
   14005b8fd:	lea    rdx,[rcx+rcx*4]
   14005b901:	mov    rcx,QWORD PTR [r15+r8*8]
   14005b905:	add    rdx,rdx
   14005b908:	mov    QWORD PTR [rcx+rdx*8],rax
   14005b90c:	mov    eax,ebx
   14005b90e:	mov    r15,QWORD PTR [rsp+0x80]
   14005b916:	mov    r13,QWORD PTR [rsp+0xc8]
   14005b91e:	mov    r14,QWORD PTR [rsp+0x88]
   14005b926:	add    rsp,0x90
   14005b92d:	pop    r12
   14005b92f:	pop    rdi
   14005b930:	pop    rsi
   14005b931:	pop    rbp
   14005b932:	pop    rbx
   14005b933:	ret    
   14005b934:	int3   
   14005b935:	int3   
   14005b936:	int3   
   14005b937:	int3   
   14005b938:	int3   
   14005b939:	int3   
   14005b93a:	int3   
   14005b93b:	int3   
   14005b93c:	int3   
   14005b93d:	int3   
   14005b93e:	int3   
   14005b93f:	int3   
   14005b940:	mov    QWORD PTR [rsp+0x8],rbx
   14005b945:	push   rdi
   14005b946:	sub    rsp,0x50
   14005b94a:	mov    r10d,r8d
   14005b94d:	mov    r8,rcx
   14005b950:	xor    ebx,ebx
   14005b952:	mov    DWORD PTR [rsp+0x40],ebx
   14005b956:	mov    eax,ebx
   14005b958:	mov    rdi,QWORD PTR [rsp+0x80]
   14005b960:	test   rdi,rdi
   14005b963:	setne  al
   14005b966:	test   eax,eax
   14005b968:	jne    0x14005b991
   14005b96a:	call   0x140048680
   14005b96f:	mov    DWORD PTR [rax],0x16
   14005b975:	mov    QWORD PTR [rsp+0x20],rbx
   14005b97a:	xor    r9d,r9d
   14005b97d:	xor    r8d,r8d
   14005b980:	xor    edx,edx
   14005b982:	xor    ecx,ecx
   14005b984:	call   0x14004e100
   14005b989:	lea    eax,[rbx+0x16]
   14005b98c:	jmp    0x14005ba73
   14005b991:	mov    DWORD PTR [rdi],0xffffffff
   14005b997:	mov    eax,ebx
   14005b999:	test   rcx,rcx
   14005b99c:	setne  al
   14005b99f:	test   eax,eax
   14005b9a1:	jne    0x14005b9cc
   14005b9a3:	call   0x140048680
   14005b9a8:	mov    DWORD PTR [rax],0x16
   14005b9ae:	mov    QWORD PTR [rsp+0x20],rbx
   14005b9b3:	xor    r9d,r9d
   14005b9b6:	xor    r8d,r8d
   14005b9b9:	xor    edx,edx
   14005b9bb:	xor    ecx,ecx
   14005b9bd:	call   0x14004e100
   14005b9c2:	mov    eax,0x16
   14005b9c7:	jmp    0x14005ba73
   14005b9cc:	mov    ecx,DWORD PTR [rsp+0x88]
   14005b9d3:	test   ecx,ecx
   14005b9d5:	je     0x14005ba0d
   14005b9d7:	test   r9d,0xfffffe7f
   14005b9de:	mov    eax,ebx
   14005b9e0:	sete   al
   14005b9e3:	test   eax,eax
   14005b9e5:	jne    0x14005ba0d
   14005b9e7:	call   0x140048680
   14005b9ec:	mov    DWORD PTR [rax],0x16
   14005b9f2:	mov    QWORD PTR [rsp+0x20],rbx
   14005b9f7:	xor    r9d,r9d
   14005b9fa:	xor    r8d,r8d
   14005b9fd:	xor    edx,edx
   14005b9ff:	xor    ecx,ecx
   14005ba01:	call   0x14004e100
   14005ba06:	mov    eax,0x16
   14005ba0b:	jmp    0x14005ba73
   14005ba0d:	mov    DWORD PTR [rsp+0x30],ecx
   14005ba11:	mov    DWORD PTR [rsp+0x28],r9d
   14005ba16:	mov    DWORD PTR [rsp+0x20],r10d
   14005ba1b:	mov    r9d,edx
   14005ba1e:	mov    rdx,rdi
   14005ba21:	lea    rcx,[rsp+0x40]
   14005ba26:	call   0x14005b030
   14005ba2b:	mov    ebx,eax
   14005ba2d:	mov    DWORD PTR [rsp+0x44],eax
   14005ba31:	cmp    DWORD PTR [rsp+0x40],0x0
   14005ba36:	je     0x14005ba67
   14005ba38:	test   eax,eax
   14005ba3a:	je     0x14005ba60
   14005ba3c:	movsxd rax,DWORD PTR [rdi]
   14005ba3f:	mov    rdx,rax
   14005ba42:	sar    rdx,0x5
   14005ba46:	lea    r9,[rip+0x32cb3]        # 0x14008e700
   14005ba4d:	and    eax,0x1f
   14005ba50:	lea    rcx,[rax+rax*4]
   14005ba54:	add    rcx,rcx
   14005ba57:	mov    rax,QWORD PTR [r9+rdx*8]
   14005ba5b:	and    BYTE PTR [rax+rcx*8+0x8],0xfe
   14005ba60:	mov    ecx,DWORD PTR [rdi]
   14005ba62:	call   0x14005a630
   14005ba67:	test   ebx,ebx
   14005ba69:	je     0x14005ba71
   14005ba6b:	mov    DWORD PTR [rdi],0xffffffff
   14005ba71:	mov    eax,ebx
   14005ba73:	mov    rbx,QWORD PTR [rsp+0x60]
   14005ba78:	add    rsp,0x50
   14005ba7c:	pop    rdi
   14005ba7d:	ret    
   14005ba7e:	int3   
   14005ba7f:	int3   
   14005ba80:	rex push rbp
   14005ba82:	sub    rsp,0x40
   14005ba86:	mov    rbp,rdx
   14005ba89:	cmp    DWORD PTR [rbp+0x40],0x0
   14005ba8d:	je     0x14005bad1
   14005ba8f:	cmp    DWORD PTR [rbp+0x44],0x0
   14005ba93:	je     0x14005bac2
   14005ba95:	mov    r8,QWORD PTR [rbp+0x80]
   14005ba9c:	movsxd rax,DWORD PTR [r8]
   14005ba9f:	mov    rdx,rax
   14005baa2:	sar    rdx,0x5
   14005baa6:	lea    r9,[rip+0x32c53]        # 0x14008e700
   14005baad:	and    eax,0x1f
   14005bab0:	lea    rcx,[rax+rax*4]
   14005bab4:	add    rcx,rcx
   14005bab7:	mov    rax,QWORD PTR [r9+rdx*8]
   14005babb:	and    BYTE PTR [rax+rcx*8+0x8],0xfe
   14005bac0:	jmp    0x14005bac9
   14005bac2:	mov    r8,QWORD PTR [rbp+0x80]
   14005bac9:	mov    ecx,DWORD PTR [r8]
   14005bacc:	call   0x14005a630
   14005bad1:	add    rsp,0x40
   14005bad5:	pop    rbp
   14005bad6:	ret    
   14005bad7:	int3   
   14005bad8:	int3   
   14005bad9:	int3   
   14005bada:	int3   
   14005badb:	int3   
   14005badc:	int3   
   14005badd:	int3   
   14005bade:	int3   
   14005badf:	int3   
   14005bae0:	sub    rsp,0x38
   14005bae4:	mov    eax,r9d
   14005bae7:	mov    r9d,DWORD PTR [rsp+0x60]
   14005baec:	mov    r10d,r8d
   14005baef:	mov    r11,rdx
   14005baf2:	mov    DWORD PTR [rsp+0x28],0x1
   14005bafa:	mov    QWORD PTR [rsp+0x20],rcx
   14005baff:	mov    r8d,eax
   14005bb02:	mov    edx,r10d
   14005bb05:	mov    rcx,r11
   14005bb08:	call   0x14005b940
   14005bb0d:	add    rsp,0x38
   14005bb11:	ret    
   14005bb12:	int3   
   14005bb13:	int3   
   14005bb14:	int3   
   14005bb15:	int3   
   14005bb16:	int3   
   14005bb17:	int3   
   14005bb18:	int3   
   14005bb19:	int3   
   14005bb1a:	int3   
   14005bb1b:	int3   
   14005bb1c:	int3   
   14005bb1d:	int3   
   14005bb1e:	int3   
   14005bb1f:	int3   
   14005bb20:	mov    QWORD PTR [rsp+0x10],rsi
   14005bb25:	push   rdi
   14005bb26:	sub    rsp,0x50
   14005bb2a:	test   r8,r8
   14005bb2d:	mov    rsi,rdx
   14005bb30:	mov    rdi,rcx
   14005bb33:	mov    BYTE PTR [rsp+0x48],0x0
   14005bb38:	jne    0x14005bbd4
   14005bb3e:	call   0x14004bd60
   14005bb43:	mov    QWORD PTR [rsp+0x40],rax
   14005bb48:	mov    r11,rax
   14005bb4b:	mov    r8,QWORD PTR [rax+0xc0]
   14005bb52:	cmp    r8,QWORD PTR [rip+0x2bd47]        # 0x1400878a0
   14005bb59:	mov    QWORD PTR [rsp+0x30],r8
   14005bb5e:	mov    rax,QWORD PTR [rax+0xb8]
   14005bb65:	mov    QWORD PTR [rsp+0x38],rax
   14005bb6a:	je     0x14005bb8f
   14005bb6c:	mov    ecx,DWORD PTR [r11+0xc8]
   14005bb73:	test   DWORD PTR [rip+0x2bbaf],ecx        # 0x140087728
   14005bb79:	jne    0x14005bb8f
   14005bb7b:	call   0x14004f030
   14005bb80:	mov    r11,QWORD PTR [rsp+0x40]
   14005bb85:	mov    QWORD PTR [rsp+0x30],rax
   14005bb8a:	mov    rax,QWORD PTR [rsp+0x38]
   14005bb8f:	cmp    rax,QWORD PTR [rip+0x2ba8a]        # 0x140087620
   14005bb96:	je     0x14005bbb6
   14005bb98:	mov    eax,DWORD PTR [r11+0xc8]
   14005bb9f:	test   DWORD PTR [rip+0x2bb83],eax        # 0x140087728
   14005bba5:	jne    0x14005bbb6
   14005bba7:	call   0x14004e4e0
   14005bbac:	mov    r11,QWORD PTR [rsp+0x40]
   14005bbb1:	mov    QWORD PTR [rsp+0x38],rax
   14005bbb6:	test   BYTE PTR [r11+0xc8],0x2
   14005bbbe:	jne    0x14005bbec
   14005bbc0:	or     DWORD PTR [r11+0xc8],0x2
   14005bbc8:	mov    r11,QWORD PTR [rsp+0x40]
   14005bbcd:	mov    BYTE PTR [rsp+0x48],0x1
   14005bbd2:	jmp    0x14005bbec
   14005bbd4:	mov    rax,QWORD PTR [r8]
   14005bbd7:	lea    rcx,[rsp+0x30]
   14005bbdc:	mov    QWORD PTR [rcx],rax
   14005bbdf:	mov    rax,QWORD PTR [r8+0x8]
   14005bbe3:	mov    QWORD PTR [rcx+0x8],rax
   14005bbe7:	mov    r11,QWORD PTR [rsp+0x40]
   14005bbec:	test   rdi,rdi
   14005bbef:	jne    0x14005bc37
   14005bbf1:	call   0x140048680
   14005bbf6:	xor    r9d,r9d
   14005bbf9:	xor    r8d,r8d
   14005bbfc:	xor    edx,edx
   14005bbfe:	xor    ecx,ecx
   14005bc00:	mov    QWORD PTR [rsp+0x20],0x0
   14005bc09:	mov    DWORD PTR [rax],0x16
   14005bc0f:	call   0x14004e100
   14005bc14:	cmp    BYTE PTR [rsp+0x48],0x0
   14005bc19:	je     0x14005bc27
   14005bc1b:	mov    rax,QWORD PTR [rsp+0x40]
   14005bc20:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005bc27:	mov    eax,0x7fffffff
   14005bc2c:	mov    rsi,QWORD PTR [rsp+0x68]
   14005bc31:	add    rsp,0x50
   14005bc35:	pop    rdi
   14005bc36:	ret    
   14005bc37:	test   rsi,rsi
   14005bc3a:	je     0x14005bbf1
   14005bc3c:	mov    rax,QWORD PTR [rsp+0x30]
   14005bc41:	mov    QWORD PTR [rsp+0x60],rbx
   14005bc46:	cmp    DWORD PTR [rax+0x14],0x0
   14005bc4a:	jne    0x14005bc90
   14005bc4c:	data16 data16 xchg ax,ax
   14005bc50:	movzx  ebx,WORD PTR [rdi]
   14005bc53:	cmp    bx,0x41
   14005bc57:	jb     0x14005bc63
   14005bc59:	cmp    bx,0x5a
   14005bc5d:	ja     0x14005bc63
   14005bc5f:	add    bx,0x20
   14005bc63:	movzx  eax,WORD PTR [rsi]
   14005bc66:	cmp    ax,0x41
   14005bc6a:	jb     0x14005bc76
   14005bc6c:	cmp    ax,0x5a
   14005bc70:	ja     0x14005bc76
   14005bc72:	add    ax,0x20
   14005bc76:	add    rdi,0x2
   14005bc7a:	add    rsi,0x2
   14005bc7e:	test   bx,bx
   14005bc81:	je     0x14005bcc4
   14005bc83:	cmp    bx,ax
   14005bc86:	je     0x14005bc50
   14005bc88:	jmp    0x14005bcc4
   14005bc8a:	data16 xchg ax,ax
   14005bc8d:	data16 xchg ax,ax
   14005bc90:	movzx  ecx,WORD PTR [rdi]
   14005bc93:	lea    rdx,[rsp+0x30]
   14005bc98:	call   0x14005ec80
   14005bc9d:	movzx  ecx,WORD PTR [rsi]
   14005bca0:	lea    rdx,[rsp+0x30]
   14005bca5:	mov    bx,ax
   14005bca8:	add    rdi,0x2
   14005bcac:	call   0x14005ec80
   14005bcb1:	add    rsi,0x2
   14005bcb5:	test   bx,bx
   14005bcb8:	je     0x14005bcbf
   14005bcba:	cmp    bx,ax
   14005bcbd:	je     0x14005bc90
   14005bcbf:	mov    r11,QWORD PTR [rsp+0x40]
   14005bcc4:	movzx  ecx,ax
   14005bcc7:	movzx  eax,bx
   14005bcca:	mov    rbx,QWORD PTR [rsp+0x60]
   14005bccf:	sub    eax,ecx
   14005bcd1:	cmp    BYTE PTR [rsp+0x48],0x0
   14005bcd6:	je     0x14005bce0
   14005bcd8:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005bce0:	mov    rsi,QWORD PTR [rsp+0x68]
   14005bce5:	add    rsp,0x50
   14005bce9:	pop    rdi
   14005bcea:	ret    
   14005bceb:	int3   
   14005bcec:	int3   
   14005bced:	int3   
   14005bcee:	int3   
   14005bcef:	int3   
   14005bcf0:	sub    rsp,0x38
   14005bcf4:	cmp    DWORD PTR [rip+0x314a5],0x0        # 0x14008d1a0
   14005bcfb:	mov    r9,rcx
   14005bcfe:	jne    0x14005bd86
   14005bd04:	test   rcx,rcx
   14005bd07:	jne    0x14005bd36
   14005bd09:	call   0x140048680
   14005bd0e:	xor    r9d,r9d
   14005bd11:	xor    r8d,r8d
   14005bd14:	xor    edx,edx
   14005bd16:	xor    ecx,ecx
   14005bd18:	mov    QWORD PTR [rsp+0x20],0x0
   14005bd21:	mov    DWORD PTR [rax],0x16
   14005bd27:	call   0x14004e100
   14005bd2c:	mov    eax,0x7fffffff
   14005bd31:	add    rsp,0x38
   14005bd35:	ret    
   14005bd36:	test   rdx,rdx
   14005bd39:	je     0x14005bd09
   14005bd3b:	xchg   ax,ax
   14005bd3d:	data16 xchg ax,ax
   14005bd40:	movzx  eax,WORD PTR [r9]
   14005bd44:	cmp    ax,0x41
   14005bd48:	jb     0x14005bd54
   14005bd4a:	cmp    ax,0x5a
   14005bd4e:	ja     0x14005bd54
   14005bd50:	add    ax,0x20
   14005bd54:	movzx  ecx,WORD PTR [rdx]
   14005bd57:	cmp    cx,0x41
   14005bd5b:	jb     0x14005bd67
   14005bd5d:	cmp    cx,0x5a
   14005bd61:	ja     0x14005bd67
   14005bd63:	add    cx,0x20
   14005bd67:	add    r9,0x2
   14005bd6b:	add    rdx,0x2
   14005bd6f:	test   ax,ax
   14005bd72:	je     0x14005bd79
   14005bd74:	cmp    ax,cx
   14005bd77:	je     0x14005bd40
   14005bd79:	movzx  ecx,cx
   14005bd7c:	movzx  eax,ax
   14005bd7f:	sub    eax,ecx
   14005bd81:	add    rsp,0x38
   14005bd85:	ret    
   14005bd86:	xor    r8d,r8d
   14005bd89:	add    rsp,0x38
   14005bd8d:	jmp    0x14005bb20
   14005bd92:	int3   
   14005bd93:	int3   
   14005bd94:	int3   
   14005bd95:	int3   
   14005bd96:	int3   
   14005bd97:	int3   
   14005bd98:	int3   
   14005bd99:	int3   
   14005bd9a:	int3   
   14005bd9b:	int3   
   14005bd9c:	int3   
   14005bd9d:	int3   
   14005bd9e:	int3   
   14005bd9f:	int3   
   14005bda0:	mov    ecx,0x2
   14005bda5:	jmp    0x140048190
   14005bdaa:	int3   
   14005bdab:	int3   
   14005bdac:	int3   
   14005bdad:	int3   
   14005bdae:	int3   
   14005bdaf:	int3   
   14005bdb0:	rex push rbx
   14005bdb2:	sub    rsp,0x40
   14005bdb6:	cmp    DWORD PTR [rip+0x313e3],0x0        # 0x14008d1a0
   14005bdbd:	movsxd rbx,ecx
   14005bdc0:	jne    0x14005bdd5
   14005bdc2:	mov    rax,QWORD PTR [rip+0x2bab7]        # 0x140087880
   14005bdc9:	mov    al,BYTE PTR [rax+rbx*2]
   14005bdcc:	and    eax,0x4
   14005bdcf:	add    rsp,0x40
   14005bdd3:	pop    rbx
   14005bdd4:	ret    
   14005bdd5:	mov    BYTE PTR [rsp+0x38],0x0
   14005bdda:	call   0x14004bd60
   14005bddf:	mov    r11,rax
   14005bde2:	mov    QWORD PTR [rsp+0x30],rax
   14005bde7:	mov    rax,QWORD PTR [rax+0xc0]
   14005bdee:	cmp    rax,QWORD PTR [rip+0x2baab]        # 0x1400878a0
   14005bdf5:	mov    QWORD PTR [rsp+0x20],rax
   14005bdfa:	mov    rdx,QWORD PTR [r11+0xb8]
   14005be01:	mov    QWORD PTR [rsp+0x28],rdx
   14005be06:	je     0x14005be2b
   14005be08:	mov    ecx,DWORD PTR [r11+0xc8]
   14005be0f:	test   DWORD PTR [rip+0x2b913],ecx        # 0x140087728
   14005be15:	jne    0x14005be2b
   14005be17:	call   0x14004f030
   14005be1c:	mov    r11,QWORD PTR [rsp+0x30]
   14005be21:	mov    rdx,QWORD PTR [rsp+0x28]
   14005be26:	mov    QWORD PTR [rsp+0x20],rax
   14005be2b:	cmp    rdx,QWORD PTR [rip+0x2b7ee]        # 0x140087620
   14005be32:	je     0x14005be57
   14005be34:	mov    ecx,DWORD PTR [r11+0xc8]
   14005be3b:	test   DWORD PTR [rip+0x2b8e7],ecx        # 0x140087728
   14005be41:	jne    0x14005be57
   14005be43:	call   0x14004e4e0
   14005be48:	mov    r11,QWORD PTR [rsp+0x30]
   14005be4d:	mov    QWORD PTR [rsp+0x28],rax
   14005be52:	mov    rax,QWORD PTR [rsp+0x20]
   14005be57:	test   BYTE PTR [r11+0xc8],0x2
   14005be5f:	jne    0x14005be78
   14005be61:	or     DWORD PTR [r11+0xc8],0x2
   14005be69:	mov    r11,QWORD PTR [rsp+0x30]
   14005be6e:	mov    rax,QWORD PTR [rsp+0x20]
   14005be73:	mov    BYTE PTR [rsp+0x38],0x1
   14005be78:	cmp    DWORD PTR [rax+0x10c],0x1
   14005be7f:	jle    0x14005be99
   14005be81:	lea    r8,[rsp+0x20]
   14005be86:	mov    edx,0x4
   14005be8b:	mov    ecx,ebx
   14005be8d:	call   0x14005ee30
   14005be92:	mov    r11,QWORD PTR [rsp+0x30]
   14005be97:	jmp    0x14005bea6
   14005be99:	mov    rax,QWORD PTR [rax+0x140]
   14005bea0:	mov    al,BYTE PTR [rax+rbx*2]
   14005bea3:	and    eax,0x4
   14005bea6:	cmp    BYTE PTR [rsp+0x38],0x0
   14005beab:	je     0x14005beb5
   14005bead:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005beb5:	add    rsp,0x40
   14005beb9:	pop    rbx
   14005beba:	ret    
   14005bebb:	int3   
   14005bebc:	int3   
   14005bebd:	int3   
   14005bebe:	int3   
   14005bebf:	int3   
   14005bec0:	rex push rbx
   14005bec2:	sub    rsp,0x40
   14005bec6:	cmp    DWORD PTR [rip+0x312d3],0x0        # 0x14008d1a0
   14005becd:	movsxd rbx,ecx
   14005bed0:	jne    0x14005bee7
   14005bed2:	mov    rax,QWORD PTR [rip+0x2b9a7]        # 0x140087880
   14005bed9:	mov    al,BYTE PTR [rax+rbx*2]
   14005bedc:	and    eax,0x80
   14005bee1:	add    rsp,0x40
   14005bee5:	pop    rbx
   14005bee6:	ret    
   14005bee7:	mov    BYTE PTR [rsp+0x38],0x0
   14005beec:	call   0x14004bd60
   14005bef1:	mov    r11,rax
   14005bef4:	mov    QWORD PTR [rsp+0x30],rax
   14005bef9:	mov    rax,QWORD PTR [rax+0xc0]
   14005bf00:	cmp    rax,QWORD PTR [rip+0x2b999]        # 0x1400878a0
   14005bf07:	mov    QWORD PTR [rsp+0x20],rax
   14005bf0c:	mov    rdx,QWORD PTR [r11+0xb8]
   14005bf13:	mov    QWORD PTR [rsp+0x28],rdx
   14005bf18:	je     0x14005bf3d
   14005bf1a:	mov    ecx,DWORD PTR [r11+0xc8]
   14005bf21:	test   DWORD PTR [rip+0x2b801],ecx        # 0x140087728
   14005bf27:	jne    0x14005bf3d
   14005bf29:	call   0x14004f030
   14005bf2e:	mov    r11,QWORD PTR [rsp+0x30]
   14005bf33:	mov    rdx,QWORD PTR [rsp+0x28]
   14005bf38:	mov    QWORD PTR [rsp+0x20],rax
   14005bf3d:	cmp    rdx,QWORD PTR [rip+0x2b6dc]        # 0x140087620
   14005bf44:	je     0x14005bf69
   14005bf46:	mov    ecx,DWORD PTR [r11+0xc8]
   14005bf4d:	test   DWORD PTR [rip+0x2b7d5],ecx        # 0x140087728
   14005bf53:	jne    0x14005bf69
   14005bf55:	call   0x14004e4e0
   14005bf5a:	mov    r11,QWORD PTR [rsp+0x30]
   14005bf5f:	mov    QWORD PTR [rsp+0x28],rax
   14005bf64:	mov    rax,QWORD PTR [rsp+0x20]
   14005bf69:	test   BYTE PTR [r11+0xc8],0x2
   14005bf71:	jne    0x14005bf8a
   14005bf73:	or     DWORD PTR [r11+0xc8],0x2
   14005bf7b:	mov    r11,QWORD PTR [rsp+0x30]
   14005bf80:	mov    rax,QWORD PTR [rsp+0x20]
   14005bf85:	mov    BYTE PTR [rsp+0x38],0x1
   14005bf8a:	cmp    DWORD PTR [rax+0x10c],0x1
   14005bf91:	jle    0x14005bfab
   14005bf93:	lea    r8,[rsp+0x20]
   14005bf98:	mov    edx,0x80
   14005bf9d:	mov    ecx,ebx
   14005bf9f:	call   0x14005ee30
   14005bfa4:	mov    r11,QWORD PTR [rsp+0x30]
   14005bfa9:	jmp    0x14005bfba
   14005bfab:	mov    rax,QWORD PTR [rax+0x140]
   14005bfb2:	mov    al,BYTE PTR [rax+rbx*2]
   14005bfb5:	and    eax,0x80
   14005bfba:	cmp    BYTE PTR [rsp+0x38],0x0
   14005bfbf:	je     0x14005bfc9
   14005bfc1:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005bfc9:	add    rsp,0x40
   14005bfcd:	pop    rbx
   14005bfce:	ret    
   14005bfcf:	int3   
   14005bfd0:	rex push rsi
   14005bfd2:	push   rdi
   14005bfd3:	sub    rsp,0x48
   14005bfd7:	mov    rax,QWORD PTR [rip+0x2ad92]        # 0x140086d70
   14005bfde:	xor    rax,rsp
   14005bfe1:	mov    QWORD PTR [rsp+0x30],rax
   14005bfe6:	cmp    cx,0xffff
   14005bfeb:	mov    rdi,rdx
   14005bfee:	movzx  esi,cx
   14005bff1:	mov    WORD PTR [rsp+0x24],cx
   14005bff6:	je     0x14005c201
   14005bffc:	mov    eax,DWORD PTR [rdx+0x18]
   14005bfff:	test   al,0x1
   14005c001:	jne    0x14005c013
   14005c003:	test   al,al
   14005c005:	jns    0x14005c201
   14005c00b:	test   al,0x2
   14005c00d:	jne    0x14005c201
   14005c013:	cmp    QWORD PTR [rdx+0x10],0x0
   14005c018:	jne    0x14005c022
   14005c01a:	mov    rcx,rdx
   14005c01d:	call   0x1400598e0
   14005c022:	test   BYTE PTR [rdi+0x18],0x40
   14005c026:	mov    QWORD PTR [rsp+0x70],rbx
   14005c02b:	mov    QWORD PTR [rsp+0x78],rbp
   14005c030:	mov    QWORD PTR [rsp+0x40],r12
   14005c035:	jne    0x14005c1ab
   14005c03b:	mov    rcx,rdi
   14005c03e:	call   0x140051e40
   14005c043:	lea    rbp,[rip+0x2b0e6]        # 0x140087130
   14005c04a:	lea    r12,[rip+0x326af]        # 0x14008e700
   14005c051:	cmp    eax,0xffffffff
   14005c054:	je     0x14005c092
   14005c056:	mov    rcx,rdi
   14005c059:	call   0x140051e40
   14005c05e:	cmp    eax,0xfffffffe
   14005c061:	je     0x14005c092
   14005c063:	mov    rcx,rdi
   14005c066:	call   0x140051e40
   14005c06b:	movsxd rcx,eax
   14005c06e:	sar    rcx,0x5
   14005c072:	mov    rbx,QWORD PTR [r12+rcx*8]
   14005c076:	mov    rcx,rdi
   14005c079:	call   0x140051e40
   14005c07e:	mov    r11d,eax
   14005c081:	and    r11d,0x1f
   14005c085:	lea    rax,[r11+r11*4]
   14005c089:	shl    rax,0x4
   14005c08d:	add    rax,rbx
   14005c090:	jmp    0x14005c095
   14005c092:	mov    rax,rbp
   14005c095:	test   BYTE PTR [rax+0x8],0x80
   14005c099:	je     0x14005c1ab
   14005c09f:	mov    rcx,rdi
   14005c0a2:	call   0x140051e40
   14005c0a7:	cmp    eax,0xffffffff
   14005c0aa:	je     0x14005c0e6
   14005c0ac:	mov    rcx,rdi
   14005c0af:	call   0x140051e40
   14005c0b4:	cmp    eax,0xfffffffe
   14005c0b7:	je     0x14005c0e6
   14005c0b9:	mov    rcx,rdi
   14005c0bc:	call   0x140051e40
   14005c0c1:	movsxd rcx,eax
   14005c0c4:	sar    rcx,0x5
   14005c0c8:	mov    rbx,QWORD PTR [r12+rcx*8]
   14005c0cc:	mov    rcx,rdi
   14005c0cf:	call   0x140051e40
   14005c0d4:	mov    r11d,eax
   14005c0d7:	and    r11d,0x1f
   14005c0db:	lea    rbp,[r11+r11*4]
   14005c0df:	shl    rbp,0x4
   14005c0e3:	add    rbp,rbx
   14005c0e6:	test   BYTE PTR [rbp+0x38],0x7f
   14005c0ea:	je     0x14005c107
   14005c0ec:	movzx  eax,BYTE PTR [rsp+0x25]
   14005c0f1:	mov    r8d,0x2
   14005c0f7:	mov    BYTE PTR [rsp+0x28],sil
   14005c0fc:	mov    BYTE PTR [rsp+0x29],al
   14005c100:	mov    DWORD PTR [rsp+0x20],r8d
   14005c105:	jmp    0x14005c12d
   14005c107:	lea    rdx,[rsp+0x28]
   14005c10c:	lea    rcx,[rsp+0x20]
   14005c111:	movzx  r9d,si
   14005c115:	mov    r8d,0x5
   14005c11b:	call   0x14005ca00
   14005c120:	test   eax,eax
   14005c122:	jne    0x14005c1e0
   14005c128:	mov    r8d,DWORD PTR [rsp+0x20]
   14005c12d:	mov    rax,QWORD PTR [rdi+0x10]
   14005c131:	movsxd rdx,r8d
   14005c134:	add    rdx,rax
   14005c137:	cmp    QWORD PTR [rdi],rdx
   14005c13a:	jae    0x14005c153
   14005c13c:	cmp    DWORD PTR [rdi+0x8],0x0
   14005c140:	jne    0x14005c1e0
   14005c146:	cmp    r8d,DWORD PTR [rdi+0x24]
   14005c14a:	jg     0x14005c1e0
   14005c150:	mov    QWORD PTR [rdi],rdx
   14005c153:	lea    eax,[r8-0x1]
   14005c157:	test   eax,eax
   14005c159:	movsxd rdx,eax
   14005c15c:	js     0x14005c179
   14005c15e:	xchg   ax,ax
   14005c160:	add    QWORD PTR [rdi],0xffffffffffffffff
   14005c164:	movzx  eax,BYTE PTR [rsp+rdx*1+0x28]
   14005c169:	sub    rdx,0x1
   14005c16d:	mov    rcx,QWORD PTR [rdi]
   14005c170:	mov    BYTE PTR [rcx],al
   14005c172:	jns    0x14005c160
   14005c174:	mov    r8d,DWORD PTR [rsp+0x20]
   14005c179:	add    DWORD PTR [rdi+0x8],r8d
   14005c17d:	and    DWORD PTR [rdi+0x18],0xffffffef
   14005c181:	or     DWORD PTR [rdi+0x18],0x1
   14005c185:	mov    ax,si
   14005c188:	mov    rbp,QWORD PTR [rsp+0x78]
   14005c18d:	mov    rbx,QWORD PTR [rsp+0x70]
   14005c192:	mov    r12,QWORD PTR [rsp+0x40]
   14005c197:	mov    rcx,QWORD PTR [rsp+0x30]
   14005c19c:	xor    rcx,rsp
   14005c19f:	call   0x140046470
   14005c1a4:	add    rsp,0x48
   14005c1a8:	pop    rdi
   14005c1a9:	pop    rsi
   14005c1aa:	ret    
   14005c1ab:	mov    rax,QWORD PTR [rdi+0x10]
   14005c1af:	add    rax,0x2
   14005c1b3:	cmp    QWORD PTR [rdi],rax
   14005c1b6:	jae    0x14005c1c7
   14005c1b8:	cmp    DWORD PTR [rdi+0x8],0x0
   14005c1bc:	jne    0x14005c1e0
   14005c1be:	cmp    DWORD PTR [rdi+0x24],0x2
   14005c1c2:	jb     0x14005c1e0
   14005c1c4:	mov    QWORD PTR [rdi],rax
   14005c1c7:	test   BYTE PTR [rdi+0x18],0x40
   14005c1cb:	je     0x14005c1e6
   14005c1cd:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14005c1d1:	mov    rax,QWORD PTR [rdi]
   14005c1d4:	cmp    WORD PTR [rax],si
   14005c1d7:	je     0x14005c1f0
   14005c1d9:	add    rax,0x2
   14005c1dd:	mov    QWORD PTR [rdi],rax
   14005c1e0:	or     ax,0xffff
   14005c1e4:	jmp    0x14005c188
   14005c1e6:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14005c1ea:	mov    rax,QWORD PTR [rdi]
   14005c1ed:	mov    WORD PTR [rax],si
   14005c1f0:	add    DWORD PTR [rdi+0x8],0x2
   14005c1f4:	and    DWORD PTR [rdi+0x18],0xffffffef
   14005c1f8:	or     DWORD PTR [rdi+0x18],0x1
   14005c1fc:	mov    ax,si
   14005c1ff:	jmp    0x14005c188
   14005c201:	or     ax,0xffff
   14005c205:	jmp    0x14005c197
   14005c207:	int3   
   14005c208:	int3   
   14005c209:	int3   
   14005c20a:	int3   
   14005c20b:	int3   
   14005c20c:	int3   
   14005c20d:	int3   
   14005c20e:	int3   
   14005c20f:	int3   
   14005c210:	rex push rbp
   14005c212:	push   rsi
   14005c213:	push   r12
   14005c215:	push   r14
   14005c217:	sub    rsp,0xa8
   14005c21e:	mov    rax,QWORD PTR [rip+0x2ab4b]        # 0x140086d70
   14005c225:	xor    rax,rsp
   14005c228:	mov    QWORD PTR [rsp+0x70],rax
   14005c22d:	xor    ebp,ebp
   14005c22f:	test   rcx,rcx
   14005c232:	mov    r12,r8
   14005c235:	mov    rsi,rdx
   14005c238:	mov    r14,rcx
   14005c23b:	mov    DWORD PTR [rsp+0x40],ebp
   14005c23f:	je     0x14005c24d
   14005c241:	test   r8,r8
   14005c244:	jne    0x14005c24d
   14005c246:	xor    eax,eax
   14005c248:	jmp    0x14005c5e7
   14005c24d:	test   rdx,rdx
   14005c250:	jne    0x14005c27a
   14005c252:	call   0x140048680
   14005c257:	xor    r9d,r9d
   14005c25a:	xor    r8d,r8d
   14005c25d:	xor    edx,edx
   14005c25f:	xor    ecx,ecx
   14005c261:	mov    QWORD PTR [rsp+0x20],rbp
   14005c266:	mov    DWORD PTR [rax],0x16
   14005c26c:	call   0x14004e100
   14005c271:	or     rax,0xffffffffffffffff
   14005c275:	jmp    0x14005c5e7
   14005c27a:	cmp    r8,0x7fffffff
   14005c281:	ja     0x14005c252
   14005c283:	mov    QWORD PTR [rsp+0xa0],rbx
   14005c28b:	mov    QWORD PTR [rsp+0x98],rdi
   14005c293:	mov    QWORD PTR [rsp+0x90],r13
   14005c29b:	xor    r13b,r13b
   14005c29e:	test   r9,r9
   14005c2a1:	mov    QWORD PTR [rsp+0x88],r15
   14005c2a9:	mov    BYTE PTR [rsp+0x60],r13b
   14005c2ae:	jne    0x14005c31a
   14005c2b0:	call   0x14004bd60
   14005c2b5:	mov    rbx,rax
   14005c2b8:	mov    r15,QWORD PTR [rax+0xc0]
   14005c2bf:	mov    rdi,QWORD PTR [rax+0xb8]
   14005c2c6:	cmp    r15,QWORD PTR [rip+0x2b5d3]        # 0x1400878a0
   14005c2cd:	je     0x14005c2e5
   14005c2cf:	mov    eax,DWORD PTR [rax+0xc8]
   14005c2d5:	test   DWORD PTR [rip+0x2b44d],eax        # 0x140087728
   14005c2db:	jne    0x14005c2e5
   14005c2dd:	call   0x14004f030
   14005c2e2:	mov    r15,rax
   14005c2e5:	cmp    rdi,QWORD PTR [rip+0x2b334]        # 0x140087620
   14005c2ec:	je     0x14005c301
   14005c2ee:	mov    eax,DWORD PTR [rbx+0xc8]
   14005c2f4:	test   DWORD PTR [rip+0x2b42e],eax        # 0x140087728
   14005c2fa:	jne    0x14005c301
   14005c2fc:	call   0x14004e4e0
   14005c301:	mov    ecx,DWORD PTR [rbx+0xc8]
   14005c307:	test   cl,0x2
   14005c30a:	jne    0x14005c33d
   14005c30c:	or     ecx,0x2
   14005c30f:	mov    r13b,0x1
   14005c312:	mov    DWORD PTR [rbx+0xc8],ecx
   14005c318:	jmp    0x14005c33d
   14005c31a:	mov    rax,QWORD PTR [r9]
   14005c31d:	lea    rcx,[rsp+0x48]
   14005c322:	mov    QWORD PTR [rcx],rax
   14005c325:	mov    rax,QWORD PTR [r9+0x8]
   14005c329:	mov    QWORD PTR [rcx+0x8],rax
   14005c32d:	movzx  r13d,BYTE PTR [rsp+0x60]
   14005c333:	mov    rbx,QWORD PTR [rsp+0x58]
   14005c338:	mov    r15,QWORD PTR [rsp+0x48]
   14005c33d:	test   r14,r14
   14005c340:	je     0x14005c53b
   14005c346:	cmp    DWORD PTR [r15+0x14],ebp
   14005c34a:	jne    0x14005c38d
   14005c34c:	test   r12,r12
   14005c34f:	je     0x14005c379
   14005c351:	cmp    WORD PTR [rsi],0xff
   14005c356:	ja     0x14005c52b
   14005c35c:	movzx  eax,BYTE PTR [rsi]
   14005c35f:	add    rsi,0x2
   14005c363:	mov    BYTE PTR [r14+rbp*1],al
   14005c367:	movzx  eax,WORD PTR [rsi-0x2]
   14005c36b:	test   ax,ax
   14005c36e:	je     0x14005c379
   14005c370:	add    rbp,0x1
   14005c374:	cmp    rbp,r12
   14005c377:	jb     0x14005c351
   14005c379:	test   r13b,r13b
   14005c37c:	je     0x14005c385
   14005c37e:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c385:	mov    rax,rbp
   14005c388:	jmp    0x14005c5c7
   14005c38d:	cmp    DWORD PTR [r15+0x10c],0x1
   14005c395:	jne    0x14005c422
   14005c39b:	test   r12,r12
   14005c39e:	je     0x14005c3ce
   14005c3a0:	mov    rax,rsi
   14005c3a3:	mov    rcx,r12
   14005c3a6:	cmp    WORD PTR [rax],bp
   14005c3a9:	je     0x14005c3b7
   14005c3ab:	add    rax,0x2
   14005c3af:	sub    rcx,0x1
   14005c3b3:	jne    0x14005c3a6
   14005c3b5:	jmp    0x14005c3ce
   14005c3b7:	test   rcx,rcx
   14005c3ba:	je     0x14005c3ce
   14005c3bc:	cmp    WORD PTR [rax],bp
   14005c3bf:	jne    0x14005c3ce
   14005c3c1:	mov    r12,rax
   14005c3c4:	sub    r12,rsi
   14005c3c7:	sar    r12,1
   14005c3ca:	add    r12,0x1
   14005c3ce:	mov    ecx,DWORD PTR [r15+0x4]
   14005c3d2:	lea    rax,[rsp+0x40]
   14005c3d7:	mov    r9d,r12d
   14005c3da:	mov    QWORD PTR [rsp+0x38],rax
   14005c3df:	mov    QWORD PTR [rsp+0x30],rbp
   14005c3e4:	mov    r8,rsi
   14005c3e7:	xor    edx,edx
   14005c3e9:	mov    DWORD PTR [rsp+0x28],r12d
   14005c3ee:	mov    QWORD PTR [rsp+0x20],r14
   14005c3f3:	call   QWORD PTR [rip+0x80f7]        # 0x1400644f0
   14005c3f9:	cdqe   
   14005c3fb:	test   rax,rax
   14005c3fe:	je     0x14005c52b
   14005c404:	cmp    DWORD PTR [rsp+0x40],ebp
   14005c408:	jne    0x14005c52b
   14005c40e:	cmp    BYTE PTR [r14+rax*1-0x1],bpl
   14005c413:	jne    0x14005c59e
   14005c419:	sub    rax,0x1
   14005c41d:	jmp    0x14005c59e
   14005c422:	mov    ecx,DWORD PTR [r15+0x4]
   14005c426:	lea    rax,[rsp+0x40]
   14005c42b:	or     r9d,0xffffffff
   14005c42f:	mov    QWORD PTR [rsp+0x38],rax
   14005c434:	mov    QWORD PTR [rsp+0x30],rbp
   14005c439:	mov    r8,rsi
   14005c43c:	xor    edx,edx
   14005c43e:	mov    DWORD PTR [rsp+0x28],r12d
   14005c443:	mov    QWORD PTR [rsp+0x20],r14
   14005c448:	call   QWORD PTR [rip+0x80a2]        # 0x1400644f0
   14005c44e:	test   eax,eax
   14005c450:	movsxd rdi,eax
   14005c453:	je     0x14005c468
   14005c455:	cmp    DWORD PTR [rsp+0x40],ebp
   14005c459:	jne    0x14005c52b
   14005c45f:	lea    rax,[rdi-0x1]
   14005c463:	jmp    0x14005c59e
   14005c468:	cmp    DWORD PTR [rsp+0x40],ebp
   14005c46c:	jne    0x14005c52b
   14005c472:	call   QWORD PTR [rip+0x8188]        # 0x140064600
   14005c478:	cmp    eax,0x7a
   14005c47b:	jne    0x14005c52b
   14005c481:	cmp    rdi,r12
   14005c484:	jae    0x14005c517
   14005c48a:	data16 xchg ax,ax
   14005c48d:	data16 xchg ax,ax
   14005c490:	mov    ecx,DWORD PTR [r15+0x4]
   14005c494:	lea    rax,[rsp+0x40]
   14005c499:	mov    r9d,0x1
   14005c49f:	mov    QWORD PTR [rsp+0x38],rax
   14005c4a4:	mov    eax,DWORD PTR [r15+0x10c]
   14005c4ab:	mov    QWORD PTR [rsp+0x30],rbp
   14005c4b0:	mov    DWORD PTR [rsp+0x28],eax
   14005c4b4:	lea    rax,[rsp+0x68]
   14005c4b9:	mov    r8,rsi
   14005c4bc:	xor    edx,edx
   14005c4be:	mov    QWORD PTR [rsp+0x20],rax
   14005c4c3:	call   QWORD PTR [rip+0x8027]        # 0x1400644f0
   14005c4c9:	test   eax,eax
   14005c4cb:	je     0x14005c52b
   14005c4cd:	cmp    DWORD PTR [rsp+0x40],ebp
   14005c4d1:	jne    0x14005c52b
   14005c4d3:	test   eax,eax
   14005c4d5:	js     0x14005c52b
   14005c4d7:	cmp    eax,0x5
   14005c4da:	ja     0x14005c52b
   14005c4dc:	movsxd rdx,eax
   14005c4df:	lea    rax,[rdx+rdi*1]
   14005c4e3:	cmp    rax,r12
   14005c4e6:	ja     0x14005c517
   14005c4e8:	test   rdx,rdx
   14005c4eb:	mov    rcx,rbp
   14005c4ee:	jle    0x14005c50a
   14005c4f0:	movzx  eax,BYTE PTR [rsp+rcx*1+0x68]
   14005c4f5:	test   al,al
   14005c4f7:	mov    BYTE PTR [r14+rdi*1],al
   14005c4fb:	je     0x14005c517
   14005c4fd:	add    rcx,0x1
   14005c501:	add    rdi,0x1
   14005c505:	cmp    rcx,rdx
   14005c508:	jl     0x14005c4f0
   14005c50a:	add    rsi,0x2
   14005c50e:	cmp    rdi,r12
   14005c511:	jb     0x14005c490
   14005c517:	test   r13b,r13b
   14005c51a:	je     0x14005c523
   14005c51c:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c523:	mov    rax,rdi
   14005c526:	jmp    0x14005c5c7
   14005c52b:	call   0x140048680
   14005c530:	test   r13b,r13b
   14005c533:	mov    DWORD PTR [rax],0x2a
   14005c539:	jmp    0x14005c5ba
   14005c53b:	cmp    DWORD PTR [r15+0x14],ebp
   14005c53f:	jne    0x14005c562
   14005c541:	or     rcx,0xffffffffffffffff
   14005c545:	xor    eax,eax
   14005c547:	mov    rdi,rsi
   14005c54a:	repnz scas ax,WORD PTR es:[rdi]
   14005c54d:	test   r13b,r13b
   14005c550:	not    rcx
   14005c553:	je     0x14005c55c
   14005c555:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c55c:	lea    rax,[rcx-0x1]
   14005c560:	jmp    0x14005c5c7
   14005c562:	mov    ecx,DWORD PTR [r15+0x4]
   14005c566:	lea    rax,[rsp+0x40]
   14005c56b:	or     r9d,0xffffffff
   14005c56f:	mov    QWORD PTR [rsp+0x38],rax
   14005c574:	mov    QWORD PTR [rsp+0x30],rbp
   14005c579:	mov    r8,rsi
   14005c57c:	xor    edx,edx
   14005c57e:	mov    DWORD PTR [rsp+0x28],ebp
   14005c582:	mov    QWORD PTR [rsp+0x20],rbp
   14005c587:	call   QWORD PTR [rip+0x7f63]        # 0x1400644f0
   14005c58d:	cdqe   
   14005c58f:	test   rax,rax
   14005c592:	je     0x14005c5ac
   14005c594:	cmp    DWORD PTR [rsp+0x40],ebp
   14005c598:	jne    0x14005c5ac
   14005c59a:	add    rax,0xffffffffffffffff
   14005c59e:	test   r13b,r13b
   14005c5a1:	je     0x14005c5c7
   14005c5a3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c5aa:	jmp    0x14005c5c7
   14005c5ac:	call   0x140048680
   14005c5b1:	test   r13b,r13b
   14005c5b4:	mov    DWORD PTR [rax],0x2a
   14005c5ba:	je     0x14005c5c3
   14005c5bc:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c5c3:	or     rax,0xffffffffffffffff
   14005c5c7:	mov    r13,QWORD PTR [rsp+0x90]
   14005c5cf:	mov    rdi,QWORD PTR [rsp+0x98]
   14005c5d7:	mov    rbx,QWORD PTR [rsp+0xa0]
   14005c5df:	mov    r15,QWORD PTR [rsp+0x88]
   14005c5e7:	mov    rcx,QWORD PTR [rsp+0x70]
   14005c5ec:	xor    rcx,rsp
   14005c5ef:	call   0x140046470
   14005c5f4:	add    rsp,0xa8
   14005c5fb:	pop    r14
   14005c5fd:	pop    r12
   14005c5ff:	pop    rsi
   14005c600:	pop    rbp
   14005c601:	ret    
   14005c602:	int3   
   14005c603:	int3   
   14005c604:	int3   
   14005c605:	int3   
   14005c606:	int3   
   14005c607:	int3   
   14005c608:	int3   
   14005c609:	int3   
   14005c60a:	int3   
   14005c60b:	int3   
   14005c60c:	int3   
   14005c60d:	int3   
   14005c60e:	int3   
   14005c60f:	int3   
   14005c610:	mov    QWORD PTR [rsp+0x8],rbx
   14005c615:	mov    QWORD PTR [rsp+0x10],rbp
   14005c61a:	mov    QWORD PTR [rsp+0x18],rsi
   14005c61f:	push   rdi
   14005c620:	sub    rsp,0x30
   14005c624:	xor    esi,esi
   14005c626:	test   rdx,rdx
   14005c629:	mov    rax,r9
   14005c62c:	mov    rdi,r8
   14005c62f:	mov    rbx,rdx
   14005c632:	mov    rbp,rcx
   14005c635:	je     0x14005c67d
   14005c637:	test   r8,r8
   14005c63a:	je     0x14005c682
   14005c63c:	mov    BYTE PTR [rdx],sil
   14005c63f:	test   rcx,rcx
   14005c642:	je     0x14005c647
   14005c644:	mov    QWORD PTR [rcx],rsi
   14005c647:	mov    r8,QWORD PTR [rsp+0x60]
   14005c64c:	mov    r9,QWORD PTR [rsp+0x68]
   14005c651:	mov    rdx,rax
   14005c654:	cmp    r8,rdi
   14005c657:	mov    rcx,rbx
   14005c65a:	cmova  r8,rdi
   14005c65e:	call   0x14005c210
   14005c663:	cmp    rax,0xffffffffffffffff
   14005c667:	jne    0x14005c6a8
   14005c669:	test   rbx,rbx
   14005c66c:	je     0x14005c671
   14005c66e:	mov    BYTE PTR [rbx],sil
   14005c671:	call   0x140048680
   14005c676:	mov    eax,DWORD PTR [rax]
   14005c678:	jmp    0x14005c704
   14005c67d:	test   r8,r8
   14005c680:	je     0x14005c63f
   14005c682:	call   0x140048680
   14005c687:	xor    r9d,r9d
   14005c68a:	xor    r8d,r8d
   14005c68d:	xor    edx,edx
   14005c68f:	xor    ecx,ecx
   14005c691:	mov    QWORD PTR [rsp+0x20],rsi
   14005c696:	mov    DWORD PTR [rax],0x16
   14005c69c:	call   0x14004e100
   14005c6a1:	mov    eax,0x16
   14005c6a6:	jmp    0x14005c704
   14005c6a8:	add    rax,0x1
   14005c6ac:	test   rbx,rbx
   14005c6af:	je     0x14005c6f9
   14005c6b1:	cmp    rax,rdi
   14005c6b4:	jbe    0x14005c6f4
   14005c6b6:	cmp    QWORD PTR [rsp+0x60],0xffffffffffffffff
   14005c6bc:	je     0x14005c6ec
   14005c6be:	cmp    rdi,rax
   14005c6c1:	mov    BYTE PTR [rbx],sil
   14005c6c4:	ja     0x14005c6ec
   14005c6c6:	call   0x140048680
   14005c6cb:	xor    r9d,r9d
   14005c6ce:	xor    r8d,r8d
   14005c6d1:	xor    edx,edx
   14005c6d3:	xor    ecx,ecx
   14005c6d5:	mov    QWORD PTR [rsp+0x20],rsi
   14005c6da:	mov    DWORD PTR [rax],0x22
   14005c6e0:	call   0x14004e100
   14005c6e5:	mov    eax,0x22
   14005c6ea:	jmp    0x14005c704
   14005c6ec:	mov    rax,rdi
   14005c6ef:	mov    esi,0x50
   14005c6f4:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14005c6f9:	test   rbp,rbp
   14005c6fc:	je     0x14005c702
   14005c6fe:	mov    QWORD PTR [rbp+0x0],rax
   14005c702:	mov    eax,esi
   14005c704:	mov    rbx,QWORD PTR [rsp+0x40]
   14005c709:	mov    rbp,QWORD PTR [rsp+0x48]
   14005c70e:	mov    rsi,QWORD PTR [rsp+0x50]
   14005c713:	add    rsp,0x30
   14005c717:	pop    rdi
   14005c718:	ret    
   14005c719:	int3   
   14005c71a:	int3   
   14005c71b:	int3   
   14005c71c:	int3   
   14005c71d:	int3   
   14005c71e:	int3   
   14005c71f:	int3   
   14005c720:	sub    rsp,0x38
   14005c724:	mov    rax,QWORD PTR [rsp+0x60]
   14005c729:	mov    QWORD PTR [rsp+0x28],0x0
   14005c732:	mov    QWORD PTR [rsp+0x20],rax
   14005c737:	call   0x14005c610
   14005c73c:	add    rsp,0x38
   14005c740:	ret    
   14005c741:	int3   
   14005c742:	int3   
   14005c743:	int3   
   14005c744:	int3   
   14005c745:	int3   
   14005c746:	int3   
   14005c747:	int3   
   14005c748:	int3   
   14005c749:	int3   
   14005c74a:	int3   
   14005c74b:	int3   
   14005c74c:	int3   
   14005c74d:	int3   
   14005c74e:	int3   
   14005c74f:	int3   
   14005c750:	mov    WORD PTR [rsp+0x20],r9w
   14005c756:	push   rsi
   14005c757:	push   rdi
   14005c758:	push   r12
   14005c75a:	push   r13
   14005c75c:	sub    rsp,0x68
   14005c760:	test   rdx,rdx
   14005c763:	mov    rsi,r8
   14005c766:	mov    r13,rdx
   14005c769:	mov    rdi,rcx
   14005c76c:	jne    0x14005c78b
   14005c76e:	test   r8,r8
   14005c771:	je     0x14005c78b
   14005c773:	test   rcx,rcx
   14005c776:	je     0x14005c77e
   14005c778:	xor    r12d,r12d
   14005c77b:	mov    DWORD PTR [rcx],r12d
   14005c77e:	xor    eax,eax
   14005c780:	add    rsp,0x68
   14005c784:	pop    r13
   14005c786:	pop    r12
   14005c788:	pop    rdi
   14005c789:	pop    rsi
   14005c78a:	ret    
   14005c78b:	test   rcx,rcx
   14005c78e:	je     0x14005c796
   14005c790:	mov    DWORD PTR [rcx],0xffffffff
   14005c796:	cmp    r8,0x7fffffff
   14005c79d:	jbe    0x14005c7d1
   14005c79f:	call   0x140048680
   14005c7a4:	xor    r12d,r12d
   14005c7a7:	xor    r9d,r9d
   14005c7aa:	xor    r8d,r8d
   14005c7ad:	xor    edx,edx
   14005c7af:	xor    ecx,ecx
   14005c7b1:	mov    DWORD PTR [rax],0x16
   14005c7b7:	mov    QWORD PTR [rsp+0x20],r12
   14005c7bc:	call   0x14004e100
   14005c7c1:	lea    eax,[r12+0x16]
   14005c7c6:	add    rsp,0x68
   14005c7ca:	pop    r13
   14005c7cc:	pop    r12
   14005c7ce:	pop    rdi
   14005c7cf:	pop    rsi
   14005c7d0:	ret    
   14005c7d1:	mov    rcx,QWORD PTR [rsp+0xb0]
   14005c7d9:	mov    QWORD PTR [rsp+0x90],rbx
   14005c7e1:	mov    QWORD PTR [rsp+0xa0],rbp
   14005c7e9:	xor    bpl,bpl
   14005c7ec:	test   rcx,rcx
   14005c7ef:	mov    QWORD PTR [rsp+0x60],r14
   14005c7f4:	mov    BYTE PTR [rsp+0x58],bpl
   14005c7f9:	jne    0x14005c879
   14005c7fb:	call   0x14004bd60
   14005c800:	mov    rbx,rax
   14005c803:	mov    r14,QWORD PTR [rax+0xc0]
   14005c80a:	mov    r12,QWORD PTR [rax+0xb8]
   14005c811:	cmp    r14,QWORD PTR [rip+0x2b088]        # 0x1400878a0
   14005c818:	je     0x14005c830
   14005c81a:	mov    ecx,DWORD PTR [rax+0xc8]
   14005c820:	test   DWORD PTR [rip+0x2af02],ecx        # 0x140087728
   14005c826:	jne    0x14005c830
   14005c828:	call   0x14004f030
   14005c82d:	mov    r14,rax
   14005c830:	cmp    r12,QWORD PTR [rip+0x2ade9]        # 0x140087620
   14005c837:	je     0x14005c84c
   14005c839:	mov    ecx,DWORD PTR [rbx+0xc8]
   14005c83f:	test   DWORD PTR [rip+0x2aee3],ecx        # 0x140087728
   14005c845:	jne    0x14005c84c
   14005c847:	call   0x14004e4e0
   14005c84c:	mov    ecx,DWORD PTR [rbx+0xc8]
   14005c852:	test   cl,0x2
   14005c855:	jne    0x14005c86e
   14005c857:	or     ecx,0x2
   14005c85a:	mov    bpl,0x1
   14005c85d:	mov    DWORD PTR [rbx+0xc8],ecx
   14005c863:	movzx  r9d,WORD PTR [rsp+0xa8]
   14005c86c:	jmp    0x14005c89b
   14005c86e:	mov    r9w,WORD PTR [rsp+0xa8]
   14005c877:	jmp    0x14005c89b
   14005c879:	mov    rax,QWORD PTR [rcx]
   14005c87c:	lea    rdx,[rsp+0x40]
   14005c881:	mov    QWORD PTR [rdx],rax
   14005c884:	mov    rax,QWORD PTR [rcx+0x8]
   14005c888:	mov    QWORD PTR [rdx+0x8],rax
   14005c88c:	movzx  ebp,BYTE PTR [rsp+0x58]
   14005c891:	mov    rbx,QWORD PTR [rsp+0x50]
   14005c896:	mov    r14,QWORD PTR [rsp+0x40]
   14005c89b:	cmp    DWORD PTR [r14+0x14],0x0
   14005c8a0:	jne    0x14005c909
   14005c8a2:	cmp    r9w,0xff
   14005c8a8:	jbe    0x14005c8db
   14005c8aa:	test   r13,r13
   14005c8ad:	je     0x14005c8c1
   14005c8af:	test   rsi,rsi
   14005c8b2:	je     0x14005c8c1
   14005c8b4:	mov    r8,rsi
   14005c8b7:	xor    edx,edx
   14005c8b9:	mov    rcx,r13
   14005c8bc:	call   0x140047720
   14005c8c1:	call   0x140048680
   14005c8c6:	mov    DWORD PTR [rax],0x2a
   14005c8cc:	call   0x140048680
   14005c8d1:	test   bpl,bpl
   14005c8d4:	mov    eax,DWORD PTR [rax]
   14005c8d6:	jmp    0x14005c9d6
   14005c8db:	test   r13,r13
   14005c8de:	je     0x14005c8fc
   14005c8e0:	test   rsi,rsi
   14005c8e3:	jne    0x14005c8f8
   14005c8e5:	call   0x140048680
   14005c8ea:	xor    r12d,r12d
   14005c8ed:	mov    DWORD PTR [rax],0x22
   14005c8f3:	jmp    0x14005c99a
   14005c8f8:	mov    BYTE PTR [r13+0x0],r9b
   14005c8fc:	test   rdi,rdi
   14005c8ff:	je     0x14005c95d
   14005c901:	mov    DWORD PTR [rdi],0x1
   14005c907:	jmp    0x14005c95d
   14005c909:	mov    ecx,DWORD PTR [r14+0x4]
   14005c90d:	xor    r12d,r12d
   14005c910:	lea    rax,[rsp+0x98]
   14005c918:	mov    QWORD PTR [rsp+0x38],rax
   14005c91d:	mov    QWORD PTR [rsp+0x30],r12
   14005c922:	lea    r8,[rsp+0xa8]
   14005c92a:	lea    r9d,[r12+0x1]
   14005c92f:	xor    edx,edx
   14005c931:	mov    DWORD PTR [rsp+0x28],esi
   14005c935:	mov    QWORD PTR [rsp+0x20],r13
   14005c93a:	mov    DWORD PTR [rsp+0x98],r12d
   14005c942:	call   QWORD PTR [rip+0x7ba8]        # 0x1400644f0
   14005c948:	test   eax,eax
   14005c94a:	je     0x14005c96d
   14005c94c:	cmp    DWORD PTR [rsp+0x98],r12d
   14005c954:	jne    0x14005c9c1
   14005c956:	test   rdi,rdi
   14005c959:	je     0x14005c95d
   14005c95b:	mov    DWORD PTR [rdi],eax
   14005c95d:	test   bpl,bpl
   14005c960:	je     0x14005c969
   14005c962:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c969:	xor    eax,eax
   14005c96b:	jmp    0x14005c9df
   14005c96d:	call   QWORD PTR [rip+0x7c8d]        # 0x140064600
   14005c973:	cmp    eax,0x7a
   14005c976:	jne    0x14005c9c1
   14005c978:	test   r13,r13
   14005c97b:	je     0x14005c98f
   14005c97d:	test   rsi,rsi
   14005c980:	je     0x14005c98f
   14005c982:	mov    r8,rsi
   14005c985:	xor    edx,edx
   14005c987:	mov    rcx,r13
   14005c98a:	call   0x140047720
   14005c98f:	call   0x140048680
   14005c994:	mov    DWORD PTR [rax],0x22
   14005c99a:	xor    r9d,r9d
   14005c99d:	xor    r8d,r8d
   14005c9a0:	xor    edx,edx
   14005c9a2:	xor    ecx,ecx
   14005c9a4:	mov    QWORD PTR [rsp+0x20],r12
   14005c9a9:	call   0x14004e100
   14005c9ae:	test   bpl,bpl
   14005c9b1:	je     0x14005c9ba
   14005c9b3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c9ba:	mov    eax,0x22
   14005c9bf:	jmp    0x14005c9df
   14005c9c1:	call   0x140048680
   14005c9c6:	mov    DWORD PTR [rax],0x2a
   14005c9cc:	call   0x140048680
   14005c9d1:	test   bpl,bpl
   14005c9d4:	mov    eax,DWORD PTR [rax]
   14005c9d6:	je     0x14005c9df
   14005c9d8:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14005c9df:	mov    rbp,QWORD PTR [rsp+0xa0]
   14005c9e7:	mov    rbx,QWORD PTR [rsp+0x90]
   14005c9ef:	mov    r14,QWORD PTR [rsp+0x60]
   14005c9f4:	add    rsp,0x68
   14005c9f8:	pop    r13
   14005c9fa:	pop    r12
   14005c9fc:	pop    rdi
   14005c9fd:	pop    rsi
   14005c9fe:	ret    
   14005c9ff:	int3   
   14005ca00:	sub    rsp,0x38
   14005ca04:	mov    QWORD PTR [rsp+0x20],0x0
   14005ca0d:	call   0x14005c750
   14005ca12:	add    rsp,0x38
   14005ca16:	ret    
   14005ca17:	int3   
   14005ca18:	int3   
   14005ca19:	int3   
   14005ca1a:	int3   
   14005ca1b:	int3   
   14005ca1c:	int3   
   14005ca1d:	int3   
   14005ca1e:	int3   
   14005ca1f:	int3   
   14005ca20:	xor    edx,edx
   14005ca22:	lea    r8d,[rdx+0xa]
   14005ca26:	jmp    0x14005ddc0
   14005ca2b:	int3   
   14005ca2c:	int3   
   14005ca2d:	int3   
   14005ca2e:	int3   
   14005ca2f:	int3   
   14005ca30:	mov    QWORD PTR [rsp+0x18],rbx
   14005ca35:	push   rbp
   14005ca36:	sub    rsp,0x20
   14005ca3a:	cmp    DWORD PTR [rip+0x31ebf],0x0        # 0x14008e900
   14005ca41:	mov    rbx,QWORD PTR [rip+0x2fc10]        # 0x14008c658
   14005ca48:	mov    rbp,rcx
   14005ca4b:	jne    0x14005ca5a
   14005ca4d:	xor    eax,eax
   14005ca4f:	mov    rbx,QWORD PTR [rsp+0x40]
   14005ca54:	add    rsp,0x20
   14005ca58:	pop    rbp
   14005ca59:	ret    
   14005ca5a:	test   rbx,rbx
   14005ca5d:	mov    QWORD PTR [rsp+0x30],rsi
   14005ca62:	mov    QWORD PTR [rsp+0x38],rdi
   14005ca67:	jne    0x14005ca87
   14005ca69:	cmp    QWORD PTR [rip+0x2fbf8],rbx        # 0x14008c668
   14005ca70:	je     0x14005caed
   14005ca72:	call   0x14005f1f0
   14005ca77:	test   eax,eax
   14005ca79:	jne    0x14005caed
   14005ca7b:	mov    rbx,QWORD PTR [rip+0x2fbd6]        # 0x14008c658
   14005ca82:	test   rbx,rbx
   14005ca85:	je     0x14005caed
   14005ca87:	test   rbp,rbp
   14005ca8a:	je     0x14005caed
   14005ca8c:	mov    r9,QWORD PTR [rbx]
   14005ca8f:	or     rcx,0xffffffffffffffff
   14005ca93:	xor    eax,eax
   14005ca95:	mov    rdi,rbp
   14005ca98:	repnz scas al,BYTE PTR es:[rdi]
   14005ca9a:	test   r9,r9
   14005ca9d:	not    rcx
   14005caa0:	lea    rsi,[rcx-0x1]
   14005caa4:	je     0x14005caed
   14005caa6:	data16 data16 xchg ax,ax
   14005caaa:	data16 xchg ax,ax
   14005caad:	data16 xchg ax,ax
   14005cab0:	or     rcx,0xffffffffffffffff
   14005cab4:	xor    eax,eax
   14005cab6:	mov    rdi,r9
   14005cab9:	repnz scas al,BYTE PTR es:[rdi]
   14005cabb:	not    rcx
   14005cabe:	sub    rcx,0x1
   14005cac2:	cmp    rcx,rsi
   14005cac5:	jbe    0x14005cae0
   14005cac7:	cmp    BYTE PTR [r9+rsi*1],0x3d
   14005cacc:	jne    0x14005cae0
   14005cace:	mov    r8,rsi
   14005cad1:	mov    rdx,rbp
   14005cad4:	mov    rcx,r9
   14005cad7:	call   0x14005f1e0
   14005cadc:	test   eax,eax
   14005cade:	je     0x14005cb04
   14005cae0:	mov    r9,QWORD PTR [rbx+0x8]
   14005cae4:	add    rbx,0x8
   14005cae8:	test   r9,r9
   14005caeb:	jne    0x14005cab0
   14005caed:	xor    eax,eax
   14005caef:	mov    rsi,QWORD PTR [rsp+0x30]
   14005caf4:	mov    rdi,QWORD PTR [rsp+0x38]
   14005caf9:	mov    rbx,QWORD PTR [rsp+0x40]
   14005cafe:	add    rsp,0x20
   14005cb02:	pop    rbp
   14005cb03:	ret    
   14005cb04:	mov    rax,QWORD PTR [rbx]
   14005cb07:	lea    rax,[rax+rsi*1+0x1]
   14005cb0c:	jmp    0x14005caef
   14005cb0e:	int3   
   14005cb0f:	int3   
   14005cb10:	mov    r11,rsp
   14005cb13:	mov    QWORD PTR [r11+0x20],rbx
   14005cb17:	push   rdi
   14005cb18:	sub    rsp,0x140
   14005cb1f:	mov    rax,QWORD PTR [rip+0x2a24a]        # 0x140086d70
   14005cb26:	xor    rax,rsp
   14005cb29:	mov    QWORD PTR [rsp+0x130],rax
   14005cb31:	mov    QWORD PTR [r11+0x8],rbp
   14005cb35:	lea    rdx,[rsp+0x20]
   14005cb3a:	xor    ebx,ebx
   14005cb3c:	mov    ecx,0x105
   14005cb41:	mov    QWORD PTR [r11+0x10],rsi
   14005cb45:	lea    rdi,[rsp+0x20]
   14005cb4a:	mov    ebp,ebx
   14005cb4c:	call   QWORD PTR [rip+0x7866]        # 0x1400643b8
   14005cb52:	cmp    eax,0x104
   14005cb57:	mov    esi,eax
   14005cb59:	jle    0x14005cba8
   14005cb5b:	mov    QWORD PTR [rsp+0x160],r12
   14005cb63:	lea    r12d,[rax+0x1]
   14005cb67:	lea    edx,[rbx+0x1]
   14005cb6a:	movsxd rcx,r12d
   14005cb6d:	call   0x14004de90
   14005cb72:	test   rax,rax
   14005cb75:	mov    rdi,rax
   14005cb78:	jne    0x14005cb89
   14005cb7a:	call   0x140048680
   14005cb7f:	mov    esi,ebx
   14005cb81:	mov    DWORD PTR [rax],0xc
   14005cb87:	jmp    0x14005cba0
   14005cb89:	test   esi,esi
   14005cb8b:	mov    ebp,0x1
   14005cb90:	je     0x14005cba0
   14005cb92:	mov    rdx,rax
   14005cb95:	mov    ecx,r12d
   14005cb98:	call   QWORD PTR [rip+0x781a]        # 0x1400643b8
   14005cb9e:	mov    esi,eax
   14005cba0:	mov    r12,QWORD PTR [rsp+0x160]
   14005cba8:	test   esi,esi
   14005cbaa:	mov    rsi,QWORD PTR [rsp+0x158]
   14005cbb2:	je     0x14005cbc7
   14005cbb4:	cmp    BYTE PTR [rdi+0x1],0x3a
   14005cbb8:	jne    0x14005cbd2
   14005cbba:	movzx  ecx,BYTE PTR [rdi]
   14005cbbd:	call   0x14005f570
   14005cbc2:	lea    ebx,[rax-0x40]
   14005cbc5:	jmp    0x14005cbd2
   14005cbc7:	call   0x140048680
   14005cbcc:	mov    DWORD PTR [rax],0xc
   14005cbd2:	test   ebp,ebp
   14005cbd4:	mov    rbp,QWORD PTR [rsp+0x150]
   14005cbdc:	je     0x14005cbe6
   14005cbde:	mov    rcx,rdi
   14005cbe1:	call   0x1400485c0
   14005cbe6:	mov    eax,ebx
   14005cbe8:	mov    rcx,QWORD PTR [rsp+0x130]
   14005cbf0:	xor    rcx,rsp
   14005cbf3:	call   0x140046470
   14005cbf8:	mov    rbx,QWORD PTR [rsp+0x168]
   14005cc00:	add    rsp,0x140
   14005cc07:	pop    rdi
   14005cc08:	ret    
   14005cc09:	int3   
   14005cc0a:	int3   
   14005cc0b:	int3   
   14005cc0c:	int3   
   14005cc0d:	int3   
   14005cc0e:	int3   
   14005cc0f:	int3   
   14005cc10:	sub    rsp,0x28
   14005cc14:	test   ecx,ecx
   14005cc16:	jne    0x14005cc22
   14005cc18:	mov    eax,0x1
   14005cc1d:	add    rsp,0x28
   14005cc21:	ret    
   14005cc22:	add    cl,0x40
   14005cc25:	mov    BYTE PTR [rsp+0x31],0x3a
   14005cc2a:	mov    BYTE PTR [rsp+0x32],0x5c
   14005cc2f:	mov    BYTE PTR [rsp+0x30],cl
   14005cc33:	lea    rcx,[rsp+0x30]
   14005cc38:	mov    BYTE PTR [rsp+0x33],0x0
   14005cc3d:	call   QWORD PTR [rip+0x777d]        # 0x1400643c0
   14005cc43:	test   eax,eax
   14005cc45:	je     0x14005cc4c
   14005cc47:	cmp    eax,0x1
   14005cc4a:	jne    0x14005cc18
   14005cc4c:	xor    eax,eax
   14005cc4e:	add    rsp,0x28
   14005cc52:	ret    
   14005cc53:	int3   
   14005cc54:	int3   
   14005cc55:	int3   
   14005cc56:	int3   
   14005cc57:	int3   
   14005cc58:	int3   
   14005cc59:	int3   
   14005cc5a:	int3   
   14005cc5b:	int3   
   14005cc5c:	int3   
   14005cc5d:	int3   
   14005cc5e:	int3   
   14005cc5f:	int3   
   14005cc60:	mov    r8,rcx
   14005cc63:	movzx  eax,BYTE PTR [rcx]
   14005cc66:	add    rcx,0x1
   14005cc6a:	test   al,al
   14005cc6c:	jne    0x14005cc63
   14005cc6e:	xchg   ax,ax
   14005cc70:	sub    rcx,0x1
   14005cc74:	cmp    rcx,r8
   14005cc77:	je     0x14005cc81
   14005cc79:	cmp    BYTE PTR [rcx],dl
   14005cc7b:	jne    0x14005cc70
   14005cc7d:	mov    rax,rcx
   14005cc80:	ret    
   14005cc81:	cmp    BYTE PTR [rcx],dl
   14005cc83:	jne    0x14005cc89
   14005cc85:	mov    rax,rcx
   14005cc88:	ret    
   14005cc89:	xor    eax,eax
   14005cc8b:	ret    
   14005cc8c:	int3   
   14005cc8d:	int3   
   14005cc8e:	int3   
   14005cc8f:	int3   
   14005cc90:	rex push rbx
   14005cc92:	sub    rsp,0x70
   14005cc96:	test   rdx,rdx
   14005cc99:	movsxd rbx,ecx
   14005cc9c:	mov    BYTE PTR [rsp+0x68],0x0
   14005cca1:	jne    0x14005cd4a
   14005cca7:	call   0x14004bd60
   14005ccac:	mov    QWORD PTR [rsp+0x60],rax
   14005ccb1:	mov    r11,rax
   14005ccb4:	mov    rdx,QWORD PTR [rax+0xc0]
   14005ccbb:	cmp    rdx,QWORD PTR [rip+0x2abde]        # 0x1400878a0
   14005ccc2:	mov    QWORD PTR [rsp+0x50],rdx
   14005ccc7:	mov    rax,QWORD PTR [rax+0xb8]
   14005ccce:	mov    QWORD PTR [rsp+0x58],rax
   14005ccd3:	je     0x14005ccfb
   14005ccd5:	mov    ecx,DWORD PTR [r11+0xc8]
   14005ccdc:	test   DWORD PTR [rip+0x2aa46],ecx        # 0x140087728
   14005cce2:	jne    0x14005ccfb
   14005cce4:	call   0x14004f030
   14005cce9:	mov    r11,QWORD PTR [rsp+0x60]
   14005ccee:	mov    rdx,rax
   14005ccf1:	mov    QWORD PTR [rsp+0x50],rax
   14005ccf6:	mov    rax,QWORD PTR [rsp+0x58]
   14005ccfb:	cmp    rax,QWORD PTR [rip+0x2a91e]        # 0x140087620
   14005cd02:	je     0x14005cd27
   14005cd04:	mov    ecx,DWORD PTR [r11+0xc8]
   14005cd0b:	test   DWORD PTR [rip+0x2aa17],ecx        # 0x140087728
   14005cd11:	jne    0x14005cd27
   14005cd13:	call   0x14004e4e0
   14005cd18:	mov    r11,QWORD PTR [rsp+0x60]
   14005cd1d:	mov    rdx,QWORD PTR [rsp+0x50]
   14005cd22:	mov    QWORD PTR [rsp+0x58],rax
   14005cd27:	test   BYTE PTR [r11+0xc8],0x2
   14005cd2f:	jne    0x14005cd67
   14005cd31:	or     DWORD PTR [r11+0xc8],0x2
   14005cd39:	mov    r11,QWORD PTR [rsp+0x60]
   14005cd3e:	mov    rdx,QWORD PTR [rsp+0x50]
   14005cd43:	mov    BYTE PTR [rsp+0x68],0x1
   14005cd48:	jmp    0x14005cd67
   14005cd4a:	mov    rax,QWORD PTR [rdx]
   14005cd4d:	lea    rcx,[rsp+0x50]
   14005cd52:	mov    QWORD PTR [rcx],rax
   14005cd55:	mov    rax,QWORD PTR [rdx+0x8]
   14005cd59:	mov    QWORD PTR [rcx+0x8],rax
   14005cd5d:	mov    r11,QWORD PTR [rsp+0x60]
   14005cd62:	mov    rdx,QWORD PTR [rsp+0x50]
   14005cd67:	cmp    ebx,0x100
   14005cd6d:	jae    0x14005cde1
   14005cd6f:	cmp    DWORD PTR [rdx+0x10c],0x1
   14005cd76:	jle    0x14005cd95
   14005cd78:	lea    r8,[rsp+0x50]
   14005cd7d:	mov    edx,0x1
   14005cd82:	mov    ecx,ebx
   14005cd84:	call   0x14005ee30
   14005cd89:	mov    r11,QWORD PTR [rsp+0x60]
   14005cd8e:	mov    rdx,QWORD PTR [rsp+0x50]
   14005cd93:	jmp    0x14005cda2
   14005cd95:	mov    rax,QWORD PTR [rdx+0x140]
   14005cd9c:	mov    al,BYTE PTR [rax+rbx*2]
   14005cd9f:	and    eax,0x1
   14005cda2:	test   eax,eax
   14005cda4:	je     0x14005cdca
   14005cda6:	cmp    BYTE PTR [rsp+0x68],0x0
   14005cdab:	mov    rax,QWORD PTR [rdx+0x148]
   14005cdb2:	movzx  eax,BYTE PTR [rax+rbx*1]
   14005cdb6:	je     0x14005cef0
   14005cdbc:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005cdc4:	add    rsp,0x70
   14005cdc8:	pop    rbx
   14005cdc9:	ret    
   14005cdca:	cmp    BYTE PTR [rsp+0x68],0x0
   14005cdcf:	je     0x14005cdd9
   14005cdd1:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005cdd9:	mov    eax,ebx
   14005cddb:	add    rsp,0x70
   14005cddf:	pop    rbx
   14005cde0:	ret    
   14005cde1:	cmp    DWORD PTR [rdx+0x10c],0x1
   14005cde8:	mov    QWORD PTR [rsp+0x90],rdi
   14005cdf0:	jle    0x14005ce27
   14005cdf2:	mov    edi,ebx
   14005cdf4:	lea    rdx,[rsp+0x50]
   14005cdf9:	sar    edi,0x8
   14005cdfc:	movzx  ecx,dil
   14005ce00:	call   0x140049dd0
   14005ce05:	test   eax,eax
   14005ce07:	je     0x14005ce27
   14005ce09:	mov    BYTE PTR [rsp+0x80],dil
   14005ce11:	mov    BYTE PTR [rsp+0x81],bl
   14005ce18:	mov    BYTE PTR [rsp+0x82],0x0
   14005ce20:	mov    edx,0x2
   14005ce25:	jmp    0x14005ce46
   14005ce27:	call   0x140048680
   14005ce2c:	mov    edx,0x1
   14005ce31:	mov    DWORD PTR [rax],0x2a
   14005ce37:	mov    BYTE PTR [rsp+0x80],bl
   14005ce3e:	mov    BYTE PTR [rsp+0x81],0x0
   14005ce46:	mov    rcx,QWORD PTR [rsp+0x50]
   14005ce4b:	mov    DWORD PTR [rsp+0x40],0x1
   14005ce53:	lea    r9,[rsp+0x80]
   14005ce5b:	mov    eax,DWORD PTR [rcx+0x4]
   14005ce5e:	mov    r8d,0x100
   14005ce64:	mov    DWORD PTR [rsp+0x38],eax
   14005ce68:	lea    rax,[rsp+0x88]
   14005ce70:	mov    DWORD PTR [rsp+0x30],0x3
   14005ce78:	mov    QWORD PTR [rsp+0x28],rax
   14005ce7d:	mov    DWORD PTR [rsp+0x20],edx
   14005ce81:	mov    edx,DWORD PTR [rcx+0x14]
   14005ce84:	lea    rcx,[rsp+0x50]
   14005ce89:	call   0x140058200
   14005ce8e:	mov    rdi,QWORD PTR [rsp+0x90]
   14005ce96:	test   eax,eax
   14005ce98:	jne    0x14005ceb4
   14005ce9a:	cmp    BYTE PTR [rsp+0x68],al
   14005ce9e:	je     0x14005ceac
   14005cea0:	mov    rax,QWORD PTR [rsp+0x60]
   14005cea5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005ceac:	mov    eax,ebx
   14005ceae:	add    rsp,0x70
   14005ceb2:	pop    rbx
   14005ceb3:	ret    
   14005ceb4:	cmp    eax,0x1
   14005ceb7:	jne    0x14005cec8
   14005ceb9:	movzx  eax,BYTE PTR [rsp+0x88]
   14005cec1:	cmp    BYTE PTR [rsp+0x68],0x0
   14005cec6:	jmp    0x14005cee2
   14005cec8:	movzx  eax,BYTE PTR [rsp+0x88]
   14005ced0:	movzx  ecx,BYTE PTR [rsp+0x89]
   14005ced8:	shl    eax,0x8
   14005cedb:	or     eax,ecx
   14005cedd:	cmp    BYTE PTR [rsp+0x68],0x0
   14005cee2:	je     0x14005cef0
   14005cee4:	mov    rcx,QWORD PTR [rsp+0x60]
   14005cee9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005cef0:	add    rsp,0x70
   14005cef4:	pop    rbx
   14005cef5:	ret    
   14005cef6:	int3   
   14005cef7:	int3   
   14005cef8:	int3   
   14005cef9:	int3   
   14005cefa:	int3   
   14005cefb:	int3   
   14005cefc:	int3   
   14005cefd:	int3   
   14005cefe:	int3   
   14005ceff:	int3   
   14005cf00:	cmp    DWORD PTR [rip+0x30299],0x0        # 0x14008d1a0
   14005cf07:	jne    0x14005cf17
   14005cf09:	lea    eax,[rcx-0x41]
   14005cf0c:	cmp    eax,0x19
   14005cf0f:	ja     0x14005cf14
   14005cf11:	add    ecx,0x20
   14005cf14:	mov    eax,ecx
   14005cf16:	ret    
   14005cf17:	xor    edx,edx
   14005cf19:	jmp    0x14005cc90
   14005cf1e:	int3   
   14005cf1f:	int3   
   14005cf20:	mov    QWORD PTR [rsp+0x20],rbx
   14005cf25:	push   rdi
   14005cf26:	sub    rsp,0x80
   14005cf2d:	mov    rax,QWORD PTR [rip+0x29e3c]        # 0x140086d70
   14005cf34:	xor    rax,rsp
   14005cf37:	mov    QWORD PTR [rsp+0x78],rax
   14005cf3c:	test   r8,r8
   14005cf3f:	mov    rbx,rdx
   14005cf42:	mov    rdi,rcx
   14005cf45:	mov    BYTE PTR [rsp+0x58],0x0
   14005cf4a:	jne    0x14005cfe1
   14005cf50:	call   0x14004bd60
   14005cf55:	mov    QWORD PTR [rsp+0x50],rax
   14005cf5a:	mov    r11,rax
   14005cf5d:	mov    rcx,QWORD PTR [rax+0xc0]
   14005cf64:	cmp    rcx,QWORD PTR [rip+0x2a935]        # 0x1400878a0
   14005cf6b:	mov    QWORD PTR [rsp+0x40],rcx
   14005cf70:	mov    rax,QWORD PTR [rax+0xb8]
   14005cf77:	mov    QWORD PTR [rsp+0x48],rax
   14005cf7c:	je     0x14005cfa1
   14005cf7e:	mov    ecx,DWORD PTR [r11+0xc8]
   14005cf85:	test   DWORD PTR [rip+0x2a79d],ecx        # 0x140087728
   14005cf8b:	jne    0x14005cfa1
   14005cf8d:	call   0x14004f030
   14005cf92:	mov    r11,QWORD PTR [rsp+0x50]
   14005cf97:	mov    QWORD PTR [rsp+0x40],rax
   14005cf9c:	mov    rax,QWORD PTR [rsp+0x48]
   14005cfa1:	cmp    rax,QWORD PTR [rip+0x2a678]        # 0x140087620
   14005cfa8:	je     0x14005cfc8
   14005cfaa:	mov    eax,DWORD PTR [r11+0xc8]
   14005cfb1:	test   DWORD PTR [rip+0x2a771],eax        # 0x140087728
   14005cfb7:	jne    0x14005cfc8
   14005cfb9:	call   0x14004e4e0
   14005cfbe:	mov    r11,QWORD PTR [rsp+0x50]
   14005cfc3:	mov    QWORD PTR [rsp+0x48],rax
   14005cfc8:	test   BYTE PTR [r11+0xc8],0x2
   14005cfd0:	jne    0x14005cff4
   14005cfd2:	or     DWORD PTR [r11+0xc8],0x2
   14005cfda:	mov    BYTE PTR [rsp+0x58],0x1
   14005cfdf:	jmp    0x14005cff4
   14005cfe1:	mov    rax,QWORD PTR [r8]
   14005cfe4:	lea    rcx,[rsp+0x40]
   14005cfe9:	mov    QWORD PTR [rcx],rax
   14005cfec:	mov    rax,QWORD PTR [r8+0x8]
   14005cff0:	mov    QWORD PTR [rcx+0x8],rax
   14005cff4:	lea    rax,[rsp+0x40]
   14005cff9:	lea    rdx,[rsp+0x60]
   14005cffe:	lea    rcx,[rsp+0x68]
   14005d003:	mov    QWORD PTR [rsp+0x38],rax
   14005d008:	xor    eax,eax
   14005d00a:	xor    r9d,r9d
   14005d00d:	mov    DWORD PTR [rsp+0x30],eax
   14005d011:	mov    DWORD PTR [rsp+0x28],eax
   14005d015:	mov    r8,rbx
   14005d018:	mov    DWORD PTR [rsp+0x20],eax
   14005d01c:	call   0x140060310
   14005d021:	lea    rcx,[rsp+0x68]
   14005d026:	mov    rdx,rdi
   14005d029:	mov    ebx,eax
   14005d02b:	call   0x14005f590
   14005d030:	test   bl,0x3
   14005d033:	jne    0x14005d073
   14005d035:	cmp    eax,0x1
   14005d038:	jne    0x14005d054
   14005d03a:	cmp    BYTE PTR [rsp+0x58],0x0
   14005d03f:	je     0x14005d04d
   14005d041:	mov    rax,QWORD PTR [rsp+0x50]
   14005d046:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d04d:	mov    eax,0x3
   14005d052:	jmp    0x14005d092
   14005d054:	cmp    eax,0x2
   14005d057:	jne    0x14005d07d
   14005d059:	cmp    BYTE PTR [rsp+0x58],0x0
   14005d05e:	je     0x14005d06c
   14005d060:	mov    rax,QWORD PTR [rsp+0x50]
   14005d065:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d06c:	mov    eax,0x4
   14005d071:	jmp    0x14005d092
   14005d073:	test   bl,0x1
   14005d076:	jne    0x14005d059
   14005d078:	test   bl,0x2
   14005d07b:	jne    0x14005d03a
   14005d07d:	cmp    BYTE PTR [rsp+0x58],0x0
   14005d082:	je     0x14005d090
   14005d084:	mov    rax,QWORD PTR [rsp+0x50]
   14005d089:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d090:	xor    eax,eax
   14005d092:	mov    rcx,QWORD PTR [rsp+0x78]
   14005d097:	xor    rcx,rsp
   14005d09a:	call   0x140046470
   14005d09f:	mov    rbx,QWORD PTR [rsp+0xa8]
   14005d0a7:	add    rsp,0x80
   14005d0ae:	pop    rdi
   14005d0af:	ret    
   14005d0b0:	mov    QWORD PTR [rsp+0x20],rbx
   14005d0b5:	push   rdi
   14005d0b6:	sub    rsp,0x80
   14005d0bd:	mov    rax,QWORD PTR [rip+0x29cac]        # 0x140086d70
   14005d0c4:	xor    rax,rsp
   14005d0c7:	mov    QWORD PTR [rsp+0x78],rax
   14005d0cc:	test   r8,r8
   14005d0cf:	mov    rbx,rdx
   14005d0d2:	mov    rdi,rcx
   14005d0d5:	mov    BYTE PTR [rsp+0x58],0x0
   14005d0da:	jne    0x14005d171
   14005d0e0:	call   0x14004bd60
   14005d0e5:	mov    QWORD PTR [rsp+0x50],rax
   14005d0ea:	mov    r11,rax
   14005d0ed:	mov    rcx,QWORD PTR [rax+0xc0]
   14005d0f4:	cmp    rcx,QWORD PTR [rip+0x2a7a5]        # 0x1400878a0
   14005d0fb:	mov    QWORD PTR [rsp+0x40],rcx
   14005d100:	mov    rax,QWORD PTR [rax+0xb8]
   14005d107:	mov    QWORD PTR [rsp+0x48],rax
   14005d10c:	je     0x14005d131
   14005d10e:	mov    ecx,DWORD PTR [r11+0xc8]
   14005d115:	test   DWORD PTR [rip+0x2a60d],ecx        # 0x140087728
   14005d11b:	jne    0x14005d131
   14005d11d:	call   0x14004f030
   14005d122:	mov    r11,QWORD PTR [rsp+0x50]
   14005d127:	mov    QWORD PTR [rsp+0x40],rax
   14005d12c:	mov    rax,QWORD PTR [rsp+0x48]
   14005d131:	cmp    rax,QWORD PTR [rip+0x2a4e8]        # 0x140087620
   14005d138:	je     0x14005d158
   14005d13a:	mov    eax,DWORD PTR [r11+0xc8]
   14005d141:	test   DWORD PTR [rip+0x2a5e1],eax        # 0x140087728
   14005d147:	jne    0x14005d158
   14005d149:	call   0x14004e4e0
   14005d14e:	mov    r11,QWORD PTR [rsp+0x50]
   14005d153:	mov    QWORD PTR [rsp+0x48],rax
   14005d158:	test   BYTE PTR [r11+0xc8],0x2
   14005d160:	jne    0x14005d184
   14005d162:	or     DWORD PTR [r11+0xc8],0x2
   14005d16a:	mov    BYTE PTR [rsp+0x58],0x1
   14005d16f:	jmp    0x14005d184
   14005d171:	mov    rax,QWORD PTR [r8]
   14005d174:	lea    rcx,[rsp+0x40]
   14005d179:	mov    QWORD PTR [rcx],rax
   14005d17c:	mov    rax,QWORD PTR [r8+0x8]
   14005d180:	mov    QWORD PTR [rcx+0x8],rax
   14005d184:	lea    rax,[rsp+0x40]
   14005d189:	lea    rdx,[rsp+0x60]
   14005d18e:	lea    rcx,[rsp+0x68]
   14005d193:	mov    QWORD PTR [rsp+0x38],rax
   14005d198:	xor    eax,eax
   14005d19a:	xor    r9d,r9d
   14005d19d:	mov    DWORD PTR [rsp+0x30],eax
   14005d1a1:	mov    DWORD PTR [rsp+0x28],eax
   14005d1a5:	mov    r8,rbx
   14005d1a8:	mov    DWORD PTR [rsp+0x20],eax
   14005d1ac:	call   0x140060310
   14005d1b1:	lea    rcx,[rsp+0x68]
   14005d1b6:	mov    rdx,rdi
   14005d1b9:	mov    ebx,eax
   14005d1bb:	call   0x14005fc50
   14005d1c0:	test   bl,0x3
   14005d1c3:	jne    0x14005d203
   14005d1c5:	cmp    eax,0x1
   14005d1c8:	jne    0x14005d1e4
   14005d1ca:	cmp    BYTE PTR [rsp+0x58],0x0
   14005d1cf:	je     0x14005d1dd
   14005d1d1:	mov    rax,QWORD PTR [rsp+0x50]
   14005d1d6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d1dd:	mov    eax,0x3
   14005d1e2:	jmp    0x14005d222
   14005d1e4:	cmp    eax,0x2
   14005d1e7:	jne    0x14005d20d
   14005d1e9:	cmp    BYTE PTR [rsp+0x58],0x0
   14005d1ee:	je     0x14005d1fc
   14005d1f0:	mov    rax,QWORD PTR [rsp+0x50]
   14005d1f5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d1fc:	mov    eax,0x4
   14005d201:	jmp    0x14005d222
   14005d203:	test   bl,0x1
   14005d206:	jne    0x14005d1e9
   14005d208:	test   bl,0x2
   14005d20b:	jne    0x14005d1ca
   14005d20d:	cmp    BYTE PTR [rsp+0x58],0x0
   14005d212:	je     0x14005d220
   14005d214:	mov    rax,QWORD PTR [rsp+0x50]
   14005d219:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d220:	xor    eax,eax
   14005d222:	mov    rcx,QWORD PTR [rsp+0x78]
   14005d227:	xor    rcx,rsp
   14005d22a:	call   0x140046470
   14005d22f:	mov    rbx,QWORD PTR [rsp+0xa8]
   14005d237:	add    rsp,0x80
   14005d23e:	pop    rdi
   14005d23f:	ret    
   14005d240:	rex push rdi
   14005d242:	sub    rsp,0x30
   14005d246:	test   rcx,rcx
   14005d249:	mov    rdi,QWORD PTR [r9+0x10]
   14005d24d:	mov    r10,rcx
   14005d250:	jne    0x14005d280
   14005d252:	call   0x140048680
   14005d257:	xor    r9d,r9d
   14005d25a:	xor    r8d,r8d
   14005d25d:	xor    edx,edx
   14005d25f:	xor    ecx,ecx
   14005d261:	mov    QWORD PTR [rsp+0x20],0x0
   14005d26a:	mov    DWORD PTR [rax],0x16
   14005d270:	call   0x14004e100
   14005d275:	mov    eax,0x16
   14005d27a:	add    rsp,0x30
   14005d27e:	pop    rdi
   14005d27f:	ret    
   14005d280:	test   rdx,rdx
   14005d283:	je     0x14005d252
   14005d285:	xor    eax,eax
   14005d287:	test   r8d,r8d
   14005d28a:	mov    BYTE PTR [rcx],0x0
   14005d28d:	cmovg  eax,r8d
   14005d291:	add    eax,0x1
   14005d294:	cdqe   
   14005d296:	cmp    rdx,rax
   14005d299:	ja     0x14005d2c9
   14005d29b:	call   0x140048680
   14005d2a0:	xor    r9d,r9d
   14005d2a3:	xor    r8d,r8d
   14005d2a6:	xor    edx,edx
   14005d2a8:	xor    ecx,ecx
   14005d2aa:	mov    QWORD PTR [rsp+0x20],0x0
   14005d2b3:	mov    DWORD PTR [rax],0x22
   14005d2b9:	call   0x14004e100
   14005d2be:	mov    eax,0x22
   14005d2c3:	add    rsp,0x30
   14005d2c7:	pop    rdi
   14005d2c8:	ret    
   14005d2c9:	test   r8d,r8d
   14005d2cc:	mov    BYTE PTR [rcx],0x30
   14005d2cf:	lea    rax,[rcx+0x1]
   14005d2d3:	jle    0x14005d2f9
   14005d2d5:	movzx  ecx,BYTE PTR [rdi]
   14005d2d8:	test   cl,cl
   14005d2da:	je     0x14005d2e5
   14005d2dc:	movsx  edx,cl
   14005d2df:	add    rdi,0x1
   14005d2e3:	jmp    0x14005d2ea
   14005d2e5:	mov    edx,0x30
   14005d2ea:	sub    r8d,0x1
   14005d2ee:	mov    BYTE PTR [rax],dl
   14005d2f0:	add    rax,0x1
   14005d2f4:	test   r8d,r8d
   14005d2f7:	jg     0x14005d2d5
   14005d2f9:	test   r8d,r8d
   14005d2fc:	mov    BYTE PTR [rax],0x0
   14005d2ff:	js     0x14005d31f
   14005d301:	cmp    BYTE PTR [rdi],0x35
   14005d304:	jl     0x14005d31f
   14005d306:	sub    rax,0x1
   14005d30a:	cmp    BYTE PTR [rax],0x39
   14005d30d:	jne    0x14005d31c
   14005d30f:	nop
   14005d310:	mov    BYTE PTR [rax],0x30
   14005d313:	sub    rax,0x1
   14005d317:	cmp    BYTE PTR [rax],0x39
   14005d31a:	je     0x14005d310
   14005d31c:	add    BYTE PTR [rax],0x1
   14005d31f:	cmp    BYTE PTR [r10],0x31
   14005d323:	jne    0x14005d332
   14005d325:	add    DWORD PTR [r9+0x4],0x1
   14005d32a:	xor    eax,eax
   14005d32c:	add    rsp,0x30
   14005d330:	pop    rdi
   14005d331:	ret    
   14005d332:	or     rcx,0xffffffffffffffff
   14005d336:	lea    rdi,[r10+0x1]
   14005d33a:	xor    eax,eax
   14005d33c:	repnz scas al,BYTE PTR es:[rdi]
   14005d33e:	lea    rdx,[r10+0x1]
   14005d342:	not    rcx
   14005d345:	mov    r8,rcx
   14005d348:	mov    rcx,r10
   14005d34b:	call   0x1400478c0
   14005d350:	xor    eax,eax
   14005d352:	add    rsp,0x30
   14005d356:	pop    rdi
   14005d357:	ret    
   14005d358:	int3   
   14005d359:	int3   
   14005d35a:	int3   
   14005d35b:	int3   
   14005d35c:	int3   
   14005d35d:	int3   
   14005d35e:	int3   
   14005d35f:	int3   
   14005d360:	rex push rbx
   14005d362:	push   rbp
   14005d363:	push   rsi
   14005d364:	sub    rsp,0x80
   14005d36b:	mov    rax,QWORD PTR [rip+0x299fe]        # 0x140086d70
   14005d372:	xor    rax,rsp
   14005d375:	mov    QWORD PTR [rsp+0x70],rax
   14005d37a:	mov    rbp,r9
   14005d37d:	mov    rsi,r8
   14005d380:	mov    r9,rcx
   14005d383:	shr    r9,0x30
   14005d387:	mov    rax,rcx
   14005d38a:	mov    rbx,rdx
   14005d38d:	movzx  r8d,r9w
   14005d391:	shr    rax,0x20
   14005d395:	and    r9w,0x8000
   14005d39b:	shr    r8w,0x4
   14005d3a0:	and    eax,0xfffff
   14005d3a5:	mov    r10d,0x80000000
   14005d3ab:	and    r8w,0x7ff
   14005d3b1:	movzx  edx,r8w
   14005d3b5:	test   edx,edx
   14005d3b7:	je     0x14005d3d0
   14005d3b9:	cmp    edx,0x7ff
   14005d3bf:	je     0x14005d3c9
   14005d3c1:	add    r8w,0x3c00
   14005d3c7:	jmp    0x14005d3eb
   14005d3c9:	mov    r8w,0x7fff
   14005d3ce:	jmp    0x14005d3eb
   14005d3d0:	test   eax,eax
   14005d3d2:	jne    0x14005d3e2
   14005d3d4:	test   ecx,ecx
   14005d3d6:	jne    0x14005d3e2
   14005d3d8:	mov    DWORD PTR [rsp+0x44],ecx
   14005d3dc:	mov    DWORD PTR [rsp+0x40],ecx
   14005d3e0:	jmp    0x14005d433
   14005d3e2:	add    r8w,0x3c01
   14005d3e8:	xor    r10d,r10d
   14005d3eb:	mov    edx,ecx
   14005d3ed:	shl    eax,0xb
   14005d3f0:	shl    ecx,0xb
   14005d3f3:	shr    edx,0x15
   14005d3f6:	mov    DWORD PTR [rsp+0x40],ecx
   14005d3fa:	or     edx,eax
   14005d3fc:	or     edx,r10d
   14005d3ff:	bt     edx,0x1f
   14005d403:	mov    DWORD PTR [rsp+0x44],edx
   14005d407:	jb     0x14005d42f
   14005d409:	data16 xchg ax,ax
   14005d40c:	data16 data16 xchg ax,ax
   14005d410:	mov    eax,ecx
   14005d412:	add    edx,edx
   14005d414:	add    ecx,ecx
   14005d416:	shr    eax,0x1f
   14005d419:	add    r8w,0xffff
   14005d41f:	mov    DWORD PTR [rsp+0x40],ecx
   14005d423:	or     edx,eax
   14005d425:	bt     edx,0x1f
   14005d429:	jae    0x14005d410
   14005d42b:	mov    DWORD PTR [rsp+0x44],edx
   14005d42f:	or     r9w,r8w
   14005d433:	mov    WORD PTR [rsp+0x48],r9w
   14005d439:	lea    rdx,[rsp+0x30]
   14005d43e:	lea    rcx,[rsp+0x40]
   14005d443:	mov    rax,QWORD PTR [rcx]
   14005d446:	xor    r8d,r8d
   14005d449:	lea    r9,[rsp+0x50]
   14005d44e:	mov    QWORD PTR [rdx],rax
   14005d451:	movzx  eax,WORD PTR [rcx+0x8]
   14005d455:	lea    rcx,[rsp+0x30]
   14005d45a:	mov    WORD PTR [rdx+0x8],ax
   14005d45e:	lea    edx,[r8+0x11]
   14005d462:	call   0x140060d40
   14005d467:	lea    r8,[rsp+0x54]
   14005d46c:	mov    rdx,rbp
   14005d46f:	mov    DWORD PTR [rbx+0x8],eax
   14005d472:	movsx  eax,BYTE PTR [rsp+0x52]
   14005d477:	mov    rcx,rsi
   14005d47a:	mov    DWORD PTR [rbx],eax
   14005d47c:	movsx  eax,WORD PTR [rsp+0x50]
   14005d481:	mov    DWORD PTR [rbx+0x4],eax
   14005d484:	call   0x1400579a0
   14005d489:	test   eax,eax
   14005d48b:	je     0x14005d4a5
   14005d48d:	xor    r9d,r9d
   14005d490:	xor    r8d,r8d
   14005d493:	xor    edx,edx
   14005d495:	xor    ecx,ecx
   14005d497:	mov    QWORD PTR [rsp+0x20],0x0
   14005d4a0:	call   0x14004e060
   14005d4a5:	mov    rax,rbx
   14005d4a8:	mov    QWORD PTR [rbx+0x10],rsi
   14005d4ac:	mov    rcx,QWORD PTR [rsp+0x70]
   14005d4b1:	xor    rcx,rsp
   14005d4b4:	call   0x140046470
   14005d4b9:	add    rsp,0x80
   14005d4c0:	pop    rsi
   14005d4c1:	pop    rbp
   14005d4c2:	pop    rbx
   14005d4c3:	ret    
   14005d4c4:	int3   
   14005d4c5:	int3   
   14005d4c6:	int3   
   14005d4c7:	int3   
   14005d4c8:	int3   
   14005d4c9:	int3   
   14005d4ca:	int3   
   14005d4cb:	int3   
   14005d4cc:	int3   
   14005d4cd:	int3   
   14005d4ce:	int3   
   14005d4cf:	int3   
   14005d4d0:	test   r8,r8
   14005d4d3:	mov    r10,rcx
   14005d4d6:	je     0x14005d51e
   14005d4d8:	data16 data16 xchg ax,ax
   14005d4dc:	data16 data16 xchg ax,ax
   14005d4e0:	movzx  r9d,BYTE PTR [r10]
   14005d4e4:	add    r10,0x1
   14005d4e8:	lea    eax,[r9-0x41]
   14005d4ec:	cmp    eax,0x19
   14005d4ef:	ja     0x14005d4f5
   14005d4f1:	add    r9d,0x20
   14005d4f5:	movzx  ecx,BYTE PTR [rdx]
   14005d4f8:	add    rdx,0x1
   14005d4fc:	lea    eax,[rcx-0x41]
   14005d4ff:	cmp    eax,0x19
   14005d502:	ja     0x14005d507
   14005d504:	add    ecx,0x20
   14005d507:	sub    r8,0x1
   14005d50b:	je     0x14005d517
   14005d50d:	test   r9d,r9d
   14005d510:	je     0x14005d517
   14005d512:	cmp    r9d,ecx
   14005d515:	je     0x14005d4e0
   14005d517:	sub    r9d,ecx
   14005d51a:	mov    eax,r9d
   14005d51d:	ret    
   14005d51e:	xor    eax,eax
   14005d520:	ret    
   14005d521:	int3   
   14005d522:	int3   
   14005d523:	int3   
   14005d524:	int3   
   14005d525:	int3   
   14005d526:	int3   
   14005d527:	int3   
   14005d528:	int3   
   14005d529:	int3   
   14005d52a:	int3   
   14005d52b:	int3   
   14005d52c:	int3   
   14005d52d:	int3   
   14005d52e:	int3   
   14005d52f:	int3   
   14005d530:	mov    QWORD PTR [rsp+0x10],rbp
   14005d535:	mov    QWORD PTR [rsp+0x18],rsi
   14005d53a:	push   rdi
   14005d53b:	sub    rsp,0x50
   14005d53f:	test   r8,r8
   14005d542:	mov    rdi,r8
   14005d545:	mov    rsi,rdx
   14005d548:	mov    rbp,rcx
   14005d54b:	je     0x14005d70f
   14005d551:	test   r9,r9
   14005d554:	mov    BYTE PTR [rsp+0x48],0x0
   14005d559:	jne    0x14005d5f5
   14005d55f:	call   0x14004bd60
   14005d564:	mov    QWORD PTR [rsp+0x40],rax
   14005d569:	mov    r11,rax
   14005d56c:	mov    r9,QWORD PTR [rax+0xc0]
   14005d573:	cmp    r9,QWORD PTR [rip+0x2a326]        # 0x1400878a0
   14005d57a:	mov    QWORD PTR [rsp+0x30],r9
   14005d57f:	mov    rax,QWORD PTR [rax+0xb8]
   14005d586:	mov    QWORD PTR [rsp+0x38],rax
   14005d58b:	je     0x14005d5b0
   14005d58d:	mov    ecx,DWORD PTR [r11+0xc8]
   14005d594:	test   DWORD PTR [rip+0x2a18e],ecx        # 0x140087728
   14005d59a:	jne    0x14005d5b0
   14005d59c:	call   0x14004f030
   14005d5a1:	mov    r11,QWORD PTR [rsp+0x40]
   14005d5a6:	mov    QWORD PTR [rsp+0x30],rax
   14005d5ab:	mov    rax,QWORD PTR [rsp+0x38]
   14005d5b0:	cmp    rax,QWORD PTR [rip+0x2a069]        # 0x140087620
   14005d5b7:	je     0x14005d5d7
   14005d5b9:	mov    eax,DWORD PTR [r11+0xc8]
   14005d5c0:	test   DWORD PTR [rip+0x2a162],eax        # 0x140087728
   14005d5c6:	jne    0x14005d5d7
   14005d5c8:	call   0x14004e4e0
   14005d5cd:	mov    r11,QWORD PTR [rsp+0x40]
   14005d5d2:	mov    QWORD PTR [rsp+0x38],rax
   14005d5d7:	test   BYTE PTR [r11+0xc8],0x2
   14005d5df:	jne    0x14005d60d
   14005d5e1:	or     DWORD PTR [r11+0xc8],0x2
   14005d5e9:	mov    r11,QWORD PTR [rsp+0x40]
   14005d5ee:	mov    BYTE PTR [rsp+0x48],0x1
   14005d5f3:	jmp    0x14005d60d
   14005d5f5:	mov    rax,QWORD PTR [r9]
   14005d5f8:	lea    rcx,[rsp+0x30]
   14005d5fd:	mov    QWORD PTR [rcx],rax
   14005d600:	mov    rax,QWORD PTR [r9+0x8]
   14005d604:	mov    QWORD PTR [rcx+0x8],rax
   14005d608:	mov    r11,QWORD PTR [rsp+0x40]
   14005d60d:	test   rbp,rbp
   14005d610:	jne    0x14005d65d
   14005d612:	call   0x140048680
   14005d617:	xor    r9d,r9d
   14005d61a:	xor    r8d,r8d
   14005d61d:	xor    edx,edx
   14005d61f:	xor    ecx,ecx
   14005d621:	mov    QWORD PTR [rsp+0x20],0x0
   14005d62a:	mov    DWORD PTR [rax],0x16
   14005d630:	call   0x14004e100
   14005d635:	cmp    BYTE PTR [rsp+0x48],0x0
   14005d63a:	je     0x14005d648
   14005d63c:	mov    rax,QWORD PTR [rsp+0x40]
   14005d641:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005d648:	mov    eax,0x7fffffff
   14005d64d:	mov    rbp,QWORD PTR [rsp+0x68]
   14005d652:	mov    rsi,QWORD PTR [rsp+0x70]
   14005d657:	add    rsp,0x50
   14005d65b:	pop    rdi
   14005d65c:	ret    
   14005d65d:	test   rsi,rsi
   14005d660:	je     0x14005d612
   14005d662:	cmp    rdi,0x7fffffff
   14005d669:	ja     0x14005d612
   14005d66b:	mov    rax,QWORD PTR [rsp+0x30]
   14005d670:	cmp    DWORD PTR [rax+0x14],0x0
   14005d674:	jne    0x14005d6a7
   14005d676:	mov    r8,rdi
   14005d679:	mov    rdx,rsi
   14005d67c:	mov    rcx,rbp
   14005d67f:	call   0x14005d4d0
   14005d684:	cmp    BYTE PTR [rsp+0x48],0x0
   14005d689:	je     0x14005d711
   14005d68f:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005d697:	mov    rbp,QWORD PTR [rsp+0x68]
   14005d69c:	mov    rsi,QWORD PTR [rsp+0x70]
   14005d6a1:	add    rsp,0x50
   14005d6a5:	pop    rdi
   14005d6a6:	ret    
   14005d6a7:	mov    QWORD PTR [rsp+0x60],rbx
   14005d6ac:	data16 data16 xchg ax,ax
   14005d6b0:	movzx  ecx,BYTE PTR [rbp+0x0]
   14005d6b4:	lea    rdx,[rsp+0x30]
   14005d6b9:	call   0x14005cc90
   14005d6be:	movzx  ecx,BYTE PTR [rsi]
   14005d6c1:	lea    rdx,[rsp+0x30]
   14005d6c6:	mov    ebx,eax
   14005d6c8:	add    rbp,0x1
   14005d6cc:	call   0x14005cc90
   14005d6d1:	add    rsi,0x1
   14005d6d5:	sub    rdi,0x1
   14005d6d9:	je     0x14005d6e3
   14005d6db:	test   ebx,ebx
   14005d6dd:	je     0x14005d6e3
   14005d6df:	cmp    ebx,eax
   14005d6e1:	je     0x14005d6b0
   14005d6e3:	sub    ebx,eax
   14005d6e5:	cmp    BYTE PTR [rsp+0x48],0x0
   14005d6ea:	je     0x14005d6f8
   14005d6ec:	mov    rcx,QWORD PTR [rsp+0x40]
   14005d6f1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005d6f8:	mov    eax,ebx
   14005d6fa:	mov    rbx,QWORD PTR [rsp+0x60]
   14005d6ff:	mov    rbp,QWORD PTR [rsp+0x68]
   14005d704:	mov    rsi,QWORD PTR [rsp+0x70]
   14005d709:	add    rsp,0x50
   14005d70d:	pop    rdi
   14005d70e:	ret    
   14005d70f:	xor    eax,eax
   14005d711:	mov    rbp,QWORD PTR [rsp+0x68]
   14005d716:	mov    rsi,QWORD PTR [rsp+0x70]
   14005d71b:	add    rsp,0x50
   14005d71f:	pop    rdi
   14005d720:	ret    
   14005d721:	int3   
   14005d722:	int3   
   14005d723:	int3   
   14005d724:	int3   
   14005d725:	int3   
   14005d726:	int3   
   14005d727:	int3   
   14005d728:	int3   
   14005d729:	int3   
   14005d72a:	int3   
   14005d72b:	int3   
   14005d72c:	int3   
   14005d72d:	int3   
   14005d72e:	int3   
   14005d72f:	int3   
   14005d730:	rex push rbx
   14005d732:	sub    rsp,0x60
   14005d736:	mov    rax,QWORD PTR [rip+0x29633]        # 0x140086d70
   14005d73d:	xor    rax,rsp
   14005d740:	mov    QWORD PTR [rsp+0x50],rax
   14005d745:	xor    ebx,ebx
   14005d747:	mov    WORD PTR [rsp+0x40],cx
   14005d74c:	cmp    DWORD PTR [rip+0x2ab1e],ebx        # 0x140088270
   14005d752:	je     0x14005d7bc
   14005d754:	mov    rcx,QWORD PTR [rip+0x2ac5d]        # 0x1400883b8
   14005d75b:	cmp    rcx,0xfffffffffffffffe
   14005d75f:	jne    0x14005d76d
   14005d761:	call   0x140061b40
   14005d766:	mov    rcx,QWORD PTR [rip+0x2ac4b]        # 0x1400883b8
   14005d76d:	cmp    rcx,0xffffffffffffffff
   14005d771:	je     0x14005d840
   14005d777:	lea    r9,[rsp+0x44]
   14005d77c:	lea    rdx,[rsp+0x40]
   14005d781:	mov    r8d,0x1
   14005d787:	mov    QWORD PTR [rsp+0x20],rbx
   14005d78c:	call   QWORD PTR [rip+0x6c46]        # 0x1400643d8
   14005d792:	test   eax,eax
   14005d794:	jne    0x14005d834
   14005d79a:	cmp    DWORD PTR [rip+0x2aacf],0x2        # 0x140088270
   14005d7a1:	jne    0x14005d840
   14005d7a7:	call   QWORD PTR [rip+0x6e53]        # 0x140064600
   14005d7ad:	cmp    eax,0x78
   14005d7b0:	jne    0x14005d840
   14005d7b6:	mov    DWORD PTR [rip+0x2aab4],ebx        # 0x140088270
   14005d7bc:	call   QWORD PTR [rip+0x6c0e]        # 0x1400643d0
   14005d7c2:	mov    QWORD PTR [rsp+0x38],rbx
   14005d7c7:	mov    QWORD PTR [rsp+0x30],rbx
   14005d7cc:	mov    ecx,eax
   14005d7ce:	lea    rax,[rsp+0x48]
   14005d7d3:	lea    r8,[rsp+0x40]
   14005d7d8:	mov    r9d,0x1
   14005d7de:	xor    edx,edx
   14005d7e0:	mov    DWORD PTR [rsp+0x28],0x5
   14005d7e8:	mov    QWORD PTR [rsp+0x20],rax
   14005d7ed:	call   QWORD PTR [rip+0x6cfd]        # 0x1400644f0
   14005d7f3:	mov    rcx,QWORD PTR [rip+0x2abbe]        # 0x1400883b8
   14005d7fa:	cmp    rcx,0xffffffffffffffff
   14005d7fe:	je     0x14005d840
   14005d800:	lea    r9,[rsp+0x44]
   14005d805:	lea    rdx,[rsp+0x48]
   14005d80a:	mov    r8d,eax
   14005d80d:	mov    QWORD PTR [rsp+0x20],rbx
   14005d812:	call   QWORD PTR [rip+0x6bb0]        # 0x1400643c8
   14005d818:	test   eax,eax
   14005d81a:	je     0x14005d840
   14005d81c:	mov    ax,WORD PTR [rsp+0x40]
   14005d821:	mov    rcx,QWORD PTR [rsp+0x50]
   14005d826:	xor    rcx,rsp
   14005d829:	call   0x140046470
   14005d82e:	add    rsp,0x60
   14005d832:	pop    rbx
   14005d833:	ret    
   14005d834:	mov    DWORD PTR [rip+0x2aa32],0x1        # 0x140088270
   14005d83e:	jmp    0x14005d81c
   14005d840:	or     ax,0xffff
   14005d844:	mov    rcx,QWORD PTR [rsp+0x50]
   14005d849:	xor    rcx,rsp
   14005d84c:	call   0x140046470
   14005d851:	add    rsp,0x60
   14005d855:	pop    rbx
   14005d856:	ret    
   14005d857:	int3   
   14005d858:	int3   
   14005d859:	int3   
   14005d85a:	int3   
   14005d85b:	int3   
   14005d85c:	int3   
   14005d85d:	int3   
   14005d85e:	int3   
   14005d85f:	int3   
   14005d860:	rex push rbx
   14005d862:	push   rdi
   14005d863:	push   r12
   14005d865:	sub    rsp,0x20
   14005d869:	mov    r12d,ecx
   14005d86c:	mov    rcx,rdx
   14005d86f:	mov    rbx,rdx
   14005d872:	call   0x140051e40
   14005d877:	mov    edx,DWORD PTR [rbx+0x18]
   14005d87a:	test   dl,0x82
   14005d87d:	movsxd rdi,eax
   14005d880:	jne    0x14005d89f
   14005d882:	call   0x140048680
   14005d887:	mov    DWORD PTR [rax],0x9
   14005d88d:	or     DWORD PTR [rbx+0x18],0x20
   14005d891:	mov    eax,0xffff
   14005d896:	add    rsp,0x20
   14005d89a:	pop    r12
   14005d89c:	pop    rdi
   14005d89d:	pop    rbx
   14005d89e:	ret    
   14005d89f:	test   dl,0x40
   14005d8a2:	je     0x14005d8c1
   14005d8a4:	call   0x140048680
   14005d8a9:	mov    DWORD PTR [rax],0x22
   14005d8af:	or     DWORD PTR [rbx+0x18],0x20
   14005d8b3:	mov    eax,0xffff
   14005d8b8:	add    rsp,0x20
   14005d8bc:	pop    r12
   14005d8be:	pop    rdi
   14005d8bf:	pop    rbx
   14005d8c0:	ret    
   14005d8c1:	mov    QWORD PTR [rsp+0x50],rsi
   14005d8c6:	xor    esi,esi
   14005d8c8:	test   dl,0x1
   14005d8cb:	je     0x14005d8e6
   14005d8cd:	test   dl,0x10
   14005d8d0:	mov    DWORD PTR [rbx+0x8],esi
   14005d8d3:	je     0x14005d973
   14005d8d9:	mov    rax,QWORD PTR [rbx+0x10]
   14005d8dd:	and    edx,0xfffffffe
   14005d8e0:	mov    QWORD PTR [rbx],rax
   14005d8e3:	mov    DWORD PTR [rbx+0x18],edx
   14005d8e6:	mov    eax,DWORD PTR [rbx+0x18]
   14005d8e9:	mov    DWORD PTR [rbx+0x8],esi
   14005d8ec:	and    eax,0xffffffef
   14005d8ef:	or     eax,0x2
   14005d8f2:	test   eax,0x10c
   14005d8f7:	mov    DWORD PTR [rbx+0x18],eax
   14005d8fa:	jne    0x14005d92b
   14005d8fc:	call   0x140052160
   14005d901:	add    rax,0x30
   14005d905:	cmp    rbx,rax
   14005d908:	je     0x14005d918
   14005d90a:	call   0x140052160
   14005d90f:	add    rax,0x60
   14005d913:	cmp    rbx,rax
   14005d916:	jne    0x14005d923
   14005d918:	mov    ecx,edi
   14005d91a:	call   0x140059940
   14005d91f:	test   eax,eax
   14005d921:	jne    0x14005d92b
   14005d923:	mov    rcx,rbx
   14005d926:	call   0x1400598e0
   14005d92b:	test   DWORD PTR [rbx+0x18],0x108
   14005d932:	mov    QWORD PTR [rsp+0x40],rbp
   14005d937:	je     0x14005d9e2
   14005d93d:	mov    ebp,DWORD PTR [rbx]
   14005d93f:	mov    rdx,QWORD PTR [rbx+0x10]
   14005d943:	sub    ebp,DWORD PTR [rbx+0x10]
   14005d946:	lea    rax,[rdx+0x2]
   14005d94a:	mov    QWORD PTR [rbx],rax
   14005d94d:	mov    eax,DWORD PTR [rbx+0x24]
   14005d950:	sub    eax,0x2
   14005d953:	test   ebp,ebp
   14005d955:	mov    DWORD PTR [rbx+0x8],eax
   14005d958:	jle    0x14005d98c
   14005d95a:	mov    r8d,ebp
   14005d95d:	mov    ecx,edi
   14005d95f:	call   0x140059790
   14005d964:	mov    esi,eax
   14005d966:	mov    rax,QWORD PTR [rbx+0x10]
   14005d96a:	mov    WORD PTR [rax],r12w
   14005d96e:	jmp    0x14005d9fe
   14005d973:	mov    rsi,QWORD PTR [rsp+0x50]
   14005d978:	or     edx,0x20
   14005d97b:	mov    eax,0xffff
   14005d980:	mov    DWORD PTR [rbx+0x18],edx
   14005d983:	add    rsp,0x20
   14005d987:	pop    r12
   14005d989:	pop    rdi
   14005d98a:	pop    rbx
   14005d98b:	ret    
   14005d98c:	cmp    edi,0xffffffff
   14005d98f:	je     0x14005d9b8
   14005d991:	cmp    edi,0xfffffffe
   14005d994:	je     0x14005d9b8
   14005d996:	mov    rax,rdi
   14005d999:	mov    rcx,rdi
   14005d99c:	lea    r8,[rip+0x30d5d]        # 0x14008e700
   14005d9a3:	and    eax,0x1f
   14005d9a6:	sar    rcx,0x5
   14005d9aa:	lea    rdx,[rax+rax*4]
   14005d9ae:	shl    rdx,0x4
   14005d9b2:	add    rdx,QWORD PTR [r8+rcx*8]
   14005d9b6:	jmp    0x14005d9bf
   14005d9b8:	lea    rdx,[rip+0x29771]        # 0x140087130
   14005d9bf:	test   BYTE PTR [rdx+0x8],0x20
   14005d9c3:	je     0x14005d9d8
   14005d9c5:	xor    edx,edx
   14005d9c7:	mov    ecx,edi
   14005d9c9:	lea    r8d,[rdx+0x2]
   14005d9cd:	call   0x140058eb0
   14005d9d2:	cmp    rax,0xffffffffffffffff
   14005d9d6:	je     0x14005da02
   14005d9d8:	mov    rax,QWORD PTR [rbx+0x10]
   14005d9dc:	mov    WORD PTR [rax],r12w
   14005d9e0:	jmp    0x14005d9fe
   14005d9e2:	mov    ebp,0x2
   14005d9e7:	lea    rdx,[rsp+0x48]
   14005d9ec:	mov    ecx,edi
   14005d9ee:	mov    r8d,ebp
   14005d9f1:	mov    WORD PTR [rsp+0x48],r12w
   14005d9f7:	call   0x140059790
   14005d9fc:	mov    esi,eax
   14005d9fe:	cmp    esi,ebp
   14005da00:	je     0x14005da0d
   14005da02:	or     DWORD PTR [rbx+0x18],0x20
   14005da06:	mov    eax,0xffff
   14005da0b:	jmp    0x14005da11
   14005da0d:	movzx  eax,r12w
   14005da11:	mov    rbp,QWORD PTR [rsp+0x40]
   14005da16:	mov    rsi,QWORD PTR [rsp+0x50]
   14005da1b:	add    rsp,0x20
   14005da1f:	pop    r12
   14005da21:	pop    rdi
   14005da22:	pop    rbx
   14005da23:	ret    
   14005da24:	int3   
   14005da25:	int3   
   14005da26:	int3   
   14005da27:	int3   
   14005da28:	int3   
   14005da29:	int3   
   14005da2a:	int3   
   14005da2b:	int3   
   14005da2c:	int3   
   14005da2d:	int3   
   14005da2e:	int3   
   14005da2f:	int3   
   14005da30:	push   r12
   14005da32:	push   r13
   14005da34:	push   r14
   14005da36:	sub    rsp,0x50
   14005da3a:	test   rcx,rcx
   14005da3d:	mov    r12d,r9d
   14005da40:	mov    r13,r8
   14005da43:	mov    r14,rdx
   14005da46:	mov    BYTE PTR [rsp+0x48],0x0
   14005da4b:	jne    0x14005dae8
   14005da51:	call   0x14004bd60
   14005da56:	mov    QWORD PTR [rsp+0x40],rax
   14005da5b:	mov    r10,QWORD PTR [rax+0xc0]
   14005da62:	cmp    r10,QWORD PTR [rip+0x29e37]        # 0x1400878a0
   14005da69:	mov    QWORD PTR [rsp+0x30],r10
   14005da6e:	mov    r11,QWORD PTR [rax+0xb8]
   14005da75:	mov    QWORD PTR [rsp+0x38],r11
   14005da7a:	je     0x14005daa1
   14005da7c:	mov    ecx,DWORD PTR [rax+0xc8]
   14005da82:	test   DWORD PTR [rip+0x29ca0],ecx        # 0x140087728
   14005da88:	jne    0x14005daa1
   14005da8a:	call   0x14004f030
   14005da8f:	mov    r11,QWORD PTR [rsp+0x38]
   14005da94:	mov    r10,rax
   14005da97:	mov    QWORD PTR [rsp+0x30],rax
   14005da9c:	mov    rax,QWORD PTR [rsp+0x40]
   14005daa1:	cmp    r11,QWORD PTR [rip+0x29b78]        # 0x140087620
   14005daa8:	je     0x14005dacc
   14005daaa:	mov    ecx,DWORD PTR [rax+0xc8]
   14005dab0:	test   DWORD PTR [rip+0x29c72],ecx        # 0x140087728
   14005dab6:	jne    0x14005dacc
   14005dab8:	call   0x14004e4e0
   14005dabd:	mov    r10,QWORD PTR [rsp+0x30]
   14005dac2:	mov    QWORD PTR [rsp+0x38],rax
   14005dac7:	mov    rax,QWORD PTR [rsp+0x40]
   14005dacc:	test   BYTE PTR [rax+0xc8],0x2
   14005dad3:	jne    0x14005db00
   14005dad5:	or     DWORD PTR [rax+0xc8],0x2
   14005dadc:	mov    r10,QWORD PTR [rsp+0x30]
   14005dae1:	mov    BYTE PTR [rsp+0x48],0x1
   14005dae6:	jmp    0x14005db00
   14005dae8:	mov    rax,QWORD PTR [rcx]
   14005daeb:	lea    rdx,[rsp+0x30]
   14005daf0:	mov    QWORD PTR [rdx],rax
   14005daf3:	mov    rax,QWORD PTR [rcx+0x8]
   14005daf7:	mov    QWORD PTR [rdx+0x8],rax
   14005dafb:	mov    r10,QWORD PTR [rsp+0x30]
   14005db00:	test   r13,r13
   14005db03:	je     0x14005db09
   14005db05:	mov    QWORD PTR [r13+0x0],r14
   14005db09:	test   r14,r14
   14005db0c:	jne    0x14005db51
   14005db0e:	call   0x140048680
   14005db13:	xor    r9d,r9d
   14005db16:	xor    r8d,r8d
   14005db19:	xor    edx,edx
   14005db1b:	xor    ecx,ecx
   14005db1d:	mov    QWORD PTR [rsp+0x20],0x0
   14005db26:	mov    DWORD PTR [rax],0x16
   14005db2c:	call   0x14004e100
   14005db31:	cmp    BYTE PTR [rsp+0x48],0x0
   14005db36:	je     0x14005db44
   14005db38:	mov    rax,QWORD PTR [rsp+0x40]
   14005db3d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005db44:	xor    eax,eax
   14005db46:	add    rsp,0x50
   14005db4a:	pop    r14
   14005db4c:	pop    r13
   14005db4e:	pop    r12
   14005db50:	ret    
   14005db51:	test   r12d,r12d
   14005db54:	je     0x14005db62
   14005db56:	cmp    r12d,0x2
   14005db5a:	jl     0x14005db0e
   14005db5c:	cmp    r12d,0x24
   14005db60:	jg     0x14005db0e
   14005db62:	mov    QWORD PTR [rsp+0x70],rbx
   14005db67:	mov    QWORD PTR [rsp+0x80],rsi
   14005db6f:	mov    QWORD PTR [rsp+0x88],rdi
   14005db77:	movzx  edi,BYTE PTR [r14]
   14005db7b:	xor    esi,esi
   14005db7d:	lea    rbx,[r14+0x1]
   14005db81:	cmp    DWORD PTR [r10+0x10c],0x1
   14005db89:	jle    0x14005dba5
   14005db8b:	lea    r8,[rsp+0x30]
   14005db90:	movzx  ecx,dil
   14005db94:	mov    edx,0x8
   14005db99:	call   0x14005ee30
   14005db9e:	mov    r10,QWORD PTR [rsp+0x30]
   14005dba3:	jmp    0x14005dbb6
   14005dba5:	mov    rax,QWORD PTR [r10+0x140]
   14005dbac:	movzx  ecx,dil
   14005dbb0:	mov    al,BYTE PTR [rax+rcx*2]
   14005dbb3:	and    eax,0x8
   14005dbb6:	test   eax,eax
   14005dbb8:	je     0x14005dbc3
   14005dbba:	mov    dil,BYTE PTR [rbx]
   14005dbbd:	add    rbx,0x1
   14005dbc1:	jmp    0x14005db81
   14005dbc3:	cmp    dil,0x2d
   14005dbc7:	mov    QWORD PTR [rsp+0x78],rbp
   14005dbcc:	jne    0x14005dbe1
   14005dbce:	mov    ebp,DWORD PTR [rsp+0x90]
   14005dbd5:	mov    dil,BYTE PTR [rbx]
   14005dbd8:	or     ebp,0x2
   14005dbdb:	add    rbx,0x1
   14005dbdf:	jmp    0x14005dbfe
   14005dbe1:	cmp    dil,0x2b
   14005dbe5:	jne    0x14005dbf7
   14005dbe7:	mov    dil,BYTE PTR [rbx]
   14005dbea:	mov    ebp,DWORD PTR [rsp+0x90]
   14005dbf1:	add    rbx,0x1
   14005dbf5:	jmp    0x14005dbfe
   14005dbf7:	mov    ebp,DWORD PTR [rsp+0x90]
   14005dbfe:	test   r12d,r12d
   14005dc01:	js     0x14005dd72
   14005dc07:	cmp    r12d,0x1
   14005dc0b:	je     0x14005dd72
   14005dc11:	cmp    r12d,0x24
   14005dc15:	jg     0x14005dd72
   14005dc1b:	test   r12d,r12d
   14005dc1e:	jne    0x14005dc49
   14005dc20:	cmp    dil,0x30
   14005dc24:	je     0x14005dc2e
   14005dc26:	mov    r12d,0xa
   14005dc2c:	jmp    0x14005dc68
   14005dc2e:	movzx  eax,BYTE PTR [rbx]
   14005dc31:	cmp    al,0x78
   14005dc33:	je     0x14005dc41
   14005dc35:	cmp    al,0x58
   14005dc37:	je     0x14005dc41
   14005dc39:	mov    r12d,0x8
   14005dc3f:	jmp    0x14005dc68
   14005dc41:	mov    r12d,0x10
   14005dc47:	jmp    0x14005dc55
   14005dc49:	cmp    r12d,0x10
   14005dc4d:	jne    0x14005dc68
   14005dc4f:	cmp    dil,0x30
   14005dc53:	jne    0x14005dc68
   14005dc55:	movzx  eax,BYTE PTR [rbx]
   14005dc58:	cmp    al,0x78
   14005dc5a:	je     0x14005dc60
   14005dc5c:	cmp    al,0x58
   14005dc5e:	jne    0x14005dc68
   14005dc60:	mov    dil,BYTE PTR [rbx+0x1]
   14005dc64:	add    rbx,0x2
   14005dc68:	mov    r11,QWORD PTR [r10+0x140]
   14005dc6f:	xor    edx,edx
   14005dc71:	or     eax,0xffffffff
   14005dc74:	div    r12d
   14005dc77:	mov    r9d,eax
   14005dc7a:	data16 xchg ax,ax
   14005dc7d:	data16 xchg ax,ax
   14005dc80:	movzx  ecx,dil
   14005dc84:	movzx  r8d,WORD PTR [r11+rcx*2]
   14005dc89:	test   r8b,0x4
   14005dc8d:	je     0x14005dc98
   14005dc8f:	movsx  ecx,dil
   14005dc93:	sub    ecx,0x30
   14005dc96:	jmp    0x14005dcb8
   14005dc98:	test   r8d,0x103
   14005dc9f:	je     0x14005dcd6
   14005dca1:	lea    eax,[rdi-0x61]
   14005dca4:	cmp    al,0x19
   14005dca6:	ja     0x14005dcb1
   14005dca8:	movsx  ecx,dil
   14005dcac:	sub    ecx,0x20
   14005dcaf:	jmp    0x14005dcb5
   14005dcb1:	movsx  ecx,dil
   14005dcb5:	add    ecx,0xffffffc9
   14005dcb8:	cmp    ecx,r12d
   14005dcbb:	jae    0x14005dcd6
   14005dcbd:	or     ebp,0x8
   14005dcc0:	cmp    esi,r9d
   14005dcc3:	jb     0x14005dceb
   14005dcc5:	cmp    esi,r9d
   14005dcc8:	jne    0x14005dcce
   14005dcca:	cmp    ecx,edx
   14005dccc:	jbe    0x14005dceb
   14005dcce:	or     ebp,0x4
   14005dcd1:	test   r13,r13
   14005dcd4:	jne    0x14005dcf1
   14005dcd6:	sub    rbx,0x1
   14005dcda:	test   bpl,0x8
   14005dcde:	jne    0x14005dcfa
   14005dce0:	test   r13,r13
   14005dce3:	cmovne rbx,r14
   14005dce7:	xor    esi,esi
   14005dce9:	jmp    0x14005dd4a
   14005dceb:	imul   esi,r12d
   14005dcef:	add    esi,ecx
   14005dcf1:	mov    dil,BYTE PTR [rbx]
   14005dcf4:	add    rbx,0x1
   14005dcf8:	jmp    0x14005dc80
   14005dcfa:	test   bpl,0x4
   14005dcfe:	jne    0x14005dd21
   14005dd00:	test   bpl,0x1
   14005dd04:	jne    0x14005dd4a
   14005dd06:	mov    eax,ebp
   14005dd08:	and    eax,0x2
   14005dd0b:	je     0x14005dd15
   14005dd0d:	cmp    esi,0x80000000
   14005dd13:	ja     0x14005dd21
   14005dd15:	test   eax,eax
   14005dd17:	jne    0x14005dd4a
   14005dd19:	cmp    esi,0x7fffffff
   14005dd1f:	jbe    0x14005dd4a
   14005dd21:	call   0x140048680
   14005dd26:	test   bpl,0x1
   14005dd2a:	mov    DWORD PTR [rax],0x22
   14005dd30:	je     0x14005dd37
   14005dd32:	or     esi,0xffffffff
   14005dd35:	jmp    0x14005dd4a
   14005dd37:	test   bpl,0x2
   14005dd3b:	mov    esi,0x0
   14005dd40:	setne  sil
   14005dd44:	add    esi,0x7fffffff
   14005dd4a:	test   r13,r13
   14005dd4d:	je     0x14005dd53
   14005dd4f:	mov    QWORD PTR [r13+0x0],rbx
   14005dd53:	test   bpl,0x2
   14005dd57:	je     0x14005dd5b
   14005dd59:	neg    esi
   14005dd5b:	cmp    BYTE PTR [rsp+0x48],0x0
   14005dd60:	je     0x14005dd6e
   14005dd62:	mov    rcx,QWORD PTR [rsp+0x40]
   14005dd67:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005dd6e:	mov    eax,esi
   14005dd70:	jmp    0x14005dd90
   14005dd72:	test   r13,r13
   14005dd75:	je     0x14005dd7b
   14005dd77:	mov    QWORD PTR [r13+0x0],r14
   14005dd7b:	cmp    BYTE PTR [rsp+0x48],sil
   14005dd80:	je     0x14005dd8e
   14005dd82:	mov    rax,QWORD PTR [rsp+0x40]
   14005dd87:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005dd8e:	xor    eax,eax
   14005dd90:	mov    rbp,QWORD PTR [rsp+0x78]
   14005dd95:	mov    rsi,QWORD PTR [rsp+0x80]
   14005dd9d:	mov    rbx,QWORD PTR [rsp+0x70]
   14005dda2:	mov    rdi,QWORD PTR [rsp+0x88]
   14005ddaa:	add    rsp,0x50
   14005ddae:	pop    r14
   14005ddb0:	pop    r13
   14005ddb2:	pop    r12
   14005ddb4:	ret    
   14005ddb5:	int3   
   14005ddb6:	int3   
   14005ddb7:	int3   
   14005ddb8:	int3   
   14005ddb9:	int3   
   14005ddba:	int3   
   14005ddbb:	int3   
   14005ddbc:	int3   
   14005ddbd:	int3   
   14005ddbe:	int3   
   14005ddbf:	int3   
   14005ddc0:	sub    rsp,0x38
   14005ddc4:	cmp    DWORD PTR [rip+0x2f3d5],0x0        # 0x14008d1a0
   14005ddcb:	mov    r9d,r8d
   14005ddce:	mov    r8,rdx
   14005ddd1:	mov    rdx,rcx
   14005ddd4:	mov    DWORD PTR [rsp+0x20],0x0
   14005dddc:	jne    0x14005ddef
   14005ddde:	lea    rcx,[rip+0x29acb]        # 0x1400878b0
   14005dde5:	call   0x14005da30
   14005ddea:	add    rsp,0x38
   14005ddee:	ret    
   14005ddef:	xor    ecx,ecx
   14005ddf1:	call   0x14005da30
   14005ddf6:	add    rsp,0x38
   14005ddfa:	ret    
   14005ddfb:	int3   
   14005ddfc:	int3   
   14005ddfd:	int3   
   14005ddfe:	int3   
   14005ddff:	int3   
   14005de00:	mov    QWORD PTR [rsp+0x10],rdx
   14005de05:	mov    DWORD PTR [rsp+0x8],ecx
   14005de09:	push   rbx
   14005de0a:	push   rdi
   14005de0b:	push   r14
   14005de0d:	sub    rsp,0x70
   14005de11:	movsxd rax,ecx
   14005de14:	mov    rdi,0xfffffffffffffffe
   14005de1b:	mov    ebx,r8d
   14005de1e:	cmp    eax,edi
   14005de20:	mov    DWORD PTR [rsp+0x34],ebx
   14005de24:	jne    0x14005de48
   14005de26:	call   0x1400486b0
   14005de2b:	xor    r14d,r14d
   14005de2e:	mov    DWORD PTR [rax],r14d
   14005de31:	call   0x140048680
   14005de36:	mov    DWORD PTR [rax],0x9
   14005de3c:	or     eax,0xffffffff
   14005de3f:	add    rsp,0x70
   14005de43:	pop    r14
   14005de45:	pop    rdi
   14005de46:	pop    rbx
   14005de47:	ret    
   14005de48:	test   ecx,ecx
   14005de4a:	js     0x14005e6cb
   14005de50:	cmp    eax,DWORD PTR [rip+0x3088e]        # 0x14008e6e4
   14005de56:	jae    0x14005e6cb
   14005de5c:	mov    QWORD PTR [rsp+0x68],rbp
   14005de61:	mov    QWORD PTR [rsp+0x58],r12
   14005de66:	mov    r12,rax
   14005de69:	and    eax,0x1f
   14005de6c:	sar    r12,0x5
   14005de70:	lea    r8,[rip+0xfffffffffffa2189]        # 0x140000000
   14005de77:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005de7f:	lea    rbp,[rax+rax*4]
   14005de83:	add    rbp,rbp
   14005de86:	movzx  eax,BYTE PTR [rcx+rbp*8+0x8]
   14005de8b:	test   al,0x1
   14005de8d:	jne    0x14005dea7
   14005de8f:	call   0x1400486b0
   14005de94:	xor    r14d,r14d
   14005de97:	mov    DWORD PTR [rax],r14d
   14005de9a:	call   0x140048680
   14005de9f:	mov    DWORD PTR [rax],0x9
   14005dea5:	jmp    0x14005dec5
   14005dea7:	cmp    ebx,0x7fffffff
   14005dead:	jbe    0x14005dee1
   14005deaf:	call   0x1400486b0
   14005deb4:	xor    r14d,r14d
   14005deb7:	mov    DWORD PTR [rax],r14d
   14005deba:	call   0x140048680
   14005debf:	mov    DWORD PTR [rax],0x16
   14005dec5:	xor    r9d,r9d
   14005dec8:	xor    r8d,r8d
   14005decb:	xor    edx,edx
   14005decd:	xor    ecx,ecx
   14005decf:	mov    QWORD PTR [rsp+0x20],r14
   14005ded4:	call   0x14004e100
   14005ded9:	or     eax,0xffffffff
   14005dedc:	jmp    0x14005dfa5
   14005dee1:	xor    r14d,r14d
   14005dee4:	test   ebx,ebx
   14005dee6:	mov    QWORD PTR [rsp+0x60],rsi
   14005deeb:	mov    esi,r14d
   14005deee:	je     0x14005e6c4
   14005def4:	test   al,0x2
   14005def6:	jne    0x14005e6c4
   14005defc:	test   rdx,rdx
   14005deff:	jne    0x14005df2d
   14005df01:	call   0x1400486b0
   14005df06:	mov    DWORD PTR [rax],r14d
   14005df09:	call   0x140048680
   14005df0e:	xor    r9d,r9d
   14005df11:	xor    r8d,r8d
   14005df14:	xor    edx,edx
   14005df16:	xor    ecx,ecx
   14005df18:	mov    DWORD PTR [rax],0x16
   14005df1e:	mov    QWORD PTR [rsp+0x20],r14
   14005df23:	call   0x14004e100
   14005df28:	or     eax,0xffffffff
   14005df2b:	jmp    0x14005dfa0
   14005df2d:	mov    QWORD PTR [rsp+0x50],r13
   14005df32:	mov    QWORD PTR [rsp+0x48],r15
   14005df37:	movzx  r15d,BYTE PTR [rcx+rbp*8+0x38]
   14005df3d:	add    r15b,r15b
   14005df40:	sar    r15b,1
   14005df43:	movsx  ecx,r15b
   14005df47:	sub    ecx,0x1
   14005df4a:	je     0x14005df64
   14005df4c:	sub    ecx,0x1
   14005df4f:	jne    0x14005df5c
   14005df51:	mov    eax,ebx
   14005df53:	not    eax
   14005df55:	test   al,0x1
   14005df57:	je     0x14005df6c
   14005df59:	and    ebx,0xfffffffe
   14005df5c:	mov    r13,rdx
   14005df5f:	jmp    0x14005e017
   14005df64:	mov    eax,ebx
   14005df66:	not    eax
   14005df68:	test   al,0x1
   14005df6a:	jne    0x14005dfb8
   14005df6c:	call   0x1400486b0
   14005df71:	mov    DWORD PTR [rax],r14d
   14005df74:	call   0x140048680
   14005df79:	xor    r9d,r9d
   14005df7c:	xor    r8d,r8d
   14005df7f:	xor    edx,edx
   14005df81:	xor    ecx,ecx
   14005df83:	mov    DWORD PTR [rax],0x16
   14005df89:	mov    QWORD PTR [rsp+0x20],r14
   14005df8e:	call   0x14004e100
   14005df93:	or     eax,0xffffffff
   14005df96:	mov    r13,QWORD PTR [rsp+0x50]
   14005df9b:	mov    r15,QWORD PTR [rsp+0x48]
   14005dfa0:	mov    rsi,QWORD PTR [rsp+0x60]
   14005dfa5:	mov    rbp,QWORD PTR [rsp+0x68]
   14005dfaa:	mov    r12,QWORD PTR [rsp+0x58]
   14005dfaf:	add    rsp,0x70
   14005dfb3:	pop    r14
   14005dfb5:	pop    rdi
   14005dfb6:	pop    rbx
   14005dfb7:	ret    
   14005dfb8:	mov    eax,0x4
   14005dfbd:	shr    ebx,1
   14005dfbf:	cmp    ebx,eax
   14005dfc1:	cmovb  ebx,eax
   14005dfc4:	mov    ecx,ebx
   14005dfc6:	call   0x14004de20
   14005dfcb:	test   rax,rax
   14005dfce:	mov    r13,rax
   14005dfd1:	jne    0x14005dfee
   14005dfd3:	call   0x140048680
   14005dfd8:	mov    DWORD PTR [rax],0xc
   14005dfde:	call   0x1400486b0
   14005dfe3:	mov    DWORD PTR [rax],0x8
   14005dfe9:	or     eax,0xffffffff
   14005dfec:	jmp    0x14005df96
   14005dfee:	mov    ecx,DWORD PTR [rsp+0x90]
   14005dff5:	xor    edx,edx
   14005dff7:	lea    r8d,[rdx+0x1]
   14005dffb:	call   0x140058e00
   14005e000:	lea    r8,[rip+0xfffffffffffa1ff9]        # 0x140000000
   14005e007:	mov    r11,rax
   14005e00a:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e012:	mov    QWORD PTR [rax+rbp*8+0x40],r11
   14005e017:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e01f:	mov    rdx,r13
   14005e022:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14005e027:	je     0x14005e0cc
   14005e02d:	movzx  ecx,BYTE PTR [rax+rbp*8+0x9]
   14005e032:	cmp    cl,0xa
   14005e035:	je     0x14005e0cc
   14005e03b:	test   ebx,ebx
   14005e03d:	je     0x14005e0cc
   14005e043:	mov    BYTE PTR [r13+0x0],cl
   14005e047:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e04f:	add    ebx,0xffffffff
   14005e052:	test   r15b,r15b
   14005e055:	lea    rdx,[r13+0x1]
   14005e059:	mov    esi,0x1
   14005e05e:	mov    BYTE PTR [rax+rbp*8+0x9],0xa
   14005e063:	je     0x14005e0cc
   14005e065:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e06d:	movzx  ecx,BYTE PTR [rax+rbp*8+0x39]
   14005e072:	cmp    cl,0xa
   14005e075:	je     0x14005e0cc
   14005e077:	test   ebx,ebx
   14005e079:	je     0x14005e0cc
   14005e07b:	mov    BYTE PTR [rdx],cl
   14005e07d:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e085:	add    rdx,rsi
   14005e088:	add    ebx,0xffffffff
   14005e08b:	cmp    r15b,0x1
   14005e08f:	mov    esi,0x2
   14005e094:	mov    BYTE PTR [rax+rbp*8+0x39],0xa
   14005e099:	jne    0x14005e0cc
   14005e09b:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e0a3:	movzx  ecx,BYTE PTR [rax+rbp*8+0x3a]
   14005e0a8:	cmp    cl,0xa
   14005e0ab:	je     0x14005e0cc
   14005e0ad:	test   ebx,ebx
   14005e0af:	je     0x14005e0cc
   14005e0b1:	mov    BYTE PTR [rdx],cl
   14005e0b3:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e0bb:	add    rdx,0x1
   14005e0bf:	mov    esi,0x3
   14005e0c4:	add    ebx,0xffffffff
   14005e0c7:	mov    BYTE PTR [rax+rbp*8+0x3a],0xa
   14005e0cc:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e0d4:	lea    r9,[rsp+0x30]
   14005e0d9:	mov    r8d,ebx
   14005e0dc:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14005e0e0:	mov    QWORD PTR [rsp+0x20],r14
   14005e0e5:	call   QWORD PTR [rip+0x60b5]        # 0x1400641a0
   14005e0eb:	test   eax,eax
   14005e0ed:	je     0x14005e62c
   14005e0f3:	movsxd rdx,DWORD PTR [rsp+0x30]
   14005e0f8:	test   edx,edx
   14005e0fa:	js     0x14005e62c
   14005e100:	mov    eax,ebx
   14005e102:	cmp    rdx,rax
   14005e105:	ja     0x14005e62c
   14005e10b:	lea    r8,[rip+0xfffffffffffa1eee]        # 0x140000000
   14005e112:	add    esi,edx
   14005e114:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e11c:	test   BYTE PTR [rax+rbp*8+0x8],0x80
   14005e121:	je     0x14005e6a2
   14005e127:	cmp    r15b,0x2
   14005e12b:	je     0x14005e437
   14005e131:	test   edx,edx
   14005e133:	je     0x14005e143
   14005e135:	cmp    BYTE PTR [r13+0x0],0xa
   14005e13a:	jne    0x14005e143
   14005e13c:	or     BYTE PTR [rax+rbp*8+0x8],0x4
   14005e141:	jmp    0x14005e148
   14005e143:	and    BYTE PTR [rax+rbp*8+0x8],0xfb
   14005e148:	movsxd rax,esi
   14005e14b:	mov    rbx,r13
   14005e14e:	mov    rdi,r13
   14005e151:	lea    rsi,[rax+r13*1]
   14005e155:	cmp    r13,rsi
   14005e158:	jae    0x14005e2cb
   14005e15e:	xchg   ax,ax
   14005e160:	movzx  eax,BYTE PTR [rdi]
   14005e163:	cmp    al,0x1a
   14005e165:	je     0x14005e2ab
   14005e16b:	cmp    al,0xd
   14005e16d:	je     0x14005e17e
   14005e16f:	mov    BYTE PTR [rbx],al
   14005e171:	add    rbx,0x1
   14005e175:	add    rdi,0x1
   14005e179:	jmp    0x14005e2a0
   14005e17e:	lea    rax,[rsi-0x1]
   14005e182:	cmp    rdi,rax
   14005e185:	jae    0x14005e1b0
   14005e187:	cmp    BYTE PTR [rdi+0x1],0xa
   14005e18b:	lea    rax,[rdi+0x1]
   14005e18f:	jne    0x14005e1a1
   14005e191:	add    rdi,0x2
   14005e195:	mov    BYTE PTR [rbx],0xa
   14005e198:	add    rbx,0x1
   14005e19c:	jmp    0x14005e2a0
   14005e1a1:	mov    BYTE PTR [rbx],0xd
   14005e1a4:	add    rbx,0x1
   14005e1a8:	mov    rdi,rax
   14005e1ab:	jmp    0x14005e2a0
   14005e1b0:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e1b8:	lea    r9,[rsp+0x30]
   14005e1bd:	lea    rdx,[rsp+0xa0]
   14005e1c5:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14005e1c9:	mov    r8d,0x1
   14005e1cf:	add    rdi,0x1
   14005e1d3:	mov    QWORD PTR [rsp+0x20],r14
   14005e1d8:	call   QWORD PTR [rip+0x5fc2]        # 0x1400641a0
   14005e1de:	test   eax,eax
   14005e1e0:	jne    0x14005e1f0
   14005e1e2:	call   QWORD PTR [rip+0x6418]        # 0x140064600
   14005e1e8:	test   eax,eax
   14005e1ea:	jne    0x14005e289
   14005e1f0:	cmp    DWORD PTR [rsp+0x30],r14d
   14005e1f5:	je     0x14005e289
   14005e1fb:	lea    r8,[rip+0xfffffffffffa1dfe]        # 0x140000000
   14005e202:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e20a:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14005e20f:	je     0x14005e241
   14005e211:	cmp    BYTE PTR [rsp+0xa0],0xa
   14005e219:	jne    0x14005e224
   14005e21b:	mov    BYTE PTR [rbx],0xa
   14005e21e:	add    rbx,0x1
   14005e222:	jmp    0x14005e2a0
   14005e224:	mov    BYTE PTR [rbx],0xd
   14005e227:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e22f:	movzx  eax,BYTE PTR [rsp+0xa0]
   14005e237:	mov    BYTE PTR [rcx+rbp*8+0x9],al
   14005e23b:	add    rbx,0x1
   14005e23f:	jmp    0x14005e2a0
   14005e241:	cmp    rbx,r13
   14005e244:	jne    0x14005e259
   14005e246:	cmp    BYTE PTR [rsp+0xa0],0xa
   14005e24e:	jne    0x14005e259
   14005e250:	mov    BYTE PTR [rbx],0xa
   14005e253:	add    rbx,0x1
   14005e257:	jmp    0x14005e2a0
   14005e259:	mov    ecx,DWORD PTR [rsp+0x90]
   14005e260:	mov    r8d,0x1
   14005e266:	or     rdx,0xffffffffffffffff
   14005e26a:	call   0x140058e00
   14005e26f:	cmp    BYTE PTR [rsp+0xa0],0xa
   14005e277:	je     0x14005e299
   14005e279:	mov    BYTE PTR [rbx],0xd
   14005e27c:	add    rbx,0x1
   14005e280:	lea    r8,[rip+0xfffffffffffa1d79]        # 0x140000000
   14005e287:	jmp    0x14005e2a0
   14005e289:	mov    BYTE PTR [rbx],0xd
   14005e28c:	add    rbx,0x1
   14005e290:	lea    r8,[rip+0xfffffffffffa1d69]        # 0x140000000
   14005e297:	jmp    0x14005e2a0
   14005e299:	lea    r8,[rip+0xfffffffffffa1d60]        # 0x140000000
   14005e2a0:	cmp    rdi,rsi
   14005e2a3:	jb     0x14005e160
   14005e2a9:	jmp    0x14005e2cb
   14005e2ab:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e2b3:	test   BYTE PTR [rax+rbp*8+0x8],0x40
   14005e2b8:	jne    0x14005e2c1
   14005e2ba:	or     BYTE PTR [rax+rbp*8+0x8],0x2
   14005e2bf:	jmp    0x14005e2cb
   14005e2c1:	movzx  eax,BYTE PTR [rdi]
   14005e2c4:	add    rbx,0x1
   14005e2c8:	mov    BYTE PTR [rbx-0x1],al
   14005e2cb:	mov    esi,ebx
   14005e2cd:	sub    esi,r13d
   14005e2d0:	cmp    r15b,0x1
   14005e2d4:	jne    0x14005e691
   14005e2da:	test   esi,esi
   14005e2dc:	je     0x14005e680
   14005e2e2:	mov    al,BYTE PTR [rbx-0x1]
   14005e2e5:	sub    rbx,0x1
   14005e2e9:	test   al,al
   14005e2eb:	js     0x14005e2f6
   14005e2ed:	add    rbx,0x1
   14005e2f1:	jmp    0x14005e3c7
   14005e2f6:	movzx  eax,al
   14005e2f9:	mov    edx,0x1
   14005e2fe:	cmp    BYTE PTR [rax+r8*1+0x88280],r14b
   14005e306:	jne    0x14005e327
   14005e308:	cmp    edx,0x4
   14005e30b:	jg     0x14005e327
   14005e30d:	cmp    rbx,r13
   14005e310:	jb     0x14005e327
   14005e312:	movzx  eax,BYTE PTR [rbx-0x1]
   14005e316:	sub    rbx,0x1
   14005e31a:	add    edx,0x1
   14005e31d:	cmp    BYTE PTR [rax+r8*1+0x88280],r14b
   14005e325:	je     0x14005e308
   14005e327:	movzx  ecx,BYTE PTR [rbx]
   14005e32a:	movsx  eax,BYTE PTR [rcx+r8*1+0x88280]
   14005e333:	test   eax,eax
   14005e335:	jne    0x14005e352
   14005e337:	call   0x140048680
   14005e33c:	mov    r15,QWORD PTR [rsp+0x98]
   14005e344:	or     edi,0xffffffff
   14005e347:	mov    DWORD PTR [rax],0x2a
   14005e34d:	jmp    0x14005e6aa
   14005e352:	add    eax,0x1
   14005e355:	cmp    eax,edx
   14005e357:	jne    0x14005e361
   14005e359:	movsxd rax,edx
   14005e35c:	add    rbx,rax
   14005e35f:	jmp    0x14005e3c7
   14005e361:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e369:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14005e36e:	je     0x14005e3b0
   14005e370:	add    rbx,0x1
   14005e374:	cmp    edx,0x2
   14005e377:	mov    BYTE PTR [rax+rbp*8+0x9],cl
   14005e37b:	jl     0x14005e390
   14005e37d:	movzx  eax,BYTE PTR [rbx]
   14005e380:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e388:	add    rbx,0x1
   14005e38c:	mov    BYTE PTR [rcx+rbp*8+0x39],al
   14005e390:	cmp    edx,0x3
   14005e393:	jne    0x14005e3a8
   14005e395:	movzx  eax,BYTE PTR [rbx]
   14005e398:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e3a0:	add    rbx,0x1
   14005e3a4:	mov    BYTE PTR [rcx+rbp*8+0x3a],al
   14005e3a8:	movsxd rax,edx
   14005e3ab:	sub    rbx,rax
   14005e3ae:	jmp    0x14005e3c7
   14005e3b0:	mov    ecx,DWORD PTR [rsp+0x90]
   14005e3b7:	neg    edx
   14005e3b9:	mov    r8d,0x1
   14005e3bf:	movsxd rdx,edx
   14005e3c2:	call   0x140058e00
   14005e3c7:	mov    eax,DWORD PTR [rsp+0x34]
   14005e3cb:	mov    r15,QWORD PTR [rsp+0x98]
   14005e3d3:	sub    ebx,r13d
   14005e3d6:	shr    eax,1
   14005e3d8:	mov    r9d,ebx
   14005e3db:	mov    r8,r13
   14005e3de:	mov    DWORD PTR [rsp+0x28],eax
   14005e3e2:	xor    edx,edx
   14005e3e4:	mov    ecx,0xfde9
   14005e3e9:	mov    QWORD PTR [rsp+0x20],r15
   14005e3ee:	call   QWORD PTR [rip+0x6224]        # 0x140064618
   14005e3f4:	test   eax,eax
   14005e3f6:	mov    esi,eax
   14005e3f8:	jne    0x14005e40f
   14005e3fa:	call   QWORD PTR [rip+0x6200]        # 0x140064600
   14005e400:	mov    ecx,eax
   14005e402:	call   0x1400486e0
   14005e407:	or     edi,0xffffffff
   14005e40a:	jmp    0x14005e6aa
   14005e40f:	cmp    eax,ebx
   14005e411:	lea    rax,[rip+0xfffffffffffa1be8]        # 0x140000000
   14005e418:	mov    rdi,0xfffffffffffffffe
   14005e41f:	mov    rax,QWORD PTR [rax+r12*8+0x8e700]
   14005e427:	setne  r14b
   14005e42b:	add    esi,esi
   14005e42d:	mov    DWORD PTR [rax+rbp*8+0x48],r14d
   14005e432:	jmp    0x14005e6aa
   14005e437:	test   edx,edx
   14005e439:	je     0x14005e44a
   14005e43b:	cmp    WORD PTR [r13+0x0],0xa
   14005e441:	jne    0x14005e44a
   14005e443:	or     BYTE PTR [rax+rbp*8+0x8],0x4
   14005e448:	jmp    0x14005e44f
   14005e44a:	and    BYTE PTR [rax+rbp*8+0x8],0xfb
   14005e44f:	movsxd rax,esi
   14005e452:	mov    rbx,r13
   14005e455:	mov    rdi,r13
   14005e458:	lea    rsi,[rax+r13*1]
   14005e45c:	cmp    r13,rsi
   14005e45f:	jae    0x14005e616
   14005e465:	mov    r15,0xfffffffffffffffe
   14005e46c:	data16 data16 xchg ax,ax
   14005e470:	movzx  eax,WORD PTR [rdi]
   14005e473:	cmp    ax,0x1a
   14005e477:	je     0x14005e5f5
   14005e47d:	cmp    ax,0xd
   14005e481:	je     0x14005e493
   14005e483:	mov    WORD PTR [rbx],ax
   14005e486:	add    rbx,0x2
   14005e48a:	add    rdi,0x2
   14005e48e:	jmp    0x14005e5ea
   14005e493:	lea    rax,[rsi-0x2]
   14005e497:	cmp    rdi,rax
   14005e49a:	jae    0x14005e4ca
   14005e49c:	cmp    WORD PTR [rdi+0x2],0xa
   14005e4a1:	lea    rax,[rdi+0x2]
   14005e4a5:	jne    0x14005e4b9
   14005e4a7:	add    rdi,0x4
   14005e4ab:	mov    WORD PTR [rbx],0xa
   14005e4b0:	add    rbx,0x2
   14005e4b4:	jmp    0x14005e5ea
   14005e4b9:	mov    WORD PTR [rbx],0xd
   14005e4be:	add    rbx,0x2
   14005e4c2:	mov    rdi,rax
   14005e4c5:	jmp    0x14005e5ea
   14005e4ca:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e4d2:	lea    r9,[rsp+0x30]
   14005e4d7:	lea    rdx,[rsp+0xa8]
   14005e4df:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14005e4e3:	mov    r8d,0x2
   14005e4e9:	add    rdi,0x2
   14005e4ed:	mov    QWORD PTR [rsp+0x20],r14
   14005e4f2:	call   QWORD PTR [rip+0x5ca8]        # 0x1400641a0
   14005e4f8:	test   eax,eax
   14005e4fa:	jne    0x14005e50a
   14005e4fc:	call   QWORD PTR [rip+0x60fe]        # 0x140064600
   14005e502:	test   eax,eax
   14005e504:	jne    0x14005e5d1
   14005e50a:	cmp    DWORD PTR [rsp+0x30],r14d
   14005e50f:	je     0x14005e5d1
   14005e515:	lea    r8,[rip+0xfffffffffffa1ae4]        # 0x140000000
   14005e51c:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e524:	test   BYTE PTR [rax+rbp*8+0x8],0x48
   14005e529:	je     0x14005e584
   14005e52b:	cmp    WORD PTR [rsp+0xa8],0xa
   14005e534:	jne    0x14005e544
   14005e536:	mov    WORD PTR [rbx],0xa
   14005e53b:	add    rbx,0x2
   14005e53f:	jmp    0x14005e5ea
   14005e544:	mov    WORD PTR [rbx],0xd
   14005e549:	movzx  eax,BYTE PTR [rsp+0xa8]
   14005e551:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e559:	mov    BYTE PTR [rcx+rbp*8+0x9],al
   14005e55d:	movzx  eax,BYTE PTR [rsp+0xa9]
   14005e565:	mov    rcx,QWORD PTR [r8+r12*8+0x8e700]
   14005e56d:	mov    BYTE PTR [rcx+rbp*8+0x39],al
   14005e571:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e579:	add    rbx,0x2
   14005e57d:	mov    BYTE PTR [rax+rbp*8+0x3a],0xa
   14005e582:	jmp    0x14005e5ea
   14005e584:	cmp    rbx,r13
   14005e587:	jne    0x14005e59f
   14005e589:	cmp    WORD PTR [rsp+0xa8],0xa
   14005e592:	jne    0x14005e59f
   14005e594:	mov    WORD PTR [rbx],0xa
   14005e599:	add    rbx,0x2
   14005e59d:	jmp    0x14005e5ea
   14005e59f:	mov    ecx,DWORD PTR [rsp+0x90]
   14005e5a6:	mov    r8d,0x1
   14005e5ac:	mov    rdx,r15
   14005e5af:	call   0x140058e00
   14005e5b4:	cmp    WORD PTR [rsp+0xa8],0xa
   14005e5bd:	je     0x14005e5e3
   14005e5bf:	mov    WORD PTR [rbx],0xd
   14005e5c4:	add    rbx,0x2
   14005e5c8:	lea    r8,[rip+0xfffffffffffa1a31]        # 0x140000000
   14005e5cf:	jmp    0x14005e5ea
   14005e5d1:	mov    WORD PTR [rbx],0xd
   14005e5d6:	add    rbx,0x2
   14005e5da:	lea    r8,[rip+0xfffffffffffa1a1f]        # 0x140000000
   14005e5e1:	jmp    0x14005e5ea
   14005e5e3:	lea    r8,[rip+0xfffffffffffa1a16]        # 0x140000000
   14005e5ea:	cmp    rdi,rsi
   14005e5ed:	jb     0x14005e470
   14005e5f3:	jmp    0x14005e616
   14005e5f5:	mov    rax,QWORD PTR [r8+r12*8+0x8e700]
   14005e5fd:	test   BYTE PTR [rax+rbp*8+0x8],0x40
   14005e602:	jne    0x14005e60b
   14005e604:	or     BYTE PTR [rax+rbp*8+0x8],0x2
   14005e609:	jmp    0x14005e616
   14005e60b:	movzx  eax,WORD PTR [rdi]
   14005e60e:	add    rbx,0x2
   14005e612:	mov    WORD PTR [rbx-0x2],ax
   14005e616:	mov    r15,QWORD PTR [rsp+0x98]
   14005e61e:	mov    esi,ebx
   14005e620:	mov    rdi,0xfffffffffffffffe
   14005e627:	sub    esi,r13d
   14005e62a:	jmp    0x14005e6aa
   14005e62c:	call   QWORD PTR [rip+0x5fce]        # 0x140064600
   14005e632:	cmp    eax,0x5
   14005e635:	jne    0x14005e65a
   14005e637:	call   0x140048680
   14005e63c:	mov    DWORD PTR [rax],0x9
   14005e642:	call   0x1400486b0
   14005e647:	mov    r15,QWORD PTR [rsp+0x98]
   14005e64f:	mov    DWORD PTR [rax],0x5
   14005e655:	or     edi,0xffffffff
   14005e658:	jmp    0x14005e6aa
   14005e65a:	cmp    eax,0x6d
   14005e65d:	jne    0x14005e66c
   14005e65f:	mov    r15,QWORD PTR [rsp+0x98]
   14005e667:	mov    edi,r14d
   14005e66a:	jmp    0x14005e6aa
   14005e66c:	mov    ecx,eax
   14005e66e:	call   0x1400486e0
   14005e673:	mov    r15,QWORD PTR [rsp+0x98]
   14005e67b:	or     edi,0xffffffff
   14005e67e:	jmp    0x14005e6aa
   14005e680:	mov    r15,QWORD PTR [rsp+0x98]
   14005e688:	mov    rdi,0xfffffffffffffffe
   14005e68f:	jmp    0x14005e6aa
   14005e691:	mov    r15,QWORD PTR [rsp+0x98]
   14005e699:	mov    rdi,0xfffffffffffffffe
   14005e6a0:	jmp    0x14005e6aa
   14005e6a2:	mov    r15,QWORD PTR [rsp+0x98]
   14005e6aa:	cmp    r13,r15
   14005e6ad:	je     0x14005e6b7
   14005e6af:	mov    rcx,r13
   14005e6b2:	call   0x1400485c0
   14005e6b7:	cmp    edi,0xfffffffe
   14005e6ba:	cmove  edi,esi
   14005e6bd:	mov    eax,edi
   14005e6bf:	jmp    0x14005df96
   14005e6c4:	xor    eax,eax
   14005e6c6:	jmp    0x14005dfa0
   14005e6cb:	call   0x1400486b0
   14005e6d0:	xor    r14d,r14d
   14005e6d3:	mov    DWORD PTR [rax],r14d
   14005e6d6:	call   0x140048680
   14005e6db:	xor    r9d,r9d
   14005e6de:	xor    r8d,r8d
   14005e6e1:	xor    edx,edx
   14005e6e3:	xor    ecx,ecx
   14005e6e5:	mov    DWORD PTR [rax],0x9
   14005e6eb:	mov    QWORD PTR [rsp+0x20],r14
   14005e6f0:	call   0x14004e100
   14005e6f5:	or     eax,0xffffffff
   14005e6f8:	add    rsp,0x70
   14005e6fc:	pop    r14
   14005e6fe:	pop    rdi
   14005e6ff:	pop    rbx
   14005e700:	ret    
   14005e701:	int3   
   14005e702:	int3   
   14005e703:	int3   
   14005e704:	int3   
   14005e705:	int3   
   14005e706:	int3   
   14005e707:	int3   
   14005e708:	int3   
   14005e709:	int3   
   14005e70a:	int3   
   14005e70b:	int3   
   14005e70c:	int3   
   14005e70d:	int3   
   14005e70e:	int3   
   14005e70f:	int3   
   14005e710:	mov    QWORD PTR [rsp+0x10],rbx
   14005e715:	mov    QWORD PTR [rsp+0x18],rsi
   14005e71a:	mov    DWORD PTR [rsp+0x8],ecx
   14005e71e:	push   rdi
   14005e71f:	push   r12
   14005e721:	push   r13
   14005e723:	push   r14
   14005e725:	push   r15
   14005e727:	sub    rsp,0x30
   14005e72b:	mov    esi,r8d
   14005e72e:	mov    r12,rdx
   14005e731:	movsxd rbx,ecx
   14005e734:	cmp    ebx,0xfffffffe
   14005e737:	jne    0x14005e755
   14005e739:	call   0x1400486b0
   14005e73e:	xor    edi,edi
   14005e740:	mov    DWORD PTR [rax],edi
   14005e742:	call   0x140048680
   14005e747:	mov    DWORD PTR [rax],0x9
   14005e74d:	or     eax,0xffffffff
   14005e750:	jmp    0x14005e86f
   14005e755:	test   ecx,ecx
   14005e757:	js     0x14005e844
   14005e75d:	cmp    ebx,DWORD PTR [rip+0x2ff81]        # 0x14008e6e4
   14005e763:	jae    0x14005e844
   14005e769:	mov    rax,rbx
   14005e76c:	mov    r13,rbx
   14005e76f:	sar    r13,0x5
   14005e773:	lea    r15,[rip+0x2ff86]        # 0x14008e700
   14005e77a:	and    eax,0x1f
   14005e77d:	lea    r14,[rax+rax*4]
   14005e781:	add    r14,r14
   14005e784:	mov    rax,QWORD PTR [r15+r13*8]
   14005e788:	mov    cl,BYTE PTR [rax+r14*8+0x8]
   14005e78d:	and    ecx,0x1
   14005e790:	jne    0x14005e7c2
   14005e792:	call   0x1400486b0
   14005e797:	xor    edi,edi
   14005e799:	mov    DWORD PTR [rax],edi
   14005e79b:	call   0x140048680
   14005e7a0:	mov    DWORD PTR [rax],0x9
   14005e7a6:	mov    QWORD PTR [rsp+0x20],rdi
   14005e7ab:	xor    r9d,r9d
   14005e7ae:	xor    r8d,r8d
   14005e7b1:	xor    edx,edx
   14005e7b3:	xor    ecx,ecx
   14005e7b5:	call   0x14004e100
   14005e7ba:	or     eax,0xffffffff
   14005e7bd:	jmp    0x14005e86f
   14005e7c2:	xor    edi,edi
   14005e7c4:	mov    eax,edi
   14005e7c6:	cmp    r8d,0x7fffffff
   14005e7cd:	setbe  al
   14005e7d0:	test   eax,eax
   14005e7d2:	jne    0x14005e7ff
   14005e7d4:	call   0x1400486b0
   14005e7d9:	mov    DWORD PTR [rax],edi
   14005e7db:	call   0x140048680
   14005e7e0:	mov    DWORD PTR [rax],0x16
   14005e7e6:	mov    QWORD PTR [rsp+0x20],rdi
   14005e7eb:	xor    r9d,r9d
   14005e7ee:	xor    r8d,r8d
   14005e7f1:	xor    edx,edx
   14005e7f3:	xor    ecx,ecx
   14005e7f5:	call   0x14004e100
   14005e7fa:	or     eax,0xffffffff
   14005e7fd:	jmp    0x14005e86f
   14005e7ff:	mov    ecx,ebx
   14005e801:	call   0x14005a560
   14005e806:	nop
   14005e807:	mov    rax,QWORD PTR [r15+r13*8]
   14005e80b:	test   BYTE PTR [rax+r14*8+0x8],0x1
   14005e811:	je     0x14005e824
   14005e813:	mov    r8d,esi
   14005e816:	mov    rdx,r12
   14005e819:	mov    ecx,ebx
   14005e81b:	call   0x14005de00
   14005e820:	mov    edi,eax
   14005e822:	jmp    0x14005e839
   14005e824:	call   0x140048680
   14005e829:	mov    DWORD PTR [rax],0x9
   14005e82f:	call   0x1400486b0
   14005e834:	mov    DWORD PTR [rax],edi
   14005e836:	or     edi,0xffffffff
   14005e839:	mov    ecx,ebx
   14005e83b:	call   0x14005a630
   14005e840:	mov    eax,edi
   14005e842:	jmp    0x14005e86f
   14005e844:	call   0x1400486b0
   14005e849:	xor    edi,edi
   14005e84b:	mov    DWORD PTR [rax],edi
   14005e84d:	call   0x140048680
   14005e852:	mov    DWORD PTR [rax],0x9
   14005e858:	mov    QWORD PTR [rsp+0x20],rdi
   14005e85d:	xor    r9d,r9d
   14005e860:	xor    r8d,r8d
   14005e863:	xor    edx,edx
   14005e865:	xor    ecx,ecx
   14005e867:	call   0x14004e100
   14005e86c:	or     eax,0xffffffff
   14005e86f:	mov    rbx,QWORD PTR [rsp+0x68]
   14005e874:	mov    rsi,QWORD PTR [rsp+0x70]
   14005e879:	add    rsp,0x30
   14005e87d:	pop    r15
   14005e87f:	pop    r14
   14005e881:	pop    r13
   14005e883:	pop    r12
   14005e885:	pop    rdi
   14005e886:	ret    
   14005e887:	int3   
   14005e888:	int3   
   14005e889:	int3   
   14005e88a:	int3   
   14005e88b:	int3   
   14005e88c:	int3   
   14005e88d:	int3   
   14005e88e:	int3   
   14005e88f:	int3   
   14005e890:	rex push rbp
   14005e892:	sub    rsp,0x30
   14005e896:	mov    rbp,rdx
   14005e899:	mov    ecx,DWORD PTR [rbp+0x60]
   14005e89c:	call   0x14005a630
   14005e8a1:	add    rsp,0x30
   14005e8a5:	pop    rbp
   14005e8a6:	ret    
   14005e8a7:	int3   
   14005e8a8:	int3   
   14005e8a9:	int3   
   14005e8aa:	int3   
   14005e8ab:	int3   
   14005e8ac:	int3   
   14005e8ad:	int3   
   14005e8ae:	int3   
   14005e8af:	int3   
   14005e8b0:	mov    QWORD PTR [rsp+0x20],rbp
   14005e8b5:	push   rsi
   14005e8b6:	push   rdi
   14005e8b7:	push   r13
   14005e8b9:	sub    rsp,0x20
   14005e8bd:	mov    rbp,rdx
   14005e8c0:	xor    edi,edi
   14005e8c2:	xor    edx,edx
   14005e8c4:	lea    r8d,[rdi+0x1]
   14005e8c8:	mov    esi,ecx
   14005e8ca:	call   0x140058e00
   14005e8cf:	cmp    rax,0xffffffffffffffff
   14005e8d3:	mov    r13,rax
   14005e8d6:	je     0x14005ea54
   14005e8dc:	lea    r8d,[rdi+0x2]
   14005e8e0:	xor    edx,edx
   14005e8e2:	mov    ecx,esi
   14005e8e4:	call   0x140058e00
   14005e8e9:	cmp    rax,0xffffffffffffffff
   14005e8ed:	je     0x14005ea54
   14005e8f3:	mov    QWORD PTR [rsp+0x40],rbx
   14005e8f8:	mov    rbx,rbp
   14005e8fb:	mov    QWORD PTR [rsp+0x50],r14
   14005e900:	sub    rbx,rax
   14005e903:	test   rbx,rbx
   14005e906:	jle    0x14005e9d3
   14005e90c:	call   QWORD PTR [rip+0x5916]        # 0x140064228
   14005e912:	mov    r14d,0x1000
   14005e918:	lea    edx,[rdi+0x8]
   14005e91b:	mov    rcx,rax
   14005e91e:	mov    r8,r14
   14005e921:	call   QWORD PTR [rip+0x58f9]        # 0x140064220
   14005e927:	test   rax,rax
   14005e92a:	mov    rbp,rax
   14005e92d:	jne    0x14005e959
   14005e92f:	call   0x140048680
   14005e934:	mov    DWORD PTR [rax],0xc
   14005e93a:	call   0x140048680
   14005e93f:	mov    eax,DWORD PTR [rax]
   14005e941:	mov    rbx,QWORD PTR [rsp+0x40]
   14005e946:	mov    r14,QWORD PTR [rsp+0x50]
   14005e94b:	mov    rbp,QWORD PTR [rsp+0x58]
   14005e950:	add    rsp,0x20
   14005e954:	pop    r13
   14005e956:	pop    rdi
   14005e957:	pop    rsi
   14005e958:	ret    
   14005e959:	mov    edx,0x8000
   14005e95e:	mov    ecx,esi
   14005e960:	mov    QWORD PTR [rsp+0x48],r12
   14005e965:	call   0x14005eb30
   14005e96a:	mov    r12d,eax
   14005e96d:	data16 xchg ax,ax
   14005e970:	mov    r8d,ebx
   14005e973:	cmp    rbx,r14
   14005e976:	mov    rdx,rbp
   14005e979:	cmovge r8d,r14d
   14005e97d:	mov    ecx,esi
   14005e97f:	call   0x140059010
   14005e984:	cmp    eax,0xffffffff
   14005e987:	je     0x14005e995
   14005e989:	cdqe   
   14005e98b:	sub    rbx,rax
   14005e98e:	test   rbx,rbx
   14005e991:	jg     0x14005e970
   14005e993:	jmp    0x14005e9ae
   14005e995:	call   0x1400486b0
   14005e99a:	cmp    DWORD PTR [rax],0x5
   14005e99d:	jne    0x14005e9aa
   14005e99f:	call   0x140048680
   14005e9a4:	mov    DWORD PTR [rax],0xd
   14005e9aa:	or     rdi,0xffffffffffffffff
   14005e9ae:	mov    edx,r12d
   14005e9b1:	mov    ecx,esi
   14005e9b3:	call   0x14005eb30
   14005e9b8:	call   QWORD PTR [rip+0x586a]        # 0x140064228
   14005e9be:	mov    r8,rbp
   14005e9c1:	mov    rcx,rax
   14005e9c4:	xor    edx,edx
   14005e9c6:	call   QWORD PTR [rip+0x584c]        # 0x140064218
   14005e9cc:	mov    r12,QWORD PTR [rsp+0x48]
   14005e9d1:	jmp    0x14005ea2c
   14005e9d3:	test   rbx,rbx
   14005e9d6:	jns    0x14005ea36
   14005e9d8:	xor    r8d,r8d
   14005e9db:	mov    rdx,rbp
   14005e9de:	mov    ecx,esi
   14005e9e0:	call   0x140058e00
   14005e9e5:	cmp    rax,0xffffffffffffffff
   14005e9e9:	je     0x14005e93a
   14005e9ef:	mov    ecx,esi
   14005e9f1:	call   0x14005a4c0
   14005e9f6:	mov    rcx,rax
   14005e9f9:	call   QWORD PTR [rip+0x57c9]        # 0x1400641c8
   14005e9ff:	neg    eax
   14005ea01:	sbb    rdi,rdi
   14005ea04:	neg    rdi
   14005ea07:	sub    rdi,0x1
   14005ea0b:	cmp    rdi,0xffffffffffffffff
   14005ea0f:	jne    0x14005ea36
   14005ea11:	call   0x140048680
   14005ea16:	mov    DWORD PTR [rax],0xd
   14005ea1c:	call   0x1400486b0
   14005ea21:	mov    rbx,rax
   14005ea24:	call   QWORD PTR [rip+0x5bd6]        # 0x140064600
   14005ea2a:	mov    DWORD PTR [rbx],eax
   14005ea2c:	cmp    rdi,0xffffffffffffffff
   14005ea30:	je     0x14005e93a
   14005ea36:	xor    r8d,r8d
   14005ea39:	mov    rdx,r13
   14005ea3c:	mov    ecx,esi
   14005ea3e:	call   0x140058e00
   14005ea43:	cmp    rax,0xffffffffffffffff
   14005ea47:	je     0x14005e93a
   14005ea4d:	xor    eax,eax
   14005ea4f:	jmp    0x14005e941
   14005ea54:	call   0x140048680
   14005ea59:	mov    rbp,QWORD PTR [rsp+0x58]
   14005ea5e:	mov    eax,DWORD PTR [rax]
   14005ea60:	add    rsp,0x20
   14005ea64:	pop    r13
   14005ea66:	pop    rdi
   14005ea67:	pop    rsi
   14005ea68:	ret    
   14005ea69:	int3   
   14005ea6a:	int3   
   14005ea6b:	int3   
   14005ea6c:	int3   
   14005ea6d:	int3   
   14005ea6e:	int3   
   14005ea6f:	int3   
   14005ea70:	mov    QWORD PTR [rsp+0x8],rbx
   14005ea75:	mov    QWORD PTR [rsp+0x10],rsi
   14005ea7a:	push   rdi
   14005ea7b:	sub    rsp,0x20
   14005ea7f:	movsxd rbx,ecx
   14005ea82:	mov    edi,r8d
   14005ea85:	mov    esi,edx
   14005ea87:	mov    ecx,ebx
   14005ea89:	call   0x14005a4c0
   14005ea8e:	cmp    rax,0xffffffffffffffff
   14005ea92:	jne    0x14005eab2
   14005ea94:	call   0x140048680
   14005ea99:	mov    DWORD PTR [rax],0x9
   14005ea9f:	or     eax,0xffffffff
   14005eaa2:	mov    rbx,QWORD PTR [rsp+0x30]
   14005eaa7:	mov    rsi,QWORD PTR [rsp+0x38]
   14005eaac:	add    rsp,0x20
   14005eab0:	pop    rdi
   14005eab1:	ret    
   14005eab2:	mov    r9d,edi
   14005eab5:	xor    r8d,r8d
   14005eab8:	mov    edx,esi
   14005eaba:	mov    rcx,rax
   14005eabd:	call   QWORD PTR [rip+0x56e5]        # 0x1400641a8
   14005eac3:	cmp    eax,0xffffffff
   14005eac6:	mov    edi,eax
   14005eac8:	jne    0x14005eaee
   14005eaca:	call   QWORD PTR [rip+0x5b30]        # 0x140064600
   14005ead0:	test   eax,eax
   14005ead2:	je     0x14005eaee
   14005ead4:	mov    ecx,eax
   14005ead6:	call   0x1400486e0
   14005eadb:	or     eax,0xffffffff
   14005eade:	mov    rbx,QWORD PTR [rsp+0x30]
   14005eae3:	mov    rsi,QWORD PTR [rsp+0x38]
   14005eae8:	add    rsp,0x20
   14005eaec:	pop    rdi
   14005eaed:	ret    
   14005eaee:	mov    rsi,QWORD PTR [rsp+0x38]
   14005eaf3:	mov    rax,rbx
   14005eaf6:	mov    rdx,rbx
   14005eaf9:	mov    rbx,QWORD PTR [rsp+0x30]
   14005eafe:	and    eax,0x1f
   14005eb01:	sar    rdx,0x5
   14005eb05:	lea    rcx,[rax+rax*4]
   14005eb09:	lea    r8,[rip+0x2fbf0]        # 0x14008e700
   14005eb10:	mov    rax,QWORD PTR [r8+rdx*8]
   14005eb14:	add    rcx,rcx
   14005eb17:	and    BYTE PTR [rax+rcx*8+0x8],0xfd
   14005eb1c:	mov    eax,edi
   14005eb1e:	add    rsp,0x20
   14005eb22:	pop    rdi
   14005eb23:	ret    
   14005eb24:	int3   
   14005eb25:	int3   
   14005eb26:	int3   
   14005eb27:	int3   
   14005eb28:	int3   
   14005eb29:	int3   
   14005eb2a:	int3   
   14005eb2b:	int3   
   14005eb2c:	int3   
   14005eb2d:	int3   
   14005eb2e:	int3   
   14005eb2f:	int3   
   14005eb30:	mov    QWORD PTR [rsp+0x8],rbx
   14005eb35:	mov    QWORD PTR [rsp+0x10],rsi
   14005eb3a:	mov    QWORD PTR [rsp+0x18],rdi
   14005eb3f:	movsxd rax,ecx
   14005eb42:	mov    r9d,edx
   14005eb45:	lea    rdi,[rip+0x2fbb4]        # 0x14008e700
   14005eb4c:	mov    r10,rax
   14005eb4f:	and    eax,0x1f
   14005eb52:	mov    esi,0x4000
   14005eb57:	lea    r8,[rax+rax*4]
   14005eb5b:	sar    r10,0x5
   14005eb5f:	mov    edx,0x10000
   14005eb64:	mov    rcx,QWORD PTR [rdi+r10*8]
   14005eb68:	add    r8,r8
   14005eb6b:	movzx  eax,BYTE PTR [rcx+r8*8+0x38]
   14005eb71:	mov    r11b,BYTE PTR [rcx+r8*8+0x8]
   14005eb76:	add    al,al
   14005eb78:	and    r11d,0x80
   14005eb7f:	movsx  ebx,al
   14005eb82:	sar    ebx,1
   14005eb84:	cmp    r9d,esi
   14005eb87:	je     0x14005ebe1
   14005eb89:	cmp    r9d,0x8000
   14005eb90:	je     0x14005ebd9
   14005eb92:	cmp    r9d,edx
   14005eb95:	je     0x14005ebc1
   14005eb97:	cmp    r9d,0x20000
   14005eb9e:	je     0x14005ebc1
   14005eba0:	cmp    r9d,0x40000
   14005eba7:	jne    0x14005ebf1
   14005eba9:	or     BYTE PTR [rcx+r8*8+0x8],0x80
   14005ebaf:	mov    rax,QWORD PTR [rdi+r10*8]
   14005ebb3:	and    BYTE PTR [rax+r8*8+0x38],0x81
   14005ebb9:	or     BYTE PTR [rax+r8*8+0x38],0x1
   14005ebbf:	jmp    0x14005ebf1
   14005ebc1:	or     BYTE PTR [rcx+r8*8+0x8],0x80
   14005ebc7:	mov    rax,QWORD PTR [rdi+r10*8]
   14005ebcb:	and    BYTE PTR [rax+r8*8+0x38],0x82
   14005ebd1:	or     BYTE PTR [rax+r8*8+0x38],0x2
   14005ebd7:	jmp    0x14005ebf1
   14005ebd9:	and    BYTE PTR [rcx+r8*8+0x8],0x7f
   14005ebdf:	jmp    0x14005ebf1
   14005ebe1:	or     BYTE PTR [rcx+r8*8+0x8],0x80
   14005ebe7:	mov    rcx,QWORD PTR [rdi+r10*8]
   14005ebeb:	and    BYTE PTR [rcx+r8*8+0x38],0x80
   14005ebf1:	test   r11d,r11d
   14005ebf4:	jne    0x14005ec0b
   14005ebf6:	mov    eax,0x8000
   14005ebfb:	mov    rbx,QWORD PTR [rsp+0x8]
   14005ec00:	mov    rsi,QWORD PTR [rsp+0x10]
   14005ec05:	mov    rdi,QWORD PTR [rsp+0x18]
   14005ec0a:	ret    
   14005ec0b:	mov    rdi,QWORD PTR [rsp+0x18]
   14005ec10:	test   ebx,ebx
   14005ec12:	mov    rbx,QWORD PTR [rsp+0x8]
   14005ec17:	cmove  edx,esi
   14005ec1a:	mov    rsi,QWORD PTR [rsp+0x10]
   14005ec1f:	mov    eax,edx
   14005ec21:	ret    
   14005ec22:	int3   
   14005ec23:	int3   
   14005ec24:	int3   
   14005ec25:	int3   
   14005ec26:	int3   
   14005ec27:	int3   
   14005ec28:	int3   
   14005ec29:	int3   
   14005ec2a:	int3   
   14005ec2b:	int3   
   14005ec2c:	int3   
   14005ec2d:	int3   
   14005ec2e:	int3   
   14005ec2f:	int3   
   14005ec30:	sub    rsp,0x38
   14005ec34:	test   rcx,rcx
   14005ec37:	jne    0x14005ec66
   14005ec39:	call   0x140048680
   14005ec3e:	xor    r9d,r9d
   14005ec41:	xor    r8d,r8d
   14005ec44:	xor    edx,edx
   14005ec46:	xor    ecx,ecx
   14005ec48:	mov    QWORD PTR [rsp+0x20],0x0
   14005ec51:	mov    DWORD PTR [rax],0x16
   14005ec57:	call   0x14004e100
   14005ec5c:	mov    eax,0x16
   14005ec61:	add    rsp,0x38
   14005ec65:	ret    
   14005ec66:	mov    eax,DWORD PTR [rip+0x2e97c]        # 0x14008d5e8
   14005ec6c:	mov    DWORD PTR [rcx],eax
   14005ec6e:	xor    eax,eax
   14005ec70:	add    rsp,0x38
   14005ec74:	ret    
   14005ec75:	int3   
   14005ec76:	int3   
   14005ec77:	int3   
   14005ec78:	int3   
   14005ec79:	int3   
   14005ec7a:	int3   
   14005ec7b:	int3   
   14005ec7c:	int3   
   14005ec7d:	int3   
   14005ec7e:	int3   
   14005ec7f:	int3   
   14005ec80:	mov    WORD PTR [rsp+0x8],cx
   14005ec85:	sub    rsp,0x68
   14005ec89:	cmp    cx,0xffff
   14005ec8e:	jne    0x14005ec98
   14005ec90:	or     ax,cx
   14005ec93:	add    rsp,0x68
   14005ec97:	ret    
   14005ec98:	test   rdx,rdx
   14005ec9b:	mov    BYTE PTR [rsp+0x58],0x0
   14005eca0:	jne    0x14005ed48
   14005eca6:	call   0x14004bd60
   14005ecab:	mov    r11,rax
   14005ecae:	mov    QWORD PTR [rsp+0x50],rax
   14005ecb3:	mov    rax,QWORD PTR [rax+0xc0]
   14005ecba:	cmp    rax,QWORD PTR [rip+0x28bdf]        # 0x1400878a0
   14005ecc1:	mov    QWORD PTR [rsp+0x40],rax
   14005ecc6:	mov    rdx,QWORD PTR [r11+0xb8]
   14005eccd:	mov    QWORD PTR [rsp+0x48],rdx
   14005ecd2:	je     0x14005ecf7
   14005ecd4:	mov    ecx,DWORD PTR [r11+0xc8]
   14005ecdb:	test   DWORD PTR [rip+0x28a47],ecx        # 0x140087728
   14005ece1:	jne    0x14005ecf7
   14005ece3:	call   0x14004f030
   14005ece8:	mov    r11,QWORD PTR [rsp+0x50]
   14005eced:	mov    rdx,QWORD PTR [rsp+0x48]
   14005ecf2:	mov    QWORD PTR [rsp+0x40],rax
   14005ecf7:	cmp    rdx,QWORD PTR [rip+0x28922]        # 0x140087620
   14005ecfe:	je     0x14005ed23
   14005ed00:	mov    ecx,DWORD PTR [r11+0xc8]
   14005ed07:	test   DWORD PTR [rip+0x28a1b],ecx        # 0x140087728
   14005ed0d:	jne    0x14005ed23
   14005ed0f:	call   0x14004e4e0
   14005ed14:	mov    r11,QWORD PTR [rsp+0x50]
   14005ed19:	mov    QWORD PTR [rsp+0x48],rax
   14005ed1e:	mov    rax,QWORD PTR [rsp+0x40]
   14005ed23:	test   BYTE PTR [r11+0xc8],0x2
   14005ed2b:	jne    0x14005ed41
   14005ed2d:	or     DWORD PTR [r11+0xc8],0x2
   14005ed35:	movzx  ecx,WORD PTR [rsp+0x70]
   14005ed3a:	mov    BYTE PTR [rsp+0x58],0x1
   14005ed3f:	jmp    0x14005ed5b
   14005ed41:	mov    cx,WORD PTR [rsp+0x70]
   14005ed46:	jmp    0x14005ed65
   14005ed48:	mov    rax,QWORD PTR [rdx]
   14005ed4b:	lea    r8,[rsp+0x40]
   14005ed50:	mov    QWORD PTR [r8],rax
   14005ed53:	mov    rax,QWORD PTR [rdx+0x8]
   14005ed57:	mov    QWORD PTR [r8+0x8],rax
   14005ed5b:	mov    rax,QWORD PTR [rsp+0x40]
   14005ed60:	mov    r11,QWORD PTR [rsp+0x50]
   14005ed65:	mov    edx,DWORD PTR [rax+0x14]
   14005ed68:	test   edx,edx
   14005ed6a:	jne    0x14005ed90
   14005ed6c:	lea    eax,[rcx-0x41]
   14005ed6f:	cmp    ax,0x19
   14005ed73:	ja     0x14005ed79
   14005ed75:	add    cx,0x20
   14005ed79:	cmp    BYTE PTR [rsp+0x58],0x0
   14005ed7e:	je     0x14005ed88
   14005ed80:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005ed88:	mov    ax,cx
   14005ed8b:	add    rsp,0x68
   14005ed8f:	ret    
   14005ed90:	cmp    cx,0x100
   14005ed95:	jae    0x14005edc7
   14005ed97:	lea    r8,[rsp+0x40]
   14005ed9c:	mov    dx,0x1
   14005eda0:	call   0x140051a30
   14005eda5:	test   eax,eax
   14005eda7:	jne    0x14005edb0
   14005eda9:	movzx  eax,WORD PTR [rsp+0x70]
   14005edae:	jmp    0x14005ee11
   14005edb0:	mov    rax,QWORD PTR [rsp+0x40]
   14005edb5:	movzx  edx,WORD PTR [rsp+0x70]
   14005edba:	mov    rcx,QWORD PTR [rax+0x148]
   14005edc1:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005edc5:	jmp    0x14005ee11
   14005edc7:	mov    eax,DWORD PTR [rax+0x4]
   14005edca:	lea    r9,[rsp+0x70]
   14005edcf:	lea    rcx,[rsp+0x40]
   14005edd4:	mov    DWORD PTR [rsp+0x38],eax
   14005edd8:	lea    rax,[rsp+0x80]
   14005ede0:	mov    DWORD PTR [rsp+0x30],0x1
   14005ede8:	mov    QWORD PTR [rsp+0x28],rax
   14005eded:	mov    r8d,0x100
   14005edf3:	mov    DWORD PTR [rsp+0x20],0x1
   14005edfb:	call   0x14004f490
   14005ee00:	test   eax,eax
   14005ee02:	movzx  eax,WORD PTR [rsp+0x70]
   14005ee07:	je     0x14005ee11
   14005ee09:	movzx  eax,WORD PTR [rsp+0x80]
   14005ee11:	cmp    BYTE PTR [rsp+0x58],0x0
   14005ee16:	je     0x14005ee24
   14005ee18:	mov    rcx,QWORD PTR [rsp+0x50]
   14005ee1d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005ee24:	add    rsp,0x68
   14005ee28:	ret    
   14005ee29:	int3   
   14005ee2a:	int3   
   14005ee2b:	int3   
   14005ee2c:	int3   
   14005ee2d:	int3   
   14005ee2e:	int3   
   14005ee2f:	int3   
   14005ee30:	mov    QWORD PTR [rsp+0x20],rbx
   14005ee35:	push   rsi
   14005ee36:	sub    rsp,0x60
   14005ee3a:	test   r8,r8
   14005ee3d:	mov    esi,edx
   14005ee3f:	movsxd rbx,ecx
   14005ee42:	mov    BYTE PTR [rsp+0x58],0x0
   14005ee47:	jne    0x14005eee3
   14005ee4d:	call   0x14004bd60
   14005ee52:	mov    QWORD PTR [rsp+0x50],rax
   14005ee57:	mov    r11,rax
   14005ee5a:	mov    r8,QWORD PTR [rax+0xc0]
   14005ee61:	cmp    r8,QWORD PTR [rip+0x28a38]        # 0x1400878a0
   14005ee68:	mov    QWORD PTR [rsp+0x40],r8
   14005ee6d:	mov    rax,QWORD PTR [rax+0xb8]
   14005ee74:	mov    QWORD PTR [rsp+0x48],rax
   14005ee79:	je     0x14005ee9e
   14005ee7b:	mov    ecx,DWORD PTR [r11+0xc8]
   14005ee82:	test   DWORD PTR [rip+0x288a0],ecx        # 0x140087728
   14005ee88:	jne    0x14005ee9e
   14005ee8a:	call   0x14004f030
   14005ee8f:	mov    r11,QWORD PTR [rsp+0x50]
   14005ee94:	mov    QWORD PTR [rsp+0x40],rax
   14005ee99:	mov    rax,QWORD PTR [rsp+0x48]
   14005ee9e:	cmp    rax,QWORD PTR [rip+0x2877b]        # 0x140087620
   14005eea5:	je     0x14005eec5
   14005eea7:	mov    eax,DWORD PTR [r11+0xc8]
   14005eeae:	test   DWORD PTR [rip+0x28874],eax        # 0x140087728
   14005eeb4:	jne    0x14005eec5
   14005eeb6:	call   0x14004e4e0
   14005eebb:	mov    r11,QWORD PTR [rsp+0x50]
   14005eec0:	mov    QWORD PTR [rsp+0x48],rax
   14005eec5:	test   BYTE PTR [r11+0xc8],0x2
   14005eecd:	jne    0x14005eefb
   14005eecf:	or     DWORD PTR [r11+0xc8],0x2
   14005eed7:	mov    r11,QWORD PTR [rsp+0x50]
   14005eedc:	mov    BYTE PTR [rsp+0x58],0x1
   14005eee1:	jmp    0x14005eefb
   14005eee3:	mov    rax,QWORD PTR [r8]
   14005eee6:	lea    rcx,[rsp+0x40]
   14005eeeb:	mov    QWORD PTR [rcx],rax
   14005eeee:	mov    rax,QWORD PTR [r8+0x8]
   14005eef2:	mov    QWORD PTR [rcx+0x8],rax
   14005eef6:	mov    r11,QWORD PTR [rsp+0x50]
   14005eefb:	lea    eax,[rbx+0x1]
   14005eefe:	cmp    eax,0x100
   14005ef03:	ja     0x14005ef38
   14005ef05:	mov    rax,QWORD PTR [rsp+0x40]
   14005ef0a:	mov    rcx,QWORD PTR [rax+0x140]
   14005ef11:	movzx  eax,WORD PTR [rcx+rbx*2]
   14005ef15:	and    eax,esi
   14005ef17:	cmp    BYTE PTR [rsp+0x58],0x0
   14005ef1c:	je     0x14005f009
   14005ef22:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005ef2a:	mov    rbx,QWORD PTR [rsp+0x88]
   14005ef32:	add    rsp,0x60
   14005ef36:	pop    rsi
   14005ef37:	ret    
   14005ef38:	mov    QWORD PTR [rsp+0x78],rdi
   14005ef3d:	mov    edi,ebx
   14005ef3f:	lea    rdx,[rsp+0x40]
   14005ef44:	sar    edi,0x8
   14005ef47:	movzx  ecx,dil
   14005ef4b:	call   0x140049dd0
   14005ef50:	test   eax,eax
   14005ef52:	je     0x14005ef73
   14005ef54:	mov    BYTE PTR [rsp+0x80],dil
   14005ef5c:	mov    BYTE PTR [rsp+0x81],bl
   14005ef63:	mov    BYTE PTR [rsp+0x82],0x0
   14005ef6b:	mov    r9d,0x2
   14005ef71:	jmp    0x14005ef88
   14005ef73:	mov    BYTE PTR [rsp+0x80],bl
   14005ef7a:	mov    BYTE PTR [rsp+0x81],0x0
   14005ef82:	mov    r9d,0x1
   14005ef88:	mov    rcx,QWORD PTR [rsp+0x40]
   14005ef8d:	mov    DWORD PTR [rsp+0x38],0x1
   14005ef95:	lea    r8,[rsp+0x80]
   14005ef9d:	mov    eax,DWORD PTR [rcx+0x14]
   14005efa0:	mov    edx,0x1
   14005efa5:	mov    DWORD PTR [rsp+0x30],eax
   14005efa9:	mov    eax,DWORD PTR [rcx+0x4]
   14005efac:	lea    rcx,[rsp+0x40]
   14005efb1:	mov    DWORD PTR [rsp+0x28],eax
   14005efb5:	lea    rax,[rsp+0x70]
   14005efba:	mov    QWORD PTR [rsp+0x20],rax
   14005efbf:	call   0x1400585c0
   14005efc4:	mov    rdi,QWORD PTR [rsp+0x78]
   14005efc9:	test   eax,eax
   14005efcb:	jne    0x14005efef
   14005efcd:	cmp    BYTE PTR [rsp+0x58],al
   14005efd1:	je     0x14005efdf
   14005efd3:	mov    rax,QWORD PTR [rsp+0x50]
   14005efd8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005efdf:	xor    eax,eax
   14005efe1:	mov    rbx,QWORD PTR [rsp+0x88]
   14005efe9:	add    rsp,0x60
   14005efed:	pop    rsi
   14005efee:	ret    
   14005efef:	movzx  eax,WORD PTR [rsp+0x70]
   14005eff4:	and    eax,esi
   14005eff6:	cmp    BYTE PTR [rsp+0x58],0x0
   14005effb:	je     0x14005f009
   14005effd:	mov    rcx,QWORD PTR [rsp+0x50]
   14005f002:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005f009:	mov    rbx,QWORD PTR [rsp+0x88]
   14005f011:	add    rsp,0x60
   14005f015:	pop    rsi
   14005f016:	ret    
   14005f017:	int3   
   14005f018:	int3   
   14005f019:	int3   
   14005f01a:	int3   
   14005f01b:	int3   
   14005f01c:	int3   
   14005f01d:	int3   
   14005f01e:	int3   
   14005f01f:	int3   
   14005f020:	mov    QWORD PTR [rsp+0x8],rbx
   14005f025:	mov    QWORD PTR [rsp+0x10],rbp
   14005f02a:	mov    QWORD PTR [rsp+0x18],rsi
   14005f02f:	push   rdi
   14005f030:	sub    rsp,0x60
   14005f034:	test   r9,r9
   14005f037:	mov    rdi,r9
   14005f03a:	mov    rbx,r8
   14005f03d:	mov    rsi,rdx
   14005f040:	mov    rbp,rcx
   14005f043:	mov    BYTE PTR [rsp+0x58],0x0
   14005f048:	jne    0x14005f0e1
   14005f04e:	call   0x14004bd60
   14005f053:	mov    QWORD PTR [rsp+0x50],rax
   14005f058:	mov    r11,rax
   14005f05b:	mov    r10,QWORD PTR [rax+0xc0]
   14005f062:	cmp    r10,QWORD PTR [rip+0x28837]        # 0x1400878a0
   14005f069:	mov    QWORD PTR [rsp+0x40],r10
   14005f06e:	mov    rdx,QWORD PTR [rax+0xb8]
   14005f075:	mov    QWORD PTR [rsp+0x48],rdx
   14005f07a:	je     0x14005f09e
   14005f07c:	mov    ecx,DWORD PTR [rax+0xc8]
   14005f082:	test   DWORD PTR [rip+0x286a0],ecx        # 0x140087728
   14005f088:	jne    0x14005f09e
   14005f08a:	call   0x14004f030
   14005f08f:	mov    r11,QWORD PTR [rsp+0x50]
   14005f094:	mov    rdx,QWORD PTR [rsp+0x48]
   14005f099:	mov    QWORD PTR [rsp+0x40],rax
   14005f09e:	cmp    rdx,QWORD PTR [rip+0x2857b]        # 0x140087620
   14005f0a5:	je     0x14005f0c8
   14005f0a7:	mov    eax,DWORD PTR [r11+0xc8]
   14005f0ae:	test   DWORD PTR [rip+0x28674],eax        # 0x140087728
   14005f0b4:	jne    0x14005f0c8
   14005f0b6:	call   0x14004e4e0
   14005f0bb:	mov    r11,QWORD PTR [rsp+0x50]
   14005f0c0:	mov    rdx,rax
   14005f0c3:	mov    QWORD PTR [rsp+0x48],rax
   14005f0c8:	test   BYTE PTR [r11+0xc8],0x2
   14005f0d0:	jne    0x14005f0fe
   14005f0d2:	or     DWORD PTR [r11+0xc8],0x2
   14005f0da:	mov    BYTE PTR [rsp+0x58],0x1
   14005f0df:	jmp    0x14005f0f4
   14005f0e1:	mov    rax,QWORD PTR [r9]
   14005f0e4:	lea    rcx,[rsp+0x40]
   14005f0e9:	mov    QWORD PTR [rcx],rax
   14005f0ec:	mov    rax,QWORD PTR [r9+0x8]
   14005f0f0:	mov    QWORD PTR [rcx+0x8],rax
   14005f0f4:	mov    rdx,QWORD PTR [rsp+0x48]
   14005f0f9:	mov    r11,QWORD PTR [rsp+0x50]
   14005f0fe:	test   rbx,rbx
   14005f101:	jne    0x14005f118
   14005f103:	cmp    BYTE PTR [rsp+0x58],bl
   14005f107:	je     0x14005f111
   14005f109:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005f111:	xor    eax,eax
   14005f113:	jmp    0x14005f1c5
   14005f118:	test   rbp,rbp
   14005f11b:	jne    0x14005f15a
   14005f11d:	call   0x140048680
   14005f122:	xor    r9d,r9d
   14005f125:	xor    r8d,r8d
   14005f128:	xor    edx,edx
   14005f12a:	xor    ecx,ecx
   14005f12c:	mov    QWORD PTR [rsp+0x20],0x0
   14005f135:	mov    DWORD PTR [rax],0x16
   14005f13b:	call   0x14004e100
   14005f140:	cmp    BYTE PTR [rsp+0x58],0x0
   14005f145:	je     0x14005f153
   14005f147:	mov    rax,QWORD PTR [rsp+0x50]
   14005f14c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005f153:	mov    eax,0x7fffffff
   14005f158:	jmp    0x14005f1c5
   14005f15a:	test   rsi,rsi
   14005f15d:	je     0x14005f11d
   14005f15f:	cmp    rbx,0x7fffffff
   14005f166:	ja     0x14005f11d
   14005f168:	cmp    DWORD PTR [rdx+0x8],0x0
   14005f16c:	jne    0x14005f181
   14005f16e:	mov    r9,rdi
   14005f171:	mov    r8,rbx
   14005f174:	mov    rdx,rsi
   14005f177:	mov    rcx,rbp
   14005f17a:	call   0x1400621e0
   14005f17f:	jmp    0x14005f1b2
   14005f181:	mov    eax,DWORD PTR [rdx+0x4]
   14005f184:	mov    edx,DWORD PTR [rdx+0xc]
   14005f187:	lea    rcx,[rsp+0x40]
   14005f18c:	mov    DWORD PTR [rsp+0x38],eax
   14005f190:	mov    DWORD PTR [rsp+0x30],ebx
   14005f194:	mov    r9,rbp
   14005f197:	mov    r8d,0x1001
   14005f19d:	mov    QWORD PTR [rsp+0x28],rsi
   14005f1a2:	mov    DWORD PTR [rsp+0x20],ebx
   14005f1a6:	call   0x1400620a0
   14005f1ab:	test   eax,eax
   14005f1ad:	je     0x14005f140
   14005f1af:	add    eax,0xfffffffe
   14005f1b2:	cmp    BYTE PTR [rsp+0x58],0x0
   14005f1b7:	je     0x14005f1c5
   14005f1b9:	mov    rcx,QWORD PTR [rsp+0x50]
   14005f1be:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005f1c5:	mov    rbx,QWORD PTR [rsp+0x70]
   14005f1ca:	mov    rbp,QWORD PTR [rsp+0x78]
   14005f1cf:	mov    rsi,QWORD PTR [rsp+0x80]
   14005f1d7:	add    rsp,0x60
   14005f1db:	pop    rdi
   14005f1dc:	ret    
   14005f1dd:	int3   
   14005f1de:	int3   
   14005f1df:	int3   
   14005f1e0:	xor    r9d,r9d
   14005f1e3:	jmp    0x14005f020
   14005f1e8:	int3   
   14005f1e9:	int3   
   14005f1ea:	int3   
   14005f1eb:	int3   
   14005f1ec:	int3   
   14005f1ed:	int3   
   14005f1ee:	int3   
   14005f1ef:	int3   
   14005f1f0:	mov    QWORD PTR [rsp+0x10],rbx
   14005f1f5:	mov    QWORD PTR [rsp+0x18],rsi
   14005f1fa:	push   rdi
   14005f1fb:	sub    rsp,0x40
   14005f1ff:	mov    rbx,QWORD PTR [rip+0x2d462]        # 0x14008c668
   14005f206:	xor    esi,esi
   14005f208:	mov    QWORD PTR [rsp+0x50],rsi
   14005f20d:	mov    rax,QWORD PTR [rbx]
   14005f210:	test   rax,rax
   14005f213:	je     0x14005f2c3
   14005f219:	data16 xchg ax,ax
   14005f21c:	data16 data16 xchg ax,ax
   14005f220:	mov    QWORD PTR [rsp+0x38],rsi
   14005f225:	mov    QWORD PTR [rsp+0x30],rsi
   14005f22a:	or     r9d,0xffffffff
   14005f22e:	mov    r8,rax
   14005f231:	xor    edx,edx
   14005f233:	xor    ecx,ecx
   14005f235:	mov    DWORD PTR [rsp+0x28],esi
   14005f239:	mov    QWORD PTR [rsp+0x20],rsi
   14005f23e:	call   QWORD PTR [rip+0x52ac]        # 0x1400644f0
   14005f244:	test   eax,eax
   14005f246:	movsxd rdi,eax
   14005f249:	je     0x14005f2df
   14005f24f:	mov    rcx,rdi
   14005f252:	mov    edx,0x1
   14005f257:	call   0x14004de90
   14005f25c:	test   rax,rax
   14005f25f:	mov    QWORD PTR [rsp+0x50],rax
   14005f264:	je     0x14005f2df
   14005f266:	mov    r8,QWORD PTR [rbx]
   14005f269:	mov    QWORD PTR [rsp+0x38],rsi
   14005f26e:	mov    QWORD PTR [rsp+0x30],rsi
   14005f273:	or     r9d,0xffffffff
   14005f277:	xor    edx,edx
   14005f279:	xor    ecx,ecx
   14005f27b:	mov    DWORD PTR [rsp+0x28],edi
   14005f27f:	mov    QWORD PTR [rsp+0x20],rax
   14005f284:	call   QWORD PTR [rip+0x5266]        # 0x1400644f0
   14005f28a:	test   eax,eax
   14005f28c:	je     0x14005f2d5
   14005f28e:	lea    rcx,[rsp+0x50]
   14005f293:	xor    edx,edx
   14005f295:	call   0x140062500
   14005f29a:	test   eax,eax
   14005f29c:	jns    0x14005f2b2
   14005f29e:	mov    rcx,QWORD PTR [rsp+0x50]
   14005f2a3:	test   rcx,rcx
   14005f2a6:	je     0x14005f2b2
   14005f2a8:	call   0x1400485c0
   14005f2ad:	mov    QWORD PTR [rsp+0x50],rsi
   14005f2b2:	mov    rax,QWORD PTR [rbx+0x8]
   14005f2b6:	add    rbx,0x8
   14005f2ba:	test   rax,rax
   14005f2bd:	jne    0x14005f220
   14005f2c3:	xor    eax,eax
   14005f2c5:	mov    rbx,QWORD PTR [rsp+0x58]
   14005f2ca:	mov    rsi,QWORD PTR [rsp+0x60]
   14005f2cf:	add    rsp,0x40
   14005f2d3:	pop    rdi
   14005f2d4:	ret    
   14005f2d5:	mov    rcx,QWORD PTR [rsp+0x50]
   14005f2da:	call   0x1400485c0
   14005f2df:	mov    rbx,QWORD PTR [rsp+0x58]
   14005f2e4:	mov    rsi,QWORD PTR [rsp+0x60]
   14005f2e9:	or     eax,0xffffffff
   14005f2ec:	add    rsp,0x40
   14005f2f0:	pop    rdi
   14005f2f1:	ret    
   14005f2f2:	int3   
   14005f2f3:	int3   
   14005f2f4:	int3   
   14005f2f5:	int3   
   14005f2f6:	int3   
   14005f2f7:	int3   
   14005f2f8:	int3   
   14005f2f9:	int3   
   14005f2fa:	int3   
   14005f2fb:	int3   
   14005f2fc:	int3   
   14005f2fd:	int3   
   14005f2fe:	int3   
   14005f2ff:	int3   
   14005f300:	rex push rbx
   14005f302:	sub    rsp,0x70
   14005f306:	test   rdx,rdx
   14005f309:	movsxd rbx,ecx
   14005f30c:	mov    BYTE PTR [rsp+0x68],0x0
   14005f311:	jne    0x14005f3ba
   14005f317:	call   0x14004bd60
   14005f31c:	mov    QWORD PTR [rsp+0x60],rax
   14005f321:	mov    r11,rax
   14005f324:	mov    rdx,QWORD PTR [rax+0xc0]
   14005f32b:	cmp    rdx,QWORD PTR [rip+0x2856e]        # 0x1400878a0
   14005f332:	mov    QWORD PTR [rsp+0x50],rdx
   14005f337:	mov    rax,QWORD PTR [rax+0xb8]
   14005f33e:	mov    QWORD PTR [rsp+0x58],rax
   14005f343:	je     0x14005f36b
   14005f345:	mov    ecx,DWORD PTR [r11+0xc8]
   14005f34c:	test   DWORD PTR [rip+0x283d6],ecx        # 0x140087728
   14005f352:	jne    0x14005f36b
   14005f354:	call   0x14004f030
   14005f359:	mov    r11,QWORD PTR [rsp+0x60]
   14005f35e:	mov    rdx,rax
   14005f361:	mov    QWORD PTR [rsp+0x50],rax
   14005f366:	mov    rax,QWORD PTR [rsp+0x58]
   14005f36b:	cmp    rax,QWORD PTR [rip+0x282ae]        # 0x140087620
   14005f372:	je     0x14005f397
   14005f374:	mov    ecx,DWORD PTR [r11+0xc8]
   14005f37b:	test   DWORD PTR [rip+0x283a7],ecx        # 0x140087728
   14005f381:	jne    0x14005f397
   14005f383:	call   0x14004e4e0
   14005f388:	mov    r11,QWORD PTR [rsp+0x60]
   14005f38d:	mov    rdx,QWORD PTR [rsp+0x50]
   14005f392:	mov    QWORD PTR [rsp+0x58],rax
   14005f397:	test   BYTE PTR [r11+0xc8],0x2
   14005f39f:	jne    0x14005f3d7
   14005f3a1:	or     DWORD PTR [r11+0xc8],0x2
   14005f3a9:	mov    r11,QWORD PTR [rsp+0x60]
   14005f3ae:	mov    rdx,QWORD PTR [rsp+0x50]
   14005f3b3:	mov    BYTE PTR [rsp+0x68],0x1
   14005f3b8:	jmp    0x14005f3d7
   14005f3ba:	mov    rax,QWORD PTR [rdx]
   14005f3bd:	lea    rcx,[rsp+0x50]
   14005f3c2:	mov    QWORD PTR [rcx],rax
   14005f3c5:	mov    rax,QWORD PTR [rdx+0x8]
   14005f3c9:	mov    QWORD PTR [rcx+0x8],rax
   14005f3cd:	mov    r11,QWORD PTR [rsp+0x60]
   14005f3d2:	mov    rdx,QWORD PTR [rsp+0x50]
   14005f3d7:	cmp    ebx,0x100
   14005f3dd:	jae    0x14005f451
   14005f3df:	cmp    DWORD PTR [rdx+0x10c],0x1
   14005f3e6:	jle    0x14005f405
   14005f3e8:	lea    r8,[rsp+0x50]
   14005f3ed:	mov    edx,0x2
   14005f3f2:	mov    ecx,ebx
   14005f3f4:	call   0x14005ee30
   14005f3f9:	mov    r11,QWORD PTR [rsp+0x60]
   14005f3fe:	mov    rdx,QWORD PTR [rsp+0x50]
   14005f403:	jmp    0x14005f412
   14005f405:	mov    rax,QWORD PTR [rdx+0x140]
   14005f40c:	mov    al,BYTE PTR [rax+rbx*2]
   14005f40f:	and    eax,0x2
   14005f412:	test   eax,eax
   14005f414:	je     0x14005f43a
   14005f416:	cmp    BYTE PTR [rsp+0x68],0x0
   14005f41b:	mov    rax,QWORD PTR [rdx+0x150]
   14005f422:	movzx  eax,BYTE PTR [rax+rbx*1]
   14005f426:	je     0x14005f560
   14005f42c:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005f434:	add    rsp,0x70
   14005f438:	pop    rbx
   14005f439:	ret    
   14005f43a:	cmp    BYTE PTR [rsp+0x68],0x0
   14005f43f:	je     0x14005f449
   14005f441:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14005f449:	mov    eax,ebx
   14005f44b:	add    rsp,0x70
   14005f44f:	pop    rbx
   14005f450:	ret    
   14005f451:	cmp    DWORD PTR [rdx+0x10c],0x1
   14005f458:	mov    QWORD PTR [rsp+0x90],rdi
   14005f460:	jle    0x14005f497
   14005f462:	mov    edi,ebx
   14005f464:	lea    rdx,[rsp+0x50]
   14005f469:	sar    edi,0x8
   14005f46c:	movzx  ecx,dil
   14005f470:	call   0x140049dd0
   14005f475:	test   eax,eax
   14005f477:	je     0x14005f497
   14005f479:	mov    BYTE PTR [rsp+0x80],dil
   14005f481:	mov    BYTE PTR [rsp+0x81],bl
   14005f488:	mov    BYTE PTR [rsp+0x82],0x0
   14005f490:	mov    edx,0x2
   14005f495:	jmp    0x14005f4b6
   14005f497:	call   0x140048680
   14005f49c:	mov    edx,0x1
   14005f4a1:	mov    DWORD PTR [rax],0x2a
   14005f4a7:	mov    BYTE PTR [rsp+0x80],bl
   14005f4ae:	mov    BYTE PTR [rsp+0x81],0x0
   14005f4b6:	mov    rcx,QWORD PTR [rsp+0x50]
   14005f4bb:	mov    DWORD PTR [rsp+0x40],0x1
   14005f4c3:	lea    r9,[rsp+0x80]
   14005f4cb:	mov    eax,DWORD PTR [rcx+0x4]
   14005f4ce:	mov    r8d,0x200
   14005f4d4:	mov    DWORD PTR [rsp+0x38],eax
   14005f4d8:	lea    rax,[rsp+0x88]
   14005f4e0:	mov    DWORD PTR [rsp+0x30],0x3
   14005f4e8:	mov    QWORD PTR [rsp+0x28],rax
   14005f4ed:	mov    DWORD PTR [rsp+0x20],edx
   14005f4f1:	mov    edx,DWORD PTR [rcx+0x14]
   14005f4f4:	lea    rcx,[rsp+0x50]
   14005f4f9:	call   0x140058200
   14005f4fe:	mov    rdi,QWORD PTR [rsp+0x90]
   14005f506:	test   eax,eax
   14005f508:	jne    0x14005f524
   14005f50a:	cmp    BYTE PTR [rsp+0x68],al
   14005f50e:	je     0x14005f51c
   14005f510:	mov    rax,QWORD PTR [rsp+0x60]
   14005f515:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14005f51c:	mov    eax,ebx
   14005f51e:	add    rsp,0x70
   14005f522:	pop    rbx
   14005f523:	ret    
   14005f524:	cmp    eax,0x1
   14005f527:	jne    0x14005f538
   14005f529:	movzx  eax,BYTE PTR [rsp+0x88]
   14005f531:	cmp    BYTE PTR [rsp+0x68],0x0
   14005f536:	jmp    0x14005f552
   14005f538:	movzx  eax,BYTE PTR [rsp+0x88]
   14005f540:	movzx  ecx,BYTE PTR [rsp+0x89]
   14005f548:	shl    eax,0x8
   14005f54b:	or     eax,ecx
   14005f54d:	cmp    BYTE PTR [rsp+0x68],0x0
   14005f552:	je     0x14005f560
   14005f554:	mov    rcx,QWORD PTR [rsp+0x60]
   14005f559:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14005f560:	add    rsp,0x70
   14005f564:	pop    rbx
   14005f565:	ret    
   14005f566:	int3   
   14005f567:	int3   
   14005f568:	int3   
   14005f569:	int3   
   14005f56a:	int3   
   14005f56b:	int3   
   14005f56c:	int3   
   14005f56d:	int3   
   14005f56e:	int3   
   14005f56f:	int3   
   14005f570:	cmp    DWORD PTR [rip+0x2dc29],0x0        # 0x14008d1a0
   14005f577:	jne    0x14005f587
   14005f579:	lea    eax,[rcx-0x61]
   14005f57c:	cmp    eax,0x19
   14005f57f:	ja     0x14005f584
   14005f581:	add    ecx,0xffffffe0
   14005f584:	mov    eax,ecx
   14005f586:	ret    
   14005f587:	xor    edx,edx
   14005f589:	jmp    0x14005f300
   14005f58e:	int3   
   14005f58f:	int3   
   14005f590:	mov    rax,rsp
   14005f593:	mov    QWORD PTR [rax+0x10],rdx
   14005f597:	push   rdi
   14005f598:	sub    rsp,0x70
   14005f59c:	mov    QWORD PTR [rax+0x20],rbx
   14005f5a0:	mov    QWORD PTR [rax-0x18],rsi
   14005f5a4:	mov    QWORD PTR [rax-0x38],r15
   14005f5a8:	movzx  eax,WORD PTR [rcx+0xa]
   14005f5ac:	mov    r9d,0x1f
   14005f5b2:	mov    esi,eax
   14005f5b4:	and    eax,0x8000
   14005f5b9:	mov    DWORD PTR [rsp+0x80],eax
   14005f5c0:	mov    eax,DWORD PTR [rcx+0x6]
   14005f5c3:	and    esi,0x7fff
   14005f5c9:	mov    DWORD PTR [rsp+0x20],eax
   14005f5cd:	mov    eax,DWORD PTR [rcx+0x2]
   14005f5d0:	sub    esi,0x3fff
   14005f5d6:	mov    DWORD PTR [rsp+0x24],eax
   14005f5da:	movzx  eax,WORD PTR [rcx]
   14005f5dd:	shl    eax,0x10
   14005f5e0:	cmp    esi,0xffffc001
   14005f5e6:	mov    DWORD PTR [rsp+0x28],eax
   14005f5ea:	jne    0x14005f626
   14005f5ec:	xor    edi,edi
   14005f5ee:	mov    r9d,edi
   14005f5f1:	mov    rax,rdi
   14005f5f4:	cmp    DWORD PTR [rsp+rax*4+0x20],edi
   14005f5f8:	jne    0x14005f60f
   14005f5fa:	add    rax,0x1
   14005f5fe:	cmp    rax,0x3
   14005f602:	jl     0x14005f5f4
   14005f604:	mov    r15d,0x1f
   14005f60a:	jmp    0x14005fbdd
   14005f60f:	mov    QWORD PTR [rsp+0x20],rdi
   14005f614:	mov    DWORD PTR [rsp+0x28],edi
   14005f618:	mov    edi,0x2
   14005f61d:	lea    r15d,[rdi+0x1d]
   14005f621:	jmp    0x14005fbdd
   14005f626:	mov    QWORD PTR [rsp+0x68],rbp
   14005f62b:	lea    rcx,[rsp+0x20]
   14005f630:	mov    QWORD PTR [rsp+0x58],r12
   14005f635:	mov    rax,QWORD PTR [rcx]
   14005f638:	mov    QWORD PTR [rsp+0x50],r13
   14005f63d:	mov    QWORD PTR [rsp+0x48],r14
   14005f642:	mov    r14d,DWORD PTR [rip+0x28d3f]        # 0x140088388
   14005f649:	mov    QWORD PTR [rsp+0x30],rax
   14005f64e:	mov    eax,DWORD PTR [rcx+0x8]
   14005f651:	mov    DWORD PTR [rsp+0x38],eax
   14005f655:	xor    edi,edi
   14005f657:	mov    eax,r14d
   14005f65a:	cdq    
   14005f65b:	mov    r11d,r9d
   14005f65e:	or     ebp,0xffffffff
   14005f661:	and    edx,r9d
   14005f664:	mov    r15d,esi
   14005f667:	mov    ebx,edi
   14005f669:	add    eax,edx
   14005f66b:	mov    r10d,eax
   14005f66e:	and    eax,r9d
   14005f671:	sar    r10d,0x5
   14005f675:	sub    eax,edx
   14005f677:	movsxd r12,r10d
   14005f67a:	sub    r11d,eax
   14005f67d:	mov    ecx,DWORD PTR [rsp+r12*4+0x20]
   14005f682:	bt     ecx,r11d
   14005f686:	jae    0x14005f739
   14005f68c:	mov    ecx,r11d
   14005f68f:	mov    eax,ebp
   14005f691:	movsxd rdx,r10d
   14005f694:	shl    eax,cl
   14005f696:	not    eax
   14005f698:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14005f69c:	jne    0x14005f6c2
   14005f69e:	lea    eax,[r10+0x1]
   14005f6a2:	movsxd rcx,eax
   14005f6a5:	cmp    rcx,0x3
   14005f6a9:	jge    0x14005f739
   14005f6af:	nop
   14005f6b0:	cmp    DWORD PTR [rsp+rcx*4+0x20],ebx
   14005f6b4:	jne    0x14005f6c2
   14005f6b6:	add    rcx,0x1
   14005f6ba:	cmp    rcx,0x3
   14005f6be:	jl     0x14005f6b0
   14005f6c0:	jmp    0x14005f739
   14005f6c2:	mov    ecx,r9d
   14005f6c5:	lea    eax,[r14-0x1]
   14005f6c9:	cdq    
   14005f6ca:	and    edx,r9d
   14005f6cd:	add    eax,edx
   14005f6cf:	mov    r8d,eax
   14005f6d2:	and    eax,r9d
   14005f6d5:	sub    eax,edx
   14005f6d7:	sar    r8d,0x5
   14005f6db:	mov    edx,0x1
   14005f6e0:	sub    ecx,eax
   14005f6e2:	movsxd r9,r8d
   14005f6e5:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14005f6ea:	shl    edx,cl
   14005f6ec:	lea    ecx,[rax+rdx*1]
   14005f6ef:	cmp    ecx,eax
   14005f6f1:	jb     0x14005f6f7
   14005f6f3:	cmp    ecx,edx
   14005f6f5:	jae    0x14005f6fc
   14005f6f7:	mov    ebx,0x1
   14005f6fc:	lea    eax,[r8-0x1]
   14005f700:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14005f705:	test   eax,eax
   14005f707:	movsxd rdx,eax
   14005f70a:	js     0x14005f739
   14005f70c:	data16 data16 xchg ax,ax
   14005f710:	test   ebx,ebx
   14005f712:	je     0x14005f739
   14005f714:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14005f718:	mov    ebx,edi
   14005f71a:	lea    r8d,[rax+0x1]
   14005f71e:	cmp    r8d,eax
   14005f721:	jb     0x14005f729
   14005f723:	cmp    r8d,0x1
   14005f727:	jae    0x14005f72e
   14005f729:	mov    ebx,0x1
   14005f72e:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14005f733:	sub    rdx,0x1
   14005f737:	jns    0x14005f710
   14005f739:	mov    ecx,r11d
   14005f73c:	mov    eax,ebp
   14005f73e:	mov    r13d,0x3
   14005f744:	shl    eax,cl
   14005f746:	and    DWORD PTR [rsp+r12*4+0x20],eax
   14005f74b:	lea    eax,[r10+0x1]
   14005f74f:	movsxd rdx,eax
   14005f752:	cmp    rdx,r13
   14005f755:	jge    0x14005f76d
   14005f757:	lea    rcx,[rsp+rdx*4+0x20]
   14005f75c:	mov    r8,r13
   14005f75f:	sub    r8,rdx
   14005f762:	xor    edx,edx
   14005f764:	shl    r8,0x2
   14005f768:	call   0x140047720
   14005f76d:	test   ebx,ebx
   14005f76f:	je     0x14005f774
   14005f771:	add    esi,0x1
   14005f774:	mov    edx,DWORD PTR [rip+0x28c0a]        # 0x140088384
   14005f77a:	mov    eax,edx
   14005f77c:	sub    eax,r14d
   14005f77f:	cmp    esi,eax
   14005f781:	jge    0x14005f7a5
   14005f783:	mov    rdx,QWORD PTR [rsp+0x88]
   14005f78b:	mov    QWORD PTR [rsp+0x20],rdi
   14005f790:	mov    DWORD PTR [rsp+0x28],edi
   14005f794:	mov    r9d,edi
   14005f797:	mov    edi,0x2
   14005f79c:	lea    r15d,[rdi+0x1d]
   14005f7a0:	jmp    0x14005fbc9
   14005f7a5:	cmp    esi,edx
   14005f7a7:	jg     0x14005fa2d
   14005f7ad:	sub    edx,r15d
   14005f7b0:	lea    rax,[rsp+0x30]
   14005f7b5:	mov    r10d,ebp
   14005f7b8:	mov    rcx,QWORD PTR [rax]
   14005f7bb:	mov    esi,0x20
   14005f7c0:	mov    r9d,edi
   14005f7c3:	mov    QWORD PTR [rsp+0x20],rcx
   14005f7c8:	mov    ecx,DWORD PTR [rax+0x8]
   14005f7cb:	mov    eax,edx
   14005f7cd:	cdq    
   14005f7ce:	mov    DWORD PTR [rsp+0x28],ecx
   14005f7d2:	mov    ebx,esi
   14005f7d4:	and    edx,0x1f
   14005f7d7:	mov    r8,rdi
   14005f7da:	add    eax,edx
   14005f7dc:	mov    r12d,eax
   14005f7df:	and    eax,0x1f
   14005f7e2:	sub    eax,edx
   14005f7e4:	sar    r12d,0x5
   14005f7e8:	mov    ecx,eax
   14005f7ea:	mov    r11d,eax
   14005f7ed:	shl    r10d,cl
   14005f7f0:	sub    ebx,eax
   14005f7f2:	not    r10d
   14005f7f5:	data16 data16 xchg ax,ax
   14005f7f9:	data16 xchg ax,ax
   14005f7fc:	data16 data16 xchg ax,ax
   14005f800:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14005f805:	mov    ecx,r11d
   14005f808:	add    r8,0x1
   14005f80c:	mov    eax,edx
   14005f80e:	shr    edx,cl
   14005f810:	mov    ecx,ebx
   14005f812:	or     edx,r9d
   14005f815:	and    eax,r10d
   14005f818:	mov    DWORD PTR [rsp+0x90],eax
   14005f81f:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14005f824:	mov    r9d,DWORD PTR [rsp+0x90]
   14005f82c:	shl    r9d,cl
   14005f82f:	cmp    r8,r13
   14005f832:	jl     0x14005f800
   14005f834:	movsxd r8,r12d
   14005f837:	lea    rdx,[rsp+0x28]
   14005f83c:	mov    ebx,0x2
   14005f841:	lea    rax,[r8*4+0x0]
   14005f849:	mov    rcx,rbx
   14005f84c:	sub    rdx,rax
   14005f84f:	nop
   14005f850:	cmp    rcx,r8
   14005f853:	jl     0x14005f85d
   14005f855:	mov    eax,DWORD PTR [rdx]
   14005f857:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14005f85b:	jmp    0x14005f861
   14005f85d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14005f861:	sub    rdx,0x4
   14005f865:	sub    rcx,0x1
   14005f869:	jns    0x14005f850
   14005f86b:	mov    r8d,DWORD PTR [rip+0x28b16]        # 0x140088388
   14005f872:	mov    r15d,0x1f
   14005f878:	mov    eax,r8d
   14005f87b:	mov    r12d,r15d
   14005f87e:	cdq    
   14005f87f:	and    edx,0x1f
   14005f882:	add    eax,edx
   14005f884:	mov    r11d,eax
   14005f887:	and    eax,0x1f
   14005f88a:	sar    r11d,0x5
   14005f88e:	sub    eax,edx
   14005f890:	movsxd r14,r11d
   14005f893:	sub    r12d,eax
   14005f896:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14005f89b:	bt     ecx,r12d
   14005f89f:	jae    0x14005f951
   14005f8a5:	mov    ecx,r12d
   14005f8a8:	mov    eax,ebp
   14005f8aa:	movsxd rdx,r11d
   14005f8ad:	shl    eax,cl
   14005f8af:	not    eax
   14005f8b1:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14005f8b5:	jne    0x14005f8d8
   14005f8b7:	lea    eax,[r11+0x1]
   14005f8bb:	movsxd rcx,eax
   14005f8be:	cmp    rcx,r13
   14005f8c1:	jge    0x14005f951
   14005f8c7:	cmp    DWORD PTR [rsp+rcx*4+0x20],edi
   14005f8cb:	jne    0x14005f8d8
   14005f8cd:	add    rcx,0x1
   14005f8d1:	cmp    rcx,r13
   14005f8d4:	jl     0x14005f8c7
   14005f8d6:	jmp    0x14005f951
   14005f8d8:	lea    eax,[r8-0x1]
   14005f8dc:	mov    ecx,r15d
   14005f8df:	mov    r8d,0x1
   14005f8e5:	cdq    
   14005f8e6:	and    edx,r15d
   14005f8e9:	add    eax,edx
   14005f8eb:	mov    r9d,eax
   14005f8ee:	and    eax,r15d
   14005f8f1:	sub    eax,edx
   14005f8f3:	sar    r9d,0x5
   14005f8f7:	sub    ecx,eax
   14005f8f9:	movsxd r10,r9d
   14005f8fc:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14005f901:	shl    r8d,cl
   14005f904:	mov    ecx,edi
   14005f906:	lea    edx,[rax+r8*1]
   14005f90a:	cmp    edx,eax
   14005f90c:	jb     0x14005f913
   14005f90e:	cmp    edx,r8d
   14005f911:	jae    0x14005f918
   14005f913:	mov    ecx,0x1
   14005f918:	lea    eax,[r9-0x1]
   14005f91c:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14005f921:	test   eax,eax
   14005f923:	movsxd rdx,eax
   14005f926:	js     0x14005f951
   14005f928:	test   ecx,ecx
   14005f92a:	je     0x14005f951
   14005f92c:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14005f930:	mov    ecx,edi
   14005f932:	lea    r8d,[rax+0x1]
   14005f936:	cmp    r8d,eax
   14005f939:	jb     0x14005f941
   14005f93b:	cmp    r8d,0x1
   14005f93f:	jae    0x14005f946
   14005f941:	mov    ecx,0x1
   14005f946:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14005f94b:	sub    rdx,0x1
   14005f94f:	jns    0x14005f928
   14005f951:	mov    ecx,r12d
   14005f954:	mov    eax,ebp
   14005f956:	shl    eax,cl
   14005f958:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14005f95d:	lea    eax,[r11+0x1]
   14005f961:	movsxd rdx,eax
   14005f964:	cmp    rdx,r13
   14005f967:	jge    0x14005f97f
   14005f969:	sub    r13,rdx
   14005f96c:	lea    rcx,[rsp+rdx*4+0x20]
   14005f971:	xor    edx,edx
   14005f973:	shl    r13,0x2
   14005f977:	mov    r8,r13
   14005f97a:	call   0x140047720
   14005f97f:	mov    eax,DWORD PTR [rip+0x28a07]        # 0x14008838c
   14005f985:	mov    r9d,edi
   14005f988:	mov    r8,rdi
   14005f98b:	add    eax,0x1
   14005f98e:	cdq    
   14005f98f:	and    edx,r15d
   14005f992:	add    eax,edx
   14005f994:	mov    r11d,eax
   14005f997:	and    eax,r15d
   14005f99a:	sub    eax,edx
   14005f99c:	sar    r11d,0x5
   14005f9a0:	mov    ecx,eax
   14005f9a2:	mov    r10d,eax
   14005f9a5:	shl    ebp,cl
   14005f9a7:	sub    esi,eax
   14005f9a9:	not    ebp
   14005f9ab:	xchg   ax,ax
   14005f9ad:	data16 xchg ax,ax
   14005f9b0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14005f9b5:	mov    ecx,r10d
   14005f9b8:	mov    eax,ebp
   14005f9ba:	and    eax,edx
   14005f9bc:	shr    edx,cl
   14005f9be:	mov    ecx,esi
   14005f9c0:	or     edx,r9d
   14005f9c3:	mov    DWORD PTR [rsp+0x90],eax
   14005f9ca:	add    r8,0x1
   14005f9ce:	mov    r9d,DWORD PTR [rsp+0x90]
   14005f9d6:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14005f9db:	shl    r9d,cl
   14005f9de:	cmp    r8,0x3
   14005f9e2:	jl     0x14005f9b0
   14005f9e4:	movsxd r8,r11d
   14005f9e7:	lea    rdx,[rsp+0x28]
   14005f9ec:	mov    rcx,rbx
   14005f9ef:	lea    rax,[r8*4+0x0]
   14005f9f7:	sub    rdx,rax
   14005f9fa:	data16 xchg ax,ax
   14005f9fd:	data16 xchg ax,ax
   14005fa00:	cmp    rcx,r8
   14005fa03:	jl     0x14005fa0d
   14005fa05:	mov    eax,DWORD PTR [rdx]
   14005fa07:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14005fa0b:	jmp    0x14005fa11
   14005fa0d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14005fa11:	sub    rdx,0x4
   14005fa15:	sub    rcx,0x1
   14005fa19:	jns    0x14005fa00
   14005fa1b:	mov    rdx,QWORD PTR [rsp+0x88]
   14005fa23:	mov    r9d,edi
   14005fa26:	mov    edi,ebx
   14005fa28:	jmp    0x14005fbc9
   14005fa2d:	cmp    esi,DWORD PTR [rip+0x2894d]        # 0x140088380
   14005fa33:	jl     0x14005fb11
   14005fa39:	mov    eax,DWORD PTR [rip+0x2894d]        # 0x14008838c
   14005fa3f:	mov    esi,0x20
   14005fa44:	mov    QWORD PTR [rsp+0x20],rdi
   14005fa49:	bts    DWORD PTR [rsp+0x20],0x1f
   14005fa4f:	cdq    
   14005fa50:	mov    DWORD PTR [rsp+0x28],edi
   14005fa54:	and    edx,0x1f
   14005fa57:	mov    r9d,edi
   14005fa5a:	mov    r8,rdi
   14005fa5d:	add    eax,edx
   14005fa5f:	mov    r11d,eax
   14005fa62:	and    eax,0x1f
   14005fa65:	sub    eax,edx
   14005fa67:	sar    r11d,0x5
   14005fa6b:	mov    ecx,eax
   14005fa6d:	mov    r10d,eax
   14005fa70:	shl    ebp,cl
   14005fa72:	sub    esi,eax
   14005fa74:	not    ebp
   14005fa76:	data16 data16 xchg ax,ax
   14005fa7a:	data16 xchg ax,ax
   14005fa7d:	data16 xchg ax,ax
   14005fa80:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14005fa85:	mov    ecx,r10d
   14005fa88:	mov    eax,ebp
   14005fa8a:	and    eax,edx
   14005fa8c:	shr    edx,cl
   14005fa8e:	mov    ecx,esi
   14005fa90:	or     edx,r9d
   14005fa93:	mov    DWORD PTR [rsp+0x90],eax
   14005fa9a:	add    r8,0x1
   14005fa9e:	mov    r9d,DWORD PTR [rsp+0x90]
   14005faa6:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14005faab:	shl    r9d,cl
   14005faae:	cmp    r8,r13
   14005fab1:	jl     0x14005fa80
   14005fab3:	movsxd rdx,r11d
   14005fab6:	lea    rcx,[rsp+0x28]
   14005fabb:	mov    ebx,0x2
   14005fac0:	lea    rax,[rdx*4+0x0]
   14005fac8:	sub    rcx,rax
   14005facb:	xchg   ax,ax
   14005facd:	data16 xchg ax,ax
   14005fad0:	cmp    rbx,rdx
   14005fad3:	jl     0x14005fadd
   14005fad5:	mov    eax,DWORD PTR [rcx]
   14005fad7:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14005fadb:	jmp    0x14005fae1
   14005fadd:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14005fae1:	sub    rcx,0x4
   14005fae5:	sub    rbx,0x1
   14005fae9:	jns    0x14005fad0
   14005faeb:	mov    ecx,DWORD PTR [rip+0x2888f]        # 0x140088380
   14005faf1:	mov    r9d,DWORD PTR [rip+0x2889c]        # 0x140088394
   14005faf8:	mov    rdx,QWORD PTR [rsp+0x88]
   14005fb00:	mov    edi,0x1
   14005fb05:	add    r9d,ecx
   14005fb08:	lea    r15d,[rdi+0x1e]
   14005fb0c:	jmp    0x14005fbc9
   14005fb11:	mov    eax,DWORD PTR [rip+0x28875]        # 0x14008838c
   14005fb17:	mov    r9d,DWORD PTR [rip+0x28876]        # 0x140088394
   14005fb1e:	btr    DWORD PTR [rsp+0x20],0x1f
   14005fb24:	cdq    
   14005fb25:	add    r9d,esi
   14005fb28:	mov    esi,0x20
   14005fb2d:	and    edx,0x1f
   14005fb30:	mov    r10d,edi
   14005fb33:	mov    r8,rdi
   14005fb36:	add    eax,edx
   14005fb38:	mov    r12d,eax
   14005fb3b:	and    eax,0x1f
   14005fb3e:	sub    eax,edx
   14005fb40:	sar    r12d,0x5
   14005fb44:	mov    ecx,eax
   14005fb46:	mov    r11d,eax
   14005fb49:	shl    ebp,cl
   14005fb4b:	sub    esi,eax
   14005fb4d:	not    ebp
   14005fb4f:	nop
   14005fb50:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14005fb55:	mov    ecx,r11d
   14005fb58:	mov    eax,ebp
   14005fb5a:	and    eax,edx
   14005fb5c:	shr    edx,cl
   14005fb5e:	mov    ecx,esi
   14005fb60:	or     edx,r10d
   14005fb63:	mov    DWORD PTR [rsp+0x90],eax
   14005fb6a:	add    r8,0x1
   14005fb6e:	mov    r10d,DWORD PTR [rsp+0x90]
   14005fb76:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14005fb7b:	shl    r10d,cl
   14005fb7e:	cmp    r8,r13
   14005fb81:	jl     0x14005fb50
   14005fb83:	movsxd rdx,r12d
   14005fb86:	lea    rcx,[rsp+0x28]
   14005fb8b:	mov    ebx,0x2
   14005fb90:	lea    rax,[rdx*4+0x0]
   14005fb98:	sub    rcx,rax
   14005fb9b:	xchg   ax,ax
   14005fb9d:	data16 xchg ax,ax
   14005fba0:	cmp    rbx,rdx
   14005fba3:	jl     0x14005fbad
   14005fba5:	mov    eax,DWORD PTR [rcx]
   14005fba7:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14005fbab:	jmp    0x14005fbb1
   14005fbad:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   14005fbb1:	sub    rcx,0x4
   14005fbb5:	sub    rbx,0x1
   14005fbb9:	jns    0x14005fba0
   14005fbbb:	mov    rdx,QWORD PTR [rsp+0x88]
   14005fbc3:	mov    r15d,0x1f
   14005fbc9:	mov    r13,QWORD PTR [rsp+0x50]
   14005fbce:	mov    r12,QWORD PTR [rsp+0x58]
   14005fbd3:	mov    rbp,QWORD PTR [rsp+0x68]
   14005fbd8:	mov    r14,QWORD PTR [rsp+0x48]
   14005fbdd:	sub    r15d,DWORD PTR [rip+0x287a8]        # 0x14008838c
   14005fbe4:	mov    eax,DWORD PTR [rip+0x287a6]        # 0x140088390
   14005fbea:	mov    rsi,QWORD PTR [rsp+0x60]
   14005fbef:	mov    rbx,QWORD PTR [rsp+0x98]
   14005fbf7:	movzx  ecx,r15b
   14005fbfb:	mov    r15,QWORD PTR [rsp+0x40]
   14005fc00:	shl    r9d,cl
   14005fc03:	neg    DWORD PTR [rsp+0x80]
   14005fc0a:	sbb    ecx,ecx
   14005fc0c:	and    ecx,0x80000000
   14005fc12:	or     r9d,ecx
   14005fc15:	or     r9d,DWORD PTR [rsp+0x20]
   14005fc1a:	cmp    eax,0x40
   14005fc1d:	jne    0x14005fc31
   14005fc1f:	mov    ecx,DWORD PTR [rsp+0x24]
   14005fc23:	mov    DWORD PTR [rdx+0x4],r9d
   14005fc27:	mov    eax,edi
   14005fc29:	mov    DWORD PTR [rdx],ecx
   14005fc2b:	add    rsp,0x70
   14005fc2f:	pop    rdi
   14005fc30:	ret    
   14005fc31:	cmp    eax,0x20
   14005fc34:	jne    0x14005fc39
   14005fc36:	mov    DWORD PTR [rdx],r9d
   14005fc39:	mov    eax,edi
   14005fc3b:	add    rsp,0x70
   14005fc3f:	pop    rdi
   14005fc40:	ret    
   14005fc41:	int3   
   14005fc42:	int3   
   14005fc43:	int3   
   14005fc44:	int3   
   14005fc45:	int3   
   14005fc46:	int3   
   14005fc47:	int3   
   14005fc48:	int3   
   14005fc49:	int3   
   14005fc4a:	int3   
   14005fc4b:	int3   
   14005fc4c:	int3   
   14005fc4d:	int3   
   14005fc4e:	int3   
   14005fc4f:	int3   
   14005fc50:	mov    rax,rsp
   14005fc53:	mov    QWORD PTR [rax+0x10],rdx
   14005fc57:	push   rdi
   14005fc58:	sub    rsp,0x70
   14005fc5c:	mov    QWORD PTR [rax+0x20],rbx
   14005fc60:	mov    QWORD PTR [rax-0x18],rsi
   14005fc64:	mov    QWORD PTR [rax-0x38],r15
   14005fc68:	movzx  eax,WORD PTR [rcx+0xa]
   14005fc6c:	mov    r9d,0x1f
   14005fc72:	mov    esi,eax
   14005fc74:	and    eax,0x8000
   14005fc79:	mov    DWORD PTR [rsp+0x80],eax
   14005fc80:	mov    eax,DWORD PTR [rcx+0x6]
   14005fc83:	and    esi,0x7fff
   14005fc89:	mov    DWORD PTR [rsp+0x20],eax
   14005fc8d:	mov    eax,DWORD PTR [rcx+0x2]
   14005fc90:	sub    esi,0x3fff
   14005fc96:	mov    DWORD PTR [rsp+0x24],eax
   14005fc9a:	movzx  eax,WORD PTR [rcx]
   14005fc9d:	shl    eax,0x10
   14005fca0:	cmp    esi,0xffffc001
   14005fca6:	mov    DWORD PTR [rsp+0x28],eax
   14005fcaa:	jne    0x14005fce6
   14005fcac:	xor    edi,edi
   14005fcae:	mov    r9d,edi
   14005fcb1:	mov    rax,rdi
   14005fcb4:	cmp    DWORD PTR [rsp+rax*4+0x20],edi
   14005fcb8:	jne    0x14005fccf
   14005fcba:	add    rax,0x1
   14005fcbe:	cmp    rax,0x3
   14005fcc2:	jl     0x14005fcb4
   14005fcc4:	mov    r15d,0x1f
   14005fcca:	jmp    0x14006029d
   14005fccf:	mov    QWORD PTR [rsp+0x20],rdi
   14005fcd4:	mov    DWORD PTR [rsp+0x28],edi
   14005fcd8:	mov    edi,0x2
   14005fcdd:	lea    r15d,[rdi+0x1d]
   14005fce1:	jmp    0x14006029d
   14005fce6:	mov    QWORD PTR [rsp+0x68],rbp
   14005fceb:	lea    rcx,[rsp+0x20]
   14005fcf0:	mov    QWORD PTR [rsp+0x58],r12
   14005fcf5:	mov    rax,QWORD PTR [rcx]
   14005fcf8:	mov    QWORD PTR [rsp+0x50],r13
   14005fcfd:	mov    QWORD PTR [rsp+0x48],r14
   14005fd02:	mov    r14d,DWORD PTR [rip+0x28697]        # 0x1400883a0
   14005fd09:	mov    QWORD PTR [rsp+0x30],rax
   14005fd0e:	mov    eax,DWORD PTR [rcx+0x8]
   14005fd11:	mov    DWORD PTR [rsp+0x38],eax
   14005fd15:	xor    edi,edi
   14005fd17:	mov    eax,r14d
   14005fd1a:	cdq    
   14005fd1b:	mov    r11d,r9d
   14005fd1e:	or     ebp,0xffffffff
   14005fd21:	and    edx,r9d
   14005fd24:	mov    r15d,esi
   14005fd27:	mov    ebx,edi
   14005fd29:	add    eax,edx
   14005fd2b:	mov    r10d,eax
   14005fd2e:	and    eax,r9d
   14005fd31:	sar    r10d,0x5
   14005fd35:	sub    eax,edx
   14005fd37:	movsxd r12,r10d
   14005fd3a:	sub    r11d,eax
   14005fd3d:	mov    ecx,DWORD PTR [rsp+r12*4+0x20]
   14005fd42:	bt     ecx,r11d
   14005fd46:	jae    0x14005fdf9
   14005fd4c:	mov    ecx,r11d
   14005fd4f:	mov    eax,ebp
   14005fd51:	movsxd rdx,r10d
   14005fd54:	shl    eax,cl
   14005fd56:	not    eax
   14005fd58:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14005fd5c:	jne    0x14005fd82
   14005fd5e:	lea    eax,[r10+0x1]
   14005fd62:	movsxd rcx,eax
   14005fd65:	cmp    rcx,0x3
   14005fd69:	jge    0x14005fdf9
   14005fd6f:	nop
   14005fd70:	cmp    DWORD PTR [rsp+rcx*4+0x20],ebx
   14005fd74:	jne    0x14005fd82
   14005fd76:	add    rcx,0x1
   14005fd7a:	cmp    rcx,0x3
   14005fd7e:	jl     0x14005fd70
   14005fd80:	jmp    0x14005fdf9
   14005fd82:	mov    ecx,r9d
   14005fd85:	lea    eax,[r14-0x1]
   14005fd89:	cdq    
   14005fd8a:	and    edx,r9d
   14005fd8d:	add    eax,edx
   14005fd8f:	mov    r8d,eax
   14005fd92:	and    eax,r9d
   14005fd95:	sub    eax,edx
   14005fd97:	sar    r8d,0x5
   14005fd9b:	mov    edx,0x1
   14005fda0:	sub    ecx,eax
   14005fda2:	movsxd r9,r8d
   14005fda5:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14005fdaa:	shl    edx,cl
   14005fdac:	lea    ecx,[rax+rdx*1]
   14005fdaf:	cmp    ecx,eax
   14005fdb1:	jb     0x14005fdb7
   14005fdb3:	cmp    ecx,edx
   14005fdb5:	jae    0x14005fdbc
   14005fdb7:	mov    ebx,0x1
   14005fdbc:	lea    eax,[r8-0x1]
   14005fdc0:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14005fdc5:	test   eax,eax
   14005fdc7:	movsxd rdx,eax
   14005fdca:	js     0x14005fdf9
   14005fdcc:	data16 data16 xchg ax,ax
   14005fdd0:	test   ebx,ebx
   14005fdd2:	je     0x14005fdf9
   14005fdd4:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14005fdd8:	mov    ebx,edi
   14005fdda:	lea    r8d,[rax+0x1]
   14005fdde:	cmp    r8d,eax
   14005fde1:	jb     0x14005fde9
   14005fde3:	cmp    r8d,0x1
   14005fde7:	jae    0x14005fdee
   14005fde9:	mov    ebx,0x1
   14005fdee:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14005fdf3:	sub    rdx,0x1
   14005fdf7:	jns    0x14005fdd0
   14005fdf9:	mov    ecx,r11d
   14005fdfc:	mov    eax,ebp
   14005fdfe:	mov    r13d,0x3
   14005fe04:	shl    eax,cl
   14005fe06:	and    DWORD PTR [rsp+r12*4+0x20],eax
   14005fe0b:	lea    eax,[r10+0x1]
   14005fe0f:	movsxd rdx,eax
   14005fe12:	cmp    rdx,r13
   14005fe15:	jge    0x14005fe2d
   14005fe17:	lea    rcx,[rsp+rdx*4+0x20]
   14005fe1c:	mov    r8,r13
   14005fe1f:	sub    r8,rdx
   14005fe22:	xor    edx,edx
   14005fe24:	shl    r8,0x2
   14005fe28:	call   0x140047720
   14005fe2d:	test   ebx,ebx
   14005fe2f:	je     0x14005fe34
   14005fe31:	add    esi,0x1
   14005fe34:	mov    edx,DWORD PTR [rip+0x28562]        # 0x14008839c
   14005fe3a:	mov    eax,edx
   14005fe3c:	sub    eax,r14d
   14005fe3f:	cmp    esi,eax
   14005fe41:	jge    0x14005fe65
   14005fe43:	mov    rdx,QWORD PTR [rsp+0x88]
   14005fe4b:	mov    QWORD PTR [rsp+0x20],rdi
   14005fe50:	mov    DWORD PTR [rsp+0x28],edi
   14005fe54:	mov    r9d,edi
   14005fe57:	mov    edi,0x2
   14005fe5c:	lea    r15d,[rdi+0x1d]
   14005fe60:	jmp    0x140060289
   14005fe65:	cmp    esi,edx
   14005fe67:	jg     0x1400600ed
   14005fe6d:	sub    edx,r15d
   14005fe70:	lea    rax,[rsp+0x30]
   14005fe75:	mov    r10d,ebp
   14005fe78:	mov    rcx,QWORD PTR [rax]
   14005fe7b:	mov    esi,0x20
   14005fe80:	mov    r9d,edi
   14005fe83:	mov    QWORD PTR [rsp+0x20],rcx
   14005fe88:	mov    ecx,DWORD PTR [rax+0x8]
   14005fe8b:	mov    eax,edx
   14005fe8d:	cdq    
   14005fe8e:	mov    DWORD PTR [rsp+0x28],ecx
   14005fe92:	mov    ebx,esi
   14005fe94:	and    edx,0x1f
   14005fe97:	mov    r8,rdi
   14005fe9a:	add    eax,edx
   14005fe9c:	mov    r12d,eax
   14005fe9f:	and    eax,0x1f
   14005fea2:	sub    eax,edx
   14005fea4:	sar    r12d,0x5
   14005fea8:	mov    ecx,eax
   14005feaa:	mov    r11d,eax
   14005fead:	shl    r10d,cl
   14005feb0:	sub    ebx,eax
   14005feb2:	not    r10d
   14005feb5:	data16 data16 xchg ax,ax
   14005feb9:	data16 xchg ax,ax
   14005febc:	data16 data16 xchg ax,ax
   14005fec0:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14005fec5:	mov    ecx,r11d
   14005fec8:	add    r8,0x1
   14005fecc:	mov    eax,edx
   14005fece:	shr    edx,cl
   14005fed0:	mov    ecx,ebx
   14005fed2:	or     edx,r9d
   14005fed5:	and    eax,r10d
   14005fed8:	mov    DWORD PTR [rsp+0x90],eax
   14005fedf:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14005fee4:	mov    r9d,DWORD PTR [rsp+0x90]
   14005feec:	shl    r9d,cl
   14005feef:	cmp    r8,r13
   14005fef2:	jl     0x14005fec0
   14005fef4:	movsxd r8,r12d
   14005fef7:	lea    rdx,[rsp+0x28]
   14005fefc:	mov    ebx,0x2
   14005ff01:	lea    rax,[r8*4+0x0]
   14005ff09:	mov    rcx,rbx
   14005ff0c:	sub    rdx,rax
   14005ff0f:	nop
   14005ff10:	cmp    rcx,r8
   14005ff13:	jl     0x14005ff1d
   14005ff15:	mov    eax,DWORD PTR [rdx]
   14005ff17:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14005ff1b:	jmp    0x14005ff21
   14005ff1d:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   14005ff21:	sub    rdx,0x4
   14005ff25:	sub    rcx,0x1
   14005ff29:	jns    0x14005ff10
   14005ff2b:	mov    r8d,DWORD PTR [rip+0x2846e]        # 0x1400883a0
   14005ff32:	mov    r15d,0x1f
   14005ff38:	mov    eax,r8d
   14005ff3b:	mov    r12d,r15d
   14005ff3e:	cdq    
   14005ff3f:	and    edx,0x1f
   14005ff42:	add    eax,edx
   14005ff44:	mov    r11d,eax
   14005ff47:	and    eax,0x1f
   14005ff4a:	sar    r11d,0x5
   14005ff4e:	sub    eax,edx
   14005ff50:	movsxd r14,r11d
   14005ff53:	sub    r12d,eax
   14005ff56:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14005ff5b:	bt     ecx,r12d
   14005ff5f:	jae    0x140060011
   14005ff65:	mov    ecx,r12d
   14005ff68:	mov    eax,ebp
   14005ff6a:	movsxd rdx,r11d
   14005ff6d:	shl    eax,cl
   14005ff6f:	not    eax
   14005ff71:	test   DWORD PTR [rsp+rdx*4+0x20],eax
   14005ff75:	jne    0x14005ff98
   14005ff77:	lea    eax,[r11+0x1]
   14005ff7b:	movsxd rcx,eax
   14005ff7e:	cmp    rcx,r13
   14005ff81:	jge    0x140060011
   14005ff87:	cmp    DWORD PTR [rsp+rcx*4+0x20],edi
   14005ff8b:	jne    0x14005ff98
   14005ff8d:	add    rcx,0x1
   14005ff91:	cmp    rcx,r13
   14005ff94:	jl     0x14005ff87
   14005ff96:	jmp    0x140060011
   14005ff98:	lea    eax,[r8-0x1]
   14005ff9c:	mov    ecx,r15d
   14005ff9f:	mov    r8d,0x1
   14005ffa5:	cdq    
   14005ffa6:	and    edx,r15d
   14005ffa9:	add    eax,edx
   14005ffab:	mov    r9d,eax
   14005ffae:	and    eax,r15d
   14005ffb1:	sub    eax,edx
   14005ffb3:	sar    r9d,0x5
   14005ffb7:	sub    ecx,eax
   14005ffb9:	movsxd r10,r9d
   14005ffbc:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14005ffc1:	shl    r8d,cl
   14005ffc4:	mov    ecx,edi
   14005ffc6:	lea    edx,[rax+r8*1]
   14005ffca:	cmp    edx,eax
   14005ffcc:	jb     0x14005ffd3
   14005ffce:	cmp    edx,r8d
   14005ffd1:	jae    0x14005ffd8
   14005ffd3:	mov    ecx,0x1
   14005ffd8:	lea    eax,[r9-0x1]
   14005ffdc:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14005ffe1:	test   eax,eax
   14005ffe3:	movsxd rdx,eax
   14005ffe6:	js     0x140060011
   14005ffe8:	test   ecx,ecx
   14005ffea:	je     0x140060011
   14005ffec:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14005fff0:	mov    ecx,edi
   14005fff2:	lea    r8d,[rax+0x1]
   14005fff6:	cmp    r8d,eax
   14005fff9:	jb     0x140060001
   14005fffb:	cmp    r8d,0x1
   14005ffff:	jae    0x140060006
   140060001:	mov    ecx,0x1
   140060006:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14006000b:	sub    rdx,0x1
   14006000f:	jns    0x14005ffe8
   140060011:	mov    ecx,r12d
   140060014:	mov    eax,ebp
   140060016:	shl    eax,cl
   140060018:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14006001d:	lea    eax,[r11+0x1]
   140060021:	movsxd rdx,eax
   140060024:	cmp    rdx,r13
   140060027:	jge    0x14006003f
   140060029:	sub    r13,rdx
   14006002c:	lea    rcx,[rsp+rdx*4+0x20]
   140060031:	xor    edx,edx
   140060033:	shl    r13,0x2
   140060037:	mov    r8,r13
   14006003a:	call   0x140047720
   14006003f:	mov    eax,DWORD PTR [rip+0x2835f]        # 0x1400883a4
   140060045:	mov    r9d,edi
   140060048:	mov    r8,rdi
   14006004b:	add    eax,0x1
   14006004e:	cdq    
   14006004f:	and    edx,r15d
   140060052:	add    eax,edx
   140060054:	mov    r11d,eax
   140060057:	and    eax,r15d
   14006005a:	sub    eax,edx
   14006005c:	sar    r11d,0x5
   140060060:	mov    ecx,eax
   140060062:	mov    r10d,eax
   140060065:	shl    ebp,cl
   140060067:	sub    esi,eax
   140060069:	not    ebp
   14006006b:	xchg   ax,ax
   14006006d:	data16 xchg ax,ax
   140060070:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140060075:	mov    ecx,r10d
   140060078:	mov    eax,ebp
   14006007a:	and    eax,edx
   14006007c:	shr    edx,cl
   14006007e:	mov    ecx,esi
   140060080:	or     edx,r9d
   140060083:	mov    DWORD PTR [rsp+0x90],eax
   14006008a:	add    r8,0x1
   14006008e:	mov    r9d,DWORD PTR [rsp+0x90]
   140060096:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14006009b:	shl    r9d,cl
   14006009e:	cmp    r8,0x3
   1400600a2:	jl     0x140060070
   1400600a4:	movsxd r8,r11d
   1400600a7:	lea    rdx,[rsp+0x28]
   1400600ac:	mov    rcx,rbx
   1400600af:	lea    rax,[r8*4+0x0]
   1400600b7:	sub    rdx,rax
   1400600ba:	data16 xchg ax,ax
   1400600bd:	data16 xchg ax,ax
   1400600c0:	cmp    rcx,r8
   1400600c3:	jl     0x1400600cd
   1400600c5:	mov    eax,DWORD PTR [rdx]
   1400600c7:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   1400600cb:	jmp    0x1400600d1
   1400600cd:	mov    DWORD PTR [rsp+rcx*4+0x20],edi
   1400600d1:	sub    rdx,0x4
   1400600d5:	sub    rcx,0x1
   1400600d9:	jns    0x1400600c0
   1400600db:	mov    rdx,QWORD PTR [rsp+0x88]
   1400600e3:	mov    r9d,edi
   1400600e6:	mov    edi,ebx
   1400600e8:	jmp    0x140060289
   1400600ed:	cmp    esi,DWORD PTR [rip+0x282a5]        # 0x140088398
   1400600f3:	jl     0x1400601d1
   1400600f9:	mov    eax,DWORD PTR [rip+0x282a5]        # 0x1400883a4
   1400600ff:	mov    esi,0x20
   140060104:	mov    QWORD PTR [rsp+0x20],rdi
   140060109:	bts    DWORD PTR [rsp+0x20],0x1f
   14006010f:	cdq    
   140060110:	mov    DWORD PTR [rsp+0x28],edi
   140060114:	and    edx,0x1f
   140060117:	mov    r9d,edi
   14006011a:	mov    r8,rdi
   14006011d:	add    eax,edx
   14006011f:	mov    r11d,eax
   140060122:	and    eax,0x1f
   140060125:	sub    eax,edx
   140060127:	sar    r11d,0x5
   14006012b:	mov    ecx,eax
   14006012d:	mov    r10d,eax
   140060130:	shl    ebp,cl
   140060132:	sub    esi,eax
   140060134:	not    ebp
   140060136:	data16 data16 xchg ax,ax
   14006013a:	data16 xchg ax,ax
   14006013d:	data16 xchg ax,ax
   140060140:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140060145:	mov    ecx,r10d
   140060148:	mov    eax,ebp
   14006014a:	and    eax,edx
   14006014c:	shr    edx,cl
   14006014e:	mov    ecx,esi
   140060150:	or     edx,r9d
   140060153:	mov    DWORD PTR [rsp+0x90],eax
   14006015a:	add    r8,0x1
   14006015e:	mov    r9d,DWORD PTR [rsp+0x90]
   140060166:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14006016b:	shl    r9d,cl
   14006016e:	cmp    r8,r13
   140060171:	jl     0x140060140
   140060173:	movsxd rdx,r11d
   140060176:	lea    rcx,[rsp+0x28]
   14006017b:	mov    ebx,0x2
   140060180:	lea    rax,[rdx*4+0x0]
   140060188:	sub    rcx,rax
   14006018b:	xchg   ax,ax
   14006018d:	data16 xchg ax,ax
   140060190:	cmp    rbx,rdx
   140060193:	jl     0x14006019d
   140060195:	mov    eax,DWORD PTR [rcx]
   140060197:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14006019b:	jmp    0x1400601a1
   14006019d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   1400601a1:	sub    rcx,0x4
   1400601a5:	sub    rbx,0x1
   1400601a9:	jns    0x140060190
   1400601ab:	mov    ecx,DWORD PTR [rip+0x281e7]        # 0x140088398
   1400601b1:	mov    r9d,DWORD PTR [rip+0x281f4]        # 0x1400883ac
   1400601b8:	mov    rdx,QWORD PTR [rsp+0x88]
   1400601c0:	mov    edi,0x1
   1400601c5:	add    r9d,ecx
   1400601c8:	lea    r15d,[rdi+0x1e]
   1400601cc:	jmp    0x140060289
   1400601d1:	mov    eax,DWORD PTR [rip+0x281cd]        # 0x1400883a4
   1400601d7:	mov    r9d,DWORD PTR [rip+0x281ce]        # 0x1400883ac
   1400601de:	btr    DWORD PTR [rsp+0x20],0x1f
   1400601e4:	cdq    
   1400601e5:	add    r9d,esi
   1400601e8:	mov    esi,0x20
   1400601ed:	and    edx,0x1f
   1400601f0:	mov    r10d,edi
   1400601f3:	mov    r8,rdi
   1400601f6:	add    eax,edx
   1400601f8:	mov    r12d,eax
   1400601fb:	and    eax,0x1f
   1400601fe:	sub    eax,edx
   140060200:	sar    r12d,0x5
   140060204:	mov    ecx,eax
   140060206:	mov    r11d,eax
   140060209:	shl    ebp,cl
   14006020b:	sub    esi,eax
   14006020d:	not    ebp
   14006020f:	nop
   140060210:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140060215:	mov    ecx,r11d
   140060218:	mov    eax,ebp
   14006021a:	and    eax,edx
   14006021c:	shr    edx,cl
   14006021e:	mov    ecx,esi
   140060220:	or     edx,r10d
   140060223:	mov    DWORD PTR [rsp+0x90],eax
   14006022a:	add    r8,0x1
   14006022e:	mov    r10d,DWORD PTR [rsp+0x90]
   140060236:	mov    DWORD PTR [rsp+r8*4+0x1c],edx
   14006023b:	shl    r10d,cl
   14006023e:	cmp    r8,r13
   140060241:	jl     0x140060210
   140060243:	movsxd rdx,r12d
   140060246:	lea    rcx,[rsp+0x28]
   14006024b:	mov    ebx,0x2
   140060250:	lea    rax,[rdx*4+0x0]
   140060258:	sub    rcx,rax
   14006025b:	xchg   ax,ax
   14006025d:	data16 xchg ax,ax
   140060260:	cmp    rbx,rdx
   140060263:	jl     0x14006026d
   140060265:	mov    eax,DWORD PTR [rcx]
   140060267:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
   14006026b:	jmp    0x140060271
   14006026d:	mov    DWORD PTR [rsp+rbx*4+0x20],edi
   140060271:	sub    rcx,0x4
   140060275:	sub    rbx,0x1
   140060279:	jns    0x140060260
   14006027b:	mov    rdx,QWORD PTR [rsp+0x88]
   140060283:	mov    r15d,0x1f
   140060289:	mov    r13,QWORD PTR [rsp+0x50]
   14006028e:	mov    r12,QWORD PTR [rsp+0x58]
   140060293:	mov    rbp,QWORD PTR [rsp+0x68]
   140060298:	mov    r14,QWORD PTR [rsp+0x48]
   14006029d:	sub    r15d,DWORD PTR [rip+0x28100]        # 0x1400883a4
   1400602a4:	mov    eax,DWORD PTR [rip+0x280fe]        # 0x1400883a8
   1400602aa:	mov    rsi,QWORD PTR [rsp+0x60]
   1400602af:	mov    rbx,QWORD PTR [rsp+0x98]
   1400602b7:	movzx  ecx,r15b
   1400602bb:	mov    r15,QWORD PTR [rsp+0x40]
   1400602c0:	shl    r9d,cl
   1400602c3:	neg    DWORD PTR [rsp+0x80]
   1400602ca:	sbb    ecx,ecx
   1400602cc:	and    ecx,0x80000000
   1400602d2:	or     r9d,ecx
   1400602d5:	or     r9d,DWORD PTR [rsp+0x20]
   1400602da:	cmp    eax,0x40
   1400602dd:	jne    0x1400602f1
   1400602df:	mov    ecx,DWORD PTR [rsp+0x24]
   1400602e3:	mov    DWORD PTR [rdx+0x4],r9d
   1400602e7:	mov    eax,edi
   1400602e9:	mov    DWORD PTR [rdx],ecx
   1400602eb:	add    rsp,0x70
   1400602ef:	pop    rdi
   1400602f0:	ret    
   1400602f1:	cmp    eax,0x20
   1400602f4:	jne    0x1400602f9
   1400602f6:	mov    DWORD PTR [rdx],r9d
   1400602f9:	mov    eax,edi
   1400602fb:	add    rsp,0x70
   1400602ff:	pop    rdi
   140060300:	ret    
   140060301:	int3   
   140060302:	int3   
   140060303:	int3   
   140060304:	int3   
   140060305:	int3   
   140060306:	int3   
   140060307:	int3   
   140060308:	int3   
   140060309:	int3   
   14006030a:	int3   
   14006030b:	int3   
   14006030c:	int3   
   14006030d:	int3   
   14006030e:	int3   
   14006030f:	int3   
   140060310:	mov    QWORD PTR [rsp+0x18],rbx
   140060315:	push   rbp
   140060316:	push   rsi
   140060317:	push   rdi
   140060318:	push   r12
   14006031a:	push   r13
   14006031c:	push   r14
   14006031e:	push   r15
   140060320:	sub    rsp,0xb0
   140060327:	mov    rax,QWORD PTR [rip+0x26a42]        # 0x140086d70
   14006032e:	xor    rax,rsp
   140060331:	mov    QWORD PTR [rsp+0xa0],rax
   140060339:	mov    rsi,QWORD PTR [rsp+0x128]
   140060341:	xor    edi,edi
   140060343:	mov    DWORD PTR [rsp+0x38],r9d
   140060348:	test   rsi,rsi
   14006034b:	mov    eax,edi
   14006034d:	mov    r13,rdx
   140060350:	mov    QWORD PTR [rsp+0x48],rcx
   140060355:	lea    r11,[rsp+0x80]
   14006035d:	mov    WORD PTR [rsp+0x34],0x0
   140060364:	lea    r14d,[rdi+0x1]
   140060368:	mov    r10d,edi
   14006036b:	mov    ebp,edi
   14006036d:	mov    r15d,edi
   140060370:	mov    r12d,edi
   140060373:	mov    DWORD PTR [rsp+0x30],eax
   140060377:	mov    ebx,edi
   140060379:	mov    r9d,edi
   14006037c:	jne    0x1400603a4
   14006037e:	call   0x140048680
   140060383:	xor    r9d,r9d
   140060386:	xor    r8d,r8d
   140060389:	xor    edx,edx
   14006038b:	xor    ecx,ecx
   14006038d:	mov    QWORD PTR [rsp+0x20],rdi
   140060392:	mov    DWORD PTR [rax],0x16
   140060398:	call   0x14004e100
   14006039d:	xor    eax,eax
   14006039f:	jmp    0x140060c04
   1400603a4:	mov    rdi,r8
   1400603a7:	movzx  eax,BYTE PTR [r8]
   1400603ab:	cmp    al,0x20
   1400603ad:	je     0x1400603bb
   1400603af:	cmp    al,0x9
   1400603b1:	je     0x1400603bb
   1400603b3:	cmp    al,0xa
   1400603b5:	je     0x1400603bb
   1400603b7:	cmp    al,0xd
   1400603b9:	jne    0x1400603c6
   1400603bb:	add    r8,r14
   1400603be:	jmp    0x1400603a7
   1400603c0:	mov    r9d,0x5
   1400603c6:	lea    rcx,[rip+0xfffffffffff9fc33]        # 0x140000000
   1400603cd:	data16 xchg ax,ax
   1400603d0:	movzx  edx,BYTE PTR [r8]
   1400603d4:	add    r8,0x1
   1400603d8:	cmp    r9d,0xb
   1400603dc:	ja     0x1400606d5
   1400603e2:	movsxd rax,r9d
   1400603e5:	mov    ecx,DWORD PTR [rcx+rax*4+0x60c30]
   1400603ec:	lea    rax,[rip+0xfffffffffff9fc0d]        # 0x140000000
   1400603f3:	add    rcx,rax
   1400603f6:	jmp    rcx
   1400603f8:	lea    eax,[rdx-0x31]
   1400603fb:	cmp    al,0x8
   1400603fd:	ja     0x14006040b
   1400603ff:	mov    r9d,0x3
   140060405:	sub    r8,0x1
   140060409:	jmp    0x1400603c6
   14006040b:	mov    rax,QWORD PTR [rsi]
   14006040e:	mov    rcx,QWORD PTR [rax+0x128]
   140060415:	mov    rax,QWORD PTR [rcx]
   140060418:	cmp    dl,BYTE PTR [rax]
   14006041a:	je     0x1400603c0
   14006041c:	cmp    dl,0x2b
   14006041f:	je     0x140060446
   140060421:	cmp    dl,0x2d
   140060424:	je     0x140060437
   140060426:	cmp    dl,0x30
   140060429:	jne    0x14006071b
   14006042f:	mov    r9d,0x1
   140060435:	jmp    0x1400603c6
   140060437:	mov    r9d,0x2
   14006043d:	mov    WORD PTR [rsp+0x34],0x8000
   140060444:	jmp    0x1400603c6
   140060446:	mov    r9d,0x2
   14006044c:	mov    WORD PTR [rsp+0x34],0x0
   140060453:	jmp    0x1400603c6
   140060458:	lea    eax,[rdx-0x31]
   14006045b:	mov    ebp,0x1
   140060460:	cmp    al,0x8
   140060462:	ja     0x140060470
   140060464:	lea    r9d,[rbp+0x2]
   140060468:	sub    r8,rbp
   14006046b:	jmp    0x1400603c6
   140060470:	mov    rax,QWORD PTR [rsi]
   140060473:	mov    rcx,QWORD PTR [rax+0x128]
   14006047a:	mov    rax,QWORD PTR [rcx]
   14006047d:	cmp    dl,BYTE PTR [rax]
   14006047f:	jne    0x14006048c
   140060481:	mov    r9d,0x4
   140060487:	jmp    0x1400603c6
   14006048c:	movsx  eax,dl
   14006048f:	add    eax,0xffffffd5
   140060492:	cmp    eax,0x3a
   140060495:	ja     0x140060721
   14006049b:	lea    rdx,[rip+0xfffffffffff9fb5e]        # 0x140000000
   1400604a2:	cdqe   
   1400604a4:	movzx  eax,BYTE PTR [rdx+rax*1+0x60c70]
   1400604ac:	mov    ecx,DWORD PTR [rdx+rax*4+0x60c60]
   1400604b3:	add    rcx,rdx
   1400604b6:	jmp    rcx
   1400604b8:	mov    r9d,ebp
   1400604bb:	jmp    0x1400603c6
   1400604c0:	lea    eax,[rdx-0x31]
   1400604c3:	cmp    al,0x8
   1400604c5:	jbe    0x1400603ff
   1400604cb:	mov    rax,QWORD PTR [rsi]
   1400604ce:	mov    rcx,QWORD PTR [rax+0x128]
   1400604d5:	mov    rax,QWORD PTR [rcx]
   1400604d8:	cmp    dl,BYTE PTR [rax]
   1400604da:	je     0x1400603c0
   1400604e0:	cmp    dl,0x30
   1400604e3:	jne    0x140060726
   1400604e9:	mov    r9d,0x1
   1400604ef:	jmp    0x1400603c6
   1400604f4:	cmp    dl,0x30
   1400604f7:	mov    ebp,0x1
   1400604fc:	jl     0x140060526
   1400604fe:	xchg   ax,ax
   140060500:	cmp    dl,0x39
   140060503:	jg     0x140060526
   140060505:	cmp    r10d,0x19
   140060509:	jae    0x140060519
   14006050b:	sub    dl,0x30
   14006050e:	add    r10d,ebp
   140060511:	mov    BYTE PTR [r11],dl
   140060514:	add    r11,rbp
   140060517:	jmp    0x14006051b
   140060519:	add    ebx,ebp
   14006051b:	mov    dl,BYTE PTR [r8]
   14006051e:	add    r8,rbp
   140060521:	cmp    dl,0x30
   140060524:	jge    0x140060500
   140060526:	mov    rax,QWORD PTR [rsi]
   140060529:	mov    rcx,QWORD PTR [rax+0x128]
   140060530:	mov    rax,QWORD PTR [rcx]
   140060533:	cmp    dl,BYTE PTR [rax]
   140060535:	jne    0x140060542
   140060537:	mov    r9d,0x4
   14006053d:	jmp    0x1400603c6
   140060542:	movsx  eax,dl
   140060545:	add    eax,0xffffffd5
   140060548:	cmp    eax,0x3a
   14006054b:	ja     0x140060721
   140060551:	lea    rdx,[rip+0xfffffffffff9faa8]        # 0x140000000
   140060558:	cdqe   
   14006055a:	movzx  eax,BYTE PTR [rdx+rax*1+0x60cb8]
   140060562:	mov    ecx,DWORD PTR [rdx+rax*4+0x60cac]
   140060569:	add    rcx,rdx
   14006056c:	jmp    rcx
   14006056e:	mov    r9d,0x6
   140060574:	jmp    0x1400603c6
   140060579:	test   r10d,r10d
   14006057c:	mov    ebp,0x1
   140060581:	mov    r15d,ebp
   140060584:	jne    0x14006059d
   140060586:	cmp    dl,0x30
   140060589:	jne    0x1400605a0
   14006058b:	xchg   ax,ax
   14006058d:	data16 xchg ax,ax
   140060590:	mov    dl,BYTE PTR [r8]
   140060593:	sub    ebx,ebp
   140060595:	add    r8,rbp
   140060598:	cmp    dl,0x30
   14006059b:	je     0x140060590
   14006059d:	cmp    dl,0x30
   1400605a0:	jl     0x1400605c6
   1400605a2:	cmp    dl,0x39
   1400605a5:	jg     0x1400605c6
   1400605a7:	cmp    r10d,0x19
   1400605ab:	jae    0x1400605bb
   1400605ad:	sub    dl,0x30
   1400605b0:	add    r10d,ebp
   1400605b3:	mov    BYTE PTR [r11],dl
   1400605b6:	add    r11,rbp
   1400605b9:	sub    ebx,ebp
   1400605bb:	mov    dl,BYTE PTR [r8]
   1400605be:	add    r8,rbp
   1400605c1:	cmp    dl,0x30
   1400605c4:	jge    0x1400605a2
   1400605c6:	movsx  eax,dl
   1400605c9:	add    eax,0xffffffd5
   1400605cc:	cmp    eax,0x3a
   1400605cf:	ja     0x140060721
   1400605d5:	lea    rdx,[rip+0xfffffffffff9fa24]        # 0x140000000
   1400605dc:	cdqe   
   1400605de:	movzx  eax,BYTE PTR [rdx+rax*1+0x60d00]
   1400605e6:	mov    ecx,DWORD PTR [rdx+rax*4+0x60cf4]
   1400605ed:	add    rcx,rdx
   1400605f0:	jmp    rcx
   1400605f2:	sub    r8,rbp
   1400605f5:	mov    r9d,0xb
   1400605fb:	jmp    0x1400603c6
   140060600:	sub    dl,0x30
   140060603:	mov    r15d,0x1
   140060609:	cmp    dl,0x9
   14006060c:	ja     0x140060726
   140060612:	lea    r9d,[r15+0x3]
   140060616:	sub    r8,r15
   140060619:	jmp    0x1400603c6
   14006061e:	lea    eax,[rdx-0x31]
   140060621:	lea    rdi,[r8-0x2]
   140060625:	cmp    al,0x8
   140060627:	ja     0x140060638
   140060629:	mov    r9d,0x9
   14006062f:	sub    r8,0x1
   140060633:	jmp    0x1400603c6
   140060638:	cmp    dl,0x2b
   14006063b:	je     0x140060656
   14006063d:	cmp    dl,0x2d
   140060640:	je     0x1400606bf
   140060642:	cmp    dl,0x30
   140060645:	jne    0x140060726
   14006064b:	mov    r9d,0x8
   140060651:	jmp    0x1400603c6
   140060656:	mov    r9d,0x7
   14006065c:	jmp    0x1400603c6
   140060661:	cmp    dl,0x30
   140060664:	mov    r12d,0x1
   14006066a:	jne    0x14006067b
   14006066c:	data16 data16 xchg ax,ax
   140060670:	mov    dl,BYTE PTR [r8]
   140060673:	add    r8,r12
   140060676:	cmp    dl,0x30
   140060679:	je     0x140060670
   14006067b:	sub    dl,0x31
   14006067e:	sub    r8,r12
   140060681:	cmp    dl,0x8
   140060684:	ja     0x1400606df
   140060686:	mov    r9d,0x9
   14006068c:	jmp    0x1400603c6
   140060691:	lea    eax,[rdx-0x31]
   140060694:	cmp    al,0x8
   140060696:	ja     0x140060642
   140060698:	mov    r9d,0x9
   14006069e:	sub    r8,0x1
   1400606a2:	jmp    0x1400603c6
   1400606a7:	cmp    DWORD PTR [rsp+0x120],0x0
   1400606af:	je     0x14006071b
   1400606b1:	cmp    dl,0x2b
   1400606b4:	lea    rdi,[r8-0x1]
   1400606b8:	je     0x140060656
   1400606ba:	cmp    dl,0x2d
   1400606bd:	jne    0x140060726
   1400606bf:	mov    r9d,0x7
   1400606c5:	or     r14d,0xffffffff
   1400606c9:	jmp    0x1400603c6
   1400606ce:	lea    rcx,[rip+0xfffffffffff9f92b]        # 0x140000000
   1400606d5:	cmp    r9d,0xa
   1400606d9:	jne    0x1400603d0
   1400606df:	xor    edi,edi
   1400606e1:	test   ebp,ebp
   1400606e3:	mov    QWORD PTR [r13+0x0],r8
   1400606e7:	je     0x140060bd7
   1400606ed:	cmp    r10d,0x18
   1400606f1:	jbe    0x14006078d
   1400606f7:	movzx  eax,BYTE PTR [rsp+0x97]
   1400606ff:	cmp    al,0x5
   140060701:	jl     0x14006070c
   140060703:	add    al,0x1
   140060705:	mov    BYTE PTR [rsp+0x97],al
   14006070c:	sub    r11,0x1
   140060710:	mov    r10d,0x18
   140060716:	add    ebx,0x1
   140060719:	jmp    0x140060796
   14006071b:	sub    r8,0x1
   14006071f:	jmp    0x1400606df
   140060721:	sub    r8,rbp
   140060724:	jmp    0x1400606df
   140060726:	mov    r8,rdi
   140060729:	jmp    0x1400606df
   14006072b:	xor    edi,edi
   14006072d:	cmp    dl,0x30
   140060730:	mov    eax,edi
   140060732:	lea    r12d,[rdi+0x1]
   140060736:	mov    DWORD PTR [rsp+0x30],eax
   14006073a:	jl     0x140060785
   14006073c:	data16 data16 xchg ax,ax
   140060740:	cmp    dl,0x39
   140060743:	jg     0x140060770
   140060745:	lea    ecx,[rax+rax*4]
   140060748:	movsx  eax,dl
   14006074b:	lea    eax,[rax+rcx*2-0x30]
   14006074f:	cmp    eax,0x1450
   140060754:	mov    DWORD PTR [rsp+0x30],eax
   140060758:	jg     0x140060767
   14006075a:	mov    dl,BYTE PTR [r8]
   14006075d:	add    r8,r12
   140060760:	cmp    dl,0x30
   140060763:	jge    0x140060740
   140060765:	jmp    0x140060770
   140060767:	mov    eax,0x1451
   14006076c:	mov    DWORD PTR [rsp+0x30],eax
   140060770:	cmp    dl,0x30
   140060773:	jl     0x140060785
   140060775:	cmp    dl,0x39
   140060778:	jg     0x140060785
   14006077a:	mov    dl,BYTE PTR [r8]
   14006077d:	add    r8,r12
   140060780:	cmp    dl,0x30
   140060783:	jge    0x140060775
   140060785:	sub    r8,r12
   140060788:	jmp    0x1400606e1
   14006078d:	test   r10d,r10d
   140060790:	je     0x140060bd0
   140060796:	sub    r11,0x1
   14006079a:	cmp    BYTE PTR [r11],0x0
   14006079e:	jne    0x1400607b1
   1400607a0:	sub    r11,0x1
   1400607a4:	add    r10d,0xffffffff
   1400607a8:	add    ebx,0x1
   1400607ab:	cmp    BYTE PTR [r11],0x0
   1400607af:	je     0x1400607a0
   1400607b1:	lea    r8,[rsp+0x60]
   1400607b6:	lea    rcx,[rsp+0x80]
   1400607be:	mov    edx,r10d
   1400607c1:	call   0x140062850
   1400607c6:	test   r14d,r14d
   1400607c9:	mov    r8d,DWORD PTR [rsp+0x30]
   1400607ce:	jns    0x1400607d3
   1400607d0:	neg    r8d
   1400607d3:	add    r8d,ebx
   1400607d6:	test   r12d,r12d
   1400607d9:	jne    0x1400607e3
   1400607db:	add    r8d,DWORD PTR [rsp+0x110]
   1400607e3:	test   r15d,r15d
   1400607e6:	jne    0x1400607f0
   1400607e8:	sub    r8d,DWORD PTR [rsp+0x118]
   1400607f0:	cmp    r8d,0x1450
   1400607f7:	jg     0x140060bba
   1400607fd:	cmp    r8d,0xffffebb0
   140060804:	jl     0x140060bae
   14006080a:	lea    rdx,[rip+0x27baf]        # 0x1400883c0
   140060811:	sub    rdx,0x60
   140060815:	test   r8d,r8d
   140060818:	je     0x140060b97
   14006081e:	jns    0x14006082e
   140060820:	lea    rdx,[rip+0x27cf9]        # 0x140088520
   140060827:	neg    r8d
   14006082a:	sub    rdx,0x60
   14006082e:	movzx  eax,WORD PTR [rsp+0x60]
   140060833:	cmp    DWORD PTR [rsp+0x38],0x0
   140060838:	mov    ebp,0x0
   14006083d:	cmove  ax,bp
   140060841:	test   r8d,r8d
   140060844:	mov    WORD PTR [rsp+0x60],ax
   140060849:	je     0x140060b95
   14006084f:	mov    r9d,0xffff8000
   140060855:	data16 data16 xchg ax,ax
   140060859:	data16 xchg ax,ax
   14006085c:	data16 data16 xchg ax,ax
   140060860:	mov    eax,r8d
   140060863:	add    rdx,0x54
   140060867:	sar    r8d,0x3
   14006086b:	and    eax,0x7
   14006086e:	mov    DWORD PTR [rsp+0x30],r8d
   140060873:	mov    QWORD PTR [rsp+0x40],rdx
   140060878:	je     0x140060b8c
   14006087e:	cdqe   
   140060880:	lea    rcx,[rax+rax*2]
   140060884:	cmp    WORD PTR [rdx+rcx*4],0x8000
   14006088a:	lea    r14,[rdx+rcx*4]
   14006088e:	jb     0x1400608b7
   140060890:	mov    rax,QWORD PTR [r14]
   140060893:	lea    rcx,[rsp+0x70]
   140060898:	mov    QWORD PTR [rcx],rax
   14006089b:	mov    eax,DWORD PTR [r14+0x8]
   14006089f:	lea    r14,[rsp+0x70]
   1400608a4:	mov    DWORD PTR [rcx+0x8],eax
   1400608a7:	mov    rax,QWORD PTR [rsp+0x70]
   1400608ac:	shr    rax,0x10
   1400608b0:	sub    eax,0x1
   1400608b3:	mov    DWORD PTR [rsp+0x72],eax
   1400608b7:	movzx  ecx,WORD PTR [r14+0xa]
   1400608bc:	movzx  eax,WORD PTR [rsp+0x6a]
   1400608c1:	mov    r15d,ebp
   1400608c4:	movzx  edx,cx
   1400608c7:	and    cx,0x7fff
   1400608cc:	mov    DWORD PTR [rsp+0x50],ebp
   1400608d0:	xor    dx,ax
   1400608d3:	and    ax,0x7fff
   1400608d7:	mov    DWORD PTR [rsp+0x54],ebp
   1400608db:	and    dx,0x8000
   1400608e0:	cmp    ax,0x7fff
   1400608e4:	mov    DWORD PTR [rsp+0x58],ebp
   1400608e8:	mov    WORD PTR [rsp+0x38],dx
   1400608ed:	lea    edi,[rax+rcx*1]
   1400608f0:	jae    0x140060b6f
   1400608f6:	cmp    cx,0x7fff
   1400608fb:	jae    0x140060b6f
   140060901:	cmp    di,0xbffd
   140060906:	ja     0x140060b6f
   14006090c:	cmp    di,0x3fbf
   140060911:	ja     0x14006091c
   140060913:	mov    DWORD PTR [rsp+0x68],ebp
   140060917:	jmp    0x140060b7f
   14006091c:	test   ax,ax
   14006091f:	jne    0x140060947
   140060921:	mov    eax,DWORD PTR [rsp+0x68]
   140060925:	add    di,0x1
   140060929:	btr    eax,0x1f
   14006092d:	test   eax,eax
   14006092f:	jne    0x140060947
   140060931:	cmp    DWORD PTR [rsp+0x64],ebp
   140060935:	jne    0x140060947
   140060937:	cmp    DWORD PTR [rsp+0x60],ebp
   14006093b:	jne    0x140060947
   14006093d:	mov    WORD PTR [rsp+0x6a],bp
   140060942:	jmp    0x140060b87
   140060947:	test   cx,cx
   14006094a:	jne    0x140060970
   14006094c:	mov    eax,DWORD PTR [r14+0x8]
   140060950:	add    di,0x1
   140060954:	btr    eax,0x1f
   140060958:	test   eax,eax
   14006095a:	jne    0x140060970
   14006095c:	cmp    DWORD PTR [r14+0x4],ebp
   140060960:	jne    0x140060970
   140060962:	cmp    DWORD PTR [r14],ebp
   140060965:	jne    0x140060970
   140060967:	mov    DWORD PTR [rsp+0x68],ebp
   14006096b:	jmp    0x140060b7f
   140060970:	mov    r13d,ebp
   140060973:	lea    rdx,[rsp+0x54]
   140060978:	mov    r12d,0x5
   14006097e:	xchg   ax,ax
   140060980:	test   r12d,r12d
   140060983:	lea    eax,[r13+r13*1+0x0]
   140060988:	mov    ebx,r12d
   14006098b:	movsxd rcx,eax
   14006098e:	jle    0x1400609e1
   140060990:	mov    esi,r13d
   140060993:	lea    r10,[r14+0x8]
   140060997:	lea    r11,[rsp+rcx*1+0x60]
   14006099c:	and    esi,0x1
   14006099f:	nop
   1400609a0:	movzx  eax,WORD PTR [r10]
   1400609a4:	movzx  ecx,WORD PTR [r11]
   1400609a8:	mov    r8d,ebp
   1400609ab:	imul   ecx,eax
   1400609ae:	mov    eax,DWORD PTR [rdx-0x4]
   1400609b1:	lea    r9d,[rax+rcx*1]
   1400609b5:	cmp    r9d,eax
   1400609b8:	jb     0x1400609bf
   1400609ba:	cmp    r9d,ecx
   1400609bd:	jae    0x1400609c5
   1400609bf:	mov    r8d,0x1
   1400609c5:	test   r8d,r8d
   1400609c8:	mov    DWORD PTR [rdx-0x4],r9d
   1400609cc:	je     0x1400609d2
   1400609ce:	add    WORD PTR [rdx],0x1
   1400609d2:	sub    ebx,0x1
   1400609d5:	add    r11,0x2
   1400609d9:	sub    r10,0x2
   1400609dd:	test   ebx,ebx
   1400609df:	jg     0x1400609a0
   1400609e1:	sub    r12d,0x1
   1400609e5:	add    rdx,0x2
   1400609e9:	add    r13d,0x1
   1400609ed:	test   r12d,r12d
   1400609f0:	jg     0x140060980
   1400609f2:	mov    r8d,DWORD PTR [rsp+0x58]
   1400609f7:	mov    edx,DWORD PTR [rsp+0x54]
   1400609fb:	mov    r9d,DWORD PTR [rsp+0x50]
   140060a00:	add    di,0xc002
   140060a05:	test   di,di
   140060a08:	jle    0x140060a4e
   140060a0a:	data16 xchg ax,ax
   140060a0d:	data16 xchg ax,ax
   140060a10:	bt     r8d,0x1f
   140060a15:	jb     0x140060a49
   140060a17:	mov    ecx,edx
   140060a19:	mov    eax,r9d
   140060a1c:	add    r8d,r8d
   140060a1f:	add    edx,edx
   140060a21:	shr    eax,0x1f
   140060a24:	shr    ecx,0x1f
   140060a27:	add    r9d,r9d
   140060a2a:	or     edx,eax
   140060a2c:	or     r8d,ecx
   140060a2f:	add    di,0xffff
   140060a34:	mov    DWORD PTR [rsp+0x54],edx
   140060a38:	mov    DWORD PTR [rsp+0x58],r8d
   140060a3d:	test   di,di
   140060a40:	mov    DWORD PTR [rsp+0x50],r9d
   140060a45:	jg     0x140060a10
   140060a47:	jmp    0x140060a4e
   140060a49:	test   di,di
   140060a4c:	jg     0x140060ab3
   140060a4e:	add    di,0xffff
   140060a53:	jns    0x140060ab3
   140060a55:	movzx  eax,di
   140060a58:	neg    ax
   140060a5b:	movzx  r10d,ax
   140060a5f:	add    di,r10w
   140060a63:	test   BYTE PTR [rsp+0x50],0x1
   140060a68:	je     0x140060a6e
   140060a6a:	add    r15d,0x1
   140060a6e:	mov    ecx,edx
   140060a70:	mov    eax,r8d
   140060a73:	shr    r9d,1
   140060a76:	shl    ecx,0x1f
   140060a79:	shr    edx,1
   140060a7b:	shl    eax,0x1f
   140060a7e:	or     r9d,ecx
   140060a81:	shr    r8d,1
   140060a84:	or     edx,eax
   140060a86:	sub    r10,0x1
   140060a8a:	mov    DWORD PTR [rsp+0x50],r9d
   140060a8f:	jne    0x140060a63
   140060a91:	test   r15d,r15d
   140060a94:	mov    DWORD PTR [rsp+0x54],edx
   140060a98:	mov    DWORD PTR [rsp+0x58],r8d
   140060a9d:	je     0x140060ab3
   140060a9f:	movzx  eax,r9w
   140060aa3:	or     ax,0x1
   140060aa7:	mov    WORD PTR [rsp+0x50],ax
   140060aac:	mov    r9d,DWORD PTR [rsp+0x50]
   140060ab1:	jmp    0x140060ab8
   140060ab3:	mov    ax,WORD PTR [rsp+0x50]
   140060ab8:	cmp    ax,0x8000
   140060abc:	ja     0x140060ace
   140060abe:	and    r9d,0x1ffff
   140060ac5:	cmp    r9d,0x18000
   140060acc:	jne    0x140060b32
   140060ace:	mov    eax,DWORD PTR [rsp+0x52]
   140060ad2:	cmp    eax,0xffffffff
   140060ad5:	jne    0x140060b27
   140060ad7:	mov    eax,DWORD PTR [rsp+0x56]
   140060adb:	mov    DWORD PTR [rsp+0x52],ebp
   140060adf:	cmp    eax,0xffffffff
   140060ae2:	jne    0x140060b19
   140060ae4:	movzx  eax,WORD PTR [rsp+0x5a]
   140060ae9:	mov    DWORD PTR [rsp+0x56],ebp
   140060aed:	mov    edx,DWORD PTR [rsp+0x54]
   140060af1:	cmp    ax,0xffff
   140060af5:	jne    0x140060b09
   140060af7:	mov    WORD PTR [rsp+0x5a],0x8000
   140060afe:	mov    r8d,DWORD PTR [rsp+0x58]
   140060b03:	add    di,0x1
   140060b07:	jmp    0x140060b32
   140060b09:	add    ax,0x1
   140060b0d:	mov    WORD PTR [rsp+0x5a],ax
   140060b12:	mov    r8d,DWORD PTR [rsp+0x58]
   140060b17:	jmp    0x140060b32
   140060b19:	add    eax,0x1
   140060b1c:	mov    DWORD PTR [rsp+0x56],eax
   140060b20:	mov    r8d,DWORD PTR [rsp+0x58]
   140060b25:	jmp    0x140060b2e
   140060b27:	add    eax,0x1
   140060b2a:	mov    DWORD PTR [rsp+0x52],eax
   140060b2e:	mov    edx,DWORD PTR [rsp+0x54]
   140060b32:	cmp    di,0x7fff
   140060b37:	mov    r9d,0xffff8000
   140060b3d:	jb     0x140060b4b
   140060b3f:	cmp    WORD PTR [rsp+0x38],bp
   140060b44:	mov    r8d,DWORD PTR [rsp+0x30]
   140060b49:	jmp    0x140060b72
   140060b4b:	movzx  eax,WORD PTR [rsp+0x52]
   140060b50:	or     di,WORD PTR [rsp+0x38]
   140060b55:	mov    DWORD PTR [rsp+0x66],r8d
   140060b5a:	mov    r8d,DWORD PTR [rsp+0x30]
   140060b5f:	mov    WORD PTR [rsp+0x60],ax
   140060b64:	mov    WORD PTR [rsp+0x6a],di
   140060b69:	mov    DWORD PTR [rsp+0x62],edx
   140060b6d:	jmp    0x140060b87
   140060b6f:	test   dx,dx
   140060b72:	mov    eax,0x7fff8000
   140060b77:	cmovne eax,r9d
   140060b7b:	mov    DWORD PTR [rsp+0x68],eax
   140060b7f:	mov    DWORD PTR [rsp+0x60],ebp
   140060b83:	mov    DWORD PTR [rsp+0x64],ebp
   140060b87:	mov    rdx,QWORD PTR [rsp+0x40]
   140060b8c:	test   r8d,r8d
   140060b8f:	jne    0x140060860
   140060b95:	xor    edi,edi
   140060b97:	mov    eax,DWORD PTR [rsp+0x68]
   140060b9b:	movzx  ecx,WORD PTR [rsp+0x60]
   140060ba0:	mov    edx,DWORD PTR [rsp+0x62]
   140060ba4:	mov    r8d,DWORD PTR [rsp+0x66]
   140060ba9:	shr    eax,0x10
   140060bac:	jmp    0x140060be7
   140060bae:	mov    r8d,edi
   140060bb1:	mov    edx,edi
   140060bb3:	mov    edi,0x1
   140060bb8:	jmp    0x140060be1
   140060bba:	mov    edx,edi
   140060bbc:	mov    ax,0x7fff
   140060bc0:	mov    r8d,0x80000000
   140060bc6:	mov    edi,0x2
   140060bcb:	xor    cx,cx
   140060bce:	jmp    0x140060be7
   140060bd0:	mov    r8d,edi
   140060bd3:	mov    edx,edi
   140060bd5:	jmp    0x140060be1
   140060bd7:	mov    r8d,edi
   140060bda:	mov    edx,edi
   140060bdc:	mov    edi,0x4
   140060be1:	xor    cx,cx
   140060be4:	xor    ax,ax
   140060be7:	mov    r9,QWORD PTR [rsp+0x48]
   140060bec:	or     ax,WORD PTR [rsp+0x34]
   140060bf1:	mov    WORD PTR [r9+0xa],ax
   140060bf6:	mov    eax,edi
   140060bf8:	mov    WORD PTR [r9],cx
   140060bfc:	mov    DWORD PTR [r9+0x2],edx
   140060c00:	mov    DWORD PTR [r9+0x6],r8d
   140060c04:	mov    rcx,QWORD PTR [rsp+0xa0]
   140060c0c:	xor    rcx,rsp
   140060c0f:	call   0x140046470
   140060c14:	mov    rbx,QWORD PTR [rsp+0x100]
   140060c1c:	add    rsp,0xb0
   140060c23:	pop    r15
   140060c25:	pop    r14
   140060c27:	pop    r13
   140060c29:	pop    r12
   140060c2b:	pop    rdi
   140060c2c:	pop    rsi
   140060c2d:	pop    rbp
   140060c2e:	ret    
   140060c2f:	nop
   140060c30:	clc    
   140060c31:	add    eax,DWORD PTR [rsi]
   140060c33:	add    BYTE PTR [rax+0x4],bl
   140060c36:	(bad)  
   140060c37:	add    al,al
   140060c39:	add    al,0x6
   140060c3b:	add    ah,dh
   140060c3d:	add    al,0x6
   140060c3f:	add    BYTE PTR [rcx+0x5],bh
   140060c42:	(bad)  
   140060c43:	add    BYTE PTR [rax],al
   140060c45:	(bad)  
   140060c46:	(bad)  
   140060c47:	add    BYTE PTR [rsi],bl
   140060c49:	(bad)  
   140060c4a:	(bad)  
   140060c4b:	add    BYTE PTR [rcx+0x61000606],dl
   140060c51:	(bad)  
   140060c52:	(bad)  
   140060c53:	add    BYTE PTR [rbx],ch
   140060c55:	(bad)  
   140060c56:	(bad)  
   140060c57:	add    dh,cl
   140060c59:	(bad)  
   140060c5a:	(bad)  
   140060c5b:	add    BYTE PTR [rdi-0xdfff9fa],ah
   140060c61:	add    eax,0x4b80006
   140060c66:	(bad)  
   140060c67:	add    BYTE PTR [rsi+0x5],ch
   140060c6a:	(bad)  
   140060c6b:	add    BYTE PTR [rcx],ah
   140060c6d:	(bad)  
   140060c6e:	(bad)  
   140060c6f:	add    BYTE PTR [rax],al
   140060c71:	add    eax,DWORD PTR [rax]
   140060c73:	add    eax,DWORD PTR [rbx]
   140060c75:	add    DWORD PTR [rbx],eax
   140060c77:	add    eax,DWORD PTR [rbx]
   140060c79:	add    eax,DWORD PTR [rbx]
   140060c7b:	add    eax,DWORD PTR [rbx]
   140060c7d:	add    eax,DWORD PTR [rbx]
   140060c7f:	add    eax,DWORD PTR [rbx]
   140060c81:	add    eax,DWORD PTR [rbx]
   140060c83:	add    eax,DWORD PTR [rbx]
   140060c85:	add    eax,DWORD PTR [rbx]
   140060c87:	add    eax,DWORD PTR [rbx]
   140060c89:	add    al,BYTE PTR [rdx]
   140060c8b:	add    eax,DWORD PTR [rbx]
   140060c8d:	add    eax,DWORD PTR [rbx]
   140060c8f:	add    eax,DWORD PTR [rbx]
   140060c91:	add    eax,DWORD PTR [rbx]
   140060c93:	add    eax,DWORD PTR [rbx]
   140060c95:	add    eax,DWORD PTR [rbx]
   140060c97:	add    eax,DWORD PTR [rbx]
   140060c99:	add    eax,DWORD PTR [rbx]
   140060c9b:	add    eax,DWORD PTR [rbx]
   140060c9d:	add    eax,DWORD PTR [rbx]
   140060c9f:	add    eax,DWORD PTR [rbx]
   140060ca1:	add    eax,DWORD PTR [rbx]
   140060ca3:	add    eax,DWORD PTR [rbx]
   140060ca5:	add    eax,DWORD PTR [rbx]
   140060ca7:	add    eax,DWORD PTR [rbx]
   140060ca9:	add    al,BYTE PTR [rdx]
   140060cab:	nop
   140060cac:	repnz add eax,0x56e0006
   140060cb2:	(bad)  
   140060cb3:	add    BYTE PTR [rcx],ah
   140060cb5:	(bad)  
   140060cb6:	(bad)  
   140060cb7:	add    BYTE PTR [rax],al
   140060cb9:	add    al,BYTE PTR [rax]
   140060cbb:	add    al,BYTE PTR [rdx]
   140060cbd:	add    al,BYTE PTR [rdx]
   140060cbf:	add    al,BYTE PTR [rdx]
   140060cc1:	add    al,BYTE PTR [rdx]
   140060cc3:	add    al,BYTE PTR [rdx]
   140060cc5:	add    al,BYTE PTR [rdx]
   140060cc7:	add    al,BYTE PTR [rdx]
   140060cc9:	add    al,BYTE PTR [rdx]
   140060ccb:	add    al,BYTE PTR [rdx]
   140060ccd:	add    al,BYTE PTR [rdx]
   140060ccf:	add    al,BYTE PTR [rdx]
   140060cd1:	add    DWORD PTR [rcx],eax
   140060cd3:	add    al,BYTE PTR [rdx]
   140060cd5:	add    al,BYTE PTR [rdx]
   140060cd7:	add    al,BYTE PTR [rdx]
   140060cd9:	add    al,BYTE PTR [rdx]
   140060cdb:	add    al,BYTE PTR [rdx]
   140060cdd:	add    al,BYTE PTR [rdx]
   140060cdf:	add    al,BYTE PTR [rdx]
   140060ce1:	add    al,BYTE PTR [rdx]
   140060ce3:	add    al,BYTE PTR [rdx]
   140060ce5:	add    al,BYTE PTR [rdx]
   140060ce7:	add    al,BYTE PTR [rdx]
   140060ce9:	add    al,BYTE PTR [rdx]
   140060ceb:	add    al,BYTE PTR [rdx]
   140060ced:	add    al,BYTE PTR [rdx]
   140060cef:	add    al,BYTE PTR [rdx]
   140060cf1:	add    DWORD PTR [rcx],eax
   140060cf3:	nop
   140060cf4:	repnz add eax,0x56e0006
   140060cfa:	(bad)  
   140060cfb:	add    BYTE PTR [rcx],ah
   140060cfd:	(bad)  
   140060cfe:	(bad)  
   140060cff:	add    BYTE PTR [rax],al
   140060d01:	add    al,BYTE PTR [rax]
   140060d03:	add    al,BYTE PTR [rdx]
   140060d05:	add    al,BYTE PTR [rdx]
   140060d07:	add    al,BYTE PTR [rdx]
   140060d09:	add    al,BYTE PTR [rdx]
   140060d0b:	add    al,BYTE PTR [rdx]
   140060d0d:	add    al,BYTE PTR [rdx]
   140060d0f:	add    al,BYTE PTR [rdx]
   140060d11:	add    al,BYTE PTR [rdx]
   140060d13:	add    al,BYTE PTR [rdx]
   140060d15:	add    al,BYTE PTR [rdx]
   140060d17:	add    al,BYTE PTR [rdx]
   140060d19:	add    DWORD PTR [rcx],eax
   140060d1b:	add    al,BYTE PTR [rdx]
   140060d1d:	add    al,BYTE PTR [rdx]
   140060d1f:	add    al,BYTE PTR [rdx]
   140060d21:	add    al,BYTE PTR [rdx]
   140060d23:	add    al,BYTE PTR [rdx]
   140060d25:	add    al,BYTE PTR [rdx]
   140060d27:	add    al,BYTE PTR [rdx]
   140060d29:	add    al,BYTE PTR [rdx]
   140060d2b:	add    al,BYTE PTR [rdx]
   140060d2d:	add    al,BYTE PTR [rdx]
   140060d2f:	add    al,BYTE PTR [rdx]
   140060d31:	add    al,BYTE PTR [rdx]
   140060d33:	add    al,BYTE PTR [rdx]
   140060d35:	add    al,BYTE PTR [rdx]
   140060d37:	add    al,BYTE PTR [rdx]
   140060d39:	add    DWORD PTR [rcx],eax
   140060d3b:	int3   
   140060d3c:	int3   
   140060d3d:	int3   
   140060d3e:	int3   
   140060d3f:	int3   
   140060d40:	mov    r11,rsp
   140060d43:	push   rsi
   140060d44:	push   rdi
   140060d45:	sub    rsp,0xd8
   140060d4c:	mov    rax,QWORD PTR [rip+0x2601d]        # 0x140086d70
   140060d53:	xor    rax,rsp
   140060d56:	mov    QWORD PTR [rsp+0xa0],rax
   140060d5e:	movzx  r10d,WORD PTR [rcx+0x8]
   140060d63:	mov    DWORD PTR [rsp+0x44],edx
   140060d67:	mov    rdi,r9
   140060d6a:	movzx  edx,r10w
   140060d6e:	and    r10w,0x7fff
   140060d74:	mov    QWORD PTR [rsp+0x58],r9
   140060d79:	mov    r9d,DWORD PTR [rcx+0x4]
   140060d7d:	and    dx,0x8000
   140060d82:	mov    BYTE PTR [r11-0x68],0xcc
   140060d87:	test   dx,dx
   140060d8a:	mov    BYTE PTR [r11-0x67],0xcc
   140060d8f:	mov    BYTE PTR [r11-0x66],0xcc
   140060d94:	mov    BYTE PTR [r11-0x65],0xcc
   140060d99:	mov    BYTE PTR [r11-0x64],0xcc
   140060d9e:	mov    BYTE PTR [r11-0x63],0xcc
   140060da3:	mov    BYTE PTR [r11-0x62],0xcc
   140060da8:	mov    BYTE PTR [r11-0x61],0xcc
   140060dad:	mov    BYTE PTR [r11-0x60],0xcc
   140060db2:	mov    BYTE PTR [r11-0x5f],0xcc
   140060db7:	mov    BYTE PTR [r11-0x5e],0xfb
   140060dbc:	mov    BYTE PTR [r11-0x5d],0x3f
   140060dc1:	mov    r11d,DWORD PTR [rcx]
   140060dc4:	mov    DWORD PTR [rsp+0x50],r8d
   140060dc9:	mov    esi,0x1
   140060dce:	mov    WORD PTR [rsp+0x30],dx
   140060dd3:	je     0x140060ddb
   140060dd5:	mov    BYTE PTR [rdi+0x2],0x2d
   140060dd9:	jmp    0x140060ddf
   140060ddb:	mov    BYTE PTR [rdi+0x2],0x20
   140060ddf:	test   r10w,r10w
   140060de3:	mov    QWORD PTR [rsp+0xf8],rbx
   140060deb:	mov    QWORD PTR [rsp+0xd0],rbp
   140060df3:	mov    QWORD PTR [rsp+0xc8],r12
   140060dfb:	mov    QWORD PTR [rsp+0xc0],r13
   140060e03:	jne    0x140060e41
   140060e05:	test   r9d,r9d
   140060e08:	jne    0x140060f74
   140060e0e:	test   r11d,r11d
   140060e11:	jne    0x140060f74
   140060e17:	mov    eax,0x20
   140060e1c:	mov    ecx,0x2d
   140060e21:	cmp    dx,0x8000
   140060e26:	cmove  eax,ecx
   140060e29:	mov    WORD PTR [rdi],r11w
   140060e2d:	mov    BYTE PTR [rdi+0x3],sil
   140060e31:	mov    BYTE PTR [rdi+0x4],0x30
   140060e35:	mov    BYTE PTR [rdi+0x5],r11b
   140060e39:	mov    BYTE PTR [rdi+0x2],al
   140060e3c:	jmp    0x140061aac
   140060e41:	cmp    r10w,0x7fff
   140060e47:	jne    0x140060f74
   140060e4d:	cmp    r9d,0x80000000
   140060e54:	mov    WORD PTR [rdi],si
   140060e57:	jne    0x140060e5e
   140060e59:	test   r11d,r11d
   140060e5c:	je     0x140060ea3
   140060e5e:	bt     r9d,0x1e
   140060e63:	jb     0x140060ea3
   140060e65:	lea    rcx,[rdi+0x4]
   140060e69:	lea    r8,[rip+0xf4c4]        # 0x140070334
   140060e70:	mov    edx,0x16
   140060e75:	call   0x1400579a0
   140060e7a:	xor    ebx,ebx
   140060e7c:	test   eax,eax
   140060e7e:	je     0x140060f69
   140060e84:	xor    r9d,r9d
   140060e87:	xor    r8d,r8d
   140060e8a:	xor    edx,edx
   140060e8c:	xor    ecx,ecx
   140060e8e:	mov    QWORD PTR [rsp+0x20],rbx
   140060e93:	call   0x14004e060
   140060e98:	mov    BYTE PTR [rdi+0x3],0x6
   140060e9c:	mov    esi,ebx
   140060e9e:	jmp    0x140061aac
   140060ea3:	test   dx,dx
   140060ea6:	je     0x140060ef3
   140060ea8:	cmp    r9d,0xc0000000
   140060eaf:	jne    0x140060ef3
   140060eb1:	test   r11d,r11d
   140060eb4:	jne    0x140060f3a
   140060eba:	lea    rcx,[rdi+0x4]
   140060ebe:	lea    r8,[rip+0xf467]        # 0x14007032c
   140060ec5:	lea    edx,[r11+0x16]
   140060ec9:	call   0x1400579a0
   140060ece:	xor    ebx,ebx
   140060ed0:	test   eax,eax
   140060ed2:	je     0x140060f2f
   140060ed4:	xor    r9d,r9d
   140060ed7:	xor    r8d,r8d
   140060eda:	xor    edx,edx
   140060edc:	xor    ecx,ecx
   140060ede:	mov    QWORD PTR [rsp+0x20],rbx
   140060ee3:	call   0x14004e060
   140060ee8:	mov    BYTE PTR [rdi+0x3],0x5
   140060eec:	mov    esi,ebx
   140060eee:	jmp    0x140061aac
   140060ef3:	cmp    r9d,0x80000000
   140060efa:	jne    0x140060f3a
   140060efc:	test   r11d,r11d
   140060eff:	jne    0x140060f3a
   140060f01:	lea    rcx,[rdi+0x4]
   140060f05:	lea    r8,[rip+0xf418]        # 0x140070324
   140060f0c:	lea    edx,[r11+0x16]
   140060f10:	call   0x1400579a0
   140060f15:	xor    ebx,ebx
   140060f17:	test   eax,eax
   140060f19:	je     0x140060f2f
   140060f1b:	xor    r9d,r9d
   140060f1e:	xor    r8d,r8d
   140060f21:	xor    edx,edx
   140060f23:	xor    ecx,ecx
   140060f25:	mov    QWORD PTR [rsp+0x20],rbx
   140060f2a:	call   0x14004e060
   140060f2f:	mov    BYTE PTR [rdi+0x3],0x5
   140060f33:	mov    esi,ebx
   140060f35:	jmp    0x140061aac
   140060f3a:	lea    rcx,[rdi+0x4]
   140060f3e:	lea    r8,[rip+0xf3d7]        # 0x14007031c
   140060f45:	mov    edx,0x16
   140060f4a:	call   0x1400579a0
   140060f4f:	xor    ebx,ebx
   140060f51:	test   eax,eax
   140060f53:	je     0x140060f69
   140060f55:	xor    r9d,r9d
   140060f58:	xor    r8d,r8d
   140060f5b:	xor    edx,edx
   140060f5d:	xor    ecx,ecx
   140060f5f:	mov    QWORD PTR [rsp+0x20],rbx
   140060f64:	call   0x14004e060
   140060f69:	mov    BYTE PTR [rdi+0x3],0x6
   140060f6d:	mov    esi,ebx
   140060f6f:	jmp    0x140061aac
   140060f74:	movzx  r8d,r10w
   140060f78:	mov    WORD PTR [rsp+0x7a],r10w
   140060f7e:	mov    ecx,r9d
   140060f81:	shr    ecx,0x18
   140060f84:	mov    eax,r8d
   140060f87:	mov    DWORD PTR [rsp+0x72],r11d
   140060f8c:	shr    eax,0x8
   140060f8f:	mov    r11d,0x5
   140060f95:	xor    ebx,ebx
   140060f97:	imul   r8d,r8d,0x4d10
   140060f9e:	lea    edx,[rax+rcx*2]
   140060fa1:	mov    QWORD PTR [rsp+0xb8],r14
   140060fa9:	mov    DWORD PTR [rsp+0x76],r9d
   140060fae:	mov    QWORD PTR [rsp+0xb0],r15
   140060fb6:	mov    WORD PTR [rsp+0x70],0x0
   140060fbd:	mov    DWORD PTR [rsp+0x48],r11d
   140060fc2:	imul   edx,edx,0x4d
   140060fc5:	lea    ecx,[rdx+r8*1-0x134312f4]
   140060fcd:	lea    rdx,[rip+0x273ec]        # 0x1400883c0
   140060fd4:	mov    edi,0x7fff8000
   140060fd9:	sar    ecx,0x10
   140060fdc:	sub    rdx,0x60
   140060fe0:	mov    r12d,0xffff8000
   140060fe6:	movsx  r10d,cx
   140060fea:	mov    DWORD PTR [rsp+0x34],ecx
   140060fee:	neg    r10d
   140060ff1:	je     0x14006142d
   140060ff7:	test   r10d,r10d
   140060ffa:	jns    0x14006100a
   140060ffc:	lea    rdx,[rip+0x2751d]        # 0x140088520
   140061003:	neg    r10d
   140061006:	sub    rdx,0x60
   14006100a:	test   r10d,r10d
   14006100d:	je     0x14006142d
   140061013:	mov    r9d,DWORD PTR [rsp+0x74]
   140061018:	mov    r8d,DWORD PTR [rsp+0x70]
   14006101d:	data16 xchg ax,ax
   140061020:	mov    eax,r10d
   140061023:	add    rdx,0x54
   140061027:	sar    r10d,0x3
   14006102b:	and    eax,0x7
   14006102e:	mov    DWORD PTR [rsp+0x40],r10d
   140061033:	mov    QWORD PTR [rsp+0x38],rdx
   140061038:	je     0x14006141e
   14006103e:	cdqe   
   140061040:	lea    rcx,[rax+rax*2]
   140061044:	cmp    WORD PTR [rdx+rcx*4],0x8000
   14006104a:	lea    r15,[rdx+rcx*4]
   14006104e:	jb     0x140061083
   140061050:	mov    rax,QWORD PTR [r15]
   140061053:	lea    rcx,[rsp+0x90]
   14006105b:	mov    QWORD PTR [rcx],rax
   14006105e:	mov    eax,DWORD PTR [r15+0x8]
   140061062:	lea    r15,[rsp+0x90]
   14006106a:	mov    DWORD PTR [rcx+0x8],eax
   14006106d:	mov    rax,QWORD PTR [rsp+0x90]
   140061075:	shr    rax,0x10
   140061079:	sub    eax,0x1
   14006107c:	mov    DWORD PTR [rsp+0x92],eax
   140061083:	movzx  ecx,WORD PTR [r15+0xa]
   140061088:	movzx  eax,WORD PTR [rsp+0x7a]
   14006108d:	mov    DWORD PTR [rsp+0x60],ebx
   140061091:	movzx  edx,cx
   140061094:	and    cx,0x7fff
   140061099:	mov    DWORD PTR [rsp+0x64],ebx
   14006109d:	xor    dx,ax
   1400610a0:	and    ax,0x7fff
   1400610a4:	mov    DWORD PTR [rsp+0x68],ebx
   1400610a8:	and    dx,0x8000
   1400610ad:	cmp    ax,0x7fff
   1400610b1:	lea    ebp,[rax+rcx*1]
   1400610b4:	mov    WORD PTR [rsp+0x32],dx
   1400610b9:	jae    0x1400613fe
   1400610bf:	cmp    cx,0x7fff
   1400610c4:	jae    0x1400613fe
   1400610ca:	cmp    bp,0xbffd
   1400610cf:	ja     0x1400613fe
   1400610d5:	cmp    bp,0x3fbf
   1400610da:	ja     0x1400610f8
   1400610dc:	mov    rdx,QWORD PTR [rsp+0x38]
   1400610e1:	mov    DWORD PTR [rsp+0x78],ebx
   1400610e5:	mov    r9d,ebx
   1400610e8:	mov    DWORD PTR [rsp+0x74],ebx
   1400610ec:	mov    r8d,ebx
   1400610ef:	mov    DWORD PTR [rsp+0x70],ebx
   1400610f3:	jmp    0x14006141e
   1400610f8:	test   ax,ax
   1400610fb:	jne    0x140061126
   1400610fd:	mov    eax,DWORD PTR [rsp+0x78]
   140061101:	add    bp,0x1
   140061105:	btr    eax,0x1f
   140061109:	test   eax,eax
   14006110b:	jne    0x140061126
   14006110d:	test   r9d,r9d
   140061110:	jne    0x140061126
   140061112:	test   r8d,r8d
   140061115:	jne    0x140061126
   140061117:	mov    rdx,QWORD PTR [rsp+0x38]
   14006111c:	mov    WORD PTR [rsp+0x7a],bx
   140061121:	jmp    0x14006141e
   140061126:	test   cx,cx
   140061129:	jne    0x140061162
   14006112b:	mov    eax,DWORD PTR [r15+0x8]
   14006112f:	add    bp,0x1
   140061133:	btr    eax,0x1f
   140061137:	test   eax,eax
   140061139:	jne    0x140061162
   14006113b:	cmp    DWORD PTR [r15+0x4],ebx
   14006113f:	jne    0x140061162
   140061141:	cmp    DWORD PTR [r15],ebx
   140061144:	jne    0x140061162
   140061146:	mov    rdx,QWORD PTR [rsp+0x38]
   14006114b:	mov    DWORD PTR [rsp+0x78],ebx
   14006114f:	mov    r9d,ebx
   140061152:	mov    DWORD PTR [rsp+0x74],ebx
   140061156:	mov    r8d,ebx
   140061159:	mov    DWORD PTR [rsp+0x70],ebx
   14006115d:	jmp    0x14006141e
   140061162:	mov    r14d,ebx
   140061165:	lea    rdx,[rsp+0x64]
   14006116a:	mov    r13d,r11d
   14006116d:	data16 xchg ax,ax
   140061170:	test   r13d,r13d
   140061173:	lea    eax,[r14+r14*1]
   140061177:	mov    edi,r13d
   14006117a:	movsxd rcx,eax
   14006117d:	jle    0x1400611f0
   14006117f:	mov    r12d,r14d
   140061182:	lea    r10,[rsp+rcx*1+0x70]
   140061187:	lea    r11,[r15+0x8]
   14006118b:	and    r12d,0x1
   14006118f:	nop
   140061190:	movzx  ecx,WORD PTR [r10]
   140061194:	movzx  eax,WORD PTR [r11]
   140061198:	imul   ecx,eax
   14006119b:	test   r12d,r12d
   14006119e:	je     0x1400611bd
   1400611a0:	mov    eax,DWORD PTR [rdx-0x4]
   1400611a3:	mov    r8d,ebx
   1400611a6:	lea    r9d,[rax+rcx*1]
   1400611aa:	cmp    r9d,eax
   1400611ad:	jb     0x1400611b4
   1400611af:	cmp    r9d,ecx
   1400611b2:	jae    0x1400611b7
   1400611b4:	mov    r8d,esi
   1400611b7:	mov    DWORD PTR [rdx-0x4],r9d
   1400611bb:	jmp    0x1400611d8
   1400611bd:	mov    eax,DWORD PTR [rdx-0x4]
   1400611c0:	mov    r8d,ebx
   1400611c3:	lea    r9d,[rax+rcx*1]
   1400611c7:	cmp    r9d,eax
   1400611ca:	jb     0x1400611d1
   1400611cc:	cmp    r9d,ecx
   1400611cf:	jae    0x1400611d4
   1400611d1:	mov    r8d,esi
   1400611d4:	mov    DWORD PTR [rdx-0x4],r9d
   1400611d8:	test   r8d,r8d
   1400611db:	je     0x1400611e1
   1400611dd:	add    WORD PTR [rdx],0x1
   1400611e1:	sub    edi,0x1
   1400611e4:	add    r10,0x2
   1400611e8:	sub    r11,0x2
   1400611ec:	test   edi,edi
   1400611ee:	jg     0x140061190
   1400611f0:	sub    r13d,0x1
   1400611f4:	add    rdx,0x2
   1400611f8:	add    r14d,0x1
   1400611fc:	test   r13d,r13d
   1400611ff:	jg     0x140061170
   140061205:	add    bp,0xc002
   14006120a:	test   bp,bp
   14006120d:	jle    0x1400612c8
   140061213:	mov    r9d,DWORD PTR [rsp+0x68]
   140061218:	mov    edx,DWORD PTR [rsp+0x64]
   14006121c:	mov    r8d,DWORD PTR [rsp+0x60]
   140061221:	bt     r9d,0x1f
   140061226:	jb     0x14006125a
   140061228:	mov    ecx,edx
   14006122a:	mov    eax,r8d
   14006122d:	add    r9d,r9d
   140061230:	add    edx,edx
   140061232:	shr    eax,0x1f
   140061235:	shr    ecx,0x1f
   140061238:	add    r8d,r8d
   14006123b:	or     edx,eax
   14006123d:	or     r9d,ecx
   140061240:	add    bp,0xffff
   140061245:	mov    DWORD PTR [rsp+0x64],edx
   140061249:	mov    DWORD PTR [rsp+0x68],r9d
   14006124e:	test   bp,bp
   140061251:	mov    DWORD PTR [rsp+0x60],r8d
   140061256:	jg     0x140061221
   140061258:	jmp    0x1400612d6
   14006125a:	test   bp,bp
   14006125d:	jle    0x1400612d6
   14006125f:	movzx  eax,WORD PTR [rsp+0x60]
   140061264:	cmp    ax,0x8000
   140061268:	ja     0x14006127e
   14006126a:	and    r8d,0x1ffff
   140061271:	cmp    r8d,0x18000
   140061278:	jne    0x140061379
   14006127e:	mov    eax,DWORD PTR [rsp+0x62]
   140061282:	cmp    eax,0xffffffff
   140061285:	jne    0x14006136e
   14006128b:	mov    eax,DWORD PTR [rsp+0x66]
   14006128f:	mov    DWORD PTR [rsp+0x62],ebx
   140061293:	cmp    eax,0xffffffff
   140061296:	jne    0x14006135c
   14006129c:	movzx  eax,WORD PTR [rsp+0x6a]
   1400612a1:	mov    DWORD PTR [rsp+0x66],ebx
   1400612a5:	cmp    ax,0xffff
   1400612a9:	jne    0x140061348
   1400612af:	mov    edx,DWORD PTR [rsp+0x64]
   1400612b3:	mov    WORD PTR [rsp+0x6a],0x8000
   1400612ba:	mov    r9d,DWORD PTR [rsp+0x68]
   1400612bf:	add    bp,0x1
   1400612c3:	jmp    0x140061379
   1400612c8:	mov    r9d,DWORD PTR [rsp+0x68]
   1400612cd:	mov    edx,DWORD PTR [rsp+0x64]
   1400612d1:	mov    r8d,DWORD PTR [rsp+0x60]
   1400612d6:	add    bp,0xffff
   1400612db:	jns    0x14006125f
   1400612dd:	movzx  eax,bp
   1400612e0:	mov    esi,ebx
   1400612e2:	neg    ax
   1400612e5:	movzx  r10d,ax
   1400612e9:	add    bp,r10w
   1400612ed:	data16 xchg ax,ax
   1400612f0:	test   BYTE PTR [rsp+0x60],0x1
   1400612f5:	je     0x1400612fa
   1400612f7:	add    esi,0x1
   1400612fa:	mov    ecx,edx
   1400612fc:	mov    eax,r9d
   1400612ff:	shr    r8d,1
   140061302:	shl    ecx,0x1f
   140061305:	shr    edx,1
   140061307:	shl    eax,0x1f
   14006130a:	or     r8d,ecx
   14006130d:	shr    r9d,1
   140061310:	or     edx,eax
   140061312:	sub    r10,0x1
   140061316:	mov    DWORD PTR [rsp+0x60],r8d
   14006131b:	jne    0x1400612f0
   14006131d:	test   esi,esi
   14006131f:	mov    DWORD PTR [rsp+0x64],edx
   140061323:	mov    DWORD PTR [rsp+0x68],r9d
   140061328:	lea    esi,[r10+0x1]
   14006132c:	je     0x14006125f
   140061332:	mov    ax,r8w
   140061336:	or     ax,si
   140061339:	mov    WORD PTR [rsp+0x60],ax
   14006133e:	mov    r8d,DWORD PTR [rsp+0x60]
   140061343:	jmp    0x140061264
   140061348:	mov    edx,DWORD PTR [rsp+0x64]
   14006134c:	add    ax,0x1
   140061350:	mov    WORD PTR [rsp+0x6a],ax
   140061355:	mov    r9d,DWORD PTR [rsp+0x68]
   14006135a:	jmp    0x140061379
   14006135c:	add    eax,0x1
   14006135f:	mov    DWORD PTR [rsp+0x66],eax
   140061363:	mov    r9d,DWORD PTR [rsp+0x68]
   140061368:	mov    edx,DWORD PTR [rsp+0x64]
   14006136c:	jmp    0x140061379
   14006136e:	add    eax,0x1
   140061371:	mov    DWORD PTR [rsp+0x62],eax
   140061375:	mov    edx,DWORD PTR [rsp+0x64]
   140061379:	cmp    bp,0x7fff
   14006137e:	jb     0x1400613ba
   140061380:	cmp    WORD PTR [rsp+0x32],bx
   140061385:	mov    r10d,DWORD PTR [rsp+0x40]
   14006138a:	mov    rdx,QWORD PTR [rsp+0x38]
   14006138f:	mov    edi,0x7fff8000
   140061394:	mov    r12d,0xffff8000
   14006139a:	mov    r9d,ebx
   14006139d:	mov    eax,edi
   14006139f:	mov    DWORD PTR [rsp+0x74],ebx
   1400613a3:	mov    r8d,ebx
   1400613a6:	cmovne eax,r12d
   1400613aa:	mov    DWORD PTR [rsp+0x70],ebx
   1400613ae:	mov    r11d,0x5
   1400613b4:	mov    DWORD PTR [rsp+0x78],eax
   1400613b8:	jmp    0x14006141e
   1400613ba:	movzx  eax,WORD PTR [rsp+0x62]
   1400613bf:	or     bp,WORD PTR [rsp+0x32]
   1400613c4:	mov    r10d,DWORD PTR [rsp+0x40]
   1400613c9:	mov    DWORD PTR [rsp+0x72],edx
   1400613cd:	mov    rdx,QWORD PTR [rsp+0x38]
   1400613d2:	mov    WORD PTR [rsp+0x70],ax
   1400613d7:	mov    r8d,DWORD PTR [rsp+0x70]
   1400613dc:	mov    DWORD PTR [rsp+0x76],r9d
   1400613e1:	mov    r9d,DWORD PTR [rsp+0x74]
   1400613e6:	mov    WORD PTR [rsp+0x7a],bp
   1400613eb:	mov    edi,0x7fff8000
   1400613f0:	mov    r11d,0x5
   1400613f6:	mov    r12d,0xffff8000
   1400613fc:	jmp    0x14006141e
   1400613fe:	test   dx,dx
   140061401:	mov    rdx,QWORD PTR [rsp+0x38]
   140061406:	mov    eax,edi
   140061408:	cmovne eax,r12d
   14006140c:	mov    r9d,ebx
   14006140f:	mov    DWORD PTR [rsp+0x74],ebx
   140061413:	mov    r8d,ebx
   140061416:	mov    DWORD PTR [rsp+0x70],ebx
   14006141a:	mov    DWORD PTR [rsp+0x78],eax
   14006141e:	test   r10d,r10d
   140061421:	jne    0x140061020
   140061427:	mov    ecx,DWORD PTR [rsp+0x34]
   14006142b:	jmp    0x140061437
   14006142d:	mov    r9d,DWORD PTR [rsp+0x74]
   140061432:	mov    r8d,DWORD PTR [rsp+0x70]
   140061437:	mov    eax,DWORD PTR [rsp+0x78]
   14006143b:	shr    eax,0x10
   14006143e:	cmp    ax,0x3fff
   140061442:	jb     0x1400617a7
   140061448:	add    cx,0x1
   14006144c:	mov    r14d,ebx
   14006144f:	mov    DWORD PTR [rsp+0x60],ebx
   140061453:	mov    DWORD PTR [rsp+0x34],ecx
   140061457:	movzx  ecx,WORD PTR [rsp+0x8a]
   14006145f:	mov    DWORD PTR [rsp+0x64],ebx
   140061463:	movzx  r15d,cx
   140061467:	and    cx,0x7fff
   14006146c:	mov    DWORD PTR [rsp+0x68],ebx
   140061470:	xor    r15w,ax
   140061474:	and    ax,0x7fff
   140061478:	and    r15w,0x8000
   14006147e:	cmp    ax,0x7fff
   140061482:	lea    ebp,[rax+rcx*1]
   140061485:	jae    0x140061795
   14006148b:	cmp    cx,0x7fff
   140061490:	jae    0x140061795
   140061496:	cmp    bp,0xbffd
   14006149b:	ja     0x140061795
   1400614a1:	cmp    bp,0x3fbf
   1400614a6:	ja     0x1400614b7
   1400614a8:	mov    DWORD PTR [rsp+0x78],ebx
   1400614ac:	mov    r9d,ebx
   1400614af:	mov    r8d,ebx
   1400614b2:	jmp    0x1400617a7
   1400614b7:	test   ax,ax
   1400614ba:	jne    0x1400614e0
   1400614bc:	mov    eax,DWORD PTR [rsp+0x78]
   1400614c0:	add    bp,0x1
   1400614c4:	btr    eax,0x1f
   1400614c8:	test   eax,eax
   1400614ca:	jne    0x1400614e0
   1400614cc:	test   r9d,r9d
   1400614cf:	jne    0x1400614e0
   1400614d1:	test   r8d,r8d
   1400614d4:	jne    0x1400614e0
   1400614d6:	mov    WORD PTR [rsp+0x7a],bx
   1400614db:	jmp    0x1400617a7
   1400614e0:	test   cx,cx
   1400614e3:	jne    0x140061519
   1400614e5:	mov    eax,DWORD PTR [rsp+0x88]
   1400614ec:	add    bp,0x1
   1400614f0:	btr    eax,0x1f
   1400614f4:	test   eax,eax
   1400614f6:	jne    0x140061519
   1400614f8:	cmp    DWORD PTR [rsp+0x84],ebx
   1400614ff:	jne    0x140061519
   140061501:	cmp    DWORD PTR [rsp+0x80],ebx
   140061508:	jne    0x140061519
   14006150a:	mov    DWORD PTR [rsp+0x78],ebx
   14006150e:	mov    r9d,ebx
   140061511:	mov    r8d,ebx
   140061514:	jmp    0x1400617a7
   140061519:	mov    r13d,ebx
   14006151c:	lea    rdx,[rsp+0x64]
   140061521:	test   r11d,r11d
   140061524:	lea    eax,[r13+r13*1+0x0]
   140061529:	mov    edi,r11d
   14006152c:	movsxd rcx,eax
   14006152f:	jle    0x1400615b5
   140061535:	mov    r12d,r13d
   140061538:	lea    r10,[rsp+0x88]
   140061540:	lea    r11,[rsp+rcx*1+0x70]
   140061545:	and    r12d,0x1
   140061549:	data16 xchg ax,ax
   14006154c:	data16 data16 xchg ax,ax
   140061550:	movzx  ecx,WORD PTR [r10]
   140061554:	movzx  eax,WORD PTR [r11]
   140061558:	imul   ecx,eax
   14006155b:	test   r12d,r12d
   14006155e:	je     0x14006157d
   140061560:	mov    eax,DWORD PTR [rdx-0x4]
   140061563:	mov    r8d,ebx
   140061566:	lea    r9d,[rax+rcx*1]
   14006156a:	cmp    r9d,eax
   14006156d:	jb     0x140061574
   14006156f:	cmp    r9d,ecx
   140061572:	jae    0x140061577
   140061574:	mov    r8d,esi
   140061577:	mov    DWORD PTR [rdx-0x4],r9d
   14006157b:	jmp    0x140061598
   14006157d:	mov    eax,DWORD PTR [rdx-0x4]
   140061580:	mov    r8d,ebx
   140061583:	lea    r9d,[rax+rcx*1]
   140061587:	cmp    r9d,eax
   14006158a:	jb     0x140061591
   14006158c:	cmp    r9d,ecx
   14006158f:	jae    0x140061594
   140061591:	mov    r8d,esi
   140061594:	mov    DWORD PTR [rdx-0x4],r9d
   140061598:	test   r8d,r8d
   14006159b:	je     0x1400615a1
   14006159d:	add    WORD PTR [rdx],0x1
   1400615a1:	sub    edi,0x1
   1400615a4:	add    r11,0x2
   1400615a8:	sub    r10,0x2
   1400615ac:	test   edi,edi
   1400615ae:	jg     0x140061550
   1400615b0:	mov    r11d,DWORD PTR [rsp+0x48]
   1400615b5:	sub    r11d,0x1
   1400615b9:	add    rdx,0x2
   1400615bd:	add    r13d,0x1
   1400615c1:	test   r11d,r11d
   1400615c4:	mov    DWORD PTR [rsp+0x48],r11d
   1400615c9:	jg     0x140061521
   1400615cf:	add    bp,0xc002
   1400615d4:	test   bp,bp
   1400615d7:	jle    0x14006169e
   1400615dd:	mov    r9d,DWORD PTR [rsp+0x68]
   1400615e2:	mov    edx,DWORD PTR [rsp+0x64]
   1400615e6:	mov    r8d,DWORD PTR [rsp+0x60]
   1400615eb:	xchg   ax,ax
   1400615ed:	data16 xchg ax,ax
   1400615f0:	bt     r9d,0x1f
   1400615f5:	jb     0x14006162c
   1400615f7:	mov    ecx,edx
   1400615f9:	mov    eax,r8d
   1400615fc:	add    r9d,r9d
   1400615ff:	add    edx,edx
   140061601:	shr    eax,0x1f
   140061604:	shr    ecx,0x1f
   140061607:	add    r8d,r8d
   14006160a:	or     edx,eax
   14006160c:	or     r9d,ecx
   14006160f:	add    bp,0xffff
   140061614:	mov    DWORD PTR [rsp+0x64],edx
   140061618:	mov    DWORD PTR [rsp+0x68],r9d
   14006161d:	test   bp,bp
   140061620:	mov    DWORD PTR [rsp+0x60],r8d
   140061625:	jg     0x1400615f0
   140061627:	jmp    0x1400616ac
   14006162c:	test   bp,bp
   14006162f:	jle    0x1400616ac
   140061635:	movzx  eax,WORD PTR [rsp+0x60]
   14006163a:	cmp    ax,0x8000
   14006163e:	ja     0x140061654
   140061640:	and    r8d,0x1ffff
   140061647:	cmp    r8d,0x18000
   14006164e:	jne    0x140061749
   140061654:	mov    eax,DWORD PTR [rsp+0x62]
   140061658:	cmp    eax,0xffffffff
   14006165b:	jne    0x14006173e
   140061661:	mov    eax,DWORD PTR [rsp+0x66]
   140061665:	mov    DWORD PTR [rsp+0x62],ebx
   140061669:	cmp    eax,0xffffffff
   14006166c:	jne    0x14006172c
   140061672:	movzx  eax,WORD PTR [rsp+0x6a]
   140061677:	mov    DWORD PTR [rsp+0x66],ebx
   14006167b:	cmp    ax,0xffff
   14006167f:	jne    0x140061718
   140061685:	mov    edx,DWORD PTR [rsp+0x64]
   140061689:	mov    WORD PTR [rsp+0x6a],0x8000
   140061690:	mov    r9d,DWORD PTR [rsp+0x68]
   140061695:	add    bp,0x1
   140061699:	jmp    0x140061749
   14006169e:	mov    r9d,DWORD PTR [rsp+0x68]
   1400616a3:	mov    edx,DWORD PTR [rsp+0x64]
   1400616a7:	mov    r8d,DWORD PTR [rsp+0x60]
   1400616ac:	add    bp,0xffff
   1400616b1:	jns    0x140061635
   1400616b3:	movzx  eax,bp
   1400616b6:	neg    ax
   1400616b9:	movzx  r10d,ax
   1400616bd:	add    bp,r10w
   1400616c1:	test   BYTE PTR [rsp+0x60],0x1
   1400616c6:	je     0x1400616cc
   1400616c8:	add    r14d,0x1
   1400616cc:	mov    ecx,edx
   1400616ce:	mov    eax,r9d
   1400616d1:	shr    r8d,1
   1400616d4:	shl    ecx,0x1f
   1400616d7:	shr    edx,1
   1400616d9:	shl    eax,0x1f
   1400616dc:	or     r8d,ecx
   1400616df:	shr    r9d,1
   1400616e2:	or     edx,eax
   1400616e4:	sub    r10,0x1
   1400616e8:	mov    DWORD PTR [rsp+0x60],r8d
   1400616ed:	jne    0x1400616c1
   1400616ef:	test   r14d,r14d
   1400616f2:	mov    DWORD PTR [rsp+0x64],edx
   1400616f6:	mov    DWORD PTR [rsp+0x68],r9d
   1400616fb:	je     0x140061635
   140061701:	mov    ax,r8w
   140061705:	or     ax,0x1
   140061709:	mov    WORD PTR [rsp+0x60],ax
   14006170e:	mov    r8d,DWORD PTR [rsp+0x60]
   140061713:	jmp    0x14006163a
   140061718:	mov    edx,DWORD PTR [rsp+0x64]
   14006171c:	add    ax,0x1
   140061720:	mov    WORD PTR [rsp+0x6a],ax
   140061725:	mov    r9d,DWORD PTR [rsp+0x68]
   14006172a:	jmp    0x140061749
   14006172c:	add    eax,0x1
   14006172f:	mov    DWORD PTR [rsp+0x66],eax
   140061733:	mov    r9d,DWORD PTR [rsp+0x68]
   140061738:	mov    edx,DWORD PTR [rsp+0x64]
   14006173c:	jmp    0x140061749
   14006173e:	add    eax,0x1
   140061741:	mov    DWORD PTR [rsp+0x62],eax
   140061745:	mov    edx,DWORD PTR [rsp+0x64]
   140061749:	cmp    bp,0x7fff
   14006174e:	jb     0x14006176d
   140061750:	test   r15w,r15w
   140061754:	mov    eax,0x7fff8000
   140061759:	mov    ecx,0xffff8000
   14006175e:	cmovne eax,ecx
   140061761:	mov    r9d,ebx
   140061764:	mov    r8d,ebx
   140061767:	mov    DWORD PTR [rsp+0x78],eax
   14006176b:	jmp    0x1400617a7
   14006176d:	movzx  eax,WORD PTR [rsp+0x62]
   140061772:	mov    DWORD PTR [rsp+0x72],edx
   140061776:	or     bp,r15w
   14006177a:	mov    DWORD PTR [rsp+0x76],r9d
   14006177f:	mov    r9d,DWORD PTR [rsp+0x74]
   140061784:	mov    WORD PTR [rsp+0x70],ax
   140061789:	mov    r8d,DWORD PTR [rsp+0x70]
   14006178e:	mov    WORD PTR [rsp+0x7a],bp
   140061793:	jmp    0x1400617a7
   140061795:	test   r15w,r15w
   140061799:	mov    r9d,ebx
   14006179c:	mov    r8d,ebx
   14006179f:	cmovne edi,r12d
   1400617a3:	mov    DWORD PTR [rsp+0x78],edi
   1400617a7:	test   BYTE PTR [rsp+0x50],0x1
   1400617ac:	mov    r13,QWORD PTR [rsp+0x58]
   1400617b1:	mov    eax,DWORD PTR [rsp+0x34]
   1400617b5:	mov    r15,QWORD PTR [rsp+0xb0]
   1400617bd:	mov    r14,QWORD PTR [rsp+0xb8]
   1400617c5:	mov    WORD PTR [r13+0x0],ax
   1400617ca:	je     0x140061807
   1400617cc:	mov    edi,DWORD PTR [rsp+0x44]
   1400617d0:	cwde   
   1400617d1:	add    edi,eax
   1400617d3:	test   edi,edi
   1400617d5:	jg     0x14006180b
   1400617d7:	cmp    WORD PTR [rsp+0x30],0x8000
   1400617de:	mov    eax,0x20
   1400617e3:	mov    ecx,0x2d
   1400617e8:	cmove  eax,ecx
   1400617eb:	mov    WORD PTR [r13+0x0],bx
   1400617f0:	mov    BYTE PTR [r13+0x3],0x1
   1400617f5:	mov    BYTE PTR [r13+0x4],0x30
   1400617fa:	mov    BYTE PTR [r13+0x5],bl
   1400617fe:	mov    BYTE PTR [r13+0x2],al
   140061802:	jmp    0x140061aac
   140061807:	mov    edi,DWORD PTR [rsp+0x44]
   14006180b:	mov    r10d,DWORD PTR [rsp+0x78]
   140061810:	mov    ecx,r9d
   140061813:	mov    eax,0x15
   140061818:	cmp    edi,eax
   14006181a:	mov    WORD PTR [rsp+0x7a],bx
   14006181f:	cmovg  edi,eax
   140061822:	add    r9d,r9d
   140061825:	shr    ecx,0x1f
   140061828:	mov    eax,r8d
   14006182b:	add    r8d,r8d
   14006182e:	shr    r10d,0x10
   140061832:	shr    eax,0x1f
   140061835:	or     r9d,eax
   140061838:	mov    eax,DWORD PTR [rsp+0x78]
   14006183c:	lea    edx,[rax+rax*1]
   14006183f:	mov    eax,r8d
   140061842:	add    r8d,r8d
   140061845:	or     edx,ecx
   140061847:	mov    ecx,r9d
   14006184a:	add    r9d,r9d
   14006184d:	shr    eax,0x1f
   140061850:	shr    ecx,0x1f
   140061853:	add    edx,edx
   140061855:	or     r9d,eax
   140061858:	or     edx,ecx
   14006185a:	mov    eax,r8d
   14006185d:	mov    ecx,r9d
   140061860:	shr    eax,0x1f
   140061863:	add    r9d,r9d
   140061866:	or     r9d,eax
   140061869:	shr    ecx,0x1f
   14006186c:	add    edx,edx
   14006186e:	or     edx,ecx
   140061870:	mov    ecx,r9d
   140061873:	add    r9d,r9d
   140061876:	shr    ecx,0x1f
   140061879:	add    edx,edx
   14006187b:	add    r8d,r8d
   14006187e:	or     edx,ecx
   140061880:	mov    eax,r8d
   140061883:	add    r8d,r8d
   140061886:	shr    eax,0x1f
   140061889:	add    edx,edx
   14006188b:	or     r9d,eax
   14006188e:	mov    eax,r8d
   140061891:	add    r8d,r8d
   140061894:	mov    ecx,r9d
   140061897:	shr    eax,0x1f
   14006189a:	add    r9d,r9d
   14006189d:	or     r9d,eax
   1400618a0:	shr    ecx,0x1f
   1400618a3:	mov    eax,r8d
   1400618a6:	or     edx,ecx
   1400618a8:	mov    ecx,r9d
   1400618ab:	shr    eax,0x1f
   1400618ae:	add    r9d,r9d
   1400618b1:	shr    ecx,0x1f
   1400618b4:	add    r8d,r8d
   1400618b7:	or     r9d,eax
   1400618ba:	add    edx,edx
   1400618bc:	mov    eax,r8d
   1400618bf:	or     edx,ecx
   1400618c1:	mov    ecx,r9d
   1400618c4:	shr    eax,0x1f
   1400618c7:	add    r9d,r9d
   1400618ca:	shr    ecx,0x1f
   1400618cd:	add    r8d,r8d
   1400618d0:	or     r9d,eax
   1400618d3:	add    edx,edx
   1400618d5:	mov    eax,r8d
   1400618d8:	or     edx,ecx
   1400618da:	mov    ecx,r9d
   1400618dd:	shr    eax,0x1f
   1400618e0:	add    r9d,r9d
   1400618e3:	add    r8d,r8d
   1400618e6:	lea    r11d,[rdx+rdx*1]
   1400618ea:	or     r9d,eax
   1400618ed:	shr    ecx,0x1f
   1400618f0:	mov    DWORD PTR [rsp+0x70],r8d
   1400618f5:	or     r11d,ecx
   1400618f8:	mov    DWORD PTR [rsp+0x74],r9d
   1400618fd:	sub    r10d,0x3ffe
   140061904:	mov    DWORD PTR [rsp+0x78],r11d
   140061909:	jns    0x140061951
   14006190b:	neg    r10d
   14006190e:	movzx  edx,r10b
   140061912:	test   edx,edx
   140061914:	jle    0x140061951
   140061916:	data16 data16 xchg ax,ax
   14006191a:	data16 xchg ax,ax
   14006191d:	data16 xchg ax,ax
   140061920:	mov    ecx,r9d
   140061923:	mov    eax,r11d
   140061926:	shr    r8d,1
   140061929:	shr    r9d,1
   14006192c:	shl    eax,0x1f
   14006192f:	shl    ecx,0x1f
   140061932:	sub    edx,0x1
   140061935:	shr    r11d,1
   140061938:	or     r9d,eax
   14006193b:	or     r8d,ecx
   14006193e:	test   edx,edx
   140061940:	jg     0x140061920
   140061942:	mov    DWORD PTR [rsp+0x74],r9d
   140061947:	mov    DWORD PTR [rsp+0x70],r8d
   14006194c:	mov    DWORD PTR [rsp+0x78],r11d
   140061951:	lea    r12d,[rdi+0x1]
   140061955:	lea    rbp,[r13+0x4]
   140061959:	test   r12d,r12d
   14006195c:	mov    r10,rbp
   14006195f:	jle    0x140061a5c
   140061965:	data16 data16 xchg ax,ax
   140061969:	data16 xchg ax,ax
   14006196c:	data16 data16 xchg ax,ax
   140061970:	lea    rcx,[rsp+0x70]
   140061975:	lea    rdx,[rsp+0x90]
   14006197d:	mov    rax,QWORD PTR [rcx]
   140061980:	mov    QWORD PTR [rdx],rax
   140061983:	mov    eax,DWORD PTR [rcx+0x8]
   140061986:	mov    ecx,r9d
   140061989:	mov    DWORD PTR [rdx+0x8],eax
   14006198c:	mov    eax,r8d
   14006198f:	lea    edx,[r8+r8*1]
   140061993:	shr    eax,0x1f
   140061996:	shr    ecx,0x1f
   140061999:	lea    r8d,[r9+r9*1]
   14006199d:	or     r8d,eax
   1400619a0:	lea    r9d,[r11+r11*1]
   1400619a4:	mov    eax,edx
   1400619a6:	or     r9d,ecx
   1400619a9:	mov    ecx,r8d
   1400619ac:	shr    eax,0x1f
   1400619af:	add    r8d,r8d
   1400619b2:	add    edx,edx
   1400619b4:	shr    ecx,0x1f
   1400619b7:	or     r8d,eax
   1400619ba:	mov    rax,QWORD PTR [rsp+0x90]
   1400619c2:	lea    r11d,[r9+r9*1]
   1400619c6:	lea    edi,[rax+rdx*1]
   1400619c9:	or     r11d,ecx
   1400619cc:	cmp    edi,edx
   1400619ce:	jb     0x1400619d4
   1400619d0:	cmp    edi,eax
   1400619d2:	jae    0x1400619f1
   1400619d4:	lea    ecx,[r8+0x1]
   1400619d8:	mov    edx,ebx
   1400619da:	cmp    ecx,r8d
   1400619dd:	jb     0x1400619e4
   1400619df:	cmp    ecx,0x1
   1400619e2:	jae    0x1400619e6
   1400619e4:	mov    edx,esi
   1400619e6:	test   edx,edx
   1400619e8:	mov    r8d,ecx
   1400619eb:	je     0x1400619f1
   1400619ed:	add    r11d,0x1
   1400619f1:	shr    rax,0x20
   1400619f5:	lea    r9d,[r8+rax*1]
   1400619f9:	cmp    r9d,r8d
   1400619fc:	jb     0x140061a03
   1400619fe:	cmp    r9d,eax
   140061a01:	jae    0x140061a07
   140061a03:	add    r11d,0x1
   140061a07:	add    r11d,DWORD PTR [rsp+0x98]
   140061a0f:	mov    ecx,r9d
   140061a12:	add    r9d,r9d
   140061a15:	shr    ecx,0x1f
   140061a18:	mov    eax,edi
   140061a1a:	lea    r8d,[rdi+rdi*1]
   140061a1e:	shr    eax,0x1f
   140061a21:	sub    r12d,0x1
   140061a25:	add    r10,0x1
   140061a29:	or     r9d,eax
   140061a2c:	lea    eax,[r11+r11*1]
   140061a30:	mov    DWORD PTR [rsp+0x70],r8d
   140061a35:	or     eax,ecx
   140061a37:	mov    DWORD PTR [rsp+0x74],r9d
   140061a3c:	mov    DWORD PTR [rsp+0x78],eax
   140061a40:	shr    eax,0x18
   140061a43:	mov    BYTE PTR [rsp+0x7b],bl
   140061a47:	add    al,0x30
   140061a49:	test   r12d,r12d
   140061a4c:	mov    BYTE PTR [r10-0x1],al
   140061a50:	jle    0x140061a5c
   140061a52:	mov    r11d,DWORD PTR [rsp+0x78]
   140061a57:	jmp    0x140061970
   140061a5c:	movzx  eax,BYTE PTR [r10-0x1]
   140061a61:	sub    r10,0x2
   140061a65:	cmp    al,0x35
   140061a67:	jl     0x140061ae8
   140061a6d:	cmp    r10,rbp
   140061a70:	jb     0x140061a85
   140061a72:	cmp    BYTE PTR [r10],0x39
   140061a76:	jne    0x140061a85
   140061a78:	mov    BYTE PTR [r10],0x30
   140061a7c:	sub    r10,0x1
   140061a80:	cmp    r10,rbp
   140061a83:	jae    0x140061a72
   140061a85:	cmp    r10,rbp
   140061a88:	jae    0x140061a94
   140061a8a:	add    r10,0x1
   140061a8e:	add    WORD PTR [r13+0x0],0x1
   140061a94:	add    BYTE PTR [r10],0x1
   140061a98:	sub    r10b,r13b
   140061a9b:	sub    r10b,0x3
   140061a9f:	movsx  rcx,r10b
   140061aa3:	mov    BYTE PTR [r13+0x3],r10b
   140061aa7:	mov    BYTE PTR [rcx+r13*1+0x4],bl
   140061aac:	mov    r13,QWORD PTR [rsp+0xc0]
   140061ab4:	mov    r12,QWORD PTR [rsp+0xc8]
   140061abc:	mov    rbp,QWORD PTR [rsp+0xd0]
   140061ac4:	mov    rbx,QWORD PTR [rsp+0xf8]
   140061acc:	mov    eax,esi
   140061ace:	mov    rcx,QWORD PTR [rsp+0xa0]
   140061ad6:	xor    rcx,rsp
   140061ad9:	call   0x140046470
   140061ade:	add    rsp,0xd8
   140061ae5:	pop    rdi
   140061ae6:	pop    rsi
   140061ae7:	ret    
   140061ae8:	cmp    r10,rbp
   140061aeb:	jb     0x140061aff
   140061aed:	data16 xchg ax,ax
   140061af0:	cmp    BYTE PTR [r10],0x30
   140061af4:	jne    0x140061aff
   140061af6:	sub    r10,0x1
   140061afa:	cmp    r10,rbp
   140061afd:	jae    0x140061af0
   140061aff:	cmp    r10,rbp
   140061b02:	jae    0x140061a98
   140061b04:	cmp    WORD PTR [rsp+0x30],0x8000
   140061b0b:	mov    eax,0x20
   140061b10:	mov    ecx,0x2d
   140061b15:	cmove  eax,ecx
   140061b18:	mov    WORD PTR [r13+0x0],bx
   140061b1d:	mov    BYTE PTR [r13+0x3],0x1
   140061b22:	mov    BYTE PTR [rbp+0x0],0x30
   140061b26:	mov    BYTE PTR [r13+0x5],bl
   140061b2a:	mov    BYTE PTR [r13+0x2],al
   140061b2e:	jmp    0x140061aac
   140061b33:	int3   
   140061b34:	int3   
   140061b35:	int3   
   140061b36:	int3   
   140061b37:	int3   
   140061b38:	int3   
   140061b39:	int3   
   140061b3a:	int3   
   140061b3b:	int3   
   140061b3c:	int3   
   140061b3d:	int3   
   140061b3e:	int3   
   140061b3f:	int3   
   140061b40:	sub    rsp,0x48
   140061b44:	xor    eax,eax
   140061b46:	lea    rcx,[rip+0xe7f3]        # 0x140070340
   140061b4d:	xor    r9d,r9d
   140061b50:	mov    QWORD PTR [rsp+0x30],rax
   140061b55:	mov    DWORD PTR [rsp+0x28],eax
   140061b59:	lea    r8d,[rax+0x3]
   140061b5d:	mov    edx,0x40000000
   140061b62:	mov    DWORD PTR [rsp+0x20],0x3
   140061b6a:	call   QWORD PTR [rip+0x2870]        # 0x1400643e0
   140061b70:	mov    QWORD PTR [rip+0x26841],rax        # 0x1400883b8
   140061b77:	add    rsp,0x48
   140061b7b:	ret    
   140061b7c:	int3   
   140061b7d:	int3   
   140061b7e:	int3   
   140061b7f:	int3   
   140061b80:	sub    rsp,0x28
   140061b84:	mov    rcx,QWORD PTR [rip+0x2682d]        # 0x1400883b8
   140061b8b:	cmp    rcx,0xffffffffffffffff
   140061b8f:	je     0x140061b9d
   140061b91:	cmp    rcx,0xfffffffffffffffe
   140061b95:	je     0x140061b9d
   140061b97:	call   QWORD PTR [rip+0x2a2b]        # 0x1400645c8
   140061b9d:	mov    rcx,QWORD PTR [rip+0x2680c]        # 0x1400883b0
   140061ba4:	cmp    rcx,0xffffffffffffffff
   140061ba8:	je     0x140061bb6
   140061baa:	cmp    rcx,0xfffffffffffffffe
   140061bae:	je     0x140061bb6
   140061bb0:	call   QWORD PTR [rip+0x2a12]        # 0x1400645c8
   140061bb6:	add    rsp,0x28
   140061bba:	ret    
   140061bbb:	int3   
   140061bbc:	int3   
   140061bbd:	int3   
   140061bbe:	int3   
   140061bbf:	int3   
   140061bc0:	rex push rbp
   140061bc2:	push   rbx
   140061bc3:	push   rsi
   140061bc4:	push   rdi
   140061bc5:	push   r12
   140061bc7:	push   r13
   140061bc9:	push   r14
   140061bcb:	push   r15
   140061bcd:	sub    rsp,0x68
   140061bd1:	lea    rbp,[rsp+0x30]
   140061bd6:	mov    rax,QWORD PTR [rip+0x25193]        # 0x140086d70
   140061bdd:	xor    rax,rbp
   140061be0:	mov    QWORD PTR [rbp+0x28],rax
   140061be4:	mov    r15,QWORD PTR [rbp+0xa8]
   140061beb:	mov    DWORD PTR [rbp+0x0],r8d
   140061bef:	mov    r8d,DWORD PTR [rip+0x2b9f6]        # 0x14008d5ec
   140061bf6:	test   r8d,r8d
   140061bf9:	mov    r13,r9
   140061bfc:	mov    r14d,edx
   140061bff:	mov    DWORD PTR [rbp+0x4],edx
   140061c02:	mov    r12,rcx
   140061c05:	mov    QWORD PTR [rbp+0x8],r15
   140061c09:	mov    ebx,0x2
   140061c0e:	jne    0x140061c57
   140061c10:	lea    r8,[rip+0xd22d]        # 0x14006ee44
   140061c17:	lea    r9d,[rbx-0x1]
   140061c1b:	xor    edx,edx
   140061c1d:	xor    ecx,ecx
   140061c1f:	mov    DWORD PTR [rsp+0x28],0x1
   140061c27:	mov    QWORD PTR [rsp+0x20],r8
   140061c2c:	call   QWORD PTR [rip+0x282e]        # 0x140064460
   140061c32:	test   eax,eax
   140061c34:	je     0x140061c3c
   140061c36:	lea    r8d,[rbx-0x1]
   140061c3a:	jmp    0x140061c50
   140061c3c:	call   QWORD PTR [rip+0x29be]        # 0x140064600
   140061c42:	mov    r8d,DWORD PTR [rip+0x2b9a3]        # 0x14008d5ec
   140061c49:	cmp    eax,0x78
   140061c4c:	cmove  r8d,ebx
   140061c50:	mov    DWORD PTR [rip+0x2b995],r8d        # 0x14008d5ec
   140061c57:	mov    r9d,DWORD PTR [rbp+0xa0]
   140061c5e:	or     r10d,0xffffffff
   140061c62:	test   r9d,r9d
   140061c65:	jle    0x140061c94
   140061c67:	mov    ecx,r9d
   140061c6a:	mov    rax,r13
   140061c6d:	data16 xchg ax,ax
   140061c70:	sub    ecx,0x1
   140061c73:	cmp    BYTE PTR [rax],0x0
   140061c76:	je     0x140061c83
   140061c78:	add    rax,0x1
   140061c7c:	test   ecx,ecx
   140061c7e:	jne    0x140061c70
   140061c80:	mov    ecx,r10d
   140061c83:	mov    eax,r10d
   140061c86:	sub    eax,ecx
   140061c88:	add    r9d,eax
   140061c8b:	mov    DWORD PTR [rbp+0xa0],r9d
   140061c92:	jmp    0x140061c9e
   140061c94:	cmp    r9d,0xffffffff
   140061c98:	jl     0x14006202d
   140061c9e:	mov    edx,DWORD PTR [rbp+0xb0]
   140061ca4:	test   edx,edx
   140061ca6:	jle    0x140061cd1
   140061ca8:	mov    eax,edx
   140061caa:	mov    rcx,r15
   140061cad:	data16 xchg ax,ax
   140061cb0:	sub    eax,0x1
   140061cb3:	cmp    BYTE PTR [rcx],0x0
   140061cb6:	je     0x140061cc3
   140061cb8:	add    rcx,0x1
   140061cbc:	test   eax,eax
   140061cbe:	jne    0x140061cb0
   140061cc0:	mov    eax,r10d
   140061cc3:	sub    r10d,eax
   140061cc6:	add    edx,r10d
   140061cc9:	mov    DWORD PTR [rbp+0xb0],edx
   140061ccf:	jmp    0x140061cda
   140061cd1:	cmp    edx,0xffffffff
   140061cd4:	jl     0x14006202d
   140061cda:	cmp    r8d,ebx
   140061cdd:	je     0x140061fa5
   140061ce3:	test   r8d,r8d
   140061ce6:	je     0x140061fa5
   140061cec:	cmp    r8d,0x1
   140061cf0:	jne    0x14006202d
   140061cf6:	mov    r14d,DWORD PTR [rbp+0xb8]
   140061cfd:	xor    edi,edi
   140061cff:	test   r14d,r14d
   140061d02:	jne    0x140061d0c
   140061d04:	mov    rcx,QWORD PTR [r12]
   140061d08:	mov    r14d,DWORD PTR [rcx+0x4]
   140061d0c:	test   r9d,r9d
   140061d0f:	je     0x140061d19
   140061d11:	test   edx,edx
   140061d13:	jne    0x140061dcc
   140061d19:	cmp    r9d,edx
   140061d1c:	jne    0x140061d25
   140061d1e:	mov    eax,ebx
   140061d20:	jmp    0x140062075
   140061d25:	cmp    edx,0x1
   140061d28:	jle    0x140061d34
   140061d2a:	mov    eax,0x1
   140061d2f:	jmp    0x140062075
   140061d34:	cmp    r9d,0x1
   140061d38:	jle    0x140061d44
   140061d3a:	mov    eax,0x3
   140061d3f:	jmp    0x140062075
   140061d44:	lea    rdx,[rbp+0x10]
   140061d48:	mov    ecx,r14d
   140061d4b:	call   QWORD PTR [rip+0x25ff]        # 0x140064350
   140061d51:	test   eax,eax
   140061d53:	je     0x14006202d
   140061d59:	mov    r9d,DWORD PTR [rbp+0xa0]
   140061d60:	test   r9d,r9d
   140061d63:	jle    0x140061d91
   140061d65:	cmp    DWORD PTR [rbp+0x10],ebx
   140061d68:	jb     0x140061d3a
   140061d6a:	cmp    BYTE PTR [rbp+0x16],dil
   140061d6e:	lea    rax,[rbp+0x16]
   140061d72:	je     0x140061d3a
   140061d74:	movzx  ecx,BYTE PTR [rax+0x1]
   140061d78:	test   cl,cl
   140061d7a:	je     0x140061d3a
   140061d7c:	movzx  edx,BYTE PTR [r13+0x0]
   140061d81:	cmp    dl,BYTE PTR [rax]
   140061d83:	jb     0x140061d89
   140061d85:	cmp    dl,cl
   140061d87:	jbe    0x140061d1e
   140061d89:	add    rax,rbx
   140061d8c:	cmp    BYTE PTR [rax],dil
   140061d8f:	jmp    0x140061d72
   140061d91:	cmp    DWORD PTR [rbp+0xb0],edi
   140061d97:	jle    0x140061dcc
   140061d99:	cmp    DWORD PTR [rbp+0x10],ebx
   140061d9c:	jb     0x140061d2a
   140061d9e:	cmp    BYTE PTR [rbp+0x16],dil
   140061da2:	lea    rax,[rbp+0x16]
   140061da6:	je     0x140061d2a
   140061da8:	movzx  ecx,BYTE PTR [rax+0x1]
   140061dac:	test   cl,cl
   140061dae:	je     0x140061d2a
   140061db4:	movzx  edx,BYTE PTR [r15]
   140061db8:	cmp    dl,BYTE PTR [rax]
   140061dba:	jb     0x140061dc4
   140061dbc:	cmp    dl,cl
   140061dbe:	jbe    0x140061d1e
   140061dc4:	add    rax,rbx
   140061dc7:	cmp    BYTE PTR [rax],dil
   140061dca:	jmp    0x140061da6
   140061dcc:	mov    r8,r13
   140061dcf:	mov    edx,0x9
   140061dd4:	mov    ecx,r14d
   140061dd7:	mov    DWORD PTR [rsp+0x28],edi
   140061ddb:	mov    QWORD PTR [rsp+0x20],rdi
   140061de0:	call   QWORD PTR [rip+0x2832]        # 0x140064618
   140061de6:	test   eax,eax
   140061de8:	movsxd r15,eax
   140061deb:	je     0x14006202d
   140061df1:	jle    0x14006202d
   140061df7:	xor    edx,edx
   140061df9:	mov    rax,0xffffffffffffffe0
   140061e00:	div    r15
   140061e03:	cmp    rax,rbx
   140061e06:	jb     0x14006202d
   140061e0c:	lea    rcx,[r15+r15*1+0x10]
   140061e11:	movabs rbx,0xffffffffffffff0
   140061e1b:	cmp    rcx,0x400
   140061e22:	ja     0x140061e52
   140061e24:	lea    rax,[rcx+0xf]
   140061e28:	cmp    rax,rcx
   140061e2b:	ja     0x140061e30
   140061e2d:	mov    rax,rbx
   140061e30:	and    rax,0xfffffffffffffff0
   140061e34:	call   0x140063500
   140061e39:	sub    rsp,rax
   140061e3c:	lea    rsi,[rsp+0x30]
   140061e41:	test   rsi,rsi
   140061e44:	je     0x14006202d
   140061e4a:	mov    DWORD PTR [rsi],0xcccc
   140061e50:	jmp    0x140061e65
   140061e52:	call   0x1400480c0
   140061e57:	test   rax,rax
   140061e5a:	mov    rsi,rax
   140061e5d:	je     0x140061e69
   140061e5f:	mov    DWORD PTR [rax],0xdddd
   140061e65:	add    rsi,0x10
   140061e69:	test   rsi,rsi
   140061e6c:	je     0x14006202d
   140061e72:	mov    r9d,DWORD PTR [rbp+0xa0]
   140061e79:	mov    r8,r13
   140061e7c:	mov    edx,0x1
   140061e81:	mov    ecx,r14d
   140061e84:	mov    DWORD PTR [rsp+0x28],r15d
   140061e89:	mov    QWORD PTR [rsp+0x20],rsi
   140061e8e:	call   QWORD PTR [rip+0x2784]        # 0x140064618
   140061e94:	test   eax,eax
   140061e96:	je     0x140061f8c
   140061e9c:	mov    r13,QWORD PTR [rbp+0x8]
   140061ea0:	mov    r9d,DWORD PTR [rbp+0xb0]
   140061ea7:	mov    edx,0x9
   140061eac:	mov    ecx,r14d
   140061eaf:	mov    r8,r13
   140061eb2:	mov    DWORD PTR [rsp+0x28],edi
   140061eb6:	mov    QWORD PTR [rsp+0x20],rdi
   140061ebb:	call   QWORD PTR [rip+0x2757]        # 0x140064618
   140061ec1:	test   eax,eax
   140061ec3:	movsxd r12,eax
   140061ec6:	jle    0x140061f8c
   140061ecc:	xor    edx,edx
   140061ece:	mov    rax,0xffffffffffffffe0
   140061ed5:	div    r12
   140061ed8:	cmp    rax,0x2
   140061edc:	jb     0x140061f8c
   140061ee2:	lea    rcx,[r12+r12*1+0x10]
   140061ee7:	cmp    rcx,0x400
   140061eee:	ja     0x140061f1a
   140061ef0:	lea    rax,[rcx+0xf]
   140061ef4:	cmp    rax,rcx
   140061ef7:	ja     0x140061efc
   140061ef9:	mov    rax,rbx
   140061efc:	and    rax,0xfffffffffffffff0
   140061f00:	call   0x140063500
   140061f05:	sub    rsp,rax
   140061f08:	lea    rbx,[rsp+0x30]
   140061f0d:	test   rbx,rbx
   140061f10:	je     0x140061f8c
   140061f12:	mov    DWORD PTR [rbx],0xcccc
   140061f18:	jmp    0x140061f2d
   140061f1a:	call   0x1400480c0
   140061f1f:	test   rax,rax
   140061f22:	mov    rbx,rax
   140061f25:	je     0x140061f31
   140061f27:	mov    DWORD PTR [rax],0xdddd
   140061f2d:	add    rbx,0x10
   140061f31:	test   rbx,rbx
   140061f34:	je     0x140061f8c
   140061f36:	mov    r9d,DWORD PTR [rbp+0xb0]
   140061f3d:	mov    r8,r13
   140061f40:	mov    edx,0x1
   140061f45:	mov    ecx,r14d
   140061f48:	mov    DWORD PTR [rsp+0x28],r12d
   140061f4d:	mov    QWORD PTR [rsp+0x20],rbx
   140061f52:	call   QWORD PTR [rip+0x26c0]        # 0x140064618
   140061f58:	test   eax,eax
   140061f5a:	je     0x140061f7a
   140061f5c:	mov    edx,DWORD PTR [rbp+0x0]
   140061f5f:	mov    ecx,DWORD PTR [rbp+0x4]
   140061f62:	mov    r9d,r15d
   140061f65:	mov    r8,rsi
   140061f68:	mov    DWORD PTR [rsp+0x28],r12d
   140061f6d:	mov    QWORD PTR [rsp+0x20],rbx
   140061f72:	call   QWORD PTR [rip+0x24e8]        # 0x140064460
   140061f78:	mov    edi,eax
   140061f7a:	cmp    DWORD PTR [rbx-0x10],0xdddd
   140061f81:	lea    rcx,[rbx-0x10]
   140061f85:	jne    0x140061f8c
   140061f87:	call   0x1400485c0
   140061f8c:	cmp    DWORD PTR [rsi-0x10],0xdddd
   140061f93:	lea    rcx,[rsi-0x10]
   140061f97:	jne    0x140061f9e
   140061f99:	call   0x1400485c0
   140061f9e:	mov    eax,edi
   140061fa0:	jmp    0x140062075
   140061fa5:	xor    edi,edi
   140061fa7:	test   r14d,r14d
   140061faa:	mov    rbx,rdi
   140061fad:	jne    0x140061fb7
   140061faf:	mov    rax,QWORD PTR [r12]
   140061fb3:	mov    r14d,DWORD PTR [rax+0x14]
   140061fb7:	mov    esi,DWORD PTR [rbp+0xb8]
   140061fbd:	test   esi,esi
   140061fbf:	jne    0x140061fc8
   140061fc1:	mov    rax,QWORD PTR [r12]
   140061fc5:	mov    esi,DWORD PTR [rax+0x4]
   140061fc8:	mov    ecx,r14d
   140061fcb:	call   0x140058b00
   140061fd0:	cmp    eax,0xffffffff
   140061fd3:	mov    r12d,eax
   140061fd6:	je     0x14006202d
   140061fd8:	cmp    eax,esi
   140061fda:	je     0x140062037
   140061fdc:	lea    r9,[rbp+0xa0]
   140061fe3:	mov    r8,r13
   140061fe6:	mov    edx,eax
   140061fe8:	mov    ecx,esi
   140061fea:	mov    DWORD PTR [rsp+0x28],edi
   140061fee:	mov    QWORD PTR [rsp+0x20],rdi
   140061ff3:	call   0x140058b70
   140061ff8:	test   rax,rax
   140061ffb:	mov    rbx,rax
   140061ffe:	je     0x14006202d
   140062000:	lea    r9,[rbp+0xb0]
   140062007:	mov    r8,r15
   14006200a:	mov    edx,r12d
   14006200d:	mov    ecx,esi
   14006200f:	mov    DWORD PTR [rsp+0x28],edi
   140062013:	mov    QWORD PTR [rsp+0x20],rdi
   140062018:	call   0x140058b70
   14006201d:	test   rax,rax
   140062020:	mov    rdi,rax
   140062023:	jne    0x140062031
   140062025:	mov    rcx,rbx
   140062028:	call   0x1400485c0
   14006202d:	xor    eax,eax
   14006202f:	jmp    0x140062075
   140062031:	mov    r13,rbx
   140062034:	mov    r15,rax
   140062037:	mov    eax,DWORD PTR [rbp+0xb0]
   14006203d:	mov    r9d,DWORD PTR [rbp+0xa0]
   140062044:	mov    edx,DWORD PTR [rbp+0x0]
   140062047:	mov    DWORD PTR [rsp+0x28],eax
   14006204b:	mov    r8,r13
   14006204e:	mov    ecx,r14d
   140062051:	mov    QWORD PTR [rsp+0x20],r15
   140062056:	call   QWORD PTR [rip+0x249c]        # 0x1400644f8
   14006205c:	test   rbx,rbx
   14006205f:	mov    esi,eax
   140062061:	je     0x140062073
   140062063:	mov    rcx,rbx
   140062066:	call   0x1400485c0
   14006206b:	mov    rcx,rdi
   14006206e:	call   0x1400485c0
   140062073:	mov    eax,esi
   140062075:	mov    rcx,QWORD PTR [rbp+0x28]
   140062079:	xor    rcx,rbp
   14006207c:	call   0x140046470
   140062081:	lea    rsp,[rbp+0x38]
   140062085:	pop    r15
   140062087:	pop    r14
   140062089:	pop    r13
   14006208b:	pop    r12
   14006208d:	pop    rdi
   14006208e:	pop    rsi
   14006208f:	pop    rbx
   140062090:	pop    rbp
   140062091:	ret    
   140062092:	int3   
   140062093:	int3   
   140062094:	int3   
   140062095:	int3   
   140062096:	int3   
   140062097:	int3   
   140062098:	int3   
   140062099:	int3   
   14006209a:	int3   
   14006209b:	int3   
   14006209c:	int3   
   14006209d:	int3   
   14006209e:	int3   
   14006209f:	int3   
   1400620a0:	mov    rax,rsp
   1400620a3:	sub    rsp,0x68
   1400620a7:	test   rcx,rcx
   1400620aa:	mov    QWORD PTR [rax+0x8],rbx
   1400620ae:	mov    QWORD PTR [rax+0x10],rbp
   1400620b2:	mov    QWORD PTR [rax+0x18],rsi
   1400620b6:	mov    QWORD PTR [rax-0x8],r12
   1400620ba:	mov    ebp,r8d
   1400620bd:	mov    r12d,edx
   1400620c0:	mov    rsi,r9
   1400620c3:	mov    BYTE PTR [rax-0x10],0x0
   1400620c7:	jne    0x140062157
   1400620cd:	mov    QWORD PTR [rax+0x20],rdi
   1400620d1:	call   0x14004bd60
   1400620d6:	mov    rcx,QWORD PTR [rax+0xc0]
   1400620dd:	mov    rdi,QWORD PTR [rax+0xb8]
   1400620e4:	mov    rbx,rax
   1400620e7:	cmp    rcx,QWORD PTR [rip+0x257b2]        # 0x1400878a0
   1400620ee:	mov    QWORD PTR [rsp+0x50],rax
   1400620f3:	mov    QWORD PTR [rsp+0x40],rcx
   1400620f8:	mov    QWORD PTR [rsp+0x48],rdi
   1400620fd:	je     0x140062117
   1400620ff:	mov    ecx,DWORD PTR [rax+0xc8]
   140062105:	test   DWORD PTR [rip+0x2561d],ecx        # 0x140087728
   14006210b:	jne    0x140062117
   14006210d:	call   0x14004f030
   140062112:	mov    QWORD PTR [rsp+0x40],rax
   140062117:	cmp    rdi,QWORD PTR [rip+0x25502]        # 0x140087620
   14006211e:	mov    rdi,QWORD PTR [rsp+0x88]
   140062126:	je     0x140062140
   140062128:	mov    eax,DWORD PTR [rbx+0xc8]
   14006212e:	test   DWORD PTR [rip+0x255f4],eax        # 0x140087728
   140062134:	jne    0x140062140
   140062136:	call   0x14004e4e0
   14006213b:	mov    QWORD PTR [rsp+0x48],rax
   140062140:	test   BYTE PTR [rbx+0xc8],0x2
   140062147:	jne    0x14006216a
   140062149:	or     DWORD PTR [rbx+0xc8],0x2
   140062150:	mov    BYTE PTR [rsp+0x58],0x1
   140062155:	jmp    0x14006216a
   140062157:	mov    rax,QWORD PTR [rcx]
   14006215a:	lea    rdx,[rsp+0x40]
   14006215f:	mov    QWORD PTR [rdx],rax
   140062162:	mov    rax,QWORD PTR [rcx+0x8]
   140062166:	mov    QWORD PTR [rdx+0x8],rax
   14006216a:	mov    eax,DWORD PTR [rsp+0xa8]
   140062171:	lea    rcx,[rsp+0x40]
   140062176:	mov    r9,rsi
   140062179:	mov    DWORD PTR [rsp+0x38],eax
   14006217d:	mov    eax,DWORD PTR [rsp+0xa0]
   140062184:	mov    r8d,ebp
   140062187:	mov    DWORD PTR [rsp+0x30],eax
   14006218b:	mov    rax,QWORD PTR [rsp+0x98]
   140062193:	mov    edx,r12d
   140062196:	mov    QWORD PTR [rsp+0x28],rax
   14006219b:	mov    eax,DWORD PTR [rsp+0x90]
   1400621a2:	mov    DWORD PTR [rsp+0x20],eax
   1400621a6:	call   0x140061bc0
   1400621ab:	cmp    BYTE PTR [rsp+0x58],0x0
   1400621b0:	mov    r12,QWORD PTR [rsp+0x60]
   1400621b5:	mov    rsi,QWORD PTR [rsp+0x80]
   1400621bd:	mov    rbp,QWORD PTR [rsp+0x78]
   1400621c2:	mov    rbx,QWORD PTR [rsp+0x70]
   1400621c7:	je     0x1400621d5
   1400621c9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400621ce:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400621d5:	add    rsp,0x68
   1400621d9:	ret    
   1400621da:	int3   
   1400621db:	int3   
   1400621dc:	int3   
   1400621dd:	int3   
   1400621de:	int3   
   1400621df:	int3   
   1400621e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400621e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400621ea:	push   rdi
   1400621eb:	sub    rsp,0x60
   1400621ef:	test   r9,r9
   1400621f2:	mov    rbx,r8
   1400621f5:	mov    rdi,rdx
   1400621f8:	mov    rsi,rcx
   1400621fb:	mov    BYTE PTR [rsp+0x58],0x0
   140062200:	jne    0x140062298
   140062206:	call   0x14004bd60
   14006220b:	mov    QWORD PTR [rsp+0x50],rax
   140062210:	mov    r9,QWORD PTR [rax+0xc0]
   140062217:	cmp    r9,QWORD PTR [rip+0x25682]        # 0x1400878a0
   14006221e:	mov    QWORD PTR [rsp+0x40],r9
   140062223:	mov    r10,QWORD PTR [rax+0xb8]
   14006222a:	mov    QWORD PTR [rsp+0x48],r10
   14006222f:	je     0x140062256
   140062231:	mov    ecx,DWORD PTR [rax+0xc8]
   140062237:	test   DWORD PTR [rip+0x254eb],ecx        # 0x140087728
   14006223d:	jne    0x140062256
   14006223f:	call   0x14004f030
   140062244:	mov    r10,QWORD PTR [rsp+0x48]
   140062249:	mov    r9,rax
   14006224c:	mov    QWORD PTR [rsp+0x40],rax
   140062251:	mov    rax,QWORD PTR [rsp+0x50]
   140062256:	cmp    r10,QWORD PTR [rip+0x253c3]        # 0x140087620
   14006225d:	je     0x140062281
   14006225f:	mov    ecx,DWORD PTR [rax+0xc8]
   140062265:	test   DWORD PTR [rip+0x254bd],ecx        # 0x140087728
   14006226b:	jne    0x140062281
   14006226d:	call   0x14004e4e0
   140062272:	mov    r9,QWORD PTR [rsp+0x40]
   140062277:	mov    QWORD PTR [rsp+0x48],rax
   14006227c:	mov    rax,QWORD PTR [rsp+0x50]
   140062281:	test   BYTE PTR [rax+0xc8],0x2
   140062288:	jne    0x1400622b5
   14006228a:	or     DWORD PTR [rax+0xc8],0x2
   140062291:	mov    BYTE PTR [rsp+0x58],0x1
   140062296:	jmp    0x1400622ab
   140062298:	mov    rax,QWORD PTR [r9]
   14006229b:	lea    rcx,[rsp+0x40]
   1400622a0:	mov    QWORD PTR [rcx],rax
   1400622a3:	mov    rax,QWORD PTR [r9+0x8]
   1400622a7:	mov    QWORD PTR [rcx+0x8],rax
   1400622ab:	mov    r9,QWORD PTR [rsp+0x40]
   1400622b0:	mov    rax,QWORD PTR [rsp+0x50]
   1400622b5:	test   rbx,rbx
   1400622b8:	jne    0x1400622d9
   1400622ba:	cmp    BYTE PTR [rsp+0x58],bl
   1400622be:	je     0x1400622c7
   1400622c0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400622c7:	xor    eax,eax
   1400622c9:	mov    rbx,QWORD PTR [rsp+0x70]
   1400622ce:	mov    rsi,QWORD PTR [rsp+0x78]
   1400622d3:	add    rsp,0x60
   1400622d7:	pop    rdi
   1400622d8:	ret    
   1400622d9:	test   rsi,rsi
   1400622dc:	jne    0x140062329
   1400622de:	call   0x140048680
   1400622e3:	xor    r9d,r9d
   1400622e6:	xor    r8d,r8d
   1400622e9:	xor    edx,edx
   1400622eb:	xor    ecx,ecx
   1400622ed:	mov    QWORD PTR [rsp+0x20],0x0
   1400622f6:	mov    DWORD PTR [rax],0x16
   1400622fc:	call   0x14004e100
   140062301:	cmp    BYTE PTR [rsp+0x58],0x0
   140062306:	je     0x140062314
   140062308:	mov    rax,QWORD PTR [rsp+0x50]
   14006230d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140062314:	mov    eax,0x7fffffff
   140062319:	mov    rbx,QWORD PTR [rsp+0x70]
   14006231e:	mov    rsi,QWORD PTR [rsp+0x78]
   140062323:	add    rsp,0x60
   140062327:	pop    rdi
   140062328:	ret    
   140062329:	test   rdi,rdi
   14006232c:	je     0x1400622de
   14006232e:	cmp    rbx,0x7fffffff
   140062335:	ja     0x1400622de
   140062337:	mov    edx,DWORD PTR [r9+0x10]
   14006233b:	test   edx,edx
   14006233d:	jne    0x140062354
   14006233f:	lea    r9,[rsp+0x40]
   140062344:	mov    r8,rbx
   140062347:	mov    rdx,rdi
   14006234a:	mov    rcx,rsi
   14006234d:	call   0x14005d530
   140062352:	jmp    0x140062393
   140062354:	mov    eax,DWORD PTR [r9+0x8]
   140062358:	lea    rcx,[rsp+0x40]
   14006235d:	mov    r8d,0x1001
   140062363:	mov    DWORD PTR [rsp+0x38],eax
   140062367:	mov    DWORD PTR [rsp+0x30],ebx
   14006236b:	mov    r9,rsi
   14006236e:	mov    QWORD PTR [rsp+0x28],rdi
   140062373:	mov    DWORD PTR [rsp+0x20],ebx
   140062377:	call   0x1400620a0
   14006237c:	test   eax,eax
   14006237e:	jne    0x140062390
   140062380:	call   0x140048680
   140062385:	mov    DWORD PTR [rax],0x16
   14006238b:	jmp    0x140062301
   140062390:	add    eax,0xfffffffe
   140062393:	cmp    BYTE PTR [rsp+0x58],0x0
   140062398:	je     0x1400623a6
   14006239a:	mov    rcx,QWORD PTR [rsp+0x50]
   14006239f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400623a6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400623ab:	mov    rsi,QWORD PTR [rsp+0x78]
   1400623b0:	add    rsp,0x60
   1400623b4:	pop    rdi
   1400623b5:	ret    
   1400623b6:	int3   
   1400623b7:	int3   
   1400623b8:	int3   
   1400623b9:	int3   
   1400623ba:	int3   
   1400623bb:	int3   
   1400623bc:	int3   
   1400623bd:	int3   
   1400623be:	int3   
   1400623bf:	int3   
   1400623c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400623c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400623ca:	push   rdi
   1400623cb:	sub    rsp,0x20
   1400623cf:	mov    r8,QWORD PTR [rip+0x2a282]        # 0x14008c658
   1400623d6:	mov    rsi,rcx
   1400623d9:	mov    rax,QWORD PTR [r8]
   1400623dc:	mov    rbx,r8
   1400623df:	test   rax,rax
   1400623e2:	je     0x140062426
   1400623e4:	movsxd rdi,edx
   1400623e7:	data16 xchg ax,ax
   1400623ea:	data16 xchg ax,ax
   1400623ed:	data16 xchg ax,ax
   1400623f0:	mov    r8,rdi
   1400623f3:	mov    rdx,rax
   1400623f6:	mov    rcx,rsi
   1400623f9:	call   0x14005f1e0
   1400623fe:	test   eax,eax
   140062400:	jne    0x140062412
   140062402:	mov    rax,QWORD PTR [rbx]
   140062405:	movzx  ecx,BYTE PTR [rdi+rax*1]
   140062409:	cmp    cl,0x3d
   14006240c:	je     0x140062441
   14006240e:	test   cl,cl
   140062410:	je     0x140062441
   140062412:	mov    rax,QWORD PTR [rbx+0x8]
   140062416:	add    rbx,0x8
   14006241a:	test   rax,rax
   14006241d:	jne    0x1400623f0
   14006241f:	mov    r8,QWORD PTR [rip+0x2a232]        # 0x14008c658
   140062426:	sub    rbx,r8
   140062429:	sar    rbx,0x3
   14006242d:	neg    ebx
   14006242f:	mov    eax,ebx
   140062431:	mov    rbx,QWORD PTR [rsp+0x30]
   140062436:	mov    rsi,QWORD PTR [rsp+0x38]
   14006243b:	add    rsp,0x20
   14006243f:	pop    rdi
   140062440:	ret    
   140062441:	sub    rbx,QWORD PTR [rip+0x2a210]        # 0x14008c658
   140062448:	mov    rsi,QWORD PTR [rsp+0x38]
   14006244d:	sar    rbx,0x3
   140062451:	mov    eax,ebx
   140062453:	mov    rbx,QWORD PTR [rsp+0x30]
   140062458:	add    rsp,0x20
   14006245c:	pop    rdi
   14006245d:	ret    
   14006245e:	int3   
   14006245f:	int3   
   140062460:	rex push rbx
   140062462:	sub    rsp,0x20
   140062466:	xor    edx,edx
   140062468:	test   rcx,rcx
   14006246b:	mov    rbx,rcx
   14006246e:	mov    rax,rcx
   140062471:	jne    0x140062479
   140062473:	add    rsp,0x20
   140062477:	pop    rbx
   140062478:	ret    
   140062479:	cmp    QWORD PTR [rcx],rdx
   14006247c:	mov    QWORD PTR [rsp+0x30],rsi
   140062481:	mov    QWORD PTR [rsp+0x38],rdi
   140062486:	je     0x14006249d
   140062488:	data16 data16 xchg ax,ax
   14006248c:	data16 data16 xchg ax,ax
   140062490:	add    rax,0x8
   140062494:	add    edx,0x1
   140062497:	cmp    QWORD PTR [rax],0x0
   14006249b:	jne    0x140062490
   14006249d:	lea    eax,[rdx+0x1]
   1400624a0:	mov    edx,0x8
   1400624a5:	movsxd rcx,eax
   1400624a8:	call   0x14004de90
   1400624ad:	test   rax,rax
   1400624b0:	mov    rdi,rax
   1400624b3:	mov    rsi,rax
   1400624b6:	jne    0x1400624c0
   1400624b8:	lea    ecx,[rax+0x9]
   1400624bb:	call   0x140048190
   1400624c0:	mov    rcx,QWORD PTR [rbx]
   1400624c3:	test   rcx,rcx
   1400624c6:	je     0x1400624e1
   1400624c8:	call   0x140062a90
   1400624cd:	add    rbx,0x8
   1400624d1:	add    rdi,0x8
   1400624d5:	mov    QWORD PTR [rdi-0x8],rax
   1400624d9:	mov    rcx,QWORD PTR [rbx]
   1400624dc:	test   rcx,rcx
   1400624df:	jne    0x1400624c8
   1400624e1:	mov    QWORD PTR [rdi],0x0
   1400624e8:	mov    rdi,QWORD PTR [rsp+0x38]
   1400624ed:	mov    rax,rsi
   1400624f0:	mov    rsi,QWORD PTR [rsp+0x30]
   1400624f5:	add    rsp,0x20
   1400624f9:	pop    rbx
   1400624fa:	ret    
   1400624fb:	int3   
   1400624fc:	int3   
   1400624fd:	int3   
   1400624fe:	int3   
   1400624ff:	int3   
   140062500:	rex push rbx
   140062502:	push   r12
   140062504:	push   r15
   140062506:	sub    rsp,0x40
   14006250a:	xor    ebx,ebx
   14006250c:	test   rcx,rcx
   14006250f:	mov    r15d,edx
   140062512:	mov    DWORD PTR [rsp+0x60],ebx
   140062516:	mov    r12,rcx
   140062519:	jne    0x140062547
   14006251b:	call   0x140048680
   140062520:	xor    r9d,r9d
   140062523:	xor    r8d,r8d
   140062526:	xor    edx,edx
   140062528:	xor    ecx,ecx
   14006252a:	mov    QWORD PTR [rsp+0x20],rbx
   14006252f:	mov    DWORD PTR [rax],0x16
   140062535:	call   0x14004e100
   14006253a:	or     eax,0xffffffff
   14006253d:	add    rsp,0x40
   140062541:	pop    r15
   140062543:	pop    r12
   140062545:	pop    rbx
   140062546:	ret    
   140062547:	mov    QWORD PTR [rsp+0x68],rbp
   14006254c:	mov    rbp,QWORD PTR [rcx]
   14006254f:	mov    QWORD PTR [rsp+0x30],r14
   140062554:	test   rbp,rbp
   140062557:	je     0x140062834
   14006255d:	mov    edx,0x3d
   140062562:	mov    rcx,rbp
   140062565:	call   0x140062cc0
   14006256a:	test   rax,rax
   14006256d:	mov    r14,rax
   140062570:	je     0x140062834
   140062576:	cmp    rbp,rax
   140062579:	je     0x140062834
   14006257f:	cmp    BYTE PTR [rax+0x1],bl
   140062582:	mov    QWORD PTR [rsp+0x78],rdi
   140062587:	mov    rdi,QWORD PTR [rip+0x2a0ca]        # 0x14008c658
   14006258e:	mov    QWORD PTR [rsp+0x38],r13
   140062593:	mov    r13d,ebx
   140062596:	sete   r13b
   14006259a:	cmp    rdi,QWORD PTR [rip+0x2a0bf]        # 0x14008c660
   1400625a1:	jne    0x1400625b5
   1400625a3:	mov    rcx,rdi
   1400625a6:	call   0x140062460
   1400625ab:	mov    rdi,rax
   1400625ae:	mov    QWORD PTR [rip+0x2a0a3],rax        # 0x14008c658
   1400625b5:	test   rdi,rdi
   1400625b8:	jne    0x14006263f
   1400625be:	test   r15d,r15d
   1400625c1:	je     0x1400625e8
   1400625c3:	cmp    QWORD PTR [rip+0x2a09e],rbx        # 0x14008c668
   1400625ca:	je     0x1400625e8
   1400625cc:	call   0x14005f1f0
   1400625d1:	test   eax,eax
   1400625d3:	je     0x140062638
   1400625d5:	call   0x140048680
   1400625da:	mov    DWORD PTR [rax],0x16
   1400625e0:	or     eax,0xffffffff
   1400625e3:	jmp    0x140062801
   1400625e8:	test   r13d,r13d
   1400625eb:	je     0x1400625f4
   1400625ed:	xor    eax,eax
   1400625ef:	jmp    0x140062801
   1400625f4:	mov    ecx,0x8
   1400625f9:	call   0x14004de20
   1400625fe:	test   rax,rax
   140062601:	mov    QWORD PTR [rip+0x2a050],rax        # 0x14008c658
   140062608:	je     0x1400625e0
   14006260a:	mov    QWORD PTR [rax],rbx
   14006260d:	cmp    QWORD PTR [rip+0x2a054],rbx        # 0x14008c668
   140062614:	jne    0x140062638
   140062616:	mov    ecx,0x8
   14006261b:	call   0x14004de20
   140062620:	test   rax,rax
   140062623:	mov    QWORD PTR [rip+0x2a03e],rax        # 0x14008c668
   14006262a:	je     0x1400625e0
   14006262c:	mov    QWORD PTR [rax],rbx
   14006262f:	mov    rdi,QWORD PTR [rip+0x2a022]        # 0x14008c658
   140062636:	jmp    0x14006263f
   140062638:	mov    rdi,QWORD PTR [rip+0x2a019]        # 0x14008c658
   14006263f:	test   rdi,rdi
   140062642:	je     0x1400625e0
   140062644:	mov    edx,r14d
   140062647:	mov    rcx,rbp
   14006264a:	mov    QWORD PTR [rsp+0x70],rsi
   14006264f:	sub    edx,ebp
   140062651:	call   0x1400623c0
   140062656:	test   eax,eax
   140062658:	movsxd rsi,eax
   14006265b:	js     0x1400626dc
   14006265d:	cmp    QWORD PTR [rdi],rbx
   140062660:	je     0x1400626dc
   140062662:	mov    rcx,QWORD PTR [rdi+rsi*8]
   140062666:	mov    rbx,rsi
   140062669:	call   0x1400485c0
   14006266e:	test   r13d,r13d
   140062671:	je     0x1400626d0
   140062673:	cmp    QWORD PTR [rdi+rsi*8],0x0
   140062678:	je     0x140062698
   14006267a:	data16 xchg ax,ax
   14006267d:	data16 xchg ax,ax
   140062680:	mov    rax,QWORD PTR [rdi+rbx*8+0x8]
   140062685:	add    rbx,0x1
   140062689:	add    esi,0x1
   14006268c:	mov    QWORD PTR [rdi+rbx*8-0x8],rax
   140062691:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140062696:	jne    0x140062680
   140062698:	movsxd rdx,esi
   14006269b:	movabs rax,0x1fffffffffffffff
   1400626a5:	cmp    rdx,rax
   1400626a8:	jae    0x140062745
   1400626ae:	mov    rcx,QWORD PTR [rip+0x29fa3]        # 0x14008c658
   1400626b5:	mov    r8d,0x8
   1400626bb:	call   0x14004dfb0
   1400626c0:	test   rax,rax
   1400626c3:	je     0x140062741
   1400626c5:	mov    QWORD PTR [rip+0x29f8c],rax        # 0x14008c658
   1400626cc:	xor    esi,esi
   1400626ce:	jmp    0x140062747
   1400626d0:	mov    QWORD PTR [rdi+rsi*8],rbp
   1400626d4:	xor    esi,esi
   1400626d6:	mov    QWORD PTR [r12],rsi
   1400626da:	jmp    0x140062747
   1400626dc:	test   r13d,r13d
   1400626df:	jne    0x140062824
   1400626e5:	test   eax,eax
   1400626e7:	jns    0x1400626eb
   1400626e9:	neg    esi
   1400626eb:	lea    eax,[rsi+0x2]
   1400626ee:	cmp    eax,esi
   1400626f0:	jl     0x14006281f
   1400626f6:	movsxd r8,eax
   1400626f9:	movabs rax,0x1fffffffffffffff
   140062703:	cmp    r8,rax
   140062706:	jae    0x14006281f
   14006270c:	mov    rcx,QWORD PTR [rip+0x29f45]        # 0x14008c658
   140062713:	mov    edx,0x8
   140062718:	call   0x14004dfb0
   14006271d:	test   rax,rax
   140062720:	je     0x14006281f
   140062726:	movsxd rcx,esi
   140062729:	xor    esi,esi
   14006272b:	mov    QWORD PTR [rax+rcx*8],rbp
   14006272f:	mov    QWORD PTR [rax+rcx*8+0x8],rbx
   140062734:	mov    QWORD PTR [r12],rbx
   140062738:	mov    QWORD PTR [rip+0x29f19],rax        # 0x14008c658
   14006273f:	jmp    0x140062747
   140062741:	xor    esi,esi
   140062743:	jmp    0x140062747
   140062745:	xor    esi,esi
   140062747:	test   r15d,r15d
   14006274a:	je     0x1400627e7
   140062750:	or     rcx,0xffffffffffffffff
   140062754:	xor    eax,eax
   140062756:	mov    rdi,rbp
   140062759:	repnz scas al,BYTE PTR es:[rdi]
   14006275b:	lea    edx,[rax+0x1]
   14006275e:	not    rcx
   140062761:	add    rcx,0x1
   140062765:	call   0x14004de90
   14006276a:	test   rax,rax
   14006276d:	mov    rbx,rax
   140062770:	je     0x1400627e7
   140062772:	or     rcx,0xffffffffffffffff
   140062776:	xor    eax,eax
   140062778:	mov    rdi,rbp
   14006277b:	repnz scas al,BYTE PTR es:[rdi]
   14006277d:	mov    r8,rbp
   140062780:	not    rcx
   140062783:	lea    rdx,[rcx+0x1]
   140062787:	mov    rcx,rbx
   14006278a:	call   0x1400579a0
   14006278f:	test   eax,eax
   140062791:	je     0x1400627a7
   140062793:	xor    r9d,r9d
   140062796:	xor    r8d,r8d
   140062799:	xor    edx,edx
   14006279b:	xor    ecx,ecx
   14006279d:	mov    QWORD PTR [rsp+0x20],rsi
   1400627a2:	call   0x14004e060
   1400627a7:	mov    rdx,rbx
   1400627aa:	mov    rcx,rbx
   1400627ad:	sub    rdx,rbp
   1400627b0:	add    rdx,r14
   1400627b3:	add    rdx,0x1
   1400627b7:	test   r13d,r13d
   1400627ba:	mov    BYTE PTR [rdx-0x1],0x0
   1400627be:	cmovne rdx,rsi
   1400627c2:	call   QWORD PTR [rip+0x1c20]        # 0x1400643e8
   1400627c8:	test   eax,eax
   1400627ca:	jne    0x1400627df
   1400627cc:	mov    DWORD PTR [rsp+0x60],0xffffffff
   1400627d4:	call   0x140048680
   1400627d9:	mov    DWORD PTR [rax],0x2a
   1400627df:	mov    rcx,rbx
   1400627e2:	call   0x1400485c0
   1400627e7:	test   r13d,r13d
   1400627ea:	je     0x1400627f8
   1400627ec:	mov    rcx,rbp
   1400627ef:	call   0x1400485c0
   1400627f4:	mov    QWORD PTR [r12],rsi
   1400627f8:	mov    eax,DWORD PTR [rsp+0x60]
   1400627fc:	mov    rsi,QWORD PTR [rsp+0x70]
   140062801:	mov    rdi,QWORD PTR [rsp+0x78]
   140062806:	mov    r13,QWORD PTR [rsp+0x38]
   14006280b:	mov    rbp,QWORD PTR [rsp+0x68]
   140062810:	mov    r14,QWORD PTR [rsp+0x30]
   140062815:	add    rsp,0x40
   140062819:	pop    r15
   14006281b:	pop    r12
   14006281d:	pop    rbx
   14006281e:	ret    
   14006281f:	or     eax,0xffffffff
   140062822:	jmp    0x1400627fc
   140062824:	mov    rcx,rbp
   140062827:	call   0x1400485c0
   14006282c:	mov    QWORD PTR [r12],rbx
   140062830:	xor    eax,eax
   140062832:	jmp    0x1400627fc
   140062834:	call   0x140048680
   140062839:	mov    DWORD PTR [rax],0x16
   14006283f:	or     eax,0xffffffff
   140062842:	jmp    0x14006280b
   140062844:	int3   
   140062845:	int3   
   140062846:	int3   
   140062847:	int3   
   140062848:	int3   
   140062849:	int3   
   14006284a:	int3   
   14006284b:	int3   
   14006284c:	int3   
   14006284d:	int3   
   14006284e:	int3   
   14006284f:	int3   
   140062850:	mov    QWORD PTR [rsp+0x8],rbx
   140062855:	mov    QWORD PTR [rsp+0x10],rbp
   14006285a:	mov    QWORD PTR [rsp+0x20],rsi
   14006285f:	push   rdi
   140062860:	sub    rsp,0x20
   140062864:	mov    rax,QWORD PTR [rip+0x24505]        # 0x140086d70
   14006286b:	xor    rax,rsp
   14006286e:	mov    QWORD PTR [rsp+0x10],rax
   140062873:	test   edx,edx
   140062875:	mov    rbx,r8
   140062878:	mov    esi,edx
   14006287a:	mov    rbp,rcx
   14006287d:	mov    di,0x404e
   140062881:	mov    DWORD PTR [r8],0x0
   140062888:	mov    DWORD PTR [r8+0x4],0x0
   140062890:	mov    DWORD PTR [r8+0x8],0x0
   140062898:	je     0x1400629ea
   14006289e:	xchg   ax,ax
   1400628a0:	mov    rax,QWORD PTR [rbx]
   1400628a3:	mov    r11d,DWORD PTR [rbx+0x8]
   1400628a7:	lea    rcx,[rsp]
   1400628ab:	mov    QWORD PTR [rcx],rax
   1400628ae:	mov    eax,DWORD PTR [rbx+0x8]
   1400628b1:	add    r11d,r11d
   1400628b4:	mov    DWORD PTR [rcx+0x8],eax
   1400628b7:	mov    ecx,DWORD PTR [rbx]
   1400628b9:	mov    eax,DWORD PTR [rbx+0x4]
   1400628bc:	lea    r9d,[rcx+rcx*1]
   1400628c0:	mov    edx,ecx
   1400628c2:	lea    r10d,[rax+rax*1]
   1400628c6:	mov    r8d,eax
   1400628c9:	shr    edx,0x1f
   1400628cc:	mov    eax,r9d
   1400628cf:	or     r10d,edx
   1400628d2:	shr    r8d,0x1f
   1400628d6:	lea    edx,[r9+r9*1]
   1400628da:	or     r11d,r8d
   1400628dd:	mov    ecx,r10d
   1400628e0:	shr    eax,0x1f
   1400628e3:	shr    ecx,0x1f
   1400628e6:	add    r11d,r11d
   1400628e9:	add    r10d,r10d
   1400628ec:	or     r11d,ecx
   1400628ef:	mov    ecx,DWORD PTR [rsp]
   1400628f2:	or     r10d,eax
   1400628f5:	lea    r8d,[rdx+rcx*1]
   1400628f9:	xor    eax,eax
   1400628fb:	mov    DWORD PTR [rbx],edx
   1400628fd:	cmp    r8d,edx
   140062900:	mov    DWORD PTR [rbx+0x4],r10d
   140062904:	mov    DWORD PTR [rbx+0x8],r11d
   140062908:	jb     0x14006290f
   14006290a:	cmp    r8d,ecx
   14006290d:	jae    0x140062914
   14006290f:	mov    eax,0x1
   140062914:	test   eax,eax
   140062916:	mov    DWORD PTR [rbx],r8d
   140062919:	je     0x14006293e
   14006291b:	lea    eax,[r10+0x1]
   14006291f:	xor    ecx,ecx
   140062921:	cmp    eax,r10d
   140062924:	jb     0x14006292b
   140062926:	cmp    eax,0x1
   140062929:	jae    0x140062930
   14006292b:	mov    ecx,0x1
   140062930:	test   ecx,ecx
   140062932:	mov    DWORD PTR [rbx+0x4],eax
   140062935:	je     0x14006293e
   140062937:	lea    eax,[r11+0x1]
   14006293b:	mov    DWORD PTR [rbx+0x8],eax
   14006293e:	mov    eax,DWORD PTR [rbx+0x4]
   140062941:	mov    rcx,QWORD PTR [rsp]
   140062945:	xor    edx,edx
   140062947:	shr    rcx,0x20
   14006294b:	lea    r9d,[rax+rcx*1]
   14006294f:	cmp    r9d,eax
   140062952:	jb     0x140062959
   140062954:	cmp    r9d,ecx
   140062957:	jae    0x14006295e
   140062959:	mov    edx,0x1
   14006295e:	test   edx,edx
   140062960:	mov    DWORD PTR [rbx+0x4],r9d
   140062964:	je     0x14006296a
   140062966:	add    DWORD PTR [rbx+0x8],0x1
   14006296a:	mov    eax,DWORD PTR [rsp+0x8]
   14006296e:	mov    ecx,r9d
   140062971:	add    r9d,r9d
   140062974:	add    DWORD PTR [rbx+0x8],eax
   140062977:	mov    edx,DWORD PTR [rbx+0x8]
   14006297a:	shr    ecx,0x1f
   14006297d:	mov    eax,r8d
   140062980:	add    r8d,r8d
   140062983:	add    edx,edx
   140062985:	shr    eax,0x1f
   140062988:	or     edx,ecx
   14006298a:	mov    DWORD PTR [rbx],r8d
   14006298d:	or     r9d,eax
   140062990:	mov    DWORD PTR [rbx+0x8],edx
   140062993:	xor    r10d,r10d
   140062996:	mov    DWORD PTR [rbx+0x4],r9d
   14006299a:	movsx  ecx,BYTE PTR [rbp+0x0]
   14006299e:	lea    eax,[r8+rcx*1]
   1400629a2:	mov    DWORD PTR [rsp],ecx
   1400629a5:	cmp    eax,r8d
   1400629a8:	jb     0x1400629ae
   1400629aa:	cmp    eax,ecx
   1400629ac:	jae    0x1400629b4
   1400629ae:	mov    r10d,0x1
   1400629b4:	test   r10d,r10d
   1400629b7:	mov    DWORD PTR [rbx],eax
   1400629b9:	je     0x1400629dd
   1400629bb:	lea    eax,[r9+0x1]
   1400629bf:	xor    ecx,ecx
   1400629c1:	cmp    eax,r9d
   1400629c4:	jb     0x1400629cb
   1400629c6:	cmp    eax,0x1
   1400629c9:	jae    0x1400629d0
   1400629cb:	mov    ecx,0x1
   1400629d0:	test   ecx,ecx
   1400629d2:	mov    DWORD PTR [rbx+0x4],eax
   1400629d5:	je     0x1400629dd
   1400629d7:	lea    eax,[rdx+0x1]
   1400629da:	mov    DWORD PTR [rbx+0x8],eax
   1400629dd:	add    rbp,0x1
   1400629e1:	add    esi,0xffffffff
   1400629e4:	jne    0x1400628a0
   1400629ea:	cmp    DWORD PTR [rbx+0x8],0x0
   1400629ee:	jne    0x140062a1c
   1400629f0:	mov    ecx,DWORD PTR [rbx]
   1400629f2:	mov    edx,DWORD PTR [rbx+0x4]
   1400629f5:	add    di,0xfff0
   1400629fa:	mov    r8d,edx
   1400629fd:	mov    eax,ecx
   1400629ff:	shl    edx,0x10
   140062a02:	shr    eax,0x10
   140062a05:	shr    r8d,0x10
   140062a09:	shl    ecx,0x10
   140062a0c:	or     edx,eax
   140062a0e:	test   r8d,r8d
   140062a11:	mov    DWORD PTR [rbx+0x8],r8d
   140062a15:	mov    DWORD PTR [rbx+0x4],edx
   140062a18:	mov    DWORD PTR [rbx],ecx
   140062a1a:	je     0x1400629f0
   140062a1c:	bt     DWORD PTR [rbx+0x8],0xf
   140062a21:	jb     0x140062a63
   140062a23:	nop
   140062a24:	data16 data16 xchg ax,ax
   140062a28:	data16 data16 xchg ax,ax
   140062a2c:	data16 data16 xchg ax,ax
   140062a30:	mov    eax,DWORD PTR [rbx]
   140062a32:	mov    ecx,DWORD PTR [rbx+0x4]
   140062a35:	add    di,0xffff
   140062a3a:	mov    edx,eax
   140062a3c:	add    eax,eax
   140062a3e:	mov    r8d,ecx
   140062a41:	mov    DWORD PTR [rbx],eax
   140062a43:	shr    edx,0x1f
   140062a46:	shr    r8d,0x1f
   140062a4a:	lea    eax,[rcx+rcx*1]
   140062a4d:	or     eax,edx
   140062a4f:	mov    DWORD PTR [rbx+0x4],eax
   140062a52:	mov    eax,DWORD PTR [rbx+0x8]
   140062a55:	add    eax,eax
   140062a57:	or     eax,r8d
   140062a5a:	bt     eax,0xf
   140062a5e:	mov    DWORD PTR [rbx+0x8],eax
   140062a61:	jae    0x140062a30
   140062a63:	mov    WORD PTR [rbx+0xa],di
   140062a67:	mov    rcx,QWORD PTR [rsp+0x10]
   140062a6c:	xor    rcx,rsp
   140062a6f:	call   0x140046470
   140062a74:	mov    rbx,QWORD PTR [rsp+0x30]
   140062a79:	mov    rbp,QWORD PTR [rsp+0x38]
   140062a7e:	mov    rsi,QWORD PTR [rsp+0x48]
   140062a83:	add    rsp,0x20
   140062a87:	pop    rdi
   140062a88:	ret    
   140062a89:	int3   
   140062a8a:	int3   
   140062a8b:	int3   
   140062a8c:	int3   
   140062a8d:	int3   
   140062a8e:	int3   
   140062a8f:	int3   
   140062a90:	rex push rbx
   140062a92:	sub    rsp,0x30
   140062a96:	test   rcx,rcx
   140062a99:	mov    rbx,rcx
   140062a9c:	jne    0x140062aa6
   140062a9e:	xor    eax,eax
   140062aa0:	add    rsp,0x30
   140062aa4:	pop    rbx
   140062aa5:	ret    
   140062aa6:	or     rcx,0xffffffffffffffff
   140062aaa:	mov    QWORD PTR [rsp+0x40],rsi
   140062aaf:	mov    QWORD PTR [rsp+0x48],rdi
   140062ab4:	xor    eax,eax
   140062ab6:	mov    rdi,rbx
   140062ab9:	repnz scas al,BYTE PTR es:[rdi]
   140062abb:	not    rcx
   140062abe:	lea    rsi,[rcx-0x1]
   140062ac2:	call   0x1400480c0
   140062ac7:	test   rax,rax
   140062aca:	mov    rdi,rax
   140062acd:	je     0x140062b0d
   140062acf:	lea    rdx,[rsi+0x1]
   140062ad3:	mov    r8,rbx
   140062ad6:	mov    rcx,rax
   140062ad9:	call   0x1400579a0
   140062ade:	test   eax,eax
   140062ae0:	je     0x140062afa
   140062ae2:	xor    r9d,r9d
   140062ae5:	xor    r8d,r8d
   140062ae8:	xor    edx,edx
   140062aea:	xor    ecx,ecx
   140062aec:	mov    QWORD PTR [rsp+0x20],0x0
   140062af5:	call   0x14004e060
   140062afa:	mov    rsi,QWORD PTR [rsp+0x40]
   140062aff:	mov    rax,rdi
   140062b02:	mov    rdi,QWORD PTR [rsp+0x48]
   140062b07:	add    rsp,0x30
   140062b0b:	pop    rbx
   140062b0c:	ret    
   140062b0d:	mov    rsi,QWORD PTR [rsp+0x40]
   140062b12:	mov    rdi,QWORD PTR [rsp+0x48]
   140062b17:	xor    eax,eax
   140062b19:	add    rsp,0x30
   140062b1d:	pop    rbx
   140062b1e:	ret    
   140062b1f:	int3   
   140062b20:	mov    QWORD PTR [rsp+0x8],rbx
   140062b25:	mov    QWORD PTR [rsp+0x10],rbp
   140062b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140062b2f:	mov    QWORD PTR [rsp+0x20],rdi
   140062b34:	push   r12
   140062b36:	sub    rsp,0x50
   140062b3a:	xor    sil,sil
   140062b3d:	test   r8,r8
   140062b40:	mov    r12d,edx
   140062b43:	mov    BYTE PTR [rsp+0x48],sil
   140062b48:	mov    rbx,rcx
   140062b4b:	jne    0x140062bb7
   140062b4d:	call   0x14004bd60
   140062b52:	mov    rdi,rax
   140062b55:	mov    r8,QWORD PTR [rax+0xc0]
   140062b5c:	mov    rbp,QWORD PTR [rax+0xb8]
   140062b63:	cmp    r8,QWORD PTR [rip+0x24d36]        # 0x1400878a0
   140062b6a:	je     0x140062b7f
   140062b6c:	mov    edx,DWORD PTR [rax+0xc8]
   140062b72:	test   DWORD PTR [rip+0x24bb0],edx        # 0x140087728
   140062b78:	jne    0x140062b7f
   140062b7a:	call   0x14004f030
   140062b7f:	cmp    rbp,QWORD PTR [rip+0x24a9a]        # 0x140087620
   140062b86:	je     0x140062b9e
   140062b88:	mov    eax,DWORD PTR [rdi+0xc8]
   140062b8e:	test   DWORD PTR [rip+0x24b94],eax        # 0x140087728
   140062b94:	jne    0x140062b9e
   140062b96:	call   0x14004e4e0
   140062b9b:	mov    rbp,rax
   140062b9e:	mov    ecx,DWORD PTR [rdi+0xc8]
   140062ba4:	test   cl,0x2
   140062ba7:	jne    0x140062bd9
   140062ba9:	or     ecx,0x2
   140062bac:	mov    sil,0x1
   140062baf:	mov    DWORD PTR [rdi+0xc8],ecx
   140062bb5:	jmp    0x140062bd9
   140062bb7:	mov    rax,QWORD PTR [r8]
   140062bba:	lea    rcx,[rsp+0x30]
   140062bbf:	mov    QWORD PTR [rcx],rax
   140062bc2:	mov    rax,QWORD PTR [r8+0x8]
   140062bc6:	mov    QWORD PTR [rcx+0x8],rax
   140062bca:	movzx  esi,BYTE PTR [rsp+0x48]
   140062bcf:	mov    rdi,QWORD PTR [rsp+0x40]
   140062bd4:	mov    rbp,QWORD PTR [rsp+0x38]
   140062bd9:	test   rbx,rbx
   140062bdc:	jne    0x140062c26
   140062bde:	call   0x140048680
   140062be3:	xor    r9d,r9d
   140062be6:	xor    r8d,r8d
   140062be9:	xor    edx,edx
   140062beb:	xor    ecx,ecx
   140062bed:	mov    QWORD PTR [rsp+0x20],rbx
   140062bf2:	mov    DWORD PTR [rax],0x16
   140062bf8:	call   0x14004e100
   140062bfd:	test   sil,sil
   140062c00:	je     0x140062c09
   140062c02:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   140062c09:	xor    eax,eax
   140062c0b:	mov    rbx,QWORD PTR [rsp+0x60]
   140062c10:	mov    rbp,QWORD PTR [rsp+0x68]
   140062c15:	mov    rsi,QWORD PTR [rsp+0x70]
   140062c1a:	mov    rdi,QWORD PTR [rsp+0x78]
   140062c1f:	add    rsp,0x50
   140062c23:	pop    r12
   140062c25:	ret    
   140062c26:	cmp    DWORD PTR [rbp+0x8],0x0
   140062c2a:	jne    0x140062c45
   140062c2c:	mov    edx,r12d
   140062c2f:	mov    rcx,rbx
   140062c32:	call   0x140062cd0
   140062c37:	test   sil,sil
   140062c3a:	je     0x140062c0b
   140062c3c:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   140062c43:	jmp    0x140062c0b
   140062c45:	movzx  ecx,BYTE PTR [rbx]
   140062c48:	test   cx,cx
   140062c4b:	je     0x140062c91
   140062c4d:	data16 xchg ax,ax
   140062c50:	movzx  eax,cl
   140062c53:	test   BYTE PTR [rax+rbp*1+0x1d],0x4
   140062c58:	je     0x140062c7c
   140062c5a:	movzx  eax,BYTE PTR [rbx+0x1]
   140062c5e:	add    rbx,0x1
   140062c62:	test   al,al
   140062c64:	je     0x140062bfd
   140062c66:	movzx  ecx,cx
   140062c69:	movzx  eax,al
   140062c6c:	shl    ecx,0x8
   140062c6f:	or     ecx,eax
   140062c71:	cmp    r12d,ecx
   140062c74:	jne    0x140062c84
   140062c76:	lea    rax,[rbx-0x1]
   140062c7a:	jmp    0x140062c37
   140062c7c:	movzx  eax,cx
   140062c7f:	cmp    r12d,eax
   140062c82:	je     0x140062c91
   140062c84:	movzx  ecx,BYTE PTR [rbx+0x1]
   140062c88:	add    rbx,0x1
   140062c8c:	test   cx,cx
   140062c8f:	jne    0x140062c50
   140062c91:	movzx  eax,cx
   140062c94:	cmp    r12d,eax
   140062c97:	jne    0x140062bfd
   140062c9d:	test   sil,sil
   140062ca0:	je     0x140062ca9
   140062ca2:	and    DWORD PTR [rdi+0xc8],0xfffffffd
   140062ca9:	mov    rax,rbx
   140062cac:	jmp    0x140062c0b
   140062cb1:	int3   
   140062cb2:	int3   
   140062cb3:	int3   
   140062cb4:	int3   
   140062cb5:	int3   
   140062cb6:	int3   
   140062cb7:	int3   
   140062cb8:	int3   
   140062cb9:	int3   
   140062cba:	int3   
   140062cbb:	int3   
   140062cbc:	int3   
   140062cbd:	int3   
   140062cbe:	int3   
   140062cbf:	int3   
   140062cc0:	xor    r8d,r8d
   140062cc3:	jmp    0x140062b20
   140062cc8:	int3   
   140062cc9:	int3   
   140062cca:	int3   
   140062ccb:	int3   
   140062ccc:	int3   
   140062ccd:	int3   
   140062cce:	int3   
   140062ccf:	int3   
   140062cd0:	movzx  eax,BYTE PTR [rcx]
   140062cd3:	test   al,al
   140062cd5:	je     0x140062ce6
   140062cd7:	cmp    al,dl
   140062cd9:	je     0x140062cea
   140062cdb:	mov    al,BYTE PTR [rcx+0x1]
   140062cde:	add    rcx,0x1
   140062ce2:	test   al,al
   140062ce4:	jne    0x140062cd7
   140062ce6:	cmp    BYTE PTR [rcx],dl
   140062ce8:	jne    0x140062cee
   140062cea:	mov    rax,rcx
   140062ced:	ret    
   140062cee:	xor    eax,eax
   140062cf0:	ret    
   140062cf1:	int3   
   140062cf2:	jmp    QWORD PTR [rip+0x1540]        # 0x140064238
   140062cf8:	jmp    QWORD PTR [rip+0x1542]        # 0x140064240
   140062cfe:	jmp    QWORD PTR [rip+0x1554]        # 0x140064258
   140062d04:	jmp    QWORD PTR [rip+0x1636]        # 0x140064340
   140062d0a:	jmp    QWORD PTR [rip+0x1ea8]        # 0x140064bb8
   140062d10:	jmp    QWORD PTR [rip+0x1eaa]        # 0x140064bc0
   140062d16:	jmp    QWORD PTR [rip+0x1eac]        # 0x140064bc8
   140062d1c:	jmp    QWORD PTR [rip+0x1f56]        # 0x140064c78
   140062d22:	int3   
   140062d23:	int3   
   140062d24:	rex push rbx
   140062d26:	sub    rsp,0x30
   140062d2a:	mov    rax,QWORD PTR [rip+0x2403f]        # 0x140086d70
   140062d31:	xor    rax,rsp
   140062d34:	mov    QWORD PTR [rsp+0x28],rax
   140062d39:	xor    ebx,ebx
   140062d3b:	call   QWORD PTR [rip+0x1457]        # 0x140064198
   140062d41:	lea    r9d,[rbx+0x7]
   140062d45:	lea    r8,[rsp+0x20]
   140062d4a:	mov    edx,0x1004
   140062d4f:	mov    ecx,eax
   140062d51:	call   QWORD PTR [rip+0x1641]        # 0x140064398
   140062d57:	test   eax,eax
   140062d59:	je     0x140062d80
   140062d5b:	mov    al,BYTE PTR [rsp+0x20]
   140062d5f:	lea    rdx,[rsp+0x20]
   140062d64:	test   al,al
   140062d66:	je     0x140062d80
   140062d68:	movsx  eax,al
   140062d6b:	add    rdx,0x1
   140062d6f:	lea    ecx,[rbx+rbx*4]
   140062d72:	lea    ebx,[rax+rcx*2-0x30]
   140062d76:	mov    al,BYTE PTR [rdx]
   140062d78:	test   al,al
   140062d7a:	jne    0x140062d68
   140062d7c:	test   ebx,ebx
   140062d7e:	jne    0x140062d88
   140062d80:	call   QWORD PTR [rip+0x15d2]        # 0x140064358
   140062d86:	mov    ebx,eax
   140062d88:	mov    eax,ebx
   140062d8a:	mov    rcx,QWORD PTR [rsp+0x28]
   140062d8f:	xor    rcx,rsp
   140062d92:	call   0x140046470
   140062d97:	add    rsp,0x30
   140062d9b:	pop    rbx
   140062d9c:	ret    
   140062d9d:	int3   
   140062d9e:	int3   
   140062d9f:	int3   
   140062da0:	mov    eax,0x3
   140062da5:	ret    
   140062da6:	int3   
   140062da7:	int3   
   140062da8:	sub    rsp,0xd8
   140062daf:	mov    rax,QWORD PTR [rip+0x23fba]        # 0x140086d70
   140062db6:	xor    rax,rsp
   140062db9:	mov    QWORD PTR [rsp+0xc0],rax
   140062dc1:	lea    rcx,[rsp+0x20]
   140062dc6:	mov    DWORD PTR [rsp+0x20],0x94
   140062dce:	call   QWORD PTR [rip+0x169c]        # 0x140064470
   140062dd4:	cmp    DWORD PTR [rsp+0x30],0x2
   140062dd9:	jne    0x140062de9
   140062ddb:	cmp    DWORD PTR [rsp+0x24],0x5
   140062de0:	lea    rax,[rip+0xffffffffffffffb9]        # 0x140062da0
   140062de7:	jae    0x140062df0
   140062de9:	lea    rax,[rip+0xffffffffffffff34]        # 0x140062d24
   140062df0:	xchg   QWORD PTR [rip+0x25889],rax        # 0x140088680
   140062df7:	call   QWORD PTR [rip+0x25883]        # 0x140088680
   140062dfd:	mov    rcx,QWORD PTR [rsp+0xc0]
   140062e05:	xor    rcx,rsp
   140062e08:	call   0x140046470
   140062e0d:	add    rsp,0xd8
   140062e14:	ret    
   140062e15:	int3   
   140062e16:	int3   
   140062e17:	int3   
   140062e18:	sub    rsp,0x38
   140062e1c:	call   QWORD PTR [rip+0x15ee]        # 0x140064410
   140062e22:	xor    r11d,r11d
   140062e25:	mov    DWORD PTR [rsp+0x20],r11d
   140062e2a:	jmp    0x140062e37
   140062e2c:	mov    r11d,0x8007000e
   140062e32:	mov    DWORD PTR [rsp+0x20],r11d
   140062e37:	mov    eax,r11d
   140062e3a:	add    rsp,0x38
   140062e3e:	ret    
   140062e3f:	int3   
   140062e40:	int3   
   140062e41:	int3   
   140062e42:	int3   
   140062e43:	int3   
   140062e44:	int3   
   140062e45:	int3   
   140062e46:	int3   
   140062e47:	int3   
   140062e48:	rex push rbp
   140062e4a:	sub    rsp,0x20
   140062e4e:	mov    rbp,rdx
   140062e51:	mov    rax,QWORD PTR [rcx]
   140062e54:	xor    r11d,r11d
   140062e57:	cmp    DWORD PTR [rax],0xc0000017
   140062e5d:	sete   r11b
   140062e61:	mov    eax,r11d
   140062e64:	add    rsp,0x20
   140062e68:	pop    rbp
   140062e69:	ret    
   140062e6a:	int3   
   140062e6b:	int3   
   140062e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140062e71:	mov    QWORD PTR [rsp+0x10],rbp
   140062e76:	mov    QWORD PTR [rsp+0x18],rsi
   140062e7b:	push   rdi
   140062e7c:	sub    rsp,0x20
   140062e80:	test   rcx,rcx
   140062e83:	mov    rbp,rdx
   140062e86:	mov    rbx,rcx
   140062e89:	jne    0x140062e92
   140062e8b:	mov    eax,0x80070057
   140062e90:	jmp    0x140062ef6
   140062e92:	cmp    DWORD PTR [rcx],0x0
   140062e95:	je     0x140062ef4
   140062e97:	cmp    DWORD PTR [rcx],0x48
   140062e9a:	jne    0x140062e8b
   140062e9c:	xor    edi,edi
   140062e9e:	cmp    DWORD PTR [rcx+0x40],edi
   140062ea1:	jle    0x140062ecc
   140062ea3:	xor    esi,esi
   140062ea5:	test   rsi,rsi
   140062ea8:	js     0x140062f0b
   140062eaa:	cmp    edi,DWORD PTR [rbx+0x40]
   140062ead:	jge    0x140062f0b
   140062eaf:	mov    rax,QWORD PTR [rbx+0x38]
   140062eb3:	mov    rdx,rbp
   140062eb6:	movzx  ecx,WORD PTR [rax+rsi*1]
   140062eba:	call   QWORD PTR [rip+0x1cc8]        # 0x140064b88
   140062ec0:	add    edi,0x1
   140062ec3:	add    rsi,0x2
   140062ec7:	cmp    edi,DWORD PTR [rbx+0x40]
   140062eca:	jl     0x140062ea5
   140062ecc:	mov    rcx,QWORD PTR [rbx+0x38]
   140062ed0:	test   rcx,rcx
   140062ed3:	je     0x140062edf
   140062ed5:	call   0x1400485c0
   140062eda:	and    QWORD PTR [rbx+0x38],0x0
   140062edf:	and    DWORD PTR [rbx+0x40],0x0
   140062ee3:	and    DWORD PTR [rbx+0x44],0x0
   140062ee7:	lea    rcx,[rbx+0x8]
   140062eeb:	call   QWORD PTR [rip+0x1297]        # 0x140064188
   140062ef1:	and    DWORD PTR [rbx],0x0
   140062ef4:	xor    eax,eax
   140062ef6:	mov    rbx,QWORD PTR [rsp+0x30]
   140062efb:	mov    rbp,QWORD PTR [rsp+0x38]
   140062f00:	mov    rsi,QWORD PTR [rsp+0x40]
   140062f05:	add    rsp,0x20
   140062f09:	pop    rdi
   140062f0a:	ret    
   140062f0b:	xor    r9d,r9d
   140062f0e:	xor    r8d,r8d
   140062f11:	mov    ecx,0xc000008c
   140062f16:	lea    edx,[r9+0x1]
   140062f1a:	call   QWORD PTR [rip+0x1720]        # 0x140064640
   140062f20:	int3   
   140062f21:	int3   
   140062f22:	int3   
   140062f23:	int3   
   140062f24:	rex push rbx
   140062f26:	sub    rsp,0x20
   140062f2a:	mov    rbx,rcx
   140062f2d:	add    rcx,0x28
   140062f31:	call   QWORD PTR [rip+0x1251]        # 0x140064188
   140062f37:	mov    rcx,QWORD PTR [rbx+0x50]
   140062f3b:	test   rcx,rcx
   140062f3e:	je     0x140062f4a
   140062f40:	call   0x1400485c0
   140062f45:	and    QWORD PTR [rbx+0x50],0x0
   140062f4a:	and    DWORD PTR [rbx+0x58],0x0
   140062f4e:	and    DWORD PTR [rbx+0x5c],0x0
   140062f52:	add    rsp,0x20
   140062f56:	pop    rbx
   140062f57:	ret    
   140062f58:	mov    QWORD PTR [rsp+0x10],rbx
   140062f5d:	mov    QWORD PTR [rsp+0x18],rsi
   140062f62:	push   rdi
   140062f63:	sub    rsp,0xd0
   140062f6a:	mov    rax,QWORD PTR [rip+0x23dff]        # 0x140086d70
   140062f71:	xor    rax,rsp
   140062f74:	mov    QWORD PTR [rsp+0xc0],rax
   140062f7c:	xor    edx,edx
   140062f7e:	mov    rbx,rcx
   140062f81:	lea    r8d,[rdx+0x28]
   140062f85:	add    rcx,r8
   140062f88:	call   0x140047720
   140062f8d:	and    QWORD PTR [rbx+0x50],0x0
   140062f92:	and    DWORD PTR [rbx+0x58],0x0
   140062f96:	and    DWORD PTR [rbx+0x5c],0x0
   140062f9a:	lea    rax,[rip+0xfffffffffff9d05f]        # 0x140000000
   140062fa1:	mov    esi,0x94
   140062fa6:	lea    rcx,[rsp+0x20]
   140062fab:	mov    r8,rsi
   140062fae:	xor    edx,edx
   140062fb0:	mov    QWORD PTR [rbx+0x10],rax
   140062fb4:	mov    QWORD PTR [rbx+0x8],rax
   140062fb8:	mov    DWORD PTR [rbx],0x60
   140062fbe:	mov    BYTE PTR [rbx+0x18],0x0
   140062fc2:	call   0x140047720
   140062fc7:	lea    rcx,[rsp+0x20]
   140062fcc:	mov    DWORD PTR [rsp+0x20],esi
   140062fd0:	call   QWORD PTR [rip+0x149a]        # 0x140064470
   140062fd6:	cmp    DWORD PTR [rsp+0x30],0x2
   140062fdb:	mov    esi,0x1
   140062fe0:	jne    0x140062feb
   140062fe2:	cmp    DWORD PTR [rsp+0x24],0x5
   140062fe7:	jb     0x140063005
   140062fe9:	jmp    0x140063001
   140062feb:	cmp    DWORD PTR [rsp+0x30],esi
   140062fef:	jne    0x140063005
   140062ff1:	cmp    DWORD PTR [rsp+0x24],0x4
   140062ff6:	ja     0x140063001
   140062ff8:	jne    0x140063005
   140062ffa:	cmp    DWORD PTR [rsp+0x28],0x0
   140062fff:	jbe    0x140063005
   140063001:	mov    BYTE PTR [rbx+0x18],sil
   140063005:	lea    rax,[rip+0xdba4]        # 0x140070bb0
   14006300c:	lea    rcx,[rbx+0x28]
   140063010:	mov    DWORD PTR [rbx+0x1c],0x800
   140063017:	mov    QWORD PTR [rbx+0x20],rax
   14006301b:	call   0x140062e18
   140063020:	movzx  ecx,BYTE PTR [rip+0x25679]        # 0x1400886a0
   140063027:	test   eax,eax
   140063029:	mov    rax,rbx
   14006302c:	cmovs  ecx,esi
   14006302f:	mov    BYTE PTR [rip+0x2566b],cl        # 0x1400886a0
   140063035:	mov    rcx,QWORD PTR [rsp+0xc0]
   14006303d:	xor    rcx,rsp
   140063040:	call   0x140046470
   140063045:	lea    r11,[rsp+0xd0]
   14006304d:	mov    rbx,QWORD PTR [r11+0x18]
   140063051:	mov    rsi,QWORD PTR [r11+0x20]
   140063055:	mov    rsp,r11
   140063058:	pop    rdi
   140063059:	ret    
   14006305a:	lea    rax,[rip+0x2562f]        # 0x140088690
   140063061:	jmp    0x140063066
   140063066:	mov    QWORD PTR [rsp+0x8],rcx
   14006306b:	mov    QWORD PTR [rsp+0x10],rdx
   140063070:	mov    QWORD PTR [rsp+0x18],r8
   140063075:	mov    QWORD PTR [rsp+0x20],r9
   14006307a:	sub    rsp,0x68
   14006307e:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140063084:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14006308a:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140063090:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140063096:	mov    rdx,rax
   140063099:	lea    rcx,[rip+0x1f2a0]        # 0x140082340
   1400630a0:	call   0x1400630f8
   1400630a5:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400630ab:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400630b1:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400630b7:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400630bd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400630c2:	mov    rdx,QWORD PTR [rsp+0x78]
   1400630c7:	mov    r8,QWORD PTR [rsp+0x80]
   1400630cf:	mov    r9,QWORD PTR [rsp+0x88]
   1400630d7:	add    rsp,0x68
   1400630db:	jmp    0x1400630dd
   1400630dd:	jmp    rax
   1400630df:	jmp    QWORD PTR [rip+0x255ab]        # 0x140088690
   1400630e5:	lea    rax,[rip+0x2559c]        # 0x140088688
   1400630ec:	jmp    0x140063066
   1400630f1:	jmp    QWORD PTR [rip+0x25591]        # 0x140088688
   1400630f7:	int3   
   1400630f8:	mov    r11,rsp
   1400630fb:	mov    QWORD PTR [r11+0x20],rbx
   1400630ff:	push   rbp
   140063100:	push   rsi
   140063101:	push   rdi
   140063102:	push   r12
   140063104:	push   r13
   140063106:	push   r14
   140063108:	push   r15
   14006310a:	sub    rsp,0x70
   14006310e:	mov    eax,DWORD PTR [rcx+0x4]
   140063111:	mov    r9d,DWORD PTR [rcx]
   140063114:	mov    r12d,DWORD PTR [rcx+0x8]
   140063118:	mov    r10d,DWORD PTR [rcx+0xc]
   14006311c:	mov    DWORD PTR [rsp+0x20],0x48
   140063124:	mov    rsi,rcx
   140063127:	mov    ecx,DWORD PTR [rcx+0x10]
   14006312a:	mov    r14d,DWORD PTR [rsi+0x14]
   14006312e:	mov    r15d,DWORD PTR [rsi+0x1c]
   140063132:	mov    r13,rdx
   140063135:	lea    rdx,[rip+0xfffffffffff9cec4]        # 0x140000000
   14006313c:	mov    QWORD PTR [r11-0x80],rsi
   140063140:	add    rax,rdx
   140063143:	mov    QWORD PTR [r11-0x78],r13
   140063147:	and    r9d,0x1
   14006314b:	mov    QWORD PTR [r11-0x70],rax
   14006314f:	and    DWORD PTR [rsp+0x40],0x0
   140063154:	xor    eax,eax
   140063156:	and    QWORD PTR [r11-0x58],rax
   14006315a:	and    QWORD PTR [r11-0x50],rax
   14006315e:	mov    QWORD PTR [r11-0x60],rax
   140063162:	and    DWORD PTR [rsp+0x60],eax
   140063166:	add    r12,rdx
   140063169:	add    r10,rdx
   14006316c:	add    rcx,rdx
   14006316f:	add    r14,rdx
   140063172:	test   r9b,r9b
   140063175:	jne    0x14006319c
   140063177:	xor    edx,edx
   140063179:	lea    rax,[rsp+0x20]
   14006317e:	lea    r9,[r11+0x8]
   140063182:	lea    r8d,[rdx+0x1]
   140063186:	mov    ecx,0xc06d0057
   14006318b:	mov    QWORD PTR [r11+0x8],rax
   14006318f:	call   QWORD PTR [rip+0x14ab]        # 0x140064640
   140063195:	xor    eax,eax
   140063197:	jmp    0x1400633ce
   14006319c:	mov    rdi,QWORD PTR [r12]
   1400631a0:	movabs rax,0x8000000000000000
   1400631aa:	mov    rbp,r13
   1400631ad:	sub    rbp,r10
   1400631b0:	sar    rbp,0x3
   1400631b4:	mov    ebp,ebp
   1400631b6:	test   QWORD PTR [rcx+rbp*8],rax
   1400631ba:	mov    eax,0x0
   1400631bf:	sete   al
   1400631c2:	test   eax,eax
   1400631c4:	mov    DWORD PTR [rsp+0x40],eax
   1400631c8:	je     0x1400631de
   1400631ca:	mov    eax,DWORD PTR [rcx+rbp*8]
   1400631cd:	lea    rcx,[rip+0xfffffffffff9ce2e]        # 0x140000002
   1400631d4:	add    rax,rcx
   1400631d7:	mov    QWORD PTR [rsp+0x48],rax
   1400631dc:	jmp    0x1400631e6
   1400631de:	movzx  eax,WORD PTR [rcx+rbp*8]
   1400631e2:	mov    DWORD PTR [rsp+0x48],eax
   1400631e6:	mov    rax,QWORD PTR [rip+0x2a4c3]        # 0x14008d6b0
   1400631ed:	xor    ebx,ebx
   1400631ef:	test   rax,rax
   1400631f2:	je     0x140063210
   1400631f4:	lea    rdx,[rsp+0x20]
   1400631f9:	xor    ecx,ecx
   1400631fb:	call   rax
   1400631fd:	test   rax,rax
   140063200:	mov    rbx,rax
   140063203:	jne    0x1400633a4
   140063209:	mov    rax,QWORD PTR [rip+0x2a4a0]        # 0x14008d6b0
   140063210:	test   rdi,rdi
   140063213:	jne    0x1400632e7
   140063219:	test   rax,rax
   14006321c:	je     0x140063230
   14006321e:	lea    rdx,[rsp+0x20]
   140063223:	lea    ecx,[rdi+0x1]
   140063226:	call   rax
   140063228:	test   rax,rax
   14006322b:	mov    rdi,rax
   14006322e:	jne    0x14006329b
   140063230:	mov    rcx,QWORD PTR [rsp+0x38]
   140063235:	call   QWORD PTR [rip+0x122d]        # 0x140064468
   14006323b:	test   rax,rax
   14006323e:	mov    rdi,rax
   140063241:	jne    0x14006329b
   140063243:	call   QWORD PTR [rip+0x13b7]        # 0x140064600
   140063249:	mov    DWORD PTR [rsp+0x60],eax
   14006324d:	mov    rax,QWORD PTR [rip+0x2a454]        # 0x14008d6a8
   140063254:	test   rax,rax
   140063257:	je     0x14006326b
   140063259:	lea    rdx,[rsp+0x20]
   14006325e:	lea    ecx,[rdi+0x3]
   140063261:	call   rax
   140063263:	test   rax,rax
   140063266:	mov    rdi,rax
   140063269:	jne    0x14006329b
   14006326b:	xor    edx,edx
   14006326d:	lea    rax,[rsp+0x20]
   140063272:	lea    r9,[rsp+0xb8]
   14006327a:	lea    r8d,[rdx+0x1]
   14006327e:	mov    ecx,0xc06d007e
   140063283:	mov    QWORD PTR [rsp+0xb8],rax
   14006328b:	call   QWORD PTR [rip+0x13af]        # 0x140064640
   140063291:	mov    rax,QWORD PTR [rsp+0x58]
   140063296:	jmp    0x1400633ce
   14006329b:	mov    rax,rdi
   14006329e:	xchg   QWORD PTR [r12],rax
   1400632a2:	cmp    rax,rdi
   1400632a5:	je     0x1400632d7
   1400632a7:	cmp    DWORD PTR [rsi+0x18],0x0
   1400632ab:	je     0x1400632e0
   1400632ad:	mov    edx,0x10
   1400632b2:	lea    ecx,[rdx+0x30]
   1400632b5:	call   QWORD PTR [rip+0x133d]        # 0x1400645f8
   1400632bb:	test   rax,rax
   1400632be:	je     0x1400632e0
   1400632c0:	mov    QWORD PTR [rax+0x8],rsi
   1400632c4:	mov    rcx,QWORD PTR [rip+0x2a3d5]        # 0x14008d6a0
   1400632cb:	mov    QWORD PTR [rax],rcx
   1400632ce:	mov    QWORD PTR [rip+0x2a3cb],rax        # 0x14008d6a0
   1400632d5:	jmp    0x1400632e0
   1400632d7:	mov    rcx,rdi
   1400632da:	call   QWORD PTR [rip+0x1310]        # 0x1400645f0
   1400632e0:	mov    rax,QWORD PTR [rip+0x2a3c9]        # 0x14008d6b0
   1400632e7:	test   rax,rax
   1400632ea:	mov    QWORD PTR [rsp+0x50],rdi
   1400632ef:	je     0x140063300
   1400632f1:	lea    rdx,[rsp+0x20]
   1400632f6:	mov    ecx,0x2
   1400632fb:	call   rax
   1400632fd:	mov    rbx,rax
   140063300:	test   rbx,rbx
   140063303:	jne    0x1400633a0
   140063309:	cmp    DWORD PTR [rsi+0x14],ebx
   14006330c:	je     0x140063337
   14006330e:	cmp    DWORD PTR [rsi+0x1c],ebx
   140063311:	je     0x140063337
   140063313:	movsxd rax,DWORD PTR [rdi+0x3c]
   140063317:	cmp    DWORD PTR [rax+rdi*1],0x4550
   14006331e:	jne    0x140063337
   140063320:	cmp    DWORD PTR [rax+rdi*1+0x8],r15d
   140063325:	jne    0x140063337
   140063327:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   14006332c:	jne    0x140063337
   14006332e:	mov    rbx,QWORD PTR [r14+rbp*8]
   140063332:	test   rbx,rbx
   140063335:	jne    0x1400633a0
   140063337:	mov    rdx,QWORD PTR [rsp+0x48]
   14006333c:	mov    rcx,rdi
   14006333f:	call   QWORD PTR [rip+0x12a3]        # 0x1400645e8
   140063345:	test   rax,rax
   140063348:	mov    rbx,rax
   14006334b:	jne    0x1400633a0
   14006334d:	call   QWORD PTR [rip+0x12ad]        # 0x140064600
   140063353:	mov    DWORD PTR [rsp+0x60],eax
   140063357:	mov    rax,QWORD PTR [rip+0x2a34a]        # 0x14008d6a8
   14006335e:	test   rax,rax
   140063361:	je     0x140063370
   140063363:	lea    rdx,[rsp+0x20]
   140063368:	lea    ecx,[rbx+0x4]
   14006336b:	call   rax
   14006336d:	mov    rbx,rax
   140063370:	test   rbx,rbx
   140063373:	jne    0x1400633a0
   140063375:	lea    rax,[rsp+0x20]
   14006337a:	lea    r9,[rsp+0xc0]
   140063382:	lea    r8d,[rbx+0x1]
   140063386:	xor    edx,edx
   140063388:	mov    ecx,0xc06d007f
   14006338d:	mov    QWORD PTR [rsp+0xc0],rax
   140063395:	call   QWORD PTR [rip+0x12a5]        # 0x140064640
   14006339b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400633a0:	mov    QWORD PTR [r13+0x0],rbx
   1400633a4:	mov    rax,QWORD PTR [rip+0x2a305]        # 0x14008d6b0
   1400633ab:	test   rax,rax
   1400633ae:	je     0x1400633cb
   1400633b0:	and    DWORD PTR [rsp+0x60],0x0
   1400633b5:	lea    rdx,[rsp+0x20]
   1400633ba:	mov    ecx,0x5
   1400633bf:	mov    QWORD PTR [rsp+0x50],rdi
   1400633c4:	mov    QWORD PTR [rsp+0x58],rbx
   1400633c9:	call   rax
   1400633cb:	mov    rax,rbx
   1400633ce:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400633d6:	add    rsp,0x70
   1400633da:	pop    r15
   1400633dc:	pop    r14
   1400633de:	pop    r13
   1400633e0:	pop    r12
   1400633e2:	pop    rdi
   1400633e3:	pop    rsi
   1400633e4:	pop    rbp
   1400633e5:	ret    
   1400633e6:	int3   
   1400633e7:	int3   
   1400633e8:	jmp    0x140063410
   1400633ed:	int3   
   1400633ee:	int3   
   1400633ef:	int3   
   1400633f0:	sub    rsp,0x28
   1400633f4:	mov    edx,0x1
   1400633f9:	xor    ecx,ecx
   1400633fb:	call   0x14002d4b4
   140063400:	call   0x14002d79c
   140063405:	add    rsp,0x28
   140063409:	jmp    0x14002d54c
   14006340e:	int3   
   14006340f:	int3   
   140063410:	mov    rax,rsp
   140063413:	mov    QWORD PTR [rax+0x8],rbx
   140063417:	mov    QWORD PTR [rax+0x10],rbp
   14006341b:	mov    QWORD PTR [rax+0x18],rsi
   14006341f:	mov    QWORD PTR [rax+0x20],rdi
   140063423:	push   r12
   140063425:	push   r13
   140063427:	push   r14
   140063429:	sub    rsp,0x20
   14006342d:	mov    ebx,r9d
   140063430:	mov    rdi,r8
   140063433:	mov    rsi,rdx
   140063436:	mov    rbp,rcx
   140063439:	or     r13d,0xffffffff
   14006343d:	call   0x14001c840
   140063442:	mov    r12,rax
   140063445:	call   0x140021a70
   14006344a:	mov    r9d,ebx
   14006344d:	mov    r14,QWORD PTR [rax+0x8]
   140063451:	mov    r8,rdi
   140063454:	mov    rdx,rsi
   140063457:	mov    rcx,rbp
   14006345a:	call   0x14003fe5c
   14006345f:	test   eax,eax
   140063461:	je     0x1400634be
   140063463:	test   r14,r14
   140063466:	je     0x140063478
   140063468:	mov    rax,QWORD PTR [r14]
   14006346b:	mov    rcx,r14
   14006346e:	call   QWORD PTR [rax+0x120]
   140063474:	test   eax,eax
   140063476:	je     0x1400634be
   140063478:	mov    rax,QWORD PTR [r12]
   14006347c:	mov    rcx,r12
   14006347f:	call   QWORD PTR [rax+0xa0]
   140063485:	test   eax,eax
   140063487:	jne    0x1400634ae
   140063489:	cmp    QWORD PTR [r12+0x40],0x0
   14006348f:	je     0x14006349f
   140063491:	mov    rcx,QWORD PTR [r12+0x40]
   140063496:	mov    rax,QWORD PTR [rcx]
   140063499:	call   QWORD PTR [rax+0xc0]
   14006349f:	mov    rax,QWORD PTR [r12]
   1400634a3:	mov    rcx,r12
   1400634a6:	call   QWORD PTR [rax+0xd0]
   1400634ac:	jmp    0x1400634bb
   1400634ae:	mov    rax,QWORD PTR [r12]
   1400634b2:	mov    rcx,r12
   1400634b5:	call   QWORD PTR [rax+0xa8]
   1400634bb:	mov    r13d,eax
   1400634be:	call   0x14003ef70
   1400634c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400634c8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400634cd:	mov    rsi,QWORD PTR [rsp+0x50]
   1400634d2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400634d7:	mov    eax,r13d
   1400634da:	add    rsp,0x20
   1400634de:	pop    r14
   1400634e0:	pop    r13
   1400634e2:	pop    r12
   1400634e4:	ret    
   1400634e5:	int3   
   1400634e6:	int3   
   1400634e7:	int3   
   1400634e8:	int3   
   1400634e9:	int3   
   1400634ea:	int3   
   1400634eb:	int3   
   1400634ec:	int3   
   1400634ed:	int3   
   1400634ee:	int3   
   1400634ef:	int3   
   1400634f0:	int3   
   1400634f1:	int3   
   1400634f2:	int3   
   1400634f3:	int3   
   1400634f4:	int3   
   1400634f5:	int3   
   1400634f6:	data16 data16 xchg ax,ax
   1400634fa:	data16 data16 xchg ax,ax
   1400634fe:	xchg   ax,ax
   140063500:	sub    rsp,0x10
   140063504:	mov    QWORD PTR [rsp],r10
   140063508:	mov    QWORD PTR [rsp+0x8],r11
   14006350d:	xor    r11,r11
   140063510:	lea    r10,[rsp+0x18]
   140063515:	sub    r10,rax
   140063518:	cmovb  r10,r11
   14006351c:	mov    r11,QWORD PTR gs:0x10
   140063525:	cmp    r10,r11
   140063528:	jae    0x140063540
   14006352a:	and    r10w,0xf000
   140063530:	lea    r11,[r11-0x1000]
   140063537:	mov    BYTE PTR [r11],0x0
   14006353b:	cmp    r10,r11
   14006353e:	jne    0x140063530
   140063540:	mov    r10,QWORD PTR [rsp]
   140063544:	mov    r11,QWORD PTR [rsp+0x8]
   140063549:	add    rsp,0x10
   14006354d:	ret    
   14006354e:	int3   
   14006354f:	int3   
   140063550:	int3   
   140063551:	int3   
   140063552:	int3   
   140063553:	int3   
   140063554:	int3   
   140063555:	int3   
   140063556:	data16 data16 xchg ax,ax
   14006355a:	data16 data16 xchg ax,ax
   14006355e:	xchg   ax,ax
   140063560:	sub    rsp,0x18
   140063564:	mov    QWORD PTR [rsp+0x20],rcx
   140063569:	mov    QWORD PTR [rsp+0x28],rdx
   14006356e:	mov    DWORD PTR [rsp+0x30],r8d
   140063573:	mov    rdx,QWORD PTR [rdx]
   140063576:	mov    rax,rcx
   140063579:	call   0x140052b40
   14006357e:	call   rax
   140063580:	call   0x140052b70
   140063585:	mov    rcx,rax
   140063588:	mov    rdx,QWORD PTR [rsp+0x28]
   14006358d:	mov    rdx,QWORD PTR [rdx]
   140063590:	mov    r8d,0x2
   140063596:	call   0x140052b40
   14006359b:	mov    QWORD PTR [rsp+0x10],rax
   1400635a0:	add    rsp,0x18
   1400635a4:	ret    
   1400635a5:	int3   
   1400635a6:	int3   
   1400635a7:	int3   
   1400635a8:	int3   
   1400635a9:	int3   
   1400635aa:	int3   
   1400635ab:	int3   
   1400635ac:	int3   
   1400635ad:	int3   
   1400635ae:	int3   
   1400635af:	int3   
   1400635b0:	sub    rsp,0x28
   1400635b4:	lea    rcx,[rip+0x250f5]        # 0x1400886b0
   1400635bb:	call   0x140001010
   1400635c0:	lea    rcx,[rip+0x519]        # 0x140063ae0
   1400635c7:	add    rsp,0x28
   1400635cb:	jmp    0x140046610
   1400635d0:	sub    rsp,0x28
   1400635d4:	call   0x14002b874
   1400635d9:	test   rax,rax
   1400635dc:	mov    rcx,rax
   1400635df:	jne    0x1400635ec
   1400635e1:	mov    ecx,0x80004005
   1400635e6:	call   0x140001430
   1400635eb:	int3   
   1400635ec:	mov    rax,QWORD PTR [rax]
   1400635ef:	call   QWORD PTR [rax+0x18]
   1400635f2:	lea    rcx,[rip+0x4f7]        # 0x140063af0
   1400635f9:	add    rax,0x18
   1400635fd:	mov    QWORD PTR [rip+0x25574],rax        # 0x140088b78
   140063604:	add    rsp,0x28
   140063608:	jmp    0x140046610
   14006360d:	int3   
   14006360e:	int3   
   14006360f:	int3   
   140063610:	sub    rsp,0x28
   140063614:	lea    rcx,[rip+0x25235]        # 0x140088850
   14006361b:	call   0x1400084c0
   140063620:	lea    rcx,[rip+0x4f9]        # 0x140063b20
   140063627:	add    rsp,0x28
   14006362b:	jmp    0x140046610
   140063630:	lea    rcx,[rip+0x505]        # 0x140063b3c
   140063637:	jmp    0x140046610
   14006363c:	lea    rcx,[rip+0x505]        # 0x140063b48
   140063643:	jmp    0x140046610
   140063648:	lea    rcx,[rip+0x505]        # 0x140063b54
   14006364f:	jmp    0x140046610
   140063654:	lea    rcx,[rip+0x509]        # 0x140063b64
   14006365b:	jmp    0x140046610
   140063660:	lea    rcx,[rip+0x50d]        # 0x140063b74
   140063667:	jmp    0x140046610
   14006366c:	lea    rcx,[rip+0x511]        # 0x140063b84
   140063673:	jmp    0x140046610
   140063678:	lea    rcx,[rip+0x511]        # 0x140063b90
   14006367f:	jmp    0x140046610
   140063684:	lea    rcx,[rip+0x511]        # 0x140063b9c
   14006368b:	jmp    0x140046610
   140063690:	sub    rsp,0x28
   140063694:	lea    rcx,[rip+0x6f55]        # 0x14006a5f0
   14006369b:	call   QWORD PTR [rip+0x118f]        # 0x140064830
   1400636a1:	mov    DWORD PTR [rip+0x285c1],eax        # 0x14008bc68
   1400636a7:	add    rsp,0x28
   1400636ab:	ret    
   1400636ac:	sub    rsp,0x28
   1400636b0:	lea    rcx,[rip+0x285b9]        # 0x14008bc70
   1400636b7:	call   0x14001c3e8
   1400636bc:	lea    rax,[rip+0x5df5]        # 0x1400694b8
   1400636c3:	lea    r11,[rip+0x5f0e]        # 0x1400695d8
   1400636ca:	mov    QWORD PTR [rip+0x285ff],rax        # 0x14008bcd0
   1400636d1:	lea    rax,[rip+0x5ec8]        # 0x1400695a0
   1400636d8:	lea    rcx,[rip+0x4c9]        # 0x140063ba8
   1400636df:	mov    QWORD PTR [rip+0x285f2],rax        # 0x14008bcd8
   1400636e6:	xor    eax,eax
   1400636e8:	mov    QWORD PTR [rip+0x28581],r11        # 0x14008bc70
   1400636ef:	mov    QWORD PTR [rip+0x285ba],rax        # 0x14008bcb0
   1400636f6:	mov    BYTE PTR [rip+0x285bc],al        # 0x14008bcb8
   1400636fc:	mov    QWORD PTR [rip+0x285c5],rax        # 0x14008bcc8
   140063703:	mov    QWORD PTR [rip+0x285d6],rax        # 0x14008bce0
   14006370a:	mov    DWORD PTR [rip+0x285d8],eax        # 0x14008bce8
   140063710:	mov    QWORD PTR [rip+0x285d9],rax        # 0x14008bcf0
   140063717:	mov    DWORD PTR [rip+0x285db],eax        # 0x14008bcf8
   14006371d:	mov    QWORD PTR [rip+0x285dc],rax        # 0x14008bd00
   140063724:	mov    QWORD PTR [rip+0x285dd],rax        # 0x14008bd08
   14006372b:	mov    QWORD PTR [rip+0x285de],rax        # 0x14008bd10
   140063732:	add    rsp,0x28
   140063736:	jmp    0x140046610
   14006373b:	int3   
   14006373c:	sub    rsp,0x28
   140063740:	lea    rcx,[rip+0x285d9]        # 0x14008bd20
   140063747:	call   0x14001c3e8
   14006374c:	lea    rax,[rip+0x5d65]        # 0x1400694b8
   140063753:	lea    r11,[rip+0x5e7e]        # 0x1400695d8
   14006375a:	mov    QWORD PTR [rip+0x2861f],rax        # 0x14008bd80
   140063761:	lea    rax,[rip+0x5e38]        # 0x1400695a0
   140063768:	lea    rcx,[rip+0x445]        # 0x140063bb4
   14006376f:	mov    QWORD PTR [rip+0x28612],rax        # 0x14008bd88
   140063776:	xor    eax,eax
   140063778:	mov    QWORD PTR [rip+0x285a1],r11        # 0x14008bd20
   14006377f:	mov    BYTE PTR [rip+0x285e3],al        # 0x14008bd68
   140063785:	mov    QWORD PTR [rip+0x285ec],rax        # 0x14008bd78
   14006378c:	mov    QWORD PTR [rip+0x285fd],rax        # 0x14008bd90
   140063793:	mov    DWORD PTR [rip+0x285ff],eax        # 0x14008bd98
   140063799:	mov    QWORD PTR [rip+0x28600],rax        # 0x14008bda0
   1400637a0:	mov    DWORD PTR [rip+0x28602],eax        # 0x14008bda8
   1400637a6:	mov    QWORD PTR [rip+0x28603],rax        # 0x14008bdb0
   1400637ad:	mov    QWORD PTR [rip+0x28604],rax        # 0x14008bdb8
   1400637b4:	mov    QWORD PTR [rip+0x28605],rax        # 0x14008bdc0
   1400637bb:	mov    QWORD PTR [rip+0x2859a],0x1        # 0x14008bd60
   1400637c6:	add    rsp,0x28
   1400637ca:	jmp    0x140046610
   1400637cf:	int3   
   1400637d0:	sub    rsp,0x28
   1400637d4:	lea    rcx,[rip+0x285f5]        # 0x14008bdd0
   1400637db:	call   0x14001c3e8
   1400637e0:	or     QWORD PTR [rip+0x28628],0xffffffffffffffff        # 0x14008be10
   1400637e8:	lea    rax,[rip+0x5cc9]        # 0x1400694b8
   1400637ef:	mov    QWORD PTR [rip+0x2863a],rax        # 0x14008be30
   1400637f6:	lea    rax,[rip+0x5da3]        # 0x1400695a0
   1400637fd:	lea    r11,[rip+0x5dd4]        # 0x1400695d8
   140063804:	mov    QWORD PTR [rip+0x2862d],rax        # 0x14008be38
   14006380b:	xor    eax,eax
   14006380d:	lea    rcx,[rip+0x3ac]        # 0x140063bc0
   140063814:	mov    BYTE PTR [rip+0x285fe],al        # 0x14008be18
   14006381a:	mov    QWORD PTR [rip+0x28607],rax        # 0x14008be28
   140063821:	mov    QWORD PTR [rip+0x28618],rax        # 0x14008be40
   140063828:	mov    DWORD PTR [rip+0x2861a],eax        # 0x14008be48
   14006382e:	mov    QWORD PTR [rip+0x2861b],rax        # 0x14008be50
   140063835:	mov    DWORD PTR [rip+0x2861d],eax        # 0x14008be58
   14006383b:	mov    QWORD PTR [rip+0x2861e],rax        # 0x14008be60
   140063842:	mov    QWORD PTR [rip+0x2861f],rax        # 0x14008be68
   140063849:	mov    QWORD PTR [rip+0x28620],rax        # 0x14008be70
   140063850:	mov    QWORD PTR [rip+0x28579],r11        # 0x14008bdd0
   140063857:	add    rsp,0x28
   14006385b:	jmp    0x140046610
   140063860:	sub    rsp,0x28
   140063864:	lea    rcx,[rip+0x28615]        # 0x14008be80
   14006386b:	call   0x14001c3e8
   140063870:	lea    rax,[rip+0x5c41]        # 0x1400694b8
   140063877:	lea    r11,[rip+0x5d5a]        # 0x1400695d8
   14006387e:	mov    QWORD PTR [rip+0x2865b],rax        # 0x14008bee0
   140063885:	lea    rax,[rip+0x5d14]        # 0x1400695a0
   14006388c:	lea    rcx,[rip+0x339]        # 0x140063bcc
   140063893:	mov    QWORD PTR [rip+0x2864e],rax        # 0x14008bee8
   14006389a:	xor    eax,eax
   14006389c:	mov    QWORD PTR [rip+0x285dd],r11        # 0x14008be80
   1400638a3:	mov    BYTE PTR [rip+0x2861f],al        # 0x14008bec8
   1400638a9:	mov    QWORD PTR [rip+0x28628],rax        # 0x14008bed8
   1400638b0:	mov    QWORD PTR [rip+0x28639],rax        # 0x14008bef0
   1400638b7:	mov    DWORD PTR [rip+0x2863b],eax        # 0x14008bef8
   1400638bd:	mov    QWORD PTR [rip+0x2863c],rax        # 0x14008bf00
   1400638c4:	mov    DWORD PTR [rip+0x2863e],eax        # 0x14008bf08
   1400638ca:	mov    QWORD PTR [rip+0x2863f],rax        # 0x14008bf10
   1400638d1:	mov    QWORD PTR [rip+0x28640],rax        # 0x14008bf18
   1400638d8:	mov    QWORD PTR [rip+0x28641],rax        # 0x14008bf20
   1400638df:	mov    QWORD PTR [rip+0x285d6],0xfffffffffffffffe        # 0x14008bec0
   1400638ea:	add    rsp,0x28
   1400638ee:	jmp    0x140046610
   1400638f3:	int3   
   1400638f4:	sub    rsp,0x28
   1400638f8:	lea    rcx,[rip+0x28641]        # 0x14008bf40
   1400638ff:	xor    edx,edx
   140063901:	call   0x140020928
   140063906:	and    DWORD PTR [rip+0x28647],0x0        # 0x14008bf54
   14006390d:	and    DWORD PTR [rip+0x28644],0x0        # 0x14008bf58
   140063914:	lea    rax,[rip+0x6f65]        # 0x14006a880
   14006391b:	lea    rcx,[rip+0x2b6]        # 0x140063bd8
   140063922:	mov    DWORD PTR [rip+0x28730],0xf022        # 0x14008c05c
   14006392c:	mov    QWORD PTR [rip+0x2860d],rax        # 0x14008bf40
   140063933:	add    rsp,0x28
   140063937:	jmp    0x140046610
   14006393c:	sub    rsp,0x28
   140063940:	lea    rcx,[rip+0x28719]        # 0x14008c060
   140063947:	xor    edx,edx
   140063949:	call   0x140020928
   14006394e:	and    DWORD PTR [rip+0x2871f],0x0        # 0x14008c074
   140063955:	and    DWORD PTR [rip+0x2871c],0x0        # 0x14008c078
   14006395c:	lea    rax,[rip+0x6f55]        # 0x14006a8b8
   140063963:	lea    rcx,[rip+0x27e]        # 0x140063be8
   14006396a:	mov    DWORD PTR [rip+0x28808],0xf024        # 0x14008c17c
   140063974:	mov    QWORD PTR [rip+0x286e5],rax        # 0x14008c060
   14006397b:	add    rsp,0x28
   14006397f:	jmp    0x140046610
   140063984:	sub    rsp,0x28
   140063988:	lea    rcx,[rip+0x28b81]        # 0x14008c510
   14006398f:	call   0x14002d9d8
   140063994:	lea    rcx,[rip+0x25d]        # 0x140063bf8
   14006399b:	add    rsp,0x28
   14006399f:	jmp    0x140046610
   1400639a4:	sub    rsp,0x28
   1400639a8:	call   QWORD PTR [rip+0xb22]        # 0x1400644d0
   1400639ae:	bt     eax,0x1f
   1400639b2:	jae    0x1400639c0
   1400639b4:	call   QWORD PTR [rip+0xb16]        # 0x1400644d0
   1400639ba:	cmp    ax,0x4
   1400639be:	je     0x1400639d8
   1400639c0:	call   QWORD PTR [rip+0xb0a]        # 0x1400644d0
   1400639c6:	bt     eax,0x1f
   1400639ca:	jb     0x1400639ed
   1400639cc:	call   QWORD PTR [rip+0xafe]        # 0x1400644d0
   1400639d2:	cmp    ax,0x3
   1400639d6:	jne    0x1400639ed
   1400639d8:	lea    rcx,[rip+0x96c9]        # 0x14006d0a8
   1400639df:	call   QWORD PTR [rip+0xe4b]        # 0x140064830
   1400639e5:	mov    DWORD PTR [rip+0x28ba9],eax        # 0x14008c594
   1400639eb:	jmp    0x1400639f4
   1400639ed:	and    DWORD PTR [rip+0x28ba0],0x0        # 0x14008c594
   1400639f4:	add    rsp,0x28
   1400639f8:	ret    
   1400639f9:	int3   
   1400639fa:	int3   
   1400639fb:	int3   
   1400639fc:	lea    rcx,[rip+0x28bb5]        # 0x14008c5b8
   140063a03:	jmp    0x14004300c
   140063a08:	lea    rcx,[rip+0x230f9]        # 0x140086b08
   140063a0f:	jmp    0x14002c8d8
   140063a14:	lea    rcx,[rip+0x23145]        # 0x140086b60
   140063a1b:	jmp    0x14002c8d8
   140063a20:	lea    rcx,[rip+0x1dd]        # 0x140063c04
   140063a27:	jmp    0x140046610
   140063a2c:	sub    rsp,0x28
   140063a30:	lea    rcx,[rip+0x29bb9]        # 0x14008d5f0
   140063a37:	call   0x140062f58
   140063a3c:	lea    rcx,[rip+0x1cd]        # 0x140063c10
   140063a43:	add    rsp,0x28
   140063a47:	jmp    0x140046610
   140063a4c:	sub    rsp,0x28
   140063a50:	xor    edx,edx
   140063a52:	lea    rcx,[rip+0x29bff]        # 0x14008d658
   140063a59:	lea    r8d,[rdx+0x28]
   140063a5d:	call   0x140047720
   140063a62:	and    QWORD PTR [rip+0x29c1e],0x0        # 0x14008d688
   140063a6a:	and    DWORD PTR [rip+0x29c1f],0x0        # 0x14008d690
   140063a71:	and    DWORD PTR [rip+0x29c1c],0x0        # 0x14008d694
   140063a78:	and    QWORD PTR [rip+0x29c00],0x0        # 0x14008d680
   140063a80:	lea    rcx,[rip+0x29bd1]        # 0x14008d658
   140063a87:	mov    DWORD PTR [rip+0x29bbf],0x48        # 0x14008d650
   140063a91:	call   0x140062e18
   140063a96:	test   eax,eax
   140063a98:	jns    0x140063aa8
   140063a9a:	and    DWORD PTR [rip+0x29baf],0x0        # 0x14008d650
   140063aa1:	mov    BYTE PTR [rip+0x24bf8],0x1        # 0x1400886a0
   140063aa8:	lea    rcx,[rip+0x16d]        # 0x140063c1c
   140063aaf:	add    rsp,0x28
   140063ab3:	jmp    0x140046610
   140063ab8:	sub    rsp,0x28
   140063abc:	call   0x140021a70
   140063ac1:	lea    rcx,[rip+0xfffffffffffff928]        # 0x1400633f0
   140063ac8:	mov    BYTE PTR [rax+0x28],0x0
   140063acc:	call   0x140046610
   140063ad1:	mov    BYTE PTR [rip+0x29be1],al        # 0x14008d6b8
   140063ad7:	add    rsp,0x28
   140063adb:	ret    
   140063adc:	int3   
   140063add:	int3   
   140063ade:	int3   
   140063adf:	int3   
   140063ae0:	lea    rcx,[rip+0x24bc9]        # 0x1400886b0
   140063ae7:	jmp    0x14001bcac
   140063aec:	int3   
   140063aed:	int3   
   140063aee:	int3   
   140063aef:	int3   
   140063af0:	sub    rsp,0x28
   140063af4:	mov    rdx,QWORD PTR [rip+0x2507d]        # 0x140088b78
   140063afb:	add    rdx,0xffffffffffffffe8
   140063aff:	or     eax,0xffffffff
   140063b02:	lock xadd DWORD PTR [rdx+0x10],eax
   140063b07:	add    eax,0xffffffff
   140063b0a:	test   eax,eax
   140063b0c:	jg     0x140063b17
   140063b0e:	mov    rcx,QWORD PTR [rdx]
   140063b11:	mov    rax,QWORD PTR [rcx]
   140063b14:	call   QWORD PTR [rax+0x8]
   140063b17:	add    rsp,0x28
   140063b1b:	ret    
   140063b1c:	int3   
   140063b1d:	int3   
   140063b1e:	int3   
   140063b1f:	int3   
   140063b20:	mov    edx,0x8
   140063b25:	lea    r9,[rip+0xfffffffffff9d594]        # 0x1400010c0
   140063b2c:	lea    rcx,[rip+0x24d1d]        # 0x140088850
   140063b33:	lea    r8d,[rdx+0x5c]
   140063b37:	jmp    0x140045b20
   140063b3c:	lea    rcx,[rip+0x25085]        # 0x140088bc8
   140063b43:	jmp    0x14002cce8
   140063b48:	lea    rcx,[rip+0x25071]        # 0x140088bc0
   140063b4f:	jmp    0x14002cce8
   140063b54:	lea    rax,[rip+0x52ad]        # 0x140068e08
   140063b5b:	mov    QWORD PTR [rip+0x21a8e],rax        # 0x1400855f0
   140063b62:	ret    
   140063b63:	int3   
   140063b64:	lea    rax,[rip+0x52d5]        # 0x140068e40
   140063b6b:	mov    QWORD PTR [rip+0x21b9e],rax        # 0x140085710
   140063b72:	ret    
   140063b73:	int3   
   140063b74:	lea    rax,[rip+0x52fd]        # 0x140068e78
   140063b7b:	mov    QWORD PTR [rip+0x21cae],rax        # 0x140085830
   140063b82:	ret    
   140063b83:	int3   
   140063b84:	lea    rcx,[rip+0x25075]        # 0x140088c00
   140063b8b:	jmp    0x14002d488
   140063b90:	lea    rcx,[rip+0x25061]        # 0x140088bf8
   140063b97:	jmp    0x14002cce8
   140063b9c:	lea    rcx,[rip+0x2838d]        # 0x14008bf30
   140063ba3:	jmp    0x14002cce8
   140063ba8:	lea    rcx,[rip+0x280c1]        # 0x14008bc70
   140063baf:	jmp    0x140026254
   140063bb4:	lea    rcx,[rip+0x28165]        # 0x14008bd20
   140063bbb:	jmp    0x140026254
   140063bc0:	lea    rcx,[rip+0x28209]        # 0x14008bdd0
   140063bc7:	jmp    0x140026254
   140063bcc:	lea    rcx,[rip+0x282ad]        # 0x14008be80
   140063bd3:	jmp    0x140026254
   140063bd8:	lea    rax,[rip+0x6ca1]        # 0x14006a880
   140063bdf:	mov    QWORD PTR [rip+0x2835a],rax        # 0x14008bf40
   140063be6:	ret    
   140063be7:	int3   
   140063be8:	lea    rax,[rip+0x6cc9]        # 0x14006a8b8
   140063bef:	mov    QWORD PTR [rip+0x2846a],rax        # 0x14008c060
   140063bf6:	ret    
   140063bf7:	int3   
   140063bf8:	lea    rcx,[rip+0x28911]        # 0x14008c510
   140063bff:	jmp    0x14002da44
   140063c04:	lea    rcx,[rip+0x289fd]        # 0x14008c608
   140063c0b:	jmp    0x14002cce8
   140063c10:	lea    rcx,[rip+0x299d9]        # 0x14008d5f0
   140063c17:	jmp    0x140062f24
   140063c1c:	sub    rsp,0x28
   140063c20:	mov    rdx,QWORD PTR [rip+0x299d1]        # 0x14008d5f8
   140063c27:	lea    rcx,[rip+0x29a22]        # 0x14008d650
   140063c2e:	call   0x140062e6c
   140063c33:	mov    rcx,QWORD PTR [rip+0x29a4e]        # 0x14008d688
   140063c3a:	test   rcx,rcx
   140063c3d:	je     0x140063c4c
   140063c3f:	call   0x1400485c0
   140063c44:	and    QWORD PTR [rip+0x29a3c],0x0        # 0x14008d688
   140063c4c:	and    DWORD PTR [rip+0x29a3d],0x0        # 0x14008d690
   140063c53:	and    DWORD PTR [rip+0x29a3a],0x0        # 0x14008d694
   140063c5a:	add    rsp,0x28
   140063c5e:	ret    
