
4b86fc33172d0d3081164379dbbca8333f5f3eb6c75c7c82281332fdabb5ef8d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    r8d,edx
   14000100b:	jmp    0x1400033a0
   140001010:	int3   
   140001011:	int3   
   140001012:	int3   
   140001013:	int3   
   140001014:	int3   
   140001015:	int3   
   140001016:	int3   
   140001017:	int3   
   140001018:	int3   
   140001019:	int3   
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	sub    rsp,0x28
   140001024:	lea    eax,[rcx-0x2]
   140001027:	test   eax,0xfffffffb
   14000102c:	je     0x140001032
   14000102e:	xor    eax,eax
   140001030:	jmp    0x140001049
   140001032:	mov    ecx,0x4e20
   140001037:	mov    BYTE PTR [rip+0xd5a6],0x1        # 0x14000e5e4
   14000103e:	call   QWORD PTR [rip+0x810c]        # 0x140009150
   140001044:	mov    eax,0x1
   140001049:	add    rsp,0x28
   14000104d:	ret    
   14000104e:	int3   
   14000104f:	int3   
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	rex push rbp
   140001056:	push   rbx
   140001057:	push   rsi
   140001058:	push   rdi
   140001059:	lea    rbp,[rsp-0x3f]
   14000105e:	sub    rsp,0xb8
   140001065:	mov    rax,QWORD PTR [rip+0xcf9c]        # 0x14000e008
   14000106c:	xor    rax,rsp
   14000106f:	mov    QWORD PTR [rbp+0x2f],rax
   140001073:	mov    rsi,r9
   140001076:	mov    BYTE PTR [r9],0x0
   14000107a:	mov    r9,r8
   14000107d:	mov    QWORD PTR [rbp-0x31],r8
   140001081:	mov    rbx,rdx
   140001084:	mov    QWORD PTR [rbp-0x39],rcx
   140001088:	lea    r8,[rip+0x8531]        # 0x1400095c0
   14000108f:	mov    DWORD PTR [rbp-0x9],0x8007054f
   140001096:	mov    edx,0x1
   14000109b:	call   0x140002dd8
   1400010a0:	mov    al,BYTE PTR [rip+0xd53e]        # 0x14000e5e4
   1400010a6:	and    QWORD PTR [rbp-0x41],0x0
   1400010ab:	test   al,al
   1400010ad:	je     0x1400010da
   1400010af:	mov    rcx,QWORD PTR [rbp-0x39]
   1400010b3:	lea    r8,[rip+0x8536]        # 0x1400095f0
   1400010ba:	mov    edx,0x2
   1400010bf:	call   0x140002dd8
   1400010c4:	mov    eax,0x80070281
   1400010c9:	lea    rdi,[rip+0x8590]        # 0x140009660
   1400010d0:	mov    DWORD PTR [rbp-0x9],eax
   1400010d3:	mov    ebx,0x3c
   1400010d8:	jmp    0x140001119
   1400010da:	mov    r9,QWORD PTR [rbp-0x31]
   1400010de:	lea    rdx,[rip+0x859b]        # 0x140009680
   1400010e5:	mov    r8,rbx
   1400010e8:	lea    rcx,[rbp-0x41]
   1400010ec:	call   0x140006940
   1400010f1:	test   eax,eax
   1400010f3:	jns    0x14000116a
   1400010f5:	mov    rcx,QWORD PTR [rbp-0x41]
   1400010f9:	lea    rdi,[rip+0x85c0]        # 0x1400096c0
   140001100:	mov    DWORD PTR [rbp-0x9],eax
   140001103:	mov    ebx,0x41
   140001108:	test   rcx,rcx
   14000110b:	je     0x140001119
   14000110d:	add    rcx,0xfffffffffffffff8
   140001111:	call   0x140007cd8
   140001116:	mov    eax,DWORD PTR [rbp-0x9]
   140001119:	mov    rcx,QWORD PTR [rbp-0x39]
   14000111d:	test   rcx,rcx
   140001120:	je     0x14000113b
   140001122:	mov    r9,QWORD PTR [rbp-0x31]
   140001126:	lea    r8,[rip+0x8643]        # 0x140009770
   14000112d:	mov    edx,0x3
   140001132:	mov    DWORD PTR [rsp+0x20],eax
   140001136:	call   0x140002dd8
   14000113b:	lea    rax,[rip+0x8426]        # 0x140009568
   140001142:	mov    DWORD PTR [rbp-0x19],ebx
   140001145:	mov    QWORD PTR [rbp-0x29],rax
   140001149:	lea    rdx,[rbp-0x29]
   14000114d:	lea    rax,[rip+0x8454]        # 0x1400095a8
   140001154:	mov    QWORD PTR [rbp-0x11],rdi
   140001158:	lea    rcx,[rbp-0x9]
   14000115c:	mov    QWORD PTR [rbp-0x21],rax
   140001160:	call   0x140002dc4
   140001165:	jmp    0x14000124d
   14000116a:	mov    rdx,QWORD PTR [rbp-0x39]
   14000116e:	lea    rax,[rip+0x832b]        # 0x1400094a0
   140001175:	xorps  xmm0,xmm0
   140001178:	mov    QWORD PTR [rbp-0x1],rax
   14000117c:	xorps  xmm1,xmm1
   14000117f:	mov    WORD PTR [rbp+0x7],0x0
   140001185:	lea    rcx,[rbp-0x1]
   140001189:	movdqu XMMWORD PTR [rbp+0xf],xmm0
   14000118e:	movdqu XMMWORD PTR [rbp+0x1f],xmm1
   140001193:	call   0x140003454
   140001198:	lea    rcx,[rbp-0x1]
   14000119c:	test   eax,eax
   14000119e:	jns    0x1400011b7
   1400011a0:	mov    DWORD PTR [rbp-0x9],eax
   1400011a3:	call   0x14000432c
   1400011a8:	mov    rcx,QWORD PTR [rbp-0x41]
   1400011ac:	test   rcx,rcx
   1400011af:	je     0x140001228
   1400011b1:	add    rcx,0xfffffffffffffff8
   1400011b5:	jmp    0x140001223
   1400011b7:	mov    rdx,rbx
   1400011ba:	call   0x1400041a0
   1400011bf:	lea    rcx,[rbp-0x1]
   1400011c3:	test   eax,eax
   1400011c5:	js     0x1400011a0
   1400011c7:	mov    rbx,QWORD PTR [rbp-0x41]
   1400011cb:	lea    r8,[rbp-0x49]
   1400011cf:	mov    rdx,rbx
   1400011d2:	mov    BYTE PTR [rbp-0x49],0x0
   1400011d6:	call   0x140003d64
   1400011db:	test   eax,eax
   1400011dd:	js     0x14000120e
   1400011df:	mov    dil,BYTE PTR [rbp-0x49]
   1400011e3:	test   dil,dil
   1400011e6:	jne    0x140001201
   1400011e8:	mov    r9,QWORD PTR [rbp-0x31]
   1400011ec:	lea    r8,[rip+0x8535]        # 0x140009728
   1400011f3:	mov    rcx,QWORD PTR [rbp-0x39]
   1400011f7:	mov    edx,0x1
   1400011fc:	call   0x140002dd8
   140001201:	lea    rcx,[rbp-0x1]
   140001205:	call   0x1400036bc
   14000120a:	test   eax,eax
   14000120c:	jns    0x140001252
   14000120e:	lea    rcx,[rbp-0x1]
   140001212:	mov    DWORD PTR [rbp-0x9],eax
   140001215:	call   0x14000432c
   14000121a:	test   rbx,rbx
   14000121d:	je     0x140001228
   14000121f:	lea    rcx,[rbx-0x8]
   140001223:	call   0x140007cd8
   140001228:	mov    rcx,QWORD PTR [rbp-0x39]
   14000122c:	test   rcx,rcx
   14000122f:	je     0x14000124d
   140001231:	mov    eax,DWORD PTR [rbp-0x9]
   140001234:	lea    r8,[rip+0x8535]        # 0x140009770
   14000123b:	mov    r9,QWORD PTR [rbp-0x31]
   14000123f:	mov    edx,0x3
   140001244:	mov    DWORD PTR [rsp+0x20],eax
   140001248:	call   0x140002dd8
   14000124d:	mov    eax,DWORD PTR [rbp-0x9]
   140001250:	jmp    0x140001272
   140001252:	and    DWORD PTR [rbp-0x9],0x0
   140001256:	lea    rcx,[rbp-0x1]
   14000125a:	mov    BYTE PTR [rsi],dil
   14000125d:	call   0x14000432c
   140001262:	test   rbx,rbx
   140001265:	je     0x140001270
   140001267:	lea    rcx,[rbx-0x8]
   14000126b:	call   0x140007cd8
   140001270:	xor    eax,eax
   140001272:	mov    rcx,QWORD PTR [rbp+0x2f]
   140001276:	xor    rcx,rsp
   140001279:	call   0x140008030
   14000127e:	add    rsp,0xb8
   140001285:	pop    rdi
   140001286:	pop    rsi
   140001287:	pop    rbx
   140001288:	pop    rbp
   140001289:	ret    
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	rex push rbp
   140001292:	push   rbx
   140001293:	push   rsi
   140001294:	push   rdi
   140001295:	push   r12
   140001297:	push   r13
   140001299:	push   r14
   14000129b:	push   r15
   14000129d:	lea    rbp,[rsp-0x1f]
   1400012a2:	sub    rsp,0xc8
   1400012a9:	mov    rax,QWORD PTR [rip+0xcd58]        # 0x14000e008
   1400012b0:	xor    rax,rsp
   1400012b3:	mov    QWORD PTR [rbp+0xf],rax
   1400012b7:	xor    r12d,r12d
   1400012ba:	mov    QWORD PTR [rbp-0x21],rdx
   1400012be:	mov    r15,rcx
   1400012c1:	mov    QWORD PTR [r9],r12
   1400012c4:	mov    rax,QWORD PTR [r8+0x10]
   1400012c8:	lea    rdx,[rbp-0x19]
   1400012cc:	mov    QWORD PTR [rbp-0x41],rax
   1400012d0:	lea    rax,[rip+0x8101]        # 0x1400093d8
   1400012d7:	lea    ecx,[r12+0x8]
   1400012dc:	mov    QWORD PTR [rbp-0x31],r9
   1400012e0:	mov    QWORD PTR [rbp-0x1],rcx
   1400012e4:	mov    QWORD PTR [rbp-0x51],rcx
   1400012e8:	mov    rcx,r8
   1400012eb:	mov    QWORD PTR [rbp-0x39],r12
   1400012ef:	mov    DWORD PTR [rbp-0x11],0x1
   1400012f6:	mov    QWORD PTR [rbp-0x9],r12
   1400012fa:	mov    QWORD PTR [rbp+0x7],r12
   1400012fe:	mov    QWORD PTR [rbp-0x19],rax
   140001302:	mov    DWORD PTR [rbp-0x61],0x1
   140001309:	mov    QWORD PTR [rbp-0x59],r12
   14000130d:	mov    QWORD PTR [rbp-0x49],r12
   140001311:	mov    QWORD PTR [rbp-0x69],rax
   140001315:	call   0x140002408
   14000131a:	mov    ebx,eax
   14000131c:	test   eax,eax
   14000131e:	jns    0x14000136f
   140001320:	xor    ecx,ecx
   140001322:	mov    DWORD PTR [rbp-0x75],eax
   140001325:	call   QWORD PTR [rip+0x7efd]        # 0x140009228
   14000132b:	mov    rcx,QWORD PTR [rbp+0x7]
   14000132f:	call   QWORD PTR [rip+0x7ef3]        # 0x140009228
   140001335:	lea    rax,[rip+0x822c]        # 0x140009568
   14000133c:	mov    DWORD PTR [rbp-0x9],0x97
   140001343:	mov    QWORD PTR [rbp-0x19],rax
   140001347:	lea    rdx,[rbp-0x19]
   14000134b:	lea    rax,[rip+0x84e6]        # 0x140009838
   140001352:	mov    QWORD PTR [rbp-0x11],rax
   140001356:	lea    rcx,[rbp-0x75]
   14000135a:	lea    rax,[rip+0x84ef]        # 0x140009850
   140001361:	mov    QWORD PTR [rbp-0x1],rax
   140001365:	call   0x140002dc4
   14000136a:	jmp    0x1400015a1
   14000136f:	mov    r13,QWORD PTR [rbp+0x7]
   140001373:	mov    rsi,QWORD PTR [rbp-0x9]
   140001377:	mov    r9,rsi
   14000137a:	lea    r8,[rip+0x84ff]        # 0x140009880
   140001381:	mov    edx,0x1
   140001386:	mov    rcx,r15
   140001389:	call   0x140002dd8
   14000138e:	mov    rbx,r12
   140001391:	mov    QWORD PTR [rbp-0x29],rsi
   140001395:	xor    ecx,ecx
   140001397:	mov    QWORD PTR [rbp-0x71],rbx
   14000139b:	call   QWORD PTR [rip+0x7e87]        # 0x140009228
   1400013a1:	mov    QWORD PTR [rbp-0x49],r12
   1400013a5:	mov    r14,r12
   1400013a8:	mov    QWORD PTR [rbp-0x59],r12
   1400013ac:	mov    rdi,r12
   1400013af:	mov    QWORD PTR [rbp-0x51],r12
   1400013b3:	test   rsi,rsi
   1400013b6:	je     0x140001455
   1400013bc:	mov    rdi,r13
   1400013bf:	mov    BYTE PTR [rbp-0x79],0x0
   1400013c3:	cmp    r12,rsi
   1400013c6:	jb     0x1400013e0
   1400013c8:	lea    r8,[rip+0x8df9]        # 0x14000a1c8
   1400013cf:	mov    edx,0x273
   1400013d4:	lea    rcx,[rip+0x8f8d]        # 0x14000a368
   1400013db:	call   0x14000740c
   1400013e0:	mov    r8,QWORD PTR [rdi]
   1400013e3:	lea    r9,[rbp-0x79]
   1400013e7:	mov    rdx,QWORD PTR [rbp-0x21]
   1400013eb:	mov    rcx,r15
   1400013ee:	call   0x140001054
   1400013f3:	test   eax,eax
   1400013f5:	jns    0x140001400
   1400013f7:	inc    rbx
   1400013fa:	mov    QWORD PTR [rbp-0x71],rbx
   1400013fe:	jmp    0x14000143d
   140001400:	cmp    BYTE PTR [rbp-0x79],0x0
   140001404:	jne    0x14000143d
   140001406:	cmp    r12,rsi
   140001409:	jb     0x140001423
   14000140b:	lea    r8,[rip+0x8db6]        # 0x14000a1c8
   140001412:	mov    edx,0x273
   140001417:	lea    rcx,[rip+0x8f4a]        # 0x14000a368
   14000141e:	call   0x14000740c
   140001423:	mov    rdx,rdi
   140001426:	lea    rcx,[rbp-0x69]
   14000142a:	call   0x140002504
   14000142f:	mov    ebx,eax
   140001431:	test   eax,eax
   140001433:	js     0x1400014ec
   140001439:	mov    rbx,QWORD PTR [rbp-0x71]
   14000143d:	inc    r12
   140001440:	add    rdi,0x8
   140001444:	cmp    r12,rsi
   140001447:	jb     0x1400013bf
   14000144d:	mov    r14,QWORD PTR [rbp-0x49]
   140001451:	mov    rdi,QWORD PTR [rbp-0x59]
   140001455:	xor    r12d,r12d
   140001458:	mov    ebx,r12d
   14000145b:	test   ebx,ebx
   14000145d:	js     0x14000158f
   140001463:	mov    rax,QWORD PTR [rbp-0x71]
   140001467:	lea    r8,[rip+0x8492]        # 0x140009900
   14000146e:	mov    rbx,QWORD PTR [rbp-0x39]
   140001472:	mov    r9,rdi
   140001475:	add    rbx,rax
   140001478:	mov    QWORD PTR [rsp+0x20],rax
   14000147d:	mov    edx,0x1
   140001482:	mov    QWORD PTR [rbp-0x39],rbx
   140001486:	mov    rcx,r15
   140001489:	call   0x140002dd8
   14000148e:	mov    rcx,r13
   140001491:	call   QWORD PTR [rip+0x7d91]        # 0x140009228
   140001497:	mov    r13,r14
   14000149a:	mov    QWORD PTR [rbp-0x49],r12
   14000149e:	mov    rsi,rdi
   1400014a1:	mov    QWORD PTR [rbp-0x59],r12
   1400014a5:	mov    QWORD PTR [rbp-0x51],r12
   1400014a9:	cmp    rdi,QWORD PTR [rbp-0x29]
   1400014ad:	jne    0x140001377
   1400014b3:	test   rbx,rbx
   1400014b6:	je     0x140001550
   1400014bc:	mov    rcx,QWORD PTR [rbp-0x41]
   1400014c0:	lea    r8,[rip+0x84b9]        # 0x140009980
   1400014c7:	mov    rax,rcx
   1400014ca:	mov    QWORD PTR [rsp+0x28],rcx
   1400014cf:	sub    rax,rdi
   1400014d2:	mov    r9,rbx
   1400014d5:	mov    edx,0x2
   1400014da:	mov    QWORD PTR [rsp+0x20],rax
   1400014df:	mov    rcx,r15
   1400014e2:	call   0x140002dd8
   1400014e7:	jmp    0x140001573
   1400014ec:	xor    r12d,r12d
   1400014ef:	test   r15,r15
   1400014f2:	je     0x14000150b
   1400014f4:	mov    r9d,eax
   1400014f7:	lea    r8,[rip+0x82d2]        # 0x1400097d0
   1400014fe:	lea    edx,[r12+0x3]
   140001503:	mov    rcx,r15
   140001506:	call   0x140002dd8
   14000150b:	mov    DWORD PTR [rbp-0x75],ebx
   14000150e:	lea    rax,[rip+0x8053]        # 0x140009568
   140001515:	mov    DWORD PTR [rbp-0x9],0x77
   14000151c:	mov    QWORD PTR [rbp-0x19],rax
   140001520:	lea    rdx,[rbp-0x19]
   140001524:	lea    rax,[rip+0x828d]        # 0x1400097b8
   14000152b:	mov    QWORD PTR [rbp-0x11],rax
   14000152f:	lea    rcx,[rbp-0x75]
   140001533:	lea    rax,[rip+0x82f6]        # 0x140009830
   14000153a:	mov    QWORD PTR [rbp-0x1],rax
   14000153e:	call   0x140002dc4
   140001543:	mov    r14,QWORD PTR [rbp-0x49]
   140001547:	mov    rdi,QWORD PTR [rbp-0x59]
   14000154b:	jmp    0x14000145b
   140001550:	mov    rax,QWORD PTR [rbp-0x41]
   140001554:	lea    r8,[rip+0x84e5]        # 0x140009a40
   14000155b:	mov    r9,rax
   14000155e:	mov    QWORD PTR [rsp+0x20],rax
   140001563:	sub    r9,rdi
   140001566:	mov    edx,0x1
   14000156b:	mov    rcx,r15
   14000156e:	call   0x140002dd8
   140001573:	mov    rax,QWORD PTR [rbp-0x31]
   140001577:	xor    ecx,ecx
   140001579:	mov    QWORD PTR [rax],rbx
   14000157c:	call   QWORD PTR [rip+0x7ca6]        # 0x140009228
   140001582:	mov    rcx,r14
   140001585:	call   QWORD PTR [rip+0x7c9d]        # 0x140009228
   14000158b:	xor    eax,eax
   14000158d:	jmp    0x1400015a3
   14000158f:	mov    rcx,r14
   140001592:	call   QWORD PTR [rip+0x7c90]        # 0x140009228
   140001598:	mov    rcx,r13
   14000159b:	call   QWORD PTR [rip+0x7c87]        # 0x140009228
   1400015a1:	mov    eax,ebx
   1400015a3:	mov    rcx,QWORD PTR [rbp+0xf]
   1400015a7:	xor    rcx,rsp
   1400015aa:	call   0x140008030
   1400015af:	add    rsp,0xc8
   1400015b6:	pop    r15
   1400015b8:	pop    r14
   1400015ba:	pop    r13
   1400015bc:	pop    r12
   1400015be:	pop    rdi
   1400015bf:	pop    rsi
   1400015c0:	pop    rbx
   1400015c1:	pop    rbp
   1400015c2:	ret    
   1400015c3:	int3   
   1400015c4:	int3   
   1400015c5:	int3   
   1400015c6:	int3   
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	rex push rbp
   1400015ce:	push   rbx
   1400015cf:	push   rsi
   1400015d0:	push   rdi
   1400015d1:	push   r12
   1400015d3:	push   r14
   1400015d5:	push   r15
   1400015d7:	lea    rbp,[rsp-0x380]
   1400015df:	sub    rsp,0x480
   1400015e6:	mov    rax,QWORD PTR [rip+0xca1b]        # 0x14000e008
   1400015ed:	xor    rax,rsp
   1400015f0:	mov    QWORD PTR [rbp+0x370],rax
   1400015f7:	xor    r12d,r12d
   1400015fa:	mov    DWORD PTR [rsp+0x30],0x8007054f
   140001602:	mov    r14,r8
   140001605:	mov    rbx,rdx
   140001608:	mov    r15,rcx
   14000160b:	test   r8,r8
   14000160e:	jne    0x140001630
   140001610:	lea    rcx,[rsp+0x30]
   140001615:	mov    r14d,0xc8
   14000161b:	lea    r15,[rip+0x849e]        # 0x140009ac0
   140001622:	call   0x1400023f8
   140001627:	mov    edi,DWORD PTR [rsp+0x30]
   14000162b:	jmp    0x1400017c8
   140001630:	mov    edi,r12d
   140001633:	cmp    QWORD PTR [r8+0x10],r12
   140001637:	jbe    0x14000165c
   140001639:	mov    rcx,r12
   14000163c:	mov    rax,QWORD PTR [r14+0x20]
   140001640:	mov    rcx,QWORD PTR [rax+rcx*8]
   140001644:	test   rcx,rcx
   140001647:	je     0x140001652
   140001649:	add    rcx,0xfffffffffffffff8
   14000164d:	call   0x140007cd8
   140001652:	inc    edi
   140001654:	mov    ecx,edi
   140001656:	cmp    rcx,QWORD PTR [r14+0x10]
   14000165a:	jb     0x14000163c
   14000165c:	mov    rcx,QWORD PTR [r14+0x10]
   140001660:	lea    r8,[rip+0x8479]        # 0x140009ae0
   140001667:	mov    rdi,QWORD PTR [r14+0x20]
   14000166b:	xor    eax,eax
   14000166d:	shl    rcx,0x3
   140001671:	mov    rdx,rbx
   140001674:	rep stos BYTE PTR es:[rdi],al
   140001676:	lea    rcx,[rsp+0x38]
   14000167b:	mov    QWORD PTR [r14+0x10],r12
   14000167f:	mov    QWORD PTR [rsp+0x38],r12
   140001684:	call   0x140006770
   140001689:	mov    edi,eax
   14000168b:	test   eax,eax
   14000168d:	jns    0x1400016b7
   14000168f:	mov    rcx,QWORD PTR [rsp+0x38]
   140001694:	lea    r15,[rip+0x8475]        # 0x140009b10
   14000169b:	mov    DWORD PTR [rsp+0x30],eax
   14000169f:	mov    r14d,0xcd
   1400016a5:	test   rcx,rcx
   1400016a8:	je     0x1400017c8
   1400016ae:	add    rcx,0xfffffffffffffff8
   1400016b2:	jmp    0x1400017c3
   1400016b7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400016bc:	lea    rdx,[rip+0x84ad]        # 0x140009b70
   1400016c3:	mov    rcx,rbx
   1400016c6:	call   QWORD PTR [rip+0x7b84]        # 0x140009250
   1400016cc:	mov    rsi,rax
   1400016cf:	test   rax,rax
   1400016d2:	jne    0x140001736
   1400016d4:	call   QWORD PTR [rip+0x7a6e]        # 0x140009148
   1400016da:	mov    r14d,0x80070000
   1400016e0:	mov    esi,eax
   1400016e2:	test   r15,r15
   1400016e5:	je     0x14000170d
   1400016e7:	movzx  edx,ax
   1400016ea:	lea    r8,[rip+0x848f]        # 0x140009b80
   1400016f1:	or     edx,r14d
   1400016f4:	mov    r9,rbx
   1400016f7:	test   eax,eax
   1400016f9:	mov    rcx,r15
   1400016fc:	cmovle edx,eax
   1400016ff:	mov    DWORD PTR [rsp+0x20],edx
   140001703:	mov    edx,0x3
   140001708:	call   0x140002dd8
   14000170d:	movzx  edi,si
   140001710:	or     edi,r14d
   140001713:	test   esi,esi
   140001715:	cmovle edi,esi
   140001718:	test   edi,edi
   14000171a:	jns    0x140001837
   140001720:	mov    r14d,0xd2
   140001726:	mov    DWORD PTR [rsp+0x30],edi
   14000172a:	lea    r15,[rip+0x849f]        # 0x140009bd0
   140001731:	jmp    0x1400017ba
   140001736:	mov    r8,rax
   140001739:	mov    r15d,0x200
   14000173f:	mov    edx,r15d
   140001742:	lea    rcx,[rsp+0x60]
   140001747:	call   QWORD PTR [rip+0x7afb]        # 0x140009248
   14000174d:	test   rax,rax
   140001750:	je     0x1400017fd
   140001756:	lea    rcx,[rsp+0x60]
   14000175b:	or     rax,0xffffffffffffffff
   14000175f:	inc    rax
   140001762:	cmp    WORD PTR [rcx+rax*2],r12w
   140001767:	jne    0x14000175f
   140001769:	test   rax,rax
   14000176c:	je     0x14000179b
   14000176e:	lea    rax,[rax*2-0x2]
   140001776:	cmp    rax,0x402
   14000177c:	jae    0x14000183d
   140001782:	lea    rdx,[rsp+0x60]
   140001787:	mov    WORD PTR [rsp+rax*1+0x60],r12w
   14000178d:	mov    rcx,r14
   140001790:	call   0x140002cd4
   140001795:	mov    edi,eax
   140001797:	test   eax,eax
   140001799:	js     0x1400017a0
   14000179b:	mov    r8,rsi
   14000179e:	jmp    0x14000173f
   1400017a0:	mov    rcx,rsi
   1400017a3:	mov    DWORD PTR [rsp+0x30],eax
   1400017a7:	mov    r14d,0xdc
   1400017ad:	lea    r15,[rip+0x843c]        # 0x140009bf0
   1400017b4:	call   QWORD PTR [rip+0x7a4e]        # 0x140009208
   1400017ba:	test   rbx,rbx
   1400017bd:	je     0x1400017c8
   1400017bf:	lea    rcx,[rbx-0x8]
   1400017c3:	call   0x140007cd8
   1400017c8:	lea    rax,[rip+0x7d99]        # 0x140009568
   1400017cf:	mov    DWORD PTR [rsp+0x50],r14d
   1400017d4:	mov    QWORD PTR [rsp+0x40],rax
   1400017d9:	lea    rdx,[rsp+0x40]
   1400017de:	lea    rax,[rip+0x82c3]        # 0x140009aa8
   1400017e5:	mov    QWORD PTR [rsp+0x58],r15
   1400017ea:	lea    rcx,[rsp+0x30]
   1400017ef:	mov    QWORD PTR [rsp+0x48],rax
   1400017f4:	call   0x140002dc4
   1400017f9:	mov    eax,edi
   1400017fb:	jmp    0x140001816
   1400017fd:	mov    rcx,rsi
   140001800:	call   QWORD PTR [rip+0x7a02]        # 0x140009208
   140001806:	test   rbx,rbx
   140001809:	je     0x140001814
   14000180b:	lea    rcx,[rbx-0x8]
   14000180f:	call   0x140007cd8
   140001814:	xor    eax,eax
   140001816:	mov    rcx,QWORD PTR [rbp+0x370]
   14000181d:	xor    rcx,rsp
   140001820:	call   0x140008030
   140001825:	add    rsp,0x480
   14000182c:	pop    r15
   14000182e:	pop    r14
   140001830:	pop    r12
   140001832:	pop    rdi
   140001833:	pop    rsi
   140001834:	pop    rbx
   140001835:	pop    rbp
   140001836:	ret    
   140001837:	call   0x140002db8
   14000183c:	int3   
   14000183d:	call   0x140008228
   140001842:	int3   
   140001843:	int3   
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	mov    QWORD PTR [rsp+0x8],rbx
   140001851:	mov    QWORD PTR [rsp+0x18],rdi
   140001856:	push   rbp
   140001857:	mov    rbp,rsp
   14000185a:	sub    rsp,0x60
   14000185e:	mov    rax,QWORD PTR [rip+0xc7a3]        # 0x14000e008
   140001865:	xor    rax,rsp
   140001868:	mov    QWORD PTR [rbp-0x8],rax
   14000186c:	mov    DWORD PTR [rbp-0x40],0x8007054f
   140001873:	mov    rdi,rdx
   140001876:	test   rdx,rdx
   140001879:	jne    0x1400018be
   14000187b:	lea    rcx,[rbp-0x40]
   14000187f:	call   0x1400023f8
   140001884:	lea    rax,[rip+0x7cdd]        # 0x140009568
   14000188b:	mov    DWORD PTR [rbp-0x28],0xe7
   140001892:	mov    QWORD PTR [rbp-0x38],rax
   140001896:	lea    rdx,[rbp-0x38]
   14000189a:	lea    rax,[rip+0x836f]        # 0x140009c10
   1400018a1:	mov    QWORD PTR [rbp-0x30],rax
   1400018a5:	lea    rcx,[rbp-0x40]
   1400018a9:	lea    rax,[rip+0x8210]        # 0x140009ac0
   1400018b0:	mov    QWORD PTR [rbp-0x20],rax
   1400018b4:	call   0x140002dc4
   1400018b9:	mov    ebx,DWORD PTR [rbp-0x40]
   1400018bc:	jmp    0x14000190c
   1400018be:	lea    rax,[rip+0x7bdb]        # 0x1400094a0
   1400018c5:	mov    WORD PTR [rbp-0x30],0x0
   1400018cb:	xorps  xmm0,xmm0
   1400018ce:	mov    QWORD PTR [rbp-0x38],rax
   1400018d2:	xorps  xmm1,xmm1
   1400018d5:	mov    rdx,rcx
   1400018d8:	lea    rcx,[rbp-0x38]
   1400018dc:	movdqu XMMWORD PTR [rbp-0x28],xmm0
   1400018e1:	movdqu XMMWORD PTR [rbp-0x18],xmm1
   1400018e6:	call   0x140003454
   1400018eb:	lea    rcx,[rbp-0x38]
   1400018ef:	mov    ebx,eax
   1400018f1:	test   eax,eax
   1400018f3:	js     0x140001907
   1400018f5:	mov    rdx,rdi
   1400018f8:	call   0x1400037c4
   1400018fd:	lea    rcx,[rbp-0x38]
   140001901:	mov    ebx,eax
   140001903:	test   eax,eax
   140001905:	jns    0x140001910
   140001907:	call   0x14000432c
   14000190c:	mov    eax,ebx
   14000190e:	jmp    0x140001917
   140001910:	call   0x14000432c
   140001915:	xor    eax,eax
   140001917:	mov    rcx,QWORD PTR [rbp-0x8]
   14000191b:	xor    rcx,rsp
   14000191e:	call   0x140008030
   140001923:	lea    r11,[rsp+0x60]
   140001928:	mov    rbx,QWORD PTR [r11+0x10]
   14000192c:	mov    rdi,QWORD PTR [r11+0x20]
   140001930:	mov    rsp,r11
   140001933:	pop    rbp
   140001934:	ret    
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	mov    QWORD PTR [rsp+0x20],rbx
   140001941:	push   rbp
   140001942:	push   rsi
   140001943:	push   rdi
   140001944:	push   r14
   140001946:	push   r15
   140001948:	sub    rsp,0x50
   14000194c:	mov    rax,QWORD PTR [rip+0xc6b5]        # 0x14000e008
   140001953:	xor    rax,rsp
   140001956:	mov    QWORD PTR [rsp+0x48],rax
   14000195b:	mov    DWORD PTR [rsp+0x20],0x8007054f
   140001963:	mov    r15,r8
   140001966:	mov    r14,rdx
   140001969:	mov    rsi,rcx
   14000196c:	test   r8,r8
   14000196f:	jne    0x140001990
   140001971:	lea    rcx,[rsp+0x20]
   140001976:	mov    eax,0xfa
   14000197b:	lea    rdx,[rip+0x82c6]        # 0x140009c48
   140001982:	call   0x1400023f8
   140001987:	mov    ebx,DWORD PTR [rsp+0x20]
   14000198b:	jmp    0x140001aa1
   140001990:	xor    edi,edi
   140001992:	xor    ebp,ebp
   140001994:	call   0x140002c0c
   140001999:	mov    rcx,r14
   14000199c:	call   0x140002c0c
   1400019a1:	mov    rax,QWORD PTR [rsi+0x10]
   1400019a5:	test   rax,rax
   1400019a8:	je     0x140001a65
   1400019ae:	cmp    rbp,QWORD PTR [r14+0x10]
   1400019b2:	jae    0x140001a65
   1400019b8:	mov    rbx,QWORD PTR [r14+0x20]
   1400019bc:	cmp    rdi,rax
   1400019bf:	jb     0x1400019d9
   1400019c1:	lea    r8,[rip+0x8800]        # 0x14000a1c8
   1400019c8:	mov    edx,0x261
   1400019cd:	lea    rcx,[rip+0x8994]        # 0x14000a368
   1400019d4:	call   0x14000740c
   1400019d9:	mov    rcx,QWORD PTR [rsi+0x20]
   1400019dd:	mov    rdx,QWORD PTR [rbx+rbp*8]
   1400019e1:	mov    rcx,QWORD PTR [rcx+rdi*8]
   1400019e5:	call   QWORD PTR [rip+0x7855]        # 0x140009240
   1400019eb:	test   eax,eax
   1400019ed:	jns    0x140001a28
   1400019ef:	cmp    rdi,QWORD PTR [rsi+0x10]
   1400019f3:	jb     0x140001a0d
   1400019f5:	lea    r8,[rip+0x87cc]        # 0x14000a1c8
   1400019fc:	mov    edx,0x261
   140001a01:	lea    rcx,[rip+0x8960]        # 0x14000a368
   140001a08:	call   0x14000740c
   140001a0d:	mov    rax,QWORD PTR [rsi+0x20]
   140001a11:	mov    rcx,r15
   140001a14:	lea    rdx,[rax+rdi*8]
   140001a18:	call   0x140002504
   140001a1d:	mov    ebx,eax
   140001a1f:	test   eax,eax
   140001a21:	js     0x140001a3e
   140001a23:	inc    rdi
   140001a26:	jmp    0x140001a30
   140001a28:	jne    0x140001a2d
   140001a2a:	inc    rdi
   140001a2d:	inc    rbp
   140001a30:	mov    rax,QWORD PTR [rsi+0x10]
   140001a34:	cmp    rdi,rax
   140001a37:	jae    0x140001a65
   140001a39:	jmp    0x1400019ae
   140001a3e:	mov    eax,0x107
   140001a43:	lea    rdx,[rip+0x821e]        # 0x140009c68
   140001a4a:	jmp    0x140001a9d
   140001a4c:	mov    rax,QWORD PTR [rsi+0x20]
   140001a50:	mov    rcx,r15
   140001a53:	lea    rdx,[rax+rdi*8]
   140001a57:	call   0x140002504
   140001a5c:	mov    ebx,eax
   140001a5e:	test   eax,eax
   140001a60:	js     0x140001a91
   140001a62:	inc    rdi
   140001a65:	mov    rax,QWORD PTR [rsi+0x10]
   140001a69:	cmp    rdi,rax
   140001a6c:	jb     0x140001a4c
   140001a6e:	xor    eax,eax
   140001a70:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a75:	xor    rcx,rsp
   140001a78:	call   0x140008030
   140001a7d:	mov    rbx,QWORD PTR [rsp+0x98]
   140001a85:	add    rsp,0x50
   140001a89:	pop    r15
   140001a8b:	pop    r14
   140001a8d:	pop    rdi
   140001a8e:	pop    rsi
   140001a8f:	pop    rbp
   140001a90:	ret    
   140001a91:	mov    eax,0x119
   140001a96:	lea    rdx,[rip+0x81eb]        # 0x140009c88
   140001a9d:	mov    DWORD PTR [rsp+0x20],ebx
   140001aa1:	lea    rcx,[rip+0x7ac0]        # 0x140009568
   140001aa8:	mov    QWORD PTR [rsp+0x40],rdx
   140001aad:	mov    QWORD PTR [rsp+0x28],rcx
   140001ab2:	lea    rdx,[rsp+0x28]
   140001ab7:	lea    rcx,[rip+0x816a]        # 0x140009c28
   140001abe:	mov    DWORD PTR [rsp+0x38],eax
   140001ac2:	mov    QWORD PTR [rsp+0x30],rcx
   140001ac7:	lea    rcx,[rsp+0x20]
   140001acc:	call   0x140002dc4
   140001ad1:	mov    eax,ebx
   140001ad3:	jmp    0x140001a70
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	int3   
   140001ad9:	int3   
   140001ada:	int3   
   140001adb:	int3   
   140001adc:	rex push rbp
   140001ade:	push   rbx
   140001adf:	push   rsi
   140001ae0:	push   rdi
   140001ae1:	push   r12
   140001ae3:	push   r14
   140001ae5:	push   r15
   140001ae7:	lea    rbp,[rsp-0x27]
   140001aec:	sub    rsp,0xe0
   140001af3:	mov    rax,QWORD PTR [rip+0xc50e]        # 0x14000e008
   140001afa:	xor    rax,rsp
   140001afd:	mov    QWORD PTR [rbp+0x17],rax
   140001b01:	xor    r15d,r15d
   140001b04:	mov    QWORD PTR [rbp-0x21],rcx
   140001b08:	mov    r12d,0x1
   140001b0e:	mov    QWORD PTR [rbp-0x19],r8
   140001b12:	lea    rax,[rip+0x794f]        # 0x140009468
   140001b19:	mov    DWORD PTR [rbp-0x9],r12d
   140001b1d:	mov    QWORD PTR [rbp-0x11],rax
   140001b21:	mov    rbx,r9
   140001b24:	mov    QWORD PTR [rbp-0x71],rax
   140001b28:	lea    rax,[rip+0x78a9]        # 0x1400093d8
   140001b2f:	lea    r9d,[r12+0x7]
   140001b34:	mov    QWORD PTR [rbp-0x49],rax
   140001b38:	mov    QWORD PTR [rbp+0x7],r9
   140001b3c:	lea    rax,[rsp+0x30]
   140001b41:	mov    QWORD PTR [rbp-0x59],r9
   140001b45:	mov    QWORD PTR [rbp-0x31],r9
   140001b49:	mov    r9,rbx
   140001b4c:	mov    QWORD PTR [rbp-0x1],r15
   140001b50:	mov    QWORD PTR [rbp+0xf],r15
   140001b54:	mov    DWORD PTR [rbp-0x69],r12d
   140001b58:	mov    QWORD PTR [rbp-0x61],r15
   140001b5c:	mov    QWORD PTR [rbp-0x51],r15
   140001b60:	mov    DWORD PTR [rbp-0x41],r12d
   140001b64:	mov    QWORD PTR [rbp-0x39],r15
   140001b68:	mov    QWORD PTR [rbp-0x29],r15
   140001b6c:	mov    BYTE PTR [rsp+0x30],r15b
   140001b71:	mov    QWORD PTR [rsp+0x20],rax
   140001b76:	call   0x1400031b8
   140001b7b:	cmp    BYTE PTR [rsp+0x30],r15b
   140001b80:	je     0x140001b9c
   140001b82:	xor    ecx,ecx
   140001b84:	mov    ebx,r15d
   140001b87:	call   QWORD PTR [rip+0x769b]        # 0x140009228
   140001b8d:	xor    ecx,ecx
   140001b8f:	call   QWORD PTR [rip+0x7693]        # 0x140009228
   140001b95:	xor    ecx,ecx
   140001b97:	jmp    0x140001fef
   140001b9c:	lea    rax,[rsp+0x38]
   140001ba1:	mov    DWORD PTR [rsp+0x38],r15d
   140001ba6:	mov    QWORD PTR [rsp+0x20],rax
   140001bab:	call   0x140007594
   140001bb0:	test   eax,eax
   140001bb2:	js     0x140001bf6
   140001bb4:	cmp    DWORD PTR [rsp+0x38],r15d
   140001bb9:	je     0x140001bf6
   140001bbb:	mov    rcx,QWORD PTR [rbp-0x21]
   140001bbf:	lea    r8,[rip+0x818a]        # 0x140009d50
   140001bc6:	mov    edx,r12d
   140001bc9:	call   0x140002dd8
   140001bce:	call   0x1400049d0
   140001bd3:	test   eax,eax
   140001bd5:	jns    0x140001b82
   140001bd7:	mov    rcx,QWORD PTR [rbp-0x21]
   140001bdb:	test   rcx,rcx
   140001bde:	je     0x140001b82
   140001be0:	mov    r9d,eax
   140001be3:	lea    r8,[rip+0x81d6]        # 0x140009dc0
   140001bea:	mov    edx,0x3
   140001bef:	call   0x140002dd8
   140001bf4:	jmp    0x140001b82
   140001bf6:	mov    rcx,QWORD PTR [rbp-0x21]
   140001bfa:	lea    r8,[rbp-0x11]
   140001bfe:	mov    rdx,rbx
   140001c01:	call   0x1400015cc
   140001c06:	mov    rcx,QWORD PTR [rbp-0x21]
   140001c0a:	mov    ebx,eax
   140001c0c:	test   eax,eax
   140001c0e:	jns    0x140001c61
   140001c10:	mov    rdx,QWORD PTR [rbp-0x19]
   140001c14:	call   0x140002ec4
   140001c19:	xor    ecx,ecx
   140001c1b:	call   QWORD PTR [rip+0x7607]        # 0x140009228
   140001c21:	xor    ecx,ecx
   140001c23:	call   QWORD PTR [rip+0x75ff]        # 0x140009228
   140001c29:	mov    r14,QWORD PTR [rbp-0x1]
   140001c2d:	mov    edi,r15d
   140001c30:	mov    rsi,QWORD PTR [rbp+0xf]
   140001c34:	test   r14,r14
   140001c37:	je     0x140001fec
   140001c3d:	mov    rax,r15
   140001c40:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001c44:	test   rcx,rcx
   140001c47:	je     0x140001c52
   140001c49:	add    rcx,0xfffffffffffffff8
   140001c4d:	call   0x140007cd8
   140001c52:	add    edi,r12d
   140001c55:	mov    eax,edi
   140001c57:	cmp    rax,r14
   140001c5a:	jb     0x140001c40
   140001c5c:	jmp    0x140001fec
   140001c61:	lea    rdx,[rbp-0x71]
   140001c65:	call   0x14000184c
   140001c6a:	mov    ebx,eax
   140001c6c:	test   eax,eax
   140001c6e:	jns    0x140001cf9
   140001c74:	mov    rdx,QWORD PTR [rbp-0x19]
   140001c78:	mov    rcx,QWORD PTR [rbp-0x21]
   140001c7c:	call   0x140002ec4
   140001c81:	xor    ecx,ecx
   140001c83:	call   QWORD PTR [rip+0x759f]        # 0x140009228
   140001c89:	mov    r14,QWORD PTR [rbp-0x61]
   140001c8d:	mov    edi,r15d
   140001c90:	mov    rsi,QWORD PTR [rbp-0x51]
   140001c94:	test   r14,r14
   140001c97:	je     0x140001cb8
   140001c99:	mov    rax,r15
   140001c9c:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001ca0:	test   rcx,rcx
   140001ca3:	je     0x140001cae
   140001ca5:	add    rcx,0xfffffffffffffff8
   140001ca9:	call   0x140007cd8
   140001cae:	add    edi,r12d
   140001cb1:	mov    eax,edi
   140001cb3:	cmp    rax,r14
   140001cb6:	jb     0x140001c9c
   140001cb8:	mov    rcx,rsi
   140001cbb:	call   QWORD PTR [rip+0x7567]        # 0x140009228
   140001cc1:	mov    r14,QWORD PTR [rbp-0x1]
   140001cc5:	mov    edi,r15d
   140001cc8:	mov    rsi,QWORD PTR [rbp+0xf]
   140001ccc:	test   r14,r14
   140001ccf:	je     0x140001fec
   140001cd5:	mov    rax,r15
   140001cd8:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001cdc:	test   rcx,rcx
   140001cdf:	je     0x140001cea
   140001ce1:	add    rcx,0xfffffffffffffff8
   140001ce5:	call   0x140007cd8
   140001cea:	add    edi,r12d
   140001ced:	mov    eax,edi
   140001cef:	cmp    rax,r14
   140001cf2:	jb     0x140001cd8
   140001cf4:	jmp    0x140001fec
   140001cf9:	lea    r8,[rbp-0x49]
   140001cfd:	lea    rdx,[rbp-0x71]
   140001d01:	lea    rcx,[rbp-0x11]
   140001d05:	call   0x14000193c
   140001d0a:	mov    rcx,QWORD PTR [rbp-0x21]
   140001d0e:	mov    ebx,eax
   140001d10:	test   eax,eax
   140001d12:	jns    0x140001d9b
   140001d18:	mov    rdx,QWORD PTR [rbp-0x19]
   140001d1c:	call   0x140002ec4
   140001d21:	mov    rcx,QWORD PTR [rbp-0x29]
   140001d25:	call   QWORD PTR [rip+0x74fd]        # 0x140009228
   140001d2b:	mov    r14,QWORD PTR [rbp-0x61]
   140001d2f:	mov    edi,r15d
   140001d32:	mov    rsi,QWORD PTR [rbp-0x51]
   140001d36:	test   r14,r14
   140001d39:	je     0x140001d5a
   140001d3b:	mov    rax,r15
   140001d3e:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001d42:	test   rcx,rcx
   140001d45:	je     0x140001d50
   140001d47:	add    rcx,0xfffffffffffffff8
   140001d4b:	call   0x140007cd8
   140001d50:	add    edi,r12d
   140001d53:	mov    eax,edi
   140001d55:	cmp    rax,r14
   140001d58:	jb     0x140001d3e
   140001d5a:	mov    rcx,rsi
   140001d5d:	call   QWORD PTR [rip+0x74c5]        # 0x140009228
   140001d63:	mov    r14,QWORD PTR [rbp-0x1]
   140001d67:	mov    edi,r15d
   140001d6a:	mov    rsi,QWORD PTR [rbp+0xf]
   140001d6e:	test   r14,r14
   140001d71:	je     0x140001fec
   140001d77:	mov    rax,r15
   140001d7a:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001d7e:	test   rcx,rcx
   140001d81:	je     0x140001d8c
   140001d83:	add    rcx,0xfffffffffffffff8
   140001d87:	call   0x140007cd8
   140001d8c:	add    edi,r12d
   140001d8f:	mov    eax,edi
   140001d91:	cmp    rax,r14
   140001d94:	jb     0x140001d7a
   140001d96:	jmp    0x140001fec
   140001d9b:	lea    r8,[rip+0x807e]        # 0x140009e20
   140001da2:	xor    edx,edx
   140001da4:	call   0x140002dd8
   140001da9:	mov    rcx,QWORD PTR [rbp-0x21]
   140001dad:	lea    r8,[rbp-0x11]
   140001db1:	call   0x14000271c
   140001db6:	mov    rcx,QWORD PTR [rbp-0x21]
   140001dba:	lea    r8,[rip+0x807f]        # 0x140009e40
   140001dc1:	xor    edx,edx
   140001dc3:	call   0x140002dd8
   140001dc8:	mov    rcx,QWORD PTR [rbp-0x21]
   140001dcc:	lea    r8,[rbp-0x71]
   140001dd0:	call   0x14000271c
   140001dd5:	mov    rcx,QWORD PTR [rbp-0x21]
   140001dd9:	lea    r8,[rip+0x8080]        # 0x140009e60
   140001de0:	mov    edx,r12d
   140001de3:	call   0x140002dd8
   140001de8:	mov    rdi,QWORD PTR [rbp-0x39]
   140001dec:	mov    rbx,r15
   140001def:	mov    r14,QWORD PTR [rbp-0x21]
   140001df3:	mov    rsi,QWORD PTR [rbp-0x29]
   140001df7:	test   rdi,rdi
   140001dfa:	je     0x140001e3f
   140001dfc:	cmp    rbx,rdi
   140001dff:	jb     0x140001e19
   140001e01:	lea    r8,[rip+0x83c0]        # 0x14000a1c8
   140001e08:	mov    edx,0x273
   140001e0d:	lea    rcx,[rip+0x8554]        # 0x14000a368
   140001e14:	call   0x14000740c
   140001e19:	mov    rax,QWORD PTR [rsi+rbx*8]
   140001e1d:	lea    r8,[rip+0x83bc]        # 0x14000a1e0
   140001e24:	mov    r9,rbx
   140001e27:	mov    QWORD PTR [rsp+0x20],rax
   140001e2c:	mov    edx,r12d
   140001e2f:	mov    rcx,r14
   140001e32:	call   0x140002dd8
   140001e37:	add    rbx,r12
   140001e3a:	cmp    rbx,rdi
   140001e3d:	jb     0x140001e19
   140001e3f:	mov    rdx,QWORD PTR [rbp-0x19]
   140001e43:	lea    r8,[rip+0x8036]        # 0x140009e80
   140001e4a:	lea    rcx,[rbp-0x79]
   140001e4e:	mov    QWORD PTR [rbp-0x79],r15
   140001e52:	call   0x140006770
   140001e57:	mov    ebx,eax
   140001e59:	test   eax,eax
   140001e5b:	jns    0x140001f38
   140001e61:	mov    rcx,QWORD PTR [rbp-0x79]
   140001e65:	mov    DWORD PTR [rsp+0x38],eax
   140001e69:	test   rcx,rcx
   140001e6c:	je     0x140001e77
   140001e6e:	add    rcx,0xfffffffffffffff8
   140001e72:	call   0x140007cd8
   140001e77:	mov    rdx,QWORD PTR [rbp-0x19]
   140001e7b:	mov    rcx,QWORD PTR [rbp-0x21]
   140001e7f:	call   0x140002ec4
   140001e84:	mov    rcx,rsi
   140001e87:	call   QWORD PTR [rip+0x739b]        # 0x140009228
   140001e8d:	mov    r14,QWORD PTR [rbp-0x61]
   140001e91:	mov    edi,r15d
   140001e94:	mov    rsi,QWORD PTR [rbp-0x51]
   140001e98:	test   r14,r14
   140001e9b:	je     0x140001ebc
   140001e9d:	mov    rax,r15
   140001ea0:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001ea4:	test   rcx,rcx
   140001ea7:	je     0x140001eb2
   140001ea9:	add    rcx,0xfffffffffffffff8
   140001ead:	call   0x140007cd8
   140001eb2:	add    edi,r12d
   140001eb5:	mov    eax,edi
   140001eb7:	cmp    rax,r14
   140001eba:	jb     0x140001ea0
   140001ebc:	mov    rcx,rsi
   140001ebf:	call   QWORD PTR [rip+0x7363]        # 0x140009228
   140001ec5:	mov    rsi,QWORD PTR [rbp-0x1]
   140001ec9:	mov    edi,r15d
   140001ecc:	mov    r14,QWORD PTR [rbp+0xf]
   140001ed0:	test   rsi,rsi
   140001ed3:	je     0x140001ef4
   140001ed5:	mov    rax,r15
   140001ed8:	mov    rcx,QWORD PTR [r14+rax*8]
   140001edc:	test   rcx,rcx
   140001edf:	je     0x140001eea
   140001ee1:	add    rcx,0xfffffffffffffff8
   140001ee5:	call   0x140007cd8
   140001eea:	add    edi,r12d
   140001eed:	mov    eax,edi
   140001eef:	cmp    rax,rsi
   140001ef2:	jb     0x140001ed8
   140001ef4:	mov    rcx,r14
   140001ef7:	call   QWORD PTR [rip+0x732b]        # 0x140009228
   140001efd:	lea    rax,[rip+0x7664]        # 0x140009568
   140001f04:	mov    DWORD PTR [rbp-0x1],0x166
   140001f0b:	mov    QWORD PTR [rbp-0x11],rax
   140001f0f:	lea    rdx,[rbp-0x11]
   140001f13:	lea    rax,[rip+0x7d8e]        # 0x140009ca8
   140001f1a:	mov    QWORD PTR [rbp-0x9],rax
   140001f1e:	lea    rcx,[rsp+0x38]
   140001f23:	lea    rax,[rip+0x7f76]        # 0x140009ea0
   140001f2a:	mov    QWORD PTR [rbp+0x7],rax
   140001f2e:	call   0x140002dc4
   140001f33:	jmp    0x140001ff5
   140001f38:	mov    rdi,QWORD PTR [rbp-0x79]
   140001f3c:	lea    r9,[rsp+0x38]
   140001f41:	mov    rcx,QWORD PTR [rbp-0x21]
   140001f45:	lea    r8,[rbp-0x49]
   140001f49:	mov    rdx,rdi
   140001f4c:	mov    QWORD PTR [rsp+0x38],r15
   140001f51:	call   0x140001290
   140001f56:	mov    ebx,eax
   140001f58:	test   eax,eax
   140001f5a:	jns    0x140001ffc
   140001f60:	test   rdi,rdi
   140001f63:	je     0x140001f6e
   140001f65:	lea    rcx,[rdi-0x8]
   140001f69:	call   0x140007cd8
   140001f6e:	mov    rdx,QWORD PTR [rbp-0x19]
   140001f72:	mov    rcx,QWORD PTR [rbp-0x21]
   140001f76:	call   0x140002ec4
   140001f7b:	mov    rcx,QWORD PTR [rbp-0x29]
   140001f7f:	call   QWORD PTR [rip+0x72a3]        # 0x140009228
   140001f85:	mov    rsi,QWORD PTR [rbp-0x61]
   140001f89:	mov    edi,r15d
   140001f8c:	mov    r14,QWORD PTR [rbp-0x51]
   140001f90:	test   rsi,rsi
   140001f93:	je     0x140001fb4
   140001f95:	mov    rax,r15
   140001f98:	mov    rcx,QWORD PTR [r14+rax*8]
   140001f9c:	test   rcx,rcx
   140001f9f:	je     0x140001faa
   140001fa1:	add    rcx,0xfffffffffffffff8
   140001fa5:	call   0x140007cd8
   140001faa:	add    edi,r12d
   140001fad:	mov    eax,edi
   140001faf:	cmp    rax,rsi
   140001fb2:	jb     0x140001f98
   140001fb4:	mov    rcx,r14
   140001fb7:	call   QWORD PTR [rip+0x726b]        # 0x140009228
   140001fbd:	mov    r14,QWORD PTR [rbp-0x1]
   140001fc1:	mov    edi,r15d
   140001fc4:	mov    rsi,QWORD PTR [rbp+0xf]
   140001fc8:	test   r14,r14
   140001fcb:	je     0x140001fec
   140001fcd:	mov    rax,r15
   140001fd0:	mov    rcx,QWORD PTR [rsi+rax*8]
   140001fd4:	test   rcx,rcx
   140001fd7:	je     0x140001fe2
   140001fd9:	add    rcx,0xfffffffffffffff8
   140001fdd:	call   0x140007cd8
   140001fe2:	add    edi,r12d
   140001fe5:	mov    eax,edi
   140001fe7:	cmp    rax,r14
   140001fea:	jb     0x140001fd0
   140001fec:	mov    rcx,rsi
   140001fef:	call   QWORD PTR [rip+0x7233]        # 0x140009228
   140001ff5:	mov    eax,ebx
   140001ff7:	jmp    0x1400020ad
   140001ffc:	mov    rcx,QWORD PTR [rbp-0x21]
   140002000:	lea    r8,[rip+0x7ee9]        # 0x140009ef0
   140002007:	mov    edx,r12d
   14000200a:	call   0x140002dd8
   14000200f:	mov    BYTE PTR [rip+0xc5cf],r15b        # 0x14000e5e5
   140002016:	test   rdi,rdi
   140002019:	je     0x140002024
   14000201b:	lea    rcx,[rdi-0x8]
   14000201f:	call   0x140007cd8
   140002024:	mov    rdx,QWORD PTR [rbp-0x19]
   140002028:	mov    rcx,QWORD PTR [rbp-0x21]
   14000202c:	call   0x140002ec4
   140002031:	mov    rcx,QWORD PTR [rbp-0x29]
   140002035:	call   QWORD PTR [rip+0x71ed]        # 0x140009228
   14000203b:	mov    rdi,QWORD PTR [rbp-0x61]
   14000203f:	mov    ebx,r15d
   140002042:	mov    rsi,QWORD PTR [rbp-0x51]
   140002046:	test   rdi,rdi
   140002049:	je     0x14000206a
   14000204b:	mov    rax,r15
   14000204e:	mov    rcx,QWORD PTR [rsi+rax*8]
   140002052:	test   rcx,rcx
   140002055:	je     0x140002060
   140002057:	add    rcx,0xfffffffffffffff8
   14000205b:	call   0x140007cd8
   140002060:	add    ebx,r12d
   140002063:	mov    eax,ebx
   140002065:	cmp    rax,rdi
   140002068:	jb     0x14000204e
   14000206a:	mov    rcx,rsi
   14000206d:	call   QWORD PTR [rip+0x71b5]        # 0x140009228
   140002073:	mov    rsi,QWORD PTR [rbp-0x1]
   140002077:	mov    ebx,r15d
   14000207a:	mov    rdi,QWORD PTR [rbp+0xf]
   14000207e:	test   rsi,rsi
   140002081:	je     0x1400020a2
   140002083:	mov    rax,r15
   140002086:	mov    rcx,QWORD PTR [rdi+rax*8]
   14000208a:	test   rcx,rcx
   14000208d:	je     0x140002098
   14000208f:	add    rcx,0xfffffffffffffff8
   140002093:	call   0x140007cd8
   140002098:	add    ebx,r12d
   14000209b:	mov    eax,ebx
   14000209d:	cmp    rax,rsi
   1400020a0:	jb     0x140002086
   1400020a2:	mov    rcx,rdi
   1400020a5:	call   QWORD PTR [rip+0x717d]        # 0x140009228
   1400020ab:	xor    eax,eax
   1400020ad:	mov    rcx,QWORD PTR [rbp+0x17]
   1400020b1:	xor    rcx,rsp
   1400020b4:	call   0x140008030
   1400020b9:	add    rsp,0xe0
   1400020c0:	pop    r15
   1400020c2:	pop    r14
   1400020c4:	pop    r12
   1400020c6:	pop    rdi
   1400020c7:	pop    rsi
   1400020c8:	pop    rbx
   1400020c9:	pop    rbp
   1400020ca:	ret    
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	int3   
   1400020d1:	int3   
   1400020d2:	int3   
   1400020d3:	int3   
   1400020d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400020de:	push   rbp
   1400020df:	push   rdi
   1400020e0:	push   r13
   1400020e2:	push   r14
   1400020e4:	push   r15
   1400020e6:	lea    rbp,[rsp-0x37]
   1400020eb:	sub    rsp,0xa0
   1400020f2:	mov    rax,QWORD PTR [rip+0xbf0f]        # 0x14000e008
   1400020f9:	xor    rax,rsp
   1400020fc:	mov    QWORD PTR [rbp+0x27],rax
   140002100:	mov    DWORD PTR [rbp-0x19],0x8007054f
   140002107:	mov    rsi,rdx
   14000210a:	cmp    ecx,0x3
   14000210d:	jge    0x140002155
   14000210f:	lea    rcx,[rbp-0x19]
   140002113:	call   0x1400023e8
   140002118:	lea    rax,[rip+0x7449]        # 0x140009568
   14000211f:	mov    DWORD PTR [rbp+0x7],0x179
   140002126:	mov    QWORD PTR [rbp-0x9],rax
   14000212a:	lea    rdx,[rbp-0x9]
   14000212e:	lea    rax,[rip+0x7e13]        # 0x140009f48
   140002135:	mov    QWORD PTR [rbp-0x1],rax
   140002139:	lea    rcx,[rbp-0x19]
   14000213d:	lea    rax,[rip+0x7e0c]        # 0x140009f50
   140002144:	mov    QWORD PTR [rbp+0xf],rax
   140002148:	call   0x140002dc4
   14000214d:	mov    ebx,DWORD PTR [rbp-0x19]
   140002150:	jmp    0x140002376
   140002155:	xor    r9d,r9d
   140002158:	xor    r8d,r8d
   14000215b:	xor    ecx,ecx
   14000215d:	lea    r13d,[r9+0x1]
   140002161:	mov    edx,r13d
   140002164:	call   QWORD PTR [rip+0x6fd6]        # 0x140009140
   14000216a:	xor    edx,edx
   14000216c:	xor    ecx,ecx
   14000216e:	call   QWORD PTR [rip+0x716c]        # 0x1400092e0
   140002174:	mov    ebx,eax
   140002176:	test   eax,eax
   140002178:	jns    0x14000218e
   14000217a:	mov    edi,0x17d
   14000217f:	mov    DWORD PTR [rbp-0x19],eax
   140002182:	lea    rsi,[rip+0x7dd7]        # 0x140009f60
   140002189:	jmp    0x140002224
   14000218e:	and    QWORD PTR [rsp+0x40],0x0
   140002194:	xor    r9d,r9d
   140002197:	and    DWORD PTR [rsp+0x38],0x0
   14000219c:	xor    r8d,r8d
   14000219f:	and    QWORD PTR [rsp+0x30],0x0
   1400021a5:	or     edx,0xffffffff
   1400021a8:	mov    DWORD PTR [rsp+0x28],0x3
   1400021b0:	xor    ecx,ecx
   1400021b2:	mov    DWORD PTR [rsp+0x20],0x5
   1400021ba:	call   QWORD PTR [rip+0x7118]        # 0x1400092d8
   1400021c0:	mov    ebx,eax
   1400021c2:	test   eax,eax
   1400021c4:	jns    0x1400021d7
   1400021c6:	mov    edi,0x180
   1400021cb:	mov    DWORD PTR [rbp-0x19],eax
   1400021ce:	lea    rsi,[rip+0x7dbb]        # 0x140009f90
   1400021d5:	jmp    0x14000221e
   1400021d7:	mov    r14,QWORD PTR [rsi+0x10]
   1400021db:	lea    r8,[rip+0x7dee]        # 0x140009fd0
   1400021e2:	mov    r15,QWORD PTR [rsi+0x8]
   1400021e6:	lea    rcx,[rbp-0x11]
   1400021ea:	and    QWORD PTR [rbp-0x11],0x0
   1400021ef:	mov    rdx,r14
   1400021f2:	call   0x140006770
   1400021f7:	mov    ebx,eax
   1400021f9:	test   eax,eax
   1400021fb:	jns    0x140002253
   1400021fd:	mov    rcx,QWORD PTR [rbp-0x11]
   140002201:	lea    rsi,[rip+0x7df8]        # 0x14000a000
   140002208:	mov    DWORD PTR [rbp-0x19],eax
   14000220b:	mov    edi,0x189
   140002210:	test   rcx,rcx
   140002213:	je     0x14000221e
   140002215:	add    rcx,0xfffffffffffffff8
   140002219:	call   0x140007cd8
   14000221e:	call   QWORD PTR [rip+0x70ac]        # 0x1400092d0
   140002224:	lea    rax,[rip+0x733d]        # 0x140009568
   14000222b:	mov    DWORD PTR [rbp+0x7],edi
   14000222e:	mov    QWORD PTR [rbp-0x9],rax
   140002232:	lea    rdx,[rbp-0x9]
   140002236:	lea    rax,[rip+0x7d0b]        # 0x140009f48
   14000223d:	mov    QWORD PTR [rbp+0xf],rsi
   140002241:	lea    rcx,[rbp-0x19]
   140002245:	mov    QWORD PTR [rbp-0x1],rax
   140002249:	call   0x140002dc4
   14000224e:	jmp    0x140002376
   140002253:	mov    rdi,QWORD PTR [rbp-0x11]
   140002257:	lea    rax,[rip+0x71c2]        # 0x140009420
   14000225e:	and    QWORD PTR [rbp+0x1f],0x0
   140002263:	lea    rdx,[rip+0x8086]        # 0x14000a2f0
   14000226a:	mov    rcx,rdi
   14000226d:	mov    QWORD PTR [rbp+0x17],rax
   140002271:	call   QWORD PTR [rip+0x6fd9]        # 0x140009250
   140002277:	mov    r9,QWORD PTR [rsi]
   14000227a:	lea    r8,[rip+0x7ddf]        # 0x14000a060
   140002281:	mov    edx,r13d
   140002284:	mov    QWORD PTR [rsp+0x28],r14
   140002289:	lea    rcx,[rbp+0x17]
   14000228d:	mov    QWORD PTR [rbp+0x1f],rax
   140002291:	mov    QWORD PTR [rsp+0x20],r15
   140002296:	call   0x140002dd8
   14000229b:	mov    edx,r13d
   14000229e:	mov    ecx,0x480
   1400022a3:	call   QWORD PTR [rip+0x6e8f]        # 0x140009138
   1400022a9:	mov    ebx,0x80070000
   1400022ae:	test   eax,eax
   1400022b0:	jne    0x1400022da
   1400022b2:	call   QWORD PTR [rip+0x6e90]        # 0x140009148
   1400022b8:	movzx  r9d,ax
   1400022bc:	lea    r8,[rip+0x7e0d]        # 0x14000a0d0
   1400022c3:	mov    edx,0x3
   1400022c8:	lea    rcx,[rbp+0x17]
   1400022cc:	or     r9d,ebx
   1400022cf:	test   eax,eax
   1400022d1:	cmovle r9d,eax
   1400022d5:	call   0x140002dd8
   1400022da:	mov    edx,r13d
   1400022dd:	lea    rcx,[rip+0xffffffffffffed3c]        # 0x140001020
   1400022e4:	call   QWORD PTR [rip+0x6e46]        # 0x140009130
   1400022ea:	test   eax,eax
   1400022ec:	jne    0x140002316
   1400022ee:	call   QWORD PTR [rip+0x6e54]        # 0x140009148
   1400022f4:	movzx  r9d,ax
   1400022f8:	lea    r8,[rip+0x7e61]        # 0x14000a160
   1400022ff:	mov    edx,0x3
   140002304:	lea    rcx,[rbp+0x17]
   140002308:	or     r9d,ebx
   14000230b:	test   eax,eax
   14000230d:	cmovle r9d,eax
   140002311:	call   0x140002dd8
   140002316:	mov    rdx,QWORD PTR [rsi]
   140002319:	lea    rcx,[rbp+0x17]
   14000231d:	mov    r9,r14
   140002320:	mov    r8,r15
   140002323:	call   0x140001adc
   140002328:	mov    ebx,eax
   14000232a:	test   eax,eax
   14000232c:	lea    rax,[rip+0x70ed]        # 0x140009420
   140002333:	mov    QWORD PTR [rbp+0x17],rax
   140002337:	jns    0x14000237a
   140002339:	cmp    QWORD PTR [rbp+0x1f],0x0
   14000233e:	je     0x140002357
   140002340:	mov    ecx,r13d
   140002343:	call   0x140008638
   140002348:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000234c:	cmp    rcx,rax
   14000234f:	je     0x140002357
   140002351:	call   QWORD PTR [rip+0x6eb1]        # 0x140009208
   140002357:	lea    rax,[rip+0x70b2]        # 0x140009410
   14000235e:	mov    QWORD PTR [rbp+0x17],rax
   140002362:	test   rdi,rdi
   140002365:	je     0x140002370
   140002367:	lea    rcx,[rdi-0x8]
   14000236b:	call   0x140007cd8
   140002370:	call   QWORD PTR [rip+0x6f5a]        # 0x1400092d0
   140002376:	mov    eax,ebx
   140002378:	jmp    0x1400023b9
   14000237a:	cmp    QWORD PTR [rbp+0x1f],0x0
   14000237f:	je     0x140002398
   140002381:	mov    ecx,r13d
   140002384:	call   0x140008638
   140002389:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000238d:	cmp    rcx,rax
   140002390:	je     0x140002398
   140002392:	call   QWORD PTR [rip+0x6e70]        # 0x140009208
   140002398:	lea    rax,[rip+0x7071]        # 0x140009410
   14000239f:	mov    QWORD PTR [rbp+0x17],rax
   1400023a3:	test   rdi,rdi
   1400023a6:	je     0x1400023b1
   1400023a8:	lea    rcx,[rdi-0x8]
   1400023ac:	call   0x140007cd8
   1400023b1:	call   QWORD PTR [rip+0x6f19]        # 0x1400092d0
   1400023b7:	xor    eax,eax
   1400023b9:	mov    rcx,QWORD PTR [rbp+0x27]
   1400023bd:	xor    rcx,rsp
   1400023c0:	call   0x140008030
   1400023c5:	lea    r11,[rsp+0xa0]
   1400023cd:	mov    rbx,QWORD PTR [r11+0x30]
   1400023d1:	mov    rsi,QWORD PTR [r11+0x40]
   1400023d5:	mov    rsp,r11
   1400023d8:	pop    r15
   1400023da:	pop    r14
   1400023dc:	pop    r13
   1400023de:	pop    rdi
   1400023df:	pop    rbp
   1400023e0:	ret    
   1400023e1:	int3   
   1400023e2:	int3   
   1400023e3:	int3   
   1400023e4:	int3   
   1400023e5:	int3   
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	mov    DWORD PTR [rcx],0x80070057
   1400023ee:	ret    
   1400023ef:	int3   
   1400023f0:	int3   
   1400023f1:	int3   
   1400023f2:	int3   
   1400023f3:	int3   
   1400023f4:	int3   
   1400023f5:	int3   
   1400023f6:	int3   
   1400023f7:	int3   
   1400023f8:	mov    DWORD PTR [rcx],0x80004003
   1400023fe:	ret    
   1400023ff:	int3   
   140002400:	int3   
   140002401:	int3   
   140002402:	int3   
   140002403:	int3   
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	mov    rax,rsp
   14000240b:	mov    QWORD PTR [rax+0x8],rbx
   14000240f:	mov    QWORD PTR [rax+0x10],rbp
   140002413:	mov    QWORD PTR [rax+0x18],rsi
   140002417:	mov    QWORD PTR [rax+0x20],rdi
   14000241b:	push   r14
   14000241d:	sub    rsp,0x20
   140002421:	xor    ebx,ebx
   140002423:	mov    rdi,rdx
   140002426:	mov    rsi,rcx
   140002429:	test   rdx,rdx
   14000242c:	jne    0x140002446
   14000242e:	lea    r8,[rip+0x7dbb]        # 0x14000a1f0
   140002435:	mov    edx,0x2a2
   14000243a:	lea    rcx,[rip+0x7f27]        # 0x14000a368
   140002441:	call   0x14000740c
   140002446:	mov    rcx,QWORD PTR [rdi+0x20]
   14000244a:	call   QWORD PTR [rip+0x6dd8]        # 0x140009228
   140002450:	mov    QWORD PTR [rdi+0x20],rbx
   140002454:	mov    rbp,rbx
   140002457:	mov    QWORD PTR [rdi+0x10],rbx
   14000245b:	mov    QWORD PTR [rdi+0x18],rbx
   14000245f:	cmp    QWORD PTR [rsi+0x20],rbx
   140002463:	je     0x1400024ad
   140002465:	mov    r14,QWORD PTR [rsi+0x18]
   140002469:	shl    r14,0x3
   14000246d:	mov    rcx,r14
   140002470:	call   QWORD PTR [rip+0x6daa]        # 0x140009220
   140002476:	mov    rbp,rax
   140002479:	test   rax,rax
   14000247c:	jne    0x14000249c
   14000247e:	mov    edx,0x8007000e
   140002483:	lea    r9,[rip+0x7d6e]        # 0x14000a1f8
   14000248a:	mov    ecx,0x4000000
   14000248f:	lea    r8d,[rax+0x1]
   140002493:	mov    ebx,edx
   140002495:	call   0x140007244
   14000249a:	jmp    0x1400024df
   14000249c:	mov    rdx,QWORD PTR [rsi+0x20]
   1400024a0:	mov    r8,r14
   1400024a3:	mov    rcx,rax
   1400024a6:	call   0x140008806
   1400024ab:	jmp    0x1400024cb
   1400024ad:	cmp    QWORD PTR [rsi+0x10],rbx
   1400024b1:	je     0x1400024cb
   1400024b3:	lea    r8,[rip+0x7e9e]        # 0x14000a358
   1400024ba:	mov    edx,0x2b2
   1400024bf:	lea    rcx,[rip+0x7ea2]        # 0x14000a368
   1400024c6:	call   0x14000740c
   1400024cb:	mov    QWORD PTR [rdi+0x20],rbp
   1400024cf:	mov    rcx,QWORD PTR [rsi+0x10]
   1400024d3:	mov    QWORD PTR [rdi+0x10],rcx
   1400024d7:	mov    rcx,QWORD PTR [rsi+0x18]
   1400024db:	mov    QWORD PTR [rdi+0x18],rcx
   1400024df:	mov    rbp,QWORD PTR [rsp+0x38]
   1400024e4:	mov    eax,ebx
   1400024e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024eb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400024f0:	mov    rdi,QWORD PTR [rsp+0x48]
   1400024f5:	add    rsp,0x20
   1400024f9:	pop    r14
   1400024fb:	ret    
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	int3   
   140002501:	int3   
   140002502:	int3   
   140002503:	int3   
   140002504:	mov    QWORD PTR [rsp+0x8],rbx
   140002509:	mov    QWORD PTR [rsp+0x10],rbp
   14000250e:	mov    QWORD PTR [rsp+0x18],rsi
   140002513:	push   rdi
   140002514:	push   r12
   140002516:	push   r13
   140002518:	push   r14
   14000251a:	push   r15
   14000251c:	sub    rsp,0x20
   140002520:	mov    r14,QWORD PTR [rcx+0x10]
   140002524:	xor    esi,esi
   140002526:	mov    r13,rdx
   140002529:	mov    rbx,rcx
   14000252c:	mov    edi,0x4000000
   140002531:	cmp    QWORD PTR [rcx+0x20],rsi
   140002535:	jne    0x140002599
   140002537:	mov    rax,QWORD PTR [rcx+0x18]
   14000253b:	dec    rax
   14000253e:	cmp    rax,0xffffffe
   140002544:	jbe    0x14000254e
   140002546:	mov    QWORD PTR [rcx+0x18],0x8
   14000254e:	mov    rbp,QWORD PTR [rcx+0x18]
   140002552:	shl    rbp,0x3
   140002556:	mov    rcx,rbp
   140002559:	call   QWORD PTR [rip+0x6cc1]        # 0x140009220
   14000255f:	mov    QWORD PTR [rbx+0x20],rax
   140002563:	test   rax,rax
   140002566:	je     0x1400025da
   140002568:	mov    rdi,rax
   14000256b:	mov    rcx,rbp
   14000256e:	xor    eax,eax
   140002570:	rep stos BYTE PTR es:[rdi],al
   140002572:	cmp    QWORD PTR [rbx+0x10],rax
   140002576:	je     0x140002664
   14000257c:	lea    r8,[rip+0x7dd5]        # 0x14000a358
   140002583:	mov    edx,0x318
   140002588:	lea    rcx,[rip+0x7dd9]        # 0x14000a368
   14000258f:	call   0x14000740c
   140002594:	jmp    0x140002664
   140002599:	mov    r15,QWORD PTR [rcx+0x18]
   14000259d:	cmp    r14,r15
   1400025a0:	jb     0x140002642
   1400025a6:	add    r15,r15
   1400025a9:	cmp    r15,0xfffffff
   1400025b0:	jbe    0x1400025c2
   1400025b2:	mov    esi,0x800288c5
   1400025b7:	lea    r9,[rip+0x7dca]        # 0x14000a388
   1400025be:	mov    edx,esi
   1400025c0:	jmp    0x1400025e8
   1400025c2:	mov    r12,r15
   1400025c5:	shl    r12,0x3
   1400025c9:	mov    rcx,r12
   1400025cc:	call   QWORD PTR [rip+0x6c4e]        # 0x140009220
   1400025d2:	mov    rbp,rax
   1400025d5:	test   rax,rax
   1400025d8:	jne    0x14000260d
   1400025da:	mov    edx,0x8007000e
   1400025df:	lea    r9,[rip+0x7dba]        # 0x14000a3a0
   1400025e6:	mov    esi,edx
   1400025e8:	mov    r8d,0x1
   1400025ee:	mov    ecx,edi
   1400025f0:	call   0x140007244
   1400025f5:	lea    r9,[rip+0x7dbc]        # 0x14000a3b8
   1400025fc:	mov    r8d,0x1
   140002602:	mov    edx,esi
   140002604:	mov    ecx,edi
   140002606:	call   0x140007244
   14000260b:	jmp    0x140002679
   14000260d:	mov    rdi,rax
   140002610:	mov    rcx,r12
   140002613:	xor    eax,eax
   140002615:	rep stos BYTE PTR es:[rdi],al
   140002617:	mov    rdx,QWORD PTR [rbx+0x20]
   14000261b:	test   rdx,rdx
   14000261e:	je     0x14000263a
   140002620:	mov    r8,QWORD PTR [rbx+0x18]
   140002624:	mov    rcx,rbp
   140002627:	shl    r8,0x3
   14000262b:	call   0x140008806
   140002630:	mov    rcx,QWORD PTR [rbx+0x20]
   140002634:	call   QWORD PTR [rip+0x6bee]        # 0x140009228
   14000263a:	mov    QWORD PTR [rbx+0x18],r15
   14000263e:	mov    QWORD PTR [rbx+0x20],rbp
   140002642:	mov    r8,QWORD PTR [rbx+0x10]
   140002646:	cmp    r14,r8
   140002649:	jae    0x140002664
   14000264b:	mov    rax,QWORD PTR [rbx+0x20]
   14000264f:	sub    r8,r14
   140002652:	shl    r8,0x3
   140002656:	lea    rdx,[rax+r14*8]
   14000265a:	lea    rcx,[rdx+0x8]
   14000265e:	call   QWORD PTR [rip+0x6bcc]        # 0x140009230
   140002664:	inc    QWORD PTR [rbx+0x10]
   140002668:	mov    rdi,QWORD PTR [rbx+0x20]
   14000266c:	mov    rdx,QWORD PTR [r13+0x0]
   140002670:	mov    QWORD PTR [rdi+r14*8],rdx
   140002674:	mov    edi,0x4000000
   140002679:	test   esi,esi
   14000267b:	jns    0x140002693
   14000267d:	lea    r9,[rip+0x7d5c]        # 0x14000a3e0
   140002684:	mov    r8d,0x1
   14000268a:	mov    edx,esi
   14000268c:	mov    ecx,edi
   14000268e:	call   0x140007244
   140002693:	mov    rbx,QWORD PTR [rsp+0x50]
   140002698:	mov    eax,esi
   14000269a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000269f:	mov    rbp,QWORD PTR [rsp+0x58]
   1400026a4:	add    rsp,0x20
   1400026a8:	pop    r15
   1400026aa:	pop    r14
   1400026ac:	pop    r13
   1400026ae:	pop    r12
   1400026b0:	pop    rdi
   1400026b1:	ret    
   1400026b2:	int3   
   1400026b3:	int3   
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026c5:	push   rdi
   1400026c6:	sub    rsp,0x20
   1400026ca:	lea    rax,[rip+0x6d07]        # 0x1400093d8
   1400026d1:	mov    rdi,rcx
   1400026d4:	mov    QWORD PTR [rcx],rax
   1400026d7:	mov    ebx,edx
   1400026d9:	mov    rcx,QWORD PTR [rcx+0x20]
   1400026dd:	call   QWORD PTR [rip+0x6b45]        # 0x140009228
   1400026e3:	xor    eax,eax
   1400026e5:	mov    QWORD PTR [rdi+0x20],rax
   1400026e9:	mov    QWORD PTR [rdi+0x10],rax
   1400026ed:	mov    QWORD PTR [rdi+0x18],rax
   1400026f1:	lea    rax,[rip+0x6d38]        # 0x140009430
   1400026f8:	mov    QWORD PTR [rdi],rax
   1400026fb:	test   bl,0x1
   1400026fe:	je     0x140002708
   140002700:	mov    rcx,rdi
   140002703:	call   0x140007cd8
   140002708:	mov    rax,rdi
   14000270b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002710:	add    rsp,0x20
   140002714:	pop    rdi
   140002715:	ret    
   140002716:	int3   
   140002717:	int3   
   140002718:	int3   
   140002719:	int3   
   14000271a:	int3   
   14000271b:	int3   
   14000271c:	mov    QWORD PTR [rsp+0x8],rbx
   140002721:	mov    QWORD PTR [rsp+0x10],rsi
   140002726:	push   rdi
   140002727:	sub    rsp,0x30
   14000272b:	mov    rax,QWORD PTR [r8+0x10]
   14000272f:	xor    ebx,ebx
   140002731:	mov    rdi,r8
   140002734:	mov    rsi,rcx
   140002737:	test   rax,rax
   14000273a:	je     0x140002786
   14000273c:	cmp    rbx,rax
   14000273f:	jb     0x140002759
   140002741:	lea    r8,[rip+0x7a80]        # 0x14000a1c8
   140002748:	mov    edx,0x273
   14000274d:	lea    rcx,[rip+0x7c14]        # 0x14000a368
   140002754:	call   0x14000740c
   140002759:	mov    rax,QWORD PTR [rdi+0x20]
   14000275d:	lea    r8,[rip+0x7a7c]        # 0x14000a1e0
   140002764:	mov    r9,rbx
   140002767:	xor    edx,edx
   140002769:	mov    rcx,QWORD PTR [rax+rbx*8]
   14000276d:	mov    QWORD PTR [rsp+0x20],rcx
   140002772:	mov    rcx,rsi
   140002775:	call   0x140002dd8
   14000277a:	mov    rax,QWORD PTR [rdi+0x10]
   14000277e:	inc    rbx
   140002781:	cmp    rbx,rax
   140002784:	jb     0x140002759
   140002786:	mov    rbx,QWORD PTR [rsp+0x40]
   14000278b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002790:	add    rsp,0x30
   140002794:	pop    rdi
   140002795:	ret    
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	rex push rbx
   1400027a2:	sub    rsp,0x20
   1400027a6:	lea    rax,[rip+0x6c63]        # 0x140009410
   1400027ad:	mov    rbx,rcx
   1400027b0:	mov    QWORD PTR [rcx],rax
   1400027b3:	test   dl,0x1
   1400027b6:	je     0x1400027bd
   1400027b8:	call   0x140007cd8
   1400027bd:	mov    rax,rbx
   1400027c0:	add    rsp,0x20
   1400027c4:	pop    rbx
   1400027c5:	ret    
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400027d5:	push   rbp
   1400027d6:	push   rsi
   1400027d7:	push   rdi
   1400027d8:	mov    rbp,rsp
   1400027db:	sub    rsp,0x70
   1400027df:	mov    rax,QWORD PTR [rip+0xb822]        # 0x14000e008
   1400027e6:	xor    rax,rsp
   1400027e9:	mov    QWORD PTR [rbp-0x8],rax
   1400027ed:	cmp    QWORD PTR [rcx+0x8],0x0
   1400027f2:	mov    rsi,r8
   1400027f5:	mov    rdi,rcx
   1400027f8:	je     0x1400028b1
   1400027fe:	test   edx,edx
   140002800:	je     0x1400028b1
   140002806:	sub    edx,0x1
   140002809:	je     0x140002830
   14000280b:	sub    edx,0x1
   14000280e:	je     0x140002827
   140002810:	cmp    edx,0x1
   140002813:	je     0x14000281e
   140002815:	lea    rbx,[rip+0x7a54]        # 0x14000a270
   14000281c:	jmp    0x140002837
   14000281e:	lea    rbx,[rip+0x7a33]        # 0x14000a258
   140002825:	jmp    0x140002837
   140002827:	lea    rbx,[rip+0x7a12]        # 0x14000a240
   14000282e:	jmp    0x140002837
   140002830:	lea    rbx,[rip+0x79f1]        # 0x14000a228
   140002837:	and    DWORD PTR [rbp-0x20],0x0
   14000283b:	lea    rcx,[rbp-0x20]
   14000283f:	xor    eax,eax
   140002841:	xorps  xmm0,xmm0
   140002844:	mov    DWORD PTR [rbp-0x1c],eax
   140002847:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   14000284c:	call   QWORD PTR [rip+0x6a46]        # 0x140009298
   140002852:	lea    rdx,[rbp-0x18]
   140002856:	lea    rcx,[rbp-0x20]
   14000285a:	call   QWORD PTR [rip+0x6a30]        # 0x140009290
   140002860:	movsx  ecx,WORD PTR [rbp-0x10]
   140002864:	movsx  edx,WORD PTR [rbp-0x12]
   140002868:	movsx  eax,WORD PTR [rbp-0xe]
   14000286c:	movsx  r10d,WORD PTR [rbp-0x14]
   140002871:	movsx  r9d,WORD PTR [rbp-0x16]
   140002876:	movsx  r8d,WORD PTR [rbp-0x18]
   14000287b:	mov    QWORD PTR [rsp+0x48],rsi
   140002880:	mov    QWORD PTR [rsp+0x40],rbx
   140002885:	mov    DWORD PTR [rsp+0x38],eax
   140002889:	mov    DWORD PTR [rsp+0x30],ecx
   14000288d:	mov    rcx,QWORD PTR [rdi+0x8]
   140002891:	mov    DWORD PTR [rsp+0x28],edx
   140002895:	lea    rdx,[rip+0x79f4]        # 0x14000a290
   14000289c:	mov    DWORD PTR [rsp+0x20],r10d
   1400028a1:	call   QWORD PTR [rip+0x6969]        # 0x140009210
   1400028a7:	mov    rcx,QWORD PTR [rdi+0x8]
   1400028ab:	call   QWORD PTR [rip+0x6967]        # 0x140009218
   1400028b1:	xor    eax,eax
   1400028b3:	mov    rcx,QWORD PTR [rbp-0x8]
   1400028b7:	xor    rcx,rsp
   1400028ba:	call   0x140008030
   1400028bf:	mov    rbx,QWORD PTR [rsp+0x98]
   1400028c7:	add    rsp,0x70
   1400028cb:	pop    rdi
   1400028cc:	pop    rsi
   1400028cd:	pop    rbp
   1400028ce:	ret    
   1400028cf:	int3   
   1400028d0:	int3   
   1400028d1:	int3   
   1400028d2:	int3   
   1400028d3:	int3   
   1400028d4:	int3   
   1400028d5:	int3   
   1400028d6:	int3   
   1400028d7:	int3   
   1400028d8:	int3   
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400028ea:	push   rdi
   1400028eb:	sub    rsp,0x20
   1400028ef:	cmp    QWORD PTR [rcx+0x8],0x0
   1400028f4:	lea    rax,[rip+0x6b25]        # 0x140009420
   1400028fb:	mov    QWORD PTR [rcx],rax
   1400028fe:	mov    esi,edx
   140002900:	mov    rbx,rcx
   140002903:	je     0x140002921
   140002905:	mov    rdi,QWORD PTR [rcx+0x8]
   140002909:	mov    ecx,0x1
   14000290e:	call   0x140008638
   140002913:	cmp    rdi,rax
   140002916:	je     0x140002921
   140002918:	mov    rcx,rdi
   14000291b:	call   QWORD PTR [rip+0x68e7]        # 0x140009208
   140002921:	lea    rax,[rip+0x6ae8]        # 0x140009410
   140002928:	mov    QWORD PTR [rbx],rax
   14000292b:	test   sil,0x1
   14000292f:	je     0x140002939
   140002931:	mov    rcx,rbx
   140002934:	call   0x140007cd8
   140002939:	mov    rsi,QWORD PTR [rsp+0x38]
   14000293e:	mov    rax,rbx
   140002941:	mov    rbx,QWORD PTR [rsp+0x30]
   140002946:	add    rsp,0x20
   14000294a:	pop    rdi
   14000294b:	ret    
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	int3   
   140002951:	int3   
   140002952:	int3   
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	mov    QWORD PTR [rsp+0x8],rbx
   140002965:	mov    QWORD PTR [rsp+0x10],rsi
   14000296a:	push   rdi
   14000296b:	sub    rsp,0x20
   14000296f:	xor    edi,edi
   140002971:	lea    rax,[rip+0x6af0]        # 0x140009468
   140002978:	mov    esi,edx
   14000297a:	mov    rbx,rcx
   14000297d:	mov    QWORD PTR [rcx],rax
   140002980:	cmp    QWORD PTR [rcx+0x10],rdi
   140002984:	jbe    0x1400029a8
   140002986:	xor    ecx,ecx
   140002988:	mov    rax,QWORD PTR [rbx+0x20]
   14000298c:	mov    rcx,QWORD PTR [rax+rcx*8]
   140002990:	test   rcx,rcx
   140002993:	je     0x14000299e
   140002995:	add    rcx,0xfffffffffffffff8
   140002999:	call   0x140007cd8
   14000299e:	inc    edi
   1400029a0:	mov    ecx,edi
   1400029a2:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400029a6:	jb     0x140002988
   1400029a8:	mov    rcx,QWORD PTR [rbx+0x20]
   1400029ac:	call   QWORD PTR [rip+0x6876]        # 0x140009228
   1400029b2:	and    QWORD PTR [rbx+0x20],0x0
   1400029b7:	lea    rax,[rip+0x6a72]        # 0x140009430
   1400029be:	and    QWORD PTR [rbx+0x10],0x0
   1400029c3:	and    QWORD PTR [rbx+0x18],0x0
   1400029c8:	mov    QWORD PTR [rbx],rax
   1400029cb:	test   sil,0x1
   1400029cf:	je     0x1400029d9
   1400029d1:	mov    rcx,rbx
   1400029d4:	call   0x140007cd8
   1400029d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400029de:	mov    rax,rbx
   1400029e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029e6:	add    rsp,0x20
   1400029ea:	pop    rdi
   1400029eb:	ret    
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	int3   
   1400029f1:	int3   
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	mov    rax,rsp
   140002a03:	mov    QWORD PTR [rax+0x8],rbx
   140002a07:	mov    QWORD PTR [rax+0x10],rbp
   140002a0b:	mov    QWORD PTR [rax+0x18],rsi
   140002a0f:	mov    QWORD PTR [rax+0x20],rdi
   140002a13:	push   r14
   140002a15:	sub    rsp,0x20
   140002a19:	xor    ebp,ebp
   140002a1b:	mov    r14,r8
   140002a1e:	mov    rdi,rdx
   140002a21:	mov    rsi,rcx
   140002a24:	test   r8,r8
   140002a27:	jne    0x140002a4a
   140002a29:	mov    edx,0x80070057
   140002a2e:	lea    r9,[rip+0x79f3]        # 0x14000a428
   140002a35:	mov    ecx,0x4000000
   140002a3a:	lea    r8d,[r14+0x1]
   140002a3e:	mov    ebp,edx
   140002a40:	call   0x140007244
   140002a45:	jmp    0x140002ad6
   140002a4a:	mov    QWORD PTR [r8],rbp
   140002a4d:	mov    rax,QWORD PTR [rip+0x78ac]        # 0x14000a300
   140002a54:	cmp    rax,QWORD PTR [rdx]
   140002a57:	jne    0x140002a66
   140002a59:	mov    rax,QWORD PTR [rip+0x78a8]        # 0x14000a308
   140002a60:	cmp    rax,QWORD PTR [rdx+0x8]
   140002a64:	je     0x140002a7f
   140002a66:	mov    rax,QWORD PTR [rip+0x8a63]        # 0x14000b4d0
   140002a6d:	cmp    rax,QWORD PTR [rdx]
   140002a70:	jne    0x140002a84
   140002a72:	mov    rax,QWORD PTR [rip+0x8a5f]        # 0x14000b4d8
   140002a79:	cmp    rax,QWORD PTR [rdx+0x8]
   140002a7d:	jne    0x140002a84
   140002a7f:	mov    QWORD PTR [r8],rcx
   140002a82:	jmp    0x140002ac1
   140002a84:	mov    rcx,QWORD PTR [rip+0x79bd]        # 0x14000a448
   140002a8b:	mov    rax,QWORD PTR [rip+0x79be]        # 0x14000a450
   140002a92:	cmp    rcx,QWORD PTR [rdx]
   140002a95:	jne    0x140002ada
   140002a97:	cmp    rax,QWORD PTR [rdx+0x8]
   140002a9b:	je     0x140002abe
   140002a9d:	cmp    rcx,QWORD PTR [rdx]
   140002aa0:	jne    0x140002ada
   140002aa2:	cmp    rax,QWORD PTR [rdx+0x8]
   140002aa6:	je     0x140002abe
   140002aa8:	cmp    rcx,QWORD PTR [rdx]
   140002aab:	jne    0x140002ada
   140002aad:	cmp    rax,QWORD PTR [rdx+0x8]
   140002ab1:	je     0x140002abe
   140002ab3:	cmp    rcx,QWORD PTR [rdx]
   140002ab6:	jne    0x140002ada
   140002ab8:	cmp    rax,QWORD PTR [rdx+0x8]
   140002abc:	jne    0x140002ada
   140002abe:	mov    QWORD PTR [r8],rsi
   140002ac1:	mov    rcx,QWORD PTR [rsi]
   140002ac4:	mov    rbx,QWORD PTR [rcx+0x8]
   140002ac8:	mov    rcx,rbx
   140002acb:	call   QWORD PTR [rip+0x681f]        # 0x1400092f0
   140002ad1:	mov    rcx,rsi
   140002ad4:	call   rbx
   140002ad6:	mov    eax,ebp
   140002ad8:	jmp    0x140002af5
   140002ada:	mov    rax,QWORD PTR [rsi]
   140002add:	mov    rbx,QWORD PTR [rax+0x30]
   140002ae1:	mov    rcx,rbx
   140002ae4:	call   QWORD PTR [rip+0x6806]        # 0x1400092f0
   140002aea:	mov    r8,r14
   140002aed:	mov    rdx,rdi
   140002af0:	mov    rcx,rsi
   140002af3:	call   rbx
   140002af5:	mov    rbx,QWORD PTR [rsp+0x30]
   140002afa:	mov    rbp,QWORD PTR [rsp+0x38]
   140002aff:	mov    rsi,QWORD PTR [rsp+0x40]
   140002b04:	mov    rdi,QWORD PTR [rsp+0x48]
   140002b09:	add    rsp,0x20
   140002b0d:	pop    r14
   140002b0f:	ret    
   140002b10:	int3   
   140002b11:	int3   
   140002b12:	int3   
   140002b13:	int3   
   140002b14:	int3   
   140002b15:	int3   
   140002b16:	int3   
   140002b17:	int3   
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	mov    QWORD PTR [rsp+0x8],rbx
   140002b25:	push   rdi
   140002b26:	sub    rsp,0x20
   140002b2a:	mov    rax,QWORD PTR [rcx]
   140002b2d:	mov    rdi,rcx
   140002b30:	mov    rbx,QWORD PTR [rax+0x20]
   140002b34:	mov    rcx,rbx
   140002b37:	call   QWORD PTR [rip+0x67b3]        # 0x1400092f0
   140002b3d:	mov    rcx,rdi
   140002b40:	call   rbx
   140002b42:	mov    eax,0x1
   140002b47:	lock xadd DWORD PTR [rdi+0x8],eax
   140002b4c:	inc    eax
   140002b4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b53:	add    rsp,0x20
   140002b57:	pop    rdi
   140002b58:	ret    
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	rex push rbx
   140002b62:	sub    rsp,0x20
   140002b66:	lea    rax,[rip+0x68c3]        # 0x140009430
   140002b6d:	mov    rbx,rcx
   140002b70:	mov    QWORD PTR [rcx],rax
   140002b73:	test   dl,0x1
   140002b76:	je     0x140002b7d
   140002b78:	call   0x140007cd8
   140002b7d:	mov    rax,rbx
   140002b80:	add    rsp,0x20
   140002b84:	pop    rbx
   140002b85:	ret    
   140002b86:	int3   
   140002b87:	int3   
   140002b88:	int3   
   140002b89:	int3   
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    QWORD PTR [rsp+0x8],rbx
   140002b95:	push   rdi
   140002b96:	sub    rsp,0x20
   140002b9a:	mov    rax,QWORD PTR [rcx]
   140002b9d:	mov    rdi,rcx
   140002ba0:	mov    rbx,QWORD PTR [rax+0x28]
   140002ba4:	mov    rcx,rbx
   140002ba7:	call   QWORD PTR [rip+0x6743]        # 0x1400092f0
   140002bad:	mov    rcx,rdi
   140002bb0:	call   rbx
   140002bb2:	or     eax,0xffffffff
   140002bb5:	lock xadd DWORD PTR [rdi+0x8],eax
   140002bba:	sub    eax,0x1
   140002bbd:	jg     0x140002bdb
   140002bbf:	mov    rax,QWORD PTR [rdi]
   140002bc2:	mov    rbx,QWORD PTR [rax+0x18]
   140002bc6:	mov    rcx,rbx
   140002bc9:	call   QWORD PTR [rip+0x6721]        # 0x1400092f0
   140002bcf:	mov    edx,0x1
   140002bd4:	mov    rcx,rdi
   140002bd7:	call   rbx
   140002bd9:	xor    eax,eax
   140002bdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140002be0:	add    rsp,0x20
   140002be4:	pop    rdi
   140002be5:	ret    
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	ret    0x0
   140002bf3:	int3   
   140002bf4:	int3   
   140002bf5:	int3   
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    eax,0x80004002
   140002c05:	ret    
   140002c06:	int3   
   140002c07:	int3   
   140002c08:	int3   
   140002c09:	int3   
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	mov    QWORD PTR [rsp+0x8],rbx
   140002c11:	mov    QWORD PTR [rsp+0x10],rsi
   140002c16:	mov    QWORD PTR [rsp+0x18],rdi
   140002c1b:	push   r14
   140002c1d:	sub    rsp,0x20
   140002c21:	mov    rdx,QWORD PTR [rcx+0x10]
   140002c25:	mov    rbx,rcx
   140002c28:	cmp    rdx,0x1
   140002c2c:	jbe    0x140002cb8
   140002c32:	lea    rax,[rdx-0x1]
   140002c36:	test   rax,rax
   140002c39:	je     0x140002cb8
   140002c3b:	xor    r14d,r14d
   140002c3e:	lea    esi,[r14+0x1]
   140002c42:	mov    rdi,rsi
   140002c45:	cmp    rsi,rdx
   140002c48:	jae    0x140002ca0
   140002c4a:	lea    rax,[rip+0x492f]        # 0x140007580
   140002c51:	test   rax,rax
   140002c54:	je     0x140002c6c
   140002c56:	mov    rcx,QWORD PTR [rbx+0x20]
   140002c5a:	mov    rdx,QWORD PTR [rcx+rdi*8]
   140002c5e:	mov    rcx,QWORD PTR [r14+rcx*1]
   140002c62:	call   QWORD PTR [rip+0x65d8]        # 0x140009240
   140002c68:	mov    ecx,eax
   140002c6a:	jmp    0x140002c7b
   140002c6c:	mov    rax,QWORD PTR [rbx+0x20]
   140002c70:	mov    rcx,QWORD PTR [r14+rax*1]
   140002c74:	sub    rcx,QWORD PTR [rax+rdi*8]
   140002c78:	sar    rcx,1
   140002c7b:	test   ecx,ecx
   140002c7d:	jle    0x140002c97
   140002c7f:	mov    rcx,QWORD PTR [rbx+0x20]
   140002c83:	mov    rax,QWORD PTR [rcx+rdi*8]
   140002c87:	mov    rdx,QWORD PTR [r14+rcx*1]
   140002c8b:	mov    QWORD PTR [r14+rcx*1],rax
   140002c8f:	mov    rax,QWORD PTR [rbx+0x20]
   140002c93:	mov    QWORD PTR [rax+rdi*8],rdx
   140002c97:	inc    rdi
   140002c9a:	cmp    rdi,QWORD PTR [rbx+0x10]
   140002c9e:	jb     0x140002c4a
   140002ca0:	mov    rdx,QWORD PTR [rbx+0x10]
   140002ca4:	inc    rsi
   140002ca7:	add    r14,0x8
   140002cab:	lea    rcx,[rsi-0x1]
   140002caf:	lea    rax,[rdx-0x1]
   140002cb3:	cmp    rcx,rax
   140002cb6:	jb     0x140002c42
   140002cb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cbd:	mov    rsi,QWORD PTR [rsp+0x38]
   140002cc2:	mov    rdi,QWORD PTR [rsp+0x40]
   140002cc7:	add    rsp,0x20
   140002ccb:	pop    r14
   140002ccd:	ret    
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	int3   
   140002cd1:	int3   
   140002cd2:	int3   
   140002cd3:	int3   
   140002cd4:	mov    QWORD PTR [rsp+0x8],rbx
   140002cd9:	push   rdi
   140002cda:	sub    rsp,0x20
   140002cde:	and    QWORD PTR [rsp+0x38],0x0
   140002ce4:	mov    rbx,rdx
   140002ce7:	mov    rdi,rcx
   140002cea:	test   rdx,rdx
   140002ced:	jne    0x140002d05
   140002cef:	lea    r8,[rip+0x761a]        # 0x14000a310
   140002cf6:	lea    edx,[rbx+0x45]
   140002cf9:	lea    rcx,[rip+0x7618]        # 0x14000a318
   140002d00:	call   0x14000740c
   140002d05:	mov    rdx,rbx
   140002d08:	lea    rcx,[rsp+0x38]
   140002d0d:	call   0x140006bf8
   140002d12:	mov    ebx,eax
   140002d14:	test   eax,eax
   140002d16:	jns    0x140002d21
   140002d18:	lea    r9,[rip+0x7621]        # 0x14000a340
   140002d1f:	jmp    0x140002d3b
   140002d21:	lea    rdx,[rsp+0x38]
   140002d26:	mov    rcx,rdi
   140002d29:	call   0x140002504
   140002d2e:	mov    ebx,eax
   140002d30:	test   eax,eax
   140002d32:	jns    0x140002d54
   140002d34:	lea    r9,[rip+0x76cd]        # 0x14000a408
   140002d3b:	mov    r8d,0x1
   140002d41:	mov    edx,eax
   140002d43:	mov    ecx,0x4000000
   140002d48:	call   0x140007244
   140002d4d:	mov    rcx,QWORD PTR [rsp+0x38]
   140002d52:	jmp    0x140002d56
   140002d54:	xor    ecx,ecx
   140002d56:	test   rcx,rcx
   140002d59:	je     0x140002d64
   140002d5b:	add    rcx,0xfffffffffffffff8
   140002d5f:	call   0x140007cd8
   140002d64:	mov    eax,ebx
   140002d66:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d6b:	add    rsp,0x20
   140002d6f:	pop    rdi
   140002d70:	ret    
   140002d71:	int3   
   140002d72:	int3   
   140002d73:	int3   
   140002d74:	int3   
   140002d75:	int3   
   140002d76:	int3   
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rbx
   140002d85:	push   rdi
   140002d86:	sub    rsp,0x20
   140002d8a:	mov    ebx,edx
   140002d8c:	mov    rdi,rcx
   140002d8f:	call   0x14000432c
   140002d94:	test   bl,0x1
   140002d97:	je     0x140002da1
   140002d99:	mov    rcx,rdi
   140002d9c:	call   0x140007cd8
   140002da1:	mov    rax,rdi
   140002da4:	mov    rbx,QWORD PTR [rsp+0x30]
   140002da9:	add    rsp,0x20
   140002dad:	pop    rdi
   140002dae:	ret    
   140002daf:	int3   
   140002db0:	int3   
   140002db1:	int3   
   140002db2:	int3   
   140002db3:	int3   
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	xchg   ax,ax
   140002dba:	int3   
   140002dbb:	ret    
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	int3   
   140002dc1:	int3   
   140002dc2:	int3   
   140002dc3:	int3   
   140002dc4:	mov    rax,rdx
   140002dc7:	mov    edx,DWORD PTR [rcx]
   140002dc9:	mov    rcx,rax
   140002dcc:	jmp    0x140001008
   140002dd1:	int3   
   140002dd2:	int3   
   140002dd3:	int3   
   140002dd4:	int3   
   140002dd5:	int3   
   140002dd6:	int3   
   140002dd7:	int3   
   140002dd8:	mov    QWORD PTR [rsp+0x18],r8
   140002ddd:	mov    QWORD PTR [rsp+0x20],r9
   140002de2:	push   rbp
   140002de3:	push   rbx
   140002de4:	push   rsi
   140002de5:	push   rdi
   140002de6:	push   r14
   140002de8:	lea    rbp,[rsp-0x1f60]
   140002df0:	mov    eax,0x2060
   140002df5:	call   0x140008850
   140002dfa:	sub    rsp,rax
   140002dfd:	mov    rax,QWORD PTR [rip+0xb204]        # 0x14000e008
   140002e04:	xor    rax,rsp
   140002e07:	mov    QWORD PTR [rbp+0x1f50],rax
   140002e0e:	mov    ebx,edx
   140002e10:	lea    r9,[rbp+0x1fa8]
   140002e17:	mov    rdi,rcx
   140002e1a:	mov    r14d,0xfff
   140002e20:	mov    edx,r14d
   140002e23:	lea    rcx,[rsp+0x50]
   140002e28:	call   QWORD PTR [rip+0x644a]        # 0x140009278
   140002e2e:	xor    esi,esi
   140002e30:	test   eax,eax
   140002e32:	js     0x140002e3d
   140002e34:	cdqe   
   140002e36:	cmp    rax,r14
   140002e39:	ja     0x140002e3d
   140002e3b:	jne    0x140002e44
   140002e3d:	mov    WORD PTR [rbp+0x1f4e],si
   140002e44:	lea    r8,[rsp+0x50]
   140002e49:	mov    edx,ebx
   140002e4b:	mov    rcx,rdi
   140002e4e:	call   0x1400027d0
   140002e53:	mov    ebx,eax
   140002e55:	test   eax,eax
   140002e57:	jns    0x140002e9c
   140002e59:	mov    DWORD PTR [rsp+0x20],eax
   140002e5d:	lea    rax,[rip+0x75f4]        # 0x14000a458
   140002e64:	mov    DWORD PTR [rsp+0x38],0x50
   140002e6c:	mov    QWORD PTR [rsp+0x28],rax
   140002e71:	lea    rdx,[rsp+0x28]
   140002e76:	lea    rax,[rip+0x75fb]        # 0x14000a478
   140002e7d:	mov    QWORD PTR [rsp+0x30],rax
   140002e82:	lea    rcx,[rsp+0x20]
   140002e87:	lea    rax,[rip+0x7602]        # 0x14000a490
   140002e8e:	mov    QWORD PTR [rsp+0x40],rax
   140002e93:	call   0x140002dc4
   140002e98:	mov    eax,ebx
   140002e9a:	jmp    0x140002e9e
   140002e9c:	xor    eax,eax
   140002e9e:	mov    rcx,QWORD PTR [rbp+0x1f50]
   140002ea5:	xor    rcx,rsp
   140002ea8:	call   0x140008030
   140002ead:	add    rsp,0x2060
   140002eb4:	pop    r14
   140002eb6:	pop    rdi
   140002eb7:	pop    rsi
   140002eb8:	pop    rbx
   140002eb9:	pop    rbp
   140002eba:	ret    
   140002ebb:	int3   
   140002ebc:	int3   
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	int3   
   140002ec1:	int3   
   140002ec2:	int3   
   140002ec3:	int3   
   140002ec4:	mov    QWORD PTR [rsp+0x18],rbx
   140002ec9:	mov    QWORD PTR [rsp+0x20],rsi
   140002ece:	push   rbp
   140002ecf:	push   rdi
   140002ed0:	push   r12
   140002ed2:	push   r14
   140002ed4:	push   r15
   140002ed6:	mov    rbp,rsp
   140002ed9:	sub    rsp,0x80
   140002ee0:	mov    rax,QWORD PTR [rip+0xb121]        # 0x14000e008
   140002ee7:	xor    rax,rsp
   140002eea:	mov    QWORD PTR [rbp-0x8],rax
   140002eee:	cmp    BYTE PTR [rip+0xb6f0],0x0        # 0x14000e5e5
   140002ef5:	mov    r12,rdx
   140002ef8:	mov    r14,rcx
   140002efb:	jne    0x140003174
   140002f01:	mov    r15d,0x1
   140002f07:	lea    r8,[rip+0x7602]        # 0x14000a510
   140002f0e:	mov    edx,r15d
   140002f11:	call   0x140002dd8
   140002f16:	call   0x140004afc
   140002f1b:	lea    edi,[r15+0x2]
   140002f1f:	test   eax,eax
   140002f21:	jns    0x140002f3e
   140002f23:	test   r14,r14
   140002f26:	je     0x140002f50
   140002f28:	mov    r9d,eax
   140002f2b:	lea    r8,[rip+0x764e]        # 0x14000a580
   140002f32:	mov    edx,edi
   140002f34:	mov    rcx,r14
   140002f37:	call   0x140002dd8
   140002f3c:	jmp    0x140002f50
   140002f3e:	lea    r8,[rip+0x768b]        # 0x14000a5d0
   140002f45:	mov    edx,r15d
   140002f48:	mov    rcx,r14
   140002f4b:	call   0x140002dd8
   140002f50:	call   0x1400078bc
   140002f55:	mov    ebx,eax
   140002f57:	test   eax,eax
   140002f59:	jns    0x140002f88
   140002f5b:	test   r14,r14
   140002f5e:	je     0x140002f74
   140002f60:	mov    r9d,eax
   140002f63:	lea    r8,[rip+0x76a6]        # 0x14000a610
   140002f6a:	mov    edx,edi
   140002f6c:	mov    rcx,r14
   140002f6f:	call   0x140002dd8
   140002f74:	mov    esi,0x2e
   140002f79:	mov    DWORD PTR [rbp-0x40],ebx
   140002f7c:	lea    r14,[rip+0x68ad]        # 0x140009830
   140002f83:	jmp    0x140003068
   140002f88:	lea    r8,[rip+0x76d1]        # 0x14000a660
   140002f8f:	mov    edx,r15d
   140002f92:	mov    rcx,r14
   140002f95:	call   0x140002dd8
   140002f9a:	and    QWORD PTR [rbp-0x38],0x0
   140002f9f:	lea    rcx,[rbp-0x38]
   140002fa3:	mov    rdx,r12
   140002fa6:	call   0x140006cd0
   140002fab:	mov    ebx,eax
   140002fad:	test   eax,eax
   140002faf:	jns    0x140002fd6
   140002fb1:	mov    rcx,QWORD PTR [rbp-0x38]
   140002fb5:	lea    r14,[rip+0x7704]        # 0x14000a6c0
   140002fbc:	mov    DWORD PTR [rbp-0x40],eax
   140002fbf:	mov    esi,0x33
   140002fc4:	test   rcx,rcx
   140002fc7:	je     0x140003068
   140002fcd:	add    rcx,0xfffffffffffffff8
   140002fd1:	jmp    0x140003063
   140002fd6:	mov    rdi,QWORD PTR [rbp-0x38]
   140002fda:	lea    r8,[rip+0x84cf]        # 0x14000b4b0
   140002fe1:	and    QWORD PTR [rbp-0x30],0x0
   140002fe6:	lea    rcx,[rbp-0x30]
   140002fea:	mov    rdx,rdi
   140002fed:	call   0x140006770
   140002ff2:	mov    ebx,eax
   140002ff4:	test   eax,eax
   140002ff6:	jns    0x140003009
   140002ff8:	mov    esi,0x38
   140002ffd:	mov    DWORD PTR [rbp-0x40],eax
   140003000:	lea    r14,[rip+0x7719]        # 0x14000a720
   140003007:	jmp    0x140003048
   140003009:	and    QWORD PTR [rbp-0x38],0x0
   14000300e:	lea    r8,[rip+0x8473]        # 0x14000b488
   140003015:	mov    rdx,rdi
   140003018:	lea    rcx,[rbp-0x38]
   14000301c:	call   0x140006770
   140003021:	mov    ebx,eax
   140003023:	test   eax,eax
   140003025:	jns    0x140003099
   140003027:	mov    rcx,QWORD PTR [rbp-0x38]
   14000302b:	lea    r14,[rip+0x775e]        # 0x14000a790
   140003032:	mov    DWORD PTR [rbp-0x40],eax
   140003035:	mov    esi,0x3d
   14000303a:	test   rcx,rcx
   14000303d:	je     0x140003048
   14000303f:	add    rcx,0xfffffffffffffff8
   140003043:	call   0x140007cd8
   140003048:	mov    rcx,QWORD PTR [rbp-0x30]
   14000304c:	test   rcx,rcx
   14000304f:	je     0x14000305a
   140003051:	add    rcx,0xfffffffffffffff8
   140003055:	call   0x140007cd8
   14000305a:	test   rdi,rdi
   14000305d:	je     0x140003068
   14000305f:	lea    rcx,[rdi-0x8]
   140003063:	call   0x140007cd8
   140003068:	lea    rax,[rip+0x7451]        # 0x14000a4c0
   14000306f:	mov    DWORD PTR [rbp-0x18],esi
   140003072:	mov    QWORD PTR [rbp-0x28],rax
   140003076:	lea    rdx,[rbp-0x28]
   14000307a:	lea    rax,[rip+0x747f]        # 0x14000a500
   140003081:	mov    QWORD PTR [rbp-0x10],r14
   140003085:	lea    rcx,[rbp-0x40]
   140003089:	mov    QWORD PTR [rbp-0x20],rax
   14000308d:	call   0x140002dc4
   140003092:	mov    eax,ebx
   140003094:	jmp    0x140003187
   140003099:	mov    rsi,QWORD PTR [rbp-0x30]
   14000309d:	mov    rcx,rsi
   1400030a0:	call   0x140005700
   1400030a5:	mov    rbx,QWORD PTR [rbp-0x38]
   1400030a9:	test   eax,eax
   1400030ab:	je     0x140003131
   1400030b1:	mov    rcx,rbx
   1400030b4:	call   0x140005700
   1400030b9:	test   eax,eax
   1400030bb:	je     0x140003131
   1400030bd:	lea    r8,[rip+0x77fc]        # 0x14000a8c0
   1400030c4:	mov    edx,r15d
   1400030c7:	mov    rcx,r14
   1400030ca:	call   0x140002dd8
   1400030cf:	call   0x140005da8
   1400030d4:	test   eax,eax
   1400030d6:	jns    0x1400030e6
   1400030d8:	test   r14,r14
   1400030db:	je     0x14000311d
   1400030dd:	lea    r8,[rip+0x783c]        # 0x14000a920
   1400030e4:	jmp    0x14000310d
   1400030e6:	lea    r8,[rip+0x7893]        # 0x14000a980
   1400030ed:	mov    edx,r15d
   1400030f0:	mov    rcx,r14
   1400030f3:	call   0x140002dd8
   1400030f8:	call   0x1400049d0
   1400030fd:	test   eax,eax
   1400030ff:	jns    0x14000311d
   140003101:	test   r14,r14
   140003104:	je     0x14000311d
   140003106:	lea    r8,[rip+0x6cb3]        # 0x140009dc0
   14000310d:	mov    r9d,eax
   140003110:	mov    edx,0x3
   140003115:	mov    rcx,r14
   140003118:	call   0x140002dd8
   14000311d:	lea    r8,[rip+0x789c]        # 0x14000a9c0
   140003124:	mov    edx,r15d
   140003127:	mov    rcx,r14
   14000312a:	call   0x140002dd8
   14000312f:	jmp    0x140003148
   140003131:	mov    r9,r12
   140003134:	lea    r8,[rip+0x76c5]        # 0x14000a800
   14000313b:	mov    edx,0x3
   140003140:	mov    rcx,r14
   140003143:	call   0x140002dd8
   140003148:	test   rbx,rbx
   14000314b:	je     0x140003156
   14000314d:	lea    rcx,[rbx-0x8]
   140003151:	call   0x140007cd8
   140003156:	test   rsi,rsi
   140003159:	je     0x140003164
   14000315b:	lea    rcx,[rsi-0x8]
   14000315f:	call   0x140007cd8
   140003164:	test   rdi,rdi
   140003167:	je     0x140003185
   140003169:	lea    rcx,[rdi-0x8]
   14000316d:	call   0x140007cd8
   140003172:	jmp    0x140003185
   140003174:	lea    r8,[rip+0x7875]        # 0x14000a9f0
   14000317b:	mov    edx,0x1
   140003180:	call   0x140002dd8
   140003185:	xor    eax,eax
   140003187:	mov    rcx,QWORD PTR [rbp-0x8]
   14000318b:	xor    rcx,rsp
   14000318e:	call   0x140008030
   140003193:	lea    r11,[rsp+0x80]
   14000319b:	mov    rbx,QWORD PTR [r11+0x40]
   14000319f:	mov    rsi,QWORD PTR [r11+0x48]
   1400031a3:	mov    rsp,r11
   1400031a6:	pop    r15
   1400031a8:	pop    r14
   1400031aa:	pop    r12
   1400031ac:	pop    rdi
   1400031ad:	pop    rbp
   1400031ae:	ret    
   1400031af:	int3   
   1400031b0:	int3   
   1400031b1:	int3   
   1400031b2:	int3   
   1400031b3:	int3   
   1400031b4:	int3   
   1400031b5:	int3   
   1400031b6:	int3   
   1400031b7:	int3   
   1400031b8:	rex push rbp
   1400031ba:	push   rbx
   1400031bb:	push   rsi
   1400031bc:	push   rdi
   1400031bd:	push   r14
   1400031bf:	mov    rbp,rsp
   1400031c2:	sub    rsp,0x80
   1400031c9:	mov    rax,QWORD PTR [rip+0xae38]        # 0x14000e008
   1400031d0:	xor    rax,rsp
   1400031d3:	mov    QWORD PTR [rbp-0x10],rax
   1400031d7:	mov    rdi,QWORD PTR [rbp+0x50]
   1400031db:	mov    r14,r9
   1400031de:	mov    QWORD PTR [rbp-0x40],rcx
   1400031e2:	mov    rsi,rdx
   1400031e5:	mov    QWORD PTR [rbp-0x38],r8
   1400031e9:	mov    DWORD PTR [rbp-0x50],0x8007054f
   1400031f0:	test   rdi,rdi
   1400031f3:	jne    0x140003211
   1400031f5:	lea    rcx,[rbp-0x50]
   1400031f9:	lea    r14d,[rdi+0x6b]
   1400031fd:	lea    rsi,[rip+0x7884]        # 0x14000aa88
   140003204:	call   0x1400023f8
   140003209:	mov    ebx,DWORD PTR [rbp-0x50]
   14000320c:	jmp    0x140003328
   140003211:	mov    BYTE PTR [rdi],0x0
   140003214:	call   0x1400048c8
   140003219:	mov    rcx,QWORD PTR [rbp-0x40]
   14000321d:	lea    r8,[rip+0x788c]        # 0x14000aab0
   140003224:	mov    r9d,eax
   140003227:	mov    BYTE PTR [rip+0xb3b7],0x0        # 0x14000e5e5
   14000322e:	mov    edx,0x1
   140003233:	mov    ebx,eax
   140003235:	call   0x140002dd8
   14000323a:	cmp    ebx,0x5
   14000323d:	jbe    0x140003254
   14000323f:	mov    rdx,QWORD PTR [rbp-0x38]
   140003243:	mov    rcx,QWORD PTR [rbp-0x40]
   140003247:	call   0x140002ec4
   14000324c:	mov    BYTE PTR [rdi],0x1
   14000324f:	jmp    0x14000337d
   140003254:	mov    r9,QWORD PTR [rbp-0x38]
   140003258:	lea    rdx,[rip+0x7a71]        # 0x14000acd0
   14000325f:	and    QWORD PTR [rbp-0x48],0x0
   140003264:	lea    rcx,[rbp-0x48]
   140003268:	mov    r8,rsi
   14000326b:	mov    QWORD PTR [rsp+0x20],r14
   140003270:	call   0x140006940
   140003275:	mov    ebx,eax
   140003277:	test   eax,eax
   140003279:	jns    0x1400032ca
   14000327b:	mov    rax,QWORD PTR [rbp-0x40]
   14000327f:	test   rax,rax
   140003282:	je     0x14000329f
   140003284:	mov    r9d,ebx
   140003287:	lea    r8,[rip+0x7862]        # 0x14000aaf0
   14000328e:	mov    edx,0x3
   140003293:	mov    rcx,rax
   140003296:	call   0x140002dd8
   14000329b:	mov    rax,QWORD PTR [rbp-0x40]
   14000329f:	mov    rcx,QWORD PTR [rbp-0x48]
   1400032a3:	lea    rsi,[rip+0x6586]        # 0x140009830
   1400032aa:	mov    DWORD PTR [rbp-0x50],ebx
   1400032ad:	mov    r14d,0x84
   1400032b3:	test   rcx,rcx
   1400032b6:	je     0x1400032c5
   1400032b8:	add    rcx,0xfffffffffffffff8
   1400032bc:	call   0x140007cd8
   1400032c1:	mov    rax,QWORD PTR [rbp-0x40]
   1400032c5:	mov    rcx,rax
   1400032c8:	jmp    0x14000331f
   1400032ca:	mov    rdi,QWORD PTR [rbp-0x48]
   1400032ce:	mov    rdx,rdi
   1400032d1:	call   0x140006090
   1400032d6:	mov    rcx,QWORD PTR [rbp-0x40]
   1400032da:	mov    ebx,eax
   1400032dc:	test   eax,eax
   1400032de:	jns    0x140003357
   1400032e0:	test   rcx,rcx
   1400032e3:	je     0x1400032fd
   1400032e5:	mov    r9d,eax
   1400032e8:	lea    r8,[rip+0x7881]        # 0x14000ab70
   1400032ef:	mov    edx,0x3
   1400032f4:	call   0x140002dd8
   1400032f9:	mov    rcx,QWORD PTR [rbp-0x40]
   1400032fd:	mov    DWORD PTR [rbp-0x50],ebx
   140003300:	mov    r14d,0x89
   140003306:	lea    rsi,[rip+0x6523]        # 0x140009830
   14000330d:	test   rdi,rdi
   140003310:	je     0x14000331f
   140003312:	lea    rcx,[rdi-0x8]
   140003316:	call   0x140007cd8
   14000331b:	mov    rcx,QWORD PTR [rbp-0x40]
   14000331f:	mov    rdx,QWORD PTR [rbp-0x38]
   140003323:	call   0x140002ec4
   140003328:	lea    rax,[rip+0x7191]        # 0x14000a4c0
   14000332f:	mov    DWORD PTR [rbp-0x20],r14d
   140003333:	mov    QWORD PTR [rbp-0x30],rax
   140003337:	lea    rdx,[rbp-0x30]
   14000333b:	lea    rax,[rip+0x772e]        # 0x14000aa70
   140003342:	mov    QWORD PTR [rbp-0x18],rsi
   140003346:	lea    rcx,[rbp-0x50]
   14000334a:	mov    QWORD PTR [rbp-0x28],rax
   14000334e:	call   0x140002dc4
   140003353:	mov    eax,ebx
   140003355:	jmp    0x14000337f
   140003357:	lea    r8,[rip+0x7892]        # 0x14000abf0
   14000335e:	mov    BYTE PTR [rip+0xb280],0x1        # 0x14000e5e5
   140003365:	mov    edx,0x1
   14000336a:	call   0x140002dd8
   14000336f:	test   rdi,rdi
   140003372:	je     0x14000337d
   140003374:	lea    rcx,[rdi-0x8]
   140003378:	call   0x140007cd8
   14000337d:	xor    eax,eax
   14000337f:	mov    rcx,QWORD PTR [rbp-0x10]
   140003383:	xor    rcx,rsp
   140003386:	call   0x140008030
   14000338b:	add    rsp,0x80
   140003392:	pop    r14
   140003394:	pop    rdi
   140003395:	pop    rsi
   140003396:	pop    rbx
   140003397:	pop    rbp
   140003398:	ret    
   140003399:	int3   
   14000339a:	int3   
   14000339b:	int3   
   14000339c:	int3   
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400033aa:	push   rdi
   1400033ab:	sub    rsp,0x30
   1400033af:	cmp    r8d,DWORD PTR [rip+0xb23e]        # 0x14000e5f4
   1400033b6:	mov    edi,r8d
   1400033b9:	mov    rsi,QWORD PTR [rip+0xb228]        # 0x14000e5e8
   1400033c0:	mov    rbx,rcx
   1400033c3:	jne    0x1400033c6
   1400033c5:	int3   
   1400033c6:	test   rsi,rsi
   1400033c9:	je     0x1400033e3
   1400033cb:	mov    rcx,rsi
   1400033ce:	call   QWORD PTR [rip+0x5f1c]        # 0x1400092f0
   1400033d4:	mov    r8d,edi
   1400033d7:	lea    rdx,[rip+0x5fea]        # 0x1400093c8
   1400033de:	mov    rcx,rbx
   1400033e1:	call   rsi
   1400033e3:	cmp    edi,0xc00000e5
   1400033e9:	jne    0x14000343b
   1400033eb:	test   rbx,rbx
   1400033ee:	je     0x1400033f5
   1400033f0:	mov    eax,DWORD PTR [rbx+0x10]
   1400033f3:	jmp    0x1400033f7
   1400033f5:	xor    eax,eax
   1400033f7:	lea    r9,[rip+0x80e2]        # 0x14000b4e0
   1400033fe:	test   rbx,rbx
   140003401:	je     0x140003408
   140003403:	mov    rcx,QWORD PTR [rbx]
   140003406:	jmp    0x14000340b
   140003408:	mov    rcx,r9
   14000340b:	test   rbx,rbx
   14000340e:	je     0x140003414
   140003410:	mov    r9,QWORD PTR [rbx+0x18]
   140003414:	xor    edx,edx
   140003416:	mov    DWORD PTR [rsp+0x28],eax
   14000341a:	mov    QWORD PTR [rsp+0x20],rcx
   14000341f:	lea    r8,[rip+0x80c2]        # 0x14000b4e8
   140003426:	lea    ecx,[rdx+0x65]
   140003429:	call   QWORD PTR [rip+0x5e79]        # 0x1400092a8
   14000342f:	mov    ecx,0xc0000420
   140003434:	call   QWORD PTR [rip+0x5e66]        # 0x1400092a0
   14000343a:	int3   
   14000343b:	mov    rbx,QWORD PTR [rsp+0x40]
   140003440:	mov    rsi,QWORD PTR [rsp+0x48]
   140003445:	add    rsp,0x30
   140003449:	pop    rdi
   14000344a:	ret    
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	int3   
   140003451:	int3   
   140003452:	int3   
   140003453:	int3   
   140003454:	mov    QWORD PTR [rsp+0x10],rbx
   140003459:	mov    QWORD PTR [rsp+0x18],rsi
   14000345e:	mov    QWORD PTR [rsp+0x20],rdi
   140003463:	push   rbp
   140003464:	push   r14
   140003466:	push   r15
   140003468:	mov    rbp,rsp
   14000346b:	sub    rsp,0x60
   14000346f:	mov    rax,QWORD PTR [rip+0xab92]        # 0x14000e008
   140003476:	xor    rax,rsp
   140003479:	mov    QWORD PTR [rbp-0x8],rax
   14000347d:	mov    DWORD PTR [rbp-0x30],0x8007054f
   140003484:	mov    rsi,rcx
   140003487:	test   rdx,rdx
   14000348a:	jne    0x1400034a9
   14000348c:	lea    rcx,[rbp-0x30]
   140003490:	mov    edx,0x20
   140003495:	lea    rax,[rip+0x80e4]        # 0x14000b580
   14000349c:	call   0x1400023f8
   1400034a1:	mov    ebx,DWORD PTR [rbp-0x30]
   1400034a4:	jmp    0x140003654
   1400034a9:	mov    QWORD PTR [rcx+0x28],rdx
   1400034ad:	lea    rdx,[rcx+0x20]
   1400034b1:	cmp    QWORD PTR [rdx],0x0
   1400034b5:	je     0x1400034c3
   1400034b7:	mov    ecx,0xc00000e5
   1400034bc:	call   QWORD PTR [rip+0x5dde]        # 0x1400092a0
   1400034c2:	int3   
   1400034c3:	mov    edi,0x1
   1400034c8:	mov    ecx,edi
   1400034ca:	call   QWORD PTR [rip+0x5df8]        # 0x1400092c8
   1400034d0:	mov    ebx,eax
   1400034d2:	test   eax,eax
   1400034d4:	jns    0x1400034fb
   1400034d6:	mov    rcx,QWORD PTR [rsi+0x28]
   1400034da:	test   rcx,rcx
   1400034dd:	je     0x1400034f1
   1400034df:	mov    r9d,eax
   1400034e2:	lea    r8,[rip+0x80b7]        # 0x14000b5a0
   1400034e9:	lea    edx,[rdi+0x2]
   1400034ec:	call   0x140002dd8
   1400034f1:	mov    edx,0x29
   1400034f6:	jmp    0x14000364a
   1400034fb:	mov    ecx,0x18
   140003500:	call   0x14000865c
   140003505:	mov    rcx,rax
   140003508:	test   rax,rax
   14000350b:	je     0x140003524
   14000350d:	mov    rax,QWORD PTR [rsi+0x28]
   140003511:	lea    rdx,[rip+0x5ff0]        # 0x140009508
   140003518:	mov    QWORD PTR [rcx],rdx
   14000351b:	mov    QWORD PTR [rcx+0x10],rax
   14000351f:	mov    DWORD PTR [rcx+0x8],edi
   140003522:	jmp    0x140003526
   140003524:	xor    ecx,ecx
   140003526:	cmp    QWORD PTR [rsi+0x18],0x0
   14000352b:	je     0x140003539
   14000352d:	mov    ecx,0xc00000e5
   140003532:	call   QWORD PTR [rip+0x5d68]        # 0x1400092a0
   140003538:	int3   
   140003539:	mov    QWORD PTR [rsi+0x18],rcx
   14000353d:	cmp    rcx,0x0
   140003541:	jne    0x14000356f
   140003543:	mov    rcx,QWORD PTR [rsi+0x28]
   140003547:	mov    ebx,0x8007000e
   14000354c:	test   rcx,rcx
   14000354f:	je     0x140003565
   140003551:	mov    r9d,ebx
   140003554:	lea    r8,[rip+0x8095]        # 0x14000b5f0
   14000355b:	mov    edx,0x3
   140003560:	call   0x140002dd8
   140003565:	mov    edx,0x2e
   14000356a:	jmp    0x14000364a
   14000356f:	xor    edi,edi
   140003571:	lea    r14,[rsi+0x10]
   140003575:	cmp    QWORD PTR [r14],0x0
   140003579:	jne    0x1400036aa
   14000357f:	xor    edx,edx
   140003581:	mov    QWORD PTR [rsp+0x20],r14
   140003586:	lea    r9,[rip+0x8a93]        # 0x14000c020
   14000358d:	lea    rcx,[rip+0x9374]        # 0x14000c908
   140003594:	lea    r8d,[rdx+0x15]
   140003598:	call   QWORD PTR [rip+0x5d22]        # 0x1400092c0
   14000359e:	mov    ebx,eax
   1400035a0:	test   eax,eax
   1400035a2:	jns    0x1400035f5
   1400035a4:	mov    rcx,QWORD PTR [rsi+0x28]
   1400035a8:	lea    r9d,[rdi+0x1]
   1400035ac:	lea    r8,[rip+0x808d]        # 0x14000b640
   1400035b3:	mov    edx,0x2
   1400035b8:	call   0x140002dd8
   1400035bd:	cmp    edi,0xa
   1400035c0:	jae    0x1400035d1
   1400035c2:	mov    ecx,0x3e8
   1400035c7:	call   QWORD PTR [rip+0x5b83]        # 0x140009150
   1400035cd:	inc    edi
   1400035cf:	jmp    0x140003575
   1400035d1:	mov    rcx,QWORD PTR [rsi+0x28]
   1400035d5:	test   rcx,rcx
   1400035d8:	je     0x1400035ee
   1400035da:	mov    r9d,ebx
   1400035dd:	lea    r8,[rip+0x810c]        # 0x14000b6f0
   1400035e4:	mov    edx,0x3
   1400035e9:	call   0x140002dd8
   1400035ee:	mov    edx,0x51
   1400035f3:	jmp    0x14000364a
   1400035f5:	mov    rdi,QWORD PTR [r14]
   1400035f8:	mov    rax,QWORD PTR [rdi]
   1400035fb:	mov    rbx,QWORD PTR [rax+0x18]
   1400035ff:	mov    rcx,rbx
   140003602:	call   QWORD PTR [rip+0x5ce8]        # 0x1400092f0
   140003608:	and    QWORD PTR [rsp+0x20],0x0
   14000360e:	lea    r8,[rip+0x814b]        # 0x14000b760
   140003615:	xor    r9d,r9d
   140003618:	mov    edx,0x1020000
   14000361d:	mov    rcx,rdi
   140003620:	call   rbx
   140003622:	mov    ebx,eax
   140003624:	test   eax,eax
   140003626:	jns    0x1400036a6
   140003628:	mov    rcx,QWORD PTR [rsi+0x28]
   14000362c:	test   rcx,rcx
   14000362f:	je     0x140003645
   140003631:	mov    r9d,eax
   140003634:	lea    r8,[rip+0x8135]        # 0x14000b770
   14000363b:	mov    edx,0x3
   140003640:	call   0x140002dd8
   140003645:	mov    edx,0x5d
   14000364a:	mov    DWORD PTR [rbp-0x30],ebx
   14000364d:	lea    rax,[rip+0x61dc]        # 0x140009830
   140003654:	lea    rcx,[rip+0x7ecd]        # 0x14000b528
   14000365b:	mov    DWORD PTR [rbp-0x18],edx
   14000365e:	mov    QWORD PTR [rbp-0x28],rcx
   140003662:	lea    rdx,[rbp-0x28]
   140003666:	lea    rcx,[rip+0x7efb]        # 0x14000b568
   14000366d:	mov    QWORD PTR [rbp-0x10],rax
   140003671:	mov    QWORD PTR [rbp-0x20],rcx
   140003675:	lea    rcx,[rbp-0x30]
   140003679:	call   0x140002dc4
   14000367e:	mov    eax,ebx
   140003680:	mov    rcx,QWORD PTR [rbp-0x8]
   140003684:	xor    rcx,rsp
   140003687:	call   0x140008030
   14000368c:	lea    r11,[rsp+0x60]
   140003691:	mov    rbx,QWORD PTR [r11+0x28]
   140003695:	mov    rsi,QWORD PTR [r11+0x30]
   140003699:	mov    rdi,QWORD PTR [r11+0x38]
   14000369d:	mov    rsp,r11
   1400036a0:	pop    r15
   1400036a2:	pop    r14
   1400036a4:	pop    rbp
   1400036a5:	ret    
   1400036a6:	xor    eax,eax
   1400036a8:	jmp    0x140003680
   1400036aa:	mov    ecx,0xc00000e5
   1400036af:	call   QWORD PTR [rip+0x5beb]        # 0x1400092a0
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400036c1:	mov    QWORD PTR [rsp+0x18],rsi
   1400036c6:	push   rdi
   1400036c7:	sub    rsp,0x50
   1400036cb:	mov    rax,QWORD PTR [rip+0xa936]        # 0x14000e008
   1400036d2:	xor    rax,rsp
   1400036d5:	mov    QWORD PTR [rsp+0x48],rax
   1400036da:	cmp    BYTE PTR [rcx+0x8],0x0
   1400036de:	mov    rsi,rcx
   1400036e1:	je     0x14000379f
   1400036e7:	mov    rdi,QWORD PTR [rcx+0x10]
   1400036eb:	and    DWORD PTR [rsp+0x40],0x0
   1400036f0:	mov    rax,QWORD PTR [rdi]
   1400036f3:	mov    rbx,QWORD PTR [rax+0x20]
   1400036f7:	mov    rcx,rbx
   1400036fa:	call   QWORD PTR [rip+0x5bf0]        # 0x1400092f0
   140003700:	lea    rdx,[rsp+0x40]
   140003705:	mov    rcx,rdi
   140003708:	call   rbx
   14000370a:	mov    ebx,eax
   14000370c:	test   eax,eax
   14000370e:	jns    0x140003770
   140003710:	mov    rcx,QWORD PTR [rsi+0x28]
   140003714:	test   rcx,rcx
   140003717:	je     0x14000372d
   140003719:	mov    r9d,eax
   14000371c:	lea    r8,[rip+0x80bd]        # 0x14000b7e0
   140003723:	mov    edx,0x3
   140003728:	call   0x140002dd8
   14000372d:	mov    DWORD PTR [rsp+0x40],ebx
   140003731:	lea    rax,[rip+0x7df0]        # 0x14000b528
   140003738:	mov    DWORD PTR [rsp+0x30],0x6e
   140003740:	mov    QWORD PTR [rsp+0x20],rax
   140003745:	lea    rdx,[rsp+0x20]
   14000374a:	lea    rax,[rip+0x806f]        # 0x14000b7c0
   140003751:	mov    QWORD PTR [rsp+0x28],rax
   140003756:	lea    rcx,[rsp+0x40]
   14000375b:	lea    rax,[rip+0x60ce]        # 0x140009830
   140003762:	mov    QWORD PTR [rsp+0x38],rax
   140003767:	call   0x140002dc4
   14000376c:	mov    eax,ebx
   14000376e:	jmp    0x1400037a1
   140003770:	mov    ebx,0x1
   140003775:	cmp    DWORD PTR [rsp+0x40],ebx
   140003779:	jne    0x14000378d
   14000377b:	mov    rcx,QWORD PTR [rsi+0x28]
   14000377f:	lea    r8,[rip+0x80ba]        # 0x14000b840
   140003786:	mov    edx,ebx
   140003788:	call   0x140002dd8
   14000378d:	mov    rcx,QWORD PTR [rsi+0x28]
   140003791:	lea    r8,[rip+0x80f8]        # 0x14000b890
   140003798:	mov    edx,ebx
   14000379a:	call   0x140002dd8
   14000379f:	xor    eax,eax
   1400037a1:	mov    rcx,QWORD PTR [rsp+0x48]
   1400037a6:	xor    rcx,rsp
   1400037a9:	call   0x140008030
   1400037ae:	mov    rbx,QWORD PTR [rsp+0x68]
   1400037b3:	mov    rsi,QWORD PTR [rsp+0x70]
   1400037b8:	add    rsp,0x50
   1400037bc:	pop    rdi
   1400037bd:	ret    
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	int3   
   1400037c1:	int3   
   1400037c2:	int3   
   1400037c3:	int3   
   1400037c4:	mov    QWORD PTR [rsp+0x18],rbx
   1400037c9:	mov    QWORD PTR [rsp+0x20],rsi
   1400037ce:	push   rbp
   1400037cf:	push   rdi
   1400037d0:	push   r13
   1400037d2:	push   r14
   1400037d4:	push   r15
   1400037d6:	mov    rbp,rsp
   1400037d9:	sub    rsp,0x70
   1400037dd:	mov    rax,QWORD PTR [rip+0xa824]        # 0x14000e008
   1400037e4:	xor    rax,rsp
   1400037e7:	mov    QWORD PTR [rbp-0x10],rax
   1400037eb:	xor    r13d,r13d
   1400037ee:	mov    DWORD PTR [rbp-0x50],0x8007054f
   1400037f5:	mov    rsi,rdx
   1400037f8:	mov    r14,rcx
   1400037fb:	test   rdx,rdx
   1400037fe:	jne    0x14000381e
   140003800:	lea    rcx,[rbp-0x50]
   140003804:	mov    r15d,0x82
   14000380a:	lea    r14,[rip+0x80c7]        # 0x14000b8d8
   140003811:	call   0x1400023f8
   140003816:	mov    edi,DWORD PTR [rbp-0x50]
   140003819:	jmp    0x140003adf
   14000381e:	mov    edi,r13d
   140003821:	cmp    QWORD PTR [rdx+0x10],r13
   140003825:	jbe    0x14000384a
   140003827:	mov    rcx,r13
   14000382a:	mov    rax,QWORD PTR [rsi+0x20]
   14000382e:	mov    rcx,QWORD PTR [rax+rcx*8]
   140003832:	test   rcx,rcx
   140003835:	je     0x140003840
   140003837:	add    rcx,0xfffffffffffffff8
   14000383b:	call   0x140007cd8
   140003840:	inc    edi
   140003842:	mov    ecx,edi
   140003844:	cmp    rcx,QWORD PTR [rsi+0x10]
   140003848:	jb     0x14000382a
   14000384a:	mov    rcx,QWORD PTR [rsi+0x10]
   14000384e:	lea    r8,[rip+0x80ab]        # 0x14000b900
   140003855:	mov    rdi,QWORD PTR [rsi+0x20]
   140003859:	xor    eax,eax
   14000385b:	shl    rcx,0x3
   14000385f:	xor    edx,edx
   140003861:	rep stos BYTE PTR es:[rdi],al
   140003863:	mov    QWORD PTR [rsi+0x10],r13
   140003867:	mov    rcx,QWORD PTR [r14+0x28]
   14000386b:	mov    QWORD PTR [rbp-0x20],r13
   14000386f:	mov    DWORD PTR [rbp-0x18],r13d
   140003873:	mov    QWORD PTR [rbp-0x28],r13
   140003877:	call   0x140002dd8
   14000387c:	mov    rbx,QWORD PTR [r14+0x10]
   140003880:	cmp    QWORD PTR [rbp-0x20],r13
   140003884:	je     0x140003892
   140003886:	mov    ecx,0xc00000e5
   14000388b:	call   QWORD PTR [rip+0x5a0f]        # 0x1400092a0
   140003891:	int3   
   140003892:	mov    rax,QWORD PTR [rbx]
   140003895:	mov    rdi,QWORD PTR [rax+0x38]
   140003899:	mov    rcx,rdi
   14000389c:	call   QWORD PTR [rip+0x5a4e]        # 0x1400092f0
   1400038a2:	lea    r8,[rbp-0x20]
   1400038a6:	mov    edx,0xb0
   1400038ab:	mov    rcx,rbx
   1400038ae:	call   rdi
   1400038b0:	mov    edi,eax
   1400038b2:	test   eax,eax
   1400038b4:	jns    0x1400038e8
   1400038b6:	mov    rcx,QWORD PTR [r14+0x28]
   1400038ba:	test   rcx,rcx
   1400038bd:	je     0x1400038d3
   1400038bf:	mov    r9d,eax
   1400038c2:	lea    r8,[rip+0x8067]        # 0x14000b930
   1400038c9:	mov    edx,0x3
   1400038ce:	call   0x140002dd8
   1400038d3:	mov    r15d,0x94
   1400038d9:	mov    DWORD PTR [rbp-0x50],edi
   1400038dc:	lea    r14,[rip+0x5f4d]        # 0x140009830
   1400038e3:	jmp    0x140003a9f
   1400038e8:	mov    rdi,QWORD PTR [rbp-0x28]
   1400038ec:	test   rdi,rdi
   1400038ef:	jne    0x140003b87
   1400038f5:	mov    rdi,QWORD PTR [rbp-0x20]
   1400038f9:	mov    rax,QWORD PTR [rdi]
   1400038fc:	mov    rbx,QWORD PTR [rax+0x18]
   140003900:	mov    rcx,rbx
   140003903:	call   QWORD PTR [rip+0x59e7]        # 0x1400092f0
   140003909:	lea    r9,[rbp-0x18]
   14000390d:	mov    edx,0x1
   140003912:	lea    r8,[rbp-0x28]
   140003916:	mov    rcx,rdi
   140003919:	call   rbx
   14000391b:	test   eax,eax
   14000391d:	jne    0x140003b31
   140003923:	cmp    DWORD PTR [rbp-0x18],r13d
   140003927:	jbe    0x140003b31
   14000392d:	mov    rbx,QWORD PTR [r14+0x20]
   140003931:	mov    rax,QWORD PTR [rbx]
   140003934:	mov    rdi,QWORD PTR [rax+0x8]
   140003938:	mov    rcx,rdi
   14000393b:	call   QWORD PTR [rip+0x59af]        # 0x1400092f0
   140003941:	mov    rcx,rbx
   140003944:	call   rdi
   140003946:	mov    rdi,QWORD PTR [rbp-0x28]
   14000394a:	mov    QWORD PTR [rbp-0x40],rbx
   14000394e:	mov    QWORD PTR [rbp-0x48],r13
   140003952:	mov    rax,QWORD PTR [rdi]
   140003955:	mov    rbx,QWORD PTR [rax+0x40]
   140003959:	mov    rcx,rbx
   14000395c:	call   QWORD PTR [rip+0x598e]        # 0x1400092f0
   140003962:	lea    rdx,[rbp-0x48]
   140003966:	mov    rcx,rdi
   140003969:	call   rbx
   14000396b:	mov    edi,eax
   14000396d:	test   eax,eax
   14000396f:	js     0x140003a29
   140003975:	mov    rdx,QWORD PTR [rbp-0x48]
   140003979:	mov    rcx,rsi
   14000397c:	call   0x140002cd4
   140003981:	mov    edi,eax
   140003983:	test   eax,eax
   140003985:	js     0x140003a04
   140003987:	mov    rdi,QWORD PTR [rbp-0x28]
   14000398b:	test   rdi,rdi
   14000398e:	je     0x1400039ac
   140003990:	mov    rax,QWORD PTR [rdi]
   140003993:	mov    rbx,QWORD PTR [rax+0x10]
   140003997:	mov    rcx,rbx
   14000399a:	call   QWORD PTR [rip+0x5950]        # 0x1400092f0
   1400039a0:	mov    rcx,rdi
   1400039a3:	call   rbx
   1400039a5:	mov    rdi,r13
   1400039a8:	mov    QWORD PTR [rbp-0x28],r13
   1400039ac:	mov    r15,QWORD PTR [rbp-0x48]
   1400039b0:	test   r15,r15
   1400039b3:	je     0x1400039d9
   1400039b5:	mov    rbx,QWORD PTR [rbp-0x40]
   1400039b9:	mov    rax,QWORD PTR [rbx]
   1400039bc:	mov    rdi,QWORD PTR [rax+0x28]
   1400039c0:	mov    rcx,rdi
   1400039c3:	call   QWORD PTR [rip+0x5927]        # 0x1400092f0
   1400039c9:	mov    rdx,r15
   1400039cc:	mov    rcx,rbx
   1400039cf:	call   rdi
   1400039d1:	mov    rdi,QWORD PTR [rbp-0x28]
   1400039d5:	mov    QWORD PTR [rbp-0x48],r13
   1400039d9:	mov    rbx,QWORD PTR [rbp-0x40]
   1400039dd:	test   rbx,rbx
   1400039e0:	je     0x1400038ec
   1400039e6:	mov    rax,QWORD PTR [rbx]
   1400039e9:	mov    rdi,QWORD PTR [rax+0x10]
   1400039ed:	mov    rcx,rdi
   1400039f0:	call   QWORD PTR [rip+0x58fa]        # 0x1400092f0
   1400039f6:	mov    rcx,rbx
   1400039f9:	call   rdi
   1400039fb:	mov    QWORD PTR [rbp-0x40],r13
   1400039ff:	jmp    0x1400038e8
   140003a04:	mov    rcx,QWORD PTR [r14+0x28]
   140003a08:	test   rcx,rcx
   140003a0b:	je     0x140003a21
   140003a0d:	mov    r9d,eax
   140003a10:	lea    r8,[rip+0x7fb9]        # 0x14000b9d0
   140003a17:	mov    edx,0x3
   140003a1c:	call   0x140002dd8
   140003a21:	mov    r15d,0xa3
   140003a27:	jmp    0x140003a4c
   140003a29:	mov    rcx,QWORD PTR [r14+0x28]
   140003a2d:	test   rcx,rcx
   140003a30:	je     0x140003a46
   140003a32:	mov    r9d,eax
   140003a35:	lea    r8,[rip+0x7f44]        # 0x14000b980
   140003a3c:	mov    edx,0x3
   140003a41:	call   0x140002dd8
   140003a46:	mov    r15d,0x9c
   140003a4c:	lea    r14,[rip+0x5ddd]        # 0x140009830
   140003a53:	mov    DWORD PTR [rbp-0x50],edi
   140003a56:	cmp    QWORD PTR [rbp-0x48],r13
   140003a5a:	je     0x140003a7d
   140003a5c:	mov    rsi,QWORD PTR [rbp-0x40]
   140003a60:	mov    rax,QWORD PTR [rsi]
   140003a63:	mov    rbx,QWORD PTR [rax+0x28]
   140003a67:	mov    rcx,rbx
   140003a6a:	call   QWORD PTR [rip+0x5880]        # 0x1400092f0
   140003a70:	mov    rdx,QWORD PTR [rbp-0x48]
   140003a74:	mov    rcx,rsi
   140003a77:	call   rbx
   140003a79:	mov    QWORD PTR [rbp-0x48],r13
   140003a7d:	mov    rsi,QWORD PTR [rbp-0x40]
   140003a81:	test   rsi,rsi
   140003a84:	je     0x140003a9f
   140003a86:	mov    rax,QWORD PTR [rsi]
   140003a89:	mov    rbx,QWORD PTR [rax+0x10]
   140003a8d:	mov    rcx,rbx
   140003a90:	call   QWORD PTR [rip+0x585a]        # 0x1400092f0
   140003a96:	mov    rcx,rsi
   140003a99:	call   rbx
   140003a9b:	mov    QWORD PTR [rbp-0x40],r13
   140003a9f:	mov    rbx,QWORD PTR [rbp-0x28]
   140003aa3:	test   rbx,rbx
   140003aa6:	je     0x140003ac1
   140003aa8:	mov    rax,QWORD PTR [rbx]
   140003aab:	mov    rsi,QWORD PTR [rax+0x10]
   140003aaf:	mov    rcx,rsi
   140003ab2:	call   QWORD PTR [rip+0x5838]        # 0x1400092f0
   140003ab8:	mov    rcx,rbx
   140003abb:	call   rsi
   140003abd:	mov    QWORD PTR [rbp-0x28],r13
   140003ac1:	mov    rbx,QWORD PTR [rbp-0x20]
   140003ac5:	test   rbx,rbx
   140003ac8:	je     0x140003adf
   140003aca:	mov    rax,QWORD PTR [rbx]
   140003acd:	mov    rsi,QWORD PTR [rax+0x10]
   140003ad1:	mov    rcx,rsi
   140003ad4:	call   QWORD PTR [rip+0x5816]        # 0x1400092f0
   140003ada:	mov    rcx,rbx
   140003add:	call   rsi
   140003adf:	lea    rax,[rip+0x7a42]        # 0x14000b528
   140003ae6:	mov    DWORD PTR [rbp-0x38],r15d
   140003aea:	mov    QWORD PTR [rbp-0x48],rax
   140003aee:	lea    rdx,[rbp-0x48]
   140003af2:	lea    rax,[rip+0x7dbf]        # 0x14000b8b8
   140003af9:	mov    QWORD PTR [rbp-0x30],r14
   140003afd:	lea    rcx,[rbp-0x50]
   140003b01:	mov    QWORD PTR [rbp-0x40],rax
   140003b05:	call   0x140002dc4
   140003b0a:	mov    eax,edi
   140003b0c:	mov    rcx,QWORD PTR [rbp-0x10]
   140003b10:	xor    rcx,rsp
   140003b13:	call   0x140008030
   140003b18:	lea    r11,[rsp+0x70]
   140003b1d:	mov    rbx,QWORD PTR [r11+0x40]
   140003b21:	mov    rsi,QWORD PTR [r11+0x48]
   140003b25:	mov    rsp,r11
   140003b28:	pop    r15
   140003b2a:	pop    r14
   140003b2c:	pop    r13
   140003b2e:	pop    rdi
   140003b2f:	pop    rbp
   140003b30:	ret    
   140003b31:	mov    rcx,QWORD PTR [r14+0x28]
   140003b35:	lea    r8,[rip+0x7edc]        # 0x14000ba18
   140003b3c:	xor    edx,edx
   140003b3e:	call   0x140002dd8
   140003b43:	mov    rdi,QWORD PTR [rbp-0x28]
   140003b47:	test   rdi,rdi
   140003b4a:	je     0x140003b65
   140003b4c:	mov    rax,QWORD PTR [rdi]
   140003b4f:	mov    rbx,QWORD PTR [rax+0x10]
   140003b53:	mov    rcx,rbx
   140003b56:	call   QWORD PTR [rip+0x5794]        # 0x1400092f0
   140003b5c:	mov    rcx,rdi
   140003b5f:	call   rbx
   140003b61:	mov    QWORD PTR [rbp-0x28],r13
   140003b65:	mov    rdi,QWORD PTR [rbp-0x20]
   140003b69:	test   rdi,rdi
   140003b6c:	je     0x140003b83
   140003b6e:	mov    rax,QWORD PTR [rdi]
   140003b71:	mov    rbx,QWORD PTR [rax+0x10]
   140003b75:	mov    rcx,rbx
   140003b78:	call   QWORD PTR [rip+0x5772]        # 0x1400092f0
   140003b7e:	mov    rcx,rdi
   140003b81:	call   rbx
   140003b83:	xor    eax,eax
   140003b85:	jmp    0x140003b0c
   140003b87:	mov    ecx,0xc00000e5
   140003b8c:	call   QWORD PTR [rip+0x570e]        # 0x1400092a0
   140003b92:	int3   
   140003b93:	int3   
   140003b94:	int3   
   140003b95:	int3   
   140003b96:	int3   
   140003b97:	int3   
   140003b98:	int3   
   140003b99:	int3   
   140003b9a:	int3   
   140003b9b:	int3   
   140003b9c:	rex push rbp
   140003b9e:	push   rbx
   140003b9f:	push   rsi
   140003ba0:	push   rdi
   140003ba1:	push   r14
   140003ba3:	push   r15
   140003ba5:	mov    rbp,rsp
   140003ba8:	sub    rsp,0x78
   140003bac:	mov    rax,QWORD PTR [rip+0xa455]        # 0x14000e008
   140003bb3:	xor    rax,rsp
   140003bb6:	mov    QWORD PTR [rbp-0x18],rax
   140003bba:	mov    DWORD PTR [rbp-0x48],0x8007054f
   140003bc1:	mov    rsi,r9
   140003bc4:	mov    rdi,r8
   140003bc7:	mov    r14,rdx
   140003bca:	mov    r15,rcx
   140003bcd:	test   rcx,rcx
   140003bd0:	jne    0x140003bed
   140003bd2:	mov    r14d,0xb8
   140003bd8:	lea    rsi,[rip+0x79a1]        # 0x14000b580
   140003bdf:	lea    rcx,[rbp-0x48]
   140003be3:	call   0x1400023f8
   140003be8:	jmp    0x140003cf5
   140003bed:	test   rdx,rdx
   140003bf0:	jne    0x140003c01
   140003bf2:	mov    r14d,0xb9
   140003bf8:	lea    rsi,[rip+0x7e71]        # 0x14000ba70
   140003bff:	jmp    0x140003bdf
   140003c01:	test   r8,r8
   140003c04:	jne    0x140003c15
   140003c06:	mov    r14d,0xba
   140003c0c:	lea    rsi,[rip+0x7e7d]        # 0x14000ba90
   140003c13:	jmp    0x140003bdf
   140003c15:	test   r9,r9
   140003c18:	jne    0x140003c29
   140003c1a:	mov    r14d,0xbb
   140003c20:	lea    rsi,[rip+0x7e91]        # 0x14000bab8
   140003c27:	jmp    0x140003bdf
   140003c29:	and    QWORD PTR [r9],0x0
   140003c2d:	mov    rax,QWORD PTR [rdx]
   140003c30:	and    QWORD PTR [rbp-0x20],0x0
   140003c35:	mov    rbx,QWORD PTR [rax+0x28]
   140003c39:	mov    rcx,rbx
   140003c3c:	call   QWORD PTR [rip+0x56ae]        # 0x1400092f0
   140003c42:	xor    edx,edx
   140003c44:	lea    rax,[rbp-0x20]
   140003c48:	mov    QWORD PTR [rsp+0x28],rax
   140003c4d:	mov    r9,rdi
   140003c50:	and    QWORD PTR [rsp+0x20],0x0
   140003c56:	mov    rcx,r14
   140003c59:	lea    r8d,[rdx+0x4]
   140003c5d:	call   rbx
   140003c5f:	mov    ebx,eax
   140003c61:	test   eax,eax
   140003c63:	jns    0x140003c88
   140003c65:	mov    r9,rdi
   140003c68:	mov    DWORD PTR [rsp+0x20],eax
   140003c6c:	lea    r8,[rip+0x7e6d]        # 0x14000bae0
   140003c73:	mov    edx,0x3
   140003c78:	mov    rcx,r15
   140003c7b:	call   0x140002dd8
   140003c80:	mov    r14d,0xc3
   140003c86:	jmp    0x140003ccd
   140003c88:	mov    rbx,QWORD PTR [rbp-0x20]
   140003c8c:	mov    rax,QWORD PTR [rbx]
   140003c8f:	mov    rdi,QWORD PTR [rax]
   140003c92:	mov    rcx,rdi
   140003c95:	call   QWORD PTR [rip+0x5655]        # 0x1400092f0
   140003c9b:	mov    r8,rsi
   140003c9e:	lea    rdx,[rip+0x836b]        # 0x14000c010
   140003ca5:	mov    rcx,rbx
   140003ca8:	call   rdi
   140003caa:	mov    ebx,eax
   140003cac:	test   eax,eax
   140003cae:	jns    0x140003d25
   140003cb0:	mov    r9d,eax
   140003cb3:	lea    r8,[rip+0x7e76]        # 0x14000bb30
   140003cba:	mov    edx,0x3
   140003cbf:	mov    rcx,r15
   140003cc2:	call   0x140002dd8
   140003cc7:	mov    r14d,0xc7
   140003ccd:	mov    DWORD PTR [rbp-0x48],ebx
   140003cd0:	lea    rsi,[rip+0x5b59]        # 0x140009830
   140003cd7:	mov    rbx,QWORD PTR [rbp-0x20]
   140003cdb:	test   rbx,rbx
   140003cde:	je     0x140003cf5
   140003ce0:	mov    rax,QWORD PTR [rbx]
   140003ce3:	mov    rdi,QWORD PTR [rax+0x10]
   140003ce7:	mov    rcx,rdi
   140003cea:	call   QWORD PTR [rip+0x5600]        # 0x1400092f0
   140003cf0:	mov    rcx,rbx
   140003cf3:	call   rdi
   140003cf5:	lea    rax,[rip+0x782c]        # 0x14000b528
   140003cfc:	mov    DWORD PTR [rbp-0x30],r14d
   140003d00:	mov    QWORD PTR [rbp-0x40],rax
   140003d04:	lea    rdx,[rbp-0x40]
   140003d08:	lea    rax,[rip+0x7d41]        # 0x14000ba50
   140003d0f:	mov    QWORD PTR [rbp-0x28],rsi
   140003d13:	lea    rcx,[rbp-0x48]
   140003d17:	mov    QWORD PTR [rbp-0x38],rax
   140003d1b:	call   0x140002dc4
   140003d20:	mov    eax,DWORD PTR [rbp-0x48]
   140003d23:	jmp    0x140003d45
   140003d25:	mov    rbx,QWORD PTR [rbp-0x20]
   140003d29:	test   rbx,rbx
   140003d2c:	je     0x140003d43
   140003d2e:	mov    rax,QWORD PTR [rbx]
   140003d31:	mov    rdi,QWORD PTR [rax+0x10]
   140003d35:	mov    rcx,rdi
   140003d38:	call   QWORD PTR [rip+0x55b2]        # 0x1400092f0
   140003d3e:	mov    rcx,rbx
   140003d41:	call   rdi
   140003d43:	xor    eax,eax
   140003d45:	mov    rcx,QWORD PTR [rbp-0x18]
   140003d49:	xor    rcx,rsp
   140003d4c:	call   0x140008030
   140003d51:	add    rsp,0x78
   140003d55:	pop    r15
   140003d57:	pop    r14
   140003d59:	pop    rdi
   140003d5a:	pop    rsi
   140003d5b:	pop    rbx
   140003d5c:	pop    rbp
   140003d5d:	ret    
   140003d5e:	int3   
   140003d5f:	int3   
   140003d60:	int3   
   140003d61:	int3   
   140003d62:	int3   
   140003d63:	int3   
   140003d64:	mov    QWORD PTR [rsp+0x20],rbx
   140003d69:	push   rbp
   140003d6a:	push   rsi
   140003d6b:	push   rdi
   140003d6c:	push   r14
   140003d6e:	push   r15
   140003d70:	mov    rbp,rsp
   140003d73:	sub    rsp,0x70
   140003d77:	mov    rax,QWORD PTR [rip+0xa28a]        # 0x14000e008
   140003d7e:	xor    rax,rsp
   140003d81:	mov    QWORD PTR [rbp-0x8],rax
   140003d85:	mov    DWORD PTR [rbp-0x40],0x8007054f
   140003d8c:	mov    rsi,r8
   140003d8f:	mov    r15,rdx
   140003d92:	mov    r14,rcx
   140003d95:	test   rdx,rdx
   140003d98:	jne    0x140003db8
   140003d9a:	mov    r15d,0xd5
   140003da0:	lea    r14,[rip+0x7df1]        # 0x14000bb98
   140003da7:	lea    rcx,[rbp-0x40]
   140003dab:	call   0x1400023f8
   140003db0:	mov    ebx,DWORD PTR [rbp-0x40]
   140003db3:	jmp    0x140004094
   140003db8:	test   r8,r8
   140003dbb:	jne    0x140003dcc
   140003dbd:	mov    r15d,0xd6
   140003dc3:	lea    r14,[rip+0x7dfe]        # 0x14000bbc8
   140003dca:	jmp    0x140003da7
   140003dcc:	and    QWORD PTR [rbp-0x18],0x0
   140003dd1:	mov    r9,rdx
   140003dd4:	mov    BYTE PTR [r8],0x0
   140003dd8:	mov    edx,0x1
   140003ddd:	mov    rcx,QWORD PTR [rcx+0x28]
   140003de1:	lea    r8,[rip+0x7e08]        # 0x14000bbf0
   140003de8:	call   0x140002dd8
   140003ded:	cmp    QWORD PTR [rbp-0x18],0x0
   140003df2:	je     0x140003e00
   140003df4:	mov    ecx,0xc00000e5
   140003df9:	call   QWORD PTR [rip+0x54a1]        # 0x1400092a0
   140003dff:	int3   
   140003e00:	mov    rdx,QWORD PTR [r14+0x10]
   140003e04:	lea    r9,[rbp-0x18]
   140003e08:	mov    rcx,QWORD PTR [r14+0x28]
   140003e0c:	mov    r8,r15
   140003e0f:	call   0x140003b9c
   140003e14:	mov    ebx,eax
   140003e16:	test   eax,eax
   140003e18:	js     0x140004157
   140003e1e:	mov    rdi,QWORD PTR [r14+0x20]
   140003e22:	mov    rax,QWORD PTR [rdi]
   140003e25:	mov    rbx,QWORD PTR [rax+0x8]
   140003e29:	mov    rcx,rbx
   140003e2c:	call   QWORD PTR [rip+0x54be]        # 0x1400092f0
   140003e32:	mov    rcx,rdi
   140003e35:	call   rbx
   140003e37:	mov    rbx,QWORD PTR [rbp-0x18]
   140003e3b:	and    QWORD PTR [rbp-0x38],0x0
   140003e40:	mov    QWORD PTR [rbp-0x30],rdi
   140003e44:	mov    rax,QWORD PTR [rbx]
   140003e47:	mov    rdi,QWORD PTR [rax+0x20]
   140003e4b:	mov    rcx,rdi
   140003e4e:	call   QWORD PTR [rip+0x549c]        # 0x1400092f0
   140003e54:	lea    r8,[rbp-0x38]
   140003e58:	mov    edx,0x8
   140003e5d:	mov    rcx,rbx
   140003e60:	call   rdi
   140003e62:	mov    rcx,QWORD PTR [r14+0x28]
   140003e66:	mov    ebx,eax
   140003e68:	test   eax,eax
   140003e6a:	jns    0x140003ef2
   140003e70:	test   rcx,rcx
   140003e73:	je     0x140003e8d
   140003e75:	mov    r9,r15
   140003e78:	mov    DWORD PTR [rsp+0x20],eax
   140003e7c:	lea    r8,[rip+0x7dad]        # 0x14000bc30
   140003e83:	mov    edx,0x3
   140003e88:	call   0x140002dd8
   140003e8d:	cmp    QWORD PTR [rbp-0x38],0x0
   140003e92:	lea    r14,[rip+0x5997]        # 0x140009830
   140003e99:	mov    r15d,0xe6
   140003e9f:	mov    DWORD PTR [rbp-0x40],ebx
   140003ea2:	je     0x140003ec6
   140003ea4:	mov    rsi,QWORD PTR [rbp-0x30]
   140003ea8:	mov    rax,QWORD PTR [rsi]
   140003eab:	mov    rdi,QWORD PTR [rax+0x28]
   140003eaf:	mov    rcx,rdi
   140003eb2:	call   QWORD PTR [rip+0x5438]        # 0x1400092f0
   140003eb8:	mov    rdx,QWORD PTR [rbp-0x38]
   140003ebc:	mov    rcx,rsi
   140003ebf:	call   rdi
   140003ec1:	and    QWORD PTR [rbp-0x38],0x0
   140003ec6:	mov    rsi,QWORD PTR [rbp-0x30]
   140003eca:	test   rsi,rsi
   140003ecd:	je     0x140004076
   140003ed3:	mov    rax,QWORD PTR [rsi]
   140003ed6:	mov    rdi,QWORD PTR [rax+0x10]
   140003eda:	mov    rcx,rdi
   140003edd:	call   QWORD PTR [rip+0x540d]        # 0x1400092f0
   140003ee3:	mov    rcx,rsi
   140003ee6:	call   rdi
   140003ee8:	and    QWORD PTR [rbp-0x30],0x0
   140003eed:	jmp    0x140004076
   140003ef2:	mov    r9,QWORD PTR [rbp-0x38]
   140003ef6:	lea    r8,[rip+0x7d9b]        # 0x14000bc98
   140003efd:	mov    edx,0x1
   140003f02:	call   0x140002dd8
   140003f07:	mov    rcx,QWORD PTR [rbp-0x38]
   140003f0b:	lea    rdx,[rip+0x7db6]        # 0x14000bcc8
   140003f12:	call   QWORD PTR [rip+0x5328]        # 0x140009240
   140003f18:	test   eax,eax
   140003f1a:	je     0x1400040ee
   140003f20:	mov    rcx,QWORD PTR [rbp-0x38]
   140003f24:	lea    rdx,[rip+0x7db5]        # 0x14000bce0
   140003f2b:	call   QWORD PTR [rip+0x530f]        # 0x140009240
   140003f31:	test   eax,eax
   140003f33:	je     0x1400040ee
   140003f39:	cmp    QWORD PTR [rbp-0x38],0x0
   140003f3e:	je     0x140003f62
   140003f40:	mov    rdi,QWORD PTR [rbp-0x30]
   140003f44:	mov    rax,QWORD PTR [rdi]
   140003f47:	mov    rbx,QWORD PTR [rax+0x28]
   140003f4b:	mov    rcx,rbx
   140003f4e:	call   QWORD PTR [rip+0x539c]        # 0x1400092f0
   140003f54:	mov    rdx,QWORD PTR [rbp-0x38]
   140003f58:	mov    rcx,rdi
   140003f5b:	call   rbx
   140003f5d:	and    QWORD PTR [rbp-0x38],0x0
   140003f62:	mov    rdi,QWORD PTR [rbp-0x30]
   140003f66:	test   rdi,rdi
   140003f69:	je     0x140003f80
   140003f6b:	mov    rax,QWORD PTR [rdi]
   140003f6e:	mov    rbx,QWORD PTR [rax+0x10]
   140003f72:	mov    rcx,rbx
   140003f75:	call   QWORD PTR [rip+0x5375]        # 0x1400092f0
   140003f7b:	mov    rcx,rdi
   140003f7e:	call   rbx
   140003f80:	mov    rbx,QWORD PTR [rbp-0x18]
   140003f84:	mov    eax,0xfffffff0
   140003f89:	mov    DWORD PTR [rbp-0x10],eax
   140003f8c:	mov    DWORD PTR [rbp-0xc],eax
   140003f8f:	mov    rax,QWORD PTR [rbx]
   140003f92:	mov    rdi,QWORD PTR [rax+0x50]
   140003f96:	mov    rcx,rdi
   140003f99:	call   QWORD PTR [rip+0x5351]        # 0x1400092f0
   140003f9f:	lea    r9,[rbp-0xc]
   140003fa3:	xor    edx,edx
   140003fa5:	lea    r8,[rbp-0x10]
   140003fa9:	mov    rcx,rbx
   140003fac:	call   rdi
   140003fae:	mov    ebx,eax
   140003fb0:	test   eax,eax
   140003fb2:	jns    0x140003fe0
   140003fb4:	mov    rcx,QWORD PTR [r14+0x28]
   140003fb8:	test   rcx,rcx
   140003fbb:	je     0x140003fd5
   140003fbd:	mov    r9,r15
   140003fc0:	mov    DWORD PTR [rsp+0x20],eax
   140003fc4:	lea    r8,[rip+0x7d85]        # 0x14000bd50
   140003fcb:	mov    edx,0x3
   140003fd0:	call   0x140002dd8
   140003fd5:	mov    r15d,0xfa
   140003fdb:	jmp    0x14000406c
   140003fe0:	mov    r9d,DWORD PTR [rbp-0xc]
   140003fe4:	cmp    r9d,0x4
   140003fe8:	jl     0x140004009
   140003fea:	mov    rcx,QWORD PTR [r14+0x28]
   140003fee:	lea    r8,[rip+0x7ddb]        # 0x14000bdd0
   140003ff5:	mov    edx,0x2
   140003ffa:	call   0x140002dd8
   140003fff:	xor    ebx,ebx
   140004001:	mov    BYTE PTR [rsi],0x1
   140004004:	jmp    0x140004157
   140004009:	cmp    DWORD PTR [rbp-0x10],0x4
   14000400d:	jl     0x1400040c9
   140004013:	mov    rbx,QWORD PTR [rbp-0x18]
   140004017:	mov    BYTE PTR [rsi],0x1
   14000401a:	mov    rdi,QWORD PTR [r14+0x18]
   14000401e:	mov    rax,QWORD PTR [rbx]
   140004021:	mov    rsi,QWORD PTR [rax+0x58]
   140004025:	mov    rcx,rsi
   140004028:	call   QWORD PTR [rip+0x52c2]        # 0x1400092f0
   14000402e:	mov    edx,0x58
   140004033:	mov    r9,rdi
   140004036:	mov    rcx,rbx
   140004039:	lea    r8d,[rdx-0x54]
   14000403d:	call   rsi
   14000403f:	mov    ebx,eax
   140004041:	test   eax,eax
   140004043:	jns    0x1400040c4
   140004045:	mov    rcx,QWORD PTR [r14+0x28]
   140004049:	test   rcx,rcx
   14000404c:	je     0x140004066
   14000404e:	mov    r9,r15
   140004051:	mov    DWORD PTR [rsp+0x20],eax
   140004055:	lea    r8,[rip+0x7de4]        # 0x14000be40
   14000405c:	mov    edx,0x3
   140004061:	call   0x140002dd8
   140004066:	mov    r15d,0x109
   14000406c:	mov    DWORD PTR [rbp-0x40],ebx
   14000406f:	lea    r14,[rip+0x57ba]        # 0x140009830
   140004076:	mov    rdi,QWORD PTR [rbp-0x18]
   14000407a:	test   rdi,rdi
   14000407d:	je     0x140004094
   14000407f:	mov    rax,QWORD PTR [rdi]
   140004082:	mov    rsi,QWORD PTR [rax+0x10]
   140004086:	mov    rcx,rsi
   140004089:	call   QWORD PTR [rip+0x5261]        # 0x1400092f0
   14000408f:	mov    rcx,rdi
   140004092:	call   rsi
   140004094:	lea    rax,[rip+0x748d]        # 0x14000b528
   14000409b:	mov    DWORD PTR [rbp-0x28],r15d
   14000409f:	mov    QWORD PTR [rbp-0x38],rax
   1400040a3:	lea    rdx,[rbp-0x38]
   1400040a7:	lea    rax,[rip+0x7aca]        # 0x14000bb78
   1400040ae:	mov    QWORD PTR [rbp-0x20],r14
   1400040b2:	lea    rcx,[rbp-0x40]
   1400040b6:	mov    QWORD PTR [rbp-0x30],rax
   1400040ba:	call   0x140002dc4
   1400040bf:	jmp    0x140004175
   1400040c4:	mov    BYTE PTR [r14+0x8],0x1
   1400040c9:	mov    rbx,QWORD PTR [rbp-0x18]
   1400040cd:	test   rbx,rbx
   1400040d0:	je     0x1400040e7
   1400040d2:	mov    rax,QWORD PTR [rbx]
   1400040d5:	mov    rdi,QWORD PTR [rax+0x10]
   1400040d9:	mov    rcx,rdi
   1400040dc:	call   QWORD PTR [rip+0x520e]        # 0x1400092f0
   1400040e2:	mov    rcx,rbx
   1400040e5:	call   rdi
   1400040e7:	xor    eax,eax
   1400040e9:	jmp    0x140004177
   1400040ee:	mov    r9,QWORD PTR [rbp-0x38]
   1400040f2:	lea    r8,[rip+0x7bf7]        # 0x14000bcf0
   1400040f9:	mov    rcx,QWORD PTR [r14+0x28]
   1400040fd:	mov    edx,0x3
   140004102:	call   0x140002dd8
   140004107:	mov    r14,QWORD PTR [rbp-0x38]
   14000410b:	xor    ebx,ebx
   14000410d:	mov    BYTE PTR [rsi],0x1
   140004110:	test   r14,r14
   140004113:	je     0x140004135
   140004115:	mov    rsi,QWORD PTR [rbp-0x30]
   140004119:	mov    rax,QWORD PTR [rsi]
   14000411c:	mov    rdi,QWORD PTR [rax+0x28]
   140004120:	mov    rcx,rdi
   140004123:	call   QWORD PTR [rip+0x51c7]        # 0x1400092f0
   140004129:	mov    rdx,r14
   14000412c:	mov    rcx,rsi
   14000412f:	call   rdi
   140004131:	and    QWORD PTR [rbp-0x38],rbx
   140004135:	mov    rsi,QWORD PTR [rbp-0x30]
   140004139:	test   rsi,rsi
   14000413c:	je     0x140004157
   14000413e:	mov    rax,QWORD PTR [rsi]
   140004141:	mov    rdi,QWORD PTR [rax+0x10]
   140004145:	mov    rcx,rdi
   140004148:	call   QWORD PTR [rip+0x51a2]        # 0x1400092f0
   14000414e:	mov    rcx,rsi
   140004151:	call   rdi
   140004153:	and    QWORD PTR [rbp-0x30],rbx
   140004157:	mov    rdi,QWORD PTR [rbp-0x18]
   14000415b:	test   rdi,rdi
   14000415e:	je     0x140004175
   140004160:	mov    rax,QWORD PTR [rdi]
   140004163:	mov    rsi,QWORD PTR [rax+0x10]
   140004167:	mov    rcx,rsi
   14000416a:	call   QWORD PTR [rip+0x5180]        # 0x1400092f0
   140004170:	mov    rcx,rdi
   140004173:	call   rsi
   140004175:	mov    eax,ebx
   140004177:	mov    rcx,QWORD PTR [rbp-0x8]
   14000417b:	xor    rcx,rsp
   14000417e:	call   0x140008030
   140004183:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000418b:	add    rsp,0x70
   14000418f:	pop    r15
   140004191:	pop    r14
   140004193:	pop    rdi
   140004194:	pop    rsi
   140004195:	pop    rbp
   140004196:	ret    
   140004197:	int3   
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400041a5:	push   rbp
   1400041a6:	push   rsi
   1400041a7:	push   rdi
   1400041a8:	push   r14
   1400041aa:	push   r15
   1400041ac:	mov    rbp,rsp
   1400041af:	sub    rsp,0x70
   1400041b3:	mov    rax,QWORD PTR [rip+0x9e4e]        # 0x14000e008
   1400041ba:	xor    rax,rsp
   1400041bd:	mov    QWORD PTR [rbp-0x10],rax
   1400041c1:	mov    DWORD PTR [rbp-0x40],0x8007054f
   1400041c8:	mov    r14,rdx
   1400041cb:	mov    rsi,rcx
   1400041ce:	test   rdx,rdx
   1400041d1:	jne    0x1400041f1
   1400041d3:	lea    rcx,[rbp-0x40]
   1400041d7:	mov    r15d,0x119
   1400041dd:	lea    r14,[rip+0x7ce4]        # 0x14000bec8
   1400041e4:	call   0x1400023f8
   1400041e9:	mov    ebx,DWORD PTR [rbp-0x40]
   1400041ec:	jmp    0x1400042b7
   1400041f1:	mov    rdi,QWORD PTR [rcx+0x10]
   1400041f5:	and    QWORD PTR [rbp-0x18],0x0
   1400041fa:	mov    rax,QWORD PTR [rdi]
   1400041fd:	mov    rbx,QWORD PTR [rax]
   140004200:	mov    rcx,rbx
   140004203:	call   QWORD PTR [rip+0x50e7]        # 0x1400092f0
   140004209:	lea    r8,[rbp-0x18]
   14000420d:	mov    rcx,rdi
   140004210:	lea    rdx,[rip+0x7de9]        # 0x14000c000
   140004217:	call   rbx
   140004219:	mov    ebx,eax
   14000421b:	test   eax,eax
   14000421d:	jns    0x140004244
   14000421f:	mov    rcx,QWORD PTR [rsi+0x28]
   140004223:	test   rcx,rcx
   140004226:	je     0x14000423c
   140004228:	mov    r9d,eax
   14000422b:	lea    r8,[rip+0x7cbe]        # 0x14000bef0
   140004232:	mov    edx,0x3
   140004237:	call   0x140002dd8
   14000423c:	mov    r15d,0x11f
   140004242:	jmp    0x14000428f
   140004244:	mov    rbx,QWORD PTR [rbp-0x18]
   140004248:	mov    rax,QWORD PTR [rbx]
   14000424b:	mov    rdi,QWORD PTR [rax+0x78]
   14000424f:	mov    rcx,rdi
   140004252:	call   QWORD PTR [rip+0x5098]        # 0x1400092f0
   140004258:	mov    r8,r14
   14000425b:	xor    edx,edx
   14000425d:	mov    rcx,rbx
   140004260:	call   rdi
   140004262:	mov    ebx,eax
   140004264:	test   eax,eax
   140004266:	jns    0x1400042e6
   140004268:	mov    rcx,QWORD PTR [rsi+0x28]
   14000426c:	test   rcx,rcx
   14000426f:	je     0x140004289
   140004271:	mov    r9,r14
   140004274:	mov    DWORD PTR [rsp+0x20],eax
   140004278:	lea    r8,[rip+0x7cd1]        # 0x14000bf50
   14000427f:	mov    edx,0x3
   140004284:	call   0x140002dd8
   140004289:	mov    r15d,0x123
   14000428f:	mov    rdi,QWORD PTR [rbp-0x18]
   140004293:	lea    r14,[rip+0x5596]        # 0x140009830
   14000429a:	mov    DWORD PTR [rbp-0x40],ebx
   14000429d:	test   rdi,rdi
   1400042a0:	je     0x1400042b7
   1400042a2:	mov    rax,QWORD PTR [rdi]
   1400042a5:	mov    rsi,QWORD PTR [rax+0x10]
   1400042a9:	mov    rcx,rsi
   1400042ac:	call   QWORD PTR [rip+0x503e]        # 0x1400092f0
   1400042b2:	mov    rcx,rdi
   1400042b5:	call   rsi
   1400042b7:	lea    rax,[rip+0x726a]        # 0x14000b528
   1400042be:	mov    DWORD PTR [rbp-0x28],r15d
   1400042c2:	mov    QWORD PTR [rbp-0x38],rax
   1400042c6:	lea    rdx,[rbp-0x38]
   1400042ca:	lea    rax,[rip+0x7bd7]        # 0x14000bea8
   1400042d1:	mov    QWORD PTR [rbp-0x20],r14
   1400042d5:	lea    rcx,[rbp-0x40]
   1400042d9:	mov    QWORD PTR [rbp-0x30],rax
   1400042dd:	call   0x140002dc4
   1400042e2:	mov    eax,ebx
   1400042e4:	jmp    0x140004306
   1400042e6:	mov    rbx,QWORD PTR [rbp-0x18]
   1400042ea:	test   rbx,rbx
   1400042ed:	je     0x140004304
   1400042ef:	mov    rax,QWORD PTR [rbx]
   1400042f2:	mov    rdi,QWORD PTR [rax+0x10]
   1400042f6:	mov    rcx,rdi
   1400042f9:	call   QWORD PTR [rip+0x4ff1]        # 0x1400092f0
   1400042ff:	mov    rcx,rbx
   140004302:	call   rdi
   140004304:	xor    eax,eax
   140004306:	mov    rcx,QWORD PTR [rbp-0x10]
   14000430a:	xor    rcx,rsp
   14000430d:	call   0x140008030
   140004312:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000431a:	add    rsp,0x70
   14000431e:	pop    r15
   140004320:	pop    r14
   140004322:	pop    rdi
   140004323:	pop    rsi
   140004324:	pop    rbp
   140004325:	ret    
   140004326:	int3   
   140004327:	int3   
   140004328:	int3   
   140004329:	int3   
   14000432a:	int3   
   14000432b:	int3   
   14000432c:	mov    QWORD PTR [rsp+0x8],rbx
   140004331:	mov    QWORD PTR [rsp+0x10],rsi
   140004336:	push   rdi
   140004337:	sub    rsp,0x20
   14000433b:	lea    rax,[rip+0x515e]        # 0x1400094a0
   140004342:	mov    rdi,rcx
   140004345:	mov    QWORD PTR [rcx],rax
   140004348:	mov    rsi,QWORD PTR [rcx+0x10]
   14000434c:	test   rsi,rsi
   14000434f:	je     0x14000436b
   140004351:	mov    rax,QWORD PTR [rsi]
   140004354:	mov    rbx,QWORD PTR [rax+0x10]
   140004358:	mov    rcx,rbx
   14000435b:	call   QWORD PTR [rip+0x4f8f]        # 0x1400092f0
   140004361:	mov    rcx,rsi
   140004364:	call   rbx
   140004366:	and    QWORD PTR [rdi+0x10],0x0
   14000436b:	mov    rsi,QWORD PTR [rdi+0x18]
   14000436f:	test   rsi,rsi
   140004372:	je     0x140004393
   140004374:	mov    rax,QWORD PTR [rsi]
   140004377:	mov    rbx,QWORD PTR [rax+0x40]
   14000437b:	mov    rcx,rbx
   14000437e:	call   QWORD PTR [rip+0x4f6c]        # 0x1400092f0
   140004384:	mov    edx,0x1
   140004389:	mov    rcx,rsi
   14000438c:	call   rbx
   14000438e:	and    QWORD PTR [rdi+0x18],0x0
   140004393:	cmp    BYTE PTR [rdi+0x9],0x0
   140004397:	je     0x1400043b3
   140004399:	mov    rcx,QWORD PTR [rdi+0x28]
   14000439d:	lea    r8,[rip+0x7c0c]        # 0x14000bfb0
   1400043a4:	mov    edx,0x1
   1400043a9:	call   0x140002dd8
   1400043ae:	call   0x140007ba8
   1400043b3:	mov    rsi,QWORD PTR [rdi+0x20]
   1400043b7:	test   rsi,rsi
   1400043ba:	je     0x1400043d6
   1400043bc:	mov    rax,QWORD PTR [rsi]
   1400043bf:	mov    rbx,QWORD PTR [rax+0x10]
   1400043c3:	mov    rcx,rbx
   1400043c6:	call   QWORD PTR [rip+0x4f24]        # 0x1400092f0
   1400043cc:	mov    rcx,rsi
   1400043cf:	call   rbx
   1400043d1:	and    QWORD PTR [rdi+0x20],0x0
   1400043d6:	mov    rsi,QWORD PTR [rdi+0x18]
   1400043da:	test   rsi,rsi
   1400043dd:	je     0x1400043fe
   1400043df:	mov    rax,QWORD PTR [rsi]
   1400043e2:	mov    rbx,QWORD PTR [rax+0x40]
   1400043e6:	mov    rcx,rbx
   1400043e9:	call   QWORD PTR [rip+0x4f01]        # 0x1400092f0
   1400043ef:	mov    edx,0x1
   1400043f4:	mov    rcx,rsi
   1400043f7:	call   rbx
   1400043f9:	and    QWORD PTR [rdi+0x18],0x0
   1400043fe:	mov    rsi,QWORD PTR [rdi+0x10]
   140004402:	test   rsi,rsi
   140004405:	je     0x140004421
   140004407:	mov    rax,QWORD PTR [rsi]
   14000440a:	mov    rbx,QWORD PTR [rax+0x10]
   14000440e:	mov    rcx,rbx
   140004411:	call   QWORD PTR [rip+0x4ed9]        # 0x1400092f0
   140004417:	mov    rcx,rsi
   14000441a:	call   rbx
   14000441c:	and    QWORD PTR [rdi+0x10],0x0
   140004421:	mov    rbx,QWORD PTR [rsp+0x30]
   140004426:	mov    rsi,QWORD PTR [rsp+0x38]
   14000442b:	add    rsp,0x20
   14000442f:	pop    rdi
   140004430:	ret    
   140004431:	int3   
   140004432:	int3   
   140004433:	int3   
   140004434:	int3   
   140004435:	int3   
   140004436:	int3   
   140004437:	int3   
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	rex push rbx
   140004442:	sub    rsp,0x20
   140004446:	lea    rax,[rip+0x505b]        # 0x1400094a8
   14000444d:	mov    rbx,rcx
   140004450:	mov    QWORD PTR [rcx],rax
   140004453:	test   dl,0x1
   140004456:	je     0x14000445d
   140004458:	call   0x140007cd8
   14000445d:	mov    rax,rbx
   140004460:	add    rsp,0x20
   140004464:	pop    rbx
   140004465:	ret    
   140004466:	int3   
   140004467:	int3   
   140004468:	int3   
   140004469:	int3   
   14000446a:	int3   
   14000446b:	int3   
   14000446c:	int3   
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	mov    rax,rsp
   140004473:	mov    QWORD PTR [rax+0x8],rbx
   140004477:	mov    QWORD PTR [rax+0x10],rbp
   14000447b:	mov    QWORD PTR [rax+0x18],rsi
   14000447f:	mov    QWORD PTR [rax+0x20],rdi
   140004483:	push   r14
   140004485:	sub    rsp,0x20
   140004489:	xor    ebp,ebp
   14000448b:	mov    r14,r8
   14000448e:	mov    rdi,rdx
   140004491:	mov    rsi,rcx
   140004494:	test   r8,r8
   140004497:	jne    0x1400044ba
   140004499:	mov    edx,0x80070057
   14000449e:	lea    r9,[rip+0x5f83]        # 0x14000a428
   1400044a5:	mov    ecx,0x4000000
   1400044aa:	lea    r8d,[r14+0x1]
   1400044ae:	mov    ebp,edx
   1400044b0:	call   0x140007244
   1400044b5:	jmp    0x140004546
   1400044ba:	mov    QWORD PTR [r8],rbp
   1400044bd:	mov    rax,QWORD PTR [rip+0x7b6c]        # 0x14000c030
   1400044c4:	cmp    rax,QWORD PTR [rdx]
   1400044c7:	jne    0x1400044d6
   1400044c9:	mov    rax,QWORD PTR [rip+0x7b68]        # 0x14000c038
   1400044d0:	cmp    rax,QWORD PTR [rdx+0x8]
   1400044d4:	je     0x1400044ef
   1400044d6:	mov    rax,QWORD PTR [rip+0x6ff3]        # 0x14000b4d0
   1400044dd:	cmp    rax,QWORD PTR [rdx]
   1400044e0:	jne    0x1400044f4
   1400044e2:	mov    rax,QWORD PTR [rip+0x6fef]        # 0x14000b4d8
   1400044e9:	cmp    rax,QWORD PTR [rdx+0x8]
   1400044ed:	jne    0x1400044f4
   1400044ef:	mov    QWORD PTR [r8],rcx
   1400044f2:	jmp    0x140004531
   1400044f4:	mov    rcx,QWORD PTR [rip+0x5f4d]        # 0x14000a448
   1400044fb:	mov    rax,QWORD PTR [rip+0x5f4e]        # 0x14000a450
   140004502:	cmp    rcx,QWORD PTR [rdx]
   140004505:	jne    0x14000454a
   140004507:	cmp    rax,QWORD PTR [rdx+0x8]
   14000450b:	je     0x14000452e
   14000450d:	cmp    rcx,QWORD PTR [rdx]
   140004510:	jne    0x14000454a
   140004512:	cmp    rax,QWORD PTR [rdx+0x8]
   140004516:	je     0x14000452e
   140004518:	cmp    rcx,QWORD PTR [rdx]
   14000451b:	jne    0x14000454a
   14000451d:	cmp    rax,QWORD PTR [rdx+0x8]
   140004521:	je     0x14000452e
   140004523:	cmp    rcx,QWORD PTR [rdx]
   140004526:	jne    0x14000454a
   140004528:	cmp    rax,QWORD PTR [rdx+0x8]
   14000452c:	jne    0x14000454a
   14000452e:	mov    QWORD PTR [r8],rsi
   140004531:	mov    rcx,QWORD PTR [rsi]
   140004534:	mov    rbx,QWORD PTR [rcx+0x8]
   140004538:	mov    rcx,rbx
   14000453b:	call   QWORD PTR [rip+0x4daf]        # 0x1400092f0
   140004541:	mov    rcx,rsi
   140004544:	call   rbx
   140004546:	mov    eax,ebp
   140004548:	jmp    0x140004565
   14000454a:	mov    rax,QWORD PTR [rsi]
   14000454d:	mov    rbx,QWORD PTR [rax+0x58]
   140004551:	mov    rcx,rbx
   140004554:	call   QWORD PTR [rip+0x4d96]        # 0x1400092f0
   14000455a:	mov    r8,r14
   14000455d:	mov    rdx,rdi
   140004560:	mov    rcx,rsi
   140004563:	call   rbx
   140004565:	mov    rbx,QWORD PTR [rsp+0x30]
   14000456a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000456f:	mov    rsi,QWORD PTR [rsp+0x40]
   140004574:	mov    rdi,QWORD PTR [rsp+0x48]
   140004579:	add    rsp,0x20
   14000457d:	pop    r14
   14000457f:	ret    
   140004580:	int3   
   140004581:	int3   
   140004582:	int3   
   140004583:	int3   
   140004584:	int3   
   140004585:	int3   
   140004586:	int3   
   140004587:	int3   
   140004588:	int3   
   140004589:	int3   
   14000458a:	int3   
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	mov    QWORD PTR [rsp+0x8],rbx
   140004595:	push   rdi
   140004596:	sub    rsp,0x20
   14000459a:	mov    rax,QWORD PTR [rcx]
   14000459d:	mov    rdi,rcx
   1400045a0:	mov    rbx,QWORD PTR [rax+0x48]
   1400045a4:	mov    rcx,rbx
   1400045a7:	call   QWORD PTR [rip+0x4d43]        # 0x1400092f0
   1400045ad:	mov    rcx,rdi
   1400045b0:	call   rbx
   1400045b2:	mov    eax,0x1
   1400045b7:	lock xadd DWORD PTR [rdi+0x8],eax
   1400045bc:	inc    eax
   1400045be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045c3:	add    rsp,0x20
   1400045c7:	pop    rdi
   1400045c8:	ret    
   1400045c9:	int3   
   1400045ca:	int3   
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045d5:	push   rdi
   1400045d6:	sub    rsp,0x20
   1400045da:	mov    rax,QWORD PTR [rcx]
   1400045dd:	mov    rdi,rcx
   1400045e0:	mov    rbx,QWORD PTR [rax+0x50]
   1400045e4:	mov    rcx,rbx
   1400045e7:	call   QWORD PTR [rip+0x4d03]        # 0x1400092f0
   1400045ed:	mov    rcx,rdi
   1400045f0:	call   rbx
   1400045f2:	or     eax,0xffffffff
   1400045f5:	lock xadd DWORD PTR [rdi+0x8],eax
   1400045fa:	sub    eax,0x1
   1400045fd:	jg     0x14000461b
   1400045ff:	mov    rax,QWORD PTR [rdi]
   140004602:	mov    rbx,QWORD PTR [rax+0x40]
   140004606:	mov    rcx,rbx
   140004609:	call   QWORD PTR [rip+0x4ce1]        # 0x1400092f0
   14000460f:	mov    edx,0x1
   140004614:	mov    rcx,rdi
   140004617:	call   rbx
   140004619:	xor    eax,eax
   14000461b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004620:	add    rsp,0x20
   140004624:	pop    rdi
   140004625:	ret    
   140004626:	int3   
   140004627:	int3   
   140004628:	int3   
   140004629:	int3   
   14000462a:	int3   
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    DWORD PTR [r8],0x1
   140004637:	xor    eax,eax
   140004639:	ret    
   14000463a:	int3   
   14000463b:	int3   
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	xor    eax,eax
   140004642:	ret    
   140004643:	int3   
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	rex push rbx
   140004652:	sub    rsp,0x60
   140004656:	mov    rax,QWORD PTR [rip+0x99ab]        # 0x14000e008
   14000465d:	xor    rax,rsp
   140004660:	mov    QWORD PTR [rsp+0x58],rax
   140004665:	mov    DWORD PTR [rsp+0x30],0x8007054f
   14000466d:	test   r9,r9
   140004670:	jne    0x14000468d
   140004672:	lea    rcx,[rsp+0x30]
   140004677:	lea    eax,[r9+0x26]
   14000467b:	lea    rdx,[rip+0x7a1e]        # 0x14000c0a0
   140004682:	call   0x1400023f8
   140004687:	mov    ebx,DWORD PTR [rsp+0x30]
   14000468b:	jmp    0x1400046f1
   14000468d:	mov    DWORD PTR [r9],0x1
   140004694:	mov    rcx,QWORD PTR [rcx+0x10]
   140004698:	cmp    edx,0xf0803
   14000469e:	je     0x1400046cb
   1400046a0:	test   r8,r8
   1400046a3:	lea    rax,[rip+0x7a1e]        # 0x14000c0c8
   1400046aa:	mov    r9d,edx
   1400046ad:	mov    edx,0x3
   1400046b2:	cmovne rax,r8
   1400046b6:	lea    r8,[rip+0x7ae3]        # 0x14000c1a0
   1400046bd:	mov    QWORD PTR [rsp+0x20],rax
   1400046c2:	call   0x140002dd8
   1400046c7:	xor    eax,eax
   1400046c9:	jmp    0x140004723
   1400046cb:	lea    r8,[rip+0x7a0e]        # 0x14000c0e0
   1400046d2:	mov    edx,0x3
   1400046d7:	call   0x140002dd8
   1400046dc:	mov    ebx,0x8000ffff
   1400046e1:	lea    rdx,[rip+0x7aa0]        # 0x14000c188
   1400046e8:	mov    DWORD PTR [rsp+0x30],ebx
   1400046ec:	mov    eax,0x30
   1400046f1:	lea    rcx,[rip+0x7948]        # 0x14000c040
   1400046f8:	mov    QWORD PTR [rsp+0x50],rdx
   1400046fd:	mov    QWORD PTR [rsp+0x38],rcx
   140004702:	lea    rdx,[rsp+0x38]
   140004707:	lea    rcx,[rip+0x7972]        # 0x14000c080
   14000470e:	mov    DWORD PTR [rsp+0x48],eax
   140004712:	mov    QWORD PTR [rsp+0x40],rcx
   140004717:	lea    rcx,[rsp+0x30]
   14000471c:	call   0x140002dc4
   140004721:	mov    eax,ebx
   140004723:	mov    rcx,QWORD PTR [rsp+0x58]
   140004728:	xor    rcx,rsp
   14000472b:	call   0x140008030
   140004730:	add    rsp,0x60
   140004734:	pop    rbx
   140004735:	ret    
   140004736:	int3   
   140004737:	int3   
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	mov    QWORD PTR [rsp+0x18],rbx
   140004745:	push   rsi
   140004746:	push   rdi
   140004747:	push   r14
   140004749:	sub    rsp,0x20
   14000474d:	mov    r14,QWORD PTR [rsp+0x60]
   140004752:	lea    r8,[rip+0x7a97]        # 0x14000c1f0
   140004759:	mov    rsi,QWORD PTR [rsp+0x68]
   14000475e:	mov    rdi,r9
   140004761:	mov    r9,rdx
   140004764:	mov    rbx,rcx
   140004767:	mov    rcx,QWORD PTR [rcx+0x10]
   14000476b:	mov    edx,0x2
   140004770:	call   0x140002dd8
   140004775:	mov    rcx,QWORD PTR [rbx+0x10]
   140004779:	lea    r8,[rip+0x7ab0]        # 0x14000c230
   140004780:	mov    r9,rdi
   140004783:	mov    edx,0x2
   140004788:	call   0x140002dd8
   14000478d:	test   r14,r14
   140004790:	je     0x140004796
   140004792:	and    QWORD PTR [r14],0x0
   140004796:	test   rsi,rsi
   140004799:	je     0x1400047a1
   14000479b:	mov    DWORD PTR [rsi],0x1
   1400047a1:	xor    eax,eax
   1400047a3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400047a8:	add    rsp,0x20
   1400047ac:	pop    r14
   1400047ae:	pop    rdi
   1400047af:	pop    rsi
   1400047b0:	ret    
   1400047b1:	int3   
   1400047b2:	int3   
   1400047b3:	int3   
   1400047b4:	int3   
   1400047b5:	int3   
   1400047b6:	int3   
   1400047b7:	int3   
   1400047b8:	int3   
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400047c5:	push   rdi
   1400047c6:	sub    rsp,0x60
   1400047ca:	mov    rax,QWORD PTR [rip+0x9837]        # 0x14000e008
   1400047d1:	xor    rax,rsp
   1400047d4:	mov    QWORD PTR [rsp+0x58],rax
   1400047d9:	mov    rax,QWORD PTR [rsp+0x90]
   1400047e1:	xor    ebx,ebx
   1400047e3:	mov    DWORD PTR [rsp+0x30],0x8007054f
   1400047eb:	mov    edi,r8d
   1400047ee:	test   rax,rax
   1400047f1:	jne    0x14000483e
   1400047f3:	lea    rcx,[rsp+0x30]
   1400047f8:	call   0x1400023f8
   1400047fd:	lea    rax,[rip+0x783c]        # 0x14000c040
   140004804:	mov    DWORD PTR [rsp+0x48],0x6f
   14000480c:	mov    QWORD PTR [rsp+0x38],rax
   140004811:	lea    rdx,[rsp+0x38]
   140004816:	lea    rax,[rip+0x7a43]        # 0x14000c260
   14000481d:	mov    QWORD PTR [rsp+0x40],rax
   140004822:	lea    rcx,[rsp+0x30]
   140004827:	lea    rax,[rip+0x7872]        # 0x14000c0a0
   14000482e:	mov    QWORD PTR [rsp+0x50],rax
   140004833:	call   0x140002dc4
   140004838:	mov    ebx,DWORD PTR [rsp+0x30]
   14000483c:	jmp    0x1400048a7
   14000483e:	mov    DWORD PTR [rax],0x1
   140004844:	mov    eax,DWORD PTR [rip+0x9db6]        # 0x14000e600
   14000484a:	test   eax,eax
   14000484c:	je     0x140004853
   14000484e:	cmp    eax,r8d
   140004851:	je     0x1400048a7
   140004853:	mov    rcx,QWORD PTR [rcx+0x10]
   140004857:	cmp    r8d,r9d
   14000485a:	cmova  edi,r9d
   14000485e:	xor    edx,edx
   140004860:	imul   eax,edi,0x3e8
   140004866:	div    r9d
   140004869:	mov    r8d,eax
   14000486c:	mov    eax,0xcccccccd
   140004871:	mul    r8d
   140004874:	shr    edx,0x3
   140004877:	mov    r9d,edx
   14000487a:	lea    eax,[rdx+rdx*4]
   14000487d:	xor    edx,edx
   14000487f:	add    eax,eax
   140004881:	sub    r8d,eax
   140004884:	lea    rax,[rip+0x79f5]        # 0x14000c280
   14000488b:	mov    QWORD PTR [rsp+0x28],rax
   140004890:	mov    DWORD PTR [rsp+0x20],r8d
   140004895:	lea    r8,[rip+0x79ec]        # 0x14000c288
   14000489c:	call   0x140002dd8
   1400048a1:	mov    DWORD PTR [rip+0x9d59],edi        # 0x14000e600
   1400048a7:	mov    eax,ebx
   1400048a9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400048ae:	xor    rcx,rsp
   1400048b1:	call   0x140008030
   1400048b6:	mov    rbx,QWORD PTR [rsp+0x78]
   1400048bb:	add    rsp,0x60
   1400048bf:	pop    rdi
   1400048c0:	ret    
   1400048c1:	int3   
   1400048c2:	int3   
   1400048c3:	int3   
   1400048c4:	int3   
   1400048c5:	int3   
   1400048c6:	int3   
   1400048c7:	int3   
   1400048c8:	mov    r11,rsp
   1400048cb:	mov    QWORD PTR [r11+0x8],rbx
   1400048cf:	push   rbp
   1400048d0:	mov    rbp,rsp
   1400048d3:	sub    rsp,0x70
   1400048d7:	mov    rax,QWORD PTR [rip+0x972a]        # 0x14000e008
   1400048de:	xor    rax,rsp
   1400048e1:	mov    QWORD PTR [rbp-0x10],rax
   1400048e5:	xor    ebx,ebx
   1400048e7:	mov    DWORD PTR [rbp-0x14],0x4
   1400048ee:	mov    QWORD PTR [r11-0x38],rbx
   1400048f2:	lea    rax,[rbp-0x20]
   1400048f6:	mov    QWORD PTR [r11-0x40],rax
   1400048fa:	lea    rdx,[rip+0x53df]        # 0x140009ce0
   140004901:	mov    QWORD PTR [r11-0x48],rbx
   140004905:	xor    r9d,r9d
   140004908:	mov    DWORD PTR [rsp+0x28],0x3
   140004910:	xor    r8d,r8d
   140004913:	mov    rcx,0xffffffff80000002
   14000491a:	mov    DWORD PTR [rsp+0x20],ebx
   14000491e:	mov    QWORD PTR [rbp-0x20],rbx
   140004922:	mov    DWORD PTR [rbp-0x18],ebx
   140004925:	call   QWORD PTR [rip+0x470d]        # 0x140009038
   14000492b:	mov    rcx,QWORD PTR [rbp-0x20]
   14000492f:	test   rcx,rcx
   140004932:	je     0x14000499b
   140004934:	test   eax,eax
   140004936:	jne    0x14000499b
   140004938:	lea    rax,[rbp-0x14]
   14000493c:	xor    r9d,r9d
   14000493f:	mov    QWORD PTR [rsp+0x28],rax
   140004944:	lea    rdx,[rip+0x5445]        # 0x140009d90
   14000494b:	lea    rax,[rbp-0x18]
   14000494f:	xor    r8d,r8d
   140004952:	mov    QWORD PTR [rsp+0x20],rax
   140004957:	call   QWORD PTR [rip+0x46d3]        # 0x140009030
   14000495d:	mov    ecx,DWORD PTR [rbp-0x18]
   140004960:	lea    r9d,[rbx+0x4]
   140004964:	test   eax,eax
   140004966:	mov    DWORD PTR [rsp+0x28],0x4
   14000496e:	lea    rax,[rbp-0x18]
   140004972:	cmovne ecx,ebx
   140004975:	mov    QWORD PTR [rsp+0x20],rax
   14000497a:	inc    ecx
   14000497c:	lea    rdx,[rip+0x540d]        # 0x140009d90
   140004983:	mov    DWORD PTR [rbp-0x18],ecx
   140004986:	xor    r8d,r8d
   140004989:	mov    rcx,QWORD PTR [rbp-0x20]
   14000498d:	call   QWORD PTR [rip+0x4695]        # 0x140009028
   140004993:	mov    rcx,QWORD PTR [rbp-0x20]
   140004997:	test   eax,eax
   140004999:	je     0x1400049a2
   14000499b:	mov    DWORD PTR [rbp-0x18],0x5
   1400049a2:	test   rcx,rcx
   1400049a5:	je     0x1400049ad
   1400049a7:	call   QWORD PTR [rip+0x4673]        # 0x140009020
   1400049ad:	mov    eax,DWORD PTR [rbp-0x18]
   1400049b0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400049b4:	xor    rcx,rsp
   1400049b7:	call   0x140008030
   1400049bc:	mov    rbx,QWORD PTR [rsp+0x80]
   1400049c4:	add    rsp,0x70
   1400049c8:	pop    rbp
   1400049c9:	ret    
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    r11,rsp
   1400049d3:	push   rbx
   1400049d4:	sub    rsp,0x60
   1400049d8:	mov    rax,QWORD PTR [rip+0x9629]        # 0x14000e008
   1400049df:	xor    rax,rsp
   1400049e2:	mov    QWORD PTR [rsp+0x58],rax
   1400049e7:	and    QWORD PTR [r11-0x28],0x0
   1400049ec:	lea    rax,[r11-0x18]
   1400049f0:	and    QWORD PTR [r11-0x18],0x0
   1400049f5:	lea    rdx,[rip+0x52e4]        # 0x140009ce0
   1400049fc:	mov    QWORD PTR [r11-0x30],rax
   140004a00:	xor    r9d,r9d
   140004a03:	and    QWORD PTR [r11-0x38],0x0
   140004a08:	xor    r8d,r8d
   140004a0b:	mov    DWORD PTR [rsp+0x28],0x3
   140004a13:	mov    rcx,0xffffffff80000002
   140004a1a:	and    DWORD PTR [rsp+0x20],0x0
   140004a1f:	call   QWORD PTR [rip+0x4613]        # 0x140009038
   140004a25:	movzx  ebx,ax
   140004a28:	or     ebx,0x80070000
   140004a2e:	test   eax,eax
   140004a30:	cmovle ebx,eax
   140004a33:	test   ebx,ebx
   140004a35:	js     0x140004a62
   140004a37:	mov    rcx,QWORD PTR [rsp+0x50]
   140004a3c:	lea    rdx,[rip+0x534d]        # 0x140009d90
   140004a43:	call   QWORD PTR [rip+0x45c7]        # 0x140009010
   140004a49:	mov    rcx,QWORD PTR [rsp+0x50]
   140004a4e:	movzx  ebx,ax
   140004a51:	or     ebx,0x80070000
   140004a57:	test   eax,eax
   140004a59:	cmovle ebx,eax
   140004a5c:	call   QWORD PTR [rip+0x45be]        # 0x140009020
   140004a62:	mov    eax,ebx
   140004a64:	mov    rcx,QWORD PTR [rsp+0x58]
   140004a69:	xor    rcx,rsp
   140004a6c:	call   0x140008030
   140004a71:	add    rsp,0x60
   140004a75:	pop    rbx
   140004a76:	ret    
   140004a77:	int3   
   140004a78:	int3   
   140004a79:	int3   
   140004a7a:	int3   
   140004a7b:	int3   
   140004a7c:	int3   
   140004a7d:	int3   
   140004a7e:	int3   
   140004a7f:	int3   
   140004a80:	sub    rsp,0x38
   140004a84:	and    QWORD PTR [rsp+0x20],0x0
   140004a8a:	movzx  r9d,dx
   140004a8e:	mov    edx,0x2b
   140004a93:	call   QWORD PTR [rip+0x456f]        # 0x140009008
   140004a99:	add    rsp,0x38
   140004a9d:	ret    
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	int3   
   140004aa1:	int3   
   140004aa2:	int3   
   140004aa3:	int3   
   140004aa4:	mov    r11,rsp
   140004aa7:	sub    rsp,0x58
   140004aab:	mov    rax,QWORD PTR [rip+0x9556]        # 0x14000e008
   140004ab2:	xor    rax,rsp
   140004ab5:	mov    QWORD PTR [rsp+0x48],rax
   140004aba:	and    QWORD PTR [r11-0x28],0x0
   140004abf:	lea    rax,[r11-0x18]
   140004ac3:	mov    DWORD PTR [r11-0x18],r9d
   140004ac7:	movzx  r9d,dx
   140004acb:	mov    edx,0x2b
   140004ad0:	mov    QWORD PTR [r11-0x30],0x4
   140004ad8:	mov    QWORD PTR [r11-0x38],rax
   140004adc:	call   QWORD PTR [rip+0x4526]        # 0x140009008
   140004ae2:	mov    rcx,QWORD PTR [rsp+0x48]
   140004ae7:	xor    rcx,rsp
   140004aea:	call   0x140008030
   140004aef:	add    rsp,0x58
   140004af3:	ret    
   140004af4:	int3   
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	mov    QWORD PTR [rsp+0x8],rbx
   140004b01:	mov    QWORD PTR [rsp+0x10],rbp
   140004b06:	mov    QWORD PTR [rsp+0x18],rsi
   140004b0b:	push   rdi
   140004b0c:	push   r14
   140004b0e:	push   r15
   140004b10:	sub    rsp,0x40
   140004b14:	mov    rax,QWORD PTR [rip+0x94ed]        # 0x14000e008
   140004b1b:	xor    rax,rsp
   140004b1e:	mov    QWORD PTR [rsp+0x38],rax
   140004b23:	mov    rcx,QWORD PTR [rip+0x94f6]        # 0x14000e020
   140004b2a:	lea    r14,[rip+0x94ef]        # 0x14000e020
   140004b31:	lea    r15,[rip+0x77b0]        # 0x14000c2e8
   140004b38:	cmp    rcx,r14
   140004b3b:	je     0x140004b54
   140004b3d:	test   BYTE PTR [rcx+0x1c],0x10
   140004b41:	je     0x140004b54
   140004b43:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b47:	mov    edx,0xa
   140004b4c:	mov    r8,r15
   140004b4f:	call   0x140004a80
   140004b54:	and    QWORD PTR [rsp+0x30],0x0
   140004b5a:	xor    edx,edx
   140004b5c:	xor    ecx,ecx
   140004b5e:	call   QWORD PTR [rip+0x477c]        # 0x1400092e0
   140004b64:	mov    edi,eax
   140004b66:	mov    ebp,eax
   140004b68:	mov    esi,0x1
   140004b6d:	test   eax,eax
   140004b6f:	je     0x140004bd1
   140004b71:	mov    rcx,QWORD PTR [rip+0x94a8]        # 0x14000e020
   140004b78:	cmp    rcx,r14
   140004b7b:	je     0x140004b9c
   140004b7d:	test   BYTE PTR [rcx+0x1c],0x2
   140004b81:	je     0x140004b9c
   140004b83:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b87:	lea    edx,[rsi+0xa]
   140004b8a:	mov    r9d,eax
   140004b8d:	mov    r8,r15
   140004b90:	call   0x140004aa4
   140004b95:	mov    rcx,QWORD PTR [rip+0x9484]        # 0x14000e020
   140004b9c:	cmp    edi,esi
   140004b9e:	je     0x140004bd1
   140004ba0:	cmp    edi,0x80010106
   140004ba6:	je     0x140004bd1
   140004ba8:	cmp    rcx,r14
   140004bab:	je     0x140004c96
   140004bb1:	test   BYTE PTR [rcx+0x1c],sil
   140004bb5:	je     0x140004c96
   140004bbb:	mov    rcx,QWORD PTR [rcx+0x10]
   140004bbf:	mov    edx,0xc
   140004bc4:	mov    r8,r15
   140004bc7:	call   0x140004a80
   140004bcc:	jmp    0x140004c8f
   140004bd1:	lea    rax,[rsp+0x30]
   140004bd6:	mov    r8d,esi
   140004bd9:	lea    r9,[rip+0x76f8]        # 0x14000c2d8
   140004be0:	mov    QWORD PTR [rsp+0x20],rax
   140004be5:	xor    edx,edx
   140004be7:	lea    rcx,[rip+0x76da]        # 0x14000c2c8
   140004bee:	call   QWORD PTR [rip+0x46cc]        # 0x1400092c0
   140004bf4:	mov    edi,eax
   140004bf6:	test   eax,eax
   140004bf8:	je     0x140004c1b
   140004bfa:	mov    rcx,QWORD PTR [rip+0x941f]        # 0x14000e020
   140004c01:	cmp    rcx,r14
   140004c04:	je     0x140004c96
   140004c0a:	test   BYTE PTR [rcx+0x1c],sil
   140004c0e:	je     0x140004c96
   140004c14:	mov    edx,0xd
   140004c19:	jmp    0x140004c80
   140004c1b:	mov    rdi,QWORD PTR [rsp+0x30]
   140004c20:	mov    rax,QWORD PTR [rdi]
   140004c23:	mov    rbx,QWORD PTR [rax+0x38]
   140004c27:	mov    rcx,rbx
   140004c2a:	call   QWORD PTR [rip+0x46c0]        # 0x1400092f0
   140004c30:	mov    rcx,rdi
   140004c33:	call   rbx
   140004c35:	mov    edi,eax
   140004c37:	test   eax,eax
   140004c39:	jns    0x140004c8f
   140004c3b:	cmp    eax,0x8024a000
   140004c40:	je     0x140004c69
   140004c42:	cmp    eax,0x8024a004
   140004c47:	je     0x140004c69
   140004c49:	cmp    eax,0x8024002b
   140004c4e:	je     0x140004c69
   140004c50:	mov    rcx,QWORD PTR [rip+0x93c9]        # 0x14000e020
   140004c57:	cmp    rcx,r14
   140004c5a:	je     0x140004c96
   140004c5c:	test   BYTE PTR [rcx+0x1c],sil
   140004c60:	je     0x140004c96
   140004c62:	mov    edx,0xf
   140004c67:	jmp    0x140004c80
   140004c69:	mov    rcx,QWORD PTR [rip+0x93b0]        # 0x14000e020
   140004c70:	cmp    rcx,r14
   140004c73:	je     0x140004c96
   140004c75:	test   BYTE PTR [rcx+0x1c],sil
   140004c79:	je     0x140004c96
   140004c7b:	mov    edx,0xe
   140004c80:	mov    rcx,QWORD PTR [rcx+0x10]
   140004c84:	mov    r9d,eax
   140004c87:	mov    r8,r15
   140004c8a:	call   0x140004aa4
   140004c8f:	mov    rcx,QWORD PTR [rip+0x938a]        # 0x14000e020
   140004c96:	mov    rsi,QWORD PTR [rsp+0x30]
   140004c9b:	test   rsi,rsi
   140004c9e:	je     0x140004cc2
   140004ca0:	mov    rax,QWORD PTR [rsi]
   140004ca3:	mov    rbx,QWORD PTR [rax+0x10]
   140004ca7:	mov    rcx,rbx
   140004caa:	call   QWORD PTR [rip+0x4640]        # 0x1400092f0
   140004cb0:	mov    rcx,rsi
   140004cb3:	call   rbx
   140004cb5:	and    QWORD PTR [rsp+0x30],0x0
   140004cbb:	mov    rcx,QWORD PTR [rip+0x935e]        # 0x14000e020
   140004cc2:	test   ebp,ebp
   140004cc4:	jne    0x140004cd3
   140004cc6:	call   QWORD PTR [rip+0x4604]        # 0x1400092d0
   140004ccc:	mov    rcx,QWORD PTR [rip+0x934d]        # 0x14000e020
   140004cd3:	cmp    rcx,r14
   140004cd6:	je     0x140004cf2
   140004cd8:	test   BYTE PTR [rcx+0x1c],0x10
   140004cdc:	je     0x140004cf2
   140004cde:	mov    rcx,QWORD PTR [rcx+0x10]
   140004ce2:	mov    edx,0x10
   140004ce7:	mov    r9d,edi
   140004cea:	mov    r8,r15
   140004ced:	call   0x140004aa4
   140004cf2:	mov    eax,edi
   140004cf4:	mov    rcx,QWORD PTR [rsp+0x38]
   140004cf9:	xor    rcx,rsp
   140004cfc:	call   0x140008030
   140004d01:	mov    rbx,QWORD PTR [rsp+0x60]
   140004d06:	mov    rbp,QWORD PTR [rsp+0x68]
   140004d0b:	mov    rsi,QWORD PTR [rsp+0x70]
   140004d10:	add    rsp,0x40
   140004d14:	pop    r15
   140004d16:	pop    r14
   140004d18:	pop    rdi
   140004d19:	ret    
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	int3   
   140004d1d:	int3   
   140004d1e:	int3   
   140004d1f:	int3   
   140004d20:	mov    r11,rsp
   140004d23:	sub    rsp,0x58
   140004d27:	mov    rax,QWORD PTR [rip+0x92da]        # 0x14000e008
   140004d2e:	xor    rax,rsp
   140004d31:	mov    QWORD PTR [rsp+0x48],rax
   140004d36:	and    QWORD PTR [r11-0x28],0x0
   140004d3b:	lea    rax,[r11-0x18]
   140004d3f:	mov    edx,0x25
   140004d44:	mov    QWORD PTR [r11-0x18],r9
   140004d48:	movzx  r9d,dx
   140004d4c:	lea    r8,[rip+0x75f5]        # 0x14000c348
   140004d53:	mov    QWORD PTR [r11-0x30],0x8
   140004d5b:	mov    edx,0x2b
   140004d60:	mov    QWORD PTR [r11-0x38],rax
   140004d64:	call   QWORD PTR [rip+0x429e]        # 0x140009008
   140004d6a:	mov    rcx,QWORD PTR [rsp+0x48]
   140004d6f:	xor    rcx,rsp
   140004d72:	call   0x140008030
   140004d77:	add    rsp,0x58
   140004d7b:	ret    
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	int3   
   140004d81:	int3   
   140004d82:	int3   
   140004d83:	int3   
   140004d84:	mov    r11,rsp
   140004d87:	sub    rsp,0x68
   140004d8b:	mov    rax,QWORD PTR [rip+0x9276]        # 0x14000e008
   140004d92:	xor    rax,rsp
   140004d95:	mov    QWORD PTR [rsp+0x58],rax
   140004d9a:	and    QWORD PTR [r11-0x28],0x0
   140004d9f:	lea    rax,[r11+0x28]
   140004da3:	mov    r8d,0x10
   140004da9:	mov    DWORD PTR [r11-0x18],r9d
   140004dad:	movzx  r9d,r8w
   140004db1:	lea    edx,[r8-0xc]
   140004db5:	mov    QWORD PTR [r11-0x30],rdx
   140004db9:	lea    r8,[rip+0x7588]        # 0x14000c348
   140004dc0:	mov    QWORD PTR [r11-0x38],rax
   140004dc4:	lea    rax,[r11-0x18]
   140004dc8:	mov    QWORD PTR [r11-0x40],rdx
   140004dcc:	mov    edx,0x2b
   140004dd1:	mov    QWORD PTR [r11-0x48],rax
   140004dd5:	call   QWORD PTR [rip+0x422d]        # 0x140009008
   140004ddb:	mov    rcx,QWORD PTR [rsp+0x58]
   140004de0:	xor    rcx,rsp
   140004de3:	call   0x140008030
   140004de8:	add    rsp,0x68
   140004dec:	ret    
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	int3   
   140004df1:	int3   
   140004df2:	int3   
   140004df3:	int3   
   140004df4:	mov    r11,rsp
   140004df7:	sub    rsp,0x78
   140004dfb:	mov    rax,QWORD PTR [rip+0x9206]        # 0x14000e008
   140004e02:	xor    rax,rsp
   140004e05:	mov    QWORD PTR [rsp+0x68],rax
   140004e0a:	and    QWORD PTR [r11-0x28],0x0
   140004e0f:	lea    rax,[r11+0x30]
   140004e13:	mov    r8d,0x4
   140004e19:	mov    DWORD PTR [r11-0x18],r9d
   140004e1d:	mov    QWORD PTR [r11-0x30],r8
   140004e21:	mov    QWORD PTR [r11-0x38],rax
   140004e25:	lea    rax,[r11+0x28]
   140004e29:	mov    QWORD PTR [r11-0x40],r8
   140004e2d:	mov    QWORD PTR [r11-0x48],rax
   140004e31:	lea    rax,[r11-0x18]
   140004e35:	mov    QWORD PTR [r11-0x50],r8
   140004e39:	lea    r8,[rip+0x7508]        # 0x14000c348
   140004e40:	movzx  r9d,dx
   140004e44:	mov    edx,0x2b
   140004e49:	mov    QWORD PTR [r11-0x58],rax
   140004e4d:	call   QWORD PTR [rip+0x41b5]        # 0x140009008
   140004e53:	mov    rcx,QWORD PTR [rsp+0x68]
   140004e58:	xor    rcx,rsp
   140004e5b:	call   0x140008030
   140004e60:	add    rsp,0x78
   140004e64:	ret    
   140004e65:	int3   
   140004e66:	int3   
   140004e67:	int3   
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	mov    r11,rsp
   140004e6f:	sub    rsp,0x88
   140004e76:	mov    rax,QWORD PTR [rip+0x918b]        # 0x14000e008
   140004e7d:	xor    rax,rsp
   140004e80:	mov    QWORD PTR [rsp+0x78],rax
   140004e85:	and    QWORD PTR [r11-0x28],0x0
   140004e8a:	lea    rax,[r11+0x38]
   140004e8e:	mov    QWORD PTR [r11-0x30],0x8
   140004e96:	mov    r8d,0xf
   140004e9c:	mov    QWORD PTR [r11-0x38],rax
   140004ea0:	lea    rax,[r11+0x30]
   140004ea4:	mov    DWORD PTR [r11-0x18],r9d
   140004ea8:	movzx  r9d,r8w
   140004eac:	lea    edx,[r8-0xb]
   140004eb0:	mov    QWORD PTR [r11-0x40],rdx
   140004eb4:	lea    r8,[rip+0x748d]        # 0x14000c348
   140004ebb:	mov    QWORD PTR [r11-0x48],rax
   140004ebf:	lea    rax,[r11+0x28]
   140004ec3:	mov    QWORD PTR [r11-0x50],rdx
   140004ec7:	mov    QWORD PTR [r11-0x58],rax
   140004ecb:	lea    rax,[r11-0x18]
   140004ecf:	mov    QWORD PTR [r11-0x60],rdx
   140004ed3:	mov    edx,0x2b
   140004ed8:	mov    QWORD PTR [r11-0x68],rax
   140004edc:	call   QWORD PTR [rip+0x4126]        # 0x140009008
   140004ee2:	mov    rcx,QWORD PTR [rsp+0x78]
   140004ee7:	xor    rcx,rsp
   140004eea:	call   0x140008030
   140004eef:	add    rsp,0x88
   140004ef6:	ret    
   140004ef7:	int3   
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	sub    rsp,0x68
   140004f04:	mov    rax,QWORD PTR [rip+0x90fd]        # 0x14000e008
   140004f0b:	xor    rax,rsp
   140004f0e:	mov    QWORD PTR [rsp+0x58],rax
   140004f13:	mov    rax,QWORD PTR [rsp+0x90]
   140004f1b:	xor    r8d,r8d
   140004f1e:	mov    DWORD PTR [rsp+0x50],r9d
   140004f23:	mov    r10,rcx
   140004f26:	test   rax,rax
   140004f29:	je     0x140004f4f
   140004f2b:	cmp    WORD PTR [rax],r8w
   140004f2f:	jne    0x140004f37
   140004f31:	lea    ecx,[r8+0xe]
   140004f35:	jmp    0x140004f54
   140004f37:	or     rcx,0xffffffffffffffff
   140004f3b:	inc    rcx
   140004f3e:	cmp    WORD PTR [rax+rcx*2],r8w
   140004f43:	jne    0x140004f3b
   140004f45:	lea    rcx,[rcx*2+0x2]
   140004f4d:	jmp    0x140004f54
   140004f4f:	mov    ecx,0xa
   140004f54:	test   rax,rax
   140004f57:	je     0x140004f6a
   140004f59:	cmp    WORD PTR [rax],r8w
   140004f5d:	lea    rdx,[rip+0x7394]        # 0x14000c2f8
   140004f64:	cmove  rax,rdx
   140004f68:	jmp    0x140004f71
   140004f6a:	lea    rax,[rip+0x7397]        # 0x14000c308
   140004f71:	mov    QWORD PTR [rsp+0x40],r8
   140004f76:	mov    edx,0x22
   140004f7b:	mov    QWORD PTR [rsp+0x38],rcx
   140004f80:	lea    r8,[rip+0x73c1]        # 0x14000c348
   140004f87:	mov    QWORD PTR [rsp+0x30],rax
   140004f8c:	mov    rcx,r10
   140004f8f:	lea    rax,[rsp+0x50]
   140004f94:	movzx  r9d,dx
   140004f98:	mov    QWORD PTR [rsp+0x28],0x4
   140004fa1:	mov    edx,0x2b
   140004fa6:	mov    QWORD PTR [rsp+0x20],rax
   140004fab:	call   QWORD PTR [rip+0x4057]        # 0x140009008
   140004fb1:	mov    rcx,QWORD PTR [rsp+0x58]
   140004fb6:	xor    rcx,rsp
   140004fb9:	call   0x140008030
   140004fbe:	add    rsp,0x68
   140004fc2:	ret    
   140004fc3:	int3   
   140004fc4:	int3   
   140004fc5:	int3   
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	int3   
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	sub    rsp,0x48
   140004fd0:	xor    r10d,r10d
   140004fd3:	test   r9,r9
   140004fd6:	je     0x140004ffc
   140004fd8:	cmp    WORD PTR [r9],r10w
   140004fdc:	jne    0x140004fe4
   140004fde:	lea    eax,[r10+0xe]
   140004fe2:	jmp    0x140005001
   140004fe4:	or     rax,0xffffffffffffffff
   140004fe8:	inc    rax
   140004feb:	cmp    WORD PTR [r9+rax*2],r10w
   140004ff0:	jne    0x140004fe8
   140004ff2:	lea    rax,[rax*2+0x2]
   140004ffa:	jmp    0x140005001
   140004ffc:	mov    eax,0xa
   140005001:	test   r9,r9
   140005004:	je     0x140005017
   140005006:	cmp    WORD PTR [r9],r10w
   14000500a:	lea    r8,[rip+0x72e7]        # 0x14000c2f8
   140005011:	cmove  r9,r8
   140005015:	jmp    0x14000501e
   140005017:	lea    r9,[rip+0x72ea]        # 0x14000c308
   14000501e:	mov    QWORD PTR [rsp+0x30],r10
   140005023:	lea    r8,[rip+0x731e]        # 0x14000c348
   14000502a:	mov    QWORD PTR [rsp+0x28],rax
   14000502f:	mov    QWORD PTR [rsp+0x20],r9
   140005034:	movzx  r9d,dx
   140005038:	mov    edx,0x2b
   14000503d:	call   QWORD PTR [rip+0x3fc5]        # 0x140009008
   140005043:	add    rsp,0x48
   140005047:	ret    
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	sub    rsp,0x58
   140005054:	xor    r10d,r10d
   140005057:	test   r9,r9
   14000505a:	je     0x140005080
   14000505c:	cmp    WORD PTR [r9],r10w
   140005060:	jne    0x140005068
   140005062:	lea    eax,[r10+0xe]
   140005066:	jmp    0x140005085
   140005068:	or     rax,0xffffffffffffffff
   14000506c:	inc    rax
   14000506f:	cmp    WORD PTR [r9+rax*2],r10w
   140005074:	jne    0x14000506c
   140005076:	lea    rax,[rax*2+0x2]
   14000507e:	jmp    0x140005085
   140005080:	mov    eax,0xa
   140005085:	test   r9,r9
   140005088:	je     0x14000509b
   14000508a:	cmp    WORD PTR [r9],r10w
   14000508e:	lea    r8,[rip+0x7263]        # 0x14000c2f8
   140005095:	cmove  r9,r8
   140005099:	jmp    0x1400050a2
   14000509b:	lea    r9,[rip+0x7266]        # 0x14000c308
   1400050a2:	mov    QWORD PTR [rsp+0x40],r10
   1400050a7:	lea    r8,[rsp+0x80]
   1400050af:	mov    QWORD PTR [rsp+0x38],0x4
   1400050b8:	mov    QWORD PTR [rsp+0x30],r8
   1400050bd:	lea    r8,[rip+0x7284]        # 0x14000c348
   1400050c4:	mov    QWORD PTR [rsp+0x28],rax
   1400050c9:	mov    QWORD PTR [rsp+0x20],r9
   1400050ce:	movzx  r9d,dx
   1400050d2:	mov    edx,0x2b
   1400050d7:	call   QWORD PTR [rip+0x3f2b]        # 0x140009008
   1400050dd:	add    rsp,0x58
   1400050e1:	ret    
   1400050e2:	int3   
   1400050e3:	int3   
   1400050e4:	int3   
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400050ed:	mov    QWORD PTR [rsp+0x20],rsi
   1400050f2:	push   rdi
   1400050f3:	sub    rsp,0x2e0
   1400050fa:	mov    rax,QWORD PTR [rip+0x8f07]        # 0x14000e008
   140005101:	xor    rax,rsp
   140005104:	mov    QWORD PTR [rsp+0x2d0],rax
   14000510c:	mov    rsi,r8
   14000510f:	mov    rax,rcx
   140005112:	mov    QWORD PTR [rsp+0x50],rcx
   140005117:	or     QWORD PTR [rsp+0x48],0xffffffffffffffff
   14000511d:	xor    ecx,ecx
   14000511f:	mov    bl,cl
   140005121:	mov    DWORD PTR [rsp+0x40],ebx
   140005125:	movzx  edi,WORD PTR [rax]
   140005128:	shr    rdi,1
   14000512b:	lea    rdx,[rip+0x71e2]        # 0x14000c314
   140005132:	mov    rcx,rax
   140005135:	call   QWORD PTR [rip+0x4175]        # 0x1400092b0
   14000513b:	mov    r10,QWORD PTR [rsp+0x50]
   140005140:	movzx  ecx,WORD PTR [r10]
   140005144:	shr    rcx,1
   140005147:	mov    rax,QWORD PTR [r10+0x8]
   14000514b:	xor    edx,edx
   14000514d:	mov    WORD PTR [rax+rcx*2],dx
   140005151:	mov    DWORD PTR [rsp+0x28],0x2
   140005159:	mov    QWORD PTR [rsp+0x20],rdx
   14000515e:	xor    r9d,r9d
   140005161:	lea    r8,[rsp+0x80]
   140005169:	lea    edx,[r9+0x1]
   14000516d:	mov    rcx,QWORD PTR [r10+0x8]
   140005171:	call   QWORD PTR [rip+0x3f41]        # 0x1400090b8
   140005177:	mov    QWORD PTR [rsp+0x48],rax
   14000517c:	cmp    rax,0xffffffffffffffff
   140005180:	jne    0x1400051d0
   140005182:	lea    rcx,[rip+0x8e97]        # 0x14000e020
   140005189:	mov    rax,QWORD PTR [rip+0x8e90]        # 0x14000e020
   140005190:	cmp    rax,rcx
   140005193:	je     0x140005673
   140005199:	test   BYTE PTR [rax+0x1c],0x2
   14000519d:	je     0x140005673
   1400051a3:	call   QWORD PTR [rip+0x3f9f]        # 0x140009148
   1400051a9:	mov    edx,0xa
   1400051ae:	mov    DWORD PTR [rsp+0x20],eax
   1400051b2:	mov    r9,QWORD PTR [rsp+0x50]
   1400051b7:	mov    r9,QWORD PTR [r9+0x8]
   1400051bb:	mov    rcx,QWORD PTR [rip+0x8e5e]        # 0x14000e020
   1400051c2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400051c6:	call   0x140005050
   1400051cb:	jmp    0x140005673
   1400051d0:	lea    rax,[rdi+rdi*1]
   1400051d4:	mov    rdx,QWORD PTR [rsp+0x50]
   1400051d9:	mov    WORD PTR [rdx],ax
   1400051dc:	movzx  ecx,ax
   1400051df:	shr    rcx,1
   1400051e2:	mov    rax,QWORD PTR [rdx+0x8]
   1400051e6:	xor    r8d,r8d
   1400051e9:	mov    WORD PTR [rax+rcx*2],r8w
   1400051ee:	lea    rcx,[rip+0x8e2b]        # 0x14000e020
   1400051f5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400051fa:	jmp    0x140005201
   1400051fc:	mov    rdx,QWORD PTR [rsp+0x50]
   140005201:	movzx  ecx,WORD PTR [rsp+0xac]
   140005209:	cmp    cx,WORD PTR [rip+0x710c]        # 0x14000c31c
   140005210:	jne    0x140005227
   140005212:	movzx  eax,WORD PTR [rsp+0xae]
   14000521a:	cmp    ax,WORD PTR [rip+0x70fd]        # 0x14000c31e
   140005221:	je     0x140005625
   140005227:	cmp    cx,WORD PTR [rip+0x70f2]        # 0x14000c320
   14000522e:	jne    0x140005256
   140005230:	movzx  eax,WORD PTR [rsp+0xae]
   140005238:	cmp    ax,WORD PTR [rip+0x70e3]        # 0x14000c322
   14000523f:	jne    0x140005256
   140005241:	movzx  eax,WORD PTR [rsp+0xb0]
   140005249:	cmp    ax,WORD PTR [rip+0x70d4]        # 0x14000c324
   140005250:	je     0x140005625
   140005256:	mov    dil,r8b
   140005259:	mov    BYTE PTR [rsp+0x44],r8b
   14000525e:	mov    WORD PTR [rsp+0x68],r8w
   140005264:	xor    eax,eax
   140005266:	mov    QWORD PTR [rsp+0x6a],rax
   14000526b:	mov    DWORD PTR [rsp+0x72],eax
   14000526f:	mov    WORD PTR [rsp+0x76],ax
   140005274:	lea    rax,[rsp+0xac]
   14000527c:	or     rcx,0xffffffffffffffff
   140005280:	inc    rcx
   140005283:	cmp    WORD PTR [rax+rcx*2],r8w
   140005288:	jne    0x140005280
   14000528a:	inc    cx
   14000528d:	movzx  eax,WORD PTR [rdx]
   140005290:	lea    rcx,[rax+rcx*2]
   140005294:	mov    WORD PTR [rsp+0x68],cx
   140005299:	mov    rax,QWORD PTR [rsp+0x68]
   14000529e:	add    rax,0x6
   1400052a2:	mov    WORD PTR [rsp+0x6a],ax
   1400052a7:	movzx  ecx,ax
   1400052aa:	call   0x14000869c
   1400052af:	mov    QWORD PTR [rsp+0x70],rax
   1400052b4:	movzx  edx,WORD PTR [rsp+0x6a]
   1400052b9:	shr    rdx,1
   1400052bc:	lea    rcx,[rsp+0xac]
   1400052c4:	mov    QWORD PTR [rsp+0x20],rcx
   1400052c9:	mov    r9,QWORD PTR [rsp+0x50]
   1400052ce:	mov    r9,QWORD PTR [r9+0x8]
   1400052d2:	lea    r8,[rip+0x704f]        # 0x14000c328
   1400052d9:	mov    rcx,rax
   1400052dc:	call   0x140005c48
   1400052e1:	xor    ecx,ecx
   1400052e3:	test   eax,eax
   1400052e5:	js     0x1400055fb
   1400052eb:	mov    ebx,ecx
   1400052ed:	mov    QWORD PTR [rsp+0x60],rcx
   1400052f2:	lea    ecx,[rbx+0x1]
   1400052f5:	mov    eax,DWORD PTR [rsi+0x4]
   1400052f8:	cmp    rbx,rax
   1400052fb:	jae    0x140005350
   1400052fd:	mov    r8d,DWORD PTR [rsi+0x10]
   140005301:	mov    rax,QWORD PTR [rsp+0x70]
   140005306:	lea    rdx,[rax+r8*2]
   14000530a:	imul   rcx,rbx,0x12e
   140005311:	add    rcx,r8
   140005314:	mov    rax,QWORD PTR [rsi+0x8]
   140005318:	lea    rcx,[rax+rcx*2]
   14000531c:	call   QWORD PTR [rip+0x3f1e]        # 0x140009240
   140005322:	test   eax,eax
   140005324:	jne    0x140005341
   140005326:	mov    eax,0x1
   14000532b:	mov    bl,al
   14000532d:	mov    DWORD PTR [rsp+0x40],ebx
   140005331:	mov    BYTE PTR [rsp+0x45],al
   140005335:	mov    dil,al
   140005338:	mov    BYTE PTR [rsp+0x44],al
   14000533c:	jmp    0x1400055fb
   140005341:	mov    ecx,0x1
   140005346:	add    rbx,rcx
   140005349:	mov    QWORD PTR [rsp+0x60],rbx
   14000534e:	jmp    0x1400052f5
   140005350:	mov    eax,DWORD PTR [rsp+0x80]
   140005357:	test   cl,al
   140005359:	je     0x1400053ae
   14000535b:	and    eax,0xfffffffe
   14000535e:	mov    edx,eax
   140005360:	mov    rcx,QWORD PTR [rsp+0x70]
   140005365:	call   QWORD PTR [rip+0x3d55]        # 0x1400090c0
   14000536b:	test   eax,eax
   14000536d:	jne    0x1400053b7
   14000536f:	mov    rax,QWORD PTR [rip+0x8caa]        # 0x14000e020
   140005376:	lea    rbx,[rip+0x8ca3]        # 0x14000e020
   14000537d:	cmp    rax,rbx
   140005380:	je     0x1400053be
   140005382:	test   BYTE PTR [rax+0x1c],0x2
   140005386:	je     0x1400053be
   140005388:	call   QWORD PTR [rip+0x3dba]        # 0x140009148
   14000538e:	mov    edx,0xb
   140005393:	mov    DWORD PTR [rsp+0x20],eax
   140005397:	mov    r9,QWORD PTR [rsp+0x70]
   14000539c:	mov    rcx,QWORD PTR [rip+0x8c7d]        # 0x14000e020
   1400053a3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400053a7:	call   0x140005050
   1400053ac:	jmp    0x1400053be
   1400053ae:	lea    rbx,[rip+0x8c6b]        # 0x14000e020
   1400053b5:	jmp    0x1400053c3
   1400053b7:	lea    rbx,[rip+0x8c62]        # 0x14000e020
   1400053be:	mov    ecx,0x1
   1400053c3:	mov    eax,DWORD PTR [rsp+0x80]
   1400053ca:	test   al,0x10
   1400053cc:	je     0x140005465
   1400053d2:	bt     eax,0xa
   1400053d6:	jae    0x14000542e
   1400053d8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400053dd:	call   QWORD PTR [rip+0x3ce5]        # 0x1400090c8
   1400053e3:	test   eax,eax
   1400053e5:	jne    0x1400055e9
   1400053eb:	mov    rax,QWORD PTR [rip+0x8c2e]        # 0x14000e020
   1400053f2:	cmp    rax,rbx
   1400053f5:	je     0x1400055f7
   1400053fb:	test   BYTE PTR [rax+0x1c],0x2
   1400053ff:	je     0x1400055f7
   140005405:	call   QWORD PTR [rip+0x3d3d]        # 0x140009148
   14000540b:	mov    edx,0xc
   140005410:	mov    DWORD PTR [rsp+0x20],eax
   140005414:	mov    r9,QWORD PTR [rsp+0x70]
   140005419:	mov    rcx,QWORD PTR [rip+0x8c00]        # 0x14000e020
   140005420:	mov    rcx,QWORD PTR [rcx+0x10]
   140005424:	call   0x140005050
   140005429:	jmp    0x1400055f7
   14000542e:	mov    r8,rsi
   140005431:	mov    dl,cl
   140005433:	lea    rcx,[rsp+0x68]
   140005438:	call   0x1400050e8
   14000543d:	xor    ecx,ecx
   14000543f:	test   al,al
   140005441:	jne    0x140005451
   140005443:	cmp    BYTE PTR [rsp+0x40],cl
   140005447:	jne    0x140005451
   140005449:	mov    ebx,ecx
   14000544b:	mov    DWORD PTR [rsp+0x40],ecx
   14000544f:	jmp    0x14000545c
   140005451:	mov    eax,0x1
   140005456:	mov    ebx,eax
   140005458:	mov    DWORD PTR [rsp+0x40],eax
   14000545c:	mov    BYTE PTR [rsp+0x45],bl
   140005460:	jmp    0x1400055ed
   140005465:	mov    rcx,QWORD PTR [rsp+0x70]
   14000546a:	call   QWORD PTR [rip+0x3c60]        # 0x1400090d0
   140005470:	test   eax,eax
   140005472:	jne    0x14000549e
   140005474:	mov    rax,QWORD PTR [rip+0x8ba5]        # 0x14000e020
   14000547b:	cmp    rax,rbx
   14000547e:	je     0x1400055f7
   140005484:	test   BYTE PTR [rax+0x1c],0x2
   140005488:	je     0x1400055f7
   14000548e:	call   QWORD PTR [rip+0x3cb4]        # 0x140009148
   140005494:	mov    edx,0xd
   140005499:	jmp    0x140005410
   14000549e:	mov    r11d,0x1
   1400054a4:	add    DWORD PTR [rsi+0x1c],r11d
   1400054a8:	mov    r9d,DWORD PTR [rsi+0x1c]
   1400054ac:	mov    r8d,DWORD PTR [rsi+0x18]
   1400054b0:	test   r8d,r8d
   1400054b3:	je     0x1400055e9
   1400054b9:	imul   eax,r9d,0x64
   1400054bd:	xor    edx,edx
   1400054bf:	div    r8d
   1400054c2:	cmp    eax,DWORD PTR [rsi+0x14]
   1400054c5:	jbe    0x1400055e9
   1400054cb:	mov    DWORD PTR [rsi+0x14],eax
   1400054ce:	lea    edi,[r11+0x63]
   1400054d2:	cmp    eax,edi
   1400054d4:	jbe    0x140005508
   1400054d6:	mov    rcx,QWORD PTR [rip+0x8b43]        # 0x14000e020
   1400054dd:	cmp    rcx,rbx
   1400054e0:	je     0x140005505
   1400054e2:	test   BYTE PTR [rcx+0x1c],r11b
   1400054e6:	je     0x140005505
   1400054e8:	lea    edx,[rdi-0x56]
   1400054eb:	mov    DWORD PTR [rsp+0x28],r8d
   1400054f0:	mov    DWORD PTR [rsp+0x20],r9d
   1400054f5:	mov    r9d,eax
   1400054f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054fc:	call   0x140004df4
   140005501:	lea    r11d,[rdi-0x63]
   140005505:	mov    DWORD PTR [rsi+0x14],edi
   140005508:	mov    rax,QWORD PTR [rsi+0x20]
   14000550c:	test   rax,rax
   14000550f:	je     0x1400055e9
   140005515:	mov    r9d,DWORD PTR [rsi+0x14]
   140005519:	movsd  xmm1,QWORD PTR [rax+0x18]
   14000551e:	mov    r8d,DWORD PTR [rax+0x10]
   140005522:	xorps  xmm0,xmm0
   140005525:	cvtsi2sd xmm0,r9
   14000552a:	mulsd  xmm0,xmm1
   14000552e:	cvttsd2si rdx,xmm0
   140005533:	add    edx,r8d
   140005536:	mov    QWORD PTR [rsp+0x58],rdx
   14000553b:	cmp    edx,edi
   14000553d:	jbe    0x140005575
   14000553f:	mov    rcx,QWORD PTR [rip+0x8ada]        # 0x14000e020
   140005546:	cmp    rcx,rbx
   140005549:	je     0x140005572
   14000554b:	test   BYTE PTR [rcx+0x1c],r11b
   14000554f:	je     0x140005572
   140005551:	movsd  QWORD PTR [rsp+0x30],xmm1
   140005557:	mov    DWORD PTR [rsp+0x28],r8d
   14000555c:	mov    DWORD PTR [rsp+0x20],r9d
   140005561:	mov    r9d,edx
   140005564:	mov    rcx,QWORD PTR [rcx+0x10]
   140005568:	call   0x140004e6c
   14000556d:	mov    rdx,QWORD PTR [rsp+0x58]
   140005572:	mov    DWORD PTR [rsi+0x14],edi
   140005575:	mov    rcx,QWORD PTR [rip+0x8aa4]        # 0x14000e020
   14000557c:	cmp    rcx,rbx
   14000557f:	je     0x1400055cc
   140005581:	test   BYTE PTR [rcx+0x1c],0x8
   140005585:	je     0x1400055a1
   140005587:	mov    eax,DWORD PTR [rsi+0x14]
   14000558a:	mov    DWORD PTR [rsp+0x20],eax
   14000558e:	mov    r9d,edx
   140005591:	mov    rcx,QWORD PTR [rcx+0x10]
   140005595:	call   0x140004d84
   14000559a:	mov    rcx,QWORD PTR [rip+0x8a7f]        # 0x14000e020
   1400055a1:	cmp    rcx,rbx
   1400055a4:	je     0x1400055cc
   1400055a6:	test   BYTE PTR [rcx+0x1c],0x8
   1400055aa:	je     0x1400055cc
   1400055ac:	mov    edx,0x11
   1400055b1:	mov    eax,DWORD PTR [rsi+0x18]
   1400055b4:	mov    DWORD PTR [rsp+0x28],eax
   1400055b8:	mov    eax,DWORD PTR [rsi+0x14]
   1400055bb:	mov    DWORD PTR [rsp+0x20],eax
   1400055bf:	mov    r9d,DWORD PTR [rsi+0x1c]
   1400055c3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400055c7:	call   0x140004df4
   1400055cc:	mov    rbx,QWORD PTR [rsi+0x20]
   1400055d0:	mov    rdi,QWORD PTR [rbx]
   1400055d3:	mov    rcx,rdi
   1400055d6:	mov    rax,QWORD PTR [rip+0x3d13]        # 0x1400092f0
   1400055dd:	call   rax
   1400055df:	mov    rdx,QWORD PTR [rbx+0x8]
   1400055e3:	mov    ecx,DWORD PTR [rsp+0x58]
   1400055e7:	call   rdi
   1400055e9:	mov    ebx,DWORD PTR [rsp+0x40]
   1400055ed:	mov    eax,0x1
   1400055f2:	jmp    0x140005335
   1400055f7:	mov    ebx,DWORD PTR [rsp+0x40]
   1400055fb:	mov    rcx,QWORD PTR [rsp+0x70]
   140005600:	call   0x1400086a8
   140005605:	xor    eax,eax
   140005607:	mov    DWORD PTR [rsp+0x68],eax
   14000560b:	mov    QWORD PTR [rsp+0x70],rax
   140005610:	cmp    BYTE PTR [rsi],al
   140005612:	je     0x14000561e
   140005614:	test   dil,dil
   140005617:	je     0x14000561e
   140005619:	mov    eax,0x1
   14000561e:	mov    BYTE PTR [rsi],al
   140005620:	mov    rdi,QWORD PTR [rsp+0x48]
   140005625:	lea    rdx,[rsp+0x80]
   14000562d:	mov    rcx,rdi
   140005630:	call   QWORD PTR [rip+0x3aa2]        # 0x1400090d8
   140005636:	xor    r8d,r8d
   140005639:	test   eax,eax
   14000563b:	jne    0x1400051fc
   140005641:	mov    rcx,rdi
   140005644:	call   QWORD PTR [rip+0x3a96]        # 0x1400090e0
   14000564a:	or     QWORD PTR [rsp+0x48],0xffffffffffffffff
   140005650:	xor    edi,edi
   140005652:	lea    eax,[rdi+0x1]
   140005655:	test   al,al
   140005657:	je     0x140005673
   140005659:	test   bl,bl
   14000565b:	jne    0x140005673
   14000565d:	mov    rax,QWORD PTR [rsp+0x50]
   140005662:	mov    rcx,QWORD PTR [rax+0x8]
   140005666:	call   QWORD PTR [rip+0x3a5c]        # 0x1400090c8
   14000566c:	test   eax,eax
   14000566e:	jne    0x140005673
   140005670:	mov    BYTE PTR [rsi],dil
   140005673:	mov    al,bl
   140005675:	mov    rcx,QWORD PTR [rsp+0x2d0]
   14000567d:	xor    rcx,rsp
   140005680:	call   0x140008030
   140005685:	lea    r11,[rsp+0x2e0]
   14000568d:	mov    rbx,QWORD PTR [r11+0x18]
   140005691:	mov    rsi,QWORD PTR [r11+0x28]
   140005695:	mov    rsp,r11
   140005698:	pop    rdi
   140005699:	ret    
   14000569a:	int3   
   14000569b:	int3   
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400056aa:	push   rdi
   1400056ab:	sub    rsp,0x20
   1400056af:	xor    esi,esi
   1400056b1:	mov    rbx,r8
   1400056b4:	mov    edi,edx
   1400056b6:	test   r8,r8
   1400056b9:	je     0x1400056cf
   1400056bb:	xor    r9d,r9d
   1400056be:	call   QWORD PTR [rip+0x3a24]        # 0x1400090e8
   1400056c4:	test   eax,eax
   1400056c6:	je     0x1400056cc
   1400056c8:	cmp    eax,edi
   1400056ca:	jbe    0x1400056ee
   1400056cc:	mov    WORD PTR [rbx],si
   1400056cf:	xor    eax,eax
   1400056d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056d6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400056db:	add    rsp,0x20
   1400056df:	pop    rdi
   1400056e0:	ret    
   1400056e1:	dec    eax
   1400056e3:	cmp    WORD PTR [rbx+rax*2],0x5c
   1400056e8:	jne    0x1400056f2
   1400056ea:	mov    WORD PTR [rbx+rax*2],si
   1400056ee:	test   eax,eax
   1400056f0:	jne    0x1400056e1
   1400056f2:	mov    eax,0x1
   1400056f7:	jmp    0x1400056d1
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    rax,rsp
   140005703:	mov    QWORD PTR [rax+0x10],rbx
   140005707:	mov    QWORD PTR [rax+0x18],rsi
   14000570b:	mov    QWORD PTR [rax+0x20],rdi
   14000570f:	push   rbp
   140005710:	lea    rbp,[rax-0x458]
   140005717:	sub    rsp,0x550
   14000571e:	mov    rax,QWORD PTR [rip+0x88e3]        # 0x14000e008
   140005725:	xor    rax,rsp
   140005728:	mov    QWORD PTR [rbp+0x440],rax
   14000572f:	mov    rsi,rcx
   140005732:	xor    ebx,ebx
   140005734:	lea    rcx,[rsp+0x72]
   140005739:	mov    WORD PTR [rsp+0x70],bx
   14000573e:	xor    edx,edx
   140005740:	mov    r8d,0x260
   140005746:	call   0x140008812
   14000574b:	test   rsi,rsi
   14000574e:	jne    0x140005789
   140005750:	mov    rcx,QWORD PTR [rip+0x88c9]        # 0x14000e020
   140005757:	lea    rdi,[rip+0x88c2]        # 0x14000e020
   14000575e:	cmp    rcx,rdi
   140005761:	je     0x1400058fb
   140005767:	test   BYTE PTR [rcx+0x1c],0x1
   14000576b:	je     0x1400058fb
   140005771:	mov    rcx,QWORD PTR [rcx+0x10]
   140005775:	lea    edx,[rbx+0x12]
   140005778:	lea    r8,[rip+0x6bc9]        # 0x14000c348
   14000577f:	call   0x140004a80
   140005784:	jmp    0x1400058fb
   140005789:	lea    rdx,[rbp+0x1e0]
   140005790:	mov    rcx,rsi
   140005793:	call   0x14000592c
   140005798:	test   eax,eax
   14000579a:	jne    0x1400057d1
   14000579c:	mov    rcx,QWORD PTR [rip+0x887d]        # 0x14000e020
   1400057a3:	lea    rdi,[rip+0x8876]        # 0x14000e020
   1400057aa:	cmp    rcx,rdi
   1400057ad:	je     0x1400058fb
   1400057b3:	test   BYTE PTR [rcx+0x1c],0x1
   1400057b7:	je     0x1400058fb
   1400057bd:	lea    edx,[rax+0x13]
   1400057c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400057c4:	mov    r9,rsi
   1400057c7:	call   0x140004fcc
   1400057cc:	jmp    0x1400058fb
   1400057d1:	lea    r8,[rsp+0x70]
   1400057d6:	mov    edx,0x131
   1400057db:	lea    rcx,[rbp+0x1e0]
   1400057e2:	call   0x1400056a0
   1400057e7:	test   eax,eax
   1400057e9:	jne    0x140005811
   1400057eb:	mov    rcx,QWORD PTR [rip+0x882e]        # 0x14000e020
   1400057f2:	lea    rdi,[rip+0x8827]        # 0x14000e020
   1400057f9:	cmp    rcx,rdi
   1400057fc:	je     0x1400058fb
   140005802:	test   BYTE PTR [rcx+0x1c],0x1
   140005806:	je     0x1400058fb
   14000580c:	lea    edx,[rax+0x14]
   14000580f:	jmp    0x1400057c0
   140005811:	lea    rcx,[rsp+0x70]
   140005816:	or     rax,0xffffffffffffffff
   14000581a:	inc    rax
   14000581d:	cmp    WORD PTR [rcx+rax*2],bx
   140005821:	jne    0x14000581a
   140005823:	add    ax,ax
   140005826:	mov    BYTE PTR [rsp+0x30],0x1
   14000582b:	mov    WORD PTR [rsp+0x58],ax
   140005830:	mov    ecx,0x262
   140005835:	mov    WORD PTR [rsp+0x5a],cx
   14000583a:	lea    rcx,[rsp+0x70]
   14000583f:	movzx  eax,ax
   140005842:	mov    QWORD PTR [rsp+0x60],rcx
   140005847:	lea    rcx,[rsp+0x70]
   14000584c:	shr    eax,1
   14000584e:	mov    DWORD PTR [rsp+0x40],eax
   140005852:	mov    DWORD PTR [rsp+0x34],ebx
   140005856:	mov    QWORD PTR [rsp+0x38],rbx
   14000585b:	mov    QWORD PTR [rsp+0x44],rbx
   140005860:	mov    DWORD PTR [rsp+0x4c],ebx
   140005864:	mov    QWORD PTR [rsp+0x50],rbx
   140005869:	call   QWORD PTR [rip+0x3881]        # 0x1400090f0
   14000586f:	lea    rdi,[rip+0x87aa]        # 0x14000e020
   140005876:	cmp    eax,0xffffffff
   140005879:	jne    0x1400058c2
   14000587b:	xor    edx,edx
   14000587d:	lea    rcx,[rsp+0x70]
   140005882:	call   QWORD PTR [rip+0x3838]        # 0x1400090c0
   140005888:	test   eax,eax
   14000588a:	jne    0x1400058c2
   14000588c:	mov    rax,QWORD PTR [rip+0x878d]        # 0x14000e020
   140005893:	cmp    rax,rdi
   140005896:	je     0x1400058c2
   140005898:	test   BYTE PTR [rax+0x1c],0x2
   14000589c:	je     0x1400058c2
   14000589e:	call   QWORD PTR [rip+0x38a4]        # 0x140009148
   1400058a4:	mov    rcx,QWORD PTR [rip+0x8775]        # 0x14000e020
   1400058ab:	lea    r9,[rsp+0x70]
   1400058b0:	mov    edx,0x21
   1400058b5:	mov    DWORD PTR [rsp+0x20],eax
   1400058b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058bd:	call   0x140005050
   1400058c2:	lea    r8,[rsp+0x30]
   1400058c7:	lea    rcx,[rsp+0x58]
   1400058cc:	call   0x1400050e8
   1400058d1:	movzx  ebx,BYTE PTR [rsp+0x30]
   1400058d6:	mov    rcx,QWORD PTR [rip+0x8743]        # 0x14000e020
   1400058dd:	cmp    rcx,rdi
   1400058e0:	je     0x1400058fb
   1400058e2:	test   BYTE PTR [rcx+0x1c],0x8
   1400058e6:	je     0x1400058fb
   1400058e8:	mov    r9d,DWORD PTR [rsp+0x4c]
   1400058ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400058f6:	call   0x140004f00
   1400058fb:	mov    eax,ebx
   1400058fd:	mov    rcx,QWORD PTR [rbp+0x440]
   140005904:	xor    rcx,rsp
   140005907:	call   0x140008030
   14000590c:	lea    r11,[rsp+0x550]
   140005914:	mov    rbx,QWORD PTR [r11+0x18]
   140005918:	mov    rsi,QWORD PTR [r11+0x20]
   14000591c:	mov    rdi,QWORD PTR [r11+0x28]
   140005920:	mov    rsp,r11
   140005923:	pop    rbp
   140005924:	ret    
   140005925:	int3   
   140005926:	int3   
   140005927:	int3   
   140005928:	int3   
   140005929:	int3   
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	mov    QWORD PTR [rsp+0x8],rbx
   140005931:	mov    QWORD PTR [rsp+0x10],rbp
   140005936:	mov    QWORD PTR [rsp+0x18],rsi
   14000593b:	push   rdi
   14000593c:	push   r14
   14000593e:	push   r15
   140005940:	sub    rsp,0x20
   140005944:	xor    edi,edi
   140005946:	mov    r14,rdx
   140005949:	mov    rsi,rcx
   14000594c:	test   rdx,rdx
   14000594f:	jne    0x14000597a
   140005951:	mov    rcx,QWORD PTR [rip+0x86c8]        # 0x14000e020
   140005958:	lea    rbx,[rip+0x86c1]        # 0x14000e020
   14000595f:	cmp    rcx,rbx
   140005962:	je     0x140005ac0
   140005968:	test   BYTE PTR [rcx+0x1c],0x1
   14000596c:	je     0x140005ac0
   140005972:	lea    edx,[rdi+0x23]
   140005975:	jmp    0x140005ab0
   14000597a:	mov    WORD PTR [rdx],di
   14000597d:	test   rcx,rcx
   140005980:	je     0x140005a92
   140005986:	cmp    WORD PTR [rcx],di
   140005989:	je     0x140005a92
   14000598f:	or     rax,0xffffffffffffffff
   140005993:	inc    rax
   140005996:	cmp    WORD PTR [rcx+rax*2],di
   14000599a:	jne    0x140005993
   14000599c:	mov    cx,0x5c
   1400059a0:	mov    r15,rax
   1400059a3:	cmp    WORD PTR [rsi+rax*2-0x2],cx
   1400059a8:	jne    0x1400059ae
   1400059aa:	lea    r15,[rax-0x1]
   1400059ae:	lea    rbp,[r15+0x5]
   1400059b2:	cmp    rbp,0x12e
   1400059b9:	jbe    0x1400059ed
   1400059bb:	mov    rcx,QWORD PTR [rip+0x865e]        # 0x14000e020
   1400059c2:	lea    rbx,[rip+0x8657]        # 0x14000e020
   1400059c9:	cmp    rcx,rbx
   1400059cc:	je     0x140005acb
   1400059d2:	test   BYTE PTR [rcx+0x1c],0x1
   1400059d6:	je     0x140005acb
   1400059dc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400059e0:	mov    r9,rbp
   1400059e3:	call   0x140004d20
   1400059e8:	jmp    0x140005acb
   1400059ed:	lea    rbx,[rip+0x862c]        # 0x14000e020
   1400059f4:	cmp    rax,0x4
   1400059f8:	jb     0x140005a12
   1400059fa:	cmp    WORD PTR [rsi],cx
   1400059fd:	jne    0x140005a12
   1400059ff:	cmp    WORD PTR [rsi+0x2],cx
   140005a03:	jne    0x140005a12
   140005a05:	cmp    WORD PTR [rsi+0x4],0x3f
   140005a0a:	jne    0x140005a12
   140005a0c:	cmp    WORD PTR [rsi+0x6],cx
   140005a10:	je     0x140005a4f
   140005a12:	lea    r8,[rip+0x691f]        # 0x14000c338
   140005a19:	mov    rdx,rbp
   140005a1c:	mov    rcx,r14
   140005a1f:	call   0x140005bcc
   140005a24:	test   eax,eax
   140005a26:	jns    0x140005a4f
   140005a28:	mov    rcx,QWORD PTR [rip+0x85f1]        # 0x14000e020
   140005a2f:	cmp    rcx,rbx
   140005a32:	je     0x140005a4f
   140005a34:	test   BYTE PTR [rcx+0x1c],0x1
   140005a38:	je     0x140005a4f
   140005a3a:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a3e:	lea    r8,[rip+0x6903]        # 0x14000c348
   140005a45:	mov    edx,0x26
   140005a4a:	call   0x140004a80
   140005a4f:	mov    r9,r15
   140005a52:	mov    r8,rsi
   140005a55:	mov    rdx,rbp
   140005a58:	mov    rcx,r14
   140005a5b:	call   0x140005aec
   140005a60:	test   eax,eax
   140005a62:	jns    0x140005a8b
   140005a64:	mov    rcx,QWORD PTR [rip+0x85b5]        # 0x14000e020
   140005a6b:	cmp    rcx,rbx
   140005a6e:	je     0x140005a8b
   140005a70:	test   BYTE PTR [rcx+0x1c],0x1
   140005a74:	je     0x140005a8b
   140005a76:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a7a:	lea    r8,[rip+0x68c7]        # 0x14000c348
   140005a81:	mov    edx,0x27
   140005a86:	call   0x140004a80
   140005a8b:	mov    edi,0x1
   140005a90:	jmp    0x140005acb
   140005a92:	mov    rcx,QWORD PTR [rip+0x8587]        # 0x14000e020
   140005a99:	lea    rbx,[rip+0x8580]        # 0x14000e020
   140005aa0:	cmp    rcx,rbx
   140005aa3:	je     0x140005ac0
   140005aa5:	test   BYTE PTR [rcx+0x1c],0x1
   140005aa9:	je     0x140005ac0
   140005aab:	mov    edx,0x24
   140005ab0:	mov    rcx,QWORD PTR [rcx+0x10]
   140005ab4:	lea    r8,[rip+0x688d]        # 0x14000c348
   140005abb:	call   0x140004a80
   140005ac0:	mov    ecx,0x57
   140005ac5:	call   QWORD PTR [rip+0x362d]        # 0x1400090f8
   140005acb:	mov    rbx,QWORD PTR [rsp+0x40]
   140005ad0:	mov    eax,edi
   140005ad2:	mov    rbp,QWORD PTR [rsp+0x48]
   140005ad7:	mov    rsi,QWORD PTR [rsp+0x50]
   140005adc:	add    rsp,0x20
   140005ae0:	pop    r15
   140005ae2:	pop    r14
   140005ae4:	pop    rdi
   140005ae5:	ret    
   140005ae6:	int3   
   140005ae7:	int3   
   140005ae8:	int3   
   140005ae9:	int3   
   140005aea:	int3   
   140005aeb:	int3   
   140005aec:	mov    QWORD PTR [rsp+0x8],rbx
   140005af1:	mov    QWORD PTR [rsp+0x10],rsi
   140005af6:	mov    QWORD PTR [rsp+0x18],rdi
   140005afb:	xor    edi,edi
   140005afd:	mov    r11,rdx
   140005b00:	mov    r10d,edi
   140005b03:	mov    esi,0x80070057
   140005b08:	mov    rbx,r8
   140005b0b:	mov    rdx,rcx
   140005b0e:	lea    rax,[r11-0x1]
   140005b12:	cmp    rax,0x7ffffffe
   140005b18:	cmova  r10d,esi
   140005b1c:	test   r10d,r10d
   140005b1f:	js     0x140005b4b
   140005b21:	mov    rax,r11
   140005b24:	mov    r10d,edi
   140005b27:	test   r11,r11
   140005b2a:	je     0x140005b48
   140005b2c:	cmp    WORD PTR [rcx],di
   140005b2f:	je     0x140005b3b
   140005b31:	add    rcx,0x2
   140005b35:	sub    rax,0x1
   140005b39:	jne    0x140005b2c
   140005b3b:	test   rax,rax
   140005b3e:	je     0x140005b48
   140005b40:	mov    r8,r11
   140005b43:	sub    r8,rax
   140005b46:	jmp    0x140005b4e
   140005b48:	mov    r10d,esi
   140005b4b:	mov    r8,rdi
   140005b4e:	test   r10d,r10d
   140005b51:	js     0x140005bb2
   140005b53:	cmp    r9,0x7ffffffe
   140005b5a:	jbe    0x140005b61
   140005b5c:	mov    r10d,esi
   140005b5f:	jmp    0x140005bb2
   140005b61:	mov    rax,r11
   140005b64:	lea    rcx,[rdx+r8*2]
   140005b68:	mov    r10d,edi
   140005b6b:	sub    rax,r8
   140005b6e:	je     0x140005ba5
   140005b70:	mov    rdx,rax
   140005b73:	sub    rdx,r11
   140005b76:	add    rdx,r8
   140005b79:	add    rdx,r9
   140005b7c:	sub    rbx,rcx
   140005b7f:	test   rdx,rdx
   140005b82:	je     0x140005ba0
   140005b84:	movzx  r8d,WORD PTR [rbx+rcx*1]
   140005b89:	test   r8w,r8w
   140005b8d:	je     0x140005ba0
   140005b8f:	mov    WORD PTR [rcx],r8w
   140005b93:	dec    rdx
   140005b96:	add    rcx,0x2
   140005b9a:	sub    rax,0x1
   140005b9e:	jne    0x140005b7f
   140005ba0:	test   rax,rax
   140005ba3:	jne    0x140005baf
   140005ba5:	sub    rcx,0x2
   140005ba9:	mov    r10d,0x8007007a
   140005baf:	mov    WORD PTR [rcx],di
   140005bb2:	mov    rbx,QWORD PTR [rsp+0x8]
   140005bb7:	mov    eax,r10d
   140005bba:	mov    rsi,QWORD PTR [rsp+0x10]
   140005bbf:	mov    rdi,QWORD PTR [rsp+0x18]
   140005bc4:	ret    
   140005bc5:	int3   
   140005bc6:	int3   
   140005bc7:	int3   
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140005bd1:	xor    ebx,ebx
   140005bd3:	lea    rax,[rdx-0x1]
   140005bd7:	mov    r10d,0x7ffffffe
   140005bdd:	mov    r9d,ebx
   140005be0:	cmp    rax,r10
   140005be3:	mov    r11d,0x80070057
   140005be9:	cmova  r9d,r11d
   140005bed:	test   r9d,r9d
   140005bf0:	js     0x140005c31
   140005bf2:	mov    r9d,ebx
   140005bf5:	test   rdx,rdx
   140005bf8:	je     0x140005c25
   140005bfa:	sub    r10,rdx
   140005bfd:	sub    r8,rcx
   140005c00:	lea    rax,[r10+rdx*1]
   140005c04:	test   rax,rax
   140005c07:	je     0x140005c20
   140005c09:	movzx  eax,WORD PTR [r8+rcx*1]
   140005c0e:	test   ax,ax
   140005c11:	je     0x140005c20
   140005c13:	mov    WORD PTR [rcx],ax
   140005c16:	add    rcx,0x2
   140005c1a:	sub    rdx,0x1
   140005c1e:	jne    0x140005c00
   140005c20:	test   rdx,rdx
   140005c23:	jne    0x140005c36
   140005c25:	sub    rcx,0x2
   140005c29:	mov    r9d,0x8007007a
   140005c2f:	jmp    0x140005c36
   140005c31:	test   rdx,rdx
   140005c34:	je     0x140005c39
   140005c36:	mov    WORD PTR [rcx],bx
   140005c39:	mov    rbx,QWORD PTR [rsp+0x8]
   140005c3e:	mov    eax,r9d
   140005c41:	ret    
   140005c42:	int3   
   140005c43:	int3   
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	int3   
   140005c47:	int3   
   140005c48:	mov    QWORD PTR [rsp+0x18],r8
   140005c4d:	mov    QWORD PTR [rsp+0x20],r9
   140005c52:	push   rbx
   140005c53:	push   rbp
   140005c54:	push   rsi
   140005c55:	push   rdi
   140005c56:	sub    rsp,0x28
   140005c5a:	xor    ebp,ebp
   140005c5c:	lea    rax,[rdx-0x1]
   140005c60:	cmp    rax,0x7ffffffe
   140005c66:	mov    rdi,rcx
   140005c69:	mov    esi,ebp
   140005c6b:	mov    ecx,0x80070057
   140005c70:	cmova  esi,ecx
   140005c73:	test   esi,esi
   140005c75:	js     0x140005cac
   140005c77:	lea    rbx,[rdx-0x1]
   140005c7b:	mov    rcx,rdi
   140005c7e:	mov    rdx,rbx
   140005c81:	lea    r9,[rsp+0x68]
   140005c86:	mov    esi,ebp
   140005c88:	call   QWORD PTR [rip+0x35ea]        # 0x140009278
   140005c8e:	test   eax,eax
   140005c90:	js     0x140005ca1
   140005c92:	cdqe   
   140005c94:	cmp    rax,rbx
   140005c97:	ja     0x140005ca1
   140005c99:	jne    0x140005cb4
   140005c9b:	mov    WORD PTR [rdi+rbx*2],bp
   140005c9f:	jmp    0x140005cb4
   140005ca1:	mov    WORD PTR [rdi+rbx*2],bp
   140005ca5:	mov    esi,0x8007007a
   140005caa:	jmp    0x140005cb4
   140005cac:	test   rdx,rdx
   140005caf:	je     0x140005cb4
   140005cb1:	mov    WORD PTR [rdi],bp
   140005cb4:	mov    eax,esi
   140005cb6:	add    rsp,0x28
   140005cba:	pop    rdi
   140005cbb:	pop    rsi
   140005cbc:	pop    rbp
   140005cbd:	pop    rbx
   140005cbe:	ret    
   140005cbf:	int3   
   140005cc0:	int3   
   140005cc1:	int3   
   140005cc2:	int3   
   140005cc3:	int3   
   140005cc4:	int3   
   140005cc5:	int3   
   140005cc6:	int3   
   140005cc7:	int3   
   140005cc8:	rex push rbx
   140005cca:	sub    rsp,0x20
   140005cce:	lea    r8,[rip+0x6683]        # 0x14000c358
   140005cd5:	xor    edx,edx
   140005cd7:	mov    ecx,0x100000
   140005cdc:	call   QWORD PTR [rip+0x341e]        # 0x140009100
   140005ce2:	mov    rbx,rax
   140005ce5:	test   rax,rax
   140005ce8:	jne    0x140005d3b
   140005cea:	call   QWORD PTR [rip+0x3458]        # 0x140009148
   140005cf0:	mov    r10,QWORD PTR [rip+0x8329]        # 0x14000e020
   140005cf7:	lea    rcx,[rip+0x8322]        # 0x14000e020
   140005cfe:	cmp    r10,rcx
   140005d01:	je     0x140005d9a
   140005d07:	test   BYTE PTR [r10+0x1c],0x1
   140005d0c:	je     0x140005d9a
   140005d12:	mov    rcx,QWORD PTR [r10+0x10]
   140005d16:	lea    edx,[rbx+0xa]
   140005d19:	movzx  r9d,ax
   140005d1d:	lea    r8,[rip+0x666c]        # 0x14000c390
   140005d24:	or     r9d,0x80070000
   140005d2b:	test   eax,eax
   140005d2d:	cmovle r9d,eax
   140005d31:	add    rsp,0x20
   140005d35:	pop    rbx
   140005d36:	jmp    0x140004aa4
   140005d3b:	or     edx,0xffffffff
   140005d3e:	mov    rcx,rax
   140005d41:	call   QWORD PTR [rip+0x33c1]        # 0x140009108
   140005d47:	test   eax,eax
   140005d49:	je     0x140005d91
   140005d4b:	call   QWORD PTR [rip+0x33f7]        # 0x140009148
   140005d51:	mov    r10,QWORD PTR [rip+0x82c8]        # 0x14000e020
   140005d58:	lea    rcx,[rip+0x82c1]        # 0x14000e020
   140005d5f:	cmp    r10,rcx
   140005d62:	je     0x140005d91
   140005d64:	test   BYTE PTR [r10+0x1c],0x1
   140005d69:	je     0x140005d91
   140005d6b:	mov    rcx,QWORD PTR [r10+0x10]
   140005d6f:	lea    r8,[rip+0x661a]        # 0x14000c390
   140005d76:	movzx  r9d,ax
   140005d7a:	mov    edx,0xb
   140005d7f:	or     r9d,0x80070000
   140005d86:	test   eax,eax
   140005d88:	cmovle r9d,eax
   140005d8c:	call   0x140004aa4
   140005d91:	mov    rcx,rbx
   140005d94:	call   QWORD PTR [rip+0x3376]        # 0x140009110
   140005d9a:	add    rsp,0x20
   140005d9e:	pop    rbx
   140005d9f:	ret    
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	mov    rax,rsp
   140005dab:	mov    QWORD PTR [rax+0x8],rbx
   140005daf:	mov    QWORD PTR [rax+0x10],rsi
   140005db3:	mov    QWORD PTR [rax+0x18],rdi
   140005db7:	mov    QWORD PTR [rax+0x20],r13
   140005dbb:	push   rbp
   140005dbc:	push   r14
   140005dbe:	push   r15
   140005dc0:	lea    rbp,[rax-0x48]
   140005dc4:	sub    rsp,0x130
   140005dcb:	mov    rax,QWORD PTR [rip+0x8236]        # 0x14000e008
   140005dd2:	xor    rax,rsp
   140005dd5:	mov    QWORD PTR [rbp+0x20],rax
   140005dd9:	mov    rcx,QWORD PTR [rip+0x8240]        # 0x14000e020
   140005de0:	lea    r13,[rip+0x8239]        # 0x14000e020
   140005de7:	cmp    rcx,r13
   140005dea:	je     0x140005e07
   140005dec:	test   BYTE PTR [rcx+0x1c],0x10
   140005df0:	je     0x140005e07
   140005df2:	mov    rcx,QWORD PTR [rcx+0x10]
   140005df6:	lea    r8,[rip+0x6593]        # 0x14000c390
   140005dfd:	mov    edx,0xc
   140005e02:	call   0x140004a80
   140005e07:	and    QWORD PTR [rbp+0x18],0x0
   140005e0c:	xor    esi,esi
   140005e0e:	and    QWORD PTR [rbp+0x10],0x0
   140005e13:	xor    r15d,r15d
   140005e16:	call   0x140005cc8
   140005e1b:	xor    edx,edx
   140005e1d:	xor    ecx,ecx
   140005e1f:	call   QWORD PTR [rip+0x34bb]        # 0x1400092e0
   140005e25:	lea    r8d,[rsi+0x1]
   140005e29:	mov    edi,eax
   140005e2b:	test   eax,eax
   140005e2d:	jns    0x140005e3c
   140005e2f:	cmp    eax,0x80010106
   140005e34:	jne    0x140005fdd
   140005e3a:	jmp    0x140005e3f
   140005e3c:	mov    r15d,r8d
   140005e3f:	lea    rax,[rbp+0x10]
   140005e43:	xor    edx,edx
   140005e45:	lea    r9,[rip+0x6a94]        # 0x14000c8e0
   140005e4c:	mov    QWORD PTR [rsp+0x20],rax
   140005e51:	lea    rcx,[rip+0x6a78]        # 0x14000c8d0
   140005e58:	call   QWORD PTR [rip+0x3462]        # 0x1400092c0
   140005e5e:	mov    edi,eax
   140005e60:	test   eax,eax
   140005e62:	js     0x140005fdd
   140005e68:	lea    rcx,[rsp+0x48]
   140005e6d:	call   QWORD PTR [rip+0x330d]        # 0x140009180
   140005e73:	movups xmm0,XMMWORD PTR [rsp+0x48]
   140005e78:	lea    rcx,[rsp+0x30]
   140005e7d:	movsd  xmm1,QWORD PTR [rsp+0x58]
   140005e83:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140005e87:	movsd  QWORD PTR [rbp-0x40],xmm1
   140005e8c:	call   QWORD PTR [rip+0x32ee]        # 0x140009180
   140005e92:	movups xmm0,XMMWORD PTR [rsp+0x30]
   140005e97:	lea    rcx,[rsp+0x78]
   140005e9c:	movsd  xmm1,QWORD PTR [rsp+0x40]
   140005ea2:	movaps XMMWORD PTR [rbp-0x30],xmm0
   140005ea6:	movsd  QWORD PTR [rbp-0x20],xmm1
   140005eab:	call   QWORD PTR [rip+0x32cf]        # 0x140009180
   140005eb1:	movups xmm0,XMMWORD PTR [rsp+0x78]
   140005eb6:	lea    rcx,[rsp+0x60]
   140005ebb:	movsd  xmm1,QWORD PTR [rbp-0x78]
   140005ec0:	movaps XMMWORD PTR [rbp-0x10],xmm0
   140005ec4:	movsd  QWORD PTR [rbp+0x0],xmm1
   140005ec9:	call   QWORD PTR [rip+0x32b1]        # 0x140009180
   140005ecf:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140005ed4:	mov    rdi,QWORD PTR [rbp+0x10]
   140005ed8:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140005ede:	movaps XMMWORD PTR [rbp-0x70],xmm0
   140005ee2:	movsd  QWORD PTR [rbp-0x60],xmm1
   140005ee7:	mov    rax,QWORD PTR [rdi]
   140005eea:	mov    rbx,QWORD PTR [rax+0x50]
   140005eee:	mov    rcx,rbx
   140005ef1:	call   QWORD PTR [rip+0x33f9]        # 0x1400092f0
   140005ef7:	lea    rax,[rbp-0x50]
   140005efb:	mov    rcx,rdi
   140005efe:	lea    r9,[rbp-0x30]
   140005f02:	mov    QWORD PTR [rsp+0x20],rax
   140005f07:	lea    r8,[rbp-0x10]
   140005f0b:	lea    rdx,[rbp-0x70]
   140005f0f:	call   rbx
   140005f11:	lea    rcx,[rsp+0x60]
   140005f16:	mov    edi,eax
   140005f18:	call   QWORD PTR [rip+0x3272]        # 0x140009190
   140005f1e:	lea    rcx,[rsp+0x78]
   140005f23:	call   QWORD PTR [rip+0x3267]        # 0x140009190
   140005f29:	lea    rcx,[rsp+0x30]
   140005f2e:	call   QWORD PTR [rip+0x325c]        # 0x140009190
   140005f34:	lea    rcx,[rsp+0x48]
   140005f39:	call   QWORD PTR [rip+0x3251]        # 0x140009190
   140005f3f:	test   edi,edi
   140005f41:	js     0x140005fdd
   140005f47:	lea    rcx,[rip+0x3472]        # 0x1400093c0
   140005f4e:	call   QWORD PTR [rip+0x3224]        # 0x140009178
   140005f54:	mov    r14,rax
   140005f57:	test   rax,rax
   140005f5a:	jne    0x140005f63
   140005f5c:	mov    edi,0x8007000e
   140005f61:	jmp    0x140005fdd
   140005f63:	mov    rdi,QWORD PTR [rbp+0x10]
   140005f67:	mov    rax,QWORD PTR [rdi]
   140005f6a:	mov    rbx,QWORD PTR [rax+0x38]
   140005f6e:	mov    rcx,rbx
   140005f71:	call   QWORD PTR [rip+0x3379]        # 0x1400092f0
   140005f77:	lea    r8,[rbp+0x18]
   140005f7b:	mov    rdx,r14
   140005f7e:	mov    rcx,rdi
   140005f81:	call   rbx
   140005f83:	mov    edi,eax
   140005f85:	test   eax,eax
   140005f87:	js     0x140005fc6
   140005f89:	lea    rcx,[rip+0x54a0]        # 0x14000b430
   140005f90:	call   QWORD PTR [rip+0x31e2]        # 0x140009178
   140005f96:	mov    rsi,rax
   140005f99:	test   rax,rax
   140005f9c:	jne    0x140005fa5
   140005f9e:	mov    edi,0x8007000e
   140005fa3:	jmp    0x140005fc6
   140005fa5:	mov    rdi,QWORD PTR [rbp+0x18]
   140005fa9:	mov    rax,QWORD PTR [rdi]
   140005fac:	mov    rbx,QWORD PTR [rax+0x78]
   140005fb0:	mov    rcx,rbx
   140005fb3:	call   QWORD PTR [rip+0x3337]        # 0x1400092f0
   140005fb9:	xor    r8d,r8d
   140005fbc:	mov    rdx,rsi
   140005fbf:	mov    rcx,rdi
   140005fc2:	call   rbx
   140005fc4:	mov    edi,eax
   140005fc6:	mov    rcx,r14
   140005fc9:	call   QWORD PTR [rip+0x31b9]        # 0x140009188
   140005fcf:	test   rsi,rsi
   140005fd2:	je     0x140005fdd
   140005fd4:	mov    rcx,rsi
   140005fd7:	call   QWORD PTR [rip+0x31ab]        # 0x140009188
   140005fdd:	mov    rsi,QWORD PTR [rbp+0x18]
   140005fe1:	test   rsi,rsi
   140005fe4:	je     0x140006000
   140005fe6:	mov    rax,QWORD PTR [rsi]
   140005fe9:	mov    rbx,QWORD PTR [rax+0x10]
   140005fed:	mov    rcx,rbx
   140005ff0:	call   QWORD PTR [rip+0x32fa]        # 0x1400092f0
   140005ff6:	mov    rcx,rsi
   140005ff9:	call   rbx
   140005ffb:	and    QWORD PTR [rbp+0x18],0x0
   140006000:	mov    rsi,QWORD PTR [rbp+0x10]
   140006004:	test   rsi,rsi
   140006007:	je     0x140006023
   140006009:	mov    rax,QWORD PTR [rsi]
   14000600c:	mov    rbx,QWORD PTR [rax+0x10]
   140006010:	mov    rcx,rbx
   140006013:	call   QWORD PTR [rip+0x32d7]        # 0x1400092f0
   140006019:	mov    rcx,rsi
   14000601c:	call   rbx
   14000601e:	and    QWORD PTR [rbp+0x10],0x0
   140006023:	test   r15d,r15d
   140006026:	je     0x14000602e
   140006028:	call   QWORD PTR [rip+0x32a2]        # 0x1400092d0
   14000602e:	mov    rcx,QWORD PTR [rip+0x7feb]        # 0x14000e020
   140006035:	cmp    rcx,r13
   140006038:	je     0x140006058
   14000603a:	test   BYTE PTR [rcx+0x1c],0x10
   14000603e:	je     0x140006058
   140006040:	mov    rcx,QWORD PTR [rcx+0x10]
   140006044:	lea    r8,[rip+0x6345]        # 0x14000c390
   14000604b:	mov    edx,0xd
   140006050:	mov    r9d,edi
   140006053:	call   0x140004aa4
   140006058:	mov    eax,edi
   14000605a:	mov    rcx,QWORD PTR [rbp+0x20]
   14000605e:	xor    rcx,rsp
   140006061:	call   0x140008030
   140006066:	lea    r11,[rsp+0x130]
   14000606e:	mov    rbx,QWORD PTR [r11+0x20]
   140006072:	mov    rsi,QWORD PTR [r11+0x28]
   140006076:	mov    rdi,QWORD PTR [r11+0x30]
   14000607a:	mov    r13,QWORD PTR [r11+0x38]
   14000607e:	mov    rsp,r11
   140006081:	pop    r15
   140006083:	pop    r14
   140006085:	pop    rbp
   140006086:	ret    
   140006087:	int3   
   140006088:	int3   
   140006089:	int3   
   14000608a:	int3   
   14000608b:	int3   
   14000608c:	int3   
   14000608d:	int3   
   14000608e:	int3   
   14000608f:	int3   
   140006090:	mov    QWORD PTR [rsp+0x8],rbx
   140006095:	mov    QWORD PTR [rsp+0x18],rsi
   14000609a:	mov    QWORD PTR [rsp+0x20],rdi
   14000609f:	push   rbp
   1400060a0:	push   r12
   1400060a2:	push   r13
   1400060a4:	push   r14
   1400060a6:	push   r15
   1400060a8:	lea    rbp,[rsp-0x80]
   1400060ad:	sub    rsp,0x180
   1400060b4:	mov    rax,QWORD PTR [rip+0x7f4d]        # 0x14000e008
   1400060bb:	xor    rax,rsp
   1400060be:	mov    QWORD PTR [rbp+0x70],rax
   1400060c2:	xor    ecx,ecx
   1400060c4:	mov    r13,rdx
   1400060c7:	xor    eax,eax
   1400060c9:	mov    QWORD PTR [rbp+0x40],rcx
   1400060cd:	mov    QWORD PTR [rbp+0x5a],rax
   1400060d1:	mov    r15d,ecx
   1400060d4:	mov    QWORD PTR [rbp+0x62],rax
   1400060d8:	mov    r14d,ecx
   1400060db:	mov    DWORD PTR [rbp+0x6a],eax
   1400060de:	mov    r12d,ecx
   1400060e1:	mov    WORD PTR [rbp+0x6e],ax
   1400060e5:	mov    QWORD PTR [rbp+0x48],rcx
   1400060e9:	mov    QWORD PTR [rbp+0x50],rcx
   1400060ed:	mov    WORD PTR [rbp+0x58],cx
   1400060f1:	mov    DWORD PTR [rsp+0x50],ecx
   1400060f5:	mov    rcx,QWORD PTR [rip+0x7f24]        # 0x14000e020
   1400060fc:	lea    rbx,[rip+0x7f1d]        # 0x14000e020
   140006103:	cmp    rcx,rbx
   140006106:	je     0x140006121
   140006108:	test   BYTE PTR [rcx+0x1c],0x10
   14000610c:	je     0x140006121
   14000610e:	mov    rcx,QWORD PTR [rcx+0x10]
   140006112:	lea    edx,[rax+0xe]
   140006115:	lea    r8,[rip+0x6274]        # 0x14000c390
   14000611c:	call   0x140004a80
   140006121:	call   0x140005cc8
   140006126:	xor    edx,edx
   140006128:	xor    ecx,ecx
   14000612a:	call   QWORD PTR [rip+0x31b0]        # 0x1400092e0
   140006130:	mov    edi,eax
   140006132:	mov    esi,0x1
   140006137:	test   eax,eax
   140006139:	jns    0x14000627c
   14000613f:	cmp    eax,0x80010106
   140006144:	je     0x140006280
   14000614a:	mov    rcx,QWORD PTR [rip+0x7ecf]        # 0x14000e020
   140006151:	cmp    rcx,rbx
   140006154:	je     0x140006172
   140006156:	test   BYTE PTR [rcx+0x1c],sil
   14000615a:	je     0x140006172
   14000615c:	lea    edx,[rsi+0xe]
   14000615f:	mov    rcx,QWORD PTR [rcx+0x10]
   140006163:	lea    r8,[rip+0x6226]        # 0x14000c390
   14000616a:	mov    r9d,eax
   14000616d:	call   0x140004aa4
   140006172:	lea    r13,[rip+0x7ea7]        # 0x14000e020
   140006179:	lea    rcx,[rbp+0x58]
   14000617d:	call   QWORD PTR [rip+0x300d]        # 0x140009190
   140006183:	test   r15,r15
   140006186:	je     0x140006191
   140006188:	mov    rcx,r15
   14000618b:	call   QWORD PTR [rip+0x2ff7]        # 0x140009188
   140006191:	xor    r15d,r15d
   140006194:	test   r14,r14
   140006197:	je     0x1400061a2
   140006199:	mov    rcx,r14
   14000619c:	call   QWORD PTR [rip+0x2fe6]        # 0x140009188
   1400061a2:	test   r12,r12
   1400061a5:	je     0x1400061b0
   1400061a7:	mov    rcx,r12
   1400061aa:	call   QWORD PTR [rip+0x2fd8]        # 0x140009188
   1400061b0:	mov    rsi,QWORD PTR [rbp+0x50]
   1400061b4:	test   rsi,rsi
   1400061b7:	je     0x1400061d2
   1400061b9:	mov    rax,QWORD PTR [rsi]
   1400061bc:	mov    rbx,QWORD PTR [rax+0x10]
   1400061c0:	mov    rcx,rbx
   1400061c3:	call   QWORD PTR [rip+0x3127]        # 0x1400092f0
   1400061c9:	mov    rcx,rsi
   1400061cc:	call   rbx
   1400061ce:	mov    QWORD PTR [rbp+0x50],r15
   1400061d2:	mov    rsi,QWORD PTR [rbp+0x48]
   1400061d6:	test   rsi,rsi
   1400061d9:	je     0x1400061f4
   1400061db:	mov    rax,QWORD PTR [rsi]
   1400061de:	mov    rbx,QWORD PTR [rax+0x10]
   1400061e2:	mov    rcx,rbx
   1400061e5:	call   QWORD PTR [rip+0x3105]        # 0x1400092f0
   1400061eb:	mov    rcx,rsi
   1400061ee:	call   rbx
   1400061f0:	mov    QWORD PTR [rbp+0x48],r15
   1400061f4:	mov    rsi,QWORD PTR [rbp+0x40]
   1400061f8:	test   rsi,rsi
   1400061fb:	je     0x140006216
   1400061fd:	mov    rax,QWORD PTR [rsi]
   140006200:	mov    rbx,QWORD PTR [rax+0x10]
   140006204:	mov    rcx,rbx
   140006207:	call   QWORD PTR [rip+0x30e3]        # 0x1400092f0
   14000620d:	mov    rcx,rsi
   140006210:	call   rbx
   140006212:	mov    QWORD PTR [rbp+0x40],r15
   140006216:	cmp    DWORD PTR [rsp+0x50],r15d
   14000621b:	je     0x140006223
   14000621d:	call   QWORD PTR [rip+0x30ad]        # 0x1400092d0
   140006223:	mov    rcx,QWORD PTR [rip+0x7df6]        # 0x14000e020
   14000622a:	cmp    rcx,r13
   14000622d:	je     0x14000624d
   14000622f:	test   BYTE PTR [rcx+0x1c],0x10
   140006233:	je     0x14000624d
   140006235:	mov    rcx,QWORD PTR [rcx+0x10]
   140006239:	lea    r8,[rip+0x6150]        # 0x14000c390
   140006240:	mov    edx,0x18
   140006245:	mov    r9d,edi
   140006248:	call   0x140004aa4
   14000624d:	mov    eax,edi
   14000624f:	mov    rcx,QWORD PTR [rbp+0x70]
   140006253:	xor    rcx,rsp
   140006256:	call   0x140008030
   14000625b:	lea    r11,[rsp+0x180]
   140006263:	mov    rbx,QWORD PTR [r11+0x30]
   140006267:	mov    rsi,QWORD PTR [r11+0x40]
   14000626b:	mov    rdi,QWORD PTR [r11+0x48]
   14000626f:	mov    rsp,r11
   140006272:	pop    r15
   140006274:	pop    r14
   140006276:	pop    r13
   140006278:	pop    r12
   14000627a:	pop    rbp
   14000627b:	ret    
   14000627c:	mov    DWORD PTR [rsp+0x50],esi
   140006280:	lea    rax,[rbp+0x40]
   140006284:	mov    r8d,esi
   140006287:	lea    r9,[rip+0x6652]        # 0x14000c8e0
   14000628e:	mov    QWORD PTR [rsp+0x20],rax
   140006293:	xor    edx,edx
   140006295:	lea    rcx,[rip+0x6634]        # 0x14000c8d0
   14000629c:	call   QWORD PTR [rip+0x301e]        # 0x1400092c0
   1400062a2:	mov    edi,eax
   1400062a4:	test   eax,eax
   1400062a6:	jns    0x1400062cc
   1400062a8:	mov    rcx,QWORD PTR [rip+0x7d71]        # 0x14000e020
   1400062af:	cmp    rcx,rbx
   1400062b2:	je     0x140006172
   1400062b8:	test   BYTE PTR [rcx+0x1c],sil
   1400062bc:	je     0x140006172
   1400062c2:	mov    edx,0x10
   1400062c7:	jmp    0x14000615f
   1400062cc:	lea    rcx,[rsp+0x70]
   1400062d1:	call   QWORD PTR [rip+0x2ea9]        # 0x140009180
   1400062d7:	movups xmm0,XMMWORD PTR [rsp+0x70]
   1400062dc:	lea    rcx,[rsp+0x58]
   1400062e1:	movsd  xmm1,QWORD PTR [rbp-0x80]
   1400062e6:	movaps XMMWORD PTR [rbp+0x20],xmm0
   1400062ea:	movsd  QWORD PTR [rbp+0x30],xmm1
   1400062ef:	call   QWORD PTR [rip+0x2e8b]        # 0x140009180
   1400062f5:	movups xmm0,XMMWORD PTR [rsp+0x58]
   1400062fa:	lea    rcx,[rbp-0x10]
   1400062fe:	movsd  xmm1,QWORD PTR [rsp+0x68]
   140006304:	movaps XMMWORD PTR [rbp-0x70],xmm0
   140006308:	movsd  QWORD PTR [rbp-0x60],xmm1
   14000630d:	call   QWORD PTR [rip+0x2e6d]        # 0x140009180
   140006313:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140006317:	lea    rcx,[rbp+0x8]
   14000631b:	movsd  xmm1,QWORD PTR [rbp+0x0]
   140006320:	movaps XMMWORD PTR [rbp-0x30],xmm0
   140006324:	movsd  QWORD PTR [rbp-0x20],xmm1
   140006329:	call   QWORD PTR [rip+0x2e51]        # 0x140009180
   14000632f:	movups xmm0,XMMWORD PTR [rbp+0x8]
   140006333:	mov    rdi,QWORD PTR [rbp+0x40]
   140006337:	movsd  xmm1,QWORD PTR [rbp+0x18]
   14000633c:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140006340:	movsd  QWORD PTR [rbp-0x40],xmm1
   140006345:	mov    rax,QWORD PTR [rdi]
   140006348:	mov    rbx,QWORD PTR [rax+0x50]
   14000634c:	mov    rcx,rbx
   14000634f:	call   QWORD PTR [rip+0x2f9b]        # 0x1400092f0
   140006355:	lea    rax,[rbp+0x20]
   140006359:	mov    rcx,rdi
   14000635c:	lea    r9,[rbp-0x70]
   140006360:	mov    QWORD PTR [rsp+0x20],rax
   140006365:	lea    r8,[rbp-0x30]
   140006369:	lea    rdx,[rbp-0x50]
   14000636d:	call   rbx
   14000636f:	lea    rcx,[rbp+0x8]
   140006373:	mov    edi,eax
   140006375:	call   QWORD PTR [rip+0x2e15]        # 0x140009190
   14000637b:	lea    rcx,[rbp-0x10]
   14000637f:	call   QWORD PTR [rip+0x2e0b]        # 0x140009190
   140006385:	lea    rcx,[rsp+0x58]
   14000638a:	call   QWORD PTR [rip+0x2e00]        # 0x140009190
   140006390:	lea    rcx,[rsp+0x70]
   140006395:	call   QWORD PTR [rip+0x2df5]        # 0x140009190
   14000639b:	test   edi,edi
   14000639d:	jns    0x1400063dd
   14000639f:	mov    rcx,QWORD PTR [rip+0x7c7a]        # 0x14000e020
   1400063a6:	lea    r13,[rip+0x7c73]        # 0x14000e020
   1400063ad:	cmp    rcx,r13
   1400063b0:	je     0x140006179
   1400063b6:	test   BYTE PTR [rcx+0x1c],sil
   1400063ba:	je     0x140006179
   1400063c0:	mov    edx,0x11
   1400063c5:	mov    r9d,edi
   1400063c8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400063cc:	lea    r8,[rip+0x5fbd]        # 0x14000c390
   1400063d3:	call   0x140004aa4
   1400063d8:	jmp    0x140006179
   1400063dd:	lea    rcx,[rip+0x2fdc]        # 0x1400093c0
   1400063e4:	call   QWORD PTR [rip+0x2d8e]        # 0x140009178
   1400063ea:	mov    r15,rax
   1400063ed:	test   rax,rax
   1400063f0:	jne    0x140006430
   1400063f2:	mov    edi,0x8007000e
   1400063f7:	mov    rcx,QWORD PTR [rip+0x7c22]        # 0x14000e020
   1400063fe:	lea    r13,[rip+0x7c1b]        # 0x14000e020
   140006405:	cmp    rcx,r13
   140006408:	je     0x140006179
   14000640e:	test   BYTE PTR [rcx+0x1c],sil
   140006412:	je     0x140006179
   140006418:	lea    edx,[rax+0x12]
   14000641b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000641f:	lea    r8,[rip+0x5f6a]        # 0x14000c390
   140006426:	call   0x140004a80
   14000642b:	jmp    0x140006179
   140006430:	mov    rdi,QWORD PTR [rbp+0x40]
   140006434:	mov    rax,QWORD PTR [rdi]
   140006437:	mov    rbx,QWORD PTR [rax+0x38]
   14000643b:	mov    rcx,rbx
   14000643e:	call   QWORD PTR [rip+0x2eac]        # 0x1400092f0
   140006444:	lea    r8,[rbp+0x48]
   140006448:	mov    rdx,r15
   14000644b:	mov    rcx,rdi
   14000644e:	call   rbx
   140006450:	mov    edi,eax
   140006452:	test   eax,eax
   140006454:	jns    0x140006484
   140006456:	mov    rcx,QWORD PTR [rip+0x7bc3]        # 0x14000e020
   14000645d:	lea    r13,[rip+0x7bbc]        # 0x14000e020
   140006464:	cmp    rcx,r13
   140006467:	je     0x140006179
   14000646d:	test   BYTE PTR [rcx+0x1c],sil
   140006471:	je     0x140006179
   140006477:	mov    edx,0x13
   14000647c:	mov    r9d,eax
   14000647f:	jmp    0x1400063c8
   140006484:	lea    rcx,[rip+0x4fa5]        # 0x14000b430
   14000648b:	call   QWORD PTR [rip+0x2ce7]        # 0x140009178
   140006491:	mov    r14,rax
   140006494:	test   rax,rax
   140006497:	jne    0x1400064c7
   140006499:	mov    edi,0x8007000e
   14000649e:	mov    rcx,QWORD PTR [rip+0x7b7b]        # 0x14000e020
   1400064a5:	lea    r13,[rip+0x7b74]        # 0x14000e020
   1400064ac:	cmp    rcx,r13
   1400064af:	je     0x140006179
   1400064b5:	test   BYTE PTR [rcx+0x1c],sil
   1400064b9:	je     0x140006179
   1400064bf:	lea    edx,[rax+0x14]
   1400064c2:	jmp    0x14000641b
   1400064c7:	mov    rdi,QWORD PTR [rbp+0x48]
   1400064cb:	mov    rax,QWORD PTR [rdi]
   1400064ce:	mov    rbx,QWORD PTR [rax+0x78]
   1400064d2:	mov    rcx,rbx
   1400064d5:	call   QWORD PTR [rip+0x2e15]        # 0x1400092f0
   1400064db:	xor    r8d,r8d
   1400064de:	mov    rdx,r14
   1400064e1:	mov    rcx,rdi
   1400064e4:	call   rbx
   1400064e6:	mov    rcx,r13
   1400064e9:	call   QWORD PTR [rip+0x2c89]        # 0x140009178
   1400064ef:	mov    r12,rax
   1400064f2:	test   rax,rax
   1400064f5:	jne    0x140006525
   1400064f7:	mov    edi,0x8007000e
   1400064fc:	mov    rcx,QWORD PTR [rip+0x7b1d]        # 0x14000e020
   140006503:	lea    r13,[rip+0x7b16]        # 0x14000e020
   14000650a:	cmp    rcx,r13
   14000650d:	je     0x140006179
   140006513:	test   BYTE PTR [rcx+0x1c],sil
   140006517:	je     0x140006179
   14000651d:	lea    edx,[rax+0x15]
   140006520:	jmp    0x14000641b
   140006525:	lea    rcx,[rbp+0x58]
   140006529:	call   QWORD PTR [rip+0x2c51]        # 0x140009180
   14000652f:	lea    rcx,[rip+0x470a]        # 0x14000ac40
   140006536:	call   QWORD PTR [rip+0x2c3c]        # 0x140009178
   14000653c:	mov    QWORD PTR [rbp+0x60],rax
   140006540:	test   rax,rax
   140006543:	jne    0x140006573
   140006545:	mov    edi,0x8007000e
   14000654a:	mov    rcx,QWORD PTR [rip+0x7acf]        # 0x14000e020
   140006551:	lea    r13,[rip+0x7ac8]        # 0x14000e020
   140006558:	cmp    rcx,r13
   14000655b:	je     0x140006179
   140006561:	test   BYTE PTR [rcx+0x1c],sil
   140006565:	je     0x140006179
   14000656b:	lea    edx,[rax+0x16]
   14000656e:	jmp    0x14000641b
   140006573:	movsd  xmm1,QWORD PTR [rbp+0x68]
   140006578:	lea    rcx,[rsp+0x58]
   14000657d:	mov    eax,0x8
   140006582:	movsd  QWORD PTR [rbp-0x40],xmm1
   140006587:	mov    WORD PTR [rbp+0x58],ax
   14000658b:	movups xmm0,XMMWORD PTR [rbp+0x58]
   14000658f:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140006593:	call   QWORD PTR [rip+0x2be7]        # 0x140009180
   140006599:	movups xmm0,XMMWORD PTR [rsp+0x58]
   14000659e:	lea    rcx,[rsp+0x70]
   1400065a3:	movsd  xmm1,QWORD PTR [rsp+0x68]
   1400065a9:	movaps XMMWORD PTR [rbp-0x30],xmm0
   1400065ad:	movsd  QWORD PTR [rbp-0x20],xmm1
   1400065b2:	call   QWORD PTR [rip+0x2bc8]        # 0x140009180
   1400065b8:	movups xmm0,XMMWORD PTR [rsp+0x70]
   1400065bd:	mov    rdi,QWORD PTR [rbp+0x48]
   1400065c1:	movsd  xmm1,QWORD PTR [rbp-0x80]
   1400065c6:	movaps XMMWORD PTR [rbp-0x70],xmm0
   1400065ca:	movsd  QWORD PTR [rbp-0x60],xmm1
   1400065cf:	mov    rax,QWORD PTR [rdi]
   1400065d2:	mov    rbx,QWORD PTR [rax+0x80]
   1400065d9:	mov    rcx,rbx
   1400065dc:	call   QWORD PTR [rip+0x2d0e]        # 0x1400092f0
   1400065e2:	lea    rax,[rbp+0x50]
   1400065e6:	mov    r9d,0x6
   1400065ec:	mov    QWORD PTR [rsp+0x40],rax
   1400065f1:	mov    r8,r12
   1400065f4:	lea    rax,[rbp-0x50]
   1400065f8:	mov    rdx,r14
   1400065fb:	mov    QWORD PTR [rsp+0x38],rax
   140006600:	mov    rcx,rdi
   140006603:	lea    rax,[rbp-0x30]
   140006607:	mov    DWORD PTR [rsp+0x30],0x5
   14000660f:	mov    QWORD PTR [rsp+0x28],rax
   140006614:	lea    rax,[rbp-0x70]
   140006618:	mov    QWORD PTR [rsp+0x20],rax
   14000661d:	call   rbx
   14000661f:	lea    rcx,[rsp+0x70]
   140006624:	mov    edi,eax
   140006626:	call   QWORD PTR [rip+0x2b64]        # 0x140009190
   14000662c:	lea    rcx,[rsp+0x58]
   140006631:	call   QWORD PTR [rip+0x2b59]        # 0x140009190
   140006637:	test   edi,edi
   140006639:	jns    0x140006172
   14000663f:	mov    rcx,QWORD PTR [rip+0x79da]        # 0x14000e020
   140006646:	lea    r13,[rip+0x79d3]        # 0x14000e020
   14000664d:	cmp    rcx,r13
   140006650:	je     0x140006179
   140006656:	test   BYTE PTR [rcx+0x1c],sil
   14000665a:	je     0x140006179
   140006660:	mov    edx,0x17
   140006665:	jmp    0x1400063c5
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	mov    QWORD PTR [rsp+0x10],rbx
   140006675:	mov    QWORD PTR [rsp+0x18],rbp
   14000667a:	mov    QWORD PTR [rsp+0x20],rsi
   14000667f:	push   rdi
   140006680:	sub    rsp,0x20
   140006684:	xor    ebp,ebp
   140006686:	mov    rsi,rdx
   140006689:	mov    rbx,rcx
   14000668c:	test   rcx,rcx
   14000668f:	jne    0x1400066a7
   140006691:	lea    edx,[rcx+0x15]
   140006694:	lea    rcx,[rip+0x5d0d]        # 0x14000c3a8
   14000669b:	lea    r8,[rip+0x5cfe]        # 0x14000c3a0
   1400066a2:	call   0x14000740c
   1400066a7:	mov    QWORD PTR [rsp+0x30],rbp
   1400066ac:	mov    edi,ebp
   1400066ae:	cmp    rsi,0x3fffffff
   1400066b5:	jbe    0x1400066c5
   1400066b7:	mov    edi,0x800288c5
   1400066bc:	lea    r9,[rip+0x5d05]        # 0x14000c3c8
   1400066c3:	jmp    0x140006731
   1400066c5:	mov    rcx,QWORD PTR [rbx]
   1400066c8:	test   rcx,rcx
   1400066cb:	je     0x140006713
   1400066cd:	lea    rdx,[rsp+0x30]
   1400066d2:	call   0x140006de0
   1400066d7:	mov    edi,eax
   1400066d9:	test   eax,eax
   1400066db:	jns    0x1400066e8
   1400066dd:	lea    r9,[rip+0x5cfc]        # 0x14000c3e0
   1400066e4:	mov    edx,eax
   1400066e6:	jmp    0x140006733
   1400066e8:	mov    rax,QWORD PTR [rsp+0x30]
   1400066ed:	cmp    rax,rsi
   1400066f0:	jae    0x140006703
   1400066f2:	mov    rcx,QWORD PTR [rbx]
   1400066f5:	sub    rcx,0x8
   1400066f9:	call   0x140007cd8
   1400066fe:	mov    QWORD PTR [rbx],rbp
   140006701:	jmp    0x140006713
   140006703:	test   rax,rax
   140006706:	je     0x14000670e
   140006708:	mov    rax,QWORD PTR [rbx]
   14000670b:	mov    WORD PTR [rax],bp
   14000670e:	cmp    QWORD PTR [rbx],rbp
   140006711:	jne    0x140006752
   140006713:	lea    rcx,[rsi*2+0x8]
   14000671b:	call   0x14000865c
   140006720:	test   rax,rax
   140006723:	jne    0x140006745
   140006725:	mov    edi,0x8007000e
   14000672a:	lea    r9,[rip+0x5cd7]        # 0x14000c408
   140006731:	mov    edx,edi
   140006733:	mov    r8d,0x1
   140006739:	mov    ecx,0x4000000
   14000673e:	call   0x140006fa8
   140006743:	jmp    0x140006752
   140006745:	mov    QWORD PTR [rax],rsi
   140006748:	add    rax,0x8
   14000674c:	mov    QWORD PTR [rbx],rax
   14000674f:	mov    WORD PTR [rax],bp
   140006752:	mov    rbx,QWORD PTR [rsp+0x38]
   140006757:	mov    eax,edi
   140006759:	mov    rbp,QWORD PTR [rsp+0x40]
   14000675e:	mov    rsi,QWORD PTR [rsp+0x48]
   140006763:	add    rsp,0x20
   140006767:	pop    rdi
   140006768:	ret    
   140006769:	int3   
   14000676a:	int3   
   14000676b:	int3   
   14000676c:	int3   
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	mov    QWORD PTR [rsp+0x10],rbx
   140006775:	mov    QWORD PTR [rsp+0x18],rbp
   14000677a:	mov    QWORD PTR [rsp+0x20],rsi
   14000677f:	push   rdi
   140006780:	push   r12
   140006782:	push   r13
   140006784:	push   r14
   140006786:	push   r15
   140006788:	sub    rsp,0x20
   14000678c:	xor    ebx,ebx
   14000678e:	lea    rsi,[rip+0x5c13]        # 0x14000c3a8
   140006795:	mov    r13,r8
   140006798:	mov    r12,rdx
   14000679b:	mov    rdi,rcx
   14000679e:	test   rcx,rcx
   1400067a1:	jne    0x1400067b7
   1400067a3:	lea    r8,[rip+0x5bf6]        # 0x14000c3a0
   1400067aa:	mov    edx,0x132
   1400067af:	mov    rcx,rsi
   1400067b2:	call   0x14000740c
   1400067b7:	test   r12,r12
   1400067ba:	jne    0x1400067d0
   1400067bc:	lea    r8,[rip+0x5c65]        # 0x14000c428
   1400067c3:	mov    edx,0x133
   1400067c8:	mov    rcx,rsi
   1400067cb:	call   0x14000740c
   1400067d0:	test   r13,r13
   1400067d3:	jne    0x1400067e9
   1400067d5:	lea    r8,[rip+0x5cac]        # 0x14000c488
   1400067dc:	mov    edx,0x134
   1400067e1:	mov    rcx,rsi
   1400067e4:	call   0x14000740c
   1400067e9:	mov    rcx,QWORD PTR [rdi]
   1400067ec:	or     r14,0xffffffffffffffff
   1400067f0:	mov    QWORD PTR [rsp+0x50],rbx
   1400067f5:	mov    rsi,rbx
   1400067f8:	mov    rbp,rbx
   1400067fb:	mov    r15,rbx
   1400067fe:	test   rcx,rcx
   140006801:	je     0x140006847
   140006803:	lea    rdx,[rsp+0x50]
   140006808:	call   0x140006de0
   14000680d:	mov    ebx,eax
   14000680f:	test   eax,eax
   140006811:	jns    0x140006831
   140006813:	lea    r9,[rip+0x5c1e]        # 0x14000c438
   14000681a:	mov    edx,eax
   14000681c:	mov    r8d,0x1
   140006822:	mov    ecx,0x4000000
   140006827:	call   0x140006fa8
   14000682c:	jmp    0x140006919
   140006831:	mov    rax,QWORD PTR [rdi]
   140006834:	mov    rbp,r14
   140006837:	xor    ebx,ebx
   140006839:	inc    rbp
   14000683c:	cmp    WORD PTR [rax+rbp*2],bx
   140006840:	jne    0x140006839
   140006842:	mov    rsi,QWORD PTR [rsp+0x50]
   140006847:	mov    rax,r14
   14000684a:	inc    rax
   14000684d:	cmp    WORD PTR [r12+rax*2],bx
   140006852:	jne    0x14000684a
   140006854:	inc    r14
   140006857:	cmp    WORD PTR [r13+r14*2+0x0],bx
   14000685d:	jne    0x140006854
   14000685f:	add    rax,r14
   140006862:	lea    rcx,[rbp+0x1]
   140006866:	add    rcx,rax
   140006869:	cmp    rsi,rcx
   14000686c:	jae    0x1400068c1
   14000686e:	mov    rsi,rcx
   140006871:	lea    rcx,[rcx*2+0x8]
   140006879:	call   0x14000865c
   14000687e:	test   rax,rax
   140006881:	jne    0x140006893
   140006883:	mov    ebx,0x8007000e
   140006888:	lea    r9,[rip+0x5b79]        # 0x14000c408
   14000688f:	mov    edx,ebx
   140006891:	jmp    0x14000681c
   140006893:	mov    QWORD PTR [rax],rsi
   140006896:	lea    rbx,[rax+0x8]
   14000689a:	mov    rdx,QWORD PTR [rdi]
   14000689d:	xor    r14d,r14d
   1400068a0:	test   rdx,rdx
   1400068a3:	je     0x1400068b7
   1400068a5:	lea    r8,[rbp*2+0x2]
   1400068ad:	mov    rcx,rbx
   1400068b0:	call   0x140008806
   1400068b5:	jmp    0x1400068bb
   1400068b7:	mov    WORD PTR [rbx],r14w
   1400068bb:	mov    r15,QWORD PTR [rdi]
   1400068be:	mov    QWORD PTR [rdi],rbx
   1400068c1:	mov    rcx,QWORD PTR [rdi]
   1400068c4:	mov    r8,r12
   1400068c7:	mov    rdx,rsi
   1400068ca:	call   0x140006e44
   1400068cf:	mov    ebx,eax
   1400068d1:	test   eax,eax
   1400068d3:	jns    0x1400068de
   1400068d5:	lea    r9,[rip+0x5b8c]        # 0x14000c468
   1400068dc:	jmp    0x1400068f9
   1400068de:	mov    rcx,QWORD PTR [rdi]
   1400068e1:	mov    r8,r13
   1400068e4:	mov    rdx,rsi
   1400068e7:	call   0x140006e44
   1400068ec:	mov    ebx,eax
   1400068ee:	test   eax,eax
   1400068f0:	jns    0x14000690b
   1400068f2:	lea    r9,[rip+0x5b9f]        # 0x14000c498
   1400068f9:	mov    r8d,0x1
   1400068ff:	mov    edx,eax
   140006901:	mov    ecx,0x4000000
   140006906:	call   0x140006fa8
   14000690b:	test   r15,r15
   14000690e:	je     0x140006919
   140006910:	lea    rcx,[r15-0x8]
   140006914:	call   0x140007cd8
   140006919:	mov    rbp,QWORD PTR [rsp+0x60]
   14000691e:	mov    eax,ebx
   140006920:	mov    rbx,QWORD PTR [rsp+0x58]
   140006925:	mov    rsi,QWORD PTR [rsp+0x68]
   14000692a:	add    rsp,0x20
   14000692e:	pop    r15
   140006930:	pop    r14
   140006932:	pop    r13
   140006934:	pop    r12
   140006936:	pop    rdi
   140006937:	ret    
   140006938:	int3   
   140006939:	int3   
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	int3   
   14000693d:	int3   
   14000693e:	int3   
   14000693f:	int3   
   140006940:	mov    QWORD PTR [rsp+0x10],rdx
   140006945:	mov    QWORD PTR [rsp+0x18],r8
   14000694a:	mov    QWORD PTR [rsp+0x20],r9
   14000694f:	push   rbx
   140006950:	push   rdi
   140006951:	sub    rsp,0x28
   140006955:	xor    edi,edi
   140006957:	mov    rbx,rcx
   14000695a:	test   rcx,rcx
   14000695d:	jne    0x14000697c
   14000695f:	lea    r8,[rip+0x5a3a]        # 0x14000c3a0
   140006966:	mov    edx,0x176
   14000696b:	lea    rcx,[rip+0x5a36]        # 0x14000c3a8
   140006972:	call   0x14000740c
   140006977:	mov    rdx,QWORD PTR [rsp+0x48]
   14000697c:	test   rdx,rdx
   14000697f:	jne    0x14000699e
   140006981:	lea    r8,[rip+0x5b30]        # 0x14000c4b8
   140006988:	mov    edx,0x177
   14000698d:	lea    rcx,[rip+0x5a14]        # 0x14000c3a8
   140006994:	call   0x14000740c
   140006999:	mov    rdx,QWORD PTR [rsp+0x48]
   14000699e:	cmp    WORD PTR [rdx],di
   1400069a1:	jne    0x1400069c0
   1400069a3:	lea    r8,[rip+0x5b1e]        # 0x14000c4c8
   1400069aa:	mov    edx,0x178
   1400069af:	lea    rcx,[rip+0x59f2]        # 0x14000c3a8
   1400069b6:	call   0x14000740c
   1400069bb:	mov    rdx,QWORD PTR [rsp+0x48]
   1400069c0:	lea    r8,[rsp+0x50]
   1400069c5:	mov    rcx,rbx
   1400069c8:	call   0x1400069dc
   1400069cd:	add    rsp,0x28
   1400069d1:	pop    rdi
   1400069d2:	pop    rbx
   1400069d3:	ret    
   1400069d4:	int3   
   1400069d5:	int3   
   1400069d6:	int3   
   1400069d7:	int3   
   1400069d8:	int3   
   1400069d9:	int3   
   1400069da:	int3   
   1400069db:	int3   
   1400069dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400069e1:	mov    QWORD PTR [rsp+0x20],rbp
   1400069e6:	mov    QWORD PTR [rsp+0x18],r8
   1400069eb:	push   rsi
   1400069ec:	push   r12
   1400069ee:	push   r13
   1400069f0:	push   r14
   1400069f2:	push   r15
   1400069f4:	sub    rsp,0x30
   1400069f8:	xor    r12d,r12d
   1400069fb:	lea    rbx,[rip+0x59a6]        # 0x14000c3a8
   140006a02:	mov    r13,rdx
   140006a05:	mov    rsi,rcx
   140006a08:	test   rcx,rcx
   140006a0b:	jne    0x140006a21
   140006a0d:	lea    r8,[rip+0x5ac0]        # 0x14000c4d4
   140006a14:	mov    edx,0x18b
   140006a19:	mov    rcx,rbx
   140006a1c:	call   0x14000740c
   140006a21:	test   r13,r13
   140006a24:	jne    0x140006a3a
   140006a26:	lea    r8,[rip+0x5a8b]        # 0x14000c4b8
   140006a2d:	mov    edx,0x18c
   140006a32:	mov    rcx,rbx
   140006a35:	call   0x14000740c
   140006a3a:	cmp    WORD PTR [r13+0x0],r12w
   140006a3f:	jne    0x140006a55
   140006a41:	lea    r8,[rip+0x5a80]        # 0x14000c4c8
   140006a48:	mov    edx,0x18d
   140006a4d:	mov    rcx,rbx
   140006a50:	call   0x14000740c
   140006a55:	mov    rcx,QWORD PTR [rsi]
   140006a58:	mov    r15,r12
   140006a5b:	mov    QWORD PTR [rsp+0x60],r12
   140006a60:	mov    rbp,r12
   140006a63:	test   rcx,rcx
   140006a66:	je     0x140006ab1
   140006a68:	lea    rdx,[rsp+0x60]
   140006a6d:	call   0x140006de0
   140006a72:	mov    ebx,eax
   140006a74:	test   eax,eax
   140006a76:	jns    0x140006a96
   140006a78:	lea    r9,[rip+0x59b9]        # 0x14000c438
   140006a7f:	mov    r8d,0x1
   140006a85:	mov    edx,eax
   140006a87:	mov    ecx,0x4000000
   140006a8c:	call   0x140006fa8
   140006a91:	jmp    0x140006bb5
   140006a96:	mov    rax,QWORD PTR [rsi]
   140006a99:	or     rbp,0xffffffffffffffff
   140006a9d:	inc    rbp
   140006aa0:	cmp    WORD PTR [rax+rbp*2],r12w
   140006aa5:	jne    0x140006a9d
   140006aa7:	mov    r14,QWORD PTR [rsp+0x60]
   140006aac:	test   r14,r14
   140006aaf:	jne    0x140006ae9
   140006ab1:	mov    r14d,0x40
   140006ab7:	mov    rcx,rsi
   140006aba:	mov    edx,r14d
   140006abd:	call   0x140006670
   140006ac2:	mov    ebx,eax
   140006ac4:	test   eax,eax
   140006ac6:	jns    0x140006ae9
   140006ac8:	lea    r9,[rip+0x5a11]        # 0x14000c4e0
   140006acf:	mov    QWORD PTR [rsp+0x20],r13
   140006ad4:	lea    r8d,[r14-0x3f]
   140006ad8:	mov    edx,eax
   140006ada:	mov    ecx,0x4000000
   140006adf:	call   0x140006fa8
   140006ae4:	jmp    0x140006bb5
   140006ae9:	mov    rcx,QWORD PTR [rsi]
   140006aec:	lea    rax,[r14-0x1]
   140006af0:	cmp    rax,0x7ffffffe
   140006af6:	mov    QWORD PTR [rsp+0x60],rcx
   140006afb:	mov    ebx,r12d
   140006afe:	mov    edx,0x80070057
   140006b03:	cmova  ebx,edx
   140006b06:	test   ebx,ebx
   140006b08:	js     0x140006b47
   140006b0a:	mov    r9,QWORD PTR [rsp+0x70]
   140006b0f:	mov    ebx,r12d
   140006b12:	lea    r12,[r14-0x1]
   140006b16:	mov    r8,r13
   140006b19:	mov    rdx,r12
   140006b1c:	call   QWORD PTR [rip+0x2756]        # 0x140009278
   140006b22:	xor    ecx,ecx
   140006b24:	test   eax,eax
   140006b26:	js     0x140006b33
   140006b28:	cdqe   
   140006b2a:	cmp    rax,r12
   140006b2d:	ja     0x140006b33
   140006b2f:	jne    0x140006b42
   140006b31:	jmp    0x140006b38
   140006b33:	mov    ebx,0x8007007a
   140006b38:	mov    rax,QWORD PTR [rsp+0x60]
   140006b3d:	mov    WORD PTR [rax+r12*2],cx
   140006b42:	xor    r12d,r12d
   140006b45:	jmp    0x140006b50
   140006b47:	test   r14,r14
   140006b4a:	je     0x140006b50
   140006b4c:	mov    WORD PTR [rcx],r12w
   140006b50:	cmp    ebx,0x8007007a
   140006b56:	jne    0x140006b81
   140006b58:	test   r15,r15
   140006b5b:	jne    0x140006b68
   140006b5d:	mov    r15,QWORD PTR [rsi]
   140006b60:	mov    QWORD PTR [rsi],r12
   140006b63:	mov    WORD PTR [r15+rbp*2],r12w
   140006b68:	add    r14,r14
   140006b6b:	mov    rcx,rsi
   140006b6e:	mov    rdx,r14
   140006b71:	call   0x140006670
   140006b76:	mov    ebx,eax
   140006b78:	test   eax,eax
   140006b7a:	js     0x140006bcf
   140006b7c:	mov    ebx,0x1
   140006b81:	cmp    ebx,0x1
   140006b84:	je     0x140006ae9
   140006b8a:	test   ebx,ebx
   140006b8c:	jns    0x140006ba7
   140006b8e:	lea    r9,[rip+0x599b]        # 0x14000c530
   140006b95:	mov    r8d,0x1
   140006b9b:	mov    edx,ebx
   140006b9d:	mov    ecx,0x4000000
   140006ba2:	call   0x140006fa8
   140006ba7:	test   r15,r15
   140006baa:	je     0x140006bb5
   140006bac:	lea    rcx,[r15-0x8]
   140006bb0:	call   0x140007cd8
   140006bb5:	mov    rbp,QWORD PTR [rsp+0x78]
   140006bba:	mov    eax,ebx
   140006bbc:	mov    rbx,QWORD PTR [rsp+0x68]
   140006bc1:	add    rsp,0x30
   140006bc5:	pop    r15
   140006bc7:	pop    r14
   140006bc9:	pop    r13
   140006bcb:	pop    r12
   140006bcd:	pop    rsi
   140006bce:	ret    
   140006bcf:	lea    r9,[rip+0x5932]        # 0x14000c508
   140006bd6:	mov    QWORD PTR [rsp+0x20],r13
   140006bdb:	mov    r8d,0x1
   140006be1:	mov    edx,eax
   140006be3:	mov    ecx,0x4000000
   140006be8:	call   0x140006fa8
   140006bed:	jmp    0x140006ba7
   140006bef:	int3   
   140006bf0:	int3   
   140006bf1:	int3   
   140006bf2:	int3   
   140006bf3:	int3   
   140006bf4:	int3   
   140006bf5:	int3   
   140006bf6:	int3   
   140006bf7:	int3   
   140006bf8:	mov    rax,rsp
   140006bfb:	mov    QWORD PTR [rax+0x8],rbx
   140006bff:	mov    QWORD PTR [rax+0x10],rbp
   140006c03:	mov    QWORD PTR [rax+0x18],rsi
   140006c07:	mov    QWORD PTR [rax+0x20],rdi
   140006c0b:	push   r14
   140006c0d:	sub    rsp,0x20
   140006c11:	xor    r14d,r14d
   140006c14:	mov    rdi,rdx
   140006c17:	mov    rsi,rcx
   140006c1a:	test   rcx,rcx
   140006c1d:	jne    0x140006c37
   140006c1f:	lea    r8,[rip+0x577a]        # 0x14000c3a0
   140006c26:	mov    edx,0x1c9
   140006c2b:	lea    rcx,[rip+0x5776]        # 0x14000c3a8
   140006c32:	call   0x14000740c
   140006c37:	test   rdi,rdi
   140006c3a:	jne    0x140006c54
   140006c3c:	lea    r8,[rip+0x36cd]        # 0x14000a310
   140006c43:	mov    edx,0x1ca
   140006c48:	lea    rcx,[rip+0x5759]        # 0x14000c3a8
   140006c4f:	call   0x14000740c
   140006c54:	or     rax,0xffffffffffffffff
   140006c58:	inc    rax
   140006c5b:	cmp    WORD PTR [rdi+rax*2],r14w
   140006c60:	jne    0x140006c58
   140006c62:	lea    rbp,[rax+0x1]
   140006c66:	mov    rcx,rsi
   140006c69:	mov    rdx,rbp
   140006c6c:	call   0x140006670
   140006c71:	mov    ebx,eax
   140006c73:	test   eax,eax
   140006c75:	jns    0x140006c80
   140006c77:	lea    r9,[rip+0x58d2]        # 0x14000c550
   140006c7e:	jmp    0x140006c9b
   140006c80:	mov    rcx,QWORD PTR [rsi]
   140006c83:	mov    r8,rdi
   140006c86:	mov    rdx,rbp
   140006c89:	call   0x140005bcc
   140006c8e:	mov    ebx,eax
   140006c90:	test   eax,eax
   140006c92:	jns    0x140006cad
   140006c94:	lea    r9,[rip+0x58d5]        # 0x14000c570
   140006c9b:	mov    r8d,0x1
   140006ca1:	mov    edx,eax
   140006ca3:	mov    ecx,0x4000000
   140006ca8:	call   0x140006fa8
   140006cad:	mov    rbp,QWORD PTR [rsp+0x38]
   140006cb2:	mov    eax,ebx
   140006cb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cb9:	mov    rsi,QWORD PTR [rsp+0x40]
   140006cbe:	mov    rdi,QWORD PTR [rsp+0x48]
   140006cc3:	add    rsp,0x20
   140006cc7:	pop    r14
   140006cc9:	ret    
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	mov    rax,rsp
   140006cd3:	mov    QWORD PTR [rax+0x8],rbx
   140006cd7:	mov    QWORD PTR [rax+0x10],rbp
   140006cdb:	mov    QWORD PTR [rax+0x18],rsi
   140006cdf:	mov    QWORD PTR [rax+0x20],rdi
   140006ce3:	push   r12
   140006ce5:	push   r14
   140006ce7:	push   r15
   140006ce9:	sub    rsp,0x20
   140006ced:	xor    r12d,r12d
   140006cf0:	mov    rsi,rdx
   140006cf3:	mov    r14,rcx
   140006cf6:	test   rcx,rcx
   140006cf9:	jne    0x140006d13
   140006cfb:	lea    r8,[rip+0x569e]        # 0x14000c3a0
   140006d02:	mov    edx,0x1e0
   140006d07:	lea    rcx,[rip+0x569a]        # 0x14000c3a8
   140006d0e:	call   0x14000740c
   140006d13:	test   rsi,rsi
   140006d16:	jne    0x140006d30
   140006d18:	lea    r8,[rip+0x35f1]        # 0x14000a310
   140006d1f:	mov    edx,0x1e1
   140006d24:	lea    rcx,[rip+0x567d]        # 0x14000c3a8
   140006d2b:	call   0x14000740c
   140006d30:	mov    ebp,r12d
   140006d33:	or     rbx,0xffffffffffffffff
   140006d37:	inc    rbx
   140006d3a:	cmp    WORD PTR [rsi+rbx*2],r12w
   140006d3f:	jne    0x140006d37
   140006d41:	mov    eax,0x5c
   140006d46:	cmp    WORD PTR [rsi+rbx*2-0x2],ax
   140006d4b:	je     0x140006d53
   140006d4d:	inc    rbx
   140006d50:	lea    ebp,[rax-0x5b]
   140006d53:	lea    rdx,[rbx+0x1]
   140006d57:	mov    rcx,r14
   140006d5a:	call   0x140006670
   140006d5f:	mov    edi,eax
   140006d61:	test   eax,eax
   140006d63:	jns    0x140006d6e
   140006d65:	lea    r9,[rip+0x57e4]        # 0x14000c550
   140006d6c:	jmp    0x140006d8a
   140006d6e:	mov    rcx,QWORD PTR [r14]
   140006d71:	lea    rdx,[rbx+0x1]
   140006d75:	mov    r8,rsi
   140006d78:	call   0x140005bcc
   140006d7d:	mov    edi,eax
   140006d7f:	test   eax,eax
   140006d81:	jns    0x140006d9e
   140006d83:	lea    r9,[rip+0x57e6]        # 0x14000c570
   140006d8a:	mov    r8d,0x1
   140006d90:	mov    edx,eax
   140006d92:	mov    ecx,0x4000000
   140006d97:	call   0x140006fa8
   140006d9c:	jmp    0x140006db7
   140006d9e:	test   ebp,ebp
   140006da0:	je     0x140006db7
   140006da2:	mov    rax,QWORD PTR [r14]
   140006da5:	mov    ecx,0x5c
   140006daa:	mov    WORD PTR [rax+rbx*2-0x2],cx
   140006daf:	mov    rax,QWORD PTR [r14]
   140006db2:	mov    WORD PTR [rax+rbx*2],r12w
   140006db7:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dbc:	mov    eax,edi
   140006dbe:	mov    rdi,QWORD PTR [rsp+0x58]
   140006dc3:	mov    rbp,QWORD PTR [rsp+0x48]
   140006dc8:	mov    rsi,QWORD PTR [rsp+0x50]
   140006dcd:	add    rsp,0x20
   140006dd1:	pop    r15
   140006dd3:	pop    r14
   140006dd5:	pop    r12
   140006dd7:	ret    
   140006dd8:	int3   
   140006dd9:	int3   
   140006dda:	int3   
   140006ddb:	int3   
   140006ddc:	int3   
   140006ddd:	int3   
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	mov    QWORD PTR [rsp+0x8],rbx
   140006de5:	push   rdi
   140006de6:	sub    rsp,0x20
   140006dea:	mov    rbx,rdx
   140006ded:	mov    rdi,rcx
   140006df0:	test   rcx,rcx
   140006df3:	jne    0x140006e0d
   140006df5:	lea    r8,[rip+0x3514]        # 0x14000a310
   140006dfc:	mov    edx,0x27f
   140006e01:	lea    rcx,[rip+0x55a0]        # 0x14000c3a8
   140006e08:	call   0x14000740c
   140006e0d:	test   rbx,rbx
   140006e10:	jne    0x140006e2a
   140006e12:	lea    r8,[rip+0x5783]        # 0x14000c59c
   140006e19:	mov    edx,0x280
   140006e1e:	lea    rcx,[rip+0x5583]        # 0x14000c3a8
   140006e25:	call   0x14000740c
   140006e2a:	mov    rax,QWORD PTR [rdi-0x8]
   140006e2e:	mov    QWORD PTR [rbx],rax
   140006e31:	xor    eax,eax
   140006e33:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e38:	add    rsp,0x20
   140006e3c:	pop    rdi
   140006e3d:	ret    
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	int3   
   140006e41:	int3   
   140006e42:	int3   
   140006e43:	int3   
   140006e44:	mov    QWORD PTR [rsp+0x8],rbx
   140006e49:	mov    QWORD PTR [rsp+0x10],rdi
   140006e4e:	xor    edi,edi
   140006e50:	lea    rax,[rdx-0x1]
   140006e54:	cmp    rax,0x7ffffffe
   140006e5a:	mov    r10,rdx
   140006e5d:	mov    r9d,edi
   140006e60:	mov    edx,0x80070057
   140006e65:	cmova  r9d,edx
   140006e69:	mov    rbx,r8
   140006e6c:	mov    r11,rcx
   140006e6f:	test   r9d,r9d
   140006e72:	js     0x140006e9e
   140006e74:	mov    rax,r10
   140006e77:	mov    r9d,edi
   140006e7a:	test   r10,r10
   140006e7d:	je     0x140006e9b
   140006e7f:	cmp    WORD PTR [rcx],di
   140006e82:	je     0x140006e8e
   140006e84:	add    rcx,0x2
   140006e88:	sub    rax,0x1
   140006e8c:	jne    0x140006e7f
   140006e8e:	test   rax,rax
   140006e91:	je     0x140006e9b
   140006e93:	mov    r8,r10
   140006e96:	sub    r8,rax
   140006e99:	jmp    0x140006ea1
   140006e9b:	mov    r9d,edx
   140006e9e:	mov    r8,rdi
   140006ea1:	test   r9d,r9d
   140006ea4:	js     0x140006ef8
   140006ea6:	mov    rdx,r10
   140006ea9:	lea    rcx,[r11+r8*2]
   140006ead:	mov    r9d,edi
   140006eb0:	sub    rdx,r8
   140006eb3:	je     0x140006eeb
   140006eb5:	mov    rax,rdx
   140006eb8:	sub    rax,r10
   140006ebb:	lea    r10,[r8+0x7ffffffe]
   140006ec2:	add    r10,rax
   140006ec5:	sub    rbx,rcx
   140006ec8:	test   r10,r10
   140006ecb:	je     0x140006ee6
   140006ecd:	movzx  eax,WORD PTR [rbx+rcx*1]
   140006ed1:	test   ax,ax
   140006ed4:	je     0x140006ee6
   140006ed6:	mov    WORD PTR [rcx],ax
   140006ed9:	dec    r10
   140006edc:	add    rcx,0x2
   140006ee0:	sub    rdx,0x1
   140006ee4:	jne    0x140006ec8
   140006ee6:	test   rdx,rdx
   140006ee9:	jne    0x140006ef5
   140006eeb:	sub    rcx,0x2
   140006eef:	mov    r9d,0x8007007a
   140006ef5:	mov    WORD PTR [rcx],di
   140006ef8:	mov    rbx,QWORD PTR [rsp+0x8]
   140006efd:	mov    eax,r9d
   140006f00:	mov    rdi,QWORD PTR [rsp+0x10]
   140006f05:	ret    
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	int3   
   140006f09:	int3   
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	mov    al,BYTE PTR [rip+0x45ce]        # 0x14000b4e0
   140006f12:	cmp    al,BYTE PTR [rip+0x5690]        # 0x14000c5a8
   140006f18:	je     0x140006f22
   140006f1a:	lea    rax,[rip+0x45bf]        # 0x14000b4e0
   140006f21:	ret    
   140006f22:	mov    eax,ecx
   140006f24:	sar    eax,0x10
   140006f27:	and    eax,0x1fff
   140006f2c:	cmp    eax,0x7
   140006f2f:	je     0x140006f1a
   140006f31:	cmp    eax,0xf
   140006f34:	je     0x140006f1a
   140006f36:	cmp    eax,0xe5e
   140006f3b:	je     0x140006f1a
   140006f3d:	mov    eax,ecx
   140006f3f:	bts    eax,0x1c
   140006f43:	cmp    ecx,eax
   140006f45:	lea    rax,[rip+0x566c]        # 0x14000c5b8
   140006f4c:	je     0x140006f55
   140006f4e:	lea    rax,[rip+0x5653]        # 0x14000c5a8
   140006f55:	ret    
   140006f56:	int3   
   140006f57:	int3   
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	mov    rax,rsp
   140006f5f:	mov    QWORD PTR [rax+0x10],rdx
   140006f63:	mov    QWORD PTR [rax+0x18],r8
   140006f67:	mov    QWORD PTR [rax+0x20],r9
   140006f6b:	push   rbx
   140006f6c:	push   rbp
   140006f6d:	push   rsi
   140006f6e:	push   rdi
   140006f6f:	sub    rsp,0x28
   140006f73:	mov    rbx,QWORD PTR [rip+0x769e]        # 0x14000e618
   140006f7a:	lea    rbp,[rax+0x18]
   140006f7e:	mov    edi,ecx
   140006f80:	mov    rsi,rdx
   140006f83:	mov    rcx,rbx
   140006f86:	call   QWORD PTR [rip+0x2364]        # 0x1400092f0
   140006f8c:	mov    r8,rbp
   140006f8f:	mov    rdx,rsi
   140006f92:	mov    ecx,edi
   140006f94:	call   rbx
   140006f96:	add    rsp,0x28
   140006f9a:	pop    rdi
   140006f9b:	pop    rsi
   140006f9c:	pop    rbp
   140006f9d:	pop    rbx
   140006f9e:	ret    
   140006f9f:	int3   
   140006fa0:	int3   
   140006fa1:	int3   
   140006fa2:	int3   
   140006fa3:	int3   
   140006fa4:	int3   
   140006fa5:	int3   
   140006fa6:	int3   
   140006fa7:	int3   
   140006fa8:	mov    QWORD PTR [rsp+0x20],r9
   140006fad:	push   rbp
   140006fae:	push   rbx
   140006faf:	push   rsi
   140006fb0:	push   rdi
   140006fb1:	push   r12
   140006fb3:	push   r13
   140006fb5:	push   r14
   140006fb7:	push   r15
   140006fb9:	lea    rbp,[rsp-0xb78]
   140006fc1:	sub    rsp,0xc78
   140006fc8:	mov    rax,QWORD PTR [rip+0x7039]        # 0x14000e008
   140006fcf:	xor    rax,rsp
   140006fd2:	mov    QWORD PTR [rbp+0xb60],rax
   140006fd9:	xor    r15d,r15d
   140006fdc:	lea    r13,[rbp+0xbe0]
   140006fe3:	cmp    QWORD PTR [rip+0x763e],r15        # 0x14000e628
   140006fea:	mov    rax,r9
   140006fed:	mov    sil,r8b
   140006ff0:	mov    r14d,edx
   140006ff3:	mov    edi,ecx
   140006ff5:	mov    r12d,0x3ff
   140006ffb:	je     0x14000709c
   140007001:	mov    r9,r13
   140007004:	lea    rcx,[rsp+0x60]
   140007009:	mov    r8,rax
   14000700c:	mov    edx,r12d
   14000700f:	call   QWORD PTR [rip+0x224b]        # 0x140009260
   140007015:	test   eax,eax
   140007017:	js     0x140007095
   140007019:	cdqe   
   14000701b:	cmp    rax,r12
   14000701e:	ja     0x140007095
   140007020:	jne    0x140007029
   140007022:	mov    BYTE PTR [rbp+0x35f],r15b
   140007029:	test   sil,sil
   14000702c:	je     0x14000707e
   14000702e:	mov    ecx,r14d
   140007031:	call   0x140006f0c
   140007036:	mov    QWORD PTR [rsp+0x28],rax
   14000703b:	lea    r9,[rsp+0x60]
   140007040:	lea    r8,[rip+0x5581]        # 0x14000c5c8
   140007047:	mov    DWORD PTR [rsp+0x20],r14d
   14000704c:	mov    edx,0x400
   140007051:	lea    rcx,[rbp+0x760]
   140007058:	call   0x1400074fc
   14000705d:	test   eax,eax
   14000705f:	js     0x14000709c
   140007061:	mov    rbx,QWORD PTR [rip+0x75c0]        # 0x14000e628
   140007068:	mov    rcx,rbx
   14000706b:	call   QWORD PTR [rip+0x227f]        # 0x1400092f0
   140007071:	lea    rdx,[rbp+0x760]
   140007078:	mov    ecx,edi
   14000707a:	call   rbx
   14000707c:	jmp    0x14000709c
   14000707e:	mov    rbx,QWORD PTR [rip+0x75a3]        # 0x14000e628
   140007085:	mov    rcx,rbx
   140007088:	call   QWORD PTR [rip+0x2262]        # 0x1400092f0
   14000708e:	lea    rdx,[rsp+0x60]
   140007093:	jmp    0x140007078
   140007095:	mov    BYTE PTR [rbp+0x35f],r15b
   14000709c:	cmp    QWORD PTR [rip+0x757d],r15        # 0x14000e620
   1400070a3:	je     0x140007218
   1400070a9:	mov    rbx,QWORD PTR [rip+0x7568]        # 0x14000e618
   1400070b0:	test   rbx,rbx
   1400070b3:	je     0x140007218
   1400070b9:	cmp    QWORD PTR [rip+0x7550],r15        # 0x14000e610
   1400070c0:	je     0x140007218
   1400070c6:	test   sil,sil
   1400070c9:	je     0x140007191
   1400070cf:	mov    r8,QWORD PTR [rbp+0xbd8]
   1400070d6:	lea    rcx,[rbp+0x360]
   1400070dd:	mov    r9,r13
   1400070e0:	mov    rdx,r12
   1400070e3:	call   QWORD PTR [rip+0x2177]        # 0x140009260
   1400070e9:	test   eax,eax
   1400070eb:	js     0x140007218
   1400070f1:	movsxd rcx,eax
   1400070f4:	cmp    rcx,r12
   1400070f7:	ja     0x140007218
   1400070fd:	movzx  eax,BYTE PTR [rbp+0x75f]
   140007104:	mov    ecx,r14d
   140007107:	cmove  eax,r15d
   14000710b:	mov    BYTE PTR [rbp+0x75f],al
   140007111:	call   0x140006f0c
   140007116:	mov    r9d,r14d
   140007119:	mov    QWORD PTR [rsp+0x20],rax
   14000711e:	lea    r8,[rbp+0x360]
   140007125:	mov    ecx,edi
   140007127:	lea    rdx,[rip+0x549a]        # 0x14000c5c8
   14000712e:	call   0x140006f5c
   140007133:	mov    rbx,QWORD PTR [rip+0x74d6]        # 0x14000e610
   14000713a:	mov    rsi,rax
   14000713d:	mov    rcx,rbx
   140007140:	call   QWORD PTR [rip+0x21aa]        # 0x1400092f0
   140007146:	call   rbx
   140007148:	mov    rdi,QWORD PTR [rip+0x74d1]        # 0x14000e620
   14000714f:	mov    rbx,rax
   140007152:	mov    rcx,rdi
   140007155:	call   QWORD PTR [rip+0x2195]        # 0x1400092f0
   14000715b:	mov    DWORD PTR [rsp+0x50],r15d
   140007160:	lea    rax,[rip+0x54a1]        # 0x14000c608
   140007167:	mov    QWORD PTR [rsp+0x48],r15
   14000716c:	mov    DWORD PTR [rsp+0x40],r15d
   140007171:	mov    QWORD PTR [rsp+0x38],rbx
   140007176:	mov    QWORD PTR [rsp+0x30],rax
   14000717b:	lea    rax,[rip+0x5466]        # 0x14000c5e8
   140007182:	mov    QWORD PTR [rsp+0x28],rax
   140007187:	mov    DWORD PTR [rsp+0x20],0x3ee
   14000718f:	jmp    0x140007204
   140007191:	mov    rcx,rbx
   140007194:	call   QWORD PTR [rip+0x2156]        # 0x1400092f0
   14000719a:	mov    rdx,QWORD PTR [rbp+0xbd8]
   1400071a1:	mov    r8,r13
   1400071a4:	mov    ecx,edi
   1400071a6:	call   rbx
   1400071a8:	mov    rbx,QWORD PTR [rip+0x7461]        # 0x14000e610
   1400071af:	mov    rsi,rax
   1400071b2:	mov    rcx,rbx
   1400071b5:	call   QWORD PTR [rip+0x2135]        # 0x1400092f0
   1400071bb:	call   rbx
   1400071bd:	mov    rdi,QWORD PTR [rip+0x745c]        # 0x14000e620
   1400071c4:	mov    rbx,rax
   1400071c7:	mov    rcx,rdi
   1400071ca:	call   QWORD PTR [rip+0x2120]        # 0x1400092f0
   1400071d0:	mov    DWORD PTR [rsp+0x50],r15d
   1400071d5:	lea    rax,[rip+0x542c]        # 0x14000c608
   1400071dc:	mov    QWORD PTR [rsp+0x48],r15
   1400071e1:	mov    DWORD PTR [rsp+0x40],r15d
   1400071e6:	mov    QWORD PTR [rsp+0x38],rbx
   1400071eb:	mov    QWORD PTR [rsp+0x30],rax
   1400071f0:	lea    rax,[rip+0x53f1]        # 0x14000c5e8
   1400071f7:	mov    QWORD PTR [rsp+0x28],rax
   1400071fc:	mov    DWORD PTR [rsp+0x20],0x3f4
   140007204:	xor    r9d,r9d
   140007207:	lea    r8,[rip+0x53f6]        # 0x14000c604
   14000720e:	mov    edx,0x20000
   140007213:	mov    rcx,rsi
   140007216:	call   rdi
   140007218:	mov    rcx,QWORD PTR [rbp+0xb60]
   14000721f:	xor    rcx,rsp
   140007222:	call   0x140008030
   140007227:	add    rsp,0xc78
   14000722e:	pop    r15
   140007230:	pop    r14
   140007232:	pop    r13
   140007234:	pop    r12
   140007236:	pop    rdi
   140007237:	pop    rsi
   140007238:	pop    rbx
   140007239:	pop    rbp
   14000723a:	ret    
   14000723b:	int3   
   14000723c:	int3   
   14000723d:	int3   
   14000723e:	int3   
   14000723f:	int3   
   140007240:	int3   
   140007241:	int3   
   140007242:	int3   
   140007243:	int3   
   140007244:	mov    r11,rsp
   140007247:	mov    QWORD PTR [r11+0x20],r9
   14000724b:	push   rbx
   14000724c:	push   rbp
   14000724d:	push   rsi
   14000724e:	push   rdi
   14000724f:	push   r14
   140007251:	push   r15
   140007253:	sub    rsp,0x478
   14000725a:	mov    rax,QWORD PTR [rip+0x6da7]        # 0x14000e008
   140007261:	xor    rax,rsp
   140007264:	mov    QWORD PTR [rsp+0x460],rax
   14000726c:	xor    r14d,r14d
   14000726f:	lea    r15,[r11+0x28]
   140007273:	cmp    QWORD PTR [rip+0x73a6],r14        # 0x14000e620
   14000727a:	mov    rbx,r9
   14000727d:	mov    ebp,edx
   14000727f:	mov    esi,ecx
   140007281:	je     0x1400073e3
   140007287:	mov    rdi,QWORD PTR [rip+0x738a]        # 0x14000e618
   14000728e:	test   rdi,rdi
   140007291:	je     0x1400073e3
   140007297:	cmp    QWORD PTR [rip+0x7372],r14        # 0x14000e610
   14000729e:	je     0x1400073e3
   1400072a4:	test   r8b,r8b
   1400072a7:	je     0x140007360
   1400072ad:	mov    r8,rbx
   1400072b0:	lea    rcx,[rsp+0x60]
   1400072b5:	mov    ebx,0x3ff
   1400072ba:	mov    r9,r15
   1400072bd:	mov    edx,ebx
   1400072bf:	call   QWORD PTR [rip+0x1f9b]        # 0x140009260
   1400072c5:	test   eax,eax
   1400072c7:	js     0x1400073e3
   1400072cd:	movsxd rdx,eax
   1400072d0:	cmp    rdx,rbx
   1400072d3:	ja     0x1400073e3
   1400072d9:	movzx  eax,BYTE PTR [rsp+0x45f]
   1400072e1:	lea    r8,[rsp+0x60]
   1400072e6:	cmove  eax,r14d
   1400072ea:	lea    rdx,[rip+0x5327]        # 0x14000c618
   1400072f1:	mov    r9d,ebp
   1400072f4:	mov    BYTE PTR [rsp+0x45f],al
   1400072fb:	mov    ecx,esi
   1400072fd:	call   0x140006f5c
   140007302:	mov    rbx,QWORD PTR [rip+0x7307]        # 0x14000e610
   140007309:	mov    rsi,rax
   14000730c:	mov    rcx,rbx
   14000730f:	call   QWORD PTR [rip+0x1fdb]        # 0x1400092f0
   140007315:	call   rbx
   140007317:	mov    rdi,QWORD PTR [rip+0x7302]        # 0x14000e620
   14000731e:	mov    rbx,rax
   140007321:	mov    rcx,rdi
   140007324:	call   QWORD PTR [rip+0x1fc6]        # 0x1400092f0
   14000732a:	mov    DWORD PTR [rsp+0x50],r14d
   14000732f:	lea    rax,[rip+0x52fa]        # 0x14000c630
   140007336:	mov    QWORD PTR [rsp+0x48],r14
   14000733b:	mov    DWORD PTR [rsp+0x40],r14d
   140007340:	mov    QWORD PTR [rsp+0x38],rbx
   140007345:	mov    QWORD PTR [rsp+0x30],rax
   14000734a:	lea    rax,[rip+0x5297]        # 0x14000c5e8
   140007351:	mov    QWORD PTR [rsp+0x28],rax
   140007356:	mov    DWORD PTR [rsp+0x20],0x41f
   14000735e:	jmp    0x1400073cf
   140007360:	mov    rcx,rdi
   140007363:	call   QWORD PTR [rip+0x1f87]        # 0x1400092f0
   140007369:	mov    r8,r15
   14000736c:	mov    rdx,rbx
   14000736f:	mov    ecx,esi
   140007371:	call   rdi
   140007373:	mov    rbx,QWORD PTR [rip+0x7296]        # 0x14000e610
   14000737a:	mov    rsi,rax
   14000737d:	mov    rcx,rbx
   140007380:	call   QWORD PTR [rip+0x1f6a]        # 0x1400092f0
   140007386:	call   rbx
   140007388:	mov    rdi,QWORD PTR [rip+0x7291]        # 0x14000e620
   14000738f:	mov    rbx,rax
   140007392:	mov    rcx,rdi
   140007395:	call   QWORD PTR [rip+0x1f55]        # 0x1400092f0
   14000739b:	mov    DWORD PTR [rsp+0x50],r14d
   1400073a0:	lea    rax,[rip+0x5289]        # 0x14000c630
   1400073a7:	mov    QWORD PTR [rsp+0x48],r14
   1400073ac:	mov    DWORD PTR [rsp+0x40],r14d
   1400073b1:	mov    QWORD PTR [rsp+0x38],rbx
   1400073b6:	mov    QWORD PTR [rsp+0x30],rax
   1400073bb:	lea    rax,[rip+0x5226]        # 0x14000c5e8
   1400073c2:	mov    QWORD PTR [rsp+0x28],rax
   1400073c7:	mov    DWORD PTR [rsp+0x20],0x425
   1400073cf:	xor    r9d,r9d
   1400073d2:	lea    r8,[rip+0x522b]        # 0x14000c604
   1400073d9:	mov    edx,0x20000
   1400073de:	mov    rcx,rsi
   1400073e1:	call   rdi
   1400073e3:	mov    rcx,QWORD PTR [rsp+0x460]
   1400073eb:	xor    rcx,rsp
   1400073ee:	call   0x140008030
   1400073f3:	add    rsp,0x478
   1400073fa:	pop    r15
   1400073fc:	pop    r14
   1400073fe:	pop    rdi
   1400073ff:	pop    rsi
   140007400:	pop    rbp
   140007401:	pop    rbx
   140007402:	ret    
   140007403:	int3   
   140007404:	int3   
   140007405:	int3   
   140007406:	int3   
   140007407:	int3   
   140007408:	int3   
   140007409:	int3   
   14000740a:	int3   
   14000740b:	int3   
   14000740c:	sub    rsp,0x448
   140007413:	mov    rax,QWORD PTR [rip+0x6bee]        # 0x14000e008
   14000741a:	xor    rax,rsp
   14000741d:	mov    QWORD PTR [rsp+0x430],rax
   140007425:	cmp    DWORD PTR [rip+0x71dc],0x0        # 0x14000e608
   14000742c:	jne    0x1400074db
   140007432:	mov    DWORD PTR [rip+0x71cc],0x1        # 0x14000e608
   14000743c:	mov    r9,rcx
   14000743f:	lea    rcx,[rsp+0x30]
   140007444:	test   r8,r8
   140007447:	je     0x140007465
   140007449:	mov    QWORD PTR [rsp+0x28],r8
   14000744e:	lea    r8,[rip+0x51eb]        # 0x14000c640
   140007455:	mov    DWORD PTR [rsp+0x20],edx
   140007459:	mov    edx,0x400
   14000745e:	call   0x1400074fc
   140007463:	jmp    0x14000747a
   140007465:	mov    DWORD PTR [rsp+0x20],edx
   140007469:	lea    r8,[rip+0x51f0]        # 0x14000c660
   140007470:	mov    edx,0x400
   140007475:	call   0x1400074fc
   14000747a:	test   eax,eax
   14000747c:	js     0x1400074ab
   14000747e:	lea    rcx,[rsp+0x30]
   140007483:	call   QWORD PTR [rip+0x1c8f]        # 0x140009118
   140007489:	lea    rax,[rsp+0x30]
   14000748e:	xor    r8d,r8d
   140007491:	lea    r9,[rip+0x51e8]        # 0x14000c680
   140007498:	mov    QWORD PTR [rsp+0x20],rax
   14000749d:	xor    edx,edx
   14000749f:	mov    ecx,0x4000000
   1400074a4:	call   0x140006fa8
   1400074a9:	jmp    0x1400074ce
   1400074ab:	lea    rcx,[rip+0x51de]        # 0x14000c690
   1400074b2:	call   QWORD PTR [rip+0x1c60]        # 0x140009118
   1400074b8:	lea    r9,[rip+0x51f1]        # 0x14000c6b0
   1400074bf:	xor    r8d,r8d
   1400074c2:	xor    edx,edx
   1400074c4:	mov    ecx,0x4000000
   1400074c9:	call   0x140006fa8
   1400074ce:	call   QWORD PTR [rip+0x1c54]        # 0x140009128
   1400074d4:	and    DWORD PTR [rip+0x712d],0x0        # 0x14000e608
   1400074db:	mov    rcx,QWORD PTR [rsp+0x430]
   1400074e3:	xor    rcx,rsp
   1400074e6:	call   0x140008030
   1400074eb:	add    rsp,0x448
   1400074f2:	ret    
   1400074f3:	int3   
   1400074f4:	int3   
   1400074f5:	int3   
   1400074f6:	int3   
   1400074f7:	int3   
   1400074f8:	int3   
   1400074f9:	int3   
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	mov    QWORD PTR [rsp+0x18],r8
   140007501:	mov    QWORD PTR [rsp+0x20],r9
   140007506:	push   rbx
   140007507:	push   rsi
   140007508:	push   rdi
   140007509:	sub    rsp,0x20
   14000750d:	xor    esi,esi
   14000750f:	lea    rax,[rdx-0x1]
   140007513:	cmp    rax,0x7ffffffe
   140007519:	mov    rdi,rcx
   14000751c:	mov    ecx,0x80070057
   140007521:	cmova  esi,ecx
   140007524:	test   esi,esi
   140007526:	js     0x14000755d
   140007528:	lea    rbx,[rdx-0x1]
   14000752c:	mov    rcx,rdi
   14000752f:	mov    rdx,rbx
   140007532:	lea    r9,[rsp+0x58]
   140007537:	xor    esi,esi
   140007539:	call   QWORD PTR [rip+0x1d21]        # 0x140009260
   14000753f:	test   eax,eax
   140007541:	js     0x140007552
   140007543:	cdqe   
   140007545:	cmp    rax,rbx
   140007548:	ja     0x140007552
   14000754a:	jne    0x140007565
   14000754c:	mov    BYTE PTR [rbx+rdi*1],sil
   140007550:	jmp    0x140007565
   140007552:	mov    BYTE PTR [rbx+rdi*1],sil
   140007556:	mov    esi,0x8007007a
   14000755b:	jmp    0x140007565
   14000755d:	test   rdx,rdx
   140007560:	je     0x140007565
   140007562:	mov    BYTE PTR [rdi],0x0
   140007565:	mov    eax,esi
   140007567:	add    rsp,0x20
   14000756b:	pop    rdi
   14000756c:	pop    rsi
   14000756d:	pop    rbx
   14000756e:	ret    
   14000756f:	int3   
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	int3   
   140007575:	int3   
   140007576:	int3   
   140007577:	int3   
   140007578:	int3   
   140007579:	int3   
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	mov    rdx,QWORD PTR [rdx]
   140007583:	mov    rcx,QWORD PTR [rcx]
   140007586:	rex.W jmp QWORD PTR [rip+0x1cb3]        # 0x140009240
   14000758d:	int3   
   14000758e:	int3   
   14000758f:	int3   
   140007590:	int3   
   140007591:	int3   
   140007592:	int3   
   140007593:	int3   
   140007594:	mov    QWORD PTR [rsp+0x8],rbx
   140007599:	mov    QWORD PTR [rsp+0x10],rdi
   14000759e:	mov    QWORD PTR [rsp+0x18],r14
   1400075a3:	push   rbp
   1400075a4:	mov    rbp,rsp
   1400075a7:	sub    rsp,0x50
   1400075ab:	mov    rax,QWORD PTR [rip+0x6a56]        # 0x14000e008
   1400075b2:	xor    rax,rsp
   1400075b5:	mov    QWORD PTR [rbp-0x8],rax
   1400075b9:	mov    rdi,QWORD PTR [rbp+0x30]
   1400075bd:	test   rdi,rdi
   1400075c0:	jne    0x1400075da
   1400075c2:	lea    r8,[rip+0x51bf]        # 0x14000c788
   1400075c9:	mov    edx,0x21b
   1400075ce:	lea    rcx,[rip+0x5103]        # 0x14000c6d8
   1400075d5:	call   0x14000740c
   1400075da:	xor    ebx,ebx
   1400075dc:	lea    rax,[rbp-0x20]
   1400075e0:	and    QWORD PTR [rbp-0x20],rbx
   1400075e4:	lea    r14,[rip+0x26f5]        # 0x140009ce0
   1400075eb:	and    DWORD PTR [rbp-0x18],ebx
   1400075ee:	mov    rdx,r14
   1400075f1:	and    DWORD PTR [rbp-0x10],ebx
   1400075f4:	mov    r9d,0x20019
   1400075fa:	and    DWORD PTR [rbp-0x14],ebx
   1400075fd:	xor    r8d,r8d
   140007600:	mov    rcx,0xffffffff80000002
   140007607:	mov    QWORD PTR [rsp+0x20],rax
   14000760c:	call   QWORD PTR [rip+0x1a2e]        # 0x140009040
   140007612:	test   eax,eax
   140007614:	je     0x140007644
   140007616:	lea    r9,[rip+0x50db]        # 0x14000c6f8
   14000761d:	movzx  ebx,ax
   140007620:	mov    r8d,0x1
   140007626:	or     ebx,0x80070000
   14000762c:	mov    QWORD PTR [rsp+0x20],r14
   140007631:	test   eax,eax
   140007633:	mov    ecx,0x4000000
   140007638:	cmovle ebx,eax
   14000763b:	mov    edx,ebx
   14000763d:	call   0x140006fa8
   140007642:	jmp    0x1400076b0
   140007644:	mov    rcx,QWORD PTR [rbp-0x20]
   140007648:	lea    rax,[rbp-0x10]
   14000764c:	mov    QWORD PTR [rsp+0x28],rax
   140007651:	lea    r14,[rip+0x2660]        # 0x140009cb8
   140007658:	lea    rax,[rbp-0x14]
   14000765c:	mov    DWORD PTR [rbp-0x10],0x4
   140007663:	lea    r9,[rbp-0x18]
   140007667:	mov    QWORD PTR [rsp+0x20],rax
   14000766c:	xor    r8d,r8d
   14000766f:	mov    rdx,r14
   140007672:	call   QWORD PTR [rip+0x19b8]        # 0x140009030
   140007678:	test   eax,eax
   14000767a:	je     0x140007685
   14000767c:	lea    r9,[rip+0x50dd]        # 0x14000c760
   140007683:	jmp    0x14000761d
   140007685:	cmp    DWORD PTR [rbp-0x18],0x4
   140007689:	je     0x1400076ab
   14000768b:	mov    ebx,0x8007000d
   140007690:	lea    r9,[rip+0x5101]        # 0x14000c798
   140007697:	mov    edx,ebx
   140007699:	mov    r8d,0x1
   14000769f:	mov    ecx,0x4000000
   1400076a4:	call   0x140006fa8
   1400076a9:	jmp    0x1400076b0
   1400076ab:	mov    ecx,DWORD PTR [rbp-0x14]
   1400076ae:	mov    DWORD PTR [rdi],ecx
   1400076b0:	mov    rcx,QWORD PTR [rbp-0x20]
   1400076b4:	test   rcx,rcx
   1400076b7:	je     0x1400076bf
   1400076b9:	call   QWORD PTR [rip+0x1961]        # 0x140009020
   1400076bf:	mov    eax,ebx
   1400076c1:	mov    rcx,QWORD PTR [rbp-0x8]
   1400076c5:	xor    rcx,rsp
   1400076c8:	call   0x140008030
   1400076cd:	mov    rbx,QWORD PTR [rsp+0x60]
   1400076d2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400076d7:	mov    r14,QWORD PTR [rsp+0x70]
   1400076dc:	add    rsp,0x50
   1400076e0:	pop    rbp
   1400076e1:	ret    
   1400076e2:	int3   
   1400076e3:	int3   
   1400076e4:	int3   
   1400076e5:	int3   
   1400076e6:	int3   
   1400076e7:	int3   
   1400076e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400076ed:	mov    QWORD PTR [rsp+0x18],rsi
   1400076f2:	push   rdi
   1400076f3:	sub    rsp,0x60
   1400076f7:	mov    rax,QWORD PTR [rip+0x690a]        # 0x14000e008
   1400076fe:	xor    rax,rsp
   140007701:	mov    QWORD PTR [rsp+0x50],rax
   140007706:	xor    ebx,ebx
   140007708:	mov    rsi,rdx
   14000770b:	mov    QWORD PTR [rsp+0x40],rbx
   140007710:	mov    DWORD PTR [rsp+0x30],ebx
   140007714:	cmp    DWORD PTR [rdx],ebx
   140007716:	je     0x140007893
   14000771c:	call   QWORD PTR [rip+0x1966]        # 0x140009088
   140007722:	lea    r8,[rsp+0x40]
   140007727:	mov    edx,0x20028
   14000772c:	mov    rcx,rax
   14000772f:	call   QWORD PTR [rip+0x18cb]        # 0x140009000
   140007735:	test   eax,eax
   140007737:	jne    0x140007777
   140007739:	call   QWORD PTR [rip+0x1a09]        # 0x140009148
   14000773f:	movzx  ecx,ax
   140007742:	lea    r9,[rip+0x4fdf]        # 0x14000c728
   140007749:	or     ecx,0x80070000
   14000774f:	mov    r8d,0x1
   140007755:	test   eax,eax
   140007757:	cmovle ecx,eax
   14000775a:	mov    eax,0x80004005
   14000775f:	test   ecx,ecx
   140007761:	cmovns ecx,eax
   140007764:	mov    ebx,ecx
   140007766:	mov    edx,ecx
   140007768:	mov    ecx,0x4000000
   14000776d:	call   0x140006fa8
   140007772:	jmp    0x140007893
   140007777:	mov    r9d,DWORD PTR [rsp+0x30]
   14000777c:	lea    rax,[rsp+0x30]
   140007781:	mov    rcx,QWORD PTR [rsp+0x40]
   140007786:	mov    r8,rsi
   140007789:	mov    QWORD PTR [rsp+0x28],rax
   14000778e:	xor    edx,edx
   140007790:	mov    QWORD PTR [rsp+0x20],rbx
   140007795:	call   QWORD PTR [rip+0x187d]        # 0x140009018
   14000779b:	test   eax,eax
   14000779d:	jne    0x14000787e
   1400077a3:	call   QWORD PTR [rip+0x199f]        # 0x140009148
   1400077a9:	cmp    eax,0x7a
   1400077ac:	jne    0x140007845
   1400077b2:	mov    ecx,DWORD PTR [rsp+0x30]
   1400077b6:	call   0x14000865c
   1400077bb:	mov    rdi,rax
   1400077be:	test   rax,rax
   1400077c1:	jne    0x1400077d6
   1400077c3:	mov    edx,0x8007000e
   1400077c8:	lea    r9,[rip+0x4ff1]        # 0x14000c7c0
   1400077cf:	mov    ebx,edx
   1400077d1:	jmp    0x14000786e
   1400077d6:	xor    eax,eax
   1400077d8:	mov    r8,rsi
   1400077db:	mov    DWORD PTR [rdi],eax
   1400077dd:	xor    edx,edx
   1400077df:	mov    r9d,DWORD PTR [rsp+0x30]
   1400077e4:	lea    rax,[rsp+0x30]
   1400077e9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400077ee:	mov    QWORD PTR [rsp+0x28],rax
   1400077f3:	mov    QWORD PTR [rsp+0x20],rdi
   1400077f8:	call   QWORD PTR [rip+0x181a]        # 0x140009018
   1400077fe:	test   eax,eax
   140007800:	jne    0x14000783b
   140007802:	call   QWORD PTR [rip+0x1940]        # 0x140009148
   140007808:	movzx  ecx,ax
   14000780b:	lea    r9,[rip+0x4fee]        # 0x14000c800
   140007812:	or     ecx,0x80070000
   140007818:	mov    r8d,0x1
   14000781e:	test   eax,eax
   140007820:	cmovle ecx,eax
   140007823:	mov    eax,0x80004005
   140007828:	test   ecx,ecx
   14000782a:	cmovns ecx,eax
   14000782d:	mov    ebx,ecx
   14000782f:	mov    edx,ecx
   140007831:	mov    ecx,0x4000000
   140007836:	call   0x140006fa8
   14000783b:	mov    rcx,rdi
   14000783e:	call   0x140007cd8
   140007843:	jmp    0x14000787e
   140007845:	call   QWORD PTR [rip+0x18fd]        # 0x140009148
   14000784b:	movzx  ecx,ax
   14000784e:	lea    r9,[rip+0x5003]        # 0x14000c858
   140007855:	or     ecx,0x80070000
   14000785b:	test   eax,eax
   14000785d:	cmovle ecx,eax
   140007860:	mov    eax,0x80004005
   140007865:	test   ecx,ecx
   140007867:	cmovns ecx,eax
   14000786a:	mov    ebx,ecx
   14000786c:	mov    edx,ecx
   14000786e:	mov    r8d,0x1
   140007874:	mov    ecx,0x4000000
   140007879:	call   0x140006fa8
   14000787e:	mov    rcx,QWORD PTR [rsp+0x40]
   140007883:	lea    rdx,[rcx-0x1]
   140007887:	cmp    rdx,0xfffffffffffffffd
   14000788b:	ja     0x140007893
   14000788d:	call   QWORD PTR [rip+0x187d]        # 0x140009110
   140007893:	mov    eax,ebx
   140007895:	mov    rcx,QWORD PTR [rsp+0x50]
   14000789a:	xor    rcx,rsp
   14000789d:	call   0x140008030
   1400078a2:	lea    r11,[rsp+0x60]
   1400078a7:	mov    rbx,QWORD PTR [r11+0x10]
   1400078ab:	mov    rsi,QWORD PTR [r11+0x20]
   1400078af:	mov    rsp,r11
   1400078b2:	pop    rdi
   1400078b3:	ret    
   1400078b4:	int3   
   1400078b5:	int3   
   1400078b6:	int3   
   1400078b7:	int3   
   1400078b8:	int3   
   1400078b9:	int3   
   1400078ba:	int3   
   1400078bb:	int3   
   1400078bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400078c1:	mov    QWORD PTR [rsp+0x10],rdx
   1400078c6:	push   rdi
   1400078c7:	sub    rsp,0x20
   1400078cb:	mov    ecx,0x1c
   1400078d0:	call   0x14000865c
   1400078d5:	mov    rdi,rax
   1400078d8:	test   rax,rax
   1400078db:	jne    0x1400078fb
   1400078dd:	mov    ebx,0x8007000e
   1400078e2:	lea    r9,[rip+0x4f97]        # 0x14000c880
   1400078e9:	mov    edx,ebx
   1400078eb:	lea    r8d,[rax+0x1]
   1400078ef:	mov    ecx,0x4000000
   1400078f4:	call   0x140006fa8
   1400078f9:	jmp    0x14000796d
   1400078fb:	xor    eax,eax
   1400078fd:	lea    rdx,[rip+0x6724]        # 0x14000e028
   140007904:	mov    QWORD PTR [rdi],rax
   140007907:	lea    rcx,[rdi+0xc]
   14000790b:	lea    r9d,[rax+0x2]
   14000790f:	mov    DWORD PTR [rdi],r9d
   140007912:	mov    r8d,r9d
   140007915:	movsxd rax,DWORD PTR [rdx]
   140007918:	lea    rdx,[rdx+0x4]
   14000791c:	mov    DWORD PTR [rsp+0x38],eax
   140007920:	shr    rax,0x20
   140007924:	mov    DWORD PTR [rsp+0x3c],eax
   140007928:	mov    rax,QWORD PTR [rsp+0x38]
   14000792d:	mov    QWORD PTR [rcx-0x8],rax
   140007931:	mov    DWORD PTR [rcx],r9d
   140007934:	lea    rcx,[rcx+0xc]
   140007938:	sub    r8,0x1
   14000793c:	jne    0x140007915
   14000793e:	mov    rdx,rdi
   140007941:	call   0x1400076e8
   140007946:	mov    ebx,eax
   140007948:	test   eax,eax
   14000794a:	jns    0x140007965
   14000794c:	lea    r9,[rip+0x4f5d]        # 0x14000c8b0
   140007953:	mov    r8d,0x1
   140007959:	mov    edx,eax
   14000795b:	mov    ecx,0x4000000
   140007960:	call   0x140006fa8
   140007965:	mov    rcx,rdi
   140007968:	call   0x140007cd8
   14000796d:	mov    eax,ebx
   14000796f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007974:	add    rsp,0x20
   140007978:	pop    rdi
   140007979:	ret    
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	int3   
   14000797d:	int3   
   14000797e:	int3   
   14000797f:	int3   
   140007980:	mov    rax,rsp
   140007983:	mov    QWORD PTR [rax+0x8],rbx
   140007987:	mov    QWORD PTR [rax+0x10],rbp
   14000798b:	mov    QWORD PTR [rax+0x18],rsi
   14000798f:	mov    QWORD PTR [rax+0x20],rdi
   140007993:	push   r12
   140007995:	push   r14
   140007997:	push   r15
   140007999:	sub    rsp,0x20
   14000799d:	xor    r12d,r12d
   1400079a0:	mov    r15,r8
   1400079a3:	mov    r14,rdx
   1400079a6:	mov    ebp,ecx
   1400079a8:	mov    ebx,r12d
   1400079ab:	mov    r9d,r12d
   1400079ae:	mov    r11d,0x80070057
   1400079b4:	lea    esi,[r12+0x2]
   1400079b9:	test   ecx,ecx
   1400079bb:	je     0x140007a25
   1400079bd:	mov    r8,rdx
   1400079c0:	mov    r10d,0x1fffffff
   1400079c6:	mov    rcx,QWORD PTR [r8]
   1400079c9:	mov    rax,r12
   1400079cc:	test   rcx,rcx
   1400079cf:	je     0x1400079f4
   1400079d1:	mov    rdx,r10
   1400079d4:	mov    ebx,r12d
   1400079d7:	cmp    WORD PTR [rcx],r12w
   1400079db:	je     0x1400079e7
   1400079dd:	add    rcx,0x2
   1400079e1:	sub    rdx,0x1
   1400079e5:	jne    0x1400079d7
   1400079e7:	test   rdx,rdx
   1400079ea:	je     0x1400079f4
   1400079ec:	mov    rax,r10
   1400079ef:	sub    rax,rdx
   1400079f2:	jmp    0x1400079f7
   1400079f4:	mov    ebx,r11d
   1400079f7:	test   ebx,ebx
   1400079f9:	js     0x140007a00
   1400079fb:	add    rax,rax
   1400079fe:	jmp    0x140007a03
   140007a00:	mov    rax,r12
   140007a03:	test   ebx,ebx
   140007a05:	js     0x140007b3d
   140007a0b:	add    rax,rsi
   140007a0e:	cmp    rax,rsi
   140007a11:	jb     0x140007a4b
   140007a13:	inc    r9d
   140007a16:	add    r8,0x8
   140007a1a:	mov    rsi,rax
   140007a1d:	mov    ebx,r12d
   140007a20:	cmp    r9d,ebp
   140007a23:	jb     0x1400079c6
   140007a25:	call   QWORD PTR [rip+0x1735]        # 0x140009160
   140007a2b:	mov    r8,rsi
   140007a2e:	xor    edx,edx
   140007a30:	mov    rcx,rax
   140007a33:	call   QWORD PTR [rip+0x172f]        # 0x140009168
   140007a39:	mov    rdi,rax
   140007a3c:	test   rax,rax
   140007a3f:	jne    0x140007a55
   140007a41:	mov    ebx,0x8007000e
   140007a46:	jmp    0x140007b3d
   140007a4b:	mov    ebx,0x80070216
   140007a50:	jmp    0x140007b3d
   140007a55:	mov    WORD PTR [rax],r12w
   140007a59:	mov    r10d,r12d
   140007a5c:	test   ebp,ebp
   140007a5e:	je     0x140007b1e
   140007a64:	shr    rsi,1
   140007a67:	mov    r11,QWORD PTR [r14]
   140007a6a:	lea    rax,[rsi-0x1]
   140007a6e:	cmp    rax,0x7ffffffe
   140007a74:	mov    ebx,r12d
   140007a77:	mov    edx,0x80070057
   140007a7c:	cmova  ebx,edx
   140007a7f:	test   ebx,ebx
   140007a81:	js     0x140007ab0
   140007a83:	mov    rax,rsi
   140007a86:	mov    rcx,rdi
   140007a89:	mov    ebx,r12d
   140007a8c:	test   rsi,rsi
   140007a8f:	je     0x140007aae
   140007a91:	cmp    WORD PTR [rcx],r12w
   140007a95:	je     0x140007aa1
   140007a97:	add    rcx,0x2
   140007a9b:	sub    rax,0x1
   140007a9f:	jne    0x140007a91
   140007aa1:	test   rax,rax
   140007aa4:	je     0x140007aae
   140007aa6:	mov    rdx,rsi
   140007aa9:	sub    rdx,rax
   140007aac:	jmp    0x140007ab3
   140007aae:	mov    ebx,edx
   140007ab0:	mov    rdx,r12
   140007ab3:	test   ebx,ebx
   140007ab5:	js     0x140007b24
   140007ab7:	mov    r8,rsi
   140007aba:	lea    rcx,[rdi+rdx*2]
   140007abe:	mov    ebx,r12d
   140007ac1:	sub    r8,rdx
   140007ac4:	je     0x140007afd
   140007ac6:	mov    rax,r8
   140007ac9:	lea    r9,[rdx+0x7ffffffe]
   140007ad0:	sub    rax,rsi
   140007ad3:	add    r9,rax
   140007ad6:	sub    r11,rcx
   140007ad9:	test   r9,r9
   140007adc:	je     0x140007af8
   140007ade:	movzx  eax,WORD PTR [r11+rcx*1]
   140007ae3:	test   ax,ax
   140007ae6:	je     0x140007af8
   140007ae8:	mov    WORD PTR [rcx],ax
   140007aeb:	dec    r9
   140007aee:	add    rcx,0x2
   140007af2:	sub    r8,0x1
   140007af6:	jne    0x140007ad9
   140007af8:	test   r8,r8
   140007afb:	jne    0x140007b06
   140007afd:	sub    rcx,0x2
   140007b01:	mov    ebx,0x8007007a
   140007b06:	mov    WORD PTR [rcx],r12w
   140007b0a:	test   ebx,ebx
   140007b0c:	js     0x140007b24
   140007b0e:	inc    r10d
   140007b11:	add    r14,0x8
   140007b15:	cmp    r10d,ebp
   140007b18:	jb     0x140007a67
   140007b1e:	mov    QWORD PTR [r15],rdi
   140007b21:	mov    rdi,r12
   140007b24:	test   rdi,rdi
   140007b27:	je     0x140007b3d
   140007b29:	call   QWORD PTR [rip+0x1631]        # 0x140009160
   140007b2f:	mov    r8,rdi
   140007b32:	xor    edx,edx
   140007b34:	mov    rcx,rax
   140007b37:	call   QWORD PTR [rip+0x161b]        # 0x140009158
   140007b3d:	mov    rbp,QWORD PTR [rsp+0x48]
   140007b42:	mov    eax,ebx
   140007b44:	mov    rbx,QWORD PTR [rsp+0x40]
   140007b49:	mov    rsi,QWORD PTR [rsp+0x50]
   140007b4e:	mov    rdi,QWORD PTR [rsp+0x58]
   140007b53:	add    rsp,0x20
   140007b57:	pop    r15
   140007b59:	pop    r14
   140007b5b:	pop    r12
   140007b5d:	ret    
   140007b5e:	int3   
   140007b5f:	int3   
   140007b60:	int3   
   140007b61:	int3   
   140007b62:	int3   
   140007b63:	int3   
   140007b64:	sub    rsp,0x48
   140007b68:	mov    rax,QWORD PTR [rip+0x6499]        # 0x14000e008
   140007b6f:	xor    rax,rsp
   140007b72:	mov    QWORD PTR [rsp+0x30],rax
   140007b77:	mov    QWORD PTR [rsp+0x20],rcx
   140007b7c:	mov    ecx,0x2
   140007b81:	mov    QWORD PTR [rsp+0x28],rdx
   140007b86:	lea    rdx,[rsp+0x20]
   140007b8b:	call   0x140007980
   140007b90:	mov    rcx,QWORD PTR [rsp+0x30]
   140007b95:	xor    rcx,rsp
   140007b98:	call   0x140008030
   140007b9d:	add    rsp,0x48
   140007ba1:	ret    
   140007ba2:	int3   
   140007ba3:	int3   
   140007ba4:	int3   
   140007ba5:	int3   
   140007ba6:	int3   
   140007ba7:	int3   
   140007ba8:	mov    QWORD PTR [rsp+0x10],rbx
   140007bad:	push   rdi
   140007bae:	sub    rsp,0x20
   140007bb2:	mov    rbx,QWORD PTR [rip+0x6aa7]        # 0x14000e660
   140007bb9:	test   rbx,rbx
   140007bbc:	je     0x140007bd1
   140007bbe:	mov    rcx,rbx
   140007bc1:	call   QWORD PTR [rip+0x1729]        # 0x1400092f0
   140007bc7:	call   rbx
   140007bc9:	and    QWORD PTR [rip+0x6a8f],0x0        # 0x14000e660
   140007bd1:	and    QWORD PTR [rsp+0x30],0x0
   140007bd7:	mov    rbx,QWORD PTR [rip+0x6a62]        # 0x14000e640
   140007bde:	test   rbx,rbx
   140007be1:	je     0x140007c05
   140007be3:	mov    rdi,QWORD PTR [rip+0x6a4e]        # 0x14000e638
   140007bea:	test   rdi,rdi
   140007bed:	je     0x140007c05
   140007bef:	mov    rcx,rdi
   140007bf2:	call   QWORD PTR [rip+0x16f8]        # 0x1400092f0
   140007bf8:	mov    rcx,rbx
   140007bfb:	call   rdi
   140007bfd:	and    QWORD PTR [rip+0x6a3b],0x0        # 0x14000e640
   140007c05:	mov    rcx,QWORD PTR [rip+0x6a44]        # 0x14000e650
   140007c0c:	test   rcx,rcx
   140007c0f:	je     0x140007c1f
   140007c11:	call   QWORD PTR [rip+0x1509]        # 0x140009120
   140007c17:	and    QWORD PTR [rip+0x6a31],0x0        # 0x14000e650
   140007c1f:	mov    rcx,QWORD PTR [rip+0x6a22]        # 0x14000e648
   140007c26:	test   rcx,rcx
   140007c29:	je     0x140007c82
   140007c2b:	lea    r8,[rsp+0x30]
   140007c30:	lea    rdx,[rip+0x4cb9]        # 0x14000c8f0
   140007c37:	call   0x140007b64
   140007c3c:	test   eax,eax
   140007c3e:	jne    0x140007c58
   140007c40:	mov    rcx,QWORD PTR [rsp+0x30]
   140007c45:	call   QWORD PTR [rip+0x1485]        # 0x1400090d0
   140007c4b:	mov    rcx,QWORD PTR [rip+0x69f6]        # 0x14000e648
   140007c52:	call   QWORD PTR [rip+0x1470]        # 0x1400090c8
   140007c58:	cmp    QWORD PTR [rip+0x69e8],0x0        # 0x14000e648
   140007c60:	je     0x140007c82
   140007c62:	call   QWORD PTR [rip+0x14f8]        # 0x140009160
   140007c68:	mov    r8,QWORD PTR [rip+0x69d9]        # 0x14000e648
   140007c6f:	xor    edx,edx
   140007c71:	mov    rcx,rax
   140007c74:	call   QWORD PTR [rip+0x14de]        # 0x140009158
   140007c7a:	and    QWORD PTR [rip+0x69c6],0x0        # 0x14000e648
   140007c82:	mov    rdi,QWORD PTR [rip+0x69cf]        # 0x14000e658
   140007c89:	test   rdi,rdi
   140007c8c:	je     0x140007cab
   140007c8e:	mov    rax,QWORD PTR [rdi]
   140007c91:	mov    rbx,QWORD PTR [rax+0x10]
   140007c95:	mov    rcx,rbx
   140007c98:	call   QWORD PTR [rip+0x1652]        # 0x1400092f0
   140007c9e:	mov    rcx,rdi
   140007ca1:	call   rbx
   140007ca3:	and    QWORD PTR [rip+0x69ad],0x0        # 0x14000e658
   140007cab:	mov    rcx,QWORD PTR [rip+0x69b6]        # 0x14000e668
   140007cb2:	test   rcx,rcx
   140007cb5:	je     0x140007cc5
   140007cb7:	call   QWORD PTR [rip+0x1463]        # 0x140009120
   140007cbd:	and    QWORD PTR [rip+0x69a3],0x0        # 0x14000e668
   140007cc5:	mov    rbx,QWORD PTR [rsp+0x38]
   140007cca:	add    rsp,0x20
   140007cce:	pop    rdi
   140007ccf:	ret    
   140007cd0:	int3   
   140007cd1:	int3   
   140007cd2:	int3   
   140007cd3:	int3   
   140007cd4:	int3   
   140007cd5:	int3   
   140007cd6:	int3   
   140007cd7:	int3   
   140007cd8:	jmp    0x140008326
   140007cdd:	int3   
   140007cde:	int3   
   140007cdf:	int3   
   140007ce0:	int3   
   140007ce1:	int3   
   140007ce2:	int3   
   140007ce3:	int3   
   140007ce4:	int3   
   140007ce5:	int3   
   140007ce6:	int3   
   140007ce7:	int3   
   140007ce8:	int3   
   140007ce9:	int3   
   140007cea:	int3   
   140007ceb:	int3   
   140007cec:	int3   
   140007ced:	int3   
   140007cee:	int3   
   140007cef:	int3   
   140007cf0:	sub    rsp,0x28
   140007cf4:	mov    eax,0x5a4d
   140007cf9:	cmp    WORD PTR [rip+0xffffffffffff8300],ax        # 0x140000000
   140007d00:	je     0x140007d06
   140007d02:	xor    eax,eax
   140007d04:	jmp    0x140007d55
   140007d06:	movsxd rcx,DWORD PTR [rip+0xffffffffffff832f]        # 0x14000003c
   140007d0d:	lea    rax,[rip+0xffffffffffff82ec]        # 0x140000000
   140007d14:	add    rcx,rax
   140007d17:	cmp    DWORD PTR [rcx],0x4550
   140007d1d:	jne    0x140007d02
   140007d1f:	movzx  eax,WORD PTR [rcx+0x18]
   140007d23:	cmp    eax,0x10b
   140007d28:	je     0x140007d44
   140007d2a:	cmp    eax,0x20b
   140007d2f:	jne    0x140007d02
   140007d31:	xor    eax,eax
   140007d33:	cmp    DWORD PTR [rcx+0x84],0xe
   140007d3a:	jbe    0x140007d55
   140007d3c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007d42:	jmp    0x140007d52
   140007d44:	xor    eax,eax
   140007d46:	cmp    DWORD PTR [rcx+0x74],0xe
   140007d4a:	jbe    0x140007d55
   140007d4c:	cmp    DWORD PTR [rcx+0xe8],eax
   140007d52:	setne  al
   140007d55:	mov    ecx,0x1
   140007d5a:	mov    DWORD PTR [rip+0x62f0],eax        # 0x14000e050
   140007d60:	call   0x140008408
   140007d65:	mov    ecx,eax
   140007d67:	call   QWORD PTR [rip+0x147b]        # 0x1400091e8
   140007d6d:	mov    rcx,QWORD PTR [rip+0x143c]        # 0x1400091b0
   140007d74:	or     rax,0xffffffffffffffff
   140007d78:	mov    QWORD PTR [rip+0x68f9],rax        # 0x14000e678
   140007d7f:	mov    QWORD PTR [rip+0x68fa],rax        # 0x14000e680
   140007d86:	mov    eax,DWORD PTR [rip+0x6850]        # 0x14000e5dc
   140007d8c:	mov    DWORD PTR [rcx],eax
   140007d8e:	mov    rcx,QWORD PTR [rip+0x1413]        # 0x1400091a8
   140007d95:	mov    eax,DWORD PTR [rip+0x6835]        # 0x14000e5d0
   140007d9b:	mov    DWORD PTR [rcx],eax
   140007d9d:	call   0x140004640
   140007da2:	cmp    DWORD PTR [rip+0x6257],0x0        # 0x14000e000
   140007da9:	jne    0x140007db8
   140007dab:	lea    rcx,[rip+0xffffffffffffc88e]        # 0x140004640
   140007db2:	call   QWORD PTR [rip+0x1410]        # 0x1400091c8
   140007db8:	xor    eax,eax
   140007dba:	add    rsp,0x28
   140007dbe:	ret    
   140007dbf:	int3   
   140007dc0:	int3   
   140007dc1:	int3   
   140007dc2:	int3   
   140007dc3:	int3   
   140007dc4:	int3   
   140007dc5:	int3   
   140007dc6:	int3   
   140007dc7:	int3   
   140007dc8:	int3   
   140007dc9:	int3   
   140007dca:	int3   
   140007dcb:	int3   
   140007dcc:	int3   
   140007dcd:	int3   
   140007dce:	int3   
   140007dcf:	int3   
   140007dd0:	sub    rsp,0x38
   140007dd4:	mov    eax,DWORD PTR [rip+0x67fe]        # 0x14000e5d8
   140007dda:	lea    r8,[rip+0x6267]        # 0x14000e048
   140007de1:	mov    r9d,DWORD PTR [rip+0x67ec]        # 0x14000e5d4
   140007de8:	lea    rdx,[rip+0x6251]        # 0x14000e040
   140007def:	mov    DWORD PTR [rip+0x625f],eax        # 0x14000e054
   140007df5:	lea    rcx,[rip+0x623c]        # 0x14000e038
   140007dfc:	lea    rax,[rip+0x6251]        # 0x14000e054
   140007e03:	mov    QWORD PTR [rsp+0x20],rax
   140007e08:	call   QWORD PTR [rip+0x13e2]        # 0x1400091f0
   140007e0e:	mov    DWORD PTR [rip+0x6228],eax        # 0x14000e03c
   140007e14:	add    rsp,0x38
   140007e18:	ret    
   140007e19:	int3   
   140007e1a:	int3   
   140007e1b:	int3   
   140007e1c:	int3   
   140007e1d:	int3   
   140007e1e:	int3   
   140007e1f:	int3   
   140007e20:	mov    rax,rsp
   140007e23:	mov    QWORD PTR [rax+0x8],rbx
   140007e27:	mov    QWORD PTR [rax+0x10],rsi
   140007e2b:	mov    QWORD PTR [rax+0x18],rdi
   140007e2f:	mov    QWORD PTR [rax+0x20],r12
   140007e33:	push   r14
   140007e35:	sub    rsp,0x30
   140007e39:	mov    rax,QWORD PTR gs:0x30
   140007e42:	mov    rbx,QWORD PTR [rax+0x8]
   140007e46:	xor    r14d,r14d
   140007e49:	xor    eax,eax
   140007e4b:	lock cmpxchg QWORD PTR [rip+0x6834],rbx        # 0x14000e688
   140007e54:	je     0x140007e72
   140007e56:	cmp    rax,rbx
   140007e59:	jne    0x140007e65
   140007e5b:	mov    ebx,0x1
   140007e60:	mov    r14d,ebx
   140007e63:	jmp    0x140007e77
   140007e65:	mov    ecx,0x3e8
   140007e6a:	call   QWORD PTR [rip+0x12e0]        # 0x140009150
   140007e70:	jmp    0x140007e49
   140007e72:	mov    ebx,0x1
   140007e77:	mov    eax,DWORD PTR [rip+0x6813]        # 0x14000e690
   140007e7d:	cmp    eax,ebx
   140007e7f:	jne    0x140007e8d
   140007e81:	mov    ecx,0x1f
   140007e86:	call   0x140008454
   140007e8b:	jmp    0x140007ef6
   140007e8d:	mov    eax,DWORD PTR [rip+0x67fd]        # 0x14000e690
   140007e93:	test   eax,eax
   140007e95:	jne    0x140007ef0
   140007e97:	mov    DWORD PTR [rip+0x67f3],ebx        # 0x14000e690
   140007e9d:	lea    r12,[rip+0x148c]        # 0x140009330
   140007ea4:	lea    rdi,[rip+0x146d]        # 0x140009318
   140007eab:	mov    QWORD PTR [rsp+0x28],rdi
   140007eb0:	mov    DWORD PTR [rsp+0x20],eax
   140007eb4:	cmp    rdi,r12
   140007eb7:	jae    0x140007ee2
   140007eb9:	test   eax,eax
   140007ebb:	jne    0x140007ee6
   140007ebd:	mov    rsi,QWORD PTR [rdi]
   140007ec0:	test   rsi,rsi
   140007ec3:	je     0x140007ed7
   140007ec5:	mov    rcx,rsi
   140007ec8:	mov    rax,QWORD PTR [rip+0x1421]        # 0x1400092f0
   140007ecf:	call   rax
   140007ed1:	call   rsi
   140007ed3:	mov    DWORD PTR [rsp+0x20],eax
   140007ed7:	add    rdi,0x8
   140007edb:	mov    QWORD PTR [rsp+0x28],rdi
   140007ee0:	jmp    0x140007eb4
   140007ee2:	test   eax,eax
   140007ee4:	je     0x140007ef6
   140007ee6:	mov    eax,0xff
   140007eeb:	jmp    0x140007fd7
   140007ef0:	mov    DWORD PTR [rip+0x613e],ebx        # 0x14000e034
   140007ef6:	mov    eax,DWORD PTR [rip+0x6794]        # 0x14000e690
   140007efc:	cmp    eax,ebx
   140007efe:	jne    0x140007f1d
   140007f00:	lea    rdx,[rip+0x1409]        # 0x140009310
   140007f07:	lea    rcx,[rip+0x13f2]        # 0x140009300
   140007f0e:	call   0x14000861a
   140007f13:	mov    DWORD PTR [rip+0x6773],0x2        # 0x14000e690
   140007f1d:	test   r14d,r14d
   140007f20:	jne    0x140007f2b
   140007f22:	xor    eax,eax
   140007f24:	xchg   QWORD PTR [rip+0x675d],rax        # 0x14000e688
   140007f2b:	cmp    QWORD PTR [rip+0x6765],0x0        # 0x14000e698
   140007f33:	je     0x140007f63
   140007f35:	lea    rcx,[rip+0x675c]        # 0x14000e698
   140007f3c:	call   0x1400084b0
   140007f41:	test   eax,eax
   140007f43:	je     0x140007f63
   140007f45:	mov    rbx,QWORD PTR [rip+0x674c]        # 0x14000e698
   140007f4c:	mov    rcx,rbx
   140007f4f:	mov    rax,QWORD PTR [rip+0x139a]        # 0x1400092f0
   140007f56:	call   rax
   140007f58:	xor    r8d,r8d
   140007f5b:	lea    edx,[r8+0x2]
   140007f5f:	xor    ecx,ecx
   140007f61:	call   rbx
   140007f63:	mov    r8,QWORD PTR [rip+0x60de]        # 0x14000e048
   140007f6a:	mov    rdx,QWORD PTR [rip+0x60cf]        # 0x14000e040
   140007f71:	mov    ecx,DWORD PTR [rip+0x60c1]        # 0x14000e038
   140007f77:	call   0x1400020d4
   140007f7c:	mov    DWORD PTR [rip+0x60ae],eax        # 0x14000e030
   140007f82:	cmp    DWORD PTR [rip+0x60c7],0x0        # 0x14000e050
   140007f89:	jne    0x140007f93
   140007f8b:	mov    ecx,eax
   140007f8d:	call   QWORD PTR [rip+0x12dd]        # 0x140009270
   140007f93:	cmp    DWORD PTR [rip+0x609a],0x0        # 0x14000e034
   140007f9a:	jne    0x140007fa8
   140007f9c:	call   QWORD PTR [rip+0x122e]        # 0x1400091d0
   140007fa2:	mov    eax,DWORD PTR [rip+0x6088]        # 0x14000e030
   140007fa8:	jmp    0x140007fd7
   140007faa:	mov    DWORD PTR [rip+0x6080],eax        # 0x14000e030
   140007fb0:	cmp    DWORD PTR [rip+0x6099],0x0        # 0x14000e050
   140007fb7:	jne    0x140007fc2
   140007fb9:	mov    ecx,eax
   140007fbb:	call   QWORD PTR [rip+0x1217]        # 0x1400091d8
   140007fc1:	int3   
   140007fc2:	cmp    DWORD PTR [rip+0x606b],0x0        # 0x14000e034
   140007fc9:	jne    0x140007fd7
   140007fcb:	call   QWORD PTR [rip+0x11ff]        # 0x1400091d0
   140007fd1:	mov    eax,DWORD PTR [rip+0x6059]        # 0x14000e030
   140007fd7:	mov    rbx,QWORD PTR [rsp+0x40]
   140007fdc:	mov    rsi,QWORD PTR [rsp+0x48]
   140007fe1:	mov    rdi,QWORD PTR [rsp+0x50]
   140007fe6:	mov    r12,QWORD PTR [rsp+0x58]
   140007feb:	add    rsp,0x30
   140007fef:	pop    r14
   140007ff1:	ret    
   140007ff2:	int3   
   140007ff3:	int3   
   140007ff4:	int3   
   140007ff5:	int3   
   140007ff6:	int3   
   140007ff7:	int3   
   140007ff8:	int3   
   140007ff9:	int3   
   140007ffa:	int3   
   140007ffb:	int3   
   140007ffc:	int3   
   140007ffd:	int3   
   140007ffe:	int3   
   140007fff:	int3   
   140008000:	sub    rsp,0x28
   140008004:	call   0x140008544
   140008009:	add    rsp,0x28
   14000800d:	jmp    0x140007e20
   140008012:	int3   
   140008013:	int3   
   140008014:	int3   
   140008015:	int3   
   140008016:	int3   
   140008017:	int3   
   140008018:	int3   
   140008019:	int3   
   14000801a:	int3   
   14000801b:	int3   
   14000801c:	int3   
   14000801d:	int3   
   14000801e:	int3   
   14000801f:	int3   
   140008020:	int3   
   140008021:	int3   
   140008022:	int3   
   140008023:	int3   
   140008024:	int3   
   140008025:	int3   
   140008026:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008030:	cmp    rcx,QWORD PTR [rip+0x5fd1]        # 0x14000e008
   140008037:	jne    0x140008049
   140008039:	rol    rcx,0x10
   14000803d:	test   cx,0xffff
   140008042:	jne    0x140008045
   140008044:	ret    
   140008045:	ror    rcx,0x10
   140008049:	jmp    0x1400080b0
   14000804e:	int3   
   14000804f:	int3   
   140008050:	int3   
   140008051:	int3   
   140008052:	int3   
   140008053:	int3   
   140008054:	int3   
   140008055:	int3   
   140008056:	int3   
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	jmp    QWORD PTR [rip+0x11f2]        # 0x140009258
   140008066:	int3   
   140008067:	int3   
   140008068:	int3   
   140008069:	int3   
   14000806a:	int3   
   14000806b:	int3   
   14000806c:	rex push rbx
   14000806e:	sub    rsp,0x20
   140008072:	mov    rbx,rcx
   140008075:	xor    ecx,ecx
   140008077:	call   QWORD PTR [rip+0x1013]        # 0x140009090
   14000807d:	mov    rcx,rbx
   140008080:	call   QWORD PTR [rip+0x1012]        # 0x140009098
   140008086:	call   QWORD PTR [rip+0xffc]        # 0x140009088
   14000808c:	mov    rcx,rax
   14000808f:	mov    edx,0xc0000409
   140008094:	add    rsp,0x20
   140008098:	pop    rbx
   140008099:	rex.W jmp QWORD PTR [rip+0xfe0]        # 0x140009080
   1400080a0:	int3   
   1400080a1:	int3   
   1400080a2:	int3   
   1400080a3:	int3   
   1400080a4:	int3   
   1400080a5:	int3   
   1400080a6:	int3   
   1400080a7:	int3   
   1400080a8:	int3   
   1400080a9:	int3   
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	int3   
   1400080ad:	int3   
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400080b5:	sub    rsp,0x88
   1400080bc:	lea    rcx,[rip+0x603d]        # 0x14000e100
   1400080c3:	call   QWORD PTR [rip+0xfe7]        # 0x1400090b0
   1400080c9:	mov    rax,QWORD PTR [rip+0x6128]        # 0x14000e1f8
   1400080d0:	mov    QWORD PTR [rsp+0x48],rax
   1400080d5:	xor    r8d,r8d
   1400080d8:	lea    rdx,[rsp+0x50]
   1400080dd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400080e2:	call   QWORD PTR [rip+0xfc0]        # 0x1400090a8
   1400080e8:	mov    QWORD PTR [rsp+0x40],rax
   1400080ed:	cmp    QWORD PTR [rsp+0x40],0x0
   1400080f3:	je     0x140008137
   1400080f5:	mov    QWORD PTR [rsp+0x38],0x0
   1400080fe:	lea    rax,[rsp+0x58]
   140008103:	mov    QWORD PTR [rsp+0x30],rax
   140008108:	lea    rax,[rsp+0x60]
   14000810d:	mov    QWORD PTR [rsp+0x28],rax
   140008112:	lea    rax,[rip+0x5fe7]        # 0x14000e100
   140008119:	mov    QWORD PTR [rsp+0x20],rax
   14000811e:	mov    r9,QWORD PTR [rsp+0x40]
   140008123:	mov    r8,QWORD PTR [rsp+0x48]
   140008128:	mov    rdx,QWORD PTR [rsp+0x50]
   14000812d:	xor    ecx,ecx
   14000812f:	call   QWORD PTR [rip+0xf6b]        # 0x1400090a0
   140008135:	jmp    0x14000815a
   140008137:	mov    rax,QWORD PTR [rip+0x605a]        # 0x14000e198
   14000813e:	mov    rax,QWORD PTR [rax]
   140008141:	mov    QWORD PTR [rip+0x60b0],rax        # 0x14000e1f8
   140008148:	mov    rax,QWORD PTR [rip+0x6049]        # 0x14000e198
   14000814f:	add    rax,0x8
   140008153:	mov    QWORD PTR [rip+0x603e],rax        # 0x14000e198
   14000815a:	mov    rax,QWORD PTR [rip+0x6097]        # 0x14000e1f8
   140008161:	mov    QWORD PTR [rip+0x5f08],rax        # 0x14000e070
   140008168:	mov    rax,QWORD PTR [rsp+0x90]
   140008170:	mov    QWORD PTR [rip+0x6009],rax        # 0x14000e180
   140008177:	mov    DWORD PTR [rip+0x5edf],0xc0000409        # 0x14000e060
   140008181:	mov    DWORD PTR [rip+0x5ed9],0x1        # 0x14000e064
   14000818b:	mov    DWORD PTR [rip+0x5ee3],0x3        # 0x14000e078
   140008195:	mov    eax,0x8
   14000819a:	imul   rax,rax,0x0
   14000819e:	lea    rcx,[rip+0x5edb]        # 0x14000e080
   1400081a5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400081ad:	mov    eax,0x8
   1400081b2:	imul   rax,rax,0x1
   1400081b6:	lea    rcx,[rip+0x5ec3]        # 0x14000e080
   1400081bd:	mov    rdx,QWORD PTR [rip+0x5e44]        # 0x14000e008
   1400081c4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400081c8:	mov    eax,0x8
   1400081cd:	imul   rax,rax,0x2
   1400081d1:	lea    rcx,[rip+0x5ea8]        # 0x14000e080
   1400081d8:	mov    rdx,QWORD PTR [rip+0x5e31]        # 0x14000e010
   1400081df:	mov    QWORD PTR [rcx+rax*1],rdx
   1400081e3:	mov    eax,0x8
   1400081e8:	imul   rax,rax,0x0
   1400081ec:	mov    rcx,QWORD PTR [rip+0x5e15]        # 0x14000e008
   1400081f3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400081f8:	mov    eax,0x8
   1400081fd:	imul   rax,rax,0x1
   140008201:	mov    rcx,QWORD PTR [rip+0x5e08]        # 0x14000e010
   140008208:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000820d:	lea    rcx,[rip+0x119c]        # 0x1400093b0
   140008214:	call   0x14000806c
   140008219:	add    rsp,0x88
   140008220:	ret    
   140008221:	int3   
   140008222:	int3   
   140008223:	int3   
   140008224:	int3   
   140008225:	int3   
   140008226:	int3   
   140008227:	int3   
   140008228:	sub    rsp,0x78
   14000822c:	lea    rcx,[rip+0x5ecd]        # 0x14000e100
   140008233:	call   QWORD PTR [rip+0xe77]        # 0x1400090b0
   140008239:	mov    rax,QWORD PTR [rip+0x5fb8]        # 0x14000e1f8
   140008240:	mov    QWORD PTR [rsp+0x48],rax
   140008245:	xor    r8d,r8d
   140008248:	lea    rdx,[rsp+0x50]
   14000824d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008252:	call   QWORD PTR [rip+0xe50]        # 0x1400090a8
   140008258:	mov    QWORD PTR [rsp+0x40],rax
   14000825d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008263:	je     0x1400082a7
   140008265:	mov    QWORD PTR [rsp+0x38],0x0
   14000826e:	lea    rax,[rsp+0x58]
   140008273:	mov    QWORD PTR [rsp+0x30],rax
   140008278:	lea    rax,[rsp+0x60]
   14000827d:	mov    QWORD PTR [rsp+0x28],rax
   140008282:	lea    rax,[rip+0x5e77]        # 0x14000e100
   140008289:	mov    QWORD PTR [rsp+0x20],rax
   14000828e:	mov    r9,QWORD PTR [rsp+0x40]
   140008293:	mov    r8,QWORD PTR [rsp+0x48]
   140008298:	mov    rdx,QWORD PTR [rsp+0x50]
   14000829d:	xor    ecx,ecx
   14000829f:	call   QWORD PTR [rip+0xdfb]        # 0x1400090a0
   1400082a5:	jmp    0x1400082ca
   1400082a7:	mov    rax,QWORD PTR [rip+0x5eea]        # 0x14000e198
   1400082ae:	mov    rax,QWORD PTR [rax]
   1400082b1:	mov    QWORD PTR [rip+0x5f40],rax        # 0x14000e1f8
   1400082b8:	mov    rax,QWORD PTR [rip+0x5ed9]        # 0x14000e198
   1400082bf:	add    rax,0x8
   1400082c3:	mov    QWORD PTR [rip+0x5ece],rax        # 0x14000e198
   1400082ca:	mov    rax,QWORD PTR [rip+0x5f27]        # 0x14000e1f8
   1400082d1:	mov    QWORD PTR [rip+0x5d98],rax        # 0x14000e070
   1400082d8:	mov    DWORD PTR [rip+0x5d7e],0xc0000409        # 0x14000e060
   1400082e2:	mov    DWORD PTR [rip+0x5d78],0x1        # 0x14000e064
   1400082ec:	mov    DWORD PTR [rip+0x5d82],0x1        # 0x14000e078
   1400082f6:	mov    eax,0x8
   1400082fb:	imul   rax,rax,0x0
   1400082ff:	lea    rcx,[rip+0x5d7a]        # 0x14000e080
   140008306:	mov    QWORD PTR [rcx+rax*1],0x8
   14000830e:	lea    rcx,[rip+0x109b]        # 0x1400093b0
   140008315:	call   0x14000806c
   14000831a:	add    rsp,0x78
   14000831e:	ret    
   14000831f:	int3   
   140008320:	int3   
   140008321:	int3   
   140008322:	int3   
   140008323:	int3   
   140008324:	int3   
   140008325:	int3   
   140008326:	jmp    QWORD PTR [rip+0xefc]        # 0x140009228
   14000832c:	int3   
   14000832d:	int3   
   14000832e:	int3   
   14000832f:	int3   
   140008330:	int3   
   140008331:	int3   
   140008332:	jmp    QWORD PTR [rip+0xee8]        # 0x140009220
   140008338:	int3   
   140008339:	int3   
   14000833a:	int3   
   14000833b:	int3   
   14000833c:	int3   
   14000833d:	int3   
   14000833e:	int3   
   14000833f:	int3   
   140008340:	sub    rsp,0x28
   140008344:	mov    rax,QWORD PTR [rcx]
   140008347:	cmp    DWORD PTR [rax],0xe06d7363
   14000834d:	jne    0x140008372
   14000834f:	cmp    DWORD PTR [rax+0x18],0x4
   140008353:	jne    0x140008372
   140008355:	mov    ecx,DWORD PTR [rax+0x20]
   140008358:	lea    eax,[rcx-0x19930520]
   14000835e:	cmp    eax,0x2
   140008361:	jbe    0x14000836b
   140008363:	cmp    ecx,0x1994000
   140008369:	jne    0x140008372
   14000836b:	call   QWORD PTR [rip+0xe2f]        # 0x1400091a0
   140008371:	int3   
   140008372:	xor    eax,eax
   140008374:	add    rsp,0x28
   140008378:	ret    
   140008379:	int3   
   14000837a:	int3   
   14000837b:	int3   
   14000837c:	int3   
   14000837d:	int3   
   14000837e:	int3   
   14000837f:	int3   
   140008380:	sub    rsp,0x28
   140008384:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140008340
   14000838b:	call   QWORD PTR [rip+0xcff]        # 0x140009090
   140008391:	xor    eax,eax
   140008393:	add    rsp,0x28
   140008397:	ret    
   140008398:	int3   
   140008399:	int3   
   14000839a:	int3   
   14000839b:	int3   
   14000839c:	int3   
   14000839d:	int3   
   14000839e:	jmp    QWORD PTR [rip+0xe5c]        # 0x140009200
   1400083a4:	int3   
   1400083a5:	int3   
   1400083a6:	int3   
   1400083a7:	int3   
   1400083a8:	int3   
   1400083a9:	int3   
   1400083aa:	int3   
   1400083ab:	int3   
   1400083ac:	sub    rsp,0x18
   1400083b0:	xor    edx,edx
   1400083b2:	lea    rax,[rcx-0x1]
   1400083b6:	cmp    rax,0xfffffffffffffffd
   1400083ba:	ja     0x1400083f8
   1400083bc:	mov    eax,0x5a4d
   1400083c1:	cmp    WORD PTR [rcx],ax
   1400083c4:	jne    0x1400083f0
   1400083c6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400083c9:	jl     0x1400083f0
   1400083cb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400083d2:	jae    0x1400083f0
   1400083d4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400083d8:	add    rax,rcx
   1400083db:	mov    QWORD PTR [rsp],rax
   1400083df:	cmp    DWORD PTR [rax],0x4550
   1400083e5:	cmovne rax,rdx
   1400083e9:	mov    rdx,rax
   1400083ec:	mov    QWORD PTR [rsp],rax
   1400083f0:	jmp    0x1400083f8
   1400083f2:	xor    edx,edx
   1400083f4:	mov    QWORD PTR [rsp],rdx
   1400083f8:	mov    rax,rdx
   1400083fb:	add    rsp,0x18
   1400083ff:	ret    
   140008400:	int3   
   140008401:	int3   
   140008402:	int3   
   140008403:	int3   
   140008404:	int3   
   140008405:	int3   
   140008406:	int3   
   140008407:	int3   
   140008408:	rex push rbx
   14000840a:	sub    rsp,0x20
   14000840e:	mov    ebx,ecx
   140008410:	xor    ecx,ecx
   140008412:	call   QWORD PTR [rip+0xc60]        # 0x140009078
   140008418:	test   rax,rax
   14000841b:	je     0x140008445
   14000841d:	mov    rcx,rax
   140008420:	call   0x1400083ac
   140008425:	test   rax,rax
   140008428:	je     0x140008445
   14000842a:	mov    ecx,0x2
   14000842f:	cmp    WORD PTR [rax+0x5c],cx
   140008433:	jne    0x140008439
   140008435:	mov    eax,ecx
   140008437:	jmp    0x140008447
   140008439:	cmp    WORD PTR [rax+0x5c],0x3
   14000843e:	mov    eax,0x1
   140008443:	je     0x140008447
   140008445:	mov    eax,ebx
   140008447:	add    rsp,0x20
   14000844b:	pop    rbx
   14000844c:	ret    
   14000844d:	int3   
   14000844e:	int3   
   14000844f:	int3   
   140008450:	int3   
   140008451:	int3   
   140008452:	int3   
   140008453:	int3   
   140008454:	jmp    QWORD PTR [rip+0xd9e]        # 0x1400091f8
   14000845a:	int3   
   14000845b:	int3   
   14000845c:	int3   
   14000845d:	int3   
   14000845e:	int3   
   14000845f:	int3   
   140008460:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008464:	xor    r9d,r9d
   140008467:	add    r8,rcx
   14000846a:	mov    r10,rdx
   14000846d:	movzx  eax,WORD PTR [r8+0x14]
   140008472:	movzx  r11d,WORD PTR [r8+0x6]
   140008477:	add    rax,0x18
   14000847b:	add    rax,r8
   14000847e:	test   r11d,r11d
   140008481:	je     0x1400084a1
   140008483:	mov    edx,DWORD PTR [rax+0xc]
   140008486:	cmp    r10,rdx
   140008489:	jb     0x140008495
   14000848b:	mov    ecx,DWORD PTR [rax+0x8]
   14000848e:	add    ecx,edx
   140008490:	cmp    r10,rcx
   140008493:	jb     0x1400084a3
   140008495:	inc    r9d
   140008498:	add    rax,0x28
   14000849c:	cmp    r9d,r11d
   14000849f:	jb     0x140008483
   1400084a1:	xor    eax,eax
   1400084a3:	ret    
   1400084a4:	int3   
   1400084a5:	int3   
   1400084a6:	int3   
   1400084a7:	int3   
   1400084a8:	int3   
   1400084a9:	int3   
   1400084aa:	int3   
   1400084ab:	int3   
   1400084ac:	int3   
   1400084ad:	int3   
   1400084ae:	int3   
   1400084af:	int3   
   1400084b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400084b5:	push   rdi
   1400084b6:	sub    rsp,0x20
   1400084ba:	mov    rbx,rcx
   1400084bd:	lea    rdi,[rip+0xffffffffffff7b3c]        # 0x140000000
   1400084c4:	mov    rcx,rdi
   1400084c7:	call   0x140008510
   1400084cc:	test   eax,eax
   1400084ce:	je     0x1400084f2
   1400084d0:	sub    rbx,rdi
   1400084d3:	mov    rdx,rbx
   1400084d6:	mov    rcx,rdi
   1400084d9:	call   0x140008460
   1400084de:	test   rax,rax
   1400084e1:	je     0x1400084f2
   1400084e3:	mov    eax,DWORD PTR [rax+0x24]
   1400084e6:	shr    eax,0x1f
   1400084e9:	not    eax
   1400084eb:	and    eax,0x1
   1400084ee:	jmp    0x1400084f2
   1400084f0:	xor    eax,eax
   1400084f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084f7:	add    rsp,0x20
   1400084fb:	pop    rdi
   1400084fc:	ret    
   1400084fd:	int3   
   1400084fe:	int3   
   1400084ff:	int3   
   140008500:	int3   
   140008501:	int3   
   140008502:	int3   
   140008503:	int3   
   140008504:	int3   
   140008505:	int3   
   140008506:	int3   
   140008507:	int3   
   140008508:	int3   
   140008509:	int3   
   14000850a:	int3   
   14000850b:	int3   
   14000850c:	int3   
   14000850d:	int3   
   14000850e:	int3   
   14000850f:	int3   
   140008510:	mov    rax,rcx
   140008513:	mov    ecx,0x5a4d
   140008518:	cmp    WORD PTR [rax],cx
   14000851b:	je     0x140008520
   14000851d:	xor    eax,eax
   14000851f:	ret    
   140008520:	movsxd rcx,DWORD PTR [rax+0x3c]
   140008524:	add    rcx,rax
   140008527:	xor    eax,eax
   140008529:	cmp    DWORD PTR [rcx],0x4550
   14000852f:	jne    0x14000853d
   140008531:	mov    edx,0x20b
   140008536:	cmp    WORD PTR [rcx+0x18],dx
   14000853a:	sete   al
   14000853d:	ret    
   14000853e:	int3   
   14000853f:	int3   
   140008540:	int3   
   140008541:	int3   
   140008542:	int3   
   140008543:	int3   
   140008544:	mov    QWORD PTR [rsp+0x20],rbx
   140008549:	push   rbp
   14000854a:	mov    rbp,rsp
   14000854d:	sub    rsp,0x20
   140008551:	and    QWORD PTR [rbp+0x18],0x0
   140008556:	movabs rbx,0x2b992ddfa232
   140008560:	mov    rax,QWORD PTR [rip+0x5aa1]        # 0x14000e008
   140008567:	cmp    rax,rbx
   14000856a:	jne    0x1400085ff
   140008570:	lea    rcx,[rbp+0x18]
   140008574:	call   QWORD PTR [rip+0xade]        # 0x140009058
   14000857a:	mov    rax,QWORD PTR [rbp+0x18]
   14000857e:	mov    QWORD PTR [rbp+0x10],rax
   140008582:	call   QWORD PTR [rip+0xae0]        # 0x140009068
   140008588:	mov    eax,eax
   14000858a:	xor    QWORD PTR [rbp+0x10],rax
   14000858e:	call   QWORD PTR [rip+0xabc]        # 0x140009050
   140008594:	mov    eax,eax
   140008596:	xor    QWORD PTR [rbp+0x10],rax
   14000859a:	call   QWORD PTR [rip+0xac0]        # 0x140009060
   1400085a0:	mov    eax,eax
   1400085a2:	shl    rax,0x18
   1400085a6:	xor    QWORD PTR [rbp+0x10],rax
   1400085aa:	call   QWORD PTR [rip+0xab0]        # 0x140009060
   1400085b0:	mov    eax,eax
   1400085b2:	lea    rcx,[rbp+0x10]
   1400085b6:	xor    rax,QWORD PTR [rbp+0x10]
   1400085ba:	xor    rax,rcx
   1400085bd:	lea    rcx,[rbp+0x20]
   1400085c1:	mov    QWORD PTR [rbp+0x10],rax
   1400085c5:	call   QWORD PTR [rip+0xaa5]        # 0x140009070
   1400085cb:	mov    eax,DWORD PTR [rbp+0x20]
   1400085ce:	movabs rcx,0xffffffffffff
   1400085d8:	shl    rax,0x20
   1400085dc:	xor    rax,QWORD PTR [rbp+0x20]
   1400085e0:	xor    rax,QWORD PTR [rbp+0x10]
   1400085e4:	and    rax,rcx
   1400085e7:	movabs rcx,0x2b992ddfa233
   1400085f1:	cmp    rax,rbx
   1400085f4:	cmove  rax,rcx
   1400085f8:	mov    QWORD PTR [rip+0x5a09],rax        # 0x14000e008
   1400085ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140008604:	not    rax
   140008607:	mov    QWORD PTR [rip+0x5a02],rax        # 0x14000e010
   14000860e:	add    rsp,0x20
   140008612:	pop    rbp
   140008613:	ret    
   140008614:	int3   
   140008615:	int3   
   140008616:	int3   
   140008617:	int3   
   140008618:	int3   
   140008619:	int3   
   14000861a:	jmp    QWORD PTR [rip+0xba0]        # 0x1400091c0
   140008620:	int3   
   140008621:	int3   
   140008622:	int3   
   140008623:	int3   
   140008624:	int3   
   140008625:	int3   
   140008626:	jmp    QWORD PTR [rip+0xb8c]        # 0x1400091b8
   14000862c:	int3   
   14000862d:	int3   
   14000862e:	int3   
   14000862f:	int3   
   140008630:	int3   
   140008631:	int3   
   140008632:	int3   
   140008633:	int3   
   140008634:	int3   
   140008635:	int3   
   140008636:	int3   
   140008637:	int3   
   140008638:	rex push rbx
   14000863a:	sub    rsp,0x20
   14000863e:	mov    ebx,ecx
   140008640:	call   0x1400086b4
   140008645:	lea    rdx,[rbx+rbx*2]
   140008649:	shl    rdx,0x4
   14000864d:	add    rax,rdx
   140008650:	add    rsp,0x20
   140008654:	pop    rbx
   140008655:	ret    
   140008656:	int3   
   140008657:	int3   
   140008658:	int3   
   140008659:	int3   
   14000865a:	int3   
   14000865b:	int3   
   14000865c:	mov    QWORD PTR [rsp+0x8],rbx
   140008661:	push   rdi
   140008662:	sub    rsp,0x20
   140008666:	mov    rdi,rcx
   140008669:	jmp    0x14000867a
   14000866b:	mov    rcx,rdi
   14000866e:	call   0x1400086c0
   140008673:	test   eax,eax
   140008675:	je     0x140008687
   140008677:	mov    rcx,rdi
   14000867a:	call   0x140008332
   14000867f:	mov    rbx,rax
   140008682:	test   rax,rax
   140008685:	je     0x14000866b
   140008687:	mov    rax,rbx
   14000868a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000868f:	add    rsp,0x20
   140008693:	pop    rdi
   140008694:	ret    
   140008695:	int3   
   140008696:	int3   
   140008697:	int3   
   140008698:	int3   
   140008699:	int3   
   14000869a:	int3   
   14000869b:	int3   
   14000869c:	jmp    0x14000865c
   1400086a1:	int3   
   1400086a2:	int3   
   1400086a3:	int3   
   1400086a4:	int3   
   1400086a5:	int3   
   1400086a6:	int3   
   1400086a7:	int3   
   1400086a8:	jmp    0x140007cd8
   1400086ad:	int3   
   1400086ae:	int3   
   1400086af:	int3   
   1400086b0:	int3   
   1400086b1:	int3   
   1400086b2:	int3   
   1400086b3:	int3   
   1400086b4:	jmp    QWORD PTR [rip+0xb7e]        # 0x140009238
   1400086ba:	int3   
   1400086bb:	int3   
   1400086bc:	int3   
   1400086bd:	int3   
   1400086be:	int3   
   1400086bf:	int3   
   1400086c0:	jmp    QWORD PTR [rip+0xba2]        # 0x140009268
   1400086c6:	int3   
   1400086c7:	int3   
   1400086c8:	int3   
   1400086c9:	int3   
   1400086ca:	int3   
   1400086cb:	int3   
   1400086cc:	sub    rsp,0x28
   1400086d0:	mov    r8,QWORD PTR [r9+0x38]
   1400086d4:	mov    rcx,rdx
   1400086d7:	mov    rdx,r9
   1400086da:	call   0x1400086f0
   1400086df:	mov    eax,0x1
   1400086e4:	add    rsp,0x28
   1400086e8:	ret    
   1400086e9:	int3   
   1400086ea:	int3   
   1400086eb:	int3   
   1400086ec:	int3   
   1400086ed:	int3   
   1400086ee:	int3   
   1400086ef:	int3   
   1400086f0:	rex push rbx
   1400086f2:	sub    rsp,0x20
   1400086f6:	mov    r11d,DWORD PTR [r8]
   1400086f9:	mov    rbx,rdx
   1400086fc:	and    r11d,0xfffffff8
   140008700:	mov    r9,rcx
   140008703:	test   BYTE PTR [r8],0x4
   140008707:	mov    r10,rcx
   14000870a:	je     0x14000871f
   14000870c:	mov    eax,DWORD PTR [r8+0x8]
   140008710:	movsxd r10,DWORD PTR [r8+0x4]
   140008714:	neg    eax
   140008716:	add    r10,rcx
   140008719:	movsxd rcx,eax
   14000871c:	and    r10,rcx
   14000871f:	movsxd rax,r11d
   140008722:	mov    rdx,QWORD PTR [rax+r10*1]
   140008726:	mov    rax,QWORD PTR [rbx+0x10]
   14000872a:	mov    ecx,DWORD PTR [rax+0x8]
   14000872d:	add    rcx,QWORD PTR [rbx+0x8]
   140008731:	test   BYTE PTR [rcx+0x3],0xf
   140008735:	je     0x140008743
   140008737:	movzx  eax,BYTE PTR [rcx+0x3]
   14000873b:	and    eax,0xfffffff0
   14000873e:	cdqe   
   140008740:	add    r9,rax
   140008743:	xor    r9,rdx
   140008746:	mov    rcx,r9
   140008749:	add    rsp,0x20
   14000874d:	pop    rbx
   14000874e:	jmp    0x140008030
   140008753:	int3   
   140008754:	int3   
   140008755:	int3   
   140008756:	int3   
   140008757:	int3   
   140008758:	int3   
   140008759:	int3   
   14000875a:	int3   
   14000875b:	int3   
   14000875c:	mov    rax,rsp
   14000875f:	mov    QWORD PTR [rax+0x8],rbx
   140008763:	mov    QWORD PTR [rax+0x10],rbp
   140008767:	mov    QWORD PTR [rax+0x18],rsi
   14000876b:	mov    QWORD PTR [rax+0x20],rdi
   14000876f:	push   r14
   140008771:	sub    rsp,0x20
   140008775:	mov    r10,QWORD PTR [r9+0x38]
   140008779:	mov    rsi,rdx
   14000877c:	mov    r14,r8
   14000877f:	mov    rbp,rcx
   140008782:	mov    rdx,r9
   140008785:	mov    rcx,rsi
   140008788:	mov    rdi,r9
   14000878b:	mov    ebx,DWORD PTR [r10]
   14000878e:	shl    rbx,0x4
   140008792:	add    rbx,r10
   140008795:	lea    r8,[rbx+0x4]
   140008799:	call   0x1400086f0
   14000879e:	mov    r11d,DWORD PTR [rbx+0x4]
   1400087a2:	mov    edx,0x1
   1400087a7:	mov    r10d,DWORD PTR [rbp+0x4]
   1400087ab:	mov    eax,r11d
   1400087ae:	and    eax,edx
   1400087b0:	and    r11d,0x2
   1400087b4:	and    r10b,0x66
   1400087b8:	cmove  r11d,eax
   1400087bc:	test   r11d,r11d
   1400087bf:	je     0x1400087d5
   1400087c1:	mov    r9,rdi
   1400087c4:	mov    r8,r14
   1400087c7:	mov    rdx,rsi
   1400087ca:	mov    rcx,rbp
   1400087cd:	call   QWORD PTR [rip+0x9e5]        # 0x1400091b8
   1400087d3:	mov    edx,eax
   1400087d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400087da:	mov    eax,edx
   1400087dc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400087e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400087e6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400087eb:	add    rsp,0x20
   1400087ef:	pop    r14
   1400087f1:	ret    
   1400087f2:	int3   
   1400087f3:	int3   
   1400087f4:	int3   
   1400087f5:	int3   
   1400087f6:	int3   
   1400087f7:	int3   
   1400087f8:	int3   
   1400087f9:	int3   
   1400087fa:	int3   
   1400087fb:	int3   
   1400087fc:	int3   
   1400087fd:	int3   
   1400087fe:	int3   
   1400087ff:	int3   
   140008800:	int3   
   140008801:	int3   
   140008802:	int3   
   140008803:	int3   
   140008804:	int3   
   140008805:	int3   
   140008806:	jmp    QWORD PTR [rip+0x9d4]        # 0x1400091e0
   14000880c:	int3   
   14000880d:	int3   
   14000880e:	int3   
   14000880f:	int3   
   140008810:	int3   
   140008811:	int3   
   140008812:	jmp    QWORD PTR [rip+0xa68]        # 0x140009280
   140008818:	int3   
   140008819:	int3   
   14000881a:	int3   
   14000881b:	int3   
   14000881c:	int3   
   14000881d:	int3   
   14000881e:	int3   
   14000881f:	int3   
   140008820:	int3   
   140008821:	int3   
   140008822:	int3   
   140008823:	int3   
   140008824:	int3   
   140008825:	int3   
   140008826:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008830:	jmp    rax
   140008832:	int3   
   140008833:	int3   
   140008834:	int3   
   140008835:	int3   
   140008836:	int3   
   140008837:	int3   
   140008838:	int3   
   140008839:	int3   
   14000883a:	int3   
   14000883b:	int3   
   14000883c:	int3   
   14000883d:	int3   
   14000883e:	int3   
   14000883f:	int3   
   140008840:	int3   
   140008841:	int3   
   140008842:	int3   
   140008843:	int3   
   140008844:	int3   
   140008845:	int3   
   140008846:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008850:	sub    rsp,0x10
   140008854:	mov    QWORD PTR [rsp],r10
   140008858:	mov    QWORD PTR [rsp+0x8],r11
   14000885d:	xor    r11,r11
   140008860:	lea    r10,[rsp+0x18]
   140008865:	sub    r10,rax
   140008868:	cmovb  r10,r11
   14000886c:	mov    r11,QWORD PTR gs:0x10
   140008875:	cmp    r10,r11
   140008878:	jae    0x14000888f
   14000887a:	and    r10w,0xf000
   140008880:	lea    r11,[r11-0x1000]
   140008887:	test   BYTE PTR [r11],r11b
   14000888a:	cmp    r10,r11
   14000888d:	jne    0x140008880
   14000888f:	mov    r10,QWORD PTR [rsp]
   140008893:	mov    r11,QWORD PTR [rsp+0x8]
   140008898:	add    rsp,0x10
   14000889c:	ret    
   14000889d:	int3   
   14000889e:	int3   
   14000889f:	int3   
   1400088a0:	int3   
   1400088a1:	int3   
   1400088a2:	int3   
   1400088a3:	int3   
   1400088a4:	int3   
   1400088a5:	int3   
   1400088a6:	rex push rbp
   1400088a8:	sub    rsp,0x40
   1400088ac:	mov    rbp,rdx
   1400088af:	mov    rcx,QWORD PTR [rbp+0x70]
   1400088b3:	call   0x1400086a8
   1400088b8:	xor    eax,eax
   1400088ba:	and    QWORD PTR [rbp+0x70],rax
   1400088be:	add    rsp,0x40
   1400088c2:	pop    rbp
   1400088c3:	ret    
   1400088c4:	int3   
   1400088c5:	rex push rbp
   1400088c7:	sub    rsp,0x40
   1400088cb:	mov    rbp,rdx
   1400088ce:	mov    rcx,QWORD PTR [rbp+0x48]
   1400088d2:	cmp    rcx,0xffffffffffffffff
   1400088d6:	je     0x1400088e3
   1400088d8:	call   QWORD PTR [rip+0x802]        # 0x1400090e0
   1400088de:	or     QWORD PTR [rbp+0x48],0xffffffffffffffff
   1400088e3:	add    rsp,0x40
   1400088e7:	pop    rbp
   1400088e8:	ret    
   1400088e9:	int3   
   1400088ea:	int3   
   1400088eb:	int3   
   1400088ec:	int3   
   1400088ed:	int3   
   1400088ee:	int3   
   1400088ef:	int3   
   1400088f0:	rex push rbp
   1400088f2:	sub    rsp,0x20
   1400088f6:	mov    rbp,rdx
   1400088f9:	mov    rax,QWORD PTR [rcx]
   1400088fc:	mov    rdx,rcx
   1400088ff:	mov    ecx,DWORD PTR [rax]
   140008901:	call   0x14000839e
   140008906:	nop
   140008907:	add    rsp,0x20
   14000890b:	pop    rbp
   14000890c:	ret    
   14000890d:	int3   
   14000890e:	int3   
   14000890f:	int3   
   140008910:	int3   
   140008911:	int3   
   140008912:	int3   
   140008913:	int3   
   140008914:	int3   
   140008915:	int3   
   140008916:	int3   
   140008917:	int3   
   140008918:	int3   
   140008919:	int3   
   14000891a:	int3   
   14000891b:	int3   
   14000891c:	int3   
   14000891d:	int3   
   14000891e:	int3   
   14000891f:	int3   
   140008920:	rex push rbp
   140008922:	sub    rsp,0x20
   140008926:	mov    rbp,rdx
   140008929:	mov    rax,QWORD PTR [rcx]
   14000892c:	xor    ecx,ecx
   14000892e:	cmp    DWORD PTR [rax],0xc0000005
   140008934:	sete   cl
   140008937:	mov    eax,ecx
   140008939:	add    rsp,0x20
   14000893d:	pop    rbp
   14000893e:	ret    
   14000893f:	int3   

Disassembly of section .rdata:

0000000140009000 <.rdata>:
   140009000:	cld    
   140009001:	fiadd  DWORD PTR [rax]
   140009003:	add    BYTE PTR [rax],al
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    ah,ch
   140009009:	fiadd  DWORD PTR [rax]
   14000900b:	add    BYTE PTR [rax],al
   14000900d:	add    BYTE PTR [rax],al
   14000900f:	add    dl,bl
   140009011:	fiadd  DWORD PTR [rax]
   140009013:	add    BYTE PTR [rax],al
   140009015:	add    BYTE PTR [rax],al
   140009017:	add    BYTE PTR [rax],ah
   140009019:	fild   DWORD PTR [rax]
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    ah,cl
   140009021:	fiadd  DWORD PTR [rax]
   140009023:	add    BYTE PTR [rax],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rdx+0xda],bh
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rsi+0xda],ah
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rdx+rbx*8+0x0],dl
   14000903e:	add    BYTE PTR [rax],al
   140009040:	adc    bl,bl
	...
   14000904e:	add    BYTE PTR [rax],al
   140009050:	sbb    al,0x0
   140009053:	add    BYTE PTR [rax],al
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rsi+0xd8],dl
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rax+0xd8],dh
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rdx-0x28],ch
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	push   rax
   140009071:	fadd   DWORD PTR [rax]
   140009073:	add    BYTE PTR [rax],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rax+rbx*8],bh
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    BYTE PTR [rax],al
   140009080:	sub    al,bl
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	adc    al,0xd8
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	not    bh
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	fcmovbe st,st(7)
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	(bad)  
   1400090a1:	xlat   BYTE PTR ds:[rbx]
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	lods   al,BYTE PTR ds:[rsi]
   1400090a9:	xlat   BYTE PTR ds:[rbx]
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	cwde   
   1400090b1:	xlat   BYTE PTR ds:[rbx]
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	mov    ds,ecx
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	movabs ds:0xb8000000000000d9,al
   1400090c9:	fld    DWORD PTR [rax]
   1400090cb:	add    BYTE PTR [rax],al
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    ah,cl
   1400090d1:	fld    DWORD PTR [rax]
   1400090d3:	add    BYTE PTR [rax],al
   1400090d5:	add    BYTE PTR [rax],al
   1400090d7:	add    dl,bl
   1400090d9:	fld    DWORD PTR [rax]
   1400090db:	add    BYTE PTR [rax],al
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    dl,ch
   1400090e1:	fld    DWORD PTR [rax]
   1400090e3:	add    BYTE PTR [rax],al
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    dh,dh
   1400090e9:	fld    DWORD PTR [rax]
   1400090eb:	add    BYTE PTR [rax],al
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rdx],cl
   1400090f1:	fiadd  DWORD PTR [rax]
   1400090f3:	add    BYTE PTR [rax],al
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    BYTE PTR [rax],ah
   1400090f9:	fiadd  DWORD PTR [rax]
   1400090fb:	add    BYTE PTR [rax],al
   1400090fd:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rax],dh
   140009101:	fiadd  DWORD PTR [rax]
   140009103:	add    BYTE PTR [rax],al
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rsi],bh
   140009109:	fiadd  DWORD PTR [rax]
   14000910b:	add    BYTE PTR [rax],al
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rdx+rbx*8+0x0],dl
   140009113:	add    BYTE PTR [rax],al
   140009115:	add    BYTE PTR [rax],al
   140009117:	add    BYTE PTR [rdx-0x26],ah
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	js     0x1400090fc
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	xchg   dl,bl
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	add    BYTE PTR [rax],al
   14000912e:	add    BYTE PTR [rax],al
   140009130:	adc    bh,0x0
   140009133:	add    BYTE PTR [rax],al
   140009135:	add    BYTE PTR [rax],al
   140009137:	add    BYTE PTR [rax-0x29],ah
   14000913a:	add    BYTE PTR [rax],al
   14000913c:	add    BYTE PTR [rax],al
   14000913e:	add    BYTE PTR [rax],al
   140009140:	rex.WX xlat BYTE PTR ds:[rbx]
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	cmp    dl,bh
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	add    BYTE PTR [rax],al
   14000914e:	add    BYTE PTR [rax],al
   140009150:	xor    dl,bh
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	mov    esi,0xdb
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rbx+rbx*8+0x0],ch
   140009166:	add    BYTE PTR [rax],al
   140009168:	movabs al,ds:0xdb
   140009171:	add    BYTE PTR [rax],al
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    BYTE PTR [rdx],al
   140009179:	add    BYTE PTR [rax],al
   14000917b:	add    BYTE PTR [rax],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	or     BYTE PTR [rax],0x0
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax+0x6],al
   14000918c:	add    BYTE PTR [rax],al
   14000918e:	add    BYTE PTR [rax+0x9],al
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax+0x0],al
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	(bad)  
   1400091a1:	xlat   BYTE PTR ds:[rbx]
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	(bad)  
   1400091a9:	xlat   BYTE PTR ds:[rbx]
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	cld    
   1400091b1:	(bad)  
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	in     al,0xd6
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	fcom   st(6)
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	(bad)  
   1400091c9:	(bad)  
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	add    BYTE PTR [rax],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	mov    edx,0xd6
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	add    BYTE PTR [rdx+0xd6],dh
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    dl,cl
   1400091e1:	fild   DWORD PTR [rax]
   1400091e3:	add    BYTE PTR [rax],al
   1400091e5:	add    BYTE PTR [rax],al
   1400091e7:	add    BYTE PTR [rax+0xd6],bl
   1400091ed:	add    BYTE PTR [rax],al
   1400091ef:	add    BYTE PTR [rsi+0xd6],al
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    BYTE PTR [rax-0x2a],bh
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	add    BYTE PTR [rax],al
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	push   0xffffffffffffffd6
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	(bad)  
   140009209:	(bad)  
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	add    BYTE PTR [rax],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	push   rsp
   140009211:	(bad)  
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rax],al
   140009216:	add    BYTE PTR [rax],al
   140009218:	rex.WX (bad) 
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	rex (bad) 
   140009222:	add    BYTE PTR [rax],al
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	cmp    dh,dl
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	add    BYTE PTR [rax],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	cs (bad) 
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	pop    rdx
   140009239:	fld    DWORD PTR [rax]
   14000923b:	add    BYTE PTR [rax],al
   14000923d:	add    BYTE PTR [rax],al
   14000923f:	add    BYTE PTR [rax-0x27],ch
   140009242:	add    BYTE PTR [rax],al
   140009244:	add    BYTE PTR [rax],al
   140009246:	add    BYTE PTR [rax],al
   140009248:	and    al,0xd6
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	sbb    dl,dh
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	(bad)  
   140009259:	(bad)  
   14000925a:	add    BYTE PTR [rax],al
   14000925c:	add    BYTE PTR [rax],al
   14000925e:	add    BYTE PTR [rax],al
   140009260:	je     0x14000923b
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	(bad)  
   140009269:	fld    DWORD PTR [rax]
   14000926b:	add    BYTE PTR [rax],al
   14000926d:	add    BYTE PTR [rax],al
   14000926f:	add    BYTE PTR [rdx+0xd6],ch
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rax],al
   140009279:	(bad)  
   14000927a:	add    BYTE PTR [rax],al
   14000927c:	add    BYTE PTR [rax],al
   14000927e:	add    BYTE PTR [rax],al
   140009280:	(bad)  
   140009281:	fild   DWORD PTR [rax]
	...
   14000928f:	add    BYTE PTR [rcx+rbx*8],dl
   140009292:	add    BYTE PTR [rax],al
   140009294:	add    BYTE PTR [rax],al
   140009296:	add    BYTE PTR [rax],al
   140009298:	sub    bl,cl
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	add    BYTE PTR [rax],al
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	fld    DWORD PTR ds:[rax]
   1400092a3:	add    BYTE PTR [rax],al
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    BYTE PTR [rsi-0x25],dh
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	add    BYTE PTR [rax],al
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	test   bl,bl
	...
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	push   rsp
   1400092c1:	fild   DWORD PTR [rax]
   1400092c3:	add    BYTE PTR [rax],al
   1400092c5:	add    BYTE PTR [rax],al
   1400092c7:	add    BYTE PTR [rsi-0x25],al
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	add    BYTE PTR [rax],al
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	clc    
   1400092d1:	fadd   DWORD PTR [rax]
   1400092d3:	add    BYTE PTR [rax],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    al,ah
   1400092d9:	fadd   DWORD PTR [rax]
   1400092db:	add    BYTE PTR [rax],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    dh,cl
   1400092e1:	fadd   DWORD PTR [rax]
	...
   1400092ef:	add    al,dh
   1400092f1:	sub    eax,DWORD PTR [rax]
   1400092f3:	rex add DWORD PTR [rax],eax
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	xor    BYTE PTR [rax+0x14000],cl
	...
   140009306:	add    BYTE PTR [rax],al
   140009308:	sar    BYTE PTR [rbp+0x0],1
   14000930b:	rex add DWORD PTR [rax],eax
	...
   14000931e:	add    BYTE PTR [rax],al
   140009320:	lock jl 0x140009323
   140009323:	rex add DWORD PTR [rax],eax
   140009326:	add    BYTE PTR [rax],al
   140009328:	add    BYTE PTR [rbx+0x14000],0x0
	...
   140009337:	add    BYTE PTR [rax],ah
   140009339:	adc    BYTE PTR [rax],al
   14000933b:	add    al,al
   14000933d:	add    BYTE PTR es:[rax],al
   140009340:	movabs al,ds:0xe0000027d0000027
   140009349:	sub    BYTE PTR [rax],al
   14000934b:	add    BYTE PTR [rax+0x29],ah
   14000934e:	add    BYTE PTR [rax],al
   140009350:	add    BYTE PTR [rdx],ch
   140009352:	add    BYTE PTR [rax],al
   140009354:	and    BYTE PTR [rbx],ch
   140009356:	add    BYTE PTR [rax],al
   140009358:	(bad)  
   140009359:	sub    eax,DWORD PTR [rax]
   14000935b:	add    BYTE PTR [rax-0xfffffd5],dl
   140009361:	sub    eax,DWORD PTR [rax]
   140009363:	add    BYTE PTR [rax],al
   140009365:	sub    al,0x0
   140009367:	add    BYTE PTR [rax+0x4000002d],al
   14000936d:	add    BYTE PTR [rax],r8b
   140009370:	jo     0x1400093b6
   140009372:	add    BYTE PTR [rax],al
   140009374:	nop
   140009375:	add    BYTE PTR [r8],r8b
   140009378:	rol    BYTE PTR [rbp+0x0],1
   14000937b:	add    BYTE PTR [rax],dh
   14000937d:	rex.RX add BYTE PTR [rax],r8b
   140009380:	rex
   140009381:	rex.RX add BYTE PTR [rax],r8b
   140009384:	push   rax
   140009385:	rex.RX add BYTE PTR [rax],r8b
   140009388:	rex
   140009389:	rex.RXB add BYTE PTR [r8],r8b
   14000938c:	rol    BYTE PTR [rdi+0x0],0x0
   140009390:	xor    BYTE PTR [rbp+0x0],0x0
   140009394:	lock jl 0x140009397
   140009397:	add    al,dl
   140009399:	jge    0x14000939b
   14000939b:	add    BYTE PTR [rax],al
   14000939d:	add    BYTE PTR [rax],0x0
   1400093a0:	(bad)  
   1400093a1:	add    BYTE PTR [rax],0x0
   1400093a4:	mov    al,0x80
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	rex add DWORD PTR [rax],0x0
   1400093ac:	add    BYTE PTR [rbx-0x1fa00000],0x0
   1400093b3:	rex add DWORD PTR [rax],eax
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	add    cl,ah
   1400093ba:	add    BYTE PTR [rax+0x1],al
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rax+rax*1+0x0],bl
   1400093c3:	add    BYTE PTR [rax],al
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    ah,al
   1400093c9:	mov    bh,0x23
   1400093cb:	jrcxz  0x1400093e7
   1400093cd:	jp     0x1400093d5
   1400093cf:	rex.WRX movabs rdi,0x277637d7cc566d
   1400093d9:	sub    al,BYTE PTR [rax]
   1400093db:	rex add DWORD PTR [rax],eax
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	and    BYTE PTR [rbx],ch
   1400093e2:	add    BYTE PTR [rax+0x1],al
   1400093e5:	add    BYTE PTR [rax],al
   1400093e7:	add    BYTE PTR [rax+0x140002b],dl
   1400093ed:	add    BYTE PTR [rax],al
   1400093ef:	add    al,al
   1400093f1:	add    BYTE PTR es:[rax+0x1],al
   1400093f5:	add    BYTE PTR [rax],al
   1400093f7:	add    al,dh
   1400093f9:	sub    eax,DWORD PTR [rax]
   1400093fb:	rex add DWORD PTR [rax],eax
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	lock sub eax,DWORD PTR [rax]
   140009403:	rex add DWORD PTR [rax],eax
   140009406:	add    BYTE PTR [rax],al
   140009408:	add    BYTE PTR [rax+rax*1],ch
   14000940b:	rex add DWORD PTR [rax],eax
   14000940e:	add    BYTE PTR [rax],al
   140009410:	(bad)  
   140009411:	add    BYTE PTR [rax],0x40
   140009414:	add    DWORD PTR [rax],eax
   140009416:	add    BYTE PTR [rax],al
   140009418:	movabs al,ds:0xd000000001400027
   140009421:	(bad)  
   140009422:	add    BYTE PTR [rax+0x1],al
   140009425:	add    BYTE PTR [rax],al
   140009427:	add    al,ah
   140009429:	sub    BYTE PTR [rax],al
   14000942b:	rex add DWORD PTR [rax],eax
   14000942e:	add    BYTE PTR [rax],al
   140009430:	add    BYTE PTR [rdx],ch
   140009432:	add    BYTE PTR [rax+0x1],al
   140009435:	add    BYTE PTR [rax],al
   140009437:	add    BYTE PTR [rax],ah
   140009439:	sub    eax,DWORD PTR [rax]
   14000943b:	rex add DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	nop
   140009441:	sub    eax,DWORD PTR [rax]
   140009443:	rex add DWORD PTR [rax],eax
   140009446:	add    BYTE PTR [rax],al
   140009448:	(bad)  
   140009449:	sub    eax,DWORD PTR [rax]
   14000944b:	rex add DWORD PTR [rax],eax
   14000944e:	add    BYTE PTR [rax],al
   140009450:	lock sub eax,DWORD PTR [rax]
   140009453:	rex add DWORD PTR [rax],eax
   140009456:	add    BYTE PTR [rax],al
   140009458:	lock sub eax,DWORD PTR [rax]
   14000945b:	rex add DWORD PTR [rax],eax
   14000945e:	add    BYTE PTR [rax],al
   140009460:	add    BYTE PTR [rax+rax*1],ch
   140009463:	rex add DWORD PTR [rax],eax
   140009466:	add    BYTE PTR [rax],al
   140009468:	add    BYTE PTR [rdx],ch
   14000946a:	add    BYTE PTR [rax+0x1],al
   14000946d:	add    BYTE PTR [rax],al
   14000946f:	add    BYTE PTR [rax],ah
   140009471:	sub    eax,DWORD PTR [rax]
   140009473:	rex add DWORD PTR [rax],eax
   140009476:	add    BYTE PTR [rax],al
   140009478:	nop
   140009479:	sub    eax,DWORD PTR [rax]
   14000947b:	rex add DWORD PTR [rax],eax
   14000947e:	add    BYTE PTR [rax],al
   140009480:	(bad)  
   140009481:	sub    DWORD PTR [rax],eax
   140009483:	rex add DWORD PTR [rax],eax
   140009486:	add    BYTE PTR [rax],al
   140009488:	lock sub eax,DWORD PTR [rax]
   14000948b:	rex add DWORD PTR [rax],eax
   14000948e:	add    BYTE PTR [rax],al
   140009490:	lock sub eax,DWORD PTR [rax]
   140009493:	rex add DWORD PTR [rax],eax
   140009496:	add    BYTE PTR [rax],al
   140009498:	add    BYTE PTR [rax+rax*1],ch
   14000949b:	rex add DWORD PTR [rax],eax
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	sub    BYTE PTR [rip+0x14000],0x0        # 0x14001d4a7
   1400094a7:	add    BYTE PTR [rax+0x44],dh
   1400094aa:	add    BYTE PTR [rax+0x1],al
   1400094ad:	add    BYTE PTR [rax],al
   1400094af:	add    BYTE PTR [rax+0x1400045],dl
   1400094b5:	add    BYTE PTR [rax],al
   1400094b7:	add    al,dl
   1400094b9:	add    BYTE PTR [r8+0x1],r8b
   1400094bd:	add    BYTE PTR [rax],al
   1400094bf:	add    BYTE PTR [rax-0x80],ah
   1400094c2:	add    BYTE PTR [rax+0x1],al
   1400094c5:	add    BYTE PTR [rax],al
   1400094c7:	add    BYTE PTR [rax-0x80],ah
   1400094ca:	add    BYTE PTR [rax+0x1],al
   1400094cd:	add    BYTE PTR [rax],al
   1400094cf:	add    BYTE PTR [rax-0x80],ah
   1400094d2:	add    BYTE PTR [rax+0x1],al
   1400094d5:	add    BYTE PTR [rax],al
   1400094d7:	add    BYTE PTR [rax-0x80],ah
   1400094da:	add    BYTE PTR [rax+0x1],al
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rax-0x80],ah
   1400094e2:	add    BYTE PTR [rax+0x1],al
   1400094e5:	add    BYTE PTR [rax],al
   1400094e7:	add    BYTE PTR [rax+0x44],al
   1400094ea:	add    BYTE PTR [rax+0x1],al
   1400094ed:	add    BYTE PTR [rax],al
   1400094ef:	add    al,dh
   1400094f1:	sub    eax,DWORD PTR [rax]
   1400094f3:	rex add DWORD PTR [rax],eax
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	lock sub eax,DWORD PTR [rax]
   1400094fb:	rex add DWORD PTR [rax],eax
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	add    BYTE PTR [rax+rax*1],ch
   140009503:	rex add DWORD PTR [rax],eax
   140009506:	add    BYTE PTR [rax],al
   140009508:	jo     0x14000954e
   14000950a:	add    BYTE PTR [rax+0x1],al
   14000950d:	add    BYTE PTR [rax],al
   14000950f:	add    BYTE PTR [rax+0x1400045],dl
   140009515:	add    BYTE PTR [rax],al
   140009517:	add    al,dl
   140009519:	add    BYTE PTR [r8+0x1],r8b
   14000951d:	add    BYTE PTR [rax],al
   14000951f:	add    BYTE PTR [rax],dh
   140009521:	rex.RX add BYTE PTR [rax+0x1],r8b
   140009525:	add    BYTE PTR [rax],al
   140009527:	add    BYTE PTR [rax+0x46],al
   14000952a:	add    BYTE PTR [rax+0x1],al
   14000952d:	add    BYTE PTR [rax],al
   14000952f:	add    BYTE PTR [rax+0x46],dl
   140009532:	add    BYTE PTR [rax+0x1],al
   140009535:	add    BYTE PTR [rax],al
   140009537:	add    BYTE PTR [rax+0x47],al
   14000953a:	add    BYTE PTR [rax+0x1],al
   14000953d:	add    BYTE PTR [rax],al
   14000953f:	add    al,al
   140009541:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140009545:	add    BYTE PTR [rax],al
   140009547:	add    BYTE PTR [rax+0x44],al
   14000954a:	add    BYTE PTR [rax+0x1],al
   14000954d:	add    BYTE PTR [rax],al
   14000954f:	add    al,dh
   140009551:	sub    eax,DWORD PTR [rax]
   140009553:	rex add DWORD PTR [rax],eax
   140009556:	add    BYTE PTR [rax],al
   140009558:	lock sub eax,DWORD PTR [rax]
   14000955b:	rex add DWORD PTR [rax],eax
   14000955e:	add    BYTE PTR [rax],al
   140009560:	add    BYTE PTR [rax+rax*1],ch
   140009563:	rex add DWORD PTR [rax],eax
   140009566:	add    BYTE PTR [rax],al
   140009568:	(bad)  
   14000956a:	jae    0x1400095d1
   14000956c:	pop    rsp
   14000956d:	jb     0x1400095d4
   14000956f:	ins    BYTE PTR es:[rdi],dx
   140009570:	imul   esp,DWORD PTR [rcx+0x62],0x74696c69
   140009577:	jns    0x1400095d5
   140009579:	jb     0x1400095e0
   14000957b:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000957e:	gs jb  0x1400095fa
   140009581:	pop    rsp
   140009582:	jo     0x1400095f0
   140009584:	jne    0x1400095ed
   140009586:	imul   ebp,DWORD PTR [rsi+0x73],0x7362635c
   14000958d:	pop    rsp
   14000958e:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140009595:	gs jb  0x1400095f4
   140009598:	jb     0x140009604
   14000959a:	jbe    0x1400095ff
   14000959c:	(bad)
   1400095a1:	jo     0x1400095a3
   1400095a3:	add    BYTE PTR [rax],al
   1400095a5:	add    BYTE PTR [rax],al
   1400095a7:	add    BYTE PTR [rbx+0x74],dl
   1400095aa:	(bad)  
   1400095ab:	addr32 gs push rbx
   1400095ae:	imul   ebp,DWORD PTR [rsi+0x67],0x6150656c
   1400095b5:	movsxd ebp,DWORD PTR [rbx+0x61]
   1400095b8:	add    BYTE PTR gs:[eax],al
   1400095bc:	add    BYTE PTR [rax],al
   1400095be:	add    BYTE PTR [rax],al
   1400095c0:	add    BYTE PTR [r8+rax*1+0x74],sil
   1400095c5:	add    BYTE PTR [rbp+0x0],ah
   1400095c8:	ins    DWORD PTR es:[rdi],dx
   1400095c9:	add    BYTE PTR [rax+0x0],dh
   1400095cc:	je     0x1400095ce
   1400095ce:	imul   eax,DWORD PTR [rax],0x67006e
   1400095d4:	and    BYTE PTR [rax],al
   1400095d6:	je     0x1400095d8
   1400095d8:	outs   dx,DWORD PTR ds:[rsi]
   1400095d9:	add    BYTE PTR [rax],ah
   1400095db:	add    BYTE PTR [rbx+0x0],dh
   1400095de:	je     0x1400095e0
   1400095e0:	(bad)  
   1400095e1:	add    BYTE PTR [rdi+0x0],ah
   1400095e4:	add    BYTE PTR gs:[rax],ah
   1400095e7:	add    BYTE PTR [rip+0x7300],ah        # 0x1400108ed
   1400095ed:	add    BYTE PTR [rax],al
   1400095ef:	add    BYTE PTR [rbx+0x0],dl
   1400095f2:	jns    0x1400095f4
   1400095f4:	jae    0x1400095f6
   1400095f6:	je     0x1400095f8
   1400095f8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400095fc:	and    BYTE PTR [rax],al
   1400095fe:	imul   eax,DWORD PTR [rax],0x200073
   140009604:	jae    0x140009606
   140009606:	push   0x74007500
   14000960b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000960f:	add    BYTE PTR [rsi+0x0],ch
   140009612:	add    BYTE PTR [eax],ah
   140009615:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140009619:	add    BYTE PTR [rdi+0x0],dh
   14000961c:	outs   dx,BYTE PTR ds:[rsi]
   14000961d:	add    BYTE PTR [rax+rax*1],ch
   140009620:	and    BYTE PTR [rax],al
   140009622:	imul   eax,DWORD PTR [rax],0x6e0067
   140009628:	outs   dx,DWORD PTR ds:[rsi]
   140009629:	add    BYTE PTR [rdx+0x0],dh
   14000962c:	imul   eax,DWORD PTR [rax],0x67006e
   140009632:	and    BYTE PTR [rax],al
   140009634:	rex.XB add BYTE PTR [r10+0x0],al
   140009638:	push   rbx
   140009639:	add    BYTE PTR [rax],ah
   14000963b:	add    BYTE PTR [rbx+0x0],dl
   14000963e:	je     0x140009640
   140009640:	(bad)  
   140009641:	add    BYTE PTR [rdi+0x0],ah
   140009644:	add    BYTE PTR gs:[rax],ah
   140009647:	add    BYTE PTR [rdx+0x0],dh
   14000964a:	add    BYTE PTR gs:[rcx+0x0],dh
   14000964e:	jne    0x140009650
   140009650:	add    BYTE PTR gs:[rbx+0x0],dh
   140009654:	je     0x140009656
   140009656:	jae    0x140009658
	...
   140009660:	rex.W push rdx
   140009662:	rex.RB push r11
   140009664:	push   rbp
   140009665:	rex.WR push rsp
   140009667:	pop    rdi
   140009668:	rex.RX push rdx
   14000966a:	rex.WRXB
   14000966b:	rex.WRB pop r15
   14000966d:	push   rdi
   14000966e:	rex.WB
   14000966f:	rex.WRX xor r14,QWORD PTR [rdx]
   140009672:	sub    BYTE PTR [rsi],dh
   140009674:	xor    al,0x31
   140009676:	sub    QWORD PTR [rax],r8
   140009679:	add    BYTE PTR [rax],al
   14000967b:	add    BYTE PTR [rax],al
   14000967d:	add    BYTE PTR [rax],al
   14000967f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c010985
   140009685:	add    BYTE PTR [rbx+0x0],dl
   140009688:	add    BYTE PTR gs:[rdx+0x0],dh
   14000968c:	jbe    0x14000968e
   14000968e:	imul   eax,DWORD PTR [rax],0x690063
   140009694:	outs   dx,BYTE PTR ds:[rsi]
   140009695:	add    BYTE PTR [rdi+0x0],ah
   140009698:	pop    rsp
   140009699:	add    BYTE PTR [rax+0x0],dl
   14000969c:	(bad)  
   14000969d:	add    BYTE PTR [rbx+0x0],ah
   1400096a0:	imul   eax,DWORD PTR [rax],0x61
   1400096a3:	add    BYTE PTR [rdi+0x0],ah
   1400096a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400096aa:	pop    rsp
   1400096ab:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e0109b1
   1400096b1:	add    BYTE PTR [rbp+0x0],ch
   1400096b4:	jne    0x1400096b6
   1400096b6:	ins    DWORD PTR es:[rdi],dx
	...
   1400096bf:	add    BYTE PTR [rbx+0x63],dl
   1400096c2:	jp     0x140009705
   1400096c4:	ins    BYTE PTR es:[rdi],dx
   1400096c5:	ins    BYTE PTR es:[rdi],dx
   1400096c6:	outs   dx,DWORD PTR ds:[rsi]
   1400096c7:	movsxd eax,DWORD PTR [rsi+0x6f]
   1400096ca:	jb     0x140009739
   1400096cc:	(bad)  
   1400096cd:	je     0x140009743
   1400096cf:	gs sub BYTE PTR fs:[rbp+0x75],cl
   1400096d4:	ins    DWORD PTR es:[rdi],dx
   1400096d5:	push   rax
   1400096d6:	(bad)  
   1400096d7:	je     0x140009741
   1400096d9:	cs rex.RXB
   1400096db:	gs je  0x140009727
   1400096de:	outs   dx,BYTE PTR ds:[rsi]
   1400096df:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   1400096e7:	jb     0x140009711
   1400096e9:	sub    DWORD PTR [rax+riz*1],ebp
   1400096ec:	rex.WR and r12b,BYTE PTR [rip+0x535c5c73]        # 0x1935cf366
   1400096f3:	gs jb  0x14000976c
   1400096f6:	imul   esp,DWORD PTR [rbx+0x69],0x5c5c676e
   1400096fd:	push   rax
   1400096fe:	(bad)  
   1400096ff:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009702:	addr32 gs jae 0x140009762
   140009706:	pop    rsp
   140009707:	and    eax,0x756d2e73
   14000970c:	ins    DWORD PTR es:[rdi],dx
   14000970d:	and    ch,BYTE PTR [rax+riz*1]
   140009710:	jae    0x14000978c
   140009712:	push   rdi
   140009713:	imul   ebp,DWORD PTR [rsi+0x64],0x202c7269
   14000971a:	jae    0x140009796
   14000971c:	push   rax
   14000971d:	(bad)  
   14000971e:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009721:	sub    DWORD PTR gs:[eax],eax
   140009725:	add    BYTE PTR [rax],al
   140009727:	add    BYTE PTR [rax+0x0],dl
   14000972a:	(bad)  
   14000972b:	add    BYTE PTR [rbx+0x0],ah
   14000972e:	imul   eax,DWORD PTR [rax],0x61
   140009731:	add    BYTE PTR [rdi+0x0],ah
   140009734:	add    BYTE PTR gs:[rax],ah
   140009737:	add    BYTE PTR [rip+0x20007300],ah        # 0x160010a3d
   14000973d:	add    BYTE PTR [rcx+0x0],ch
   140009740:	jae    0x140009742
   140009742:	and    BYTE PTR [rax],al
   140009744:	outs   dx,BYTE PTR ds:[rsi]
   140009745:	add    BYTE PTR [rdi+0x0],ch
   140009748:	je     0x14000974a
   14000974a:	and    BYTE PTR [rax],al
   14000974c:	(bad)  
   14000974d:	add    BYTE PTR [rax+0x0],dh
   140009750:	jo     0x140009752
   140009752:	ins    BYTE PTR es:[rdi],dx
   140009753:	add    BYTE PTR [rcx+0x0],ch
   140009756:	movsxd eax,DWORD PTR [rax]
   140009758:	(bad)  
   140009759:	add    BYTE PTR [rdx+0x0],ah
   14000975c:	ins    BYTE PTR es:[rdi],dx
   14000975d:	add    BYTE PTR [rbp+0x0],ah
	...
   140009770:	rex.XB add BYTE PTR [r15+0x0],bpl
   140009774:	jne    0x140009776
   140009776:	ins    BYTE PTR es:[rdi],dx
   140009777:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000977b:	add    BYTE PTR [rsi+0x0],ch
   14000977e:	outs   dx,DWORD PTR ds:[rsi]
   14000977f:	add    BYTE PTR [rax+rax*1+0x20],dh
   140009783:	add    BYTE PTR [rbx+0x0],ah
   140009786:	outs   dx,DWORD PTR ds:[rsi]
   140009787:	add    BYTE PTR [rbp+0x0],ch
   14000978a:	jo     0x14000978c
   14000978c:	ins    BYTE PTR es:[rdi],dx
   14000978d:	add    BYTE PTR [rbp+0x0],ah
   140009790:	je     0x140009792
   140009792:	add    BYTE PTR gs:[rax],ah
   140009795:	add    BYTE PTR [rbx+0x0],dh
   140009798:	je     0x14000979a
   14000979a:	(bad)  
   14000979b:	add    BYTE PTR [rdi+0x0],ah
   14000979e:	imul   eax,DWORD PTR [rax],0x67006e
   1400097a4:	and    BYTE PTR [rax],al
   1400097a6:	and    eax,0x3a007300
   1400097ab:	add    BYTE PTR [rax],ah
   1400097ad:	add    BYTE PTR [rax],dh
   1400097af:	add    BYTE PTR [rax+0x0],bh
   1400097b2:	and    eax,0x7800
   1400097b7:	add    BYTE PTR [rbx+0x74],dl
   1400097ba:	(bad)  
   1400097bb:	addr32 gs rex.B jo 0x140009830
   1400097c0:	ins    BYTE PTR es:[rdi],dx
   1400097c1:	imul   esp,DWORD PTR [rbx+0x61],0x50656c62
   1400097c8:	(bad)  
   1400097c9:	movsxd ebp,DWORD PTR [rbx+0x61]
   1400097cc:	addr32 gs jae 0x1400097d0
   1400097d0:	rex.XB add BYTE PTR [r9+0x0],spl
   1400097d4:	outs   dx,BYTE PTR ds:[rsi]
   1400097d5:	add    BYTE PTR [rsi+0x0],ch
   1400097d8:	outs   dx,DWORD PTR ds:[rsi]
   1400097d9:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400097dd:	add    BYTE PTR [rcx+0x0],ah
   1400097e0:	add    BYTE PTR fs:[rax+rax*1+0x20],ah
   1400097e5:	add    BYTE PTR [rsi+0x0],ch
   1400097e8:	outs   dx,DWORD PTR ds:[rsi]
   1400097e9:	add    BYTE PTR [rsi+0x0],ch
   1400097ec:	sub    eax,0x70006100
   1400097f1:	add    BYTE PTR [rax+0x0],dh
   1400097f4:	ins    BYTE PTR es:[rdi],dx
   1400097f5:	add    BYTE PTR [rcx+0x0],ch
   1400097f8:	movsxd eax,DWORD PTR [rax]
   1400097fa:	(bad)  
   1400097fb:	add    BYTE PTR [rdx+0x0],ah
   1400097fe:	ins    BYTE PTR es:[rdi],dx
   1400097ff:	add    BYTE PTR [rbp+0x0],ah
   140009802:	and    BYTE PTR [rax],al
   140009804:	jo     0x140009806
   140009806:	(bad)  
   140009807:	add    BYTE PTR [rbx+0x0],ah
   14000980a:	imul   eax,DWORD PTR [rax],0x61
   14000980d:	add    BYTE PTR [rdi+0x0],ah
   140009810:	add    BYTE PTR gs:[rax],ah
   140009813:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140009817:	add    BYTE PTR [rax],ah
   140009819:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000981d:	add    BYTE PTR [rbx+0x0],dh
   140009820:	je     0x140009822
   140009822:	cmp    al,BYTE PTR [rax]
   140009824:	and    BYTE PTR [rax],al
   140009826:	xor    BYTE PTR [rax],al
   140009828:	js     0x14000982a
   14000982a:	and    eax,0x7800
   14000982f:	add    BYTE PTR [rdi+0x5f],bl
   140009832:	je     0x140009899
   140009834:	ins    DWORD PTR es:[rdi],dx
   140009835:	jo     0x14000987c
   140009837:	add    BYTE PTR [rbx+0x74],dl
   14000983a:	(bad)  
   14000983b:	gs rex.B ins BYTE PTR es:[edi],dx
   14000983f:	ins    BYTE PTR es:[rdi],dx
   140009840:	push   rax
   140009841:	(bad)  
   140009842:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009845:	addr32 gs jae 0x140009849
   140009849:	add    BYTE PTR [rax],al
   14000984b:	add    BYTE PTR [rax],al
   14000984d:	add    BYTE PTR [rax],al
   14000984f:	add    BYTE PTR [rax+0x61],dl
   140009852:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009855:	imul   r14,QWORD PTR gs:[ebx+0x74],0x6f6c432e
   14000985f:	outs   dx,BYTE PTR ds:[rsi]
   140009860:	sub    BYTE PTR gs:[rsi],ah
   140009863:	push   rax
   140009864:	(bad)  
   140009865:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009868:	addr32 gs jae 0x1400098b8
   14000986c:	gs data16 je 0x1400098c4
   140009870:	outs   dx,DWORD PTR ds:[rsi]
   140009871:	push   rbx
   140009872:	je     0x1400098d5
   140009874:	sub    DWORD PTR gs:[eax],eax
	...
   140009880:	add    BYTE PTR [r8+rax*1+0x74],sil
   140009885:	add    BYTE PTR [rbp+0x0],ah
   140009888:	ins    DWORD PTR es:[rdi],dx
   140009889:	add    BYTE PTR [rax+0x0],dh
   14000988c:	je     0x14000988e
   14000988e:	imul   eax,DWORD PTR [rax],0x67006e
   140009894:	and    BYTE PTR [rax],al
   140009896:	je     0x140009898
   140009898:	outs   dx,DWORD PTR ds:[rsi]
   140009899:	add    BYTE PTR [rax],ah
   14000989b:	add    BYTE PTR [rbx+0x0],dh
   14000989e:	je     0x1400098a0
   1400098a0:	(bad)  
   1400098a1:	add    BYTE PTR [rdi+0x0],ah
   1400098a4:	add    BYTE PTR gs:[rax],ah
   1400098a7:	add    BYTE PTR [rcx+0x0],ah
   1400098aa:	ins    BYTE PTR es:[rdi],dx
   1400098ab:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400098af:	add    BYTE PTR [rcx+0x0],ah
   1400098b2:	jo     0x1400098b4
   1400098b4:	jo     0x1400098b6
   1400098b6:	ins    BYTE PTR es:[rdi],dx
   1400098b7:	add    BYTE PTR [rcx+0x0],ch
   1400098ba:	movsxd eax,DWORD PTR [rax]
   1400098bc:	(bad)  
   1400098bd:	add    BYTE PTR [rdx+0x0],ah
   1400098c0:	ins    BYTE PTR es:[rdi],dx
   1400098c1:	add    BYTE PTR [rbp+0x0],ah
   1400098c4:	and    BYTE PTR [rax],al
   1400098c6:	jo     0x1400098c8
   1400098c8:	(bad)  
   1400098c9:	add    BYTE PTR [rbx+0x0],ah
   1400098cc:	imul   eax,DWORD PTR [rax],0x61
   1400098cf:	add    BYTE PTR [rdi+0x0],ah
   1400098d2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400098d6:	and    BYTE PTR [rax],al
   1400098d8:	data16 add BYTE PTR [rdx+0x0],dh
   1400098dc:	outs   dx,DWORD PTR ds:[rsi]
   1400098dd:	add    BYTE PTR [rbp+0x0],ch
   1400098e0:	and    BYTE PTR [rax],al
   1400098e2:	and    eax,0x75004900
   1400098e7:	add    BYTE PTR [rax],ah
   1400098e9:	add    BYTE PTR [rcx+0x0],ah
   1400098ec:	jbe    0x1400098ee
   1400098ee:	(bad)  
   1400098ef:	add    BYTE PTR [rcx+0x0],ch
   1400098f2:	ins    BYTE PTR es:[rdi],dx
   1400098f3:	add    BYTE PTR [rcx+0x0],ah
   1400098f6:	(bad)  
   1400098f7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400098fb:	add    BYTE PTR [rax],al
   1400098fd:	add    BYTE PTR [rax],al
   1400098ff:	add    BYTE PTR [rbx+0x0],dl
   140009902:	je     0x140009904
   140009904:	(bad)  
   140009905:	add    BYTE PTR [rdi+0x0],ah
   140009908:	add    BYTE PTR gs:[rax],ah
   14000990b:	add    BYTE PTR [rcx+0x0],ah
   14000990e:	je     0x140009910
   140009910:	je     0x140009912
   140009912:	add    BYTE PTR gs:[rbp+0x0],ch
   140009916:	jo     0x140009918
   140009918:	je     0x14000991a
   14000991a:	and    BYTE PTR [rax],al
   14000991c:	push   0x64006100
   140009921:	add    BYTE PTR [rax],ah
   140009923:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500e229
   140009929:	add    BYTE PTR [rax],ah
   14000992b:	add    BYTE PTR [rsi+0x0],ch
   14000992e:	outs   dx,DWORD PTR ds:[rsi]
   14000992f:	add    BYTE PTR [rsi+0x0],ch
   140009932:	sub    eax,0x70006100
   140009937:	add    BYTE PTR [rax+0x0],dh
   14000993a:	ins    BYTE PTR es:[rdi],dx
   14000993b:	add    BYTE PTR [rcx+0x0],ch
   14000993e:	movsxd eax,DWORD PTR [rax]
   140009940:	(bad)  
   140009941:	add    BYTE PTR [rdx+0x0],ah
   140009944:	ins    BYTE PTR es:[rdi],dx
   140009945:	add    BYTE PTR [rbp+0x0],ah
   140009948:	and    BYTE PTR [rax],al
   14000994a:	jo     0x14000994c
   14000994c:	(bad)  
   14000994d:	add    BYTE PTR [rbx+0x0],ah
   140009950:	imul   eax,DWORD PTR [rax],0x61
   140009953:	add    BYTE PTR [rdi+0x0],ah
   140009956:	add    BYTE PTR gs:[rbx+0x0],dh
   14000995a:	and    BYTE PTR [rax],al
   14000995c:	(bad)  
   14000995d:	add    BYTE PTR [rsi+0x0],ch
   140009960:	add    BYTE PTR fs:[rax],ah
   140009963:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500e269
   140009969:	add    BYTE PTR [rax],ah
   14000996b:	add    BYTE PTR [rsi+0x0],ah
   14000996e:	(bad)  
   14000996f:	add    BYTE PTR [rcx+0x0],ch
   140009972:	ins    BYTE PTR es:[rdi],dx
   140009973:	add    BYTE PTR [rbp+0x0],dh
   140009976:	jb     0x140009978
   140009978:	add    BYTE PTR gs:[rbx+0x0],dh
   14000997c:	add    BYTE PTR [rax],al
   14000997e:	add    BYTE PTR [rax],al
   140009980:	rex.XB add BYTE PTR [r15+0x0],bpl
   140009984:	jne    0x140009986
   140009986:	ins    BYTE PTR es:[rdi],dx
   140009987:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000998b:	add    BYTE PTR [rsi+0x0],ch
   14000998e:	outs   dx,DWORD PTR ds:[rsi]
   14000998f:	add    BYTE PTR [rax+rax*1+0x20],dh
   140009993:	add    BYTE PTR [rbx+0x0],ah
   140009996:	outs   dx,DWORD PTR ds:[rsi]
   140009997:	add    BYTE PTR [rbp+0x0],ch
   14000999a:	jo     0x14000999c
   14000999c:	ins    BYTE PTR es:[rdi],dx
   14000999d:	add    BYTE PTR [rbp+0x0],ah
   1400099a0:	je     0x1400099a2
   1400099a2:	add    BYTE PTR gs:[rax],ah
   1400099a5:	add    BYTE PTR [rbx+0x0],dh
   1400099a8:	je     0x1400099aa
   1400099aa:	(bad)  
   1400099ab:	add    BYTE PTR [rdi+0x0],ah
   1400099ae:	imul   eax,DWORD PTR [rax],0x67006e
   1400099b4:	and    BYTE PTR [rax],al
   1400099b6:	(bad)  
   1400099b7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400099bb:	add    BYTE PTR [rax],ah
   1400099bd:	add    BYTE PTR [rcx+0x0],ah
   1400099c0:	jo     0x1400099c2
   1400099c2:	jo     0x1400099c4
   1400099c4:	ins    BYTE PTR es:[rdi],dx
   1400099c5:	add    BYTE PTR [rcx+0x0],ch
   1400099c8:	movsxd eax,DWORD PTR [rax]
   1400099ca:	(bad)  
   1400099cb:	add    BYTE PTR [rdx+0x0],ah
   1400099ce:	ins    BYTE PTR es:[rdi],dx
   1400099cf:	add    BYTE PTR [rbp+0x0],ah
   1400099d2:	and    BYTE PTR [rax],al
   1400099d4:	jo     0x1400099d6
   1400099d6:	(bad)  
   1400099d7:	add    BYTE PTR [rbx+0x0],ah
   1400099da:	imul   eax,DWORD PTR [rax],0x61
   1400099dd:	add    BYTE PTR [rdi+0x0],ah
   1400099e0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400099e4:	add    BYTE PTR cs:[rax],ah
   1400099e7:	add    BYTE PTR [rax],ch
   1400099e9:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500e2ef
   1400099ef:	add    BYTE PTR [rax],ah
   1400099f1:	add    BYTE PTR [rsi+0x0],ah
   1400099f4:	(bad)  
   1400099f5:	add    BYTE PTR [rcx+0x0],ch
   1400099f8:	ins    BYTE PTR es:[rdi],dx
   1400099f9:	add    BYTE PTR [rbp+0x0],dh
   1400099fc:	jb     0x1400099fe
   1400099fe:	add    BYTE PTR gs:[rbx+0x0],dh
   140009a02:	(bad)  
   140009a03:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500e309
   140009a09:	add    BYTE PTR [rax],ah
   140009a0b:	add    BYTE PTR [rcx+0x0],ah
   140009a0e:	jo     0x140009a10
   140009a10:	jo     0x140009a12
   140009a12:	ins    BYTE PTR es:[rdi],dx
   140009a13:	add    BYTE PTR [rcx+0x0],ch
   140009a16:	movsxd eax,DWORD PTR [rax]
   140009a18:	(bad)  
   140009a19:	add    BYTE PTR [rdx+0x0],ah
   140009a1c:	ins    BYTE PTR es:[rdi],dx
   140009a1d:	add    BYTE PTR [rbp+0x0],ah
   140009a20:	(bad)  
   140009a21:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500e327
   140009a27:	add    BYTE PTR [rax],ah
   140009a29:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140009a2d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140009a31:	add    BYTE PTR [rax+rax*1+0x29],ch
	...
   140009a3d:	add    BYTE PTR [rax],al
   140009a3f:	add    BYTE PTR [rbx+0x0],al
   140009a42:	outs   dx,DWORD PTR ds:[rsi]
   140009a43:	add    BYTE PTR [rbp+0x0],ch
   140009a46:	jo     0x140009a48
   140009a48:	ins    BYTE PTR es:[rdi],dx
   140009a49:	add    BYTE PTR [rbp+0x0],ah
   140009a4c:	je     0x140009a4e
   140009a4e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140009a53:	add    BYTE PTR [rbx+0x0],dh
   140009a56:	je     0x140009a58
   140009a58:	(bad)  
   140009a59:	add    BYTE PTR [rdi+0x0],ah
   140009a5c:	imul   eax,DWORD PTR [rax],0x67006e
   140009a62:	and    BYTE PTR [rax],al
   140009a64:	(bad)  
   140009a65:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009a69:	add    BYTE PTR [rax],ah
   140009a6b:	add    BYTE PTR [rcx+0x0],ah
   140009a6e:	jo     0x140009a70
   140009a70:	jo     0x140009a72
   140009a72:	ins    BYTE PTR es:[rdi],dx
   140009a73:	add    BYTE PTR [rcx+0x0],ch
   140009a76:	movsxd eax,DWORD PTR [rax]
   140009a78:	(bad)  
   140009a79:	add    BYTE PTR [rdx+0x0],ah
   140009a7c:	ins    BYTE PTR es:[rdi],dx
   140009a7d:	add    BYTE PTR [rbp+0x0],ah
   140009a80:	and    BYTE PTR [rax],al
   140009a82:	jo     0x140009a84
   140009a84:	(bad)  
   140009a85:	add    BYTE PTR [rbx+0x0],ah
   140009a88:	imul   eax,DWORD PTR [rax],0x61
   140009a8b:	add    BYTE PTR [rdi+0x0],ah
   140009a8e:	add    BYTE PTR gs:[rbx+0x0],dh
   140009a92:	and    BYTE PTR [rax],al
   140009a94:	sub    BYTE PTR [rax],al
   140009a96:	and    eax,0x75004900
   140009a9b:	add    BYTE PTR [rdi],ch
   140009a9d:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500e3a3
   140009aa3:	add    BYTE PTR [rcx],ch
   140009aa5:	add    BYTE PTR [rax],al
   140009aa7:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   140009aab:	fs push rbx
   140009aad:	(bad)  
   140009aae:	jbe    0x140009b15
   140009ab0:	fs push rax
   140009ab2:	(bad)  
   140009ab3:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009ab6:	imul   r14,QWORD PTR gs:[ebx+0x74],0x0
   140009ac0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009ac2:	je     0x140009af1
   140009ac4:	outs   dx,BYTE PTR ds:[rsi]
   140009ac5:	jne    0x140009b33
   140009ac7:	ins    BYTE PTR es:[rdi],dx
   140009ac8:	and    BYTE PTR [rbx+0x68],ah
   140009acb:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   140009acf:	data16 (bad) 
   140009ad1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4170203a
   140009ad9:	jb     0x140009b4d
   140009adb:	(bad)  
   140009adc:	jns    0x140009ade
   140009ade:	add    BYTE PTR [rax],al
   140009ae0:	pop    rsp
   140009ae1:	add    BYTE PTR [rax+0x0],dl
   140009ae4:	(bad)  
   140009ae5:	add    BYTE PTR [rbx+0x0],ah
   140009ae8:	imul   eax,DWORD PTR [rax],0x61
   140009aeb:	add    BYTE PTR [rdi+0x0],ah
   140009aee:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   140009af3:	add    BYTE PTR [rbx+0x0],dh
   140009af6:	je     0x140009af8
   140009af8:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   140009afd:	add    BYTE PTR [rax+rax*1+0x0],dh
	...
   140009b0d:	add    BYTE PTR [rax],al
   140009b0f:	add    BYTE PTR [rbx+0x63],dl
   140009b12:	jp     0x140009b55
   140009b14:	ins    BYTE PTR es:[rdi],dx
   140009b15:	ins    BYTE PTR es:[rdi],dx
   140009b16:	outs   dx,DWORD PTR ds:[rsi]
   140009b17:	movsxd eax,DWORD PTR [rbx+0x6f]
   140009b1a:	outs   dx,BYTE PTR ds:[rsi]
   140009b1b:	movsxd esp,DWORD PTR [rcx+0x74]
   140009b1e:	xor    dl,BYTE PTR [rbx+0x7a]
   140009b21:	sub    BYTE PTR [rax+0x61],dl
   140009b24:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009b27:	imul   r14,QWORD PTR gs:[ebx+0x74],0x656c6946
   140009b31:	push   rax
   140009b32:	(bad)  
   140009b33:	je     0x140009b9d
   140009b35:	cs rex.RXB
   140009b37:	gs je  0x140009b83
   140009b3a:	outs   dx,BYTE PTR ds:[rsi]
   140009b3b:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   140009b43:	jb     0x140009b6d
   140009b45:	sub    DWORD PTR [rax+riz*1],ebp
   140009b48:	jae    0x140009bc4
   140009b4a:	push   rdi
   140009b4b:	outs   dx,DWORD PTR ds:[rsi]
   140009b4c:	jb     0x140009bb9
   140009b4e:	imul   ebp,DWORD PTR [rsi+0x67],0x2c726944
   140009b55:	and    BYTE PTR [rdx+riz*1+0x5c],cl
   140009b59:	pop    rsp
   140009b5a:	and    ah,BYTE PTR [rax]
   140009b5c:	rex.WR and r10b,BYTE PTR [rax+0x61]
   140009b60:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009b63:	imul   r14,QWORD PTR gs:[ebx+0x74],0x7478742e
   140009b6d:	and    ch,BYTE PTR [rcx]
   140009b6f:	add    BYTE PTR [rdx+0x0],dh
   140009b72:	je     0x140009b74
	...
   140009b80:	rex.XB add BYTE PTR [r15+0x0],bpl
   140009b84:	jne    0x140009b86
   140009b86:	ins    BYTE PTR es:[rdi],dx
   140009b87:	add    BYTE PTR [rax+rax*1+0x20],ah
   140009b8b:	add    BYTE PTR [rsi+0x0],ch
   140009b8e:	outs   dx,DWORD PTR ds:[rsi]
   140009b8f:	add    BYTE PTR [rax+rax*1+0x20],dh
   140009b93:	add    BYTE PTR [rdi+0x0],ch
   140009b96:	jo     0x140009b98
   140009b98:	add    BYTE PTR gs:[rsi+0x0],ch
   140009b9c:	and    BYTE PTR [rax],al
   140009b9e:	jo     0x140009ba0
   140009ba0:	(bad)  
   140009ba1:	add    BYTE PTR [rbx+0x0],ah
   140009ba4:	imul   eax,DWORD PTR [rax],0x61
   140009ba7:	add    BYTE PTR [rdi+0x0],ah
   140009baa:	add    BYTE PTR gs:[rax],ah
   140009bad:	add    BYTE PTR [rax+rax*1+0x69],ch
   140009bb1:	add    BYTE PTR [rbx+0x0],dh
   140009bb4:	je     0x140009bb6
   140009bb6:	and    BYTE PTR [rax],al
   140009bb8:	and    eax,0x3a007300
   140009bbd:	add    BYTE PTR [rax],ah
   140009bbf:	add    BYTE PTR [rax],dh
   140009bc1:	add    BYTE PTR [rax+0x0],bh
   140009bc4:	and    eax,0x7800
   140009bc9:	add    BYTE PTR [rax],al
   140009bcb:	add    BYTE PTR [rax],al
   140009bcd:	add    BYTE PTR [rax],al
   140009bcf:	add    BYTE PTR [rax+0x52],cl
   140009bd2:	rex.RB push r11
   140009bd4:	push   rbp
   140009bd5:	rex.WR push rsp
   140009bd7:	pop    rdi
   140009bd8:	rex.RX push rdx
   140009bda:	rex.WRXB
   140009bdb:	rex.WRB pop r15
   140009bdd:	push   rdi
   140009bde:	rex.WB
   140009bdf:	rex.WRX xor r14,QWORD PTR [rdx]
   140009be2:	sub    BYTE PTR [rax],ch
   140009be4:	pop    rdi
   140009be5:	pop    rdi
   140009be6:	je     0x140009c4d
   140009be8:	ins    DWORD PTR es:[rdi],dx
   140009be9:	jo     0x140009c30
   140009beb:	jb     0x140009c5f
   140009bed:	sub    DWORD PTR [rcx],ebp
   140009bef:	add    BYTE PTR [rax+0x41],dh
   140009bf2:	jb     0x140009c66
   140009bf4:	(bad)  
   140009bf5:	jns    0x140009c24
   140009bf7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009bfa:	jo     0x140009c75
   140009bfc:	rex.B outs dx,BYTE PTR ds:[rsi]
   140009bfe:	fs rex.B
   140009c00:	fs sub BYTE PTR fs:[rcx+rbp*2+0x6e],cl
   140009c06:	sub    DWORD PTR gs:[rax],eax
   140009c09:	add    BYTE PTR [rax],al
   140009c0b:	add    BYTE PTR [rax],al
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    BYTE PTR [rdi+0x65],al
   140009c12:	je     0x140009c63
   140009c14:	outs   dx,BYTE PTR ds:[rsi]
   140009c15:	ins    BYTE PTR es:[rdi],dx
   140009c16:	imul   ebp,DWORD PTR [rsi+0x65],0x6b636150
   140009c1d:	(bad)  
   140009c1e:	imul   r14,QWORD PTR gs:[ebx+0x74],0x0
   140009c28:	rex.RXB
   140009c29:	gs je  0x140009c81
   140009c2c:	outs   dx,BYTE PTR ds:[rsi]
   140009c2d:	imul   esi,DWORD PTR [rcx+0x75],0x72467365
   140009c34:	outs   dx,DWORD PTR ds:[rsi]
   140009c35:	ins    DWORD PTR es:[rdi],dx
   140009c36:	rex.RX imul r14d,DWORD PTR [rdx+0x73],0x72724174
   140009c3e:	(bad)  
   140009c3f:	jns    0x140009c41
   140009c41:	add    BYTE PTR [rax],al
   140009c43:	add    BYTE PTR [rax],al
   140009c45:	add    BYTE PTR [rax],al
   140009c47:	add    BYTE PTR [rsi+0x6f],cl
   140009c4a:	je     0x140009c79
   140009c4c:	outs   dx,BYTE PTR ds:[rsi]
   140009c4d:	jne    0x140009cbb
   140009c4f:	ins    BYTE PTR es:[rdi],dx
   140009c50:	and    BYTE PTR [rbx+0x68],ah
   140009c53:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   140009c57:	data16 (bad) 
   140009c59:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4470203a
   140009c61:	gs ins BYTE PTR es:[rdi],dx
   140009c63:	je     0x140009cc6
   140009c65:	add    BYTE PTR [rax],al
   140009c67:	add    BYTE PTR [rax+0x44],dh
   140009c6a:	gs ins BYTE PTR es:[rdi],dx
   140009c6c:	je     0x140009ccf
   140009c6e:	sub    eax,0x6464413e
   140009c73:	sub    BYTE PTR [rsi+0x69],al
   140009c76:	jb     0x140009ceb
   140009c78:	je     0x140009cd5
   140009c7a:	imul   eax,DWORD PTR [rsi+0x69],0x5d747372
   140009c81:	sub    DWORD PTR [rax],eax
   140009c83:	add    BYTE PTR [rax],al
   140009c85:	add    BYTE PTR [rax],al
   140009c87:	add    BYTE PTR [rax+0x44],dh
   140009c8a:	gs ins BYTE PTR es:[rdi],dx
   140009c8c:	je     0x140009cef
   140009c8e:	sub    eax,0x6464413e
   140009c93:	sub    BYTE PTR [rsi+0x69],al
   140009c96:	jb     0x140009d0b
   140009c98:	je     0x140009cf5
   140009c9a:	imul   edx,DWORD PTR [rdx+0x65],0x6e69616d
   140009ca1:	pop    rbp
   140009ca2:	sub    DWORD PTR [rax],eax
   140009ca4:	add    BYTE PTR [rax],al
   140009ca6:	add    BYTE PTR [rax],al
   140009ca8:	imul   r12,QWORD PTR [r15+0x72],0x50657461
   140009cb0:	(bad)  
   140009cb1:	movsxd ebp,DWORD PTR [rbx+0x61]
   140009cb4:	addr32 gs jae 0x140009cb8
   140009cb8:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   140009cbc:	push   rbp
   140009cbd:	add    BYTE PTR [rax+0x0],dh
   140009cc0:	add    BYTE PTR fs:[rcx+0x0],ah
   140009cc4:	je     0x140009cc6
   140009cc6:	add    BYTE PTR gs:[rbx+0x0],dh
   140009cca:	push   rsp
   140009ccb:	add    BYTE PTR [rbp+0x0],ah
   140009cce:	jae    0x140009cd0
   140009cd0:	je     0x140009cd2
   140009cd2:	imul   eax,DWORD PTR [rax],0x67006e
	...
   140009ce0:	push   rbx
   140009ce1:	add    BYTE PTR [rdi+0x0],cl
   140009ce4:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140009ce9:	add    BYTE PTR [rcx+0x0],al
   140009cec:	push   rdx
   140009ced:	add    BYTE PTR [rbp+0x0],al
   140009cf0:	pop    rsp
   140009cf1:	add    BYTE PTR [rbp+0x0],cl
   140009cf4:	imul   eax,DWORD PTR [rax],0x720063
   140009cfa:	outs   dx,DWORD PTR ds:[rsi]
   140009cfb:	add    BYTE PTR [rbx+0x0],dh
   140009cfe:	outs   dx,DWORD PTR ds:[rsi]
   140009cff:	add    BYTE PTR [rsi+0x0],ah
   140009d02:	je     0x140009d04
   140009d04:	pop    rsp
   140009d05:	add    BYTE PTR [rdi+0x0],dl
   140009d08:	imul   eax,DWORD PTR [rax],0x64006e
   140009d0e:	outs   dx,DWORD PTR ds:[rsi]
   140009d0f:	add    BYTE PTR [rdi+0x0],dh
   140009d12:	jae    0x140009d14
   140009d14:	pop    rsp
   140009d15:	add    BYTE PTR [rbx+0x0],al
   140009d18:	jne    0x140009d1a
   140009d1a:	jb     0x140009d1c
   140009d1c:	jb     0x140009d1e
   140009d1e:	add    BYTE PTR gs:[rsi+0x0],ch
   140009d22:	je     0x140009d24
   140009d24:	push   rsi
   140009d25:	add    BYTE PTR [rbp+0x0],ah
   140009d28:	jb     0x140009d2a
   140009d2a:	jae    0x140009d2c
   140009d2c:	imul   eax,DWORD PTR [rax],0x6e006f
   140009d32:	pop    rsp
   140009d33:	add    BYTE PTR [rbx+0x0],dl
   140009d36:	jns    0x140009d38
   140009d38:	jae    0x140009d3a
   140009d3a:	je     0x140009d3c
   140009d3c:	add    BYTE PTR gs:[rbp+0x0],ch
   140009d40:	push   rdx
   140009d41:	add    BYTE PTR [rbp+0x0],ah
   140009d44:	jae    0x140009d46
   140009d46:	add    BYTE PTR gs:[rax+rax*1+0x0],dh
   140009d4b:	add    BYTE PTR [rax],al
   140009d4d:	add    BYTE PTR [rax],al
   140009d4f:	add    BYTE PTR [rax+rax*1+0x65],dl
   140009d53:	add    BYTE PTR [rbx+0x0],dh
   140009d56:	je     0x140009d58
   140009d58:	and    BYTE PTR [rax],al
   140009d5a:	imul   eax,DWORD PTR [rax],0x65
   140009d5d:	add    BYTE PTR [rcx+0x0],bh
   140009d60:	and    BYTE PTR [rax],al
   140009d62:	add    BYTE PTR fs:[rbp+0x0],ah
   140009d66:	je     0x140009d68
   140009d68:	add    BYTE PTR gs:[rbx+0x0],ah
   140009d6c:	je     0x140009d6e
   140009d6e:	add    BYTE PTR gs:[rax+rax*1+0x2c],ah
   140009d73:	add    BYTE PTR [rax],ah
   140009d75:	add    BYTE PTR [rdi+0x0],dh
   140009d78:	imul   eax,DWORD PTR [rax],0x6c006c
   140009d7e:	and    BYTE PTR [rax],al
   140009d80:	outs   dx,BYTE PTR ds:[rsi]
   140009d81:	add    BYTE PTR [rdi+0x0],ch
   140009d84:	je     0x140009d86
   140009d86:	and    BYTE PTR [rax],al
   140009d88:	jb     0x140009d8a
   140009d8a:	jne    0x140009d8c
   140009d8c:	outs   dx,BYTE PTR ds:[rsi]
   140009d8d:	add    BYTE PTR [rax],al
   140009d8f:	add    BYTE PTR [rdi+0x0],cl
   140009d92:	push   rbx
   140009d93:	add    BYTE PTR [rbp+0x0],dl
   140009d96:	jo     0x140009d98
   140009d98:	add    BYTE PTR fs:[rcx+0x0],ah
   140009d9c:	je     0x140009d9e
   140009d9e:	add    BYTE PTR gs:[rbx+0x0],dh
   140009da2:	push   rdx
   140009da3:	add    BYTE PTR [rbp+0x0],ah
   140009da6:	je     0x140009da8
   140009da8:	jb     0x140009daa
   140009daa:	imul   eax,DWORD PTR [rax],0x730065
	...
   140009dc0:	push   rdx
   140009dc1:	add    BYTE PTR [rbp+0x0],ah
   140009dc4:	ins    DWORD PTR es:[rdi],dx
   140009dc5:	add    BYTE PTR [rdi+0x0],ch
   140009dc8:	jbe    0x140009dca
   140009dca:	imul   eax,DWORD PTR [rax],0x67006e
   140009dd0:	and    BYTE PTR [rax],al
   140009dd2:	jb     0x140009dd4
   140009dd4:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   140009dd9:	add    BYTE PTR [rcx+0x0],bh
   140009ddc:	and    BYTE PTR [rax],al
   140009dde:	(bad)  
   140009ddf:	add    BYTE PTR [rax+rax*1+0x74],dh
   140009de3:	add    BYTE PTR [rbp+0x0],ah
   140009de6:	ins    DWORD PTR es:[rdi],dx
   140009de7:	add    BYTE PTR [rax+0x0],dh
   140009dea:	je     0x140009dec
   140009dec:	jae    0x140009dee
   140009dee:	and    BYTE PTR [rax],al
   140009df0:	movsxd eax,DWORD PTR [rax]
   140009df2:	outs   dx,DWORD PTR ds:[rsi]
   140009df3:	add    BYTE PTR [rbp+0x0],dh
   140009df6:	outs   dx,BYTE PTR ds:[rsi]
   140009df7:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009dfb:	add    BYTE PTR [rdx+0x0],dh
   140009dfe:	and    BYTE PTR [rax],al
   140009e00:	data16 add BYTE PTR [rcx+0x0],ah
   140009e04:	imul   eax,DWORD PTR [rax],0x65006c
   140009e0a:	add    BYTE PTR fs:[rdx],bh
   140009e0d:	add    BYTE PTR [rax],ah
   140009e0f:	add    BYTE PTR [rax],dh
   140009e11:	add    BYTE PTR [rax+0x0],bh
   140009e14:	and    eax,0x7800
   140009e19:	add    BYTE PTR [rax],al
   140009e1b:	add    BYTE PTR [rax],al
   140009e1d:	add    BYTE PTR [rax],al
   140009e1f:	add    BYTE PTR [rdi+0x0],cl
   140009e22:	ins    BYTE PTR es:[rdi],dx
   140009e23:	add    BYTE PTR [rax+rax*1+0x20],ah
   140009e27:	add    BYTE PTR [rax+0x0],dh
   140009e2a:	(bad)  
   140009e2b:	add    BYTE PTR [rbx+0x0],ah
   140009e2e:	imul   eax,DWORD PTR [rax],0x61
   140009e31:	add    BYTE PTR [rdi+0x0],ah
   140009e34:	add    BYTE PTR gs:[rbx+0x0],dh
   140009e38:	or     al,BYTE PTR [rax]
   140009e3a:	add    BYTE PTR [rax],al
   140009e3c:	add    BYTE PTR [rax],al
   140009e3e:	add    BYTE PTR [rax],al
   140009e40:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140009e44:	ja     0x140009e46
   140009e46:	and    BYTE PTR [rax],al
   140009e48:	jo     0x140009e4a
   140009e4a:	(bad)  
   140009e4b:	add    BYTE PTR [rbx+0x0],ah
   140009e4e:	imul   eax,DWORD PTR [rax],0x61
   140009e51:	add    BYTE PTR [rdi+0x0],ah
   140009e54:	add    BYTE PTR gs:[rbx+0x0],dh
   140009e58:	or     al,BYTE PTR [rax]
   140009e5a:	add    BYTE PTR [rax],al
   140009e5c:	add    BYTE PTR [rax],al
   140009e5e:	add    BYTE PTR [rax],al
   140009e60:	rex.WRXB add BYTE PTR [r8+r8*1+0x64],r13b
   140009e65:	add    BYTE PTR [rax],ah
   140009e67:	add    BYTE PTR [rsi+0x0],ch
   140009e6a:	outs   dx,DWORD PTR ds:[rsi]
   140009e6b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140009e6f:	add    BYTE PTR [rcx+0x0],ch
   140009e72:	outs   dx,BYTE PTR ds:[rsi]
   140009e73:	add    BYTE PTR [rax],ah
   140009e75:	add    BYTE PTR [rsi+0x0],ch
   140009e78:	add    BYTE PTR gs:[rdi+0x0],dh
   140009e7c:	or     al,BYTE PTR [rax]
   140009e7e:	add    BYTE PTR [rax],al
   140009e80:	pop    rsp
   140009e81:	add    BYTE PTR [rdi+0x0],dl
   140009e84:	imul   eax,DWORD PTR [rax],0x64006e
   140009e8a:	outs   dx,DWORD PTR ds:[rsi]
   140009e8b:	add    BYTE PTR [rdi+0x0],dh
   140009e8e:	jae    0x140009e90
	...
   140009ea0:	push   rbx
   140009ea1:	movsxd edi,DWORD PTR [rdx+0x41]
   140009ea4:	ins    BYTE PTR es:[rdi],dx
   140009ea5:	ins    BYTE PTR es:[rdi],dx
   140009ea6:	outs   dx,DWORD PTR ds:[rsi]
   140009ea7:	movsxd eax,DWORD PTR [rbx+0x6f]
   140009eaa:	outs   dx,BYTE PTR ds:[rsi]
   140009eab:	movsxd esp,DWORD PTR [rcx+0x74]
   140009eae:	xor    dl,BYTE PTR [rbx+0x7a]
   140009eb1:	sub    BYTE PTR [rdi+0x6c],cl
   140009eb4:	fs push rdi
   140009eb6:	imul   ebp,DWORD PTR [rsi+0x64],0x472e7269
   140009ebd:	gs je  0x140009f09
   140009ec0:	outs   dx,BYTE PTR ds:[rsi]
   140009ec1:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   140009ec9:	jb     0x140009ef3
   140009ecb:	sub    DWORD PTR [rax+riz*1],ebp
   140009ece:	jae    0x140009f4a
   140009ed0:	push   rdi
   140009ed1:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140009ed8:	outs   dx,DWORD PTR ds:[rsi]
   140009ed9:	je     0x140009f2a
   140009edb:	ins    BYTE PTR es:[rdi],dx
   140009edc:	fs sub al,0x20
   140009edf:	rex.WR and r11b,BYTE PTR [rsp+rbx*2+0x57]
   140009ee4:	imul   ebp,DWORD PTR [rsi+0x64],0x2273776f
   140009eeb:	sub    DWORD PTR [rax],eax
   140009eed:	add    BYTE PTR [rax],al
   140009eef:	add    BYTE PTR [rsi+0x0],al
   140009ef2:	imul   eax,DWORD PTR [rax],0x69006e
   140009ef8:	jae    0x140009efa
   140009efa:	push   0x64006500
   140009eff:	add    BYTE PTR [rax],ah
   140009f01:	add    BYTE PTR [rbx+0x0],dh
   140009f04:	je     0x140009f06
   140009f06:	(bad)  
   140009f07:	add    BYTE PTR [rdi+0x0],ah
   140009f0a:	imul   eax,DWORD PTR [rax],0x67006e
   140009f10:	and    BYTE PTR [rax],al
   140009f12:	(bad)  
   140009f13:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009f17:	add    BYTE PTR [rax],ah
   140009f19:	add    BYTE PTR [rax+0x0],dh
   140009f1c:	(bad)  
   140009f1d:	add    BYTE PTR [rbx+0x0],ah
   140009f20:	imul   eax,DWORD PTR [rax],0x61
   140009f23:	add    BYTE PTR [rdi+0x0],ah
   140009f26:	add    BYTE PTR gs:[rbx+0x0],dh
   140009f2a:	sub    al,0x0
   140009f2c:	and    BYTE PTR [rax],al
   140009f2e:	movsxd eax,DWORD PTR [rax]
   140009f30:	ins    BYTE PTR es:[rdi],dx
   140009f31:	add    BYTE PTR [rbp+0x0],ah
   140009f34:	(bad)  
   140009f35:	add    BYTE PTR [rsi+0x0],ch
   140009f38:	imul   eax,DWORD PTR [rax],0x67006e
   140009f3e:	and    BYTE PTR [rax],al
   140009f40:	jne    0x140009f42
   140009f42:	jo     0x140009f44
   140009f44:	add    BYTE PTR [rax],al
   140009f46:	add    BYTE PTR [rax],al
   140009f48:	ja     0x140009fb7
   140009f4a:	(bad)  
   140009f4b:	imul   ebp,DWORD PTR [rsi+0x0],0x72610000
   140009f52:	movsxd esp,DWORD PTR [eax]
   140009f55:	ds cmp eax,0x3320
   140009f5b:	add    BYTE PTR [rax],al
   140009f5d:	add    BYTE PTR [rax],al
   140009f5f:	add    BYTE PTR [rdx],bh
   140009f61:	cmp    al,BYTE PTR [rbx+0x6f]
   140009f64:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009f66:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009f6e:	rex.RB js 0x140009f99
   140009f71:	xor    BYTE PTR [rax+riz*1],ch
   140009f74:	rex.XB
   140009f75:	rex.WRXB
   140009f76:	rex.WB
   140009f77:	rex.WRX
   140009f78:	rex.WB push r12
   140009f7a:	pop    rdi
   140009f7b:	rex.WRB push r13
   140009f7d:	rex.WR push rsp
   140009f7f:	rex.WB push r12
   140009f81:	rex.W push rdx
   140009f83:	rex.RB
   140009f84:	rex.B
   140009f85:	rex.R
   140009f86:	rex.RB
   140009f87:	sub    DWORD PTR [rax],r8d
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	add    BYTE PTR [rax],al
   140009f8e:	add    BYTE PTR [rax],al
   140009f90:	cmp    bh,BYTE PTR [rdx]
   140009f92:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009f94:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009f96:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009f9e:	push   rbx
   140009f9f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009fa3:	imul   esi,DWORD PTR [rcx+rdi*2+0x28],0x2d202c30
   140009fab:	xor    DWORD PTR [rax+riz*1],ebp
   140009fae:	xor    BYTE PTR [rax+riz*1],ch
   140009fb1:	xor    BYTE PTR [rax+riz*1],ch
   140009fb4:	xor    eax,0x2c33202c
   140009fb9:	and    BYTE PTR [rax],dh
   140009fbb:	sub    al,0x20
   140009fbd:	rex.RB
   140009fbe:	rex.WRXB
   140009fbf:	rex.B
   140009fc0:	rex.XB pop r15
   140009fc2:	rex.WRX
   140009fc3:	rex.WRXB
   140009fc4:	rex.WRX
   140009fc5:	and    BYTE PTR [r8+riz*1],r13b
   140009fc9:	xor    BYTE PTR [rcx],ch
   140009fcb:	add    BYTE PTR [rax],al
   140009fcd:	add    BYTE PTR [rax],al
   140009fcf:	add    BYTE PTR [rax+rax*1+0x49],bl
   140009fd3:	add    BYTE PTR [rsi+0x0],ch
   140009fd6:	jae    0x140009fd8
   140009fd8:	je     0x140009fda
   140009fda:	(bad)  
   140009fdb:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009fdf:	add    BYTE PTR [rbp+0x0],ah
   140009fe2:	jb     0x140009fe4
   140009fe4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140009fe8:	add    BYTE PTR [esi],ch
   140009feb:	add    BYTE PTR [rax+rax*1+0x78],dh
   140009fef:	add    BYTE PTR [rax+rax*1+0x0],dh
	...
   140009fff:	add    BYTE PTR [rbx+0x63],dl
   14000a002:	jp     0x14000a045
   14000a004:	ins    BYTE PTR es:[rdi],dx
   14000a005:	ins    BYTE PTR es:[rdi],dx
   14000a006:	outs   dx,DWORD PTR ds:[rsi]
   14000a007:	movsxd eax,DWORD PTR [rbx+0x6f]
   14000a00a:	outs   dx,BYTE PTR ds:[rsi]
   14000a00b:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a00e:	xor    dl,BYTE PTR [rbx+0x7a]
   14000a011:	sub    BYTE PTR [rdi+rbp*2+0x67],cl
   14000a015:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x2e687461
   14000a01e:	rex.RXB
   14000a01f:	gs je  0x14000a06b
   14000a022:	outs   dx,BYTE PTR ds:[rsi]
   14000a023:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   14000a02b:	jb     0x14000a055
   14000a02d:	sub    DWORD PTR [rax+riz*1],ebp
   14000a030:	jae    0x14000a0ac
   14000a032:	push   rdi
   14000a033:	outs   dx,DWORD PTR ds:[rsi]
   14000a034:	jb     0x14000a0a1
   14000a036:	imul   ebp,DWORD PTR [rsi+0x67],0x224c202c
   14000a03d:	pop    rsp
   14000a03e:	pop    rsp
   14000a03f:	and    ah,BYTE PTR [rax]
   14000a041:	rex.WR and r9b,BYTE PTR [rcx+0x6e]
   14000a045:	jae    0x14000a0bb
   14000a047:	(bad)  
   14000a048:	ins    BYTE PTR es:[rdi],dx
   14000a049:	ins    BYTE PTR es:[rdi],dx
   14000a04a:	gs jb  0x14000a099
   14000a04d:	outs   dx,DWORD PTR ds:[rsi]
   14000a04e:	addr32 cs je 0x14000a0ca
   14000a052:	je     0x14000a076
   14000a054:	sub    DWORD PTR [rax],eax
	...
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	push   rax
   14000a061:	add    BYTE PTR [rdx+0x0],dh
   14000a064:	outs   dx,DWORD PTR ds:[rsi]
   14000a065:	add    BYTE PTR [rbx+0x0],ah
   14000a068:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a06c:	jae    0x14000a06e
   14000a06e:	and    BYTE PTR [rax],al
   14000a070:	and    eax,0x20007300
   14000a075:	add    BYTE PTR [rbx+0x0],dh
   14000a078:	je     0x14000a07a
   14000a07a:	(bad)  
   14000a07b:	add    BYTE PTR [rdx+0x0],dh
   14000a07e:	je     0x14000a080
   14000a080:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000a085:	add    BYTE PTR [rdi+0x0],dh
   14000a088:	imul   eax,DWORD PTR [rax],0x680074
   14000a08e:	and    BYTE PTR [rax],al
   14000a090:	push   rdi
   14000a091:	add    BYTE PTR [rcx+0x0],ch
   14000a094:	outs   dx,BYTE PTR ds:[rsi]
   14000a095:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a099:	add    BYTE PTR [rdi+0x0],dh
   14000a09c:	jae    0x14000a09e
   14000a09e:	add    BYTE PTR [rdi+0x0],r13b
   14000a0a2:	je     0x14000a0a4
   14000a0a4:	rex.WRXB add BYTE PTR [r8+r8*1+0x64],r13b
   14000a0a9:	add    BYTE PTR [rip+0x73002500],bh        # 0x1b300c5af
   14000a0af:	add    BYTE PTR [rax+rax*1],ch
   14000a0b2:	and    BYTE PTR [rax],al
   14000a0b4:	push   rdi
   14000a0b5:	add    BYTE PTR [rdi+0x0],ch
   14000a0b8:	jb     0x14000a0ba
   14000a0ba:	imul   eax,DWORD PTR [rax],0x69
   14000a0bd:	add    BYTE PTR [rsi+0x0],ch
   14000a0c0:	add    BYTE PTR [eax+eax*1+0x69],al
   14000a0c5:	add    BYTE PTR [rdx+0x0],dh
   14000a0c8:	cmp    eax,0x73002500
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    BYTE PTR [rsi+0x0],al
   14000a0d2:	(bad)  
   14000a0d3:	add    BYTE PTR [rcx+0x0],ch
   14000a0d6:	ins    BYTE PTR es:[rdi],dx
   14000a0d7:	add    BYTE PTR [rbp+0x0],ah
   14000a0da:	add    BYTE PTR fs:[rax],ah
   14000a0dd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000a0e1:	add    BYTE PTR [rax],ah
   14000a0e3:	add    BYTE PTR [rdx+0x0],dh
   14000a0e6:	add    BYTE PTR gs:[rdi+0x0],ah
   14000a0ea:	imul   eax,DWORD PTR [rax],0x740073
   14000a0f0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a0f4:	and    BYTE PTR [rax],al
   14000a0f6:	jo     0x14000a0f8
   14000a0f8:	jb     0x14000a0fa
   14000a0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000a0fb:	add    BYTE PTR [rbx+0x0],ah
   14000a0fe:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a102:	jae    0x14000a104
   14000a104:	and    BYTE PTR [rax],al
   14000a106:	je     0x14000a108
   14000a108:	outs   dx,DWORD PTR ds:[rsi]
   14000a109:	add    BYTE PTR [rax],ah
   14000a10b:	add    BYTE PTR [rbx+0x0],dh
   14000a10e:	push   0x74007500
   14000a113:	add    BYTE PTR [rax],ah
   14000a115:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a119:	add    BYTE PTR [rdi+0x0],dh
   14000a11c:	outs   dx,BYTE PTR ds:[rsi]
   14000a11d:	add    BYTE PTR [rax],ah
   14000a11f:	add    BYTE PTR [rcx+0x0],ah
   14000a122:	jae    0x14000a124
   14000a124:	(bad)  
   14000a125:	add    BYTE PTR [rax+0x0],dh
   14000a128:	and    BYTE PTR [rax],al
   14000a12a:	outs   dx,DWORD PTR ds:[rsi]
   14000a12b:	add    BYTE PTR [rsi+0x0],ch
   14000a12e:	and    BYTE PTR [rax],al
   14000a130:	jae    0x14000a132
   14000a132:	jns    0x14000a134
   14000a134:	jae    0x14000a136
   14000a136:	je     0x14000a138
   14000a138:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a13c:	and    BYTE PTR [rax],al
   14000a13e:	jae    0x14000a140
   14000a140:	push   0x74007500
   14000a145:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a149:	add    BYTE PTR [rdi+0x0],dh
   14000a14c:	outs   dx,BYTE PTR ds:[rsi]
   14000a14d:	add    BYTE PTR [rdx],bh
   14000a14f:	add    BYTE PTR [rax],ah
   14000a151:	add    BYTE PTR [rax],dh
   14000a153:	add    BYTE PTR [rax+0x0],bh
   14000a156:	and    eax,0x7800
   14000a15b:	add    BYTE PTR [rax],al
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rsi+0x0],al
   14000a162:	(bad)  
   14000a163:	add    BYTE PTR [rcx+0x0],ch
   14000a166:	ins    BYTE PTR es:[rdi],dx
   14000a167:	add    BYTE PTR [rbp+0x0],ah
   14000a16a:	add    BYTE PTR fs:[rax],ah
   14000a16d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000a171:	add    BYTE PTR [rax],ah
   14000a173:	add    BYTE PTR [rdx+0x0],dh
   14000a176:	add    BYTE PTR gs:[rdi+0x0],ah
   14000a17a:	imul   eax,DWORD PTR [rax],0x740073
   14000a180:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a184:	and    BYTE PTR [rax],al
   14000a186:	jo     0x14000a188
   14000a188:	jb     0x14000a18a
   14000a18a:	outs   dx,DWORD PTR ds:[rsi]
   14000a18b:	add    BYTE PTR [rbx+0x0],ah
   14000a18e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a192:	jae    0x14000a194
   14000a194:	and    BYTE PTR [rax],al
   14000a196:	movsxd eax,DWORD PTR [rax]
   14000a198:	outs   dx,DWORD PTR ds:[rsi]
   14000a199:	add    BYTE PTR [rsi+0x0],ch
   14000a19c:	je     0x14000a19e
   14000a19e:	jb     0x14000a1a0
   14000a1a0:	outs   dx,DWORD PTR ds:[rsi]
   14000a1a1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000a1a5:	add    BYTE PTR [rax+0x0],ch
   14000a1a8:	(bad)  
   14000a1a9:	add    BYTE PTR [rsi+0x0],ch
   14000a1ac:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000a1b1:	add    BYTE PTR [rdx+0x0],dh
   14000a1b4:	cmp    al,BYTE PTR [rax]
   14000a1b6:	and    BYTE PTR [rax],al
   14000a1b8:	xor    BYTE PTR [rax],al
   14000a1ba:	js     0x14000a1bc
   14000a1bc:	and    eax,0x7800
   14000a1c1:	add    BYTE PTR [rax],al
   14000a1c3:	add    BYTE PTR [rax],al
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rcx+0x6e],cl
   14000a1ca:	fs gs js 0x14000a1ee
   14000a1ce:	outs   dx,DWORD PTR ds:[rsi]
   14000a1cf:	jne    0x14000a245
   14000a1d1:	and    BYTE PTR [rdi+0x66],ch
   14000a1d4:	and    BYTE PTR [rdx+0x6f],ah
   14000a1d7:	jne    0x14000a247
   14000a1d9:	fs add BYTE PTR cs:[rax],al
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500eae5
   14000a1e5:	add    BYTE PTR [rcx],cl
   14000a1e7:	add    BYTE PTR [rax],ah
   14000a1e9:	add    BYTE PTR [rip+0x7300],ah        # 0x1400114ef
   14000a1ef:	add    BYTE PTR [rax+0x43],dh
   14000a1f2:	outs   dx,DWORD PTR ds:[rsi]
   14000a1f3:	jo     0x14000a26e
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    BYTE PTR [rsi+0x6f],ch
   14000a1fa:	je     0x14000a21c
   14000a1fc:	outs   dx,BYTE PTR gs:[rsi]
   14000a1fe:	outs   dx,DWORD PTR ds:[rsi]
   14000a1ff:	jne    0x14000a268
   14000a201:	push   0x6d656d20
   14000a206:	outs   dx,DWORD PTR ds:[rsi]
   14000a207:	jb     0x14000a282
   14000a209:	and    BYTE PTR [rdx+rsi*2+0x79],dh
   14000a20d:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14000a214:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x6e]
   14000a218:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
   14000a21d:	and    BYTE PTR [rcx+0x72],ah
   14000a220:	jb     0x14000a283
   14000a222:	jns    0x14000a224
   14000a224:	add    BYTE PTR [rax],al
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a22c:	data16 add BYTE PTR [rdi+0x0],ch
   14000a230:	and    BYTE PTR [rax],al
   14000a232:	and    BYTE PTR [rax],al
   14000a234:	and    BYTE PTR [rax],al
   14000a236:	and    BYTE PTR [rax],al
   14000a238:	and    BYTE PTR [rax],al
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	push   rdi
   14000a241:	add    BYTE PTR [rcx+0x0],ah
   14000a244:	jb     0x14000a246
   14000a246:	outs   dx,BYTE PTR ds:[rsi]
   14000a247:	add    BYTE PTR [rcx+0x0],ch
   14000a24a:	outs   dx,BYTE PTR ds:[rsi]
   14000a24b:	add    BYTE PTR [rdi+0x0],ah
   14000a24e:	and    BYTE PTR [rax],al
   14000a250:	and    BYTE PTR [rax],al
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	add    BYTE PTR [r10+0x0],r14b
   14000a25c:	jb     0x14000a25e
   14000a25e:	outs   dx,DWORD PTR ds:[rsi]
   14000a25f:	add    BYTE PTR [rdx+0x0],dh
   14000a262:	and    BYTE PTR [rax],al
   14000a264:	and    BYTE PTR [rax],al
   14000a266:	and    BYTE PTR [rax],al
   14000a268:	and    BYTE PTR [rax],al
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	push   rbp
   14000a271:	add    BYTE PTR [rsi+0x0],ch
   14000a274:	imul   eax,DWORD PTR [rax],0x6e
   14000a277:	add    BYTE PTR [rdi+0x0],ch
   14000a27a:	ja     0x14000a27c
   14000a27c:	outs   dx,BYTE PTR ds:[rsi]
   14000a27d:	add    BYTE PTR [rax+rax*1+0x76],cl
   14000a281:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400d295
   14000a295:	add    BYTE PTR [rax+0x0],ch
   14000a298:	add    BYTE PTR fs:[rip+0x30002500],ch        # 0x17000c79f
   14000a29f:	add    BYTE PTR [rdx],dh
   14000a2a1:	add    BYTE PTR [rax+0x0],ch
   14000a2a4:	add    BYTE PTR fs:[rip+0x30002500],ch        # 0x17000c7ab
   14000a2ab:	add    BYTE PTR [rdx],dh
   14000a2ad:	add    BYTE PTR [rax+0x0],ch
   14000a2b0:	add    BYTE PTR fs:[rax],ah
   14000a2b3:	add    BYTE PTR [rip+0x32003000],ah        # 0x17200d2b9
   14000a2b9:	add    BYTE PTR [rax+0x0],ch
   14000a2bc:	add    BYTE PTR fs:[rdx],bh
   14000a2bf:	add    BYTE PTR [rip+0x32003000],ah        # 0x17200d2c5
   14000a2c5:	add    BYTE PTR [rax+0x0],ch
   14000a2c8:	add    BYTE PTR fs:[rdx],bh
   14000a2cb:	add    BYTE PTR [rip+0x32003000],ah        # 0x17200d2d1
   14000a2d1:	add    BYTE PTR [rax+0x0],ch
   14000a2d4:	add    BYTE PTR fs:[rax],ah
   14000a2d7:	add    BYTE PTR [rdi+0x0],al
   14000a2da:	rex.WRB add BYTE PTR [r8+rax*1+0x2c],r10b
   14000a2df:	add    BYTE PTR [rax],ah
   14000a2e1:	add    BYTE PTR [rip+0x20007300],ah        # 0x1600115e7
   14000a2e7:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a0115ed
   14000a2ed:	add    BYTE PTR [rax],al
   14000a2ef:	add    BYTE PTR [rcx+0x0],ah
   14000a2f2:	sub    eax,DWORD PTR [rax]
   14000a2f4:	je     0x14000a2f6
   14000a2f6:	movsxd eax,DWORD PTR [rax]
	...
   14000a300:	pop    rcx
   14000a301:	sbb    edi,DWORD PTR [rax]
   14000a303:	or     DWORD PTR [rdx-0x5eee266e],edx
   14000a309:	scas   al,BYTE PTR es:[rdi]
   14000a30a:	add    BYTE PTR [rax],cl
   14000a30c:	je     0x14000a35d
   14000a30e:	jl     0x14000a356
   14000a310:	jae    0x14000a38c
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	add    BYTE PTR [rax],al
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000a31f:	ins    BYTE PTR es:[rdi],dx
   14000a320:	pop    rsp
   14000a321:	rex.X (bad) 
   14000a323:	jae    0x14000a38a
   14000a325:	pop    rsp
   14000a326:	imul   ebp,DWORD PTR [rsi+0x63],0x7362435c
   14000a32d:	push   rbx
   14000a32e:	je     0x14000a3a2
   14000a330:	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
   14000a337:	jns    0x14000a367
   14000a339:	push   0x0
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	rex.RX (bad) 
   14000a342:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000a34a:	fs jne 0x14000a3bd
   14000a34d:	ins    BYTE PTR es:[rdi],dx
   14000a34e:	imul   esp,DWORD PTR [rbx+0x61],0x73206574
   14000a355:	jp     0x14000a357
   14000a357:	add    BYTE PTR [rbp+0x5f],ch
   14000a35a:	jne    0x14000a3c8
   14000a35c:	push   rbx
   14000a35d:	imul   edi,DWORD PTR [rdx+0x65],0x203d3d20
   14000a364:	xor    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000a36f:	ins    BYTE PTR es:[rdi],dx
   14000a370:	pop    rsp
   14000a371:	rex.X (bad) 
   14000a373:	jae    0x14000a3da
   14000a375:	pop    rsp
   14000a376:	imul   ebp,DWORD PTR [rsi+0x63],0x7362435c
   14000a37d:	rex.B jb 0x14000a3f2
   14000a380:	(bad)  
   14000a381:	jns    0x14000a3b1
   14000a383:	push   0x0
   14000a388:	rex.B jb 0x14000a3fd
   14000a38b:	(bad)  
   14000a38c:	jns    0x14000a3ae
   14000a38e:	jae    0x14000a3f9
   14000a390:	jp     0x14000a3f7
   14000a392:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000a396:	and    BYTE PTR [rdx+0x69],ah
   14000a399:	add    BYTE PTR [eax],al
   14000a39c:	add    BYTE PTR [rax],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14000a3a2:	and    BYTE PTR [rcx+0x6c],ah
   14000a3a5:	ins    BYTE PTR es:[rdi],dx
   14000a3a6:	outs   dx,DWORD PTR ds:[rsi]
   14000a3a7:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a3aa:	imul   ebp,DWORD PTR [rsi+0x67],0x73626320
   14000a3b1:	and    BYTE PTR [rcx+0x72],ah
   14000a3b4:	jb     0x14000a417
   14000a3b6:	jns    0x14000a3b8
   14000a3b8:	rex.RX (bad) 
   14000a3ba:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x736e6920
   14000a3c2:	gs jb  0x14000a439
   14000a3c5:	imul   ebp,DWORD PTR [rsi+0x67],0x656c6520
   14000a3cc:	ins    DWORD PTR es:[rdi],dx
   14000a3cd:	outs   dx,BYTE PTR gs:[rsi]
   14000a3cf:	je     0x14000a3f1
   14000a3d1:	imul   ebp,DWORD PTR [rdi+0x20],0x20736263
   14000a3d8:	(bad)  
   14000a3d9:	jb     0x14000a44d
   14000a3db:	(bad)  
   14000a3dc:	jns    0x14000a3de
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	rex.RX (bad) 
   14000a3e2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x64646120
   14000a3ea:	imul   ebp,DWORD PTR [rsi+0x67],0x656c6520
   14000a3f1:	ins    DWORD PTR es:[rdi],dx
   14000a3f2:	outs   dx,BYTE PTR gs:[rsi]
   14000a3f4:	je     0x14000a416
   14000a3f6:	je     0x14000a467
   14000a3f8:	and    BYTE PTR [rbx+0x62],ah
   14000a3fb:	jae    0x14000a41d
   14000a3fd:	(bad)  
   14000a3fe:	jb     0x14000a472
   14000a400:	(bad)  
   14000a401:	jns    0x14000a403
   14000a403:	add    BYTE PTR [rax],al
   14000a405:	add    BYTE PTR [rax],al
   14000a407:	add    BYTE PTR [rsi+0x61],al
   14000a40a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000a412:	(bad)  
   14000a413:	fs and BYTE PTR fs:[rax+rbp*2+0x65],dh
   14000a419:	and    BYTE PTR [rsi+0x65],ch
   14000a41c:	ja     0x14000a43e
   14000a41e:	jae    0x14000a494
   14000a420:	jb     0x14000a48b
   14000a422:	outs   dx,BYTE PTR ds:[rsi]
   14000a423:	add    BYTE PTR [eax],al
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a42a:	jbe    0x14000a48d
   14000a42c:	ins    BYTE PTR es:[rdi],dx
   14000a42d:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   14000a435:	outs   dx,BYTE PTR gs:[rsi]
   14000a437:	je     0x14000a459
   14000a439:	jo     0x14000a4ab
   14000a43b:	jbe    0x14000a48c
   14000a43d:	(bad)  
   14000a43e:	push   0x65
   14000a440:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
	...
   14000a450:	rol    BYTE PTR [rax],0x0
   14000a453:	add    BYTE PTR [rax],al
   14000a455:	add    BYTE PTR [rax],al
   14000a457:	rex.RX imul r13d,DWORD PTR [rsi+0x74],0x616e7265
   14000a45f:	ins    BYTE PTR es:[rdi],dx
   14000a460:	pop    rsp
   14000a461:	rex.X (bad) 
   14000a463:	jae    0x14000a4ca
   14000a465:	pop    rsp
   14000a466:	imul   ebp,DWORD PTR [rsi+0x63],0x676f4c5c
   14000a46d:	rex.B
   14000a46e:	fs (bad) 
   14000a470:	jo     0x14000a4e6
   14000a472:	gs jb  0x14000a4a3
   14000a475:	push   0x6f4c0000
   14000a47a:	addr32 rex.B
   14000a47c:	fs (bad) 
   14000a47e:	jo     0x14000a4f4
   14000a480:	gs jb  0x14000a4bd
   14000a483:	cmp    cl,BYTE PTR [rdi+rbp*2+0x67]
   14000a487:	addr32 gs jb 0x14000a4c5
   14000a48b:	cmp    cl,BYTE PTR [rdi+rbp*2+0x67]
   14000a48f:	add    BYTE PTR [rax+rbp*2+0x69],dh
   14000a493:	jae    0x14000a4c2
   14000a495:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a498:	je     0x14000a4ff
   14000a49a:	jb     0x14000a50a
   14000a49c:	(bad)  
   14000a49d:	ins    BYTE PTR es:[rdi],dx
   14000a49e:	push   rdi
   14000a49f:	jb     0x14000a50a
   14000a4a1:	je     0x14000a508
   14000a4a3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a4a5:	sub    BYTE PTR [ebp+eiz*2+0x76],ch
   14000a4aa:	gs ins BYTE PTR es:[rdi],dx
   14000a4ac:	sub    al,0x20
   14000a4ae:	rex.WRB
   14000a4af:	gs jae 0x14000a525
   14000a4b2:	(bad)  
   14000a4b3:	addr32 gs rex.X jne 0x14000a51e
   14000a4b8:	data16 gs jb 0x14000a4e5
   14000a4bc:	add    BYTE PTR [rax],al
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	(bad)  
   14000a4c2:	jae    0x14000a529
   14000a4c4:	pop    rsp
   14000a4c5:	jb     0x14000a52c
   14000a4c7:	ins    BYTE PTR es:[rdi],dx
   14000a4c8:	imul   esp,DWORD PTR [rcx+0x62],0x74696c69
   14000a4cf:	jns    0x14000a52d
   14000a4d1:	jb     0x14000a538
   14000a4d3:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000a4d6:	gs jb  0x14000a552
   14000a4d9:	pop    rsp
   14000a4da:	jo     0x14000a548
   14000a4dc:	jne    0x14000a545
   14000a4de:	imul   ebp,DWORD PTR [rsi+0x73],0x7362635c
   14000a4e5:	pop    rsp
   14000a4e6:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14000a4ed:	gs jb  0x14000a54c
   14000a4f0:	jb     0x14000a557
   14000a4f2:	je     0x14000a566
   14000a4f4:	jns    0x14000a524
   14000a4f6:	movsxd esi,DWORD PTR [rax+0x70]
   14000a4f9:	add    BYTE PTR [rax],al
   14000a4fb:	add    BYTE PTR [rax],al
   14000a4fd:	add    BYTE PTR [rax],al
   14000a4ff:	add    BYTE PTR [rsi+0x69],al
   14000a502:	outs   dx,BYTE PTR ds:[rsi]
   14000a503:	(bad)  
   14000a504:	ins    BYTE PTR es:[rdi],dx
   14000a505:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a507:	gs (bad) 
   14000a509:	outs   dx,BYTE PTR ds:[rsi]
   14000a50a:	jne    0x14000a57c
   14000a50c:	add    BYTE PTR [rax],al
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000a514:	outs   dx,BYTE PTR ds:[rsi]
   14000a515:	add    BYTE PTR [rcx+0x0],ah
   14000a518:	ins    BYTE PTR es:[rdi],dx
   14000a519:	add    BYTE PTR [rbx+0x0],al
   14000a51c:	ins    BYTE PTR es:[rdi],dx
   14000a51d:	add    BYTE PTR [rbp+0x0],ah
   14000a520:	(bad)  
   14000a521:	add    BYTE PTR [rsi+0x0],ch
   14000a524:	jne    0x14000a526
   14000a526:	jo     0x14000a528
   14000a528:	and    BYTE PTR [rax],al
   14000a52a:	outs   dx,DWORD PTR ds:[rsi]
   14000a52b:	add    BYTE PTR [rsi+0x0],ch
   14000a52e:	and    BYTE PTR [rax],al
   14000a530:	ins    BYTE PTR es:[rdi],dx
   14000a531:	add    BYTE PTR [rcx+0x0],ah
   14000a534:	jae    0x14000a536
   14000a536:	je     0x14000a538
   14000a538:	and    BYTE PTR [rax],al
   14000a53a:	jb     0x14000a53c
   14000a53c:	jne    0x14000a53e
   14000a53e:	outs   dx,BYTE PTR ds:[rsi]
   14000a53f:	add    BYTE PTR [rax],ah
   14000a541:	add    BYTE PTR [rcx+0x0],ch
   14000a544:	jae    0x14000a546
   14000a546:	and    BYTE PTR [rax],al
   14000a548:	add    BYTE PTR fs:[rbp+0x0],ah
   14000a54c:	ins    BYTE PTR es:[rdi],dx
   14000a54d:	add    BYTE PTR [rbp+0x0],ah
   14000a550:	je     0x14000a552
   14000a552:	imul   eax,DWORD PTR [rax],0x67006e
   14000a558:	and    BYTE PTR [rax],al
   14000a55a:	ja     0x14000a55c
   14000a55c:	outs   dx,DWORD PTR ds:[rsi]
   14000a55d:	add    BYTE PTR [rdx+0x0],dh
   14000a560:	imul   eax,DWORD PTR [rax],0x69
   14000a563:	add    BYTE PTR [rsi+0x0],ch
   14000a566:	add    BYTE PTR [eax],ah
   14000a569:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000a56d:	add    BYTE PTR [rax+rax*1+0x61],dh
	...
   14000a57d:	add    BYTE PTR [rax],al
   14000a57f:	add    BYTE PTR [rbx+0x0],al
   14000a582:	push   0x63006500
   14000a587:	add    BYTE PTR [rbx+0x0],ch
   14000a58a:	and    BYTE PTR [rax],al
   14000a58c:	data16 add BYTE PTR [rdi+0x0],ch
   14000a590:	jb     0x14000a592
   14000a592:	and    BYTE PTR [rax],al
   14000a594:	push   rdi
   14000a595:	add    BYTE PTR [rcx+0x0],ch
   14000a598:	outs   dx,BYTE PTR ds:[rsi]
   14000a599:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a59d:	add    BYTE PTR [rdi+0x0],dh
   14000a5a0:	jae    0x14000a5a2
   14000a5a2:	and    BYTE PTR [rax],al
   14000a5a4:	jne    0x14000a5a6
   14000a5a6:	jo     0x14000a5a8
   14000a5a8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a5ac:	je     0x14000a5ae
   14000a5ae:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a5b2:	and    BYTE PTR [rax],al
   14000a5b4:	data16 add BYTE PTR [rcx+0x0],ah
   14000a5b8:	imul   eax,DWORD PTR [rax],0x65006c
   14000a5be:	add    BYTE PTR fs:[rdx],bh
   14000a5c1:	add    BYTE PTR [rax],ah
   14000a5c3:	add    BYTE PTR [rax],dh
   14000a5c5:	add    BYTE PTR [rax+0x0],bh
   14000a5c8:	and    eax,0x7800
   14000a5cd:	add    BYTE PTR [rax],al
   14000a5cf:	add    BYTE PTR [rbx+0x0],al
   14000a5d2:	push   0x63006500
   14000a5d7:	add    BYTE PTR [rbx+0x0],ch
   14000a5da:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000a5df:	add    BYTE PTR [rsi+0x0],ah
   14000a5e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a5e3:	add    BYTE PTR [rdx+0x0],dh
   14000a5e6:	and    BYTE PTR [rax],al
   14000a5e8:	push   rdi
   14000a5e9:	add    BYTE PTR [rcx+0x0],ch
   14000a5ec:	outs   dx,BYTE PTR ds:[rsi]
   14000a5ed:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a5f1:	add    BYTE PTR [rdi+0x0],dh
   14000a5f4:	jae    0x14000a5f6
   14000a5f6:	and    BYTE PTR [rax],al
   14000a5f8:	jne    0x14000a5fa
   14000a5fa:	jo     0x14000a5fc
   14000a5fc:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a600:	je     0x14000a602
   14000a602:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a614:	jne    0x14000a616
   14000a616:	ins    BYTE PTR es:[rdi],dx
   14000a617:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000a61b:	add    BYTE PTR [rsi+0x0],ch
   14000a61e:	outs   dx,DWORD PTR ds:[rsi]
   14000a61f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000a623:	add    BYTE PTR [rcx+0x0],ah
   14000a626:	jae    0x14000a628
   14000a628:	jae    0x14000a62a
   14000a62a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a62e:	je     0x14000a630
   14000a630:	and    BYTE PTR [rax],al
   14000a632:	(bad)  
   14000a633:	add    BYTE PTR [rcx+0x0],ah
   14000a636:	movsxd eax,DWORD PTR [rax]
   14000a638:	imul   eax,DWORD PTR [rax],0x75
   14000a63b:	add    BYTE PTR [rax+0x0],dh
   14000a63e:	sub    eax,0x65007200
   14000a643:	add    BYTE PTR [rbx+0x0],dh
   14000a646:	je     0x14000a648
   14000a648:	outs   dx,DWORD PTR ds:[rsi]
   14000a649:	add    BYTE PTR [rdx+0x0],dh
   14000a64c:	add    BYTE PTR gs:[rdx],bh
   14000a64f:	add    BYTE PTR [rax],ah
   14000a651:	add    BYTE PTR [rax],dh
   14000a653:	add    BYTE PTR [rax+0x0],bh
   14000a656:	and    eax,0x7800
   14000a65b:	add    BYTE PTR [rax],al
   14000a65d:	add    BYTE PTR [rax],al
   14000a65f:	add    BYTE PTR [rcx+0x0],al
   14000a662:	jae    0x14000a664
   14000a664:	jae    0x14000a666
   14000a666:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a66a:	je     0x14000a66c
   14000a66c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000a671:	add    BYTE PTR [rdx+0x0],ah
   14000a674:	(bad)  
   14000a675:	add    BYTE PTR [rbx+0x0],ah
   14000a678:	imul   eax,DWORD PTR [rax],0x75
   14000a67b:	add    BYTE PTR [rax+0x0],dh
   14000a67e:	sub    eax,0x65007200
   14000a683:	add    BYTE PTR [rbx+0x0],dh
   14000a686:	je     0x14000a688
   14000a688:	outs   dx,DWORD PTR ds:[rsi]
   14000a689:	add    BYTE PTR [rdx+0x0],dh
   14000a68c:	add    BYTE PTR gs:[rax],ah
   14000a68f:	add    BYTE PTR [rax+0x0],dh
   14000a692:	jb     0x14000a694
   14000a694:	imul   eax,DWORD PTR [rax],0x690076
   14000a69a:	ins    BYTE PTR es:[rdi],dx
   14000a69b:	add    BYTE PTR [rbp+0x0],ah
   14000a69e:	add    BYTE PTR [ebp+0x0],ah
   14000a6a2:	jae    0x14000a6a4
   14000a6a4:	and    BYTE PTR [rax],al
   14000a6a6:	data16 add BYTE PTR [rdi+0x0],ch
   14000a6aa:	jb     0x14000a6ac
   14000a6ac:	and    BYTE PTR [rax],al
   14000a6ae:	movsxd eax,DWORD PTR [rax]
   14000a6b0:	ins    BYTE PTR es:[rdi],dx
   14000a6b1:	add    BYTE PTR [rbp+0x0],ah
   14000a6b4:	(bad)  
   14000a6b5:	add    BYTE PTR [rsi+0x0],ch
   14000a6b8:	jne    0x14000a6ba
   14000a6ba:	jo     0x14000a6bc
   14000a6bc:	add    BYTE PTR [rax],al
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	push   rbx
   14000a6c1:	movsxd edi,DWORD PTR [rdx+0x41]
   14000a6c4:	ins    BYTE PTR es:[rdi],dx
   14000a6c5:	ins    BYTE PTR es:[rdi],dx
   14000a6c6:	outs   dx,DWORD PTR ds:[rsi]
   14000a6c7:	movsxd eax,DWORD PTR [rsi+0x72]
   14000a6ca:	outs   dx,DWORD PTR ds:[rsi]
   14000a6cb:	ins    DWORD PTR es:[rdi],dx
   14000a6cc:	push   rbx
   14000a6cd:	jp     0x14000a710
   14000a6cf:	outs   dx,BYTE PTR ds:[rsi]
   14000a6d0:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000a6d3:	jae    0x14000a74a
   14000a6d5:	jb     0x14000a73c
   14000a6d7:	rex.X (bad) 
   14000a6d9:	movsxd ebp,DWORD PTR [rbx+0x73]
   14000a6dc:	ins    BYTE PTR es:[rdi],dx
   14000a6dd:	(bad)  
   14000a6de:	jae    0x14000a748
   14000a6e0:	sub    BYTE PTR [rdi+0x69],dl
   14000a6e3:	outs   dx,BYTE PTR ds:[rsi]
   14000a6e4:	outs   dx,DWORD PTR fs:[rsi]
   14000a6e6:	ja     0x14000a75b
   14000a6e8:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a6ea:	je     0x14000a73b
   14000a6ec:	ins    BYTE PTR es:[rdi],dx
   14000a6ed:	fs cs rex.RXB
   14000a6f0:	gs je  0x14000a73c
   14000a6f3:	outs   dx,BYTE PTR ds:[rsi]
   14000a6f4:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   14000a6fc:	jb     0x14000a726
   14000a6fe:	sub    DWORD PTR [rax+riz*1],ebp
   14000a701:	jae    0x14000a77d
   14000a703:	push   rdi
   14000a704:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000a70b:	outs   dx,DWORD PTR ds:[rsi]
   14000a70c:	je     0x14000a75d
   14000a70e:	ins    BYTE PTR es:[rdi],dx
   14000a70f:	sub    DWORD PTR fs:[rax],eax
	...
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	push   rbx
   14000a721:	movsxd edi,DWORD PTR [rdx+0x41]
   14000a724:	ins    BYTE PTR es:[rdi],dx
   14000a725:	ins    BYTE PTR es:[rdi],dx
   14000a726:	outs   dx,DWORD PTR ds:[rsi]
   14000a727:	movsxd eax,DWORD PTR [rbx+0x6f]
   14000a72a:	outs   dx,BYTE PTR ds:[rsi]
   14000a72b:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a72e:	xor    dl,BYTE PTR [rbx+0x7a]
   14000a731:	sub    BYTE PTR [rdi+0x69],dl
   14000a734:	outs   dx,BYTE PTR ds:[rsi]
   14000a735:	outs   dx,DWORD PTR fs:[rsi]
   14000a737:	ja     0x14000a7ac
   14000a739:	push   rdi
   14000a73a:	imul   ebp,DWORD PTR [rsi+0x53],0x61507378
   14000a741:	je     0x14000a7ab
   14000a743:	cs rex.RXB
   14000a745:	gs je  0x14000a791
   14000a748:	outs   dx,BYTE PTR ds:[rsi]
   14000a749:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   14000a751:	jb     0x14000a77b
   14000a753:	sub    DWORD PTR [rax+riz*1],ebp
   14000a756:	push   rdi
   14000a757:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000a75e:	outs   dx,DWORD PTR ds:[rsi]
   14000a75f:	je     0x14000a7b0
   14000a761:	ins    BYTE PTR es:[rdi],dx
   14000a762:	fs sub al,0x20
   14000a765:	push   rdx
   14000a766:	rex.WX push rsi
   14000a768:	pop    rdi
   14000a769:	rex.RX push rdx
   14000a76b:	rex.B
   14000a76c:	rex.WRB
   14000a76d:	rex.RB push r15
   14000a76f:	rex.WRXB push r10
   14000a771:	rex.WXB pop r15
   14000a773:	rex.XB push r11
   14000a775:	rex.WB pop r15
   14000a777:	push   rdi
   14000a778:	rex.WB
   14000a779:	rex.WRX push rbx
   14000a77b:	pop    rax
   14000a77c:	push   rbx
   14000a77d:	pop    rdi
   14000a77e:	rex.R
   14000a77f:	rex.WB push r10
   14000a781:	pop    rdi
   14000a782:	push   rax
   14000a783:	push   r12
   14000a785:	sub    QWORD PTR [rax],rax
	...
   14000a790:	push   rbx
   14000a791:	movsxd edi,DWORD PTR [rdx+0x41]
   14000a794:	ins    BYTE PTR es:[rdi],dx
   14000a795:	ins    BYTE PTR es:[rdi],dx
   14000a796:	outs   dx,DWORD PTR ds:[rsi]
   14000a797:	movsxd eax,DWORD PTR [rbx+0x6f]
   14000a79a:	outs   dx,BYTE PTR ds:[rsi]
   14000a79b:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a79e:	xor    dl,BYTE PTR [rbx+0x7a]
   14000a7a1:	sub    BYTE PTR [rdi+0x69],dl
   14000a7a4:	outs   dx,BYTE PTR ds:[rsi]
   14000a7a5:	outs   dx,DWORD PTR fs:[rsi]
   14000a7a7:	ja     0x14000a81c
   14000a7a9:	push   rbx
   14000a7aa:	gs jb  0x14000a823
   14000a7ad:	imul   esp,DWORD PTR [rbx+0x69],0x6150676e
   14000a7b4:	je     0x14000a81e
   14000a7b6:	cs rex.RXB
   14000a7b8:	gs je  0x14000a804
   14000a7bb:	outs   dx,BYTE PTR ds:[rsi]
   14000a7bc:	imul   esi,DWORD PTR [rax+rdx*2+0x6f],0x65746e69
   14000a7c4:	jb     0x14000a7ee
   14000a7c6:	sub    DWORD PTR [rax+riz*1],ebp
   14000a7c9:	push   rdi
   14000a7ca:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000a7d1:	outs   dx,DWORD PTR ds:[rsi]
   14000a7d2:	je     0x14000a823
   14000a7d4:	ins    BYTE PTR es:[rdi],dx
   14000a7d5:	fs sub al,0x20
   14000a7d8:	push   rdx
   14000a7d9:	rex.WX push rsi
   14000a7db:	pop    rdi
   14000a7dc:	rex.RX push rdx
   14000a7de:	rex.B
   14000a7df:	rex.WRB
   14000a7e0:	rex.RB push r15
   14000a7e2:	rex.WRXB push r10
   14000a7e4:	rex.WXB pop r15
   14000a7e6:	rex.XB
   14000a7e7:	rex.X push rbx
   14000a7e9:	pop    rdi
   14000a7ea:	push   rbx
   14000a7eb:	rex.RB push r10
   14000a7ed:	push   rsi
   14000a7ee:	rex.WB
   14000a7ef:	rex.XB
   14000a7f0:	rex.WB
   14000a7f1:	rex.WRX
   14000a7f2:	rex.RXB pop r15
   14000a7f4:	rex.R
   14000a7f5:	rex.WB push r10
   14000a7f7:	pop    rdi
   14000a7f8:	push   rax
   14000a7f9:	push   r12
   14000a7fb:	sub    QWORD PTR [rax],rax
   14000a7fe:	add    BYTE PTR [rax],al
   14000a800:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a804:	jne    0x14000a806
   14000a806:	ins    BYTE PTR es:[rdi],dx
   14000a807:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000a80b:	add    BYTE PTR [rsi+0x0],ch
   14000a80e:	outs   dx,DWORD PTR ds:[rsi]
   14000a80f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000a813:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a817:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a81b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a81f:	add    BYTE PTR [rax],ah
   14000a821:	add    BYTE PTR [rbx+0x0],dh
   14000a824:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a828:	jbe    0x14000a82a
   14000a82a:	imul   eax,DWORD PTR [rax],0x690063
   14000a830:	outs   dx,BYTE PTR ds:[rsi]
   14000a831:	add    BYTE PTR [rdi+0x0],ah
   14000a834:	and    BYTE PTR [rax],al
   14000a836:	add    BYTE PTR fs:[rcx+0x0],ch
   14000a83a:	jb     0x14000a83c
   14000a83c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a840:	je     0x14000a842
   14000a842:	outs   dx,DWORD PTR ds:[rsi]
   14000a843:	add    BYTE PTR [rdx+0x0],dh
   14000a846:	imul   eax,DWORD PTR [rax],0x730065
   14000a84c:	and    BYTE PTR [rax],al
   14000a84e:	data16 add BYTE PTR [rdx+0x0],dh
   14000a852:	outs   dx,DWORD PTR ds:[rsi]
   14000a853:	add    BYTE PTR [rbp+0x0],ch
   14000a856:	and    BYTE PTR [rax],al
   14000a858:	(bad)  
   14000a859:	add    BYTE PTR [rcx+0x0],ah
   14000a85c:	movsxd eax,DWORD PTR [rax]
   14000a85e:	imul   eax,DWORD PTR [rax],0x75
   14000a861:	add    BYTE PTR [rax+0x0],dh
   14000a864:	and    BYTE PTR [rax],al
   14000a866:	push   rdi
   14000a867:	add    BYTE PTR [rcx+0x0],ch
   14000a86a:	outs   dx,BYTE PTR ds:[rsi]
   14000a86b:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a86f:	add    BYTE PTR [rdi+0x0],dh
   14000a872:	jae    0x14000a874
   14000a874:	and    BYTE PTR [rax],al
   14000a876:	add    BYTE PTR fs:[rcx+0x0],ch
   14000a87a:	jb     0x14000a87c
   14000a87c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a880:	je     0x14000a882
   14000a882:	outs   dx,DWORD PTR ds:[rsi]
   14000a883:	add    BYTE PTR [rdx+0x0],dh
   14000a886:	jns    0x14000a888
   14000a888:	and    BYTE PTR [rax],al
   14000a88a:	and    eax,0x2c007300
   14000a88f:	add    BYTE PTR [rax],ah
   14000a891:	add    BYTE PTR [rdi+0x0],dh
   14000a894:	imul   eax,DWORD PTR [rax],0x6c006c
   14000a89a:	and    BYTE PTR [rax],al
   14000a89c:	jb     0x14000a89e
   14000a89e:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   14000a8a3:	add    BYTE PTR [rcx+0x0],bh
   14000a8a6:	and    BYTE PTR [rax],al
   14000a8a8:	outs   dx,BYTE PTR ds:[rsi]
   14000a8a9:	add    BYTE PTR [rbp+0x0],ah
   14000a8ac:	js     0x14000a8ae
   14000a8ae:	je     0x14000a8b0
   14000a8b0:	and    BYTE PTR [rax],al
   14000a8b2:	je     0x14000a8b4
   14000a8b4:	imul   eax,DWORD PTR [rax],0x65006d
   14000a8ba:	add    BYTE PTR [rax],al
   14000a8bc:	add    BYTE PTR [rax],al
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	rex.X add BYTE PTR [rcx+0x0],spl
   14000a8c4:	movsxd eax,DWORD PTR [rax]
   14000a8c6:	imul   eax,DWORD PTR [rax],0x75
   14000a8c9:	add    BYTE PTR [rax+0x0],dh
   14000a8cc:	and    BYTE PTR [rax],al
   14000a8ce:	push   rdi
   14000a8cf:	add    BYTE PTR [rcx+0x0],ch
   14000a8d2:	outs   dx,BYTE PTR ds:[rsi]
   14000a8d3:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a8d7:	add    BYTE PTR [rdi+0x0],dh
   14000a8da:	jae    0x14000a8dc
   14000a8dc:	and    BYTE PTR [rax],al
   14000a8de:	add    BYTE PTR fs:[rcx+0x0],ch
   14000a8e2:	jb     0x14000a8e4
   14000a8e4:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a8e8:	je     0x14000a8ea
   14000a8ea:	outs   dx,DWORD PTR ds:[rsi]
   14000a8eb:	add    BYTE PTR [rdx+0x0],dh
   14000a8ee:	jns    0x14000a8f0
   14000a8f0:	and    BYTE PTR [rax],al
   14000a8f2:	jae    0x14000a8f4
   14000a8f4:	jne    0x14000a8f6
   14000a8f6:	movsxd eax,DWORD PTR [rax]
   14000a8f8:	movsxd eax,DWORD PTR [rax]
   14000a8fa:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a8fe:	jae    0x14000a900
   14000a900:	data16 add BYTE PTR [rbp+0x0],dh
   14000a904:	ins    BYTE PTR es:[rdi],dx
   14000a905:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000a909:	add    BYTE PTR [rax],ah
   14000a90b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a90f:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a913:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a917:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000a91b:	add    BYTE PTR [rax],al
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rdx+0x0],dl
   14000a922:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a926:	outs   dx,DWORD PTR ds:[rsi]
   14000a927:	add    BYTE PTR [rsi+0x0],dh
   14000a92a:	imul   eax,DWORD PTR [rax],0x67006e
   14000a930:	and    BYTE PTR [rax],al
   14000a932:	jae    0x14000a934
   14000a934:	movsxd eax,DWORD PTR [rax]
   14000a936:	push   0x64006500
   14000a93b:	add    BYTE PTR [rbp+0x0],dh
   14000a93e:	ins    BYTE PTR es:[rdi],dx
   14000a93f:	add    BYTE PTR [rbp+0x0],ah
   14000a942:	add    BYTE PTR fs:[rax],ah
   14000a945:	add    BYTE PTR [rdx+0x0],dh
   14000a948:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a94c:	je     0x14000a94e
   14000a94e:	(bad)  
   14000a94f:	add    BYTE PTR [rdx+0x0],dh
   14000a952:	je     0x14000a954
   14000a954:	and    BYTE PTR [rax],al
   14000a956:	je     0x14000a958
   14000a958:	(bad)  
   14000a959:	add    BYTE PTR [rbx+0x0],dh
   14000a95c:	imul   eax,DWORD PTR [rax],0x20
   14000a95f:	add    BYTE PTR [rsi+0x0],ah
   14000a962:	(bad)  
   14000a963:	add    BYTE PTR [rcx+0x0],ch
   14000a966:	ins    BYTE PTR es:[rdi],dx
   14000a967:	add    BYTE PTR [rbp+0x0],ah
   14000a96a:	add    BYTE PTR fs:[rdx],bh
   14000a96d:	add    BYTE PTR [rax],ah
   14000a96f:	add    BYTE PTR [rax],dh
   14000a971:	add    BYTE PTR [rax+0x0],bh
   14000a974:	and    eax,0x7800
   14000a979:	add    BYTE PTR [rax],al
   14000a97b:	add    BYTE PTR [rax],al
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    BYTE PTR [rdx+0x0],dl
   14000a982:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a986:	outs   dx,DWORD PTR ds:[rsi]
   14000a987:	add    BYTE PTR [rsi+0x0],dh
   14000a98a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000a98f:	add    BYTE PTR [rbx+0x0],dh
   14000a992:	movsxd eax,DWORD PTR [rax]
   14000a994:	push   0x64006500
   14000a999:	add    BYTE PTR [rbp+0x0],dh
   14000a99c:	ins    BYTE PTR es:[rdi],dx
   14000a99d:	add    BYTE PTR [rbp+0x0],ah
   14000a9a0:	add    BYTE PTR fs:[rax],ah
   14000a9a3:	add    BYTE PTR [rdx+0x0],dh
   14000a9a6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a9aa:	je     0x14000a9ac
   14000a9ac:	(bad)  
   14000a9ad:	add    BYTE PTR [rdx+0x0],dh
   14000a9b0:	je     0x14000a9b2
   14000a9b2:	and    BYTE PTR [rax],al
   14000a9b4:	je     0x14000a9b6
   14000a9b6:	(bad)  
   14000a9b7:	add    BYTE PTR [rbx+0x0],dh
   14000a9ba:	imul   eax,DWORD PTR [rax],0x0
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rbx+0x0],al
   14000a9c2:	ins    BYTE PTR es:[rdi],dx
   14000a9c3:	add    BYTE PTR [rbp+0x0],ah
   14000a9c6:	(bad)  
   14000a9c7:	add    BYTE PTR [rsi+0x0],ch
   14000a9ca:	jne    0x14000a9cc
   14000a9cc:	jo     0x14000a9ce
   14000a9ce:	and    BYTE PTR [rax],al
   14000a9d0:	movsxd eax,DWORD PTR [rax]
   14000a9d2:	outs   dx,DWORD PTR ds:[rsi]
   14000a9d3:	add    BYTE PTR [rbp+0x0],ch
   14000a9d6:	jo     0x14000a9d8
   14000a9d8:	ins    BYTE PTR es:[rdi],dx
   14000a9d9:	add    BYTE PTR [rbp+0x0],ah
   14000a9dc:	je     0x14000a9de
   14000a9de:	add    BYTE PTR gs:[rax],al
	...
   14000a9ed:	add    BYTE PTR [rax],al
   14000a9ef:	add    BYTE PTR [rsi+0x0],al
   14000a9f2:	imul   eax,DWORD PTR [rax],0x61006e
   14000a9f8:	ins    BYTE PTR es:[rdi],dx
   14000a9f9:	add    BYTE PTR [rbx+0x0],al
   14000a9fc:	ins    BYTE PTR es:[rdi],dx
   14000a9fd:	add    BYTE PTR [rbp+0x0],ah
   14000aa00:	(bad)  
   14000aa01:	add    BYTE PTR [rsi+0x0],ch
   14000aa04:	jne    0x14000aa06
   14000aa06:	jo     0x14000aa08
   14000aa08:	and    BYTE PTR [rax],al
   14000aa0a:	imul   eax,DWORD PTR [rax],0x200073
   14000aa10:	(bad)  
   14000aa11:	add    BYTE PTR [rax],ah
   14000aa13:	add    BYTE PTR [rsi+0x0],ch
   14000aa16:	outs   dx,DWORD PTR ds:[rsi]
   14000aa17:	add    BYTE PTR [rip+0x70006f00],ch        # 0x1b001191d
   14000aa1d:	add    BYTE PTR [rax],ah
   14000aa1f:	add    BYTE PTR [rcx+0x0],ah
   14000aa22:	jae    0x14000aa24
   14000aa24:	and    BYTE PTR [rax],al
   14000aa26:	imul   eax,DWORD PTR [rax],0x73006e
   14000aa2c:	je     0x14000aa2e
   14000aa2e:	(bad)  
   14000aa2f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000aa33:	add    BYTE PTR [rbp+0x0],ah
   14000aa36:	jb     0x14000aa38
   14000aa38:	and    BYTE PTR [rax],al
   14000aa3a:	ja     0x14000aa3c
   14000aa3c:	imul   eax,DWORD PTR [rax],0x6c006c
   14000aa42:	and    BYTE PTR [rax],al
   14000aa44:	jb     0x14000aa46
   14000aa46:	jne    0x14000aa48
   14000aa48:	outs   dx,BYTE PTR ds:[rsi]
   14000aa49:	add    BYTE PTR [rax],ah
   14000aa4b:	add    BYTE PTR [rcx+0x0],ah
   14000aa4e:	add    BYTE PTR [ecx+0x0],ah
   14000aa52:	imul   eax,DWORD PTR [rax],0x20006e
   14000aa58:	(bad)  
   14000aa59:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000aa5d:	add    BYTE PTR [rbx+0x0],dh
   14000aa60:	je     0x14000aa62
   14000aa62:	(bad)  
   14000aa63:	add    BYTE PTR [rdx+0x0],dh
   14000aa66:	je     0x14000aa68
   14000aa68:	jne    0x14000aa6a
   14000aa6a:	jo     0x14000aa6c
   14000aa6c:	add    BYTE PTR [rax],al
   14000aa6e:	add    BYTE PTR [rax],al
   14000aa70:	push   rdx
   14000aa71:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f467265
   14000aa7a:	jb     0x14000aace
   14000aa7c:	gs je  0x14000aaf1
   14000aa7f:	jns    0x14000aa81
   14000aa81:	add    BYTE PTR [rax],al
   14000aa83:	add    BYTE PTR [rax],al
   14000aa85:	add    BYTE PTR [rax],al
   14000aa87:	add    BYTE PTR [rsi+0x6f],cl
   14000aa8a:	je     0x14000aab9
   14000aa8c:	outs   dx,BYTE PTR ds:[rsi]
   14000aa8d:	jne    0x14000aafb
   14000aa8f:	ins    BYTE PTR es:[rdi],dx
   14000aa90:	and    BYTE PTR [rbx+0x68],ah
   14000aa93:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000aa97:	data16 (bad) 
   14000aa99:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6270203a
   14000aaa1:	push   rbx
   14000aaa2:	je     0x14000ab13
   14000aaa4:	jo     0x14000aaee
   14000aaa6:	gs jb  0x14000ab0e
   14000aaa9:	add    BYTE PTR [rax],al
   14000aaab:	add    BYTE PTR [rax],al
   14000aaad:	add    BYTE PTR [rax],al
   14000aaaf:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000aab3:	add    BYTE PTR [rcx+0x0],ch
   14000aab6:	jae    0x14000aab8
   14000aab8:	and    BYTE PTR [rax],al
   14000aaba:	imul   eax,DWORD PTR [rax],0x200073
   14000aac0:	imul   eax,DWORD PTR [rax],0x76006e
   14000aac6:	outs   dx,DWORD PTR ds:[rsi]
   14000aac7:	add    BYTE PTR [rbx+0x0],ah
   14000aaca:	(bad)  
   14000aacb:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000aacf:	add    BYTE PTR [rdi+0x0],ch
   14000aad2:	outs   dx,BYTE PTR ds:[rsi]
   14000aad3:	add    BYTE PTR [rax],ah
   14000aad5:	add    BYTE PTR [rsi+0x0],ch
   14000aad8:	jne    0x14000aada
   14000aada:	ins    DWORD PTR es:[rdi],dx
   14000aadb:	add    BYTE PTR [rdx+0x0],ah
   14000aade:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aae2:	and    BYTE PTR [rax],al
   14000aae4:	and    eax,0x6400
   14000aae9:	add    BYTE PTR [rax],al
   14000aaeb:	add    BYTE PTR [rax],al
   14000aaed:	add    BYTE PTR [rax],al
   14000aaef:	add    BYTE PTR [rbx+0x0],al
   14000aaf2:	outs   dx,DWORD PTR ds:[rsi]
   14000aaf3:	add    BYTE PTR [rbp+0x0],dh
   14000aaf6:	ins    BYTE PTR es:[rdi],dx
   14000aaf7:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000aafb:	add    BYTE PTR [rsi+0x0],ch
   14000aafe:	outs   dx,DWORD PTR ds:[rsi]
   14000aaff:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ab03:	add    BYTE PTR [rdi+0x0],ah
   14000ab06:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ab0a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ab0e:	(bad)  
   14000ab0f:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab13:	add    BYTE PTR [rax],ah
   14000ab15:	add    BYTE PTR [rbx+0x0],ah
   14000ab18:	ins    BYTE PTR es:[rdi],dx
   14000ab19:	add    BYTE PTR [rbp+0x0],ah
   14000ab1c:	(bad)  
   14000ab1d:	add    BYTE PTR [rsi+0x0],ch
   14000ab20:	jne    0x14000ab22
   14000ab22:	jo     0x14000ab24
   14000ab24:	and    BYTE PTR [rax],al
   14000ab26:	je     0x14000ab28
   14000ab28:	(bad)  
   14000ab29:	add    BYTE PTR [rbx+0x0],dh
   14000ab2c:	imul   eax,DWORD PTR [rax],0x2c
   14000ab2f:	add    BYTE PTR [rax],ah
   14000ab31:	add    BYTE PTR [rdi+0x0],dh
   14000ab34:	imul   eax,DWORD PTR [rax],0x6c006c
   14000ab3a:	and    BYTE PTR [rax],al
   14000ab3c:	movsxd eax,DWORD PTR [rax]
   14000ab3e:	ins    BYTE PTR es:[rdi],dx
   14000ab3f:	add    BYTE PTR [rbp+0x0],ah
   14000ab42:	(bad)  
   14000ab43:	add    BYTE PTR [rsi+0x0],ch
   14000ab46:	jne    0x14000ab48
   14000ab48:	jo     0x14000ab4a
   14000ab4a:	and    BYTE PTR [rax],al
   14000ab4c:	imul   eax,DWORD PTR [rax],0x6d006d
   14000ab52:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   14000ab57:	add    BYTE PTR [rcx+0x0],ah
   14000ab5a:	je     0x14000ab5c
   14000ab5c:	add    BYTE PTR gs:[rax+rax*1+0x79],ch
   14000ab61:	add    BYTE PTR [rdx],bh
   14000ab63:	add    BYTE PTR [rax],ah
   14000ab65:	add    BYTE PTR [rax],dh
   14000ab67:	add    BYTE PTR [rax+0x0],bh
   14000ab6a:	and    eax,0x7800
   14000ab6f:	add    BYTE PTR [rbx+0x0],al
   14000ab72:	outs   dx,DWORD PTR ds:[rsi]
   14000ab73:	add    BYTE PTR [rbp+0x0],dh
   14000ab76:	ins    BYTE PTR es:[rdi],dx
   14000ab77:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ab7b:	add    BYTE PTR [rsi+0x0],ch
   14000ab7e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab7f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ab83:	add    BYTE PTR [rbx+0x0],dh
   14000ab86:	movsxd eax,DWORD PTR [rax]
   14000ab88:	push   0x64006500
   14000ab8d:	add    BYTE PTR [rbp+0x0],dh
   14000ab90:	ins    BYTE PTR es:[rdi],dx
   14000ab91:	add    BYTE PTR [rbp+0x0],ah
   14000ab94:	and    BYTE PTR [rax],al
   14000ab96:	movsxd eax,DWORD PTR [rax]
   14000ab98:	ins    BYTE PTR es:[rdi],dx
   14000ab99:	add    BYTE PTR [rbp+0x0],ah
   14000ab9c:	(bad)  
   14000ab9d:	add    BYTE PTR [rsi+0x0],ch
   14000aba0:	jne    0x14000aba2
   14000aba2:	jo     0x14000aba4
   14000aba4:	and    BYTE PTR [rax],al
   14000aba6:	je     0x14000aba8
   14000aba8:	(bad)  
   14000aba9:	add    BYTE PTR [rbx+0x0],dh
   14000abac:	imul   eax,DWORD PTR [rax],0x2c
   14000abaf:	add    BYTE PTR [rax],ah
   14000abb1:	add    BYTE PTR [rdi+0x0],dh
   14000abb4:	imul   eax,DWORD PTR [rax],0x6c006c
   14000abba:	and    BYTE PTR [rax],al
   14000abbc:	movsxd eax,DWORD PTR [rax]
   14000abbe:	ins    BYTE PTR es:[rdi],dx
   14000abbf:	add    BYTE PTR [rbp+0x0],ah
   14000abc2:	(bad)  
   14000abc3:	add    BYTE PTR [rsi+0x0],ch
   14000abc6:	jne    0x14000abc8
   14000abc8:	jo     0x14000abca
   14000abca:	and    BYTE PTR [rax],al
   14000abcc:	imul   eax,DWORD PTR [rax],0x6d006d
   14000abd2:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   14000abd7:	add    BYTE PTR [rcx+0x0],ah
   14000abda:	je     0x14000abdc
   14000abdc:	add    BYTE PTR gs:[rax+rax*1+0x79],ch
   14000abe1:	add    BYTE PTR [rdx],bh
   14000abe3:	add    BYTE PTR [rax],ah
   14000abe5:	add    BYTE PTR [rax],dh
   14000abe7:	add    BYTE PTR [rax+0x0],bh
   14000abea:	and    eax,0x7800
   14000abef:	add    BYTE PTR [rdx+0x0],dl
   14000abf2:	add    BYTE PTR gs:[rdi+0x0],ah
   14000abf6:	imul   eax,DWORD PTR [rax],0x740073
   14000abfc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ac00:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ac05:	add    BYTE PTR [rsi+0x0],ah
   14000ac08:	outs   dx,DWORD PTR ds:[rsi]
   14000ac09:	add    BYTE PTR [rdx+0x0],dh
   14000ac0c:	and    BYTE PTR [rax],al
   14000ac0e:	jb     0x14000ac10
   14000ac10:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   14000ac15:	add    BYTE PTR [rcx+0x0],bh
   14000ac18:	and    BYTE PTR [rax],al
   14000ac1a:	imul   eax,DWORD PTR [rax],0x20006e
   14000ac20:	movsxd eax,DWORD PTR [rax]
   14000ac22:	(bad)  
   14000ac23:	add    BYTE PTR [rbx+0x0],dh
   14000ac26:	add    BYTE PTR gs:[rax],ah
   14000ac29:	add    BYTE PTR [rdi+0x0],ch
   14000ac2c:	data16 add BYTE PTR [rax],ah
   14000ac2f:	add    BYTE PTR [rsi+0x0],ah
   14000ac32:	(bad)  
   14000ac33:	add    BYTE PTR [rcx+0x0],ch
   14000ac36:	ins    BYTE PTR es:[rdi],dx
   14000ac37:	add    BYTE PTR [rbp+0x0],dh
   14000ac3a:	jb     0x14000ac3c
   14000ac3c:	add    BYTE PTR gs:[rax],al
   14000ac3f:	add    BYTE PTR [rax+rax*1+0x3a],al
   14000ac43:	add    BYTE PTR [rax],ch
   14000ac45:	add    BYTE PTR [rcx+0x0],al
   14000ac48:	cmp    eax,DWORD PTR [rax]
   14000ac4a:	rex.WRXB add BYTE PTR [r9+0x0],r9b
   14000ac4e:	rex.XB add BYTE PTR [r9+0x0],cl
   14000ac52:	cmp    eax,DWORD PTR [rax]
   14000ac54:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000ac58:	cmp    eax,DWORD PTR [rax]
   14000ac5a:	cmp    eax,DWORD PTR [rax]
   14000ac5c:	cmp    eax,DWORD PTR [rax]
   14000ac5e:	rex.X add BYTE PTR [rcx+0x0],al
   14000ac62:	sub    DWORD PTR [rax],eax
   14000ac64:	sub    BYTE PTR [rax],al
   14000ac66:	add    BYTE PTR [r11],dil
   14000ac69:	add    BYTE PTR [rdi+0x0],cl
   14000ac6c:	rex.WB add BYTE PTR [r11+0x0],al
   14000ac70:	rex.WB add BYTE PTR [r11],dil
   14000ac73:	add    BYTE PTR [rsi+0x0],al
   14000ac76:	add    BYTE PTR [r11],dil
   14000ac79:	add    BYTE PTR [rbx],bh
   14000ac7b:	add    BYTE PTR [rbx],bh
   14000ac7d:	add    BYTE PTR [rdx+0x0],al
   14000ac80:	rex.WRXB add BYTE PTR [r9],r13b
   14000ac83:	add    BYTE PTR [rax],ch
   14000ac85:	add    BYTE PTR [rcx+0x0],al
   14000ac88:	cmp    eax,DWORD PTR [rax]
   14000ac8a:	rex.WRXB add BYTE PTR [r9+0x0],r9b
   14000ac8e:	rex.XB add BYTE PTR [r9+0x0],cl
   14000ac92:	cmp    eax,DWORD PTR [rax]
   14000ac94:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000ac98:	cmp    eax,DWORD PTR [rax]
   14000ac9a:	cmp    eax,DWORD PTR [rax]
   14000ac9c:	cmp    eax,DWORD PTR [rax]
   14000ac9e:	push   rbx
   14000ac9f:	add    BYTE PTR [rcx+0x0],bl
   14000aca2:	sub    DWORD PTR [rax],eax
   14000aca4:	sub    BYTE PTR [rax],al
   14000aca6:	add    BYTE PTR [r11],dil
   14000aca9:	add    BYTE PTR [rdi+0x0],cl
   14000acac:	rex.WB add BYTE PTR [r11+0x0],al
   14000acb0:	rex.WB add BYTE PTR [r11],dil
   14000acb3:	add    BYTE PTR [rsi+0x0],al
   14000acb6:	add    BYTE PTR [r11],dil
   14000acb9:	add    BYTE PTR [rbx],bh
   14000acbb:	add    BYTE PTR [rbx],bh
   14000acbd:	add    BYTE PTR [rcx+0x0],al
   14000acc0:	push   rbp
   14000acc1:	add    BYTE PTR [rcx],ch
	...
   14000accf:	add    BYTE PTR [rax+rax*1],bh
   14000acd2:	push   rsp
   14000acd3:	add    BYTE PTR [rcx+0x0],ah
   14000acd6:	jae    0x14000acd8
   14000acd8:	imul   eax,DWORD PTR [rax],0x20
   14000acdb:	add    BYTE PTR [rax+0x0],bh
   14000acde:	ins    DWORD PTR es:[rdi],dx
   14000acdf:	add    BYTE PTR [rax+rax*1+0x6e],ch
   14000ace3:	add    BYTE PTR [rbx+0x0],dh
   14000ace6:	cmp    eax,0x68002200
   14000aceb:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000acef:	add    BYTE PTR [rax+0x0],dh
   14000acf2:	cmp    al,BYTE PTR [rax]
   14000acf4:	(bad)  
   14000acf5:	add    BYTE PTR [rdi],ch
   14000acf7:	add    BYTE PTR [rbx+0x0],dh
   14000acfa:	movsxd eax,DWORD PTR [rax]
   14000acfc:	push   0x6d006500
   14000ad01:	add    BYTE PTR [rcx+0x0],ah
   14000ad04:	jae    0x14000ad06
   14000ad06:	add    BYTE PTR cs:[rbp+0x0],ch
   14000ad0a:	imul   eax,DWORD PTR [rax],0x720063
   14000ad10:	outs   dx,DWORD PTR ds:[rsi]
   14000ad11:	add    BYTE PTR [rbx+0x0],dh
   14000ad14:	outs   dx,DWORD PTR ds:[rsi]
   14000ad15:	add    BYTE PTR [rsi+0x0],ah
   14000ad18:	je     0x14000ad1a
   14000ad1a:	add    BYTE PTR cs:[rbx+0x0],ah
   14000ad1e:	outs   dx,DWORD PTR ds:[rsi]
   14000ad1f:	add    BYTE PTR [rbp+0x0],ch
   14000ad22:	(bad)  
   14000ad23:	add    BYTE PTR [rdi+0x0],dh
   14000ad26:	imul   eax,DWORD PTR [rax],0x64006e
   14000ad2c:	outs   dx,DWORD PTR ds:[rsi]
   14000ad2d:	add    BYTE PTR [rdi+0x0],dh
   14000ad30:	jae    0x14000ad32
   14000ad32:	(bad)  
   14000ad33:	add    BYTE PTR [rdx],dh
   14000ad35:	add    BYTE PTR [rax],dh
   14000ad37:	add    BYTE PTR [rax],dh
   14000ad39:	add    BYTE PTR [rax+rax*1],dh
   14000ad3c:	(bad)  
   14000ad3d:	add    BYTE PTR [rax],dh
   14000ad3f:	add    BYTE PTR [rdx],dh
   14000ad41:	add    BYTE PTR [rdi],ch
   14000ad43:	add    BYTE PTR [rbp+0x0],ch
   14000ad46:	imul   eax,DWORD PTR [rax],0x2f0074
   14000ad4c:	je     0x14000ad4e
   14000ad4e:	(bad)  
   14000ad4f:	add    BYTE PTR [rbx+0x0],dh
   14000ad52:	imul   eax,DWORD PTR [rax],0x22
   14000ad55:	add    BYTE PTR [rsi],bh
   14000ad57:	add    BYTE PTR [rdx],cl
   14000ad59:	add    BYTE PTR [rax+rax*1],bh
   14000ad5c:	push   rdx
   14000ad5d:	add    BYTE PTR [rbp+0x0],ah
   14000ad60:	add    BYTE PTR [ecx+0x0],ch
   14000ad64:	jae    0x14000ad66
   14000ad66:	je     0x14000ad68
   14000ad68:	jb     0x14000ad6a
   14000ad6a:	(bad)  
   14000ad6b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ad6f:	add    BYTE PTR [rdi+0x0],ch
   14000ad72:	outs   dx,BYTE PTR ds:[rsi]
   14000ad73:	add    BYTE PTR [rcx+0x0],cl
   14000ad76:	outs   dx,BYTE PTR ds:[rsi]
   14000ad77:	add    BYTE PTR [rsi+0x0],ah
   14000ad7a:	outs   dx,DWORD PTR ds:[rsi]
   14000ad7b:	add    BYTE PTR [rsi],bh
   14000ad7d:	add    BYTE PTR [rdx],cl
   14000ad7f:	add    BYTE PTR [rax+rax*1],bh
   14000ad82:	add    BYTE PTR [r13+0x0],sil
   14000ad86:	je     0x14000ad88
   14000ad88:	push   0x72006f00
   14000ad8d:	add    BYTE PTR [rsi],bh
   14000ad8f:	add    BYTE PTR [rbp+0x0],cl
   14000ad92:	imul   eax,DWORD PTR [rax],0x720063
   14000ad98:	outs   dx,DWORD PTR ds:[rsi]
   14000ad99:	add    BYTE PTR [rbx+0x0],dh
   14000ad9c:	outs   dx,DWORD PTR ds:[rsi]
   14000ad9d:	add    BYTE PTR [rsi+0x0],ah
   14000ada0:	je     0x14000ada2
   14000ada2:	and    BYTE PTR [rax],al
   14000ada4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ada8:	jb     0x14000adaa
   14000adaa:	jo     0x14000adac
   14000adac:	outs   dx,DWORD PTR ds:[rsi]
   14000adad:	add    BYTE PTR [rdx+0x0],dh
   14000adb0:	(bad)  
   14000adb1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000adb5:	add    BYTE PTR [rdi+0x0],ch
   14000adb8:	outs   dx,BYTE PTR ds:[rsi]
   14000adb9:	add    BYTE PTR [rax+rax*1],bh
   14000adbc:	(bad)  
   14000adbd:	add    BYTE PTR [rcx+0x0],al
   14000adc0:	jne    0x14000adc2
   14000adc2:	je     0x14000adc4
   14000adc4:	push   0x72006f00
   14000adc9:	add    BYTE PTR [rsi],bh
   14000adcb:	add    BYTE PTR [rdx],cl
   14000adcd:	add    BYTE PTR [rax+rax*1],bh
   14000add0:	add    BYTE PTR [rbp+0x0],r12b
   14000add4:	jae    0x14000add6
   14000add6:	movsxd eax,DWORD PTR [rax]
   14000add8:	jb     0x14000adda
   14000adda:	imul   eax,DWORD PTR [rax],0x740070
   14000ade0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ade6:	add    BYTE PTR ds:[rbx+0x0],al
   14000adea:	ins    BYTE PTR es:[rdi],dx
   14000adeb:	add    BYTE PTR [rbp+0x0],ah
   14000adee:	(bad)  
   14000adef:	add    BYTE PTR [rsi+0x0],ch
   14000adf2:	jae    0x14000adf4
   14000adf4:	and    BYTE PTR [rax],al
   14000adf6:	outs   dx,DWORD PTR ds:[rsi]
   14000adf7:	add    BYTE PTR [rax+rax*1+0x64],ch
   14000adfb:	add    BYTE PTR [rax],ah
   14000adfd:	add    BYTE PTR [rbx+0x0],dh
   14000ae00:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ae04:	jbe    0x14000ae06
   14000ae06:	imul   eax,DWORD PTR [rax],0x690063
   14000ae0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ae0d:	add    BYTE PTR [rdi+0x0],ah
   14000ae10:	and    BYTE PTR [rax],al
   14000ae12:	data16 add BYTE PTR [rcx+0x0],ch
   14000ae16:	ins    BYTE PTR es:[rdi],dx
   14000ae17:	add    BYTE PTR [rbp+0x0],ah
   14000ae1a:	jae    0x14000ae1c
   14000ae1c:	and    BYTE PTR [rax],al
   14000ae1e:	(bad)  
   14000ae1f:	add    BYTE PTR [rsi+0x0],ch
   14000ae22:	add    BYTE PTR fs:[rax],ah
   14000ae25:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ae29:	add    BYTE PTR [rcx+0x0],ch
   14000ae2c:	add    BYTE PTR [edi+0x0],ah
   14000ae30:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ae34:	jae    0x14000ae36
   14000ae36:	and    BYTE PTR [rax],al
   14000ae38:	push   rdi
   14000ae39:	add    BYTE PTR [rcx+0x0],ch
   14000ae3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ae3d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000ae41:	add    BYTE PTR [rdi+0x0],dh
   14000ae44:	jae    0x14000ae46
   14000ae46:	and    BYTE PTR [rax],al
   14000ae48:	push   rbp
   14000ae49:	add    BYTE PTR [rax+0x0],dh
   14000ae4c:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ae50:	je     0x14000ae52
   14000ae52:	add    BYTE PTR gs:[rax],ah
   14000ae55:	add    BYTE PTR [rcx+0x0],ah
   14000ae58:	data16 add BYTE PTR [rax+rax*1+0x65],dh
   14000ae5d:	add    BYTE PTR [rdx+0x0],dh
   14000ae60:	and    BYTE PTR [rax],al
   14000ae62:	(bad)  
   14000ae63:	add    BYTE PTR [rax],ah
   14000ae65:	add    BYTE PTR [rdx+0x0],dh
   14000ae68:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ae6c:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000ae71:	add    BYTE PTR [rdi+0x0],ch
   14000ae74:	jo     0x14000ae76
   14000ae76:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ae7a:	(bad)  
   14000ae7b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ae7f:	add    BYTE PTR [rdi+0x0],ch
   14000ae82:	outs   dx,BYTE PTR ds:[rsi]
   14000ae83:	add    BYTE PTR [rax+rax*1],bh
   14000ae86:	(bad)  
   14000ae87:	add    BYTE PTR [rax+rax*1+0x65],al
   14000ae8b:	add    BYTE PTR [rbx+0x0],dh
   14000ae8e:	movsxd eax,DWORD PTR [rax]
   14000ae90:	jb     0x14000ae92
   14000ae92:	imul   eax,DWORD PTR [rax],0x740070
   14000ae98:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ae9e:	add    BYTE PTR ds:[rdx],cl
   14000aea1:	add    BYTE PTR [rax+rax*1],bh
   14000aea4:	push   rsi
   14000aea5:	add    BYTE PTR [rbp+0x0],ah
   14000aea8:	jb     0x14000aeaa
   14000aeaa:	jae    0x14000aeac
   14000aeac:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aeb2:	add    BYTE PTR ds:[rcx],dh
   14000aeb5:	add    BYTE PTR [rsi],ch
   14000aeb7:	add    BYTE PTR [rax],dh
   14000aeb9:	add    BYTE PTR [rax+rax*1],bh
   14000aebc:	(bad)  
   14000aebd:	add    BYTE PTR [rsi+0x0],dl
   14000aec0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aec4:	jae    0x14000aec6
   14000aec6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aecc:	add    BYTE PTR ds:[rdx],cl
   14000aecf:	add    BYTE PTR [rax+rax*1],bh
   14000aed2:	(bad)  
   14000aed3:	add    BYTE PTR [rdx+0x0],dl
   14000aed6:	add    BYTE PTR gs:[rdi+0x0],ah
   14000aeda:	imul   eax,DWORD PTR [rax],0x740073
   14000aee0:	jb     0x14000aee2
   14000aee2:	(bad)  
   14000aee3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000aee7:	add    BYTE PTR [rdi+0x0],ch
   14000aeea:	outs   dx,BYTE PTR ds:[rsi]
   14000aeeb:	add    BYTE PTR [rcx+0x0],cl
   14000aeee:	outs   dx,BYTE PTR ds:[rsi]
   14000aeef:	add    BYTE PTR [rsi+0x0],ah
   14000aef2:	outs   dx,DWORD PTR ds:[rsi]
   14000aef3:	add    BYTE PTR [rsi],bh
   14000aef5:	add    BYTE PTR [rdx],cl
   14000aef7:	add    BYTE PTR [rax+rax*1],bh
   14000aefa:	push   rsp
   14000aefb:	add    BYTE PTR [rdx+0x0],dh
   14000aefe:	imul   eax,DWORD PTR [rax],0x670067
   14000af04:	add    BYTE PTR gs:[rdx+0x0],dh
   14000af08:	jae    0x14000af0a
   14000af0a:	add    BYTE PTR ds:[rdx],cl
   14000af0d:	add    BYTE PTR [rax+rax*1],bh
   14000af10:	rex.X add BYTE PTR [rdi+0x0],bpl
   14000af14:	outs   dx,DWORD PTR ds:[rsi]
   14000af15:	add    BYTE PTR [rax+rax*1+0x54],dh
   14000af19:	add    BYTE PTR [rdx+0x0],dh
   14000af1c:	imul   eax,DWORD PTR [rax],0x670067
   14000af22:	add    BYTE PTR gs:[rdx+0x0],dh
   14000af26:	add    BYTE PTR ds:[rdx],cl
   14000af29:	add    BYTE PTR [rax+rax*1],bh
   14000af2c:	add    BYTE PTR [r8+0x0],r15b
   14000af30:	add    BYTE PTR gs:[rbx+0x0],ah
   14000af34:	jne    0x14000af36
   14000af36:	je     0x14000af38
   14000af38:	imul   eax,DWORD PTR [rax],0x6e006f
   14000af3e:	push   rsp
   14000af3f:	add    BYTE PTR [rcx+0x0],ch
   14000af42:	ins    DWORD PTR es:[rdi],dx
   14000af43:	add    BYTE PTR [rbp+0x0],ah
   14000af46:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000af4a:	ins    DWORD PTR es:[rdi],dx
   14000af4b:	add    BYTE PTR [rcx+0x0],ch
   14000af4e:	je     0x14000af50
   14000af50:	add    BYTE PTR ds:[rax+0x0],dl
   14000af54:	push   rsp
   14000af55:	add    BYTE PTR [rax],bh
   14000af57:	add    BYTE PTR [rax+0x0],cl
   14000af5a:	cmp    al,0x0
   14000af5c:	(bad)  
   14000af5d:	add    BYTE PTR [rbp+0x0],al
   14000af60:	js     0x14000af62
   14000af62:	add    BYTE PTR gs:[rbx+0x0],ah
   14000af66:	jne    0x14000af68
   14000af68:	je     0x14000af6a
   14000af6a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000af70:	push   rsp
   14000af71:	add    BYTE PTR [rcx+0x0],ch
   14000af74:	ins    DWORD PTR es:[rdi],dx
   14000af75:	add    BYTE PTR [rbp+0x0],ah
   14000af78:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000af7c:	ins    DWORD PTR es:[rdi],dx
   14000af7d:	add    BYTE PTR [rcx+0x0],ch
   14000af80:	je     0x14000af82
   14000af82:	add    BYTE PTR ds:[rdx],cl
   14000af85:	add    BYTE PTR [rax+rax*1],bh
   14000af88:	add    BYTE PTR [r14+0x0],r13b
   14000af8c:	(bad)  
   14000af8d:	add    BYTE PTR [rdx+0x0],ah
   14000af90:	ins    BYTE PTR es:[rdi],dx
   14000af91:	add    BYTE PTR [rbp+0x0],ah
   14000af94:	add    BYTE PTR fs:[rsi],bh
   14000af97:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000af9b:	add    BYTE PTR [rbp+0x0],dh
   14000af9e:	add    BYTE PTR gs:[rax+rax*1],bh
   14000afa2:	(bad)  
   14000afa3:	add    BYTE PTR [rbp+0x0],al
   14000afa6:	outs   dx,BYTE PTR ds:[rsi]
   14000afa7:	add    BYTE PTR [rcx+0x0],ah
   14000afaa:	(bad)  
   14000afab:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000afaf:	add    BYTE PTR [rax+rax*1+0x3e],ah
   14000afb3:	add    BYTE PTR [rdx],cl
   14000afb5:	add    BYTE PTR [rax+rax*1],bh
   14000afb8:	(bad)  
   14000afb9:	add    BYTE PTR [rdx+0x0],al
   14000afbc:	outs   dx,DWORD PTR ds:[rsi]
   14000afbd:	add    BYTE PTR [rdi+0x0],ch
   14000afc0:	je     0x14000afc2
   14000afc2:	push   rsp
   14000afc3:	add    BYTE PTR [rdx+0x0],dh
   14000afc6:	imul   eax,DWORD PTR [rax],0x670067
   14000afcc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000afd0:	add    BYTE PTR ds:[rdx],cl
   14000afd3:	add    BYTE PTR [rax+rax*1],bh
   14000afd6:	(bad)  
   14000afd7:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000afdb:	add    BYTE PTR [rcx+0x0],ch
   14000afde:	add    BYTE PTR [edi+0x0],ah
   14000afe2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000afe6:	jae    0x14000afe8
   14000afe8:	add    BYTE PTR ds:[rdx],cl
   14000afeb:	add    BYTE PTR [rax+rax*1],bh
   14000afee:	push   rbx
   14000afef:	add    BYTE PTR [rbp+0x0],ah
   14000aff2:	je     0x14000aff4
   14000aff4:	je     0x14000aff6
   14000aff6:	imul   eax,DWORD PTR [rax],0x67006e
   14000affc:	jae    0x14000affe
   14000affe:	add    BYTE PTR ds:[rdx],cl
   14000b001:	add    BYTE PTR [rax+rax*1],bh
   14000b004:	add    BYTE PTR [rcx+0x0],r13b
   14000b008:	jae    0x14000b00a
   14000b00a:	(bad)  
   14000b00b:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b00f:	add    BYTE PTR [rdi+0x0],ch
   14000b012:	ja     0x14000b014
   14000b014:	push   rbx
   14000b015:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b019:	add    BYTE PTR [rdx+0x0],dh
   14000b01c:	je     0x14000b01e
   14000b01e:	rex.WB add BYTE PTR [r14+0x0],spl
   14000b022:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000b026:	rex.X add BYTE PTR [rcx+0x0],spl
   14000b02a:	je     0x14000b02c
   14000b02c:	je     0x14000b02e
   14000b02e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b032:	imul   eax,DWORD PTR [rax],0x730065
   14000b038:	add    BYTE PTR ds:[rsi+0x0],ah
   14000b03c:	(bad)  
   14000b03d:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000b041:	add    BYTE PTR [rbp+0x0],ah
   14000b044:	cmp    al,0x0
   14000b046:	(bad)  
   14000b047:	add    BYTE PTR [rax+rax*1+0x69],al
   14000b04b:	add    BYTE PTR [rbx+0x0],dh
   14000b04e:	(bad)  
   14000b04f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b053:	add    BYTE PTR [rdi+0x0],ch
   14000b056:	ja     0x14000b058
   14000b058:	push   rbx
   14000b059:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b05d:	add    BYTE PTR [rdx+0x0],dh
   14000b060:	je     0x14000b062
   14000b062:	rex.WB add BYTE PTR [r14+0x0],spl
   14000b066:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000b06a:	rex.X add BYTE PTR [rcx+0x0],spl
   14000b06e:	je     0x14000b070
   14000b070:	je     0x14000b072
   14000b072:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b076:	imul   eax,DWORD PTR [rax],0x730065
   14000b07c:	add    BYTE PTR ds:[rdx],cl
   14000b07f:	add    BYTE PTR [rax+rax*1],bh
   14000b082:	push   rbx
   14000b083:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b087:	add    BYTE PTR [rax+0x0],dh
   14000b08a:	rex.WB add BYTE PTR [r14+0x0],spl
   14000b08e:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14000b092:	imul   eax,DWORD PTR [rax],0x67006e
   14000b098:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000b09c:	rex.X add BYTE PTR [rcx+0x0],spl
   14000b0a0:	je     0x14000b0a2
   14000b0a2:	je     0x14000b0a4
   14000b0a4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b0a8:	imul   eax,DWORD PTR [rax],0x730065
   14000b0ae:	add    BYTE PTR ds:[rsi+0x0],ah
   14000b0b2:	(bad)  
   14000b0b3:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000b0b7:	add    BYTE PTR [rbp+0x0],ah
   14000b0ba:	cmp    al,0x0
   14000b0bc:	(bad)  
   14000b0bd:	add    BYTE PTR [rbx+0x0],dl
   14000b0c0:	je     0x14000b0c2
   14000b0c2:	outs   dx,DWORD PTR ds:[rsi]
   14000b0c3:	add    BYTE PTR [rax+0x0],dh
   14000b0c6:	rex.WB add BYTE PTR [r14+0x0],spl
   14000b0ca:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14000b0ce:	imul   eax,DWORD PTR [rax],0x67006e
   14000b0d4:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000b0d8:	rex.X add BYTE PTR [rcx+0x0],spl
   14000b0dc:	je     0x14000b0de
   14000b0de:	je     0x14000b0e0
   14000b0e0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b0e4:	imul   eax,DWORD PTR [rax],0x730065
   14000b0ea:	add    BYTE PTR ds:[rdx],cl
   14000b0ed:	add    BYTE PTR [rax+rax*1],bh
   14000b0f0:	rex.WRB add BYTE PTR [r13+0x0],r14b
   14000b0f4:	ins    BYTE PTR es:[rdi],dx
   14000b0f5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b0f9:	add    BYTE PTR [rax+0x0],dh
   14000b0fc:	ins    BYTE PTR es:[rdi],dx
   14000b0fd:	add    BYTE PTR [rbp+0x0],ah
   14000b100:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b104:	jae    0x14000b106
   14000b106:	je     0x14000b108
   14000b108:	(bad)  
   14000b109:	add    BYTE PTR [rsi+0x0],ch
   14000b10c:	movsxd eax,DWORD PTR [rax]
   14000b10e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b112:	push   rax
   14000b113:	add    BYTE PTR [rdi+0x0],ch
   14000b116:	ins    BYTE PTR es:[rdi],dx
   14000b117:	add    BYTE PTR [rcx+0x0],ch
   14000b11a:	movsxd eax,DWORD PTR [rax]
   14000b11c:	jns    0x14000b11e
   14000b11e:	add    BYTE PTR ds:[rcx+0x0],cl
   14000b122:	add    BYTE PTR [esi+0x0],ch
   14000b126:	outs   dx,DWORD PTR ds:[rsi]
   14000b127:	add    BYTE PTR [rdx+0x0],dh
   14000b12a:	add    BYTE PTR gs:[rsi+0x0],cl
   14000b12e:	add    BYTE PTR gs:[rdi+0x0],dh
   14000b132:	cmp    al,0x0
   14000b134:	(bad)  
   14000b135:	add    BYTE PTR [rbp+0x0],cl
   14000b138:	jne    0x14000b13a
   14000b13a:	ins    BYTE PTR es:[rdi],dx
   14000b13b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b13f:	add    BYTE PTR [rax+0x0],dh
   14000b142:	ins    BYTE PTR es:[rdi],dx
   14000b143:	add    BYTE PTR [rbp+0x0],ah
   14000b146:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b14a:	jae    0x14000b14c
   14000b14c:	je     0x14000b14e
   14000b14e:	(bad)  
   14000b14f:	add    BYTE PTR [rsi+0x0],ch
   14000b152:	movsxd eax,DWORD PTR [rax]
   14000b154:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b158:	push   rax
   14000b159:	add    BYTE PTR [rdi+0x0],ch
   14000b15c:	ins    BYTE PTR es:[rdi],dx
   14000b15d:	add    BYTE PTR [rcx+0x0],ch
   14000b160:	movsxd eax,DWORD PTR [rax]
   14000b162:	jns    0x14000b164
   14000b164:	add    BYTE PTR ds:[rdx],cl
   14000b167:	add    BYTE PTR [rax+rax*1],bh
   14000b16a:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   14000b16f:	add    BYTE PTR [rdi+0x0],ch
   14000b172:	ja     0x14000b174
   14000b174:	rex.W add BYTE PTR [rcx+0x0],spl
   14000b178:	jb     0x14000b17a
   14000b17a:	add    BYTE PTR fs:[rax+rax*1+0x65],dl
   14000b17f:	add    BYTE PTR [rdx+0x0],dh
   14000b182:	ins    DWORD PTR es:[rdi],dx
   14000b183:	add    BYTE PTR [rcx+0x0],ch
   14000b186:	outs   dx,BYTE PTR ds:[rsi]
   14000b187:	add    BYTE PTR [rcx+0x0],ah
   14000b18a:	je     0x14000b18c
   14000b18c:	add    BYTE PTR gs:[rsi],bh
   14000b18f:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b193:	add    BYTE PTR [rbp+0x0],dh
   14000b196:	add    BYTE PTR gs:[rax+rax*1],bh
   14000b19a:	(bad)  
   14000b19b:	add    BYTE PTR [rcx+0x0],al
   14000b19e:	ins    BYTE PTR es:[rdi],dx
   14000b19f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000b1a3:	add    BYTE PTR [rdi+0x0],dh
   14000b1a6:	rex.W add BYTE PTR [rcx+0x0],spl
   14000b1aa:	jb     0x14000b1ac
   14000b1ac:	add    BYTE PTR fs:[rax+rax*1+0x65],dl
   14000b1b1:	add    BYTE PTR [rdx+0x0],dh
   14000b1b4:	ins    DWORD PTR es:[rdi],dx
   14000b1b5:	add    BYTE PTR [rcx+0x0],ch
   14000b1b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b1b9:	add    BYTE PTR [rcx+0x0],ah
   14000b1bc:	je     0x14000b1be
   14000b1be:	add    BYTE PTR gs:[rsi],bh
   14000b1c1:	add    BYTE PTR [rdx],cl
   14000b1c3:	add    BYTE PTR [rax+rax*1],bh
   14000b1c6:	push   rax
   14000b1c7:	add    BYTE PTR [rdx+0x0],dh
   14000b1ca:	imul   eax,DWORD PTR [rax],0x72006f
   14000b1d0:	imul   eax,DWORD PTR [rax],0x790074
   14000b1d6:	add    BYTE PTR ds:[rax],bh
   14000b1d9:	add    BYTE PTR [rax+rax*1],bh
   14000b1dc:	(bad)  
   14000b1dd:	add    BYTE PTR [rax+0x0],dl
   14000b1e0:	jb     0x14000b1e2
   14000b1e2:	imul   eax,DWORD PTR [rax],0x72006f
   14000b1e8:	imul   eax,DWORD PTR [rax],0x790074
   14000b1ee:	add    BYTE PTR ds:[rdx],cl
   14000b1f1:	add    BYTE PTR [rax+rax*1],bh
   14000b1f4:	rex.W add BYTE PTR [rcx+0x0],bpl
   14000b1f8:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   14000b1fd:	add    BYTE PTR [rsi+0x0],ch
   14000b200:	add    BYTE PTR ds:[rax+rax*1+0x72],dh
   14000b205:	add    BYTE PTR [rbp+0x0],dh
   14000b208:	add    BYTE PTR gs:[rax+rax*1],bh
   14000b20c:	(bad)  
   14000b20d:	add    BYTE PTR [rax+0x0],cl
   14000b210:	imul   eax,DWORD PTR [rax],0x640064
   14000b216:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b21a:	add    BYTE PTR ds:[rdx],cl
   14000b21d:	add    BYTE PTR [rax+rax*1],bh
   14000b220:	(bad)  
   14000b221:	add    BYTE PTR [rbx+0x0],dl
   14000b224:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000b229:	add    BYTE PTR [rcx+0x0],ch
   14000b22c:	outs   dx,BYTE PTR ds:[rsi]
   14000b22d:	add    BYTE PTR [rdi+0x0],ah
   14000b230:	jae    0x14000b232
   14000b232:	add    BYTE PTR ds:[rdx],cl
   14000b235:	add    BYTE PTR [rax+rax*1],bh
   14000b238:	push   rax
   14000b239:	add    BYTE PTR [rdx+0x0],dh
   14000b23c:	imul   eax,DWORD PTR [rax],0x63006e
   14000b242:	imul   eax,DWORD PTR [rax],0x610070
   14000b248:	ins    BYTE PTR es:[rdi],dx
   14000b249:	add    BYTE PTR [rbx+0x0],dh
   14000b24c:	add    BYTE PTR ds:[rdx],cl
   14000b24f:	add    BYTE PTR [rax+rax*1],bh
   14000b252:	push   rax
   14000b253:	add    BYTE PTR [rdx+0x0],dh
   14000b256:	imul   eax,DWORD PTR [rax],0x63006e
   14000b25c:	imul   eax,DWORD PTR [rax],0x610070
   14000b262:	ins    BYTE PTR es:[rdi],dx
   14000b263:	add    BYTE PTR [rax],ah
   14000b265:	add    BYTE PTR [rcx+0x0],ch
   14000b268:	add    BYTE PTR fs:[rip+0x54002200],bh        # 0x19400d46f
   14000b26f:	add    BYTE PTR [rcx+0x0],ah
   14000b272:	jae    0x14000b274
   14000b274:	imul   eax,DWORD PTR [rax],0x55
   14000b277:	add    BYTE PTR [rbx+0x0],dh
   14000b27a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b27e:	and    al,BYTE PTR [rax]
   14000b280:	add    BYTE PTR ds:[rdx],cl
   14000b283:	add    BYTE PTR [rax+rax*1],bh
   14000b286:	push   rbp
   14000b287:	add    BYTE PTR [rbx+0x0],dh
   14000b28a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b28e:	rex.WB add BYTE PTR [r8+rax*1+0x3e],spl
   14000b293:	add    BYTE PTR [rbx+0x0],dl
   14000b296:	sub    eax,0x2d003100
   14000b29b:	add    BYTE PTR [rip+0x31002d00],dh        # 0x17100dfa1
   14000b2a1:	add    BYTE PTR [rax],bh
   14000b2a3:	add    BYTE PTR [rax+rax*1],bh
   14000b2a6:	(bad)  
   14000b2a7:	add    BYTE PTR [rbp+0x0],dl
   14000b2aa:	jae    0x14000b2ac
   14000b2ac:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b2b0:	rex.WB add BYTE PTR [r8+rax*1+0x3e],spl
   14000b2b5:	add    BYTE PTR [rdx],cl
   14000b2b7:	add    BYTE PTR [rax+rax*1],bh
   14000b2ba:	push   rdx
   14000b2bb:	add    BYTE PTR [rbp+0x0],dh
   14000b2be:	outs   dx,BYTE PTR ds:[rsi]
   14000b2bf:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b2c3:	add    BYTE PTR [rsi+0x0],dh
   14000b2c6:	add    BYTE PTR gs:[rax+rax*1+0x3e],ch
   14000b2cb:	add    BYTE PTR [rax+0x0],cl
   14000b2ce:	imul   eax,DWORD PTR [rax],0x680067
   14000b2d4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b2d8:	je     0x14000b2da
   14000b2da:	add    BYTE PTR [r14+0x0],sil
   14000b2de:	(bad)  
   14000b2df:	add    BYTE PTR [rcx+0x0],ch
   14000b2e2:	ins    BYTE PTR es:[rdi],dx
   14000b2e3:	add    BYTE PTR [rcx+0x0],ah
   14000b2e6:	(bad)  
   14000b2e7:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b2eb:	add    BYTE PTR [rax+rax*1],bh
   14000b2ee:	(bad)  
   14000b2ef:	add    BYTE PTR [rdx+0x0],dl
   14000b2f2:	jne    0x14000b2f4
   14000b2f4:	outs   dx,BYTE PTR ds:[rsi]
   14000b2f5:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b2f9:	add    BYTE PTR [rsi+0x0],dh
   14000b2fc:	add    BYTE PTR gs:[rax+rax*1+0x3e],ch
   14000b301:	add    BYTE PTR [rdx],cl
   14000b303:	add    BYTE PTR [rax+rax*1],bh
   14000b306:	(bad)  
   14000b307:	add    BYTE PTR [rax+0x0],dl
   14000b30a:	jb     0x14000b30c
   14000b30c:	imul   eax,DWORD PTR [rax],0x63006e
   14000b312:	imul   eax,DWORD PTR [rax],0x610070
   14000b318:	ins    BYTE PTR es:[rdi],dx
   14000b319:	add    BYTE PTR [rsi],bh
   14000b31b:	add    BYTE PTR [rdx],cl
   14000b31d:	add    BYTE PTR [rax+rax*1],bh
   14000b320:	(bad)  
   14000b321:	add    BYTE PTR [rax+0x0],dl
   14000b324:	jb     0x14000b326
   14000b326:	imul   eax,DWORD PTR [rax],0x63006e
   14000b32c:	imul   eax,DWORD PTR [rax],0x610070
   14000b332:	ins    BYTE PTR es:[rdi],dx
   14000b333:	add    BYTE PTR [rbx+0x0],dh
   14000b336:	add    BYTE PTR ds:[rdx],cl
   14000b339:	add    BYTE PTR [rax+rax*1],bh
   14000b33c:	add    BYTE PTR [r11+0x0],spl
   14000b340:	je     0x14000b342
   14000b342:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b348:	jae    0x14000b34a
   14000b34a:	and    BYTE PTR [rax],al
   14000b34c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b350:	outs   dx,BYTE PTR ds:[rsi]
   14000b351:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b355:	add    BYTE PTR [rax+0x0],bh
   14000b358:	je     0x14000b35a
   14000b35a:	cmp    eax,0x54002200
   14000b35f:	add    BYTE PTR [rcx+0x0],ah
   14000b362:	jae    0x14000b364
   14000b364:	imul   eax,DWORD PTR [rax],0x55
   14000b367:	add    BYTE PTR [rbx+0x0],dh
   14000b36a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b36e:	and    al,BYTE PTR [rax]
   14000b370:	add    BYTE PTR ds:[rdx],cl
   14000b373:	add    BYTE PTR [rax+rax*1],bh
   14000b376:	add    BYTE PTR [r8+0x0],r15b
   14000b37a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000b37e:	add    BYTE PTR ds:[rax+rax*1],bh
   14000b382:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b386:	ins    DWORD PTR es:[rdi],dx
   14000b387:	add    BYTE PTR [rbp+0x0],ch
   14000b38a:	(bad)  
   14000b38b:	add    BYTE PTR [rsi+0x0],ch
   14000b38e:	add    BYTE PTR fs:[rsi],bh
   14000b391:	add    BYTE PTR [rip+0x3c007300],ah        # 0x17c012697
   14000b397:	add    BYTE PTR [rdi],ch
   14000b399:	add    BYTE PTR [rbx+0x0],al
   14000b39c:	outs   dx,DWORD PTR ds:[rsi]
   14000b39d:	add    BYTE PTR [rbp+0x0],ch
   14000b3a0:	ins    DWORD PTR es:[rdi],dx
   14000b3a1:	add    BYTE PTR [rcx+0x0],ah
   14000b3a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b3a5:	add    BYTE PTR [rax+rax*1+0x3e],ah
   14000b3a9:	add    BYTE PTR [rdx],cl
   14000b3ab:	add    BYTE PTR [rax+rax*1],bh
   14000b3ae:	add    BYTE PTR [r10+0x0],sil
   14000b3b2:	add    BYTE PTR [ebp+0x0],dh
   14000b3b6:	ins    DWORD PTR es:[rdi],dx
   14000b3b7:	add    BYTE PTR [rbp+0x0],ah
   14000b3ba:	outs   dx,BYTE PTR ds:[rsi]
   14000b3bb:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000b3bf:	add    BYTE PTR [rsi],bh
   14000b3c1:	add    BYTE PTR [rdx],ah
   14000b3c3:	add    BYTE PTR [rip+0x22007300],ah        # 0x1620126c9
   14000b3c9:	add    BYTE PTR [rax],ah
   14000b3cb:	add    BYTE PTR [rdx],ah
   14000b3cd:	add    BYTE PTR [rip+0x22007300],ah        # 0x1620126d3
   14000b3d3:	add    BYTE PTR [rax+rax*1],bh
   14000b3d6:	(bad)  
   14000b3d7:	add    BYTE PTR [rcx+0x0],al
   14000b3da:	jb     0x14000b3dc
   14000b3dc:	add    BYTE PTR [ebp+0x0],dh
   14000b3e0:	ins    DWORD PTR es:[rdi],dx
   14000b3e1:	add    BYTE PTR [rbp+0x0],ah
   14000b3e4:	outs   dx,BYTE PTR ds:[rsi]
   14000b3e5:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000b3e9:	add    BYTE PTR [rsi],bh
   14000b3eb:	add    BYTE PTR [rax+rax*1],bh
   14000b3ee:	(bad)  
   14000b3ef:	add    BYTE PTR [rbp+0x0],al
   14000b3f2:	js     0x14000b3f4
   14000b3f4:	add    BYTE PTR gs:[rbx+0x0],ah
   14000b3f8:	add    BYTE PTR ds:[rdx],cl
   14000b3fb:	add    BYTE PTR [rax+rax*1],bh
   14000b3fe:	(bad)  
   14000b3ff:	add    BYTE PTR [rcx+0x0],al
   14000b402:	movsxd eax,DWORD PTR [rax]
   14000b404:	je     0x14000b406
   14000b406:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b40c:	jae    0x14000b40e
   14000b40e:	add    BYTE PTR ds:[rdx],cl
   14000b411:	add    BYTE PTR [rax+rax*1],bh
   14000b414:	(bad)  
   14000b415:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000b419:	add    BYTE PTR [rbx+0x0],dh
   14000b41c:	imul   eax,DWORD PTR [rax],0x3e
   14000b41f:	add    BYTE PTR [rdx],cl
	...
   14000b42d:	add    BYTE PTR [rax],al
   14000b42f:	add    BYTE PTR [rbp+0x0],cl
   14000b432:	imul   eax,DWORD PTR [rax],0x720063
   14000b438:	outs   dx,DWORD PTR ds:[rsi]
   14000b439:	add    BYTE PTR [rbx+0x0],dh
   14000b43c:	outs   dx,DWORD PTR ds:[rsi]
   14000b43d:	add    BYTE PTR [rsi+0x0],ah
   14000b440:	je     0x14000b442
   14000b442:	pop    rsp
   14000b443:	add    BYTE PTR [rdi+0x0],dl
   14000b446:	imul   eax,DWORD PTR [rax],0x64006e
   14000b44c:	outs   dx,DWORD PTR ds:[rsi]
   14000b44d:	add    BYTE PTR [rdi+0x0],dh
   14000b450:	jae    0x14000b452
   14000b452:	pop    rsp
   14000b453:	add    BYTE PTR [rbx+0x0],dl
   14000b456:	jns    0x14000b458
   14000b458:	jae    0x14000b45a
   14000b45a:	push   rdx
   14000b45b:	add    BYTE PTR [rbp+0x0],ah
   14000b45e:	jae    0x14000b460
   14000b460:	add    BYTE PTR gs:[rax+rax*1+0x53],dh
   14000b465:	add    BYTE PTR [rbp+0x0],ah
   14000b468:	jb     0x14000b46a
   14000b46a:	jbe    0x14000b46c
   14000b46c:	imul   eax,DWORD PTR [rax],0x690063
   14000b472:	outs   dx,BYTE PTR ds:[rsi]
   14000b473:	add    BYTE PTR [rdi+0x0],ah
   14000b476:	add    BYTE PTR [r8+r8*1+0x65],bpl
   14000b47b:	add    BYTE PTR [rcx+0x0],ah
   14000b47e:	outs   dx,BYTE PTR ds:[rsi]
   14000b47f:	add    BYTE PTR [rbp+0x0],dh
   14000b482:	jo     0x14000b484
   14000b484:	add    BYTE PTR [rax],al
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	push   rdi
   14000b489:	add    BYTE PTR [rcx+0x0],ch
   14000b48c:	outs   dx,BYTE PTR ds:[rsi]
   14000b48d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000b491:	add    BYTE PTR [rdi+0x0],dh
   14000b494:	jae    0x14000b496
   14000b496:	pop    rsp
   14000b497:	add    BYTE PTR [rbx+0x0],dl
   14000b49a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b49e:	jbe    0x14000b4a0
   14000b4a0:	imul   eax,DWORD PTR [rax],0x690063
   14000b4a6:	outs   dx,BYTE PTR ds:[rsi]
   14000b4a7:	add    BYTE PTR [rdi+0x0],ah
   14000b4aa:	add    BYTE PTR [rax],al
   14000b4ac:	add    BYTE PTR [rax],al
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	push   rdi
   14000b4b1:	add    BYTE PTR [rcx+0x0],ch
   14000b4b4:	outs   dx,BYTE PTR ds:[rsi]
   14000b4b5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000b4b9:	add    BYTE PTR [rdi+0x0],dh
   14000b4bc:	jae    0x14000b4be
   14000b4be:	pop    rsp
   14000b4bf:	add    BYTE PTR [rdi+0x0],dl
   14000b4c2:	imul   eax,DWORD PTR [rax],0x53006e
   14000b4c8:	js     0x14000b4ca
   14000b4ca:	push   rbx
	...
   14000b4d7:	add    al,al
   14000b4d9:	add    BYTE PTR [rax],al
   14000b4db:	add    BYTE PTR [rax],al
   14000b4dd:	add    BYTE PTR [rax],al
   14000b4df:	rex.RX add BYTE PTR [rax],r8b
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	add    BYTE PTR [rax],al
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	or     ch,BYTE PTR [rdx]
   14000b4ea:	sub    ch,BYTE PTR [rdx]
   14000b4ec:	and    BYTE PTR [rcx+0x73],al
   14000b4ef:	jae    0x14000b556
   14000b4f1:	jb     0x14000b567
   14000b4f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   14000b4fa:	ins    BYTE PTR es:[rdi],dx
   14000b4fb:	gs cmp ah,BYTE PTR fs:[rax]
   14000b4ff:	and    eax,0x2a2a0a73
   14000b504:	sub    ah,BYTE PTR [rax]
   14000b506:	and    BYTE PTR [rax],ah
   14000b508:	push   rbx
   14000b509:	outs   dx,DWORD PTR ds:[rsi]
   14000b50a:	jne    0x14000b57e
   14000b50c:	movsxd esp,DWORD PTR [rbp+0x20]
   14000b50f:	imul   r13d,DWORD PTR [rbp+r12*2+0x3a],0x2c732520
   14000b518:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000b51c:	and    BYTE PTR gs:[rip+0xa0a646c],ah        # 0x14a0b198f
   14000b523:	add    BYTE PTR [rax],al
   14000b525:	add    BYTE PTR [rax],al
   14000b527:	add    BYTE PTR [rdx+0x61],ah
   14000b52a:	jae    0x14000b591
   14000b52c:	pop    rsp
   14000b52d:	jb     0x14000b594
   14000b52f:	ins    BYTE PTR es:[rdi],dx
   14000b530:	imul   esp,DWORD PTR [rcx+0x62],0x74696c69
   14000b537:	jns    0x14000b595
   14000b539:	jb     0x14000b5a0
   14000b53b:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000b53e:	gs jb  0x14000b5ba
   14000b541:	pop    rsp
   14000b542:	jo     0x14000b5b0
   14000b544:	jne    0x14000b5ad
   14000b546:	imul   ebp,DWORD PTR [rsi+0x73],0x7362635c
   14000b54d:	pop    rsp
   14000b54e:	jne    0x14000b5c4
   14000b550:	imul   ebp,DWORD PTR [rsp+rbx*2+0x63],0x6c637362
   14000b558:	imul   esp,DWORD PTR [rbp+0x6e],0x70632e74
   14000b55f:	jo     0x14000b561
   14000b561:	add    BYTE PTR [rax],al
   14000b563:	add    BYTE PTR [rax],al
   14000b565:	add    BYTE PTR [rax],al
   14000b567:	add    BYTE PTR [rbx+0x43],al
   14000b56a:	(bad)  
   14000b56c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b56e:	imul   esp,DWORD PTR [rbp+0x6e],0x493a3a74
   14000b575:	outs   dx,BYTE PTR ds:[rsi]
   14000b576:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000b582:	je     0x14000b5b1
   14000b584:	outs   dx,BYTE PTR ds:[rsi]
   14000b585:	jne    0x14000b5f3
   14000b587:	ins    BYTE PTR es:[rdi],dx
   14000b588:	and    BYTE PTR [rbx+0x68],ah
   14000b58b:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000b58f:	data16 (bad) 
   14000b591:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c70203a
   14000b599:	outs   dx,DWORD PTR ds:[rsi]
   14000b59a:	addr32 addr32 gs jb 0x14000b59f
   14000b59f:	add    BYTE PTR [rsi+0x0],al
   14000b5a2:	(bad)  
   14000b5a3:	add    BYTE PTR [rcx+0x0],ch
   14000b5a6:	ins    BYTE PTR es:[rdi],dx
   14000b5a7:	add    BYTE PTR [rbp+0x0],ah
   14000b5aa:	add    BYTE PTR fs:[rax],ah
   14000b5ad:	add    BYTE PTR [rdi+0x0],ah
   14000b5b0:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000b5b5:	add    BYTE PTR [rcx+0x0],ch
   14000b5b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b5b9:	add    BYTE PTR [rdi+0x0],ah
   14000b5bc:	and    BYTE PTR [rax],al
   14000b5be:	rex.XB add BYTE PTR [r15+0x0],cl
   14000b5c2:	rex.WRB add BYTE PTR [r8],r12b
   14000b5c5:	add    BYTE PTR [rcx+0x0],ah
   14000b5c8:	ins    BYTE PTR es:[rdi],dx
   14000b5c9:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000b5cd:	add    BYTE PTR [rbx+0x0],ah
   14000b5d0:	(bad)  
   14000b5d1:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b5d5:	add    BYTE PTR [rdx+0x0],dh
   14000b5d8:	cmp    al,BYTE PTR [rax]
   14000b5da:	and    BYTE PTR [rax],al
   14000b5dc:	xor    BYTE PTR [rax],al
   14000b5de:	js     0x14000b5e0
   14000b5e0:	and    eax,0x7800
	...
   14000b5ed:	add    BYTE PTR [rax],al
   14000b5ef:	add    BYTE PTR [rsi+0x0],al
   14000b5f2:	(bad)  
   14000b5f3:	add    BYTE PTR [rcx+0x0],ch
   14000b5f6:	ins    BYTE PTR es:[rdi],dx
   14000b5f7:	add    BYTE PTR [rbp+0x0],ah
   14000b5fa:	add    BYTE PTR fs:[rax],ah
   14000b5fd:	add    BYTE PTR [rcx+0x0],ah
   14000b600:	ins    BYTE PTR es:[rdi],dx
   14000b601:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000b605:	add    BYTE PTR [rbx+0x0],ah
   14000b608:	(bad)  
   14000b609:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b60d:	add    BYTE PTR [rsi+0x0],ch
   14000b610:	add    BYTE PTR [eax],ah
   14000b613:	add    BYTE PTR [rbp+0x0],dl
   14000b616:	rex.WB add BYTE PTR [r8],spl
   14000b619:	add    BYTE PTR [rax+0x0],cl
   14000b61c:	(bad)  
   14000b61d:	add    BYTE PTR [rsi+0x0],ch
   14000b620:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000b625:	add    BYTE PTR [rdx+0x0],dh
   14000b628:	cmp    al,BYTE PTR [rax]
   14000b62a:	and    BYTE PTR [rax],al
   14000b62c:	xor    BYTE PTR [rax],al
   14000b62e:	js     0x14000b630
   14000b630:	and    eax,0x7800
	...
   14000b63d:	add    BYTE PTR [rax],al
   14000b63f:	add    BYTE PTR [rsi+0x0],al
   14000b642:	(bad)  
   14000b643:	add    BYTE PTR [rcx+0x0],ch
   14000b646:	ins    BYTE PTR es:[rdi],dx
   14000b647:	add    BYTE PTR [rbp+0x0],ah
   14000b64a:	add    BYTE PTR fs:[rax],ah
   14000b64d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b651:	add    BYTE PTR [rax],ah
   14000b653:	add    BYTE PTR [rbx+0x0],ah
   14000b656:	jb     0x14000b658
   14000b658:	add    BYTE PTR gs:[rcx+0x0],ah
   14000b65c:	je     0x14000b65e
   14000b65e:	add    BYTE PTR gs:[rax],ah
   14000b661:	add    BYTE PTR [rbx+0x0],dh
   14000b664:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b668:	jae    0x14000b66a
   14000b66a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b670:	and    BYTE PTR [rax],al
   14000b672:	movsxd eax,DWORD PTR [rax]
   14000b674:	ins    BYTE PTR es:[rdi],dx
   14000b675:	add    BYTE PTR [rcx+0x0],ah
   14000b678:	jae    0x14000b67a
   14000b67a:	jae    0x14000b67c
   14000b67c:	rex.WB add BYTE PTR [r8+rax*1+0x20],al
   14000b681:	add    BYTE PTR [rip+0x77002000],ch        # 0x1b700d687
   14000b687:	add    BYTE PTR [rcx+0x0],ah
   14000b68a:	imul   eax,DWORD PTR [rax],0x690074
   14000b690:	outs   dx,BYTE PTR ds:[rsi]
   14000b691:	add    BYTE PTR [rdi+0x0],ah
   14000b694:	and    BYTE PTR [rax],al
   14000b696:	data16 add BYTE PTR [rdi+0x0],ch
   14000b69a:	jb     0x14000b69c
   14000b69c:	and    BYTE PTR [rax],al
   14000b69e:	(bad)  
   14000b69f:	add    BYTE PTR [rax],ah
   14000b6a1:	add    BYTE PTR [rbx+0x0],dh
   14000b6a4:	add    BYTE PTR gs:[rbx+0x0],ah
   14000b6a8:	outs   dx,DWORD PTR ds:[rsi]
   14000b6a9:	add    BYTE PTR [rsi+0x0],ch
   14000b6ac:	add    BYTE PTR fs:[rax],ah
   14000b6af:	add    BYTE PTR [rcx+0x0],ah
   14000b6b2:	outs   dx,BYTE PTR ds:[rsi]
   14000b6b3:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000b6b7:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b6bb:	add    BYTE PTR [rcx+0x0],bh
   14000b6be:	imul   eax,DWORD PTR [rax],0x67006e
   14000b6c4:	and    BYTE PTR [rax],al
   14000b6c6:	(bad)  
   14000b6c7:	add    BYTE PTR [rdi+0x0],ah
   14000b6ca:	(bad)  
   14000b6cb:	add    BYTE PTR [rcx+0x0],ch
   14000b6ce:	outs   dx,BYTE PTR ds:[rsi]
   14000b6cf:	add    BYTE PTR [rsi],ch
   14000b6d1:	add    BYTE PTR [rax],ah
   14000b6d3:	add    BYTE PTR [rcx+0x0],al
   14000b6d6:	je     0x14000b6d8
   14000b6d8:	je     0x14000b6da
   14000b6da:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b6de:	jo     0x14000b6e0
   14000b6e0:	je     0x14000b6e2
   14000b6e2:	and    BYTE PTR [rax],al
   14000b6e4:	and    eax,0x6400
   14000b6e9:	add    BYTE PTR [rax],al
   14000b6eb:	add    BYTE PTR [rax],al
   14000b6ed:	add    BYTE PTR [rax],al
   14000b6ef:	add    BYTE PTR [rsi+0x0],al
   14000b6f2:	(bad)  
   14000b6f3:	add    BYTE PTR [rcx+0x0],ch
   14000b6f6:	ins    BYTE PTR es:[rdi],dx
   14000b6f7:	add    BYTE PTR [rbp+0x0],ah
   14000b6fa:	add    BYTE PTR fs:[rax],ah
   14000b6fd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b701:	add    BYTE PTR [rax],ah
   14000b703:	add    BYTE PTR [rbx+0x0],ah
   14000b706:	jb     0x14000b708
   14000b708:	add    BYTE PTR gs:[rcx+0x0],ah
   14000b70c:	je     0x14000b70e
   14000b70e:	add    BYTE PTR gs:[rax],ah
   14000b711:	add    BYTE PTR [rbx+0x0],dh
   14000b714:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b718:	jae    0x14000b71a
   14000b71a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b720:	and    BYTE PTR [rax],al
   14000b722:	movsxd eax,DWORD PTR [rax]
   14000b724:	ins    BYTE PTR es:[rdi],dx
   14000b725:	add    BYTE PTR [rcx+0x0],ah
   14000b728:	jae    0x14000b72a
   14000b72a:	jae    0x14000b72c
   14000b72c:	rex.WB add BYTE PTR [r8+rax*1+0x20],al
   14000b731:	add    BYTE PTR [rip+0x20002d00],ch        # 0x16000e437
   14000b737:	add    BYTE PTR [rsi+0x0],ch
   14000b73a:	outs   dx,DWORD PTR ds:[rsi]
   14000b73b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000b73f:	add    BYTE PTR [rdx+0x0],dh
   14000b742:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   14000b747:	add    BYTE PTR [rcx+0x0],bh
   14000b74a:	imul   eax,DWORD PTR [rax],0x67006e
   14000b750:	cmp    al,BYTE PTR [rax]
   14000b752:	and    BYTE PTR [rax],al
   14000b754:	xor    BYTE PTR [rax],al
   14000b756:	js     0x14000b758
   14000b758:	and    eax,0x7800
   14000b75d:	add    BYTE PTR [rax],al
   14000b75f:	add    BYTE PTR [rdx+0x0],dl
   14000b762:	push   0x0
   14000b764:	jbe    0x14000b766
   14000b766:	rex.XB add BYTE PTR [r10+0x0],spl
   14000b76a:	jae    0x14000b76c
   14000b76c:	add    BYTE PTR [rax],al
   14000b76e:	add    BYTE PTR [rax],al
   14000b770:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000b774:	imul   eax,DWORD PTR [rax],0x65006c
   14000b77a:	add    BYTE PTR fs:[rax],ah
   14000b77d:	add    BYTE PTR [rcx+0x0],ch
   14000b780:	outs   dx,BYTE PTR ds:[rsi]
   14000b781:	add    BYTE PTR [rcx+0x0],ch
   14000b784:	je     0x14000b786
   14000b786:	imul   eax,DWORD PTR [rax],0x6c0061
   14000b78c:	imul   eax,DWORD PTR [rax],0x69007a
   14000b792:	outs   dx,BYTE PTR ds:[rsi]
   14000b793:	add    BYTE PTR [rdi+0x0],ah
   14000b796:	and    BYTE PTR [rax],al
   14000b798:	je     0x14000b79a
   14000b79a:	push   0x20006500
   14000b79f:	add    BYTE PTR [rbx+0x0],dh
   14000b7a2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b7a6:	jae    0x14000b7a8
   14000b7a8:	jae    0x14000b7aa
   14000b7aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b7b0:	cmp    al,BYTE PTR [rax]
   14000b7b2:	and    BYTE PTR [rax],al
   14000b7b4:	xor    BYTE PTR [rax],al
   14000b7b6:	js     0x14000b7b8
   14000b7b8:	and    eax,0x7800
   14000b7bd:	add    BYTE PTR [rax],al
   14000b7bf:	add    BYTE PTR [rbx+0x43],al
   14000b7c2:	(bad)  
   14000b7c4:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b7c6:	imul   esp,DWORD PTR [rbp+0x6e],0x463a3a74
   14000b7cd:	imul   ebp,DWORD PTR [rsi+0x61],0x657a696c
	...
   14000b7e0:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   14000b7e4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b7e8:	(bad)  
   14000b7e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b7ed:	add    BYTE PTR [rdi+0x0],ch
   14000b7f0:	outs   dx,BYTE PTR ds:[rsi]
   14000b7f1:	add    BYTE PTR [rax],ah
   14000b7f3:	add    BYTE PTR [rsi+0x0],ah
   14000b7f6:	(bad)  
   14000b7f7:	add    BYTE PTR [rcx+0x0],ch
   14000b7fa:	ins    BYTE PTR es:[rdi],dx
   14000b7fb:	add    BYTE PTR [rbp+0x0],ah
   14000b7fe:	add    BYTE PTR fs:[rax],ah
   14000b801:	add    BYTE PTR [rsi+0x0],ah
   14000b804:	imul   eax,DWORD PTR [rax],0x61006e
   14000b80a:	ins    BYTE PTR es:[rdi],dx
   14000b80b:	add    BYTE PTR [rcx+0x0],ch
   14000b80e:	jp     0x14000b810
   14000b810:	imul   eax,DWORD PTR [rax],0x67006e
   14000b816:	and    BYTE PTR [rax],al
   14000b818:	movsxd eax,DWORD PTR [rax]
   14000b81a:	push   0x6e006100
   14000b81f:	add    BYTE PTR [rdi+0x0],ah
   14000b822:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b826:	cmp    al,BYTE PTR [rax]
   14000b828:	and    BYTE PTR [rax],al
   14000b82a:	xor    BYTE PTR [rax],al
   14000b82c:	js     0x14000b82e
   14000b82e:	and    eax,0x7800
	...
   14000b83f:	add    BYTE PTR [rbx+0x0],dl
   14000b842:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b846:	jae    0x14000b848
   14000b848:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b84e:	and    BYTE PTR [rax],al
   14000b850:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b854:	outs   dx,BYTE PTR ds:[rsi]
   14000b855:	add    BYTE PTR [rcx+0x0],ah
   14000b858:	ins    BYTE PTR es:[rdi],dx
   14000b859:	add    BYTE PTR [rcx+0x0],ch
   14000b85c:	jp     0x14000b85e
   14000b85e:	(bad)  
   14000b85f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b863:	add    BYTE PTR [rdi+0x0],ch
   14000b866:	outs   dx,BYTE PTR ds:[rsi]
   14000b867:	add    BYTE PTR [rax],ah
   14000b869:	add    BYTE PTR [rdx+0x0],dh
   14000b86c:	add    BYTE PTR gs:[rcx+0x0],dh
   14000b870:	jne    0x14000b872
   14000b872:	imul   eax,DWORD PTR [rax],0x650072
   14000b878:	jae    0x14000b87a
   14000b87a:	and    BYTE PTR [rax],al
   14000b87c:	push   rdx
   14000b87d:	add    BYTE PTR [rbp+0x0],ah
   14000b880:	(bad)  
   14000b881:	add    BYTE PTR [rdi+0x0],ch
   14000b884:	outs   dx,DWORD PTR ds:[rsi]
   14000b885:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000b889:	add    BYTE PTR [rax],al
   14000b88b:	add    BYTE PTR [rax],al
   14000b88d:	add    BYTE PTR [rax],al
   14000b88f:	add    BYTE PTR [rbx+0x0],dl
   14000b892:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b896:	jae    0x14000b898
   14000b898:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b89e:	and    BYTE PTR [rax],al
   14000b8a0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b8a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b8a5:	add    BYTE PTR [rcx+0x0],ah
   14000b8a8:	ins    BYTE PTR es:[rdi],dx
   14000b8a9:	add    BYTE PTR [rcx+0x0],ch
   14000b8ac:	jp     0x14000b8ae
   14000b8ae:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000b8b3:	add    BYTE PTR [rax],al
   14000b8b5:	add    BYTE PTR [rax],al
   14000b8b7:	add    BYTE PTR [rbx+0x43],al
   14000b8ba:	(bad)  
   14000b8bc:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b8be:	imul   esp,DWORD PTR [rbp+0x6e],0x4c3a3a74
   14000b8c5:	imul   esi,DWORD PTR [rbx+0x74],0x6b636150
   14000b8cc:	(bad)  
   14000b8cd:	addr32 gs jae 0x14000b8d1
   14000b8d1:	add    BYTE PTR [rax],al
   14000b8d3:	add    BYTE PTR [rax],al
   14000b8d5:	add    BYTE PTR [rax],al
   14000b8d7:	add    BYTE PTR [rsi+0x6f],cl
   14000b8da:	je     0x14000b909
   14000b8dc:	outs   dx,BYTE PTR ds:[rsi]
   14000b8dd:	jne    0x14000b94b
   14000b8df:	ins    BYTE PTR es:[rdi],dx
   14000b8e0:	and    BYTE PTR [rbx+0x68],ah
   14000b8e3:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000b8e7:	data16 (bad) 
   14000b8e9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5070203a
   14000b8f1:	(bad)  
   14000b8f2:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b8f5:	imul   r14,QWORD PTR gs:[ebx+0x74],0x0
   14000b8ff:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000b903:	add    BYTE PTR [rbx+0x0],dh
   14000b906:	je     0x14000b908
   14000b908:	imul   eax,DWORD PTR [rax],0x67006e
   14000b90e:	and    BYTE PTR [rax],al
   14000b910:	jo     0x14000b912
   14000b912:	(bad)  
   14000b913:	add    BYTE PTR [rbx+0x0],ah
   14000b916:	imul   eax,DWORD PTR [rax],0x61
   14000b919:	add    BYTE PTR [rdi+0x0],ah
   14000b91c:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14000b930:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000b934:	imul   eax,DWORD PTR [rax],0x65006c
   14000b93a:	add    BYTE PTR fs:[rax],ah
   14000b93d:	add    BYTE PTR [rbp+0x0],ah
   14000b940:	outs   dx,BYTE PTR ds:[rsi]
   14000b941:	add    BYTE PTR [rbp+0x0],dh
   14000b944:	ins    DWORD PTR es:[rdi],dx
   14000b945:	add    BYTE PTR [rbp+0x0],ah
   14000b948:	jb     0x14000b94a
   14000b94a:	(bad)  
   14000b94b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b94f:	add    BYTE PTR [rsi+0x0],ch
   14000b952:	add    BYTE PTR [eax],ah
   14000b955:	add    BYTE PTR [rax+0x0],dh
   14000b958:	(bad)  
   14000b959:	add    BYTE PTR [rbx+0x0],ah
   14000b95c:	imul   eax,DWORD PTR [rax],0x61
   14000b95f:	add    BYTE PTR [rdi+0x0],ah
   14000b962:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b966:	cmp    al,BYTE PTR [rax]
   14000b968:	and    BYTE PTR [rax],al
   14000b96a:	xor    BYTE PTR [rax],al
   14000b96c:	js     0x14000b96e
   14000b96e:	and    eax,0x7800
	...
   14000b97f:	add    BYTE PTR [rsi+0x0],al
   14000b982:	(bad)  
   14000b983:	add    BYTE PTR [rcx+0x0],ch
   14000b986:	ins    BYTE PTR es:[rdi],dx
   14000b987:	add    BYTE PTR [rbp+0x0],ah
   14000b98a:	add    BYTE PTR fs:[rax],ah
   14000b98d:	add    BYTE PTR [rdi+0x0],ah
   14000b990:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000b995:	add    BYTE PTR [rcx+0x0],ch
   14000b998:	outs   dx,BYTE PTR ds:[rsi]
   14000b999:	add    BYTE PTR [rdi+0x0],ah
   14000b99c:	and    BYTE PTR [rax],al
   14000b99e:	imul   eax,DWORD PTR [rax],0x650064
   14000b9a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b9a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b9a9:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000b9ad:	add    BYTE PTR [rax],ah
   14000b9af:	add    BYTE PTR [rcx+0x0],ah
   14000b9b2:	jae    0x14000b9b4
   14000b9b4:	and    BYTE PTR [rax],al
   14000b9b6:	jae    0x14000b9b8
   14000b9b8:	je     0x14000b9ba
   14000b9ba:	jb     0x14000b9bc
   14000b9bc:	imul   eax,DWORD PTR [rax],0x67006e
   14000b9c2:	cmp    al,BYTE PTR [rax]
   14000b9c4:	and    BYTE PTR [rax],al
   14000b9c6:	xor    BYTE PTR [rax],al
   14000b9c8:	js     0x14000b9ca
   14000b9ca:	and    eax,0x7800
   14000b9cf:	add    BYTE PTR [rsi+0x0],al
   14000b9d2:	(bad)  
   14000b9d3:	add    BYTE PTR [rcx+0x0],ch
   14000b9d6:	ins    BYTE PTR es:[rdi],dx
   14000b9d7:	add    BYTE PTR [rbp+0x0],ah
   14000b9da:	add    BYTE PTR fs:[rax],ah
   14000b9dd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b9e1:	add    BYTE PTR [rax],ah
   14000b9e3:	add    BYTE PTR [rbx+0x0],ah
   14000b9e6:	jb     0x14000b9e8
   14000b9e8:	add    BYTE PTR gs:[rcx+0x0],ah
   14000b9ec:	je     0x14000b9ee
   14000b9ee:	add    BYTE PTR gs:[rax],ah
   14000b9f1:	add    BYTE PTR [rax+0x0],dh
   14000b9f4:	(bad)  
   14000b9f5:	add    BYTE PTR [rbx+0x0],ah
   14000b9f8:	imul   eax,DWORD PTR [rax],0x61
   14000b9fb:	add    BYTE PTR [rdi+0x0],ah
   14000b9fe:	add    BYTE PTR gs:[rax],ah
   14000ba01:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ba05:	add    BYTE PTR [rbx+0x0],dh
   14000ba08:	je     0x14000ba0a
   14000ba0a:	cmp    al,BYTE PTR [rax]
   14000ba0c:	and    BYTE PTR [rax],al
   14000ba0e:	xor    BYTE PTR [rax],al
   14000ba10:	js     0x14000ba12
   14000ba12:	and    eax,0x7800
   14000ba17:	add    BYTE PTR [rsi+0x0],al
   14000ba1a:	imul   eax,DWORD PTR [rax],0x69006e
   14000ba20:	jae    0x14000ba22
   14000ba22:	push   0x64006500
   14000ba27:	add    BYTE PTR [rax],ah
   14000ba29:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000ba2d:	add    BYTE PTR [rbx+0x0],dh
   14000ba30:	je     0x14000ba32
   14000ba32:	imul   eax,DWORD PTR [rax],0x67006e
   14000ba38:	and    BYTE PTR [rax],al
   14000ba3a:	jo     0x14000ba3c
   14000ba3c:	(bad)  
   14000ba3d:	add    BYTE PTR [rbx+0x0],ah
   14000ba40:	imul   eax,DWORD PTR [rax],0x61
   14000ba43:	add    BYTE PTR [rdi+0x0],ah
   14000ba46:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ba4a:	add    BYTE PTR [rax],al
   14000ba4c:	add    BYTE PTR [rax],al
   14000ba4e:	add    BYTE PTR [rax],al
   14000ba50:	rex.XB
   14000ba51:	rex.XB (bad) 
   14000ba54:	rex.XB ins BYTE PTR es:[rdi],dx
   14000ba56:	imul   esp,DWORD PTR [rbp+0x6e],0x433a3a74
   14000ba5d:	jb     0x14000bac4
   14000ba5f:	(bad)  
   14000ba60:	je     0x14000bac7
   14000ba62:	push   rax
   14000ba63:	(bad)  
   14000ba64:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000ba67:	add    BYTE PTR gs:[eax],al
   14000ba6b:	add    BYTE PTR [rax],al
   14000ba6d:	add    BYTE PTR [rax],al
   14000ba6f:	add    BYTE PTR [rsi+0x6f],cl
   14000ba72:	je     0x14000baa1
   14000ba74:	outs   dx,BYTE PTR ds:[rsi]
   14000ba75:	jne    0x14000bae3
   14000ba77:	ins    BYTE PTR es:[rdi],dx
   14000ba78:	and    BYTE PTR [rbx+0x68],ah
   14000ba7b:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000ba7f:	data16 (bad) 
   14000ba81:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5370203a
   14000ba89:	gs jae 0x14000baff
   14000ba8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f4e00
   14000ba93:	sub    eax,0x6c6c756e
   14000ba98:	and    BYTE PTR [rbx+0x68],ah
   14000ba9b:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000ba9f:	data16 (bad) 
   14000baa1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7a73203a
   14000baa9:	push   rax
   14000baaa:	(bad)  
   14000baab:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000baae:	addr32 gs push rax
   14000bab1:	(bad)  
   14000bab2:	je     0x14000bb1c
   14000bab4:	add    BYTE PTR [rax],al
   14000bab6:	add    BYTE PTR [rax],al
   14000bab8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000baba:	je     0x14000bae9
   14000babc:	outs   dx,BYTE PTR ds:[rsi]
   14000babd:	jne    0x14000bb2b
   14000babf:	ins    BYTE PTR es:[rdi],dx
   14000bac0:	and    BYTE PTR [rbx+0x68],ah
   14000bac3:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000bac7:	data16 (bad) 
   14000bac9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7070203a
   14000bad1:	push   rax
   14000bad2:	(bad)  
   14000bad3:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000bad6:	add    BYTE PTR gs:[eax],al
   14000bada:	add    BYTE PTR [rax],al
   14000badc:	add    BYTE PTR [rax],al
   14000bade:	add    BYTE PTR [rax],al
   14000bae0:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000bae4:	imul   eax,DWORD PTR [rax],0x65006c
   14000baea:	add    BYTE PTR fs:[rax],ah
   14000baed:	add    BYTE PTR [rbx+0x0],ah
   14000baf0:	jb     0x14000baf2
   14000baf2:	add    BYTE PTR gs:[rcx+0x0],ah
   14000baf6:	je     0x14000baf8
   14000baf8:	imul   eax,DWORD PTR [rax],0x67006e
   14000bafe:	and    BYTE PTR [rax],al
   14000bb00:	jo     0x14000bb02
   14000bb02:	(bad)  
   14000bb03:	add    BYTE PTR [rbx+0x0],ah
   14000bb06:	imul   eax,DWORD PTR [rax],0x61
   14000bb09:	add    BYTE PTR [rdi+0x0],ah
   14000bb0c:	add    BYTE PTR gs:[rax],ah
   14000bb0f:	add    BYTE PTR [rsi+0x0],ah
   14000bb12:	jb     0x14000bb14
   14000bb14:	outs   dx,DWORD PTR ds:[rsi]
   14000bb15:	add    BYTE PTR [rbp+0x0],ch
   14000bb18:	and    BYTE PTR [rax],al
   14000bb1a:	and    eax,0x3a007300
   14000bb1f:	add    BYTE PTR [rax],ah
   14000bb21:	add    BYTE PTR [rax],dh
   14000bb23:	add    BYTE PTR [rax+0x0],bh
   14000bb26:	and    eax,0x7800
   14000bb2b:	add    BYTE PTR [rax],al
   14000bb2d:	add    BYTE PTR [rax],al
   14000bb2f:	add    BYTE PTR [rsi+0x0],al
   14000bb32:	(bad)  
   14000bb33:	add    BYTE PTR [rcx+0x0],ch
   14000bb36:	ins    BYTE PTR es:[rdi],dx
   14000bb37:	add    BYTE PTR [rbp+0x0],ah
   14000bb3a:	add    BYTE PTR fs:[rax],ah
   14000bb3d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bb41:	add    BYTE PTR [rax],ah
   14000bb43:	add    BYTE PTR [rdi+0x0],ah
   14000bb46:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000bb4b:	add    BYTE PTR [rax+0x0],dh
   14000bb4e:	(bad)  
   14000bb4f:	add    BYTE PTR [rbx+0x0],ah
   14000bb52:	imul   eax,DWORD PTR [rax],0x61
   14000bb55:	add    BYTE PTR [rdi+0x0],ah
   14000bb58:	add    BYTE PTR gs:[rax],ah
   14000bb5b:	add    BYTE PTR [rcx+0x0],ch
   14000bb5e:	imul   eax,DWORD PTR [rax],0x2e0064
   14000bb64:	cmp    al,BYTE PTR [rax]
   14000bb66:	and    BYTE PTR [rax],al
   14000bb68:	xor    BYTE PTR [rax],al
   14000bb6a:	js     0x14000bb6c
   14000bb6c:	and    eax,0x7800
   14000bb71:	add    BYTE PTR [rax],al
   14000bb73:	add    BYTE PTR [rax],al
   14000bb75:	add    BYTE PTR [rax],al
   14000bb77:	add    BYTE PTR [rbx+0x43],al
   14000bb7a:	(bad)  
   14000bb7c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000bb7e:	imul   esp,DWORD PTR [rbp+0x6e],0x533a3a74
   14000bb85:	je     0x14000bbe8
   14000bb87:	addr32 gs push rax
   14000bb8a:	(bad)  
   14000bb8b:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000bb8e:	add    BYTE PTR gs:[eax],al
   14000bb92:	add    BYTE PTR [rax],al
   14000bb94:	add    BYTE PTR [rax],al
   14000bb96:	add    BYTE PTR [rax],al
   14000bb98:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000bb9a:	je     0x14000bbc9
   14000bb9c:	outs   dx,BYTE PTR ds:[rsi]
   14000bb9d:	jne    0x14000bc0b
   14000bb9f:	ins    BYTE PTR es:[rdi],dx
   14000bba0:	and    BYTE PTR [rbx+0x68],ah
   14000bba3:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000bba7:	data16 (bad) 
   14000bba9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7a73203a
   14000bbb1:	push   rax
   14000bbb2:	(bad)  
   14000bbb3:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000bbb6:	rex.WR outs dx,DWORD PTR gs:[esi]
   14000bbba:	movsxd esp,DWORD PTR [rcx+0x74]
   14000bbbd:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000bbc4:	add    BYTE PTR [rax],al
   14000bbc6:	add    BYTE PTR [rax],al
   14000bbc8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000bbca:	je     0x14000bbf9
   14000bbcc:	outs   dx,BYTE PTR ds:[rsi]
   14000bbcd:	jne    0x14000bc3b
   14000bbcf:	ins    BYTE PTR es:[rdi],dx
   14000bbd0:	and    BYTE PTR [rbx+0x68],ah
   14000bbd3:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000bbd7:	data16 (bad) 
   14000bbd9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6270203a
   14000bbe1:	rex.B jo 0x14000bc54
   14000bbe4:	ins    BYTE PTR es:[rdi],dx
   14000bbe5:	imul   esp,DWORD PTR [rbx+0x61],0x656c62
   14000bbec:	add    BYTE PTR [rax],al
   14000bbee:	add    BYTE PTR [rax],al
   14000bbf0:	push   rbx
   14000bbf1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000bbf5:	add    BYTE PTR [rdi+0x0],ah
   14000bbf8:	imul   eax,DWORD PTR [rax],0x67006e
   14000bbfe:	and    BYTE PTR [rax],al
   14000bc00:	jo     0x14000bc02
   14000bc02:	(bad)  
   14000bc03:	add    BYTE PTR [rbx+0x0],ah
   14000bc06:	imul   eax,DWORD PTR [rax],0x61
   14000bc09:	add    BYTE PTR [rdi+0x0],ah
   14000bc0c:	add    BYTE PTR gs:[rax],ah
   14000bc0f:	add    BYTE PTR [rsi+0x0],ah
   14000bc12:	jb     0x14000bc14
   14000bc14:	outs   dx,DWORD PTR ds:[rsi]
   14000bc15:	add    BYTE PTR [rbp+0x0],ch
   14000bc18:	cmp    al,BYTE PTR [rax]
   14000bc1a:	and    BYTE PTR [rax],al
   14000bc1c:	and    eax,0x7300
	...
   14000bc2d:	add    BYTE PTR [rax],al
   14000bc2f:	add    BYTE PTR [rsi+0x0],al
   14000bc32:	(bad)  
   14000bc33:	add    BYTE PTR [rcx+0x0],ch
   14000bc36:	ins    BYTE PTR es:[rdi],dx
   14000bc37:	add    BYTE PTR [rbp+0x0],ah
   14000bc3a:	add    BYTE PTR fs:[rax],ah
   14000bc3d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bc41:	add    BYTE PTR [rax],ah
   14000bc43:	add    BYTE PTR [rdi+0x0],ah
   14000bc46:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000bc4b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000bc4f:	add    BYTE PTR [rbp+0x0],ah
   14000bc52:	and    BYTE PTR [rax],al
   14000bc54:	jb     0x14000bc56
   14000bc56:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   14000bc5b:	add    BYTE PTR [rcx+0x0],ah
   14000bc5e:	jae    0x14000bc60
   14000bc60:	add    BYTE PTR gs:[rax],ah
   14000bc63:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000bc67:	add    BYTE PTR [rax+0x0],dh
   14000bc6a:	add    BYTE PTR gs:[rax],ah
   14000bc6d:	add    BYTE PTR [rsi+0x0],ah
   14000bc70:	outs   dx,DWORD PTR ds:[rsi]
   14000bc71:	add    BYTE PTR [rdx+0x0],dh
   14000bc74:	and    BYTE PTR [rax],al
   14000bc76:	jo     0x14000bc78
   14000bc78:	(bad)  
   14000bc79:	add    BYTE PTR [rbx+0x0],ah
   14000bc7c:	imul   eax,DWORD PTR [rax],0x61
   14000bc7f:	add    BYTE PTR [rdi+0x0],ah
   14000bc82:	add    BYTE PTR gs:[rax],ah
   14000bc85:	add    BYTE PTR [rip+0x3a007300],ah        # 0x17a012f8b
   14000bc8b:	add    BYTE PTR [rax],ah
   14000bc8d:	add    BYTE PTR [rax],dh
   14000bc8f:	add    BYTE PTR [rax+0x0],bh
   14000bc92:	and    eax,0x7800
   14000bc97:	add    BYTE PTR [rax+0x0],dl
   14000bc9a:	(bad)  
   14000bc9b:	add    BYTE PTR [rbx+0x0],ah
   14000bc9e:	imul   eax,DWORD PTR [rax],0x61
   14000bca1:	add    BYTE PTR [rdi+0x0],ah
   14000bca4:	add    BYTE PTR gs:[rax],ah
   14000bca7:	add    BYTE PTR [rcx+0x0],ch
   14000bcaa:	jae    0x14000bcac
   14000bcac:	and    BYTE PTR [rax],al
   14000bcae:	outs   dx,DWORD PTR ds:[rsi]
   14000bcaf:	add    BYTE PTR [rsi+0x0],ah
   14000bcb2:	and    BYTE PTR [rax],al
   14000bcb4:	je     0x14000bcb6
   14000bcb6:	jns    0x14000bcb8
   14000bcb8:	jo     0x14000bcba
   14000bcba:	add    BYTE PTR gs:[rax],ah
   14000bcbd:	add    BYTE PTR [rip+0x7300],ah        # 0x140012fc3
   14000bcc3:	add    BYTE PTR [rax],al
   14000bcc5:	add    BYTE PTR [rax],al
   14000bcc7:	add    BYTE PTR [rsi+0x0],al
   14000bcca:	outs   dx,DWORD PTR ds:[rsi]
   14000bccb:	add    BYTE PTR [rbp+0x0],dh
   14000bcce:	outs   dx,BYTE PTR ds:[rsi]
   14000bccf:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000bcd3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000bcd7:	add    BYTE PTR [rdi+0x0],ch
   14000bcda:	outs   dx,BYTE PTR ds:[rsi]
   14000bcdb:	add    BYTE PTR [rax],al
   14000bcdd:	add    BYTE PTR [rax],al
   14000bcdf:	add    BYTE PTR [rax+0x0],dl
   14000bce2:	jb     0x14000bce4
   14000bce4:	outs   dx,DWORD PTR ds:[rsi]
   14000bce5:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000bce9:	add    BYTE PTR [rbx+0x0],ah
   14000bcec:	je     0x14000bcee
   14000bcee:	add    BYTE PTR [rax],al
   14000bcf0:	rex.XB add BYTE PTR [r9+0x0],spl
   14000bcf4:	outs   dx,BYTE PTR ds:[rsi]
   14000bcf5:	add    BYTE PTR [rsi+0x0],ch
   14000bcf8:	outs   dx,DWORD PTR ds:[rsi]
   14000bcf9:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000bcfd:	add    BYTE PTR [rbx+0x0],dh
   14000bd00:	je     0x14000bd02
   14000bd02:	(bad)  
   14000bd03:	add    BYTE PTR [rdi+0x0],ah
   14000bd06:	add    BYTE PTR gs:[rax],ah
   14000bd09:	add    BYTE PTR [rax+0x0],dh
   14000bd0c:	(bad)  
   14000bd0d:	add    BYTE PTR [rbx+0x0],ah
   14000bd10:	imul   eax,DWORD PTR [rax],0x61
   14000bd13:	add    BYTE PTR [rdi+0x0],ah
   14000bd16:	add    BYTE PTR gs:[rax],ah
   14000bd19:	add    BYTE PTR [rdi+0x0],ch
   14000bd1c:	data16 add BYTE PTR [rax],ah
   14000bd1f:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000bd23:	add    BYTE PTR [rax+0x0],dh
   14000bd26:	add    BYTE PTR gs:[rax],ah
   14000bd29:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e01302f
   14000bd2f:	add    BYTE PTR [rax],ah
   14000bd31:	add    BYTE PTR [rbx+0x0],dl
   14000bd34:	imul   eax,DWORD PTR [rax],0x69
   14000bd37:	add    BYTE PTR [rax+0x0],dh
   14000bd3a:	jo     0x14000bd3c
   14000bd3c:	imul   eax,DWORD PTR [rax],0x67006e
	...
   14000bd4e:	add    BYTE PTR [rax],al
   14000bd50:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000bd54:	imul   eax,DWORD PTR [rax],0x65006c
   14000bd5a:	add    BYTE PTR fs:[rax],ah
   14000bd5d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bd61:	add    BYTE PTR [rax],ah
   14000bd63:	add    BYTE PTR [rdi+0x0],ah
   14000bd66:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000bd6b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000bd6f:	add    BYTE PTR [rbp+0x0],ah
   14000bd72:	and    BYTE PTR [rax],al
   14000bd74:	(bad)  
   14000bd75:	add    BYTE PTR [rax+0x0],dh
   14000bd78:	jo     0x14000bd7a
   14000bd7a:	ins    BYTE PTR es:[rdi],dx
   14000bd7b:	add    BYTE PTR [rcx+0x0],ch
   14000bd7e:	movsxd eax,DWORD PTR [rax]
   14000bd80:	(bad)  
   14000bd81:	add    BYTE PTR [rdx+0x0],ah
   14000bd84:	ins    BYTE PTR es:[rdi],dx
   14000bd85:	add    BYTE PTR [rcx+0x0],ch
   14000bd88:	je     0x14000bd8a
   14000bd8a:	jns    0x14000bd8c
   14000bd8c:	and    BYTE PTR [rax],al
   14000bd8e:	jae    0x14000bd90
   14000bd90:	je     0x14000bd92
   14000bd92:	(bad)  
   14000bd93:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000bd97:	add    BYTE PTR [rax],ah
   14000bd99:	add    BYTE PTR [rsi+0x0],ah
   14000bd9c:	outs   dx,DWORD PTR ds:[rsi]
   14000bd9d:	add    BYTE PTR [rdx+0x0],dh
   14000bda0:	and    BYTE PTR [rax],al
   14000bda2:	jo     0x14000bda4
   14000bda4:	(bad)  
   14000bda5:	add    BYTE PTR [rbx+0x0],ah
   14000bda8:	imul   eax,DWORD PTR [rax],0x61
   14000bdab:	add    BYTE PTR [rdi+0x0],ah
   14000bdae:	add    BYTE PTR gs:[rax],ah
   14000bdb1:	add    BYTE PTR [rip+0x3a007300],ah        # 0x17a0130b7
   14000bdb7:	add    BYTE PTR [rax],ah
   14000bdb9:	add    BYTE PTR [rax],dh
   14000bdbb:	add    BYTE PTR [rax+0x0],bh
   14000bdbe:	and    eax,0x7800
	...
   14000bdcf:	add    BYTE PTR [rax+0x0],dl
   14000bdd2:	(bad)  
   14000bdd3:	add    BYTE PTR [rbx+0x0],ah
   14000bdd6:	imul   eax,DWORD PTR [rax],0x61
   14000bdd9:	add    BYTE PTR [rdi+0x0],ah
   14000bddc:	add    BYTE PTR gs:[rax],ah
   14000bddf:	add    BYTE PTR [rbx+0x0],ah
   14000bde2:	(bad)  
   14000bde3:	add    BYTE PTR [rsi+0x0],ch
   14000bde6:	outs   dx,BYTE PTR ds:[rsi]
   14000bde7:	add    BYTE PTR [rdi+0x0],ch
   14000bdea:	je     0x14000bdec
   14000bdec:	and    BYTE PTR [rax],al
   14000bdee:	(bad)  
   14000bdef:	add    BYTE PTR [rbp+0x0],ah
   14000bdf2:	and    BYTE PTR [rax],al
   14000bdf4:	jae    0x14000bdf6
   14000bdf6:	je     0x14000bdf8
   14000bdf8:	(bad)  
   14000bdf9:	add    BYTE PTR [rdi+0x0],ah
   14000bdfc:	add    BYTE PTR gs:[rax+rax*1+0x2c],ah
   14000be01:	add    BYTE PTR [rax],ah
   14000be03:	add    BYTE PTR [rcx+0x0],ch
   14000be06:	jae    0x14000be08
   14000be08:	and    BYTE PTR [rax],al
   14000be0a:	(bad)  
   14000be0b:	add    BYTE PTR [rax+rax*1+0x72],ch
   14000be0f:	add    BYTE PTR [rbp+0x0],ah
   14000be12:	(bad)  
   14000be13:	add    BYTE PTR [rax+rax*1+0x79],ah
   14000be17:	add    BYTE PTR [rax],ah
   14000be19:	add    BYTE PTR [rcx+0x0],ch
   14000be1c:	outs   dx,BYTE PTR ds:[rsi]
   14000be1d:	add    BYTE PTR [rax],ah
   14000be1f:	add    BYTE PTR [rbx+0x0],dh
   14000be22:	je     0x14000be24
   14000be24:	(bad)  
   14000be25:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000be29:	add    BYTE PTR [rax],ah
   14000be2b:	add    BYTE PTR [rip+0x6400],ah        # 0x140012231
	...
   14000be3d:	add    BYTE PTR [rax],al
   14000be3f:	add    BYTE PTR [rsi+0x0],al
   14000be42:	(bad)  
   14000be43:	add    BYTE PTR [rcx+0x0],ch
   14000be46:	ins    BYTE PTR es:[rdi],dx
   14000be47:	add    BYTE PTR [rbp+0x0],ah
   14000be4a:	add    BYTE PTR fs:[rax],ah
   14000be4d:	add    BYTE PTR [rbx+0x0],dh
   14000be50:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000be55:	add    BYTE PTR [rcx+0x0],ch
   14000be58:	outs   dx,BYTE PTR ds:[rsi]
   14000be59:	add    BYTE PTR [rdi+0x0],ah
   14000be5c:	and    BYTE PTR [rax],al
   14000be5e:	jae    0x14000be60
   14000be60:	je     0x14000be62
   14000be62:	(bad)  
   14000be63:	add    BYTE PTR [rdi+0x0],ah
   14000be66:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000be6b:	add    BYTE PTR [rbx+0x0],dh
   14000be6e:	je     0x14000be70
   14000be70:	(bad)  
   14000be71:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000be75:	add    BYTE PTR [rax],ah
   14000be77:	add    BYTE PTR [rsi+0x0],ah
   14000be7a:	outs   dx,DWORD PTR ds:[rsi]
   14000be7b:	add    BYTE PTR [rdx+0x0],dh
   14000be7e:	and    BYTE PTR [rax],al
   14000be80:	jo     0x14000be82
   14000be82:	(bad)  
   14000be83:	add    BYTE PTR [rbx+0x0],ah
   14000be86:	imul   eax,DWORD PTR [rax],0x61
   14000be89:	add    BYTE PTR [rdi+0x0],ah
   14000be8c:	add    BYTE PTR gs:[rax],ah
   14000be8f:	add    BYTE PTR [rip+0x3a007300],ah        # 0x17a013195
   14000be95:	add    BYTE PTR [rax],ah
   14000be97:	add    BYTE PTR [rax],dh
   14000be99:	add    BYTE PTR [rax+0x0],bh
   14000be9c:	and    eax,0x7800
   14000bea1:	add    BYTE PTR [rax],al
   14000bea3:	add    BYTE PTR [rax],al
   14000bea5:	add    BYTE PTR [rax],al
   14000bea7:	add    BYTE PTR [rbx+0x43],al
   14000beaa:	(bad)  
   14000beac:	rex.XB ins BYTE PTR es:[rdi],dx
   14000beae:	imul   esp,DWORD PTR [rbp+0x6e],0x413a3a74
   14000beb5:	fs imul r13d,DWORD PTR fs:[rbp+r12*2+0x53],0x6372756f
   14000bec0:	add    BYTE PTR gs:[rax],al
   14000bec3:	add    BYTE PTR [rax],al
   14000bec5:	add    BYTE PTR [rax],al
   14000bec7:	add    BYTE PTR [rsi+0x6f],cl
   14000beca:	je     0x14000bef9
   14000becc:	outs   dx,BYTE PTR ds:[rsi]
   14000becd:	jne    0x14000bf3b
   14000becf:	ins    BYTE PTR es:[rdi],dx
   14000bed0:	and    BYTE PTR [rbx+0x68],ah
   14000bed3:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000bed7:	data16 (bad) 
   14000bed9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7a73203a
   14000bee1:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x6372756f
   14000beea:	add    BYTE PTR gs:[rax],al
   14000beed:	add    BYTE PTR [rax],al
   14000beef:	add    BYTE PTR [rsi+0x0],al
   14000bef2:	(bad)  
   14000bef3:	add    BYTE PTR [rcx+0x0],ch
   14000bef6:	ins    BYTE PTR es:[rdi],dx
   14000bef7:	add    BYTE PTR [rbp+0x0],ah
   14000befa:	add    BYTE PTR fs:[rax],ah
   14000befd:	add    BYTE PTR [rcx+0x0],dh
   14000bf00:	jne    0x14000bf02
   14000bf02:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bf06:	jns    0x14000bf08
   14000bf08:	imul   eax,DWORD PTR [rax],0x67006e
   14000bf0e:	and    BYTE PTR [rax],al
   14000bf10:	rex.WB add BYTE PTR [r11+0x0],al
   14000bf14:	(bad)  
   14000bf15:	add    BYTE PTR [rbx+0x0],dh
   14000bf18:	push   rbx
   14000bf19:	add    BYTE PTR [rbp+0x0],ah
   14000bf1c:	jae    0x14000bf1e
   14000bf1e:	jae    0x14000bf20
   14000bf20:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bf26:	cmp    BYTE PTR [rax],al
   14000bf28:	and    BYTE PTR [rax],al
   14000bf2a:	imul   eax,DWORD PTR [rax],0x74006e
   14000bf30:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bf34:	data16 add BYTE PTR [rcx+0x0],ah
   14000bf38:	movsxd eax,DWORD PTR [rax]
   14000bf3a:	add    BYTE PTR gs:[rsi],ch
   14000bf3d:	add    BYTE PTR [rdx],bh
   14000bf3f:	add    BYTE PTR [rax],ah
   14000bf41:	add    BYTE PTR [rax],dh
   14000bf43:	add    BYTE PTR [rax+0x0],bh
   14000bf46:	and    eax,0x7800
   14000bf4b:	add    BYTE PTR [rax],al
   14000bf4d:	add    BYTE PTR [rax],al
   14000bf4f:	add    BYTE PTR [rsi+0x0],al
   14000bf52:	(bad)  
   14000bf53:	add    BYTE PTR [rcx+0x0],ch
   14000bf56:	ins    BYTE PTR es:[rdi],dx
   14000bf57:	add    BYTE PTR [rbp+0x0],ah
   14000bf5a:	add    BYTE PTR fs:[rax],ah
   14000bf5d:	add    BYTE PTR [rcx+0x0],ah
   14000bf60:	add    BYTE PTR fs:[rax+rax*1+0x69],ah
   14000bf65:	add    BYTE PTR [rsi+0x0],ch
   14000bf68:	add    BYTE PTR [eax],ah
   14000bf6b:	add    BYTE PTR [rsi+0x0],ah
   14000bf6e:	imul   eax,DWORD PTR [rax],0x65006c
   14000bf74:	and    BYTE PTR [rax],al
   14000bf76:	jae    0x14000bf78
   14000bf78:	outs   dx,DWORD PTR ds:[rsi]
   14000bf79:	add    BYTE PTR [rbp+0x0],dh
   14000bf7c:	jb     0x14000bf7e
   14000bf7e:	movsxd eax,DWORD PTR [rax]
   14000bf80:	add    BYTE PTR gs:[rax],ah
   14000bf83:	add    BYTE PTR [rip+0x20007300],ah        # 0x160013289
   14000bf89:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000bf8d:	add    BYTE PTR [rax],ah
   14000bf8f:	add    BYTE PTR [rbx+0x0],dh
   14000bf92:	add    BYTE PTR gs:[rbx+0x0],dh
   14000bf96:	jae    0x14000bf98
   14000bf98:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bf9e:	cmp    al,BYTE PTR [rax]
   14000bfa0:	and    BYTE PTR [rax],al
   14000bfa2:	xor    BYTE PTR [rax],al
   14000bfa4:	js     0x14000bfa6
   14000bfa6:	and    eax,0x7800
   14000bfab:	add    BYTE PTR [rax],al
   14000bfad:	add    BYTE PTR [rax],al
   14000bfaf:	add    BYTE PTR [rax+0x0],dl
   14000bfb2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bfb6:	data16 add BYTE PTR [rdi+0x0],ch
   14000bfba:	jb     0x14000bfbc
   14000bfbc:	ins    DWORD PTR es:[rdi],dx
   14000bfbd:	add    BYTE PTR [rcx+0x0],ch
   14000bfc0:	outs   dx,BYTE PTR ds:[rsi]
   14000bfc1:	add    BYTE PTR [rdi+0x0],ah
   14000bfc4:	and    BYTE PTR [rax],al
   14000bfc6:	outs   dx,DWORD PTR ds:[rsi]
   14000bfc7:	add    BYTE PTR [rsi+0x0],ah
   14000bfca:	data16 add BYTE PTR [rax+rax*1+0x69],ch
   14000bfcf:	add    BYTE PTR [rsi+0x0],ch
   14000bfd2:	add    BYTE PTR gs:[rax],ah
   14000bfd5:	add    BYTE PTR [rbx+0x0],dh
   14000bfd8:	je     0x14000bfda
   14000bfda:	(bad)  
   14000bfdb:	add    BYTE PTR [rbx+0x0],ah
   14000bfde:	imul   eax,DWORD PTR [rax],0x20
   14000bfe1:	add    BYTE PTR [rsi+0x0],ah
   14000bfe4:	imul   eax,DWORD PTR [rax],0x61006e
   14000bfea:	ins    BYTE PTR es:[rdi],dx
   14000bfeb:	add    BYTE PTR [rcx+0x0],ch
   14000bfee:	jp     0x14000bff0
   14000bff0:	(bad)  
   14000bff1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000bff5:	add    BYTE PTR [rdi+0x0],ch
   14000bff8:	outs   dx,BYTE PTR ds:[rsi]
   14000bff9:	add    BYTE PTR [rax],al
   14000bffb:	add    BYTE PTR [rax],al
   14000bffd:	add    BYTE PTR [rax],al
   14000bfff:	add    BYTE PTR [rcx+0x4ff568c8],bl
   14000c005:	scas   eax,DWORD PTR es:[rdi]
   14000c006:	stos   BYTE PTR es:[rdi],al
   14000c007:	rex.WRX mov cl,0x2a
   14000c00a:	mov    eax,0x19b2f1e5
   14000c00f:	ficom  WORD PTR [rbx-0xd8adf8d]
   14000c015:	and    edx,DWORD PTR [rsi-0x700f7abd]
   14000c01b:	fild   DWORD PTR [rdi-0x6e122f62]
   14000c021:	jae    0x14000c043
   14000c023:	jne    0x14000c017
   14000c025:	and    edx,DWORD PTR [rsi-0x700f7abd]
   14000c02b:	fild   DWORD PTR [rdi-0x6d122f62]
   14000c031:	jae    0x14000c053
   14000c033:	jne    0x14000c027
   14000c035:	and    edx,DWORD PTR [rsi-0x700f7abd]
   14000c03b:	fild   DWORD PTR [rdi+0x62edd09e]
   14000c041:	(bad)  
   14000c042:	jae    0x14000c0a9
   14000c044:	pop    rsp
   14000c045:	jb     0x14000c0ac
   14000c047:	ins    BYTE PTR es:[rdi],dx
   14000c048:	imul   esp,DWORD PTR [rcx+0x62],0x74696c69
   14000c04f:	jns    0x14000c0ad
   14000c051:	jb     0x14000c0b8
   14000c053:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000c056:	gs jb  0x14000c0d2
   14000c059:	pop    rsp
   14000c05a:	jo     0x14000c0c8
   14000c05c:	jne    0x14000c0c5
   14000c05e:	imul   ebp,DWORD PTR [rsi+0x73],0x7362635c
   14000c065:	pop    rsp
   14000c066:	jne    0x14000c0dc
   14000c068:	imul   ebp,DWORD PTR [rsp+rbx*2+0x63],0x69737362
   14000c070:	ins    DWORD PTR es:[rdi],dx
   14000c071:	jo     0x14000c0df
   14000c073:	gs jne 0x14000c0df
   14000c076:	movsxd esi,DWORD PTR cs:[rax+0x70]
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	add    BYTE PTR [rax],al
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	rex.XB
   14000c081:	rex.XB (bad) 
   14000c084:	push   rbx
   14000c085:	imul   ebp,DWORD PTR [rbp+0x70],0x4955656c
   14000c08c:	rex.W (bad) 
   14000c08e:	outs   dx,BYTE PTR ds:[rsi]
   14000c08f:	fs ins BYTE PTR es:[rdi],dx
   14000c091:	gs jb  0x14000c0ce
   14000c094:	cmp    al,BYTE PTR [rbp+0x72]
   14000c097:	jb     0x14000c108
   14000c099:	jb     0x14000c09b
   14000c09b:	add    BYTE PTR [rax],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rsi+0x6f],cl
   14000c0a2:	je     0x14000c0d1
   14000c0a4:	outs   dx,BYTE PTR ds:[rsi]
   14000c0a5:	jne    0x14000c113
   14000c0a7:	ins    BYTE PTR es:[rdi],dx
   14000c0a8:	and    BYTE PTR [rbx+0x68],ah
   14000c0ab:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000c0af:	data16 (bad) 
   14000c0b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5270203a
   14000c0b9:	gs jae 0x14000c12c
   14000c0bc:	outs   dx,DWORD PTR ds:[rsi]
   14000c0bd:	outs   dx,BYTE PTR ds:[rsi]
   14000c0be:	jae    0x14000c125
	...
   14000c0c8:	sub    BYTE PTR [rax],al
   14000c0ca:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c0ce:	jo     0x14000c0d0
   14000c0d0:	je     0x14000c0d2
   14000c0d2:	jns    0x14000c0d4
   14000c0d4:	sub    DWORD PTR [rax],eax
	...
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	push   rbx
   14000c0e1:	add    BYTE PTR [rbp+0x0],ah
   14000c0e4:	jb     0x14000c0e6
   14000c0e6:	jbe    0x14000c0e8
   14000c0e8:	imul   eax,DWORD PTR [rax],0x690063
   14000c0ee:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ef:	add    BYTE PTR [rdi+0x0],ah
   14000c0f2:	and    BYTE PTR [rax],al
   14000c0f4:	jae    0x14000c0f6
   14000c0f6:	je     0x14000c0f8
   14000c0f8:	(bad)  
   14000c0f9:	add    BYTE PTR [rbx+0x0],ah
   14000c0fc:	imul   eax,DWORD PTR [rax],0x20
   14000c0ff:	add    BYTE PTR [rcx+0x0],ch
   14000c102:	jae    0x14000c104
   14000c104:	and    BYTE PTR [rax],al
   14000c106:	add    BYTE PTR [edi+0x0],ch
   14000c10a:	imul   eax,DWORD PTR [rax],0x67006e
   14000c110:	and    BYTE PTR [rax],al
   14000c112:	add    BYTE PTR fs:[rdi+0x0],ch
   14000c116:	ja     0x14000c118
   14000c118:	outs   dx,BYTE PTR ds:[rsi]
   14000c119:	add    BYTE PTR [rax],ah
   14000c11b:	add    BYTE PTR [rsi+0x0],ah
   14000c11e:	outs   dx,DWORD PTR ds:[rsi]
   14000c11f:	add    BYTE PTR [rdx+0x0],dh
   14000c122:	and    BYTE PTR [rax],al
   14000c124:	jae    0x14000c126
   14000c126:	add    BYTE PTR gs:[rax+rax*1+0x66],ch
   14000c12b:	add    BYTE PTR [rip+0x70007500],ch        # 0x1b0013631
   14000c131:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000c135:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c139:	add    BYTE PTR [rsi],ch
   14000c13b:	add    BYTE PTR [rax],ah
   14000c13d:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000c141:	add    BYTE PTR [rcx+0x0],ch
   14000c144:	jae    0x14000c146
   14000c146:	and    BYTE PTR [rax],al
   14000c148:	imul   eax,DWORD PTR [rax],0x200073
   14000c14e:	outs   dx,BYTE PTR ds:[rsi]
   14000c14f:	add    BYTE PTR [rdi+0x0],ch
   14000c152:	je     0x14000c154
   14000c154:	and    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR gs:[rax+0x0],bh
   14000c15a:	jo     0x14000c15c
   14000c15c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000c160:	je     0x14000c162
   14000c162:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000c167:	add    BYTE PTR [rdi+0x0],ch
   14000c16a:	outs   dx,BYTE PTR ds:[rsi]
   14000c16b:	add    BYTE PTR [rax],ah
   14000c16d:	add    BYTE PTR [rdi+0x0],dl
   14000c170:	imul   eax,DWORD PTR [rax],0x64006e
   14000c176:	outs   dx,DWORD PTR ds:[rsi]
   14000c177:	add    BYTE PTR [rdi+0x0],dh
   14000c17a:	jae    0x14000c17c
   14000c17c:	and    BYTE PTR [rax],al
   14000c17e:	cmp    BYTE PTR [rax],al
   14000c180:	sub    eax,DWORD PTR [rax]
   14000c182:	add    BYTE PTR [rax],al
   14000c184:	add    BYTE PTR [rax],al
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	sub    BYTE PTR [rax],ch
   14000c18a:	rex.W push rdx
   14000c18c:	rex.RB push r11
   14000c18e:	push   rbp
   14000c18f:	rex.WR push rsp
   14000c191:	sub    DWORD PTR [rax],esi
   14000c193:	js     0x14000c1cd
   14000c195:	xor    BYTE PTR [rax],dh
   14000c197:	xor    BYTE PTR [rsi+0x46],al
   14000c19a:	rex.RX
   14000c19b:	rex.RX
   14000c19c:	sub    QWORD PTR [rax],r8
   14000c19f:	add    BYTE PTR [rbx+0x0],dl
   14000c1a2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c1a6:	jbe    0x14000c1a8
   14000c1a8:	imul   eax,DWORD PTR [rax],0x690063
   14000c1ae:	outs   dx,BYTE PTR ds:[rsi]
   14000c1af:	add    BYTE PTR [rdi+0x0],ah
   14000c1b2:	and    BYTE PTR [rax],al
   14000c1b4:	jae    0x14000c1b6
   14000c1b6:	je     0x14000c1b8
   14000c1b8:	(bad)  
   14000c1b9:	add    BYTE PTR [rbx+0x0],ah
   14000c1bc:	imul   eax,DWORD PTR [rax],0x20
   14000c1bf:	add    BYTE PTR [rdx+0x0],dh
   14000c1c2:	add    BYTE PTR gs:[rax+0x0],dh
   14000c1c6:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c7:	add    BYTE PTR [rdx+0x0],dh
   14000c1ca:	je     0x14000c1cc
   14000c1cc:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000c1d1:	add    BYTE PTR [rbx+0x0],ah
   14000c1d4:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d5:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c1d9:	add    BYTE PTR [rax],ah
   14000c1db:	add    BYTE PTR [rax],dh
   14000c1dd:	add    BYTE PTR [rax+0x0],bh
   14000c1e0:	and    eax,0x3a007800
   14000c1e5:	add    BYTE PTR [rax],ah
   14000c1e7:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e0134ed
   14000c1ed:	add    BYTE PTR [rax],al
   14000c1ef:	add    BYTE PTR [rdx+0x0],dl
   14000c1f2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c1f6:	outs   dx,DWORD PTR ds:[rsi]
   14000c1f7:	add    BYTE PTR [rax+rax*1+0x76],ch
   14000c1fb:	add    BYTE PTR [rbp+0x0],ah
   14000c1fe:	and    BYTE PTR [rax],al
   14000c200:	jae    0x14000c202
   14000c202:	outs   dx,DWORD PTR ds:[rsi]
   14000c203:	add    BYTE PTR [rbp+0x0],dh
   14000c206:	jb     0x14000c208
   14000c208:	movsxd eax,DWORD PTR [rax]
   14000c20a:	add    BYTE PTR gs:[rax],ah
   14000c20d:	add    BYTE PTR [rbx+0x0],ah
   14000c210:	(bad)  
   14000c211:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000c215:	add    BYTE PTR [rbp+0x0],ah
   14000c218:	add    BYTE PTR fs:[rax],ah
   14000c21b:	add    BYTE PTR [rdi+0x0],ch
   14000c21e:	outs   dx,BYTE PTR ds:[rsi]
   14000c21f:	add    BYTE PTR [rdx],bh
   14000c221:	add    BYTE PTR [rax],ah
   14000c223:	add    BYTE PTR [rip+0x7300],ah        # 0x140013529
   14000c229:	add    BYTE PTR [rax],al
   14000c22b:	add    BYTE PTR [rax],al
   14000c22d:	add    BYTE PTR [rax],al
   14000c22f:	add    BYTE PTR [rdx+0x0],dl
   14000c232:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c236:	outs   dx,DWORD PTR ds:[rsi]
   14000c237:	add    BYTE PTR [rax+rax*1+0x76],ch
   14000c23b:	add    BYTE PTR [rbp+0x0],ah
   14000c23e:	and    BYTE PTR [rax],al
   14000c240:	jae    0x14000c242
   14000c242:	outs   dx,DWORD PTR ds:[rsi]
   14000c243:	add    BYTE PTR [rbp+0x0],dh
   14000c246:	jb     0x14000c248
   14000c248:	movsxd eax,DWORD PTR [rax]
   14000c24a:	add    BYTE PTR gs:[rax],ah
   14000c24d:	add    BYTE PTR [rax+0x0],dh
   14000c250:	(bad)  
   14000c251:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c255:	add    BYTE PTR [rdx],bh
   14000c257:	add    BYTE PTR [rax],ah
   14000c259:	add    BYTE PTR [rip+0x7300],ah        # 0x14001355f
   14000c25f:	add    BYTE PTR [rbx+0x43],al
   14000c262:	(bad)  
   14000c264:	push   rbx
   14000c265:	imul   ebp,DWORD PTR [rbp+0x70],0x4955656c
   14000c26c:	rex.W (bad) 
   14000c26e:	outs   dx,BYTE PTR ds:[rsi]
   14000c26f:	fs ins BYTE PTR es:[rdi],dx
   14000c271:	gs jb  0x14000c2ae
   14000c274:	cmp    dl,BYTE PTR [rax+0x72]
   14000c277:	outs   dx,DWORD PTR ds:[rsi]
   14000c278:	addr32 jb 0x14000c2e0
   14000c27b:	jae    0x14000c2f0
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    BYTE PTR [rip+0x0],ah        # 0x14000c285
   14000c285:	add    BYTE PTR [rax],al
   14000c287:	add    BYTE PTR [rdi+0x0],cl
   14000c28a:	jo     0x14000c28c
   14000c28c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c290:	(bad)  
   14000c291:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c295:	add    BYTE PTR [rdi+0x0],ch
   14000c298:	outs   dx,BYTE PTR ds:[rsi]
   14000c299:	add    BYTE PTR [rax],ah
   14000c29b:	add    BYTE PTR [rcx+0x0],ch
   14000c29e:	jae    0x14000c2a0
   14000c2a0:	and    BYTE PTR [rax],al
   14000c2a2:	and    eax,0x2e006400
   14000c2a7:	add    BYTE PTR [rip+0x25006400],ah        # 0x1650126ad
   14000c2ad:	add    BYTE PTR [rbx+0x0],dh
   14000c2b0:	and    BYTE PTR [rax],al
   14000c2b2:	movsxd eax,DWORD PTR [rax]
   14000c2b4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2b5:	add    BYTE PTR [rbp+0x0],ch
   14000c2b8:	jo     0x14000c2ba
   14000c2ba:	ins    BYTE PTR es:[rdi],dx
   14000c2bb:	add    BYTE PTR [rbp+0x0],ah
   14000c2be:	je     0x14000c2c0
   14000c2c0:	add    BYTE PTR gs:[rsi],ch
   14000c2c3:	add    BYTE PTR [rax],al
   14000c2c5:	add    BYTE PTR [rax],al
   14000c2c7:	add    BYTE PTR [rsi+rcx*4+0x6d87bfe1],bl
   14000c2ce:	push   rax
   14000c2cf:	rex.R mov bl,0x7c
   14000c2d2:	loopne 0x14000c303
   14000c2d4:	or     esi,DWORD PTR [rdi]
   14000c2d6:	cmp    BYTE PTR [rbx],al
   14000c2d8:	mov    edi,0x82673425
   14000c2dd:	sar    BYTE PTR [rsp+rcx*2-0x43],0xfd
   14000c2e2:	push   rsi
   14000c2e3:	xchg   esp,eax
   14000c2e4:	fs mov eax,0xc0f2cee0
   14000c2ea:	clc    
   14000c2eb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c2ec:	clc    
   14000c2ed:	jnp    0x14000c2f4
   14000c2ef:	sub    edx,edx
   14000c2f1:	push   rbp
   14000c2f2:	adc    eax,0xc022ff6e
   14000c2f7:	jnp    0x14000c335
   14000c2f9:	add    BYTE PTR [rsi+0x0],cl
   14000c2fc:	push   rbp
   14000c2fd:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14000c301:	add    BYTE PTR [rsi],bh
   14000c303:	add    BYTE PTR [rax],al
   14000c305:	add    BYTE PTR [rax],al
   14000c307:	add    BYTE PTR [rsi+0x0],cl
   14000c30a:	push   rbp
   14000c30b:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14000c30f:	add    BYTE PTR [rax],al
   14000c311:	add    BYTE PTR [rax],al
   14000c313:	add    BYTE PTR [rax+rax*1+0x2a],bl
   14000c317:	add    BYTE PTR [rax],al
   14000c319:	add    BYTE PTR [rax],al
   14000c31b:	add    BYTE PTR [rsi],ch
   14000c31d:	add    BYTE PTR [rax],al
   14000c31f:	add    BYTE PTR [rsi],ch
   14000c321:	add    BYTE PTR [rsi],ch
   14000c323:	add    BYTE PTR [rax],al
   14000c325:	add    BYTE PTR [rax],al
   14000c327:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c01362d
   14000c32d:	add    BYTE PTR [rip+0x7300],ah        # 0x140013633
   14000c333:	add    BYTE PTR [rax],al
   14000c335:	add    BYTE PTR [rax],al
   14000c337:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000c33b:	add    BYTE PTR [rdi],bh
   14000c33d:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000c341:	add    BYTE PTR [rax],al
   14000c343:	add    BYTE PTR [rax],al
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rax-0x60],ch
   14000c34a:	adc    BYTE PTR [rsi],al
   14000c34c:	cs rex.WRB out 0x7c,eax
   14000c350:	sub    eax,0x4501621c
   14000c355:	rex.WB sar BYTE PTR [r15+0x6c0047],0x6f
   14000c35d:	add    BYTE PTR [rdx+0x0],ah
   14000c360:	(bad)  
   14000c361:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000c365:	add    BYTE PTR [rbx+0x0],dl
   14000c368:	rex.XB add BYTE PTR [r15+0x0],bl
   14000c36c:	add    BYTE PTR [r13+0x0],sil
   14000c370:	je     0x14000c372
   14000c372:	outs   dx,DWORD PTR ds:[rsi]
   14000c373:	add    BYTE PTR [rbx+0x0],dl
   14000c376:	je     0x14000c378
   14000c378:	(bad)  
   14000c379:	add    BYTE PTR [rdx+0x0],dh
   14000c37c:	je     0x14000c37e
   14000c37e:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c382:	ins    DWORD PTR es:[rdi],dx
   14000c383:	add    BYTE PTR [rax+0x0],dh
   14000c386:	ins    BYTE PTR es:[rdi],dx
   14000c387:	add    BYTE PTR [rbp+0x0],ah
   14000c38a:	je     0x14000c38c
   14000c38c:	add    BYTE PTR gs:[rax],al
   14000c38f:	add    BYTE PTR [rsi],ah
   14000c391:	pop    rax
   14000c392:	xchg   ecx,eax
   14000c393:	lea    edi,[rip+0x47b6f804]        # 0x187b7bb9d
   14000c399:	mov    esp,DWORD PTR [rsi+0x4a]
   14000c39c:	(bad)
   14000c3a0:	jo     0x14000c415
   14000c3a2:	movsxd edi,DWORD PTR [rdx+0x0]
   14000c3a5:	add    BYTE PTR [rax],al
   14000c3a7:	add    BYTE PTR [rdx+0x61],ah
   14000c3aa:	jae    0x14000c411
   14000c3ac:	pop    rsp
   14000c3ad:	movsxd esp,DWORD PTR [rdx+0x73]
   14000c3b0:	pop    rsp
   14000c3b1:	jne    0x14000c427
   14000c3b3:	imul   ebp,DWORD PTR [rsp+rbx*2+0x63],0x74737362
   14000c3bb:	jb     0x14000c3eb
   14000c3bd:	movsxd esi,DWORD PTR [rax+0x70]
	...
   14000c3c8:	jae    0x14000c43e
   14000c3ca:	jb     0x14000c435
   14000c3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000c3cd:	and    BYTE PTR [ebx+0x69],dh
   14000c3d1:	jp     0x14000c438
   14000c3d3:	je     0x14000c444
   14000c3d5:	outs   dx,DWORD PTR ds:[rsi]
   14000c3d6:	and    BYTE PTR [rdx+0x69],ah
   14000c3d9:	add    BYTE PTR [eax],al
   14000c3dc:	add    BYTE PTR [rax],al
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	rex.RX (bad) 
   14000c3e2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c3ea:	addr32 gs je 0x14000c40e
   14000c3ee:	jae    0x14000c459
   14000c3f0:	jp     0x14000c457
   14000c3f2:	and    BYTE PTR [rdi+0x66],ch
   14000c3f5:	and    BYTE PTR [rbp+0x78],ah
   14000c3f8:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
   14000c3ff:	jae    0x14000c475
   14000c401:	jb     0x14000c46c
   14000c403:	outs   dx,BYTE PTR ds:[rsi]
   14000c404:	add    BYTE PTR [eax],al
   14000c407:	add    BYTE PTR [rsi+0x61],al
   14000c40a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c412:	(bad)  
   14000c413:	ins    BYTE PTR es:[rdi],dx
   14000c414:	ins    BYTE PTR es:[rdi],dx
   14000c415:	outs   dx,DWORD PTR ds:[rsi]
   14000c416:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c419:	and    BYTE PTR gs:[rbx+0x74],dh
   14000c41d:	jb     0x14000c488
   14000c41f:	outs   dx,BYTE PTR ds:[rsi]
   14000c420:	add    BYTE PTR [eax],al
   14000c423:	add    BYTE PTR [rax],al
   14000c425:	add    BYTE PTR [rax],al
   14000c427:	add    BYTE PTR [rbx+0x7a],dh
   14000c42a:	rex.B jo 0x14000c49d
   14000c42d:	outs   dx,BYTE PTR gs:[rsi]
   14000c42f:	add    BYTE PTR fs:[rax],al
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	rex.RX (bad) 
   14000c43a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c442:	addr32 gs je 0x14000c466
   14000c446:	jae    0x14000c4b1
   14000c448:	jp     0x14000c4af
   14000c44a:	and    BYTE PTR [rdi+0x66],ch
   14000c44d:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14000c451:	je     0x14000c4bc
   14000c453:	outs   dx,BYTE PTR ds:[rsi]
   14000c454:	(bad)  
   14000c455:	je     0x14000c4c0
   14000c457:	outs   dx,DWORD PTR ds:[rsi]
   14000c458:	outs   dx,BYTE PTR ds:[rsi]
   14000c459:	and    BYTE PTR [rbx+0x74],dh
   14000c45c:	jb     0x14000c4c7
   14000c45e:	outs   dx,BYTE PTR ds:[rsi]
   14000c45f:	add    BYTE PTR cs:[eax],al
   14000c463:	add    BYTE PTR [rax],al
   14000c465:	add    BYTE PTR [rax],al
   14000c467:	add    BYTE PTR [rsi+0x61],al
   14000c46a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c472:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c475:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c478:	and    BYTE PTR [rbx+0x74],dh
   14000c47b:	jb     0x14000c4e6
   14000c47d:	outs   dx,BYTE PTR ds:[rsi]
   14000c47e:	add    BYTE PTR cs:[eax],al
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	add    BYTE PTR [rax],al
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	jae    0x14000c504
   14000c48a:	rex.B jo 0x14000c4fd
   14000c48d:	outs   dx,BYTE PTR gs:[rsi]
   14000c48f:	xor    al,BYTE PTR fs:[rax]
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	add    BYTE PTR [rax],al
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	rex.RX (bad) 
   14000c49a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c4a2:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c4a5:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c4a8:	and    BYTE PTR [rbx+0x65],dh
   14000c4ab:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c4ae:	and    BYTE PTR fs:[rbx+0x74],dh
   14000c4b2:	jb     0x14000c51d
   14000c4b4:	outs   dx,BYTE PTR ds:[rsi]
   14000c4b5:	add    BYTE PTR cs:[ebx+0x7a],dh
   14000c4ba:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c4bc:	jb     0x14000c52b
   14000c4be:	(bad)  
   14000c4bf:	je     0x14000c4c1
   14000c4c1:	add    BYTE PTR [rax],al
   14000c4c3:	add    BYTE PTR [rax],al
   14000c4c5:	add    BYTE PTR [rax],al
   14000c4c7:	add    BYTE PTR [rdx],ch
   14000c4c9:	jae    0x14000c545
   14000c4cb:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c4cd:	jb     0x14000c53c
   14000c4cf:	(bad)  
   14000c4d0:	je     0x14000c4d2
   14000c4d2:	add    BYTE PTR [rax],al
   14000c4d4:	jo     0x14000c546
   14000c4d6:	jae    0x14000c53b
   14000c4d8:	jp     0x14000c4da
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	add    BYTE PTR [rax],al
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	data16 (bad) 
   14000c4e2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c4ea:	(bad)  
   14000c4eb:	ins    BYTE PTR es:[rdi],dx
   14000c4ec:	ins    BYTE PTR es:[rdi],dx
   14000c4ed:	outs   dx,DWORD PTR ds:[rsi]
   14000c4ee:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c4f1:	and    BYTE PTR gs:[rbx+0x74],dh
   14000c4f5:	jb     0x14000c560
   14000c4f7:	outs   dx,BYTE PTR ds:[rsi]
   14000c4f8:	and    BYTE PTR [edi+ebp*2+0x20],dh
   14000c4fd:	outs   dx,WORD PTR ds:[rsi]
   14000c4ff:	jb     0x14000c56e
   14000c501:	(bad)  
   14000c502:	je     0x14000c53e
   14000c504:	and    BYTE PTR [rip+0x61460053],ah        # 0x1a146c55d
   14000c50a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c512:	(bad)  
   14000c513:	ins    BYTE PTR es:[rdi],dx
   14000c514:	ins    BYTE PTR es:[rdi],dx
   14000c515:	outs   dx,DWORD PTR ds:[rsi]
   14000c516:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c519:	and    BYTE PTR gs:[rbx+0x74],dh
   14000c51d:	jb     0x14000c588
   14000c51f:	outs   dx,BYTE PTR ds:[rsi]
   14000c520:	and    BYTE PTR [edi+ebp*2+0x20],dh
   14000c525:	outs   dx,WORD PTR ds:[rsi]
   14000c527:	jb     0x14000c596
   14000c529:	(bad)  
   14000c52a:	je     0x14000c566
   14000c52c:	and    BYTE PTR [rip+0x61460053],ah        # 0x1a146c585
   14000c532:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c53a:	outs   dx,WORD PTR ds:[rsi]
   14000c53c:	jb     0x14000c5ab
   14000c53e:	(bad)  
   14000c53f:	je     0x14000c561
   14000c541:	jae    0x14000c5b7
   14000c543:	jb     0x14000c5ae
   14000c545:	outs   dx,BYTE PTR ds:[rsi]
   14000c546:	add    BYTE PTR cs:[eax],al
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	add    BYTE PTR [rax],al
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	rex.RX (bad) 
   14000c552:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c55a:	(bad)  
   14000c55b:	ins    BYTE PTR es:[rdi],dx
   14000c55c:	ins    BYTE PTR es:[rdi],dx
   14000c55d:	outs   dx,DWORD PTR ds:[rsi]
   14000c55e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c561:	and    BYTE PTR gs:[rsi+0x65],ch
   14000c565:	ja     0x14000c587
   14000c567:	jae    0x14000c5dd
   14000c569:	jb     0x14000c5d4
   14000c56b:	outs   dx,BYTE PTR ds:[rsi]
   14000c56c:	add    BYTE PTR [eax],al
   14000c56f:	add    BYTE PTR [rsi+0x61],al
   14000c572:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c57a:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000c57d:	jns    0x14000c59f
   14000c57f:	jae    0x14000c5f0
   14000c581:	jne    0x14000c5f5
   14000c583:	movsxd esp,DWORD PTR [rbp+0x20]
   14000c586:	jae    0x14000c5fc
   14000c588:	jb     0x14000c5f3
   14000c58a:	outs   dx,BYTE PTR ds:[rsi]
   14000c58b:	and    BYTE PTR [edi+ebp*2+0x20],dh
   14000c590:	fs gs jae 0x14000c608
   14000c594:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
   14000c59b:	add    BYTE PTR [rax+0x63],dh
   14000c59e:	movsxd ebp,DWORD PTR [rax+0x0]
   14000c5a1:	add    BYTE PTR [rax],al
   14000c5a3:	add    BYTE PTR [rax],al
   14000c5a5:	add    BYTE PTR [rax],al
   14000c5a7:	add    BYTE PTR [rbp+0x6e],dl
   14000c5aa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000c5ae:	outs   dx,BYTE PTR ds:[rsi]
   14000c5af:	and    BYTE PTR [rbp+0x72],al
   14000c5b2:	jb     0x14000c623
   14000c5b4:	jb     0x14000c5b6
   14000c5b6:	add    BYTE PTR [rax],al
   14000c5b8:	rex.WRX push rsp
   14000c5ba:	push   rbx
   14000c5bb:	push   rsp
   14000c5bc:	push   r12
   14000c5be:	push   rbp
   14000c5bf:	push   rbx
   14000c5c0:	and    BYTE PTR [rbp+0x72],al
   14000c5c3:	jb     0x14000c634
   14000c5c5:	jb     0x14000c5c7
   14000c5c7:	add    BYTE PTR [rip+0x485b2073],ah        # 0x1885be640
   14000c5cd:	push   rdx
   14000c5ce:	rex.RB push r11
   14000c5d0:	push   rbp
   14000c5d1:	rex.WR push rsp
   14000c5d3:	and    BYTE PTR [rip+0x25783020],bh        # 0x16578f5f9
   14000c5d9:	xor    BYTE PTR [rax],bh
   14000c5db:	js     0x14000c5fd
   14000c5dd:	sub    eax,0x5d732520
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	add    BYTE PTR [rax],al
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	(bad)  
   14000c5ea:	jae    0x14000c651
   14000c5ec:	pop    rsp
   14000c5ed:	movsxd esp,DWORD PTR [rdx+0x73]
   14000c5f0:	pop    rsp
   14000c5f1:	jne    0x14000c667
   14000c5f3:	imul   ebp,DWORD PTR [rsp+rbx*2+0x63],0x74757362
   14000c5fb:	imul   ebp,DWORD PTR [rsi+rbp*1+0x63],0x7070
   14000c603:	add    BYTE PTR [rax+rax*1+0x0],al
   14000c607:	add    BYTE PTR [rbx+0x42],al
   14000c60a:	push   rbx
   14000c60b:	push   rdi
   14000c60c:	fs jae 0x14000c65b
   14000c60f:	outs   dx,DWORD PTR ds:[rsi]
   14000c610:	add    BYTE PTR [eax],al
   14000c613:	add    BYTE PTR [rax],al
   14000c615:	add    BYTE PTR [rax],al
   14000c617:	add    BYTE PTR [rip+0x485b2073],ah        # 0x1885be690
   14000c61d:	push   rdx
   14000c61e:	rex.RB push r11
   14000c620:	push   rbp
   14000c621:	rex.WR push rsp
   14000c623:	and    BYTE PTR [rip+0x25783020],bh        # 0x16578f649
   14000c629:	xor    BYTE PTR [rax],bh
   14000c62b:	js     0x14000c68a
   14000c62d:	add    BYTE PTR [rax],al
   14000c62f:	add    BYTE PTR [rbx+0x42],al
   14000c632:	push   rbx
   14000c633:	push   rdi
   14000c634:	fs jae 0x14000c683
   14000c637:	outs   dx,DWORD PTR ds:[rsi]
   14000c638:	imul   r12,QWORD PTR [edi+0x68],0x41000074
   14000c641:	jae    0x14000c6b6
   14000c643:	gs jb  0x14000c6ba
   14000c646:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   14000c64d:	ins    BYTE PTR es:[rdi],dx
   14000c64e:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000c653:	and    BYTE PTR [rip+0x69252873],ah        # 0x1a925eecc
   14000c659:	sub    DWORD PTR [rdx],ecx
   14000c65b:	and    eax,0x73
   14000c660:	rex.B jae 0x14000c6d6
   14000c663:	gs jb  0x14000c6da
   14000c666:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   14000c66d:	ins    BYTE PTR es:[rdi],dx
   14000c66e:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000c673:	and    BYTE PTR [rip+0x69252873],ah        # 0x1a925eeec
   14000c679:	sub    DWORD PTR [rax],eax
   14000c67b:	add    BYTE PTR [rax],al
   14000c67d:	add    BYTE PTR [rax],al
   14000c67f:	add    BYTE PTR [rcx+0x53],al
   14000c682:	push   rbx
   14000c683:	rex.RB push r10
   14000c685:	push   rsp
   14000c686:	cmp    ah,BYTE PTR [rax]
   14000c688:	and    eax,0x73
   14000c68d:	add    BYTE PTR [rax],al
   14000c68f:	add    BYTE PTR [rcx+0x73],al
   14000c692:	jae    0x14000c6f9
   14000c694:	jb     0x14000c70a
   14000c696:	and    BYTE PTR [rsi+0x61],ah
   14000c699:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c6a1:	(bad)  
   14000c6a2:	jne    0x14000c70d
   14000c6a4:	ins    BYTE PTR es:[rdi],dx
   14000c6a5:	and    BYTE PTR fs:[rbx+0x74],dh
   14000c6a9:	jb     0x14000c714
   14000c6ab:	outs   dx,BYTE PTR ds:[rsi]
   14000c6ac:	add    BYTE PTR cs:[eax],al
   14000c6b0:	push   r11
   14000c6b2:	push   rbx
   14000c6b3:	rex.RB push r10
   14000c6b5:	push   rsp
   14000c6b6:	cmp    ah,BYTE PTR [rax]
   14000c6b8:	rex.B jae 0x14000c72e
   14000c6bb:	gs jb  0x14000c732
   14000c6be:	and    BYTE PTR [rsi+0x61],ah
   14000c6c1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c6c9:	(bad)  
   14000c6ca:	jne    0x14000c735
   14000c6cc:	ins    BYTE PTR es:[rdi],dx
   14000c6cd:	and    BYTE PTR fs:[rbx+0x74],dh
   14000c6d1:	jb     0x14000c73c
   14000c6d3:	outs   dx,BYTE PTR ds:[rsi]
   14000c6d4:	add    BYTE PTR cs:[eax],al
   14000c6d8:	(bad)  
   14000c6da:	jae    0x14000c741
   14000c6dc:	pop    rsp
   14000c6dd:	movsxd esp,DWORD PTR [rdx+0x73]
   14000c6e0:	pop    rsp
   14000c6e1:	jne    0x14000c757
   14000c6e3:	imul   ebp,DWORD PTR [rsp+rbx*2+0x63],0x65727362
   14000c6eb:	movsxd esi,DWORD PTR cs:[eax+0x70]
	...
   14000c6f8:	rex.RX (bad) 
   14000c6fa:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c702:	outs   dx,DWORD PTR ds:[rsi]
   14000c703:	jo     0x14000c76a
   14000c705:	outs   dx,BYTE PTR ds:[rsi]
   14000c706:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000c70a:	and    BYTE PTR [rdx+0x65],dh
   14000c70d:	imul   esi,DWORD PTR [ebx+0x74],0x72207972
   14000c715:	outs   dx,DWORD PTR ds:[rsi]
   14000c716:	outs   dx,DWORD PTR ds:[rsi]
   14000c717:	je     0x14000c753
   14000c719:	and    BYTE PTR [rsi+0x2f],ch
   14000c71c:	(bad)  
   14000c71d:	sub    al,0x20
   14000c71f:	imul   esp,DWORD PTR [rbp+0x79],0x3a
   14000c723:	and    BYTE PTR [rip+0x46002e53],ah        # 0x18600f57c
   14000c729:	(bad)  
   14000c72a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c732:	addr32 gs je 0x14000c756
   14000c736:	jo     0x14000c7aa
   14000c738:	outs   dx,DWORD PTR ds:[rsi]
   14000c739:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c73c:	jae    0x14000c75e
   14000c73e:	je     0x14000c7af
   14000c740:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000c744:	je     0x14000c7b5
   14000c746:	and    BYTE PTR [rbx+0x65],dh
   14000c749:	je     0x14000c76b
   14000c74b:	jo     0x14000c7bf
   14000c74d:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14000c754:	jae    0x14000c776
   14000c756:	imul   ebp,DWORD PTR [rsi+0x74],0x2e6f
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rsi+0x61],al
   14000c762:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c76a:	jno    0x14000c7e1
   14000c76c:	gs jb  0x14000c7e8
   14000c76f:	and    BYTE PTR [rdx+0x65],dh
   14000c772:	imul   esi,DWORD PTR [ebx+0x74],0x76207972
   14000c77a:	(bad)  
   14000c77b:	ins    BYTE PTR es:[rdi],dx
   14000c77c:	jne    0x14000c7e3
   14000c77e:	cmp    ah,BYTE PTR [rax]
   14000c780:	and    eax,0x53
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    BYTE PTR [rax+0x64],dh
   14000c78a:	ja     0x14000c7e2
   14000c78c:	(bad)  
   14000c78d:	ins    BYTE PTR es:[rdi],dx
   14000c78e:	jne    0x14000c7f5
	...
   14000c798:	push   rdx
   14000c799:	imul   esi,DWORD PTR gs:[ebx+0x74],0x76207972
   14000c7a2:	(bad)  
   14000c7a3:	ins    BYTE PTR es:[rdi],dx
   14000c7a4:	jne    0x14000c80b
   14000c7a6:	and    BYTE PTR [rcx+0x73],ch
   14000c7a9:	and    BYTE PTR [rsi+0x6f],ch
   14000c7ac:	je     0x14000c7ce
   14000c7ae:	(bad)  
   14000c7af:	and    BYTE PTR [rdi+rdx*2+0x4f],al
   14000c7b3:	push   rdx
   14000c7b4:	and    BYTE PTR [rcx+rdi*2+0x70],r14b
   14000c7b9:	gs add BYTE PTR cs:[rax],al
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    BYTE PTR [rsi+0x61],al
   14000c7c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c7ca:	(bad)  
   14000c7cb:	ins    BYTE PTR es:[rdi],dx
   14000c7cc:	ins    BYTE PTR es:[rdi],dx
   14000c7cd:	outs   dx,DWORD PTR ds:[rsi]
   14000c7ce:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c7d1:	and    BYTE PTR gs:[rbp+0x65],ch
   14000c7d5:	ins    DWORD PTR es:[rdi],dx
   14000c7d6:	outs   dx,DWORD PTR ds:[rsi]
   14000c7d7:	jb     0x14000c852
   14000c7d9:	and    BYTE PTR [rsi+0x6f],ah
   14000c7dc:	jb     0x14000c7fe
   14000c7de:	ins    DWORD PTR es:[rdi],dx
   14000c7df:	outs   dx,DWORD PTR ds:[rsi]
   14000c7e0:	imul   esp,DWORD PTR fs:[rsi+0x69],0x70206465
   14000c7e8:	jb     0x14000c853
   14000c7ea:	jbe    0x14000c855
   14000c7ec:	ins    BYTE PTR es:[rdi],dx
   14000c7ed:	gs and BYTE PTR gs:[edi+ebp*2+0x6b],dh
   14000c7f4:	outs   dx,BYTE PTR gs:[rsi]
   14000c7f6:	jae    0x14000c826
	...
   14000c800:	rex.RX (bad) 
   14000c802:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c80a:	(bad)  
   14000c80b:	fs push 0x75
   14000c80e:	jae    0x14000c884
   14000c810:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   14000c814:	outs   dx,BYTE PTR gs:[rsi]
   14000c816:	and    BYTE PTR [rax+0x72],dh
   14000c819:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14000c820:	jae    0x14000c842
   14000c822:	(bad)  
   14000c823:	data16 je 0x14000c88b
   14000c826:	jb     0x14000c848
   14000c828:	jb     0x14000c88f
   14000c82a:	jae    0x14000c895
   14000c82c:	jp     0x14000c897
   14000c82e:	outs   dx,BYTE PTR ds:[rsi]
   14000c82f:	and    BYTE PTR [edi+ebp*2+0x20],dh
   14000c834:	(bad)  
   14000c835:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000c838:	ins    DWORD PTR es:[rdi],dx
   14000c839:	ins    DWORD PTR es:[rdi],dx
   14000c83a:	outs   dx,DWORD PTR ds:[rsi]
   14000c83b:	fs (bad) 
   14000c83d:	je     0x14000c8a4
   14000c83f:	and    BYTE PTR [rbp+0x6f],ch
   14000c842:	imul   esp,DWORD PTR fs:[rsi+0x69],0x70206465
   14000c84a:	jb     0x14000c8b5
   14000c84c:	jbe    0x14000c8b7
   14000c84e:	ins    BYTE PTR es:[rdi],dx
   14000c84f:	gs addr32 gs jae 0x14000c882
   14000c854:	add    BYTE PTR [rax],al
   14000c856:	add    BYTE PTR [rax],al
   14000c858:	rex.RX (bad) 
   14000c85a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c862:	(bad)  
   14000c863:	fs push 0x75
   14000c866:	jae    0x14000c8dc
   14000c868:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   14000c86c:	outs   dx,BYTE PTR gs:[rsi]
   14000c86e:	and    BYTE PTR [rax+0x72],dh
   14000c871:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14000c878:	jae    0x14000c8a8
   14000c87a:	add    BYTE PTR [rax],al
   14000c87c:	add    BYTE PTR [rax],al
   14000c87e:	add    BYTE PTR [rax],al
   14000c880:	rex.RX (bad) 
   14000c882:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c88a:	(bad)  
   14000c88b:	ins    BYTE PTR es:[rdi],dx
   14000c88c:	ins    BYTE PTR es:[rdi],dx
   14000c88d:	outs   dx,DWORD PTR ds:[rsi]
   14000c88e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c891:	and    BYTE PTR gs:[rbp+0x65],ch
   14000c895:	ins    DWORD PTR es:[rdi],dx
   14000c896:	outs   dx,DWORD PTR ds:[rsi]
   14000c897:	jb     0x14000c912
   14000c899:	and    BYTE PTR [rsi+0x6f],ah
   14000c89c:	jb     0x14000c8be
   14000c89e:	jo     0x14000c912
   14000c8a0:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14000c8a7:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   14000c8ab:	outs   dx,BYTE PTR gs:[rsi]
   14000c8ad:	jae    0x14000c8dd
   14000c8af:	add    BYTE PTR [rsi+0x61],al
   14000c8b2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000c8ba:	jae    0x14000c921
   14000c8bc:	je     0x14000c8de
   14000c8be:	jo     0x14000c932
   14000c8c0:	imul   esi,DWORD PTR [rsi+0x69],0x6567656c
   14000c8c7:	jae    0x14000c8f7
   14000c8c9:	add    BYTE PTR [rax],al
   14000c8cb:	add    BYTE PTR [rax],al
   14000c8cd:	add    BYTE PTR [rax],al
   14000c8cf:	add    BYTE PTR [rdi-0x1af078ca],bl
   14000c8d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c8d6:	cld    
   14000c8d7:	rex.WR movabs rbp,0xc7dd724515e6733e
   14000c8e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c8e2:	stos   DWORD PTR es:[rdi],eax
   14000c8e3:	(bad)  
   14000c8e4:	test   eax,0x9640134d
   14000c8e9:	xchg   edi,eax
   14000c8ea:	and    ah,cl
   14000c8ec:	(bad)  
   14000c8ed:	(bad)  
   14000c8ee:	jne    0x14073c950
   14000c8f4:	jae    0x14000c8f6
   14000c8f6:	jae    0x14000c8f8
   14000c8f8:	push   0x6d006900
   14000c8fd:	add    BYTE PTR [rsi],ch
   14000c8ff:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000c903:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c907:	add    BYTE PTR [rcx-0xd8adf8d],ah
   14000c90d:	and    edx,DWORD PTR [rsi-0x700f7abd]
   14000c913:	fild   DWORD PTR [rdi+0xedd09e]
	...
   14000c921:	add    BYTE PTR [rax],al
   14000c923:	add    dl,ah
   14000c925:	cmp    BYTE PTR [rdi+0x55],bl
   14000c92b:	add    BYTE PTR [rdx],al
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	add    BYTE PTR [rcx],dh
   14000c931:	add    BYTE PTR [rax],al
   14000c933:	add    BYTE PTR [rax],ah
   14000c935:	retf   0x0
   14000c938:	and    BYTE PTR [rax+0x0],bh
   14000c93e:	add    BYTE PTR [rax],al
   14000c940:	loop   0x14000c97a
   14000c942:	lahf   
   14000c943:	push   rbp
   14000c944:	add    BYTE PTR [rax],al
   14000c946:	add    BYTE PTR [rax],al
   14000c948:	or     eax,0xe0000000
   14000c94d:	add    DWORD PTR [rax],eax
   14000c94f:	add    BYTE PTR [rax-0x36],ch
   14000c952:	add    BYTE PTR [rax],al
   14000c954:	push   0xb8
	...
   14000c97d:	add    BYTE PTR [rax],al
   14000c97f:	add    BYTE PTR [rax+0x0],ah
	...
   14000c9d5:	add    BYTE PTR [rax],al
   14000c9d7:	add    BYTE PTR [rax],cl
   14000c9d9:	loopne 0x14000c9db
   14000c9db:	rex add DWORD PTR [rax],eax
	...
   14000c9ee:	add    BYTE PTR [rax],al
   14000c9f0:	lock xchg edx,eax
   14000c9f2:	add    BYTE PTR [rax+0x1],al
   14000c9f5:	add    BYTE PTR [rax],al
   14000c9f7:	add    al,bh
   14000c9f9:	xchg   edx,eax
   14000c9fa:	add    BYTE PTR [rax+0x1],al
   14000c9fd:	add    BYTE PTR [rax],al
   14000c9ff:	add    BYTE PTR [rax],bh
   14000ca01:	xchg   ebx,eax
   14000ca02:	add    BYTE PTR [rax+0x1],al
   14000ca05:	add    BYTE PTR [rax],al
   14000ca07:	add    BYTE PTR [rsi],bl
	...
   14000ca11:	xor    eax,0x0
	...
   14000ca1e:	add    BYTE PTR [rax],al
   14000ca20:	push   rdx
   14000ca21:	push   rbx
   14000ca22:	rex.R push rbx
   14000ca24:	sbb    al,0xdb
   14000ca27:	mov    al,0x12
   14000ca29:	xor    eax,0x4ab14378
   14000ca2e:	or     eax,0x4967899
   14000ca33:	iret   
   14000ca34:	add    DWORD PTR [rax],eax
   14000ca36:	add    BYTE PTR [rax],al
   14000ca38:	push   rbx
   14000ca39:	jns    0x14000caae
   14000ca3b:	je     0x14000caa2
   14000ca3d:	ins    DWORD PTR es:[rdi],dx
   14000ca3e:	push   rdx
   14000ca3f:	gs jae 0x14000caa7
   14000ca42:	je     0x14000ca93
   14000ca44:	push   rbx
   14000ca45:	push   rbp
   14000ca46:	jo     0x14000caac
   14000ca48:	(bad)  
   14000ca49:	je     0x14000cab0
   14000ca4b:	jae    0x14000ca7b
   14000ca4d:	jo     0x14000cab3
   14000ca4f:	(bad)  
	...
   14000ca68:	rex.RXB
   14000ca69:	rex.XB push r12
   14000ca6b:	rex.WR add BYTE PTR [rax],r10b
   14000ca6e:	add    BYTE PTR [rax],al
   14000ca70:	sbb    BYTE PTR [rax+0x0],bh
   14000ca73:	add    BYTE PTR [rsi],ch
   14000ca75:	je     0x14000cadc
   14000ca77:	js     0x14000caed
   14000ca79:	and    al,0x6d
   14000ca7b:	outs   dx,BYTE PTR ds:[rsi]
   14000ca7c:	add    BYTE PTR [rax],al
   14000ca7e:	add    BYTE PTR [rax],al
   14000ca80:	and    BYTE PTR [rax+0x7d0000],cl
   14000ca86:	add    BYTE PTR [rax],al
   14000ca88:	cs je  0x14000caf0
   14000ca8b:	js     0x14000cb01
   14000ca8d:	and    al,0x6d
   14000ca8f:	outs   dx,BYTE PTR ds:[rsi]
   14000ca90:	and    al,0x30
   14000ca92:	xor    BYTE PTR [rax],al
   14000ca94:	movabs al,ds:0x2e000000a0000088
   14000ca9d:	je     0x14000cb04
   14000ca9f:	js     0x14000cb15
   14000caa1:	and    al,0x78
   14000caa3:	add    BYTE PTR [rax],al
   14000caa5:	nop
   14000caa6:	add    BYTE PTR [rax],al
   14000caa8:	lock add al,BYTE PTR [rax]
   14000caab:	add    BYTE PTR [rsi],ch
   14000caad:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000cab5:	add    BYTE PTR [rax],al
   14000cab7:	add    al,dh
   14000cab9:	xchg   edx,eax
   14000caba:	add    BYTE PTR [rax],al
   14000cabc:	adc    BYTE PTR [rax],al
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	xor    BYTE PTR cs:[rax],dh
   14000cac3:	movsxd esp,DWORD PTR [rsi+0x67]
   14000cac6:	add    BYTE PTR [rax],al
   14000cac8:	add    BYTE PTR [rbx+0x80000],dl
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	cs rex.XB push r10
   14000cad3:	push   rsp
   14000cad4:	and    al,0x58
   14000cad6:	rex.XB
   14000cad7:	add    BYTE PTR [r8],al
   14000cada:	add    BYTE PTR [rax],al
   14000cadc:	or     BYTE PTR [rbx+0x80000],dl
   14000cae2:	add    BYTE PTR [rax],al
   14000cae4:	cs rex.XB push r10
   14000cae7:	push   rsp
   14000cae8:	and    al,0x58
   14000caea:	rex.XB
   14000caeb:	rex.B
   14000caec:	add    BYTE PTR [r8],al
   14000caef:	add    BYTE PTR [rax],dl
   14000caf1:	xchg   ebx,eax
   14000caf2:	add    BYTE PTR [rax],al
   14000caf4:	or     BYTE PTR [rax],al
   14000caf6:	add    BYTE PTR [rax],al
   14000caf8:	cs rex.XB push r10
   14000cafb:	push   rsp
   14000cafc:	and    al,0x58
   14000cafe:	rex.XB pop r10
   14000cb00:	add    BYTE PTR [rax],al
   14000cb02:	add    BYTE PTR [rax],al
   14000cb04:	sbb    BYTE PTR [rbx+0x80000],dl
   14000cb0a:	add    BYTE PTR [rax],al
   14000cb0c:	cs rex.XB push r10
   14000cb0f:	push   rsp
   14000cb10:	and    al,0x58
   14000cb12:	rex.WB
   14000cb13:	add    BYTE PTR [r8],al
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	and    BYTE PTR [rbx+0x80000],dl
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	cs rex.XB push r10
   14000cb23:	push   rsp
   14000cb24:	and    al,0x58
   14000cb26:	rex.WB
   14000cb27:	rex.B
   14000cb28:	add    BYTE PTR [r8],al
   14000cb2b:	add    BYTE PTR [rax],ch
   14000cb2d:	xchg   ebx,eax
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	or     BYTE PTR [rax],al
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	cs rex.XB push r10
   14000cb37:	push   rsp
   14000cb38:	and    al,0x58
   14000cb3a:	rex.WB pop r9
   14000cb3c:	add    BYTE PTR [rax],al
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	xor    BYTE PTR [rbx+0x80000],dl
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	cs rex.XB push r10
   14000cb4b:	push   rsp
   14000cb4c:	and    al,0x58
   14000cb4e:	rex.WB pop r10
   14000cb50:	add    BYTE PTR [rax],al
   14000cb52:	add    BYTE PTR [rax],al
   14000cb54:	cmp    BYTE PTR [rbx+0x780000],dl
   14000cb5a:	add    BYTE PTR [rax],al
   14000cb5c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000cb65:	add    BYTE PTR [rax],al
   14000cb67:	add    BYTE PTR [rax+0x70000093],dh
   14000cb6d:	add    BYTE PTR ss:[rax],al
   14000cb70:	cs jb  0x14000cbd7
   14000cb73:	(bad)  
   14000cb74:	je     0x14000cbd7
   14000cb76:	add    BYTE PTR [rax],al
   14000cb78:	and    dl,cl
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	sub    BYTE PTR [rdx],al
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	cs jb  0x14000cbe7
   14000cb83:	(bad)  
   14000cb84:	je     0x14000cbe7
   14000cb86:	and    al,0x7a
   14000cb88:	jp     0x14000cc04
   14000cb8a:	fs (bad) 
   14000cb8c:	add    BYTE PTR [eax],al
   14000cb8f:	add    BYTE PTR [rax-0x34],cl
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	cmp    BYTE PTR [rsi],al
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	cs js  0x14000cbff
   14000cb9b:	(bad)  
   14000cb9c:	je     0x14000cbff
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	adc    dl,0x0
   14000cba3:	add    BYTE PTR [rax+0x0],bh
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000cbb1:	add    BYTE PTR [rax],al
   14000cbb3:	add    al,bh
   14000cbb5:	rol    BYTE PTR [rax],cl
   14000cbb7:	add    BYTE PTR [rax+rax*1],dl
   14000cbba:	add    BYTE PTR [rax],al
   14000cbbc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000cbc5:	add    BYTE PTR [rax],al
   14000cbc7:	add    BYTE PTR [rax],dl
   14000cbc9:	rol    DWORD PTR [rax],cl
   14000cbcb:	add    al,dh
   14000cbcd:	add    al,BYTE PTR [rax]
   14000cbcf:	add    BYTE PTR [rsi],ch
   14000cbd1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000cbd9:	add    BYTE PTR [rax],al
   14000cbdb:	add    BYTE PTR [rax],al
   14000cbdd:	(bad)  
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	fiadd  WORD PTR [rip+0x692e0000]        # 0x1a92ecbe6
   14000cbe6:	fs (bad) 
   14000cbe8:	je     0x14000cc4b
   14000cbea:	and    al,0x36
   14000cbec:	add    BYTE PTR [rax],al
   14000cbee:	add    BYTE PTR [rax],al
   14000cbf0:	add    al,ah
   14000cbf2:	add    BYTE PTR [rax],al
   14000cbf4:	xor    BYTE PTR [rax],al
   14000cbf6:	add    BYTE PTR [rax],al
   14000cbf8:	cs fs (bad) 
   14000cbfb:	je     0x14000cc5e
   14000cbfd:	add    BYTE PTR [rax],al
   14000cbff:	add    BYTE PTR [rax],dh
   14000cc01:	loopne 0x14000cc03
   14000cc03:	add    BYTE PTR [rax+0x6],dh
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	cs (bad) 
   14000cc0b:	jae    0x14000cc0d
   14000cc0d:	add    BYTE PTR [rax],al
   14000cc0f:	add    BYTE PTR [rax],al
   14000cc11:	lock add BYTE PTR [rax],al
   14000cc14:	add    al,0x5
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	cs jo  0x14000cc7f
   14000cc1b:	(bad)  
   14000cc1c:	je     0x14000cc7f
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	add    BYTE PTR [rax],al
   14000cc22:	add    DWORD PTR [rax],eax
   14000cc24:	movabs al,ds:0x637273722e000000
   14000cc2d:	and    al,0x30
   14000cc2f:	xor    DWORD PTR [rax],eax
   14000cc31:	add    BYTE PTR [rax],al
   14000cc33:	add    BYTE PTR [rax+0x10000100],ah
   14000cc39:	(bad)  
   14000cc3a:	add    BYTE PTR [rax],al
   14000cc3c:	cs jb  0x14000ccb2
   14000cc3f:	jb     0x14000cca4
   14000cc41:	and    al,0x30
   14000cc43:	xor    al,BYTE PTR [rax]
   14000cc45:	add    BYTE PTR [rax],al
   14000cc47:	add    BYTE PTR [rcx],al
   14000cc49:	add    al,0x1
   14000cc4b:	add    BYTE PTR [rdx+rax*2],al
   14000cc4e:	add    BYTE PTR [rax],al
   14000cc50:	sbb    DWORD PTR [rdi],ebx
   14000cc52:	(bad)  
   14000cc53:	add    BYTE PTR [rcx],dl
   14000cc55:	add    DWORD PTR [rdi],edx
   14000cc57:	add    BYTE PTR [rip+0x3600470],al        # 0x14360d0cd
   14000cc5d:	xor    BYTE PTR [rdx],al
   14000cc5f:	push   rax
   14000cc60:	int3   
   14000cc61:	xchg   BYTE PTR [rax],al
   14000cc63:	add    BYTE PTR [rax+0x19000000],ch
   14000cc69:	(bad)  
   14000cc6a:	or     al,BYTE PTR [rax]
   14000cc6c:	sbb    DWORD PTR [rcx],eax
   14000cc6e:	sbb    DWORD PTR [rax],eax
   14000cc70:	or     eax,0x9e00bf0
   14000cc75:	rol    BYTE PTR [rdi],1
   14000cc77:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d0ee
   14000cc7e:	add    dl,BYTE PTR [rax-0x34]
   14000cc81:	xchg   BYTE PTR [rax],al
   14000cc83:	add    BYTE PTR [rax+0x19000000],bh
   14000cc89:	sub    ecx,DWORD PTR [rcx]
   14000cc8b:	add    BYTE PTR [rdx],bl
   14000cc8d:	add    DWORD PTR [rax+0x9f00b00],edx
   14000cc93:	loopne 0x14000cc9c
   14000cc95:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d10c
   14000cc9c:	add    dl,BYTE PTR [rax+0x0]
   14000cc9f:	add    ah,cl
   14000cca1:	xchg   BYTE PTR [rax],al
   14000cca3:	add    BYTE PTR [rax+0x4],dh
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	sbb    DWORD PTR [rax],esp
   14000ccaa:	(bad)  
   14000ccab:	add    BYTE PTR [rdx],dl
   14000ccad:	je     0x14000ccbf
   14000ccaf:	add    BYTE PTR [rdx],dl
   14000ccb1:	xor    al,0xe
   14000ccb3:	add    BYTE PTR [rdx],dl
   14000ccb5:	mov    dl,0xb
   14000ccb7:	push   rax
   14000ccb8:	int3   
   14000ccb9:	xchg   BYTE PTR [rax],al
   14000ccbb:	add    BYTE PTR [rax+0x0],bl
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	sbb    DWORD PTR [rdi],ebx
   14000ccc2:	or     BYTE PTR [rax],al
   14000ccc4:	adc    BYTE PTR [rbx+rdx*1],dh
   14000ccc7:	add    BYTE PTR [rax],dl
   14000ccc9:	xchg   edx,eax
   14000ccca:	or     al,0xf0
   14000cccc:	or     ah,al
   14000ccce:	or     BYTE PTR [rax+0x7],dh
   14000ccd1:	(bad)  
   14000ccd2:	(bad)  
   14000ccd3:	push   rax
   14000ccd4:	int3   
   14000ccd5:	xchg   BYTE PTR [rax],al
   14000ccd7:	add    BYTE PTR [rax+0x0],cl
   14000ccda:	add    BYTE PTR [rax],al
   14000ccdc:	sbb    DWORD PTR [rip+0x1170009],esp        # 0x14117cceb
   14000cce2:	sbb    al,0x0
   14000cce4:	or     esi,eax
   14000cce6:	or     eax,esp
   14000cce8:	(bad)  
   14000cce9:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d160
   14000ccf0:	add    dl,BYTE PTR [rax+0x0]
   14000ccf3:	add    ah,cl
   14000ccf5:	xchg   BYTE PTR [rax],al
   14000ccf7:	add    al,dl
   14000ccf9:	add    BYTE PTR [rax],al
   14000ccfb:	add    BYTE PTR [rcx],bl
   14000ccfd:	sub    al,0xb
   14000ccff:	add    BYTE PTR [rsi],bl
   14000cd01:	fs sbb al,0x0
   14000cd04:	(bad)  
   14000cd05:	xor    al,0x1a
   14000cd07:	add    BYTE PTR [rsi],bl
   14000cd09:	add    DWORD PTR [rax+rax*1],edx
   14000cd0c:	adc    dh,al
   14000cd0e:	adc    al,ah
   14000cd10:	(bad)  
   14000cd11:	ror    BYTE PTR [rax+rsi*2],1
   14000cd14:	or     edx,DWORD PTR [rax+0x0]
   14000cd17:	add    ah,cl
   14000cd19:	xchg   BYTE PTR [rax],al
   14000cd1b:	add    BYTE PTR [rax+0x1000000],dl
   14000cd21:	sbb    DWORD PTR [rdx],ecx
   14000cd23:	add    BYTE PTR [rcx],bl
   14000cd25:	je     0x14000cd30
   14000cd27:	add    BYTE PTR [rcx],bl
   14000cd29:	or     BYTE PTR fs:[rax],al
   14000cd2c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000cd30:	sbb    DWORD PTR [rsi+rax*1],esi
   14000cd33:	add    BYTE PTR [rcx],bl
   14000cd35:	xor    dl,BYTE PTR [rip+0xc1c01e0]        # 0x14c1ccf1b
   14000cd3b:	add    BYTE PTR [rsp+riz*2],bl
   14000cd3e:	or     al,0x0
   14000cd40:	sbb    al,0x54
   14000cd42:	or     eax,DWORD PTR [rax]
   14000cd44:	sbb    al,0x34
   14000cd46:	or     al,BYTE PTR [rax]
   14000cd48:	sbb    al,0x32
   14000cd4a:	sbb    al,dh
   14000cd4c:	(bad)  
   14000cd4d:	loopne 0x14000cd63
   14000cd4f:	rcl    BYTE PTR [rdx],1
   14000cd51:	rcl    BYTE PTR [rax],0x70
   14000cd54:	add    DWORD PTR [rdx],ecx
   14000cd56:	add    al,0x0
   14000cd58:	or     dh,BYTE PTR [rsi+rax*1]
   14000cd5b:	add    BYTE PTR [rdx],cl
   14000cd5d:	xor    al,BYTE PTR [rsi]
   14000cd5f:	jo     0x14000cd62
   14000cd61:	clts   
   14000cd63:	add    BYTE PTR [rdi],cl
   14000cd65:	or     DWORD PTR fs:[rax],eax
   14000cd68:	sysenter 
   14000cd6a:	or     BYTE PTR [rax],al
   14000cd6c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000cd6f:	jo     0x14000cd72
   14000cd71:	(bad)  
   14000cd72:	add    al,BYTE PTR [rax]
   14000cd74:	(bad)  
   14000cd75:	xor    al,BYTE PTR [rdx]
   14000cd77:	xor    BYTE PTR [rcx],bl
   14000cd79:	sbb    eax,0x340f0006
   14000cd7e:	adc    eax,DWORD PTR [rax]
   14000cd80:	psrld  mm1,QWORD PTR [rax]
   14000cd83:	jo     0x14000cd8c
   14000cd85:	(bad)  
   14000cd86:	(bad)  
   14000cd87:	push   rax
   14000cd88:	int3   
   14000cd89:	xchg   BYTE PTR [rax],al
   14000cd8b:	add    BYTE PTR [rax+0x0],ch
   14000cd8e:	add    BYTE PTR [rax],al
   14000cd90:	add    DWORD PTR [rdi],ecx
   14000cd92:	(bad)  
   14000cd93:	add    BYTE PTR [rdi],cl
   14000cd95:	fs (bad) 
   14000cd97:	add    BYTE PTR [rdi],cl
   14000cd99:	xor    al,0x6
   14000cd9b:	add    BYTE PTR [rdi],cl
   14000cd9d:	xor    cl,BYTE PTR [rbx]
   14000cd9f:	jo     0x14000cda2
   14000cda1:	adc    eax,0x74150008
   14000cda6:	or     BYTE PTR [rax],al
   14000cda8:	adc    eax,0x15000764
   14000cdad:	xor    al,0x6
   14000cdaf:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0dee7
   14000cdb5:	ss (bad) 
   14000cdb7:	add    BYTE PTR [rip+0x10040c01],ah        # 0x15004d9be
   14000cdbd:	loopne 0x14000cdcd
   14000cdbf:	jo     0x14000cdce
   14000cdc1:	(bad)  
   14000cdc2:	or     al,0x30
   14000cdc4:	or     edx,DWORD PTR [rax+0x0]
   14000cdc7:	add    ah,cl
   14000cdc9:	xchg   BYTE PTR [rax],al
   14000cdcb:	add    BYTE PTR [rax+0x20],dl
   14000cdce:	add    BYTE PTR [rax],al
   14000cdd0:	sbb    DWORD PTR [rdx],ebp
   14000cdd2:	or     al,BYTE PTR [rax]
   14000cdd4:	sbb    al,0x64
   14000cdd6:	sbb    DWORD PTR [rax],eax
   14000cdd8:	sbb    al,0x34
   14000cdda:	sbb    BYTE PTR [rax],al
   14000cddc:	sbb    al,0xf2
   14000cdde:	adc    dh,al
   14000cde0:	adc    al,ah
   14000cde2:	(bad)  
   14000cde3:	ror    BYTE PTR [rax+rsi*2],0xb
   14000cde7:	push   rax
   14000cde8:	int3   
   14000cde9:	xchg   BYTE PTR [rax],al
   14000cdeb:	add    BYTE PTR [rax+0x0],bh
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	sbb    DWORD PTR [rdi],ebx
   14000cdf2:	(bad)  
   14000cdf3:	add    BYTE PTR [rcx],dl
   14000cdf5:	repnz (bad) 
   14000cdf7:	loopne 0x14000cdfe
   14000cdf9:	jo     0x14000cdff
   14000cdfb:	(bad)  
   14000cdfc:	add    esi,DWORD PTR [rax]
   14000cdfe:	add    dl,BYTE PTR [rax-0x34]
   14000ce01:	xchg   BYTE PTR [rax],al
   14000ce03:	add    BYTE PTR [rax+0x0],dh
   14000ce06:	add    BYTE PTR [rax],al
   14000ce08:	sbb    DWORD PTR [rcx],ebp
   14000ce0a:	or     al,BYTE PTR [rax]
   14000ce0c:	sbb    esi,DWORD PTR [rbx+rdx*1+0x0]
   14000ce10:	sbb    esp,DWORD PTR [rdx+rdx*1+0x0]
   14000ce14:	sbb    esi,DWORD PTR [rcx+rdx*1]
   14000ce17:	add    BYTE PTR [rbx],bl
   14000ce19:	mov    dl,0x14
   14000ce1b:	lock adc ah,al
   14000ce1e:	adc    BYTE PTR [rax-0x34],dl
   14000ce21:	xchg   BYTE PTR [rax],al
   14000ce23:	add    BYTE PTR [rax+0x0],bl
   14000ce26:	add    BYTE PTR [rax],al
   14000ce28:	sbb    DWORD PTR [rsi],ebx
   14000ce2a:	(bad)  
   14000ce2b:	add    BYTE PTR [rdi],cl
   14000ce2d:	fs (bad) 
   14000ce2f:	add    BYTE PTR [rdi],cl
   14000ce31:	xor    al,0xd
   14000ce33:	add    BYTE PTR [rdi],cl
   14000ce35:	xchg   edx,eax
   14000ce36:	or     esi,DWORD PTR [rax-0x34]
   14000ce39:	xchg   BYTE PTR [rax],al
   14000ce3b:	add    BYTE PTR [rax+0x0],cl
   14000ce3e:	add    BYTE PTR [rax],al
   14000ce40:	sbb    DWORD PTR [rdi],esp
   14000ce42:	or     al,BYTE PTR [rax]
   14000ce44:	sbb    DWORD PTR [rdi+rdx*1+0x0],esp
   14000ce48:	sbb    DWORD PTR [rsi+rdx*1],esi
   14000ce4b:	add    BYTE PTR [rcx],bl
   14000ce4d:	rcl    BYTE PTR [rdx],cl
   14000ce4f:	lock adc al,ah
   14000ce52:	(bad)  
   14000ce53:	ror    BYTE PTR [rax+rsi*2],1
   14000ce56:	or     edx,DWORD PTR [rax-0x34]
   14000ce59:	xchg   BYTE PTR [rax],al
   14000ce5b:	add    BYTE PTR [rax+0x0],ah
   14000ce5e:	add    BYTE PTR [rax],al
   14000ce60:	sbb    DWORD PTR [rsi],ebx
   14000ce62:	(bad)  
   14000ce63:	add    BYTE PTR [rax],dl
   14000ce65:	loop   0x14000ce70
   14000ce67:	lock (bad) 
   14000ce69:	loopne 0x14000ce70
   14000ce6b:	jo     0x14000ce71
   14000ce6d:	(bad)  
   14000ce6e:	add    esi,DWORD PTR [rax]
   14000ce70:	add    dl,BYTE PTR [rax+0x0]
   14000ce73:	add    ah,cl
   14000ce75:	xchg   BYTE PTR [rax],al
   14000ce77:	add    BYTE PTR [rax+0x0],ah
   14000ce7a:	add    BYTE PTR [rax],al
   14000ce7c:	sbb    DWORD PTR [rcx],esp
   14000ce7e:	or     BYTE PTR [rax],al
   14000ce80:	adc    esi,DWORD PTR [rdi+rdx*1]
   14000ce83:	add    BYTE PTR [rbx],dl
   14000ce85:	ror    BYTE PTR [rax+rsi*8],cl
   14000ce88:	or     ah,al
   14000ce8a:	or     BYTE PTR [rax+0x7],dh
   14000ce8d:	(bad)  
   14000ce8e:	(bad)  
   14000ce8f:	push   rax
   14000ce90:	int3   
   14000ce91:	xchg   BYTE PTR [rax],al
   14000ce93:	add    BYTE PTR [rax+0x0],ch
   14000ce96:	add    BYTE PTR [rax],al
   14000ce98:	sbb    DWORD PTR [rcx],esp
   14000ce9a:	or     BYTE PTR [rax],al
   14000ce9c:	adc    esi,DWORD PTR [rsi+rdx*1]
   14000ce9f:	add    BYTE PTR [rbx],dl
   14000cea1:	ror    BYTE PTR [rax+rsi*8],cl
   14000cea4:	or     ah,al
   14000cea6:	or     BYTE PTR [rax+0x7],dh
   14000cea9:	(bad)  
   14000ceaa:	(bad)  
   14000ceab:	push   rax
   14000ceac:	int3   
   14000cead:	xchg   BYTE PTR [rax],al
   14000ceaf:	add    BYTE PTR [rax+0x0],ah
   14000ceb2:	add    BYTE PTR [rax],al
   14000ceb4:	sbb    DWORD PTR [rip+0xffffffffb2060002],edx        # 0xf206cebc
   14000ceba:	add    dh,BYTE PTR [rax]
   14000cebc:	int3   
   14000cebd:	xchg   BYTE PTR [rax],al
   14000cebf:	add    BYTE PTR [rax+0x0],bl
   14000cec2:	add    BYTE PTR [rax],al
   14000cec4:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x1740dced0
   14000ceca:	or     al,BYTE PTR [rax]
   14000cecc:	or     eax,0x7e00932
   14000ced1:	jo     0x14000ced9
   14000ced3:	(bad)  
   14000ced4:	sbb    DWORD PTR [rcx],ebx
   14000ced6:	add    al,0x0
   14000ced8:	or     dh,BYTE PTR [rdi+rcx*1]
   14000cedb:	add    BYTE PTR [rdx],cl
   14000cedd:	mov    dl,0x6
   14000cedf:	jo     0x14000cead
   14000cee1:	xchg   BYTE PTR [rax],al
   14000cee3:	add    BYTE PTR [rax+0x0],bl
   14000cee6:	add    BYTE PTR [rax],al
   14000cee8:	sbb    DWORD PTR [rip+0x340f0004],ebx        # 0x1740fcef2
   14000ceee:	adc    BYTE PTR [rax],al
   14000cef0:	psrld  mm1,QWORD PTR [rax]
   14000cef3:	push   rax
   14000cef4:	int3   
   14000cef5:	xchg   BYTE PTR [rax],al
   14000cef7:	add    BYTE PTR [rax+0x0],ah
   14000cefa:	add    BYTE PTR [rax],al
   14000cefc:	sbb    DWORD PTR [rdi],edx
   14000cefe:	add    al,BYTE PTR [rax]
   14000cf00:	or     BYTE PTR [rdx-0x7933cffc],dh
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	pop    rax
   14000cf09:	add    BYTE PTR [rax],al
   14000cf0b:	add    BYTE PTR [rcx],al
   14000cf0d:	add    al,0x1
   14000cf0f:	add    BYTE PTR [rdx+riz*2],al
   14000cf12:	add    BYTE PTR [rax],al
   14000cf14:	sbb    DWORD PTR [rsi],edx
   14000cf16:	add    DWORD PTR [rax],eax
   14000cf18:	(bad)  
   14000cf19:	movabs ds:0x48000086cc0000,al
   14000cf22:	add    BYTE PTR [rax],al
   14000cf24:	sbb    DWORD PTR [rdi],esp
   14000cf26:	or     al,BYTE PTR [rax]
   14000cf28:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   14000cf2c:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   14000cf30:	sbb    BYTE PTR [rsp+rcx*1],dh
   14000cf33:	add    BYTE PTR [rax],bl
   14000cf35:	jb     0x14000cf4b
   14000cf37:	lock adc ah,al
   14000cf3a:	adc    BYTE PTR [rax-0x34],dh
   14000cf3d:	xchg   BYTE PTR [rax],al
   14000cf3f:	add    BYTE PTR [rax],bh
   14000cf41:	add    BYTE PTR [rax],al
   14000cf43:	add    BYTE PTR [rcx],bl
   14000cf45:	(bad)  
   14000cf46:	add    DWORD PTR [rax],eax
   14000cf48:	(bad)  
   14000cf49:	ret    0x0
   14000cf4c:	int3   
   14000cf4d:	xchg   BYTE PTR [rax],al
   14000cf4f:	add    BYTE PTR [rax+0x0],bl
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	sbb    DWORD PTR [rsi],edx
   14000cf56:	add    DWORD PTR [rax],eax
   14000cf58:	(bad)  
   14000cf59:	loop   0x14000cf5b
   14000cf5b:	add    ah,cl
   14000cf5d:	xchg   BYTE PTR [rax],al
   14000cf5f:	add    BYTE PTR [rax+0x0],ch
   14000cf62:	add    BYTE PTR [rax],al
   14000cf64:	sbb    DWORD PTR [rcx],ebx
   14000cf66:	add    al,BYTE PTR [rax]
   14000cf68:	or     al,BYTE PTR [rcx]
   14000cf6a:	adc    DWORD PTR [rax],eax
   14000cf6c:	int3   
   14000cf6d:	xchg   BYTE PTR [rax],al
   14000cf6f:	add    BYTE PTR [rax+0x0],bh
   14000cf72:	add    BYTE PTR [rax],al
   14000cf74:	sbb    DWORD PTR [rbx],edx
   14000cf76:	add    DWORD PTR [rax],eax
   14000cf78:	add    al,0xc2
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	int3   
   14000cf7d:	xchg   BYTE PTR [rax],al
   14000cf7f:	add    BYTE PTR [rax+0x0],bl
   14000cf82:	add    BYTE PTR [rax],al
   14000cf84:	add    DWORD PTR [rcx+rax*1],eax
   14000cf87:	add    BYTE PTR [rdx+rax*4],al
   14000cf8a:	add    BYTE PTR [rax],al
   14000cf8c:	add    DWORD PTR [rcx+rax*1],eax
   14000cf8f:	add    BYTE PTR [rdx+riz*4],al
   14000cf92:	add    BYTE PTR [rax],al
   14000cf94:	sbb    DWORD PTR [rdi+rax*1],esp
   14000cf97:	add    BYTE PTR [rdx],dl
   14000cf99:	fs (bad) 
   14000cf9b:	add    BYTE PTR [rdx],dl
   14000cf9d:	xor    al,0x5f
   14000cf9f:	add    BYTE PTR [rdx],dl
   14000cfa1:	add    DWORD PTR [rax+rax*1+0xb],ebx
   14000cfa5:	jo     0x14000cfa7
   14000cfa7:	add    BYTE PTR [rdi+rax*4+0x0],bl
   14000cfab:	add    BYTE PTR [rdx],al
   14000cfad:	add    BYTE PTR [rax],al
   14000cfaf:	add    BYTE PTR [rdx+rdx*2+0x0],dh
   14000cfb3:	add    bl,bh
   14000cfb5:	push   rbp
   14000cfb6:	add    BYTE PTR [rax],al
   14000cfb8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cfb9:	mov    BYTE PTR [rax],al
   14000cfbb:	add    BYTE PTR [rax],al
   14000cfbd:	add    BYTE PTR [rax],al
   14000cfbf:	add    BYTE PTR [rip+0x73000051],ah        # 0x1b300d016
   14000cfc5:	push   rsi
   14000cfc6:	add    BYTE PTR [rax],al
   14000cfc8:	(bad)
   14000cfcb:	add    BYTE PTR [rax],al
   14000cfcd:	add    BYTE PTR [rax],al
   14000cfcf:	add    dl,dl
   14000cfd1:	add    al,BYTE PTR [rax]
   14000cfd3:	add    BYTE PTR [rcx],al
   14000cfd5:	(bad)  
   14000cfd6:	add    al,BYTE PTR [rax]
   14000cfd8:	(bad)  
   14000cfd9:	jb     0x14000cfdd
   14000cfdb:	push   rax
   14000cfdc:	sbb    DWORD PTR [rdi],ebp
   14000cfde:	or     DWORD PTR [rax],eax
   14000cfe0:	(bad)  
   14000cfe1:	je     0x14000cf92
   14000cfe3:	add    BYTE PTR [rsi],bl
   14000cfe5:	fs scas al,BYTE PTR es:[rdi]
   14000cfe7:	add    BYTE PTR [rsi],bl
   14000cfe9:	xor    al,0xad
   14000cfeb:	add    BYTE PTR [rsi],bl
   14000cfed:	add    DWORD PTR [rdx+0x501000],ebp
   14000cff3:	add    ah,cl
   14000cff5:	xchg   BYTE PTR [rax],al
   14000cff7:	add    BYTE PTR [rax+0x5],al
   14000cffa:	add    BYTE PTR [rax],al
   14000cffc:	add    DWORD PTR [rax],ebx
   14000cffe:	or     al,BYTE PTR [rax]
   14000d000:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000d004:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000d008:	sbb    BYTE PTR [rax+rcx*1],dh
   14000d00b:	add    BYTE PTR [rax],bl
   14000d00d:	xor    dl,BYTE PTR [rax+rsi*8]
   14000d010:	adc    ah,al
   14000d012:	adc    BYTE PTR [rax+0x1],dh
   14000d015:	clts   
   14000d017:	add    BYTE PTR [rdi],cl
   14000d019:	je     0x14000d01e
   14000d01b:	add    BYTE PTR [rdx],cl
   14000d01d:	add    al,BYTE PTR fs:[rax]
   14000d020:	add    eax,0x1000134
   14000d025:	add    eax,0x34050002
   14000d02a:	add    DWORD PTR [rax],eax
   14000d02c:	add    DWORD PTR [rdx],edx
   14000d02e:	add    eax,0xe421200
   14000d033:	jo     0x14000d042
   14000d035:	(bad)  
   14000d036:	or     al,0x50
   14000d038:	or     esi,DWORD PTR [rax]
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	sbb    DWORD PTR [rcx],esi
   14000d03e:	or     eax,0x2dd42300
   14000d043:	add    BYTE PTR [rbx],ah
   14000d045:	je     0x14000d073
   14000d047:	add    BYTE PTR [rbx],ah
   14000d049:	sub    eax,DWORD PTR fs:[rax]
   14000d04c:	and    esi,DWORD PTR [rdx+rbp*1]
   14000d04f:	add    BYTE PTR [rbx],ah
   14000d051:	add    DWORD PTR [rsi],esp
   14000d053:	add    BYTE PTR [rax],bl
   14000d055:	lock (bad) 
   14000d057:	loopne 0x14000d06d
   14000d059:	push   rax
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	int3   
   14000d05d:	xchg   BYTE PTR [rax],al
   14000d05f:	add    BYTE PTR [rax],ah
   14000d061:	add    DWORD PTR [rax],eax
   14000d063:	add    BYTE PTR [rcx],bl
   14000d065:	xor    cl,BYTE PTR [rip+0x39742400]        # 0x17974f46b
   14000d06b:	add    BYTE PTR [rsp+riz*2],ah
   14000d06e:	cmp    BYTE PTR [rax],al
   14000d070:	and    al,0x34
   14000d072:	add    BYTE PTR ss:[rcx+rax*1],ah
   14000d076:	xor    BYTE PTR [rax],al
   14000d078:	sbb    al,dh
   14000d07a:	(bad)  
   14000d07b:	loopne 0x14000d091
   14000d07d:	rcl    BYTE PTR [rdx],1
   14000d07f:	rcl    BYTE PTR [rax],0x50
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	int3   
   14000d085:	xchg   BYTE PTR [rax],al
   14000d087:	add    BYTE PTR [rax+0x1],dh
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	add    DWORD PTR [rax+rcx*1],edx
   14000d08f:	add    BYTE PTR [rsp+riz*2],dl
   14000d092:	or     DWORD PTR [rax],eax
   14000d094:	adc    al,0x54
   14000d096:	or     BYTE PTR [rax],al
   14000d098:	adc    al,0x34
   14000d09a:	(bad)  
   14000d09b:	add    BYTE PTR [rdx+rsi*1],dl
   14000d09e:	adc    BYTE PTR [rax+0x1],dh
   14000d0a1:	sbb    al,0xc
   14000d0a3:	add    BYTE PTR [rsp+riz*2],bl
   14000d0a6:	or     eax,0xc541c00
   14000d0ab:	add    BYTE PTR [rsp+rsi*1],bl
   14000d0ae:	or     eax,DWORD PTR [rax]
   14000d0b0:	sbb    al,0x32
   14000d0b2:	sbb    al,dh
   14000d0b4:	(bad)  
   14000d0b5:	loopne 0x14000d0cb
   14000d0b7:	rcl    BYTE PTR [rdx],1
   14000d0b9:	rcl    BYTE PTR [rax],0x70
   14000d0bc:	add    DWORD PTR [rip+0x42150003],edx        # 0x18215d0c5
   14000d0c2:	adc    DWORD PTR [rax+0x10],esi
   14000d0c5:	xor    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rcx],al
   14000d0c9:	sbb    al,0xa
   14000d0cb:	add    BYTE PTR [rsp+rdx*2],bl
   14000d0ce:	ltr    WORD PTR [rsp+rsi*1]
   14000d0d2:	or     eax,0x18521c00
   14000d0d7:	lock (bad) 
   14000d0d9:	loopne 0x14000d0ef
   14000d0db:	rcl    BYTE PTR [rdx],1
   14000d0dd:	rcl    BYTE PTR [rax],0x60
   14000d0e0:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41dd0f2
   14000d0e6:	or     eax,DWORD PTR [rax]
   14000d0e8:	sbb    eax,0x1d000a64
   14000d0ed:	push   rsp
   14000d0ee:	or     DWORD PTR [rax],eax
   14000d0f0:	sbb    eax,0x1d000834
   14000d0f5:	xor    bl,BYTE PTR [rcx]
   14000d0f7:	lock (bad) 
   14000d0f9:	loopne 0x14000d110
   14000d0fb:	rol    BYTE PTR [rcx],0xa
   14000d0fe:	add    al,0x0
   14000d100:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14000d104:	add    eax,0x1000134
   14000d109:	(bad)  
   14000d10a:	add    eax,0x13421700
   14000d10f:	jo     0x14000d123
   14000d111:	(bad)  
   14000d112:	adc    DWORD PTR [rax+0x10],edx
   14000d115:	xor    BYTE PTR [rax],al
   14000d117:	add    BYTE PTR [rcx],bl
   14000d119:	xor    DWORD PTR [rdx],ecx
   14000d11b:	add    BYTE PTR [rax],ah
   14000d11d:	add    DWORD PTR [rdi+0xff01101],ecx
   14000d123:	loopne 0x14000d132
   14000d125:	ror    BYTE PTR [rbx],1
   14000d127:	ror    BYTE PTR [rcx],0x70
   14000d12a:	or     BYTE PTR [rax+0x7],ah
   14000d12d:	xor    BYTE PTR [rsi],al
   14000d12f:	push   rax
   14000d130:	int3   
   14000d131:	xchg   BYTE PTR [rax],al
   14000d133:	add    BYTE PTR [rax+0xc],ah
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	sbb    DWORD PTR [rax],ebp
   14000d13a:	or     BYTE PTR [rax],al
   14000d13c:	(bad)  
   14000d13d:	add    DWORD PTR [rdi+0xdf00f00],ecx
   14000d143:	loopne 0x14000d150
   14000d145:	jo     0x14000d151
   14000d147:	(bad)  
   14000d148:	or     DWORD PTR [rax+0x8],edx
   14000d14b:	xor    ah,cl
   14000d14d:	xchg   BYTE PTR [rax],al
   14000d14f:	add    BYTE PTR [rax+0x4],ah
   14000d152:	add    BYTE PTR [rax],al
   14000d154:	sbb    DWORD PTR [rcx],ebx
   14000d156:	add    al,BYTE PTR [rax]
   14000d158:	(bad)  
   14000d159:	add    DWORD PTR [rcx+0x86cc00],ecx
   14000d15f:	add    BYTE PTR [rax],dh
   14000d161:	add    al,0x0
   14000d163:	add    BYTE PTR [rcx],al
   14000d165:	adc    DWORD PTR [rax+rax*1],eax
   14000d168:	adc    DWORD PTR [rdx],esi
   14000d16a:	or     eax,0xb600c70
   14000d16f:	xor    BYTE PTR [rcx],bl
   14000d171:	and    eax,0xe4170008
   14000d176:	(bad)  
   14000d177:	add    BYTE PTR [rdi],dl
   14000d179:	je     0x14000d188
   14000d17b:	add    BYTE PTR [rdi],dl
   14000d17d:	xor    al,0xc
   14000d17f:	add    BYTE PTR [rdi],dl
   14000d181:	xchg   edx,eax
   14000d182:	adc    BYTE PTR [rax-0x34],dl
   14000d185:	xchg   BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rax+0x0],cl
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	sbb    DWORD PTR [rsi],ebx
   14000d18e:	(bad)  
   14000d18f:	add    BYTE PTR [rdi],cl
   14000d191:	adc    BYTE PTR fs:[rax],al
   14000d194:	sysenter 
   14000d196:	(bad)  
   14000d197:	add    BYTE PTR [rdi],cl
   14000d199:	mov    dl,0xb
   14000d19b:	jo     0x14000d169
   14000d19d:	xchg   BYTE PTR [rax],al
   14000d19f:	add    BYTE PTR [rax+0x0],dl
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	add    DWORD PTR [rdi],ecx
   14000d1a6:	add    al,0x0
   14000d1a8:	sysenter 
   14000d1aa:	(bad)  
   14000d1ab:	add    BYTE PTR [rdi],cl
   14000d1ad:	xor    cl,BYTE PTR [rbx]
   14000d1af:	jo     0x14000d1ca
   14000d1b1:	adc    eax,DWORD PTR [rcx]
   14000d1b3:	add    BYTE PTR [rdx+rax*4],al
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	int3   
   14000d1b9:	xchg   BYTE PTR [rax],al
   14000d1bb:	add    BYTE PTR [rax],dh
   14000d1bd:	add    BYTE PTR [rax],al
   14000d1bf:	add    BYTE PTR [rcx],al
   14000d1c1:	or     al,BYTE PTR [rax+rax*1]
   14000d1c4:	or     dh,BYTE PTR [rdi+rax*1]
   14000d1c7:	add    BYTE PTR [rdx],cl
   14000d1c9:	xor    al,BYTE PTR [rsi]
   14000d1cb:	jo     0x14000d1d6
   14000d1cd:	sbb    DWORD PTR [rdx],ecx
   14000d1cf:	add    BYTE PTR [rcx],bl
   14000d1d1:	(bad)  
   14000d1d2:	or     eax,DWORD PTR [rax]
   14000d1d4:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000d1d8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000d1dc:	sbb    DWORD PTR [rax+rcx*1],esi
   14000d1df:	add    BYTE PTR [rcx],bl
   14000d1e1:	push   rdx
   14000d1e2:	adc    eax,0x8626e0
   14000d1e7:	add    BYTE PTR [rcx],al
   14000d1e9:	add    BYTE PTR [rax],al
   14000d1eb:	add    BYTE PTR [rcx],bh
   14000d1ed:	jle    0x14000d1ef
   14000d1ef:	add    BYTE PTR [rdx-0xfffff81],ch
   14000d1f5:	mov    BYTE PTR [rax],al
   14000d1f7:	add    BYTE PTR [rdx+0x7f],ch
   14000d1fd:	add    BYTE PTR [rax],al
   14000d1ff:	add    BYTE PTR [rcx],al
   14000d201:	add    BYTE PTR [rax],al
   14000d203:	add    BYTE PTR [rcx],al
   14000d205:	add    al,0x1
   14000d207:	add    BYTE PTR [rdx+riz*8],al
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	add    DWORD PTR [rdx+rax*1],ecx
   14000d20f:	add    BYTE PTR [rcx+rax*1],cl
   14000d212:	adc    DWORD PTR [rax],eax
   14000d214:	or     DWORD PTR [rcx+rax*1],eax
   14000d217:	add    BYTE PTR [rdx+riz*1],al
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	xchg   BYTE PTR es:[rax],al
   14000d21f:	add    BYTE PTR [rcx],al
   14000d221:	add    BYTE PTR [rax],al
   14000d223:	add    BYTE PTR [rbx+rax*4-0x7c0e0000],bh
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	add    DWORD PTR [rax],eax
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	repnz add DWORD PTR [rax],0x0
   14000d234:	or     DWORD PTR [rdx],ecx
   14000d236:	add    al,0x0
   14000d238:	or     dh,BYTE PTR [rsi+rax*1]
   14000d23b:	add    BYTE PTR [rdx],cl
   14000d23d:	xor    al,BYTE PTR [rsi]
   14000d23f:	jo     0x14000d267
   14000d241:	xchg   BYTE PTR [rax],al
   14000d243:	add    BYTE PTR [rcx],al
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rbp-0xfffff7c],bh
   14000d24d:	test   BYTE PTR [rax],al
   14000d24f:	add    BYTE PTR [rax],ah
   14000d251:	mov    DWORD PTR [rax],eax
   14000d253:	add    al,dh
   14000d255:	test   BYTE PTR [rax],al
   14000d257:	add    BYTE PTR [rcx],al
   14000d259:	(bad)  
   14000d25a:	add    al,BYTE PTR [rax]
   14000d25c:	(bad)  
   14000d25d:	xor    al,BYTE PTR [rdx]
   14000d25f:	push   rax
   14000d260:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dd26a
   14000d266:	or     DWORD PTR [rax],eax
   14000d268:	or     eax,0x500632
   14000d26d:	add    BYTE PTR [rax],al
   14000d26f:	add    BYTE PTR [rcx],al
   14000d271:	add    BYTE PTR [rax],al
   14000d273:	add    BYTE PTR [rax],al
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rcx],al
   14000d279:	add    al,0x1
   14000d27b:	add    BYTE PTR [rdx+rdx*1],al
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	mov    al,0xd4
	...
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	adc    dl,bh
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	movabs al,ds:0xd360000091
   14000d299:	add    BYTE PTR [rax],al
   14000d29b:	add    BYTE PTR [rax],al
   14000d29d:	add    BYTE PTR [rax],al
   14000d29f:	add    al,al
   14000d2a1:	fadd   DWORD PTR [rax]
   14000d2a3:	add    BYTE PTR [rax-0x70],dl
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	rcl    ch,1
	...
   14000d2b2:	add    BYTE PTR [rax],al
   14000d2b4:	or     bl,cl
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	rcl    BYTE PTR [rdx-0x2a600000],0x0
	...
   14000d2c7:	add    BYTE PTR [rax-0x27],dl
   14000d2ca:	add    BYTE PTR [rax],al
   14000d2cc:	nop
   14000d2cd:	xchg   edx,eax
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	adc    bl,dl
	...
   14000d2da:	add    BYTE PTR [rax],al
   14000d2dc:	cmp    bl,bl
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	add    BYTE PTR [rax-0x2b780000],dl
	...
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	push   0x780000db
   14000d2f5:	xchg   ecx,eax
	...
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	cld    
   14000d311:	fiadd  DWORD PTR [rax]
   14000d313:	add    BYTE PTR [rax],al
   14000d315:	add    BYTE PTR [rax],al
   14000d317:	add    ah,ch
   14000d319:	fiadd  DWORD PTR [rax]
   14000d31b:	add    BYTE PTR [rax],al
   14000d31d:	add    BYTE PTR [rax],al
   14000d31f:	add    dl,bl
   14000d321:	fiadd  DWORD PTR [rax]
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rax],ah
   14000d329:	fild   DWORD PTR [rax]
   14000d32b:	add    BYTE PTR [rax],al
   14000d32d:	add    BYTE PTR [rax],al
   14000d32f:	add    ah,cl
   14000d331:	fiadd  DWORD PTR [rax]
   14000d333:	add    BYTE PTR [rax],al
   14000d335:	add    BYTE PTR [rax],al
   14000d337:	add    BYTE PTR [rdx+0xda],bh
   14000d33d:	add    BYTE PTR [rax],al
   14000d33f:	add    BYTE PTR [rsi+0xda],ah
   14000d345:	add    BYTE PTR [rax],al
   14000d347:	add    BYTE PTR [rdx+rbx*8+0x0],dl
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	adc    bl,bl
	...
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	sbb    al,0x0
   14000d363:	add    BYTE PTR [rax],al
   14000d365:	add    BYTE PTR [rax],al
   14000d367:	add    BYTE PTR [rsi+0xd8],dl
   14000d36d:	add    BYTE PTR [rax],al
   14000d36f:	add    BYTE PTR [rax+0xd8],dh
   14000d375:	add    BYTE PTR [rax],al
   14000d377:	add    BYTE PTR [rdx-0x28],ch
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	add    BYTE PTR [rax],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	push   rax
   14000d381:	fadd   DWORD PTR [rax]
   14000d383:	add    BYTE PTR [rax],al
   14000d385:	add    BYTE PTR [rax],al
   14000d387:	add    BYTE PTR [rax+rbx*8],bh
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	sub    al,bl
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	adc    al,0xd8
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	not    bh
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	fcmovbe st,st(7)
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	(bad)  
   14000d3b1:	xlat   BYTE PTR ds:[rbx]
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	add    BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	lods   al,BYTE PTR ds:[rsi]
   14000d3b9:	xlat   BYTE PTR ds:[rbx]
   14000d3ba:	add    BYTE PTR [rax],al
   14000d3bc:	add    BYTE PTR [rax],al
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	cwde   
   14000d3c1:	xlat   BYTE PTR ds:[rbx]
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	add    BYTE PTR [rax],al
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	mov    ds,ecx
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	add    BYTE PTR [rax],al
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	movabs ds:0xb8000000000000d9,al
   14000d3d9:	fld    DWORD PTR [rax]
   14000d3db:	add    BYTE PTR [rax],al
   14000d3dd:	add    BYTE PTR [rax],al
   14000d3df:	add    ah,cl
   14000d3e1:	fld    DWORD PTR [rax]
   14000d3e3:	add    BYTE PTR [rax],al
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	add    dl,bl
   14000d3e9:	fld    DWORD PTR [rax]
   14000d3eb:	add    BYTE PTR [rax],al
   14000d3ed:	add    BYTE PTR [rax],al
   14000d3ef:	add    dl,ch
   14000d3f1:	fld    DWORD PTR [rax]
   14000d3f3:	add    BYTE PTR [rax],al
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    dh,dh
   14000d3f9:	fld    DWORD PTR [rax]
   14000d3fb:	add    BYTE PTR [rax],al
   14000d3fd:	add    BYTE PTR [rax],al
   14000d3ff:	add    BYTE PTR [rdx],cl
   14000d401:	fiadd  DWORD PTR [rax]
   14000d403:	add    BYTE PTR [rax],al
   14000d405:	add    BYTE PTR [rax],al
   14000d407:	add    BYTE PTR [rax],ah
   14000d409:	fiadd  DWORD PTR [rax]
   14000d40b:	add    BYTE PTR [rax],al
   14000d40d:	add    BYTE PTR [rax],al
   14000d40f:	add    BYTE PTR [rax],dh
   14000d411:	fiadd  DWORD PTR [rax]
   14000d413:	add    BYTE PTR [rax],al
   14000d415:	add    BYTE PTR [rax],al
   14000d417:	add    BYTE PTR [rsi],bh
   14000d419:	fiadd  DWORD PTR [rax]
   14000d41b:	add    BYTE PTR [rax],al
   14000d41d:	add    BYTE PTR [rax],al
   14000d41f:	add    BYTE PTR [rdx+rbx*8+0x0],dl
   14000d423:	add    BYTE PTR [rax],al
   14000d425:	add    BYTE PTR [rax],al
   14000d427:	add    BYTE PTR [rdx-0x26],ah
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	add    BYTE PTR [rax],al
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	js     0x14000d40c
   14000d432:	add    BYTE PTR [rax],al
   14000d434:	add    BYTE PTR [rax],al
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	xchg   dl,bl
   14000d43a:	add    BYTE PTR [rax],al
   14000d43c:	add    BYTE PTR [rax],al
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	adc    bh,0x0
   14000d443:	add    BYTE PTR [rax],al
   14000d445:	add    BYTE PTR [rax],al
   14000d447:	add    BYTE PTR [rax-0x29],ah
   14000d44a:	add    BYTE PTR [rax],al
   14000d44c:	add    BYTE PTR [rax],al
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	rex.WX xlat BYTE PTR ds:[rbx]
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	add    BYTE PTR [rax],al
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	cmp    dl,bh
   14000d45a:	add    BYTE PTR [rax],al
   14000d45c:	add    BYTE PTR [rax],al
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	xor    dl,bh
   14000d462:	add    BYTE PTR [rax],al
   14000d464:	add    BYTE PTR [rax],al
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	mov    esi,0xdb
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    BYTE PTR [rbx+rbx*8+0x0],ch
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	movabs al,ds:0xdb
   14000d481:	add    BYTE PTR [rax],al
   14000d483:	add    BYTE PTR [rax],al
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	add    BYTE PTR [rdx],al
   14000d489:	add    BYTE PTR [rax],al
   14000d48b:	add    BYTE PTR [rax],al
   14000d48d:	add    BYTE PTR [rax],al
   14000d48f:	or     BYTE PTR [rax],0x0
   14000d492:	add    BYTE PTR [rax],al
   14000d494:	add    BYTE PTR [rax],al
   14000d496:	add    BYTE PTR [rax+0x6],al
   14000d49c:	add    BYTE PTR [rax],al
   14000d49e:	add    BYTE PTR [rax+0x9],al
   14000d4a4:	add    BYTE PTR [rax],al
   14000d4a6:	add    BYTE PTR [rax+0x0],al
   14000d4ac:	add    BYTE PTR [rax],al
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	(bad)  
   14000d4b1:	xlat   BYTE PTR ds:[rbx]
   14000d4b2:	add    BYTE PTR [rax],al
   14000d4b4:	add    BYTE PTR [rax],al
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	(bad)  
   14000d4b9:	xlat   BYTE PTR ds:[rbx]
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	add    BYTE PTR [rax],al
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	cld    
   14000d4c1:	(bad)  
   14000d4c2:	add    BYTE PTR [rax],al
   14000d4c4:	add    BYTE PTR [rax],al
   14000d4c6:	add    BYTE PTR [rax],al
   14000d4c8:	in     al,0xd6
   14000d4ca:	add    BYTE PTR [rax],al
   14000d4cc:	add    BYTE PTR [rax],al
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	fcom   st(6)
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	add    BYTE PTR [rax],al
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	(bad)  
   14000d4d9:	(bad)  
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	add    BYTE PTR [rax],al
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	mov    edx,0xd6
   14000d4e5:	add    BYTE PTR [rax],al
   14000d4e7:	add    BYTE PTR [rdx+0xd6],dh
   14000d4ed:	add    BYTE PTR [rax],al
   14000d4ef:	add    dl,cl
   14000d4f1:	fild   DWORD PTR [rax]
   14000d4f3:	add    BYTE PTR [rax],al
   14000d4f5:	add    BYTE PTR [rax],al
   14000d4f7:	add    BYTE PTR [rax+0xd6],bl
   14000d4fd:	add    BYTE PTR [rax],al
   14000d4ff:	add    BYTE PTR [rsi+0xd6],al
   14000d505:	add    BYTE PTR [rax],al
   14000d507:	add    BYTE PTR [rax-0x2a],bh
   14000d50a:	add    BYTE PTR [rax],al
   14000d50c:	add    BYTE PTR [rax],al
   14000d50e:	add    BYTE PTR [rax],al
   14000d510:	push   0xffffffffffffffd6
   14000d512:	add    BYTE PTR [rax],al
   14000d514:	add    BYTE PTR [rax],al
   14000d516:	add    BYTE PTR [rax],al
   14000d518:	(bad)  
   14000d519:	(bad)  
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	add    BYTE PTR [rax],al
   14000d51e:	add    BYTE PTR [rax],al
   14000d520:	push   rsp
   14000d521:	(bad)  
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	add    BYTE PTR [rax],al
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	rex.WX (bad) 
   14000d52a:	add    BYTE PTR [rax],al
   14000d52c:	add    BYTE PTR [rax],al
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	rex (bad) 
   14000d532:	add    BYTE PTR [rax],al
   14000d534:	add    BYTE PTR [rax],al
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	cmp    dh,dl
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	add    BYTE PTR [rax],al
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	cs (bad) 
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	add    BYTE PTR [rax],al
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	pop    rdx
   14000d549:	fld    DWORD PTR [rax]
   14000d54b:	add    BYTE PTR [rax],al
   14000d54d:	add    BYTE PTR [rax],al
   14000d54f:	add    BYTE PTR [rax-0x27],ch
   14000d552:	add    BYTE PTR [rax],al
   14000d554:	add    BYTE PTR [rax],al
   14000d556:	add    BYTE PTR [rax],al
   14000d558:	and    al,0xd6
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	add    BYTE PTR [rax],al
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	sbb    dl,dh
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	add    BYTE PTR [rax],al
   14000d566:	add    BYTE PTR [rax],al
   14000d568:	(bad)  
   14000d569:	(bad)  
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	add    BYTE PTR [rax],al
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	je     0x14000d54b
   14000d572:	add    BYTE PTR [rax],al
   14000d574:	add    BYTE PTR [rax],al
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	(bad)  
   14000d579:	fld    DWORD PTR [rax]
   14000d57b:	add    BYTE PTR [rax],al
   14000d57d:	add    BYTE PTR [rax],al
   14000d57f:	add    BYTE PTR [rdx+0xd6],ch
   14000d585:	add    BYTE PTR [rax],al
   14000d587:	add    BYTE PTR [rax],al
   14000d589:	(bad)  
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	add    BYTE PTR [rax],al
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	(bad)  
   14000d591:	fild   DWORD PTR [rax]
	...
   14000d59f:	add    BYTE PTR [rcx+rbx*8],dl
   14000d5a2:	add    BYTE PTR [rax],al
   14000d5a4:	add    BYTE PTR [rax],al
   14000d5a6:	add    BYTE PTR [rax],al
   14000d5a8:	sub    bl,cl
   14000d5aa:	add    BYTE PTR [rax],al
   14000d5ac:	add    BYTE PTR [rax],al
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	fld    DWORD PTR ds:[rax]
   14000d5b3:	add    BYTE PTR [rax],al
   14000d5b5:	add    BYTE PTR [rax],al
   14000d5b7:	add    BYTE PTR [rsi-0x25],dh
   14000d5ba:	add    BYTE PTR [rax],al
   14000d5bc:	add    BYTE PTR [rax],al
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	test   bl,bl
	...
   14000d5ce:	add    BYTE PTR [rax],al
   14000d5d0:	push   rsp
   14000d5d1:	fild   DWORD PTR [rax]
   14000d5d3:	add    BYTE PTR [rax],al
   14000d5d5:	add    BYTE PTR [rax],al
   14000d5d7:	add    BYTE PTR [rsi-0x25],al
   14000d5da:	add    BYTE PTR [rax],al
   14000d5dc:	add    BYTE PTR [rax],al
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	clc    
   14000d5e1:	fadd   DWORD PTR [rax]
   14000d5e3:	add    BYTE PTR [rax],al
   14000d5e5:	add    BYTE PTR [rax],al
   14000d5e7:	add    al,ah
   14000d5e9:	fadd   DWORD PTR [rax]
   14000d5eb:	add    BYTE PTR [rax],al
   14000d5ed:	add    BYTE PTR [rax],al
   14000d5ef:	add    dh,cl
   14000d5f1:	fadd   DWORD PTR [rax]
	...
   14000d5ff:	add    BYTE PTR [rcx+0x3],ch
   14000d602:	pop    rdi
   14000d603:	jbe    0x14000d678
   14000d605:	outs   dx,BYTE PTR ds:[rsi]
   14000d606:	ja     0x14000d678
   14000d608:	jb     0x14000d673
   14000d60a:	outs   dx,BYTE PTR ds:[rsi]
   14000d60b:	je     0x14000d673
   14000d60d:	add    BYTE PTR [rsi+0x75705f02],bl
   14000d613:	jb     0x14000d67a
   14000d615:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d618:	ins    BYTE PTR es:[rdi],dx
   14000d619:	add    bl,al
   14000d61b:	add    ebx,DWORD PTR [rdi+0x77]
   14000d61e:	outs   dx,WORD PTR ds:[rsi]
   14000d620:	jo     0x14000d687
   14000d622:	outs   dx,BYTE PTR ds:[rsi]
   14000d623:	add    BYTE PTR [rsi],bh
   14000d625:	add    al,0x66
   14000d627:	addr32 gs je 0x14000d6a2
   14000d62b:	jae    0x14000d62d
   14000d62d:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000d634:	outs   dx,DWORD PTR ds:[rsi]
   14000d635:	jbe    0x14000d69c
   14000d637:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000d63b:	jb     0x14000d6a2
   14000d63d:	add    BYTE PTR gs:[rax],al
   14000d640:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000d647:	movsxd eax,DWORD PTR [rax]
   14000d649:	add    BYTE PTR [rcx],bh
   14000d64b:	add    al,0x66
   14000d64d:	data16 ins BYTE PTR es:[rdi],dx
   14000d64f:	jne    0x14000d6c4
   14000d651:	push   0x4550000
   14000d656:	data16 ja 0x14000d6c9
   14000d659:	jb     0x14000d6c4
   14000d65b:	outs   dx,BYTE PTR ds:[rsi]
   14000d65c:	je     0x14000d6c4
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	ss add al,0x66
   14000d663:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14000d667:	add    BYTE PTR gs:[rax],al
   14000d66a:	push   rbp
   14000d66b:	add    BYTE PTR [rdi+0x58],bl
   14000d66e:	movsxd esi,DWORD PTR [rax+0x74]
   14000d671:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000d67a:	pop    rdi
   14000d67b:	(bad)  
   14000d67c:	ins    DWORD PTR es:[rdi],dx
   14000d67d:	jae    0x14000d6e6
   14000d67f:	pop    rdi
   14000d680:	gs js  0x14000d6ec
   14000d683:	je     0x14000d685
   14000d685:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000d68b:	addr32 gs je 0x14000d6fc
   14000d68f:	(bad)  
   14000d690:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000d697:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000d69d:	gs je  0x14000d6ff
   14000d6a0:	(bad)  
   14000d6a1:	jo     0x14000d713
   14000d6a3:	pop    rdi
   14000d6a4:	je     0x14000d71f
   14000d6a6:	jo     0x14000d70d
   14000d6a8:	add    BYTE PTR [rax],al
   14000d6aa:	xor    al,BYTE PTR [riz*2+0x746978]
   14000d6b1:	add    BYTE PTR [rsi],cl
   14000d6b3:	add    DWORD PTR [rdi+0x65],ebx
   14000d6b6:	js     0x14000d721
   14000d6b8:	je     0x14000d6ba
   14000d6ba:	rol    DWORD PTR [rax],0x5f
   14000d6bd:	movsxd esp,DWORD PTR [rbp+0x78]
   14000d6c0:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000d6c8:	jae    0x14000d72f
   14000d6ca:	je     0x14000d741
   14000d6cc:	jae    0x14000d733
   14000d6ce:	jb     0x14000d73d
   14000d6d0:	(bad)  
   14000d6d1:	je     0x14000d73b
   14000d6d3:	gs jb  0x14000d748
   14000d6d6:	add    BYTE PTR [rax],al
   14000d6d8:	jge    0x14000d6db
   14000d6da:	pop    rdi
   14000d6db:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000d6e2:	ins    DWORD PTR es:[rdi],dx
   14000d6e3:	add    BYTE PTR [rdi+0x0],dl
   14000d6e6:	pop    rdi
   14000d6e7:	pop    rdi
   14000d6e8:	rex.XB pop r15
   14000d6ea:	jae    0x14000d75c
   14000d6ec:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000d6f0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000d6f7:	ins    BYTE PTR es:[rdi],dx
   14000d6f8:	gs jb  0x14000d6fb
   14000d6fb:	add    BYTE PTR [rdi],ah
   14000d6fd:	add    DWORD PTR [rdi+0x66],ebx
   14000d700:	ins    DWORD PTR es:[rdi],dx
   14000d701:	outs   dx,DWORD PTR ds:[rsi]
   14000d702:	fs add BYTE PTR gs:[rax],al
   14000d706:	rol    BYTE PTR [rax],cl
   14000d708:	pop    rdi
   14000d709:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d70c:	ins    DWORD PTR es:[rdi],dx
   14000d70d:	outs   dx,DWORD PTR ds:[rsi]
   14000d70e:	fs add BYTE PTR gs:[rax],al
   14000d712:	ins    DWORD PTR es:[rdi],dx
   14000d713:	jae    0x14000d78b
   14000d715:	movsxd esi,DWORD PTR [rdx+0x74]
   14000d718:	cs fs ins BYTE PTR es:[rdi],dx
   14000d71b:	ins    BYTE PTR es:[rdi],dx
   14000d71c:	add    BYTE PTR [rax],al
   14000d71e:	(bad)  
   14000d71f:	add    BYTE PTR [rdi],bh
   14000d721:	je     0x14000d788
   14000d723:	jb     0x14000d792
   14000d725:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000d72c:	pop    rcx
   14000d72d:	pop    r8
   14000d72f:	pop    rax
   14000d730:	pop    rdx
   14000d731:	add    BYTE PTR [rbp+0x5],ch
   14000d734:	push   rbx
   14000d735:	ins    BYTE PTR es:[rdi],dx
   14000d736:	gs gs jo 0x14000d73a
   14000d73a:	push   rdi
   14000d73b:	add    al,BYTE PTR [rdi+0x65]
   14000d73e:	je     0x14000d78c
   14000d740:	(bad)  
   14000d741:	jae    0x14000d7b7
   14000d743:	rex.RB jb 0x14000d7b8
   14000d746:	outs   dx,DWORD PTR ds:[rsi]
   14000d747:	jb     0x14000d749
   14000d749:	add    BYTE PTR [rbx+rax*1+0x48],al
   14000d74d:	gs (bad) 
   14000d74f:	jo     0x14000d7a4
   14000d751:	gs je  0x14000d79d
   14000d754:	outs   dx,BYTE PTR ds:[rsi]
   14000d755:	outs   dx,WORD PTR ds:[rsi]
   14000d757:	jb     0x14000d7c6
   14000d759:	(bad)  
   14000d75a:	je     0x14000d7c5
   14000d75c:	outs   dx,DWORD PTR ds:[rsi]
   14000d75d:	outs   dx,BYTE PTR ds:[rsi]
   14000d75e:	add    BYTE PTR [rax],al
   14000d760:	ss add eax,0x50746553
   14000d766:	jb     0x14000d7d7
   14000d768:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d76b:	jae    0x14000d7c0
   14000d76d:	push   0x6f647475
   14000d772:	ja     0x14000d7e2
   14000d774:	push   rax
   14000d775:	(bad)  
   14000d776:	jb     0x14000d7d9
   14000d778:	ins    DWORD PTR es:[rdi],dx
   14000d779:	gs je  0x14000d7e1
   14000d77c:	jb     0x14000d7f1
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	fild   DWORD PTR [rbx+rdx*2]
   14000d783:	gs je  0x14000d7c9
   14000d786:	outs   dx,DWORD PTR ds:[rsi]
   14000d787:	outs   dx,BYTE PTR ds:[rsi]
   14000d788:	jae    0x14000d7f9
   14000d78a:	ins    BYTE PTR es:[rdi],dx
   14000d78b:	gs rex.XB je 0x14000d801
   14000d78f:	ins    BYTE PTR es:[rdi],dx
   14000d790:	rex.W (bad) 
   14000d792:	outs   dx,BYTE PTR ds:[rsi]
   14000d793:	fs ins BYTE PTR es:[rdi],dx
   14000d795:	gs jb  0x14000d798
   14000d798:	mov    bh,0x4
   14000d79a:	push   rdx
   14000d79b:	je     0x14000d809
   14000d79d:	rex.XB (bad) 
   14000d79f:	jo     0x14000d815
   14000d7a1:	jne    0x14000d815
   14000d7a3:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000d7a6:	outs   dx,BYTE PTR ds:[rsi]
   14000d7a7:	je     0x14000d80e
   14000d7a9:	js     0x14000d81f
   14000d7ab:	add    BYTE PTR [rsi+0x6c745204],bh
   14000d7b1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d7b3:	outs   dx,DWORD PTR ds:[rsi]
   14000d7b4:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000d7b8:	jne    0x14000d828
   14000d7ba:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d7be:	outs   dx,BYTE PTR ds:[rsi]
   14000d7bf:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d7c1:	je     0x14000d835
   14000d7c3:	jns    0x14000d7c5
   14000d7c5:	add    ch,al
   14000d7c7:	add    al,0x52
   14000d7c9:	je     0x14000d837
   14000d7cb:	push   rsi
   14000d7cc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000d7d3:	outs   dx,BYTE PTR ds:[rsi]
   14000d7d4:	ja     0x14000d83f
   14000d7d6:	outs   dx,BYTE PTR ds:[rsi]
   14000d7d7:	add    BYTE PTR fs:[rax],al
   14000d7da:	sahf   
   14000d7db:	add    eax,0x61686e55
   14000d7e0:	outs   dx,BYTE PTR ds:[rsi]
   14000d7e1:	fs ins BYTE PTR es:[rdi],dx
   14000d7e3:	gs fs rex.RB js 0x14000d84b
   14000d7e8:	gs jo  0x14000d85f
   14000d7eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d7f2:	gs jb  0x14000d7f5
   14000d7f5:	add    BYTE PTR [rsi+0x5],bl
   14000d7f8:	push   rbx
   14000d7f9:	gs je  0x14000d851
   14000d7fc:	outs   dx,BYTE PTR ds:[rsi]
   14000d7fd:	push   0x6c646e61
   14000d802:	gs fs rex.RB js 0x14000d86a
   14000d807:	gs jo  0x14000d87e
   14000d80a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d811:	gs jb  0x14000d814
   14000d814:	adc    BYTE PTR [rdx],al
   14000d816:	rex.RXB
   14000d817:	gs je  0x14000d85d
   14000d81a:	jne    0x14000d88e
   14000d81c:	jb     0x14000d883
   14000d81e:	outs   dx,BYTE PTR ds:[rsi]
   14000d81f:	je     0x14000d871
   14000d821:	jb     0x14000d892
   14000d823:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d826:	jae    0x14000d828
   14000d828:	jl     0x14000d82f
   14000d82a:	push   rsp
   14000d82b:	gs jb  0x14000d89b
   14000d82e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000d835:	outs   dx,DWORD PTR ds:[rsi]
   14000d836:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d839:	jae    0x14000d83b
   14000d83b:	add    BYTE PTR [rsi+0x2],ch
   14000d83e:	rex.RXB
   14000d83f:	gs je  0x14000d88f
   14000d842:	outs   dx,DWORD PTR ds:[rsi]
   14000d843:	fs jne 0x14000d8b2
   14000d846:	gs rex.W (bad) 
   14000d849:	outs   dx,BYTE PTR ds:[rsi]
   14000d84a:	fs ins BYTE PTR es:[rdi],dx
   14000d84c:	gs push rdi
   14000d84e:	add    BYTE PTR [rax],al
   14000d850:	ss add al,0x51
   14000d853:	jne    0x14000d8ba
   14000d855:	jb     0x14000d8d0
   14000d857:	push   rax
   14000d858:	gs jb  0x14000d8c1
   14000d85b:	outs   dx,DWORD PTR ds:[rsi]
   14000d85c:	jb     0x14000d8cb
   14000d85e:	(bad)  
   14000d85f:	outs   dx,BYTE PTR ds:[rsi]
   14000d860:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d863:	outs   dx,DWORD PTR ds:[rsi]
   14000d864:	jne    0x14000d8d4
   14000d866:	je     0x14000d8cd
   14000d868:	jb     0x14000d86a
   14000d86a:	adc    DWORD PTR [rdx],eax
   14000d86c:	rex.RXB
   14000d86d:	gs je  0x14000d8b3
   14000d870:	jne    0x14000d8e4
   14000d872:	jb     0x14000d8d9
   14000d874:	outs   dx,BYTE PTR ds:[rsi]
   14000d875:	je     0x14000d8c7
   14000d877:	jb     0x14000d8e8
   14000d879:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d87c:	jae    0x14000d8c7
   14000d87e:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4661f87
   14000d885:	rex.XB jne 0x14000d8fa
   14000d888:	jb     0x14000d8ef
   14000d88a:	outs   dx,BYTE PTR ds:[rsi]
   14000d88b:	je     0x14000d8e1
   14000d88d:	push   0x64616572
   14000d892:	rex.WB
   14000d893:	add    BYTE PTR fs:[rax],al
   14000d896:	loopne 0x14000d89a
   14000d898:	rex.RXB
   14000d899:	gs je  0x14000d8ef
   14000d89c:	jns    0x14000d911
   14000d89e:	je     0x14000d905
   14000d8a0:	ins    DWORD PTR es:[rdi],dx
   14000d8a1:	push   rsp
   14000d8a2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000d8a9:	ins    BYTE PTR es:[rdi],dx
   14000d8aa:	gs push rsp
   14000d8ac:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000d8b3:	gs je  0x14000d90a
   14000d8b6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000d8bd:	je     0x14000d8bf
   14000d8bf:	add    BYTE PTR [rbx+0x45],cl
   14000d8c2:	push   rdx
   14000d8c3:	rex.WRX
   14000d8c4:	rex.RB
   14000d8c5:	xor    r14,QWORD PTR [rdx]
   14000d8c8:	cs fs ins BYTE PTR es:[rdi],dx
   14000d8cb:	ins    BYTE PTR es:[rdi],dx
   14000d8cc:	add    BYTE PTR [rax],al
   14000d8ce:	(bad)  
   14000d8cf:	add    BYTE PTR [rbx+0x6f],al
   14000d8d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d8d4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d8dc:	rex.RB js 0x14000d8df
   14000d8df:	add    BYTE PTR [rdx+0x0],ah
   14000d8e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d8e4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d8e6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d8ee:	push   rbx
   14000d8ef:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000d8f3:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43009000
   14000d8fb:	outs   dx,DWORD PTR ds:[rsi]
   14000d8fc:	push   rbp
   14000d8fd:	outs   dx,BYTE PTR ds:[rsi]
   14000d8fe:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000d905:	imul   edi,DWORD PTR [rdx+0x65],0x6c6f0000
   14000d90c:	xor    esi,DWORD PTR gs:[rdx]
   14000d90f:	cs fs ins BYTE PTR es:[rdi],dx
   14000d912:	ins    BYTE PTR es:[rdi],dx
   14000d913:	add    BYTE PTR [rdx+0x5],cl
   14000d916:	push   rdx
   14000d917:	je     0x14000d985
   14000d919:	push   rsp
   14000d91a:	imul   ebp,DWORD PTR [rbp+0x65],0x69546f54
   14000d921:	ins    DWORD PTR es:[rdi],dx
   14000d922:	rex.RX imul r12d,DWORD PTR gs:[rbp+0x6c],0xd6007364
   14000d92b:	add    DWORD PTR [rsi+0x74],ecx
   14000d92e:	push   rcx
   14000d92f:	jne    0x14000d996
   14000d931:	jb     0x14000d9ac
   14000d933:	push   rbx
   14000d934:	jns    0x14000d9a9
   14000d936:	je     0x14000d99d
   14000d938:	ins    DWORD PTR es:[rdi],dx
   14000d939:	push   rsp
   14000d93a:	imul   ebp,DWORD PTR [rbp+0x65],0x5204cc00
   14000d941:	je     0x14000d9af
   14000d943:	push   rdx
   14000d944:	(bad)  
   14000d945:	imul   esi,DWORD PTR [rbx+0x65],0x74617453
   14000d94c:	jne    0x14000d9c1
   14000d94e:	add    BYTE PTR [rax],al
   14000d950:	outs   dx,BYTE PTR ds:[rsi]
   14000d951:	je     0x14000d9b7
   14000d953:	ins    BYTE PTR es:[rdi],dx
   14000d954:	ins    BYTE PTR es:[rdi],dx
   14000d955:	cs fs ins BYTE PTR es:[rdi],dx
   14000d958:	ins    BYTE PTR es:[rdi],dx
   14000d959:	add    BYTE PTR [rcx+0x695f5f00],al
   14000d95f:	outs   dx,DWORD PTR ds:[rsi]
   14000d960:	(bad)  
   14000d961:	pop    rdi
   14000d962:	data16 jne 0x14000d9d3
   14000d965:	movsxd eax,DWORD PTR [rax]
   14000d967:	add    BYTE PTR [rdx+0x63775f03],cl
   14000d96d:	jae    0x14000d9d8
   14000d96f:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000d972:	add    BYTE PTR [rax],al
   14000d974:	movsxd eax,DWORD PTR [rbx]
   14000d976:	pop    rdi
   14000d977:	jbe    0x14000d9ec
   14000d979:	outs   dx,BYTE PTR ds:[rsi]
   14000d97a:	jo     0x14000d9ee
   14000d97c:	imul   ebp,DWORD PTR [rsi+0x74],0xbf000066
   14000d983:	add    BYTE PTR [rdi+0x63],bl
   14000d986:	(bad)  
   14000d987:	ins    BYTE PTR es:[rdi],dx
   14000d988:	ins    BYTE PTR es:[rdi],dx
   14000d989:	outs   dx,BYTE PTR ds:[rsi]
   14000d98a:	gs ja  0x14000d9f5
   14000d98d:	add    BYTE PTR [rcx+rax*1+0x46],dh
   14000d991:	imul   ebp,DWORD PTR [rsi+0x64],0x73726946
   14000d998:	je     0x14000d9e0
   14000d99a:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x5778
   14000d9a2:	syscall 
   14000d9a4:	push   rbx
   14000d9a5:	gs je  0x14000d9ee
   14000d9a8:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000d9b0:	(bad)  
   14000d9b1:	jne    0x14000da27
   14000d9b3:	gs jae 0x14000da0d
   14000d9b6:	add    BYTE PTR [rax],al
   14000d9b8:	movabs ds:0x4465766f6d655204,al
   14000d9c1:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14000d9c8:	jns    0x14000da21
   14000d9ca:	add    BYTE PTR [rax],al
   14000d9cc:	or     al,BYTE PTR [rcx]
   14000d9ce:	rex.R
   14000d9cf:	gs ins BYTE PTR es:[rdi],dx
   14000d9d1:	gs je  0x14000da39
   14000d9d4:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46018500
   14000d9dd:	imul   ebp,DWORD PTR [rsi+0x64],0x7478654e
   14000d9e4:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46016e00
   14000d9ed:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   14000d9f4:	add    BYTE PTR gs:[rcx+0x2],dl
   14000d9f8:	rex.RXB
   14000d9f9:	gs je  0x14000da42
   14000d9fc:	jne    0x14000da6a
   14000d9fe:	ins    BYTE PTR es:[rdi],dx
   14000d9ff:	push   rax
   14000da00:	(bad)  
   14000da01:	je     0x14000da6b
   14000da03:	rex.WRX (bad) 
   14000da05:	ins    DWORD PTR es:[rdi],dx
   14000da06:	gs push rdi
   14000da08:	add    BYTE PTR [rax],al
   14000da0a:	cmp    eax,0x74654702
   14000da0f:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x69727474
   14000da18:	(bad)  
   14000da19:	jne    0x14000da8f
   14000da1b:	gs jae 0x14000da75
   14000da1e:	add    BYTE PTR [rax],al
   14000da20:	and    eax,DWORD PTR [rip+0x4c746553]        # 0x18c753f79
   14000da26:	(bad)  
   14000da27:	jae    0x14000da9d
   14000da29:	rex.RB jb 0x14000da9e
   14000da2c:	outs   dx,DWORD PTR ds:[rsi]
   14000da2d:	jb     0x14000da2f
   14000da2f:	add    dl,ch
   14000da31:	add    ecx,DWORD PTR [rdi+0x70]
   14000da34:	outs   dx,BYTE PTR gs:[rsi]
   14000da36:	rex.RB jbe 0x14000da9e
   14000da39:	outs   dx,BYTE PTR ds:[rsi]
   14000da3a:	je     0x14000da93
   14000da3c:	add    BYTE PTR [rax],al
   14000da3e:	enter  0x5705,0x61
   14000da42:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000da4a:	ins    BYTE PTR es:[edi],dx
   14000da4c:	gs rex.WRXB (bad) 
   14000da4f:	push   0x65
   14000da51:	movsxd esi,DWORD PTR [rax+rax*1+0x7d]
   14000da55:	add    BYTE PTR [rbx+0x6c],al
   14000da58:	outs   dx,DWORD PTR ds:[rsi]
   14000da59:	jae    0x14000dac0
   14000da5b:	rex.W (bad) 
   14000da5d:	outs   dx,BYTE PTR ds:[rsi]
   14000da5e:	fs ins BYTE PTR es:[rdi],dx
   14000da60:	add    BYTE PTR gs:[rcx],al
   14000da63:	add    al,0x4f
   14000da65:	jne    0x14000dadb
   14000da67:	jo     0x14000dade
   14000da69:	je     0x14000daaf
   14000da6b:	gs (bad) 
   14000da6d:	jne    0x14000dad6
   14000da6f:	push   rbx
   14000da70:	je     0x14000dae4
   14000da72:	imul   ebp,DWORD PTR [rsi+0x67],0xa4000041
   14000da79:	add    DWORD PTR [rsi+0x72],eax
   14000da7c:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000da86:	sti    
   14000da87:	add    BYTE PTR [rbp+riz*2+0x62],al
   14000da8b:	jne    0x14000daf4
   14000da8d:	rex.X jb 0x14000daf5
   14000da90:	(bad)  
   14000da91:	imul   eax,DWORD PTR [rax],0x0
   14000da94:	pop    rsi
   14000da95:	add    dl,BYTE PTR [rdx+0x65]
   14000da98:	addr32 rex.XB jb 0x14000db01
   14000da9c:	(bad)  
   14000da9d:	je     0x14000db04
   14000da9f:	rex.WXB
   14000daa0:	gs jns 0x14000dae8
   14000daa3:	js     0x14000dafc
   14000daa5:	add    BYTE PTR [rbx+0x67655202],dl
   14000daab:	push   rcx
   14000daac:	jne    0x14000db13
   14000daae:	jb     0x14000db29
   14000dab0:	push   rsi
   14000dab1:	(bad)  
   14000dab2:	ins    BYTE PTR es:[rdi],dx
   14000dab3:	jne    0x14000db1a
   14000dab5:	rex.RB js 0x14000db0f
   14000dab8:	add    BYTE PTR [rax],al
   14000daba:	movabs ds:0x5674655367655202,eax
   14000dac3:	(bad)  
   14000dac4:	ins    BYTE PTR es:[rdi],dx
   14000dac5:	jne    0x14000db2c
   14000dac7:	rex.RB js 0x14000db21
   14000daca:	add    BYTE PTR [rax],al
   14000dacc:	push   rbp
   14000dacd:	add    dl,BYTE PTR [rdx+0x65]
   14000dad0:	rex.XB ins BYTE PTR es:[edi],dx
   14000dad3:	outs   dx,DWORD PTR ds:[rsi]
   14000dad4:	jae    0x14000db3b
   14000dad6:	rex.WXB
   14000dad7:	gs jns 0x14000dada
   14000dada:	ins    DWORD PTR es:[rdi],dx
   14000dadb:	add    dl,BYTE PTR [rdx+0x65]
   14000dade:	addr32 rex.R
   14000dae0:	gs ins BYTE PTR es:[rdi],dx
   14000dae2:	gs je  0x14000db4a
   14000dae5:	push   rsi
   14000dae6:	(bad)  
   14000dae7:	ins    BYTE PTR es:[rdi],dx
   14000dae8:	jne    0x14000db4f
   14000daea:	push   rdi
   14000daeb:	add    BYTE PTR [rax],ah
   14000daed:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   14000daf1:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000daf4:	gs jae 0x14000db6a
   14000daf7:	(bad)  
   14000daf8:	add    BYTE PTR gs:[eax],al
   14000dafc:	adc    eax,DWORD PTR [rdx]
   14000dafe:	rex.WRXB jo 0x14000db66
   14000db01:	outs   dx,BYTE PTR ds:[rsi]
   14000db02:	push   rax
   14000db03:	jb     0x14000db74
   14000db05:	movsxd esp,DWORD PTR [rbp+0x73]
   14000db08:	jae    0x14000db5e
   14000db0a:	outs   dx,DWORD PTR ds:[rsi]
   14000db0b:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000db0f:	add    BYTE PTR [rsi+0x67655202],al
   14000db15:	rex.WRXB jo 0x14000db7d
   14000db18:	outs   dx,BYTE PTR ds:[rsi]
   14000db19:	rex.WXB
   14000db1a:	gs jns 0x14000db62
   14000db1d:	js     0x14000db76
   14000db1f:	add    BYTE PTR [rdi],bl
   14000db21:	add    BYTE PTR [rcx+0x64],al
   14000db24:	push   0x75
   14000db26:	jae    0x14000db9c
   14000db28:	push   rsp
   14000db29:	outs   dx,DWORD PTR ds:[rsi]
   14000db2a:	imul   esp,DWORD PTR [rbp+0x6e],0x50
   14000db2e:	jb     0x14000db99
   14000db30:	jbe    0x14000db9b
   14000db32:	ins    BYTE PTR es:[rdi],dx
   14000db33:	gs addr32 gs jae 0x14000db38
   14000db38:	rex.B
   14000db39:	rex.R push rsi
   14000db3b:	push   r8
   14000db3d:	xor    rsi,QWORD PTR [r10]
   14000db40:	cs fs ins BYTE PTR es:[rdi],dx
   14000db43:	ins    BYTE PTR es:[rdi],dx
   14000db44:	add    BYTE PTR [rax],al
   14000db46:	push   rcx
   14000db47:	add    BYTE PTR [rbx+0x6f],al
   14000db4a:	rex.RXB
   14000db4b:	gs je  0x14000db9b
   14000db4e:	(bad)  
   14000db4f:	ins    BYTE PTR es:[rdi],dx
   14000db50:	ins    BYTE PTR es:[rdi],dx
   14000db51:	outs   dx,DWORD PTR ds:[rsi]
   14000db52:	movsxd eax,DWORD PTR [rax]
   14000db54:	sub    eax,DWORD PTR [rax]
   14000db56:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000db58:	rex.XB jb 0x14000dbc0
   14000db5b:	(bad)  
   14000db5c:	je     0x14000dbc3
   14000db5e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000db60:	jae    0x14000dbd6
   14000db62:	(bad)  
   14000db63:	outs   dx,BYTE PTR ds:[rsi]
   14000db64:	movsxd esp,DWORD PTR [rbp+0x0]
   14000db67:	add    BYTE PTR [rdi+0x4c],cl
   14000db6a:	rex.RB
   14000db6b:	push   r13
   14000db6d:	push   rsp
   14000db6e:	xor    esi,DWORD PTR [rdx]
   14000db70:	cs fs ins BYTE PTR es:[rdi],dx
   14000db73:	ins    BYTE PTR es:[rdi],dx
   14000db74:	add    BYTE PTR [rax],al
   14000db76:	and    al,BYTE PTR [rax]
   14000db78:	rex.R (bad) 
   14000db7a:	addr32 push rax
   14000db7c:	jb     0x14000dbe7
   14000db7e:	outs   dx,BYTE PTR ds:[rsi]
   14000db7f:	je     0x14000dbc6
   14000db81:	js     0x14000db83
   14000db83:	add    BYTE PTR [rbp+0x6c745202],dh
   14000db89:	rex.B jo 0x14000dbfc
   14000db8c:	outs   dx,BYTE PTR gs:[rsi]
   14000db8e:	fs push rbp
   14000db90:	outs   dx,BYTE PTR ds:[rsi]
   14000db91:	imul   esp,DWORD PTR [rbx+0x6f],0x6f546564
   14000db98:	push   rbx
   14000db99:	je     0x14000dc0d
   14000db9b:	imul   ebp,DWORD PTR [rsi+0x67],0x33c0000
   14000dba2:	rex.W
   14000dba3:	gs (bad) 
   14000dba5:	jo     0x14000dbe8
   14000dba7:	ins    BYTE PTR es:[rdi],dx
   14000dba8:	ins    BYTE PTR es:[rdi],dx
   14000dba9:	outs   dx,DWORD PTR ds:[rsi]
   14000dbaa:	movsxd eax,DWORD PTR [rax]
   14000dbac:	stos   DWORD PTR es:[rdi],eax
   14000dbad:	add    al,BYTE PTR [rdi+0x65]
   14000dbb0:	je     0x14000dc02
   14000dbb2:	jb     0x14000dc23
   14000dbb4:	movsxd esp,DWORD PTR [rbp+0x73]
   14000dbb7:	jae    0x14000dc01
   14000dbb9:	gs (bad) 
   14000dbbb:	jo     0x14000dbbd
   14000dbbd:	add    BYTE PTR [rax+0x3],al
   14000dbc0:	rex.W
   14000dbc1:	gs (bad) 
   14000dbc3:	jo     0x14000dc0b
   14000dbc5:	jb     0x14000dc2c
   14000dbc7:	add    BYTE PTR gs:[rax],al
   14000dbca:	xchg   edx,eax
   14000dbcb:	add    al,0x6d
   14000dbcd:	gs ins DWORD PTR es:[rdi],dx
   14000dbcf:	movsxd esi,DWORD PTR [rax+0x79]
   14000dbd2:	add    BYTE PTR [rax],al
   14000dbd4:	xchg   esi,eax
   14000dbd5:	add    al,0x6d
   14000dbd7:	gs ins DWORD PTR es:[rdi],dx
   14000dbd9:	jae    0x14000dc40
   14000dbdb:	je     0x14000dbdd
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	add    DWORD PTR [rax],eax
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	int    0x5d
   14000e012:	and    dl,dl
   14000e014:	data16 (bad) 
   14000e016:	(bad)  
   14000e017:	inc    DWORD PTR [rax]
   14000e019:	add    BYTE PTR [rax],al
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rax],ah
   14000e021:	loopne 0x14000e023
   14000e023:	rex add DWORD PTR [rax],eax
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	adc    al,BYTE PTR [rax]
   14000e02a:	add    BYTE PTR [rax],al
   14000e02c:	adc    DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

000000014000f000 <.pdata>:
   14000f000:	and    BYTE PTR [rax],dl
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	rex.WRX adc BYTE PTR [rax],r8b
   14000f007:	add    BYTE PTR [rax-0x34],cl
   14000f00a:	add    BYTE PTR [rax],al
   14000f00c:	push   rsp
   14000f00d:	adc    BYTE PTR [rax],al
   14000f00f:	add    BYTE PTR [rdx+0x50000012],cl
   14000f015:	int3   
   14000f016:	add    BYTE PTR [rax],al
   14000f018:	nop
   14000f019:	adc    al,BYTE PTR [rax]
   14000f01b:	add    bl,al
   14000f01d:	adc    eax,0xcc680000
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	int3   
   14000f025:	adc    eax,0x18430000
   14000f02a:	add    BYTE PTR [rax],al
   14000f02c:	mov    ah,cl
   14000f02e:	add    BYTE PTR [rax],al
   14000f030:	rex.WR sbb BYTE PTR [rax],r8b
   14000f033:	add    BYTE PTR [rip+0xffffffffa8000019],dh        # 0xe800f052
   14000f039:	int3   
   14000f03a:	add    BYTE PTR [rax],al
   14000f03c:	cmp    al,0x19
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	(bad)  
   14000f041:	sbb    al,BYTE PTR [rax]
   14000f043:	add    al,al
   14000f045:	int3   
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	fcomp  QWORD PTR [rdx]
   14000f04a:	add    BYTE PTR [rax],al
   14000f04c:	retf   
   14000f04d:	and    BYTE PTR [rax],al
   14000f04f:	add    ah,bl
   14000f051:	int3   
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	(bad)  
   14000f055:	and    BYTE PTR [rax],al
   14000f057:	add    cl,ah
   14000f059:	and    eax,DWORD PTR [rax]
   14000f05b:	add    ah,bh
   14000f05d:	int3   
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	or     BYTE PTR [rax+rax*1],ah
   14000f063:	add    ah,bh
   14000f065:	and    al,0x0
   14000f067:	add    BYTE PTR [rax],ah
   14000f069:	int    0x0
   14000f06b:	add    BYTE PTR ds:0x26b20000,al
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	cmp    ch,cl
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	shl    BYTE PTR [rsi],0x0
   14000f07b:	add    BYTE PTR [rsi],dl
   14000f07d:	(bad)  
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	push   rsp
   14000f081:	int    0x0
   14000f083:	add    BYTE PTR [rdi+riz*1],bl
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	xchg   esi,eax
   14000f089:	(bad)  
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	(bad)  
   14000f08d:	int    0x0
   14000f08f:	add    BYTE PTR [rax-0x39ffffd9],ah
   14000f095:	(bad)  
   14000f096:	add    BYTE PTR [rax],al
   14000f098:	jo     0x14000f067
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	shl    BYTE PTR [rdi],1
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	iret   
   14000f0a1:	sub    BYTE PTR [rax],al
   14000f0a3:	add    BYTE PTR [rax-0x33],bh
   14000f0a6:	add    BYTE PTR [rax],al
   14000f0a8:	loopne 0x14000f0d2
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	sub    QWORD PTR [rax],r8
   14000f0af:	add    BYTE PTR [rax+0x600000cd],dl
   14000f0b5:	sub    DWORD PTR [rax],eax
   14000f0b7:	add    ah,ch
   14000f0b9:	sub    DWORD PTR [rax],eax
   14000f0bb:	add    BYTE PTR [rax+0xcd],dl
   14000f0c1:	sub    al,BYTE PTR [rax]
   14000f0c3:	add    BYTE PTR [rax],dl
   14000f0c5:	sub    eax,DWORD PTR [rax]
   14000f0c7:	add    BYTE PTR [rax],ah
   14000f0c9:	int    0x0
   14000f0cb:	add    BYTE PTR [rax],ah
   14000f0cd:	sub    eax,DWORD PTR [rax]
   14000f0cf:	add    BYTE PTR [rcx+0x2b],bl
   14000f0d2:	add    BYTE PTR [rax],al
   14000f0d4:	push   rsp
   14000f0d5:	int    0x0
   14000f0d7:	add    BYTE PTR [rax+0x2b],ah
   14000f0da:	add    BYTE PTR [rax],al
   14000f0dc:	xchg   BYTE PTR [rbx],ch
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	jo     0x14000f0af
   14000f0e2:	add    BYTE PTR [rax],al
   14000f0e4:	nop
   14000f0e5:	sub    eax,DWORD PTR [rax]
   14000f0e7:	add    dh,ah
   14000f0e9:	sub    eax,DWORD PTR [rax]
   14000f0eb:	add    BYTE PTR [rbp+rcx*8+0x0],dl
   14000f0ef:	add    BYTE PTR [rsp+rbp*1],cl
   14000f0f2:	add    BYTE PTR [rax],al
   14000f0f4:	(bad)  
   14000f0f5:	sub    al,0x0
   14000f0f7:	add    BYTE PTR [rax-0x2bffff33],ah
   14000f0fd:	sub    al,0x0
   14000f0ff:	add    BYTE PTR [rcx+0x2d],dh
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	push   rsp
   14000f105:	int    0x0
   14000f107:	add    BYTE PTR [rax-0x50ffffd3],al
   14000f10d:	sub    eax,0xcd540000
   14000f112:	add    BYTE PTR [rax],al
   14000f114:	fsubr  DWORD PTR [rip+0x2ebb0000]        # 0x16ebbf11a
   14000f11a:	add    BYTE PTR [rax],al
   14000f11c:	mov    ah,0xcd
   14000f11e:	add    BYTE PTR [rax],al
   14000f120:	(bad)  
   14000f121:	add    BYTE PTR cs:[rax],al
   14000f124:	scas   eax,DWORD PTR es:[rdi]
   14000f125:	xor    DWORD PTR [rax],eax
   14000f127:	add    al,dl
   14000f129:	int    0x0
   14000f12b:	add    BYTE PTR [rax-0x66ffffcf],bh
   14000f131:	xor    eax,DWORD PTR [rax]
   14000f133:	add    al,dh
   14000f135:	int    0x0
   14000f137:	add    BYTE PTR [rax+0x4b000033],ah
   14000f13d:	xor    al,0x0
   14000f13f:	add    BYTE PTR [rax-0x33],ah
   14000f142:	add    BYTE PTR [rax],al
   14000f144:	push   rsp
   14000f145:	xor    al,0x0
   14000f147:	add    BYTE PTR [rsi+0x8000036],dh
   14000f14d:	(bad)  
   14000f14e:	add    BYTE PTR [rax],al
   14000f150:	mov    esp,0xbe000036
   14000f155:	(bad)  
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	sub    dh,cl
   14000f15a:	add    BYTE PTR [rax],al
   14000f15c:	(bad)  
   14000f15d:	(bad)  
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	xchg   ebx,eax
   14000f161:	cmp    eax,DWORD PTR [rax]
   14000f163:	add    BYTE PTR [rax-0x32],al
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	pushf  
   14000f169:	cmp    eax,DWORD PTR [rax]
   14000f16b:	add    BYTE PTR [rsi+0x3d],bl
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	(bad)  
   14000f171:	(bad)  
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	fs cmp eax,0x41970000
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	jl     0x14000f14c
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	movabs al,ds:0x9800004326000041
   14000f189:	(bad)  
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	sub    al,0x43
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	xor    DWORD PTR [rax+rax*1+0x0],eax
   14000f194:	nop
   14000f195:	int    0x0
   14000f197:	add    BYTE PTR [rax+0x44],al
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	data16 add BYTE PTR [rax],r8b
   14000f1a0:	jo     0x14000f16f
   14000f1a2:	add    BYTE PTR [rax],al
   14000f1a4:	jo     0x14000f1ea
   14000f1a6:	add    BYTE PTR [rax],al
   14000f1a8:	add    BYTE PTR [rbp+0x0],0x0
   14000f1ac:	and    ch,cl
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	nop
   14000f1b1:	add    BYTE PTR [r8],r8b
   14000f1b4:	leave  
   14000f1b5:	add    BYTE PTR [r8],r8b
   14000f1b8:	push   rsp
   14000f1b9:	int    0x0
   14000f1bb:	add    al,dl
   14000f1bd:	add    BYTE PTR [r8],r8b
   14000f1c0:	rex.RX add BYTE PTR es:[rax],r8b
   14000f1c4:	push   rsp
   14000f1c5:	int    0x0
   14000f1c7:	add    BYTE PTR [rax+0x46],dl
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	rex.RXB add BYTE PTR ss:[r8],r8b
   14000f1d0:	mov    ah,0xce
   14000f1d2:	add    BYTE PTR [rax],al
   14000f1d4:	rex
   14000f1d5:	rex.RXB add BYTE PTR [r8],r8b
   14000f1d8:	mov    cl,0x47
   14000f1da:	add    BYTE PTR [rax],al
   14000f1dc:	(bad)  
   14000f1dd:	(bad)  
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	rol    BYTE PTR [rdi+0x0],0x0
   14000f1e4:	ror    DWORD PTR [rax+0x0],0x0
   14000f1e8:	(bad)  
   14000f1e9:	(bad)  
   14000f1ea:	add    BYTE PTR [rax],al
   14000f1ec:	enter  0x48,0x0
   14000f1f0:	retf   0x49
   14000f1f3:	add    al,ch
   14000f1f5:	(bad)  
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	ror    BYTE PTR [rcx+0x0],1
   14000f1fb:	add    BYTE PTR [rdi+0x4a],dh
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	cld    
   14000f201:	(bad)  
   14000f202:	add    BYTE PTR [rax],al
   14000f204:	or     BYTE PTR [rdx+0x0],0x0
   14000f208:	sahf   
   14000f209:	rex.WX add BYTE PTR [rax],al
   14000f20c:	or     al,0xcf
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f211:	rex.WX add BYTE PTR [rax],al
   14000f214:	hlt    
   14000f215:	rex.WX add BYTE PTR [rax],al
   14000f218:	adc    al,0xcf
   14000f21a:	add    BYTE PTR [rax],al
   14000f21c:	cld    
   14000f21d:	rex.WX add BYTE PTR [rax],al
   14000f220:	sbb    cl,BYTE PTR [rbp+0x0]
   14000f223:	add    BYTE PTR [rdi+rcx*8],ah
   14000f226:	add    BYTE PTR [rax],al
   14000f228:	and    BYTE PTR [rbp+0x0],cl
   14000f22b:	add    BYTE PTR [rbp+rcx*2+0x0],bh
   14000f22f:	add    BYTE PTR [rdi+rcx*8],dl
   14000f232:	add    BYTE PTR [rax],al
   14000f234:	test   BYTE PTR [rbp+0x0],cl
   14000f237:	add    ch,ch
   14000f239:	rex.WRB add BYTE PTR [r8],r8b
   14000f23c:	rex.R iret 
   14000f23e:	add    BYTE PTR [rax],al
   14000f240:	hlt    
   14000f241:	rex.WRB add BYTE PTR [r8],r8b
   14000f244:	rex.WRX add BYTE PTR gs:[rax],r8b
   14000f248:	push   rsp
   14000f249:	iret   
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	ins    BYTE PTR es:[rdi],dx
   14000f24d:	rex.WRX add BYTE PTR [rax],r8b
   14000f250:	test   DWORD PTR [rsi+0x0],0xcf6400
   14000f257:	add    BYTE PTR [rax],al
   14000f259:	rex.WRXB add BYTE PTR [r8],r8b
   14000f25c:	ret    
   14000f25d:	rex.WRXB add BYTE PTR [r8],r8b
   14000f260:	je     0x14000f231
   14000f262:	add    BYTE PTR [rax],al
   14000f264:	int3   
   14000f265:	rex.WRXB add BYTE PTR [r8],r8b
   14000f268:	rex.W push rax
   14000f26a:	add    BYTE PTR [rax],al
   14000f26c:	test   bh,cl
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	push   rax
   14000f271:	push   rax
   14000f272:	add    BYTE PTR [rax],al
   14000f274:	loop   0x14000f2c6
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	mov    edi,cs
   14000f27a:	add    BYTE PTR [rax],al
   14000f27c:	call   0xda00f2d1
   14000f281:	push   rsi
   14000f282:	add    BYTE PTR [rax],al
   14000f284:	xchg   esp,eax
   14000f285:	iret   
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	movabs al,ds:0x90000056f9000056
   14000f291:	int    0x0
   14000f293:	add    BYTE PTR [rax],al
   14000f295:	push   rdi
   14000f296:	add    BYTE PTR [rax],al
   14000f298:	and    eax,0xdc000059
   14000f29d:	iret   
   14000f29e:	add    BYTE PTR [rax],al
   14000f2a0:	sub    al,0x59
   14000f2a2:	add    BYTE PTR [rax],al
   14000f2a4:	out    0x5a,al
   14000f2a6:	add    BYTE PTR [rax],al
   14000f2a8:	cld    
   14000f2a9:	iret   
   14000f2aa:	add    BYTE PTR [rax],al
   14000f2ac:	in     al,dx
   14000f2ad:	pop    rdx
   14000f2ae:	add    BYTE PTR [rax],al
   14000f2b0:	(bad)
   14000f2b3:	add    BYTE PTR [rax+rdx*8],dl
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	int3   
   14000f2b9:	pop    rbx
   14000f2ba:	add    BYTE PTR [rax],al
   14000f2bc:	rex.X pop rsp
   14000f2be:	add    BYTE PTR [rax],al
   14000f2c0:	and    al,0xd0
   14000f2c2:	add    BYTE PTR [rax],al
   14000f2c4:	rex.W pop rsp
   14000f2c6:	add    BYTE PTR [rax],al
   14000f2c8:	mov    edi,0x2c00005c
   14000f2cd:	rol    BYTE PTR [rax],1
   14000f2cf:	add    al,cl
   14000f2d1:	pop    rsp
   14000f2d2:	add    BYTE PTR [rax],al
   14000f2d4:	movabs al,ds:0xa80000cd7000005d
   14000f2dd:	pop    rbp
   14000f2de:	add    BYTE PTR [rax],al
   14000f2e0:	xchg   DWORD PTR [rax+0x0],esp
   14000f2e3:	add    BYTE PTR [rax+rdx*8],bh
   14000f2e6:	add    BYTE PTR [rax],al
   14000f2e8:	nop
   14000f2e9:	(bad)  
   14000f2ea:	add    BYTE PTR [rax],al
   14000f2ec:	push   0x66
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	rol    BYTE PTR fs:[rax],1
   14000f2f3:	add    BYTE PTR [rax+0x66],dh
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	imul   esp,DWORD PTR [rdi+0x0],0xd08c00
   14000f2ff:	add    BYTE PTR [rax+0x67],dh
   14000f302:	add    BYTE PTR [rax],al
   14000f304:	cmp    BYTE PTR [rcx+0x0],ch
   14000f307:	add    BYTE PTR [rax+0x400000d0],ah
   14000f30d:	imul   eax,DWORD PTR [rax],0x69d400
   14000f313:	add    BYTE PTR [rax+rdx*8+0x69dc0000],bh
   14000f31a:	add    BYTE PTR [rax],al
   14000f31c:	out    dx,eax
   14000f31d:	imul   eax,DWORD PTR [rax],0x0
   14000f320:	enter  0xd0,0x0
   14000f324:	clc    
   14000f325:	imul   eax,DWORD PTR [rax],0x0
   14000f328:	retf   0x6c
   14000f32b:	add    BYTE PTR [rax],ah
   14000f32d:	int    0x0
   14000f32f:	add    al,dl
   14000f331:	ins    BYTE PTR es:[rdi],dx
   14000f332:	add    BYTE PTR [rax],al
   14000f334:	fsubr  DWORD PTR [rbp+0x0]
   14000f337:	add    al,ah
   14000f339:	rol    BYTE PTR [rax],1
   14000f33b:	add    al,ah
   14000f33d:	ins    DWORD PTR es:[rdi],dx
   14000f33e:	add    BYTE PTR [rax],al
   14000f340:	outs   dx,BYTE PTR ds:[rsi]
   14000f342:	add    BYTE PTR [rax],al
   14000f344:	push   rsp
   14000f345:	int    0x0
   14000f347:	add    BYTE PTR [rsi+rbp*2+0x0],al
   14000f34b:	add    BYTE PTR [rsi],al
   14000f34d:	outs   dx,DWORD PTR ds:[rsi]
   14000f34e:	add    BYTE PTR [rax],al
   14000f350:	cld    
   14000f351:	rol    BYTE PTR [rax],1
   14000f353:	add    BYTE PTR [rdi+rbp*2+0x0],bl
   14000f357:	add    BYTE PTR [rdi+0x800006f],bl
   14000f35d:	rol    DWORD PTR [rax],1
   14000f35f:	add    BYTE PTR [rax+0x3b00006f],ch
   14000f365:	jb     0x14000f367
   14000f367:	add    BYTE PTR [rax],bl
   14000f369:	rol    DWORD PTR [rax],1
   14000f36b:	add    BYTE PTR [rdx+rsi*2+0x0],al
   14000f36f:	add    BYTE PTR [rbx],al
   14000f371:	je     0x14000f373
   14000f373:	add    BYTE PTR [rax],bh
   14000f375:	rol    DWORD PTR [rax],1
   14000f377:	add    BYTE PTR [rsp+rsi*2],cl
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	repz je 0x14000f37f
   14000f37f:	add    BYTE PTR [rcx+rdx*8+0x0],dl
   14000f383:	add    ah,bh
   14000f385:	je     0x14000f387
   14000f387:	add    BYTE PTR [rdi+0x75],ch
   14000f38a:	add    BYTE PTR [rax],al
   14000f38c:	rol    DWORD PTR fs:[rax],1
   14000f38f:	add    BYTE PTR [rbp+rsi*2+0x76e20000],dl
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	jo     0x14000f36b
   14000f39a:	add    BYTE PTR [rax],al
   14000f39c:	call   0xf400f417
   14000f3a1:	js     0x14000f3a3
   14000f3a3:	add    BYTE PTR [rcx+rdx*8+0x78bc0000],cl
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	jp     0x14000f427
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f3b1:	rol    DWORD PTR [rax],1
   14000f3b3:	add    BYTE PTR [rax+0x5e000079],al
   14000f3b9:	jnp    0x14000f3bb
   14000f3bb:	add    al,ah
   14000f3bd:	rol    BYTE PTR [rax],1
   14000f3bf:	add    BYTE PTR [rbx+rdi*2+0x0],ah
   14000f3c3:	add    BYTE PTR [rdx-0x4fffff85],ah
   14000f3c9:	rol    DWORD PTR [rax],1
   14000f3cb:	add    BYTE PTR [rax-0x2fffff85],ch
   14000f3d1:	jl     0x14000f3d3
   14000f3d3:	add    al,al
   14000f3d5:	rol    DWORD PTR [rax],1
   14000f3d7:	add    al,dh
   14000f3d9:	jl     0x14000f3db
   14000f3db:	add    BYTE PTR [rdi+0x4800007d],bh
   14000f3e1:	int3   
   14000f3e2:	add    BYTE PTR [rax],al
   14000f3e4:	sar    BYTE PTR [rbp+0x0],1
   14000f3e7:	add    BYTE PTR [rcx],bl
   14000f3e9:	jle    0x14000f3eb
   14000f3eb:	add    BYTE PTR [rdi+rcx*8],cl
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	and    BYTE PTR [rsi+0x0],bh
   14000f3f3:	add    dl,dh
   14000f3f5:	jg     0x14000f3f7
   14000f3f7:	add    ah,cl
   14000f3f9:	rol    DWORD PTR [rax],1
   14000f3fb:	add    BYTE PTR [rax],al
   14000f3fd:	add    BYTE PTR [rax],0x0
   14000f400:	adc    al,BYTE PTR [rax-0x33b80000]
   14000f406:	add    BYTE PTR [rax],al
   14000f408:	xor    BYTE PTR [rax-0x7fb20000],al
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	add    dl,dl
   14000f412:	add    BYTE PTR [rax],al
   14000f414:	ins    BYTE PTR es:[rdi],dx
   14000f415:	add    BYTE PTR [rax],0x0
   14000f418:	movabs al,ds:0xb00000cd70000080
   14000f421:	add    BYTE PTR [rax],0x0
   14000f424:	and    DWORD PTR [rdx-0x2df40000],eax
   14000f42a:	add    BYTE PTR [rax],al
   14000f42c:	sub    BYTE PTR [rdx-0x7ce10000],al
   14000f432:	add    BYTE PTR [rax],al
   14000f434:	add    al,0xd2
   14000f436:	add    BYTE PTR [rax],al
   14000f438:	rex add DWORD PTR [rax],0x0
   14000f43c:	jns    0x14000f3c1
   14000f43e:	add    BYTE PTR [rax],al
   14000f440:	rex.W int3 
   14000f442:	add    BYTE PTR [rax],al
   14000f444:	add    BYTE PTR [rbx-0x7c680000],0x0
   14000f44b:	add    BYTE PTR [rax-0x34],cl
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	lods   al,BYTE PTR ds:[rsi]
   14000f451:	add    DWORD PTR [rax],0x0
   14000f454:	add    BYTE PTR [rax+rax*1+0xd21400],al
   14000f45b:	add    BYTE PTR [rax],cl
   14000f45d:	test   BYTE PTR [rax],al
   14000f45f:	add    BYTE PTR [rbp-0x7c],cl
   14000f462:	add    BYTE PTR [rax],al
   14000f464:	jo     0x14000f433
   14000f466:	add    BYTE PTR [rax],al
   14000f468:	mov    al,0x84
   14000f46a:	add    BYTE PTR [rax],al
   14000f46c:	std    
   14000f46d:	test   BYTE PTR [rax],al
   14000f46f:	add    BYTE PTR [rdx+rdx*8],dh
   14000f472:	add    BYTE PTR [rax],al
   14000f474:	test   DWORD PTR [rax],r8d
   14000f477:	add    BYTE PTR [rsi+rax*4],dl
   14000f47a:	add    BYTE PTR [rax],al
   14000f47c:	(bad)  
   14000f47d:	rol    BYTE PTR [rax],cl
   14000f47f:	add    BYTE PTR [rax],bh
   14000f481:	xchg   BYTE PTR [rax],al
   14000f483:	add    BYTE PTR [rsi-0x7a],dl
   14000f486:	add    BYTE PTR [rax],al
   14000f488:	jo     0x14000f457
   14000f48a:	add    BYTE PTR [rax],al
   14000f48c:	pop    rsp
   14000f48d:	xchg   BYTE PTR [rax],al
   14000f48f:	add    BYTE PTR [rbp+0x54000086],dl
   14000f495:	int    0x0
   14000f497:	add    ah,cl
   14000f499:	xchg   BYTE PTR [rax],al
   14000f49b:	add    cl,ch
   14000f49d:	xchg   BYTE PTR [rax],al
   14000f49f:	add    BYTE PTR [rax-0x34],cl
   14000f4a2:	add    BYTE PTR [rax],al
   14000f4a4:	lock xchg BYTE PTR [rax],al
   14000f4a7:	add    BYTE PTR [rbx-0x79],dl
   14000f4aa:	add    BYTE PTR [rax],al
   14000f4ac:	jo     0x14000f47b
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	pop    rsp
   14000f4b1:	xchg   DWORD PTR [rax],eax
   14000f4b3:	add    dl,dh
   14000f4b5:	xchg   DWORD PTR [rax],eax
   14000f4b7:	add    BYTE PTR [rax],ah
   14000f4b9:	int    0x0
   14000f4bb:	add    BYTE PTR [rax],dh
   14000f4bd:	mov    BYTE PTR [rax],al
   14000f4bf:	add    BYTE PTR [rdx],dh
   14000f4c1:	mov    BYTE PTR [rax],al
   14000f4c3:	add    BYTE PTR [rax-0x2e],dh
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	push   rax
   14000f4c9:	mov    BYTE PTR [rax],al
   14000f4cb:	add    BYTE PTR [rbp+0x78000088],bl
   14000f4d1:	rol    BYTE PTR [rax],cl
   14000f4d3:	add    BYTE PTR [rsi-0x3affff78],ah
   14000f4d9:	mov    BYTE PTR [rax],al
   14000f4db:	add    ah,dl
   14000f4dd:	iret   
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	(bad)
   14000f4e3:	add    dl,ch
   14000f4e5:	mov    BYTE PTR [rax],al
   14000f4e7:	add    ah,dl
   14000f4e9:	iret   
   14000f4ea:	add    BYTE PTR [rax],al
   14000f4ec:	lock mov BYTE PTR [rax],al
   14000f4ef:	add    BYTE PTR [rsi],cl
   14000f4f1:	mov    DWORD PTR [rax],eax
   14000f4f3:	add    BYTE PTR [rax-0x2e],bl
   14000f4f6:	add    BYTE PTR [rax],al
   14000f4f8:	and    BYTE PTR [rcx-0x76c00000],cl
   14000f4fe:	add    BYTE PTR [rax],al
   14000f500:	pop    rax
   14000f501:	rol    BYTE PTR [rax],cl
	...

Disassembly of section .rsrc:

0000000140010000 <.rsrc>:
	...
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	add    al,BYTE PTR [rax]
   140010010:	adc    BYTE PTR [rax],al
   140010012:	add    BYTE PTR [rax],al
   140010014:	and    BYTE PTR [rax],al
   140010016:	add    BYTE PTR [rax+0x18],al
   14001001c:	cmp    BYTE PTR [rax],al
   14001001e:	add    BYTE PTR [rax+0x0],al
	...
   14001002c:	add    BYTE PTR [rax],al
   14001002e:	add    DWORD PTR [rax],eax
   140010030:	add    DWORD PTR [rax],eax
   140010032:	add    BYTE PTR [rax],al
   140010034:	push   rax
   140010035:	add    BYTE PTR [rax],al
   140010037:	add    BYTE PTR [rax],0x0
	...
   140010046:	add    DWORD PTR [rax],eax
   140010048:	add    DWORD PTR [rax],eax
   14001004a:	add    BYTE PTR [rax],al
   14001004c:	push   0x800000
	...
   14001005d:	add    BYTE PTR [rcx],al
   14001005f:	add    BYTE PTR [rcx],cl
   140010061:	add    al,0x0
   140010063:	add    BYTE PTR [rax+0x0],al
	...
   140010075:	add    BYTE PTR [rcx],al
   140010077:	add    BYTE PTR [rcx],cl
   140010079:	add    al,0x0
   14001007b:	add    BYTE PTR [rax-0x48000000],dl
   140010081:	add    al,BYTE PTR [rcx]
   140010083:	add    al,bh
   140010085:	add    eax,DWORD PTR [rax]
	...
   14001008f:	add    BYTE PTR [rax+0x12000100],ah
   140010095:	add    al,BYTE PTR [rax]
	...
   14001009f:	add    BYTE PTR [rdi+rdi*1],bh
   1400100a2:	js     0x140010111
   1400100a4:	ins    BYTE PTR es:[rdi],dx
   1400100a5:	and    BYTE PTR [rsi+0x65],dh
   1400100a8:	jb     0x14001011d
   1400100aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400100b1:	xor    BYTE PTR [rdx],ah
   1400100b3:	and    BYTE PTR [rbp+0x6e],ah
   1400100b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400100b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400100c0:	rex.RX sub eax,0x73202238
   1400100c6:	je     0x140010129
   1400100c8:	outs   dx,BYTE PTR ds:[rsi]
   1400100c9:	fs (bad) 
   1400100cb:	ins    BYTE PTR es:[rdi],dx
   1400100cc:	outs   dx,DWORD PTR ds:[rsi]
   1400100cd:	outs   dx,BYTE PTR ds:[rsi]
   1400100ce:	gs cmp eax,0x73657922
   1400100d4:	and    bh,BYTE PTR [rdi]
   1400100d6:	and    BYTE PTR ds:[rip+0x2d213c0a],cl        # 0x16d223ce7
   1400100dd:	sub    eax,0x706f4320
   1400100e2:	jns    0x140010156
   1400100e4:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400100eb:	sub    DWORD PTR [rax],esp
   1400100ed:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400100f5:	je     0x140010117
   1400100f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400100f9:	jb     0x14001016b
   1400100fb:	outs   dx,DWORD PTR ds:[rsi]
   1400100fc:	jb     0x14001015f
   1400100fe:	je     0x140010169
   140010100:	outs   dx,DWORD PTR ds:[rsi]
   140010101:	outs   dx,BYTE PTR ds:[rsi]
   140010102:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e3f35
   140010108:	cmp    al,0x61
   14001010a:	jae    0x14001017f
   14001010c:	gs ins DWORD PTR es:[rdi],dx
   14001010e:	(bad)  
   14001010f:	ins    BYTE PTR es:[rdi],dx
   140010110:	jns    0x140010132
   140010112:	js     0x140010181
   140010114:	ins    BYTE PTR es:[rdi],dx
   140010115:	outs   dx,BYTE PTR ds:[rsi]
   140010116:	jae    0x140010155
   140010118:	and    dh,BYTE PTR [rbp+0x72]
   14001011b:	outs   dx,BYTE PTR ds:[rsi]
   14001011c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001011f:	push   0x73616d65
   140010124:	sub    eax,0x7263696d
   140010129:	outs   dx,DWORD PTR ds:[rsi]
   14001012a:	jae    0x14001019b
   14001012c:	data16 je 0x14001015c
   14001012f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140010132:	cmp    ah,BYTE PTR [rcx+0x73]
   140010135:	ins    DWORD PTR es:[rdi],dx
   140010136:	cs jbe 0x14001016a
   140010139:	and    ah,BYTE PTR [rax]
   14001013b:	ins    DWORD PTR es:[rdi],dx
   14001013c:	(bad)  
   14001013d:	outs   dx,BYTE PTR ds:[rsi]
   14001013e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140010145:	jb     0x1400101ba
   140010147:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001014e:	xor    BYTE PTR [rdx],ah
   140010150:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x160212161
   140010157:	and    BYTE PTR [rsp+rsi*2],bh
   14001015a:	jb     0x1400101d1
   14001015c:	jae    0x1400101d2
   14001015e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010160:	outs   dx,WORD PTR ds:[rsi]
   140010162:	and    BYTE PTR [rax+0x6d],bh
   140010165:	ins    BYTE PTR es:[rdi],dx
   140010166:	outs   dx,BYTE PTR ds:[rsi]
   140010167:	jae    0x1400101a6
   140010169:	and    dh,BYTE PTR [rbp+0x72]
   14001016c:	outs   dx,BYTE PTR ds:[rsi]
   14001016d:	cmp    dh,BYTE PTR [rbx+0x63]
   140010170:	push   0x73616d65
   140010175:	sub    eax,0x7263696d
   14001017a:	outs   dx,DWORD PTR ds:[rsi]
   14001017b:	jae    0x1400101ec
   14001017d:	data16 je 0x1400101ad
   140010180:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140010183:	cmp    ah,BYTE PTR [rcx+0x73]
   140010186:	ins    DWORD PTR es:[rdi],dx
   140010187:	cs jbe 0x1400101bd
   14001018a:	and    bh,BYTE PTR [rsi]
   14001018c:	or     eax,0x2020200a
   140010191:	and    BYTE PTR [rax],ah
   140010193:	and    BYTE PTR [rax],ah
   140010195:	and    BYTE PTR [rbx+rsi*2],bh
   140010198:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001019c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400101a4:	and    BYTE PTR [rax],ah
   1400101a6:	and    BYTE PTR [rax],ah
   1400101a8:	and    BYTE PTR [rax],ah
   1400101aa:	and    BYTE PTR [rax],ah
   1400101ac:	and    BYTE PTR [rax],ah
   1400101ae:	cmp    al,0x72
   1400101b0:	gs jno 0x140010228
   1400101b3:	gs jae 0x14001022a
   1400101b6:	gs fs push rax
   1400101b9:	jb     0x140010224
   1400101bb:	jbe    0x140010226
   1400101bd:	ins    BYTE PTR es:[rdi],dx
   1400101be:	gs addr32 gs jae 0x140010201
   1400101c3:	or     eax,0x2020200a
   1400101c8:	and    BYTE PTR [rax],ah
   1400101ca:	and    BYTE PTR [rax],ah
   1400101cc:	and    BYTE PTR [rax],ah
   1400101ce:	and    BYTE PTR [rax],ah
   1400101d0:	and    BYTE PTR [rax],ah
   1400101d2:	and    BYTE PTR [rax],ah
   1400101d4:	and    BYTE PTR [rdx+rsi*2],bh
   1400101d7:	gs jno 0x14001024f
   1400101da:	gs jae 0x140010251
   1400101dd:	gs fs rex.RB js 0x140010247
   1400101e2:	movsxd esi,DWORD PTR [rbp+0x74]
   1400101e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400101ec:	ins    BYTE PTR es:[rdi],dx
   1400101ed:	or     eax,0x2020200a
   1400101f2:	and    BYTE PTR [rax],ah
   1400101f4:	and    BYTE PTR [rax],ah
   1400101f6:	and    BYTE PTR [rax],ah
   1400101f8:	and    BYTE PTR [rax],ah
   1400101fa:	and    BYTE PTR [rax],ah
   1400101fc:	and    BYTE PTR [rax],ah
   1400101fe:	and    BYTE PTR [rax],ah
   140010200:	and    BYTE PTR [rax],ah
   140010202:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140010206:	gs ins BYTE PTR es:[rdi],dx
   140010208:	cmp    eax,0x71657222
   14001020d:	jne    0x140010278
   14001020f:	jb     0x140010276
   140010211:	rex.B
   140010212:	fs ins DWORD PTR es:[rdi],dx
   140010214:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14001021b:	je     0x14001028c
   14001021d:	jb     0x140010241
   14001021f:	or     eax,0x2020200a
   140010224:	and    BYTE PTR [rax],ah
   140010226:	and    BYTE PTR [rax],ah
   140010228:	and    BYTE PTR [rax],ah
   14001022a:	and    BYTE PTR [rax],ah
   14001022c:	and    BYTE PTR [rax],ah
   14001022e:	and    BYTE PTR [rax],ah
   140010230:	and    BYTE PTR [rax],ah
   140010232:	and    BYTE PTR [rax],ah
   140010234:	and    BYTE PTR [rbp+0x69],dh
   140010237:	movsxd esp,DWORD PTR [r11+0x65]
   14001023b:	jae    0x1400102b0
   14001023d:	cmp    eax,0x6c616622
   140010242:	jae    0x1400102a9
   140010244:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160212254
   14001024a:	and    BYTE PTR [rax],ah
   14001024c:	and    BYTE PTR [rax],ah
   14001024e:	and    BYTE PTR [rax],ah
   140010250:	and    BYTE PTR [rax],ah
   140010252:	and    BYTE PTR [rdi],ch
   140010254:	ds or  eax,0x2020200a
   14001025a:	and    BYTE PTR [rax],ah
   14001025c:	and    BYTE PTR [rax],ah
   14001025e:	and    BYTE PTR [rax],ah
   140010260:	and    BYTE PTR [rax],ah
   140010262:	and    BYTE PTR [rdi+rbp*1],bh
   140010265:	jb     0x1400102cc
   140010267:	jno    0x1400102de
   140010269:	gs jae 0x1400102e0
   14001026c:	gs fs push rax
   14001026f:	jb     0x1400102da
   140010271:	jbe    0x1400102dc
   140010273:	ins    BYTE PTR es:[rdi],dx
   140010274:	gs addr32 gs jae 0x1400102b7
   140010279:	or     eax,0x2020200a
   14001027e:	and    BYTE PTR [rax],ah
   140010280:	and    BYTE PTR [rax],ah
   140010282:	and    BYTE PTR [rdi+rbp*1],bh
   140010285:	jae    0x1400102ec
   140010287:	movsxd esi,DWORD PTR [rbp+0x72]
   14001028a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140010292:	and    BYTE PTR [rax],ah
   140010294:	cmp    al,0x2f
   140010296:	je     0x14001030a
   140010298:	jne    0x14001030d
   14001029a:	je     0x1400102e5
   14001029c:	outs   dx,BYTE PTR ds:[rsi]
   14001029d:	outs   dx,WORD PTR ds:[rsi]
   14001029f:	ds or  eax,0x612f3c0a
   1400102a5:	jae    0x14001031a
   1400102a7:	gs ins DWORD PTR es:[rdi],dx
   1400102a9:	(bad)  
   1400102aa:	ins    BYTE PTR es:[rdi],dx
   1400102ab:	jns    0x1400102eb
   1400102ad:	and    BYTE PTR [rip+0xa0d0a],cl        # 0x1400b0fbd
   1400102b3:	add    BYTE PTR [rax],al
   1400102b5:	add    BYTE PTR [rax],al
   1400102b7:	add    al,bh
   1400102b9:	add    esi,DWORD PTR [rax+rax*1]
   1400102bc:	add    BYTE PTR [rax],al
   1400102be:	push   rsi
   1400102bf:	add    BYTE PTR [rbx+0x0],dl
   1400102c2:	pop    rdi
   1400102c3:	add    BYTE PTR [rsi+0x0],dl
   1400102c6:	add    BYTE PTR [r10+0x0],r10b
   1400102ca:	push   rbx
   1400102cb:	add    BYTE PTR [rcx+0x0],cl
   1400102ce:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400102d2:	pop    rdi
   1400102d3:	add    BYTE PTR [rcx+0x0],cl
   1400102d6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400102da:	rex.WRXB add BYTE PTR [r8],r8b
   1400102dd:	add    BYTE PTR [rax],al
   1400102df:	add    BYTE PTR [rbp+0xfeef04],bh
   1400102e5:	add    BYTE PTR [rcx],al
   1400102e7:	add    BYTE PTR [rax],al
   1400102e9:	add    BYTE PTR [rdx],cl
   1400102eb:	add    BYTE PTR [rax],al
   1400102ed:	add    BYTE PTR [rax],bpl
   1400102f0:	add    BYTE PTR [rax],al
   1400102f2:	or     al,BYTE PTR [rax]
   1400102f4:	add    BYTE PTR [rax+0x0],al
   1400102f7:	sub    BYTE PTR [rdi],bh
   1400102f9:	add    BYTE PTR [rax],al
   1400102fb:	add    BYTE PTR [rax],al
   1400102fd:	add    BYTE PTR [rax],al
   1400102ff:	add    BYTE PTR [rax+rax*1],al
   140010302:	add    al,0x0
   140010304:	add    DWORD PTR [rax],eax
	...
   140010312:	add    BYTE PTR [rax],al
   140010314:	push   rsi
   140010315:	add    eax,DWORD PTR [rax]
   140010317:	add    BYTE PTR [rcx],al
   140010319:	add    BYTE PTR [rbx+0x0],dl
   14001031c:	je     0x14001031e
   14001031e:	jb     0x140010320
   140010320:	imul   eax,DWORD PTR [rax],0x67006e
   140010326:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001032a:	ins    BYTE PTR es:[rdi],dx
   14001032b:	add    BYTE PTR [rbp+0x0],ah
   14001032e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010332:	data16 add BYTE PTR [rdi+0x0],ch
   140010336:	add    BYTE PTR [rax],al
   140010338:	xor    al,BYTE PTR [rbx]
   14001033a:	add    BYTE PTR [rax],al
   14001033c:	add    DWORD PTR [rax],eax
   14001033e:	xor    BYTE PTR [rax],al
   140010340:	xor    al,0x0
   140010342:	xor    BYTE PTR [rax],al
   140010344:	cmp    DWORD PTR [rax],eax
   140010346:	xor    BYTE PTR [rax],al
   140010348:	xor    al,0x0
   14001034a:	rex.X add BYTE PTR [rax],sil
   14001034d:	add    BYTE PTR [rax],al
   14001034f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140010353:	add    BYTE PTR [rcx],al
   140010355:	add    BYTE PTR [rbx+0x0],al
   140010358:	outs   dx,DWORD PTR ds:[rsi]
   140010359:	add    BYTE PTR [rbp+0x0],ch
   14001035c:	jo     0x14001035e
   14001035e:	(bad)  
   14001035f:	add    BYTE PTR [rsi+0x0],ch
   140010362:	jns    0x140010364
   140010364:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010368:	ins    DWORD PTR es:[rdi],dx
   140010369:	add    BYTE PTR [rbp+0x0],ah
   14001036c:	add    BYTE PTR [rax],al
   14001036e:	add    BYTE PTR [rax],al
   140010370:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140010374:	movsxd eax,DWORD PTR [rax]
   140010376:	jb     0x140010378
   140010378:	outs   dx,DWORD PTR ds:[rsi]
   140010379:	add    BYTE PTR [rbx+0x0],dh
   14001037c:	outs   dx,DWORD PTR ds:[rsi]
   14001037d:	add    BYTE PTR [rsi+0x0],ah
   140010380:	je     0x140010382
   140010382:	and    BYTE PTR [rax],al
   140010384:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010388:	jb     0x14001038a
   14001038a:	jo     0x14001038c
   14001038c:	outs   dx,DWORD PTR ds:[rsi]
   14001038d:	add    BYTE PTR [rdx+0x0],dh
   140010390:	(bad)  
   140010391:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010395:	add    BYTE PTR [rdi+0x0],ch
   140010398:	outs   dx,BYTE PTR ds:[rsi]
   140010399:	add    BYTE PTR [rax],al
   14001039b:	add    BYTE PTR [rdx+0x1004100],ch
   1400103a1:	add    BYTE PTR [rsi+0x0],al
   1400103a4:	imul   eax,DWORD PTR [rax],0x65006c
   1400103aa:	add    BYTE PTR [rbp+0x0],r12b
   1400103ae:	jae    0x1400103b0
   1400103b0:	movsxd eax,DWORD PTR [rax]
   1400103b2:	jb     0x1400103b4
   1400103b4:	imul   eax,DWORD PTR [rax],0x740070
   1400103ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400103c0:	add    BYTE PTR [rax],al
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	push   rdi
   1400103c5:	add    BYTE PTR [rcx+0x0],ch
   1400103c8:	outs   dx,BYTE PTR ds:[rsi]
   1400103c9:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400103cd:	add    BYTE PTR [rdi+0x0],dh
   1400103d0:	jae    0x1400103d2
   1400103d2:	and    BYTE PTR [rax],al
   1400103d4:	push   rbx
   1400103d5:	add    BYTE PTR [rcx+0x0],bh
   1400103d8:	jae    0x1400103da
   1400103da:	je     0x1400103dc
   1400103dc:	add    BYTE PTR gs:[rbp+0x0],ch
   1400103e0:	and    BYTE PTR [rax],al
   1400103e2:	push   rdx
   1400103e3:	add    BYTE PTR [rbp+0x0],ah
   1400103e6:	jae    0x1400103e8
   1400103e8:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   1400103ed:	add    BYTE PTR [rax+0x0],dl
   1400103f0:	ins    BYTE PTR es:[rdi],dx
   1400103f1:	add    BYTE PTR [rcx+0x0],ah
   1400103f4:	je     0x1400103f6
   1400103f6:	data16 add BYTE PTR [rdi+0x0],ch
   1400103fa:	jb     0x1400103fc
   1400103fc:	ins    DWORD PTR es:[rdi],dx
   1400103fd:	add    BYTE PTR [rax],ah
   1400103ff:	add    BYTE PTR [rdi+0x0],cl
   140010402:	jo     0x140010404
   140010404:	add    BYTE PTR gs:[rdx+0x0],dh
   140010408:	(bad)  
   140010409:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001040d:	add    BYTE PTR [rsi+0x0],ch
   140010410:	add    BYTE PTR [eax],ah
   140010413:	add    BYTE PTR [rbx+0x0],dl
   140010416:	jns    0x140010418
   140010418:	jae    0x14001041a
   14001041a:	je     0x14001041c
   14001041c:	add    BYTE PTR gs:[rbp+0x0],ch
   140010420:	and    BYTE PTR [rax],al
   140010422:	push   rbp
   140010423:	add    BYTE PTR [rax+0x0],dh
   140010426:	add    BYTE PTR fs:[rcx+0x0],ah
   14001042a:	je     0x14001042c
   14001042c:	add    BYTE PTR gs:[rbx+0x0],dh
   140010430:	and    BYTE PTR [rax],al
   140010432:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010436:	jae    0x140010438
   140010438:	je     0x14001043a
   14001043a:	(bad)  
   14001043b:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001043f:	add    BYTE PTR [rbp+0x0],ah
   140010442:	jb     0x140010444
   140010444:	add    BYTE PTR [rax],al
   140010446:	add    BYTE PTR [rax],al
   140010448:	data16 add BYTE PTR [rbx],ah
   14001044b:	add    BYTE PTR [rcx],al
   14001044d:	add    BYTE PTR [rsi+0x0],al
   140010450:	imul   eax,DWORD PTR [rax],0x65006c
   140010456:	push   rsi
   140010457:	add    BYTE PTR [rbp+0x0],ah
   14001045a:	jb     0x14001045c
   14001045c:	jae    0x14001045e
   14001045e:	imul   eax,DWORD PTR [rax],0x6e006f
   140010464:	add    BYTE PTR [rax],al
   140010466:	add    BYTE PTR [rax],al
   140010468:	xor    DWORD PTR [rax],eax
   14001046a:	xor    BYTE PTR [rax],al
   14001046c:	add    BYTE PTR cs:[rax],dh
   14001046f:	add    BYTE PTR [rsi],ch
   140010471:	add    BYTE PTR [rcx],dh
   140010473:	add    BYTE PTR [rax],dh
   140010475:	add    BYTE PTR [rdx],dh
   140010477:	add    BYTE PTR [rax+rax*1],dh
   14001047a:	xor    BYTE PTR [rax],al
   14001047c:	add    BYTE PTR cs:[rcx],dh
   14001047f:	add    BYTE PTR [rsi],dh
   140010481:	add    BYTE PTR [rbx],dh
   140010483:	add    BYTE PTR [rax],bh
   140010485:	add    BYTE PTR [rax+rax*1],dh
   140010488:	and    BYTE PTR [rax],al
   14001048a:	sub    BYTE PTR [rax],al
   14001048c:	je     0x14001048e
   14001048e:	push   0x2e003100
   140010493:	add    BYTE PTR [rcx],dh
   140010495:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701349b
   14001049b:	add    BYTE PTR [rax],dh
   14001049d:	add    BYTE PTR [rcx],bh
   14001049f:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770135a5
   1400104a5:	add    BYTE PTR [rax],dh
   1400104a7:	add    BYTE PTR [rax],dh
   1400104a9:	add    BYTE PTR [rcx],ch
   1400104ab:	add    BYTE PTR [rax],al
   1400104ad:	add    BYTE PTR [rax],al
   1400104af:	add    BYTE PTR [rdx],bh
   1400104b1:	add    BYTE PTR [rip+0x49000100],cl        # 0x1890105b7
   1400104b7:	add    BYTE PTR [rsi+0x0],ch
   1400104ba:	je     0x1400104bc
   1400104bc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400104c0:	outs   dx,BYTE PTR ds:[rsi]
   1400104c1:	add    BYTE PTR [rcx+0x0],ah
   1400104c4:	ins    BYTE PTR es:[rdi],dx
   1400104c5:	add    BYTE PTR [rsi+0x0],cl
   1400104c8:	(bad)  
   1400104c9:	add    BYTE PTR [rbp+0x0],ch
   1400104cc:	add    BYTE PTR gs:[rax],al
   1400104cf:	add    BYTE PTR [rdx+0x0],dl
   1400104d2:	rex.WX add BYTE PTR [rsi+0x0],dl
   1400104d6:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   1400104da:	push   rbp
   1400104db:	add    BYTE PTR [rax+0x0],dh
   1400104de:	add    BYTE PTR fs:[rcx+0x0],ah
   1400104e2:	je     0x1400104e4
   1400104e4:	add    BYTE PTR gs:[rbx+0x0],dh
   1400104e8:	add    BYTE PTR [rax],al
   1400104ea:	add    BYTE PTR [rax],al
   1400104ec:	add    BYTE PTR [rax],0x2e
   1400104ef:	add    BYTE PTR [rcx],al
   1400104f1:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400104f5:	add    BYTE PTR [rdi+0x0],ah
   1400104f8:	(bad)  
   1400104f9:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400104fd:	add    BYTE PTR [rdi+0x0],ch
   140010500:	jo     0x140010502
   140010502:	jns    0x140010504
   140010504:	jb     0x140010506
   140010506:	imul   eax,DWORD PTR [rax],0x680067
   14001050c:	je     0x14001050e
   14001050e:	add    BYTE PTR [rax],al
   140010510:	test   eax,0x4d002000
   140010515:	add    BYTE PTR [rcx+0x0],ch
   140010518:	movsxd eax,DWORD PTR [rax]
   14001051a:	jb     0x14001051c
   14001051c:	outs   dx,DWORD PTR ds:[rsi]
   14001051d:	add    BYTE PTR [rbx+0x0],dh
   140010520:	outs   dx,DWORD PTR ds:[rsi]
   140010521:	add    BYTE PTR [rsi+0x0],ah
   140010524:	je     0x140010526
   140010526:	and    BYTE PTR [rax],al
   140010528:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001052c:	jb     0x14001052e
   14001052e:	jo     0x140010530
   140010530:	outs   dx,DWORD PTR ds:[rsi]
   140010531:	add    BYTE PTR [rdx+0x0],dh
   140010534:	(bad)  
   140010535:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010539:	add    BYTE PTR [rdi+0x0],ch
   14001053c:	outs   dx,BYTE PTR ds:[rsi]
   14001053d:	add    BYTE PTR [rsi],ch
   14001053f:	add    BYTE PTR [rax],ah
   140010541:	add    BYTE PTR [rcx+0x0],al
   140010544:	ins    BYTE PTR es:[rdi],dx
   140010545:	add    BYTE PTR [rax+rax*1+0x20],ch
   140010549:	add    BYTE PTR [rdx+0x0],dh
   14001054c:	imul   eax,DWORD PTR [rax],0x680067
   140010552:	je     0x140010554
   140010554:	jae    0x140010556
   140010556:	and    BYTE PTR [rax],al
   140010558:	jb     0x14001055a
   14001055a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001055e:	add    BYTE PTR gs:[rdx+0x0],dh
   140010562:	jbe    0x140010564
   140010564:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140010569:	add    BYTE PTR [rax],al
   14001056b:	add    BYTE PTR [rdx+0x0],cl
   14001056e:	adc    DWORD PTR [rax],eax
   140010570:	add    DWORD PTR [rax],eax
   140010572:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140010576:	imul   eax,DWORD PTR [rax],0x690067
   14001057c:	outs   dx,BYTE PTR ds:[rsi]
   14001057d:	add    BYTE PTR [rcx+0x0],ah
   140010580:	ins    BYTE PTR es:[rdi],dx
   140010581:	add    BYTE PTR [rsi+0x0],al
   140010584:	imul   eax,DWORD PTR [rax],0x65006c
   14001058a:	outs   dx,BYTE PTR ds:[rsi]
   14001058b:	add    BYTE PTR [rcx+0x0],ah
   14001058e:	ins    DWORD PTR es:[rdi],dx
   14001058f:	add    BYTE PTR [rbp+0x0],ah
   140010592:	add    BYTE PTR [rax],al
   140010594:	push   rdx
   140010595:	add    BYTE PTR [rdx+0x0],cl
   140010598:	push   rsi
   140010599:	add    BYTE PTR [rdi+0x0],cl
   14001059c:	push   rbx
   14001059d:	add    BYTE PTR [rbp+0x0],dl
   1400105a0:	jo     0x1400105a2
   1400105a2:	add    BYTE PTR fs:[rcx+0x0],ah
   1400105a6:	je     0x1400105a8
   1400105a8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400105ac:	add    BYTE PTR cs:[rbp+0x0],ah
   1400105b0:	js     0x1400105b2
   1400105b2:	add    BYTE PTR gs:[rax],al
   1400105b5:	add    BYTE PTR [rax],al
   1400105b7:	add    BYTE PTR [rdx+0x0],ch
   1400105ba:	and    eax,0x50000100
   1400105bf:	add    BYTE PTR [rdx+0x0],dh
   1400105c2:	outs   dx,DWORD PTR ds:[rsi]
   1400105c3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400105c7:	add    BYTE PTR [rbx+0x0],ah
   1400105ca:	je     0x1400105cc
   1400105cc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400105d0:	ins    DWORD PTR es:[rdi],dx
   1400105d1:	add    BYTE PTR [rbp+0x0],ah
   1400105d4:	add    BYTE PTR [rax],al
   1400105d6:	add    BYTE PTR [rax],al
   1400105d8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400105dc:	movsxd eax,DWORD PTR [rax]
   1400105de:	jb     0x1400105e0
   1400105e0:	outs   dx,DWORD PTR ds:[rsi]
   1400105e1:	add    BYTE PTR [rbx+0x0],dh
   1400105e4:	outs   dx,DWORD PTR ds:[rsi]
   1400105e5:	add    BYTE PTR [rsi+0x0],ah
   1400105e8:	je     0x1400105ea
   1400105ea:	scas   al,BYTE PTR es:[rdi]
   1400105eb:	add    BYTE PTR [rax],ah
   1400105ed:	add    BYTE PTR [rdi+0x0],dl
   1400105f0:	imul   eax,DWORD PTR [rax],0x64006e
   1400105f6:	outs   dx,DWORD PTR ds:[rsi]
   1400105f7:	add    BYTE PTR [rdi+0x0],dh
   1400105fa:	jae    0x1400105fc
   1400105fc:	scas   al,BYTE PTR es:[rdi]
   1400105fd:	add    BYTE PTR [rax],ah
   1400105ff:	add    BYTE PTR [rdi+0x0],cl
   140010602:	jo     0x140010604
   140010604:	add    BYTE PTR gs:[rdx+0x0],dh
   140010608:	(bad)  
   140010609:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001060d:	add    BYTE PTR [rsi+0x0],ch
   140010610:	add    BYTE PTR [eax],ah
   140010613:	add    BYTE PTR [rbx+0x0],dl
   140010616:	jns    0x140010618
   140010618:	jae    0x14001061a
   14001061a:	je     0x14001061c
   14001061c:	add    BYTE PTR gs:[rbp+0x0],ch
   140010620:	add    BYTE PTR [rax],al
   140010622:	add    BYTE PTR [rax],al
   140010624:	rex.RX add BYTE PTR [rcx],r10b
   140010627:	add    BYTE PTR [rcx],al
   140010629:	add    BYTE PTR [rax+0x0],dl
   14001062c:	jb     0x14001062e
   14001062e:	outs   dx,DWORD PTR ds:[rsi]
   14001062f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140010633:	add    BYTE PTR [rbx+0x0],ah
   140010636:	je     0x140010638
   140010638:	push   rsi
   140010639:	add    BYTE PTR [rbp+0x0],ah
   14001063c:	jb     0x14001063e
   14001063e:	jae    0x140010640
   140010640:	imul   eax,DWORD PTR [rax],0x6e006f
   140010646:	add    BYTE PTR [rax],al
   140010648:	xor    DWORD PTR [rax],eax
   14001064a:	xor    BYTE PTR [rax],al
   14001064c:	add    BYTE PTR cs:[rax],dh
   14001064f:	add    BYTE PTR [rsi],ch
   140010651:	add    BYTE PTR [rcx],dh
   140010653:	add    BYTE PTR [rax],dh
   140010655:	add    BYTE PTR [rdx],dh
   140010657:	add    BYTE PTR [rax+rax*1],dh
   14001065a:	xor    BYTE PTR [rax],al
   14001065c:	add    BYTE PTR cs:[rcx],dh
   14001065f:	add    BYTE PTR [rsi],dh
   140010661:	add    BYTE PTR [rbx],dh
   140010663:	add    BYTE PTR [rax],bh
   140010665:	add    BYTE PTR [rax+rax*1],dh
   140010668:	add    BYTE PTR [rax],al
   14001066a:	add    BYTE PTR [rax],al
   14001066c:	add    BYTE PTR [rax],r8b
   14001066f:	add    BYTE PTR [rcx],al
   140010671:	add    BYTE PTR [rsi+0x0],dl
   140010674:	(bad)  
   140010675:	add    BYTE PTR [rdx+0x0],dh
   140010678:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001067c:	ins    BYTE PTR es:[rdi],dx
   14001067d:	add    BYTE PTR [rbp+0x0],ah
   140010680:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010684:	data16 add BYTE PTR [rdi+0x0],ch
   140010688:	add    BYTE PTR [rax],al
   14001068a:	add    BYTE PTR [rax],al
   14001068c:	and    al,0x0
   14001068e:	add    al,0x0
   140010690:	add    BYTE PTR [rax],al
   140010692:	push   rsp
   140010693:	add    BYTE PTR [rdx+0x0],dh
   140010696:	(bad)  
   140010697:	add    BYTE PTR [rsi+0x0],ch
   14001069a:	jae    0x14001069c
   14001069c:	ins    BYTE PTR es:[rdi],dx
   14001069d:	add    BYTE PTR [rcx+0x0],ah
   1400106a0:	je     0x1400106a2
   1400106a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400106a8:	add    BYTE PTR [rax],al
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	or     DWORD PTR [rax+rsi*4],eax
   1400106af:	.byte 0x4

Disassembly of section .reloc:

0000000140011000 <.reloc>:
   140011000:	add    BYTE PTR [rax+0x7c0000],dl
   140011006:	add    BYTE PTR [rax],al
   140011008:	lock movabs ds:0xa328a320a308a2f8,al
   140011012:	mov    al,0xa3
   140011014:	mov    eax,0xe0a3d8a3
   140011019:	movabs ds:0xa400a3f8a3f0a3e8,eax
   140011022:	or     BYTE PTR [rax+rdx*1+0x20a418a4],ah
   140011029:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001102a:	sub    BYTE PTR [rax+rsi*1+0x40a438a4],ah
   140011031:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011032:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011034:	push   rax
   140011035:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011036:	pop    rax
   140011037:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011038:	(bad)  
   140011039:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001103a:	push   0x78a470a4
   14001103f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011040:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140011048:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   140011051:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011052:	enter  0xd0a4,0xa4
   140011056:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14001105d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001105e:	clc    
   14001105f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011060:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140011066:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14001106c:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140011072:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140011074:	push   rax
   140011075:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011076:	pop    rax
   140011077:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011078:	(bad)  
   140011079:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001107a:	add    BYTE PTR [rax],al
   14001107c:	add    al,al
   14001107e:	add    BYTE PTR [rax],al
   140011080:	adc    BYTE PTR [rax],al
   140011082:	add    BYTE PTR [rax],al
   140011084:	fsubr  DWORD PTR [rcx-0x56075610]
   14001108a:	add    BYTE PTR [rdx+0xe000],ch
   140011090:	or     al,0x0
   140011092:	add    BYTE PTR [rax],al
   140011094:	.byte 0x20
   140011095:	.byte 0xa0
	...
