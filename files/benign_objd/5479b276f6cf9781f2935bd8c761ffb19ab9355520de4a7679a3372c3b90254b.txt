
5479b276f6cf9781f2935bd8c761ffb19ab9355520de4a7679a3372c3b90254b.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x489e5]        # 0x449a00
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x489e6]        # 0x449a10
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x489e9]        # 0x449a20
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x489ac]        # 0x4499f0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x4864f]        # 0x4496a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x48981]        # 0x4499e0
  40105f:	mov    DWORD PTR [rip+0x4ffa3],edx        # 0x451008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x43a860
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x434540
  401081:	mov    rdx,QWORD PTR [rip+0x486b8]        # 0x449740
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x4869e]        # 0x449730
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x48714]        # 0x4497b0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x4863b]        # 0x4496e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x434120
  4010af:	mov    rax,QWORD PTR [rip+0x4859a]        # 0x449650
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x43a860
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x332f9]        # 0x434420
  401127:	call   0x434410
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x48675]        # 0x4497e0
  40116b:	lea    r8,[rip+0x4fea6]        # 0x451018
  401172:	lea    rdx,[rip+0x4fea7]        # 0x451020
  401179:	lea    rcx,[rip+0x4fea8]        # 0x451028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x4fe78],eax        # 0x451000
  401188:	lea    rax,[rip+0x4fe71]        # 0x451000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x48605]        # 0x4497a0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x43a878
  4011a3:	mov    DWORD PTR [rip+0x4fe67],eax        # 0x451010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x4881a]        # 0x4499e0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x4851b]        # 0x449710
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x53676]        # 0x454878
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x484f7]        # 0x449720
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x4fdba],0x1        # 0x451004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x4842c]        # 0x449690
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x434730
  40127d:	lea    rcx,[rip+0x33a4c]        # 0x434cd0
  401284:	call   QWORD PTR [rip+0x535e6]        # 0x454870
  40128a:	mov    rdx,QWORD PTR [rip+0x4846f]        # 0x449700
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x434be0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x43a8b0
  4012a5:	call   0x434520
  4012aa:	mov    rax,QWORD PTR [rip+0x483ef]        # 0x4496a0
  4012b1:	mov    QWORD PTR [rip+0x52530],rax        # 0x4537e8
  4012b8:	mov    rax,QWORD PTR [rip+0x48411]        # 0x4496d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x524c9],rax        # 0x4537e0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3bcca],eax        # 0x43d000
  401336:	mov    r12d,DWORD PTR [rip+0x4fceb]        # 0x451028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x43a6c8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x4fcc2]        # 0x451020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x43a620
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x43a6c8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x43a6b8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x4fc6a],rbp        # 0x451020
  4013b6:	call   0x4340f0
  4013bb:	mov    rax,QWORD PTR [rip+0x482ee]        # 0x4496b0
  4013c2:	mov    rdx,QWORD PTR [rip+0x4fc4f]        # 0x451018
  4013c9:	mov    ecx,DWORD PTR [rip+0x4fc59]        # 0x451028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x4fc3c]        # 0x451018
  4013dc:	mov    rdx,QWORD PTR [rip+0x4fc3d]        # 0x451020
  4013e3:	call   0x43ab40
  4013e8:	mov    ecx,DWORD PTR [rip+0x4fc1a]        # 0x451008
  4013ee:	mov    DWORD PTR [rip+0x4fc18],eax        # 0x45100c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x4fc02]        # 0x451004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x43a848
  40140b:	mov    eax,DWORD PTR [rip+0x4fbfb]        # 0x45100c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x482e9]        # 0x449720
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x43a850
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x4830d]        # 0x449770
  401463:	mov    rcx,QWORD PTR [rip+0x482f6]        # 0x449760
  40146a:	call   0x43a810
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x53327]        # 0x4547c0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x482e9]        # 0x449790
  4014a7:	mov    rcx,QWORD PTR [rip+0x482d2]        # 0x449780
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x43a810
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x43a790
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x48505]        # 0x4499e0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x434130
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x484d5]        # 0x4499e0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x434130
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r15
  401532:	push   r14
  401534:	push   r13
  401536:	push   r12
  401538:	push   rbp
  401539:	push   rdi
  40153a:	push   rsi
  40153b:	push   rbx
  40153c:	sub    rsp,0x38
  401540:	mov    ebp,DWORD PTR [rdx]
  401542:	mov    eax,DWORD PTR [rsp+0xa0]
  401549:	mov    r13,rcx
  40154c:	movsxd rsi,r8d
  40154f:	mov    r15,rdx
  401552:	mov    QWORD PTR [rsp+0x28],r9
  401557:	lea    ecx,[rbp+rax*1+0x1]
  40155b:	movsxd rcx,ecx
  40155e:	call   0x4227b0
  401563:	mov    r12,QWORD PTR [r13+0x0]
  401567:	mov    r8,rsi
  40156a:	mov    rcx,rax
  40156d:	mov    rdi,rax
  401570:	mov    rdx,r12
  401573:	call   0x43a6b8
  401578:	movsxd rbx,DWORD PTR [rsp+0xa0]
  401580:	mov    r9,QWORD PTR [rsp+0x28]
  401585:	lea    rcx,[rdi+rsi*1]
  401589:	mov    rdx,r9
  40158c:	mov    r8,rbx
  40158f:	add    rbx,rsi
  401592:	call   0x43a6b8
  401597:	mov    r10d,ebp
  40159a:	lea    rcx,[rdi+rbx*1]
  40159e:	lea    rdx,[r12+rsi*1]
  4015a2:	sub    r10d,esi
  4015a5:	lea    r8d,[r10+0x1]
  4015a9:	movsxd r8,r8d
  4015ac:	call   0x43a6b8
  4015b1:	mov    rcx,r12
  4015b4:	call   0x43a748
  4015b9:	mov    QWORD PTR [r13+0x0],rdi
  4015bd:	mov    eax,DWORD PTR [rsp+0xa0]
  4015c4:	add    DWORD PTR [r15],eax
  4015c7:	add    rsp,0x38
  4015cb:	pop    rbx
  4015cc:	pop    rsi
  4015cd:	pop    rdi
  4015ce:	pop    rbp
  4015cf:	pop    r12
  4015d1:	pop    r13
  4015d3:	pop    r14
  4015d5:	pop    r15
  4015d7:	ret    
  4015d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e0:	push   r15
  4015e2:	push   r14
  4015e4:	push   r13
  4015e6:	push   r12
  4015e8:	push   rbp
  4015e9:	push   rdi
  4015ea:	push   rsi
  4015eb:	push   rbx
  4015ec:	sub    rsp,0x118
  4015f3:	call   0x4119d0
  4015f8:	lea    rcx,[rip+0x3fa05]        # 0x441004
  4015ff:	mov    r12,rax
  401602:	lea    r15,[rsp+0x88]
  40160a:	lea    r13,[rsp+0xe0]
  401612:	call   0x422a00
  401617:	lea    rcx,[rip+0x3f9e2]        # 0x441000
  40161e:	mov    QWORD PTR [r12+0x10],rax
  401623:	call   0x422a00
  401628:	lea    rcx,[rip+0x3f9d9]        # 0x441008
  40162f:	mov    QWORD PTR [r12],rax
  401633:	call   0x422a00
  401638:	mov    rcx,rax
  40163b:	mov    QWORD PTR [r12+0x18],rax
  401640:	call   0x43a620
  401645:	mov    rcx,r15
  401648:	mov    DWORD PTR [r12+0x20],eax
  40164d:	call   0x40ea00
  401652:	test   rax,rax
  401655:	mov    rsi,rax
  401658:	je     0x401774
  40165e:	lea    rax,[rsp+0x8c]
  401666:	mov    QWORD PTR [rsp+0x38],rax
  40166b:	lea    rax,[rsp+0x98]
  401673:	mov    QWORD PTR [rsp+0x40],rax
  401678:	lea    rax,[rsp+0x90]
  401680:	mov    QWORD PTR [rsp+0x48],rax
  401685:	lea    rax,[rsp+0xa0]
  40168d:	mov    QWORD PTR [rsp+0x50],rax
  401692:	lea    rax,[rsp+0x94]
  40169a:	mov    QWORD PTR [rsp+0x60],rax
  40169f:	lea    rax,[rsp+0xc0]
  4016a7:	mov    QWORD PTR [rsp+0x58],rax
  4016ac:	nop    DWORD PTR [rax+0x0]
  4016b0:	cmp    BYTE PTR [rsi],0x7e
  4016b3:	je     0x4017b0
  4016b9:	lea    rdi,[rip+0x3fa70]        # 0x441130
  4016c0:	lea    rbp,[rip+0x3f939]        # 0x441000
  4016c7:	mov    ebx,0x3
  4016cc:	mov    rcx,rsi
  4016cf:	movsxd rbx,ebx
  4016d2:	call   0x43a620
  4016d7:	lea    rcx,[rax+rbx*1+0x3]
  4016dc:	call   0x4227b0
  4016e1:	mov    rdx,rsi
  4016e4:	mov    rcx,rax
  4016e7:	mov    rbx,rax
  4016ea:	call   0x4323b0
  4016ef:	movzx  edx,BYTE PTR [rax-0x1]
  4016f3:	cmp    dl,0x2f
  4016f6:	je     0x401705
  4016f8:	cmp    dl,0x5c
  4016fb:	je     0x401705
  4016fd:	mov    edx,0x2f
  401702:	mov    WORD PTR [rax],dx
  401705:	mov    rdx,rbp
  401708:	mov    rcx,rbx
  40170b:	call   0x43a658
  401710:	mov    rdx,r13
  401713:	mov    rcx,rbx
  401716:	call   0x435d60
  40171b:	test   eax,eax
  40171d:	jne    0x401735
  40171f:	movzx  eax,WORD PTR [rsp+0xe6]
  401727:	and    ax,0xf000
  40172b:	cmp    ax,0x8000
  40172f:	je     0x4017c0
  401735:	add    rdi,0x8
  401739:	mov    rcx,rbx
  40173c:	call   0x43a748
  401741:	mov    rbp,QWORD PTR [rdi]
  401744:	test   rbp,rbp
  401747:	je     0x401760
  401749:	mov    rcx,rbp
  40174c:	call   0x43a620
  401751:	mov    rbx,rax
  401754:	jmp    0x4016cc
  401759:	nop    DWORD PTR [rax+0x0]
  401760:	mov    rcx,r15
  401763:	call   0x40e9d0
  401768:	test   rax,rax
  40176b:	mov    rsi,rax
  40176e:	jne    0x4016b0
  401774:	or     DWORD PTR [r12+0x2c],0x400
  40177d:	mov    rax,QWORD PTR [r12+0x18]
  401782:	xor    r8d,r8d
  401785:	xor    edx,edx
  401787:	mov    rcx,r12
  40178a:	mov    QWORD PTR [rip+0x4f89f],rax        # 0x451030
  401791:	call   0x40a810
  401796:	mov    rax,r12
  401799:	add    rsp,0x118
  4017a0:	pop    rbx
  4017a1:	pop    rsi
  4017a2:	pop    rdi
  4017a3:	pop    rbp
  4017a4:	pop    r12
  4017a6:	pop    r13
  4017a8:	pop    r14
  4017aa:	pop    r15
  4017ac:	ret    
  4017ad:	nop    DWORD PTR [rax]
  4017b0:	mov    rcx,rsi
  4017b3:	call   0x41e9a0
  4017b8:	mov    rsi,rax
  4017bb:	jmp    0x4016b9
  4017c0:	mov    r9,QWORD PTR [rsp+0x38]
  4017c5:	mov    rdx,QWORD PTR [rsp+0x40]
  4017ca:	mov    r8,r13
  4017cd:	mov    rcx,rbx
  4017d0:	call   0x406ed0
  4017d5:	test   rax,rax
  4017d8:	mov    r14,rax
  4017db:	je     0x401735
  4017e1:	mov    QWORD PTR [rsp+0xa0],rax
  4017e9:	mov    rax,QWORD PTR [r12+0x18]
  4017ee:	lea    rcx,[rip+0x3f918]        # 0x44110d
  4017f5:	mov    rbp,QWORD PTR [rsp+0x98]
  4017fd:	mov    r8,QWORD PTR [rsp+0x48]
  401802:	mov    rdx,QWORD PTR [rsp+0x50]
  401807:	mov    DWORD PTR [rsp+0xa8],0x0
  401812:	mov    QWORD PTR [rsp+0xc0],rax
  40181a:	mov    eax,DWORD PTR [r12+0x20]
  40181f:	mov    DWORD PTR [rsp+0xac],ebp
  401826:	mov    DWORD PTR [rsp+0xb0],0x3
  401831:	mov    DWORD PTR [rsp+0xc8],0x0
  40183c:	mov    DWORD PTR [rsp+0xd0],0x3
  401847:	mov    DWORD PTR [rsp+0xcc],eax
  40184e:	call   0x4128a0
  401853:	test   eax,eax
  401855:	je     0x401864
  401857:	mov    rcx,r14
  40185a:	call   0x43a748
  40185f:	jmp    0x401735
  401864:	movsxd rcx,DWORD PTR [rsp+0x90]
  40186c:	add    rcx,r14
  40186f:	call   0x412e20
  401874:	mov    r8,QWORD PTR [rsp+0x60]
  401879:	mov    rdx,QWORD PTR [rsp+0x58]
  40187e:	lea    rcx,[rip+0x3f888]        # 0x44110d
  401885:	add    DWORD PTR [rsp+0x90],eax
  40188c:	call   0x4128a0
  401891:	test   eax,eax
  401893:	jne    0x4019d4
  401899:	lea    rax,[r12+0x18]
  40189e:	mov    QWORD PTR [rsp+0x70],rax
  4018a3:	lea    rax,[r12+0x20]
  4018a8:	mov    QWORD PTR [rsp+0x78],rax
  4018ad:	mov    eax,DWORD PTR [rsp+0x94]
  4018b4:	mov    rcx,QWORD PTR [rsp+0x58]
  4018b9:	mov    DWORD PTR [rsp+0xc8],eax
  4018c0:	call   0x412ed0
  4018c5:	cmp    eax,0xffffffff
  4018c8:	mov    DWORD PTR [rsp+0x94],eax
  4018cf:	je     0x401a53
  4018d5:	mov    DWORD PTR [rsp+0xc8],eax
  4018dc:	test   eax,eax
  4018de:	jle    0x401a69
  4018e4:	mov    rdx,QWORD PTR [rsp+0xc0]
  4018ec:	movsxd rcx,eax
  4018ef:	mov    QWORD PTR [rsp+0x68],rdx
  4018f4:	movzx  edx,BYTE PTR [rdx+rcx*1-0x1]
  4018f9:	cmp    dl,0xd
  4018fc:	sete   r9b
  401900:	cmp    dl,0x20
  401903:	sete   r8b
  401907:	or     r9b,r8b
  40190a:	jne    0x401918
  40190c:	sub    edx,0x9
  40190f:	cmp    dl,0x1
  401912:	ja     0x401a69
  401918:	mov    rdx,QWORD PTR [rsp+0x68]
  40191d:	xor    r8d,r8d
  401920:	lea    rcx,[rdx+rcx*1-0x2]
  401925:	jmp    0x401955
  401927:	nop    WORD PTR [rax+rax*1+0x0]
  401930:	movzx  edx,BYTE PTR [rcx]
  401933:	sub    rcx,0x1
  401937:	cmp    dl,0xd
  40193a:	sete   r11b
  40193e:	cmp    dl,0x20
  401941:	sete   r10b
  401945:	or     r11b,r10b
  401948:	jne    0x401952
  40194a:	sub    edx,0x9
  40194d:	cmp    dl,0x1
  401950:	ja     0x40196a
  401952:	mov    eax,r9d
  401955:	lea    r9d,[rax-0x1]
  401959:	add    r8d,0x1
  40195d:	test   r9d,r9d
  401960:	mov    DWORD PTR [rsp+0xc8],r9d
  401968:	jne    0x401930
  40196a:	cmp    r8d,0x1
  40196e:	je     0x401a66
  401974:	mov    DWORD PTR [rsp+0xc8],eax
  40197b:	mov    rax,QWORD PTR [rsp+0x68]
  401980:	movsxd r9,r9d
  401983:	mov    BYTE PTR [rax+r9*1],0xa
  401988:	movsxd rax,DWORD PTR [rsp+0xc8]
  401990:	lea    edx,[rax+0x1]
  401993:	mov    DWORD PTR [rsp+0xc8],edx
  40199a:	mov    rdx,QWORD PTR [rsp+0xc0]
  4019a2:	mov    BYTE PTR [rdx+rax*1],0xa
  4019a6:	mov    r8d,DWORD PTR [rsp+0xc8]
  4019ae:	movsxd rdx,DWORD PTR [rsp+0x90]
  4019b6:	mov    rcx,QWORD PTR [rsp+0x70]
  4019bb:	sub    ebp,edx
  4019bd:	lea    r9,[r14+rdx*1]
  4019c1:	mov    rdx,QWORD PTR [rsp+0x78]
  4019c6:	mov    DWORD PTR [rsp+0x20],ebp
  4019ca:	call   0x401530
  4019cf:	jmp    0x401857
  4019d4:	mov    r8d,DWORD PTR [r12+0x20]
  4019d9:	lea    rax,[r12+0x18]
  4019de:	lea    rdx,[r12+0x20]
  4019e3:	lea    r9,[rip+0x3f723]        # 0x44110d
  4019ea:	mov    DWORD PTR [rsp+0x20],0x8
  4019f2:	mov    rcx,rax
  4019f5:	mov    QWORD PTR [rsp+0x70],rax
  4019fa:	mov    QWORD PTR [rsp+0x78],rdx
  4019ff:	mov    DWORD PTR [rsp+0xc8],r8d
  401a07:	call   0x401530
  401a0c:	mov    rax,QWORD PTR [r12+0x18]
  401a11:	mov    r8,QWORD PTR [rsp+0x60]
  401a16:	lea    rcx,[rip+0x3f6f0]        # 0x44110d
  401a1d:	mov    rdx,QWORD PTR [rsp+0x58]
  401a22:	mov    DWORD PTR [rsp+0xc8],0x0
  401a2d:	mov    QWORD PTR [rsp+0xc0],rax
  401a35:	mov    eax,DWORD PTR [r12+0x20]
  401a3a:	mov    DWORD PTR [rsp+0xcc],eax
  401a41:	call   0x4128a0
  401a46:	test   eax,eax
  401a48:	je     0x4018ad
  401a4e:	call   0x43a7b0
  401a53:	mov    eax,DWORD PTR [rsp+0xcc]
  401a5a:	mov    DWORD PTR [rsp+0xc8],eax
  401a61:	jmp    0x4018dc
  401a66:	mov    eax,r9d
  401a69:	mov    rdx,QWORD PTR [rsp+0x78]
  401a6e:	mov    rcx,QWORD PTR [rsp+0x70]
  401a73:	lea    r9,[rip+0x3f69c]        # 0x441116
  401a7a:	mov    r8d,eax
  401a7d:	mov    DWORD PTR [rsp+0x20],0x2
  401a85:	call   0x401530
  401a8a:	mov    eax,DWORD PTR [rsp+0xc8]
  401a91:	lea    r8d,[rax+0x2]
  401a95:	mov    DWORD PTR [rsp+0xc8],r8d
  401a9d:	jmp    0x4019ae
  401aa2:	nop    DWORD PTR [rax+0x0]
  401aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ab0:	sub    rsp,0x28
  401ab4:	cmp    QWORD PTR [rip+0x4f57c],0x0        # 0x451038
  401abc:	je     0x401b30
  401abe:	mov    ecx,0x58
  401ac3:	call   0x4227b0
  401ac8:	mov    rdx,QWORD PTR [rip+0x4f569]        # 0x451038
  401acf:	mov    rcx,QWORD PTR [rdx]
  401ad2:	mov    QWORD PTR [rax],rcx
  401ad5:	mov    rcx,QWORD PTR [rdx+0x8]
  401ad9:	mov    QWORD PTR [rax+0x8],rcx
  401add:	mov    rcx,QWORD PTR [rdx+0x10]
  401ae1:	mov    QWORD PTR [rax+0x10],rcx
  401ae5:	mov    rcx,QWORD PTR [rdx+0x18]
  401ae9:	mov    QWORD PTR [rax+0x18],rcx
  401aed:	mov    rcx,QWORD PTR [rdx+0x20]
  401af1:	mov    QWORD PTR [rax+0x20],rcx
  401af5:	mov    rcx,QWORD PTR [rdx+0x28]
  401af9:	mov    QWORD PTR [rax+0x28],rcx
  401afd:	mov    rcx,QWORD PTR [rdx+0x30]
  401b01:	mov    QWORD PTR [rax+0x30],rcx
  401b05:	mov    rcx,QWORD PTR [rdx+0x38]
  401b09:	mov    QWORD PTR [rax+0x38],rcx
  401b0d:	mov    rcx,QWORD PTR [rdx+0x40]
  401b11:	mov    QWORD PTR [rax+0x40],rcx
  401b15:	mov    rcx,QWORD PTR [rdx+0x48]
  401b19:	mov    QWORD PTR [rax+0x48],rcx
  401b1d:	mov    rdx,QWORD PTR [rdx+0x50]
  401b21:	mov    QWORD PTR [rax+0x50],rdx
  401b25:	add    rsp,0x28
  401b29:	ret    
  401b2a:	nop    WORD PTR [rax+rax*1+0x0]
  401b30:	call   0x4015e0
  401b35:	mov    QWORD PTR [rip+0x4f4fc],rax        # 0x451038
  401b3c:	jmp    0x401abe
  401b3e:	xchg   ax,ax
  401b40:	push   rbx
  401b41:	sub    rsp,0x30
  401b45:	mov    rbx,rcx
  401b48:	mov    rcx,QWORD PTR [rip+0x4f4e9]        # 0x451038
  401b4f:	mov    r8d,edx
  401b52:	test   rcx,rcx
  401b55:	je     0x401b64
  401b57:	mov    rdx,rbx
  401b5a:	add    rsp,0x30
  401b5e:	pop    rbx
  401b5f:	jmp    0x409010
  401b64:	mov    DWORD PTR [rsp+0x2c],edx
  401b68:	call   0x4015e0
  401b6d:	mov    r8d,DWORD PTR [rsp+0x2c]
  401b72:	mov    rcx,rax
  401b75:	mov    rdx,rbx
  401b78:	mov    QWORD PTR [rip+0x4f4b9],rax        # 0x451038
  401b7f:	add    rsp,0x30
  401b83:	pop    rbx
  401b84:	jmp    0x409010
  401b89:	nop    DWORD PTR [rax+0x0]
  401b90:	push   r13
  401b92:	push   r12
  401b94:	push   rbp
  401b95:	push   rdi
  401b96:	push   rsi
  401b97:	push   rbx
  401b98:	sub    rsp,0x58
  401b9c:	lea    rsi,[rip+0x3f58d]        # 0x441130
  401ba3:	mov    rbp,rdx
  401ba6:	lea    r12,[rsp+0x20]
  401bab:	lea    rdx,[rip+0x3f44e]        # 0x441000
  401bb2:	mov    r13,rcx
  401bb5:	mov    r8,r12
  401bb8:	mov    rcx,rbp
  401bbb:	call   0x406ab0
  401bc0:	test   rax,rax
  401bc3:	mov    rbx,rax
  401bc6:	je     0x401c58
  401bcc:	lea    rdx,[rip+0x3f431]        # 0x441004
  401bd3:	mov    rcx,rax
  401bd6:	call   0x4124d0
  401bdb:	mov    rcx,rbx
  401bde:	mov    rdi,rax
  401be1:	call   0x43a748
  401be6:	mov    r8d,0x1
  401bec:	mov    rdx,r13
  401bef:	mov    rcx,rdi
  401bf2:	call   0x409010
  401bf7:	test   rax,rax
  401bfa:	je     0x401c50
  401bfc:	cmp    QWORD PTR [rax+0x8],0x0
  401c01:	je     0x401c50
  401c03:	mov    rcx,rax
  401c06:	call   0x409280
  401c0b:	mov    rdx,QWORD PTR [rax+0x8]
  401c0f:	mov    r8,r12
  401c12:	mov    rcx,rbp
  401c15:	mov    rbx,rax
  401c18:	call   0x406ab0
  401c1d:	test   rax,rax
  401c20:	mov    rsi,rax
  401c23:	je     0x401c32
  401c25:	mov    rcx,QWORD PTR [rbx+0x8]
  401c29:	call   0x43a748
  401c2e:	mov    QWORD PTR [rbx+0x8],rsi
  401c32:	mov    rcx,rdi
  401c35:	call   0x414970
  401c3a:	mov    rax,rbx
  401c3d:	add    rsp,0x58
  401c41:	pop    rbx
  401c42:	pop    rsi
  401c43:	pop    rdi
  401c44:	pop    rbp
  401c45:	pop    r12
  401c47:	pop    r13
  401c49:	ret    
  401c4a:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	mov    rcx,rdi
  401c53:	call   0x414970
  401c58:	add    rsi,0x8
  401c5c:	mov    rdx,QWORD PTR [rsi]
  401c5f:	test   rdx,rdx
  401c62:	jne    0x401bb5
  401c68:	xor    eax,eax
  401c6a:	jmp    0x401c3d
  401c6c:	nop
  401c6d:	nop
  401c6e:	nop
  401c6f:	nop
  401c70:	sub    rsp,0x38
  401c74:	mov    eax,edx
  401c76:	shr    rdx,0x20
  401c7a:	not    r8d
  401c7d:	not    eax
  401c7f:	and    ecx,eax
  401c81:	or     ecx,edx
  401c83:	and    ecx,r8d
  401c86:	cmp    DWORD PTR [rip+0x4f403],0x2        # 0x451090
  401c8d:	mov    DWORD PTR [rsp+0x2c],ecx
  401c91:	je     0x401cd0
  401c93:	not    ecx
  401c95:	lea    rdx,[rip+0x3f4b4]        # 0x441150
  401c9c:	mov    r8d,0x1
  401ca2:	mov    DWORD PTR [rsp+0x2c],ecx
  401ca6:	lea    rcx,[rip+0x4f3a3]        # 0x451050
  401cad:	call   0x40a1b0
  401cb2:	lea    rdx,[rsp+0x2c]
  401cb7:	lea    rcx,[rip+0x4f392]        # 0x451050
  401cbe:	mov    r8d,0x4
  401cc4:	call   0x40a1b0
  401cc9:	nop
  401cca:	add    rsp,0x38
  401cce:	ret    
  401ccf:	nop
  401cd0:	call   0x41c9b0
  401cd5:	nop
  401cd6:	add    rsp,0x38
  401cda:	ret    
  401cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ce0:	push   rbx
  401ce1:	sub    rsp,0x20
  401ce5:	mov    rbx,rcx
  401ce8:	call   0x41ae90
  401ced:	mov    rax,QWORD PTR [rbx]
  401cf0:	mov    rcx,rbx
  401cf3:	test   rax,rax
  401cf6:	je     0x401d24
  401cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  401d00:	mov    rax,QWORD PTR [rax]
  401d03:	add    rcx,0x8
  401d07:	mov    BYTE PTR [rax],0x0
  401d0a:	mov    rax,QWORD PTR [rcx-0x8]
  401d0e:	mov    DWORD PTR [rax+0x8],0x0
  401d15:	mov    DWORD PTR [rax+0xc],0x0
  401d1c:	mov    rax,QWORD PTR [rcx]
  401d1f:	test   rax,rax
  401d22:	jne    0x401d00
  401d24:	add    rsp,0x20
  401d28:	pop    rbx
  401d29:	jmp    0x41aea0
  401d2e:	xchg   ax,ax
  401d30:	push   r14
  401d32:	push   r13
  401d34:	push   r12
  401d36:	push   rbp
  401d37:	push   rdi
  401d38:	push   rsi
  401d39:	push   rbx
  401d3a:	sub    rsp,0x20
  401d3e:	mov    rbp,QWORD PTR [rip+0x4f303]        # 0x451048
  401d45:	mov    edi,ecx
  401d47:	mov    r14d,edx
  401d4a:	test   rbp,rbp
  401d4d:	je     0x401d85
  401d4f:	mov    rbx,QWORD PTR [rbp+0x0]
  401d53:	lea    rsi,[rbp+0x8]
  401d57:	test   rbx,rbx
  401d5a:	je     0x401d7d
  401d5c:	nop    DWORD PTR [rax+0x0]
  401d60:	mov    rcx,QWORD PTR [rbx]
  401d63:	add    rsi,0x8
  401d67:	call   0x43a748
  401d6c:	mov    rcx,rbx
  401d6f:	call   0x43a748
  401d74:	mov    rbx,QWORD PTR [rsi-0x8]
  401d78:	test   rbx,rbx
  401d7b:	jne    0x401d60
  401d7d:	mov    rcx,rbp
  401d80:	call   0x43a748
  401d85:	lea    r12d,[r14+0x1]
  401d89:	movsxd r12,r12d
  401d8c:	shl    r12,0x3
  401d90:	mov    rcx,r12
  401d93:	call   0x4227b0
  401d98:	test   r14d,r14d
  401d9b:	mov    r13,rax
  401d9e:	jle    0x401e13
  401da0:	mov    rbx,rax
  401da3:	lea    eax,[r14-0x1]
  401da7:	add    edi,0x1
  401daa:	movsxd rdi,edi
  401dad:	lea    rbp,[r13+rax*8+0x8]
  401db2:	mov    ecx,0x10
  401db7:	add    rbx,0x8
  401dbb:	call   0x4227b0
  401dc0:	mov    rcx,rdi
  401dc3:	mov    QWORD PTR [rbx-0x8],rax
  401dc7:	mov    rsi,rax
  401dca:	call   0x4227b0
  401dcf:	mov    rdx,QWORD PTR [rbx-0x8]
  401dd3:	cmp    rbx,rbp
  401dd6:	mov    QWORD PTR [rsi],rax
  401dd9:	mov    DWORD PTR [rdx+0x8],0x0
  401de0:	mov    DWORD PTR [rdx+0xc],0x0
  401de7:	jne    0x401db2
  401de9:	sub    r12,0x8
  401ded:	mov    rcx,r13
  401df0:	mov    QWORD PTR [r13+r12*1+0x0],0x0
  401df9:	mov    QWORD PTR [rip+0x4f248],r13        # 0x451048
  401e00:	add    rsp,0x20
  401e04:	pop    rbx
  401e05:	pop    rsi
  401e06:	pop    rdi
  401e07:	pop    rbp
  401e08:	pop    r12
  401e0a:	pop    r13
  401e0c:	pop    r14
  401e0e:	jmp    0x401ce0
  401e13:	xor    r12d,r12d
  401e16:	jmp    0x401ded
  401e18:	nop    DWORD PTR [rax+rax*1+0x0]
  401e20:	push   r15
  401e22:	push   r14
  401e24:	push   r13
  401e26:	push   r12
  401e28:	push   rbp
  401e29:	push   rdi
  401e2a:	push   rsi
  401e2b:	push   rbx
  401e2c:	sub    rsp,0x1f8
  401e33:	mov    r8d,DWORD PTR [rip+0x3b1d6]        # 0x43d010
  401e3a:	mov    QWORD PTR [rip+0x4f243],0x0        # 0x451088
  401e45:	mov    rbp,rcx
  401e48:	mov    QWORD PTR [rip+0x4f22d],0x0        # 0x451080
  401e53:	test   r8d,r8d
  401e56:	je     0x401e66
  401e58:	mov    rax,QWORD PTR [rcx+0x98]
  401e5f:	mov    QWORD PTR [rip+0x4f222],rax        # 0x451088
  401e66:	mov    ecx,DWORD PTR [rip+0x3b1b4]        # 0x43d020
  401e6c:	mov    rax,QWORD PTR [rbp+0x20]
  401e70:	test   ecx,ecx
  401e72:	jne    0x402507
  401e78:	mov    edx,DWORD PTR [rip+0x3b19a]        # 0x43d018
  401e7e:	test   edx,edx
  401e80:	jne    0x402507
  401e86:	movsxd rcx,DWORD PTR [rbp+0x28]
  401e8a:	mov    rdx,QWORD PTR [rbp+0x60]
  401e8e:	mov    DWORD PTR [rip+0x4f1d0],0x0        # 0x451068
  401e98:	mov    DWORD PTR [rip+0x4f1ca],0x0        # 0x45106c
  401ea2:	mov    DWORD PTR [rip+0x4f1e4],0x0        # 0x451090
  401eac:	mov    QWORD PTR [rip+0x4f1c1],0x0        # 0x451078
  401eb7:	mov    DWORD PTR [rip+0x4f1b3],0x0        # 0x451074
  401ec1:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  401ec5:	mov    BYTE PTR [rsp+0xb8],0x0
  401ecd:	mov    DWORD PTR [rsp+0xbc],0x0
  401ed8:	mov    BYTE PTR [rsp+0xc0],0x0
  401ee0:	mov    rcx,rdx
  401ee3:	add    rdx,QWORD PTR [rax+0x18]
  401ee7:	mov    eax,DWORD PTR [rax+0x20]
  401eea:	sub    eax,ecx
  401eec:	cdqe   
  401eee:	mov    QWORD PTR [rsp+0xc8],rdx
  401ef6:	add    rax,rdx
  401ef9:	cmp    rdx,rax
  401efc:	mov    QWORD PTR [rsp+0xb0],rax
  401f04:	jae    0x402c4c
  401f0a:	movzx  ecx,BYTE PTR [rdx]
  401f0d:	mov    r9,QWORD PTR [rip+0x47aac]        # 0x4499c0
  401f14:	mov    r8d,ecx
  401f17:	and    ecx,0x1f
  401f1a:	shr    r8b,0x5
  401f1e:	and    r8d,0x7
  401f22:	mov    r8d,DWORD PTR [r9+r8*4]
  401f26:	bt     r8d,ecx
  401f2a:	jae    0x40357a
  401f30:	mov    QWORD PTR [rsp+0xd0],0x1
  401f3c:	movsx  cx,BYTE PTR [rdx]
  401f40:	lea    rdi,[rsp+0xb0]
  401f48:	mov    BYTE PTR [rsp+0xd8],0x1
  401f50:	mov    ebx,0x1
  401f55:	mov    QWORD PTR [rsp+0x90],rdi
  401f5d:	mov    WORD PTR [rsp+0xda],cx
  401f65:	xor    ecx,ecx
  401f67:	mov    BYTE PTR [rsp+0xc0],0x1
  401f6f:	mov    r8d,0x1
  401f75:	lea    rdi,[rsp+0x100]
  401f7d:	lea    rsi,[rsp+0x12c]
  401f85:	mov    QWORD PTR [rsp+0x98],rdi
  401f8d:	lea    rdi,[rsp+0x1a0]
  401f95:	mov    QWORD PTR [rsp+0x70],rsi
  401f9a:	mov    QWORD PTR [rsp+0x30],rdi
  401f9f:	lea    rdi,[rsp+0x1ac]
  401fa7:	mov    QWORD PTR [rsp+0x50],rdi
  401fac:	mov    rdi,r14
  401faf:	mov    r14,r12
  401fb2:	mov    r12,rdi
  401fb5:	test   cl,cl
  401fb7:	mov    QWORD PTR [rsp+0x100],rax
  401fbf:	mov    BYTE PTR [rsp+0x108],cl
  401fc6:	je     0x402c23
  401fcc:	mov    eax,DWORD PTR [rsp+0xbc]
  401fd3:	mov    DWORD PTR [rsp+0x10c],eax
  401fda:	mov    rax,QWORD PTR [rsp+0x90]
  401fe2:	mov    BYTE PTR [rsp+0x110],r8b
  401fea:	add    rax,0x2c
  401fee:	cmp    rdx,rax
  401ff1:	je     0x403751
  401ff7:	mov    QWORD PTR [rsp+0x118],rdx
  401fff:	movzx  eax,BYTE PTR [rsp+0xd8]
  402007:	mov    QWORD PTR [rsp+0x120],rbx
  40200f:	test   al,al
  402011:	mov    BYTE PTR [rsp+0x128],al
  402018:	je     0x40202a
  40201a:	movzx  eax,WORD PTR [rsp+0xda]
  402022:	mov    WORD PTR [rsp+0x12a],ax
  40202a:	mov    eax,DWORD PTR [rip+0x4f044]        # 0x451074
  402030:	mov    DWORD PTR [rip+0x4f036],0x0        # 0x451070
  40203a:	mov    QWORD PTR [rip+0x4f01b],0x0        # 0x451060
  402045:	mov    DWORD PTR [rsp+0xa4],0x0
  402050:	mov    DWORD PTR [rsp+0x78],eax
  402054:	mov    eax,DWORD PTR [rip+0x4f01e]        # 0x451078
  40205a:	mov    DWORD PTR [rsp+0x80],eax
  402061:	mov    eax,DWORD PTR [rip+0x4f005]        # 0x45106c
  402067:	mov    DWORD PTR [rsp+0x88],eax
  40206e:	mov    eax,DWORD PTR [rip+0x4eff4]        # 0x451068
  402074:	cmp    DWORD PTR [rbp+0x14],eax
  402077:	je     0x4029ae
  40207d:	mov    edx,DWORD PTR [rbp+0x18]
  402080:	mov    rsi,QWORD PTR [rip+0x47ad9]        # 0x449b60
  402087:	add    edx,eax
  402089:	cmp    edx,DWORD PTR [rsi]
  40208b:	jge    0x4029ae
  402091:	add    eax,DWORD PTR [rbp+0x28]
  402094:	movabs rdx,0xffffffff00000000
  40209e:	mov    ecx,DWORD PTR [rbp+0x2c]
  4020a1:	and    r14,rdx
  4020a4:	mov    rdx,QWORD PTR [rbp+0x60]
  4020a8:	mov    QWORD PTR [rsp+0xa8],0x0
  4020b4:	mov    QWORD PTR [rsp+0x150],0x0
  4020c0:	mov    DWORD PTR [rsp+0x64],0x0
  4020c8:	cdqe   
  4020ca:	cmp    ecx,DWORD PTR [rdx+rax*4]
  4020cd:	lea    r8,[rax*4+0x0]
  4020d5:	jl     0x4020e5
  4020d7:	xor    eax,eax
  4020d9:	cmp    ecx,DWORD PTR [rdx+r8*1+0x4]
  4020de:	setl   al
  4020e1:	mov    DWORD PTR [rsp+0x64],eax
  4020e5:	mov    rax,QWORD PTR [rsp+0xb8]
  4020ed:	mov    rdx,QWORD PTR [rsp+0xc8]
  4020f5:	mov    rcx,QWORD PTR [rsp+0xb0]
  4020fd:	mov    QWORD PTR [rsp+0x1a8],rax
  402105:	mov    rax,QWORD PTR [rsp+0xc0]
  40210d:	cmp    rdx,rcx
  402110:	mov    QWORD PTR [rsp+0x1a0],rcx
  402118:	mov    QWORD PTR [rsp+0x1b8],rdx
  402120:	mov    QWORD PTR [rsp+0x1b0],rax
  402128:	mov    rax,QWORD PTR [rsp+0xd0]
  402130:	mov    QWORD PTR [rsp+0x1c0],rax
  402138:	mov    rax,QWORD PTR [rsp+0xd8]
  402140:	mov    QWORD PTR [rsp+0x1c8],rax
  402148:	mov    rax,QWORD PTR [rsp+0xe0]
  402150:	mov    QWORD PTR [rsp+0x1d0],rax
  402158:	mov    rax,QWORD PTR [rsp+0xe8]
  402160:	mov    QWORD PTR [rsp+0x1d8],rax
  402168:	mov    rax,QWORD PTR [rsp+0xf0]
  402170:	mov    QWORD PTR [rsp+0x1e0],rax
  402178:	mov    rax,rdx
  40217b:	jae    0x402700
  402181:	lea    rbx,[rsp+0xa8]
  402189:	xor    r15d,r15d
  40218c:	xor    edi,edi
  40218e:	xor    esi,esi
  402190:	mov    QWORD PTR [rsp+0x40],rbx
  402195:	lea    rbx,[rsp+0xa4]
  40219d:	mov    QWORD PTR [rsp+0x38],rbx
  4021a2:	lea    rbx,[rsp+0x150]
  4021aa:	mov    QWORD PTR [rsp+0x48],rbx
  4021af:	mov    rbx,QWORD PTR [rsp+0x30]
  4021b4:	add    rbx,0x2a
  4021b8:	cmp    BYTE PTR [rsp+0x1b0],0x0
  4021c0:	mov    QWORD PTR [rsp+0x58],rbx
  4021c5:	jne    0x402226
  4021c7:	cmp    BYTE PTR [rsp+0x1a8],0x0
  4021cf:	jne    0x40246d
  4021d5:	movzx  edx,BYTE PTR [rax]
  4021d8:	mov    rbx,QWORD PTR [rip+0x477e1]        # 0x4499c0
  4021df:	mov    ecx,edx
  4021e1:	and    edx,0x1f
  4021e4:	shr    cl,0x5
  4021e7:	and    ecx,0x7
  4021ea:	mov    ecx,DWORD PTR [rbx+rcx*4]
  4021ed:	bt     ecx,edx
  4021f0:	jae    0x4026e0
  4021f6:	mov    QWORD PTR [rsp+0x1c0],0x1
  402202:	movsx  ax,BYTE PTR [rax]
  402206:	mov    rdx,QWORD PTR [rsp+0x1b8]
  40220e:	mov    BYTE PTR [rsp+0x1c8],0x1
  402216:	mov    WORD PTR [rsp+0x1ca],ax
  40221e:	mov    BYTE PTR [rsp+0x1b0],0x1
  402226:	mov    r9,QWORD PTR [rip+0x4ee5b]        # 0x451088
  40222d:	test   r9,r9
  402230:	je     0x4026d5
  402236:	mov    r8,QWORD PTR [rbp+0xa0]
  40223d:	mov    rax,QWORD PTR [rip+0x4ee34]        # 0x451078
  402244:	mov    ebx,esi
  402246:	cmp    r8,rax
  402249:	je     0x4022b6
  40224b:	mov    rcx,QWORD PTR [rbp+0x20]
  40224f:	mov    rbx,rdx
  402252:	sub    rbx,QWORD PTR [rcx+0x18]
  402256:	cmp    r8,rax
  402259:	jbe    0x402a63
  40225f:	mov    r11,rax
  402262:	movsxd rcx,ebx
  402265:	shl    r11,0x4
  402269:	lea    r10,[r9+r11*1]
  40226d:	cmp    rcx,QWORD PTR [r10]
  402270:	jl     0x402a63
  402276:	cmp    QWORD PTR [r10+0x8],rcx
  40227a:	jg     0x4026a4
  402280:	lea    r9,[r9+r11*1+0x18]
  402285:	jmp    0x4022a4
  402287:	nop    WORD PTR [rax+rax*1+0x0]
  402290:	cmp    QWORD PTR [r9-0x8],rcx
  402294:	jg     0x4022ad
  402296:	add    r9,0x10
  40229a:	cmp    QWORD PTR [r9-0x10],rcx
  40229e:	jg     0x4026a4
  4022a4:	add    rax,0x1
  4022a8:	cmp    r8,rax
  4022ab:	ja     0x402290
  4022ad:	mov    QWORD PTR [rip+0x4edc4],rax        # 0x451078
  4022b4:	xor    ebx,ebx
  4022b6:	mov    r9,QWORD PTR [rip+0x4edc3]        # 0x451080
  4022bd:	test   r9,r9
  4022c0:	je     0x4025c3
  4022c6:	movsxd rcx,DWORD PTR [rip+0x4eda7]        # 0x451074
  4022cd:	mov    rax,QWORD PTR [r9+rcx*8]
  4022d1:	mov    r8,rcx
  4022d4:	test   rax,rax
  4022d7:	je     0x4025c3
  4022dd:	mov    r10,QWORD PTR [rbp+0x20]
  4022e1:	mov    r11,rdx
  4022e4:	sub    r11,QWORD PTR [r10+0x18]
  4022e8:	cmp    r11d,DWORD PTR [rax+0x18]
  4022ec:	mov    r10d,r11d
  4022ef:	jl     0x402517
  4022f5:	cmp    r11d,DWORD PTR [rax+0x1c]
  4022f9:	jl     0x4025d0
  4022ff:	add    rcx,0x1
  402303:	jmp    0x40231c
  402305:	cmp    r10d,DWORD PTR [rax+0x18]
  402309:	jl     0x402329
  40230b:	cmp    r10d,DWORD PTR [rax+0x1c]
  40230f:	lea    r11,[rcx+0x1]
  402313:	jl     0x4025d0
  402319:	mov    rcx,r11
  40231c:	mov    rax,QWORD PTR [r9+rcx*8]
  402320:	add    r8d,0x1
  402324:	test   rax,rax
  402327:	jne    0x402305
  402329:	test   edi,edi
  40232b:	mov    DWORD PTR [rip+0x4ed42],r8d        # 0x451074
  402332:	je     0x402540
  402338:	mov    eax,r15d
  40233b:	mov    DWORD PTR [rip+0x4ed27],0x0        # 0x45106c
  402345:	xor    r15d,r15d
  402348:	xor    edi,edi
  40234a:	test   al,al
  40234c:	jne    0x402352
  40234e:	cmp    esi,ebx
  402350:	je     0x4023a6
  402352:	movabs rax,0xffffffff00000000
  40235c:	and    r13,rax
  40235f:	and    r12,rax
  402362:	test   r15d,r15d
  402365:	jne    0x402565
  40236b:	mov    edx,DWORD PTR [rip+0x4ecfb]        # 0x45106c
  402371:	xor    ecx,ecx
  402373:	xor    eax,eax
  402375:	test   ebx,ebx
  402377:	je     0x402386
  402379:	mov    r12,QWORD PTR [rip+0x3ac90]        # 0x43d010
  402380:	mov    eax,DWORD PTR [rip+0x3ac8e]        # 0x43d014
  402386:	test   edx,edx
  402388:	jne    0x402592
  40238e:	shl    rax,0x20
  402392:	mov    r12d,r12d
  402395:	mov    r14d,r14d
  402398:	or     r12,rax
  40239b:	mov    r8,r14
  40239e:	mov    rdx,r12
  4023a1:	call   0x401c70
  4023a6:	movsxd r8,DWORD PTR [rip+0x4ecc3]        # 0x451070
  4023ad:	mov    rax,QWORD PTR [rsp+0x48]
  4023b2:	mov    r9,QWORD PTR [rsp+0x40]
  4023b7:	mov    rdx,QWORD PTR [rsp+0x38]
  4023bc:	mov    rcx,QWORD PTR [rsp+0x30]
  4023c1:	mov    QWORD PTR [rsp+0x20],rax
  4023c6:	call   0x40bac0
  4023cb:	mov    r8d,DWORD PTR [rsp+0xa4]
  4023d3:	test   r8d,r8d
  4023d6:	jne    0x402700
  4023dc:	movsxd r8,DWORD PTR [rip+0x4ec8d]        # 0x451070
  4023e3:	movsxd rdx,DWORD PTR [rbp+0x10]
  4023e7:	add    r8,QWORD PTR [rsp+0xa8]
  4023ef:	cmp    r8,rdx
  4023f2:	jae    0x402700
  4023f8:	test   rax,rax
  4023fb:	je     0x40242f
  4023fd:	cmp    DWORD PTR [rip+0x4ec8c],0x2        # 0x451090
  402404:	je     0x402690
  40240a:	mov    r8,QWORD PTR [rsp+0x150]
  402412:	lea    rcx,[rip+0x4ec37]        # 0x451050
  402419:	mov    rdx,rax
  40241c:	call   0x40a1b0
  402421:	mov    rax,QWORD PTR [rsp+0xa8]
  402429:	add    DWORD PTR [rip+0x4ec41],eax        # 0x451070
  40242f:	mov    rax,QWORD PTR [rsp+0x1c0]
  402437:	add    rax,QWORD PTR [rsp+0x1b8]
  40243f:	cmp    QWORD PTR [rsp+0x1a0],rax
  402447:	mov    BYTE PTR [rsp+0x1b0],0x0
  40244f:	mov    QWORD PTR [rsp+0x1b8],rax
  402457:	jbe    0x402700
  40245d:	cmp    BYTE PTR [rsp+0x1a8],0x0
  402465:	mov    esi,ebx
  402467:	je     0x4021d5
  40246d:	mov    rdx,QWORD PTR [rsp+0x1b8]
  402475:	mov    r8,QWORD PTR [rsp+0x1a0]
  40247d:	mov    r9,QWORD PTR [rsp+0x50]
  402482:	mov    rcx,QWORD PTR [rsp+0x58]
  402487:	sub    r8,rdx
  40248a:	call   0x423f00
  40248f:	cmp    rax,0xffffffffffffffff
  402493:	mov    QWORD PTR [rsp+0x1c0],rax
  40249b:	je     0x4029f3
  4024a1:	cmp    rax,0xfffffffffffffffe
  4024a5:	je     0x402a2b
  4024ab:	test   rax,rax
  4024ae:	jne    0x4024dc
  4024b0:	mov    rax,QWORD PTR [rsp+0x1b8]
  4024b8:	mov    QWORD PTR [rsp+0x1c0],0x1
  4024c4:	cmp    BYTE PTR [rax],0x0
  4024c7:	jne    0x402acb
  4024cd:	cmp    WORD PTR [rsp+0x1ca],0x0
  4024d6:	jne    0x402aad
  4024dc:	mov    rcx,QWORD PTR [rsp+0x50]
  4024e1:	mov    BYTE PTR [rsp+0x1c8],0x1
  4024e9:	call   0x424040
  4024ee:	test   eax,eax
  4024f0:	je     0x4024fa
  4024f2:	mov    BYTE PTR [rsp+0x1a8],0x0
  4024fa:	mov    rdx,QWORD PTR [rsp+0x1b8]
  402502:	jmp    0x40221e
  402507:	mov    rdx,QWORD PTR [rax+0x30]
  40250b:	mov    QWORD PTR [rip+0x4eb6e],rdx        # 0x451080
  402512:	jmp    0x401e86
  402517:	test   edi,edi
  402519:	je     0x402540
  40251b:	test   r15d,r15d
  40251e:	jne    0x402550
  402520:	movsx  edx,BYTE PTR [rdx]
  402523:	lea    rcx,[rip+0x3ecbf]        # 0x4411e9
  40252a:	call   0x43a650
  40252f:	test   rax,rax
  402532:	sete   al
  402535:	movzx  r15d,al
  402539:	jmp    0x40234a
  40253e:	xchg   ax,ax
  402540:	xor    eax,eax
  402542:	jmp    0x402348
  402547:	nop    WORD PTR [rax+rax*1+0x0]
  402550:	cmp    ebx,esi
  402552:	je     0x4023a6
  402558:	movabs rax,0xffffffff00000000
  402562:	and    r12,rax
  402565:	mov    edx,DWORD PTR [rip+0x4eb01]        # 0x45106c
  40256b:	test   edx,edx
  40256d:	je     0x4025b1
  40256f:	mov    r9d,DWORD PTR [rip+0x3aaa2]        # 0x43d018
  402576:	test   r9d,r9d
  402579:	je     0x4025b1
  40257b:	xor    eax,eax
  40257d:	test   ebx,ebx
  40257f:	mov    r13,QWORD PTR [rip+0x3aa92]        # 0x43d018
  402586:	mov    ecx,DWORD PTR [rip+0x3aa90]        # 0x43d01c
  40258c:	jne    0x402379
  402592:	shl    rcx,0x20
  402596:	mov    r13d,r13d
  402599:	mov    r14d,r14d
  40259c:	or     r13,rcx
  40259f:	mov    r8,r14
  4025a2:	mov    ecx,eax
  4025a4:	mov    rdx,r13
  4025a7:	call   0x401c70
  4025ac:	jmp    0x4023a6
  4025b1:	mov    r13,QWORD PTR [rip+0x3aa68]        # 0x43d020
  4025b8:	mov    ecx,DWORD PTR [rip+0x3aa66]        # 0x43d024
  4025be:	jmp    0x402373
  4025c3:	test   edi,edi
  4025c5:	je     0x40234e
  4025cb:	jmp    0x40251b
  4025d0:	test   edi,edi
  4025d2:	mov    DWORD PTR [rip+0x4ea9b],r8d        # 0x451074
  4025d9:	jne    0x402680
  4025df:	mov    edi,DWORD PTR [rip+0x4eaab]        # 0x451090
  4025e5:	test   edi,edi
  4025e7:	jne    0x4025f3
  4025e9:	mov    DWORD PTR [rip+0x4ea9d],0x1        # 0x451090
  4025f3:	mov    r11d,DWORD PTR [rsp+0x64]
  4025f8:	mov    r10d,DWORD PTR [rbp+0x2c]
  4025fc:	test   r11d,r11d
  4025ff:	je     0x4029c2
  402605:	cmp    r10d,DWORD PTR [rax+0x1c]
  402609:	jl     0x402a14
  40260f:	mov    rdi,QWORD PTR [r9+rcx*8+0x8]
  402614:	test   rdi,rdi
  402617:	mov    r11,rdi
  40261a:	je     0x402a14
  402620:	mov    r8d,DWORD PTR [rip+0x4ea41]        # 0x451068
  402627:	add    r8d,DWORD PTR [rbp+0x28]
  40262b:	mov    rdi,QWORD PTR [rbp+0x60]
  40262f:	movsxd r8,r8d
  402632:	mov    QWORD PTR [rsp+0x68],rdi
  402637:	mov    edi,DWORD PTR [rdi+r8*4+0x4]
  40263c:	cmp    DWORD PTR [r11+0x18],edi
  402640:	jge    0x402a14
  402646:	cmp    r10d,edi
  402649:	jl     0x402680
  40264b:	mov    r11,QWORD PTR [rsp+0x68]
  402650:	mov    r8d,DWORD PTR [r11+r8*4+0x8]
  402655:	cmp    r8d,r10d
  402658:	jle    0x402680
  40265a:	cmp    DWORD PTR [rax+0x1c],edi
  40265d:	jl     0x402680
  40265f:	mov    rax,QWORD PTR [r9+rcx*8+0x8]
  402664:	test   rax,rax
  402667:	je     0x40266f
  402669:	cmp    r8d,DWORD PTR [rax+0x18]
  40266d:	jg     0x402680
  40266f:	mov    DWORD PTR [rip+0x4e9f3],0x1        # 0x45106c
  402679:	nop    DWORD PTR [rax+0x0]
  402680:	mov    edi,0x1
  402685:	jmp    0x40251b
  40268a:	nop    WORD PTR [rax+rax*1+0x0]
  402690:	mov    edx,DWORD PTR [rsp+0x150]
  402697:	mov    rcx,rax
  40269a:	call   0x41c470
  40269f:	jmp    0x402421
  4026a4:	test   esi,esi
  4026a6:	mov    QWORD PTR [rip+0x4e9cb],rax        # 0x451078
  4026ad:	mov    ebx,0x1
  4026b2:	jne    0x4022b6
  4026b8:	mov    eax,DWORD PTR [rip+0x4e9d2]        # 0x451090
  4026be:	test   eax,eax
  4026c0:	jne    0x4022b6
  4026c6:	mov    DWORD PTR [rip+0x4e9c0],0x1        # 0x451090
  4026d0:	jmp    0x4022b6
  4026d5:	mov    ebx,esi
  4026d7:	jmp    0x4022b6
  4026dc:	nop    DWORD PTR [rax+0x0]
  4026e0:	mov    rcx,QWORD PTR [rsp+0x50]
  4026e5:	call   0x424040
  4026ea:	test   eax,eax
  4026ec:	je     0x402a71
  4026f2:	mov    BYTE PTR [rsp+0x1a8],0x1
  4026fa:	jmp    0x40246d
  4026ff:	nop
  402700:	mov    eax,DWORD PTR [rip+0x4e98a]        # 0x451090
  402706:	test   eax,eax
  402708:	je     0x40271a
  40270a:	mov    r14d,r14d
  40270d:	xor    ecx,ecx
  40270f:	mov    r8,r14
  402712:	mov    rdx,r14
  402715:	call   0x401c70
  40271a:	mov    rax,QWORD PTR [rsp+0x1a0]
  402722:	lea    rcx,[rip+0x4e927]        # 0x451050
  402729:	xor    edx,edx
  40272b:	mov    QWORD PTR [rsp+0xb0],rax
  402733:	mov    rax,QWORD PTR [rsp+0x1a8]
  40273b:	mov    QWORD PTR [rsp+0xb8],rax
  402743:	mov    rax,QWORD PTR [rsp+0x1b0]
  40274b:	mov    QWORD PTR [rsp+0xc0],rax
  402753:	mov    rax,QWORD PTR [rsp+0x1b8]
  40275b:	mov    QWORD PTR [rsp+0xc8],rax
  402763:	mov    rax,QWORD PTR [rsp+0x1c0]
  40276b:	mov    QWORD PTR [rsp+0xd0],rax
  402773:	mov    rax,QWORD PTR [rsp+0x1c8]
  40277b:	mov    QWORD PTR [rsp+0xd8],rax
  402783:	mov    rax,QWORD PTR [rsp+0x1d0]
  40278b:	mov    QWORD PTR [rsp+0xe0],rax
  402793:	mov    rax,QWORD PTR [rsp+0x1d8]
  40279b:	mov    QWORD PTR [rsp+0xe8],rax
  4027a3:	mov    rax,QWORD PTR [rsp+0x1e0]
  4027ab:	mov    QWORD PTR [rsp+0xf0],rax
  4027b3:	call   0x40ba70
  4027b8:	mov    eax,DWORD PTR [rip+0x4e8d2]        # 0x451090
  4027be:	test   eax,eax
  4027c0:	je     0x402c93
  4027c6:	cmp    eax,0x1
  4027c9:	jne    0x4032f8
  4027cf:	mov    esi,DWORD PTR [rip+0x4e893]        # 0x451068
  4027d5:	mov    eax,DWORD PTR [rbp+0x18]
  4027d8:	mov    rdx,QWORD PTR [rip+0x4e869]        # 0x451048
  4027df:	mov    r15,QWORD PTR [rip+0x4e86a]        # 0x451050
  4027e6:	add    eax,esi
  4027e8:	cdqe   
  4027ea:	mov    rcx,r15
  4027ed:	mov    rbx,QWORD PTR [rdx+rax*8]
  4027f1:	mov    rdi,QWORD PTR [rbx]
  4027f4:	mov    rdx,rdi
  4027f7:	call   0x43a648
  4027fc:	test   eax,eax
  4027fe:	je     0x4034f0
  402804:	mov    rsi,QWORD PTR [rip+0x47365]        # 0x449b70
  40280b:	mov    rax,QWORD PTR [rip+0x4e84e]        # 0x451060
  402812:	movsxd rdx,DWORD PTR [rsi]
  402815:	cmp    rax,rdx
  402818:	ja     0x402a8f
  40281e:	mov    rdx,r15
  402821:	mov    rcx,rdi
  402824:	call   0x43a640
  402829:	movzx  eax,BYTE PTR [rsp+0x108]
  402831:	mov    rsi,QWORD PTR [rsp+0x100]
  402839:	mov    DWORD PTR [rbx+0x8],0x0
  402840:	mov    DWORD PTR [rbx+0xc],0x1
  402847:	mov    QWORD PTR [rsp+0xb0],rsi
  40284f:	test   al,al
  402851:	mov    BYTE PTR [rsp+0xb8],al
  402858:	je     0x402a53
  40285e:	mov    eax,DWORD PTR [rsp+0x10c]
  402865:	mov    DWORD PTR [rsp+0xbc],eax
  40286c:	movzx  eax,BYTE PTR [rsp+0x110]
  402874:	mov    rbx,QWORD PTR [rsp+0x118]
  40287c:	cmp    rbx,QWORD PTR [rsp+0x70]
  402881:	mov    BYTE PTR [rsp+0xc0],al
  402888:	je     0x402bf2
  40288e:	mov    rdi,QWORD PTR [rsp+0x120]
  402896:	mov    QWORD PTR [rsp+0xc8],rbx
  40289e:	movzx  eax,BYTE PTR [rsp+0x128]
  4028a6:	mov    QWORD PTR [rsp+0xd0],rdi
  4028ae:	test   al,al
  4028b0:	mov    BYTE PTR [rsp+0xd8],al
  4028b7:	je     0x4028c9
  4028b9:	movzx  eax,WORD PTR [rsp+0x12a]
  4028c1:	mov    WORD PTR [rsp+0xda],ax
  4028c9:	cmp    rsi,rbx
  4028cc:	jbe    0x40292f
  4028ce:	cmp    BYTE PTR [rsp+0x110],0x0
  4028d6:	jne    0x40292f
  4028d8:	cmp    BYTE PTR [rsp+0x108],0x0
  4028e0:	jne    0x402b2f
  4028e6:	movzx  eax,BYTE PTR [rbx]
  4028e9:	mov    rcx,QWORD PTR [rip+0x470d0]        # 0x4499c0
  4028f0:	mov    edx,eax
  4028f2:	and    eax,0x1f
  4028f5:	shr    dl,0x5
  4028f8:	and    edx,0x7
  4028fb:	mov    edx,DWORD PTR [rcx+rdx*4]
  4028fe:	bt     edx,eax
  402901:	jae    0x402ae9
  402907:	mov    QWORD PTR [rsp+0x120],0x1
  402913:	movsx  ax,BYTE PTR [rbx]
  402917:	mov    BYTE PTR [rsp+0x128],0x1
  40291f:	mov    WORD PTR [rsp+0x12a],ax
  402927:	mov    BYTE PTR [rsp+0x110],0x1
  40292f:	mov    eax,DWORD PTR [rsp+0x78]
  402933:	mov    edx,DWORD PTR [rip+0x4e72f]        # 0x451068
  402939:	xor    ecx,ecx
  40293b:	add    edx,DWORD PTR [rbp+0x18]
  40293e:	mov    DWORD PTR [rip+0x4e730],eax        # 0x451074
  402944:	movsxd rax,DWORD PTR [rsp+0x80]
  40294c:	mov    QWORD PTR [rip+0x4e725],rax        # 0x451078
  402953:	call   0x41c2f0
  402958:	mov    eax,DWORD PTR [rsp+0x88]
  40295f:	mov    DWORD PTR [rip+0x4e727],0x2        # 0x451090
  402969:	mov    DWORD PTR [rip+0x4e6fd],0x0        # 0x451070
  402973:	mov    QWORD PTR [rip+0x4e6e2],0x0        # 0x451060
  40297e:	mov    DWORD PTR [rsp+0xa4],0x0
  402989:	mov    DWORD PTR [rip+0x4e6dd],eax        # 0x45106c
  40298f:	mov    eax,DWORD PTR [rip+0x4e6d3]        # 0x451068
  402995:	cmp    DWORD PTR [rbp+0x14],eax
  402998:	je     0x4029ae
  40299a:	mov    edx,DWORD PTR [rbp+0x18]
  40299d:	mov    rdi,QWORD PTR [rip+0x471bc]        # 0x449b60
  4029a4:	add    edx,eax
  4029a6:	cmp    edx,DWORD PTR [rdi]
  4029a8:	jl     0x402091
  4029ae:	add    rsp,0x1f8
  4029b5:	pop    rbx
  4029b6:	pop    rsi
  4029b7:	pop    rdi
  4029b8:	pop    rbp
  4029b9:	pop    r12
  4029bb:	pop    r13
  4029bd:	pop    r14
  4029bf:	pop    r15
  4029c1:	ret    
  4029c2:	cmp    r10d,DWORD PTR [rax+0x18]
  4029c6:	jl     0x4029d2
  4029c8:	cmp    r10d,DWORD PTR [rax+0x1c]
  4029cc:	jl     0x40266f
  4029d2:	mov    r8d,DWORD PTR [rip+0x4e68f]        # 0x451068
  4029d9:	add    r8d,DWORD PTR [rbp+0x28]
  4029dd:	mov    rdi,QWORD PTR [rbp+0x60]
  4029e1:	movsxd r8,r8d
  4029e4:	mov    QWORD PTR [rsp+0x68],rdi
  4029e9:	mov    edi,DWORD PTR [rdi+r8*4+0x4]
  4029ee:	jmp    0x402646
  4029f3:	mov    QWORD PTR [rsp+0x1c0],0x1
  4029ff:	mov    BYTE PTR [rsp+0x1c8],0x0
  402a07:	mov    rdx,QWORD PTR [rsp+0x1b8]
  402a0f:	jmp    0x40221e
  402a14:	mov    DWORD PTR [rip+0x4e64e],0x1        # 0x45106c
  402a1e:	mov    DWORD PTR [rsp+0x64],0x0
  402a26:	jmp    0x402680
  402a2b:	mov    rdx,QWORD PTR [rsp+0x1b8]
  402a33:	mov    rax,QWORD PTR [rsp+0x1a0]
  402a3b:	mov    BYTE PTR [rsp+0x1c8],0x0
  402a43:	sub    rax,rdx
  402a46:	mov    QWORD PTR [rsp+0x1c0],rax
  402a4e:	jmp    0x40221e
  402a53:	mov    DWORD PTR [rsp+0xbc],0x0
  402a5e:	jmp    0x40286c
  402a63:	mov    ebx,esi
  402a65:	mov    QWORD PTR [rip+0x4e60c],rax        # 0x451078
  402a6c:	jmp    0x4022b6
  402a71:	lea    rdx,[rip+0x3e6e0]        # 0x441158
  402a78:	lea    rcx,[rip+0x3e72a]        # 0x4411a9
  402a7f:	mov    r8d,0x8e
  402a85:	call   0x435a10
  402a8a:	jmp    0x4026f2
  402a8f:	lea    rdx,[rax+0x1]
  402a93:	mov    rcx,rdi
  402a96:	call   0x422820
  402a9b:	mov    r15,QWORD PTR [rip+0x4e5ae]        # 0x451050
  402aa2:	mov    QWORD PTR [rbx],rax
  402aa5:	mov    rdi,rax
  402aa8:	jmp    0x40281e
  402aad:	lea    rdx,[rip+0x3e6a4]        # 0x441158
  402ab4:	lea    rcx,[rip+0x3e71c]        # 0x4411d7
  402abb:	mov    r8d,0xaa
  402ac1:	call   0x435a10
  402ac6:	jmp    0x4024dc
  402acb:	lea    rdx,[rip+0x3e686]        # 0x441158
  402ad2:	lea    rcx,[rip+0x3e6e7]        # 0x4411c0
  402ad9:	mov    r8d,0xa9
  402adf:	call   0x435a10
  402ae4:	jmp    0x4024cd
  402ae9:	mov    rax,QWORD PTR [rsp+0x98]
  402af1:	lea    rcx,[rax+0xc]
  402af5:	call   0x424040
  402afa:	test   eax,eax
  402afc:	jne    0x402b17
  402afe:	lea    rdx,[rip+0x3e653]        # 0x441158
  402b05:	lea    rcx,[rip+0x3e69d]        # 0x4411a9
  402b0c:	mov    r8d,0x8e
  402b12:	call   0x435a10
  402b17:	mov    rsi,QWORD PTR [rsp+0x100]
  402b1f:	mov    rbx,QWORD PTR [rsp+0x118]
  402b27:	mov    BYTE PTR [rsp+0x108],0x1
  402b2f:	mov    rax,QWORD PTR [rsp+0x98]
  402b37:	sub    rsi,rbx
  402b3a:	mov    rdx,rbx
  402b3d:	mov    r8,rsi
  402b40:	lea    rcx,[rax+0x2a]
  402b44:	lea    r9,[rax+0xc]
  402b48:	call   0x423f00
  402b4d:	cmp    rax,0xffffffffffffffff
  402b51:	mov    QWORD PTR [rsp+0x120],rax
  402b59:	je     0x402c33
  402b5f:	cmp    rax,0xfffffffffffffffe
  402b63:	je     0x402c6e
  402b69:	test   rax,rax
  402b6c:	jne    0x402bc4
  402b6e:	mov    rax,QWORD PTR [rsp+0x118]
  402b76:	mov    QWORD PTR [rsp+0x120],0x1
  402b82:	cmp    BYTE PTR [rax],0x0
  402b85:	je     0x402ba0
  402b87:	lea    rdx,[rip+0x3e5ca]        # 0x441158
  402b8e:	lea    rcx,[rip+0x3e62b]        # 0x4411c0
  402b95:	mov    r8d,0xa9
  402b9b:	call   0x435a10
  402ba0:	cmp    WORD PTR [rsp+0x12a],0x0
  402ba9:	je     0x402bc4
  402bab:	lea    rdx,[rip+0x3e5a6]        # 0x441158
  402bb2:	lea    rcx,[rip+0x3e61e]        # 0x4411d7
  402bb9:	mov    r8d,0xaa
  402bbf:	call   0x435a10
  402bc4:	mov    rax,QWORD PTR [rsp+0x98]
  402bcc:	mov    BYTE PTR [rsp+0x128],0x1
  402bd4:	lea    rcx,[rax+0xc]
  402bd8:	call   0x424040
  402bdd:	test   eax,eax
  402bdf:	je     0x402927
  402be5:	mov    BYTE PTR [rsp+0x108],0x0
  402bed:	jmp    0x402927
  402bf2:	mov    rax,QWORD PTR [rsp+0x90]
  402bfa:	mov    rdi,QWORD PTR [rsp+0x120]
  402c02:	mov    rdx,QWORD PTR [rsp+0x70]
  402c07:	lea    r9,[rax+0x2c]
  402c0b:	mov    r8,rdi
  402c0e:	mov    rcx,r9
  402c11:	call   0x43a6b8
  402c16:	mov    QWORD PTR [rsp+0xc8],rax
  402c1e:	jmp    0x40289e
  402c23:	mov    DWORD PTR [rsp+0x10c],0x0
  402c2e:	jmp    0x401fda
  402c33:	mov    QWORD PTR [rsp+0x120],0x1
  402c3f:	mov    BYTE PTR [rsp+0x128],0x0
  402c47:	jmp    0x402927
  402c4c:	lea    rsi,[rsp+0xb0]
  402c54:	mov    rbx,QWORD PTR [rsp+0xd0]
  402c5c:	xor    r8d,r8d
  402c5f:	xor    ecx,ecx
  402c61:	mov    QWORD PTR [rsp+0x90],rsi
  402c69:	jmp    0x401f75
  402c6e:	mov    rax,QWORD PTR [rsp+0x100]
  402c76:	sub    rax,QWORD PTR [rsp+0x118]
  402c7e:	mov    BYTE PTR [rsp+0x128],0x0
  402c86:	mov    QWORD PTR [rsp+0x120],rax
  402c8e:	jmp    0x402927
  402c93:	mov    eax,DWORD PTR [rip+0x4e3d7]        # 0x451070
  402c99:	mov    DWORD PTR [rsp+0x58],eax
  402c9d:	mov    eax,DWORD PTR [rip+0x4e3bd]        # 0x451060
  402ca3:	lea    esi,[rax-0x1]
  402ca6:	mov    rax,QWORD PTR [rip+0x4e3a3]        # 0x451050
  402cad:	mov    QWORD PTR [rsp+0x48],rax
  402cb2:	mov    eax,DWORD PTR [rip+0x4e3b0]        # 0x451068
  402cb8:	add    eax,DWORD PTR [rbp+0x18]
  402cbb:	movsxd rdx,eax
  402cbe:	mov    DWORD PTR [rsp+0x64],eax
  402cc2:	mov    rax,QWORD PTR [rip+0x4e37f]        # 0x451048
  402cc9:	mov    rbx,QWORD PTR [rax+rdx*8]
  402ccd:	test   rbx,rbx
  402cd0:	je     0x4030bf
  402cd6:	mov    ecx,DWORD PTR [rbx+0xc]
  402cd9:	test   ecx,ecx
  402cdb:	jne    0x403551
  402ce1:	mov    rdi,QWORD PTR [rbx]
  402ce4:	mov    rcx,rdi
  402ce7:	call   0x43a620
  402cec:	mov    rcx,QWORD PTR [rsp+0x48]
  402cf1:	movsxd rdx,esi
  402cf4:	lea    r8,[rdi+rax*1]
  402cf8:	mov    BYTE PTR [rsp+0x158],0x0
  402d00:	mov    DWORD PTR [rsp+0x15c],0x0
  402d0b:	mov    BYTE PTR [rsp+0x160],0x0
  402d13:	mov    QWORD PTR [rsp+0x1b8],rdi
  402d1b:	add    rdx,rcx
  402d1e:	mov    QWORD PTR [rsp+0x168],rcx
  402d26:	mov    QWORD PTR [rsp+0x1a0],r8
  402d2e:	cmp    rcx,rdx
  402d31:	mov    QWORD PTR [rsp+0x150],rdx
  402d39:	mov    BYTE PTR [rsp+0x1a8],0x0
  402d41:	mov    DWORD PTR [rsp+0x1ac],0x0
  402d4c:	mov    BYTE PTR [rsp+0x1b0],0x0
  402d54:	jae    0x403a5d
  402d5a:	lea    rax,[rsp+0x150]
  402d62:	mov    edi,0xffffffff
  402d67:	mov    r10,QWORD PTR [rsp+0x48]
  402d6c:	xor    esi,esi
  402d6e:	mov    DWORD PTR [rsp+0x38],0x0
  402d76:	mov    r15d,edi
  402d79:	mov    QWORD PTR [rsp+0x68],rax
  402d7e:	lea    rax,[rsp+0x15c]
  402d86:	mov    QWORD PTR [rsp+0x40],rbx
  402d8b:	mov    QWORD PTR [rsp+0x78],rax
  402d90:	mov    rax,QWORD PTR [rip+0x46c29]        # 0x4499c0
  402d97:	mov    QWORD PTR [rsp+0x80],rax
  402d9f:	jmp    0x402e5d
  402da4:	cmp    BYTE PTR [rsp+0x178],0x0
  402dac:	movzx  ebx,BYTE PTR [rsp+0x1c8]
  402db4:	je     0x402f4b
  402dba:	test   bl,bl
  402dbc:	je     0x402f65
  402dc2:	movzx  eax,WORD PTR [rsp+0x1ca]
  402dca:	mov    rbx,QWORD PTR [rsp+0x168]
  402dd2:	cmp    WORD PTR [rsp+0x17a],ax
  402dda:	setne  al
  402ddd:	test   al,al
  402ddf:	jne    0x403526
  402de5:	cmp    r15d,0xffffffff
  402de9:	je     0x403217
  402def:	movzx  ecx,WORD PTR [rsp+0x17a]
  402df7:	mov    r8,QWORD PTR [rsp+0x170]
  402dff:	add    DWORD PTR [rsp+0x38],r8d
  402e04:	mov    QWORD PTR [rsp+0x88],r8
  402e0c:	call   0x41e160
  402e11:	mov    r8,QWORD PTR [rsp+0x88]
  402e19:	add    esi,eax
  402e1b:	mov    rdx,QWORD PTR [rsp+0x1c0]
  402e23:	add    rdx,QWORD PTR [rsp+0x1b8]
  402e2b:	mov    BYTE PTR [rsp+0x160],0x0
  402e33:	mov    BYTE PTR [rsp+0x1b0],0x0
  402e3b:	lea    r10,[rbx+r8*1]
  402e3f:	cmp    r10,QWORD PTR [rsp+0x150]
  402e47:	mov    QWORD PTR [rsp+0x168],r10
  402e4f:	mov    QWORD PTR [rsp+0x1b8],rdx
  402e57:	jae    0x4037bc
  402e5d:	cmp    BYTE PTR [rsp+0x158],0x0
  402e65:	jne    0x40317a
  402e6b:	movzx  eax,BYTE PTR [r10]
  402e6f:	mov    rbx,QWORD PTR [rip+0x46b4a]        # 0x4499c0
  402e76:	mov    edx,eax
  402e78:	and    eax,0x1f
  402e7b:	shr    dl,0x5
  402e7e:	and    edx,0x7
  402e81:	mov    edx,DWORD PTR [rbx+rdx*4]
  402e84:	bt     edx,eax
  402e87:	jae    0x40314b
  402e8d:	mov    QWORD PTR [rsp+0x170],0x1
  402e99:	movsx  ax,BYTE PTR [r10]
  402e9e:	mov    BYTE PTR [rsp+0x178],0x1
  402ea6:	mov    WORD PTR [rsp+0x17a],ax
  402eae:	mov    rdx,QWORD PTR [rsp+0x1b8]
  402eb6:	mov    r8,QWORD PTR [rsp+0x1a0]
  402ebe:	mov    BYTE PTR [rsp+0x160],0x1
  402ec6:	cmp    rdx,r8
  402ec9:	jae    0x403690
  402ecf:	movzx  ebx,BYTE PTR [rsp+0x1b0]
  402ed7:	test   bl,bl
  402ed9:	jne    0x402da4
  402edf:	cmp    BYTE PTR [rsp+0x1a8],0x0
  402ee7:	jne    0x403267
  402eed:	movzx  eax,BYTE PTR [rdx]
  402ef0:	mov    r10,QWORD PTR [rsp+0x80]
  402ef8:	mov    ecx,eax
  402efa:	and    eax,0x1f
  402efd:	shr    cl,0x5
  402f00:	and    ecx,0x7
  402f03:	mov    ecx,DWORD PTR [r10+rcx*4]
  402f07:	bt     ecx,eax
  402f0a:	jae    0x403228
  402f10:	mov    QWORD PTR [rsp+0x1c0],0x1
  402f1c:	movsx  ax,BYTE PTR [rdx]
  402f20:	mov    ebx,0x1
  402f25:	mov    BYTE PTR [rsp+0x1c8],0x1
  402f2d:	mov    WORD PTR [rsp+0x1ca],ax
  402f35:	cmp    BYTE PTR [rsp+0x178],0x0
  402f3d:	mov    BYTE PTR [rsp+0x1b0],0x1
  402f45:	jne    0x402dba
  402f4b:	test   bl,bl
  402f4d:	jne    0x402f65
  402f4f:	mov    r8,QWORD PTR [rsp+0x170]
  402f57:	cmp    r8,QWORD PTR [rsp+0x1c0]
  402f5f:	je     0x403501
  402f65:	mov    r10,QWORD PTR [rsp+0x168]
  402f6d:	cmp    QWORD PTR [rsp+0x150],r10
  402f75:	mov    rbx,QWORD PTR [rsp+0x40]
  402f7a:	jbe    0x40353c
  402f80:	cmp    BYTE PTR [rsp+0x160],0x0
  402f88:	jne    0x4036ab
  402f8e:	cmp    BYTE PTR [rsp+0x158],0x0
  402f96:	jne    0x403a37
  402f9c:	movzx  eax,BYTE PTR [r10]
  402fa0:	mov    rcx,QWORD PTR [rip+0x46a19]        # 0x4499c0
  402fa7:	mov    edx,eax
  402fa9:	and    eax,0x1f
  402fac:	shr    dl,0x5
  402faf:	and    edx,0x7
  402fb2:	mov    edx,DWORD PTR [rcx+rdx*4]
  402fb5:	bt     edx,eax
  402fb8:	jb     0x4036ab
  402fbe:	lea    rax,[rsp+0x150]
  402fc6:	lea    rcx,[rsp+0x15c]
  402fce:	mov    QWORD PTR [rsp+0x40],rax
  402fd3:	call   0x424040
  402fd8:	test   eax,eax
  402fda:	jne    0x402ff5
  402fdc:	lea    rdx,[rip+0x3e175]        # 0x441158
  402fe3:	lea    rcx,[rip+0x3e1bf]        # 0x4411a9
  402fea:	mov    r8d,0x8e
  402ff0:	call   0x435a10
  402ff5:	mov    r10,QWORD PTR [rsp+0x168]
  402ffd:	mov    BYTE PTR [rsp+0x158],0x1
  403005:	mov    rax,QWORD PTR [rsp+0x40]
  40300a:	mov    r8,QWORD PTR [rsp+0x150]
  403012:	mov    rdx,r10
  403015:	lea    rcx,[rax+0x2a]
  403019:	lea    r9,[rax+0xc]
  40301d:	sub    r8,r10
  403020:	call   0x423f00
  403025:	lea    rdx,[rax+0x2]
  403029:	mov    QWORD PTR [rsp+0x170],rax
  403031:	cmp    rdx,0x1
  403035:	jbe    0x4036ab
  40303b:	test   rax,rax
  40303e:	jne    0x403096
  403040:	mov    rax,QWORD PTR [rsp+0x168]
  403048:	mov    QWORD PTR [rsp+0x170],0x1
  403054:	cmp    BYTE PTR [rax],0x0
  403057:	je     0x403072
  403059:	lea    rdx,[rip+0x3e0f8]        # 0x441158
  403060:	lea    rcx,[rip+0x3e159]        # 0x4411c0
  403067:	mov    r8d,0xa9
  40306d:	call   0x435a10
  403072:	cmp    WORD PTR [rsp+0x17a],0x0
  40307b:	je     0x403096
  40307d:	lea    rdx,[rip+0x3e0d4]        # 0x441158
  403084:	lea    rcx,[rip+0x3e14c]        # 0x4411d7
  40308b:	mov    r8d,0xaa
  403091:	call   0x435a10
  403096:	mov    rcx,QWORD PTR [rsp+0x40]
  40309b:	mov    BYTE PTR [rsp+0x178],0x1
  4030a3:	add    rcx,0xc
  4030a7:	call   0x424040
  4030ac:	cmp    r15d,0xffffffff
  4030b0:	jne    0x4036b5
  4030b6:	cmp    esi,0xffffffff
  4030b9:	jne    0x4036bc
  4030bf:	call   0x4140a0
  4030c4:	test   eax,eax
  4030c6:	je     0x403307
  4030cc:	mov    eax,DWORD PTR [rsp+0xa4]
  4030d3:	mov    DWORD PTR [rip+0x4df63],0x1        # 0x451040
  4030dd:	mov    ebx,0x1
  4030e2:	mov    esi,DWORD PTR [rip+0x4df80]        # 0x451068
  4030e8:	test   eax,eax
  4030ea:	jne    0x40331e
  4030f0:	mov    rax,QWORD PTR [rip+0x46af9]        # 0x449bf0
  4030f7:	mov    edx,DWORD PTR [rbp+0x18]
  4030fa:	mov    rax,QWORD PTR [rax]
  4030fd:	add    edx,esi
  4030ff:	mov    eax,DWORD PTR [rax+0x14]
  403102:	sub    eax,0x1
  403105:	cmp    eax,edx
  403107:	jle    0x403336
  40310d:	mov    eax,DWORD PTR [rbp+0x10]
  403110:	lea    ecx,[rax-0x1]
  403113:	call   0x41c2f0
  403118:	test   BYTE PTR [rbp+0x80],0x10
  40311f:	jne    0x403b59
  403125:	lea    rcx,[rip+0x3e0c0]        # 0x4411ec
  40312c:	call   0x41c450
  403131:	call   QWORD PTR [rip+0x517b9]        # 0x4548f0
  403137:	lea    rcx,[rax+0x30]
  40313b:	call   0x43a780
  403140:	mov    esi,DWORD PTR [rip+0x4df22]        # 0x451068
  403146:	jmp    0x403336
  40314b:	mov    rcx,QWORD PTR [rsp+0x78]
  403150:	call   0x424040
  403155:	test   eax,eax
  403157:	jne    0x403172
  403159:	lea    rdx,[rip+0x3dff8]        # 0x441158
  403160:	lea    rcx,[rip+0x3e042]        # 0x4411a9
  403167:	mov    r8d,0x8e
  40316d:	call   0x435a10
  403172:	mov    BYTE PTR [rsp+0x158],0x1
  40317a:	mov    rax,QWORD PTR [rsp+0x68]
  40317f:	mov    rdx,QWORD PTR [rsp+0x168]
  403187:	mov    r8,QWORD PTR [rsp+0x150]
  40318f:	lea    rcx,[rax+0x2a]
  403193:	lea    r9,[rax+0xc]
  403197:	sub    r8,rdx
  40319a:	call   0x423f00
  40319f:	cmp    rax,0xffffffffffffffff
  4031a3:	mov    QWORD PTR [rsp+0x170],rax
  4031ab:	je     0x403915
  4031b1:	cmp    rax,0xfffffffffffffffe
  4031b5:	je     0x4038f0
  4031bb:	test   rax,rax
  4031be:	jne    0x4031ec
  4031c0:	mov    rax,QWORD PTR [rsp+0x168]
  4031c8:	mov    QWORD PTR [rsp+0x170],0x1
  4031d4:	cmp    BYTE PTR [rax],0x0
  4031d7:	jne    0x403a77
  4031dd:	cmp    WORD PTR [rsp+0x17a],0x0
  4031e6:	jne    0x403a9f
  4031ec:	mov    rax,QWORD PTR [rsp+0x68]
  4031f1:	mov    BYTE PTR [rsp+0x178],0x1
  4031f9:	lea    rcx,[rax+0xc]
  4031fd:	call   0x424040
  403202:	test   eax,eax
  403204:	je     0x402eae
  40320a:	mov    BYTE PTR [rsp+0x158],0x0
  403212:	jmp    0x402eae
  403217:	cmp    BYTE PTR [rbx],0x1b
  40321a:	cmove  edi,DWORD PTR [rsp+0x38]
  40321f:	cmove  r15d,esi
  403223:	jmp    0x402def
  403228:	mov    rcx,QWORD PTR [rsp+0x50]
  40322d:	call   0x424040
  403232:	test   eax,eax
  403234:	jne    0x40324f
  403236:	lea    rdx,[rip+0x3df1b]        # 0x441158
  40323d:	lea    rcx,[rip+0x3df65]        # 0x4411a9
  403244:	mov    r8d,0x8e
  40324a:	call   0x435a10
  40324f:	mov    r8,QWORD PTR [rsp+0x1a0]
  403257:	mov    rdx,QWORD PTR [rsp+0x1b8]
  40325f:	mov    BYTE PTR [rsp+0x1a8],0x1
  403267:	mov    rax,QWORD PTR [rsp+0x30]
  40326c:	sub    r8,rdx
  40326f:	lea    rcx,[rax+0x2a]
  403273:	lea    r9,[rax+0xc]
  403277:	call   0x423f00
  40327c:	cmp    rax,0xffffffffffffffff
  403280:	mov    QWORD PTR [rsp+0x1c0],rax
  403288:	je     0x403793
  40328e:	cmp    rax,0xfffffffffffffffe
  403292:	je     0x40376e
  403298:	test   rax,rax
  40329b:	jne    0x4032c9
  40329d:	mov    rax,QWORD PTR [rsp+0x1b8]
  4032a5:	mov    QWORD PTR [rsp+0x1c0],0x1
  4032b1:	cmp    BYTE PTR [rax],0x0
  4032b4:	jne    0x403b2c
  4032ba:	cmp    WORD PTR [rsp+0x1ca],0x0
  4032c3:	jne    0x403abd
  4032c9:	mov    rax,QWORD PTR [rsp+0x30]
  4032ce:	mov    BYTE PTR [rsp+0x1c8],0x1
  4032d6:	lea    rcx,[rax+0xc]
  4032da:	call   0x424040
  4032df:	test   eax,eax
  4032e1:	je     0x4032eb
  4032e3:	mov    BYTE PTR [rsp+0x1a8],0x0
  4032eb:	movzx  ebx,BYTE PTR [rsp+0x1c8]
  4032f3:	jmp    0x402f35
  4032f8:	call   0x41c4d0
  4032fd:	mov    DWORD PTR [rip+0x4dd89],0x0        # 0x451090
  403307:	mov    esi,DWORD PTR [rip+0x4dd5b]        # 0x451068
  40330d:	xor    ebx,ebx
  40330f:	mov    eax,DWORD PTR [rsp+0xa4]
  403316:	test   eax,eax
  403318:	je     0x4030f0
  40331e:	mov    rax,QWORD PTR [rsp+0xd0]
  403326:	add    QWORD PTR [rsp+0xc8],rax
  40332e:	mov    BYTE PTR [rsp+0xc0],0x0
  403336:	lea    eax,[rsi+0x1]
  403339:	test   ebx,ebx
  40333b:	mov    DWORD PTR [rip+0x4dd27],eax        # 0x451068
  403341:	jne    0x4029ae
  403347:	mov    rdx,QWORD PTR [rsp+0xc8]
  40334f:	mov    r8,QWORD PTR [rsp+0xb0]
  403357:	cmp    rdx,r8
  40335a:	jae    0x4029ae
  403360:	cmp    BYTE PTR [rsp+0xc0],0x0
  403368:	je     0x403388
  40336a:	movzx  ecx,BYTE PTR [rsp+0xb8]
  403372:	mov    rbx,QWORD PTR [rsp+0xd0]
  40337a:	mov    rax,r8
  40337d:	mov    r8d,0x1
  403383:	jmp    0x401fb5
  403388:	cmp    BYTE PTR [rsp+0xb8],0x0
  403390:	jne    0x403419
  403396:	movzx  eax,BYTE PTR [rdx]
  403399:	mov    r9,QWORD PTR [rip+0x46620]        # 0x4499c0
  4033a0:	mov    ecx,eax
  4033a2:	and    eax,0x1f
  4033a5:	shr    cl,0x5
  4033a8:	and    ecx,0x7
  4033ab:	mov    ecx,DWORD PTR [r9+rcx*4]
  4033af:	bt     ecx,eax
  4033b2:	jae    0x4033e8
  4033b4:	mov    QWORD PTR [rsp+0xd0],0x1
  4033c0:	movsx  ax,BYTE PTR [rdx]
  4033c4:	mov    ebx,0x1
  4033c9:	mov    BYTE PTR [rsp+0xd8],0x1
  4033d1:	xor    ecx,ecx
  4033d3:	mov    WORD PTR [rsp+0xda],ax
  4033db:	mov    rax,r8
  4033de:	mov    BYTE PTR [rsp+0xc0],0x1
  4033e6:	jmp    0x40337d
  4033e8:	mov    rax,QWORD PTR [rsp+0x90]
  4033f0:	lea    rcx,[rax+0xc]
  4033f4:	call   0x424040
  4033f9:	test   eax,eax
  4033fb:	je     0x403adb
  403401:	mov    r8,QWORD PTR [rsp+0xb0]
  403409:	mov    rdx,QWORD PTR [rsp+0xc8]
  403411:	mov    BYTE PTR [rsp+0xb8],0x1
  403419:	mov    rax,QWORD PTR [rsp+0x90]
  403421:	sub    r8,rdx
  403424:	lea    rcx,[rax+0x2a]
  403428:	lea    r9,[rax+0xc]
  40342c:	call   0x423f00
  403431:	cmp    rax,0xffffffffffffffff
  403435:	mov    QWORD PTR [rsp+0xd0],rax
  40343d:	je     0x403953
  403443:	cmp    rax,0xfffffffffffffffe
  403447:	je     0x403af9
  40344d:	test   rax,rax
  403450:	jne    0x4034a8
  403452:	mov    rax,QWORD PTR [rsp+0xc8]
  40345a:	mov    QWORD PTR [rsp+0xd0],0x1
  403466:	cmp    BYTE PTR [rax],0x0
  403469:	je     0x403484
  40346b:	lea    rdx,[rip+0x3dce6]        # 0x441158
  403472:	lea    rcx,[rip+0x3dd47]        # 0x4411c0
  403479:	mov    r8d,0xa9
  40347f:	call   0x435a10
  403484:	cmp    WORD PTR [rsp+0xda],0x0
  40348d:	je     0x4034a8
  40348f:	lea    rdx,[rip+0x3dcc2]        # 0x441158
  403496:	lea    rcx,[rip+0x3dd3a]        # 0x4411d7
  40349d:	mov    r8d,0xaa
  4034a3:	call   0x435a10
  4034a8:	mov    rax,QWORD PTR [rsp+0x90]
  4034b0:	mov    BYTE PTR [rsp+0xd8],0x1
  4034b8:	lea    rcx,[rax+0xc]
  4034bc:	call   0x424040
  4034c1:	test   eax,eax
  4034c3:	je     0x40392e
  4034c9:	mov    BYTE PTR [rsp+0xb8],0x0
  4034d1:	mov    rax,QWORD PTR [rsp+0xb0]
  4034d9:	xor    ecx,ecx
  4034db:	mov    rdx,QWORD PTR [rsp+0xc8]
  4034e3:	mov    rbx,QWORD PTR [rsp+0xd0]
  4034eb:	jmp    0x4033de
  4034f0:	mov    DWORD PTR [rip+0x4db96],0x0        # 0x451090
  4034fa:	xor    ebx,ebx
  4034fc:	jmp    0x40330f
  403501:	mov    rbx,QWORD PTR [rsp+0x168]
  403509:	mov    rdx,QWORD PTR [rsp+0x1b8]
  403511:	mov    rcx,rbx
  403514:	call   0x43a6c0
  403519:	test   eax,eax
  40351b:	setne  al
  40351e:	test   al,al
  403520:	je     0x402de5
  403526:	mov    r10,rbx
  403529:	cmp    QWORD PTR [rsp+0x150],r10
  403531:	mov    rbx,QWORD PTR [rsp+0x40]
  403536:	ja     0x402f80
  40353c:	mov    rdx,QWORD PTR [rsp+0x1b8]
  403544:	mov    r8,QWORD PTR [rsp+0x1a0]
  40354c:	jmp    0x4037c9
  403551:	mov    edx,DWORD PTR [rsp+0x64]
  403555:	xor    ecx,ecx
  403557:	call   0x41c2f0
  40355c:	call   0x41c4d0
  403561:	mov    rax,QWORD PTR [rbx]
  403564:	mov    DWORD PTR [rbx+0xc],0x0
  40356b:	mov    BYTE PTR [rax],0x0
  40356e:	mov    DWORD PTR [rbx+0x8],0x0
  403575:	jmp    0x402ce1
  40357a:	lea    rax,[rsp+0xb0]
  403582:	lea    rcx,[rsp+0xbc]
  40358a:	mov    QWORD PTR [rsp+0x90],rax
  403592:	call   0x424040
  403597:	test   eax,eax
  403599:	je     0x403a19
  40359f:	mov    rax,QWORD PTR [rsp+0x90]
  4035a7:	mov    rdx,QWORD PTR [rsp+0xc8]
  4035af:	mov    r8,QWORD PTR [rsp+0xb0]
  4035b7:	mov    BYTE PTR [rsp+0xb8],0x1
  4035bf:	lea    rcx,[rax+0x2a]
  4035c3:	lea    r9,[rax+0xc]
  4035c7:	sub    r8,rdx
  4035ca:	call   0x423f00
  4035cf:	cmp    rax,0xffffffffffffffff
  4035d3:	mov    QWORD PTR [rsp+0xd0],rax
  4035db:	je     0x4039e3
  4035e1:	cmp    rax,0xfffffffffffffffe
  4035e5:	je     0x403989
  4035eb:	test   rax,rax
  4035ee:	jne    0x403646
  4035f0:	mov    rax,QWORD PTR [rsp+0xc8]
  4035f8:	mov    QWORD PTR [rsp+0xd0],0x1
  403604:	cmp    BYTE PTR [rax],0x0
  403607:	je     0x403622
  403609:	lea    rdx,[rip+0x3db48]        # 0x441158
  403610:	lea    rcx,[rip+0x3dba9]        # 0x4411c0
  403617:	mov    r8d,0xa9
  40361d:	call   0x435a10
  403622:	cmp    WORD PTR [rsp+0xda],0x0
  40362b:	je     0x403646
  40362d:	lea    rdx,[rip+0x3db24]        # 0x441158
  403634:	lea    rcx,[rip+0x3db9c]        # 0x4411d7
  40363b:	mov    r8d,0xaa
  403641:	call   0x435a10
  403646:	mov    rax,QWORD PTR [rsp+0x90]
  40364e:	mov    BYTE PTR [rsp+0xd8],0x1
  403656:	lea    rcx,[rax+0xc]
  40365a:	call   0x424040
  40365f:	test   eax,eax
  403661:	jne    0x4039bc
  403667:	mov    rax,QWORD PTR [rsp+0xb0]
  40366f:	movzx  ecx,BYTE PTR [rsp+0xb8]
  403677:	mov    rdx,QWORD PTR [rsp+0xc8]
  40367f:	mov    rbx,QWORD PTR [rsp+0xd0]
  403687:	jmp    0x401f67
  40368c:	nop    DWORD PTR [rax+0x0]
  403690:	mov    rax,QWORD PTR [rsp+0x150]
  403698:	cmp    QWORD PTR [rsp+0x168],rax
  4036a0:	mov    rbx,QWORD PTR [rsp+0x40]
  4036a5:	jae    0x4030bf
  4036ab:	cmp    r15d,0xffffffff
  4036af:	je     0x4030b6
  4036b5:	mov    DWORD PTR [rsp+0x38],edi
  4036b9:	mov    esi,r15d
  4036bc:	mov    edx,DWORD PTR [rsp+0x64]
  4036c0:	mov    ecx,esi
  4036c2:	call   0x41c2f0
  4036c7:	movsxd r15,DWORD PTR [rsp+0x38]
  4036cc:	mov    rax,QWORD PTR [rsp+0x48]
  4036d1:	lea    rsi,[rax+r15*1]
  4036d5:	mov    rcx,rsi
  4036d8:	call   0x41c450
  4036dd:	mov    rdi,QWORD PTR [rip+0x4648c]        # 0x449b70
  4036e4:	mov    eax,DWORD PTR [rsp+0x58]
  4036e8:	cmp    eax,DWORD PTR [rdi]
  4036ea:	jge    0x4037ac
  4036f0:	cmp    eax,DWORD PTR [rbx+0x8]
  4036f3:	jge    0x4037ac
  4036f9:	call   0x41c4d0
  4036fe:	call   QWORD PTR [rip+0x511ec]        # 0x4548f0
  403704:	lea    rcx,[rax+0x30]
  403708:	call   0x43a780
  40370d:	mov    rcx,QWORD PTR [rsp+0x48]
  403712:	call   0x43a620
  403717:	mov    edx,DWORD PTR [rdi]
  403719:	cmp    rax,rdx
  40371c:	ja     0x403a49
  403722:	mov    rax,QWORD PTR [rbx]
  403725:	lea    rcx,[rax+r15*1]
  403729:	mov    rdx,rsi
  40372c:	call   0x43a640
  403731:	mov    eax,DWORD PTR [rsp+0x58]
  403735:	mov    DWORD PTR [rbx+0xc],0x0
  40373c:	mov    DWORD PTR [rbx+0x8],eax
  40373f:	call   0x4140a0
  403744:	test   eax,eax
  403746:	jne    0x4030cc
  40374c:	jmp    0x403307
  403751:	mov    rsi,QWORD PTR [rsp+0x70]
  403756:	mov    r8,rbx
  403759:	mov    rcx,rsi
  40375c:	call   0x43a6b8
  403761:	mov    QWORD PTR [rsp+0x118],rsi
  403769:	jmp    0x401fff
  40376e:	mov    rax,QWORD PTR [rsp+0x1a0]
  403776:	sub    rax,QWORD PTR [rsp+0x1b8]
  40377e:	mov    BYTE PTR [rsp+0x1c8],0x0
  403786:	mov    QWORD PTR [rsp+0x1c0],rax
  40378e:	jmp    0x402f35
  403793:	mov    QWORD PTR [rsp+0x1c0],0x1
  40379f:	mov    BYTE PTR [rsp+0x1c8],0x0
  4037a7:	jmp    0x402f35
  4037ac:	mov    edx,DWORD PTR [rbx+0xc]
  4037af:	test   edx,edx
  4037b1:	je     0x4036fe
  4037b7:	jmp    0x4036f9
  4037bc:	mov    rbx,QWORD PTR [rsp+0x40]
  4037c1:	mov    r8,QWORD PTR [rsp+0x1a0]
  4037c9:	cmp    rdx,r8
  4037cc:	jae    0x4030bf
  4037d2:	cmp    BYTE PTR [rsp+0x1b0],0x0
  4037da:	jne    0x4036ab
  4037e0:	cmp    BYTE PTR [rsp+0x1a8],0x0
  4037e8:	jne    0x40384a
  4037ea:	movzx  eax,BYTE PTR [rdx]
  4037ed:	mov    rcx,QWORD PTR [rip+0x461cc]        # 0x4499c0
  4037f4:	mov    edx,eax
  4037f6:	and    eax,0x1f
  4037f9:	shr    dl,0x5
  4037fc:	and    edx,0x7
  4037ff:	mov    edx,DWORD PTR [rcx+rdx*4]
  403802:	bt     edx,eax
  403805:	jb     0x4036ab
  40380b:	mov    rcx,QWORD PTR [rsp+0x50]
  403810:	call   0x424040
  403815:	test   eax,eax
  403817:	jne    0x403832
  403819:	lea    rdx,[rip+0x3d938]        # 0x441158
  403820:	lea    rcx,[rip+0x3d982]        # 0x4411a9
  403827:	mov    r8d,0x8e
  40382d:	call   0x435a10
  403832:	mov    r8,QWORD PTR [rsp+0x1a0]
  40383a:	mov    rdx,QWORD PTR [rsp+0x1b8]
  403842:	mov    BYTE PTR [rsp+0x1a8],0x1
  40384a:	mov    rax,QWORD PTR [rsp+0x30]
  40384f:	sub    r8,rdx
  403852:	lea    rcx,[rax+0x2a]
  403856:	lea    r9,[rax+0xc]
  40385a:	call   0x423f00
  40385f:	lea    rdx,[rax+0x2]
  403863:	mov    QWORD PTR [rsp+0x1c0],rax
  40386b:	cmp    rdx,0x1
  40386f:	jbe    0x4036ab
  403875:	test   rax,rax
  403878:	jne    0x4038d0
  40387a:	mov    rax,QWORD PTR [rsp+0x1b8]
  403882:	mov    QWORD PTR [rsp+0x1c0],0x1
  40388e:	cmp    BYTE PTR [rax],0x0
  403891:	je     0x4038ac
  403893:	lea    rdx,[rip+0x3d8be]        # 0x441158
  40389a:	lea    rcx,[rip+0x3d91f]        # 0x4411c0
  4038a1:	mov    r8d,0xa9
  4038a7:	call   0x435a10
  4038ac:	cmp    WORD PTR [rsp+0x1ca],0x0
  4038b5:	je     0x4038d0
  4038b7:	lea    rdx,[rip+0x3d89a]        # 0x441158
  4038be:	lea    rcx,[rip+0x3d912]        # 0x4411d7
  4038c5:	mov    r8d,0xaa
  4038cb:	call   0x435a10
  4038d0:	mov    rax,QWORD PTR [rsp+0x30]
  4038d5:	mov    BYTE PTR [rsp+0x1c8],0x1
  4038dd:	lea    rcx,[rax+0xc]
  4038e1:	call   0x424040
  4038e6:	jmp    0x4036ab
  4038eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4038f0:	mov    rax,QWORD PTR [rsp+0x150]
  4038f8:	sub    rax,QWORD PTR [rsp+0x168]
  403900:	mov    BYTE PTR [rsp+0x178],0x0
  403908:	mov    QWORD PTR [rsp+0x170],rax
  403910:	jmp    0x402eae
  403915:	mov    QWORD PTR [rsp+0x170],0x1
  403921:	mov    BYTE PTR [rsp+0x178],0x0
  403929:	jmp    0x402eae
  40392e:	mov    rax,QWORD PTR [rsp+0xb0]
  403936:	movzx  ecx,BYTE PTR [rsp+0xb8]
  40393e:	mov    rdx,QWORD PTR [rsp+0xc8]
  403946:	mov    rbx,QWORD PTR [rsp+0xd0]
  40394e:	jmp    0x4033de
  403953:	mov    QWORD PTR [rsp+0xd0],0x1
  40395f:	mov    BYTE PTR [rsp+0xd8],0x0
  403967:	mov    ebx,0x1
  40396c:	mov    rax,QWORD PTR [rsp+0xb0]
  403974:	movzx  ecx,BYTE PTR [rsp+0xb8]
  40397c:	mov    rdx,QWORD PTR [rsp+0xc8]
  403984:	jmp    0x4033de
  403989:	mov    rax,QWORD PTR [rsp+0xb0]
  403991:	mov    rdx,QWORD PTR [rsp+0xc8]
  403999:	mov    BYTE PTR [rsp+0xd8],0x0
  4039a1:	movzx  ecx,BYTE PTR [rsp+0xb8]
  4039a9:	mov    rbx,rax
  4039ac:	sub    rbx,rdx
  4039af:	mov    QWORD PTR [rsp+0xd0],rbx
  4039b7:	jmp    0x401f67
  4039bc:	mov    BYTE PTR [rsp+0xb8],0x0
  4039c4:	mov    rax,QWORD PTR [rsp+0xb0]
  4039cc:	xor    ecx,ecx
  4039ce:	mov    rdx,QWORD PTR [rsp+0xc8]
  4039d6:	mov    rbx,QWORD PTR [rsp+0xd0]
  4039de:	jmp    0x401f67
  4039e3:	mov    QWORD PTR [rsp+0xd0],0x1
  4039ef:	mov    BYTE PTR [rsp+0xd8],0x0
  4039f7:	mov    ebx,0x1
  4039fc:	mov    rax,QWORD PTR [rsp+0xb0]
  403a04:	movzx  ecx,BYTE PTR [rsp+0xb8]
  403a0c:	mov    rdx,QWORD PTR [rsp+0xc8]
  403a14:	jmp    0x401f67
  403a19:	lea    rdx,[rip+0x3d738]        # 0x441158
  403a20:	lea    rcx,[rip+0x3d782]        # 0x4411a9
  403a27:	mov    r8d,0x8e
  403a2d:	call   0x435a10
  403a32:	jmp    0x40359f
  403a37:	lea    rax,[rsp+0x150]
  403a3f:	mov    QWORD PTR [rsp+0x40],rax
  403a44:	jmp    0x403005
  403a49:	mov    rcx,QWORD PTR [rbx]
  403a4c:	lea    rdx,[rax+0x1]
  403a50:	call   0x422820
  403a55:	mov    QWORD PTR [rbx],rax
  403a58:	jmp    0x403725
  403a5d:	mov    rdx,rdi
  403a60:	mov    edi,0xffffffff
  403a65:	xor    esi,esi
  403a67:	mov    DWORD PTR [rsp+0x38],0x0
  403a6f:	mov    r15d,edi
  403a72:	jmp    0x4037c9
  403a77:	lea    rdx,[rip+0x3d6da]        # 0x441158
  403a7e:	lea    rcx,[rip+0x3d73b]        # 0x4411c0
  403a85:	mov    r8d,0xa9
  403a8b:	call   0x435a10
  403a90:	cmp    WORD PTR [rsp+0x17a],0x0
  403a99:	je     0x4031ec
  403a9f:	lea    rdx,[rip+0x3d6b2]        # 0x441158
  403aa6:	lea    rcx,[rip+0x3d72a]        # 0x4411d7
  403aad:	mov    r8d,0xaa
  403ab3:	call   0x435a10
  403ab8:	jmp    0x4031ec
  403abd:	lea    rdx,[rip+0x3d694]        # 0x441158
  403ac4:	lea    rcx,[rip+0x3d70c]        # 0x4411d7
  403acb:	mov    r8d,0xaa
  403ad1:	call   0x435a10
  403ad6:	jmp    0x4032c9
  403adb:	lea    rdx,[rip+0x3d676]        # 0x441158
  403ae2:	lea    rcx,[rip+0x3d6c0]        # 0x4411a9
  403ae9:	mov    r8d,0x8e
  403aef:	call   0x435a10
  403af4:	jmp    0x403401
  403af9:	mov    rax,QWORD PTR [rsp+0xb0]
  403b01:	mov    rdx,QWORD PTR [rsp+0xc8]
  403b09:	mov    BYTE PTR [rsp+0xd8],0x0
  403b11:	movzx  ecx,BYTE PTR [rsp+0xb8]
  403b19:	mov    rbx,rax
  403b1c:	sub    rbx,rdx
  403b1f:	mov    QWORD PTR [rsp+0xd0],rbx
  403b27:	jmp    0x4033de
  403b2c:	lea    rdx,[rip+0x3d625]        # 0x441158
  403b33:	lea    rcx,[rip+0x3d686]        # 0x4411c0
  403b3a:	mov    r8d,0xa9
  403b40:	call   0x435a10
  403b45:	cmp    WORD PTR [rsp+0x1ca],0x0
  403b4e:	je     0x4032c9
  403b54:	jmp    0x403abd
  403b59:	lea    rcx,[rip+0x3d68e]        # 0x4411ee
  403b60:	call   0x41c450
  403b65:	mov    rax,QWORD PTR [rsp+0xc8]
  403b6d:	cmp    QWORD PTR [rsp+0xb0],rax
  403b75:	jbe    0x403131
  403b7b:	mov    rdi,QWORD PTR [rsp+0x90]
  403b83:	mov    r15,QWORD PTR [rip+0x45e36]        # 0x4499c0
  403b8a:	lea    rsi,[rdi+0xc]
  403b8e:	add    rdi,0x2a
  403b92:	cmp    BYTE PTR [rsp+0xc0],0x0
  403b9a:	je     0x403bcf
  403b9c:	mov    rdx,QWORD PTR [rsp+0xd0]
  403ba4:	cmp    rdx,0x1
  403ba8:	je     0x403c33
  403bae:	add    rax,rdx
  403bb1:	cmp    QWORD PTR [rsp+0xb0],rax
  403bb9:	mov    BYTE PTR [rsp+0xc0],0x0
  403bc1:	mov    QWORD PTR [rsp+0xc8],rax
  403bc9:	jbe    0x403131
  403bcf:	cmp    BYTE PTR [rsp+0xb8],0x0
  403bd7:	jne    0x403c6d
  403bdd:	movzx  edx,BYTE PTR [rax]
  403be0:	mov    ecx,edx
  403be2:	and    edx,0x1f
  403be5:	shr    cl,0x5
  403be8:	and    ecx,0x7
  403beb:	mov    ecx,DWORD PTR [r15+rcx*4]
  403bef:	bt     ecx,edx
  403bf2:	jae    0x403c55
  403bf4:	mov    QWORD PTR [rsp+0xd0],0x1
  403c00:	movsx  ax,BYTE PTR [rax]
  403c04:	mov    edx,0x1
  403c09:	mov    BYTE PTR [rsp+0xd8],0x1
  403c11:	mov    WORD PTR [rsp+0xda],ax
  403c19:	mov    rax,QWORD PTR [rsp+0xc8]
  403c21:	cmp    rdx,0x1
  403c25:	mov    BYTE PTR [rsp+0xc0],0x1
  403c2d:	jne    0x403bae
  403c33:	cmp    BYTE PTR [rax],0xa
  403c36:	jne    0x403bae
  403c3c:	add    rax,0x1
  403c40:	mov    BYTE PTR [rsp+0xc0],0x0
  403c48:	mov    QWORD PTR [rsp+0xc8],rax
  403c50:	jmp    0x403131
  403c55:	mov    rcx,rsi
  403c58:	call   0x424040
  403c5d:	test   eax,eax
  403c5f:	je     0x403d81
  403c65:	mov    BYTE PTR [rsp+0xb8],0x1
  403c6d:	mov    rdx,QWORD PTR [rsp+0xc8]
  403c75:	mov    r8,QWORD PTR [rsp+0xb0]
  403c7d:	mov    r9,rsi
  403c80:	mov    rcx,rdi
  403c83:	sub    r8,rdx
  403c86:	call   0x423f00
  403c8b:	cmp    rax,0xffffffffffffffff
  403c8f:	mov    QWORD PTR [rsp+0xd0],rax
  403c97:	je     0x403d33
  403c9d:	cmp    rax,0xfffffffffffffffe
  403ca1:	je     0x403d59
  403ca7:	test   rax,rax
  403caa:	jne    0x403d02
  403cac:	mov    rax,QWORD PTR [rsp+0xc8]
  403cb4:	mov    QWORD PTR [rsp+0xd0],0x1
  403cc0:	cmp    BYTE PTR [rax],0x0
  403cc3:	je     0x403cde
  403cc5:	lea    rdx,[rip+0x3d48c]        # 0x441158
  403ccc:	lea    rcx,[rip+0x3d4ed]        # 0x4411c0
  403cd3:	mov    r8d,0xa9
  403cd9:	call   0x435a10
  403cde:	cmp    WORD PTR [rsp+0xda],0x0
  403ce7:	je     0x403d02
  403ce9:	lea    rdx,[rip+0x3d468]        # 0x441158
  403cf0:	lea    rcx,[rip+0x3d4e0]        # 0x4411d7
  403cf7:	mov    r8d,0xaa
  403cfd:	call   0x435a10
  403d02:	mov    rcx,rsi
  403d05:	mov    BYTE PTR [rsp+0xd8],0x1
  403d0d:	call   0x424040
  403d12:	test   eax,eax
  403d14:	je     0x403d1e
  403d16:	mov    BYTE PTR [rsp+0xb8],0x0
  403d1e:	mov    rdx,QWORD PTR [rsp+0xd0]
  403d26:	mov    rax,QWORD PTR [rsp+0xc8]
  403d2e:	jmp    0x403c21
  403d33:	mov    QWORD PTR [rsp+0xd0],0x1
  403d3f:	mov    BYTE PTR [rsp+0xd8],0x0
  403d47:	mov    edx,0x1
  403d4c:	mov    rax,QWORD PTR [rsp+0xc8]
  403d54:	jmp    0x403c21
  403d59:	mov    rax,QWORD PTR [rsp+0xc8]
  403d61:	mov    rdx,QWORD PTR [rsp+0xb0]
  403d69:	mov    BYTE PTR [rsp+0xd8],0x0
  403d71:	sub    rdx,rax
  403d74:	mov    QWORD PTR [rsp+0xd0],rdx
  403d7c:	jmp    0x403c21
  403d81:	lea    rdx,[rip+0x3d3d0]        # 0x441158
  403d88:	lea    rcx,[rip+0x3d41a]        # 0x4411a9
  403d8f:	mov    r8d,0x8e
  403d95:	call   0x435a10
  403d9a:	jmp    0x403c65
  403d9f:	nop
  403da0:	push   r13
  403da2:	push   r12
  403da4:	push   rbp
  403da5:	push   rdi
  403da6:	push   rsi
  403da7:	push   rbx
  403da8:	sub    rsp,0x28
  403dac:	mov    rdi,QWORD PTR [rip+0x4d295]        # 0x451048
  403db3:	mov    rsi,rcx
  403db6:	call   0x41ae90
  403dbb:	mov    ebx,DWORD PTR [rip+0x4d283]        # 0x451044
  403dc1:	test   ebx,ebx
  403dc3:	jne    0x403ee1
  403dc9:	mov    ecx,DWORD PTR [rsi+0x14]
  403dcc:	test   ecx,ecx
  403dce:	jle    0x403ed0
  403dd4:	mov    r11d,DWORD PTR [rsi+0x10]
  403dd8:	test   r11d,r11d
  403ddb:	jle    0x403ed0
  403de1:	mov    eax,DWORD PTR [rsi+0x18]
  403de4:	test   eax,eax
  403de6:	js     0x403ed0
  403dec:	mov    r12,QWORD PTR [rip+0x45dfd]        # 0x449bf0
  403df3:	mov    rdx,QWORD PTR [r12]
  403df7:	cmp    eax,DWORD PTR [rdx+0x14]
  403dfa:	jg     0x403ed0
  403e00:	cmp    QWORD PTR [rsi+0x20],0x0
  403e05:	je     0x403ef0
  403e0b:	cmp    QWORD PTR [rsi+0x60],0x0
  403e10:	je     0x403f86
  403e16:	mov    rcx,rsi
  403e19:	call   0x401e20
  403e1e:	mov    r10d,DWORD PTR [rip+0x4d21b]        # 0x451040
  403e25:	test   r10d,r10d
  403e28:	jne    0x403ed0
  403e2e:	mov    ecx,DWORD PTR [rsi+0x14]
  403e31:	movsxd rbx,eax
  403e34:	movsxd rax,ecx
  403e37:	mov    rbp,QWORD PTR [rip+0x50ab2]        # 0x4548f0
  403e3e:	cmp    rbx,rax
  403e41:	jae    0x403ead
  403e43:	movsxd rax,DWORD PTR [rsi+0x18]
  403e47:	add    rax,rbx
  403e4a:	mov    rdx,QWORD PTR [rdi+rax*8]
  403e4e:	test   rdx,rdx
  403e51:	je     0x403e5c
  403e53:	mov    r9d,DWORD PTR [rdx+0x8]
  403e57:	test   r9d,r9d
  403e5a:	jne    0x403e65
  403e5c:	mov    r8d,DWORD PTR [rdx+0xc]
  403e60:	test   r8d,r8d
  403e63:	je     0x403ea1
  403e65:	mov    rax,QWORD PTR [rdx]
  403e68:	mov    DWORD PTR [rdx+0x8],0x0
  403e6f:	xor    ecx,ecx
  403e71:	mov    BYTE PTR [rax],0x0
  403e74:	mov    DWORD PTR [rdx+0xc],0x0
  403e7b:	mov    edx,DWORD PTR [rsi+0x18]
  403e7e:	add    edx,ebx
  403e80:	call   0x41c2f0
  403e85:	call   0x41c4d0
  403e8a:	call   rbp
  403e8c:	lea    rcx,[rax+0x30]
  403e90:	call   0x43a780
  403e95:	call   0x4140a0
  403e9a:	test   eax,eax
  403e9c:	jne    0x403ee1
  403e9e:	mov    ecx,DWORD PTR [rsi+0x14]
  403ea1:	add    rbx,0x1
  403ea5:	movsxd rax,ecx
  403ea8:	cmp    rax,rbx
  403eab:	ja     0x403e43
  403ead:	test   BYTE PTR [rsi+0x80],0x8
  403eb4:	je     0x403f00
  403eb6:	call   rbp
  403eb8:	lea    rcx,[rax+0x30]
  403ebc:	call   0x43a780
  403ec1:	and    DWORD PTR [rsi+0x80],0xfffffffe
  403ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ed0:	add    rsp,0x28
  403ed4:	pop    rbx
  403ed5:	pop    rsi
  403ed6:	pop    rdi
  403ed7:	pop    rbp
  403ed8:	pop    r12
  403eda:	pop    r13
  403edc:	jmp    0x41aea0
  403ee1:	mov    DWORD PTR [rip+0x4d155],0x1        # 0x451040
  403eeb:	jmp    0x403ed0
  403eed:	nop    DWORD PTR [rax]
  403ef0:	xor    ebx,ebx
  403ef2:	jmp    0x403e34
  403ef7:	nop    WORD PTR [rax+rax*1+0x0]
  403f00:	mov    rcx,rsi
  403f03:	call   0x41fc60
  403f08:	mov    ebx,DWORD PTR [rsi+0x14]
  403f0b:	add    ebx,DWORD PTR [rsi+0x18]
  403f0e:	movsxd r13,ebx
  403f11:	lea    rdi,[rdi+r13*8]
  403f15:	mov    rax,QWORD PTR [rdi]
  403f18:	mov    edx,DWORD PTR [rax+0xc]
  403f1b:	test   edx,edx
  403f1d:	je     0x403f2f
  403f1f:	mov    rdx,QWORD PTR [rsi+0x58]
  403f23:	mov    rcx,QWORD PTR [rax]
  403f26:	call   0x43a648
  403f2b:	test   eax,eax
  403f2d:	je     0x403eb6
  403f2f:	mov    rax,QWORD PTR [r12]
  403f33:	movsxd rax,DWORD PTR [rax+0x14]
  403f37:	cmp    r13,rax
  403f3a:	jae    0x403eb6
  403f40:	mov    edx,ebx
  403f42:	xor    ecx,ecx
  403f44:	call   0x41c2f0
  403f49:	call   0x41c5d0
  403f4e:	mov    rcx,QWORD PTR [rsi+0x58]
  403f52:	call   0x41c450
  403f57:	call   0x41c610
  403f5c:	mov    rax,QWORD PTR [rdi]
  403f5f:	mov    rdx,QWORD PTR [rsi+0x58]
  403f63:	mov    rcx,QWORD PTR [rax]
  403f66:	call   0x43a640
  403f6b:	mov    rbx,QWORD PTR [rdi]
  403f6e:	mov    rcx,QWORD PTR [rsi+0x58]
  403f72:	mov    DWORD PTR [rbx+0xc],0x1
  403f79:	call   0x43a620
  403f7e:	mov    DWORD PTR [rbx+0x8],eax
  403f81:	jmp    0x403eb6
  403f86:	mov    rcx,rsi
  403f89:	call   0x41fdc0
  403f8e:	jmp    0x403e16
  403f93:	nop    DWORD PTR [rax]
  403f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fa0:	push   rbx
  403fa1:	sub    rsp,0x20
  403fa5:	call   0x41ae90
  403faa:	mov    rax,QWORD PTR [rip+0x45c5f]        # 0x449c10
  403fb1:	mov    DWORD PTR [rip+0x4d085],0x0        # 0x451040
  403fbb:	mov    rbx,QWORD PTR [rax]
  403fbe:	test   rbx,rbx
  403fc1:	jne    0x403fcd
  403fc3:	jmp    0x403ff4
  403fc5:	mov    rbx,QWORD PTR [rbx]
  403fc8:	test   rbx,rbx
  403fcb:	je     0x403ff4
  403fcd:	mov    eax,DWORD PTR [rbx+0x80]
  403fd3:	and    eax,0x5
  403fd6:	cmp    eax,0x5
  403fd9:	jne    0x403fc5
  403fdb:	mov    edx,DWORD PTR [rbx+0x14]
  403fde:	test   edx,edx
  403fe0:	je     0x403fc5
  403fe2:	mov    rcx,rbx
  403fe5:	call   0x403da0
  403fea:	mov    eax,DWORD PTR [rip+0x4d050]        # 0x451040
  403ff0:	test   eax,eax
  403ff2:	je     0x403fc5
  403ff4:	mov    rax,QWORD PTR [rip+0x45be5]        # 0x449be0
  403ffb:	mov    rcx,QWORD PTR [rax]
  403ffe:	call   0x403da0
  404003:	nop
  404004:	add    rsp,0x20
  404008:	pop    rbx
  404009:	jmp    0x41aea0
  40400e:	xchg   ax,ax
  404010:	push   rbp
  404011:	push   rdi
  404012:	push   rsi
  404013:	push   rbx
  404014:	sub    rsp,0x28
  404018:	mov    rax,QWORD PTR [rip+0x45b91]        # 0x449bb0
  40401f:	mov    ebx,ecx
  404021:	movsxd rbp,edx
  404024:	movsxd rsi,r8d
  404027:	mov    ecx,DWORD PTR [rax]
  404029:	test   ecx,ecx
  40402b:	jne    0x40403e
  40402d:	mov    rax,QWORD PTR [rip+0x45b8c]        # 0x449bc0
  404034:	mov    edx,DWORD PTR [rax]
  404036:	test   edx,edx
  404038:	je     0x404140
  40403e:	mov    rax,QWORD PTR [rip+0x4d003]        # 0x451048
  404045:	cmp    QWORD PTR [rax],0x0
  404049:	je     0x404140
  40404f:	call   0x4140a0
  404054:	test   eax,eax
  404056:	jne    0x404140
  40405c:	mov    rax,QWORD PTR [rip+0x45b5d]        # 0x449bc0
  404063:	mov    eax,DWORD PTR [rax]
  404065:	test   eax,eax
  404067:	jne    0x404221
  40406d:	test   esi,esi
  40406f:	js     0x404150
  404075:	mov    edi,ebp
  404077:	mov    r8d,esi
  40407a:	mov    ecx,ebx
  40407c:	sub    edi,esi
  40407e:	mov    edx,edi
  404080:	call   0x41c920
  404085:	test   esi,esi
  404087:	je     0x4043ad
  40408d:	mov    edx,edi
  40408f:	sub    edx,ebx
  404091:	test   edx,edx
  404093:	jle    0x4040ed
  404095:	sub    edx,0x1
  404098:	mov    rcx,rbp
  40409b:	movsxd rdi,edi
  40409e:	sub    rcx,rdx
  4040a1:	sub    rdi,rbp
  4040a4:	lea    rax,[rbp*8-0x8]
  4040ac:	lea    r11,[rcx*8-0x10]
  4040b4:	lea    r10,[rdi*8+0x0]
  4040bc:	nop    DWORD PTR [rax+0x0]
  4040c0:	mov    r9,QWORD PTR [rip+0x4cf81]        # 0x451048
  4040c7:	lea    rdx,[rax+r10*1]
  4040cb:	lea    rcx,[r9+rax*1]
  4040cf:	mov    r9,QWORD PTR [r9+rdx*1]
  4040d3:	sub    rax,0x8
  4040d7:	cmp    rax,r11
  4040da:	mov    r8,QWORD PTR [rcx]
  4040dd:	mov    QWORD PTR [rcx],r9
  4040e0:	mov    rcx,QWORD PTR [rip+0x4cf61]        # 0x451048
  4040e7:	mov    QWORD PTR [rcx+rdx*1],r8
  4040eb:	jne    0x4040c0
  4040ed:	add    esi,ebx
  4040ef:	cmp    ebx,esi
  4040f1:	je     0x404140
  4040f3:	sub    esi,ebx
  4040f5:	movsxd rcx,ebx
  4040f8:	mov    rdx,QWORD PTR [rip+0x4cf49]        # 0x451048
  4040ff:	lea    r8d,[rsi-0x1]
  404103:	lea    rax,[rcx*8+0x0]
  40410b:	lea    r8,[rcx+r8*1+0x1]
  404110:	shl    r8,0x3
  404114:	mov    rdx,QWORD PTR [rdx+rax*1]
  404118:	mov    rdx,QWORD PTR [rdx]
  40411b:	mov    BYTE PTR [rdx],0x0
  40411e:	mov    rdx,QWORD PTR [rip+0x4cf23]        # 0x451048
  404125:	mov    rcx,QWORD PTR [rdx+rax*1]
  404129:	add    rax,0x8
  40412d:	cmp    rax,r8
  404130:	mov    DWORD PTR [rcx+0x8],0x0
  404137:	mov    DWORD PTR [rcx+0xc],0x0
  40413e:	jne    0x404114
  404140:	add    rsp,0x28
  404144:	pop    rbx
  404145:	pop    rsi
  404146:	pop    rdi
  404147:	pop    rbp
  404148:	ret    
  404149:	nop    DWORD PTR [rax+0x0]
  404150:	sub    ebx,esi
  404152:	mov    r8d,esi
  404155:	mov    edx,ebp
  404157:	mov    ecx,ebx
  404159:	call   0x41c920
  40415e:	mov    edx,ebp
  404160:	lea    eax,[rsi+rbx*1]
  404163:	sub    edx,ebx
  404165:	test   edx,edx
  404167:	jle    0x4041bd
  404169:	cdqe   
  40416b:	sub    edx,0x1
  40416e:	movsxd rbx,ebx
  404171:	lea    r11,[rax+rdx*1+0x1]
  404176:	sub    rbx,rax
  404179:	lea    rcx,[rax*8+0x0]
  404181:	lea    rax,[rbx*8+0x0]
  404189:	shl    r11,0x3
  40418d:	nop    DWORD PTR [rax]
  404190:	mov    r9,QWORD PTR [rip+0x4ceb1]        # 0x451048
  404197:	lea    rdx,[rcx+rax*1]
  40419b:	lea    r8,[r9+rcx*1]
  40419f:	mov    r9,QWORD PTR [r9+rdx*1]
  4041a3:	add    rcx,0x8
  4041a7:	cmp    rcx,r11
  4041aa:	mov    r10,QWORD PTR [r8]
  4041ad:	mov    QWORD PTR [r8],r9
  4041b0:	mov    r8,QWORD PTR [rip+0x4ce91]        # 0x451048
  4041b7:	mov    QWORD PTR [r8+rdx*1],r10
  4041bb:	jne    0x404190
  4041bd:	add    esi,ebp
  4041bf:	cmp    esi,ebp
  4041c1:	je     0x404140
  4041c7:	sub    ebp,0x1
  4041ca:	movsxd rcx,esi
  4041cd:	mov    rdx,QWORD PTR [rip+0x4ce74]        # 0x451048
  4041d4:	sub    ebp,esi
  4041d6:	lea    rax,[rcx*8+0x0]
  4041de:	lea    r8,[rcx+rbp*1+0x1]
  4041e3:	shl    r8,0x3
  4041e7:	nop    WORD PTR [rax+rax*1+0x0]
  4041f0:	mov    rdx,QWORD PTR [rdx+rax*1]
  4041f4:	mov    rdx,QWORD PTR [rdx]
  4041f7:	mov    BYTE PTR [rdx],0x0
  4041fa:	mov    rdx,QWORD PTR [rip+0x4ce47]        # 0x451048
  404201:	mov    rcx,QWORD PTR [rdx+rax*1]
  404205:	add    rax,0x8
  404209:	cmp    rax,r8
  40420c:	mov    DWORD PTR [rcx+0x8],0x0
  404213:	mov    DWORD PTR [rcx+0xc],0x0
  40421a:	jne    0x4041f0
  40421c:	jmp    0x404140
  404221:	mov    edx,ebp
  404223:	mov    r8d,esi
  404226:	mov    ecx,ebx
  404228:	call   0x41c860
  40422d:	test   esi,esi
  40422f:	lea    edx,[rbp-0x1]
  404232:	jle    0x4042ef
  404238:	lea    r9d,[rbx+rsi*1]
  40423c:	cmp    edx,r9d
  40423f:	jl     0x404292
  404241:	movsxd rcx,edx
  404244:	sub    edx,r9d
  404247:	neg    rsi
  40424a:	lea    rax,[rcx*8+0x0]
  404252:	sub    rcx,rdx
  404255:	lea    r11,[rsi*8+0x0]
  40425d:	lea    rdi,[rcx*8-0x8]
  404265:	mov    r8,QWORD PTR [rip+0x4cddc]        # 0x451048
  40426c:	lea    rdx,[rax+r11*1]
  404270:	lea    rcx,[r8+rax*1]
  404274:	mov    r8,QWORD PTR [r8+rdx*1]
  404278:	sub    rax,0x8
  40427c:	cmp    rax,rdi
  40427f:	mov    r10,QWORD PTR [rcx]
  404282:	mov    QWORD PTR [rcx],r8
  404285:	mov    rcx,QWORD PTR [rip+0x4cdbc]        # 0x451048
  40428c:	mov    QWORD PTR [rcx+rdx*1],r10
  404290:	jne    0x404265
  404292:	cmp    ebx,r9d
  404295:	jge    0x404140
  40429b:	cmp    ebx,ebp
  40429d:	jge    0x404140
  4042a3:	movsxd rax,ebx
  4042a6:	mov    rdx,QWORD PTR [rip+0x4cd9b]        # 0x451048
  4042ad:	shl    rax,0x3
  4042b1:	jmp    0x4042bb
  4042b3:	cmp    ebp,ebx
  4042b5:	jle    0x404140
  4042bb:	mov    rdx,QWORD PTR [rdx+rax*1]
  4042bf:	add    ebx,0x1
  4042c2:	mov    rdx,QWORD PTR [rdx]
  4042c5:	mov    BYTE PTR [rdx],0x0
  4042c8:	mov    rdx,QWORD PTR [rip+0x4cd79]        # 0x451048
  4042cf:	mov    rcx,QWORD PTR [rdx+rax*1]
  4042d3:	add    rax,0x8
  4042d7:	cmp    ebx,r9d
  4042da:	mov    DWORD PTR [rcx+0x8],0x0
  4042e1:	mov    DWORD PTR [rcx+0xc],0x0
  4042e8:	jl     0x4042b3
  4042ea:	jmp    0x404140
  4042ef:	lea    ecx,[rsi+rdx*1]
  4042f2:	cmp    ebx,ecx
  4042f4:	jg     0x40434d
  4042f6:	movsxd r8,ebx
  4042f9:	sub    ecx,ebx
  4042fb:	movsxd r11,esi
  4042fe:	lea    rdi,[r8+rcx*1+0x1]
  404303:	neg    r11
  404306:	lea    rax,[r8*8+0x0]
  40430e:	shl    r11,0x3
  404312:	shl    rdi,0x3
  404316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404320:	mov    r9,QWORD PTR [rip+0x4cd21]        # 0x451048
  404327:	lea    rcx,[rax+r11*1]
  40432b:	lea    r8,[r9+rax*1]
  40432f:	mov    r9,QWORD PTR [r9+rcx*1]
  404333:	add    rax,0x8
  404337:	cmp    rax,rdi
  40433a:	mov    r10,QWORD PTR [r8]
  40433d:	mov    QWORD PTR [r8],r9
  404340:	mov    r8,QWORD PTR [rip+0x4cd01]        # 0x451048
  404347:	mov    QWORD PTR [r8+rcx*1],r10
  40434b:	jne    0x404320
  40434d:	add    esi,ebp
  40434f:	cmp    edx,esi
  404351:	jl     0x404140
  404357:	cmp    ebx,edx
  404359:	jg     0x404140
  40435f:	movsxd rax,edx
  404362:	mov    rcx,QWORD PTR [rip+0x4ccdf]        # 0x451048
  404369:	shl    rax,0x3
  40436d:	jmp    0x404378
  40436f:	nop
  404370:	cmp    ebx,edx
  404372:	jg     0x404140
  404378:	mov    rcx,QWORD PTR [rcx+rax*1]
  40437c:	sub    edx,0x1
  40437f:	mov    rcx,QWORD PTR [rcx]
  404382:	mov    BYTE PTR [rcx],0x0
  404385:	mov    rcx,QWORD PTR [rip+0x4ccbc]        # 0x451048
  40438c:	mov    r8,QWORD PTR [rcx+rax*1]
  404390:	sub    rax,0x8
  404394:	cmp    edx,esi
  404396:	mov    DWORD PTR [r8+0x8],0x0
  40439e:	mov    DWORD PTR [r8+0xc],0x0
  4043a6:	jge    0x404370
  4043a8:	jmp    0x404140
  4043ad:	mov    ebp,edi
  4043af:	jmp    0x40415e
  4043b4:	xchg   ax,ax
  4043b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043c0:	push   r15
  4043c2:	push   r14
  4043c4:	push   r13
  4043c6:	push   r12
  4043c8:	push   rbp
  4043c9:	push   rdi
  4043ca:	push   rsi
  4043cb:	push   rbx
  4043cc:	sub    rsp,0x48
  4043d0:	mov    edi,DWORD PTR [rcx+0x14]
  4043d3:	mov    eax,DWORD PTR [rcx+0x28]
  4043d6:	lea    ebx,[rdi-0x1]
  4043d9:	mov    ebp,eax
  4043db:	mov    DWORD PTR [rsp+0x34],eax
  4043df:	lea    r13d,[rax+rbx*1]
  4043e3:	mov    eax,DWORD PTR [rcx+0x70]
  4043e6:	lea    r10d,[rax-0x1]
  4043ea:	cmp    r13d,eax
  4043ed:	lea    eax,[r9-0x1]
  4043f1:	cmovg  r13d,r10d
  4043f5:	add    ebx,edx
  4043f7:	cmp    ebx,r9d
  4043fa:	cmovg  ebx,eax
  4043fd:	cmp    r13d,ebp
  404400:	setg   BYTE PTR [rsp+0x33]
  404405:	cmp    ebx,edx
  404407:	movzx  eax,BYTE PTR [rsp+0x33]
  40440c:	jle    0x404586
  404412:	test   al,al
  404414:	je     0x404586
  40441a:	mov    r9,QWORD PTR [rcx+0x60]
  40441e:	movsxd rax,edx
  404421:	lea    rsi,[r8+rax*4]
  404425:	movsxd rax,ebp
  404428:	lea    rdi,[r9+rax*4]
  40442c:	mov    r15d,DWORD PTR [rdi]
  40442f:	cmp    DWORD PTR [rsi],r15d
  404432:	jne    0x40458e
  404438:	xor    r9d,r9d
  40443b:	xor    eax,eax
  40443d:	nop    DWORD PTR [rax]
  404440:	add    eax,0x1
  404443:	lea    r11d,[rdx+rax*1]
  404447:	lea    r10d,[rbp+rax*1+0x0]
  40444c:	cmp    ebx,r11d
  40444f:	jle    0x404465
  404451:	cmp    r13d,r10d
  404454:	jle    0x404465
  404456:	mov    r10d,DWORD PTR [rsi+r9*1+0x4]
  40445b:	add    r9,0x4
  40445f:	cmp    r10d,DWORD PTR [rdi+r9*1]
  404463:	je     0x404440
  404465:	cmp    ebx,r11d
  404468:	jle    0x40456d
  40446e:	movsxd rax,DWORD PTR [rsp+0x34]
  404473:	shl    rax,0x2
  404477:	mov    r14,r8
  40447a:	mov    DWORD PTR [rsp+0x2c],edx
  40447e:	mov    r12,rcx
  404481:	mov    QWORD PTR [rsp+0x38],rax
  404486:	xor    r15d,r15d
  404489:	nop    DWORD PTR [rax+0x0]
  404490:	cmp    BYTE PTR [rsp+0x33],0x0
  404495:	mov    rdi,QWORD PTR [rsp+0x38]
  40449a:	mov    esi,DWORD PTR [rsp+0x34]
  40449e:	jne    0x4044b5
  4044a0:	jmp    0x404560
  4044a5:	add    esi,0x1
  4044a8:	add    rdi,0x4
  4044ac:	cmp    esi,r13d
  4044af:	je     0x404560
  4044b5:	movsxd rax,r11d
  4044b8:	mov    r9,QWORD PTR [r12+0x60]
  4044bd:	lea    r10,[r14+rax*4]
  4044c1:	mov    eax,DWORD PTR [r9+rdi*1]
  4044c5:	cmp    DWORD PTR [r10],eax
  4044c8:	jne    0x4044a5
  4044ca:	cmp    ebx,r11d
  4044cd:	jle    0x40457e
  4044d3:	lea    eax,[r11+0x1]
  4044d7:	xor    edx,edx
  4044d9:	add    r9,rdi
  4044dc:	jmp    0x4044f6
  4044de:	xchg   ax,ax
  4044e0:	mov    r8d,DWORD PTR [r10+rdx*1+0x4]
  4044e5:	mov    ecx,DWORD PTR [r9+rdx*1+0x4]
  4044ea:	add    eax,0x1
  4044ed:	add    rdx,0x4
  4044f1:	cmp    r8d,ecx
  4044f4:	jne    0x4044fc
  4044f6:	cmp    eax,ebx
  4044f8:	mov    ebp,eax
  4044fa:	jne    0x4044e0
  4044fc:	lea    eax,[r11+r15*1]
  404500:	mov    edx,DWORD PTR [r12+0x18]
  404505:	mov    r10d,esi
  404508:	mov    ecx,eax
  40450a:	sub    ecx,DWORD PTR [rsp+0x2c]
  40450e:	sub    r10d,eax
  404511:	add    ecx,edx
  404513:	add    edx,DWORD PTR [r12+0x14]
  404518:	mov    r8d,edx
  40451b:	sub    r8d,r10d
  40451e:	test   r10d,r10d
  404521:	cmovg  edx,r8d
  404525:	mov    r8d,edx
  404528:	sub    r8d,ecx
  40452b:	test   r8d,r8d
  40452e:	jle    0x4044a5
  404534:	mov    r8d,r10d
  404537:	mov    DWORD PTR [rsp+0x28],r10d
  40453c:	add    esi,0x1
  40453f:	call   0x404010
  404544:	mov    eax,DWORD PTR [rsp+0x28]
  404548:	add    rdi,0x4
  40454c:	mov    r11d,ebp
  40454f:	add    r15d,eax
  404552:	cmp    esi,r13d
  404555:	jne    0x4044b5
  40455b:	nop    DWORD PTR [rax+rax*1+0x0]
  404560:	add    r11d,0x1
  404564:	cmp    ebx,r11d
  404567:	jg     0x404490
  40456d:	add    rsp,0x48
  404571:	pop    rbx
  404572:	pop    rsi
  404573:	pop    rdi
  404574:	pop    rbp
  404575:	pop    r12
  404577:	pop    r13
  404579:	pop    r14
  40457b:	pop    r15
  40457d:	ret    
  40457e:	mov    ebp,r11d
  404581:	jmp    0x4044fc
  404586:	mov    r11d,edx
  404589:	jmp    0x404465
  40458e:	mov    r11d,edx
  404591:	jmp    0x404473
  404596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045a0:	push   rsi
  4045a1:	push   rbx
  4045a2:	sub    rsp,0x28
  4045a6:	mov    rsi,rcx
  4045a9:	call   0x4204c0
  4045ae:	sub    eax,DWORD PTR [rsi+0x28]
  4045b1:	mov    rcx,rsi
  4045b4:	add    eax,DWORD PTR [rsi+0x18]
  4045b7:	mov    ebx,eax
  4045b9:	call   0x4212e0
  4045be:	mov    edx,ebx
  4045c0:	mov    ecx,eax
  4045c2:	call   0x41c2f0
  4045c7:	call   QWORD PTR [rip+0x50323]        # 0x4548f0
  4045cd:	lea    rcx,[rax+0x30]
  4045d1:	add    rsp,0x28
  4045d5:	pop    rbx
  4045d6:	pop    rsi
  4045d7:	jmp    0x43a780
  4045dc:	nop
  4045dd:	nop
  4045de:	nop
  4045df:	nop
  4045e0:	sub    rsp,0x28
  4045e4:	mov    rcx,QWORD PTR [rip+0x4cab5]        # 0x4510a0
  4045eb:	test   rcx,rcx
  4045ee:	je     0x40460c
  4045f0:	call   0x43a780
  4045f5:	mov    rcx,QWORD PTR [rip+0x4caa4]        # 0x4510a0
  4045fc:	call   0x43a788
  404601:	mov    QWORD PTR [rip+0x4ca94],0x0        # 0x4510a0
  40460c:	add    rsp,0x28
  404610:	ret    
  404611:	nop    DWORD PTR [rax+rax*1+0x0]
  404616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404620:	push   rbx
  404621:	sub    rsp,0x20
  404625:	mov    rbx,rcx
  404628:	call   0x4045e0
  40462d:	lea    rdx,[rip+0x3cbbc]        # 0x4411f0
  404634:	mov    rcx,rbx
  404637:	call   0x43a770
  40463c:	test   rax,rax
  40463f:	mov    QWORD PTR [rip+0x4ca5a],rax        # 0x4510a0
  404646:	je     0x404663
  404648:	mov    r9d,0x1
  40464e:	mov    r8d,0x4
  404654:	xor    edx,edx
  404656:	mov    rcx,rax
  404659:	add    rsp,0x20
  40465d:	pop    rbx
  40465e:	jmp    0x43a668
  404663:	add    rsp,0x20
  404667:	pop    rbx
  404668:	ret    
  404669:	nop    DWORD PTR [rax+0x0]
  404670:	sub    rsp,0x28
  404674:	mov    r9,QWORD PTR [rip+0x4ca25]        # 0x4510a0
  40467b:	mov    BYTE PTR [rsp+0x30],cl
  40467f:	test   r9,r9
  404682:	je     0x40469a
  404684:	lea    rcx,[rsp+0x30]
  404689:	mov    r8d,0x1
  40468f:	mov    edx,0x1
  404694:	call   0x43a738
  404699:	nop
  40469a:	add    rsp,0x28
  40469e:	ret    
  40469f:	nop
  4046a0:	ret    
  4046a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4046a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046b0:	push   rbx
  4046b1:	sub    rsp,0x20
  4046b5:	mov    ecx,0x80
  4046ba:	call   0x4227b0
  4046bf:	lea    rcx,[rip+0x4cafa]        # 0x4511c0
  4046c6:	mov    rbx,rax
  4046c9:	call   0x422a00
  4046ce:	mov    QWORD PTR [rbx],rax
  4046d1:	mov    eax,DWORD PTR [rip+0x4cabd]        # 0x451194
  4046d7:	mov    DWORD PTR [rbx+0x10],eax
  4046da:	mov    eax,DWORD PTR [rip+0x4cab0]        # 0x451190
  4046e0:	mov    DWORD PTR [rbx+0x14],eax
  4046e3:	mov    eax,DWORD PTR [rip+0x4caa3]        # 0x45118c
  4046e9:	mov    DWORD PTR [rbx+0x18],eax
  4046ec:	mov    rax,QWORD PTR [rip+0x3894d]        # 0x43d040
  4046f3:	mov    QWORD PTR [rbx+0x20],rax
  4046f7:	mov    rax,QWORD PTR [rip+0x3894a]        # 0x43d048
  4046fe:	mov    QWORD PTR [rbx+0x28],rax
  404702:	mov    rax,QWORD PTR [rip+0x38947]        # 0x43d050
  404709:	mov    QWORD PTR [rbx+0x30],rax
  40470d:	mov    rax,QWORD PTR [rip+0x38944]        # 0x43d058
  404714:	mov    QWORD PTR [rbx+0x38],rax
  404718:	mov    rax,QWORD PTR [rip+0x38941]        # 0x43d060
  40471f:	mov    QWORD PTR [rbx+0x40],rax
  404723:	mov    rax,QWORD PTR [rip+0x3893e]        # 0x43d068
  40472a:	mov    QWORD PTR [rbx+0x48],rax
  40472e:	mov    rax,QWORD PTR [rip+0x3893b]        # 0x43d070
  404735:	mov    QWORD PTR [rbx+0x50],rax
  404739:	mov    rax,QWORD PTR [rip+0x38938]        # 0x43d078
  404740:	mov    QWORD PTR [rbx+0x58],rax
  404744:	mov    rax,QWORD PTR [rip+0x38935]        # 0x43d080
  40474b:	mov    QWORD PTR [rbx+0x60],rax
  40474f:	mov    rax,QWORD PTR [rip+0x38932]        # 0x43d088
  404756:	mov    QWORD PTR [rbx+0x68],rax
  40475a:	mov    rax,QWORD PTR [rip+0x3892f]        # 0x43d090
  404761:	mov    QWORD PTR [rbx+0x70],rax
  404765:	mov    rax,QWORD PTR [rip+0x4c954]        # 0x4510c0
  40476c:	mov    QWORD PTR [rbx+0x8],rax
  404770:	mov    eax,DWORD PTR [rip+0x4ca12]        # 0x451188
  404776:	mov    DWORD PTR [rbx+0x1c],eax
  404779:	mov    rax,QWORD PTR [rip+0x4ca00]        # 0x451180
  404780:	mov    rcx,QWORD PTR [rip+0x4c959]        # 0x4510e0
  404787:	mov    rdx,QWORD PTR [rip+0x4c94a]        # 0x4510d8
  40478e:	mov    QWORD PTR [rbx+0x78],rax
  404792:	lea    rax,[rcx+0x2]
  404796:	cmp    rax,rdx
  404799:	jb     0x404820
  40479f:	test   rdx,rdx
  4047a2:	mov    rcx,QWORD PTR [rip+0x4c93f]        # 0x4510e8
  4047a9:	je     0x404811
  4047ab:	test   rcx,rcx
  4047ae:	je     0x4047ca
  4047b0:	movabs rax,0x1555555555555554
  4047ba:	cmp    rdx,rax
  4047bd:	ja     0x404837
  4047bf:	mov    rax,rdx
  4047c2:	shr    rax,1
  4047c5:	lea    rdx,[rdx+rax*1+0x1]
  4047ca:	mov    QWORD PTR [rip+0x4c907],rdx        # 0x4510d8
  4047d1:	shl    rdx,0x3
  4047d5:	call   0x422820
  4047da:	mov    rcx,QWORD PTR [rip+0x4c8ff]        # 0x4510e0
  4047e1:	mov    QWORD PTR [rip+0x4c900],rax        # 0x4510e8
  4047e8:	lea    rdx,[rcx+0x1]
  4047ec:	mov    QWORD PTR [rax+rcx*8],rbx
  4047f0:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  4047f9:	mov    QWORD PTR [rip+0x4c8bc],0x0        # 0x4510c0
  404804:	mov    QWORD PTR [rip+0x4c8d5],rdx        # 0x4510e0
  40480b:	add    rsp,0x20
  40480f:	pop    rbx
  404810:	ret    
  404811:	test   rcx,rcx
  404814:	je     0x404830
  404816:	mov    dl,0x4
  404818:	jmp    0x4047bf
  40481a:	nop    WORD PTR [rax+rax*1+0x0]
  404820:	mov    rax,QWORD PTR [rip+0x4c8c1]        # 0x4510e8
  404827:	jmp    0x4047e8
  404829:	nop    DWORD PTR [rax+0x0]
  404830:	mov    edx,0x4
  404835:	jmp    0x4047ca
  404837:	call   0x422a20
  40483c:	nop
  40483d:	nop    DWORD PTR [rax]
  404840:	push   rbx
  404841:	sub    rsp,0x20
  404845:	test   rcx,rcx
  404848:	mov    rbx,rcx
  40484b:	je     0x404880
  40484d:	mov    rdx,rcx
  404850:	lea    rcx,[rip+0x4c969]        # 0x4511c0
  404857:	call   0x43a640
  40485c:	mov    rcx,rbx
  40485f:	call   0x43a620
  404864:	mov    DWORD PTR [rip+0x4c92a],eax        # 0x451194
  40486a:	mov    DWORD PTR [rip+0x4c91c],eax        # 0x45118c
  404870:	mov    DWORD PTR [rip+0x4c91a],eax        # 0x451190
  404876:	add    rsp,0x20
  40487a:	pop    rbx
  40487b:	ret    
  40487c:	nop    DWORD PTR [rax+0x0]
  404880:	mov    BYTE PTR [rip+0x4c939],0x0        # 0x4511c0
  404887:	jmp    0x40485c
  404889:	nop    DWORD PTR [rax+0x0]
  404890:	push   rbx
  404891:	sub    rsp,0x20
  404895:	mov    eax,DWORD PTR [rip+0x4c8f1]        # 0x45118c
  40489b:	lea    rbx,[rip+0x4c91e]        # 0x4511c0
  4048a2:	cmp    eax,0x100
  4048a7:	ja     0x4048c1
  4048a9:	nop    DWORD PTR [rax+0x0]
  4048b0:	movsxd rdx,eax
  4048b3:	add    eax,0x1
  4048b6:	cmp    eax,0x101
  4048bb:	mov    BYTE PTR [rbx+rdx*1],0x20
  4048bf:	jne    0x4048b0
  4048c1:	sub    eax,0x1
  4048c4:	lea    rdx,[rip+0x38775]        # 0x43d040
  4048cb:	cdqe   
  4048cd:	mov    BYTE PTR [rbx+rax*1],0xa
  4048d1:	mov    rax,QWORD PTR [rip+0x45308]        # 0x449be0
  4048d8:	mov    rcx,QWORD PTR [rax]
  4048db:	call   0x420f80
  4048e0:	movsxd rax,DWORD PTR [rip+0x4c8a5]        # 0x45118c
  4048e7:	mov    BYTE PTR [rbx+rax*1],0xa
  4048eb:	add    rsp,0x20
  4048ef:	pop    rbx
  4048f0:	ret    
  4048f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4048f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404900:	push   rsi
  404901:	push   rbx
  404902:	sub    rsp,0x28
  404906:	mov    rax,QWORD PTR [rip+0x4c7d3]        # 0x4510e0
  40490d:	mov    rdx,QWORD PTR [rip+0x4c7d4]        # 0x4510e8
  404914:	lea    rcx,[rip+0x4c8a5]        # 0x4511c0
  40491b:	sub    rax,0x1
  40491f:	mov    rbx,QWORD PTR [rdx+rax*8]
  404923:	mov    QWORD PTR [rip+0x4c7b6],rax        # 0x4510e0
  40492a:	mov    rdx,QWORD PTR [rbx]
  40492d:	call   0x43a640
  404932:	mov    rcx,QWORD PTR [rbx]
  404935:	call   0x43a748
  40493a:	mov    eax,DWORD PTR [rbx+0x10]
  40493d:	mov    rsi,QWORD PTR [rbx+0x78]
  404941:	mov    DWORD PTR [rip+0x4c84d],eax        # 0x451194
  404947:	mov    eax,DWORD PTR [rbx+0x14]
  40494a:	mov    DWORD PTR [rip+0x4c840],eax        # 0x451190
  404950:	mov    eax,DWORD PTR [rbx+0x18]
  404953:	mov    DWORD PTR [rip+0x4c833],eax        # 0x45118c
  404959:	mov    rax,QWORD PTR [rbx+0x20]
  40495d:	mov    QWORD PTR [rip+0x386dc],rax        # 0x43d040
  404964:	mov    rax,QWORD PTR [rbx+0x28]
  404968:	mov    QWORD PTR [rip+0x386d9],rax        # 0x43d048
  40496f:	mov    rax,QWORD PTR [rbx+0x30]
  404973:	mov    QWORD PTR [rip+0x386d6],rax        # 0x43d050
  40497a:	mov    rax,QWORD PTR [rbx+0x38]
  40497e:	mov    QWORD PTR [rip+0x386d3],rax        # 0x43d058
  404985:	mov    rax,QWORD PTR [rbx+0x40]
  404989:	mov    QWORD PTR [rip+0x386d0],rax        # 0x43d060
  404990:	mov    rax,QWORD PTR [rbx+0x48]
  404994:	mov    QWORD PTR [rip+0x386cd],rax        # 0x43d068
  40499b:	mov    rax,QWORD PTR [rbx+0x50]
  40499f:	mov    QWORD PTR [rip+0x386ca],rax        # 0x43d070
  4049a6:	mov    rax,QWORD PTR [rbx+0x58]
  4049aa:	mov    QWORD PTR [rip+0x386c7],rax        # 0x43d078
  4049b1:	mov    rax,QWORD PTR [rbx+0x60]
  4049b5:	mov    QWORD PTR [rip+0x386c4],rax        # 0x43d080
  4049bc:	mov    rax,QWORD PTR [rbx+0x68]
  4049c0:	mov    QWORD PTR [rip+0x386c1],rax        # 0x43d088
  4049c7:	mov    rax,QWORD PTR [rbx+0x70]
  4049cb:	mov    QWORD PTR [rip+0x386be],rax        # 0x43d090
  4049d2:	mov    rax,QWORD PTR [rbx+0x8]
  4049d6:	mov    QWORD PTR [rip+0x4c6e3],rax        # 0x4510c0
  4049dd:	mov    eax,DWORD PTR [rbx+0x1c]
  4049e0:	mov    DWORD PTR [rip+0x4c7a2],eax        # 0x451188
  4049e6:	mov    QWORD PTR [rip+0x4c793],rsi        # 0x451180
  4049ed:	mov    rcx,QWORD PTR [rip+0x4c704]        # 0x4510f8
  4049f4:	call   0x43a748
  4049f9:	test   rsi,rsi
  4049fc:	mov    QWORD PTR [rip+0x4c6f1],0x0        # 0x4510f8
  404a07:	mov    QWORD PTR [rip+0x4c6de],0x0        # 0x4510f0
  404a12:	je     0x404a38
  404a14:	mov    rax,QWORD PTR [rip+0x451f5]        # 0x449c10
  404a1b:	jmp    0x404a25
  404a1d:	nop    DWORD PTR [rax]
  404a20:	cmp    rsi,rax
  404a23:	je     0x404a38
  404a25:	mov    rax,QWORD PTR [rax]
  404a28:	test   rax,rax
  404a2b:	jne    0x404a20
  404a2d:	mov    QWORD PTR [rip+0x4c748],0x0        # 0x451180
  404a38:	mov    rcx,rbx
  404a3b:	add    rsp,0x28
  404a3f:	pop    rbx
  404a40:	pop    rsi
  404a41:	jmp    0x43a748
  404a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a50:	push   r15
  404a52:	push   r14
  404a54:	push   r13
  404a56:	push   r12
  404a58:	push   rbp
  404a59:	push   rdi
  404a5a:	push   rsi
  404a5b:	push   rbx
  404a5c:	sub    rsp,0x28
  404a60:	cmp    ecx,edx
  404a62:	mov    ebx,ecx
  404a64:	mov    r14d,edx
  404a67:	setg   r12b
  404a6b:	jle    0x404a72
  404a6d:	mov    ebx,edx
  404a6f:	mov    r14d,ecx
  404a72:	mov    r13d,r14d
  404a75:	lea    rsi,[rip+0x4c744]        # 0x4511c0
  404a7c:	movsxd rdi,ebx
  404a7f:	sub    r13d,ebx
  404a82:	lea    ecx,[r13+0x1]
  404a86:	movsxd r15,r13d
  404a89:	movsxd rcx,ecx
  404a8c:	call   0x4227b0
  404a91:	lea    rdx,[rsi+rdi*1]
  404a95:	mov    rcx,rax
  404a98:	mov    r8,r15
  404a9b:	mov    rbp,rax
  404a9e:	call   0x43a610
  404aa3:	mov    ecx,DWORD PTR [rip+0x4c6e3]        # 0x45118c
  404aa9:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
  404aaf:	mov    eax,ecx
  404ab1:	sub    eax,r14d
  404ab4:	je     0x404ada
  404ab6:	add    eax,ebx
  404ab8:	jmp    0x404ac3
  404aba:	nop    WORD PTR [rax+rax*1+0x0]
  404ac0:	movsxd rdi,ebx
  404ac3:	lea    r8d,[rbx+r13*1]
  404ac7:	add    ebx,0x1
  404aca:	cmp    ebx,eax
  404acc:	movsxd r8,r8d
  404acf:	movzx  r8d,BYTE PTR [rsi+r8*1]
  404ad4:	mov    BYTE PTR [rsi+rdi*1],r8b
  404ad8:	jne    0x404ac0
  404ada:	mov    edx,DWORD PTR [rip+0x4c5e8]        # 0x4510c8
  404ae0:	sub    ecx,r13d
  404ae3:	mov    DWORD PTR [rip+0x4c6a3],ecx        # 0x45118c
  404ae9:	test   edx,edx
  404aeb:	jne    0x404b47
  404aed:	mov    ebx,DWORD PTR [rip+0x4c66d]        # 0x451160
  404af3:	cmp    ebx,0xf
  404af6:	je     0x404bbe
  404afc:	mov    eax,DWORD PTR [rip+0x4c65a]        # 0x45115c
  404b02:	cmp    ebx,eax
  404b04:	jge    0x404be9
  404b0a:	mov    rax,QWORD PTR [rip+0x4c657]        # 0x451168
  404b11:	movsxd rsi,ebx
  404b14:	shl    rsi,0x3
  404b18:	lea    ecx,[rbx+0x1]
  404b1b:	add    rsi,rax
  404b1e:	mov    DWORD PTR [rip+0x4c63c],ecx        # 0x451160
  404b24:	mov    QWORD PTR [rsi],rbp
  404b27:	mov    DWORD PTR [rip+0x4c62b],ebx        # 0x451158
  404b2d:	add    edx,0x1
  404b30:	mov    DWORD PTR [rip+0x4c592],edx        # 0x4510c8
  404b36:	add    rsp,0x28
  404b3a:	pop    rbx
  404b3b:	pop    rsi
  404b3c:	pop    rdi
  404b3d:	pop    rbp
  404b3e:	pop    r12
  404b40:	pop    r13
  404b42:	pop    r14
  404b44:	pop    r15
  404b46:	ret    
  404b47:	movsxd rsi,DWORD PTR [rip+0x4c60a]        # 0x451158
  404b4e:	mov    rax,QWORD PTR [rip+0x4c613]        # 0x451168
  404b55:	mov    rbx,QWORD PTR [rax+rsi*8]
  404b59:	mov    rcx,rbx
  404b5c:	call   0x43a620
  404b61:	mov    rcx,rbp
  404b64:	mov    rdi,rax
  404b67:	call   0x43a620
  404b6c:	lea    rcx,[rdi+rax*1+0x1]
  404b71:	call   0x4227b0
  404b76:	test   r12b,r12b
  404b79:	mov    rdi,rax
  404b7c:	jne    0x404c29
  404b82:	mov    rdx,rbx
  404b85:	mov    rcx,rax
  404b88:	call   0x4323b0
  404b8d:	mov    rdx,rbp
  404b90:	mov    rcx,rax
  404b93:	call   0x43a640
  404b98:	mov    rcx,rbx
  404b9b:	call   0x43a748
  404ba0:	mov    rcx,rbp
  404ba3:	call   0x43a748
  404ba8:	mov    rax,QWORD PTR [rip+0x4c5b9]        # 0x451168
  404baf:	mov    edx,DWORD PTR [rip+0x4c513]        # 0x4510c8
  404bb5:	mov    QWORD PTR [rax+rsi*8],rdi
  404bb9:	jmp    0x404b2d
  404bbe:	mov    eax,DWORD PTR [rip+0x4c598]        # 0x45115c
  404bc4:	test   eax,eax
  404bc6:	jle    0x404c44
  404bc8:	mov    rax,QWORD PTR [rip+0x4c599]        # 0x451168
  404bcf:	xor    esi,esi
  404bd1:	xor    ebx,ebx
  404bd3:	add    rsi,rax
  404bd6:	mov    rcx,QWORD PTR [rsi]
  404bd9:	call   0x43a748
  404bde:	mov    edx,DWORD PTR [rip+0x4c4e4]        # 0x4510c8
  404be4:	jmp    0x404b24
  404be9:	movsxd rsi,ebx
  404bec:	shl    rsi,0x3
  404bf0:	add    eax,0xf
  404bf3:	mov    rcx,QWORD PTR [rip+0x4c56e]        # 0x451168
  404bfa:	mov    DWORD PTR [rip+0x4c55c],eax        # 0x45115c
  404c00:	cdqe   
  404c02:	lea    rdx,[rax*8+0x0]
  404c0a:	call   0x422820
  404c0f:	cmp    ebx,DWORD PTR [rip+0x4c54b]        # 0x451160
  404c15:	mov    QWORD PTR [rip+0x4c54c],rax        # 0x451168
  404c1c:	jne    0x404bd3
  404c1e:	mov    edx,DWORD PTR [rip+0x4c4a4]        # 0x4510c8
  404c24:	jmp    0x404b18
  404c29:	mov    rdx,rbp
  404c2c:	mov    rcx,rax
  404c2f:	call   0x4323b0
  404c34:	mov    rdx,rbx
  404c37:	mov    rcx,rax
  404c3a:	call   0x43a640
  404c3f:	jmp    0x404b98
  404c44:	xor    esi,esi
  404c46:	xor    ebx,ebx
  404c48:	jmp    0x404bf0
  404c4a:	nop    WORD PTR [rax+rax*1+0x0]
  404c50:	push   r15
  404c52:	push   r14
  404c54:	push   r13
  404c56:	push   r12
  404c58:	push   rbp
  404c59:	push   rdi
  404c5a:	push   rsi
  404c5b:	push   rbx
  404c5c:	sub    rsp,0x48
  404c60:	movsxd rbx,ecx
  404c63:	mov    r14d,edx
  404c66:	mov    esi,r9d
  404c69:	sub    r14d,ebx
  404c6c:	sub    esi,r8d
  404c6f:	mov    r13d,r8d
  404c72:	cmp    r14d,esi
  404c75:	mov    edi,r9d
  404c78:	jge    0x404d10
  404c7e:	movsxd r12,esi
  404c81:	lea    r15,[rip+0x4c538]        # 0x4511c0
  404c88:	mov    DWORD PTR [rsp+0x28],edx
  404c8c:	mov    rcx,r12
  404c8f:	sub    esi,r14d
  404c92:	call   0x4227b0
  404c97:	movsxd rdx,r13d
  404c9a:	mov    r8,r12
  404c9d:	mov    rcx,rax
  404ca0:	add    rdx,r15
  404ca3:	mov    rbp,rax
  404ca6:	add    rbx,r15
  404ca9:	call   0x43a6b8
  404cae:	movsxd rcx,edi
  404cb1:	movsxd r8,r14d
  404cb4:	mov    rdx,rbx
  404cb7:	mov    rdi,rcx
  404cba:	movsxd rsi,esi
  404cbd:	sub    rdi,r8
  404cc0:	lea    rcx,[rdi+r15*1]
  404cc4:	call   0x43a6b8
  404cc9:	movsxd rcx,DWORD PTR [rsp+0x28]
  404cce:	mov    r8d,r13d
  404cd1:	lea    rdx,[rcx+r15*1]
  404cd5:	sub    r8d,ecx
  404cd8:	add    rcx,rsi
  404cdb:	add    rcx,r15
  404cde:	movsxd r8,r8d
  404ce1:	call   0x43a6b0
  404ce6:	mov    r8,r12
  404ce9:	mov    rdx,rbp
  404cec:	mov    rcx,rbx
  404cef:	call   0x43a6b8
  404cf4:	mov    rcx,rbp
  404cf7:	add    rsp,0x48
  404cfb:	pop    rbx
  404cfc:	pop    rsi
  404cfd:	pop    rdi
  404cfe:	pop    rbp
  404cff:	pop    r12
  404d01:	pop    r13
  404d03:	pop    r14
  404d05:	pop    r15
  404d07:	jmp    0x43a748
  404d0c:	nop    DWORD PTR [rax+0x0]
  404d10:	lea    rdi,[rip+0x4c4a9]        # 0x4511c0
  404d17:	movsxd r12,r14d
  404d1a:	mov    DWORD PTR [rsp+0x3c],edx
  404d1e:	mov    rcx,r12
  404d21:	movsxd r15,r13d
  404d24:	sub    r14d,esi
  404d27:	call   0x4227b0
  404d2c:	lea    r11,[rbx+rdi*1]
  404d30:	mov    r8,r12
  404d33:	mov    rcx,rax
  404d36:	mov    rbp,rax
  404d39:	movsxd r14,r14d
  404d3c:	mov    rdx,r11
  404d3f:	mov    QWORD PTR [rsp+0x30],r11
  404d44:	call   0x43a6b8
  404d49:	mov    r11,QWORD PTR [rsp+0x30]
  404d4e:	movsxd r9,esi
  404d51:	lea    rdx,[r15+rdi*1]
  404d55:	mov    r8,r9
  404d58:	mov    QWORD PTR [rsp+0x28],r9
  404d5d:	sub    r15,r14
  404d60:	mov    rcx,r11
  404d63:	call   0x43a6b8
  404d68:	movsxd rdx,DWORD PTR [rsp+0x3c]
  404d6d:	mov    r9,QWORD PTR [rsp+0x28]
  404d72:	mov    r8d,r13d
  404d75:	add    rbx,r9
  404d78:	sub    r8d,edx
  404d7b:	lea    rcx,[rbx+rdi*1]
  404d7f:	add    rdx,rdi
  404d82:	movsxd r8,r8d
  404d85:	call   0x43a6b0
  404d8a:	lea    rcx,[r15+rdi*1]
  404d8e:	mov    r8,r12
  404d91:	mov    rdx,rbp
  404d94:	jmp    0x404cef
  404d99:	nop    DWORD PTR [rax+0x0]
  404da0:	mov    rdx,QWORD PTR [rdx]
  404da3:	mov    rax,QWORD PTR [rcx]
  404da6:	mov    rdx,QWORD PTR [rdx]
  404da9:	mov    rcx,QWORD PTR [rax]
  404dac:	jmp    0x4213b0
  404db1:	nop    DWORD PTR [rax+rax*1+0x0]
  404db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dc0:	push   r15
  404dc2:	push   r14
  404dc4:	push   r13
  404dc6:	push   r12
  404dc8:	push   rbp
  404dc9:	push   rdi
  404dca:	push   rsi
  404dcb:	push   rbx
  404dcc:	sub    rsp,0x48
  404dd0:	cmp    QWORD PTR [rip+0x4c2e8],0x0        # 0x4510c0
  404dd8:	je     0x404f90
  404dde:	mov    edi,DWORD PTR [rip+0x4c3a8]        # 0x45118c
  404de4:	sub    edi,DWORD PTR [rip+0x4c3a6]        # 0x451190
  404dea:	lea    ecx,[rdi+0x1]
  404ded:	movsxd rdi,edi
  404df0:	movsxd rcx,ecx
  404df3:	call   0x4227b0
  404df8:	movsxd rdx,DWORD PTR [rip+0x4c391]        # 0x451190
  404dff:	mov    r12,rax
  404e02:	lea    rax,[rip+0x4c3b7]        # 0x4511c0
  404e09:	mov    r8,rdi
  404e0c:	mov    rcx,r12
  404e0f:	add    rdx,rax
  404e12:	call   0x43a610
  404e17:	mov    rbx,QWORD PTR [rip+0x4c2da]        # 0x4510f8
  404e1e:	mov    BYTE PTR [r12+rdi*1],0x0
  404e23:	test   rbx,rbx
  404e26:	je     0x404e41
  404e28:	mov    rax,QWORD PTR [rip+0x4c2c1]        # 0x4510f0
  404e2f:	test   rax,rax
  404e32:	je     0x404e41
  404e34:	cmp    rax,QWORD PTR [rip+0x4c285]        # 0x4510c0
  404e3b:	je     0x4051fc
  404e41:	mov    rcx,rbx
  404e44:	call   0x43a748
  404e49:	mov    rax,QWORD PTR [rip+0x4c270]        # 0x4510c0
  404e50:	mov    QWORD PTR [rip+0x4c2a1],r12        # 0x4510f8
  404e57:	mov    QWORD PTR [rip+0x4c2e6],0x0        # 0x451148
  404e62:	mov    QWORD PTR [rip+0x4c2cb],0x0        # 0x451138
  404e6d:	mov    rbx,QWORD PTR [rax]
  404e70:	mov    QWORD PTR [rip+0x4c279],rax        # 0x4510f0
  404e77:	test   rbx,rbx
  404e7a:	je     0x404fa6
  404e80:	mov    esi,0x8
  404e85:	xor    r13d,r13d
  404e88:	movabs rbp,0x1555555555555554
  404e92:	jmp    0x404ede
  404e94:	mov    rax,QWORD PTR [rip+0x4c2b5]        # 0x451150
  404e9b:	lea    rdx,[rcx+0x1]
  404e9f:	mov    QWORD PTR [rax+rcx*8],rbx
  404ea3:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  404eac:	mov    QWORD PTR [rip+0x4c295],rdx        # 0x451148
  404eb3:	test   r13d,r13d
  404eb6:	jne    0x404ec6
  404eb8:	cmp    QWORD PTR [rip+0x4c288],0x64        # 0x451148
  404ec0:	ja     0x404f74
  404ec6:	mov    rax,QWORD PTR [rip+0x4c1f3]        # 0x4510c0
  404ecd:	mov    rbx,QWORD PTR [rax+rsi*1]
  404ed1:	add    rsi,0x8
  404ed5:	test   rbx,rbx
  404ed8:	je     0x404fc0
  404ede:	mov    rax,QWORD PTR [rip+0x4c24b]        # 0x451130
  404ee5:	test   rax,rax
  404ee8:	je     0x404ef3
  404eea:	mov    rcx,rbx
  404eed:	call   rax
  404eef:	test   eax,eax
  404ef1:	jne    0x404ec6
  404ef3:	mov    rdx,QWORD PTR [rbx]
  404ef6:	mov    r8,rdi
  404ef9:	mov    rcx,r12
  404efc:	call   0x421e70
  404f01:	test   eax,eax
  404f03:	jne    0x404eb3
  404f05:	mov    rcx,QWORD PTR [rip+0x4c23c]        # 0x451148
  404f0c:	mov    rdx,QWORD PTR [rip+0x4c22d]        # 0x451140
  404f13:	lea    rax,[rcx+0x2]
  404f17:	cmp    rax,rdx
  404f1a:	jb     0x404e94
  404f20:	test   rdx,rdx
  404f23:	mov    rcx,QWORD PTR [rip+0x4c226]        # 0x451150
  404f2a:	jne    0x404f65
  404f2c:	test   rcx,rcx
  404f2f:	je     0x40502b
  404f35:	mov    dl,0x14
  404f37:	mov    rax,rdx
  404f3a:	shr    rax,1
  404f3d:	lea    rdx,[rdx+rax*1+0x1]
  404f42:	mov    QWORD PTR [rip+0x4c1f7],rdx        # 0x451140
  404f49:	shl    rdx,0x3
  404f4d:	call   0x422820
  404f52:	mov    rcx,QWORD PTR [rip+0x4c1ef]        # 0x451148
  404f59:	mov    QWORD PTR [rip+0x4c1f0],rax        # 0x451150
  404f60:	jmp    0x404e9b
  404f65:	test   rcx,rcx
  404f68:	je     0x404f42
  404f6a:	cmp    rdx,rbp
  404f6d:	jbe    0x404f37
  404f6f:	call   0x422a20
  404f74:	lea    rcx,[rip+0x3c285]        # 0x441200
  404f7b:	mov    r13b,0x1
  404f7e:	call   0x433f18
  404f83:	mov    rcx,rax
  404f86:	call   0x4210d0
  404f8b:	jmp    0x404ec6
  404f90:	mov    QWORD PTR [rip+0x4c1ad],0x0        # 0x451148
  404f9b:	mov    QWORD PTR [rip+0x4c192],0x0        # 0x451138
  404fa6:	add    rsp,0x48
  404faa:	pop    rbx
  404fab:	pop    rsi
  404fac:	pop    rdi
  404fad:	pop    rbp
  404fae:	pop    r12
  404fb0:	pop    r13
  404fb2:	pop    r14
  404fb4:	pop    r15
  404fb6:	ret    
  404fb7:	nop    WORD PTR [rax+rax*1+0x0]
  404fc0:	mov    rdx,QWORD PTR [rip+0x4c181]        # 0x451148
  404fc7:	test   rdx,rdx
  404fca:	je     0x404fa6
  404fcc:	mov    rcx,QWORD PTR [rip+0x4c17d]        # 0x451150
  404fd3:	lea    r9,[rip+0xfffffffffffffdc6]        # 0x404da0
  404fda:	mov    r8d,0x8
  404fe0:	mov    edi,0x1
  404fe5:	call   0x43a690
  404fea:	mov    rbx,QWORD PTR [rip+0x4c15f]        # 0x451150
  404ff1:	mov    rax,QWORD PTR [rip+0x4c150]        # 0x451148
  404ff8:	lea    rsi,[rbx+rax*8-0x8]
  404ffd:	jmp    0x40500b
  404fff:	nop
  405000:	mov    QWORD PTR [rbx],0x0
  405007:	add    rbx,0x8
  40500b:	cmp    rbx,rsi
  40500e:	je     0x405035
  405010:	mov    rax,QWORD PTR [rbx]
  405013:	mov    rdx,QWORD PTR [rbx+0x8]
  405017:	mov    rcx,QWORD PTR [rax]
  40501a:	mov    rdx,QWORD PTR [rdx]
  40501d:	call   0x43a648
  405022:	test   eax,eax
  405024:	je     0x405000
  405026:	add    edi,0x1
  405029:	jmp    0x405007
  40502b:	mov    edx,0x14
  405030:	jmp    0x404f42
  405035:	lea    ebx,[rdi+0x1]
  405038:	movsxd rbx,ebx
  40503b:	shl    rbx,0x3
  40503f:	mov    rcx,rbx
  405042:	call   0x4227b0
  405047:	mov    rcx,QWORD PTR [rip+0x4c0fa]        # 0x451148
  40504e:	mov    rsi,QWORD PTR [rip+0x4c0fb]        # 0x451150
  405055:	test   rcx,rcx
  405058:	je     0x40507d
  40505a:	lea    r10,[rsi+rcx*8]
  40505e:	mov    rdx,rsi
  405061:	xor    r9d,r9d
  405064:	mov    r8,QWORD PTR [rdx]
  405067:	test   r8,r8
  40506a:	je     0x405074
  40506c:	mov    QWORD PTR [rax+r9*8],r8
  405070:	add    r9,0x1
  405074:	add    rdx,0x8
  405078:	cmp    rdx,r10
  40507b:	jne    0x405064
  40507d:	movsxd rdi,edi
  405080:	xor    edx,edx
  405082:	mov    QWORD PTR [rsp+0x38],rdi
  405087:	nop    WORD PTR [rax+rax*1+0x0]
  405090:	mov    r8,QWORD PTR [rax+rdx*8]
  405094:	mov    QWORD PTR [rsi+rdx*8],r8
  405098:	add    rdx,0x1
  40509c:	cmp    rdx,QWORD PTR [rsp+0x38]
  4050a1:	jne    0x405090
  4050a3:	mov    rdi,QWORD PTR [rsp+0x38]
  4050a8:	mov    QWORD PTR [rsi+rbx*1-0x8],0x0
  4050b1:	mov    rcx,rax
  4050b4:	mov    QWORD PTR [rip+0x4c08d],rdi        # 0x451148
  4050bb:	call   0x43a748
  4050c0:	cmp    rdi,0x1
  4050c4:	je     0x405248
  4050ca:	lea    rax,[rsi+rdi*8-0x8]
  4050cf:	mov    rbx,QWORD PTR [rip+0x4faba]        # 0x454b90
  4050d6:	mov    DWORD PTR [rsp+0x28],0x186a0
  4050de:	mov    QWORD PTR [rsp+0x30],rax
  4050e3:	mov    rax,QWORD PTR [rsi]
  4050e6:	xor    r15d,r15d
  4050e9:	mov    rbp,QWORD PTR [rax]
  4050ec:	jmp    0x40510b
  4050ee:	xchg   ax,ax
  4050f0:	mov    rax,QWORD PTR [rsi+0x8]
  4050f4:	mov    rax,QWORD PTR [rax]
  4050f7:	movsx  ecx,BYTE PTR [rax+r15*1]
  4050fc:	add    r15,0x1
  405100:	call   rbx
  405102:	test   eax,eax
  405104:	je     0x40511d
  405106:	cmp    r14d,eax
  405109:	jne    0x40511d
  40510b:	movsx  ecx,BYTE PTR [rbp+r15*1+0x0]
  405111:	mov    edi,r15d
  405114:	call   rbx
  405116:	test   eax,eax
  405118:	mov    r14d,eax
  40511b:	jne    0x4050f0
  40511d:	mov    eax,DWORD PTR [rsp+0x28]
  405121:	cmp    eax,edi
  405123:	cmovle edi,eax
  405126:	add    rsi,0x8
  40512a:	cmp    rsi,QWORD PTR [rsp+0x30]
  40512f:	mov    DWORD PTR [rsp+0x28],edi
  405133:	jne    0x4050e3
  405135:	mov    edi,DWORD PTR [rsp+0x28]
  405139:	mov    rcx,QWORD PTR [rip+0x4bfc0]        # 0x451100
  405140:	movsxd rax,edi
  405143:	mov    QWORD PTR [rsp+0x28],rax
  405148:	call   0x43a748
  40514d:	lea    ecx,[rdi+0x1]
  405150:	movsxd rcx,ecx
  405153:	call   0x4227b0
  405158:	mov    rbp,QWORD PTR [rip+0x4bfe9]        # 0x451148
  40515f:	mov    r14,rax
  405162:	mov    QWORD PTR [rip+0x4bf97],rax        # 0x451100
  405169:	cmp    rbp,0x1
  40516d:	jbe    0x405230
  405173:	mov    rcx,r12
  405176:	xor    ebx,ebx
  405178:	call   0x43a620
  40517d:	mov    rsi,QWORD PTR [rip+0x4bfcc]        # 0x451150
  405184:	movsxd r15,eax
  405187:	nop    WORD PTR [rax+rax*1+0x0]
  405190:	mov    rax,QWORD PTR [rsi+rbx*8]
  405194:	mov    r8,r15
  405197:	mov    rcx,r12
  40519a:	mov    rdi,QWORD PTR [rax]
  40519d:	mov    rdx,rdi
  4051a0:	call   0x43a618
  4051a5:	test   eax,eax
  4051a7:	je     0x405227
  4051a9:	add    rbx,0x1
  4051ad:	cmp    rbx,rbp
  4051b0:	jne    0x405190
  4051b2:	mov    rax,QWORD PTR [rsi]
  4051b5:	mov    rdi,QWORD PTR [rax]
  4051b8:	mov    rsi,QWORD PTR [rsp+0x28]
  4051bd:	mov    rdx,rdi
  4051c0:	mov    rcx,r14
  4051c3:	mov    r8,rsi
  4051c6:	call   0x43a610
  4051cb:	lea    rax,[rip+0x4bf2e]        # 0x451100
  4051d2:	test   r13d,r13d
  4051d5:	mov    BYTE PTR [r14+rsi*1],0x0
  4051da:	mov    QWORD PTR [rip+0x4bf57],rax        # 0x451138
  4051e1:	je     0x404fa6
  4051e7:	add    rsp,0x48
  4051eb:	pop    rbx
  4051ec:	pop    rsi
  4051ed:	pop    rdi
  4051ee:	pop    rbp
  4051ef:	pop    r12
  4051f1:	pop    r13
  4051f3:	pop    r14
  4051f5:	pop    r15
  4051f7:	jmp    0x404890
  4051fc:	mov    rdx,r12
  4051ff:	mov    rcx,rbx
  405202:	call   0x43a648
  405207:	test   eax,eax
  405209:	jne    0x404e41
  40520f:	mov    rcx,r12
  405212:	add    rsp,0x48
  405216:	pop    rbx
  405217:	pop    rsi
  405218:	pop    rdi
  405219:	pop    rbp
  40521a:	pop    r12
  40521c:	pop    r13
  40521e:	pop    r14
  405220:	pop    r15
  405222:	jmp    0x43a748
  405227:	cmp    rbp,rbx
  40522a:	ja     0x4051b8
  40522c:	jmp    0x4051b2
  40522e:	xchg   ax,ax
  405230:	mov    rdi,QWORD PTR [rsp+0x38]
  405235:	mov    rax,QWORD PTR [rip+0x4bf14]        # 0x451150
  40523c:	mov    rax,QWORD PTR [rax+rdi*8]
  405240:	mov    rdi,QWORD PTR [rax]
  405243:	jmp    0x4051b8
  405248:	mov    rax,QWORD PTR [rsi]
  40524b:	mov    QWORD PTR [rip+0x4bee6],rax        # 0x451138
  405252:	jmp    0x404fa6
  405257:	nop    WORD PTR [rax+rax*1+0x0]
  405260:	push   rsi
  405261:	push   rbx
  405262:	sub    rsp,0x28
  405266:	mov    eax,DWORD PTR [rip+0x4be64]        # 0x4510d0
  40526c:	test   eax,eax
  40526e:	jne    0x4052d4
  405270:	mov    eax,DWORD PTR [rip+0x4bf1a]        # 0x451190
  405276:	mov    r8d,DWORD PTR [rip+0x4bf0f]        # 0x45118c
  40527d:	cmp    eax,r8d
  405280:	je     0x4052c2
  405282:	mov    ebx,r8d
  405285:	sub    ebx,eax
  405287:	lea    ecx,[rbx+0x1]
  40528a:	movsxd rbx,ebx
  40528d:	movsxd rcx,ecx
  405290:	call   0x4227b0
  405295:	movsxd rdx,DWORD PTR [rip+0x4bef4]        # 0x451190
  40529c:	mov    rsi,rax
  40529f:	lea    rax,[rip+0x4bf1a]        # 0x4511c0
  4052a6:	mov    r8,rbx
  4052a9:	mov    rcx,rsi
  4052ac:	add    rdx,rax
  4052af:	call   0x43a610
  4052b4:	mov    rax,rsi
  4052b7:	mov    BYTE PTR [rsi+rbx*1],0x0
  4052bb:	add    rsp,0x28
  4052bf:	pop    rbx
  4052c0:	pop    rsi
  4052c1:	ret    
  4052c2:	lea    rcx,[rip+0x3bf4f]        # 0x441218
  4052c9:	add    rsp,0x28
  4052cd:	pop    rbx
  4052ce:	pop    rsi
  4052cf:	jmp    0x422a00
  4052d4:	xor    esi,esi
  4052d6:	mov    DWORD PTR [rip+0x4bdf0],0x0        # 0x4510d0
  4052e0:	mov    rax,rsi
  4052e3:	add    rsp,0x28
  4052e7:	pop    rbx
  4052e8:	pop    rsi
  4052e9:	ret    
  4052ea:	nop    WORD PTR [rax+rax*1+0x0]
  4052f0:	push   r13
  4052f2:	push   r12
  4052f4:	push   rbp
  4052f5:	push   rdi
  4052f6:	push   rsi
  4052f7:	push   rbx
  4052f8:	sub    rsp,0x28
  4052fc:	mov    r13,QWORD PTR [rip+0x4490d]        # 0x449c10
  405303:	mov    rbx,QWORD PTR [r13+0x0]
  405307:	test   rbx,rbx
  40530a:	je     0x4053e0
  405310:	xor    ebp,ebp
  405312:	mov    r12d,0xe
  405318:	jmp    0x40534a
  40531a:	nop    WORD PTR [rax+rax*1+0x0]
  405320:	mov    rax,QWORD PTR [rbx+0x20]
  405324:	lea    rdi,[rip+0x3beee]        # 0x441219
  40532b:	mov    rcx,r12
  40532e:	mov    rsi,QWORD PTR [rax+0x10]
  405332:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405334:	jne    0x405357
  405336:	cmp    rbx,QWORD PTR [rip+0x4be3b]        # 0x451178
  40533d:	mov    rbp,rbx
  405340:	je     0x405365
  405342:	mov    rbx,QWORD PTR [rbx]
  405345:	test   rbx,rbx
  405348:	je     0x405380
  40534a:	mov    rcx,QWORD PTR [rbx+0x20]
  40534e:	call   0x409f50
  405353:	test   eax,eax
  405355:	jne    0x405320
  405357:	cmp    rbx,rbp
  40535a:	jne    0x405342
  40535c:	cmp    rbx,QWORD PTR [rip+0x4be15]        # 0x451178
  405363:	jne    0x405342
  405365:	mov    rcx,rbx
  405368:	add    rsp,0x28
  40536c:	pop    rbx
  40536d:	pop    rsi
  40536e:	pop    rdi
  40536f:	pop    rbp
  405370:	pop    r12
  405372:	pop    r13
  405374:	jmp    0x414d90
  405379:	nop    DWORD PTR [rax+0x0]
  405380:	test   rbp,rbp
  405383:	je     0x4053e0
  405385:	cmp    QWORD PTR [r13+0x0],rbp
  405389:	je     0x4053d8
  40538b:	mov    rcx,QWORD PTR [rip+0x4bd4e]        # 0x4510e0
  405392:	test   rcx,rcx
  405395:	je     0x4053c4
  405397:	mov    r8,QWORD PTR [rip+0x4bd4a]        # 0x4510e8
  40539e:	mov    rax,QWORD PTR [r8]
  4053a1:	cmp    QWORD PTR [rax+0x78],0x0
  4053a6:	jne    0x4053e0
  4053a8:	xor    eax,eax
  4053aa:	jmp    0x4053bb
  4053ac:	nop    DWORD PTR [rax+0x0]
  4053b0:	mov    rdx,QWORD PTR [r8+rax*8]
  4053b4:	cmp    QWORD PTR [rdx+0x78],0x0
  4053b9:	jne    0x4053e0
  4053bb:	add    rax,0x1
  4053bf:	cmp    rax,rcx
  4053c2:	jne    0x4053b0
  4053c4:	mov    rcx,rbp
  4053c7:	add    rsp,0x28
  4053cb:	pop    rbx
  4053cc:	pop    rsi
  4053cd:	pop    rdi
  4053ce:	pop    rbp
  4053cf:	pop    r12
  4053d1:	pop    r13
  4053d3:	jmp    0x416d80
  4053d8:	cmp    QWORD PTR [rbp+0x0],0x0
  4053dd:	jne    0x40538b
  4053df:	nop
  4053e0:	add    rsp,0x28
  4053e4:	pop    rbx
  4053e5:	pop    rsi
  4053e6:	pop    rdi
  4053e7:	pop    rbp
  4053e8:	pop    r12
  4053ea:	pop    r13
  4053ec:	ret    
  4053ed:	nop    DWORD PTR [rax]
  4053f0:	push   rdi
  4053f1:	push   rsi
  4053f2:	push   rbx
  4053f3:	sub    rsp,0x20
  4053f7:	mov    rbx,rcx
  4053fa:	mov    rcx,QWORD PTR [rcx+0x20]
  4053fe:	call   0x409f50
  405403:	test   eax,eax
  405405:	mov    rax,QWORD PTR [rbx+0x20]
  405409:	je     0x405431
  40540b:	mov    rsi,QWORD PTR [rax+0x10]
  40540f:	lea    rdi,[rip+0x3be03]        # 0x441219
  405416:	mov    ecx,0xe
  40541b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40541d:	jne    0x405431
  40541f:	mov    rdx,QWORD PTR [rip+0x447ea]        # 0x449c10
  405426:	cmp    rbx,QWORD PTR [rdx]
  405429:	jne    0x40543f
  40542b:	cmp    QWORD PTR [rbx],0x0
  40542f:	jne    0x40543f
  405431:	mov    QWORD PTR [rip+0x4bd40],rbx        # 0x451178
  405438:	mov    QWORD PTR [rip+0x4bd31],rax        # 0x451170
  40543f:	add    rsp,0x20
  405443:	pop    rbx
  405444:	pop    rsi
  405445:	pop    rdi
  405446:	ret    
  405447:	nop    WORD PTR [rax+rax*1+0x0]
  405450:	push   rbx
  405451:	sub    rsp,0x20
  405455:	mov    rbx,QWORD PTR [rip+0x44784]        # 0x449be0
  40545c:	lea    rax,[rip+0x37bdd]        # 0x43d040
  405463:	mov    rcx,QWORD PTR [rbx]
  405466:	cmp    QWORD PTR [rcx+0x20],rax
  40546a:	je     0x405474
  40546c:	call   0x404890
  405471:	mov    rcx,QWORD PTR [rbx]
  405474:	mov    eax,DWORD PTR [rip+0x4bd1a]        # 0x451194
  40547a:	lea    rdx,[rip+0x4bd3f]        # 0x4511c0
  405481:	mov    DWORD PTR [rcx+0x2c],eax
  405484:	movsxd rax,DWORD PTR [rip+0x4bd01]        # 0x45118c
  40548b:	mov    BYTE PTR [rdx+rax*1],0xa
  40548f:	mov    QWORD PTR [rcx+0x48],0x0
  405497:	call   0x403da0
  40549c:	mov    rax,QWORD PTR [rip+0x4434d]        # 0x4497f0
  4054a3:	mov    rcx,QWORD PTR [rax]
  4054a6:	add    rsp,0x20
  4054aa:	pop    rbx
  4054ab:	jmp    0x4045a0
  4054b0:	push   r14
  4054b2:	push   r13
  4054b4:	push   r12
  4054b6:	push   rbp
  4054b7:	push   rdi
  4054b8:	push   rsi
  4054b9:	push   rbx
  4054ba:	sub    rsp,0x40
  4054be:	mov    r13,QWORD PTR [rip+0x4432b]        # 0x4497f0
  4054c5:	mov    r12,QWORD PTR [rip+0x44404]        # 0x4498d0
  4054cc:	lea    rdi,[rip+0xfffffffffffff1cd]        # 0x4046a0
  4054d3:	lea    rbp,[rsp+0x3c]
  4054d8:	mov    r14,QWORD PTR [rip+0x44701]        # 0x449be0
  4054df:	jmp    0x405508
  4054e1:	mov    edx,DWORD PTR [rsp+0x3c]
  4054e5:	mov    rcx,QWORD PTR [r14]
  4054e8:	call   rax
  4054ea:	cmp    esi,DWORD PTR [rip+0x4bbd8]        # 0x4510c8
  4054f0:	mov    QWORD PTR [rip+0x4bdd1],rbx        # 0x4512c8
  4054f7:	je     0x405559
  4054f9:	cmp    rbx,rdi
  4054fc:	je     0x405570
  4054fe:	mov    eax,DWORD PTR [rip+0x4bbcc]        # 0x4510d0
  405504:	test   eax,eax
  405506:	jne    0x405570
  405508:	mov    esi,DWORD PTR [rip+0x4bbba]        # 0x4510c8
  40550e:	call   0x405450
  405513:	call   0x4140a0
  405518:	test   eax,eax
  40551a:	je     0x405590
  40551c:	mov    rcx,QWORD PTR [r13+0x0]
  405520:	call   0x4045a0
  405525:	mov    QWORD PTR [rsp+0x20],rbp
  40552a:	mov    rcx,QWORD PTR [r12]
  40552e:	xor    r8d,r8d
  405531:	xor    edx,edx
  405533:	mov    r9d,0x1
  405539:	call   0x41a3d0
  40553e:	test   rax,rax
  405541:	mov    rbx,rax
  405544:	jne    0x4054e1
  405546:	cmp    esi,DWORD PTR [rip+0x4bb7c]        # 0x4510c8
  40554c:	mov    QWORD PTR [rip+0x4bd71],0x0        # 0x4512c8
  405557:	jne    0x4054fe
  405559:	cmp    rbx,rdi
  40555c:	mov    DWORD PTR [rip+0x4bb62],0x0        # 0x4510c8
  405566:	jne    0x4054fe
  405568:	nop    DWORD PTR [rax+rax*1+0x0]
  405570:	mov    QWORD PTR [rip+0x4bd4d],0x0        # 0x4512c8
  40557b:	add    rsp,0x40
  40557f:	pop    rbx
  405580:	pop    rsi
  405581:	pop    rdi
  405582:	pop    rbp
  405583:	pop    r12
  405585:	pop    r13
  405587:	pop    r14
  405589:	ret    
  40558a:	nop    WORD PTR [rax+rax*1+0x0]
  405590:	call   0x403fa0
  405595:	jmp    0x40551c
  405597:	nop    WORD PTR [rax+rax*1+0x0]
  4055a0:	push   rbx
  4055a1:	sub    rsp,0x30
  4055a5:	mov    r8d,DWORD PTR [rip+0x4bb20]        # 0x4510cc
  4055ac:	test   r8d,r8d
  4055af:	jne    0x405640
  4055b5:	call   0x404840
  4055ba:	call   0x404890
  4055bf:	mov    rbx,QWORD PTR [rip+0x4422a]        # 0x4497f0
  4055c6:	mov    rcx,QWORD PTR [rbx]
  4055c9:	call   0x4053f0
  4055ce:	mov    rax,QWORD PTR [rip+0x4460b]        # 0x449be0
  4055d5:	add    DWORD PTR [rip+0x4baf0],0x1        # 0x4510cc
  4055dc:	mov    rax,QWORD PTR [rax]
  4055df:	mov    QWORD PTR [rbx],rax
  4055e2:	call   0x4054b0
  4055e7:	call   0x421060
  4055ec:	mov    rax,QWORD PTR [rip+0x4bb85]        # 0x451178
  4055f3:	sub    DWORD PTR [rip+0x4bad2],0x1        # 0x4510cc
  4055fa:	mov    QWORD PTR [rbx],rax
  4055fd:	call   0x4052f0
  405602:	mov    rcx,QWORD PTR [rbx]
  405605:	call   0x4045a0
  40560a:	call   QWORD PTR [rip+0x4f2e0]        # 0x4548f0
  405610:	lea    rcx,[rax+0x30]
  405614:	call   0x43a780
  405619:	call   0x405260
  40561e:	mov    edx,DWORD PTR [rip+0x4baa8]        # 0x4510cc
  405624:	test   edx,edx
  405626:	je     0x405637
  405628:	mov    QWORD PTR [rsp+0x28],rax
  40562d:	call   0x404900
  405632:	mov    rax,QWORD PTR [rsp+0x28]
  405637:	add    rsp,0x30
  40563b:	pop    rbx
  40563c:	ret    
  40563d:	nop    DWORD PTR [rax]
  405640:	mov    QWORD PTR [rsp+0x28],rcx
  405645:	call   0x4046b0
  40564a:	mov    rcx,QWORD PTR [rsp+0x28]
  40564f:	jmp    0x4055b5
  405654:	xchg   ax,ax
  405656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405660:	push   rdi
  405661:	push   rsi
  405662:	push   rbx
  405663:	sub    rsp,0x20
  405667:	test   edx,edx
  405669:	mov    edi,edx
  40566b:	js     0x4056e1
  40566d:	lea    rsi,[rip+0x4bb4c]        # 0x4511c0
  405674:	sub    edi,0x1
  405677:	cmp    edi,0xffffffff
  40567a:	je     0x4056d9
  40567c:	movsxd rax,DWORD PTR [rip+0x4bb11]        # 0x451194
  405683:	lea    rbx,[rsi+rax*1]
  405687:	cmp    rbx,rsi
  40568a:	ja     0x40569c
  40568c:	jmp    0x4056b8
  40568e:	xchg   ax,ax
  405690:	cmp    rbx,rsi
  405693:	je     0x4056b8
  405695:	movsxd rax,DWORD PTR [rip+0x4baf8]        # 0x451194
  40569c:	sub    rbx,0x1
  4056a0:	add    rax,rsi
  4056a3:	xor    r8d,r8d
  4056a6:	sub    rax,rbx
  4056a9:	mov    rcx,rbx
  4056ac:	mov    rdx,rax
  4056af:	call   0x435870
  4056b4:	test   eax,eax
  4056b6:	jle    0x405690
  4056b8:	mov    eax,DWORD PTR [rip+0x4bad2]        # 0x451190
  4056be:	sub    rbx,rsi
  4056c1:	mov    DWORD PTR [rip+0x4bacd],ebx        # 0x451194
  4056c7:	cmp    ebx,eax
  4056c9:	jge    0x405674
  4056cb:	sub    edi,0x1
  4056ce:	mov    DWORD PTR [rip+0x4bac0],eax        # 0x451194
  4056d4:	cmp    edi,0xffffffff
  4056d7:	jne    0x40567c
  4056d9:	add    rsp,0x20
  4056dd:	pop    rbx
  4056de:	pop    rsi
  4056df:	pop    rdi
  4056e0:	ret    
  4056e1:	neg    edi
  4056e3:	mov    edx,edi
  4056e5:	add    rsp,0x20
  4056e9:	pop    rbx
  4056ea:	pop    rsi
  4056eb:	pop    rdi
  4056ec:	jmp    0x4056f0
  4056ee:	xchg   ax,ax
  4056f0:	push   r12
  4056f2:	push   rbp
  4056f3:	push   rdi
  4056f4:	push   rsi
  4056f5:	push   rbx
  4056f6:	sub    rsp,0x70
  4056fa:	test   edx,edx
  4056fc:	mov    ebx,edx
  4056fe:	js     0x405937
  405704:	movsxd rax,DWORD PTR [rip+0x4ba89]        # 0x451194
  40570b:	mov    r8d,DWORD PTR [rip+0x4ba7a]        # 0x45118c
  405712:	lea    rsi,[rip+0x4baa7]        # 0x4511c0
  405719:	lea    rdi,[rsp+0x20]
  40571e:	mov    BYTE PTR [rsp+0x28],0x0
  405723:	mov    DWORD PTR [rsp+0x2c],0x0
  40572b:	mov    BYTE PTR [rsp+0x30],0x0
  405730:	mov    rbp,QWORD PTR [rip+0x44289]        # 0x4499c0
  405737:	lea    r12,[rdi+0xc]
  40573b:	mov    rcx,rax
  40573e:	add    rax,rsi
  405741:	sub    r8d,ecx
  405744:	mov    QWORD PTR [rsp+0x38],rax
  405749:	movsxd r8,r8d
  40574c:	add    r8,rax
  40574f:	mov    QWORD PTR [rsp+0x20],r8
  405754:	jmp    0x4057d3
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405760:	movzx  edx,BYTE PTR [rax]
  405763:	mov    ecx,edx
  405765:	and    edx,0x1f
  405768:	shr    cl,0x5
  40576b:	and    ecx,0x7
  40576e:	mov    ecx,DWORD PTR [rbp+rcx*4+0x0]
  405772:	bt     ecx,edx
  405775:	jae    0x405880
  40577b:	mov    QWORD PTR [rsp+0x40],0x1
  405784:	movsx  ax,BYTE PTR [rax]
  405788:	mov    BYTE PTR [rsp+0x48],0x1
  40578d:	mov    WORD PTR [rsp+0x4a],ax
  405792:	sub    ebx,0x1
  405795:	cmp    ebx,0xffffffff
  405798:	je     0x405870
  40579e:	mov    rax,QWORD PTR [rsp+0x40]
  4057a3:	add    rax,QWORD PTR [rsp+0x38]
  4057a8:	mov    ecx,DWORD PTR [rip+0x4b9de]        # 0x45118c
  4057ae:	mov    BYTE PTR [rsp+0x30],0x0
  4057b3:	mov    rdx,rax
  4057b6:	mov    QWORD PTR [rsp+0x38],rax
  4057bb:	sub    rdx,rsi
  4057be:	cmp    edx,ecx
  4057c0:	mov    DWORD PTR [rip+0x4b9ce],edx        # 0x451194
  4057c6:	jle    0x4057ce
  4057c8:	mov    DWORD PTR [rip+0x4b9c6],ecx        # 0x451194
  4057ce:	mov    r8,QWORD PTR [rsp+0x20]
  4057d3:	cmp    rax,r8
  4057d6:	jae    0x405870
  4057dc:	cmp    BYTE PTR [rsp+0x30],0x0
  4057e1:	jne    0x405792
  4057e3:	cmp    BYTE PTR [rsp+0x28],0x0
  4057e8:	je     0x405760
  4057ee:	lea    rcx,[rdi+0x2a]
  4057f2:	lea    r9,[rdi+0xc]
  4057f6:	sub    r8,rax
  4057f9:	mov    rdx,rax
  4057fc:	call   0x423f00
  405801:	cmp    rax,0xffffffffffffffff
  405805:	mov    QWORD PTR [rsp+0x40],rax
  40580a:	je     0x4058a0
  405810:	cmp    rax,0xfffffffffffffffe
  405814:	je     0x4058b3
  40581a:	test   rax,rax
  40581d:	jne    0x405842
  40581f:	mov    rax,QWORD PTR [rsp+0x38]
  405824:	mov    QWORD PTR [rsp+0x40],0x1
  40582d:	cmp    BYTE PTR [rax],0x0
  405830:	jne    0x405910
  405836:	cmp    WORD PTR [rsp+0x4a],0x0
  40583c:	jne    0x4058f0
  405842:	lea    rcx,[rdi+0xc]
  405846:	mov    BYTE PTR [rsp+0x48],0x1
  40584b:	call   0x424040
  405850:	test   eax,eax
  405852:	je     0x405792
  405858:	sub    ebx,0x1
  40585b:	mov    BYTE PTR [rsp+0x28],0x0
  405860:	cmp    ebx,0xffffffff
  405863:	jne    0x40579e
  405869:	nop    DWORD PTR [rax+0x0]
  405870:	add    rsp,0x70
  405874:	pop    rbx
  405875:	pop    rsi
  405876:	pop    rdi
  405877:	pop    rbp
  405878:	pop    r12
  40587a:	ret    
  40587b:	nop    DWORD PTR [rax+rax*1+0x0]
  405880:	mov    rcx,r12
  405883:	call   0x424040
  405888:	test   eax,eax
  40588a:	je     0x4058d0
  40588c:	mov    BYTE PTR [rsp+0x28],0x1
  405891:	mov    r8,QWORD PTR [rsp+0x20]
  405896:	mov    rax,QWORD PTR [rsp+0x38]
  40589b:	jmp    0x4057ee
  4058a0:	mov    QWORD PTR [rsp+0x40],0x1
  4058a9:	mov    BYTE PTR [rsp+0x48],0x0
  4058ae:	jmp    0x405792
  4058b3:	mov    rax,QWORD PTR [rsp+0x20]
  4058b8:	sub    rax,QWORD PTR [rsp+0x38]
  4058bd:	mov    BYTE PTR [rsp+0x48],0x0
  4058c2:	mov    QWORD PTR [rsp+0x40],rax
  4058c7:	jmp    0x405792
  4058cc:	nop    DWORD PTR [rax+0x0]
  4058d0:	lea    rdx,[rip+0x3b951]        # 0x441228
  4058d7:	lea    rcx,[rip+0x3b99b]        # 0x441279
  4058de:	mov    r8d,0x8e
  4058e4:	call   0x435a10
  4058e9:	jmp    0x40588c
  4058eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f0:	lea    rdx,[rip+0x3b931]        # 0x441228
  4058f7:	lea    rcx,[rip+0x3b9a9]        # 0x4412a7
  4058fe:	mov    r8d,0xaa
  405904:	call   0x435a10
  405909:	jmp    0x405842
  40590e:	xchg   ax,ax
  405910:	lea    rdx,[rip+0x3b911]        # 0x441228
  405917:	lea    rcx,[rip+0x3b972]        # 0x441290
  40591e:	mov    r8d,0xa9
  405924:	call   0x435a10
  405929:	cmp    WORD PTR [rsp+0x4a],0x0
  40592f:	je     0x405842
  405935:	jmp    0x4058f0
  405937:	neg    ebx
  405939:	mov    edx,ebx
  40593b:	call   0x405660
  405940:	jmp    0x405870
  405945:	nop
  405946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405950:	mov    eax,DWORD PTR [rip+0x4b83a]        # 0x451190
  405956:	mov    DWORD PTR [rip+0x4b838],eax        # 0x451194
  40595c:	ret    
  40595d:	nop    DWORD PTR [rax]
  405960:	mov    eax,DWORD PTR [rip+0x4b826]        # 0x45118c
  405966:	mov    DWORD PTR [rip+0x4b828],eax        # 0x451194
  40596c:	ret    
  40596d:	nop    DWORD PTR [rax]
  405970:	push   r15
  405972:	push   r14
  405974:	push   r13
  405976:	push   r12
  405978:	push   rbp
  405979:	push   rdi
  40597a:	push   rsi
  40597b:	push   rbx
  40597c:	sub    rsp,0x38
  405980:	test   edx,edx
  405982:	mov    r15d,edx
  405985:	js     0x405ae0
  40598b:	mov    r13,QWORD PTR [rip+0x4f0fe]        # 0x454a90
  405992:	mov    ebp,DWORD PTR [rip+0x4b7f8]        # 0x451190
  405998:	mov    r12,QWORD PTR [rip+0x4f0d1]        # 0x454a70
  40599f:	mov    QWORD PTR [rsp+0x20],r13
  4059a4:	sub    r15d,0x1
  4059a8:	cmp    r15d,0xffffffff
  4059ac:	je     0x405aa7
  4059b2:	mov    ebx,DWORD PTR [rip+0x4b7dc]        # 0x451194
  4059b8:	cmp    ebx,ebp
  4059ba:	je     0x405aa7
  4059c0:	sub    ebx,0x1
  4059c3:	lea    rdi,[rip+0x4b7f6]        # 0x4511c0
  4059ca:	movsxd rax,ebx
  4059cd:	movsx  r14d,BYTE PTR [rdi+rax*1]
  4059d2:	mov    ecx,r14d
  4059d5:	mov    esi,r14d
  4059d8:	call   r12
  4059db:	test   eax,eax
  4059dd:	mov    edx,eax
  4059df:	jne    0x405a72
  4059e5:	mov    DWORD PTR [rsp+0x2c],eax
  4059e9:	mov    ecx,r14d
  4059ec:	mov    rax,QWORD PTR [rsp+0x20]
  4059f1:	call   rax
  4059f3:	test   eax,eax
  4059f5:	mov    edx,DWORD PTR [rsp+0x2c]
  4059f9:	jne    0x405a72
  4059fb:	sub    r14d,0x30
  4059ff:	cmp    r14d,0x9
  405a03:	jbe    0x405a72
  405a05:	jmp    0x405a2d
  405a07:	nop    WORD PTR [rax+rax*1+0x0]
  405a10:	mov    rax,QWORD PTR [rsp+0x20]
  405a15:	call   rax
  405a17:	test   eax,eax
  405a19:	jne    0x405ab8
  405a1f:	sub    r14d,0x30
  405a23:	cmp    r14d,0x9
  405a27:	jbe    0x405ac2
  405a2d:	cmp    ebx,ebp
  405a2f:	mov    DWORD PTR [rsp+0x2c],ebx
  405a33:	mov    DWORD PTR [rip+0x4b75b],ebx        # 0x451194
  405a39:	je     0x4059a4
  405a3f:	sub    ebx,0x1
  405a42:	movsxd rax,ebx
  405a45:	movsx  r14d,BYTE PTR [rdi+rax*1]
  405a4a:	mov    ecx,r14d
  405a4d:	mov    esi,r14d
  405a50:	call   r12
  405a53:	test   eax,eax
  405a55:	mov    ecx,r14d
  405a58:	je     0x405a10
  405a5a:	call   r12
  405a5d:	mov    edx,eax
  405a5f:	jmp    0x405a72
  405a61:	movsxd rax,r14d
  405a64:	mov    ebx,r14d
  405a67:	movsx  ecx,BYTE PTR [rdi+rax*1]
  405a6b:	mov    esi,ecx
  405a6d:	call   r12
  405a70:	mov    edx,eax
  405a72:	test   edx,edx
  405a74:	jne    0x405a8b
  405a76:	mov    ecx,esi
  405a78:	call   r13
  405a7b:	test   eax,eax
  405a7d:	jne    0x405a8b
  405a7f:	sub    esi,0x30
  405a82:	cmp    esi,0x9
  405a85:	ja     0x4059a4
  405a8b:	cmp    ebp,ebx
  405a8d:	mov    DWORD PTR [rip+0x4b701],ebx        # 0x451194
  405a93:	lea    r14d,[rbx-0x1]
  405a97:	jne    0x405a61
  405a99:	sub    r15d,0x1
  405a9d:	cmp    r15d,0xffffffff
  405aa1:	jne    0x4059b2
  405aa7:	add    rsp,0x38
  405aab:	pop    rbx
  405aac:	pop    rsi
  405aad:	pop    rdi
  405aae:	pop    rbp
  405aaf:	pop    r12
  405ab1:	pop    r13
  405ab3:	pop    r14
  405ab5:	pop    r15
  405ab7:	ret    
  405ab8:	mov    ecx,r14d
  405abb:	call   r12
  405abe:	mov    edx,eax
  405ac0:	jmp    0x405a72
  405ac2:	mov    ebx,DWORD PTR [rsp+0x2c]
  405ac6:	lea    rdx,[rip+0x4b6f3]        # 0x4511c0
  405acd:	sub    ebx,0x1
  405ad0:	movsxd rax,ebx
  405ad3:	movsx  ecx,BYTE PTR [rdx+rax*1]
  405ad7:	mov    esi,ecx
  405ad9:	call   r12
  405adc:	mov    edx,eax
  405ade:	jmp    0x405a72
  405ae0:	neg    edx
  405ae2:	add    rsp,0x38
  405ae6:	pop    rbx
  405ae7:	pop    rsi
  405ae8:	pop    rdi
  405ae9:	pop    rbp
  405aea:	pop    r12
  405aec:	pop    r13
  405aee:	pop    r14
  405af0:	pop    r15
  405af2:	jmp    0x405b00
  405af4:	xchg   ax,ax
  405af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b00:	push   r15
  405b02:	push   r14
  405b04:	push   r13
  405b06:	push   r12
  405b08:	push   rbp
  405b09:	push   rdi
  405b0a:	push   rsi
  405b0b:	push   rbx
  405b0c:	sub    rsp,0x28
  405b10:	test   edx,edx
  405b12:	mov    r14d,edx
  405b15:	js     0x405bc3
  405b1b:	mov    r15,QWORD PTR [rip+0x4ef6e]        # 0x454a90
  405b22:	mov    ebp,DWORD PTR [rip+0x4b664]        # 0x45118c
  405b28:	mov    r12,QWORD PTR [rip+0x4ef41]        # 0x454a70
  405b2f:	mov    r13,r15
  405b32:	sub    r14d,0x1
  405b36:	cmp    r14d,0xffffffff
  405b3a:	je     0x405b7d
  405b3c:	mov    ebx,DWORD PTR [rip+0x4b652]        # 0x451194
  405b42:	cmp    ebx,ebp
  405b44:	je     0x405b7d
  405b46:	lea    rdi,[rip+0x4b673]        # 0x4511c0
  405b4d:	movsxd rax,ebx
  405b50:	movsx  esi,BYTE PTR [rdi+rax*1]
  405b54:	mov    ecx,esi
  405b56:	call   r12
  405b59:	test   eax,eax
  405b5b:	jne    0x405b90
  405b5d:	mov    ecx,esi
  405b5f:	call   r15
  405b62:	test   eax,eax
  405b64:	jne    0x405b90
  405b66:	sub    esi,0x30
  405b69:	cmp    esi,0x9
  405b6c:	jbe    0x405b90
  405b6e:	add    ebx,0x1
  405b71:	cmp    ebp,ebx
  405b73:	mov    DWORD PTR [rip+0x4b61b],ebx        # 0x451194
  405b79:	jg     0x405b4d
  405b7b:	jne    0x405b90
  405b7d:	add    rsp,0x28
  405b81:	pop    rbx
  405b82:	pop    rsi
  405b83:	pop    rdi
  405b84:	pop    rbp
  405b85:	pop    r12
  405b87:	pop    r13
  405b89:	pop    r14
  405b8b:	pop    r15
  405b8d:	ret    
  405b8e:	xchg   ax,ax
  405b90:	add    ebx,0x1
  405b93:	cmp    ebp,ebx
  405b95:	mov    DWORD PTR [rip+0x4b5f9],ebx        # 0x451194
  405b9b:	jle    0x405b32
  405b9d:	movsxd rax,ebx
  405ba0:	movsx  esi,BYTE PTR [rdi+rax*1]
  405ba4:	mov    ecx,esi
  405ba6:	call   r12
  405ba9:	test   eax,eax
  405bab:	jne    0x405b90
  405bad:	mov    ecx,esi
  405baf:	call   r13
  405bb2:	test   eax,eax
  405bb4:	jne    0x405b90
  405bb6:	sub    esi,0x30
  405bb9:	cmp    esi,0x9
  405bbc:	jbe    0x405b90
  405bbe:	jmp    0x405b32
  405bc3:	neg    edx
  405bc5:	add    rsp,0x28
  405bc9:	pop    rbx
  405bca:	pop    rsi
  405bcb:	pop    rdi
  405bcc:	pop    rbp
  405bcd:	pop    r12
  405bcf:	pop    r13
  405bd1:	pop    r14
  405bd3:	pop    r15
  405bd5:	jmp    0x405970
  405bda:	nop    WORD PTR [rax+rax*1+0x0]
  405be0:	push   rdi
  405be1:	push   rsi
  405be2:	push   rbx
  405be3:	sub    rsp,0x20
  405be7:	test   edx,edx
  405be9:	js     0x405c62
  405beb:	mov    esi,DWORD PTR [rip+0x4b5a3]        # 0x451194
  405bf1:	cmp    esi,DWORD PTR [rip+0x4b599]        # 0x451190
  405bf7:	je     0x405c30
  405bf9:	mov    ebx,edx
  405bfb:	mov    rdi,rcx
  405bfe:	call   0x405660
  405c03:	cmp    ebx,0x1
  405c06:	jg     0x405c15
  405c08:	mov    rax,QWORD PTR [rip+0x43c61]        # 0x449870
  405c0f:	mov    eax,DWORD PTR [rax]
  405c11:	test   eax,eax
  405c13:	je     0x405c40
  405c15:	mov    edx,DWORD PTR [rip+0x4b579]        # 0x451194
  405c1b:	mov    ecx,esi
  405c1d:	add    rsp,0x20
  405c21:	pop    rbx
  405c22:	pop    rsi
  405c23:	pop    rdi
  405c24:	jmp    0x404a50
  405c29:	nop    DWORD PTR [rax+0x0]
  405c30:	cmp    esi,DWORD PTR [rip+0x4b556]        # 0x45118c
  405c36:	je     0x405c50
  405c38:	add    rsp,0x20
  405c3c:	pop    rbx
  405c3d:	pop    rsi
  405c3e:	pop    rdi
  405c3f:	ret    
  405c40:	mov    edx,ebx
  405c42:	mov    rcx,rdi
  405c45:	add    rsp,0x20
  405c49:	pop    rbx
  405c4a:	pop    rsi
  405c4b:	pop    rdi
  405c4c:	jmp    0x405c70
  405c4e:	xchg   ax,ax
  405c50:	mov    DWORD PTR [rip+0x4b476],0x1        # 0x4510d0
  405c5a:	add    rsp,0x20
  405c5e:	pop    rbx
  405c5f:	pop    rsi
  405c60:	pop    rdi
  405c61:	ret    
  405c62:	neg    edx
  405c64:	jmp    0x405c45
  405c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c70:	push   rsi
  405c71:	push   rbx
  405c72:	sub    rsp,0x28
  405c76:	test   edx,edx
  405c78:	js     0x405d16
  405c7e:	mov    esi,DWORD PTR [rip+0x4b510]        # 0x451194
  405c84:	cmp    esi,DWORD PTR [rip+0x4b502]        # 0x45118c
  405c8a:	je     0x405cb8
  405c8c:	mov    ebx,edx
  405c8e:	call   0x4056f0
  405c93:	cmp    ebx,0x1
  405c96:	jg     0x405ca5
  405c98:	mov    rax,QWORD PTR [rip+0x43bd1]        # 0x449870
  405c9f:	mov    eax,DWORD PTR [rax]
  405ca1:	test   eax,eax
  405ca3:	je     0x405cc0
  405ca5:	mov    edx,DWORD PTR [rip+0x4b4e9]        # 0x451194
  405cab:	mov    ecx,esi
  405cad:	call   0x404a50
  405cb2:	mov    DWORD PTR [rip+0x4b4dc],esi        # 0x451194
  405cb8:	add    rsp,0x28
  405cbc:	pop    rbx
  405cbd:	pop    rsi
  405cbe:	ret    
  405cbf:	nop
  405cc0:	mov    eax,DWORD PTR [rip+0x4b4ce]        # 0x451194
  405cc6:	mov    ecx,DWORD PTR [rip+0x4b4c0]        # 0x45118c
  405ccc:	mov    r11d,eax
  405ccf:	mov    r10d,ecx
  405cd2:	sub    r11d,esi
  405cd5:	sub    r10d,eax
  405cd8:	je     0x405d0b
  405cda:	lea    r8,[rip+0x4b4df]        # 0x4511c0
  405ce1:	add    r10d,esi
  405ce4:	mov    eax,esi
  405ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cf0:	lea    edx,[rax+r11*1]
  405cf4:	movsxd rdx,edx
  405cf7:	movzx  r9d,BYTE PTR [r8+rdx*1]
  405cfc:	movsxd rdx,eax
  405cff:	add    eax,0x1
  405d02:	cmp    eax,r10d
  405d05:	mov    BYTE PTR [r8+rdx*1],r9b
  405d09:	jne    0x405cf0
  405d0b:	sub    ecx,r11d
  405d0e:	mov    DWORD PTR [rip+0x4b478],ecx        # 0x45118c
  405d14:	jmp    0x405cb2
  405d16:	neg    edx
  405d18:	add    rsp,0x28
  405d1c:	pop    rbx
  405d1d:	pop    rsi
  405d1e:	jmp    0x405be0
  405d23:	nop    DWORD PTR [rax]
  405d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d30:	sub    rsp,0x28
  405d34:	mov    eax,DWORD PTR [rip+0x4b456]        # 0x451190
  405d3a:	cmp    DWORD PTR [rip+0x4b44c],eax        # 0x45118c
  405d40:	je     0x405d80
  405d42:	call   0x41c810
  405d47:	mov    eax,DWORD PTR [rip+0x4b443]        # 0x451190
  405d4d:	mov    rdx,QWORD PTR [rip+0x4b41c]        # 0x451170
  405d54:	mov    DWORD PTR [rip+0x4b43a],eax        # 0x451194
  405d5a:	mov    DWORD PTR [rip+0x4b42c],eax        # 0x45118c
  405d60:	mov    rax,QWORD PTR [rip+0x4b411]        # 0x451178
  405d67:	cmp    QWORD PTR [rax+0x20],rdx
  405d6b:	je     0x405d8a
  405d6d:	add    rsp,0x28
  405d71:	jmp    0x4052f0
  405d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d80:	mov    DWORD PTR [rip+0x4b346],0x1        # 0x4510d0
  405d8a:	add    rsp,0x28
  405d8e:	ret    
  405d8f:	nop
  405d90:	push   rsi
  405d91:	push   rbx
  405d92:	mov    esi,DWORD PTR [rip+0x4b3f4]        # 0x45118c
  405d98:	cmp    esi,0xff
  405d9e:	je     0x405dfe
  405da0:	mov    r11d,DWORD PTR [rip+0x4b3ed]        # 0x451194
  405da7:	lea    ebx,[rsi+0x1]
  405daa:	cmp    ebx,r11d
  405dad:	je     0x405e05
  405daf:	lea    r9,[rip+0x4b40a]        # 0x4511c0
  405db6:	movsxd rax,ebx
  405db9:	nop    DWORD PTR [rax+0x0]
  405dc0:	lea    edx,[rax-0x1]
  405dc3:	movsxd r10,edx
  405dc6:	movzx  r10d,BYTE PTR [r9+r10*1]
  405dcb:	mov    BYTE PTR [r9+rax*1],r10b
  405dcf:	movsxd rax,edx
  405dd2:	cmp    eax,r11d
  405dd5:	jne    0x405dc0
  405dd7:	lea    r11d,[rbx+r11*1-0x1]
  405ddc:	sub    r11d,esi
  405ddf:	movsxd rax,r11d
  405de2:	add    r11d,0x1
  405de6:	mov    DWORD PTR [rip+0x4b3a0],ebx        # 0x45118c
  405dec:	mov    BYTE PTR [r9+rax*1],r8b
  405df0:	mov    DWORD PTR [rip+0x4b39d],r11d        # 0x451194
  405df7:	pop    rbx
  405df8:	pop    rsi
  405df9:	jmp    0x420bd0
  405dfe:	pop    rbx
  405dff:	pop    rsi
  405e00:	jmp    0x41c810
  405e05:	lea    r9,[rip+0x4b3b4]        # 0x4511c0
  405e0c:	jmp    0x405ddf
  405e0e:	xchg   ax,ax
  405e10:	push   rsi
  405e11:	push   rbx
  405e12:	sub    rsp,0x28
  405e16:	mov    rbx,rcx
  405e19:	mov    esi,edx
  405e1b:	call   0x41a390
  405e20:	cmp    eax,0xff
  405e25:	jbe    0x405e30
  405e27:	add    rsp,0x28
  405e2b:	pop    rbx
  405e2c:	pop    rsi
  405e2d:	ret    
  405e2e:	xchg   ax,ax
  405e30:	mov    r8d,eax
  405e33:	mov    edx,esi
  405e35:	mov    rcx,rbx
  405e38:	add    rsp,0x28
  405e3c:	pop    rbx
  405e3d:	pop    rsi
  405e3e:	jmp    0x405d90
  405e43:	nop    DWORD PTR [rax]
  405e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e50:	mov    r8d,0x9
  405e56:	jmp    0x405d90
  405e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e60:	push   r12
  405e62:	push   rbp
  405e63:	push   rdi
  405e64:	push   rsi
  405e65:	push   rbx
  405e66:	sub    rsp,0x20
  405e6a:	mov    rbp,rcx
  405e6d:	mov    ebx,edx
  405e6f:	jmp    0x405ec3
  405e71:	cmp    esi,DWORD PTR [rip+0x4b315]        # 0x45118c
  405e77:	je     0x405ede
  405e79:	call   0x4056f0
  405e7e:	mov    edi,DWORD PTR [rip+0x4b310]        # 0x451194
  405e84:	cmp    esi,edi
  405e86:	je     0x405f32
  405e8c:	mov    rcx,rbp
  405e8f:	mov    edx,0x1
  405e94:	mov    DWORD PTR [rip+0x4b2fa],esi        # 0x451194
  405e9a:	call   0x405660
  405e9f:	mov    ecx,DWORD PTR [rip+0x4b2ef]        # 0x451194
  405ea5:	cmp    ecx,edi
  405ea7:	je     0x405f32
  405ead:	mov    r9d,edi
  405eb0:	mov    r8d,esi
  405eb3:	mov    edx,esi
  405eb5:	call   0x404c50
  405eba:	mov    DWORD PTR [rip+0x4b2d4],edi        # 0x451194
  405ec0:	sub    ebx,0x1
  405ec3:	test   ebx,ebx
  405ec5:	je     0x405f32
  405ec7:	mov    eax,ebx
  405ec9:	mov    esi,DWORD PTR [rip+0x4b2c5]        # 0x451194
  405ecf:	mov    edx,0x1
  405ed4:	shr    eax,0x1f
  405ed7:	mov    rcx,rbp
  405eda:	test   al,al
  405edc:	je     0x405e71
  405ede:	call   0x405660
  405ee3:	mov    edx,0x1
  405ee8:	mov    rcx,rbp
  405eeb:	mov    r12d,DWORD PTR [rip+0x4b2a2]        # 0x451194
  405ef2:	call   0x405660
  405ef7:	mov    edi,DWORD PTR [rip+0x4b297]        # 0x451194
  405efd:	cmp    edi,r12d
  405f00:	je     0x405f12
  405f02:	mov    r9d,esi
  405f05:	mov    r8d,r12d
  405f08:	mov    edx,r12d
  405f0b:	mov    ecx,edi
  405f0d:	call   0x404c50
  405f12:	test   ebx,ebx
  405f14:	jle    0x405f20
  405f16:	mov    DWORD PTR [rip+0x4b278],esi        # 0x451194
  405f1c:	jmp    0x405ec0
  405f1e:	xchg   ax,ax
  405f20:	add    esi,edi
  405f22:	add    ebx,0x1
  405f25:	sub    esi,r12d
  405f28:	test   ebx,ebx
  405f2a:	mov    DWORD PTR [rip+0x4b264],esi        # 0x451194
  405f30:	jne    0x405ec7
  405f32:	add    rsp,0x20
  405f36:	pop    rbx
  405f37:	pop    rsi
  405f38:	pop    rdi
  405f39:	pop    rbp
  405f3a:	pop    r12
  405f3c:	ret    
  405f3d:	nop    DWORD PTR [rax]
  405f40:	sub    rsp,0x28
  405f44:	test   edx,edx
  405f46:	js     0x405f60
  405f48:	mov    edx,DWORD PTR [rip+0x4b23e]        # 0x45118c
  405f4e:	mov    ecx,DWORD PTR [rip+0x4b240]        # 0x451194
  405f54:	add    rsp,0x28
  405f58:	jmp    0x404a50
  405f5d:	nop    DWORD PTR [rax]
  405f60:	mov    edx,DWORD PTR [rip+0x4b22a]        # 0x451190
  405f66:	mov    ecx,DWORD PTR [rip+0x4b228]        # 0x451194
  405f6c:	call   0x404a50
  405f71:	mov    eax,DWORD PTR [rip+0x4b219]        # 0x451190
  405f77:	mov    DWORD PTR [rip+0x4b217],eax        # 0x451194
  405f7d:	add    rsp,0x28
  405f81:	ret    
  405f82:	nop    DWORD PTR [rax+0x0]
  405f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f90:	sub    rsp,0x28
  405f94:	test   edx,edx
  405f96:	js     0x405fc0
  405f98:	mov    edx,DWORD PTR [rip+0x4b1f2]        # 0x451190
  405f9e:	mov    ecx,DWORD PTR [rip+0x4b1f0]        # 0x451194
  405fa4:	call   0x404a50
  405fa9:	mov    eax,DWORD PTR [rip+0x4b1e1]        # 0x451190
  405faf:	mov    DWORD PTR [rip+0x4b1df],eax        # 0x451194
  405fb5:	add    rsp,0x28
  405fb9:	ret    
  405fba:	nop    WORD PTR [rax+rax*1+0x0]
  405fc0:	mov    edx,DWORD PTR [rip+0x4b1c6]        # 0x45118c
  405fc6:	mov    ecx,DWORD PTR [rip+0x4b1c8]        # 0x451194
  405fcc:	add    rsp,0x28
  405fd0:	jmp    0x404a50
  405fd5:	nop
  405fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fe0:	push   rsi
  405fe1:	push   rbx
  405fe2:	sub    rsp,0x28
  405fe6:	mov    esi,DWORD PTR [rip+0x4b1a8]        # 0x451194
  405fec:	test   edx,edx
  405fee:	mov    rbx,rcx
  405ff1:	js     0x406020
  405ff3:	call   0x405970
  405ff8:	mov    edx,DWORD PTR [rip+0x4b196]        # 0x451194
  405ffe:	cmp    edx,esi
  406000:	je     0x406009
  406002:	mov    ecx,esi
  406004:	call   0x404a50
  406009:	mov    rcx,rbx
  40600c:	add    rsp,0x28
  406010:	pop    rbx
  406011:	pop    rsi
  406012:	jmp    0x420bd0
  406017:	nop    WORD PTR [rax+rax*1+0x0]
  406020:	neg    edx
  406022:	call   0x406040
  406027:	mov    rcx,rbx
  40602a:	add    rsp,0x28
  40602e:	pop    rbx
  40602f:	pop    rsi
  406030:	jmp    0x420bd0
  406035:	nop
  406036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406040:	push   rsi
  406041:	push   rbx
  406042:	sub    rsp,0x28
  406046:	mov    ebx,DWORD PTR [rip+0x4b148]        # 0x451194
  40604c:	test   edx,edx
  40604e:	mov    rsi,rcx
  406051:	js     0x406080
  406053:	call   0x405b00
  406058:	mov    edx,DWORD PTR [rip+0x4b136]        # 0x451194
  40605e:	cmp    edx,ebx
  406060:	je     0x406069
  406062:	mov    ecx,ebx
  406064:	call   0x404a50
  406069:	mov    rcx,rsi
  40606c:	mov    DWORD PTR [rip+0x4b122],ebx        # 0x451194
  406072:	add    rsp,0x28
  406076:	pop    rbx
  406077:	pop    rsi
  406078:	jmp    0x420bd0
  40607d:	nop    DWORD PTR [rax]
  406080:	neg    edx
  406082:	call   0x405fe0
  406087:	mov    rcx,rsi
  40608a:	add    rsp,0x28
  40608e:	pop    rbx
  40608f:	pop    rsi
  406090:	jmp    0x420bd0
  406095:	nop
  406096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060a0:	push   rbx
  4060a1:	sub    rsp,0x20
  4060a5:	lea    rcx,[rip+0x3b16d]        # 0x441219
  4060ac:	mov    ebx,edx
  4060ae:	call   0x409fa0
  4060b3:	test   rax,rax
  4060b6:	cmove  rax,QWORD PTR [rip+0x4b0ba]        # 0x451178
  4060be:	mov    edx,ebx
  4060c0:	mov    rcx,rax
  4060c3:	add    rsp,0x20
  4060c7:	pop    rbx
  4060c8:	jmp    0x417c70
  4060cd:	nop    DWORD PTR [rax]
  4060d0:	push   rbx
  4060d1:	sub    rsp,0x20
  4060d5:	cmp    rcx,QWORD PTR [rip+0x4b09c]        # 0x451178
  4060dc:	mov    rbx,rcx
  4060df:	je     0x406101
  4060e1:	cmp    rbx,QWORD PTR [rip+0x4b098]        # 0x451180
  4060e8:	je     0x4060f0
  4060ea:	add    rsp,0x20
  4060ee:	pop    rbx
  4060ef:	ret    
  4060f0:	mov    QWORD PTR [rip+0x4b085],0x0        # 0x451180
  4060fb:	add    rsp,0x20
  4060ff:	pop    rbx
  406100:	ret    
  406101:	mov    rax,QWORD PTR [rip+0x436e8]        # 0x4497f0
  406108:	mov    rcx,QWORD PTR [rax]
  40610b:	mov    rax,QWORD PTR [rip+0x43ace]        # 0x449be0
  406112:	cmp    rcx,QWORD PTR [rax]
  406115:	je     0x406120
  406117:	call   0x4053f0
  40611c:	jmp    0x4060e1
  40611e:	xchg   ax,ax
  406120:	mov    rax,QWORD PTR [rip+0x43ae9]        # 0x449c10
  406127:	mov    rcx,QWORD PTR [rax]
  40612a:	jmp    0x406117
  40612c:	nop    DWORD PTR [rax+0x0]
  406130:	push   rdi
  406131:	push   rsi
  406132:	push   rbx
  406133:	sub    rsp,0x20
  406137:	mov    ebx,0x101
  40613c:	sub    ebx,DWORD PTR [rip+0x4b04a]        # 0x45118c
  406142:	call   0x422a00
  406147:	mov    rdi,rax
  40614a:	movzx  eax,BYTE PTR [rax]
  40614d:	test   al,al
  40614f:	setne  dl
  406152:	cmp    al,0xa
  406154:	setne  al
  406157:	test   dl,al
  406159:	je     0x406225
  40615f:	test   ebx,ebx
  406161:	jle    0x406225
  406167:	lea    rdx,[rdi+0x1]
  40616b:	xor    r8d,r8d
  40616e:	jmp    0x406175
  406170:	cmp    ebx,r8d
  406173:	jle    0x406198
  406175:	movzx  r10d,BYTE PTR [rdx]
  406179:	add    r8d,0x1
  40617d:	mov    rsi,rdx
  406180:	add    rdx,0x1
  406184:	test   r10b,r10b
  406187:	setne  r11b
  40618b:	cmp    r10b,0xa
  40618f:	setne  r10b
  406193:	test   r11b,r10b
  406196:	jne    0x406170
  406198:	mov    BYTE PTR [rsi],0x0
  40619b:	call   0x404890
  4061a0:	mov    eax,DWORD PTR [rip+0x4af26]        # 0x4510cc
  4061a6:	movsxd rcx,DWORD PTR [rip+0x4afdf]        # 0x45118c
  4061ad:	lea    r8,[rip+0x3b064]        # 0x441218
  4061b4:	lea    rdx,[rip+0x3b100]        # 0x4412bb
  4061bb:	mov    r9,rdi
  4061be:	test   eax,eax
  4061c0:	lea    rax,[rip+0x3b0f2]        # 0x4412b9
  4061c7:	cmovne r8,rax
  4061cb:	lea    rax,[rip+0x4afee]        # 0x4511c0
  4061d2:	add    rcx,rax
  4061d5:	call   0x433f00
  4061da:	mov    rcx,rdi
  4061dd:	call   0x43a748
  4061e2:	mov    rax,QWORD PTR [rip+0x439f7]        # 0x449be0
  4061e9:	mov    rcx,QWORD PTR [rax]
  4061ec:	mov    eax,DWORD PTR [rip+0x4afa2]        # 0x451194
  4061f2:	mov    DWORD PTR [rcx+0x2c],eax
  4061f5:	call   0x403da0
  4061fa:	mov    rax,QWORD PTR [rip+0x435ef]        # 0x4497f0
  406201:	mov    rcx,QWORD PTR [rax]
  406204:	call   0x4045a0
  406209:	call   QWORD PTR [rip+0x4e6e1]        # 0x4548f0
  40620f:	lea    rcx,[rax+0x30]
  406213:	call   0x43a780
  406218:	nop
  406219:	add    rsp,0x20
  40621d:	pop    rbx
  40621e:	pop    rsi
  40621f:	pop    rdi
  406220:	jmp    0x404890
  406225:	mov    rsi,rdi
  406228:	jmp    0x406198
  40622d:	nop    DWORD PTR [rax]
  406230:	push   rsi
  406231:	push   rbx
  406232:	sub    rsp,0x28
  406236:	mov    eax,DWORD PTR [rip+0x4af24]        # 0x451160
  40623c:	mov    rsi,rcx
  40623f:	test   eax,eax
  406241:	je     0x406284
  406243:	movsxd rdx,DWORD PTR [rip+0x4af0e]        # 0x451158
  40624a:	mov    rax,QWORD PTR [rip+0x4af17]        # 0x451168
  406251:	mov    rbx,QWORD PTR [rax+rdx*8]
  406255:	movsx  r8d,BYTE PTR [rbx]
  406259:	add    rbx,0x1
  40625d:	test   r8b,r8b
  406260:	je     0x40627d
  406262:	add    rbx,0x1
  406266:	mov    edx,0x1
  40626b:	mov    rcx,rsi
  40626e:	call   0x405d90
  406273:	movsx  r8d,BYTE PTR [rbx-0x1]
  406278:	test   r8b,r8b
  40627b:	jne    0x406262
  40627d:	add    rsp,0x28
  406281:	pop    rbx
  406282:	pop    rsi
  406283:	ret    
  406284:	lea    rcx,[rip+0x3b038]        # 0x4412c3
  40628b:	call   0x433f18
  406290:	mov    rcx,rax
  406293:	add    rsp,0x28
  406297:	pop    rbx
  406298:	pop    rsi
  406299:	jmp    0x406130
  40629e:	xchg   ax,ax
  4062a0:	push   r12
  4062a2:	push   rbp
  4062a3:	push   rdi
  4062a4:	push   rsi
  4062a5:	push   rbx
  4062a6:	sub    rsp,0x20
  4062aa:	mov    rax,QWORD PTR [rip+0x4b017]        # 0x4512c8
  4062b1:	lea    r8,[rip+0xffffffffffffff78]        # 0x406230
  4062b8:	cmp    rax,r8
  4062bb:	je     0x4062d4
  4062bd:	lea    r8,[rip+0xffffffffffffffdc]        # 0x4062a0
  4062c4:	cmp    rax,r8
  4062c7:	je     0x4062d4
  4062c9:	add    rsp,0x20
  4062cd:	pop    rbx
  4062ce:	pop    rsi
  4062cf:	pop    rdi
  4062d0:	pop    rbp
  4062d1:	pop    r12
  4062d3:	ret    
  4062d4:	mov    ebp,DWORD PTR [rip+0x4ae86]        # 0x451160
  4062da:	test   ebp,ebp
  4062dc:	je     0x4062c9
  4062de:	mov    esi,edx
  4062e0:	movsxd rdx,DWORD PTR [rip+0x4ae71]        # 0x451158
  4062e7:	mov    rax,QWORD PTR [rip+0x4ae7a]        # 0x451168
  4062ee:	mov    rbx,rcx
  4062f1:	mov    rcx,QWORD PTR [rax+rdx*8]
  4062f5:	mov    rdi,rdx
  4062f8:	call   0x43a620
  4062fd:	mov    edx,DWORD PTR [rip+0x4ae91]        # 0x451194
  406303:	mov    ecx,DWORD PTR [rip+0x4ae83]        # 0x45118c
  406309:	mov    r12d,edx
  40630c:	mov    r11d,ecx
  40630f:	sub    r12d,eax
  406312:	sub    r11d,edx
  406315:	mov    edx,r11d
  406318:	je     0x40634c
  40631a:	lea    r10,[rip+0x4ae9f]        # 0x4511c0
  406321:	add    edx,r12d
  406324:	mov    r8d,r12d
  406327:	nop    WORD PTR [rax+rax*1+0x0]
  406330:	lea    r9d,[r8+rax*1]
  406334:	movsxd r9,r9d
  406337:	movzx  r11d,BYTE PTR [r10+r9*1]
  40633c:	movsxd r9,r8d
  40633f:	add    r8d,0x1
  406343:	cmp    r8d,edx
  406346:	mov    BYTE PTR [r10+r9*1],r11b
  40634a:	jne    0x406330
  40634c:	sub    ecx,eax
  40634e:	sub    edi,0x1
  406351:	mov    DWORD PTR [rip+0x4ae3c],r12d        # 0x451194
  406358:	mov    DWORD PTR [rip+0x4ae2e],ecx        # 0x45118c
  40635e:	js     0x40637a
  406360:	mov    DWORD PTR [rip+0x4adf2],edi        # 0x451158
  406366:	mov    edx,esi
  406368:	mov    rcx,rbx
  40636b:	add    rsp,0x20
  40636f:	pop    rbx
  406370:	pop    rsi
  406371:	pop    rdi
  406372:	pop    rbp
  406373:	pop    r12
  406375:	jmp    0x406230
  40637a:	sub    ebp,0x1
  40637d:	mov    DWORD PTR [rip+0x4add5],ebp        # 0x451158
  406383:	jmp    0x406366
  406385:	nop
  406386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406390:	push   r14
  406392:	push   r13
  406394:	push   r12
  406396:	push   rbp
  406397:	push   rdi
  406398:	push   rsi
  406399:	push   rbx
  40639a:	sub    rsp,0x30
  40639e:	mov    r13,rdx
  4063a1:	mov    edx,DWORD PTR [rip+0x4ad25]        # 0x4510cc
  4063a7:	mov    ebx,r8d
  4063aa:	mov    rsi,r9
  4063ad:	test   edx,edx
  4063af:	jne    0x406580
  4063b5:	mov    DWORD PTR [rip+0x4adcd],ebx        # 0x451188
  4063bb:	call   0x404840
  4063c0:	call   0x404890
  4063c5:	mov    r12,QWORD PTR [rip+0x43424]        # 0x4497f0
  4063cc:	mov    rcx,QWORD PTR [r12]
  4063d0:	call   0x4053f0
  4063d5:	mov    rcx,QWORD PTR [rip+0x4ad1c]        # 0x4510f8
  4063dc:	mov    QWORD PTR [rip+0x4acdd],r13        # 0x4510c0
  4063e3:	call   0x43a748
  4063e8:	mov    rax,QWORD PTR [rip+0x437f1]        # 0x449be0
  4063ef:	add    DWORD PTR [rip+0x4acd6],0x1        # 0x4510cc
  4063f6:	mov    QWORD PTR [rip+0x4acf7],0x0        # 0x4510f8
  406401:	mov    QWORD PTR [rip+0x4ace4],0x0        # 0x4510f0
  40640c:	mov    QWORD PTR [rip+0x4ad1d],rsi        # 0x451130
  406413:	mov    rcx,QWORD PTR [rax]
  406416:	mov    QWORD PTR [r12],rcx
  40641a:	call   0x420bd0
  40641f:	test   ebx,ebx
  406421:	setne  r14b
  406425:	call   0x4054b0
  40642a:	call   0x405260
  40642f:	test   rax,rax
  406432:	mov    rdi,rax
  406435:	je     0x4064b6
  406437:	test   r14b,r14b
  40643a:	je     0x4064b6
  40643c:	cmp    BYTE PTR [rax],0x0
  40643f:	je     0x4064b6
  406441:	test   r13,r13
  406444:	je     0x4064b6
  406446:	call   0x404dc0
  40644b:	mov    rbp,QWORD PTR [rip+0x4acf6]        # 0x451148
  406452:	cmp    rbp,0x1
  406456:	je     0x406594
  40645c:	xor    esi,esi
  40645e:	test   rbp,rbp
  406461:	mov    rbx,QWORD PTR [rip+0x4ace8]        # 0x451150
  406468:	jne    0x406481
  40646a:	jmp    0x406545
  40646f:	nop
  406470:	add    rsi,0x1
  406474:	add    rbx,0x8
  406478:	cmp    rsi,rbp
  40647b:	je     0x406560
  406481:	mov    rax,QWORD PTR [rbx]
  406484:	mov    rdx,rdi
  406487:	mov    rcx,QWORD PTR [rax]
  40648a:	call   0x4213b0
  40648f:	test   eax,eax
  406491:	jne    0x406470
  406493:	mov    rcx,rdi
  406496:	call   0x43a748
  40649b:	mov    rax,QWORD PTR [rbx]
  40649e:	mov    rcx,QWORD PTR [rax]
  4064a1:	call   0x422a00
  4064a6:	cmp    QWORD PTR [rip+0x4ac9b],rsi        # 0x451148
  4064ad:	mov    rdi,rax
  4064b0:	je     0x406540
  4064b6:	sub    DWORD PTR [rip+0x4ac0f],0x1        # 0x4510cc
  4064bd:	call   0x421060
  4064c2:	mov    rax,QWORD PTR [rip+0x4acaf]        # 0x451178
  4064c9:	mov    QWORD PTR [r12],rax
  4064cd:	call   0x4052f0
  4064d2:	mov    rcx,QWORD PTR [r12]
  4064d6:	call   0x4045a0
  4064db:	call   QWORD PTR [rip+0x4e40f]        # 0x4548f0
  4064e1:	lea    rcx,[rax+0x30]
  4064e5:	call   0x43a780
  4064ea:	mov    rcx,QWORD PTR [rip+0x4ac07]        # 0x4510f8
  4064f1:	mov    QWORD PTR [rip+0x4abc4],0x0        # 0x4510c0
  4064fc:	call   0x43a748
  406501:	mov    eax,DWORD PTR [rip+0x4abc5]        # 0x4510cc
  406507:	mov    QWORD PTR [rip+0x4abe6],0x0        # 0x4510f8
  406512:	mov    QWORD PTR [rip+0x4abd3],0x0        # 0x4510f0
  40651d:	test   eax,eax
  40651f:	je     0x406526
  406521:	call   0x404900
  406526:	mov    rax,rdi
  406529:	add    rsp,0x30
  40652d:	pop    rbx
  40652e:	pop    rsi
  40652f:	pop    rdi
  406530:	pop    rbp
  406531:	pop    r12
  406533:	pop    r13
  406535:	pop    r14
  406537:	ret    
  406538:	nop    DWORD PTR [rax+rax*1+0x0]
  406540:	test   rsi,rsi
  406543:	jne    0x406560
  406545:	lea    rcx,[rip+0x3ad8a]        # 0x4412d6
  40654c:	call   0x433f18
  406551:	mov    rcx,rax
  406554:	call   0x406130
  406559:	jmp    0x406425
  40655e:	xchg   ax,ax
  406560:	lea    rcx,[rip+0x3ad7e]        # 0x4412e5
  406567:	call   0x433f18
  40656c:	mov    rcx,rax
  40656f:	call   0x406130
  406574:	jmp    0x406425
  406579:	nop    DWORD PTR [rax+0x0]
  406580:	mov    QWORD PTR [rsp+0x28],rcx
  406585:	call   0x4046b0
  40658a:	mov    rcx,QWORD PTR [rsp+0x28]
  40658f:	jmp    0x4063b5
  406594:	mov    rcx,rdi
  406597:	call   0x43a748
  40659c:	mov    rax,QWORD PTR [rip+0x4abad]        # 0x451150
  4065a3:	mov    rax,QWORD PTR [rax]
  4065a6:	mov    rcx,QWORD PTR [rax]
  4065a9:	call   0x422a00
  4065ae:	mov    rdi,rax
  4065b1:	jmp    0x4064b6
  4065b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065c0:	xor    r9d,r9d
  4065c3:	mov    r8d,0x1
  4065c9:	jmp    0x406390
  4065ce:	xchg   ax,ax
  4065d0:	xor    r9d,r9d
  4065d3:	xor    r8d,r8d
  4065d6:	jmp    0x406390
  4065db:	nop    DWORD PTR [rax+rax*1+0x0]
  4065e0:	mov    r9,r8
  4065e3:	mov    r8d,0x1
  4065e9:	jmp    0x406390
  4065ee:	xchg   ax,ax
  4065f0:	push   r15
  4065f2:	push   r14
  4065f4:	push   r13
  4065f6:	push   r12
  4065f8:	push   rbp
  4065f9:	push   rdi
  4065fa:	push   rsi
  4065fb:	push   rbx
  4065fc:	sub    rsp,0x68
  406600:	call   0x404dc0
  406605:	mov    rax,QWORD PTR [rip+0x4ab3c]        # 0x451148
  40660c:	test   rax,rax
  40660f:	je     0x406885
  406615:	cmp    rax,0x1
  406619:	je     0x4068a0
  40661f:	lea    rbx,[rsp+0x40]
  406624:	mov    rcx,rbx
  406627:	call   0x40a000
  40662c:	mov    rsi,QWORD PTR [rip+0x4ab15]        # 0x451148
  406633:	lea    rdx,[rip+0x3acc8]        # 0x441302
  40663a:	lea    rcx,[rip+0x3acd2]        # 0x441313
  406641:	mov    r8d,esi
  406644:	call   0x433f10
  406649:	mov    r8,rsi
  40664c:	mov    rdx,rax
  40664f:	mov    rcx,rbx
  406652:	call   0x40ba90
  406657:	mov    rdi,QWORD PTR [rip+0x4aaea]        # 0x451148
  40665e:	test   rdi,rdi
  406661:	je     0x406930
  406667:	mov    rsi,QWORD PTR [rip+0x4aae2]        # 0x451150
  40666e:	xor    r13d,r13d
  406671:	lea    rbp,[rsi+rdi*8]
  406675:	mov    rax,QWORD PTR [rsi]
  406678:	mov    rcx,QWORD PTR [rax]
  40667b:	call   0x43a620
  406680:	cdqe   
  406682:	cmp    r13,rax
  406685:	cmovb  r13,rax
  406689:	add    rsi,0x8
  40668d:	cmp    rsi,rbp
  406690:	jne    0x406675
  406692:	lea    r8,[rdi-0x1]
  406696:	add    r13,0x4
  40669a:	mov    rax,QWORD PTR [rip+0x4aad7]        # 0x451178
  4066a1:	xor    edx,edx
  4066a3:	movsxd r9,DWORD PTR [rax+0x10]
  4066a7:	mov    rax,r9
  4066aa:	div    r13
  4066ad:	cmp    rax,0x1
  4066b1:	mov    rcx,rax
  4066b4:	je     0x4066cf
  4066b6:	imul   rax,r13
  4066ba:	cmp    r9,rax
  4066bd:	je     0x4068b6
  4066c3:	test   rcx,rcx
  4066c6:	mov    eax,0x1
  4066cb:	cmove  rcx,rax
  4066cf:	cmp    rcx,rdi
  4066d2:	jbe    0x40686b
  4066d8:	mov    r14d,0x1
  4066de:	lea    rax,[r14*8+0x0]
  4066e6:	mov    QWORD PTR [rsp+0x38],0x0
  4066ef:	mov    QWORD PTR [rsp+0x28],rax
  4066f4:	lea    rax,[rcx-0x1]
  4066f8:	mov    QWORD PTR [rsp+0x30],rax
  4066fd:	mov    rax,QWORD PTR [rsp+0x38]
  406702:	cmp    rax,QWORD PTR [rip+0x4aa3f]        # 0x451148
  406709:	jae    0x406790
  40670f:	lea    r12,[rax*8+0x0]
  406717:	mov    rbp,rax
  40671a:	xor    edi,edi
  40671c:	nop    DWORD PTR [rax+0x0]
  406720:	mov    rax,QWORD PTR [rip+0x4aa29]        # 0x451150
  406727:	mov    rax,QWORD PTR [rax+r12*1]
  40672b:	mov    r15,QWORD PTR [rax]
  40672e:	mov    rcx,r15
  406731:	call   0x43a620
  406736:	lea    rdx,[rip+0x3abe6]        # 0x441323
  40673d:	mov    r8,r15
  406740:	mov    rcx,rbx
  406743:	mov    rsi,rax
  406746:	call   0x40ba90
  40674b:	cmp    rdi,QWORD PTR [rsp+0x30]
  406750:	je     0x406790
  406752:	movsxd rsi,esi
  406755:	mov    rax,r13
  406758:	sub    rax,rsi
  40675b:	mov    rsi,rax
  40675e:	je     0x40677b
  406760:	xor    r15d,r15d
  406763:	lea    rdx,[rip+0x3ab4f]        # 0x4412b9
  40676a:	mov    rcx,rbx
  40676d:	add    r15,0x1
  406771:	call   0x40ba90
  406776:	cmp    r15,rsi
  406779:	jne    0x406763
  40677b:	add    rbp,r14
  40677e:	add    rdi,0x1
  406782:	add    r12,QWORD PTR [rsp+0x28]
  406787:	cmp    QWORD PTR [rip+0x4a9ba],rbp        # 0x451148
  40678e:	ja     0x406720
  406790:	lea    rdx,[rip+0x3ab8f]        # 0x441326
  406797:	mov    rcx,rbx
  40679a:	call   0x40ba90
  40679f:	add    QWORD PTR [rsp+0x38],0x1
  4067a5:	mov    rax,QWORD PTR [rsp+0x38]
  4067aa:	cmp    r14,rax
  4067ad:	ja     0x4066fd
  4067b3:	mov    rcx,rbx
  4067b6:	call   0x41fd00
  4067bb:	lea    rcx,[rip+0x3aa57]        # 0x441219
  4067c2:	mov    rbx,rax
  4067c5:	call   0x422a00
  4067ca:	mov    rcx,rbx
  4067cd:	mov    rdx,rax
  4067d0:	call   0x409f70
  4067d5:	or     DWORD PTR [rbx+0x2c],0x100
  4067dc:	lea    rcx,[rip+0x3aa36]        # 0x441219
  4067e3:	mov    QWORD PTR [rip+0x4a93e],rbx        # 0x451128
  4067ea:	call   0x409fa0
  4067ef:	test   rax,rax
  4067f2:	mov    rbx,rax
  4067f5:	je     0x4068c5
  4067fb:	mov    rdx,QWORD PTR [rbx+0x20]
  4067ff:	test   rdx,rdx
  406802:	je     0x406845
  406804:	test   BYTE PTR [rdx+0x2c],0x10
  406808:	lea    r12,[rip+0x3aa0a]        # 0x441219
  40680f:	mov    ebp,0xe
  406814:	jne    0x406837
  406816:	jmp    0x406845
  406818:	nop    DWORD PTR [rax+rax*1+0x0]
  406820:	mov    rcx,rbx
  406823:	call   0x414d90
  406828:	mov    rdx,QWORD PTR [rbx+0x20]
  40682c:	test   rdx,rdx
  40682f:	je     0x406845
  406831:	test   BYTE PTR [rdx+0x2c],0x10
  406835:	je     0x406845
  406837:	mov    rsi,QWORD PTR [rdx+0x10]
  40683b:	mov    rdi,r12
  40683e:	mov    rcx,rbp
  406841:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406843:	je     0x406820
  406845:	mov    rdx,QWORD PTR [rip+0x4a8dc]        # 0x451128
  40684c:	mov    rcx,rbx
  40684f:	call   0x415020
  406854:	call   0x403fa0
  406859:	nop
  40685a:	add    rsp,0x68
  40685e:	pop    rbx
  40685f:	pop    rsi
  406860:	pop    rdi
  406861:	pop    rbp
  406862:	pop    r12
  406864:	pop    r13
  406866:	pop    r14
  406868:	pop    r15
  40686a:	ret    
  40686b:	lea    rax,[rcx+r8*1]
  40686f:	xor    edx,edx
  406871:	div    rcx
  406874:	test   rax,rax
  406877:	mov    r14,rax
  40687a:	jne    0x4066de
  406880:	jmp    0x4067b3
  406885:	call   0x41c810
  40688a:	lea    rcx,[rip+0x3aa45]        # 0x4412d6
  406891:	call   0x433f18
  406896:	mov    rcx,rax
  406899:	call   0x406130
  40689e:	jmp    0x40685a
  4068a0:	lea    rcx,[rip+0x3aa4b]        # 0x4412f2
  4068a7:	call   0x433f18
  4068ac:	mov    rcx,rax
  4068af:	call   0x406130
  4068b4:	jmp    0x40685a
  4068b6:	sub    rcx,0x1
  4068ba:	cmp    rcx,rdi
  4068bd:	ja     0x4066d8
  4068c3:	jmp    0x40686b
  4068c5:	mov    rbx,QWORD PTR [rip+0x4a8ac]        # 0x451178
  4068cc:	lea    rdx,[r14+r14*1]
  4068d0:	movsxd rcx,DWORD PTR [rbx+0x14]
  4068d4:	cmp    rcx,rdx
  4068d7:	jbe    0x4067fb
  4068dd:	cmp    ecx,0x5
  4068e0:	jle    0x4067fb
  4068e6:	mov    rcx,rbx
  4068e9:	call   0x4053f0
  4068ee:	mov    rsi,QWORD PTR [rip+0x42efb]        # 0x4497f0
  4068f5:	mov    rax,QWORD PTR [rip+0x4a87c]        # 0x451178
  4068fc:	mov    QWORD PTR [rsi],rax
  4068ff:	call   0x41f7b0
  406904:	sub    r14d,DWORD PTR [rax+0x14]
  406908:	mov    rcx,rax
  40690b:	mov    rbx,rax
  40690e:	lea    edx,[r14+0x2]
  406912:	call   0x41f8c0
  406917:	mov    rax,QWORD PTR [rip+0x432c2]        # 0x449be0
  40691e:	mov    QWORD PTR [rip+0x4a85b],rbx        # 0x451180
  406925:	mov    rax,QWORD PTR [rax]
  406928:	mov    QWORD PTR [rsi],rax
  40692b:	jmp    0x4067fb
  406930:	mov    r8,0xffffffffffffffff
  406937:	mov    r13d,0x4
  40693d:	jmp    0x40669a
  406942:	nop    DWORD PTR [rax+0x0]
  406946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406950:	push   rsi
  406951:	push   rbx
  406952:	sub    rsp,0x28
  406956:	lea    rax,[rip+0xfffffffffffffff3]        # 0x406950
  40695d:	cmp    QWORD PTR [rip+0x4a964],rax        # 0x4512c8
  406964:	mov    rsi,rcx
  406967:	mov    ebx,edx
  406969:	je     0x4069e0
  40696b:	mov    eax,DWORD PTR [rip+0x4a81b]        # 0x45118c
  406971:	mov    DWORD PTR [rip+0x4a81d],eax        # 0x451194
  406977:	call   0x404dc0
  40697c:	cmp    QWORD PTR [rip+0x4a7c4],0x0        # 0x451148
  406984:	je     0x4069f0
  406986:	mov    rax,QWORD PTR [rip+0x4a7ab]        # 0x451138
  40698d:	mov    rax,QWORD PTR [rax]
  406990:	movsx  r8d,BYTE PTR [rax]
  406994:	test   r8b,r8b
  406997:	je     0x4069e0
  406999:	mov    eax,DWORD PTR [rip+0x4a7f1]        # 0x451190
  40699f:	mov    ebx,0x1
  4069a4:	mov    DWORD PTR [rip+0x4a7e2],eax        # 0x45118c
  4069aa:	mov    DWORD PTR [rip+0x4a7e4],eax        # 0x451194
  4069b0:	mov    edx,0x1
  4069b5:	mov    rcx,rsi
  4069b8:	call   0x405d90
  4069bd:	mov    rax,QWORD PTR [rip+0x4a774]        # 0x451138
  4069c4:	mov    rax,QWORD PTR [rax]
  4069c7:	movsx  r8d,BYTE PTR [rax+rbx*1]
  4069cc:	add    rbx,0x1
  4069d0:	test   r8b,r8b
  4069d3:	jne    0x4069b0
  4069d5:	add    rsp,0x28
  4069d9:	pop    rbx
  4069da:	pop    rsi
  4069db:	ret    
  4069dc:	nop    DWORD PTR [rax+0x0]
  4069e0:	mov    edx,ebx
  4069e2:	mov    rcx,rsi
  4069e5:	add    rsp,0x28
  4069e9:	pop    rbx
  4069ea:	pop    rsi
  4069eb:	jmp    0x4065f0
  4069f0:	add    rsp,0x28
  4069f4:	pop    rbx
  4069f5:	pop    rsi
  4069f6:	jmp    0x41c810
  4069fb:	nop
  4069fc:	nop
  4069fd:	nop
  4069fe:	nop
  4069ff:	nop
  406a00:	push   rdi
  406a01:	push   rsi
  406a02:	push   rbx
  406a03:	sub    rsp,0x20
  406a07:	mov    rbx,rcx
  406a0a:	call   0x43a620
  406a0f:	lea    r8d,[rax-0x1]
  406a13:	test   r8d,r8d
  406a16:	jle    0x406a52
  406a18:	movsxd r8,r8d
  406a1b:	lea    rdi,[rbx+r8*1]
  406a1f:	cmp    BYTE PTR [rdi],0x2e
  406a22:	je     0x406a60
  406a24:	sub    eax,0x2
  406a27:	lea    rdx,[rbx+r8*1-0x1]
  406a2c:	sub    r8,rax
  406a2f:	lea    rax,[rbx+r8*1-0x1]
  406a34:	jmp    0x406a4d
  406a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a40:	mov    rdi,rdx
  406a43:	sub    rdx,0x1
  406a47:	cmp    BYTE PTR [rdx+0x1],0x2e
  406a4b:	je     0x406a60
  406a4d:	cmp    rdx,rax
  406a50:	jne    0x406a40
  406a52:	xor    edx,edx
  406a54:	mov    rax,rdx
  406a57:	add    rsp,0x20
  406a5b:	pop    rbx
  406a5c:	pop    rsi
  406a5d:	pop    rdi
  406a5e:	ret    
  406a5f:	nop
  406a60:	lea    rbx,[rip+0x3a9e9]        # 0x441450
  406a67:	lea    rdx,[rip+0x3a8d2]        # 0x441340
  406a6e:	xor    esi,esi
  406a70:	jmp    0x406a82
  406a72:	add    rbx,0x10
  406a76:	mov    rdx,QWORD PTR [rbx-0x10]
  406a7a:	add    esi,0x1
  406a7d:	test   rdx,rdx
  406a80:	je     0x406a54
  406a82:	mov    rcx,rdi
  406a85:	call   0x4213b0
  406a8a:	test   eax,eax
  406a8c:	jne    0x406a72
  406a8e:	lea    rax,[rip+0x3a9ab]        # 0x441440
  406a95:	movsxd rsi,esi
  406a98:	shl    rsi,0x4
  406a9c:	mov    rdx,QWORD PTR [rax+rsi*1+0x8]
  406aa1:	mov    rax,rdx
  406aa4:	add    rsp,0x20
  406aa8:	pop    rbx
  406aa9:	pop    rsi
  406aaa:	pop    rdi
  406aab:	ret    
  406aac:	nop    DWORD PTR [rax+0x0]
  406ab0:	push   r14
  406ab2:	push   r13
  406ab4:	push   r12
  406ab6:	push   rbp
  406ab7:	push   rdi
  406ab8:	push   rsi
  406ab9:	push   rbx
  406aba:	sub    rsp,0x50
  406abe:	lea    rax,[rsp+0x20]
  406ac3:	test   r8,r8
  406ac6:	mov    rsi,r8
  406ac9:	mov    rbx,rcx
  406acc:	mov    r14,rdx
  406acf:	cmove  rsi,rax
  406ad3:	test   rcx,rcx
  406ad6:	je     0x406c5f
  406adc:	call   0x43a620
  406ae1:	mov    rcx,r14
  406ae4:	mov    r13,rax
  406ae7:	call   0x43a620
  406aec:	add    r13d,eax
  406aef:	lea    ecx,[r13+0x1e]
  406af3:	movsxd rcx,ecx
  406af6:	call   0x4227b0
  406afb:	mov    rdx,rbx
  406afe:	mov    rcx,rax
  406b01:	mov    rdi,rax
  406b04:	call   0x4323b0
  406b09:	movzx  edx,BYTE PTR [rax-0x1]
  406b0d:	cmp    dl,0x2f
  406b10:	je     0x406b23
  406b12:	cmp    dl,0x5c
  406b15:	je     0x406b23
  406b17:	mov    ecx,0x2f
  406b1c:	add    r13d,0x1
  406b20:	mov    WORD PTR [rax],cx
  406b23:	movsxd r13,r13d
  406b26:	lea    r12,[rip+0x3a9d3]        # 0x441500
  406b2d:	lea    rbx,[rip+0x3a810]        # 0x441344
  406b34:	mov    rdx,r14
  406b37:	mov    rcx,rdi
  406b3a:	add    r13,rdi
  406b3d:	call   0x43a658
  406b42:	mov    rdx,rbx
  406b45:	mov    rcx,r13
  406b48:	call   0x43a640
  406b4d:	mov    rdx,rsi
  406b50:	mov    rcx,rdi
  406b53:	call   0x435d60
  406b58:	test   eax,eax
  406b5a:	jne    0x406b90
  406b5c:	movzx  eax,WORD PTR [rsi+0x6]
  406b60:	and    ax,0xf000
  406b64:	cmp    ax,0x8000
  406b68:	je     0x406be2
  406b6a:	cmp    ax,0x4000
  406b6e:	je     0x406c04
  406b74:	add    r12,0x8
  406b78:	mov    rbx,QWORD PTR [r12]
  406b7c:	test   rbx,rbx
  406b7f:	jne    0x406b42
  406b81:	mov    rcx,rdi
  406b84:	call   0x43a748
  406b89:	jmp    0x406bf2
  406b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b90:	mov    rcx,rdi
  406b93:	lea    rbx,[rip+0x3a8b6]        # 0x441450
  406b9a:	call   0x43a620
  406b9f:	movsxd rbp,eax
  406ba2:	lea    rdx,[rip+0x3a797]        # 0x441340
  406ba9:	add    rbp,rdi
  406bac:	jmp    0x406bbd
  406bae:	xchg   ax,ax
  406bb0:	add    rbx,0x10
  406bb4:	mov    rdx,QWORD PTR [rbx-0x10]
  406bb8:	test   rdx,rdx
  406bbb:	je     0x406b74
  406bbd:	mov    rcx,rbp
  406bc0:	call   0x43a640
  406bc5:	mov    rdx,rsi
  406bc8:	mov    rcx,rdi
  406bcb:	call   0x435d60
  406bd0:	test   eax,eax
  406bd2:	jne    0x406bb0
  406bd4:	movzx  eax,WORD PTR [rsi+0x6]
  406bd8:	and    ax,0xf000
  406bdc:	cmp    ax,0x8000
  406be0:	jne    0x406bb0
  406be2:	mov    rax,QWORD PTR [rip+0x42c37]        # 0x449820
  406be9:	mov    rbx,rdi
  406bec:	mov    eax,DWORD PTR [rax]
  406bee:	test   eax,eax
  406bf0:	jne    0x406c46
  406bf2:	mov    rax,rbx
  406bf5:	add    rsp,0x50
  406bf9:	pop    rbx
  406bfa:	pop    rsi
  406bfb:	pop    rdi
  406bfc:	pop    rbp
  406bfd:	pop    r12
  406bff:	pop    r13
  406c01:	pop    r14
  406c03:	ret    
  406c04:	mov    rcx,rdi
  406c07:	call   0x422a00
  406c0c:	mov    r8,rsi
  406c0f:	mov    rbp,rax
  406c12:	mov    rdx,r14
  406c15:	mov    rcx,rax
  406c18:	call   0x406ab0
  406c1d:	mov    rcx,rbp
  406c20:	mov    rbx,rax
  406c23:	call   0x43a748
  406c28:	test   rbx,rbx
  406c2b:	je     0x406b74
  406c31:	mov    rcx,rdi
  406c34:	call   0x43a748
  406c39:	mov    rax,QWORD PTR [rip+0x42be0]        # 0x449820
  406c40:	mov    edx,DWORD PTR [rax]
  406c42:	test   edx,edx
  406c44:	je     0x406bf2
  406c46:	lea    rcx,[rip+0x3a6fd]        # 0x44134a
  406c4d:	call   0x433f18
  406c52:	mov    rdx,rbx
  406c55:	mov    rcx,rax
  406c58:	call   0x4146b0
  406c5d:	jmp    0x406bf2
  406c5f:	mov    rcx,rdx
  406c62:	call   0x43a620
  406c67:	mov    r13d,eax
  406c6a:	add    eax,0x1e
  406c6d:	movsxd rcx,eax
  406c70:	call   0x4227b0
  406c75:	mov    rdi,rax
  406c78:	mov    BYTE PTR [rax],0x0
  406c7b:	jmp    0x406b23
  406c80:	push   r13
  406c82:	push   r12
  406c84:	push   rbp
  406c85:	push   rdi
  406c86:	push   rsi
  406c87:	push   rbx
  406c88:	sub    rsp,0x68
  406c8c:	lea    rax,[rsp+0x30]
  406c91:	test   r8,r8
  406c94:	mov    r12,r8
  406c97:	mov    rbp,rcx
  406c9a:	mov    r13,rdx
  406c9d:	cmove  r12,rax
  406ca1:	cmp    BYTE PTR [rcx],0x0
  406ca4:	je     0x406d50
  406caa:	lea    rdi,[rip+0x3a6a7]        # 0x441358
  406cb1:	mov    ecx,0x2
  406cb6:	mov    rsi,rbp
  406cb9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406cbb:	je     0x406d50
  406cc1:	lea    rdi,[rip+0x3a692]        # 0x44135a
  406cc8:	mov    ecx,0x3
  406ccd:	mov    rsi,rbp
  406cd0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406cd2:	je     0x406d50
  406cd4:	mov    rsi,QWORD PTR [rip+0x42b45]        # 0x449820
  406cdb:	jmp    0x406cfb
  406cdd:	nop    DWORD PTR [rax]
  406ce0:	cmp    BYTE PTR [rbx],0x7e
  406ce3:	je     0x406d30
  406ce5:	mov    rcx,rbx
  406ce8:	mov    r8,r12
  406ceb:	mov    rdx,rbp
  406cee:	call   0x406ab0
  406cf3:	test   rax,rax
  406cf6:	mov    rbx,rax
  406cf9:	jne    0x406d60
  406cfb:	mov    rcx,r13
  406cfe:	call   0x40e9d0
  406d03:	test   rax,rax
  406d06:	mov    rbx,rax
  406d09:	je     0x406d50
  406d0b:	mov    eax,DWORD PTR [rsi]
  406d0d:	test   eax,eax
  406d0f:	je     0x406ce0
  406d11:	lea    rcx,[rip+0x3a645]        # 0x44135d
  406d18:	call   0x433f18
  406d1d:	mov    r8,rbx
  406d20:	mov    rdx,rbp
  406d23:	mov    rcx,rax
  406d26:	call   0x4146b0
  406d2b:	cmp    BYTE PTR [rbx],0x7e
  406d2e:	jne    0x406ce5
  406d30:	mov    rcx,rbx
  406d33:	call   0x41e9a0
  406d38:	mov    rcx,rbx
  406d3b:	mov    rdi,rax
  406d3e:	mov    rbx,rdi
  406d41:	call   0x43a748
  406d46:	jmp    0x406ce5
  406d48:	nop    DWORD PTR [rax+rax*1+0x0]
  406d50:	xor    eax,eax
  406d52:	add    rsp,0x68
  406d56:	pop    rbx
  406d57:	pop    rsi
  406d58:	pop    rdi
  406d59:	pop    rbp
  406d5a:	pop    r12
  406d5c:	pop    r13
  406d5e:	ret    
  406d5f:	nop
  406d60:	movzx  eax,BYTE PTR [rax]
  406d63:	cmp    al,0x5c
  406d65:	je     0x406db0
  406d67:	cmp    al,0x2f
  406d69:	je     0x406db0
  406d6b:	test   al,al
  406d6d:	je     0x406d78
  406d6f:	cmp    BYTE PTR [rbx+0x1],0x3a
  406d73:	mov    rax,rbx
  406d76:	je     0x406d52
  406d78:	lea    rcx,[rsp+0x28]
  406d7d:	lea    r8,[rip+0x3a5f3]        # 0x441377
  406d84:	lea    rdx,[rip+0x3a5ef]        # 0x44137a
  406d8b:	mov    r9,rbx
  406d8e:	call   0x433f30
  406d93:	mov    rcx,rbx
  406d96:	call   0x43a748
  406d9b:	mov    rax,QWORD PTR [rsp+0x28]
  406da0:	add    rsp,0x68
  406da4:	pop    rbx
  406da5:	pop    rsi
  406da6:	pop    rdi
  406da7:	pop    rbp
  406da8:	pop    r12
  406daa:	pop    r13
  406dac:	ret    
  406dad:	nop    DWORD PTR [rax]
  406db0:	mov    rax,rbx
  406db3:	add    rsp,0x68
  406db7:	pop    rbx
  406db8:	pop    rsi
  406db9:	pop    rdi
  406dba:	pop    rbp
  406dbb:	pop    r12
  406dbd:	pop    r13
  406dbf:	ret    
  406dc0:	push   rbx
  406dc1:	sub    rsp,0x70
  406dc5:	mov    rax,QWORD PTR [rip+0x42a54]        # 0x449820
  406dcc:	mov    rbx,rcx
  406dcf:	mov    r8,rdx
  406dd2:	mov    eax,DWORD PTR [rax]
  406dd4:	test   eax,eax
  406dd6:	jne    0x406e70
  406ddc:	lea    rax,[rsp+0x40]
  406de1:	test   r8,r8
  406de4:	mov    DWORD PTR [rip+0x4a512],0x0        # 0x451300
  406dee:	cmove  r8,rax
  406df2:	test   rbx,rbx
  406df5:	je     0x406ec1
  406dfb:	movzx  eax,BYTE PTR [rbx]
  406dfe:	test   al,al
  406e00:	je     0x406ec1
  406e06:	cmp    al,0x5c
  406e08:	je     0x406e25
  406e0a:	cmp    al,0x2f
  406e0c:	je     0x406e25
  406e0e:	movzx  edx,BYTE PTR [rbx+0x1]
  406e12:	cmp    dl,0x3a
  406e15:	je     0x406e25
  406e17:	cmp    al,0x2e
  406e19:	jne    0x406e40
  406e1b:	cmp    dl,0x5c
  406e1e:	je     0x406e25
  406e20:	cmp    dl,0x2f
  406e23:	jne    0x406e44
  406e25:	mov    rdx,rbx
  406e28:	xor    ecx,ecx
  406e2a:	call   0x406ab0
  406e2f:	test   rax,rax
  406e32:	je     0x406e5e
  406e34:	add    rsp,0x70
  406e38:	pop    rbx
  406e39:	ret    
  406e3a:	nop    WORD PTR [rax+rax*1+0x0]
  406e40:	cmp    al,0x7e
  406e42:	je     0x406ea0
  406e44:	lea    rdx,[rsp+0x3c]
  406e49:	mov    rcx,rbx
  406e4c:	mov    DWORD PTR [rsp+0x3c],0x0
  406e54:	call   0x406c80
  406e59:	test   rax,rax
  406e5c:	jne    0x406e34
  406e5e:	mov    DWORD PTR [rip+0x4a498],0x2        # 0x451300
  406e68:	add    rsp,0x70
  406e6c:	pop    rbx
  406e6d:	ret    
  406e6e:	xchg   ax,ax
  406e70:	lea    rcx,[rip+0x3a508]        # 0x44137f
  406e77:	mov    QWORD PTR [rsp+0x28],rdx
  406e7c:	call   0x433f18
  406e81:	mov    rdx,rbx
  406e84:	mov    rcx,rax
  406e87:	call   0x4146b0
  406e8c:	mov    r8,QWORD PTR [rsp+0x28]
  406e91:	jmp    0x406ddc
  406e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ea0:	mov    rcx,rbx
  406ea3:	mov    QWORD PTR [rsp+0x28],r8
  406ea8:	call   0x41e9a0
  406ead:	mov    r8,QWORD PTR [rsp+0x28]
  406eb2:	mov    rdx,rax
  406eb5:	xor    ecx,ecx
  406eb7:	call   0x406ab0
  406ebc:	jmp    0x406e2f
  406ec1:	xor    eax,eax
  406ec3:	add    rsp,0x70
  406ec7:	pop    rbx
  406ec8:	ret    
  406ec9:	nop    DWORD PTR [rax+0x0]
  406ed0:	push   r15
  406ed2:	push   r14
  406ed4:	push   r13
  406ed6:	push   r12
  406ed8:	push   rbp
  406ed9:	push   rdi
  406eda:	push   rsi
  406edb:	push   rbx
  406edc:	sub    rsp,0x38
  406ee0:	mov    DWORD PTR [rip+0x4a416],0x0        # 0x451300
  406eea:	mov    rbx,rcx
  406eed:	mov    r14,rdx
  406ef0:	mov    rdx,r8
  406ef3:	mov    rsi,r8
  406ef6:	mov    rdi,r9
  406ef9:	call   0x435d60
  406efe:	mov    rcx,rbx
  406f01:	mov    ebp,DWORD PTR [rsi+0x14]
  406f04:	call   0x406a00
  406f09:	test   rax,rax
  406f0c:	je     0x4070e5
  406f12:	mov    DWORD PTR [rdi],0x1
  406f18:	mov    rcx,rbx
  406f1b:	mov    DWORD PTR [rip+0x4a3db],0x0        # 0x451300
  406f25:	call   0x406a00
  406f2a:	test   rax,rax
  406f2d:	mov    rsi,rax
  406f30:	je     0x407164
  406f36:	mov    rcx,rbx
  406f39:	call   0x43a620
  406f3e:	mov    rcx,rsi
  406f41:	mov    rdi,rax
  406f44:	call   0x43a620
  406f49:	lea    rcx,[rdi+rax*1+0xf]
  406f4e:	call   0x4227b0
  406f53:	lea    rdx,[rip+0x3a440]        # 0x44139a
  406f5a:	lea    r9,[rip+0x3a434]        # 0x441395
  406f61:	mov    QWORD PTR [rsp+0x20],rbx
  406f66:	mov    r8,rsi
  406f69:	mov    rcx,rax
  406f6c:	mov    rdi,rax
  406f6f:	call   0x433f00
  406f74:	mov    rax,QWORD PTR [rip+0x42a35]        # 0x4499b0
  406f7b:	mov    edx,DWORD PTR [rax]
  406f7d:	test   edx,edx
  406f7f:	jne    0x4070a3
  406f85:	lea    rdx,[rip+0x3a421]        # 0x4413ad
  406f8c:	mov    rcx,rdi
  406f8f:	call   QWORD PTR [rip+0x4d9fb]        # 0x454990
  406f95:	mov    rcx,rdi
  406f98:	mov    r13,rax
  406f9b:	call   0x43a748
  406fa0:	test   r13,r13
  406fa3:	je     0x40707d
  406fa9:	mov    ecx,0x10000
  406fae:	xor    ebp,ebp
  406fb0:	xor    ebx,ebx
  406fb2:	call   0x4227b0
  406fb7:	xor    r12d,r12d
  406fba:	mov    rdi,rax
  406fbd:	jmp    0x406fdb
  406fbf:	nop
  406fc0:	lea    rcx,[r12+rbx*1]
  406fc4:	mov    r8,r15
  406fc7:	mov    rdx,rdi
  406fca:	mov    rbx,rsi
  406fcd:	call   0x43a6b8
  406fd2:	cmp    r15,0x10000
  406fd9:	jne    0x407014
  406fdb:	mov    r9,r13
  406fde:	mov    r8d,0x10000
  406fe4:	mov    edx,0x1
  406fe9:	mov    rcx,rdi
  406fec:	call   0x43a750
  406ff1:	lea    rsi,[rax+rbx*1]
  406ff5:	mov    r15,rax
  406ff8:	cmp    rsi,rbp
  406ffb:	jb     0x406fc0
  406ffd:	add    rbp,0x20000
  407004:	mov    rcx,r12
  407007:	mov    rdx,rbp
  40700a:	call   0x422820
  40700f:	mov    r12,rax
  407012:	jmp    0x406fc0
  407014:	mov    rcx,rdi
  407017:	call   0x43a748
  40701c:	mov    rcx,r13
  40701f:	call   QWORD PTR [rip+0x4d963]        # 0x454988
  407025:	cmp    eax,0xffffffff
  407028:	je     0x407070
  40702a:	lea    rdx,[rsi+0x1]
  40702e:	mov    rcx,r12
  407031:	call   0x422820
  407036:	mov    BYTE PTR [rax+rsi*1],0x0
  40703a:	mov    rbx,rax
  40703d:	mov    rax,QWORD PTR [rip+0x4296c]        # 0x4499b0
  407044:	mov    eax,DWORD PTR [rax]
  407046:	test   eax,eax
  407048:	jne    0x40709c
  40704a:	nop    WORD PTR [rax+rax*1+0x0]
  407050:	mov    QWORD PTR [r14],rsi
  407053:	mov    rax,rbx
  407056:	add    rsp,0x38
  40705a:	pop    rbx
  40705b:	pop    rsi
  40705c:	pop    rdi
  40705d:	pop    rbp
  40705e:	pop    r12
  407060:	pop    r13
  407062:	pop    r14
  407064:	pop    r15
  407066:	ret    
  407067:	nop    WORD PTR [rax+rax*1+0x0]
  407070:	test   r12,r12
  407073:	je     0x40707d
  407075:	mov    rcx,r12
  407078:	call   0x43a748
  40707d:	call   QWORD PTR [rip+0x4d8bd]        # 0x454940
  407083:	mov    eax,DWORD PTR [rax]
  407085:	xor    esi,esi
  407087:	xor    ebx,ebx
  407089:	mov    DWORD PTR [rip+0x4a271],eax        # 0x451300
  40708f:	mov    rax,QWORD PTR [rip+0x4291a]        # 0x4499b0
  407096:	mov    eax,DWORD PTR [rax]
  407098:	test   eax,eax
  40709a:	je     0x407050
  40709c:	call   0x421200
  4070a1:	jmp    0x407050
  4070a3:	mov    rcx,rdi
  4070a6:	call   0x43a620
  4070ab:	lea    rcx,[rax+0x5]
  4070af:	call   0x4227b0
  4070b4:	lea    rdx,[rip+0x3a2e9]        # 0x4413a4
  4070bb:	mov    r8,rdi
  4070be:	mov    rcx,rax
  4070c1:	mov    rbx,rax
  4070c4:	call   0x433f00
  4070c9:	lea    rcx,[rip+0x3a2da]        # 0x4413aa
  4070d0:	mov    rdx,rbx
  4070d3:	call   0x421100
  4070d8:	mov    rcx,rbx
  4070db:	call   0x43a748
  4070e0:	jmp    0x406f85
  4070e5:	mov    DWORD PTR [rdi],0x0
  4070eb:	mov    r8d,0x1b6
  4070f1:	mov    edx,0x8000
  4070f6:	mov    rcx,rbx
  4070f9:	call   0x43a5a0
  4070fe:	test   eax,eax
  407100:	mov    edi,eax
  407102:	js     0x40716d
  407104:	movsxd rsi,ebp
  407107:	lea    rcx,[rsi+0x1]
  40710b:	call   0x4227b0
  407110:	mov    r8d,ebp
  407113:	mov    rdx,rax
  407116:	mov    ecx,edi
  407118:	mov    rbx,rax
  40711b:	call   0x43a5a8
  407120:	movsxd rdx,eax
  407123:	cmp    rsi,rdx
  407126:	jne    0x407140
  407128:	mov    BYTE PTR [rbx+rsi*1],0x0
  40712c:	mov    ecx,edi
  40712e:	call   0x43a560
  407133:	jmp    0x407050
  407138:	nop    DWORD PTR [rax+rax*1+0x0]
  407140:	call   QWORD PTR [rip+0x4d7fa]        # 0x454940
  407146:	mov    eax,DWORD PTR [rax]
  407148:	mov    ecx,edi
  40714a:	mov    DWORD PTR [rip+0x4a1b0],eax        # 0x451300
  407150:	call   0x43a560
  407155:	mov    rcx,rbx
  407158:	call   0x43a748
  40715d:	xor    eax,eax
  40715f:	jmp    0x407056
  407164:	xor    esi,esi
  407166:	xor    ebx,ebx
  407168:	jmp    0x407050
  40716d:	call   QWORD PTR [rip+0x4d7cd]        # 0x454940
  407173:	mov    eax,DWORD PTR [rax]
  407175:	mov    DWORD PTR [rip+0x4a185],eax        # 0x451300
  40717b:	xor    eax,eax
  40717d:	jmp    0x407056
  407182:	nop    DWORD PTR [rax+0x0]
  407186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407190:	push   rdi
  407191:	push   rsi
  407192:	push   rbx
  407193:	sub    rsp,0x20
  407197:	xor    eax,eax
  407199:	test   edx,edx
  40719b:	je     0x4071eb
  40719d:	mov    rbx,rcx
  4071a0:	mov    ecx,edx
  4071a2:	call   0x433110
  4071a7:	mov    rcx,rbx
  4071aa:	mov    rsi,rax
  4071ad:	call   0x43a620
  4071b2:	mov    rcx,rsi
  4071b5:	mov    rdi,rax
  4071b8:	call   0x43a620
  4071bd:	lea    edx,[rdi+rax*1]
  4071c0:	lea    eax,[rdx+0x4]
  4071c3:	cmp    eax,DWORD PTR [rip+0x4a13b]        # 0x451304
  4071c9:	jge    0x4071f3
  4071cb:	mov    rcx,QWORD PTR [rip+0x4a136]        # 0x451308
  4071d2:	lea    rdx,[rip+0x3a1d7]        # 0x4413b0
  4071d9:	mov    r9,rsi
  4071dc:	mov    r8,rbx
  4071df:	call   0x433f00
  4071e4:	mov    rax,QWORD PTR [rip+0x4a11d]        # 0x451308
  4071eb:	add    rsp,0x20
  4071ef:	pop    rbx
  4071f0:	pop    rsi
  4071f1:	pop    rdi
  4071f2:	ret    
  4071f3:	mov    rcx,QWORD PTR [rip+0x4a10e]        # 0x451308
  4071fa:	add    edx,0x6
  4071fd:	mov    DWORD PTR [rip+0x4a101],edx        # 0x451304
  407203:	movsxd rdx,edx
  407206:	call   0x422820
  40720b:	mov    QWORD PTR [rip+0x4a0f6],rax        # 0x451308
  407212:	mov    rcx,rax
  407215:	jmp    0x4071d2
  407217:	nop    WORD PTR [rax+rax*1+0x0]
  407220:	push   r15
  407222:	push   r14
  407224:	push   r13
  407226:	push   r12
  407228:	push   rbp
  407229:	push   rdi
  40722a:	push   rsi
  40722b:	push   rbx
  40722c:	sub    rsp,0xb8
  407233:	lea    r14,[rip+0x3a2c6]        # 0x441500
  40723a:	lea    rdx,[rip+0x3a103]        # 0x441344
  407241:	lea    rbp,[rsp+0x30]
  407246:	lea    rsi,[rsp+0x70]
  40724b:	mov    r12,rcx
  40724e:	lea    rax,[rbp+0x3]
  407252:	mov    QWORD PTR [rsp+0x28],rax
  407257:	mov    rcx,QWORD PTR [rsp+0x28]
  40725c:	mov    DWORD PTR [rbp+0x0],0x726964
  407263:	call   0x4323b0
  407268:	mov    rdx,rbp
  40726b:	mov    rcx,r12
  40726e:	mov    rdi,rax
  407271:	call   0x4213b0
  407276:	test   eax,eax
  407278:	je     0x4072d5
  40727a:	mov    rax,rdi
  40727d:	lea    r15,[rip+0x3a1cc]        # 0x441450
  407284:	lea    rbx,[rip+0x3a0b5]        # 0x441340
  40728b:	sub    rax,rbp
  40728e:	lea    r13,[rax+0x1]
  407292:	lea    rdi,[rsi+rax*1]
  407296:	jmp    0x4072ad
  407298:	nop    DWORD PTR [rax+rax*1+0x0]
  4072a0:	add    r15,0x10
  4072a4:	mov    rbx,QWORD PTR [r15-0x10]
  4072a8:	test   rbx,rbx
  4072ab:	je     0x4072f0
  4072ad:	mov    r8,r13
  4072b0:	mov    rdx,rbp
  4072b3:	mov    rcx,rsi
  4072b6:	call   0x43a6b8
  4072bb:	mov    rdx,rbx
  4072be:	mov    rcx,rdi
  4072c1:	call   0x43a640
  4072c6:	mov    rdx,rsi
  4072c9:	mov    rcx,r12
  4072cc:	call   0x4213b0
  4072d1:	test   eax,eax
  4072d3:	jne    0x4072a0
  4072d5:	mov    eax,0x1
  4072da:	add    rsp,0xb8
  4072e1:	pop    rbx
  4072e2:	pop    rsi
  4072e3:	pop    rdi
  4072e4:	pop    rbp
  4072e5:	pop    r12
  4072e7:	pop    r13
  4072e9:	pop    r14
  4072eb:	pop    r15
  4072ed:	ret    
  4072ee:	xchg   ax,ax
  4072f0:	add    r14,0x8
  4072f4:	mov    rdx,QWORD PTR [r14]
  4072f7:	test   rdx,rdx
  4072fa:	jne    0x407257
  407300:	xor    eax,eax
  407302:	jmp    0x4072da
  407304:	nop
  407305:	nop
  407306:	nop
  407307:	nop
  407308:	nop
  407309:	nop
  40730a:	nop
  40730b:	nop
  40730c:	nop
  40730d:	nop
  40730e:	nop
  40730f:	nop
  407310:	push   rbp
  407311:	push   rdi
  407312:	push   rsi
  407313:	push   rbx
  407314:	sub    rsp,0x28
  407318:	mov    rax,QWORD PTR [rip+0x428f1]        # 0x449c10
  40731f:	mov    ebp,0xc
  407324:	mov    rbx,QWORD PTR [rax]
  407327:	test   rbx,rbx
  40732a:	je     0x40735b
  40732c:	nop    DWORD PTR [rax+0x0]
  407330:	mov    rcx,QWORD PTR [rbx+0x20]
  407334:	call   0x409f50
  407339:	test   eax,eax
  40733b:	je     0x407353
  40733d:	mov    rax,QWORD PTR [rbx+0x20]
  407341:	lea    rdi,[rip+0x3a1f8]        # 0x441540
  407348:	mov    rcx,rbp
  40734b:	mov    rsi,QWORD PTR [rax+0x10]
  40734f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407351:	je     0x40735d
  407353:	mov    rbx,QWORD PTR [rbx]
  407356:	test   rbx,rbx
  407359:	jne    0x407330
  40735b:	xor    ebx,ebx
  40735d:	mov    rax,rbx
  407360:	add    rsp,0x28
  407364:	pop    rbx
  407365:	pop    rsi
  407366:	pop    rdi
  407367:	pop    rbp
  407368:	ret    
  407369:	nop    DWORD PTR [rax+0x0]
  407370:	push   r14
  407372:	push   r13
  407374:	push   r12
  407376:	push   rbp
  407377:	push   rdi
  407378:	push   rsi
  407379:	push   rbx
  40737a:	sub    rsp,0x30
  40737e:	movsxd rax,DWORD PTR [rcx+0x20]
  407382:	lea    rdx,[rip+0x3a1c7]        # 0x441550
  407389:	add    rax,QWORD PTR [rcx+0x18]
  40738d:	mov    rsi,rcx
  407390:	movzx  ebx,BYTE PTR [rax]
  407393:	mov    BYTE PTR [rax],0x0
  407396:	mov    rdi,QWORD PTR [rcx+0x18]
  40739a:	mov    rcx,rdi
  40739d:	call   0x433a40
  4073a2:	movsxd rdx,DWORD PTR [rsi+0x20]
  4073a6:	test   rax,rax
  4073a9:	mov    BYTE PTR [rdi+rdx*1],bl
  4073ac:	je     0x407540
  4073b2:	mov    ebx,eax
  4073b4:	sub    ebx,DWORD PTR [rsi+0x18]
  4073b7:	mov    r13,rsi
  4073ba:	xor    r12d,r12d
  4073bd:	cmp    ebx,0xffffffff
  4073c0:	je     0x40761f
  4073c6:	call   0x4119d0
  4073cb:	mov    r8,QWORD PTR [rsi+0x10]
  4073cf:	lea    rdx,[rip+0x3a19a]        # 0x441570
  4073d6:	lea    rcx,[rsp+0x28]
  4073db:	mov    rbp,rax
  4073de:	call   0x433f30
  4073e3:	mov    esi,DWORD PTR [r13+0x20]
  4073e7:	movsxd rdx,ebx
  4073ea:	jmp    0x407404
  4073ec:	nop    DWORD PTR [rax+0x0]
  4073f0:	mov    rcx,QWORD PTR [r13+0x18]
  4073f4:	add    ebx,0x1
  4073f7:	movzx  ecx,BYTE PTR [rcx+rdx*1]
  4073fb:	add    rdx,0x1
  4073ff:	cmp    cl,0xa
  407402:	je     0x407408
  407404:	cmp    ebx,esi
  407406:	jl     0x4073f0
  407408:	mov    rcx,QWORD PTR [rsp+0x28]
  40740d:	call   0x43a620
  407412:	add    esi,eax
  407414:	sub    esi,ebx
  407416:	mov    DWORD PTR [rbp+0x20],esi
  407419:	add    esi,0x1
  40741c:	movsxd rcx,esi
  40741f:	movsxd rsi,ebx
  407422:	call   0x4227b0
  407427:	mov    r8,QWORD PTR [rsp+0x28]
  40742c:	lea    rdx,[rip+0x3a16b]        # 0x44159e
  407433:	mov    rcx,rax
  407436:	mov    QWORD PTR [rbp+0x18],rax
  40743a:	call   0x433f00
  40743f:	mov    rcx,QWORD PTR [rsp+0x28]
  407444:	call   0x43a620
  407449:	mov    r8d,DWORD PTR [r13+0x20]
  40744d:	add    rax,QWORD PTR [rbp+0x18]
  407451:	mov    rdx,rsi
  407454:	add    rdx,QWORD PTR [r13+0x18]
  407458:	sub    r8d,ebx
  40745b:	mov    rcx,rax
  40745e:	movsxd r8,r8d
  407461:	call   0x43a6b8
  407466:	mov    rcx,QWORD PTR [rsp+0x28]
  40746b:	call   0x43a620
  407470:	movsxd rdx,DWORD PTR [r13+0x20]
  407474:	add    rax,rdx
  407477:	mov    rdx,QWORD PTR [rbp+0x18]
  40747b:	sub    rax,rsi
  40747e:	mov    BYTE PTR [rdx+rax*1],0x0
  407482:	mov    rcx,QWORD PTR [r13+0x30]
  407486:	mov    rax,QWORD PTR [rcx]
  407489:	test   rax,rax
  40748c:	jne    0x40749c
  40748e:	jmp    0x4074a1
  407490:	add    rcx,0x8
  407494:	mov    rax,QWORD PTR [rcx]
  407497:	test   rax,rax
  40749a:	je     0x4074a1
  40749c:	cmp    ebx,DWORD PTR [rax+0x18]
  40749f:	jge    0x407490
  4074a1:	call   0x409300
  4074a6:	mov    QWORD PTR [rbp+0x30],rax
  4074aa:	mov    rsi,QWORD PTR [rax]
  4074ad:	mov    r14,rax
  4074b0:	mov    rdi,QWORD PTR [rsp+0x28]
  4074b5:	test   rsi,rsi
  4074b8:	je     0x4074f5
  4074ba:	nop    WORD PTR [rax+rax*1+0x0]
  4074c0:	mov    rcx,rdi
  4074c3:	add    r14,0x8
  4074c7:	call   0x43a620
  4074cc:	mov    ecx,DWORD PTR [rsi+0x18]
  4074cf:	sub    ecx,ebx
  4074d1:	lea    edx,[rcx+rax*1]
  4074d4:	mov    rcx,rdi
  4074d7:	mov    DWORD PTR [rsi+0x18],edx
  4074da:	call   0x43a620
  4074df:	mov    r8d,DWORD PTR [rsi+0x1c]
  4074e3:	sub    r8d,ebx
  4074e6:	lea    edx,[r8+rax*1]
  4074ea:	mov    DWORD PTR [rsi+0x1c],edx
  4074ed:	mov    rsi,QWORD PTR [r14]
  4074f0:	test   rsi,rsi
  4074f3:	jne    0x4074c0
  4074f5:	lea    rcx,[rip+0x3a044]        # 0x441540
  4074fc:	call   0x422a00
  407501:	mov    QWORD PTR [rbp+0x10],rax
  407505:	mov    rax,QWORD PTR [r13+0x0]
  407509:	or     DWORD PTR [rbp+0x2c],0x110
  407510:	mov    rcx,QWORD PTR [rsp+0x28]
  407515:	mov    QWORD PTR [rbp+0x0],rax
  407519:	mov    rax,QWORD PTR [r13+0x8]
  40751d:	mov    QWORD PTR [rbp+0x8],rax
  407521:	call   0x43a748
  407526:	mov    rcx,r12
  407529:	call   0x414970
  40752e:	mov    rax,rbp
  407531:	add    rsp,0x30
  407535:	pop    rbx
  407536:	pop    rsi
  407537:	pop    rdi
  407538:	pop    rbp
  407539:	pop    r12
  40753b:	pop    r13
  40753d:	pop    r14
  40753f:	ret    
  407540:	mov    rbx,QWORD PTR [rsi+0x30]
  407544:	test   rbx,rbx
  407547:	je     0x40761f
  40754d:	mov    rcx,QWORD PTR [rsi+0x10]
  407551:	call   0x43a620
  407556:	lea    ecx,[rax+0xb]
  407559:	mov    rbp,rax
  40755c:	lea    r13d,[rax+0xa]
  407560:	movsxd rcx,ecx
  407563:	call   0x4227b0
  407568:	mov    rdx,QWORD PTR [rsi+0x10]
  40756c:	mov    rcx,rax
  40756f:	mov    rdi,rax
  407572:	call   0x4323b0
  407577:	movabs rdx,0x746f6e746f6f462d
  407581:	mov    BYTE PTR [rax+0xa],0x0
  407585:	mov    QWORD PTR [rax],rdx
  407588:	mov    edx,0x7365
  40758d:	mov    WORD PTR [rax+0x8],dx
  407591:	mov    r9,QWORD PTR [rbx]
  407594:	test   r9,r9
  407597:	je     0x407626
  40759d:	add    ebp,0x9
  4075a0:	add    rbx,0x8
  4075a4:	movsxd r13,r13d
  4075a7:	movsxd r12,ebp
  4075aa:	jmp    0x4075bd
  4075ac:	nop    DWORD PTR [rax+0x0]
  4075b0:	add    rbx,0x8
  4075b4:	mov    r9,QWORD PTR [rbx-0x8]
  4075b8:	test   r9,r9
  4075bb:	je     0x407626
  4075bd:	mov    eax,DWORD PTR [r9+0x24]
  4075c1:	test   eax,eax
  4075c3:	jne    0x4075b0
  4075c5:	mov    rbp,QWORD PTR [r9+0x10]
  4075c9:	test   rbp,rbp
  4075cc:	je     0x4075b0
  4075ce:	mov    rdx,rdi
  4075d1:	mov    rcx,rbp
  4075d4:	call   0x43a648
  4075d9:	test   eax,eax
  4075db:	je     0x407605
  4075dd:	mov    r8,r12
  4075e0:	mov    rdx,rdi
  4075e3:	mov    rcx,rbp
  4075e6:	call   0x43a618
  4075eb:	test   eax,eax
  4075ed:	jne    0x4075b0
  4075ef:	cmp    BYTE PTR [rbp+r13*1-0x1],0x2d
  4075f5:	jne    0x4075b0
  4075f7:	movsx  eax,BYTE PTR [rbp+r13*1+0x0]
  4075fd:	sub    eax,0x30
  407600:	cmp    eax,0x9
  407603:	ja     0x4075b0
  407605:	mov    rcx,QWORD PTR [rsi]
  407608:	mov    rdx,rdi
  40760b:	call   0x4124d0
  407610:	test   rax,rax
  407613:	mov    r12,rax
  407616:	je     0x40763e
  407618:	mov    r13,rax
  40761b:	xor    ebx,ebx
  40761d:	jmp    0x407631
  40761f:	xor    eax,eax
  407621:	jmp    0x407531
  407626:	mov    r13,rsi
  407629:	mov    ebx,0xffffffff
  40762e:	xor    r12d,r12d
  407631:	mov    rcx,rdi
  407634:	call   0x43a748
  407639:	jmp    0x4073bd
  40763e:	mov    r13,rsi
  407641:	mov    ebx,0xffffffff
  407646:	jmp    0x407631
  407648:	nop    DWORD PTR [rax+rax*1+0x0]
  407650:	push   rdi
  407651:	push   rsi
  407652:	push   rbx
  407653:	sub    rsp,0x30
  407657:	mov    rdi,rcx
  40765a:	call   0x407310
  40765f:	cmp    rax,rdi
  407662:	mov    rbx,rax
  407665:	je     0x407770
  40766b:	mov    rax,QWORD PTR [rdi+0x20]
  40766f:	mov    rdi,QWORD PTR [rax+0x10]
  407673:	test   rdi,rdi
  407676:	je     0x407688
  407678:	lea    rsi,[rip+0x39f22]        # 0x4415a1
  40767f:	mov    ecx,0x2
  407684:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407686:	jne    0x4076c0
  407688:	test   rbx,rbx
  40768b:	mov    esi,0x1
  407690:	je     0x4076af
  407692:	mov    rax,QWORD PTR [rip+0x42577]        # 0x449c10
  407699:	mov    esi,0x1
  40769e:	mov    rax,QWORD PTR [rax]
  4076a1:	cmp    QWORD PTR [rax],0x0
  4076a5:	je     0x4076af
  4076a7:	mov    rcx,rbx
  4076aa:	call   0x416d80
  4076af:	mov    eax,esi
  4076b1:	add    rsp,0x30
  4076b5:	pop    rbx
  4076b6:	pop    rsi
  4076b7:	pop    rdi
  4076b8:	ret    
  4076b9:	nop    DWORD PTR [rax+0x0]
  4076c0:	mov    rcx,rax
  4076c3:	call   0x407370
  4076c8:	test   rax,rax
  4076cb:	mov    rdx,rax
  4076ce:	je     0x407688
  4076d0:	test   rbx,rbx
  4076d3:	je     0x407700
  4076d5:	mov    rcx,rbx
  4076d8:	xor    esi,esi
  4076da:	call   0x415020
  4076df:	mov    edx,DWORD PTR [rbx+0x70]
  4076e2:	or     DWORD PTR [rbx+0x80],0x40
  4076e9:	mov    rcx,rbx
  4076ec:	sub    edx,DWORD PTR [rbx+0x14]
  4076ef:	call   0x41f8c0
  4076f4:	mov    eax,esi
  4076f6:	add    rsp,0x30
  4076fa:	pop    rbx
  4076fb:	pop    rsi
  4076fc:	pop    rdi
  4076fd:	ret    
  4076fe:	xchg   ax,ax
  407700:	mov    rax,QWORD PTR [rip+0x42509]        # 0x449c10
  407707:	mov    r8,QWORD PTR [rax]
  40770a:	test   r8,r8
  40770d:	jne    0x407714
  40770f:	jmp    0x40771c
  407711:	mov    r8,rcx
  407714:	mov    rcx,QWORD PTR [r8]
  407717:	test   rcx,rcx
  40771a:	jne    0x407711
  40771c:	mov    rsi,QWORD PTR [rip+0x420cd]        # 0x4497f0
  407723:	mov    QWORD PTR [rsp+0x28],rdx
  407728:	mov    rdi,QWORD PTR [rsi]
  40772b:	mov    QWORD PTR [rsi],r8
  40772e:	call   0x41f7b0
  407733:	test   rax,rax
  407736:	mov    rbx,rax
  407739:	mov    rdx,QWORD PTR [rsp+0x28]
  40773e:	mov    QWORD PTR [rsi],rdi
  407741:	jne    0x4076d5
  407743:	mov    eax,DWORD PTR [rip+0x49bc7]        # 0x451310
  407749:	mov    esi,0x2
  40774e:	test   eax,eax
  407750:	je     0x4076af
  407756:	lea    rcx,[rip+0x39e4b]        # 0x4415a8
  40775d:	call   0x433f18
  407762:	mov    rcx,rax
  407765:	call   0x4144d0
  40776a:	jmp    0x4076af
  40776f:	nop
  407770:	xor    esi,esi
  407772:	mov    eax,esi
  407774:	add    rsp,0x30
  407778:	pop    rbx
  407779:	pop    rsi
  40777a:	pop    rdi
  40777b:	ret    
  40777c:	nop    DWORD PTR [rax+0x0]
  407780:	sub    rsp,0x28
  407784:	test   edx,edx
  407786:	js     0x4077c0
  407788:	call   0x407650
  40778d:	cmp    eax,0x1
  407790:	je     0x4077b1
  407792:	cmp    eax,0x2
  407795:	jne    0x4077da
  407797:	mov    rax,QWORD PTR [rip+0x42362]        # 0x449b00
  40779e:	mov    rdx,QWORD PTR [rax]
  4077a1:	lea    rcx,[rip+0x39df6]        # 0x44159e
  4077a8:	add    rsp,0x28
  4077ac:	jmp    0x4144d0
  4077b1:	mov    rax,QWORD PTR [rip+0x422e8]        # 0x449aa0
  4077b8:	jmp    0x40779e
  4077ba:	nop    WORD PTR [rax+rax*1+0x0]
  4077c0:	call   0x407310
  4077c5:	test   rax,rax
  4077c8:	je     0x4077da
  4077ca:	mov    rdx,QWORD PTR [rip+0x4243f]        # 0x449c10
  4077d1:	mov    rdx,QWORD PTR [rdx]
  4077d4:	cmp    QWORD PTR [rdx],0x0
  4077d8:	jne    0x4077e0
  4077da:	add    rsp,0x28
  4077de:	ret    
  4077df:	nop
  4077e0:	mov    rcx,rax
  4077e3:	add    rsp,0x28
  4077e7:	jmp    0x416d80
  4077ec:	nop
  4077ed:	nop
  4077ee:	nop
  4077ef:	nop
  4077f0:	push   r15
  4077f2:	push   r14
  4077f4:	push   r13
  4077f6:	push   r12
  4077f8:	push   rbp
  4077f9:	push   rdi
  4077fa:	push   rsi
  4077fb:	push   rbx
  4077fc:	sub    rsp,0x28
  407800:	test   rcx,rcx
  407803:	mov    rdi,rcx
  407806:	je     0x4079cb
  40780c:	mov    rbx,QWORD PTR [rip+0x49b2d]        # 0x451340
  407813:	test   rbx,rbx
  407816:	je     0x40782b
  407818:	mov    rdx,QWORD PTR [rcx]
  40781b:	mov    rcx,rbx
  40781e:	call   0x4213b0
  407823:	test   eax,eax
  407825:	je     0x4079e2
  40782b:	mov    rax,QWORD PTR [rip+0x4217e]        # 0x4499b0
  407832:	mov    ecx,DWORD PTR [rax]
  407834:	test   ecx,ecx
  407836:	jne    0x407b60
  40783c:	mov    rcx,rbx
  40783f:	call   0x43a748
  407844:	mov    rcx,QWORD PTR [rip+0x49aed]        # 0x451338
  40784b:	call   0x43a748
  407850:	mov    rsi,QWORD PTR [rip+0x49ad9]        # 0x451330
  407857:	mov    QWORD PTR [rip+0x49ade],0x0        # 0x451340
  407862:	mov    QWORD PTR [rip+0x49acb],0x0        # 0x451338
  40786d:	test   rsi,rsi
  407870:	je     0x4078af
  407872:	mov    rax,QWORD PTR [rsi]
  407875:	mov    rbx,rsi
  407878:	test   rax,rax
  40787b:	je     0x40789d
  40787d:	nop    DWORD PTR [rax]
  407880:	mov    rcx,QWORD PTR [rax]
  407883:	add    rbx,0x8
  407887:	call   0x43a748
  40788c:	mov    rcx,QWORD PTR [rbx-0x8]
  407890:	call   0x43a748
  407895:	mov    rax,QWORD PTR [rbx]
  407898:	test   rax,rax
  40789b:	jne    0x407880
  40789d:	mov    QWORD PTR [rip+0x49a80],0x0        # 0x451328
  4078a8:	mov    QWORD PTR [rsi],0x0
  4078af:	mov    r15,QWORD PTR [rdi+0x58]
  4078b3:	test   r15,r15
  4078b6:	mov    r14,r15
  4078b9:	je     0x407b80
  4078bf:	mov    rbx,QWORD PTR [r15]
  4078c2:	test   rbx,rbx
  4078c5:	je     0x407b80
  4078cb:	mov    esi,0x8
  4078d0:	xor    r12d,r12d
  4078d3:	movabs r13,0x1555555555555554
  4078dd:	jmp    0x4078f4
  4078df:	nop
  4078e0:	lea    r14,[r15+rsi*1]
  4078e4:	add    rsi,0x8
  4078e8:	mov    rbx,QWORD PTR [r14]
  4078eb:	test   rbx,rbx
  4078ee:	je     0x407a81
  4078f4:	mov    rcx,QWORD PTR [rbx+0x8]
  4078f8:	lea    rdx,[rip+0x39cea]        # 0x4415e9
  4078ff:	call   0x432bb0
  407904:	test   rax,rax
  407907:	je     0x4078e0
  407909:	mov    edx,DWORD PTR [rbx+0x40]
  40790c:	test   edx,edx
  40790e:	je     0x4078e0
  407910:	mov    rdx,r14
  407913:	mov    rcx,rdi
  407916:	call   0x4124e0
  40791b:	test   rax,rax
  40791e:	mov    r14,rax
  407921:	je     0x407a69
  407927:	cmp    QWORD PTR [rip+0x49a11],0x0        # 0x451340
  40792f:	je     0x407b90
  407935:	mov    r15,QWORD PTR [r14+0x30]
  407939:	test   r15,r15
  40793c:	je     0x407a61
  407942:	cmp    QWORD PTR [r15],0x0
  407946:	je     0x407a61
  40794c:	cmp    QWORD PTR [r15+0x8],0x0
  407951:	je     0x407bb4
  407957:	lea    r8,[r15+0x10]
  40795b:	xor    ebx,ebx
  40795d:	nop    DWORD PTR [rax]
  407960:	add    r8,0x8
  407964:	add    ebx,0x1
  407967:	cmp    QWORD PTR [r8-0x8],0x0
  40796c:	jne    0x407960
  40796e:	mov    ecx,0x10
  407973:	call   0x4227b0
  407978:	mov    rcx,QWORD PTR [r14+0x10]
  40797c:	mov    rbp,rax
  40797f:	call   0x422a00
  407984:	mov    rcx,QWORD PTR [rip+0x4999d]        # 0x451328
  40798b:	mov    QWORD PTR [rbp+0x0],rax
  40798f:	test   rcx,rcx
  407992:	jne    0x407b10
  407998:	mov    r9,QWORD PTR [rip+0x49991]        # 0x451330
  40799f:	mov    DWORD PTR [rbp+0x8],0x0
  4079a6:	mov    DWORD PTR [rbp+0xc],ebx
  4079a9:	mov    rdx,QWORD PTR [rip+0x49970]        # 0x451320
  4079b0:	lea    rax,[rcx+0x2]
  4079b4:	cmp    rax,rdx
  4079b7:	jb     0x407a30
  4079b9:	test   rdx,rdx
  4079bc:	jne    0x4079f3
  4079be:	test   r9,r9
  4079c1:	je     0x407bbb
  4079c7:	mov    dl,0xa
  4079c9:	jmp    0x407a01
  4079cb:	mov    rcx,QWORD PTR [rip+0x4998e]        # 0x451360
  4079d2:	call   0x43a748
  4079d7:	mov    QWORD PTR [rip+0x4997e],0x0        # 0x451360
  4079e2:	add    rsp,0x28
  4079e6:	pop    rbx
  4079e7:	pop    rsi
  4079e8:	pop    rdi
  4079e9:	pop    rbp
  4079ea:	pop    r12
  4079ec:	pop    r13
  4079ee:	pop    r14
  4079f0:	pop    r15
  4079f2:	ret    
  4079f3:	test   r9,r9
  4079f6:	je     0x407a0c
  4079f8:	cmp    rdx,r13
  4079fb:	ja     0x407bcd
  407a01:	mov    rax,rdx
  407a04:	shr    rax,1
  407a07:	lea    rdx,[rdx+rax*1+0x1]
  407a0c:	mov    rcx,r9
  407a0f:	mov    QWORD PTR [rip+0x4990a],rdx        # 0x451320
  407a16:	shl    rdx,0x3
  407a1a:	call   0x422820
  407a1f:	mov    rcx,QWORD PTR [rip+0x49902]        # 0x451328
  407a26:	mov    QWORD PTR [rip+0x49903],rax        # 0x451330
  407a2d:	mov    r9,rax
  407a30:	lea    rax,[rcx+0x1]
  407a34:	mov    QWORD PTR [r9+rcx*8],rbp
  407a38:	mov    QWORD PTR [r9+rcx*8+0x8],0x0
  407a41:	mov    rdx,r15
  407a44:	mov    rcx,r12
  407a47:	mov    QWORD PTR [rip+0x498da],rax        # 0x451328
  407a4e:	call   0x4090e0
  407a53:	mov    rbx,rax
  407a56:	mov    rcx,r12
  407a59:	mov    r12,rbx
  407a5c:	call   0x43a748
  407a61:	mov    rcx,r14
  407a64:	call   0x414970
  407a69:	mov    r15,QWORD PTR [rdi+0x58]
  407a6d:	lea    r14,[r15+rsi*1]
  407a71:	add    rsi,0x8
  407a75:	mov    rbx,QWORD PTR [r14]
  407a78:	test   rbx,rbx
  407a7b:	jne    0x4078f4
  407a81:	test   r12,r12
  407a84:	je     0x407ad0
  407a86:	mov    rbx,QWORD PTR [r12]
  407a8a:	test   rbx,rbx
  407a8d:	je     0x407ad0
  407a8f:	lea    rsi,[r12+0x8]
  407a94:	jmp    0x407aad
  407a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407aa0:	add    rsi,0x8
  407aa4:	mov    rbx,QWORD PTR [rsi-0x8]
  407aa8:	test   rbx,rbx
  407aab:	je     0x407ad0
  407aad:	cmp    QWORD PTR [rbx+0x8],0x0
  407ab2:	jne    0x407aa0
  407ab4:	mov    rcx,QWORD PTR [rdi]
  407ab7:	add    rsi,0x8
  407abb:	call   0x422a00
  407ac0:	mov    QWORD PTR [rbx+0x8],rax
  407ac4:	mov    rbx,QWORD PTR [rsi-0x8]
  407ac8:	test   rbx,rbx
  407acb:	jne    0x407aad
  407acd:	nop    DWORD PTR [rax]
  407ad0:	mov    rcx,QWORD PTR [rip+0x49889]        # 0x451360
  407ad7:	call   0x43a748
  407adc:	mov    rax,QWORD PTR [rip+0x41ecd]        # 0x4499b0
  407ae3:	mov    QWORD PTR [rip+0x49876],r12        # 0x451360
  407aea:	mov    eax,DWORD PTR [rax]
  407aec:	test   eax,eax
  407aee:	je     0x4079e2
  407af4:	add    rsp,0x28
  407af8:	pop    rbx
  407af9:	pop    rsi
  407afa:	pop    rdi
  407afb:	pop    rbp
  407afc:	pop    r12
  407afe:	pop    r13
  407b00:	pop    r14
  407b02:	pop    r15
  407b04:	jmp    0x421060
  407b09:	nop    DWORD PTR [rax+0x0]
  407b10:	mov    r9,QWORD PTR [rip+0x49819]        # 0x451330
  407b17:	mov    r10d,0x1
  407b1d:	cmp    QWORD PTR [r9+0x8],0x0
  407b22:	jne    0x407b33
  407b24:	jmp    0x407bc5
  407b29:	nop    DWORD PTR [rax+0x0]
  407b30:	mov    r10,r8
  407b33:	lea    r8,[r10+0x1]
  407b37:	cmp    QWORD PTR [r9+r8*8],0x0
  407b3c:	jne    0x407b30
  407b3e:	shl    r10,0x3
  407b42:	mov    rax,QWORD PTR [r9+r10*1]
  407b46:	mov    eax,DWORD PTR [rax+0xc]
  407b49:	add    eax,0x1
  407b4c:	add    ebx,eax
  407b4e:	mov    DWORD PTR [rbp+0x8],eax
  407b51:	mov    DWORD PTR [rbp+0xc],ebx
  407b54:	jmp    0x4079a9
  407b59:	nop    DWORD PTR [rax+0x0]
  407b60:	lea    rcx,[rip+0x39a69]        # 0x4415d0
  407b67:	call   0x433f18
  407b6c:	mov    rcx,rax
  407b6f:	call   0x4210d0
  407b74:	mov    rbx,QWORD PTR [rip+0x497c5]        # 0x451340
  407b7b:	jmp    0x40783c
  407b80:	xor    r12d,r12d
  407b83:	jmp    0x407ad0
  407b88:	nop    DWORD PTR [rax+rax*1+0x0]
  407b90:	mov    rcx,QWORD PTR [rdi]
  407b93:	call   0x422a00
  407b98:	mov    rcx,QWORD PTR [rbx+0x8]
  407b9c:	mov    QWORD PTR [rip+0x4979d],rax        # 0x451340
  407ba3:	call   0x422a00
  407ba8:	mov    QWORD PTR [rip+0x49789],rax        # 0x451338
  407baf:	jmp    0x407935
  407bb4:	xor    ebx,ebx
  407bb6:	jmp    0x40796e
  407bbb:	mov    edx,0xa
  407bc0:	jmp    0x407a0c
  407bc5:	xor    r10b,r10b
  407bc8:	jmp    0x407b42
  407bcd:	call   0x422a20
  407bd2:	nop
  407bd3:	nop    DWORD PTR [rax]
  407bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407be0:	push   rsi
  407be1:	push   rbx
  407be2:	sub    rsp,0x28
  407be6:	mov    rsi,rcx
  407be9:	mov    rbx,r8
  407bec:	call   0x43a618
  407bf1:	test   eax,eax
  407bf3:	jne    0x407c20
  407bf5:	add    rbx,rsi
  407bf8:	movzx  edx,BYTE PTR [rbx]
  407bfb:	test   dl,dl
  407bfd:	je     0x407c10
  407bff:	cmp    dl,0x20
  407c02:	je     0x407c30
  407c04:	add    rsp,0x28
  407c08:	pop    rbx
  407c09:	pop    rsi
  407c0a:	ret    
  407c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c10:	mov    eax,0x1
  407c15:	add    rsp,0x28
  407c19:	pop    rbx
  407c1a:	pop    rsi
  407c1b:	ret    
  407c1c:	nop    DWORD PTR [rax+0x0]
  407c20:	xor    eax,eax
  407c22:	add    rsp,0x28
  407c26:	pop    rbx
  407c27:	pop    rsi
  407c28:	ret    
  407c29:	nop    DWORD PTR [rax+0x0]
  407c30:	cmp    BYTE PTR [rbx+0x1],0x3c
  407c34:	jne    0x407c04
  407c36:	movsx  edx,BYTE PTR [rbx+0x2]
  407c3a:	lea    rcx,[rbx+0x2]
  407c3e:	test   dl,dl
  407c40:	jne    0x407c57
  407c42:	jmp    0x407c04
  407c44:	sub    edx,0x30
  407c47:	cmp    edx,0x9
  407c4a:	ja     0x407c04
  407c4c:	add    rcx,0x1
  407c50:	movsx  edx,BYTE PTR [rcx]
  407c53:	test   dl,dl
  407c55:	je     0x407c04
  407c57:	cmp    dl,0x3e
  407c5a:	jne    0x407c44
  407c5c:	xor    eax,eax
  407c5e:	cmp    BYTE PTR [rcx+0x1],0x0
  407c62:	sete   al
  407c65:	add    rsp,0x28
  407c69:	pop    rbx
  407c6a:	pop    rsi
  407c6b:	ret    
  407c6c:	nop    DWORD PTR [rax+0x0]
  407c70:	push   r15
  407c72:	push   r14
  407c74:	push   r13
  407c76:	push   r12
  407c78:	push   rbp
  407c79:	push   rdi
  407c7a:	push   rsi
  407c7b:	push   rbx
  407c7c:	sub    rsp,0x58
  407c80:	mov    rax,QWORD PTR [rsp+0xc0]
  407c88:	mov    r12,rcx
  407c8b:	mov    rcx,rdx
  407c8e:	mov    rdi,rdx
  407c91:	mov    ebx,r8d
  407c94:	mov    esi,r9d
  407c97:	mov    QWORD PTR [rsp+0x28],rax
  407c9c:	mov    rax,QWORD PTR [rsp+0xc8]
  407ca4:	mov    QWORD PTR [rsp+0x30],rax
  407ca9:	mov    rax,QWORD PTR [rsp+0xd0]
  407cb1:	mov    QWORD PTR [rsp+0x40],rax
  407cb6:	call   0x43a620
  407cbb:	mov    rcx,r12
  407cbe:	mov    rbp,rax
  407cc1:	call   0x4077f0
  407cc6:	mov    rax,QWORD PTR [rip+0x49693]        # 0x451360
  407ccd:	test   rax,rax
  407cd0:	mov    QWORD PTR [rsp+0x38],rax
  407cd5:	je     0x407f49
  407cdb:	mov    rcx,QWORD PTR [rip+0x49666]        # 0x451348
  407ce2:	cmp    rcx,rdi
  407ce5:	je     0x407cf3
  407ce7:	call   0x43a748
  407cec:	mov    QWORD PTR [rip+0x49655],rdi        # 0x451348
  407cf3:	mov    ecx,DWORD PTR [rip+0x4965b]        # 0x451354
  407cf9:	test   ecx,ecx
  407cfb:	jne    0x407ddc
  407d01:	mov    edx,DWORD PTR [rip+0x49649]        # 0x451350
  407d07:	test   edx,edx
  407d09:	jne    0x407e71
  407d0f:	add    ebx,esi
  407d11:	js     0x407dd0
  407d17:	mov    rcx,QWORD PTR [rsp+0x38]
  407d1c:	movsxd rdx,ebx
  407d1f:	mov    rax,QWORD PTR [rcx+rdx*8]
  407d23:	test   rax,rax
  407d26:	je     0x407dd0
  407d2c:	movsxd r12,esi
  407d2f:	add    rdx,r12
  407d32:	lea    r13,[r12*8+0x0]
  407d3a:	neg    r12
  407d3d:	lea    r14,[rcx+rdx*8]
  407d41:	shl    r12,0x3
  407d45:	mov    rcx,rax
  407d48:	jmp    0x407d60
  407d4a:	nop    WORD PTR [rax+rax*1+0x0]
  407d50:	add    ebx,esi
  407d52:	js     0x407dd0
  407d54:	add    r14,r13
  407d57:	mov    rcx,QWORD PTR [r14+r12*1]
  407d5b:	test   rcx,rcx
  407d5e:	je     0x407dd0
  407d60:	mov    rcx,QWORD PTR [rcx]
  407d63:	mov    r8,rbp
  407d66:	mov    rdx,rdi
  407d69:	call   0x407be0
  407d6e:	test   eax,eax
  407d70:	je     0x407d50
  407d72:	mov    rax,QWORD PTR [rsp+0x40]
  407d77:	movsxd rdx,ebx
  407d7a:	mov    DWORD PTR [rax],0x0
  407d80:	mov    rax,QWORD PTR [rsp+0x38]
  407d85:	cmp    QWORD PTR [rax+rdx*8],0x0
  407d8a:	je     0x407dd0
  407d8c:	shl    rdx,0x3
  407d90:	mov    rax,QWORD PTR [rip+0x495c9]        # 0x451360
  407d97:	mov    rax,QWORD PTR [rax+rdx*1]
  407d9b:	test   rax,rax
  407d9e:	je     0x407efe
  407da4:	mov    rsi,QWORD PTR [rsp+0x28]
  407da9:	mov    DWORD PTR [rip+0x495a9],ebx        # 0x451358
  407daf:	mov    QWORD PTR [rsi],rax
  407db2:	mov    rax,QWORD PTR [rsp+0x30]
  407db7:	mov    DWORD PTR [rax],ebx
  407db9:	add    rsp,0x58
  407dbd:	pop    rbx
  407dbe:	pop    rsi
  407dbf:	pop    rdi
  407dc0:	pop    rbp
  407dc1:	pop    r12
  407dc3:	pop    r13
  407dc5:	pop    r14
  407dc7:	pop    r15
  407dc9:	ret    
  407dca:	nop    WORD PTR [rax+rax*1+0x0]
  407dd0:	mov    DWORD PTR [rip+0x4957a],0x1        # 0x451354
  407dda:	xor    ebx,ebx
  407ddc:	lea    eax,[rbx+rsi*1]
  407ddf:	test   eax,eax
  407de1:	mov    DWORD PTR [rsp+0x4c],eax
  407de5:	mov    ebx,eax
  407de7:	js     0x407e5b
  407de9:	movsxd rdx,DWORD PTR [rsp+0x4c]
  407dee:	mov    rcx,QWORD PTR [rsp+0x38]
  407df3:	mov    rax,QWORD PTR [rcx+rdx*8]
  407df7:	test   rax,rax
  407dfa:	je     0x407e5b
  407dfc:	movsxd r13,esi
  407dff:	add    rdx,r13
  407e02:	lea    r14,[r13*8+0x0]
  407e0a:	neg    r13
  407e0d:	lea    r12,[rcx+rdx*8]
  407e11:	shl    r13,0x3
  407e15:	mov    rcx,rax
  407e18:	jmp    0x407e2c
  407e1a:	nop    WORD PTR [rax+rax*1+0x0]
  407e20:	add    r12,r14
  407e23:	mov    rcx,QWORD PTR [r12+r13*1]
  407e27:	test   rcx,rcx
  407e2a:	je     0x407e5b
  407e2c:	mov    r15,QWORD PTR [rcx]
  407e2f:	mov    r8,rbp
  407e32:	mov    rdx,rdi
  407e35:	mov    rcx,r15
  407e38:	call   0x407be0
  407e3d:	test   eax,eax
  407e3f:	jne    0x407e57
  407e41:	mov    r8,rbp
  407e44:	mov    rdx,rdi
  407e47:	mov    rcx,r15
  407e4a:	call   0x43a618
  407e4f:	test   eax,eax
  407e51:	je     0x407f10
  407e57:	add    ebx,esi
  407e59:	jns    0x407e20
  407e5b:	mov    DWORD PTR [rip+0x494ef],0x0        # 0x451354
  407e65:	mov    DWORD PTR [rip+0x494e1],0x1        # 0x451350
  407e6f:	xor    ebx,ebx
  407e71:	add    ebx,esi
  407e73:	js     0x407ef0
  407e75:	mov    rax,QWORD PTR [rip+0x494e4]        # 0x451360
  407e7c:	movsxd rdx,ebx
  407e7f:	mov    rax,QWORD PTR [rax+rdx*8]
  407e83:	test   rax,rax
  407e86:	je     0x407ef0
  407e88:	movsxd r12,esi
  407e8b:	mov    r9,rax
  407e8e:	lea    r14,[r12*8+0x0]
  407e96:	add    r12,rdx
  407e99:	shl    r12,0x3
  407e9d:	jmp    0x407eb7
  407e9f:	nop
  407ea0:	add    ebx,esi
  407ea2:	js     0x407ef0
  407ea4:	mov    rax,QWORD PTR [rip+0x494b5]        # 0x451360
  407eab:	mov    r9,QWORD PTR [rax+r12*1]
  407eaf:	add    r12,r14
  407eb2:	test   r9,r9
  407eb5:	je     0x407ef0
  407eb7:	mov    r13,QWORD PTR [r9]
  407eba:	mov    r8,rbp
  407ebd:	mov    rdx,rdi
  407ec0:	mov    rcx,r13
  407ec3:	call   0x43a618
  407ec8:	test   eax,eax
  407eca:	je     0x407ea0
  407ecc:	mov    rdx,r13
  407ecf:	mov    rcx,rdi
  407ed2:	call   0x412cb0
  407ed7:	cmp    eax,0xffffffff
  407eda:	je     0x407ea0
  407edc:	mov    rsi,QWORD PTR [rsp+0x40]
  407ee1:	test   eax,eax
  407ee3:	mov    DWORD PTR [rsi],eax
  407ee5:	jle    0x407ef0
  407ee7:	movsxd rdx,ebx
  407eea:	jmp    0x407d8c
  407eef:	nop
  407ef0:	test   ebx,ebx
  407ef2:	mov    DWORD PTR [rip+0x49454],0x0        # 0x451350
  407efc:	jns    0x407ee7
  407efe:	mov    rax,QWORD PTR [rsp+0x28]
  407f03:	mov    QWORD PTR [rax],0x0
  407f0a:	jmp    0x407db2
  407f0f:	nop
  407f10:	mov    rax,QWORD PTR [rsp+0x40]
  407f15:	mov    rcx,QWORD PTR [rsp+0x38]
  407f1a:	mov    DWORD PTR [rax],ebp
  407f1c:	movsxd rax,ebx
  407f1f:	cmp    QWORD PTR [rcx+rax*8],0x0
  407f24:	lea    rdx,[rax*8+0x0]
  407f2c:	je     0x407e5b
  407f32:	mov    eax,DWORD PTR [rip+0x49418]        # 0x451350
  407f38:	test   eax,eax
  407f3a:	je     0x407d90
  407f40:	mov    ebx,DWORD PTR [rsp+0x4c]
  407f44:	jmp    0x407e75
  407f49:	lea    rcx,[rip+0x3969f]        # 0x4415ef
  407f50:	call   0x433f18
  407f55:	mov    rcx,rax
  407f58:	add    rsp,0x58
  407f5c:	pop    rbx
  407f5d:	pop    rsi
  407f5e:	pop    rdi
  407f5f:	pop    rbp
  407f60:	pop    r12
  407f62:	pop    r13
  407f64:	pop    r14
  407f66:	pop    r15
  407f68:	jmp    0x4144d0
  407f6d:	nop    DWORD PTR [rax]
  407f70:	push   r14
  407f72:	push   r13
  407f74:	push   r12
  407f76:	push   rbp
  407f77:	push   rdi
  407f78:	push   rsi
  407f79:	push   rbx
  407f7a:	sub    rsp,0x20
  407f7e:	mov    r8,QWORD PTR [rip+0x493ab]        # 0x451330
  407f85:	mov    ebx,edx
  407f87:	mov    rax,QWORD PTR [r8]
  407f8a:	test   rax,rax
  407f8d:	je     0x407fae
  407f8f:	add    r8,0x8
  407f93:	cmp    DWORD PTR [rax+0x8],ecx
  407f96:	jg     0x407fa1
  407f98:	cmp    ecx,DWORD PTR [rax+0xc]
  407f9b:	jle    0x408080
  407fa1:	add    r8,0x8
  407fa5:	mov    rax,QWORD PTR [r8-0x8]
  407fa9:	test   rax,rax
  407fac:	jne    0x407f93
  407fae:	lea    r12,[rip+0x3964c]        # 0x441601
  407fb5:	mov    rax,QWORD PTR [rip+0x493a4]        # 0x451360
  407fbc:	movsxd rcx,ecx
  407fbf:	mov    rax,QWORD PTR [rax+rcx*8]
  407fc3:	mov    rcx,QWORD PTR [rax]
  407fc6:	call   0x422a00
  407fcb:	test   ebx,ebx
  407fcd:	mov    rbp,rax
  407fd0:	jle    0x408046
  407fd2:	mov    eax,DWORD PTR [rip+0x350e8]        # 0x43d0c0
  407fd8:	test   eax,eax
  407fda:	je     0x408046
  407fdc:	mov    rcx,QWORD PTR [rip+0x49365]        # 0x451348
  407fe3:	call   0x43a620
  407fe8:	sub    ebx,eax
  407fea:	mov    r13,rax
  407fed:	movsxd rsi,ebx
  407ff0:	lea    rbx,[rbp+rsi*1+0x0]
  407ff5:	movsx  ecx,BYTE PTR [rbx]
  407ff8:	call   QWORD PTR [rip+0x4ca92]        # 0x454a90
  407ffe:	test   r13d,r13d
  408001:	mov    edi,eax
  408003:	jle    0x408046
  408005:	lea    eax,[r13-0x1]
  408009:	mov    r14,QWORD PTR [rip+0x4cb88]        # 0x454b98
  408010:	mov    r13,QWORD PTR [rip+0x4cb79]        # 0x454b90
  408017:	lea    rsi,[rsi+rax*1+0x1]
  40801c:	add    rsi,rbp
  40801f:	jmp    0x408030
  408021:	call   r13
  408024:	add    rbx,0x1
  408028:	mov    BYTE PTR [rbx-0x1],al
  40802b:	cmp    rbx,rsi
  40802e:	je     0x408046
  408030:	test   edi,edi
  408032:	movsx  ecx,BYTE PTR [rbx]
  408035:	jne    0x408021
  408037:	call   r14
  40803a:	add    rbx,0x1
  40803e:	mov    BYTE PTR [rbx-0x1],al
  408041:	cmp    rbx,rsi
  408044:	jne    0x408030
  408046:	lea    rcx,[rip+0x395c3]        # 0x441610
  40804d:	call   0x433f18
  408052:	xor    edx,edx
  408054:	mov    rcx,rax
  408057:	call   0x40c4d0
  40805c:	mov    r8,r12
  40805f:	mov    rcx,rax
  408062:	mov    rdx,rbp
  408065:	call   0x4210d0
  40806a:	mov    rcx,rbp
  40806d:	add    rsp,0x20
  408071:	pop    rbx
  408072:	pop    rsi
  408073:	pop    rdi
  408074:	pop    rbp
  408075:	pop    r12
  408077:	pop    r13
  408079:	pop    r14
  40807b:	jmp    0x43a748
  408080:	mov    r12,QWORD PTR [rax]
  408083:	jmp    0x407fb5
  408088:	nop    DWORD PTR [rax+rax*1+0x0]
  408090:	push   rbp
  408091:	push   rdi
  408092:	push   rsi
  408093:	push   rbx
  408094:	sub    rsp,0x58
  408098:	mov    rsi,QWORD PTR [rip+0x492a9]        # 0x451348
  40809f:	mov    rdi,rcx
  4080a2:	test   rsi,rsi
  4080a5:	je     0x408171
  4080ab:	mov    ebx,edx
  4080ad:	mov    ebp,DWORD PTR [rip+0x492a5]        # 0x451358
  4080b3:	call   0x409e30
  4080b8:	lea    rdx,[rsp+0x44]
  4080bd:	sar    ebx,0x1f
  4080c0:	mov    rcx,rax
  4080c3:	or     ebx,0x1
  4080c6:	mov    r8d,ebp
  4080c9:	mov    QWORD PTR [rsp+0x30],rdx
  4080ce:	lea    rdx,[rsp+0x40]
  4080d3:	mov    r9d,ebx
  4080d6:	mov    QWORD PTR [rsp+0x28],rdx
  4080db:	lea    rdx,[rsp+0x48]
  4080e0:	mov    QWORD PTR [rsp+0x20],rdx
  4080e5:	mov    rdx,rsi
  4080e8:	call   0x407c70
  4080ed:	cmp    QWORD PTR [rsp+0x48],0x0
  4080f3:	je     0x408120
  4080f5:	mov    edx,DWORD PTR [rsp+0x44]
  4080f9:	mov    ecx,DWORD PTR [rsp+0x40]
  4080fd:	call   0x407f70
  408102:	mov    rdx,QWORD PTR [rsp+0x48]
  408107:	mov    rcx,rdi
  40810a:	call   0x416f40
  40810f:	nop
  408110:	add    rsp,0x58
  408114:	pop    rbx
  408115:	pop    rsi
  408116:	pop    rdi
  408117:	pop    rbp
  408118:	ret    
  408119:	nop    DWORD PTR [rax+0x0]
  408120:	mov    eax,DWORD PTR [rip+0x49232]        # 0x451358
  408126:	mov    rbx,QWORD PTR [rip+0x4921b]        # 0x451348
  40812d:	test   eax,eax
  40812f:	jle    0x408160
  408131:	lea    rcx,[rip+0x39540]        # 0x441678
  408138:	call   0x433f18
  40813d:	mov    rcx,rax
  408140:	mov    rdx,rbx
  408143:	call   0x4144d0
  408148:	mov    DWORD PTR [rip+0x49206],0x0        # 0x451358
  408152:	add    rsp,0x58
  408156:	pop    rbx
  408157:	pop    rsi
  408158:	pop    rdi
  408159:	pop    rbp
  40815a:	ret    
  40815b:	nop    DWORD PTR [rax+rax*1+0x0]
  408160:	lea    rcx,[rip+0x39539]        # 0x4416a0
  408167:	call   0x433f18
  40816c:	mov    rcx,rax
  40816f:	jmp    0x408140
  408171:	lea    rcx,[rip+0x394d8]        # 0x441650
  408178:	call   0x433f18
  40817d:	mov    rcx,rax
  408180:	call   0x4144d0
  408185:	jmp    0x408110
  408187:	nop    WORD PTR [rax+rax*1+0x0]
  408190:	push   rbp
  408191:	push   rdi
  408192:	push   rsi
  408193:	push   rbx
  408194:	sub    rsp,0x28
  408198:	mov    rdi,rcx
  40819b:	mov    ebp,edx
  40819d:	call   0x409e30
  4081a2:	test   rax,rax
  4081a5:	je     0x408252
  4081ab:	mov    rcx,rax
  4081ae:	call   0x4077f0
  4081b3:	mov    rbx,QWORD PTR [rip+0x491a6]        # 0x451360
  4081ba:	test   rbx,rbx
  4081bd:	je     0x408252
  4081c3:	lea    rcx,[rip+0x394f8]        # 0x4416c2
  4081ca:	call   0x433f18
  4081cf:	mov    rdx,rbx
  4081d2:	mov    rcx,rax
  4081d5:	call   0x4065d0
  4081da:	test   rax,rax
  4081dd:	mov    rsi,rax
  4081e0:	je     0x4082e2
  4081e6:	cmp    BYTE PTR [rax],0x0
  4081e9:	je     0x408270
  4081ef:	test   ebp,ebp
  4081f1:	js     0x4082b0
  4081f7:	mov    DWORD PTR [rip+0x49157],0xffffffff        # 0x451358
  408201:	mov    DWORD PTR [rip+0x49149],0x0        # 0x451354
  40820b:	mov    ebx,0xffffffff
  408210:	mov    DWORD PTR [rip+0x49136],0x0        # 0x451350
  40821a:	mov    rcx,QWORD PTR [rip+0x49127]        # 0x451348
  408221:	call   0x43a748
  408226:	mov    edx,ebp
  408228:	mov    rcx,rdi
  40822b:	mov    QWORD PTR [rip+0x49116],rsi        # 0x451348
  408232:	call   0x408090
  408237:	cmp    DWORD PTR [rip+0x4911b],ebx        # 0x451358
  40823d:	jne    0x408249
  40823f:	mov    DWORD PTR [rip+0x4910f],0x0        # 0x451358
  408249:	add    rsp,0x28
  40824d:	pop    rbx
  40824e:	pop    rsi
  40824f:	pop    rdi
  408250:	pop    rbp
  408251:	ret    
  408252:	lea    rcx,[rip+0x39396]        # 0x4415ef
  408259:	call   0x433f18
  40825e:	mov    rcx,rax
  408261:	add    rsp,0x28
  408265:	pop    rbx
  408266:	pop    rsi
  408267:	pop    rdi
  408268:	pop    rbp
  408269:	jmp    0x4144d0
  40826e:	xchg   ax,ax
  408270:	mov    rcx,rax
  408273:	call   0x43a748
  408278:	mov    rcx,QWORD PTR [rip+0x490c1]        # 0x451340
  40827f:	test   rcx,rcx
  408282:	je     0x408249
  408284:	mov    rdx,QWORD PTR [rip+0x490ad]        # 0x451338
  40828b:	test   rdx,rdx
  40828e:	je     0x408249
  408290:	call   0x4124d0
  408295:	mov    rcx,rdi
  408298:	mov    rdx,rax
  40829b:	add    rsp,0x28
  40829f:	pop    rbx
  4082a0:	pop    rsi
  4082a1:	pop    rdi
  4082a2:	pop    rbp
  4082a3:	jmp    0x415020
  4082a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4082b0:	mov    r8,QWORD PTR [rip+0x490a9]        # 0x451360
  4082b7:	cmp    QWORD PTR [r8],0x0
  4082bb:	je     0x4082f7
  4082bd:	add    r8,0x8
  4082c1:	xor    r9d,r9d
  4082c4:	add    r8,0x8
  4082c8:	add    r9d,0x1
  4082cc:	cmp    QWORD PTR [r8-0x8],0x0
  4082d1:	jne    0x4082c4
  4082d3:	mov    DWORD PTR [rip+0x4907e],r9d        # 0x451358
  4082da:	mov    ebx,r9d
  4082dd:	jmp    0x40821a
  4082e2:	mov    edx,0x1
  4082e7:	mov    rcx,rdi
  4082ea:	add    rsp,0x28
  4082ee:	pop    rbx
  4082ef:	pop    rsi
  4082f0:	pop    rdi
  4082f1:	pop    rbp
  4082f2:	jmp    0x414890
  4082f7:	xor    r9d,r9d
  4082fa:	jmp    0x4082d3
  4082fc:	nop    DWORD PTR [rax+0x0]
  408300:	push   r14
  408302:	push   r13
  408304:	push   r12
  408306:	push   rbp
  408307:	push   rdi
  408308:	push   rsi
  408309:	push   rbx
  40830a:	sub    rsp,0x20
  40830e:	mov    rbx,rcx
  408311:	mov    rcx,QWORD PTR [rip+0x49030]        # 0x451348
  408318:	mov    rbp,rdx
  40831b:	mov    r13d,r8d
  40831e:	call   0x43a748
  408323:	mov    rcx,rbp
  408326:	call   0x422a00
  40832b:	mov    rcx,rbx
  40832e:	mov    QWORD PTR [rip+0x49013],rax        # 0x451348
  408335:	call   0x4077f0
  40833a:	mov    rsi,QWORD PTR [rip+0x4901f]        # 0x451360
  408341:	test   rsi,rsi
  408344:	je     0x4083d2
  40834a:	mov    rbx,QWORD PTR [rsi]
  40834d:	test   rbx,rbx
  408350:	je     0x4083d2
  408356:	xor    r12d,r12d
  408359:	xor    r14d,r14d
  40835c:	jmp    0x408395
  40835e:	xchg   ax,ax
  408360:	test   r12,r12
  408363:	jne    0x408389
  408365:	test   r13d,r13d
  408368:	je     0x408389
  40836a:	mov    rcx,rbp
  40836d:	call   0x421c70
  408372:	mov    rdx,rdi
  408375:	mov    r8,rax
  408378:	mov    rcx,rbp
  40837b:	call   0x421e70
  408380:	test   eax,eax
  408382:	cmovne rbx,r14
  408386:	mov    r12,rbx
  408389:	add    rsi,0x8
  40838d:	mov    rbx,QWORD PTR [rsi]
  408390:	test   rbx,rbx
  408393:	je     0x4083c0
  408395:	mov    rdi,QWORD PTR [rbx]
  408398:	mov    rcx,rbp
  40839b:	mov    rdx,rdi
  40839e:	call   0x43a648
  4083a3:	test   eax,eax
  4083a5:	jne    0x408360
  4083a7:	mov    rax,rbx
  4083aa:	add    rsp,0x20
  4083ae:	pop    rbx
  4083af:	pop    rsi
  4083b0:	pop    rdi
  4083b1:	pop    rbp
  4083b2:	pop    r12
  4083b4:	pop    r13
  4083b6:	pop    r14
  4083b8:	ret    
  4083b9:	nop    DWORD PTR [rax+0x0]
  4083c0:	mov    rax,r12
  4083c3:	add    rsp,0x20
  4083c7:	pop    rbx
  4083c8:	pop    rsi
  4083c9:	pop    rdi
  4083ca:	pop    rbp
  4083cb:	pop    r12
  4083cd:	pop    r13
  4083cf:	pop    r14
  4083d1:	ret    
  4083d2:	xor    eax,eax
  4083d4:	jmp    0x4083aa
  4083d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083e0:	push   r15
  4083e2:	push   r14
  4083e4:	push   r13
  4083e6:	push   r12
  4083e8:	push   rbp
  4083e9:	push   rdi
  4083ea:	push   rsi
  4083eb:	push   rbx
  4083ec:	sub    rsp,0x38
  4083f0:	mov    r12,rcx
  4083f3:	mov    DWORD PTR [rsp+0x88],edx
  4083fa:	call   0x401ab0
  4083ff:	test   rax,rax
  408402:	mov    QWORD PTR [rsp+0x28],rax
  408407:	je     0x408698
  40840d:	mov    r14,QWORD PTR [rax+0x30]
  408411:	test   r14,r14
  408414:	je     0x408698
  40841a:	mov    rbp,QWORD PTR [r14]
  40841d:	xor    r13d,r13d
  408420:	xor    esi,esi
  408422:	test   rbp,rbp
  408425:	je     0x408690
  40842b:	nop    DWORD PTR [rax+rax*1+0x0]
  408430:	mov    rdi,QWORD PTR [rbp+0x8]
  408434:	test   rdi,rdi
  408437:	je     0x408514
  40843d:	test   rsi,rsi
  408440:	je     0x40846a
  408442:	xor    ebx,ebx
  408444:	mov    rax,QWORD PTR [r14+rbx*8]
  408448:	mov    rdx,QWORD PTR [rax+0x8]
  40844c:	test   rdx,rdx
  40844f:	je     0x408461
  408451:	mov    rcx,rdi
  408454:	call   0x4213b0
  408459:	test   eax,eax
  40845b:	je     0x4085e3
  408461:	add    rbx,0x1
  408465:	cmp    rbx,rsi
  408468:	jne    0x408444
  40846a:	mov    rcx,rdi
  40846d:	xor    ebx,ebx
  40846f:	call   0x411360
  408474:	test   rax,rax
  408477:	mov    r15,rax
  40847a:	je     0x408669
  408480:	mov    eax,DWORD PTR [rsp+0x88]
  408487:	test   eax,eax
  408489:	jne    0x40862b
  40848f:	mov    rcx,r15
  408492:	call   0x4077f0
  408497:	mov    rdx,QWORD PTR [rip+0x48ec2]        # 0x451360
  40849e:	test   rdx,rdx
  4084a1:	je     0x4084fe
  4084a3:	mov    rdi,QWORD PTR [rdx]
  4084a6:	lea    rbp,[rdx+0x8]
  4084aa:	test   rdi,rdi
  4084ad:	jne    0x4084be
  4084af:	jmp    0x4084e8
  4084b1:	add    rbp,0x8
  4084b5:	mov    rdi,QWORD PTR [rbp-0x8]
  4084b9:	test   rdi,rdi
  4084bc:	je     0x4084e8
  4084be:	cmp    QWORD PTR [rdi+0x8],0x0
  4084c3:	jne    0x4084b1
  4084c5:	mov    rcx,QWORD PTR [r15]
  4084c8:	add    rbp,0x8
  4084cc:	mov    QWORD PTR [rsp+0x20],rdx
  4084d1:	call   0x422a00
  4084d6:	mov    QWORD PTR [rdi+0x8],rax
  4084da:	mov    rdi,QWORD PTR [rbp-0x8]
  4084de:	mov    rdx,QWORD PTR [rsp+0x20]
  4084e3:	test   rdi,rdi
  4084e6:	jne    0x4084be
  4084e8:	mov    rcx,r13
  4084eb:	call   0x4090e0
  4084f0:	mov    rdi,rax
  4084f3:	mov    rcx,r13
  4084f6:	mov    r13,rdi
  4084f9:	call   0x43a748
  4084fe:	test   rbx,rbx
  408501:	je     0x408514
  408503:	mov    rcx,QWORD PTR [rbx+0x40]
  408507:	call   0x43a748
  40850c:	mov    QWORD PTR [rbx+0x40],0x0
  408514:	add    rsi,0x1
  408518:	mov    rbp,QWORD PTR [r14+rsi*8]
  40851c:	test   rbp,rbp
  40851f:	jne    0x408430
  408525:	test   r13,r13
  408528:	je     0x408690
  40852e:	mov    rsi,QWORD PTR [r13+0x0]
  408532:	test   rsi,rsi
  408535:	je     0x408602
  40853b:	lea    rbp,[r13+0x8]
  40853f:	xor    ebx,ebx
  408541:	xor    edi,edi
  408543:	xor    r14d,r14d
  408546:	movabs r15,0x1555555555555554
  408550:	jmp    0x4085a2
  408552:	cmp    r14,0x1
  408556:	sbb    rdx,rdx
  408559:	and    rdx,0xfffffffffffffe68
  408560:	add    rdx,0x4b8
  408567:	cmp    r14,0x1
  40856b:	sbb    rbx,rbx
  40856e:	and    rbx,0xffffffffffffffcd
  408572:	add    rbx,0x97
  408579:	mov    rcx,r14
  40857c:	call   0x422820
  408581:	mov    r14,rax
  408584:	mov    QWORD PTR [r14+rdi*8],rsi
  408588:	mov    QWORD PTR [r14+rdi*8+0x8],0x0
  408591:	add    rdi,0x1
  408595:	add    rbp,0x8
  408599:	mov    rsi,QWORD PTR [rbp-0x8]
  40859d:	test   rsi,rsi
  4085a0:	je     0x408605
  4085a2:	mov    rdx,QWORD PTR [rsi]
  4085a5:	mov    rcx,r12
  4085a8:	call   0x412cb0
  4085ad:	cmp    eax,0xffffffff
  4085b0:	je     0x408595
  4085b2:	lea    rax,[rdi+0x2]
  4085b6:	cmp    rax,rbx
  4085b9:	jb     0x408584
  4085bb:	test   rbx,rbx
  4085be:	je     0x408552
  4085c0:	test   r14,r14
  4085c3:	je     0x4085d9
  4085c5:	cmp    rbx,r15
  4085c8:	ja     0x4086a9
  4085ce:	mov    rax,rbx
  4085d1:	shr    rax,1
  4085d4:	lea    rbx,[rbx+rax*1+0x1]
  4085d9:	lea    rdx,[rbx*8+0x0]
  4085e1:	jmp    0x408579
  4085e3:	cmp    rbx,rsi
  4085e6:	jae    0x40846a
  4085ec:	add    rsi,0x1
  4085f0:	mov    rbp,QWORD PTR [r14+rsi*8]
  4085f4:	test   rbp,rbp
  4085f7:	jne    0x408430
  4085fd:	jmp    0x408525
  408602:	xor    r14d,r14d
  408605:	mov    rcx,r13
  408608:	call   0x43a748
  40860d:	mov    rcx,QWORD PTR [rsp+0x28]
  408612:	call   0x43a748
  408617:	mov    rax,r14
  40861a:	add    rsp,0x38
  40861e:	pop    rbx
  40861f:	pop    rsi
  408620:	pop    rdi
  408621:	pop    rbp
  408622:	pop    r12
  408624:	pop    r13
  408626:	pop    r14
  408628:	pop    r15
  40862a:	ret    
  40862b:	mov    rdi,QWORD PTR [rbp+0x8]
  40862f:	lea    rcx,[rip+0x3909a]        # 0x4416d0
  408636:	call   0x433f18
  40863b:	mov    rdx,rdi
  40863e:	mov    rcx,rax
  408641:	call   0x421100
  408646:	mov    rcx,r15
  408649:	call   0x4077f0
  40864e:	mov    rdx,QWORD PTR [rip+0x48d0b]        # 0x451360
  408655:	mov    QWORD PTR [rsp+0x20],rdx
  40865a:	call   0x421200
  40865f:	mov    rdx,QWORD PTR [rsp+0x20]
  408664:	jmp    0x40849e
  408669:	mov    rcx,QWORD PTR [rbp+0x8]
  40866d:	call   0x4117b0
  408672:	test   rax,rax
  408675:	mov    rbx,rax
  408678:	je     0x408514
  40867e:	mov    r15,rax
  408681:	jmp    0x408480
  408686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408690:	xor    r14d,r14d
  408693:	jmp    0x40860d
  408698:	mov    rcx,QWORD PTR [rsp+0x28]
  40869d:	call   0x43a748
  4086a2:	xor    eax,eax
  4086a4:	jmp    0x40861a
  4086a9:	call   0x422a20
  4086ae:	nop
  4086af:	nop
  4086b0:	push   r15
  4086b2:	push   r14
  4086b4:	push   r13
  4086b6:	push   r12
  4086b8:	push   rbp
  4086b9:	push   rdi
  4086ba:	push   rsi
  4086bb:	push   rbx
  4086bc:	sub    rsp,0x58
  4086c0:	mov    rbx,QWORD PTR [rip+0x48c81]        # 0x451348
  4086c7:	lea    rcx,[rip+0x3901e]        # 0x4416ec
  4086ce:	test   rbx,rbx
  4086d1:	je     0x408956
  4086d7:	call   0x433f18
  4086dc:	lea    rcx,[rsp+0x28]
  4086e1:	lea    rdx,[rip+0x39012]        # 0x4416fa
  4086e8:	mov    r8,rax
  4086eb:	mov    r9,rbx
  4086ee:	call   0x433f30
  4086f3:	mov    rcx,QWORD PTR [rsp+0x28]
  4086f8:	call   0x4055a0
  4086fd:	mov    rcx,QWORD PTR [rsp+0x28]
  408702:	mov    rbx,rax
  408705:	call   0x43a748
  40870a:	mov    rbp,QWORD PTR [rip+0x410df]        # 0x4497f0
  408711:	test   rbx,rbx
  408714:	mov    r13,QWORD PTR [rbp+0x0]
  408718:	je     0x408974
  40871e:	cmp    BYTE PTR [rbx],0x0
  408721:	jne    0x408750
  408723:	mov    rcx,rbx
  408726:	call   0x43a748
  40872b:	mov    rcx,QWORD PTR [rip+0x48c16]        # 0x451348
  408732:	test   rcx,rcx
  408735:	je     0x40873c
  408737:	cmp    BYTE PTR [rcx],0x0
  40873a:	jne    0x40876b
  40873c:	add    rsp,0x58
  408740:	pop    rbx
  408741:	pop    rsi
  408742:	pop    rdi
  408743:	pop    rbp
  408744:	pop    r12
  408746:	pop    r13
  408748:	pop    r14
  40874a:	pop    r15
  40874c:	ret    
  40874d:	nop    DWORD PTR [rax]
  408750:	mov    rcx,QWORD PTR [rip+0x48bf1]        # 0x451348
  408757:	call   0x43a748
  40875c:	mov    rcx,rbx
  40875f:	mov    QWORD PTR [rip+0x48be2],rbx        # 0x451348
  408766:	cmp    BYTE PTR [rcx],0x0
  408769:	je     0x40873c
  40876b:	mov    edx,0x1
  408770:	call   0x4083e0
  408775:	test   rax,rax
  408778:	mov    r12,rax
  40877b:	je     0x408986
  408781:	lea    rsi,[rsp+0x30]
  408786:	mov    rdi,r12
  408789:	mov    rcx,rsi
  40878c:	call   0x40a000
  408791:	mov    edx,0xa
  408796:	mov    rcx,rsi
  408799:	call   0x40ba70
  40879e:	mov    rbx,QWORD PTR [rip+0x48ba3]        # 0x451348
  4087a5:	lea    rcx,[rip+0x38f9c]        # 0x441748
  4087ac:	call   0x433f18
  4087b1:	mov    r8,rbx
  4087b4:	mov    rdx,rax
  4087b7:	mov    rcx,rsi
  4087ba:	call   0x40ba90
  4087bf:	lea    rdx,[rip+0x38fa2]        # 0x441768
  4087c6:	mov    rcx,rsi
  4087c9:	call   0x40ba90
  4087ce:	lea    rdx,[rip+0x38f9c]        # 0x441771
  4087d5:	mov    r8d,0xb
  4087db:	mov    rcx,rsi
  4087de:	call   0x40a1b0
  4087e3:	mov    edx,0xa
  4087e8:	mov    rcx,rsi
  4087eb:	call   0x40ba70
  4087f0:	mov    rax,QWORD PTR [r12]
  4087f4:	test   rax,rax
  4087f7:	je     0x4088a3
  4087fd:	nop    DWORD PTR [rax]
  408800:	mov    rcx,QWORD PTR [rax+0x8]
  408804:	mov    rbx,QWORD PTR [rsp+0x40]
  408809:	call   0x4196f0
  40880e:	mov    r14,rax
  408811:	mov    rax,QWORD PTR [rdi]
  408814:	lea    rdx,[rip+0x38f62]        # 0x44177d
  40881b:	mov    r9,r14
  40881e:	mov    rcx,rsi
  408821:	movsxd rbx,ebx
  408824:	mov    r8,QWORD PTR [rax]
  408827:	call   0x40ba90
  40882c:	mov    rax,QWORD PTR [rsp+0x40]
  408831:	sub    rax,rbx
  408834:	cmp    rax,0x27
  408838:	ja     0x40885b
  40883a:	nop    WORD PTR [rax+rax*1+0x0]
  408840:	mov    edx,0x20
  408845:	mov    rcx,rsi
  408848:	call   0x40ba70
  40884d:	mov    rdx,QWORD PTR [rsp+0x40]
  408852:	sub    rdx,rbx
  408855:	cmp    rdx,0x27
  408859:	jbe    0x408840
  40885b:	mov    rax,QWORD PTR [rdi]
  40885e:	lea    rdx,[rip+0x38f24]        # 0x441789
  408865:	mov    r8,r14
  408868:	mov    rcx,rsi
  40886b:	add    rdi,0x8
  40886f:	mov    r9,QWORD PTR [rax+0x10]
  408873:	call   0x40ba90
  408878:	mov    rax,QWORD PTR [rdi-0x8]
  40887c:	lea    rdx,[rip+0x38f0e]        # 0x441791
  408883:	mov    rcx,rsi
  408886:	mov    r8d,DWORD PTR [rax+0x20]
  40888a:	call   0x40ba90
  40888f:	mov    rcx,r14
  408892:	call   0x43a748
  408897:	mov    rax,QWORD PTR [rdi]
  40889a:	test   rax,rax
  40889d:	jne    0x408800
  4088a3:	mov    rcx,rsi
  4088a6:	call   0x41fd00
  4088ab:	xor    r8d,r8d
  4088ae:	mov    r15,rax
  4088b1:	xor    edx,edx
  4088b3:	mov    rcx,rax
  4088b6:	mov    rbx,QWORD PTR [rax+0x18]
  4088ba:	call   0x40a810
  4088bf:	cmp    QWORD PTR [r15+0x18],rbx
  4088c3:	je     0x4088cd
  4088c5:	mov    rcx,rbx
  4088c8:	call   0x43a748
  4088cd:	lea    rcx,[rip+0x38eca]        # 0x44179e
  4088d4:	call   0x422a00
  4088d9:	mov    rcx,r15
  4088dc:	mov    rdx,rax
  4088df:	call   0x409f70
  4088e4:	mov    rax,QWORD PTR [rip+0x41325]        # 0x449c10
  4088eb:	mov    rbx,QWORD PTR [rax]
  4088ee:	test   rbx,rbx
  4088f1:	je     0x40892a
  4088f3:	mov    r14d,0xa
  4088f9:	nop    DWORD PTR [rax+0x0]
  408900:	mov    rsi,QWORD PTR [rbx+0x20]
  408904:	mov    rcx,rsi
  408907:	call   0x409f50
  40890c:	test   eax,eax
  40890e:	je     0x408922
  408910:	mov    rsi,QWORD PTR [rsi+0x10]
  408914:	lea    rdi,[rip+0x38e83]        # 0x44179e
  40891b:	mov    rcx,r14
  40891e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408920:	je     0x408933
  408922:	mov    rbx,QWORD PTR [rbx]
  408925:	test   rbx,rbx
  408928:	jne    0x408900
  40892a:	mov    rbx,QWORD PTR [r13+0x0]
  40892e:	test   rbx,rbx
  408931:	je     0x4089a9
  408933:	or     DWORD PTR [rbx+0x80],0x10
  40893a:	mov    rcx,rbx
  40893d:	mov    rdx,r15
  408940:	call   0x415020
  408945:	mov    rcx,r12
  408948:	mov    QWORD PTR [rbp+0x0],rbx
  40894c:	call   0x43a748
  408951:	jmp    0x40873c
  408956:	call   0x433f18
  40895b:	lea    rcx,[rsp+0x28]
  408960:	lea    rdx,[rip+0x38d9d]        # 0x441704
  408967:	mov    r8,rax
  40896a:	call   0x433f30
  40896f:	jmp    0x4086f3
  408974:	mov    edx,0x1
  408979:	mov    rcx,r13
  40897c:	call   0x414890
  408981:	jmp    0x40873c
  408986:	mov    rbx,QWORD PTR [rip+0x489bb]        # 0x451348
  40898d:	lea    rcx,[rip+0x38d7c]        # 0x441710
  408994:	call   0x433f18
  408999:	mov    rdx,rbx
  40899c:	mov    rcx,rax
  40899f:	call   0x4144d0
  4089a4:	jmp    0x40873c
  4089a9:	call   0x41f7b0
  4089ae:	mov    rbx,rax
  4089b1:	test   rax,rax
  4089b4:	cmove  rbx,r13
  4089b8:	jmp    0x408933
  4089bd:	nop    DWORD PTR [rax]
  4089c0:	push   r15
  4089c2:	push   r14
  4089c4:	push   r13
  4089c6:	push   r12
  4089c8:	push   rbp
  4089c9:	push   rdi
  4089ca:	push   rsi
  4089cb:	push   rbx
  4089cc:	sub    rsp,0x98
  4089d3:	mov    QWORD PTR [rsp+0xe0],rcx
  4089db:	call   0x409e30
  4089e0:	test   rax,rax
  4089e3:	mov    r13,rax
  4089e6:	mov    rcx,QWORD PTR [rip+0x48953]        # 0x451340
  4089ed:	je     0x408c30
  4089f3:	test   rcx,rcx
  4089f6:	je     0x408c30
  4089fc:	mov    rdx,QWORD PTR [rax]
  4089ff:	call   0x4213b0
  408a04:	test   eax,eax
  408a06:	jne    0x408c30
  408a0c:	cmp    QWORD PTR [rip+0x4894c],0x0        # 0x451360
  408a14:	je     0x408d8e
  408a1a:	mov    rbx,QWORD PTR [rip+0x48927]        # 0x451348
  408a21:	lea    rcx,[rip+0x38d80]        # 0x4417a8
  408a28:	test   rbx,rbx
  408a2b:	je     0x408d70
  408a31:	call   0x433f18
  408a36:	lea    rcx,[rsp+0x60]
  408a3b:	lea    rdx,[rip+0x38cb8]        # 0x4416fa
  408a42:	mov    r8,rax
  408a45:	mov    r9,rbx
  408a48:	call   0x433f30
  408a4d:	mov    rdx,QWORD PTR [rip+0x4890c]        # 0x451360
  408a54:	mov    rcx,QWORD PTR [rsp+0x60]
  408a59:	call   0x4065d0
  408a5e:	mov    rcx,QWORD PTR [rsp+0x60]
  408a63:	mov    rbx,rax
  408a66:	call   0x43a748
  408a6b:	test   rbx,rbx
  408a6e:	je     0x408da7
  408a74:	cmp    BYTE PTR [rbx],0x0
  408a77:	jne    0x408d54
  408a7d:	cmp    QWORD PTR [rip+0x488c3],0x0        # 0x451348
  408a85:	je     0x408dbe
  408a8b:	lea    rsi,[rsp+0x70]
  408a90:	xor    ebx,ebx
  408a92:	xor    ebp,ebp
  408a94:	lea    r15,[rsp+0x5c]
  408a99:	mov    rcx,rsi
  408a9c:	call   0x40a000
  408aa1:	mov    r9,QWORD PTR [rip+0x488a0]        # 0x451348
  408aa8:	lea    rdx,[rip+0x38d09]        # 0x4417b8
  408aaf:	mov    rcx,rsi
  408ab2:	mov    QWORD PTR [rsp+0x20],r9
  408ab7:	mov    r8,QWORD PTR [r13+0x0]
  408abb:	call   0x40ba90
  408ac0:	lea    rdx,[rip+0x38caa]        # 0x441771
  408ac7:	mov    r8d,0xb
  408acd:	mov    rcx,rsi
  408ad0:	call   0x40a1b0
  408ad5:	lea    rdx,[rip+0x38d3a]        # 0x441816
  408adc:	mov    rcx,rsi
  408adf:	call   0x40ba90
  408ae4:	lea    rax,[rsp+0x58]
  408ae9:	mov    DWORD PTR [rip+0x48865],0x0        # 0x451358
  408af3:	mov    DWORD PTR [rip+0x48857],0x0        # 0x451354
  408afd:	mov    DWORD PTR [rip+0x48849],0x0        # 0x451350
  408b07:	mov    QWORD PTR [rsp+0x40],rax
  408b0c:	lea    rax,[rsp+0x68]
  408b11:	mov    QWORD PTR [rsp+0x48],rax
  408b16:	jmp    0x408b5d
  408b18:	nop    DWORD PTR [rax+rax*1+0x0]
  408b20:	mov    edx,0xa
  408b25:	mov    rcx,rsi
  408b28:	call   0x40ba70
  408b2d:	mov    r8d,0x3e
  408b33:	mov    edx,0x20
  408b38:	mov    rcx,rsi
  408b3b:	call   0x40ba10
  408b40:	mov    r8d,DWORD PTR [rdi+0x20]
  408b44:	lea    rdx,[rip+0x38ce7]        # 0x441832
  408b4b:	mov    rcx,rsi
  408b4e:	add    rbp,0x1
  408b52:	call   0x40ba90
  408b57:	mov    ebx,DWORD PTR [rip+0x487fb]        # 0x451358
  408b5d:	mov    rcx,QWORD PTR [rsp+0xe0]
  408b65:	mov    rdi,QWORD PTR [rip+0x487dc]        # 0x451348
  408b6c:	call   0x409e30
  408b71:	mov    rdx,QWORD PTR [rsp+0x40]
  408b76:	mov    rcx,QWORD PTR [rsp+0x48]
  408b7b:	mov    r9d,0x1
  408b81:	mov    QWORD PTR [rsp+0x30],r15
  408b86:	mov    r8d,ebx
  408b89:	mov    QWORD PTR [rsp+0x28],rdx
  408b8e:	mov    QWORD PTR [rsp+0x20],rcx
  408b93:	mov    rdx,rdi
  408b96:	mov    rcx,rax
  408b99:	call   0x407c70
  408b9e:	cmp    QWORD PTR [rsp+0x68],0x0
  408ba4:	je     0x408c90
  408baa:	movsxd rdx,DWORD PTR [rsp+0x58]
  408baf:	mov    rax,QWORD PTR [rip+0x487aa]        # 0x451360
  408bb6:	mov    rcx,rsi
  408bb9:	mov    r12,QWORD PTR [r13+0x0]
  408bbd:	mov    rdi,QWORD PTR [rax+rdx*8]
  408bc1:	lea    rdx,[rip+0x38c59]        # 0x441821
  408bc8:	mov    r8,QWORD PTR [rdi]
  408bcb:	call   0x40ba90
  408bd0:	cmp    rax,0x28
  408bd4:	mov    rbx,rax
  408bd7:	jbe    0x408c51
  408bd9:	mov    r14,QWORD PTR [rdi+0x8]
  408bdd:	test   r14,r14
  408be0:	je     0x408bf1
  408be2:	mov    rdx,r12
  408be5:	mov    rcx,r14
  408be8:	call   0x43a648
  408bed:	test   eax,eax
  408bef:	jne    0x408c70
  408bf1:	mov    r8,QWORD PTR [rdi+0x10]
  408bf5:	lea    rdx,[rip+0x38c31]        # 0x44182d
  408bfc:	mov    rcx,rsi
  408bff:	call   0x40ba90
  408c04:	add    rbx,rax
  408c07:	cmp    rbx,0x3d
  408c0b:	ja     0x408b20
  408c11:	mov    r8d,0x3e
  408c17:	mov    edx,0x20
  408c1c:	mov    rcx,rsi
  408c1f:	sub    r8,rbx
  408c22:	call   0x40ba10
  408c27:	jmp    0x408b40
  408c2c:	nop    DWORD PTR [rax+0x0]
  408c30:	lea    rcx,[rip+0x38999]        # 0x4415d0
  408c37:	call   0x433f18
  408c3c:	mov    rcx,rax
  408c3f:	call   0x4210d0
  408c44:	mov    rcx,r13
  408c47:	call   0x4077f0
  408c4c:	jmp    0x408a0c
  408c51:	mov    r8d,0x29
  408c57:	mov    edx,0x20
  408c5c:	mov    rcx,rsi
  408c5f:	sub    r8,rax
  408c62:	call   0x40ba10
  408c67:	add    rbx,rax
  408c6a:	jmp    0x408bd9
  408c6f:	nop
  408c70:	lea    rdx,[rip+0x38bb1]        # 0x441828
  408c77:	mov    r8,r14
  408c7a:	mov    rcx,rsi
  408c7d:	call   0x40ba90
  408c82:	add    rbx,rax
  408c85:	jmp    0x408bf1
  408c8a:	nop    WORD PTR [rax+rax*1+0x0]
  408c90:	xor    edx,edx
  408c92:	mov    rcx,rsi
  408c95:	call   0x40ba70
  408c9a:	test   rbp,rbp
  408c9d:	jne    0x408ce0
  408c9f:	mov    rcx,rsi
  408ca2:	call   0x40a020
  408ca7:	mov    rbx,QWORD PTR [rip+0x4869a]        # 0x451348
  408cae:	lea    rcx,[rip+0x389eb]        # 0x4416a0
  408cb5:	call   0x433f18
  408cba:	mov    rdx,rbx
  408cbd:	mov    rcx,rax
  408cc0:	call   0x4144d0
  408cc5:	nop
  408cc6:	add    rsp,0x98
  408ccd:	pop    rbx
  408cce:	pop    rsi
  408ccf:	pop    rdi
  408cd0:	pop    rbp
  408cd1:	pop    r12
  408cd3:	pop    r13
  408cd5:	pop    r14
  408cd7:	pop    r15
  408cd9:	ret    
  408cda:	nop    WORD PTR [rax+rax*1+0x0]
  408ce0:	call   0x4119d0
  408ce5:	mov    r8,QWORD PTR [rip+0x4865c]        # 0x451348
  408cec:	lea    rcx,[rax+0x10]
  408cf0:	lea    rdx,[rip+0x38b47]        # 0x44183e
  408cf7:	mov    rbx,rax
  408cfa:	call   0x433f30
  408cff:	mov    rax,QWORD PTR [r13+0x0]
  408d03:	mov    rcx,QWORD PTR [rsp+0x70]
  408d08:	lea    rdx,[rip+0x38b3e]        # 0x44184d
  408d0f:	mov    QWORD PTR [rbx],rax
  408d12:	mov    eax,DWORD PTR [rsp+0x80]
  408d19:	mov    QWORD PTR [rbx+0x18],rcx
  408d1d:	sub    eax,0x1
  408d20:	mov    DWORD PTR [rbx+0x20],eax
  408d23:	call   0x43a638
  408d28:	or     DWORD PTR [rbx+0x2c],0x110
  408d2f:	xor    edx,edx
  408d31:	mov    rcx,rbx
  408d34:	mov    DWORD PTR [rbx+0x28],eax
  408d37:	xor    r8d,r8d
  408d3a:	call   0x40a810
  408d3f:	mov    rcx,QWORD PTR [rsp+0xe0]
  408d47:	mov    rdx,rbx
  408d4a:	call   0x415020
  408d4f:	jmp    0x408cc6
  408d54:	mov    rcx,QWORD PTR [rip+0x485ed]        # 0x451348
  408d5b:	call   0x43a748
  408d60:	mov    QWORD PTR [rip+0x485e1],rbx        # 0x451348
  408d67:	jmp    0x408a8b
  408d6c:	nop    DWORD PTR [rax+0x0]
  408d70:	call   0x433f18
  408d75:	lea    rcx,[rsp+0x60]
  408d7a:	lea    rdx,[rip+0x38983]        # 0x441704
  408d81:	mov    r8,rax
  408d84:	call   0x433f30
  408d89:	jmp    0x408a4d
  408d8e:	lea    rcx,[rip+0x3885a]        # 0x4415ef
  408d95:	call   0x433f18
  408d9a:	mov    rcx,rax
  408d9d:	call   0x4144d0
  408da2:	jmp    0x408cc6
  408da7:	mov    rcx,QWORD PTR [rsp+0xe0]
  408daf:	mov    edx,0x1
  408db4:	call   0x414890
  408db9:	jmp    0x408cc6
  408dbe:	mov    rcx,rbx
  408dc1:	call   0x43a748
  408dc6:	jmp    0x408cc6
  408dcb:	nop
  408dcc:	nop
  408dcd:	nop
  408dce:	nop
  408dcf:	nop
  408dd0:	push   rdi
  408dd1:	push   rsi
  408dd2:	push   rbx
  408dd3:	sub    rsp,0x20
  408dd7:	movzx  r8d,BYTE PTR [rcx+0x1]
  408ddc:	lea    rdi,[rcx+0x1]
  408de0:	test   r8b,r8b
  408de3:	je     0x408e82
  408de9:	xor    r9d,r9d
  408dec:	mov    ebx,0xffffffff
  408df1:	mov    r10d,0x1
  408df7:	jmp    0x408e15
  408df9:	nop    DWORD PTR [rax+0x0]
  408e00:	cmp    r8b,0x29
  408e04:	je     0x408e70
  408e06:	add    r9,0x1
  408e0a:	movzx  r8d,BYTE PTR [rcx+r9*1+0x1]
  408e10:	test   r8b,r8b
  408e13:	je     0x408e2e
  408e15:	cmp    r8b,0x28
  408e19:	jne    0x408e00
  408e1b:	add    r9,0x1
  408e1f:	add    r10d,0x1
  408e23:	movzx  r8d,BYTE PTR [rcx+r9*1+0x1]
  408e29:	test   r8b,r8b
  408e2c:	jne    0x408e15
  408e2e:	cmp    ebx,0xffffffff
  408e31:	je     0x408e82
  408e33:	test   rdx,rdx
  408e36:	je     0x408e5c
  408e38:	lea    eax,[rbx+0x1]
  408e3b:	mov    rsi,rdx
  408e3e:	mov    ecx,0x1
  408e43:	movsxd rdx,eax
  408e46:	call   0x422990
  408e4b:	movsxd r8,ebx
  408e4e:	mov    QWORD PTR [rsi],rax
  408e51:	mov    rdx,rdi
  408e54:	mov    rcx,rax
  408e57:	call   0x43a6b8
  408e5c:	lea    eax,[rbx+0x2]
  408e5f:	add    rsp,0x20
  408e63:	pop    rbx
  408e64:	pop    rsi
  408e65:	pop    rdi
  408e66:	ret    
  408e67:	nop    WORD PTR [rax+rax*1+0x0]
  408e70:	cmp    ebx,0xffffffff
  408e73:	cmove  ebx,r9d
  408e77:	sub    r10d,0x1
  408e7b:	jne    0x408e06
  408e7d:	mov    ebx,r9d
  408e80:	jmp    0x408e33
  408e82:	test   rdx,rdx
  408e85:	je     0x408e98
  408e87:	xor    eax,eax
  408e89:	mov    QWORD PTR [rdx],0x0
  408e90:	add    rsp,0x20
  408e94:	pop    rbx
  408e95:	pop    rsi
  408e96:	pop    rdi
  408e97:	ret    
  408e98:	xor    eax,eax
  408e9a:	jmp    0x408e5f
  408e9c:	nop    DWORD PTR [rax+0x0]
  408ea0:	cmp    BYTE PTR [rcx],0x28
  408ea3:	je     0x408eb0
  408ea5:	xor    eax,eax
  408ea7:	ret    
  408ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  408eb0:	jmp    0x408dd0
  408eb5:	nop
  408eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ec0:	push   r15
  408ec2:	push   r14
  408ec4:	push   r13
  408ec6:	push   r12
  408ec8:	push   rbp
  408ec9:	push   rdi
  408eca:	push   rsi
  408ecb:	push   rbx
  408ecc:	sub    rsp,0x28
  408ed0:	xor    ebx,ebx
  408ed2:	cmp    r8d,0x0
  408ed6:	mov    rbp,rcx
  408ed9:	mov    r14,rdx
  408edc:	mov    edi,r8d
  408edf:	mov    r12,r9
  408ee2:	je     0x408f15
  408ee4:	mov    rbx,rcx
  408ee7:	jle    0x408f90
  408eed:	xor    esi,esi
  408eef:	jmp    0x408f00
  408ef1:	add    esi,0x1
  408ef4:	add    rbx,0x1
  408ef8:	cmp    esi,edi
  408efa:	je     0x408f90
  408f00:	mov    rcx,rbx
  408f03:	mov    edx,0xa
  408f08:	call   0x43a650
  408f0d:	test   rax,rax
  408f10:	mov    rbx,rax
  408f13:	jne    0x408ef1
  408f15:	cmp    BYTE PTR [rbp+0x0],0x7f
  408f19:	je     0x408fa6
  408f1f:	mov    rdx,r14
  408f22:	mov    rcx,rbp
  408f25:	call   0x43a638
  408f2a:	cmp    BYTE PTR [r14],0x0
  408f2e:	mov    edi,eax
  408f30:	movsxd rsi,eax
  408f33:	je     0x408f3c
  408f35:	cmp    BYTE PTR [rbp+rsi*1+0x0],0x0
  408f3a:	je     0x408f80
  408f3c:	lea    ecx,[rax+0x1]
  408f3f:	movsxd rcx,ecx
  408f42:	call   0x4227b0
  408f47:	mov    r8,rsi
  408f4a:	mov    r14,rax
  408f4d:	mov    QWORD PTR [r12],rax
  408f51:	mov    rdx,rbp
  408f54:	mov    rcx,rax
  408f57:	call   0x43a610
  408f5c:	mov    BYTE PTR [r14+rsi*1],0x0
  408f61:	test   rbx,rbx
  408f64:	je     0x408f69
  408f66:	mov    BYTE PTR [rbx],r13b
  408f69:	mov    eax,edi
  408f6b:	add    rsp,0x28
  408f6f:	pop    rbx
  408f70:	pop    rsi
  408f71:	pop    rdi
  408f72:	pop    rbp
  408f73:	pop    r12
  408f75:	pop    r13
  408f77:	pop    r14
  408f79:	pop    r15
  408f7b:	ret    
  408f7c:	nop    DWORD PTR [rax+0x0]
  408f80:	mov    QWORD PTR [r12],0x0
  408f88:	xor    edi,edi
  408f8a:	jmp    0x408f61
  408f8c:	nop    DWORD PTR [rax+0x0]
  408f90:	test   rbx,rbx
  408f93:	je     0x408f15
  408f95:	movzx  r13d,BYTE PTR [rbx]
  408f99:	mov    BYTE PTR [rbx],0x0
  408f9c:	cmp    BYTE PTR [rbp+0x0],0x7f
  408fa0:	jne    0x408f1f
  408fa6:	lea    r15,[rbp+0x1]
  408faa:	lea    rdx,[rip+0x3889f]        # 0x441850
  408fb1:	mov    rcx,r15
  408fb4:	call   0x43a638
  408fb9:	cmp    BYTE PTR [r14],0x0
  408fbd:	mov    rdi,rax
  408fc0:	movsxd rsi,eax
  408fc3:	je     0x408fe0
  408fc5:	cmp    BYTE PTR [rbp+rsi*1+0x1],0x0
  408fca:	jne    0x408fe0
  408fcc:	mov    QWORD PTR [r12],0x0
  408fd4:	mov    edi,0x2
  408fd9:	jmp    0x408f61
  408fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  408fe0:	lea    ecx,[rdi+0x1]
  408fe3:	add    edi,0x2
  408fe6:	movsxd rcx,ecx
  408fe9:	call   0x4227b0
  408fee:	mov    r8,rsi
  408ff1:	mov    rbp,rax
  408ff4:	mov    QWORD PTR [r12],rax
  408ff8:	mov    rdx,r15
  408ffb:	mov    rcx,rax
  408ffe:	call   0x43a610
  409003:	mov    BYTE PTR [rbp+rsi*1+0x0],0x0
  409008:	jmp    0x408f61
  40900d:	nop    DWORD PTR [rax]
  409010:	push   r15
  409012:	push   r14
  409014:	push   r13
  409016:	push   r12
  409018:	push   rbp
  409019:	push   rdi
  40901a:	push   rsi
  40901b:	push   rbx
  40901c:	sub    rsp,0x28
  409020:	mov    rdi,QWORD PTR [rcx+0x30]
  409024:	test   rdi,rdi
  409027:	je     0x4090d8
  40902d:	mov    rbx,QWORD PTR [rdi]
  409030:	test   rbx,rbx
  409033:	je     0x4090d8
  409039:	mov    r13d,0xffffffff
  40903f:	mov    r14d,r8d
  409042:	mov    rbp,rdx
  409045:	xor    esi,esi
  409047:	mov    r15d,r13d
  40904a:	jmp    0x40905d
  40904c:	nop    DWORD PTR [rax+0x0]
  409050:	add    rsi,0x1
  409054:	mov    rbx,QWORD PTR [rdi+rsi*8]
  409058:	test   rbx,rbx
  40905b:	je     0x4090b0
  40905d:	cmp    DWORD PTR [rbx+0x24],0x1
  409061:	jne    0x409050
  409063:	mov    r12,QWORD PTR [rbx]
  409066:	mov    rcx,rbp
  409069:	mov    rdx,r12
  40906c:	call   0x4213b0
  409071:	test   eax,eax
  409073:	je     0x4090d3
  409075:	cmp    r13d,0xffffffff
  409079:	jne    0x409050
  40907b:	test   r14d,r14d
  40907e:	je     0x409050
  409080:	mov    rcx,rbp
  409083:	mov    r13d,r15d
  409086:	call   0x43a620
  40908b:	mov    rdx,rbp
  40908e:	mov    r8,rax
  409091:	mov    rcx,r12
  409094:	call   0x421e70
  409099:	test   eax,eax
  40909b:	cmove  r13d,esi
  40909f:	add    rsi,0x1
  4090a3:	mov    rbx,QWORD PTR [rdi+rsi*8]
  4090a7:	test   rbx,rbx
  4090aa:	jne    0x40905d
  4090ac:	nop    DWORD PTR [rax+0x0]
  4090b0:	cmp    r13d,0xffffffff
  4090b4:	je     0x4090d8
  4090b6:	test   r14d,r14d
  4090b9:	je     0x4090d8
  4090bb:	movsxd r13,r13d
  4090be:	mov    rax,QWORD PTR [rdi+r13*8]
  4090c2:	add    rsp,0x28
  4090c6:	pop    rbx
  4090c7:	pop    rsi
  4090c8:	pop    rdi
  4090c9:	pop    rbp
  4090ca:	pop    r12
  4090cc:	pop    r13
  4090ce:	pop    r14
  4090d0:	pop    r15
  4090d2:	ret    
  4090d3:	mov    rax,rbx
  4090d6:	jmp    0x4090c2
  4090d8:	xor    eax,eax
  4090da:	jmp    0x4090c2
  4090dc:	nop    DWORD PTR [rax+0x0]
  4090e0:	push   rsi
  4090e1:	push   rbx
  4090e2:	sub    rsp,0x28
  4090e6:	test   rcx,rcx
  4090e9:	mov    rsi,rcx
  4090ec:	mov    rbx,rdx
  4090ef:	je     0x4091e1
  4090f5:	cmp    QWORD PTR [rcx],0x0
  4090f9:	je     0x40922a
  4090ff:	lea    rax,[rcx+0x8]
  409103:	xor    r8d,r8d
  409106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409110:	add    rax,0x8
  409114:	add    r8d,0x1
  409118:	cmp    QWORD PTR [rax-0x8],0x0
  40911d:	jne    0x409110
  40911f:	test   rbx,rbx
  409122:	je     0x409254
  409128:	cmp    QWORD PTR [rbx],0x0
  40912c:	je     0x40923c
  409132:	lea    rax,[rbx+0x8]
  409136:	xor    edx,edx
  409138:	nop    DWORD PTR [rax+rax*1+0x0]
  409140:	add    rax,0x8
  409144:	add    edx,0x1
  409147:	cmp    QWORD PTR [rax-0x8],0x0
  40914c:	jne    0x409140
  40914e:	lea    ecx,[r8+rdx*1+0x1]
  409153:	movsxd rcx,ecx
  409156:	shl    rcx,0x3
  40915a:	call   0x4227b0
  40915f:	test   rsi,rsi
  409162:	je     0x409220
  409168:	mov    r10,QWORD PTR [rsi]
  40916b:	test   r10,r10
  40916e:	je     0x409232
  409174:	xor    r8d,r8d
  409177:	nop    WORD PTR [rax+rax*1+0x0]
  409180:	mov    QWORD PTR [rax+r8*8],r10
  409184:	lea    r9d,[r8+0x1]
  409188:	add    r8,0x1
  40918c:	mov    r10,QWORD PTR [rsi+r8*8]
  409190:	test   r10,r10
  409193:	jne    0x409180
  409195:	movsxd rdx,r9d
  409198:	shl    rdx,0x3
  40919c:	test   rbx,rbx
  40919f:	je     0x4091d2
  4091a1:	mov    r8,QWORD PTR [rbx]
  4091a4:	test   r8,r8
  4091a7:	je     0x4091d2
  4091a9:	movsxd rdx,r9d
  4091ac:	xor    ecx,ecx
  4091ae:	lea    rdx,[rax+rdx*8]
  4091b2:	mov    QWORD PTR [rdx+rcx*1],r8
  4091b6:	add    rcx,0x8
  4091ba:	add    r9d,0x1
  4091be:	mov    r8,QWORD PTR [rbx+rcx*1]
  4091c2:	test   r8,r8
  4091c5:	jne    0x4091b2
  4091c7:	movsxd r9,r9d
  4091ca:	lea    rdx,[r9*8+0x0]
  4091d2:	mov    QWORD PTR [rax+rdx*1],0x0
  4091da:	add    rsp,0x28
  4091de:	pop    rbx
  4091df:	pop    rsi
  4091e0:	ret    
  4091e1:	test   rdx,rdx
  4091e4:	je     0x409204
  4091e6:	xor    r8d,r8d
  4091e9:	cmp    QWORD PTR [rdx],0x0
  4091ed:	jne    0x409132
  4091f3:	mov    ecx,0x8
  4091f8:	call   0x4227b0
  4091fd:	xor    edx,edx
  4091ff:	xor    r9d,r9d
  409202:	jmp    0x4091a1
  409204:	mov    ecx,0x8
  409209:	call   0x4227b0
  40920e:	xor    edx,edx
  409210:	mov    QWORD PTR [rax+rdx*1],0x0
  409218:	add    rsp,0x28
  40921c:	pop    rbx
  40921d:	pop    rsi
  40921e:	ret    
  40921f:	nop
  409220:	xor    edx,edx
  409222:	xor    r9d,r9d
  409225:	jmp    0x4091a1
  40922a:	xor    r8d,r8d
  40922d:	jmp    0x40911f
  409232:	xor    edx,edx
  409234:	xor    r9d,r9d
  409237:	jmp    0x40919c
  40923c:	lea    eax,[r8+0x1]
  409240:	cdqe   
  409242:	lea    rcx,[rax*8+0x0]
  40924a:	call   0x4227b0
  40924f:	jmp    0x409168
  409254:	lea    eax,[r8+0x1]
  409258:	cdqe   
  40925a:	lea    rcx,[rax*8+0x0]
  409262:	call   0x4227b0
  409267:	mov    r10,QWORD PTR [rsi]
  40926a:	test   r10,r10
  40926d:	jne    0x409174
  409273:	xor    edx,edx
  409275:	jmp    0x409210
  409277:	nop    WORD PTR [rax+rax*1+0x0]
  409280:	push   rsi
  409281:	push   rbx
  409282:	sub    rsp,0x28
  409286:	mov    rsi,rcx
  409289:	mov    ecx,0x28
  40928e:	call   0x4227b0
  409293:	mov    rbx,rax
  409296:	mov    rax,QWORD PTR [rsi]
  409299:	test   rax,rax
  40929c:	je     0x4092a6
  40929e:	mov    rcx,rax
  4092a1:	call   0x422a00
  4092a6:	mov    QWORD PTR [rbx],rax
  4092a9:	mov    rax,QWORD PTR [rsi+0x8]
  4092ad:	test   rax,rax
  4092b0:	je     0x4092ba
  4092b2:	mov    rcx,rax
  4092b5:	call   0x422a00
  4092ba:	mov    QWORD PTR [rbx+0x8],rax
  4092be:	mov    rax,QWORD PTR [rsi+0x10]
  4092c2:	test   rax,rax
  4092c5:	je     0x4092cf
  4092c7:	mov    rcx,rax
  4092ca:	call   0x422a00
  4092cf:	mov    QWORD PTR [rbx+0x10],rax
  4092d3:	mov    eax,DWORD PTR [rsi+0x18]
  4092d6:	mov    DWORD PTR [rbx+0x18],eax
  4092d9:	mov    eax,DWORD PTR [rsi+0x1c]
  4092dc:	mov    DWORD PTR [rbx+0x1c],eax
  4092df:	mov    eax,DWORD PTR [rsi+0x20]
  4092e2:	mov    DWORD PTR [rbx+0x20],eax
  4092e5:	mov    eax,DWORD PTR [rsi+0x24]
  4092e8:	mov    DWORD PTR [rbx+0x24],eax
  4092eb:	mov    rax,rbx
  4092ee:	add    rsp,0x28
  4092f2:	pop    rbx
  4092f3:	pop    rsi
  4092f4:	ret    
  4092f5:	nop
  4092f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409300:	push   rdi
  409301:	push   rsi
  409302:	push   rbx
  409303:	sub    rsp,0x20
  409307:	test   rcx,rcx
  40930a:	je     0x409380
  40930c:	cmp    QWORD PTR [rcx],0x0
  409310:	je     0x409379
  409312:	lea    rax,[rcx+0x8]
  409316:	xor    edx,edx
  409318:	nop    DWORD PTR [rax+rax*1+0x0]
  409320:	add    rax,0x8
  409324:	add    edx,0x1
  409327:	cmp    QWORD PTR [rax-0x8],0x0
  40932c:	jne    0x409320
  40932e:	add    edx,0x1
  409331:	movsxd rdx,edx
  409334:	shl    rdx,0x3
  409338:	mov    rsi,rcx
  40933b:	mov    rcx,rdx
  40933e:	xor    ebx,ebx
  409340:	call   0x4227b0
  409345:	mov    rcx,QWORD PTR [rsi]
  409348:	mov    rdi,rax
  40934b:	test   rcx,rcx
  40934e:	je     0x409366
  409350:	call   0x409280
  409355:	mov    QWORD PTR [rdi+rbx*1],rax
  409359:	add    rbx,0x8
  40935d:	mov    rcx,QWORD PTR [rsi+rbx*1]
  409361:	test   rcx,rcx
  409364:	jne    0x409350
  409366:	mov    QWORD PTR [rdi+rbx*1],0x0
  40936e:	mov    rax,rdi
  409371:	add    rsp,0x20
  409375:	pop    rbx
  409376:	pop    rsi
  409377:	pop    rdi
  409378:	ret    
  409379:	mov    edx,0x8
  40937e:	jmp    0x409338
  409380:	xor    eax,eax
  409382:	jmp    0x409371
  409384:	xchg   ax,ax
  409386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409390:	push   rbx
  409391:	sub    rsp,0x20
  409395:	test   rcx,rcx
  409398:	je     0x4093c4
  40939a:	mov    rbx,rcx
  40939d:	mov    rcx,QWORD PTR [rcx]
  4093a0:	call   0x43a748
  4093a5:	mov    rcx,QWORD PTR [rbx+0x8]
  4093a9:	call   0x43a748
  4093ae:	mov    rcx,QWORD PTR [rbx+0x10]
  4093b2:	call   0x43a748
  4093b7:	mov    rcx,rbx
  4093ba:	add    rsp,0x20
  4093be:	pop    rbx
  4093bf:	jmp    0x43a748
  4093c4:	add    rsp,0x20
  4093c8:	pop    rbx
  4093c9:	ret    
  4093ca:	nop    WORD PTR [rax+rax*1+0x0]
  4093d0:	push   rsi
  4093d1:	push   rbx
  4093d2:	sub    rsp,0x28
  4093d6:	test   rcx,rcx
  4093d9:	je     0x409410
  4093db:	mov    rsi,rcx
  4093de:	mov    rcx,QWORD PTR [rcx]
  4093e1:	lea    rbx,[rsi+0x8]
  4093e5:	test   rcx,rcx
  4093e8:	je     0x409402
  4093ea:	nop    WORD PTR [rax+rax*1+0x0]
  4093f0:	add    rbx,0x8
  4093f4:	call   0x409390
  4093f9:	mov    rcx,QWORD PTR [rbx-0x8]
  4093fd:	test   rcx,rcx
  409400:	jne    0x4093f0
  409402:	mov    rcx,rsi
  409405:	add    rsp,0x28
  409409:	pop    rbx
  40940a:	pop    rsi
  40940b:	jmp    0x43a748
  409410:	add    rsp,0x28
  409414:	pop    rbx
  409415:	pop    rsi
  409416:	ret    
  409417:	nop    WORD PTR [rax+rax*1+0x0]
  409420:	push   rdi
  409421:	push   rsi
  409422:	push   rbx
  409423:	sub    rsp,0x20
  409427:	mov    rdi,rcx
  40942a:	mov    ecx,0x28
  40942f:	mov    rsi,rdx
  409432:	call   0x4227b0
  409437:	mov    rbx,rax
  40943a:	mov    QWORD PTR [rax],0x0
  409441:	xor    eax,eax
  409443:	test   rdi,rdi
  409446:	je     0x409450
  409448:	mov    rcx,rdi
  40944b:	call   0x422a00
  409450:	mov    QWORD PTR [rbx+0x8],rax
  409454:	xor    eax,eax
  409456:	test   rsi,rsi
  409459:	je     0x409463
  40945b:	mov    rcx,rsi
  40945e:	call   0x422a00
  409463:	mov    QWORD PTR [rbx+0x10],rax
  409467:	mov    rax,rbx
  40946a:	mov    DWORD PTR [rbx+0x18],0x0
  409471:	mov    DWORD PTR [rbx+0x1c],0x0
  409478:	mov    DWORD PTR [rbx+0x20],0x0
  40947f:	mov    DWORD PTR [rbx+0x24],0x0
  409486:	add    rsp,0x20
  40948a:	pop    rbx
  40948b:	pop    rsi
  40948c:	pop    rdi
  40948d:	ret    
  40948e:	xchg   ax,ax
  409490:	push   r13
  409492:	push   r12
  409494:	push   rbp
  409495:	push   rdi
  409496:	push   rsi
  409497:	push   rbx
  409498:	sub    rsp,0x28
  40949c:	test   rcx,rcx
  40949f:	je     0x4095b0
  4094a5:	mov    rsi,rcx
  4094a8:	call   0x43a620
  4094ad:	lea    ecx,[rax+0x1]
  4094b0:	movsxd rcx,ecx
  4094b3:	call   0x4227b0
  4094b8:	movzx  r8d,BYTE PTR [rsi]
  4094bc:	mov    r13,rax
  4094bf:	test   r8b,r8b
  4094c2:	je     0x409580
  4094c8:	xor    r9d,r9d
  4094cb:	xor    r12d,r12d
  4094ce:	xor    ebx,ebx
  4094d0:	xor    ebp,ebp
  4094d2:	jmp    0x409515
  4094d4:	lea    r10d,[r8-0x9]
  4094d8:	cmp    r10b,0x1
  4094dc:	jbe    0x40952d
  4094de:	test   r12d,r12d
  4094e1:	je     0x409560
  4094e3:	test   ebx,ebx
  4094e5:	je     0x409560
  4094e7:	test   ebp,ebp
  4094e9:	je     0x409570
  4094ef:	movsxd rax,ebp
  4094f2:	xor    ebx,ebx
  4094f4:	mov    BYTE PTR [r13+rax*1+0x0],0x20
  4094fa:	lea    eax,[rbp+0x1]
  4094fd:	add    ebp,0x2
  409500:	cdqe   
  409502:	add    r9,0x1
  409506:	mov    BYTE PTR [r13+rax*1+0x0],r8b
  40950b:	movzx  r8d,BYTE PTR [rsi+r9*1]
  409510:	test   r8b,r8b
  409513:	je     0x409541
  409515:	cmp    r8b,0xd
  409519:	mov    edi,r9d
  40951c:	sete   r11b
  409520:	cmp    r8b,0x20
  409524:	sete   r10b
  409528:	or     r11b,r10b
  40952b:	je     0x4094d4
  40952d:	add    r9,0x1
  409531:	add    ebx,0x1
  409534:	mov    r12d,edi
  409537:	movzx  r8d,BYTE PTR [rsi+r9*1]
  40953c:	test   r8b,r8b
  40953f:	jne    0x409515
  409541:	test   ebp,ebp
  409543:	je     0x409580
  409545:	movsxd rax,ebp
  409548:	movzx  edx,BYTE PTR [r13+rax*1-0x1]
  40954e:	cmp    dl,0x9
  409551:	je     0x409558
  409553:	cmp    dl,0x20
  409556:	jne    0x409582
  409558:	sub    ebp,0x1
  40955b:	movsxd rax,ebp
  40955e:	jmp    0x409582
  409560:	movsxd rax,ebp
  409563:	add    ebp,0x1
  409566:	jmp    0x409502
  409568:	nop    DWORD PTR [rax+rax*1+0x0]
  409570:	xor    eax,eax
  409572:	mov    ebp,0x1
  409577:	xor    ebx,ebx
  409579:	jmp    0x409502
  40957e:	xchg   ax,ax
  409580:	xor    eax,eax
  409582:	mov    rcx,rsi
  409585:	mov    rdx,r13
  409588:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  40958e:	call   0x43a640
  409593:	mov    rcx,r13
  409596:	add    rsp,0x28
  40959a:	pop    rbx
  40959b:	pop    rsi
  40959c:	pop    rdi
  40959d:	pop    rbp
  40959e:	pop    r12
  4095a0:	pop    r13
  4095a2:	jmp    0x43a748
  4095a7:	nop    WORD PTR [rax+rax*1+0x0]
  4095b0:	add    rsp,0x28
  4095b4:	pop    rbx
  4095b5:	pop    rsi
  4095b6:	pop    rdi
  4095b7:	pop    rbp
  4095b8:	pop    r12
  4095ba:	pop    r13
  4095bc:	ret    
  4095bd:	nop    DWORD PTR [rax]
  4095c0:	push   rbx
  4095c1:	sub    rsp,0x20
  4095c5:	mov    rbx,rcx
  4095c8:	mov    rcx,QWORD PTR [rip+0x47da9]        # 0x451378
  4095cf:	call   0x43a748
  4095d4:	mov    rcx,QWORD PTR [rip+0x47d95]        # 0x451370
  4095db:	call   0x43a748
  4095e0:	test   rbx,rbx
  4095e3:	mov    QWORD PTR [rip+0x47d8a],0x0        # 0x451378
  4095ee:	mov    QWORD PTR [rip+0x47d77],0x0        # 0x451370
  4095f9:	je     0x409600
  4095fb:	cmp    BYTE PTR [rbx],0x0
  4095fe:	jne    0x409610
  409600:	add    rsp,0x20
  409604:	pop    rbx
  409605:	ret    
  409606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409610:	mov    rcx,rbx
  409613:	call   0x412e20
  409618:	cdqe   
  40961a:	xor    ecx,ecx
  40961c:	add    rbx,rax
  40961f:	cmp    BYTE PTR [rbx],0x28
  409622:	je     0x409660
  409624:	add    rbx,rcx
  409627:	mov    rcx,rbx
  40962a:	call   0x412e20
  40962f:	cdqe   
  409631:	lea    r9,[rip+0x47d38]        # 0x451370
  409638:	lea    rdx,[rip+0x38213]        # 0x441852
  40963f:	lea    rcx,[rbx+rax*1]
  409643:	xor    r8d,r8d
  409646:	call   0x408ec0
  40964b:	test   eax,eax
  40964d:	je     0x409600
  40964f:	mov    rcx,QWORD PTR [rip+0x47d1a]        # 0x451370
  409656:	add    rsp,0x20
  40965a:	pop    rbx
  40965b:	jmp    0x409490
  409660:	lea    rdx,[rip+0x47d11]        # 0x451378
  409667:	mov    rcx,rbx
  40966a:	call   0x408dd0
  40966f:	movsxd rcx,eax
  409672:	jmp    0x409624
  409674:	xchg   ax,ax
  409676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409680:	push   rdi
  409681:	push   rsi
  409682:	push   rbx
  409683:	sub    rsp,0x20
  409687:	mov    rax,QWORD PTR [rip+0x404a2]        # 0x449b30
  40968e:	mov    eax,DWORD PTR [rax]
  409690:	test   eax,eax
  409692:	je     0x40969d
  409694:	mov    rax,QWORD PTR [rcx+0x18]
  409698:	cmp    BYTE PTR [rax],0x1b
  40969b:	je     0x4096b0
  40969d:	xor    eax,eax
  40969f:	add    rsp,0x20
  4096a3:	pop    rbx
  4096a4:	pop    rsi
  4096a5:	pop    rdi
  4096a6:	ret    
  4096a7:	nop    WORD PTR [rax+rax*1+0x0]
  4096b0:	mov    r8,QWORD PTR [rcx]
  4096b3:	cmp    rax,r8
  4096b6:	jae    0x40969d
  4096b8:	cmp    BYTE PTR [rcx+0x10],0x0
  4096bc:	mov    rsi,rdx
  4096bf:	mov    rbx,rcx
  4096c2:	jne    0x409787
  4096c8:	cmp    BYTE PTR [rcx+0x8],0x0
  4096cc:	lea    rdi,[rcx+0xc]
  4096d0:	jne    0x409720
  4096d2:	mov    rdx,QWORD PTR [rip+0x402e7]        # 0x4499c0
  4096d9:	mov    edx,DWORD PTR [rdx]
  4096db:	and    edx,0x8000000
  4096e1:	je     0x409701
  4096e3:	mov    QWORD PTR [rcx+0x20],0x1
  4096eb:	movsx  dx,BYTE PTR [rax]
  4096ef:	mov    BYTE PTR [rcx+0x28],0x1
  4096f3:	mov    WORD PTR [rcx+0x2a],dx
  4096f7:	mov    edx,0x1
  4096fc:	jmp    0x40978b
  409701:	lea    rdi,[rcx+0xc]
  409705:	mov    rcx,rdi
  409708:	call   0x424040
  40970d:	test   eax,eax
  40970f:	je     0x409a2d
  409715:	mov    r8,QWORD PTR [rbx]
  409718:	mov    rax,QWORD PTR [rbx+0x18]
  40971c:	mov    BYTE PTR [rbx+0x8],0x1
  409720:	lea    rcx,[rbx+0x2a]
  409724:	sub    r8,rax
  409727:	mov    r9,rdi
  40972a:	mov    rdx,rax
  40972d:	call   0x423f00
  409732:	cmp    rax,0xffffffffffffffff
  409736:	mov    QWORD PTR [rbx+0x20],rax
  40973a:	je     0x409971
  409740:	cmp    rax,0xfffffffffffffffe
  409744:	je     0x409998
  40974a:	test   rax,rax
  40974d:	jne    0x40976f
  40974f:	mov    rax,QWORD PTR [rbx+0x18]
  409753:	mov    QWORD PTR [rbx+0x20],0x1
  40975b:	cmp    BYTE PTR [rax],0x0
  40975e:	jne    0x409a76
  409764:	cmp    WORD PTR [rbx+0x2a],0x0
  409769:	jne    0x409a58
  40976f:	mov    BYTE PTR [rbx+0x28],0x1
  409773:	mov    rcx,rdi
  409776:	call   0x424040
  40977b:	test   eax,eax
  40977d:	je     0x409783
  40977f:	mov    BYTE PTR [rbx+0x8],0x0
  409783:	mov    rax,QWORD PTR [rbx+0x18]
  409787:	mov    rdx,QWORD PTR [rbx+0x20]
  40978b:	add    rax,rdx
  40978e:	mov    BYTE PTR [rbx+0x10],0x0
  409792:	mov    QWORD PTR [rbx+0x18],rax
  409796:	cmp    BYTE PTR [rax],0x5b
  409799:	jne    0x40969d
  40979f:	mov    r8,QWORD PTR [rbx]
  4097a2:	cmp    rax,r8
  4097a5:	jae    0x40969d
  4097ab:	cmp    BYTE PTR [rbx+0x8],0x0
  4097af:	lea    rdi,[rbx+0xc]
  4097b3:	jne    0x40990f
  4097b9:	mov    rdx,QWORD PTR [rip+0x40200]        # 0x4499c0
  4097c0:	test   BYTE PTR [rdx+0xb],0x8
  4097c4:	je     0x4098f0
  4097ca:	mov    QWORD PTR [rbx+0x20],0x1
  4097d2:	movsx  dx,BYTE PTR [rax]
  4097d6:	mov    BYTE PTR [rbx+0x28],0x1
  4097da:	mov    WORD PTR [rbx+0x2a],dx
  4097de:	lea    rdx,[rax+0x1]
  4097e2:	mov    QWORD PTR [rbx+0x20],0x1
  4097ea:	mov    BYTE PTR [rbx+0x10],0x0
  4097ee:	mov    QWORD PTR [rbx+0x18],rdx
  4097f2:	movsx  eax,BYTE PTR [rax+0x1]
  4097f6:	mov    ecx,eax
  4097f8:	sub    eax,0x30
  4097fb:	cmp    eax,0x9
  4097fe:	ja     0x40969d
  409804:	mov    r8,QWORD PTR [rbx]
  409807:	cmp    rdx,r8
  40980a:	jae    0x40969d
  409810:	cmp    BYTE PTR [rbx+0x8],0x0
  409814:	lea    rdi,[rbx+0xc]
  409818:	jne    0x4099ce
  40981e:	mov    eax,ecx
  409820:	mov    r9,QWORD PTR [rip+0x40199]        # 0x4499c0
  409827:	mov    r8d,ecx
  40982a:	shr    al,0x5
  40982d:	and    r8d,0x1f
  409831:	and    eax,0x7
  409834:	mov    eax,DWORD PTR [r9+rax*4]
  409838:	bt     eax,r8d
  40983c:	jae    0x4099af
  409842:	mov    WORD PTR [rbx+0x2a],cx
  409846:	mov    BYTE PTR [rbx+0x28],0x1
  40984a:	lea    rax,[rdx+0x1]
  40984e:	mov    QWORD PTR [rbx+0x20],0x1
  409856:	mov    BYTE PTR [rbx+0x10],0x0
  40985a:	mov    QWORD PTR [rbx+0x18],rax
  40985e:	movsx  dx,BYTE PTR [rdx+0x1]
  409863:	cmp    dl,0x6d
  409866:	je     0x409a94
  40986c:	movsx  ecx,dl
  40986f:	sub    ecx,0x30
  409872:	cmp    ecx,0x9
  409875:	ja     0x40969d
  40987b:	mov    r8,QWORD PTR [rbx]
  40987e:	cmp    rax,r8
  409881:	jae    0x40969d
  409887:	cmp    BYTE PTR [rbx+0x8],0x0
  40988b:	lea    rdi,[rbx+0xc]
  40988f:	jne    0x409ae2
  409895:	mov    ecx,edx
  409897:	mov    r9,QWORD PTR [rip+0x40122]        # 0x4499c0
  40989e:	mov    r8d,edx
  4098a1:	shr    cl,0x5
  4098a4:	and    r8d,0x1f
  4098a8:	and    ecx,0x7
  4098ab:	mov    ecx,DWORD PTR [r9+rcx*4]
  4098af:	bt     ecx,r8d
  4098b3:	jae    0x409ac3
  4098b9:	mov    WORD PTR [rbx+0x2a],dx
  4098bd:	mov    BYTE PTR [rbx+0x28],0x1
  4098c1:	lea    rdx,[rax+0x1]
  4098c5:	mov    QWORD PTR [rbx+0x20],0x1
  4098cd:	mov    BYTE PTR [rbx+0x10],0x0
  4098d1:	mov    QWORD PTR [rbx+0x18],rdx
  4098d5:	cmp    BYTE PTR [rax+0x1],0x6d
  4098d9:	jne    0x40969d
  4098df:	mov    QWORD PTR [rsi],0x5
  4098e6:	mov    eax,0x1
  4098eb:	jmp    0x40969f
  4098f0:	lea    rdi,[rbx+0xc]
  4098f4:	mov    rcx,rdi
  4098f7:	call   0x424040
  4098fc:	test   eax,eax
  4098fe:	je     0x409aa5
  409904:	mov    r8,QWORD PTR [rbx]
  409907:	mov    rax,QWORD PTR [rbx+0x18]
  40990b:	mov    BYTE PTR [rbx+0x8],0x1
  40990f:	lea    rcx,[rbx+0x2a]
  409913:	sub    r8,rax
  409916:	mov    rdx,rax
  409919:	mov    r9,rdi
  40991c:	call   0x423f00
  409921:	lea    rdx,[rax+0x2]
  409925:	mov    QWORD PTR [rbx+0x20],rax
  409929:	cmp    rdx,0x1
  40992d:	jbe    0x40998b
  40992f:	test   rax,rax
  409932:	jne    0x409954
  409934:	mov    rax,QWORD PTR [rbx+0x18]
  409938:	mov    QWORD PTR [rbx+0x20],0x1
  409940:	cmp    BYTE PTR [rax],0x0
  409943:	jne    0x409b62
  409949:	cmp    WORD PTR [rbx+0x2a],0x0
  40994e:	jne    0x409b44
  409954:	mov    BYTE PTR [rbx+0x28],0x1
  409958:	mov    rcx,rdi
  40995b:	call   0x424040
  409960:	test   eax,eax
  409962:	je     0x409968
  409964:	mov    BYTE PTR [rbx+0x8],0x0
  409968:	mov    rax,QWORD PTR [rbx+0x18]
  40996c:	jmp    0x4097de
  409971:	mov    QWORD PTR [rbx+0x20],0x1
  409979:	mov    BYTE PTR [rbx+0x28],0x0
  40997d:	mov    edx,0x1
  409982:	mov    rax,QWORD PTR [rbx+0x18]
  409986:	jmp    0x40978b
  40998b:	mov    BYTE PTR [rbx+0x28],0x0
  40998f:	mov    rax,QWORD PTR [rbx+0x18]
  409993:	jmp    0x4097de
  409998:	mov    rax,QWORD PTR [rbx+0x18]
  40999c:	mov    rdx,QWORD PTR [rbx]
  40999f:	mov    BYTE PTR [rbx+0x28],0x0
  4099a3:	sub    rdx,rax
  4099a6:	mov    QWORD PTR [rbx+0x20],rdx
  4099aa:	jmp    0x40978b
  4099af:	lea    rdi,[rbx+0xc]
  4099b3:	mov    rcx,rdi
  4099b6:	call   0x424040
  4099bb:	test   eax,eax
  4099bd:	je     0x409b8d
  4099c3:	mov    r8,QWORD PTR [rbx]
  4099c6:	mov    rdx,QWORD PTR [rbx+0x18]
  4099ca:	mov    BYTE PTR [rbx+0x8],0x1
  4099ce:	lea    rcx,[rbx+0x2a]
  4099d2:	sub    r8,rdx
  4099d5:	mov    r9,rdi
  4099d8:	call   0x423f00
  4099dd:	lea    rdx,[rax+0x2]
  4099e1:	mov    QWORD PTR [rbx+0x20],rax
  4099e5:	cmp    rdx,0x1
  4099e9:	jbe    0x409a4b
  4099eb:	test   rax,rax
  4099ee:	jne    0x409a10
  4099f0:	mov    rax,QWORD PTR [rbx+0x18]
  4099f4:	mov    QWORD PTR [rbx+0x20],0x1
  4099fc:	cmp    BYTE PTR [rax],0x0
  4099ff:	jne    0x409bc9
  409a05:	cmp    WORD PTR [rbx+0x2a],0x0
  409a0a:	jne    0x409bab
  409a10:	mov    BYTE PTR [rbx+0x28],0x1
  409a14:	mov    rcx,rdi
  409a17:	call   0x424040
  409a1c:	test   eax,eax
  409a1e:	je     0x409a24
  409a20:	mov    BYTE PTR [rbx+0x8],0x0
  409a24:	mov    rdx,QWORD PTR [rbx+0x18]
  409a28:	jmp    0x40984a
  409a2d:	lea    rdx,[rip+0x37e24]        # 0x441858
  409a34:	lea    rcx,[rip+0x37e6e]        # 0x4418a9
  409a3b:	mov    r8d,0x8e
  409a41:	call   0x435a10
  409a46:	jmp    0x409715
  409a4b:	mov    BYTE PTR [rbx+0x28],0x0
  409a4f:	mov    rdx,QWORD PTR [rbx+0x18]
  409a53:	jmp    0x40984a
  409a58:	lea    rdx,[rip+0x37df9]        # 0x441858
  409a5f:	lea    rcx,[rip+0x37e71]        # 0x4418d7
  409a66:	mov    r8d,0xaa
  409a6c:	call   0x435a10
  409a71:	jmp    0x40976f
  409a76:	lea    rdx,[rip+0x37ddb]        # 0x441858
  409a7d:	lea    rcx,[rip+0x37e3c]        # 0x4418c0
  409a84:	mov    r8d,0xa9
  409a8a:	call   0x435a10
  409a8f:	jmp    0x409764
  409a94:	mov    QWORD PTR [rsi],0x4
  409a9b:	mov    eax,0x1
  409aa0:	jmp    0x40969f
  409aa5:	lea    rdx,[rip+0x37dac]        # 0x441858
  409aac:	lea    rcx,[rip+0x37df6]        # 0x4418a9
  409ab3:	mov    r8d,0x8e
  409ab9:	call   0x435a10
  409abe:	jmp    0x409904
  409ac3:	lea    rdi,[rbx+0xc]
  409ac7:	mov    rcx,rdi
  409aca:	call   0x424040
  409acf:	test   eax,eax
  409ad1:	je     0x409be7
  409ad7:	mov    r8,QWORD PTR [rbx]
  409ada:	mov    rax,QWORD PTR [rbx+0x18]
  409ade:	mov    BYTE PTR [rbx+0x8],0x1
  409ae2:	lea    rcx,[rbx+0x2a]
  409ae6:	sub    r8,rax
  409ae9:	mov    rdx,rax
  409aec:	mov    r9,rdi
  409aef:	call   0x423f00
  409af4:	lea    rdx,[rax+0x2]
  409af8:	mov    QWORD PTR [rbx+0x20],rax
  409afc:	cmp    rdx,0x1
  409b00:	jbe    0x409b80
  409b02:	test   rax,rax
  409b05:	jne    0x409b27
  409b07:	mov    rax,QWORD PTR [rbx+0x18]
  409b0b:	mov    QWORD PTR [rbx+0x20],0x1
  409b13:	cmp    BYTE PTR [rax],0x0
  409b16:	jne    0x409c23
  409b1c:	cmp    WORD PTR [rbx+0x2a],0x0
  409b21:	jne    0x409c05
  409b27:	mov    BYTE PTR [rbx+0x28],0x1
  409b2b:	mov    rcx,rdi
  409b2e:	call   0x424040
  409b33:	test   eax,eax
  409b35:	je     0x409b3b
  409b37:	mov    BYTE PTR [rbx+0x8],0x0
  409b3b:	mov    rax,QWORD PTR [rbx+0x18]
  409b3f:	jmp    0x4098c1
  409b44:	lea    rdx,[rip+0x37d0d]        # 0x441858
  409b4b:	lea    rcx,[rip+0x37d85]        # 0x4418d7
  409b52:	mov    r8d,0xaa
  409b58:	call   0x435a10
  409b5d:	jmp    0x409954
  409b62:	lea    rdx,[rip+0x37cef]        # 0x441858
  409b69:	lea    rcx,[rip+0x37d50]        # 0x4418c0
  409b70:	mov    r8d,0xa9
  409b76:	call   0x435a10
  409b7b:	jmp    0x409949
  409b80:	mov    BYTE PTR [rbx+0x28],0x0
  409b84:	mov    rax,QWORD PTR [rbx+0x18]
  409b88:	jmp    0x4098c1
  409b8d:	lea    rdx,[rip+0x37cc4]        # 0x441858
  409b94:	lea    rcx,[rip+0x37d0e]        # 0x4418a9
  409b9b:	mov    r8d,0x8e
  409ba1:	call   0x435a10
  409ba6:	jmp    0x4099c3
  409bab:	lea    rdx,[rip+0x37ca6]        # 0x441858
  409bb2:	lea    rcx,[rip+0x37d1e]        # 0x4418d7
  409bb9:	mov    r8d,0xaa
  409bbf:	call   0x435a10
  409bc4:	jmp    0x409a10
  409bc9:	lea    rdx,[rip+0x37c88]        # 0x441858
  409bd0:	lea    rcx,[rip+0x37ce9]        # 0x4418c0
  409bd7:	mov    r8d,0xa9
  409bdd:	call   0x435a10
  409be2:	jmp    0x409a05
  409be7:	lea    rdx,[rip+0x37c6a]        # 0x441858
  409bee:	lea    rcx,[rip+0x37cb4]        # 0x4418a9
  409bf5:	mov    r8d,0x8e
  409bfb:	call   0x435a10
  409c00:	jmp    0x409ad7
  409c05:	lea    rdx,[rip+0x37c4c]        # 0x441858
  409c0c:	lea    rcx,[rip+0x37cc4]        # 0x4418d7
  409c13:	mov    r8d,0xaa
  409c19:	call   0x435a10
  409c1e:	jmp    0x409b27
  409c23:	lea    rdx,[rip+0x37c2e]        # 0x441858
  409c2a:	lea    rcx,[rip+0x37c8f]        # 0x4418c0
  409c31:	mov    r8d,0xa9
  409c37:	call   0x435a10
  409c3c:	jmp    0x409b1c
  409c41:	nop    DWORD PTR [rax+rax*1+0x0]
  409c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c50:	push   rdi
  409c51:	push   rsi
  409c52:	push   rbx
  409c53:	sub    rsp,0x20
  409c57:	mov    DWORD PTR [rip+0x47753],0x0        # 0x4513b4
  409c61:	test   rcx,rcx
  409c64:	je     0x409c9b
  409c66:	cmp    QWORD PTR [rcx+0x70],0x0
  409c6b:	mov    DWORD PTR [rip+0x4773b],0x0        # 0x4513b0
  409c75:	je     0x409c9b
  409c77:	mov    rbx,rcx
  409c7a:	mov    ecx,0x2710
  409c7f:	call   0x41e120
  409c84:	mov    rdx,QWORD PTR [rbx+0x70]
  409c88:	mov    rdi,rax
  409c8b:	mov    rcx,rax
  409c8e:	mov    rsi,QWORD PTR [rip+0x4ad1b]        # 0x4549b0
  409c95:	call   rsi
  409c97:	test   eax,eax
  409c99:	jne    0x409ca3
  409c9b:	add    rsp,0x20
  409c9f:	pop    rbx
  409ca0:	pop    rsi
  409ca1:	pop    rdi
  409ca2:	ret    
  409ca3:	mov    rdx,QWORD PTR [rbx+0x70]
  409ca7:	mov    rcx,rdi
  409caa:	call   0x433f40
  409caf:	cmp    rax,0xffffffffffffffff
  409cb3:	mov    QWORD PTR [rip+0x476ee],rax        # 0x4513a8
  409cba:	je     0x409c9b
  409cbc:	mov    rdx,QWORD PTR [rbx+0x70]
  409cc0:	lea    rcx,[rip+0x37c22]        # 0x4418e9
  409cc7:	call   rsi
  409cc9:	test   eax,eax
  409ccb:	jne    0x409cf3
  409ccd:	mov    DWORD PTR [rip+0x476d9],0x1        # 0x4513b0
  409cd7:	mov    DWORD PTR [rip+0x476d3],0x1        # 0x4513b4
  409ce1:	mov    DWORD PTR [rip+0x476f5],0x1        # 0x4513e0
  409ceb:	add    rsp,0x20
  409cef:	pop    rbx
  409cf0:	pop    rsi
  409cf1:	pop    rdi
  409cf2:	ret    
  409cf3:	mov    rdx,QWORD PTR [rbx+0x70]
  409cf7:	lea    rcx,[rip+0x37bf0]        # 0x4418ee
  409cfe:	call   rsi
  409d00:	test   eax,eax
  409d02:	je     0x409ccd
  409d04:	mov    eax,DWORD PTR [rip+0x476a6]        # 0x4513b0
  409d0a:	test   eax,eax
  409d0c:	jne    0x409cd7
  409d0e:	mov    rdx,QWORD PTR [rbx+0x70]
  409d12:	lea    rcx,[rip+0x37bd5]        # 0x4418ee
  409d19:	call   0x433f40
  409d1e:	cmp    rax,0xffffffffffffffff
  409d22:	mov    QWORD PTR [rip+0x47677],rax        # 0x4513a0
  409d29:	jne    0x409cd7
  409d2b:	mov    rcx,QWORD PTR [rip+0x47676]        # 0x4513a8
  409d32:	add    rsp,0x20
  409d36:	pop    rbx
  409d37:	pop    rsi
  409d38:	pop    rdi
  409d39:	jmp    0x433f48
  409d3e:	xchg   ax,ax
  409d40:	sub    rsp,0x28
  409d44:	call   0x409c50
  409d49:	mov    eax,DWORD PTR [rip+0x47691]        # 0x4513e0
  409d4f:	mov    DWORD PTR [rip+0x4765f],0x0        # 0x4513b8
  409d59:	test   eax,eax
  409d5b:	je     0x409d7e
  409d5d:	mov    QWORD PTR [rip+0x49a98],0x0        # 0x453800
  409d68:	mov    QWORD PTR [rip+0x49a95],0x0        # 0x453808
  409d73:	mov    QWORD PTR [rip+0x49a92],0x0        # 0x453810
  409d7e:	add    rsp,0x28
  409d82:	ret    
  409d83:	nop    DWORD PTR [rax]
  409d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d90:	sub    rsp,0x28
  409d94:	mov    edx,DWORD PTR [rip+0x4761a]        # 0x4513b4
  409d9a:	test   edx,edx
  409d9c:	jne    0x409da3
  409d9e:	add    rsp,0x28
  409da2:	ret    
  409da3:	mov    rcx,QWORD PTR [rip+0x475fe]        # 0x4513a8
  409daa:	call   0x433f48
  409daf:	mov    eax,DWORD PTR [rip+0x475fb]        # 0x4513b0
  409db5:	test   eax,eax
  409db7:	jne    0x409d9e
  409db9:	mov    rcx,QWORD PTR [rip+0x475e0]        # 0x4513a0
  409dc0:	add    rsp,0x28
  409dc4:	jmp    0x433f48
  409dc9:	nop    DWORD PTR [rax+0x0]
  409dd0:	mov    rax,QWORD PTR [rip+0x49a39]        # 0x453810
  409dd7:	mov    QWORD PTR [rip+0x475ba],rax        # 0x451398
  409dde:	mov    rax,QWORD PTR [rip+0x475f3]        # 0x4513d8
  409de5:	mov    QWORD PTR [rip+0x475a4],rax        # 0x451390
  409dec:	mov    eax,DWORD PTR [rip+0x475c6]        # 0x4513b8
  409df2:	mov    DWORD PTR [rip+0x47590],eax        # 0x451388
  409df8:	ret    
  409df9:	nop    DWORD PTR [rax+0x0]
  409e00:	mov    rax,QWORD PTR [rip+0x47591]        # 0x451398
  409e07:	mov    QWORD PTR [rip+0x49a02],rax        # 0x453810
  409e0e:	mov    rax,QWORD PTR [rip+0x4757b]        # 0x451390
  409e15:	mov    QWORD PTR [rip+0x475bc],rax        # 0x4513d8
  409e1c:	mov    eax,DWORD PTR [rip+0x47566]        # 0x451388
  409e22:	mov    DWORD PTR [rip+0x47590],eax        # 0x4513b8
  409e28:	ret    
  409e29:	nop    DWORD PTR [rax+0x0]
  409e30:	mov    rax,QWORD PTR [rcx+0x20]
  409e34:	test   rax,rax
  409e37:	je     0x409e50
  409e39:	mov    rcx,QWORD PTR [rax]
  409e3c:	test   rcx,rcx
  409e3f:	je     0x409e50
  409e41:	jmp    0x4117b0
  409e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e50:	xor    eax,eax
  409e52:	ret    
  409e53:	nop    DWORD PTR [rax]
  409e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e60:	push   rbx
  409e61:	sub    rsp,0x20
  409e65:	mov    rbx,rcx
  409e68:	call   0x43a620
  409e6d:	cmp    BYTE PTR [rbx],0x0
  409e70:	lea    rdx,[rbx+rax*1]
  409e74:	je     0x409e82
  409e76:	cmp    BYTE PTR [rbx+0x1],0x3a
  409e7a:	lea    rax,[rbx+0x2]
  409e7e:	cmove  rbx,rax
  409e82:	cmp    rdx,rbx
  409e85:	jbe    0x409ec0
  409e87:	movzx  eax,BYTE PTR [rdx-0x1]
  409e8b:	cmp    al,0x5c
  409e8d:	je     0x409ec0
  409e8f:	cmp    al,0x2f
  409e91:	jne    0x409ea6
  409e93:	jmp    0x409ec0
  409e95:	movzx  r8d,BYTE PTR [rdx-0x1]
  409e9a:	cmp    r8b,0x5c
  409e9e:	je     0x409ec0
  409ea0:	cmp    r8b,0x2f
  409ea4:	je     0x409ec0
  409ea6:	sub    rdx,0x1
  409eaa:	cmp    rdx,rbx
  409ead:	jne    0x409e95
  409eaf:	mov    rax,rbx
  409eb2:	add    rsp,0x20
  409eb6:	pop    rbx
  409eb7:	ret    
  409eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ec0:	mov    rbx,rdx
  409ec3:	mov    rax,rbx
  409ec6:	add    rsp,0x20
  409eca:	pop    rbx
  409ecb:	ret    
  409ecc:	nop    DWORD PTR [rax+0x0]
  409ed0:	push   rdi
  409ed1:	push   rsi
  409ed2:	push   rbx
  409ed3:	sub    rsp,0x20
  409ed7:	mov    rax,QWORD PTR [rcx]
  409eda:	test   rax,rax
  409edd:	je     0x409f40
  409edf:	mov    rbx,rcx
  409ee2:	mov    rcx,rax
  409ee5:	call   0x409e60
  409eea:	mov    rcx,rax
  409eed:	mov    rsi,rax
  409ef0:	call   0x43a620
  409ef5:	mov    rcx,QWORD PTR [rbx+0x10]
  409ef9:	mov    rdi,rax
  409efc:	call   0x43a620
  409f01:	mov    rcx,QWORD PTR [rip+0x47478]        # 0x451380
  409f08:	lea    rdx,[rdi+rax*1+0x3]
  409f0d:	call   0x422820
  409f12:	mov    r9,QWORD PTR [rbx+0x10]
  409f16:	lea    rdx,[rip+0x379d7]        # 0x4418f4
  409f1d:	mov    rcx,rax
  409f20:	mov    r8,rsi
  409f23:	mov    QWORD PTR [rip+0x47456],rax        # 0x451380
  409f2a:	call   0x433f00
  409f2f:	mov    rax,QWORD PTR [rip+0x4744a]        # 0x451380
  409f36:	add    rsp,0x20
  409f3a:	pop    rbx
  409f3b:	pop    rsi
  409f3c:	pop    rdi
  409f3d:	ret    
  409f3e:	xchg   ax,ax
  409f40:	mov    rax,QWORD PTR [rcx+0x10]
  409f44:	add    rsp,0x20
  409f48:	pop    rbx
  409f49:	pop    rsi
  409f4a:	pop    rdi
  409f4b:	ret    
  409f4c:	nop    DWORD PTR [rax+0x0]
  409f50:	test   rcx,rcx
  409f53:	je     0x409f60
  409f55:	mov    eax,DWORD PTR [rcx+0x2c]
  409f58:	shr    eax,0x4
  409f5b:	and    eax,0x1
  409f5e:	ret    
  409f5f:	nop
  409f60:	xor    eax,eax
  409f62:	ret    
  409f63:	nop    DWORD PTR [rax]
  409f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f70:	test   rcx,rcx
  409f73:	je     0x409f8f
  409f75:	or     DWORD PTR [rcx+0x2c],0x10
  409f79:	lea    rax,[rip+0x378d2]        # 0x441852
  409f80:	mov    QWORD PTR [rcx+0x8],0x0
  409f88:	mov    QWORD PTR [rcx+0x10],rdx
  409f8c:	mov    QWORD PTR [rcx],rax
  409f8f:	repz ret 
  409f91:	nop    DWORD PTR [rax+rax*1+0x0]
  409f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fa0:	push   rsi
  409fa1:	push   rbx
  409fa2:	sub    rsp,0x28
  409fa6:	mov    rax,QWORD PTR [rip+0x3fc63]        # 0x449c10
  409fad:	mov    rsi,rcx
  409fb0:	mov    rbx,QWORD PTR [rax]
  409fb3:	test   rbx,rbx
  409fb6:	je     0x409fe7
  409fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409fc0:	mov    rax,QWORD PTR [rbx+0x20]
  409fc4:	test   rax,rax
  409fc7:	je     0x409fdf
  409fc9:	test   BYTE PTR [rax+0x2c],0x10
  409fcd:	je     0x409fdf
  409fcf:	mov    rcx,QWORD PTR [rax+0x10]
  409fd3:	mov    rdx,rsi
  409fd6:	call   0x43a648
  409fdb:	test   eax,eax
  409fdd:	je     0x409fe7
  409fdf:	mov    rbx,QWORD PTR [rbx]
  409fe2:	test   rbx,rbx
  409fe5:	jne    0x409fc0
  409fe7:	mov    rax,rbx
  409fea:	add    rsp,0x28
  409fee:	pop    rbx
  409fef:	pop    rsi
  409ff0:	ret    
  409ff1:	nop    DWORD PTR [rax+rax*1+0x0]
  409ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a000:	mov    QWORD PTR [rcx],0x0
  40a007:	mov    QWORD PTR [rcx+0x8],0x0
  40a00f:	mov    QWORD PTR [rcx+0x10],0x0
  40a017:	ret    
  40a018:	nop    DWORD PTR [rax+rax*1+0x0]
  40a020:	mov    rcx,QWORD PTR [rcx]
  40a023:	jmp    0x43a748
  40a028:	nop    DWORD PTR [rax+rax*1+0x0]
  40a030:	push   r13
  40a032:	push   r12
  40a034:	push   rbp
  40a035:	push   rdi
  40a036:	push   rsi
  40a037:	push   rbx
  40a038:	sub    rsp,0x28
  40a03c:	cmp    QWORD PTR [rcx],0x0
  40a040:	mov    rbx,rcx
  40a043:	mov    rbp,rdx
  40a046:	mov    r12,r8
  40a049:	jne    0x40a095
  40a04b:	jmp    0x40a0d4
  40a050:	mov    rdx,QWORD PTR [rbx+0x10]
  40a054:	movsxd rsi,eax
  40a057:	mov    rdi,QWORD PTR [rbx+0x8]
  40a05b:	lea    r13,[rsi+rdx*1]
  40a05f:	cmp    r13,rdi
  40a062:	jae    0x40a07d
  40a064:	mov    rcx,rdx
  40a067:	add    rcx,QWORD PTR [rbx]
  40a06a:	lea    r8,[rdi+0x1]
  40a06e:	sub    r8,rdx
  40a071:	xor    edx,edx
  40a073:	call   0x424060
  40a078:	test   rax,rax
  40a07b:	jne    0x40a0c0
  40a07d:	lea    rdx,[rdi+rdi*1]
  40a081:	cmp    rdx,rdi
  40a084:	jb     0x40a0f3
  40a086:	mov    rcx,QWORD PTR [rbx]
  40a089:	mov    QWORD PTR [rbx+0x8],rdx
  40a08d:	call   0x422820
  40a092:	mov    QWORD PTR [rbx],rax
  40a095:	mov    rcx,QWORD PTR [rbx+0x10]
  40a099:	mov    rdx,QWORD PTR [rbx+0x8]
  40a09d:	mov    r9,r12
  40a0a0:	mov    r8,rbp
  40a0a3:	sub    rdx,rcx
  40a0a6:	add    rcx,QWORD PTR [rbx]
  40a0a9:	call   0x433ee8
  40a0ae:	test   eax,eax
  40a0b0:	jns    0x40a050
  40a0b2:	mov    rdi,QWORD PTR [rbx+0x8]
  40a0b6:	jmp    0x40a07d
  40a0b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0c0:	mov    rax,rsi
  40a0c3:	mov    QWORD PTR [rbx+0x10],r13
  40a0c7:	add    rsp,0x28
  40a0cb:	pop    rbx
  40a0cc:	pop    rsi
  40a0cd:	pop    rdi
  40a0ce:	pop    rbp
  40a0cf:	pop    r12
  40a0d1:	pop    r13
  40a0d3:	ret    
  40a0d4:	mov    rcx,QWORD PTR [rcx+0x8]
  40a0d8:	test   rcx,rcx
  40a0db:	jne    0x40a0e9
  40a0dd:	mov    QWORD PTR [rbx+0x8],0x200
  40a0e5:	mov    cx,0x200
  40a0e9:	call   0x4227b0
  40a0ee:	mov    QWORD PTR [rbx],rax
  40a0f1:	jmp    0x40a095
  40a0f3:	call   0x422a20
  40a0f8:	nop
  40a0f9:	nop    DWORD PTR [rax+0x0]
  40a100:	push   rbx
  40a101:	sub    rsp,0x20
  40a105:	add    rdx,QWORD PTR [rcx+0x10]
  40a109:	cmp    rdx,QWORD PTR [rcx+0x8]
  40a10d:	jbe    0x40a12a
  40a10f:	cmp    rdx,0x1ff
  40a116:	jbe    0x40a130
  40a118:	mov    QWORD PTR [rcx+0x8],rdx
  40a11c:	mov    rbx,rcx
  40a11f:	mov    rcx,QWORD PTR [rcx]
  40a122:	call   0x422820
  40a127:	mov    QWORD PTR [rbx],rax
  40a12a:	add    rsp,0x20
  40a12e:	pop    rbx
  40a12f:	ret    
  40a130:	mov    QWORD PTR [rcx+0x8],0x200
  40a138:	mov    edx,0x200
  40a13d:	jmp    0x40a11c
  40a13f:	nop
  40a140:	mov    rax,QWORD PTR [rcx+0x8]
  40a144:	sub    rax,QWORD PTR [rcx+0x10]
  40a148:	ret    
  40a149:	nop    DWORD PTR [rax+0x0]
  40a150:	push   rbx
  40a151:	sub    rsp,0x40
  40a155:	mov    rbx,rcx
  40a158:	mov    rcx,rdx
  40a15b:	mov    rdx,r8
  40a15e:	mov    rax,QWORD PTR [rbx+0x10]
  40a162:	mov    r8,r9
  40a165:	mov    r10,QWORD PTR [rbx+0x8]
  40a169:	mov    r9,rax
  40a16c:	add    r9,QWORD PTR [rbx]
  40a16f:	sub    r10,rax
  40a172:	lea    rax,[rsp+0x30]
  40a177:	mov    QWORD PTR [rsp+0x30],r10
  40a17c:	mov    QWORD PTR [rsp+0x20],rax
  40a181:	mov    QWORD PTR [rsp+0x38],r9
  40a186:	lea    r9,[rsp+0x38]
  40a18b:	call   0x433f50
  40a190:	mov    rdx,QWORD PTR [rsp+0x38]
  40a195:	sub    rdx,QWORD PTR [rbx]
  40a198:	mov    QWORD PTR [rbx+0x10],rdx
  40a19c:	add    rsp,0x40
  40a1a0:	pop    rbx
  40a1a1:	ret    
  40a1a2:	nop    DWORD PTR [rax+0x0]
  40a1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1b0:	push   rdi
  40a1b1:	push   rsi
  40a1b2:	push   rbx
  40a1b3:	sub    rsp,0x20
  40a1b7:	mov    rbx,rcx
  40a1ba:	mov    rdi,rdx
  40a1bd:	mov    rdx,r8
  40a1c0:	mov    rsi,r8
  40a1c3:	call   0x40a100
  40a1c8:	mov    rcx,QWORD PTR [rbx+0x10]
  40a1cc:	add    rcx,QWORD PTR [rbx]
  40a1cf:	mov    r8,rsi
  40a1d2:	mov    rdx,rdi
  40a1d5:	call   0x43a6b8
  40a1da:	add    QWORD PTR [rbx+0x10],rsi
  40a1de:	mov    rax,rsi
  40a1e1:	add    rsp,0x20
  40a1e5:	pop    rbx
  40a1e6:	pop    rsi
  40a1e7:	pop    rdi
  40a1e8:	ret    
  40a1e9:	nop    DWORD PTR [rax+0x0]
  40a1f0:	push   rbx
  40a1f1:	sub    rsp,0x20
  40a1f5:	movsxd r8,edx
  40a1f8:	mov    rdx,rcx
  40a1fb:	lea    rcx,[rip+0x495fe]        # 0x453800
  40a202:	mov    rbx,r8
  40a205:	call   0x40a1b0
  40a20a:	sub    DWORD PTR [rip+0x471a8],ebx        # 0x4513b8
  40a210:	add    rsp,0x20
  40a214:	pop    rbx
  40a215:	ret    
  40a216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a220:	push   rbx
  40a221:	sub    rsp,0x20
  40a225:	mov    rdx,QWORD PTR [rip+0x471ac]        # 0x4513d8
  40a22c:	movsxd rbx,ecx
  40a22f:	lea    rcx,[rip+0x495ca]        # 0x453800
  40a236:	mov    r8,rbx
  40a239:	call   0x40a1b0
  40a23e:	add    QWORD PTR [rip+0x47193],rbx        # 0x4513d8
  40a245:	add    rsp,0x20
  40a249:	pop    rbx
  40a24a:	ret    
  40a24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a250:	push   r13
  40a252:	push   r12
  40a254:	push   rbp
  40a255:	push   rdi
  40a256:	push   rsi
  40a257:	push   rbx
  40a258:	sub    rsp,0x28
  40a25c:	mov    rsi,QWORD PTR [rip+0x32e9d]        # 0x43d100
  40a263:	mov    r12,rcx
  40a266:	mov    r13,rdx
  40a269:	test   rsi,rsi
  40a26c:	je     0x40a2af
  40a26e:	mov    rbp,QWORD PTR [rdx]
  40a271:	lea    rdi,[rip+0x32e88]        # 0x43d100
  40a278:	nop    DWORD PTR [rax+rax*1+0x0]
  40a280:	mov    rcx,rsi
  40a283:	call   0x43a620
  40a288:	movsxd rbx,eax
  40a28b:	cmp    rbx,rbp
  40a28e:	ja     0x40a2a3
  40a290:	mov    rdx,QWORD PTR [r12]
  40a294:	mov    r8,rbx
  40a297:	mov    rcx,rsi
  40a29a:	call   0x43a618
  40a29f:	test   eax,eax
  40a2a1:	je     0x40a2e1
  40a2a3:	add    rdi,0x10
  40a2a7:	mov    rsi,QWORD PTR [rdi]
  40a2aa:	test   rsi,rsi
  40a2ad:	jne    0x40a280
  40a2af:	lea    rdx,[rip+0x37645]        # 0x4418fb
  40a2b6:	lea    rcx,[rip+0x49543]        # 0x453800
  40a2bd:	mov    r8d,0x1
  40a2c3:	call   0x40a1b0
  40a2c8:	add    QWORD PTR [r12],0x1
  40a2cd:	sub    QWORD PTR [r13+0x0],0x1
  40a2d2:	xor    eax,eax
  40a2d4:	add    rsp,0x28
  40a2d8:	pop    rbx
  40a2d9:	pop    rsi
  40a2da:	pop    rdi
  40a2db:	pop    rbp
  40a2dc:	pop    r12
  40a2de:	pop    r13
  40a2e0:	ret    
  40a2e1:	mov    rsi,QWORD PTR [rdi+0x8]
  40a2e5:	mov    rcx,rsi
  40a2e8:	call   0x43a620
  40a2ed:	lea    rcx,[rip+0x4950c]        # 0x453800
  40a2f4:	mov    r8,rax
  40a2f7:	mov    rdx,rsi
  40a2fa:	call   0x40a1b0
  40a2ff:	add    QWORD PTR [r12],rbx
  40a303:	sub    QWORD PTR [r13+0x0],rbx
  40a307:	mov    eax,0x1
  40a30c:	add    rsp,0x28
  40a310:	pop    rbx
  40a311:	pop    rsi
  40a312:	pop    rdi
  40a313:	pop    rbp
  40a314:	pop    r12
  40a316:	pop    r13
  40a318:	ret    
  40a319:	nop    DWORD PTR [rax+0x0]
  40a320:	push   r15
  40a322:	push   r14
  40a324:	push   r13
  40a326:	push   r12
  40a328:	push   rbp
  40a329:	push   rdi
  40a32a:	push   rsi
  40a32b:	push   rbx
  40a32c:	sub    rsp,0x98
  40a333:	mov    r9d,DWORD PTR [rip+0x470a6]        # 0x4513e0
  40a33a:	mov    DWORD PTR [rsp+0xe0],ecx
  40a341:	test   r9d,r9d
  40a344:	je     0x40a520
  40a34a:	test   ecx,ecx
  40a34c:	jle    0x40a506
  40a352:	lea    rax,[rsp+0x88]
  40a35a:	mov    rdi,QWORD PTR [rip+0x4a5df]        # 0x454940
  40a361:	lea    r15,[rsp+0x70]
  40a366:	lea    rsi,[rsp+0x60]
  40a36b:	lea    r13,[rsp+0x80]
  40a373:	lea    r14,[rsp+0x78]
  40a378:	mov    QWORD PTR [rsp+0x58],rax
  40a37d:	mov    r12d,ecx
  40a380:	mov    r8d,DWORD PTR [rip+0x4702d]        # 0x4513b4
  40a387:	test   r8d,r8d
  40a38a:	je     0x40a730
  40a390:	mov    rax,QWORD PTR [rip+0x47029]        # 0x4513c0
  40a397:	test   rax,rax
  40a39a:	je     0x40a780
  40a3a0:	mov    rax,QWORD PTR [rax]
  40a3a3:	movsxd rdx,DWORD PTR [rip+0x47012]        # 0x4513bc
  40a3aa:	mov    rcx,QWORD PTR [rip+0x47027]        # 0x4513d8
  40a3b1:	movsxd rax,DWORD PTR [rax+0x10]
  40a3b5:	sub    rax,rdx
  40a3b8:	add    rax,QWORD PTR [rip+0x47011]        # 0x4513d0
  40a3bf:	movsxd rdx,r12d
  40a3c2:	lea    r8,[rcx+rdx*1]
  40a3c6:	cmp    rax,r8
  40a3c9:	jae    0x40a720
  40a3cf:	sub    rax,rcx
  40a3d2:	add    eax,0x1
  40a3d5:	mov    DWORD PTR [rsp+0x30],eax
  40a3d9:	js     0x40a7aa
  40a3df:	movsxd rbp,eax
  40a3e2:	lea    rbx,[rip+0x49417]        # 0x453800
  40a3e9:	mov    rdx,rbp
  40a3ec:	mov    rcx,rbx
  40a3ef:	call   0x40a100
  40a3f4:	mov    rax,QWORD PTR [rip+0x49415]        # 0x453810
  40a3fb:	mov    QWORD PTR [rsp+0x70],rbp
  40a400:	mov    DWORD PTR [rsp+0x34],0x0
  40a408:	mov    QWORD PTR [rsp+0x40],rax
  40a40d:	mov    rdx,QWORD PTR [rip+0x46f94]        # 0x4513a8
  40a414:	lea    r8,[rip+0x46fbd]        # 0x4513d8
  40a41b:	mov    r9,r15
  40a41e:	mov    rcx,rbx
  40a421:	call   0x40a150
  40a426:	cmp    rax,0xffffffffffffffff
  40a42a:	je     0x40a44b
  40a42c:	mov    rdx,QWORD PTR [rip+0x46f75]        # 0x4513a8
  40a433:	xor    r9d,r9d
  40a436:	xor    r8d,r8d
  40a439:	mov    rcx,rbx
  40a43c:	call   0x40a150
  40a441:	cmp    rax,0xffffffffffffffff
  40a445:	jne    0x40a78d
  40a44b:	call   rdi
  40a44d:	mov    eax,DWORD PTR [rax]
  40a44f:	cmp    eax,0x16
  40a452:	je     0x40a640
  40a458:	cmp    eax,0x2a
  40a45b:	je     0x40a541
  40a461:	cmp    eax,0x7
  40a464:	je     0x40a531
  40a46a:	lea    rcx,[rip+0x3748f]        # 0x441900
  40a471:	call   0x433f18
  40a476:	mov    rcx,rax
  40a479:	call   0x4144d0
  40a47e:	mov    rax,QWORD PTR [rsp+0x70]
  40a483:	add    QWORD PTR [rip+0x46f4e],rax        # 0x4513d8
  40a48a:	xor    eax,eax
  40a48c:	add    eax,DWORD PTR [rsp+0x30]
  40a490:	mov    r9,QWORD PTR [rip+0x46f29]        # 0x4513c0
  40a497:	sub    r12d,eax
  40a49a:	test   r9,r9
  40a49d:	je     0x40a4fd
  40a49f:	mov    r10,QWORD PTR [rip+0x46f32]        # 0x4513d8
  40a4a6:	mov    rax,QWORD PTR [r9]
  40a4a9:	lea    r8,[r9+0x8]
  40a4ad:	mov    r11d,DWORD PTR [rip+0x46f08]        # 0x4513bc
  40a4b4:	sub    r10,QWORD PTR [rip+0x46f15]        # 0x4513d0
  40a4bb:	mov    ebx,DWORD PTR [rip+0x46ef7]        # 0x4513b8
  40a4c1:	jmp    0x40a4e6
  40a4c3:	sub    edx,ebx
  40a4c5:	mov    r9,r8
  40a4c8:	mov    DWORD PTR [rax+0x14],edx
  40a4cb:	mov    rax,QWORD PTR [r8]
  40a4ce:	test   rax,rax
  40a4d1:	je     0x40a680
  40a4d7:	mov    edx,DWORD PTR [rax+0x40]
  40a4da:	add    r8,0x8
  40a4de:	test   edx,edx
  40a4e0:	jne    0x40a680
  40a4e6:	mov    edx,DWORD PTR [rax+0x10]
  40a4e9:	mov    ecx,edx
  40a4eb:	sub    ecx,r11d
  40a4ee:	movsxd rcx,ecx
  40a4f1:	cmp    rcx,r10
  40a4f4:	jle    0x40a4c3
  40a4f6:	mov    QWORD PTR [rip+0x46ec3],r9        # 0x4513c0
  40a4fd:	test   r12d,r12d
  40a500:	jg     0x40a380
  40a506:	add    rsp,0x98
  40a50d:	pop    rbx
  40a50e:	pop    rsi
  40a50f:	pop    rdi
  40a510:	pop    rbp
  40a511:	pop    r12
  40a513:	pop    r13
  40a515:	pop    r14
  40a517:	pop    r15
  40a519:	ret    
  40a51a:	nop    WORD PTR [rax+rax*1+0x0]
  40a520:	movsxd rax,DWORD PTR [rsp+0xe0]
  40a528:	add    QWORD PTR [rip+0x46ea9],rax        # 0x4513d8
  40a52f:	jmp    0x40a506
  40a531:	mov    rdx,rbp
  40a534:	mov    rcx,rbx
  40a537:	call   0x40a100
  40a53c:	jmp    0x40a40d
  40a541:	mov    rdx,QWORD PTR [rip+0x46e60]        # 0x4513a8
  40a548:	xor    r9d,r9d
  40a54b:	xor    r8d,r8d
  40a54e:	mov    rcx,rbx
  40a551:	call   0x40a150
  40a556:	mov    ecx,DWORD PTR [rip+0x46e54]        # 0x4513b0
  40a55c:	test   ecx,ecx
  40a55e:	jne    0x40a763
  40a564:	mov    rax,QWORD PTR [rip+0x46e6d]        # 0x4513d8
  40a56b:	mov    QWORD PTR [rsp+0x80],rsi
  40a573:	mov    edx,0x1
  40a578:	mov    QWORD PTR [rsp+0x88],0x1
  40a584:	mov    QWORD PTR [rsp+0x38],rbx
  40a589:	mov    QWORD PTR [rsp+0x48],rax
  40a58e:	mov    rax,QWORD PTR [rsp+0x70]
  40a593:	mov    QWORD PTR [rsp+0x50],rax
  40a598:	jmp    0x40a5cc
  40a59a:	nop    WORD PTR [rax+rax*1+0x0]
  40a5a0:	cmp    QWORD PTR [rsp+0x80],rsi
  40a5a8:	ja     0x40a690
  40a5ae:	mov    rax,QWORD PTR [rsp+0x88]
  40a5b6:	lea    rdx,[rax+0x1]
  40a5ba:	cmp    rdx,0x4
  40a5be:	mov    QWORD PTR [rsp+0x88],rdx
  40a5c6:	ja     0x40a690
  40a5cc:	mov    QWORD PTR [rsp+0x78],rdx
  40a5d1:	call   rdi
  40a5d3:	mov    rcx,QWORD PTR [rip+0x46dc6]        # 0x4513a0
  40a5da:	lea    rdx,[rip+0x46df7]        # 0x4513d8
  40a5e1:	mov    DWORD PTR [rax],0x0
  40a5e7:	mov    r9,r13
  40a5ea:	mov    QWORD PTR [rsp+0x20],r14
  40a5ef:	mov    r8,r15
  40a5f2:	call   0x433f50
  40a5f7:	cmp    rax,0xffffffffffffffff
  40a5fb:	mov    rbx,rax
  40a5fe:	jne    0x40a5a0
  40a600:	call   rdi
  40a602:	cmp    DWORD PTR [rax],0x7
  40a605:	je     0x40a5a0
  40a607:	mov    rbx,QWORD PTR [rsp+0x38]
  40a60c:	call   rdi
  40a60e:	cmp    DWORD PTR [rax],0x7
  40a611:	je     0x40a6a2
  40a617:	mov    rax,QWORD PTR [rsp+0x48]
  40a61c:	mov    ecx,0x1
  40a621:	mov    QWORD PTR [rip+0x46db0],rax        # 0x4513d8
  40a628:	call   0x40a220
  40a62d:	mov    rax,QWORD PTR [rsp+0x50]
  40a632:	sub    rax,0x1
  40a636:	mov    QWORD PTR [rsp+0x70],rax
  40a63b:	jmp    0x40a40d
  40a640:	mov    rax,QWORD PTR [rip+0x46d91]        # 0x4513d8
  40a647:	sub    rax,QWORD PTR [rip+0x46d82]        # 0x4513d0
  40a64e:	mov    rcx,QWORD PTR [rsp+0x70]
  40a653:	lea    rdx,[rcx+rax*1-0x1]
  40a658:	mov    rax,QWORD PTR [rip+0x46d69]        # 0x4513c8
  40a65f:	sub    rax,0x2
  40a663:	cmp    rdx,rax
  40a666:	ja     0x40a750
  40a66c:	add    rcx,0x1
  40a670:	add    DWORD PTR [rsp+0x34],0x1
  40a675:	mov    QWORD PTR [rsp+0x70],rcx
  40a67a:	jmp    0x40a40d
  40a67f:	nop
  40a680:	mov    QWORD PTR [rip+0x46d35],0x0        # 0x4513c0
  40a68b:	jmp    0x40a4fd
  40a690:	mov    rcx,rbx
  40a693:	mov    rbx,QWORD PTR [rsp+0x38]
  40a698:	cmp    rcx,0xffffffffffffffff
  40a69c:	je     0x40a60c
  40a6a2:	mov    rdx,QWORD PTR [rsp+0x58]
  40a6a7:	mov    rcx,r13
  40a6aa:	mov    QWORD PTR [rsp+0x80],rsi
  40a6b2:	call   0x40a250
  40a6b7:	cmp    QWORD PTR [rsp+0x70],0x0
  40a6bd:	jne    0x40a40d
  40a6c3:	mov    rcx,QWORD PTR [rip+0x46cd6]        # 0x4513a0
  40a6ca:	xor    r8d,r8d
  40a6cd:	xor    edx,edx
  40a6cf:	mov    QWORD PTR [rsp+0x20],r14
  40a6d4:	mov    r9,r13
  40a6d7:	mov    QWORD PTR [rsp+0x80],rsi
  40a6df:	mov    QWORD PTR [rsp+0x88],0x4
  40a6eb:	call   0x433f50
  40a6f0:	cmp    QWORD PTR [rsp+0x80],rsi
  40a6f8:	jbe    0x40a40d
  40a6fe:	mov    rdx,QWORD PTR [rsp+0x58]
  40a703:	mov    rcx,r13
  40a706:	mov    QWORD PTR [rsp+0x80],rsi
  40a70e:	call   0x40a250
  40a713:	jmp    0x40a40d
  40a718:	nop    DWORD PTR [rax+rax*1+0x0]
  40a720:	mov    rbp,rdx
  40a723:	mov    DWORD PTR [rsp+0x30],r12d
  40a728:	jmp    0x40a3e2
  40a72d:	nop    DWORD PTR [rax]
  40a730:	mov    ecx,r12d
  40a733:	call   0x40a220
  40a738:	mov    r9,QWORD PTR [rip+0x46c81]        # 0x4513c0
  40a73f:	test   r9,r9
  40a742:	je     0x40a506
  40a748:	xor    r12d,r12d
  40a74b:	jmp    0x40a49f
  40a750:	call   0x40a220
  40a755:	mov    QWORD PTR [rsp+0x70],0x0
  40a75e:	jmp    0x40a40d
  40a763:	lea    rcx,[rip+0x46c6e]        # 0x4513d8
  40a76a:	mov    rdx,r15
  40a76d:	call   0x40a250
  40a772:	jmp    0x40a40d
  40a777:	nop    WORD PTR [rax+rax*1+0x0]
  40a780:	movsxd rbp,r12d
  40a783:	mov    DWORD PTR [rsp+0x30],r12d
  40a788:	jmp    0x40a3e2
  40a78d:	mov    eax,DWORD PTR [rsp+0x40]
  40a791:	sub    eax,DWORD PTR [rip+0x49079]        # 0x453810
  40a797:	add    eax,DWORD PTR [rsp+0x30]
  40a79b:	add    DWORD PTR [rip+0x46c17],eax        # 0x4513b8
  40a7a1:	mov    eax,DWORD PTR [rsp+0x34]
  40a7a5:	jmp    0x40a48c
  40a7aa:	mov    QWORD PTR [rip+0x46c0b],0x0        # 0x4513c0
  40a7b5:	mov    rbp,rdx
  40a7b8:	mov    DWORD PTR [rsp+0x30],r12d
  40a7bd:	jmp    0x40a3e2
  40a7c2:	nop    DWORD PTR [rax+0x0]
  40a7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7d0:	mov    edx,DWORD PTR [rip+0x4901a]        # 0x4537f0
  40a7d6:	test   edx,edx
  40a7d8:	jne    0x40a7f0
  40a7da:	mov    eax,DWORD PTR [rip+0x46c00]        # 0x4513e0
  40a7e0:	test   eax,eax
  40a7e2:	jne    0x40a801
  40a7e4:	movsxd rcx,ecx
  40a7e7:	add    QWORD PTR [rip+0x46bea],rcx        # 0x4513d8
  40a7ee:	ret    
  40a7ef:	nop
  40a7f0:	movsxd rax,ecx
  40a7f3:	add    DWORD PTR [rip+0x46bbf],ecx        # 0x4513b8
  40a7f9:	add    QWORD PTR [rip+0x46bd8],rax        # 0x4513d8
  40a800:	ret    
  40a801:	jmp    0x40a320
  40a806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a810:	push   r15
  40a812:	push   r14
  40a814:	push   r13
  40a816:	push   r12
  40a818:	push   rbp
  40a819:	push   rdi
  40a81a:	push   rsi
  40a81b:	push   rbx
  40a81c:	sub    rsp,0x78
  40a820:	mov    eax,DWORD PTR [rip+0x48fca]        # 0x4537f0
  40a826:	mov    r15,rcx
  40a829:	mov    rcx,rdx
  40a82c:	mov    QWORD PTR [rsp+0xc8],rdx
  40a834:	mov    QWORD PTR [rsp+0xd0],r8
  40a83c:	mov    DWORD PTR [rsp+0x64],0x0
  40a844:	mov    DWORD PTR [rip+0x46b96],eax        # 0x4513e0
  40a84a:	call   0x409d40
  40a84f:	cmp    QWORD PTR [rsp+0xc8],0x0
  40a858:	je     0x40b6a4
  40a85e:	mov    rax,QWORD PTR [rsp+0xd0]
  40a866:	add    rax,0x8
  40a86a:	mov    QWORD PTR [rip+0x46b4f],rax        # 0x4513c0
  40a871:	mov    rax,QWORD PTR [rsp+0xd0]
  40a879:	mov    rax,QWORD PTR [rax+0x8]
  40a87d:	test   rax,rax
  40a880:	je     0x40b543
  40a886:	mov    r8d,DWORD PTR [rax+0x40]
  40a88a:	test   r8d,r8d
  40a88d:	jne    0x40b543
  40a893:	mov    rcx,QWORD PTR [r15+0x8]
  40a897:	test   rcx,rcx
  40a89a:	je     0x40b55b
  40a8a0:	call   0x4118c0
  40a8a5:	test   rax,rax
  40a8a8:	je     0x40aad8
  40a8ae:	mov    rcx,QWORD PTR [rax+0x40]
  40a8b2:	mov    rax,QWORD PTR [rsp+0xd0]
  40a8ba:	mov    rax,QWORD PTR [rax]
  40a8bd:	movsxd rdx,DWORD PTR [rax+0x10]
  40a8c1:	mov    rbx,rdx
  40a8c4:	add    rcx,rdx
  40a8c7:	call   0x412f60
  40a8cc:	add    eax,ebx
  40a8ce:	mov    DWORD PTR [rip+0x46ae8],eax        # 0x4513bc
  40a8d4:	mov    edx,0x8
  40a8d9:	mov    ecx,0x1
  40a8de:	call   0x43a798
  40a8e3:	mov    rbx,QWORD PTR [r15+0x18]
  40a8e7:	mov    QWORD PTR [rsp+0x38],rax
  40a8ec:	cmp    BYTE PTR [rbx],0xa
  40a8ef:	mov    rax,rbx
  40a8f2:	je     0x40aaed
  40a8f8:	mov    rdi,QWORD PTR [rip+0x4a0b9]        # 0x4549b8
  40a8ff:	lea    r12,[rsp+0x68]
  40a904:	mov    QWORD PTR [r15+0x38],0x0
  40a90c:	mov    QWORD PTR [r15+0x40],0x0
  40a914:	mov    QWORD PTR [r15+0x48],0x0
  40a91c:	nop    DWORD PTR [rax+0x0]
  40a920:	mov    rcx,rbx
  40a923:	call   0x412de0
  40a928:	cdqe   
  40a92a:	mov    r8d,0x5
  40a930:	lea    rdx,[rip+0x36ff3]        # 0x44192a
  40a937:	add    rbx,rax
  40a93a:	mov    rcx,rbx
  40a93d:	call   rdi
  40a93f:	test   eax,eax
  40a941:	jne    0x40a9a0
  40a943:	add    rbx,0x5
  40a947:	mov    rcx,rbx
  40a94a:	call   0x412de0
  40a94f:	movsxd rbp,eax
  40a952:	add    rbp,rbx
  40a955:	cmp    BYTE PTR [rbp+0x0],0x28
  40a959:	je     0x40aa40
  40a95f:	lea    rdx,[rip+0x37034]        # 0x44199a
  40a966:	mov    r9,r12
  40a969:	mov    r8d,0x1
  40a96f:	mov    rcx,rbp
  40a972:	call   0x408ec0
  40a977:	movsxd rbx,eax
  40a97a:	nop    WORD PTR [rax+rax*1+0x0]
  40a980:	mov    rcx,QWORD PTR [rsp+0x68]
  40a985:	add    rbx,rbp
  40a988:	call   0x43a748
  40a98d:	cmp    BYTE PTR [rbx],0xa
  40a990:	je     0x40aae9
  40a996:	add    rbx,0x1
  40a99a:	jmp    0x40a920
  40a99c:	nop    DWORD PTR [rax+0x0]
  40a9a0:	mov    r8d,0x5
  40a9a6:	lea    rdx,[rip+0x36f83]        # 0x441930
  40a9ad:	mov    rcx,rbx
  40a9b0:	call   rdi
  40a9b2:	test   eax,eax
  40a9b4:	je     0x40a943
  40a9b6:	mov    r8d,0x5
  40a9bc:	lea    rdx,[rip+0x36f73]        # 0x441936
  40a9c3:	mov    rcx,rbx
  40a9c6:	call   rdi
  40a9c8:	test   eax,eax
  40a9ca:	jne    0x40b5bc
  40a9d0:	lea    r14,[r15+0x40]
  40a9d4:	add    rbx,0x5
  40a9d8:	mov    rcx,rbx
  40a9db:	call   0x412de0
  40a9e0:	movsxd rbp,eax
  40a9e3:	add    rbp,rbx
  40a9e6:	cmp    BYTE PTR [rbp+0x0],0x28
  40a9ea:	je     0x40b9de
  40a9f0:	lea    rdx,[rip+0x36fa3]        # 0x44199a
  40a9f7:	mov    r9,r12
  40a9fa:	mov    r8d,0x1
  40aa00:	mov    rcx,rbp
  40aa03:	call   0x408ec0
  40aa08:	mov    esi,eax
  40aa0a:	lea    ecx,[rsi+0x1]
  40aa0d:	movsxd rbx,esi
  40aa10:	movsxd rcx,ecx
  40aa13:	call   0x4227b0
  40aa18:	mov    r8,rbx
  40aa1b:	mov    r13,rax
  40aa1e:	mov    QWORD PTR [r14],rax
  40aa21:	mov    rdx,rbp
  40aa24:	mov    rcx,rax
  40aa27:	call   0x43a610
  40aa2c:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  40aa32:	jmp    0x40a980
  40aa37:	nop    WORD PTR [rax+rax*1+0x0]
  40aa40:	xor    edx,edx
  40aa42:	mov    rcx,rbp
  40aa45:	call   0x408dd0
  40aa4a:	lea    rdx,[rip+0x36f49]        # 0x44199a
  40aa51:	movsxd rcx,eax
  40aa54:	mov    r9,r12
  40aa57:	mov    rbx,rcx
  40aa5a:	mov    r8d,0x1
  40aa60:	add    rcx,rbp
  40aa63:	call   0x408ec0
  40aa68:	add    eax,ebx
  40aa6a:	movsxd rbx,eax
  40aa6d:	jmp    0x40a980
  40aa72:	movsxd rax,DWORD PTR [r15+0x20]
  40aa76:	mov    rsi,QWORD PTR [rip+0x4695b]        # 0x4513d8
  40aa7d:	add    rax,QWORD PTR [r15+0x18]
  40aa81:	cmp    rax,rsi
  40aa84:	ja     0x40acd7
  40aa8a:	mov    r10d,DWORD PTR [rip+0x4694f]        # 0x4513e0
  40aa91:	test   r10d,r10d
  40aa94:	jne    0x40acf2
  40aa9a:	call   0x409d90
  40aa9f:	mov    r9d,DWORD PTR [rip+0x4693a]        # 0x4513e0
  40aaa6:	mov    rax,QWORD PTR [rsp+0x38]
  40aaab:	test   r9d,r9d
  40aaae:	mov    QWORD PTR [r15+0x30],rax
  40aab2:	je     0x40b3a0
  40aab8:	mov    rax,QWORD PTR [rip+0x48d41]        # 0x453800
  40aabf:	or     DWORD PTR [r15+0x2c],0x100
  40aac7:	mov    QWORD PTR [r15+0x18],rax
  40aacb:	mov    eax,DWORD PTR [rip+0x48d3f]        # 0x453810
  40aad1:	sub    eax,0x1
  40aad4:	mov    DWORD PTR [r15+0x20],eax
  40aad8:	add    rsp,0x78
  40aadc:	pop    rbx
  40aadd:	pop    rsi
  40aade:	pop    rdi
  40aadf:	pop    rbp
  40aae0:	pop    r12
  40aae2:	pop    r13
  40aae4:	pop    r14
  40aae6:	pop    r15
  40aae8:	ret    
  40aae9:	mov    rax,QWORD PTR [r15+0x18]
  40aaed:	movsxd rdx,DWORD PTR [r15+0x20]
  40aaf1:	lea    rdi,[rsp+0x64]
  40aaf6:	mov    rsi,rax
  40aaf9:	mov    QWORD PTR [rip+0x468d8],rax        # 0x4513d8
  40ab00:	mov    QWORD PTR [rip+0x468c9],rax        # 0x4513d0
  40ab07:	xor    r14d,r14d
  40ab0a:	mov    QWORD PTR [rsp+0x30],rdi
  40ab0f:	lea    rdi,[rsp+0x68]
  40ab14:	mov    QWORD PTR [rsp+0x48],0x1
  40ab1d:	mov    QWORD PTR [rsp+0x40],0x0
  40ab26:	mov    rbx,QWORD PTR [rip+0x49e8b]        # 0x4549b8
  40ab2d:	lea    rax,[rax+rdx*1-0x3]
  40ab32:	mov    QWORD PTR [rip+0x4688f],rdx        # 0x4513c8
  40ab39:	mov    QWORD PTR [rsp+0x28],rdi
  40ab3e:	cmp    rsi,rax
  40ab41:	jb     0x40ab9f
  40ab43:	jmp    0x40acc6
  40ab48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab50:	mov    r8d,0x5
  40ab56:	lea    rdx,[rip+0x36e31]        # 0x44198e
  40ab5d:	mov    rcx,rsi
  40ab60:	call   rbx
  40ab62:	test   eax,eax
  40ab64:	je     0x40abb5
  40ab66:	lea    rdx,[rip+0x36e27]        # 0x441994
  40ab6d:	mov    r8d,0x3
  40ab73:	mov    rcx,rsi
  40ab76:	call   0x43a6c0
  40ab7b:	test   eax,eax
  40ab7d:	je     0x40abbe
  40ab7f:	mov    rdx,QWORD PTR [rip+0x4684a]        # 0x4513d0
  40ab86:	mov    rax,QWORD PTR [rip+0x4683b]        # 0x4513c8
  40ab8d:	add    rsi,0x1
  40ab91:	lea    rax,[rdx+rax*1-0x3]
  40ab96:	cmp    rsi,rax
  40ab99:	jae    0x40aa72
  40ab9f:	mov    r8d,0x3
  40aba5:	lea    rdx,[rip+0x36dde]        # 0x44198a
  40abac:	mov    rcx,rsi
  40abaf:	call   rbx
  40abb1:	test   eax,eax
  40abb3:	jne    0x40ab50
  40abb5:	test   rsi,rsi
  40abb8:	je     0x40aa72
  40abbe:	movsxd rax,DWORD PTR [r15+0x20]
  40abc2:	add    rax,QWORD PTR [r15+0x18]
  40abc6:	cmp    rax,rsi
  40abc9:	jbe    0x40b582
  40abcf:	mov    rcx,rsi
  40abd2:	sub    rcx,QWORD PTR [rip+0x467ff]        # 0x4513d8
  40abd9:	call   0x40a320
  40abde:	test   r14d,r14d
  40abe1:	movzx  edi,BYTE PTR [rsi]
  40abe4:	je     0x40ad10
  40abea:	mov    eax,edi
  40abec:	and    eax,0xffffffdf
  40abef:	cmp    al,0xa
  40abf1:	je     0x40ad73
  40abf7:	test   dil,dil
  40abfa:	jne    0x40af41
  40ac00:	mov    ecx,0x18
  40ac05:	call   0x4227b0
  40ac0a:	mov    rdi,QWORD PTR [rip+0x467c7]        # 0x4513d8
  40ac11:	mov    r8,QWORD PTR [rsp+0x30]
  40ac16:	mov    rdx,rax
  40ac19:	mov    rcx,QWORD PTR [rsp+0x28]
  40ac1e:	mov    QWORD PTR [rax],0x0
  40ac25:	mov    rsi,rax
  40ac28:	mov    QWORD PTR [rax+0x8],0x0
  40ac30:	mov    QWORD PTR [rax+0x10],0x0
  40ac38:	mov    QWORD PTR [rsp+0x68],rdi
  40ac3d:	call   0x41b5e0
  40ac42:	test   eax,eax
  40ac44:	je     0x40af98
  40ac4a:	mov    r13d,DWORD PTR [rsp+0x64]
  40ac4f:	test   r13d,r13d
  40ac52:	je     0x40ac5c
  40ac54:	or     DWORD PTR [r15+0x2c],0x200
  40ac5c:	mov    r12d,DWORD PTR [rip+0x4677d]        # 0x4513e0
  40ac63:	test   r12d,r12d
  40ac66:	je     0x40b2d7
  40ac6c:	mov    rax,QWORD PTR [rip+0x46765]        # 0x4513d8
  40ac73:	sub    rdi,rax
  40ac76:	mov    rcx,rdi
  40ac79:	call   0x40a320
  40ac7e:	mov    ebp,DWORD PTR [rip+0x4675c]        # 0x4513e0
  40ac84:	mov    rdi,QWORD PTR [rsi+0x10]
  40ac88:	mov    rcx,QWORD PTR [rsi]
  40ac8b:	test   ebp,ebp
  40ac8d:	jne    0x40b27b
  40ac93:	call   0x43a748
  40ac98:	mov    rcx,rsi
  40ac9b:	call   0x43a748
  40aca0:	mov    rcx,QWORD PTR [rip+0x46731]        # 0x4513d8
  40aca7:	mov    rax,QWORD PTR [rip+0x46722]        # 0x4513d0
  40acae:	mov    rdx,QWORD PTR [rip+0x46713]        # 0x4513c8
  40acb5:	mov    rsi,rcx
  40acb8:	lea    rax,[rax+rdx*1-0x3]
  40acbd:	cmp    rsi,rax
  40acc0:	jb     0x40ab9f
  40acc6:	movsxd rax,DWORD PTR [r15+0x20]
  40acca:	add    rax,QWORD PTR [r15+0x18]
  40acce:	cmp    rax,rsi
  40acd1:	jbe    0x40aa8a
  40acd7:	sub    rax,rsi
  40acda:	mov    rcx,rax
  40acdd:	call   0x40a320
  40ace2:	mov    r10d,DWORD PTR [rip+0x466f7]        # 0x4513e0
  40ace9:	test   r10d,r10d
  40acec:	je     0x40aa9a
  40acf2:	lea    rdx,[rip+0x36c9f]        # 0x441998
  40acf9:	lea    rcx,[rip+0x48b00]        # 0x453800
  40ad00:	mov    r8d,0x1
  40ad06:	call   0x40a1b0
  40ad0b:	jmp    0x40aa9a
  40ad10:	cmp    dil,0x2a
  40ad14:	je     0x40ad73
  40ad16:	lea    rdx,[rip+0x36c64]        # 0x441981
  40ad1d:	mov    r8d,0x8
  40ad23:	mov    rcx,rsi
  40ad26:	call   0x43a6c0
  40ad2b:	test   eax,eax
  40ad2d:	jne    0x40abf7
  40ad33:	mov    ecx,0x8
  40ad38:	mov    r14d,0x1
  40ad3e:	call   0x40a7d0
  40ad43:	mov    rcx,QWORD PTR [rip+0x4668e]        # 0x4513d8
  40ad4a:	cmp    BYTE PTR [rcx],0xa
  40ad4d:	jne    0x40aca7
  40ad53:	lea    rdx,[rip+0x36c0a]        # 0x441964
  40ad5a:	call   0x43a608
  40ad5f:	lea    ecx,[rax-0x1]
  40ad62:	call   0x40a7d0
  40ad67:	mov    rcx,QWORD PTR [rip+0x4666a]        # 0x4513d8
  40ad6e:	jmp    0x40aca7
  40ad73:	xor    edx,edx
  40ad75:	xor    ecx,ecx
  40ad77:	xor    edi,edi
  40ad79:	call   0x409420
  40ad7e:	mov    r12,QWORD PTR [rip+0x46653]        # 0x4513d8
  40ad85:	mov    rbp,rax
  40ad88:	mov    rdx,QWORD PTR [rip+0x46639]        # 0x4513c8
  40ad8f:	mov    rax,r12
  40ad92:	sub    rax,QWORD PTR [rip+0x46637]        # 0x4513d0
  40ad99:	mov    ecx,eax
  40ad9b:	sub    ecx,0x1
  40ad9e:	js     0x40add0
  40ada0:	cmp    ecx,edx
  40ada2:	jge    0x40add0
  40ada4:	cmp    BYTE PTR [r12-0x1],0x28
  40adaa:	jne    0x40add0
  40adac:	lea    ecx,[rax+0x1]
  40adaf:	cmp    ecx,edx
  40adb1:	jge    0x40b318
  40adb7:	shr    ecx,0x1f
  40adba:	test   cl,cl
  40adbc:	jne    0x40b318
  40adc2:	xor    edi,edi
  40adc4:	cmp    BYTE PTR [r12+0x1],0x6e
  40adca:	sete   dil
  40adce:	xchg   ax,ax
  40add0:	mov    r13d,DWORD PTR [rip+0x48a19]        # 0x4537f0
  40add7:	mov    rdx,QWORD PTR [rip+0x48a32]        # 0x453810
  40adde:	lea    rsi,[rip+0x48a0b]        # 0x4537f0
  40ade5:	mov    ecx,DWORD PTR [rip+0x465cd]        # 0x4513b8
  40adeb:	mov    QWORD PTR [rip+0x4659e],r12        # 0x451390
  40adf2:	test   r13d,r13d
  40adf5:	mov    QWORD PTR [rip+0x4659c],rdx        # 0x451398
  40adfc:	mov    DWORD PTR [rip+0x46586],ecx        # 0x451388
  40ae02:	jne    0x40af20
  40ae08:	mov    ecx,DWORD PTR [rip+0x465d2]        # 0x4513e0
  40ae0e:	test   ecx,ecx
  40ae10:	cmovne eax,edx
  40ae13:	mov    DWORD PTR [rbp+0x18],eax
  40ae16:	cmp    BYTE PTR [r12],0xa
  40ae1b:	je     0x40b9ce
  40ae21:	mov    DWORD PTR [rbp+0x24],0x0
  40ae28:	movsx  edx,BYTE PTR [r12+0x5]
  40ae2e:	lea    rcx,[rip+0x36b1b]        # 0x441950
  40ae35:	call   0x43a650
  40ae3a:	test   rax,rax
  40ae3d:	je     0x40b58e
  40ae43:	cmp    BYTE PTR [r12+0x1],0x4e
  40ae49:	je     0x40af79
  40ae4f:	test   edi,edi
  40ae51:	je     0x40af57
  40ae57:	test   r13d,r13d
  40ae5a:	jne    0x40b56c
  40ae60:	mov    ecx,0x5
  40ae65:	call   0x40a7d0
  40ae6a:	mov    rcx,QWORD PTR [rip+0x46567]        # 0x4513d8
  40ae71:	xor    r12d,r12d
  40ae74:	call   0x412e20
  40ae79:	mov    ecx,eax
  40ae7b:	call   0x40a320
  40ae80:	mov    rcx,QWORD PTR [rip+0x46551]        # 0x4513d8
  40ae87:	xor    eax,eax
  40ae89:	cmp    BYTE PTR [rcx],0x28
  40ae8c:	je     0x40b6b4
  40ae92:	add    rcx,rax
  40ae95:	cmp    DWORD PTR [rbp+0x24],0x1
  40ae99:	mov    r9,QWORD PTR [rsp+0x28]
  40ae9e:	je     0x40b2fe
  40aea4:	lea    rdx,[rip+0x36ab2]        # 0x44195d
  40aeab:	mov    r8d,0x2
  40aeb1:	call   0x408ec0
  40aeb6:	add    r12d,eax
  40aeb9:	mov    rcx,QWORD PTR [rsp+0x68]
  40aebe:	call   0x43a748
  40aec3:	test   r12d,r12d
  40aec6:	jne    0x40afaf
  40aecc:	mov    rax,QWORD PTR [rip+0x464c5]        # 0x451398
  40aed3:	mov    rcx,QWORD PTR [rip+0x464fe]        # 0x4513d8
  40aeda:	mov    edx,DWORD PTR [rip+0x464a8]        # 0x451388
  40aee0:	mov    QWORD PTR [rip+0x48929],rax        # 0x453810
  40aee7:	mov    rax,QWORD PTR [rip+0x464a2]        # 0x451390
  40aeee:	mov    DWORD PTR [rip+0x464c4],edx        # 0x4513b8
  40aef4:	sub    rcx,rax
  40aef7:	mov    QWORD PTR [rip+0x464da],rax        # 0x4513d8
  40aefe:	call   0x40a320
  40af03:	mov    rcx,rbp
  40af06:	call   0x409390
  40af0b:	mov    rcx,QWORD PTR [rip+0x464c6]        # 0x4513d8
  40af12:	jmp    0x40aca7
  40af17:	nop    WORD PTR [rax+rax*1+0x0]
  40af20:	cmp    BYTE PTR [r12],0xa
  40af25:	jne    0x40ae21
  40af2b:	mov    DWORD PTR [rbp+0x24],0x1
  40af32:	mov    ecx,0x3
  40af37:	call   0x40a320
  40af3c:	jmp    0x40ae6a
  40af41:	mov    ecx,0x1
  40af46:	call   0x40a320
  40af4b:	mov    rcx,QWORD PTR [rip+0x46486]        # 0x4513d8
  40af52:	jmp    0x40aca7
  40af57:	mov    ecx,0x5
  40af5c:	call   0x40a7d0
  40af61:	mov    rcx,QWORD PTR [rip+0x46470]        # 0x4513d8
  40af68:	call   0x412de0
  40af6d:	mov    ecx,eax
  40af6f:	call   0x40a7d0
  40af74:	jmp    0x40ae6a
  40af79:	test   r13d,r13d
  40af7c:	je     0x40ae60
  40af82:	lea    rcx,[rip+0x369cc]        # 0x441955
  40af89:	mov    edx,0x3
  40af8e:	call   0x40a1f0
  40af93:	jmp    0x40ae60
  40af98:	sub    rdi,QWORD PTR [rip+0x46439]        # 0x4513d8
  40af9f:	lea    ecx,[rdi+0x1]
  40afa2:	call   0x40a320
  40afa7:	mov    rcx,QWORD PTR [rsi]
  40afaa:	jmp    0x40ac93
  40afaf:	lea    ecx,[r12+0x1]
  40afb4:	movsxd r13,r12d
  40afb7:	movsxd rcx,ecx
  40afba:	call   0x4227b0
  40afbf:	mov    rdx,QWORD PTR [rip+0x46412]        # 0x4513d8
  40afc6:	mov    r8,r13
  40afc9:	mov    rcx,rax
  40afcc:	mov    QWORD PTR [rbp+0x0],rax
  40afd0:	call   0x43a6b8
  40afd5:	mov    rax,QWORD PTR [rbp+0x0]
  40afd9:	mov    BYTE PTR [rax+r13*1],0x0
  40afde:	mov    rcx,QWORD PTR [rbp+0x0]
  40afe2:	call   0x409490
  40afe7:	mov    eax,DWORD PTR [rip+0x48803]        # 0x4537f0
  40afed:	test   eax,eax
  40afef:	je     0x40affb
  40aff1:	mov    rax,QWORD PTR [rip+0x48818]        # 0x453810
  40aff8:	mov    DWORD PTR [rbp+0x18],eax
  40affb:	mov    ecx,r12d
  40affe:	call   0x40a320
  40b003:	mov    r13d,DWORD PTR [rip+0x463d6]        # 0x4513e0
  40b00a:	test   r13d,r13d
  40b00d:	je     0x40b31f
  40b013:	mov    rax,QWORD PTR [rip+0x487f6]        # 0x453810
  40b01a:	mov    ecx,0x1
  40b01f:	mov    DWORD PTR [rbp+0x1c],eax
  40b022:	call   0x40a7d0
  40b027:	cmp    DWORD PTR [rbp+0x24],0x1
  40b02b:	je     0x40b344
  40b031:	mov    r12,QWORD PTR [rip+0x463a0]        # 0x4513d8
  40b038:	cmp    BYTE PTR [r12],0x3a
  40b03d:	je     0x40b377
  40b043:	mov    r13,QWORD PTR [rbp+0x0]
  40b047:	mov    rcx,r13
  40b04a:	call   0x43a620
  40b04f:	cmp    eax,0x1
  40b052:	mov    edx,eax
  40b054:	jle    0x40b077
  40b056:	movsxd r12,edx
  40b059:	cmp    BYTE PTR [r13+r12*1-0x1],0x7f
  40b05f:	je     0x40b713
  40b065:	mov    r12,QWORD PTR [rip+0x4636c]        # 0x4513d8
  40b06c:	cmp    BYTE PTR [r12],0x3a
  40b071:	je     0x40b6cc
  40b077:	mov    r13d,DWORD PTR [rbp+0x24]
  40b07b:	mov    rcx,r12
  40b07e:	test   r13d,r13d
  40b081:	jne    0x40b415
  40b087:	call   0x412e20
  40b08c:	mov    rdx,QWORD PTR [rip+0x46345]        # 0x4513d8
  40b093:	movsxd rcx,eax
  40b096:	mov    r8,rcx
  40b099:	add    rcx,rdx
  40b09c:	cmp    BYTE PTR [rcx],0x28
  40b09f:	je     0x40b821
  40b0a5:	add    r13d,r8d
  40b0a8:	movsxd rax,r13d
  40b0ab:	lea    rcx,[rdx+rax*1]
  40b0af:	call   0x412e20
  40b0b4:	add    r13d,eax
  40b0b7:	lea    r9,[rbp+0x10]
  40b0bb:	lea    rdx,[rip+0x3689f]        # 0x441961
  40b0c2:	movsxd rcx,r13d
  40b0c5:	add    rcx,QWORD PTR [rip+0x4630c]        # 0x4513d8
  40b0cc:	mov    r8d,0x2
  40b0d2:	call   0x408ec0
  40b0d7:	add    eax,r13d
  40b0da:	mov    ecx,eax
  40b0dc:	mov    DWORD PTR [rsp+0x5c],eax
  40b0e0:	call   0x40a7d0
  40b0e5:	mov    edx,0xa
  40b0ea:	mov    rcx,r12
  40b0ed:	call   0x43a650
  40b0f2:	test   rax,rax
  40b0f5:	mov    QWORD PTR [rsp+0x50],rax
  40b0fa:	je     0x40b109
  40b0fc:	cmp    rax,QWORD PTR [rip+0x462d5]        # 0x4513d8
  40b103:	jb     0x40b743
  40b109:	mov    rcx,QWORD PTR [rbp+0x10]
  40b10d:	xor    r13d,r13d
  40b110:	call   0x409490
  40b115:	cmp    QWORD PTR [rbp+0x8],0x0
  40b11a:	mov    QWORD PTR [rsp+0x50],0x0
  40b123:	je     0x40b87f
  40b129:	mov    rax,QWORD PTR [rip+0x462a8]        # 0x4513d8
  40b130:	cmp    BYTE PTR [rax],0xa
  40b133:	je     0x40b152
  40b135:	mov    r8d,DWORD PTR [rip+0x486b4]        # 0x4537f0
  40b13c:	test   r8d,r8d
  40b13f:	je     0x40b167
  40b141:	lea    rcx,[rip+0x36817]        # 0x44195f
  40b148:	mov    edx,0x1
  40b14d:	call   0x40a1f0
  40b152:	mov    ecx,DWORD PTR [rip+0x48698]        # 0x4537f0
  40b158:	mov    rax,QWORD PTR [rip+0x46279]        # 0x4513d8
  40b15f:	test   ecx,ecx
  40b161:	jne    0x40b62b
  40b167:	test   edi,edi
  40b169:	mov    rcx,rax
  40b16c:	jne    0x40b59d
  40b172:	lea    rdx,[rip+0x367f8]        # 0x441971
  40b179:	call   0x43a608
  40b17e:	mov    ecx,eax
  40b180:	call   0x40a320
  40b185:	cmp    QWORD PTR [rsp+0x50],0x0
  40b18b:	je     0x40b1f1
  40b18d:	mov    rax,QWORD PTR [rip+0x46244]        # 0x4513d8
  40b194:	cmp    BYTE PTR [rax],0xa
  40b197:	je     0x40b1f1
  40b199:	mov    eax,DWORD PTR [rip+0x48651]        # 0x4537f0
  40b19f:	test   eax,eax
  40b1a1:	jne    0x40b68e
  40b1a7:	xor    edi,edi
  40b1a9:	test   r13d,r13d
  40b1ac:	jg     0x40b1b8
  40b1ae:	jmp    0x40b1d7
  40b1b0:	add    edi,0x1
  40b1b3:	cmp    edi,r13d
  40b1b6:	je     0x40b1d7
  40b1b8:	mov    eax,DWORD PTR [rsi]
  40b1ba:	test   eax,eax
  40b1bc:	je     0x40b1b0
  40b1be:	lea    rcx,[rip+0x3679a]        # 0x44195f
  40b1c5:	mov    edx,0x1
  40b1ca:	add    edi,0x1
  40b1cd:	call   0x40a1f0
  40b1d2:	cmp    edi,r13d
  40b1d5:	jne    0x40b1b8
  40b1d7:	mov    rcx,QWORD PTR [rip+0x461fa]        # 0x4513d8
  40b1de:	lea    rdx,[rip+0x3677a]        # 0x44195f
  40b1e5:	call   0x43a608
  40b1ea:	mov    ecx,eax
  40b1ec:	call   0x40a7d0
  40b1f1:	mov    rax,QWORD PTR [rsp+0x40]
  40b1f6:	add    rax,0x2
  40b1fa:	cmp    QWORD PTR [rsp+0x48],rax
  40b1ff:	ja     0x40b24f
  40b201:	cmp    QWORD PTR [rsp+0x38],0x0
  40b207:	je     0x40b233
  40b209:	movabs rax,0x1555555555555554
  40b213:	cmp    QWORD PTR [rsp+0x48],rax
  40b218:	ja     0x40b9c9
  40b21e:	mov    rdi,QWORD PTR [rsp+0x48]
  40b223:	mov    rax,rdi
  40b226:	shr    rax,1
  40b229:	lea    rax,[rax+rdi*1+0x1]
  40b22e:	mov    QWORD PTR [rsp+0x48],rax
  40b233:	mov    rax,QWORD PTR [rsp+0x48]
  40b238:	mov    rcx,QWORD PTR [rsp+0x38]
  40b23d:	lea    rdx,[rax*8+0x0]
  40b245:	call   0x422820
  40b24a:	mov    QWORD PTR [rsp+0x38],rax
  40b24f:	mov    rax,QWORD PTR [rsp+0x40]
  40b254:	mov    rdi,QWORD PTR [rsp+0x38]
  40b259:	mov    QWORD PTR [rdi+rax*8],rbp
  40b25d:	mov    QWORD PTR [rdi+rax*8+0x8],0x0
  40b266:	add    rax,0x1
  40b26a:	mov    rcx,QWORD PTR [rip+0x46167]        # 0x4513d8
  40b271:	mov    QWORD PTR [rsp+0x40],rax
  40b276:	jmp    0x40aca7
  40b27b:	mov    rdx,rcx
  40b27e:	lea    rcx,[rip+0x4857b]        # 0x453800
  40b285:	movsxd r8,edi
  40b288:	call   0x40a1b0
  40b28d:	mov    edx,DWORD PTR [rip+0x46125]        # 0x4513b8
  40b293:	mov    r8,QWORD PTR [rip+0x4613e]        # 0x4513d8
  40b29a:	mov    rax,QWORD PTR [rsp+0x68]
  40b29f:	mov    r11d,DWORD PTR [rip+0x4613a]        # 0x4513e0
  40b2a6:	sub    edx,edi
  40b2a8:	sub    rax,r8
  40b2ab:	test   r11d,r11d
  40b2ae:	mov    DWORD PTR [rip+0x46104],edx        # 0x4513b8
  40b2b4:	je     0x40afa7
  40b2ba:	movsxd rcx,eax
  40b2bd:	add    eax,edx
  40b2bf:	add    rcx,r8
  40b2c2:	mov    DWORD PTR [rip+0x460f0],eax        # 0x4513b8
  40b2c8:	mov    QWORD PTR [rip+0x46109],rcx        # 0x4513d8
  40b2cf:	mov    rcx,QWORD PTR [rsi]
  40b2d2:	jmp    0x40ac93
  40b2d7:	mov    rcx,QWORD PTR [rsp+0xc8]
  40b2df:	mov    DWORD PTR [rip+0x460f7],0x1        # 0x4513e0
  40b2e9:	call   0x409d40
  40b2ee:	mov    rax,QWORD PTR [r15+0x18]
  40b2f2:	mov    QWORD PTR [rip+0x460df],rax        # 0x4513d8
  40b2f9:	jmp    0x40ac73
  40b2fe:	lea    rdx,[rip+0x36658]        # 0x44195d
  40b305:	mov    r8d,0x1
  40b30b:	call   0x408ec0
  40b310:	add    r12d,eax
  40b313:	jmp    0x40aeb9
  40b318:	xor    edi,edi
  40b31a:	jmp    0x40add0
  40b31f:	mov    rax,QWORD PTR [rip+0x460b2]        # 0x4513d8
  40b326:	sub    rax,QWORD PTR [rip+0x460a3]        # 0x4513d0
  40b32d:	mov    ecx,0x1
  40b332:	mov    DWORD PTR [rbp+0x1c],eax
  40b335:	call   0x40a7d0
  40b33a:	cmp    DWORD PTR [rbp+0x24],0x1
  40b33e:	jne    0x40b031
  40b344:	mov    r12d,DWORD PTR [rip+0x484a5]        # 0x4537f0
  40b34b:	test   r12d,r12d
  40b34e:	je     0x40b031
  40b354:	lea    rcx,[rip+0x36604]        # 0x44195f
  40b35b:	mov    edx,0x1
  40b360:	call   0x40a1f0
  40b365:	mov    r12,QWORD PTR [rip+0x4606c]        # 0x4513d8
  40b36c:	cmp    BYTE PTR [r12],0x3a
  40b371:	jne    0x40b043
  40b377:	mov    rcx,QWORD PTR [rbp+0x0]
  40b37b:	call   0x4095c0
  40b380:	mov    r13,QWORD PTR [rbp+0x0]
  40b384:	mov    rcx,r13
  40b387:	call   0x43a620
  40b38c:	cmp    eax,0x1
  40b38f:	mov    edx,eax
  40b391:	jg     0x40b056
  40b397:	jmp    0x40b065
  40b39c:	nop    DWORD PTR [rax+0x0]
  40b3a0:	cmp    QWORD PTR [rsp+0xc8],0x0
  40b3a9:	je     0x40aad8
  40b3af:	cmp    QWORD PTR [rsp+0xd0],0x0
  40b3b8:	je     0x40aad8
  40b3be:	mov    rax,QWORD PTR [rsp+0xd0]
  40b3c6:	lea    rcx,[rax+0x8]
  40b3ca:	mov    rax,QWORD PTR [rax+0x8]
  40b3ce:	test   rax,rax
  40b3d1:	je     0x40aad8
  40b3d7:	mov    r8d,DWORD PTR [rax+0x40]
  40b3db:	test   r8d,r8d
  40b3de:	jne    0x40aad8
  40b3e4:	mov    r8d,DWORD PTR [rip+0x45fcd]        # 0x4513b8
  40b3eb:	jmp    0x40b3fb
  40b3ed:	nop    DWORD PTR [rax]
  40b3f0:	mov    edx,DWORD PTR [rax+0x40]
  40b3f3:	test   edx,edx
  40b3f5:	jne    0x40aad8
  40b3fb:	mov    edx,DWORD PTR [rax+0x10]
  40b3fe:	add    rcx,0x8
  40b402:	sub    edx,r8d
  40b405:	mov    DWORD PTR [rax+0x14],edx
  40b408:	mov    rax,QWORD PTR [rcx]
  40b40b:	test   rax,rax
  40b40e:	jne    0x40b3f0
  40b410:	jmp    0x40aad8
  40b415:	call   0x412de0
  40b41a:	mov    r13,QWORD PTR [rip+0x45fb7]        # 0x4513d8
  40b421:	movsxd rcx,eax
  40b424:	xor    eax,eax
  40b426:	mov    rdi,rcx
  40b429:	add    rcx,r13
  40b42c:	cmp    BYTE PTR [rcx],0x28
  40b42f:	je     0x40b843
  40b435:	add    edi,eax
  40b437:	lea    rdx,[rip+0x36521]        # 0x44195f
  40b43e:	movsxd rcx,edi
  40b441:	add    rcx,r13
  40b444:	call   0x43a608
  40b449:	add    edi,eax
  40b44b:	lea    r9,[rbp+0x10]
  40b44f:	lea    rdx,[rip+0x3651f]        # 0x441975
  40b456:	movsxd rcx,edi
  40b459:	mov    r8d,0x2
  40b45f:	add    rcx,r13
  40b462:	call   0x408ec0
  40b467:	mov    r9,QWORD PTR [rip+0x45f6a]        # 0x4513d8
  40b46e:	lea    r12d,[rdi+rax*1]
  40b472:	mov    r13d,DWORD PTR [r15+0x2c]
  40b476:	movsxd rax,r12d
  40b479:	cmp    BYTE PTR [r9+rax*1],0x2e
  40b47e:	sete   al
  40b481:	xor    edi,edi
  40b483:	movzx  eax,al
  40b486:	add    r12d,eax
  40b489:	test   r13d,0x400
  40b490:	je     0x40b4c5
  40b492:	mov    rcx,QWORD PTR [rip+0x45f37]        # 0x4513d0
  40b499:	mov    rdi,r9
  40b49c:	mov    edx,0xa
  40b4a1:	mov    QWORD PTR [rsp+0x50],r9
  40b4a6:	sub    rdi,rcx
  40b4a9:	mov    r8,rdi
  40b4ac:	call   0x424110
  40b4b1:	test   rax,rax
  40b4b4:	je     0x40b4c5
  40b4b6:	mov    r9,QWORD PTR [rsp+0x50]
  40b4bb:	add    rax,0x1
  40b4bf:	mov    rdi,r9
  40b4c2:	sub    rdi,rax
  40b4c5:	and    r13d,0x200
  40b4cc:	mov    ecx,r12d
  40b4cf:	jne    0x40b5e3
  40b4d5:	call   0x40a7d0
  40b4da:	test   BYTE PTR [r15+0x2d],0x4
  40b4df:	je     0x40b503
  40b4e1:	mov    r13,QWORD PTR [rip+0x45ef0]        # 0x4513d8
  40b4e8:	lea    rdx,[rip+0x36470]        # 0x44195f
  40b4ef:	mov    rcx,r13
  40b4f2:	call   0x43a608
  40b4f7:	cmp    BYTE PTR [r13+rax*1+0x0],0xa
  40b4fd:	je     0x40b963
  40b503:	xor    edi,edi
  40b505:	test   r12d,r12d
  40b508:	jg     0x40b518
  40b50a:	jmp    0x40b537
  40b50c:	nop    DWORD PTR [rax+0x0]
  40b510:	add    edi,0x1
  40b513:	cmp    edi,r12d
  40b516:	je     0x40b537
  40b518:	mov    eax,DWORD PTR [rsi]
  40b51a:	test   eax,eax
  40b51c:	je     0x40b510
  40b51e:	lea    rcx,[rip+0x3643a]        # 0x44195f
  40b525:	mov    edx,0x1
  40b52a:	add    edi,0x1
  40b52d:	call   0x40a1f0
  40b532:	cmp    edi,r12d
  40b535:	jne    0x40b518
  40b537:	mov    rsi,QWORD PTR [rip+0x45e9a]        # 0x4513d8
  40b53e:	jmp    0x40b5ef
  40b543:	mov    rcx,QWORD PTR [r15+0x8]
  40b547:	mov    QWORD PTR [rip+0x45e6e],0x0        # 0x4513c0
  40b552:	test   rcx,rcx
  40b555:	jne    0x40a8a0
  40b55b:	mov    rax,QWORD PTR [rsp+0xc8]
  40b563:	mov    rcx,QWORD PTR [rax+0x40]
  40b567:	jmp    0x40a8b2
  40b56c:	lea    rcx,[rip+0x363e6]        # 0x441959
  40b573:	mov    edx,0x3
  40b578:	call   0x40a1f0
  40b57d:	jmp    0x40ae60
  40b582:	mov    rsi,QWORD PTR [rip+0x45e4f]        # 0x4513d8
  40b589:	jmp    0x40aa81
  40b58e:	mov    ecx,0x6
  40b593:	call   0x40a320
  40b598:	jmp    0x40aecc
  40b59d:	cmp    BYTE PTR [rax],0x2e
  40b5a0:	jne    0x40b172
  40b5a6:	mov    ecx,0x1
  40b5ab:	call   0x40a7d0
  40b5b0:	mov    rcx,QWORD PTR [rip+0x45e21]        # 0x4513d8
  40b5b7:	jmp    0x40b172
  40b5bc:	mov    r8d,0x9
  40b5c2:	lea    rdx,[rip+0x36373]        # 0x44193c
  40b5c9:	mov    rcx,rbx
  40b5cc:	call   rdi
  40b5ce:	test   eax,eax
  40b5d0:	jne    0x40b858
  40b5d6:	add    rbx,0x9
  40b5da:	lea    r14,[r15+0x40]
  40b5de:	jmp    0x40a9d8
  40b5e3:	call   0x40a320
  40b5e8:	mov    rsi,QWORD PTR [rip+0x45de9]        # 0x4513d8
  40b5ef:	mov    rcx,rsi
  40b5f2:	call   0x412de0
  40b5f7:	movsxd r12,eax
  40b5fa:	add    r12,rsi
  40b5fd:	cmp    BYTE PTR [r12],0xa
  40b602:	je     0x40b80a
  40b608:	lea    rdi,[rip+0x3636b]        # 0x44197a
  40b60f:	mov    ecx,0x6
  40b614:	mov    rsi,r12
  40b617:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b619:	je     0x40b7f3
  40b61f:	mov    DWORD PTR [rbp+0x20],0x0
  40b626:	jmp    0x40b1f1
  40b62b:	lea    rcx,[rip+0x36334]        # 0x441966
  40b632:	mov    edx,0x1
  40b637:	call   0x40a1f0
  40b63c:	mov    r12,QWORD PTR [rbp+0x8]
  40b640:	mov    rcx,r12
  40b643:	call   0x43a620
  40b648:	mov    edx,DWORD PTR [rip+0x481a2]        # 0x4537f0
  40b64e:	test   edx,edx
  40b650:	je     0x40b677
  40b652:	mov    edx,eax
  40b654:	mov    rcx,r12
  40b657:	call   0x40a1f0
  40b65c:	mov    eax,DWORD PTR [rip+0x4818e]        # 0x4537f0
  40b662:	test   eax,eax
  40b664:	je     0x40b677
  40b666:	lea    rcx,[rip+0x362fb]        # 0x441968
  40b66d:	mov    edx,0x8
  40b672:	call   0x40a1f0
  40b677:	mov    rax,QWORD PTR [rip+0x45d5a]        # 0x4513d8
  40b67e:	test   edi,edi
  40b680:	mov    rcx,rax
  40b683:	je     0x40b172
  40b689:	jmp    0x40b59d
  40b68e:	lea    rcx,[rip+0x362cf]        # 0x441964
  40b695:	mov    edx,0x1
  40b69a:	call   0x40a1f0
  40b69f:	jmp    0x40b1a7
  40b6a4:	mov    QWORD PTR [rip+0x45d11],0x0        # 0x4513c0
  40b6af:	jmp    0x40a8d4
  40b6b4:	xor    edx,edx
  40b6b6:	call   0x408dd0
  40b6bb:	cdqe   
  40b6bd:	mov    rcx,QWORD PTR [rip+0x45d14]        # 0x4513d8
  40b6c4:	mov    r12,rax
  40b6c7:	jmp    0x40ae92
  40b6cc:	mov    ecx,0x1
  40b6d1:	call   0x40a7d0
  40b6d6:	cmp    DWORD PTR [rbp+0x24],0x1
  40b6da:	je     0x40b8c6
  40b6e0:	mov    rcx,QWORD PTR [rip+0x45c91]        # 0x451378
  40b6e7:	test   rcx,rcx
  40b6ea:	je     0x40b6f5
  40b6ec:	call   0x422a00
  40b6f1:	mov    QWORD PTR [rbp+0x8],rax
  40b6f5:	mov    rcx,QWORD PTR [rip+0x45c74]        # 0x451370
  40b6fc:	test   rcx,rcx
  40b6ff:	je     0x40b1f1
  40b705:	call   0x422a00
  40b70a:	mov    QWORD PTR [rbp+0x10],rax
  40b70e:	jmp    0x40b1f1
  40b713:	mov    rcx,r13
  40b716:	mov    edx,0x7f
  40b71b:	call   0x43a650
  40b720:	sub    r13,rax
  40b723:	lea    rdx,[rax+0x1]
  40b727:	mov    rcx,rax
  40b72a:	lea    r8,[r12+r13*1-0x1]
  40b72f:	call   0x43a6b0
  40b734:	mov    rax,QWORD PTR [rbp+0x0]
  40b738:	mov    BYTE PTR [rax+r12*1-0x2],0x0
  40b73e:	jmp    0x40b065
  40b743:	lea    rcx,[rax+0x1]
  40b747:	call   0x412de0
  40b74c:	mov    rcx,QWORD PTR [rbp+0x10]
  40b750:	mov    r13d,eax
  40b753:	call   0x409490
  40b758:	cmp    QWORD PTR [rbp+0x8],0x0
  40b75d:	je     0x40b940
  40b763:	mov    ecx,DWORD PTR [rsp+0x5c]
  40b767:	sub    ecx,r13d
  40b76a:	mov    edx,ecx
  40b76c:	mov    eax,ecx
  40b76e:	shr    edx,0x1f
  40b771:	add    eax,edx
  40b773:	sar    eax,1
  40b775:	cdqe   
  40b777:	add    r12,rax
  40b77a:	cmp    QWORD PTR [rsp+0x50],r12
  40b77f:	jae    0x40b129
  40b785:	mov    r10d,DWORD PTR [rip+0x48064]        # 0x4537f0
  40b78c:	test   r10d,r10d
  40b78f:	jne    0x40b8b0
  40b795:	xor    r12d,r12d
  40b798:	test   r13d,r13d
  40b79b:	jg     0x40b7a9
  40b79d:	jmp    0x40b7cb
  40b79f:	nop
  40b7a0:	add    r12d,0x1
  40b7a4:	cmp    r12d,r13d
  40b7a7:	je     0x40b7cb
  40b7a9:	mov    r9d,DWORD PTR [rsi]
  40b7ac:	test   r9d,r9d
  40b7af:	je     0x40b7a0
  40b7b1:	lea    rcx,[rip+0x361a7]        # 0x44195f
  40b7b8:	mov    edx,0x1
  40b7bd:	add    r12d,0x1
  40b7c1:	call   0x40a1f0
  40b7c6:	cmp    r12d,r13d
  40b7c9:	jne    0x40b7a9
  40b7cb:	mov    rcx,QWORD PTR [rip+0x45c06]        # 0x4513d8
  40b7d2:	lea    rdx,[rip+0x36186]        # 0x44195f
  40b7d9:	call   0x43a608
  40b7de:	mov    ecx,eax
  40b7e0:	call   0x40a7d0
  40b7e5:	mov    QWORD PTR [rsp+0x50],0x0
  40b7ee:	jmp    0x40b152
  40b7f3:	lea    rcx,[r12+0x6]
  40b7f8:	xor    r8d,r8d
  40b7fb:	xor    edx,edx
  40b7fd:	call   0x43a5f8
  40b802:	mov    DWORD PTR [rbp+0x20],eax
  40b805:	jmp    0x40b1f1
  40b80a:	lea    rcx,[r12+0x1]
  40b80f:	call   0x412de0
  40b814:	add    eax,0x1
  40b817:	cdqe   
  40b819:	add    r12,rax
  40b81c:	jmp    0x40b608
  40b821:	lea    rdx,[rbp+0x8]
  40b825:	mov    DWORD PTR [rsp+0x50],r8d
  40b82a:	call   0x408dd0
  40b82f:	mov    rdx,QWORD PTR [rip+0x45ba2]        # 0x4513d8
  40b836:	mov    r13d,eax
  40b839:	mov    r8d,DWORD PTR [rsp+0x50]
  40b83e:	jmp    0x40b0a5
  40b843:	lea    rdx,[rbp+0x8]
  40b847:	call   0x408dd0
  40b84c:	mov    r13,QWORD PTR [rip+0x45b85]        # 0x4513d8
  40b853:	jmp    0x40b435
  40b858:	mov    r8d,0x5
  40b85e:	lea    rdx,[rip+0x360e1]        # 0x441946
  40b865:	mov    rcx,rbx
  40b868:	call   rdi
  40b86a:	test   eax,eax
  40b86c:	jne    0x40b910
  40b872:	add    rbx,0x5
  40b876:	lea    r14,[r15+0x48]
  40b87a:	jmp    0x40a9d8
  40b87f:	test   edi,edi
  40b881:	je     0x40b8ec
  40b883:	mov    rcx,QWORD PTR [rip+0x45b4e]        # 0x4513d8
  40b88a:	cmp    BYTE PTR [rcx],0x2e
  40b88d:	je     0x40b5a6
  40b893:	lea    rdx,[rip+0x360d7]        # 0x441971
  40b89a:	call   0x43a608
  40b89f:	mov    ecx,eax
  40b8a1:	call   0x40a320
  40b8a6:	jmp    0x40b1f1
  40b8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8b0:	lea    rcx,[rip+0x360ad]        # 0x441964
  40b8b7:	mov    edx,0x1
  40b8bc:	call   0x40a1f0
  40b8c1:	jmp    0x40b795
  40b8c6:	mov    r11d,DWORD PTR [rip+0x47f23]        # 0x4537f0
  40b8cd:	test   r11d,r11d
  40b8d0:	je     0x40b6e0
  40b8d6:	lea    rcx,[rip+0x36082]        # 0x44195f
  40b8dd:	mov    edx,0x1
  40b8e2:	call   0x40a1f0
  40b8e7:	jmp    0x40b6e0
  40b8ec:	mov    rcx,QWORD PTR [rip+0x45ae5]        # 0x4513d8
  40b8f3:	lea    rdx,[rip+0x36077]        # 0x441971
  40b8fa:	call   0x43a608
  40b8ff:	mov    ecx,eax
  40b901:	call   0x40a320
  40b906:	jmp    0x40b1f1
  40b90b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b910:	mov    r8d,0x3
  40b916:	lea    rdx,[rip+0x3602f]        # 0x44194c
  40b91d:	mov    rcx,rbx
  40b920:	call   rdi
  40b922:	test   eax,eax
  40b924:	jne    0x40a947
  40b92a:	add    rbx,0x3
  40b92e:	lea    r14,[r15+0x38]
  40b932:	jmp    0x40a9d8
  40b937:	nop    WORD PTR [rax+rax*1+0x0]
  40b940:	test   edi,edi
  40b942:	jne    0x40b9a1
  40b944:	mov    rcx,QWORD PTR [rip+0x45a8d]        # 0x4513d8
  40b94b:	lea    rdx,[rip+0x3601f]        # 0x441971
  40b952:	call   0x43a608
  40b957:	mov    ecx,eax
  40b959:	call   0x40a320
  40b95e:	jmp    0x40b18d
  40b963:	mov    ecx,eax
  40b965:	call   0x40a7d0
  40b96a:	mov    rsi,QWORD PTR [rip+0x45a67]        # 0x4513d8
  40b971:	lea    rdx,[rip+0x35fe7]        # 0x44195f
  40b978:	lea    rcx,[rsi+0x1]
  40b97c:	call   0x43a608
  40b981:	movsxd rdx,edi
  40b984:	cmp    rdx,rax
  40b987:	ja     0x40b5ef
  40b98d:	lea    ecx,[rdi+0x1]
  40b990:	call   0x40a7d0
  40b995:	mov    rsi,QWORD PTR [rip+0x45a3c]        # 0x4513d8
  40b99c:	jmp    0x40b5ef
  40b9a1:	mov    rcx,QWORD PTR [rip+0x45a30]        # 0x4513d8
  40b9a8:	cmp    BYTE PTR [rcx],0x2e
  40b9ab:	je     0x40b5a6
  40b9b1:	lea    rdx,[rip+0x35fb9]        # 0x441971
  40b9b8:	call   0x43a608
  40b9bd:	mov    ecx,eax
  40b9bf:	call   0x40a320
  40b9c4:	jmp    0x40b18d
  40b9c9:	call   0x422a20
  40b9ce:	mov    DWORD PTR [rbp+0x24],0x1
  40b9d5:	add    DWORD PTR [rbp+0x18],0x1
  40b9d9:	jmp    0x40af32
  40b9de:	xor    edx,edx
  40b9e0:	mov    rcx,rbp
  40b9e3:	call   0x408dd0
  40b9e8:	lea    rdx,[rip+0x35fab]        # 0x44199a
  40b9ef:	movsxd rcx,eax
  40b9f2:	mov    r9,r12
  40b9f5:	mov    rbx,rcx
  40b9f8:	mov    r8d,0x1
  40b9fe:	add    rcx,rbp
  40ba01:	call   0x408ec0
  40ba06:	lea    esi,[rbx+rax*1]
  40ba09:	jmp    0x40aa0a
  40ba0e:	xchg   ax,ax
  40ba10:	push   rdi
  40ba11:	push   rsi
  40ba12:	push   rbx
  40ba13:	sub    rsp,0x20
  40ba17:	mov    rdi,rcx
  40ba1a:	mov    ebx,edx
  40ba1c:	mov    rdx,r8
  40ba1f:	mov    rsi,r8
  40ba22:	call   0x40a100
  40ba27:	mov    rax,QWORD PTR [rdi+0x10]
  40ba2b:	mov    r9,rax
  40ba2e:	add    r9,QWORD PTR [rdi]
  40ba31:	test   rsi,rsi
  40ba34:	je     0x40ba51
  40ba36:	lea    r11,[r9+rsi*1]
  40ba3a:	mov    r10d,ebx
  40ba3d:	nop    DWORD PTR [rax]
  40ba40:	add    r9,0x1
  40ba44:	mov    BYTE PTR [r9-0x1],r10b
  40ba48:	cmp    r9,r11
  40ba4b:	jne    0x40ba40
  40ba4d:	mov    rax,QWORD PTR [rdi+0x10]
  40ba51:	add    rax,rsi
  40ba54:	mov    QWORD PTR [rdi+0x10],rax
  40ba58:	mov    rax,rsi
  40ba5b:	add    rsp,0x20
  40ba5f:	pop    rbx
  40ba60:	pop    rsi
  40ba61:	pop    rdi
  40ba62:	ret    
  40ba63:	nop    DWORD PTR [rax]
  40ba66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba70:	sub    rsp,0x38
  40ba74:	mov    r8d,0x1
  40ba7a:	mov    BYTE PTR [rsp+0x2f],dl
  40ba7e:	lea    rdx,[rsp+0x2f]
  40ba83:	call   0x40a1b0
  40ba88:	nop
  40ba89:	add    rsp,0x38
  40ba8d:	ret    
  40ba8e:	xchg   ax,ax
  40ba90:	sub    rsp,0x38
  40ba94:	mov    QWORD PTR [rsp+0x50],r8
  40ba99:	lea    r8,[rsp+0x50]
  40ba9e:	mov    QWORD PTR [rsp+0x58],r9
  40baa3:	mov    QWORD PTR [rsp+0x28],r8
  40baa8:	call   0x40a030
  40baad:	add    rsp,0x38
  40bab1:	ret    
  40bab2:	nop    DWORD PTR [rax+0x0]
  40bab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bac0:	push   r13
  40bac2:	push   r12
  40bac4:	push   rbp
  40bac5:	push   rdi
  40bac6:	push   rsi
  40bac7:	push   rbx
  40bac8:	sub    rsp,0x98
  40bacf:	cmp    BYTE PTR [rcx+0x28],0x0
  40bad3:	mov    rdi,QWORD PTR [rcx+0x20]
  40bad7:	mov    rbx,rcx
  40bada:	mov    r13,rdx
  40badd:	mov    r12,r9
  40bae0:	mov    rbp,QWORD PTR [rsp+0xf0]
  40bae8:	mov    rsi,QWORD PTR [rcx+0x18]
  40baec:	mov    QWORD PTR [rsp+0x88],rdi
  40baf4:	mov    QWORD PTR [rip+0x45901],0x0        # 0x451400
  40baff:	jne    0x40bba0
  40bb05:	cmp    rdi,0x1
  40bb09:	je     0x40bbd0
  40bb0f:	movzx  ebx,BYTE PTR [rsi]
  40bb12:	movsx  ecx,bl
  40bb15:	call   QWORD PTR [rip+0x48f45]        # 0x454a60
  40bb1b:	test   eax,eax
  40bb1d:	je     0x40bb28
  40bb1f:	cmp    bl,0x7e
  40bb22:	jbe    0x40bc82
  40bb28:	cmp    bl,0x7f
  40bb2b:	je     0x40bb70
  40bb2d:	mov    QWORD PTR [r12],0x4
  40bb35:	mov    QWORD PTR [rbp+0x0],0x4
  40bb3d:	lea    rdx,[rip+0x35e5b]        # 0x44199f
  40bb44:	movzx  r8d,BYTE PTR [rsi]
  40bb48:	lea    rcx,[rip+0x458a1]        # 0x4513f0
  40bb4f:	call   0x40ba90
  40bb54:	mov    rax,QWORD PTR [rip+0x45895]        # 0x4513f0
  40bb5b:	add    rsp,0x98
  40bb62:	pop    rbx
  40bb63:	pop    rsi
  40bb64:	pop    rdi
  40bb65:	pop    rbp
  40bb66:	pop    r12
  40bb68:	pop    r13
  40bb6a:	ret    
  40bb6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb70:	mov    rax,QWORD PTR [rip+0x45879]        # 0x4513f0
  40bb77:	mov    QWORD PTR [r12],0x0
  40bb7f:	mov    QWORD PTR [rbp+0x0],0x0
  40bb87:	add    rsp,0x98
  40bb8e:	pop    rbx
  40bb8f:	pop    rsi
  40bb90:	pop    rdi
  40bb91:	pop    rbp
  40bb92:	pop    r12
  40bb94:	pop    r13
  40bb96:	ret    
  40bb97:	nop    WORD PTR [rax+rax*1+0x0]
  40bba0:	movzx  ecx,WORD PTR [rcx+0x2a]
  40bba4:	mov    edx,0x157
  40bba9:	mov    QWORD PTR [rsp+0x28],r8
  40bbae:	call   0x43a6e0
  40bbb3:	test   eax,eax
  40bbb5:	jne    0x40bc30
  40bbb7:	mov    rdi,QWORD PTR [rsp+0x88]
  40bbbf:	mov    r8,QWORD PTR [rsp+0x28]
  40bbc4:	cmp    rdi,0x1
  40bbc8:	jne    0x40bb0f
  40bbce:	xchg   ax,ax
  40bbd0:	movzx  eax,BYTE PTR [rsi]
  40bbd3:	cmp    al,0xd
  40bbd5:	je     0x40bc60
  40bbdb:	cmp    al,0xa
  40bbdd:	jne    0x40bce5
  40bbe3:	mov    QWORD PTR [r12],0x1
  40bbeb:	mov    QWORD PTR [rbp+0x0],0x1
  40bbf3:	lea    rdx,[rsp+0x87]
  40bbfb:	movsx  eax,BYTE PTR [rsi]
  40bbfe:	lea    rcx,[rip+0x457eb]        # 0x4513f0
  40bc05:	mov    r8d,0x1
  40bc0b:	mov    BYTE PTR [rsp+0x87],0x20
  40bc13:	mov    DWORD PTR [r13+0x0],eax
  40bc17:	call   0x40a1b0
  40bc1c:	mov    rax,rsi
  40bc1f:	add    rsp,0x98
  40bc26:	pop    rbx
  40bc27:	pop    rsi
  40bc28:	pop    rdi
  40bc29:	pop    rbp
  40bc2a:	pop    r12
  40bc2c:	pop    r13
  40bc2e:	ret    
  40bc2f:	nop
  40bc30:	movzx  ecx,WORD PTR [rbx+0x2a]
  40bc34:	call   0x41e160
  40bc39:	cdqe   
  40bc3b:	mov    QWORD PTR [r12],rax
  40bc3f:	mov    rax,QWORD PTR [rsp+0x88]
  40bc47:	mov    QWORD PTR [rbp+0x0],rax
  40bc4b:	mov    rax,rsi
  40bc4e:	add    rsp,0x98
  40bc55:	pop    rbx
  40bc56:	pop    rsi
  40bc57:	pop    rdi
  40bc58:	pop    rbp
  40bc59:	pop    r12
  40bc5b:	pop    r13
  40bc5d:	ret    
  40bc5e:	xchg   ax,ax
  40bc60:	cmp    BYTE PTR [rsi+0x1],0xa
  40bc64:	jne    0x40bbe3
  40bc6a:	mov    QWORD PTR [r12],0x0
  40bc72:	mov    rax,rsi
  40bc75:	mov    QWORD PTR [rbp+0x0],0x0
  40bc7d:	jmp    0x40bb5b
  40bc82:	lea    rbx,[rsp+0x87]
  40bc8a:	lea    rcx,[rip+0x4575f]        # 0x4513f0
  40bc91:	mov    QWORD PTR [r12],0x2
  40bc99:	mov    r8d,0x1
  40bc9f:	mov    QWORD PTR [rbp+0x0],0x2
  40bca7:	mov    BYTE PTR [rsp+0x87],0x5e
  40bcaf:	mov    rdx,rbx
  40bcb2:	call   0x40a1b0
  40bcb7:	movzx  eax,BYTE PTR [rsi]
  40bcba:	lea    rcx,[rip+0x4572f]        # 0x4513f0
  40bcc1:	mov    r8d,0x1
  40bcc7:	mov    rdx,rbx
  40bcca:	or     eax,0x40
  40bccd:	mov    BYTE PTR [rsp+0x87],al
  40bcd4:	call   0x40a1b0
  40bcd9:	mov    rax,QWORD PTR [rip+0x45710]        # 0x4513f0
  40bce0:	jmp    0x40bb5b
  40bce5:	mov    rax,QWORD PTR [rbx]
  40bce8:	lea    rdx,[rsp+0x88]
  40bcf0:	lea    rcx,[rsp+0x30]
  40bcf5:	mov    QWORD PTR [rsp+0x28],r8
  40bcfa:	mov    QWORD PTR [rsp+0x30],rax
  40bcff:	mov    rax,QWORD PTR [rbx+0x8]
  40bd03:	mov    QWORD PTR [rsp+0x38],rax
  40bd08:	mov    rax,QWORD PTR [rbx+0x10]
  40bd0c:	mov    QWORD PTR [rsp+0x40],rax
  40bd11:	mov    rax,QWORD PTR [rbx+0x18]
  40bd15:	mov    QWORD PTR [rsp+0x48],rax
  40bd1a:	mov    rax,QWORD PTR [rbx+0x20]
  40bd1e:	mov    QWORD PTR [rsp+0x50],rax
  40bd23:	mov    rax,QWORD PTR [rbx+0x28]
  40bd27:	mov    QWORD PTR [rsp+0x58],rax
  40bd2c:	mov    rax,QWORD PTR [rbx+0x30]
  40bd30:	mov    QWORD PTR [rsp+0x60],rax
  40bd35:	mov    rax,QWORD PTR [rbx+0x38]
  40bd39:	mov    QWORD PTR [rsp+0x68],rax
  40bd3e:	mov    rax,QWORD PTR [rbx+0x40]
  40bd42:	mov    QWORD PTR [rsp+0x70],rax
  40bd47:	call   0x409680
  40bd4c:	test   eax,eax
  40bd4e:	mov    r8,QWORD PTR [rsp+0x28]
  40bd53:	jne    0x40bdc0
  40bd55:	movzx  ebx,BYTE PTR [rsi]
  40bd58:	cmp    bl,0x9
  40bd5b:	jne    0x40bb12
  40bd61:	lea    rax,[r8+0x8]
  40bd65:	lea    rbx,[rsp+0x87]
  40bd6d:	and    eax,0xf8
  40bd72:	sub    rax,r8
  40bd75:	test   rax,rax
  40bd78:	mov    QWORD PTR [r12],rax
  40bd7c:	mov    QWORD PTR [rbp+0x0],rax
  40bd80:	jne    0x40bd93
  40bd82:	jmp    0x40bb54
  40bd87:	nop    WORD PTR [rax+rax*1+0x0]
  40bd90:	mov    rdi,rax
  40bd93:	lea    rcx,[rip+0x45656]        # 0x4513f0
  40bd9a:	mov    r8d,0x1
  40bda0:	mov    rdx,rbx
  40bda3:	mov    BYTE PTR [rsp+0x87],0x20
  40bdab:	call   0x40a1b0
  40bdb0:	cmp    rdi,QWORD PTR [rbp+0x0]
  40bdb4:	lea    rax,[rdi+0x1]
  40bdb8:	jb     0x40bd90
  40bdba:	jmp    0x40bb54
  40bdbf:	nop
  40bdc0:	mov    rax,QWORD PTR [rsp+0x88]
  40bdc8:	mov    QWORD PTR [r12],0x0
  40bdd0:	mov    QWORD PTR [rbp+0x0],rax
  40bdd4:	mov    QWORD PTR [rbx+0x20],rax
  40bdd8:	mov    rax,rsi
  40bddb:	jmp    0x40bb5b
  40bde0:	push   r13
  40bde2:	push   r12
  40bde4:	push   rbp
  40bde5:	push   rdi
  40bde6:	push   rsi
  40bde7:	push   rbx
  40bde8:	sub    rsp,0x28
  40bdec:	mov    r13,QWORD PTR [rip+0x48d9d]        # 0x454b90
  40bdf3:	mov    rbp,rcx
  40bdf6:	mov    rdi,rdx
  40bdf9:	jmp    0x40be08
  40bdfb:	nop    DWORD PTR [rax+rax*1+0x0]
  40be00:	add    rbp,0x1
  40be04:	add    rdi,0x1
  40be08:	movsx  ecx,BYTE PTR [rbp+0x0]
  40be0c:	mov    ebx,ecx
  40be0e:	call   r13
  40be11:	movsx  ecx,BYTE PTR [rdi]
  40be14:	mov    r12d,eax
  40be17:	mov    esi,ecx
  40be19:	call   r13
  40be1c:	cmp    r12d,eax
  40be1f:	je     0x40be37
  40be21:	cmp    bl,0x5c
  40be24:	je     0x40be2b
  40be26:	cmp    bl,0x2f
  40be29:	jne    0x40be50
  40be2b:	cmp    sil,0x5c
  40be2f:	je     0x40be37
  40be31:	cmp    sil,0x2f
  40be35:	jne    0x40be50
  40be37:	test   bl,bl
  40be39:	jne    0x40be00
  40be3b:	xor    eax,eax
  40be3d:	add    rsp,0x28
  40be41:	pop    rbx
  40be42:	pop    rsi
  40be43:	pop    rdi
  40be44:	pop    rbp
  40be45:	pop    r12
  40be47:	pop    r13
  40be49:	ret    
  40be4a:	nop    WORD PTR [rax+rax*1+0x0]
  40be50:	sub    r12d,eax
  40be53:	mov    eax,r12d
  40be56:	add    rsp,0x28
  40be5a:	pop    rbx
  40be5b:	pop    rsi
  40be5c:	pop    rdi
  40be5d:	pop    rbp
  40be5e:	pop    r12
  40be60:	pop    r13
  40be62:	ret    
  40be63:	nop    DWORD PTR [rax]
  40be66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be70:	push   rdi
  40be71:	push   rsi
  40be72:	push   rbx
  40be73:	sub    rsp,0x20
  40be77:	mov    rbx,QWORD PTR [rcx]
  40be7a:	mov    rdi,rcx
  40be7d:	mov    rsi,rdx
  40be80:	test   rbx,rbx
  40be83:	jne    0x40be98
  40be85:	jmp    0x40beb5
  40be87:	nop    WORD PTR [rax+rax*1+0x0]
  40be90:	mov    rbx,QWORD PTR [rbx]
  40be93:	test   rbx,rbx
  40be96:	je     0x40beb5
  40be98:	lea    rcx,[rbx+0x8]
  40be9c:	mov    rdx,rsi
  40be9f:	call   0x40bde0
  40bea4:	test   eax,eax
  40bea6:	jne    0x40be90
  40bea8:	mov    eax,0x1
  40bead:	add    rsp,0x20
  40beb1:	pop    rbx
  40beb2:	pop    rsi
  40beb3:	pop    rdi
  40beb4:	ret    
  40beb5:	mov    rcx,rsi
  40beb8:	call   0x43a620
  40bebd:	lea    rcx,[rax+0x10]
  40bec1:	call   0x4227b0
  40bec6:	lea    rcx,[rax+0x8]
  40beca:	mov    rdx,rsi
  40becd:	mov    rbx,rax
  40bed0:	call   0x43a640
  40bed5:	mov    rax,QWORD PTR [rdi]
  40bed8:	mov    QWORD PTR [rdi],rbx
  40bedb:	mov    QWORD PTR [rbx],rax
  40bede:	xor    eax,eax
  40bee0:	add    rsp,0x20
  40bee4:	pop    rbx
  40bee5:	pop    rsi
  40bee6:	pop    rdi
  40bee7:	ret    
  40bee8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bef0:	push   rbx
  40bef1:	sub    rsp,0x20
  40bef5:	test   rcx,rcx
  40bef8:	je     0x40bf10
  40befa:	nop    WORD PTR [rax+rax*1+0x0]
  40bf00:	mov    rbx,QWORD PTR [rcx]
  40bf03:	call   0x43a748
  40bf08:	test   rbx,rbx
  40bf0b:	mov    rcx,rbx
  40bf0e:	jne    0x40bf00
  40bf10:	add    rsp,0x20
  40bf14:	pop    rbx
  40bf15:	ret    
  40bf16:	nop
  40bf17:	nop
  40bf18:	nop
  40bf19:	nop
  40bf1a:	nop
  40bf1b:	nop
  40bf1c:	nop
  40bf1d:	nop
  40bf1e:	nop
  40bf1f:	nop
  40bf20:	push   r13
  40bf22:	push   r12
  40bf24:	push   rbp
  40bf25:	push   rdi
  40bf26:	push   rsi
  40bf27:	push   rbx
  40bf28:	sub    rsp,0x28
  40bf2c:	mov    r13,QWORD PTR [rip+0x3dcdd]        # 0x449c10
  40bf33:	mov    rbx,QWORD PTR [r13+0x0]
  40bf37:	test   rbx,rbx
  40bf3a:	je     0x40c082
  40bf40:	mov    ebp,0x5
  40bf45:	mov    r12d,0x12
  40bf4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf50:	mov    rax,QWORD PTR [rbx+0x20]
  40bf54:	test   rax,rax
  40bf57:	je     0x40bfa7
  40bf59:	mov    rcx,QWORD PTR [rax]
  40bf5c:	test   rcx,rcx
  40bf5f:	je     0x40bfa7
  40bf61:	call   0x409e60
  40bf66:	lea    rcx,[rip+0x36eaa]        # 0x442e17
  40bf6d:	mov    rdx,rax
  40bf70:	call   0x4213b0
  40bf75:	test   eax,eax
  40bf77:	jne    0x40bfa7
  40bf79:	mov    rax,QWORD PTR [rbx+0x20]
  40bf7d:	lea    rdi,[rip+0x36e8e]        # 0x442e12
  40bf84:	mov    rcx,rbp
  40bf87:	mov    rax,QWORD PTR [rax+0x10]
  40bf8b:	mov    rsi,rax
  40bf8e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40bf90:	je     0x40c020
  40bf96:	lea    rdi,[rip+0x36e63]        # 0x442e00
  40bf9d:	mov    rsi,rax
  40bfa0:	mov    rcx,r12
  40bfa3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40bfa5:	je     0x40c020
  40bfa7:	mov    rbx,QWORD PTR [rbx]
  40bfaa:	test   rbx,rbx
  40bfad:	jne    0x40bf50
  40bfaf:	mov    rax,QWORD PTR [r13+0x0]
  40bfb3:	cmp    QWORD PTR [rax],0x0
  40bfb7:	je     0x40c037
  40bfb9:	lea    rcx,[rip+0x36e5c]        # 0x442e1c
  40bfc0:	call   0x409fa0
  40bfc5:	mov    rsi,QWORD PTR [rip+0x3d824]        # 0x4497f0
  40bfcc:	test   rax,rax
  40bfcf:	mov    rcx,QWORD PTR [rsi]
  40bfd2:	je     0x40bfdd
  40bfd4:	cmp    rax,rcx
  40bfd7:	je     0x40c0ae
  40bfdd:	cmp    DWORD PTR [rcx+0x14],0x18
  40bfe1:	lea    rax,[rip+0x36e18]        # 0x442e00
  40bfe8:	lea    rbx,[rip+0x36e23]        # 0x442e12
  40bfef:	lea    rcx,[rip+0x36e21]        # 0x442e17
  40bff6:	cmovl  rbx,rax
  40bffa:	mov    rdx,rbx
  40bffd:	call   0x4124d0
  40c002:	test   rax,rax
  40c005:	je     0x40c043
  40c007:	mov    rcx,QWORD PTR [rsi]
  40c00a:	mov    rdx,rax
  40c00d:	add    rsp,0x28
  40c011:	pop    rbx
  40c012:	pop    rsi
  40c013:	pop    rdi
  40c014:	pop    rbp
  40c015:	pop    r12
  40c017:	pop    r13
  40c019:	jmp    0x415020
  40c01e:	xchg   ax,ax
  40c020:	mov    rax,QWORD PTR [rip+0x3d7c9]        # 0x4497f0
  40c027:	mov    QWORD PTR [rax],rbx
  40c02a:	add    rsp,0x28
  40c02e:	pop    rbx
  40c02f:	pop    rsi
  40c030:	pop    rdi
  40c031:	pop    rbp
  40c032:	pop    r12
  40c034:	pop    r13
  40c036:	ret    
  40c037:	mov    rsi,QWORD PTR [rip+0x3d7b2]        # 0x4497f0
  40c03e:	mov    rcx,QWORD PTR [rsi]
  40c041:	jmp    0x40bfdd
  40c043:	lea    rdx,[rip+0x36dde]        # 0x442e28
  40c04a:	lea    rcx,[rip+0x36ddb]        # 0x442e2c
  40c051:	call   0x4124d0
  40c056:	test   rax,rax
  40c059:	jne    0x40c007
  40c05b:	mov    rax,QWORD PTR [rip+0x3d93e]        # 0x4499a0
  40c062:	mov    rdx,QWORD PTR [rax]
  40c065:	test   rdx,rdx
  40c068:	je     0x40c089
  40c06a:	lea    rcx,[rip+0x36dc5]        # 0x442e36
  40c071:	add    rsp,0x28
  40c075:	pop    rbx
  40c076:	pop    rsi
  40c077:	pop    rdi
  40c078:	pop    rbp
  40c079:	pop    r12
  40c07b:	pop    r13
  40c07d:	jmp    0x4144d0
  40c082:	xor    eax,eax
  40c084:	jmp    0x40bfb3
  40c089:	mov    rax,QWORD PTR [rip+0x3d9c0]        # 0x449a50
  40c090:	lea    rdx,[rip+0x36d80]        # 0x442e17
  40c097:	mov    r8,rbx
  40c09a:	mov    rcx,QWORD PTR [rax]
  40c09d:	add    rsp,0x28
  40c0a1:	pop    rbx
  40c0a2:	pop    rsi
  40c0a3:	pop    rdi
  40c0a4:	pop    rbp
  40c0a5:	pop    r12
  40c0a7:	pop    r13
  40c0a9:	jmp    0x4144d0
  40c0ae:	call   0x416d80
  40c0b3:	mov    rcx,QWORD PTR [rsi]
  40c0b6:	jmp    0x40bfdd
  40c0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0c0:	mov    rax,QWORD PTR [rcx+0x8]
  40c0c4:	ret    
  40c0c5:	nop
  40c0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c0d0:	push   rbp
  40c0d1:	push   rdi
  40c0d2:	push   rsi
  40c0d3:	push   rbx
  40c0d4:	sub    rsp,0x28
  40c0d8:	mov    rdi,QWORD PTR [rip+0x3d821]        # 0x449900
  40c0df:	cmp    QWORD PTR [rdi],0x0
  40c0e3:	je     0x40c130
  40c0e5:	mov    rbp,rcx
  40c0e8:	xor    esi,esi
  40c0ea:	xor    eax,eax
  40c0ec:	jmp    0x40c104
  40c0ee:	xchg   ax,ax
  40c0f0:	add    esi,0x1
  40c0f3:	movsxd rax,esi
  40c0f6:	mov    r8,rax
  40c0f9:	shl    r8,0x5
  40c0fd:	cmp    QWORD PTR [rdi+r8*1],0x0
  40c102:	je     0x40c130
  40c104:	shl    rax,0x5
  40c108:	mov    rdx,rbp
  40c10b:	lea    rbx,[rdi+rax*1]
  40c10f:	mov    rcx,QWORD PTR [rbx+0x8]
  40c113:	call   0x43a648
  40c118:	test   eax,eax
  40c11a:	jne    0x40c0f0
  40c11c:	mov    rax,rbx
  40c11f:	add    rsp,0x28
  40c123:	pop    rbx
  40c124:	pop    rsi
  40c125:	pop    rdi
  40c126:	pop    rbp
  40c127:	ret    
  40c128:	nop    DWORD PTR [rax+rax*1+0x0]
  40c130:	xor    eax,eax
  40c132:	add    rsp,0x28
  40c136:	pop    rbx
  40c137:	pop    rsi
  40c138:	pop    rdi
  40c139:	pop    rbp
  40c13a:	ret    
  40c13b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c140:	push   rbx
  40c141:	sub    rsp,0x40
  40c145:	cmp    ecx,0x10e
  40c14b:	jg     0x40c1d0
  40c151:	cmp    ecx,0x1f
  40c154:	jg     0x40c190
  40c156:	cmp    ecx,0xa
  40c159:	lea    rax,[rip+0x36cea]        # 0x442e4a
  40c160:	je     0x40c184
  40c162:	jle    0x40c230
  40c168:	cmp    ecx,0xd
  40c16b:	lea    rax,[rip+0x36ccf]        # 0x442e41
  40c172:	je     0x40c184
  40c174:	cmp    ecx,0x1b
  40c177:	lea    rax,[rip+0x36cbf]        # 0x442e3d
  40c17e:	jne    0x40c240
  40c184:	add    rsp,0x40
  40c188:	pop    rbx
  40c189:	ret    
  40c18a:	nop    WORD PTR [rax+rax*1+0x0]
  40c190:	cmp    ecx,0xff
  40c196:	jg     0x40c210
  40c198:	cmp    ecx,0x20
  40c19b:	lea    rax,[rip+0x36cb6]        # 0x442e58
  40c1a2:	je     0x40c184
  40c1a4:	cmp    ecx,0x7f
  40c1a7:	lea    rax,[rip+0x36ca6]        # 0x442e54
  40c1ae:	je     0x40c184
  40c1b0:	mov    BYTE PTR [rip+0x4532a],cl        # 0x4514e0
  40c1b6:	mov    BYTE PTR [rip+0x45324],0x0        # 0x4514e1
  40c1bd:	lea    rax,[rip+0x4531c]        # 0x4514e0
  40c1c4:	jmp    0x40c184
  40c1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1d0:	sub    ecx,0x10f
  40c1d6:	lea    rbx,[rsp+0x20]
  40c1db:	call   0x40c140
  40c1e0:	lea    rdx,[rip+0x36cb8]        # 0x442e9f
  40c1e7:	mov    r8,rax
  40c1ea:	mov    rcx,rbx
  40c1ed:	call   0x433f00
  40c1f2:	lea    rcx,[rip+0x452e7]        # 0x4514e0
  40c1f9:	mov    rdx,rbx
  40c1fc:	call   0x43a640
  40c201:	lea    rax,[rip+0x452d8]        # 0x4514e0
  40c208:	add    rsp,0x40
  40c20c:	pop    rbx
  40c20d:	ret    
  40c20e:	xchg   ax,ax
  40c210:	sub    ecx,0x100
  40c216:	cmp    ecx,0xe
  40c219:	ja     0x40c330
  40c21f:	lea    rax,[rip+0x36c86]        # 0x442eac
  40c226:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c22a:	add    rax,rdx
  40c22d:	jmp    rax
  40c22f:	nop
  40c230:	cmp    ecx,0x9
  40c233:	lea    rax,[rip+0x36bff]        # 0x442e39
  40c23a:	je     0x40c184
  40c240:	or     ecx,0x40
  40c243:	call   QWORD PTR [rip+0x48947]        # 0x454b90
  40c249:	lea    rdx,[rip+0x36c54]        # 0x442ea4
  40c250:	lea    rcx,[rip+0x45289]        # 0x4514e0
  40c257:	mov    r8d,eax
  40c25a:	call   0x433f00
  40c25f:	lea    rax,[rip+0x4527a]        # 0x4514e0
  40c266:	jmp    0x40c184
  40c26b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c270:	lea    rax,[rip+0x36bd7]        # 0x442e4e
  40c277:	jmp    0x40c184
  40c27c:	nop    DWORD PTR [rax+0x0]
  40c280:	lea    rax,[rip+0x36be3]        # 0x442e6a
  40c287:	jmp    0x40c184
  40c28c:	nop    DWORD PTR [rax+0x0]
  40c290:	lea    rax,[rip+0x36be1]        # 0x442e78
  40c297:	jmp    0x40c184
  40c29c:	nop    DWORD PTR [rax+0x0]
  40c2a0:	lea    rax,[rip+0x36bd9]        # 0x442e80
  40c2a7:	jmp    0x40c184
  40c2ac:	nop    DWORD PTR [rax+0x0]
  40c2b0:	lea    rax,[rip+0x36b9d]        # 0x442e54
  40c2b7:	jmp    0x40c184
  40c2bc:	nop    DWORD PTR [rax+0x0]
  40c2c0:	lea    rax,[rip+0x36bbd]        # 0x442e84
  40c2c7:	jmp    0x40c184
  40c2cc:	nop    DWORD PTR [rax+0x0]
  40c2d0:	lea    rax,[rip+0x36bb1]        # 0x442e88
  40c2d7:	jmp    0x40c184
  40c2dc:	nop    DWORD PTR [rax+0x0]
  40c2e0:	lea    rax,[rip+0x36ba6]        # 0x442e8d
  40c2e7:	jmp    0x40c184
  40c2ec:	nop    DWORD PTR [rax+0x0]
  40c2f0:	lea    rax,[rip+0x36b9b]        # 0x442e92
  40c2f7:	jmp    0x40c184
  40c2fc:	nop    DWORD PTR [rax+0x0]
  40c300:	lea    rax,[rip+0x36b90]        # 0x442e97
  40c307:	jmp    0x40c184
  40c30c:	nop    DWORD PTR [rax+0x0]
  40c310:	lea    rax,[rip+0x36b85]        # 0x442e9c
  40c317:	jmp    0x40c184
  40c31c:	nop    DWORD PTR [rax+0x0]
  40c320:	lea    rax,[rip+0x36b1e]        # 0x442e45
  40c327:	jmp    0x40c184
  40c32c:	nop    DWORD PTR [rax+0x0]
  40c330:	lea    rax,[rip+0x36b25]        # 0x442e5c
  40c337:	jmp    0x40c184
  40c33c:	nop    DWORD PTR [rax+0x0]
  40c340:	push   rbx
  40c341:	sub    rsp,0x20
  40c345:	cmp    QWORD PTR [rip+0x45173],0x0        # 0x4514c0
  40c34d:	mov    rbx,rcx
  40c350:	je     0x40c3b5
  40c352:	mov    QWORD PTR [rip+0x45173],0x0        # 0x4514d0
  40c35d:	mov    ecx,DWORD PTR [rbx]
  40c35f:	lea    rax,[rip+0x36b82]        # 0x442ee8
  40c366:	test   ecx,ecx
  40c368:	jne    0x40c383
  40c36a:	jmp    0x40c3af
  40c36c:	nop    DWORD PTR [rax+0x0]
  40c370:	lea    rcx,[rip+0x45149]        # 0x4514c0
  40c377:	mov    edx,0x20
  40c37c:	call   0x40ba70
  40c381:	mov    ecx,DWORD PTR [rbx]
  40c383:	call   0x40c140
  40c388:	lea    rdx,[rip+0x36aa7]        # 0x442e36
  40c38f:	lea    rcx,[rip+0x4512a]        # 0x4514c0
  40c396:	add    rbx,0x4
  40c39a:	mov    r8,rax
  40c39d:	call   0x40ba90
  40c3a2:	mov    eax,DWORD PTR [rbx]
  40c3a4:	test   eax,eax
  40c3a6:	jne    0x40c370
  40c3a8:	mov    rax,QWORD PTR [rip+0x45111]        # 0x4514c0
  40c3af:	add    rsp,0x20
  40c3b3:	pop    rbx
  40c3b4:	ret    
  40c3b5:	lea    rcx,[rip+0x45104]        # 0x4514c0
  40c3bc:	call   0x40a000
  40c3c1:	jmp    0x40c35d
  40c3c3:	nop    DWORD PTR [rax]
  40c3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c3d0:	test   rdx,rdx
  40c3d3:	jne    0x40c3e8
  40c3d5:	jmp    0x40c400
  40c3d7:	nop    WORD PTR [rax+rax*1+0x0]
  40c3e0:	mov    rdx,QWORD PTR [rdx]
  40c3e3:	test   rdx,rdx
  40c3e6:	je     0x40c400
  40c3e8:	cmp    QWORD PTR [rdx+0x8],rcx
  40c3ec:	jne    0x40c3e0
  40c3ee:	mov    rcx,QWORD PTR [rdx+0x10]
  40c3f2:	jmp    0x40c340
  40c3f7:	nop    WORD PTR [rax+rax*1+0x0]
  40c400:	xor    eax,eax
  40c402:	ret    
  40c403:	nop    DWORD PTR [rax]
  40c406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c410:	push   rdi
  40c411:	push   rsi
  40c412:	push   rbx
  40c413:	sub    rsp,0x20
  40c417:	mov    eax,DWORD PTR [rip+0x450e3]        # 0x451500
  40c41d:	mov    rdi,rcx
  40c420:	mov    rsi,rdx
  40c423:	test   eax,eax
  40c425:	je     0x40c450
  40c427:	mov    rdx,QWORD PTR [rsi+0x10]
  40c42b:	mov    rcx,rdi
  40c42e:	mov    DWORD PTR [rip+0x450cc],0x0        # 0x451504
  40c438:	call   0x40c3d0
  40c43d:	test   rax,rax
  40c440:	mov    rbx,rax
  40c443:	je     0x40c470
  40c445:	mov    rax,rbx
  40c448:	add    rsp,0x20
  40c44c:	pop    rbx
  40c44d:	pop    rsi
  40c44e:	pop    rdi
  40c44f:	ret    
  40c450:	mov    ecx,0x64
  40c455:	mov    DWORD PTR [rip+0x450a1],0x64        # 0x451500
  40c45f:	call   0x4227b0
  40c464:	mov    QWORD PTR [rip+0x4509d],rax        # 0x451508
  40c46b:	jmp    0x40c427
  40c46d:	nop    DWORD PTR [rax]
  40c470:	mov    rbx,QWORD PTR [rsi+0x8]
  40c474:	test   rbx,rbx
  40c477:	je     0x40c445
  40c479:	mov    rax,QWORD PTR [rip+0x3d480]        # 0x449900
  40c480:	mov    rcx,rdi
  40c483:	mov    rdx,QWORD PTR [rax+0xd50]
  40c48a:	call   0x40c3d0
  40c48f:	test   rax,rax
  40c492:	mov    r8,rax
  40c495:	je     0x40c4c0
  40c497:	mov    rcx,QWORD PTR [rip+0x4506a]        # 0x451508
  40c49e:	lea    rdx,[rip+0x36a44]        # 0x442ee9
  40c4a5:	mov    r9,rbx
  40c4a8:	call   0x433f00
  40c4ad:	mov    rbx,QWORD PTR [rip+0x45054]        # 0x451508
  40c4b4:	mov    rax,rbx
  40c4b7:	add    rsp,0x20
  40c4bb:	pop    rbx
  40c4bc:	pop    rsi
  40c4bd:	pop    rdi
  40c4be:	ret    
  40c4bf:	nop
  40c4c0:	lea    rbx,[rip+0x36a21]        # 0x442ee8
  40c4c7:	jmp    0x40c445
  40c4cc:	nop    DWORD PTR [rax+0x0]
  40c4d0:	push   r15
  40c4d2:	push   r14
  40c4d4:	push   r13
  40c4d6:	push   r12
  40c4d8:	push   rbp
  40c4d9:	push   rdi
  40c4da:	push   rsi
  40c4db:	push   rbx
  40c4dc:	sub    rsp,0x68
  40c4e0:	mov    r13,rcx
  40c4e3:	mov    DWORD PTR [rsp+0xb8],edx
  40c4ea:	call   0x43a620
  40c4ef:	mov    rcx,QWORD PTR [rip+0x44fba]        # 0x4514b0
  40c4f6:	mov    rbx,rax
  40c4f9:	mov    DWORD PTR [rsp+0x44],eax
  40c4fd:	call   0x43a748
  40c502:	lea    ecx,[rbx+0x1]
  40c505:	call   0x4227b0
  40c50a:	movzx  ecx,BYTE PTR [r13+0x0]
  40c50f:	mov    QWORD PTR [rip+0x44f9a],rax        # 0x4514b0
  40c516:	test   cl,cl
  40c518:	je     0x40cbcb
  40c51e:	mov    rax,QWORD PTR [rip+0x3d42b]        # 0x449950
  40c525:	xor    r8d,r8d
  40c528:	mov    DWORD PTR [rsp+0x40],0x0
  40c530:	xor    r15d,r15d
  40c533:	xor    edi,edi
  40c535:	mov    QWORD PTR [rsp+0x48],rax
  40c53a:	mov    rax,QWORD PTR [rip+0x3d3bf]        # 0x449900
  40c541:	add    rax,0x9a0
  40c547:	mov    QWORD PTR [rsp+0x50],rax
  40c54c:	jmp    0x40c568
  40c54e:	xchg   ax,ax
  40c550:	movsxd r8,esi
  40c553:	movsxd rbx,r15d
  40c556:	mov    edi,esi
  40c558:	lea    rbp,[r13+r8*1+0x0]
  40c55d:	add    rbx,r13
  40c560:	movzx  ecx,BYTE PTR [rbp+0x0]
  40c564:	test   cl,cl
  40c566:	je     0x40c5c2
  40c568:	cmp    cl,0x5c
  40c56b:	lea    esi,[rdi+0x1]
  40c56e:	jne    0x40c550
  40c570:	movsxd r14,esi
  40c573:	lea    rbp,[r13+r14*1+0x0]
  40c578:	movzx  eax,BYTE PTR [rbp+0x0]
  40c57c:	cmp    al,0x25
  40c57e:	je     0x40c5f0
  40c580:	mov    ebx,esi
  40c582:	mov    DWORD PTR [rsp+0x28],0x0
  40c58a:	mov    DWORD PTR [rsp+0x20],0x0
  40c592:	xor    r12d,r12d
  40c595:	cmp    al,0x5b
  40c597:	je     0x40c630
  40c59d:	movsxd rbx,r15d
  40c5a0:	mov    r8,r14
  40c5a3:	mov    edi,esi
  40c5a5:	add    rbx,r13
  40c5a8:	mov    rcx,r12
  40c5ab:	mov    QWORD PTR [rsp+0x20],r8
  40c5b0:	call   0x43a748
  40c5b5:	movzx  ecx,BYTE PTR [rbp+0x0]
  40c5b9:	mov    r8,QWORD PTR [rsp+0x20]
  40c5be:	test   cl,cl
  40c5c0:	jne    0x40c568
  40c5c2:	movsxd rcx,DWORD PTR [rsp+0x40]
  40c5c7:	mov    rsi,QWORD PTR [rip+0x44ee2]        # 0x4514b0
  40c5ce:	add    rcx,rsi
  40c5d1:	mov    rdx,rbx
  40c5d4:	call   0x43a640
  40c5d9:	mov    rax,rsi
  40c5dc:	add    rsp,0x68
  40c5e0:	pop    rbx
  40c5e1:	pop    rsi
  40c5e2:	pop    rdi
  40c5e3:	pop    rbp
  40c5e4:	pop    r12
  40c5e6:	pop    r13
  40c5e8:	pop    r14
  40c5ea:	pop    r15
  40c5ec:	ret    
  40c5ed:	nop    DWORD PTR [rax]
  40c5f0:	lea    ebx,[rdi+0x2]
  40c5f3:	movsxd rdx,ebx
  40c5f6:	lea    r9,[r13+rdx*1+0x0]
  40c5fb:	mov    r12,rdx
  40c5fe:	movsx  eax,BYTE PTR [r9]
  40c602:	cmp    al,0x2d
  40c604:	je     0x40ca13
  40c60a:	sub    eax,0x30
  40c60d:	cmp    eax,0x9
  40c610:	jbe    0x40c940
  40c616:	movsxd rbx,r15d
  40c619:	mov    r8,r14
  40c61c:	mov    edi,esi
  40c61e:	add    rbx,r13
  40c621:	xor    r12d,r12d
  40c624:	jmp    0x40c5a8
  40c629:	nop    DWORD PTR [rax+0x0]
  40c630:	mov    esi,DWORD PTR [rsp+0x40]
  40c634:	sub    edi,r15d
  40c637:	movsxd rdx,r15d
  40c63a:	add    rdx,r13
  40c63d:	movsxd r8,edi
  40c640:	movsxd rcx,esi
  40c643:	add    rcx,QWORD PTR [rip+0x44e66]        # 0x4514b0
  40c64a:	add    edi,esi
  40c64c:	call   0x43a610
  40c651:	mov    DWORD PTR [rsp+0x40],edi
  40c655:	lea    edi,[rbx+0x1]
  40c658:	movsxd rbp,edi
  40c65b:	lea    rsi,[r13+rbp*1+0x0]
  40c660:	movsx  eax,BYTE PTR [rsi]
  40c663:	mov    edx,eax
  40c665:	sub    eax,0x30
  40c668:	cmp    eax,0x9
  40c66b:	jbe    0x40c872
  40c671:	cmp    dl,0x2d
  40c674:	mov    DWORD PTR [rsp+0x30],0x0
  40c67c:	je     0x40c860
  40c682:	cmp    dl,0x5d
  40c685:	je     0x40cb4b
  40c68b:	test   dl,dl
  40c68d:	je     0x40cb4b
  40c693:	movsxd rbp,edi
  40c696:	lea    rax,[r13+rbp*1+0x1]
  40c69b:	mov    r14d,edi
  40c69e:	jmp    0x40c6a4
  40c6a0:	test   dl,dl
  40c6a2:	je     0x40c6b7
  40c6a4:	movzx  edx,BYTE PTR [rax]
  40c6a7:	add    r14d,0x1
  40c6ab:	mov    rbp,rax
  40c6ae:	add    rax,0x1
  40c6b2:	cmp    dl,0x5d
  40c6b5:	jne    0x40c6a0
  40c6b7:	mov    ebx,r14d
  40c6ba:	sub    ebx,edi
  40c6bc:	movsxd rbx,ebx
  40c6bf:	lea    r15d,[r14+0x1]
  40c6c3:	mov    ecx,r15d
  40c6c6:	sub    ecx,edi
  40c6c8:	lea    rdi,[rip+0x3684d]        # 0x442f1c
  40c6cf:	movsxd rcx,ecx
  40c6d2:	call   0x4227b0
  40c6d7:	mov    rdx,rsi
  40c6da:	mov    rcx,rax
  40c6dd:	mov    r8,rbx
  40c6e0:	mov    QWORD PTR [rsp+0x38],rax
  40c6e5:	call   0x43a610
  40c6ea:	mov    r10,QWORD PTR [rsp+0x38]
  40c6ef:	mov    ecx,0xa
  40c6f4:	mov    BYTE PTR [r10+rbx*1],0x0
  40c6f9:	mov    rsi,r10
  40c6fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c6fe:	mov    rcx,r10
  40c701:	seta   dl
  40c704:	setb   al
  40c707:	cmp    dl,al
  40c709:	jne    0x40c728
  40c70b:	mov    r8d,DWORD PTR [rsp+0xb8]
  40c713:	lea    rcx,[rip+0x367d5]        # 0x442eef
  40c71a:	lea    rax,[rip+0x367de]        # 0x442eff
  40c721:	test   r8d,r8d
  40c724:	cmovne rcx,rax
  40c728:	mov    QWORD PTR [rsp+0x38],r10
  40c72d:	call   0x40c0d0
  40c732:	mov    r10,QWORD PTR [rsp+0x38]
  40c737:	mov    rbx,rax
  40c73a:	mov    rcx,r10
  40c73d:	call   0x43a748
  40c742:	test   rbx,rbx
  40c745:	je     0x40cbd8
  40c74b:	mov    ecx,DWORD PTR [rsp+0x30]
  40c74f:	test   ecx,ecx
  40c751:	jne    0x40c8c0
  40c757:	mov    rax,QWORD PTR [rip+0x3d1f2]        # 0x449950
  40c75e:	mov    rdx,rbx
  40c761:	mov    rcx,QWORD PTR [rax]
  40c764:	call   0x40c410
  40c769:	test   rax,rax
  40c76c:	mov    QWORD PTR [rsp+0x30],rax
  40c771:	je     0x40cac2
  40c777:	xor    edi,edi
  40c779:	mov    rcx,QWORD PTR [rsp+0x30]
  40c77e:	call   0x43a620
  40c783:	test   rdi,rdi
  40c786:	mov    ebx,eax
  40c788:	je     0x40cad3
  40c78e:	mov    rcx,rdi
  40c791:	call   0x43a620
  40c796:	lea    ecx,[rbx+rax*1+0x1]
  40c79a:	mov    rbx,rcx
  40c79d:	call   0x4227b0
  40c7a2:	mov    rdx,rdi
  40c7a5:	mov    rcx,rax
  40c7a8:	mov    rsi,rax
  40c7ab:	call   0x4323b0
  40c7b0:	mov    edx,0x20
  40c7b5:	mov    rcx,rdi
  40c7b8:	mov    WORD PTR [rax],dx
  40c7bb:	call   0x43a748
  40c7c0:	mov    rdx,QWORD PTR [rsp+0x30]
  40c7c5:	mov    rcx,rsi
  40c7c8:	call   0x43a658
  40c7cd:	test   r12,r12
  40c7d0:	je     0x40caf0
  40c7d6:	mov    eax,DWORD PTR [rsp+0x28]
  40c7da:	cmp    ebx,eax
  40c7dc:	cmova  ebx,eax
  40c7df:	mov    eax,DWORD PTR [rsp+0x20]
  40c7e3:	cmp    ebx,eax
  40c7e5:	cmovb  ebx,eax
  40c7e8:	add    ebx,DWORD PTR [rsp+0x40]
  40c7ec:	cmp    DWORD PTR [rsp+0x44],ebx
  40c7f0:	jb     0x40ca30
  40c7f6:	mov    rcx,QWORD PTR [rip+0x44cb3]        # 0x4514b0
  40c7fd:	movsxd rdi,DWORD PTR [rsp+0x40]
  40c802:	mov    r8,rsi
  40c805:	mov    rdx,r12
  40c808:	add    rcx,rdi
  40c80b:	call   0x433f00
  40c810:	mov    rbx,QWORD PTR [rip+0x44c99]        # 0x4514b0
  40c817:	mov    rcx,rbx
  40c81a:	call   0x43a620
  40c81f:	mov    rcx,rsi
  40c822:	mov    DWORD PTR [rsp+0x40],eax
  40c826:	call   0x43a748
  40c82b:	cmp    BYTE PTR [rbp+0x0],0x0
  40c82f:	movsxd r8,r15d
  40c832:	lea    rbp,[r13+r8*1+0x0]
  40c837:	jne    0x40c850
  40c839:	movsxd rbx,r14d
  40c83c:	mov    edi,r15d
  40c83f:	mov    r15d,r14d
  40c842:	add    rbx,r13
  40c845:	jmp    0x40c5a8
  40c84a:	nop    WORD PTR [rax+rax*1+0x0]
  40c850:	mov    rbx,rbp
  40c853:	mov    edi,r15d
  40c856:	jmp    0x40c5a8
  40c85b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c860:	movsx  eax,BYTE PTR [r13+rbp*1+0x1]
  40c866:	sub    eax,0x30
  40c869:	cmp    eax,0x9
  40c86c:	ja     0x40c696
  40c872:	mov    rcx,rsi
  40c875:	call   0x43a7a8
  40c87a:	movzx  edx,BYTE PTR [rsi]
  40c87d:	mov    DWORD PTR [rsp+0x30],eax
  40c881:	cmp    dl,0x2d
  40c884:	je     0x40cb16
  40c88a:	movsx  eax,dl
  40c88d:	sub    eax,0x30
  40c890:	cmp    eax,0x9
  40c893:	ja     0x40c682
  40c899:	lea    rcx,[r13+rbp*1+0x1]
  40c89e:	xchg   ax,ax
  40c8a0:	movsx  eax,BYTE PTR [rcx]
  40c8a3:	add    edi,0x1
  40c8a6:	mov    rsi,rcx
  40c8a9:	lea    rcx,[rcx+0x1]
  40c8ad:	mov    edx,eax
  40c8af:	sub    eax,0x30
  40c8b2:	cmp    eax,0x9
  40c8b5:	jbe    0x40c8a0
  40c8b7:	jmp    0x40c682
  40c8bc:	nop    DWORD PTR [rax+0x0]
  40c8c0:	mov    rax,QWORD PTR [rsp+0x48]
  40c8c5:	mov    rdx,QWORD PTR [rsp+0x50]
  40c8ca:	mov    rcx,QWORD PTR [rax]
  40c8cd:	call   0x40c410
  40c8d2:	test   rax,rax
  40c8d5:	je     0x40cac2
  40c8db:	mov    rcx,rax
  40c8de:	mov    QWORD PTR [rsp+0x38],rax
  40c8e3:	call   0x43a620
  40c8e8:	mov    rdx,QWORD PTR [rsp+0x38]
  40c8ed:	lea    rsi,[rdx+rax*1-0x1]
  40c8f2:	lea    r10,[rdx-0x1]
  40c8f6:	cmp    rsi,r10
  40c8f9:	je     0x40cac2
  40c8ff:	movzx  r8d,BYTE PTR [rsi]
  40c903:	cmp    r8b,0x30
  40c907:	je     0x40ca55
  40c90d:	lea    rax,[rip+0x365f8]        # 0x442f0c
  40c914:	jmp    0x40c929
  40c916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c920:	cmp    r8b,cl
  40c923:	je     0x40ca55
  40c929:	add    rax,0x1
  40c92d:	movzx  ecx,BYTE PTR [rax]
  40c930:	test   cl,cl
  40c932:	jne    0x40c920
  40c934:	sub    rsi,0x1
  40c938:	jmp    0x40c8f6
  40c93a:	nop    WORD PTR [rax+rax*1+0x0]
  40c940:	mov    rcx,r9
  40c943:	mov    QWORD PTR [rsp+0x30],r8
  40c948:	mov    QWORD PTR [rsp+0x28],r9
  40c94d:	mov    QWORD PTR [rsp+0x38],rdx
  40c952:	call   0x43a7a8
  40c957:	mov    r9,QWORD PTR [rsp+0x28]
  40c95c:	mov    DWORD PTR [rsp+0x20],eax
  40c960:	mov    r8,QWORD PTR [rsp+0x30]
  40c965:	movsx  eax,BYTE PTR [r9]
  40c969:	mov    ecx,eax
  40c96b:	sub    eax,0x30
  40c96e:	cmp    eax,0x9
  40c971:	ja     0x40c99b
  40c973:	mov    rdx,QWORD PTR [rsp+0x38]
  40c978:	lea    r12,[rdx+0x1]
  40c97c:	jmp    0x40c983
  40c97e:	xchg   ax,ax
  40c980:	mov    r12,rdx
  40c983:	movsx  eax,BYTE PTR [r13+r12*1+0x0]
  40c989:	add    ebx,0x1
  40c98c:	lea    rdx,[r12+0x1]
  40c991:	mov    ecx,eax
  40c993:	sub    eax,0x30
  40c996:	cmp    eax,0x9
  40c999:	jbe    0x40c980
  40c99b:	cmp    cl,0x2e
  40c99e:	je     0x40cb58
  40c9a4:	movsxd r10,ebx
  40c9a7:	mov    DWORD PTR [rsp+0x28],0x0
  40c9af:	add    r10,r13
  40c9b2:	mov    r9d,ebx
  40c9b5:	mov    QWORD PTR [rsp+0x38],r10
  40c9ba:	mov    QWORD PTR [rsp+0x58],r8
  40c9bf:	sub    r9d,edi
  40c9c2:	lea    ecx,[r9+0x2]
  40c9c6:	mov    DWORD PTR [rsp+0x30],r9d
  40c9cb:	movsxd rcx,ecx
  40c9ce:	call   0x4227b0
  40c9d3:	movsxd r9,DWORD PTR [rsp+0x30]
  40c9d8:	mov    r8,QWORD PTR [rsp+0x58]
  40c9dd:	mov    rcx,rax
  40c9e0:	mov    r12,rax
  40c9e3:	lea    rdx,[r13+r8*1+0x1]
  40c9e8:	mov    r8,r9
  40c9eb:	mov    QWORD PTR [rsp+0x30],r9
  40c9f0:	call   0x43a610
  40c9f5:	mov    r9,QWORD PTR [rsp+0x30]
  40c9fa:	mov    r10,QWORD PTR [rsp+0x38]
  40c9ff:	mov    BYTE PTR [r12+r9*1-0x1],0x73
  40ca05:	mov    BYTE PTR [r12+r9*1],0x0
  40ca0a:	movzx  eax,BYTE PTR [r10]
  40ca0e:	jmp    0x40c595
  40ca13:	lea    ebx,[rdi+0x3]
  40ca16:	movsxd rdx,ebx
  40ca19:	lea    r9,[r13+rdx*1+0x0]
  40ca1e:	mov    r12,rdx
  40ca21:	movsx  eax,BYTE PTR [r9]
  40ca25:	jmp    0x40c60a
  40ca2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca30:	mov    rcx,QWORD PTR [rip+0x44a79]        # 0x4514b0
  40ca37:	lea    eax,[rbx+0x1]
  40ca3a:	lea    edx,[rbx+0x2]
  40ca3d:	mov    DWORD PTR [rsp+0x44],eax
  40ca41:	call   0x422820
  40ca46:	mov    QWORD PTR [rip+0x44a63],rax        # 0x4514b0
  40ca4d:	mov    rcx,rax
  40ca50:	jmp    0x40c7fd
  40ca55:	sub    rsi,rdx
  40ca58:	mov    QWORD PTR [rsp+0x38],rdx
  40ca5d:	lea    rcx,[rsi+0x15]
  40ca61:	call   0x4227b0
  40ca66:	mov    rdx,QWORD PTR [rsp+0x38]
  40ca6b:	mov    r8,rsi
  40ca6e:	mov    rcx,rax
  40ca71:	mov    rdi,rax
  40ca74:	call   0x43a610
  40ca79:	mov    r8d,DWORD PTR [rsp+0x30]
  40ca7e:	lea    rcx,[rdi+rsi*1]
  40ca82:	lea    rdx,[rip+0x3649d]        # 0x442f26
  40ca89:	call   0x433f00
  40ca8e:	mov    rax,QWORD PTR [rsp+0x48]
  40ca93:	mov    rdx,rbx
  40ca96:	mov    rcx,QWORD PTR [rax]
  40ca99:	call   0x40c410
  40ca9e:	test   rax,rax
  40caa1:	mov    QWORD PTR [rsp+0x30],rax
  40caa6:	jne    0x40c779
  40caac:	lea    rax,[rip+0x36465]        # 0x442f18
  40cab3:	mov    ebx,0x3
  40cab8:	mov    QWORD PTR [rsp+0x30],rax
  40cabd:	jmp    0x40c78e
  40cac2:	lea    rax,[rip+0x3644f]        # 0x442f18
  40cac9:	mov    ebx,0x3
  40cace:	mov    QWORD PTR [rsp+0x30],rax
  40cad3:	lea    ecx,[rbx+0x1]
  40cad6:	mov    rbx,rcx
  40cad9:	call   0x4227b0
  40cade:	mov    rsi,rax
  40cae1:	mov    BYTE PTR [rax],0x0
  40cae4:	jmp    0x40c7c0
  40cae9:	nop    DWORD PTR [rax+0x0]
  40caf0:	add    ebx,DWORD PTR [rsp+0x40]
  40caf4:	cmp    DWORD PTR [rsp+0x44],ebx
  40caf8:	jb     0x40cb29
  40cafa:	mov    rbx,QWORD PTR [rip+0x449af]        # 0x4514b0
  40cb01:	movsxd rcx,DWORD PTR [rsp+0x40]
  40cb06:	mov    rdx,rsi
  40cb09:	add    rcx,rbx
  40cb0c:	call   0x43a640
  40cb11:	jmp    0x40c817
  40cb16:	lea    edi,[rbx+0x2]
  40cb19:	movsxd rbp,edi
  40cb1c:	lea    rsi,[r13+rbp*1+0x0]
  40cb21:	movzx  edx,BYTE PTR [rsi]
  40cb24:	jmp    0x40c88a
  40cb29:	mov    rcx,QWORD PTR [rip+0x44980]        # 0x4514b0
  40cb30:	lea    eax,[rbx+0x1]
  40cb33:	lea    edx,[rbx+0x2]
  40cb36:	mov    DWORD PTR [rsp+0x44],eax
  40cb3a:	call   0x422820
  40cb3f:	mov    QWORD PTR [rip+0x4496a],rax        # 0x4514b0
  40cb46:	mov    rbx,rax
  40cb49:	jmp    0x40cb01
  40cb4b:	mov    rbp,rsi
  40cb4e:	mov    r14d,edi
  40cb51:	xor    ebx,ebx
  40cb53:	jmp    0x40c6bf
  40cb58:	movsx  eax,BYTE PTR [r13+r12*1+0x1]
  40cb5e:	sub    eax,0x30
  40cb61:	cmp    eax,0x9
  40cb64:	ja     0x40c9a4
  40cb6a:	add    ebx,0x1
  40cb6d:	mov    QWORD PTR [rsp+0x38],r8
  40cb72:	movsxd r12,ebx
  40cb75:	lea    r10,[r13+r12*1+0x0]
  40cb7a:	mov    rcx,r10
  40cb7d:	mov    QWORD PTR [rsp+0x30],r10
  40cb82:	call   0x43a7a8
  40cb87:	mov    r10,QWORD PTR [rsp+0x30]
  40cb8c:	mov    DWORD PTR [rsp+0x28],eax
  40cb90:	mov    r8,QWORD PTR [rsp+0x38]
  40cb95:	movsx  eax,BYTE PTR [r10]
  40cb99:	sub    eax,0x30
  40cb9c:	cmp    eax,0x9
  40cb9f:	ja     0x40c9b2
  40cba5:	lea    rdx,[r13+r12*1+0x1]
  40cbaa:	nop    WORD PTR [rax+rax*1+0x0]
  40cbb0:	mov    r10,rdx
  40cbb3:	add    ebx,0x1
  40cbb6:	add    rdx,0x1
  40cbba:	movsx  eax,BYTE PTR [r10]
  40cbbe:	sub    eax,0x30
  40cbc1:	cmp    eax,0x9
  40cbc4:	jbe    0x40cbb0
  40cbc6:	jmp    0x40c9b2
  40cbcb:	mov    rbx,r13
  40cbce:	mov    rsi,rax
  40cbd1:	xor    ecx,ecx
  40cbd3:	jmp    0x40c5ce
  40cbd8:	call   0x43a7b0
  40cbdd:	nop
  40cbde:	xchg   ax,ax
  40cbe0:	sub    rsp,0x28
  40cbe4:	mov    rcx,QWORD PTR [rcx+0x18]
  40cbe8:	cmp    BYTE PTR [rcx],0x0
  40cbeb:	je     0x40cbf5
  40cbed:	call   0x433f18
  40cbf2:	mov    rcx,rax
  40cbf5:	xor    edx,edx
  40cbf7:	add    rsp,0x28
  40cbfb:	jmp    0x40c4d0
  40cc00:	push   r15
  40cc02:	push   r14
  40cc04:	push   r13
  40cc06:	push   r12
  40cc08:	push   rbp
  40cc09:	push   rdi
  40cc0a:	push   rsi
  40cc0b:	push   rbx
  40cc0c:	sub    rsp,0x48
  40cc10:	lea    ebx,[r8+0x2]
  40cc14:	mov    rbp,rdx
  40cc17:	mov    rsi,rcx
  40cc1a:	mov    edi,r8d
  40cc1d:	mov    r12,r9
  40cc20:	movsxd rbx,ebx
  40cc23:	shl    rbx,0x2
  40cc27:	lea    r13,[rbx-0x8]
  40cc2b:	mov    rcx,rbx
  40cc2e:	call   0x4227b0
  40cc33:	mov    r8,r13
  40cc36:	mov    rdx,rbp
  40cc39:	mov    rcx,rax
  40cc3c:	mov    r14,rax
  40cc3f:	mov    QWORD PTR [rsp+0x30],rax
  40cc44:	call   0x43a6b8
  40cc49:	lea    eax,[rdi+0x1]
  40cc4c:	mov    DWORD PTR [r14+rbx*1-0x4],0x0
  40cc55:	add    r13,r14
  40cc58:	xor    ebx,ebx
  40cc5a:	mov    DWORD PTR [rsp+0x3c],eax
  40cc5e:	xchg   ax,ax
  40cc60:	cmp    ebx,0x80
  40cc66:	je     0x40ce60
  40cc6c:	cmp    ebx,0x18f
  40cc72:	je     0x40ce21
  40cc78:	movsxd rdi,ebx
  40cc7b:	lea    eax,[rbx+0x1]
  40cc7e:	mov    r15d,ebx
  40cc81:	shl    rdi,0x4
  40cc85:	add    rdi,r12
  40cc88:	mov    ebx,eax
  40cc8a:	mov    DWORD PTR [r13+0x0],r15d
  40cc8e:	cmp    BYTE PTR [rdi],0x1
  40cc91:	je     0x40ce41
  40cc97:	mov    rcx,QWORD PTR [rdi+0x8]
  40cc9b:	test   rcx,rcx
  40cc9e:	je     0x40cdfb
  40cca4:	mov    rax,QWORD PTR [rip+0x3cc75]        # 0x449920
  40ccab:	cmp    QWORD PTR [rcx],rax
  40ccae:	mov    r14,QWORD PTR [rsi+0x10]
  40ccb2:	je     0x40cdfb
  40ccb8:	call   0x40cbe0
  40ccbd:	mov    rdx,QWORD PTR [rdi+0x8]
  40ccc1:	mov    rbp,rax
  40ccc4:	cmp    BYTE PTR [rbp+0x0],0x0
  40ccc8:	mov    rax,QWORD PTR [rdx+0x8]
  40cccc:	mov    QWORD PTR [rsp+0x28],rax
  40ccd1:	je     0x40cdfb
  40ccd7:	cmp    ebx,0x21d
  40ccdd:	jg     0x40cd1b
  40ccdf:	movsxd rax,ebx
  40cce2:	shl    rax,0x4
  40cce6:	lea    rcx,[r12+rax*1]
  40ccea:	cmp    BYTE PTR [rcx],0x0
  40cced:	jne    0x40cd1b
  40ccef:	cmp    rdx,QWORD PTR [rcx+0x8]
  40ccf3:	jne    0x40cd1b
  40ccf5:	lea    rax,[r12+rax*1+0x18]
  40ccfa:	jmp    0x40cd10
  40ccfc:	nop    DWORD PTR [rax+0x0]
  40cd00:	cmp    BYTE PTR [rax-0x8],0x0
  40cd04:	jne    0x40cd1b
  40cd06:	add    rax,0x10
  40cd0a:	cmp    rdx,QWORD PTR [rax-0x10]
  40cd0e:	jne    0x40cd1b
  40cd10:	add    ebx,0x1
  40cd13:	cmp    ebx,0x21e
  40cd19:	jne    0x40cd00
  40cd1b:	lea    edi,[rbx-0x1]
  40cd1e:	cmp    edi,r15d
  40cd21:	je     0x40ce90
  40cd27:	mov    r15,QWORD PTR [rsp+0x30]
  40cd2c:	mov    rcx,r15
  40cd2f:	call   0x40c340
  40cd34:	lea    rdx,[rip+0x361ee]        # 0x442f29
  40cd3b:	mov    rcx,rsi
  40cd3e:	mov    r8,rax
  40cd41:	call   0x40ba90
  40cd46:	mov    DWORD PTR [r13+0x0],edi
  40cd4a:	mov    rcx,r15
  40cd4d:	call   0x40c340
  40cd52:	lea    rdx,[rip+0x360dd]        # 0x442e36
  40cd59:	mov    r8,rax
  40cd5c:	mov    rcx,rsi
  40cd5f:	movsxd rdi,r14d
  40cd62:	call   0x40ba90
  40cd67:	mov    rax,QWORD PTR [rsi+0x10]
  40cd6b:	sub    rax,rdi
  40cd6e:	cmp    rax,0x7
  40cd72:	ja     0x40cd90
  40cd74:	lea    rdx,[rip+0x361ba]        # 0x442f35
  40cd7b:	mov    rcx,rsi
  40cd7e:	call   0x40ba90
  40cd83:	mov    rax,QWORD PTR [rsi+0x10]
  40cd87:	sub    rax,rdi
  40cd8a:	cmp    rax,0x7
  40cd8e:	jbe    0x40cd74
  40cd90:	mov    r8,QWORD PTR [rsp+0x28]
  40cd95:	lea    rdx,[rip+0x36194]        # 0x442f30
  40cd9c:	mov    rcx,rsi
  40cd9f:	call   0x40ba90
  40cda4:	mov    rcx,rbp
  40cda7:	mov    rdi,QWORD PTR [rsi+0x10]
  40cdab:	call   0x43a620
  40cdb0:	mov    rcx,QWORD PTR [rip+0x3ce39]        # 0x449bf0
  40cdb7:	add    rax,0x28
  40cdbb:	mov    rdx,QWORD PTR [rcx]
  40cdbe:	mov    edx,DWORD PTR [rdx+0x10]
  40cdc1:	cmp    rax,rdx
  40cdc4:	jae    0x40ce75
  40cdca:	sub    edi,r14d
  40cdcd:	cmp    edi,0x27
  40cdd0:	jg     0x40cde9
  40cdd2:	lea    rdx,[rip+0x3615c]        # 0x442f35
  40cdd9:	mov    rcx,rsi
  40cddc:	add    edi,0x1
  40cddf:	call   0x40ba90
  40cde4:	cmp    edi,0x28
  40cde7:	jne    0x40cdd2
  40cde9:	lea    rdx,[rip+0x3614e]        # 0x442f3e
  40cdf0:	mov    r8,rbp
  40cdf3:	mov    rcx,rsi
  40cdf6:	call   0x40ba90
  40cdfb:	cmp    ebx,0x21d
  40ce01:	jle    0x40cc60
  40ce07:	mov    rcx,QWORD PTR [rsp+0x30]
  40ce0c:	add    rsp,0x48
  40ce10:	pop    rbx
  40ce11:	pop    rsi
  40ce12:	pop    rdi
  40ce13:	pop    rbp
  40ce14:	pop    r12
  40ce16:	pop    r13
  40ce18:	pop    r14
  40ce1a:	pop    r15
  40ce1c:	jmp    0x43a748
  40ce21:	mov    edi,0x20f0
  40ce26:	mov    r15d,0x20f
  40ce2c:	mov    ebx,0x210
  40ce31:	add    rdi,r12
  40ce34:	mov    DWORD PTR [r13+0x0],r15d
  40ce38:	cmp    BYTE PTR [rdi],0x1
  40ce3b:	jne    0x40cc97
  40ce41:	mov    r9,QWORD PTR [rdi+0x8]
  40ce45:	mov    r8d,DWORD PTR [rsp+0x3c]
  40ce4a:	mov    rcx,rsi
  40ce4d:	mov    rdx,QWORD PTR [rsp+0x30]
  40ce52:	call   0x40cc00
  40ce57:	jmp    0x40cdfb
  40ce59:	nop    DWORD PTR [rax+0x0]
  40ce60:	mov    eax,0x101
  40ce65:	mov    edi,0x1000
  40ce6a:	mov    r15d,0x100
  40ce70:	jmp    0x40cc85
  40ce75:	lea    rdx,[rip+0x360bb]        # 0x442f37
  40ce7c:	mov    rcx,rsi
  40ce7f:	call   0x40ba90
  40ce84:	jmp    0x40cde9
  40ce89:	nop    DWORD PTR [rax+0x0]
  40ce90:	mov    rcx,QWORD PTR [rsp+0x30]
  40ce95:	jmp    0x40cd4d
  40ce9a:	nop    WORD PTR [rax+rax*1+0x0]
  40cea0:	push   r12
  40cea2:	push   rbp
  40cea3:	push   rdi
  40cea4:	push   rsi
  40cea5:	push   rbx
  40cea6:	sub    rsp,0x100
  40cead:	mov    rax,QWORD PTR [rip+0x3ca9c]        # 0x449950
  40ceb4:	lea    rbp,[rsp+0x30]
  40ceb9:	mov    DWORD PTR [rsp+0x30],0x0
  40cec1:	mov    r12,QWORD PTR [rax]
  40cec4:	mov    rsi,rbp
  40cec7:	mov    rcx,rbp
  40ceca:	add    rsi,0x4
  40cece:	call   0x40c340
  40ced3:	lea    rcx,[rip+0x36068]        # 0x442f42
  40ceda:	mov    rbx,rax
  40cedd:	call   0x433f18
  40cee2:	mov    rdx,rbx
  40cee5:	mov    rcx,rax
  40cee8:	call   0x421100
  40ceed:	call   0x4140d0
  40cef2:	movsxd rbx,eax
  40cef5:	mov    rdi,rbx
  40cef8:	call   0x421200
  40cefd:	mov    DWORD PTR [rsi-0x4],ebx
  40cf00:	shl    rbx,0x4
  40cf04:	mov    DWORD PTR [rsi],0x0
  40cf0a:	add    rbx,r12
  40cf0d:	mov    rax,QWORD PTR [rbx+0x8]
  40cf11:	test   rax,rax
  40cf14:	je     0x40cffb
  40cf1a:	cmp    BYTE PTR [rbx],0x1
  40cf1d:	je     0x40cfc0
  40cf23:	lea    rdx,[rip+0x63c6]        # 0x4132f0
  40cf2a:	cmp    QWORD PTR [rax],rdx
  40cf2d:	je     0x40cfd0
  40cf33:	mov    rcx,rbp
  40cf36:	call   0x40c340
  40cf3b:	mov    rcx,QWORD PTR [rbx+0x8]
  40cf3f:	mov    rsi,rax
  40cf42:	mov    rdi,QWORD PTR [rcx+0x8]
  40cf46:	call   0x40cbe0
  40cf4b:	mov    rcx,rsi
  40cf4e:	mov    rbp,rax
  40cf51:	call   0x43a620
  40cf56:	mov    rcx,rbp
  40cf59:	mov    r12,rax
  40cf5c:	call   0x43a620
  40cf61:	mov    rcx,rdi
  40cf64:	mov    rbx,rax
  40cf67:	call   0x43a620
  40cf6c:	mov    rdx,rax
  40cf6f:	lea    rax,[r12+rbx*1+0xa]
  40cf74:	lea    rcx,[rax+rdx*1]
  40cf78:	call   0x4227b0
  40cf7d:	lea    rdx,[rip+0x35fe0]        # 0x442f64
  40cf84:	mov    r9,rdi
  40cf87:	mov    r8,rsi
  40cf8a:	mov    QWORD PTR [rsp+0x20],rbp
  40cf8f:	mov    rcx,rax
  40cf92:	mov    rbx,rax
  40cf95:	call   0x433f00
  40cf9a:	lea    rcx,[rip+0x35e95]        # 0x442e36
  40cfa1:	mov    rdx,rbx
  40cfa4:	call   0x4210d0
  40cfa9:	mov    rcx,rbx
  40cfac:	add    rsp,0x100
  40cfb3:	pop    rbx
  40cfb4:	pop    rsi
  40cfb5:	pop    rdi
  40cfb6:	pop    rbp
  40cfb7:	pop    r12
  40cfb9:	jmp    0x43a748
  40cfbe:	xchg   ax,ax
  40cfc0:	mov    r12,rax
  40cfc3:	jmp    0x40cec7
  40cfc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfd0:	cmp    edi,0x10e
  40cfd6:	jle    0x40d030
  40cfd8:	lea    ecx,[rdi-0x10f]
  40cfde:	call   QWORD PTR [rip+0x47bac]        # 0x454b90
  40cfe4:	add    eax,0x10f
  40cfe9:	cdqe   
  40cfeb:	shl    rax,0x4
  40cfef:	cmp    QWORD PTR [r12+rax*1+0x8],0x0
  40cff5:	jne    0x40cf33
  40cffb:	mov    rcx,rbp
  40cffe:	call   0x40c340
  40d003:	lea    rcx,[rip+0x35f49]        # 0x442f53
  40d00a:	mov    rbx,rax
  40d00d:	call   0x433f18
  40d012:	mov    rdx,rbx
  40d015:	mov    rcx,rax
  40d018:	call   0x421100
  40d01d:	nop
  40d01e:	add    rsp,0x100
  40d025:	pop    rbx
  40d026:	pop    rsi
  40d027:	pop    rdi
  40d028:	pop    rbp
  40d029:	pop    r12
  40d02b:	ret    
  40d02c:	nop    DWORD PTR [rax+0x0]
  40d030:	mov    ecx,edi
  40d032:	call   QWORD PTR [rip+0x47b58]        # 0x454b90
  40d038:	jmp    0x40cfe9
  40d03a:	nop    WORD PTR [rax+rax*1+0x0]
  40d040:	push   r15
  40d042:	push   r14
  40d044:	push   r13
  40d046:	push   r12
  40d048:	push   rbp
  40d049:	push   rdi
  40d04a:	push   rsi
  40d04b:	push   rbx
  40d04c:	sub    rsp,0x78
  40d050:	lea    rcx,[rip+0x35dc5]        # 0x442e1c
  40d057:	call   0x409fa0
  40d05c:	test   rax,rax
  40d05f:	mov    r12,rax
  40d062:	je     0x40d351
  40d068:	mov    r14,QWORD PTR [rip+0x3c781]        # 0x4497f0
  40d06f:	cmp    rax,QWORD PTR [r14]
  40d072:	je     0x40d444
  40d078:	mov    rax,QWORD PTR [rip+0x3cb91]        # 0x449c10
  40d07f:	mov    QWORD PTR [rsp+0x40],0x0
  40d088:	mov    rax,QWORD PTR [rax]
  40d08b:	cmp    QWORD PTR [rax],0x0
  40d08f:	je     0x40d347
  40d095:	xor    edi,edi
  40d097:	lea    rbx,[rsp+0x50]
  40d09c:	lea    rsi,[rip+0x36825]        # 0x4438c8
  40d0a3:	call   0x40e940
  40d0a8:	mov    rcx,rbx
  40d0ab:	mov    rbp,rax
  40d0ae:	call   0x40a000
  40d0b3:	lea    rcx,[rip+0x35eb7]        # 0x442f71
  40d0ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d0c0:	call   0x433f18
  40d0c5:	mov    edx,edi
  40d0c7:	mov    rcx,rax
  40d0ca:	add    rsi,0x8
  40d0ce:	call   0x40c4d0
  40d0d3:	xor    r9d,r9d
  40d0d6:	xor    r8d,r8d
  40d0d9:	mov    rcx,rbx
  40d0dc:	mov    QWORD PTR [rsp+0x20],0x0
  40d0e5:	mov    rdx,rax
  40d0e8:	call   0x40ba90
  40d0ed:	mov    rcx,QWORD PTR [rsi-0x8]
  40d0f1:	test   rcx,rcx
  40d0f4:	jne    0x40d0c0
  40d0f6:	lea    rdx,[rip+0x35e8d]        # 0x442f8a
  40d0fd:	mov    rcx,rbx
  40d100:	call   0x40ba90
  40d105:	lea    rcx,[rip+0x35e9c]        # 0x442fa8
  40d10c:	call   0x433f18
  40d111:	lea    r8,[rip+0x35eaf]        # 0x442fc7
  40d118:	mov    rdx,rax
  40d11b:	mov    rcx,rbx
  40d11e:	call   0x40ba90
  40d123:	lea    rcx,[rip+0x35ea1]        # 0x442fcb
  40d12a:	call   0x433f18
  40d12f:	mov    rcx,rbx
  40d132:	mov    rdx,rax
  40d135:	call   0x40ba90
  40d13a:	lea    rdx,[rip+0x35dfd]        # 0x442f3e
  40d141:	mov    r8,rbp
  40d144:	mov    rcx,rbx
  40d147:	call   0x40ba90
  40d14c:	lea    rdx,[rip+0x35e95]        # 0x442fe8
  40d153:	mov    rcx,rbx
  40d156:	call   0x40ba90
  40d15b:	mov    rcx,rbp
  40d15e:	call   0x43a748
  40d163:	lea    rcx,[rip+0x35e96]        # 0x443000
  40d16a:	call   0x433f18
  40d16f:	mov    rcx,rbx
  40d172:	mov    rdx,rax
  40d175:	call   0x40ba90
  40d17a:	mov    rbp,QWORD PTR [rip+0x3c7cf]        # 0x449950
  40d181:	xor    r8d,r8d
  40d184:	xor    edx,edx
  40d186:	mov    rcx,rbx
  40d189:	mov    r9,QWORD PTR [rbp+0x0]
  40d18d:	call   0x40cc00
  40d192:	lea    rdx,[rip+0x35e4f]        # 0x442fe8
  40d199:	mov    rcx,rbx
  40d19c:	call   0x40ba90
  40d1a1:	lea    rcx,[rip+0x35e80]        # 0x443028
  40d1a8:	call   0x433f18
  40d1ad:	mov    rcx,rbx
  40d1b0:	mov    rdx,rax
  40d1b3:	call   0x40ba90
  40d1b8:	mov    rax,QWORD PTR [rip+0x3c711]        # 0x4498d0
  40d1bf:	xor    r8d,r8d
  40d1c2:	xor    edx,edx
  40d1c4:	mov    rcx,rbx
  40d1c7:	mov    r9,QWORD PTR [rax]
  40d1ca:	call   0x40cc00
  40d1cf:	mov    rsi,QWORD PTR [rip+0x3c72a]        # 0x449900
  40d1d6:	mov    rcx,QWORD PTR [rbp+0x0]
  40d1da:	lea    rdx,[rsi+0xd40]
  40d1e1:	call   0x40c410
  40d1e6:	test   rax,rax
  40d1e9:	mov    QWORD PTR [rsp+0x38],rax
  40d1ee:	je     0x40d1fd
  40d1f0:	mov    rcx,rax
  40d1f3:	call   0x422a00
  40d1f8:	mov    QWORD PTR [rsp+0x38],rax
  40d1fd:	mov    rax,QWORD PTR [rsi]
  40d200:	test   rax,rax
  40d203:	je     0x40d253
  40d205:	lea    rdi,[rip+0x60e4]        # 0x4132f0
  40d20c:	mov    r13,rsi
  40d20f:	mov    DWORD PTR [rsp+0x48],0x0
  40d217:	xor    r15d,r15d
  40d21a:	nop    WORD PTR [rax+rax*1+0x0]
  40d220:	cmp    rax,rdi
  40d223:	je     0x40d23b
  40d225:	mov    rdx,QWORD PTR [r13+0x10]
  40d229:	mov    rcx,QWORD PTR [rbp+0x0]
  40d22d:	call   0x40c3d0
  40d232:	test   rax,rax
  40d235:	je     0x40d2c0
  40d23b:	add    r15d,0x1
  40d23f:	add    r13,0x20
  40d243:	movsxd rax,r15d
  40d246:	shl    rax,0x5
  40d24a:	mov    rax,QWORD PTR [rsi+rax*1]
  40d24e:	test   rax,rax
  40d251:	jne    0x40d220
  40d253:	mov    rcx,QWORD PTR [rsp+0x38]
  40d258:	call   0x43a748
  40d25d:	mov    rcx,rbx
  40d260:	call   0x41fd00
  40d265:	lea    rcx,[rip+0x35bb0]        # 0x442e1c
  40d26c:	mov    QWORD PTR [rip+0x4429d],rax        # 0x451510
  40d273:	call   0x422a00
  40d278:	mov    rcx,QWORD PTR [rip+0x44291]        # 0x451510
  40d27f:	mov    rdx,rax
  40d282:	call   0x409f70
  40d287:	test   r12,r12
  40d28a:	je     0x40d3b9
  40d290:	cmp    r12,QWORD PTR [r14]
  40d293:	je     0x40d298
  40d295:	mov    QWORD PTR [r14],r12
  40d298:	mov    rdx,QWORD PTR [rip+0x44271]        # 0x451510
  40d29f:	mov    rcx,r12
  40d2a2:	call   0x415020
  40d2a7:	mov    QWORD PTR [r14],r12
  40d2aa:	add    rsp,0x78
  40d2ae:	pop    rbx
  40d2af:	pop    rsi
  40d2b0:	pop    rdi
  40d2b1:	pop    rbp
  40d2b2:	pop    r12
  40d2b4:	pop    r13
  40d2b6:	pop    r14
  40d2b8:	pop    r15
  40d2ba:	ret    
  40d2bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2c0:	mov    rax,QWORD PTR [rip+0x3c609]        # 0x4498d0
  40d2c7:	mov    rdx,QWORD PTR [r13+0x10]
  40d2cb:	mov    rcx,QWORD PTR [rax]
  40d2ce:	call   0x40c3d0
  40d2d3:	test   rax,rax
  40d2d6:	jne    0x40d23b
  40d2dc:	mov    eax,DWORD PTR [rsp+0x48]
  40d2e0:	test   eax,eax
  40d2e2:	je     0x40d400
  40d2e8:	movsxd rax,r15d
  40d2eb:	mov    QWORD PTR [rsp+0x48],rax
  40d2f0:	shl    rax,0x5
  40d2f4:	mov    rcx,QWORD PTR [rsi+rax*1+0x18]
  40d2f9:	lea    rax,[rip+0x35be8]        # 0x442ee8
  40d300:	cmp    BYTE PTR [rcx],0x0
  40d303:	jne    0x40d43a
  40d309:	xor    edx,edx
  40d30b:	mov    rcx,rax
  40d30e:	call   0x40c4d0
  40d313:	mov    rdx,QWORD PTR [rsp+0x48]
  40d318:	mov    r8,QWORD PTR [rsp+0x38]
  40d31d:	mov    rcx,rbx
  40d320:	shl    rdx,0x5
  40d324:	mov    r9,QWORD PTR [rsi+rdx*1+0x8]
  40d329:	lea    rdx,[rip+0x35d8b]        # 0x4430bb
  40d330:	mov    QWORD PTR [rsp+0x20],rax
  40d335:	call   0x40ba90
  40d33a:	mov    DWORD PTR [rsp+0x48],0x1
  40d342:	jmp    0x40d23b
  40d347:	mov    edi,0x1
  40d34c:	jmp    0x40d097
  40d351:	mov    rax,QWORD PTR [rip+0x3c8b8]        # 0x449c10
  40d358:	mov    rax,QWORD PTR [rax]
  40d35b:	test   rax,rax
  40d35e:	je     0x40d472
  40d364:	mov    QWORD PTR [rsp+0x40],0x0
  40d36d:	xor    ecx,ecx
  40d36f:	nop
  40d370:	mov    edx,DWORD PTR [rax+0x14]
  40d373:	cmp    ecx,edx
  40d375:	jge    0x40d37e
  40d377:	mov    ecx,edx
  40d379:	mov    QWORD PTR [rsp+0x40],rax
  40d37e:	mov    rax,QWORD PTR [rax]
  40d381:	test   rax,rax
  40d384:	jne    0x40d370
  40d386:	cmp    QWORD PTR [rsp+0x40],0x0
  40d38c:	je     0x40d472
  40d392:	mov    rax,QWORD PTR [rsp+0x40]
  40d397:	mov    r14,QWORD PTR [rip+0x3c452]        # 0x4497f0
  40d39e:	cmp    DWORD PTR [rax+0x14],0x17
  40d3a2:	jg     0x40d095
  40d3a8:	mov    edi,0x1
  40d3ad:	mov    r14,QWORD PTR [rip+0x3c43c]        # 0x4497f0
  40d3b4:	jmp    0x40d097
  40d3b9:	mov    rax,QWORD PTR [rsp+0x40]
  40d3be:	cmp    DWORD PTR [rax+0x14],0x17
  40d3c2:	jle    0x40d3ec
  40d3c4:	mov    QWORD PTR [r14],rax
  40d3c7:	call   0x41f7b0
  40d3cc:	mov    rdx,QWORD PTR [rip+0x4413d]        # 0x451510
  40d3d3:	mov    rcx,rax
  40d3d6:	mov    r12,rax
  40d3d9:	call   0x415020
  40d3de:	test   r12,r12
  40d3e1:	je     0x40d2aa
  40d3e7:	jmp    0x40d2a7
  40d3ec:	mov    rdx,QWORD PTR [rip+0x4411d]        # 0x451510
  40d3f3:	mov    rcx,QWORD PTR [r14]
  40d3f6:	call   0x415020
  40d3fb:	mov    r12,QWORD PTR [r14]
  40d3fe:	jmp    0x40d3de
  40d400:	lea    rdx,[rip+0x35be1]        # 0x442fe8
  40d407:	mov    rcx,rbx
  40d40a:	call   0x40ba90
  40d40f:	mov    rax,QWORD PTR [rsp+0x38]
  40d414:	test   rax,rax
  40d417:	je     0x40d41e
  40d419:	cmp    BYTE PTR [rax],0x0
  40d41c:	jne    0x40d451
  40d41e:	lea    rcx,[rip+0x35c63]        # 0x443088
  40d425:	call   0x433f18
  40d42a:	mov    rcx,rbx
  40d42d:	mov    rdx,rax
  40d430:	call   0x40ba90
  40d435:	jmp    0x40d2e8
  40d43a:	call   0x433f18
  40d43f:	jmp    0x40d309
  40d444:	mov    rcx,rax
  40d447:	call   0x416d80
  40d44c:	jmp    0x40d2aa
  40d451:	lea    rcx,[rip+0x35bf8]        # 0x443050
  40d458:	call   0x433f18
  40d45d:	mov    r8,QWORD PTR [rsp+0x38]
  40d462:	mov    rdx,rax
  40d465:	mov    rcx,rbx
  40d468:	call   0x40ba90
  40d46d:	jmp    0x40d2e8
  40d472:	mov    rax,QWORD PTR [rip+0x3c617]        # 0x449a90
  40d479:	lea    rcx,[rip+0x359b6]        # 0x442e36
  40d480:	mov    rdx,QWORD PTR [rax]
  40d483:	call   0x4144d0
  40d488:	jmp    0x40d2aa
  40d48d:	nop    DWORD PTR [rax]
  40d490:	push   rdi
  40d491:	push   rsi
  40d492:	push   rbx
  40d493:	sub    rsp,0x20
  40d497:	mov    rbx,rcx
  40d49a:	lea    rcx,[rip+0x35c29]        # 0x4430ca
  40d4a1:	mov    esi,edx
  40d4a3:	call   0x433f18
  40d4a8:	mov    rdx,rbx
  40d4ab:	mov    rcx,rax
  40d4ae:	call   0x40ed50
  40d4b3:	test   rax,rax
  40d4b6:	mov    rbx,rax
  40d4b9:	je     0x40d580
  40d4bf:	cmp    BYTE PTR [rax],0x0
  40d4c2:	je     0x40d526
  40d4c4:	mov    rcx,rax
  40d4c7:	call   0x40c0d0
  40d4cc:	test   rax,rax
  40d4cf:	mov    rdi,rax
  40d4d2:	je     0x40d560
  40d4d8:	mov    rdx,rax
  40d4db:	mov    rax,QWORD PTR [rip+0x3c46e]        # 0x449950
  40d4e2:	mov    rcx,QWORD PTR [rax]
  40d4e5:	call   0x40c410
  40d4ea:	test   rax,rax
  40d4ed:	mov    rsi,rax
  40d4f0:	je     0x40d535
  40d4f2:	cmp    BYTE PTR [rax],0x0
  40d4f5:	je     0x40d535
  40d4f7:	mov    rdx,QWORD PTR [rdi+0x8]
  40d4fb:	mov    rcx,rax
  40d4fe:	call   0x433a40
  40d503:	test   rax,rax
  40d506:	lea    rcx,[rip+0x35beb]        # 0x4430f8
  40d50d:	je     0x40d5a0
  40d513:	call   0x433f18
  40d518:	mov    r8,rsi
  40d51b:	mov    rdx,rbx
  40d51e:	mov    rcx,rax
  40d521:	call   0x4210d0
  40d526:	mov    rcx,rbx
  40d529:	add    rsp,0x20
  40d52d:	pop    rbx
  40d52e:	pop    rsi
  40d52f:	pop    rdi
  40d530:	jmp    0x43a748
  40d535:	lea    rcx,[rip+0x35ba1]        # 0x4430dd
  40d53c:	call   0x433f18
  40d541:	mov    rdx,rbx
  40d544:	mov    rcx,rax
  40d547:	call   0x4144d0
  40d54c:	mov    rcx,rbx
  40d54f:	add    rsp,0x20
  40d553:	pop    rbx
  40d554:	pop    rsi
  40d555:	pop    rdi
  40d556:	jmp    0x43a748
  40d55b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d560:	lea    rcx,[rip+0x35bd1]        # 0x443138
  40d567:	call   0x433f18
  40d56c:	mov    rdx,rbx
  40d56f:	mov    rcx,rax
  40d572:	call   0x4144d0
  40d577:	jmp    0x40d526
  40d579:	nop    DWORD PTR [rax+0x0]
  40d580:	mov    rax,QWORD PTR [rip+0x3c269]        # 0x4497f0
  40d587:	mov    edx,esi
  40d589:	mov    rcx,QWORD PTR [rax]
  40d58c:	add    rsp,0x20
  40d590:	pop    rbx
  40d591:	pop    rsi
  40d592:	pop    rdi
  40d593:	jmp    0x414890
  40d598:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5a0:	lea    rcx,[rip+0x35b70]        # 0x443117
  40d5a7:	jmp    0x40d513
  40d5ac:	nop
  40d5ad:	nop
  40d5ae:	nop
  40d5af:	nop
  40d5b0:	push   r12
  40d5b2:	push   rbp
  40d5b3:	push   rdi
  40d5b4:	push   rsi
  40d5b5:	push   rbx
  40d5b6:	sub    rsp,0x30
  40d5ba:	mov    rax,QWORD PTR [rip+0x3c55f]        # 0x449b20
  40d5c1:	mov    rbx,QWORD PTR [rip+0x47328]        # 0x4548f0
  40d5c8:	mov    QWORD PTR [rsp+0x78],r9
  40d5cd:	mov    rdi,rcx
  40d5d0:	mov    ebp,edx
  40d5d2:	mov    rsi,r8
  40d5d5:	mov    r12,QWORD PTR [rax]
  40d5d8:	call   rbx
  40d5da:	lea    rdx,[rip+0x3641f]        # 0x443a00
  40d5e1:	lea    rcx,[rax+0x60]
  40d5e5:	mov    r8,r12
  40d5e8:	call   0x433f20
  40d5ed:	lea    rcx,[rip+0x36411]        # 0x443a05
  40d5f4:	call   0x433f18
  40d5f9:	mov    r12,rax
  40d5fc:	call   rbx
  40d5fe:	mov    r8,rdi
  40d601:	lea    rcx,[rax+0x60]
  40d605:	lea    rdi,[rsp+0x78]
  40d60a:	mov    r9d,ebp
  40d60d:	mov    rdx,r12
  40d610:	call   0x433f20
  40d615:	mov    QWORD PTR [rsp+0x28],rdi
  40d61a:	call   rbx
  40d61c:	lea    rcx,[rax+0x60]
  40d620:	mov    r8,rdi
  40d623:	mov    rdx,rsi
  40d626:	call   0x433ef0
  40d62b:	call   rbx
  40d62d:	lea    rdx,[rip+0x363e1]        # 0x443a15
  40d634:	lea    rcx,[rax+0x60]
  40d638:	call   0x433f20
  40d63d:	nop
  40d63e:	add    rsp,0x30
  40d642:	pop    rbx
  40d643:	pop    rsi
  40d644:	pop    rdi
  40d645:	pop    rbp
  40d646:	pop    r12
  40d648:	ret    
  40d649:	nop    DWORD PTR [rax+0x0]
  40d650:	push   r15
  40d652:	push   r14
  40d654:	push   r13
  40d656:	push   r12
  40d658:	push   rbp
  40d659:	push   rdi
  40d65a:	push   rsi
  40d65b:	push   rbx
  40d65c:	sub    rsp,0x1c8
  40d663:	mov    rsi,QWORD PTR [rip+0x4741e]        # 0x454a88
  40d66a:	xor    r15d,r15d
  40d66d:	xor    r12d,r12d
  40d670:	mov    QWORD PTR [rsp+0x210],rcx
  40d678:	mov    QWORD PTR [rsp+0x218],rdx
  40d680:	xor    r13d,r13d
  40d683:	mov    QWORD PTR [rsp+0x220],r8
  40d68b:	mov    QWORD PTR [rsp+0x228],r9
  40d693:	xor    ebx,ebx
  40d695:	mov    DWORD PTR [rsp+0x3c],0x0
  40d69d:	mov    BYTE PTR [rsp+0x5f],0x0
  40d6a2:	xor    edi,edi
  40d6a4:	mov    BYTE PTR [rsp+0x5e],0x0
  40d6a9:	mov    BYTE PTR [rsp+0x20],0x0
  40d6ae:	xor    r14d,r14d
  40d6b1:	mov    DWORD PTR [rsp+0x58],0x0
  40d6b9:	mov    DWORD PTR [rsp+0x38],0x0
  40d6c1:	xor    ebp,ebp
  40d6c3:	xor    eax,eax
  40d6c5:	mov    QWORD PTR [rsp+0x48],rsi
  40d6ca:	mov    QWORD PTR [rsp+0x40],rsi
  40d6cf:	test   al,al
  40d6d1:	je     0x40d710
  40d6d3:	cmp    edi,0xc
  40d6d6:	ja     0x40d710
  40d6d8:	lea    r8,[rip+0x3650d]        # 0x443bec
  40d6df:	mov    eax,edi
  40d6e1:	movsxd rax,DWORD PTR [r8+rax*4]
  40d6e5:	add    r8,rax
  40d6e8:	jmp    r8
  40d6eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6f0:	cmp    r12d,0xa
  40d6f4:	je     0x40d9b2
  40d6fa:	cmp    ebx,0x8
  40d6fd:	ja     0x40d710
  40d6ff:	mov    eax,ebx
  40d701:	add    ebx,0x1
  40d704:	mov    BYTE PTR [rsp+rax*1+0x60],r12b
  40d709:	mov    edi,0x2
  40d70e:	xchg   ax,ax
  40d710:	mov    rcx,QWORD PTR [rsp+0x210]
  40d718:	call   0x43a778
  40d71d:	cmp    eax,0xffffffff
  40d720:	mov    r12d,eax
  40d723:	jne    0x40d6d3
  40d725:	mov    eax,0x1
  40d72a:	jmp    0x40d893
  40d72f:	nop
  40d730:	cmp    r12d,0xa
  40d734:	je     0x40d900
  40d73a:	mov    ecx,r12d
  40d73d:	mov    rax,QWORD PTR [rsp+0x40]
  40d742:	call   rax
  40d744:	test   eax,eax
  40d746:	jne    0x40d900
  40d74c:	cmp    r13d,0x4e
  40d750:	ja     0x40dcd5
  40d756:	mov    eax,r13d
  40d759:	mov    edi,0x6
  40d75e:	add    r13d,0x1
  40d762:	mov    BYTE PTR [rsp+rax*1+0xd0],r12b
  40d76a:	jmp    0x40d710
  40d76c:	nop    DWORD PTR [rax+0x0]
  40d770:	cmp    r12d,0xa
  40d774:	je     0x40d9b0
  40d77a:	mov    ebx,0x1
  40d77f:	xor    eax,eax
  40d781:	jmp    0x40d704
  40d783:	cmp    r12d,0xa
  40d787:	je     0x40dd20
  40d78d:	cmp    r14d,0x4e
  40d791:	ja     0x40dc30
  40d797:	mov    eax,r14d
  40d79a:	add    r14d,0x1
  40d79e:	mov    BYTE PTR [rsp+rax*1+0x170],r12b
  40d7a6:	jmp    0x40d710
  40d7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7b0:	mov    ecx,r12d
  40d7b3:	call   QWORD PTR [rip+0x472cf]        # 0x454a88
  40d7b9:	test   eax,eax
  40d7bb:	je     0x40da30
  40d7c1:	cmp    r12d,0xa
  40d7c5:	jne    0x40d710
  40d7cb:	lea    rcx,[rip+0x362d8]        # 0x443aaa
  40d7d2:	jmp    0x40d87a
  40d7d7:	nop    WORD PTR [rax+rax*1+0x0]
  40d7e0:	add    ebp,0x1
  40d7e3:	cmp    r12d,0x23
  40d7e7:	je     0x40dc20
  40d7ed:	cmp    r12d,0xa
  40d7f1:	je     0x40d710
  40d7f7:	mov    esi,DWORD PTR [rsp+0x38]
  40d7fb:	cmp    esi,0x1
  40d7fe:	jbe    0x40dcc0
  40d804:	cmp    esi,0x2
  40d807:	mov    eax,0x0
  40d80c:	cmovne eax,DWORD PTR [rsp+0x3c]
  40d811:	mov    DWORD PTR [rsp+0x3c],eax
  40d815:	mov    eax,0x8
  40d81a:	cmove  edi,eax
  40d81d:	jmp    0x40d6d3
  40d822:	mov    eax,DWORD PTR [rsp+0x58]
  40d826:	cmp    eax,0x4
  40d829:	ja     0x40d710
  40d82f:	mov    edx,eax
  40d831:	lea    rax,[rip+0x363e8]        # 0x443c20
  40d838:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40d83c:	add    rax,rdx
  40d83f:	jmp    rax
  40d841:	cmp    r12d,0xa
  40d845:	mov    eax,0x0
  40d84a:	cmove  edi,eax
  40d84d:	jmp    0x40d710
  40d852:	cmp    r12d,0x3d
  40d856:	je     0x40dc00
  40d85c:	cmp    r12d,0xa
  40d860:	je     0x40d873
  40d862:	mov    ecx,r12d
  40d865:	call   QWORD PTR [rip+0x4721d]        # 0x454a88
  40d86b:	test   eax,eax
  40d86d:	je     0x40da42
  40d873:	lea    rcx,[rip+0x362ce]        # 0x443b48
  40d87a:	call   0x433f18
  40d87f:	mov    rcx,QWORD PTR [rsp+0x218]
  40d887:	mov    r8,rax
  40d88a:	mov    edx,ebp
  40d88c:	call   0x40d5b0
  40d891:	xor    eax,eax
  40d893:	add    rsp,0x1c8
  40d89a:	pop    rbx
  40d89b:	pop    rsi
  40d89c:	pop    rdi
  40d89d:	pop    rbp
  40d89e:	pop    r12
  40d8a0:	pop    r13
  40d8a2:	pop    r14
  40d8a4:	pop    r15
  40d8a6:	ret    
  40d8a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b0:	cmp    r12d,0x23
  40d8b4:	je     0x40dbf4
  40d8ba:	cmp    r12d,0xa
  40d8be:	je     0x40da21
  40d8c4:	mov    ecx,r12d
  40d8c7:	mov    rax,QWORD PTR [rsp+0x48]
  40d8cc:	call   rax
  40d8ce:	test   eax,eax
  40d8d0:	jne    0x40d710
  40d8d6:	lea    rcx,[rip+0x3622b]        # 0x443b08
  40d8dd:	call   0x433f18
  40d8e2:	mov    rcx,QWORD PTR [rsp+0x218]
  40d8ea:	lea    r9,[rsp+0xd0]
  40d8f2:	mov    r8,rax
  40d8f5:	mov    edx,ebp
  40d8f7:	call   0x40d5b0
  40d8fc:	jmp    0x40d891
  40d8fe:	xchg   ax,ax
  40d900:	test   r13d,r13d
  40d903:	je     0x40d7cb
  40d909:	lea    rsi,[rsp+0xd0]
  40d911:	mov    eax,r13d
  40d914:	lea    rdi,[rip+0x361a3]        # 0x443abe
  40d91b:	mov    BYTE PTR [rsp+rax*1+0xd0],0x0
  40d923:	mov    ecx,0x8
  40d928:	mov    QWORD PTR [rsp+0x50],rsi
  40d92d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d92f:	jne    0x40dc40
  40d935:	lea    rax,[rip+0x43be4]        # 0x451520
  40d93c:	mov    BYTE PTR [rsp+0x70],0x0
  40d941:	cmp    r15d,0x13
  40d945:	mov    QWORD PTR [rsp+0x78],rax
  40d94a:	ja     0x40dce1
  40d950:	mov    eax,DWORD PTR [rsp+0x20]
  40d954:	mov    edx,r15d
  40d957:	xor    esi,esi
  40d959:	add    r15d,0x1
  40d95d:	shl    eax,0x1f
  40d960:	sar    eax,0x1f
  40d963:	and    eax,0x10f
  40d968:	mov    DWORD PTR [rsp+rdx*4+0x80],eax
  40d96f:	mov    ecx,DWORD PTR [rsp+0x38]
  40d973:	lea    rdx,[rsp+0x80]
  40d97b:	lea    r8,[rsp+0x70]
  40d980:	test   ecx,ecx
  40d982:	jne    0x40da80
  40d988:	mov    rax,QWORD PTR [rip+0x3bfc1]        # 0x449950
  40d98f:	mov    rcx,QWORD PTR [rax]
  40d992:	call   0x40e4e0
  40d997:	test   esi,esi
  40d999:	mov    BYTE PTR [rsp+0x20],0x0
  40d99e:	mov    edi,0x7
  40d9a3:	je     0x40d6d3
  40d9a9:	jmp    0x40d891
  40d9ae:	xchg   ax,ax
  40d9b0:	xor    ebx,ebx
  40d9b2:	mov    eax,ebx
  40d9b4:	lea    rdi,[rip+0x3605c]        # 0x443a17
  40d9bb:	mov    ecx,0x5
  40d9c0:	mov    BYTE PTR [rsp+rax*1+0x60],0x0
  40d9c5:	lea    rax,[rsp+0x60]
  40d9ca:	mov    rsi,rax
  40d9cd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d9cf:	je     0x40da70
  40d9d5:	lea    rdi,[rip+0x36040]        # 0x443a1c
  40d9dc:	mov    ecx,0xa
  40d9e1:	mov    rsi,rax
  40d9e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d9e6:	je     0x40dd10
  40d9ec:	lea    rdi,[rip+0x36033]        # 0x443a26
  40d9f3:	mov    ecx,0x4
  40d9f8:	mov    rsi,rax
  40d9fb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d9fd:	je     0x40ddc4
  40da03:	lea    rdi,[rip+0x36020]        # 0x443a2a
  40da0a:	mov    ecx,0x5
  40da0f:	mov    rsi,rax
  40da12:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40da14:	jne    0x40da21
  40da16:	cmp    DWORD PTR [rsp+0x38],0x1
  40da1b:	jbe    0x40df8d
  40da21:	xor    edi,edi
  40da23:	jmp    0x40d710
  40da28:	nop    DWORD PTR [rax+rax*1+0x0]
  40da30:	cmp    r12d,0xa
  40da34:	je     0x40d7cb
  40da3a:	xor    r13d,r13d
  40da3d:	jmp    0x40d756
  40da42:	mov    esi,DWORD PTR [rsp+0x3c]
  40da46:	mov    eax,esi
  40da48:	cmp    eax,0x4e
  40da4b:	ja     0x40de4d
  40da51:	mov    BYTE PTR [rsp+rax*1+0x120],r12b
  40da59:	mov    eax,esi
  40da5b:	add    eax,0x1
  40da5e:	mov    DWORD PTR [rsp+0x3c],eax
  40da62:	jmp    0x40d710
  40da67:	nop    WORD PTR [rax+rax*1+0x0]
  40da70:	mov    DWORD PTR [rsp+0x38],0x0
  40da78:	xor    edi,edi
  40da7a:	jmp    0x40d710
  40da7f:	nop
  40da80:	mov    rax,QWORD PTR [rip+0x3be49]        # 0x4498d0
  40da87:	mov    rcx,QWORD PTR [rax]
  40da8a:	call   0x40e4e0
  40da8f:	jmp    0x40d997
  40da94:	lea    eax,[r12-0x30]
  40da99:	cmp    eax,0x44
  40da9c:	ja     0x40e0dd
  40daa2:	lea    rdx,[rip+0x3618b]        # 0x443c34
  40daa9:	movsxd rax,DWORD PTR [rdx+rax*4]
  40daad:	add    rdx,rax
  40dab0:	jmp    rdx
  40dab2:	cmp    r12d,0xa
  40dab6:	je     0x40ddf9
  40dabc:	mov    ecx,r12d
  40dabf:	call   QWORD PTR [rip+0x46fc3]        # 0x454a88
  40dac5:	test   eax,eax
  40dac7:	jne    0x40ddf9
  40dacd:	cmp    r12d,0x5c
  40dad1:	je     0x40e177
  40dad7:	cmp    r12d,0x5e
  40dadb:	je     0x40e0d0
  40dae1:	cmp    r15d,0x13
  40dae5:	ja     0x40de10
  40daeb:	cmp    r12d,0x10e
  40daf2:	lea    eax,[r15+0x1]
  40daf6:	jg     0x40e184
  40dafc:	cmp    BYTE PTR [rsp+0x20],0x0
  40db01:	lea    r10d,[r12+0x10f]
  40db09:	je     0x40e184
  40db0f:	mov    DWORD PTR [rsp+r15*4+0x80],r10d
  40db17:	mov    BYTE PTR [rsp+0x20],0x0
  40db1c:	mov    r15d,eax
  40db1f:	jmp    0x40d710
  40db24:	lea    eax,[r12-0x44]
  40db29:	cmp    eax,0x34
  40db2c:	ja     0x40e128
  40db32:	lea    rdx,[rip+0x3620f]        # 0x443d48
  40db39:	movsxd rax,DWORD PTR [rdx+rax*4]
  40db3d:	add    rdx,rax
  40db40:	jmp    rdx
  40db42:	lea    eax,[r12-0x30]
  40db47:	cmp    eax,0x7
  40db4a:	jbe    0x40dd92
  40db50:	mov    BYTE PTR [rsp+0x5e],0x4
  40db55:	mov    eax,0x1
  40db5a:	cmp    BYTE PTR [rsp+0x5f],0x0
  40db5f:	je     0x40de89
  40db65:	cmp    r15d,0x13
  40db69:	ja     0x40de10
  40db6f:	movsx  edx,BYTE PTR [rsp+0x5f]
  40db74:	movzx  esi,BYTE PTR [rsp+0x20]
  40db79:	lea    ecx,[r15+0x1]
  40db7d:	mov    BYTE PTR [rsp+0x20],0x0
  40db82:	mov    DWORD PTR [rsp+0x58],0x0
  40db8a:	lea    r8d,[rdx+0x10f]
  40db91:	test   sil,sil
  40db94:	cmovne edx,r8d
  40db98:	mov    DWORD PTR [rsp+r15*4+0x80],edx
  40dba0:	mov    r15d,ecx
  40dba3:	jmp    0x40d6cf
  40dba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbb0:	mov    eax,r12d
  40dbb3:	and    eax,0x1f
  40dbb6:	je     0x40ddd3
  40dbbc:	cmp    r15d,0x13
  40dbc0:	ja     0x40de10
  40dbc6:	cmp    BYTE PTR [rsp+0x20],0x0
  40dbcb:	lea    edx,[rax+0x10f]
  40dbd1:	cmovne eax,edx
  40dbd4:	mov    edx,r15d
  40dbd7:	mov    BYTE PTR [rsp+0x20],0x0
  40dbdc:	add    r15d,0x1
  40dbe0:	mov    DWORD PTR [rsp+rdx*4+0x80],eax
  40dbe7:	mov    DWORD PTR [rsp+0x58],0x0
  40dbef:	jmp    0x40d710
  40dbf4:	mov    edi,0x3
  40dbf9:	jmp    0x40d710
  40dbfe:	xchg   ax,ax
  40dc00:	mov    eax,DWORD PTR [rsp+0x3c]
  40dc04:	test   eax,eax
  40dc06:	je     0x40de59
  40dc0c:	xor    r14d,r14d
  40dc0f:	mov    edi,0xc
  40dc14:	jmp    0x40d710
  40dc19:	nop    DWORD PTR [rax+0x0]
  40dc20:	mov    edi,0x1
  40dc25:	jmp    0x40d710
  40dc2a:	nop    WORD PTR [rax+rax*1+0x0]
  40dc30:	lea    rcx,[rip+0x35f8f]        # 0x443bc6
  40dc37:	jmp    0x40d87a
  40dc3c:	nop    DWORD PTR [rax+0x0]
  40dc40:	mov    rax,QWORD PTR [rip+0x3bcb9]        # 0x449900
  40dc47:	mov    rcx,QWORD PTR [rax+0x8]
  40dc4b:	test   rcx,rcx
  40dc4e:	je     0x40de20
  40dc54:	xor    esi,esi
  40dc56:	mov    rdi,QWORD PTR [rsp+0x50]
  40dc5b:	jmp    0x40dc7f
  40dc5d:	nop    DWORD PTR [rax]
  40dc60:	add    esi,0x1
  40dc63:	mov    rdx,QWORD PTR [rip+0x3bc96]        # 0x449900
  40dc6a:	movsxd rax,esi
  40dc6d:	shl    rax,0x5
  40dc71:	mov    rcx,QWORD PTR [rdx+rax*1+0x8]
  40dc76:	test   rcx,rcx
  40dc79:	je     0x40de20
  40dc7f:	mov    rdx,rdi
  40dc82:	call   0x43a648
  40dc87:	test   eax,eax
  40dc89:	jne    0x40dc60
  40dc8b:	cmp    esi,0x22
  40dc8e:	jne    0x40de65
  40dc94:	lea    rcx,[rip+0x35e2d]        # 0x443ac8
  40dc9b:	mov    edi,0x7
  40dca0:	call   0x433f18
  40dca5:	mov    rcx,QWORD PTR [rsp+0x218]
  40dcad:	mov    r8,rax
  40dcb0:	mov    edx,ebp
  40dcb2:	call   0x40d5b0
  40dcb7:	jmp    0x40d6d3
  40dcbc:	nop    DWORD PTR [rax+0x0]
  40dcc0:	xor    r15d,r15d
  40dcc3:	mov    DWORD PTR [rsp+0x58],0x0
  40dccb:	mov    edi,0x4
  40dcd0:	jmp    0x40d6d3
  40dcd5:	lea    rcx,[rip+0x35e13]        # 0x443aef
  40dcdc:	jmp    0x40d87a
  40dce1:	lea    rcx,[rip+0x35d5c]        # 0x443a44
  40dce8:	mov    esi,0x1
  40dced:	call   0x433f18
  40dcf2:	mov    rcx,QWORD PTR [rsp+0x218]
  40dcfa:	mov    r8,rax
  40dcfd:	mov    edx,ebp
  40dcff:	call   0x40d5b0
  40dd04:	jmp    0x40d96f
  40dd09:	nop    DWORD PTR [rax+0x0]
  40dd10:	mov    DWORD PTR [rsp+0x38],0x1
  40dd18:	xor    edi,edi
  40dd1a:	jmp    0x40d710
  40dd1f:	nop
  40dd20:	mov    eax,DWORD PTR [rsp+0x3c]
  40dd24:	lea    rsi,[rsp+0x120]
  40dd2c:	mov    rcx,rsi
  40dd2f:	mov    BYTE PTR [rsp+rax*1+0x120],0x0
  40dd37:	mov    eax,r14d
  40dd3a:	mov    BYTE PTR [rsp+rax*1+0x170],0x0
  40dd42:	call   0x41eff0
  40dd47:	test   rax,rax
  40dd4a:	je     0x40de95
  40dd50:	lea    r12,[rsp+0x170]
  40dd58:	mov    r8d,0x1
  40dd5e:	mov    rcx,rax
  40dd61:	xor    edi,edi
  40dd63:	mov    rdx,r12
  40dd66:	call   0x41f490
  40dd6b:	test   eax,eax
  40dd6d:	jne    0x40d710
  40dd73:	lea    rcx,[rip+0x35e26]        # 0x443ba0
  40dd7a:	call   0x433f18
  40dd7f:	mov    r8,rsi
  40dd82:	mov    rdx,r12
  40dd85:	mov    rcx,rax
  40dd88:	call   0x4144d0
  40dd8d:	jmp    0x40d710
  40dd92:	add    BYTE PTR [rsp+0x5e],0x1
  40dd97:	movzx  eax,BYTE PTR [rsp+0x5e]
  40dd9c:	cmp    al,0x3
  40dd9e:	jg     0x40d710
  40dda4:	movzx  eax,BYTE PTR [rsp+0x5f]
  40dda9:	lea    eax,[r12+rax*8-0x30]
  40ddae:	mov    BYTE PTR [rsp+0x5f],al
  40ddb2:	xor    eax,eax
  40ddb4:	cmp    BYTE PTR [rsp+0x5e],0x3
  40ddb9:	je     0x40db5a
  40ddbf:	jmp    0x40d710
  40ddc4:	mov    DWORD PTR [rsp+0x38],0x2
  40ddcc:	xor    edi,edi
  40ddce:	jmp    0x40d710
  40ddd3:	lea    rcx,[rip+0x35cae]        # 0x443a88
  40ddda:	call   0x433f18
  40dddf:	mov    rcx,QWORD PTR [rsp+0x218]
  40dde7:	mov    r8,rax
  40ddea:	mov    r9d,r12d
  40dded:	mov    edx,ebp
  40ddef:	call   0x40d5b0
  40ddf4:	jmp    0x40d891
  40ddf9:	test   r15d,r15d
  40ddfc:	je     0x40e16b
  40de02:	mov    edi,0x5
  40de07:	jmp    0x40d6d3
  40de0c:	nop    DWORD PTR [rax+0x0]
  40de10:	lea    rcx,[rip+0x35c2d]        # 0x443a44
  40de17:	jmp    0x40d87a
  40de1c:	nop    DWORD PTR [rax+0x0]
  40de20:	lea    rcx,[rip+0x35dae]        # 0x443bd5
  40de27:	mov    edi,0x7
  40de2c:	call   0x433f18
  40de31:	mov    r9,QWORD PTR [rsp+0x50]
  40de36:	mov    rcx,QWORD PTR [rsp+0x218]
  40de3e:	mov    r8,rax
  40de41:	mov    edx,ebp
  40de43:	call   0x40d5b0
  40de48:	jmp    0x40d6d3
  40de4d:	lea    rcx,[rip+0x35d20]        # 0x443b74
  40de54:	jmp    0x40d87a
  40de59:	lea    rcx,[rip+0x35ccf]        # 0x443b2f
  40de60:	jmp    0x40d87a
  40de65:	cmp    esi,0x79
  40de68:	mov    BYTE PTR [rsp+0x70],0x0
  40de6d:	je     0x40e1b6
  40de73:	movsxd rsi,esi
  40de76:	shl    rsi,0x5
  40de7a:	mov    rax,rsi
  40de7d:	add    rax,QWORD PTR [rip+0x3ba7c]        # 0x449900
  40de84:	jmp    0x40d941
  40de89:	lea    rcx,[rip+0x35bd0]        # 0x443a60
  40de90:	jmp    0x40d87a
  40de95:	lea    rcx,[rip+0x35cef]        # 0x443b8b
  40de9c:	xor    edi,edi
  40de9e:	call   0x433f18
  40dea3:	mov    rdx,rsi
  40dea6:	mov    rcx,rax
  40dea9:	call   0x4144d0
  40deae:	jmp    0x40d710
  40deb3:	mov    BYTE PTR [rsp+0x20],0x1
  40deb8:	mov    DWORD PTR [rsp+0x58],0x0
  40dec0:	jmp    0x40d710
  40dec5:	cmp    r15d,0x13
  40dec9:	ja     0x40de10
  40decf:	cmp    BYTE PTR [rsp+0x20],0x1
  40ded4:	sbb    eax,eax
  40ded6:	and    eax,0xfffffef1
  40dedb:	add    eax,0x118
  40dee0:	jmp    0x40dbd4
  40dee5:	cmp    r15d,0x13
  40dee9:	ja     0x40de10
  40deef:	cmp    BYTE PTR [rsp+0x20],0x1
  40def4:	sbb    eax,eax
  40def6:	and    eax,0xfffffef1
  40defb:	add    eax,0x12a
  40df00:	jmp    0x40dbd4
  40df05:	mov    DWORD PTR [rsp+0x58],0x4
  40df0d:	jmp    0x40d710
  40df12:	cmp    r15d,0x13
  40df16:	ja     0x40de10
  40df1c:	cmp    BYTE PTR [rsp+0x20],0x1
  40df21:	sbb    eax,eax
  40df23:	and    eax,0xfffffef1
  40df28:	add    eax,0x119
  40df2d:	jmp    0x40dbd4
  40df32:	lea    eax,[r12-0x30]
  40df37:	mov    BYTE PTR [rsp+0x5e],0x1
  40df3c:	mov    DWORD PTR [rsp+0x58],0x3
  40df44:	mov    BYTE PTR [rsp+0x5f],al
  40df48:	jmp    0x40d710
  40df4d:	cmp    r15d,0x13
  40df51:	ja     0x40de10
  40df57:	cmp    BYTE PTR [rsp+0x20],0x1
  40df5c:	sbb    eax,eax
  40df5e:	and    eax,0xfffffef1
  40df63:	add    eax,0x117
  40df68:	jmp    0x40dbd4
  40df6d:	cmp    r15d,0x13
  40df71:	ja     0x40de10
  40df77:	cmp    BYTE PTR [rsp+0x20],0x1
  40df7c:	sbb    eax,eax
  40df7e:	and    eax,0xfffffef1
  40df83:	add    eax,0x11c
  40df88:	jmp    0x40dbd4
  40df8d:	mov    r8d,DWORD PTR [rsp+0x38]
  40df92:	test   r8d,r8d
  40df95:	jne    0x40e199
  40df9b:	mov    rax,QWORD PTR [rsp+0x220]
  40dfa3:	xor    edi,edi
  40dfa5:	mov    DWORD PTR [rax],0x1
  40dfab:	jmp    0x40d710
  40dfb0:	cmp    r15d,0x13
  40dfb4:	ja     0x40de10
  40dfba:	cmp    BYTE PTR [rsp+0x20],0x1
  40dfbf:	sbb    eax,eax
  40dfc1:	and    eax,0xfffffef1
  40dfc6:	add    eax,0x217
  40dfcb:	jmp    0x40dbd4
  40dfd0:	cmp    r15d,0x13
  40dfd4:	ja     0x40de10
  40dfda:	cmp    BYTE PTR [rsp+0x20],0x1
  40dfdf:	sbb    eax,eax
  40dfe1:	and    eax,0xfffffef1
  40dfe6:	add    eax,0x214
  40dfeb:	jmp    0x40dbd4
  40dff0:	cmp    r15d,0x13
  40dff4:	ja     0x40de10
  40dffa:	cmp    BYTE PTR [rsp+0x20],0x1
  40dfff:	sbb    eax,eax
  40e001:	and    eax,0xfffffef1
  40e006:	add    eax,0x213
  40e00b:	jmp    0x40dbd4
  40e010:	cmp    r15d,0x13
  40e014:	ja     0x40de10
  40e01a:	cmp    BYTE PTR [rsp+0x20],0x1
  40e01f:	sbb    eax,eax
  40e021:	and    eax,0xfffffef1
  40e026:	add    eax,0x212
  40e02b:	jmp    0x40dbd4
  40e030:	cmp    r15d,0x13
  40e034:	ja     0x40de10
  40e03a:	cmp    BYTE PTR [rsp+0x20],0x1
  40e03f:	sbb    eax,eax
  40e041:	and    eax,0xfffffef1
  40e046:	add    eax,0x216
  40e04b:	jmp    0x40dbd4
  40e050:	cmp    r15d,0x13
  40e054:	ja     0x40de10
  40e05a:	cmp    BYTE PTR [rsp+0x20],0x1
  40e05f:	sbb    eax,eax
  40e061:	and    eax,0xfffffef1
  40e066:	add    eax,0x215
  40e06b:	jmp    0x40dbd4
  40e070:	cmp    r15d,0x13
  40e074:	ja     0x40de10
  40e07a:	cmp    BYTE PTR [rsp+0x20],0x1
  40e07f:	sbb    eax,eax
  40e081:	and    eax,0xfffffef1
  40e086:	add    eax,0x210
  40e08b:	jmp    0x40dbd4
  40e090:	cmp    r15d,0x13
  40e094:	ja     0x40de10
  40e09a:	cmp    BYTE PTR [rsp+0x20],0x1
  40e09f:	sbb    eax,eax
  40e0a1:	and    eax,0xfffffef1
  40e0a6:	add    eax,0x20f
  40e0ab:	jmp    0x40dbd4
  40e0b0:	cmp    r15d,0x13
  40e0b4:	ja     0x40de10
  40e0ba:	cmp    BYTE PTR [rsp+0x20],0x1
  40e0bf:	sbb    eax,eax
  40e0c1:	and    eax,0xfffffef1
  40e0c6:	add    eax,0x211
  40e0cb:	jmp    0x40dbd4
  40e0d0:	mov    DWORD PTR [rsp+0x58],0x2
  40e0d8:	jmp    0x40d710
  40e0dd:	cmp    r15d,0x13
  40e0e1:	ja     0x40de10
  40e0e7:	cmp    r12d,0x10e
  40e0ee:	lea    eax,[r15+0x1]
  40e0f2:	jg     0x40e18c
  40e0f8:	cmp    BYTE PTR [rsp+0x20],0x0
  40e0fd:	lea    r10d,[r12+0x10f]
  40e105:	je     0x40e18c
  40e10b:	mov    DWORD PTR [rsp+r15*4+0x80],r10d
  40e113:	mov    BYTE PTR [rsp+0x20],0x0
  40e118:	mov    r15d,eax
  40e11b:	mov    DWORD PTR [rsp+0x58],0x0
  40e123:	jmp    0x40d710
  40e128:	cmp    r15d,0x13
  40e12c:	ja     0x40de10
  40e132:	cmp    r12d,0x10e
  40e139:	lea    edx,[r15+0x1]
  40e13d:	jg     0x40e194
  40e13f:	cmp    BYTE PTR [rsp+0x20],0x0
  40e144:	lea    eax,[r12+0x10f]
  40e14c:	je     0x40e194
  40e14e:	mov    DWORD PTR [rsp+r15*4+0x80],eax
  40e156:	mov    BYTE PTR [rsp+0x20],0x0
  40e15b:	mov    r15d,edx
  40e15e:	mov    DWORD PTR [rsp+0x58],0x0
  40e166:	jmp    0x40d6d3
  40e16b:	lea    rcx,[rip+0x358bd]        # 0x443a2f
  40e172:	jmp    0x40d87a
  40e177:	mov    DWORD PTR [rsp+0x58],0x1
  40e17f:	jmp    0x40d710
  40e184:	mov    r10d,r12d
  40e187:	jmp    0x40db0f
  40e18c:	mov    r10d,r12d
  40e18f:	jmp    0x40e10b
  40e194:	mov    eax,r12d
  40e197:	jmp    0x40e14e
  40e199:	mov    rax,QWORD PTR [rsp+0x228]
  40e1a1:	mov    DWORD PTR [rsp+0x38],0x1
  40e1a9:	xor    edi,edi
  40e1ab:	mov    DWORD PTR [rax],0x1
  40e1b1:	jmp    0x40d710
  40e1b6:	lea    rax,[rip+0x43363]        # 0x451520
  40e1bd:	jmp    0x40d941
  40e1c2:	nop
  40e1c3:	nop
  40e1c4:	nop
  40e1c5:	nop
  40e1c6:	nop
  40e1c7:	nop
  40e1c8:	nop
  40e1c9:	nop
  40e1ca:	nop
  40e1cb:	nop
  40e1cc:	nop
  40e1cd:	nop
  40e1ce:	nop
  40e1cf:	nop
  40e1d0:	sub    rsp,0x28
  40e1d4:	mov    ecx,0x21e0
  40e1d9:	call   0x4227b0
  40e1de:	lea    rcx,[rax+0x21e0]
  40e1e5:	mov    rdx,rax
  40e1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1f0:	mov    BYTE PTR [rdx],0x0
  40e1f3:	mov    QWORD PTR [rdx+0x8],0x0
  40e1fb:	add    rdx,0x10
  40e1ff:	cmp    rdx,rcx
  40e202:	jne    0x40e1f0
  40e204:	add    rsp,0x28
  40e208:	ret    
  40e209:	nop    DWORD PTR [rax+0x0]
  40e210:	push   r15
  40e212:	push   r14
  40e214:	push   r13
  40e216:	push   r12
  40e218:	push   rbp
  40e219:	push   rdi
  40e21a:	push   rsi
  40e21b:	push   rbx
  40e21c:	sub    rsp,0x38
  40e220:	mov    rax,QWORD PTR [rip+0x3b6d9]        # 0x449900
  40e227:	mov    r12,rcx
  40e22a:	mov    rdi,rdx
  40e22d:	mov    r14,r8
  40e230:	mov    rsi,rdx
  40e233:	mov    r13,rcx
  40e236:	add    rax,0x980
  40e23c:	mov    QWORD PTR [rsp+0x20],rax
  40e241:	add    rsi,0x4
  40e245:	movsxd rbx,DWORD PTR [rsi-0x4]
  40e249:	test   ebx,ebx
  40e24b:	je     0x40e277
  40e24d:	shl    rbx,0x4
  40e251:	add    rbx,r13
  40e254:	movzx  eax,BYTE PTR [rbx]
  40e257:	test   al,al
  40e259:	je     0x40e290
  40e25b:	cmp    al,0x1
  40e25d:	jne    0x40e2ab
  40e25f:	mov    r8d,DWORD PTR [rsi]
  40e262:	test   r8d,r8d
  40e265:	je     0x40e277
  40e267:	add    rsi,0x4
  40e26b:	mov    r13,QWORD PTR [rbx+0x8]
  40e26f:	movsxd rbx,DWORD PTR [rsi-0x4]
  40e273:	test   ebx,ebx
  40e275:	jne    0x40e24d
  40e277:	add    rsp,0x38
  40e27b:	pop    rbx
  40e27c:	pop    rsi
  40e27d:	pop    rdi
  40e27e:	pop    rbp
  40e27f:	pop    r12
  40e281:	pop    r13
  40e283:	pop    r14
  40e285:	pop    r15
  40e287:	ret    
  40e288:	nop    DWORD PTR [rax+rax*1+0x0]
  40e290:	cmp    QWORD PTR [rbx+0x8],0x0
  40e295:	jne    0x40e277
  40e297:	mov    r9d,DWORD PTR [rsi]
  40e29a:	test   r9d,r9d
  40e29d:	je     0x40e2b1
  40e29f:	mov    BYTE PTR [rbx],0x1
  40e2a2:	call   0x40e1d0
  40e2a7:	mov    QWORD PTR [rbx+0x8],rax
  40e2ab:	mov    ecx,DWORD PTR [rsi]
  40e2ad:	test   ecx,ecx
  40e2af:	jne    0x40e267
  40e2b1:	mov    r15,QWORD PTR [r14+0x8]
  40e2b5:	test   r15,r15
  40e2b8:	je     0x40e2de
  40e2ba:	cmp    r15,QWORD PTR [rsp+0x20]
  40e2bf:	je     0x40e2de
  40e2c1:	mov    rax,QWORD PTR [r15+0x10]
  40e2c5:	test   rax,rax
  40e2c8:	jne    0x40e2d8
  40e2ca:	jmp    0x40e2f1
  40e2cc:	nop    DWORD PTR [rax+0x0]
  40e2d0:	mov    rax,QWORD PTR [rax]
  40e2d3:	test   rax,rax
  40e2d6:	je     0x40e2f1
  40e2d8:	cmp    r12,QWORD PTR [rax+0x8]
  40e2dc:	jne    0x40e2d0
  40e2de:	mov    rax,QWORD PTR [r14]
  40e2e1:	mov    rdx,QWORD PTR [r14+0x8]
  40e2e5:	mov    QWORD PTR [rbx],rax
  40e2e8:	mov    QWORD PTR [rbx+0x8],rdx
  40e2ec:	jmp    0x40e241
  40e2f1:	mov    ecx,0x18
  40e2f6:	call   0x4227b0
  40e2fb:	mov    edx,DWORD PTR [rdi]
  40e2fd:	mov    rbp,rax
  40e300:	mov    rax,QWORD PTR [r15+0x10]
  40e304:	mov    QWORD PTR [rbp+0x8],r12
  40e308:	test   edx,edx
  40e30a:	mov    QWORD PTR [rbp+0x0],rax
  40e30e:	je     0x40e371
  40e310:	lea    rdx,[rdi+0x4]
  40e314:	xor    ecx,ecx
  40e316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e320:	add    rdx,0x4
  40e324:	mov    eax,DWORD PTR [rdx-0x4]
  40e327:	add    ecx,0x1
  40e32a:	test   eax,eax
  40e32c:	jne    0x40e320
  40e32e:	lea    r8d,[rcx+0x1]
  40e332:	movsxd r8,r8d
  40e335:	shl    r8,0x2
  40e339:	mov    rcx,r8
  40e33c:	mov    QWORD PTR [rsp+0x28],r8
  40e341:	call   0x4227b0
  40e346:	mov    r8,QWORD PTR [rsp+0x28]
  40e34b:	mov    rdx,rdi
  40e34e:	mov    QWORD PTR [rbp+0x10],rax
  40e352:	mov    rcx,rax
  40e355:	call   0x43a6b8
  40e35a:	mov    QWORD PTR [r15+0x10],rbp
  40e35e:	mov    rax,QWORD PTR [r14]
  40e361:	mov    rdx,QWORD PTR [r14+0x8]
  40e365:	mov    QWORD PTR [rbx],rax
  40e368:	mov    QWORD PTR [rbx+0x8],rdx
  40e36c:	jmp    0x40e241
  40e371:	mov    r8d,0x4
  40e377:	jmp    0x40e339
  40e379:	nop    DWORD PTR [rax+0x0]
  40e380:	push   r13
  40e382:	push   r12
  40e384:	push   rbp
  40e385:	push   rdi
  40e386:	push   rsi
  40e387:	push   rbx
  40e388:	sub    rsp,0x38
  40e38c:	test   r8d,r8d
  40e38f:	mov    rbx,rcx
  40e392:	mov    rdi,rdx
  40e395:	mov    esi,r8d
  40e398:	je     0x40e3c3
  40e39a:	mov    r13,QWORD PTR [rip+0x3b55f]        # 0x449900
  40e3a1:	lea    rbp,[rsp+0x20]
  40e3a6:	mov    rax,rdx
  40e3a9:	mov    r9d,DWORD PTR [rax]
  40e3ac:	test   r9d,r9d
  40e3af:	jne    0x40e3f0
  40e3b1:	add    rax,0x4
  40e3b5:	mov    rdx,rax
  40e3b8:	sub    rdx,rdi
  40e3bb:	sar    rdx,0x2
  40e3bf:	cmp    esi,edx
  40e3c1:	ja     0x40e3a9
  40e3c3:	cmp    QWORD PTR [rbx+0x1b8],0x0
  40e3cb:	je     0x40e4c6
  40e3d1:	cmp    BYTE PTR [rbx+0x1b0],0x1
  40e3d8:	je     0x40e481
  40e3de:	add    rsp,0x38
  40e3e2:	pop    rbx
  40e3e3:	pop    rsi
  40e3e4:	pop    rdi
  40e3e5:	pop    rbp
  40e3e6:	pop    r12
  40e3e8:	pop    r13
  40e3ea:	ret    
  40e3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3f0:	lea    rcx,[rax+0x4]
  40e3f4:	mov    rdx,rcx
  40e3f7:	sub    rdx,rdi
  40e3fa:	sar    rdx,0x2
  40e3fe:	cmp    esi,edx
  40e400:	jbe    0x40e41c
  40e402:	mov    r8d,DWORD PTR [rcx]
  40e405:	test   r8d,r8d
  40e408:	je     0x40e421
  40e40a:	add    rcx,0x4
  40e40e:	mov    rdx,rcx
  40e411:	sub    rdx,rdi
  40e414:	sar    rdx,0x2
  40e418:	cmp    esi,edx
  40e41a:	ja     0x40e402
  40e41c:	call   0x43a7b0
  40e421:	lea    r12,[rcx+0x4]
  40e425:	mov    rdx,r12
  40e428:	sub    rdx,rdi
  40e42b:	sar    rdx,0x2
  40e42f:	cmp    esi,edx
  40e431:	jbe    0x40e41c
  40e433:	mov    ecx,DWORD PTR [rcx+0x4]
  40e436:	xor    edx,edx
  40e438:	mov    BYTE PTR [rsp+0x20],0x0
  40e43d:	cmp    ecx,0x74
  40e440:	ja     0x40e44a
  40e442:	shl    rcx,0x5
  40e446:	lea    rdx,[rcx+r13*1]
  40e44a:	mov    QWORD PTR [rsp+0x28],rdx
  40e44f:	mov    edx,DWORD PTR [rax]
  40e451:	test   edx,edx
  40e453:	jne    0x40e471
  40e455:	lea    rax,[r12+0x4]
  40e45a:	mov    rcx,rax
  40e45d:	sub    rcx,rdi
  40e460:	sar    rcx,0x2
  40e464:	cmp    esi,ecx
  40e466:	ja     0x40e3a9
  40e46c:	jmp    0x40e3c3
  40e471:	mov    r8,rbp
  40e474:	mov    rdx,rax
  40e477:	mov    rcx,rbx
  40e47a:	call   0x40e210
  40e47f:	jmp    0x40e455
  40e481:	mov    rdx,QWORD PTR [rbx+0x1b8]
  40e488:	xor    eax,eax
  40e48a:	jmp    0x40e4a0
  40e48c:	nop    DWORD PTR [rax+0x0]
  40e490:	add    rax,0x10
  40e494:	cmp    rax,0x10e0
  40e49a:	je     0x40e3de
  40e4a0:	cmp    BYTE PTR [rbx+rax*1+0x1100],0x0
  40e4a8:	jne    0x40e490
  40e4aa:	cmp    QWORD PTR [rdx+rax*1+0x18],0x0
  40e4b0:	jne    0x40e490
  40e4b2:	mov    BYTE PTR [rdx+rax*1+0x10],0x0
  40e4b7:	mov    rcx,QWORD PTR [rbx+rax*1+0x1108]
  40e4bf:	mov    QWORD PTR [rdx+rax*1+0x18],rcx
  40e4c4:	jmp    0x40e490
  40e4c6:	mov    BYTE PTR [rbx+0x1b0],0x1
  40e4cd:	call   0x40e1d0
  40e4d2:	mov    QWORD PTR [rbx+0x1b8],rax
  40e4d9:	jmp    0x40e3d1
  40e4de:	xchg   ax,ax
  40e4e0:	test   rdx,rdx
  40e4e3:	je     0x40e4f0
  40e4e5:	mov    eax,DWORD PTR [rdx]
  40e4e7:	test   eax,eax
  40e4e9:	je     0x40e4f0
  40e4eb:	jmp    0x40e210
  40e4f0:	repz ret 
  40e4f2:	nop    DWORD PTR [rax+0x0]
  40e4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e500:	push   r14
  40e502:	push   r13
  40e504:	push   r12
  40e506:	push   rbp
  40e507:	push   rdi
  40e508:	push   rsi
  40e509:	push   rbx
  40e50a:	sub    rsp,0x20
  40e50e:	cmp    QWORD PTR [rip+0x43032],0x0        # 0x451548
  40e516:	mov    r14,rcx
  40e519:	je     0x40e710
  40e51f:	mov    rax,QWORD PTR [rip+0x3b6da]        # 0x449c00
  40e526:	lea    rdx,[rip+0x2f1d3]        # 0x43d700
  40e52d:	lea    rdi,[rip+0x2fd0c]        # 0x43e240
  40e534:	cmp    DWORD PTR [rax],0x1
  40e537:	mov    r8d,DWORD PTR [rax]
  40e53a:	sbb    esi,esi
  40e53c:	and    esi,0xffffffc3
  40e53f:	add    esi,0xd5
  40e545:	cmp    DWORD PTR [rax],0x1
  40e548:	lea    rax,[rip+0x2f531]        # 0x43da80
  40e54f:	sbb    ebx,ebx
  40e551:	and    ebx,0xffffff89
  40e554:	add    ebx,0x1ec
  40e55a:	test   r8d,r8d
  40e55d:	cmovne rdi,rdx
  40e561:	lea    rdx,[rip+0x2ff58]        # 0x43e4c0
  40e568:	cmove  rax,rdx
  40e56c:	test   r14,r14
  40e56f:	mov    r12,rax
  40e572:	je     0x40e6a3
  40e578:	mov    rcx,r14
  40e57b:	call   0x422a00
  40e580:	lea    rdx,[rip+0x35899]        # 0x443e20
  40e587:	mov    rcx,rax
  40e58a:	mov    rbp,rax
  40e58d:	mov    r13,rax
  40e590:	call   0x43a770
  40e595:	test   rax,rax
  40e598:	je     0x40e73e
  40e59e:	lea    r9,[rip+0x42fab]        # 0x451550
  40e5a5:	lea    r8,[rip+0x42fa8]        # 0x451554
  40e5ac:	mov    rdx,r13
  40e5af:	mov    rcx,rax
  40e5b2:	call   0x40d650
  40e5b7:	mov    rcx,r13
  40e5ba:	call   0x43a748
  40e5bf:	mov    ecx,DWORD PTR [rip+0x42f8f]        # 0x451554
  40e5c5:	test   ecx,ecx
  40e5c7:	jne    0x40e690
  40e5cd:	mov    edx,DWORD PTR [rip+0x42f7d]        # 0x451550
  40e5d3:	mov    eax,0x0
  40e5d8:	test   edx,edx
  40e5da:	cmovne rdi,rax
  40e5de:	mov    rcx,QWORD PTR [rip+0x42f63]        # 0x451548
  40e5e5:	mov    r8d,ebx
  40e5e8:	mov    rdx,r12
  40e5eb:	call   0x40e380
  40e5f0:	test   rdi,rdi
  40e5f3:	je     0x40e607
  40e5f5:	mov    rcx,QWORD PTR [rip+0x42f44]        # 0x451540
  40e5fc:	mov    r8d,esi
  40e5ff:	mov    rdx,rdi
  40e602:	call   0x40e380
  40e607:	mov    rbx,QWORD PTR [rip+0x3b2f2]        # 0x449900
  40e60e:	mov    rdx,QWORD PTR [rip+0x42f33]        # 0x451548
  40e615:	lea    rcx,[rbx+0x980]
  40e61c:	lea    rax,[rdx+0x418]
  40e623:	add    rdx,0x5b8
  40e62a:	mov    r8,rcx
  40e62d:	jmp    0x40e643
  40e62f:	nop
  40e630:	cmp    QWORD PTR [rax+0x10f0],0x0
  40e638:	je     0x40e660
  40e63a:	add    rax,0x10
  40e63e:	cmp    rax,rdx
  40e641:	je     0x40e680
  40e643:	cmp    QWORD PTR [rax],0x0
  40e647:	jne    0x40e630
  40e649:	cmp    QWORD PTR [rax+0x10f0],0x0
  40e651:	mov    BYTE PTR [rax-0x8],0x0
  40e655:	mov    QWORD PTR [rax],rcx
  40e658:	jne    0x40e63a
  40e65a:	nop    WORD PTR [rax+rax*1+0x0]
  40e660:	mov    BYTE PTR [rax+0x10e8],0x0
  40e667:	mov    QWORD PTR [rax+0x10f0],r8
  40e66e:	add    rax,0x10
  40e672:	cmp    rax,rdx
  40e675:	jne    0x40e643
  40e677:	nop    WORD PTR [rax+rax*1+0x0]
  40e680:	add    rsp,0x20
  40e684:	pop    rbx
  40e685:	pop    rsi
  40e686:	pop    rdi
  40e687:	pop    rbp
  40e688:	pop    r12
  40e68a:	pop    r13
  40e68c:	pop    r14
  40e68e:	ret    
  40e68f:	nop
  40e690:	mov    eax,DWORD PTR [rip+0x42eba]        # 0x451550
  40e696:	test   eax,eax
  40e698:	jne    0x40e607
  40e69e:	jmp    0x40e5f5
  40e6a3:	lea    rcx,[rip+0x35778]        # 0x443e22
  40e6aa:	call   0x43a730
  40e6af:	test   rax,rax
  40e6b2:	mov    rbp,rax
  40e6b5:	je     0x40e72d
  40e6b7:	mov    rcx,rax
  40e6ba:	call   0x43a620
  40e6bf:	lea    rcx,[rax+0xa]
  40e6c3:	call   0x4227b0
  40e6c8:	mov    rdx,rbp
  40e6cb:	mov    rcx,rax
  40e6ce:	mov    r13,rax
  40e6d1:	call   0x4323b0
  40e6d6:	movabs rcx,0x79656b6f666e692e
  40e6e0:	mov    BYTE PTR [rax],0x2f
  40e6e3:	mov    BYTE PTR [rax+0x9],0x0
  40e6e7:	mov    QWORD PTR [rax+0x1],rcx
  40e6eb:	lea    rdx,[rip+0x3572e]        # 0x443e20
  40e6f2:	mov    rcx,r13
  40e6f5:	call   0x43a770
  40e6fa:	test   rax,rax
  40e6fd:	jne    0x40e59e
  40e703:	mov    rcx,r13
  40e706:	call   0x43a748
  40e70b:	jmp    0x40e5de
  40e710:	call   0x40e1d0
  40e715:	mov    QWORD PTR [rip+0x42e2c],rax        # 0x451548
  40e71c:	call   0x40e1d0
  40e721:	mov    QWORD PTR [rip+0x42e18],rax        # 0x451540
  40e728:	jmp    0x40e51f
  40e72d:	lea    rcx,[rip+0x356f3]        # 0x443e27
  40e734:	call   0x422a00
  40e739:	mov    r13,rax
  40e73c:	jmp    0x40e6eb
  40e73e:	mov    rcx,rbp
  40e741:	call   0x43a748
  40e746:	lea    rcx,[rip+0x356e3]        # 0x443e30
  40e74d:	call   0x433f18
  40e752:	mov    rdx,r14
  40e755:	mov    rcx,rax
  40e758:	call   0x4144d0
  40e75d:	jmp    0x40e5de
  40e762:	nop
  40e763:	nop
  40e764:	nop
  40e765:	nop
  40e766:	nop
  40e767:	nop
  40e768:	nop
  40e769:	nop
  40e76a:	nop
  40e76b:	nop
  40e76c:	nop
  40e76d:	nop
  40e76e:	nop
  40e76f:	nop
  40e770:	push   rdi
  40e771:	push   rsi
  40e772:	push   rbx
  40e773:	sub    rsp,0x50
  40e777:	lea    rdx,[rsp+0x20]
  40e77c:	mov    rdi,rcx
  40e77f:	call   0x435d60
  40e784:	cmp    eax,0xffffffff
  40e787:	je     0x40e8e0
  40e78d:	xor    ebx,ebx
  40e78f:	cmp    QWORD PTR [rip+0x42dd1],0x0        # 0x451568
  40e797:	movabs rsi,0xffffffffffff
  40e7a1:	jne    0x40e7b2
  40e7a3:	jmp    0x40e811
  40e7a5:	add    rbx,0x1
  40e7a9:	cmp    QWORD PTR [rip+0x42db8],rbx        # 0x451568
  40e7b0:	jbe    0x40e811
  40e7b2:	mov    rax,QWORD PTR [rip+0x42db7]        # 0x451570
  40e7b9:	mov    r9,rsi
  40e7bc:	mov    r8,rsi
  40e7bf:	and    r9,QWORD PTR [rsp+0x20]
  40e7c4:	mov    rax,QWORD PTR [rax+rbx*8]
  40e7c8:	and    r8,QWORD PTR [rax+0x8]
  40e7cc:	cmp    r9,r8
  40e7cf:	jne    0x40e7a5
  40e7d1:	cmp    WORD PTR [rax+0xc],0x0
  40e7d6:	jne    0x40e7e7
  40e7d8:	mov    rdx,QWORD PTR [rax]
  40e7db:	mov    rcx,rdi
  40e7de:	call   0x40bde0
  40e7e3:	test   eax,eax
  40e7e5:	jne    0x40e7a5
  40e7e7:	mov    rax,QWORD PTR [rip+0x3b032]        # 0x449820
  40e7ee:	cmp    DWORD PTR [rax],0x1
  40e7f1:	jbe    0x40e802
  40e7f3:	lea    rcx,[rip+0x35686]        # 0x443e80
  40e7fa:	mov    rdx,rdi
  40e7fd:	call   0x4146b0
  40e802:	mov    rcx,rdi
  40e805:	add    rsp,0x50
  40e809:	pop    rbx
  40e80a:	pop    rsi
  40e80b:	pop    rdi
  40e80c:	jmp    0x43a748
  40e811:	mov    rax,QWORD PTR [rip+0x3b008]        # 0x449820
  40e818:	cmp    DWORD PTR [rax],0x1
  40e81b:	jbe    0x40e82c
  40e81d:	lea    rcx,[rip+0x35689]        # 0x443ead
  40e824:	mov    rdx,rdi
  40e827:	call   0x4146b0
  40e82c:	mov    ecx,0x10
  40e831:	call   0x4227b0
  40e836:	mov    rbx,rax
  40e839:	mov    QWORD PTR [rax],rdi
  40e83c:	movzx  eax,WORD PTR [rsp+0x24]
  40e841:	mov    rcx,QWORD PTR [rip+0x42d20]        # 0x451568
  40e848:	mov    rdx,QWORD PTR [rip+0x42d11]        # 0x451560
  40e84f:	mov    WORD PTR [rbx+0xc],ax
  40e853:	mov    eax,DWORD PTR [rsp+0x20]
  40e857:	mov    DWORD PTR [rbx+0x8],eax
  40e85a:	lea    rax,[rcx+0x2]
  40e85e:	cmp    rax,rdx
  40e861:	jb     0x40e920
  40e867:	test   rdx,rdx
  40e86a:	mov    rcx,QWORD PTR [rip+0x42cff]        # 0x451570
  40e871:	je     0x40e90e
  40e877:	test   rcx,rcx
  40e87a:	je     0x40e89a
  40e87c:	movabs rax,0x1555555555555554
  40e886:	cmp    rdx,rax
  40e889:	ja     0x40e933
  40e88f:	mov    rax,rdx
  40e892:	shr    rax,1
  40e895:	lea    rdx,[rdx+rax*1+0x1]
  40e89a:	mov    QWORD PTR [rip+0x42cbf],rdx        # 0x451560
  40e8a1:	shl    rdx,0x3
  40e8a5:	call   0x422820
  40e8aa:	mov    rcx,QWORD PTR [rip+0x42cb7]        # 0x451568
  40e8b1:	mov    QWORD PTR [rip+0x42cb8],rax        # 0x451570
  40e8b8:	lea    rdx,[rcx+0x1]
  40e8bc:	mov    QWORD PTR [rip+0x42ca5],rdx        # 0x451568
  40e8c3:	mov    QWORD PTR [rax+rcx*8],rbx
  40e8c7:	mov    rax,QWORD PTR [rip+0x42ca2]        # 0x451570
  40e8ce:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  40e8d7:	add    rsp,0x50
  40e8db:	pop    rbx
  40e8dc:	pop    rsi
  40e8dd:	pop    rdi
  40e8de:	ret    
  40e8df:	nop
  40e8e0:	mov    rax,QWORD PTR [rip+0x3af39]        # 0x449820
  40e8e7:	cmp    DWORD PTR [rax],0x1
  40e8ea:	jbe    0x40e802
  40e8f0:	lea    rcx,[rip+0x35559]        # 0x443e50
  40e8f7:	mov    rdx,rdi
  40e8fa:	call   0x4146b0
  40e8ff:	mov    rcx,rdi
  40e902:	add    rsp,0x50
  40e906:	pop    rbx
  40e907:	pop    rsi
  40e908:	pop    rdi
  40e909:	jmp    0x43a748
  40e90e:	test   rcx,rcx
  40e911:	je     0x40e929
  40e913:	mov    dl,0x8
  40e915:	jmp    0x40e88f
  40e91a:	nop    WORD PTR [rax+rax*1+0x0]
  40e920:	mov    rax,QWORD PTR [rip+0x42c49]        # 0x451570
  40e927:	jmp    0x40e8b8
  40e929:	mov    edx,0x8
  40e92e:	jmp    0x40e89a
  40e933:	call   0x422a20
  40e938:	nop
  40e939:	nop    DWORD PTR [rax+0x0]
  40e940:	push   rdi
  40e941:	push   rsi
  40e942:	push   rbx
  40e943:	sub    rsp,0x40
  40e947:	mov    rdx,QWORD PTR [rip+0x42c22]        # 0x451570
  40e94e:	lea    rax,[rip+0x3556e]        # 0x443ec3
  40e955:	test   rdx,rdx
  40e958:	je     0x40e9c5
  40e95a:	mov    rdx,QWORD PTR [rdx]
  40e95d:	test   rdx,rdx
  40e960:	je     0x40e9c5
  40e962:	mov    rbx,QWORD PTR [rdx]
  40e965:	test   rbx,rbx
  40e968:	je     0x40e9c5
  40e96a:	lea    rdi,[rsp+0x20]
  40e96f:	mov    esi,0x8
  40e974:	mov    rcx,rdi
  40e977:	call   0x40a000
  40e97c:	jmp    0x40e9a2
  40e97e:	xchg   ax,ax
  40e980:	mov    rax,QWORD PTR [rax+rsi*1]
  40e984:	test   rax,rax
  40e987:	je     0x40e9c0
  40e989:	mov    rbx,QWORD PTR [rax]
  40e98c:	add    rsi,0x8
  40e990:	test   rbx,rbx
  40e993:	je     0x40e9c0
  40e995:	mov    edx,0x3a
  40e99a:	mov    rcx,rdi
  40e99d:	call   0x40ba70
  40e9a2:	lea    rdx,[rip+0x3551b]        # 0x443ec4
  40e9a9:	mov    r8,rbx
  40e9ac:	mov    rcx,rdi
  40e9af:	call   0x40ba90
  40e9b4:	mov    rax,QWORD PTR [rip+0x42bb5]        # 0x451570
  40e9bb:	test   rax,rax
  40e9be:	jne    0x40e980
  40e9c0:	mov    rax,QWORD PTR [rsp+0x20]
  40e9c5:	add    rsp,0x40
  40e9c9:	pop    rbx
  40e9ca:	pop    rsi
  40e9cb:	pop    rdi
  40e9cc:	ret    
  40e9cd:	nop    DWORD PTR [rax]
  40e9d0:	mov    rdx,QWORD PTR [rip+0x42b99]        # 0x451570
  40e9d7:	test   rdx,rdx
  40e9da:	je     0x40e9f3
  40e9dc:	movsxd rax,DWORD PTR [rcx]
  40e9df:	lea    r8d,[rax+0x1]
  40e9e3:	mov    rax,QWORD PTR [rdx+rax*8]
  40e9e7:	mov    DWORD PTR [rcx],r8d
  40e9ea:	test   rax,rax
  40e9ed:	je     0x40e9f3
  40e9ef:	mov    rax,QWORD PTR [rax]
  40e9f2:	ret    
  40e9f3:	xor    eax,eax
  40e9f5:	ret    
  40e9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea00:	mov    rax,QWORD PTR [rip+0x42b69]        # 0x451570
  40ea07:	mov    DWORD PTR [rcx],0x0
  40ea0d:	test   rax,rax
  40ea10:	je     0x40ea24
  40ea12:	mov    rax,QWORD PTR [rax]
  40ea15:	mov    DWORD PTR [rcx],0x1
  40ea1b:	test   rax,rax
  40ea1e:	je     0x40ea24
  40ea20:	mov    rax,QWORD PTR [rax]
  40ea23:	ret    
  40ea24:	xor    eax,eax
  40ea26:	ret    
  40ea27:	nop    WORD PTR [rax+rax*1+0x0]
  40ea30:	push   r12
  40ea32:	push   rbp
  40ea33:	push   rdi
  40ea34:	push   rsi
  40ea35:	push   rbx
  40ea36:	sub    rsp,0x20
  40ea3a:	mov    ebp,DWORD PTR [rdx]
  40ea3c:	test   rcx,rcx
  40ea3f:	je     0x40eac0
  40ea41:	mov    edi,ebp
  40ea43:	mov    rsi,rdx
  40ea46:	mov    rbx,rcx
  40ea49:	call   0x43a620
  40ea4e:	cmp    rdi,rax
  40ea51:	jae    0x40eac0
  40ea53:	lea    r12,[rbx+rdi*1]
  40ea57:	movzx  eax,BYTE PTR [r12]
  40ea5c:	test   al,al
  40ea5e:	je     0x40eac0
  40ea60:	cmp    al,0x3b
  40ea62:	je     0x40eacd
  40ea64:	mov    eax,ebp
  40ea66:	jmp    0x40ea76
  40ea68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea70:	cmp    r8b,0x3b
  40ea74:	je     0x40ea87
  40ea76:	lea    r8d,[rax+0x1]
  40ea7a:	mov    rax,r8
  40ea7d:	movzx  r8d,BYTE PTR [rbx+r8*1]
  40ea82:	test   r8b,r8b
  40ea85:	jne    0x40ea70
  40ea87:	mov    ebx,eax
  40ea89:	sub    eax,ebp
  40ea8b:	mov    ebp,eax
  40ea8d:	lea    ecx,[rbp+0x1]
  40ea90:	call   0x4227b0
  40ea95:	mov    r8,rbp
  40ea98:	mov    rdx,r12
  40ea9b:	mov    rcx,rax
  40ea9e:	mov    rdi,rax
  40eaa1:	call   0x43a610
  40eaa6:	lea    r8d,[rbx+0x1]
  40eaaa:	mov    rax,rdi
  40eaad:	mov    BYTE PTR [rdi+rbp*1],0x0
  40eab1:	mov    DWORD PTR [rsi],r8d
  40eab4:	add    rsp,0x20
  40eab8:	pop    rbx
  40eab9:	pop    rsi
  40eaba:	pop    rdi
  40eabb:	pop    rbp
  40eabc:	pop    r12
  40eabe:	ret    
  40eabf:	nop
  40eac0:	xor    eax,eax
  40eac2:	add    rsp,0x20
  40eac6:	pop    rbx
  40eac7:	pop    rsi
  40eac8:	pop    rdi
  40eac9:	pop    rbp
  40eaca:	pop    r12
  40eacc:	ret    
  40eacd:	mov    ebx,ebp
  40eacf:	mov    ecx,0x1
  40ead4:	xor    ebp,ebp
  40ead6:	jmp    0x40ea90
  40ead8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eae0:	push   r15
  40eae2:	push   r14
  40eae4:	push   r13
  40eae6:	push   r12
  40eae8:	push   rbp
  40eae9:	push   rdi
  40eaea:	push   rsi
  40eaeb:	push   rbx
  40eaec:	sub    rsp,0x78
  40eaf0:	lea    rax,[rsp+0x38]
  40eaf5:	lea    rbp,[rsp+0x3c]
  40eafa:	lea    r13,[rsp+0x40]
  40eaff:	mov    QWORD PTR [rsp+0xc0],rcx
  40eb07:	mov    DWORD PTR [rsp+0x38],0x0
  40eb0f:	mov    QWORD PTR [rsp+0x28],rax
  40eb14:	mov    rdx,QWORD PTR [rsp+0x28]
  40eb19:	mov    rcx,QWORD PTR [rsp+0xc0]
  40eb21:	call   0x40ea30
  40eb26:	test   rax,rax
  40eb29:	je     0x40ec84
  40eb2f:	lea    rbx,[rip+0x35391]        # 0x443ec7
  40eb36:	mov    ecx,0x5
  40eb3b:	mov    rdi,rax
  40eb3e:	mov    rsi,rbx
  40eb41:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40eb43:	mov    rcx,rax
  40eb46:	jne    0x40ec6d
  40eb4c:	call   0x43a748
  40eb51:	mov    rcx,rbx
  40eb54:	mov    DWORD PTR [rsp+0x3c],0x0
  40eb5c:	mov    r12d,0x2
  40eb62:	call   0x43a730
  40eb67:	mov    rbx,rax
  40eb6a:	nop    WORD PTR [rax+rax*1+0x0]
  40eb70:	mov    rdx,rbp
  40eb73:	mov    rcx,rbx
  40eb76:	call   0x40ea30
  40eb7b:	test   rax,rax
  40eb7e:	mov    r14,rax
  40eb81:	je     0x40eb14
  40eb83:	xor    r9d,r9d
  40eb86:	xor    r11d,r11d
  40eb89:	cmp    BYTE PTR [rax],0x0
  40eb8c:	jne    0x40eb9c
  40eb8e:	jmp    0x40ec60
  40eb93:	cmp    r8b,0x2f
  40eb97:	je     0x40ebb7
  40eb99:	mov    r9d,edx
  40eb9c:	lea    eax,[r9+0x1]
  40eba0:	movzx  r8d,BYTE PTR [r14+rax*1]
  40eba5:	mov    rdx,rax
  40eba8:	test   r8b,r8b
  40ebab:	je     0x40ebc0
  40ebad:	test   edx,edx
  40ebaf:	je     0x40eb99
  40ebb1:	cmp    r8b,0x5c
  40ebb5:	jne    0x40eb93
  40ebb7:	lea    r11d,[r9+0x2]
  40ebbb:	jmp    0x40eb99
  40ebbd:	nop    DWORD PTR [rax]
  40ebc0:	mov    r15d,r11d
  40ebc3:	lea    rsi,[r14+r15*1]
  40ebc7:	cmp    BYTE PTR [rsi],0x0
  40ebca:	je     0x40ec60
  40ebd0:	lea    rdi,[rip+0x352f5]        # 0x443ecc
  40ebd7:	mov    rcx,r12
  40ebda:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ebdc:	je     0x40ec60
  40ebe2:	test   r11d,r11d
  40ebe5:	je     0x40ec60
  40ebe7:	lea    rdx,[r15+0xb]
  40ebeb:	mov    rcx,r14
  40ebee:	call   0x422820
  40ebf3:	lea    rsi,[rax+r15*1]
  40ebf7:	mov    r14,rax
  40ebfa:	movabs rax,0x6e692f6572616873
  40ec04:	mov    rdx,r13
  40ec07:	mov    rcx,r14
  40ec0a:	mov    QWORD PTR [rsi],rax
  40ec0d:	mov    eax,0x6f66
  40ec12:	mov    BYTE PTR [rsi+0xa],0x0
  40ec16:	mov    WORD PTR [rsi+0x8],ax
  40ec1a:	call   0x435d60
  40ec1f:	test   eax,eax
  40ec21:	jne    0x40ec32
  40ec23:	movzx  eax,WORD PTR [rsp+0x46]
  40ec28:	and    ax,0xf000
  40ec2c:	cmp    ax,0x4000
  40ec30:	je     0x40ec77
  40ec32:	mov    DWORD PTR [rsi],0x6f666e69
  40ec38:	mov    BYTE PTR [rsi+0x4],0x0
  40ec3c:	mov    rdx,r13
  40ec3f:	mov    rcx,r14
  40ec42:	call   0x435d60
  40ec47:	test   eax,eax
  40ec49:	jne    0x40ec60
  40ec4b:	movzx  eax,WORD PTR [rsp+0x46]
  40ec50:	and    ax,0xf000
  40ec54:	cmp    ax,0x4000
  40ec58:	je     0x40ec77
  40ec5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ec60:	mov    rcx,r14
  40ec63:	call   0x43a748
  40ec68:	jmp    0x40eb70
  40ec6d:	call   0x40e770
  40ec72:	jmp    0x40eb14
  40ec77:	mov    rcx,r14
  40ec7a:	call   0x40e770
  40ec7f:	jmp    0x40eb70
  40ec84:	add    rsp,0x78
  40ec88:	pop    rbx
  40ec89:	pop    rsi
  40ec8a:	pop    rdi
  40ec8b:	pop    rbp
  40ec8c:	pop    r12
  40ec8e:	pop    r13
  40ec90:	pop    r14
  40ec92:	pop    r15
  40ec94:	ret    
  40ec95:	nop
  40ec96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eca0:	push   rbx
  40eca1:	sub    rsp,0x20
  40eca5:	lea    rcx,[rip+0x35222]        # 0x443ece
  40ecac:	call   0x43a730
  40ecb1:	test   rax,rax
  40ecb4:	mov    rbx,rax
  40ecb7:	je     0x40ed10
  40ecb9:	mov    rcx,rax
  40ecbc:	call   0x40eae0
  40ecc1:	mov    edx,DWORD PTR [rip+0x44bd1]        # 0x453898
  40ecc7:	test   edx,edx
  40ecc9:	je     0x40ecf0
  40eccb:	mov    rcx,rbx
  40ecce:	call   0x43a620
  40ecd3:	test   eax,eax
  40ecd5:	je     0x40ece2
  40ecd7:	sub    eax,0x1
  40ecda:	add    rbx,rax
  40ecdd:	cmp    BYTE PTR [rbx],0x3b
  40ece0:	je     0x40ed30
  40ece2:	add    rsp,0x20
  40ece6:	pop    rbx
  40ece7:	ret    
  40ece8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ecf0:	lea    rcx,[rip+0x35339]        # 0x444030
  40ecf7:	call   0x40eae0
  40ecfc:	mov    rcx,rbx
  40ecff:	call   0x43a620
  40ed04:	test   eax,eax
  40ed06:	jne    0x40ecd7
  40ed08:	jmp    0x40ece2
  40ed0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed10:	mov    eax,DWORD PTR [rip+0x44b82]        # 0x453898
  40ed16:	test   eax,eax
  40ed18:	je     0x40ed35
  40ed1a:	lea    rcx,[rip+0x351b7]        # 0x443ed8
  40ed21:	add    rsp,0x20
  40ed25:	pop    rbx
  40ed26:	jmp    0x40eae0
  40ed2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed30:	mov    BYTE PTR [rbx],0x0
  40ed33:	jmp    0x40ed1a
  40ed35:	lea    rcx,[rip+0x352f4]        # 0x444030
  40ed3c:	call   0x40eae0
  40ed41:	jmp    0x40ed1a
  40ed43:	nop
  40ed44:	nop
  40ed45:	nop
  40ed46:	nop
  40ed47:	nop
  40ed48:	nop
  40ed49:	nop
  40ed4a:	nop
  40ed4b:	nop
  40ed4c:	nop
  40ed4d:	nop
  40ed4e:	nop
  40ed4f:	nop
  40ed50:	push   r15
  40ed52:	push   r14
  40ed54:	push   r13
  40ed56:	push   r12
  40ed58:	push   rbp
  40ed59:	push   rdi
  40ed5a:	push   rsi
  40ed5b:	push   rbx
  40ed5c:	sub    rsp,0x28
  40ed60:	mov    r13,QWORD PTR [rip+0x3ab99]        # 0x449900
  40ed67:	mov    r14,rcx
  40ed6a:	cmp    QWORD PTR [r13+0x0],0x0
  40ed6f:	je     0x40ee39
  40ed75:	xor    r12d,r12d
  40ed78:	xor    ebx,ebx
  40ed7a:	xor    edi,edi
  40ed7c:	xor    r15d,r15d
  40ed7f:	xor    esi,esi
  40ed81:	jmp    0x40eddb
  40ed83:	cmp    r15,0x1
  40ed87:	sbb    rdx,rdx
  40ed8a:	and    rdx,0xfffffffffffffcd8
  40ed91:	add    rdx,0x968
  40ed98:	cmp    r15,0x1
  40ed9c:	sbb    rbx,rbx
  40ed9f:	and    rbx,0xffffffffffffff9b
  40eda3:	add    rbx,0x12d
  40edaa:	mov    rcx,r15
  40edad:	call   0x422820
  40edb2:	mov    r15,rax
  40edb5:	add    rdi,0x1
  40edb9:	mov    QWORD PTR [r15+r12*1],rbp
  40edbd:	add    r12,0x8
  40edc1:	movsxd rsi,edi
  40edc4:	mov    QWORD PTR [r15+rdi*8],0x0
  40edcc:	mov    rax,rsi
  40edcf:	shl    rax,0x5
  40edd3:	cmp    QWORD PTR [r13+rax*1+0x0],0x0
  40edd9:	je     0x40ee40
  40eddb:	mov    ecx,0x28
  40ede0:	shl    rsi,0x5
  40ede4:	call   0x4227b0
  40ede9:	mov    rcx,QWORD PTR [r13+rsi*1+0x8]
  40edee:	mov    rbp,rax
  40edf1:	call   0x422a00
  40edf6:	mov    QWORD PTR [rbp+0x0],rax
  40edfa:	lea    rax,[rdi+0x2]
  40edfe:	mov    QWORD PTR [rbp+0x10],0x0
  40ee06:	mov    QWORD PTR [rbp+0x8],0x0
  40ee0e:	cmp    rax,rbx
  40ee11:	jb     0x40edb5
  40ee13:	test   rbx,rbx
  40ee16:	je     0x40ed83
  40ee1c:	test   r15,r15
  40ee1f:	je     0x40ee2c
  40ee21:	mov    rax,rbx
  40ee24:	shr    rax,1
  40ee27:	lea    rbx,[rbx+rax*1+0x1]
  40ee2c:	lea    rdx,[rbx*8+0x0]
  40ee34:	jmp    0x40edaa
  40ee39:	xor    r15d,r15d
  40ee3c:	nop    DWORD PTR [rax+0x0]
  40ee40:	mov    rdx,r15
  40ee43:	mov    rcx,r14
  40ee46:	call   0x4065c0
  40ee4b:	mov    rcx,r15
  40ee4e:	mov    rbx,rax
  40ee51:	call   0x4093d0
  40ee56:	mov    rax,rbx
  40ee59:	add    rsp,0x28
  40ee5d:	pop    rbx
  40ee5e:	pop    rsi
  40ee5f:	pop    rdi
  40ee60:	pop    rbp
  40ee61:	pop    r12
  40ee63:	pop    r13
  40ee65:	pop    r14
  40ee67:	pop    r15
  40ee69:	ret    
  40ee6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ee70:	push   rsi
  40ee71:	push   rbx
  40ee72:	sub    rsp,0x28
  40ee76:	mov    rbx,rcx
  40ee79:	lea    rcx,[rip+0x35200]        # 0x444080
  40ee80:	mov    esi,edx
  40ee82:	call   0x433f18
  40ee87:	mov    rdx,rbx
  40ee8a:	mov    rcx,rax
  40ee8d:	call   0x40ed50
  40ee92:	test   rax,rax
  40ee95:	mov    rbx,rax
  40ee98:	je     0x40eee0
  40ee9a:	cmp    BYTE PTR [rax],0x0
  40ee9d:	je     0x40eec6
  40ee9f:	mov    rcx,rax
  40eea2:	call   0x40c0d0
  40eea7:	test   rax,rax
  40eeaa:	je     0x40eed4
  40eeac:	mov    rcx,rax
  40eeaf:	call   0x40cbe0
  40eeb4:	lea    rcx,[rip+0x351d8]        # 0x444093
  40eebb:	mov    r8,rax
  40eebe:	mov    rdx,rbx
  40eec1:	call   0x4210d0
  40eec6:	mov    rcx,rbx
  40eec9:	add    rsp,0x28
  40eecd:	pop    rbx
  40eece:	pop    rsi
  40eecf:	jmp    0x43a748
  40eed4:	add    rsp,0x28
  40eed8:	pop    rbx
  40eed9:	pop    rsi
  40eeda:	ret    
  40eedb:	nop    DWORD PTR [rax+rax*1+0x0]
  40eee0:	mov    rax,QWORD PTR [rip+0x3a909]        # 0x4497f0
  40eee7:	mov    edx,esi
  40eee9:	mov    rcx,QWORD PTR [rax]
  40eeec:	add    rsp,0x28
  40eef0:	pop    rbx
  40eef1:	pop    rsi
  40eef2:	jmp    0x414890
  40eef7:	nop    WORD PTR [rax+rax*1+0x0]
  40ef00:	push   r12
  40ef02:	push   rbp
  40ef03:	push   rdi
  40ef04:	push   rsi
  40ef05:	push   rbx
  40ef06:	sub    rsp,0x30
  40ef0a:	mov    rax,QWORD PTR [rip+0x3aa3f]        # 0x449950
  40ef11:	mov    ebp,edx
  40ef13:	mov    rdx,QWORD PTR [rip+0x3a9e6]        # 0x449900
  40ef1a:	mov    rbx,rcx
  40ef1d:	mov    rcx,QWORD PTR [rax]
  40ef20:	add    rdx,0xd40
  40ef27:	call   0x40c410
  40ef2c:	test   rax,rax
  40ef2f:	mov    r9,rax
  40ef32:	je     0x40f07c
  40ef38:	cmp    ebp,0x1
  40ef3b:	lea    rcx,[rsp+0x28]
  40ef40:	jne    0x40ef53
  40ef42:	mov    rax,QWORD PTR [rip+0x3a9f7]        # 0x449940
  40ef49:	mov    eax,DWORD PTR [rax]
  40ef4b:	test   eax,eax
  40ef4d:	je     0x40f030
  40ef53:	lea    rdx,[rip+0x35141]        # 0x44409b
  40ef5a:	mov    r8d,ebp
  40ef5d:	call   0x433f30
  40ef62:	mov    rcx,QWORD PTR [rsp+0x28]
  40ef67:	mov    rdx,rbx
  40ef6a:	call   0x40ed50
  40ef6f:	mov    rcx,QWORD PTR [rsp+0x28]
  40ef74:	mov    rbx,rax
  40ef77:	call   0x43a748
  40ef7c:	test   rbx,rbx
  40ef7f:	je     0x40f044
  40ef85:	cmp    BYTE PTR [rbx],0x0
  40ef88:	je     0x40eff0
  40ef8a:	mov    r12,QWORD PTR [rip+0x3a85f]        # 0x4497f0
  40ef91:	mov    rax,QWORD PTR [rip+0x3ac48]        # 0x449be0
  40ef98:	mov    rax,QWORD PTR [rax]
  40ef9b:	cmp    QWORD PTR [r12],rax
  40ef9f:	je     0x40efb4
  40efa1:	lea    rdi,[rip+0x350fe]        # 0x4440a6
  40efa8:	mov    ecx,0xa
  40efad:	mov    rsi,rbx
  40efb0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40efb2:	je     0x40f004
  40efb4:	mov    rcx,rbx
  40efb7:	call   0x40c0d0
  40efbc:	mov    rcx,rbx
  40efbf:	mov    rdi,rax
  40efc2:	call   0x43a748
  40efc7:	test   rdi,rdi
  40efca:	je     0x40efe4
  40efcc:	mov    rax,QWORD PTR [rdi]
  40efcf:	test   rax,rax
  40efd2:	je     0x40f060
  40efd8:	xor    r8d,r8d
  40efdb:	mov    edx,ebp
  40efdd:	mov    rcx,QWORD PTR [r12]
  40efe1:	call   rax
  40efe3:	nop
  40efe4:	add    rsp,0x30
  40efe8:	pop    rbx
  40efe9:	pop    rsi
  40efea:	pop    rdi
  40efeb:	pop    rbp
  40efec:	pop    r12
  40efee:	ret    
  40efef:	nop
  40eff0:	mov    rcx,rbx
  40eff3:	call   0x43a748
  40eff8:	nop
  40eff9:	add    rsp,0x30
  40effd:	pop    rbx
  40effe:	pop    rsi
  40efff:	pop    rdi
  40f000:	pop    rbp
  40f001:	pop    r12
  40f003:	ret    
  40f004:	mov    rcx,rbx
  40f007:	call   0x43a748
  40f00c:	lea    rcx,[rip+0x350a5]        # 0x4440b8
  40f013:	call   0x433f18
  40f018:	mov    rcx,rax
  40f01b:	call   0x4144d0
  40f020:	nop
  40f021:	add    rsp,0x30
  40f025:	pop    rbx
  40f026:	pop    rsi
  40f027:	pop    rdi
  40f028:	pop    rbp
  40f029:	pop    r12
  40f02b:	ret    
  40f02c:	nop    DWORD PTR [rax+0x0]
  40f030:	lea    rdx,[rip+0x3506b]        # 0x4440a2
  40f037:	mov    r8,r9
  40f03a:	call   0x433f30
  40f03f:	jmp    0x40ef62
  40f044:	mov    rax,QWORD PTR [rip+0x3a7a5]        # 0x4497f0
  40f04b:	mov    edx,ebp
  40f04d:	mov    rcx,QWORD PTR [rax]
  40f050:	call   0x414890
  40f055:	jmp    0x40efe4
  40f057:	nop    WORD PTR [rax+rax*1+0x0]
  40f060:	lea    rcx,[rip+0x3507d]        # 0x4440e4
  40f067:	call   0x433f18
  40f06c:	mov    rdx,rbx
  40f06f:	mov    rcx,rax
  40f072:	call   0x4144d0
  40f077:	jmp    0x40efe4
  40f07c:	call   0x43a7b0
  40f081:	nop
  40f082:	nop    DWORD PTR [rax+0x0]
  40f086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f090:	push   rbp
  40f091:	push   rdi
  40f092:	push   rsi
  40f093:	push   rbx
  40f094:	sub    rsp,0x78
  40f098:	mov    rbx,QWORD PTR [rip+0x3aac1]        # 0x449b60
  40f09f:	cmp    edx,0x1
  40f0a2:	mov    esi,edx
  40f0a4:	mov    edi,DWORD PTR [rbx]
  40f0a6:	jne    0x40f0b5
  40f0a8:	mov    rax,QWORD PTR [rip+0x3a891]        # 0x449940
  40f0af:	mov    eax,DWORD PTR [rax]
  40f0b1:	test   eax,eax
  40f0b3:	je     0x40f100
  40f0b5:	call   0x41c510
  40f0ba:	mov    rax,QWORD PTR [rip+0x3ab0f]        # 0x449bd0
  40f0c1:	mov    rcx,QWORD PTR [rax]
  40f0c4:	call   0x401ce0
  40f0c9:	mov    DWORD PTR [rbx],esi
  40f0cb:	call   0x41d3e0
  40f0d0:	mov    edx,DWORD PTR [rbx]
  40f0d2:	cmp    edx,edi
  40f0d4:	je     0x40f143
  40f0d6:	mov    rsi,QWORD PTR [rip+0x3aa93]        # 0x449b70
  40f0dd:	mov    ecx,DWORD PTR [rsi]
  40f0df:	call   0x401d30
  40f0e4:	mov    edx,DWORD PTR [rbx]
  40f0e6:	mov    ecx,DWORD PTR [rsi]
  40f0e8:	call   0x420770
  40f0ed:	nop
  40f0ee:	add    rsp,0x78
  40f0f2:	pop    rbx
  40f0f3:	pop    rsi
  40f0f4:	pop    rdi
  40f0f5:	pop    rbp
  40f0f6:	ret    
  40f0f7:	nop    WORD PTR [rax+rax*1+0x0]
  40f100:	lea    rcx,[rip+0x34ff3]        # 0x4440fa
  40f107:	lea    rsi,[rsp+0x20]
  40f10c:	call   0x433f18
  40f111:	mov    r8d,edi
  40f114:	mov    rdx,rax
  40f117:	mov    rcx,rsi
  40f11a:	call   0x433f00
  40f11f:	mov    rcx,rsi
  40f122:	call   0x4055a0
  40f127:	test   rax,rax
  40f12a:	mov    rbp,rax
  40f12d:	je     0x40f17c
  40f12f:	cmp    BYTE PTR [rax],0x0
  40f132:	mov    esi,edi
  40f134:	jne    0x40f170
  40f136:	mov    rcx,rbp
  40f139:	call   0x43a748
  40f13e:	jmp    0x40f0b5
  40f143:	mov    rax,QWORD PTR [rip+0x3aac6]        # 0x449c10
  40f14a:	mov    edx,0x1
  40f14f:	mov    rcx,QWORD PTR [rax]
  40f152:	call   0x41fbf0
  40f157:	call   0x403fa0
  40f15c:	nop
  40f15d:	add    rsp,0x78
  40f161:	pop    rbx
  40f162:	pop    rsi
  40f163:	pop    rdi
  40f164:	pop    rbp
  40f165:	ret    
  40f166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f170:	mov    rcx,rax
  40f173:	call   0x43a7a8
  40f178:	mov    esi,eax
  40f17a:	jmp    0x40f136
  40f17c:	mov    rax,QWORD PTR [rip+0x3a66d]        # 0x4497f0
  40f183:	mov    edx,0x1
  40f188:	mov    rcx,QWORD PTR [rax]
  40f18b:	call   0x414890
  40f190:	jmp    0x40f0ee
  40f195:	nop
  40f196:	nop
  40f197:	nop
  40f198:	nop
  40f199:	nop
  40f19a:	nop
  40f19b:	nop
  40f19c:	nop
  40f19d:	nop
  40f19e:	nop
  40f19f:	nop
  40f1a0:	push   r15
  40f1a2:	push   r14
  40f1a4:	push   r13
  40f1a6:	push   r12
  40f1a8:	push   rbp
  40f1a9:	push   rdi
  40f1aa:	push   rsi
  40f1ab:	push   rbx
  40f1ac:	sub    rsp,0xf8
  40f1b3:	xor    r15d,r15d
  40f1b6:	mov    rbp,rcx
  40f1b9:	call   0x43a620
  40f1be:	lea    rcx,[rax+0x1]
  40f1c2:	mov    rbx,rax
  40f1c5:	call   0x4227b0
  40f1ca:	mov    rdi,rax
  40f1cd:	lea    rax,[rbp+rbx*1+0x0]
  40f1d2:	mov    QWORD PTR [rsp+0xb8],rbp
  40f1da:	mov    BYTE PTR [rsp+0xa8],0x0
  40f1e2:	mov    DWORD PTR [rsp+0xac],0x0
  40f1ed:	mov    rbx,rdi
  40f1f0:	cmp    rbp,rax
  40f1f3:	mov    QWORD PTR [rsp+0xa0],rax
  40f1fb:	mov    BYTE PTR [rsp+0xb0],0x0
  40f203:	mov    rdx,rbp
  40f206:	jae    0x40f4d0
  40f20c:	lea    rax,[rsp+0x98]
  40f214:	lea    rsi,[rsp+0xa0]
  40f21c:	mov    r12,QWORD PTR [rip+0x3a79d]        # 0x4499c0
  40f223:	mov    QWORD PTR [rsp+0x28],rax
  40f228:	lea    rax,[rsp+0x40]
  40f22d:	mov    QWORD PTR [rsp+0x30],rax
  40f232:	lea    rax,[rsi+0xc]
  40f236:	mov    QWORD PTR [rsp+0x38],rax
  40f23b:	jmp    0x40f2e9
  40f240:	movzx  eax,BYTE PTR [rdx]
  40f243:	mov    ecx,eax
  40f245:	and    eax,0x1f
  40f248:	shr    cl,0x5
  40f24b:	and    ecx,0x7
  40f24e:	mov    ecx,DWORD PTR [r12+rcx*4]
  40f252:	bt     ecx,eax
  40f255:	jae    0x40f4b0
  40f25b:	mov    QWORD PTR [rsp+0xc0],0x1
  40f267:	movsx  ax,BYTE PTR [rdx]
  40f26b:	mov    r13,QWORD PTR [rsp+0xb8]
  40f273:	mov    BYTE PTR [rsp+0xc8],0x1
  40f27b:	mov    WORD PTR [rsp+0xca],ax
  40f283:	mov    BYTE PTR [rsp+0xb0],0x1
  40f28b:	mov    QWORD PTR [rsp+0x98],0x1
  40f297:	movzx  eax,BYTE PTR [r13+0x0]
  40f29c:	and    eax,0xfffffffb
  40f29f:	cmp    al,0x8
  40f2a1:	jne    0x40f3d4
  40f2a7:	movsxd r10,r15d
  40f2aa:	lea    rax,[rdi+r10*1]
  40f2ae:	cmp    rbx,rax
  40f2b1:	jb     0x40f3c4
  40f2b7:	sub    rbx,r10
  40f2ba:	mov    edx,0x1
  40f2bf:	mov    r14d,0x1
  40f2c5:	add    rdx,r13
  40f2c8:	cmp    QWORD PTR [rsp+0xa0],rdx
  40f2d0:	mov    r15d,r14d
  40f2d3:	mov    QWORD PTR [rsp+0xb8],rdx
  40f2db:	mov    BYTE PTR [rsp+0xb0],0x0
  40f2e3:	jbe    0x40f4d0
  40f2e9:	cmp    BYTE PTR [rsp+0xa8],0x0
  40f2f1:	je     0x40f240
  40f2f7:	mov    rdx,QWORD PTR [rsp+0xb8]
  40f2ff:	mov    r8,QWORD PTR [rsp+0xa0]
  40f307:	lea    rcx,[rsi+0x2a]
  40f30b:	lea    r9,[rsi+0xc]
  40f30f:	sub    r8,rdx
  40f312:	call   0x423f00
  40f317:	cmp    rax,0xffffffffffffffff
  40f31b:	mov    QWORD PTR [rsp+0xc0],rax
  40f323:	je     0x40f500
  40f329:	cmp    rax,0xfffffffffffffffe
  40f32d:	je     0x40f521
  40f333:	test   rax,rax
  40f336:	jne    0x40f364
  40f338:	mov    rax,QWORD PTR [rsp+0xb8]
  40f340:	mov    QWORD PTR [rsp+0xc0],0x1
  40f34c:	cmp    BYTE PTR [rax],0x0
  40f34f:	jne    0x40f5e0
  40f355:	cmp    WORD PTR [rsp+0xca],0x0
  40f35e:	jne    0x40f5c0
  40f364:	lea    rcx,[rsi+0xc]
  40f368:	mov    BYTE PTR [rsp+0xc8],0x1
  40f370:	call   0x424040
  40f375:	test   eax,eax
  40f377:	je     0x40f381
  40f379:	mov    BYTE PTR [rsp+0xa8],0x0
  40f381:	mov    r13,QWORD PTR [rsp+0xb8]
  40f389:	mov    r14,QWORD PTR [rsp+0xc0]
  40f391:	cmp    r14,0x1
  40f395:	mov    BYTE PTR [rsp+0xb0],0x1
  40f39d:	mov    QWORD PTR [rsp+0x98],r14
  40f3a5:	je     0x40f297
  40f3ab:	mov    rdx,r13
  40f3ae:	mov    rcx,rbx
  40f3b1:	mov    r8,r14
  40f3b4:	call   0x43a6b8
  40f3b9:	add    rbx,r14
  40f3bc:	mov    rdx,r14
  40f3bf:	jmp    0x40f2c5
  40f3c4:	mov    edx,0x1
  40f3c9:	mov    r14d,0x1
  40f3cf:	jmp    0x40f2c5
  40f3d4:	mov    rax,QWORD PTR [rsp+0xa0]
  40f3dc:	mov    rdx,QWORD PTR [rsp+0x28]
  40f3e1:	mov    rcx,QWORD PTR [rsp+0x30]
  40f3e6:	mov    QWORD PTR [rsp+0x40],rax
  40f3eb:	mov    rax,QWORD PTR [rsp+0xa8]
  40f3f3:	mov    QWORD PTR [rsp+0x48],rax
  40f3f8:	mov    rax,QWORD PTR [rsp+0xb0]
  40f400:	mov    QWORD PTR [rsp+0x50],rax
  40f405:	mov    rax,QWORD PTR [rsp+0xb8]
  40f40d:	mov    QWORD PTR [rsp+0x58],rax
  40f412:	mov    rax,QWORD PTR [rsp+0xc0]
  40f41a:	mov    QWORD PTR [rsp+0x60],rax
  40f41f:	mov    rax,QWORD PTR [rsp+0xc8]
  40f427:	mov    QWORD PTR [rsp+0x68],rax
  40f42c:	mov    rax,QWORD PTR [rsp+0xd0]
  40f434:	mov    QWORD PTR [rsp+0x70],rax
  40f439:	mov    rax,QWORD PTR [rsp+0xd8]
  40f441:	mov    QWORD PTR [rsp+0x78],rax
  40f446:	mov    rax,QWORD PTR [rsp+0xe0]
  40f44e:	mov    QWORD PTR [rsp+0x80],rax
  40f456:	call   0x409680
  40f45b:	test   eax,eax
  40f45d:	jne    0x40f570
  40f463:	mov    rax,QWORD PTR [rip+0x3a716]        # 0x449b80
  40f46a:	mov    eax,DWORD PTR [rax]
  40f46c:	test   eax,eax
  40f46e:	jne    0x40f47e
  40f470:	cmp    BYTE PTR [rsp+0xc8],0x0
  40f478:	je     0x40f550
  40f47e:	movzx  eax,BYTE PTR [r13+0x0]
  40f483:	mov    r14,QWORD PTR [rsp+0x98]
  40f48b:	add    rbx,0x1
  40f48f:	mov    r13,QWORD PTR [rsp+0xb8]
  40f497:	mov    rdx,QWORD PTR [rsp+0xc0]
  40f49f:	mov    BYTE PTR [rbx-0x1],al
  40f4a2:	jmp    0x40f2c5
  40f4a7:	nop    WORD PTR [rax+rax*1+0x0]
  40f4b0:	mov    rcx,QWORD PTR [rsp+0x38]
  40f4b5:	call   0x424040
  40f4ba:	test   eax,eax
  40f4bc:	je     0x40f5a1
  40f4c2:	mov    BYTE PTR [rsp+0xa8],0x1
  40f4ca:	jmp    0x40f2f7
  40f4cf:	nop
  40f4d0:	mov    rcx,rbp
  40f4d3:	mov    BYTE PTR [rbx],0x0
  40f4d6:	mov    rdx,rdi
  40f4d9:	call   0x43a640
  40f4de:	mov    rcx,rdi
  40f4e1:	add    rsp,0xf8
  40f4e8:	pop    rbx
  40f4e9:	pop    rsi
  40f4ea:	pop    rdi
  40f4eb:	pop    rbp
  40f4ec:	pop    r12
  40f4ee:	pop    r13
  40f4f0:	pop    r14
  40f4f2:	pop    r15
  40f4f4:	jmp    0x43a748
  40f4f9:	nop    DWORD PTR [rax+0x0]
  40f500:	mov    QWORD PTR [rsp+0xc0],0x1
  40f50c:	mov    BYTE PTR [rsp+0xc8],0x0
  40f514:	mov    r13,QWORD PTR [rsp+0xb8]
  40f51c:	jmp    0x40f283
  40f521:	mov    r13,QWORD PTR [rsp+0xb8]
  40f529:	mov    r14,QWORD PTR [rsp+0xa0]
  40f531:	mov    BYTE PTR [rsp+0xc8],0x0
  40f539:	sub    r14,r13
  40f53c:	mov    QWORD PTR [rsp+0xc0],r14
  40f544:	jmp    0x40f391
  40f549:	nop    DWORD PTR [rax+0x0]
  40f550:	mov    r14,QWORD PTR [rsp+0x98]
  40f558:	mov    r13,QWORD PTR [rsp+0xb8]
  40f560:	mov    rdx,QWORD PTR [rsp+0xc0]
  40f568:	jmp    0x40f2c5
  40f56d:	nop    DWORD PTR [rax]
  40f570:	mov    r14,QWORD PTR [rsp+0x98]
  40f578:	mov    rdx,r13
  40f57b:	mov    rcx,rbx
  40f57e:	mov    r8,r14
  40f581:	add    rbx,r14
  40f584:	call   0x43a6b8
  40f589:	mov    QWORD PTR [rsp+0xc0],r14
  40f591:	mov    r13,QWORD PTR [rsp+0xb8]
  40f599:	mov    rdx,r14
  40f59c:	jmp    0x40f2c5
  40f5a1:	lea    rdx,[rip+0x34b98]        # 0x444140
  40f5a8:	lea    rcx,[rip+0x34be2]        # 0x444191
  40f5af:	mov    r8d,0x8e
  40f5b5:	call   0x435a10
  40f5ba:	jmp    0x40f4c2
  40f5bf:	nop
  40f5c0:	lea    rdx,[rip+0x34b79]        # 0x444140
  40f5c7:	lea    rcx,[rip+0x34bf1]        # 0x4441bf
  40f5ce:	mov    r8d,0xaa
  40f5d4:	call   0x435a10
  40f5d9:	jmp    0x40f364
  40f5de:	xchg   ax,ax
  40f5e0:	lea    rdx,[rip+0x34b59]        # 0x444140
  40f5e7:	lea    rcx,[rip+0x34bba]        # 0x4441a8
  40f5ee:	mov    r8d,0xa9
  40f5f4:	call   0x435a10
  40f5f9:	cmp    WORD PTR [rsp+0xca],0x0
  40f602:	je     0x40f364
  40f608:	jmp    0x40f5c0
  40f60a:	nop    WORD PTR [rax+rax*1+0x0]
  40f610:	push   r15
  40f612:	push   r14
  40f614:	push   r13
  40f616:	push   r12
  40f618:	push   rbp
  40f619:	push   rdi
  40f61a:	push   rsi
  40f61b:	push   rbx
  40f61c:	sub    rsp,0x38
  40f620:	mov    rdi,QWORD PTR [rip+0x452c9]        # 0x4548f0
  40f627:	call   rdi
  40f629:	lea    rcx,[rax+0x60]
  40f62d:	call   0x43a578
  40f632:	mov    ecx,eax
  40f634:	call   0x43a568
  40f639:	lea    rcx,[rip+0x34b91]        # 0x4441d1
  40f640:	mov    r8d,0x1b6
  40f646:	mov    edx,0x1
  40f64b:	mov    r12d,eax
  40f64e:	call   0x43a5a0
  40f653:	mov    rcx,QWORD PTR [rip+0x41f46]        # 0x4515a0
  40f65a:	mov    ebp,eax
  40f65c:	test   rcx,rcx
  40f65f:	je     0x40f867
  40f665:	lea    rbx,[rip+0x41f34]        # 0x4515a0
  40f66c:	xor    esi,esi
  40f66e:	xchg   ax,ax
  40f670:	add    rbx,0x8
  40f674:	call   0x43a620
  40f679:	mov    rcx,QWORD PTR [rbx]
  40f67c:	add    rsi,rax
  40f67f:	test   rcx,rcx
  40f682:	jne    0x40f670
  40f684:	lea    rcx,[rsi+0x5]
  40f688:	call   0x4227b0
  40f68d:	cmp    ebp,0x2
  40f690:	mov    rbx,rax
  40f693:	jg     0x40f7dc
  40f699:	mov    rax,QWORD PTR [rip+0x41f10]        # 0x4515b0
  40f6a0:	mov    r9,QWORD PTR [rip+0x41f01]        # 0x4515a8
  40f6a7:	lea    rdx,[rip+0x34b27]        # 0x4441d5
  40f6ae:	mov    r8,QWORD PTR [rip+0x41eeb]        # 0x4515a0
  40f6b5:	mov    rcx,rbx
  40f6b8:	mov    QWORD PTR [rsp+0x20],rax
  40f6bd:	call   0x433f00
  40f6c2:	mov    rcx,rbx
  40f6c5:	lea    rdx,[rip+0x34b14]        # 0x4441e0
  40f6cc:	call   QWORD PTR [rip+0x452be]        # 0x454990
  40f6d2:	mov    rcx,rbx
  40f6d5:	mov    r14,rax
  40f6d8:	call   0x43a748
  40f6dd:	call   rdi
  40f6df:	lea    rcx,[rax+0x60]
  40f6e3:	call   0x43a578
  40f6e8:	mov    ecx,r12d
  40f6eb:	mov    edx,eax
  40f6ed:	call   0x43a570
  40f6f2:	test   r14,r14
  40f6f5:	je     0x40f851
  40f6fb:	mov    rcx,r14
  40f6fe:	xor    esi,esi
  40f700:	xor    r15d,r15d
  40f703:	call   0x43a578
  40f708:	xor    r12d,r12d
  40f70b:	mov    r13d,eax
  40f70e:	xor    ebp,ebp
  40f710:	lea    edi,[r12+0x3ff]
  40f718:	cmp    edi,esi
  40f71a:	jl     0x40f74f
  40f71c:	movsxd rbx,esi
  40f71f:	add    rbx,0x400
  40f726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f730:	mov    rdx,rbx
  40f733:	mov    rcx,r15
  40f736:	add    esi,0x400
  40f73c:	call   0x422820
  40f741:	add    rbx,0x400
  40f748:	cmp    esi,edi
  40f74a:	mov    r15,rax
  40f74d:	jle    0x40f730
  40f74f:	lea    rdx,[r15+rbp*1]
  40f753:	mov    r8d,0x3ff
  40f759:	mov    ecx,r13d
  40f75c:	mov    BYTE PTR [rdx],0x0
  40f75f:	call   0x43a5a8
  40f764:	test   eax,eax
  40f766:	js     0x40f780
  40f768:	add    r12d,eax
  40f76b:	test   eax,eax
  40f76d:	movsxd rbp,r12d
  40f770:	mov    BYTE PTR [r15+rbp*1],0x0
  40f775:	jne    0x40f710
  40f777:	nop    WORD PTR [rax+rax*1+0x0]
  40f780:	test   r15,r15
  40f783:	je     0x40f848
  40f789:	cmp    BYTE PTR [r15],0x0
  40f78d:	je     0x40f840
  40f793:	mov    rcx,r14
  40f796:	mov    ebx,0x3
  40f79b:	call   QWORD PTR [rip+0x451e7]        # 0x454988
  40f7a1:	mov    rcx,r15
  40f7a4:	mov    edx,0xa
  40f7a9:	call   0x43a650
  40f7ae:	test   rax,rax
  40f7b1:	je     0x40f858
  40f7b7:	sub    ebx,0x1
  40f7ba:	lea    rcx,[rax+0x1]
  40f7be:	jne    0x40f7a4
  40f7c0:	mov    rcx,r15
  40f7c3:	call   0x40f1a0
  40f7c8:	mov    rax,r15
  40f7cb:	add    rsp,0x38
  40f7cf:	pop    rbx
  40f7d0:	pop    rsi
  40f7d1:	pop    rdi
  40f7d2:	pop    rbp
  40f7d3:	pop    r12
  40f7d5:	pop    r13
  40f7d7:	pop    r14
  40f7d9:	pop    r15
  40f7db:	ret    
  40f7dc:	call   rdi
  40f7de:	lea    rcx,[rax+0x60]
  40f7e2:	call   0x43a578
  40f7e7:	mov    ecx,ebp
  40f7e9:	mov    edx,eax
  40f7eb:	call   0x43a570
  40f7f0:	mov    rax,QWORD PTR [rip+0x41db9]        # 0x4515b0
  40f7f7:	mov    r9,QWORD PTR [rip+0x41daa]        # 0x4515a8
  40f7fe:	lea    rdx,[rip+0x349d0]        # 0x4441d5
  40f805:	mov    r8,QWORD PTR [rip+0x41d94]        # 0x4515a0
  40f80c:	mov    rcx,rbx
  40f80f:	mov    QWORD PTR [rsp+0x20],rax
  40f814:	call   0x433f00
  40f819:	lea    rdx,[rip+0x349c0]        # 0x4441e0
  40f820:	mov    rcx,rbx
  40f823:	call   QWORD PTR [rip+0x45167]        # 0x454990
  40f829:	mov    rcx,rbx
  40f82c:	mov    r14,rax
  40f82f:	call   0x43a748
  40f834:	mov    ecx,ebp
  40f836:	call   0x43a560
  40f83b:	jmp    0x40f6dd
  40f840:	mov    rcx,r15
  40f843:	call   0x43a748
  40f848:	mov    rcx,r14
  40f84b:	call   QWORD PTR [rip+0x45137]        # 0x454988
  40f851:	xor    eax,eax
  40f853:	jmp    0x40f7cb
  40f858:	mov    rcx,r15
  40f85b:	call   0x43a748
  40f860:	xor    eax,eax
  40f862:	jmp    0x40f7cb
  40f867:	mov    ecx,0x5
  40f86c:	jmp    0x40f688
  40f871:	nop    DWORD PTR [rax+rax*1+0x0]
  40f876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f880:	push   r15
  40f882:	push   r14
  40f884:	push   r13
  40f886:	push   r12
  40f888:	push   rbp
  40f889:	push   rdi
  40f88a:	push   rsi
  40f88b:	push   rbx
  40f88c:	sub    rsp,0xa8
  40f893:	cmp    QWORD PTR [rip+0x41ced],0x0        # 0x451588
  40f89b:	mov    rsi,rcx
  40f89e:	je     0x40f8b3
  40f8a0:	mov    rbx,QWORD PTR [rip+0x41d29]        # 0x4515d0
  40f8a7:	mov    rdi,QWORD PTR [rbx]
  40f8aa:	test   rdi,rdi
  40f8ad:	jne    0x40f950
  40f8b3:	call   0x4119d0
  40f8b8:	mov    rdi,rax
  40f8bb:	lea    rax,[rip+0x3494c]        # 0x44420e
  40f8c2:	mov    rcx,rsi
  40f8c5:	mov    QWORD PTR [rdi],rax
  40f8c8:	call   0x422a00
  40f8cd:	mov    rdx,QWORD PTR [rip+0x41cb4]        # 0x451588
  40f8d4:	mov    QWORD PTR [rdi+0x10],rax
  40f8d8:	mov    rax,QWORD PTR [rip+0x41ca1]        # 0x451580
  40f8df:	or     DWORD PTR [rdi+0x2c],0x41
  40f8e3:	lea    rcx,[rdx+0x2]
  40f8e7:	cmp    rcx,rax
  40f8ea:	jb     0x40f9e0
  40f8f0:	test   rax,rax
  40f8f3:	mov    rcx,QWORD PTR [rip+0x41cd6]        # 0x4515d0
  40f8fa:	jne    0x40fee8
  40f900:	test   rcx,rcx
  40f903:	je     0x40ff91
  40f909:	mov    al,0x64
  40f90b:	mov    rdx,rax
  40f90e:	shr    rdx,1
  40f911:	lea    rax,[rax+rdx*1+0x1]
  40f916:	lea    rdx,[rax*8+0x0]
  40f91e:	mov    QWORD PTR [rip+0x41c5b],rax        # 0x451580
  40f925:	call   0x422820
  40f92a:	mov    rdx,QWORD PTR [rip+0x41c57]        # 0x451588
  40f931:	mov    QWORD PTR [rip+0x41c98],rax        # 0x4515d0
  40f938:	jmp    0x40f9e7
  40f93d:	nop    DWORD PTR [rax]
  40f940:	add    rbx,0x8
  40f944:	mov    rdi,QWORD PTR [rbx]
  40f947:	test   rdi,rdi
  40f94a:	je     0x40f8b3
  40f950:	mov    rcx,QWORD PTR [rdi+0x10]
  40f954:	mov    rdx,rsi
  40f957:	call   0x43a648
  40f95c:	test   eax,eax
  40f95e:	jne    0x40f940
  40f960:	cmp    QWORD PTR [rdi+0x18],0x0
  40f965:	je     0x40fa04
  40f96b:	mov    ecx,0x58
  40f970:	call   0x4227b0
  40f975:	mov    rdx,QWORD PTR [rdi]
  40f978:	mov    QWORD PTR [rax],rdx
  40f97b:	mov    rdx,QWORD PTR [rdi+0x8]
  40f97f:	mov    QWORD PTR [rax+0x8],rdx
  40f983:	mov    rdx,QWORD PTR [rdi+0x10]
  40f987:	mov    QWORD PTR [rax+0x10],rdx
  40f98b:	mov    rdx,QWORD PTR [rdi+0x18]
  40f98f:	mov    QWORD PTR [rax+0x18],rdx
  40f993:	mov    rdx,QWORD PTR [rdi+0x20]
  40f997:	mov    QWORD PTR [rax+0x20],rdx
  40f99b:	mov    rdx,QWORD PTR [rdi+0x28]
  40f99f:	mov    QWORD PTR [rax+0x28],rdx
  40f9a3:	mov    rdx,QWORD PTR [rdi+0x30]
  40f9a7:	mov    QWORD PTR [rax+0x30],rdx
  40f9ab:	mov    rdx,QWORD PTR [rdi+0x38]
  40f9af:	mov    QWORD PTR [rax+0x38],rdx
  40f9b3:	mov    rdx,QWORD PTR [rdi+0x40]
  40f9b7:	mov    QWORD PTR [rax+0x40],rdx
  40f9bb:	mov    rdx,QWORD PTR [rdi+0x48]
  40f9bf:	mov    QWORD PTR [rax+0x48],rdx
  40f9c3:	mov    rdx,QWORD PTR [rdi+0x50]
  40f9c7:	mov    QWORD PTR [rax+0x50],rdx
  40f9cb:	add    rsp,0xa8
  40f9d2:	pop    rbx
  40f9d3:	pop    rsi
  40f9d4:	pop    rdi
  40f9d5:	pop    rbp
  40f9d6:	pop    r12
  40f9d8:	pop    r13
  40f9da:	pop    r14
  40f9dc:	pop    r15
  40f9de:	ret    
  40f9df:	nop
  40f9e0:	mov    rax,QWORD PTR [rip+0x41be9]        # 0x4515d0
  40f9e7:	lea    rcx,[rdx+0x1]
  40f9eb:	mov    QWORD PTR [rip+0x41b96],rcx        # 0x451588
  40f9f2:	mov    QWORD PTR [rax+rdx*8],rdi
  40f9f6:	mov    QWORD PTR [rax+rdx*8+0x8],0x0
  40f9ff:	jmp    0x40f960
  40fa04:	cmp    QWORD PTR [rip+0x41b94],0x0        # 0x4515a0
  40fa0c:	je     0x40ff74
  40fa12:	mov    rcx,QWORD PTR [rip+0x41baf]        # 0x4515c8
  40fa19:	test   rcx,rcx
  40fa1c:	je     0x40fa23
  40fa1e:	call   0x43a748
  40fa23:	mov    rcx,QWORD PTR [rip+0x41b96]        # 0x4515c0
  40fa2a:	test   rcx,rcx
  40fa2d:	je     0x40fa34
  40fa2f:	call   0x43a748
  40fa34:	movzx  eax,BYTE PTR [rsi]
  40fa37:	mov    QWORD PTR [rip+0x41b86],0x0        # 0x4515c8
  40fa42:	mov    QWORD PTR [rip+0x41b73],0x0        # 0x4515c0
  40fa4d:	cmp    al,0x28
  40fa4f:	je     0x40ff4d
  40fa55:	test   al,al
  40fa57:	je     0x40ff4d
  40fa5d:	lea    rax,[rsi+0x1]
  40fa61:	mov    ebx,0x1
  40fa66:	jmp    0x40fa77
  40fa68:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa70:	test   dl,dl
  40fa72:	je     0x40fa8d
  40fa74:	mov    rbx,rcx
  40fa77:	movzx  edx,BYTE PTR [rax]
  40fa7a:	mov    r12,rax
  40fa7d:	add    rax,0x1
  40fa81:	mov    r8d,ebx
  40fa84:	lea    rcx,[rbx+0x1]
  40fa88:	cmp    dl,0x28
  40fa8b:	jne    0x40fa70
  40fa8d:	add    r8d,0x1
  40fa91:	movsxd r14,r8d
  40fa94:	mov    ebp,r8d
  40fa97:	mov    rcx,r14
  40fa9a:	call   0x4227b0
  40fa9f:	mov    r8,rbx
  40faa2:	mov    rdx,rsi
  40faa5:	mov    rcx,rax
  40faa8:	mov    r13,rax
  40faab:	mov    QWORD PTR [rip+0x41b16],rax        # 0x4515c8
  40fab2:	call   0x43a610
  40fab7:	cmp    BYTE PTR [r12],0x28
  40fabc:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  40fac2:	je     0x40fe63
  40fac8:	mov    rax,QWORD PTR [rip+0x41af1]        # 0x4515c0
  40facf:	test   rax,rax
  40fad2:	je     0x40ff41
  40fad8:	mov    QWORD PTR [rip+0x41ac9],rax        # 0x4515a8
  40fadf:	mov    QWORD PTR [rip+0x41aca],r13        # 0x4515b0
  40fae6:	mov    QWORD PTR [rip+0x41ac7],0x0        # 0x4515b8
  40faf1:	call   0x40f610
  40faf6:	test   rax,rax
  40faf9:	mov    rbx,rax
  40fafc:	je     0x40ff17
  40fb02:	mov    rcx,rbx
  40fb05:	xor    r15d,r15d
  40fb08:	call   0x43a620
  40fb0d:	mov    edx,0x8
  40fb12:	mov    ecx,0x1
  40fb17:	mov    QWORD PTR [rdi+0x18],rbx
  40fb1b:	mov    DWORD PTR [rdi+0x20],eax
  40fb1e:	mov    DWORD PTR [rdi+0x28],0x0
  40fb25:	call   0x43a798
  40fb2a:	mov    DWORD PTR [rsp+0x78],0x0
  40fb32:	mov    QWORD PTR [rsp+0x38],rax
  40fb37:	lea    rdx,[rip+0x346c2]        # 0x444200
  40fb3e:	mov    eax,DWORD PTR [rdi+0x20]
  40fb41:	mov    rcx,rbx
  40fb44:	mov    QWORD PTR [rsp+0x70],rbx
  40fb49:	mov    DWORD PTR [rsp+0x80],0x0
  40fb54:	mov    DWORD PTR [rsp+0x7c],eax
  40fb58:	call   0x43a638
  40fb5d:	mov    DWORD PTR [rsp+0x78],eax
  40fb61:	lea    rax,[rsp+0x70]
  40fb66:	mov    r12,QWORD PTR [rip+0x44ee3]        # 0x454a50
  40fb6d:	mov    QWORD PTR [rsp+0x40],0x1
  40fb76:	mov    QWORD PTR [rsp+0x58],rdi
  40fb7b:	mov    QWORD PTR [rsp+0x30],rax
  40fb80:	lea    rax,[rsp+0x6c]
  40fb85:	mov    QWORD PTR [rsp+0x28],rax
  40fb8a:	nop    WORD PTR [rax+rax*1+0x0]
  40fb90:	mov    r8,QWORD PTR [rsp+0x28]
  40fb95:	mov    rdx,QWORD PTR [rsp+0x30]
  40fb9a:	lea    rcx,[rip+0x34678]        # 0x444219
  40fba1:	call   0x4128a0
  40fba6:	test   eax,eax
  40fba8:	jne    0x40fe38
  40fbae:	mov    ebx,DWORD PTR [rsp+0x6c]
  40fbb2:	cmp    ebx,0x0
  40fbb5:	jle    0x40fe56
  40fbbb:	mov    rcx,QWORD PTR [rsp+0x70]
  40fbc0:	movsxd rdx,ebx
  40fbc3:	movzx  eax,BYTE PTR [rcx+rdx*1]
  40fbc7:	cmp    al,0xd
  40fbc9:	sete   r9b
  40fbcd:	cmp    al,0x20
  40fbcf:	sete   r8b
  40fbd3:	or     r9b,r8b
  40fbd6:	jne    0x40fc22
  40fbd8:	sub    eax,0x9
  40fbdb:	cmp    al,0x1
  40fbdd:	jbe    0x40fc22
  40fbdf:	lea    rcx,[rcx+rdx*1-0x1]
  40fbe4:	mov    edx,ebx
  40fbe6:	jmp    0x40fc0f
  40fbe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbf0:	movzx  eax,BYTE PTR [rcx]
  40fbf3:	sub    rcx,0x1
  40fbf7:	cmp    al,0xd
  40fbf9:	sete   r9b
  40fbfd:	cmp    al,0x20
  40fbff:	sete   r8b
  40fc03:	or     r9b,r8b
  40fc06:	jne    0x40fc24
  40fc08:	sub    eax,0x9
  40fc0b:	cmp    al,0x1
  40fc0d:	jbe    0x40fc24
  40fc0f:	sub    edx,0x1
  40fc12:	jne    0x40fbf0
  40fc14:	mov    eax,ebx
  40fc16:	add    eax,0x1
  40fc19:	mov    DWORD PTR [rsp+0x78],eax
  40fc1d:	jmp    0x40fb90
  40fc22:	mov    edx,ebx
  40fc24:	lea    edi,[rdx+0x1]
  40fc27:	cmp    ebx,edi
  40fc29:	je     0x40fc14
  40fc2b:	mov    rbp,QWORD PTR [rsp+0x70]
  40fc30:	movsxd rax,edi
  40fc33:	cmp    BYTE PTR [rbp+rax*1+0x0],0x1b
  40fc38:	je     0x40fdf5
  40fc3e:	cmp    ebx,edi
  40fc40:	jle    0x40fee0
  40fc46:	movsxd rdx,edi
  40fc49:	mov    r13d,edi
  40fc4c:	lea    r14,[rbp+rdx*1+0x0]
  40fc51:	jmp    0x40fc60
  40fc53:	add    r13d,0x1
  40fc57:	add    r14,0x1
  40fc5b:	cmp    r13d,ebx
  40fc5e:	je     0x40fc82
  40fc60:	movsx  ecx,BYTE PTR [r14]
  40fc64:	mov    esi,ecx
  40fc66:	call   r12
  40fc69:	cmp    sil,0x5f
  40fc6d:	setne  dl
  40fc70:	test   eax,eax
  40fc72:	sete   al
  40fc75:	test   dl,al
  40fc77:	je     0x40fc53
  40fc79:	sub    esi,0x2d
  40fc7c:	cmp    sil,0x1
  40fc80:	jbe    0x40fc53
  40fc82:	movsxd r10,ebx
  40fc85:	movsx  eax,BYTE PTR [rbp+r10*1+0x1]
  40fc8b:	sub    eax,0x30
  40fc8e:	cmp    eax,0x9
  40fc91:	ja     0x40fc14
  40fc93:	mov    esi,DWORD PTR [rsp+0x7c]
  40fc97:	lea    edx,[rbx+0x1]
  40fc9a:	cmp    edx,esi
  40fc9c:	jge    0x40ff10
  40fca2:	movsxd rax,edx
  40fca5:	add    rbp,rax
  40fca8:	cmp    BYTE PTR [rbp+0x0],0x29
  40fcac:	jne    0x40fcc1
  40fcae:	jmp    0x40fe30
  40fcb3:	add    rbp,0x1
  40fcb7:	cmp    BYTE PTR [rbp+0x0],0x29
  40fcbb:	je     0x40fe30
  40fcc1:	add    edx,0x1
  40fcc4:	cmp    edx,esi
  40fcc6:	jne    0x40fcb3
  40fcc8:	mov    r8d,r13d
  40fccb:	mov    ecx,0x28
  40fcd0:	mov    QWORD PTR [rsp+0x50],r10
  40fcd5:	sub    r8d,edi
  40fcd8:	lea    ebp,[r8+rsi*1]
  40fcdc:	mov    DWORD PTR [rsp+0x48],r8d
  40fce1:	call   0x4227b0
  40fce6:	sub    ebp,ebx
  40fce8:	mov    ecx,0x1
  40fced:	mov    r13d,ebp
  40fcf0:	mov    rbp,rax
  40fcf3:	lea    edx,[r13+0x1]
  40fcf7:	movsxd rdx,edx
  40fcfa:	call   0x422990
  40fcff:	movsxd r8,DWORD PTR [rsp+0x48]
  40fd04:	mov    r13,QWORD PTR [rsp+0x70]
  40fd09:	movsxd rdx,edi
  40fd0c:	mov    rcx,rax
  40fd0f:	mov    QWORD PTR [rbp+0x0],rax
  40fd13:	mov    QWORD PTR [rsp+0x48],rax
  40fd18:	add    rdx,r13
  40fd1b:	call   0x43a610
  40fd20:	mov    r11,QWORD PTR [rsp+0x48]
  40fd25:	mov    rcx,r11
  40fd28:	call   0x43a620
  40fd2d:	mov    r10,QWORD PTR [rsp+0x50]
  40fd32:	mov    r11,QWORD PTR [rsp+0x48]
  40fd37:	mov    r8d,esi
  40fd3a:	sub    r8d,ebx
  40fd3d:	movsxd r8,r8d
  40fd40:	lea    rcx,[r11+rax*1]
  40fd44:	lea    rdx,[r13+r10*1+0x0]
  40fd49:	call   0x43a610
  40fd4e:	lea    rcx,[rip+0x344b9]        # 0x44420e
  40fd55:	call   0x422a00
  40fd5a:	mov    rcx,QWORD PTR [rbp+0x0]
  40fd5e:	mov    QWORD PTR [rbp+0x8],rax
  40fd62:	call   0x422a00
  40fd67:	mov    QWORD PTR [rbp+0x10],rax
  40fd6b:	lea    rax,[r15+0x2]
  40fd6f:	cmp    rax,QWORD PTR [rsp+0x40]
  40fd74:	mov    DWORD PTR [rbp+0x20],0x0
  40fd7b:	mov    DWORD PTR [rbp+0x18],edi
  40fd7e:	mov    DWORD PTR [rbp+0x1c],esi
  40fd81:	mov    DWORD PTR [rbp+0x24],0x0
  40fd88:	jb     0x40fdd6
  40fd8a:	cmp    QWORD PTR [rsp+0x38],0x0
  40fd90:	je     0x40fdba
  40fd92:	mov    rax,QWORD PTR [rsp+0x40]
  40fd97:	movabs rdi,0x1555555555555554
  40fda1:	cmp    rax,rdi
  40fda4:	ja     0x40ff04
  40fdaa:	mov    rdi,rax
  40fdad:	shr    rax,1
  40fdb0:	lea    rax,[rdi+rax*1+0x1]
  40fdb5:	mov    QWORD PTR [rsp+0x40],rax
  40fdba:	mov    rax,QWORD PTR [rsp+0x40]
  40fdbf:	mov    rcx,QWORD PTR [rsp+0x38]
  40fdc4:	lea    rdx,[rax*8+0x0]
  40fdcc:	call   0x422820
  40fdd1:	mov    QWORD PTR [rsp+0x38],rax
  40fdd6:	mov    rax,QWORD PTR [rsp+0x38]
  40fddb:	mov    QWORD PTR [rax+r15*8],rbp
  40fddf:	mov    QWORD PTR [rax+r15*8+0x8],0x0
  40fde8:	add    r15,0x1
  40fdec:	mov    eax,DWORD PTR [rsp+0x6c]
  40fdf0:	jmp    0x40fc16
  40fdf5:	cmp    BYTE PTR [rbp+rax*1+0x1],0x5b
  40fdfa:	jne    0x40fc3e
  40fe00:	lea    esi,[rdx+0x3]
  40fe03:	lea    rdx,[rip+0x343f8]        # 0x444202
  40fe0a:	movsxd rcx,esi
  40fe0d:	add    rcx,rbp
  40fe10:	call   0x43a608
  40fe15:	lea    edx,[rsi+rax*1]
  40fe18:	mov    eax,ebx
  40fe1a:	movsxd rcx,edx
  40fe1d:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x6d
  40fe22:	jne    0x40fc16
  40fe28:	lea    edi,[rdx+0x1]
  40fe2b:	jmp    0x40fc3e
  40fe30:	lea    esi,[rdx+0x1]
  40fe33:	jmp    0x40fcc8
  40fe38:	mov    rdi,QWORD PTR [rsp+0x58]
  40fe3d:	mov    rax,QWORD PTR [rsp+0x38]
  40fe42:	mov    QWORD PTR [rdi+0x30],rax
  40fe46:	lea    rax,[rip+0x343ce]        # 0x44421b
  40fe4d:	mov    QWORD PTR [rdi+0x38],rax
  40fe51:	jmp    0x40f96b
  40fe56:	jne    0x40fc22
  40fe5c:	xor    eax,eax
  40fe5e:	jmp    0x40fc16
  40fe63:	add    r14,rsi
  40fe66:	movzx  eax,BYTE PTR [r14]
  40fe6a:	cmp    al,0x29
  40fe6c:	je     0x40fed1
  40fe6e:	test   al,al
  40fe70:	je     0x40fed1
  40fe72:	movsxd rax,ebp
  40fe75:	mov    r8d,ebp
  40fe78:	lea    rax,[rsi+rax*1+0x1]
  40fe7d:	jmp    0x40fe84
  40fe7f:	nop
  40fe80:	test   dl,dl
  40fe82:	je     0x40fe94
  40fe84:	movzx  edx,BYTE PTR [rax]
  40fe87:	add    r8d,0x1
  40fe8b:	add    rax,0x1
  40fe8f:	cmp    dl,0x29
  40fe92:	jne    0x40fe80
  40fe94:	sub    r8d,ebp
  40fe97:	lea    ecx,[r8+0x1]
  40fe9b:	movsxd rbx,r8d
  40fe9e:	movsxd rcx,ecx
  40fea1:	call   0x4227b0
  40fea6:	mov    r8,rbx
  40fea9:	mov    rsi,rax
  40feac:	mov    rdx,r14
  40feaf:	mov    rcx,rax
  40feb2:	mov    QWORD PTR [rip+0x41707],rax        # 0x4515c0
  40feb9:	call   0x43a610
  40febe:	mov    BYTE PTR [rsi+rbx*1],0x0
  40fec2:	mov    r13,QWORD PTR [rip+0x416ff]        # 0x4515c8
  40fec9:	mov    rax,rsi
  40fecc:	jmp    0x40fad8
  40fed1:	xor    ebx,ebx
  40fed3:	mov    ecx,0x1
  40fed8:	jmp    0x40fea1
  40feda:	nop    WORD PTR [rax+rax*1+0x0]
  40fee0:	mov    r13d,edi
  40fee3:	jmp    0x40fc82
  40fee8:	test   rcx,rcx
  40feeb:	je     0x40f916
  40fef1:	movabs rdx,0x1555555555555554
  40fefb:	cmp    rax,rdx
  40fefe:	jbe    0x40f90b
  40ff04:	call   0x422a20
  40ff09:	nop    DWORD PTR [rax+0x0]
  40ff10:	mov    esi,edx
  40ff12:	jmp    0x40fcc8
  40ff17:	cmp    QWORD PTR [rip+0x416a1],0x0        # 0x4515c0
  40ff1f:	je     0x40ff6d
  40ff21:	lea    rax,[rip+0x342d5]        # 0x4441fd
  40ff28:	mov    QWORD PTR [rip+0x41679],rax        # 0x4515a8
  40ff2f:	call   0x40f610
  40ff34:	test   rax,rax
  40ff37:	je     0x40ff6d
  40ff39:	mov    rbx,rax
  40ff3c:	jmp    0x40fb02
  40ff41:	lea    rax,[rip+0x342b5]        # 0x4441fd
  40ff48:	jmp    0x40fad8
  40ff4d:	mov    r12,rsi
  40ff50:	mov    r14d,0x1
  40ff56:	mov    ebp,0x1
  40ff5b:	xor    ebx,ebx
  40ff5d:	jmp    0x40fa97
  40ff62:	mov    QWORD PTR [rip+0x41633],0x0        # 0x4515a0
  40ff6d:	xor    eax,eax
  40ff6f:	jmp    0x40f9cb
  40ff74:	lea    rcx,[rip+0x3426c]        # 0x4441e7
  40ff7b:	call   0x43a730
  40ff80:	test   rax,rax
  40ff83:	je     0x40ff9b
  40ff85:	mov    QWORD PTR [rip+0x41614],rax        # 0x4515a0
  40ff8c:	jmp    0x40fa12
  40ff91:	mov    eax,0x64
  40ff96:	jmp    0x40f916
  40ff9b:	lea    rcx,[rip+0x34256]        # 0x4441f8
  40ffa2:	lea    r12,[rsp+0x70]
  40ffa7:	call   0x43a730
  40ffac:	mov    r13,rax
  40ffaf:	lea    rax,[rsp+0x6c]
  40ffb4:	mov    DWORD PTR [rsp+0x6c],0x0
  40ffbc:	mov    QWORD PTR [rsp+0x28],rax
  40ffc1:	mov    rdx,QWORD PTR [rsp+0x28]
  40ffc6:	mov    rcx,r13
  40ffc9:	call   0x40ea30
  40ffce:	test   rax,rax
  40ffd1:	mov    rbx,rax
  40ffd4:	je     0x40ff62
  40ffd6:	cmp    BYTE PTR [rbx],0x7e
  40ffd9:	je     0x4100ad
  40ffdf:	mov    rcx,rbx
  40ffe2:	call   0x43a620
  40ffe7:	lea    rcx,[rax+0x25]
  40ffeb:	call   0x4227b0
  40fff0:	mov    rdx,rbx
  40fff3:	mov    rcx,rax
  40fff6:	mov    rbp,rax
  40fff9:	call   0x4323b0
  40fffe:	movzx  edx,BYTE PTR [rax-0x1]
  410002:	cmp    dl,0x2f
  410005:	je     0x410014
  410007:	cmp    dl,0x5c
  41000a:	je     0x410014
  41000c:	mov    edx,0x2f
  410011:	mov    WORD PTR [rax],dx
  410014:	mov    rcx,rbp
  410017:	call   0x43a620
  41001c:	mov    rcx,rbx
  41001f:	mov    DWORD PTR [rbp+rax*1+0x0],0x6e616d
  410027:	lea    r14,[rbp+rax*1+0x3]
  41002c:	lea    rbx,[rip+0x34255]        # 0x444288
  410033:	call   0x43a748
  410038:	lea    rdx,[rip+0x341a3]        # 0x4441e2
  41003f:	jmp    0x41006c
  410041:	mov    rdx,r12
  410044:	mov    rcx,rbp
  410047:	call   0x435d60
  41004c:	test   eax,eax
  41004e:	jne    0x41005f
  410050:	movzx  eax,WORD PTR [rsp+0x76]
  410055:	and    ax,0xf000
  410059:	cmp    ax,0x8000
  41005d:	je     0x41007b
  41005f:	add    rbx,0x8
  410063:	mov    rdx,QWORD PTR [rbx-0x8]
  410067:	test   rdx,rdx
  41006a:	je     0x4100a0
  41006c:	cmp    BYTE PTR [rdx],0x0
  41006f:	je     0x410041
  410071:	mov    rcx,r14
  410074:	call   0x43a640
  410079:	jmp    0x410041
  41007b:	mov    edx,0x1
  410080:	mov    rcx,rbp
  410083:	call   0x43a550
  410088:	test   eax,eax
  41008a:	jne    0x41005f
  41008c:	mov    QWORD PTR [rip+0x4150d],rbp        # 0x4515a0
  410093:	jmp    0x40fa12
  410098:	nop    DWORD PTR [rax+rax*1+0x0]
  4100a0:	mov    rcx,rbp
  4100a3:	call   0x43a748
  4100a8:	jmp    0x40ffc1
  4100ad:	mov    rcx,rbx
  4100b0:	call   0x41e9a0
  4100b5:	mov    rcx,rbx
  4100b8:	mov    rbp,rax
  4100bb:	mov    rbx,rbp
  4100be:	call   0x43a748
  4100c3:	jmp    0x40ffdf
  4100c8:	nop
  4100c9:	nop
  4100ca:	nop
  4100cb:	nop
  4100cc:	nop
  4100cd:	nop
  4100ce:	nop
  4100cf:	nop
  4100d0:	mov    rdx,QWORD PTR [rdx]
  4100d3:	mov    rcx,QWORD PTR [rcx]
  4100d6:	jmp    0x4213b0
  4100db:	nop    DWORD PTR [rax+rax*1+0x0]
  4100e0:	push   r15
  4100e2:	push   r14
  4100e4:	push   r13
  4100e6:	push   r12
  4100e8:	push   rbp
  4100e9:	push   rdi
  4100ea:	push   rsi
  4100eb:	push   rbx
  4100ec:	sub    rsp,0x58
  4100f0:	mov    rax,QWORD PTR [rip+0x39b19]        # 0x449c10
  4100f7:	xor    r13d,r13d
  4100fa:	xor    r14d,r14d
  4100fd:	xor    r15d,r15d
  410100:	mov    r12,QWORD PTR [rax]
  410103:	test   r12,r12
  410106:	je     0x410558
  41010c:	nop    DWORD PTR [rax+0x0]
  410110:	xor    ebx,ebx
  410112:	cmp    QWORD PTR [r12+0xb0],0x0
  41011b:	je     0x41030b
  410121:	mov    rax,QWORD PTR [r12+0xa8]
  410129:	lea    rdi,[rip+0x341d0]        # 0x444300
  410130:	mov    ecx,0xc
  410135:	mov    rax,QWORD PTR [rax+rbx*8]
  410139:	mov    rbp,QWORD PTR [rax]
  41013c:	mov    r8,QWORD PTR [rbp+0x10]
  410140:	mov    rsi,r8
  410143:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410145:	je     0x4102f9
  41014b:	cmp    QWORD PTR [rip+0x4148d],0x0        # 0x4515e0
  410153:	je     0x410543
  410159:	mov    QWORD PTR [rip+0x4148c],0x0        # 0x4515f0
  410164:	mov    rdi,QWORD PTR [rbp+0x8]
  410168:	test   rdi,rdi
  41016b:	je     0x410531
  410171:	cmp    BYTE PTR [rdi],0x0
  410174:	jne    0x410500
  41017a:	lea    rdx,[rip+0x3418b]        # 0x44430c
  410181:	lea    rcx,[rip+0x41458]        # 0x4515e0
  410188:	call   0x40ba90
  41018d:	mov    rax,QWORD PTR [rip+0x4145c]        # 0x4515f0
  410194:	cmp    eax,0x23
  410197:	mov    esi,eax
  410199:	jg     0x4101b9
  41019b:	nop    DWORD PTR [rax+rax*1+0x0]
  4101a0:	lea    rcx,[rip+0x41439]        # 0x4515e0
  4101a7:	mov    edx,0x20
  4101ac:	add    esi,0x1
  4101af:	call   0x40ba70
  4101b4:	cmp    esi,0x24
  4101b7:	jne    0x4101a0
  4101b9:	mov    edx,DWORD PTR [rbp+0x20]
  4101bc:	mov    r8d,0x1
  4101c2:	test   edx,edx
  4101c4:	jle    0x4101f4
  4101c6:	mov    rax,QWORD PTR [rbp+0x18]
  4101ca:	sub    edx,0x1
  4101cd:	mov    r8d,0x1
  4101d3:	lea    rcx,[rax+rdx*1+0x1]
  4101d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4101e0:	xor    edx,edx
  4101e2:	cmp    BYTE PTR [rax],0xa
  4101e5:	sete   dl
  4101e8:	add    rax,0x1
  4101ec:	add    r8d,edx
  4101ef:	cmp    rax,rcx
  4101f2:	jne    0x4101e0
  4101f4:	lea    rdx,[rip+0x34123]        # 0x44431e
  4101fb:	lea    rcx,[rip+0x413de]        # 0x4515e0
  410202:	call   0x40ba90
  410207:	lea    rcx,[rip+0x413d2]        # 0x4515e0
  41020e:	mov    edx,0x20
  410213:	call   0x40ba70
  410218:	mov    rax,QWORD PTR [rip+0x413d1]        # 0x4515f0
  41021f:	cmp    eax,0x2b
  410222:	mov    esi,eax
  410224:	jg     0x410249
  410226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410230:	lea    rcx,[rip+0x413a9]        # 0x4515e0
  410237:	mov    edx,0x20
  41023c:	add    esi,0x1
  41023f:	call   0x40ba70
  410244:	cmp    esi,0x2c
  410247:	jne    0x410230
  410249:	mov    r8d,DWORD PTR [rbp+0x20]
  41024d:	lea    rdx,[rip+0x340cd]        # 0x444321
  410254:	lea    rcx,[rip+0x41385]        # 0x4515e0
  41025b:	call   0x40ba90
  410260:	test   rdi,rdi
  410263:	je     0x41029b
  410265:	mov    rax,QWORD PTR [rip+0x41384]        # 0x4515f0
  41026c:	cmp    eax,0x32
  41026f:	mov    esi,eax
  410271:	jg     0x41028c
  410273:	lea    rcx,[rip+0x41366]        # 0x4515e0
  41027a:	mov    edx,0x20
  41027f:	add    esi,0x1
  410282:	call   0x40ba70
  410287:	cmp    esi,0x33
  41028a:	jne    0x410273
  41028c:	lea    rcx,[rip+0x4134d]        # 0x4515e0
  410293:	mov    rdx,rdi
  410296:	call   0x40ba90
  41029b:	mov    rcx,QWORD PTR [rip+0x4133e]        # 0x4515e0
  4102a2:	call   0x422a00
  4102a7:	mov    rsi,rax
  4102aa:	lea    rax,[r14+0x2]
  4102ae:	cmp    rax,r13
  4102b1:	jb     0x4102e8
  4102b3:	test   r13,r13
  4102b6:	jne    0x4104d0
  4102bc:	cmp    r15,0x1
  4102c0:	sbb    rdx,rdx
  4102c3:	and    rdx,0xffffffffffffffa8
  4102c7:	add    rdx,0xf8
  4102ce:	cmp    r15,0x1
  4102d2:	sbb    r13,r13
  4102d5:	and    r13,0xfffffffffffffff5
  4102d9:	add    r13,0x1f
  4102dd:	mov    rcx,r15
  4102e0:	call   0x422820
  4102e5:	mov    r15,rax
  4102e8:	mov    QWORD PTR [r15+r14*8],rsi
  4102ec:	mov    QWORD PTR [r15+r14*8+0x8],0x0
  4102f5:	add    r14,0x1
  4102f9:	add    rbx,0x1
  4102fd:	cmp    QWORD PTR [r12+0xb0],rbx
  410305:	ja     0x410121
  41030b:	mov    r12,QWORD PTR [r12]
  41030f:	test   r12,r12
  410312:	jne    0x410110
  410318:	test   r15,r15
  41031b:	je     0x410558
  410321:	lea    r9,[rip+0xfffffffffffffda8]        # 0x4100d0
  410328:	mov    r8d,0x8
  41032e:	mov    rdx,r14
  410331:	mov    rcx,r15
  410334:	mov    rbp,r14
  410337:	call   0x43a690
  41033c:	sub    rbp,0x1
  410340:	je     0x4105c6
  410346:	xor    ebx,ebx
  410348:	mov    edi,0x1
  41034d:	jmp    0x41035b
  41034f:	add    rbx,0x1
  410353:	add    edi,0x1
  410356:	cmp    rbx,rbp
  410359:	je     0x410389
  41035b:	mov    rsi,QWORD PTR [r15+rbx*8]
  41035f:	mov    rdx,QWORD PTR [r15+rbx*8+0x8]
  410364:	mov    rcx,rsi
  410367:	call   0x4213b0
  41036c:	test   eax,eax
  41036e:	jne    0x41034f
  410370:	mov    rcx,rsi
  410373:	call   0x43a748
  410378:	mov    QWORD PTR [r15+rbx*8],0x0
  410380:	add    rbx,0x1
  410384:	cmp    rbx,rbp
  410387:	jne    0x41035b
  410389:	lea    ecx,[rdi+0x1]
  41038c:	movsxd rdi,edi
  41038f:	movsxd rcx,ecx
  410392:	shl    rcx,0x3
  410396:	call   0x4227b0
  41039b:	test   r14,r14
  41039e:	mov    rbp,rax
  4103a1:	je     0x4105bf
  4103a7:	lea    r9,[r15+r14*8]
  4103ab:	mov    rdx,r15
  4103ae:	xor    r8d,r8d
  4103b1:	mov    rax,QWORD PTR [rdx]
  4103b4:	test   rax,rax
  4103b7:	je     0x4103c5
  4103b9:	movsxd rcx,r8d
  4103bc:	add    r8d,0x1
  4103c0:	mov    QWORD PTR [rbp+rcx*8+0x0],rax
  4103c5:	add    rdx,0x8
  4103c9:	cmp    rdx,r9
  4103cc:	jne    0x4103b1
  4103ce:	movsxd rax,r8d
  4103d1:	shl    rax,0x3
  4103d5:	lea    rbx,[rsp+0x30]
  4103da:	mov    QWORD PTR [rbp+rax*1+0x0],0x0
  4103e3:	mov    rcx,r15
  4103e6:	call   0x43a748
  4103eb:	mov    rcx,rbx
  4103ee:	call   0x40a000
  4103f3:	lea    rdx,[rip+0x33f2b]        # 0x444325
  4103fa:	mov    rcx,rbx
  4103fd:	call   0x40ba90
  410402:	lea    rcx,[rip+0x33f1f]        # 0x444328
  410409:	call   0x433f18
  41040e:	xor    edx,edx
  410410:	mov    rcx,rax
  410413:	call   0x40c4d0
  410418:	lea    rdx,[rip+0x33f86]        # 0x4443a5
  41041f:	mov    r8,rax
  410422:	mov    rcx,rbx
  410425:	call   0x40ba90
  41042a:	lea    rcx,[rip+0x33f77]        # 0x4443a8
  410431:	call   0x433f18
  410436:	lea    rdx,[rip+0x33ffb]        # 0x444438
  41043d:	mov    r8,rax
  410440:	mov    rcx,rbx
  410443:	call   0x40ba90
  410448:	test   rbp,rbp
  41044b:	je     0x4104a4
  41044d:	test   rdi,rdi
  410450:	je     0x41049c
  410452:	mov    rsi,QWORD PTR [rbp+0x0]
  410456:	lea    rdx,[rip+0x33fdb]        # 0x444438
  41045d:	mov    rcx,rbx
  410460:	mov    r8,rsi
  410463:	call   0x40ba90
  410468:	mov    rcx,rsi
  41046b:	xor    esi,esi
  41046d:	call   0x43a748
  410472:	jmp    0x410493
  410474:	mov    r12,QWORD PTR [rbp+rsi*8+0x0]
  410479:	lea    rdx,[rip+0x33fb8]        # 0x444438
  410480:	mov    rcx,rbx
  410483:	mov    r8,r12
  410486:	call   0x40ba90
  41048b:	mov    rcx,r12
  41048e:	call   0x43a748
  410493:	add    rsi,0x1
  410497:	cmp    rsi,rdi
  41049a:	jne    0x410474
  41049c:	mov    rcx,rbp
  41049f:	call   0x43a748
  4104a4:	mov    rcx,rbx
  4104a7:	call   0x41fd00
  4104ac:	xor    r8d,r8d
  4104af:	mov    rbx,rax
  4104b2:	mov    rcx,rax
  4104b5:	xor    edx,edx
  4104b7:	call   0x40a810
  4104bc:	mov    rax,rbx
  4104bf:	add    rsp,0x58
  4104c3:	pop    rbx
  4104c4:	pop    rsi
  4104c5:	pop    rdi
  4104c6:	pop    rbp
  4104c7:	pop    r12
  4104c9:	pop    r13
  4104cb:	pop    r14
  4104cd:	pop    r15
  4104cf:	ret    
  4104d0:	test   r15,r15
  4104d3:	je     0x4104f3
  4104d5:	movabs rax,0x1555555555555554
  4104df:	cmp    r13,rax
  4104e2:	ja     0x4105d5
  4104e8:	mov    rax,r13
  4104eb:	shr    rax,1
  4104ee:	lea    r13,[r13+rax*1+0x1]
  4104f3:	lea    rdx,[r13*8+0x0]
  4104fb:	jmp    0x4102dd
  410500:	mov    rcx,QWORD PTR [rbp+0x0]
  410504:	mov    QWORD PTR [rsp+0x28],r8
  410509:	call   0x409e60
  41050e:	mov    r8,QWORD PTR [rsp+0x28]
  410513:	lea    rdx,[rip+0x33df9]        # 0x444313
  41051a:	lea    rcx,[rip+0x410bf]        # 0x4515e0
  410521:	mov    r9,r8
  410524:	mov    r8,rax
  410527:	call   0x40ba90
  41052c:	jmp    0x41018d
  410531:	mov    rdi,QWORD PTR [rbp+0x0]
  410535:	test   rdi,rdi
  410538:	jne    0x410171
  41053e:	jmp    0x41017a
  410543:	lea    rcx,[rip+0x41096]        # 0x4515e0
  41054a:	call   0x40a000
  41054f:	mov    r8,QWORD PTR [rbp+0x10]
  410553:	jmp    0x410164
  410558:	lea    rbx,[rsp+0x30]
  41055d:	mov    rcx,rbx
  410560:	call   0x40a000
  410565:	lea    rdx,[rip+0x33db9]        # 0x444325
  41056c:	mov    rcx,rbx
  41056f:	call   0x40ba90
  410574:	lea    rcx,[rip+0x33dad]        # 0x444328
  41057b:	call   0x433f18
  410580:	xor    edx,edx
  410582:	mov    rcx,rax
  410585:	call   0x40c4d0
  41058a:	lea    rdx,[rip+0x33e14]        # 0x4443a5
  410591:	mov    r8,rax
  410594:	mov    rcx,rbx
  410597:	call   0x40ba90
  41059c:	lea    rcx,[rip+0x33e05]        # 0x4443a8
  4105a3:	call   0x433f18
  4105a8:	lea    rdx,[rip+0x33e89]        # 0x444438
  4105af:	mov    r8,rax
  4105b2:	mov    rcx,rbx
  4105b5:	call   0x40ba90
  4105ba:	jmp    0x4104a4
  4105bf:	xor    eax,eax
  4105c1:	jmp    0x4103d5
  4105c6:	mov    edi,0x1
  4105cb:	mov    ecx,0x10
  4105d0:	jmp    0x410396
  4105d5:	call   0x422a20
  4105da:	nop
  4105db:	nop    DWORD PTR [rax+rax*1+0x0]
  4105e0:	push   r13
  4105e2:	push   r12
  4105e4:	push   rbp
  4105e5:	push   rdi
  4105e6:	push   rsi
  4105e7:	push   rbx
  4105e8:	sub    rsp,0x28
  4105ec:	mov    r13,QWORD PTR [rip+0x3961d]        # 0x449c10
  4105f3:	mov    r12,rcx
  4105f6:	mov    rbx,QWORD PTR [r13+0x0]
  4105fa:	test   rbx,rbx
  4105fd:	je     0x410692
  410603:	mov    ebp,0xc
  410608:	nop    DWORD PTR [rax+rax*1+0x0]
  410610:	mov    rsi,QWORD PTR [rbx+0x20]
  410614:	mov    rcx,rsi
  410617:	call   0x409f50
  41061c:	test   eax,eax
  41061e:	je     0x410632
  410620:	mov    rsi,QWORD PTR [rsi+0x10]
  410624:	lea    rdi,[rip+0x33cd5]        # 0x444300
  41062b:	mov    rcx,rbp
  41062e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410630:	je     0x410643
  410632:	mov    rbx,QWORD PTR [rbx]
  410635:	test   rbx,rbx
  410638:	jne    0x410610
  41063a:	mov    rbx,QWORD PTR [r12]
  41063e:	test   rbx,rbx
  410641:	je     0x4106ab
  410643:	or     DWORD PTR [rbx+0x80],0x10
  41064a:	call   0x4100e0
  41064f:	lea    rcx,[rip+0x33caa]        # 0x444300
  410656:	mov    rsi,rax
  410659:	call   0x422a00
  41065e:	mov    rcx,rsi
  410661:	mov    rdx,rax
  410664:	call   0x409f70
  410669:	or     DWORD PTR [rsi+0x2c],0x100
  410670:	mov    rdx,rsi
  410673:	mov    rcx,rbx
  410676:	call   0x415020
  41067b:	mov    rax,QWORD PTR [rip+0x3916e]        # 0x4497f0
  410682:	mov    QWORD PTR [rax],rbx
  410685:	add    rsp,0x28
  410689:	pop    rbx
  41068a:	pop    rsi
  41068b:	pop    rdi
  41068c:	pop    rbp
  41068d:	pop    r12
  41068f:	pop    r13
  410691:	ret    
  410692:	mov    rbx,QWORD PTR [rcx]
  410695:	test   rbx,rbx
  410698:	jne    0x410643
  41069a:	call   0x41f7b0
  41069f:	mov    rbx,rax
  4106a2:	test   rax,rax
  4106a5:	cmove  rbx,r12
  4106a9:	jmp    0x410643
  4106ab:	mov    rbx,QWORD PTR [r13+0x0]
  4106af:	cmp    r12,rbx
  4106b2:	je     0x41069a
  4106b4:	test   rbx,rbx
  4106b7:	je     0x41069a
  4106b9:	jmp    0x410643
  4106bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4106c0:	push   rdi
  4106c1:	push   rsi
  4106c2:	push   rbx
  4106c3:	sub    rsp,0x20
  4106c7:	call   0x4100e0
  4106cc:	mov    rbx,QWORD PTR [rax+0x30]
  4106d0:	lea    rcx,[rip+0x33d65]        # 0x44443c
  4106d7:	mov    rsi,rax
  4106da:	call   0x433f18
  4106df:	mov    rdx,rbx
  4106e2:	mov    rcx,rax
  4106e5:	call   0x4065c0
  4106ea:	mov    rbx,rax
  4106ed:	mov    rax,QWORD PTR [rip+0x390fc]        # 0x4497f0
  4106f4:	test   rbx,rbx
  4106f7:	mov    rdi,QWORD PTR [rax]
  4106fa:	je     0x410740
  4106fc:	cmp    BYTE PTR [rbx],0x0
  4106ff:	jne    0x410720
  410701:	mov    rcx,rbx
  410704:	call   0x43a748
  410709:	mov    rcx,rsi
  41070c:	add    rsp,0x20
  410710:	pop    rbx
  410711:	pop    rsi
  410712:	pop    rdi
  410713:	jmp    0x43a748
  410718:	nop    DWORD PTR [rax+rax*1+0x0]
  410720:	xor    r8d,r8d
  410723:	mov    rdx,rbx
  410726:	mov    rcx,rsi
  410729:	call   0x409010
  41072e:	test   rax,rax
  410731:	je     0x410750
  410733:	mov    rdx,rax
  410736:	mov    rcx,rdi
  410739:	call   0x416f40
  41073e:	jmp    0x410701
  410740:	xor    edx,edx
  410742:	mov    rcx,rdi
  410745:	call   0x414890
  41074a:	jmp    0x410701
  41074c:	nop    DWORD PTR [rax+0x0]
  410750:	lea    rcx,[rip+0x33d01]        # 0x444458
  410757:	call   0x433f18
  41075c:	mov    rdx,rbx
  41075f:	mov    rcx,rax
  410762:	call   0x4144d0
  410767:	jmp    0x410701
  410769:	nop
  41076a:	nop
  41076b:	nop
  41076c:	nop
  41076d:	nop
  41076e:	nop
  41076f:	nop
  410770:	push   rdi
  410771:	push   rsi
  410772:	push   rbx
  410773:	sub    rsp,0x20
  410777:	mov    rdi,rcx
  41077a:	mov    rcx,QWORD PTR [rcx+0x58]
  41077e:	test   rcx,rcx
  410781:	je     0x4107c7
  410783:	mov    rbx,QWORD PTR [rcx]
  410786:	test   rbx,rbx
  410789:	je     0x4107b2
  41078b:	mov    esi,0x8
  410790:	mov    rcx,QWORD PTR [rbx+0x8]
  410794:	call   0x43a748
  410799:	mov    rcx,rbx
  41079c:	call   0x43a748
  4107a1:	mov    rcx,QWORD PTR [rdi+0x58]
  4107a5:	mov    rbx,QWORD PTR [rcx+rsi*1]
  4107a9:	add    rsi,0x8
  4107ad:	test   rbx,rbx
  4107b0:	jne    0x410790
  4107b2:	call   0x43a748
  4107b7:	mov    QWORD PTR [rdi+0x58],0x0
  4107bf:	mov    QWORD PTR [rdi+0x60],0x0
  4107c7:	mov    rcx,QWORD PTR [rdi+0x50]
  4107cb:	test   rcx,rcx
  4107ce:	je     0x410806
  4107d0:	mov    rax,QWORD PTR [rcx]
  4107d3:	test   rax,rax
  4107d6:	je     0x4107f9
  4107d8:	mov    ebx,0x8
  4107dd:	nop    DWORD PTR [rax]
  4107e0:	mov    rcx,rax
  4107e3:	call   0x43a748
  4107e8:	mov    rcx,QWORD PTR [rdi+0x50]
  4107ec:	mov    rax,QWORD PTR [rcx+rbx*1]
  4107f0:	add    rbx,0x8
  4107f4:	test   rax,rax
  4107f7:	jne    0x4107e0
  4107f9:	call   0x43a748
  4107fe:	mov    QWORD PTR [rdi+0x50],0x0
  410806:	add    rsp,0x20
  41080a:	pop    rbx
  41080b:	pop    rsi
  41080c:	pop    rdi
  41080d:	ret    
  41080e:	xchg   ax,ax
  410810:	push   rbx
  410811:	sub    rsp,0x30
  410815:	and    DWORD PTR [rcx+0x68],0xfffffff7
  410819:	mov    rbx,rcx
  41081c:	lea    rdx,[rcx+0x48]
  410820:	mov    rcx,QWORD PTR [rcx+0x8]
  410824:	lea    r9,[rsp+0x2c]
  410829:	lea    r8,[rbx+0x10]
  41082d:	call   0x406ed0
  410832:	mov    QWORD PTR [rbx+0x40],rax
  410836:	mov    eax,DWORD PTR [rsp+0x2c]
  41083a:	test   eax,eax
  41083c:	je     0x410842
  41083e:	or     DWORD PTR [rbx+0x68],0x8
  410842:	add    rsp,0x30
  410846:	pop    rbx
  410847:	ret    
  410848:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	push   rsi
  410851:	push   rbx
  410852:	sub    rsp,0x58
  410856:	mov    rax,QWORD PTR [rcx]
  410859:	mov    rbx,rcx
  41085c:	mov    rsi,rdx
  41085f:	mov    QWORD PTR [rsp+0x30],rax
  410864:	movsxd rax,DWORD PTR [r8+0x10]
  410868:	lea    ecx,[rax+0x1]
  41086b:	test   eax,eax
  41086d:	mov    DWORD PTR [rsp+0x38],eax
  410871:	mov    DWORD PTR [rsp+0x3c],ecx
  410875:	js     0x41087c
  410877:	cmp    rax,QWORD PTR [rdx]
  41087a:	jb     0x4108f0
  41087c:	mov    rax,QWORD PTR [rip+0x3931d]        # 0x449ba0
  410883:	mov    eax,DWORD PTR [rax]
  410885:	test   eax,eax
  410887:	jne    0x410935
  41088d:	mov    eax,DWORD PTR [rsp+0x38]
  410891:	sub    eax,r9d
  410894:	add    r9d,DWORD PTR [rsp+0x3c]
  410899:	test   eax,eax
  41089b:	mov    DWORD PTR [rsp+0x38],eax
  41089f:	mov    DWORD PTR [rsp+0x3c],r9d
  4108a4:	js     0x410940
  4108aa:	mov    rax,QWORD PTR [rsi]
  4108ad:	movsxd r9,r9d
  4108b0:	cmp    r9,rax
  4108b3:	jbe    0x4108b9
  4108b5:	mov    DWORD PTR [rsp+0x3c],eax
  4108b9:	mov    rcx,QWORD PTR [r8+0x8]
  4108bd:	lea    rdx,[rsp+0x30]
  4108c2:	mov    QWORD PTR [rsp+0x20],r8
  4108c7:	call   0x4130d0
  4108cc:	cmp    eax,0xffffffff
  4108cf:	je     0x410935
  4108d1:	mov    r8,QWORD PTR [rsp+0x20]
  4108d6:	mov    edx,DWORD PTR [r8+0x18]
  4108da:	test   dl,0x1
  4108dd:	je     0x41091b
  4108df:	or     edx,0x4
  4108e2:	mov    DWORD PTR [r8+0x18],edx
  4108e6:	jmp    0x41091b
  4108e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4108f0:	mov    rcx,QWORD PTR [r8+0x8]
  4108f4:	lea    rdx,[rsp+0x30]
  4108f9:	mov    DWORD PTR [rsp+0x2c],r9d
  4108fe:	mov    QWORD PTR [rsp+0x20],r8
  410903:	call   0x4130d0
  410908:	cmp    eax,0xffffffff
  41090b:	mov    r8,QWORD PTR [rsp+0x20]
  410910:	mov    r9d,DWORD PTR [rsp+0x2c]
  410915:	je     0x41087c
  41091b:	cdqe   
  41091d:	add    rax,QWORD PTR [rsp+0x30]
  410922:	sub    rax,QWORD PTR [rbx]
  410925:	mov    DWORD PTR [r8+0x14],eax
  410929:	mov    eax,0x1
  41092e:	add    rsp,0x58
  410932:	pop    rbx
  410933:	pop    rsi
  410934:	ret    
  410935:	xor    eax,eax
  410937:	add    rsp,0x58
  41093b:	pop    rbx
  41093c:	pop    rsi
  41093d:	ret    
  41093e:	xchg   ax,ax
  410940:	mov    DWORD PTR [rsp+0x38],0x0
  410948:	jmp    0x4108aa
  41094d:	nop    DWORD PTR [rax]
  410950:	sub    rsp,0x28
  410954:	mov    ecx,0x78
  410959:	call   0x4227b0
  41095e:	mov    QWORD PTR [rax+0x8],0x0
  410966:	mov    QWORD PTR [rax],0x0
  41096d:	mov    QWORD PTR [rax+0x40],0x0
  410975:	mov    QWORD PTR [rax+0x58],0x0
  41097d:	mov    QWORD PTR [rax+0x50],0x0
  410985:	mov    QWORD PTR [rax+0x60],0x0
  41098d:	mov    DWORD PTR [rax+0x68],0x0
  410994:	mov    QWORD PTR [rax+0x70],0x0
  41099c:	add    rsp,0x28
  4109a0:	ret    
  4109a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4109a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109b0:	push   rdi
  4109b1:	sub    rsp,0x20
  4109b5:	mov    ecx,0x78
  4109ba:	call   0x4227b0
  4109bf:	lea    rdi,[rax+0x8]
  4109c3:	mov    rcx,rax
  4109c6:	mov    rdx,rax
  4109c9:	mov    QWORD PTR [rax+0x70],0x0
  4109d1:	xor    eax,eax
  4109d3:	and    rdi,0xfffffffffffffff8
  4109d7:	sub    rcx,rdi
  4109da:	add    ecx,0x78
  4109dd:	shr    ecx,0x3
  4109e0:	rep stos QWORD PTR es:[rdi],rax
  4109e3:	mov    rax,rdx
  4109e6:	mov    QWORD PTR [rdx],0x0
  4109ed:	mov    QWORD PTR [rdx+0x8],0x0
  4109f5:	mov    DWORD PTR [rdx+0x10],0xffffffff
  4109fc:	mov    DWORD PTR [rdx+0x14],0xffffffff
  410a03:	mov    DWORD PTR [rdx+0x40],0xffffffff
  410a0a:	add    rsp,0x20
  410a0e:	pop    rdi
  410a0f:	ret    
  410a10:	push   r15
  410a12:	push   r14
  410a14:	push   r13
  410a16:	push   r12
  410a18:	push   rbp
  410a19:	push   rdi
  410a1a:	push   rsi
  410a1b:	push   rbx
  410a1c:	sub    rsp,0x48
  410a20:	mov    rdi,rdx
  410a23:	mov    rsi,rcx
  410a26:	mov    rcx,rdx
  410a29:	call   0x412500
  410a2e:	mov    rbx,rax
  410a31:	movsxd rax,DWORD PTR [rdi+0x8]
  410a35:	cmp    eax,0xffffffff
  410a38:	mov    DWORD PTR [rsp+0x3c],eax
  410a3c:	je     0x410bf8
  410a42:	mov    DWORD PTR [rbx+0x8],eax
  410a45:	add    rax,QWORD PTR [rbx]
  410a48:	lea    r12,[rsp+0x3c]
  410a4d:	xor    edi,edi
  410a4f:	mov    rcx,rax
  410a52:	call   0x412f60
  410a57:	add    eax,DWORD PTR [rbx+0x8]
  410a5a:	add    eax,0xa
  410a5d:	mov    DWORD PTR [rbx+0x8],eax
  410a60:	lea    rcx,[rip+0x33a2f]        # 0x444496
  410a67:	mov    r8,r12
  410a6a:	mov    rdx,rbx
  410a6d:	call   0x4128a0
  410a72:	test   eax,eax
  410a74:	jne    0x410bef
  410a7a:	mov    eax,DWORD PTR [rsp+0x3c]
  410a7e:	test   rdi,rdi
  410a81:	lea    edx,[rax+0x1]
  410a84:	mov    DWORD PTR [rbx+0x8],edx
  410a87:	jne    0x410a9f
  410a89:	lea    rcx,[rip+0x339f0]        # 0x444480
  410a90:	mov    rdx,rbx
  410a93:	call   0x412d30
  410a98:	test   eax,eax
  410a9a:	jne    0x410a60
  410a9c:	mov    edx,DWORD PTR [rbx+0x8]
  410a9f:	movsxd rdx,edx
  410aa2:	add    rdx,QWORD PTR [rbx]
  410aa5:	lea    rcx,[rip+0x339df]        # 0x44448b
  410aac:	xor    ebp,ebp
  410aae:	call   0x412cb0
  410ab3:	cmp    eax,0xffffffff
  410ab6:	mov    r14d,eax
  410ab9:	je     0x410c10
  410abf:	call   0x4109b0
  410ac4:	mov    r13,rax
  410ac7:	mov    eax,DWORD PTR [rsi+0x68]
  410aca:	mov    rcx,QWORD PTR [rsi+0x8]
  410ace:	test   al,0x1
  410ad0:	je     0x410af0
  410ad2:	mov    edx,DWORD PTR [r13+0x18]
  410ad6:	mov    QWORD PTR [r13+0x0],rcx
  410ada:	mov    r8d,edx
  410add:	or     r8d,0x1
  410ae1:	test   al,0x2
  410ae3:	mov    DWORD PTR [r13+0x18],r8d
  410ae7:	je     0x410af0
  410ae9:	or     edx,0x3
  410aec:	mov    DWORD PTR [r13+0x18],edx
  410af0:	add    r14d,DWORD PTR [rbx+0x8]
  410af4:	mov    DWORD PTR [rbx+0x8],r14d
  410af8:	movsxd r14,r14d
  410afb:	add    r14,QWORD PTR [rbx]
  410afe:	mov    rcx,r14
  410b01:	call   0x412de0
  410b06:	movsxd r15,eax
  410b09:	add    r15,r14
  410b0c:	movzx  r9d,BYTE PTR [r15]
  410b10:	cmp    r9b,0x7f
  410b14:	je     0x410c35
  410b1a:	test   r9b,r9b
  410b1d:	je     0x410c35
  410b23:	xor    r10d,r10d
  410b26:	jmp    0x410b35
  410b28:	nop    DWORD PTR [rax+rax*1+0x0]
  410b30:	test   r9b,r9b
  410b33:	je     0x410b47
  410b35:	lea    r14d,[r10+0x1]
  410b39:	movzx  r9d,BYTE PTR [r15+r14*1]
  410b3e:	mov    r10,r14
  410b41:	cmp    r9b,0x7f
  410b45:	jne    0x410b30
  410b47:	cmp    r9b,0x7f
  410b4b:	jne    0x410a60
  410b51:	lea    r9d,[r10+0x1]
  410b55:	xor    ebp,0x1
  410b58:	neg    ebp
  410b5a:	mov    rcx,r9
  410b5d:	mov    QWORD PTR [rsp+0x28],r9
  410b62:	call   0x4227b0
  410b67:	mov    rdx,r15
  410b6a:	mov    r8,r14
  410b6d:	mov    rcx,rax
  410b70:	mov    QWORD PTR [r13+0x8],rax
  410b74:	call   0x43a610
  410b79:	mov    r9,QWORD PTR [rsp+0x28]
  410b7e:	mov    rax,QWORD PTR [r13+0x8]
  410b82:	lea    rcx,[r15+r9*1]
  410b86:	mov    BYTE PTR [rax+r14*1],0x0
  410b8b:	call   0x43a7a0
  410b90:	mov    DWORD PTR [r13+0x10],eax
  410b94:	mov    rax,QWORD PTR [rsi+0x8]
  410b98:	lea    rdx,[rdi+0x2]
  410b9c:	mov    DWORD PTR [r13+0x40],ebp
  410ba0:	mov    QWORD PTR [r13+0x0],rax
  410ba4:	mov    rax,QWORD PTR [rsi+0x60]
  410ba8:	cmp    rdx,rax
  410bab:	jb     0x410c4a
  410bb1:	test   rax,rax
  410bb4:	jne    0x410c68
  410bba:	mov    rcx,QWORD PTR [rsi+0x58]
  410bbe:	mov    QWORD PTR [rsi+0x60],0x64
  410bc6:	mov    al,0x64
  410bc8:	test   rcx,rcx
  410bcb:	je     0x410bd8
  410bcd:	mov    rdx,rax
  410bd0:	shr    rdx,1
  410bd3:	lea    rax,[rax+rdx*1+0x1]
  410bd8:	lea    rdx,[rax*8+0x0]
  410be0:	mov    QWORD PTR [rsi+0x60],rax
  410be4:	call   0x422820
  410be9:	mov    QWORD PTR [rsi+0x58],rax
  410bed:	jmp    0x410c4e
  410bef:	mov    rcx,rbx
  410bf2:	call   0x43a748
  410bf7:	nop
  410bf8:	add    rsp,0x48
  410bfc:	pop    rbx
  410bfd:	pop    rsi
  410bfe:	pop    rdi
  410bff:	pop    rbp
  410c00:	pop    r12
  410c02:	pop    r13
  410c04:	pop    r14
  410c06:	pop    r15
  410c08:	ret    
  410c09:	nop    DWORD PTR [rax+0x0]
  410c10:	movsxd rdx,DWORD PTR [rbx+0x8]
  410c14:	lea    rcx,[rip+0x33876]        # 0x444491
  410c1b:	add    rdx,QWORD PTR [rbx]
  410c1e:	call   0x412cb0
  410c23:	cmp    eax,0xffffffff
  410c26:	mov    r14d,eax
  410c29:	je     0x410bef
  410c2b:	mov    ebp,0x1
  410c30:	jmp    0x410abf
  410c35:	xor    r14d,r14d
  410c38:	xor    r10d,r10d
  410c3b:	cmp    r9b,0x7f
  410c3f:	jne    0x410a60
  410c45:	jmp    0x410b51
  410c4a:	mov    rax,QWORD PTR [rsi+0x58]
  410c4e:	mov    QWORD PTR [rax+rdi*8],r13
  410c52:	mov    rax,QWORD PTR [rsi+0x58]
  410c56:	mov    QWORD PTR [rax+rdi*8+0x8],0x0
  410c5f:	add    rdi,0x1
  410c63:	jmp    0x410a60
  410c68:	mov    rcx,QWORD PTR [rsi+0x58]
  410c6c:	test   rcx,rcx
  410c6f:	je     0x410bd8
  410c75:	movabs rdx,0x1555555555555554
  410c7f:	cmp    rax,rdx
  410c82:	jbe    0x410bcd
  410c88:	call   0x422a20
  410c8d:	nop
  410c8e:	xchg   ax,ax
  410c90:	push   r15
  410c92:	push   r14
  410c94:	push   r13
  410c96:	push   r12
  410c98:	push   rbp
  410c99:	push   rdi
  410c9a:	push   rsi
  410c9b:	push   rbx
  410c9c:	sub    rsp,0xa8
  410ca3:	mov    rsi,rcx
  410ca6:	lea    rdi,[rsp+0x40]
  410cab:	call   0x410770
  410cb0:	mov    rax,QWORD PTR [rsi+0x40]
  410cb4:	and    DWORD PTR [rsi+0x68],0xfffffffe
  410cb8:	mov    edx,0x0
  410cbd:	mov    rcx,rdi
  410cc0:	mov    DWORD PTR [rsp+0x50],0x1
  410cc8:	mov    QWORD PTR [rsp+0x40],rax
  410ccd:	mov    rax,QWORD PTR [rsi+0x48]
  410cd1:	mov    DWORD PTR [rsp+0x48],eax
  410cd5:	sub    eax,0x3e8
  410cda:	cmovs  eax,edx
  410cdd:	lea    rdx,[rip+0x337b4]        # 0x444498
  410ce4:	mov    DWORD PTR [rsp+0x4c],eax
  410ce8:	call   0x413010
  410ced:	cmp    eax,0xffffffff
  410cf0:	je     0x410d90
  410cf6:	lea    ebp,[rax-0x1]
  410cf9:	lea    rdx,[rip+0x337a6]        # 0x4444a6
  410d00:	mov    rcx,rdi
  410d03:	mov    DWORD PTR [rsp+0x4c],0x0
  410d0b:	mov    DWORD PTR [rsp+0x48],ebp
  410d0f:	call   0x413010
  410d14:	cmp    eax,0xffffffff
  410d17:	mov    ebx,eax
  410d19:	je     0x410d90
  410d1b:	or     DWORD PTR [rsi+0x68],0x1
  410d1f:	movsxd rcx,eax
  410d22:	add    rcx,QWORD PTR [rsi+0x40]
  410d26:	call   0x412f60
  410d2b:	mov    r12,QWORD PTR [rsi+0x40]
  410d2f:	lea    r13d,[rbx+rax*1+0xa]
  410d34:	lea    rdx,[rip+0x33776]        # 0x4444b1
  410d3b:	movsxd rcx,r13d
  410d3e:	add    rcx,r12
  410d41:	call   0x43a608
  410d46:	lea    r8d,[r13+rax*1+0x0]
  410d4b:	lea    rcx,[rip+0x3372e]        # 0x444480
  410d52:	movsxd r8,r8d
  410d55:	lea    rdx,[r12+r8*1]
  410d59:	call   0x412d60
  410d5e:	test   eax,eax
  410d60:	jne    0x410f52
  410d66:	mov    rdx,rdi
  410d69:	mov    rcx,rsi
  410d6c:	mov    DWORD PTR [rsp+0x48],ebx
  410d70:	mov    DWORD PTR [rsp+0x4c],ebp
  410d74:	call   0x410a10
  410d79:	nop
  410d7a:	add    rsp,0xa8
  410d81:	pop    rbx
  410d82:	pop    rsi
  410d83:	pop    rdi
  410d84:	pop    rbp
  410d85:	pop    r12
  410d87:	pop    r13
  410d89:	pop    r14
  410d8b:	pop    r15
  410d8d:	ret    
  410d8e:	xchg   ax,ax
  410d90:	mov    rax,QWORD PTR [rsi+0x40]
  410d94:	mov    DWORD PTR [rsp+0x88],0x0
  410d9f:	mov    r12d,0x2
  410da5:	mov    DWORD PTR [rsp+0x90],0x1
  410db0:	xor    ebp,ebp
  410db2:	mov    QWORD PTR [rsp+0x80],rax
  410dba:	mov    rax,QWORD PTR [rsi+0x48]
  410dbe:	mov    DWORD PTR [rsp+0x8c],eax
  410dc5:	lea    rax,[rsp+0x80]
  410dcd:	mov    QWORD PTR [rsp+0x28],rax
  410dd2:	mov    rcx,QWORD PTR [rsp+0x28]
  410dd7:	call   0x412ed0
  410ddc:	cmp    eax,0xffffffff
  410ddf:	mov    r13d,eax
  410de2:	je     0x410d7a
  410de4:	movsxd rcx,r13d
  410de7:	add    rcx,QWORD PTR [rsp+0x80]
  410def:	mov    DWORD PTR [rsp+0x88],r13d
  410df7:	xor    r15d,r15d
  410dfa:	call   0x412f60
  410dff:	add    eax,DWORD PTR [rsp+0x88]
  410e06:	lea    rcx,[rip+0x3367e]        # 0x44448b
  410e0d:	movsxd rbx,eax
  410e10:	mov    DWORD PTR [rsp+0x88],ebx
  410e17:	add    rbx,QWORD PTR [rsp+0x80]
  410e1f:	mov    rdx,rbx
  410e22:	call   0x412cb0
  410e27:	cmp    eax,0xffffffff
  410e2a:	mov    edi,eax
  410e2c:	je     0x410f30
  410e32:	movsxd rcx,edi
  410e35:	add    rcx,rbx
  410e38:	call   0x412de0
  410e3d:	add    edi,eax
  410e3f:	call   0x4109b0
  410e44:	lea    rdx,[rip+0x3367b]        # 0x4444c6
  410e4b:	movsxd rcx,edi
  410e4e:	lea    r9,[rax+0x8]
  410e52:	add    rcx,rbx
  410e55:	xor    r8d,r8d
  410e58:	mov    r14,rax
  410e5b:	call   0x408ec0
  410e60:	mov    eax,DWORD PTR [rsi+0x68]
  410e63:	mov    DWORD PTR [r14+0x10],r13d
  410e67:	mov    rdx,QWORD PTR [rsi+0x8]
  410e6b:	test   al,0x1
  410e6d:	je     0x410e90
  410e6f:	mov    ecx,DWORD PTR [r14+0x18]
  410e73:	mov    QWORD PTR [r14],rdx
  410e76:	mov    r8d,ecx
  410e79:	or     r8d,0x1
  410e7d:	test   al,0x2
  410e7f:	mov    DWORD PTR [r14+0x18],r8d
  410e83:	je     0x410e8c
  410e85:	or     ecx,0x3
  410e88:	mov    DWORD PTR [r14+0x18],ecx
  410e8c:	mov    rdx,QWORD PTR [rsi+0x8]
  410e90:	cmp    r15d,0x1
  410e94:	mov    QWORD PTR [r14],rdx
  410e97:	sbb    eax,eax
  410e99:	mov    DWORD PTR [r14+0x40],eax
  410e9d:	mov    rax,QWORD PTR [rsi+0x60]
  410ea1:	cmp    rax,r12
  410ea4:	jbe    0x410ed0
  410ea6:	mov    rax,QWORD PTR [rsi+0x58]
  410eaa:	mov    QWORD PTR [rax+rbp*1],r14
  410eae:	mov    rax,QWORD PTR [rsi+0x58]
  410eb2:	add    rbp,0x8
  410eb6:	add    r12,0x1
  410eba:	mov    QWORD PTR [rax+rbp*1],0x0
  410ec2:	jmp    0x410dd2
  410ec7:	nop    WORD PTR [rax+rax*1+0x0]
  410ed0:	test   rax,rax
  410ed3:	jne    0x410f10
  410ed5:	mov    rcx,QWORD PTR [rsi+0x58]
  410ed9:	mov    QWORD PTR [rsi+0x60],0x64
  410ee1:	mov    al,0x64
  410ee3:	test   rcx,rcx
  410ee6:	je     0x410ef3
  410ee8:	mov    rdx,rax
  410eeb:	shr    rdx,1
  410eee:	lea    rax,[rax+rdx*1+0x1]
  410ef3:	lea    rdx,[rax*8+0x0]
  410efb:	mov    QWORD PTR [rsi+0x60],rax
  410eff:	call   0x422820
  410f04:	mov    QWORD PTR [rsi+0x58],rax
  410f08:	jmp    0x410eaa
  410f0a:	nop    WORD PTR [rax+rax*1+0x0]
  410f10:	mov    rcx,QWORD PTR [rsi+0x58]
  410f14:	test   rcx,rcx
  410f17:	je     0x410ef3
  410f19:	movabs rdi,0x1555555555555554
  410f23:	cmp    rax,rdi
  410f26:	jbe    0x410ee8
  410f28:	call   0x422a20
  410f2d:	nop    DWORD PTR [rax]
  410f30:	lea    rcx,[rip+0x3355a]        # 0x444491
  410f37:	mov    rdx,rbx
  410f3a:	mov    r15b,0x1
  410f3d:	call   0x412cb0
  410f42:	cmp    eax,0xffffffff
  410f45:	mov    edi,eax
  410f47:	jne    0x410e32
  410f4d:	jmp    0x410dd2
  410f52:	mov    rax,QWORD PTR [rsi+0x40]
  410f56:	lea    rcx,[rsp+0x60]
  410f5b:	lea    rdx,[rip+0x33552]        # 0x4444b4
  410f62:	mov    DWORD PTR [rsp+0x68],ebx
  410f66:	mov    DWORD PTR [rsp+0x6c],0x0
  410f6e:	mov    DWORD PTR [rsp+0x70],0x1
  410f76:	mov    QWORD PTR [rsp+0x60],rax
  410f7b:	call   0x413010
  410f80:	cmp    eax,0xffffffff
  410f83:	je     0x410d7a
  410f89:	lea    r12d,[rax+0x9]
  410f8d:	lea    rdx,[rip+0x3351d]        # 0x4444b1
  410f94:	movsxd rcx,r12d
  410f97:	add    rcx,QWORD PTR [rsi+0x40]
  410f9b:	call   0x43a608
  410fa0:	or     DWORD PTR [rsi+0x68],0x2
  410fa4:	add    eax,r12d
  410fa7:	mov    rdx,rdi
  410faa:	mov    rcx,rsi
  410fad:	mov    DWORD PTR [rsp+0x68],eax
  410fb1:	mov    DWORD PTR [rsp+0x6c],ebx
  410fb5:	mov    DWORD PTR [rsp+0x48],ebx
  410fb9:	mov    DWORD PTR [rsp+0x4c],ebp
  410fbd:	call   0x410a10
  410fc2:	movsxd rbx,DWORD PTR [rsp+0x68]
  410fc7:	movsxd r15,DWORD PTR [rsp+0x6c]
  410fcc:	mov    rax,QWORD PTR [rsp+0x60]
  410fd1:	add    rbx,rax
  410fd4:	add    rax,r15
  410fd7:	cmp    rbx,rax
  410fda:	mov    QWORD PTR [rsp+0x38],rax
  410fdf:	jae    0x411315
  410fe5:	mov    r14d,0x2
  410feb:	xor    r12d,r12d
  410fee:	xor    r15d,r15d
  410ff1:	xor    ebp,ebp
  410ff3:	lea    rcx,[rip+0x334c4]        # 0x4444be
  410ffa:	mov    rdx,rbx
  410ffd:	call   0x412cb0
  411002:	cmp    eax,0xffffffff
  411005:	mov    edi,eax
  411007:	je     0x4110c9
  41100d:	mov    ecx,0x10
  411012:	call   0x4227b0
  411017:	movsxd r9,edi
  41101a:	mov    r13,rax
  41101d:	mov    rcx,r9
  411020:	mov    QWORD PTR [rsp+0x30],r9
  411025:	call   0x4227b0
  41102a:	lea    r8d,[rdi-0x1]
  41102e:	mov    rdx,rbx
  411031:	mov    rcx,rax
  411034:	mov    QWORD PTR [r13+0x0],rax
  411038:	mov    QWORD PTR [rsp+0x28],rax
  41103d:	movsxd r8,r8d
  411040:	call   0x43a610
  411045:	mov    r9,QWORD PTR [rsp+0x30]
  41104a:	mov    r11,QWORD PTR [rsp+0x28]
  41104f:	lea    rcx,[rbx+r9*1]
  411053:	mov    BYTE PTR [r11+r9*1-0x1],0x0
  411059:	call   0x43a7a0
  41105e:	cmp    r14,rbp
  411061:	mov    DWORD PTR [r13+0x8],eax
  411065:	jb     0x411099
  411067:	test   rbp,rbp
  41106a:	jne    0x4112b0
  411070:	cmp    r15,0x1
  411074:	sbb    rdx,rdx
  411077:	and    rdx,0xffffffffffffffd0
  41107b:	sub    rdx,0xffffffffffffff80
  41107f:	cmp    r15,0x1
  411083:	sbb    rbp,rbp
  411086:	and    rbp,0xfffffffffffffffa
  41108a:	add    rbp,0x10
  41108e:	mov    rcx,r15
  411091:	call   0x422820
  411096:	mov    r15,rax
  411099:	mov    QWORD PTR [r15+r12*1],r13
  41109d:	add    r12,0x8
  4110a1:	mov    QWORD PTR [r15+r12*1],0x0
  4110a9:	nop    DWORD PTR [rax+0x0]
  4110b0:	add    rbx,0x1
  4110b4:	cmp    BYTE PTR [rbx-0x1],0xa
  4110b8:	jne    0x4110b0
  4110ba:	add    r14,0x1
  4110be:	cmp    QWORD PTR [rsp+0x38],rbx
  4110c3:	ja     0x410ff3
  4110c9:	test   r15,r15
  4110cc:	je     0x411315
  4110d2:	mov    rax,QWORD PTR [rsi+0x40]
  4110d6:	lea    rcx,[rsp+0x80]
  4110de:	mov    DWORD PTR [rsp+0x88],0x0
  4110e9:	mov    DWORD PTR [rsp+0x90],0x1
  4110f4:	mov    QWORD PTR [rsp+0x80],rax
  4110fc:	mov    rax,QWORD PTR [rsi+0x48]
  411100:	mov    DWORD PTR [rsp+0x8c],eax
  411107:	call   0x412ed0
  41110c:	mov    rcx,QWORD PTR [rsi+0x8]
  411110:	cmp    eax,0xffffffff
  411113:	mov    ebx,eax
  411115:	mov    eax,0x0
  41111a:	cmove  ebx,eax
  41111d:	call   0x422a00
  411122:	mov    rbp,rax
  411125:	mov    rcx,rax
  411128:	call   0x409e60
  41112d:	cmp    rbp,rax
  411130:	jae    0x411143
  411132:	mov    rdx,QWORD PTR [rsi+0x8]
  411136:	cmp    BYTE PTR [rdx],0x0
  411139:	jne    0x411322
  41113f:	mov    BYTE PTR [rax-0x1],0x0
  411143:	mov    rcx,rbp
  411146:	call   0x43a620
  41114b:	cmp    QWORD PTR [r15],0x0
  41114f:	mov    rdi,rax
  411152:	je     0x41134c
  411158:	lea    rdx,[r15+0x8]
  41115c:	xor    ecx,ecx
  41115e:	xchg   ax,ax
  411160:	add    rdx,0x8
  411164:	add    ecx,0x1
  411167:	cmp    QWORD PTR [rdx-0x8],0x0
  41116c:	jne    0x411160
  41116e:	add    ecx,0x1
  411171:	movsxd rcx,ecx
  411174:	shl    rcx,0x3
  411178:	call   0x4227b0
  41117d:	mov    QWORD PTR [rsi+0x50],rax
  411181:	mov    rdx,QWORD PTR [r15]
  411184:	test   rdx,rdx
  411187:	je     0x411345
  41118d:	movsxd rdi,edi
  411190:	lea    r12,[rdi+0x2]
  411194:	xor    edi,edi
  411196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111a0:	mov    rcx,QWORD PTR [rdx]
  4111a3:	call   0x43a620
  4111a8:	lea    rcx,[rax+r12*1]
  4111ac:	call   0x4227b0
  4111b1:	mov    r13,rax
  4111b4:	mov    rax,QWORD PTR [r15+rdi*1]
  4111b8:	lea    rdx,[rip+0x33301]        # 0x4444c0
  4111bf:	mov    r8,rbp
  4111c2:	mov    rcx,r13
  4111c5:	mov    r9,QWORD PTR [rax]
  4111c8:	call   0x433f00
  4111cd:	mov    rax,QWORD PTR [rsi+0x50]
  4111d1:	mov    QWORD PTR [rax+rdi*1],r13
  4111d5:	add    rdi,0x8
  4111d9:	mov    rdx,QWORD PTR [r15+rdi*1]
  4111dd:	test   rdx,rdx
  4111e0:	jne    0x4111a0
  4111e2:	mov    rax,QWORD PTR [rsi+0x50]
  4111e6:	mov    QWORD PTR [rax+rdi*1],0x0
  4111ee:	mov    rcx,rbp
  4111f1:	call   0x43a748
  4111f6:	mov    r11,QWORD PTR [rsi+0x58]
  4111fa:	mov    rax,QWORD PTR [r11]
  4111fd:	test   rax,rax
  411200:	je     0x411270
  411202:	add    r11,0x8
  411206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411210:	mov    rdx,QWORD PTR [r15]
  411213:	test   rdx,rdx
  411216:	je     0x41130d
  41121c:	mov    r9d,DWORD PTR [rax+0x10]
  411220:	cmp    DWORD PTR [rdx+0x8],r9d
  411224:	jg     0x4112e0
  41122a:	mov    edx,0x8
  41122f:	jmp    0x41123e
  411231:	cmp    DWORD PTR [rcx+0x8],r9d
  411235:	lea    r8,[rdx+0x8]
  411239:	jg     0x411247
  41123b:	mov    rdx,r8
  41123e:	mov    rcx,QWORD PTR [r15+rdx*1]
  411242:	test   rcx,rcx
  411245:	jne    0x411231
  411247:	mov    rcx,QWORD PTR [rsi+0x50]
  41124b:	add    r11,0x8
  41124f:	mov    rcx,QWORD PTR [rcx+rdx*1-0x8]
  411254:	mov    QWORD PTR [rax],rcx
  411257:	mov    rdx,QWORD PTR [r15+rdx*1-0x8]
  41125c:	sub    r9d,DWORD PTR [rdx+0x8]
  411260:	add    r9d,ebx
  411263:	mov    DWORD PTR [rax+0x10],r9d
  411267:	mov    rax,QWORD PTR [r11-0x8]
  41126b:	test   rax,rax
  41126e:	jne    0x411210
  411270:	mov    rax,QWORD PTR [r15]
  411273:	mov    rbx,r15
  411276:	test   rax,rax
  411279:	je     0x41129d
  41127b:	nop    DWORD PTR [rax+rax*1+0x0]
  411280:	mov    rcx,QWORD PTR [rax]
  411283:	add    rbx,0x8
  411287:	call   0x43a748
  41128c:	mov    rcx,QWORD PTR [rbx-0x8]
  411290:	call   0x43a748
  411295:	mov    rax,QWORD PTR [rbx]
  411298:	test   rax,rax
  41129b:	jne    0x411280
  41129d:	mov    rcx,r15
  4112a0:	call   0x43a748
  4112a5:	jmp    0x410d7a
  4112aa:	nop    WORD PTR [rax+rax*1+0x0]
  4112b0:	test   r15,r15
  4112b3:	je     0x4112d3
  4112b5:	movabs rax,0x1555555555555554
  4112bf:	cmp    rbp,rax
  4112c2:	ja     0x410f28
  4112c8:	mov    rax,rbp
  4112cb:	shr    rax,1
  4112ce:	lea    rbp,[rbp+rax*1+0x1]
  4112d3:	lea    rdx,[rbp*8+0x0]
  4112db:	jmp    0x41108e
  4112e0:	xor    ebx,ebx
  4112e2:	mov    rcx,QWORD PTR [rdx]
  4112e5:	call   0x43a748
  4112ea:	mov    rcx,QWORD PTR [r15+rbx*1]
  4112ee:	call   0x43a748
  4112f3:	mov    rax,QWORD PTR [rsi+0x50]
  4112f7:	mov    rcx,QWORD PTR [rax+rbx*1]
  4112fb:	add    rbx,0x8
  4112ff:	call   0x43a748
  411304:	mov    rdx,QWORD PTR [r15+rbx*1]
  411308:	test   rdx,rdx
  41130b:	jne    0x4112e2
  41130d:	mov    QWORD PTR [rsi+0x50],0x0
  411315:	mov    rcx,rsi
  411318:	call   0x410770
  41131d:	jmp    0x410d7a
  411322:	cmp    BYTE PTR [rdx+0x1],0x3a
  411326:	jne    0x41113f
  41132c:	lea    rdx,[rbp+0x2]
  411330:	cmp    rax,rdx
  411333:	jne    0x41113f
  411339:	mov    BYTE PTR [rax],0x2e
  41133c:	lea    rax,[rbp+0x4]
  411340:	jmp    0x41113f
  411345:	xor    edi,edi
  411347:	jmp    0x4111e6
  41134c:	mov    ecx,0x8
  411351:	jmp    0x411178
  411356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411360:	push   r12
  411362:	push   rbp
  411363:	push   rdi
  411364:	push   rsi
  411365:	push   rbx
  411366:	sub    rsp,0x50
  41136a:	movzx  eax,BYTE PTR [rcx]
  41136d:	cmp    al,0x5c
  41136f:	je     0x411432
  411375:	cmp    al,0x2f
  411377:	je     0x411432
  41137d:	xor    r12d,r12d
  411380:	test   al,al
  411382:	jne    0x411440
  411388:	mov    rsi,QWORD PTR [rip+0x40281]        # 0x451610
  41138f:	test   rsi,rsi
  411392:	je     0x4114d0
  411398:	mov    rbx,QWORD PTR [rsi]
  41139b:	test   rbx,rbx
  41139e:	je     0x4114d0
  4113a4:	mov    rbp,rcx
  4113a7:	add    rsi,0x8
  4113ab:	jmp    0x4113d5
  4113ad:	nop    DWORD PTR [rax]
  4113b0:	test   r12d,r12d
  4113b3:	jne    0x4113c4
  4113b5:	mov    rdx,QWORD PTR [rbx]
  4113b8:	mov    rcx,rbp
  4113bb:	call   0x4213b0
  4113c0:	test   eax,eax
  4113c2:	je     0x4113e8
  4113c4:	add    rsi,0x8
  4113c8:	mov    rbx,QWORD PTR [rsi-0x8]
  4113cc:	test   rbx,rbx
  4113cf:	je     0x4114d0
  4113d5:	mov    rdi,QWORD PTR [rbx+0x8]
  4113d9:	mov    rcx,rbp
  4113dc:	mov    rdx,rdi
  4113df:	call   0x4213b0
  4113e4:	test   eax,eax
  4113e6:	jne    0x4113b0
  4113e8:	lea    rdx,[rsp+0x20]
  4113ed:	mov    rcx,rdi
  4113f0:	call   0x435d60
  4113f5:	cmp    eax,0xffffffff
  4113f8:	je     0x411474
  4113fa:	mov    eax,DWORD PTR [rbx+0x24]
  4113fd:	cmp    DWORD PTR [rsp+0x34],eax
  411401:	jne    0x411474
  411403:	mov    rax,QWORD PTR [rbx+0x30]
  411407:	cmp    QWORD PTR [rsp+0x40],rax
  41140c:	jne    0x411474
  41140e:	cmp    QWORD PTR [rbx+0x40],0x0
  411413:	je     0x4114bc
  411419:	cmp    QWORD PTR [rbx+0x58],0x0
  41141e:	je     0x4114dd
  411424:	mov    rax,rbx
  411427:	add    rsp,0x50
  41142b:	pop    rbx
  41142c:	pop    rsi
  41142d:	pop    rdi
  41142e:	pop    rbp
  41142f:	pop    r12
  411431:	ret    
  411432:	mov    r12d,0x1
  411438:	jmp    0x411388
  41143d:	nop    DWORD PTR [rax]
  411440:	movzx  edx,BYTE PTR [rcx+0x1]
  411444:	mov    r12b,0x1
  411447:	cmp    dl,0x3a
  41144a:	je     0x411388
  411450:	xor    r12b,r12b
  411453:	cmp    al,0x2e
  411455:	jne    0x411388
  41145b:	cmp    dl,0x5c
  41145e:	sete   r12b
  411462:	cmp    dl,0x2f
  411465:	sete   al
  411468:	or     r12d,eax
  41146b:	movzx  r12d,r12b
  41146f:	jmp    0x411388
  411474:	mov    rax,QWORD PTR [rbx]
  411477:	lea    rdi,[rbx+0x18]
  41147b:	or     DWORD PTR [rbx+0x68],0x2000
  411482:	and    rdi,0xfffffffffffffff8
  411486:	mov    BYTE PTR [rax],0x0
  411489:	lea    rax,[rip+0x3303b]        # 0x4444cb
  411490:	mov    QWORD PTR [rbx+0x10],0x0
  411498:	mov    QWORD PTR [rbx+0x8],rax
  41149c:	mov    QWORD PTR [rbx+0x38],0x0
  4114a4:	sub    ebx,edi
  4114a6:	lea    ecx,[rbx+0x40]
  4114a9:	xor    eax,eax
  4114ab:	shr    ecx,0x3
  4114ae:	rep stos QWORD PTR es:[rdi],rax
  4114b1:	add    rsp,0x50
  4114b5:	pop    rbx
  4114b6:	pop    rsi
  4114b7:	pop    rdi
  4114b8:	pop    rbp
  4114b9:	pop    r12
  4114bb:	ret    
  4114bc:	mov    rcx,rbx
  4114bf:	call   0x410810
  4114c4:	cmp    QWORD PTR [rbx+0x40],0x0
  4114c9:	jne    0x411419
  4114cf:	nop
  4114d0:	xor    eax,eax
  4114d2:	add    rsp,0x50
  4114d6:	pop    rbx
  4114d7:	pop    rsi
  4114d8:	pop    rdi
  4114d9:	pop    rbp
  4114da:	pop    r12
  4114dc:	ret    
  4114dd:	mov    rcx,rbx
  4114e0:	call   0x410c90
  4114e5:	jmp    0x411424
  4114ea:	nop    WORD PTR [rax+rax*1+0x0]
  4114f0:	push   rbp
  4114f1:	push   rdi
  4114f2:	push   rsi
  4114f3:	push   rbx
  4114f4:	sub    rsp,0x98
  4114fb:	mov    ebp,edx
  4114fd:	lea    r9,[rsp+0x2c]
  411502:	lea    rdx,[rsp+0x38]
  411507:	lea    r8,[rsp+0x60]
  41150c:	mov    rdi,rcx
  41150f:	call   0x406ed0
  411514:	test   rax,rax
  411517:	mov    rsi,rax
  41151a:	je     0x4117a0
  411520:	call   0x410950
  411525:	mov    rcx,rdi
  411528:	mov    rbx,rax
  41152b:	call   0x422a00
  411530:	mov    rcx,rax
  411533:	mov    QWORD PTR [rbx+0x8],rax
  411537:	call   0x409e60
  41153c:	mov    rcx,rax
  41153f:	mov    QWORD PTR [rbx],rax
  411542:	call   0x422a00
  411547:	mov    edx,0x2e
  41154c:	mov    QWORD PTR [rbx],rax
  41154f:	mov    rcx,rax
  411552:	call   0x43a650
  411557:	test   rax,rax
  41155a:	je     0x41155f
  41155c:	mov    BYTE PTR [rax],0x0
  41155f:	mov    rax,QWORD PTR [rsp+0x60]
  411564:	mov    rcx,QWORD PTR [rsp+0x38]
  411569:	mov    QWORD PTR [rbx+0x10],rax
  41156d:	mov    rax,QWORD PTR [rsp+0x68]
  411572:	mov    QWORD PTR [rbx+0x18],rax
  411576:	mov    rax,QWORD PTR [rsp+0x70]
  41157b:	mov    QWORD PTR [rbx+0x20],rax
  41157f:	mov    rax,QWORD PTR [rsp+0x78]
  411584:	mov    QWORD PTR [rbx+0x28],rax
  411588:	mov    rax,QWORD PTR [rsp+0x80]
  411590:	mov    QWORD PTR [rbx+0x30],rax
  411594:	mov    rax,QWORD PTR [rsp+0x88]
  41159c:	mov    QWORD PTR [rbx+0x48],rcx
  4115a0:	mov    QWORD PTR [rbx+0x40],rsi
  4115a4:	mov    QWORD PTR [rbx+0x38],rax
  4115a8:	mov    eax,DWORD PTR [rsp+0x2c]
  4115ac:	test   eax,eax
  4115ae:	jne    0x411660
  4115b4:	mov    DWORD PTR [rsp+0x48],ecx
  4115b8:	mov    eax,0x0
  4115bd:	sub    ecx,0x3e8
  4115c3:	cmovs  ecx,eax
  4115c6:	mov    QWORD PTR [rsp+0x40],rsi
  4115cb:	lea    rsi,[rsp+0x40]
  4115d0:	mov    DWORD PTR [rsp+0x4c],ecx
  4115d4:	lea    r8,[rsp+0x30]
  4115d9:	lea    rcx,[rip+0x32eec]        # 0x4444cc
  4115e0:	mov    QWORD PTR [rbx+0x70],0x0
  4115e8:	mov    rdx,rsi
  4115eb:	mov    DWORD PTR [rsp+0x50],0x1
  4115f3:	call   0x412a40
  4115f8:	test   eax,eax
  4115fa:	je     0x4116f0
  411600:	test   ebp,ebp
  411602:	je     0x4116e0
  411608:	or     DWORD PTR [rbx+0x68],0x800
  41160f:	mov    rcx,QWORD PTR [rip+0x3fff2]        # 0x451608
  411616:	mov    rdx,QWORD PTR [rip+0x3ffe3]        # 0x451600
  41161d:	lea    rax,[rcx+0x2]
  411621:	cmp    rax,rdx
  411624:	jae    0x411670
  411626:	mov    rax,QWORD PTR [rip+0x3ffe3]        # 0x451610
  41162d:	lea    rdx,[rcx+0x1]
  411631:	mov    QWORD PTR [rip+0x3ffd0],rdx        # 0x451608
  411638:	mov    QWORD PTR [rax+rcx*8],rbx
  41163c:	mov    rax,QWORD PTR [rip+0x3ffcd]        # 0x451610
  411643:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  41164c:	mov    rax,rbx
  41164f:	add    rsp,0x98
  411656:	pop    rbx
  411657:	pop    rsi
  411658:	pop    rdi
  411659:	pop    rbp
  41165a:	ret    
  41165b:	nop    DWORD PTR [rax+rax*1+0x0]
  411660:	or     DWORD PTR [rbx+0x68],0x8
  411664:	jmp    0x4115b4
  411669:	nop    DWORD PTR [rax+0x0]
  411670:	test   rdx,rdx
  411673:	mov    rcx,QWORD PTR [rip+0x3ff96]        # 0x451610
  41167a:	jne    0x411690
  41167c:	test   rcx,rcx
  41167f:	je     0x411790
  411685:	mov    dl,0xa
  411687:	jmp    0x4116a8
  411689:	nop    DWORD PTR [rax+0x0]
  411690:	test   rcx,rcx
  411693:	je     0x4116b3
  411695:	movabs rax,0x1555555555555554
  41169f:	cmp    rdx,rax
  4116a2:	ja     0x4117a7
  4116a8:	mov    rax,rdx
  4116ab:	shr    rax,1
  4116ae:	lea    rdx,[rdx+rax*1+0x1]
  4116b3:	mov    QWORD PTR [rip+0x3ff46],rdx        # 0x451600
  4116ba:	shl    rdx,0x3
  4116be:	call   0x422820
  4116c3:	mov    rcx,QWORD PTR [rip+0x3ff3e]        # 0x451608
  4116ca:	mov    QWORD PTR [rip+0x3ff3f],rax        # 0x451610
  4116d1:	jmp    0x41162d
  4116d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116e0:	mov    rcx,rbx
  4116e3:	call   0x410c90
  4116e8:	jmp    0x41160f
  4116ed:	nop    DWORD PTR [rax]
  4116f0:	mov    eax,DWORD PTR [rsp+0x30]
  4116f4:	lea    r8,[rsp+0x34]
  4116f9:	lea    rcx,[rip+0x32ddc]        # 0x4444dc
  411700:	mov    rdx,rsi
  411703:	mov    DWORD PTR [rsp+0x48],eax
  411707:	mov    rax,QWORD PTR [rbx+0x48]
  41170b:	mov    DWORD PTR [rsp+0x4c],eax
  41170f:	call   0x4128a0
  411714:	test   eax,eax
  411716:	jne    0x411600
  41171c:	mov    eax,DWORD PTR [rsp+0x34]
  411720:	add    eax,0x7
  411723:	mov    DWORD PTR [rsp+0x34],eax
  411727:	cdqe   
  411729:	add    rax,QWORD PTR [rbx+0x40]
  41172d:	mov    rcx,rax
  411730:	call   0x412de0
  411735:	add    eax,DWORD PTR [rsp+0x34]
  411739:	lea    rdx,[rip+0x32d71]        # 0x4444b1
  411740:	mov    DWORD PTR [rsp+0x34],eax
  411744:	cdqe   
  411746:	add    rax,QWORD PTR [rbx+0x40]
  41174a:	mov    rcx,rax
  41174d:	call   0x43a638
  411752:	lea    ecx,[rax+0x1]
  411755:	mov    rsi,rax
  411758:	movsxd rsi,esi
  41175b:	movsxd rcx,ecx
  41175e:	call   0x4227b0
  411763:	movsxd rdx,DWORD PTR [rsp+0x34]
  411768:	mov    rdi,rax
  41176b:	mov    r8,rsi
  41176e:	add    rdx,QWORD PTR [rbx+0x40]
  411772:	mov    rcx,rax
  411775:	call   0x43a610
  41177a:	mov    BYTE PTR [rdi+rsi*1],0x0
  41177e:	mov    QWORD PTR [rbx+0x70],rdi
  411782:	jmp    0x411600
  411787:	nop    WORD PTR [rax+rax*1+0x0]
  411790:	mov    edx,0xa
  411795:	jmp    0x4116b3
  41179a:	nop    WORD PTR [rax+rax*1+0x0]
  4117a0:	xor    eax,eax
  4117a2:	jmp    0x41164f
  4117a7:	call   0x422a20
  4117ac:	nop
  4117ad:	nop    DWORD PTR [rax]
  4117b0:	push   r12
  4117b2:	push   rbp
  4117b3:	push   rdi
  4117b4:	push   rsi
  4117b5:	push   rbx
  4117b6:	sub    rsp,0x20
  4117ba:	mov    rbx,rcx
  4117bd:	call   0x411360
  4117c2:	test   rax,rax
  4117c5:	je     0x4117d2
  4117c7:	add    rsp,0x20
  4117cb:	pop    rbx
  4117cc:	pop    rsi
  4117cd:	pop    rdi
  4117ce:	pop    rbp
  4117cf:	pop    r12
  4117d1:	ret    
  4117d2:	movzx  eax,BYTE PTR [rbx]
  4117d5:	cmp    al,0x5c
  4117d7:	je     0x411810
  4117d9:	cmp    al,0x2f
  4117db:	je     0x411810
  4117dd:	test   al,al
  4117df:	je     0x4117ee
  4117e1:	movzx  edx,BYTE PTR [rbx+0x1]
  4117e5:	cmp    dl,0x3a
  4117e8:	je     0x411810
  4117ea:	cmp    al,0x2e
  4117ec:	je     0x411800
  4117ee:	xor    edx,edx
  4117f0:	mov    rcx,rbx
  4117f3:	call   0x406dc0
  4117f8:	mov    rsi,rax
  4117fb:	jmp    0x41181b
  4117fd:	nop    DWORD PTR [rax]
  411800:	cmp    dl,0x5c
  411803:	je     0x411810
  411805:	cmp    dl,0x2f
  411808:	jne    0x4117ee
  41180a:	nop    WORD PTR [rax+rax*1+0x0]
  411810:	mov    rcx,rbx
  411813:	call   0x422a00
  411818:	mov    rsi,rax
  41181b:	test   rsi,rsi
  41181e:	je     0x411843
  411820:	xor    edx,edx
  411822:	mov    rcx,rsi
  411825:	call   0x4114f0
  41182a:	mov    rcx,rsi
  41182d:	mov    rbx,rax
  411830:	call   0x43a748
  411835:	mov    rax,rbx
  411838:	add    rsp,0x20
  41183c:	pop    rbx
  41183d:	pop    rsi
  41183e:	pop    rdi
  41183f:	pop    rbp
  411840:	pop    r12
  411842:	ret    
  411843:	mov    rcx,rbx
  411846:	call   0x422a00
  41184b:	mov    rcx,rax
  41184e:	mov    rbp,rax
  411851:	call   0x409e60
  411856:	movzx  edx,BYTE PTR [rax]
  411859:	mov    rsi,rax
  41185c:	mov    rdi,QWORD PTR [rip+0x4322d]        # 0x454a90
  411863:	mov    r12,QWORD PTR [rip+0x43326]        # 0x454b90
  41186a:	test   dl,dl
  41186c:	je     0x41188d
  41186e:	xchg   ax,ax
  411870:	movsx  ebx,dl
  411873:	mov    ecx,ebx
  411875:	call   rdi
  411877:	test   eax,eax
  411879:	je     0x411882
  41187b:	mov    ecx,ebx
  41187d:	call   r12
  411880:	mov    BYTE PTR [rsi],al
  411882:	add    rsi,0x1
  411886:	movzx  edx,BYTE PTR [rsi]
  411889:	test   dl,dl
  41188b:	jne    0x411870
  41188d:	xor    edx,edx
  41188f:	mov    rcx,rbp
  411892:	call   0x406dc0
  411897:	mov    rcx,rbp
  41189a:	mov    rsi,rax
  41189d:	call   0x43a748
  4118a2:	xor    eax,eax
  4118a4:	test   rsi,rsi
  4118a7:	je     0x4117c7
  4118ad:	jmp    0x411820
  4118b2:	nop    DWORD PTR [rax+0x0]
  4118b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118c0:	push   r12
  4118c2:	push   rbp
  4118c3:	push   rdi
  4118c4:	push   rsi
  4118c5:	push   rbx
  4118c6:	sub    rsp,0x50
  4118ca:	mov    rsi,QWORD PTR [rip+0x3fd3f]        # 0x451610
  4118d1:	mov    rbp,rcx
  4118d4:	test   rsi,rsi
  4118d7:	je     0x4119c6
  4118dd:	mov    rbx,QWORD PTR [rsi]
  4118e0:	test   rbx,rbx
  4118e3:	je     0x41197d
  4118e9:	call   0x43a620
  4118ee:	add    rsi,0x8
  4118f2:	mov    r12,rax
  4118f5:	jmp    0x41190d
  4118f7:	nop    WORD PTR [rax+rax*1+0x0]
  411900:	add    rsi,0x8
  411904:	mov    rbx,QWORD PTR [rsi-0x8]
  411908:	test   rbx,rbx
  41190b:	je     0x41197d
  41190d:	mov    rdi,QWORD PTR [rbx+0x8]
  411911:	mov    r8,r12
  411914:	mov    rdx,rbp
  411917:	mov    rcx,rdi
  41191a:	call   0x43a618
  41191f:	test   eax,eax
  411921:	jne    0x411900
  411923:	lea    rdx,[rsp+0x20]
  411928:	mov    rcx,rdi
  41192b:	call   0x435d60
  411930:	cmp    eax,0xffffffff
  411933:	je     0x41193e
  411935:	mov    eax,DWORD PTR [rbx+0x24]
  411938:	cmp    DWORD PTR [rsp+0x34],eax
  41193c:	je     0x4119b5
  41193e:	mov    rax,QWORD PTR [rbx]
  411941:	or     DWORD PTR [rbx+0x68],0x2000
  411948:	lea    rdi,[rbx+0x18]
  41194c:	and    rdi,0xfffffffffffffff8
  411950:	mov    BYTE PTR [rax],0x0
  411953:	lea    rax,[rip+0x32b71]        # 0x4444cb
  41195a:	mov    QWORD PTR [rbx+0x10],0x0
  411962:	mov    QWORD PTR [rbx+0x8],rax
  411966:	mov    eax,ebx
  411968:	mov    QWORD PTR [rbx+0x38],0x0
  411970:	sub    eax,edi
  411972:	lea    ecx,[rax+0x40]
  411975:	xor    eax,eax
  411977:	shr    ecx,0x3
  41197a:	rep stos QWORD PTR es:[rdi],rax
  41197d:	xor    edx,edx
  41197f:	mov    rcx,rbp
  411982:	call   0x406dc0
  411987:	test   rax,rax
  41198a:	mov    rsi,rax
  41198d:	je     0x4119a7
  41198f:	mov    rcx,rax
  411992:	mov    edx,0x1
  411997:	call   0x4114f0
  41199c:	mov    rcx,rsi
  41199f:	mov    rbx,rax
  4119a2:	call   0x43a748
  4119a7:	mov    rax,rbx
  4119aa:	add    rsp,0x50
  4119ae:	pop    rbx
  4119af:	pop    rsi
  4119b0:	pop    rdi
  4119b1:	pop    rbp
  4119b2:	pop    r12
  4119b4:	ret    
  4119b5:	mov    rax,QWORD PTR [rbx+0x30]
  4119b9:	cmp    QWORD PTR [rsp+0x40],rax
  4119be:	jne    0x41193e
  4119c4:	jmp    0x4119a7
  4119c6:	xor    ebx,ebx
  4119c8:	jmp    0x41197d
  4119ca:	nop    WORD PTR [rax+rax*1+0x0]
  4119d0:	sub    rsp,0x28
  4119d4:	mov    ecx,0x58
  4119d9:	call   0x4227b0
  4119de:	mov    QWORD PTR [rax],0x0
  4119e5:	mov    QWORD PTR [rax+0x8],0x0
  4119ed:	mov    QWORD PTR [rax+0x10],0x0
  4119f5:	mov    QWORD PTR [rax+0x18],0x0
  4119fd:	mov    DWORD PTR [rax+0x20],0xffffffff
  411a04:	mov    DWORD PTR [rax+0x24],0x0
  411a0b:	mov    DWORD PTR [rax+0x28],0x0
  411a12:	mov    DWORD PTR [rax+0x2c],0x0
  411a19:	mov    QWORD PTR [rax+0x30],0x0
  411a21:	mov    QWORD PTR [rax+0x38],0x0
  411a29:	mov    QWORD PTR [rax+0x40],0x0
  411a31:	mov    QWORD PTR [rax+0x48],0x0
  411a39:	add    rsp,0x28
  411a3d:	ret    
  411a3e:	xchg   ax,ax
  411a40:	push   rsi
  411a41:	push   rbx
  411a42:	sub    rsp,0x28
  411a46:	mov    rax,QWORD PTR [rdx+0x48]
  411a4a:	mov    r11,QWORD PTR [rcx+0x40]
  411a4e:	mov    rsi,rcx
  411a51:	mov    r9,QWORD PTR [rdx+0x40]
  411a55:	test   eax,eax
  411a57:	mov    ebx,eax
  411a59:	lea    r8d,[rax-0x1]
  411a5d:	je     0x411ab6
  411a5f:	lea    rax,[r11+0x1]
  411a63:	jmp    0x411a83
  411a65:	add    r9,0x1
  411a69:	test   r8d,r8d
  411a6c:	mov    r11,rax
  411a6f:	mov    BYTE PTR [rax-0x1],r10b
  411a73:	lea    edx,[r8-0x1]
  411a77:	je     0x411ab6
  411a79:	mov    ebx,r8d
  411a7c:	add    rax,0x1
  411a80:	mov    r8d,edx
  411a83:	movzx  r10d,BYTE PTR [r9]
  411a87:	lea    rdx,[rax-0x1]
  411a8b:	cmp    r10b,0xd
  411a8f:	jne    0x411a65
  411a91:	test   r8d,r8d
  411a94:	je     0x411ab0
  411a96:	movzx  r10d,BYTE PTR [r9+0x1]
  411a9b:	add    r9,0x1
  411a9f:	cmp    r10b,0xa
  411aa3:	je     0x411ae0
  411aa5:	mov    BYTE PTR [rax-0x1],0xd
  411aa9:	lea    edx,[r8-0x1]
  411aad:	jmp    0x411a79
  411aaf:	nop
  411ab0:	mov    r11,rax
  411ab3:	mov    BYTE PTR [rdx],0xd
  411ab6:	mov    BYTE PTR [r11],0x0
  411aba:	mov    rcx,QWORD PTR [rsi+0x40]
  411abe:	sub    r11,rcx
  411ac1:	lea    rdx,[r11+0x1]
  411ac5:	mov    QWORD PTR [rsi+0x48],r11
  411ac9:	call   0x422820
  411ace:	mov    QWORD PTR [rsi+0x40],rax
  411ad2:	add    rsp,0x28
  411ad6:	pop    rbx
  411ad7:	pop    rsi
  411ad8:	ret    
  411ad9:	nop    DWORD PTR [rax+0x0]
  411ae0:	lea    r8d,[rbx-0x2]
  411ae4:	jmp    0x411a65
  411ae9:	nop    DWORD PTR [rax+0x0]
  411af0:	push   r15
  411af2:	push   r14
  411af4:	push   r13
  411af6:	push   r12
  411af8:	push   rbp
  411af9:	push   rdi
  411afa:	push   rsi
  411afb:	push   rbx
  411afc:	sub    rsp,0x48
  411b00:	mov    r14,QWORD PTR [rdx]
  411b03:	mov    rsi,rcx
  411b06:	mov    rcx,QWORD PTR [rcx+0x8]
  411b0a:	mov    rbx,rdx
  411b0d:	mov    DWORD PTR [rsp+0xa0],r8d
  411b15:	mov    r13,rsi
  411b18:	mov    rdi,QWORD PTR [r14]
  411b1b:	mov    rdx,rdi
  411b1e:	call   0x4213b0
  411b23:	test   eax,eax
  411b25:	jne    0x411ce0
  411b2b:	cmp    QWORD PTR [r13+0x40],0x0
  411b30:	je     0x411dc0
  411b36:	movsxd rax,DWORD PTR [r14+0x10]
  411b3a:	test   eax,eax
  411b3c:	js     0x411ba6
  411b3e:	mov    rdi,QWORD PTR [r13+0x48]
  411b42:	cmp    rax,rdi
  411b45:	jae    0x411ba6
  411b47:	mov    edx,DWORD PTR [r14+0x40]
  411b4b:	test   edx,edx
  411b4d:	sete   BYTE PTR [rsp+0x27]
  411b52:	jne    0x411bb9
  411b54:	mov    r8,QWORD PTR [rsi+0x58]
  411b58:	sub    rbx,r8
  411b5b:	sar    rbx,0x3
  411b5f:	sub    ebx,0x1
  411b62:	js     0x411ba6
  411b64:	movsxd r9,ebx
  411b67:	lea    rax,[r9*8+0x0]
  411b6f:	lea    r12,[r8+rax*1]
  411b73:	mov    rcx,QWORD PTR [r12]
  411b77:	mov    edx,DWORD PTR [rcx+0x40]
  411b7a:	test   edx,edx
  411b7c:	jne    0x411bae
  411b7e:	mov    ebx,ebx
  411b80:	lea    rax,[r8+rax*1-0x8]
  411b85:	sub    r9,rbx
  411b88:	lea    r8,[r8+r9*8-0x8]
  411b8d:	jmp    0x411ba1
  411b8f:	nop
  411b90:	mov    rcx,QWORD PTR [rax]
  411b93:	mov    rbx,rax
  411b96:	sub    rax,0x8
  411b9a:	mov    edx,DWORD PTR [rcx+0x40]
  411b9d:	test   edx,edx
  411b9f:	jne    0x411bb1
  411ba1:	cmp    rax,r8
  411ba4:	jne    0x411b90
  411ba6:	xor    r12d,r12d
  411ba9:	jmp    0x411c7e
  411bae:	mov    rbx,r12
  411bb1:	mov    QWORD PTR [rsp+0x28],r14
  411bb6:	mov    r14,rcx
  411bb9:	cmp    edx,0xffffffff
  411bbc:	je     0x411d00
  411bc2:	mov    ecx,0x58
  411bc7:	call   0x4227b0
  411bcc:	lea    rdi,[rax+0x8]
  411bd0:	mov    rcx,rax
  411bd3:	mov    QWORD PTR [rax],0x0
  411bda:	mov    QWORD PTR [rax+0x50],0x0
  411be2:	mov    r12,rax
  411be5:	xor    eax,eax
  411be7:	and    rdi,0xfffffffffffffff8
  411beb:	sub    rcx,rdi
  411bee:	add    ecx,0x58
  411bf1:	shr    ecx,0x3
  411bf4:	rep stos QWORD PTR es:[rdi],rax
  411bf7:	cmp    QWORD PTR [r14+0x50],0x0
  411bfc:	je     0x411de0
  411c02:	mov    rax,QWORD PTR [r14+0x20]
  411c06:	mov    QWORD PTR [r12],rax
  411c0a:	mov    rax,QWORD PTR [r14+0x28]
  411c0e:	mov    QWORD PTR [r12+0x8],rax
  411c13:	mov    rax,QWORD PTR [r14+0x30]
  411c17:	mov    QWORD PTR [r12+0x10],rax
  411c1c:	mov    rax,QWORD PTR [r14+0x38]
  411c20:	mov    QWORD PTR [r12+0x18],rax
  411c25:	mov    rax,QWORD PTR [r14+0x40]
  411c29:	cmp    QWORD PTR [r12+0x18],0x0
  411c2f:	mov    QWORD PTR [r12+0x20],rax
  411c34:	mov    rax,QWORD PTR [r14+0x48]
  411c38:	mov    QWORD PTR [r12+0x28],rax
  411c3d:	mov    rax,QWORD PTR [r14+0x50]
  411c41:	mov    QWORD PTR [r12+0x30],rax
  411c46:	mov    rax,QWORD PTR [r14+0x58]
  411c4a:	mov    QWORD PTR [r12+0x38],rax
  411c4f:	mov    rax,QWORD PTR [r14+0x60]
  411c53:	mov    QWORD PTR [r12+0x40],rax
  411c58:	mov    rax,QWORD PTR [r14+0x68]
  411c5c:	mov    QWORD PTR [r12+0x48],rax
  411c61:	mov    rax,QWORD PTR [r14+0x70]
  411c65:	mov    QWORD PTR [r12+0x50],rax
  411c6a:	je     0x411ee2
  411c70:	test   BYTE PTR [r13+0x68],0x8
  411c75:	jne    0x411c92
  411c77:	cmp    BYTE PTR [rsp+0x27],0x0
  411c7c:	jne    0x411c9f
  411c7e:	mov    rax,r12
  411c81:	add    rsp,0x48
  411c85:	pop    rbx
  411c86:	pop    rsi
  411c87:	pop    rdi
  411c88:	pop    rbp
  411c89:	pop    r12
  411c8b:	pop    r13
  411c8d:	pop    r14
  411c8f:	pop    r15
  411c91:	ret    
  411c92:	or     DWORD PTR [r12+0x2c],0x8
  411c98:	cmp    BYTE PTR [rsp+0x27],0x0
  411c9d:	je     0x411c7e
  411c9f:	movsxd rcx,DWORD PTR [r14+0x14]
  411ca3:	mov    rax,QWORD PTR [rsp+0x28]
  411ca8:	mov    ebx,DWORD PTR [rax+0x14]
  411cab:	mov    rsi,rcx
  411cae:	add    rcx,QWORD PTR [r13+0x40]
  411cb2:	call   0x412f60
  411cb7:	lea    edx,[rsi+rax*1]
  411cba:	mov    eax,ebx
  411cbc:	sub    eax,edx
  411cbe:	mov    edx,DWORD PTR [r12+0x20]
  411cc3:	mov    DWORD PTR [r12+0x24],eax
  411cc8:	cmp    eax,edx
  411cca:	jb     0x411da0
  411cd0:	sub    edx,0x1
  411cd3:	mov    DWORD PTR [r12+0x24],edx
  411cd8:	jmp    0x411c7e
  411cda:	nop    WORD PTR [rax+rax*1+0x0]
  411ce0:	mov    rcx,rdi
  411ce3:	call   0x4118c0
  411ce8:	test   rax,rax
  411ceb:	mov    r13,rax
  411cee:	jne    0x411b2b
  411cf4:	jmp    0x411ba6
  411cf9:	nop    DWORD PTR [rax+0x0]
  411d00:	mov    eax,DWORD PTR [r13+0x68]
  411d04:	mov    r12d,DWORD PTR [r14+0x14]
  411d08:	and    eax,0x1000
  411d0d:	cmp    eax,0x1
  411d10:	sbb    r9d,r9d
  411d13:	and    r9d,0xfffffc1c
  411d1a:	add    r9d,0x3e8
  411d21:	cmp    r12d,0xffffffff
  411d25:	je     0x411f00
  411d2b:	mov    r15,QWORD PTR [r13+0x40]
  411d2f:	movsxd rcx,r12d
  411d32:	add    rcx,r15
  411d35:	call   0x412f60
  411d3a:	add    r12d,eax
  411d3d:	cmp    r12d,edi
  411d40:	jge    0x411edb
  411d46:	movsxd rax,r12d
  411d49:	movzx  edx,BYTE PTR [r15+rax*1]
  411d4e:	cmp    dl,0x1f
  411d51:	je     0x411edb
  411d57:	cmp    dl,0xc
  411d5a:	je     0x411edb
  411d60:	lea    rcx,[r15+rax*1+0x1]
  411d65:	mov    edx,r12d
  411d68:	jmp    0x411d84
  411d6a:	nop    WORD PTR [rax+rax*1+0x0]
  411d70:	movzx  r8d,BYTE PTR [rcx]
  411d74:	add    rcx,0x1
  411d78:	cmp    r8b,0x1f
  411d7c:	je     0x411d8b
  411d7e:	cmp    r8b,0xc
  411d82:	je     0x411d8b
  411d84:	add    edx,0x1
  411d87:	cmp    edx,edi
  411d89:	jne    0x411d70
  411d8b:	sub    edx,r12d
  411d8e:	mov    DWORD PTR [r14+0x40],edx
  411d92:	jmp    0x411bc2
  411d97:	nop    WORD PTR [rax+rax*1+0x0]
  411da0:	test   eax,eax
  411da2:	jns    0x411c7e
  411da8:	mov    DWORD PTR [r12+0x24],0x0
  411db1:	jmp    0x411c7e
  411db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411dc0:	mov    rcx,r13
  411dc3:	call   0x410810
  411dc8:	cmp    QWORD PTR [r13+0x40],0x0
  411dcd:	jne    0x411b36
  411dd3:	jmp    0x411ba6
  411dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  411de0:	movsxd rcx,DWORD PTR [r14+0x14]
  411de4:	add    rcx,QWORD PTR [r13+0x40]
  411de8:	mov    QWORD PTR [r12+0x18],rcx
  411ded:	call   0x412f60
  411df2:	cdqe   
  411df4:	add    QWORD PTR [r12+0x18],rax
  411df9:	mov    eax,DWORD PTR [r14+0x40]
  411dfd:	mov    rdx,QWORD PTR [rsi+0x8]
  411e01:	cmp    r13,rsi
  411e04:	mov    DWORD PTR [r12+0x20],eax
  411e09:	mov    rax,QWORD PTR [r14+0x8]
  411e0d:	mov    QWORD PTR [r12+0x10],rax
  411e12:	mov    eax,DWORD PTR [r14+0x18]
  411e16:	mov    QWORD PTR [r12],rdx
  411e1a:	mov    DWORD PTR [r12+0x2c],eax
  411e1f:	je     0x411e29
  411e21:	mov    rdx,QWORD PTR [r14]
  411e24:	mov    QWORD PTR [r12+0x8],rdx
  411e29:	mov    edx,DWORD PTR [rsp+0xa0]
  411e30:	test   edx,edx
  411e32:	je     0x411e41
  411e34:	or     ah,0x40
  411e37:	mov    DWORD PTR [r12+0x2c],eax
  411e3c:	jmp    0x411c70
  411e41:	mov    r8,rbx
  411e44:	mov    rdx,rsi
  411e47:	mov    rcx,r12
  411e4a:	call   0x40a810
  411e4f:	mov    rax,QWORD PTR [rip+0x37cba]        # 0x449b10
  411e56:	mov    eax,DWORD PTR [rax]
  411e58:	test   eax,eax
  411e5a:	je     0x412138
  411e60:	mov    rax,QWORD PTR [r12]
  411e64:	mov    QWORD PTR [r14+0x20],rax
  411e68:	mov    rax,QWORD PTR [r12+0x8]
  411e6d:	mov    QWORD PTR [r14+0x28],rax
  411e71:	mov    rax,QWORD PTR [r12+0x10]
  411e76:	mov    QWORD PTR [r14+0x30],rax
  411e7a:	mov    rax,QWORD PTR [r12+0x18]
  411e7f:	mov    QWORD PTR [r14+0x38],rax
  411e83:	mov    rax,QWORD PTR [r12+0x20]
  411e88:	mov    QWORD PTR [r14+0x40],rax
  411e8c:	mov    rax,QWORD PTR [r12+0x28]
  411e91:	mov    QWORD PTR [r14+0x48],rax
  411e95:	mov    rax,QWORD PTR [r12+0x30]
  411e9a:	mov    QWORD PTR [r14+0x50],rax
  411e9e:	mov    rax,QWORD PTR [r12+0x38]
  411ea3:	test   BYTE PTR [r12+0x2d],0x1
  411ea9:	mov    QWORD PTR [r14+0x58],rax
  411ead:	mov    rax,QWORD PTR [r12+0x40]
  411eb2:	mov    QWORD PTR [r14+0x60],rax
  411eb6:	mov    rax,QWORD PTR [r12+0x48]
  411ebb:	mov    QWORD PTR [r14+0x68],rax
  411ebf:	mov    rax,QWORD PTR [r12+0x50]
  411ec4:	mov    QWORD PTR [r14+0x70],rax
  411ec8:	jne    0x411c70
  411ece:	mov    QWORD PTR [r14+0x38],0x0
  411ed6:	jmp    0x411c70
  411edb:	xor    edx,edx
  411edd:	jmp    0x411d8e
  411ee2:	movsxd rcx,DWORD PTR [r14+0x14]
  411ee6:	add    rcx,QWORD PTR [r13+0x40]
  411eea:	mov    QWORD PTR [r12+0x18],rcx
  411eef:	call   0x412f60
  411ef4:	cdqe   
  411ef6:	add    QWORD PTR [r12+0x18],rax
  411efb:	jmp    0x411c70
  411f00:	lea    rax,[r13+0x40]
  411f04:	lea    rdi,[r13+0x48]
  411f08:	mov    r8,r14
  411f0b:	mov    rdx,rdi
  411f0e:	mov    rcx,rax
  411f11:	mov    QWORD PTR [rsp+0x30],rax
  411f16:	mov    QWORD PTR [rsp+0x38],rdi
  411f1b:	call   0x410850
  411f20:	test   eax,eax
  411f22:	jne    0x41210f
  411f28:	test   BYTE PTR [r13+0x69],0x10
  411f2d:	jne    0x411ba6
  411f33:	mov    rax,QWORD PTR [rip+0x37c66]        # 0x449ba0
  411f3a:	mov    r8d,DWORD PTR [rax]
  411f3d:	test   r8d,r8d
  411f40:	jne    0x411ba6
  411f46:	mov    rdx,r13
  411f49:	mov    rcx,r13
  411f4c:	call   0x411a40
  411f51:	mov    r12,QWORD PTR [rsi+0x58]
  411f55:	or     DWORD PTR [r13+0x68],0x1000
  411f5d:	mov    r15,QWORD PTR [r12]
  411f61:	test   r15,r15
  411f64:	jne    0x411fd5
  411f66:	jmp    0x41200e
  411f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  411f70:	mov    rcx,QWORD PTR [r15+0x50]
  411f74:	call   0x4093d0
  411f79:	mov    rcx,QWORD PTR [r15+0x68]
  411f7d:	call   0x43a748
  411f82:	mov    rcx,QWORD PTR [r15+0x60]
  411f86:	call   0x43a748
  411f8b:	mov    rcx,QWORD PTR [r15+0x58]
  411f8f:	call   0x43a748
  411f94:	lea    rdx,[rdi+0x8]
  411f98:	mov    QWORD PTR [rdi],0x0
  411f9f:	mov    QWORD PTR [rdi+0x50],0x0
  411fa7:	xor    eax,eax
  411fa9:	and    rdx,0xfffffffffffffff8
  411fad:	sub    rdi,rdx
  411fb0:	lea    ecx,[rdi+0x58]
  411fb3:	mov    rdi,rdx
  411fb6:	shr    ecx,0x3
  411fb9:	test   ebp,ebp
  411fbb:	rep stos QWORD PTR es:[rdi],rax
  411fbe:	je     0x411fc8
  411fc0:	mov    DWORD PTR [r15+0x40],0xffffffff
  411fc8:	add    r12,0x8
  411fcc:	mov    r15,QWORD PTR [r12]
  411fd0:	test   r15,r15
  411fd3:	je     0x41200e
  411fd5:	mov    rdx,QWORD PTR [r13+0x8]
  411fd9:	mov    rcx,QWORD PTR [r15]
  411fdc:	call   0x4213b0
  411fe1:	test   eax,eax
  411fe3:	jne    0x411fc8
  411fe5:	test   BYTE PTR [r15+0x4d],0x1
  411fea:	lea    rdi,[r15+0x20]
  411fee:	mov    ebp,DWORD PTR [r15+0x40]
  411ff2:	mov    DWORD PTR [r15+0x14],0xffffffff
  411ffa:	je     0x411f70
  412000:	mov    rcx,QWORD PTR [r15+0x38]
  412004:	call   0x43a748
  412009:	jmp    0x411f70
  41200e:	mov    rdx,QWORD PTR [rsp+0x38]
  412013:	mov    rcx,QWORD PTR [rsp+0x30]
  412018:	mov    r9d,0x3e8
  41201e:	mov    r8,r14
  412021:	call   0x410850
  412026:	mov    DWORD PTR [rsp+0x30],eax
  41202a:	mov    rax,QWORD PTR [rip+0x37bdf]        # 0x449c10
  412031:	mov    r12,QWORD PTR [rax]
  412034:	test   r12,r12
  412037:	je     0x412103
  41203d:	nop    DWORD PTR [rax]
  412040:	mov    r15,QWORD PTR [r12+0xa8]
  412048:	test   r15,r15
  41204b:	je     0x4120f6
  412051:	mov    QWORD PTR [r12+0x20],0x0
  41205a:	mov    rdi,QWORD PTR [r15]
  41205d:	test   rdi,rdi
  412060:	jne    0x41207c
  412062:	jmp    0x4120f6
  412067:	nop    WORD PTR [rax+rax*1+0x0]
  412070:	add    r15,0x8
  412074:	mov    rdi,QWORD PTR [r15]
  412077:	test   rdi,rdi
  41207a:	je     0x4120e0
  41207c:	mov    rbp,QWORD PTR [rdi]
  41207f:	test   BYTE PTR [rbp+0x2c],0x10
  412083:	jne    0x412070
  412085:	mov    rcx,QWORD PTR [rbp+0x8]
  412089:	mov    rdx,QWORD PTR [r13+0x8]
  41208d:	test   rcx,rcx
  412090:	je     0x412120
  412096:	call   0x4213b0
  41209b:	test   eax,eax
  41209d:	sete   al
  4120a0:	test   al,al
  4120a2:	je     0x412070
  4120a4:	mov    rdx,QWORD PTR [rbp+0x10]
  4120a8:	mov    rcx,QWORD PTR [rbp+0x0]
  4120ac:	xor    r8d,r8d
  4120af:	call   0x412270
  4120b4:	mov    QWORD PTR [rdi],rax
  4120b7:	mov    rdx,QWORD PTR [r15]
  4120ba:	mov    rax,QWORD PTR [rdx]
  4120bd:	test   rax,rax
  4120c0:	je     0x412130
  4120c2:	mov    edx,DWORD PTR [rbp+0x50]
  4120c5:	add    r15,0x8
  4120c9:	mov    rcx,rbp
  4120cc:	mov    DWORD PTR [rax+0x50],edx
  4120cf:	call   0x414970
  4120d4:	mov    rdi,QWORD PTR [r15]
  4120d7:	test   rdi,rdi
  4120da:	jne    0x41207c
  4120dc:	nop    DWORD PTR [rax+0x0]
  4120e0:	cmp    r15,QWORD PTR [r12+0xa8]
  4120e8:	jbe    0x4120f6
  4120ea:	mov    rax,QWORD PTR [r15-0x8]
  4120ee:	mov    rax,QWORD PTR [rax]
  4120f1:	mov    QWORD PTR [r12+0x20],rax
  4120f6:	mov    r12,QWORD PTR [r12]
  4120fa:	test   r12,r12
  4120fd:	jne    0x412040
  412103:	mov    ecx,DWORD PTR [rsp+0x30]
  412107:	test   ecx,ecx
  412109:	je     0x411ba6
  41210f:	mov    rdi,QWORD PTR [r13+0x48]
  412113:	mov    r12d,DWORD PTR [r14+0x14]
  412117:	jmp    0x411d2b
  41211c:	nop    DWORD PTR [rax+0x0]
  412120:	mov    rcx,QWORD PTR [rbp+0x0]
  412124:	jmp    0x412096
  412129:	nop    DWORD PTR [rax+0x0]
  412130:	mov    QWORD PTR [rdx],rbp
  412133:	jmp    0x412070
  412138:	mov    rcx,QWORD PTR [r12+0x18]
  41213d:	call   0x412f60
  412142:	mov    rbx,QWORD PTR [r12+0x18]
  412147:	movsxd rcx,eax
  41214a:	lea    rdx,[rip+0x32345]        # 0x444496
  412151:	mov    rsi,rcx
  412154:	add    rcx,rbx
  412157:	call   0x43a638
  41215c:	add    eax,esi
  41215e:	lea    edx,[rax+0x1]
  412161:	mov    DWORD PTR [r12+0x28],edx
  412166:	movsxd rdx,edx
  412169:	cmp    BYTE PTR [rbx+rdx*1],0xa
  41216d:	jne    0x411e60
  412173:	add    eax,0x2
  412176:	mov    DWORD PTR [r12+0x28],eax
  41217b:	jmp    0x411e60
  412180:	push   r13
  412182:	push   r12
  412184:	push   rbp
  412185:	push   rdi
  412186:	push   rsi
  412187:	push   rbx
  412188:	sub    rsp,0x28
  41218c:	test   rcx,rcx
  41218f:	je     0x412210
  412191:	cmp    QWORD PTR [rcx+0x40],0x0
  412196:	mov    rbp,rdx
  412199:	mov    r12,rcx
  41219c:	je     0x412264
  4121a2:	lea    r13,[rip+0x3233b]        # 0x4444e4
  4121a9:	mov    ecx,0x2
  4121ae:	mov    rsi,rbp
  4121b1:	mov    rdi,r13
  4121b4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4121b6:	je     0x412220
  4121b8:	mov    rbx,QWORD PTR [r12+0x58]
  4121bd:	test   rbx,rbx
  4121c0:	je     0x412210
  4121c2:	mov    rax,QWORD PTR [rbx]
  4121c5:	test   rax,rax
  4121c8:	jne    0x4121dc
  4121ca:	jmp    0x412210
  4121cc:	nop    DWORD PTR [rax+0x0]
  4121d0:	add    rbx,0x8
  4121d4:	mov    rax,QWORD PTR [rbx]
  4121d7:	test   rax,rax
  4121da:	je     0x412210
  4121dc:	mov    rdx,QWORD PTR [rax+0x8]
  4121e0:	mov    rcx,rbp
  4121e3:	call   0x43a648
  4121e8:	test   eax,eax
  4121ea:	jne    0x4121d0
  4121ec:	xor    r8d,r8d
  4121ef:	mov    rdx,rbx
  4121f2:	mov    rcx,r12
  4121f5:	add    rsp,0x28
  4121f9:	pop    rbx
  4121fa:	pop    rsi
  4121fb:	pop    rdi
  4121fc:	pop    rbp
  4121fd:	pop    r12
  4121ff:	pop    r13
  412201:	jmp    0x411af0
  412206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412210:	xor    eax,eax
  412212:	add    rsp,0x28
  412216:	pop    rbx
  412217:	pop    rsi
  412218:	pop    rdi
  412219:	pop    rbp
  41221a:	pop    r12
  41221c:	pop    r13
  41221e:	ret    
  41221f:	nop
  412220:	call   0x4119d0
  412225:	mov    rbx,rax
  412228:	mov    rax,QWORD PTR [r12+0x8]
  41222d:	mov    rcx,r13
  412230:	mov    QWORD PTR [rbx],rax
  412233:	call   0x422a00
  412238:	mov    QWORD PTR [rbx+0x10],rax
  41223c:	mov    rax,QWORD PTR [r12+0x40]
  412241:	mov    QWORD PTR [rbx+0x18],rax
  412245:	mov    rax,QWORD PTR [r12+0x48]
  41224a:	mov    DWORD PTR [rbx+0x28],0x0
  412251:	mov    DWORD PTR [rbx+0x20],eax
  412254:	mov    rax,rbx
  412257:	add    rsp,0x28
  41225b:	pop    rbx
  41225c:	pop    rsi
  41225d:	pop    rdi
  41225e:	pop    rbp
  41225f:	pop    r12
  412261:	pop    r13
  412263:	ret    
  412264:	call   0x410810
  412269:	jmp    0x4121a2
  41226e:	xchg   ax,ax
  412270:	push   r13
  412272:	push   r12
  412274:	push   rbp
  412275:	push   rdi
  412276:	push   rsi
  412277:	push   rbx
  412278:	sub    rsp,0x28
  41227c:	mov    QWORD PTR [rip+0x3f391],0x0        # 0x451618
  412287:	test   rcx,rcx
  41228a:	mov    rbx,rdx
  41228d:	mov    r13,r8
  412290:	je     0x412380
  412296:	call   0x422a00
  41229b:	mov    rdi,rax
  41229e:	test   rbx,rbx
  4122a1:	je     0x4122ac
  4122a3:	cmp    BYTE PTR [rbx],0x0
  4122a6:	jne    0x4123d0
  4122ac:	lea    rcx,[rip+0x32237]        # 0x4444ea
  4122b3:	call   0x422a00
  4122b8:	mov    r12,rax
  4122bb:	mov    rcx,rdi
  4122be:	call   0x407220
  4122c3:	test   eax,eax
  4122c5:	jne    0x4123a0
  4122cb:	lea    rdx,[rip+0x3221c]        # 0x4444ee
  4122d2:	mov    rcx,rdi
  4122d5:	call   0x4213b0
  4122da:	test   eax,eax
  4122dc:	je     0x4123e0
  4122e2:	test   r13,r13
  4122e5:	je     0x412330
  4122e7:	mov    eax,DWORD PTR [rip+0x415af]        # 0x45389c
  4122ed:	test   eax,eax
  4122ef:	jne    0x412330
  4122f1:	mov    rbp,QWORD PTR [r13+0x0]
  4122f5:	test   rbp,rbp
  4122f8:	je     0x412330
  4122fa:	mov    rcx,rbp
  4122fd:	call   0x43a620
  412302:	lea    rbx,[rbp+rax*1+0x0]
  412307:	cmp    rbp,rbx
  41230a:	jae    0x412330
  41230c:	nop    DWORD PTR [rax+0x0]
  412310:	movzx  esi,BYTE PTR [rbx]
  412313:	cmp    sil,0x5c
  412317:	je     0x4123f0
  41231d:	cmp    sil,0x2f
  412321:	je     0x4123f0
  412327:	sub    rbx,0x1
  41232b:	cmp    rbx,rbp
  41232e:	jne    0x412310
  412330:	mov    rcx,rdi
  412333:	call   0x4117b0
  412338:	test   rax,rax
  41233b:	mov    rbp,rax
  41233e:	jne    0x41242d
  412344:	mov    rcx,rdi
  412347:	call   0x40f880
  41234c:	test   rax,rax
  41234f:	mov    rbx,rax
  412352:	jne    0x4123a8
  412354:	mov    rax,QWORD PTR [rip+0x37595]        # 0x4498f0
  41235b:	mov    edx,DWORD PTR [rax]
  41235d:	test   edx,edx
  41235f:	je     0x412444
  412365:	mov    rcx,rdi
  412368:	call   0x407190
  41236d:	mov    QWORD PTR [rip+0x3f2a4],rax        # 0x451618
  412374:	jmp    0x412444
  412379:	nop    DWORD PTR [rax+0x0]
  412380:	test   r8,r8
  412383:	je     0x4124b0
  412389:	mov    rcx,QWORD PTR [r8]
  41238c:	call   0x422a00
  412391:	mov    rdi,rax
  412394:	jmp    0x41229e
  412399:	nop    DWORD PTR [rax+0x0]
  4123a0:	call   0x401ab0
  4123a5:	mov    rbx,rax
  4123a8:	mov    rcx,rdi
  4123ab:	call   0x43a748
  4123b0:	mov    rcx,r12
  4123b3:	call   0x43a748
  4123b8:	mov    rax,rbx
  4123bb:	add    rsp,0x28
  4123bf:	pop    rbx
  4123c0:	pop    rsi
  4123c1:	pop    rdi
  4123c2:	pop    rbp
  4123c3:	pop    r12
  4123c5:	pop    r13
  4123c7:	ret    
  4123c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4123d0:	mov    rcx,rbx
  4123d3:	call   0x422a00
  4123d8:	mov    r12,rax
  4123db:	jmp    0x4122bb
  4123e0:	mov    rcx,r12
  4123e3:	call   0x40f880
  4123e8:	mov    rbx,rax
  4123eb:	jmp    0x4123a8
  4123ed:	nop    DWORD PTR [rax]
  4123f0:	mov    BYTE PTR [rbx],0x0
  4123f3:	mov    rcx,QWORD PTR [r13+0x0]
  4123f7:	xor    r8d,r8d
  4123fa:	mov    rdx,rdi
  4123fd:	call   0x406ab0
  412402:	test   rax,rax
  412405:	mov    r13,rax
  412408:	je     0x4124c0
  41240e:	mov    rcx,r13
  412411:	call   0x4117b0
  412416:	mov    rcx,r13
  412419:	mov    rbp,rax
  41241c:	call   0x43a748
  412421:	test   rbp,rbp
  412424:	mov    BYTE PTR [rbx],sil
  412427:	je     0x412330
  41242d:	mov    rdx,r12
  412430:	mov    rcx,rbp
  412433:	call   0x412180
  412438:	test   rax,rax
  41243b:	mov    rbx,rax
  41243e:	jne    0x4123a8
  412444:	test   r12,r12
  412447:	je     0x4124c8
  412449:	lea    rdx,[rip+0x3209a]        # 0x4444ea
  412450:	mov    rcx,r12
  412453:	xor    ebx,ebx
  412455:	call   0x4213b0
  41245a:	test   eax,eax
  41245c:	jne    0x4123a8
  412462:	lea    rdx,[rip+0x32081]        # 0x4444ea
  412469:	mov    rcx,rbp
  41246c:	call   0x412180
  412471:	test   rax,rax
  412474:	mov    rbx,rax
  412477:	jne    0x4123a8
  41247d:	lea    rdx,[rip+0x32075]        # 0x4444f9
  412484:	mov    rcx,rbp
  412487:	call   0x412180
  41248c:	test   rax,rax
  41248f:	mov    rbx,rax
  412492:	jne    0x4123a8
  412498:	lea    rdx,[rip+0x3205e]        # 0x4444fd
  41249f:	mov    rcx,rbp
  4124a2:	call   0x412180
  4124a7:	mov    rbx,rax
  4124aa:	jmp    0x4123a8
  4124af:	nop
  4124b0:	lea    rcx,[rip+0x3202f]        # 0x4444e6
  4124b7:	jmp    0x412296
  4124bc:	nop    DWORD PTR [rax+0x0]
  4124c0:	mov    BYTE PTR [rbx],sil
  4124c3:	jmp    0x412330
  4124c8:	xor    ebx,ebx
  4124ca:	jmp    0x4123a8
  4124cf:	nop
  4124d0:	xor    r8d,r8d
  4124d3:	jmp    0x412270
  4124d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4124e0:	xor    r8d,r8d
  4124e3:	jmp    0x411af0
  4124e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4124f0:	mov    r8d,0x1
  4124f6:	jmp    0x411af0
  4124fb:	nop
  4124fc:	nop
  4124fd:	nop
  4124fe:	nop
  4124ff:	nop
  412500:	push   rbx
  412501:	sub    rsp,0x20
  412505:	mov    rbx,rcx
  412508:	mov    ecx,0x18
  41250d:	call   0x4227b0
  412512:	mov    rdx,QWORD PTR [rbx]
  412515:	mov    QWORD PTR [rax],rdx
  412518:	mov    edx,DWORD PTR [rbx+0x8]
  41251b:	mov    DWORD PTR [rax+0x8],edx
  41251e:	mov    edx,DWORD PTR [rbx+0xc]
  412521:	mov    DWORD PTR [rax+0xc],edx
  412524:	mov    edx,DWORD PTR [rbx+0x10]
  412527:	mov    DWORD PTR [rax+0x10],edx
  41252a:	add    rsp,0x20
  41252e:	pop    rbx
  41252f:	ret    
  412530:	push   r15
  412532:	push   r14
  412534:	push   r13
  412536:	push   r12
  412538:	push   rbp
  412539:	push   rdi
  41253a:	push   rsi
  41253b:	push   rbx
  41253c:	sub    rsp,0xa8
  412543:	test   edx,edx
  412545:	mov    rbx,rcx
  412548:	mov    ebp,r8d
  41254b:	mov    r14,r9
  41254e:	jne    0x412730
  412554:	call   0x43a620
  412559:	lea    rcx,[rax+0x1]
  41255d:	call   0x4227b0
  412562:	movzx  r9d,BYTE PTR [rbx]
  412566:	mov    rdi,rax
  412569:	mov    r10,rax
  41256c:	test   r9b,r9b
  41256f:	jne    0x4126c8
  412575:	mov    BYTE PTR [r10],0x0
  412579:	cmp    ebp,0x1
  41257c:	lea    r12,[rsp+0x60]
  412581:	mov    rdx,rdi
  412584:	sbb    eax,eax
  412586:	and    eax,0xfffffffe
  412589:	mov    rcx,r12
  41258c:	lea    r8d,[rax+0x7]
  412590:	call   0x431f80
  412595:	mov    rcx,rdi
  412598:	mov    ebx,eax
  41259a:	call   0x43a748
  41259f:	test   ebx,ebx
  4125a1:	jne    0x4127b0
  4125a7:	mov    rax,r14
  4125aa:	add    rax,QWORD PTR [rsp+0x110]
  4125b2:	cmp    QWORD PTR [rsp+0x110],0x0
  4125bb:	movzx  edi,BYTE PTR [rax]
  4125be:	mov    QWORD PTR [rsp+0x40],rax
  4125c3:	mov    BYTE PTR [rax],0x0
  4125c6:	mov    BYTE PTR [rsp+0x4f],dil
  4125cb:	je     0x41288e
  4125d1:	lea    rax,[rsp+0x50]
  4125d6:	mov    r13d,0x1
  4125dc:	xor    edi,edi
  4125de:	xor    esi,esi
  4125e0:	xor    edx,edx
  4125e2:	xor    r15d,r15d
  4125e5:	xor    ebp,ebp
  4125e7:	mov    QWORD PTR [rsp+0x38],rax
  4125ec:	jmp    0x41263b
  4125ee:	xchg   ax,ax
  4125f0:	mov    rcx,QWORD PTR [rsp+0x50]
  4125f5:	mov    rbx,QWORD PTR [rsp+0x58]
  4125fa:	lea    rax,[rbp+rdi*1+0x0]
  4125ff:	mov    QWORD PTR [rax+0x8],rbx
  412603:	mov    QWORD PTR [rax],rcx
  412606:	add    QWORD PTR [rax],r15
  412609:	add    r15,QWORD PTR [rax+0x8]
  41260d:	mov    QWORD PTR [rax+0x8],r15
  412611:	lea    rax,[r15+0x1]
  412615:	cmp    QWORD PTR [rsp+0x58],0x0
  41261b:	cmove  r15,rax
  41261f:	add    rdi,0x10
  412623:	cmp    QWORD PTR [rsp+0x110],r15
  41262b:	mov    rdx,r15
  41262e:	lea    rax,[r13+0x1]
  412632:	jbe    0x412880
  412638:	mov    r13,rax
  41263b:	mov    r9,QWORD PTR [rsp+0x38]
  412640:	add    rdx,r14
  412643:	mov    DWORD PTR [rsp+0x20],0x1
  41264b:	mov    r8d,0x1
  412651:	mov    rcx,r12
  412654:	lea    rbx,[r13-0x1]
  412658:	call   0x432170
  41265d:	test   eax,eax
  41265f:	jne    0x412844
  412665:	cmp    rbx,rsi
  412668:	jne    0x4125f0
  41266a:	test   rsi,rsi
  41266d:	jne    0x412700
  412673:	cmp    rbp,0x1
  412677:	sbb    rdx,rdx
  41267a:	and    rdx,0xfffffffffffffe60
  412681:	add    rdx,0x4c0
  412688:	cmp    rbp,0x1
  41268c:	sbb    rsi,rsi
  41268f:	and    rsi,0xffffffffffffffe6
  412693:	add    rsi,0x4c
  412697:	mov    rcx,rbp
  41269a:	call   0x422820
  41269f:	mov    rbp,rax
  4126a2:	jmp    0x4125f0
  4126a7:	nop    WORD PTR [rax+rax*1+0x0]
  4126b0:	mov    BYTE PTR [r10],r9b
  4126b3:	add    rbx,0x1
  4126b7:	movzx  r9d,BYTE PTR [rbx]
  4126bb:	add    r10,0x1
  4126bf:	test   r9b,r9b
  4126c2:	je     0x412575
  4126c8:	cmp    r9b,0x5c
  4126cc:	jne    0x4126b0
  4126ce:	movzx  eax,BYTE PTR [rbx+0x1]
  4126d2:	cmp    al,0x6e
  4126d4:	je     0x412832
  4126da:	cmp    al,0x74
  4126dc:	je     0x412820
  4126e2:	test   al,al
  4126e4:	je     0x4127a0
  4126ea:	mov    BYTE PTR [r10],0x5c
  4126ee:	mov    BYTE PTR [r10+0x1],al
  4126f2:	add    rbx,0x2
  4126f6:	movzx  r9d,BYTE PTR [rbx]
  4126fa:	add    r10,0x1
  4126fe:	jmp    0x4126bb
  412700:	test   rbp,rbp
  412703:	je     0x412810
  412709:	movabs rax,0xaaaaaaaaaaaaaa9
  412713:	cmp    rsi,rax
  412716:	ja     0x412899
  41271c:	shr    rsi,1
  41271f:	add    rsi,r13
  412722:	mov    rdx,rsi
  412725:	shl    rdx,0x4
  412729:	jmp    0x412697
  41272e:	xchg   ax,ax
  412730:	call   0x43a620
  412735:	lea    rcx,[rax+rax*1+0x1]
  41273a:	call   0x4227b0
  41273f:	movzx  esi,BYTE PTR [rbx]
  412742:	mov    rdi,rax
  412745:	mov    r12,rax
  412748:	test   sil,sil
  41274b:	jne    0x41277d
  41274d:	nop    DWORD PTR [rax]
  412750:	mov    BYTE PTR [r12],0x0
  412755:	jmp    0x412579
  41275a:	nop    WORD PTR [rax+rax*1+0x0]
  412760:	lea    rax,[r12+0x1]
  412765:	mov    BYTE PTR [r12],0x5c
  41276a:	add    rbx,0x1
  41276e:	mov    BYTE PTR [rax],sil
  412771:	lea    r12,[rax+0x1]
  412775:	movzx  esi,BYTE PTR [rbx]
  412778:	test   sil,sil
  41277b:	je     0x412750
  41277d:	lea    rcx,[rip+0x31d8c]        # 0x444510
  412784:	movsx  edx,sil
  412788:	call   0x43a650
  41278d:	test   rax,rax
  412790:	jne    0x412760
  412792:	mov    rax,r12
  412795:	jmp    0x41276a
  412797:	nop    WORD PTR [rax+rax*1+0x0]
  4127a0:	mov    BYTE PTR [r10],0x5c
  4127a4:	add    r10,0x1
  4127a8:	jmp    0x412575
  4127ad:	nop    DWORD PTR [rax]
  4127b0:	xor    r9d,r9d
  4127b3:	xor    r8d,r8d
  4127b6:	mov    rdx,r12
  4127b9:	mov    ecx,ebx
  4127bb:	call   0x432090
  4127c0:	movsxd rsi,eax
  4127c3:	mov    rcx,rsi
  4127c6:	call   0x4227b0
  4127cb:	mov    r9,rsi
  4127ce:	mov    r8,rax
  4127d1:	mov    rdx,r12
  4127d4:	mov    ecx,ebx
  4127d6:	mov    rdi,rax
  4127d9:	mov    esi,0x2
  4127de:	call   0x432090
  4127e3:	lea    rcx,[rip+0x31d35]        # 0x44451f
  4127ea:	call   0x433f18
  4127ef:	mov    rdx,rdi
  4127f2:	mov    rcx,rax
  4127f5:	call   0x4144d0
  4127fa:	mov    eax,esi
  4127fc:	add    rsp,0xa8
  412803:	pop    rbx
  412804:	pop    rsi
  412805:	pop    rdi
  412806:	pop    rbp
  412807:	pop    r12
  412809:	pop    r13
  41280b:	pop    r14
  41280d:	pop    r15
  41280f:	ret    
  412810:	mov    rdx,rdi
  412813:	jmp    0x412697
  412818:	nop    DWORD PTR [rax+rax*1+0x0]
  412820:	movzx  r9d,BYTE PTR [rbx+0x2]
  412825:	mov    BYTE PTR [r10],0x9
  412829:	add    rbx,0x2
  41282d:	jmp    0x4126bb
  412832:	movzx  r9d,BYTE PTR [rbx+0x2]
  412837:	mov    BYTE PTR [r10],0xa
  41283b:	add    rbx,0x2
  41283f:	jmp    0x4126bb
  412844:	xor    esi,esi
  412846:	test   rbx,rbx
  412849:	sete   sil
  41284d:	movzx  edi,BYTE PTR [rsp+0x4f]
  412852:	mov    rax,QWORD PTR [rsp+0x40]
  412857:	mov    rcx,r12
  41285a:	mov    BYTE PTR [rax],dil
  41285d:	call   0x432110
  412862:	mov    rax,QWORD PTR [rsp+0x118]
  41286a:	mov    QWORD PTR [rax],rbp
  41286d:	mov    rax,QWORD PTR [rsp+0x120]
  412875:	mov    QWORD PTR [rax],rbx
  412878:	jmp    0x4127fa
  41287a:	nop    WORD PTR [rax+rax*1+0x0]
  412880:	xor    esi,esi
  412882:	test   r13,r13
  412885:	mov    rbx,r13
  412888:	sete   sil
  41288c:	jmp    0x41284d
  41288e:	mov    esi,0x1
  412893:	xor    ebx,ebx
  412895:	xor    ebp,ebp
  412897:	jmp    0x41284d
  412899:	call   0x422a20
  41289e:	nop
  41289f:	nop
  4128a0:	push   r15
  4128a2:	push   r14
  4128a4:	push   r13
  4128a6:	push   r12
  4128a8:	push   rbp
  4128a9:	push   rdi
  4128aa:	push   rsi
  4128ab:	push   rbx
  4128ac:	sub    rsp,0x28
  4128b0:	mov    r15,rcx
  4128b3:	mov    QWORD PTR [rsp+0x78],rdx
  4128b8:	mov    QWORD PTR [rsp+0x80],r8
  4128c0:	call   0x43a620
  4128c5:	mov    r12,rax
  4128c8:	mov    r14d,eax
  4128cb:	mov    rax,QWORD PTR [rsp+0x78]
  4128d0:	test   BYTE PTR [rax+0x10],0x1
  4128d4:	je     0x412a08
  4128da:	mov    rcx,r15
  4128dd:	call   0x422a00
  4128e2:	test   r12d,r12d
  4128e5:	mov    r13,rax
  4128e8:	jle    0x41293c
  4128ea:	mov    rbx,rax
  4128ed:	lea    eax,[r12-0x1]
  4128f2:	mov    rdi,QWORD PTR [rip+0x42177]        # 0x454a70
  4128f9:	lea    rbp,[r13+rax*1+0x1]
  4128fe:	jmp    0x412911
  412900:	call   QWORD PTR [rip+0x42292]        # 0x454b98
  412906:	mov    BYTE PTR [rbx],al
  412908:	add    rbx,0x1
  41290c:	cmp    rbx,rbp
  41290f:	je     0x41293c
  412911:	movsx  esi,BYTE PTR [rbx]
  412914:	mov    ecx,esi
  412916:	call   rdi
  412918:	test   eax,eax
  41291a:	mov    ecx,esi
  41291c:	jne    0x412900
  41291e:	call   QWORD PTR [rip+0x4216c]        # 0x454a90
  412924:	test   eax,eax
  412926:	je     0x412908
  412928:	mov    ecx,esi
  41292a:	add    rbx,0x1
  41292e:	call   QWORD PTR [rip+0x4225c]        # 0x454b90
  412934:	mov    BYTE PTR [rbx-0x1],al
  412937:	cmp    rbx,rbp
  41293a:	jne    0x412911
  41293c:	mov    rax,QWORD PTR [rsp+0x78]
  412941:	movsxd r12,r12d
  412944:	mov    rsi,QWORD PTR [rax]
  412947:	movsxd rbx,DWORD PTR [rax+0x8]
  41294b:	movsxd rax,DWORD PTR [rax+0xc]
  41294f:	mov    rdx,rsi
  412952:	sub    rdx,r12
  412955:	add    rbx,rsi
  412958:	lea    rdi,[rdx+rax*1+0x1]
  41295d:	cmp    rbx,rdi
  412960:	jae    0x4129b1
  412962:	xor    edx,edx
  412964:	test   r14d,r14d
  412967:	jle    0x412a02
  41296d:	nop    DWORD PTR [rax]
  412970:	movsx  ecx,BYTE PTR [r15+rdx*1]
  412975:	movsx  r8d,BYTE PTR [rbx+rdx*1]
  41297a:	cmp    ecx,r8d
  41297d:	mov    eax,ecx
  41297f:	je     0x412991
  412981:	test   r13,r13
  412984:	je     0x4129a4
  412986:	movsx  ecx,BYTE PTR [r13+rdx*1+0x0]
  41298c:	cmp    ecx,r8d
  41298f:	jne    0x4129a4
  412991:	lea    eax,[rdx+0x1]
  412994:	add    rdx,0x1
  412998:	cmp    r14d,edx
  41299b:	jg     0x412970
  41299d:	cdqe   
  41299f:	movzx  eax,BYTE PTR [r15+rax*1]
  4129a4:	test   al,al
  4129a6:	je     0x4129d4
  4129a8:	add    rbx,0x1
  4129ac:	cmp    rbx,rdi
  4129af:	jb     0x412962
  4129b1:	test   r13,r13
  4129b4:	je     0x4129be
  4129b6:	mov    rcx,r13
  4129b9:	call   0x43a748
  4129be:	mov    eax,0x1
  4129c3:	add    rsp,0x28
  4129c7:	pop    rbx
  4129c8:	pop    rsi
  4129c9:	pop    rdi
  4129ca:	pop    rbp
  4129cb:	pop    r12
  4129cd:	pop    r13
  4129cf:	pop    r14
  4129d1:	pop    r15
  4129d3:	ret    
  4129d4:	test   r13,r13
  4129d7:	je     0x4129e1
  4129d9:	mov    rcx,r13
  4129dc:	call   0x43a748
  4129e1:	mov    rax,QWORD PTR [rsp+0x78]
  4129e6:	add    r12,rbx
  4129e9:	test   BYTE PTR [rax+0x10],0x2
  4129ed:	mov    rax,QWORD PTR [rsp+0x80]
  4129f5:	cmovne rbx,r12
  4129f9:	sub    rbx,rsi
  4129fc:	mov    DWORD PTR [rax],ebx
  4129fe:	xor    eax,eax
  412a00:	jmp    0x4129c3
  412a02:	movzx  eax,BYTE PTR [r15]
  412a06:	jmp    0x4129a4
  412a08:	mov    rax,QWORD PTR [rsp+0x78]
  412a0d:	movsxd r12,r12d
  412a10:	xor    r13d,r13d
  412a13:	mov    rsi,QWORD PTR [rax]
  412a16:	movsxd rbx,DWORD PTR [rax+0x8]
  412a1a:	movsxd rax,DWORD PTR [rax+0xc]
  412a1e:	mov    rdx,rsi
  412a21:	sub    rdx,r12
  412a24:	add    rbx,rsi
  412a27:	lea    rdi,[rdx+rax*1+0x1]
  412a2c:	cmp    rbx,rdi
  412a2f:	jb     0x412962
  412a35:	jmp    0x4129be
  412a37:	nop    WORD PTR [rax+rax*1+0x0]
  412a40:	push   r15
  412a42:	push   r14
  412a44:	push   r13
  412a46:	push   r12
  412a48:	push   rbp
  412a49:	push   rdi
  412a4a:	push   rsi
  412a4b:	push   rbx
  412a4c:	sub    rsp,0x38
  412a50:	mov    rsi,rcx
  412a53:	mov    QWORD PTR [rsp+0x88],rdx
  412a5b:	mov    QWORD PTR [rsp+0x90],r8
  412a63:	call   0x43a620
  412a68:	lea    ecx,[rax+0x1]
  412a6b:	mov    rbx,rax
  412a6e:	mov    ebp,eax
  412a70:	lea    edi,[rbx-0x1]
  412a73:	movsxd rcx,ecx
  412a76:	call   0x4227b0
  412a7b:	movzx  edx,BYTE PTR [rsi]
  412a7e:	mov    r15,rax
  412a81:	test   dl,dl
  412a83:	je     0x412c85
  412a89:	movsxd rax,edi
  412a8c:	mov    r8d,0x1
  412a92:	add    rax,r15
  412a95:	jmp    0x412aa3
  412a97:	nop    WORD PTR [rax+rax*1+0x0]
  412aa0:	mov    r8,rcx
  412aa3:	mov    BYTE PTR [rax],dl
  412aa5:	movzx  edx,BYTE PTR [rsi+r8*1]
  412aaa:	sub    rax,0x1
  412aae:	lea    rcx,[r8+0x1]
  412ab2:	test   dl,dl
  412ab4:	jne    0x412aa0
  412ab6:	mov    rax,QWORD PTR [rsp+0x88]
  412abe:	mov    BYTE PTR [r15+r8*1],0x0
  412ac3:	test   BYTE PTR [rax+0x10],0x1
  412ac7:	je     0x412c3e
  412acd:	mov    rcx,r15
  412ad0:	call   0x422a00
  412ad5:	test   ebx,ebx
  412ad7:	mov    r13,rax
  412ada:	jle    0x412b2d
  412adc:	mov    edi,edi
  412ade:	mov    rsi,rax
  412ae1:	mov    r12,QWORD PTR [rip+0x41f88]        # 0x454a70
  412ae8:	lea    r14,[rax+rdi*1+0x1]
  412aed:	jmp    0x412b01
  412aef:	nop
  412af0:	call   QWORD PTR [rip+0x420a2]        # 0x454b98
  412af6:	mov    BYTE PTR [rsi],al
  412af8:	add    rsi,0x1
  412afc:	cmp    rsi,r14
  412aff:	je     0x412b2d
  412b01:	movsx  edi,BYTE PTR [rsi]
  412b04:	mov    ecx,edi
  412b06:	call   r12
  412b09:	test   eax,eax
  412b0b:	mov    ecx,edi
  412b0d:	jne    0x412af0
  412b0f:	call   QWORD PTR [rip+0x41f7b]        # 0x454a90
  412b15:	test   eax,eax
  412b17:	je     0x412af8
  412b19:	mov    ecx,edi
  412b1b:	add    rsi,0x1
  412b1f:	call   QWORD PTR [rip+0x4206b]        # 0x454b90
  412b25:	mov    BYTE PTR [rsi-0x1],al
  412b28:	cmp    rsi,r14
  412b2b:	jne    0x412b01
  412b2d:	mov    rax,QWORD PTR [rsp+0x88]
  412b35:	movsxd r10,ebx
  412b38:	mov    r12,QWORD PTR [rax]
  412b3b:	movsxd rax,DWORD PTR [rax+0x8]
  412b3f:	lea    rdi,[r12+rax*1-0x1]
  412b44:	mov    rax,QWORD PTR [rsp+0x88]
  412b4c:	movsxd r14,DWORD PTR [rax+0xc]
  412b50:	add    r14,r10
  412b53:	add    r14,r12
  412b56:	cmp    rdi,r14
  412b59:	jbe    0x412bb3
  412b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  412b60:	xor    edx,edx
  412b62:	xor    ecx,ecx
  412b64:	test   ebp,ebp
  412b66:	mov    rax,rdi
  412b69:	jle    0x412c35
  412b6f:	nop
  412b70:	movzx  r8d,BYTE PTR [r15+rdx*1]
  412b75:	movsx  r9d,BYTE PTR [rax]
  412b79:	cmp    r8b,BYTE PTR [rax]
  412b7c:	je     0x412b8e
  412b7e:	test   r13,r13
  412b81:	je     0x412ba5
  412b83:	movsx  r11d,BYTE PTR [r13+rdx*1+0x0]
  412b89:	cmp    r11d,r9d
  412b8c:	jne    0x412ba5
  412b8e:	add    ecx,0x1
  412b91:	add    rdx,0x1
  412b95:	sub    rax,0x1
  412b99:	cmp    ecx,ebx
  412b9b:	jne    0x412b70
  412b9d:	movsxd rax,ebx
  412ba0:	movzx  r8d,BYTE PTR [r15+rax*1]
  412ba5:	test   r8b,r8b
  412ba8:	je     0x412be6
  412baa:	sub    rdi,0x1
  412bae:	cmp    rdi,r14
  412bb1:	jne    0x412b60
  412bb3:	mov    rcx,r15
  412bb6:	call   0x43a748
  412bbb:	test   r13,r13
  412bbe:	mov    eax,0x1
  412bc3:	je     0x412bd5
  412bc5:	mov    rcx,r13
  412bc8:	mov    DWORD PTR [rsp+0x28],eax
  412bcc:	call   0x43a748
  412bd1:	mov    eax,DWORD PTR [rsp+0x28]
  412bd5:	add    rsp,0x38
  412bd9:	pop    rbx
  412bda:	pop    rsi
  412bdb:	pop    rdi
  412bdc:	pop    rbp
  412bdd:	pop    r12
  412bdf:	pop    r13
  412be1:	pop    r14
  412be3:	pop    r15
  412be5:	ret    
  412be6:	mov    rcx,r15
  412be9:	mov    QWORD PTR [rsp+0x28],r10
  412bee:	call   0x43a748
  412bf3:	test   r13,r13
  412bf6:	mov    r10,QWORD PTR [rsp+0x28]
  412bfb:	je     0x412c0a
  412bfd:	mov    rcx,r13
  412c00:	call   0x43a748
  412c05:	mov    r10,QWORD PTR [rsp+0x28]
  412c0a:	mov    rsi,QWORD PTR [rsp+0x88]
  412c12:	mov    rax,rdi
  412c15:	sub    rax,r10
  412c18:	test   BYTE PTR [rsi+0x10],0x2
  412c1c:	mov    rsi,QWORD PTR [rsp+0x90]
  412c24:	cmove  rax,rdi
  412c28:	add    rax,0x1
  412c2c:	sub    rax,r12
  412c2f:	mov    DWORD PTR [rsi],eax
  412c31:	xor    eax,eax
  412c33:	jmp    0x412bd5
  412c35:	movzx  r8d,BYTE PTR [r15]
  412c39:	jmp    0x412ba5
  412c3e:	mov    rax,QWORD PTR [rsp+0x88]
  412c46:	movsxd r10,ebx
  412c49:	xor    r13d,r13d
  412c4c:	mov    r12,QWORD PTR [rax]
  412c4f:	movsxd rax,DWORD PTR [rax+0x8]
  412c53:	lea    rdi,[r12+rax*1-0x1]
  412c58:	mov    rax,QWORD PTR [rsp+0x88]
  412c60:	movsxd r14,DWORD PTR [rax+0xc]
  412c64:	add    r14,r10
  412c67:	add    r14,r12
  412c6a:	cmp    rdi,r14
  412c6d:	ja     0x412b60
  412c73:	mov    rcx,r15
  412c76:	call   0x43a748
  412c7b:	mov    eax,0x1
  412c80:	jmp    0x412bd5
  412c85:	xor    r8d,r8d
  412c88:	jmp    0x412ab6
  412c8d:	nop    DWORD PTR [rax]
  412c90:	mov    eax,DWORD PTR [rdx+0xc]
  412c93:	cmp    DWORD PTR [rdx+0x8],eax
  412c96:	jg     0x412ca0
  412c98:	jmp    0x4128a0
  412c9d:	nop    DWORD PTR [rax]
  412ca0:	jmp    0x412a40
  412ca5:	nop
  412ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cb0:	sub    rsp,0x58
  412cb4:	movzx  eax,BYTE PTR [rdx]
  412cb7:	cmp    al,0xa
  412cb9:	je     0x412d21
  412cbb:	test   al,al
  412cbd:	je     0x412d21
  412cbf:	lea    rax,[rdx+0x1]
  412cc3:	xor    r9d,r9d
  412cc6:	jmp    0x412cd5
  412cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  412cd0:	test   r8b,r8b
  412cd3:	je     0x412ce7
  412cd5:	movzx  r8d,BYTE PTR [rax]
  412cd9:	add    r9d,0x1
  412cdd:	add    rax,0x1
  412ce1:	cmp    r8b,0xa
  412ce5:	jne    0x412cd0
  412ce7:	mov    QWORD PTR [rsp+0x30],rdx
  412cec:	lea    r8,[rsp+0x2c]
  412cf1:	lea    rdx,[rsp+0x30]
  412cf6:	mov    DWORD PTR [rsp+0x38],0x0
  412cfe:	mov    DWORD PTR [rsp+0x3c],r9d
  412d03:	mov    DWORD PTR [rsp+0x40],0x3
  412d0b:	call   0x4128a0
  412d10:	test   eax,eax
  412d12:	mov    eax,0xffffffff
  412d17:	cmove  eax,DWORD PTR [rsp+0x2c]
  412d1c:	add    rsp,0x58
  412d20:	ret    
  412d21:	xor    r9d,r9d
  412d24:	jmp    0x412ce7
  412d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d30:	push   rbx
  412d31:	sub    rsp,0x30
  412d35:	lea    r8,[rsp+0x2c]
  412d3a:	mov    rbx,rdx
  412d3d:	call   0x412c90
  412d42:	xor    ecx,ecx
  412d44:	test   eax,eax
  412d46:	jne    0x412d54
  412d48:	xor    ecx,ecx
  412d4a:	mov    eax,DWORD PTR [rsp+0x2c]
  412d4e:	cmp    DWORD PTR [rbx+0x8],eax
  412d51:	sete   cl
  412d54:	mov    eax,ecx
  412d56:	add    rsp,0x30
  412d5a:	pop    rbx
  412d5b:	ret    
  412d5c:	nop    DWORD PTR [rax+0x0]
  412d60:	push   rdi
  412d61:	push   rsi
  412d62:	push   rbx
  412d63:	sub    rsp,0x20
  412d67:	mov    rdi,rcx
  412d6a:	mov    rsi,rdx
  412d6d:	call   0x43a620
  412d72:	movsxd rbx,eax
  412d75:	mov    rdx,rdi
  412d78:	mov    rcx,rsi
  412d7b:	mov    r8,rbx
  412d7e:	call   QWORD PTR [rip+0x41c34]        # 0x4549b8
  412d84:	xor    r8d,r8d
  412d87:	test   eax,eax
  412d89:	jne    0x412db4
  412d8b:	add    rsi,rbx
  412d8e:	movzx  edx,BYTE PTR [rsi]
  412d91:	cmp    dl,0xa
  412d94:	je     0x412dc0
  412d96:	lea    rdi,[rip+0x31793]        # 0x444530
  412d9d:	mov    ecx,0x2
  412da2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  412da4:	sete   r8b
  412da8:	test   dl,dl
  412daa:	sete   al
  412dad:	or     r8d,eax
  412db0:	movzx  r8d,r8b
  412db4:	mov    eax,r8d
  412db7:	add    rsp,0x20
  412dbb:	pop    rbx
  412dbc:	pop    rsi
  412dbd:	pop    rdi
  412dbe:	ret    
  412dbf:	nop
  412dc0:	mov    r8d,0x1
  412dc6:	mov    eax,r8d
  412dc9:	add    rsp,0x20
  412dcd:	pop    rbx
  412dce:	pop    rsi
  412dcf:	pop    rdi
  412dd0:	ret    
  412dd1:	nop    DWORD PTR [rax+rax*1+0x0]
  412dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412de0:	test   rcx,rcx
  412de3:	je     0x412e16
  412de5:	movzx  eax,BYTE PTR [rcx]
  412de8:	cmp    al,0x9
  412dea:	je     0x412df0
  412dec:	cmp    al,0x20
  412dee:	jne    0x412e16
  412df0:	add    rcx,0x1
  412df4:	mov    eax,0x1
  412df9:	jmp    0x412e03
  412dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  412e00:	add    eax,0x1
  412e03:	movzx  edx,BYTE PTR [rcx]
  412e06:	add    rcx,0x1
  412e0a:	cmp    dl,0x9
  412e0d:	je     0x412e00
  412e0f:	cmp    dl,0x20
  412e12:	je     0x412e00
  412e14:	repz ret 
  412e16:	xor    eax,eax
  412e18:	ret    
  412e19:	nop    DWORD PTR [rax+0x0]
  412e20:	test   rcx,rcx
  412e23:	je     0x412e77
  412e25:	movzx  eax,BYTE PTR [rcx]
  412e28:	cmp    al,0xd
  412e2a:	sete   r8b
  412e2e:	cmp    al,0x20
  412e30:	sete   dl
  412e33:	or     r8b,dl
  412e36:	jne    0x412e3f
  412e38:	sub    eax,0x9
  412e3b:	cmp    al,0x1
  412e3d:	ja     0x412e77
  412e3f:	add    rcx,0x1
  412e43:	mov    eax,0x1
  412e48:	jmp    0x412e53
  412e4a:	nop    WORD PTR [rax+rax*1+0x0]
  412e50:	add    eax,0x1
  412e53:	movzx  edx,BYTE PTR [rcx]
  412e56:	add    rcx,0x1
  412e5a:	cmp    dl,0xd
  412e5d:	sete   r9b
  412e61:	cmp    dl,0x20
  412e64:	sete   r8b
  412e68:	or     r9b,r8b
  412e6b:	jne    0x412e50
  412e6d:	sub    edx,0x9
  412e70:	cmp    dl,0x1
  412e73:	jbe    0x412e50
  412e75:	repz ret 
  412e77:	xor    eax,eax
  412e79:	ret    
  412e7a:	nop    WORD PTR [rax+rax*1+0x0]
  412e80:	test   rcx,rcx
  412e83:	je     0x412ec2
  412e85:	movzx  eax,BYTE PTR [rcx]
  412e88:	test   al,0xdf
  412e8a:	je     0x412ec2
  412e8c:	cmp    al,0x9
  412e8e:	je     0x412ec2
  412e90:	add    rcx,0x1
  412e94:	mov    eax,0x1
  412e99:	jmp    0x412eac
  412e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  412ea0:	add    rcx,0x1
  412ea4:	cmp    dl,0x9
  412ea7:	je     0x412ec0
  412ea9:	add    eax,0x1
  412eac:	movzx  edx,BYTE PTR [rcx]
  412eaf:	test   dl,0xdf
  412eb2:	jne    0x412ea0
  412eb4:	repz ret 
  412eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ec0:	repz ret 
  412ec2:	xor    eax,eax
  412ec4:	ret    
  412ec5:	nop
  412ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ed0:	push   rbx
  412ed1:	movsxd rdx,DWORD PTR [rcx+0x8]
  412ed5:	mov    r9d,DWORD PTR [rcx+0xc]
  412ed9:	xor    r8d,r8d
  412edc:	mov    rbx,QWORD PTR [rcx]
  412edf:	cmp    edx,r9d
  412ee2:	mov    rax,rdx
  412ee5:	setl   r8b
  412ee9:	add    rdx,rbx
  412eec:	lea    r8d,[r8+r8*1-0x1]
  412ef1:	movsxd r10,r8d
  412ef4:	jmp    0x412f0b
  412ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f00:	add    rdx,r10
  412f03:	cmp    eax,r9d
  412f06:	je     0x412f50
  412f08:	add    eax,r8d
  412f0b:	cmp    BYTE PTR [rdx],0x1f
  412f0e:	jne    0x412f00
  412f10:	movzx  ecx,BYTE PTR [rdx+0x1]
  412f14:	lea    r11d,[rax+0x1]
  412f18:	cmp    cl,0xc
  412f1b:	je     0x412f40
  412f1d:	cmp    cl,0xd
  412f20:	je     0x412f30
  412f22:	cmp    cl,0xa
  412f25:	jne    0x412f00
  412f27:	pop    rbx
  412f28:	ret    
  412f29:	nop    DWORD PTR [rax+0x0]
  412f30:	add    r11d,0x1
  412f34:	movsxd r11,r11d
  412f37:	movzx  ecx,BYTE PTR [rbx+r11*1]
  412f3c:	jmp    0x412f22
  412f3e:	xchg   ax,ax
  412f40:	lea    r11d,[rax+0x2]
  412f44:	movzx  ecx,BYTE PTR [rdx+0x2]
  412f48:	jmp    0x412f1d
  412f4a:	nop    WORD PTR [rax+rax*1+0x0]
  412f50:	mov    eax,0xffffffff
  412f55:	pop    rbx
  412f56:	ret    
  412f57:	nop    WORD PTR [rax+rax*1+0x0]
  412f60:	cmp    BYTE PTR [rcx],0xc
  412f63:	sete   dl
  412f66:	xor    eax,eax
  412f68:	movzx  r8d,dl
  412f6c:	cmp    BYTE PTR [rcx+r8*1],0x1f
  412f71:	je     0x412f75
  412f73:	repz ret 
  412f75:	movzx  edx,dl
  412f78:	lea    r8d,[rdx+0x1]
  412f7c:	movsxd rax,r8d
  412f7f:	movzx  r9d,BYTE PTR [rcx+rax*1]
  412f84:	cmp    r9b,0xc
  412f88:	je     0x412fa0
  412f8a:	cmp    r9b,0xd
  412f8e:	je     0x412fb2
  412f90:	add    r8d,0x1
  412f94:	xor    eax,eax
  412f96:	cmp    r9b,0xa
  412f9a:	cmove  eax,r8d
  412f9e:	ret    
  412f9f:	nop
  412fa0:	lea    r8d,[rdx+0x2]
  412fa4:	movsxd rax,r8d
  412fa7:	movzx  r9d,BYTE PTR [rcx+rax*1]
  412fac:	cmp    r9b,0xd
  412fb0:	jne    0x412f90
  412fb2:	add    r8d,0x1
  412fb6:	movsxd rax,r8d
  412fb9:	movzx  r9d,BYTE PTR [rcx+rax*1]
  412fbe:	jmp    0x412f90
  412fc0:	test   rcx,rcx
  412fc3:	je     0x412fff
  412fc5:	movzx  edx,BYTE PTR [rcx]
  412fc8:	test   dl,dl
  412fca:	je     0x41300b
  412fcc:	cmp    dl,0xa
  412fcf:	je     0x41300b
  412fd1:	add    rcx,0x1
  412fd5:	mov    eax,0x1
  412fda:	jmp    0x412fe8
  412fdc:	nop    DWORD PTR [rax+0x0]
  412fe0:	cmp    dl,0xa
  412fe3:	je     0x412ff3
  412fe5:	add    eax,0x1
  412fe8:	movzx  edx,BYTE PTR [rcx]
  412feb:	add    rcx,0x1
  412fef:	test   dl,dl
  412ff1:	jne    0x412fe0
  412ff3:	cmp    dl,0xa
  412ff6:	sete   dl
  412ff9:	movzx  edx,dl
  412ffc:	add    eax,edx
  412ffe:	ret    
  412fff:	movzx  edx,BYTE PTR ds:0x0
  413007:	xor    eax,eax
  413009:	jmp    0x412ff3
  41300b:	xor    eax,eax
  41300d:	jmp    0x412ff3
  41300f:	nop
  413010:	push   r13
  413012:	push   r12
  413014:	push   rbp
  413015:	push   rdi
  413016:	push   rsi
  413017:	push   rbx
  413018:	sub    rsp,0x48
  41301c:	mov    rax,QWORD PTR [rcx]
  41301f:	xor    edi,edi
  413021:	mov    r12,rdx
  413024:	mov    edx,DWORD PTR [rcx+0x8]
  413027:	lea    rbp,[rsp+0x20]
  41302c:	mov    DWORD PTR [rsp+0x30],0x1
  413034:	mov    QWORD PTR [rsp+0x20],rax
  413039:	mov    eax,DWORD PTR [rcx+0xc]
  41303c:	mov    DWORD PTR [rsp+0x28],edx
  413040:	cmp    edx,eax
  413042:	mov    DWORD PTR [rsp+0x2c],eax
  413046:	setl   dil
  41304a:	lea    edi,[rdi+rdi*1-0x1]
  41304e:	xchg   ax,ax
  413050:	mov    rcx,rbp
  413053:	call   0x412ed0
  413058:	cmp    eax,0xffffffff
  41305b:	mov    esi,eax
  41305d:	je     0x413095
  41305f:	mov    r13,QWORD PTR [rsp+0x20]
  413064:	movsxd rcx,esi
  413067:	add    rcx,r13
  41306a:	call   0x412f60
  41306f:	lea    ebx,[rsi+rax*1]
  413072:	mov    rcx,r12
  413075:	movsxd rax,ebx
  413078:	lea    rdx,[r13+rax*1+0x0]
  41307d:	call   0x412d60
  413082:	test   eax,eax
  413084:	jne    0x4130c0
  413086:	cmp    edi,0x1
  413089:	jne    0x4130b0
  41308b:	cmp    ebx,DWORD PTR [rsp+0x2c]
  41308f:	mov    DWORD PTR [rsp+0x28],ebx
  413093:	jl     0x413050
  413095:	mov    eax,0xffffffff
  41309a:	add    rsp,0x48
  41309e:	pop    rbx
  41309f:	pop    rsi
  4130a0:	pop    rdi
  4130a1:	pop    rbp
  4130a2:	pop    r12
  4130a4:	pop    r13
  4130a6:	ret    
  4130a7:	nop    WORD PTR [rax+rax*1+0x0]
  4130b0:	sub    esi,0x1
  4130b3:	cmp    esi,DWORD PTR [rsp+0x2c]
  4130b7:	mov    DWORD PTR [rsp+0x28],esi
  4130bb:	jg     0x413050
  4130bd:	jmp    0x413095
  4130bf:	nop
  4130c0:	mov    eax,esi
  4130c2:	add    rsp,0x48
  4130c6:	pop    rbx
  4130c7:	pop    rsi
  4130c8:	pop    rdi
  4130c9:	pop    rbp
  4130ca:	pop    r12
  4130cc:	pop    r13
  4130ce:	ret    
  4130cf:	nop
  4130d0:	push   r13
  4130d2:	push   r12
  4130d4:	push   rbp
  4130d5:	push   rdi
  4130d6:	push   rsi
  4130d7:	push   rbx
  4130d8:	sub    rsp,0x58
  4130dc:	mov    rax,QWORD PTR [rdx]
  4130df:	lea    rsi,[rsp+0x30]
  4130e4:	lea    rdi,[rsp+0x28]
  4130e9:	mov    rbp,rcx
  4130ec:	mov    DWORD PTR [rsp+0x40],0x0
  4130f4:	mov    QWORD PTR [rsp+0x30],rax
  4130f9:	mov    eax,DWORD PTR [rdx+0x8]
  4130fc:	mov    DWORD PTR [rsp+0x38],eax
  413100:	mov    eax,DWORD PTR [rdx+0xc]
  413103:	mov    DWORD PTR [rsp+0x3c],eax
  413107:	nop    WORD PTR [rax+rax*1+0x0]
  413110:	mov    rcx,rsi
  413113:	call   0x412ed0
  413118:	cmp    eax,0xffffffff
  41311b:	mov    ebx,eax
  41311d:	je     0x4131ef
  413123:	mov    r12,QWORD PTR [rsp+0x30]
  413128:	movsxd rcx,ebx
  41312b:	mov    DWORD PTR [rsp+0x38],ebx
  41312f:	add    rcx,r12
  413132:	call   0x412f60
  413137:	add    eax,ebx
  413139:	lea    rcx,[rip+0x313f3]        # 0x444533
  413140:	mov    DWORD PTR [rsp+0x38],eax
  413144:	cdqe   
  413146:	lea    rdx,[r12+rax*1]
  41314a:	call   0x412cb0
  41314f:	cmp    eax,0xffffffff
  413152:	je     0x413110
  413154:	add    eax,DWORD PTR [rsp+0x38]
  413158:	mov    rcx,QWORD PTR [rsp+0x30]
  41315d:	movsxd r8,eax
  413160:	mov    DWORD PTR [rsp+0x38],eax
  413164:	add    r8,rcx
  413167:	je     0x4131fe
  41316d:	movzx  edx,BYTE PTR [r8]
  413171:	cmp    dl,0x9
  413174:	je     0x41317f
  413176:	cmp    dl,0x20
  413179:	jne    0x4131fe
  41317f:	add    r8,0x1
  413183:	mov    r10d,0x1
  413189:	jmp    0x413194
  41318b:	nop    DWORD PTR [rax+rax*1+0x0]
  413190:	add    r10d,0x1
  413194:	movzx  edx,BYTE PTR [r8]
  413198:	add    r8,0x1
  41319c:	cmp    dl,0x9
  41319f:	je     0x413190
  4131a1:	cmp    dl,0x20
  4131a4:	je     0x413190
  4131a6:	add    r10d,eax
  4131a9:	lea    rdx,[rip+0x31389]        # 0x444539
  4131b0:	xor    r8d,r8d
  4131b3:	mov    DWORD PTR [rsp+0x38],r10d
  4131b8:	movsxd r10,r10d
  4131bb:	mov    r9,rdi
  4131be:	add    rcx,r10
  4131c1:	call   0x408ec0
  4131c6:	mov    r12,QWORD PTR [rsp+0x28]
  4131cb:	test   r12,r12
  4131ce:	je     0x413203
  4131d0:	mov    rdx,rbp
  4131d3:	mov    rcx,r12
  4131d6:	call   0x43a648
  4131db:	mov    rcx,r12
  4131de:	mov    r13d,eax
  4131e1:	call   0x43a748
  4131e6:	test   r13d,r13d
  4131e9:	jne    0x413110
  4131ef:	mov    eax,ebx
  4131f1:	add    rsp,0x58
  4131f5:	pop    rbx
  4131f6:	pop    rsi
  4131f7:	pop    rdi
  4131f8:	pop    rbp
  4131f9:	pop    r12
  4131fb:	pop    r13
  4131fd:	ret    
  4131fe:	xor    r10d,r10d
  413201:	jmp    0x4131a6
  413203:	mov    eax,0xffffffff
  413208:	add    rsp,0x58
  41320c:	pop    rbx
  41320d:	pop    rsi
  41320e:	pop    rdi
  41320f:	pop    rbp
  413210:	pop    r12
  413212:	pop    r13
  413214:	ret    
  413215:	nop
  413216:	nop
  413217:	nop
  413218:	nop
  413219:	nop
  41321a:	nop
  41321b:	nop
  41321c:	nop
  41321d:	nop
  41321e:	nop
  41321f:	nop
  413220:	mov    rax,QWORD PTR [rcx+0x20]
  413224:	mov    r9,QWORD PTR [rax+0x30]
  413228:	test   r9,r9
  41322b:	je     0x413298
  41322d:	movzx  edx,dl
  413230:	mov    rax,QWORD PTR [r9]
  413233:	sub    edx,0x30
  413236:	jne    0x413265
  413238:	test   rax,rax
  41323b:	je     0x41329a
  41323d:	xor    edx,edx
  41323f:	mov    ecx,0xffffffff
  413244:	cmp    DWORD PTR [rax+0x24],0x1
  413248:	cmove  ecx,edx
  41324b:	add    rdx,0x1
  41324f:	mov    rax,QWORD PTR [r9+rdx*8]
  413253:	test   rax,rax
  413256:	jne    0x413244
  413258:	cmp    ecx,0xffffffff
  41325b:	je     0x41329a
  41325d:	movsxd rcx,ecx
  413260:	mov    rax,QWORD PTR [r9+rcx*8]
  413264:	ret    
  413265:	xor    ecx,ecx
  413267:	xor    r8d,r8d
  41326a:	test   rax,rax
  41326d:	jne    0x41327e
  41326f:	jmp    0x4132a2
  413271:	add    rcx,0x1
  413275:	mov    rax,QWORD PTR [r9+rcx*8]
  413279:	test   rax,rax
  41327c:	je     0x4132a0
  41327e:	cmp    DWORD PTR [rax+0x24],0x1
  413282:	movsxd r10,ecx
  413285:	sete   al
  413288:	movzx  eax,al
  41328b:	add    r8d,eax
  41328e:	cmp    r8d,edx
  413291:	jne    0x413271
  413293:	mov    rax,QWORD PTR [r9+r10*8]
  413297:	ret    
  413298:	xor    eax,eax
  41329a:	repz ret 
  41329c:	nop    DWORD PTR [rax+0x0]
  4132a0:	repz ret 
  4132a2:	repz ret 
  4132a4:	xchg   ax,ax
  4132a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132b0:	ret    
  4132b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4132b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132c0:	mov    edx,DWORD PTR [rcx+0x24]
  4132c3:	xor    eax,eax
  4132c5:	test   edx,edx
  4132c7:	sete   al
  4132ca:	ret    
  4132cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4132d0:	xor    eax,eax
  4132d2:	cmp    DWORD PTR [rcx+0x24],0x1
  4132d6:	sete   al
  4132d9:	ret    
  4132da:	nop    WORD PTR [rax+rax*1+0x0]
  4132e0:	mov    eax,0x1
  4132e5:	ret    
  4132e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132f0:	ret    
  4132f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4132f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413300:	ret    
  413301:	nop    DWORD PTR [rax+rax*1+0x0]
  413306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413310:	ret    
  413311:	nop    DWORD PTR [rax+rax*1+0x0]
  413316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413320:	mov    rcx,QWORD PTR [rip+0x3e399]        # 0x4516c0
  413327:	jmp    0x43a788
  41332c:	nop    DWORD PTR [rax+0x0]
  413330:	push   r13
  413332:	push   r12
  413334:	push   rbp
  413335:	push   rdi
  413336:	push   rsi
  413337:	push   rbx
  413338:	sub    rsp,0x228
  41333f:	mov    r12d,ecx
  413342:	mov    rcx,QWORD PTR [rip+0x3e5d7]        # 0x451920
  413349:	call   0x43a578
  41334e:	mov    edi,eax
  413350:	call   QWORD PTR [rip+0x415ea]        # 0x454940
  413356:	test   r12d,r12d
  413359:	mov    DWORD PTR [rax],0x0
  41335f:	mov    edx,DWORD PTR [rip+0x3e59f]        # 0x451904
  413365:	mov    eax,DWORD PTR [rip+0x3e595]        # 0x451900
  41336b:	je     0x413375
  41336d:	cmp    edx,eax
  41336f:	je     0x413466
  413375:	cmp    edx,eax
  413377:	jle    0x4133b4
  413379:	mov    ebx,edx
  41337b:	sub    ebx,eax
  41337d:	mov    ecx,edi
  41337f:	mov    esi,0x1
  413384:	call   0x41e0b0
  413389:	cmp    eax,ebx
  41338b:	cmovle ebx,eax
  41338e:	movsxd r8,ebx
  413391:	test   r8d,r8d
  413394:	jne    0x4133be
  413396:	test   r12d,r12d
  413399:	sete   al
  41339c:	and    eax,esi
  41339e:	xor    eax,0x1
  4133a1:	movzx  eax,al
  4133a4:	add    rsp,0x228
  4133ab:	pop    rbx
  4133ac:	pop    rsi
  4133ad:	pop    rdi
  4133ae:	pop    rbp
  4133af:	pop    r12
  4133b1:	pop    r13
  4133b3:	ret    
  4133b4:	sub    edx,eax
  4133b6:	lea    ebx,[rdx+0x200]
  4133bc:	jmp    0x41337d
  4133be:	lea    rbx,[rsp+0x20]
  4133c3:	mov    ecx,edi
  4133c5:	mov    rdx,rbx
  4133c8:	call   0x41e220
  4133cd:	test   eax,eax
  4133cf:	jle    0x413396
  4133d1:	sub    eax,0x1
  4133d4:	mov    rsi,QWORD PTR [rip+0x36555]        # 0x449930
  4133db:	mov    rdi,QWORD PTR [rip+0x417b6]        # 0x454b98
  4133e2:	lea    rbp,[rbx+rax*1+0x1]
  4133e7:	jmp    0x413426
  4133e9:	nop    DWORD PTR [rax+0x0]
  4133f0:	movsxd rax,DWORD PTR [rip+0x3e509]        # 0x451900
  4133f7:	lea    rcx,[rip+0x3e302]        # 0x451700
  4133fe:	lea    edx,[rax+0x1]
  413401:	mov    BYTE PTR [rcx+rax*1],r13b
  413405:	cmp    edx,0x1ff
  41340b:	mov    DWORD PTR [rip+0x3e4ef],edx        # 0x451900
  413411:	jle    0x41341d
  413413:	mov    DWORD PTR [rip+0x3e4e3],0x0        # 0x451900
  41341d:	add    rbx,0x1
  413421:	cmp    rbx,rbp
  413424:	je     0x41345f
  413426:	cmp    QWORD PTR [rsi],0x0
  41342a:	je     0x413434
  41342c:	movzx  ecx,BYTE PTR [rbx]
  41342f:	call   0x404670
  413434:	movzx  r13d,BYTE PTR [rbx]
  413438:	mov    ecx,0x67
  41343d:	call   rdi
  41343f:	and    eax,0xffffffbf
  413442:	movzx  edx,r13b
  413446:	cmp    edx,eax
  413448:	jne    0x4133f0
  41344a:	mov    eax,DWORD PTR [rip+0x3e4b4]        # 0x451904
  413450:	add    rbx,0x1
  413454:	cmp    rbx,rbp
  413457:	mov    DWORD PTR [rip+0x3e4a3],eax        # 0x451900
  41345d:	jne    0x413426
  41345f:	xor    esi,esi
  413461:	jmp    0x413396
  413466:	lea    rdx,[rsp+0x20]
  41346b:	mov    r8d,0x1
  413471:	mov    ecx,edi
  413473:	call   0x41e220
  413478:	test   rax,rax
  41347b:	jle    0x4134d3
  41347d:	mov    rsi,QWORD PTR [rip+0x364ac]        # 0x449930
  413484:	cmp    QWORD PTR [rsi],0x0
  413488:	je     0x413494
  41348a:	movzx  ecx,BYTE PTR [rsp+0x20]
  41348f:	call   0x404670
  413494:	movsxd rdx,DWORD PTR [rip+0x3e465]        # 0x451900
  41349b:	movzx  r8d,BYTE PTR [rsp+0x20]
  4134a1:	lea    rcx,[rip+0x3e258]        # 0x451700
  4134a8:	lea    eax,[rdx+0x1]
  4134ab:	mov    BYTE PTR [rcx+rdx*1],r8b
  4134af:	cmp    eax,0x1ff
  4134b4:	mov    DWORD PTR [rip+0x3e446],eax        # 0x451900
  4134ba:	jle    0x4134c8
  4134bc:	mov    DWORD PTR [rip+0x3e43a],0x0        # 0x451900
  4134c6:	xor    eax,eax
  4134c8:	mov    edx,DWORD PTR [rip+0x3e436]        # 0x451904
  4134ce:	jmp    0x413375
  4134d3:	xor    eax,eax
  4134d5:	jmp    0x4133a4
  4134da:	nop    WORD PTR [rax+rax*1+0x0]
  4134e0:	push   r12
  4134e2:	push   rbp
  4134e3:	push   rdi
  4134e4:	push   rsi
  4134e5:	push   rbx
  4134e6:	sub    rsp,0x20
  4134ea:	mov    rsi,rcx
  4134ed:	mov    ecx,0x28
  4134f2:	mov    r12d,edx
  4134f5:	mov    ebp,r8d
  4134f8:	mov    edi,r9d
  4134fb:	call   0x4227b0
  413500:	mov    rbx,rax
  413503:	mov    rax,QWORD PTR [rsi+0x20]
  413507:	mov    ecx,DWORD PTR [rsi+0x28]
  41350a:	mov    edx,DWORD PTR [rsi+0x2c]
  41350d:	mov    r8,QWORD PTR [rax]
  413510:	mov    rax,QWORD PTR [rax+0x10]
  413514:	mov    DWORD PTR [rbx+0x10],ecx
  413517:	mov    rcx,QWORD PTR [rip+0x3e15a]        # 0x451678
  41351e:	mov    DWORD PTR [rbx+0x14],edx
  413521:	mov    rdx,QWORD PTR [rip+0x3e148]        # 0x451670
  413528:	mov    QWORD PTR [rbx+0x8],rax
  41352c:	mov    eax,DWORD PTR [rsp+0x70]
  413530:	mov    QWORD PTR [rbx],r8
  413533:	mov    DWORD PTR [rbx+0x1c],r12d
  413537:	mov    DWORD PTR [rbx+0x20],ebp
  41353a:	mov    DWORD PTR [rbx+0x24],edi
  41353d:	mov    DWORD PTR [rbx+0x18],eax
  413540:	lea    rax,[rcx+0x2]
  413544:	cmp    rax,rdx
  413547:	jb     0x4135c0
  413549:	test   rdx,rdx
  41354c:	mov    rcx,QWORD PTR [rip+0x3e12d]        # 0x451680
  413553:	je     0x4135b5
  413555:	test   rcx,rcx
  413558:	je     0x413574
  41355a:	movabs rax,0x1555555555555554
  413564:	cmp    rdx,rax
  413567:	ja     0x4135d7
  413569:	mov    rax,rdx
  41356c:	shr    rax,1
  41356f:	lea    rdx,[rdx+rax*1+0x1]
  413574:	mov    QWORD PTR [rip+0x3e0f5],rdx        # 0x451670
  41357b:	shl    rdx,0x3
  41357f:	call   0x422820
  413584:	mov    rcx,QWORD PTR [rip+0x3e0ed]        # 0x451678
  41358b:	mov    QWORD PTR [rip+0x3e0ee],rax        # 0x451680
  413592:	lea    rdx,[rcx+0x1]
  413596:	mov    QWORD PTR [rax+rcx*8],rbx
  41359a:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  4135a3:	mov    QWORD PTR [rip+0x3e0ce],rdx        # 0x451678
  4135aa:	add    rsp,0x20
  4135ae:	pop    rbx
  4135af:	pop    rsi
  4135b0:	pop    rdi
  4135b1:	pop    rbp
  4135b2:	pop    r12
  4135b4:	ret    
  4135b5:	test   rcx,rcx
  4135b8:	je     0x4135d0
  4135ba:	mov    dl,0x14
  4135bc:	jmp    0x413569
  4135be:	xchg   ax,ax
  4135c0:	mov    rax,QWORD PTR [rip+0x3e0b9]        # 0x451680
  4135c7:	jmp    0x413592
  4135c9:	nop    DWORD PTR [rax+0x0]
  4135d0:	mov    edx,0x14
  4135d5:	jmp    0x413574
  4135d7:	call   0x422a20
  4135dc:	nop
  4135dd:	nop    DWORD PTR [rax]
  4135e0:	push   rsi
  4135e1:	push   rbx
  4135e2:	sub    rsp,0x28
  4135e6:	mov    eax,DWORD PTR [rip+0x2b558]        # 0x43eb44
  4135ec:	mov    rbx,rcx
  4135ef:	test   eax,eax
  4135f1:	je     0x41361f
  4135f3:	mov    esi,DWORD PTR [rcx+0x28]
  4135f6:	call   0x4204c0
  4135fb:	mov    edx,DWORD PTR [rbx+0x28]
  4135fe:	cmp    eax,edx
  413600:	jl     0x413650
  413602:	add    edx,DWORD PTR [rbx+0x14]
  413605:	mov    ecx,DWORD PTR [rip+0x2b539]        # 0x43eb44
  41360b:	add    ecx,esi
  41360d:	cmp    eax,edx
  41360f:	cmovge esi,ecx
  413612:	cmp    esi,eax
  413614:	jg     0x41361f
  413616:	mov    edx,DWORD PTR [rbx+0x14]
  413619:	add    edx,esi
  41361b:	cmp    eax,edx
  41361d:	jl     0x413660
  41361f:	mov    rcx,rbx
  413622:	call   0x420630
  413627:	test   BYTE PTR [rbx+0x80],0x1
  41362e:	je     0x413638
  413630:	mov    rcx,rbx
  413633:	call   0x403da0
  413638:	mov    rcx,rbx
  41363b:	add    rsp,0x28
  41363f:	pop    rbx
  413640:	pop    rsi
  413641:	jmp    0x4045a0
  413646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413650:	sub    esi,DWORD PTR [rip+0x2b4ee]        # 0x43eb44
  413656:	jmp    0x413612
  413658:	nop    DWORD PTR [rax+rax*1+0x0]
  413660:	mov    edx,esi
  413662:	mov    rcx,rbx
  413665:	call   0x420550
  41366a:	jmp    0x413627
  41366c:	nop    DWORD PTR [rax+0x0]
  413670:	movsxd rdx,DWORD PTR [rcx+0x1c]
  413674:	mov    rax,QWORD PTR [rcx+0x48]
  413678:	cmp    rdx,rax
  41367b:	jb     0x413683
  41367d:	sub    eax,0x1
  413680:	movsxd rdx,eax
  413683:	mov    rax,QWORD PTR [rcx+0x50]
  413687:	mov    eax,DWORD PTR [rax+rdx*4]
  41368a:	mov    DWORD PTR [rcx+0x2c],eax
  41368d:	jmp    0x4135e0
  413692:	nop    DWORD PTR [rax+0x0]
  413696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4136a0:	push   r15
  4136a2:	push   r14
  4136a4:	push   r13
  4136a6:	push   r12
  4136a8:	push   rbp
  4136a9:	push   rdi
  4136aa:	push   rsi
  4136ab:	push   rbx
  4136ac:	sub    rsp,0x28
  4136b0:	mov    r15,QWORD PTR [rip+0x362b9]        # 0x449970
  4136b7:	mov    edx,0x4
  4136bc:	mov    rcx,QWORD PTR [r15]
  4136bf:	call   0x422990
  4136c4:	mov    r13,rax
  4136c7:	mov    rax,QWORD PTR [rip+0x36542]        # 0x449c10
  4136ce:	mov    rsi,QWORD PTR [r15]
  4136d1:	mov    r14,QWORD PTR [rax]
  4136d4:	test   r14,r14
  4136d7:	je     0x413779
  4136dd:	mov    rax,QWORD PTR [rip+0x3627c]        # 0x449960
  4136e4:	mov    rdi,QWORD PTR [rax]
  4136e7:	mov    r12,QWORD PTR [r14+0xa8]
  4136ee:	test   r12,r12
  4136f1:	je     0x41376d
  4136f3:	mov    rax,QWORD PTR [r12]
  4136f7:	test   rax,rax
  4136fa:	je     0x41376d
  4136fc:	add    r12,0x8
  413700:	test   rsi,rsi
  413703:	mov    rbp,QWORD PTR [rax]
  413706:	je     0x41375f
  413708:	xor    ebx,ebx
  41370a:	jmp    0x41372f
  41370c:	nop    DWORD PTR [rax+0x0]
  413710:	mov    rdx,QWORD PTR [rbp+0x8]
  413714:	test   rdx,rdx
  413717:	je     0x413726
  413719:	mov    rcx,QWORD PTR [rax+0x8]
  41371d:	call   0x4213b0
  413722:	test   eax,eax
  413724:	je     0x413756
  413726:	add    rbx,0x1
  41372a:	cmp    rbx,rsi
  41372d:	je     0x41375f
  41372f:	mov    rax,QWORD PTR [rdi+rbx*8]
  413733:	mov    edx,DWORD PTR [rax+0x68]
  413736:	test   dh,0x8
  413739:	jne    0x413710
  41373b:	and    edx,0x2
  41373e:	jne    0x413726
  413740:	mov    rdx,QWORD PTR [rbp+0x0]
  413744:	test   rdx,rdx
  413747:	je     0x413726
  413749:	mov    rcx,QWORD PTR [rax+0x8]
  41374d:	call   0x4213b0
  413752:	test   eax,eax
  413754:	jne    0x413726
  413756:	mov    DWORD PTR [r13+rbx*4+0x0],0x1
  41375f:	add    r12,0x8
  413763:	mov    rax,QWORD PTR [r12-0x8]
  413768:	test   rax,rax
  41376b:	jne    0x413700
  41376d:	mov    r14,QWORD PTR [r14]
  413770:	test   r14,r14
  413773:	jne    0x4136e7
  413779:	xor    ebx,ebx
  41377b:	test   rsi,rsi
  41377e:	mov    rdi,QWORD PTR [rip+0x361db]        # 0x449960
  413785:	je     0x4137c5
  413787:	mov    ecx,DWORD PTR [r13+rbx*4+0x0]
  41378c:	test   ecx,ecx
  41378e:	jne    0x4137bc
  413790:	mov    rax,QWORD PTR [rdi]
  413793:	mov    rsi,QWORD PTR [rax+rbx*8]
  413797:	mov    eax,DWORD PTR [rsi+0x68]
  41379a:	test   al,0x2
  41379c:	jne    0x4137bc
  41379e:	mov    rcx,QWORD PTR [rsi+0x40]
  4137a2:	test   rcx,rcx
  4137a5:	je     0x4137bc
  4137a7:	test   al,0x8
  4137a9:	je     0x4137b5
  4137ab:	mov    edx,DWORD PTR [rip+0x3de9b]        # 0x45164c
  4137b1:	test   edx,edx
  4137b3:	je     0x4137bc
  4137b5:	test   eax,0x2020
  4137ba:	je     0x4137dd
  4137bc:	add    rbx,0x1
  4137c0:	cmp    QWORD PTR [r15],rbx
  4137c3:	ja     0x413787
  4137c5:	mov    rcx,r13
  4137c8:	add    rsp,0x28
  4137cc:	pop    rbx
  4137cd:	pop    rsi
  4137ce:	pop    rdi
  4137cf:	pop    rbp
  4137d0:	pop    r12
  4137d2:	pop    r13
  4137d4:	pop    r14
  4137d6:	pop    r15
  4137d8:	jmp    0x43a748
  4137dd:	call   0x43a748
  4137e2:	mov    rdx,QWORD PTR [rsi+0x58]
  4137e6:	mov    QWORD PTR [rsi+0x40],0x0
  4137ee:	test   rdx,rdx
  4137f1:	je     0x4137bc
  4137f3:	mov    rax,QWORD PTR [rdx]
  4137f6:	test   rax,rax
  4137f9:	je     0x4137bc
  4137fb:	test   BYTE PTR [rax+0x4d],0x1
  4137ff:	jne    0x413809
  413801:	mov    QWORD PTR [rax+0x38],0x0
  413809:	add    rdx,0x8
  41380d:	mov    rax,QWORD PTR [rdx]
  413810:	test   rax,rax
  413813:	jne    0x4137fb
  413815:	jmp    0x4137bc
  413817:	nop    WORD PTR [rax+rax*1+0x0]
  413820:	push   r15
  413822:	push   r14
  413824:	push   r13
  413826:	push   r12
  413828:	push   rbp
  413829:	push   rdi
  41382a:	push   rsi
  41382b:	push   rbx
  41382c:	sub    rsp,0x48
  413830:	test   ecx,ecx
  413832:	mov    rbx,rdx
  413835:	mov    DWORD PTR [rsp+0x3c],r8d
  41383a:	js     0x413a11
  413840:	mov    ecx,DWORD PTR [rip+0x2b2f6]        # 0x43eb3c
  413846:	test   ecx,ecx
  413848:	jne    0x413900
  41384e:	lea    rcx,[rip+0x30d35]        # 0x44458a
  413855:	call   0x433f18
  41385a:	mov    r13,rax
  41385d:	movzx  r10d,BYTE PTR [rbx]
  413861:	test   r10b,r10b
  413864:	je     0x413a45
  41386a:	add    rbx,0x1
  41386e:	xor    r12d,r12d
  413871:	xor    esi,esi
  413873:	xor    edi,edi
  413875:	xor    ebp,ebp
  413877:	jmp    0x4138a8
  413879:	nop    DWORD PTR [rax+0x0]
  413880:	lea    rcx,[rdi+r14*1]
  413884:	mov    rdx,r15
  413887:	add    rbx,0x1
  41388b:	call   0x43a640
  413890:	mov    rcx,r15
  413893:	call   0x43a620
  413898:	movzx  r10d,BYTE PTR [rbx-0x1]
  41389d:	add    esi,eax
  41389f:	test   r10b,r10b
  4138a2:	je     0x413940
  4138a8:	cmp    r10b,0xa
  4138ac:	je     0x413930
  4138b2:	cmp    r10b,0x20
  4138b6:	je     0x413922
  4138b8:	cmp    r10b,0x9
  4138bc:	je     0x413914
  4138be:	movzx  ecx,r10b
  4138c2:	call   0x40c140
  4138c7:	mov    rcx,rax
  4138ca:	mov    r15,rax
  4138cd:	call   0x43a620
  4138d2:	mov    r14d,esi
  4138d5:	lea    rax,[r14+rax*1+0x1]
  4138da:	cmp    rax,rbp
  4138dd:	jb     0x413880
  4138df:	lea    ebp,[r12+0x64]
  4138e4:	mov    rcx,rdi
  4138e7:	mov    rdx,rbp
  4138ea:	mov    r12,rbp
  4138ed:	call   0x422820
  4138f2:	mov    rdi,rax
  4138f5:	jmp    0x413880
  4138f7:	nop    WORD PTR [rax+rax*1+0x0]
  413900:	lea    rcx,[rip+0x30c71]        # 0x444578
  413907:	call   0x433f18
  41390c:	mov    r13,rax
  41390f:	jmp    0x41385d
  413914:	mov    eax,0x2
  413919:	lea    r15,[rip+0x30c25]        # 0x444545
  413920:	jmp    0x4138d2
  413922:	mov    eax,0x1
  413927:	lea    r15,[rip+0x30c12]        # 0x444540
  41392e:	jmp    0x4138d2
  413930:	mov    eax,0x2
  413935:	lea    r15,[rip+0x30c06]        # 0x444542
  41393c:	jmp    0x4138d2
  41393e:	xchg   ax,ax
  413940:	mov    rcx,r13
  413943:	call   0x43a620
  413948:	mov    edx,DWORD PTR [rsp+0x3c]
  41394c:	lea    ebx,[rsi+rax*1+0x1]
  413950:	test   edx,edx
  413952:	jne    0x4139d0
  413954:	mov    ecx,ebx
  413956:	mov    rsi,rdi
  413959:	call   0x4227b0
  41395e:	test   rdi,rdi
  413961:	mov    rbx,rax
  413964:	lea    r8,[rip+0x30bdd]        # 0x444548
  41396b:	je     0x413a62
  413971:	lea    rdx,[rip+0x30c26]        # 0x44459e
  413978:	mov    r9,r13
  41397b:	mov    rcx,rbx
  41397e:	mov    QWORD PTR [rsp+0x20],rsi
  413983:	call   0x433f00
  413988:	lea    rcx,[rip+0x30c16]        # 0x4445a5
  41398f:	mov    rdx,rbx
  413992:	call   0x4210d0
  413997:	mov    rcx,rdi
  41399a:	call   0x43a748
  41399f:	mov    rcx,rbx
  4139a2:	call   0x43a748
  4139a7:	mov    rax,QWORD PTR [rip+0x35e42]        # 0x4497f0
  4139ae:	mov    rcx,QWORD PTR [rax]
  4139b1:	add    rsp,0x48
  4139b5:	pop    rbx
  4139b6:	pop    rsi
  4139b7:	pop    rdi
  4139b8:	pop    rbp
  4139b9:	pop    r12
  4139bb:	pop    r13
  4139bd:	pop    r14
  4139bf:	pop    r15
  4139c1:	jmp    0x4045a0
  4139c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139d0:	lea    rcx,[rip+0x30bbe]        # 0x444595
  4139d7:	lea    rsi,[rip+0x30b6a]        # 0x444548
  4139de:	call   0x433f18
  4139e3:	mov    rcx,rax
  4139e6:	call   0x43a620
  4139eb:	lea    ecx,[rbx+rax*1]
  4139ee:	call   0x4227b0
  4139f3:	test   rdi,rdi
  4139f6:	mov    rbx,rax
  4139f9:	cmovne rsi,rdi
  4139fd:	lea    rcx,[rip+0x30b91]        # 0x444595
  413a04:	call   0x433f18
  413a09:	mov    r8,rax
  413a0c:	jmp    0x413971
  413a11:	mov    r8d,DWORD PTR [rip+0x2b124]        # 0x43eb3c
  413a18:	test   r8d,r8d
  413a1b:	je     0x413a31
  413a1d:	lea    rcx,[rip+0x30b25]        # 0x444549
  413a24:	call   0x433f18
  413a29:	mov    r13,rax
  413a2c:	jmp    0x41385d
  413a31:	lea    rcx,[rip+0x30b2c]        # 0x444564
  413a38:	call   0x433f18
  413a3d:	mov    r13,rax
  413a40:	jmp    0x41385d
  413a45:	mov    rcx,r13
  413a48:	call   0x43a620
  413a4d:	lea    ebx,[rax+0x1]
  413a50:	mov    eax,DWORD PTR [rsp+0x3c]
  413a54:	test   eax,eax
  413a56:	jne    0x413a73
  413a58:	mov    ecx,ebx
  413a5a:	call   0x4227b0
  413a5f:	mov    rbx,rax
  413a62:	lea    rsi,[rip+0x30adf]        # 0x444548
  413a69:	xor    edi,edi
  413a6b:	mov    r8,rsi
  413a6e:	jmp    0x413971
  413a73:	lea    rcx,[rip+0x30b1b]        # 0x444595
  413a7a:	xor    edi,edi
  413a7c:	lea    rsi,[rip+0x30ac5]        # 0x444548
  413a83:	call   0x433f18
  413a88:	mov    rcx,rax
  413a8b:	call   0x43a620
  413a90:	lea    ecx,[rbx+rax*1]
  413a93:	call   0x4227b0
  413a98:	mov    rbx,rax
  413a9b:	jmp    0x4139fd
  413aa0:	push   rsi
  413aa1:	push   rbx
  413aa2:	sub    rsp,0x28
  413aa6:	mov    rax,QWORD PTR [rip+0x3dbbb]        # 0x451668
  413aad:	test   rax,rax
  413ab0:	je     0x413abe
  413ab2:	mov    r8d,DWORD PTR [rip+0x3dbab]        # 0x451664
  413ab9:	test   r8d,r8d
  413abc:	jne    0x413ac5
  413abe:	add    rsp,0x28
  413ac2:	pop    rbx
  413ac3:	pop    rsi
  413ac4:	ret    
  413ac5:	mov    ebx,ecx
  413ac7:	mov    rcx,rax
  413aca:	call   0x40c340
  413acf:	test   ebx,ebx
  413ad1:	mov    rsi,rax
  413ad4:	jne    0x413b20
  413ad6:	mov    rax,QWORD PTR [rip+0x35de3]        # 0x4498c0
  413add:	mov    eax,DWORD PTR [rax]
  413adf:	test   eax,eax
  413ae1:	jne    0x413b10
  413ae3:	mov    rcx,rsi
  413ae6:	xor    r8d,r8d
  413ae9:	xor    edx,edx
  413aeb:	call   0x4210d0
  413af0:	mov    rax,QWORD PTR [rip+0x35cf9]        # 0x4497f0
  413af7:	mov    rcx,QWORD PTR [rax]
  413afa:	call   0x4045a0
  413aff:	mov    DWORD PTR [rip+0x3ddff],0x1        # 0x451908
  413b09:	add    rsp,0x28
  413b0d:	pop    rbx
  413b0e:	pop    rsi
  413b0f:	ret    
  413b10:	mov    rcx,rsi
  413b13:	call   0x406130
  413b18:	jmp    0x413aff
  413b1a:	nop    WORD PTR [rax+rax*1+0x0]
  413b20:	mov    rcx,rax
  413b23:	call   0x43a620
  413b28:	mov    edx,0x2d
  413b2d:	mov    WORD PTR [rsi+rax*1],dx
  413b31:	jmp    0x413ad6
  413b33:	nop    DWORD PTR [rax]
  413b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b40:	push   rbx
  413b41:	sub    rsp,0x70
  413b45:	mov    eax,DWORD PTR [rcx+0x20]
  413b48:	movsxd r8,edx
  413b4b:	add    r8,QWORD PTR [rcx+0x18]
  413b4f:	mov    BYTE PTR [rsp+0x28],0x0
  413b54:	mov    DWORD PTR [rsp+0x2c],0x0
  413b5c:	mov    BYTE PTR [rsp+0x30],0x0
  413b61:	sub    eax,edx
  413b63:	cdqe   
  413b65:	add    rax,r8
  413b68:	mov    QWORD PTR [rsp+0x38],r8
  413b6d:	cmp    r8,rax
  413b70:	mov    QWORD PTR [rsp+0x20],rax
  413b75:	jae    0x413c50
  413b7b:	movzx  eax,BYTE PTR [r8]
  413b7f:	mov    rcx,QWORD PTR [rip+0x35e3a]        # 0x4499c0
  413b86:	mov    edx,eax
  413b88:	and    eax,0x1f
  413b8b:	shr    dl,0x5
  413b8e:	and    edx,0x7
  413b91:	mov    edx,DWORD PTR [rcx+rdx*4]
  413b94:	bt     edx,eax
  413b97:	jae    0x413bc0
  413b99:	mov    QWORD PTR [rsp+0x40],0x1
  413ba2:	movsx  ax,BYTE PTR [r8]
  413ba7:	mov    WORD PTR [rsp+0x4a],ax
  413bac:	xor    eax,eax
  413bae:	cmp    WORD PTR [rsp+0x4a],0xa
  413bb4:	sete   al
  413bb7:	add    rsp,0x70
  413bbb:	pop    rbx
  413bbc:	ret    
  413bbd:	nop    DWORD PTR [rax]
  413bc0:	lea    rbx,[rsp+0x20]
  413bc5:	lea    rcx,[rbx+0xc]
  413bc9:	call   0x424040
  413bce:	test   eax,eax
  413bd0:	je     0x413c65
  413bd6:	mov    rdx,QWORD PTR [rsp+0x38]
  413bdb:	mov    r8,QWORD PTR [rsp+0x20]
  413be0:	lea    rcx,[rbx+0x2a]
  413be4:	lea    r9,[rbx+0xc]
  413be8:	mov    BYTE PTR [rsp+0x28],0x1
  413bed:	sub    r8,rdx
  413bf0:	call   0x423f00
  413bf5:	lea    rdx,[rax+0x2]
  413bf9:	mov    QWORD PTR [rsp+0x40],rax
  413bfe:	cmp    rdx,0x1
  413c02:	jbe    0x413c5d
  413c04:	test   rax,rax
  413c07:	jne    0x413c40
  413c09:	mov    rax,QWORD PTR [rsp+0x38]
  413c0e:	mov    QWORD PTR [rsp+0x40],0x1
  413c17:	cmp    BYTE PTR [rax],0x0
  413c1a:	jne    0x413c83
  413c1c:	cmp    WORD PTR [rsp+0x4a],0x0
  413c22:	je     0x413c40
  413c24:	lea    rdx,[rip+0x3097d]        # 0x4445a8
  413c2b:	lea    rcx,[rip+0x309f5]        # 0x444627
  413c32:	mov    r8d,0xaa
  413c38:	call   0x435a10
  413c3d:	nop    DWORD PTR [rax]
  413c40:	lea    rcx,[rbx+0xc]
  413c44:	mov    BYTE PTR [rsp+0x48],0x1
  413c49:	call   0x424040
  413c4e:	xchg   ax,ax
  413c50:	movzx  eax,BYTE PTR [rsp+0x48]
  413c55:	test   al,al
  413c57:	jne    0x413bac
  413c5d:	xor    eax,eax
  413c5f:	add    rsp,0x70
  413c63:	pop    rbx
  413c64:	ret    
  413c65:	lea    rdx,[rip+0x3093c]        # 0x4445a8
  413c6c:	lea    rcx,[rip+0x30986]        # 0x4445f9
  413c73:	mov    r8d,0x8e
  413c79:	call   0x435a10
  413c7e:	jmp    0x413bd6
  413c83:	lea    rdx,[rip+0x3091e]        # 0x4445a8
  413c8a:	lea    rcx,[rip+0x3097f]        # 0x444610
  413c91:	mov    r8d,0xa9
  413c97:	call   0x435a10
  413c9c:	jmp    0x413c1c
  413ca1:	nop    DWORD PTR [rax+rax*1+0x0]
  413ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413cb0:	push   rbx
  413cb1:	sub    rsp,0x70
  413cb5:	mov    eax,DWORD PTR [rcx+0x20]
  413cb8:	movsxd r8,edx
  413cbb:	add    r8,QWORD PTR [rcx+0x18]
  413cbf:	mov    BYTE PTR [rsp+0x28],0x0
  413cc4:	mov    DWORD PTR [rsp+0x2c],0x0
  413ccc:	mov    BYTE PTR [rsp+0x30],0x0
  413cd1:	sub    eax,edx
  413cd3:	cdqe   
  413cd5:	add    rax,r8
  413cd8:	mov    QWORD PTR [rsp+0x38],r8
  413cdd:	cmp    r8,rax
  413ce0:	mov    QWORD PTR [rsp+0x20],rax
  413ce5:	jb     0x413d10
  413ce7:	movzx  edx,BYTE PTR [rsp+0x48]
  413cec:	xor    eax,eax
  413cee:	test   dl,dl
  413cf0:	je     0x413d09
  413cf2:	movzx  ecx,WORD PTR [rsp+0x4a]
  413cf7:	mov    edx,0x107
  413cfc:	call   0x43a6e0
  413d01:	test   eax,eax
  413d03:	setne  al
  413d06:	movzx  eax,al
  413d09:	add    rsp,0x70
  413d0d:	pop    rbx
  413d0e:	ret    
  413d0f:	nop
  413d10:	movzx  eax,BYTE PTR [r8]
  413d14:	mov    rcx,QWORD PTR [rip+0x35ca5]        # 0x4499c0
  413d1b:	mov    edx,eax
  413d1d:	and    eax,0x1f
  413d20:	shr    dl,0x5
  413d23:	and    edx,0x7
  413d26:	mov    edx,DWORD PTR [rcx+rdx*4]
  413d29:	bt     edx,eax
  413d2c:	jae    0x413d52
  413d2e:	mov    QWORD PTR [rsp+0x40],0x1
  413d37:	movsx  ax,BYTE PTR [r8]
  413d3c:	mov    edx,0x1
  413d41:	mov    BYTE PTR [rsp+0x48],0x1
  413d46:	mov    WORD PTR [rsp+0x4a],ax
  413d4b:	mov    BYTE PTR [rsp+0x30],0x1
  413d50:	jmp    0x413cec
  413d52:	lea    rbx,[rsp+0x20]
  413d57:	lea    rcx,[rbx+0xc]
  413d5b:	call   0x424040
  413d60:	test   eax,eax
  413d62:	je     0x413e01
  413d68:	mov    rdx,QWORD PTR [rsp+0x38]
  413d6d:	mov    r8,QWORD PTR [rsp+0x20]
  413d72:	lea    rcx,[rbx+0x2a]
  413d76:	lea    r9,[rbx+0xc]
  413d7a:	mov    BYTE PTR [rsp+0x28],0x1
  413d7f:	sub    r8,rdx
  413d82:	call   0x423f00
  413d87:	cmp    rax,0xffffffffffffffff
  413d8b:	mov    QWORD PTR [rsp+0x40],rax
  413d90:	je     0x413e20
  413d96:	cmp    rax,0xfffffffffffffffe
  413d9a:	je     0x413e35
  413da0:	test   rax,rax
  413da3:	jne    0x413de0
  413da5:	mov    rax,QWORD PTR [rsp+0x38]
  413daa:	mov    QWORD PTR [rsp+0x40],0x1
  413db3:	cmp    BYTE PTR [rax],0x0
  413db6:	jne    0x413e50
  413dbc:	cmp    WORD PTR [rsp+0x4a],0x0
  413dc2:	je     0x413de0
  413dc4:	lea    rdx,[rip+0x307dd]        # 0x4445a8
  413dcb:	lea    rcx,[rip+0x30855]        # 0x444627
  413dd2:	mov    r8d,0xaa
  413dd8:	call   0x435a10
  413ddd:	nop    DWORD PTR [rax]
  413de0:	lea    rcx,[rbx+0xc]
  413de4:	mov    BYTE PTR [rsp+0x48],0x1
  413de9:	call   0x424040
  413dee:	test   eax,eax
  413df0:	je     0x413df7
  413df2:	mov    BYTE PTR [rsp+0x28],0x0
  413df7:	movzx  edx,BYTE PTR [rsp+0x48]
  413dfc:	jmp    0x413d4b
  413e01:	lea    rdx,[rip+0x307a0]        # 0x4445a8
  413e08:	lea    rcx,[rip+0x307ea]        # 0x4445f9
  413e0f:	mov    r8d,0x8e
  413e15:	call   0x435a10
  413e1a:	jmp    0x413d68
  413e1f:	nop
  413e20:	mov    QWORD PTR [rsp+0x40],0x1
  413e29:	mov    BYTE PTR [rsp+0x48],0x0
  413e2e:	xor    edx,edx
  413e30:	jmp    0x413d4b
  413e35:	mov    rax,QWORD PTR [rsp+0x20]
  413e3a:	sub    rax,QWORD PTR [rsp+0x38]
  413e3f:	xor    edx,edx
  413e41:	mov    BYTE PTR [rsp+0x48],0x0
  413e46:	mov    QWORD PTR [rsp+0x40],rax
  413e4b:	jmp    0x413d4b
  413e50:	lea    rdx,[rip+0x30751]        # 0x4445a8
  413e57:	lea    rcx,[rip+0x307b2]        # 0x444610
  413e5e:	mov    r8d,0xa9
  413e64:	call   0x435a10
  413e69:	jmp    0x413dbc
  413e6e:	xchg   ax,ax
  413e70:	push   rbp
  413e71:	push   rdi
  413e72:	push   rsi
  413e73:	push   rbx
  413e74:	sub    rsp,0x28
  413e78:	mov    rdi,QWORD PTR [rsp+0x70]
  413e7d:	test   rcx,rcx
  413e80:	mov    rsi,rdx
  413e83:	mov    rbp,r9
  413e86:	je     0x413f20
  413e8c:	test   rsi,rsi
  413e8f:	je     0x413f10
  413e91:	cmp    BYTE PTR [rsi],0x0
  413e94:	lea    rax,[rip+0x3079e]        # 0x444639
  413e9b:	cmove  rsi,rax
  413e9f:	call   0x4117b0
  413ea4:	test   rax,rax
  413ea7:	mov    QWORD PTR [rbp+0x0],rax
  413eab:	je     0x413f00
  413ead:	mov    rax,QWORD PTR [rax+0x58]
  413eb1:	mov    QWORD PTR [rdi],rax
  413eb4:	mov    rax,QWORD PTR [rax]
  413eb7:	test   rax,rax
  413eba:	je     0x413f00
  413ebc:	mov    ebx,0x8
  413ec1:	jmp    0x413edd
  413ec3:	mov    rax,QWORD PTR [rbp+0x0]
  413ec7:	mov    rcx,rbx
  413eca:	add    rbx,0x8
  413ece:	add    rcx,QWORD PTR [rax+0x58]
  413ed2:	mov    QWORD PTR [rdi],rcx
  413ed5:	mov    rax,QWORD PTR [rcx]
  413ed8:	test   rax,rax
  413edb:	je     0x413f00
  413edd:	mov    rdx,QWORD PTR [rax+0x8]
  413ee1:	mov    rcx,rsi
  413ee4:	call   0x43a648
  413ee9:	test   eax,eax
  413eeb:	jne    0x413ec3
  413eed:	mov    eax,0x1
  413ef2:	add    rsp,0x28
  413ef6:	pop    rbx
  413ef7:	pop    rsi
  413ef8:	pop    rdi
  413ef9:	pop    rbp
  413efa:	ret    
  413efb:	nop    DWORD PTR [rax+rax*1+0x0]
  413f00:	xor    eax,eax
  413f02:	add    rsp,0x28
  413f06:	pop    rbx
  413f07:	pop    rsi
  413f08:	pop    rdi
  413f09:	pop    rbp
  413f0a:	ret    
  413f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  413f10:	lea    rsi,[rip+0x30722]        # 0x444639
  413f17:	jmp    0x413e9f
  413f19:	nop    DWORD PTR [rax+0x0]
  413f20:	mov    rax,QWORD PTR [r8]
  413f23:	mov    rcx,QWORD PTR [rax]
  413f26:	jmp    0x413e8c
  413f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  413f30:	push   rbx
  413f31:	sub    rsp,0x20
  413f35:	mov    rbx,rcx
  413f38:	lea    rcx,[rip+0x306fe]        # 0x44463d
  413f3f:	call   0x43a730
  413f44:	mov    rcx,rax
  413f47:	call   0x41cc60
  413f4c:	mov    rcx,rbx
  413f4f:	add    rsp,0x20
  413f53:	pop    rbx
  413f54:	jmp    0x40e500
  413f59:	nop    DWORD PTR [rax+0x0]
  413f60:	sub    rsp,0x28
  413f64:	mov    rax,QWORD PTR [rip+0x35bf5]        # 0x449b60
  413f6b:	xor    ecx,ecx
  413f6d:	mov    edx,DWORD PTR [rax]
  413f6f:	sub    edx,0x1
  413f72:	call   0x41c2f0
  413f77:	call   0x41c4d0
  413f7c:	call   QWORD PTR [rip+0x4096e]        # 0x4548f0
  413f82:	lea    rcx,[rax+0x30]
  413f86:	call   0x43a780
  413f8b:	call   0x41d520
  413f90:	nop
  413f91:	add    rsp,0x28
  413f95:	jmp    0x4045e0
  413f9a:	nop    WORD PTR [rax+rax*1+0x0]
  413fa0:	push   r12
  413fa2:	push   rbp
  413fa3:	push   rdi
  413fa4:	push   rsi
  413fa5:	push   rbx
  413fa6:	sub    rsp,0x20
  413faa:	mov    r12,QWORD PTR [rip+0x4098f]        # 0x454940
  413fb1:	mov    rbx,QWORD PTR [rip+0x40938]        # 0x4548f0
  413fb8:	mov    rbp,QWORD PTR [rip+0x35871]        # 0x449830
  413fbf:	mov    rdi,QWORD PTR [rip+0x3582a]        # 0x4497f0
  413fc6:	mov    esi,ecx
  413fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  413fd0:	mov    ecx,esi
  413fd2:	call   0x413330
  413fd7:	test   eax,eax
  413fd9:	je     0x413ff0
  413fdb:	add    rsp,0x20
  413fdf:	pop    rbx
  413fe0:	pop    rsi
  413fe1:	pop    rdi
  413fe2:	pop    rbp
  413fe3:	pop    r12
  413fe5:	ret    
  413fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ff0:	call   r12
  413ff3:	cmp    DWORD PTR [rax],0x4
  413ff6:	je     0x413fd0
  413ff8:	test   esi,esi
  413ffa:	je     0x413fdb
  413ffc:	call   rbx
  413ffe:	mov    rcx,QWORD PTR [rip+0x3d91b]        # 0x451920
  414005:	cmp    rax,rcx
  414008:	je     0x41402e
  41400a:	call   0x43a788
  41400f:	call   rbx
  414011:	mov    DWORD PTR [rbp+0x0],0x0
  414018:	mov    QWORD PTR [rip+0x3d901],rax        # 0x451920
  41401f:	call   0x403fa0
  414024:	mov    rcx,QWORD PTR [rdi]
  414027:	call   0x4045a0
  41402c:	jmp    0x413fd0
  41402e:	call   0x413f60
  414033:	xor    ecx,ecx
  414035:	call   0x43a790
  41403a:	nop
  41403b:	nop    DWORD PTR [rax+rax*1+0x0]
  414040:	push   rsi
  414041:	push   rbx
  414042:	sub    rsp,0x28
  414046:	lea    rdx,[rip+0x305f5]        # 0x444642
  41404d:	call   0x43a770
  414052:	test   rax,rax
  414055:	mov    rbx,rax
  414058:	je     0x414099
  41405a:	cmp    QWORD PTR [rip+0x3d8be],0x0        # 0x451920
  414062:	mov    rsi,QWORD PTR [rip+0x40887]        # 0x4548f0
  414069:	je     0x41407e
  41406b:	call   rsi
  41406d:	mov    rcx,QWORD PTR [rip+0x3d8ac]        # 0x451920
  414074:	cmp    rax,rcx
  414077:	je     0x41407e
  414079:	call   0x43a788
  41407e:	mov    QWORD PTR [rip+0x3d89b],rbx        # 0x451920
  414085:	call   rsi
  414087:	cmp    rax,rbx
  41408a:	je     0x414099
  41408c:	mov    rax,QWORD PTR [rip+0x3579d]        # 0x449830
  414093:	mov    DWORD PTR [rax],0x1
  414099:	add    rsp,0x28
  41409d:	pop    rbx
  41409e:	pop    rsi
  41409f:	ret    
  4140a0:	sub    rsp,0x28
  4140a4:	xor    ecx,ecx
  4140a6:	call   0x413fa0
  4140ab:	mov    eax,DWORD PTR [rip+0x3d853]        # 0x451904
  4140b1:	cmp    DWORD PTR [rip+0x3d849],eax        # 0x451900
  4140b7:	setne  al
  4140ba:	movzx  eax,al
  4140bd:	add    rsp,0x28
  4140c1:	ret    
  4140c2:	nop    DWORD PTR [rax+0x0]
  4140c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4140d0:	push   r14
  4140d2:	push   r13
  4140d4:	push   r12
  4140d6:	push   rbp
  4140d7:	push   rdi
  4140d8:	push   rsi
  4140d9:	push   rbx
  4140da:	sub    rsp,0x20
  4140de:	mov    rsi,QWORD PTR [rip+0x3572b]        # 0x449810
  4140e5:	lea    r12,[rip+0x3d614]        # 0x451700
  4140ec:	nop    DWORD PTR [rax+0x0]
  4140f0:	mov    ecx,0x1
  4140f5:	call   0x413fa0
  4140fa:	movsxd r13,DWORD PTR [rip+0x3d803]        # 0x451904
  414101:	mov    r8d,DWORD PTR [rip+0x3d7f8]        # 0x451900
  414108:	mov    r9d,r8d
  41410b:	cmp    r13d,r8d
  41410e:	je     0x4140f0
  414110:	mov    rbp,QWORD PTR [rsi]
  414113:	movsxd rdx,r13d
  414116:	xor    r14d,r14d
  414119:	xor    edi,edi
  41411b:	jmp    0x414154
  41411d:	nop    DWORD PTR [rax]
  414120:	cmp    cl,0x2
  414123:	je     0x414134
  414125:	cmp    cl,0x3
  414128:	jne    0x4143b0
  41412e:	mov    r14d,0x1
  414134:	mov    rbp,QWORD PTR [rdx+0x8]
  414138:	movsxd rdx,DWORD PTR [rip+0x3d7c5]        # 0x451904
  41413f:	cmp    r8d,edx
  414142:	je     0x414410
  414148:	cmp    r8d,edx
  41414b:	mov    r9d,r8d
  41414e:	je     0x4143c3
  414154:	lea    eax,[rdx+0x1]
  414157:	movzx  ebx,BYTE PTR [r12+rdx*1]
  41415c:	cmp    eax,0x1ff
  414161:	mov    DWORD PTR [rip+0x3d79d],eax        # 0x451904
  414167:	jle    0x414173
  414169:	mov    DWORD PTR [rip+0x3d791],0x0        # 0x451904
  414173:	movzx  edx,bl
  414176:	add    edi,0x1
  414179:	shl    rdx,0x4
  41417d:	add    rdx,rbp
  414180:	movzx  ecx,BYTE PTR [rdx]
  414183:	cmp    cl,0x1
  414186:	je     0x414300
  41418c:	jg     0x414120
  41418e:	test   cl,cl
  414190:	jne    0x4143b0
  414196:	test   r14d,r14d
  414199:	mov    DWORD PTR [rip+0x3d764],r13d        # 0x451904
  4141a0:	je     0x4141b1
  4141a2:	cmp    edi,0x2
  4141a5:	jle    0x4141f0
  4141a7:	mov    eax,DWORD PTR [rip+0x2a9a3]        # 0x43eb50
  4141ad:	test   eax,eax
  4141af:	jne    0x4141f0
  4141b1:	cmp    r13d,r9d
  4141b4:	je     0x4141d6
  4141b6:	lea    eax,[r13+0x1]
  4141ba:	movzx  ebx,BYTE PTR [r12+r13*1]
  4141bf:	cmp    eax,0x1ff
  4141c4:	mov    DWORD PTR [rip+0x3d73a],eax        # 0x451904
  4141ca:	jle    0x4141d6
  4141cc:	mov    DWORD PTR [rip+0x3d72e],0x0        # 0x451904
  4141d6:	movzx  eax,bl
  4141d9:	cmp    eax,0xffffffff
  4141dc:	je     0x4140f0
  4141e2:	jmp    0x41439e
  4141e7:	nop    WORD PTR [rax+rax*1+0x0]
  4141f0:	cmp    r13d,r9d
  4141f3:	je     0x414450
  4141f9:	lea    eax,[r13+0x1]
  4141fd:	cmp    eax,0x1ff
  414202:	jg     0x41442a
  414208:	cmp    eax,r9d
  41420b:	mov    DWORD PTR [rip+0x3d6f3],eax        # 0x451904
  414211:	je     0x414450
  414217:	add    r13d,0x2
  41421b:	cdqe   
  41421d:	cmp    r13d,0x1ff
  414224:	mov    DWORD PTR [rip+0x3d6d9],r13d        # 0x451904
  41422b:	movzx  edx,BYTE PTR [r12+rax*1]
  414230:	jle    0x41423c
  414232:	mov    DWORD PTR [rip+0x3d6c8],0x0        # 0x451904
  41423c:	cmp    dl,0x4f
  41423f:	je     0x414464
  414245:	movzx  eax,dl
  414248:	add    eax,0x10f
  41424d:	cmp    dl,0x5b
  414250:	jne    0x4141d9
  414252:	movsxd rax,DWORD PTR [rip+0x3d6ab]        # 0x451904
  414259:	cmp    eax,r9d
  41425c:	je     0x4144ad
  414262:	lea    edx,[rax+0x1]
  414265:	movzx  eax,BYTE PTR [r12+rax*1]
  41426a:	cmp    edx,0x1ff
  414270:	mov    DWORD PTR [rip+0x3d68e],edx        # 0x451904
  414276:	jg     0x414494
  41427c:	movsxd rdx,DWORD PTR [rip+0x3d681]        # 0x451904
  414283:	xor    r8d,r8d
  414286:	jmp    0x4142a5
  414288:	nop    DWORD PTR [rax+rax*1+0x0]
  414290:	lea    ecx,[rdx+0x1]
  414293:	movzx  eax,BYTE PTR [r12+rdx*1]
  414298:	cmp    ecx,0x200
  41429e:	cmovge ecx,r8d
  4142a2:	movsxd rdx,ecx
  4142a5:	lea    ecx,[rax-0x30]
  4142a8:	cmp    cl,0xf
  4142ab:	ja     0x4144b7
  4142b1:	cmp    edx,r9d
  4142b4:	jne    0x414290
  4142b6:	mov    DWORD PTR [rip+0x3d647],r9d        # 0x451904
  4142bd:	movsxd rdx,DWORD PTR [rip+0x3d640]        # 0x451904
  4142c4:	xor    r8d,r8d
  4142c7:	jmp    0x4142e5
  4142c9:	nop    DWORD PTR [rax+0x0]
  4142d0:	lea    ecx,[rdx+0x1]
  4142d3:	movzx  eax,BYTE PTR [r12+rdx*1]
  4142d8:	cmp    ecx,0x200
  4142de:	cmovge ecx,r8d
  4142e2:	movsxd rdx,ecx
  4142e5:	sub    eax,0x20
  4142e8:	cmp    al,0xf
  4142ea:	ja     0x4142f1
  4142ec:	cmp    edx,r9d
  4142ef:	jne    0x4142d0
  4142f1:	mov    DWORD PTR [rip+0x3d60d],edx        # 0x451904
  4142f7:	jmp    0x4140f0
  4142fc:	nop    DWORD PTR [rax+0x0]
  414300:	mov    eax,DWORD PTR [rdx+0x4]
  414303:	cmp    eax,0x10e
  414308:	jne    0x4141d9
  41430e:	mov    edx,DWORD PTR [rip+0x3d5f0]        # 0x451904
  414314:	cmp    r8d,edx
  414317:	je     0x41439e
  41431d:	movsxd r9,edx
  414320:	lea    ecx,[rdx+0x1]
  414323:	movzx  r9d,BYTE PTR [r12+r9*1]
  414328:	cmp    ecx,0x1ff
  41432e:	mov    DWORD PTR [rip+0x3d5d0],ecx        # 0x451904
  414334:	mov    BYTE PTR [rip+0x3f56a],r9b        # 0x4538a5
  41433b:	jle    0x4143d0
  414341:	test   r8d,r8d
  414344:	mov    DWORD PTR [rip+0x3d5b6],0x0        # 0x451904
  41434e:	je     0x41439e
  414350:	movzx  ecx,BYTE PTR [rip+0x3d3a9]        # 0x451700
  414357:	mov    edx,0x1
  41435c:	mov    DWORD PTR [rip+0x3d59e],0x1        # 0x451904
  414366:	mov    BYTE PTR [rip+0x3f538],cl        # 0x4538a4
  41436c:	nop    DWORD PTR [rax+0x0]
  414370:	cmp    r8d,edx
  414373:	je     0x41439e
  414375:	lea    ecx,[rdx+0x1]
  414378:	movsxd rdx,edx
  41437b:	movzx  edx,BYTE PTR [r12+rdx*1]
  414380:	cmp    ecx,0x1ff
  414386:	mov    DWORD PTR [rip+0x3d578],ecx        # 0x451904
  41438c:	mov    BYTE PTR [rip+0x3f514],dl        # 0x4538a6
  414392:	jle    0x41439e
  414394:	mov    DWORD PTR [rip+0x3d566],0x0        # 0x451904
  41439e:	add    rsp,0x20
  4143a2:	pop    rbx
  4143a3:	pop    rsi
  4143a4:	pop    rdi
  4143a5:	pop    rbp
  4143a6:	pop    r12
  4143a8:	pop    r13
  4143aa:	pop    r14
  4143ac:	ret    
  4143ad:	nop    DWORD PTR [rax]
  4143b0:	movsxd rdx,DWORD PTR [rip+0x3d54d]        # 0x451904
  4143b7:	mov    r9d,r8d
  4143ba:	cmp    r8d,edx
  4143bd:	jne    0x414154
  4143c3:	mov    r9d,edx
  4143c6:	jmp    0x414196
  4143cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4143d0:	cmp    r8d,ecx
  4143d3:	je     0x41439e
  4143d5:	lea    r9,[rip+0x3d324]        # 0x451700
  4143dc:	movsxd rcx,ecx
  4143df:	add    edx,0x2
  4143e2:	cmp    edx,0x1ff
  4143e8:	mov    DWORD PTR [rip+0x3d516],edx        # 0x451904
  4143ee:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4143f3:	mov    BYTE PTR [rip+0x3f4ab],cl        # 0x4538a4
  4143f9:	jle    0x414370
  4143ff:	mov    DWORD PTR [rip+0x3d4fb],0x0        # 0x451904
  414409:	xor    edx,edx
  41440b:	jmp    0x414370
  414410:	xor    ecx,ecx
  414412:	call   0x413fa0
  414417:	movsxd rdx,DWORD PTR [rip+0x3d4e6]        # 0x451904
  41441e:	mov    r8d,DWORD PTR [rip+0x3d4db]        # 0x451900
  414425:	jmp    0x414148
  41442a:	test   r9d,r9d
  41442d:	mov    DWORD PTR [rip+0x3d4cd],0x0        # 0x451904
  414437:	je     0x414450
  414439:	mov    DWORD PTR [rip+0x3d4c1],0x1        # 0x451904
  414443:	movzx  edx,BYTE PTR [rip+0x3d2b6]        # 0x451700
  41444a:	jmp    0x41423c
  41444f:	nop
  414450:	mov    eax,0x1b
  414455:	add    rsp,0x20
  414459:	pop    rbx
  41445a:	pop    rsi
  41445b:	pop    rdi
  41445c:	pop    rbp
  41445d:	pop    r12
  41445f:	pop    r13
  414461:	pop    r14
  414463:	ret    
  414464:	xor    ecx,ecx
  414466:	call   0x413fa0
  41446b:	mov    eax,DWORD PTR [rip+0x3d493]        # 0x451904
  414471:	cmp    DWORD PTR [rip+0x3d489],eax        # 0x451900
  414477:	je     0x4144a3
  414479:	add    eax,0x1
  41447c:	mov    edx,0x0
  414481:	cmp    eax,0x1ff
  414486:	cmovg  eax,edx
  414489:	mov    DWORD PTR [rip+0x3d475],eax        # 0x451904
  41448f:	jmp    0x4140f0
  414494:	mov    DWORD PTR [rip+0x3d466],0x0        # 0x451904
  41449e:	jmp    0x41427c
  4144a3:	mov    eax,0x15e
  4144a8:	jmp    0x41439e
  4144ad:	mov    eax,0x16a
  4144b2:	jmp    0x41439e
  4144b7:	mov    DWORD PTR [rip+0x3d447],edx        # 0x451904
  4144bd:	jmp    0x4142bd
  4144c2:	nop    DWORD PTR [rax+0x0]
  4144c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144d0:	push   rbp
  4144d1:	push   rdi
  4144d2:	push   rsi
  4144d3:	push   rbx
  4144d4:	sub    rsp,0x38
  4144d8:	mov    rax,QWORD PTR [rip+0x354d1]        # 0x4499b0
  4144df:	mov    QWORD PTR [rsp+0x68],rdx
  4144e4:	mov    QWORD PTR [rsp+0x70],r8
  4144e9:	lea    rbx,[rsp+0x68]
  4144ee:	mov    QWORD PTR [rsp+0x78],r9
  4144f3:	mov    rdi,rcx
  4144f6:	mov    r9d,DWORD PTR [rax]
  4144f9:	mov    QWORD PTR [rsp+0x28],rbx
  4144fe:	test   r9d,r9d
  414501:	je     0x414550
  414503:	mov    rax,QWORD PTR [rip+0x35326]        # 0x449830
  41450a:	mov    r8d,DWORD PTR [rax]
  41450d:	test   r8d,r8d
  414510:	jne    0x414550
  414512:	mov    rax,QWORD PTR [rip+0x353a7]        # 0x4498c0
  414519:	mov    ecx,DWORD PTR [rax]
  41451b:	test   ecx,ecx
  41451d:	jne    0x4145b0
  414523:	mov    edx,DWORD PTR [rip+0x2a623]        # 0x43eb4c
  414529:	test   edx,edx
  41452b:	je     0x414532
  41452d:	call   0x41c810
  414532:	mov    rdx,rbx
  414535:	mov    rcx,rdi
  414538:	call   0x421080
  41453d:	nop
  41453e:	add    rsp,0x38
  414542:	pop    rbx
  414543:	pop    rsi
  414544:	pop    rdi
  414545:	pop    rbp
  414546:	ret    
  414547:	nop    WORD PTR [rax+rax*1+0x0]
  414550:	mov    rax,QWORD PTR [rip+0x355c9]        # 0x449b20
  414557:	mov    rsi,QWORD PTR [rip+0x40392]        # 0x4548f0
  41455e:	mov    rbp,QWORD PTR [rax]
  414561:	call   rsi
  414563:	lea    rdx,[rip+0x300db]        # 0x444645
  41456a:	lea    rcx,[rax+0x60]
  41456e:	mov    r8,rbp
  414571:	call   0x433f20
  414576:	call   rsi
  414578:	lea    rcx,[rax+0x60]
  41457c:	mov    r8,rbx
  41457f:	mov    rdx,rdi
  414582:	call   0x433ef0
  414587:	call   rsi
  414589:	lea    rdx,[rip+0x300ba]        # 0x44464a
  414590:	lea    rcx,[rax+0x60]
  414594:	call   0x433f20
  414599:	call   rsi
  41459b:	lea    rcx,[rax+0x60]
  41459f:	call   0x43a780
  4145a4:	nop
  4145a5:	add    rsp,0x38
  4145a9:	pop    rbx
  4145aa:	pop    rsi
  4145ab:	pop    rdi
  4145ac:	pop    rbp
  4145ad:	ret    
  4145ae:	xchg   ax,ax
  4145b0:	mov    rdx,rbx
  4145b3:	mov    rcx,rdi
  4145b6:	call   0x41fd50
  4145bb:	mov    rbx,rax
  4145be:	mov    eax,DWORD PTR [rip+0x2a588]        # 0x43eb4c
  4145c4:	test   eax,eax
  4145c6:	jne    0x4145f0
  4145c8:	mov    rcx,QWORD PTR [rbx+0x18]
  4145cc:	call   0x406130
  4145d1:	mov    rcx,QWORD PTR [rbx+0x18]
  4145d5:	call   0x43a748
  4145da:	mov    rcx,rbx
  4145dd:	call   0x43a748
  4145e2:	nop
  4145e3:	add    rsp,0x38
  4145e7:	pop    rbx
  4145e8:	pop    rsi
  4145e9:	pop    rdi
  4145ea:	pop    rbp
  4145eb:	ret    
  4145ec:	nop    DWORD PTR [rax+0x0]
  4145f0:	call   0x41c810
  4145f5:	jmp    0x4145c8
  4145f7:	nop    WORD PTR [rax+rax*1+0x0]
  414600:	push   rsi
  414601:	push   rbx
  414602:	sub    rsp,0x28
  414606:	call   0x41d3e0
  41460b:	test   eax,eax
  41460d:	je     0x41467e
  41460f:	call   0x41c510
  414614:	mov    rsi,QWORD PTR [rip+0x35545]        # 0x449b60
  41461b:	mov    rbx,QWORD PTR [rip+0x3554e]        # 0x449b70
  414622:	mov    edx,DWORD PTR [rsi]
  414624:	mov    ecx,DWORD PTR [rbx]
  414626:	call   0x420aa0
  41462b:	call   0x41ace0
  414630:	mov    edx,DWORD PTR [rsi]
  414632:	mov    ecx,DWORD PTR [rbx]
  414634:	call   0x401d30
  414639:	cmp    QWORD PTR [rip+0x3d2df],0x0        # 0x451920
  414641:	je     0x414660
  414643:	mov    rax,QWORD PTR [rip+0x35366]        # 0x4499b0
  41464a:	mov    DWORD PTR [rax],0x1
  414650:	add    rsp,0x28
  414654:	pop    rbx
  414655:	pop    rsi
  414656:	ret    
  414657:	nop    WORD PTR [rax+rax*1+0x0]
  414660:	mov    rbx,QWORD PTR [rip+0x40289]        # 0x4548f0
  414667:	call   rbx
  414669:	xor    edx,edx
  41466b:	mov    rcx,rax
  41466e:	call   0x43a678
  414673:	call   rbx
  414675:	mov    QWORD PTR [rip+0x3d2a4],rax        # 0x451920
  41467c:	jmp    0x414643
  41467e:	lea    rcx,[rip+0x2ffb8]        # 0x44463d
  414685:	call   0x43a730
  41468a:	mov    rdx,rax
  41468d:	mov    rax,QWORD PTR [rip+0x3545c]        # 0x449af0
  414694:	mov    rcx,QWORD PTR [rax]
  414697:	call   0x4144d0
  41469c:	mov    ecx,0x1
  4146a1:	call   0x43a790
  4146a6:	nop
  4146a7:	nop    WORD PTR [rax+rax*1+0x0]
  4146b0:	push   rbp
  4146b1:	push   rdi
  4146b2:	push   rsi
  4146b3:	push   rbx
  4146b4:	sub    rsp,0x38
  4146b8:	mov    rbx,QWORD PTR [rip+0x3d001]        # 0x4516c0
  4146bf:	mov    rdi,QWORD PTR [rip+0x4022a]        # 0x4548f0
  4146c6:	lea    rsi,[rsp+0x68]
  4146cb:	mov    QWORD PTR [rsp+0x68],rdx
  4146d0:	mov    QWORD PTR [rsp+0x70],r8
  4146d5:	mov    QWORD PTR [rsp+0x78],r9
  4146da:	mov    rbp,rcx
  4146dd:	test   rbx,rbx
  4146e0:	mov    QWORD PTR [rsp+0x28],rsi
  4146e5:	je     0x414732
  4146e7:	mov    rax,QWORD PTR [rip+0x35432]        # 0x449b20
  4146ee:	lea    rdx,[rip+0x2ff50]        # 0x444645
  4146f5:	mov    rcx,rbx
  4146f8:	mov    r8,QWORD PTR [rax]
  4146fb:	call   0x433f20
  414700:	mov    r8,rsi
  414703:	mov    rdx,rbp
  414706:	mov    rcx,rbx
  414709:	call   0x433ef0
  41470e:	lea    rdx,[rip+0x2ff35]        # 0x44464a
  414715:	mov    rcx,rbx
  414718:	call   0x433f20
  41471d:	call   rdi
  41471f:	lea    rcx,[rax+0x60]
  414723:	call   0x43a780
  414728:	nop
  414729:	add    rsp,0x38
  41472d:	pop    rbx
  41472e:	pop    rsi
  41472f:	pop    rdi
  414730:	pop    rbp
  414731:	ret    
  414732:	mov    rax,QWORD PTR [rip+0x35277]        # 0x4499b0
  414739:	mov    edx,DWORD PTR [rax]
  41473b:	test   edx,edx
  41473d:	je     0x41474c
  41473f:	mov    rax,QWORD PTR [rip+0x350ea]        # 0x449830
  414746:	mov    eax,DWORD PTR [rax]
  414748:	test   eax,eax
  41474a:	je     0x414760
  41474c:	mov    rdi,QWORD PTR [rip+0x4019d]        # 0x4548f0
  414753:	call   rdi
  414755:	lea    rbx,[rax+0x60]
  414759:	jmp    0x4146e7
  41475b:	nop    DWORD PTR [rax+rax*1+0x0]
  414760:	lea    rdx,[rip+0x2fee5]        # 0x44464c
  414767:	lea    rcx,[rip+0x2fee0]        # 0x44464e
  41476e:	call   0x43a770
  414773:	test   rax,rax
  414776:	mov    QWORD PTR [rip+0x3cf43],rax        # 0x4516c0
  41477d:	je     0x4147b2
  41477f:	lea    rcx,[rip+0xffffffffffffeb9a]        # 0x413320
  414786:	call   0x434030
  41478b:	lea    rcx,[rip+0x2fede]        # 0x444670
  414792:	mov    rbx,QWORD PTR [rip+0x3cf27]        # 0x4516c0
  414799:	call   0x433f18
  41479e:	lea    rdx,[rip+0x2fea9]        # 0x44464e
  4147a5:	mov    rcx,rax
  4147a8:	call   0x4144d0
  4147ad:	jmp    0x4146e7
  4147b2:	call   QWORD PTR [rip+0x40188]        # 0x454940
  4147b8:	mov    ecx,DWORD PTR [rax]
  4147ba:	call   0x433110
  4147bf:	lea    rcx,[rip+0x2fe92]        # 0x444658
  4147c6:	mov    rbx,rax
  4147c9:	call   0x433f18
  4147ce:	lea    rdx,[rip+0x2fe79]        # 0x44464e
  4147d5:	mov    rcx,rax
  4147d8:	mov    r8,rbx
  4147db:	call   0x4144d0
  4147e0:	mov    ecx,0x1
  4147e5:	call   0x43a790
  4147ea:	nop
  4147eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4147f0:	push   rsi
  4147f1:	push   rbx
  4147f2:	sub    rsp,0x28
  4147f6:	call   0x40c340
  4147fb:	mov    rbx,rax
  4147fe:	mov    rax,QWORD PTR [rip+0x350bb]        # 0x4498c0
  414805:	mov    eax,DWORD PTR [rax]
  414807:	test   eax,eax
  414809:	je     0x414870
  41480b:	mov    rcx,rbx
  41480e:	call   0x43a620
  414813:	lea    rcx,[rip+0x2fe8e]        # 0x4446a8
  41481a:	mov    rsi,rax
  41481d:	call   0x433f18
  414822:	mov    rcx,rax
  414825:	call   0x43a620
  41482a:	lea    rcx,[rsi+rax*1+0x1]
  41482f:	call   0x4227b0
  414834:	lea    rcx,[rip+0x2fe7d]        # 0x4446b8
  41483b:	mov    rsi,rax
  41483e:	call   0x433f18
  414843:	mov    r8,rbx
  414846:	mov    rdx,rax
  414849:	mov    rcx,rsi
  41484c:	call   0x433f00
  414851:	call   0x41c810
  414856:	mov    rcx,rsi
  414859:	call   0x406130
  41485e:	mov    rcx,rsi
  414861:	add    rsp,0x28
  414865:	pop    rbx
  414866:	pop    rsi
  414867:	jmp    0x43a748
  41486c:	nop    DWORD PTR [rax+0x0]
  414870:	lea    rcx,[rip+0x2fe1b]        # 0x444692
  414877:	call   0x433f18
  41487c:	mov    rdx,rbx
  41487f:	mov    rcx,rax
  414882:	add    rsp,0x28
  414886:	pop    rbx
  414887:	pop    rsi
  414888:	jmp    0x4144d0
  41488d:	nop    DWORD PTR [rax]
  414890:	sub    rsp,0x28
  414894:	mov    edx,DWORD PTR [rip+0x2a2b2]        # 0x43eb4c
  41489a:	test   edx,edx
  41489c:	je     0x4148e4
  41489e:	lea    rcx,[rip+0x2fe23]        # 0x4446c8
  4148a5:	call   0x433f18
  4148aa:	lea    rcx,[rip+0x2fcf4]        # 0x4445a5
  4148b1:	mov    rdx,rax
  4148b4:	call   0x4144d0
  4148b9:	mov    rax,QWORD PTR [rip+0x35000]        # 0x4498c0
  4148c0:	mov    eax,DWORD PTR [rax]
  4148c2:	test   eax,eax
  4148c4:	je     0x4148d5
  4148c6:	mov    DWORD PTR [rip+0x3cd70],0x0        # 0x451640
  4148d0:	add    rsp,0x28
  4148d4:	ret    
  4148d5:	mov    DWORD PTR [rip+0x3cd65],0x0        # 0x451644
  4148df:	add    rsp,0x28
  4148e3:	ret    
  4148e4:	call   0x41c810
  4148e9:	jmp    0x41489e
  4148eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4148f0:	sub    rsp,0x38
  4148f4:	mov    r8d,DWORD PTR [rip+0x2a251]        # 0x43eb4c
  4148fb:	test   r8d,r8d
  4148fe:	jne    0x414940
  414900:	mov    rax,QWORD PTR [rip+0x350a9]        # 0x4499b0
  414907:	mov    edx,DWORD PTR [rax]
  414909:	test   edx,edx
  41490b:	je     0x41495c
  41490d:	mov    rax,QWORD PTR [rip+0x34fac]        # 0x4498c0
  414914:	mov    eax,DWORD PTR [rax]
  414916:	test   eax,eax
  414918:	je     0x414923
  41491a:	add    rsp,0x38
  41491e:	jmp    0x406130
  414923:	mov    rdx,rcx
  414926:	lea    rcx,[rip+0x2fc78]        # 0x4445a5
  41492d:	add    rsp,0x38
  414931:	jmp    0x4210d0
  414936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414940:	mov    QWORD PTR [rsp+0x28],rcx
  414945:	call   0x41c810
  41494a:	mov    rax,QWORD PTR [rip+0x3505f]        # 0x4499b0
  414951:	mov    rcx,QWORD PTR [rsp+0x28]
  414956:	mov    edx,DWORD PTR [rax]
  414958:	test   edx,edx
  41495a:	jne    0x41490d
  41495c:	mov    rdx,rcx
  41495f:	lea    rcx,[rip+0x2fc3f]        # 0x4445a5
  414966:	add    rsp,0x38
  41496a:	jmp    0x4144d0
  41496f:	nop
  414970:	push   rbx
  414971:	sub    rsp,0x20
  414975:	test   rcx,rcx
  414978:	mov    rbx,rcx
  41497b:	je     0x4149b9
  41497d:	test   BYTE PTR [rcx+0x2c],0x10
  414981:	je     0x4149b9
  414983:	mov    rcx,QWORD PTR [rcx+0x18]
  414987:	call   0x43a748
  41498c:	mov    rcx,QWORD PTR [rbx+0x30]
  414990:	call   0x4093d0
  414995:	mov    rcx,QWORD PTR [rbx+0x48]
  414999:	call   0x43a748
  41499e:	mov    rcx,QWORD PTR [rbx+0x40]
  4149a2:	call   0x43a748
  4149a7:	mov    rcx,QWORD PTR [rbx+0x38]
  4149ab:	call   0x43a748
  4149b0:	mov    rcx,QWORD PTR [rbx+0x10]
  4149b4:	call   0x43a748
  4149b9:	mov    rcx,rbx
  4149bc:	add    rsp,0x20
  4149c0:	pop    rbx
  4149c1:	jmp    0x43a748
  4149c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149d0:	push   r14
  4149d2:	push   r13
  4149d4:	push   r12
  4149d6:	push   rbp
  4149d7:	push   rdi
  4149d8:	push   rsi
  4149d9:	push   rbx
  4149da:	sub    rsp,0x20
  4149de:	cmp    r9d,r8d
  4149e1:	mov    rsi,rcx
  4149e4:	mov    r13,rdx
  4149e7:	mov    r12d,r8d
  4149ea:	mov    ebp,r9d
  4149ed:	movsxd r14,r8d
  4149f0:	jle    0x414a34
  4149f2:	mov    eax,r9d
  4149f5:	lea    rbx,[r14*8+0x0]
  4149fd:	sub    eax,r8d
  414a00:	sub    eax,0x1
  414a03:	lea    rdi,[rax+r14*1+0x1]
  414a08:	shl    rdi,0x3
  414a0c:	nop    DWORD PTR [rax+0x0]
  414a10:	mov    rax,QWORD PTR [rsi]
  414a13:	mov    rax,QWORD PTR [rax+rbx*1]
  414a17:	mov    rcx,QWORD PTR [rax]
  414a1a:	call   0x414970
  414a1f:	mov    rax,QWORD PTR [rsi]
  414a22:	mov    rcx,QWORD PTR [rax+rbx*1]
  414a26:	add    rbx,0x8
  414a2a:	call   0x43a748
  414a2f:	cmp    rbx,rdi
  414a32:	jne    0x414a10
  414a34:	mov    rax,QWORD PTR [rsi]
  414a37:	mov    r8,QWORD PTR [r13+0x0]
  414a3b:	movsxd rdx,ebp
  414a3e:	sub    ebp,r12d
  414a41:	movsxd rbp,ebp
  414a44:	sub    r8,rdx
  414a47:	lea    rcx,[rax+r14*8]
  414a4b:	lea    rdx,[rax+rdx*8]
  414a4f:	shl    r8,0x3
  414a53:	call   0x43a6b0
  414a58:	mov    rax,QWORD PTR [r13+0x0]
  414a5c:	mov    rdx,QWORD PTR [rsi]
  414a5f:	sub    rax,rbp
  414a62:	mov    QWORD PTR [r13+0x0],rax
  414a66:	mov    QWORD PTR [rdx+rax*8],0x0
  414a6e:	add    rsp,0x20
  414a72:	pop    rbx
  414a73:	pop    rsi
  414a74:	pop    rdi
  414a75:	pop    rbp
  414a76:	pop    r12
  414a78:	pop    r13
  414a7a:	pop    r14
  414a7c:	ret    
  414a7d:	nop    DWORD PTR [rax]
  414a80:	push   r13
  414a82:	push   r12
  414a84:	push   rbp
  414a85:	push   rdi
  414a86:	push   rsi
  414a87:	push   rbx
  414a88:	sub    rsp,0x28
  414a8c:	mov    rbp,rcx
  414a8f:	mov    rbx,rdx
  414a92:	mov    r12,r8
  414a95:	mov    r13d,r9d
  414a98:	call   0x4124d0
  414a9d:	test   rax,rax
  414aa0:	mov    rsi,rax
  414aa3:	je     0x414b05
  414aa5:	mov    rdx,QWORD PTR [rax+0x10]
  414aa9:	lea    rcx,[rip+0x3cc08]        # 0x4516b8
  414ab0:	call   0x40be70
  414ab5:	test   eax,eax
  414ab7:	mov    edi,eax
  414ab9:	jne    0x414bd1
  414abf:	mov    eax,DWORD PTR [rip+0x3eddb]        # 0x4538a0
  414ac5:	test   eax,eax
  414ac7:	jne    0x414b75
  414acd:	movsxd rdx,DWORD PTR [rsi+0x20]
  414ad1:	mov    rcx,QWORD PTR [rsi+0x18]
  414ad5:	mov    r9,r12
  414ad8:	mov    r8d,0x1
  414ade:	call   0x43a738
  414ae3:	cmp    rax,0x1
  414ae7:	je     0x414b40
  414ae9:	mov    rcx,rsi
  414aec:	mov    edi,0x2
  414af1:	call   0x414970
  414af6:	mov    eax,edi
  414af8:	add    rsp,0x28
  414afc:	pop    rbx
  414afd:	pop    rsi
  414afe:	pop    rdi
  414aff:	pop    rbp
  414b00:	pop    r12
  414b02:	pop    r13
  414b04:	ret    
  414b05:	mov    rax,QWORD PTR [rip+0x34e94]        # 0x4499a0
  414b0c:	mov    rdx,QWORD PTR [rax]
  414b0f:	test   rdx,rdx
  414b12:	je     0x414ba0
  414b18:	lea    rcx,[rip+0x2fa86]        # 0x4445a5
  414b1f:	mov    edi,0x1
  414b24:	call   0x4144d0
  414b29:	mov    eax,edi
  414b2b:	add    rsp,0x28
  414b2f:	pop    rbx
  414b30:	pop    rsi
  414b31:	pop    rdi
  414b32:	pop    rbp
  414b33:	pop    r12
  414b35:	pop    r13
  414b37:	ret    
  414b38:	nop    DWORD PTR [rax+rax*1+0x0]
  414b40:	test   r13d,r13d
  414b43:	je     0x414b5e
  414b45:	mov    rdx,QWORD PTR [rsi+0x10]
  414b49:	lea    rcx,[rip+0x2fb90]        # 0x4446e0
  414b50:	call   0x412cb0
  414b55:	cmp    eax,0xffffffff
  414b58:	je     0x414c10
  414b5e:	mov    rcx,rsi
  414b61:	call   0x414970
  414b66:	mov    eax,edi
  414b68:	add    rsp,0x28
  414b6c:	pop    rbx
  414b6d:	pop    rsi
  414b6e:	pop    rdi
  414b6f:	pop    rbp
  414b70:	pop    r12
  414b72:	pop    r13
  414b74:	ret    
  414b75:	mov    rcx,rsi
  414b78:	call   0x409ed0
  414b7d:	lea    rcx,[rip+0x2fb49]        # 0x4446cd
  414b84:	mov    rbx,rax
  414b87:	call   0x433f18
  414b8c:	mov    rdx,rbx
  414b8f:	mov    rcx,rax
  414b92:	call   0x4146b0
  414b97:	jmp    0x414acd
  414b9c:	nop    DWORD PTR [rax+0x0]
  414ba0:	test   rbp,rbp
  414ba3:	je     0x414bf0
  414ba5:	cmp    BYTE PTR [rbx],0x28
  414ba8:	je     0x414bf0
  414baa:	mov    rcx,rbp
  414bad:	mov    edi,0x1
  414bb2:	call   0x409e60
  414bb7:	mov    rdx,rax
  414bba:	mov    rax,QWORD PTR [rip+0x34e8f]        # 0x449a50
  414bc1:	mov    r8,rbx
  414bc4:	mov    rcx,QWORD PTR [rax]
  414bc7:	call   0x4144d0
  414bcc:	jmp    0x414af6
  414bd1:	mov    rcx,rsi
  414bd4:	xor    edi,edi
  414bd6:	call   0x414970
  414bdb:	mov    eax,edi
  414bdd:	add    rsp,0x28
  414be1:	pop    rbx
  414be2:	pop    rsi
  414be3:	pop    rdi
  414be4:	pop    rbp
  414be5:	pop    r12
  414be7:	pop    r13
  414be9:	ret    
  414bea:	nop    WORD PTR [rax+rax*1+0x0]
  414bf0:	mov    rax,QWORD PTR [rip+0x34e69]        # 0x449a60
  414bf7:	mov    rdx,rbx
  414bfa:	mov    edi,0x1
  414bff:	mov    rcx,QWORD PTR [rax]
  414c02:	call   0x4144d0
  414c07:	jmp    0x414af6
  414c0c:	nop    DWORD PTR [rax+0x0]
  414c10:	mov    rbx,QWORD PTR [rsi+0x30]
  414c14:	test   rbx,rbx
  414c17:	je     0x414b5e
  414c1d:	mov    rdx,QWORD PTR [rbx]
  414c20:	test   rdx,rdx
  414c23:	je     0x414b5e
  414c29:	add    rbx,0x8
  414c2d:	jmp    0x414c41
  414c2f:	nop
  414c30:	add    rbx,0x8
  414c34:	mov    rdx,QWORD PTR [rbx-0x8]
  414c38:	test   rdx,rdx
  414c3b:	je     0x414b5e
  414c41:	cmp    DWORD PTR [rdx+0x24],0x1
  414c45:	jne    0x414c30
  414c47:	cmp    QWORD PTR [rdx+0x8],0x0
  414c4c:	jne    0x414c30
  414c4e:	mov    rdx,QWORD PTR [rdx+0x10]
  414c52:	mov    r9d,r13d
  414c55:	mov    r8,r12
  414c58:	mov    rcx,rbp
  414c5b:	call   0x414a80
  414c60:	cmp    eax,0x2
  414c63:	jne    0x414c30
  414c65:	jmp    0x414ae9
  414c6a:	nop    WORD PTR [rax+rax*1+0x0]
  414c70:	push   rdi
  414c71:	push   rsi
  414c72:	push   rbx
  414c73:	sub    rsp,0x20
  414c77:	mov    rdx,QWORD PTR [rcx+0xb0]
  414c7e:	xor    edi,edi
  414c80:	test   edx,edx
  414c82:	jne    0x414c90
  414c84:	mov    eax,edi
  414c86:	add    rsp,0x20
  414c8a:	pop    rbx
  414c8b:	pop    rsi
  414c8c:	pop    rdi
  414c8d:	ret    
  414c8e:	xchg   ax,ax
  414c90:	movsxd rdx,edx
  414c93:	mov    rax,QWORD PTR [rcx+0xa8]
  414c9a:	mov    rbx,rcx
  414c9d:	lea    rsi,[rdx*8+0x0]
  414ca5:	mov    rax,QWORD PTR [rax+rsi*1-0x8]
  414caa:	mov    rcx,QWORD PTR [rax]
  414cad:	call   0x414970
  414cb2:	mov    rax,QWORD PTR [rbx+0xa8]
  414cb9:	mov    rcx,QWORD PTR [rax+rsi*1-0x8]
  414cbe:	call   0x43a748
  414cc3:	mov    rax,QWORD PTR [rbx+0xa8]
  414cca:	mov    QWORD PTR [rax+rsi*1-0x8],0x0
  414cd3:	mov    rax,QWORD PTR [rbx+0xb0]
  414cda:	lea    rsi,[rax-0x1]
  414cde:	test   esi,esi
  414ce0:	mov    QWORD PTR [rbx+0xb0],rsi
  414ce7:	jne    0x414d00
  414ce9:	mov    eax,edi
  414ceb:	mov    QWORD PTR [rbx+0x20],0x0
  414cf3:	add    rsp,0x20
  414cf7:	pop    rbx
  414cf8:	pop    rsi
  414cf9:	pop    rdi
  414cfa:	ret    
  414cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  414d00:	mov    rax,QWORD PTR [rbx+0xa8]
  414d07:	movsxd rdi,esi
  414d0a:	mov    rcx,QWORD PTR [rbx+0x98]
  414d11:	shl    rdi,0x3
  414d15:	mov    rax,QWORD PTR [rax+rdi*1-0x8]
  414d1a:	mov    rax,QWORD PTR [rax]
  414d1d:	mov    DWORD PTR [rbx+0x28],0x0
  414d24:	mov    DWORD PTR [rbx+0x2c],0x0
  414d2b:	mov    QWORD PTR [rbx+0x20],rax
  414d2f:	call   0x43a748
  414d34:	mov    rcx,QWORD PTR [rbx+0x60]
  414d38:	mov    QWORD PTR [rbx+0x98],0x0
  414d43:	call   0x43a748
  414d48:	mov    rcx,QWORD PTR [rbx+0x68]
  414d4c:	mov    QWORD PTR [rbx+0x60],0x0
  414d54:	call   0x43a748
  414d59:	mov    rax,QWORD PTR [rbx+0xa8]
  414d60:	mov    QWORD PTR [rbx+0x68],0x0
  414d68:	or     DWORD PTR [rbx+0x80],0x1
  414d6f:	mov    rax,QWORD PTR [rax+rdi*1-0x8]
  414d74:	mov    edi,esi
  414d76:	mov    eax,DWORD PTR [rax+0xc]
  414d79:	mov    DWORD PTR [rbx+0x2c],eax
  414d7c:	mov    eax,edi
  414d7e:	add    rsp,0x20
  414d82:	pop    rbx
  414d83:	pop    rsi
  414d84:	pop    rdi
  414d85:	ret    
  414d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d90:	push   rsi
  414d91:	push   rbx
  414d92:	sub    rsp,0x28
  414d96:	mov    rbx,rcx
  414d99:	call   0x414c70
  414d9e:	test   eax,eax
  414da0:	jne    0x414db1
  414da2:	mov    QWORD PTR [rbx+0x20],0x0
  414daa:	add    rsp,0x28
  414dae:	pop    rbx
  414daf:	pop    rsi
  414db0:	ret    
  414db1:	cdqe   
  414db3:	mov    rcx,rbx
  414db6:	lea    rsi,[rax*8+0x0]
  414dbe:	mov    rax,QWORD PTR [rbx+0xa8]
  414dc5:	mov    rax,QWORD PTR [rax+rsi*1-0x8]
  414dca:	mov    rdx,QWORD PTR [rax]
  414dcd:	call   0x420f80
  414dd2:	mov    rax,QWORD PTR [rip+0x34a27]        # 0x449800
  414dd9:	mov    eax,DWORD PTR [rax]
  414ddb:	test   eax,eax
  414ddd:	jne    0x414e21
  414ddf:	mov    rax,QWORD PTR [rbx+0xa8]
  414de6:	mov    rcx,rbx
  414de9:	mov    rax,QWORD PTR [rax+rsi*1-0x8]
  414dee:	mov    edx,DWORD PTR [rax+0x8]
  414df1:	call   0x420550
  414df6:	mov    rax,QWORD PTR [rbx+0xa8]
  414dfd:	mov    rcx,rbx
  414e00:	mov    rax,QWORD PTR [rax+rsi*1-0x8]
  414e05:	mov    eax,DWORD PTR [rax+0xc]
  414e08:	mov    DWORD PTR [rbx+0x2c],eax
  414e0b:	call   0x420be0
  414e10:	mov    rax,QWORD PTR [rbx+0x20]
  414e14:	mov    edx,DWORD PTR [rbx+0x2c]
  414e17:	mov    DWORD PTR [rax+0x24],edx
  414e1a:	add    rsp,0x28
  414e1e:	pop    rbx
  414e1f:	pop    rsi
  414e20:	ret    
  414e21:	mov    rcx,rbx
  414e24:	call   0x407650
  414e29:	jmp    0x414ddf
  414e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  414e30:	push   rsi
  414e31:	push   rbx
  414e32:	sub    rsp,0x28
  414e36:	xor    ebx,ebx
  414e38:	cmp    QWORD PTR [rcx+0xb0],0x0
  414e40:	mov    rsi,rcx
  414e43:	je     0x414e75
  414e45:	mov    rax,QWORD PTR [rsi+0xa8]
  414e4c:	mov    rax,QWORD PTR [rax+rbx*8]
  414e50:	mov    rcx,QWORD PTR [rax]
  414e53:	call   0x414970
  414e58:	mov    rax,QWORD PTR [rsi+0xa8]
  414e5f:	mov    rcx,QWORD PTR [rax+rbx*8]
  414e63:	add    rbx,0x1
  414e67:	call   0x43a748
  414e6c:	cmp    QWORD PTR [rsi+0xb0],rbx
  414e73:	ja     0x414e45
  414e75:	mov    rcx,QWORD PTR [rsi+0xa8]
  414e7c:	add    rsp,0x28
  414e80:	pop    rbx
  414e81:	pop    rsi
  414e82:	jmp    0x43a748
  414e87:	nop    WORD PTR [rax+rax*1+0x0]
  414e90:	push   rsi
  414e91:	push   rbx
  414e92:	sub    rsp,0x28
  414e96:	mov    rax,QWORD PTR [rcx+0xb0]
  414e9d:	mov    rbx,rcx
  414ea0:	test   rax,rax
  414ea3:	je     0x414ebe
  414ea5:	mov    rcx,QWORD PTR [rcx+0xa8]
  414eac:	mov    rsi,QWORD PTR [rbx+0x20]
  414eb0:	mov    rax,QWORD PTR [rcx+rax*8-0x8]
  414eb5:	cmp    QWORD PTR [rax],rsi
  414eb8:	je     0x415000
  414ebe:	mov    rcx,QWORD PTR [rbx+0x98]
  414ec5:	mov    QWORD PTR [rbx+0x20],rdx
  414ec9:	mov    DWORD PTR [rbx+0x28],0x0
  414ed0:	mov    DWORD PTR [rbx+0x2c],0x0
  414ed7:	call   0x43a748
  414edc:	mov    rcx,QWORD PTR [rbx+0x60]
  414ee0:	mov    QWORD PTR [rbx+0x98],0x0
  414eeb:	call   0x43a748
  414ef0:	mov    rcx,QWORD PTR [rbx+0x68]
  414ef4:	mov    QWORD PTR [rbx+0x60],0x0
  414efc:	call   0x43a748
  414f01:	or     DWORD PTR [rbx+0x80],0x1
  414f08:	mov    ecx,0x10
  414f0d:	mov    QWORD PTR [rbx+0x68],0x0
  414f15:	call   0x4227b0
  414f1a:	mov    rsi,rax
  414f1d:	mov    rax,QWORD PTR [rbx+0x20]
  414f21:	mov    rcx,QWORD PTR [rbx+0xb0]
  414f28:	mov    rdx,QWORD PTR [rbx+0xb8]
  414f2f:	mov    QWORD PTR [rsi],rax
  414f32:	mov    eax,DWORD PTR [rbx+0x28]
  414f35:	mov    DWORD PTR [rsi+0x8],eax
  414f38:	mov    eax,DWORD PTR [rbx+0x2c]
  414f3b:	mov    DWORD PTR [rsi+0xc],eax
  414f3e:	lea    rax,[rcx+0x2]
  414f42:	cmp    rax,rdx
  414f45:	jb     0x414ff1
  414f4b:	test   rdx,rdx
  414f4e:	je     0x414fd0
  414f54:	mov    rcx,QWORD PTR [rbx+0xa8]
  414f5b:	test   rcx,rcx
  414f5e:	je     0x415011
  414f64:	movabs rax,0x1555555555555554
  414f6e:	cmp    rdx,rax
  414f71:	ja     0x415019
  414f77:	mov    rax,rdx
  414f7a:	shr    rax,1
  414f7d:	lea    r8,[rdx+rax*1+0x1]
  414f82:	lea    rdx,[r8*8+0x0]
  414f8a:	mov    QWORD PTR [rbx+0xb8],r8
  414f91:	call   0x422820
  414f96:	mov    rcx,QWORD PTR [rbx+0xb0]
  414f9d:	mov    QWORD PTR [rbx+0xa8],rax
  414fa4:	lea    rdx,[rcx+0x1]
  414fa8:	mov    QWORD PTR [rbx+0xb0],rdx
  414faf:	mov    QWORD PTR [rax+rcx*8],rsi
  414fb3:	mov    rax,QWORD PTR [rbx+0xa8]
  414fba:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  414fc3:	add    rsp,0x28
  414fc7:	pop    rbx
  414fc8:	pop    rsi
  414fc9:	ret    
  414fca:	nop    WORD PTR [rax+rax*1+0x0]
  414fd0:	mov    rcx,QWORD PTR [rbx+0xa8]
  414fd7:	mov    QWORD PTR [rbx+0xb8],0x10
  414fe2:	mov    dl,0x10
  414fe4:	mov    r8d,0x10
  414fea:	test   rcx,rcx
  414fed:	jne    0x414f77
  414fef:	jmp    0x414f82
  414ff1:	mov    rax,QWORD PTR [rbx+0xa8]
  414ff8:	jmp    0x414fa4
  414ffa:	nop    WORD PTR [rax+rax*1+0x0]
  415000:	mov    ecx,DWORD PTR [rbx+0x28]
  415003:	mov    DWORD PTR [rax+0x8],ecx
  415006:	mov    ecx,DWORD PTR [rbx+0x2c]
  415009:	mov    DWORD PTR [rax+0xc],ecx
  41500c:	jmp    0x414ebe
  415011:	mov    r8,rdx
  415014:	jmp    0x414f82
  415019:	call   0x422a20
  41501e:	nop
  41501f:	nop
  415020:	push   rdi
  415021:	push   rsi
  415022:	push   rbx
  415023:	sub    rsp,0x20
  415027:	mov    rax,QWORD PTR [rcx+0xb0]
  41502e:	mov    rbx,rcx
  415031:	test   rax,rax
  415034:	je     0x41504f
  415036:	mov    rcx,QWORD PTR [rcx+0xa8]
  41503d:	mov    rdi,QWORD PTR [rbx+0x20]
  415041:	mov    rax,QWORD PTR [rcx+rax*8-0x8]
  415046:	cmp    QWORD PTR [rax],rdi
  415049:	je     0x415180
  41504f:	mov    rcx,rbx
  415052:	call   0x420f80
  415057:	mov    ecx,0x10
  41505c:	call   0x4227b0
  415061:	mov    rsi,rax
  415064:	mov    rax,QWORD PTR [rbx+0x20]
  415068:	mov    rcx,QWORD PTR [rbx+0xb0]
  41506f:	mov    rdx,QWORD PTR [rbx+0xb8]
  415076:	mov    QWORD PTR [rsi],rax
  415079:	mov    eax,DWORD PTR [rbx+0x28]
  41507c:	mov    DWORD PTR [rsi+0x8],eax
  41507f:	mov    eax,DWORD PTR [rbx+0x2c]
  415082:	mov    DWORD PTR [rsi+0xc],eax
  415085:	lea    rax,[rcx+0x2]
  415089:	cmp    rax,rdx
  41508c:	jae    0x415100
  41508e:	mov    rax,QWORD PTR [rbx+0xa8]
  415095:	lea    rdx,[rcx+0x1]
  415099:	mov    QWORD PTR [rbx+0xb0],rdx
  4150a0:	mov    QWORD PTR [rax+rcx*8],rsi
  4150a4:	mov    rax,QWORD PTR [rbx+0xa8]
  4150ab:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  4150b4:	mov    rax,QWORD PTR [rip+0x34745]        # 0x449800
  4150bb:	mov    eax,DWORD PTR [rax]
  4150bd:	test   eax,eax
  4150bf:	je     0x4150f0
  4150c1:	mov    rax,QWORD PTR [rbx+0x20]
  4150c5:	test   BYTE PTR [rax+0x2c],0x10
  4150c9:	je     0x4150df
  4150cb:	mov    rsi,QWORD PTR [rax+0x10]
  4150cf:	lea    rdi,[rip+0x2f610]        # 0x4446e6
  4150d6:	mov    ecx,0xc
  4150db:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4150dd:	je     0x4150f0
  4150df:	mov    rcx,rbx
  4150e2:	add    rsp,0x20
  4150e6:	pop    rbx
  4150e7:	pop    rsi
  4150e8:	pop    rdi
  4150e9:	jmp    0x407650
  4150ee:	xchg   ax,ax
  4150f0:	add    rsp,0x20
  4150f4:	pop    rbx
  4150f5:	pop    rsi
  4150f6:	pop    rdi
  4150f7:	ret    
  4150f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415100:	test   rdx,rdx
  415103:	jne    0x415130
  415105:	mov    rcx,QWORD PTR [rbx+0xa8]
  41510c:	mov    QWORD PTR [rbx+0xb8],0x10
  415117:	mov    dl,0x10
  415119:	mov    r8d,0x10
  41511f:	test   rcx,rcx
  415122:	jne    0x41514b
  415124:	jmp    0x415156
  415126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415130:	mov    rcx,QWORD PTR [rbx+0xa8]
  415137:	test   rcx,rcx
  41513a:	je     0x415191
  41513c:	movabs rax,0x1555555555555554
  415146:	cmp    rdx,rax
  415149:	ja     0x415196
  41514b:	mov    rax,rdx
  41514e:	shr    rax,1
  415151:	lea    r8,[rdx+rax*1+0x1]
  415156:	lea    rdx,[r8*8+0x0]
  41515e:	mov    QWORD PTR [rbx+0xb8],r8
  415165:	call   0x422820
  41516a:	mov    rcx,QWORD PTR [rbx+0xb0]
  415171:	mov    QWORD PTR [rbx+0xa8],rax
  415178:	jmp    0x415095
  41517d:	nop    DWORD PTR [rax]
  415180:	mov    ecx,DWORD PTR [rbx+0x28]
  415183:	mov    DWORD PTR [rax+0x8],ecx
  415186:	mov    ecx,DWORD PTR [rbx+0x2c]
  415189:	mov    DWORD PTR [rax+0xc],ecx
  41518c:	jmp    0x41504f
  415191:	mov    r8,rdx
  415194:	jmp    0x415156
  415196:	call   0x422a20
  41519b:	nop
  41519c:	nop    DWORD PTR [rax+0x0]
  4151a0:	sub    rsp,0x28
  4151a4:	mov    rdx,QWORD PTR [rip+0x3c765]        # 0x451910
  4151ab:	test   rdx,rdx
  4151ae:	je     0x4151c0
  4151b0:	add    rsp,0x28
  4151b4:	jmp    0x415020
  4151b9:	nop    DWORD PTR [rax+0x0]
  4151c0:	lea    rcx,[rip+0x2f52b]        # 0x4446f2
  4151c7:	call   0x433f18
  4151cc:	mov    rcx,rax
  4151cf:	add    rsp,0x28
  4151d3:	jmp    0x4144d0
  4151d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4151e0:	push   r14
  4151e2:	push   r13
  4151e4:	push   r12
  4151e6:	push   rbp
  4151e7:	push   rdi
  4151e8:	push   rsi
  4151e9:	push   rbx
  4151ea:	sub    rsp,0x20
  4151ee:	lea    r13,[rip+0x2f50b]        # 0x444700
  4151f5:	mov    rbx,rcx
  4151f8:	mov    ecx,0x3
  4151fd:	mov    r12,rdx
  415200:	mov    rsi,rbx
  415203:	mov    rdi,r13
  415206:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  415208:	jne    0x4152e1
  41520e:	mov    rax,QWORD PTR [rdx+0x20]
  415212:	mov    r14,QWORD PTR [rax+0x38]
  415216:	test   r14,r14
  415219:	je     0x415305
  41521f:	mov    rcx,r14
  415222:	call   0x4095c0
  415227:	mov    rax,QWORD PTR [rip+0x34762]        # 0x449990
  41522e:	mov    r8,QWORD PTR [r12+0x20]
  415233:	mov    rdx,QWORD PTR [rax]
  415236:	mov    rax,QWORD PTR [rip+0x34743]        # 0x449980
  41523d:	mov    rcx,QWORD PTR [rax]
  415240:	call   0x412270
  415245:	test   rax,rax
  415248:	mov    rbp,rax
  41524b:	je     0x415354
  415251:	mov    ecx,0x3
  415256:	mov    rsi,rbx
  415259:	mov    rdi,r13
  41525c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41525e:	jne    0x4152c2
  415260:	mov    ebx,DWORD PTR [r12+0xb0]
  415268:	sub    ebx,0x1
  41526b:	js     0x4152c2
  41526d:	mov    rdx,QWORD PTR [r12+0xa8]
  415275:	movsxd rax,ebx
  415278:	lea    rsi,[rdx+rax*8]
  41527c:	nop    DWORD PTR [rax+0x0]
  415280:	mov    r13,QWORD PTR [rsi]
  415283:	mov    rdi,QWORD PTR [r13+0x0]
  415287:	mov    rcx,QWORD PTR [rdi]
  41528a:	test   rcx,rcx
  41528d:	je     0x4152b6
  41528f:	mov    rdx,QWORD PTR [rbp+0x0]
  415293:	call   0x43a648
  415298:	test   eax,eax
  41529a:	jne    0x4152b6
  41529c:	mov    rcx,QWORD PTR [rdi+0x10]
  4152a0:	test   rcx,rcx
  4152a3:	je     0x4152b6
  4152a5:	mov    rdx,QWORD PTR [rbp+0x10]
  4152a9:	call   0x43a648
  4152ae:	test   eax,eax
  4152b0:	je     0x415380
  4152b6:	sub    ebx,0x1
  4152b9:	sub    rsi,0x8
  4152bd:	cmp    ebx,0xffffffff
  4152c0:	jne    0x415280
  4152c2:	mov    rdx,rbp
  4152c5:	mov    rcx,r12
  4152c8:	call   0x415020
  4152cd:	mov    eax,0x1
  4152d2:	add    rsp,0x20
  4152d6:	pop    rbx
  4152d7:	pop    rsi
  4152d8:	pop    rdi
  4152d9:	pop    rbp
  4152da:	pop    r12
  4152dc:	pop    r13
  4152de:	pop    r14
  4152e0:	ret    
  4152e1:	lea    rdi,[rip+0x2f41b]        # 0x444703
  4152e8:	mov    ecx,0x5
  4152ed:	mov    rsi,rbx
  4152f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4152f2:	jne    0x415330
  4152f4:	mov    rax,QWORD PTR [rdx+0x20]
  4152f8:	mov    r14,QWORD PTR [rax+0x48]
  4152fc:	test   r14,r14
  4152ff:	jne    0x41521f
  415305:	mov    rax,QWORD PTR [rip+0x347b4]        # 0x449ac0
  41530c:	mov    rdx,rbx
  41530f:	mov    rcx,QWORD PTR [rax]
  415312:	call   0x4144d0
  415317:	xor    eax,eax
  415319:	add    rsp,0x20
  41531d:	pop    rbx
  41531e:	pop    rsi
  41531f:	pop    rdi
  415320:	pop    rbp
  415321:	pop    r12
  415323:	pop    r13
  415325:	pop    r14
  415327:	ret    
  415328:	nop    DWORD PTR [rax+rax*1+0x0]
  415330:	lea    rdi,[rip+0x2f3d1]        # 0x444708
  415337:	mov    ecx,0x5
  41533c:	mov    rsi,rbx
  41533f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  415341:	jne    0x415216
  415347:	mov    rax,QWORD PTR [rdx+0x20]
  41534b:	mov    r14,QWORD PTR [rax+0x40]
  41534f:	jmp    0x415216
  415354:	mov    rax,QWORD PTR [rip+0x34645]        # 0x4499a0
  41535b:	mov    rdx,QWORD PTR [rax]
  41535e:	test   rdx,rdx
  415361:	je     0x41538c
  415363:	lea    rcx,[rip+0x2f23b]        # 0x4445a5
  41536a:	call   0x4144d0
  41536f:	xor    eax,eax
  415371:	add    rsp,0x20
  415375:	pop    rbx
  415376:	pop    rsi
  415377:	pop    rdi
  415378:	pop    rbp
  415379:	pop    r12
  41537b:	pop    r13
  41537d:	pop    r14
  41537f:	ret    
  415380:	mov    eax,DWORD PTR [r13+0xc]
  415384:	mov    DWORD PTR [rbp+0x24],eax
  415387:	jmp    0x4152c2
  41538c:	mov    rax,QWORD PTR [rip+0x346cd]        # 0x449a60
  415393:	mov    rdx,r14
  415396:	mov    rcx,QWORD PTR [rax]
  415399:	call   0x4144d0
  41539e:	xor    eax,eax
  4153a0:	jmp    0x4152d2
  4153a5:	nop
  4153a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4153b0:	push   r14
  4153b2:	push   r13
  4153b4:	push   r12
  4153b6:	push   rbp
  4153b7:	push   rdi
  4153b8:	push   rsi
  4153b9:	push   rbx
  4153ba:	sub    rsp,0x60
  4153be:	mov    rsi,QWORD PTR [rcx+0x98]
  4153c5:	mov    r13d,DWORD PTR [rsp+0xc8]
  4153cd:	mov    rdi,rcx
  4153d0:	mov    rbp,rdx
  4153d3:	mov    r12,r8
  4153d6:	mov    ebx,r9d
  4153d9:	mov    r14d,DWORD PTR [rsp+0xd0]
  4153e1:	test   rsi,rsi
  4153e4:	je     0x4153fd
  4153e6:	mov    rcx,QWORD PTR [rcx+0x88]
  4153ed:	mov    rdx,r8
  4153f0:	call   0x43a648
  4153f5:	test   eax,eax
  4153f7:	je     0x415510
  4153fd:	mov    rcx,rsi
  415400:	call   0x43a748
  415405:	mov    rcx,QWORD PTR [rdi+0x88]
  41540c:	mov    QWORD PTR [rdi+0x98],0x0
  415417:	call   0x43a748
  41541c:	mov    rcx,r12
  41541f:	call   0x422a00
  415424:	mov    QWORD PTR [rdi+0x88],rax
  41542b:	lea    rax,[rsp+0x58]
  415430:	xor    r8d,r8d
  415433:	test   r13d,r13d
  415436:	mov    DWORD PTR [rdi+0x90],r13d
  41543d:	mov    rcx,r12
  415440:	mov    QWORD PTR [rsp+0x30],rax
  415445:	lea    rax,[rsp+0x50]
  41544a:	sete   r8b
  41544e:	xor    edx,edx
  415450:	test   r14d,r14d
  415453:	mov    QWORD PTR [rsp+0x28],rax
  415458:	movsxd rax,DWORD PTR [rbp+0x20]
  41545c:	sete   dl
  41545f:	mov    QWORD PTR [rsp+0x20],rax
  415464:	mov    r9,QWORD PTR [rbp+0x18]
  415468:	call   0x412530
  41546d:	test   eax,eax
  41546f:	jne    0x4154f7
  415475:	test   BYTE PTR [rbp+0x2d],0x40
  415479:	mov    rsi,QWORD PTR [rsp+0x50]
  41547e:	jne    0x415538
  415484:	mov    ecx,DWORD PTR [rsp+0xc0]
  41548b:	mov    eax,DWORD PTR [rbp+0x28]
  41548e:	test   ecx,ecx
  415490:	jle    0x41549a
  415492:	cmp    ebx,eax
  415494:	cmovl  ebx,eax
  415497:	mov    eax,DWORD PTR [rbp+0x20]
  41549a:	cmp    ebx,eax
  41549c:	mov    r8,QWORD PTR [rsp+0x58]
  4154a1:	jge    0x4155b0
  4154a7:	movsxd r10,ebx
  4154aa:	movsxd rdx,eax
  4154ad:	test   r8,r8
  4154b0:	je     0x4154f2
  4154b2:	mov    rax,QWORD PTR [rsi]
  4154b5:	cmp    rdx,rax
  4154b8:	jle    0x4154f2
  4154ba:	cmp    r10,rax
  4154bd:	jle    0x415618
  4154c3:	sub    r8,0x1
  4154c7:	mov    ebx,0x10
  4154cc:	xor    ecx,ecx
  4154ce:	jmp    0x4154ed
  4154d0:	mov    rax,QWORD PTR [rsi+rbx*1]
  4154d4:	cmp    rax,rdx
  4154d7:	jge    0x4154f2
  4154d9:	add    rcx,0x1
  4154dd:	cmp    r10,rax
  4154e0:	lea    r9,[rbx+0x10]
  4154e4:	jle    0x415620
  4154ea:	mov    rbx,r9
  4154ed:	cmp    rcx,r8
  4154f0:	jne    0x4154d0
  4154f2:	mov    eax,0x1
  4154f7:	add    rsp,0x60
  4154fb:	pop    rbx
  4154fc:	pop    rsi
  4154fd:	pop    rdi
  4154fe:	pop    rbp
  4154ff:	pop    r12
  415501:	pop    r13
  415503:	pop    r14
  415505:	ret    
  415506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415510:	cmp    DWORD PTR [rdi+0x90],r13d
  415517:	jne    0x4153fd
  41551d:	test   BYTE PTR [rbp+0x2d],0x40
  415521:	mov    rax,QWORD PTR [rdi+0xa0]
  415528:	mov    QWORD PTR [rsp+0x50],rsi
  41552d:	mov    QWORD PTR [rsp+0x58],rax
  415532:	je     0x415484
  415538:	mov    rcx,rsi
  41553b:	call   0x43a748
  415540:	mov    rdx,QWORD PTR [rbp+0x10]
  415544:	mov    rcx,QWORD PTR [rbp+0x0]
  415548:	call   0x4124d0
  41554d:	mov    rsi,rax
  415550:	mov    rax,QWORD PTR [rsp+0xd8]
  415558:	mov    DWORD PTR [rsp+0x30],r14d
  41555d:	mov    DWORD PTR [rsp+0x28],r13d
  415562:	mov    r9d,ebx
  415565:	mov    r8,r12
  415568:	mov    rdx,rsi
  41556b:	mov    rcx,rdi
  41556e:	mov    QWORD PTR [rsp+0x38],rax
  415573:	mov    eax,DWORD PTR [rsp+0xc0]
  41557a:	mov    DWORD PTR [rsp+0x20],eax
  41557e:	call   0x4153b0
  415583:	cmp    QWORD PTR [rdi+0x20],rsi
  415587:	je     0x4154f7
  41558d:	mov    rcx,rsi
  415590:	mov    DWORD PTR [rsp+0x4c],eax
  415594:	call   0x43a748
  415599:	mov    eax,DWORD PTR [rsp+0x4c]
  41559d:	add    rsp,0x60
  4155a1:	pop    rbx
  4155a2:	pop    rsi
  4155a3:	pop    rdi
  4155a4:	pop    rbp
  4155a5:	pop    r12
  4155a7:	pop    r13
  4155a9:	pop    r14
  4155ab:	ret    
  4155ac:	nop    DWORD PTR [rax+0x0]
  4155b0:	lea    r10d,[rax-0x1]
  4155b4:	lea    edx,[rbx+0x1]
  4155b7:	cmp    ebx,eax
  4155b9:	movsxd r10,r10d
  4155bc:	movsxd rdx,edx
  4155bf:	jle    0x4154ad
  4155c5:	sub    r8d,0x1
  4155c9:	js     0x4154f2
  4155cf:	movsxd rbx,r8d
  4155d2:	shl    rbx,0x4
  4155d6:	mov    rax,QWORD PTR [rsi+rbx*1]
  4155da:	cmp    rax,r10
  4155dd:	jl     0x4154f2
  4155e3:	cmp    rax,rdx
  4155e6:	jl     0x415620
  4155e8:	sub    rbx,0x10
  4155ec:	jmp    0x415609
  4155ee:	xchg   ax,ax
  4155f0:	mov    rax,QWORD PTR [rsi+rbx*1]
  4155f4:	cmp    r10,rax
  4155f7:	jg     0x4154f2
  4155fd:	cmp    rdx,rax
  415600:	lea    rcx,[rbx-0x10]
  415604:	jg     0x415620
  415606:	mov    rbx,rcx
  415609:	sub    r8d,0x1
  41560d:	cmp    r8d,0xffffffff
  415611:	jne    0x4155f0
  415613:	jmp    0x4154f2
  415618:	xor    ebx,ebx
  41561a:	nop    WORD PTR [rax+rax*1+0x0]
  415620:	mov    rdx,QWORD PTR [rsp+0xd8]
  415628:	mov    DWORD PTR [rdx],eax
  41562a:	or     DWORD PTR [rdi+0x80],0x1
  415631:	cmp    QWORD PTR [rdi+0x20],rbp
  415635:	je     0x415647
  415637:	mov    rdx,rbp
  41563a:	mov    rcx,rdi
  41563d:	call   0x415020
  415642:	mov    rsi,QWORD PTR [rsp+0x50]
  415647:	mov    rcx,QWORD PTR [rdi+0x98]
  41564e:	cmp    rcx,rsi
  415651:	je     0x415670
  415653:	call   0x43a748
  415658:	mov    rsi,QWORD PTR [rsp+0x50]
  41565d:	mov    rax,QWORD PTR [rsp+0x58]
  415662:	mov    QWORD PTR [rdi+0x98],rsi
  415669:	mov    QWORD PTR [rdi+0xa0],rax
  415670:	mov    edx,DWORD PTR [rsp+0xc0]
  415677:	test   edx,edx
  415679:	jle    0x4156a0
  41567b:	mov    eax,DWORD PTR [rip+0x3c027]        # 0x4516a8
  415681:	test   eax,eax
  415683:	je     0x4156a0
  415685:	mov    eax,DWORD PTR [rsi+rbx*1+0x8]
  415689:	mov    DWORD PTR [rdi+0x2c],eax
  41568c:	xor    eax,eax
  41568e:	add    rsp,0x60
  415692:	pop    rbx
  415693:	pop    rsi
  415694:	pop    rdi
  415695:	pop    rbp
  415696:	pop    r12
  415698:	pop    r13
  41569a:	pop    r14
  41569c:	ret    
  41569d:	nop    DWORD PTR [rax]
  4156a0:	mov    eax,DWORD PTR [rsi+rbx*1]
  4156a3:	jmp    0x415689
  4156a5:	nop
  4156a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4156b0:	push   r15
  4156b2:	push   r14
  4156b4:	push   r13
  4156b6:	push   r12
  4156b8:	push   rbp
  4156b9:	push   rdi
  4156ba:	push   rsi
  4156bb:	push   rbx
  4156bc:	sub    rsp,0x78
  4156c0:	mov    rdi,rcx
  4156c3:	mov    rcx,QWORD PTR [rcx+0x88]
  4156ca:	lea    r15,[rsp+0x5c]
  4156cf:	lea    r13,[rsp+0x68]
  4156d4:	lea    r12,[rdi+0x20]
  4156d8:	lea    rbp,[rsp+0x60]
  4156dd:	call   0x422a00
  4156e2:	mov    ecx,DWORD PTR [rdi+0x2c]
  4156e5:	mov    rdx,QWORD PTR [rdi+0x20]
  4156e9:	mov    QWORD PTR [rsp+0x48],rax
  4156ee:	xchg   ax,ax
  4156f0:	mov    r8,QWORD PTR [rsp+0x48]
  4156f5:	lea    r9d,[rcx-0x1]
  4156f9:	mov    QWORD PTR [rsp+0x38],r15
  4156fe:	mov    DWORD PTR [rsp+0x30],0x0
  415706:	mov    DWORD PTR [rsp+0x28],0x1
  41570e:	mov    rcx,rdi
  415711:	mov    DWORD PTR [rsp+0x20],0xffffffff
  415719:	call   0x4153b0
  41571e:	test   eax,eax
  415720:	je     0x4158c1
  415726:	mov    rax,QWORD PTR [rdi+0xb0]
  41572d:	cmp    rax,0x1
  415731:	jbe    0x415893
  415737:	mov    rdx,QWORD PTR [rdi+0xa8]
  41573e:	mov    rax,QWORD PTR [rdx+rax*8-0x10]
  415743:	mov    rax,QWORD PTR [rax]
  415746:	mov    eax,DWORD PTR [rax+0x50]
  415749:	test   eax,eax
  41574b:	je     0x415893
  415751:	mov    rcx,rdi
  415754:	call   0x414c70
  415759:	mov    rdx,QWORD PTR [rdi+0x20]
  41575d:	movsxd rcx,DWORD PTR [rdx+0x50]
  415761:	mov    rax,QWORD PTR [rdx+0x30]
  415765:	mov    rax,QWORD PTR [rax+rcx*8-0x8]
  41576a:	test   rax,rax
  41576d:	je     0x41579e
  41576f:	mov    rdx,QWORD PTR [rax+0x10]
  415773:	mov    rcx,QWORD PTR [rax+0x8]
  415777:	mov    r9,r13
  41577a:	mov    QWORD PTR [rsp+0x20],rbp
  41577f:	mov    r8,r12
  415782:	call   0x413e70
  415787:	test   eax,eax
  415789:	je     0x41579a
  41578b:	mov    rax,QWORD PTR [rsp+0x60]
  415790:	mov    rax,QWORD PTR [rax]
  415793:	and    DWORD PTR [rax+0x18],0xffff7fff
  41579a:	mov    rdx,QWORD PTR [rdi+0x20]
  41579e:	test   BYTE PTR [rdx+0x2d],0x2
  4157a2:	jne    0x415820
  4157a4:	mov    r14d,DWORD PTR [rdx+0x50]
  4157a8:	cmp    r14d,0xffffff9d
  4157ac:	je     0x4158cb
  4157b2:	mov    esi,r14d
  4157b5:	sub    esi,0x2
  4157b8:	js     0x415820
  4157ba:	movsxd rbx,esi
  4157bd:	shl    rbx,0x3
  4157c1:	jmp    0x4157cf
  4157c3:	sub    esi,0x1
  4157c6:	sub    rbx,0x8
  4157ca:	cmp    esi,0xffffffff
  4157cd:	je     0x415820
  4157cf:	mov    rax,QWORD PTR [rdx+0x30]
  4157d3:	mov    rax,QWORD PTR [rax+rbx*1]
  4157d7:	mov    r14d,DWORD PTR [rax+0x24]
  4157db:	cmp    r14d,0x1
  4157df:	jne    0x4157c3
  4157e1:	mov    rdx,QWORD PTR [rax+0x10]
  4157e5:	mov    rcx,QWORD PTR [rax+0x8]
  4157e9:	mov    r9,r13
  4157ec:	mov    QWORD PTR [rsp+0x20],rbp
  4157f1:	mov    r8,r12
  4157f4:	call   0x413e70
  4157f9:	test   eax,eax
  4157fb:	je     0x41580b
  4157fd:	mov    rdx,QWORD PTR [rsp+0x60]
  415802:	mov    rax,QWORD PTR [rdx]
  415805:	test   BYTE PTR [rax+0x19],0x80
  415809:	jne    0x415830
  41580b:	sub    esi,0x1
  41580e:	sub    rbx,0x8
  415812:	mov    rdx,QWORD PTR [rdi+0x20]
  415816:	cmp    esi,0xffffffff
  415819:	jne    0x4157cf
  41581b:	nop    DWORD PTR [rax+rax*1+0x0]
  415820:	mov    ecx,DWORD PTR [rdi+0x2c]
  415823:	mov    DWORD PTR [rdx+0x50],0xffffff9d
  41582a:	jmp    0x4156f0
  41582f:	nop
  415830:	mov    rcx,QWORD PTR [rsp+0x68]
  415835:	call   0x4124e0
  41583a:	test   rax,rax
  41583d:	je     0x41580b
  41583f:	mov    rdx,QWORD PTR [rdi+0x20]
  415843:	add    esi,0x1
  415846:	mov    rcx,rdi
  415849:	mov    DWORD PTR [rdx+0x50],esi
  41584c:	mov    rdx,rax
  41584f:	call   0x414e90
  415854:	mov    rdx,QWORD PTR [rdi+0x20]
  415858:	mov    rax,QWORD PTR [rdx+0x30]
  41585c:	mov    ecx,DWORD PTR [rdx+0x20]
  41585f:	cmp    QWORD PTR [rax],0x0
  415863:	mov    DWORD PTR [rdi+0x2c],ecx
  415866:	je     0x4158d3
  415868:	add    rax,0x8
  41586c:	xor    r10d,r10d
  41586f:	nop
  415870:	add    rax,0x8
  415874:	add    r10d,0x1
  415878:	cmp    QWORD PTR [rax-0x8],0x0
  41587d:	jne    0x415870
  41587f:	test   BYTE PTR [rdx+0x2d],0x2
  415883:	lea    r14d,[r10+0x1]
  415887:	mov    DWORD PTR [rdx+0x50],r14d
  41588b:	je     0x4157b2
  415891:	jmp    0x415823
  415893:	lea    rcx,[rip+0x2ee73]        # 0x44470d
  41589a:	call   0x433f18
  41589f:	mov    rcx,rax
  4158a2:	call   0x4144d0
  4158a7:	mov    rcx,QWORD PTR [rsp+0x48]
  4158ac:	add    rsp,0x78
  4158b0:	pop    rbx
  4158b1:	pop    rsi
  4158b2:	pop    rdi
  4158b3:	pop    rbp
  4158b4:	pop    r12
  4158b6:	pop    r13
  4158b8:	pop    r14
  4158ba:	pop    r15
  4158bc:	jmp    0x43a748
  4158c1:	mov    rcx,rdi
  4158c4:	call   0x4135e0
  4158c9:	jmp    0x4158a7
  4158cb:	mov    ecx,DWORD PTR [rdi+0x2c]
  4158ce:	jmp    0x4156f0
  4158d3:	test   BYTE PTR [rdx+0x2d],0x2
  4158d7:	mov    DWORD PTR [rdx+0x50],0x1
  4158de:	je     0x4157b2
  4158e4:	jmp    0x415823
  4158e9:	nop    DWORD PTR [rax+0x0]
  4158f0:	push   r15
  4158f2:	push   r14
  4158f4:	push   r13
  4158f6:	push   r12
  4158f8:	push   rbp
  4158f9:	push   rdi
  4158fa:	push   rsi
  4158fb:	push   rbx
  4158fc:	sub    rsp,0x88
  415903:	mov    r12,QWORD PTR [rdx+0x20]
  415907:	mov    QWORD PTR [rsp+0xd0],rcx
  41590f:	mov    rcx,rdx
  415912:	mov    r13,rdx
  415915:	mov    r14d,r8d
  415918:	mov    DWORD PTR [rsp+0xe8],r9d
  415920:	call   0x409e30
  415925:	test   rax,rax
  415928:	mov    QWORD PTR [rsp+0x48],rax
  41592d:	je     0x415957
  41592f:	mov    rax,QWORD PTR [rax+0x58]
  415933:	test   rax,rax
  415936:	je     0x415957
  415938:	mov    rdx,QWORD PTR [r13+0x20]
  41593c:	lea    rdi,[rip+0x2ee42]        # 0x444785
  415943:	mov    ecx,0x2
  415948:	mov    r15,QWORD PTR [rdx+0x10]
  41594c:	mov    rsi,r15
  41594f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  415951:	jne    0x415b6b
  415957:	mov    DWORD PTR [rsp+0x60],0x0
  41595f:	mov    QWORD PTR [rsp+0x68],0x0
  415968:	mov    r15d,0xffffffff
  41596e:	mov    rax,QWORD PTR [rsp+0xf0]
  415976:	xor    esi,esi
  415978:	mov    r9d,DWORD PTR [rax]
  41597b:	lea    eax,[rbp-0x1]
  41597e:	movsxd rdi,eax
  415981:	mov    DWORD PTR [rsp+0x64],eax
  415985:	lea    rax,[rsp+0x78]
  41598a:	shl    rdi,0x3
  41598e:	mov    QWORD PTR [rsp+0x58],rax
  415993:	mov    rax,r12
  415996:	mov    r12d,ebx
  415999:	mov    rbx,rax
  41599c:	nop    DWORD PTR [rax+0x0]
  4159a0:	mov    rax,QWORD PTR [rsp+0xf0]
  4159a8:	mov    r8,QWORD PTR [rsp+0xd0]
  4159b0:	mov    rdx,rbx
  4159b3:	mov    DWORD PTR [rsp+0x20],r14d
  4159b8:	mov    rcx,r13
  4159bb:	mov    QWORD PTR [rsp+0x38],rax
  4159c0:	mov    eax,DWORD PTR [rip+0x29176]        # 0x43eb3c
  4159c6:	mov    DWORD PTR [rsp+0x30],eax
  4159ca:	mov    eax,DWORD PTR [rsp+0xe8]
  4159d1:	mov    DWORD PTR [rsp+0x28],eax
  4159d5:	call   0x4153b0
  4159da:	cmp    QWORD PTR [r13+0x20],rbx
  4159de:	je     0x4159f0
  4159e0:	mov    rcx,rbx
  4159e3:	mov    DWORD PTR [rsp+0x50],eax
  4159e7:	call   0x414970
  4159ec:	mov    eax,DWORD PTR [rsp+0x50]
  4159f0:	cmp    eax,0x2
  4159f3:	je     0x415be4
  4159f9:	test   eax,eax
  4159fb:	je     0x415bee
  415a01:	mov    r9d,DWORD PTR [rsp+0x60]
  415a06:	test   r9d,r9d
  415a09:	je     0x415a70
  415a0b:	add    r15d,r14d
  415a0e:	cmp    r12d,r15d
  415a11:	je     0x415a70
  415a13:	mov    rax,QWORD PTR [rsp+0x48]
  415a18:	mov    ecx,DWORD PTR [rsp+0x64]
  415a1c:	mov    rdx,QWORD PTR [rax+0x58]
  415a20:	jmp    0x415a48
  415a22:	cmp    r15d,ebp
  415a25:	je     0x415a60
  415a27:	movsxd rax,r15d
  415a2a:	shl    rax,0x3
  415a2e:	mov    rax,QWORD PTR [rdx+rax*1]
  415a32:	mov    r8d,DWORD PTR [rax+0x40]
  415a36:	mov    QWORD PTR [rsp+0x78],rax
  415a3b:	test   r8d,r8d
  415a3e:	jne    0x415aa0
  415a40:	add    r15d,r14d
  415a43:	cmp    r12d,r15d
  415a46:	je     0x415a70
  415a48:	test   r15d,r15d
  415a4b:	jns    0x415a22
  415a4d:	mov    rax,rdi
  415a50:	mov    r15d,ecx
  415a53:	lea    rsi,[rip+0x2ecc6]        # 0x444720
  415a5a:	jmp    0x415a2e
  415a5c:	nop    DWORD PTR [rax+0x0]
  415a60:	xor    eax,eax
  415a62:	lea    rsi,[rip+0x2ece7]        # 0x444750
  415a69:	xor    r15d,r15d
  415a6c:	jmp    0x415a2e
  415a6e:	xchg   ax,ax
  415a70:	mov    rax,QWORD PTR [rip+0x33e49]        # 0x4498c0
  415a77:	mov    eax,DWORD PTR [rax]
  415a79:	test   eax,eax
  415a7b:	je     0x415c51
  415a81:	mov    ebx,0xffffffff
  415a86:	mov    eax,ebx
  415a88:	add    rsp,0x88
  415a8f:	pop    rbx
  415a90:	pop    rsi
  415a91:	pop    rdi
  415a92:	pop    rbp
  415a93:	pop    r12
  415a95:	pop    r13
  415a97:	pop    r14
  415a99:	pop    r15
  415a9b:	ret    
  415a9c:	nop    DWORD PTR [rax+0x0]
  415aa0:	cmp    r12d,r15d
  415aa3:	je     0x415a70
  415aa5:	mov    rbx,QWORD PTR [rip+0x33e14]        # 0x4498c0
  415aac:	mov    ecx,DWORD PTR [rbx]
  415aae:	test   ecx,ecx
  415ab0:	jne    0x415ae7
  415ab2:	mov    rbx,QWORD PTR [rax]
  415ab5:	cmp    rbx,QWORD PTR [rsp+0x68]
  415aba:	je     0x415ae7
  415abc:	mov    rcx,rbx
  415abf:	call   0x409e60
  415ac4:	lea    rcx,[rip+0x2ecbc]        # 0x444787
  415acb:	mov    QWORD PTR [rsp+0x50],rax
  415ad0:	call   0x433f18
  415ad5:	mov    rdx,QWORD PTR [rsp+0x50]
  415ada:	mov    rcx,rax
  415add:	call   0x4210d0
  415ae2:	mov    QWORD PTR [rsp+0x68],rbx
  415ae7:	mov    rcx,QWORD PTR [r13+0x98]
  415aee:	call   0x43a748
  415af3:	mov    rdx,QWORD PTR [rsp+0x58]
  415af8:	mov    rcx,QWORD PTR [rsp+0x48]
  415afd:	mov    QWORD PTR [r13+0x98],0x0
  415b08:	call   0x4124f0
  415b0d:	test   rax,rax
  415b10:	mov    rbx,rax
  415b13:	je     0x415c20
  415b19:	xor    r9d,r9d
  415b1c:	test   r14d,r14d
  415b1f:	js     0x415b60
  415b21:	xor    ecx,ecx
  415b23:	mov    DWORD PTR [rsp+0x50],r9d
  415b28:	call   0x413fa0
  415b2d:	mov    ecx,0x67
  415b32:	call   QWORD PTR [rip+0x3f060]        # 0x454b98
  415b38:	movsxd rdx,DWORD PTR [rip+0x3bdc5]        # 0x451904
  415b3f:	lea    rcx,[rip+0x3bbba]        # 0x451700
  415b46:	and    eax,0xffffffbf
  415b49:	mov    r9d,DWORD PTR [rsp+0x50]
  415b4e:	movzx  edx,BYTE PTR [rcx+rdx*1]
  415b52:	cmp    edx,eax
  415b54:	jne    0x4159a0
  415b5a:	jmp    0x415a81
  415b5f:	nop
  415b60:	mov    rax,QWORD PTR [rsp+0x78]
  415b65:	mov    r9d,DWORD PTR [rax+0x40]
  415b69:	jmp    0x415b21
  415b6b:	mov    rsi,QWORD PTR [rax]
  415b6e:	test   rsi,rsi
  415b71:	je     0x415c69
  415b77:	lea    rdi,[rax+0x8]
  415b7b:	xor    ebp,ebp
  415b7d:	mov    rax,rsi
  415b80:	xor    ecx,ecx
  415b82:	mov    QWORD PTR [rsp+0x50],r12
  415b87:	mov    rsi,r15
  415b8a:	mov    r12d,ebp
  415b8d:	mov    r15,rdi
  415b90:	mov    rbp,rcx
  415b93:	mov    rdi,rax
  415b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ba0:	mov    rdx,QWORD PTR [rdi+0x8]
  415ba4:	mov    rcx,rsi
  415ba7:	call   0x43a648
  415bac:	test   eax,eax
  415bae:	jne    0x415bb6
  415bb0:	mov    rbp,QWORD PTR [rdi]
  415bb3:	mov    ebx,r12d
  415bb6:	add    r15,0x8
  415bba:	mov    rdi,QWORD PTR [r15-0x8]
  415bbe:	add    r12d,0x1
  415bc2:	test   rdi,rdi
  415bc5:	jne    0x415ba0
  415bc7:	mov    QWORD PTR [rsp+0x68],rbp
  415bcc:	mov    ebp,r12d
  415bcf:	mov    r12,QWORD PTR [rsp+0x50]
  415bd4:	mov    r15d,ebx
  415bd7:	mov    DWORD PTR [rsp+0x60],0x1
  415bdf:	jmp    0x41596e
  415be4:	mov    ebx,0x1
  415be9:	jmp    0x415a86
  415bee:	mov    rax,QWORD PTR [rip+0x33ccb]        # 0x4498c0
  415bf5:	mov    ebx,DWORD PTR [rax]
  415bf7:	test   ebx,ebx
  415bf9:	jne    0x415c62
  415bfb:	test   rsi,rsi
  415bfe:	je     0x415cae
  415c04:	mov    rcx,rsi
  415c07:	call   0x433f18
  415c0c:	lea    rcx,[rip+0x2e992]        # 0x4445a5
  415c13:	mov    rdx,rax
  415c16:	call   0x4210d0
  415c1b:	jmp    0x415a86
  415c20:	mov    rax,QWORD PTR [rip+0x33c99]        # 0x4498c0
  415c27:	mov    edx,DWORD PTR [rax]
  415c29:	test   edx,edx
  415c2b:	jne    0x415a81
  415c31:	mov    rax,QWORD PTR [rip+0x33d68]        # 0x4499a0
  415c38:	mov    rdx,QWORD PTR [rax]
  415c3b:	test   rdx,rdx
  415c3e:	je     0x415c79
  415c40:	lea    rcx,[rip+0x2e95e]        # 0x4445a5
  415c47:	call   0x4144d0
  415c4c:	jmp    0x415a81
  415c51:	lea    rcx,[rip+0x2eb48]        # 0x4447a0
  415c58:	call   0x433f18
  415c5d:	mov    rdx,rax
  415c60:	jmp    0x415c40
  415c62:	xor    ebx,ebx
  415c64:	jmp    0x415a86
  415c69:	mov    QWORD PTR [rsp+0x68],0x0
  415c72:	xor    ebp,ebp
  415c74:	jmp    0x415bd4
  415c79:	mov    rax,QWORD PTR [rsp+0x78]
  415c7e:	mov    rbx,QWORD PTR [rax+0x8]
  415c82:	mov    rax,QWORD PTR [rsp+0x48]
  415c87:	mov    rcx,QWORD PTR [rax]
  415c8a:	call   0x409e60
  415c8f:	mov    rdx,rax
  415c92:	mov    rax,QWORD PTR [rip+0x33db7]        # 0x449a50
  415c99:	mov    r8,rbx
  415c9c:	mov    ebx,0xffffffff
  415ca1:	mov    rcx,QWORD PTR [rax]
  415ca4:	call   0x4144d0
  415ca9:	jmp    0x415a86
  415cae:	call   0x421060
  415cb3:	jmp    0x415a86
  415cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  415cc0:	push   r15
  415cc2:	push   r14
  415cc4:	push   r13
  415cc6:	push   r12
  415cc8:	push   rbp
  415cc9:	push   rdi
  415cca:	push   rsi
  415ccb:	push   rbx
  415ccc:	sub    rsp,0x58
  415cd0:	test   edx,edx
  415cd2:	mov    r13,rcx
  415cd5:	mov    ebx,edx
  415cd7:	mov    edi,r8d
  415cda:	js     0x415ea5
  415ce0:	mov    rsi,QWORD PTR [rip+0x3b9c9]        # 0x4516b0
  415ce7:	mov    eax,0x1
  415cec:	mov    ebp,DWORD PTR [rip+0x28e4a]        # 0x43eb3c
  415cf2:	cmove  ebx,eax
  415cf5:	mov    r12d,0x1
  415cfb:	lea    r14,[rip+0x2e846]        # 0x444548
  415d02:	test   rsi,rsi
  415d05:	je     0x415f09
  415d0b:	test   edi,edi
  415d0d:	lea    r15,[rip+0x2e834]        # 0x444548
  415d14:	jne    0x415ee0
  415d1a:	test   ebp,ebp
  415d1c:	jne    0x415e55
  415d22:	lea    rcx,[rip+0x2eab0]        # 0x4447d9
  415d29:	call   0x433f18
  415d2e:	mov    r8,rax
  415d31:	lea    rcx,[rip+0x2eaa8]        # 0x4447e0
  415d38:	mov    QWORD PTR [rsp+0x38],r8
  415d3d:	lea    rbp,[rsp+0x48]
  415d42:	call   0x433f18
  415d47:	mov    r8,QWORD PTR [rsp+0x38]
  415d4c:	mov    QWORD PTR [rsp+0x28],rsi
  415d51:	mov    r9,r15
  415d54:	mov    QWORD PTR [rsp+0x20],r14
  415d59:	mov    rdx,rax
  415d5c:	mov    rcx,rbp
  415d5f:	call   0x433f30
  415d64:	mov    rcx,QWORD PTR [rsp+0x48]
  415d69:	call   0x4055a0
  415d6e:	mov    rcx,QWORD PTR [rsp+0x48]
  415d73:	mov    rsi,rax
  415d76:	call   0x43a748
  415d7b:	test   rsi,rsi
  415d7e:	je     0x415e44
  415d84:	cmp    BYTE PTR [rsi],0x0
  415d87:	mov    rcx,rsi
  415d8a:	je     0x415e8e
  415d90:	call   0x421c70
  415d95:	movsxd rdx,DWORD PTR [rip+0x28d9c]        # 0x43eb38
  415d9c:	cmp    rax,rdx
  415d9f:	jb     0x415e70
  415da5:	mov    rcx,QWORD PTR [rip+0x3b904]        # 0x4516b0
  415dac:	call   0x43a748
  415db1:	mov    QWORD PTR [rip+0x3b8f8],rsi        # 0x4516b0
  415db8:	mov    eax,DWORD PTR [r13+0x2c]
  415dbc:	add    eax,r12d
  415dbf:	test   edi,edi
  415dc1:	mov    DWORD PTR [rsp+0x48],eax
  415dc5:	jne    0x415df7
  415dc7:	movsx  ecx,BYTE PTR [rsi]
  415dca:	test   cl,cl
  415dcc:	je     0x415df7
  415dce:	mov    r14,QWORD PTR [rip+0x3ecbb]        # 0x454a90
  415dd5:	jmp    0x415deb
  415dd7:	nop    WORD PTR [rax+rax*1+0x0]
  415de0:	add    rsi,0x1
  415de4:	movsx  ecx,BYTE PTR [rsi]
  415de7:	test   cl,cl
  415de9:	je     0x415df7
  415deb:	call   r14
  415dee:	test   eax,eax
  415df0:	je     0x415de0
  415df2:	mov    edi,0x1
  415df7:	mov    rsi,QWORD PTR [rip+0x339f2]        # 0x4497f0
  415dfe:	mov    DWORD PTR [rip+0x3b89f],r12d        # 0x4516a4
  415e05:	mov    DWORD PTR [rip+0x3b895],edi        # 0x4516a0
  415e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  415e10:	sub    ebx,0x1
  415e13:	cmp    ebx,0xffffffff
  415e16:	je     0x415e36
  415e18:	mov    QWORD PTR [rsp+0x20],rbp
  415e1d:	mov    rcx,QWORD PTR [rip+0x3b88c]        # 0x4516b0
  415e24:	mov    r9d,edi
  415e27:	mov    rdx,QWORD PTR [rsi]
  415e2a:	mov    r8d,r12d
  415e2d:	call   0x4158f0
  415e32:	test   eax,eax
  415e34:	je     0x415e10
  415e36:	mov    rcx,r13
  415e39:	call   0x420630
  415e3e:	call   0x4136a0
  415e43:	nop
  415e44:	add    rsp,0x58
  415e48:	pop    rbx
  415e49:	pop    rsi
  415e4a:	pop    rdi
  415e4b:	pop    rbp
  415e4c:	pop    r12
  415e4e:	pop    r13
  415e50:	pop    r14
  415e52:	pop    r15
  415e54:	ret    
  415e55:	lea    rcx,[rip+0x2e96f]        # 0x4447cb
  415e5c:	call   0x433f18
  415e61:	mov    r8,rax
  415e64:	jmp    0x415d31
  415e69:	nop    DWORD PTR [rax+0x0]
  415e70:	lea    rcx,[rip+0x2e980]        # 0x4447f7
  415e77:	call   0x433f18
  415e7c:	lea    rcx,[rip+0x2e722]        # 0x4445a5
  415e83:	mov    rdx,rax
  415e86:	call   0x4144d0
  415e8b:	mov    rcx,rsi
  415e8e:	call   0x43a748
  415e93:	mov    rsi,QWORD PTR [rip+0x3b816]        # 0x4516b0
  415e9a:	test   rsi,rsi
  415e9d:	jne    0x415db8
  415ea3:	jmp    0x415e44
  415ea5:	mov    rsi,QWORD PTR [rip+0x3b804]        # 0x4516b0
  415eac:	neg    ebx
  415eae:	mov    ebp,DWORD PTR [rip+0x28c88]        # 0x43eb3c
  415eb4:	test   rsi,rsi
  415eb7:	je     0x415ef4
  415eb9:	lea    rcx,[rip+0x2e8ef]        # 0x4447af
  415ec0:	mov    r12d,0xffffffff
  415ec6:	lea    r15,[rip+0x2e67b]        # 0x444548
  415ecd:	call   0x433f18
  415ed2:	test   edi,edi
  415ed4:	mov    r14,rax
  415ed7:	je     0x415d1a
  415edd:	nop    DWORD PTR [rax]
  415ee0:	lea    rcx,[rip+0x2e8d2]        # 0x4447b9
  415ee7:	call   0x433f18
  415eec:	mov    r15,rax
  415eef:	jmp    0x415d1a
  415ef4:	lea    rcx,[rip+0x2e8b4]        # 0x4447af
  415efb:	mov    r12d,0xffffffff
  415f01:	call   0x433f18
  415f06:	mov    r14,rax
  415f09:	test   edi,edi
  415f0b:	lea    rsi,[rip+0x2e636]        # 0x444548
  415f12:	jne    0x415f64
  415f14:	test   ebp,ebp
  415f16:	je     0x415f53
  415f18:	lea    rcx,[rip+0x2e8ac]        # 0x4447cb
  415f1f:	call   0x433f18
  415f24:	mov    r15,rax
  415f27:	lea    rcx,[rip+0x2e8c0]        # 0x4447ee
  415f2e:	lea    rbp,[rsp+0x48]
  415f33:	call   0x433f18
  415f38:	mov    QWORD PTR [rsp+0x20],r14
  415f3d:	mov    rdx,rax
  415f40:	mov    r9,rsi
  415f43:	mov    r8,r15
  415f46:	mov    rcx,rbp
  415f49:	call   0x433f30
  415f4e:	jmp    0x415d64
  415f53:	lea    rcx,[rip+0x2e87f]        # 0x4447d9
  415f5a:	call   0x433f18
  415f5f:	mov    r15,rax
  415f62:	jmp    0x415f27
  415f64:	lea    rcx,[rip+0x2e84e]        # 0x4447b9
  415f6b:	call   0x433f18
  415f70:	mov    rsi,rax
  415f73:	jmp    0x415f14
  415f75:	nop
  415f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f80:	push   r12
  415f82:	push   rbp
  415f83:	push   rdi
  415f84:	push   rsi
  415f85:	push   rbx
  415f86:	sub    rsp,0x20
  415f8a:	mov    rbp,QWORD PTR [rcx+0x20]
  415f8e:	mov    rdi,QWORD PTR [rdx]
  415f91:	mov    rsi,rcx
  415f94:	mov    rbx,rdx
  415f97:	mov    rcx,QWORD PTR [rbp+0x0]
  415f9b:	mov    rdx,rdi
  415f9e:	call   0x43a648
  415fa3:	test   eax,eax
  415fa5:	mov    r12,QWORD PTR [rbx+0x8]
  415fa9:	jne    0x415fbb
  415fab:	mov    rcx,QWORD PTR [rbp+0x10]
  415faf:	mov    rdx,r12
  415fb2:	call   0x43a648
  415fb7:	test   eax,eax
  415fb9:	je     0x415fd1
  415fbb:	mov    rdx,r12
  415fbe:	mov    rcx,rdi
  415fc1:	call   0x4124d0
  415fc6:	mov    rcx,rsi
  415fc9:	mov    rdx,rax
  415fcc:	call   0x415020
  415fd1:	mov    eax,DWORD PTR [rbx+0x10]
  415fd4:	mov    DWORD PTR [rsi+0x28],eax
  415fd7:	mov    eax,DWORD PTR [rbx+0x14]
  415fda:	mov    DWORD PTR [rsi+0x2c],eax
  415fdd:	add    rsp,0x20
  415fe1:	pop    rbx
  415fe2:	pop    rsi
  415fe3:	pop    rdi
  415fe4:	pop    rbp
  415fe5:	pop    r12
  415fe7:	ret    
  415fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  415ff0:	push   rbp
  415ff1:	push   rdi
  415ff2:	push   rsi
  415ff3:	push   rbx
  415ff4:	sub    rsp,0x28
  415ff8:	mov    rax,QWORD PTR [rip+0x3b679]        # 0x451678
  415fff:	test   rax,rax
  416002:	je     0x416062
  416004:	mov    rdi,rdx
  416007:	mov    rdx,QWORD PTR [rip+0x3b672]        # 0x451680
  41600e:	sub    rax,0x1
  416012:	mov    rbp,r9
  416015:	mov    rsi,r8
  416018:	mov    QWORD PTR [rip+0x3b659],rax        # 0x451678
  41601f:	mov    rbx,QWORD PTR [rdx+rax*8]
  416023:	mov    rdx,rbx
  416026:	call   0x415f80
  41602b:	mov    eax,DWORD PTR [rbx+0x1c]
  41602e:	mov    rcx,rbx
  416031:	mov    DWORD PTR [rip+0x3b655],eax        # 0x45168c
  416037:	mov    eax,DWORD PTR [rbx+0x20]
  41603a:	mov    DWORD PTR [rdi],eax
  41603c:	mov    eax,DWORD PTR [rbx+0x24]
  41603f:	mov    DWORD PTR [rsi],eax
  416041:	mov    eax,DWORD PTR [rbx+0x18]
  416044:	mov    DWORD PTR [rbp+0x0],eax
  416047:	call   0x43a748
  41604c:	mov    rax,QWORD PTR [rip+0x3b62d]        # 0x451680
  416053:	mov    rdx,QWORD PTR [rip+0x3b61e]        # 0x451678
  41605a:	mov    QWORD PTR [rax+rdx*8],0x0
  416062:	add    rsp,0x28
  416066:	pop    rbx
  416067:	pop    rsi
  416068:	pop    rdi
  416069:	pop    rbp
  41606a:	ret    
  41606b:	nop    DWORD PTR [rax+rax*1+0x0]
  416070:	push   r15
  416072:	push   r14
  416074:	push   r13
  416076:	push   r12
  416078:	push   rbp
  416079:	push   rdi
  41607a:	push   rsi
  41607b:	push   rbx
  41607c:	sub    rsp,0x88
  416083:	mov    eax,DWORD PTR [rcx+0x2c]
  416086:	mov    ebx,DWORD PTR [rcx+0xb0]
  41608c:	sar    edx,0x1f
  41608f:	mov    rsi,rcx
  416092:	mov    DWORD PTR [rsp+0x44],0x0
  41609a:	or     edx,0x1
  41609d:	mov    DWORD PTR [rsp+0x48],edx
  4160a1:	mov    rdx,QWORD PTR [rcx+0x20]
  4160a5:	sub    ebx,0x1
  4160a8:	mov    DWORD PTR [rsp+0x4c],eax
  4160ac:	mov    ecx,DWORD PTR [rcx+0x28]
  4160af:	mov    DWORD PTR [rsp+0x3c],ebx
  4160b3:	mov    r8,QWORD PTR [rdx]
  4160b6:	mov    rdx,QWORD PTR [rdx+0x10]
  4160ba:	mov    DWORD PTR [rsp+0x64],eax
  4160be:	mov    eax,DWORD PTR [rip+0x3b5c4]        # 0x451688
  4160c4:	mov    DWORD PTR [rsp+0x60],ecx
  4160c8:	mov    DWORD PTR [rip+0x3b5ba],0x0        # 0x45168c
  4160d2:	mov    QWORD PTR [rsp+0x50],r8
  4160d7:	mov    QWORD PTR [rsp+0x58],rdx
  4160dc:	test   eax,eax
  4160de:	je     0x416825
  4160e4:	mov    rax,QWORD PTR [rip+0x3b5a5]        # 0x451690
  4160eb:	xor    edx,edx
  4160ed:	mov    BYTE PTR [rax+rdx*1],0x0
  4160f1:	mov    eax,DWORD PTR [rsp+0x4c]
  4160f5:	mov    rcx,rsi
  4160f8:	mov    r9d,DWORD PTR [rsp+0x44]
  4160fd:	mov    r8d,DWORD PTR [rsp+0x48]
  416102:	mov    edx,DWORD PTR [rip+0x3b584]        # 0x45168c
  416108:	mov    DWORD PTR [rip+0x3b596],0x1        # 0x4516a8
  416112:	mov    DWORD PTR [rsp+0x20],eax
  416116:	call   0x4134e0
  41611b:	mov    eax,DWORD PTR [rip+0x3b587]        # 0x4516a8
  416121:	mov    rbx,QWORD PTR [rip+0x3e968]        # 0x454a90
  416128:	nop    DWORD PTR [rax+rax*1+0x0]
  416130:	test   eax,eax
  416132:	je     0x416613
  416138:	mov    r8d,DWORD PTR [rsp+0x44]
  41613d:	mov    rdx,QWORD PTR [rip+0x3b54c]        # 0x451690
  416144:	mov    ecx,DWORD PTR [rsp+0x48]
  416148:	call   0x413820
  41614d:	xor    ecx,ecx
  41614f:	call   0x413fa0
  416154:	mov    eax,DWORD PTR [rip+0x3b7aa]        # 0x451904
  41615a:	cmp    DWORD PTR [rip+0x3b7a0],eax        # 0x451900
  416160:	je     0x416580
  416166:	mov    rax,QWORD PTR [rip+0x337e3]        # 0x449950
  41616d:	mov    r13,QWORD PTR [rax]
  416170:	mov    rax,QWORD PTR [rip+0x33759]        # 0x4498d0
  416177:	mov    r12,QWORD PTR [rax]
  41617a:	call   0x4140d0
  41617f:	mov    r15d,eax
  416182:	lea    eax,[rax-0x20]
  416185:	cmp    eax,0xdf
  41618a:	jbe    0x4162c9
  416190:	lea    rdi,[rip+0xfffffffffffefb99]        # 0x405d30
  416197:	lea    rbp,[rip+0xfffffffffffefc72]        # 0x405e10
  41619e:	lea    r14,[rip+0xfffffffffffefa3b]        # 0x405be0
  4161a5:	jmp    0x416251
  4161aa:	nop    WORD PTR [rax+rax*1+0x0]
  4161b0:	mov    rax,QWORD PTR [rcx+0x8]
  4161b4:	test   rax,rax
  4161b7:	je     0x416290
  4161bd:	mov    rax,QWORD PTR [rax]
  4161c0:	lea    rdx,[rip+0x809]        # 0x4169d0
  4161c7:	cmp    rax,rdx
  4161ca:	je     0x4164d0
  4161d0:	lea    rdx,[rip+0x809]        # 0x4169e0
  4161d7:	cmp    rax,rdx
  4161da:	je     0x4164d0
  4161e0:	lea    rdx,[rip+0xffffffffffffe6a9]        # 0x414890
  4161e7:	cmp    rax,rdx
  4161ea:	je     0x4164d0
  4161f0:	test   r12,r12
  4161f3:	je     0x4165b0
  4161f9:	movsxd rdx,r15d
  4161fc:	xor    r13d,r13d
  4161ff:	shl    rdx,0x4
  416203:	add    rdx,r12
  416206:	cmp    BYTE PTR [rdx],0x0
  416209:	jne    0x416280
  41620b:	mov    rax,QWORD PTR [rdx+0x8]
  41620f:	test   rax,rax
  416212:	je     0x41622a
  416214:	mov    rax,QWORD PTR [rax]
  416217:	cmp    rax,rdi
  41621a:	je     0x416400
  416220:	cmp    rax,rbp
  416223:	je     0x4162a1
  416225:	cmp    rax,r14
  416228:	je     0x4162a1
  41622a:	mov    eax,0x1
  41622f:	xor    r12d,r12d
  416232:	test   r13,r13
  416235:	jne    0x41623f
  416237:	test   al,al
  416239:	jne    0x4165b0
  41623f:	call   0x4140d0
  416244:	mov    r15d,eax
  416247:	lea    eax,[rax-0x20]
  41624a:	cmp    eax,0xdf
  41624f:	jbe    0x4162c9
  416251:	test   r13,r13
  416254:	je     0x4161f0
  416256:	movsxd rdx,r15d
  416259:	shl    rdx,0x4
  41625d:	lea    rcx,[r13+rdx*1+0x0]
  416262:	cmp    BYTE PTR [rcx],0x0
  416265:	je     0x4161b0
  41626b:	test   r12,r12
  41626e:	mov    r13,QWORD PTR [rcx+0x8]
  416272:	jne    0x416203
  416274:	mov    eax,0x1
  416279:	jmp    0x416232
  41627b:	nop    DWORD PTR [rax+rax*1+0x0]
  416280:	mov    r12,QWORD PTR [rdx+0x8]
  416284:	test   r12,r12
  416287:	sete   al
  41628a:	jmp    0x416232
  41628c:	nop    DWORD PTR [rax+0x0]
  416290:	test   r12,r12
  416293:	je     0x4165b0
  416299:	xor    r13d,r13d
  41629c:	jmp    0x416203
  4162a1:	lea    rdx,[rip+0xfffffffffffefb68]        # 0x405e10
  4162a8:	cmp    rax,rdx
  4162ab:	je     0x416410
  4162b1:	test   rax,rax
  4162b4:	sete   dl
  4162b7:	cmp    r15d,0x1f
  4162bb:	jle    0x4164e2
  4162c1:	test   dl,dl
  4162c3:	je     0x4164e2
  4162c9:	cmp    r15d,0xff
  4162d0:	jle    0x416420
  4162d6:	xor    eax,eax
  4162d8:	mov    edx,0x1
  4162dd:	lea    rcx,[rip+0x6fc]        # 0x4169e0
  4162e4:	cmp    rax,rcx
  4162e7:	je     0x41690d
  4162ed:	lea    rcx,[rip+0xffffffffffffe59c]        # 0x414890
  4162f4:	cmp    rax,rcx
  4162f7:	je     0x4167c3
  4162fd:	lea    rcx,[rip+0xfffffffffffefa2c]        # 0x405d30
  416304:	cmp    rax,rcx
  416307:	je     0x4165ba
  41630d:	test   dl,dl
  41630f:	jne    0x4165ba
  416315:	mov    r8d,DWORD PTR [rsp+0x44]
  41631a:	mov    rdi,QWORD PTR [rip+0x3b36f]        # 0x451690
  416321:	lea    rbp,[rsp+0x4c]
  416326:	mov    ecx,DWORD PTR [rsp+0x48]
  41632a:	mov    rdx,rdi
  41632d:	call   0x413820
  416332:	mov    rdi,QWORD PTR [rip+0x3b357]        # 0x451690
  416339:	movsx  ecx,BYTE PTR [rdi]
  41633c:	test   cl,cl
  41633e:	je     0x4164a5
  416344:	mov    r14,rdi
  416347:	jmp    0x416360
  416349:	nop    DWORD PTR [rax+0x0]
  416350:	add    r14,0x1
  416354:	movsx  ecx,BYTE PTR [r14]
  416358:	test   cl,cl
  41635a:	je     0x4164a5
  416360:	call   rbx
  416362:	test   eax,eax
  416364:	je     0x416350
  416366:	mov    r9d,0x1
  41636c:	mov    rax,QWORD PTR [rsi+0x20]
  416370:	mov    ecx,DWORD PTR [rsi+0x28]
  416373:	mov    rdx,rsi
  416376:	mov    r8d,DWORD PTR [rsp+0x48]
  41637b:	mov    r14d,DWORD PTR [rsp+0x44]
  416380:	mov    r15,QWORD PTR [rax]
  416383:	mov    rax,QWORD PTR [rax+0x10]
  416387:	mov    r13d,ecx
  41638a:	mov    QWORD PTR [rsp+0x20],rbp
  41638f:	mov    rcx,rdi
  416392:	mov    r12,rax
  416395:	call   0x4158f0
  41639a:	test   eax,eax
  41639c:	mov    DWORD PTR [rsp+0x44],eax
  4163a0:	jne    0x4164b0
  4163a6:	mov    rdi,QWORD PTR [rsi+0x20]
  4163aa:	mov    rdx,r15
  4163ad:	mov    rcx,QWORD PTR [rdi]
  4163b0:	call   0x43a648
  4163b5:	test   eax,eax
  4163b7:	jne    0x4163e0
  4163b9:	mov    rcx,QWORD PTR [rdi+0x10]
  4163bd:	mov    rdx,r12
  4163c0:	call   0x43a648
  4163c5:	test   eax,eax
  4163c7:	jne    0x4163e0
  4163c9:	mov    edx,DWORD PTR [rsi+0x28]
  4163cc:	cmp    r13d,edx
  4163cf:	je     0x4163e0
  4163d1:	mov    DWORD PTR [rsi+0x28],r13d
  4163d5:	mov    rcx,rsi
  4163d8:	call   0x420550
  4163dd:	nop    DWORD PTR [rax]
  4163e0:	mov    rcx,rsi
  4163e3:	call   0x420630
  4163e8:	call   0x403fa0
  4163ed:	mov    rcx,rsi
  4163f0:	call   0x4045a0
  4163f5:	mov    eax,DWORD PTR [rip+0x3b2ad]        # 0x4516a8
  4163fb:	jmp    0x416130
  416400:	lea    rdx,[rip+0xfffffffffffefa09]        # 0x405e10
  416407:	cmp    rdi,rdx
  41640a:	jne    0x4164e0
  416410:	call   0x4140d0
  416415:	cmp    eax,0xff
  41641a:	mov    r15d,eax
  41641d:	ja     0x4163f5
  41641f:	nop
  416420:	mov    eax,DWORD PTR [rsp+0x4c]
  416424:	mov    edx,DWORD PTR [rip+0x3b262]        # 0x45168c
  41642a:	mov    rcx,rsi
  41642d:	mov    r9d,DWORD PTR [rsp+0x44]
  416432:	mov    r8d,DWORD PTR [rsp+0x48]
  416437:	mov    DWORD PTR [rsp+0x20],eax
  41643b:	call   0x4134e0
  416440:	movsxd rdx,DWORD PTR [rip+0x3b245]        # 0x45168c
  416447:	mov    eax,DWORD PTR [rip+0x3b23b]        # 0x451688
  41644d:	lea    ecx,[rdx+0x2]
  416450:	cmp    ecx,eax
  416452:	jge    0x4166f2
  416458:	mov    rdi,QWORD PTR [rip+0x3b231]        # 0x451690
  41645f:	lea    eax,[rdx+0x1]
  416462:	mov    DWORD PTR [rip+0x3b224],eax        # 0x45168c
  416468:	mov    BYTE PTR [rdi+rdx*1],r15b
  41646c:	movsxd rax,DWORD PTR [rip+0x3b219]        # 0x45168c
  416473:	mov    BYTE PTR [rdi+rax*1],0x0
  416477:	mov    r8d,DWORD PTR [rsp+0x44]
  41647c:	test   r8d,r8d
  41647f:	je     0x416497
  416481:	mov    r14d,DWORD PTR [rip+0x286b4]        # 0x43eb3c
  416488:	mov    eax,DWORD PTR [rip+0x3b21a]        # 0x4516a8
  41648e:	test   r14d,r14d
  416491:	je     0x416130
  416497:	mov    ecx,DWORD PTR [rsp+0x48]
  41649b:	lea    rbp,[rsp+0x4c]
  4164a0:	jmp    0x41632a
  4164a5:	xor    r9d,r9d
  4164a8:	jmp    0x41636c
  4164ad:	nop    DWORD PTR [rax]
  4164b0:	test   r14d,r14d
  4164b3:	jne    0x4163f5
  4164b9:	call   0x41c810
  4164be:	mov    eax,DWORD PTR [rip+0x3b1e4]        # 0x4516a8
  4164c4:	jmp    0x416130
  4164c9:	nop    DWORD PTR [rax+0x0]
  4164d0:	lea    rdx,[rip+0xfffffffffffef939]        # 0x405e10
  4164d7:	cmp    rax,rdx
  4164da:	je     0x416410
  4164e0:	xor    edx,edx
  4164e2:	lea    rcx,[rip+0xfffffffffffef6f7]        # 0x405be0
  4164e9:	cmp    rax,rcx
  4164ec:	je     0x416720
  4164f2:	lea    rcx,[rip+0x4d7]        # 0x4169d0
  4164f9:	cmp    rax,rcx
  4164fc:	jne    0x4162dd
  416502:	mov    ecx,DWORD PTR [rsp+0x48]
  416506:	test   ecx,ecx
  416508:	jle    0x416919
  41650e:	mov    r12d,DWORD PTR [rip+0x3b177]        # 0x45168c
  416515:	test   r12d,r12d
  416518:	jne    0x416968
  41651e:	mov    rbp,QWORD PTR [rip+0x3b173]        # 0x451698
  416525:	test   rbp,rbp
  416528:	je     0x4163f5
  41652e:	mov    rcx,rbp
  416531:	call   0x43a620
  416536:	mov    ecx,DWORD PTR [rip+0x3b14c]        # 0x451688
  41653c:	lea    r8,[rax+0x1]
  416540:	cmp    r8,rcx
  416543:	jae    0x416997
  416549:	mov    rdi,QWORD PTR [rip+0x3b140]        # 0x451690
  416550:	mov    rdx,rbp
  416553:	mov    rcx,rdi
  416556:	lea    rbp,[rsp+0x4c]
  41655b:	call   0x4323b0
  416560:	sub    rax,rdi
  416563:	mov    r8d,DWORD PTR [rsp+0x44]
  416568:	mov    ecx,DWORD PTR [rsp+0x48]
  41656c:	mov    DWORD PTR [rip+0x3b11a],eax        # 0x45168c
  416572:	jmp    0x41632a
  416577:	nop    WORD PTR [rax+rax*1+0x0]
  416580:	mov    rax,QWORD PTR [rip+0x332b9]        # 0x449840
  416587:	mov    r15d,DWORD PTR [rax]
  41658a:	test   r15d,r15d
  41658d:	je     0x416166
  416593:	call   0x403fa0
  416598:	mov    rax,QWORD PTR [rip+0x33251]        # 0x4497f0
  41659f:	mov    rcx,QWORD PTR [rax]
  4165a2:	call   0x4045a0
  4165a7:	jmp    0x416166
  4165ac:	nop    DWORD PTR [rax+0x0]
  4165b0:	cmp    r15d,0x1f
  4165b4:	jg     0x4162c9
  4165ba:	mov    eax,DWORD PTR [rip+0x3b0cc]        # 0x45168c
  4165c0:	test   eax,eax
  4165c2:	je     0x4165e3
  4165c4:	mov    rcx,QWORD PTR [rip+0x3b0cd]        # 0x451698
  4165cb:	call   0x43a748
  4165d0:	mov    rcx,QWORD PTR [rip+0x3b0b9]        # 0x451690
  4165d7:	call   0x422a00
  4165dc:	mov    QWORD PTR [rip+0x3b0b5],rax        # 0x451698
  4165e3:	mov    rax,QWORD PTR [rip+0x332d6]        # 0x4498c0
  4165ea:	mov    r10d,DWORD PTR [rax]
  4165ed:	test   r10d,r10d
  4165f0:	je     0x41681b
  4165f6:	mov    rax,QWORD PTR [rip+0x33203]        # 0x449800
  4165fd:	mov    r9d,DWORD PTR [rax]
  416600:	test   r9d,r9d
  416603:	jne    0x416807
  416609:	mov    DWORD PTR [rip+0x3b095],0x0        # 0x4516a8
  416613:	mov    rbp,QWORD PTR [rip+0x3b05e]        # 0x451678
  41661a:	xor    ebx,ebx
  41661c:	mov    rdi,QWORD PTR [rip+0x3b05d]        # 0x451680
  416623:	test   rbp,rbp
  416626:	je     0x41664a
  416628:	nop    DWORD PTR [rax+rax*1+0x0]
  416630:	mov    rcx,QWORD PTR [rdi+rbx*8]
  416634:	call   0x43a748
  416639:	mov    QWORD PTR [rdi+rbx*8],0x0
  416641:	add    rbx,0x1
  416645:	cmp    rbp,rbx
  416648:	jne    0x416630
  41664a:	mov    eax,DWORD PTR [rsi+0xb0]
  416650:	mov    QWORD PTR [rip+0x3b01d],0x0        # 0x451678
  41665b:	lea    ebx,[rax-0x1]
  41665e:	cmp    DWORD PTR [rsp+0x3c],ebx
  416662:	jge    0x4166c4
  416664:	movsxd rdx,DWORD PTR [rsp+0x3c]
  416669:	mov    rax,QWORD PTR [rsi+0xa8]
  416670:	mov    rdx,QWORD PTR [rax+rdx*8]
  416674:	mov    rdi,QWORD PTR [rdx]
  416677:	movsxd rdx,ebx
  41667a:	mov    rax,QWORD PTR [rax+rdx*8]
  41667e:	mov    rdx,QWORD PTR [rdi+0x10]
  416682:	mov    rbp,QWORD PTR [rax]
  416685:	mov    rcx,QWORD PTR [rbp+0x10]
  416689:	call   0x43a648
  41668e:	test   eax,eax
  416690:	jne    0x4166a6
  416692:	mov    rdx,QWORD PTR [rbp+0x0]
  416696:	mov    rcx,QWORD PTR [rdi]
  416699:	call   0x43a648
  41669e:	test   eax,eax
  4166a0:	je     0x416948
  4166a6:	mov    eax,DWORD PTR [rsp+0x3c]
  4166aa:	lea    rdx,[rsi+0xb0]
  4166b1:	lea    rcx,[rsi+0xa8]
  4166b8:	mov    r9d,ebx
  4166bb:	lea    r8d,[rax+0x1]
  4166bf:	call   0x4149d0
  4166c4:	call   0x4136a0
  4166c9:	mov    rax,QWORD PTR [rip+0x331f0]        # 0x4498c0
  4166d0:	mov    r8d,DWORD PTR [rax]
  4166d3:	test   r8d,r8d
  4166d6:	jne    0x4166de
  4166d8:	call   0x421060
  4166dd:	nop
  4166de:	add    rsp,0x88
  4166e5:	pop    rbx
  4166e6:	pop    rsi
  4166e7:	pop    rdi
  4166e8:	pop    rbp
  4166e9:	pop    r12
  4166eb:	pop    r13
  4166ed:	pop    r14
  4166ef:	pop    r15
  4166f1:	ret    
  4166f2:	mov    rcx,QWORD PTR [rip+0x3af97]        # 0x451690
  4166f9:	add    eax,0x64
  4166fc:	movsxd rdx,eax
  4166ff:	mov    DWORD PTR [rip+0x3af83],eax        # 0x451688
  416705:	call   0x422820
  41670a:	movsxd rdx,DWORD PTR [rip+0x3af7b]        # 0x45168c
  416711:	mov    QWORD PTR [rip+0x3af78],rax        # 0x451690
  416718:	mov    rdi,rax
  41671b:	jmp    0x41645f
  416720:	cmp    QWORD PTR [rip+0x3af50],0x0        # 0x451678
  416728:	je     0x4164b9
  41672e:	mov    r15d,DWORD PTR [rip+0x3af57]        # 0x45168c
  416735:	lea    rbp,[rsp+0x4c]
  41673a:	lea    r14,[rsp+0x44]
  41673f:	lea    rdi,[rsp+0x48]
  416744:	jmp    0x416773
  416746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416750:	movsxd rcx,r8d
  416753:	add    rcx,QWORD PTR [rip+0x3af36]        # 0x451690
  41675a:	mov    edx,r15d
  41675d:	sub    edx,r8d
  416760:	xor    r8d,r8d
  416763:	movsxd rdx,edx
  416766:	call   0x435870
  41676b:	test   eax,eax
  41676d:	jg     0x41684c
  416773:	mov    r8,r14
  416776:	mov    r9,rbp
  416779:	mov    rdx,rdi
  41677c:	mov    rcx,rsi
  41677f:	call   0x415ff0
  416784:	movsxd r8,DWORD PTR [rip+0x3af01]        # 0x45168c
  41678b:	test   r8d,r8d
  41678e:	jg     0x416750
  416790:	mov    rdi,QWORD PTR [rip+0x3aef9]        # 0x451690
  416797:	mov    BYTE PTR [rdi+r8*1],0x0
  41679c:	mov    r13d,DWORD PTR [rip+0x3aee9]        # 0x45168c
  4167a3:	test   r13d,r13d
  4167a6:	je     0x41686b
  4167ac:	mov    r8d,DWORD PTR [rsp+0x44]
  4167b1:	test   r8d,r8d
  4167b4:	jne    0x416935
  4167ba:	mov    ecx,DWORD PTR [rsp+0x48]
  4167be:	jmp    0x41632a
  4167c3:	cmp    QWORD PTR [rip+0x3aead],0x0        # 0x451678
  4167cb:	je     0x416858
  4167d1:	mov    ebp,DWORD PTR [rsp+0x44]
  4167d5:	test   ebp,ebp
  4167d7:	jne    0x416895
  4167dd:	mov    edx,DWORD PTR [rip+0x3aea9]        # 0x45168c
  4167e3:	test   edx,edx
  4167e5:	jne    0x4167f5
  4167e7:	cmp    QWORD PTR [rip+0x3ae89],0x0        # 0x451678
  4167ef:	je     0x4165e3
  4167f5:	lea    rdx,[rsp+0x50]
  4167fa:	mov    rcx,rsi
  4167fd:	call   0x415f80
  416802:	jmp    0x4165e3
  416807:	mov    rax,QWORD PTR [rip+0x32fe2]        # 0x4497f0
  41680e:	mov    rcx,QWORD PTR [rax]
  416811:	call   0x407650
  416816:	jmp    0x416609
  41681b:	call   0x421060
  416820:	jmp    0x4165f6
  416825:	mov    ecx,0x32
  41682a:	mov    DWORD PTR [rip+0x3ae54],0x32        # 0x451688
  416834:	call   0x4227b0
  416839:	movsxd rdx,DWORD PTR [rip+0x3ae4c]        # 0x45168c
  416840:	mov    QWORD PTR [rip+0x3ae49],rax        # 0x451690
  416847:	jmp    0x4160ed
  41684c:	movsxd r8,DWORD PTR [rip+0x3ae39]        # 0x45168c
  416853:	jmp    0x416790
  416858:	mov    ecx,DWORD PTR [rip+0x3ae2e]        # 0x45168c
  41685e:	test   ecx,ecx
  416860:	jne    0x4165e3
  416866:	jmp    0x4167e7
  41686b:	mov    rcx,QWORD PTR [rsi+0x98]
  416872:	call   0x43a748
  416877:	mov    QWORD PTR [rsi+0x98],0x0
  416882:	mov    rcx,rsi
  416885:	call   0x403da0
  41688a:	mov    eax,DWORD PTR [rip+0x3ae18]        # 0x4516a8
  416890:	jmp    0x416130
  416895:	call   0x41c810
  41689a:	cmp    QWORD PTR [rip+0x3add6],0x0        # 0x451678
  4168a2:	je     0x4168e2
  4168a4:	mov    edi,DWORD PTR [rsp+0x44]
  4168a8:	test   edi,edi
  4168aa:	je     0x4168e2
  4168ac:	lea    rbp,[rsp+0x4c]
  4168b1:	lea    r14,[rsp+0x44]
  4168b6:	lea    rdi,[rsp+0x48]
  4168bb:	jmp    0x4168c7
  4168bd:	mov    r11d,DWORD PTR [rsp+0x44]
  4168c2:	test   r11d,r11d
  4168c5:	je     0x4168e2
  4168c7:	mov    r9,rbp
  4168ca:	mov    r8,r14
  4168cd:	mov    rdx,rdi
  4168d0:	mov    rcx,rsi
  4168d3:	call   0x415ff0
  4168d8:	cmp    QWORD PTR [rip+0x3ad98],0x0        # 0x451678
  4168e0:	jne    0x4168bd
  4168e2:	movsxd rax,DWORD PTR [rip+0x3ada3]        # 0x45168c
  4168e9:	mov    rdx,QWORD PTR [rip+0x3ada0]        # 0x451690
  4168f0:	mov    BYTE PTR [rdx+rax*1],0x0
  4168f4:	mov    r8d,DWORD PTR [rsp+0x44]
  4168f9:	mov    ecx,DWORD PTR [rsp+0x48]
  4168fd:	call   0x413820
  416902:	mov    eax,DWORD PTR [rip+0x3ada0]        # 0x4516a8
  416908:	jmp    0x416130
  41690d:	mov    ecx,DWORD PTR [rsp+0x48]
  416911:	test   ecx,ecx
  416913:	js     0x41650e
  416919:	neg    ecx
  41691b:	mov    r8d,DWORD PTR [rsp+0x44]
  416920:	mov    rdi,QWORD PTR [rip+0x3ad69]        # 0x451690
  416927:	mov    DWORD PTR [rsp+0x48],ecx
  41692b:	lea    rbp,[rsp+0x4c]
  416930:	jmp    0x41632a
  416935:	mov    rcx,rsi
  416938:	call   0x403da0
  41693d:	mov    eax,DWORD PTR [rip+0x3ad65]        # 0x4516a8
  416943:	jmp    0x416130
  416948:	mov    r8d,DWORD PTR [rsp+0x3c]
  41694d:	lea    rdx,[rsi+0xb0]
  416954:	lea    rcx,[rsi+0xa8]
  41695b:	mov    r9d,ebx
  41695e:	call   0x4149d0
  416963:	jmp    0x4166c4
  416968:	mov    r8d,DWORD PTR [rsp+0x44]
  41696d:	test   r8d,r8d
  416970:	jne    0x41697d
  416972:	mov    eax,DWORD PTR [rsi+0x2c]
  416975:	test   ecx,ecx
  416977:	mov    DWORD PTR [rsp+0x4c],eax
  41697b:	js     0x41698e
  41697d:	mov    rdi,QWORD PTR [rip+0x3ad0c]        # 0x451690
  416984:	lea    rbp,[rsp+0x4c]
  416989:	jmp    0x41632a
  41698e:	sub    eax,0x1
  416991:	mov    DWORD PTR [rsp+0x4c],eax
  416995:	jmp    0x41697d
  416997:	lea    eax,[rcx+rax*1+0xa]
  41699b:	mov    rcx,QWORD PTR [rip+0x3acee]        # 0x451690
  4169a2:	movsxd rdx,eax
  4169a5:	mov    DWORD PTR [rip+0x3acdd],eax        # 0x451688
  4169ab:	call   0x422820
  4169b0:	mov    rbp,QWORD PTR [rip+0x3ace1]        # 0x451698
  4169b7:	mov    QWORD PTR [rip+0x3acd2],rax        # 0x451690
  4169be:	mov    rdi,rax
  4169c1:	jmp    0x416550
  4169c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4169d0:	jmp    0x416070
  4169d5:	nop
  4169d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4169e0:	neg    edx
  4169e2:	jmp    0x416070
  4169e7:	nop    WORD PTR [rax+rax*1+0x0]
  4169f0:	cmp    edx,0x1
  4169f3:	jne    0x4169ff
  4169f5:	mov    eax,DWORD PTR [rip+0x3ac49]        # 0x451644
  4169fb:	test   eax,eax
  4169fd:	je     0x416a60
  4169ff:	test   edx,edx
  416a01:	js     0x416a45
  416a03:	mov    r8d,DWORD PTR [rcx+0x28]
  416a07:	mov    r9d,DWORD PTR [rcx+0x14]
  416a0b:	add    edx,r8d
  416a0e:	mov    eax,edx
  416a10:	lea    r10d,[r8+r9*1-0x1]
  416a15:	sub    eax,r8d
  416a18:	cmp    eax,r9d
  416a1b:	mov    eax,DWORD PTR [rcx+0x70]
  416a1e:	cmovge edx,r10d
  416a22:	cmp    edx,r8d
  416a25:	cmovl  edx,r8d
  416a29:	lea    r8d,[rax-0x1]
  416a2d:	cmp    eax,edx
  416a2f:	mov    rax,QWORD PTR [rcx+0x60]
  416a33:	cmovle edx,r8d
  416a37:	movsxd rdx,edx
  416a3a:	mov    eax,DWORD PTR [rax+rdx*4]
  416a3d:	mov    DWORD PTR [rcx+0x2c],eax
  416a40:	jmp    0x4135e0
  416a45:	mov    r9d,DWORD PTR [rcx+0x14]
  416a49:	mov    r8d,DWORD PTR [rcx+0x28]
  416a4d:	lea    eax,[r9+rdx*1]
  416a51:	lea    edx,[rax+r8*1]
  416a55:	jmp    0x416a0e
  416a57:	nop    WORD PTR [rax+rax*1+0x0]
  416a60:	mov    r9d,DWORD PTR [rcx+0x14]
  416a64:	mov    r8d,DWORD PTR [rcx+0x28]
  416a68:	mov    eax,r9d
  416a6b:	shr    eax,0x1f
  416a6e:	add    eax,r9d
  416a71:	sar    eax,1
  416a73:	lea    edx,[rax+r8*1]
  416a77:	jmp    0x416a0e
  416a79:	nop    DWORD PTR [rax+0x0]
  416a80:	mov    DWORD PTR [rcx+0x2c],0x0
  416a87:	jmp    0x4135e0
  416a8c:	nop    DWORD PTR [rax+0x0]
  416a90:	mov    rax,QWORD PTR [rcx+0x20]
  416a94:	mov    eax,DWORD PTR [rax+0x20]
  416a97:	sub    eax,0x1
  416a9a:	mov    DWORD PTR [rcx+0x2c],eax
  416a9d:	jmp    0x4135e0
  416aa2:	nop    DWORD PTR [rax+0x0]
  416aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ab0:	push   rsi
  416ab1:	push   rbx
  416ab2:	sub    rsp,0x28
  416ab6:	test   edx,edx
  416ab8:	mov    rbx,rcx
  416abb:	js     0x416b70
  416ac1:	mov    rax,QWORD PTR [rip+0x33148]        # 0x449c10
  416ac8:	mov    rcx,QWORD PTR [rax]
  416acb:	mov    r8,QWORD PTR [rcx]
  416ace:	test   r8,r8
  416ad1:	je     0x416b34
  416ad3:	mov    rax,QWORD PTR [rip+0x32de6]        # 0x4498c0
  416ada:	mov    r9d,DWORD PTR [rax]
  416add:	test   r9d,r9d
  416ae0:	jne    0x416b34
  416ae2:	sub    edx,0x1
  416ae5:	cmp    edx,0xffffffff
  416ae8:	je     0x416b02
  416aea:	cmp    rbx,rcx
  416aed:	je     0x416b50
  416aef:	mov    rax,QWORD PTR [rbx+0x8]
  416af3:	test   rax,rax
  416af6:	cmovne rbx,rax
  416afa:	sub    edx,0x1
  416afd:	cmp    edx,0xffffffff
  416b00:	jne    0x416aea
  416b02:	mov    rsi,QWORD PTR [rip+0x32ce7]        # 0x4497f0
  416b09:	cmp    QWORD PTR [rsi],rbx
  416b0c:	je     0x416b2d
  416b0e:	mov    rax,QWORD PTR [rip+0x32ceb]        # 0x449800
  416b15:	mov    eax,DWORD PTR [rax]
  416b17:	test   eax,eax
  416b19:	jne    0x416b65
  416b1b:	mov    rcx,rbx
  416b1e:	call   0x420630
  416b23:	or     DWORD PTR [rbx+0x80],0x1
  416b2a:	mov    QWORD PTR [rsi],rbx
  416b2d:	add    rsp,0x28
  416b31:	pop    rbx
  416b32:	pop    rsi
  416b33:	ret    
  416b34:	mov    rax,QWORD PTR [rip+0x32fa5]        # 0x449ae0
  416b3b:	lea    rcx,[rip+0x2da63]        # 0x4445a5
  416b42:	mov    rdx,QWORD PTR [rax]
  416b45:	add    rsp,0x28
  416b49:	pop    rbx
  416b4a:	pop    rsi
  416b4b:	jmp    0x4144d0
  416b50:	mov    rbx,r8
  416b53:	jmp    0x416b58
  416b55:	mov    rbx,rax
  416b58:	mov    rax,QWORD PTR [rbx]
  416b5b:	test   rax,rax
  416b5e:	jne    0x416b55
  416b60:	jmp    0x416ae2
  416b65:	mov    rcx,rbx
  416b68:	call   0x407650
  416b6d:	jmp    0x416b1b
  416b6f:	nop
  416b70:	neg    edx
  416b72:	add    rsp,0x28
  416b76:	pop    rbx
  416b77:	pop    rsi
  416b78:	jmp    0x416b80
  416b7a:	nop    WORD PTR [rax+rax*1+0x0]
  416b80:	push   rsi
  416b81:	push   rbx
  416b82:	sub    rsp,0x28
  416b86:	test   edx,edx
  416b88:	mov    rbx,rcx
  416b8b:	js     0x416c20
  416b91:	mov    rax,QWORD PTR [rip+0x33078]        # 0x449c10
  416b98:	mov    rax,QWORD PTR [rax]
  416b9b:	cmp    QWORD PTR [rax],0x0
  416b9f:	je     0x416bf4
  416ba1:	mov    rcx,QWORD PTR [rip+0x32d18]        # 0x4498c0
  416ba8:	mov    ecx,DWORD PTR [rcx]
  416baa:	test   ecx,ecx
  416bac:	je     0x416bba
  416bae:	jmp    0x416bf4
  416bb0:	mov    rbx,QWORD PTR [rbx]
  416bb3:	test   rbx,rbx
  416bb6:	cmove  rbx,rax
  416bba:	sub    edx,0x1
  416bbd:	cmp    edx,0xffffffff
  416bc0:	jne    0x416bb0
  416bc2:	mov    rsi,QWORD PTR [rip+0x32c27]        # 0x4497f0
  416bc9:	cmp    QWORD PTR [rsi],rbx
  416bcc:	je     0x416bed
  416bce:	mov    rax,QWORD PTR [rip+0x32c2b]        # 0x449800
  416bd5:	mov    eax,DWORD PTR [rax]
  416bd7:	test   eax,eax
  416bd9:	jne    0x416c10
  416bdb:	mov    rcx,rbx
  416bde:	call   0x420630
  416be3:	or     DWORD PTR [rbx+0x80],0x1
  416bea:	mov    QWORD PTR [rsi],rbx
  416bed:	add    rsp,0x28
  416bf1:	pop    rbx
  416bf2:	pop    rsi
  416bf3:	ret    
  416bf4:	mov    rax,QWORD PTR [rip+0x32ee5]        # 0x449ae0
  416bfb:	lea    rcx,[rip+0x2d9a3]        # 0x4445a5
  416c02:	mov    rdx,QWORD PTR [rax]
  416c05:	add    rsp,0x28
  416c09:	pop    rbx
  416c0a:	pop    rsi
  416c0b:	jmp    0x4144d0
  416c10:	mov    rcx,rbx
  416c13:	call   0x407650
  416c18:	jmp    0x416bdb
  416c1a:	nop    WORD PTR [rax+rax*1+0x0]
  416c20:	neg    edx
  416c22:	add    rsp,0x28
  416c26:	pop    rbx
  416c27:	pop    rsi
  416c28:	jmp    0x416ab0
  416c2d:	nop    DWORD PTR [rax]
  416c30:	push   rdi
  416c31:	push   rsi
  416c32:	push   rbx
  416c33:	sub    rsp,0x20
  416c37:	mov    rdi,rcx
  416c3a:	call   0x41f7b0
  416c3f:	test   rax,rax
  416c42:	mov    rsi,rax
  416c45:	je     0x416d60
  416c4b:	mov    ecx,0x58
  416c50:	call   0x4227b0
  416c55:	mov    rdx,QWORD PTR [rdi+0x20]
  416c59:	mov    rbx,rax
  416c5c:	mov    rax,QWORD PTR [rdx]
  416c5f:	mov    QWORD PTR [rbx],rax
  416c62:	mov    rax,QWORD PTR [rdx+0x8]
  416c66:	mov    QWORD PTR [rbx+0x8],rax
  416c6a:	mov    rax,QWORD PTR [rdx+0x10]
  416c6e:	mov    QWORD PTR [rbx+0x10],rax
  416c72:	mov    rax,QWORD PTR [rdx+0x18]
  416c76:	mov    QWORD PTR [rbx+0x18],rax
  416c7a:	mov    rax,QWORD PTR [rdx+0x20]
  416c7e:	mov    QWORD PTR [rbx+0x20],rax
  416c82:	mov    rax,QWORD PTR [rdx+0x28]
  416c86:	mov    QWORD PTR [rbx+0x28],rax
  416c8a:	mov    rcx,QWORD PTR [rdx+0x30]
  416c8e:	test   BYTE PTR [rbx+0x2c],0x10
  416c92:	mov    QWORD PTR [rbx+0x30],rcx
  416c96:	mov    rax,QWORD PTR [rdx+0x38]
  416c9a:	mov    QWORD PTR [rbx+0x38],rax
  416c9e:	mov    rax,QWORD PTR [rdx+0x40]
  416ca2:	mov    QWORD PTR [rbx+0x40],rax
  416ca6:	mov    rax,QWORD PTR [rdx+0x48]
  416caa:	mov    QWORD PTR [rbx+0x48],rax
  416cae:	mov    rax,QWORD PTR [rdx+0x50]
  416cb2:	mov    QWORD PTR [rbx+0x50],rax
  416cb6:	jne    0x416d00
  416cb8:	mov    rdx,rbx
  416cbb:	mov    rcx,rsi
  416cbe:	call   0x415020
  416cc3:	mov    rcx,rdi
  416cc6:	call   0x4135e0
  416ccb:	mov    eax,DWORD PTR [rdi+0x28]
  416cce:	mov    DWORD PTR [rsi+0x28],eax
  416cd1:	mov    eax,DWORD PTR [rip+0x3a97d]        # 0x451654
  416cd7:	test   eax,eax
  416cd9:	jne    0x416cf0
  416cdb:	mov    rcx,rsi
  416cde:	add    rsp,0x20
  416ce2:	pop    rbx
  416ce3:	pop    rsi
  416ce4:	pop    rdi
  416ce5:	jmp    0x420630
  416cea:	nop    WORD PTR [rax+rax*1+0x0]
  416cf0:	xor    ecx,ecx
  416cf2:	add    rsp,0x20
  416cf6:	pop    rbx
  416cf7:	pop    rsi
  416cf8:	pop    rdi
  416cf9:	jmp    0x420690
  416cfe:	xchg   ax,ax
  416d00:	call   0x409300
  416d05:	mov    rcx,QWORD PTR [rbx+0x10]
  416d09:	mov    QWORD PTR [rbx+0x30],rax
  416d0d:	call   0x422a00
  416d12:	mov    rcx,QWORD PTR [rbx+0x38]
  416d16:	mov    QWORD PTR [rbx+0x10],rax
  416d1a:	test   rcx,rcx
  416d1d:	je     0x416d28
  416d1f:	call   0x422a00
  416d24:	mov    QWORD PTR [rbx+0x38],rax
  416d28:	mov    rcx,QWORD PTR [rbx+0x48]
  416d2c:	test   rcx,rcx
  416d2f:	je     0x416d3a
  416d31:	call   0x422a00
  416d36:	mov    QWORD PTR [rbx+0x48],rax
  416d3a:	mov    rcx,QWORD PTR [rbx+0x40]
  416d3e:	test   rcx,rcx
  416d41:	je     0x416d4c
  416d43:	call   0x422a00
  416d48:	mov    QWORD PTR [rbx+0x40],rax
  416d4c:	mov    rcx,QWORD PTR [rbx+0x18]
  416d50:	call   0x422a00
  416d55:	mov    QWORD PTR [rbx+0x18],rax
  416d59:	jmp    0x416cb8
  416d5e:	xchg   ax,ax
  416d60:	mov    rax,QWORD PTR [rip+0x32d99]        # 0x449b00
  416d67:	lea    rcx,[rip+0x2d837]        # 0x4445a5
  416d6e:	mov    rdx,QWORD PTR [rax]
  416d71:	add    rsp,0x20
  416d75:	pop    rbx
  416d76:	pop    rsi
  416d77:	pop    rdi
  416d78:	jmp    0x4144d0
  416d7d:	nop    DWORD PTR [rax]
  416d80:	push   rbx
  416d81:	sub    rsp,0x20
  416d85:	mov    rax,QWORD PTR [rip+0x32e84]        # 0x449c10
  416d8c:	mov    rax,QWORD PTR [rax]
  416d8f:	cmp    QWORD PTR [rax],0x0
  416d93:	je     0x416d9e
  416d95:	test   BYTE PTR [rcx+0x80],0x2
  416d9c:	je     0x416da4
  416d9e:	add    rsp,0x20
  416da2:	pop    rbx
  416da3:	ret    
  416da4:	mov    rbx,rcx
  416da7:	call   0x414e30
  416dac:	mov    rcx,rbx
  416daf:	call   0x41fa60
  416db4:	mov    rax,QWORD PTR [rip+0x32b05]        # 0x4498c0
  416dbb:	mov    eax,DWORD PTR [rax]
  416dbd:	test   eax,eax
  416dbf:	je     0x416d9e
  416dc1:	mov    rcx,rbx
  416dc4:	add    rsp,0x20
  416dc8:	pop    rbx
  416dc9:	jmp    0x4060d0
  416dce:	xchg   ax,ax
  416dd0:	sub    rsp,0x28
  416dd4:	mov    rax,QWORD PTR [rip+0x32e35]        # 0x449c10
  416ddb:	mov    rax,QWORD PTR [rax]
  416dde:	cmp    QWORD PTR [rax],0x0
  416de2:	je     0x416e60
  416de4:	test   BYTE PTR [rcx+0x80],0x2
  416deb:	jne    0x416e12
  416ded:	call   0x416d80
  416df2:	mov    rax,QWORD PTR [rip+0x32a07]        # 0x449800
  416df9:	mov    edx,DWORD PTR [rax]
  416dfb:	test   edx,edx
  416dfd:	jne    0x416e42
  416dff:	mov    eax,DWORD PTR [rip+0x3a84f]        # 0x451654
  416e05:	test   eax,eax
  416e07:	jne    0x416e31
  416e09:	add    rsp,0x28
  416e0d:	jmp    0x4136a0
  416e12:	lea    rcx,[rip+0x2d9f7]        # 0x444810
  416e19:	call   0x433f18
  416e1e:	lea    rcx,[rip+0x2d780]        # 0x4445a5
  416e25:	mov    rdx,rax
  416e28:	add    rsp,0x28
  416e2c:	jmp    0x4144d0
  416e31:	xor    ecx,ecx
  416e33:	call   0x420690
  416e38:	nop
  416e39:	add    rsp,0x28
  416e3d:	jmp    0x4136a0
  416e42:	mov    rax,QWORD PTR [rip+0x329a7]        # 0x4497f0
  416e49:	mov    rcx,QWORD PTR [rax]
  416e4c:	call   0x407650
  416e51:	mov    eax,DWORD PTR [rip+0x3a7fd]        # 0x451654
  416e57:	test   eax,eax
  416e59:	je     0x416e09
  416e5b:	jmp    0x416e31
  416e5d:	nop    DWORD PTR [rax]
  416e60:	mov    rax,QWORD PTR [rip+0x32c19]        # 0x449a80
  416e67:	lea    rcx,[rip+0x2d737]        # 0x4445a5
  416e6e:	mov    rdx,QWORD PTR [rax]
  416e71:	add    rsp,0x28
  416e75:	jmp    0x4144d0
  416e7a:	nop    WORD PTR [rax+rax*1+0x0]
  416e80:	push   r13
  416e82:	push   r12
  416e84:	push   rbp
  416e85:	push   rdi
  416e86:	push   rsi
  416e87:	push   rbx
  416e88:	sub    rsp,0x28
  416e8c:	mov    rdi,QWORD PTR [rip+0x32d7d]        # 0x449c10
  416e93:	mov    ebp,DWORD PTR [rcx+0x28]
  416e96:	xor    esi,esi
  416e98:	mov    r12d,DWORD PTR [rcx+0x18]
  416e9c:	mov    r13d,DWORD PTR [rcx+0x14]
  416ea0:	mov    rbx,rcx
  416ea3:	mov    rcx,QWORD PTR [rdi]
  416ea6:	test   rcx,rcx
  416ea9:	je     0x416ec6
  416eab:	nop    DWORD PTR [rax+rax*1+0x0]
  416eb0:	cmp    rcx,rbx
  416eb3:	je     0x416ebe
  416eb5:	test   BYTE PTR [rcx+0x80],0x2
  416ebc:	je     0x416ee2
  416ebe:	mov    rcx,QWORD PTR [rcx]
  416ec1:	test   rcx,rcx
  416ec4:	jne    0x416eb0
  416ec6:	test   esi,esi
  416ec8:	jne    0x416ef0
  416eca:	or     DWORD PTR [rbx+0x80],0x1
  416ed1:	add    rsp,0x28
  416ed5:	pop    rbx
  416ed6:	pop    rsi
  416ed7:	pop    rdi
  416ed8:	pop    rbp
  416ed9:	pop    r12
  416edb:	pop    r13
  416edd:	jmp    0x4136a0
  416ee2:	call   0x416d80
  416ee7:	add    esi,0x1
  416eea:	jmp    0x416ea3
  416eec:	nop    DWORD PTR [rax+0x0]
  416ef0:	mov    eax,DWORD PTR [rbx+0x18]
  416ef3:	sub    ebp,DWORD PTR [rbx+0x28]
  416ef6:	lea    edx,[r13+r12*1+0x0]
  416efb:	mov    ecx,r12d
  416efe:	sub    eax,r12d
  416f01:	lea    r8d,[rbp+rax*1+0x0]
  416f06:	call   0x404010
  416f0b:	jmp    0x416eca
  416f0d:	nop    DWORD PTR [rax]
  416f10:	jmp    0x41f8c0
  416f15:	nop
  416f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f20:	mov    ecx,0x1
  416f25:	jmp    0x420690
  416f2a:	nop    WORD PTR [rax+rax*1+0x0]
  416f30:	jmp    0x420b40
  416f35:	nop
  416f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f40:	push   r14
  416f42:	push   r13
  416f44:	push   r12
  416f46:	push   rbp
  416f47:	push   rdi
  416f48:	push   rsi
  416f49:	push   rbx
  416f4a:	sub    rsp,0x20
  416f4e:	mov    rbx,QWORD PTR [rdx+0x10]
  416f52:	mov    rsi,QWORD PTR [rdx]
  416f55:	mov    rbp,rcx
  416f58:	mov    rcx,QWORD PTR [rdx+0x8]
  416f5c:	mov    r12d,DWORD PTR [rdx+0x20]
  416f60:	mov    r8,QWORD PTR [rbp+0x20]
  416f64:	mov    rdx,rbx
  416f67:	call   0x412270
  416f6c:	test   rax,rax
  416f6f:	mov    r13,rax
  416f72:	je     0x417040
  416f78:	mov    rax,QWORD PTR [rbp+0x20]
  416f7c:	test   rax,rax
  416f7f:	je     0x416f87
  416f81:	test   BYTE PTR [rax+0x2c],0x10
  416f85:	jne    0x416fc1
  416f87:	mov    rdx,r13
  416f8a:	mov    rcx,rbp
  416f8d:	call   0x415020
  416f92:	test   r12d,r12d
  416f95:	jle    0x416fad
  416f97:	lea    edx,[r12-0x1]
  416f9c:	mov    rcx,rbp
  416f9f:	call   0x41fc30
  416fa4:	test   eax,eax
  416fa6:	js     0x416fad
  416fa8:	cmp    eax,DWORD PTR [rbp+0x70]
  416fab:	jl     0x417020
  416fad:	mov    eax,0x1
  416fb2:	add    rsp,0x20
  416fb6:	pop    rbx
  416fb7:	pop    rsi
  416fb8:	pop    rdi
  416fb9:	pop    rbp
  416fba:	pop    r12
  416fbc:	pop    r13
  416fbe:	pop    r14
  416fc0:	ret    
  416fc1:	mov    rsi,QWORD PTR [rax+0x10]
  416fc5:	lea    rdi,[rip+0x2d71a]        # 0x4446e6
  416fcc:	mov    ecx,0xc
  416fd1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416fd3:	jne    0x416f87
  416fd5:	mov    rdx,QWORD PTR [rip+0x32c34]        # 0x449c10
  416fdc:	mov    rsi,QWORD PTR [rdx]
  416fdf:	test   rsi,rsi
  416fe2:	je     0x416f87
  416fe4:	mov    rdi,QWORD PTR [rax]
  416fe7:	mov    rbx,rsi
  416fea:	nop    WORD PTR [rax+rax*1+0x0]
  416ff0:	mov    rcx,QWORD PTR [rbx+0x20]
  416ff4:	mov    rdx,rdi
  416ff7:	mov    rcx,QWORD PTR [rcx]
  416ffa:	call   0x43a648
  416fff:	test   eax,eax
  417001:	jne    0x417010
  417003:	test   BYTE PTR [rbx+0x80],0x40
  41700a:	je     0x4170d0
  417010:	mov    rbx,QWORD PTR [rsi]
  417013:	test   rbx,rbx
  417016:	jne    0x416ff0
  417018:	jmp    0x416f87
  41701d:	nop    DWORD PTR [rax]
  417020:	mov    rdx,QWORD PTR [rbp+0x60]
  417024:	cdqe   
  417026:	mov    rcx,rbp
  417029:	mov    eax,DWORD PTR [rdx+rax*4]
  41702c:	mov    DWORD PTR [rbp+0x2c],eax
  41702f:	call   0x420630
  417034:	jmp    0x416fad
  417039:	nop    DWORD PTR [rax+0x0]
  417040:	mov    r14,QWORD PTR [rip+0x32959]        # 0x4499a0
  417047:	mov    rcx,QWORD PTR [r14]
  41704a:	test   rcx,rcx
  41704d:	je     0x4170e2
  417053:	call   0x422a00
  417058:	test   rbx,rbx
  41705b:	mov    rdi,rax
  41705e:	setne  al
  417061:	test   rsi,rsi
  417064:	mov    edx,eax
  417066:	je     0x4170a2
  417068:	test   al,al
  41706a:	je     0x4170a2
  41706c:	mov    rdx,rsi
  41706f:	mov    rcx,rbx
  417072:	call   0x43a648
  417077:	test   eax,eax
  417079:	je     0x417104
  41707f:	test   rdi,rdi
  417082:	je     0x4170af
  417084:	lea    rcx,[rip+0x2d51a]        # 0x4445a5
  41708b:	mov    rdx,rdi
  41708e:	call   0x4144d0
  417093:	mov    rcx,rdi
  417096:	call   0x43a748
  41709b:	xor    eax,eax
  41709d:	jmp    0x416fb2
  4170a2:	test   rdi,rdi
  4170a5:	jne    0x417084
  4170a7:	test   dl,dl
  4170a9:	je     0x417140
  4170af:	mov    rdx,rbx
  4170b2:	mov    rax,QWORD PTR [rip+0x329a7]        # 0x449a60
  4170b9:	mov    rcx,QWORD PTR [rax]
  4170bc:	call   0x4144d0
  4170c1:	xor    eax,eax
  4170c3:	jmp    0x416fb2
  4170c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4170d0:	mov    rax,QWORD PTR [rip+0x32719]        # 0x4497f0
  4170d7:	mov    rbp,rbx
  4170da:	mov    QWORD PTR [rax],rbx
  4170dd:	jmp    0x416f87
  4170e2:	test   rbx,rbx
  4170e5:	setne  al
  4170e8:	test   rsi,rsi
  4170eb:	mov    edx,eax
  4170ed:	je     0x4170a7
  4170ef:	test   al,al
  4170f1:	je     0x417140
  4170f3:	mov    rdx,rsi
  4170f6:	mov    rcx,rbx
  4170f9:	call   0x43a648
  4170fe:	test   eax,eax
  417100:	jne    0x4170af
  417102:	xor    edi,edi
  417104:	mov    rcx,rdi
  417107:	call   0x43a748
  41710c:	lea    rdx,[rip+0x2d526]        # 0x444639
  417113:	mov    rcx,rsi
  417116:	call   0x4124d0
  41711b:	test   rax,rax
  41711e:	mov    r13,rax
  417121:	jne    0x416f78
  417127:	mov    rcx,QWORD PTR [r14]
  41712a:	test   rcx,rcx
  41712d:	je     0x4170af
  417133:	call   0x422a00
  417138:	mov    rdi,rax
  41713b:	jmp    0x41707f
  417140:	lea    rdx,[rip+0x2d4f2]        # 0x444639
  417147:	jmp    0x4170b2
  41714c:	nop    DWORD PTR [rax+0x0]
  417150:	push   rbx
  417151:	sub    rsp,0x50
  417155:	mov    rbx,rdx
  417158:	call   0x4095c0
  41715d:	mov    rax,QWORD PTR [rip+0x3281c]        # 0x449980
  417164:	lea    rdx,[rsp+0x20]
  417169:	mov    rcx,rbx
  41716c:	mov    DWORD PTR [rsp+0x40],0x0
  417174:	mov    rax,QWORD PTR [rax]
  417177:	mov    QWORD PTR [rsp+0x28],rax
  41717c:	mov    rax,QWORD PTR [rip+0x3280d]        # 0x449990
  417183:	mov    rax,QWORD PTR [rax]
  417186:	mov    QWORD PTR [rsp+0x30],rax
  41718b:	lea    rax,[rip+0x2d69f]        # 0x444831
  417192:	mov    QWORD PTR [rsp+0x20],rax
  417197:	call   0x416f40
  41719c:	nop
  41719d:	add    rsp,0x50
  4171a1:	pop    rbx
  4171a2:	ret    
  4171a3:	nop    DWORD PTR [rax]
  4171a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171b0:	push   r13
  4171b2:	push   r12
  4171b4:	push   rbp
  4171b5:	push   rdi
  4171b6:	push   rsi
  4171b7:	push   rbx
  4171b8:	sub    rsp,0x28
  4171bc:	mov    rdi,QWORD PTR [rcx+0x20]
  4171c0:	mov    r9d,DWORD PTR [rdi+0x2c]
  4171c4:	mov    esi,r9d
  4171c7:	and    esi,0x10
  4171ca:	jne    0x4171f0
  4171cc:	cmp    edx,0x1
  4171cf:	mov    rbx,rcx
  4171d2:	je     0x417204
  4171d4:	cmp    edx,0x2
  4171d7:	je     0x417270
  4171dd:	test   edx,edx
  4171df:	je     0x417230
  4171e1:	mov    eax,esi
  4171e3:	add    rsp,0x28
  4171e7:	pop    rbx
  4171e8:	pop    rsi
  4171e9:	pop    rdi
  4171ea:	pop    rbp
  4171eb:	pop    r12
  4171ed:	pop    r13
  4171ef:	ret    
  4171f0:	mov    esi,0x1
  4171f5:	mov    eax,esi
  4171f7:	add    rsp,0x28
  4171fb:	pop    rbx
  4171fc:	pop    rsi
  4171fd:	pop    rdi
  4171fe:	pop    rbp
  4171ff:	pop    r12
  417201:	pop    r13
  417203:	ret    
  417204:	mov    rdx,rcx
  417207:	lea    rcx,[rip+0x2d4f5]        # 0x444703
  41720e:	xor    esi,esi
  417210:	call   0x4151e0
  417215:	test   eax,eax
  417217:	sete   sil
  41721b:	mov    eax,esi
  41721d:	add    rsp,0x28
  417221:	pop    rbx
  417222:	pop    rsi
  417223:	pop    rdi
  417224:	pop    rbp
  417225:	pop    r12
  417227:	pop    r13
  417229:	ret    
  41722a:	nop    WORD PTR [rax+rax*1+0x0]
  417230:	and    r9d,0x600
  417237:	jne    0x417255
  417239:	mov    edx,0x31
  41723e:	call   0x413220
  417243:	test   rax,rax
  417246:	je     0x417255
  417248:	mov    rdx,rax
  41724b:	mov    rcx,rbx
  41724e:	call   0x416f40
  417253:	jmp    0x4171e1
  417255:	cmp    QWORD PTR [rdi+0x48],0x0
  41725a:	je     0x4172a0
  41725c:	lea    rcx,[rip+0x2d4a0]        # 0x444703
  417263:	mov    rdx,rbx
  417266:	call   0x4151e0
  41726b:	jmp    0x4171e1
  417270:	mov    rax,QWORD PTR [rip+0x327b9]        # 0x449a30
  417277:	lea    rcx,[rip+0x2d327]        # 0x4445a5
  41727e:	mov    esi,0x1
  417283:	mov    rdx,QWORD PTR [rax]
  417286:	call   0x4144d0
  41728b:	mov    eax,esi
  41728d:	add    rsp,0x28
  417291:	pop    rbx
  417292:	pop    rsi
  417293:	pop    rdi
  417294:	pop    rbp
  417295:	pop    r12
  417297:	pop    r13
  417299:	ret    
  41729a:	nop    WORD PTR [rax+rax*1+0x0]
  4172a0:	xor    r12d,r12d
  4172a3:	cmp    QWORD PTR [rdi+0x38],0x0
  4172a8:	mov    r13,QWORD PTR [rbx+0xb0]
  4172af:	je     0x417302
  4172b1:	lea    rcx,[rip+0x2d448]        # 0x444700
  4172b8:	mov    rdx,rbx
  4172bb:	call   0x4151e0
  4172c0:	test   eax,eax
  4172c2:	je     0x4171f0
  4172c8:	mov    rdi,QWORD PTR [rbx+0x20]
  4172cc:	mov    rbp,QWORD PTR [rdi+0x48]
  4172d0:	test   rbp,rbp
  4172d3:	je     0x4172f7
  4172d5:	mov    edx,0x31
  4172da:	mov    rcx,rbx
  4172dd:	call   0x413220
  4172e2:	test   rax,rax
  4172e5:	je     0x417343
  4172e7:	mov    rdx,QWORD PTR [rax+0x10]
  4172eb:	mov    rcx,rbp
  4172ee:	call   0x43a648
  4172f3:	test   eax,eax
  4172f5:	jne    0x417343
  4172f7:	add    r12d,0x1
  4172fb:	cmp    QWORD PTR [rdi+0x38],0x0
  417300:	jne    0x4172b1
  417302:	xor    edi,edi
  417304:	test   r12d,r12d
  417307:	je     0x417320
  417309:	nop    DWORD PTR [rax+0x0]
  417310:	mov    rcx,rbx
  417313:	add    edi,0x1
  417316:	call   0x414d90
  41731b:	cmp    edi,r12d
  41731e:	jne    0x417310
  417320:	mov    eax,DWORD PTR [rip+0x3a32a]        # 0x451650
  417326:	test   eax,eax
  417328:	je     0x41737d
  41732a:	cmp    eax,0x1
  41732d:	jne    0x417378
  41732f:	lea    rcx,[rip+0x2d303]        # 0x444639
  417336:	mov    rdx,rbx
  417339:	call   0x417150
  41733e:	jmp    0x4171e1
  417343:	lea    rcx,[rip+0x2d3b9]        # 0x444703
  41734a:	mov    rdx,rbx
  41734d:	call   0x4151e0
  417352:	mov    rax,QWORD PTR [rbx+0xb0]
  417359:	lea    rdx,[rbx+0xb0]
  417360:	lea    rcx,[rbx+0xa8]
  417367:	mov    r8d,r13d
  41736a:	lea    r9d,[rax-0x1]
  41736e:	call   0x4149d0
  417373:	jmp    0x4171e1
  417378:	call   0x43a7b0
  41737d:	lea    rcx,[rip+0x2d4cc]        # 0x444850
  417384:	mov    esi,0x1
  417389:	call   0x433f18
  41738e:	lea    rcx,[rip+0x2d210]        # 0x4445a5
  417395:	mov    rdx,rax
  417398:	call   0x4144d0
  41739d:	jmp    0x4171e1
  4173a2:	nop    DWORD PTR [rax+0x0]
  4173a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173b0:	push   rbx
  4173b1:	sub    rsp,0x20
  4173b5:	mov    rbx,rcx
  4173b8:	call   0x4204c0
  4173bd:	lea    edx,[rax+0x1]
  4173c0:	cmp    edx,DWORD PTR [rbx+0x70]
  4173c3:	jl     0x417410
  4173c5:	mov    eax,DWORD PTR [rip+0x2777d]        # 0x43eb48
  4173cb:	test   eax,eax
  4173cd:	jne    0x4173e4
  4173cf:	mov    rax,QWORD PTR [rbx+0x20]
  4173d3:	mov    eax,DWORD PTR [rax+0x20]
  4173d6:	sub    eax,0x1
  4173d9:	mov    DWORD PTR [rbx+0x2c],eax
  4173dc:	xor    eax,eax
  4173de:	add    rsp,0x20
  4173e2:	pop    rbx
  4173e3:	ret    
  4173e4:	mov    edx,DWORD PTR [rip+0x3a272]        # 0x45165c
  4173ea:	mov    rcx,rbx
  4173ed:	call   0x4171b0
  4173f2:	test   eax,eax
  4173f4:	jne    0x4173cf
  4173f6:	mov    DWORD PTR [rbx+0x2c],0x0
  4173fd:	mov    rcx,rbx
  417400:	call   0x420be0
  417405:	mov    eax,0x1
  41740a:	jmp    0x4173de
  41740c:	nop    DWORD PTR [rax+0x0]
  417410:	mov    rdx,QWORD PTR [rbx+0x60]
  417414:	cdqe   
  417416:	mov    rcx,rbx
  417419:	mov    eax,DWORD PTR [rdx+rax*4+0x4]
  41741d:	mov    DWORD PTR [rbx+0x2c],eax
  417420:	call   0x420be0
  417425:	mov    eax,0x1
  41742a:	add    rsp,0x20
  41742e:	pop    rbx
  41742f:	ret    
  417430:	push   rbx
  417431:	sub    rsp,0x20
  417435:	mov    rbx,rcx
  417438:	mov    rcx,QWORD PTR [rcx+0x20]
  41743c:	test   rcx,rcx
  41743f:	jne    0x41744f
  417441:	jmp    0x417490
  417443:	mov    rcx,rbx
  417446:	call   0x4173b0
  41744b:	mov    rcx,QWORD PTR [rbx+0x20]
  41744f:	mov    rdx,QWORD PTR [rbx+0x48]
  417453:	mov    rax,QWORD PTR [rbx+0x50]
  417457:	mov    edx,DWORD PTR [rax+rdx*4-0x4]
  41745b:	call   0x413b40
  417460:	test   eax,eax
  417462:	je     0x417443
  417464:	mov    rax,QWORD PTR [rbx+0x48]
  417468:	test   rax,rax
  41746b:	je     0x417490
  41746d:	mov    rdx,QWORD PTR [rbx+0x50]
  417471:	mov    eax,DWORD PTR [rdx+rax*4-0x4]
  417475:	cmp    DWORD PTR [rbx+0x2c],eax
  417478:	je     0x417490
  41747a:	mov    rcx,rbx
  41747d:	mov    DWORD PTR [rbx+0x2c],eax
  417480:	add    rsp,0x20
  417484:	pop    rbx
  417485:	jmp    0x4135e0
  41748a:	nop    WORD PTR [rax+rax*1+0x0]
  417490:	add    rsp,0x20
  417494:	pop    rbx
  417495:	ret    
  417496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4174a0:	push   rsi
  4174a1:	push   rbx
  4174a2:	sub    rsp,0x28
  4174a6:	mov    esi,DWORD PTR [rcx+0x2c]
  4174a9:	xor    r8d,r8d
  4174ac:	mov    rbx,rcx
  4174af:	mov    edx,esi
  4174b1:	call   0x421260
  4174b6:	mov    r8,QWORD PTR [rbx+0x48]
  4174ba:	cdqe   
  4174bc:	cmp    rax,r8
  4174bf:	jae    0x4174e6
  4174c1:	mov    r10,QWORD PTR [rbx+0x50]
  4174c5:	mov    r9d,DWORD PTR [r10+rax*4]
  4174c9:	cmp    r9d,esi
  4174cc:	jne    0x4174f4
  4174ce:	sub    r8,0x1
  4174d2:	jmp    0x4174e1
  4174d4:	add    rax,0x1
  4174d8:	mov    edx,DWORD PTR [r10+rax*4]
  4174dc:	cmp    edx,r9d
  4174df:	jne    0x417500
  4174e1:	cmp    rax,r8
  4174e4:	jne    0x4174d4
  4174e6:	mov    rcx,rbx
  4174e9:	add    rsp,0x28
  4174ed:	pop    rbx
  4174ee:	pop    rsi
  4174ef:	jmp    0x4173b0
  4174f4:	mov    edx,r9d
  4174f7:	nop    WORD PTR [rax+rax*1+0x0]
  417500:	mov    DWORD PTR [rbx+0x2c],edx
  417503:	add    rsp,0x28
  417507:	pop    rbx
  417508:	pop    rsi
  417509:	ret    
  41750a:	nop    WORD PTR [rax+rax*1+0x0]
  417510:	push   rdi
  417511:	push   rsi
  417512:	push   rbx
  417513:	sub    rsp,0x20
  417517:	mov    r8,QWORD PTR [rcx+0x20]
  41751b:	mov    ebx,DWORD PTR [r8+0x2c]
  41751f:	and    ebx,0x10
  417522:	jne    0x417543
  417524:	cmp    edx,0x1
  417527:	mov    rsi,rcx
  41752a:	je     0x417552
  41752c:	cmp    edx,0x2
  41752f:	je     0x417630
  417535:	test   edx,edx
  417537:	je     0x417572
  417539:	mov    eax,ebx
  41753b:	add    rsp,0x20
  41753f:	pop    rbx
  417540:	pop    rsi
  417541:	pop    rdi
  417542:	ret    
  417543:	mov    ebx,0x1
  417548:	mov    eax,ebx
  41754a:	add    rsp,0x20
  41754e:	pop    rbx
  41754f:	pop    rsi
  417550:	pop    rdi
  417551:	ret    
  417552:	mov    rdx,rcx
  417555:	lea    rcx,[rip+0x2d1ac]        # 0x444708
  41755c:	xor    ebx,ebx
  41755e:	call   0x4151e0
  417563:	test   eax,eax
  417565:	sete   bl
  417568:	mov    eax,ebx
  41756a:	add    rsp,0x20
  41756e:	pop    rbx
  41756f:	pop    rsi
  417570:	pop    rdi
  417571:	ret    
  417572:	mov    rcx,QWORD PTR [r8+0x38]
  417576:	test   rcx,rcx
  417579:	je     0x417655
  41757f:	mov    r8d,0x5
  417585:	lea    rdx,[rip+0x2d2e8]        # 0x444874
  41758c:	call   QWORD PTR [rip+0x3d426]        # 0x4549b8
  417592:	test   eax,eax
  417594:	je     0x417670
  41759a:	mov    rax,QWORD PTR [rsi+0x20]
  41759e:	mov    rcx,QWORD PTR [rax+0x40]
  4175a2:	test   rcx,rcx
  4175a5:	je     0x417695
  4175ab:	mov    rdx,QWORD PTR [rax+0x38]
  4175af:	call   0x43a648
  4175b4:	test   eax,eax
  4175b6:	je     0x417695
  4175bc:	lea    rcx,[rip+0x2d145]        # 0x444708
  4175c3:	mov    rdx,rsi
  4175c6:	mov    rdi,QWORD PTR [rsi+0xb0]
  4175cd:	call   0x4151e0
  4175d2:	mov    rax,QWORD PTR [rsi+0x20]
  4175d6:	test   BYTE PTR [rax+0x2d],0x2
  4175da:	je     0x4175f0
  4175dc:	jmp    0x417539
  4175e1:	mov    rdx,rax
  4175e4:	mov    rcx,rsi
  4175e7:	call   0x416f40
  4175ec:	test   eax,eax
  4175ee:	je     0x417602
  4175f0:	mov    edx,0x30
  4175f5:	mov    rcx,rsi
  4175f8:	call   0x413220
  4175fd:	test   rax,rax
  417600:	jne    0x4175e1
  417602:	mov    rax,QWORD PTR [rsi+0xb0]
  417609:	lea    rdx,[rsi+0xb0]
  417610:	lea    rcx,[rsi+0xa8]
  417617:	mov    r8d,edi
  41761a:	xor    ebx,ebx
  41761c:	lea    r9d,[rax-0x1]
  417620:	call   0x4149d0
  417625:	jmp    0x417539
  41762a:	nop    WORD PTR [rax+rax*1+0x0]
  417630:	mov    rax,QWORD PTR [rip+0x32409]        # 0x449a40
  417637:	lea    rcx,[rip+0x2cf67]        # 0x4445a5
  41763e:	mov    ebx,0x1
  417643:	mov    rdx,QWORD PTR [rax]
  417646:	call   0x4144d0
  41764b:	mov    eax,ebx
  41764d:	add    rsp,0x20
  417651:	pop    rbx
  417652:	pop    rsi
  417653:	pop    rdi
  417654:	ret    
  417655:	cmp    QWORD PTR [r8+0x40],0x0
  41765a:	je     0x417670
  41765c:	lea    rcx,[rip+0x2d0a5]        # 0x444708
  417663:	mov    rdx,rsi
  417666:	call   0x4151e0
  41766b:	jmp    0x417539
  417670:	lea    rcx,[rip+0x2d209]        # 0x444880
  417677:	mov    ebx,0x1
  41767c:	call   0x433f18
  417681:	lea    rcx,[rip+0x2cf1d]        # 0x4445a5
  417688:	mov    rdx,rax
  41768b:	call   0x4144d0
  417690:	jmp    0x417539
  417695:	lea    rcx,[rip+0x2d064]        # 0x444700
  41769c:	mov    rdx,rsi
  41769f:	call   0x4151e0
  4176a4:	jmp    0x417539
  4176a9:	nop    DWORD PTR [rax+0x0]
  4176b0:	push   rbx
  4176b1:	sub    rsp,0x20
  4176b5:	mov    rbx,rcx
  4176b8:	call   0x4204c0
  4176bd:	test   eax,eax
  4176bf:	jg     0x4176e0
  4176c1:	mov    eax,DWORD PTR [rip+0x27481]        # 0x43eb48
  4176c7:	test   eax,eax
  4176c9:	jne    0x417710
  4176cb:	mov    DWORD PTR [rbx+0x2c],0x0
  4176d2:	xor    eax,eax
  4176d4:	add    rsp,0x20
  4176d8:	pop    rbx
  4176d9:	ret    
  4176da:	nop    WORD PTR [rax+rax*1+0x0]
  4176e0:	mov    rdx,QWORD PTR [rbx+0x60]
  4176e4:	cdqe   
  4176e6:	mov    rcx,rbx
  4176e9:	mov    eax,DWORD PTR [rdx+rax*4-0x4]
  4176ed:	mov    DWORD PTR [rbx+0x2c],eax
  4176f0:	call   0x420be0
  4176f5:	mov    rdx,QWORD PTR [rbx+0x48]
  4176f9:	mov    rax,QWORD PTR [rbx+0x50]
  4176fd:	mov    eax,DWORD PTR [rax+rdx*4-0x4]
  417701:	mov    DWORD PTR [rbx+0x2c],eax
  417704:	mov    eax,0x1
  417709:	add    rsp,0x20
  41770d:	pop    rbx
  41770e:	ret    
  41770f:	nop
  417710:	mov    edx,DWORD PTR [rip+0x39f46]        # 0x45165c
  417716:	mov    rcx,rbx
  417719:	call   0x417510
  41771e:	test   eax,eax
  417720:	jne    0x4176cb
  417722:	mov    rax,QWORD PTR [rbx+0x20]
  417726:	mov    edx,DWORD PTR [rbx+0x70]
  417729:	mov    eax,DWORD PTR [rax+0x20]
  41772c:	sub    eax,0x1
  41772f:	mov    DWORD PTR [rbx+0x2c],eax
  417732:	mov    eax,DWORD PTR [rbx+0x14]
  417735:	cmp    edx,eax
  417737:	jle    0x417743
  417739:	sub    edx,eax
  41773b:	mov    rcx,rbx
  41773e:	call   0x420550
  417743:	mov    rcx,rbx
  417746:	call   0x420be0
  41774b:	mov    eax,0x1
  417750:	jmp    0x4176d4
  417752:	nop    DWORD PTR [rax+0x0]
  417756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417760:	push   rsi
  417761:	push   rbx
  417762:	sub    rsp,0x28
  417766:	test   edx,edx
  417768:	js     0x4177aa
  41776a:	cmp    DWORD PTR [rcx+0x1c],0xffffffff
  41776e:	mov    ebx,edx
  417770:	mov    rsi,rcx
  417773:	je     0x4177a0
  417775:	test   ebx,ebx
  417777:	je     0x41778d
  417779:	nop    DWORD PTR [rax+0x0]
  417780:	mov    rcx,rsi
  417783:	call   0x4176b0
  417788:	sub    ebx,0x1
  41778b:	jne    0x417780
  41778d:	mov    rcx,rsi
  417790:	add    rsp,0x28
  417794:	pop    rbx
  417795:	pop    rsi
  417796:	jmp    0x413670
  41779b:	nop    DWORD PTR [rax+rax*1+0x0]
  4177a0:	call   0x4212e0
  4177a5:	mov    DWORD PTR [rsi+0x1c],eax
  4177a8:	jmp    0x417775
  4177aa:	neg    edx
  4177ac:	add    rsp,0x28
  4177b0:	pop    rbx
  4177b1:	pop    rsi
  4177b2:	jmp    0x4177c0
  4177b4:	xchg   ax,ax
  4177b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4177c0:	push   rsi
  4177c1:	push   rbx
  4177c2:	sub    rsp,0x28
  4177c6:	test   edx,edx
  4177c8:	js     0x41780a
  4177ca:	cmp    DWORD PTR [rcx+0x1c],0xffffffff
  4177ce:	mov    ebx,edx
  4177d0:	mov    rsi,rcx
  4177d3:	je     0x417800
  4177d5:	test   ebx,ebx
  4177d7:	je     0x4177ed
  4177d9:	nop    DWORD PTR [rax+0x0]
  4177e0:	mov    rcx,rsi
  4177e3:	call   0x4173b0
  4177e8:	sub    ebx,0x1
  4177eb:	jne    0x4177e0
  4177ed:	mov    rcx,rsi
  4177f0:	add    rsp,0x28
  4177f4:	pop    rbx
  4177f5:	pop    rsi
  4177f6:	jmp    0x413670
  4177fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417800:	call   0x4212e0
  417805:	mov    DWORD PTR [rsi+0x1c],eax
  417808:	jmp    0x4177d5
  41780a:	neg    edx
  41780c:	add    rsp,0x28
  417810:	pop    rbx
  417811:	pop    rsi
  417812:	jmp    0x417760
  417817:	nop    WORD PTR [rax+rax*1+0x0]
  417820:	push   rdi
  417821:	push   rsi
  417822:	push   rbx
  417823:	sub    rsp,0x20
  417827:	mov    rax,QWORD PTR [rcx+0x50]
  41782b:	mov    edi,DWORD PTR [rcx+0x2c]
  41782e:	mov    rsi,rcx
  417831:	mov    ebx,DWORD PTR [rax]
  417833:	test   ebx,ebx
  417835:	jne    0x417852
  417837:	jmp    0x417871
  417839:	nop    DWORD PTR [rax+0x0]
  417840:	mov    rcx,rsi
  417843:	call   0x4176b0
  417848:	mov    rax,QWORD PTR [rsi+0x50]
  41784c:	mov    ebx,DWORD PTR [rax]
  41784e:	test   ebx,ebx
  417850:	je     0x417871
  417852:	mov    rcx,QWORD PTR [rsi+0x20]
  417856:	lea    edx,[rbx-0x1]
  417859:	call   0x413b40
  41785e:	test   eax,eax
  417860:	je     0x417840
  417862:	cmp    ebx,edi
  417864:	mov    DWORD PTR [rsi+0x2c],ebx
  417867:	jne    0x41787a
  417869:	add    rsp,0x20
  41786d:	pop    rbx
  41786e:	pop    rsi
  41786f:	pop    rdi
  417870:	ret    
  417871:	xor    ebx,ebx
  417873:	cmp    ebx,edi
  417875:	mov    DWORD PTR [rsi+0x2c],ebx
  417878:	je     0x417869
  41787a:	mov    rcx,rsi
  41787d:	add    rsp,0x20
  417881:	pop    rbx
  417882:	pop    rsi
  417883:	pop    rdi
  417884:	jmp    0x4135e0
  417889:	nop    DWORD PTR [rax+0x0]
  417890:	push   rsi
  417891:	push   rbx
  417892:	sub    rsp,0x28
  417896:	mov    esi,DWORD PTR [rcx+0x2c]
  417899:	xor    r8d,r8d
  41789c:	mov    rbx,rcx
  41789f:	mov    edx,esi
  4178a1:	call   0x421260
  4178a6:	test   eax,eax
  4178a8:	js     0x4178d0
  4178aa:	mov    r8,QWORD PTR [rbx+0x50]
  4178ae:	cdqe   
  4178b0:	lea    rax,[r8+rax*4]
  4178b4:	mov    r9d,DWORD PTR [rax]
  4178b7:	cmp    r9d,esi
  4178ba:	je     0x4178cb
  4178bc:	jmp    0x4178de
  4178be:	xchg   ax,ax
  4178c0:	sub    rax,0x4
  4178c4:	mov    edx,DWORD PTR [rax]
  4178c6:	cmp    edx,r9d
  4178c9:	jne    0x4178e1
  4178cb:	cmp    rax,r8
  4178ce:	jne    0x4178c0
  4178d0:	mov    rcx,rbx
  4178d3:	add    rsp,0x28
  4178d7:	pop    rbx
  4178d8:	pop    rsi
  4178d9:	jmp    0x4176b0
  4178de:	mov    edx,r9d
  4178e1:	mov    DWORD PTR [rbx+0x2c],edx
  4178e4:	add    rsp,0x28
  4178e8:	pop    rbx
  4178e9:	pop    rsi
  4178ea:	ret    
  4178eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4178f0:	push   rsi
  4178f1:	push   rbx
  4178f2:	sub    rsp,0x28
  4178f6:	test   edx,edx
  4178f8:	js     0x41791e
  4178fa:	test   edx,edx
  4178fc:	mov    rsi,rcx
  4178ff:	mov    ebx,edx
  417901:	je     0x417910
  417903:	mov    rcx,rsi
  417906:	call   0x417890
  41790b:	sub    ebx,0x1
  41790e:	jne    0x417903
  417910:	mov    rcx,rsi
  417913:	add    rsp,0x28
  417917:	pop    rbx
  417918:	pop    rsi
  417919:	jmp    0x4135e0
  41791e:	neg    edx
  417920:	add    rsp,0x28
  417924:	pop    rbx
  417925:	pop    rsi
  417926:	jmp    0x417930
  417928:	nop    DWORD PTR [rax+rax*1+0x0]
  417930:	push   rsi
  417931:	push   rbx
  417932:	sub    rsp,0x28
  417936:	test   edx,edx
  417938:	js     0x41795e
  41793a:	test   edx,edx
  41793c:	mov    rsi,rcx
  41793f:	mov    ebx,edx
  417941:	je     0x417950
  417943:	mov    rcx,rsi
  417946:	call   0x4174a0
  41794b:	sub    ebx,0x1
  41794e:	jne    0x417943
  417950:	mov    rcx,rsi
  417953:	add    rsp,0x28
  417957:	pop    rbx
  417958:	pop    rsi
  417959:	jmp    0x4135e0
  41795e:	neg    edx
  417960:	add    rsp,0x28
  417964:	pop    rbx
  417965:	pop    rsi
  417966:	jmp    0x4178f0
  417968:	nop    DWORD PTR [rax+rax*1+0x0]
  417970:	push   rbp
  417971:	push   rdi
  417972:	push   rsi
  417973:	push   rbx
  417974:	sub    rsp,0x28
  417978:	test   edx,edx
  41797a:	mov    rsi,rcx
  41797d:	mov    edi,edx
  41797f:	js     0x417a64
  417985:	lea    rbp,[rcx+0x2c]
  417989:	nop    DWORD PTR [rax+0x0]
  417990:	sub    edi,0x1
  417993:	mov    rcx,rsi
  417996:	cmp    edi,0xffffffff
  417999:	je     0x417a57
  41799f:	call   0x417890
  4179a4:	mov    edx,DWORD PTR [rsi+0x2c]
  4179a7:	mov    r8,rbp
  4179aa:	mov    rcx,rsi
  4179ad:	call   0x421260
  4179b2:	mov    ebx,eax
  4179b4:	test   ebx,ebx
  4179b6:	js     0x4179d9
  4179b8:	mov    rdx,QWORD PTR [rsi+0x50]
  4179bc:	movsxd rax,ebx
  4179bf:	mov    rcx,QWORD PTR [rsi+0x20]
  4179c3:	mov    edx,DWORD PTR [rdx+rax*4]
  4179c6:	mov    DWORD PTR [rsi+0x2c],edx
  4179c9:	call   0x413cb0
  4179ce:	test   eax,eax
  4179d0:	jne    0x417a11
  4179d2:	sub    ebx,0x1
  4179d5:	test   ebx,ebx
  4179d7:	jns    0x4179b8
  4179d9:	mov    rcx,rsi
  4179dc:	call   0x4176b0
  4179e1:	test   eax,eax
  4179e3:	je     0x417990
  4179e5:	mov    eax,DWORD PTR [rsi+0x48]
  4179e8:	lea    ebx,[rax-0x1]
  4179eb:	jmp    0x4179b4
  4179ed:	nop    DWORD PTR [rax]
  4179f0:	mov    rdx,QWORD PTR [rsi+0x50]
  4179f4:	movsxd rax,ebx
  4179f7:	mov    edx,DWORD PTR [rdx+rax*4]
  4179fa:	test   edx,edx
  4179fc:	mov    DWORD PTR [rsi+0x2c],edx
  4179ff:	je     0x417990
  417a01:	mov    rcx,QWORD PTR [rsi+0x20]
  417a05:	call   0x413cb0
  417a0a:	test   eax,eax
  417a0c:	je     0x417a40
  417a0e:	sub    ebx,0x1
  417a11:	test   ebx,ebx
  417a13:	jns    0x4179f0
  417a15:	mov    rcx,rsi
  417a18:	call   0x4176b0
  417a1d:	test   eax,eax
  417a1f:	je     0x417990
  417a25:	mov    eax,DWORD PTR [rsi+0x48]
  417a28:	mov    edx,DWORD PTR [rsi+0x2c]
  417a2b:	mov    rcx,QWORD PTR [rsi+0x20]
  417a2f:	lea    ebx,[rax-0x1]
  417a32:	call   0x413b40
  417a37:	test   eax,eax
  417a39:	je     0x417a11
  417a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  417a40:	mov    rcx,rsi
  417a43:	sub    edi,0x1
  417a46:	call   0x4174a0
  417a4b:	cmp    edi,0xffffffff
  417a4e:	mov    rcx,rsi
  417a51:	jne    0x41799f
  417a57:	add    rsp,0x28
  417a5b:	pop    rbx
  417a5c:	pop    rsi
  417a5d:	pop    rdi
  417a5e:	pop    rbp
  417a5f:	jmp    0x4135e0
  417a64:	neg    edi
  417a66:	mov    edx,edi
  417a68:	add    rsp,0x28
  417a6c:	pop    rbx
  417a6d:	pop    rsi
  417a6e:	pop    rdi
  417a6f:	pop    rbp
  417a70:	jmp    0x417a80
  417a72:	nop    DWORD PTR [rax+0x0]
  417a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417a80:	push   r12
  417a82:	push   rbp
  417a83:	push   rdi
  417a84:	push   rsi
  417a85:	push   rbx
  417a86:	sub    rsp,0x20
  417a8a:	test   edx,edx
  417a8c:	mov    rbx,rcx
  417a8f:	mov    ebp,edx
  417a91:	js     0x417b49
  417a97:	lea    r12,[rcx+0x2c]
  417a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417aa0:	sub    ebp,0x1
  417aa3:	cmp    ebp,0xffffffff
  417aa6:	je     0x417b37
  417aac:	mov    edx,DWORD PTR [rbx+0x2c]
  417aaf:	mov    r8,r12
  417ab2:	mov    rcx,rbx
  417ab5:	call   0x421260
  417aba:	mov    edi,eax
  417abc:	nop    DWORD PTR [rax+0x0]
  417ac0:	movsxd rsi,edi
  417ac3:	cmp    rsi,QWORD PTR [rbx+0x48]
  417ac7:	jb     0x417ae0
  417ac9:	mov    rcx,rbx
  417acc:	call   0x4173b0
  417ad1:	test   eax,eax
  417ad3:	je     0x417aa0
  417ad5:	xor    edi,edi
  417ad7:	movsxd rsi,edi
  417ada:	cmp    rsi,QWORD PTR [rbx+0x48]
  417ade:	jae    0x417ac9
  417ae0:	mov    rax,QWORD PTR [rbx+0x50]
  417ae4:	mov    rcx,QWORD PTR [rbx+0x20]
  417ae8:	mov    edx,DWORD PTR [rax+rsi*4]
  417aeb:	mov    DWORD PTR [rbx+0x2c],edx
  417aee:	call   0x413cb0
  417af3:	test   eax,eax
  417af5:	jne    0x417b11
  417af7:	add    edi,0x1
  417afa:	jmp    0x417ac0
  417afc:	nop    DWORD PTR [rax+0x0]
  417b00:	mov    rcx,rbx
  417b03:	call   0x4173b0
  417b08:	test   eax,eax
  417b0a:	je     0x417aa0
  417b0c:	xor    edi,edi
  417b0e:	movsxd rsi,edi
  417b11:	cmp    rsi,QWORD PTR [rbx+0x48]
  417b15:	jae    0x417b00
  417b17:	mov    rax,QWORD PTR [rbx+0x50]
  417b1b:	mov    rcx,QWORD PTR [rbx+0x20]
  417b1f:	mov    edx,DWORD PTR [rax+rsi*4]
  417b22:	mov    DWORD PTR [rbx+0x2c],edx
  417b25:	call   0x413cb0
  417b2a:	test   eax,eax
  417b2c:	je     0x417aa0
  417b32:	add    edi,0x1
  417b35:	jmp    0x417b0e
  417b37:	mov    rcx,rbx
  417b3a:	add    rsp,0x20
  417b3e:	pop    rbx
  417b3f:	pop    rsi
  417b40:	pop    rdi
  417b41:	pop    rbp
  417b42:	pop    r12
  417b44:	jmp    0x4135e0
  417b49:	neg    edx
  417b4b:	add    rsp,0x20
  417b4f:	pop    rbx
  417b50:	pop    rsi
  417b51:	pop    rdi
  417b52:	pop    rbp
  417b53:	pop    r12
  417b55:	jmp    0x417970
  417b5a:	nop    WORD PTR [rax+rax*1+0x0]
  417b60:	push   rbx
  417b61:	sub    rsp,0x20
  417b65:	mov    eax,edx
  417b67:	mov    rbx,rcx
  417b6a:	sar    eax,0x1f
  417b6d:	xor    edx,eax
  417b6f:	sub    edx,eax
  417b71:	mov    eax,DWORD PTR [rcx+0x28]
  417b74:	test   eax,eax
  417b76:	jle    0x417b90
  417b78:	sub    eax,edx
  417b7a:	mov    edx,0x0
  417b7f:	cmovns edx,eax
  417b82:	add    rsp,0x20
  417b86:	pop    rbx
  417b87:	jmp    0x420550
  417b8c:	nop    DWORD PTR [rax+0x0]
  417b90:	test   r8d,r8d
  417b93:	je     0x417ba0
  417b95:	add    rsp,0x20
  417b99:	pop    rbx
  417b9a:	ret    
  417b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417ba0:	mov    edx,DWORD PTR [rip+0x39ab6]        # 0x45165c
  417ba6:	call   0x417510
  417bab:	test   eax,eax
  417bad:	je     0x417bc0
  417baf:	mov    DWORD PTR [rbx+0x2c],0x0
  417bb6:	jmp    0x417b95
  417bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  417bc0:	mov    rax,QWORD PTR [rbx+0x20]
  417bc4:	mov    rcx,rbx
  417bc7:	mov    eax,DWORD PTR [rax+0x20]
  417bca:	sub    eax,0x1
  417bcd:	mov    DWORD PTR [rbx+0x2c],eax
  417bd0:	call   0x4135e0
  417bd5:	movsxd rdx,DWORD PTR [rbx+0x28]
  417bd9:	mov    rax,QWORD PTR [rbx+0x60]
  417bdd:	mov    eax,DWORD PTR [rax+rdx*4]
  417be0:	mov    DWORD PTR [rbx+0x2c],eax
  417be3:	jmp    0x417b95
  417be5:	nop
  417be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417bf0:	push   rbx
  417bf1:	sub    rsp,0x20
  417bf5:	test   edx,edx
  417bf7:	js     0x417c60
  417bf9:	mov    eax,DWORD PTR [rcx+0x70]
  417bfc:	sub    eax,DWORD PTR [rcx+0x14]
  417bff:	mov    r9d,DWORD PTR [rcx+0x28]
  417c03:	cmp    r9d,eax
  417c06:	jl     0x417c32
  417c08:	test   r8d,r8d
  417c0b:	je     0x417c13
  417c0d:	add    rsp,0x20
  417c11:	pop    rbx
  417c12:	ret    
  417c13:	mov    edx,DWORD PTR [rip+0x39a43]        # 0x45165c
  417c19:	mov    rbx,rcx
  417c1c:	call   0x4171b0
  417c21:	test   eax,eax
  417c23:	jne    0x417c40
  417c25:	mov    DWORD PTR [rbx+0x2c],0x0
  417c2c:	add    rsp,0x20
  417c30:	pop    rbx
  417c31:	ret    
  417c32:	add    edx,r9d
  417c35:	add    rsp,0x20
  417c39:	pop    rbx
  417c3a:	jmp    0x420550
  417c3f:	nop
  417c40:	mov    rax,QWORD PTR [rbx+0x20]
  417c44:	mov    rcx,rbx
  417c47:	mov    eax,DWORD PTR [rax+0x20]
  417c4a:	sub    eax,0x1
  417c4d:	mov    DWORD PTR [rbx+0x2c],eax
  417c50:	add    rsp,0x20
  417c54:	pop    rbx
  417c55:	jmp    0x4135e0
  417c5a:	nop    WORD PTR [rax+rax*1+0x0]
  417c60:	neg    edx
  417c62:	add    rsp,0x20
  417c66:	pop    rbx
  417c67:	jmp    0x417b60
  417c6c:	nop    DWORD PTR [rax+0x0]
  417c70:	mov    eax,DWORD PTR [rip+0x399ce]        # 0x451644
  417c76:	test   eax,eax
  417c78:	jne    0x417c87
  417c7a:	mov    eax,DWORD PTR [rip+0x26ec0]        # 0x43eb40
  417c80:	test   eax,eax
  417c82:	jle    0x417c90
  417c84:	imul   edx,eax
  417c87:	xor    r8d,r8d
  417c8a:	jmp    0x417bf0
  417c8f:	nop
  417c90:	mov    eax,DWORD PTR [rcx+0x14]
  417c93:	sub    eax,0x2
  417c96:	jmp    0x417c84
  417c98:	nop    DWORD PTR [rax+rax*1+0x0]
  417ca0:	neg    edx
  417ca2:	jmp    0x417c70
  417ca4:	xchg   ax,ax
  417ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cb0:	mov    eax,DWORD PTR [rip+0x3998e]        # 0x451644
  417cb6:	test   eax,eax
  417cb8:	je     0x417cc4
  417cba:	test   edx,edx
  417cbc:	js     0x417cd0
  417cbe:	mov    DWORD PTR [rip+0x26e7c],edx        # 0x43eb40
  417cc4:	jmp    0x417c70
  417cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cd0:	mov    eax,edx
  417cd2:	neg    eax
  417cd4:	mov    DWORD PTR [rip+0x26e66],eax        # 0x43eb40
  417cda:	jmp    0x417c70
  417cdc:	nop    DWORD PTR [rax+0x0]
  417ce0:	neg    edx
  417ce2:	jmp    0x417cb0
  417ce4:	xchg   ax,ax
  417ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cf0:	mov    rax,QWORD PTR [rip+0x31f19]        # 0x449c10
  417cf7:	mov    rax,QWORD PTR [rax]
  417cfa:	cmp    QWORD PTR [rax],0x0
  417cfe:	je     0x417d20
  417d00:	mov    rax,QWORD PTR [rcx]
  417d03:	test   rax,rax
  417d06:	je     0x417d10
  417d08:	mov    rcx,rax
  417d0b:	jmp    0x417c70
  417d10:	mov    rax,QWORD PTR [rcx+0x8]
  417d14:	mov    rcx,rax
  417d17:	jmp    0x417c70
  417d1c:	nop    DWORD PTR [rax+0x0]
  417d20:	mov    rax,QWORD PTR [rip+0x31db9]        # 0x449ae0
  417d27:	lea    rcx,[rip+0x2c877]        # 0x4445a5
  417d2e:	mov    rdx,QWORD PTR [rax]
  417d31:	jmp    0x4144d0
  417d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d40:	neg    edx
  417d42:	jmp    0x417cf0
  417d44:	xchg   ax,ax
  417d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d50:	mov    eax,DWORD PTR [rip+0x398ee]        # 0x451644
  417d56:	test   eax,eax
  417d58:	jne    0x417d67
  417d5a:	mov    eax,DWORD PTR [rip+0x26de0]        # 0x43eb40
  417d60:	test   eax,eax
  417d62:	jle    0x417d72
  417d64:	imul   edx,eax
  417d67:	mov    r8d,0x1
  417d6d:	jmp    0x417bf0
  417d72:	mov    eax,DWORD PTR [rcx+0x14]
  417d75:	sub    eax,0x2
  417d78:	jmp    0x417d64
  417d7a:	nop    WORD PTR [rax+rax*1+0x0]
  417d80:	neg    edx
  417d82:	jmp    0x417d50
  417d84:	xchg   ax,ax
  417d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d90:	mov    eax,DWORD PTR [rip+0x398ae]        # 0x451644
  417d96:	test   eax,eax
  417d98:	jne    0x417db2
  417d9a:	mov    eax,DWORD PTR [rip+0x26da0]        # 0x43eb40
  417da0:	test   eax,eax
  417da2:	jle    0x417dc7
  417da4:	imul   edx,eax
  417da7:	mov    r8d,0x1
  417dad:	jmp    0x417bf0
  417db2:	test   edx,edx
  417db4:	js     0x417de0
  417db6:	mov    eax,edx
  417db8:	mov    DWORD PTR [rip+0x26d82],edx        # 0x43eb40
  417dbe:	mov    edx,0x1
  417dc3:	test   eax,eax
  417dc5:	jg     0x417da4
  417dc7:	mov    eax,DWORD PTR [rcx+0x14]
  417dca:	mov    r8d,0x1
  417dd0:	sub    eax,0x2
  417dd3:	imul   edx,eax
  417dd6:	jmp    0x417bf0
  417ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  417de0:	mov    eax,edx
  417de2:	mov    edx,0xffffffff
  417de7:	mov    r8d,0x1
  417ded:	neg    eax
  417def:	imul   edx,eax
  417df2:	mov    DWORD PTR [rip+0x26d48],eax        # 0x43eb40
  417df8:	jmp    0x417bf0
  417dfd:	nop    DWORD PTR [rax]
  417e00:	neg    edx
  417e02:	jmp    0x417d90
  417e04:	xchg   ax,ax
  417e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e10:	mov    r8d,0x1
  417e16:	jmp    0x417bf0
  417e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  417e20:	mov    eax,DWORD PTR [rip+0x3981e]        # 0x451644
  417e26:	test   eax,eax
  417e28:	jne    0x417e54
  417e2a:	mov    eax,DWORD PTR [rip+0x39828]        # 0x451658
  417e30:	test   eax,eax
  417e32:	jne    0x417e46
  417e34:	mov    eax,DWORD PTR [rcx+0x14]
  417e37:	add    eax,0x1
  417e3a:	mov    r8d,eax
  417e3d:	shr    r8d,0x1f
  417e41:	add    eax,r8d
  417e44:	sar    eax,1
  417e46:	imul   edx,eax
  417e49:	mov    r8d,0x1
  417e4f:	jmp    0x417bf0
  417e54:	test   edx,edx
  417e56:	js     0x417e70
  417e58:	mov    DWORD PTR [rip+0x397fa],edx        # 0x451658
  417e5e:	mov    eax,edx
  417e60:	mov    edx,0x1
  417e65:	jmp    0x417e30
  417e67:	nop    WORD PTR [rax+rax*1+0x0]
  417e70:	mov    eax,edx
  417e72:	mov    edx,0xffffffff
  417e77:	mov    r8d,0x1
  417e7d:	neg    eax
  417e7f:	imul   edx,eax
  417e82:	mov    DWORD PTR [rip+0x397d0],eax        # 0x451658
  417e88:	jmp    0x417bf0
  417e8d:	nop    DWORD PTR [rax]
  417e90:	neg    edx
  417e92:	jmp    0x417e20
  417e94:	xchg   ax,ax
  417e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ea0:	mov    r8d,0x1
  417ea6:	jmp    0x417b60
  417eab:	nop    DWORD PTR [rax+rax*1+0x0]
  417eb0:	push   r15
  417eb2:	push   r14
  417eb4:	push   r13
  417eb6:	push   r12
  417eb8:	push   rbp
  417eb9:	push   rdi
  417eba:	push   rsi
  417ebb:	push   rbx
  417ebc:	sub    rsp,0x78
  417ec0:	mov    rax,QWORD PTR [rcx+0x20]
  417ec4:	mov    r14,rcx
  417ec7:	mov    DWORD PTR [rsp+0x4c],0x1
  417ecf:	mov    r8d,DWORD PTR [rax+0x50]
  417ed3:	test   r8d,r8d
  417ed6:	jne    0x417ee7
  417ed8:	mov    DWORD PTR [rax+0x50],0xffffff9d
  417edf:	mov    DWORD PTR [rsp+0x4c],0x0
  417ee7:	mov    rcx,QWORD PTR [r14+0x88]
  417eee:	lea    r13,[rsp+0x5c]
  417ef3:	lea    rbp,[rsp+0x60]
  417ef8:	lea    rdi,[r14+0x20]
  417efc:	lea    rsi,[rsp+0x68]
  417f01:	call   0x422a00
  417f06:	mov    rdx,QWORD PTR [r14+0x20]
  417f0a:	mov    r12,rax
  417f0d:	mov    eax,DWORD PTR [r14+0x2c]
  417f11:	mov    QWORD PTR [rsp+0x38],r13
  417f16:	mov    r8,r12
  417f19:	mov    DWORD PTR [rsp+0x30],0x0
  417f21:	mov    DWORD PTR [rsp+0x28],0x1
  417f29:	mov    rcx,r14
  417f2c:	mov    DWORD PTR [rsp+0x20],0x1
  417f34:	lea    r9d,[rax+0x1]
  417f38:	call   0x4153b0
  417f3d:	test   eax,eax
  417f3f:	je     0x41811b
  417f45:	cmp    QWORD PTR [r14+0x98],0x0
  417f4d:	je     0x417f54
  417f4f:	add    DWORD PTR [r14+0x2c],0x1
  417f54:	mov    rdx,QWORD PTR [r14+0x20]
  417f58:	test   BYTE PTR [rdx+0x2d],0x2
  417f5c:	jne    0x417fe0
  417f62:	movsxd rax,DWORD PTR [rdx+0x50]
  417f66:	cmp    eax,0xffffff9d
  417f69:	je     0x418050
  417f6f:	movsxd rcx,eax
  417f72:	shl    rcx,0x3
  417f76:	mov    r8,QWORD PTR [rdx+0x30]
  417f7a:	mov    r10,QWORD PTR [r8+rcx*1]
  417f7e:	test   r10,r10
  417f81:	je     0x417fe0
  417f83:	lea    r15d,[rax+0x1]
  417f87:	lea    rbx,[rax*8+0x8]
  417f8f:	jmp    0x417fa6
  417f91:	mov    rax,QWORD PTR [rdx+0x30]
  417f95:	add    r15d,0x1
  417f99:	mov    r10,QWORD PTR [rax+rbx*1]
  417f9d:	add    rbx,0x8
  417fa1:	test   r10,r10
  417fa4:	je     0x417fe0
  417fa6:	cmp    DWORD PTR [r10+0x24],0x1
  417fab:	jne    0x417f91
  417fad:	mov    rdx,QWORD PTR [r10+0x10]
  417fb1:	mov    rcx,QWORD PTR [r10+0x8]
  417fb5:	mov    r9,rbp
  417fb8:	mov    QWORD PTR [rsp+0x20],rsi
  417fbd:	mov    r8,rdi
  417fc0:	call   0x413e70
  417fc5:	test   eax,eax
  417fc7:	je     0x417fd9
  417fc9:	mov    rdx,QWORD PTR [rsp+0x68]
  417fce:	mov    rcx,QWORD PTR [rdx]
  417fd1:	mov    eax,DWORD PTR [rcx+0x18]
  417fd4:	test   ah,0x80
  417fd7:	je     0x418010
  417fd9:	mov    rdx,QWORD PTR [r14+0x20]
  417fdd:	jmp    0x417f91
  417fdf:	nop
  417fe0:	mov    rax,QWORD PTR [r14+0xb0]
  417fe7:	cmp    rax,0x1
  417feb:	jbe    0x418059
  417fed:	mov    rcx,QWORD PTR [r14+0xa8]
  417ff4:	mov    rax,QWORD PTR [rcx+rax*8-0x10]
  417ff9:	mov    rax,QWORD PTR [rax]
  417ffc:	mov    ecx,DWORD PTR [rax+0x50]
  417fff:	test   ecx,ecx
  418001:	je     0x418059
  418003:	mov    rcx,r14
  418006:	call   0x414c70
  41800b:	jmp    0x417f54
  418010:	or     ah,0x80
  418013:	mov    DWORD PTR [rcx+0x18],eax
  418016:	mov    rax,QWORD PTR [r14+0x20]
  41801a:	mov    rcx,QWORD PTR [rsp+0x60]
  41801f:	mov    DWORD PTR [rax+0x50],r15d
  418023:	call   0x4124e0
  418028:	test   rax,rax
  41802b:	je     0x417fd9
  41802d:	mov    rdx,rax
  418030:	mov    rcx,r14
  418033:	call   0x414e90
  418038:	mov    rdx,QWORD PTR [r14+0x20]
  41803c:	mov    DWORD PTR [rdx+0x50],0xffffff9d
  418043:	jmp    0x417f0d
  418048:	nop    DWORD PTR [rax+rax*1+0x0]
  418050:	xor    ecx,ecx
  418052:	xor    eax,eax
  418054:	jmp    0x417f76
  418059:	mov    eax,DWORD PTR [rsp+0x4c]
  41805d:	test   eax,eax
  41805f:	je     0x4180ef
  418065:	mov    rbx,QWORD PTR [rdx+0x10]
  418069:	lea    rcx,[rip+0x2c848]        # 0x4448b8
  418070:	call   0x433f18
  418075:	mov    rdx,rbx
  418078:	mov    rcx,rax
  41807b:	call   0x421100
  418080:	mov    rcx,QWORD PTR [r14+0x20]
  418084:	mov    rax,QWORD PTR [rcx+0x30]
  418088:	cmp    QWORD PTR [rax],0x0
  41808c:	je     0x418125
  418092:	add    rax,0x8
  418096:	xor    edx,edx
  418098:	nop    DWORD PTR [rax+rax*1+0x0]
  4180a0:	add    rax,0x8
  4180a4:	add    edx,0x1
  4180a7:	cmp    QWORD PTR [rax-0x8],0x0
  4180ac:	jne    0x4180a0
  4180ae:	add    edx,0x1
  4180b1:	mov    DWORD PTR [rcx+0x50],edx
  4180b4:	mov    edx,0x31
  4180b9:	mov    rcx,r14
  4180bc:	call   0x413220
  4180c1:	test   rax,rax
  4180c4:	je     0x418103
  4180c6:	mov    rdx,rax
  4180c9:	mov    rcx,r14
  4180cc:	call   0x416f40
  4180d1:	test   eax,eax
  4180d3:	je     0x418103
  4180d5:	mov    rax,QWORD PTR [r14+0x20]
  4180d9:	mov    rcx,r14
  4180dc:	mov    DWORD PTR [rax+0x50],0xffffff9d
  4180e3:	mov    eax,DWORD PTR [rax+0x28]
  4180e6:	mov    DWORD PTR [r14+0x2c],eax
  4180ea:	call   0x4156b0
  4180ef:	lea    rcx,[rip+0x2c617]        # 0x44470d
  4180f6:	call   0x433f18
  4180fb:	mov    rcx,rax
  4180fe:	call   0x4144d0
  418103:	mov    rcx,r12
  418106:	add    rsp,0x78
  41810a:	pop    rbx
  41810b:	pop    rsi
  41810c:	pop    rdi
  41810d:	pop    rbp
  41810e:	pop    r12
  418110:	pop    r13
  418112:	pop    r14
  418114:	pop    r15
  418116:	jmp    0x43a748
  41811b:	mov    rcx,r14
  41811e:	call   0x4135e0
  418123:	jmp    0x418103
  418125:	mov    edx,0x1
  41812a:	jmp    0x4180b1
  41812c:	nop    DWORD PTR [rax+0x0]
  418130:	push   r15
  418132:	push   r14
  418134:	push   r13
  418136:	push   r12
  418138:	push   rbp
  418139:	push   rdi
  41813a:	push   rsi
  41813b:	push   rbx
  41813c:	sub    rsp,0x28
  418140:	mov    rax,QWORD PTR [rcx+0x20]
  418144:	mov    rsi,rcx
  418147:	mov    ebp,edx
  418149:	mov    r13d,r9d
  41814c:	mov    rbx,QWORD PTR [rax+0x30]
  418150:	test   rbx,rbx
  418153:	je     0x418313
  418159:	test   edx,edx
  41815b:	setne  al
  41815e:	test   r8d,r8d
  418161:	sete   r14b
  418165:	mov    edi,eax
  418167:	and    dil,r14b
  41816a:	jne    0x4183f0
  418170:	test   r8d,r8d
  418173:	setne  dl
  418176:	test   ebp,ebp
  418178:	jne    0x418300
  41817e:	test   dl,dl
  418180:	lea    r12,[rip+0xffffffffffffb149]        # 0x4132d0
  418187:	je     0x418300
  41818d:	mov    rcx,rsi
  418190:	call   0x4204c0
  418195:	mov    rdx,QWORD PTR [rsi+0x60]
  418199:	cdqe   
  41819b:	mov    r8d,DWORD PTR [rdx+rax*4]
  41819f:	mov    edx,DWORD PTR [rdx+rax*4+0x4]
  4181a3:	test   edx,edx
  4181a5:	jne    0x4181ae
  4181a7:	mov    rax,QWORD PTR [rsi+0x20]
  4181ab:	mov    edx,DWORD PTR [rax+0x20]
  4181ae:	mov    rax,QWORD PTR [rbx]
  4181b1:	test   rax,rax
  4181b4:	je     0x418400
  4181ba:	mov    r11d,DWORD PTR [rax+0x18]
  4181be:	xor    r10d,r10d
  4181c1:	mov    r9d,0xffffffff
  4181c7:	cmp    edx,r11d
  4181ca:	jg     0x4181de
  4181cc:	jmp    0x418400
  4181d1:	mov    r11d,DWORD PTR [rax+0x18]
  4181d5:	add    r10,0x1
  4181d9:	cmp    edx,r11d
  4181dc:	jle    0x41822a
  4181de:	test   ebp,ebp
  4181e0:	movsxd rcx,r10d
  4181e3:	je     0x4181eb
  4181e5:	cmp    DWORD PTR [rax+0x24],0x1
  4181e9:	je     0x4181f9
  4181eb:	test   r14b,r14b
  4181ee:	jne    0x418220
  4181f0:	mov    r15d,DWORD PTR [rax+0x24]
  4181f4:	test   r15d,r15d
  4181f7:	jne    0x418220
  4181f9:	cmp    r8d,r11d
  4181fc:	jle    0x418204
  4181fe:	cmp    r8d,DWORD PTR [rax+0x1c]
  418202:	jge    0x418220
  418204:	mov    r9d,DWORD PTR [rsi+0x2c]
  418208:	cmp    r9d,r11d
  41820b:	jl     0x418213
  41820d:	cmp    r9d,DWORD PTR [rax+0x1c]
  418211:	jl     0x418237
  418213:	mov    r9d,ecx
  418216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418220:	mov    rax,QWORD PTR [rbx+r10*8+0x8]
  418225:	test   rax,rax
  418228:	jne    0x4181d1
  41822a:	cmp    r9d,0xffffffff
  41822e:	movsxd rcx,r9d
  418231:	je     0x418400
  418237:	test   r13d,r13d
  41823a:	mov    rbp,QWORD PTR [rbx+rcx*8]
  41823e:	je     0x418324
  418244:	test   dil,dil
  418247:	je     0x418430
  41824d:	test   rbp,rbp
  418250:	je     0x418412
  418256:	mov    rcx,QWORD PTR [rbp+0x0]
  41825a:	call   0x43a620
  41825f:	lea    rcx,[rip+0x2c673]        # 0x4448d9
  418266:	mov    rsi,rax
  418269:	call   0x433f18
  41826e:	mov    rcx,rax
  418271:	call   0x43a620
  418276:	lea    rcx,[rax+rsi*1]
  41827a:	call   0x4227b0
  41827f:	mov    rdi,QWORD PTR [rbp+0x0]
  418283:	lea    rcx,[rip+0x2c64f]        # 0x4448d9
  41828a:	mov    rsi,rax
  41828d:	call   0x433f18
  418292:	mov    r8,rdi
  418295:	mov    rdx,rax
  418298:	mov    rcx,rsi
  41829b:	call   0x433f00
  4182a0:	mov    rcx,rsi
  4182a3:	mov    r8,r12
  4182a6:	mov    rdx,rbx
  4182a9:	call   0x4065e0
  4182ae:	mov    rcx,rsi
  4182b1:	mov    rdi,rax
  4182b4:	call   0x43a748
  4182b9:	mov    rax,QWORD PTR [rip+0x31530]        # 0x4497f0
  4182c0:	test   rdi,rdi
  4182c3:	mov    rsi,QWORD PTR [rax]
  4182c6:	je     0x4184a2
  4182cc:	cmp    BYTE PTR [rdi],0x0
  4182cf:	je     0x418471
  4182d5:	test   rbp,rbp
  4182d8:	jne    0x41833a
  4182da:	mov    r14,QWORD PTR [rbx]
  4182dd:	mov    rax,QWORD PTR [rsi+0x20]
  4182e1:	test   r14,r14
  4182e4:	mov    r12d,DWORD PTR [rax+0x20]
  4182e8:	jne    0x41835a
  4182ea:	nop    WORD PTR [rax+rax*1+0x0]
  4182f0:	mov    rdx,rbp
  4182f3:	mov    rcx,rsi
  4182f6:	call   0x416f40
  4182fb:	jmp    0x4183d6
  418300:	test   al,al
  418302:	je     0x418313
  418304:	test   dl,dl
  418306:	lea    r12,[rip+0xffffffffffffafd3]        # 0x4132e0
  41830d:	jne    0x41818d
  418313:	add    rsp,0x28
  418317:	pop    rbx
  418318:	pop    rsi
  418319:	pop    rdi
  41831a:	pop    rbp
  41831b:	pop    r12
  41831d:	pop    r13
  41831f:	pop    r14
  418321:	pop    r15
  418323:	ret    
  418324:	test   rbp,rbp
  418327:	je     0x418313
  418329:	mov    rcx,QWORD PTR [rbp+0x0]
  41832d:	call   0x422a00
  418332:	test   rax,rax
  418335:	mov    rdi,rax
  418338:	je     0x418313
  41833a:	mov    rdx,QWORD PTR [rbp+0x0]
  41833e:	mov    rcx,rdi
  418341:	call   0x43a648
  418346:	test   eax,eax
  418348:	je     0x4182f0
  41834a:	mov    r14,QWORD PTR [rbx]
  41834d:	mov    rax,QWORD PTR [rsi+0x20]
  418351:	test   r14,r14
  418354:	mov    r12d,DWORD PTR [rax+0x20]
  418358:	je     0x4183bf
  41835a:	xor    r15d,r15d
  41835d:	mov    r13,0xffffffffffffffff
  418364:	mov    rdx,QWORD PTR [r14]
  418367:	mov    rcx,rdi
  41836a:	call   0x4213b0
  41836f:	test   eax,eax
  418371:	jne    0x418392
  418373:	mov    r8d,DWORD PTR [rsi+0x2c]
  418377:	sub    r8d,DWORD PTR [r14+0x1c]
  41837b:	mov    eax,r8d
  41837e:	sar    eax,0x1f
  418381:	xor    r8d,eax
  418384:	sub    r8d,eax
  418387:	cmp    r8d,r12d
  41838a:	jge    0x418392
  41838c:	mov    r12d,r8d
  41838f:	movsxd r13,r15d
  418392:	add    r15,0x1
  418396:	mov    r14,QWORD PTR [rbx+r15*8]
  41839a:	test   r14,r14
  41839d:	jne    0x418364
  41839f:	cmp    r13d,0xffffffff
  4183a3:	je     0x41848f
  4183a9:	mov    rax,QWORD PTR [rbx+r13*8]
  4183ad:	test   rax,rax
  4183b0:	jne    0x418487
  4183b6:	test   rbp,rbp
  4183b9:	je     0x418487
  4183bf:	lea    rcx,[rip+0x2c552]        # 0x444918
  4183c6:	call   0x433f18
  4183cb:	mov    rdx,rdi
  4183ce:	mov    rcx,rax
  4183d1:	call   0x4144d0
  4183d6:	mov    rcx,rdi
  4183d9:	add    rsp,0x28
  4183dd:	pop    rbx
  4183de:	pop    rsi
  4183df:	pop    rdi
  4183e0:	pop    rbp
  4183e1:	pop    r12
  4183e3:	pop    r13
  4183e5:	pop    r14
  4183e7:	pop    r15
  4183e9:	jmp    0x43a748
  4183ee:	xchg   ax,ax
  4183f0:	lea    r12,[rip+0xffffffffffffaec9]        # 0x4132c0
  4183f7:	jmp    0x41818d
  4183fc:	nop    DWORD PTR [rax+0x0]
  418400:	test   r13d,r13d
  418403:	je     0x418313
  418409:	test   dil,dil
  41840c:	je     0x418496
  418412:	lea    rcx,[rip+0x2c4d1]        # 0x4448ea
  418419:	call   0x433f18
  41841e:	mov    rcx,rax
  418421:	xor    ebp,ebp
  418423:	call   0x422a00
  418428:	mov    rsi,rax
  41842b:	jmp    0x4182a0
  418430:	test   rbp,rbp
  418433:	je     0x418496
  418435:	mov    rcx,QWORD PTR [rbp+0x0]
  418439:	call   0x43a620
  41843e:	lea    rcx,[rip+0x2c4b1]        # 0x4448f6
  418445:	mov    rsi,rax
  418448:	call   0x433f18
  41844d:	mov    rcx,rax
  418450:	call   0x43a620
  418455:	lea    rcx,[rax+rsi*1]
  418459:	call   0x4227b0
  41845e:	mov    rdi,QWORD PTR [rbp+0x0]
  418462:	mov    rsi,rax
  418465:	lea    rcx,[rip+0x2c48a]        # 0x4448f6
  41846c:	jmp    0x41828d
  418471:	mov    rcx,rdi
  418474:	call   0x43a748
  418479:	test   rbp,rbp
  41847c:	jne    0x418329
  418482:	jmp    0x418313
  418487:	mov    rbp,rax
  41848a:	jmp    0x4182f0
  41848f:	xor    eax,eax
  418491:	jmp    0x4183b6
  418496:	lea    rcx,[rip+0x2c46c]        # 0x444909
  41849d:	jmp    0x418419
  4184a2:	xor    edx,edx
  4184a4:	mov    rcx,rsi
  4184a7:	add    rsp,0x28
  4184ab:	pop    rbx
  4184ac:	pop    rsi
  4184ad:	pop    rdi
  4184ae:	pop    rbp
  4184af:	pop    r12
  4184b1:	pop    r13
  4184b3:	pop    r14
  4184b5:	pop    r15
  4184b7:	jmp    0x414890
  4184bc:	nop    DWORD PTR [rax+0x0]
  4184c0:	push   rsi
  4184c1:	push   rbx
  4184c2:	sub    rsp,0x28
  4184c6:	mov    rax,QWORD PTR [rcx+0x20]
  4184ca:	mov    rbx,rcx
  4184cd:	mov    esi,edx
  4184cf:	mov    rax,QWORD PTR [rax+0x30]
  4184d3:	test   rax,rax
  4184d6:	je     0x418503
  4184d8:	mov    r8,QWORD PTR [rax]
  4184db:	test   r8,r8
  4184de:	je     0x418503
  4184e0:	cmp    DWORD PTR [r8+0x24],0x1
  4184e5:	je     0x418520
  4184e7:	add    rax,0x8
  4184eb:	jmp    0x4184fb
  4184ed:	nop    DWORD PTR [rax]
  4184f0:	add    rax,0x8
  4184f4:	cmp    DWORD PTR [r8+0x24],0x1
  4184f9:	je     0x418520
  4184fb:	mov    r8,QWORD PTR [rax]
  4184fe:	test   r8,r8
  418501:	jne    0x4184f0
  418503:	mov    rax,QWORD PTR [rip+0x315a6]        # 0x449ab0
  41850a:	lea    rcx,[rip+0x2c094]        # 0x4445a5
  418511:	mov    rdx,QWORD PTR [rax]
  418514:	add    rsp,0x28
  418518:	pop    rbx
  418519:	pop    rsi
  41851a:	jmp    0x4144d0
  41851f:	nop
  418520:	movzx  edx,sil
  418524:	mov    rcx,rbx
  418527:	call   0x413220
  41852c:	test   rax,rax
  41852f:	je     0x418542
  418531:	mov    rdx,rax
  418534:	mov    rcx,rbx
  418537:	add    rsp,0x28
  41853b:	pop    rbx
  41853c:	pop    rsi
  41853d:	jmp    0x416f40
  418542:	cmp    esi,0x30
  418545:	je     0x418503
  418547:	sub    esi,0x30
  41854a:	lea    rdx,[rip+0x2c3ef]        # 0x444940
  418551:	lea    rcx,[rip+0x2c410]        # 0x444968
  418558:	mov    r8d,esi
  41855b:	call   0x433f10
  418560:	mov    edx,esi
  418562:	mov    rcx,rax
  418565:	add    rsp,0x28
  418569:	pop    rbx
  41856a:	pop    rsi
  41856b:	jmp    0x4144d0
  418570:	mov    edx,0x30
  418575:	jmp    0x4184c0
  41857a:	nop    WORD PTR [rax+rax*1+0x0]
  418580:	mov    rax,QWORD PTR [rcx+0x20]
  418584:	mov    rax,QWORD PTR [rax+0x30]
  418588:	test   rax,rax
  41858b:	jne    0x41859a
  41858d:	jmp    0x4185a2
  41858f:	nop
  418590:	cmp    DWORD PTR [rdx+0x24],0x1
  418594:	je     0x4185c0
  418596:	add    rax,0x8
  41859a:	mov    rdx,QWORD PTR [rax]
  41859d:	test   rdx,rdx
  4185a0:	jne    0x418590
  4185a2:	mov    rax,QWORD PTR [rip+0x31507]        # 0x449ab0
  4185a9:	lea    rcx,[rip+0x2bff5]        # 0x4445a5
  4185b0:	mov    rdx,QWORD PTR [rax]
  4185b3:	jmp    0x4144d0
  4185b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4185c0:	mov    r9d,0x1
  4185c6:	xor    r8d,r8d
  4185c9:	mov    edx,0x1
  4185ce:	jmp    0x418130
  4185d3:	nop    DWORD PTR [rax]
  4185d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185e0:	mov    r9d,0x1
  4185e6:	mov    r8d,0x1
  4185ec:	xor    edx,edx
  4185ee:	jmp    0x418130
  4185f3:	nop    DWORD PTR [rax]
  4185f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418600:	push   rbx
  418601:	sub    rsp,0x50
  418605:	mov    rax,QWORD PTR [rcx+0x20]
  418609:	mov    rbx,rcx
  41860c:	lea    r8,[rsp+0x2c]
  418611:	lea    rcx,[rip+0x2c372]        # 0x44498a
  418618:	mov    DWORD PTR [rsp+0x38],0x0
  418620:	mov    DWORD PTR [rsp+0x40],0x3
  418628:	mov    rdx,QWORD PTR [rax+0x18]
  41862c:	mov    eax,DWORD PTR [rax+0x20]
  41862f:	mov    QWORD PTR [rsp+0x30],rdx
  418634:	lea    rdx,[rsp+0x30]
  418639:	mov    DWORD PTR [rsp+0x3c],eax
  41863d:	call   0x412c90
  418642:	test   eax,eax
  418644:	je     0x418663
  418646:	mov    rax,QWORD PTR [rip+0x31463]        # 0x449ab0
  41864d:	lea    rcx,[rip+0x2bf51]        # 0x4445a5
  418654:	mov    rdx,QWORD PTR [rax]
  418657:	call   0x4144d0
  41865c:	nop
  41865d:	add    rsp,0x50
  418661:	pop    rbx
  418662:	ret    
  418663:	mov    eax,DWORD PTR [rsp+0x2c]
  418667:	mov    rcx,rbx
  41866a:	mov    DWORD PTR [rbx+0x2c],eax
  41866d:	call   0x420630
  418672:	or     DWORD PTR [rbx+0x80],0x1
  418679:	add    rsp,0x50
  41867d:	pop    rbx
  41867e:	ret    
  41867f:	nop
  418680:	push   r12
  418682:	push   rbp
  418683:	push   rdi
  418684:	push   rsi
  418685:	push   rbx
  418686:	sub    rsp,0x20
  41868a:	mov    rax,QWORD PTR [rcx+0x20]
  41868e:	mov    rsi,QWORD PTR [rax+0x30]
  418692:	test   rsi,rsi
  418695:	je     0x41872b
  41869b:	mov    rbx,QWORD PTR [rsi]
  41869e:	add    rsi,0x8
  4186a2:	mov    rbp,rcx
  4186a5:	mov    r12,QWORD PTR [rip+0x31144]        # 0x4497f0
  4186ac:	test   rbx,rbx
  4186af:	jne    0x4186c0
  4186b1:	jmp    0x418700
  4186b3:	add    rsi,0x8
  4186b7:	mov    rbx,QWORD PTR [rsi-0x8]
  4186bb:	test   rbx,rbx
  4186be:	je     0x418700
  4186c0:	cmp    DWORD PTR [rbx+0x24],0x1
  4186c4:	jne    0x4186b3
  4186c6:	call   0x41f7b0
  4186cb:	mov    rdx,QWORD PTR [rbp+0x20]
  4186cf:	mov    rcx,rax
  4186d2:	mov    rdi,rax
  4186d5:	call   0x415020
  4186da:	mov    ecx,0x1
  4186df:	call   0x420690
  4186e4:	test   rdi,rdi
  4186e7:	je     0x41870b
  4186e9:	mov    rdx,rbx
  4186ec:	mov    rcx,rdi
  4186ef:	mov    QWORD PTR [r12],rdi
  4186f3:	call   0x416f40
  4186f8:	test   eax,eax
  4186fa:	jne    0x4186b3
  4186fc:	nop    DWORD PTR [rax+0x0]
  418700:	add    rsp,0x20
  418704:	pop    rbx
  418705:	pop    rsi
  418706:	pop    rdi
  418707:	pop    rbp
  418708:	pop    r12
  41870a:	ret    
  41870b:	mov    rax,QWORD PTR [rip+0x313ee]        # 0x449b00
  418712:	mov    rdx,QWORD PTR [rax]
  418715:	lea    rcx,[rip+0x2be89]        # 0x4445a5
  41871c:	add    rsp,0x20
  418720:	pop    rbx
  418721:	pop    rsi
  418722:	pop    rdi
  418723:	pop    rbp
  418724:	pop    r12
  418726:	jmp    0x4144d0
  41872b:	mov    rax,QWORD PTR [rip+0x3137e]        # 0x449ab0
  418732:	jmp    0x418712
  418734:	xchg   ax,ax
  418736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418740:	push   r13
  418742:	push   r12
  418744:	push   rbp
  418745:	push   rdi
  418746:	push   rsi
  418747:	push   rbx
  418748:	sub    rsp,0x28
  41874c:	test   edx,edx
  41874e:	mov    rbx,rcx
  418751:	mov    r13d,edx
  418754:	js     0x4188cd
  41875a:	mov    rdi,QWORD PTR [rcx+0xb0]
  418761:	mov    rax,QWORD PTR [rcx+0x20]
  418765:	sub    rdi,0x1
  418769:	test   edx,edx
  41876b:	mov    rbp,QWORD PTR [rax+0x10]
  41876f:	je     0x4188c0
  418775:	mov    rax,QWORD PTR [rax+0x30]
  418779:	mov    rsi,rdi
  41877c:	test   rax,rax
  41877f:	je     0x4187e7
  418781:	mov    rdx,QWORD PTR [rax]
  418784:	test   rdx,rdx
  418787:	je     0x4187e7
  418789:	mov    ecx,DWORD PTR [rdx+0x18]
  41878c:	mov    r10d,DWORD PTR [rbx+0x2c]
  418790:	cmp    r10d,ecx
  418793:	mov    r8d,ecx
  418796:	jge    0x4187a9
  418798:	jmp    0x418820
  41879d:	nop    DWORD PTR [rax]
  4187a0:	mov    r8d,DWORD PTR [r8+0x18]
  4187a4:	cmp    r8d,r10d
  4187a7:	jg     0x418820
  4187a9:	add    rax,0x8
  4187ad:	mov    r8,QWORD PTR [rax]
  4187b0:	test   r8,r8
  4187b3:	jne    0x4187a0
  4187b5:	mov    edx,DWORD PTR [rip+0x2638d]        # 0x43eb48
  4187bb:	test   edx,edx
  4187bd:	jne    0x418890
  4187c3:	mov    DWORD PTR [rbx+0x2c],ecx
  4187c6:	sub    r13d,0x1
  4187ca:	mov    rcx,rbx
  4187cd:	call   0x420630
  4187d2:	test   r13d,r13d
  4187d5:	je     0x418846
  4187d7:	mov    r12,QWORD PTR [rbx+0x20]
  4187db:	mov    rax,r12
  4187de:	mov    rax,QWORD PTR [rax+0x30]
  4187e2:	test   rax,rax
  4187e5:	jne    0x418781
  4187e7:	mov    eax,DWORD PTR [rip+0x2635b]        # 0x43eb48
  4187ed:	test   eax,eax
  4187ef:	jne    0x418890
  4187f5:	mov    rax,QWORD PTR [rip+0x312d4]        # 0x449ad0
  4187fc:	lea    rcx,[rip+0x2bda2]        # 0x4445a5
  418803:	mov    rdx,QWORD PTR [rax]
  418806:	add    rsp,0x28
  41880a:	pop    rbx
  41880b:	pop    rsi
  41880c:	pop    rdi
  41880d:	pop    rbp
  41880e:	pop    r12
  418810:	pop    r13
  418812:	jmp    0x4144d0
  418817:	nop    WORD PTR [rax+rax*1+0x0]
  418820:	cmp    r8d,0xffffffff
  418824:	je     0x4187b5
  418826:	mov    DWORD PTR [rbx+0x2c],r8d
  41882a:	mov    rcx,rbx
  41882d:	sub    r13d,0x1
  418831:	call   0x420630
  418836:	mov    rax,QWORD PTR [rbx+0xb0]
  41883d:	test   r13d,r13d
  418840:	lea    rsi,[rax-0x1]
  418844:	jne    0x4187d7
  418846:	lea    rbp,[rsi+0x1]
  41884a:	cmp    rbp,QWORD PTR [rbx+0xb0]
  418851:	jae    0x418864
  418853:	mov    rcx,rbx
  418856:	call   0x414d90
  41885b:	cmp    QWORD PTR [rbx+0xb0],rbp
  418862:	ja     0x418853
  418864:	cmp    rdi,rsi
  418867:	je     0x4188c0
  418869:	lea    rdx,[rbx+0xb0]
  418870:	lea    rcx,[rbx+0xa8]
  418877:	lea    r8d,[rdi+0x1]
  41887b:	mov    r9d,esi
  41887e:	add    rsp,0x28
  418882:	pop    rbx
  418883:	pop    rsi
  418884:	pop    rdi
  418885:	pop    rbp
  418886:	pop    r12
  418888:	pop    r13
  41888a:	jmp    0x4149d0
  41888f:	nop
  418890:	mov    edx,DWORD PTR [rip+0x38dc6]        # 0x45165c
  418896:	mov    rcx,rbx
  418899:	call   0x4171b0
  41889e:	test   eax,eax
  4188a0:	jne    0x418846
  4188a2:	mov    r12,QWORD PTR [rbx+0x20]
  4188a6:	mov    rdx,rbp
  4188a9:	mov    rcx,QWORD PTR [r12+0x10]
  4188ae:	call   0x43a648
  4188b3:	test   eax,eax
  4188b5:	jne    0x4187db
  4188bb:	jmp    0x418846
  4188c0:	add    rsp,0x28
  4188c4:	pop    rbx
  4188c5:	pop    rsi
  4188c6:	pop    rdi
  4188c7:	pop    rbp
  4188c8:	pop    r12
  4188ca:	pop    r13
  4188cc:	ret    
  4188cd:	neg    edx
  4188cf:	add    rsp,0x28
  4188d3:	pop    rbx
  4188d4:	pop    rsi
  4188d5:	pop    rdi
  4188d6:	pop    rbp
  4188d7:	pop    r12
  4188d9:	pop    r13
  4188db:	jmp    0x4188e0
  4188dd:	nop    DWORD PTR [rax]
  4188e0:	push   r13
  4188e2:	push   r12
  4188e4:	push   rbp
  4188e5:	push   rdi
  4188e6:	push   rsi
  4188e7:	push   rbx
  4188e8:	sub    rsp,0x28
  4188ec:	test   edx,edx
  4188ee:	mov    rbp,rcx
  4188f1:	mov    r12d,edx
  4188f4:	js     0x418ab0
  4188fa:	mov    r13,QWORD PTR [rcx+0x20]
  4188fe:	mov    rax,QWORD PTR [rcx+0xb0]
  418905:	test   edx,edx
  418907:	mov    rdi,QWORD PTR [r13+0x10]
  41890b:	lea    rsi,[rax-0x1]
  41890f:	je     0x418aa3
  418915:	mov    rbx,rsi
  418918:	mov    r9,QWORD PTR [r13+0x30]
  41891c:	test   r9,r9
  41891f:	je     0x41898f
  418921:	mov    rax,QWORD PTR [r9]
  418924:	test   rax,rax
  418927:	je     0x41898f
  418929:	mov    r10d,DWORD PTR [rax+0x18]
  41892d:	mov    r11d,DWORD PTR [rbp+0x2c]
  418931:	cmp    r11d,r10d
  418934:	jle    0x4189c0
  41893a:	mov    rax,r9
  41893d:	jmp    0x41894c
  41893f:	nop
  418940:	mov    r8d,DWORD PTR [r8+0x18]
  418944:	cmp    r11d,r8d
  418947:	jle    0x418958
  418949:	mov    r10d,r8d
  41894c:	add    rax,0x8
  418950:	mov    r8,QWORD PTR [rax]
  418953:	test   r8,r8
  418956:	jne    0x418940
  418958:	cmp    r10d,0xffffffff
  41895c:	je     0x4189c0
  41895e:	mov    DWORD PTR [rbp+0x2c],r10d
  418962:	mov    rcx,rbp
  418965:	sub    r12d,0x1
  418969:	call   0x420630
  41896e:	mov    rax,QWORD PTR [rbp+0xb0]
  418975:	test   r12d,r12d
  418978:	lea    rbx,[rax-0x1]
  41897c:	je     0x418a11
  418982:	mov    r13,QWORD PTR [rbp+0x20]
  418986:	mov    r9,QWORD PTR [r13+0x30]
  41898a:	test   r9,r9
  41898d:	jne    0x418921
  41898f:	mov    eax,DWORD PTR [rip+0x261b3]        # 0x43eb48
  418995:	test   eax,eax
  418997:	jne    0x418a60
  41899d:	mov    rax,QWORD PTR [rip+0x3112c]        # 0x449ad0
  4189a4:	lea    rcx,[rip+0x2bbfa]        # 0x4445a5
  4189ab:	mov    rdx,QWORD PTR [rax]
  4189ae:	add    rsp,0x28
  4189b2:	pop    rbx
  4189b3:	pop    rsi
  4189b4:	pop    rdi
  4189b5:	pop    rbp
  4189b6:	pop    r12
  4189b8:	pop    r13
  4189ba:	jmp    0x4144d0
  4189bf:	nop
  4189c0:	mov    edx,DWORD PTR [rip+0x26182]        # 0x43eb48
  4189c6:	test   edx,edx
  4189c8:	jne    0x418a60
  4189ce:	cmp    QWORD PTR [r9+0x8],0x0
  4189d3:	je     0x418a9c
  4189d9:	mov    edx,0x1
  4189de:	jmp    0x4189e3
  4189e0:	mov    rdx,rax
  4189e3:	lea    rax,[rdx+0x1]
  4189e7:	cmp    QWORD PTR [r9+rax*8],0x0
  4189ec:	jne    0x4189e0
  4189ee:	shl    rdx,0x3
  4189f2:	mov    rax,QWORD PTR [r9+rdx*1]
  4189f6:	mov    rcx,rbp
  4189f9:	sub    r12d,0x1
  4189fd:	mov    eax,DWORD PTR [rax+0x18]
  418a00:	mov    DWORD PTR [rbp+0x2c],eax
  418a03:	call   0x420630
  418a08:	test   r12d,r12d
  418a0b:	jne    0x418982
  418a11:	lea    rdi,[rbx+0x1]
  418a15:	cmp    QWORD PTR [rbp+0xb0],rdi
  418a1c:	jbe    0x418a31
  418a1e:	xchg   ax,ax
  418a20:	mov    rcx,rbp
  418a23:	call   0x414d90
  418a28:	cmp    QWORD PTR [rbp+0xb0],rdi
  418a2f:	ja     0x418a20
  418a31:	cmp    rsi,rbx
  418a34:	je     0x418aa3
  418a36:	lea    rdx,[rbp+0xb0]
  418a3d:	lea    rcx,[rbp+0xa8]
  418a44:	lea    r8d,[rsi+0x1]
  418a48:	mov    r9d,ebx
  418a4b:	add    rsp,0x28
  418a4f:	pop    rbx
  418a50:	pop    rsi
  418a51:	pop    rdi
  418a52:	pop    rbp
  418a53:	pop    r12
  418a55:	pop    r13
  418a57:	jmp    0x4149d0
  418a5c:	nop    DWORD PTR [rax+0x0]
  418a60:	mov    ecx,DWORD PTR [rip+0x38bf6]        # 0x45165c
  418a66:	xor    edx,edx
  418a68:	test   ecx,ecx
  418a6a:	mov    rcx,rbp
  418a6d:	setne  dl
  418a70:	call   0x417510
  418a75:	test   eax,eax
  418a77:	jne    0x418a11
  418a79:	mov    r13,QWORD PTR [rbp+0x20]
  418a7d:	mov    rdx,rdi
  418a80:	mov    rcx,QWORD PTR [r13+0x10]
  418a84:	call   0x43a648
  418a89:	test   eax,eax
  418a8b:	je     0x418a11
  418a8d:	mov    eax,DWORD PTR [r13+0x20]
  418a91:	sub    eax,0x1
  418a94:	mov    DWORD PTR [rbp+0x2c],eax
  418a97:	jmp    0x418918
  418a9c:	xor    edx,edx
  418a9e:	jmp    0x4189f2
  418aa3:	add    rsp,0x28
  418aa7:	pop    rbx
  418aa8:	pop    rsi
  418aa9:	pop    rdi
  418aaa:	pop    rbp
  418aab:	pop    r12
  418aad:	pop    r13
  418aaf:	ret    
  418ab0:	neg    edx
  418ab2:	add    rsp,0x28
  418ab6:	pop    rbx
  418ab7:	pop    rsi
  418ab8:	pop    rdi
  418ab9:	pop    rbp
  418aba:	pop    r12
  418abc:	pop    r13
  418abe:	jmp    0x418740
  418ac3:	nop    DWORD PTR [rax]
  418ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ad0:	mov    rax,QWORD PTR [rcx+0x20]
  418ad4:	mov    rax,QWORD PTR [rax+0x30]
  418ad8:	test   rax,rax
  418adb:	je     0x418b00
  418add:	cmp    QWORD PTR [rax],0x0
  418ae1:	je     0x418b00
  418ae3:	xor    r9d,r9d
  418ae6:	mov    r8d,0x1
  418aec:	mov    edx,0x1
  418af1:	jmp    0x418130
  418af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b00:	repz ret 
  418b02:	nop    DWORD PTR [rax+0x0]
  418b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b10:	push   r15
  418b12:	push   r14
  418b14:	push   r13
  418b16:	push   r12
  418b18:	push   rbp
  418b19:	push   rdi
  418b1a:	push   rsi
  418b1b:	push   rbx
  418b1c:	sub    rsp,0x28
  418b20:	mov    r15,QWORD PTR [rdx]
  418b23:	mov    rbx,rcx
  418b26:	mov    rbp,rdx
  418b29:	mov    r14,r8
  418b2c:	mov    r13d,r9d
  418b2f:	test   r15,r15
  418b32:	je     0x418c78
  418b38:	lea    r12,[rip+0x3ad61]        # 0x4538a0
  418b3f:	jmp    0x418bbf
  418b41:	cmp    QWORD PTR [rbx+0x30],0x0
  418b46:	je     0x418beb
  418b4c:	test   r13d,r13d
  418b4f:	mov    rdx,r15
  418b52:	mov    rcx,rbx
  418b55:	sete   dil
  418b59:	mov    r8d,edi
  418b5c:	and    r8d,0x1
  418b60:	call   0x409010
  418b65:	test   rax,rax
  418b68:	mov    rsi,rax
  418b6b:	je     0x418c94
  418b71:	cmp    DWORD PTR [r12],0x2
  418b76:	ja     0x418c40
  418b7c:	mov    rdx,QWORD PTR [rsi+0x10]
  418b80:	mov    rcx,QWORD PTR [rsi+0x8]
  418b84:	mov    r8,rbx
  418b87:	call   0x412270
  418b8c:	test   rax,rax
  418b8f:	mov    rdi,rax
  418b92:	je     0x418ce0
  418b98:	cmp    DWORD PTR [r12],0x2
  418b9d:	ja     0x418c60
  418ba3:	add    rbp,0x8
  418ba7:	mov    rcx,rbx
  418baa:	call   0x414970
  418baf:	mov    r15,QWORD PTR [rbp+0x0]
  418bb3:	test   r15,r15
  418bb6:	je     0x418c80
  418bbc:	mov    rbx,rdi
  418bbf:	cmp    DWORD PTR [r12],0x2
  418bc4:	jbe    0x418b41
  418bca:	mov    r9,QWORD PTR [rbx+0x10]
  418bce:	mov    r8,QWORD PTR [rbx]
  418bd1:	lea    rcx,[rip+0x2bdbb]        # 0x444993
  418bd8:	mov    rdx,r15
  418bdb:	call   0x4146b0
  418be0:	cmp    QWORD PTR [rbx+0x30],0x0
  418be5:	jne    0x418b4c
  418beb:	test   r14,r14
  418bee:	je     0x418c1d
  418bf0:	mov    rcx,QWORD PTR [r14]
  418bf3:	call   0x43a748
  418bf8:	mov    rcx,rbx
  418bfb:	call   0x409ed0
  418c00:	lea    rcx,[rip+0x2bda4]        # 0x4449ab
  418c07:	mov    rsi,rax
  418c0a:	call   0x433f18
  418c0f:	mov    r8,rsi
  418c12:	mov    rdx,rax
  418c15:	mov    rcx,r14
  418c18:	call   0x433f30
  418c1d:	cmp    DWORD PTR [rip+0x3ac7c],0x2        # 0x4538a0
  418c24:	ja     0x418d40
  418c2a:	test   r13d,r13d
  418c2d:	mov    rax,rbx
  418c30:	je     0x418c83
  418c32:	mov    rcx,rax
  418c35:	call   0x414970
  418c3a:	xor    eax,eax
  418c3c:	jmp    0x418c83
  418c3e:	xchg   ax,ax
  418c40:	mov    rdx,QWORD PTR [rax+0x8]
  418c44:	mov    r8,QWORD PTR [rax+0x10]
  418c48:	lea    rcx,[rip+0x2bdb0]        # 0x4449ff
  418c4f:	call   0x4146b0
  418c54:	jmp    0x418b7c
  418c59:	nop    DWORD PTR [rax+0x0]
  418c60:	mov    r8,QWORD PTR [rax+0x10]
  418c64:	mov    rdx,QWORD PTR [rax]
  418c67:	lea    rcx,[rip+0x2bdea]        # 0x444a58
  418c6e:	call   0x4146b0
  418c73:	jmp    0x418ba3
  418c78:	mov    rdi,rcx
  418c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  418c80:	mov    rax,rdi
  418c83:	add    rsp,0x28
  418c87:	pop    rbx
  418c88:	pop    rsi
  418c89:	pop    rdi
  418c8a:	pop    rbp
  418c8b:	pop    r12
  418c8d:	pop    r13
  418c8f:	pop    r14
  418c91:	pop    r15
  418c93:	ret    
  418c94:	test   r14,r14
  418c97:	je     0x418cc9
  418c99:	mov    rcx,QWORD PTR [r14]
  418c9c:	call   0x43a748
  418ca1:	mov    rcx,rbx
  418ca4:	call   0x409ed0
  418ca9:	lea    rcx,[rip+0x2bd20]        # 0x4449d0
  418cb0:	mov    rsi,rax
  418cb3:	call   0x433f18
  418cb8:	mov    r9,rsi
  418cbb:	mov    rdx,rax
  418cbe:	mov    r8,r15
  418cc1:	mov    rcx,r14
  418cc4:	call   0x433f30
  418cc9:	cmp    DWORD PTR [rip+0x3abd0],0x2        # 0x4538a0
  418cd0:	ja     0x418d51
  418cd2:	test   dil,dil
  418cd5:	mov    rax,rbx
  418cd8:	jne    0x418c83
  418cda:	jmp    0x418c32
  418cdf:	nop
  418ce0:	cmp    DWORD PTR [rip+0x3abb9],0x2        # 0x4538a0
  418ce7:	ja     0x418d62
  418ce9:	test   r14,r14
  418cec:	je     0x418c2a
  418cf2:	mov    rcx,QWORD PTR [r14]
  418cf5:	call   0x43a748
  418cfa:	mov    rcx,rbx
  418cfd:	call   0x409ed0
  418d02:	mov    rsi,QWORD PTR [rsi]
  418d05:	lea    rcx,[rip+0x2bd1c]        # 0x444a28
  418d0c:	mov    rdi,rax
  418d0f:	call   0x433f18
  418d14:	mov    r9,rdi
  418d17:	mov    rdx,rax
  418d1a:	mov    r8,rsi
  418d1d:	mov    rcx,r14
  418d20:	call   0x433f30
  418d25:	test   r13d,r13d
  418d28:	mov    rax,rbx
  418d2b:	je     0x418c83
  418d31:	jmp    0x418c32
  418d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d40:	lea    rcx,[rip+0x2bc7a]        # 0x4449c1
  418d47:	call   0x4146b0
  418d4c:	jmp    0x418c2a
  418d51:	lea    rcx,[rip+0x2bc98]        # 0x4449f0
  418d58:	call   0x4146b0
  418d5d:	jmp    0x418cd2
  418d62:	lea    rcx,[rip+0x2bca4]        # 0x444a0d
  418d69:	call   0x4146b0
  418d6e:	jmp    0x418ce9
  418d73:	nop    DWORD PTR [rax]
  418d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d80:	push   r14
  418d82:	push   r13
  418d84:	push   r12
  418d86:	push   rbp
  418d87:	push   rdi
  418d88:	push   rsi
  418d89:	push   rbx
  418d8a:	sub    rsp,0x30
  418d8e:	mov    rdi,rcx
  418d91:	lea    rcx,[rip+0x2bccd]        # 0x444a65
  418d98:	call   0x433f18
  418d9d:	mov    rcx,rax
  418da0:	call   0x4055a0
  418da5:	test   rax,rax
  418da8:	mov    rbx,rax
  418dab:	je     0x418ea5
  418db1:	mov    rcx,rax
  418db4:	call   0x409490
  418db9:	cmp    BYTE PTR [rbx],0x0
  418dbc:	jne    0x418de0
  418dbe:	mov    rcx,rbx
  418dc1:	call   0x43a748
  418dc6:	nop
  418dc7:	add    rsp,0x30
  418dcb:	pop    rbx
  418dcc:	pop    rsi
  418dcd:	pop    rdi
  418dce:	pop    rbp
  418dcf:	pop    r12
  418dd1:	pop    r13
  418dd3:	pop    r14
  418dd5:	ret    
  418dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418de0:	mov    QWORD PTR [rsp+0x28],0x0
  418de9:	mov    ebp,0x2
  418dee:	call   0x401ab0
  418df3:	mov    ecx,0x10
  418df8:	mov    r12,rax
  418dfb:	call   0x4227b0
  418e00:	mov    r8,rbx
  418e03:	mov    rsi,rax
  418e06:	mov    QWORD PTR [rax],rbx
  418e09:	movzx  r9d,BYTE PTR [r8]
  418e0d:	jmp    0x418e1e
  418e0f:	nop
  418e10:	movzx  r9d,BYTE PTR [r8+0x1]
  418e15:	cmp    r9b,0x2c
  418e19:	je     0x418e75
  418e1b:	mov    r8,r10
  418e1e:	test   r9b,r9b
  418e21:	lea    r10,[r8+0x1]
  418e25:	jne    0x418e10
  418e27:	lea    eax,[rbp-0x1]
  418e2a:	test   r12,r12
  418e2d:	mov    QWORD PTR [rsi+rax*8],0x0
  418e35:	je     0x418ebf
  418e3b:	lea    r8,[rsp+0x28]
  418e40:	xor    r9d,r9d
  418e43:	mov    rdx,rsi
  418e46:	mov    rcx,r12
  418e49:	call   0x418b10
  418e4e:	mov    rcx,rdi
  418e51:	mov    rdx,rax
  418e54:	call   0x415020
  418e59:	mov    rcx,QWORD PTR [rsp+0x28]
  418e5e:	test   rcx,rcx
  418e61:	je     0x418e68
  418e63:	call   0x4148f0
  418e68:	mov    rcx,rsi
  418e6b:	call   0x43a748
  418e70:	jmp    0x418dbe
  418e75:	lea    edx,[rbp+0x1]
  418e78:	mov    BYTE PTR [r8+0x1],0x0
  418e7d:	mov    rcx,rsi
  418e80:	lea    r13,[r8+0x2]
  418e84:	mov    r14,rdx
  418e87:	shl    rdx,0x3
  418e8b:	call   0x422820
  418e90:	mov    rsi,rax
  418e93:	lea    eax,[rbp-0x1]
  418e96:	mov    r8,r13
  418e99:	mov    ebp,r14d
  418e9c:	mov    QWORD PTR [rsi+rax*8],r13
  418ea0:	jmp    0x418e09
  418ea5:	xor    edx,edx
  418ea7:	mov    rcx,rdi
  418eaa:	call   0x414890
  418eaf:	nop
  418eb0:	add    rsp,0x30
  418eb4:	pop    rbx
  418eb5:	pop    rsi
  418eb6:	pop    rdi
  418eb7:	pop    rbp
  418eb8:	pop    r12
  418eba:	pop    r13
  418ebc:	pop    r14
  418ebe:	ret    
  418ebf:	mov    rax,QWORD PTR [rdi+0x20]
  418ec3:	xor    edx,edx
  418ec5:	mov    rcx,QWORD PTR [rax]
  418ec8:	call   0x4124d0
  418ecd:	test   rax,rax
  418ed0:	mov    r12,rax
  418ed3:	jne    0x418e3b
  418ed9:	mov    rax,QWORD PTR [rip+0x30b80]        # 0x449a60
  418ee0:	lea    rdx,[rip+0x2b752]        # 0x444639
  418ee7:	mov    rcx,QWORD PTR [rax]
  418eea:	call   0x4144d0
  418eef:	jmp    0x418e68
  418ef4:	xchg   ax,ax
  418ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f00:	mov    rdx,rcx
  418f03:	lea    rcx,[rip+0x2b7f9]        # 0x444703
  418f0a:	jmp    0x4151e0
  418f0f:	nop
  418f10:	mov    rdx,rcx
  418f13:	lea    rcx,[rip+0x2b7ee]        # 0x444708
  418f1a:	jmp    0x4151e0
  418f1f:	nop
  418f20:	mov    rdx,rcx
  418f23:	lea    rcx,[rip+0x2b7d6]        # 0x444700
  418f2a:	jmp    0x4151e0
  418f2f:	nop
  418f30:	push   rsi
  418f31:	push   rbx
  418f32:	sub    rsp,0x28
  418f36:	mov    rsi,rcx
  418f39:	mov    ebx,edx
  418f3b:	call   0x409e30
  418f40:	test   rax,rax
  418f43:	je     0x418fcd
  418f49:	mov    rcx,QWORD PTR [rax+0x58]
  418f4d:	test   rcx,rcx
  418f50:	je     0x418fcd
  418f52:	test   ebx,ebx
  418f54:	je     0x418ff0
  418f5a:	cmp    ebx,0x1
  418f5d:	je     0x419000
  418f63:	mov    r8,rcx
  418f66:	mov    edx,0xffffffff
  418f6b:	xor    r10d,r10d
  418f6e:	xchg   ax,ax
  418f70:	mov    r9,QWORD PTR [r8]
  418f73:	test   r9,r9
  418f76:	je     0x418fc0
  418f78:	mov    r9d,DWORD PTR [r9+0x40]
  418f7c:	test   r9d,r9d
  418f7f:	je     0x418f87
  418f81:	sub    ebx,0x1
  418f84:	mov    edx,r10d
  418f87:	add    r10d,0x1
  418f8b:	add    r8,0x8
  418f8f:	test   ebx,ebx
  418f91:	jne    0x418f70
  418f93:	movsxd r10,r10d
  418f96:	mov    rdx,QWORD PTR [rcx+r10*8-0x8]
  418f9b:	mov    rcx,QWORD PTR [rax]
  418f9e:	mov    rdx,QWORD PTR [rdx+0x8]
  418fa2:	call   0x4124d0
  418fa7:	test   rax,rax
  418faa:	mov    rdx,rax
  418fad:	je     0x418fcd
  418faf:	mov    rcx,rsi
  418fb2:	add    rsp,0x28
  418fb6:	pop    rbx
  418fb7:	pop    rsi
  418fb8:	jmp    0x415020
  418fbd:	nop    DWORD PTR [rax]
  418fc0:	test   ebx,ebx
  418fc2:	jle    0x418fc8
  418fc4:	lea    r10d,[rdx+0x1]
  418fc8:	test   r10d,r10d
  418fcb:	jne    0x418f93
  418fcd:	lea    rcx,[rip+0x2baa4]        # 0x444a78
  418fd4:	call   0x433f18
  418fd9:	lea    rcx,[rip+0x2b5c5]        # 0x4445a5
  418fe0:	mov    rdx,rax
  418fe3:	add    rsp,0x28
  418fe7:	pop    rbx
  418fe8:	pop    rsi
  418fe9:	jmp    0x4144d0
  418fee:	xchg   ax,ax
  418ff0:	mov    ebx,0xffffffff
  418ff5:	jmp    0x418f63
  418ffa:	nop    WORD PTR [rax+rax*1+0x0]
  419000:	mov    r10d,DWORD PTR [rip+0x3863d]        # 0x451644
  419007:	mov    edx,0xffffffff
  41900c:	test   r10d,r10d
  41900f:	cmove  ebx,edx
  419012:	jmp    0x418f63
  419017:	nop    WORD PTR [rax+rax*1+0x0]
  419020:	push   rsi
  419021:	push   rbx
  419022:	sub    rsp,0x28
  419026:	mov    ebx,edx
  419028:	mov    rsi,rcx
  41902b:	call   0x409e30
  419030:	test   ebx,ebx
  419032:	mov    edx,0x1
  419037:	cmove  ebx,edx
  41903a:	test   rax,rax
  41903d:	je     0x41908b
  41903f:	mov    rcx,QWORD PTR [rax+0x58]
  419043:	test   rcx,rcx
  419046:	je     0x41908b
  419048:	mov    r8,rcx
  41904b:	mov    r11d,0xffffffff
  419051:	xor    r10d,r10d
  419054:	mov    r9,QWORD PTR [r8]
  419057:	test   r9,r9
  41905a:	je     0x41907f
  41905c:	mov    edx,DWORD PTR [r9+0x40]
  419060:	test   edx,edx
  419062:	je     0x4190b0
  419064:	add    r8,0x8
  419068:	sub    ebx,0x1
  41906b:	lea    edx,[r10+0x1]
  41906f:	je     0x4190c0
  419071:	mov    r9,QWORD PTR [r8]
  419074:	mov    r11d,r10d
  419077:	mov    r10d,edx
  41907a:	test   r9,r9
  41907d:	jne    0x41905c
  41907f:	test   ebx,ebx
  419081:	jle    0x4190ea
  419083:	lea    edx,[r11+0x1]
  419087:	test   edx,edx
  419089:	jne    0x4190c0
  41908b:	lea    rcx,[rip+0x2b9e6]        # 0x444a78
  419092:	call   0x433f18
  419097:	lea    rcx,[rip+0x2b507]        # 0x4445a5
  41909e:	mov    rdx,rax
  4190a1:	add    rsp,0x28
  4190a5:	pop    rbx
  4190a6:	pop    rsi
  4190a7:	jmp    0x4144d0
  4190ac:	nop    DWORD PTR [rax+0x0]
  4190b0:	add    r10d,0x1
  4190b4:	add    r8,0x8
  4190b8:	jmp    0x419054
  4190ba:	nop    WORD PTR [rax+rax*1+0x0]
  4190c0:	movsxd rdx,edx
  4190c3:	mov    rdx,QWORD PTR [rcx+rdx*8-0x8]
  4190c8:	mov    rcx,QWORD PTR [rax]
  4190cb:	mov    rdx,QWORD PTR [rdx+0x8]
  4190cf:	call   0x4124d0
  4190d4:	test   rax,rax
  4190d7:	mov    rdx,rax
  4190da:	je     0x41908b
  4190dc:	mov    rcx,rsi
  4190df:	add    rsp,0x28
  4190e3:	pop    rbx
  4190e4:	pop    rsi
  4190e5:	jmp    0x415020
  4190ea:	mov    edx,r10d
  4190ed:	jmp    0x419087
  4190ef:	nop
  4190f0:	push   rsi
  4190f1:	push   rbx
  4190f2:	sub    rsp,0x28
  4190f6:	test   edx,edx
  4190f8:	mov    rsi,rcx
  4190fb:	mov    ebx,edx
  4190fd:	js     0x41911d
  4190ff:	jne    0x419108
  419101:	jmp    0x419116
  419103:	sub    ebx,0x1
  419106:	je     0x419116
  419108:	xor    edx,edx
  41910a:	mov    rcx,rsi
  41910d:	call   0x417510
  419112:	test   eax,eax
  419114:	je     0x419103
  419116:	add    rsp,0x28
  41911a:	pop    rbx
  41911b:	pop    rsi
  41911c:	ret    
  41911d:	neg    edx
  41911f:	add    rsp,0x28
  419123:	pop    rbx
  419124:	pop    rsi
  419125:	jmp    0x419130
  419127:	nop    WORD PTR [rax+rax*1+0x0]
  419130:	push   rsi
  419131:	push   rbx
  419132:	sub    rsp,0x28
  419136:	test   edx,edx
  419138:	mov    rsi,rcx
  41913b:	mov    ebx,edx
  41913d:	js     0x41915d
  41913f:	jne    0x419148
  419141:	jmp    0x419156
  419143:	sub    ebx,0x1
  419146:	je     0x419156
  419148:	xor    edx,edx
  41914a:	mov    rcx,rsi
  41914d:	call   0x4171b0
  419152:	test   eax,eax
  419154:	je     0x419143
  419156:	add    rsp,0x28
  41915a:	pop    rbx
  41915b:	pop    rsi
  41915c:	ret    
  41915d:	neg    edx
  41915f:	add    rsp,0x28
  419163:	pop    rbx
  419164:	pop    rsi
  419165:	jmp    0x4190f0
  419167:	nop    WORD PTR [rax+rax*1+0x0]
  419170:	push   r15
  419172:	push   r14
  419174:	push   r13
  419176:	push   r12
  419178:	push   rbp
  419179:	push   rdi
  41917a:	push   rsi
  41917b:	push   rbx
  41917c:	sub    rsp,0x48
  419180:	mov    QWORD PTR [rsp+0x38],rcx
  419185:	call   0x409e30
  41918a:	mov    QWORD PTR [rsp+0x28],rax
  41918f:	mov    rax,QWORD PTR [rip+0x307ca]        # 0x449960
  419196:	mov    rax,QWORD PTR [rax]
  419199:	test   rax,rax
  41919c:	je     0x419487
  4191a2:	mov    rdi,QWORD PTR [rax]
  4191a5:	test   rdi,rdi
  4191a8:	je     0x419487
  4191ae:	mov    QWORD PTR [rsp+0x30],0x8
  4191b7:	xor    ebx,ebx
  4191b9:	xor    ebp,ebp
  4191bb:	xor    r12d,r12d
  4191be:	xchg   ax,ax
  4191c0:	mov    ecx,0x28
  4191c5:	call   0x4227b0
  4191ca:	mov    rcx,QWORD PTR [rdi]
  4191cd:	mov    QWORD PTR [rax+0x10],0x0
  4191d5:	mov    rsi,rax
  4191d8:	mov    QWORD PTR [rax+0x8],0x0
  4191e0:	call   0x43a620
  4191e5:	lea    rcx,[rax+0x4]
  4191e9:	call   0x4227b0
  4191ee:	mov    r8,QWORD PTR [rdi]
  4191f1:	lea    rdx,[rip+0x2b8a4]        # 0x444a9c
  4191f8:	mov    QWORD PTR [rsi],rax
  4191fb:	mov    rcx,rax
  4191fe:	call   0x433f00
  419203:	lea    rax,[rbp+0x2]
  419207:	cmp    rax,rbx
  41920a:	jb     0x41923e
  41920c:	test   rbx,rbx
  41920f:	jne    0x419430
  419215:	cmp    r12,0x1
  419219:	sbb    rdx,rdx
  41921c:	and    rdx,0xffffffffffffffd0
  419220:	sub    rdx,0xffffffffffffff80
  419224:	cmp    r12,0x1
  419228:	sbb    rbx,rbx
  41922b:	and    rbx,0xfffffffffffffffa
  41922f:	add    rbx,0x10
  419233:	mov    rcx,r12
  419236:	call   0x422820
  41923b:	mov    r12,rax
  41923e:	lea    r14,[rbp*8+0x0]
  419246:	mov    QWORD PTR [r12+rbp*8],rsi
  41924a:	lea    rdx,[rbp+0x1]
  41924e:	mov    QWORD PTR [r12+r14*1+0x8],0x0
  419257:	mov    rax,QWORD PTR [rdi+0x58]
  41925b:	mov    rbp,rdx
  41925e:	test   rax,rax
  419261:	je     0x4193b0
  419267:	cmp    QWORD PTR [rax],0x0
  41926b:	je     0x4193b0
  419271:	xor    esi,esi
  419273:	jmp    0x4192d1
  419275:	cmp    r12,0x1
  419279:	sbb    rdx,rdx
  41927c:	and    rdx,0xfffffffffffffe68
  419283:	add    rdx,0x4b8
  41928a:	cmp    r12,0x1
  41928e:	sbb    rbx,rbx
  419291:	and    rbx,0xffffffffffffffcd
  419295:	add    rbx,0x97
  41929c:	mov    rcx,r12
  41929f:	call   0x422820
  4192a4:	mov    r12,rax
  4192a7:	lea    rax,[r12+r14*1]
  4192ab:	add    rbp,0x1
  4192af:	add    rax,rsi
  4192b2:	add    rsi,0x8
  4192b6:	mov    QWORD PTR [rax+0x8],r13
  4192ba:	mov    QWORD PTR [rax+0x10],0x0
  4192c2:	mov    rax,QWORD PTR [rdi+0x58]
  4192c6:	cmp    QWORD PTR [rax+rsi*1],0x0
  4192cb:	je     0x4193b0
  4192d1:	mov    ecx,0x28
  4192d6:	call   0x4227b0
  4192db:	cmp    QWORD PTR [rsp+0x28],rdi
  4192e0:	mov    r13,rax
  4192e3:	mov    QWORD PTR [rax+0x10],0x0
  4192eb:	mov    QWORD PTR [rax+0x8],0x0
  4192f3:	je     0x419390
  4192f9:	mov    rcx,QWORD PTR [rdi]
  4192fc:	call   0x43a620
  419301:	mov    r15,rax
  419304:	mov    rax,QWORD PTR [rdi+0x58]
  419308:	mov    rax,QWORD PTR [rax+rsi*1]
  41930c:	mov    rcx,QWORD PTR [rax+0x8]
  419310:	call   0x43a620
  419315:	lea    rcx,[r15+rax*1+0x4]
  41931a:	call   0x4227b0
  41931f:	mov    rdx,QWORD PTR [rdi+0x58]
  419323:	mov    QWORD PTR [r13+0x0],rax
  419327:	mov    rcx,rax
  41932a:	mov    r8,QWORD PTR [rdi]
  41932d:	mov    rdx,QWORD PTR [rdx+rsi*1]
  419331:	mov    r9,QWORD PTR [rdx+0x8]
  419335:	lea    rdx,[rip+0x2b766]        # 0x444aa2
  41933c:	call   0x433f00
  419341:	lea    rax,[rbp+0x2]
  419345:	cmp    rax,rbx
  419348:	jb     0x4192a7
  41934e:	test   rbx,rbx
  419351:	je     0x419275
  419357:	test   r12,r12
  41935a:	je     0x41937a
  41935c:	movabs rax,0x1555555555555554
  419366:	cmp    rbx,rax
  419369:	ja     0x41948f
  41936f:	mov    rax,rbx
  419372:	shr    rax,1
  419375:	lea    rbx,[rbx+rax*1+0x1]
  41937a:	lea    rdx,[rbx*8+0x0]
  419382:	jmp    0x41929c
  419387:	nop    WORD PTR [rax+rax*1+0x0]
  419390:	mov    rax,QWORD PTR [rsp+0x28]
  419395:	mov    rax,QWORD PTR [rax+0x58]
  419399:	mov    rax,QWORD PTR [rax+rsi*1]
  41939d:	mov    rcx,QWORD PTR [rax+0x8]
  4193a1:	call   0x422a00
  4193a6:	mov    QWORD PTR [r13+0x0],rax
  4193aa:	jmp    0x419341
  4193ac:	nop    DWORD PTR [rax+0x0]
  4193b0:	mov    rax,QWORD PTR [rip+0x305a9]        # 0x449960
  4193b7:	mov    rax,QWORD PTR [rax]
  4193ba:	test   rax,rax
  4193bd:	je     0x4193da
  4193bf:	mov    rsi,QWORD PTR [rsp+0x30]
  4193c4:	mov    rdi,QWORD PTR [rax+rsi*1]
  4193c8:	add    rsi,0x8
  4193cc:	mov    QWORD PTR [rsp+0x30],rsi
  4193d1:	test   rdi,rdi
  4193d4:	jne    0x4191c0
  4193da:	lea    rcx,[rip+0x2b6c8]        # 0x444aa9
  4193e1:	call   0x433f18
  4193e6:	mov    rdx,r12
  4193e9:	mov    rcx,rax
  4193ec:	call   0x4065d0
  4193f1:	mov    rcx,r12
  4193f4:	mov    rbx,rax
  4193f7:	call   0x4093d0
  4193fc:	test   rbx,rbx
  4193ff:	je     0x41946b
  419401:	mov    rcx,rbx
  419404:	call   0x409490
  419409:	cmp    BYTE PTR [rbx],0x0
  41940c:	jne    0x41945c
  41940e:	mov    rcx,rbx
  419411:	add    rsp,0x48
  419415:	pop    rbx
  419416:	pop    rsi
  419417:	pop    rdi
  419418:	pop    rbp
  419419:	pop    r12
  41941b:	pop    r13
  41941d:	pop    r14
  41941f:	pop    r15
  419421:	jmp    0x43a748
  419426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419430:	test   r12,r12
  419433:	je     0x41944f
  419435:	movabs rax,0x1555555555555554
  41943f:	cmp    rbx,rax
  419442:	ja     0x41948f
  419444:	mov    rax,rbx
  419447:	shr    rax,1
  41944a:	lea    rbx,[rbx+rax*1+0x1]
  41944f:	lea    rdx,[rbx*8+0x0]
  419457:	jmp    0x419233
  41945c:	mov    rdx,QWORD PTR [rsp+0x38]
  419461:	mov    rcx,rbx
  419464:	call   0x417150
  419469:	jmp    0x41940e
  41946b:	mov    rcx,QWORD PTR [rsp+0x38]
  419470:	xor    edx,edx
  419472:	add    rsp,0x48
  419476:	pop    rbx
  419477:	pop    rsi
  419478:	pop    rdi
  419479:	pop    rbp
  41947a:	pop    r12
  41947c:	pop    r13
  41947e:	pop    r14
  419480:	pop    r15
  419482:	jmp    0x414890
  419487:	xor    r12d,r12d
  41948a:	jmp    0x4193da
  41948f:	call   0x422a20
  419494:	nop
  419495:	nop
  419496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194a0:	push   r15
  4194a2:	push   r14
  4194a4:	push   r13
  4194a6:	push   r12
  4194a8:	push   rbp
  4194a9:	push   rdi
  4194aa:	push   rsi
  4194ab:	push   rbx
  4194ac:	sub    rsp,0x48
  4194b0:	mov    rax,QWORD PTR [rcx]
  4194b3:	mov    rdi,QWORD PTR [rcx+0x10]
  4194b7:	lea    rsi,[rip+0x2b17b]        # 0x444639
  4194be:	mov    r13,rcx
  4194c1:	mov    ecx,0x4
  4194c6:	mov    r12,rdx
  4194c9:	mov    QWORD PTR [rsp+0x28],rax
  4194ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4194d0:	je     0x4195f6
  4194d6:	cmp    QWORD PTR [r13+0x30],0x0
  4194db:	mov    r15d,0x3
  4194e1:	je     0x4195b1
  4194e7:	nop    WORD PTR [rax+rax*1+0x0]
  4194f0:	mov    rsi,QWORD PTR [rip+0x255c9]        # 0x43eac0
  4194f7:	test   rsi,rsi
  4194fa:	je     0x4195b1
  419500:	lea    rbx,[rip+0x255b9]        # 0x43eac0
  419507:	lea    r14,[rip+0x2b097]        # 0x4445a5
  41950e:	jmp    0x419520
  419510:	add    rbx,0x8
  419514:	mov    rsi,QWORD PTR [rbx]
  419517:	test   rsi,rsi
  41951a:	je     0x4195b1
  419520:	mov    rcx,r12
  419523:	mov    rdi,r14
  419526:	call   0x43a620
  41952b:	mov    rcx,rsi
  41952e:	mov    rbp,rax
  419531:	call   0x43a620
  419536:	lea    rcx,[rax+rbp*1]
  41953a:	call   0x4227b0
  41953f:	mov    rdx,QWORD PTR [rbx]
  419542:	mov    r8,r12
  419545:	mov    rcx,rax
  419548:	mov    rbp,rax
  41954b:	call   0x433f00
  419550:	mov    rsi,QWORD PTR [rbx]
  419553:	mov    rcx,r15
  419556:	mov    rdx,rbp
  419559:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41955b:	mov    rcx,r13
  41955e:	seta   r8b
  419562:	setb   al
  419565:	sub    r8d,eax
  419568:	movsx  r8d,r8b
  41956c:	call   0x409010
  419571:	mov    rcx,rbp
  419574:	mov    rsi,rax
  419577:	call   0x43a748
  41957c:	test   rsi,rsi
  41957f:	je     0x419510
  419581:	mov    rcx,QWORD PTR [rsi+0x8]
  419585:	test   rcx,rcx
  419588:	je     0x4195e3
  41958a:	mov    rdx,QWORD PTR [rsi+0x10]
  41958e:	call   0x4124d0
  419593:	mov    rcx,r13
  419596:	mov    rbx,rax
  419599:	call   0x414970
  41959e:	test   rbx,rbx
  4195a1:	je     0x4195b1
  4195a3:	mov    r13,rbx
  4195a6:	cmp    QWORD PTR [r13+0x30],0x0
  4195ab:	jne    0x4194f0
  4195b1:	mov    rbx,QWORD PTR [r13+0x10]
  4195b5:	mov    rcx,r13
  4195b8:	mov    QWORD PTR [r13+0x10],0x0
  4195c0:	call   0x414970
  4195c5:	mov    rcx,QWORD PTR [rsp+0x28]
  4195ca:	mov    rdx,rbx
  4195cd:	call   0x409420
  4195d2:	add    rsp,0x48
  4195d6:	pop    rbx
  4195d7:	pop    rsi
  4195d8:	pop    rdi
  4195d9:	pop    rbp
  4195da:	pop    r12
  4195dc:	pop    r13
  4195de:	pop    r14
  4195e0:	pop    r15
  4195e2:	ret    
  4195e3:	mov    rcx,QWORD PTR [rsp+0x28]
  4195e8:	call   0x422a00
  4195ed:	mov    rcx,rax
  4195f0:	mov    QWORD PTR [rsi+0x8],rax
  4195f4:	jmp    0x41958a
  4195f6:	mov    rcx,QWORD PTR [rsp+0x28]
  4195fb:	call   0x4117b0
  419600:	test   rax,rax
  419603:	mov    rdi,rax
  419606:	je     0x4196da
  41960c:	mov    rbx,QWORD PTR [rax+0x58]
  419610:	test   rbx,rbx
  419613:	je     0x4194d6
  419619:	lea    rcx,[rsp+0x30]
  41961e:	lea    rdx,[rip+0x2b490]        # 0x444ab5
  419625:	mov    r8,r12
  419628:	call   0x433f30
  41962d:	lea    rdx,[rip+0x2b48d]        # 0x444ac1
  419634:	lea    rcx,[rsp+0x38]
  419639:	mov    r8,r12
  41963c:	call   0x433f30
  419641:	mov    rdx,QWORD PTR [rbx]
  419644:	test   rdx,rdx
  419647:	je     0x419682
  419649:	mov    rsi,QWORD PTR [rip+0x3b360]        # 0x4549b0
  419650:	mov    rcx,QWORD PTR [rdx+0x8]
  419654:	test   rcx,rcx
  419657:	je     0x419676
  419659:	mov    rdx,QWORD PTR [rsp+0x30]
  41965e:	call   rsi
  419660:	test   eax,eax
  419662:	je     0x41969b
  419664:	mov    rax,QWORD PTR [rbx]
  419667:	mov    rdx,QWORD PTR [rsp+0x38]
  41966c:	mov    rcx,QWORD PTR [rax+0x8]
  419670:	call   rsi
  419672:	test   eax,eax
  419674:	je     0x41969b
  419676:	add    rbx,0x8
  41967a:	mov    rdx,QWORD PTR [rbx]
  41967d:	test   rdx,rdx
  419680:	jne    0x419650
  419682:	mov    rcx,QWORD PTR [rsp+0x30]
  419687:	call   0x43a748
  41968c:	mov    rcx,QWORD PTR [rsp+0x38]
  419691:	call   0x43a748
  419696:	jmp    0x4194d6
  41969b:	mov    rax,QWORD PTR [rbx]
  41969e:	mov    rcx,rdi
  4196a1:	mov    rdx,QWORD PTR [rax+0x8]
  4196a5:	call   0x412180
  4196aa:	mov    rcx,QWORD PTR [rsp+0x30]
  4196af:	mov    rbx,rax
  4196b2:	call   0x43a748
  4196b7:	mov    rcx,QWORD PTR [rsp+0x38]
  4196bc:	call   0x43a748
  4196c1:	test   rbx,rbx
  4196c4:	je     0x4194d6
  4196ca:	mov    rcx,r13
  4196cd:	mov    r13,rbx
  4196d0:	call   0x414970
  4196d5:	jmp    0x4194d6
  4196da:	xor    eax,eax
  4196dc:	jmp    0x4195d2
  4196e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4196e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196f0:	push   rdi
  4196f1:	push   rsi
  4196f2:	push   rbx
  4196f3:	sub    rsp,0x20
  4196f7:	call   0x409e60
  4196fc:	mov    rcx,rax
  4196ff:	call   0x422a00
  419704:	mov    rcx,rax
  419707:	mov    rdi,rax
  41970a:	call   0x43a620
  41970f:	lea    edx,[rax-0x1]
  419712:	test   edx,edx
  419714:	jle    0x41977f
  419716:	movsxd rdx,edx
  419719:	sub    eax,0x2
  41971c:	lea    rbx,[rdi+rdx*1]
  419720:	sub    rdx,rax
  419723:	lea    rsi,[rdi+rdx*1-0x1]
  419728:	jmp    0x419739
  41972a:	nop    WORD PTR [rax+rax*1+0x0]
  419730:	sub    rbx,0x1
  419734:	cmp    rbx,rsi
  419737:	je     0x41977f
  419739:	cmp    BYTE PTR [rbx],0x2e
  41973c:	jne    0x419730
  41973e:	lea    rdx,[rip+0x2b38a]        # 0x444acf
  419745:	mov    r8d,0x5
  41974b:	mov    rcx,rbx
  41974e:	call   0x421e70
  419753:	test   eax,eax
  419755:	je     0x41977c
  419757:	lea    rdx,[rip+0x2b377]        # 0x444ad5
  41975e:	mov    r8d,0x4
  419764:	mov    rcx,rbx
  419767:	call   0x421e70
  41976c:	test   eax,eax
  41976e:	je     0x41977c
  419770:	movsx  edx,BYTE PTR [rbx+0x1]
  419774:	sub    edx,0x30
  419777:	cmp    edx,0x9
  41977a:	ja     0x419730
  41977c:	mov    BYTE PTR [rbx],0x0
  41977f:	mov    rax,rdi
  419782:	add    rsp,0x20
  419786:	pop    rbx
  419787:	pop    rsi
  419788:	pop    rdi
  419789:	ret    
  41978a:	nop    WORD PTR [rax+rax*1+0x0]
  419790:	push   r13
  419792:	push   r12
  419794:	push   rbp
  419795:	push   rdi
  419796:	push   rsi
  419797:	push   rbx
  419798:	sub    rsp,0x38
  41979c:	mov    r12,rcx
  41979f:	lea    rcx,[rip+0x2b33a]        # 0x444ae0
  4197a6:	call   0x433f18
  4197ab:	mov    rbp,rax
  4197ae:	mov    rax,QWORD PTR [r12+0x20]
  4197b3:	mov    r13,QWORD PTR [rax]
  4197b6:	mov    rcx,r13
  4197b9:	call   0x4196f0
  4197be:	mov    rcx,rax
  4197c1:	mov    rbx,rax
  4197c4:	call   0x43a620
  4197c9:	mov    rcx,rbp
  4197cc:	mov    rsi,rax
  4197cf:	call   0x43a620
  4197d4:	lea    rcx,[rax+rsi*1]
  4197d8:	call   0x4227b0
  4197dd:	mov    r8,rbx
  4197e0:	mov    rdi,rax
  4197e3:	mov    rdx,rbp
  4197e6:	mov    rcx,rax
  4197e9:	call   0x433f00
  4197ee:	mov    rcx,rdi
  4197f1:	call   0x4055a0
  4197f6:	mov    rcx,rdi
  4197f9:	mov    rsi,rax
  4197fc:	call   0x43a748
  419801:	test   rsi,rsi
  419804:	je     0x419883
  419806:	cmp    BYTE PTR [rsi],0x0
  419809:	mov    rdi,rbx
  41980c:	mov    rcx,r13
  41980f:	cmovne rdi,rsi
  419813:	xor    edx,edx
  419815:	call   0x4124d0
  41981a:	test   rax,rax
  41981d:	je     0x419861
  41981f:	mov    rdx,rdi
  419822:	mov    rcx,rax
  419825:	call   0x4194a0
  41982a:	test   rax,rax
  41982d:	mov    rdi,rax
  419830:	je     0x419845
  419832:	mov    rcx,r12
  419835:	mov    rdx,rax
  419838:	call   0x416f40
  41983d:	mov    rcx,rdi
  419840:	call   0x409390
  419845:	mov    rcx,rsi
  419848:	call   0x43a748
  41984d:	mov    rcx,rbx
  419850:	add    rsp,0x38
  419854:	pop    rbx
  419855:	pop    rsi
  419856:	pop    rdi
  419857:	pop    rbp
  419858:	pop    r12
  41985a:	pop    r13
  41985c:	jmp    0x43a748
  419861:	mov    rcx,QWORD PTR [rip+0x301f8]        # 0x449a60
  419868:	lea    rdx,[rip+0x2adca]        # 0x444639
  41986f:	mov    QWORD PTR [rsp+0x28],rax
  419874:	mov    rcx,QWORD PTR [rcx]
  419877:	call   0x4144d0
  41987c:	mov    rax,QWORD PTR [rsp+0x28]
  419881:	jmp    0x41981f
  419883:	xor    edx,edx
  419885:	mov    rcx,r12
  419888:	add    rsp,0x38
  41988c:	pop    rbx
  41988d:	pop    rsi
  41988e:	pop    rdi
  41988f:	pop    rbp
  419890:	pop    r12
  419892:	pop    r13
  419894:	jmp    0x414890
  419899:	nop    DWORD PTR [rax+0x0]
  4198a0:	push   rsi
  4198a1:	push   rbx
  4198a2:	sub    rsp,0x28
  4198a6:	mov    rsi,rcx
  4198a9:	lea    rcx,[rip+0x2b24f]        # 0x444aff
  4198b0:	call   0x433f18
  4198b5:	mov    rcx,rax
  4198b8:	call   0x4055a0
  4198bd:	test   rax,rax
  4198c0:	mov    rbx,rax
  4198c3:	je     0x419910
  4198c5:	mov    rcx,rax
  4198c8:	call   0x409490
  4198cd:	cmp    BYTE PTR [rbx],0x0
  4198d0:	jne    0x4198e0
  4198d2:	mov    rcx,rbx
  4198d5:	add    rsp,0x28
  4198d9:	pop    rbx
  4198da:	pop    rsi
  4198db:	jmp    0x43a748
  4198e0:	lea    rcx,[rip+0x2b226]        # 0x444b0d
  4198e7:	mov    rdx,rbx
  4198ea:	call   0x4124d0
  4198ef:	test   rax,rax
  4198f2:	je     0x4198d2
  4198f4:	mov    rcx,rsi
  4198f7:	mov    rdx,rax
  4198fa:	call   0x415020
  4198ff:	mov    rcx,rbx
  419902:	add    rsp,0x28
  419906:	pop    rbx
  419907:	pop    rsi
  419908:	jmp    0x43a748
  41990d:	nop    DWORD PTR [rax]
  419910:	xor    edx,edx
  419912:	mov    rcx,rsi
  419915:	add    rsp,0x28
  419919:	pop    rbx
  41991a:	pop    rsi
  41991b:	jmp    0x414890
  419920:	mov    rdx,rcx
  419923:	lea    rcx,[rip+0x2ad0f]        # 0x444639
  41992a:	jmp    0x417150
  41992f:	nop
  419930:	mov    rdx,rcx
  419933:	lea    rcx,[rip+0x2b1de]        # 0x444b18
  41993a:	jmp    0x417150
  41993f:	nop
  419940:	push   rbx
  419941:	sub    rsp,0x30
  419945:	mov    rax,QWORD PTR [rcx+0x20]
  419949:	mov    rax,QWORD PTR [rax]
  41994c:	test   rax,rax
  41994f:	je     0x419956
  419951:	cmp    BYTE PTR [rax],0x0
  419954:	jne    0x419970
  419956:	lea    rcx,[rip+0x2b1f1]        # 0x444b4e
  41995d:	add    rsp,0x30
  419961:	pop    rbx
  419962:	jmp    0x4210d0
  419967:	nop    WORD PTR [rax+rax*1+0x0]
  419970:	mov    rbx,rcx
  419973:	call   0x4204c0
  419978:	mov    r8d,eax
  41997b:	mov    r9d,DWORD PTR [rbx+0x70]
  41997f:	imul   eax,eax,0x64
  419982:	cdq    
  419983:	idiv   r9d
  419986:	mov    ecx,eax
  419988:	mov    rax,QWORD PTR [rbx+0x20]
  41998c:	mov    rdx,QWORD PTR [rax+0x8]
  419990:	test   rdx,rdx
  419993:	je     0x4199b0
  419995:	mov    DWORD PTR [rsp+0x20],ecx
  419999:	lea    rcx,[rip+0x2b188]        # 0x444b28
  4199a0:	call   0x4210d0
  4199a5:	nop
  4199a6:	add    rsp,0x30
  4199aa:	pop    rbx
  4199ab:	ret    
  4199ac:	nop    DWORD PTR [rax+0x0]
  4199b0:	mov    rdx,QWORD PTR [rax]
  4199b3:	jmp    0x419995
  4199b5:	nop
  4199b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199c0:	sub    rsp,0x28
  4199c4:	cmp    QWORD PTR [rcx+0xb0],0x1
  4199cc:	jbe    0x4199e0
  4199ce:	add    rsp,0x28
  4199d2:	jmp    0x414d90
  4199d7:	nop    WORD PTR [rax+rax*1+0x0]
  4199e0:	lea    rcx,[rip+0x2b175]        # 0x444b5c
  4199e7:	call   0x433f18
  4199ec:	mov    rcx,rax
  4199ef:	add    rsp,0x28
  4199f3:	jmp    0x4144d0
  4199f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419a00:	push   rsi
  419a01:	push   rbx
  419a02:	sub    rsp,0x28
  419a06:	mov    rsi,rcx
  419a09:	lea    rcx,[rip+0x2b167]        # 0x444b77
  419a10:	call   0x433f18
  419a15:	mov    rcx,rax
  419a18:	call   0x4055a0
  419a1d:	test   rax,rax
  419a20:	mov    rbx,rax
  419a23:	je     0x419a80
  419a25:	cmp    BYTE PTR [rax],0x0
  419a28:	jne    0x419a31
  419a2a:	add    rsp,0x28
  419a2e:	pop    rbx
  419a2f:	pop    rsi
  419a30:	ret    
  419a31:	lea    rdx,[rip+0x2ad4d]        # 0x444785
  419a38:	mov    rcx,rax
  419a3b:	call   0x4124d0
  419a40:	test   rax,rax
  419a43:	je     0x419a60
  419a45:	mov    rdx,rax
  419a48:	mov    rcx,rsi
  419a4b:	call   0x415020
  419a50:	mov    rcx,rbx
  419a53:	add    rsp,0x28
  419a57:	pop    rbx
  419a58:	pop    rsi
  419a59:	jmp    0x43a748
  419a5e:	xchg   ax,ax
  419a60:	mov    rax,QWORD PTR [rip+0x2ff39]        # 0x4499a0
  419a67:	mov    rdx,QWORD PTR [rax]
  419a6a:	test   rdx,rdx
  419a6d:	je     0x419aa0
  419a6f:	lea    rcx,[rip+0x2ab2f]        # 0x4445a5
  419a76:	call   0x4144d0
  419a7b:	jmp    0x419a50
  419a7d:	nop    DWORD PTR [rax]
  419a80:	mov    rax,QWORD PTR [rip+0x2fd69]        # 0x4497f0
  419a87:	mov    edx,0x1
  419a8c:	mov    rcx,QWORD PTR [rax]
  419a8f:	add    rsp,0x28
  419a93:	pop    rbx
  419a94:	pop    rsi
  419a95:	jmp    0x414890
  419a9a:	nop    WORD PTR [rax+rax*1+0x0]
  419aa0:	lea    rcx,[rip+0x2b0dc]        # 0x444b83
  419aa7:	call   0x433f18
  419aac:	mov    rdx,rbx
  419aaf:	mov    rcx,rax
  419ab2:	call   0x4144d0
  419ab7:	jmp    0x419a50
  419ab9:	nop    DWORD PTR [rax+0x0]
  419ac0:	push   r12
  419ac2:	push   rbp
  419ac3:	push   rdi
  419ac4:	push   rsi
  419ac5:	push   rbx
  419ac6:	sub    rsp,0x20
  419aca:	test   rcx,rcx
  419acd:	je     0x419ba0
  419ad3:	lea    rdi,[rip+0x2b0bb]        # 0x444b95
  419ada:	mov    rbx,rcx
  419add:	mov    rsi,rdx
  419ae0:	mov    ecx,0x2
  419ae5:	mov    ebp,r8d
  419ae8:	mov    r12,rdx
  419aeb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419aed:	je     0x419bb0
  419af3:	lea    rdx,[rip+0x2ab52]        # 0x44464c
  419afa:	mov    rcx,r12
  419afd:	call   0x43a770
  419b02:	mov    rsi,rax
  419b05:	test   rsi,rsi
  419b08:	je     0x419bbf
  419b0e:	mov    rcx,QWORD PTR [rip+0x37ba3]        # 0x4516b8
  419b15:	add    rbx,0x8
  419b19:	call   0x40bef0
  419b1e:	mov    QWORD PTR [rip+0x37b8f],0x0        # 0x4516b8
  419b29:	mov    r10,QWORD PTR [rbx-0x8]
  419b2d:	test   r10,r10
  419b30:	je     0x419b5b
  419b32:	mov    rdx,QWORD PTR [r10+0x10]
  419b36:	mov    rcx,QWORD PTR [r10+0x8]
  419b3a:	mov    r9d,ebp
  419b3d:	mov    r8,rsi
  419b40:	call   0x414a80
  419b45:	cmp    eax,0x2
  419b48:	je     0x419be0
  419b4e:	add    rbx,0x8
  419b52:	mov    r10,QWORD PTR [rbx-0x8]
  419b56:	test   r10,r10
  419b59:	jne    0x419b32
  419b5b:	call   QWORD PTR [rip+0x3ad8f]        # 0x4548f0
  419b61:	add    rax,0x30
  419b65:	cmp    rsi,rax
  419b68:	je     0x419b72
  419b6a:	mov    rcx,rsi
  419b6d:	call   0x43a788
  419b72:	mov    eax,DWORD PTR [rip+0x39d28]        # 0x4538a0
  419b78:	test   eax,eax
  419b7a:	je     0x419ba0
  419b7c:	lea    rcx,[rip+0x2b050]        # 0x444bd3
  419b83:	call   0x433f18
  419b88:	mov    rdx,r12
  419b8b:	mov    rcx,rax
  419b8e:	add    rsp,0x20
  419b92:	pop    rbx
  419b93:	pop    rsi
  419b94:	pop    rdi
  419b95:	pop    rbp
  419b96:	pop    r12
  419b98:	jmp    0x4146b0
  419b9d:	nop    DWORD PTR [rax]
  419ba0:	add    rsp,0x20
  419ba4:	pop    rbx
  419ba5:	pop    rsi
  419ba6:	pop    rdi
  419ba7:	pop    rbp
  419ba8:	pop    r12
  419baa:	ret    
  419bab:	nop    DWORD PTR [rax+rax*1+0x0]
  419bb0:	call   QWORD PTR [rip+0x3ad3a]        # 0x4548f0
  419bb6:	lea    rsi,[rax+0x30]
  419bba:	jmp    0x419b05
  419bbf:	lea    rcx,[rip+0x2afd2]        # 0x444b98
  419bc6:	call   0x433f18
  419bcb:	mov    rdx,r12
  419bce:	mov    rcx,rax
  419bd1:	add    rsp,0x20
  419bd5:	pop    rbx
  419bd6:	pop    rsi
  419bd7:	pop    rdi
  419bd8:	pop    rbp
  419bd9:	pop    r12
  419bdb:	jmp    0x4144d0
  419be0:	call   QWORD PTR [rip+0x3ad5a]        # 0x454940
  419be6:	mov    ecx,DWORD PTR [rax]
  419be8:	call   0x433110
  419bed:	lea    rcx,[rip+0x2afc7]        # 0x444bbb
  419bf4:	mov    rbx,rax
  419bf7:	call   0x433f18
  419bfc:	mov    r8,rbx
  419bff:	mov    rcx,rax
  419c02:	mov    rdx,r12
  419c05:	call   0x4144d0
  419c0a:	mov    ecx,0x1
  419c0f:	call   0x43a790
  419c14:	nop
  419c15:	nop
  419c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c20:	push   rbp
  419c21:	push   rdi
  419c22:	push   rsi
  419c23:	push   rbx
  419c24:	sub    rsp,0x28
  419c28:	mov    rdi,rcx
  419c2b:	lea    rcx,[rip+0x2afb0]        # 0x444be2
  419c32:	call   0x43a730
  419c37:	test   rax,rax
  419c3a:	mov    rbx,rax
  419c3d:	je     0x419c4a
  419c3f:	movzx  eax,BYTE PTR [rax]
  419c42:	test   al,al
  419c44:	jne    0x419d00
  419c4a:	lea    rbx,[rip+0x2af8d]        # 0x444bde
  419c51:	lea    rdx,[rip+0x2a9f4]        # 0x44464c
  419c58:	mov    rcx,rbx
  419c5b:	mov    ebp,0x1
  419c60:	call   QWORD PTR [rip+0x3ad2a]        # 0x454990
  419c66:	mov    rsi,rax
  419c69:	test   rsi,rsi
  419c6c:	je     0x419d50
  419c72:	mov    edx,DWORD PTR [rip+0x39c28]        # 0x4538a0
  419c78:	test   edx,edx
  419c7a:	jne    0x419d25
  419c80:	mov    rax,QWORD PTR [rdi+0x20]
  419c84:	mov    r9,rsi
  419c87:	mov    r8d,0x1
  419c8d:	movsxd rdx,DWORD PTR [rax+0x20]
  419c91:	mov    rcx,QWORD PTR [rax+0x18]
  419c95:	call   0x43a738
  419c9a:	test   ebp,ebp
  419c9c:	mov    rcx,rsi
  419c9f:	jne    0x419cc0
  419ca1:	call   0x43a788
  419ca6:	mov    eax,DWORD PTR [rip+0x39bf4]        # 0x4538a0
  419cac:	test   eax,eax
  419cae:	jne    0x419cd0
  419cb0:	add    rsp,0x28
  419cb4:	pop    rbx
  419cb5:	pop    rsi
  419cb6:	pop    rdi
  419cb7:	pop    rbp
  419cb8:	ret    
  419cb9:	nop    DWORD PTR [rax+0x0]
  419cc0:	call   QWORD PTR [rip+0x3acc2]        # 0x454988
  419cc6:	mov    eax,DWORD PTR [rip+0x39bd4]        # 0x4538a0
  419ccc:	test   eax,eax
  419cce:	je     0x419cb0
  419cd0:	mov    rcx,QWORD PTR [rdi+0x20]
  419cd4:	call   0x409ed0
  419cd9:	lea    rcx,[rip+0x2af43]        # 0x444c23
  419ce0:	mov    rbx,rax
  419ce3:	call   0x433f18
  419ce8:	mov    rdx,rbx
  419ceb:	mov    rcx,rax
  419cee:	add    rsp,0x28
  419cf2:	pop    rbx
  419cf3:	pop    rsi
  419cf4:	pop    rdi
  419cf5:	pop    rbp
  419cf6:	jmp    0x4146b0
  419cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  419d00:	cmp    al,0x3e
  419d02:	jne    0x419c51
  419d08:	add    rbx,0x1
  419d0c:	lea    rdx,[rip+0x2a939]        # 0x44464c
  419d13:	xor    ebp,ebp
  419d15:	mov    rcx,rbx
  419d18:	call   0x43a770
  419d1d:	mov    rsi,rax
  419d20:	jmp    0x419c69
  419d25:	mov    rcx,QWORD PTR [rdi+0x20]
  419d29:	call   0x409ed0
  419d2e:	lea    rcx,[rip+0x2aeda]        # 0x444c0f
  419d35:	mov    rbx,rax
  419d38:	call   0x433f18
  419d3d:	mov    rdx,rbx
  419d40:	mov    rcx,rax
  419d43:	call   0x4146b0
  419d48:	jmp    0x419c80
  419d4d:	nop    DWORD PTR [rax]
  419d50:	lea    rcx,[rip+0x2ae9e]        # 0x444bf5
  419d57:	call   0x433f18
  419d5c:	mov    rdx,rbx
  419d5f:	mov    rcx,rax
  419d62:	add    rsp,0x28
  419d66:	pop    rbx
  419d67:	pop    rsi
  419d68:	pop    rdi
  419d69:	pop    rbp
  419d6a:	jmp    0x4144d0
  419d6f:	nop
  419d70:	sub    rsp,0x28
  419d74:	mov    eax,DWORD PTR [rip+0x24dc2]        # 0x43eb3c
  419d7a:	test   eax,eax
  419d7c:	sete   al
  419d7f:	movzx  edx,al
  419d82:	test   al,al
  419d84:	mov    DWORD PTR [rip+0x24db2],edx        # 0x43eb3c
  419d8a:	jne    0x419da4
  419d8c:	lea    rcx,[rip+0x2aed5]        # 0x444c68
  419d93:	call   0x433f18
  419d98:	mov    rcx,rax
  419d9b:	add    rsp,0x28
  419d9f:	jmp    0x4210d0
  419da4:	lea    rcx,[rip+0x2ae95]        # 0x444c40
  419dab:	call   0x433f18
  419db0:	mov    rcx,rax
  419db3:	add    rsp,0x28
  419db7:	jmp    0x4210d0
  419dbc:	nop    DWORD PTR [rax+0x0]
  419dc0:	mov    rax,QWORD PTR [rip+0x2fba9]        # 0x449970
  419dc7:	mov    rax,QWORD PTR [rax]
  419dca:	test   rax,rax
  419dcd:	je     0x419e12
  419dcf:	mov    rdx,QWORD PTR [rip+0x2fb8a]        # 0x449960
  419dd6:	mov    rcx,QWORD PTR [rdx]
  419dd9:	lea    r8,[rcx+rax*8]
  419ddd:	nop    DWORD PTR [rax]
  419de0:	mov    rax,QWORD PTR [rcx]
  419de3:	mov    rdx,QWORD PTR [rax+0x58]
  419de7:	test   rdx,rdx
  419dea:	je     0x419e07
  419dec:	mov    rax,QWORD PTR [rdx]
  419def:	test   rax,rax
  419df2:	je     0x419e07
  419df4:	add    rdx,0x8
  419df8:	and    DWORD PTR [rax+0x18],0xffff7fff
  419dff:	mov    rax,QWORD PTR [rdx]
  419e02:	test   rax,rax
  419e05:	jne    0x419df4
  419e07:	add    rcx,0x8
  419e0b:	cmp    rcx,r8
  419e0e:	jne    0x419de0
  419e10:	repz ret 
  419e12:	repz ret 
  419e14:	xchg   ax,ax
  419e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e20:	push   rsi
  419e21:	push   rbx
  419e22:	sub    rsp,0x38
  419e26:	mov    rax,QWORD PTR [rcx+0x20]
  419e2a:	lea    rdx,[rip+0x2ae5b]        # 0x444c8c
  419e31:	mov    rbx,rcx
  419e34:	lea    rcx,[rsp+0x28]
  419e39:	mov    r8,QWORD PTR [rax+0x10]
  419e3d:	call   0x433f30
  419e42:	mov    rcx,QWORD PTR [rsp+0x28]
  419e47:	call   0x4055a0
  419e4c:	mov    rcx,QWORD PTR [rsp+0x28]
  419e51:	mov    rsi,rax
  419e54:	call   0x43a748
  419e59:	test   rsi,rsi
  419e5c:	je     0x419ea7
  419e5e:	call   0x419dc0
  419e63:	mov    rax,QWORD PTR [rbx+0xb0]
  419e6a:	test   rax,rax
  419e6d:	je     0x419e97
  419e6f:	mov    rdx,QWORD PTR [rbx+0xa8]
  419e76:	lea    r9,[rdx+rax*8]
  419e7a:	nop    WORD PTR [rax+rax*1+0x0]
  419e80:	mov    r8,QWORD PTR [rdx]
  419e83:	add    rdx,0x8
  419e87:	cmp    rdx,r9
  419e8a:	mov    r8,QWORD PTR [r8]
  419e8d:	mov    DWORD PTR [r8+0x50],0x0
  419e95:	jne    0x419e80
  419e97:	mov    QWORD PTR [rbx+0x88],rsi
  419e9e:	mov    rcx,rbx
  419ea1:	call   0x417eb0
  419ea6:	nop
  419ea7:	add    rsp,0x38
  419eab:	pop    rbx
  419eac:	pop    rsi
  419ead:	ret    
  419eae:	xchg   ax,ax
  419eb0:	sub    rsp,0x28
  419eb4:	cmp    QWORD PTR [rcx+0x88],0x0
  419ebc:	je     0x419ec9
  419ebe:	mov    rax,QWORD PTR [rcx+0x20]
  419ec2:	mov    eax,DWORD PTR [rax+0x50]
  419ec5:	test   eax,eax
  419ec7:	jne    0x419ee1
  419ec9:	lea    rcx,[rip+0x2adce]        # 0x444c9e
  419ed0:	call   0x433f18
  419ed5:	mov    rcx,rax
  419ed8:	add    rsp,0x28
  419edc:	jmp    0x4144d0
  419ee1:	add    rsp,0x28
  419ee5:	jmp    0x417eb0
  419eea:	nop    WORD PTR [rax+rax*1+0x0]
  419ef0:	sub    rsp,0x28
  419ef4:	cmp    QWORD PTR [rcx+0x88],0x0
  419efc:	je     0x419f09
  419efe:	mov    rax,QWORD PTR [rcx+0x20]
  419f02:	mov    eax,DWORD PTR [rax+0x50]
  419f05:	test   eax,eax
  419f07:	jne    0x419f21
  419f09:	lea    rcx,[rip+0x2ad8e]        # 0x444c9e
  419f10:	call   0x433f18
  419f15:	mov    rcx,rax
  419f18:	add    rsp,0x28
  419f1c:	jmp    0x4144d0
  419f21:	add    rsp,0x28
  419f25:	jmp    0x4156b0
  419f2a:	nop    WORD PTR [rax+rax*1+0x0]
  419f30:	mov    r8d,0x1
  419f36:	jmp    0x415cc0
  419f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  419f40:	xor    r8d,r8d
  419f43:	jmp    0x415cc0
  419f48:	nop    DWORD PTR [rax+rax*1+0x0]
  419f50:	xor    r8d,r8d
  419f53:	neg    edx
  419f55:	jmp    0x415cc0
  419f5a:	nop    WORD PTR [rax+rax*1+0x0]
  419f60:	push   r12
  419f62:	push   rbp
  419f63:	push   rdi
  419f64:	push   rsi
  419f65:	push   rbx
  419f66:	sub    rsp,0x40
  419f6a:	mov    r8d,DWORD PTR [rip+0x37733]        # 0x4516a4
  419f71:	mov    eax,DWORD PTR [rcx+0x2c]
  419f74:	mov    rbp,rcx
  419f77:	mov    r12,QWORD PTR [rcx+0x20]
  419f7b:	add    eax,0x1
  419f7e:	test   r8d,r8d
  419f81:	mov    DWORD PTR [rsp+0x3c],eax
  419f85:	je     0x41a050
  419f8b:	cmp    QWORD PTR [rip+0x3771d],0x0        # 0x4516b0
  419f93:	je     0x41a050
  419f99:	mov    ecx,DWORD PTR [rip+0x376a9]        # 0x451648
  419f9f:	test   ecx,ecx
  419fa1:	jne    0x419ff3
  419fa3:	mov    rdi,QWORD PTR [rip+0x2f846]        # 0x4497f0
  419faa:	lea    ebx,[rdx-0x1]
  419fad:	lea    rsi,[rsp+0x3c]
  419fb2:	cmp    ebx,0xffffffff
  419fb5:	je     0x41a011
  419fb7:	mov    QWORD PTR [rsp+0x20],rsi
  419fbc:	mov    r9d,DWORD PTR [rip+0x376dd]        # 0x4516a0
  419fc3:	mov    r8d,0x1
  419fc9:	mov    rdx,QWORD PTR [rdi]
  419fcc:	mov    rcx,QWORD PTR [rip+0x376dd]        # 0x4516b0
  419fd3:	sub    ebx,0x1
  419fd6:	call   0x4158f0
  419fdb:	test   eax,eax
  419fdd:	je     0x419fb2
  419fdf:	mov    rcx,rbp
  419fe2:	call   0x420630
  419fe7:	nop
  419fe8:	add    rsp,0x40
  419fec:	pop    rbx
  419fed:	pop    rsi
  419fee:	pop    rdi
  419fef:	pop    rbp
  419ff0:	pop    r12
  419ff2:	ret    
  419ff3:	mov    eax,DWORD PTR [rbp+0x28]
  419ff6:	add    eax,DWORD PTR [rbp+0x14]
  419ff9:	cmp    eax,DWORD PTR [rbp+0x70]
  419ffc:	jge    0x41a080
  41a002:	mov    rcx,QWORD PTR [rbp+0x60]
  41a006:	cdqe   
  41a008:	mov    eax,DWORD PTR [rcx+rax*4]
  41a00b:	mov    DWORD PTR [rsp+0x3c],eax
  41a00f:	jmp    0x419fa3
  41a011:	cmp    QWORD PTR [rbp+0x20],r12
  41a015:	jne    0x419fdf
  41a017:	mov    eax,DWORD PTR [rip+0x3762b]        # 0x451648
  41a01d:	test   eax,eax
  41a01f:	je     0x419fdf
  41a021:	mov    rcx,rbp
  41a024:	call   0x4204c0
  41a029:	mov    ecx,DWORD PTR [rbp+0x28]
  41a02c:	mov    r8d,DWORD PTR [rbp+0x14]
  41a030:	sub    eax,ecx
  41a032:	cdq    
  41a033:	idiv   r8d
  41a036:	imul   eax,r8d
  41a03a:	lea    edx,[rax+rcx*1]
  41a03d:	mov    rcx,rbp
  41a040:	call   0x420550
  41a045:	jmp    0x419fe8
  41a047:	nop    WORD PTR [rax+rax*1+0x0]
  41a050:	lea    rcx,[rip+0x2ac58]        # 0x444caf
  41a057:	call   0x433f18
  41a05c:	lea    rcx,[rip+0x2a542]        # 0x4445a5
  41a063:	mov    rdx,rax
  41a066:	call   0x4144d0
  41a06b:	nop
  41a06c:	add    rsp,0x40
  41a070:	pop    rbx
  41a071:	pop    rsi
  41a072:	pop    rdi
  41a073:	pop    rbp
  41a074:	pop    r12
  41a076:	ret    
  41a077:	nop    WORD PTR [rax+rax*1+0x0]
  41a080:	mov    eax,DWORD PTR [r12+0x20]
  41a085:	mov    DWORD PTR [rsp+0x3c],eax
  41a089:	jmp    0x419fa3
  41a08e:	xchg   ax,ax
  41a090:	push   r12
  41a092:	push   rbp
  41a093:	push   rdi
  41a094:	push   rsi
  41a095:	push   rbx
  41a096:	sub    rsp,0x40
  41a09a:	mov    r8d,DWORD PTR [rip+0x37603]        # 0x4516a4
  41a0a1:	mov    eax,DWORD PTR [rcx+0x2c]
  41a0a4:	mov    rbp,rcx
  41a0a7:	mov    r12,QWORD PTR [rcx+0x20]
  41a0ab:	sub    eax,0x1
  41a0ae:	test   r8d,r8d
  41a0b1:	mov    DWORD PTR [rsp+0x3c],eax
  41a0b5:	je     0x41a185
  41a0bb:	cmp    QWORD PTR [rip+0x375ed],0x0        # 0x4516b0
  41a0c3:	je     0x41a185
  41a0c9:	mov    ecx,DWORD PTR [rip+0x37579]        # 0x451648
  41a0cf:	test   ecx,ecx
  41a0d1:	jne    0x41a123
  41a0d3:	mov    rdi,QWORD PTR [rip+0x2f716]        # 0x4497f0
  41a0da:	lea    ebx,[rdx-0x1]
  41a0dd:	lea    rsi,[rsp+0x3c]
  41a0e2:	cmp    ebx,0xffffffff
  41a0e5:	je     0x41a140
  41a0e7:	mov    QWORD PTR [rsp+0x20],rsi
  41a0ec:	mov    r9d,DWORD PTR [rip+0x375ad]        # 0x4516a0
  41a0f3:	mov    r8d,0xffffffff
  41a0f9:	mov    rdx,QWORD PTR [rdi]
  41a0fc:	mov    rcx,QWORD PTR [rip+0x375ad]        # 0x4516b0
  41a103:	sub    ebx,0x1
  41a106:	call   0x4158f0
  41a10b:	test   eax,eax
  41a10d:	je     0x41a0e2
  41a10f:	mov    rcx,rbp
  41a112:	call   0x420630
  41a117:	nop
  41a118:	add    rsp,0x40
  41a11c:	pop    rbx
  41a11d:	pop    rsi
  41a11e:	pop    rdi
  41a11f:	pop    rbp
  41a120:	pop    r12
  41a122:	ret    
  41a123:	movsxd rcx,DWORD PTR [rbp+0x28]
  41a127:	mov    rax,QWORD PTR [rbp+0x60]
  41a12b:	mov    eax,DWORD PTR [rax+rcx*4]
  41a12e:	sub    eax,0x1
  41a131:	mov    DWORD PTR [rsp+0x3c],eax
  41a135:	jmp    0x41a0d3
  41a137:	nop    WORD PTR [rax+rax*1+0x0]
  41a140:	cmp    QWORD PTR [rbp+0x20],r12
  41a144:	jne    0x41a10f
  41a146:	mov    eax,DWORD PTR [rip+0x374fc]        # 0x451648
  41a14c:	test   eax,eax
  41a14e:	je     0x41a10f
  41a150:	mov    rcx,rbp
  41a153:	call   0x4204c0
  41a158:	mov    edx,DWORD PTR [rbp+0x28]
  41a15b:	mov    r8d,DWORD PTR [rbp+0x14]
  41a15f:	mov    ecx,edx
  41a161:	sub    edx,eax
  41a163:	lea    eax,[rdx-0x1]
  41a166:	sub    ecx,r8d
  41a169:	cdq    
  41a16a:	idiv   r8d
  41a16d:	mov    edx,0x0
  41a172:	imul   eax,r8d
  41a176:	sub    ecx,eax
  41a178:	cmovns edx,ecx
  41a17b:	mov    rcx,rbp
  41a17e:	call   0x420550
  41a183:	jmp    0x41a118
  41a185:	lea    rcx,[rip+0x2ab23]        # 0x444caf
  41a18c:	call   0x433f18
  41a191:	lea    rcx,[rip+0x2a40d]        # 0x4445a5
  41a198:	mov    rdx,rax
  41a19b:	call   0x4144d0
  41a1a0:	nop
  41a1a1:	add    rsp,0x40
  41a1a5:	pop    rbx
  41a1a6:	pop    rsi
  41a1a7:	pop    rdi
  41a1a8:	pop    rbp
  41a1a9:	pop    r12
  41a1ab:	ret    
  41a1ac:	nop    DWORD PTR [rax+0x0]
  41a1b0:	push   rbx
  41a1b1:	sub    rsp,0x20
  41a1b5:	mov    rbx,rcx
  41a1b8:	mov    rcx,QWORD PTR [rcx+0x98]
  41a1bf:	call   0x43a748
  41a1c4:	or     DWORD PTR [rbx+0x80],0x1
  41a1cb:	mov    QWORD PTR [rbx+0x98],0x0
  41a1d6:	add    rsp,0x20
  41a1da:	pop    rbx
  41a1db:	ret    
  41a1dc:	nop    DWORD PTR [rax+0x0]
  41a1e0:	sub    rsp,0x28
  41a1e4:	lea    rcx,[rip+0x2aade]        # 0x444cc9
  41a1eb:	call   0x433f18
  41a1f0:	lea    rdx,[rip+0x2aae6]        # 0x444cdd
  41a1f7:	mov    rcx,rax
  41a1fa:	add    rsp,0x28
  41a1fe:	jmp    0x4210d0
  41a203:	nop    DWORD PTR [rax]
  41a206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a210:	push   rbx
  41a211:	sub    rsp,0x30
  41a215:	cmp    edx,0x1
  41a218:	mov    rbx,rcx
  41a21b:	jne    0x41a227
  41a21d:	mov    ecx,DWORD PTR [rip+0x37421]        # 0x451644
  41a223:	test   ecx,ecx
  41a225:	je     0x41a234
  41a227:	mov    rax,QWORD PTR [rip+0x2f692]        # 0x4498c0
  41a22e:	mov    eax,DWORD PTR [rax]
  41a230:	test   eax,eax
  41a232:	je     0x41a270
  41a234:	call   0x41c510
  41a239:	mov    rax,QWORD PTR [rip+0x2f990]        # 0x449bd0
  41a240:	mov    rcx,QWORD PTR [rax]
  41a243:	call   0x401ce0
  41a248:	mov    rax,QWORD PTR [rip+0x2f9c1]        # 0x449c10
  41a24f:	mov    edx,0x1
  41a254:	mov    rcx,QWORD PTR [rax]
  41a257:	call   0x41fbf0
  41a25c:	nop
  41a25d:	add    rsp,0x30
  41a261:	pop    rbx
  41a262:	jmp    0x403fa0
  41a267:	nop    WORD PTR [rax+rax*1+0x0]
  41a270:	mov    rcx,rbx
  41a273:	mov    DWORD PTR [rsp+0x2c],edx
  41a277:	call   0x4204c0
  41a27c:	mov    r8d,DWORD PTR [rbx+0x28]
  41a280:	mov    edx,DWORD PTR [rsp+0x2c]
  41a284:	mov    ecx,DWORD PTR [rbx+0x14]
  41a287:	sub    eax,r8d
  41a28a:	test   edx,edx
  41a28c:	js     0x41a2c0
  41a28e:	lea    r9d,[rcx-0x1]
  41a292:	cmp    ecx,edx
  41a294:	cmovle edx,r9d
  41a298:	cmp    edx,eax
  41a29a:	je     0x41a2b0
  41a29c:	sub    eax,edx
  41a29e:	mov    rcx,rbx
  41a2a1:	lea    edx,[r8+rax*1]
  41a2a5:	add    rsp,0x30
  41a2a9:	pop    rbx
  41a2aa:	jmp    0x420550
  41a2af:	nop
  41a2b0:	add    rsp,0x30
  41a2b4:	pop    rbx
  41a2b5:	ret    
  41a2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a2c0:	add    edx,ecx
  41a2c2:	mov    r9d,0x0
  41a2c8:	cmovs  edx,r9d
  41a2cc:	jmp    0x41a28e
  41a2ce:	xchg   ax,ax
  41a2d0:	cmp    QWORD PTR [rcx],0x0
  41a2d4:	je     0x41a2e0
  41a2d6:	jmp    0x416dd0
  41a2db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2e0:	cmp    QWORD PTR [rcx+0x8],0x0
  41a2e5:	jne    0x41a2d6
  41a2e7:	mov    DWORD PTR [rip+0x37627],0x1        # 0x451918
  41a2f1:	ret    
  41a2f2:	nop    DWORD PTR [rax+0x0]
  41a2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a300:	mov    DWORD PTR [rip+0x3735a],0x0        # 0x451664
  41a30a:	mov    DWORD PTR [rip+0x375f4],0x0        # 0x451908
  41a314:	ret    
  41a315:	nop
  41a316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a320:	push   rbx
  41a321:	sub    rsp,0x20
  41a325:	movsxd r8,DWORD PTR [rip+0x37338]        # 0x451664
  41a32c:	mov    edx,DWORD PTR [rip+0x3732e]        # 0x451660
  41a332:	mov    ebx,ecx
  41a334:	lea    eax,[r8+0x2]
  41a338:	cmp    eax,edx
  41a33a:	jge    0x41a360
  41a33c:	mov    rax,QWORD PTR [rip+0x37325]        # 0x451668
  41a343:	lea    edx,[r8+0x1]
  41a347:	mov    DWORD PTR [rax+r8*4],ebx
  41a34b:	mov    DWORD PTR [rax+r8*4+0x4],0x0
  41a354:	mov    DWORD PTR [rip+0x3730a],edx        # 0x451664
  41a35a:	add    rsp,0x20
  41a35e:	pop    rbx
  41a35f:	ret    
  41a360:	add    edx,0xa
  41a363:	mov    rcx,QWORD PTR [rip+0x372fe]        # 0x451668
  41a36a:	mov    DWORD PTR [rip+0x372f0],edx        # 0x451660
  41a370:	movsxd rdx,edx
  41a373:	shl    rdx,0x2
  41a377:	call   0x422820
  41a37c:	movsxd r8,DWORD PTR [rip+0x372e1]        # 0x451664
  41a383:	mov    QWORD PTR [rip+0x372de],rax        # 0x451668
  41a38a:	jmp    0x41a343
  41a38c:	nop    DWORD PTR [rax+0x0]
  41a390:	sub    rsp,0x28
  41a394:	mov    eax,DWORD PTR [rip+0x3756e]        # 0x451908
  41a39a:	test   eax,eax
  41a39c:	je     0x41a3b2
  41a39e:	mov    ecx,0x1
  41a3a3:	call   0x413aa0
  41a3a8:	nop
  41a3a9:	add    rsp,0x28
  41a3ad:	jmp    0x4140d0
  41a3b2:	xor    ecx,ecx
  41a3b4:	call   0x413fa0
  41a3b9:	mov    eax,DWORD PTR [rip+0x37545]        # 0x451904
  41a3bf:	cmp    DWORD PTR [rip+0x3753b],eax        # 0x451900
  41a3c5:	je     0x41a39e
  41a3c7:	add    rsp,0x28
  41a3cb:	jmp    0x4140d0
  41a3d0:	push   r15
  41a3d2:	push   r14
  41a3d4:	push   r13
  41a3d6:	push   r12
  41a3d8:	push   rbp
  41a3d9:	push   rdi
  41a3da:	push   rsi
  41a3db:	push   rbx
  41a3dc:	sub    rsp,0x38
  41a3e0:	mov    rax,QWORD PTR [rip+0x2f4d9]        # 0x4498c0
  41a3e7:	lea    rsi,[rip+0x37256]        # 0x451644
  41a3ee:	mov    DWORD PTR [rip+0x3726c],0x0        # 0x451664
  41a3f8:	mov    r14,rcx
  41a3fb:	mov    DWORD PTR [rsp+0x88],edx
  41a402:	mov    edi,r8d
  41a405:	mov    DWORD PTR [rsp+0x98],r9d
  41a40d:	mov    DWORD PTR [rip+0x374f1],0x0        # 0x451908
  41a417:	mov    eax,DWORD PTR [rax]
  41a419:	test   eax,eax
  41a41b:	lea    rax,[rip+0x3721e]        # 0x451640
  41a422:	cmovne rsi,rax
  41a426:	mov    DWORD PTR [rsi],0x0
  41a42c:	call   0x4140d0
  41a431:	cmp    eax,0x10e
  41a436:	mov    r15d,eax
  41a439:	je     0x41a783
  41a43f:	mov    eax,DWORD PTR [rsp+0x98]
  41a446:	test   eax,eax
  41a448:	je     0x41a468
  41a44a:	lea    eax,[r15-0x20]
  41a44e:	cmp    eax,0x5f
  41a451:	jbe    0x41a752
  41a457:	mov    rax,QWORD PTR [rip+0x2f1c2]        # 0x449620
  41a45e:	mov    eax,DWORD PTR [rax]
  41a460:	test   eax,eax
  41a462:	jne    0x41a745
  41a468:	mov    ecx,r15d
  41a46b:	mov    edi,0x1
  41a470:	xor    ebx,ebx
  41a472:	call   0x41a320
  41a477:	mov    rax,QWORD PTR [rip+0x3a712]        # 0x454b90
  41a47e:	mov    r12,QWORD PTR [rip+0x2f36b]        # 0x4497f0
  41a485:	mov    rbp,QWORD PTR [rip+0x2f754]        # 0x449be0
  41a48c:	mov    r13,QWORD PTR [rip+0x2f3ad]        # 0x449840
  41a493:	mov    DWORD PTR [rsp+0x24],0x1
  41a49b:	mov    QWORD PTR [rsp+0x28],rax
  41a4a0:	mov    eax,DWORD PTR [r13+0x0]
  41a4a4:	test   eax,eax
  41a4a6:	jne    0x41a563
  41a4ac:	nop    DWORD PTR [rax+0x0]
  41a4b0:	mov    rcx,QWORD PTR [r12]
  41a4b4:	cmp    rcx,QWORD PTR [rbp+0x0]
  41a4b8:	je     0x41a4bf
  41a4ba:	call   0x4045a0
  41a4bf:	test   ebx,ebx
  41a4c1:	je     0x41a590
  41a4c7:	lea    eax,[r15-0x10f]
  41a4ce:	cmp    r15d,0x10f
  41a4d5:	cmovl  eax,r15d
  41a4d9:	cmp    eax,0x2d
  41a4dc:	je     0x41a6e0
  41a4e2:	sub    eax,0x30
  41a4e5:	cmp    eax,0x9
  41a4e8:	ja     0x41a590
  41a4ee:	xor    edx,edx
  41a4f0:	mov    ecx,0x1
  41a4f5:	lea    eax,[r15-0x10f]
  41a4fc:	cmp    r15d,0x110
  41a503:	cmovge r15d,eax
  41a507:	cmp    r15d,0x2d
  41a50b:	je     0x41a690
  41a511:	test   dl,dl
  41a513:	jne    0x41a690
  41a519:	test   ecx,ecx
  41a51b:	je     0x41a6b4
  41a521:	mov    eax,DWORD PTR [rsi]
  41a523:	sub    r15d,0x30
  41a527:	test   eax,eax
  41a529:	je     0x41a6d1
  41a52f:	lea    eax,[rdi+rdi*4]
  41a532:	lea    edi,[r15+rax*2]
  41a536:	mov    DWORD PTR [rsi],0x1
  41a53c:	mov    ebx,0x1
  41a541:	call   0x41a390
  41a546:	cmp    eax,0x10e
  41a54b:	je     0x41a541
  41a54d:	mov    ecx,eax
  41a54f:	mov    r15d,eax
  41a552:	call   0x41a320
  41a557:	mov    eax,DWORD PTR [r13+0x0]
  41a55b:	test   eax,eax
  41a55d:	je     0x41a4b0
  41a563:	xor    ecx,ecx
  41a565:	call   0x413fa0
  41a56a:	mov    eax,DWORD PTR [rip+0x37394]        # 0x451904
  41a570:	cmp    DWORD PTR [rip+0x3738a],eax        # 0x451900
  41a576:	jne    0x41a4b0
  41a57c:	call   0x403fa0
  41a581:	jmp    0x41a4b0
  41a586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a590:	movsxd rax,r15d
  41a593:	shl    rax,0x4
  41a597:	add    rax,r14
  41a59a:	movzx  edx,BYTE PTR [rax]
  41a59d:	test   dl,dl
  41a59f:	jne    0x41a650
  41a5a5:	mov    rax,QWORD PTR [rax+0x8]
  41a5a9:	test   rax,rax
  41a5ac:	je     0x41a770
  41a5b2:	mov    rbx,QWORD PTR [rax]
  41a5b5:	test   rbx,rbx
  41a5b8:	je     0x41a770
  41a5be:	lea    rax,[rip+0xffffffffffff8d3b]        # 0x413300
  41a5c5:	cmp    rbx,rax
  41a5c8:	je     0x41a6ec
  41a5ce:	lea    rax,[rip+0xffffffffffff8d1b]        # 0x4132f0
  41a5d5:	cmp    rbx,rax
  41a5d8:	je     0x41a6f5
  41a5de:	lea    rax,[rip+0xffffffffffff8d2b]        # 0x413310
  41a5e5:	cmp    rbx,rax
  41a5e8:	je     0x41a720
  41a5ee:	mov    r10d,DWORD PTR [rsp+0x88]
  41a5f6:	test   r10d,r10d
  41a5f9:	je     0x41a7e7
  41a5ff:	lea    rax,[rip+0xffffffffffff8caa]        # 0x4132b0
  41a606:	cmp    rbx,rax
  41a609:	jne    0x41a7e7
  41a60f:	lea    eax,[r15-0x10f]
  41a616:	cmp    r15d,0x110
  41a61d:	cmovge r15d,eax
  41a621:	xor    ebx,ebx
  41a623:	call   0x421060
  41a628:	mov    rcx,QWORD PTR [r12]
  41a62c:	mov    edx,r15d
  41a62f:	call   0x4184c0
  41a634:	mov    rax,rbx
  41a637:	add    rsp,0x38
  41a63b:	pop    rbx
  41a63c:	pop    rsi
  41a63d:	pop    rdi
  41a63e:	pop    rbp
  41a63f:	pop    r12
  41a641:	pop    r13
  41a643:	pop    r14
  41a645:	pop    r15
  41a647:	ret    
  41a648:	nop    DWORD PTR [rax+rax*1+0x0]
  41a650:	cmp    dl,0x1
  41a653:	je     0x41a660
  41a655:	xor    ebx,ebx
  41a657:	jmp    0x41a541
  41a65c:	nop    DWORD PTR [rax+0x0]
  41a660:	mov    r14,QWORD PTR [rax+0x8]
  41a664:	test   r14,r14
  41a667:	je     0x41a770
  41a66d:	mov    edx,DWORD PTR [rip+0x37295]        # 0x451908
  41a673:	xor    ebx,ebx
  41a675:	test   edx,edx
  41a677:	je     0x41a541
  41a67d:	mov    ecx,0x1
  41a682:	call   0x413aa0
  41a687:	jmp    0x41a541
  41a68c:	nop    DWORD PTR [rax+0x0]
  41a690:	mov    eax,DWORD PTR [rsi]
  41a692:	mov    ebx,0x1
  41a697:	test   eax,eax
  41a699:	mov    eax,0xffffffff
  41a69e:	cmovne eax,DWORD PTR [rsp+0x24]
  41a6a3:	mov    DWORD PTR [rsp+0x24],eax
  41a6a7:	mov    eax,0x1
  41a6ac:	cmove  edi,eax
  41a6af:	jmp    0x41a541
  41a6b4:	sub    r15d,0x30
  41a6b8:	mov    ebx,0x1
  41a6bd:	cmp    r15d,0x9
  41a6c1:	ja     0x41a541
  41a6c7:	mov    eax,DWORD PTR [rsi]
  41a6c9:	test   eax,eax
  41a6cb:	jne    0x41a52f
  41a6d1:	mov    edi,r15d
  41a6d4:	jmp    0x41a536
  41a6d9:	nop    DWORD PTR [rax+0x0]
  41a6e0:	mov    edx,0x1
  41a6e5:	xor    ecx,ecx
  41a6e7:	jmp    0x41a4f5
  41a6ec:	xor    edx,edx
  41a6ee:	xor    ecx,ecx
  41a6f0:	jmp    0x41a4f5
  41a6f5:	cmp    r15d,0x10e
  41a6fc:	jle    0x41a73a
  41a6fe:	lea    ecx,[r15-0x10f]
  41a705:	mov    rax,QWORD PTR [rsp+0x28]
  41a70a:	call   rax
  41a70c:	add    eax,0x10f
  41a711:	cmp    eax,r15d
  41a714:	je     0x41a770
  41a716:	mov    r15d,eax
  41a719:	xor    ebx,ebx
  41a71b:	jmp    0x41a4a0
  41a720:	mov    r15d,DWORD PTR [rsi]
  41a723:	lea    eax,[rdi*4+0x0]
  41a72a:	mov    ebx,0x1
  41a72f:	test   r15d,r15d
  41a732:	cmove  edi,eax
  41a735:	jmp    0x41a541
  41a73a:	mov    ecx,r15d
  41a73d:	call   QWORD PTR [rip+0x3a44d]        # 0x454b90
  41a743:	jmp    0x41a711
  41a745:	lea    eax,[r15-0x80]
  41a749:	cmp    eax,0x7f
  41a74c:	ja     0x41a468
  41a752:	mov    rax,QWORD PTR [rip+0x2f487]        # 0x449be0
  41a759:	mov    r8d,r15d
  41a75c:	mov    edx,0x1
  41a761:	xor    ebx,ebx
  41a763:	mov    rcx,QWORD PTR [rax]
  41a766:	call   0x405d90
  41a76b:	jmp    0x41a634
  41a770:	mov    rcx,QWORD PTR [rip+0x36ef1]        # 0x451668
  41a777:	xor    ebx,ebx
  41a779:	call   0x4147f0
  41a77e:	jmp    0x41a634
  41a783:	xor    ebx,ebx
  41a785:	test   edi,edi
  41a787:	je     0x41a634
  41a78d:	movzx  eax,BYTE PTR [rip+0x39111]        # 0x4538a5
  41a794:	test   al,0x40
  41a796:	je     0x41a634
  41a79c:	and    eax,0x3
  41a79f:	je     0x41a7c8
  41a7a1:	cmp    al,0x1
  41a7a3:	jne    0x41a634
  41a7a9:	mov    rax,QWORD PTR [rip+0x2f040]        # 0x4497f0
  41a7b0:	mov    r8d,0x1
  41a7b6:	mov    edx,0x3
  41a7bb:	mov    rcx,QWORD PTR [rax]
  41a7be:	call   0x417bf0
  41a7c3:	jmp    0x41a634
  41a7c8:	mov    rax,QWORD PTR [rip+0x2f021]        # 0x4497f0
  41a7cf:	mov    r8d,0x1
  41a7d5:	mov    edx,0x3
  41a7da:	mov    rcx,QWORD PTR [rax]
  41a7dd:	call   0x417b60
  41a7e2:	jmp    0x41a634
  41a7e7:	mov    eax,DWORD PTR [rsp+0x98]
  41a7ee:	test   eax,eax
  41a7f0:	jne    0x41a850
  41a7f2:	mov    rax,QWORD PTR [rip+0x2f0c7]        # 0x4498c0
  41a7f9:	mov    r9d,DWORD PTR [rax]
  41a7fc:	test   r9d,r9d
  41a7ff:	jne    0x41a814
  41a801:	mov    r8d,DWORD PTR [rip+0x37100]        # 0x451908
  41a808:	test   r8d,r8d
  41a80b:	je     0x41a814
  41a80d:	xor    ecx,ecx
  41a80f:	call   0x413aa0
  41a814:	cmp    QWORD PTR [rsp+0xa0],0x0
  41a81d:	je     0x41a899
  41a81f:	imul   edi,DWORD PTR [rsp+0x24]
  41a824:	mov    rax,QWORD PTR [rsp+0xa0]
  41a82c:	mov    DWORD PTR [rax],edi
  41a82e:	cmp    edi,0x1
  41a831:	je     0x41a634
  41a837:	mov    ecx,DWORD PTR [rsi]
  41a839:	test   ecx,ecx
  41a83b:	jne    0x41a634
  41a841:	mov    DWORD PTR [rsi],0x1
  41a847:	jmp    0x41a634
  41a84c:	nop    DWORD PTR [rax+0x0]
  41a850:	lea    rax,[rip+0xfffffffffffebd99]        # 0x4065f0
  41a857:	cmp    rbx,rax
  41a85a:	je     0x41a874
  41a85c:	lea    rax,[rip+0xfffffffffffec0ed]        # 0x406950
  41a863:	cmp    rbx,rax
  41a866:	je     0x41a874
  41a868:	test   rbx,rbx
  41a86b:	jne    0x41a7f2
  41a86d:	xor    ebx,ebx
  41a86f:	jmp    0x41a541
  41a874:	mov    rax,QWORD PTR [rip+0x2f035]        # 0x4498b0
  41a87b:	cmp    QWORD PTR [rax],0x0
  41a87f:	jne    0x41a868
  41a881:	mov    rcx,QWORD PTR [rbp+0x0]
  41a885:	mov    r8d,r15d
  41a888:	mov    edx,0x1
  41a88d:	xor    ebx,ebx
  41a88f:	call   0x405d90
  41a894:	jmp    0x41a634
  41a899:	mov    edi,DWORD PTR ds:0x0
  41a8a0:	jmp    0x41a82e
  41a8a2:	nop    DWORD PTR [rax+0x0]
  41a8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8b0:	push   r14
  41a8b2:	push   r13
  41a8b4:	push   r12
  41a8b6:	push   rbp
  41a8b7:	push   rdi
  41a8b8:	push   rsi
  41a8b9:	push   rbx
  41a8ba:	sub    rsp,0x50
  41a8be:	mov    rsi,QWORD PTR [rip+0x2ef2b]        # 0x4497f0
  41a8c5:	mov    DWORD PTR [rip+0x37049],0x0        # 0x451918
  41a8cf:	xor    eax,eax
  41a8d1:	mov    r12,QWORD PTR [rip+0x2f038]        # 0x449910
  41a8d8:	mov    rbp,QWORD PTR [rip+0x2f071]        # 0x449950
  41a8df:	lea    rdi,[rsp+0x4c]
  41a8e4:	lea    r14,[rip+0xffffffffffffced5]        # 0x4177c0
  41a8eb:	mov    r13,rsi
  41a8ee:	jmp    0x41a91f
  41a8f0:	mov    rcx,QWORD PTR [rbx]
  41a8f3:	call   0x4045a0
  41a8f8:	mov    QWORD PTR [rsp+0x20],rdi
  41a8fd:	mov    rcx,QWORD PTR [rbp+0x0]
  41a901:	xor    r9d,r9d
  41a904:	mov    r8d,0x1
  41a90a:	mov    edx,0x1
  41a90f:	call   0x41a3d0
  41a914:	test   rax,rax
  41a917:	jne    0x41a970
  41a919:	mov    eax,DWORD PTR [rip+0x36ff9]        # 0x451918
  41a91f:	test   eax,eax
  41a921:	jne    0x41a960
  41a923:	xor    ecx,ecx
  41a925:	call   0x413fa0
  41a92a:	mov    eax,DWORD PTR [rip+0x36fd4]        # 0x451904
  41a930:	cmp    DWORD PTR [rip+0x36fca],eax        # 0x451900
  41a936:	je     0x41a951
  41a938:	mov    ecx,DWORD PTR [r12]
  41a93c:	mov    rbx,rsi
  41a93f:	test   ecx,ecx
  41a941:	je     0x41a8f0
  41a943:	mov    rcx,QWORD PTR [r13+0x0]
  41a947:	mov    rbx,r13
  41a94a:	call   0x403da0
  41a94f:	jmp    0x41a8f0
  41a951:	call   0x403fa0
  41a956:	jmp    0x41a938
  41a958:	nop    DWORD PTR [rax+rax*1+0x0]
  41a960:	add    rsp,0x50
  41a964:	pop    rbx
  41a965:	pop    rsi
  41a966:	pop    rdi
  41a967:	pop    rbp
  41a968:	pop    r12
  41a96a:	pop    r13
  41a96c:	pop    r14
  41a96e:	ret    
  41a96f:	nop
  41a970:	mov    edx,DWORD PTR [rip+0x36f92]        # 0x451908
  41a976:	test   edx,edx
  41a978:	je     0x41a9b1
  41a97a:	mov    QWORD PTR [rsp+0x38],rax
  41a97f:	mov    edx,DWORD PTR [rsp+0x4c]
  41a983:	mov    rcx,QWORD PTR [rbx]
  41a986:	call   rax
  41a988:	mov    rax,QWORD PTR [rsp+0x38]
  41a98d:	cmp    rax,r14
  41a990:	je     0x41a919
  41a992:	lea    rdx,[rip+0xffffffffffffcdc7]        # 0x417760
  41a999:	cmp    rax,rdx
  41a99c:	je     0x41a919
  41a9a2:	mov    rax,QWORD PTR [rbx]
  41a9a5:	mov    DWORD PTR [rax+0x1c],0xffffffff
  41a9ac:	jmp    0x41a919
  41a9b1:	mov    QWORD PTR [rsp+0x38],rax
  41a9b6:	call   0x421060
  41a9bb:	mov    rax,QWORD PTR [rsp+0x38]
  41a9c0:	jmp    0x41a97a
  41a9c2:	nop    DWORD PTR [rax+0x0]
  41a9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9d0:	push   r14
  41a9d2:	push   r13
  41a9d4:	push   r12
  41a9d6:	push   rbp
  41a9d7:	push   rdi
  41a9d8:	push   rsi
  41a9d9:	push   rbx
  41a9da:	sub    rsp,0x50
  41a9de:	mov    rsi,r8
  41a9e1:	mov    rbx,rcx
  41a9e4:	mov    rdi,rdx
  41a9e7:	call   0x414600
  41a9ec:	test   rsi,rsi
  41a9ef:	je     0x41ab50
  41a9f5:	mov    rcx,rsi
  41a9f8:	call   0x4148f0
  41a9fd:	test   rdi,rdi
  41aa00:	je     0x41ab81
  41aa06:	lea    rsi,[rsp+0x30]
  41aa0b:	mov    rcx,rsi
  41aa0e:	call   0x40a000
  41aa13:	lea    r8,[rip+0x2a331]        # 0x444d4b
  41aa1a:	lea    rdx,[rip+0x2a337]        # 0x444d58
  41aa21:	mov    r9,rdi
  41aa24:	mov    QWORD PTR [rsp+0x20],rdi
  41aa29:	mov    rcx,rsi
  41aa2c:	xor    edi,edi
  41aa2e:	call   0x40ba90
  41aa33:	lea    rdx,[rip+0x2a379]        # 0x444db3
  41aa3a:	mov    r8d,0xb
  41aa40:	mov    rcx,rsi
  41aa43:	call   0x40a1b0
  41aa48:	lea    rdx,[rip+0x2a370]        # 0x444dbf
  41aa4f:	mov    rcx,rsi
  41aa52:	call   0x40ba90
  41aa57:	mov    rax,QWORD PTR [rbx]
  41aa5a:	test   rax,rax
  41aa5d:	je     0x41aaaf
  41aa5f:	nop
  41aa60:	mov    r9,QWORD PTR [rax+0x8]
  41aa64:	add    edi,0x1
  41aa67:	lea    rdx,[rip+0x2a36e]        # 0x444ddc
  41aa6e:	mov    r8d,edi
  41aa71:	mov    rcx,rsi
  41aa74:	call   0x40ba90
  41aa79:	mov    rax,QWORD PTR [rbx]
  41aa7c:	mov    r8,QWORD PTR [rax+0x10]
  41aa80:	test   r8,r8
  41aa83:	je     0x41aa94
  41aa85:	lea    rdx,[rip+0x29b19]        # 0x4445a5
  41aa8c:	mov    rcx,rsi
  41aa8f:	call   0x40ba90
  41aa94:	lea    rdx,[rip+0x2a34d]        # 0x444de8
  41aa9b:	add    rbx,0x8
  41aa9f:	mov    rcx,rsi
  41aaa2:	call   0x40ba90
  41aaa7:	mov    rax,QWORD PTR [rbx]
  41aaaa:	test   rax,rax
  41aaad:	jne    0x41aa60
  41aaaf:	call   0x4119d0
  41aab4:	lea    rcx,[rip+0x29a8d]        # 0x444548
  41aabb:	mov    rbx,rax
  41aabe:	mov    QWORD PTR [rip+0x36e4b],rax        # 0x451910
  41aac5:	call   0x422a00
  41aaca:	mov    QWORD PTR [rbx],rax
  41aacd:	mov    rbx,QWORD PTR [rip+0x36e3c]        # 0x451910
  41aad4:	lea    rcx,[rip+0x2a2ef]        # 0x444dca
  41aadb:	call   0x422a00
  41aae0:	mov    rcx,QWORD PTR [rsp+0x30]
  41aae5:	mov    QWORD PTR [rbx+0x10],rax
  41aae9:	lea    rdx,[rip+0x29b5a]        # 0x44464a
  41aaf0:	mov    rbx,QWORD PTR [rip+0x36e19]        # 0x451910
  41aaf7:	mov    rax,QWORD PTR [rsp+0x40]
  41aafc:	mov    QWORD PTR [rbx+0x18],rcx
  41ab00:	mov    DWORD PTR [rbx+0x20],eax
  41ab03:	call   0x43a638
  41ab08:	xor    edx,edx
  41ab0a:	mov    DWORD PTR [rbx+0x28],eax
  41ab0d:	mov    rcx,rbx
  41ab10:	xor    r8d,r8d
  41ab13:	call   0x40a810
  41ab18:	mov    rax,QWORD PTR [rip+0x2ecd1]        # 0x4497f0
  41ab1f:	mov    rdx,QWORD PTR [rip+0x36dea]        # 0x451910
  41ab26:	mov    rcx,QWORD PTR [rax]
  41ab29:	call   0x415020
  41ab2e:	call   0x41a8b0
  41ab33:	call   0x413f60
  41ab38:	nop
  41ab39:	add    rsp,0x50
  41ab3d:	pop    rbx
  41ab3e:	pop    rsi
  41ab3f:	pop    rdi
  41ab40:	pop    rbp
  41ab41:	pop    r12
  41ab43:	pop    r13
  41ab45:	pop    r14
  41ab47:	ret    
  41ab48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ab50:	lea    rcx,[rip+0x2a191]        # 0x444ce8
  41ab57:	call   0x433f18
  41ab5c:	xor    edx,edx
  41ab5e:	mov    rcx,rax
  41ab61:	call   0x40c4d0
  41ab66:	lea    rdx,[rip+0x2a170]        # 0x444cdd
  41ab6d:	xor    r8d,r8d
  41ab70:	mov    rcx,rax
  41ab73:	call   0x4210d0
  41ab78:	test   rdi,rdi
  41ab7b:	jne    0x41aa06
  41ab81:	test   rbx,rbx
  41ab84:	je     0x41ac9c
  41ab8a:	mov    rdx,QWORD PTR [rbx]
  41ab8d:	test   rdx,rdx
  41ab90:	je     0x41ac9c
  41ab96:	mov    r12,QWORD PTR [rip+0x2ec53]        # 0x4497f0
  41ab9d:	xor    edi,edi
  41ab9f:	mov    r13,QWORD PTR [rip+0x2f06a]        # 0x449c10
  41aba6:	mov    rbp,r12
  41aba9:	jmp    0x41abd4
  41abab:	nop    DWORD PTR [rax+rax*1+0x0]
  41abb0:	mov    rsi,QWORD PTR [rbp+0x0]
  41abb4:	mov    r14,rbp
  41abb7:	mov    rcx,rsi
  41abba:	call   0x416f40
  41abbf:	cmp    QWORD PTR [rsi+0x20],0x0
  41abc4:	cmovne rdi,rsi
  41abc8:	add    rbx,0x8
  41abcc:	mov    rdx,QWORD PTR [rbx]
  41abcf:	test   rdx,rdx
  41abd2:	je     0x41ac36
  41abd4:	test   rdi,rdi
  41abd7:	je     0x41abb0
  41abd9:	mov    rax,QWORD PTR [r13+0x0]
  41abdd:	test   rax,rax
  41abe0:	je     0x41ac7c
  41abe6:	xor    r8d,r8d
  41abe9:	xor    ecx,ecx
  41abeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41abf0:	mov    edx,DWORD PTR [rax+0x14]
  41abf3:	cmp    edx,ecx
  41abf5:	jle    0x41abfc
  41abf7:	mov    ecx,edx
  41abf9:	mov    r8,rax
  41abfc:	mov    rax,QWORD PTR [rax]
  41abff:	test   rax,rax
  41ac02:	jne    0x41abf0
  41ac04:	test   r8,r8
  41ac07:	je     0x41ac7c
  41ac09:	mov    QWORD PTR [r12],r8
  41ac0d:	mov    r14,r12
  41ac10:	call   0x41f7b0
  41ac15:	mov    rdx,QWORD PTR [rbx]
  41ac18:	mov    rdi,rax
  41ac1b:	mov    rcx,rax
  41ac1e:	call   0x416f40
  41ac23:	cmp    QWORD PTR [rdi+0x20],0x0
  41ac28:	je     0x41ac54
  41ac2a:	mov    ecx,0x1
  41ac2f:	call   0x420690
  41ac34:	jmp    0x41abc8
  41ac36:	test   rdi,rdi
  41ac39:	jne    0x41ab2e
  41ac3f:	call   0x401ab0
  41ac44:	mov    rcx,QWORD PTR [r14]
  41ac47:	mov    rdx,rax
  41ac4a:	call   0x415020
  41ac4f:	jmp    0x41ab2e
  41ac54:	mov    rcx,rdi
  41ac57:	call   0x41fa60
  41ac5c:	call   0x403fa0
  41ac61:	mov    rax,QWORD PTR [rip+0x2ee98]        # 0x449b00
  41ac68:	lea    rcx,[rip+0x29936]        # 0x4445a5
  41ac6f:	mov    rdx,QWORD PTR [rax]
  41ac72:	call   0x4144d0
  41ac77:	jmp    0x41ab2e
  41ac7c:	call   0x403fa0
  41ac81:	mov    rax,QWORD PTR [rip+0x2ede8]        # 0x449a70
  41ac88:	lea    rcx,[rip+0x29916]        # 0x4445a5
  41ac8f:	mov    rdx,QWORD PTR [rax]
  41ac92:	call   0x4144d0
  41ac97:	jmp    0x41ab2e
  41ac9c:	mov    r14,QWORD PTR [rip+0x2eb4d]        # 0x4497f0
  41aca3:	jmp    0x41ac3f
  41aca5:	nop
  41aca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41acb0:	mov    rax,QWORD PTR [rip+0x2ec09]        # 0x4498c0
  41acb7:	mov    eax,DWORD PTR [rax]
  41acb9:	test   eax,eax
  41acbb:	je     0x41acd0
  41acbd:	mov    DWORD PTR [rip+0x36979],0x0        # 0x451640
  41acc7:	ret    
  41acc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acd0:	mov    DWORD PTR [rip+0x3696a],0x0        # 0x451644
  41acda:	ret    
  41acdb:	nop
  41acdc:	nop
  41acdd:	nop
  41acde:	nop
  41acdf:	nop
  41ace0:	sub    rsp,0x28
  41ace4:	lea    rdx,[rip+0xe5]        # 0x41add0
  41aceb:	mov    ecx,0x2
  41acf0:	call   0x43a660
  41acf5:	lea    rdx,[rip+0xd4]        # 0x41add0
  41acfc:	mov    ecx,0xf
  41ad01:	mov    QWORD PTR [rip+0x36c40],rax        # 0x451948
  41ad08:	call   0x43a660
  41ad0d:	mov    QWORD PTR [rip+0x36c2c],rax        # 0x451940
  41ad14:	add    rsp,0x28
  41ad18:	ret    
  41ad19:	nop    DWORD PTR [rax+0x0]
  41ad20:	push   rbx
  41ad21:	sub    rsp,0x20
  41ad25:	call   0x41c510
  41ad2a:	mov    rax,QWORD PTR [rip+0x2ee9f]        # 0x449bd0
  41ad31:	mov    rcx,QWORD PTR [rax]
  41ad34:	call   0x401ce0
  41ad39:	mov    rax,QWORD PTR [rip+0x2eac0]        # 0x449800
  41ad40:	mov    rbx,QWORD PTR [rip+0x2eaa9]        # 0x4497f0
  41ad47:	mov    eax,DWORD PTR [rax]
  41ad49:	test   eax,eax
  41ad4b:	je     0x41ad55
  41ad4d:	mov    rcx,QWORD PTR [rbx]
  41ad50:	call   0x407650
  41ad55:	mov    rax,QWORD PTR [rip+0x2eeb4]        # 0x449c10
  41ad5c:	mov    edx,0x1
  41ad61:	mov    rcx,QWORD PTR [rax]
  41ad64:	call   0x41fbf0
  41ad69:	call   0x403fa0
  41ad6e:	mov    rcx,QWORD PTR [rbx]
  41ad71:	call   0x4045a0
  41ad76:	call   QWORD PTR [rip+0x39b74]        # 0x4548f0
  41ad7c:	lea    rcx,[rax+0x30]
  41ad80:	add    rsp,0x20
  41ad84:	pop    rbx
  41ad85:	jmp    0x43a780
  41ad8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ad90:	push   rsi
  41ad91:	push   rbx
  41ad92:	sub    rsp,0x28
  41ad96:	call   0x41cb70
  41ad9b:	mov    rsi,QWORD PTR [rip+0x2edbe]        # 0x449b60
  41ada2:	mov    rbx,QWORD PTR [rip+0x2edc7]        # 0x449b70
  41ada9:	mov    edx,DWORD PTR [rsi]
  41adab:	mov    ecx,DWORD PTR [rbx]
  41adad:	call   0x401d30
  41adb2:	mov    edx,DWORD PTR [rsi]
  41adb4:	mov    ecx,DWORD PTR [rbx]
  41adb6:	call   0x420770
  41adbb:	nop
  41adbc:	add    rsp,0x28
  41adc0:	pop    rbx
  41adc1:	pop    rsi
  41adc2:	jmp    0x41ad20
  41adc7:	nop    WORD PTR [rax+rax*1+0x0]
  41add0:	push   rsi
  41add1:	push   rbx
  41add2:	sub    rsp,0x28
  41add6:	mov    eax,DWORD PTR [rip+0x36b74]        # 0x451950
  41addc:	test   eax,eax
  41adde:	jne    0x41ae01
  41ade0:	cmp    ecx,0x2
  41ade3:	mov    DWORD PTR [rip+0x36b63],0x1        # 0x451950
  41aded:	je     0x41ae10
  41adef:	cmp    ecx,0xf
  41adf2:	lea    rsi,[rip+0x36b47]        # 0x451940
  41adf9:	je     0x41ae17
  41adfb:	mov    DWORD PTR [rip+0x36b4f],eax        # 0x451950
  41ae01:	add    rsp,0x28
  41ae05:	pop    rbx
  41ae06:	pop    rsi
  41ae07:	ret    
  41ae08:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae10:	lea    rsi,[rip+0x36b31]        # 0x451948
  41ae17:	mov    rax,QWORD PTR [rip+0x2ed42]        # 0x449b60
  41ae1e:	mov    ebx,ecx
  41ae20:	xor    ecx,ecx
  41ae22:	mov    edx,DWORD PTR [rax]
  41ae24:	sub    edx,0x1
  41ae27:	call   0x41c2f0
  41ae2c:	call   0x41c4d0
  41ae31:	call   QWORD PTR [rip+0x39ab9]        # 0x4548f0
  41ae37:	lea    rcx,[rax+0x30]
  41ae3b:	call   0x43a780
  41ae40:	call   0x41d520
  41ae45:	mov    rdx,QWORD PTR [rsi]
  41ae48:	mov    ecx,ebx
  41ae4a:	call   0x43a660
  41ae4f:	call   0x43a588
  41ae54:	mov    edx,ebx
  41ae56:	movsxd rcx,eax
  41ae59:	call   0x41e190
  41ae5e:	call   0x41d3e0
  41ae63:	lea    rdx,[rip+0xffffffffffffff66]        # 0x41add0
  41ae6a:	mov    ecx,ebx
  41ae6c:	call   0x43a660
  41ae71:	mov    QWORD PTR [rsi],rax
  41ae74:	call   0x41ad90
  41ae79:	mov    eax,DWORD PTR [rip+0x36ad1]        # 0x451950
  41ae7f:	sub    eax,0x1
  41ae82:	jmp    0x41adfb
  41ae87:	nop    WORD PTR [rax+rax*1+0x0]
  41ae90:	ret    
  41ae91:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aea0:	ret    
  41aea1:	nop
  41aea2:	nop
  41aea3:	nop
  41aea4:	nop
  41aea5:	nop
  41aea6:	nop
  41aea7:	nop
  41aea8:	nop
  41aea9:	nop
  41aeaa:	nop
  41aeab:	nop
  41aeac:	nop
  41aead:	nop
  41aeae:	nop
  41aeaf:	nop
  41aeb0:	push   rdi
  41aeb1:	push   rsi
  41aeb2:	push   rbx
  41aeb3:	sub    rsp,0x20
  41aeb7:	mov    rsi,rcx
  41aeba:	mov    ecx,0x18
  41aebf:	mov    rdi,rdx
  41aec2:	call   0x4227b0
  41aec7:	xor    edx,edx
  41aec9:	mov    rcx,rsi
  41aecc:	mov    QWORD PTR [rax],0x0
  41aed3:	mov    rbx,rax
  41aed6:	call   0x40ba70
  41aedb:	mov    rcx,QWORD PTR [rsi]
  41aede:	cmp    QWORD PTR [rdi],rcx
  41aee1:	je     0x41aee6
  41aee3:	mov    QWORD PTR [rdi],rcx
  41aee6:	call   0x422a00
  41aeeb:	mov    rdi,QWORD PTR [rdi]
  41aeee:	mov    QWORD PTR [rbx+0x8],rax
  41aef2:	mov    rcx,rdi
  41aef5:	call   0x43a620
  41aefa:	lea    rcx,[rdi+rax*1+0x1]
  41aeff:	call   0x422a00
  41af04:	mov    QWORD PTR [rbx+0x10],rax
  41af08:	mov    rax,rbx
  41af0b:	mov    QWORD PTR [rsi+0x10],0x0
  41af13:	add    rsp,0x20
  41af17:	pop    rbx
  41af18:	pop    rsi
  41af19:	pop    rdi
  41af1a:	ret    
  41af1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41af20:	push   r15
  41af22:	push   r14
  41af24:	push   r13
  41af26:	push   r12
  41af28:	push   rbp
  41af29:	push   rdi
  41af2a:	push   rsi
  41af2b:	push   rbx
  41af2c:	sub    rsp,0xc8
  41af33:	lea    rbp,[rsp+0x50]
  41af38:	mov    rbx,rcx
  41af3b:	mov    r13,rdx
  41af3e:	mov    rcx,rbp
  41af41:	call   0x40a000
  41af46:	mov    rcx,rbx
  41af49:	mov    QWORD PTR [rsp+0x88],rbx
  41af51:	call   0x43a620
  41af56:	add    rax,rbx
  41af59:	mov    BYTE PTR [rsp+0x78],0x0
  41af5e:	mov    DWORD PTR [rsp+0x7c],0x0
  41af66:	cmp    rbx,rax
  41af69:	mov    QWORD PTR [rsp+0x70],rax
  41af6e:	mov    BYTE PTR [rsp+0x80],0x0
  41af76:	jae    0x41b5c8
  41af7c:	mov    r14,QWORD PTR [rip+0x2ea3d]        # 0x4499c0
  41af83:	lea    r12,[rsp+0x70]
  41af88:	lea    rax,[rsp+0x48]
  41af8d:	mov    rcx,rbx
  41af90:	xor    edi,edi
  41af92:	xor    ebx,ebx
  41af94:	xor    esi,esi
  41af96:	lea    r15,[r12+0xc]
  41af9b:	mov    QWORD PTR [rsp+0x20],rax
  41afa0:	mov    QWORD PTR [rsp+0x28],r14
  41afa5:	jmp    0x41b087
  41afaa:	nop    WORD PTR [rax+rax*1+0x0]
  41afb0:	movzx  eax,BYTE PTR [rcx]
  41afb3:	mov    edx,eax
  41afb5:	and    eax,0x1f
  41afb8:	shr    dl,0x5
  41afbb:	and    edx,0x7
  41afbe:	mov    edx,DWORD PTR [r14+rdx*4]
  41afc2:	bt     edx,eax
  41afc5:	jae    0x41b1c0
  41afcb:	mov    QWORD PTR [rsp+0x90],0x1
  41afd7:	movsx  ax,BYTE PTR [rcx]
  41afdb:	mov    BYTE PTR [rsp+0x98],0x1
  41afe3:	mov    BYTE PTR [rsp+0x80],0x1
  41afeb:	mov    WORD PTR [rsp+0x9a],ax
  41aff3:	movzx  ecx,WORD PTR [rsp+0x9a]
  41affb:	mov    edx,0x8
  41b000:	call   0x43a6e0
  41b005:	test   eax,eax
  41b007:	je     0x41b131
  41b00d:	cmp    esi,0x1
  41b010:	je     0x41b190
  41b016:	cmp    esi,0x3
  41b019:	je     0x41b059
  41b01b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b020:	mov    r8,QWORD PTR [rsp+0x90]
  41b028:	mov    rax,QWORD PTR [rsp+0x88]
  41b030:	test   edi,edi
  41b032:	mov    rdx,r8
  41b035:	mov    rcx,rax
  41b038:	je     0x41b152
  41b03e:	cmp    esi,0x2
  41b041:	jne    0x41b152
  41b047:	xor    edi,edi
  41b049:	mov    esi,0x2
  41b04e:	mov    rdx,rax
  41b051:	mov    rcx,rbp
  41b054:	call   0x40a1b0
  41b059:	mov    rdx,QWORD PTR [rsp+0x88]
  41b061:	mov    rcx,QWORD PTR [rsp+0x90]
  41b069:	add    rcx,rdx
  41b06c:	cmp    QWORD PTR [rsp+0x70],rcx
  41b071:	mov    BYTE PTR [rsp+0x80],0x0
  41b079:	mov    QWORD PTR [rsp+0x88],rcx
  41b081:	jbe    0x41b1e0
  41b087:	cmp    BYTE PTR [rsp+0x78],0x0
  41b08c:	je     0x41afb0
  41b092:	mov    rdx,QWORD PTR [rsp+0x88]
  41b09a:	mov    r8,QWORD PTR [rsp+0x70]
  41b09f:	lea    rcx,[r12+0x2a]
  41b0a4:	lea    r9,[r12+0xc]
  41b0a9:	sub    r8,rdx
  41b0ac:	call   0x423f00
  41b0b1:	cmp    rax,0xffffffffffffffff
  41b0b5:	mov    QWORD PTR [rsp+0x90],rax
  41b0bd:	je     0x41b280
  41b0c3:	cmp    rax,0xfffffffffffffffe
  41b0c7:	je     0x41b2a1
  41b0cd:	test   rax,rax
  41b0d0:	jne    0x41b0fe
  41b0d2:	mov    rax,QWORD PTR [rsp+0x88]
  41b0da:	mov    QWORD PTR [rsp+0x90],0x1
  41b0e6:	cmp    BYTE PTR [rax],0x0
  41b0e9:	jne    0x41b3c0
  41b0ef:	cmp    WORD PTR [rsp+0x9a],0x0
  41b0f8:	jne    0x41b3a0
  41b0fe:	lea    rcx,[r12+0xc]
  41b103:	mov    BYTE PTR [rsp+0x98],0x1
  41b10b:	call   0x424040
  41b110:	test   eax,eax
  41b112:	je     0x41b119
  41b114:	mov    BYTE PTR [rsp+0x78],0x0
  41b119:	movzx  eax,BYTE PTR [rsp+0x98]
  41b121:	mov    BYTE PTR [rsp+0x80],0x1
  41b129:	test   al,al
  41b12b:	jne    0x41aff3
  41b131:	cmp    esi,0x3
  41b134:	jne    0x41b020
  41b13a:	mov    rdx,QWORD PTR [rsp+0x90]
  41b142:	mov    rcx,QWORD PTR [rsp+0x88]
  41b14a:	xor    esi,esi
  41b14c:	mov    r8,rdx
  41b14f:	mov    rax,rcx
  41b152:	cmp    rdx,0x1
  41b156:	jne    0x41b04e
  41b15c:	movzx  edx,BYTE PTR [rcx]
  41b15f:	cmp    dl,0x3d
  41b162:	je     0x41b2e0
  41b168:	cmp    dl,0x5c
  41b16b:	je     0x41b2c0
  41b171:	cmp    dl,0x22
  41b174:	jne    0x41b04e
  41b17a:	cmp    esi,0x1
  41b17d:	je     0x41b3f0
  41b183:	cmp    esi,0x2
  41b186:	jne    0x41b04e
  41b18c:	nop    DWORD PTR [rax+0x0]
  41b190:	mov    rdx,QWORD PTR [rsp+0x20]
  41b195:	mov    rcx,rbp
  41b198:	mov    sil,0x3
  41b19b:	call   0x41aeb0
  41b1a0:	mov    rcx,QWORD PTR [rsp+0x90]
  41b1a8:	mov    QWORD PTR [rax],rbx
  41b1ab:	mov    rbx,rax
  41b1ae:	mov    rdx,QWORD PTR [rsp+0x88]
  41b1b6:	jmp    0x41b069
  41b1bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1c0:	mov    rcx,r15
  41b1c3:	call   0x424040
  41b1c8:	test   eax,eax
  41b1ca:	je     0x41b380
  41b1d0:	mov    BYTE PTR [rsp+0x78],0x1
  41b1d5:	jmp    0x41b092
  41b1da:	nop    WORD PTR [rax+rax*1+0x0]
  41b1e0:	test   rbx,rbx
  41b1e3:	je     0x41b5c8
  41b1e9:	mov    rax,rbx
  41b1ec:	lea    r10,[rip+0x29d0e]        # 0x444f01
  41b1f3:	mov    r9d,0x5
  41b1f9:	jmp    0x41b20c
  41b1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b200:	mov    rax,QWORD PTR [rax]
  41b203:	test   rax,rax
  41b206:	je     0x41b400
  41b20c:	mov    rsi,QWORD PTR [rax+0x8]
  41b210:	mov    rdi,r10
  41b213:	mov    rcx,r9
  41b216:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b218:	jne    0x41b200
  41b21a:	mov    rsi,QWORD PTR [rax+0x10]
  41b21e:	mov    rcx,rsi
  41b221:	call   0x43a620
  41b226:	mov    rcx,r13
  41b229:	mov    r8,rax
  41b22c:	mov    rdx,rsi
  41b22f:	call   0x40a1b0
  41b234:	mov    rcx,rbp
  41b237:	call   0x40a020
  41b23c:	nop    DWORD PTR [rax+0x0]
  41b240:	mov    rcx,QWORD PTR [rbx+0x8]
  41b244:	mov    rsi,QWORD PTR [rbx]
  41b247:	call   0x43a748
  41b24c:	mov    rcx,QWORD PTR [rbx+0x10]
  41b250:	call   0x43a748
  41b255:	mov    rcx,rbx
  41b258:	mov    rbx,rsi
  41b25b:	call   0x43a748
  41b260:	test   rsi,rsi
  41b263:	jne    0x41b240
  41b265:	xor    eax,eax
  41b267:	add    rsp,0xc8
  41b26e:	pop    rbx
  41b26f:	pop    rsi
  41b270:	pop    rdi
  41b271:	pop    rbp
  41b272:	pop    r12
  41b274:	pop    r13
  41b276:	pop    r14
  41b278:	pop    r15
  41b27a:	ret    
  41b27b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b280:	mov    QWORD PTR [rsp+0x90],0x1
  41b28c:	mov    BYTE PTR [rsp+0x98],0x0
  41b294:	mov    BYTE PTR [rsp+0x80],0x1
  41b29c:	jmp    0x41b131
  41b2a1:	mov    rax,QWORD PTR [rsp+0x70]
  41b2a6:	sub    rax,QWORD PTR [rsp+0x88]
  41b2ae:	mov    BYTE PTR [rsp+0x98],0x0
  41b2b6:	mov    QWORD PTR [rsp+0x90],rax
  41b2be:	jmp    0x41b294
  41b2c0:	cmp    esi,0x2
  41b2c3:	jne    0x41b04e
  41b2c9:	mov    rdx,rcx
  41b2cc:	mov    edi,0x1
  41b2d1:	mov    ecx,0x1
  41b2d6:	jmp    0x41b069
  41b2db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2e0:	test   esi,esi
  41b2e2:	jne    0x41b04e
  41b2e8:	xor    edx,edx
  41b2ea:	mov    rcx,rbp
  41b2ed:	mov    QWORD PTR [rsp+0x38],r8
  41b2f2:	mov    QWORD PTR [rsp+0x30],rax
  41b2f7:	call   0x40ba70
  41b2fc:	mov    rdx,QWORD PTR [rsp+0x50]
  41b301:	mov    r10,QWORD PTR [rsp+0x70]
  41b306:	mov    rax,QWORD PTR [rsp+0x30]
  41b30b:	mov    r8,QWORD PTR [rsp+0x38]
  41b310:	mov    QWORD PTR [rsp+0x48],rdx
  41b315:	mov    rdx,QWORD PTR [rsp+0x88]
  41b31d:	cmp    rdx,r10
  41b320:	jae    0x41b04e
  41b326:	cmp    BYTE PTR [rsp+0x80],0x0
  41b32e:	je     0x41b42d
  41b334:	mov    r8,QWORD PTR [rsp+0x90]
  41b33c:	lea    rax,[rdx+r8*1]
  41b340:	cmp    r8,0x1
  41b344:	mov    BYTE PTR [rsp+0x80],0x0
  41b34c:	mov    esi,0x1
  41b351:	mov    QWORD PTR [rsp+0x88],rax
  41b359:	jne    0x41b04e
  41b35f:	cmp    BYTE PTR [rax],0x22
  41b362:	jne    0x41b04e
  41b368:	mov    rdx,rax
  41b36b:	mov    ecx,0x1
  41b370:	mov    sil,0x2
  41b373:	jmp    0x41b069
  41b378:	nop    DWORD PTR [rax+rax*1+0x0]
  41b380:	lea    rdx,[rip+0x29ae9]        # 0x444e70
  41b387:	lea    rcx,[rip+0x29b33]        # 0x444ec1
  41b38e:	mov    r8d,0x8e
  41b394:	call   0x435a10
  41b399:	jmp    0x41b1d0
  41b39e:	xchg   ax,ax
  41b3a0:	lea    rdx,[rip+0x29ac9]        # 0x444e70
  41b3a7:	lea    rcx,[rip+0x29b41]        # 0x444eef
  41b3ae:	mov    r8d,0xaa
  41b3b4:	call   0x435a10
  41b3b9:	jmp    0x41b0fe
  41b3be:	xchg   ax,ax
  41b3c0:	lea    rdx,[rip+0x29aa9]        # 0x444e70
  41b3c7:	lea    rcx,[rip+0x29b0a]        # 0x444ed8
  41b3ce:	mov    r8d,0xa9
  41b3d4:	call   0x435a10
  41b3d9:	cmp    WORD PTR [rsp+0x9a],0x0
  41b3e2:	je     0x41b0fe
  41b3e8:	jmp    0x41b3a0
  41b3ea:	nop    WORD PTR [rax+rax*1+0x0]
  41b3f0:	mov    rdx,rcx
  41b3f3:	mov    sil,0x2
  41b3f6:	mov    ecx,0x1
  41b3fb:	jmp    0x41b069
  41b400:	mov    rax,rbx
  41b403:	lea    r10,[rip+0x29afc]        # 0x444f06
  41b40a:	mov    r9d,0x4
  41b410:	jmp    0x41b41a
  41b412:	mov    rax,QWORD PTR [rax]
  41b415:	test   rax,rax
  41b418:	je     0x41b47e
  41b41a:	mov    rsi,QWORD PTR [rax+0x8]
  41b41e:	mov    rdi,r10
  41b421:	mov    rcx,r9
  41b424:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b426:	jne    0x41b412
  41b428:	jmp    0x41b21a
  41b42d:	cmp    BYTE PTR [rsp+0x78],0x0
  41b432:	jne    0x41b4c2
  41b438:	movzx  eax,BYTE PTR [rdx]
  41b43b:	mov    rsi,QWORD PTR [rsp+0x28]
  41b440:	mov    ecx,eax
  41b442:	and    eax,0x1f
  41b445:	shr    cl,0x5
  41b448:	and    ecx,0x7
  41b44b:	mov    ecx,DWORD PTR [rsi+rcx*4]
  41b44e:	bt     ecx,eax
  41b451:	jae    0x41b48b
  41b453:	mov    QWORD PTR [rsp+0x90],0x1
  41b45f:	movsx  ax,BYTE PTR [rdx]
  41b463:	mov    r8d,0x1
  41b469:	mov    BYTE PTR [rsp+0x98],0x1
  41b471:	mov    WORD PTR [rsp+0x9a],ax
  41b479:	jmp    0x41b33c
  41b47e:	mov    rcx,rbp
  41b481:	call   0x40a020
  41b486:	jmp    0x41b240
  41b48b:	mov    rcx,r15
  41b48e:	call   0x424040
  41b493:	test   eax,eax
  41b495:	jne    0x41b4b0
  41b497:	lea    rdx,[rip+0x299d2]        # 0x444e70
  41b49e:	lea    rcx,[rip+0x29a1c]        # 0x444ec1
  41b4a5:	mov    r8d,0x8e
  41b4ab:	call   0x435a10
  41b4b0:	mov    r10,QWORD PTR [rsp+0x70]
  41b4b5:	mov    rdx,QWORD PTR [rsp+0x88]
  41b4bd:	mov    BYTE PTR [rsp+0x78],0x1
  41b4c2:	sub    r10,rdx
  41b4c5:	lea    rcx,[r12+0x2a]
  41b4ca:	lea    r9,[r12+0xc]
  41b4cf:	mov    r8,r10
  41b4d2:	call   0x423f00
  41b4d7:	cmp    rax,0xffffffffffffffff
  41b4db:	mov    QWORD PTR [rsp+0x90],rax
  41b4e3:	je     0x41b540
  41b4e5:	cmp    rax,0xfffffffffffffffe
  41b4e9:	je     0x41b567
  41b4eb:	test   rax,rax
  41b4ee:	jne    0x41b518
  41b4f0:	mov    rax,QWORD PTR [rsp+0x88]
  41b4f8:	mov    QWORD PTR [rsp+0x90],0x1
  41b504:	cmp    BYTE PTR [rax],0x0
  41b507:	jne    0x41b5aa
  41b50d:	cmp    WORD PTR [rsp+0x9a],0x0
  41b516:	jne    0x41b58c
  41b518:	lea    rcx,[r12+0xc]
  41b51d:	mov    BYTE PTR [rsp+0x98],0x1
  41b525:	call   0x424040
  41b52a:	test   eax,eax
  41b52c:	je     0x41b533
  41b52e:	mov    BYTE PTR [rsp+0x78],0x0
  41b533:	mov    rdx,QWORD PTR [rsp+0x88]
  41b53b:	jmp    0x41b334
  41b540:	mov    QWORD PTR [rsp+0x90],0x1
  41b54c:	mov    BYTE PTR [rsp+0x98],0x0
  41b554:	mov    r8d,0x1
  41b55a:	mov    rdx,QWORD PTR [rsp+0x88]
  41b562:	jmp    0x41b33c
  41b567:	mov    rdx,QWORD PTR [rsp+0x88]
  41b56f:	mov    r8,QWORD PTR [rsp+0x70]
  41b574:	mov    BYTE PTR [rsp+0x98],0x0
  41b57c:	sub    r8,rdx
  41b57f:	mov    QWORD PTR [rsp+0x90],r8
  41b587:	jmp    0x41b33c
  41b58c:	lea    rdx,[rip+0x298dd]        # 0x444e70
  41b593:	lea    rcx,[rip+0x29955]        # 0x444eef
  41b59a:	mov    r8d,0xaa
  41b5a0:	call   0x435a10
  41b5a5:	jmp    0x41b518
  41b5aa:	lea    rdx,[rip+0x298bf]        # 0x444e70
  41b5b1:	lea    rcx,[rip+0x29920]        # 0x444ed8
  41b5b8:	mov    r8d,0xa9
  41b5be:	call   0x435a10
  41b5c3:	jmp    0x41b50d
  41b5c8:	mov    rcx,rbp
  41b5cb:	call   0x40a020
  41b5d0:	jmp    0x41b265
  41b5d5:	nop
  41b5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5e0:	push   r15
  41b5e2:	push   r14
  41b5e4:	push   r13
  41b5e6:	push   r12
  41b5e8:	push   rbp
  41b5e9:	push   rdi
  41b5ea:	push   rsi
  41b5eb:	push   rbx
  41b5ec:	sub    rsp,0x28
  41b5f0:	mov    r13,QWORD PTR [rcx]
  41b5f3:	mov    r15,rdx
  41b5f6:	lea    rdx,[rip+0x2990d]        # 0x444f0a
  41b5fd:	mov    r14,rcx
  41b600:	mov    rbx,r8
  41b603:	mov    r8d,0x3
  41b609:	mov    rcx,r13
  41b60c:	call   0x43a6c0
  41b611:	test   eax,eax
  41b613:	mov    esi,eax
  41b615:	jne    0x41b6c3
  41b61b:	lea    rbp,[r13+0x3]
  41b61f:	mov    rcx,rbp
  41b622:	call   0x43a620
  41b627:	lea    r12,[rbp+rax*1+0x0]
  41b62c:	lea    rdx,[rip+0x298db]        # 0x444f0e
  41b633:	mov    r8d,0x2
  41b639:	lea    rcx,[r12+0x1]
  41b63e:	call   0x43a6c0
  41b643:	test   eax,eax
  41b645:	jne    0x41b6b0
  41b647:	lea    rsi,[rip+0x298c3]        # 0x444f11
  41b64e:	mov    ecx,0x5
  41b653:	mov    rdi,rbp
  41b656:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b658:	je     0x41b6d0
  41b65a:	lea    rdx,[rip+0x298b6]        # 0x444f17
  41b661:	mov    rcx,rbp
  41b664:	call   0x43a638
  41b669:	mov    rcx,QWORD PTR [rip+0x23510]        # 0x43eb80
  41b670:	mov    rsi,rax
  41b673:	test   rcx,rcx
  41b676:	je     0x41b6a1
  41b678:	lea    rbx,[rip+0x23501]        # 0x43eb80
  41b67f:	nop
  41b680:	mov    r8,QWORD PTR [rbx+0x8]
  41b684:	cmp    rsi,r8
  41b687:	jb     0x41b695
  41b689:	mov    rdx,rbp
  41b68c:	call   0x43a618
  41b691:	test   eax,eax
  41b693:	je     0x41b6e0
  41b695:	add    rbx,0x18
  41b699:	mov    rcx,QWORD PTR [rbx]
  41b69c:	test   rcx,rcx
  41b69f:	jne    0x41b680
  41b6a1:	add    r12,0x3
  41b6a5:	mov    esi,0x1
  41b6aa:	mov    QWORD PTR [r14],r12
  41b6ad:	nop    DWORD PTR [rax]
  41b6b0:	mov    eax,esi
  41b6b2:	add    rsp,0x28
  41b6b6:	pop    rbx
  41b6b7:	pop    rsi
  41b6b8:	pop    rdi
  41b6b9:	pop    rbp
  41b6ba:	pop    r12
  41b6bc:	pop    r13
  41b6be:	pop    r14
  41b6c0:	pop    r15
  41b6c2:	ret    
  41b6c3:	xor    esi,esi
  41b6c5:	jmp    0x41b6b0
  41b6c7:	nop    WORD PTR [rax+rax*1+0x0]
  41b6d0:	mov    DWORD PTR [rbx],0x1
  41b6d6:	jmp    0x41b65a
  41b6db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b6e0:	mov    r8,QWORD PTR [rbx+0x10]
  41b6e4:	test   r8,r8
  41b6e7:	je     0x41b6a1
  41b6e9:	lea    rcx,[rbp+rsi*1+0x0]
  41b6ee:	movzx  eax,BYTE PTR [rcx]
  41b6f1:	cmp    al,0x9
  41b6f3:	je     0x41b6f9
  41b6f5:	cmp    al,0x20
  41b6f7:	jne    0x41b714
  41b6f9:	lea    rax,[r13+rsi*1+0x4]
  41b6fe:	xchg   ax,ax
  41b700:	movzx  edx,BYTE PTR [rax]
  41b703:	mov    rcx,rax
  41b706:	add    rax,0x1
  41b70a:	cmp    dl,0x9
  41b70d:	je     0x41b700
  41b70f:	cmp    dl,0x20
  41b712:	je     0x41b700
  41b714:	add    r12,0x3
  41b718:	mov    rdx,r15
  41b71b:	mov    esi,0x1
  41b720:	call   r8
  41b723:	mov    QWORD PTR [r14],r12
  41b726:	jmp    0x41b6b0
  41b728:	nop
  41b729:	nop
  41b72a:	nop
  41b72b:	nop
  41b72c:	nop
  41b72d:	nop
  41b72e:	nop
  41b72f:	nop
  41b730:	push   rbx
  41b731:	sub    rsp,0x20
  41b735:	mov    ebx,ecx
  41b737:	call   QWORD PTR [rip+0x391b3]        # 0x4548f0
  41b73d:	lea    rdx,[rax+0x30]
  41b741:	mov    ecx,ebx
  41b743:	call   0x43a6a0
  41b748:	mov    eax,ebx
  41b74a:	add    rsp,0x20
  41b74e:	pop    rbx
  41b74f:	ret    
  41b750:	push   rdi
  41b751:	push   rsi
  41b752:	push   rbx
  41b753:	sub    rsp,0x30
  41b757:	movzx  eax,BYTE PTR [rdx]
  41b75a:	mov    rbx,QWORD PTR [rip+0x3814f]        # 0x4538b0
  41b761:	mov    edi,ecx
  41b763:	test   al,al
  41b765:	jne    0x41b78a
  41b767:	jmp    0x41b7c8
  41b769:	nop    DWORD PTR [rax+0x0]
  41b770:	mov    BYTE PTR [rbx+rax*1],0x1
  41b774:	movzx  eax,BYTE PTR [rdx]
  41b777:	shl    rax,0x4
  41b77b:	mov    DWORD PTR [rbx+rax*1+0x4],edi
  41b77f:	add    rdx,0x1
  41b783:	movzx  eax,BYTE PTR [rdx]
  41b786:	test   al,al
  41b788:	je     0x41b7c8
  41b78a:	shl    rax,0x4
  41b78e:	cmp    BYTE PTR [rdx+0x1],0x0
  41b792:	je     0x41b770
  41b794:	mov    BYTE PTR [rbx+rax*1],0x2
  41b798:	movzx  eax,BYTE PTR [rdx]
  41b79b:	shl    rax,0x4
  41b79f:	mov    DWORD PTR [rbx+rax*1+0x4],0x0
  41b7a7:	movzx  esi,BYTE PTR [rdx]
  41b7aa:	shl    rsi,0x4
  41b7ae:	add    rsi,rbx
  41b7b1:	mov    rax,QWORD PTR [rsi+0x8]
  41b7b5:	test   rax,rax
  41b7b8:	je     0x41b7d0
  41b7ba:	add    rdx,0x1
  41b7be:	mov    rbx,rax
  41b7c1:	movzx  eax,BYTE PTR [rdx]
  41b7c4:	test   al,al
  41b7c6:	jne    0x41b78a
  41b7c8:	add    rsp,0x30
  41b7cc:	pop    rbx
  41b7cd:	pop    rsi
  41b7ce:	pop    rdi
  41b7cf:	ret    
  41b7d0:	mov    ecx,0x1000
  41b7d5:	mov    QWORD PTR [rsp+0x28],rdx
  41b7da:	call   0x422970
  41b7df:	mov    rdx,QWORD PTR [rsp+0x28]
  41b7e4:	mov    QWORD PTR [rsi+0x8],rax
  41b7e8:	movzx  eax,BYTE PTR [rdx]
  41b7eb:	shl    rax,0x4
  41b7ef:	mov    rbx,QWORD PTR [rbx+rax*1+0x8]
  41b7f4:	jmp    0x41b77f
  41b7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b800:	push   rsi
  41b801:	push   rbx
  41b802:	sub    rsp,0x28
  41b806:	mov    ecx,0x1000
  41b80b:	call   0x4227b0
  41b810:	xor    ecx,ecx
  41b812:	mov    QWORD PTR [rip+0x38097],rax        # 0x4538b0
  41b819:	mov    rdx,rax
  41b81c:	nop    DWORD PTR [rax+0x0]
  41b820:	mov    DWORD PTR [rdx+0x4],ecx
  41b823:	add    ecx,0x1
  41b826:	mov    BYTE PTR [rdx],0x1
  41b829:	mov    QWORD PTR [rdx+0x8],0x0
  41b831:	add    rdx,0x10
  41b835:	cmp    ecx,0x80
  41b83b:	jne    0x41b820
  41b83d:	mov    edx,DWORD PTR [rip+0x233ed]        # 0x43ec30
  41b843:	test   edx,edx
  41b845:	jne    0x41b86f
  41b847:	lea    rdx,[rax+0x804]
  41b84e:	mov    cx,0x10f
  41b852:	mov    DWORD PTR [rdx],ecx
  41b854:	add    ecx,0x1
  41b857:	mov    BYTE PTR [rdx-0x4],0x1
  41b85b:	mov    QWORD PTR [rdx+0x4],0x0
  41b863:	add    rdx,0x10
  41b867:	cmp    ecx,0x18f
  41b86d:	jne    0x41b852
  41b86f:	lea    rbx,[rip+0x29a12]        # 0x445288
  41b876:	lea    rsi,[rip+0x29abb]        # 0x445338
  41b87d:	mov    BYTE PTR [rax+0x7f0],0x1
  41b884:	mov    DWORD PTR [rax+0x7f4],0x108
  41b88e:	mov    QWORD PTR [rax+0x7f8],0x0
  41b899:	nop    DWORD PTR [rax+0x0]
  41b8a0:	mov    rax,QWORD PTR [rbx]
  41b8a3:	mov    rdx,QWORD PTR [rax]
  41b8a6:	test   rdx,rdx
  41b8a9:	je     0x41b8b3
  41b8ab:	mov    ecx,DWORD PTR [rbx-0x8]
  41b8ae:	call   0x41b750
  41b8b3:	add    rbx,0x10
  41b8b7:	cmp    rbx,rsi
  41b8ba:	jne    0x41b8a0
  41b8bc:	lea    rbx,[rip+0x2993d]        # 0x445200
  41b8c3:	lea    rsi,[rip+0x299b6]        # 0x445280
  41b8ca:	nop    WORD PTR [rax+rax*1+0x0]
  41b8d0:	mov    rdx,QWORD PTR [rbx+0x8]
  41b8d4:	mov    ecx,DWORD PTR [rbx]
  41b8d6:	add    rbx,0x10
  41b8da:	call   0x41b750
  41b8df:	cmp    rbx,rsi
  41b8e2:	jne    0x41b8d0
  41b8e4:	mov    rdx,QWORD PTR [rip+0x3672d]        # 0x452018
  41b8eb:	test   rdx,rdx
  41b8ee:	je     0x41b8fa
  41b8f0:	mov    ecx,0x10e
  41b8f5:	call   0x41b750
  41b8fa:	mov    rax,QWORD PTR [rip+0x37faf]        # 0x4538b0
  41b901:	mov    BYTE PTR [rax+0x1b0],0x3
  41b908:	add    rsp,0x28
  41b90c:	pop    rbx
  41b90d:	pop    rsi
  41b90e:	ret    
  41b90f:	nop
  41b910:	sub    rsp,0x28
  41b914:	mov    eax,ecx
  41b916:	mov    rcx,QWORD PTR [rip+0x232f3]        # 0x43ec10
  41b91d:	cmp    rcx,0xffffffffffffffff
  41b921:	je     0x41b932
  41b923:	shl    edx,0x10
  41b926:	movzx  eax,ax
  41b929:	or     edx,eax
  41b92b:	call   QWORD PTR [rip+0x38f17]        # 0x454848
  41b931:	nop
  41b932:	add    rsp,0x28
  41b936:	ret    
  41b937:	nop    WORD PTR [rax+rax*1+0x0]
  41b940:	sub    rsp,0x28
  41b944:	cmp    QWORD PTR [rip+0x232cc],0xffffffffffffffff        # 0x43ec18
  41b94c:	je     0x41b983
  41b94e:	movzx  edx,WORD PTR [rip+0x3669d]        # 0x451ff2
  41b955:	movzx  eax,WORD PTR [rip+0x36694]        # 0x451ff0
  41b95c:	mov    rcx,QWORD PTR [rip+0x232bd]        # 0x43ec20
  41b963:	shl    edx,0x10
  41b966:	or     edx,eax
  41b968:	call   QWORD PTR [rip+0x38eda]        # 0x454848
  41b96e:	mov    rcx,QWORD PTR [rip+0x232a3]        # 0x43ec18
  41b975:	mov    rax,QWORD PTR [rip+0x38dac]        # 0x454728
  41b97c:	add    rsp,0x28
  41b980:	rex.W jmp rax
  41b983:	add    rsp,0x28
  41b987:	ret    
  41b988:	nop    DWORD PTR [rax+rax*1+0x0]
  41b990:	push   rbp
  41b991:	push   r15
  41b993:	push   r14
  41b995:	push   r13
  41b997:	push   r12
  41b999:	push   rdi
  41b99a:	push   rsi
  41b99b:	push   rbx
  41b99c:	sub    rsp,0x48
  41b9a0:	lea    rbp,[rsp+0x80]
  41b9a8:	xor    ebx,ebx
  41b9aa:	mov    r14,QWORD PTR [rip+0x38e47]        # 0x4547f8
  41b9b1:	cmp    ecx,0xfde8
  41b9b7:	mov    r9d,r8d
  41b9ba:	mov    edi,ecx
  41b9bc:	setne  bl
  41b9bf:	mov    r13,rdx
  41b9c2:	mov    esi,r8d
  41b9c5:	shl    ebx,0x3
  41b9c8:	mov    r8,rdx
  41b9cb:	mov    DWORD PTR [rsp+0x28],0x0
  41b9d3:	mov    QWORD PTR [rsp+0x20],0x0
  41b9dc:	mov    edx,ebx
  41b9de:	call   r14
  41b9e1:	test   eax,eax
  41b9e3:	mov    r12d,eax
  41b9e6:	jne    0x41ba14
  41b9e8:	test   esi,esi
  41b9ea:	js     0x41ba73
  41b9f0:	mov    r8,r13
  41b9f3:	mov    edx,esi
  41b9f5:	lea    rcx,[rip+0x29544]        # 0x444f40
  41b9fc:	call   QWORD PTR [rip+0x38f2e]        # 0x454930
  41ba02:	nop
  41ba03:	lea    rsp,[rbp-0x38]
  41ba07:	pop    rbx
  41ba08:	pop    rsi
  41ba09:	pop    rdi
  41ba0a:	pop    r12
  41ba0c:	pop    r13
  41ba0e:	pop    r14
  41ba10:	pop    r15
  41ba12:	pop    rbp
  41ba13:	ret    
  41ba14:	cdqe   
  41ba16:	lea    rax,[rax+rax*1+0x1e]
  41ba1b:	and    rax,0xfffffffffffffff0
  41ba1f:	call   0x4354a0
  41ba24:	sub    rsp,rax
  41ba27:	mov    r9d,esi
  41ba2a:	mov    r8,r13
  41ba2d:	lea    r15,[rsp+0x30]
  41ba32:	mov    DWORD PTR [rsp+0x28],r12d
  41ba37:	mov    edx,ebx
  41ba39:	mov    ecx,edi
  41ba3b:	mov    QWORD PTR [rsp+0x20],r15
  41ba40:	call   r14
  41ba43:	test   eax,eax
  41ba45:	jle    0x41b9e8
  41ba47:	cmp    esi,0x80000000
  41ba4d:	mov    r8d,r12d
  41ba50:	mov    QWORD PTR [rsp+0x20],0x0
  41ba59:	adc    r8d,0xffffffff
  41ba5d:	lea    r9,[rbp-0x44]
  41ba61:	mov    rdx,r15
  41ba64:	mov    rcx,QWORD PTR [rip+0x231a5]        # 0x43ec10
  41ba6b:	call   QWORD PTR [rip+0x38e47]        # 0x4548b8
  41ba71:	jmp    0x41ba03
  41ba73:	mov    rcx,r13
  41ba76:	call   QWORD PTR [rip+0x38ebc]        # 0x454938
  41ba7c:	jmp    0x41ba03
  41ba7e:	xchg   ax,ax
  41ba80:	mov    rcx,QWORD PTR [rip+0x23189]        # 0x43ec10
  41ba87:	movsx  edx,WORD PTR [rip+0x36544]        # 0x451fd2
  41ba8e:	cmp    rcx,0xffffffffffffffff
  41ba92:	je     0x41baa1
  41ba94:	mov    rax,QWORD PTR [rip+0x38dc5]        # 0x454860
  41ba9b:	movzx  edx,dx
  41ba9e:	rex.W jmp rax
  41baa1:	repz ret 
  41baa3:	nop    DWORD PTR [rax]
  41baa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bab0:	mov    rcx,QWORD PTR [rip+0x23159]        # 0x43ec10
  41bab7:	movsx  edx,WORD PTR [rip+0x36514]        # 0x451fd2
  41babe:	cmp    rcx,0xffffffffffffffff
  41bac2:	je     0x41bad1
  41bac4:	mov    rax,QWORD PTR [rip+0x38d95]        # 0x454860
  41bacb:	movzx  edx,dx
  41bace:	rex.W jmp rax
  41bad1:	repz ret 
  41bad3:	nop    DWORD PTR [rax]
  41bad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bae0:	mov    rcx,QWORD PTR [rip+0x23129]        # 0x43ec10
  41bae7:	movsx  edx,WORD PTR [rip+0x364e0]        # 0x451fce
  41baee:	cmp    rcx,0xffffffffffffffff
  41baf2:	je     0x41bb01
  41baf4:	mov    rax,QWORD PTR [rip+0x38d65]        # 0x454860
  41bafb:	movzx  edx,dx
  41bafe:	rex.W jmp rax
  41bb01:	repz ret 
  41bb03:	nop    DWORD PTR [rax]
  41bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb10:	mov    rcx,QWORD PTR [rip+0x230f9]        # 0x43ec10
  41bb17:	movsx  edx,WORD PTR [rip+0x364b4]        # 0x451fd2
  41bb1e:	cmp    rcx,0xffffffffffffffff
  41bb22:	je     0x41bb31
  41bb24:	mov    rax,QWORD PTR [rip+0x38d35]        # 0x454860
  41bb2b:	movzx  edx,dx
  41bb2e:	rex.W jmp rax
  41bb31:	repz ret 
  41bb33:	nop    DWORD PTR [rax]
  41bb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb40:	mov    rcx,QWORD PTR [rip+0x230c9]        # 0x43ec10
  41bb47:	movsx  edx,WORD PTR [rip+0x36482]        # 0x451fd0
  41bb4e:	cmp    rcx,0xffffffffffffffff
  41bb52:	je     0x41bb61
  41bb54:	mov    rax,QWORD PTR [rip+0x38d05]        # 0x454860
  41bb5b:	movzx  edx,dx
  41bb5e:	rex.W jmp rax
  41bb61:	repz ret 
  41bb63:	nop    DWORD PTR [rax]
  41bb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb70:	mov    rax,QWORD PTR [rip+0x35f01]        # 0x451a78
  41bb77:	test   rax,rax
  41bb7a:	je     0x41bb80
  41bb7c:	rex.W jmp rax
  41bb7f:	nop
  41bb80:	mov    rcx,QWORD PTR [rip+0x37d69]        # 0x4538f0
  41bb87:	lea    r8,[rip+0xfffffffffffffba2]        # 0x41b730
  41bb8e:	xor    edx,edx
  41bb90:	jmp    0x433ec0
  41bb95:	nop
  41bb96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bba0:	test   edx,edx
  41bba2:	je     0x41bbe2
  41bba4:	mov    rax,QWORD PTR [rip+0x2dfe5]        # 0x449b90
  41bbab:	mov    eax,DWORD PTR [rax]
  41bbad:	test   eax,eax
  41bbaf:	jne    0x41bbe4
  41bbb1:	cmp    QWORD PTR [rip+0x23057],0xffffffffffffffff        # 0x43ec10
  41bbb9:	je     0x41bbe4
  41bbbb:	mov    eax,DWORD PTR [rip+0x363ff]        # 0x451fc0
  41bbc1:	lea    r8d,[rax-0xfde8]
  41bbc8:	cmp    r8d,0x1
  41bbcc:	jbe    0x41bbf3
  41bbce:	mov    rax,QWORD PTR [rip+0x38d5b]        # 0x454930
  41bbd5:	mov    r8,rcx
  41bbd8:	lea    rcx,[rip+0x29361]        # 0x444f40
  41bbdf:	rex.W jmp rax
  41bbe2:	repz ret 
  41bbe4:	mov    r8,rcx
  41bbe7:	lea    rcx,[rip+0x29352]        # 0x444f40
  41bbee:	jmp    0x433f38
  41bbf3:	mov    r8d,edx
  41bbf6:	mov    rdx,rcx
  41bbf9:	mov    ecx,eax
  41bbfb:	jmp    0x41b990
  41bc00:	push   rbx
  41bc01:	sub    rsp,0x20
  41bc05:	mov    rax,QWORD PTR [rip+0x2df84]        # 0x449b90
  41bc0c:	mov    eax,DWORD PTR [rax]
  41bc0e:	test   eax,eax
  41bc10:	jne    0x41bc40
  41bc12:	cmp    QWORD PTR [rip+0x22ff6],0xffffffffffffffff        # 0x43ec10
  41bc1a:	je     0x41bc40
  41bc1c:	mov    eax,DWORD PTR [rip+0x3639e]        # 0x451fc0
  41bc22:	lea    edx,[rax-0xfde8]
  41bc28:	cmp    edx,0x1
  41bc2b:	jbe    0x41bc60
  41bc2d:	mov    rax,QWORD PTR [rip+0x38d04]        # 0x454938
  41bc34:	add    rsp,0x20
  41bc38:	pop    rbx
  41bc39:	rex.W jmp rax
  41bc3c:	nop    DWORD PTR [rax+0x0]
  41bc40:	mov    rbx,rcx
  41bc43:	call   QWORD PTR [rip+0x38ca7]        # 0x4548f0
  41bc49:	lea    rdx,[rax+0x30]
  41bc4d:	mov    rcx,rbx
  41bc50:	add    rsp,0x20
  41bc54:	pop    rbx
  41bc55:	jmp    0x43a758
  41bc5a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc60:	mov    rdx,rcx
  41bc63:	mov    r8d,0xffffffff
  41bc69:	mov    ecx,eax
  41bc6b:	add    rsp,0x20
  41bc6f:	pop    rbx
  41bc70:	jmp    0x41b990
  41bc75:	nop
  41bc76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc80:	push   rbx
  41bc81:	sub    rsp,0x20
  41bc85:	mov    ebx,ecx
  41bc87:	call   0x43a590
  41bc8c:	test   eax,eax
  41bc8e:	jne    0x41bca0
  41bc90:	xor    eax,eax
  41bc92:	add    rsp,0x20
  41bc96:	pop    rbx
  41bc97:	ret    
  41bc98:	nop    DWORD PTR [rax+rax*1+0x0]
  41bca0:	xor    r8d,r8d
  41bca3:	mov    edx,0x1
  41bca8:	mov    ecx,ebx
  41bcaa:	call   0x43a598
  41bcaf:	cmp    eax,0xffffffff
  41bcb2:	jne    0x41bc90
  41bcb4:	cmp    QWORD PTR [rip+0x22f6c],0xffffffffffffffff        # 0x43ec28
  41bcbc:	je     0x41bc90
  41bcbe:	mov    ecx,ebx
  41bcc0:	call   QWORD PTR [rip+0x38c9a]        # 0x454960
  41bcc6:	cmp    QWORD PTR [rip+0x22f5b],rax        # 0x43ec28
  41bccd:	sete   al
  41bcd0:	movzx  eax,al
  41bcd3:	add    rsp,0x20
  41bcd7:	pop    rbx
  41bcd8:	ret    
  41bcd9:	nop    DWORD PTR [rax+0x0]
  41bce0:	push   rdi
  41bce1:	push   rsi
  41bce2:	push   rbx
  41bce3:	sub    rsp,0x140
  41bcea:	mov    edx,0x104
  41bcef:	lea    rbx,[rsp+0x30]
  41bcf4:	mov    rcx,rbx
  41bcf7:	call   0x43a580
  41bcfc:	test   rax,rax
  41bcff:	je     0x41bdb0
  41bd05:	mov    edx,0x1
  41bd0a:	mov    ecx,0x2
  41bd0f:	call   0x43a660
  41bd14:	xor    ecx,ecx
  41bd16:	mov    edx,0x1
  41bd1b:	mov    rdi,rax
  41bd1e:	call   0x43a660
  41bd23:	lea    rcx,[rip+0x2921b]        # 0x444f45
  41bd2a:	mov    rsi,rax
  41bd2d:	mov    QWORD PTR [rsp+0x20],0x0
  41bd36:	call   0x43a730
  41bd3b:	test   rax,rax
  41bd3e:	je     0x41bd90
  41bd40:	xor    ecx,ecx
  41bd42:	mov    QWORD PTR [rsp+0x28],0x0
  41bd4b:	lea    r8,[rsp+0x20]
  41bd50:	mov    rdx,rax
  41bd53:	call   QWORD PTR [rip+0x38c4f]        # 0x4549a8
  41bd59:	cmp    BYTE PTR [rsp+0x30],0x0
  41bd5e:	je     0x41bd68
  41bd60:	mov    rcx,rbx
  41bd63:	call   0x43a558
  41bd68:	mov    rdx,rdi
  41bd6b:	mov    ecx,0x2
  41bd70:	call   0x43a660
  41bd75:	mov    rdx,rsi
  41bd78:	xor    ecx,ecx
  41bd7a:	call   0x43a660
  41bd7f:	xor    eax,eax
  41bd81:	add    rsp,0x140
  41bd88:	pop    rbx
  41bd89:	pop    rsi
  41bd8a:	pop    rdi
  41bd8b:	ret    
  41bd8c:	nop    DWORD PTR [rax+0x0]
  41bd90:	lea    rcx,[rip+0x291b4]        # 0x444f4b
  41bd97:	call   0x43a730
  41bd9c:	test   rax,rax
  41bd9f:	je     0x41bdba
  41bda1:	lea    rdx,[rip+0x291ab]        # 0x444f53
  41bda8:	mov    QWORD PTR [rsp+0x20],rdx
  41bdad:	jmp    0x41bd40
  41bdaf:	nop
  41bdb0:	mov    BYTE PTR [rsp+0x30],0x0
  41bdb5:	jmp    0x41bd05
  41bdba:	mov    eax,0xffffffff
  41bdbf:	jmp    0x41bd81
  41bdc1:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdd0:	push   rbx
  41bdd1:	sub    rsp,0x70
  41bdd5:	mov    ecx,0xfffffff6
  41bdda:	mov    rbx,QWORD PTR [rip+0x389e7]        # 0x4547c8
  41bde1:	call   rbx
  41bde3:	mov    ecx,0xfffffff5
  41bde8:	mov    QWORD PTR [rip+0x22e39],rax        # 0x43ec28
  41bdef:	call   rbx
  41bdf1:	cmp    rax,0xffffffffffffffff
  41bdf5:	mov    QWORD PTR [rip+0x22e24],rax        # 0x43ec20
  41bdfc:	je     0x41be1d
  41bdfe:	cmp    QWORD PTR [rip+0x22e22],0xffffffffffffffff        # 0x43ec28
  41be06:	je     0x41be1d
  41be08:	lea    rdx,[rsp+0x4c]
  41be0d:	mov    rcx,rax
  41be10:	mov    rbx,QWORD PTR [rip+0x38951]        # 0x454768
  41be17:	call   rbx
  41be19:	test   eax,eax
  41be1b:	jne    0x41be40
  41be1d:	mov    eax,0x18
  41be22:	mov    edx,0x50
  41be27:	mov    WORD PTR [rip+0x361be],ax        # 0x451fec
  41be2e:	mov    WORD PTR [rip+0x361b9],dx        # 0x451fee
  41be35:	add    rsp,0x70
  41be39:	pop    rbx
  41be3a:	ret    
  41be3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be40:	lea    rdx,[rip+0x36181]        # 0x451fc8
  41be47:	mov    rcx,QWORD PTR [rip+0x22dda]        # 0x43ec28
  41be4e:	call   rbx
  41be50:	test   eax,eax
  41be52:	je     0x41be1d
  41be54:	xor    r8d,r8d
  41be57:	mov    QWORD PTR [rsp+0x20],0x0
  41be60:	mov    r9d,0x1
  41be66:	mov    edx,0x3
  41be6b:	mov    ecx,0xc0000000
  41be70:	call   QWORD PTR [rip+0x388ba]        # 0x454730
  41be76:	cmp    rax,0xffffffffffffffff
  41be7a:	mov    QWORD PTR [rip+0x22d97],rax        # 0x43ec18
  41be81:	je     0x41bf39
  41be87:	lea    rdx,[rsp+0x50]
  41be8c:	mov    rcx,QWORD PTR [rip+0x22d8d]        # 0x43ec20
  41be93:	call   QWORD PTR [rip+0x388df]        # 0x454778
  41be99:	test   eax,eax
  41be9b:	je     0x41bf39
  41bea1:	movzx  eax,WORD PTR [rsp+0x5e]
  41bea6:	movzx  edx,WORD PTR [rsp+0x60]
  41beab:	mov    r8d,0x1
  41beb1:	movzx  ecx,WORD PTR [rsp+0x58]
  41beb6:	mov    r9d,0x1
  41bebc:	mov    WORD PTR [rip+0x36120],r8w        # 0x451fe4
  41bec4:	mov    WORD PTR [rip+0x3611a],r9w        # 0x451fe6
  41becc:	add    eax,0x1
  41becf:	add    edx,0x1
  41bed2:	sub    dx,WORD PTR [rsp+0x5c]
  41bed7:	mov    WORD PTR [rip+0x3610a],ax        # 0x451fe8
  41bede:	sub    ax,WORD PTR [rsp+0x5a]
  41bee3:	mov    WORD PTR [rip+0x360f6],cx        # 0x451fe0
  41beea:	mov    WORD PTR [rip+0x360f1],cx        # 0x451fe2
  41bef1:	lea    rcx,[rip+0xfffffffffffffa48]        # 0x41b940
  41bef8:	mov    WORD PTR [rip+0x360eb],dx        # 0x451fea
  41beff:	mov    WORD PTR [rip+0x360e6],dx        # 0x451fec
  41bf06:	mov    WORD PTR [rip+0x360e1],ax        # 0x451fee
  41bf0d:	movzx  eax,WORD PTR [rsp+0x54]
  41bf12:	mov    WORD PTR [rip+0x360d7],ax        # 0x451ff0
  41bf19:	movzx  eax,WORD PTR [rsp+0x56]
  41bf1e:	mov    WORD PTR [rip+0x360cd],ax        # 0x451ff2
  41bf25:	mov    eax,DWORD PTR [rsp+0x50]
  41bf29:	mov    DWORD PTR [rip+0x360c5],eax        # 0x451ff4
  41bf2f:	call   0x434030
  41bf34:	jmp    0x41be35
  41bf39:	call   QWORD PTR [rip+0x38859]        # 0x454798
  41bf3f:	mov    ebx,eax
  41bf41:	lea    rax,[rip+0x35c38]        # 0x451b80
  41bf48:	xor    r9d,r9d
  41bf4b:	xor    edx,edx
  41bf4d:	mov    QWORD PTR [rsp+0x30],0x0
  41bf56:	mov    DWORD PTR [rsp+0x28],0x1f4
  41bf5e:	mov    QWORD PTR [rsp+0x20],rax
  41bf63:	mov    r8d,ebx
  41bf66:	mov    ecx,0x1000
  41bf6b:	call   QWORD PTR [rip+0x387e7]        # 0x454758
  41bf71:	test   eax,eax
  41bf73:	jne    0x41bf8b
  41bf75:	lea    rdx,[rip+0x28fdb]        # 0x444f57
  41bf7c:	lea    rcx,[rip+0x35bfd]        # 0x451b80
  41bf83:	mov    r8d,ebx
  41bf86:	call   0x433f00
  41bf8b:	mov    rcx,QWORD PTR [rip+0x22c86]        # 0x43ec18
  41bf92:	call   QWORD PTR [rip+0x38790]        # 0x454728
  41bf98:	lea    rcx,[rip+0x28fc9]        # 0x444f68
  41bf9f:	call   0x433f18
  41bfa4:	lea    rdx,[rip+0x35bd5]        # 0x451b80
  41bfab:	mov    rcx,rax
  41bfae:	call   0x4144d0
  41bfb3:	mov    ecx,0x1
  41bfb8:	call   0x43a790
  41bfbd:	nop
  41bfbe:	xchg   ax,ax
  41bfc0:	sub    rsp,0x28
  41bfc4:	movsx  eax,WORD PTR [rip+0x36021]        # 0x451fec
  41bfcb:	test   ax,ax
  41bfce:	je     0x41c040
  41bfd0:	movsx  edx,WORD PTR [rip+0x36017]        # 0x451fee
  41bfd7:	lea    rcx,[rip+0x28fae]        # 0x444f8c
  41bfde:	mov    DWORD PTR [rip+0x378f4],eax        # 0x4538d8
  41bfe4:	mov    DWORD PTR [rip+0x3790e],edx        # 0x4538f8
  41bfea:	call   0x43a730
  41bfef:	test   rax,rax
  41bff2:	je     0x41c00e
  41bff4:	lea    rcx,[rip+0x28f91]        # 0x444f8c
  41bffb:	call   0x43a730
  41c000:	mov    rcx,rax
  41c003:	call   0x43a7a8
  41c008:	mov    DWORD PTR [rip+0x378ca],eax        # 0x4538d8
  41c00e:	lea    rcx,[rip+0x28f7d]        # 0x444f92
  41c015:	call   0x43a730
  41c01a:	test   rax,rax
  41c01d:	je     0x41c039
  41c01f:	lea    rcx,[rip+0x28f6c]        # 0x444f92
  41c026:	call   0x43a730
  41c02b:	mov    rcx,rax
  41c02e:	call   0x43a7a8
  41c033:	mov    DWORD PTR [rip+0x3789f],eax        # 0x4538d8
  41c039:	add    rsp,0x28
  41c03d:	ret    
  41c03e:	xchg   ax,ax
  41c040:	call   0x41bdd0
  41c045:	movsx  eax,WORD PTR [rip+0x35fa0]        # 0x451fec
  41c04c:	jmp    0x41bfd0
  41c04e:	xchg   ax,ax
  41c050:	push   rsi
  41c051:	push   rbx
  41c052:	sub    rsp,0x38
  41c056:	test   rcx,rcx
  41c059:	je     0x41c2d0
  41c05f:	cmp    WORD PTR [rip+0x35f87],0x0        # 0x451fee
  41c067:	je     0x41c240
  41c06d:	movzx  eax,WORD PTR [rip+0x35f6c]        # 0x451fe0
  41c074:	mov    ecx,0xb
  41c079:	mov    WORD PTR [rip+0x35f4e],cx        # 0x451fce
  41c080:	lea    rcx,[rip+0x28f1b]        # 0x444fa2
  41c087:	mov    edx,eax
  41c089:	mov    WORD PTR [rip+0x35f42],ax        # 0x451fd2
  41c090:	and    eax,0x7
  41c093:	and    edx,0x7f
  41c096:	shl    eax,0x4
  41c099:	sar    edx,0x4
  41c09c:	or     eax,edx
  41c09e:	mov    WORD PTR [rip+0x35f2b],ax        # 0x451fd0
  41c0a5:	call   0x43a730
  41c0aa:	test   rax,rax
  41c0ad:	je     0x41c2c0
  41c0b3:	mov    rbx,QWORD PTR [rip+0x2dad6]        # 0x449b90
  41c0ba:	mov    edx,DWORD PTR [rbx]
  41c0bc:	test   edx,edx
  41c0be:	je     0x41c250
  41c0c4:	mov    DWORD PTR [rip+0x35916],0x1        # 0x4519e4
  41c0ce:	mov    DWORD PTR [rip+0x35918],0x0        # 0x4519f0
  41c0d8:	call   0x41bfc0
  41c0dd:	call   QWORD PTR [rip+0x3868d]        # 0x454770
  41c0e3:	mov    DWORD PTR [rip+0x35ed7],eax        # 0x451fc0
  41c0e9:	lea    rax,[rip+0xfffffffffffffa50]        # 0x41bb40
  41c0f0:	mov    QWORD PTR [rip+0x359c9],rax        # 0x451ac0
  41c0f7:	lea    rax,[rip+0xfffffffffffffa12]        # 0x41bb10
  41c0fe:	mov    QWORD PTR [rip+0x359b3],rax        # 0x451ab8
  41c105:	lea    rax,[rip+0x1664]        # 0x41d770
  41c10c:	mov    QWORD PTR [rip+0x3599d],rax        # 0x451ab0
  41c113:	lea    rax,[rip+0x16b6]        # 0x41d7d0
  41c11a:	mov    QWORD PTR [rip+0x35987],rax        # 0x451aa8
  41c121:	lea    rax,[rip+0xfffffffffffff9b8]        # 0x41bae0
  41c128:	mov    QWORD PTR [rip+0x35971],rax        # 0x451aa0
  41c12f:	lea    rax,[rip+0xfffffffffffff97a]        # 0x41bab0
  41c136:	mov    QWORD PTR [rip+0x3595b],rax        # 0x451a98
  41c13d:	lea    rax,[rip+0x162c]        # 0x41d770
  41c144:	mov    QWORD PTR [rip+0x35945],rax        # 0x451a90
  41c14b:	lea    rax,[rip+0x162e]        # 0x41d780
  41c152:	mov    QWORD PTR [rip+0x3592f],rax        # 0x451a88
  41c159:	lea    rax,[rip+0x1670]        # 0x41d7d0
  41c160:	mov    QWORD PTR [rip+0x35919],rax        # 0x451a80
  41c167:	lea    rax,[rip+0xfffffffffffff912]        # 0x41ba80
  41c16e:	mov    QWORD PTR [rip+0x35903],rax        # 0x451a78
  41c175:	lea    rax,[rip+0x16c4]        # 0x41d840
  41c17c:	mov    QWORD PTR [rip+0x358ed],rax        # 0x451a70
  41c183:	lea    rax,[rip+0x1726]        # 0x41d8b0
  41c18a:	mov    QWORD PTR [rip+0x358d7],rax        # 0x451a68
  41c191:	lea    rax,[rip+0x1e18]        # 0x41dfb0
  41c198:	mov    QWORD PTR [rip+0x358c1],rax        # 0x451a60
  41c19f:	lea    rax,[rip+0x1d9a]        # 0x41df40
  41c1a6:	mov    QWORD PTR [rip+0x358ab],rax        # 0x451a58
  41c1ad:	lea    rax,[rip+0x17cc]        # 0x41d980
  41c1b4:	mov    QWORD PTR [rip+0x35895],rax        # 0x451a50
  41c1bb:	lea    rax,[rip+0x176e]        # 0x41d930
  41c1c2:	mov    QWORD PTR [rip+0x3587f],rax        # 0x451a48
  41c1c9:	lea    rax,[rip+0x18a0]        # 0x41da70
  41c1d0:	mov    QWORD PTR [rip+0x35869],rax        # 0x451a40
  41c1d7:	lea    rax,[rip+0x1922]        # 0x41db00
  41c1de:	mov    QWORD PTR [rip+0x35853],rax        # 0x451a38
  41c1e5:	lea    rax,[rip+0xfffffffffffffdd4]        # 0x41bfc0
  41c1ec:	mov    QWORD PTR [rip+0x3583d],rax        # 0x451a30
  41c1f3:	lea    rax,[rip+0xfffffffffffff716]        # 0x41b910
  41c1fa:	mov    QWORD PTR [rip+0x35827],rax        # 0x451a28
  41c201:	lea    rax,[rip+0xfffffffffffff9f8]        # 0x41bc00
  41c208:	mov    QWORD PTR [rip+0x35801],rax        # 0x451a10
  41c20f:	lea    rax,[rip+0x1a6a]        # 0x41dc80
  41c216:	mov    QWORD PTR [rip+0x357eb],rax        # 0x451a08
  41c21d:	lea    rax,[rip+0xfffffffffffff97c]        # 0x41bba0
  41c224:	mov    QWORD PTR [rip+0x357d5],rax        # 0x451a00
  41c22b:	lea    rax,[rip+0x1bbe]        # 0x41ddf0
  41c232:	mov    QWORD PTR [rip+0x357bf],rax        # 0x4519f8
  41c239:	add    rsp,0x38
  41c23d:	pop    rbx
  41c23e:	pop    rsi
  41c23f:	ret    
  41c240:	call   0x41bdd0
  41c245:	jmp    0x41c06d
  41c24a:	nop    WORD PTR [rax+rax*1+0x0]
  41c250:	lea    rsi,[rsp+0x28]
  41c255:	xor    r8d,r8d
  41c258:	mov    rcx,rax
  41c25b:	mov    rdx,rsi
  41c25e:	call   0x43a5f0
  41c263:	cmp    eax,0xff
  41c268:	jbe    0x41c290
  41c26a:	mov    eax,DWORD PTR [rbx]
  41c26c:	test   eax,eax
  41c26e:	mov    DWORD PTR [rip+0x3576c],0x1        # 0x4519e4
  41c278:	jne    0x41c0ce
  41c27e:	mov    DWORD PTR [rip+0x35764],0x1        # 0x4519ec
  41c288:	jmp    0x41c0ce
  41c28d:	nop    DWORD PTR [rax]
  41c290:	mov    WORD PTR [rip+0x35d3b],ax        # 0x451fd2
  41c297:	mov    rax,QWORD PTR [rsp+0x28]
  41c29c:	xor    r8d,r8d
  41c29f:	mov    rdx,rsi
  41c2a2:	lea    rcx,[rax+0x1]
  41c2a6:	call   0x43a5f0
  41c2ab:	cmp    eax,0xff
  41c2b0:	ja     0x41c26a
  41c2b2:	mov    WORD PTR [rip+0x35d17],ax        # 0x451fd0
  41c2b9:	jmp    0x41c26a
  41c2bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2c0:	mov    rax,QWORD PTR [rip+0x2d8c9]        # 0x449b90
  41c2c7:	mov    eax,DWORD PTR [rax]
  41c2c9:	jmp    0x41c26c
  41c2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2d0:	lea    rcx,[rip+0x28cc6]        # 0x444f9d
  41c2d7:	call   0x43a730
  41c2dc:	jmp    0x41c05f
  41c2e1:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2f0:	sub    rsp,0x28
  41c2f4:	mov    rax,QWORD PTR [rip+0x3572d]        # 0x451a28
  41c2fb:	test   rax,rax
  41c2fe:	je     0x41c310
  41c300:	add    rsp,0x28
  41c304:	rex.W jmp rax
  41c307:	nop    WORD PTR [rax+rax*1+0x0]
  41c310:	mov    rax,QWORD PTR [rip+0x35da9]        # 0x4520c0
  41c317:	test   rax,rax
  41c31a:	je     0x41c341
  41c31c:	mov    r8d,edx
  41c31f:	mov    edx,ecx
  41c321:	mov    rcx,rax
  41c324:	call   0x433ec8
  41c329:	lea    r8,[rip+0xfffffffffffff400]        # 0x41b730
  41c330:	mov    edx,0x1
  41c335:	mov    rcx,rax
  41c338:	add    rsp,0x28
  41c33c:	jmp    0x433ec0
  41c341:	add    rsp,0x28
  41c345:	ret    
  41c346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c350:	push   rsi
  41c351:	push   rbx
  41c352:	sub    rsp,0x28
  41c356:	mov    esi,DWORD PTR [rip+0x3757c]        # 0x4538d8
  41c35c:	test   ecx,ecx
  41c35e:	mov    ebx,edx
  41c360:	mov    edx,0x0
  41c365:	cmovns edx,ecx
  41c368:	xor    ecx,ecx
  41c36a:	sub    esi,edx
  41c36c:	call   0x41c2f0
  41c371:	mov    rcx,QWORD PTR [rip+0x35d10]        # 0x452088
  41c378:	test   rcx,rcx
  41c37b:	je     0x41c3b0
  41c37d:	mov    r8d,ebx
  41c380:	xor    edx,edx
  41c382:	call   0x433ec8
  41c387:	lea    r8,[rip+0xfffffffffffff3a2]        # 0x41b730
  41c38e:	mov    edx,esi
  41c390:	mov    rcx,rax
  41c393:	call   0x433ec0
  41c398:	call   QWORD PTR [rip+0x38552]        # 0x4548f0
  41c39e:	lea    rcx,[rax+0x30]
  41c3a2:	add    rsp,0x28
  41c3a6:	pop    rbx
  41c3a7:	pop    rsi
  41c3a8:	jmp    0x43a780
  41c3ad:	nop    DWORD PTR [rax]
  41c3b0:	test   ebx,ebx
  41c3b2:	je     0x41c398
  41c3b4:	mov    rcx,QWORD PTR [rip+0x35cbd]        # 0x452078
  41c3bb:	lea    r8,[rip+0xfffffffffffff36e]        # 0x41b730
  41c3c2:	mov    edx,esi
  41c3c4:	call   0x433ec0
  41c3c9:	sub    ebx,0x1
  41c3cc:	jne    0x41c3b4
  41c3ce:	jmp    0x41c398
  41c3d0:	push   rsi
  41c3d1:	push   rbx
  41c3d2:	sub    rsp,0x28
  41c3d6:	mov    esi,DWORD PTR [rip+0x374fc]        # 0x4538d8
  41c3dc:	test   ecx,ecx
  41c3de:	mov    ebx,edx
  41c3e0:	mov    edx,0x0
  41c3e5:	cmovns edx,ecx
  41c3e8:	xor    ecx,ecx
  41c3ea:	sub    esi,edx
  41c3ec:	call   0x41c2f0
  41c3f1:	mov    rcx,QWORD PTR [rip+0x35c98]        # 0x452090
  41c3f8:	test   rcx,rcx
  41c3fb:	je     0x41c430
  41c3fd:	mov    r8d,ebx
  41c400:	xor    edx,edx
  41c402:	call   0x433ec8
  41c407:	lea    r8,[rip+0xfffffffffffff322]        # 0x41b730
  41c40e:	mov    edx,esi
  41c410:	mov    rcx,rax
  41c413:	call   0x433ec0
  41c418:	call   QWORD PTR [rip+0x384d2]        # 0x4548f0
  41c41e:	lea    rcx,[rax+0x30]
  41c422:	add    rsp,0x28
  41c426:	pop    rbx
  41c427:	pop    rsi
  41c428:	jmp    0x43a780
  41c42d:	nop    DWORD PTR [rax]
  41c430:	test   ebx,ebx
  41c432:	je     0x41c418
  41c434:	mov    rcx,QWORD PTR [rip+0x35c45]        # 0x452080
  41c43b:	lea    r8,[rip+0xfffffffffffff2ee]        # 0x41b730
  41c442:	mov    edx,esi
  41c444:	call   0x433ec0
  41c449:	sub    ebx,0x1
  41c44c:	jne    0x41c434
  41c44e:	jmp    0x41c418
  41c450:	mov    rax,QWORD PTR [rip+0x355b9]        # 0x451a10
  41c457:	test   rax,rax
  41c45a:	je     0x41c460
  41c45c:	rex.W jmp rax
  41c45f:	nop
  41c460:	mov    rdx,rcx
  41c463:	lea    rcx,[rip+0x28b44]        # 0x444fae
  41c46a:	jmp    0x433f38
  41c46f:	nop
  41c470:	push   rsi
  41c471:	push   rbx
  41c472:	sub    rsp,0x28
  41c476:	mov    rax,QWORD PTR [rip+0x35583]        # 0x451a00
  41c47d:	test   rax,rax
  41c480:	je     0x41c490
  41c482:	add    rsp,0x28
  41c486:	pop    rbx
  41c487:	pop    rsi
  41c488:	rex.W jmp rax
  41c48b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c490:	test   edx,edx
  41c492:	jne    0x41c4a0
  41c494:	add    rsp,0x28
  41c498:	pop    rbx
  41c499:	pop    rsi
  41c49a:	ret    
  41c49b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c4a0:	mov    ebx,edx
  41c4a2:	mov    rsi,rcx
  41c4a5:	call   QWORD PTR [rip+0x38445]        # 0x4548f0
  41c4ab:	lea    r9,[rax+0x30]
  41c4af:	movsxd r8,ebx
  41c4b2:	mov    edx,0x1
  41c4b7:	mov    rcx,rsi
  41c4ba:	add    rsp,0x28
  41c4be:	pop    rbx
  41c4bf:	pop    rsi
  41c4c0:	jmp    0x43a738
  41c4c5:	nop
  41c4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4d0:	mov    rax,QWORD PTR [rip+0x35561]        # 0x451a38
  41c4d7:	test   rax,rax
  41c4da:	je     0x41c4e0
  41c4dc:	rex.W jmp rax
  41c4df:	nop
  41c4e0:	mov    rcx,QWORD PTR [rip+0x35bd1]        # 0x4520b8
  41c4e7:	test   rcx,rcx
  41c4ea:	je     0x41c500
  41c4ec:	lea    r8,[rip+0xfffffffffffff23d]        # 0x41b730
  41c4f3:	mov    edx,0x1
  41c4f8:	jmp    0x433ec0
  41c4fd:	nop    DWORD PTR [rax]
  41c500:	repz ret 
  41c502:	nop    DWORD PTR [rax+0x0]
  41c506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c510:	mov    rax,QWORD PTR [rip+0x35529]        # 0x451a40
  41c517:	test   rax,rax
  41c51a:	je     0x41c520
  41c51c:	rex.W jmp rax
  41c51f:	nop
  41c520:	mov    rcx,QWORD PTR [rip+0x35b81]        # 0x4520a8
  41c527:	test   rcx,rcx
  41c52a:	je     0x41c540
  41c52c:	lea    r8,[rip+0xfffffffffffff1fd]        # 0x41b730
  41c533:	mov    edx,0x1
  41c538:	jmp    0x433ec0
  41c53d:	nop    DWORD PTR [rax]
  41c540:	repz ret 
  41c542:	nop    DWORD PTR [rax+0x0]
  41c546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c550:	mov    rax,QWORD PTR [rip+0x354f9]        # 0x451a50
  41c557:	test   rax,rax
  41c55a:	je     0x41c560
  41c55c:	rex.W jmp rax
  41c55f:	nop
  41c560:	mov    rcx,QWORD PTR [rip+0x35ae1]        # 0x452048
  41c567:	test   rcx,rcx
  41c56a:	je     0x41c580
  41c56c:	lea    r8,[rip+0xfffffffffffff1bd]        # 0x41b730
  41c573:	mov    edx,0x1
  41c578:	jmp    0x433ec0
  41c57d:	nop    DWORD PTR [rax]
  41c580:	repz ret 
  41c582:	nop    DWORD PTR [rax+0x0]
  41c586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c590:	mov    rax,QWORD PTR [rip+0x354b1]        # 0x451a48
  41c597:	test   rax,rax
  41c59a:	je     0x41c5a0
  41c59c:	rex.W jmp rax
  41c59f:	nop
  41c5a0:	mov    rcx,QWORD PTR [rip+0x35a99]        # 0x452040
  41c5a7:	test   rcx,rcx
  41c5aa:	je     0x41c5c0
  41c5ac:	lea    r8,[rip+0xfffffffffffff17d]        # 0x41b730
  41c5b3:	mov    edx,0x1
  41c5b8:	jmp    0x433ec0
  41c5bd:	nop    DWORD PTR [rax]
  41c5c0:	repz ret 
  41c5c2:	nop    DWORD PTR [rax+0x0]
  41c5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c5d0:	mov    rax,QWORD PTR [rip+0x354e9]        # 0x451ac0
  41c5d7:	test   rax,rax
  41c5da:	je     0x41c5e0
  41c5dc:	rex.W jmp rax
  41c5df:	nop
  41c5e0:	mov    rcx,QWORD PTR [rip+0x35a41]        # 0x452028
  41c5e7:	test   rcx,rcx
  41c5ea:	je     0x41c600
  41c5ec:	lea    r8,[rip+0xfffffffffffff13d]        # 0x41b730
  41c5f3:	mov    edx,0x1
  41c5f8:	jmp    0x433ec0
  41c5fd:	nop    DWORD PTR [rax]
  41c600:	repz ret 
  41c602:	nop    DWORD PTR [rax+0x0]
  41c606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c610:	mov    rax,QWORD PTR [rip+0x354a1]        # 0x451ab8
  41c617:	test   rax,rax
  41c61a:	je     0x41c620
  41c61c:	rex.W jmp rax
  41c61f:	nop
  41c620:	mov    rcx,QWORD PTR [rip+0x359f9]        # 0x452020
  41c627:	test   rcx,rcx
  41c62a:	je     0x41c640
  41c62c:	lea    r8,[rip+0xfffffffffffff0fd]        # 0x41b730
  41c633:	mov    edx,0x1
  41c638:	jmp    0x433ec0
  41c63d:	nop    DWORD PTR [rax]
  41c640:	repz ret 
  41c642:	nop    DWORD PTR [rax+0x0]
  41c646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c650:	mov    rax,QWORD PTR [rip+0x35459]        # 0x451ab0
  41c657:	test   rax,rax
  41c65a:	je     0x41c660
  41c65c:	rex.W jmp rax
  41c65f:	nop
  41c660:	mov    rcx,QWORD PTR [rip+0x37241]        # 0x4538a8
  41c667:	test   rcx,rcx
  41c66a:	je     0x41c680
  41c66c:	lea    r8,[rip+0xfffffffffffff0bd]        # 0x41b730
  41c673:	mov    edx,0x1
  41c678:	jmp    0x433ec0
  41c67d:	nop    DWORD PTR [rax]
  41c680:	repz ret 
  41c682:	nop    DWORD PTR [rax+0x0]
  41c686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c690:	mov    rax,QWORD PTR [rip+0x35411]        # 0x451aa8
  41c697:	test   rax,rax
  41c69a:	je     0x41c6a0
  41c69c:	rex.W jmp rax
  41c69f:	nop
  41c6a0:	mov    rcx,QWORD PTR [rip+0x37259]        # 0x453900
  41c6a7:	test   rcx,rcx
  41c6aa:	je     0x41c6c0
  41c6ac:	lea    r8,[rip+0xfffffffffffff07d]        # 0x41b730
  41c6b3:	mov    edx,0x1
  41c6b8:	jmp    0x433ec0
  41c6bd:	nop    DWORD PTR [rax]
  41c6c0:	repz ret 
  41c6c2:	nop    DWORD PTR [rax+0x0]
  41c6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c6d0:	mov    rax,QWORD PTR [rip+0x353c9]        # 0x451aa0
  41c6d7:	test   rax,rax
  41c6da:	je     0x41c6e0
  41c6dc:	rex.W jmp rax
  41c6df:	nop
  41c6e0:	mov    rcx,QWORD PTR [rip+0x371e9]        # 0x4538d0
  41c6e7:	test   rcx,rcx
  41c6ea:	je     0x41c700
  41c6ec:	lea    r8,[rip+0xfffffffffffff03d]        # 0x41b730
  41c6f3:	mov    edx,0x1
  41c6f8:	jmp    0x433ec0
  41c6fd:	nop    DWORD PTR [rax]
  41c700:	repz ret 
  41c702:	nop    DWORD PTR [rax+0x0]
  41c706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c710:	mov    rax,QWORD PTR [rip+0x35381]        # 0x451a98
  41c717:	test   rax,rax
  41c71a:	je     0x41c720
  41c71c:	rex.W jmp rax
  41c71f:	nop
  41c720:	mov    rcx,QWORD PTR [rip+0x371e1]        # 0x453908
  41c727:	test   rcx,rcx
  41c72a:	je     0x41c740
  41c72c:	lea    r8,[rip+0xffffffffffffeffd]        # 0x41b730
  41c733:	mov    edx,0x1
  41c738:	jmp    0x433ec0
  41c73d:	nop    DWORD PTR [rax]
  41c740:	repz ret 
  41c742:	nop    DWORD PTR [rax+0x0]
  41c746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c750:	mov    rax,QWORD PTR [rip+0x35339]        # 0x451a90
  41c757:	test   rax,rax
  41c75a:	je     0x41c760
  41c75c:	rex.W jmp rax
  41c75f:	nop
  41c760:	mov    rcx,QWORD PTR [rip+0x37179]        # 0x4538e0
  41c767:	test   rcx,rcx
  41c76a:	je     0x41c780
  41c76c:	lea    r8,[rip+0xffffffffffffefbd]        # 0x41b730
  41c773:	mov    edx,0x1
  41c778:	jmp    0x433ec0
  41c77d:	nop    DWORD PTR [rax]
  41c780:	repz ret 
  41c782:	nop    DWORD PTR [rax+0x0]
  41c786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c790:	cmp    QWORD PTR [rip+0x352f0],0x0        # 0x451a88
  41c798:	je     0x41c7a4
  41c79a:	mov    rax,QWORD PTR [rip+0x352ff]        # 0x451aa0
  41c7a1:	rex.W jmp rax
  41c7a4:	mov    rcx,QWORD PTR [rip+0x3711d]        # 0x4538c8
  41c7ab:	test   rcx,rcx
  41c7ae:	je     0x41c7c1
  41c7b0:	lea    r8,[rip+0xffffffffffffef79]        # 0x41b730
  41c7b7:	mov    edx,0x1
  41c7bc:	jmp    0x433ec0
  41c7c1:	repz ret 
  41c7c3:	nop    DWORD PTR [rax]
  41c7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7d0:	mov    rax,QWORD PTR [rip+0x352a9]        # 0x451a80
  41c7d7:	test   rax,rax
  41c7da:	je     0x41c7e0
  41c7dc:	rex.W jmp rax
  41c7df:	nop
  41c7e0:	mov    rcx,QWORD PTR [rip+0x370d9]        # 0x4538c0
  41c7e7:	test   rcx,rcx
  41c7ea:	je     0x41c800
  41c7ec:	lea    r8,[rip+0xffffffffffffef3d]        # 0x41b730
  41c7f3:	mov    edx,0x1
  41c7f8:	jmp    0x433ec0
  41c7fd:	nop    DWORD PTR [rax]
  41c800:	repz ret 
  41c802:	nop    DWORD PTR [rax+0x0]
  41c806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c810:	mov    rax,QWORD PTR [rip+0x351f1]        # 0x451a08
  41c817:	test   rax,rax
  41c81a:	je     0x41c820
  41c81c:	rex.W jmp rax
  41c81f:	nop
  41c820:	mov    edx,DWORD PTR [rip+0x351c6]        # 0x4519ec
  41c826:	test   edx,edx
  41c828:	je     0x41c834
  41c82a:	mov    eax,DWORD PTR [rip+0x351b8]        # 0x4519e8
  41c830:	test   eax,eax
  41c832:	jne    0x41c851
  41c834:	mov    rcx,QWORD PTR [rip+0x357fd]        # 0x452038
  41c83b:	test   rcx,rcx
  41c83e:	je     0x41c85d
  41c840:	lea    r8,[rip+0xffffffffffffeee9]        # 0x41b730
  41c847:	mov    edx,0x1
  41c84c:	jmp    0x433ec0
  41c851:	mov    rcx,QWORD PTR [rip+0x357d8]        # 0x452030
  41c858:	test   rcx,rcx
  41c85b:	jne    0x41c840
  41c85d:	repz ret 
  41c85f:	nop
  41c860:	push   rbx
  41c861:	sub    rsp,0x20
  41c865:	test   r8d,r8d
  41c868:	je     0x41c88a
  41c86a:	mov    rax,QWORD PTR [rip+0x35187]        # 0x4519f8
  41c871:	test   rax,rax
  41c874:	je     0x41c880
  41c876:	add    rsp,0x20
  41c87a:	pop    rbx
  41c87b:	rex.W jmp rax
  41c87e:	xchg   ax,ax
  41c880:	mov    eax,DWORD PTR [rip+0x3515a]        # 0x4519e0
  41c886:	test   eax,eax
  41c888:	jne    0x41c890
  41c88a:	add    rsp,0x20
  41c88e:	pop    rbx
  41c88f:	ret    
  41c890:	mov    ebx,r8d
  41c893:	mov    r8d,ecx
  41c896:	mov    rcx,QWORD PTR [rip+0x357d3]        # 0x452070
  41c89d:	sub    edx,0x1
  41c8a0:	call   0x433ec8
  41c8a5:	lea    r8,[rip+0xffffffffffffee84]        # 0x41b730
  41c8ac:	xor    edx,edx
  41c8ae:	mov    rcx,rax
  41c8b1:	call   0x433ec0
  41c8b6:	test   ebx,ebx
  41c8b8:	jle    0x41c910
  41c8ba:	mov    rcx,QWORD PTR [rip+0x3579f]        # 0x452060
  41c8c1:	mov    r8d,ebx
  41c8c4:	xor    edx,edx
  41c8c6:	call   0x433ec8
  41c8cb:	lea    r8,[rip+0xffffffffffffee5e]        # 0x41b730
  41c8d2:	xor    edx,edx
  41c8d4:	mov    rcx,rax
  41c8d7:	call   0x433ec0
  41c8dc:	mov    eax,DWORD PTR [rip+0x36ff6]        # 0x4538d8
  41c8e2:	mov    rcx,QWORD PTR [rip+0x35787]        # 0x452070
  41c8e9:	xor    r8d,r8d
  41c8ec:	lea    edx,[rax-0x1]
  41c8ef:	call   0x433ec8
  41c8f4:	lea    r8,[rip+0xffffffffffffee35]        # 0x41b730
  41c8fb:	xor    edx,edx
  41c8fd:	mov    rcx,rax
  41c900:	add    rsp,0x20
  41c904:	pop    rbx
  41c905:	jmp    0x433ec0
  41c90a:	nop    WORD PTR [rax+rax*1+0x0]
  41c910:	neg    ebx
  41c912:	xor    edx,edx
  41c914:	mov    rcx,QWORD PTR [rip+0x3574d]        # 0x452068
  41c91b:	mov    r8d,ebx
  41c91e:	jmp    0x41c8c6
  41c920:	push   rbp
  41c921:	push   rdi
  41c922:	push   rsi
  41c923:	push   rbx
  41c924:	sub    rsp,0x28
  41c928:	test   r8d,r8d
  41c92b:	je     0x41c950
  41c92d:	mov    eax,DWORD PTR [rip+0x350b1]        # 0x4519e4
  41c933:	test   eax,eax
  41c935:	je     0x41c950
  41c937:	mov    rax,QWORD PTR [rip+0x350ba]        # 0x4519f8
  41c93e:	test   rax,rax
  41c941:	je     0x41c960
  41c943:	add    rsp,0x28
  41c947:	pop    rbx
  41c948:	pop    rsi
  41c949:	pop    rdi
  41c94a:	pop    rbp
  41c94b:	rex.W jmp rax
  41c94e:	xchg   ax,ax
  41c950:	add    rsp,0x28
  41c954:	pop    rbx
  41c955:	pop    rsi
  41c956:	pop    rdi
  41c957:	pop    rbp
  41c958:	ret    
  41c959:	nop    DWORD PTR [rax+0x0]
  41c960:	test   r8d,r8d
  41c963:	mov    ebx,r8d
  41c966:	mov    esi,edx
  41c968:	mov    edi,ecx
  41c96a:	jle    0x41c990
  41c96c:	mov    edx,r8d
  41c96f:	mov    ecx,esi
  41c971:	call   0x41c350
  41c976:	mov    edx,ebx
  41c978:	mov    ecx,edi
  41c97a:	add    rsp,0x28
  41c97e:	pop    rbx
  41c97f:	pop    rsi
  41c980:	pop    rdi
  41c981:	pop    rbp
  41c982:	jmp    0x41c3d0
  41c987:	nop    WORD PTR [rax+rax*1+0x0]
  41c990:	mov    ebp,r8d
  41c993:	lea    ecx,[r8+rcx*1]
  41c997:	neg    ebp
  41c999:	mov    edx,ebp
  41c99b:	call   0x41c350
  41c9a0:	lea    ecx,[rbx+rsi*1]
  41c9a3:	mov    edx,ebp
  41c9a5:	jmp    0x41c97a
  41c9a7:	nop    WORD PTR [rax+rax*1+0x0]
  41c9b0:	push   rdi
  41c9b1:	push   rsi
  41c9b2:	push   rbx
  41c9b3:	sub    rsp,0x20
  41c9b7:	mov    edi,DWORD PTR [rip+0x35653]        # 0x452010
  41c9bd:	mov    eax,ecx
  41c9bf:	mov    ebx,ecx
  41c9c1:	not    eax
  41c9c3:	mov    edx,edi
  41c9c5:	and    edx,0x140
  41c9cb:	test   edx,eax
  41c9cd:	jne    0x41ca93
  41c9d3:	mov    esi,edi
  41c9d5:	xor    esi,ebx
  41c9d7:	test   sil,0xf
  41c9db:	je     0x41c9f1
  41c9dd:	mov    ecx,ebx
  41c9df:	and    ecx,0xf
  41c9e2:	je     0x41cab0
  41c9e8:	cmp    ecx,0x7
  41c9eb:	ja     0x41cad0
  41c9f1:	test   esi,0x1e00
  41c9f7:	je     0x41ca17
  41c9f9:	mov    r8d,ebx
  41c9fc:	and    r8d,0x1e00
  41ca03:	je     0x41caa0
  41ca09:	shr    r8d,0x9
  41ca0d:	cmp    r8d,0x7
  41ca11:	ja     0x41caf0
  41ca17:	test   sil,0x10
  41ca1b:	je     0x41ca27
  41ca1d:	test   bl,0x10
  41ca20:	je     0x41ca70
  41ca22:	call   0x41c6d0
  41ca27:	test   sil,0x20
  41ca2b:	je     0x41ca37
  41ca2d:	test   bl,0x20
  41ca30:	je     0x41ca61
  41ca32:	call   0x41c650
  41ca37:	test   sil,0x40
  41ca3b:	je     0x41ca46
  41ca3d:	test   bl,0x40
  41ca40:	jne    0x41cac4
  41ca46:	and    esi,0x100
  41ca4c:	je     0x41ca53
  41ca4e:	test   bh,0x1
  41ca51:	jne    0x41ca80
  41ca53:	mov    DWORD PTR [rip+0x355b7],ebx        # 0x452010
  41ca59:	add    rsp,0x20
  41ca5d:	pop    rbx
  41ca5e:	pop    rsi
  41ca5f:	pop    rdi
  41ca60:	ret    
  41ca61:	call   0x41c690
  41ca66:	jmp    0x41ca37
  41ca68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca70:	call   0x41c710
  41ca75:	jmp    0x41ca27
  41ca77:	nop    WORD PTR [rax+rax*1+0x0]
  41ca80:	call   0x41c790
  41ca85:	mov    DWORD PTR [rip+0x35585],ebx        # 0x452010
  41ca8b:	add    rsp,0x20
  41ca8f:	pop    rbx
  41ca90:	pop    rsi
  41ca91:	pop    rdi
  41ca92:	ret    
  41ca93:	call   0x41c7d0
  41ca98:	xor    edi,edi
  41ca9a:	jmp    0x41c9d3
  41ca9f:	nop
  41caa0:	call   0x41bb70
  41caa5:	jmp    0x41ca17
  41caaa:	nop    WORD PTR [rax+rax*1+0x0]
  41cab0:	and    edi,0xffffe1ff
  41cab6:	mov    esi,edi
  41cab8:	call   0x41bb70
  41cabd:	xor    esi,ebx
  41cabf:	jmp    0x41c9f1
  41cac4:	call   0x41c750
  41cac9:	jmp    0x41ca46
  41cace:	xchg   ax,ax
  41cad0:	mov    rax,QWORD PTR [rip+0x34f99]        # 0x451a70
  41cad7:	sub    ecx,0x8
  41cada:	test   rax,rax
  41cadd:	je     0x41cb10
  41cadf:	call   rax
  41cae1:	jmp    0x41c9f1
  41cae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41caf0:	mov    rax,QWORD PTR [rip+0x34f71]        # 0x451a68
  41caf7:	lea    ecx,[r8-0x8]
  41cafb:	test   rax,rax
  41cafe:	je     0x41cb40
  41cb00:	call   rax
  41cb02:	jmp    0x41ca17
  41cb07:	nop    WORD PTR [rax+rax*1+0x0]
  41cb10:	mov    r8d,ecx
  41cb13:	mov    rcx,QWORD PTR [rip+0x36dce]        # 0x4538e8
  41cb1a:	xor    edx,edx
  41cb1c:	call   0x433ec8
  41cb21:	lea    r8,[rip+0xffffffffffffec08]        # 0x41b730
  41cb28:	xor    edx,edx
  41cb2a:	mov    rcx,rax
  41cb2d:	call   0x433ec0
  41cb32:	jmp    0x41c9f1
  41cb37:	nop    WORD PTR [rax+rax*1+0x0]
  41cb40:	mov    r8d,ecx
  41cb43:	mov    rcx,QWORD PTR [rip+0x36d6e]        # 0x4538b8
  41cb4a:	xor    edx,edx
  41cb4c:	call   0x433ec8
  41cb51:	lea    r8,[rip+0xffffffffffffebd8]        # 0x41b730
  41cb58:	xor    edx,edx
  41cb5a:	mov    rcx,rax
  41cb5d:	call   0x433ec0
  41cb62:	jmp    0x41ca17
  41cb67:	nop    WORD PTR [rax+rax*1+0x0]
  41cb70:	sub    rsp,0x28
  41cb74:	mov    rax,QWORD PTR [rip+0x34eb5]        # 0x451a30
  41cb7b:	test   rax,rax
  41cb7e:	je     0x41cb90
  41cb80:	add    rsp,0x28
  41cb84:	rex.W jmp rax
  41cb87:	nop    WORD PTR [rax+rax*1+0x0]
  41cb90:	mov    rcx,QWORD PTR [rip+0x35469]        # 0x452000
  41cb97:	mov    DWORD PTR [rip+0x36d37],0x0        # 0x4538d8
  41cba1:	mov    DWORD PTR [rip+0x36d4d],0x0        # 0x4538f8
  41cbab:	test   rcx,rcx
  41cbae:	je     0x41cbd0
  41cbb0:	call   0x43a7a8
  41cbb5:	test   eax,eax
  41cbb7:	mov    DWORD PTR [rip+0x36d3b],eax        # 0x4538f8
  41cbbd:	jle    0x41cbd0
  41cbbf:	mov    eax,DWORD PTR [rip+0x36d13]        # 0x4538d8
  41cbc5:	test   eax,eax
  41cbc7:	jle    0x41cc20
  41cbc9:	add    rsp,0x28
  41cbcd:	ret    
  41cbce:	xchg   ax,ax
  41cbd0:	lea    rcx,[rip+0x283da]        # 0x444fb1
  41cbd7:	call   0x433ed8
  41cbdc:	mov    r8d,DWORD PTR [rip+0x36cf5]        # 0x4538d8
  41cbe3:	mov    DWORD PTR [rip+0x36d0f],eax        # 0x4538f8
  41cbe9:	test   r8d,r8d
  41cbec:	jle    0x41cc20
  41cbee:	mov    edx,DWORD PTR [rip+0x36d04]        # 0x4538f8
  41cbf4:	test   edx,edx
  41cbf6:	jg     0x41cbc9
  41cbf8:	mov    eax,DWORD PTR [rip+0x36cda]        # 0x4538d8
  41cbfe:	mov    DWORD PTR [rip+0x36cf0],0x50        # 0x4538f8
  41cc08:	test   eax,eax
  41cc0a:	jg     0x41cbc9
  41cc0c:	mov    DWORD PTR [rip+0x36cc2],0x18        # 0x4538d8
  41cc16:	add    rsp,0x28
  41cc1a:	ret    
  41cc1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc20:	mov    rcx,QWORD PTR [rip+0x353e1]        # 0x452008
  41cc27:	test   rcx,rcx
  41cc2a:	je     0x41cc40
  41cc2c:	call   0x43a7a8
  41cc31:	test   eax,eax
  41cc33:	mov    DWORD PTR [rip+0x36c9f],eax        # 0x4538d8
  41cc39:	jg     0x41cbee
  41cc3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc40:	lea    rcx,[rip+0x2836d]        # 0x444fb4
  41cc47:	call   0x433ed8
  41cc4c:	mov    ecx,DWORD PTR [rip+0x36ca6]        # 0x4538f8
  41cc52:	mov    DWORD PTR [rip+0x36c80],eax        # 0x4538d8
  41cc58:	test   ecx,ecx
  41cc5a:	jg     0x41cc08
  41cc5c:	jmp    0x41cbfe
  41cc5e:	xchg   ax,ax
  41cc60:	push   rbx
  41cc61:	sub    rsp,0x30
  41cc65:	mov    rax,QWORD PTR [rip+0x34db4]        # 0x451a20
  41cc6c:	mov    DWORD PTR [rip+0x34d7a],0x0        # 0x4519f0
  41cc76:	test   rax,rax
  41cc79:	je     0x41cc90
  41cc7b:	call   rax
  41cc7d:	call   0x41b800
  41cc82:	nop
  41cc83:	add    rsp,0x30
  41cc87:	pop    rbx
  41cc88:	ret    
  41cc89:	nop    DWORD PTR [rax+0x0]
  41cc90:	test   rcx,rcx
  41cc93:	je     0x41d352
  41cc99:	mov    QWORD PTR [rip+0x35428],rcx        # 0x4520c8
  41cca0:	lea    rcx,[rip+0x282e5]        # 0x444f8c
  41cca7:	call   0x43a730
  41ccac:	lea    rcx,[rip+0x28309]        # 0x444fbc
  41ccb3:	mov    QWORD PTR [rip+0x3534e],rax        # 0x452008
  41ccba:	call   0x43a730
  41ccbf:	cmp    QWORD PTR [rip+0x35409],0x0        # 0x4520d0
  41ccc7:	mov    QWORD PTR [rip+0x35332],rax        # 0x452000
  41ccce:	je     0x41d380
  41ccd4:	mov    rcx,QWORD PTR [rip+0x353fd]        # 0x4520d8
  41ccdb:	test   rcx,rcx
  41ccde:	je     0x41d3a0
  41cce4:	mov    rax,QWORD PTR [rip+0x353e5]        # 0x4520d0
  41cceb:	mov    rdx,QWORD PTR [rip+0x353d6]        # 0x4520c8
  41ccf2:	mov    QWORD PTR [rip+0x353bb],0x0        # 0x4520b8
  41ccfd:	mov    QWORD PTR [rip+0x353a8],0x0        # 0x4520b0
  41cd08:	mov    QWORD PTR [rip+0x35395],0x0        # 0x4520a8
  41cd13:	mov    QWORD PTR [rsp+0x28],rax
  41cd18:	call   0x433ee0
  41cd1d:	test   eax,eax
  41cd1f:	js     0x41d1e0
  41cd25:	lea    rbx,[rsp+0x28]
  41cd2a:	lea    rcx,[rip+0x28295]        # 0x444fc6
  41cd31:	mov    rdx,rbx
  41cd34:	call   0x433ed0
  41cd39:	mov    rdx,QWORD PTR [rip+0x2c8d0]        # 0x449610
  41cd40:	test   rax,rax
  41cd43:	mov    QWORD PTR [rdx],rax
  41cd46:	je     0x41d330
  41cd4c:	movzx  edx,BYTE PTR [rax]
  41cd4f:	mov    rax,QWORD PTR [rip+0x2c8da]        # 0x449630
  41cd56:	lea    rcx,[rip+0x2826c]        # 0x444fc9
  41cd5d:	mov    BYTE PTR [rax],dl
  41cd5f:	mov    rdx,rbx
  41cd62:	call   0x433ed0
  41cd67:	lea    rcx,[rip+0x2825e]        # 0x444fcc
  41cd6e:	mov    rdx,rbx
  41cd71:	mov    QWORD PTR [rip+0x35338],rax        # 0x4520b0
  41cd78:	call   0x433ed0
  41cd7d:	lea    rcx,[rip+0x2824b]        # 0x444fcf
  41cd84:	mov    rdx,rbx
  41cd87:	mov    QWORD PTR [rip+0x3532a],rax        # 0x4520b8
  41cd8e:	call   0x433ed0
  41cd93:	lea    rcx,[rip+0x28238]        # 0x444fd2
  41cd9a:	mov    rdx,rbx
  41cd9d:	mov    QWORD PTR [rip+0x35304],rax        # 0x4520a8
  41cda4:	call   0x433ed0
  41cda9:	lea    rcx,[rip+0x28225]        # 0x444fd5
  41cdb0:	mov    rdx,rbx
  41cdb3:	mov    QWORD PTR [rip+0x35306],rax        # 0x4520c0
  41cdba:	call   0x433ed0
  41cdbf:	lea    rcx,[rip+0x28212]        # 0x444fd8
  41cdc6:	mov    rdx,rbx
  41cdc9:	mov    QWORD PTR [rip+0x352c0],rax        # 0x452090
  41cdd0:	call   0x433ed0
  41cdd5:	lea    rcx,[rip+0x281ff]        # 0x444fdb
  41cddc:	mov    rdx,rbx
  41cddf:	mov    QWORD PTR [rip+0x352a2],rax        # 0x452088
  41cde6:	call   0x433ed0
  41cdeb:	lea    rcx,[rip+0x281ec]        # 0x444fde
  41cdf2:	mov    rdx,rbx
  41cdf5:	mov    QWORD PTR [rip+0x35284],rax        # 0x452080
  41cdfc:	call   0x433ed0
  41ce01:	lea    rcx,[rip+0x281d9]        # 0x444fe1
  41ce08:	mov    rdx,rbx
  41ce0b:	mov    QWORD PTR [rip+0x35266],rax        # 0x452078
  41ce12:	call   0x433ed0
  41ce17:	lea    rcx,[rip+0x281c6]        # 0x444fe4
  41ce1e:	mov    rdx,rbx
  41ce21:	mov    QWORD PTR [rip+0x35248],rax        # 0x452070
  41ce28:	call   0x433ed0
  41ce2d:	lea    rcx,[rip+0x281b3]        # 0x444fe7
  41ce34:	mov    rdx,rbx
  41ce37:	mov    QWORD PTR [rip+0x3522a],rax        # 0x452068
  41ce3e:	call   0x433ed0
  41ce43:	cmp    QWORD PTR [rip+0x35245],0x0        # 0x452090
  41ce4b:	mov    QWORD PTR [rip+0x3520e],rax        # 0x452060
  41ce52:	je     0x41d313
  41ce58:	cmp    QWORD PTR [rip+0x35228],0x0        # 0x452088
  41ce60:	mov    edx,0x1
  41ce65:	je     0x41d340
  41ce6b:	cmp    QWORD PTR [rip+0x351fd],0x0        # 0x452070
  41ce73:	mov    DWORD PTR [rip+0x34b6b],edx        # 0x4519e4
  41ce79:	je     0x41d2e1
  41ce7f:	test   rax,rax
  41ce82:	setne  al
  41ce85:	xor    edx,edx
  41ce87:	cmp    QWORD PTR [rip+0x351d9],0x0        # 0x452068
  41ce8f:	setne  dl
  41ce92:	and    eax,edx
  41ce94:	lea    rcx,[rip+0x2814f]        # 0x444fea
  41ce9b:	mov    rdx,rbx
  41ce9e:	mov    DWORD PTR [rip+0x34b3c],eax        # 0x4519e0
  41cea4:	call   0x433ed0
  41cea9:	test   rax,rax
  41ceac:	mov    QWORD PTR [rip+0x35175],rax        # 0x452028
  41ceb3:	je     0x41d2d1
  41ceb9:	lea    rcx,[rip+0x2812d]        # 0x444fed
  41cec0:	mov    rdx,rbx
  41cec3:	call   0x433ed0
  41cec8:	mov    QWORD PTR [rip+0x35151],rax        # 0x452020
  41cecf:	lea    rcx,[rip+0x2811a]        # 0x444ff0
  41ced6:	mov    rdx,rbx
  41ced9:	call   0x433ed0
  41cede:	test   rax,rax
  41cee1:	mov    QWORD PTR [rip+0x369c0],rax        # 0x4538a8
  41cee8:	je     0x41d2c1
  41ceee:	lea    rcx,[rip+0x280fe]        # 0x444ff3
  41cef5:	mov    rdx,rbx
  41cef8:	call   0x433ed0
  41cefd:	mov    QWORD PTR [rip+0x369fc],rax        # 0x453900
  41cf04:	lea    rcx,[rip+0x280eb]        # 0x444ff6
  41cf0b:	mov    rdx,rbx
  41cf0e:	call   0x433ed0
  41cf13:	test   rax,rax
  41cf16:	mov    QWORD PTR [rip+0x369b3],rax        # 0x4538d0
  41cf1d:	je     0x41d2b1
  41cf23:	lea    rcx,[rip+0x280cf]        # 0x444ff9
  41cf2a:	mov    rdx,rbx
  41cf2d:	call   0x433ed0
  41cf32:	mov    QWORD PTR [rip+0x369cf],rax        # 0x453908
  41cf39:	lea    rcx,[rip+0x280bc]        # 0x444ffc
  41cf40:	mov    rdx,rbx
  41cf43:	call   0x433ed0
  41cf48:	test   rax,rax
  41cf4b:	mov    QWORD PTR [rip+0x36996],rax        # 0x4538e8
  41cf52:	je     0x41d2a1
  41cf58:	lea    rcx,[rip+0x280a0]        # 0x444fff
  41cf5f:	mov    rdx,rbx
  41cf62:	call   0x433ed0
  41cf67:	mov    QWORD PTR [rip+0x3694a],rax        # 0x4538b8
  41cf6e:	lea    rcx,[rip+0x2808d]        # 0x445002
  41cf75:	mov    rdx,rbx
  41cf78:	call   0x433ed0
  41cf7d:	lea    rcx,[rip+0x28081]        # 0x445005
  41cf84:	mov    rdx,rbx
  41cf87:	mov    QWORD PTR [rip+0x36962],rax        # 0x4538f0
  41cf8e:	call   0x433ed0
  41cf93:	lea    rcx,[rip+0x2806e]        # 0x445008
  41cf9a:	mov    rdx,rbx
  41cf9d:	mov    QWORD PTR [rip+0x3693c],rax        # 0x4538e0
  41cfa4:	call   0x433ed0
  41cfa9:	lea    rcx,[rip+0x2803d]        # 0x444fed
  41cfb0:	mov    rdx,rbx
  41cfb3:	mov    QWORD PTR [rip+0x3690e],rax        # 0x4538c8
  41cfba:	call   0x433ed0
  41cfbf:	test   rax,rax
  41cfc2:	mov    QWORD PTR [rip+0x368f7],rax        # 0x4538c0
  41cfc9:	je     0x41d303
  41cfcf:	cmp    QWORD PTR [rip+0x350d9],0x0        # 0x4520b0
  41cfd7:	je     0x41d2f0
  41cfdd:	call   0x41cb70
  41cfe2:	lea    rcx,[rip+0x28022]        # 0x44500b
  41cfe9:	mov    rdx,rbx
  41cfec:	call   0x433ed0
  41cff1:	lea    rcx,[rip+0x28016]        # 0x44500e
  41cff8:	mov    rdx,rbx
  41cffb:	mov    QWORD PTR [rip+0x35046],rax        # 0x452048
  41d002:	call   0x433ed0
  41d007:	lea    rcx,[rip+0x28003]        # 0x445011
  41d00e:	mov    rdx,rbx
  41d011:	mov    QWORD PTR [rip+0x35028],rax        # 0x452040
  41d018:	call   0x433ed0
  41d01d:	test   rax,rax
  41d020:	mov    QWORD PTR [rip+0x35009],rax        # 0x452030
  41d027:	lea    rcx,[rip+0x27fe6]        # 0x445014
  41d02e:	setne  al
  41d031:	mov    rdx,rbx
  41d034:	movzx  eax,al
  41d037:	mov    DWORD PTR [rip+0x349af],eax        # 0x4519ec
  41d03d:	call   0x433ed0
  41d042:	lea    rdx,[rip+0x27fce]        # 0x445017
  41d049:	test   rax,rax
  41d04c:	lea    rcx,[rip+0x27fc6]        # 0x445019
  41d053:	cmove  rax,rdx
  41d057:	mov    rdx,rbx
  41d05a:	mov    QWORD PTR [rip+0x34fd7],rax        # 0x452038
  41d061:	call   0x433ed0
  41d066:	lea    rcx,[rip+0x27faf]        # 0x44501c
  41d06d:	mov    rdx,rbx
  41d070:	mov    QWORD PTR [rip+0x35029],rax        # 0x4520a0
  41d077:	call   0x433ed0
  41d07c:	lea    rcx,[rip+0x27f9c]        # 0x44501f
  41d083:	mov    rdx,rbx
  41d086:	mov    QWORD PTR [rip+0x3500b],rax        # 0x452098
  41d08d:	call   0x433ed0
  41d092:	lea    rcx,[rip+0x27f89]        # 0x445022
  41d099:	mov    rdx,rbx
  41d09c:	mov    QWORD PTR [rip+0x34fb5],rax        # 0x452058
  41d0a3:	call   0x433ed0
  41d0a8:	lea    rcx,[rip+0x27f76]        # 0x445025
  41d0af:	mov    rdx,rbx
  41d0b2:	mov    QWORD PTR [rip+0x34f97],rax        # 0x452050
  41d0b9:	call   0x433ed0
  41d0be:	lea    rcx,[rip+0x27f63]        # 0x445028
  41d0c5:	mov    rdx,rbx
  41d0c8:	mov    QWORD PTR [rip+0x34909],rax        # 0x4519d8
  41d0cf:	call   0x433ed0
  41d0d4:	lea    rcx,[rip+0x27f50]        # 0x44502b
  41d0db:	mov    rdx,rbx
  41d0de:	mov    QWORD PTR [rip+0x348eb],rax        # 0x4519d0
  41d0e5:	call   0x433ed0
  41d0ea:	lea    rcx,[rip+0x27f3d]        # 0x44502e
  41d0f1:	mov    rdx,rbx
  41d0f4:	mov    QWORD PTR [rip+0x348cd],rax        # 0x4519c8
  41d0fb:	call   0x433ed0
  41d100:	lea    rcx,[rip+0x27f2a]        # 0x445031
  41d107:	mov    rdx,rbx
  41d10a:	mov    QWORD PTR [rip+0x348af],rax        # 0x4519c0
  41d111:	call   0x433ed0
  41d116:	lea    rcx,[rip+0x27f17]        # 0x445034
  41d11d:	mov    rdx,rbx
  41d120:	mov    QWORD PTR [rip+0x34891],rax        # 0x4519b8
  41d127:	call   0x433ed0
  41d12c:	lea    rcx,[rip+0x27f04]        # 0x445037
  41d133:	mov    rdx,rbx
  41d136:	mov    QWORD PTR [rip+0x34873],rax        # 0x4519b0
  41d13d:	call   0x433ed0
  41d142:	lea    rcx,[rip+0x27ef1]        # 0x44503a
  41d149:	mov    rdx,rbx
  41d14c:	mov    QWORD PTR [rip+0x34855],rax        # 0x4519a8
  41d153:	call   0x433ed0
  41d158:	lea    rcx,[rip+0x27ede]        # 0x44503d
  41d15f:	mov    rdx,rbx
  41d162:	mov    QWORD PTR [rip+0x34837],rax        # 0x4519a0
  41d169:	call   0x433ed0
  41d16e:	lea    rcx,[rip+0x27ecb]        # 0x445040
  41d175:	mov    rdx,rbx
  41d178:	mov    QWORD PTR [rip+0x34811],rax        # 0x451990
  41d17f:	call   0x433ed0
  41d184:	lea    rcx,[rip+0x27eb8]        # 0x445043
  41d18b:	mov    rdx,rbx
  41d18e:	mov    QWORD PTR [rip+0x34803],rax        # 0x451998
  41d195:	call   0x433ed0
  41d19a:	lea    rcx,[rip+0x27ea5]        # 0x445046
  41d1a1:	mov    rdx,rbx
  41d1a4:	mov    QWORD PTR [rip+0x347dd],rax        # 0x451988
  41d1ab:	call   0x433ed0
  41d1b0:	mov    QWORD PTR [rip+0x34e61],rax        # 0x452018
  41d1b7:	call   0x41b800
  41d1bc:	cmp    QWORD PTR [rip+0x34efc],0x0        # 0x4520c0
  41d1c4:	jne    0x41cc83
  41d1ca:	mov    DWORD PTR [rip+0x3481c],0x1        # 0x4519f0
  41d1d4:	jmp    0x41cc83
  41d1d9:	nop    DWORD PTR [rax+0x0]
  41d1e0:	lea    rax,[rip+0x27ddd]        # 0x444fc4
  41d1e7:	mov    DWORD PTR [rip+0x347ff],0x1        # 0x4519f0
  41d1f1:	mov    DWORD PTR [rip+0x366fd],0x50        # 0x4538f8
  41d1fb:	mov    DWORD PTR [rip+0x366d3],0x18        # 0x4538d8
  41d205:	mov    QWORD PTR [rip+0x34e20],0x0        # 0x452030
  41d210:	mov    QWORD PTR [rip+0x34e99],rax        # 0x4520b0
  41d217:	mov    QWORD PTR [rip+0x34e16],0x0        # 0x452038
  41d222:	mov    QWORD PTR [rip+0x34e13],0x0        # 0x452040
  41d22d:	mov    QWORD PTR [rip+0x34e10],0x0        # 0x452048
  41d238:	mov    QWORD PTR [rip+0x34785],0x0        # 0x4519c8
  41d243:	mov    QWORD PTR [rip+0x34772],0x0        # 0x4519c0
  41d24e:	mov    QWORD PTR [rip+0x34777],0x0        # 0x4519d0
  41d259:	mov    QWORD PTR [rip+0x34774],0x0        # 0x4519d8
  41d264:	mov    QWORD PTR [rip+0x34741],0x0        # 0x4519b0
  41d26f:	mov    QWORD PTR [rip+0x3473e],0x0        # 0x4519b8
  41d27a:	mov    QWORD PTR [rip+0x3471b],0x0        # 0x4519a0
  41d285:	mov    QWORD PTR [rip+0x34718],0x0        # 0x4519a8
  41d290:	mov    QWORD PTR [rip+0x346fd],0x0        # 0x451998
  41d29b:	add    rsp,0x30
  41d29f:	pop    rbx
  41d2a0:	ret    
  41d2a1:	mov    QWORD PTR [rip+0x3660c],0x0        # 0x4538b8
  41d2ac:	jmp    0x41cf6e
  41d2b1:	mov    QWORD PTR [rip+0x3664c],0x0        # 0x453908
  41d2bc:	jmp    0x41cf39
  41d2c1:	mov    QWORD PTR [rip+0x36634],0x0        # 0x453900
  41d2cc:	jmp    0x41cf04
  41d2d1:	mov    QWORD PTR [rip+0x34d44],0x0        # 0x452020
  41d2dc:	jmp    0x41cecf
  41d2e1:	xor    eax,eax
  41d2e3:	jmp    0x41ce94
  41d2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d2f0:	lea    rax,[rip+0x27ccd]        # 0x444fc4
  41d2f7:	mov    QWORD PTR [rip+0x34db2],rax        # 0x4520b0
  41d2fe:	jmp    0x41cfdd
  41d303:	mov    QWORD PTR [rip+0x365d2],0x0        # 0x4538e0
  41d30e:	jmp    0x41cfcf
  41d313:	cmp    QWORD PTR [rip+0x34d65],0x0        # 0x452080
  41d31b:	jne    0x41ce58
  41d321:	xor    edx,edx
  41d323:	jmp    0x41ce6b
  41d328:	nop    DWORD PTR [rax+rax*1+0x0]
  41d330:	xor    edx,edx
  41d332:	jmp    0x41cd4f
  41d337:	nop    WORD PTR [rax+rax*1+0x0]
  41d340:	xor    edx,edx
  41d342:	cmp    QWORD PTR [rip+0x34d2e],0x0        # 0x452078
  41d34a:	setne  dl
  41d34d:	jmp    0x41ce6b
  41d352:	lea    rcx,[rip+0x27c44]        # 0x444f9d
  41d359:	call   0x43a730
  41d35e:	lea    rdx,[rip+0x27c52]        # 0x444fb7
  41d365:	test   rax,rax
  41d368:	cmove  rax,rdx
  41d36c:	mov    QWORD PTR [rip+0x34d55],rax        # 0x4520c8
  41d373:	jmp    0x41cca0
  41d378:	nop    DWORD PTR [rax+rax*1+0x0]
  41d380:	mov    ecx,0x800
  41d385:	call   0x4227b0
  41d38a:	mov    QWORD PTR [rip+0x34d3f],rax        # 0x4520d0
  41d391:	jmp    0x41ccd4
  41d396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3a0:	mov    cx,0x800
  41d3a4:	call   0x4227b0
  41d3a9:	mov    QWORD PTR [rip+0x34d28],rax        # 0x4520d8
  41d3b0:	mov    rcx,rax
  41d3b3:	jmp    0x41cce4
  41d3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3c0:	mov    rax,QWORD PTR [rip+0x34651]        # 0x451a18
  41d3c7:	test   rax,rax
  41d3ca:	je     0x41d3d0
  41d3cc:	rex.W jmp rax
  41d3cf:	nop
  41d3d0:	jmp    0x41cc60
  41d3d5:	nop
  41d3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3e0:	push   rdi
  41d3e1:	push   rsi
  41d3e2:	push   rbx
  41d3e3:	sub    rsp,0x20
  41d3e7:	mov    edx,DWORD PTR [rip+0x34603]        # 0x4519f0
  41d3ed:	xor    eax,eax
  41d3ef:	test   edx,edx
  41d3f1:	jne    0x41d406
  41d3f3:	mov    rax,QWORD PTR [rip+0x34666]        # 0x451a60
  41d3fa:	test   rax,rax
  41d3fd:	je     0x41d410
  41d3ff:	call   rax
  41d401:	mov    eax,0x1
  41d406:	add    rsp,0x20
  41d40a:	pop    rbx
  41d40b:	pop    rsi
  41d40c:	pop    rdi
  41d40d:	ret    
  41d40e:	xchg   ax,ax
  41d410:	cmp    DWORD PTR [rip+0x345dd],0x1        # 0x4519f4
  41d417:	je     0x41d4d0
  41d41d:	mov    QWORD PTR [rip+0x34bf0],0x0        # 0x452018
  41d428:	mov    rcx,QWORD PTR [rip+0x34c29]        # 0x452058
  41d42f:	test   rcx,rcx
  41d432:	je     0x41d445
  41d434:	lea    r8,[rip+0xffffffffffffe2f5]        # 0x41b730
  41d43b:	mov    edx,0x1
  41d440:	call   0x433ec0
  41d445:	mov    rcx,QWORD PTR [rip+0x34c54]        # 0x4520a0
  41d44c:	test   rcx,rcx
  41d44f:	je     0x41d4b0
  41d451:	cmp    BYTE PTR [rcx],0x0
  41d454:	je     0x41d4b0
  41d456:	lea    r8,[rip+0xffffffffffffe2d3]        # 0x41b730
  41d45d:	mov    edx,0x1
  41d462:	lea    rdi,[rip+0x27bed]        # 0x445056
  41d469:	call   0x433ec0
  41d46e:	mov    rbx,QWORD PTR [rip+0x3747b]        # 0x4548f0
  41d475:	call   rbx
  41d477:	lea    rcx,[rax+0x30]
  41d47b:	call   0x43a780
  41d480:	mov    rsi,QWORD PTR [rip+0x34c41]        # 0x4520c8
  41d487:	mov    ecx,0x8
  41d48c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d48e:	je     0x41d4c0
  41d490:	call   rbx
  41d492:	mov    rcx,rax
  41d495:	call   0x43a578
  41d49a:	mov    eax,0x1
  41d49f:	add    rsp,0x20
  41d4a3:	pop    rbx
  41d4a4:	pop    rsi
  41d4a5:	pop    rdi
  41d4a6:	ret    
  41d4a7:	nop    WORD PTR [rax+rax*1+0x0]
  41d4b0:	mov    rbx,QWORD PTR [rip+0x37439]        # 0x4548f0
  41d4b7:	jmp    0x41d490
  41d4b9:	nop    DWORD PTR [rax+0x0]
  41d4c0:	mov    ecx,0x3e8
  41d4c5:	call   QWORD PTR [rip+0x373ad]        # 0x454878
  41d4cb:	jmp    0x41d490
  41d4cd:	nop    DWORD PTR [rax]
  41d4d0:	mov    rsi,QWORD PTR [rip+0x34b41]        # 0x452018
  41d4d7:	test   rsi,rsi
  41d4da:	je     0x41d41d
  41d4e0:	lea    rdi,[rip+0x27b62]        # 0x445049
  41d4e7:	mov    ecx,0x4
  41d4ec:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d4ee:	jne    0x41d41d
  41d4f4:	lea    r8,[rip+0xffffffffffffe235]        # 0x41b730
  41d4fb:	lea    rcx,[rip+0x27b4b]        # 0x44504d
  41d502:	mov    edx,0x1
  41d507:	call   0x433ec0
  41d50c:	jmp    0x41d428
  41d511:	nop    DWORD PTR [rax+rax*1+0x0]
  41d516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d520:	push   rdi
  41d521:	push   rsi
  41d522:	push   rbx
  41d523:	sub    rsp,0x20
  41d527:	mov    rax,QWORD PTR [rip+0x3452a]        # 0x451a58
  41d52e:	test   rax,rax
  41d531:	je     0x41d540
  41d533:	add    rsp,0x20
  41d537:	pop    rbx
  41d538:	pop    rsi
  41d539:	pop    rdi
  41d53a:	rex.W jmp rax
  41d53d:	nop    DWORD PTR [rax]
  41d540:	mov    rbx,QWORD PTR [rip+0x373a9]        # 0x4548f0
  41d547:	call   rbx
  41d549:	mov    rcx,rax
  41d54c:	call   0x43a578
  41d551:	cmp    QWORD PTR [rip+0x34abf],0x0        # 0x452018
  41d559:	je     0x41d573
  41d55b:	lea    r8,[rip+0xffffffffffffe1ce]        # 0x41b730
  41d562:	lea    rcx,[rip+0x27af5]        # 0x44505e
  41d569:	mov    edx,0x1
  41d56e:	call   0x433ec0
  41d573:	mov    rcx,QWORD PTR [rip+0x34ad6]        # 0x452050
  41d57a:	test   rcx,rcx
  41d57d:	je     0x41d590
  41d57f:	lea    r8,[rip+0xffffffffffffe1aa]        # 0x41b730
  41d586:	mov    edx,0x1
  41d58b:	call   0x433ec0
  41d590:	mov    rcx,QWORD PTR [rip+0x34b01]        # 0x452098
  41d597:	test   rcx,rcx
  41d59a:	je     0x41d5d4
  41d59c:	cmp    BYTE PTR [rcx],0x0
  41d59f:	je     0x41d5d4
  41d5a1:	lea    r8,[rip+0xffffffffffffe188]        # 0x41b730
  41d5a8:	mov    edx,0x1
  41d5ad:	lea    rdi,[rip+0x27aa2]        # 0x445056
  41d5b4:	call   0x433ec0
  41d5b9:	call   rbx
  41d5bb:	lea    rcx,[rax+0x30]
  41d5bf:	call   0x43a780
  41d5c4:	mov    rsi,QWORD PTR [rip+0x34afd]        # 0x4520c8
  41d5cb:	mov    ecx,0x8
  41d5d0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d5d2:	je     0x41d5e0
  41d5d4:	add    rsp,0x20
  41d5d8:	pop    rbx
  41d5d9:	pop    rsi
  41d5da:	pop    rdi
  41d5db:	ret    
  41d5dc:	nop    DWORD PTR [rax+0x0]
  41d5e0:	mov    rax,QWORD PTR [rip+0x37291]        # 0x454878
  41d5e7:	mov    ecx,0x3e8
  41d5ec:	add    rsp,0x20
  41d5f0:	pop    rbx
  41d5f1:	pop    rsi
  41d5f2:	pop    rdi
  41d5f3:	rex.W jmp rax
  41d5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d600:	push   rbx
  41d601:	sub    rsp,0x20
  41d605:	mov    rcx,QWORD PTR [rip+0x2160c]        # 0x43ec18
  41d60c:	cmp    rcx,0xffffffffffffffff
  41d610:	je     0x41d680
  41d612:	call   QWORD PTR [rip+0x37228]        # 0x454840
  41d618:	movzx  eax,WORD PTR [rip+0x349b3]        # 0x451fd2
  41d61f:	mov    rbx,QWORD PTR [rip+0x3722a]        # 0x454850
  41d626:	mov    edx,0x18
  41d62b:	mov    rcx,QWORD PTR [rip+0x215f6]        # 0x43ec28
  41d632:	mov    WORD PTR [rip+0x34993],ax        # 0x451fcc
  41d639:	mov    rax,QWORD PTR [rip+0x215d8]        # 0x43ec18
  41d640:	mov    QWORD PTR [rip+0x215c9],rax        # 0x43ec10
  41d647:	call   rbx
  41d649:	lea    rdx,[rip+0x34974]        # 0x451fc4
  41d650:	mov    rcx,QWORD PTR [rip+0x215b9]        # 0x43ec10
  41d657:	call   QWORD PTR [rip+0x3710b]        # 0x454768
  41d65d:	mov    edx,DWORD PTR [rip+0x34961]        # 0x451fc4
  41d663:	mov    rcx,QWORD PTR [rip+0x215a6]        # 0x43ec10
  41d66a:	mov    rax,rbx
  41d66d:	and    edx,0xfffffffd
  41d670:	add    rsp,0x20
  41d674:	pop    rbx
  41d675:	rex.W jmp rax
  41d678:	nop    DWORD PTR [rax+rax*1+0x0]
  41d680:	add    rsp,0x20
  41d684:	pop    rbx
  41d685:	ret    
  41d686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d690:	sub    rsp,0x28
  41d694:	cmp    QWORD PTR [rip+0x2157c],0xffffffffffffffff        # 0x43ec18
  41d69c:	je     0x41d6e2
  41d69e:	mov    rcx,QWORD PTR [rip+0x2157b]        # 0x43ec20
  41d6a5:	call   QWORD PTR [rip+0x37195]        # 0x454840
  41d6ab:	movzx  eax,WORD PTR [rip+0x3492e]        # 0x451fe0
  41d6b2:	mov    edx,DWORD PTR [rip+0x34910]        # 0x451fc8
  41d6b8:	mov    rcx,QWORD PTR [rip+0x21569]        # 0x43ec28
  41d6bf:	mov    WORD PTR [rip+0x34906],ax        # 0x451fcc
  41d6c6:	mov    rax,QWORD PTR [rip+0x21553]        # 0x43ec20
  41d6cd:	mov    QWORD PTR [rip+0x2153c],rax        # 0x43ec10
  41d6d4:	mov    rax,QWORD PTR [rip+0x37175]        # 0x454850
  41d6db:	add    rsp,0x28
  41d6df:	rex.W jmp rax
  41d6e2:	add    rsp,0x28
  41d6e6:	ret    
  41d6e7:	nop    WORD PTR [rax+rax*1+0x0]
  41d6f0:	mov    edx,ecx
  41d6f2:	mov    rcx,QWORD PTR [rip+0x21517]        # 0x43ec10
  41d6f9:	cmp    rcx,0xffffffffffffffff
  41d6fd:	je     0x41d710
  41d6ff:	mov    rax,QWORD PTR [rip+0x3715a]        # 0x454860
  41d706:	movzx  edx,dx
  41d709:	rex.W jmp rax
  41d70c:	nop    DWORD PTR [rax+0x0]
  41d710:	repz ret 
  41d712:	nop    DWORD PTR [rax+0x0]
  41d716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d720:	ret    
  41d721:	nop    DWORD PTR [rax+rax*1+0x0]
  41d726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d730:	sub    rsp,0x48
  41d734:	mov    rcx,QWORD PTR [rip+0x214d5]        # 0x43ec10
  41d73b:	lea    rdx,[rsp+0x20]
  41d740:	call   QWORD PTR [rip+0x37032]        # 0x454778
  41d746:	movzx  edx,WORD PTR [rsp+0x28]
  41d74b:	mov    rcx,QWORD PTR [rip+0x214be]        # 0x43ec10
  41d752:	or     edx,0x8
  41d755:	cmp    rcx,0xffffffffffffffff
  41d759:	je     0x41d765
  41d75b:	movzx  edx,dx
  41d75e:	call   QWORD PTR [rip+0x370fc]        # 0x454860
  41d764:	nop
  41d765:	add    rsp,0x48
  41d769:	ret    
  41d76a:	nop    WORD PTR [rax+rax*1+0x0]
  41d770:	jmp    0x41d730
  41d772:	nop    DWORD PTR [rax+0x0]
  41d776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d780:	jmp    0x41d730
  41d782:	nop    DWORD PTR [rax+0x0]
  41d786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d790:	sub    rsp,0x48
  41d794:	mov    rcx,QWORD PTR [rip+0x21475]        # 0x43ec10
  41d79b:	lea    rdx,[rsp+0x20]
  41d7a0:	call   QWORD PTR [rip+0x36fd2]        # 0x454778
  41d7a6:	mov    rcx,QWORD PTR [rip+0x21463]        # 0x43ec10
  41d7ad:	movzx  edx,WORD PTR [rsp+0x28]
  41d7b2:	cmp    rcx,0xffffffffffffffff
  41d7b6:	je     0x41d7c5
  41d7b8:	and    edx,0xfff7
  41d7be:	call   QWORD PTR [rip+0x3709c]        # 0x454860
  41d7c4:	nop
  41d7c5:	add    rsp,0x48
  41d7c9:	ret    
  41d7ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d7d0:	jmp    0x41d790
  41d7d2:	nop    DWORD PTR [rax+0x0]
  41d7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7e0:	jmp    0x41d730
  41d7e5:	nop
  41d7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7f0:	push   rbx
  41d7f1:	sub    rsp,0x40
  41d7f5:	mov    ebx,ecx
  41d7f7:	lea    rdx,[rsp+0x20]
  41d7fc:	mov    rcx,QWORD PTR [rip+0x2140d]        # 0x43ec10
  41d803:	call   QWORD PTR [rip+0x36f6f]        # 0x454778
  41d809:	movzx  eax,WORD PTR [rsp+0x28]
  41d80e:	mov    rcx,QWORD PTR [rip+0x213fb]        # 0x43ec10
  41d815:	and    ebx,0xf
  41d818:	mov    edx,ebx
  41d81a:	and    eax,0xf0
  41d81f:	or     edx,eax
  41d821:	cmp    rcx,0xffffffffffffffff
  41d825:	je     0x41d82e
  41d827:	call   QWORD PTR [rip+0x37033]        # 0x454860
  41d82d:	nop
  41d82e:	add    rsp,0x40
  41d832:	pop    rbx
  41d833:	ret    
  41d834:	xchg   ax,ax
  41d836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d840:	movsxd rax,ecx
  41d843:	mov    ecx,0x7
  41d848:	cmp    eax,0x7
  41d84b:	ja     0x41d857
  41d84d:	lea    rdx,[rip+0x2796c]        # 0x4451c0
  41d854:	mov    ecx,DWORD PTR [rdx+rax*4]
  41d857:	jmp    0x41d7f0
  41d859:	nop    DWORD PTR [rax+0x0]
  41d860:	push   rbx
  41d861:	sub    rsp,0x40
  41d865:	mov    ebx,ecx
  41d867:	lea    rdx,[rsp+0x20]
  41d86c:	mov    rcx,QWORD PTR [rip+0x2139d]        # 0x43ec10
  41d873:	call   QWORD PTR [rip+0x36eff]        # 0x454778
  41d879:	movzx  edx,WORD PTR [rsp+0x28]
  41d87e:	mov    rcx,QWORD PTR [rip+0x2138b]        # 0x43ec10
  41d885:	shl    ebx,0x4
  41d888:	movzx  ebx,bl
  41d88b:	and    edx,0xf
  41d88e:	or     edx,ebx
  41d890:	cmp    rcx,0xffffffffffffffff
  41d894:	je     0x41d89d
  41d896:	call   QWORD PTR [rip+0x36fc4]        # 0x454860
  41d89c:	nop
  41d89d:	add    rsp,0x40
  41d8a1:	pop    rbx
  41d8a2:	ret    
  41d8a3:	nop    DWORD PTR [rax]
  41d8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8b0:	movsxd rax,ecx
  41d8b3:	mov    ecx,0x7
  41d8b8:	cmp    eax,0x7
  41d8bb:	ja     0x41d8c7
  41d8bd:	lea    rdx,[rip+0x278fc]        # 0x4451c0
  41d8c4:	mov    ecx,DWORD PTR [rdx+rax*4]
  41d8c7:	jmp    0x41d860
  41d8c9:	nop    DWORD PTR [rax+0x0]
  41d8d0:	push   rsi
  41d8d1:	push   rbx
  41d8d2:	sub    rsp,0x48
  41d8d6:	mov    rax,rcx
  41d8d9:	mov    rcx,QWORD PTR [rip+0x21330]        # 0x43ec10
  41d8e0:	cmp    rcx,0xffffffffffffffff
  41d8e4:	je     0x41d910
  41d8e6:	mov    rbx,rdx
  41d8e9:	mov    rsi,rax
  41d8ec:	lea    rdx,[rsp+0x20]
  41d8f1:	call   QWORD PTR [rip+0x36e81]        # 0x454778
  41d8f7:	movsx  eax,WORD PTR [rsp+0x26]
  41d8fc:	mov    DWORD PTR [rsi],eax
  41d8fe:	movsx  eax,WORD PTR [rsp+0x24]
  41d903:	mov    DWORD PTR [rbx],eax
  41d905:	add    rsp,0x48
  41d909:	pop    rbx
  41d90a:	pop    rsi
  41d90b:	ret    
  41d90c:	nop    DWORD PTR [rax+0x0]
  41d910:	mov    DWORD PTR [rdx],0x0
  41d916:	mov    DWORD PTR [rax],0x0
  41d91c:	add    rsp,0x48
  41d920:	pop    rbx
  41d921:	pop    rsi
  41d922:	ret    
  41d923:	nop    DWORD PTR [rax]
  41d926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d930:	sub    rsp,0x38
  41d934:	lea    rdx,[rsp+0x28]
  41d939:	lea    rcx,[rsp+0x2c]
  41d93e:	call   0x41d8d0
  41d943:	mov    ecx,DWORD PTR [rsp+0x2c]
  41d947:	mov    eax,DWORD PTR [rsp+0x28]
  41d94b:	lea    edx,[rcx+0x1]
  41d94e:	mov    ecx,DWORD PTR [rip+0x35f84]        # 0x4538d8
  41d954:	cmp    edx,ecx
  41d956:	lea    r8d,[rcx-0x1]
  41d95a:	mov    rcx,QWORD PTR [rip+0x212af]        # 0x43ec10
  41d961:	cmovge edx,r8d
  41d965:	cmp    rcx,0xffffffffffffffff
  41d969:	je     0x41d97a
  41d96b:	shl    edx,0x10
  41d96e:	movzx  eax,ax
  41d971:	or     edx,eax
  41d973:	call   QWORD PTR [rip+0x36ecf]        # 0x454848
  41d979:	nop
  41d97a:	add    rsp,0x38
  41d97e:	ret    
  41d97f:	nop
  41d980:	sub    rsp,0x38
  41d984:	lea    rdx,[rsp+0x28]
  41d989:	lea    rcx,[rsp+0x2c]
  41d98e:	call   0x41d8d0
  41d993:	mov    ecx,DWORD PTR [rsp+0x2c]
  41d997:	mov    edx,DWORD PTR [rsp+0x28]
  41d99b:	lea    eax,[rcx-0x1]
  41d99e:	cmp    ecx,0x2
  41d9a1:	mov    ecx,0x0
  41d9a6:	cmovl  eax,ecx
  41d9a9:	mov    rcx,QWORD PTR [rip+0x21260]        # 0x43ec10
  41d9b0:	cmp    rcx,0xffffffffffffffff
  41d9b4:	je     0x41d9c5
  41d9b6:	shl    eax,0x10
  41d9b9:	movzx  edx,dx
  41d9bc:	or     edx,eax
  41d9be:	call   QWORD PTR [rip+0x36e84]        # 0x454848
  41d9c4:	nop
  41d9c5:	add    rsp,0x38
  41d9c9:	ret    
  41d9ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d9d0:	sub    rsp,0x28
  41d9d4:	mov    eax,ecx
  41d9d6:	mov    rcx,QWORD PTR [rip+0x21233]        # 0x43ec10
  41d9dd:	cmp    rcx,0xffffffffffffffff
  41d9e1:	je     0x41d9f2
  41d9e3:	shl    eax,0x10
  41d9e6:	movzx  edx,dx
  41d9e9:	or     edx,eax
  41d9eb:	call   QWORD PTR [rip+0x36e57]        # 0x454848
  41d9f1:	nop
  41d9f2:	add    rsp,0x28
  41d9f6:	ret    
  41d9f7:	nop    WORD PTR [rax+rax*1+0x0]
  41da00:	push   rdi
  41da01:	push   rsi
  41da02:	push   rbx
  41da03:	sub    rsp,0x40
  41da07:	mov    rcx,QWORD PTR [rip+0x21202]        # 0x43ec10
  41da0e:	cmp    rcx,0xffffffffffffffff
  41da12:	je     0x41da5e
  41da14:	mov    ebx,DWORD PTR [rip+0x35ede]        # 0x4538f8
  41da1a:	lea    rdi,[rsp+0x3c]
  41da1f:	movzx  edx,WORD PTR [rip+0x345ac]        # 0x451fd2
  41da26:	imul   ebx,DWORD PTR [rip+0x35eab]        # 0x4538d8
  41da2d:	xor    esi,esi
  41da2f:	mov    QWORD PTR [rsp+0x20],rdi
  41da34:	mov    r9d,esi
  41da37:	mov    r8d,ebx
  41da3a:	call   QWORD PTR [rip+0x36d08]        # 0x454748
  41da40:	mov    QWORD PTR [rsp+0x20],rdi
  41da45:	mov    r9d,esi
  41da48:	mov    r8d,ebx
  41da4b:	mov    edx,0x20
  41da50:	mov    rcx,QWORD PTR [rip+0x211b9]        # 0x43ec10
  41da57:	call   QWORD PTR [rip+0x36cf3]        # 0x454750
  41da5d:	nop
  41da5e:	add    rsp,0x40
  41da62:	pop    rbx
  41da63:	pop    rsi
  41da64:	pop    rdi
  41da65:	ret    
  41da66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da70:	jmp    0x41da00
  41da72:	nop    DWORD PTR [rax+0x0]
  41da76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da80:	push   rdi
  41da81:	push   rsi
  41da82:	push   rbx
  41da83:	sub    rsp,0x60
  41da87:	mov    rcx,QWORD PTR [rip+0x21182]        # 0x43ec10
  41da8e:	cmp    rcx,0xffffffffffffffff
  41da92:	je     0x41daf6
  41da94:	lea    rdx,[rsp+0x40]
  41da99:	lea    rdi,[rsp+0x3c]
  41da9e:	call   QWORD PTR [rip+0x36cd4]        # 0x454778
  41daa4:	movsx  edx,WORD PTR [rsp+0x44]
  41daa9:	movsx  ebx,WORD PTR [rsp+0x40]
  41daae:	mov    esi,DWORD PTR [rsp+0x44]
  41dab2:	mov    rcx,QWORD PTR [rip+0x21157]        # 0x43ec10
  41dab9:	mov    QWORD PTR [rsp+0x20],rdi
  41dabe:	mov    eax,edx
  41dac0:	sub    ebx,edx
  41dac2:	movzx  edx,WORD PTR [rip+0x34503]        # 0x451fcc
  41dac9:	mov    si,ax
  41dacc:	mov    r8d,ebx
  41dacf:	mov    r9d,esi
  41dad2:	call   QWORD PTR [rip+0x36c70]        # 0x454748
  41dad8:	mov    QWORD PTR [rsp+0x20],rdi
  41dadd:	mov    r9d,esi
  41dae0:	mov    r8d,ebx
  41dae3:	mov    edx,0x20
  41dae8:	mov    rcx,QWORD PTR [rip+0x21121]        # 0x43ec10
  41daef:	call   QWORD PTR [rip+0x36c5b]        # 0x454750
  41daf5:	nop
  41daf6:	add    rsp,0x60
  41dafa:	pop    rbx
  41dafb:	pop    rsi
  41dafc:	pop    rdi
  41dafd:	ret    
  41dafe:	xchg   ax,ax
  41db00:	jmp    0x41da80
  41db05:	nop
  41db06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db10:	push   r14
  41db12:	push   r13
  41db14:	push   r12
  41db16:	push   rbp
  41db17:	push   rdi
  41db18:	push   rsi
  41db19:	push   rbx
  41db1a:	sub    rsp,0x40
  41db1e:	cmp    QWORD PTR [rip+0x210ea],0xffffffffffffffff        # 0x43ec10
  41db26:	je     0x41dc20
  41db2c:	mov    edi,DWORD PTR [rip+0x35dc6]        # 0x4538f8
  41db32:	lea    r13,[rsp+0x3c]
  41db37:	xor    ebp,ebp
  41db39:	imul   edi,DWORD PTR [rip+0x35d98]        # 0x4538d8
  41db40:	mov    ecx,edi
  41db42:	add    rcx,rcx
  41db45:	call   0x4227b0
  41db4a:	mov    QWORD PTR [rsp+0x20],r13
  41db4f:	mov    r12,rax
  41db52:	mov    r9d,ebp
  41db55:	mov    r8d,edi
  41db58:	mov    rdx,rax
  41db5b:	mov    rcx,QWORD PTR [rip+0x210ae]        # 0x43ec10
  41db62:	call   QWORD PTR [rip+0x36ca8]        # 0x454810
  41db68:	test   edi,edi
  41db6a:	je     0x41dc50
  41db70:	movzx  r11d,WORD PTR [rip+0x34458]        # 0x451fd0
  41db78:	lea    eax,[rdi-0x1]
  41db7b:	mov    rbx,r12
  41db7e:	xor    r11w,WORD PTR [rip+0x3444c]        # 0x451fd2
  41db86:	mov    r10,r12
  41db89:	lea    rsi,[r12+rax*2+0x2]
  41db8e:	xchg   ax,ax
  41db90:	xor    WORD PTR [r10],r11w
  41db94:	add    r10,0x2
  41db98:	cmp    r10,rsi
  41db9b:	jne    0x41db90
  41db9d:	mov    r9d,ebp
  41dba0:	mov    r8d,edi
  41dba3:	mov    rdx,r12
  41dba6:	mov    rcx,QWORD PTR [rip+0x21063]        # 0x43ec10
  41dbad:	mov    QWORD PTR [rsp+0x20],r13
  41dbb2:	mov    r14,QWORD PTR [rip+0x36cf7]        # 0x4548b0
  41dbb9:	call   r14
  41dbbc:	mov    ecx,0x32
  41dbc1:	call   QWORD PTR [rip+0x36cb1]        # 0x454878
  41dbc7:	movzx  r10d,WORD PTR [rip+0x34401]        # 0x451fd0
  41dbcf:	xor    r10w,WORD PTR [rip+0x343fb]        # 0x451fd2
  41dbd7:	nop    WORD PTR [rax+rax*1+0x0]
  41dbe0:	xor    WORD PTR [rbx],r10w
  41dbe4:	add    rbx,0x2
  41dbe8:	cmp    rbx,rsi
  41dbeb:	jne    0x41dbe0
  41dbed:	mov    QWORD PTR [rsp+0x20],r13
  41dbf2:	mov    r9d,ebp
  41dbf5:	mov    r8d,edi
  41dbf8:	mov    rdx,r12
  41dbfb:	mov    rcx,QWORD PTR [rip+0x2100e]        # 0x43ec10
  41dc02:	call   r14
  41dc05:	mov    rcx,r12
  41dc08:	add    rsp,0x40
  41dc0c:	pop    rbx
  41dc0d:	pop    rsi
  41dc0e:	pop    rdi
  41dc0f:	pop    rbp
  41dc10:	pop    r12
  41dc12:	pop    r13
  41dc14:	pop    r14
  41dc16:	jmp    0x43a748
  41dc1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc20:	lea    rcx,[rip+0x27440]        # 0x445067
  41dc27:	mov    edx,0x7
  41dc2c:	call   0x433f38
  41dc31:	call   QWORD PTR [rip+0x36cb9]        # 0x4548f0
  41dc37:	lea    rcx,[rax+0x30]
  41dc3b:	call   0x43a780
  41dc40:	nop
  41dc41:	add    rsp,0x40
  41dc45:	pop    rbx
  41dc46:	pop    rsi
  41dc47:	pop    rdi
  41dc48:	pop    rbp
  41dc49:	pop    r12
  41dc4b:	pop    r13
  41dc4d:	pop    r14
  41dc4f:	ret    
  41dc50:	mov    QWORD PTR [rsp+0x20],r13
  41dc55:	mov    r9d,ebp
  41dc58:	xor    r8d,r8d
  41dc5b:	mov    rdx,r12
  41dc5e:	mov    rcx,QWORD PTR [rip+0x20fab]        # 0x43ec10
  41dc65:	mov    r14,QWORD PTR [rip+0x36c44]        # 0x4548b0
  41dc6c:	call   r14
  41dc6f:	mov    ecx,0x32
  41dc74:	call   QWORD PTR [rip+0x36bfe]        # 0x454878
  41dc7a:	jmp    0x41dbed
  41dc7f:	nop
  41dc80:	sub    rsp,0x28
  41dc84:	mov    edx,DWORD PTR [rip+0x33d62]        # 0x4519ec
  41dc8a:	test   edx,edx
  41dc8c:	je     0x41dc98
  41dc8e:	mov    eax,DWORD PTR [rip+0x33d54]        # 0x4519e8
  41dc94:	test   eax,eax
  41dc96:	jne    0x41dcc0
  41dc98:	lea    rcx,[rip+0x273c8]        # 0x445067
  41dc9f:	mov    edx,0x7
  41dca4:	call   0x433f38
  41dca9:	call   QWORD PTR [rip+0x36c41]        # 0x4548f0
  41dcaf:	lea    rcx,[rax+0x30]
  41dcb3:	add    rsp,0x28
  41dcb7:	jmp    0x43a780
  41dcbc:	nop    DWORD PTR [rax+0x0]
  41dcc0:	add    rsp,0x28
  41dcc4:	jmp    0x41db10
  41dcc9:	nop    DWORD PTR [rax+0x0]
  41dcd0:	sub    rsp,0x58
  41dcd4:	xor    eax,eax
  41dcd6:	mov    r10d,ecx
  41dcd9:	mov    rcx,QWORD PTR [rip+0x20f30]        # 0x43ec10
  41dce0:	cmp    rcx,0xffffffffffffffff
  41dce4:	je     0x41dd5e
  41dce6:	movzx  eax,WORD PTR [rsp+0x80]
  41dcee:	sub    r9d,0x1
  41dcf2:	sub    edx,0x1
  41dcf5:	mov    WORD PTR [rsp+0x46],r9w
  41dcfb:	mov    WORD PTR [rsp+0x42],dx
  41dd00:	sub    r8d,0x1
  41dd04:	movzx  edx,WORD PTR [rip+0x342c7]        # 0x451fd2
  41dd0b:	mov    WORD PTR [rsp+0x44],r8w
  41dd11:	lea    r8,[rsp+0x30]
  41dd16:	sub    r10d,0x1
  41dd1a:	mov    BYTE PTR [rsp+0x30],0x20
  41dd1f:	lea    r9d,[rax-0x1]
  41dd23:	movzx  eax,WORD PTR [rsp+0x88]
  41dd2b:	mov    QWORD PTR [rsp+0x20],r8
  41dd30:	mov    WORD PTR [rsp+0x40],r10w
  41dd36:	xor    r8d,r8d
  41dd39:	movzx  r9d,r9w
  41dd3d:	mov    WORD PTR [rsp+0x32],dx
  41dd42:	lea    rdx,[rsp+0x40]
  41dd47:	sub    eax,0x1
  41dd4a:	shl    eax,0x10
  41dd4d:	or     r9d,eax
  41dd50:	call   QWORD PTR [rip+0x36ae2]        # 0x454838
  41dd56:	test   eax,eax
  41dd58:	setne  al
  41dd5b:	movzx  eax,al
  41dd5e:	add    rsp,0x58
  41dd62:	ret    
  41dd63:	nop    DWORD PTR [rax]
  41dd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd70:	sub    rsp,0x48
  41dd74:	mov    rcx,QWORD PTR [rip+0x20e95]        # 0x43ec10
  41dd7b:	mov    eax,0x18
  41dd80:	cmp    rcx,0xffffffffffffffff
  41dd84:	je     0x41dda0
  41dd86:	lea    rdx,[rsp+0x20]
  41dd8b:	call   QWORD PTR [rip+0x369e7]        # 0x454778
  41dd91:	movsx  eax,WORD PTR [rsp+0x30]
  41dd96:	movsx  edx,WORD PTR [rsp+0x2c]
  41dd9b:	sub    eax,edx
  41dd9d:	add    eax,0x1
  41dda0:	add    rsp,0x48
  41dda4:	ret    
  41dda5:	nop
  41dda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddb0:	sub    rsp,0x48
  41ddb4:	mov    rcx,QWORD PTR [rip+0x20e55]        # 0x43ec10
  41ddbb:	mov    eax,0x50
  41ddc0:	cmp    rcx,0xffffffffffffffff
  41ddc4:	je     0x41dde0
  41ddc6:	lea    rdx,[rsp+0x20]
  41ddcb:	call   QWORD PTR [rip+0x369a7]        # 0x454778
  41ddd1:	movsx  eax,WORD PTR [rsp+0x2e]
  41ddd6:	movsx  edx,WORD PTR [rsp+0x2a]
  41dddb:	sub    eax,edx
  41dddd:	add    eax,0x1
  41dde0:	add    rsp,0x48
  41dde4:	ret    
  41dde5:	nop
  41dde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddf0:	push   rbp
  41ddf1:	push   rdi
  41ddf2:	push   rsi
  41ddf3:	push   rbx
  41ddf4:	sub    rsp,0x38
  41ddf8:	test   r8d,r8d
  41ddfb:	mov    edi,ecx
  41ddfd:	mov    esi,edx
  41ddff:	mov    ebx,r8d
  41de02:	jle    0x41de70
  41de04:	call   0x41ddb0
  41de09:	mov    r8d,eax
  41de0c:	lea    eax,[rdi+rbx*1+0x1]
  41de10:	mov    r9d,esi
  41de13:	lea    edx,[rdi+0x1]
  41de16:	lea    esi,[rbx-0x1]
  41de19:	mov    DWORD PTR [rsp+0x20],0x1
  41de21:	mov    DWORD PTR [rsp+0x28],eax
  41de25:	mov    ecx,0x1
  41de2a:	call   0x41dcd0
  41de2f:	mov    rbp,QWORD PTR [rip+0x36a12]        # 0x454848
  41de36:	movsxd rsi,esi
  41de39:	xor    ebx,ebx
  41de3b:	add    rsi,0x1
  41de3f:	nop
  41de40:	mov    rcx,QWORD PTR [rip+0x20dc9]        # 0x43ec10
  41de47:	cmp    rcx,0xffffffffffffffff
  41de4b:	je     0x41de55
  41de4d:	lea    edx,[rbx+rdi*1]
  41de50:	shl    edx,0x10
  41de53:	call   rbp
  41de55:	add    rbx,0x1
  41de59:	call   0x41da80
  41de5e:	cmp    rbx,rsi
  41de61:	jne    0x41de40
  41de63:	add    rsp,0x38
  41de67:	pop    rbx
  41de68:	pop    rsi
  41de69:	pop    rdi
  41de6a:	pop    rbp
  41de6b:	ret    
  41de6c:	nop    DWORD PTR [rax+0x0]
  41de70:	call   0x41ddb0
  41de75:	mov    r8d,eax
  41de78:	lea    eax,[rdi+rbx*1+0x1]
  41de7c:	lea    edx,[rdi+0x1]
  41de7f:	mov    r9d,esi
  41de82:	mov    DWORD PTR [rsp+0x20],0x1
  41de8a:	mov    ecx,0x1
  41de8f:	mov    DWORD PTR [rsp+0x28],eax
  41de93:	lea    edi,[rsi+rbx*1]
  41de96:	mov    esi,ebx
  41de98:	call   0x41dcd0
  41de9d:	test   ebx,ebx
  41de9f:	not    esi
  41dea1:	jne    0x41de2f
  41dea3:	jmp    0x41de63
  41dea5:	nop
  41dea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deb0:	push   rbx
  41deb1:	sub    rsp,0x50
  41deb5:	mov    ebx,ecx
  41deb7:	mov    rcx,QWORD PTR [rip+0x20d52]        # 0x43ec10
  41debe:	cmp    rcx,0xffffffffffffffff
  41dec2:	je     0x41df30
  41dec4:	lea    rdx,[rsp+0x30]
  41dec9:	call   QWORD PTR [rip+0x368a9]        # 0x454778
  41decf:	mov    rax,QWORD PTR [rsp+0x3a]
  41ded4:	mov    edx,0x1
  41ded9:	lea    r8,[rsp+0x20]
  41dede:	mov    QWORD PTR [rsp+0x20],rax
  41dee3:	shr    eax,0x10
  41dee6:	lea    ecx,[rax+rbx*1-0x1]
  41deea:	mov    WORD PTR [rsp+0x26],cx
  41deef:	mov    rcx,QWORD PTR [rip+0x20d1a]        # 0x43ec10
  41def6:	call   QWORD PTR [rip+0x3696c]        # 0x454868
  41defc:	movzx  eax,WORD PTR [rsp+0x24]
  41df01:	lea    edx,[rax+0x1]
  41df04:	movzx  eax,WORD PTR [rsp+0x26]
  41df09:	mov    ecx,edx
  41df0b:	sub    cx,WORD PTR [rsp+0x20]
  41df10:	lea    edx,[rax+0x1]
  41df13:	sub    dx,WORD PTR [rsp+0x22]
  41df18:	mov    eax,edx
  41df1a:	movzx  edx,cx
  41df1d:	mov    rcx,QWORD PTR [rip+0x20cec]        # 0x43ec10
  41df24:	shl    eax,0x10
  41df27:	or     edx,eax
  41df29:	call   QWORD PTR [rip+0x36929]        # 0x454858
  41df2f:	nop
  41df30:	add    rsp,0x50
  41df34:	pop    rbx
  41df35:	ret    
  41df36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df40:	push   rbx
  41df41:	sub    rsp,0x20
  41df45:	call   0x41d690
  41df4a:	mov    rcx,QWORD PTR [rip+0x20cbf]        # 0x43ec10
  41df51:	movzx  edx,WORD PTR [rip+0x34088]        # 0x451fe0
  41df58:	cmp    rcx,0xffffffffffffffff
  41df5c:	je     0x41df64
  41df5e:	call   QWORD PTR [rip+0x368fc]        # 0x454860
  41df64:	movsx  ebx,WORD PTR [rip+0x34081]        # 0x451fec
  41df6b:	call   0x41dd70
  41df70:	cmp    ebx,eax
  41df72:	je     0x41df80
  41df74:	movsx  ecx,WORD PTR [rip+0x34071]        # 0x451fec
  41df7b:	call   0x41deb0
  41df80:	cmp    QWORD PTR [rip+0x20c88],0xffffffffffffffff        # 0x43ec10
  41df88:	je     0x41df9d
  41df8a:	mov    edx,DWORD PTR [rip+0x34064]        # 0x451ff4
  41df90:	mov    rcx,QWORD PTR [rip+0x20c89]        # 0x43ec20
  41df97:	call   QWORD PTR [rip+0x368bb]        # 0x454858
  41df9d:	call   QWORD PTR [rip+0x3694d]        # 0x4548f0
  41dfa3:	mov    rcx,rax
  41dfa6:	add    rsp,0x20
  41dfaa:	pop    rbx
  41dfab:	jmp    0x43a578
  41dfb0:	sub    rsp,0x28
  41dfb4:	call   0x41d600
  41dfb9:	call   0x41dd70
  41dfbe:	mov    ecx,DWORD PTR [rip+0x35914]        # 0x4538d8
  41dfc4:	cmp    eax,ecx
  41dfc6:	je     0x41dfcd
  41dfc8:	call   0x41deb0
  41dfcd:	call   0x41dd70
  41dfd2:	mov    DWORD PTR [rip+0x35900],eax        # 0x4538d8
  41dfd8:	call   0x41ddb0
  41dfdd:	mov    rcx,QWORD PTR [rip+0x20c2c]        # 0x43ec10
  41dfe4:	mov    DWORD PTR [rip+0x3590e],eax        # 0x4538f8
  41dfea:	movsx  edx,WORD PTR [rip+0x33fe1]        # 0x451fd2
  41dff1:	cmp    rcx,0xffffffffffffffff
  41dff5:	je     0x41e000
  41dff7:	movzx  edx,dx
  41dffa:	call   QWORD PTR [rip+0x36860]        # 0x454860
  41e000:	call   0x41da00
  41e005:	call   QWORD PTR [rip+0x368e5]        # 0x4548f0
  41e00b:	mov    rcx,rax
  41e00e:	add    rsp,0x28
  41e012:	jmp    0x43a578
  41e017:	nop    WORD PTR [rax+rax*1+0x0]
  41e020:	push   rsi
  41e021:	push   rbx
  41e022:	sub    rsp,0x58
  41e026:	mov    ebx,ecx
  41e028:	mov    rcx,QWORD PTR [rip+0x20be1]        # 0x43ec10
  41e02f:	mov    esi,edx
  41e031:	cmp    rcx,0xffffffffffffffff
  41e035:	je     0x41e07b
  41e037:	lea    rdx,[rsp+0x30]
  41e03c:	call   QWORD PTR [rip+0x36736]        # 0x454778
  41e042:	mov    rax,QWORD PTR [rsp+0x3a]
  41e047:	lea    r8,[rsp+0x20]
  41e04c:	mov    ecx,eax
  41e04e:	mov    QWORD PTR [rsp+0x20],rax
  41e053:	lea    eax,[rax+rbx*1-0x1]
  41e057:	shr    ecx,0x10
  41e05a:	lea    edx,[rcx+rsi*1-0x1]
  41e05e:	mov    WORD PTR [rsp+0x24],ax
  41e063:	mov    rcx,QWORD PTR [rip+0x20ba6]        # 0x43ec10
  41e06a:	mov    WORD PTR [rsp+0x26],dx
  41e06f:	mov    edx,0x1
  41e074:	call   QWORD PTR [rip+0x367ee]        # 0x454868
  41e07a:	nop
  41e07b:	add    rsp,0x58
  41e07f:	pop    rbx
  41e080:	pop    rsi
  41e081:	ret    
  41e082:	nop    DWORD PTR [rax+0x0]
  41e086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e090:	sub    rsp,0x28
  41e094:	imul   ecx,ecx,0x3e8
  41e09a:	call   QWORD PTR [rip+0x367d8]        # 0x454878
  41e0a0:	xor    eax,eax
  41e0a2:	add    rsp,0x28
  41e0a6:	ret    
  41e0a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e0b0:	push   rbx
  41e0b1:	sub    rsp,0x90
  41e0b8:	mov    ebx,ecx
  41e0ba:	call   0x41bc80
  41e0bf:	test   eax,eax
  41e0c1:	je     0x41e0e0
  41e0c3:	mov    rax,QWORD PTR [rip+0x33cae]        # 0x451d78
  41e0ca:	sub    eax,DWORD PTR [rip+0x33cb0]        # 0x451d80
  41e0d0:	add    rsp,0x90
  41e0d7:	pop    rbx
  41e0d8:	ret    
  41e0d9:	nop    DWORD PTR [rax+0x0]
  41e0e0:	lea    rdx,[rsp+0x50]
  41e0e5:	mov    ecx,ebx
  41e0e7:	call   QWORD PTR [rip+0x3686b]        # 0x454958
  41e0ed:	cmp    eax,0xffffffff
  41e0f0:	je     0x41e110
  41e0f2:	test   eax,eax
  41e0f4:	mov    eax,0x1
  41e0f9:	cmovns eax,DWORD PTR [rsp+0x68]
  41e0fe:	add    rsp,0x90
  41e105:	pop    rbx
  41e106:	ret    
  41e107:	nop    WORD PTR [rax+rax*1+0x0]
  41e110:	mov    eax,0x1
  41e115:	jmp    0x41e0d0
  41e117:	nop    WORD PTR [rax+rax*1+0x0]
  41e120:	sub    rsp,0x28
  41e124:	cmp    ecx,0x2710
  41e12a:	je     0x41e135
  41e12c:	add    rsp,0x28
  41e130:	jmp    0x424260
  41e135:	call   QWORD PTR [rip+0x36635]        # 0x454770
  41e13b:	lea    rdx,[rip+0x26f28]        # 0x44506a
  41e142:	lea    rcx,[rip+0x339b7]        # 0x451b00
  41e149:	mov    r8d,eax
  41e14c:	call   0x433f00
  41e151:	lea    rax,[rip+0x339a8]        # 0x451b00
  41e158:	add    rsp,0x28
  41e15c:	ret    
  41e15d:	nop    DWORD PTR [rax]
  41e160:	sub    rsp,0x28
  41e164:	xor    eax,eax
  41e166:	test   cx,cx
  41e169:	je     0x41e180
  41e16b:	movzx  ecx,cx
  41e16e:	mov    edx,0x157
  41e173:	call   0x43a6e0
  41e178:	cmp    eax,0x1
  41e17b:	sbb    eax,eax
  41e17d:	or     eax,0x1
  41e180:	add    rsp,0x28
  41e184:	ret    
  41e185:	nop
  41e186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e190:	push   rsi
  41e191:	push   rbx
  41e192:	sub    rsp,0x28
  41e196:	mov    rbx,rcx
  41e199:	mov    esi,edx
  41e19b:	call   0x43a588
  41e1a0:	cdqe   
  41e1a2:	cmp    rax,rbx
  41e1a5:	je     0x41e1bf
  41e1a7:	lea    rax,[rbx+0x1]
  41e1ab:	cmp    rax,0x1
  41e1af:	jbe    0x41e1bf
  41e1b1:	call   0x43a588
  41e1b6:	neg    eax
  41e1b8:	cdqe   
  41e1ba:	cmp    rax,rbx
  41e1bd:	jne    0x41e210
  41e1bf:	test   esi,esi
  41e1c1:	je     0x41e1f2
  41e1c3:	cmp    esi,0x2
  41e1c6:	jne    0x41e1e3
  41e1c8:	lea    rcx,[rip+0x20a31]        # 0x43ec00
  41e1cf:	mov    edx,0xd
  41e1d4:	call   0x41bba0
  41e1d9:	mov    ecx,0x1
  41e1de:	call   0x43a790
  41e1e3:	xor    ebx,ebx
  41e1e5:	test   esi,esi
  41e1e7:	jne    0x41e200
  41e1e9:	mov    eax,ebx
  41e1eb:	add    rsp,0x28
  41e1ef:	pop    rbx
  41e1f0:	pop    rsi
  41e1f1:	ret    
  41e1f2:	add    rsp,0x28
  41e1f6:	pop    rbx
  41e1f7:	pop    rsi
  41e1f8:	jmp    0x41bce0
  41e1fd:	nop    DWORD PTR [rax]
  41e200:	mov    ecx,esi
  41e202:	call   0x43a688
  41e207:	mov    eax,ebx
  41e209:	add    rsp,0x28
  41e20d:	pop    rbx
  41e20e:	pop    rsi
  41e20f:	ret    
  41e210:	mov    ebx,0xffffffff
  41e215:	jmp    0x41e1e9
  41e217:	nop    WORD PTR [rax+rax*1+0x0]
  41e220:	push   r15
  41e222:	push   r14
  41e224:	push   r13
  41e226:	push   r12
  41e228:	push   rbp
  41e229:	push   rdi
  41e22a:	push   rsi
  41e22b:	push   rbx
  41e22c:	sub    rsp,0x98
  41e233:	mov    esi,ecx
  41e235:	mov    r14,rdx
  41e238:	mov    rbx,r8
  41e23b:	call   0x41bc80
  41e240:	test   eax,eax
  41e242:	jne    0x41e270
  41e244:	mov    r8d,ebx
  41e247:	mov    rdx,r14
  41e24a:	mov    ecx,esi
  41e24c:	call   QWORD PTR [rip+0x36746]        # 0x454998
  41e252:	cdqe   
  41e254:	add    rsp,0x98
  41e25b:	pop    rbx
  41e25c:	pop    rsi
  41e25d:	pop    rdi
  41e25e:	pop    rbp
  41e25f:	pop    r12
  41e261:	pop    r13
  41e263:	pop    r14
  41e265:	pop    r15
  41e267:	ret    
  41e268:	nop    DWORD PTR [rax+rax*1+0x0]
  41e270:	mov    rdi,QWORD PTR [rip+0x2b579]        # 0x4497f0
  41e277:	mov    rax,QWORD PTR [rip+0x33b02]        # 0x451d80
  41e27e:	xor    r13d,r13d
  41e281:	mov    rdx,QWORD PTR [rip+0x33af0]        # 0x451d78
  41e288:	mov    rbp,QWORD PTR [rip+0x36521]        # 0x4547b0
  41e28f:	mov    r15,QWORD PTR [rip+0x365e2]        # 0x454878
  41e296:	mov    r12,QWORD PTR [rip+0x3656b]        # 0x454808
  41e29d:	mov    QWORD PTR [rsp+0x38],rdi
  41e2a2:	mov    rdi,r14
  41e2a5:	cmp    rax,rdx
  41e2a8:	jae    0x41e2e1
  41e2aa:	test   rbx,rbx
  41e2ad:	je     0x41e550
  41e2b3:	lea    r8,[rip+0x33b06]        # 0x451dc0
  41e2ba:	lea    rcx,[rax+0x1]
  41e2be:	add    r13,0x1
  41e2c2:	sub    rbx,0x1
  41e2c6:	add    rdi,0x1
  41e2ca:	movzx  eax,BYTE PTR [r8+rax*1]
  41e2cf:	mov    QWORD PTR [rip+0x33aaa],rcx        # 0x451d80
  41e2d6:	mov    BYTE PTR [rdi-0x1],al
  41e2d9:	mov    rax,rcx
  41e2dc:	cmp    rax,rdx
  41e2df:	jb     0x41e2aa
  41e2e1:	test   rbx,rbx
  41e2e4:	je     0x41e550
  41e2ea:	lea    rsi,[rsp+0x58]
  41e2ef:	jmp    0x41e2fd
  41e2f1:	test   eax,eax
  41e2f3:	jne    0x41e311
  41e2f5:	mov    ecx,0x14
  41e2fa:	call   r15
  41e2fd:	mov    rdx,rsi
  41e300:	mov    rcx,QWORD PTR [rip+0x20921]        # 0x43ec28
  41e307:	call   rbp
  41e309:	test   eax,eax
  41e30b:	mov    eax,DWORD PTR [rsp+0x58]
  41e30f:	jne    0x41e2f1
  41e311:	lea    r14,[rsp+0x5c]
  41e316:	lea    rsi,[rsp+0x70]
  41e31b:	jmp    0x41e338
  41e31d:	nop    DWORD PTR [rax]
  41e320:	cmp    ax,0x4
  41e324:	je     0x41e500
  41e32a:	cmp    ax,0x1
  41e32e:	je     0x41e3c0
  41e334:	mov    eax,DWORD PTR [rsp+0x58]
  41e338:	lea    edx,[rax-0x1]
  41e33b:	test   eax,eax
  41e33d:	mov    DWORD PTR [rsp+0x58],edx
  41e341:	je     0x41e560
  41e347:	test   rbx,rbx
  41e34a:	je     0x41e550
  41e350:	mov    r9,r14
  41e353:	mov    r8d,0x1
  41e359:	mov    rdx,rsi
  41e35c:	mov    rcx,QWORD PTR [rip+0x208c5]        # 0x43ec28
  41e363:	call   r12
  41e366:	test   eax,eax
  41e368:	je     0x41e580
  41e36e:	mov    eax,DWORD PTR [rsp+0x5c]
  41e372:	test   eax,eax
  41e374:	je     0x41e334
  41e376:	movzx  eax,WORD PTR [rsp+0x70]
  41e37b:	cmp    ax,0x2
  41e37f:	jne    0x41e320
  41e381:	test   BYTE PTR [rsp+0x80],0x4
  41e389:	je     0x41e334
  41e38b:	cmp    DWORD PTR [rip+0x33662],0x1        # 0x4519f4
  41e392:	jne    0x41e334
  41e394:	movzx  eax,WORD PTR [rsp+0x7a]
  41e399:	mov    edx,0x3
  41e39e:	test   ah,0xff
  41e3a1:	jne    0x41e58c
  41e3a7:	mov    rax,QWORD PTR [rsp+0x38]
  41e3ac:	mov    rcx,QWORD PTR [rax]
  41e3af:	call   0x417ea0
  41e3b4:	call   0x403fa0
  41e3b9:	jmp    0x41e334
  41e3be:	xchg   ax,ax
  41e3c0:	cmp    DWORD PTR [rsp+0x74],0x1
  41e3c5:	jne    0x41e334
  41e3cb:	cmp    WORD PTR [rsp+0x7c],0x0
  41e3d1:	je     0x41e334
  41e3d7:	movzx  eax,WORD PTR [rsp+0x7a]
  41e3dc:	lea    edx,[rax-0x10]
  41e3df:	cmp    dx,0x2
  41e3e3:	jbe    0x41e334
  41e3e9:	movzx  edx,BYTE PTR [rsp+0x7e]
  41e3ee:	movzx  ecx,WORD PTR [rsp+0x78]
  41e3f3:	cmp    dl,0x8
  41e3f6:	mov    r10d,ecx
  41e3f9:	mov    ecx,DWORD PTR [rsp+0x80]
  41e400:	je     0x41e5a0
  41e406:	jbe    0x41e6be
  41e40c:	cmp    dl,0x9
  41e40f:	je     0x41e87d
  41e415:	cmp    dl,0x20
  41e418:	jne    0x41e5a5
  41e41e:	and    ecx,0xc
  41e421:	mov    eax,0x0
  41e426:	mov    DWORD PTR [rsp+0x20],0x1
  41e42e:	cmovne edx,eax
  41e431:	mov    BYTE PTR [rsp+0x60],dl
  41e435:	test   r10d,r10d
  41e438:	je     0x41e334
  41e43e:	movsxd r9,DWORD PTR [rsp+0x20]
  41e443:	cmp    rbx,r9
  41e446:	jb     0x41e5e7
  41e44c:	lea    rax,[rsp+0x60]
  41e451:	mov    QWORD PTR [rsp+0x40],r14
  41e456:	mov    QWORD PTR [rsp+0x48],rsi
  41e45b:	mov    r14,rbx
  41e45e:	mov    esi,r10d
  41e461:	mov    rbx,r13
  41e464:	mov    QWORD PTR [rsp+0x28],rax
  41e469:	movsxd rax,DWORD PTR [rsp+0x20]
  41e46e:	mov    r13,r9
  41e471:	mov    QWORD PTR [rsp+0x30],rax
  41e476:	jmp    0x41e4ab
  41e478:	nop    DWORD PTR [rax+rax*1+0x0]
  41e480:	mov    rdx,QWORD PTR [rsp+0x28]
  41e485:	lea    rcx,[rdi+rbx*1]
  41e489:	mov    r8,r13
  41e48c:	sub    r14,r13
  41e48f:	call   0x43a6b8
  41e494:	add    rbx,QWORD PTR [rsp+0x30]
  41e499:	sub    esi,0x1
  41e49c:	je     0x41e6a9
  41e4a2:	cmp    r14,r13
  41e4a5:	jb     0x41e5d1
  41e4ab:	cmp    DWORD PTR [rsp+0x20],0x1
  41e4b0:	jne    0x41e480
  41e4b2:	cmp    BYTE PTR [rsp+0x60],0x1a
  41e4b7:	jne    0x41e480
  41e4b9:	mov    eax,DWORD PTR [rip+0x35419]        # 0x4538d8
  41e4bf:	xor    ecx,ecx
  41e4c1:	lea    edx,[rax-0x1]
  41e4c4:	call   0x41c2f0
  41e4c9:	call   0x41c4d0
  41e4ce:	call   QWORD PTR [rip+0x3641c]        # 0x4548f0
  41e4d4:	lea    rcx,[rax+0x30]
  41e4d8:	call   0x43a780
  41e4dd:	call   0x41d520
  41e4e2:	call   0x43a588
  41e4e7:	xor    edx,edx
  41e4e9:	movsxd rcx,eax
  41e4ec:	call   0x41e190
  41e4f1:	call   0x41d3e0
  41e4f6:	call   0x41ad90
  41e4fb:	jmp    0x41e499
  41e4fd:	nop    DWORD PTR [rax]
  41e500:	movsx  ecx,WORD PTR [rsp+0x74]
  41e505:	movsx  edx,WORD PTR [rsp+0x76]
  41e50a:	mov    DWORD PTR [rip+0x353e8],ecx        # 0x4538f8
  41e510:	mov    DWORD PTR [rip+0x353c2],edx        # 0x4538d8
  41e516:	call   0x41e020
  41e51b:	mov    edx,DWORD PTR [rip+0x353b7]        # 0x4538d8
  41e521:	mov    ecx,DWORD PTR [rip+0x353d1]        # 0x4538f8
  41e527:	call   0x401d30
  41e52c:	mov    edx,DWORD PTR [rip+0x353a6]        # 0x4538d8
  41e532:	mov    ecx,DWORD PTR [rip+0x353c0]        # 0x4538f8
  41e538:	call   0x420770
  41e53d:	call   0x41ad20
  41e542:	jmp    0x41e334
  41e547:	nop    WORD PTR [rax+rax*1+0x0]
  41e550:	mov    rax,r13
  41e553:	jmp    0x41e254
  41e558:	nop    DWORD PTR [rax+rax*1+0x0]
  41e560:	test   rbx,rbx
  41e563:	je     0x41e550
  41e565:	mov    rax,QWORD PTR [rip+0x33814]        # 0x451d80
  41e56c:	mov    rdx,QWORD PTR [rip+0x33805]        # 0x451d78
  41e573:	jmp    0x41e2a5
  41e578:	nop    DWORD PTR [rax+rax*1+0x0]
  41e580:	mov    rax,0xffffffffffffffff
  41e587:	jmp    0x41e254
  41e58c:	mov    rax,QWORD PTR [rip+0x2b25d]        # 0x4497f0
  41e593:	mov    rcx,QWORD PTR [rax]
  41e596:	call   0x417e10
  41e59b:	jmp    0x41e3b4
  41e5a0:	mov    edx,0x7f
  41e5a5:	and    ecx,0x3
  41e5a8:	je     0x41e870
  41e5ae:	lea    rax,[rsp+0x60]
  41e5b3:	mov    BYTE PTR [rsp+0x60],0x1b
  41e5b8:	mov    rcx,rax
  41e5bb:	lea    rax,[rsp+0x61]
  41e5c0:	mov    BYTE PTR [rax],dl
  41e5c2:	add    rax,0x1
  41e5c6:	sub    eax,ecx
  41e5c8:	mov    DWORD PTR [rsp+0x20],eax
  41e5cc:	jmp    0x41e435
  41e5d1:	mov    r10d,esi
  41e5d4:	mov    r9,r13
  41e5d7:	mov    rsi,QWORD PTR [rsp+0x48]
  41e5dc:	mov    r13,rbx
  41e5df:	mov    rbx,r14
  41e5e2:	mov    r14,QWORD PTR [rsp+0x40]
  41e5e7:	mov    eax,0x200
  41e5ec:	mov    QWORD PTR [rip+0x33781],0x0        # 0x451d78
  41e5f7:	mov    QWORD PTR [rip+0x3377e],0x0        # 0x451d80
  41e602:	sub    rax,r9
  41e605:	mov    QWORD PTR [rsp+0x20],rax
  41e60a:	je     0x41e334
  41e610:	mov    eax,r10d
  41e613:	lea    rcx,[rsp+0x60]
  41e618:	xor    edx,edx
  41e61a:	sub    eax,0x1
  41e61d:	mov    QWORD PTR [rsp+0x28],r13
  41e622:	mov    QWORD PTR [rsp+0xe8],rdi
  41e62a:	mov    QWORD PTR [rsp+0xf0],rbx
  41e632:	mov    QWORD PTR [rsp+0x30],r14
  41e637:	lea    r11,[rip+0x33782]        # 0x451dc0
  41e63e:	mov    QWORD PTR [rsp+0x40],rsi
  41e643:	mov    edi,eax
  41e645:	mov    rbx,r9
  41e648:	mov    r13,rcx
  41e64b:	mov    r14d,edx
  41e64e:	mov    rsi,r9
  41e651:	jmp    0x41e668
  41e653:	add    r14d,0x1
  41e657:	add    r11,rsi
  41e65a:	cmp    QWORD PTR [rsp+0x20],rbx
  41e65f:	lea    rax,[rbx+rsi*1]
  41e663:	jbe    0x41e685
  41e665:	mov    rbx,rax
  41e668:	mov    rcx,r11
  41e66b:	mov    r8,rsi
  41e66e:	mov    rdx,r13
  41e671:	call   0x43a6b8
  41e676:	cmp    r14d,edi
  41e679:	mov    r11,rax
  41e67c:	mov    QWORD PTR [rip+0x336f5],rbx        # 0x451d78
  41e683:	jne    0x41e653
  41e685:	mov    r13,QWORD PTR [rsp+0x28]
  41e68a:	mov    rdi,QWORD PTR [rsp+0xe8]
  41e692:	mov    rbx,QWORD PTR [rsp+0xf0]
  41e69a:	mov    r14,QWORD PTR [rsp+0x30]
  41e69f:	mov    rsi,QWORD PTR [rsp+0x40]
  41e6a4:	jmp    0x41e334
  41e6a9:	mov    r13,rbx
  41e6ac:	mov    rsi,QWORD PTR [rsp+0x48]
  41e6b1:	mov    rbx,r14
  41e6b4:	mov    r14,QWORD PTR [rsp+0x40]
  41e6b9:	jmp    0x41e334
  41e6be:	test   dl,dl
  41e6c0:	jne    0x41e5a5
  41e6c6:	lea    edx,[rax-0x21]
  41e6c9:	cmp    dx,0x4f
  41e6cd:	ja     0x41e8cc
  41e6d3:	movzx  r8d,dx
  41e6d7:	lea    rdx,[rip+0x2699e]        # 0x44507c
  41e6de:	movsxd r8,DWORD PTR [rdx+r8*4]
  41e6e2:	add    rdx,r8
  41e6e5:	jmp    rdx
  41e6e7:	and    ecx,0x10
  41e6ea:	je     0x41e894
  41e6f0:	mov    BYTE PTR [rsp+0x60],0x0
  41e6f5:	mov    DWORD PTR [rsp+0x20],0x1
  41e6fd:	jmp    0x41e435
  41e702:	mov    BYTE PTR [rsp+0x60],0x8
  41e707:	mov    DWORD PTR [rsp+0x20],0x1
  41e70f:	jmp    0x41e435
  41e714:	test   cl,0x3
  41e717:	je     0x41e960
  41e71d:	mov    ecx,0x641b
  41e722:	mov    BYTE PTR [rsp+0x62],0x0
  41e727:	mov    DWORD PTR [rsp+0x20],0x2
  41e72f:	mov    WORD PTR [rsp+0x60],cx
  41e734:	jmp    0x41e435
  41e739:	nop    DWORD PTR [rax+0x0]
  41e740:	mov    DWORD PTR [rsp+0x60],0x4c5b1b
  41e748:	mov    DWORD PTR [rsp+0x20],0x3
  41e750:	jmp    0x41e435
  41e755:	and    ecx,0xc
  41e758:	je     0x41e94b
  41e75e:	mov    r8d,0x661b
  41e764:	mov    BYTE PTR [rsp+0x62],0x0
  41e769:	mov    DWORD PTR [rsp+0x20],0x2
  41e771:	mov    WORD PTR [rsp+0x60],r8w
  41e777:	jmp    0x41e435
  41e77c:	nop    DWORD PTR [rax+0x0]
  41e780:	and    ecx,0xc
  41e783:	je     0x41e980
  41e789:	mov    DWORD PTR [rsp+0x60],0x75311b
  41e791:	mov    DWORD PTR [rsp+0x20],0x3
  41e799:	jmp    0x41e435
  41e79e:	xchg   ax,ax
  41e7a0:	and    ecx,0xc
  41e7a3:	je     0x41e903
  41e7a9:	mov    DWORD PTR [rsp+0x60],0x6d311b
  41e7b1:	mov    DWORD PTR [rsp+0x20],0x3
  41e7b9:	jmp    0x41e435
  41e7be:	xchg   ax,ax
  41e7c0:	and    ecx,0xc
  41e7c3:	je     0x41e8ee
  41e7c9:	mov    r9d,0x621b
  41e7cf:	mov    BYTE PTR [rsp+0x62],0x0
  41e7d4:	mov    DWORD PTR [rsp+0x20],0x2
  41e7dc:	mov    WORD PTR [rsp+0x60],r9w
  41e7e2:	jmp    0x41e435
  41e7e7:	nop    WORD PTR [rax+rax*1+0x0]
  41e7f0:	and    ecx,0xc
  41e7f3:	je     0x41e918
  41e7f9:	mov    DWORD PTR [rsp+0x60],0x70311b
  41e801:	mov    DWORD PTR [rsp+0x20],0x3
  41e809:	jmp    0x41e435
  41e80e:	xchg   ax,ax
  41e810:	mov    eax,0x3e1b
  41e815:	mov    BYTE PTR [rsp+0x62],0x0
  41e81a:	mov    DWORD PTR [rsp+0x20],0x2
  41e822:	mov    WORD PTR [rsp+0x60],ax
  41e827:	jmp    0x41e435
  41e82c:	mov    r11d,0x3c1b
  41e832:	mov    BYTE PTR [rsp+0x62],0x0
  41e837:	mov    DWORD PTR [rsp+0x20],0x2
  41e83f:	mov    WORD PTR [rsp+0x60],r11w
  41e845:	jmp    0x41e435
  41e84a:	and    ecx,0xc
  41e84d:	je     0x41e934
  41e853:	mov    DWORD PTR [rsp+0x60],0x6e311b
  41e85b:	mov    DWORD PTR [rsp+0x20],0x3
  41e863:	jmp    0x41e435
  41e868:	nop    DWORD PTR [rax+rax*1+0x0]
  41e870:	lea    rax,[rsp+0x60]
  41e875:	mov    rcx,rax
  41e878:	jmp    0x41e5c0
  41e87d:	and    ecx,0x13
  41e880:	jne    0x41e8b0
  41e882:	mov    BYTE PTR [rsp+0x60],0x9
  41e887:	mov    DWORD PTR [rsp+0x20],0x1
  41e88f:	jmp    0x41e435
  41e894:	xor    r9d,r9d
  41e897:	test   r10d,r10d
  41e89a:	mov    DWORD PTR [rsp+0x20],0x0
  41e8a2:	jne    0x41e44c
  41e8a8:	jmp    0x41e334
  41e8ad:	nop    DWORD PTR [rax]
  41e8b0:	mov    eax,0x91b
  41e8b5:	mov    BYTE PTR [rsp+0x62],0x0
  41e8ba:	mov    DWORD PTR [rsp+0x20],0x2
  41e8c2:	mov    WORD PTR [rsp+0x60],ax
  41e8c7:	jmp    0x41e435
  41e8cc:	lea    edx,[rax-0x41]
  41e8cf:	cmp    dx,0x19
  41e8d3:	ja     0x41e894
  41e8d5:	sub    eax,0x40
  41e8d8:	mov    BYTE PTR [rsp+0x60],0x1b
  41e8dd:	mov    DWORD PTR [rsp+0x20],0x2
  41e8e5:	mov    BYTE PTR [rsp+0x61],al
  41e8e9:	jmp    0x41e435
  41e8ee:	mov    DWORD PTR [rsp+0x60],0x445b1b
  41e8f6:	mov    DWORD PTR [rsp+0x20],0x3
  41e8fe:	jmp    0x41e435
  41e903:	mov    DWORD PTR [rsp+0x60],0x425b1b
  41e90b:	mov    DWORD PTR [rsp+0x20],0x3
  41e913:	jmp    0x41e435
  41e918:	mov    eax,0x761b
  41e91d:	mov    BYTE PTR [rsp+0x62],0x0
  41e922:	mov    DWORD PTR [rsp+0x20],0x2
  41e92a:	mov    WORD PTR [rsp+0x60],ax
  41e92f:	jmp    0x41e435
  41e934:	mov    eax,0x16
  41e939:	mov    DWORD PTR [rsp+0x20],0x1
  41e941:	mov    WORD PTR [rsp+0x60],ax
  41e946:	jmp    0x41e435
  41e94b:	mov    DWORD PTR [rsp+0x60],0x435b1b
  41e953:	mov    DWORD PTR [rsp+0x20],0x3
  41e95b:	jmp    0x41e435
  41e960:	and    ecx,0xc
  41e963:	jne    0x41e71d
  41e969:	mov    edx,0x4
  41e96e:	mov    DWORD PTR [rsp+0x20],0x1
  41e976:	mov    WORD PTR [rsp+0x60],dx
  41e97b:	jmp    0x41e435
  41e980:	mov    DWORD PTR [rsp+0x60],0x415b1b
  41e988:	mov    DWORD PTR [rsp+0x20],0x3
  41e990:	jmp    0x41e435
  41e995:	nop
  41e996:	nop
  41e997:	nop
  41e998:	nop
  41e999:	nop
  41e99a:	nop
  41e99b:	nop
  41e99c:	nop
  41e99d:	nop
  41e99e:	nop
  41e99f:	nop
  41e9a0:	push   rbp
  41e9a1:	push   rdi
  41e9a2:	push   rsi
  41e9a3:	push   rbx
  41e9a4:	sub    rsp,0x28
  41e9a8:	test   rcx,rcx
  41e9ab:	je     0x41eb40
  41e9b1:	call   0x422a00
  41e9b6:	test   rax,rax
  41e9b9:	mov    rbx,rax
  41e9bc:	je     0x41eb40
  41e9c2:	cmp    BYTE PTR [rax],0x7e
  41e9c5:	je     0x41e9d3
  41e9c7:	mov    rax,rbx
  41e9ca:	add    rsp,0x28
  41e9ce:	pop    rbx
  41e9cf:	pop    rsi
  41e9d0:	pop    rdi
  41e9d1:	pop    rbp
  41e9d2:	ret    
  41e9d3:	movzx  eax,BYTE PTR [rax+0x1]
  41e9d7:	test   al,al
  41e9d9:	je     0x41eac5
  41e9df:	cmp    al,0x2f
  41e9e1:	je     0x41eac5
  41e9e7:	cmp    al,0x5c
  41e9e9:	je     0x41eac5
  41e9ef:	mov    ecx,0x101
  41e9f4:	lea    rbp,[rbx+0x1]
  41e9f8:	call   0x4227b0
  41e9fd:	movsx  edx,BYTE PTR [rbx+0x1]
  41ea01:	test   edx,edx
  41ea03:	mov    r11d,edx
  41ea06:	je     0x41eb5e
  41ea0c:	cmp    edx,0x2f
  41ea0f:	je     0x41eb5e
  41ea15:	cmp    edx,0x5c
  41ea18:	je     0x41eb5e
  41ea1e:	lea    r8,[rbx+0x2]
  41ea22:	mov    r10d,0x2
  41ea28:	jmp    0x41ea47
  41ea2a:	nop    WORD PTR [rax+rax*1+0x0]
  41ea30:	add    r8,0x1
  41ea34:	cmp    r9d,0x5c
  41ea38:	lea    rdi,[r10+0x1]
  41ea3c:	je     0x41ea5b
  41ea3e:	cmp    r9d,0x2f
  41ea42:	je     0x41ea5b
  41ea44:	mov    r10,rdi
  41ea47:	movsx  r9d,BYTE PTR [r8]
  41ea4b:	mov    BYTE PTR [rax+r10*1-0x2],r11b
  41ea50:	mov    rbp,r8
  41ea53:	test   r9d,r9d
  41ea56:	mov    r11d,r9d
  41ea59:	jne    0x41ea30
  41ea5b:	sub    r10,0x1
  41ea5f:	mov    rdx,QWORD PTR [rip+0x3369a]        # 0x452100
  41ea66:	mov    BYTE PTR [rax+r10*1],0x0
  41ea6b:	test   rdx,rdx
  41ea6e:	je     0x41eb13
  41ea74:	mov    rcx,rax
  41ea77:	call   rdx
  41ea79:	test   rax,rax
  41ea7c:	mov    rdi,rax
  41ea7f:	je     0x41eb13
  41ea85:	mov    rcx,rax
  41ea88:	call   0x43a620
  41ea8d:	mov    rcx,rbp
  41ea90:	mov    rsi,rax
  41ea93:	call   0x43a620
  41ea98:	lea    rcx,[rsi+rax*1+0x1]
  41ea9d:	call   0x4227b0
  41eaa2:	mov    rdx,rdi
  41eaa5:	mov    rcx,rax
  41eaa8:	mov    rsi,rax
  41eaab:	call   0x4323b0
  41eab0:	mov    rdx,rbp
  41eab3:	mov    rcx,rax
  41eab6:	call   0x43a640
  41eabb:	mov    rcx,rdi
  41eabe:	call   0x43a748
  41eac3:	jmp    0x41eb13
  41eac5:	lea    rcx,[rip+0x26876]        # 0x445342
  41eacc:	call   0x43a730
  41ead1:	test   rax,rax
  41ead4:	mov    rdi,rax
  41ead7:	je     0x41eb50
  41ead9:	mov    rcx,rax
  41eadc:	call   0x43a620
  41eae1:	mov    rsi,rax
  41eae4:	lea    rbp,[rbx+0x1]
  41eae8:	mov    rcx,rbp
  41eaeb:	call   0x43a620
  41eaf0:	lea    rcx,[rsi+rax*1+0x1]
  41eaf5:	call   0x4227b0
  41eafa:	mov    rdx,rdi
  41eafd:	mov    rcx,rax
  41eb00:	mov    rsi,rax
  41eb03:	call   0x4323b0
  41eb08:	mov    rdx,rbp
  41eb0b:	mov    rcx,rax
  41eb0e:	call   0x43a640
  41eb13:	mov    rcx,rbx
  41eb16:	call   0x43a748
  41eb1b:	mov    rcx,rsi
  41eb1e:	call   0x422a00
  41eb23:	mov    rcx,rsi
  41eb26:	mov    rbx,rax
  41eb29:	call   0x43a748
  41eb2e:	mov    rax,rbx
  41eb31:	add    rsp,0x28
  41eb35:	pop    rbx
  41eb36:	pop    rsi
  41eb37:	pop    rdi
  41eb38:	pop    rbp
  41eb39:	ret    
  41eb3a:	nop    WORD PTR [rax+rax*1+0x0]
  41eb40:	xor    ebx,ebx
  41eb42:	mov    rax,rbx
  41eb45:	add    rsp,0x28
  41eb49:	pop    rbx
  41eb4a:	pop    rsi
  41eb4b:	pop    rdi
  41eb4c:	pop    rbp
  41eb4d:	ret    
  41eb4e:	xchg   ax,ax
  41eb50:	mov    esi,0x1
  41eb55:	lea    rdi,[rip+0x267e4]        # 0x445340
  41eb5c:	jmp    0x41eae4
  41eb5e:	xor    r10d,r10d
  41eb61:	jmp    0x41ea5f
  41eb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb70:	push   r15
  41eb72:	push   r14
  41eb74:	push   r13
  41eb76:	push   r12
  41eb78:	push   rbp
  41eb79:	push   rdi
  41eb7a:	push   rsi
  41eb7b:	push   rbx
  41eb7c:	sub    rsp,0x48
  41eb80:	xor    ebp,ebp
  41eb82:	mov    rdi,rcx
  41eb85:	mov    DWORD PTR [rsp+0x2c],0x0
  41eb8d:	mov    QWORD PTR [rsp+0x20],0x0
  41eb96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eba0:	mov    rcx,rdi
  41eba3:	mov    r12,QWORD PTR [rip+0x2009e]        # 0x43ec48
  41ebaa:	call   0x43a620
  41ebaf:	mov    QWORD PTR [rsp+0x30],rax
  41ebb4:	movzx  eax,BYTE PTR [rdi]
  41ebb7:	cmp    al,0x7e
  41ebb9:	je     0x41ee30
  41ebbf:	test   al,al
  41ebc1:	je     0x41ee30
  41ebc7:	test   r12,r12
  41ebca:	je     0x41eddc
  41ebd0:	mov    eax,DWORD PTR [rsp+0x30]
  41ebd4:	test   eax,eax
  41ebd6:	jle    0x41eddc
  41ebdc:	mov    eax,DWORD PTR [rsp+0x30]
  41ebe0:	mov    r13,QWORD PTR [r12]
  41ebe4:	mov    rsi,rdi
  41ebe7:	mov    DWORD PTR [rsp+0x38],0x0
  41ebef:	mov    DWORD PTR [rsp+0x3c],eax
  41ebf3:	test   r13,r13
  41ebf6:	je     0x41edc5
  41ebfc:	lea    r15,[r12+0x8]
  41ec01:	mov    r14,r13
  41ec04:	jmp    0x41ec21
  41ec06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec10:	add    r15,0x8
  41ec14:	mov    r14,QWORD PTR [r15-0x8]
  41ec18:	test   r14,r14
  41ec1b:	je     0x41edc5
  41ec21:	mov    rcx,r14
  41ec24:	call   0x43a620
  41ec29:	mov    rdx,r14
  41ec2c:	mov    r8,rax
  41ec2f:	mov    rcx,rsi
  41ec32:	mov    rbx,rax
  41ec35:	call   0x43a618
  41ec3a:	test   eax,eax
  41ec3c:	jne    0x41ec10
  41ec3e:	mov    eax,DWORD PTR [rsp+0x38]
  41ec42:	lea    r13d,[rax+rbx*1-0x1]
  41ec47:	movsxd rbx,r13d
  41ec4a:	lea    r12d,[rbp+r13*1+0x0]
  41ec4f:	cmp    DWORD PTR [rsp+0x2c],r12d
  41ec54:	jle    0x41ee00
  41ec5a:	movsxd rcx,ebp
  41ec5d:	add    rcx,QWORD PTR [rsp+0x20]
  41ec62:	mov    rdx,rdi
  41ec65:	mov    r8,rbx
  41ec68:	add    rdi,rbx
  41ec6b:	call   0x43a610
  41ec70:	mov    rcx,rdi
  41ec73:	mov    rbp,QWORD PTR [rip+0x1ffc6]        # 0x43ec40
  41ec7a:	call   0x43a620
  41ec7f:	test   eax,eax
  41ec81:	jle    0x41ee60
  41ec87:	movzx  edx,BYTE PTR [rdi]
  41ec8a:	cmp    dl,0x5c
  41ec8d:	sete   r8b
  41ec91:	cmp    dl,0x2f
  41ec94:	sete   cl
  41ec97:	or     r8b,cl
  41ec9a:	jne    0x41ee60
  41eca0:	test   dl,dl
  41eca2:	je     0x41ee60
  41eca8:	mov    DWORD PTR [rsp+0x38],eax
  41ecac:	mov    rbx,rdi
  41ecaf:	xor    esi,esi
  41ecb1:	test   rbp,rbp
  41ecb4:	je     0x41ed70
  41ecba:	mov    r14,QWORD PTR [rbp+0x0]
  41ecbe:	test   r14,r14
  41ecc1:	je     0x41ed70
  41ecc7:	lea    r15,[rbp+0x8]
  41eccb:	jmp    0x41ece1
  41eccd:	nop    DWORD PTR [rax]
  41ecd0:	add    r15,0x8
  41ecd4:	mov    r14,QWORD PTR [r15-0x8]
  41ecd8:	test   r14,r14
  41ecdb:	je     0x41ed70
  41ece1:	mov    rcx,r14
  41ece4:	call   0x43a620
  41ece9:	mov    rdx,r14
  41ecec:	mov    r8,rax
  41ecef:	mov    rcx,rbx
  41ecf2:	call   0x43a618
  41ecf7:	test   eax,eax
  41ecf9:	jne    0x41ecd0
  41ecfb:	or     r13d,esi
  41ecfe:	je     0x41eda7
  41ed04:	lea    ecx,[rsi+0x1]
  41ed07:	movsxd rsi,esi
  41ed0a:	movsxd rcx,ecx
  41ed0d:	call   0x4227b0
  41ed12:	mov    r8,rsi
  41ed15:	mov    rdx,rdi
  41ed18:	mov    rbx,rax
  41ed1b:	mov    rcx,rax
  41ed1e:	add    rdi,rsi
  41ed21:	call   0x43a610
  41ed26:	mov    BYTE PTR [rbx+rsi*1],0x0
  41ed2a:	mov    rcx,rbx
  41ed2d:	call   0x41e9a0
  41ed32:	mov    rcx,rbx
  41ed35:	mov    rsi,rax
  41ed38:	call   0x43a748
  41ed3d:	mov    rcx,rsi
  41ed40:	call   0x43a620
  41ed45:	lea    ebp,[r12+rax*1]
  41ed49:	cmp    DWORD PTR [rsp+0x2c],ebp
  41ed4d:	jle    0x41ee3a
  41ed53:	movsxd rcx,r12d
  41ed56:	add    rcx,QWORD PTR [rsp+0x20]
  41ed5b:	mov    rdx,rsi
  41ed5e:	call   0x43a640
  41ed63:	mov    rcx,rsi
  41ed66:	call   0x43a748
  41ed6b:	jmp    0x41eba0
  41ed70:	add    esi,0x1
  41ed73:	cmp    esi,DWORD PTR [rsp+0x38]
  41ed77:	je     0x41ecfb
  41ed7d:	add    rbx,0x1
  41ed81:	movzx  eax,BYTE PTR [rbx]
  41ed84:	cmp    al,0x5c
  41ed86:	sete   cl
  41ed89:	cmp    al,0x2f
  41ed8b:	sete   dl
  41ed8e:	or     cl,dl
  41ed90:	jne    0x41ecfb
  41ed96:	test   al,al
  41ed98:	jne    0x41ecb1
  41ed9e:	or     r13d,esi
  41eda1:	jne    0x41ed04
  41eda7:	mov    rax,QWORD PTR [rsp+0x20]
  41edac:	movsxd r12,r12d
  41edaf:	mov    BYTE PTR [rax+r12*1],0x0
  41edb4:	add    rsp,0x48
  41edb8:	pop    rbx
  41edb9:	pop    rsi
  41edba:	pop    rdi
  41edbb:	pop    rbp
  41edbc:	pop    r12
  41edbe:	pop    r13
  41edc0:	pop    r14
  41edc2:	pop    r15
  41edc4:	ret    
  41edc5:	add    DWORD PTR [rsp+0x38],0x1
  41edca:	add    rsi,0x1
  41edce:	mov    eax,DWORD PTR [rsp+0x38]
  41edd2:	cmp    eax,DWORD PTR [rsp+0x3c]
  41edd6:	jne    0x41ebf3
  41eddc:	mov    rax,QWORD PTR [rsp+0x30]
  41ede1:	mov    r13d,eax
  41ede4:	movsxd rbx,eax
  41ede7:	lea    r12d,[rbp+r13*1+0x0]
  41edec:	cmp    DWORD PTR [rsp+0x2c],r12d
  41edf1:	jg     0x41ec5a
  41edf7:	nop    WORD PTR [rax+rax*1+0x0]
  41ee00:	mov    eax,DWORD PTR [rsp+0x2c]
  41ee04:	mov    rcx,QWORD PTR [rsp+0x20]
  41ee09:	lea    eax,[rax+r13*1+0x14]
  41ee0e:	lea    edx,[rax+0x1]
  41ee11:	mov    DWORD PTR [rsp+0x2c],eax
  41ee15:	movsxd rdx,edx
  41ee18:	call   0x422820
  41ee1d:	mov    QWORD PTR [rsp+0x20],rax
  41ee22:	jmp    0x41ec5a
  41ee27:	nop    WORD PTR [rax+rax*1+0x0]
  41ee30:	xor    ebx,ebx
  41ee32:	xor    r13d,r13d
  41ee35:	jmp    0x41ec4a
  41ee3a:	mov    edx,DWORD PTR [rsp+0x2c]
  41ee3e:	mov    rcx,QWORD PTR [rsp+0x20]
  41ee43:	lea    eax,[rdx+rax*1+0x14]
  41ee47:	lea    edx,[rax+0x1]
  41ee4a:	mov    DWORD PTR [rsp+0x2c],eax
  41ee4e:	movsxd rdx,edx
  41ee51:	call   0x422820
  41ee56:	mov    QWORD PTR [rsp+0x20],rax
  41ee5b:	jmp    0x41ed53
  41ee60:	xor    esi,esi
  41ee62:	jmp    0x41ecfb
  41ee67:	nop
  41ee68:	nop
  41ee69:	nop
  41ee6a:	nop
  41ee6b:	nop
  41ee6c:	nop
  41ee6d:	nop
  41ee6e:	nop
  41ee6f:	nop
  41ee70:	push   r14
  41ee72:	push   r13
  41ee74:	push   r12
  41ee76:	push   rbp
  41ee77:	push   rdi
  41ee78:	push   rsi
  41ee79:	push   rbx
  41ee7a:	sub    rsp,0x30
  41ee7e:	mov    rsi,QWORD PTR [rcx+0x18]
  41ee82:	mov    rdi,rcx
  41ee85:	mov    rbp,rdx
  41ee88:	mov    r13d,r8d
  41ee8b:	test   rsi,rsi
  41ee8e:	je     0x41eef2
  41ee90:	mov    r12,QWORD PTR [rcx+0x10]
  41ee94:	lea    rax,[rip+0x3327d]        # 0x452118
  41ee9b:	cmp    r12,rax
  41ee9e:	je     0x41ef34
  41eea4:	lea    rax,[rip+0x33265]        # 0x452110
  41eeab:	cmp    rsi,rax
  41eeae:	je     0x41ef4f
  41eeb4:	mov    rcx,QWORD PTR [rsi]
  41eeb7:	test   rcx,rcx
  41eeba:	je     0x41ef20
  41eebc:	xor    ebx,ebx
  41eebe:	jmp    0x41eecd
  41eec0:	add    rbx,0x1
  41eec4:	mov    rcx,QWORD PTR [rsi+rbx*8]
  41eec8:	test   rcx,rcx
  41eecb:	je     0x41ef20
  41eecd:	mov    rdx,rbp
  41eed0:	call   0x43a648
  41eed5:	test   eax,eax
  41eed7:	jne    0x41eec0
  41eed9:	mov    DWORD PTR [r12],ebx
  41eedd:	mov    al,0x1
  41eedf:	mov    DWORD PTR [rdi+0x20],r13d
  41eee3:	add    rsp,0x30
  41eee7:	pop    rbx
  41eee8:	pop    rsi
  41eee9:	pop    rdi
  41eeea:	pop    rbp
  41eeeb:	pop    r12
  41eeed:	pop    r13
  41eeef:	pop    r14
  41eef1:	ret    
  41eef2:	lea    rdx,[rsp+0x28]
  41eef7:	mov    rcx,rbp
  41eefa:	mov    r8d,0xa
  41ef00:	call   0x43a5f8
  41ef05:	mov    rdx,QWORD PTR [rsp+0x28]
  41ef0a:	mov    ecx,eax
  41ef0c:	xor    eax,eax
  41ef0e:	cmp    BYTE PTR [rdx],0x0
  41ef11:	jne    0x41eee3
  41ef13:	mov    rax,QWORD PTR [rdi+0x10]
  41ef17:	mov    DWORD PTR [rax],ecx
  41ef19:	nop    DWORD PTR [rax+0x0]
  41ef20:	mov    eax,0x1
  41ef25:	add    rsp,0x30
  41ef29:	pop    rbx
  41ef2a:	pop    rsi
  41ef2b:	pop    rdi
  41ef2c:	pop    rbp
  41ef2d:	pop    r12
  41ef2f:	pop    r13
  41ef31:	pop    r14
  41ef33:	ret    
  41ef34:	mov    rax,QWORD PTR [rip+0x2aa95]        # 0x4499d0
  41ef3b:	mov    DWORD PTR [rax],0x20
  41ef41:	mov    DWORD PTR [rax+0x4],0x20
  41ef48:	mov    eax,0x1
  41ef4d:	jmp    0x41eee3
  41ef4f:	lea    rdx,[rip+0x26430]        # 0x445386
  41ef56:	mov    rcx,rbp
  41ef59:	xor    r12d,r12d
  41ef5c:	xor    ebp,ebp
  41ef5e:	lea    r13,[rip+0x2659b]        # 0x445500
  41ef65:	call   0x43a600
  41ef6a:	test   rax,rax
  41ef6d:	mov    r14,rax
  41ef70:	je     0x41efce
  41ef72:	lea    rbx,[rip+0x2659f]        # 0x445518
  41ef79:	xor    esi,esi
  41ef7b:	lea    rcx,[rip+0x263fe]        # 0x445380
  41ef82:	jmp    0x41ef94
  41ef84:	add    rbx,0x10
  41ef88:	mov    rcx,QWORD PTR [rbx-0x10]
  41ef8c:	add    esi,0x1
  41ef8f:	test   rcx,rcx
  41ef92:	je     0x41efb8
  41ef94:	mov    rdx,r14
  41ef97:	call   0x43a648
  41ef9c:	test   eax,eax
  41ef9e:	jne    0x41ef84
  41efa0:	movsxd rsi,esi
  41efa3:	shl    rsi,0x4
  41efa7:	lea    rax,[r13+rsi*1+0x0]
  41efac:	mov    edx,DWORD PTR [rax]
  41efae:	or     r12d,edx
  41efb1:	not    edx
  41efb3:	and    ebp,edx
  41efb5:	or     ebp,DWORD PTR [rax+0x4]
  41efb8:	lea    rdx,[rip+0x263c7]        # 0x445386
  41efbf:	xor    ecx,ecx
  41efc1:	call   0x43a600
  41efc6:	test   rax,rax
  41efc9:	mov    r14,rax
  41efcc:	jne    0x41ef72
  41efce:	mov    rax,QWORD PTR [rdi+0x10]
  41efd2:	mov    DWORD PTR [rax],r12d
  41efd5:	mov    DWORD PTR [rax+0x4],ebp
  41efd8:	mov    eax,0x1
  41efdd:	jmp    0x41eee3
  41efe2:	nop    DWORD PTR [rax+0x0]
  41efe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eff0:	push   rdi
  41eff1:	push   rsi
  41eff2:	push   rbx
  41eff3:	sub    rsp,0x20
  41eff7:	mov    rdi,rcx
  41effa:	mov    rcx,QWORD PTR [rip+0x1fcbf]        # 0x43ecc0
  41f001:	test   rcx,rcx
  41f004:	je     0x41f050
  41f006:	lea    rbx,[rip+0x1fcdb]        # 0x43ece8
  41f00d:	xor    esi,esi
  41f00f:	jmp    0x41f021
  41f011:	add    rbx,0x28
  41f015:	mov    rcx,QWORD PTR [rbx-0x28]
  41f019:	add    esi,0x1
  41f01c:	test   rcx,rcx
  41f01f:	je     0x41f050
  41f021:	mov    rdx,rdi
  41f024:	call   0x43a648
  41f029:	test   eax,eax
  41f02b:	jne    0x41f011
  41f02d:	movsxd rsi,esi
  41f030:	lea    rax,[rip+0x1fc89]        # 0x43ecc0
  41f037:	lea    rdx,[rsi+rsi*4]
  41f03b:	lea    rax,[rax+rdx*8]
  41f03f:	add    rsp,0x20
  41f043:	pop    rbx
  41f044:	pop    rsi
  41f045:	pop    rdi
  41f046:	ret    
  41f047:	nop    WORD PTR [rax+rax*1+0x0]
  41f050:	xor    eax,eax
  41f052:	add    rsp,0x20
  41f056:	pop    rbx
  41f057:	pop    rsi
  41f058:	pop    rdi
  41f059:	ret    
  41f05a:	nop    WORD PTR [rax+rax*1+0x0]
  41f060:	push   r15
  41f062:	push   r14
  41f064:	push   r13
  41f066:	push   r12
  41f068:	push   rbp
  41f069:	push   rdi
  41f06a:	push   rsi
  41f06b:	push   rbx
  41f06c:	sub    rsp,0x28
  41f070:	cmp    QWORD PTR [rip+0x1fc48],0x0        # 0x43ecc0
  41f078:	je     0x41f12d
  41f07e:	lea    rdi,[rip+0x1fc3b]        # 0x43ecc0
  41f085:	xor    ebp,ebp
  41f087:	mov    r13d,0x2
  41f08d:	xor    esi,esi
  41f08f:	xor    r12d,r12d
  41f092:	mov    r15d,0xc8
  41f098:	nop    DWORD PTR [rax+rax*1+0x0]
  41f0a0:	mov    ecx,0x28
  41f0a5:	mov    r14,rdi
  41f0a8:	call   0x4227b0
  41f0ad:	mov    rcx,QWORD PTR [rdi]
  41f0b0:	mov    rbx,rax
  41f0b3:	call   0x422a00
  41f0b8:	cmp    r13,rsi
  41f0bb:	mov    QWORD PTR [rbx],rax
  41f0be:	mov    QWORD PTR [rbx+0x10],0x0
  41f0c6:	mov    QWORD PTR [rbx+0x8],0x0
  41f0ce:	jb     0x41f0fa
  41f0d0:	test   rsi,rsi
  41f0d3:	cmove  rsi,r15
  41f0d7:	test   r12,r12
  41f0da:	je     0x41f0e7
  41f0dc:	mov    rax,rsi
  41f0df:	shr    rax,1
  41f0e2:	lea    rsi,[rax+rsi*1+0x1]
  41f0e7:	lea    rdx,[rsi*8+0x0]
  41f0ef:	mov    rcx,r12
  41f0f2:	call   0x422820
  41f0f7:	mov    r12,rax
  41f0fa:	mov    QWORD PTR [r12+rbp*1],rbx
  41f0fe:	add    rbp,0x8
  41f102:	add    rdi,0x28
  41f106:	mov    QWORD PTR [r12+rbp*1],0x0
  41f10e:	add    r13,0x1
  41f112:	cmp    QWORD PTR [r14+0x28],0x0
  41f117:	jne    0x41f0a0
  41f119:	mov    rax,r12
  41f11c:	add    rsp,0x28
  41f120:	pop    rbx
  41f121:	pop    rsi
  41f122:	pop    rdi
  41f123:	pop    rbp
  41f124:	pop    r12
  41f126:	pop    r13
  41f128:	pop    r14
  41f12a:	pop    r15
  41f12c:	ret    
  41f12d:	xor    r12d,r12d
  41f130:	jmp    0x41f119
  41f132:	nop    DWORD PTR [rax+0x0]
  41f136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f140:	push   rsi
  41f141:	push   rbx
  41f142:	sub    rsp,0x28
  41f146:	mov    rbx,rcx
  41f149:	call   0x41f060
  41f14e:	mov    rcx,rbx
  41f151:	mov    rsi,rax
  41f154:	mov    rdx,rax
  41f157:	call   0x4065c0
  41f15c:	mov    rcx,rsi
  41f15f:	mov    rbx,rax
  41f162:	call   0x4093d0
  41f167:	test   rbx,rbx
  41f16a:	je     0x41f18e
  41f16c:	cmp    BYTE PTR [rbx],0x0
  41f16f:	mov    rcx,rbx
  41f172:	je     0x41f180
  41f174:	add    rsp,0x28
  41f178:	pop    rbx
  41f179:	pop    rsi
  41f17a:	jmp    0x41eff0
  41f17f:	nop
  41f180:	call   0x43a748
  41f185:	xor    eax,eax
  41f187:	add    rsp,0x28
  41f18b:	pop    rbx
  41f18c:	pop    rsi
  41f18d:	ret    
  41f18e:	mov    rax,QWORD PTR [rip+0x2a65b]        # 0x4497f0
  41f195:	xor    edx,edx
  41f197:	mov    rcx,QWORD PTR [rax]
  41f19a:	call   0x414890
  41f19f:	jmp    0x41f185
  41f1a1:	nop    DWORD PTR [rax+rax*1+0x0]
  41f1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1b0:	push   rbx
  41f1b1:	sub    rsp,0x40
  41f1b5:	mov    rbx,rcx
  41f1b8:	lea    rcx,[rip+0x261c9]        # 0x445388
  41f1bf:	call   0x433f18
  41f1c4:	mov    rdx,rbx
  41f1c7:	mov    rcx,rax
  41f1ca:	call   0x41f140
  41f1cf:	test   rax,rax
  41f1d2:	mov    rbx,rax
  41f1d5:	je     0x41f22b
  41f1d7:	cmp    QWORD PTR [rax+0x18],0x0
  41f1dc:	mov    rcx,QWORD PTR [rax+0x8]
  41f1e0:	je     0x41f231
  41f1e2:	call   0x433f18
  41f1e7:	mov    rdx,QWORD PTR [rbx+0x10]
  41f1eb:	movsxd rcx,DWORD PTR [rdx]
  41f1ee:	mov    rdx,QWORD PTR [rbx+0x18]
  41f1f2:	mov    r9,QWORD PTR [rdx+rcx*8]
  41f1f6:	mov    QWORD PTR [rsp+0x20],rax
  41f1fb:	lea    rcx,[rsp+0x38]
  41f200:	mov    r8,QWORD PTR [rbx]
  41f203:	lea    rdx,[rip+0x26192]        # 0x44539c
  41f20a:	call   0x433f30
  41f20f:	mov    rdx,QWORD PTR [rsp+0x38]
  41f214:	lea    rcx,[rip+0x2619b]        # 0x4453b6
  41f21b:	call   0x4210d0
  41f220:	mov    rcx,QWORD PTR [rsp+0x38]
  41f225:	call   0x43a748
  41f22a:	nop
  41f22b:	add    rsp,0x40
  41f22f:	pop    rbx
  41f230:	ret    
  41f231:	call   0x433f18
  41f236:	mov    rdx,QWORD PTR [rbx+0x10]
  41f23a:	mov    QWORD PTR [rsp+0x20],rax
  41f23f:	lea    rcx,[rsp+0x38]
  41f244:	mov    r8,QWORD PTR [rbx]
  41f247:	mov    r9d,DWORD PTR [rdx]
  41f24a:	lea    rdx,[rip+0x26158]        # 0x4453a9
  41f251:	call   0x433f30
  41f256:	jmp    0x41f20f
  41f258:	nop    DWORD PTR [rax+rax*1+0x0]
  41f260:	push   r13
  41f262:	push   r12
  41f264:	push   rbp
  41f265:	push   rdi
  41f266:	push   rsi
  41f267:	push   rbx
  41f268:	sub    rsp,0x98
  41f26f:	mov    rbx,rcx
  41f272:	lea    rcx,[rip+0x26140]        # 0x4453b9
  41f279:	mov    esi,edx
  41f27b:	call   0x433f18
  41f280:	mov    rdx,rbx
  41f283:	mov    rcx,rax
  41f286:	call   0x41f140
  41f28b:	test   rax,rax
  41f28e:	mov    r13,rax
  41f291:	je     0x41f374
  41f297:	mov    rax,QWORD PTR [rax+0x18]
  41f29b:	test   rax,rax
  41f29e:	je     0x41f402
  41f2a4:	xor    ebp,ebp
  41f2a6:	cmp    QWORD PTR [rax],0x0
  41f2aa:	je     0x41f384
  41f2b0:	mov    r12d,0x2
  41f2b6:	xor    esi,esi
  41f2b8:	xor    ebx,ebx
  41f2ba:	xor    ebp,ebp
  41f2bc:	jmp    0x41f30a
  41f2be:	xchg   ax,ax
  41f2c0:	cmp    rbp,0x1
  41f2c4:	sbb    rdx,rdx
  41f2c7:	and    rdx,0xffffffffffffffd0
  41f2cb:	sub    rdx,0xffffffffffffff80
  41f2cf:	cmp    rbp,0x1
  41f2d3:	sbb    rsi,rsi
  41f2d6:	and    rsi,0xfffffffffffffffa
  41f2da:	add    rsi,0x10
  41f2de:	mov    rcx,rbp
  41f2e1:	call   0x422820
  41f2e6:	mov    rbp,rax
  41f2e9:	mov    QWORD PTR [rbp+rbx*1+0x0],rdi
  41f2ee:	add    rbx,0x8
  41f2f2:	add    r12,0x1
  41f2f6:	mov    QWORD PTR [rbp+rbx*1+0x0],0x0
  41f2ff:	mov    rax,QWORD PTR [r13+0x18]
  41f303:	cmp    QWORD PTR [rax+rbx*1],0x0
  41f308:	je     0x41f384
  41f30a:	mov    ecx,0x28
  41f30f:	call   0x4227b0
  41f314:	mov    rdi,rax
  41f317:	mov    rax,QWORD PTR [r13+0x18]
  41f31b:	mov    rcx,QWORD PTR [rax+rbx*1]
  41f31f:	call   0x422a00
  41f324:	cmp    rsi,r12
  41f327:	mov    QWORD PTR [rdi],rax
  41f32a:	mov    QWORD PTR [rdi+0x10],0x0
  41f332:	mov    QWORD PTR [rdi+0x8],0x0
  41f33a:	ja     0x41f2e9
  41f33c:	test   rsi,rsi
  41f33f:	je     0x41f2c0
  41f345:	test   rbp,rbp
  41f348:	je     0x41f355
  41f34a:	mov    rax,rsi
  41f34d:	shr    rax,1
  41f350:	lea    rsi,[rsi+rax*1+0x1]
  41f355:	lea    rdx,[rsi*8+0x0]
  41f35d:	jmp    0x41f2de
  41f362:	mov    rax,QWORD PTR [rip+0x2a487]        # 0x4497f0
  41f369:	xor    edx,edx
  41f36b:	mov    rcx,QWORD PTR [rax]
  41f36e:	call   0x414890
  41f373:	nop
  41f374:	add    rsp,0x98
  41f37b:	pop    rbx
  41f37c:	pop    rsi
  41f37d:	pop    rdi
  41f37e:	pop    rbp
  41f37f:	pop    r12
  41f381:	pop    r13
  41f383:	ret    
  41f384:	mov    rdx,QWORD PTR [r13+0x10]
  41f388:	mov    rsi,QWORD PTR [r13+0x0]
  41f38c:	lea    rbx,[rsp+0x20]
  41f391:	lea    rcx,[rip+0x26047]        # 0x4453df
  41f398:	movsxd rdx,DWORD PTR [rdx]
  41f39b:	mov    rdi,QWORD PTR [rax+rdx*8]
  41f39f:	call   0x433f18
  41f3a4:	mov    r8,rsi
  41f3a7:	mov    rcx,rbx
  41f3aa:	mov    rdx,rax
  41f3ad:	mov    r9,rdi
  41f3b0:	call   0x433f00
  41f3b5:	mov    rcx,rbx
  41f3b8:	mov    rdx,rbp
  41f3bb:	call   0x4065c0
  41f3c0:	mov    rcx,rbp
  41f3c3:	mov    rbx,rax
  41f3c6:	call   0x4093d0
  41f3cb:	test   rbx,rbx
  41f3ce:	je     0x41f362
  41f3d0:	cmp    BYTE PTR [rbx],0x0
  41f3d3:	je     0x41f474
  41f3d9:	cmp    DWORD PTR [r13+0x20],0x4
  41f3de:	jg     0x41f374
  41f3e0:	mov    r8d,0x4
  41f3e6:	mov    rdx,rbx
  41f3e9:	mov    rcx,r13
  41f3ec:	call   0x41ee70
  41f3f1:	nop
  41f3f2:	add    rsp,0x98
  41f3f9:	pop    rbx
  41f3fa:	pop    rsi
  41f3fb:	pop    rdi
  41f3fc:	pop    rbp
  41f3fd:	pop    r12
  41f3ff:	pop    r13
  41f401:	ret    
  41f402:	cmp    esi,0x1
  41f405:	jne    0x41f41a
  41f407:	mov    rax,QWORD PTR [rip+0x2a532]        # 0x449940
  41f40e:	mov    eax,DWORD PTR [rax]
  41f410:	test   eax,eax
  41f412:	jne    0x41f41a
  41f414:	mov    rax,QWORD PTR [r13+0x10]
  41f418:	mov    esi,DWORD PTR [rax]
  41f41a:	mov    rdi,QWORD PTR [r13+0x0]
  41f41e:	lea    rbx,[rsp+0x20]
  41f423:	lea    rcx,[rip+0x25f9e]        # 0x4453c8
  41f42a:	call   0x433f18
  41f42f:	mov    rcx,rbx
  41f432:	mov    r9d,esi
  41f435:	mov    r8,rdi
  41f438:	mov    rdx,rax
  41f43b:	call   0x433f00
  41f440:	mov    rcx,rbx
  41f443:	call   0x4055a0
  41f448:	test   rax,rax
  41f44b:	mov    rbx,rax
  41f44e:	je     0x41f374
  41f454:	mov    rcx,rax
  41f457:	call   0x409490
  41f45c:	cmp    DWORD PTR [r13+0x20],0x4
  41f461:	jg     0x41f474
  41f463:	mov    r8d,0x4
  41f469:	mov    rdx,rbx
  41f46c:	mov    rcx,r13
  41f46f:	call   0x41ee70
  41f474:	mov    rcx,rbx
  41f477:	call   0x43a748
  41f47c:	nop
  41f47d:	add    rsp,0x98
  41f484:	pop    rbx
  41f485:	pop    rsi
  41f486:	pop    rdi
  41f487:	pop    rbp
  41f488:	pop    r12
  41f48a:	pop    r13
  41f48c:	ret    
  41f48d:	nop    DWORD PTR [rax]
  41f490:	cmp    DWORD PTR [rcx+0x20],r8d
  41f494:	jg     0x41f4a0
  41f496:	jmp    0x41ee70
  41f49b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4a0:	mov    eax,0x1
  41f4a5:	ret    
  41f4a6:	nop
  41f4a7:	nop
  41f4a8:	nop
  41f4a9:	nop
  41f4aa:	nop
  41f4ab:	nop
  41f4ac:	nop
  41f4ad:	nop
  41f4ae:	nop
  41f4af:	nop
  41f4b0:	push   rdi
  41f4b1:	push   rsi
  41f4b2:	push   rbx
  41f4b3:	sub    rsp,0x20
  41f4b7:	mov    rbx,rcx
  41f4ba:	movsxd rcx,DWORD PTR [rcx+0x70]
  41f4be:	mov    esi,edx
  41f4c0:	mov    r9,QWORD PTR [rbx+0x78]
  41f4c4:	mov    edi,r8d
  41f4c7:	lea    eax,[rcx+0x2]
  41f4ca:	cdqe   
  41f4cc:	cmp    rax,r9
  41f4cf:	jb     0x41f580
  41f4d5:	test   r9,r9
  41f4d8:	je     0x41f560
  41f4de:	mov    rcx,QWORD PTR [rbx+0x60]
  41f4e2:	test   rcx,rcx
  41f4e5:	je     0x41f505
  41f4e7:	movabs rax,0x2aaaaaaaaaaaaaa9
  41f4f1:	cmp    r9,rax
  41f4f4:	ja     0x41f586
  41f4fa:	mov    rax,r9
  41f4fd:	shr    rax,1
  41f500:	lea    r9,[r9+rax*1+0x1]
  41f505:	lea    rdx,[r9*4+0x0]
  41f50d:	mov    QWORD PTR [rbx+0x78],r9
  41f511:	call   0x422820
  41f516:	movsxd rcx,DWORD PTR [rbx+0x70]
  41f51a:	mov    r9,QWORD PTR [rbx+0x78]
  41f51e:	mov    QWORD PTR [rbx+0x60],rax
  41f522:	lea    edx,[rcx+0x1]
  41f525:	mov    DWORD PTR [rbx+0x70],edx
  41f528:	mov    DWORD PTR [rax+rcx*4],edi
  41f52b:	movsxd rdx,DWORD PTR [rbx+0x70]
  41f52f:	mov    rcx,QWORD PTR [rbx+0x68]
  41f533:	mov    DWORD PTR [rax+rdx*4],0x0
  41f53a:	lea    rdx,[r9*4+0x0]
  41f542:	call   0x422820
  41f547:	movsxd rdx,DWORD PTR [rbx+0x70]
  41f54b:	mov    QWORD PTR [rbx+0x68],rax
  41f54f:	mov    DWORD PTR [rax+rdx*4-0x4],esi
  41f553:	add    rsp,0x20
  41f557:	pop    rbx
  41f558:	pop    rsi
  41f559:	pop    rdi
  41f55a:	ret    
  41f55b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f560:	mov    rcx,QWORD PTR [rbx+0x60]
  41f564:	mov    QWORD PTR [rbx+0x78],0x2
  41f56c:	mov    r9b,0x2
  41f56f:	test   rcx,rcx
  41f572:	jne    0x41f4fa
  41f574:	jmp    0x41f505
  41f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f580:	mov    rax,QWORD PTR [rbx+0x60]
  41f584:	jmp    0x41f522
  41f586:	call   0x422a20
  41f58b:	nop
  41f58c:	nop    DWORD PTR [rax+0x0]
  41f590:	push   r13
  41f592:	push   r12
  41f594:	push   rbp
  41f595:	push   rdi
  41f596:	push   rsi
  41f597:	push   rbx
  41f598:	sub    rsp,0x48
  41f59c:	mov    edx,DWORD PTR [rcx+0x70]
  41f59f:	mov    eax,DWORD PTR [rcx+0x28]
  41f5a2:	mov    rsi,rcx
  41f5a5:	mov    ecx,edx
  41f5a7:	sub    ecx,eax
  41f5a9:	test   eax,eax
  41f5ab:	jne    0x41f5c5
  41f5ad:	cmp    ecx,DWORD PTR [rsi+0x14]
  41f5b0:	jg     0x41f711
  41f5b6:	mov    DWORD PTR [rsp+0x30],0x6c6c41
  41f5be:	lea    r12,[rsp+0x30]
  41f5c3:	jmp    0x41f5df
  41f5c5:	mov    r8d,DWORD PTR [rsi+0x14]
  41f5c9:	cmp    ecx,r8d
  41f5cc:	jg     0x41f770
  41f5d2:	lea    r12,[rsp+0x30]
  41f5d7:	mov    DWORD PTR [rsp+0x30],0x746f42
  41f5df:	mov    rax,QWORD PTR [rsi+0x20]
  41f5e3:	lea    rdi,[rip+0x267d6]        # 0x445dc0
  41f5ea:	test   rax,rax
  41f5ed:	je     0x41f601
  41f5ef:	mov    rdi,QWORD PTR [rax+0x10]
  41f5f3:	lea    rdx,[rip+0x267c6]        # 0x445dc0
  41f5fa:	test   rdi,rdi
  41f5fd:	cmove  rdi,rdx
  41f601:	mov    rcx,QWORD PTR [rax]
  41f604:	call   0x409e60
  41f609:	lea    rcx,[rip+0x267c0]        # 0x445dd0
  41f610:	mov    rbp,rax
  41f613:	call   0x433f18
  41f618:	mov    rcx,rax
  41f61b:	call   0x43a620
  41f620:	mov    rcx,rbp
  41f623:	lea    rbx,[rax+0xa]
  41f627:	call   0x43a620
  41f62c:	mov    rcx,rdi
  41f62f:	mov    r13,rax
  41f632:	call   0x43a620
  41f637:	mov    edx,DWORD PTR [rsi+0x10]
  41f63a:	add    r13d,eax
  41f63d:	mov    ecx,0x1
  41f642:	lea    r9d,[r13+rbx*1+0x3]
  41f647:	cmp    r9d,edx
  41f64a:	cmovl  r9d,edx
  41f64e:	add    r9d,0x1
  41f652:	movsxd rdx,r9d
  41f655:	call   0x422990
  41f65a:	mov    rbx,rax
  41f65d:	mov    rcx,rax
  41f660:	call   0x43a620
  41f665:	lea    rdx,[rip+0x26780]        # 0x445dec
  41f66c:	lea    rcx,[rbx+rax*1]
  41f670:	call   0x433f00
  41f675:	lea    rdx,[rip+0x2677c]        # 0x445df8
  41f67c:	mov    rcx,rbp
  41f67f:	call   0x43a638
  41f684:	cmp    BYTE PTR [rbp+0x0],0x0
  41f688:	mov    r13,rax
  41f68b:	jne    0x41f723
  41f691:	mov    rcx,rbx
  41f694:	call   0x43a620
  41f699:	mov    r9d,DWORD PTR [rsi+0x70]
  41f69d:	lea    rdx,[rip+0x2675a]        # 0x445dfe
  41f6a4:	lea    rcx,[rbx+rax*1]
  41f6a8:	mov    r8,rdi
  41f6ab:	mov    QWORD PTR [rsp+0x20],r12
  41f6b0:	call   0x433f00
  41f6b5:	mov    rcx,rbx
  41f6b8:	call   0x43a620
  41f6bd:	movsxd rdx,DWORD PTR [rsi+0x10]
  41f6c1:	cmp    eax,edx
  41f6c3:	jge    0x41f6ed
  41f6c5:	lea    ecx,[rdx-0x1]
  41f6c8:	movsxd r9,eax
  41f6cb:	lea    r8,[rbx+r9*1]
  41f6cf:	mov    edi,ecx
  41f6d1:	sub    edi,eax
  41f6d3:	lea    rax,[r9+rdi*1+0x1]
  41f6d8:	add    rax,rbx
  41f6db:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6e0:	mov    BYTE PTR [r8],0x2d
  41f6e4:	add    r8,0x1
  41f6e8:	cmp    r8,rax
  41f6eb:	jne    0x41f6e0
  41f6ed:	mov    BYTE PTR [rbx+rdx*1],0x0
  41f6f1:	mov    rcx,QWORD PTR [rsi+0x58]
  41f6f5:	mov    rdx,rbx
  41f6f8:	call   0x43a640
  41f6fd:	mov    rcx,rbx
  41f700:	add    rsp,0x48
  41f704:	pop    rbx
  41f705:	pop    rsi
  41f706:	pop    rdi
  41f707:	pop    rbp
  41f708:	pop    r12
  41f70a:	pop    r13
  41f70c:	jmp    0x43a748
  41f711:	mov    DWORD PTR [rsp+0x30],0x706f54
  41f719:	lea    r12,[rsp+0x30]
  41f71e:	jmp    0x41f5df
  41f723:	mov    rcx,rbx
  41f726:	call   0x43a620
  41f72b:	lea    rdx,[rip+0x266c8]        # 0x445dfa
  41f732:	lea    rcx,[rbx+rax*1]
  41f736:	call   0x433f00
  41f73b:	mov    rcx,rbx
  41f73e:	call   0x43a620
  41f743:	lea    rcx,[rbx+rax*1]
  41f747:	mov    rdx,rbp
  41f74a:	movsxd r8,r13d
  41f74d:	call   0x43a610
  41f752:	mov    rcx,rbx
  41f755:	call   0x43a620
  41f75a:	lea    rdx,[rip+0x2669b]        # 0x445dfc
  41f761:	lea    rcx,[rbx+rax*1]
  41f765:	call   0x433f00
  41f76a:	jmp    0x41f691
  41f76f:	nop
  41f770:	pxor   xmm0,xmm0
  41f774:	sub    edx,r8d
  41f777:	pxor   xmm1,xmm1
  41f77b:	lea    r12,[rsp+0x30]
  41f780:	cvtsi2ss xmm0,eax
  41f784:	mov    rcx,r12
  41f787:	cvtsi2ss xmm1,edx
  41f78b:	lea    rdx,[rip+0x26638]        # 0x445dca
  41f792:	divss  xmm0,xmm1
  41f796:	mulss  xmm0,DWORD PTR [rip+0x26726]        # 0x445ec4
  41f79e:	cvttss2si r8d,xmm0
  41f7a3:	call   0x433f00
  41f7a8:	jmp    0x41f5df
  41f7ad:	nop    DWORD PTR [rax]
  41f7b0:	push   rbx
  41f7b1:	sub    rsp,0x20
  41f7b5:	mov    rdx,QWORD PTR [rip+0x3296c]        # 0x452128
  41f7bc:	xor    eax,eax
  41f7be:	cmp    DWORD PTR [rdx+0x14],0x5
  41f7c2:	jle    0x41f89e
  41f7c8:	mov    ecx,0xc0
  41f7cd:	call   0x422970
  41f7d2:	mov    rdx,QWORD PTR [rip+0x3294f]        # 0x452128
  41f7d9:	mov    rbx,rax
  41f7dc:	mov    rax,QWORD PTR [rip+0x3295d]        # 0x452140
  41f7e3:	mov    ecx,DWORD PTR [rax+0x10]
  41f7e6:	mov    eax,DWORD PTR [rdx+0x14]
  41f7e9:	mov    r8d,eax
  41f7ec:	mov    DWORD PTR [rbx+0x10],ecx
  41f7ef:	add    ecx,0x1
  41f7f2:	shr    r8d,0x1f
  41f7f6:	movsxd rcx,ecx
  41f7f9:	add    eax,r8d
  41f7fc:	sar    eax,1
  41f7fe:	sub    eax,0x1
  41f801:	mov    DWORD PTR [rbx+0x14],eax
  41f804:	mov    r9d,DWORD PTR [rdx+0x14]
  41f808:	sub    r9d,eax
  41f80b:	mov    eax,DWORD PTR [rdx+0x18]
  41f80e:	mov    DWORD PTR [rbx+0x1c],0xffffffff
  41f815:	mov    QWORD PTR [rbx+0x30],0x0
  41f81d:	mov    QWORD PTR [rbx+0x38],0x0
  41f825:	mov    QWORD PTR [rbx+0x40],0x0
  41f82d:	mov    QWORD PTR [rbx+0x48],0x0
  41f835:	add    eax,r9d
  41f838:	mov    QWORD PTR [rbx+0x50],0x0
  41f840:	mov    DWORD PTR [rbx+0x18],eax
  41f843:	call   0x4227b0
  41f848:	mov    rcx,QWORD PTR [rip+0x328d9]        # 0x452128
  41f84f:	mov    QWORD PTR [rbx+0x58],rax
  41f853:	mov    eax,DWORD PTR [rbx+0x14]
  41f856:	mov    DWORD PTR [rbx+0x80],0x5
  41f860:	mov    QWORD PTR [rbx+0x60],0x0
  41f868:	not    eax
  41f86a:	add    DWORD PTR [rcx+0x14],eax
  41f86d:	mov    eax,DWORD PTR [rcx+0x80]
  41f873:	mov    edx,eax
  41f875:	or     edx,0x1
  41f878:	test   al,0x8
  41f87a:	mov    DWORD PTR [rcx+0x80],edx
  41f880:	je     0x41f8a4
  41f882:	mov    rax,QWORD PTR [rcx]
  41f885:	mov    QWORD PTR [rbx+0x8],rcx
  41f889:	mov    QWORD PTR [rbx],rax
  41f88c:	mov    QWORD PTR [rcx],rbx
  41f88f:	mov    rax,QWORD PTR [rbx]
  41f892:	test   rax,rax
  41f895:	je     0x41f8b2
  41f897:	mov    QWORD PTR [rax+0x8],rbx
  41f89b:	mov    rax,rbx
  41f89e:	add    rsp,0x20
  41f8a2:	pop    rbx
  41f8a3:	ret    
  41f8a4:	call   0x41f590
  41f8a9:	mov    rcx,QWORD PTR [rip+0x32878]        # 0x452128
  41f8b0:	jmp    0x41f882
  41f8b2:	mov    rax,rbx
  41f8b5:	add    rsp,0x20
  41f8b9:	pop    rbx
  41f8ba:	ret    
  41f8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8c0:	mov    r8,QWORD PTR [rip+0x32869]        # 0x452130
  41f8c7:	test   edx,edx
  41f8c9:	mov    rax,QWORD PTR [r8]
  41f8cc:	je     0x41f8ed
  41f8ce:	test   rax,rax
  41f8d1:	je     0x41f8ed
  41f8d3:	cmp    r8,rcx
  41f8d6:	je     0x41f8f0
  41f8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8e0:	cmp    rcx,rax
  41f8e3:	je     0x41f8f0
  41f8e5:	mov    rax,QWORD PTR [rax]
  41f8e8:	test   rax,rax
  41f8eb:	jne    0x41f8e0
  41f8ed:	repz ret 
  41f8ef:	nop
  41f8f0:	test   edx,edx
  41f8f2:	mov    r8,QWORD PTR [rcx+0x8]
  41f8f6:	mov    rax,QWORD PTR [rcx]
  41f8f9:	js     0x41f953
  41f8fb:	test   rax,rax
  41f8fe:	je     0x41f9c2
  41f904:	mov    r11d,DWORD PTR [rax+0x14]
  41f908:	test   r8,r8
  41f90b:	lea    r9d,[r11-0x3]
  41f90f:	je     0x41f9aa
  41f915:	mov    r10d,DWORD PTR [r8+0x14]
  41f919:	sub    r10d,0x3
  41f91d:	lea    r11d,[r9+r10*1]
  41f921:	cmp    edx,r11d
  41f924:	jg     0x41f9c0
  41f92a:	mov    r11d,r9d
  41f92d:	sub    r11d,edx
  41f930:	cmp    r11d,r10d
  41f933:	jge    0x41f9af
  41f935:	test   rax,rax
  41f938:	jne    0x41f9dd
  41f93e:	test   r8,r8
  41f941:	je     0x41f9dd
  41f947:	add    DWORD PTR [rcx+0x14],edx
  41f94a:	sub    DWORD PTR [r8+0x14],edx
  41f94e:	sub    DWORD PTR [rcx+0x18],edx
  41f951:	jmp    0x41f98e
  41f953:	mov    r9d,DWORD PTR [rcx+0x14]
  41f957:	add    r9d,edx
  41f95a:	cmp    r9d,0x1
  41f95e:	jle    0x41f8ed
  41f960:	test   rax,rax
  41f963:	setne  r10b
  41f967:	test   r8,r8
  41f96a:	je     0x41fa32
  41f970:	test   r10b,r10b
  41f973:	je     0x41f9d0
  41f975:	mov    r10d,DWORD PTR [rax+0x14]
  41f979:	cmp    DWORD PTR [r8+0x14],r10d
  41f97d:	mov    DWORD PTR [rcx+0x14],r9d
  41f981:	jl     0x41f9d4
  41f983:	sub    DWORD PTR [rax+0x14],edx
  41f986:	add    DWORD PTR [rax+0x18],edx
  41f989:	test   r8,r8
  41f98c:	je     0x41f996
  41f98e:	or     DWORD PTR [r8+0x80],0x1
  41f996:	test   rax,rax
  41f999:	je     0x41f9a2
  41f99b:	or     DWORD PTR [rax+0x80],0x1
  41f9a2:	or     DWORD PTR [rcx+0x80],0x1
  41f9a9:	ret    
  41f9aa:	cmp    edx,r9d
  41f9ad:	jg     0x41f9b4
  41f9af:	add    DWORD PTR [rcx+0x14],edx
  41f9b2:	jmp    0x41f983
  41f9b4:	repz ret 
  41f9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9c0:	repz ret 
  41f9c2:	xor    r9d,r9d
  41f9c5:	test   r8,r8
  41f9c8:	jne    0x41f915
  41f9ce:	repz ret 
  41f9d0:	mov    DWORD PTR [rcx+0x14],r9d
  41f9d4:	sub    DWORD PTR [r8+0x14],edx
  41f9d8:	sub    DWORD PTR [rcx+0x18],edx
  41f9db:	jmp    0x41f989
  41f9dd:	mov    r11d,r10d
  41f9e0:	sub    r11d,edx
  41f9e3:	cmp    r9d,r11d
  41f9e6:	jle    0x41f947
  41f9ec:	cmp    r9d,r10d
  41f9ef:	jge    0x41fa46
  41f9f1:	sub    r10d,r9d
  41f9f4:	add    DWORD PTR [rcx+0x14],r10d
  41f9f8:	sub    DWORD PTR [r8+0x14],r10d
  41f9fc:	sub    edx,r10d
  41f9ff:	sub    DWORD PTR [rcx+0x18],r10d
  41fa03:	test   edx,edx
  41fa05:	je     0x41f989
  41fa07:	sub    edx,0x1
  41fa0a:	add    DWORD PTR [rcx+0x14],0x1
  41fa0e:	test   dl,0x1
  41fa11:	je     0x41fa28
  41fa13:	sub    DWORD PTR [r8+0x14],0x1
  41fa18:	sub    edx,0x1
  41fa1b:	sub    DWORD PTR [rcx+0x18],0x1
  41fa1f:	add    DWORD PTR [rcx+0x14],0x1
  41fa23:	test   dl,0x1
  41fa26:	jne    0x41fa13
  41fa28:	sub    DWORD PTR [rax+0x14],0x1
  41fa2c:	add    DWORD PTR [rax+0x18],0x1
  41fa30:	jmp    0x41fa03
  41fa32:	test   r10b,r10b
  41fa35:	je     0x41f9d0
  41fa37:	mov    DWORD PTR [rcx+0x14],r9d
  41fa3b:	add    DWORD PTR [rax+0x18],edx
  41fa3e:	sub    DWORD PTR [rax+0x14],edx
  41fa41:	jmp    0x41f989
  41fa46:	sub    r9d,r10d
  41fa49:	add    DWORD PTR [rcx+0x14],r9d
  41fa4d:	add    DWORD PTR [rax+0x18],r9d
  41fa51:	sub    edx,r9d
  41fa54:	sub    DWORD PTR [rax+0x14],r9d
  41fa58:	jmp    0x41fa03
  41fa5a:	nop    WORD PTR [rax+rax*1+0x0]
  41fa60:	push   rdi
  41fa61:	push   rsi
  41fa62:	push   rbx
  41fa63:	sub    rsp,0x20
  41fa67:	mov    rdi,QWORD PTR [rcx+0x8]
  41fa6b:	mov    rsi,QWORD PTR [rcx]
  41fa6e:	test   rdi,rdi
  41fa71:	sete   al
  41fa74:	jne    0x41fa83
  41fa76:	test   rsi,rsi
  41fa79:	jne    0x41fa83
  41fa7b:	add    rsp,0x20
  41fa7f:	pop    rbx
  41fa80:	pop    rsi
  41fa81:	pop    rdi
  41fa82:	ret    
  41fa83:	test   BYTE PTR [rcx+0x80],0x2
  41fa8a:	jne    0x41fa7b
  41fa8c:	test   rsi,rsi
  41fa8f:	je     0x41fa95
  41fa91:	mov    QWORD PTR [rsi+0x8],rdi
  41fa95:	test   al,al
  41fa97:	jne    0x41fb80
  41fa9d:	mov    QWORD PTR [rdi],rsi
  41faa0:	mov    rbx,rcx
  41faa3:	mov    rcx,QWORD PTR [rcx+0x60]
  41faa7:	call   0x43a748
  41faac:	mov    rcx,QWORD PTR [rbx+0x68]
  41fab0:	call   0x43a748
  41fab5:	mov    rcx,QWORD PTR [rbx+0x50]
  41fab9:	call   0x43a748
  41fabe:	mov    rcx,QWORD PTR [rbx+0x58]
  41fac2:	call   0x43a748
  41fac7:	cmp    rbx,QWORD PTR [rip+0x3265a]        # 0x452128
  41face:	je     0x41fb52
  41fad4:	test   rsi,rsi
  41fad7:	je     0x41fb40
  41fad9:	mov    rax,QWORD PTR [rip+0x32648]        # 0x452128
  41fae0:	cmp    rax,rsi
  41fae3:	je     0x41fafc
  41fae5:	test   rdi,rdi
  41fae8:	je     0x41fafc
  41faea:	cmp    rdi,rax
  41faed:	je     0x41fbe0
  41faf3:	test   rsi,rsi
  41faf6:	je     0x41fbc0
  41fafc:	mov    eax,DWORD PTR [rsi+0x18]
  41faff:	mov    edx,DWORD PTR [rbx+0x18]
  41fb02:	cmp    eax,edx
  41fb04:	jle    0x41fb1d
  41fb06:	mov    edi,DWORD PTR [rsi+0x28]
  41fb09:	sub    eax,edx
  41fb0b:	mov    DWORD PTR [rsi+0x18],edx
  41fb0e:	mov    edx,0x0
  41fb13:	sub    edi,eax
  41fb15:	mov    eax,edi
  41fb17:	cmovs  eax,edx
  41fb1a:	mov    DWORD PTR [rsi+0x28],eax
  41fb1d:	mov    eax,DWORD PTR [rbx+0x14]
  41fb20:	or     DWORD PTR [rsi+0x80],0x1
  41fb27:	mov    rcx,rbx
  41fb2a:	add    eax,0x1
  41fb2d:	add    DWORD PTR [rsi+0x14],eax
  41fb30:	add    rsp,0x20
  41fb34:	pop    rbx
  41fb35:	pop    rsi
  41fb36:	pop    rdi
  41fb37:	jmp    0x43a748
  41fb3c:	nop    DWORD PTR [rax+0x0]
  41fb40:	test   rdi,rdi
  41fb43:	je     0x41fbd0
  41fb49:	mov    rax,QWORD PTR [rip+0x325d8]        # 0x452128
  41fb50:	jmp    0x41faea
  41fb52:	test   rsi,rsi
  41fb55:	je     0x41fb8c
  41fb57:	mov    rax,rsi
  41fb5a:	jmp    0x41fb6b
  41fb5c:	nop    DWORD PTR [rax+0x0]
  41fb60:	mov    rdx,QWORD PTR [rax]
  41fb63:	test   rdx,rdx
  41fb66:	je     0x41fb8e
  41fb68:	mov    rax,rdx
  41fb6b:	test   BYTE PTR [rax+0x80],0x40
  41fb72:	jne    0x41fb60
  41fb74:	mov    QWORD PTR [rip+0x325ad],rax        # 0x452128
  41fb7b:	jmp    0x41fad4
  41fb80:	mov    QWORD PTR [rip+0x325a9],rsi        # 0x452130
  41fb87:	jmp    0x41faa0
  41fb8c:	xor    eax,eax
  41fb8e:	test   rdi,rdi
  41fb91:	je     0x41fb74
  41fb93:	mov    rax,rdi
  41fb96:	jmp    0x41fbac
  41fb98:	nop    DWORD PTR [rax+rax*1+0x0]
  41fba0:	mov    rdx,QWORD PTR [rax+0x8]
  41fba4:	test   rdx,rdx
  41fba7:	je     0x41fb74
  41fba9:	mov    rax,rdx
  41fbac:	test   BYTE PTR [rax+0x80],0x40
  41fbb3:	jne    0x41fba0
  41fbb5:	jmp    0x41fb74
  41fbb7:	nop    WORD PTR [rax+rax*1+0x0]
  41fbc0:	test   rdi,rdi
  41fbc3:	mov    rsi,rdi
  41fbc6:	jne    0x41fafc
  41fbcc:	nop    DWORD PTR [rax+0x0]
  41fbd0:	mov    rsi,QWORD PTR [rip+0x32559]        # 0x452130
  41fbd7:	jmp    0x41fafc
  41fbdc:	nop    DWORD PTR [rax+0x0]
  41fbe0:	mov    rsi,rdi
  41fbe3:	jmp    0x41fafc
  41fbe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fbf0:	test   rcx,rcx
  41fbf3:	je     0x41fc03
  41fbf5:	or     DWORD PTR [rcx+0x80],edx
  41fbfb:	mov    rcx,QWORD PTR [rcx]
  41fbfe:	test   rcx,rcx
  41fc01:	jne    0x41fbf5
  41fc03:	repz ret 
  41fc05:	nop
  41fc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc10:	test   rcx,rcx
  41fc13:	not    edx
  41fc15:	je     0x41fc2e
  41fc17:	nop    WORD PTR [rax+rax*1+0x0]
  41fc20:	and    DWORD PTR [rcx+0x80],edx
  41fc26:	mov    rcx,QWORD PTR [rcx]
  41fc29:	test   rcx,rcx
  41fc2c:	jne    0x41fc20
  41fc2e:	repz ret 
  41fc30:	movsxd r8,DWORD PTR [rcx+0x70]
  41fc34:	xor    eax,eax
  41fc36:	cmp    r8d,edx
  41fc39:	jl     0x41fc5e
  41fc3b:	movsxd rax,edx
  41fc3e:	cmp    rax,r8
  41fc41:	jae    0x41fc5e
  41fc43:	mov    rcx,QWORD PTR [rcx+0x68]
  41fc47:	jmp    0x41fc59
  41fc49:	nop    DWORD PTR [rax+0x0]
  41fc50:	add    rax,0x1
  41fc54:	cmp    rax,r8
  41fc57:	jae    0x41fc5e
  41fc59:	cmp    edx,DWORD PTR [rcx+rax*4]
  41fc5c:	jg     0x41fc50
  41fc5e:	repz ret 
  41fc60:	test   BYTE PTR [rcx+0x80],0x8
  41fc67:	jne    0x41fc70
  41fc69:	jmp    0x41f590
  41fc6e:	xchg   ax,ax
  41fc70:	repz ret 
  41fc72:	nop    DWORD PTR [rax+0x0]
  41fc76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc80:	test   edx,edx
  41fc82:	je     0x41fce0
  41fc84:	pxor   xmm0,xmm0
  41fc88:	pxor   xmm1,xmm1
  41fc8c:	pxor   xmm2,xmm2
  41fc90:	cvtsi2ss xmm0,DWORD PTR [rcx+0x70]
  41fc95:	cvtsi2ss xmm1,edx
  41fc99:	cvtss2sd xmm2,xmm0
  41fc9d:	pxor   xmm0,xmm0
  41fca1:	cvtss2sd xmm0,xmm1
  41fca5:	divsd  xmm0,QWORD PTR [rip+0x2621b]        # 0x445ec8
  41fcad:	mulsd  xmm0,xmm2
  41fcb1:	cvttsd2si eax,xmm0
  41fcb5:	movsxd rdx,eax
  41fcb8:	shl    rdx,0x2
  41fcbc:	mov    DWORD PTR [rcx+0x28],eax
  41fcbf:	mov    rax,QWORD PTR [rcx+0x60]
  41fcc3:	mov    eax,DWORD PTR [rax+rdx*1]
  41fcc6:	mov    DWORD PTR [rcx+0x2c],eax
  41fcc9:	mov    eax,DWORD PTR [rcx+0x80]
  41fccf:	mov    edx,eax
  41fcd1:	or     edx,0x1
  41fcd4:	test   al,0x8
  41fcd6:	mov    DWORD PTR [rcx+0x80],edx
  41fcdc:	je     0x41fcf0
  41fcde:	repz ret 
  41fce0:	xor    edx,edx
  41fce2:	xor    eax,eax
  41fce4:	jmp    0x41fcbc
  41fce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fcf0:	jmp    0x41f590
  41fcf5:	nop
  41fcf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd00:	push   rsi
  41fd01:	push   rbx
  41fd02:	sub    rsp,0x28
  41fd06:	mov    rsi,rcx
  41fd09:	call   0x4119d0
  41fd0e:	mov    rcx,rsi
  41fd11:	mov    edx,0xa
  41fd16:	mov    rbx,rax
  41fd19:	call   0x40ba70
  41fd1e:	mov    rax,QWORD PTR [rsi+0x10]
  41fd22:	xor    edx,edx
  41fd24:	mov    rcx,rsi
  41fd27:	mov    DWORD PTR [rbx+0x20],eax
  41fd2a:	call   0x40ba70
  41fd2f:	mov    rax,QWORD PTR [rsi]
  41fd32:	or     DWORD PTR [rbx+0x2c],0x10
  41fd36:	mov    QWORD PTR [rbx+0x18],rax
  41fd3a:	mov    rax,rbx
  41fd3d:	add    rsp,0x28
  41fd41:	pop    rbx
  41fd42:	pop    rsi
  41fd43:	ret    
  41fd44:	xchg   ax,ax
  41fd46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd50:	push   rdi
  41fd51:	push   rsi
  41fd52:	push   rbx
  41fd53:	sub    rsp,0x40
  41fd57:	lea    rbx,[rsp+0x20]
  41fd5c:	mov    rdi,rdx
  41fd5f:	mov    rsi,rcx
  41fd62:	mov    rcx,rbx
  41fd65:	call   0x40a000
  41fd6a:	mov    r8,rdi
  41fd6d:	mov    rdx,rsi
  41fd70:	mov    rcx,rbx
  41fd73:	call   0x40a030
  41fd78:	mov    rcx,rbx
  41fd7b:	call   0x41fd00
  41fd80:	add    rsp,0x40
  41fd84:	pop    rbx
  41fd85:	pop    rsi
  41fd86:	pop    rdi
  41fd87:	ret    
  41fd88:	nop    DWORD PTR [rax+rax*1+0x0]
  41fd90:	sub    rsp,0x38
  41fd94:	mov    QWORD PTR [rsp+0x48],rdx
  41fd99:	lea    rdx,[rsp+0x48]
  41fd9e:	mov    QWORD PTR [rsp+0x50],r8
  41fda3:	mov    QWORD PTR [rsp+0x58],r9
  41fda8:	mov    QWORD PTR [rsp+0x28],rdx
  41fdad:	call   0x41fd50
  41fdb2:	add    rsp,0x38
  41fdb6:	ret    
  41fdb7:	nop    WORD PTR [rax+rax*1+0x0]
  41fdc0:	push   r15
  41fdc2:	push   r14
  41fdc4:	push   r13
  41fdc6:	push   r12
  41fdc8:	push   rbp
  41fdc9:	push   rdi
  41fdca:	push   rsi
  41fdcb:	push   rbx
  41fdcc:	sub    rsp,0xc8
  41fdd3:	mov    rbp,QWORD PTR [rcx+0x20]
  41fdd7:	mov    QWORD PTR [rcx+0x60],0x0
  41fddf:	mov    QWORD PTR [rcx+0x68],0x0
  41fde7:	mov    DWORD PTR [rcx+0x70],0x0
  41fdee:	mov    QWORD PTR [rcx+0x78],0x0
  41fdf6:	test   rbp,rbp
  41fdf9:	je     0x4202d0
  41fdff:	mov    r12d,DWORD PTR [rip+0x1f37a]        # 0x43f180
  41fe06:	mov    rbx,rcx
  41fe09:	mov    rdi,QWORD PTR [rbp+0x18]
  41fe0d:	cmp    r12d,0x1
  41fe11:	je     0x41fe30
  41fe13:	lea    rdx,[rip+0x25ff7]        # 0x445e11
  41fe1a:	mov    r8d,0x5
  41fe20:	mov    rcx,rdi
  41fe23:	call   0x43a6c0
  41fe28:	test   eax,eax
  41fe2a:	je     0x420380
  41fe30:	xor    r13d,r13d
  41fe33:	xor    esi,esi
  41fe35:	mov    eax,DWORD PTR [rbp+0x20]
  41fe38:	lea    r8,[rdi+r13*1]
  41fe3c:	xor    r12d,r12d
  41fe3f:	mov    BYTE PTR [rsp+0x78],0x0
  41fe44:	mov    DWORD PTR [rsp+0x7c],0x0
  41fe4c:	mov    QWORD PTR [rsp+0x88],r8
  41fe54:	mov    BYTE PTR [rsp+0x80],0x0
  41fe5c:	sub    eax,esi
  41fe5e:	cdqe   
  41fe60:	add    rax,r8
  41fe63:	cmp    r8,rax
  41fe66:	mov    QWORD PTR [rsp+0x70],rax
  41fe6b:	jae    0x4202b6
  41fe71:	lea    rdi,[rsp+0x60]
  41fe76:	lea    rax,[rsp+0x70]
  41fe7b:	xor    ebp,ebp
  41fe7d:	mov    r13,QWORD PTR [rip+0x29b3c]        # 0x4499c0
  41fe84:	mov    QWORD PTR [rsp+0x40],rdi
  41fe89:	lea    rdi,[rsp+0x5c]
  41fe8e:	mov    QWORD PTR [rsp+0x30],rax
  41fe93:	mov    QWORD PTR [rsp+0x38],rdi
  41fe98:	lea    rdi,[rsp+0x68]
  41fe9d:	mov    QWORD PTR [rsp+0x48],rdi
  41fea2:	lea    rdi,[rsp+0x7c]
  41fea7:	jmp    0x41ff92
  41feac:	nop    DWORD PTR [rax+0x0]
  41feb0:	movzx  eax,BYTE PTR [r8]
  41feb4:	mov    rcx,QWORD PTR [rip+0x29b05]        # 0x4499c0
  41febb:	mov    edx,eax
  41febd:	and    eax,0x1f
  41fec0:	shr    dl,0x5
  41fec3:	and    edx,0x7
  41fec6:	mov    edx,DWORD PTR [rcx+rdx*4]
  41fec9:	bt     edx,eax
  41fecc:	jae    0x4202e4
  41fed2:	mov    QWORD PTR [rsp+0x90],0x1
  41fede:	movsx  ax,BYTE PTR [r8]
  41fee3:	mov    BYTE PTR [rsp+0x98],0x1
  41feeb:	mov    WORD PTR [rsp+0x9a],ax
  41fef3:	mov    rax,QWORD PTR [rsp+0x48]
  41fef8:	mov    r9,QWORD PTR [rsp+0x40]
  41fefd:	movsxd r14,ebp
  41ff00:	mov    rdx,QWORD PTR [rsp+0x38]
  41ff05:	mov    rcx,QWORD PTR [rsp+0x30]
  41ff0a:	mov    r8,r14
  41ff0d:	mov    BYTE PTR [rsp+0x80],0x1
  41ff15:	mov    QWORD PTR [rsp+0x60],0x0
  41ff1e:	xor    r15d,r15d
  41ff21:	mov    QWORD PTR [rsp+0x20],rax
  41ff26:	mov    QWORD PTR [rsp+0x68],0x0
  41ff2f:	mov    DWORD PTR [rsp+0x5c],0x0
  41ff37:	call   0x40bac0
  41ff3c:	mov    eax,DWORD PTR [rsp+0x5c]
  41ff40:	test   eax,eax
  41ff42:	jne    0x420030
  41ff48:	mov    r15,QWORD PTR [rsp+0x60]
  41ff4d:	movsxd rax,DWORD PTR [rbx+0x10]
  41ff51:	lea    r10,[r14+r15*1]
  41ff55:	cmp    r10,rax
  41ff58:	jae    0x420030
  41ff5e:	mov    rax,QWORD PTR [rsp+0x90]
  41ff66:	add    rax,QWORD PTR [rsp+0x88]
  41ff6e:	add    ebp,r15d
  41ff71:	mov    rcx,QWORD PTR [rsp+0x70]
  41ff76:	mov    r8,rax
  41ff79:	cmp    rcx,r8
  41ff7c:	mov    QWORD PTR [rsp+0x88],r8
  41ff84:	mov    BYTE PTR [rsp+0x80],0x0
  41ff8c:	jbe    0x420290
  41ff92:	cmp    BYTE PTR [rsp+0x78],0x0
  41ff97:	je     0x41feb0
  41ff9d:	mov    rax,QWORD PTR [rsp+0x30]
  41ffa2:	mov    rdx,QWORD PTR [rsp+0x88]
  41ffaa:	mov    r9,rdi
  41ffad:	mov    r8,QWORD PTR [rsp+0x70]
  41ffb2:	lea    rcx,[rax+0x2a]
  41ffb6:	sub    r8,rdx
  41ffb9:	call   0x423f00
  41ffbe:	cmp    rax,0xffffffffffffffff
  41ffc2:	mov    QWORD PTR [rsp+0x90],rax
  41ffca:	je     0x420320
  41ffd0:	cmp    rax,0xfffffffffffffffe
  41ffd4:	je     0x4203b1
  41ffda:	test   rax,rax
  41ffdd:	jne    0x42000b
  41ffdf:	mov    rax,QWORD PTR [rsp+0x88]
  41ffe7:	mov    QWORD PTR [rsp+0x90],0x1
  41fff3:	cmp    BYTE PTR [rax],0x0
  41fff6:	jne    0x42040f
  41fffc:	cmp    WORD PTR [rsp+0x9a],0x0
  420005:	jne    0x4203f1
  42000b:	mov    rcx,rdi
  42000e:	mov    BYTE PTR [rsp+0x98],0x1
  420016:	call   0x424040
  42001b:	test   eax,eax
  42001d:	je     0x41fef3
  420023:	mov    BYTE PTR [rsp+0x78],0x0
  420028:	jmp    0x41fef3
  42002d:	nop    DWORD PTR [rax]
  420030:	mov    r8d,esi
  420033:	mov    edx,r12d
  420036:	mov    rcx,rbx
  420039:	call   0x41f4b0
  42003e:	mov    eax,DWORD PTR [rsp+0x5c]
  420042:	cmp    eax,0xa
  420045:	je     0x420081
  420047:	cmp    eax,0xd
  42004a:	je     0x420081
  42004c:	mov    rdx,QWORD PTR [rbx+0x20]
  420050:	mov    rax,QWORD PTR [rsp+0x88]
  420058:	mov    r10,QWORD PTR [rdx+0x18]
  42005c:	mov    rsi,rax
  42005f:	sub    rsi,r10
  420062:	test   r15,r15
  420065:	jne    0x420090
  420067:	mov    rdx,QWORD PTR [rsp+0x90]
  42006f:	mov    rcx,QWORD PTR [rsp+0x70]
  420074:	xor    ebp,ebp
  420076:	add    esi,edx
  420078:	lea    r8,[rax+rdx*1]
  42007c:	jmp    0x41ff79
  420081:	add    r12d,0x1
  420085:	jmp    0x42004c
  420087:	nop    WORD PTR [rax+rax*1+0x0]
  420090:	test   BYTE PTR [rbx+0x80],0x10
  420097:	jne    0x4200b1
  420099:	add    rax,QWORD PTR [rsp+0x90]
  4200a1:	mov    ebp,r15d
  4200a4:	mov    rcx,QWORD PTR [rsp+0x70]
  4200a9:	mov    r8,rax
  4200ac:	jmp    0x41ff79
  4200b1:	mov    rcx,QWORD PTR [rsp+0x70]
  4200b6:	movzx  edx,BYTE PTR [rsp+0x80]
  4200be:	cmp    rax,rcx
  4200c1:	mov    r8,rcx
  4200c4:	jae    0x420482
  4200ca:	mov    rsi,QWORD PTR [rsp+0x30]
  4200cf:	add    rsi,0x2a
  4200d3:	test   dl,dl
  4200d5:	je     0x420100
  4200d7:	mov    rdx,QWORD PTR [rsp+0x90]
  4200df:	mov    rcx,r8
  4200e2:	cmp    rdx,0x1
  4200e6:	je     0x420161
  4200e8:	add    rax,rdx
  4200eb:	mov    BYTE PTR [rsp+0x80],0x0
  4200f3:	cmp    rax,r8
  4200f6:	mov    QWORD PTR [rsp+0x88],rax
  4200fe:	jae    0x420166
  420100:	cmp    BYTE PTR [rsp+0x78],0x0
  420105:	jne    0x42019a
  42010b:	movzx  edx,BYTE PTR [rax]
  42010e:	mov    ecx,edx
  420110:	and    edx,0x1f
  420113:	shr    cl,0x5
  420116:	and    ecx,0x7
  420119:	mov    ecx,DWORD PTR [r13+rcx*4+0x0]
  42011e:	bt     ecx,edx
  420121:	jae    0x420180
  420123:	mov    QWORD PTR [rsp+0x90],0x1
  42012f:	movsx  ax,BYTE PTR [rax]
  420133:	mov    rcx,r8
  420136:	mov    BYTE PTR [rsp+0x98],0x1
  42013e:	mov    edx,0x1
  420143:	mov    WORD PTR [rsp+0x9a],ax
  42014b:	mov    rax,QWORD PTR [rsp+0x88]
  420153:	cmp    rdx,0x1
  420157:	mov    BYTE PTR [rsp+0x80],0x1
  42015f:	jne    0x4200e8
  420161:	cmp    BYTE PTR [rax],0xa
  420164:	jne    0x4200e8
  420166:	mov    r8,QWORD PTR [rbx+0x20]
  42016a:	mov    r10,QWORD PTR [r8+0x18]
  42016e:	lea    r8,[rax+rdx*1]
  420172:	xor    ebp,ebp
  420174:	mov    esi,r8d
  420177:	sub    esi,r10d
  42017a:	jmp    0x41ff79
  42017f:	nop
  420180:	mov    rcx,rdi
  420183:	call   0x424040
  420188:	test   eax,eax
  42018a:	je     0x420300
  420190:	mov    r8,QWORD PTR [rsp+0x70]
  420195:	mov    BYTE PTR [rsp+0x78],0x1
  42019a:	mov    rdx,QWORD PTR [rsp+0x88]
  4201a2:	mov    r9,rdi
  4201a5:	mov    rcx,rsi
  4201a8:	sub    r8,rdx
  4201ab:	call   0x423f00
  4201b0:	cmp    rax,0xffffffffffffffff
  4201b4:	mov    QWORD PTR [rsp+0x90],rax
  4201bc:	je     0x420230
  4201be:	cmp    rax,0xfffffffffffffffe
  4201c2:	je     0x420260
  4201c8:	test   rax,rax
  4201cb:	jne    0x4201f9
  4201cd:	mov    rax,QWORD PTR [rsp+0x88]
  4201d5:	mov    QWORD PTR [rsp+0x90],0x1
  4201e1:	cmp    BYTE PTR [rax],0x0
  4201e4:	jne    0x420360
  4201ea:	cmp    WORD PTR [rsp+0x9a],0x0
  4201f3:	jne    0x420340
  4201f9:	mov    rcx,rdi
  4201fc:	mov    BYTE PTR [rsp+0x98],0x1
  420204:	call   0x424040
  420209:	test   eax,eax
  42020b:	je     0x420212
  42020d:	mov    BYTE PTR [rsp+0x78],0x0
  420212:	mov    r8,QWORD PTR [rsp+0x70]
  420217:	mov    rdx,QWORD PTR [rsp+0x90]
  42021f:	mov    rax,QWORD PTR [rsp+0x88]
  420227:	mov    rcx,r8
  42022a:	jmp    0x420153
  42022f:	nop
  420230:	mov    r8,QWORD PTR [rsp+0x70]
  420235:	mov    QWORD PTR [rsp+0x90],0x1
  420241:	mov    edx,0x1
  420246:	mov    BYTE PTR [rsp+0x98],0x0
  42024e:	mov    rax,QWORD PTR [rsp+0x88]
  420256:	mov    rcx,r8
  420259:	jmp    0x420153
  42025e:	xchg   ax,ax
  420260:	mov    r8,QWORD PTR [rsp+0x70]
  420265:	mov    rax,QWORD PTR [rsp+0x88]
  42026d:	mov    BYTE PTR [rsp+0x98],0x0
  420275:	mov    rdx,r8
  420278:	mov    rcx,r8
  42027b:	sub    rdx,rax
  42027e:	mov    QWORD PTR [rsp+0x90],rdx
  420286:	jmp    0x420153
  42028b:	nop    DWORD PTR [rax+rax*1+0x0]
  420290:	test   ebp,ebp
  420292:	mov    edx,r12d
  420295:	je     0x4202ae
  420297:	mov    r8d,esi
  42029a:	mov    rcx,rbx
  42029d:	add    r12d,0x1
  4202a1:	call   0x41f4b0
  4202a6:	mov    r8,QWORD PTR [rsp+0x88]
  4202ae:	mov    rax,QWORD PTR [rbx+0x20]
  4202b2:	mov    rdi,QWORD PTR [rax+0x18]
  4202b6:	sub    r8d,edi
  4202b9:	mov    edx,r12d
  4202bc:	mov    rcx,rbx
  4202bf:	call   0x41f4b0
  4202c4:	sub    DWORD PTR [rbx+0x70],0x1
  4202c8:	mov    QWORD PTR [rbx+0x48],0x0
  4202d0:	add    rsp,0xc8
  4202d7:	pop    rbx
  4202d8:	pop    rsi
  4202d9:	pop    rdi
  4202da:	pop    rbp
  4202db:	pop    r12
  4202dd:	pop    r13
  4202df:	pop    r14
  4202e1:	pop    r15
  4202e3:	ret    
  4202e4:	mov    rcx,rdi
  4202e7:	call   0x424040
  4202ec:	test   eax,eax
  4202ee:	je     0x4203d3
  4202f4:	mov    BYTE PTR [rsp+0x78],0x1
  4202f9:	jmp    0x41ff9d
  4202fe:	xchg   ax,ax
  420300:	lea    rdx,[rip+0x25b29]        # 0x445e30
  420307:	lea    rcx,[rip+0x25b73]        # 0x445e81
  42030e:	mov    r8d,0x8e
  420314:	call   0x435a10
  420319:	jmp    0x420190
  42031e:	xchg   ax,ax
  420320:	mov    QWORD PTR [rsp+0x90],0x1
  42032c:	mov    BYTE PTR [rsp+0x98],0x0
  420334:	jmp    0x41fef3
  420339:	nop    DWORD PTR [rax+0x0]
  420340:	lea    rdx,[rip+0x25ae9]        # 0x445e30
  420347:	lea    rcx,[rip+0x25b61]        # 0x445eaf
  42034e:	mov    r8d,0xaa
  420354:	call   0x435a10
  420359:	jmp    0x4201f9
  42035e:	xchg   ax,ax
  420360:	lea    rdx,[rip+0x25ac9]        # 0x445e30
  420367:	lea    rcx,[rip+0x25b2a]        # 0x445e98
  42036e:	mov    r8d,0xa9
  420374:	call   0x435a10
  420379:	jmp    0x4201ea
  42037e:	xchg   ax,ax
  420380:	mov    edx,0xa
  420385:	mov    rcx,rdi
  420388:	call   0x43a650
  42038d:	test   rax,rax
  420390:	mov    r14,rax
  420393:	je     0x41fe30
  420399:	test   r12d,r12d
  42039c:	jne    0x420439
  4203a2:	sub    r14,rdi
  4203a5:	lea    esi,[r14+0x1]
  4203a9:	movsxd r13,esi
  4203ac:	jmp    0x41fe35
  4203b1:	mov    rax,QWORD PTR [rsp+0x70]
  4203b6:	sub    rax,QWORD PTR [rsp+0x88]
  4203be:	mov    BYTE PTR [rsp+0x98],0x0
  4203c6:	mov    QWORD PTR [rsp+0x90],rax
  4203ce:	jmp    0x41fef3
  4203d3:	lea    rdx,[rip+0x25a56]        # 0x445e30
  4203da:	lea    rcx,[rip+0x25aa0]        # 0x445e81
  4203e1:	mov    r8d,0x8e
  4203e7:	call   0x435a10
  4203ec:	jmp    0x4202f4
  4203f1:	lea    rdx,[rip+0x25a38]        # 0x445e30
  4203f8:	lea    rcx,[rip+0x25ab0]        # 0x445eaf
  4203ff:	mov    r8d,0xaa
  420405:	call   0x435a10
  42040a:	jmp    0x42000b
  42040f:	lea    rdx,[rip+0x25a1a]        # 0x445e30
  420416:	lea    rcx,[rip+0x25a7b]        # 0x445e98
  42041d:	mov    r8d,0xa9
  420423:	call   0x435a10
  420428:	cmp    WORD PTR [rsp+0x9a],0x0
  420431:	je     0x42000b
  420437:	jmp    0x4203f1
  420439:	xor    r13d,r13d
  42043c:	xor    esi,esi
  42043e:	cmp    r12d,0x2
  420442:	jne    0x41fe35
  420448:	movzx  ebp,BYTE PTR [rax]
  42044b:	mov    BYTE PTR [rax],0x0
  42044e:	lea    rdx,[rip+0x259c2]        # 0x445e17
  420455:	mov    rax,QWORD PTR [rbx+0x20]
  420459:	mov    rdi,QWORD PTR [rax+0x18]
  42045d:	mov    rcx,rdi
  420460:	call   0x433a40
  420465:	test   rax,rax
  420468:	je     0x42048f
  42046a:	sub    rax,rdi
  42046d:	mov    esi,eax
  42046f:	movsxd r13,eax
  420472:	mov    BYTE PTR [r14],bpl
  420475:	mov    rbp,QWORD PTR [rbx+0x20]
  420479:	mov    rdi,QWORD PTR [rbp+0x18]
  42047d:	jmp    0x41fe35
  420482:	mov    rdx,QWORD PTR [rsp+0x90]
  42048a:	jmp    0x42016e
  42048f:	lea    rdx,[rip+0x25988]        # 0x445e1e
  420496:	mov    rcx,rdi
  420499:	call   0x433a40
  42049e:	test   rax,rax
  4204a1:	jne    0x42046a
  4204a3:	lea    rdx,[rip+0x2597b]        # 0x445e25
  4204aa:	mov    rcx,rdi
  4204ad:	call   0x433a40
  4204b2:	test   rax,rax
  4204b5:	je     0x420472
  4204b7:	jmp    0x42046a
  4204b9:	nop    DWORD PTR [rax+0x0]
  4204c0:	push   rbx
  4204c1:	sub    rsp,0x20
  4204c5:	cmp    QWORD PTR [rcx+0x60],0x0
  4204ca:	mov    rbx,rcx
  4204cd:	je     0x42053b
  4204cf:	mov    edx,DWORD PTR [rbx+0x28]
  4204d2:	mov    r8d,DWORD PTR [rbx+0x70]
  4204d6:	test   edx,edx
  4204d8:	js     0x4204df
  4204da:	cmp    edx,r8d
  4204dd:	jl     0x420524
  4204df:	test   r8d,r8d
  4204e2:	jle    0x420537
  4204e4:	mov    rax,QWORD PTR [rbx+0x60]
  4204e8:	mov    r9d,DWORD PTR [rbx+0x2c]
  4204ec:	cmp    r9d,DWORD PTR [rax]
  4204ef:	jl     0x420537
  4204f1:	xor    edx,edx
  4204f3:	xor    ecx,ecx
  4204f5:	lea    rax,[rax+rcx*4]
  4204f9:	jmp    0x420509
  4204fb:	nop    DWORD PTR [rax+rax*1+0x0]
  420500:	add    rax,0x4
  420504:	cmp    DWORD PTR [rax],r9d
  420507:	jg     0x420511
  420509:	add    edx,0x1
  42050c:	cmp    edx,r8d
  42050f:	jl     0x420500
  420511:	lea    eax,[rdx-0x1]
  420514:	test   edx,edx
  420516:	mov    edx,0x0
  42051b:	cmovle eax,edx
  42051e:	add    rsp,0x20
  420522:	pop    rbx
  420523:	ret    
  420524:	mov    rax,QWORD PTR [rbx+0x60]
  420528:	movsxd rcx,edx
  42052b:	mov    r9d,DWORD PTR [rbx+0x2c]
  42052f:	cmp    DWORD PTR [rax+rcx*4],r9d
  420533:	jle    0x4204f5
  420535:	jmp    0x4204df
  420537:	xor    eax,eax
  420539:	jmp    0x42051e
  42053b:	call   0x41fdc0
  420540:	jmp    0x4204cf
  420542:	nop    DWORD PTR [rax+0x0]
  420546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420550:	push   rdi
  420551:	push   rsi
  420552:	push   rbx
  420553:	sub    rsp,0x20
  420557:	test   edx,edx
  420559:	mov    rsi,rcx
  42055c:	mov    ebx,edx
  42055e:	js     0x420610
  420564:	mov    eax,DWORD PTR [rcx+0x70]
  420567:	lea    edx,[rax-0x1]
  42056a:	cmp    ebx,eax
  42056c:	cmovg  ebx,edx
  42056f:	mov    edi,DWORD PTR [rsi+0x28]
  420572:	cmp    edi,ebx
  420574:	je     0x4205c3
  420576:	mov    DWORD PTR [rsi+0x28],ebx
  420579:	mov    rcx,rsi
  42057c:	call   0x4204c0
  420581:	movsxd rdx,DWORD PTR [rsi+0x28]
  420585:	cmp    eax,edx
  420587:	jge    0x4205d0
  420589:	mov    rax,QWORD PTR [rsi+0x60]
  42058d:	mov    eax,DWORD PTR [rax+rdx*4]
  420590:	mov    DWORD PTR [rsi+0x1c],0x0
  420597:	mov    DWORD PTR [rsi+0x2c],eax
  42059a:	or     DWORD PTR [rsi+0x80],0x1
  4205a1:	cmp    ebx,edi
  4205a3:	jle    0x4205e0
  4205a5:	sub    ebx,edi
  4205a7:	cmp    ebx,0x1
  4205aa:	mov    r8d,ebx
  4205ad:	je     0x4205c3
  4205af:	mov    edx,DWORD PTR [rsi+0x14]
  4205b2:	cmp    ebx,edx
  4205b4:	jge    0x4205c3
  4205b6:	mov    eax,edx
  4205b8:	sub    eax,ebx
  4205ba:	lea    eax,[rax+rax*4]
  4205bd:	add    eax,eax
  4205bf:	cmp    edx,eax
  4205c1:	jle    0x420620
  4205c3:	add    rsp,0x20
  4205c7:	pop    rbx
  4205c8:	pop    rsi
  4205c9:	pop    rdi
  4205ca:	ret    
  4205cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4205d0:	add    edx,DWORD PTR [rsi+0x14]
  4205d3:	cmp    eax,edx
  4205d5:	jl     0x42059a
  4205d7:	sub    edx,0x1
  4205da:	movsxd rdx,edx
  4205dd:	jmp    0x420589
  4205df:	nop
  4205e0:	sub    edi,ebx
  4205e2:	cmp    edi,0x1
  4205e5:	mov    r8d,edi
  4205e8:	je     0x4205c3
  4205ea:	mov    edx,DWORD PTR [rsi+0x14]
  4205ed:	cmp    edi,edx
  4205ef:	jge    0x4205c3
  4205f1:	mov    eax,edx
  4205f3:	sub    eax,edi
  4205f5:	lea    eax,[rax+rax*4]
  4205f8:	add    eax,eax
  4205fa:	cmp    edx,eax
  4205fc:	jg     0x4205c3
  4205fe:	mov    ecx,DWORD PTR [rsi+0x18]
  420601:	add    edx,ecx
  420603:	add    rsp,0x20
  420607:	pop    rbx
  420608:	pop    rsi
  420609:	pop    rdi
  42060a:	jmp    0x404010
  42060f:	nop
  420610:	xor    ebx,ebx
  420612:	jmp    0x42056f
  420617:	nop    WORD PTR [rax+rax*1+0x0]
  420620:	mov    ecx,DWORD PTR [rsi+0x18]
  420623:	neg    r8d
  420626:	add    edx,ecx
  420628:	jmp    0x420603
  42062a:	nop    WORD PTR [rax+rax*1+0x0]
  420630:	push   rbx
  420631:	sub    rsp,0x20
  420635:	cmp    QWORD PTR [rcx+0x20],0x0
  42063a:	je     0x420689
  42063c:	mov    rbx,rcx
  42063f:	call   0x4204c0
  420644:	mov    edx,DWORD PTR [rbx+0x28]
  420647:	mov    r8d,DWORD PTR [rbx+0x14]
  42064b:	cmp    eax,edx
  42064d:	jge    0x420680
  42064f:	sub    r8d,0x1
  420653:	mov    rcx,rbx
  420656:	mov    edx,r8d
  420659:	shr    edx,0x1f
  42065c:	add    r8d,edx
  42065f:	mov    edx,0x0
  420664:	sar    r8d,1
  420667:	sub    eax,r8d
  42066a:	cmovns edx,eax
  42066d:	add    rsp,0x20
  420671:	pop    rbx
  420672:	jmp    0x420550
  420677:	nop    WORD PTR [rax+rax*1+0x0]
  420680:	mov    ecx,eax
  420682:	sub    ecx,edx
  420684:	cmp    r8d,ecx
  420687:	jle    0x42064f
  420689:	add    rsp,0x20
  42068d:	pop    rbx
  42068e:	ret    
  42068f:	nop
  420690:	push   rbx
  420691:	sub    rsp,0x20
  420695:	mov    rbx,QWORD PTR [rip+0x31a94]        # 0x452130
  42069c:	cmp    ecx,0x1
  42069f:	sete   r10b
  4206a3:	xor    r9d,r9d
  4206a6:	xor    ecx,ecx
  4206a8:	test   rbx,rbx
  4206ab:	mov    r8,rbx
  4206ae:	je     0x42075c
  4206b4:	test   r10b,r10b
  4206b7:	jne    0x4206c8
  4206b9:	mov    rax,QWORD PTR [r8+0x20]
  4206bd:	test   rax,rax
  4206c0:	je     0x4206c8
  4206c2:	test   BYTE PTR [rax+0x2c],0x10
  4206c6:	jne    0x4206cf
  4206c8:	add    r9d,DWORD PTR [r8+0x14]
  4206cc:	add    ecx,0x1
  4206cf:	mov    r8,QWORD PTR [r8]
  4206d2:	test   r8,r8
  4206d5:	jne    0x4206b4
  4206d7:	cmp    ecx,0x1
  4206da:	jle    0x42075c
  4206e0:	mov    rax,QWORD PTR [rip+0x31a59]        # 0x452140
  4206e7:	mov    eax,DWORD PTR [rax+0x14]
  4206ea:	test   eax,eax
  4206ec:	je     0x42075c
  4206ee:	mov    eax,r9d
  4206f1:	cdq    
  4206f2:	idiv   ecx
  4206f4:	mov    rdx,rbx
  4206f7:	imul   ecx,eax
  4206fa:	sub    r9d,ecx
  4206fd:	nop    DWORD PTR [rax]
  420700:	test   r10b,r10b
  420703:	jne    0x420714
  420705:	mov    rcx,QWORD PTR [rdx+0x20]
  420709:	test   rcx,rcx
  42070c:	je     0x420714
  42070e:	test   BYTE PTR [rcx+0x2c],0x10
  420712:	jne    0x42071a
  420714:	mov    DWORD PTR [rdx+0x14],eax
  420717:	mov    r8,rdx
  42071a:	mov    rdx,QWORD PTR [rdx]
  42071d:	test   rdx,rdx
  420720:	jne    0x420700
  420722:	test   r8,r8
  420725:	je     0x420730
  420727:	add    DWORD PTR [r8+0x14],r9d
  42072b:	nop    DWORD PTR [rax+rax*1+0x0]
  420730:	mov    rdx,QWORD PTR [rbx+0x8]
  420734:	test   rdx,rdx
  420737:	je     0x420745
  420739:	mov    eax,DWORD PTR [rdx+0x14]
  42073c:	add    eax,DWORD PTR [rdx+0x18]
  42073f:	add    eax,0x1
  420742:	mov    DWORD PTR [rbx+0x18],eax
  420745:	mov    rcx,rbx
  420748:	call   0x420630
  42074d:	or     DWORD PTR [rbx+0x80],0x1
  420754:	mov    rbx,QWORD PTR [rbx]
  420757:	test   rbx,rbx
  42075a:	jne    0x420730
  42075c:	add    rsp,0x20
  420760:	pop    rbx
  420761:	ret    
  420762:	nop    DWORD PTR [rax+0x0]
  420766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420770:	push   r15
  420772:	push   r14
  420774:	push   r13
  420776:	push   r12
  420778:	push   rbp
  420779:	push   rdi
  42077a:	push   rsi
  42077b:	push   rbx
  42077c:	sub    rsp,0x28
  420780:	mov    rax,QWORD PTR [rip+0x319b9]        # 0x452140
  420787:	cmp    DWORD PTR [rax+0x10],ecx
  42078a:	mov    r13d,DWORD PTR [rax+0x14]
  42078e:	je     0x420875
  420794:	mov    DWORD PTR [rax+0x14],edx
  420797:	mov    DWORD PTR [rax+0x10],ecx
  42079a:	mov    r8d,edx
  42079d:	mov    rax,QWORD PTR [rip+0x31994]        # 0x452138
  4207a4:	mov    rbx,QWORD PTR [rip+0x31985]        # 0x452130
  4207ab:	sub    r8d,DWORD PTR [rax+0x14]
  4207af:	test   rbx,rbx
  4207b2:	mov    DWORD PTR [rax+0x10],ecx
  4207b5:	mov    DWORD PTR [rax+0x18],r8d
  4207b9:	je     0x420857
  4207bf:	mov    rax,rbx
  4207c2:	xor    edi,edi
  4207c4:	mov    rax,QWORD PTR [rax]
  4207c7:	add    edi,0x1
  4207ca:	test   rax,rax
  4207cd:	jne    0x4207c4
  4207cf:	lea    r12d,[rdx-0x1]
  4207d3:	lea    r15d,[rdi+rdi*2]
  4207d7:	mov    esi,edx
  4207d9:	mov    ebp,ecx
  4207db:	mov    r14d,edi
  4207de:	cmp    r12d,r15d
  4207e1:	jg     0x420a8d
  4207e7:	cmp    QWORD PTR [rbx],0x0
  4207eb:	je     0x42082f
  4207ed:	sub    r15d,0x3
  4207f1:	mov    r8,rbx
  4207f4:	test   BYTE PTR [r8+0x80],0x40
  4207fc:	jne    0x420870
  4207fe:	mov    r8,QWORD PTR [r8]
  420801:	test   r8,r8
  420804:	jne    0x4207f4
  420806:	mov    rcx,rbx
  420809:	sub    edi,0x1
  42080c:	call   0x414e30
  420811:	mov    rcx,rbx
  420814:	call   0x41fa60
  420819:	cmp    r15d,r12d
  42081c:	jl     0x420880
  42081e:	mov    rbx,QWORD PTR [rip+0x3190b]        # 0x452130
  420825:	sub    r15d,0x3
  420829:	cmp    QWORD PTR [rbx],0x0
  42082d:	jne    0x4207f1
  42082f:	mov    rcx,QWORD PTR [rbx+0x58]
  420833:	sub    esi,0x2
  420836:	mov    DWORD PTR [rbx+0x10],ebp
  420839:	mov    DWORD PTR [rbx+0x14],esi
  42083c:	call   0x43a748
  420841:	mov    rbx,QWORD PTR [rip+0x318e8]        # 0x452130
  420848:	lea    ecx,[rbp+0x1]
  42084b:	movsxd rcx,ecx
  42084e:	call   0x4227b0
  420853:	mov    QWORD PTR [rbx+0x58],rax
  420857:	add    rsp,0x28
  42085b:	pop    rbx
  42085c:	pop    rsi
  42085d:	pop    rdi
  42085e:	pop    rbp
  42085f:	pop    r12
  420861:	pop    r13
  420863:	pop    r14
  420865:	pop    r15
  420867:	ret    
  420868:	nop    DWORD PTR [rax+rax*1+0x0]
  420870:	mov    rbx,r8
  420873:	jmp    0x420806
  420875:	cmp    r13d,edx
  420878:	jne    0x420794
  42087e:	jmp    0x420857
  420880:	mov    rax,QWORD PTR [rip+0x318b9]        # 0x452140
  420887:	mov    rbx,QWORD PTR [rip+0x318a2]        # 0x452130
  42088e:	mov    eax,DWORD PTR [rax+0x14]
  420891:	cdq    
  420892:	idiv   edi
  420894:	test   edx,edx
  420896:	jle    0x4208aa
  420898:	xor    eax,eax
  42089a:	nop    WORD PTR [rax+rax*1+0x0]
  4208a0:	add    eax,0x1
  4208a3:	mov    rbx,QWORD PTR [rbx]
  4208a6:	cmp    eax,edx
  4208a8:	jne    0x4208a0
  4208aa:	sub    esi,r13d
  4208ad:	mov    eax,esi
  4208af:	cdq    
  4208b0:	idiv   r14d
  4208b3:	imul   r14d,eax
  4208b7:	mov    r13d,eax
  4208ba:	sub    esi,r14d
  4208bd:	lea    r14d,[rbp+0x1]
  4208c1:	mov    r12d,esi
  4208c4:	mov    rsi,rbx
  4208c7:	movsxd r14,r14d
  4208ca:	jmp    0x4208fb
  4208cc:	nop    DWORD PTR [rax+0x0]
  4208d0:	mov    DWORD PTR [rsi+0x14],eax
  4208d3:	test   r12d,r12d
  4208d6:	je     0x4208e8
  4208d8:	mov    eax,DWORD PTR [rsi+0x14]
  4208db:	add    eax,r12d
  4208de:	test   eax,eax
  4208e0:	jle    0x4208e8
  4208e2:	mov    DWORD PTR [rsi+0x14],eax
  4208e5:	xor    r12d,r12d
  4208e8:	mov    rsi,QWORD PTR [rsi]
  4208eb:	test   rsi,rsi
  4208ee:	cmove  rsi,QWORD PTR [rip+0x3183a]        # 0x452130
  4208f6:	cmp    rsi,rbx
  4208f9:	je     0x42093a
  4208fb:	cmp    DWORD PTR [rsi+0x10],ebp
  4208fe:	je     0x420909
  420900:	test   BYTE PTR [rsi+0x80],0x8
  420907:	je     0x420920
  420909:	mov    eax,DWORD PTR [rsi+0x14]
  42090c:	add    eax,r13d
  42090f:	test   eax,eax
  420911:	jg     0x4208d0
  420913:	add    r12d,r13d
  420916:	jmp    0x4208d3
  420918:	nop    DWORD PTR [rax+rax*1+0x0]
  420920:	mov    rcx,QWORD PTR [rsi+0x58]
  420924:	mov    DWORD PTR [rsi+0x10],ebp
  420927:	call   0x43a748
  42092c:	mov    rcx,r14
  42092f:	call   0x4227b0
  420934:	mov    QWORD PTR [rsi+0x58],rax
  420938:	jmp    0x420909
  42093a:	mov    rbx,QWORD PTR [rip+0x317ef]        # 0x452130
  420941:	test   rbx,rbx
  420944:	je     0x420995
  420946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420950:	mov    rax,QWORD PTR [rbx+0x8]
  420954:	test   rax,rax
  420957:	je     0x420965
  420959:	mov    edx,DWORD PTR [rax+0x14]
  42095c:	add    edx,DWORD PTR [rax+0x18]
  42095f:	add    edx,0x1
  420962:	mov    DWORD PTR [rbx+0x18],edx
  420965:	cmp    QWORD PTR [rbx+0x20],0x0
  42096a:	je     0x420986
  42096c:	mov    rcx,QWORD PTR [rbx+0x60]
  420970:	call   0x43a748
  420975:	mov    rcx,QWORD PTR [rbx+0x68]
  420979:	call   0x43a748
  42097e:	mov    rcx,rbx
  420981:	call   0x41fdc0
  420986:	or     DWORD PTR [rbx+0x80],0x1
  42098d:	mov    rbx,QWORD PTR [rbx]
  420990:	test   rbx,rbx
  420993:	jne    0x420950
  420995:	test   r13d,r13d
  420998:	js     0x4209f1
  42099a:	mov    rcx,QWORD PTR [rip+0x31787]        # 0x452128
  4209a1:	call   0x420630
  4209a6:	mov    rax,QWORD PTR [rip+0x31783]        # 0x452130
  4209ad:	test   rax,rax
  4209b0:	jne    0x4209d3
  4209b2:	jmp    0x420857
  4209b7:	nop    WORD PTR [rax+rax*1+0x0]
  4209c0:	mov    edx,DWORD PTR [rax+0x10]
  4209c3:	test   edx,edx
  4209c5:	js     0x4209e8
  4209c7:	mov    rax,QWORD PTR [rax]
  4209ca:	test   rax,rax
  4209cd:	je     0x420857
  4209d3:	mov    ecx,DWORD PTR [rax+0x14]
  4209d6:	test   ecx,ecx
  4209d8:	jns    0x4209c0
  4209da:	mov    edx,DWORD PTR [rax+0x10]
  4209dd:	mov    DWORD PTR [rax+0x14],0x0
  4209e4:	test   edx,edx
  4209e6:	jns    0x4209c7
  4209e8:	mov    DWORD PTR [rax+0x10],0x0
  4209ef:	jmp    0x4209c7
  4209f1:	mov    r8,QWORD PTR [rip+0x31738]        # 0x452130
  4209f8:	mov    ecx,DWORD PTR [r8+0x14]
  4209fc:	test   ecx,ecx
  4209fe:	je     0x42099a
  420a00:	mov    r9,QWORD PTR [r8]
  420a03:	test   r9,r9
  420a06:	je     0x42099a
  420a08:	mov    rax,QWORD PTR [rip+0x31729]        # 0x452138
  420a0f:	mov    edx,DWORD PTR [rax+0x14]
  420a12:	add    edx,edi
  420a14:	mov    eax,edx
  420a16:	mov    rdx,QWORD PTR [rip+0x31723]        # 0x452140
  420a1d:	mov    r10d,DWORD PTR [rdx+0x14]
  420a21:	mov    rdx,r8
  420a24:	sub    r10d,eax
  420a27:	jmp    0x420a44
  420a29:	nop    DWORD PTR [rax+0x0]
  420a30:	cmp    r10d,ecx
  420a33:	jl     0x420a49
  420a35:	mov    rdx,QWORD PTR [rdx]
  420a38:	test   rdx,rdx
  420a3b:	je     0x42099a
  420a41:	mov    ecx,DWORD PTR [rdx+0x14]
  420a44:	cmp    ecx,0x1
  420a47:	jg     0x420a30
  420a49:	mov    eax,r10d
  420a4c:	cdq    
  420a4d:	idiv   edi
  420a4f:	mov    rdx,r9
  420a52:	imul   edi,eax
  420a55:	sub    r10d,edi
  420a58:	jmp    0x420a60
  420a5a:	mov    r8,rdx
  420a5d:	mov    rdx,QWORD PTR [rdx]
  420a60:	mov    r9,QWORD PTR [r8+0x8]
  420a64:	test   r9,r9
  420a67:	je     0x420a78
  420a69:	mov    ecx,DWORD PTR [r9+0x14]
  420a6d:	add    ecx,DWORD PTR [r9+0x18]
  420a71:	add    ecx,0x1
  420a74:	mov    DWORD PTR [r8+0x18],ecx
  420a78:	test   rdx,rdx
  420a7b:	mov    DWORD PTR [r8+0x14],eax
  420a7f:	jne    0x420a5a
  420a81:	add    eax,r10d
  420a84:	mov    DWORD PTR [r8+0x14],eax
  420a88:	jmp    0x42099a
  420a8d:	mov    eax,edx
  420a8f:	jmp    0x420891
  420a94:	xchg   ax,ax
  420a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420aa0:	push   rsi
  420aa1:	push   rbx
  420aa2:	sub    rsp,0x28
  420aa6:	mov    ebx,ecx
  420aa8:	mov    ecx,0xc0
  420aad:	mov    esi,edx
  420aaf:	call   0x422970
  420ab4:	mov    ecx,0xc0
  420ab9:	mov    QWORD PTR [rip+0x31680],rax        # 0x452140
  420ac0:	call   0x422970
  420ac5:	mov    ecx,0xc0
  420aca:	mov    QWORD PTR [rip+0x31667],rax        # 0x452138
  420ad1:	call   0x422970
  420ad6:	mov    r9,QWORD PTR [rip+0x3165b]        # 0x452138
  420add:	mov    r8,QWORD PTR [rip+0x3165c]        # 0x452140
  420ae4:	mov    edx,esi
  420ae6:	mov    DWORD PTR [rax+0x80],0x4
  420af0:	mov    ecx,ebx
  420af2:	mov    QWORD PTR [rip+0x31637],rax        # 0x452130
  420af9:	mov    QWORD PTR [rip+0x31628],rax        # 0x452128
  420b00:	mov    DWORD PTR [r9+0x80],0xe
  420b0b:	mov    DWORD PTR [r8+0x80],0x2
  420b16:	mov    DWORD PTR [r9+0x14],0x1
  420b1e:	mov    r8d,DWORD PTR [r8+0x14]
  420b22:	sub    r8d,0x2
  420b26:	mov    DWORD PTR [rax+0x14],r8d
  420b2a:	add    rsp,0x28
  420b2e:	pop    rbx
  420b2f:	pop    rsi
  420b30:	jmp    0x420770
  420b35:	nop
  420b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b40:	push   r12
  420b42:	push   rbp
  420b43:	push   rdi
  420b44:	push   rsi
  420b45:	push   rbx
  420b46:	sub    rsp,0x20
  420b4a:	mov    eax,DWORD PTR [rcx+0x80]
  420b50:	mov    rbx,rcx
  420b53:	test   al,0x10
  420b55:	je     0x420bb1
  420b57:	and    eax,0xffffffef
  420b5a:	mov    DWORD PTR [rcx+0x80],eax
  420b60:	cmp    rbx,QWORD PTR [rip+0x315d1]        # 0x452138
  420b67:	je     0x420b9f
  420b69:	mov    rcx,rbx
  420b6c:	mov    ebp,DWORD PTR [rbx+0x28]
  420b6f:	mov    rsi,QWORD PTR [rbx+0x60]
  420b73:	mov    rdi,QWORD PTR [rbx+0x68]
  420b77:	mov    r12d,DWORD PTR [rbx+0x70]
  420b7b:	call   0x41fdc0
  420b80:	mov    rcx,rbx
  420b83:	call   0x420630
  420b88:	mov    edx,DWORD PTR [rbx+0x28]
  420b8b:	cmp    edx,ebp
  420b8d:	je     0x420bc0
  420b8f:	mov    rcx,rsi
  420b92:	call   0x43a748
  420b97:	mov    rcx,rdi
  420b9a:	call   0x43a748
  420b9f:	or     DWORD PTR [rbx+0x80],0x1
  420ba6:	add    rsp,0x20
  420baa:	pop    rbx
  420bab:	pop    rsi
  420bac:	pop    rdi
  420bad:	pop    rbp
  420bae:	pop    r12
  420bb0:	ret    
  420bb1:	or     eax,0x10
  420bb4:	mov    DWORD PTR [rcx+0x80],eax
  420bba:	jmp    0x420b60
  420bbc:	nop    DWORD PTR [rax+0x0]
  420bc0:	mov    r9d,r12d
  420bc3:	mov    r8,rsi
  420bc6:	mov    rcx,rbx
  420bc9:	call   0x4043c0
  420bce:	jmp    0x420b8f
  420bd0:	mov    QWORD PTR [rcx+0x48],0x0
  420bd8:	ret    
  420bd9:	nop    DWORD PTR [rax+0x0]
  420be0:	push   r15
  420be2:	push   r14
  420be4:	push   r13
  420be6:	push   r12
  420be8:	push   rbp
  420be9:	push   rdi
  420bea:	push   rsi
  420beb:	push   rbx
  420bec:	sub    rsp,0xa8
  420bf3:	mov    r14,rcx
  420bf6:	call   0x4204c0
  420bfb:	mov    rdx,QWORD PTR [r14+0x20]
  420bff:	cmp    QWORD PTR [r14+0x30],rdx
  420c03:	movsxd rcx,eax
  420c06:	mov    DWORD PTR [rsp+0x3c],0x0
  420c0e:	je     0x420dc8
  420c14:	test   rdx,rdx
  420c17:	mov    QWORD PTR [r14+0x30],rdx
  420c1b:	mov    QWORD PTR [r14+0x38],rcx
  420c1f:	mov    QWORD PTR [r14+0x48],0x0
  420c27:	je     0x420ddd
  420c2d:	add    eax,0x1
  420c30:	cmp    eax,DWORD PTR [r14+0x70]
  420c34:	mov    rax,QWORD PTR [rdx+0x18]
  420c38:	jl     0x420df1
  420c3e:	movsxd r12,DWORD PTR [rdx+0x20]
  420c42:	mov    r8,QWORD PTR [r14+0x60]
  420c46:	mov    rdx,r12
  420c49:	add    r12,rax
  420c4c:	movsxd r8,DWORD PTR [r8+rcx*4]
  420c50:	mov    BYTE PTR [rsp+0x58],0x0
  420c55:	mov    DWORD PTR [rsp+0x5c],0x0
  420c5d:	mov    BYTE PTR [rsp+0x60],0x0
  420c62:	sub    edx,r8d
  420c65:	add    rax,r8
  420c68:	movsxd rdx,edx
  420c6b:	mov    QWORD PTR [rsp+0x68],rax
  420c70:	add    rdx,rax
  420c73:	cmp    rax,rdx
  420c76:	mov    QWORD PTR [rsp+0x50],rdx
  420c7b:	jae    0x420ddd
  420c81:	cmp    BYTE PTR [rsp+0x58],0x0
  420c86:	lea    rbp,[rsp+0x40]
  420c8b:	lea    rdi,[rsp+0x3c]
  420c90:	lea    rsi,[rsp+0x48]
  420c95:	movabs rbx,0x2aaaaaaaaaaaaaa9
  420c9f:	lea    r13,[rsp+0x50]
  420ca4:	jne    0x420e47
  420caa:	nop    WORD PTR [rax+rax*1+0x0]
  420cb0:	movzx  edx,BYTE PTR [rax]
  420cb3:	mov    r11,QWORD PTR [rip+0x28d06]        # 0x4499c0
  420cba:	mov    ecx,edx
  420cbc:	and    edx,0x1f
  420cbf:	shr    cl,0x5
  420cc2:	and    ecx,0x7
  420cc5:	mov    ecx,DWORD PTR [r11+rcx*4]
  420cc9:	bt     ecx,edx
  420ccc:	jae    0x420ed0
  420cd2:	mov    QWORD PTR [rsp+0x70],0x1
  420cdb:	movsx  ax,BYTE PTR [rax]
  420cdf:	mov    r15,QWORD PTR [rsp+0x68]
  420ce4:	mov    BYTE PTR [rsp+0x78],0x1
  420ce9:	mov    WORD PTR [rsp+0x7a],ax
  420cee:	cmp    r12,r15
  420cf1:	mov    BYTE PTR [rsp+0x60],0x1
  420cf6:	jbe    0x420ddd
  420cfc:	lea    r13,[rsp+0x50]
  420d01:	mov    r8,QWORD PTR [r14+0x48]
  420d05:	mov    QWORD PTR [rsp+0x20],rsi
  420d0a:	mov    r9,rbp
  420d0d:	mov    rdx,rdi
  420d10:	mov    rcx,r13
  420d13:	call   0x40bac0
  420d18:	mov    r10,QWORD PTR [rsp+0x40]
  420d1d:	mov    rax,r10
  420d20:	sub    r10,0x1
  420d24:	test   rax,rax
  420d27:	mov    QWORD PTR [rsp+0x40],r10
  420d2c:	je     0x420e14
  420d32:	mov    r8,QWORD PTR [r14+0x48]
  420d36:	mov    rcx,QWORD PTR [r14+0x50]
  420d3a:	jmp    0x420d61
  420d3c:	nop    DWORD PTR [rax+0x0]
  420d40:	mov    rax,r10
  420d43:	lea    r8,[rdx+0x1]
  420d47:	sub    r10,0x1
  420d4b:	test   rax,rax
  420d4e:	mov    QWORD PTR [r14+0x48],r8
  420d52:	mov    DWORD PTR [rcx+rdx*4],r13d
  420d56:	mov    QWORD PTR [rsp+0x40],r10
  420d5b:	je     0x420e14
  420d61:	mov    rax,QWORD PTR [r14+0x20]
  420d65:	mov    r13,r15
  420d68:	mov    rdx,r8
  420d6b:	sub    r13,QWORD PTR [rax+0x18]
  420d6f:	mov    rax,QWORD PTR [r14+0x40]
  420d73:	cmp    rax,r8
  420d76:	jne    0x420d40
  420d78:	test   r8,r8
  420d7b:	jne    0x420e05
  420d81:	test   rcx,rcx
  420d84:	mov    QWORD PTR [r14+0x40],0x50
  420d8c:	je     0x420ec3
  420d92:	mov    eax,0x50
  420d97:	mov    rdx,rax
  420d9a:	shr    rdx,1
  420d9d:	lea    r8,[rax+rdx*1+0x1]
  420da2:	lea    rdx,[r8*4+0x0]
  420daa:	mov    QWORD PTR [r14+0x40],r8
  420dae:	call   0x422820
  420db3:	mov    rdx,QWORD PTR [r14+0x48]
  420db7:	mov    QWORD PTR [r14+0x50],rax
  420dbb:	mov    rcx,rax
  420dbe:	mov    r10,QWORD PTR [rsp+0x40]
  420dc3:	jmp    0x420d40
  420dc8:	cmp    QWORD PTR [r14+0x38],rcx
  420dcc:	jne    0x420c14
  420dd2:	cmp    QWORD PTR [r14+0x48],0x0
  420dd7:	je     0x420c14
  420ddd:	add    rsp,0xa8
  420de4:	pop    rbx
  420de5:	pop    rsi
  420de6:	pop    rdi
  420de7:	pop    rbp
  420de8:	pop    r12
  420dea:	pop    r13
  420dec:	pop    r14
  420dee:	pop    r15
  420df0:	ret    
  420df1:	mov    r8,QWORD PTR [r14+0x60]
  420df5:	mov    edx,DWORD PTR [rdx+0x20]
  420df8:	movsxd r12,DWORD PTR [r8+rcx*4+0x4]
  420dfd:	add    r12,rax
  420e00:	jmp    0x420c4c
  420e05:	test   rcx,rcx
  420e08:	je     0x420da2
  420e0a:	cmp    r8,rbx
  420e0d:	jbe    0x420d97
  420e0f:	call   0x422a20
  420e14:	mov    rax,QWORD PTR [rsp+0x70]
  420e19:	mov    edx,DWORD PTR [rsp+0x3c]
  420e1d:	add    rax,QWORD PTR [rsp+0x68]
  420e22:	mov    BYTE PTR [rsp+0x60],0x0
  420e27:	test   edx,edx
  420e29:	mov    QWORD PTR [rsp+0x68],rax
  420e2e:	jne    0x420ddd
  420e30:	cmp    QWORD PTR [rsp+0x50],rax
  420e35:	jbe    0x420ddd
  420e37:	cmp    BYTE PTR [rsp+0x58],0x0
  420e3c:	lea    r13,[rsp+0x50]
  420e41:	je     0x420cb0
  420e47:	mov    rdx,QWORD PTR [rsp+0x68]
  420e4c:	mov    r8,QWORD PTR [rsp+0x50]
  420e51:	lea    rcx,[r13+0x2a]
  420e55:	lea    r9,[r13+0xc]
  420e59:	sub    r8,rdx
  420e5c:	call   0x423f00
  420e61:	cmp    rax,0xffffffffffffffff
  420e65:	mov    QWORD PTR [rsp+0x70],rax
  420e6a:	je     0x420eec
  420e70:	cmp    rax,0xfffffffffffffffe
  420e74:	je     0x420f04
  420e7a:	test   rax,rax
  420e7d:	jne    0x420ea2
  420e7f:	mov    rax,QWORD PTR [rsp+0x68]
  420e84:	mov    QWORD PTR [rsp+0x70],0x1
  420e8d:	cmp    BYTE PTR [rax],0x0
  420e90:	jne    0x420f59
  420e96:	cmp    WORD PTR [rsp+0x7a],0x0
  420e9c:	jne    0x420f3b
  420ea2:	lea    rcx,[r13+0xc]
  420ea6:	mov    BYTE PTR [rsp+0x78],0x1
  420eab:	call   0x424040
  420eb0:	test   eax,eax
  420eb2:	je     0x420eb9
  420eb4:	mov    BYTE PTR [rsp+0x58],0x0
  420eb9:	mov    r15,QWORD PTR [rsp+0x68]
  420ebe:	jmp    0x420cee
  420ec3:	mov    r8d,0x50
  420ec9:	jmp    0x420da2
  420ece:	xchg   ax,ax
  420ed0:	lea    r13,[rsp+0x50]
  420ed5:	lea    rcx,[r13+0xc]
  420ed9:	call   0x424040
  420ede:	test   eax,eax
  420ee0:	je     0x420f20
  420ee2:	mov    BYTE PTR [rsp+0x58],0x1
  420ee7:	jmp    0x420e47
  420eec:	mov    QWORD PTR [rsp+0x70],0x1
  420ef5:	mov    BYTE PTR [rsp+0x78],0x0
  420efa:	mov    r15,QWORD PTR [rsp+0x68]
  420eff:	jmp    0x420cee
  420f04:	mov    r15,QWORD PTR [rsp+0x68]
  420f09:	mov    rax,QWORD PTR [rsp+0x50]
  420f0e:	mov    BYTE PTR [rsp+0x78],0x0
  420f13:	sub    rax,r15
  420f16:	mov    QWORD PTR [rsp+0x70],rax
  420f1b:	jmp    0x420cee
  420f20:	lea    rdx,[rip+0x24f09]        # 0x445e30
  420f27:	lea    rcx,[rip+0x24f53]        # 0x445e81
  420f2e:	mov    r8d,0x8e
  420f34:	call   0x435a10
  420f39:	jmp    0x420ee2
  420f3b:	lea    rdx,[rip+0x24eee]        # 0x445e30
  420f42:	lea    rcx,[rip+0x24f66]        # 0x445eaf
  420f49:	mov    r8d,0xaa
  420f4f:	call   0x435a10
  420f54:	jmp    0x420ea2
  420f59:	lea    rdx,[rip+0x24ed0]        # 0x445e30
  420f60:	lea    rcx,[rip+0x24f31]        # 0x445e98
  420f67:	mov    r8d,0xa9
  420f6d:	call   0x435a10
  420f72:	jmp    0x420e96
  420f77:	nop    WORD PTR [rax+rax*1+0x0]
  420f80:	push   rsi
  420f81:	push   rbx
  420f82:	sub    rsp,0x28
  420f86:	mov    rbx,rcx
  420f89:	mov    rsi,rdx
  420f8c:	mov    QWORD PTR [rbx+0x20],rdx
  420f90:	mov    DWORD PTR [rcx+0x28],0x0
  420f97:	mov    DWORD PTR [rcx+0x2c],0x0
  420f9e:	mov    rcx,QWORD PTR [rcx+0x60]
  420fa2:	call   0x43a748
  420fa7:	mov    rcx,QWORD PTR [rbx+0x68]
  420fab:	call   0x43a748
  420fb0:	mov    rcx,rbx
  420fb3:	call   0x41fdc0
  420fb8:	mov    rcx,rbx
  420fbb:	call   0x420be0
  420fc0:	mov    rcx,QWORD PTR [rbx+0x98]
  420fc7:	call   0x43a748
  420fcc:	mov    eax,DWORD PTR [rbx+0x80]
  420fd2:	mov    QWORD PTR [rbx+0x98],0x0
  420fdd:	or     eax,0x1
  420fe0:	test   rsi,rsi
  420fe3:	mov    DWORD PTR [rbx+0x80],eax
  420fe9:	je     0x420fff
  420feb:	mov    eax,DWORD PTR [rsi+0x24]
  420fee:	mov    rcx,rbx
  420ff1:	mov    DWORD PTR [rbx+0x2c],eax
  420ff4:	call   0x420630
  420ff9:	mov    eax,DWORD PTR [rbx+0x80]
  420fff:	test   al,0x8
  421001:	je     0x421010
  421003:	add    rsp,0x28
  421007:	pop    rbx
  421008:	pop    rsi
  421009:	ret    
  42100a:	nop    WORD PTR [rax+rax*1+0x0]
  421010:	mov    rcx,rbx
  421013:	add    rsp,0x28
  421017:	pop    rbx
  421018:	pop    rsi
  421019:	jmp    0x41f590
  42101e:	xchg   ax,ax
  421020:	push   rbx
  421021:	sub    rsp,0x20
  421025:	mov    rbx,QWORD PTR [rip+0x31134]        # 0x452160
  42102c:	test   rbx,rbx
  42102f:	je     0x421042
  421031:	mov    rcx,QWORD PTR [rbx+0x18]
  421035:	call   0x43a748
  42103a:	mov    rcx,rbx
  42103d:	call   0x43a748
  421042:	mov    rcx,QWORD PTR [rip+0x310ef]        # 0x452138
  421049:	xor    edx,edx
  42104b:	mov    QWORD PTR [rip+0x3110a],0x0        # 0x452160
  421056:	add    rsp,0x20
  42105a:	pop    rbx
  42105b:	jmp    0x420f80
  421060:	sub    rsp,0x28
  421064:	call   0x421020
  421069:	mov    rcx,QWORD PTR [rip+0x310c8]        # 0x452138
  421070:	add    rsp,0x28
  421074:	jmp    0x403da0
  421079:	nop    DWORD PTR [rax+0x0]
  421080:	push   rsi
  421081:	push   rbx
  421082:	sub    rsp,0x28
  421086:	mov    rbx,rcx
  421089:	mov    rsi,rdx
  42108c:	call   0x421020
  421091:	mov    rdx,rsi
  421094:	mov    rcx,rbx
  421097:	call   0x41fd50
  42109c:	mov    rcx,QWORD PTR [rip+0x31095]        # 0x452138
  4210a3:	mov    rdx,rax
  4210a6:	mov    QWORD PTR [rip+0x310b3],rax        # 0x452160
  4210ad:	call   0x420f80
  4210b2:	mov    rcx,QWORD PTR [rip+0x3107f]        # 0x452138
  4210b9:	add    rsp,0x28
  4210bd:	pop    rbx
  4210be:	pop    rsi
  4210bf:	jmp    0x403da0
  4210c4:	xchg   ax,ax
  4210c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210d0:	sub    rsp,0x38
  4210d4:	mov    QWORD PTR [rsp+0x48],rdx
  4210d9:	lea    rdx,[rsp+0x48]
  4210de:	mov    QWORD PTR [rsp+0x50],r8
  4210e3:	mov    QWORD PTR [rsp+0x58],r9
  4210e8:	mov    QWORD PTR [rsp+0x28],rdx
  4210ed:	call   0x421080
  4210f2:	nop
  4210f3:	add    rsp,0x38
  4210f7:	ret    
  4210f8:	nop    DWORD PTR [rax+rax*1+0x0]
  421100:	push   rbx
  421101:	sub    rsp,0x30
  421105:	mov    QWORD PTR [rsp+0x58],r9
  42110a:	mov    r9,QWORD PTR [rip+0x3104f]        # 0x452160
  421111:	mov    rbx,rcx
  421114:	mov    QWORD PTR [rsp+0x48],rdx
  421119:	mov    QWORD PTR [rsp+0x50],r8
  42111e:	test   r9,r9
  421121:	je     0x4211af
  421127:	mov    r8,QWORD PTR [rip+0x31022]        # 0x452150
  42112e:	mov    rdx,QWORD PTR [rip+0x31013]        # 0x452148
  421135:	lea    rax,[r8+0x2]
  421139:	cmp    rax,rdx
  42113c:	jb     0x421190
  42113e:	test   rdx,rdx
  421141:	mov    rcx,QWORD PTR [rip+0x31010]        # 0x452158
  421148:	jne    0x4211d3
  42114e:	test   rcx,rcx
  421151:	je     0x4211f0
  421157:	mov    dl,0x4
  421159:	mov    rax,rdx
  42115c:	shr    rax,1
  42115f:	lea    rdx,[rdx+rax*1+0x1]
  421164:	mov    QWORD PTR [rip+0x30fdd],rdx        # 0x452148
  42116b:	shl    rdx,0x3
  42116f:	call   0x422820
  421174:	mov    r8,QWORD PTR [rip+0x30fd5]        # 0x452150
  42117b:	mov    QWORD PTR [rip+0x30fd6],rax        # 0x452158
  421182:	mov    r9,QWORD PTR [rip+0x30fd7]        # 0x452160
  421189:	jmp    0x421197
  42118b:	nop    DWORD PTR [rax+rax*1+0x0]
  421190:	mov    rax,QWORD PTR [rip+0x30fc1]        # 0x452158
  421197:	lea    rdx,[r8+0x1]
  42119b:	mov    QWORD PTR [rax+r8*8],r9
  42119f:	mov    QWORD PTR [rax+r8*8+0x8],0x0
  4211a8:	mov    QWORD PTR [rip+0x30fa1],rdx        # 0x452150
  4211af:	lea    rdx,[rsp+0x48]
  4211b4:	mov    rcx,rbx
  4211b7:	mov    QWORD PTR [rip+0x30f9e],0x0        # 0x452160
  4211c2:	mov    QWORD PTR [rsp+0x28],rdx
  4211c7:	call   0x421080
  4211cc:	nop
  4211cd:	add    rsp,0x30
  4211d1:	pop    rbx
  4211d2:	ret    
  4211d3:	test   rcx,rcx
  4211d6:	je     0x421164
  4211d8:	movabs rax,0x1555555555555554
  4211e2:	cmp    rdx,rax
  4211e5:	jbe    0x421159
  4211eb:	call   0x422a20
  4211f0:	mov    edx,0x4
  4211f5:	jmp    0x421164
  4211fa:	nop    WORD PTR [rax+rax*1+0x0]
  421200:	sub    rsp,0x28
  421204:	call   0x421020
  421209:	mov    rax,QWORD PTR [rip+0x30f40]        # 0x452150
  421210:	mov    rdx,QWORD PTR [rip+0x30f49]        # 0x452160
  421217:	test   rax,rax
  42121a:	je     0x421239
  42121c:	mov    rdx,QWORD PTR [rip+0x30f35]        # 0x452158
  421223:	sub    rax,0x1
  421227:	mov    QWORD PTR [rip+0x30f22],rax        # 0x452150
  42122e:	mov    rdx,QWORD PTR [rdx+rax*8]
  421232:	mov    QWORD PTR [rip+0x30f27],rdx        # 0x452160
  421239:	mov    rcx,QWORD PTR [rip+0x30ef8]        # 0x452138
  421240:	call   0x420f80
  421245:	mov    rcx,QWORD PTR [rip+0x30eec]        # 0x452138
  42124c:	add    rsp,0x28
  421250:	jmp    0x403da0
  421255:	nop
  421256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421260:	push   rdi
  421261:	push   rsi
  421262:	push   rbx
  421263:	sub    rsp,0x20
  421267:	mov    rsi,rcx
  42126a:	mov    ebx,edx
  42126c:	mov    rdi,r8
  42126f:	call   0x420be0
  421274:	mov    r10,QWORD PTR [rsi+0x50]
  421278:	test   r10,r10
  42127b:	je     0x4212d0
  42127d:	mov    ecx,DWORD PTR [r10]
  421280:	xor    eax,eax
  421282:	cmp    ecx,ebx
  421284:	jg     0x4212c0
  421286:	mov    rdx,QWORD PTR [rsi+0x48]
  42128a:	test   rdx,rdx
  42128d:	je     0x4212da
  42128f:	cmp    ecx,ebx
  421291:	jge    0x4212da
  421293:	mov    ecx,0x1
  421298:	jmp    0x4212ae
  42129a:	nop    WORD PTR [rax+rax*1+0x0]
  4212a0:	lea    r9,[rcx+0x1]
  4212a4:	cmp    ebx,DWORD PTR [r10+r9*4-0x4]
  4212a9:	jle    0x4212b5
  4212ab:	mov    rcx,r9
  4212ae:	cmp    rcx,rdx
  4212b1:	mov    eax,ecx
  4212b3:	jne    0x4212a0
  4212b5:	test   rdi,rdi
  4212b8:	je     0x4212c0
  4212ba:	mov    edx,DWORD PTR [r10+rcx*4]
  4212be:	mov    DWORD PTR [rdi],edx
  4212c0:	add    rsp,0x20
  4212c4:	pop    rbx
  4212c5:	pop    rsi
  4212c6:	pop    rdi
  4212c7:	ret    
  4212c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4212d0:	xor    eax,eax
  4212d2:	add    rsp,0x20
  4212d6:	pop    rbx
  4212d7:	pop    rsi
  4212d8:	pop    rdi
  4212d9:	ret    
  4212da:	xor    ecx,ecx
  4212dc:	xor    eax,eax
  4212de:	jmp    0x4212b5
  4212e0:	mov    edx,DWORD PTR [rcx+0x2c]
  4212e3:	lea    r8,[rcx+0x2c]
  4212e7:	jmp    0x421260
  4212ec:	nop
  4212ed:	nop
  4212ee:	nop
  4212ef:	nop
  4212f0:	push   rbx
  4212f1:	sub    rsp,0x20
  4212f5:	movzx  ebx,cx
  4212f8:	mov    ecx,ebx
  4212fa:	call   0x41e160
  4212ff:	test   eax,eax
  421301:	js     0x421310
  421303:	add    rsp,0x20
  421307:	pop    rbx
  421308:	ret    
  421309:	nop    DWORD PTR [rax+0x0]
  421310:	mov    edx,0x20
  421315:	mov    ecx,ebx
  421317:	call   0x43a6e0
  42131c:	test   eax,eax
  42131e:	sete   al
  421321:	movzx  eax,al
  421324:	add    rsp,0x20
  421328:	pop    rbx
  421329:	ret    
  42132a:	nop    WORD PTR [rax+rax*1+0x0]
  421330:	push   rsi
  421331:	push   rbx
  421332:	sub    rsp,0x28
  421336:	mov    rbx,rdx
  421339:	mov    rdx,QWORD PTR [rdx]
  42133c:	mov    rsi,rcx
  42133f:	lea    rax,[rbx+0x14]
  421343:	cmp    rdx,rax
  421346:	je     0x421370
  421348:	mov    QWORD PTR [rcx],rdx
  42134b:	mov    rax,QWORD PTR [rbx+0x8]
  42134f:	mov    QWORD PTR [rsi+0x8],rax
  421353:	movzx  eax,BYTE PTR [rbx+0x10]
  421357:	test   al,al
  421359:	mov    BYTE PTR [rsi+0x10],al
  42135c:	je     0x421366
  42135e:	movzx  eax,WORD PTR [rbx+0x12]
  421362:	mov    WORD PTR [rsi+0x12],ax
  421366:	add    rsp,0x28
  42136a:	pop    rbx
  42136b:	pop    rsi
  42136c:	ret    
  42136d:	nop    DWORD PTR [rax]
  421370:	lea    r9,[rcx+0x14]
  421374:	mov    r8,QWORD PTR [rbx+0x8]
  421378:	mov    rcx,r9
  42137b:	call   0x43a6b8
  421380:	mov    QWORD PTR [rsi],rax
  421383:	jmp    0x42134b
  421385:	nop
  421386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421390:	lea    rdx,[rip+0x26469]        # 0x447800
  421397:	mov    eax,ecx
  421399:	and    ecx,0x1f
  42139c:	shr    al,0x5
  42139f:	and    eax,0x7
  4213a2:	mov    eax,DWORD PTR [rdx+rax*4]
  4213a5:	shr    eax,cl
  4213a7:	and    eax,0x1
  4213aa:	ret    
  4213ab:	nop
  4213ac:	nop
  4213ad:	nop
  4213ae:	nop
  4213af:	nop
  4213b0:	push   r15
  4213b2:	push   r14
  4213b4:	push   r13
  4213b6:	push   r12
  4213b8:	push   rbp
  4213b9:	push   rdi
  4213ba:	push   rsi
  4213bb:	push   rbx
  4213bc:	sub    rsp,0xb8
  4213c3:	cmp    rcx,rdx
  4213c6:	mov    rdi,rcx
  4213c9:	mov    rbp,rdx
  4213cc:	je     0x421ae4
  4213d2:	mov    r12,QWORD PTR [rip+0x282e7]        # 0x4496c0
  4213d9:	mov    rax,QWORD PTR [r12]
  4213dd:	cmp    DWORD PTR [rax],0x1
  4213e0:	jle    0x4218b2
  4213e6:	lea    rbp,[rsp+0x70]
  4213eb:	mov    r13,QWORD PTR [rip+0x285ce]        # 0x4499c0
  4213f2:	lea    rdi,[rsp+0x30]
  4213f7:	mov    QWORD PTR [rsp+0x40],rcx
  4213fc:	mov    BYTE PTR [rsp+0x30],0x0
  421401:	lea    rax,[rbp+0x4]
  421405:	lea    r15,[rdi+0x4]
  421409:	mov    DWORD PTR [rsp+0x34],0x0
  421411:	mov    BYTE PTR [rsp+0x38],0x0
  421416:	mov    QWORD PTR [rsp+0x80],rdx
  42141e:	mov    r14,r13
  421421:	mov    BYTE PTR [rsp+0x70],0x0
  421426:	mov    DWORD PTR [rsp+0x74],0x0
  42142e:	mov    BYTE PTR [rsp+0x78],0x0
  421433:	mov    QWORD PTR [rsp+0x28],rax
  421438:	nop    DWORD PTR [rax+rax*1+0x0]
  421440:	cmp    BYTE PTR [rsp+0x30],0x0
  421445:	jne    0x4215f5
  42144b:	mov    rcx,QWORD PTR [rsp+0x40]
  421450:	movzx  eax,BYTE PTR [rcx]
  421453:	mov    edx,eax
  421455:	and    eax,0x1f
  421458:	shr    dl,0x5
  42145b:	and    edx,0x7
  42145e:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  421463:	bt     edx,eax
  421466:	jae    0x4215e0
  42146c:	mov    QWORD PTR [rsp+0x48],0x1
  421475:	movsx  ax,BYTE PTR [rcx]
  421479:	mov    BYTE PTR [rsp+0x50],0x1
  42147e:	mov    BYTE PTR [rsp+0x38],0x1
  421483:	mov    WORD PTR [rsp+0x52],ax
  421488:	cmp    WORD PTR [rsp+0x52],0x0
  42148e:	je     0x4215b0
  421494:	movzx  ebx,BYTE PTR [rsp+0x78]
  421499:	test   bl,bl
  42149b:	je     0x421510
  42149d:	movzx  ebx,BYTE PTR [rsp+0x90]
  4214a5:	test   bl,bl
  4214a7:	jne    0x421570
  4214ad:	cmp    BYTE PTR [rsp+0x50],0x0
  4214b2:	jne    0x4215d0
  4214b8:	mov    r8,QWORD PTR [rsp+0x48]
  4214bd:	mov    rax,QWORD PTR [rsp+0x88]
  4214c5:	cmp    r8,rax
  4214c8:	je     0x421800
  4214ce:	cmp    rax,r8
  4214d1:	jbe    0x421745
  4214d7:	mov    rdx,QWORD PTR [rsp+0x80]
  4214df:	mov    rcx,QWORD PTR [rsp+0x40]
  4214e4:	call   0x43a6c0
  4214e9:	test   eax,eax
  4214eb:	setg   al
  4214ee:	movzx  eax,al
  4214f1:	lea    eax,[rax+rax*1-0x1]
  4214f5:	add    rsp,0xb8
  4214fc:	pop    rbx
  4214fd:	pop    rsi
  4214fe:	pop    rdi
  4214ff:	pop    rbp
  421500:	pop    r12
  421502:	pop    r13
  421504:	pop    r14
  421506:	pop    r15
  421508:	ret    
  421509:	nop    DWORD PTR [rax+0x0]
  421510:	cmp    BYTE PTR [rsp+0x70],0x0
  421515:	jne    0x4216a7
  42151b:	mov    rcx,QWORD PTR [rsp+0x80]
  421523:	movzx  eax,BYTE PTR [rcx]
  421526:	mov    edx,eax
  421528:	and    eax,0x1f
  42152b:	shr    dl,0x5
  42152e:	and    edx,0x7
  421531:	mov    edx,DWORD PTR [r14+rdx*4]
  421535:	bt     edx,eax
  421538:	jae    0x421690
  42153e:	mov    QWORD PTR [rsp+0x88],0x1
  42154a:	movsx  ax,BYTE PTR [rcx]
  42154e:	mov    ebx,0x1
  421553:	mov    BYTE PTR [rsp+0x90],0x1
  42155b:	mov    WORD PTR [rsp+0x92],ax
  421563:	test   bl,bl
  421565:	mov    BYTE PTR [rsp+0x78],0x1
  42156a:	je     0x4214ad
  421570:	movzx  esi,WORD PTR [rsp+0x92]
  421578:	test   si,si
  42157b:	jne    0x4217a0
  421581:	cmp    BYTE PTR [rsp+0x38],0x0
  421586:	je     0x421814
  42158c:	movzx  ebx,BYTE PTR [rsp+0x50]
  421591:	test   bl,bl
  421593:	mov    eax,0x1
  421598:	je     0x4214f5
  42159e:	cmp    WORD PTR [rsp+0x52],0x0
  4215a4:	jne    0x4214f5
  4215aa:	nop    WORD PTR [rax+rax*1+0x0]
  4215b0:	cmp    BYTE PTR [rsp+0x78],0x0
  4215b5:	je     0x42199e
  4215bb:	movzx  eax,BYTE PTR [rsp+0x90]
  4215c3:	test   al,al
  4215c5:	jne    0x4219f0
  4215cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4215d0:	mov    eax,0xffffffff
  4215d5:	jmp    0x4214f5
  4215da:	nop    WORD PTR [rax+rax*1+0x0]
  4215e0:	mov    rcx,r15
  4215e3:	call   0x424040
  4215e8:	test   eax,eax
  4215ea:	je     0x421912
  4215f0:	mov    BYTE PTR [rsp+0x30],0x1
  4215f5:	mov    rax,QWORD PTR [r12]
  4215f9:	mov    rbx,QWORD PTR [rsp+0x40]
  4215fe:	movsxd rdx,DWORD PTR [rax]
  421601:	mov    rcx,rbx
  421604:	call   0x422770
  421609:	lea    rcx,[rdi+0x22]
  42160d:	lea    r9,[rdi+0x4]
  421611:	mov    r8,rax
  421614:	mov    rdx,rbx
  421617:	call   0x423f00
  42161c:	cmp    rax,0xffffffffffffffff
  421620:	mov    QWORD PTR [rsp+0x48],rax
  421625:	je     0x421765
  42162b:	cmp    rax,0xfffffffffffffffe
  42162f:	je     0x421870
  421635:	test   rax,rax
  421638:	jne    0x42165d
  42163a:	mov    rax,QWORD PTR [rsp+0x40]
  42163f:	mov    QWORD PTR [rsp+0x48],0x1
  421648:	cmp    BYTE PTR [rax],0x0
  42164b:	jne    0x421a05
  421651:	cmp    WORD PTR [rsp+0x52],0x0
  421657:	jne    0x421960
  42165d:	lea    rcx,[rdi+0x4]
  421661:	mov    BYTE PTR [rsp+0x50],0x1
  421666:	call   0x424040
  42166b:	test   eax,eax
  42166d:	je     0x421674
  42166f:	mov    BYTE PTR [rsp+0x30],0x0
  421674:	movzx  eax,BYTE PTR [rsp+0x50]
  421679:	mov    BYTE PTR [rsp+0x38],0x1
  42167e:	test   al,al
  421680:	je     0x421494
  421686:	jmp    0x421488
  42168b:	nop    DWORD PTR [rax+rax*1+0x0]
  421690:	mov    rcx,QWORD PTR [rsp+0x28]
  421695:	call   0x424040
  42169a:	test   eax,eax
  42169c:	je     0x421930
  4216a2:	mov    BYTE PTR [rsp+0x70],0x1
  4216a7:	mov    rax,QWORD PTR [r12]
  4216ab:	mov    rsi,QWORD PTR [rsp+0x80]
  4216b3:	movsxd rdx,DWORD PTR [rax]
  4216b6:	mov    rcx,rsi
  4216b9:	call   0x422770
  4216be:	lea    rcx,[rbp+0x22]
  4216c2:	lea    r9,[rbp+0x4]
  4216c6:	mov    r8,rax
  4216c9:	mov    rdx,rsi
  4216cc:	call   0x423f00
  4216d1:	cmp    rax,0xffffffffffffffff
  4216d5:	mov    QWORD PTR [rsp+0x88],rax
  4216dd:	je     0x421780
  4216e3:	cmp    rax,0xfffffffffffffffe
  4216e7:	je     0x421890
  4216ed:	test   rax,rax
  4216f0:	jne    0x42171e
  4216f2:	mov    rax,QWORD PTR [rsp+0x80]
  4216fa:	mov    QWORD PTR [rsp+0x88],0x1
  421706:	cmp    BYTE PTR [rax],0x0
  421709:	jne    0x421a23
  42170f:	cmp    WORD PTR [rsp+0x92],0x0
  421718:	jne    0x421980
  42171e:	lea    rcx,[rbp+0x4]
  421722:	mov    BYTE PTR [rsp+0x90],0x1
  42172a:	call   0x424040
  42172f:	test   eax,eax
  421731:	je     0x421738
  421733:	mov    BYTE PTR [rsp+0x70],0x0
  421738:	movzx  ebx,BYTE PTR [rsp+0x90]
  421740:	jmp    0x421563
  421745:	mov    rdx,QWORD PTR [rsp+0x80]
  42174d:	mov    rcx,QWORD PTR [rsp+0x40]
  421752:	mov    r8,rax
  421755:	call   0x43a6c0
  42175a:	sar    eax,0x1f
  42175d:	or     eax,0x1
  421760:	jmp    0x4214f5
  421765:	mov    QWORD PTR [rsp+0x48],0x1
  42176e:	mov    BYTE PTR [rsp+0x50],0x0
  421773:	mov    BYTE PTR [rsp+0x38],0x1
  421778:	jmp    0x421494
  42177d:	nop    DWORD PTR [rax]
  421780:	mov    QWORD PTR [rsp+0x88],0x1
  42178c:	mov    BYTE PTR [rsp+0x90],0x0
  421794:	jmp    0x421563
  421799:	nop    DWORD PTR [rax+0x0]
  4217a0:	cmp    BYTE PTR [rsp+0x50],0x0
  4217a5:	je     0x421950
  4217ab:	movzx  ecx,WORD PTR [rsp+0x52]
  4217b0:	call   0x43a5d8
  4217b5:	movzx  ecx,si
  4217b8:	movzx  ebx,ax
  4217bb:	call   0x43a5d8
  4217c0:	movzx  eax,ax
  4217c3:	sub    ebx,eax
  4217c5:	mov    eax,ebx
  4217c7:	test   eax,eax
  4217c9:	jne    0x4214f5
  4217cf:	mov    rax,QWORD PTR [rsp+0x48]
  4217d4:	mov    BYTE PTR [rsp+0x38],0x0
  4217d9:	add    QWORD PTR [rsp+0x40],rax
  4217de:	mov    BYTE PTR [rsp+0x78],0x0
  4217e3:	mov    rax,QWORD PTR [rsp+0x88]
  4217eb:	add    QWORD PTR [rsp+0x80],rax
  4217f3:	jmp    0x421440
  4217f8:	nop    DWORD PTR [rax+rax*1+0x0]
  421800:	mov    rdx,QWORD PTR [rsp+0x80]
  421808:	mov    rcx,QWORD PTR [rsp+0x40]
  42180d:	call   0x43a6c0
  421812:	jmp    0x4217c7
  421814:	cmp    BYTE PTR [rsp+0x30],0x0
  421819:	jne    0x421a41
  42181f:	mov    rcx,QWORD PTR [rsp+0x40]
  421824:	mov    r8,QWORD PTR [rip+0x28195]        # 0x4499c0
  42182b:	movzx  eax,BYTE PTR [rcx]
  42182e:	mov    edx,eax
  421830:	and    eax,0x1f
  421833:	shr    dl,0x5
  421836:	and    edx,0x7
  421839:	mov    edx,DWORD PTR [r8+rdx*4]
  42183d:	bt     edx,eax
  421840:	jae    0x421b8d
  421846:	mov    QWORD PTR [rsp+0x48],0x1
  42184f:	movsx  ax,BYTE PTR [rcx]
  421853:	mov    BYTE PTR [rsp+0x50],0x1
  421858:	mov    WORD PTR [rsp+0x52],ax
  42185d:	mov    BYTE PTR [rsp+0x38],0x1
  421862:	jmp    0x421591
  421867:	nop    WORD PTR [rax+rax*1+0x0]
  421870:	mov    rcx,QWORD PTR [rsp+0x40]
  421875:	call   0x43a620
  42187a:	mov    BYTE PTR [rsp+0x50],0x0
  42187f:	mov    QWORD PTR [rsp+0x48],rax
  421884:	jmp    0x421773
  421889:	nop    DWORD PTR [rax+0x0]
  421890:	mov    rcx,QWORD PTR [rsp+0x80]
  421898:	call   0x43a620
  42189d:	mov    BYTE PTR [rsp+0x90],0x0
  4218a5:	mov    QWORD PTR [rsp+0x88],rax
  4218ad:	jmp    0x421563
  4218b2:	mov    r13,QWORD PTR [rip+0x332d7]        # 0x454b90
  4218b9:	mov    r12,QWORD PTR [rip+0x331d0]        # 0x454a90
  4218c0:	mov    r14,r13
  4218c3:	jmp    0x4218d2
  4218c5:	add    rdi,0x1
  4218c9:	add    rbp,0x1
  4218cd:	cmp    bl,sil
  4218d0:	jne    0x421909
  4218d2:	movzx  esi,BYTE PTR [rdi]
  4218d5:	mov    ecx,esi
  4218d7:	mov    ebx,esi
  4218d9:	call   r12
  4218dc:	test   eax,eax
  4218de:	je     0x4218e8
  4218e0:	mov    ecx,esi
  4218e2:	call   r13
  4218e5:	movzx  ebx,al
  4218e8:	movzx  r15d,BYTE PTR [rbp+0x0]
  4218ed:	mov    ecx,r15d
  4218f0:	mov    esi,r15d
  4218f3:	call   r12
  4218f6:	test   eax,eax
  4218f8:	je     0x421903
  4218fa:	mov    ecx,r15d
  4218fd:	call   r14
  421900:	movzx  esi,al
  421903:	test   bl,bl
  421905:	jne    0x4218c5
  421907:	xor    ebx,ebx
  421909:	mov    eax,ebx
  42190b:	sub    eax,esi
  42190d:	jmp    0x4214f5
  421912:	lea    rdx,[rip+0x25f07]        # 0x447820
  421919:	lea    rcx,[rip+0x25f52]        # 0x447872
  421920:	mov    r8d,0x96
  421926:	call   0x435a10
  42192b:	jmp    0x4215f0
  421930:	lea    rdx,[rip+0x25ee9]        # 0x447820
  421937:	lea    rcx,[rip+0x25f34]        # 0x447872
  42193e:	mov    r8d,0x96
  421944:	call   0x435a10
  421949:	jmp    0x4216a2
  42194e:	xchg   ax,ax
  421950:	mov    eax,0x1
  421955:	jmp    0x4214f5
  42195a:	nop    WORD PTR [rax+rax*1+0x0]
  421960:	lea    rdx,[rip+0x25eb9]        # 0x447820
  421967:	lea    rcx,[rip+0x25f32]        # 0x4478a0
  42196e:	mov    r8d,0xb3
  421974:	call   0x435a10
  421979:	jmp    0x42165d
  42197e:	xchg   ax,ax
  421980:	lea    rdx,[rip+0x25e99]        # 0x447820
  421987:	lea    rcx,[rip+0x25f12]        # 0x4478a0
  42198e:	mov    r8d,0xb3
  421994:	call   0x435a10
  421999:	jmp    0x42171e
  42199e:	cmp    BYTE PTR [rsp+0x70],0x0
  4219a3:	lea    rbx,[rsp+0x70]
  4219a8:	jne    0x421b06
  4219ae:	mov    rcx,QWORD PTR [rsp+0x80]
  4219b6:	mov    r8,QWORD PTR [rip+0x28003]        # 0x4499c0
  4219bd:	movzx  eax,BYTE PTR [rcx]
  4219c0:	mov    edx,eax
  4219c2:	and    eax,0x1f
  4219c5:	shr    dl,0x5
  4219c8:	and    edx,0x7
  4219cb:	mov    edx,DWORD PTR [r8+rdx*4]
  4219cf:	bt     edx,eax
  4219d2:	jae    0x421aeb
  4219d8:	mov    QWORD PTR [rsp+0x88],0x1
  4219e4:	movsx  ax,BYTE PTR [rcx]
  4219e8:	mov    WORD PTR [rsp+0x92],ax
  4219f0:	xor    eax,eax
  4219f2:	cmp    WORD PTR [rsp+0x92],0x0
  4219fb:	setne  al
  4219fe:	neg    eax
  421a00:	jmp    0x4214f5
  421a05:	lea    rdx,[rip+0x25e14]        # 0x447820
  421a0c:	lea    rcx,[rip+0x25e76]        # 0x447889
  421a13:	mov    r8d,0xb2
  421a19:	call   0x435a10
  421a1e:	jmp    0x421651
  421a23:	lea    rdx,[rip+0x25df6]        # 0x447820
  421a2a:	lea    rcx,[rip+0x25e58]        # 0x447889
  421a31:	mov    r8d,0xb2
  421a37:	call   0x435a10
  421a3c:	jmp    0x42170f
  421a41:	lea    rbx,[rsp+0x30]
  421a46:	mov    rax,QWORD PTR [r12]
  421a4a:	mov    rsi,QWORD PTR [rsp+0x40]
  421a4f:	movsxd rdx,DWORD PTR [rax]
  421a52:	mov    rcx,rsi
  421a55:	call   0x422770
  421a5a:	lea    rcx,[rbx+0x22]
  421a5e:	lea    r9,[rbx+0x4]
  421a62:	mov    r8,rax
  421a65:	mov    rdx,rsi
  421a68:	call   0x423f00
  421a6d:	cmp    rax,0xffffffffffffffff
  421a71:	mov    QWORD PTR [rsp+0x48],rax
  421a76:	je     0x421ba9
  421a7c:	cmp    rax,0xfffffffffffffffe
  421a80:	je     0x421bbe
  421a86:	test   rax,rax
  421a89:	jne    0x421ac3
  421a8b:	mov    rax,QWORD PTR [rsp+0x40]
  421a90:	mov    QWORD PTR [rsp+0x48],0x1
  421a99:	cmp    BYTE PTR [rax],0x0
  421a9c:	jne    0x421bf4
  421aa2:	cmp    WORD PTR [rsp+0x52],0x0
  421aa8:	je     0x421ac3
  421aaa:	lea    rdx,[rip+0x25d6f]        # 0x447820
  421ab1:	lea    rcx,[rip+0x25de8]        # 0x4478a0
  421ab8:	mov    r8d,0xb3
  421abe:	call   0x435a10
  421ac3:	lea    rcx,[rbx+0x4]
  421ac7:	mov    BYTE PTR [rsp+0x50],0x1
  421acc:	call   0x424040
  421ad1:	test   eax,eax
  421ad3:	je     0x421ada
  421ad5:	mov    BYTE PTR [rsp+0x30],0x0
  421ada:	movzx  ebx,BYTE PTR [rsp+0x50]
  421adf:	jmp    0x42185d
  421ae4:	xor    eax,eax
  421ae6:	jmp    0x4214f5
  421aeb:	lea    rbx,[rsp+0x70]
  421af0:	lea    rcx,[rbx+0x4]
  421af4:	call   0x424040
  421af9:	test   eax,eax
  421afb:	je     0x421c12
  421b01:	mov    BYTE PTR [rsp+0x70],0x1
  421b06:	mov    rax,QWORD PTR [r12]
  421b0a:	mov    rsi,QWORD PTR [rsp+0x80]
  421b12:	movsxd rdx,DWORD PTR [rax]
  421b15:	mov    rcx,rsi
  421b18:	call   0x422770
  421b1d:	lea    rcx,[rbx+0x22]
  421b21:	lea    r9,[rbx+0x4]
  421b25:	mov    rdx,rsi
  421b28:	mov    r8,rax
  421b2b:	call   0x423f00
  421b30:	lea    rdx,[rax+0x2]
  421b34:	mov    QWORD PTR [rsp+0x88],rax
  421b3c:	cmp    rdx,0x1
  421b40:	jbe    0x4215d0
  421b46:	test   rax,rax
  421b49:	jne    0x421b77
  421b4b:	mov    rax,QWORD PTR [rsp+0x80]
  421b53:	mov    QWORD PTR [rsp+0x88],0x1
  421b5f:	cmp    BYTE PTR [rax],0x0
  421b62:	jne    0x421c4e
  421b68:	cmp    WORD PTR [rsp+0x92],0x0
  421b71:	jne    0x421c30
  421b77:	lea    rcx,[rbx+0x4]
  421b7b:	mov    BYTE PTR [rsp+0x90],0x1
  421b83:	call   0x424040
  421b88:	jmp    0x4215bb
  421b8d:	lea    rbx,[rsp+0x30]
  421b92:	lea    rcx,[rbx+0x4]
  421b96:	call   0x424040
  421b9b:	test   eax,eax
  421b9d:	je     0x421bd9
  421b9f:	mov    BYTE PTR [rsp+0x30],0x1
  421ba4:	jmp    0x421a46
  421ba9:	mov    QWORD PTR [rsp+0x48],0x1
  421bb2:	mov    BYTE PTR [rsp+0x50],0x0
  421bb7:	xor    ebx,ebx
  421bb9:	jmp    0x42185d
  421bbe:	mov    rcx,QWORD PTR [rsp+0x40]
  421bc3:	xor    ebx,ebx
  421bc5:	call   0x43a620
  421bca:	mov    BYTE PTR [rsp+0x50],0x0
  421bcf:	mov    QWORD PTR [rsp+0x48],rax
  421bd4:	jmp    0x42185d
  421bd9:	lea    rdx,[rip+0x25c40]        # 0x447820
  421be0:	lea    rcx,[rip+0x25c8b]        # 0x447872
  421be7:	mov    r8d,0x96
  421bed:	call   0x435a10
  421bf2:	jmp    0x421b9f
  421bf4:	lea    rdx,[rip+0x25c25]        # 0x447820
  421bfb:	lea    rcx,[rip+0x25c87]        # 0x447889
  421c02:	mov    r8d,0xb2
  421c08:	call   0x435a10
  421c0d:	jmp    0x421aa2
  421c12:	lea    rdx,[rip+0x25c07]        # 0x447820
  421c19:	lea    rcx,[rip+0x25c52]        # 0x447872
  421c20:	mov    r8d,0x96
  421c26:	call   0x435a10
  421c2b:	jmp    0x421b01
  421c30:	lea    rdx,[rip+0x25be9]        # 0x447820
  421c37:	lea    rcx,[rip+0x25c62]        # 0x4478a0
  421c3e:	mov    r8d,0xb3
  421c44:	call   0x435a10
  421c49:	jmp    0x421b77
  421c4e:	lea    rdx,[rip+0x25bcb]        # 0x447820
  421c55:	lea    rcx,[rip+0x25c2d]        # 0x447889
  421c5c:	mov    r8d,0xb2
  421c62:	call   0x435a10
  421c67:	jmp    0x421b68
  421c6c:	nop
  421c6d:	nop
  421c6e:	nop
  421c6f:	nop
  421c70:	push   r13
  421c72:	push   r12
  421c74:	push   rbp
  421c75:	push   rdi
  421c76:	push   rsi
  421c77:	push   rbx
  421c78:	sub    rsp,0x68
  421c7c:	mov    rdi,QWORD PTR [rip+0x27a3d]        # 0x4496c0
  421c83:	mov    rax,QWORD PTR [rdi]
  421c86:	cmp    DWORD PTR [rax],0x1
  421c89:	jle    0x421e40
  421c8f:	lea    rsi,[rsp+0x20]
  421c94:	mov    rbp,QWORD PTR [rip+0x27d25]        # 0x4499c0
  421c9b:	mov    QWORD PTR [rsp+0x30],rcx
  421ca0:	mov    BYTE PTR [rsp+0x20],0x0
  421ca5:	mov    DWORD PTR [rsp+0x24],0x0
  421cad:	xor    ebx,ebx
  421caf:	lea    r12,[rsi+0x4]
  421cb3:	mov    BYTE PTR [rsp+0x28],0x0
  421cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  421cc0:	cmp    BYTE PTR [rsp+0x20],0x0
  421cc5:	jne    0x421d35
  421cc7:	mov    rcx,QWORD PTR [rsp+0x30]
  421ccc:	movzx  eax,BYTE PTR [rcx]
  421ccf:	mov    edx,eax
  421cd1:	and    eax,0x1f
  421cd4:	shr    dl,0x5
  421cd7:	and    edx,0x7
  421cda:	mov    edx,DWORD PTR [rbp+rdx*4+0x0]
  421cde:	bt     edx,eax
  421ce1:	jae    0x421d20
  421ce3:	mov    QWORD PTR [rsp+0x38],0x1
  421cec:	movsx  ax,BYTE PTR [rcx]
  421cf0:	mov    BYTE PTR [rsp+0x40],0x1
  421cf5:	mov    WORD PTR [rsp+0x42],ax
  421cfa:	cmp    WORD PTR [rsp+0x42],0x0
  421d00:	jne    0x421df4
  421d06:	mov    rax,rbx
  421d09:	add    rsp,0x68
  421d0d:	pop    rbx
  421d0e:	pop    rsi
  421d0f:	pop    rdi
  421d10:	pop    rbp
  421d11:	pop    r12
  421d13:	pop    r13
  421d15:	ret    
  421d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d20:	mov    rcx,r12
  421d23:	call   0x424040
  421d28:	test   eax,eax
  421d2a:	je     0x421e52
  421d30:	mov    BYTE PTR [rsp+0x20],0x1
  421d35:	mov    rax,QWORD PTR [rdi]
  421d38:	mov    r13,QWORD PTR [rsp+0x30]
  421d3d:	movsxd rdx,DWORD PTR [rax]
  421d40:	mov    rcx,r13
  421d43:	call   0x422770
  421d48:	lea    rcx,[rsi+0x22]
  421d4c:	lea    r9,[rsi+0x4]
  421d50:	mov    r8,rax
  421d53:	mov    rdx,r13
  421d56:	call   0x423f00
  421d5b:	cmp    rax,0xffffffffffffffff
  421d5f:	mov    QWORD PTR [rsp+0x38],rax
  421d64:	je     0x421e10
  421d6a:	cmp    rax,0xfffffffffffffffe
  421d6e:	je     0x421e20
  421d74:	test   rax,rax
  421d77:	jne    0x421dd0
  421d79:	mov    rax,QWORD PTR [rsp+0x30]
  421d7e:	mov    QWORD PTR [rsp+0x38],0x1
  421d87:	cmp    BYTE PTR [rax],0x0
  421d8a:	je     0x421da5
  421d8c:	lea    rdx,[rip+0x25b2d]        # 0x4478c0
  421d93:	lea    rcx,[rip+0x25b8f]        # 0x447929
  421d9a:	mov    r8d,0xb2
  421da0:	call   0x435a10
  421da5:	cmp    WORD PTR [rsp+0x42],0x0
  421dab:	je     0x421dd0
  421dad:	lea    rdx,[rip+0x25b0c]        # 0x4478c0
  421db4:	lea    rcx,[rip+0x25b85]        # 0x447940
  421dbb:	mov    r8d,0xb3
  421dc1:	call   0x435a10
  421dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421dd0:	lea    rcx,[rsi+0x4]
  421dd4:	mov    BYTE PTR [rsp+0x40],0x1
  421dd9:	call   0x424040
  421dde:	test   eax,eax
  421de0:	je     0x421de7
  421de2:	mov    BYTE PTR [rsp+0x20],0x0
  421de7:	movzx  eax,BYTE PTR [rsp+0x40]
  421dec:	test   al,al
  421dee:	jne    0x421cfa
  421df4:	mov    rax,QWORD PTR [rsp+0x38]
  421df9:	add    rbx,0x1
  421dfd:	add    QWORD PTR [rsp+0x30],rax
  421e02:	mov    BYTE PTR [rsp+0x28],0x0
  421e07:	jmp    0x421cc0
  421e0c:	nop    DWORD PTR [rax+0x0]
  421e10:	mov    QWORD PTR [rsp+0x38],0x1
  421e19:	mov    BYTE PTR [rsp+0x40],0x0
  421e1e:	jmp    0x421df4
  421e20:	mov    rcx,QWORD PTR [rsp+0x30]
  421e25:	call   0x43a620
  421e2a:	mov    BYTE PTR [rsp+0x40],0x0
  421e2f:	mov    QWORD PTR [rsp+0x38],rax
  421e34:	jmp    0x421df4
  421e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e40:	call   0x43a620
  421e45:	add    rsp,0x68
  421e49:	pop    rbx
  421e4a:	pop    rsi
  421e4b:	pop    rdi
  421e4c:	pop    rbp
  421e4d:	pop    r12
  421e4f:	pop    r13
  421e51:	ret    
  421e52:	lea    rdx,[rip+0x25a67]        # 0x4478c0
  421e59:	lea    rcx,[rip+0x25ab2]        # 0x447912
  421e60:	mov    r8d,0x96
  421e66:	call   0x435a10
  421e6b:	jmp    0x421d30
  421e70:	push   r15
  421e72:	push   r14
  421e74:	push   r13
  421e76:	push   r12
  421e78:	push   rbp
  421e79:	push   rdi
  421e7a:	push   rsi
  421e7b:	push   rbx
  421e7c:	sub    rsp,0xb8
  421e83:	cmp    rcx,rdx
  421e86:	mov    rbp,rcx
  421e89:	mov    r12,rdx
  421e8c:	mov    rsi,r8
  421e8f:	je     0x4222f0
  421e95:	test   r8,r8
  421e98:	je     0x4222f0
  421e9e:	mov    r13,QWORD PTR [rip+0x2781b]        # 0x4496c0
  421ea5:	mov    rax,QWORD PTR [r13+0x0]
  421ea9:	cmp    DWORD PTR [rax],0x1
  421eac:	jle    0x422490
  421eb2:	lea    rbp,[rsp+0x30]
  421eb7:	lea    r12,[rsp+0x70]
  421ebc:	mov    r14,QWORD PTR [rip+0x27afd]        # 0x4499c0
  421ec3:	mov    QWORD PTR [rsp+0x40],rcx
  421ec8:	mov    BYTE PTR [rsp+0x30],0x0
  421ecd:	lea    rax,[rbp+0x4]
  421ed1:	mov    DWORD PTR [rsp+0x34],0x0
  421ed9:	mov    BYTE PTR [rsp+0x38],0x0
  421ede:	mov    QWORD PTR [rsp+0x80],rdx
  421ee6:	mov    BYTE PTR [rsp+0x70],0x0
  421eeb:	mov    r15,r14
  421eee:	mov    QWORD PTR [rsp+0x20],rax
  421ef3:	lea    rax,[r12+0x4]
  421ef8:	mov    DWORD PTR [rsp+0x74],0x0
  421f00:	mov    BYTE PTR [rsp+0x78],0x0
  421f05:	mov    QWORD PTR [rsp+0x28],rax
  421f0a:	nop    WORD PTR [rax+rax*1+0x0]
  421f10:	cmp    BYTE PTR [rsp+0x30],0x0
  421f15:	jne    0x421fec
  421f1b:	mov    rcx,QWORD PTR [rsp+0x40]
  421f20:	movzx  eax,BYTE PTR [rcx]
  421f23:	mov    edx,eax
  421f25:	and    eax,0x1f
  421f28:	shr    dl,0x5
  421f2b:	and    edx,0x7
  421f2e:	mov    edx,DWORD PTR [r14+rdx*4]
  421f32:	bt     edx,eax
  421f35:	jae    0x421fd5
  421f3b:	mov    QWORD PTR [rsp+0x48],0x1
  421f44:	movsx  ax,BYTE PTR [rcx]
  421f48:	mov    BYTE PTR [rsp+0x50],0x1
  421f4d:	mov    BYTE PTR [rsp+0x38],0x1
  421f52:	mov    WORD PTR [rsp+0x52],ax
  421f57:	cmp    WORD PTR [rsp+0x52],0x0
  421f5d:	jne    0x42207d
  421f63:	cmp    BYTE PTR [rsp+0x78],0x0
  421f68:	jne    0x422213
  421f6e:	cmp    BYTE PTR [rsp+0x70],0x0
  421f73:	lea    rbx,[rsp+0x70]
  421f78:	jne    0x422195
  421f7e:	mov    rcx,QWORD PTR [rsp+0x80]
  421f86:	mov    r8,QWORD PTR [rip+0x27a33]        # 0x4499c0
  421f8d:	movzx  eax,BYTE PTR [rcx]
  421f90:	mov    edx,eax
  421f92:	and    eax,0x1f
  421f95:	shr    dl,0x5
  421f98:	and    edx,0x7
  421f9b:	mov    edx,DWORD PTR [r8+rdx*4]
  421f9f:	bt     edx,eax
  421fa2:	jae    0x42217a
  421fa8:	mov    QWORD PTR [rsp+0x88],0x1
  421fb4:	movsx  ax,BYTE PTR [rcx]
  421fb8:	mov    WORD PTR [rsp+0x92],ax
  421fc0:	xor    eax,eax
  421fc2:	cmp    WORD PTR [rsp+0x92],0x0
  421fcb:	setne  al
  421fce:	neg    eax
  421fd0:	jmp    0x4220e0
  421fd5:	mov    rcx,QWORD PTR [rsp+0x20]
  421fda:	call   0x424040
  421fdf:	test   eax,eax
  421fe1:	je     0x4225b0
  421fe7:	mov    BYTE PTR [rsp+0x30],0x1
  421fec:	mov    rax,QWORD PTR [r13+0x0]
  421ff0:	mov    rbx,QWORD PTR [rsp+0x40]
  421ff5:	movsxd rdx,DWORD PTR [rax]
  421ff8:	mov    rcx,rbx
  421ffb:	call   0x422770
  422000:	lea    rcx,[rbp+0x22]
  422004:	lea    r9,[rbp+0x4]
  422008:	mov    r8,rax
  42200b:	mov    rdx,rbx
  42200e:	call   0x423f00
  422013:	cmp    rax,0xffffffffffffffff
  422017:	mov    QWORD PTR [rsp+0x48],rax
  42201c:	je     0x422390
  422022:	cmp    rax,0xfffffffffffffffe
  422026:	je     0x422420
  42202c:	test   rax,rax
  42202f:	jne    0x422054
  422031:	mov    rax,QWORD PTR [rsp+0x40]
  422036:	mov    QWORD PTR [rsp+0x48],0x1
  42203f:	cmp    BYTE PTR [rax],0x0
  422042:	jne    0x422610
  422048:	cmp    WORD PTR [rsp+0x52],0x0
  42204e:	jne    0x4225f0
  422054:	lea    rcx,[rbp+0x4]
  422058:	mov    BYTE PTR [rsp+0x50],0x1
  42205d:	call   0x424040
  422062:	test   eax,eax
  422064:	je     0x42206b
  422066:	mov    BYTE PTR [rsp+0x30],0x0
  42206b:	movzx  eax,BYTE PTR [rsp+0x50]
  422070:	mov    BYTE PTR [rsp+0x38],0x1
  422075:	test   al,al
  422077:	jne    0x421f57
  42207d:	movzx  ebx,BYTE PTR [rsp+0x78]
  422082:	test   bl,bl
  422084:	je     0x4220f4
  422086:	movzx  ebx,BYTE PTR [rsp+0x90]
  42208e:	test   bl,bl
  422090:	jne    0x422154
  422096:	cmp    BYTE PTR [rsp+0x50],0x0
  42209b:	jne    0x422223
  4220a1:	mov    r8,QWORD PTR [rsp+0x48]
  4220a6:	mov    rax,QWORD PTR [rsp+0x88]
  4220ae:	cmp    r8,rax
  4220b1:	je     0x4223d0
  4220b7:	cmp    rax,r8
  4220ba:	jbe    0x422370
  4220c0:	mov    rdx,QWORD PTR [rsp+0x80]
  4220c8:	mov    rcx,QWORD PTR [rsp+0x40]
  4220cd:	call   0x43a6c0
  4220d2:	test   eax,eax
  4220d4:	setg   al
  4220d7:	movzx  eax,al
  4220da:	lea    eax,[rax+rax*1-0x1]
  4220de:	xchg   ax,ax
  4220e0:	add    rsp,0xb8
  4220e7:	pop    rbx
  4220e8:	pop    rsi
  4220e9:	pop    rdi
  4220ea:	pop    rbp
  4220eb:	pop    r12
  4220ed:	pop    r13
  4220ef:	pop    r14
  4220f1:	pop    r15
  4220f3:	ret    
  4220f4:	cmp    BYTE PTR [rsp+0x70],0x0
  4220f9:	jne    0x422247
  4220ff:	mov    rcx,QWORD PTR [rsp+0x80]
  422107:	movzx  eax,BYTE PTR [rcx]
  42210a:	mov    edx,eax
  42210c:	and    eax,0x1f
  42210f:	shr    dl,0x5
  422112:	and    edx,0x7
  422115:	mov    edx,DWORD PTR [r15+rdx*4]
  422119:	bt     edx,eax
  42211c:	jae    0x422230
  422122:	mov    QWORD PTR [rsp+0x88],0x1
  42212e:	movsx  ax,BYTE PTR [rcx]
  422132:	mov    ebx,0x1
  422137:	mov    BYTE PTR [rsp+0x90],0x1
  42213f:	mov    WORD PTR [rsp+0x92],ax
  422147:	test   bl,bl
  422149:	mov    BYTE PTR [rsp+0x78],0x1
  42214e:	je     0x422096
  422154:	movzx  edi,WORD PTR [rsp+0x92]
  42215c:	test   di,di
  42215f:	jne    0x422462
  422165:	cmp    BYTE PTR [rsp+0x38],0x0
  42216a:	je     0x422300
  422170:	movzx  ebx,BYTE PTR [rsp+0x50]
  422175:	jmp    0x42234e
  42217a:	lea    rbx,[rsp+0x70]
  42217f:	lea    rcx,[rbx+0x4]
  422183:	call   0x424040
  422188:	test   eax,eax
  42218a:	je     0x4226d5
  422190:	mov    BYTE PTR [rsp+0x70],0x1
  422195:	mov    rax,QWORD PTR [r13+0x0]
  422199:	mov    rsi,QWORD PTR [rsp+0x80]
  4221a1:	movsxd rdx,DWORD PTR [rax]
  4221a4:	mov    rcx,rsi
  4221a7:	call   0x422770
  4221ac:	lea    rcx,[rbx+0x22]
  4221b0:	lea    r9,[rbx+0x4]
  4221b4:	mov    rdx,rsi
  4221b7:	mov    r8,rax
  4221ba:	call   0x423f00
  4221bf:	lea    rdx,[rax+0x2]
  4221c3:	mov    QWORD PTR [rsp+0x88],rax
  4221cb:	cmp    rdx,0x1
  4221cf:	jbe    0x422223
  4221d1:	test   rax,rax
  4221d4:	jne    0x422202
  4221d6:	mov    rax,QWORD PTR [rsp+0x80]
  4221de:	mov    QWORD PTR [rsp+0x88],0x1
  4221ea:	cmp    BYTE PTR [rax],0x0
  4221ed:	jne    0x42274d
  4221f3:	cmp    WORD PTR [rsp+0x92],0x0
  4221fc:	jne    0x42272f
  422202:	lea    rcx,[rbx+0x4]
  422206:	mov    BYTE PTR [rsp+0x90],0x1
  42220e:	call   0x424040
  422213:	movzx  eax,BYTE PTR [rsp+0x90]
  42221b:	test   al,al
  42221d:	jne    0x421fc0
  422223:	mov    eax,0xffffffff
  422228:	jmp    0x4220e0
  42222d:	nop    DWORD PTR [rax]
  422230:	mov    rcx,QWORD PTR [rsp+0x28]
  422235:	call   0x424040
  42223a:	test   eax,eax
  42223c:	je     0x4225d0
  422242:	mov    BYTE PTR [rsp+0x70],0x1
  422247:	mov    rax,QWORD PTR [r13+0x0]
  42224b:	mov    rdi,QWORD PTR [rsp+0x80]
  422253:	movsxd rdx,DWORD PTR [rax]
  422256:	mov    rcx,rdi
  422259:	call   0x422770
  42225e:	lea    rcx,[r12+0x22]
  422263:	lea    r9,[r12+0x4]
  422268:	mov    r8,rax
  42226b:	mov    rdx,rdi
  42226e:	call   0x423f00
  422273:	cmp    rax,0xffffffffffffffff
  422277:	mov    QWORD PTR [rsp+0x88],rax
  42227f:	je     0x4223b0
  422285:	cmp    rax,0xfffffffffffffffe
  422289:	je     0x422440
  42228f:	test   rax,rax
  422292:	jne    0x4222c0
  422294:	mov    rax,QWORD PTR [rsp+0x80]
  42229c:	mov    QWORD PTR [rsp+0x88],0x1
  4222a8:	cmp    BYTE PTR [rax],0x0
  4222ab:	jne    0x422650
  4222b1:	cmp    WORD PTR [rsp+0x92],0x0
  4222ba:	jne    0x422630
  4222c0:	lea    rcx,[r12+0x4]
  4222c5:	mov    BYTE PTR [rsp+0x90],0x1
  4222cd:	call   0x424040
  4222d2:	test   eax,eax
  4222d4:	je     0x4222db
  4222d6:	mov    BYTE PTR [rsp+0x70],0x0
  4222db:	movzx  ebx,BYTE PTR [rsp+0x90]
  4222e3:	jmp    0x422147
  4222e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4222f0:	xor    eax,eax
  4222f2:	jmp    0x4220e0
  4222f7:	nop    WORD PTR [rax+rax*1+0x0]
  422300:	cmp    BYTE PTR [rsp+0x30],0x0
  422305:	jne    0x422520
  42230b:	mov    rcx,QWORD PTR [rsp+0x40]
  422310:	mov    r8,QWORD PTR [rip+0x276a9]        # 0x4499c0
  422317:	movzx  eax,BYTE PTR [rcx]
  42231a:	mov    edx,eax
  42231c:	and    eax,0x1f
  42231f:	shr    dl,0x5
  422322:	and    edx,0x7
  422325:	mov    edx,DWORD PTR [r8+rdx*4]
  422329:	bt     edx,eax
  42232c:	jae    0x422683
  422332:	mov    QWORD PTR [rsp+0x48],0x1
  42233b:	movsx  ax,BYTE PTR [rcx]
  42233f:	mov    BYTE PTR [rsp+0x50],0x1
  422344:	mov    WORD PTR [rsp+0x52],ax
  422349:	mov    BYTE PTR [rsp+0x38],0x1
  42234e:	test   bl,bl
  422350:	mov    eax,0x1
  422355:	je     0x4220e0
  42235b:	cmp    WORD PTR [rsp+0x52],0x0
  422361:	jne    0x4220e0
  422367:	jmp    0x421f63
  42236c:	nop    DWORD PTR [rax+0x0]
  422370:	mov    rdx,QWORD PTR [rsp+0x80]
  422378:	mov    rcx,QWORD PTR [rsp+0x40]
  42237d:	mov    r8,rax
  422380:	call   0x43a6c0
  422385:	sar    eax,0x1f
  422388:	or     eax,0x1
  42238b:	jmp    0x4220e0
  422390:	mov    QWORD PTR [rsp+0x48],0x1
  422399:	mov    BYTE PTR [rsp+0x50],0x0
  42239e:	mov    BYTE PTR [rsp+0x38],0x1
  4223a3:	jmp    0x42207d
  4223a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4223b0:	mov    QWORD PTR [rsp+0x88],0x1
  4223bc:	mov    BYTE PTR [rsp+0x90],0x0
  4223c4:	jmp    0x422147
  4223c9:	nop    DWORD PTR [rax+0x0]
  4223d0:	mov    rdx,QWORD PTR [rsp+0x80]
  4223d8:	mov    rcx,QWORD PTR [rsp+0x40]
  4223dd:	call   0x43a6c0
  4223e2:	test   eax,eax
  4223e4:	jne    0x4220e0
  4223ea:	sub    rsi,0x1
  4223ee:	je     0x4222f0
  4223f4:	mov    rax,QWORD PTR [rsp+0x48]
  4223f9:	mov    BYTE PTR [rsp+0x38],0x0
  4223fe:	add    QWORD PTR [rsp+0x40],rax
  422403:	mov    BYTE PTR [rsp+0x78],0x0
  422408:	mov    rax,QWORD PTR [rsp+0x88]
  422410:	add    QWORD PTR [rsp+0x80],rax
  422418:	jmp    0x421f10
  42241d:	nop    DWORD PTR [rax]
  422420:	mov    rcx,QWORD PTR [rsp+0x40]
  422425:	call   0x43a620
  42242a:	mov    BYTE PTR [rsp+0x50],0x0
  42242f:	mov    QWORD PTR [rsp+0x48],rax
  422434:	jmp    0x42239e
  422439:	nop    DWORD PTR [rax+0x0]
  422440:	mov    rcx,QWORD PTR [rsp+0x80]
  422448:	call   0x43a620
  42244d:	mov    BYTE PTR [rsp+0x90],0x0
  422455:	mov    QWORD PTR [rsp+0x88],rax
  42245d:	jmp    0x422147
  422462:	cmp    BYTE PTR [rsp+0x50],0x0
  422467:	je     0x422510
  42246d:	movzx  ecx,WORD PTR [rsp+0x52]
  422472:	call   0x43a5d8
  422477:	movzx  ecx,di
  42247a:	movzx  ebx,ax
  42247d:	call   0x43a5d8
  422482:	movzx  eax,ax
  422485:	sub    ebx,eax
  422487:	mov    eax,ebx
  422489:	jmp    0x4223e2
  42248e:	xchg   ax,ax
  422490:	mov    rax,QWORD PTR [rip+0x326f9]        # 0x454b90
  422497:	sub    rsi,0x1
  42249b:	xor    edi,edi
  42249d:	mov    r13,QWORD PTR [rip+0x325ec]        # 0x454a90
  4224a4:	mov    QWORD PTR [rsp+0x20],rax
  4224a9:	jmp    0x4224bd
  4224ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4224b0:	add    rdi,0x1
  4224b4:	cmp    bl,r14b
  4224b7:	jne    0x422500
  4224b9:	test   bl,bl
  4224bb:	je     0x422500
  4224bd:	movzx  r14d,BYTE PTR [rbp+rdi*1+0x0]
  4224c3:	mov    ecx,r14d
  4224c6:	mov    ebx,r14d
  4224c9:	call   r13
  4224cc:	test   eax,eax
  4224ce:	je     0x4224dc
  4224d0:	mov    ecx,r14d
  4224d3:	call   QWORD PTR [rip+0x326b7]        # 0x454b90
  4224d9:	movzx  ebx,al
  4224dc:	movzx  r15d,BYTE PTR [r12+rdi*1]
  4224e1:	mov    ecx,r15d
  4224e4:	mov    r14d,r15d
  4224e7:	call   r13
  4224ea:	test   eax,eax
  4224ec:	je     0x4224fb
  4224ee:	mov    ecx,r15d
  4224f1:	mov    rax,QWORD PTR [rsp+0x20]
  4224f6:	call   rax
  4224f8:	mov    r14d,eax
  4224fb:	cmp    rdi,rsi
  4224fe:	jne    0x4224b0
  422500:	movzx  edx,r14b
  422504:	mov    eax,ebx
  422506:	sub    eax,edx
  422508:	jmp    0x4220e0
  42250d:	nop    DWORD PTR [rax]
  422510:	mov    eax,0x1
  422515:	jmp    0x4220e0
  42251a:	nop    WORD PTR [rax+rax*1+0x0]
  422520:	lea    rbx,[rsp+0x30]
  422525:	mov    rax,QWORD PTR [r13+0x0]
  422529:	mov    rsi,QWORD PTR [rsp+0x40]
  42252e:	movsxd rdx,DWORD PTR [rax]
  422531:	mov    rcx,rsi
  422534:	call   0x422770
  422539:	lea    rcx,[rbx+0x22]
  42253d:	lea    r9,[rbx+0x4]
  422541:	mov    r8,rax
  422544:	mov    rdx,rsi
  422547:	call   0x423f00
  42254c:	cmp    rax,0xffffffffffffffff
  422550:	mov    QWORD PTR [rsp+0x48],rax
  422555:	je     0x42266e
  42255b:	cmp    rax,0xfffffffffffffffe
  42255f:	je     0x42269f
  422565:	test   rax,rax
  422568:	jne    0x42258d
  42256a:	mov    rax,QWORD PTR [rsp+0x40]
  42256f:	mov    QWORD PTR [rsp+0x48],0x1
  422578:	cmp    BYTE PTR [rax],0x0
  42257b:	jne    0x422711
  422581:	cmp    WORD PTR [rsp+0x52],0x0
  422587:	jne    0x4226f3
  42258d:	lea    rcx,[rbx+0x4]
  422591:	mov    BYTE PTR [rsp+0x50],0x1
  422596:	call   0x424040
  42259b:	test   eax,eax
  42259d:	je     0x4225a4
  42259f:	mov    BYTE PTR [rsp+0x30],0x0
  4225a4:	movzx  ebx,BYTE PTR [rsp+0x50]
  4225a9:	jmp    0x422349
  4225ae:	xchg   ax,ax
  4225b0:	lea    rdx,[rip+0x253a9]        # 0x447960
  4225b7:	lea    rcx,[rip+0x253f4]        # 0x4479b2
  4225be:	mov    r8d,0x96
  4225c4:	call   0x435a10
  4225c9:	jmp    0x421fe7
  4225ce:	xchg   ax,ax
  4225d0:	lea    rdx,[rip+0x25389]        # 0x447960
  4225d7:	lea    rcx,[rip+0x253d4]        # 0x4479b2
  4225de:	mov    r8d,0x96
  4225e4:	call   0x435a10
  4225e9:	jmp    0x422242
  4225ee:	xchg   ax,ax
  4225f0:	lea    rdx,[rip+0x25369]        # 0x447960
  4225f7:	lea    rcx,[rip+0x253e2]        # 0x4479e0
  4225fe:	mov    r8d,0xb3
  422604:	call   0x435a10
  422609:	jmp    0x422054
  42260e:	xchg   ax,ax
  422610:	lea    rdx,[rip+0x25349]        # 0x447960
  422617:	lea    rcx,[rip+0x253ab]        # 0x4479c9
  42261e:	mov    r8d,0xb2
  422624:	call   0x435a10
  422629:	jmp    0x422048
  42262e:	xchg   ax,ax
  422630:	lea    rdx,[rip+0x25329]        # 0x447960
  422637:	lea    rcx,[rip+0x253a2]        # 0x4479e0
  42263e:	mov    r8d,0xb3
  422644:	call   0x435a10
  422649:	jmp    0x4222c0
  42264e:	xchg   ax,ax
  422650:	lea    rdx,[rip+0x25309]        # 0x447960
  422657:	lea    rcx,[rip+0x2536b]        # 0x4479c9
  42265e:	mov    r8d,0xb2
  422664:	call   0x435a10
  422669:	jmp    0x4222b1
  42266e:	mov    QWORD PTR [rsp+0x48],0x1
  422677:	mov    BYTE PTR [rsp+0x50],0x0
  42267c:	xor    ebx,ebx
  42267e:	jmp    0x422349
  422683:	lea    rbx,[rsp+0x30]
  422688:	lea    rcx,[rbx+0x4]
  42268c:	call   0x424040
  422691:	test   eax,eax
  422693:	je     0x4226ba
  422695:	mov    BYTE PTR [rsp+0x30],0x1
  42269a:	jmp    0x422525
  42269f:	mov    rcx,QWORD PTR [rsp+0x40]
  4226a4:	xor    ebx,ebx
  4226a6:	call   0x43a620
  4226ab:	mov    BYTE PTR [rsp+0x50],0x0
  4226b0:	mov    QWORD PTR [rsp+0x48],rax
  4226b5:	jmp    0x422349
  4226ba:	lea    rdx,[rip+0x2529f]        # 0x447960
  4226c1:	lea    rcx,[rip+0x252ea]        # 0x4479b2
  4226c8:	mov    r8d,0x96
  4226ce:	call   0x435a10
  4226d3:	jmp    0x422695
  4226d5:	lea    rdx,[rip+0x25284]        # 0x447960
  4226dc:	lea    rcx,[rip+0x252cf]        # 0x4479b2
  4226e3:	mov    r8d,0x96
  4226e9:	call   0x435a10
  4226ee:	jmp    0x422190
  4226f3:	lea    rdx,[rip+0x25266]        # 0x447960
  4226fa:	lea    rcx,[rip+0x252df]        # 0x4479e0
  422701:	mov    r8d,0xb3
  422707:	call   0x435a10
  42270c:	jmp    0x42258d
  422711:	lea    rdx,[rip+0x25248]        # 0x447960
  422718:	lea    rcx,[rip+0x252aa]        # 0x4479c9
  42271f:	mov    r8d,0xb2
  422725:	call   0x435a10
  42272a:	jmp    0x422581
  42272f:	lea    rdx,[rip+0x2522a]        # 0x447960
  422736:	lea    rcx,[rip+0x252a3]        # 0x4479e0
  42273d:	mov    r8d,0xb3
  422743:	call   0x435a10
  422748:	jmp    0x422202
  42274d:	lea    rdx,[rip+0x2520c]        # 0x447960
  422754:	lea    rcx,[rip+0x2526e]        # 0x4479c9
  42275b:	mov    r8d,0xb2
  422761:	call   0x435a10
  422766:	jmp    0x4221f3
  42276b:	nop
  42276c:	nop
  42276d:	nop
  42276e:	nop
  42276f:	nop
  422770:	push   rsi
  422771:	push   rbx
  422772:	sub    rsp,0x28
  422776:	mov    r8,rdx
  422779:	mov    rsi,rdx
  42277c:	xor    edx,edx
  42277e:	mov    rbx,rcx
  422781:	call   0x424060
  422786:	test   rax,rax
  422789:	je     0x4227a0
  42278b:	sub    rax,rbx
  42278e:	add    rax,0x1
  422792:	add    rsp,0x28
  422796:	pop    rbx
  422797:	pop    rsi
  422798:	ret    
  422799:	nop    DWORD PTR [rax+0x0]
  4227a0:	mov    rax,rsi
  4227a3:	add    rsp,0x28
  4227a7:	pop    rbx
  4227a8:	pop    rsi
  4227a9:	ret    
  4227aa:	nop
  4227ab:	nop
  4227ac:	nop
  4227ad:	nop
  4227ae:	nop
  4227af:	nop
  4227b0:	push   rbx
  4227b1:	sub    rsp,0x20
  4227b5:	mov    rbx,rcx
  4227b8:	call   0x423ec0
  4227bd:	test   rax,rax
  4227c0:	jne    0x4227c7
  4227c2:	test   rbx,rbx
  4227c5:	jne    0x4227cd
  4227c7:	add    rsp,0x20
  4227cb:	pop    rbx
  4227cc:	ret    
  4227cd:	call   0x422a20
  4227d2:	nop
  4227d3:	nop    DWORD PTR [rax]
  4227d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227e0:	sub    rsp,0x28
  4227e4:	mov    rax,0xffffffffffffffff
  4227eb:	mov    r8,rdx
  4227ee:	xor    edx,edx
  4227f0:	div    r8
  4227f3:	cmp    rax,rcx
  4227f6:	jb     0x422802
  4227f8:	imul   rcx,r8
  4227fc:	add    rsp,0x28
  422800:	jmp    0x4227b0
  422802:	call   0x422a20
  422807:	nop
  422808:	nop    DWORD PTR [rax+rax*1+0x0]
  422810:	jmp    0x4227b0
  422812:	nop    DWORD PTR [rax+0x0]
  422816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422820:	push   rbx
  422821:	sub    rsp,0x20
  422825:	test   rdx,rdx
  422828:	mov    rbx,rdx
  42282b:	jne    0x422832
  42282d:	test   rcx,rcx
  422830:	jne    0x422850
  422832:	mov    rdx,rbx
  422835:	call   0x43a680
  42283a:	test   rax,rax
  42283d:	jne    0x422844
  42283f:	test   rbx,rbx
  422842:	jne    0x42285d
  422844:	add    rsp,0x20
  422848:	pop    rbx
  422849:	ret    
  42284a:	nop    WORD PTR [rax+rax*1+0x0]
  422850:	call   0x43a748
  422855:	xor    eax,eax
  422857:	add    rsp,0x20
  42285b:	pop    rbx
  42285c:	ret    
  42285d:	call   0x422a20
  422862:	nop
  422863:	nop    DWORD PTR [rax]
  422866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422870:	sub    rsp,0x28
  422874:	mov    rax,0xffffffffffffffff
  42287b:	mov    r9,rdx
  42287e:	xor    edx,edx
  422880:	div    r8
  422883:	cmp    rax,r9
  422886:	jb     0x422895
  422888:	mov    rdx,r8
  42288b:	imul   rdx,r9
  42288f:	add    rsp,0x28
  422893:	jmp    0x422820
  422895:	call   0x422a20
  42289a:	nop
  42289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4228a0:	sub    rsp,0x28
  4228a4:	mov    r9,QWORD PTR [rdx]
  4228a7:	test   rcx,rcx
  4228aa:	mov    r10,rdx
  4228ad:	je     0x4228e1
  4228af:	xor    edx,edx
  4228b1:	movabs rax,0xaaaaaaaaaaaaaaaa
  4228bb:	div    r8
  4228be:	cmp    r9,rax
  4228c1:	jae    0x4228ff
  4228c3:	mov    rax,r9
  4228c6:	shr    rax,1
  4228c9:	lea    r9,[r9+rax*1+0x1]
  4228ce:	mov    rdx,r9
  4228d1:	mov    QWORD PTR [r10],r9
  4228d4:	imul   rdx,r8
  4228d8:	add    rsp,0x28
  4228dc:	jmp    0x422820
  4228e1:	test   r9,r9
  4228e4:	jne    0x4228ce
  4228e6:	xor    edx,edx
  4228e8:	mov    eax,0x80
  4228ed:	xor    r9d,r9d
  4228f0:	div    r8
  4228f3:	test   rax,rax
  4228f6:	sete   r9b
  4228fa:	add    r9,rax
  4228fd:	jmp    0x4228ce
  4228ff:	call   0x422a20
  422904:	nop
  422905:	nop
  422906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422910:	sub    rsp,0x28
  422914:	mov    rax,QWORD PTR [rdx]
  422917:	test   rcx,rcx
  42291a:	je     0x422945
  42291c:	movabs r8,0xaaaaaaaaaaaaaaa9
  422926:	cmp    rax,r8
  422929:	ja     0x422961
  42292b:	mov    r8,rax
  42292e:	shr    r8,1
  422931:	lea    rax,[r8+rax*1+0x1]
  422936:	mov    QWORD PTR [rdx],rax
  422939:	mov    rdx,rax
  42293c:	add    rsp,0x28
  422940:	jmp    0x422820
  422945:	test   rax,rax
  422948:	mov    r8d,0x80
  42294e:	cmove  rax,r8
  422952:	mov    QWORD PTR [rdx],rax
  422955:	mov    rdx,rax
  422958:	add    rsp,0x28
  42295c:	jmp    0x422820
  422961:	call   0x422a20
  422966:	nop
  422967:	nop    WORD PTR [rax+rax*1+0x0]
  422970:	push   rbx
  422971:	sub    rsp,0x20
  422975:	mov    rbx,rcx
  422978:	call   0x4227b0
  42297d:	mov    r8,rbx
  422980:	xor    edx,edx
  422982:	mov    rcx,rax
  422985:	add    rsp,0x20
  422989:	pop    rbx
  42298a:	jmp    0x43a6a8
  42298f:	nop
  422990:	push   rbx
  422991:	sub    rsp,0x20
  422995:	mov    rax,0xffffffffffffffff
  42299c:	mov    r8,rdx
  42299f:	xor    edx,edx
  4229a1:	mov    rbx,rcx
  4229a4:	div    r8
  4229a7:	cmp    rax,rcx
  4229aa:	jb     0x4229c4
  4229ac:	mov    rdx,r8
  4229af:	call   0x43a798
  4229b4:	test   rax,rax
  4229b7:	jne    0x4229be
  4229b9:	test   rbx,rbx
  4229bc:	jne    0x4229c4
  4229be:	add    rsp,0x20
  4229c2:	pop    rbx
  4229c3:	ret    
  4229c4:	call   0x422a20
  4229c9:	nop
  4229ca:	nop    WORD PTR [rax+rax*1+0x0]
  4229d0:	push   rsi
  4229d1:	push   rbx
  4229d2:	sub    rsp,0x28
  4229d6:	mov    rbx,rdx
  4229d9:	mov    rsi,rcx
  4229dc:	mov    rcx,rdx
  4229df:	call   0x4227b0
  4229e4:	mov    r8,rbx
  4229e7:	mov    rdx,rsi
  4229ea:	mov    rcx,rax
  4229ed:	add    rsp,0x28
  4229f1:	pop    rbx
  4229f2:	pop    rsi
  4229f3:	jmp    0x43a6b8
  4229f8:	nop    DWORD PTR [rax+rax*1+0x0]
  422a00:	push   rbx
  422a01:	sub    rsp,0x20
  422a05:	mov    rbx,rcx
  422a08:	call   0x43a620
  422a0d:	lea    rdx,[rax+0x1]
  422a11:	mov    rcx,rbx
  422a14:	add    rsp,0x20
  422a18:	pop    rbx
  422a19:	jmp    0x4229d0
  422a1b:	nop
  422a1c:	nop
  422a1d:	nop
  422a1e:	nop
  422a1f:	nop
  422a20:	sub    rsp,0x28
  422a24:	lea    rcx,[rip+0x24fd5]        # 0x447a00
  422a2b:	call   0x433f18
  422a30:	mov    r9,rax
  422a33:	mov    rax,QWORD PTR [rip+0x26ea6]        # 0x4498e0
  422a3a:	lea    r8,[rip+0x24fd0]        # 0x447a11
  422a41:	xor    edx,edx
  422a43:	mov    ecx,DWORD PTR [rax]
  422a45:	call   0x422b60
  422a4a:	call   0x43a7b0
  422a4f:	nop
  422a50:	push   r12
  422a52:	push   rbp
  422a53:	push   rdi
  422a54:	push   rsi
  422a55:	push   rbx
  422a56:	sub    rsp,0x20
  422a5a:	mov    rbx,QWORD PTR [rip+0x31e8f]        # 0x4548f0
  422a61:	mov    edi,edx
  422a63:	mov    rbp,r8
  422a66:	mov    r12,r9
  422a69:	mov    esi,ecx
  422a6b:	mov    QWORD PTR [rsp+0x68],r9
  422a70:	call   rbx
  422a72:	lea    rcx,[rax+0x60]
  422a76:	mov    r8,r12
  422a79:	mov    rdx,rbp
  422a7c:	call   0x433ef0
  422a81:	add    DWORD PTR [rip+0x30e88],0x1        # 0x453910
  422a88:	test   edi,edi
  422a8a:	jne    0x422ac0
  422a8c:	call   rbx
  422a8e:	lea    rdx,[rax+0x60]
  422a92:	mov    ecx,0xa
  422a97:	call   0x43a6a0
  422a9c:	call   rbx
  422a9e:	lea    rcx,[rax+0x60]
  422aa2:	call   0x43a780
  422aa7:	test   esi,esi
  422aa9:	jne    0x422b01
  422aab:	add    rsp,0x20
  422aaf:	pop    rbx
  422ab0:	pop    rsi
  422ab1:	pop    rdi
  422ab2:	pop    rbp
  422ab3:	pop    r12
  422ab5:	ret    
  422ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ac0:	mov    ecx,edi
  422ac2:	call   0x433110
  422ac7:	test   rax,rax
  422aca:	mov    rdi,rax
  422acd:	je     0x422af0
  422acf:	call   rbx
  422ad1:	lea    rdx,[rip+0x24f5d]        # 0x447a35
  422ad8:	lea    rcx,[rax+0x60]
  422adc:	mov    r8,rdi
  422adf:	call   0x433f20
  422ae4:	jmp    0x422a8c
  422ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422af0:	lea    rcx,[rip+0x24f29]        # 0x447a20
  422af7:	call   0x433f18
  422afc:	mov    rdi,rax
  422aff:	jmp    0x422acf
  422b01:	mov    ecx,esi
  422b03:	call   0x43a790
  422b08:	nop
  422b09:	nop    DWORD PTR [rax+0x0]
  422b10:	push   rbx
  422b11:	sub    rsp,0x20
  422b15:	mov    rbx,QWORD PTR [rip+0x31dd4]        # 0x4548f0
  422b1c:	call   rbx
  422b1e:	lea    rcx,[rax+0x30]
  422b22:	call   0x43a578
  422b27:	test   eax,eax
  422b29:	js     0x422b50
  422b2b:	mov    ecx,eax
  422b2d:	call   0x424210
  422b32:	cmp    rax,0xffffffffffffffff
  422b36:	je     0x422b50
  422b38:	call   rbx
  422b3a:	lea    rcx,[rax+0x30]
  422b3e:	add    rsp,0x20
  422b42:	pop    rbx
  422b43:	jmp    0x43a780
  422b48:	nop    DWORD PTR [rax+rax*1+0x0]
  422b50:	add    rsp,0x20
  422b54:	pop    rbx
  422b55:	ret    
  422b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b60:	push   rbp
  422b61:	push   rdi
  422b62:	push   rsi
  422b63:	push   rbx
  422b64:	sub    rsp,0x38
  422b68:	mov    ebx,ecx
  422b6a:	mov    esi,edx
  422b6c:	mov    QWORD PTR [rsp+0x78],r9
  422b71:	mov    rdi,r8
  422b74:	call   0x422b10
  422b79:	mov    rax,QWORD PTR [rip+0x30d98]        # 0x453918
  422b80:	test   rax,rax
  422b83:	je     0x422bb0
  422b85:	call   rax
  422b87:	lea    r9,[rsp+0x78]
  422b8c:	mov    r8,rdi
  422b8f:	mov    edx,esi
  422b91:	mov    ecx,ebx
  422b93:	mov    QWORD PTR [rsp+0x28],r9
  422b98:	call   0x422a50
  422b9d:	nop
  422b9e:	add    rsp,0x38
  422ba2:	pop    rbx
  422ba3:	pop    rsi
  422ba4:	pop    rdi
  422ba5:	pop    rbp
  422ba6:	ret    
  422ba7:	nop    WORD PTR [rax+rax*1+0x0]
  422bb0:	mov    rax,QWORD PTR [rip+0x26f69]        # 0x449b20
  422bb7:	mov    rbp,QWORD PTR [rax]
  422bba:	call   QWORD PTR [rip+0x31d30]        # 0x4548f0
  422bc0:	lea    rdx,[rip+0x24e73]        # 0x447a3a
  422bc7:	lea    rcx,[rax+0x60]
  422bcb:	mov    r8,rbp
  422bce:	call   0x433f20
  422bd3:	jmp    0x422b87
  422bd5:	nop
  422bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422be0:	push   r13
  422be2:	push   r12
  422be4:	push   rbp
  422be5:	push   rdi
  422be6:	push   rsi
  422be7:	push   rbx
  422be8:	sub    rsp,0x38
  422bec:	mov    eax,DWORD PTR [rip+0x30d2e]        # 0x453920
  422bf2:	mov    ebp,ecx
  422bf4:	mov    r12d,edx
  422bf7:	mov    rbx,r8
  422bfa:	mov    edi,r9d
  422bfd:	test   eax,eax
  422bff:	je     0x422c1b
  422c01:	cmp    DWORD PTR [rip+0x2f570],r9d        # 0x452178
  422c08:	je     0x422c90
  422c0e:	mov    QWORD PTR [rip+0x2f55b],rbx        # 0x452170
  422c15:	mov    DWORD PTR [rip+0x2f55d],edi        # 0x452178
  422c1b:	call   0x422b10
  422c20:	mov    rax,QWORD PTR [rip+0x30cf1]        # 0x453918
  422c27:	test   rax,rax
  422c2a:	je     0x422cc0
  422c30:	call   rax
  422c32:	mov    r13,QWORD PTR [rip+0x31cb7]        # 0x4548f0
  422c39:	lea    rax,[rip+0x24dff]        # 0x447a3f
  422c40:	lea    rsi,[rip+0x24e00]        # 0x447a47
  422c47:	test   rbx,rbx
  422c4a:	cmovne rsi,rax
  422c4e:	call   r13
  422c51:	lea    rcx,[rax+0x60]
  422c55:	mov    r9d,edi
  422c58:	mov    r8,rbx
  422c5b:	mov    rdx,rsi
  422c5e:	call   0x433f20
  422c63:	mov    r8,QWORD PTR [rsp+0x90]
  422c6b:	lea    r9,[rsp+0x98]
  422c73:	mov    edx,r12d
  422c76:	mov    ecx,ebp
  422c78:	mov    QWORD PTR [rsp+0x28],r9
  422c7d:	call   0x422a50
  422c82:	nop
  422c83:	add    rsp,0x38
  422c87:	pop    rbx
  422c88:	pop    rsi
  422c89:	pop    rdi
  422c8a:	pop    rbp
  422c8b:	pop    r12
  422c8d:	pop    r13
  422c8f:	ret    
  422c90:	mov    rcx,QWORD PTR [rip+0x2f4d9]        # 0x452170
  422c97:	cmp    r8,rcx
  422c9a:	je     0x422c83
  422c9c:	test   r8,r8
  422c9f:	je     0x422c0e
  422ca5:	test   rcx,rcx
  422ca8:	je     0x422c0e
  422cae:	mov    rdx,r8
  422cb1:	call   0x43a648
  422cb6:	test   eax,eax
  422cb8:	je     0x422c83
  422cba:	jmp    0x422c0e
  422cbf:	nop
  422cc0:	mov    rax,QWORD PTR [rip+0x26e59]        # 0x449b20
  422cc7:	mov    r13,QWORD PTR [rip+0x31c22]        # 0x4548f0
  422cce:	mov    rsi,QWORD PTR [rax]
  422cd1:	call   r13
  422cd4:	lea    rdx,[rip+0x24d6e]        # 0x447a49
  422cdb:	lea    rcx,[rax+0x60]
  422cdf:	mov    r8,rsi
  422ce2:	call   0x433f20
  422ce7:	jmp    0x422c39
  422cec:	nop
  422ced:	nop
  422cee:	nop
  422cef:	nop
  422cf0:	push   r14
  422cf2:	push   r13
  422cf4:	push   r12
  422cf6:	push   rbp
  422cf7:	push   rdi
  422cf8:	push   rsi
  422cf9:	push   rbx
  422cfa:	movsxd rax,DWORD PTR [rdx+0x34]
  422cfe:	mov    r12d,DWORD PTR [rdx+0x30]
  422d02:	mov    ebp,DWORD PTR [rdx]
  422d04:	mov    esi,r12d
  422d07:	lea    r10,[rcx+rax*8]
  422d0b:	mov    rbx,rax
  422d0e:	mov    edi,ebp
  422d10:	cmp    ebx,esi
  422d12:	jle    0x422d60
  422d14:	cmp    edi,ebx
  422d16:	jle    0x422d60
  422d18:	mov    r13d,edi
  422d1b:	mov    r14d,ebx
  422d1e:	sub    r13d,ebx
  422d21:	sub    r14d,esi
  422d24:	cmp    r13d,r14d
  422d27:	jg     0x422d80
  422d29:	test   r13d,r13d
  422d2c:	jle    0x422d59
  422d2e:	movsxd rax,esi
  422d31:	lea    r8,[rcx+rax*8]
  422d35:	xor    eax,eax
  422d37:	nop    WORD PTR [rax+rax*1+0x0]
  422d40:	mov    r9,QWORD PTR [r8+rax*8]
  422d44:	mov    r11,QWORD PTR [r10+rax*8]
  422d48:	mov    QWORD PTR [r8+rax*8],r11
  422d4c:	mov    QWORD PTR [r10+rax*8],r9
  422d50:	add    rax,0x1
  422d54:	cmp    r13d,eax
  422d57:	jg     0x422d40
  422d59:	add    esi,r13d
  422d5c:	cmp    ebx,esi
  422d5e:	jg     0x422d14
  422d60:	mov    eax,ebp
  422d62:	mov    DWORD PTR [rdx+0x34],ebp
  422d65:	sub    eax,ebx
  422d67:	add    r12d,eax
  422d6a:	mov    DWORD PTR [rdx+0x30],r12d
  422d6e:	pop    rbx
  422d6f:	pop    rsi
  422d70:	pop    rdi
  422d71:	pop    rbp
  422d72:	pop    r12
  422d74:	pop    r13
  422d76:	pop    r14
  422d78:	ret    
  422d79:	nop    DWORD PTR [rax+0x0]
  422d80:	test   r14d,r14d
  422d83:	jle    0x422db9
  422d85:	movsxd rax,esi
  422d88:	lea    r9,[rcx+rax*8]
  422d8c:	mov    eax,esi
  422d8e:	sub    eax,ebx
  422d90:	add    eax,edi
  422d92:	cdqe   
  422d94:	lea    r8,[rcx+rax*8]
  422d98:	xor    eax,eax
  422d9a:	nop    WORD PTR [rax+rax*1+0x0]
  422da0:	mov    r11,QWORD PTR [r9+rax*8]
  422da4:	mov    r13,QWORD PTR [r8+rax*8]
  422da8:	mov    QWORD PTR [r9+rax*8],r13
  422dac:	mov    QWORD PTR [r8+rax*8],r11
  422db0:	add    rax,0x1
  422db4:	cmp    r14d,eax
  422db7:	jg     0x422da0
  422db9:	sub    edi,r14d
  422dbc:	jmp    0x422d10
  422dc1:	nop    DWORD PTR [rax+rax*1+0x0]
  422dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422dd0:	push   r15
  422dd2:	push   r14
  422dd4:	push   r13
  422dd6:	push   r12
  422dd8:	push   rbp
  422dd9:	push   rdi
  422dda:	push   rsi
  422ddb:	push   rbx
  422ddc:	sub    rsp,0x68
  422de0:	mov    r15,QWORD PTR [rsp+0xe0]
  422de8:	test   ecx,ecx
  422dea:	mov    ebp,ecx
  422dec:	mov    QWORD PTR [rsp+0xb8],rdx
  422df4:	mov    r13,r8
  422df7:	mov    QWORD PTR [rsp+0xc8],r9
  422dff:	mov    eax,DWORD PTR [r15+0x4]
  422e03:	mov    DWORD PTR [rsp+0x3c],eax
  422e07:	jle    0x42325c
  422e0d:	mov    eax,DWORD PTR [r15]
  422e10:	mov    QWORD PTR [r15+0x10],0x0
  422e18:	test   eax,eax
  422e1a:	jne    0x4230f4
  422e20:	mov    DWORD PTR [r15],0x1
  422e27:	mov    eax,0x1
  422e2c:	mov    r9d,DWORD PTR [rsp+0xe8]
  422e34:	mov    DWORD PTR [r15+0x34],eax
  422e38:	mov    DWORD PTR [r15+0x30],eax
  422e3c:	mov    QWORD PTR [r15+0x20],0x0
  422e44:	mov    eax,0x1
  422e49:	test   r9d,r9d
  422e4c:	je     0x423270
  422e52:	mov    DWORD PTR [r15+0x2c],eax
  422e56:	movzx  edx,BYTE PTR [r13+0x0]
  422e5b:	cmp    dl,0x2d
  422e5e:	je     0x423297
  422e64:	cmp    dl,0x2b
  422e67:	je     0x4233d0
  422e6d:	xor    eax,0x1
  422e70:	mov    DWORD PTR [r15+0x28],eax
  422e74:	mov    DWORD PTR [r15+0x18],0x1
  422e7c:	movzx  eax,BYTE PTR [r13+0x0]
  422e81:	cmp    al,0x3a
  422e83:	mov    rbx,QWORD PTR [r15+0x20]
  422e87:	mov    eax,0x0
  422e8c:	cmovne eax,DWORD PTR [rsp+0x3c]
  422e91:	test   rbx,rbx
  422e94:	mov    DWORD PTR [rsp+0x3c],eax
  422e98:	je     0x4231d0
  422e9e:	cmp    BYTE PTR [rbx],0x0
  422ea1:	je     0x4231d0
  422ea7:	cmp    QWORD PTR [rsp+0xc8],0x0
  422eb0:	je     0x423122
  422eb6:	movsxd rax,DWORD PTR [r15]
  422eb9:	mov    rdi,QWORD PTR [rsp+0xb8]
  422ec1:	mov    r8,rax
  422ec4:	mov    rax,QWORD PTR [rdi+rax*8]
  422ec8:	movsx  edx,BYTE PTR [rax+0x1]
  422ecc:	cmp    dl,0x2d
  422ecf:	je     0x422f04
  422ed1:	mov    ecx,DWORD PTR [rsp+0xd8]
  422ed8:	test   ecx,ecx
  422eda:	je     0x423122
  422ee0:	cmp    BYTE PTR [rax+0x2],0x0
  422ee4:	jne    0x422f04
  422ee6:	mov    rcx,r13
  422ee9:	mov    DWORD PTR [rsp+0x40],r8d
  422eee:	mov    rdi,rbx
  422ef1:	call   0x43a650
  422ef6:	test   rax,rax
  422ef9:	mov    r8d,DWORD PTR [rsp+0x40]
  422efe:	jne    0x423125
  422f04:	movzx  eax,BYTE PTR [rbx]
  422f07:	mov    rdi,rbx
  422f0a:	cmp    al,0x3d
  422f0c:	je     0x4237d3
  422f12:	test   al,al
  422f14:	jne    0x422f24
  422f16:	jmp    0x4237d3
  422f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  422f20:	test   al,al
  422f22:	je     0x422f2f
  422f24:	add    rdi,0x1
  422f28:	movzx  eax,BYTE PTR [rdi]
  422f2b:	cmp    al,0x3d
  422f2d:	jne    0x422f20
  422f2f:	mov    rax,rdi
  422f32:	sub    rax,rbx
  422f35:	mov    r11d,eax
  422f38:	mov    rsi,QWORD PTR [rsp+0xc8]
  422f40:	mov    r14,QWORD PTR [rsi]
  422f43:	test   r14,r14
  422f46:	je     0x42305d
  422f4c:	mov    eax,eax
  422f4e:	xor    ecx,ecx
  422f50:	mov    rdx,rbx
  422f53:	mov    QWORD PTR [rsp+0x48],rdi
  422f58:	mov    DWORD PTR [rsp+0xb0],ebp
  422f5f:	xor    r12d,r12d
  422f62:	mov    QWORD PTR [rsp+0xc0],r13
  422f6a:	mov    DWORD PTR [rsp+0x44],0xffffffff
  422f72:	mov    r13,r14
  422f75:	mov    DWORD PTR [rsp+0x40],0x0
  422f7d:	xor    ebx,ebx
  422f7f:	mov    rdi,rax
  422f82:	mov    ebp,r11d
  422f85:	mov    r14,rcx
  422f88:	jmp    0x422fe4
  422f8a:	nop    WORD PTR [rax+rax*1+0x0]
  422f90:	mov    eax,DWORD PTR [rsp+0x40]
  422f94:	test   eax,eax
  422f96:	jne    0x422fd0
  422f98:	mov    eax,DWORD PTR [rsp+0xd8]
  422f9f:	test   eax,eax
  422fa1:	jne    0x422fb0
  422fa3:	mov    eax,DWORD PTR [rsi+0x8]
  422fa6:	cmp    DWORD PTR [r14+0x8],eax
  422faa:	je     0x4233e1
  422fb0:	mov    ecx,0x10
  422fb5:	call   0x423ec0
  422fba:	test   rax,rax
  422fbd:	je     0x423401
  422fc3:	mov    QWORD PTR [rax+0x8],rbx
  422fc7:	mov    QWORD PTR [rax],rsi
  422fca:	mov    rbx,rax
  422fcd:	nop    DWORD PTR [rax]
  422fd0:	add    rsi,0x20
  422fd4:	mov    r13,QWORD PTR [rsi]
  422fd7:	add    r12d,0x1
  422fdb:	test   r13,r13
  422fde:	je     0x423020
  422fe0:	mov    rdx,QWORD PTR [r15+0x20]
  422fe4:	mov    r8,rdi
  422fe7:	mov    rcx,r13
  422fea:	call   0x43a618
  422fef:	test   eax,eax
  422ff1:	jne    0x422fd0
  422ff3:	mov    rcx,r13
  422ff6:	call   0x43a620
  422ffb:	cmp    ebp,eax
  422ffd:	je     0x423430
  423003:	test   r14,r14
  423006:	jne    0x422f90
  423008:	mov    r14,rsi
  42300b:	add    rsi,0x20
  42300f:	mov    r13,QWORD PTR [rsi]
  423012:	mov    DWORD PTR [rsp+0x44],r12d
  423017:	add    r12d,0x1
  42301b:	test   r13,r13
  42301e:	jne    0x422fe0
  423020:	test   rbx,rbx
  423023:	mov    rcx,r14
  423026:	mov    rdi,QWORD PTR [rsp+0x48]
  42302b:	mov    ebp,DWORD PTR [rsp+0xb0]
  423032:	mov    r13,QWORD PTR [rsp+0xc0]
  42303a:	setne  sil
  42303e:	movzx  eax,BYTE PTR [rsp+0x40]
  423043:	jne    0x423720
  423049:	test   al,al
  42304b:	jne    0x423720
  423051:	mov    r8d,DWORD PTR [r15]
  423054:	test   rcx,rcx
  423057:	jne    0x423c96
  42305d:	mov    ebx,DWORD PTR [rsp+0xd8]
  423064:	test   ebx,ebx
  423066:	jne    0x4236c7
  42306c:	mov    r11d,DWORD PTR [rsp+0x3c]
  423071:	test   r11d,r11d
  423074:	je     0x4230d0
  423076:	mov    rax,QWORD PTR [rsp+0xb8]
  42307e:	movsxd r14,r8d
  423081:	mov    rsi,QWORD PTR [rax+r14*8]
  423085:	cmp    BYTE PTR [rsi+0x1],0x2d
  423089:	je     0x42392e
  42308f:	mov    rbx,QWORD PTR [r15+0x20]
  423093:	mov    rax,QWORD PTR [rsp+0xb8]
  42309b:	movsx  ebp,BYTE PTR [rsi]
  42309e:	lea    rcx,[rip+0x24ac3]        # 0x447b68
  4230a5:	mov    rdi,QWORD PTR [rax]
  4230a8:	call   0x433f18
  4230ad:	mov    rsi,rax
  4230b0:	call   QWORD PTR [rip+0x3183a]        # 0x4548f0
  4230b6:	lea    rcx,[rax+0x60]
  4230ba:	mov    r8,rdi
  4230bd:	mov    QWORD PTR [rsp+0x20],rbx
  4230c2:	mov    r9d,ebp
  4230c5:	mov    rdx,rsi
  4230c8:	call   0x433f20
  4230cd:	mov    r8d,DWORD PTR [r15]
  4230d0:	lea    rax,[rip+0x24ab1]        # 0x447b88
  4230d7:	lea    r14d,[r8+0x1]
  4230db:	mov    DWORD PTR [r15+0x8],0x0
  4230e3:	mov    ebx,0x3f
  4230e8:	mov    QWORD PTR [r15+0x20],rax
  4230ec:	mov    DWORD PTR [r15],r14d
  4230ef:	jmp    0x4231bc
  4230f4:	mov    r10d,DWORD PTR [r15+0x18]
  4230f8:	test   r10d,r10d
  4230fb:	je     0x422e2c
  423101:	movzx  eax,BYTE PTR [r8]
  423105:	lea    edx,[rax-0x2b]
  423108:	and    edx,0xfd
  42310e:	jne    0x422e81
  423114:	movzx  eax,BYTE PTR [r8+0x1]
  423119:	add    r13,0x1
  42311d:	jmp    0x422e81
  423122:	mov    rdi,rbx
  423125:	lea    r12,[rdi+0x1]
  423129:	mov    rcx,r13
  42312c:	mov    QWORD PTR [r15+0x20],r12
  423130:	movsx  ebx,BYTE PTR [rdi]
  423133:	mov    edx,ebx
  423135:	mov    esi,ebx
  423137:	call   0x43a650
  42313c:	cmp    BYTE PTR [rdi+0x1],0x0
  423140:	je     0x4232d2
  423146:	sub    esi,0x3a
  423149:	cmp    sil,0x1
  42314d:	jbe    0x4231a5
  42314f:	test   rax,rax
  423152:	je     0x4231a5
  423154:	cmp    BYTE PTR [rax],0x57
  423157:	movzx  edx,BYTE PTR [rax+0x1]
  42315b:	je     0x4235ab
  423161:	cmp    dl,0x3a
  423164:	jne    0x4231bc
  423166:	cmp    BYTE PTR [rax+0x2],0x3a
  42316a:	je     0x42390f
  423170:	cmp    BYTE PTR [rdi+0x1],0x0
  423174:	jne    0x423902
  42317a:	movsxd rax,DWORD PTR [r15]
  42317d:	cmp    eax,ebp
  42317f:	je     0x423a54
  423185:	mov    rsi,QWORD PTR [rsp+0xb8]
  42318d:	lea    edx,[rax+0x1]
  423190:	mov    DWORD PTR [r15],edx
  423193:	mov    rax,QWORD PTR [rsi+rax*8]
  423197:	mov    QWORD PTR [r15+0x10],rax
  42319b:	mov    QWORD PTR [r15+0x20],0x0
  4231a3:	jmp    0x4231bc
  4231a5:	mov    r10d,DWORD PTR [rsp+0x3c]
  4231aa:	test   r10d,r10d
  4231ad:	jne    0x4232e0
  4231b3:	mov    DWORD PTR [r15+0x8],ebx
  4231b7:	mov    ebx,0x3f
  4231bc:	mov    eax,ebx
  4231be:	add    rsp,0x68
  4231c2:	pop    rbx
  4231c3:	pop    rsi
  4231c4:	pop    rdi
  4231c5:	pop    rbp
  4231c6:	pop    r12
  4231c8:	pop    r13
  4231ca:	pop    r14
  4231cc:	pop    r15
  4231ce:	ret    
  4231cf:	nop
  4231d0:	mov    edx,DWORD PTR [r15]
  4231d3:	cmp    DWORD PTR [r15+0x34],edx
  4231d7:	jle    0x4231dd
  4231d9:	mov    DWORD PTR [r15+0x34],edx
  4231dd:	cmp    edx,DWORD PTR [r15+0x30]
  4231e1:	jge    0x4231e7
  4231e3:	mov    DWORD PTR [r15+0x30],edx
  4231e7:	cmp    DWORD PTR [r15+0x28],0x1
  4231ec:	je     0x423350
  4231f2:	cmp    ebp,edx
  4231f4:	je     0x4233b1
  4231fa:	mov    rdi,QWORD PTR [rsp+0xb8]
  423202:	movsxd rax,edx
  423205:	mov    ecx,0x3
  42320a:	mov    rax,QWORD PTR [rdi+rax*8]
  42320e:	lea    rdi,[rip+0x2484b]        # 0x447a60
  423215:	mov    rsi,rax
  423218:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42321a:	jne    0x4232b0
  423220:	mov    eax,DWORD PTR [r15+0x30]
  423224:	mov    ecx,DWORD PTR [r15+0x34]
  423228:	add    edx,0x1
  42322b:	mov    DWORD PTR [r15],edx
  42322e:	cmp    eax,ecx
  423230:	je     0x423570
  423236:	cmp    edx,ecx
  423238:	je     0x42324e
  42323a:	mov    rcx,QWORD PTR [rsp+0xb8]
  423242:	mov    rdx,r15
  423245:	call   0x422cf0
  42324a:	mov    eax,DWORD PTR [r15+0x30]
  42324e:	mov    DWORD PTR [r15+0x34],ebp
  423252:	mov    DWORD PTR [r15],ebp
  423255:	cmp    ebp,eax
  423257:	je     0x42325c
  423259:	mov    DWORD PTR [r15],eax
  42325c:	mov    ebx,0xffffffff
  423261:	jmp    0x4231bc
  423266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423270:	lea    rcx,[rip+0x247d9]        # 0x447a50
  423277:	call   0x43a730
  42327c:	test   rax,rax
  42327f:	setne  al
  423282:	movzx  eax,al
  423285:	mov    DWORD PTR [r15+0x2c],eax
  423289:	movzx  edx,BYTE PTR [r13+0x0]
  42328e:	cmp    dl,0x2d
  423291:	jne    0x422e64
  423297:	mov    DWORD PTR [r15+0x28],0x2
  42329f:	add    r13,0x1
  4232a3:	jmp    0x422e74
  4232a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4232b0:	cmp    BYTE PTR [rax],0x2d
  4232b3:	je     0x423320
  4232b5:	mov    r8d,DWORD PTR [r15+0x28]
  4232b9:	test   r8d,r8d
  4232bc:	je     0x42325c
  4232be:	add    edx,0x1
  4232c1:	mov    QWORD PTR [r15+0x10],rax
  4232c5:	mov    ebx,0x1
  4232ca:	mov    DWORD PTR [r15],edx
  4232cd:	jmp    0x4231bc
  4232d2:	add    DWORD PTR [r15],0x1
  4232d6:	jmp    0x423146
  4232db:	nop    DWORD PTR [rax+rax*1+0x0]
  4232e0:	mov    rax,QWORD PTR [rsp+0xb8]
  4232e8:	lea    rcx,[rip+0x2489a]        # 0x447b89
  4232ef:	mov    rdi,QWORD PTR [rax]
  4232f2:	call   0x433f18
  4232f7:	mov    rsi,rax
  4232fa:	call   QWORD PTR [rip+0x315f0]        # 0x4548f0
  423300:	lea    rcx,[rax+0x60]
  423304:	mov    r9d,ebx
  423307:	mov    r8,rdi
  42330a:	mov    rdx,rsi
  42330d:	call   0x433f20
  423312:	jmp    0x4231b3
  423317:	nop    WORD PTR [rax+rax*1+0x0]
  423320:	movzx  ecx,BYTE PTR [rax+0x1]
  423324:	test   cl,cl
  423326:	je     0x4232b5
  423328:	cmp    cl,0x2d
  42332b:	sete   dl
  42332e:	xor    ecx,ecx
  423330:	cmp    QWORD PTR [rsp+0xc8],0x0
  423339:	setne  cl
  42333c:	and    rdx,rcx
  42333f:	lea    rbx,[rax+rdx*1+0x1]
  423344:	mov    QWORD PTR [r15+0x20],rbx
  423348:	jmp    0x422ea7
  42334d:	nop    DWORD PTR [rax]
  423350:	mov    eax,DWORD PTR [r15+0x34]
  423354:	cmp    DWORD PTR [r15+0x30],eax
  423358:	je     0x4237c0
  42335e:	cmp    edx,eax
  423360:	je     0x423375
  423362:	mov    rcx,QWORD PTR [rsp+0xb8]
  42336a:	mov    rdx,r15
  42336d:	call   0x422cf0
  423372:	mov    eax,DWORD PTR [r15]
  423375:	cmp    ebp,eax
  423377:	jle    0x4233c0
  423379:	mov    rsi,QWORD PTR [rsp+0xb8]
  423381:	movsxd rdx,eax
  423384:	lea    rdx,[rsi+rdx*8]
  423388:	jmp    0x42339e
  42338a:	nop    WORD PTR [rax+rax*1+0x0]
  423390:	add    eax,0x1
  423393:	add    rdx,0x8
  423397:	cmp    eax,ebp
  423399:	mov    DWORD PTR [r15],eax
  42339c:	je     0x4233c0
  42339e:	mov    rcx,QWORD PTR [rdx]
  4233a1:	cmp    BYTE PTR [rcx],0x2d
  4233a4:	jne    0x423390
  4233a6:	cmp    BYTE PTR [rcx+0x1],0x0
  4233aa:	je     0x423390
  4233ac:	mov    edx,DWORD PTR [r15]
  4233af:	jmp    0x4233c2
  4233b1:	mov    ebp,DWORD PTR [r15+0x34]
  4233b5:	mov    eax,DWORD PTR [r15+0x30]
  4233b9:	jmp    0x423255
  4233be:	xchg   ax,ax
  4233c0:	mov    edx,eax
  4233c2:	mov    DWORD PTR [r15+0x34],eax
  4233c6:	jmp    0x4231f2
  4233cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4233d0:	mov    DWORD PTR [r15+0x28],0x0
  4233d8:	add    r13,0x1
  4233dc:	jmp    0x422e74
  4233e1:	mov    rax,QWORD PTR [rsi+0x10]
  4233e5:	cmp    QWORD PTR [r14+0x10],rax
  4233e9:	jne    0x422fb0
  4233ef:	mov    eax,DWORD PTR [rsi+0x18]
  4233f2:	cmp    DWORD PTR [r14+0x18],eax
  4233f6:	jne    0x422fb0
  4233fc:	jmp    0x422fd0
  423401:	test   rbx,rbx
  423404:	je     0x423421
  423406:	mov    rcx,rbx
  423409:	nop    DWORD PTR [rax+0x0]
  423410:	mov    rbx,QWORD PTR [rbx+0x8]
  423414:	call   0x43a748
  423419:	test   rbx,rbx
  42341c:	mov    rcx,rbx
  42341f:	jne    0x423410
  423421:	mov    DWORD PTR [rsp+0x40],0x1
  423429:	jmp    0x422fd0
  42342e:	xchg   ax,ax
  423430:	test   rbx,rbx
  423433:	mov    rdi,QWORD PTR [rsp+0x48]
  423438:	mov    ebp,DWORD PTR [rsp+0xb0]
  42343f:	mov    r13,QWORD PTR [rsp+0xc0]
  423447:	mov    rcx,rbx
  42344a:	jne    0x423464
  42344c:	mov    eax,DWORD PTR [rsp+0x40]
  423450:	mov    r8d,DWORD PTR [r15]
  423453:	test   eax,eax
  423455:	jne    0x423478
  423457:	mov    DWORD PTR [rsp+0x44],r12d
  42345c:	mov    rcx,rsi
  42345f:	jmp    0x423054
  423464:	mov    rbx,QWORD PTR [rcx+0x8]
  423468:	call   0x43a748
  42346d:	test   rbx,rbx
  423470:	mov    rcx,rbx
  423473:	jne    0x423464
  423475:	mov    r8d,DWORD PTR [r15]
  423478:	lea    eax,[r8+0x1]
  42347c:	mov    DWORD PTR [r15],eax
  42347f:	cmp    BYTE PTR [rdi],0x0
  423482:	je     0x423520
  423488:	mov    r13d,DWORD PTR [rsi+0x8]
  42348c:	test   r13d,r13d
  42348f:	jne    0x42357b
  423495:	mov    ebp,DWORD PTR [rsp+0x3c]
  423499:	test   ebp,ebp
  42349b:	je     0x4234f3
  42349d:	mov    rdi,QWORD PTR [rsp+0xb8]
  4234a5:	cdqe   
  4234a7:	mov    rax,QWORD PTR [rdi+rax*8-0x8]
  4234ac:	cmp    BYTE PTR [rax+0x1],0x2d
  4234b0:	je     0x4238d0
  4234b6:	movsx  ebp,BYTE PTR [rax]
  4234b9:	mov    rax,QWORD PTR [rsp+0xb8]
  4234c1:	lea    rcx,[rip+0x24628]        # 0x447af0
  4234c8:	mov    r12,QWORD PTR [rsi]
  4234cb:	mov    rdi,QWORD PTR [rax]
  4234ce:	call   0x433f18
  4234d3:	mov    rbx,rax
  4234d6:	call   QWORD PTR [rip+0x31414]        # 0x4548f0
  4234dc:	lea    rcx,[rax+0x60]
  4234e0:	mov    QWORD PTR [rsp+0x20],r12
  4234e5:	mov    r9d,ebp
  4234e8:	mov    r8,rdi
  4234eb:	mov    rdx,rbx
  4234ee:	call   0x433f20
  4234f3:	mov    rbx,QWORD PTR [r15+0x20]
  4234f7:	mov    rcx,rbx
  4234fa:	call   0x43a620
  4234ff:	add    rax,rbx
  423502:	mov    QWORD PTR [r15+0x20],rax
  423506:	mov    eax,DWORD PTR [rsi+0x18]
  423509:	mov    DWORD PTR [r15+0x8],eax
  42350d:	mov    ebx,0x3f
  423512:	jmp    0x4231bc
  423517:	nop    WORD PTR [rax+rax*1+0x0]
  423520:	cmp    DWORD PTR [rsi+0x8],0x1
  423524:	je     0x423585
  423526:	mov    rbx,QWORD PTR [r15+0x20]
  42352a:	mov    rcx,rbx
  42352d:	call   0x43a620
  423532:	add    rax,rbx
  423535:	cmp    QWORD PTR [rsp+0xd0],0x0
  42353e:	mov    QWORD PTR [r15+0x20],rax
  423542:	je     0x42354f
  423544:	mov    rax,QWORD PTR [rsp+0xd0]
  42354c:	mov    DWORD PTR [rax],r12d
  42354f:	mov    rax,QWORD PTR [rsi+0x10]
  423553:	test   rax,rax
  423556:	je     0x42388d
  42355c:	mov    edx,DWORD PTR [rsi+0x18]
  42355f:	xor    ebx,ebx
  423561:	mov    DWORD PTR [rax],edx
  423563:	jmp    0x4231bc
  423568:	nop    DWORD PTR [rax+rax*1+0x0]
  423570:	mov    DWORD PTR [r15+0x30],edx
  423574:	mov    eax,edx
  423576:	jmp    0x42324e
  42357b:	add    rdi,0x1
  42357f:	mov    QWORD PTR [r15+0x10],rdi
  423583:	jmp    0x423526
  423585:	cmp    ebp,eax
  423587:	jle    0x423895
  42358d:	mov    rdi,QWORD PTR [rsp+0xb8]
  423595:	cdqe   
  423597:	lea    r14d,[r8+0x2]
  42359b:	mov    DWORD PTR [r15],r14d
  42359e:	mov    rax,QWORD PTR [rdi+rax*8]
  4235a2:	mov    QWORD PTR [r15+0x10],rax
  4235a6:	jmp    0x423526
  4235ab:	cmp    dl,0x3b
  4235ae:	jne    0x423161
  4235b4:	cmp    QWORD PTR [rsp+0xc8],0x0
  4235bd:	je     0x423a9d
  4235c3:	cmp    BYTE PTR [rdi+0x1],0x0
  4235c7:	je     0x423a77
  4235cd:	add    DWORD PTR [r15],0x1
  4235d1:	mov    QWORD PTR [r15+0x10],r12
  4235d5:	mov    QWORD PTR [r15+0x20],r12
  4235d9:	movzx  edi,BYTE PTR [r12]
  4235de:	mov    rbx,r12
  4235e1:	cmp    dil,0x3d
  4235e5:	jne    0x4235fd
  4235e7:	jmp    0x423602
  4235e9:	nop    DWORD PTR [rax+0x0]
  4235f0:	add    rbx,0x1
  4235f4:	movzx  edi,BYTE PTR [rbx]
  4235f7:	cmp    dil,0x3d
  4235fb:	je     0x423602
  4235fd:	test   dil,dil
  423600:	jne    0x4235f0
  423602:	mov    rax,QWORD PTR [rsp+0xc8]
  42360a:	mov    r14,QWORD PTR [rax]
  42360d:	test   r14,r14
  423610:	je     0x423a9d
  423616:	mov    rax,rbx
  423619:	xor    r10d,r10d
  42361c:	xor    ecx,ecx
  42361e:	sub    rax,r12
  423621:	mov    BYTE PTR [rsp+0x44],dil
  423626:	mov    QWORD PTR [rsp+0x48],rbx
  42362b:	mov    edx,eax
  42362d:	mov    DWORD PTR [rsp+0xb0],ebp
  423634:	mov    QWORD PTR [rsp+0xc0],r13
  42363c:	mov    QWORD PTR [rsp+0xe0],r15
  423644:	xor    esi,esi
  423646:	mov    DWORD PTR [rsp+0x40],0x0
  42364e:	mov    rdi,rax
  423651:	mov    rbp,rcx
  423654:	mov    r13d,r10d
  423657:	mov    rbx,QWORD PTR [rsp+0xc8]
  42365f:	mov    r15,rdx
  423662:	jmp    0x423696
  423664:	mov    r9d,DWORD PTR [rsp+0xd8]
  42366c:	test   r9d,r9d
  42366f:	jne    0x42367d
  423671:	mov    eax,DWORD PTR [rbx+0x8]
  423674:	cmp    DWORD PTR [rbp+0x8],eax
  423677:	je     0x4239a6
  42367d:	mov    r13d,0x1
  423683:	add    rbx,0x20
  423687:	mov    r14,QWORD PTR [rbx]
  42368a:	add    esi,0x1
  42368d:	test   r14,r14
  423690:	je     0x4239c8
  423696:	mov    r8,rdi
  423699:	mov    rdx,r12
  42369c:	mov    rcx,r14
  42369f:	call   0x43a618
  4236a4:	test   eax,eax
  4236a6:	jne    0x423683
  4236a8:	mov    rcx,r14
  4236ab:	call   0x43a620
  4236b0:	cmp    r15,rax
  4236b3:	je     0x423aaf
  4236b9:	test   rbp,rbp
  4236bc:	jne    0x423664
  4236be:	mov    DWORD PTR [rsp+0x40],esi
  4236c2:	mov    rbp,rbx
  4236c5:	jmp    0x423683
  4236c7:	mov    rsi,QWORD PTR [rsp+0xb8]
  4236cf:	movsxd rax,r8d
  4236d2:	mov    rsi,QWORD PTR [rsi+rax*8]
  4236d6:	cmp    BYTE PTR [rsi+0x1],0x2d
  4236da:	je     0x423922
  4236e0:	mov    rbx,QWORD PTR [r15+0x20]
  4236e4:	mov    rcx,r13
  4236e7:	mov    DWORD PTR [rsp+0x40],r8d
  4236ec:	movsx  edx,BYTE PTR [rbx]
  4236ef:	mov    rdi,rbx
  4236f2:	call   0x43a650
  4236f7:	test   rax,rax
  4236fa:	mov    r8d,DWORD PTR [rsp+0x40]
  4236ff:	jne    0x423125
  423705:	mov    edx,DWORD PTR [rsp+0x3c]
  423709:	test   edx,edx
  42370b:	jne    0x423093
  423711:	jmp    0x4230d0
  423716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423720:	mov    r14d,DWORD PTR [rsp+0x3c]
  423725:	test   r14d,r14d
  423728:	setne  dl
  42372b:	test   sil,sil
  42372e:	je     0x423738
  423730:	test   dl,dl
  423732:	jne    0x4237dd
  423738:	test   al,al
  42373a:	je     0x423779
  42373c:	test   dl,dl
  42373e:	je     0x423779
  423740:	movsxd rax,DWORD PTR [r15]
  423743:	mov    rdi,QWORD PTR [rsp+0xb8]
  42374b:	lea    rcx,[rip+0x2434b]        # 0x447a9d
  423752:	mov    rbp,QWORD PTR [rdi]
  423755:	mov    r12,QWORD PTR [rdi+rax*8]
  423759:	call   0x433f18
  42375e:	mov    rdi,rax
  423761:	call   QWORD PTR [rip+0x31189]        # 0x4548f0
  423767:	lea    rcx,[rax+0x60]
  42376b:	mov    r9,r12
  42376e:	mov    r8,rbp
  423771:	mov    rdx,rdi
  423774:	call   0x433f20
  423779:	mov    rdi,QWORD PTR [r15+0x20]
  42377d:	mov    rcx,rdi
  423780:	call   0x43a620
  423785:	add    DWORD PTR [r15],0x1
  423789:	add    rax,rdi
  42378c:	test   sil,sil
  42378f:	mov    QWORD PTR [r15+0x20],rax
  423793:	mov    DWORD PTR [r15+0x8],0x0
  42379b:	je     0x42350d
  4237a1:	mov    rcx,rbx
  4237a4:	mov    rbx,QWORD PTR [rcx+0x8]
  4237a8:	call   0x43a748
  4237ad:	test   rbx,rbx
  4237b0:	mov    rcx,rbx
  4237b3:	jne    0x4237a4
  4237b5:	jmp    0x42350d
  4237ba:	nop    WORD PTR [rax+rax*1+0x0]
  4237c0:	cmp    edx,eax
  4237c2:	je     0x423375
  4237c8:	mov    DWORD PTR [r15+0x30],edx
  4237cc:	mov    eax,edx
  4237ce:	jmp    0x423375
  4237d3:	xor    r11d,r11d
  4237d6:	xor    eax,eax
  4237d8:	jmp    0x422f38
  4237dd:	movsxd rax,DWORD PTR [r15]
  4237e0:	mov    rsi,QWORD PTR [rsp+0xb8]
  4237e8:	mov    r14,rcx
  4237eb:	mov    QWORD PTR [rsp+0x50],rcx
  4237f0:	lea    rcx,[rip+0x24271]        # 0x447a68
  4237f7:	mov    QWORD PTR [rsp+0x58],rbx
  4237fc:	mov    rbp,QWORD PTR [rsi+rax*8]
  423800:	mov    rsi,QWORD PTR [rsi]
  423803:	call   0x433f18
  423808:	mov    rdi,QWORD PTR [rip+0x310e1]        # 0x4548f0
  42380f:	mov    rbx,rax
  423812:	call   rdi
  423814:	lea    rcx,[rax+0x60]
  423818:	mov    rdx,rbx
  42381b:	mov    r9,rbp
  42381e:	mov    r8,rsi
  423821:	lea    rbx,[rsp+0x50]
  423826:	call   0x433f20
  42382b:	mov    rax,r14
  42382e:	jmp    0x423833
  423830:	mov    rax,QWORD PTR [rbx]
  423833:	mov    rsi,QWORD PTR [rax]
  423836:	call   rdi
  423838:	lea    rdx,[rip+0x24256]        # 0x447a95
  42383f:	lea    rcx,[rax+0x60]
  423843:	mov    r8,rsi
  423846:	call   0x433f20
  42384b:	mov    rbx,QWORD PTR [rbx+0x8]
  42384f:	test   rbx,rbx
  423852:	jne    0x423830
  423854:	call   rdi
  423856:	lea    rdx,[rax+0x60]
  42385a:	mov    ecx,0xa
  42385f:	call   0x43a760
  423864:	mov    rbx,QWORD PTR [r15+0x20]
  423868:	mov    rcx,rbx
  42386b:	call   0x43a620
  423870:	add    rax,rbx
  423873:	add    DWORD PTR [r15],0x1
  423877:	mov    DWORD PTR [r15+0x8],0x0
  42387f:	mov    QWORD PTR [r15+0x20],rax
  423883:	mov    ebx,0x3f
  423888:	jmp    0x4231bc
  42388d:	mov    ebx,DWORD PTR [rsi+0x18]
  423890:	jmp    0x4231bc
  423895:	mov    edi,DWORD PTR [rsp+0x3c]
  423899:	test   edi,edi
  42389b:	jne    0x42396c
  4238a1:	mov    rbx,QWORD PTR [r15+0x20]
  4238a5:	mov    rcx,rbx
  4238a8:	call   0x43a620
  4238ad:	add    rax,rbx
  4238b0:	mov    QWORD PTR [r15+0x20],rax
  4238b4:	mov    eax,DWORD PTR [rsi+0x18]
  4238b7:	mov    DWORD PTR [r15+0x8],eax
  4238bb:	cmp    BYTE PTR [r13+0x0],0x3a
  4238c0:	jne    0x42350d
  4238c6:	mov    ebx,0x3a
  4238cb:	jmp    0x4231bc
  4238d0:	mov    rbp,QWORD PTR [rsi]
  4238d3:	mov    rdi,QWORD PTR [rdi]
  4238d6:	lea    rcx,[rip+0x241e3]        # 0x447ac0
  4238dd:	call   0x433f18
  4238e2:	mov    rbx,rax
  4238e5:	call   QWORD PTR [rip+0x31005]        # 0x4548f0
  4238eb:	lea    rcx,[rax+0x60]
  4238ef:	mov    r9,rbp
  4238f2:	mov    r8,rdi
  4238f5:	mov    rdx,rbx
  4238f8:	call   0x433f20
  4238fd:	jmp    0x4234f3
  423902:	mov    QWORD PTR [r15+0x10],r12
  423906:	add    DWORD PTR [r15],0x1
  42390a:	jmp    0x42319b
  42390f:	cmp    BYTE PTR [rdi+0x1],0x0
  423913:	jne    0x423902
  423915:	mov    QWORD PTR [r15+0x10],0x0
  42391d:	jmp    0x42319b
  423922:	mov    eax,DWORD PTR [rsp+0x3c]
  423926:	test   eax,eax
  423928:	je     0x4230d0
  42392e:	mov    rax,QWORD PTR [rsp+0xb8]
  423936:	lea    rcx,[rip+0x2420b]        # 0x447b48
  42393d:	mov    rdi,QWORD PTR [r15+0x20]
  423941:	mov    rsi,QWORD PTR [rax]
  423944:	call   0x433f18
  423949:	mov    rbx,rax
  42394c:	call   QWORD PTR [rip+0x30f9e]        # 0x4548f0
  423952:	lea    rcx,[rax+0x60]
  423956:	mov    r8,rsi
  423959:	mov    r9,rdi
  42395c:	mov    rdx,rbx
  42395f:	call   0x433f20
  423964:	mov    r8d,DWORD PTR [r15]
  423967:	jmp    0x4230d0
  42396c:	mov    rax,QWORD PTR [rsp+0xb8]
  423974:	mov    rbp,QWORD PTR [rsi]
  423977:	lea    rcx,[rip+0x241a2]        # 0x447b20
  42397e:	mov    rdi,QWORD PTR [rax]
  423981:	call   0x433f18
  423986:	mov    rbx,rax
  423989:	call   QWORD PTR [rip+0x30f61]        # 0x4548f0
  42398f:	lea    rcx,[rax+0x60]
  423993:	mov    r9,rbp
  423996:	mov    r8,rdi
  423999:	mov    rdx,rbx
  42399c:	call   0x433f20
  4239a1:	jmp    0x4238a1
  4239a6:	mov    rax,QWORD PTR [rbx+0x10]
  4239aa:	cmp    QWORD PTR [rbp+0x10],rax
  4239ae:	jne    0x42367d
  4239b4:	mov    eax,DWORD PTR [rbx+0x18]
  4239b7:	cmp    DWORD PTR [rbp+0x18],eax
  4239ba:	mov    eax,0x1
  4239bf:	cmovne r13d,eax
  4239c3:	jmp    0x423683
  4239c8:	mov    eax,r13d
  4239cb:	mov    rsi,rbp
  4239ce:	movzx  edi,BYTE PTR [rsp+0x44]
  4239d3:	test   eax,eax
  4239d5:	mov    rbx,QWORD PTR [rsp+0x48]
  4239da:	mov    ebp,DWORD PTR [rsp+0xb0]
  4239e1:	mov    r13,QWORD PTR [rsp+0xc0]
  4239e9:	mov    r15,QWORD PTR [rsp+0xe0]
  4239f1:	je     0x423b26
  4239f7:	mov    r8d,DWORD PTR [rsp+0x3c]
  4239fc:	test   r8d,r8d
  4239ff:	je     0x423a37
  423a01:	mov    rax,QWORD PTR [rsp+0xb8]
  423a09:	lea    rcx,[rip+0x241c8]        # 0x447bd8
  423a10:	mov    rsi,QWORD PTR [rax]
  423a13:	call   0x433f18
  423a18:	mov    rbx,rax
  423a1b:	call   QWORD PTR [rip+0x30ecf]        # 0x4548f0
  423a21:	lea    rcx,[rax+0x60]
  423a25:	mov    r9,r12
  423a28:	mov    r8,rsi
  423a2b:	mov    rdx,rbx
  423a2e:	call   0x433f20
  423a33:	mov    r12,QWORD PTR [r15+0x20]
  423a37:	mov    rcx,r12
  423a3a:	mov    ebx,0x3f
  423a3f:	call   0x43a620
  423a44:	add    r12,rax
  423a47:	add    DWORD PTR [r15],0x1
  423a4b:	mov    QWORD PTR [r15+0x20],r12
  423a4f:	jmp    0x4231bc
  423a54:	mov    ecx,DWORD PTR [rsp+0x3c]
  423a58:	test   ecx,ecx
  423a5a:	jne    0x423b40
  423a60:	mov    DWORD PTR [r15+0x8],ebx
  423a64:	xor    ebx,ebx
  423a66:	cmp    BYTE PTR [r13+0x0],0x3a
  423a6b:	setne  bl
  423a6e:	lea    ebx,[rbx+rbx*4+0x3a]
  423a72:	jmp    0x42319b
  423a77:	movsxd rax,DWORD PTR [r15]
  423a7a:	cmp    eax,ebp
  423a7c:	je     0x423b77
  423a82:	mov    rsi,QWORD PTR [rsp+0xb8]
  423a8a:	lea    edx,[rax+0x1]
  423a8d:	mov    DWORD PTR [r15],edx
  423a90:	mov    r12,QWORD PTR [rsi+rax*8]
  423a94:	mov    QWORD PTR [r15+0x10],r12
  423a98:	jmp    0x4235d5
  423a9d:	mov    QWORD PTR [r15+0x20],0x0
  423aa5:	mov    ebx,0x57
  423aaa:	jmp    0x4231bc
  423aaf:	movzx  edi,BYTE PTR [rsp+0x44]
  423ab4:	mov    QWORD PTR [rsp+0xc8],rbx
  423abc:	mov    ebp,DWORD PTR [rsp+0xb0]
  423ac3:	mov    r13,QWORD PTR [rsp+0xc0]
  423acb:	mov    rbx,QWORD PTR [rsp+0x48]
  423ad0:	mov    r15,QWORD PTR [rsp+0xe0]
  423ad8:	test   dil,dil
  423adb:	mov    rax,QWORD PTR [rsp+0xc8]
  423ae3:	je     0x423b9a
  423ae9:	cmp    DWORD PTR [rax+0x8],0x0
  423aed:	jne    0x423ce5
  423af3:	cmp    DWORD PTR [rsp+0x3c],0x0
  423af8:	jne    0x423ca3
  423afe:	mov    rdx,QWORD PTR [r15+0x20]
  423b02:	xor    eax,eax
  423b04:	or     rcx,0xffffffffffffffff
  423b08:	mov    ebx,0x3f
  423b0d:	mov    rdi,rdx
  423b10:	repnz scas al,BYTE PTR es:[rdi]
  423b12:	mov    rax,rcx
  423b15:	not    rax
  423b18:	lea    rax,[rdx+rax*1-0x1]
  423b1d:	mov    QWORD PTR [r15+0x20],rax
  423b21:	jmp    0x4231bc
  423b26:	test   rsi,rsi
  423b29:	mov    rax,rsi
  423b2c:	je     0x423a9d
  423b32:	mov    esi,DWORD PTR [rsp+0x40]
  423b36:	mov    QWORD PTR [rsp+0xc8],rax
  423b3e:	jmp    0x423ad8
  423b40:	mov    rax,QWORD PTR [rsp+0xb8]
  423b48:	lea    rcx,[rip+0x24059]        # 0x447ba8
  423b4f:	mov    rdi,QWORD PTR [rax]
  423b52:	call   0x433f18
  423b57:	mov    rsi,rax
  423b5a:	call   QWORD PTR [rip+0x30d90]        # 0x4548f0
  423b60:	lea    rcx,[rax+0x60]
  423b64:	mov    r9d,ebx
  423b67:	mov    r8,rdi
  423b6a:	mov    rdx,rsi
  423b6d:	call   0x433f20
  423b72:	jmp    0x423a60
  423b77:	cmp    DWORD PTR [rsp+0x3c],0x0
  423b7c:	jne    0x423cf2
  423b82:	mov    DWORD PTR [r15+0x8],ebx
  423b86:	cmp    BYTE PTR [r13+0x0],0x3a
  423b8b:	setne  bl
  423b8e:	lea    ebx,[rbx+rbx*4+0x3a]
  423b92:	movsx  ebx,bl
  423b95:	jmp    0x4231bc
  423b9a:	cmp    DWORD PTR [rax+0x8],0x1
  423b9e:	je     0x423bf5
  423ba0:	mov    QWORD PTR [r15+0x10],0x0
  423ba8:	xor    eax,eax
  423baa:	or     rcx,0xffffffffffffffff
  423bae:	mov    rdi,r12
  423bb1:	repnz scas al,BYTE PTR es:[rdi]
  423bb3:	cmp    QWORD PTR [rsp+0xd0],0x0
  423bbc:	mov    rax,rcx
  423bbf:	not    rax
  423bc2:	lea    rax,[r12+rax*1-0x1]
  423bc7:	mov    QWORD PTR [r15+0x20],rax
  423bcb:	je     0x423bd7
  423bcd:	mov    rax,QWORD PTR [rsp+0xd0]
  423bd5:	mov    DWORD PTR [rax],esi
  423bd7:	mov    rax,QWORD PTR [rsp+0xc8]
  423bdf:	mov    rax,QWORD PTR [rax+0x10]
  423be3:	test   rax,rax
  423be6:	je     0x423c14
  423be8:	mov    rsi,QWORD PTR [rsp+0xc8]
  423bf0:	jmp    0x42355c
  423bf5:	movsxd rax,DWORD PTR [r15]
  423bf8:	cmp    ebp,eax
  423bfa:	jle    0x423c24
  423bfc:	mov    rdi,QWORD PTR [rsp+0xb8]
  423c04:	lea    edx,[rax+0x1]
  423c07:	mov    DWORD PTR [r15],edx
  423c0a:	mov    rax,QWORD PTR [rdi+rax*8]
  423c0e:	mov    QWORD PTR [r15+0x10],rax
  423c12:	jmp    0x423ba8
  423c14:	mov    rax,QWORD PTR [rsp+0xc8]
  423c1c:	mov    ebx,DWORD PTR [rax+0x18]
  423c1f:	jmp    0x4231bc
  423c24:	cmp    DWORD PTR [rsp+0x3c],0x0
  423c29:	je     0x423c68
  423c2b:	mov    rax,QWORD PTR [rsp+0xc8]
  423c33:	lea    rcx,[rip+0x23ff6]        # 0x447c30
  423c3a:	mov    rdi,QWORD PTR [rax]
  423c3d:	mov    rax,QWORD PTR [rsp+0xb8]
  423c45:	mov    rsi,QWORD PTR [rax]
  423c48:	call   0x433f18
  423c4d:	mov    rbx,rax
  423c50:	call   QWORD PTR [rip+0x30c9a]        # 0x4548f0
  423c56:	lea    rcx,[rax+0x60]
  423c5a:	mov    r9,rdi
  423c5d:	mov    r8,rsi
  423c60:	mov    rdx,rbx
  423c63:	call   0x433f20
  423c68:	mov    rdx,QWORD PTR [r15+0x20]
  423c6c:	xor    eax,eax
  423c6e:	or     rcx,0xffffffffffffffff
  423c72:	mov    rdi,rdx
  423c75:	repnz scas al,BYTE PTR es:[rdi]
  423c77:	mov    rax,rcx
  423c7a:	not    rax
  423c7d:	lea    rax,[rdx+rax*1-0x1]
  423c82:	mov    QWORD PTR [r15+0x20],rax
  423c86:	cmp    BYTE PTR [r13+0x0],0x3a
  423c8b:	jne    0x42350d
  423c91:	jmp    0x4238c6
  423c96:	mov    rsi,rcx
  423c99:	mov    r12d,DWORD PTR [rsp+0x44]
  423c9e:	jmp    0x423478
  423ca3:	mov    rax,QWORD PTR [rsp+0xc8]
  423cab:	lea    rcx,[rip+0x23f4e]        # 0x447c00
  423cb2:	mov    rdi,QWORD PTR [rax]
  423cb5:	mov    rax,QWORD PTR [rsp+0xb8]
  423cbd:	mov    rsi,QWORD PTR [rax]
  423cc0:	call   0x433f18
  423cc5:	mov    rbx,rax
  423cc8:	call   QWORD PTR [rip+0x30c22]        # 0x4548f0
  423cce:	lea    rcx,[rax+0x60]
  423cd2:	mov    r9,rdi
  423cd5:	mov    r8,rsi
  423cd8:	mov    rdx,rbx
  423cdb:	call   0x433f20
  423ce0:	jmp    0x423afe
  423ce5:	add    rbx,0x1
  423ce9:	mov    QWORD PTR [r15+0x10],rbx
  423ced:	jmp    0x423ba8
  423cf2:	mov    rax,QWORD PTR [rsp+0xb8]
  423cfa:	lea    rcx,[rip+0x23ea7]        # 0x447ba8
  423d01:	mov    rdi,QWORD PTR [rax]
  423d04:	call   0x433f18
  423d09:	mov    rsi,rax
  423d0c:	call   QWORD PTR [rip+0x30bde]        # 0x4548f0
  423d12:	lea    rcx,[rax+0x60]
  423d16:	mov    r9d,ebx
  423d19:	mov    r8,rdi
  423d1c:	mov    rdx,rsi
  423d1f:	call   0x433f20
  423d24:	jmp    0x423b82
  423d29:	nop    DWORD PTR [rax+0x0]
  423d30:	sub    rsp,0x48
  423d34:	mov    eax,DWORD PTR [rip+0x1c34e]        # 0x440088
  423d3a:	mov    DWORD PTR [rip+0x2e440],eax        # 0x452180
  423d40:	mov    eax,DWORD PTR [rip+0x1c33e]        # 0x440084
  423d46:	mov    DWORD PTR [rip+0x2e438],eax        # 0x452184
  423d4c:	mov    eax,DWORD PTR [rsp+0x80]
  423d53:	mov    DWORD PTR [rsp+0x38],eax
  423d57:	lea    rax,[rip+0x2e422]        # 0x452180
  423d5e:	mov    QWORD PTR [rsp+0x30],rax
  423d63:	mov    eax,DWORD PTR [rsp+0x78]
  423d67:	mov    DWORD PTR [rsp+0x28],eax
  423d6b:	mov    rax,QWORD PTR [rsp+0x70]
  423d70:	mov    QWORD PTR [rsp+0x20],rax
  423d75:	call   0x422dd0
  423d7a:	mov    edx,DWORD PTR [rip+0x2e400]        # 0x452180
  423d80:	mov    DWORD PTR [rip+0x1c302],edx        # 0x440088
  423d86:	mov    rdx,QWORD PTR [rip+0x2e403]        # 0x452190
  423d8d:	mov    QWORD PTR [rip+0x2fb94],rdx        # 0x453928
  423d94:	mov    edx,DWORD PTR [rip+0x2e3ee]        # 0x452188
  423d9a:	mov    DWORD PTR [rip+0x1c2e0],edx        # 0x440080
  423da0:	add    rsp,0x48
  423da4:	ret    
  423da5:	nop
  423da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423db0:	sub    rsp,0x48
  423db4:	xor    r9d,r9d
  423db7:	mov    DWORD PTR [rsp+0x30],0x1
  423dbf:	mov    DWORD PTR [rsp+0x28],0x0
  423dc7:	mov    QWORD PTR [rsp+0x20],0x0
  423dd0:	call   0x423d30
  423dd5:	add    rsp,0x48
  423dd9:	ret    
  423dda:	nop
  423ddb:	nop
  423ddc:	nop
  423ddd:	nop
  423dde:	nop
  423ddf:	nop
  423de0:	sub    rsp,0x48
  423de4:	mov    rax,QWORD PTR [rsp+0x70]
  423de9:	mov    DWORD PTR [rsp+0x30],0x0
  423df1:	mov    DWORD PTR [rsp+0x28],0x0
  423df9:	mov    QWORD PTR [rsp+0x20],rax
  423dfe:	call   0x423d30
  423e03:	add    rsp,0x48
  423e07:	ret    
  423e08:	nop    DWORD PTR [rax+rax*1+0x0]
  423e10:	sub    rsp,0x48
  423e14:	mov    rax,QWORD PTR [rsp+0x78]
  423e19:	mov    DWORD PTR [rsp+0x38],0x0
  423e21:	mov    DWORD PTR [rsp+0x28],0x0
  423e29:	mov    QWORD PTR [rsp+0x30],rax
  423e2e:	mov    rax,QWORD PTR [rsp+0x70]
  423e33:	mov    QWORD PTR [rsp+0x20],rax
  423e38:	call   0x422dd0
  423e3d:	add    rsp,0x48
  423e41:	ret    
  423e42:	nop    DWORD PTR [rax+0x0]
  423e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e50:	sub    rsp,0x48
  423e54:	mov    rax,QWORD PTR [rsp+0x70]
  423e59:	mov    DWORD PTR [rsp+0x30],0x0
  423e61:	mov    DWORD PTR [rsp+0x28],0x1
  423e69:	mov    QWORD PTR [rsp+0x20],rax
  423e6e:	call   0x423d30
  423e73:	add    rsp,0x48
  423e77:	ret    
  423e78:	nop    DWORD PTR [rax+rax*1+0x0]
  423e80:	sub    rsp,0x48
  423e84:	mov    rax,QWORD PTR [rsp+0x78]
  423e89:	mov    DWORD PTR [rsp+0x38],0x0
  423e91:	mov    DWORD PTR [rsp+0x28],0x1
  423e99:	mov    QWORD PTR [rsp+0x30],rax
  423e9e:	mov    rax,QWORD PTR [rsp+0x70]
  423ea3:	mov    QWORD PTR [rsp+0x20],rax
  423ea8:	call   0x422dd0
  423ead:	add    rsp,0x48
  423eb1:	ret    
  423eb2:	nop
  423eb3:	nop
  423eb4:	nop
  423eb5:	nop
  423eb6:	nop
  423eb7:	nop
  423eb8:	nop
  423eb9:	nop
  423eba:	nop
  423ebb:	nop
  423ebc:	nop
  423ebd:	nop
  423ebe:	nop
  423ebf:	nop
  423ec0:	push   rbx
  423ec1:	sub    rsp,0x20
  423ec5:	call   0x43a6c8
  423eca:	test   rax,rax
  423ecd:	mov    rbx,rax
  423ed0:	je     0x423ee0
  423ed2:	mov    rax,rbx
  423ed5:	add    rsp,0x20
  423ed9:	pop    rbx
  423eda:	ret    
  423edb:	nop    DWORD PTR [rax+rax*1+0x0]
  423ee0:	call   QWORD PTR [rip+0x30a5a]        # 0x454940
  423ee6:	mov    DWORD PTR [rax],0xc
  423eec:	mov    rax,rbx
  423eef:	add    rsp,0x20
  423ef3:	pop    rbx
  423ef4:	ret    
  423ef5:	nop
  423ef6:	nop
  423ef7:	nop
  423ef8:	nop
  423ef9:	nop
  423efa:	nop
  423efb:	nop
  423efc:	nop
  423efd:	nop
  423efe:	nop
  423eff:	nop
  423f00:	push   r13
  423f02:	push   r12
  423f04:	push   rbp
  423f05:	push   rdi
  423f06:	push   rsi
  423f07:	push   rbx
  423f08:	sub    rsp,0x38
  423f0c:	test   rdx,rdx
  423f0f:	mov    rbp,rcx
  423f12:	mov    rdi,rdx
  423f15:	mov    r12,r8
  423f18:	mov    rsi,r9
  423f1b:	je     0x424020
  423f21:	test   rcx,rcx
  423f24:	je     0x42402d
  423f2a:	lea    rax,[rip+0x2e28f]        # 0x4521c0
  423f31:	test   rsi,rsi
  423f34:	cmove  rsi,rax
  423f38:	mov    rcx,rsi
  423f3b:	call   0x424040
  423f40:	test   eax,eax
  423f42:	jne    0x423f90
  423f44:	xor    ebx,ebx
  423f46:	test   r12,r12
  423f49:	lea    r13,[rsp+0x2e]
  423f4e:	jne    0x423f68
  423f50:	jmp    0x423fe0
  423f55:	add    rbx,0x1
  423f59:	cmp    rax,0xfffffffffffffffe
  423f5d:	jne    0x423ff4
  423f63:	cmp    rbx,r12
  423f66:	je     0x423fe0
  423f68:	lea    rdx,[rdi+rbx*1]
  423f6c:	mov    r9,rsi
  423f6f:	mov    r8d,0x1
  423f75:	mov    rcx,r13
  423f78:	call   0x4356d0
  423f7d:	cmp    rax,0xffffffffffffffff
  423f81:	jne    0x423f55
  423f83:	add    rsp,0x38
  423f87:	pop    rbx
  423f88:	pop    rsi
  423f89:	pop    rdi
  423f8a:	pop    rbp
  423f8b:	pop    r12
  423f8d:	pop    r13
  423f8f:	ret    
  423f90:	mov    r9,rsi
  423f93:	mov    r8,r12
  423f96:	mov    rdx,rdi
  423f99:	mov    rcx,rbp
  423f9c:	call   0x4356d0
  423fa1:	cmp    rax,0xfffffffffffffffd
  423fa5:	mov    rbx,rax
  423fa8:	jbe    0x423fd0
  423faa:	test   r12,r12
  423fad:	je     0x423fd0
  423faf:	mov    ecx,0x2
  423fb4:	call   0x433d90
  423fb9:	mov    edx,eax
  423fbb:	mov    rax,rbx
  423fbe:	test   dl,dl
  423fc0:	jne    0x423f83
  423fc2:	movzx  eax,BYTE PTR [rdi]
  423fc5:	mov    WORD PTR [rbp+0x0],ax
  423fc9:	mov    eax,0x1
  423fce:	jmp    0x423f83
  423fd0:	mov    rax,rbx
  423fd3:	add    rsp,0x38
  423fd7:	pop    rbx
  423fd8:	pop    rsi
  423fd9:	pop    rdi
  423fda:	pop    rbp
  423fdb:	pop    r12
  423fdd:	pop    r13
  423fdf:	ret    
  423fe0:	mov    rax,0xfffffffffffffffe
  423fe7:	add    rsp,0x38
  423feb:	pop    rbx
  423fec:	pop    rsi
  423fed:	pop    rdi
  423fee:	pop    rbp
  423fef:	pop    r12
  423ff1:	pop    r13
  423ff3:	ret    
  423ff4:	movzx  eax,WORD PTR [rsp+0x2e]
  423ff9:	mov    WORD PTR [rbp+0x0],ax
  423ffd:	cmp    WORD PTR [rsp+0x2e],0x0
  424003:	mov    eax,0x0
  424008:	cmovne rax,rbx
  42400c:	add    rsp,0x38
  424010:	pop    rbx
  424011:	pop    rsi
  424012:	pop    rdi
  424013:	pop    rbp
  424014:	pop    r12
  424016:	pop    r13
  424018:	ret    
  424019:	nop    DWORD PTR [rax+0x0]
  424020:	lea    rdi,[rip+0x23c39]        # 0x447c60
  424027:	mov    r12d,0x1
  42402d:	lea    rbp,[rsp+0x2e]
  424032:	jmp    0x423f2a
  424037:	nop
  424038:	nop
  424039:	nop
  42403a:	nop
  42403b:	nop
  42403c:	nop
  42403d:	nop
  42403e:	nop
  42403f:	nop
  424040:	test   rcx,rcx
  424043:	je     0x424050
  424045:	mov    edx,DWORD PTR [rcx]
  424047:	xor    eax,eax
  424049:	test   edx,edx
  42404b:	sete   al
  42404e:	ret    
  42404f:	nop
  424050:	mov    eax,0x1
  424055:	ret    
  424056:	nop
  424057:	nop
  424058:	nop
  424059:	nop
  42405a:	nop
  42405b:	nop
  42405c:	nop
  42405d:	nop
  42405e:	nop
  42405f:	nop
  424060:	test   r8,r8
  424063:	mov    r9d,edx
  424066:	je     0x424087
  424068:	test   cl,0x3
  42406b:	je     0x424094
  42406d:	cmp    BYTE PTR [rcx],dl
  42406f:	jne    0x42407d
  424071:	jmp    0x424090
  424073:	test   cl,0x3
  424076:	je     0x424094
  424078:	cmp    BYTE PTR [rcx],r9b
  42407b:	je     0x424090
  42407d:	add    rcx,0x1
  424081:	sub    r8,0x1
  424085:	jne    0x424073
  424087:	xor    eax,eax
  424089:	ret    
  42408a:	nop    WORD PTR [rax+rax*1+0x0]
  424090:	mov    rax,rcx
  424093:	ret    
  424094:	movzx  eax,dl
  424097:	mov    r11d,eax
  42409a:	shl    r11d,0x8
  42409e:	or     r11d,eax
  4240a1:	mov    eax,r11d
  4240a4:	shl    eax,0x10
  4240a7:	or     r11d,eax
  4240aa:	cmp    r8,0x3
  4240ae:	ja     0x4240c0
  4240b0:	jmp    0x4240d8
  4240b2:	sub    r8,0x4
  4240b6:	add    rcx,0x4
  4240ba:	cmp    r8,0x3
  4240be:	jbe    0x424100
  4240c0:	mov    eax,DWORD PTR [rcx]
  4240c2:	xor    eax,r11d
  4240c5:	lea    r10d,[rax-0x1010101]
  4240cc:	not    eax
  4240ce:	and    eax,r10d
  4240d1:	test   eax,0x80808080
  4240d6:	je     0x4240b2
  4240d8:	add    r8,rcx
  4240db:	cmp    BYTE PTR [rcx],dl
  4240dd:	lea    rax,[rcx+0x1]
  4240e1:	jne    0x4240ef
  4240e3:	jmp    0x424090
  4240e5:	add    rax,0x1
  4240e9:	cmp    BYTE PTR [rax-0x1],r9b
  4240ed:	je     0x424090
  4240ef:	cmp    rax,r8
  4240f2:	mov    rcx,rax
  4240f5:	jne    0x4240e5
  4240f7:	xor    eax,eax
  4240f9:	ret    
  4240fa:	nop    WORD PTR [rax+rax*1+0x0]
  424100:	test   r8,r8
  424103:	jne    0x4240d8
  424105:	jmp    0x424087
  424107:	nop
  424108:	nop
  424109:	nop
  42410a:	nop
  42410b:	nop
  42410c:	nop
  42410d:	nop
  42410e:	nop
  42410f:	nop
  424110:	add    rcx,r8
  424113:	test   r8,r8
  424116:	mov    r10d,edx
  424119:	je     0x4241f6
  42411f:	test   cl,0x3
  424122:	je     0x424173
  424124:	cmp    BYTE PTR [rcx-0x1],dl
  424127:	lea    r9,[rcx-0x1]
  42412b:	jne    0x424145
  42412d:	jmp    0x4241f2
  424132:	test   r9b,0x3
  424136:	je     0x424180
  424138:	sub    r9,0x1
  42413c:	cmp    BYTE PTR [r9],r10b
  42413f:	je     0x4241f2
  424145:	sub    r8,0x1
  424149:	jne    0x424132
  42414b:	mov    rax,r9
  42414e:	xor    r8d,r8d
  424151:	mov    rdx,rax
  424154:	sub    rdx,r8
  424157:	jmp    0x424169
  424159:	nop    DWORD PTR [rax+0x0]
  424160:	sub    rax,0x1
  424164:	cmp    BYTE PTR [rax],r10b
  424167:	je     0x424171
  424169:	cmp    rax,rdx
  42416c:	jne    0x424160
  42416e:	xor    eax,eax
  424170:	ret    
  424171:	repz ret 
  424173:	mov    r9,rcx
  424176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424180:	movzx  edx,dl
  424183:	mov    r11d,edx
  424186:	shl    r11d,0x8
  42418a:	or     edx,r11d
  42418d:	mov    r11d,edx
  424190:	shl    r11d,0x10
  424194:	or     r11d,edx
  424197:	cmp    r8,0x3
  42419b:	jbe    0x4241fe
  42419d:	mov    edx,DWORD PTR [r9-0x4]
  4241a1:	lea    rax,[r9-0x4]
  4241a5:	xor    edx,r11d
  4241a8:	lea    ecx,[rdx-0x1010101]
  4241ae:	not    edx
  4241b0:	and    edx,ecx
  4241b2:	and    edx,0x80808080
  4241b8:	je     0x4241e3
  4241ba:	jmp    0x4241fe
  4241bc:	nop    DWORD PTR [rax+0x0]
  4241c0:	mov    edx,DWORD PTR [rax-0x4]
  4241c3:	lea    r9,[rax-0x4]
  4241c7:	xor    edx,r11d
  4241ca:	lea    ecx,[rdx-0x1010101]
  4241d0:	not    edx
  4241d2:	and    edx,ecx
  4241d4:	and    edx,0x80808080
  4241da:	jne    0x424151
  4241e0:	mov    rax,r9
  4241e3:	sub    r8,0x4
  4241e7:	cmp    r8,0x3
  4241eb:	ja     0x4241c0
  4241ed:	jmp    0x424151
  4241f2:	mov    rax,r9
  4241f5:	ret    
  4241f6:	mov    r9,rcx
  4241f9:	jmp    0x42414b
  4241fe:	mov    rax,r9
  424201:	jmp    0x424151
  424206:	nop
  424207:	nop
  424208:	nop
  424209:	nop
  42420a:	nop
  42420b:	nop
  42420c:	nop
  42420d:	nop
  42420e:	nop
  42420f:	nop
  424210:	push   rbx
  424211:	sub    rsp,0x20
  424215:	mov    ebx,ecx
  424217:	call   0x433e50
  42421c:	mov    rax,QWORD PTR [rip+0x3073d]        # 0x454960
  424223:	mov    ecx,ebx
  424225:	add    rsp,0x20
  424229:	pop    rbx
  42422a:	rex.W jmp rax
  42422d:	nop
  42422e:	nop
  42422f:	nop
  424230:	sub    rsp,0x38
  424234:	lea    rdx,[rip+0x23a45]        # 0x447c80
  42423b:	lea    rcx,[rip+0x2dfc0]        # 0x452202
  424242:	mov    QWORD PTR [rsp+0x50],r8
  424247:	lea    r8,[rsp+0x50]
  42424c:	mov    QWORD PTR [rsp+0x58],r9
  424251:	mov    QWORD PTR [rsp+0x28],r8
  424256:	call   0x435f80
  42425b:	add    rsp,0x38
  42425f:	ret    
  424260:	push   rsi
  424261:	push   rbx
  424262:	sub    rsp,0x58
  424266:	lea    eax,[rcx-0x2710]
  42426c:	mov    QWORD PTR [rsp+0x20],0x0
  424275:	mov    QWORD PTR [rsp+0x28],0x0
  42427e:	mov    QWORD PTR [rsp+0x30],0x0
  424287:	mov    QWORD PTR [rsp+0x38],0x0
  424290:	cmp    eax,0x72
  424293:	mov    DWORD PTR [rsp+0x40],0x0
  42429b:	ja     0x4242b0
  42429d:	lea    rdx,[rip+0x23a4c]        # 0x447cf0
  4242a4:	movsxd rax,DWORD PTR [rdx+rax*4]
  4242a8:	add    rdx,rax
  4242ab:	jmp    rdx
  4242ad:	nop    DWORD PTR [rax]
  4242b0:	lea    rax,[rip+0x23a10]        # 0x447cc7
  4242b7:	nop    WORD PTR [rax+rax*1+0x0]
  4242c0:	add    rsp,0x58
  4242c4:	pop    rbx
  4242c5:	pop    rsi
  4242c6:	ret    
  4242c7:	nop    WORD PTR [rax+rax*1+0x0]
  4242d0:	lea    rax,[rip+0x239b7]        # 0x447c8e
  4242d7:	jmp    0x4242c0
  4242d9:	nop    DWORD PTR [rax+0x0]
  4242e0:	call   QWORD PTR [rip+0x307c2]        # 0x454aa8
  4242e6:	add    rax,0x57
  4242ea:	jmp    0x4242c0
  4242ec:	nop    DWORD PTR [rax+0x0]
  4242f0:	call   QWORD PTR [rip+0x307b2]        # 0x454aa8
  4242f6:	add    rax,0x56
  4242fa:	jmp    0x4242c0
  4242fc:	nop    DWORD PTR [rax+0x0]
  424300:	call   QWORD PTR [rip+0x307a2]        # 0x454aa8
  424306:	add    rax,0x55
  42430a:	jmp    0x4242c0
  42430c:	nop    DWORD PTR [rax+0x0]
  424310:	call   QWORD PTR [rip+0x30792]        # 0x454aa8
  424316:	add    rax,0x53
  42431a:	jmp    0x4242c0
  42431c:	nop    DWORD PTR [rax+0x0]
  424320:	call   QWORD PTR [rip+0x30782]        # 0x454aa8
  424326:	add    rax,0x54
  42432a:	jmp    0x4242c0
  42432c:	nop    DWORD PTR [rax+0x0]
  424330:	call   QWORD PTR [rip+0x30772]        # 0x454aa8
  424336:	add    rax,0x52
  42433a:	jmp    0x4242c0
  42433c:	nop    DWORD PTR [rax+0x0]
  424340:	call   QWORD PTR [rip+0x30762]        # 0x454aa8
  424346:	add    rax,0x50
  42434a:	jmp    0x4242c0
  42434f:	nop
  424350:	call   QWORD PTR [rip+0x30752]        # 0x454aa8
  424356:	add    rax,0x51
  42435a:	jmp    0x4242c0
  42435f:	nop
  424360:	call   QWORD PTR [rip+0x30742]        # 0x454aa8
  424366:	mov    rax,QWORD PTR [rax+0x48]
  42436a:	jmp    0x4242c0
  42436f:	nop
  424370:	call   QWORD PTR [rip+0x30732]        # 0x454aa8
  424376:	mov    rax,QWORD PTR [rax+0x40]
  42437a:	jmp    0x4242c0
  42437f:	nop
  424380:	call   QWORD PTR [rip+0x30722]        # 0x454aa8
  424386:	mov    rax,QWORD PTR [rax+0x38]
  42438a:	jmp    0x4242c0
  42438f:	nop
  424390:	call   QWORD PTR [rip+0x30712]        # 0x454aa8
  424396:	mov    rax,QWORD PTR [rax+0x30]
  42439a:	jmp    0x4242c0
  42439f:	nop
  4243a0:	call   QWORD PTR [rip+0x30702]        # 0x454aa8
  4243a6:	mov    rax,QWORD PTR [rax+0x28]
  4243aa:	jmp    0x4242c0
  4243af:	nop
  4243b0:	call   QWORD PTR [rip+0x306f2]        # 0x454aa8
  4243b6:	mov    rax,QWORD PTR [rax+0x18]
  4243ba:	jmp    0x4242c0
  4243bf:	nop
  4243c0:	lea    rax,[rip+0x23901]        # 0x447cc8
  4243c7:	jmp    0x4242c0
  4243cc:	nop    DWORD PTR [rax+0x0]
  4243d0:	lea    rax,[rip+0x238f7]        # 0x447cce
  4243d7:	jmp    0x4242c0
  4243dc:	nop    DWORD PTR [rax+0x0]
  4243e0:	call   QWORD PTR [rip+0x306c2]        # 0x454aa8
  4243e6:	mov    rax,QWORD PTR [rax+0x20]
  4243ea:	jmp    0x4242c0
  4243ef:	nop
  4243f0:	lea    rax,[rip+0x238dd]        # 0x447cd4
  4243f7:	jmp    0x4242c0
  4243fc:	nop    DWORD PTR [rax+0x0]
  424400:	call   QWORD PTR [rip+0x306a2]        # 0x454aa8
  424406:	mov    rax,QWORD PTR [rax+0x10]
  42440a:	jmp    0x4242c0
  42440f:	nop
  424410:	lea    ebx,[rcx-0x2733]
  424416:	lea    r9,[rsp+0x20]
  42441b:	lea    r8,[rip+0x238c9]        # 0x447ceb
  424422:	lea    rcx,[rip+0x2de17]        # 0x452240
  424429:	mov    edx,0x64
  42442e:	mov    DWORD PTR [rsp+0x30],ebx
  424432:	call   0x43a628
  424437:	test   rax,rax
  42443a:	jne    0x424570
  424440:	lea    rax,[rip+0x23a79]        # 0x447ec0
  424447:	movsxd rcx,ebx
  42444a:	lea    rax,[rax+rcx*4]
  42444e:	jmp    0x4242c0
  424453:	lea    ebx,[rcx-0x2727]
  424459:	lea    r9,[rsp+0x20]
  42445e:	lea    r8,[rip+0x23883]        # 0x447ce8
  424465:	lea    rcx,[rip+0x2ddd4]        # 0x452240
  42446c:	mov    edx,0x64
  424471:	mov    DWORD PTR [rsp+0x30],ebx
  424475:	call   0x43a628
  42447a:	test   rax,rax
  42447d:	jne    0x424570
  424483:	movsxd rcx,ebx
  424486:	lea    rax,[rip+0x23a73]        # 0x447f00
  42448d:	lea    rdx,[rcx+rcx*4]
  424491:	lea    rax,[rax+rdx*2]
  424495:	jmp    0x4242c0
  42449a:	nop    WORD PTR [rax+rax*1+0x0]
  4244a0:	lea    ebx,[rcx-0x2720]
  4244a6:	lea    r9,[rsp+0x20]
  4244ab:	lea    r8,[rip+0x23833]        # 0x447ce5
  4244b2:	lea    rcx,[rip+0x2dd87]        # 0x452240
  4244b9:	mov    edx,0x64
  4244be:	mov    DWORD PTR [rsp+0x38],ebx
  4244c2:	call   0x43a628
  4244c7:	test   rax,rax
  4244ca:	jne    0x424570
  4244d0:	lea    rax,[rip+0x23a99]        # 0x447f70
  4244d7:	movsxd rcx,ebx
  4244da:	lea    rax,[rax+rcx*4]
  4244de:	jmp    0x4242c0
  4244e3:	lea    ebx,[rcx-0x2719]
  4244e9:	lea    r9,[rsp+0x20]
  4244ee:	lea    r8,[rip+0x237ed]        # 0x447ce2
  4244f5:	lea    rcx,[rip+0x2dd44]        # 0x452240
  4244fc:	mov    edx,0x64
  424501:	mov    DWORD PTR [rsp+0x38],ebx
  424505:	call   0x43a628
  42450a:	test   rax,rax
  42450d:	jne    0x424570
  42450f:	movsxd rcx,ebx
  424512:	lea    rax,[rip+0x23aa7]        # 0x447fc0
  424519:	lea    rdx,[rcx+rcx*4]
  42451d:	lea    rax,[rax+rdx*2]
  424521:	jmp    0x4242c0
  424526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424530:	lea    r9,[rsp+0x20]
  424535:	lea    r8,[rip+0x237a3]        # 0x447cdf
  42453c:	lea    rcx,[rip+0x2dcfd]        # 0x452240
  424543:	mov    edx,0x64
  424548:	mov    DWORD PTR [rsp+0x28],0xc
  424550:	call   0x43a628
  424555:	mov    rdx,rax
  424558:	lea    rax,[rip+0x23765]        # 0x447cc4
  42455f:	test   rdx,rdx
  424562:	je     0x4242c0
  424568:	nop    DWORD PTR [rax+rax*1+0x0]
  424570:	lea    rax,[rip+0x2dcc9]        # 0x452240
  424577:	jmp    0x4242c0
  42457c:	nop    DWORD PTR [rax+0x0]
  424580:	lea    r9,[rsp+0x20]
  424585:	lea    r8,[rip+0x23753]        # 0x447cdf
  42458c:	lea    rcx,[rip+0x2dcad]        # 0x452240
  424593:	mov    edx,0x64
  424598:	call   0x43a628
  42459d:	mov    rdx,rax
  4245a0:	lea    rax,[rip+0x2371a]        # 0x447cc1
  4245a7:	test   rdx,rdx
  4245aa:	je     0x4242c0
  4245b0:	jmp    0x424570
  4245b2:	lea    rax,[rip+0x236fc]        # 0x447cb5
  4245b9:	jmp    0x4242c0
  4245be:	xchg   ax,ax
  4245c0:	lea    rax,[rip+0x236e5]        # 0x447cac
  4245c7:	jmp    0x4242c0
  4245cc:	nop    DWORD PTR [rax+0x0]
  4245d0:	lea    rax,[rip+0x236cc]        # 0x447ca3
  4245d7:	jmp    0x4242c0
  4245dc:	nop    DWORD PTR [rax+0x0]
  4245e0:	call   QWORD PTR [rip+0x304c2]        # 0x454aa8
  4245e6:	mov    rax,QWORD PTR [rax]
  4245e9:	jmp    0x4242c0
  4245ee:	xchg   ax,ax
  4245f0:	xor    edx,edx
  4245f2:	mov    ecx,0x2
  4245f7:	lea    rbx,[rip+0x2dc02]        # 0x452200
  4245fe:	call   0x43a670
  424603:	test   rax,rax
  424606:	mov    BYTE PTR [rip+0x2dbf3],0x0        # 0x452200
  42460d:	je     0x42464f
  42460f:	cmp    BYTE PTR [rax],0x0
  424612:	je     0x42464f
  424614:	mov    edx,0x2e
  424619:	mov    rcx,rax
  42461c:	call   0x43a650
  424621:	test   rax,rax
  424624:	je     0x42464f
  424626:	lea    rbx,[rax+0x1]
  42462a:	mov    edx,0x40
  42462f:	mov    rcx,rbx
  424632:	call   0x43a650
  424637:	test   rax,rax
  42463a:	je     0x42464f
  42463c:	sub    rax,rbx
  42463f:	cmp    rax,0xc
  424643:	mov    rsi,rax
  424646:	jbe    0x4246b9
  424648:	lea    rbx,[rip+0x2dbb1]        # 0x452200
  42464f:	mov    rcx,rbx
  424652:	call   0x43a620
  424657:	lea    rdx,[rax-0x1]
  42465b:	cmp    rdx,0x9
  42465f:	jbe    0x4246a4
  424661:	call   QWORD PTR [rip+0x300f9]        # 0x454760
  424667:	lea    rdx,[rip+0x23612]        # 0x447c80
  42466e:	lea    rcx,[rip+0x2db8d]        # 0x452202
  424675:	mov    r8d,eax
  424678:	call   0x424230
  42467d:	mov    eax,0x5043
  424682:	mov    WORD PTR [rip+0x2db77],ax        # 0x452200
  424689:	lea    rax,[rip+0x2db70]        # 0x452200
  424690:	jmp    0x4242c0
  424695:	call   QWORD PTR [rip+0x3040d]        # 0x454aa8
  42469b:	mov    rax,QWORD PTR [rax+0x8]
  42469f:	jmp    0x4242c0
  4246a4:	lea    r8,[rax+0x1]
  4246a8:	lea    rcx,[rip+0x2db53]        # 0x452202
  4246af:	mov    rdx,rbx
  4246b2:	call   0x43a6b0
  4246b7:	jmp    0x42467d
  4246b9:	lea    rcx,[rip+0x2db40]        # 0x452200
  4246c0:	mov    rdx,rbx
  4246c3:	mov    r8,rax
  4246c6:	call   0x43a6b8
  4246cb:	mov    rbx,rax
  4246ce:	mov    BYTE PTR [rax+rsi*1],0x0
  4246d2:	jmp    0x42464f
  4246d7:	nop
  4246d8:	nop
  4246d9:	nop
  4246da:	nop
  4246db:	nop
  4246dc:	nop
  4246dd:	nop
  4246de:	nop
  4246df:	nop
  4246e0:	mov    r9,QWORD PTR [rcx+0x40]
  4246e4:	cmp    QWORD PTR [rcx+0x58],r9
  4246e8:	cmovle r9,QWORD PTR [rcx+0x58]
  4246ed:	mov    rax,QWORD PTR [rcx+0x30]
  4246f1:	cmp    r9,rax
  4246f4:	jle    0x424725
  4246f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424700:	mov    rdx,QWORD PTR [rcx+0x28]
  424704:	add    rdx,QWORD PTR [rcx]
  424707:	mov    r8,QWORD PTR [rcx+0x78]
  42470b:	movzx  edx,BYTE PTR [rdx+rax*1]
  42470f:	movzx  r8d,BYTE PTR [r8+rdx*1]
  424714:	mov    rdx,QWORD PTR [rcx+0x8]
  424718:	mov    BYTE PTR [rdx+rax*1],r8b
  42471c:	add    rax,0x1
  424720:	cmp    rax,r9
  424723:	jne    0x424700
  424725:	mov    QWORD PTR [rcx+0x30],rax
  424729:	mov    QWORD PTR [rcx+0x38],rax
  42472d:	ret    
  42472e:	xchg   ax,ax
  424730:	mov    rax,QWORD PTR [rdx+0x48]
  424734:	cmp    QWORD PTR [rdx+0x68],rax
  424738:	jle    0x424782
  42473a:	mov    r9,QWORD PTR [rdx+0x8]
  42473e:	movzx  eax,BYTE PTR [r9+rax*1]
  424743:	mov    BYTE PTR [rcx],al
  424745:	cmp    DWORD PTR [rdx+0x90],0x1
  42474c:	jle    0x424764
  42474e:	mov    r9,QWORD PTR [rdx+0x48]
  424752:	cmp    r9,QWORD PTR [rdx+0x30]
  424756:	je     0x424764
  424758:	mov    r10,QWORD PTR [rdx+0x10]
  42475c:	cmp    WORD PTR [r10+r9*2],0xffff
  424762:	je     0x4247a4
  424764:	cmp    al,0x5c
  424766:	je     0x424790
  424768:	cmp    al,0x5b
  42476a:	je     0x4247c0
  42476c:	cmp    al,0x5d
  42476e:	je     0x4247b0
  424770:	cmp    al,0x5e
  424772:	je     0x4247e0
  424774:	cmp    al,0x2d
  424776:	jne    0x4247a4
  424778:	mov    BYTE PTR [rcx+0x8],0x16
  42477c:	mov    eax,0x1
  424781:	ret    
  424782:	mov    BYTE PTR [rcx+0x8],0x2
  424786:	xor    eax,eax
  424788:	ret    
  424789:	nop    DWORD PTR [rax+0x0]
  424790:	and    r8d,0x1
  424794:	je     0x4247a4
  424796:	mov    rax,QWORD PTR [rdx+0x48]
  42479a:	lea    r8,[rax+0x1]
  42479e:	cmp    r8,QWORD PTR [rdx+0x58]
  4247a2:	jl     0x424811
  4247a4:	mov    BYTE PTR [rcx+0x8],0x1
  4247a8:	mov    eax,0x1
  4247ad:	ret    
  4247ae:	xchg   ax,ax
  4247b0:	mov    BYTE PTR [rcx+0x8],0x15
  4247b4:	mov    eax,0x1
  4247b9:	ret    
  4247ba:	nop    WORD PTR [rax+rax*1+0x0]
  4247c0:	mov    rax,QWORD PTR [rdx+0x48]
  4247c4:	lea    r9,[rax+0x1]
  4247c8:	cmp    r9,QWORD PTR [rdx+0x58]
  4247cc:	jl     0x4247f0
  4247ce:	mov    BYTE PTR [rcx+0x8],0x1
  4247d2:	mov    BYTE PTR [rcx],0x5b
  4247d5:	mov    eax,0x1
  4247da:	ret    
  4247db:	nop    DWORD PTR [rax+rax*1+0x0]
  4247e0:	mov    BYTE PTR [rcx+0x8],0x19
  4247e4:	mov    eax,0x1
  4247e9:	ret    
  4247ea:	nop    WORD PTR [rax+rax*1+0x0]
  4247f0:	mov    rdx,QWORD PTR [rdx+0x8]
  4247f4:	movzx  eax,BYTE PTR [rdx+rax*1+0x1]
  4247f9:	cmp    al,0x3a
  4247fb:	mov    BYTE PTR [rcx],al
  4247fd:	je     0x424830
  4247ff:	cmp    al,0x3d
  424801:	je     0x424840
  424803:	cmp    al,0x2e
  424805:	jne    0x4247ce
  424807:	mov    BYTE PTR [rcx+0x8],0x1a
  42480b:	mov    eax,0x2
  424810:	ret    
  424811:	mov    QWORD PTR [rdx+0x48],r8
  424815:	mov    rdx,QWORD PTR [rdx+0x8]
  424819:	movzx  eax,BYTE PTR [rdx+rax*1+0x1]
  42481e:	mov    BYTE PTR [rcx+0x8],0x1
  424822:	mov    BYTE PTR [rcx],al
  424824:	mov    eax,0x1
  424829:	ret    
  42482a:	nop    WORD PTR [rax+rax*1+0x0]
  424830:	and    r8d,0x4
  424834:	je     0x4247ce
  424836:	mov    BYTE PTR [rcx+0x8],0x1e
  42483a:	mov    eax,0x2
  42483f:	ret    
  424840:	mov    BYTE PTR [rcx+0x8],0x1c
  424844:	mov    eax,0x2
  424849:	ret    
  42484a:	nop    WORD PTR [rax+rax*1+0x0]
  424850:	cmp    BYTE PTR [rdx+0x30],0x11
  424854:	je     0x424860
  424856:	xor    eax,eax
  424858:	ret    
  424859:	nop    DWORD PTR [rax+0x0]
  424860:	cmp    rcx,QWORD PTR [rdx+0x28]
  424864:	jne    0x424856
  424866:	or     BYTE PTR [rdx+0x32],0x8
  42486a:	xor    eax,eax
  42486c:	ret    
  42486d:	nop    DWORD PTR [rax]
  424870:	push   r15
  424872:	push   r14
  424874:	push   r13
  424876:	push   r12
  424878:	push   rbp
  424879:	push   rdi
  42487a:	push   rsi
  42487b:	push   rbx
  42487c:	sub    rsp,0x68
  424880:	mov    r15,QWORD PTR [rcx+0x98]
  424887:	mov    r13,QWORD PTR [rsp+0xd0]
  42488f:	mov    DWORD PTR [rsp+0xb8],edx
  424896:	lea    rdx,[r9+r9*2]
  42489a:	mov    QWORD PTR [rsp+0xb0],rcx
  4248a2:	mov    rdi,r8
  4248a5:	mov    QWORD PTR [rsp+0xc8],r9
  4248ad:	mov    rax,QWORD PTR [r15+0x30]
  4248b1:	lea    r14,[rax+rdx*8]
  4248b5:	cmp    QWORD PTR [r14+0x8],0x0
  4248ba:	jle    0x424a3e
  4248c0:	lea    rax,[r13+r13*4+0x0]
  4248c5:	mov    ecx,r8d
  4248c8:	xor    ebp,ebp
  4248ca:	shl    rax,0x3
  4248ce:	mov    QWORD PTR [rsp+0x58],rax
  4248d3:	mov    eax,0x1
  4248d8:	shl    eax,cl
  4248da:	mov    DWORD PTR [rsp+0x3c],eax
  4248de:	not    eax
  4248e0:	mov    WORD PTR [rsp+0x42],ax
  4248e5:	mov    eax,DWORD PTR [rsp+0xb8]
  4248ec:	and    eax,0x1
  4248ef:	mov    DWORD PTR [rsp+0x44],eax
  4248f3:	mov    eax,DWORD PTR [rsp+0xb8]
  4248fa:	and    eax,0x2
  4248fd:	mov    DWORD PTR [rsp+0x38],eax
  424901:	jmp    0x42491f
  424903:	cmp    dl,0x9
  424906:	je     0x424a50
  42490c:	cmp    dl,0x4
  42490f:	je     0x424960
  424911:	add    rbp,0x1
  424915:	cmp    QWORD PTR [r14+0x8],rbp
  424919:	jle    0x424a3e
  42491f:	mov    rax,QWORD PTR [r14+0x10]
  424923:	mov    rsi,QWORD PTR [rax+rbp*8]
  424927:	mov    rax,rsi
  42492a:	shl    rax,0x4
  42492e:	add    rax,QWORD PTR [r15]
  424931:	movzx  edx,BYTE PTR [rax+0x8]
  424935:	cmp    dl,0x8
  424938:	jne    0x424903
  42493a:	mov    ecx,DWORD PTR [rsp+0x44]
  42493e:	test   ecx,ecx
  424940:	je     0x424911
  424942:	cmp    QWORD PTR [rax],rdi
  424945:	jne    0x424911
  424947:	mov    eax,0xffffffff
  42494c:	add    rsp,0x68
  424950:	pop    rbx
  424951:	pop    rsi
  424952:	pop    rdi
  424953:	pop    rbp
  424954:	pop    r12
  424956:	pop    r13
  424958:	pop    r14
  42495a:	pop    r15
  42495c:	ret    
  42495d:	nop    DWORD PTR [rax]
  424960:	cmp    r13,0xffffffffffffffff
  424964:	je     0x424911
  424966:	mov    rax,QWORD PTR [rsp+0xb0]
  42496e:	lea    r12,[rsi+rsi*2]
  424972:	mov    rbx,QWORD PTR [rsp+0x58]
  424977:	mov    QWORD PTR [rsp+0x48],r14
  42497c:	mov    QWORD PTR [rsp+0x50],rbp
  424981:	mov    r14,r15
  424984:	shl    r12,0x3
  424988:	mov    r15,rdi
  42498b:	add    rbx,QWORD PTR [rax+0xd8]
  424992:	mov    rdi,r12
  424995:	mov    rbp,rax
  424998:	mov    r12,QWORD PTR [rsp+0xc8]
  4249a0:	jmp    0x4249ac
  4249a2:	add    rbx,0x28
  4249a6:	cmp    BYTE PTR [rbx-0x8],0x0
  4249aa:	je     0x424a20
  4249ac:	cmp    QWORD PTR [rbx],rsi
  4249af:	jne    0x4249a2
  4249b1:	cmp    r15,0x1f
  4249b5:	jg     0x4249c1
  4249b7:	movzx  eax,WORD PTR [rbx+0x22]
  4249bb:	test   DWORD PTR [rsp+0x3c],eax
  4249bf:	je     0x4249a2
  4249c1:	mov    rax,QWORD PTR [r14+0x28]
  4249c5:	mov    rax,QWORD PTR [rax+rdi*1+0x10]
  4249ca:	mov    r9,QWORD PTR [rax]
  4249cd:	cmp    r9,r12
  4249d0:	je     0x424a6c
  4249d6:	mov    edx,DWORD PTR [rsp+0xb8]
  4249dd:	mov    QWORD PTR [rsp+0x20],r13
  4249e2:	mov    r8,r15
  4249e5:	mov    rcx,rbp
  4249e8:	call   0x424870
  4249ed:	cmp    eax,0xffffffff
  4249f0:	je     0x424947
  4249f6:	test   eax,eax
  4249f8:	jne    0x424a04
  4249fa:	mov    r8d,DWORD PTR [rsp+0x38]
  4249ff:	test   r8d,r8d
  424a02:	jne    0x424a65
  424a04:	cmp    r15,0x1f
  424a08:	jg     0x4249a2
  424a0a:	movzx  eax,WORD PTR [rsp+0x42]
  424a0f:	and    WORD PTR [rbx+0x22],ax
  424a13:	add    rbx,0x28
  424a17:	cmp    BYTE PTR [rbx-0x8],0x0
  424a1b:	jne    0x4249ac
  424a1d:	nop    DWORD PTR [rax]
  424a20:	mov    rbp,QWORD PTR [rsp+0x50]
  424a25:	mov    rdi,r15
  424a28:	mov    r15,r14
  424a2b:	mov    r14,QWORD PTR [rsp+0x48]
  424a30:	add    rbp,0x1
  424a34:	cmp    QWORD PTR [r14+0x8],rbp
  424a38:	jg     0x42491f
  424a3e:	mov    eax,DWORD PTR [rsp+0xb8]
  424a45:	shr    eax,1
  424a47:	and    eax,0x1
  424a4a:	jmp    0x42494c
  424a4f:	nop
  424a50:	mov    edx,DWORD PTR [rsp+0x38]
  424a54:	test   edx,edx
  424a56:	je     0x424911
  424a5c:	cmp    QWORD PTR [rax],rdi
  424a5f:	jne    0x424911
  424a65:	xor    eax,eax
  424a67:	jmp    0x42494c
  424a6c:	mov    eax,DWORD PTR [rsp+0xb8]
  424a73:	and    eax,0x1
  424a76:	neg    eax
  424a78:	jmp    0x42494c
  424a7d:	nop    DWORD PTR [rax]
  424a80:	mov    rax,QWORD PTR [rsp+0x28]
  424a85:	mov    r11,QWORD PTR [rsp+0x30]
  424a8a:	lea    r10,[rdx+rdx*4]
  424a8e:	mov    rdx,QWORD PTR [rcx+0xd8]
  424a95:	lea    rdx,[rdx+r10*8]
  424a99:	mov    r10,QWORD PTR [rdx+0x10]
  424a9d:	cmp    r10,rax
  424aa0:	jg     0x424af0
  424aa2:	mov    rdx,QWORD PTR [rdx+0x18]
  424aa6:	cmp    rax,rdx
  424aa9:	jg     0x424ae0
  424aab:	cmp    r10,rax
  424aae:	sete   r10b
  424ab2:	cmp    rax,rdx
  424ab5:	sete   dl
  424ab8:	movzx  r10d,r10b
  424abc:	xor    eax,eax
  424abe:	movzx  edx,dl
  424ac1:	add    edx,edx
  424ac3:	or     edx,r10d
  424ac6:	jne    0x424ad0
  424ac8:	repz ret 
  424aca:	nop    WORD PTR [rax+rax*1+0x0]
  424ad0:	mov    QWORD PTR [rsp+0x28],r11
  424ad5:	jmp    0x424870
  424ada:	nop    WORD PTR [rax+rax*1+0x0]
  424ae0:	mov    eax,0x1
  424ae5:	ret    
  424ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424af0:	mov    eax,0xffffffff
  424af5:	ret    
  424af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b00:	push   rdi
  424b01:	push   rsi
  424b02:	push   rbx
  424b03:	sub    rsp,0x20
  424b07:	mov    rbx,rcx
  424b0a:	mov    rdi,rdx
  424b0d:	mov    rsi,r8
  424b10:	jmp    0x424b15
  424b12:	mov    rbx,rax
  424b15:	mov    rax,QWORD PTR [rbx+0x8]
  424b19:	test   rax,rax
  424b1c:	jne    0x424b12
  424b1e:	mov    rax,QWORD PTR [rbx+0x10]
  424b22:	test   rax,rax
  424b25:	jne    0x424b12
  424b27:	mov    rdx,rbx
  424b2a:	mov    rcx,rsi
  424b2d:	call   rdi
  424b2f:	test   eax,eax
  424b31:	jne    0x424b58
  424b33:	mov    r9,QWORD PTR [rbx]
  424b36:	test   r9,r9
  424b39:	je     0x424b60
  424b3b:	mov    rax,QWORD PTR [r9+0x10]
  424b3f:	cmp    rbx,rax
  424b42:	je     0x424b49
  424b44:	test   rax,rax
  424b47:	jne    0x424b12
  424b49:	mov    rbx,r9
  424b4c:	mov    rcx,rsi
  424b4f:	mov    rdx,rbx
  424b52:	call   rdi
  424b54:	test   eax,eax
  424b56:	je     0x424b33
  424b58:	add    rsp,0x20
  424b5c:	pop    rbx
  424b5d:	pop    rsi
  424b5e:	pop    rdi
  424b5f:	ret    
  424b60:	xor    eax,eax
  424b62:	add    rsp,0x20
  424b66:	pop    rbx
  424b67:	pop    rsi
  424b68:	pop    rdi
  424b69:	ret    
  424b6a:	nop    WORD PTR [rax+rax*1+0x0]
  424b70:	push   rdi
  424b71:	push   rsi
  424b72:	push   rbx
  424b73:	sub    rsp,0x20
  424b77:	mov    rbx,rcx
  424b7a:	mov    rdi,rdx
  424b7d:	mov    rsi,r8
  424b80:	jmp    0x424b85
  424b82:	mov    rbx,rax
  424b85:	mov    rdx,rbx
  424b88:	mov    rcx,rsi
  424b8b:	call   rdi
  424b8d:	test   eax,eax
  424b8f:	jne    0x424bbe
  424b91:	mov    rax,QWORD PTR [rbx+0x8]
  424b95:	test   rax,rax
  424b98:	jne    0x424b82
  424b9a:	xor    r9d,r9d
  424b9d:	jmp    0x424ba3
  424b9f:	nop
  424ba0:	mov    rbx,rax
  424ba3:	mov    rax,QWORD PTR [rbx+0x10]
  424ba7:	cmp    r9,rax
  424baa:	je     0x424bb1
  424bac:	test   rax,rax
  424baf:	jne    0x424b82
  424bb1:	mov    rax,QWORD PTR [rbx]
  424bb4:	mov    r9,rbx
  424bb7:	test   rax,rax
  424bba:	jne    0x424ba0
  424bbc:	xor    eax,eax
  424bbe:	add    rsp,0x20
  424bc2:	pop    rbx
  424bc3:	pop    rsi
  424bc4:	pop    rdi
  424bc5:	ret    
  424bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424bd0:	push   rsi
  424bd1:	push   rbx
  424bd2:	sub    rsp,0x28
  424bd6:	cmp    DWORD PTR [rcx+0x90],0x1
  424bdd:	mov    rbx,rcx
  424be0:	mov    rsi,rdx
  424be3:	jle    0x424c29
  424be5:	movabs rax,0x1fffffffffffffff
  424bef:	cmp    rdx,rax
  424bf2:	ja     0x424c60
  424bf4:	mov    rcx,QWORD PTR [rcx+0x10]
  424bf8:	lea    rdx,[rdx+rdx*1]
  424bfc:	call   0x43a680
  424c01:	test   rax,rax
  424c04:	je     0x424c60
  424c06:	mov    rcx,QWORD PTR [rbx+0x18]
  424c0a:	mov    QWORD PTR [rbx+0x10],rax
  424c0e:	test   rcx,rcx
  424c11:	je     0x424c29
  424c13:	lea    rdx,[rsi*8+0x0]
  424c1b:	call   0x43a680
  424c20:	test   rax,rax
  424c23:	je     0x424c60
  424c25:	mov    QWORD PTR [rbx+0x18],rax
  424c29:	cmp    BYTE PTR [rbx+0x8b],0x0
  424c30:	jne    0x424c40
  424c32:	xor    eax,eax
  424c34:	mov    QWORD PTR [rbx+0x40],rsi
  424c38:	add    rsp,0x28
  424c3c:	pop    rbx
  424c3d:	pop    rsi
  424c3e:	ret    
  424c3f:	nop
  424c40:	mov    rcx,QWORD PTR [rbx+0x8]
  424c44:	mov    rdx,rsi
  424c47:	call   0x43a680
  424c4c:	test   rax,rax
  424c4f:	je     0x424c60
  424c51:	mov    QWORD PTR [rbx+0x8],rax
  424c55:	jmp    0x424c32
  424c57:	nop    WORD PTR [rax+rax*1+0x0]
  424c60:	mov    eax,0xc
  424c65:	add    rsp,0x28
  424c69:	pop    rbx
  424c6a:	pop    rsi
  424c6b:	ret    
  424c6c:	nop    DWORD PTR [rax+0x0]
  424c70:	push   rsi
  424c71:	push   rbx
  424c72:	sub    rsp,0x28
  424c76:	mov    rbx,rcx
  424c79:	mov    rcx,QWORD PTR [rcx+0x8]
  424c7d:	mov    rsi,rdx
  424c80:	cmp    QWORD PTR [rbx],rcx
  424c83:	je     0x424ca1
  424c85:	mov    rax,QWORD PTR [rbx+0x10]
  424c89:	lea    rdx,[rcx+0x1]
  424c8d:	mov    QWORD PTR [rbx+0x8],rdx
  424c91:	mov    QWORD PTR [rax+rcx*8],rsi
  424c95:	mov    eax,0x1
  424c9a:	add    rsp,0x28
  424c9e:	pop    rbx
  424c9f:	pop    rsi
  424ca0:	ret    
  424ca1:	add    rcx,0x1
  424ca5:	lea    rax,[rcx+rcx*1]
  424ca9:	mov    rdx,rcx
  424cac:	mov    rcx,QWORD PTR [rbx+0x10]
  424cb0:	shl    rdx,0x4
  424cb4:	mov    QWORD PTR [rbx],rax
  424cb7:	call   0x43a680
  424cbc:	test   rax,rax
  424cbf:	je     0x424cd0
  424cc1:	mov    QWORD PTR [rbx+0x10],rax
  424cc5:	mov    rcx,QWORD PTR [rbx+0x8]
  424cc9:	jmp    0x424c89
  424ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  424cd0:	xor    eax,eax
  424cd2:	jmp    0x424c9a
  424cd4:	xchg   ax,ax
  424cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ce0:	push   rsi
  424ce1:	push   rbx
  424ce2:	sub    rsp,0x28
  424ce6:	mov    rax,QWORD PTR [rcx]
  424ce9:	mov    rbx,rcx
  424cec:	mov    rsi,rdx
  424cef:	test   rax,rax
  424cf2:	je     0x424d14
  424cf4:	mov    rcx,QWORD PTR [rcx+0x8]
  424cf8:	test   ecx,ecx
  424cfa:	jne    0x424d45
  424cfc:	mov    rax,QWORD PTR [rbx+0x10]
  424d00:	mov    QWORD PTR [rax],rdx
  424d03:	add    QWORD PTR [rbx+0x8],0x1
  424d08:	mov    eax,0x1
  424d0d:	add    rsp,0x28
  424d11:	pop    rbx
  424d12:	pop    rsi
  424d13:	ret    
  424d14:	mov    QWORD PTR [rcx],0x1
  424d1b:	mov    QWORD PTR [rcx+0x8],0x1
  424d23:	mov    ecx,0x8
  424d28:	call   0x423ec0
  424d2d:	test   rax,rax
  424d30:	mov    QWORD PTR [rbx+0x10],rax
  424d34:	je     0x424db4
  424d36:	mov    QWORD PTR [rax],rsi
  424d39:	mov    eax,0x1
  424d3e:	add    rsp,0x28
  424d42:	pop    rbx
  424d43:	pop    rsi
  424d44:	ret    
  424d45:	cmp    rax,rcx
  424d48:	je     0x424dc8
  424d4a:	mov    rax,QWORD PTR [rbx+0x10]
  424d4e:	cmp    rsi,QWORD PTR [rax]
  424d51:	jge    0x424d90
  424d53:	test   rcx,rcx
  424d56:	jle    0x424df1
  424d5c:	lea    rdx,[rax+rcx*8-0x8]
  424d61:	lea    r8,[rax-0x8]
  424d65:	mov    rcx,QWORD PTR [rdx]
  424d68:	sub    rdx,0x8
  424d6c:	mov    QWORD PTR [rdx+0x10],rcx
  424d70:	cmp    rdx,r8
  424d73:	jne    0x424d65
  424d75:	xor    ecx,ecx
  424d77:	mov    QWORD PTR [rax+rcx*1],rsi
  424d7b:	mov    eax,0x1
  424d80:	add    QWORD PTR [rbx+0x8],0x1
  424d85:	jmp    0x424d0d
  424d87:	nop    WORD PTR [rax+rax*1+0x0]
  424d90:	shl    rcx,0x3
  424d94:	mov    rdx,QWORD PTR [rax+rcx*1-0x8]
  424d99:	cmp    rsi,rdx
  424d9c:	jge    0x424d77
  424d9e:	xchg   ax,ax
  424da0:	mov    QWORD PTR [rax+rcx*1],rdx
  424da4:	sub    rcx,0x8
  424da8:	mov    rdx,QWORD PTR [rax+rcx*1-0x8]
  424dad:	cmp    rsi,rdx
  424db0:	jl     0x424da0
  424db2:	jmp    0x424d77
  424db4:	mov    QWORD PTR [rbx+0x8],0x0
  424dbc:	mov    QWORD PTR [rbx],0x0
  424dc3:	jmp    0x424d0d
  424dc8:	lea    rax,[rcx+rcx*1]
  424dcc:	mov    rdx,rcx
  424dcf:	mov    rcx,QWORD PTR [rbx+0x10]
  424dd3:	shl    rdx,0x4
  424dd7:	mov    QWORD PTR [rbx],rax
  424dda:	call   0x43a680
  424ddf:	test   rax,rax
  424de2:	je     0x424df7
  424de4:	mov    QWORD PTR [rbx+0x10],rax
  424de8:	mov    rcx,QWORD PTR [rbx+0x8]
  424dec:	jmp    0x424d4e
  424df1:	shl    rcx,0x3
  424df5:	jmp    0x424d77
  424df7:	xor    eax,eax
  424df9:	jmp    0x424d0d
  424dfe:	xchg   ax,ax
  424e00:	push   r12
  424e02:	push   rbp
  424e03:	push   rdi
  424e04:	push   rsi
  424e05:	push   rbx
  424e06:	sub    rsp,0x20
  424e0a:	mov    r12,rcx
  424e0d:	mov    rcx,QWORD PTR [rdx+0x10]
  424e11:	mov    rsi,rdx
  424e14:	mov    QWORD PTR [rsi],r8
  424e17:	mov    QWORD PTR [rdx+0x28],0x0
  424e1f:	mov    rbp,r8
  424e22:	mov    QWORD PTR [rdx+0x20],rcx
  424e26:	shl    rcx,0x3
  424e2a:	call   0x423ec0
  424e2f:	test   rax,rax
  424e32:	mov    QWORD PTR [rsi+0x30],rax
  424e36:	je     0x424e7f
  424e38:	xor    ebx,ebx
  424e3a:	cmp    QWORD PTR [rsi+0x10],0x0
  424e3f:	lea    rdi,[rsi+0x20]
  424e43:	jg     0x424e5a
  424e45:	jmp    0x424e90
  424e47:	nop    WORD PTR [rax+rax*1+0x0]
  424e50:	add    rbx,0x1
  424e54:	cmp    QWORD PTR [rsi+0x10],rbx
  424e58:	jle    0x424e90
  424e5a:	mov    rax,QWORD PTR [rsi+0x18]
  424e5e:	mov    rdx,QWORD PTR [rax+rbx*8]
  424e62:	mov    rax,rdx
  424e65:	shl    rax,0x4
  424e69:	add    rax,QWORD PTR [r12]
  424e6d:	test   BYTE PTR [rax+0x8],0x8
  424e71:	jne    0x424e50
  424e73:	mov    rcx,rdi
  424e76:	call   0x424c70
  424e7b:	test   al,al
  424e7d:	jne    0x424e50
  424e7f:	mov    eax,0xc
  424e84:	add    rsp,0x20
  424e88:	pop    rbx
  424e89:	pop    rsi
  424e8a:	pop    rdi
  424e8b:	pop    rbp
  424e8c:	pop    r12
  424e8e:	ret    
  424e8f:	nop
  424e90:	and    rbp,QWORD PTR [r12+0x88]
  424e98:	mov    rax,QWORD PTR [r12+0x40]
  424e9d:	lea    rdx,[rbp+rbp*2+0x0]
  424ea2:	lea    rbx,[rax+rdx*8]
  424ea6:	mov    rdx,QWORD PTR [rbx]
  424ea9:	cmp    QWORD PTR [rbx+0x8],rdx
  424ead:	jle    0x424ecb
  424eaf:	mov    rax,QWORD PTR [rbx+0x10]
  424eb3:	lea    rcx,[rdx+0x1]
  424eb7:	mov    QWORD PTR [rbx],rcx
  424eba:	mov    QWORD PTR [rax+rdx*8],rsi
  424ebe:	xor    eax,eax
  424ec0:	add    rsp,0x20
  424ec4:	pop    rbx
  424ec5:	pop    rsi
  424ec6:	pop    rdi
  424ec7:	pop    rbp
  424ec8:	pop    r12
  424eca:	ret    
  424ecb:	mov    rcx,QWORD PTR [rbx+0x10]
  424ecf:	add    rdx,0x1
  424ed3:	lea    rdi,[rdx+rdx*1]
  424ed7:	shl    rdx,0x4
  424edb:	call   0x43a680
  424ee0:	test   rax,rax
  424ee3:	je     0x424e7f
  424ee5:	mov    QWORD PTR [rbx+0x10],rax
  424ee9:	mov    QWORD PTR [rbx+0x8],rdi
  424eed:	mov    rdx,QWORD PTR [rbx]
  424ef0:	jmp    0x424eb3
  424ef2:	nop    DWORD PTR [rax+0x0]
  424ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f00:	push   rbp
  424f01:	push   rdi
  424f02:	push   rsi
  424f03:	push   rbx
  424f04:	sub    rsp,0x28
  424f08:	mov    rdi,QWORD PTR [rcx+0x40]
  424f0c:	cmp    QWORD PTR [rcx+0x58],rdi
  424f10:	cmovle rdi,QWORD PTR [rcx+0x58]
  424f15:	mov    rbx,QWORD PTR [rcx+0x30]
  424f19:	mov    rsi,rcx
  424f1c:	cmp    rdi,rbx
  424f1f:	jle    0x424f60
  424f21:	mov    rbp,QWORD PTR [rip+0x2fc70]        # 0x454b98
  424f28:	jmp    0x424f42
  424f2a:	nop    WORD PTR [rax+rax*1+0x0]
  424f30:	call   rbp
  424f32:	mov    rdx,QWORD PTR [rsi+0x8]
  424f36:	mov    BYTE PTR [rdx+rbx*1],al
  424f39:	add    rbx,0x1
  424f3d:	cmp    rbx,rdi
  424f40:	je     0x424f60
  424f42:	mov    rax,QWORD PTR [rsi+0x28]
  424f46:	mov    rdx,QWORD PTR [rsi+0x78]
  424f4a:	add    rax,QWORD PTR [rsi]
  424f4d:	test   rdx,rdx
  424f50:	movzx  ecx,BYTE PTR [rax+rbx*1]
  424f54:	je     0x424f30
  424f56:	movzx  ecx,BYTE PTR [rdx+rcx*1]
  424f5a:	jmp    0x424f30
  424f5c:	nop    DWORD PTR [rax+0x0]
  424f60:	mov    QWORD PTR [rsi+0x30],rbx
  424f64:	mov    QWORD PTR [rsi+0x38],rbx
  424f68:	add    rsp,0x28
  424f6c:	pop    rbx
  424f6d:	pop    rsi
  424f6e:	pop    rdi
  424f6f:	pop    rbp
  424f70:	ret    
  424f71:	nop    DWORD PTR [rax+rax*1+0x0]
  424f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f80:	push   r13
  424f82:	push   r12
  424f84:	push   rbp
  424f85:	push   rdi
  424f86:	push   rsi
  424f87:	push   rbx
  424f88:	sub    rsp,0x78
  424f8c:	mov    rsi,QWORD PTR [rcx+0x40]
  424f90:	cmp    QWORD PTR [rcx+0x58],rsi
  424f94:	cmovle rsi,QWORD PTR [rcx+0x58]
  424f99:	mov    r12,QWORD PTR [rcx+0x30]
  424f9d:	mov    rbx,rcx
  424fa0:	cmp    rsi,r12
  424fa3:	jle    0x42503a
  424fa9:	lea    rbp,[rcx+0x20]
  424fad:	lea    rdi,[rsp+0x2e]
  424fb2:	mov    r9,QWORD PTR [rbx+0x78]
  424fb6:	mov    r8,rsi
  424fb9:	mov    r13d,DWORD PTR [rbx+0x20]
  424fbd:	sub    r8,r12
  424fc0:	test   r9,r9
  424fc3:	jne    0x425080
  424fc9:	mov    rdx,r12
  424fcc:	add    rdx,QWORD PTR [rbx+0x28]
  424fd0:	add    rdx,QWORD PTR [rbx]
  424fd3:	mov    r9,rbp
  424fd6:	mov    rcx,rdi
  424fd9:	call   0x423f00
  424fde:	lea    rdx,[rax-0x1]
  424fe2:	cmp    rdx,0xfffffffffffffffd
  424fe6:	ja     0x425050
  424fe8:	cmp    rax,0xfffffffffffffffe
  424fec:	movzx  ecx,WORD PTR [rsp+0x2e]
  424ff1:	je     0x4250e4
  424ff7:	lea    rdx,[r12+0x1]
  424ffc:	mov    r8,QWORD PTR [rbx+0x10]
  425000:	add    rax,r12
  425003:	cmp    rdx,rax
  425006:	mov    WORD PTR [r8+r12*2],cx
  42500b:	mov    rcx,rdx
  42500e:	jge    0x4250fb
  425014:	add    rdx,0x1
  425018:	mov    r9d,0xffffffff
  42501e:	cmp    rax,rdx
  425021:	mov    WORD PTR [r8+rdx*2-0x2],r9w
  425027:	jne    0x425014
  425029:	sub    rcx,r12
  42502c:	lea    r12,[rax+rcx*1-0x1]
  425031:	cmp    rsi,r12
  425034:	jg     0x424fb2
  42503a:	mov    QWORD PTR [rbx+0x30],r12
  42503e:	mov    QWORD PTR [rbx+0x38],r12
  425042:	add    rsp,0x78
  425046:	pop    rbx
  425047:	pop    rsi
  425048:	pop    rdi
  425049:	pop    rbp
  42504a:	pop    r12
  42504c:	pop    r13
  42504e:	ret    
  42504f:	nop
  425050:	mov    rax,QWORD PTR [rbx+0x28]
  425054:	add    rax,QWORD PTR [rbx]
  425057:	mov    rdx,QWORD PTR [rbx+0x78]
  42505b:	movzx  ecx,BYTE PTR [rax+r12*1]
  425060:	test   rdx,rdx
  425063:	mov    WORD PTR [rsp+0x2e],cx
  425068:	jne    0x425103
  42506e:	mov    DWORD PTR [rbx+0x20],r13d
  425072:	mov    eax,0x1
  425077:	jmp    0x424ff7
  42507c:	nop    DWORD PTR [rax+0x0]
  425080:	mov    r10d,DWORD PTR [rbx+0x90]
  425087:	test   r10d,r10d
  42508a:	jle    0x425111
  425090:	xor    eax,eax
  425092:	test   r8,r8
  425095:	lea    rdx,[rsp+0x30]
  42509a:	jg     0x4250b1
  42509c:	jmp    0x425111
  42509e:	xchg   ax,ax
  4250a0:	add    rax,0x1
  4250a4:	cmp    rax,r8
  4250a7:	je     0x424fd3
  4250ad:	mov    r9,QWORD PTR [rbx+0x78]
  4250b1:	mov    rcx,rax
  4250b4:	add    rcx,QWORD PTR [rbx]
  4250b7:	add    rcx,r12
  4250ba:	add    rcx,QWORD PTR [rbx+0x28]
  4250be:	movzx  ecx,BYTE PTR [rcx]
  4250c1:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4250c6:	mov    r9,rax
  4250c9:	add    r9,QWORD PTR [rbx+0x8]
  4250cd:	mov    BYTE PTR [r9+r12*1],cl
  4250d1:	mov    BYTE PTR [rdx+rax*1],cl
  4250d4:	lea    ecx,[rax+0x1]
  4250d7:	cmp    DWORD PTR [rbx+0x90],ecx
  4250dd:	jg     0x4250a0
  4250df:	jmp    0x424fd3
  4250e4:	mov    rax,QWORD PTR [rbx+0x58]
  4250e8:	cmp    QWORD PTR [rbx+0x40],rax
  4250ec:	jge    0x425050
  4250f2:	mov    DWORD PTR [rbx+0x20],r13d
  4250f6:	jmp    0x42503a
  4250fb:	mov    r12,rdx
  4250fe:	jmp    0x425031
  425103:	movzx  ecx,BYTE PTR [rdx+rcx*1]
  425107:	mov    WORD PTR [rsp+0x2e],cx
  42510c:	jmp    0x42506e
  425111:	lea    rdx,[rsp+0x30]
  425116:	jmp    0x424fd3
  42511b:	nop    DWORD PTR [rax+rax*1+0x0]
  425120:	push   r15
  425122:	push   r14
  425124:	push   r13
  425126:	push   r12
  425128:	push   rbp
  425129:	push   rdi
  42512a:	push   rsi
  42512b:	push   rbx
  42512c:	sub    rsp,0xa8
  425133:	mov    rbx,QWORD PTR [rcx+0x40]
  425137:	cmp    QWORD PTR [rcx+0x58],rbx
  42513b:	cmovle rbx,QWORD PTR [rcx+0x58]
  425140:	cmp    BYTE PTR [rcx+0x8a],0x0
  425147:	mov    r15,rcx
  42514a:	mov    r14,QWORD PTR [rcx+0x30]
  42514e:	jne    0x42515b
  425150:	cmp    QWORD PTR [rcx+0x78],0x0
  425155:	je     0x425290
  42515b:	mov    rdi,QWORD PTR [r15+0x38]
  42515f:	cmp    r14,rbx
  425162:	jge    0x425270
  425168:	mov    rax,rbx
  42516b:	lea    rcx,[rsp+0x5a]
  425170:	lea    r13,[r15+0x20]
  425174:	sub    rax,r14
  425177:	mov    rsi,rax
  42517a:	mov    QWORD PTR [rsp+0x20],rcx
  42517f:	mov    rcx,QWORD PTR [r15+0x78]
  425183:	mov    edx,DWORD PTR [r15+0x20]
  425187:	test   rcx,rcx
  42518a:	mov    DWORD PTR [rsp+0x5c],edx
  42518e:	jne    0x4253d4
  425194:	mov    rbp,rdi
  425197:	add    rbp,QWORD PTR [r15+0x28]
  42519b:	add    rbp,QWORD PTR [r15]
  42519e:	mov    rcx,QWORD PTR [rsp+0x20]
  4251a3:	mov    r8,rsi
  4251a6:	mov    r9,r13
  4251a9:	mov    rdx,rbp
  4251ac:	call   0x423f00
  4251b1:	cmp    rax,0xfffffffffffffffd
  4251b5:	mov    rsi,rax
  4251b8:	ja     0x4254f6
  4251be:	movzx  ecx,WORD PTR [rsp+0x5a]
  4251c3:	mov    r12d,ecx
  4251c6:	call   0x43a5d0
  4251cb:	cmp    r12w,ax
  4251cf:	mov    r13d,eax
  4251d2:	je     0x4254df
  4251d8:	lea    r12,[rsp+0x60]
  4251dd:	lea    r8,[rsp+0x5c]
  4251e2:	movzx  edx,ax
  4251e5:	mov    rcx,r12
  4251e8:	call   0x435b50
  4251ed:	cmp    rsi,rax
  4251f0:	mov    r10,rax
  4251f3:	jne    0x425562
  4251f9:	mov    rcx,r14
  4251fc:	add    rcx,QWORD PTR [r15+0x8]
  425200:	mov    r8,rsi
  425203:	mov    rdx,r12
  425206:	call   0x43a6b8
  42520b:	cmp    BYTE PTR [r15+0x8c],0x0
  425213:	jne    0x42564f
  425219:	lea    rax,[rdi+rsi*1]
  42521d:	mov    rdi,rax
  425220:	mov    rdx,QWORD PTR [r15+0x10]
  425224:	lea    rax,[r14+0x1]
  425228:	add    rsi,r14
  42522b:	cmp    rax,rsi
  42522e:	mov    rcx,rax
  425231:	mov    WORD PTR [rdx+r14*2],r13w
  425236:	jge    0x425647
  42523c:	nop    DWORD PTR [rax+0x0]
  425240:	add    rax,0x1
  425244:	mov    r8d,0xffffffff
  42524a:	cmp    rsi,rax
  42524d:	mov    WORD PTR [rdx+rax*2-0x2],r8w
  425253:	jne    0x425240
  425255:	mov    rax,rcx
  425258:	sub    rax,r14
  42525b:	lea    r14,[rsi+rax*1-0x1]
  425260:	jmp    0x42515f
  425265:	mov    eax,DWORD PTR [rsp+0x5c]
  425269:	mov    DWORD PTR [r15+0x20],eax
  42526d:	nop    DWORD PTR [rax]
  425270:	mov    QWORD PTR [r15+0x30],r14
  425274:	mov    QWORD PTR [r15+0x38],rdi
  425278:	xor    eax,eax
  42527a:	add    rsp,0xa8
  425281:	pop    rbx
  425282:	pop    rsi
  425283:	pop    rdi
  425284:	pop    rbp
  425285:	pop    r12
  425287:	pop    r13
  425289:	pop    r14
  42528b:	pop    r15
  42528d:	ret    
  42528e:	xchg   ax,ax
  425290:	cmp    BYTE PTR [rcx+0x8c],0x0
  425297:	jne    0x42515b
  42529d:	cmp    r14,rbx
  4252a0:	jge    0x4253c5
  4252a6:	lea    rax,[rsp+0x5a]
  4252ab:	lea    rbp,[rcx+0x20]
  4252af:	mov    QWORD PTR [rsp+0x40],rax
  4252b4:	lea    rax,[rsp+0x5c]
  4252b9:	mov    QWORD PTR [rsp+0x48],rax
  4252be:	lea    rax,[rsp+0x60]
  4252c3:	mov    QWORD PTR [rsp+0x38],rax
  4252c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4252d0:	mov    rdx,QWORD PTR [r15]
  4252d3:	mov    rax,QWORD PTR [r15+0x28]
  4252d7:	mov    QWORD PTR [rsp+0x30],rbp
  4252dc:	lea    rcx,[rdx+r14*1]
  4252e0:	cmp    BYTE PTR [rcx+rax*1],0x0
  4252e4:	js     0x4252fd
  4252e6:	mov    rcx,rbp
  4252e9:	call   0x424040
  4252ee:	test   eax,eax
  4252f0:	jne    0x425430
  4252f6:	mov    rdx,QWORD PTR [r15]
  4252f9:	mov    rax,QWORD PTR [r15+0x28]
  4252fd:	add    rax,r14
  425300:	mov    ecx,DWORD PTR [r15+0x20]
  425304:	mov    rsi,rbx
  425307:	add    rdx,rax
  42530a:	mov    rax,QWORD PTR [rsp+0x40]
  42530f:	sub    rsi,r14
  425312:	mov    r9,rbp
  425315:	mov    r8,rsi
  425318:	mov    r13,r14
  42531b:	mov    DWORD PTR [rsp+0x5c],ecx
  42531f:	mov    rcx,rax
  425322:	mov    QWORD PTR [rsp+0x20],rax
  425327:	call   0x423f00
  42532c:	cmp    rax,0xfffffffffffffffd
  425330:	mov    rdi,rax
  425333:	ja     0x425483
  425339:	movzx  ecx,WORD PTR [rsp+0x5a]
  42533e:	mov    DWORD PTR [rsp+0x2c],ecx
  425342:	call   0x43a5d0
  425347:	mov    edx,DWORD PTR [rsp+0x2c]
  42534b:	mov    r12d,eax
  42534e:	cmp    dx,ax
  425351:	je     0x425465
  425357:	mov    r8,QWORD PTR [rsp+0x48]
  42535c:	mov    rcx,QWORD PTR [rsp+0x38]
  425361:	movzx  edx,ax
  425364:	call   0x435b50
  425369:	cmp    rdi,rax
  42536c:	jne    0x4254cf
  425372:	mov    rcx,r14
  425375:	add    rcx,QWORD PTR [r15+0x8]
  425379:	mov    rdx,QWORD PTR [rsp+0x38]
  42537e:	mov    r8,rdi
  425381:	call   0x43a6b8
  425386:	add    r14,0x1
  42538a:	mov    rdx,QWORD PTR [r15+0x10]
  42538e:	lea    rax,[rdi+r14*1-0x1]
  425393:	mov    rcx,r14
  425396:	cmp    r14,rax
  425399:	mov    WORD PTR [rdx+r13*2],r12w
  42539e:	jge    0x4253bc
  4253a0:	add    r14,0x1
  4253a4:	mov    esi,0xffffffff
  4253a9:	cmp    rax,r14
  4253ac:	mov    WORD PTR [rdx+r14*2-0x2],si
  4253b2:	jne    0x4253a0
  4253b4:	sub    rcx,r13
  4253b7:	lea    r14,[r14+rcx*1-0x1]
  4253bc:	cmp    rbx,r14
  4253bf:	jg     0x4252d0
  4253c5:	mov    QWORD PTR [r15+0x30],r14
  4253c9:	mov    QWORD PTR [r15+0x38],r14
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42527a
  4253d4:	mov    edx,DWORD PTR [r15+0x90]
  4253db:	test   edx,edx
  4253dd:	jle    0x4256b7
  4253e3:	test   rax,rax
  4253e6:	jle    0x4256b7
  4253ec:	mov    r9,rdi
  4253ef:	add    r9,QWORD PTR [r15+0x28]
  4253f3:	lea    ebp,[rdx-0x1]
  4253f6:	lea    r12,[rsp+0x60]
  4253fb:	xor    edx,edx
  4253fd:	add    r9,QWORD PTR [r15]
  425400:	jmp    0x42540b
  425402:	add    rdx,0x1
  425406:	cmp    rdx,rax
  425409:	je     0x42541e
  42540b:	movzx  r8d,BYTE PTR [r9+rdx*1]
  425410:	cmp    rdx,rbp
  425413:	movzx  r8d,BYTE PTR [rcx+r8*1]
  425418:	mov    BYTE PTR [r12+rdx*1],r8b
  42541c:	jne    0x425402
  42541e:	mov    rbp,r12
  425421:	jmp    0x42519e
  425426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425430:	mov    rax,QWORD PTR [r15+0x28]
  425434:	add    rax,QWORD PTR [r15]
  425437:	movzx  ecx,BYTE PTR [rax+r14*1]
  42543c:	call   QWORD PTR [rip+0x2f756]        # 0x454b98
  425442:	mov    rdx,QWORD PTR [r15+0x8]
  425446:	mov    BYTE PTR [rdx+r14*1],al
  42544a:	mov    rdx,QWORD PTR [r15+0x8]
  42544e:	mov    rax,QWORD PTR [r15+0x10]
  425452:	movzx  edx,BYTE PTR [rdx+r14*1]
  425457:	mov    WORD PTR [rax+r14*2],dx
  42545c:	add    r14,0x1
  425460:	jmp    0x4253bc
  425465:	mov    rdx,r14
  425468:	add    rdx,QWORD PTR [r15+0x28]
  42546c:	mov    rcx,r14
  42546f:	add    rdx,QWORD PTR [r15]
  425472:	add    rcx,QWORD PTR [r15+0x8]
  425476:	mov    r8,rdi
  425479:	call   0x43a6b8
  42547e:	jmp    0x425386
  425483:	cmp    rax,0xffffffffffffffff
  425487:	je     0x425497
  425489:	mov    rax,QWORD PTR [r15+0x58]
  42548d:	cmp    QWORD PTR [r15+0x40],rax
  425491:	jl     0x42567f
  425497:	mov    rax,QWORD PTR [r15+0x28]
  42549b:	add    rax,QWORD PTR [r15]
  42549e:	mov    rdx,QWORD PTR [r15+0x8]
  4254a2:	movzx  eax,BYTE PTR [rax+r14*1]
  4254a7:	mov    BYTE PTR [rdx+r14*1],al
  4254ab:	mov    rdx,QWORD PTR [r15+0x10]
  4254af:	add    r14,0x1
  4254b3:	cmp    rdi,0xffffffffffffffff
  4254b7:	mov    WORD PTR [rdx+r13*2],ax
  4254bc:	jne    0x4253bc
  4254c2:	mov    eax,DWORD PTR [rsp+0x5c]
  4254c6:	mov    DWORD PTR [r15+0x20],eax
  4254ca:	jmp    0x4253bc
  4254cf:	mov    r13,QWORD PTR [rsp+0x30]
  4254d4:	mov    rdi,r14
  4254d7:	mov    rax,rsi
  4254da:	jmp    0x42517f
  4254df:	mov    rcx,r14
  4254e2:	add    rcx,QWORD PTR [r15+0x8]
  4254e6:	mov    r8,rsi
  4254e9:	mov    rdx,rbp
  4254ec:	call   0x43a6b8
  4254f1:	jmp    0x42520b
  4254f6:	cmp    rax,0xffffffffffffffff
  4254fa:	je     0x42550a
  4254fc:	mov    rax,QWORD PTR [r15+0x58]
  425500:	cmp    QWORD PTR [r15+0x40],rax
  425504:	jl     0x425265
  42550a:	mov    rax,QWORD PTR [r15+0x28]
  42550e:	mov    rcx,QWORD PTR [r15+0x78]
  425512:	add    rax,QWORD PTR [r15]
  425515:	test   rcx,rcx
  425518:	movzx  edx,BYTE PTR [rax+rdi*1]
  42551c:	jne    0x4256ce
  425522:	mov    rax,QWORD PTR [r15+0x8]
  425526:	mov    rcx,r14
  425529:	mov    BYTE PTR [rax+r14*1],dl
  42552d:	cmp    BYTE PTR [r15+0x8c],0x0
  425535:	jne    0x4256c1
  42553b:	mov    rax,QWORD PTR [r15+0x10]
  42553f:	add    rdi,0x1
  425543:	add    r14,0x1
  425547:	cmp    rsi,0xffffffffffffffff
  42554b:	mov    WORD PTR [rax+rcx*2],dx
  42554f:	jne    0x42515f
  425555:	mov    eax,DWORD PTR [rsp+0x5c]
  425559:	mov    DWORD PTR [r15+0x20],eax
  42555d:	jmp    0x42515f
  425562:	cmp    rax,0xffffffffffffffff
  425566:	je     0x4254df
  42556c:	lea    rbp,[rax+r14*1]
  425570:	mov    rax,QWORD PTR [r15+0x40]
  425574:	cmp    rbp,rax
  425577:	ja     0x425265
  42557d:	cmp    QWORD PTR [r15+0x18],0x0
  425582:	je     0x42568c
  425588:	cmp    BYTE PTR [r15+0x8c],0x0
  425590:	jne    0x4255b2
  425592:	test   r14,r14
  425595:	je     0x4255aa
  425597:	mov    rdx,QWORD PTR [r15+0x18]
  42559b:	xor    eax,eax
  42559d:	mov    QWORD PTR [rdx+rax*8],rax
  4255a1:	add    rax,0x1
  4255a5:	cmp    r14,rax
  4255a8:	jne    0x42559d
  4255aa:	mov    BYTE PTR [r15+0x8c],0x1
  4255b2:	mov    rcx,r14
  4255b5:	add    rcx,QWORD PTR [r15+0x8]
  4255b9:	mov    r8,r10
  4255bc:	mov    rdx,r12
  4255bf:	mov    QWORD PTR [rsp+0x20],r10
  4255c4:	call   0x43a6b8
  4255c9:	mov    rax,QWORD PTR [r15+0x10]
  4255cd:	mov    r10,QWORD PTR [rsp+0x20]
  4255d2:	lea    r9,[rsi-0x1]
  4255d6:	lea    r8,[rax+r14*2]
  4255da:	mov    rax,QWORD PTR [r15+0x18]
  4255de:	cmp    r10,0x1
  4255e2:	mov    WORD PTR [r8],r13w
  4255e6:	lea    rcx,[rax+r14*8]
  4255ea:	mov    eax,0x1
  4255ef:	mov    QWORD PTR [rcx],rdi
  4255f2:	jbe    0x425619
  4255f4:	cmp    rsi,rax
  4255f7:	mov    rdx,rax
  4255fa:	mov    r11d,0xffffffff
  425600:	cmovbe rdx,r9
  425604:	add    rdx,rdi
  425607:	mov    QWORD PTR [rcx+rax*8],rdx
  42560b:	mov    WORD PTR [r8+rax*2],r11w
  425610:	add    rax,0x1
  425614:	cmp    rax,r10
  425617:	jne    0x4255f4
  425619:	sub    r10,rsi
  42561c:	mov    rax,r10
  42561f:	add    rax,QWORD PTR [r15+0x58]
  425623:	cmp    rdi,QWORD PTR [r15+0x60]
  425627:	mov    QWORD PTR [r15+0x58],rax
  42562b:	jge    0x425631
  42562d:	add    QWORD PTR [r15+0x68],r10
  425631:	mov    rbx,QWORD PTR [r15+0x40]
  425635:	mov    r14,rbp
  425638:	cmp    rax,rbx
  42563b:	cmovle rbx,rax
  42563f:	add    rdi,rsi
  425642:	jmp    0x42515f
  425647:	mov    r14,rax
  42564a:	jmp    0x42515f
  42564f:	test   rsi,rsi
  425652:	mov    rax,rdi
  425655:	je     0x42521d
  42565b:	mov    rdx,QWORD PTR [r15+0x18]
  42565f:	mov    rcx,r14
  425662:	lea    rax,[rsi+rdi*1]
  425666:	sub    rcx,rdi
  425669:	lea    rdx,[rdx+rcx*8]
  42566d:	mov    QWORD PTR [rdx+rdi*8],rdi
  425671:	add    rdi,0x1
  425675:	cmp    rdi,rax
  425678:	jne    0x42566d
  42567a:	jmp    0x42521d
  42567f:	mov    eax,DWORD PTR [rsp+0x5c]
  425683:	mov    DWORD PTR [r15+0x20],eax
  425687:	jmp    0x4253c5
  42568c:	lea    rcx,[rax*8+0x0]
  425694:	mov    QWORD PTR [rsp+0x20],r10
  425699:	call   0x423ec0
  42569e:	test   rax,rax
  4256a1:	mov    QWORD PTR [r15+0x18],rax
  4256a5:	mov    r10,QWORD PTR [rsp+0x20]
  4256aa:	jne    0x425588
  4256b0:	mov    al,0xc
  4256b2:	jmp    0x42527a
  4256b7:	lea    r12,[rsp+0x60]
  4256bc:	jmp    0x42541e
  4256c1:	mov    rax,QWORD PTR [r15+0x18]
  4256c5:	mov    QWORD PTR [rax+r14*8],rdi
  4256c9:	jmp    0x42553b
  4256ce:	movzx  edx,BYTE PTR [rcx+rdx*1]
  4256d2:	jmp    0x425522
  4256d7:	nop    WORD PTR [rax+rax*1+0x0]
  4256e0:	push   rbx
  4256e1:	sub    rsp,0x30
  4256e5:	mov    rax,QWORD PTR [rcx+0x40]
  4256e9:	movabs r8,0xffffffffffffffe
  4256f3:	cmp    rax,r8
  4256f6:	ja     0x4257b0
  4256fc:	mov    rbx,rcx
  4256ff:	mov    rcx,QWORD PTR [rcx+0x58]
  425703:	add    rax,rax
  425706:	movsxd rdx,edx
  425709:	cmp    rax,rcx
  42570c:	cmovg  rax,rcx
  425710:	mov    rcx,rbx
  425713:	cmp    rdx,rax
  425716:	cmovl  rdx,rax
  42571a:	call   0x424bd0
  42571f:	test   eax,eax
  425721:	jne    0x425777
  425723:	mov    rcx,QWORD PTR [rbx+0xb8]
  42572a:	test   rcx,rcx
  42572d:	je     0x42574c
  42572f:	mov    rax,QWORD PTR [rbx+0x40]
  425733:	lea    rdx,[rax*8+0x8]
  42573b:	call   0x43a680
  425740:	test   rax,rax
  425743:	je     0x4257b0
  425745:	mov    QWORD PTR [rbx+0xb8],rax
  42574c:	cmp    BYTE PTR [rbx+0x88],0x0
  425753:	je     0x425780
  425755:	cmp    DWORD PTR [rbx+0x90],0x1
  42575c:	mov    rcx,rbx
  42575f:	jle    0x425770
  425761:	add    rsp,0x30
  425765:	pop    rbx
  425766:	jmp    0x425120
  42576b:	nop    DWORD PTR [rax+rax*1+0x0]
  425770:	call   0x424f00
  425775:	xor    eax,eax
  425777:	add    rsp,0x30
  42577b:	pop    rbx
  42577c:	ret    
  42577d:	nop    DWORD PTR [rax]
  425780:	cmp    DWORD PTR [rbx+0x90],0x1
  425787:	jg     0x4257c0
  425789:	xor    eax,eax
  42578b:	cmp    QWORD PTR [rbx+0x78],0x0
  425790:	je     0x425777
  425792:	mov    rcx,rbx
  425795:	mov    DWORD PTR [rsp+0x2c],eax
  425799:	call   0x4246e0
  42579e:	mov    eax,DWORD PTR [rsp+0x2c]
  4257a2:	add    rsp,0x30
  4257a6:	pop    rbx
  4257a7:	ret    
  4257a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4257b0:	mov    eax,0xc
  4257b5:	add    rsp,0x30
  4257b9:	pop    rbx
  4257ba:	ret    
  4257bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4257c0:	mov    rcx,rbx
  4257c3:	call   0x424f80
  4257c8:	xor    eax,eax
  4257ca:	add    rsp,0x30
  4257ce:	pop    rbx
  4257cf:	ret    
  4257d0:	push   rdi
  4257d1:	push   rsi
  4257d2:	push   rbx
  4257d3:	sub    rsp,0x20
  4257d7:	mov    rax,QWORD PTR [rcx+0x40]
  4257db:	mov    rdi,QWORD PTR [rcx+0xc0]
  4257e2:	mov    rbx,rcx
  4257e5:	mov    rsi,rdx
  4257e8:	cmp    rax,rdx
  4257eb:	jg     0x425811
  4257ed:	cmp    rax,QWORD PTR [rcx+0x58]
  4257f1:	jge    0x425811
  4257f3:	lea    edx,[rsi+0x1]
  4257f6:	mov    rcx,rbx
  4257f9:	call   0x4256e0
  4257fe:	test   eax,eax
  425800:	jne    0x425809
  425802:	cmp    rdi,rsi
  425805:	jl     0x425831
  425807:	xor    eax,eax
  425809:	add    rsp,0x20
  42580d:	pop    rbx
  42580e:	pop    rsi
  42580f:	pop    rdi
  425810:	ret    
  425811:	mov    rax,QWORD PTR [rbx+0x30]
  425815:	cmp    rsi,rax
  425818:	jl     0x425802
  42581a:	cmp    rax,QWORD PTR [rbx+0x58]
  42581e:	jge    0x425802
  425820:	lea    edx,[rsi+0x1]
  425823:	mov    rcx,rbx
  425826:	call   0x4256e0
  42582b:	test   eax,eax
  42582d:	je     0x425802
  42582f:	jmp    0x425809
  425831:	mov    rax,QWORD PTR [rbx+0xb8]
  425838:	mov    r8,rsi
  42583b:	xor    edx,edx
  42583d:	sub    r8,rdi
  425840:	shl    r8,0x3
  425844:	lea    rcx,[rax+rdi*8+0x8]
  425849:	call   0x43a6a8
  42584e:	mov    QWORD PTR [rbx+0xc0],rsi
  425855:	jmp    0x425807
  425857:	nop    WORD PTR [rax+rax*1+0x0]
  425860:	push   rbx
  425861:	sub    rsp,0x20
  425865:	mov    rbx,rcx
  425868:	mov    rcx,QWORD PTR [rcx]
  42586b:	call   0x43a748
  425870:	mov    rcx,QWORD PTR [rbx+0x18]
  425874:	call   0x43a748
  425879:	mov    rcx,rbx
  42587c:	add    rsp,0x20
  425880:	pop    rbx
  425881:	jmp    0x43a748
  425886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425890:	mov    eax,DWORD PTR [rcx+0x8]
  425893:	and    eax,0x400ff
  425898:	cmp    eax,0x6
  42589b:	je     0x4258b0
  42589d:	cmp    eax,0x3
  4258a0:	je     0x4258a4
  4258a2:	repz ret 
  4258a4:	mov    rcx,QWORD PTR [rcx]
  4258a7:	jmp    0x43a748
  4258ac:	nop    DWORD PTR [rax+0x0]
  4258b0:	mov    rcx,QWORD PTR [rcx]
  4258b3:	jmp    0x425860
  4258b5:	nop
  4258b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258c0:	sub    rsp,0x28
  4258c4:	lea    rcx,[rdx+0x28]
  4258c8:	call   0x425890
  4258cd:	xor    eax,eax
  4258cf:	add    rsp,0x28
  4258d3:	ret    
  4258d4:	xchg   ax,ax
  4258d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258e0:	push   r15
  4258e2:	push   r14
  4258e4:	push   r13
  4258e6:	push   r12
  4258e8:	push   rbp
  4258e9:	push   rdi
  4258ea:	push   rsi
  4258eb:	push   rbx
  4258ec:	sub    rsp,0x38
  4258f0:	mov    rax,QWORD PTR [rcx+0x10]
  4258f4:	mov    rdi,QWORD PTR [rcx+0x8]
  4258f8:	mov    rbx,rcx
  4258fb:	mov    rbp,QWORD PTR [rdx]
  4258fe:	mov    rsi,QWORD PTR [rdx+0x8]
  425902:	cmp    rax,rdi
  425905:	jae    0x4259e4
  42590b:	shl    rax,0x4
  42590f:	add    rax,QWORD PTR [rbx]
  425912:	xor    edx,edx
  425914:	mov    QWORD PTR [rax+0x8],rsi
  425918:	mov    QWORD PTR [rax],rbp
  42591b:	mov    rax,QWORD PTR [rbx+0x10]
  42591f:	shl    rax,0x4
  425923:	add    rax,QWORD PTR [rbx]
  425926:	and    DWORD PTR [rax+0x8],0xfffc00ff
  42592d:	mov    rax,QWORD PTR [rbx+0x10]
  425931:	shl    rax,0x4
  425935:	add    rax,QWORD PTR [rbx]
  425938:	cmp    sil,0x6
  42593c:	sete   dl
  42593f:	cmp    sil,0x5
  425943:	je     0x4259d3
  425949:	movzx  ecx,BYTE PTR [rax+0xa]
  42594d:	shl    edx,0x4
  425950:	and    ecx,0xffffffef
  425953:	or     edx,ecx
  425955:	mov    BYTE PTR [rax+0xa],dl
  425958:	mov    rdx,QWORD PTR [rbx+0x10]
  42595c:	mov    rax,QWORD PTR [rbx+0x18]
  425960:	mov    QWORD PTR [rax+rdx*8],0xffffffffffffffff
  425968:	mov    rax,QWORD PTR [rbx+0x10]
  42596c:	lea    rdx,[rax+rax*2]
  425970:	mov    rax,QWORD PTR [rbx+0x28]
  425974:	lea    rax,[rax+rdx*8]
  425978:	mov    QWORD PTR [rax],0x0
  42597f:	mov    QWORD PTR [rax+0x8],0x0
  425987:	mov    QWORD PTR [rax+0x10],0x0
  42598f:	mov    rax,QWORD PTR [rbx+0x10]
  425993:	lea    rdx,[rax+rax*2]
  425997:	mov    rax,QWORD PTR [rbx+0x30]
  42599b:	lea    rax,[rax+rdx*8]
  42599f:	mov    QWORD PTR [rax],0x0
  4259a6:	mov    QWORD PTR [rax+0x8],0x0
  4259ae:	mov    QWORD PTR [rax+0x10],0x0
  4259b6:	mov    rax,QWORD PTR [rbx+0x10]
  4259ba:	lea    rdx,[rax+0x1]
  4259be:	mov    QWORD PTR [rbx+0x10],rdx
  4259c2:	add    rsp,0x38
  4259c6:	pop    rbx
  4259c7:	pop    rsi
  4259c8:	pop    rdi
  4259c9:	pop    rbp
  4259ca:	pop    r12
  4259cc:	pop    r13
  4259ce:	pop    r14
  4259d0:	pop    r15
  4259d2:	ret    
  4259d3:	xor    edx,edx
  4259d5:	cmp    DWORD PTR [rbx+0xac],0x1
  4259dc:	setg   dl
  4259df:	jmp    0x425949
  4259e4:	lea    r12,[rdi+rdi*1]
  4259e8:	movabs rax,0xaaaaaaaaaaaaaaa
  4259f2:	cmp    r12,rax
  4259f5:	ja     0x425aba
  4259fb:	mov    rcx,QWORD PTR [rcx]
  4259fe:	mov    rdx,rdi
  425a01:	shl    rdx,0x5
  425a05:	call   0x43a680
  425a0a:	test   rax,rax
  425a0d:	je     0x425aba
  425a13:	mov    r13,rdi
  425a16:	mov    rcx,QWORD PTR [rbx+0x18]
  425a1a:	mov    QWORD PTR [rbx],rax
  425a1d:	shl    r13,0x4
  425a21:	lea    rdi,[r12+rdi*4]
  425a25:	mov    rdx,r13
  425a28:	call   0x43a680
  425a2d:	mov    rcx,QWORD PTR [rbx+0x20]
  425a31:	mov    rdx,r13
  425a34:	mov    r14,rax
  425a37:	shl    rdi,0x3
  425a3b:	call   0x43a680
  425a40:	mov    rcx,QWORD PTR [rbx+0x28]
  425a44:	mov    rdx,rdi
  425a47:	mov    r13,rax
  425a4a:	call   0x43a680
  425a4f:	mov    rcx,QWORD PTR [rbx+0x30]
  425a53:	mov    rdx,rdi
  425a56:	mov    r15,rax
  425a59:	call   0x43a680
  425a5e:	test   r14,r14
  425a61:	je     0x425a90
  425a63:	test   r13,r13
  425a66:	je     0x425a90
  425a68:	test   r15,r15
  425a6b:	je     0x425a90
  425a6d:	test   rax,rax
  425a70:	je     0x425a90
  425a72:	mov    QWORD PTR [rbx+0x30],rax
  425a76:	mov    QWORD PTR [rbx+0x18],r14
  425a7a:	mov    QWORD PTR [rbx+0x20],r13
  425a7e:	mov    QWORD PTR [rbx+0x28],r15
  425a82:	mov    QWORD PTR [rbx+0x8],r12
  425a86:	mov    rax,QWORD PTR [rbx+0x10]
  425a8a:	jmp    0x42590b
  425a8f:	nop
  425a90:	mov    rcx,r14
  425a93:	mov    QWORD PTR [rsp+0x28],rax
  425a98:	call   0x43a748
  425a9d:	mov    rcx,r13
  425aa0:	call   0x43a748
  425aa5:	mov    rcx,r15
  425aa8:	call   0x43a748
  425aad:	mov    rax,QWORD PTR [rsp+0x28]
  425ab2:	mov    rcx,rax
  425ab5:	call   0x43a748
  425aba:	mov    rax,0xffffffffffffffff
  425ac1:	jmp    0x4259c2
  425ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ad0:	push   rbp
  425ad1:	push   rdi
  425ad2:	push   rsi
  425ad3:	push   rbx
  425ad4:	sub    rsp,0x38
  425ad8:	mov    rax,QWORD PTR [rcx]
  425adb:	mov    rbp,rdx
  425ade:	mov    rdi,rdx
  425ae1:	mov    rsi,rcx
  425ae4:	shl    rbp,0x4
  425ae8:	mov    ebx,r8d
  425aeb:	mov    rdx,QWORD PTR [rax+rbp*1+0x8]
  425af0:	mov    rax,QWORD PTR [rax+rbp*1]
  425af4:	mov    QWORD PTR [rsp+0x28],rdx
  425af9:	lea    rdx,[rsp+0x20]
  425afe:	mov    QWORD PTR [rsp+0x20],rax
  425b03:	call   0x4258e0
  425b08:	cmp    rax,0xffffffffffffffff
  425b0c:	je     0x425b7b
  425b0e:	mov    rcx,QWORD PTR [rsi]
  425b11:	mov    rdx,rax
  425b14:	and    ebx,0x3ff
  425b1a:	shl    rdx,0x4
  425b1e:	shl    ebx,0x8
  425b21:	mov    r8d,DWORD PTR [rcx+rdx*1+0x8]
  425b26:	and    r8d,0xfffc00ff
  425b2d:	or     ebx,r8d
  425b30:	mov    DWORD PTR [rcx+rdx*1+0x8],ebx
  425b34:	mov    r8,QWORD PTR [rsi]
  425b37:	lea    rcx,[r8+rdx*1]
  425b3b:	mov    r9d,DWORD PTR [r8+rbp*1+0x8]
  425b40:	mov    r8d,DWORD PTR [rcx+0x8]
  425b44:	shr    r9d,0x8
  425b48:	mov    r10d,r8d
  425b4b:	and    r8d,0xfffc00ff
  425b52:	shr    r10d,0x8
  425b56:	or     r9d,r10d
  425b59:	and    r9d,0x3ff
  425b60:	shl    r9d,0x8
  425b64:	or     r8d,r9d
  425b67:	mov    DWORD PTR [rcx+0x8],r8d
  425b6b:	mov    rcx,QWORD PTR [rsi]
  425b6e:	or     BYTE PTR [rcx+rdx*1+0xa],0x4
  425b73:	mov    rdx,QWORD PTR [rsi+0x20]
  425b77:	mov    QWORD PTR [rdx+rax*8],rdi
  425b7b:	add    rsp,0x38
  425b7f:	pop    rbx
  425b80:	pop    rsi
  425b81:	pop    rdi
  425b82:	pop    rbp
  425b83:	ret    
  425b84:	xchg   ax,ax
  425b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b90:	push   r15
  425b92:	push   r14
  425b94:	push   r13
  425b96:	push   r12
  425b98:	push   rbp
  425b99:	push   rdi
  425b9a:	push   rsi
  425b9b:	push   rbx
  425b9c:	sub    rsp,0x38
  425ba0:	mov    ebx,DWORD PTR [rsp+0xa0]
  425ba7:	mov    r13,rcx
  425baa:	mov    r12,rdx
  425bad:	mov    r14,r8
  425bb0:	mov    rbp,r9
  425bb3:	mov    r9,QWORD PTR [r13+0x0]
  425bb7:	mov    rax,r12
  425bba:	shl    rax,0x4
  425bbe:	add    rax,r9
  425bc1:	cmp    BYTE PTR [rax+0x8],0x4
  425bc5:	je     0x425da0
  425bcb:	mov    rcx,QWORD PTR [r13+0x28]
  425bcf:	lea    rdi,[r12+r12*2]
  425bd3:	shl    rdi,0x3
  425bd7:	lea    rdx,[rcx+rdi*1]
  425bdb:	mov    r8,QWORD PTR [rdx+0x8]
  425bdf:	test   r8,r8
  425be2:	je     0x425df4
  425be8:	cmp    r8,0x1
  425bec:	je     0x425d30
  425bf2:	mov    rax,QWORD PTR [rdx+0x10]
  425bf6:	mov    rdx,QWORD PTR [r13+0x10]
  425bfa:	lea    rsi,[r14+r14*2]
  425bfe:	shl    rsi,0x3
  425c02:	lea    r10,[rdx-0x1]
  425c06:	mov    r12,QWORD PTR [rax]
  425c09:	add    rcx,rsi
  425c0c:	mov    QWORD PTR [rcx+0x8],0x0
  425c14:	mov    rax,r10
  425c17:	shl    rax,0x4
  425c1b:	add    rax,r9
  425c1e:	test   r10,r10
  425c21:	jle    0x425ca0
  425c23:	test   BYTE PTR [rax+0xa],0x4
  425c27:	je     0x425ca0
  425c29:	shl    rdx,0x4
  425c2d:	mov    r8,QWORD PTR [r13+0x20]
  425c31:	sub    rdx,rax
  425c34:	sub    rdx,0x20
  425c38:	jmp    0x425c55
  425c3a:	nop    WORD PTR [rax+rax*1+0x0]
  425c40:	add    rax,rdx
  425c43:	sub    r10,0x1
  425c47:	add    rax,r9
  425c4a:	test   r10,r10
  425c4d:	jle    0x425ca0
  425c4f:	test   BYTE PTR [rax+0xa],0x4
  425c53:	je     0x425ca0
  425c55:	cmp    r12,QWORD PTR [r8+r10*8]
  425c59:	jne    0x425c40
  425c5b:	mov    r11d,DWORD PTR [rax+0x8]
  425c5f:	shr    r11d,0x8
  425c63:	and    r11d,0x3ff
  425c6a:	cmp    ebx,r11d
  425c6d:	jne    0x425c40
  425c6f:	mov    rdx,r10
  425c72:	call   0x424ce0
  425c77:	test   al,al
  425c79:	jne    0x425ce3
  425c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  425c80:	mov    eax,0xc
  425c85:	add    rsp,0x38
  425c89:	pop    rbx
  425c8a:	pop    rsi
  425c8b:	pop    rdi
  425c8c:	pop    rbp
  425c8d:	pop    r12
  425c8f:	pop    r13
  425c91:	pop    r14
  425c93:	pop    r15
  425c95:	ret    
  425c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ca0:	mov    r8d,ebx
  425ca3:	mov    rdx,r12
  425ca6:	mov    rcx,r13
  425ca9:	call   0x425ad0
  425cae:	cmp    rax,0xffffffffffffffff
  425cb2:	mov    r14,rax
  425cb5:	je     0x425c80
  425cb7:	mov    rcx,rsi
  425cba:	add    rcx,QWORD PTR [r13+0x28]
  425cbe:	mov    rdx,r14
  425cc1:	call   0x424ce0
  425cc6:	test   al,al
  425cc8:	je     0x425c80
  425cca:	mov    DWORD PTR [rsp+0x20],ebx
  425cce:	mov    r9,rbp
  425cd1:	mov    r8,r14
  425cd4:	mov    rdx,r12
  425cd7:	mov    rcx,r13
  425cda:	call   0x425b90
  425cdf:	test   eax,eax
  425ce1:	jne    0x425c85
  425ce3:	mov    rax,QWORD PTR [r13+0x28]
  425ce7:	mov    r8d,ebx
  425cea:	mov    rcx,r13
  425ced:	mov    rax,QWORD PTR [rax+rdi*1+0x10]
  425cf2:	mov    r12,QWORD PTR [rax+0x8]
  425cf6:	mov    rdx,r12
  425cf9:	call   0x425ad0
  425cfe:	cmp    rax,0xffffffffffffffff
  425d02:	mov    r14,rax
  425d05:	je     0x425c80
  425d0b:	add    rsi,QWORD PTR [r13+0x28]
  425d0f:	mov    rdx,r14
  425d12:	mov    rcx,rsi
  425d15:	call   0x424ce0
  425d1a:	test   al,al
  425d1c:	jne    0x425bb3
  425d22:	jmp    0x425c80
  425d27:	nop    WORD PTR [rax+rax*1+0x0]
  425d30:	lea    rdi,[r14+r14*2]
  425d34:	mov    rdx,QWORD PTR [rdx+0x10]
  425d38:	shl    rdi,0x3
  425d3c:	add    rcx,rdi
  425d3f:	cmp    r14,r12
  425d42:	mov    rsi,QWORD PTR [rdx]
  425d45:	mov    QWORD PTR [rcx+0x8],0x0
  425d4d:	je     0x425d58
  425d4f:	cmp    r12,rbp
  425d52:	je     0x425e07
  425d58:	mov    eax,DWORD PTR [rax+0x8]
  425d5b:	mov    rdx,rsi
  425d5e:	mov    rcx,r13
  425d61:	shr    eax,0x8
  425d64:	and    eax,0x3ff
  425d69:	or     ebx,eax
  425d6b:	mov    r8d,ebx
  425d6e:	call   0x425ad0
  425d73:	cmp    rax,0xffffffffffffffff
  425d77:	mov    r14,rax
  425d7a:	je     0x425c80
  425d80:	add    rdi,QWORD PTR [r13+0x28]
  425d84:	mov    rdx,rax
  425d87:	mov    rcx,rdi
  425d8a:	call   0x424ce0
  425d8f:	test   al,al
  425d91:	je     0x425c80
  425d97:	mov    r12,rsi
  425d9a:	jmp    0x425bb3
  425d9f:	nop
  425da0:	mov    rax,QWORD PTR [r13+0x18]
  425da4:	lea    rsi,[r14+r14*2]
  425da8:	lea    r15,[r12*8+0x0]
  425db0:	mov    r8d,ebx
  425db3:	mov    rcx,r13
  425db6:	mov    rdi,r14
  425db9:	shl    rsi,0x3
  425dbd:	mov    r12,QWORD PTR [rax+r12*8]
  425dc1:	mov    rax,QWORD PTR [r13+0x28]
  425dc5:	mov    rdx,r12
  425dc8:	mov    QWORD PTR [rax+rsi*1+0x8],0x0
  425dd1:	call   0x425ad0
  425dd6:	cmp    rax,0xffffffffffffffff
  425dda:	mov    r14,rax
  425ddd:	je     0x425c80
  425de3:	mov    rax,QWORD PTR [r13+0x18]
  425de7:	mov    rdx,QWORD PTR [rax+r15*1]
  425deb:	mov    QWORD PTR [rax+rdi*8],rdx
  425def:	jmp    0x425d0b
  425df4:	mov    rax,QWORD PTR [r13+0x18]
  425df8:	mov    rdx,QWORD PTR [rax+r12*8]
  425dfc:	mov    QWORD PTR [rax+r14*8],rdx
  425e00:	xor    eax,eax
  425e02:	jmp    0x425c85
  425e07:	mov    rdx,rsi
  425e0a:	call   0x424ce0
  425e0f:	mov    edx,eax
  425e11:	xor    eax,eax
  425e13:	test   dl,dl
  425e15:	jne    0x425c85
  425e1b:	jmp    0x425c80
  425e20:	push   rbx
  425e21:	sub    rsp,0x20
  425e25:	mov    rbx,rcx
  425e28:	mov    rcx,QWORD PTR [rcx+0x30]
  425e2c:	call   0x43a748
  425e31:	mov    rcx,QWORD PTR [rbx+0x48]
  425e35:	call   0x43a748
  425e3a:	mov    rax,QWORD PTR [rbx+0x50]
  425e3e:	lea    rdx,[rbx+0x8]
  425e42:	cmp    rax,rdx
  425e45:	je     0x425e59
  425e47:	mov    rcx,QWORD PTR [rax+0x10]
  425e4b:	call   0x43a748
  425e50:	mov    rcx,QWORD PTR [rbx+0x50]
  425e54:	call   0x43a748
  425e59:	mov    rcx,QWORD PTR [rbx+0x18]
  425e5d:	call   0x43a748
  425e62:	mov    rcx,QWORD PTR [rbx+0x60]
  425e66:	call   0x43a748
  425e6b:	mov    rcx,QWORD PTR [rbx+0x58]
  425e6f:	call   0x43a748
  425e74:	mov    rcx,rbx
  425e77:	add    rsp,0x20
  425e7b:	pop    rbx
  425e7c:	jmp    0x43a748
  425e81:	nop    DWORD PTR [rax+rax*1+0x0]
  425e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e90:	push   rbx
  425e91:	sub    rsp,0x20
  425e95:	mov    rbx,rcx
  425e98:	mov    rcx,QWORD PTR [rcx+0x10]
  425e9c:	call   0x43a748
  425ea1:	mov    rcx,QWORD PTR [rbx+0x18]
  425ea5:	call   0x43a748
  425eaa:	cmp    BYTE PTR [rbx+0x8b],0x0
  425eb1:	jne    0x425ec0
  425eb3:	add    rsp,0x20
  425eb7:	pop    rbx
  425eb8:	ret    
  425eb9:	nop    DWORD PTR [rax+0x0]
  425ec0:	mov    rcx,QWORD PTR [rbx+0x8]
  425ec4:	add    rsp,0x20
  425ec8:	pop    rbx
  425ec9:	jmp    0x43a748
  425ece:	xchg   ax,ax
  425ed0:	push   r12
  425ed2:	push   rbp
  425ed3:	push   rdi
  425ed4:	push   rsi
  425ed5:	push   rbx
  425ed6:	sub    rsp,0x20
  425eda:	mov    rdi,rcx
  425edd:	mov    rcx,QWORD PTR [rcx]
  425ee0:	test   rcx,rcx
  425ee3:	je     0x425f0c
  425ee5:	cmp    QWORD PTR [rdi+0x10],0x0
  425eea:	je     0x425f0c
  425eec:	xor    ebx,ebx
  425eee:	jmp    0x425ef3
  425ef0:	mov    rcx,QWORD PTR [rdi]
  425ef3:	mov    rax,rbx
  425ef6:	add    rbx,0x1
  425efa:	shl    rax,0x4
  425efe:	add    rcx,rax
  425f01:	call   0x425890
  425f06:	cmp    rbx,QWORD PTR [rdi+0x10]
  425f0a:	jb     0x425ef0
  425f0c:	mov    rcx,QWORD PTR [rdi+0x18]
  425f10:	xor    ebx,ebx
  425f12:	xor    esi,esi
  425f14:	call   0x43a748
  425f19:	cmp    QWORD PTR [rdi+0x10],0x0
  425f1e:	je     0x425f67
  425f20:	mov    rax,QWORD PTR [rdi+0x30]
  425f24:	test   rax,rax
  425f27:	je     0x425f33
  425f29:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
  425f2e:	call   0x43a748
  425f33:	mov    rax,QWORD PTR [rdi+0x38]
  425f37:	test   rax,rax
  425f3a:	je     0x425f46
  425f3c:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
  425f41:	call   0x43a748
  425f46:	mov    rax,QWORD PTR [rdi+0x28]
  425f4a:	test   rax,rax
  425f4d:	je     0x425f59
  425f4f:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
  425f54:	call   0x43a748
  425f59:	add    rsi,0x1
  425f5d:	add    rbx,0x18
  425f61:	cmp    rsi,QWORD PTR [rdi+0x10]
  425f65:	jb     0x425f20
  425f67:	mov    rcx,QWORD PTR [rdi+0x28]
  425f6b:	call   0x43a748
  425f70:	mov    rcx,QWORD PTR [rdi+0x30]
  425f74:	call   0x43a748
  425f79:	mov    rcx,QWORD PTR [rdi+0x38]
  425f7d:	call   0x43a748
  425f82:	mov    rcx,QWORD PTR [rdi]
  425f85:	call   0x43a748
  425f8a:	mov    rcx,QWORD PTR [rdi+0x40]
  425f8e:	test   rcx,rcx
  425f91:	je     0x425fea
  425f93:	xor    r12d,r12d
  425f96:	xor    ebp,ebp
  425f98:	nop    DWORD PTR [rax+rax*1+0x0]
  425fa0:	lea    rsi,[rcx+r12*1]
  425fa4:	xor    ebx,ebx
  425fa6:	cmp    QWORD PTR [rsi],0x0
  425faa:	jle    0x425fc6
  425fac:	nop    DWORD PTR [rax+0x0]
  425fb0:	mov    rax,QWORD PTR [rsi+0x10]
  425fb4:	mov    rcx,QWORD PTR [rax+rbx*8]
  425fb8:	add    rbx,0x1
  425fbc:	call   0x425e20
  425fc1:	cmp    QWORD PTR [rsi],rbx
  425fc4:	jg     0x425fb0
  425fc6:	mov    rcx,QWORD PTR [rsi+0x10]
  425fca:	add    rbp,0x1
  425fce:	add    r12,0x18
  425fd2:	call   0x43a748
  425fd7:	cmp    rbp,QWORD PTR [rdi+0x88]
  425fde:	ja     0x425fe6
  425fe0:	mov    rcx,QWORD PTR [rdi+0x40]
  425fe4:	jmp    0x425fa0
  425fe6:	mov    rcx,QWORD PTR [rdi+0x40]
  425fea:	call   0x43a748
  425fef:	mov    rcx,QWORD PTR [rdi+0x78]
  425ff3:	lea    rax,[rip+0x22666]        # 0x448660
  425ffa:	cmp    rcx,rax
  425ffd:	je     0x426004
  425fff:	call   0x43a748
  426004:	mov    rcx,QWORD PTR [rdi+0xd8]
  42600b:	call   0x43a748
  426010:	mov    rcx,rdi
  426013:	add    rsp,0x20
  426017:	pop    rbx
  426018:	pop    rsi
  426019:	pop    rdi
  42601a:	pop    rbp
  42601b:	pop    r12
  42601d:	jmp    0x43a748
  426022:	nop    DWORD PTR [rax+0x0]
  426026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426030:	push   r12
  426032:	push   rbp
  426033:	push   rdi
  426034:	push   rsi
  426035:	push   rbx
  426036:	sub    rsp,0x20
  42603a:	xor    ebp,ebp
  42603c:	cmp    QWORD PTR [rcx+0xe8],0x0
  426044:	mov    r12,rcx
  426047:	jle    0x4260c2
  426049:	nop    DWORD PTR [rax+0x0]
  426050:	mov    rax,QWORD PTR [r12+0xf8]
  426058:	xor    ebx,ebx
  42605a:	mov    rdi,QWORD PTR [rax+rbp*8]
  42605e:	cmp    QWORD PTR [rdi+0x20],0x0
  426063:	jle    0x426088
  426065:	mov    rax,QWORD PTR [rdi+0x28]
  426069:	mov    rsi,QWORD PTR [rax+rbx*8]
  42606d:	add    rbx,0x1
  426071:	mov    rcx,QWORD PTR [rsi+0x20]
  426075:	call   0x43a748
  42607a:	mov    rcx,rsi
  42607d:	call   0x43a748
  426082:	cmp    QWORD PTR [rdi+0x20],rbx
  426086:	jg     0x426065
  426088:	mov    rcx,QWORD PTR [rdi+0x28]
  42608c:	call   0x43a748
  426091:	mov    rax,QWORD PTR [rdi+0x10]
  426095:	test   rax,rax
  426098:	je     0x4260ac
  42609a:	mov    rcx,QWORD PTR [rax+0x10]
  42609e:	call   0x43a748
  4260a3:	mov    rcx,QWORD PTR [rdi+0x10]
  4260a7:	call   0x43a748
  4260ac:	mov    rcx,rdi
  4260af:	add    rbp,0x1
  4260b3:	call   0x43a748
  4260b8:	cmp    QWORD PTR [r12+0xe8],rbp
  4260c0:	jg     0x426050
  4260c2:	mov    QWORD PTR [r12+0xe8],0x0
  4260ce:	mov    QWORD PTR [r12+0xc8],0x0
  4260da:	add    rsp,0x20
  4260de:	pop    rbx
  4260df:	pop    rsi
  4260e0:	pop    rdi
  4260e1:	pop    rbp
  4260e2:	pop    r12
  4260e4:	ret    
  4260e5:	nop
  4260e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4260f0:	push   rdi
  4260f1:	push   rsi
  4260f2:	push   rbx
  4260f3:	sub    rsp,0x20
  4260f7:	test   rcx,rcx
  4260fa:	je     0x426142
  4260fc:	xor    ebx,ebx
  4260fe:	xor    edi,edi
  426100:	cmp    QWORD PTR [rcx],0x0
  426104:	mov    rsi,rcx
  426107:	jle    0x426139
  426109:	nop    DWORD PTR [rax+0x0]
  426110:	mov    rax,QWORD PTR [rsi+0x10]
  426114:	add    rdi,0x1
  426118:	mov    rcx,QWORD PTR [rax+rbx*1+0x28]
  42611d:	call   0x43a748
  426122:	mov    rax,QWORD PTR [rsi+0x10]
  426126:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
  42612b:	add    rbx,0x30
  42612f:	call   0x43a748
  426134:	cmp    QWORD PTR [rsi],rdi
  426137:	jg     0x426110
  426139:	mov    rcx,QWORD PTR [rsi+0x10]
  42613d:	call   0x43a748
  426142:	xor    eax,eax
  426144:	add    rsp,0x20
  426148:	pop    rbx
  426149:	pop    rsi
  42614a:	pop    rdi
  42614b:	ret    
  42614c:	nop    DWORD PTR [rax+0x0]
  426150:	push   r12
  426152:	push   rbp
  426153:	push   rdi
  426154:	push   rsi
  426155:	push   rbx
  426156:	sub    rsp,0x20
  42615a:	movzx  r8d,BYTE PTR [rdx+0x30]
  42615f:	mov    rsi,QWORD PTR [rdx+0x38]
  426163:	mov    rdi,rcx
  426166:	mov    rbx,rdx
  426169:	cmp    r8b,0x10
  42616d:	ja     0x4262c2
  426173:	lea    rax,[rip+0x21f6a]        # 0x4480e4
  42617a:	movzx  edx,r8b
  42617e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  426182:	add    rax,rdx
  426185:	jmp    rax
  426187:	nop    WORD PTR [rax+rax*1+0x0]
  426190:	mov    rax,QWORD PTR [rbx+0x20]
  426194:	mov    rbp,QWORD PTR [rax+0x38]
  426198:	mov    rax,QWORD PTR [rdi+0x28]
  42619c:	lea    rdx,[rsi+rsi*2]
  4261a0:	mov    ecx,0x8
  4261a5:	lea    rbx,[rax+rdx*8]
  4261a9:	mov    QWORD PTR [rbx],0x1
  4261b0:	mov    QWORD PTR [rbx+0x8],0x1
  4261b8:	call   0x423ec0
  4261bd:	test   rax,rax
  4261c0:	mov    QWORD PTR [rbx+0x10],rax
  4261c4:	je     0x426380
  4261ca:	mov    QWORD PTR [rax],rbp
  4261cd:	xor    eax,eax
  4261cf:	add    rsp,0x20
  4261d3:	pop    rbx
  4261d4:	pop    rsi
  4261d5:	pop    rdi
  4261d6:	pop    rbp
  4261d7:	pop    r12
  4261d9:	ret    
  4261da:	nop    WORD PTR [rax+rax*1+0x0]
  4261e0:	mov    rax,QWORD PTR [rbx+0x8]
  4261e4:	or     BYTE PTR [rcx+0xa8],0x1
  4261eb:	test   rax,rax
  4261ee:	je     0x426350
  4261f4:	mov    rax,QWORD PTR [rax+0x18]
  4261f8:	mov    rbp,QWORD PTR [rax+0x38]
  4261fc:	mov    rax,QWORD PTR [rbx+0x10]
  426200:	test   rax,rax
  426203:	je     0x426342
  426209:	mov    rax,QWORD PTR [rax+0x18]
  42620d:	mov    r12,QWORD PTR [rax+0x38]
  426211:	test   rbp,rbp
  426214:	js     0x426360
  42621a:	test   r12,r12
  42621d:	js     0x426310
  426223:	mov    rax,QWORD PTR [rdi+0x28]
  426227:	lea    rdx,[rsi+rsi*2]
  42622b:	mov    ecx,0x10
  426230:	lea    rbx,[rax+rdx*8]
  426234:	mov    QWORD PTR [rbx],0x2
  42623b:	call   0x423ec0
  426240:	test   rax,rax
  426243:	mov    QWORD PTR [rbx+0x10],rax
  426247:	je     0x4263a0
  42624d:	cmp    rbp,r12
  426250:	je     0x426330
  426256:	mov    QWORD PTR [rbx+0x8],0x2
  42625e:	jl     0x426300
  426264:	mov    QWORD PTR [rax],r12
  426267:	mov    QWORD PTR [rax+0x8],rbp
  42626b:	xor    eax,eax
  42626d:	jmp    0x4261cf
  426272:	cmp    QWORD PTR [rbx+0x20],0x0
  426277:	je     0x4261cd
  42627d:	lea    rdx,[rip+0x21dbc]        # 0x448040
  426284:	lea    rcx,[rip+0x21e07]        # 0x448092
  42628b:	mov    r8d,0x5a5
  426291:	call   0x435a10
  426296:	xor    eax,eax
  426298:	add    rsp,0x20
  42629c:	pop    rbx
  42629d:	pop    rsi
  42629e:	pop    rdi
  42629f:	pop    rbp
  4262a0:	pop    r12
  4262a2:	ret    
  4262a3:	mov    rax,QWORD PTR [rbx+0x20]
  4262a7:	mov    rbp,QWORD PTR [rax+0x38]
  4262ab:	mov    rax,QWORD PTR [rcx+0x18]
  4262af:	mov    QWORD PTR [rax+rsi*8],rbp
  4262b3:	cmp    BYTE PTR [rbx+0x30],0x4
  4262b7:	jne    0x4261cd
  4262bd:	jmp    0x426198
  4262c2:	and    r8d,0x8
  4262c6:	jne    0x4262e5
  4262c8:	mov    rax,QWORD PTR [rbx+0x20]
  4262cc:	mov    rdx,QWORD PTR [rax+0x38]
  4262d0:	mov    rax,QWORD PTR [rdi+0x18]
  4262d4:	mov    QWORD PTR [rax+rsi*8],rdx
  4262d8:	xor    eax,eax
  4262da:	add    rsp,0x20
  4262de:	pop    rbx
  4262df:	pop    rsi
  4262e0:	pop    rdi
  4262e1:	pop    rbp
  4262e2:	pop    r12
  4262e4:	ret    
  4262e5:	lea    rdx,[rip+0x21d54]        # 0x448040
  4262ec:	lea    rcx,[rip+0x21dcd]        # 0x4480c0
  4262f3:	mov    r8d,0x5c8
  4262f9:	call   0x435a10
  4262fe:	jmp    0x4262c8
  426300:	mov    QWORD PTR [rax],rbp
  426303:	mov    QWORD PTR [rax+0x8],r12
  426307:	xor    eax,eax
  426309:	jmp    0x4261cf
  42630e:	xchg   ax,ax
  426310:	lea    rdx,[rip+0x21d29]        # 0x448040
  426317:	lea    rcx,[rip+0x21d91]        # 0x4480af
  42631e:	mov    r8d,0x5b6
  426324:	call   0x435a10
  426329:	jmp    0x426223
  42632e:	xchg   ax,ax
  426330:	mov    QWORD PTR [rbx+0x8],0x1
  426338:	mov    QWORD PTR [rax],rbp
  42633b:	xor    eax,eax
  42633d:	jmp    0x4261cf
  426342:	mov    rax,QWORD PTR [rbx+0x20]
  426346:	mov    r12,QWORD PTR [rax+0x38]
  42634a:	jmp    0x426211
  42634f:	nop
  426350:	mov    rax,QWORD PTR [rbx+0x20]
  426354:	mov    rbp,QWORD PTR [rax+0x38]
  426358:	jmp    0x4261fc
  42635d:	nop    DWORD PTR [rax]
  426360:	lea    rdx,[rip+0x21cd9]        # 0x448040
  426367:	lea    rcx,[rip+0x21d37]        # 0x4480a5
  42636e:	mov    r8d,0x5b5
  426374:	call   0x435a10
  426379:	jmp    0x42621a
  42637e:	xchg   ax,ax
  426380:	mov    QWORD PTR [rbx+0x8],0x0
  426388:	mov    QWORD PTR [rbx],0x0
  42638f:	mov    al,0xc
  426391:	jmp    0x4261cf
  426396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263a0:	mov    eax,0xc
  4263a5:	jmp    0x4261cf
  4263aa:	nop    WORD PTR [rax+rax*1+0x0]
  4263b0:	xor    eax,eax
  4263b2:	mov    r8,QWORD PTR [rcx+0x8]
  4263b6:	cmp    r8,QWORD PTR [rdx+0x8]
  4263ba:	je     0x4263c0
  4263bc:	repz ret 
  4263be:	xchg   ax,ax
  4263c0:	sub    r8,0x1
  4263c4:	lea    rax,[r8*8+0x0]
  4263cc:	jmp    0x4263ed
  4263ce:	xchg   ax,ax
  4263d0:	mov    r9,QWORD PTR [rcx+0x10]
  4263d4:	mov    r10,QWORD PTR [r9+rax*1]
  4263d8:	mov    r9,QWORD PTR [rdx+0x10]
  4263dc:	mov    r9,QWORD PTR [r9+rax*1]
  4263e0:	sub    rax,0x8
  4263e4:	cmp    r10,r9
  4263e7:	jne    0x426400
  4263e9:	sub    r8,0x1
  4263ed:	test   r8,r8
  4263f0:	jns    0x4263d0
  4263f2:	mov    eax,0x1
  4263f7:	ret    
  4263f8:	nop    DWORD PTR [rax+rax*1+0x0]
  426400:	xor    eax,eax
  426402:	ret    
  426403:	nop    DWORD PTR [rax]
  426406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426410:	test   rcx,rcx
  426413:	jle    0x426464
  426415:	mov    r9,QWORD PTR [rdx]
  426418:	sub    rcx,0x1
  42641c:	xor    edx,edx
  42641e:	jmp    0x426424
  426420:	lea    rdx,[rax+0x1]
  426424:	cmp    rcx,rdx
  426427:	jbe    0x426452
  426429:	lea    rax,[rdx+rcx*1]
  42642d:	shr    rax,1
  426430:	cmp    r8,QWORD PTR [r9+rax*8]
  426434:	jg     0x426420
  426436:	cmp    rdx,rax
  426439:	mov    rcx,rax
  42643c:	jae    0x426452
  42643e:	add    rax,rdx
  426441:	shr    rax,1
  426444:	cmp    QWORD PTR [r9+rax*8],r8
  426448:	jl     0x426420
  42644a:	cmp    rdx,rax
  42644d:	mov    rcx,rax
  426450:	jb     0x42643e
  426452:	cmp    r8,QWORD PTR [r9+rdx*8]
  426456:	lea    rax,[rdx+0x1]
  42645a:	mov    edx,0x0
  42645f:	cmovne rax,rdx
  426463:	ret    
  426464:	xor    eax,eax
  426466:	ret    
  426467:	nop    WORD PTR [rax+rax*1+0x0]
  426470:	push   r13
  426472:	push   r12
  426474:	push   rbp
  426475:	push   rdi
  426476:	push   rsi
  426477:	push   rbx
  426478:	sub    rsp,0x38
  42647c:	mov    ebp,DWORD PTR [rsp+0x90]
  426483:	mov    rdi,rcx
  426486:	mov    rsi,rdx
  426489:	mov    rbx,r8
  42648c:	mov    r13,r9
  42648f:	lea    r12,[rdx+0x10]
  426493:	jmp    0x42649c
  426495:	mov    rax,QWORD PTR [rax+0x10]
  426499:	mov    rbx,QWORD PTR [rax]
  42649c:	mov    rcx,QWORD PTR [rsi+0x8]
  4264a0:	mov    r8,rbx
  4264a3:	mov    rdx,r12
  4264a6:	call   0x426410
  4264ab:	test   rax,rax
  4264ae:	jne    0x426523
  4264b0:	mov    rax,rbx
  4264b3:	shl    rax,0x4
  4264b7:	add    rax,QWORD PTR [rdi]
  4264ba:	movzx  edx,BYTE PTR [rax+0x8]
  4264be:	cmp    edx,ebp
  4264c0:	jne    0x4264c7
  4264c2:	cmp    QWORD PTR [rax],r13
  4264c5:	je     0x42651e
  4264c7:	mov    rdx,rbx
  4264ca:	mov    rcx,rsi
  4264cd:	call   0x424ce0
  4264d2:	test   al,al
  4264d4:	je     0x426545
  4264d6:	lea    rbx,[rbx+rbx*2]
  4264da:	shl    rbx,0x3
  4264de:	mov    rax,rbx
  4264e1:	add    rax,QWORD PTR [rdi+0x28]
  4264e5:	mov    rdx,QWORD PTR [rax+0x8]
  4264e9:	test   rdx,rdx
  4264ec:	je     0x426523
  4264ee:	cmp    rdx,0x2
  4264f2:	jne    0x426495
  4264f4:	mov    rax,QWORD PTR [rax+0x10]
  4264f8:	mov    r9,r13
  4264fb:	mov    rdx,rsi
  4264fe:	mov    rcx,rdi
  426501:	mov    r8,QWORD PTR [rax+0x8]
  426505:	mov    DWORD PTR [rsp+0x20],ebp
  426509:	call   0x426470
  42650e:	test   eax,eax
  426510:	jne    0x426525
  426512:	mov    rax,rbx
  426515:	add    rax,QWORD PTR [rdi+0x28]
  426519:	jmp    0x426495
  42651e:	cmp    ebp,0x9
  426521:	je     0x426532
  426523:	xor    eax,eax
  426525:	add    rsp,0x38
  426529:	pop    rbx
  42652a:	pop    rsi
  42652b:	pop    rdi
  42652c:	pop    rbp
  42652d:	pop    r12
  42652f:	pop    r13
  426531:	ret    
  426532:	mov    rdx,rbx
  426535:	mov    rcx,rsi
  426538:	call   0x424ce0
  42653d:	mov    edx,eax
  42653f:	xor    eax,eax
  426541:	test   dl,dl
  426543:	jne    0x426525
  426545:	mov    eax,0xc
  42654a:	add    rsp,0x38
  42654e:	pop    rbx
  42654f:	pop    rsi
  426550:	pop    rdi
  426551:	pop    rbp
  426552:	pop    r12
  426554:	pop    r13
  426556:	ret    
  426557:	nop    WORD PTR [rax+rax*1+0x0]
  426560:	test   r8,r8
  426563:	js     0x426592
  426565:	mov    rax,QWORD PTR [rcx]
  426568:	cmp    r8,rax
  42656b:	jge    0x426592
  42656d:	sub    rax,0x1
  426571:	cmp    r8,rax
  426574:	mov    QWORD PTR [rcx],rax
  426577:	jge    0x426592
  426579:	mov    rax,QWORD PTR [rdx]
  42657c:	nop    DWORD PTR [rax+0x0]
  426580:	mov    rdx,QWORD PTR [rax+r8*8+0x8]
  426585:	mov    QWORD PTR [rax+r8*8],rdx
  426589:	add    r8,0x1
  42658d:	cmp    r8,QWORD PTR [rcx]
  426590:	jl     0x426580
  426592:	repz ret 
  426594:	xchg   ax,ax
  426596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4265a0:	movzx  eax,BYTE PTR [rdx+0x30]
  4265a4:	mov    r8,rcx
  4265a7:	cmp    al,0x4
  4265a9:	je     0x426600
  4265ab:	cmp    al,0x11
  4265ad:	je     0x4265b2
  4265af:	xor    eax,eax
  4265b1:	ret    
  4265b2:	mov    rax,QWORD PTR [rdx+0x8]
  4265b6:	test   rax,rax
  4265b9:	je     0x4265af
  4265bb:	cmp    BYTE PTR [rax+0x30],0x11
  4265bf:	jne    0x4265af
  4265c1:	mov    rcx,QWORD PTR [rax+0x28]
  4265c5:	mov    rax,QWORD PTR [rax+0x8]
  4265c9:	test   rax,rax
  4265cc:	mov    QWORD PTR [rdx+0x8],rax
  4265d0:	je     0x4265d5
  4265d2:	mov    QWORD PTR [rax],rdx
  4265d5:	mov    rax,QWORD PTR [r8+0xd8]
  4265dc:	mov    rdx,QWORD PTR [rdx+0x28]
  4265e0:	cmp    rcx,0x1f
  4265e4:	mov    rdx,QWORD PTR [rax+rdx*8]
  4265e8:	mov    QWORD PTR [rax+rcx*8],rdx
  4265ec:	jg     0x4265af
  4265ee:	mov    eax,0xfffffffe
  4265f3:	rol    eax,cl
  4265f5:	and    DWORD PTR [r8+0xa0],eax
  4265fc:	jmp    0x4265af
  4265fe:	xchg   ax,ax
  426600:	mov    rax,QWORD PTR [rcx+0xd8]
  426607:	test   rax,rax
  42660a:	je     0x4265af
  42660c:	movsxd rcx,DWORD PTR [rdx+0x28]
  426610:	mov    rcx,QWORD PTR [rax+rcx*8]
  426614:	mov    eax,0x1
  426619:	shl    eax,cl
  42661b:	mov    QWORD PTR [rdx+0x28],rcx
  42661f:	or     DWORD PTR [r8+0xa0],eax
  426626:	xor    eax,eax
  426628:	ret    
  426629:	nop    DWORD PTR [rax+0x0]
  426630:	movzx  eax,BYTE PTR [rdx+0x30]
  426634:	cmp    al,0xb
  426636:	je     0x426680
  426638:	cmp    al,0x10
  42663a:	je     0x426661
  42663c:	mov    rax,QWORD PTR [rdx+0x8]
  426640:	test   rax,rax
  426643:	je     0x42664d
  426645:	mov    rcx,QWORD PTR [rdx+0x20]
  426649:	mov    QWORD PTR [rax+0x20],rcx
  42664d:	mov    rax,QWORD PTR [rdx+0x10]
  426651:	test   rax,rax
  426654:	je     0x42665e
  426656:	mov    rdx,QWORD PTR [rdx+0x20]
  42665a:	mov    QWORD PTR [rax+0x20],rdx
  42665e:	xor    eax,eax
  426660:	ret    
  426661:	mov    rax,QWORD PTR [rdx+0x10]
  426665:	mov    rcx,QWORD PTR [rdx+0x8]
  426669:	mov    r8,QWORD PTR [rax+0x18]
  42666d:	mov    QWORD PTR [rcx+0x20],r8
  426671:	mov    rdx,QWORD PTR [rdx+0x20]
  426675:	mov    QWORD PTR [rax+0x20],rdx
  426679:	xor    eax,eax
  42667b:	ret    
  42667c:	nop    DWORD PTR [rax+0x0]
  426680:	mov    rax,QWORD PTR [rdx+0x8]
  426684:	mov    QWORD PTR [rax+0x20],rdx
  426688:	xor    eax,eax
  42668a:	ret    
  42668b:	nop    DWORD PTR [rax+rax*1+0x0]
  426690:	push   rbx
  426691:	xor    eax,eax
  426693:	mov    r10,rcx
  426696:	jmp    0x4266a4
  426698:	nop    DWORD PTR [rax+rax*1+0x0]
  4266a0:	lea    rax,[r9+0x1]
  4266a4:	cmp    r10,rax
  4266a7:	jle    0x4266df
  4266a9:	lea    r9,[r10+rax*1]
  4266ad:	mov    r11,QWORD PTR [rdx]
  4266b0:	sar    r9,1
  4266b3:	lea    rbx,[r9+r9*4]
  4266b7:	cmp    r8,QWORD PTR [r11+rbx*8+0x8]
  4266bc:	jg     0x4266a0
  4266be:	cmp    rax,r9
  4266c1:	mov    r10,r9
  4266c4:	jge    0x4266df
  4266c6:	add    r9,rax
  4266c9:	sar    r9,1
  4266cc:	lea    rbx,[r9+r9*4]
  4266d0:	cmp    QWORD PTR [r11+rbx*8+0x8],r8
  4266d5:	jl     0x4266a0
  4266d7:	cmp    rax,r9
  4266da:	mov    r10,r9
  4266dd:	jl     0x4266c6
  4266df:	cmp    rax,rcx
  4266e2:	jge    0x426700
  4266e4:	mov    r9,QWORD PTR [rdx]
  4266e7:	lea    rcx,[rax+rax*4]
  4266eb:	mov    rdx,0xffffffffffffffff
  4266f2:	lea    rcx,[r9+rcx*8]
  4266f6:	cmp    r8,QWORD PTR [rcx+0x8]
  4266fa:	cmovne rax,rdx
  4266fe:	pop    rbx
  4266ff:	ret    
  426700:	mov    rax,0xffffffffffffffff
  426707:	pop    rbx
  426708:	ret    
  426709:	nop    DWORD PTR [rax+0x0]
  426710:	push   r15
  426712:	push   r14
  426714:	push   r13
  426716:	push   r12
  426718:	push   rbp
  426719:	push   rdi
  42671a:	push   rsi
  42671b:	push   rbx
  42671c:	sub    rsp,0x48
  426720:	mov    rsi,QWORD PTR [rcx+0xc8]
  426727:	mov    r15,QWORD PTR [rcx+0x98]
  42672e:	lea    rbp,[rcx+0xd8]
  426735:	mov    rdi,r8
  426738:	mov    r8,QWORD PTR [rsp+0xb0]
  426740:	mov    r12,rdx
  426743:	mov    rbx,rcx
  426746:	mov    QWORD PTR [rsp+0xa8],r9
  42674e:	mov    rcx,rsi
  426751:	mov    rdx,rbp
  426754:	call   0x426690
  426759:	mov    r8,QWORD PTR [rsp+0xc0]
  426761:	mov    rcx,rsi
  426764:	mov    rdx,rbp
  426767:	mov    r14,rax
  42676a:	xor    esi,esi
  42676c:	call   0x426690
  426771:	cmp    QWORD PTR [r12],0x0
  426776:	mov    QWORD PTR [rsp+0x38],rax
  42677b:	jle    0x42682e
  426781:	mov    rax,QWORD PTR [rdi]
  426784:	mov    rcx,QWORD PTR [rbx+0xd8]
  42678b:	mov    r9,QWORD PTR [rsp+0xa8]
  426793:	mov    rdx,QWORD PTR [rax+rsi*8]
  426797:	lea    rax,[rdx+rdx*4]
  42679b:	lea    rax,[rcx+rax*8]
  42679f:	mov    rcx,rbx
  4267a2:	mov    rax,QWORD PTR [rax]
  4267a5:	shl    rax,0x4
  4267a9:	add    rax,QWORD PTR [r15]
  4267ac:	mov    r13,QWORD PTR [rax]
  4267af:	mov    rax,QWORD PTR [rsp+0xb0]
  4267b7:	mov    QWORD PTR [rsp+0x28],r14
  4267bc:	mov    r8,r13
  4267bf:	mov    QWORD PTR [rsp+0x20],rax
  4267c4:	call   0x424a80
  4267c9:	mov    ebp,eax
  4267cb:	mov    rax,QWORD PTR [rdi]
  4267ce:	mov    r9,QWORD PTR [rsp+0xb8]
  4267d6:	mov    r8,r13
  4267d9:	mov    rcx,rbx
  4267dc:	mov    rdx,QWORD PTR [rax+rsi*8]
  4267e0:	mov    rax,QWORD PTR [rsp+0x38]
  4267e5:	mov    QWORD PTR [rsp+0x28],rax
  4267ea:	mov    rax,QWORD PTR [rsp+0xc0]
  4267f2:	mov    QWORD PTR [rsp+0x20],rax
  4267f7:	call   0x424a80
  4267fc:	cmp    ebp,eax
  4267fe:	je     0x426820
  426800:	mov    eax,0x1
  426805:	add    rsp,0x48
  426809:	pop    rbx
  42680a:	pop    rsi
  42680b:	pop    rdi
  42680c:	pop    rbp
  42680d:	pop    r12
  42680f:	pop    r13
  426811:	pop    r14
  426813:	pop    r15
  426815:	ret    
  426816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426820:	add    rsi,0x1
  426824:	cmp    rsi,QWORD PTR [r12]
  426828:	jl     0x426781
  42682e:	xor    eax,eax
  426830:	jmp    0x426805
  426832:	nop    DWORD PTR [rax+0x0]
  426836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426840:	push   rbx
  426841:	sub    rsp,0x40
  426845:	movsxd r10,DWORD PTR [rdx]
  426848:	mov    rbx,rcx
  42684b:	cmp    r10d,0xf
  42684f:	je     0x4268c0
  426851:	mov    rax,QWORD PTR [rcx]
  426854:	lea    ecx,[r10+0x1]
  426858:	shl    r10,0x6
  42685c:	mov    DWORD PTR [rdx],ecx
  42685e:	mov    r11,QWORD PTR [rsp+0x70]
  426863:	lea    rdx,[rax+r10*1]
  426867:	mov    QWORD PTR [rdx+0x8],0x0
  42686f:	mov    QWORD PTR [rdx+0x10],r8
  426873:	lea    rcx,[rdx+0x20]
  426877:	mov    QWORD PTR [rdx+0x18],r9
  42687b:	lea    rax,[rdx+0x8]
  42687f:	movdqu xmm1,XMMWORD PTR [r11]
  426884:	movups XMMWORD PTR [rdx+0x30],xmm1
  426888:	and    BYTE PTR [rcx+0x1a],0xf3
  42688c:	test   r8,r8
  42688f:	mov    QWORD PTR [rdx+0x20],0x0
  426897:	mov    QWORD PTR [rcx+0x8],0x0
  42689f:	mov    QWORD PTR [rdx+0x40],0xffffffffffffffff
  4268a7:	je     0x4268ac
  4268a9:	mov    QWORD PTR [r8],rax
  4268ac:	test   r9,r9
  4268af:	je     0x4268b4
  4268b1:	mov    QWORD PTR [r9],rax
  4268b4:	add    rsp,0x40
  4268b8:	pop    rbx
  4268b9:	ret    
  4268ba:	nop    WORD PTR [rax+rax*1+0x0]
  4268c0:	mov    ecx,0x3c8
  4268c5:	mov    QWORD PTR [rsp+0x38],r9
  4268ca:	mov    QWORD PTR [rsp+0x30],r8
  4268cf:	mov    QWORD PTR [rsp+0x28],rdx
  4268d4:	call   0x423ec0
  4268d9:	test   rax,rax
  4268dc:	je     0x426903
  4268de:	mov    rcx,QWORD PTR [rbx]
  4268e1:	xor    r10d,r10d
  4268e4:	mov    r9,QWORD PTR [rsp+0x38]
  4268e9:	mov    r8,QWORD PTR [rsp+0x30]
  4268ee:	mov    rdx,QWORD PTR [rsp+0x28]
  4268f3:	mov    QWORD PTR [rax],rcx
  4268f6:	mov    QWORD PTR [rbx],rax
  4268f9:	mov    ecx,0x1
  4268fe:	jmp    0x426858
  426903:	xor    eax,eax
  426905:	jmp    0x4268b4
  426907:	nop    WORD PTR [rax+rax*1+0x0]
  426910:	push   r12
  426912:	push   rbp
  426913:	push   rdi
  426914:	push   rsi
  426915:	push   rbx
  426916:	sub    rsp,0x40
  42691a:	mov    rsi,QWORD PTR [rcx]
  42691d:	mov    rbx,rcx
  426920:	lea    rbp,[rdx+0x70]
  426924:	lea    rdi,[rdx+0x80]
  42692b:	lea    r12,[rsp+0x38]
  426930:	jmp    0x426939
  426932:	lea    r12,[rsi+0x8]
  426936:	mov    rbx,rax
  426939:	lea    rax,[rbx+0x28]
  42693d:	xor    r9d,r9d
  426940:	xor    r8d,r8d
  426943:	mov    rdx,rdi
  426946:	mov    rcx,rbp
  426949:	mov    QWORD PTR [rsp+0x20],rax
  42694e:	call   0x426840
  426953:	test   rax,rax
  426956:	mov    QWORD PTR [r12],rax
  42695a:	je     0x4269b5
  42695c:	mov    QWORD PTR [rax],rsi
  42695f:	mov    rax,QWORD PTR [r12]
  426963:	or     BYTE PTR [rax+0x32],0x4
  426967:	mov    rax,QWORD PTR [rbx+0x8]
  42696b:	mov    rsi,QWORD PTR [r12]
  42696f:	test   rax,rax
  426972:	jne    0x426932
  426974:	mov    r8,QWORD PTR [rbx+0x10]
  426978:	cmp    rax,r8
  42697b:	jne    0x42699a
  42697d:	nop    DWORD PTR [rax]
  426980:	mov    r8,QWORD PTR [rbx]
  426983:	mov    rsi,QWORD PTR [rsi]
  426986:	mov    rax,rbx
  426989:	test   r8,r8
  42698c:	je     0x4269b0
  42698e:	mov    rbx,r8
  426991:	mov    r8,QWORD PTR [rbx+0x10]
  426995:	cmp    rax,r8
  426998:	je     0x426980
  42699a:	test   r8,r8
  42699d:	je     0x426980
  42699f:	lea    r12,[rsi+0x10]
  4269a3:	mov    rbx,r8
  4269a6:	jmp    0x426939
  4269a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4269b0:	mov    rax,QWORD PTR [rsp+0x38]
  4269b5:	add    rsp,0x40
  4269b9:	pop    rbx
  4269ba:	pop    rsi
  4269bb:	pop    rdi
  4269bc:	pop    rbp
  4269bd:	pop    r12
  4269bf:	ret    
  4269c0:	push   r15
  4269c2:	push   r14
  4269c4:	push   r13
  4269c6:	push   r12
  4269c8:	push   rbp
  4269c9:	push   rdi
  4269ca:	push   rsi
  4269cb:	push   rbx
  4269cc:	sub    rsp,0x48
  4269d0:	test   BYTE PTR [rdx+0x38],0x10
  4269d4:	mov    rbx,QWORD PTR [rdx]
  4269d7:	mov    QWORD PTR [rsp+0x90],rcx
  4269df:	mov    rsi,r8
  4269e2:	mov    r13,QWORD PTR [r8+0x8]
  4269e6:	je     0x426b00
  4269ec:	test   r13,r13
  4269ef:	je     0x426b80
  4269f5:	mov    rax,QWORD PTR [r8+0x28]
  4269f9:	mov    r10,r13
  4269fc:	cmp    rax,0x1f
  426a00:	jg     0x426ae9
  426a06:	mov    edx,DWORD PTR [rbx+0xa0]
  426a0c:	bt     edx,eax
  426a0f:	jae    0x426ae9
  426a15:	lea    r14,[rbx+0x70]
  426a19:	lea    r15,[rsp+0x30]
  426a1e:	sub    rbx,0xffffffffffffff80
  426a22:	xor    r9d,r9d
  426a25:	xor    r8d,r8d
  426a28:	mov    rdx,rbx
  426a2b:	mov    rcx,r14
  426a2e:	mov    QWORD PTR [rsp+0x20],r15
  426a33:	mov    BYTE PTR [rsp+0x38],0x8
  426a38:	call   0x426840
  426a3d:	mov    QWORD PTR [rsp+0x20],r15
  426a42:	xor    r9d,r9d
  426a45:	xor    r8d,r8d
  426a48:	mov    rdx,rbx
  426a4b:	mov    rcx,r14
  426a4e:	mov    rbp,rax
  426a51:	mov    BYTE PTR [rsp+0x38],0x9
  426a56:	call   0x426840
  426a5b:	mov    rdi,rax
  426a5e:	mov    QWORD PTR [rsp+0x20],r15
  426a63:	mov    r9,rdi
  426a66:	mov    r8,r13
  426a69:	mov    rdx,rbx
  426a6c:	mov    rcx,r14
  426a6f:	mov    BYTE PTR [rsp+0x38],0x10
  426a74:	call   0x426840
  426a79:	mov    r12,rax
  426a7c:	mov    QWORD PTR [rsp+0x20],r15
  426a81:	mov    r9,r12
  426a84:	mov    r8,rbp
  426a87:	mov    rdx,rbx
  426a8a:	mov    rcx,r14
  426a8d:	mov    BYTE PTR [rsp+0x38],0x10
  426a92:	call   0x426840
  426a97:	test   rax,rax
  426a9a:	mov    r10,rax
  426a9d:	je     0x426b60
  426aa3:	test   r12,r12
  426aa6:	je     0x426b60
  426aac:	test   rbp,rbp
  426aaf:	je     0x426b60
  426ab5:	test   rdi,rdi
  426ab8:	je     0x426b60
  426abe:	mov    rax,QWORD PTR [rsi+0x28]
  426ac2:	mov    QWORD PTR [rdi+0x28],rax
  426ac6:	mov    QWORD PTR [rbp+0x28],rax
  426aca:	movzx  edx,BYTE PTR [rsi+0x32]
  426ace:	movzx  ecx,BYTE PTR [rdi+0x32]
  426ad2:	and    edx,0x8
  426ad5:	and    ecx,0xfffffff7
  426ad8:	or     ecx,edx
  426ada:	mov    BYTE PTR [rdi+0x32],cl
  426add:	movzx  eax,BYTE PTR [rbp+0x32]
  426ae1:	and    eax,0xfffffff7
  426ae4:	or     edx,eax
  426ae6:	mov    BYTE PTR [rbp+0x32],dl
  426ae9:	mov    rax,r10
  426aec:	add    rsp,0x48
  426af0:	pop    rbx
  426af1:	pop    rsi
  426af2:	pop    rdi
  426af3:	pop    rbp
  426af4:	pop    r12
  426af6:	pop    r13
  426af8:	pop    r14
  426afa:	pop    r15
  426afc:	ret    
  426afd:	nop    DWORD PTR [rax]
  426b00:	lea    r14,[rbx+0x70]
  426b04:	lea    r15,[rsp+0x30]
  426b09:	sub    rbx,0xffffffffffffff80
  426b0d:	xor    r9d,r9d
  426b10:	xor    r8d,r8d
  426b13:	mov    rdx,rbx
  426b16:	mov    rcx,r14
  426b19:	mov    QWORD PTR [rsp+0x20],r15
  426b1e:	mov    BYTE PTR [rsp+0x38],0x8
  426b23:	call   0x426840
  426b28:	xor    r9d,r9d
  426b2b:	xor    r8d,r8d
  426b2e:	mov    QWORD PTR [rsp+0x20],r15
  426b33:	mov    rdx,rbx
  426b36:	mov    rcx,r14
  426b39:	mov    rbp,rax
  426b3c:	mov    BYTE PTR [rsp+0x38],0x9
  426b41:	call   0x426840
  426b46:	test   r13,r13
  426b49:	mov    rdi,rax
  426b4c:	mov    r12,rax
  426b4f:	jne    0x426a5e
  426b55:	jmp    0x426a7c
  426b5a:	nop    WORD PTR [rax+rax*1+0x0]
  426b60:	mov    rax,QWORD PTR [rsp+0x90]
  426b68:	xor    r10d,r10d
  426b6b:	mov    DWORD PTR [rax],0xc
  426b71:	jmp    0x426ae9
  426b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b80:	lea    r14,[rbx+0x70]
  426b84:	lea    r15,[rsp+0x30]
  426b89:	sub    rbx,0xffffffffffffff80
  426b8d:	xor    r9d,r9d
  426b90:	xor    r8d,r8d
  426b93:	mov    rdx,rbx
  426b96:	mov    rcx,r14
  426b99:	mov    QWORD PTR [rsp+0x20],r15
  426b9e:	mov    BYTE PTR [rsp+0x38],0x8
  426ba3:	call   0x426840
  426ba8:	mov    QWORD PTR [rsp+0x20],r15
  426bad:	xor    r9d,r9d
  426bb0:	xor    r8d,r8d
  426bb3:	mov    rdx,rbx
  426bb6:	mov    rcx,r14
  426bb9:	mov    rbp,rax
  426bbc:	mov    BYTE PTR [rsp+0x38],0x9
  426bc1:	call   0x426840
  426bc6:	mov    r12,rax
  426bc9:	mov    rdi,rax
  426bcc:	jmp    0x426a7c
  426bd1:	nop    DWORD PTR [rax+rax*1+0x0]
  426bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426be0:	push   rsi
  426be1:	push   rbx
  426be2:	sub    rsp,0x38
  426be6:	mov    r8,QWORD PTR [rdx+0x8]
  426bea:	mov    rsi,rcx
  426bed:	mov    rbx,rdx
  426bf0:	mov    DWORD PTR [rsp+0x2c],0x0
  426bf8:	test   r8,r8
  426bfb:	je     0x426c04
  426bfd:	cmp    BYTE PTR [r8+0x30],0x11
  426c02:	je     0x426c44
  426c04:	mov    r8,QWORD PTR [rbx+0x10]
  426c08:	test   r8,r8
  426c0b:	je     0x426c14
  426c0d:	cmp    BYTE PTR [r8+0x30],0x11
  426c12:	je     0x426c20
  426c14:	mov    eax,DWORD PTR [rsp+0x2c]
  426c18:	add    rsp,0x38
  426c1c:	pop    rbx
  426c1d:	pop    rsi
  426c1e:	ret    
  426c1f:	nop
  426c20:	lea    rcx,[rsp+0x2c]
  426c25:	mov    rdx,rsi
  426c28:	call   0x4269c0
  426c2d:	test   rax,rax
  426c30:	mov    QWORD PTR [rbx+0x10],rax
  426c34:	je     0x426c14
  426c36:	mov    QWORD PTR [rax],rbx
  426c39:	mov    eax,DWORD PTR [rsp+0x2c]
  426c3d:	add    rsp,0x38
  426c41:	pop    rbx
  426c42:	pop    rsi
  426c43:	ret    
  426c44:	lea    rcx,[rsp+0x2c]
  426c49:	mov    rdx,rsi
  426c4c:	call   0x4269c0
  426c51:	test   rax,rax
  426c54:	mov    QWORD PTR [rbx+0x8],rax
  426c58:	je     0x426c04
  426c5a:	mov    QWORD PTR [rax],rbx
  426c5d:	jmp    0x426c04
  426c5f:	nop
  426c60:	push   r15
  426c62:	push   r14
  426c64:	push   r13
  426c66:	push   r12
  426c68:	push   rbp
  426c69:	push   rdi
  426c6a:	push   rsi
  426c6b:	push   rbx
  426c6c:	sub    rsp,0x38
  426c70:	xor    ebx,ebx
  426c72:	cmp    QWORD PTR [rdx],0x0
  426c76:	mov    rdi,QWORD PTR [rcx+0x98]
  426c7d:	mov    r13,rcx
  426c80:	mov    rbp,rdx
  426c83:	mov    r12,r8
  426c86:	mov    r15,r9
  426c89:	jg     0x426c9e
  426c8b:	jmp    0x426d30
  426c90:	add    rbx,0x1
  426c94:	cmp    rbx,QWORD PTR [rbp+0x0]
  426c98:	jge    0x426d30
  426c9e:	mov    rax,QWORD PTR [r12]
  426ca2:	mov    rsi,QWORD PTR [rax+rbx*8]
  426ca6:	mov    rax,rsi
  426ca9:	shl    rax,0x4
  426cad:	add    rax,QWORD PTR [rdi]
  426cb0:	cmp    BYTE PTR [rax+0x8],0x8
  426cb4:	jne    0x426c90
  426cb6:	mov    rax,QWORD PTR [rax]
  426cb9:	cmp    rax,0x1f
  426cbd:	jg     0x426c90
  426cbf:	mov    edx,DWORD PTR [rdi+0xa0]
  426cc5:	bt     edx,eax
  426cc8:	jae    0x426c90
  426cca:	mov    r8,QWORD PTR [r13+0xe8]
  426cd1:	cmp    r8,QWORD PTR [r13+0xf0]
  426cd8:	je     0x426d4a
  426cda:	mov    r14,QWORD PTR [r13+0xf8]
  426ce1:	mov    edx,0x30
  426ce6:	mov    ecx,0x1
  426ceb:	mov    QWORD PTR [rsp+0x28],r8
  426cf0:	call   0x43a798
  426cf5:	mov    r8,QWORD PTR [rsp+0x28]
  426cfa:	mov    QWORD PTR [r14+r8*8],rax
  426cfe:	mov    rax,QWORD PTR [r13+0xf8]
  426d05:	mov    rax,QWORD PTR [rax+r8*8]
  426d09:	test   rax,rax
  426d0c:	je     0x426d43
  426d0e:	add    r8,0x1
  426d12:	mov    QWORD PTR [rax+0x8],rsi
  426d16:	add    rbx,0x1
  426d1a:	mov    QWORD PTR [r13+0xe8],r8
  426d21:	mov    QWORD PTR [rax],r15
  426d24:	cmp    rbx,QWORD PTR [rbp+0x0]
  426d28:	jl     0x426c9e
  426d2e:	xchg   ax,ax
  426d30:	xor    eax,eax
  426d32:	add    rsp,0x38
  426d36:	pop    rbx
  426d37:	pop    rsi
  426d38:	pop    rdi
  426d39:	pop    rbp
  426d3a:	pop    r12
  426d3c:	pop    r13
  426d3e:	pop    r14
  426d40:	pop    r15
  426d42:	ret    
  426d43:	mov    eax,0xc
  426d48:	jmp    0x426d32
  426d4a:	mov    rcx,QWORD PTR [r13+0xf8]
  426d51:	mov    rdx,r8
  426d54:	lea    r14,[r8+r8*1]
  426d58:	shl    rdx,0x4
  426d5c:	call   0x43a680
  426d61:	test   rax,rax
  426d64:	je     0x426d43
  426d66:	mov    QWORD PTR [r13+0xf0],r14
  426d6d:	mov    QWORD PTR [r13+0xf8],rax
  426d74:	mov    r14,rax
  426d77:	mov    r8,QWORD PTR [r13+0xe8]
  426d7e:	jmp    0x426ce1
  426d83:	nop    DWORD PTR [rax]
  426d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d90:	push   r15
  426d92:	push   r14
  426d94:	push   r13
  426d96:	push   r12
  426d98:	push   rbp
  426d99:	push   rdi
  426d9a:	push   rsi
  426d9b:	push   rbx
  426d9c:	sub    rsp,0x188
  426da3:	mov    rax,QWORD PTR [rcx]
  426da6:	xor    ebx,ebx
  426da8:	cmp    DWORD PTR [rax+0xac],0x1
  426daf:	mov    QWORD PTR [rsp+0x28],rax
  426db4:	je     0x4271b5
  426dba:	cmp    QWORD PTR [rdx],0x0
  426dbe:	mov    QWORD PTR [rsp+0x20],0x0
  426dc7:	jle    0x4271a1
  426dcd:	lea    rax,[rsp+0x7c]
  426dd2:	mov    rsi,r9
  426dd5:	mov    QWORD PTR [rsp+0x40],r8
  426dda:	mov    QWORD PTR [rsp+0x38],rdx
  426ddf:	mov    QWORD PTR [rsp+0x50],rcx
  426de4:	mov    QWORD PTR [rsp+0x58],rax
  426de9:	lea    rax,[rsp+0x7a]
  426dee:	mov    QWORD PTR [rsp+0x68],rax
  426df3:	lea    rax,[rsp+0x80]
  426dfb:	mov    QWORD PTR [rsp+0x48],rax
  426e00:	mov    rax,QWORD PTR [rip+0x2dd89]        # 0x454b90
  426e07:	mov    QWORD PTR [rsp+0x60],rax
  426e0c:	mov    rdi,rax
  426e0f:	jmp    0x426e51
  426e11:	cmp    edx,0x3
  426e14:	je     0x426fa5
  426e1a:	cmp    edx,0x6
  426e1d:	je     0x427017
  426e23:	and    ecx,0xfffffffd
  426e26:	cmp    cl,0x5
  426e29:	je     0x4271c3
  426e2f:	cmp    edx,0x2
  426e32:	je     0x42716a
  426e38:	mov    rdx,QWORD PTR [rsp+0x38]
  426e3d:	add    QWORD PTR [rsp+0x20],0x1
  426e43:	mov    rax,QWORD PTR [rsp+0x20]
  426e48:	cmp    rax,QWORD PTR [rdx]
  426e4b:	jge    0x4271a1
  426e51:	mov    rax,QWORD PTR [rsp+0x40]
  426e56:	mov    rdx,QWORD PTR [rsp+0x20]
  426e5b:	mov    rax,QWORD PTR [rax]
  426e5e:	mov    rbp,QWORD PTR [rax+rdx*8]
  426e62:	mov    rax,QWORD PTR [rsp+0x28]
  426e67:	mov    rax,QWORD PTR [rax]
  426e6a:	mov    rdx,rbp
  426e6d:	shl    rdx,0x4
  426e71:	mov    QWORD PTR [rsp+0x30],rdx
  426e76:	lea    r8,[rax+rdx*1]
  426e7a:	movzx  edx,BYTE PTR [r8+0x8]
  426e7f:	cmp    edx,0x1
  426e82:	mov    ecx,edx
  426e84:	jne    0x426e11
  426e86:	movzx  edx,BYTE PTR [r8]
  426e8a:	test   ebx,ebx
  426e8c:	mov    BYTE PTR [rsi+rdx*1],0x1
  426e90:	je     0x426ea1
  426e92:	movzx  ecx,dl
  426e95:	call   QWORD PTR [rip+0x2dcf5]        # 0x454b90
  426e9b:	cdqe   
  426e9d:	mov    BYTE PTR [rsi+rax*1],0x1
  426ea1:	mov    rax,QWORD PTR [rsp+0x50]
  426ea6:	test   BYTE PTR [rax+0x1a],0x40
  426eaa:	je     0x426e38
  426eac:	mov    r9,QWORD PTR [rsp+0x28]
  426eb1:	cmp    DWORD PTR [r9+0xac],0x1
  426eb9:	jle    0x426e38
  426ebf:	mov    rax,QWORD PTR [r9]
  426ec2:	mov    r10,QWORD PTR [rsp+0x30]
  426ec7:	lea    r8,[rbp+0x1]
  426ecb:	movzx  edx,BYTE PTR [rax+r10*1]
  426ed0:	mov    BYTE PTR [rsp+0x80],dl
  426ed7:	cmp    r8,QWORD PTR [r9+0x10]
  426edb:	jae    0x427200
  426ee1:	lea    rcx,[rax+r10*1+0x10]
  426ee6:	mov    rdx,r10
  426ee9:	mov    eax,DWORD PTR [rcx+0x8]
  426eec:	and    eax,0x2000ff
  426ef1:	cmp    eax,0x200001
  426ef6:	jne    0x427200
  426efc:	mov    rax,QWORD PTR [rsp+0x48]
  426f01:	add    rdx,0x20
  426f05:	mov    r12,rdx
  426f08:	lea    rdx,[rax+0x1]
  426f0c:	jmp    0x426f29
  426f0e:	xchg   ax,ax
  426f10:	mov    rcx,r12
  426f13:	add    rcx,QWORD PTR [r9]
  426f16:	add    r12,0x10
  426f1a:	mov    eax,DWORD PTR [rcx+0x8]
  426f1d:	and    eax,0x2000ff
  426f22:	cmp    eax,0x200001
  426f27:	jne    0x426f3d
  426f29:	movzx  eax,BYTE PTR [rcx]
  426f2c:	add    rdx,0x1
  426f30:	add    r8,0x1
  426f34:	mov    BYTE PTR [rdx-0x1],al
  426f37:	cmp    r8,QWORD PTR [r9+0x10]
  426f3b:	jb     0x426f10
  426f3d:	mov    rax,QWORD PTR [rsp+0x48]
  426f42:	mov    rbp,rdx
  426f45:	mov    r9,QWORD PTR [rsp+0x58]
  426f4a:	mov    rcx,QWORD PTR [rsp+0x68]
  426f4f:	mov    DWORD PTR [rsp+0x7c],0x0
  426f57:	sub    rbp,rax
  426f5a:	mov    rdx,rax
  426f5d:	mov    r8,rbp
  426f60:	call   0x423f00
  426f65:	cmp    rbp,rax
  426f68:	jne    0x426e38
  426f6e:	movzx  ecx,WORD PTR [rsp+0x7a]
  426f73:	call   0x43a5d8
  426f78:	mov    r8,QWORD PTR [rsp+0x58]
  426f7d:	mov    rcx,QWORD PTR [rsp+0x48]
  426f82:	movzx  edx,ax
  426f85:	call   0x435b50
  426f8a:	cmp    rax,0xffffffffffffffff
  426f8e:	je     0x426e38
  426f94:	movzx  eax,BYTE PTR [rsp+0x80]
  426f9c:	mov    BYTE PTR [rsi+rax*1],0x1
  426fa0:	jmp    0x426e38
  426fa5:	xor    ebp,ebp
  426fa7:	mov    r14,rsi
  426faa:	mov    r15d,ebx
  426fad:	nop    DWORD PTR [rax]
  426fb0:	mov    rdx,QWORD PTR [rsp+0x30]
  426fb5:	lea    r13d,[rbp*8+0x0]
  426fbd:	xor    r12d,r12d
  426fc0:	mov    rax,QWORD PTR [rax+rdx*1]
  426fc4:	mov    ebx,DWORD PTR [rax+rbp*1]
  426fc7:	nop    WORD PTR [rax+rax*1+0x0]
  426fd0:	bt     ebx,r12d
  426fd4:	lea    ecx,[r13+r12*1+0x0]
  426fd9:	jae    0x426fed
  426fdb:	test   r15d,r15d
  426fde:	mov    BYTE PTR [r14+r12*1],0x1
  426fe3:	je     0x426fed
  426fe5:	call   rdi
  426fe7:	cdqe   
  426fe9:	mov    BYTE PTR [rsi+rax*1],0x1
  426fed:	add    r12,0x1
  426ff1:	cmp    r12,0x20
  426ff5:	jne    0x426fd0
  426ff7:	add    rbp,0x4
  426ffb:	add    r14,0x20
  426fff:	cmp    rbp,0x20
  427003:	je     0x42700f
  427005:	mov    rax,QWORD PTR [rsp+0x28]
  42700a:	mov    rax,QWORD PTR [rax]
  42700d:	jmp    0x426fb0
  42700f:	mov    ebx,r15d
  427012:	jmp    0x426e38
  427017:	mov    rax,QWORD PTR [rsp+0x28]
  42701c:	mov    rbp,QWORD PTR [r8]
  42701f:	cmp    DWORD PTR [rax+0xac],0x1
  427026:	jle    0x427048
  427028:	cmp    QWORD PTR [rbp+0x48],0x0
  42702d:	jne    0x42711b
  427033:	test   BYTE PTR [rbp+0x20],0x1
  427037:	jne    0x42711b
  42703d:	cmp    QWORD PTR [rbp+0x40],0x0
  427042:	jne    0x42711b
  427048:	xor    r12d,r12d
  42704b:	cmp    QWORD PTR [rbp+0x28],0x0
  427050:	jle    0x426e38
  427056:	mov    QWORD PTR [rsp+0x30],rdi
  42705b:	mov    r13,QWORD PTR [rsp+0x58]
  427060:	mov    edi,ebx
  427062:	mov    r14,QWORD PTR [rsp+0x48]
  427067:	mov    rbx,QWORD PTR [rsp+0x50]
  42706c:	mov    rax,r12
  42706f:	mov    r12,rbp
  427072:	mov    rbp,rax
  427075:	mov    rax,QWORD PTR [r12]
  427079:	mov    r8,r13
  42707c:	mov    rcx,r14
  42707f:	mov    DWORD PTR [rsp+0x7c],0x0
  427087:	lea    r15,[rbp+rbp*1+0x0]
  42708c:	movzx  edx,WORD PTR [rax+rbp*2]
  427090:	call   0x435b50
  427095:	cmp    rax,0xffffffffffffffff
  427099:	je     0x4270bb
  42709b:	movzx  edx,BYTE PTR [rsp+0x80]
  4270a3:	test   edi,edi
  4270a5:	mov    BYTE PTR [rsi+rdx*1],0x1
  4270a9:	je     0x4270bb
  4270ab:	movzx  ecx,dl
  4270ae:	mov    rax,QWORD PTR [rsp+0x60]
  4270b3:	call   rax
  4270b5:	cdqe   
  4270b7:	mov    BYTE PTR [rsi+rax*1],0x1
  4270bb:	test   BYTE PTR [rbx+0x1a],0x40
  4270bf:	je     0x427100
  4270c1:	mov    rax,QWORD PTR [rsp+0x28]
  4270c6:	cmp    DWORD PTR [rax+0xac],0x1
  4270cd:	jle    0x427100
  4270cf:	mov    rax,QWORD PTR [r12]
  4270d3:	movzx  ecx,WORD PTR [rax+r15*1]
  4270d8:	call   0x43a5d8
  4270dd:	mov    r8,r13
  4270e0:	movzx  edx,ax
  4270e3:	mov    rcx,r14
  4270e6:	call   0x435b50
  4270eb:	cmp    rax,0xffffffffffffffff
  4270ef:	je     0x427100
  4270f1:	movzx  eax,BYTE PTR [rsp+0x80]
  4270f9:	mov    BYTE PTR [rsi+rax*1],0x1
  4270fd:	nop    DWORD PTR [rax]
  427100:	add    rbp,0x1
  427104:	cmp    rbp,QWORD PTR [r12+0x28]
  427109:	jl     0x427075
  42710f:	mov    ebx,edi
  427111:	mov    rdi,QWORD PTR [rsp+0x30]
  427116:	jmp    0x426e38
  42711b:	mov    BYTE PTR [rsp+0x7c],0x0
  427120:	mov    rbp,QWORD PTR [rsp+0x58]
  427125:	mov    r12,QWORD PTR [rsp+0x48]
  42712a:	jmp    0x42713b
  42712c:	nop    DWORD PTR [rax+0x0]
  427130:	add    BYTE PTR [rsp+0x7c],0x1
  427135:	je     0x426e38
  42713b:	xor    ecx,ecx
  42713d:	mov    r9,r12
  427140:	mov    r8d,0x1
  427146:	mov    rdx,rbp
  427149:	mov    DWORD PTR [rsp+0x80],0x0
  427154:	call   0x423f00
  427159:	cmp    rax,0xfffffffffffffffe
  42715d:	jne    0x427130
  42715f:	movzx  eax,BYTE PTR [rsp+0x7c]
  427164:	mov    BYTE PTR [rsi+rax*1],0x1
  427168:	jmp    0x427130
  42716a:	lea    rdi,[rsi+0x8]
  42716e:	movabs rax,0x101010101010101
  427178:	mov    QWORD PTR [rsi],rax
  42717b:	mov    QWORD PTR [rsi+0xf8],rax
  427182:	and    rdi,0xfffffffffffffff8
  427186:	sub    rsi,rdi
  427189:	mov    rcx,rsi
  42718c:	add    ecx,0x100
  427192:	shr    ecx,0x3
  427195:	rep stos QWORD PTR es:[rdi],rax
  427198:	mov    rax,QWORD PTR [rsp+0x50]
  42719d:	or     BYTE PTR [rax+0x38],0x1
  4271a1:	add    rsp,0x188
  4271a8:	pop    rbx
  4271a9:	pop    rsi
  4271aa:	pop    rdi
  4271ab:	pop    rbp
  4271ac:	pop    r12
  4271ae:	pop    r13
  4271b0:	pop    r14
  4271b2:	pop    r15
  4271b4:	ret    
  4271b5:	mov    ebx,DWORD PTR [rcx+0x18]
  4271b8:	shr    ebx,0x16
  4271bb:	and    ebx,0x1
  4271be:	jmp    0x426dba
  4271c3:	lea    rdi,[rsi+0x8]
  4271c7:	movabs rax,0x101010101010101
  4271d1:	mov    QWORD PTR [rsi],rax
  4271d4:	mov    QWORD PTR [rsi+0xf8],rax
  4271db:	and    rdi,0xfffffffffffffff8
  4271df:	sub    rsi,rdi
  4271e2:	mov    rcx,rsi
  4271e5:	add    ecx,0x100
  4271eb:	shr    ecx,0x3
  4271ee:	cmp    edx,0x2
  4271f1:	rep stos QWORD PTR es:[rdi],rax
  4271f4:	jne    0x4271a1
  4271f6:	jmp    0x427198
  4271f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427200:	mov    rax,QWORD PTR [rsp+0x48]
  427205:	lea    rdx,[rax+0x1]
  427209:	jmp    0x426f3d
  42720e:	xchg   ax,ax
  427210:	push   rdi
  427211:	push   rsi
  427212:	push   rbx
  427213:	sub    rsp,0x20
  427217:	test   rdx,rdx
  42721a:	je     0x427313
  427220:	mov    rax,QWORD PTR [rdx+0x8]
  427224:	test   rax,rax
  427227:	je     0x427313
  42722d:	mov    r8,QWORD PTR [rcx+0x8]
  427231:	mov    rdi,rdx
  427234:	mov    rdx,QWORD PTR [rcx]
  427237:	mov    rsi,rcx
  42723a:	lea    rcx,[r8+rax*2]
  42723e:	cmp    rdx,rcx
  427241:	jl     0x427370
  427247:	test   r8,r8
  42724a:	je     0x4273a1
  427250:	lea    rbx,[r8+rax*2]
  427254:	sub    r8,0x1
  427258:	sub    rax,0x1
  42725c:	mov    r10,r8
  42725f:	not    r10
  427262:	mov    rcx,r10
  427265:	shr    rcx,0x3f
  427269:	test   cl,cl
  42726b:	je     0x4272a5
  42726d:	test   rax,rax
  427270:	js     0x4272a5
  427272:	mov    rcx,QWORD PTR [rsi+0x10]
  427276:	mov    rdx,QWORD PTR [rdi+0x10]
  42727a:	mov    r9,QWORD PTR [rdx+rax*8]
  42727e:	cmp    QWORD PTR [rcx+r8*8],r9
  427282:	je     0x427354
  427288:	jge    0x427345
  42728e:	sub    rbx,0x1
  427292:	sub    rax,0x1
  427296:	mov    QWORD PTR [rcx+rbx*8],r9
  42729a:	mov    rcx,r10
  42729d:	shr    rcx,0x3f
  4272a1:	test   cl,cl
  4272a3:	jne    0x42726d
  4272a5:	test   rax,rax
  4272a8:	js     0x4272cc
  4272aa:	mov    rdx,rax
  4272ad:	lea    r8,[rax*8+0x8]
  4272b5:	not    rdx
  4272b8:	add    rbx,rdx
  4272bb:	mov    rdx,QWORD PTR [rsi+0x10]
  4272bf:	lea    rcx,[rdx+rbx*8]
  4272c3:	mov    rdx,QWORD PTR [rdi+0x10]
  4272c7:	call   0x43a6b8
  4272cc:	mov    rdx,QWORD PTR [rsi+0x8]
  4272d0:	mov    rax,QWORD PTR [rdi+0x8]
  4272d4:	lea    r10,[rdx+rax*2-0x1]
  4272d9:	mov    r8,r10
  4272dc:	sub    r8,rbx
  4272df:	add    r8,0x1
  4272e3:	je     0x427313
  4272e5:	mov    rcx,QWORD PTR [rsi+0x10]
  4272e9:	lea    rax,[rdx-0x1]
  4272ed:	add    rdx,r8
  4272f0:	mov    QWORD PTR [rsi+0x8],rdx
  4272f4:	mov    r9,QWORD PTR [rcx+r10*8]
  4272f8:	mov    rdx,QWORD PTR [rcx+rax*8]
  4272fc:	cmp    r9,rdx
  4272ff:	jle    0x427320
  427301:	lea    rdx,[rax+r8*1]
  427305:	sub    r10,0x1
  427309:	sub    r8,0x1
  42730d:	mov    QWORD PTR [rcx+rdx*8],r9
  427311:	jne    0x4272f4
  427313:	xor    eax,eax
  427315:	add    rsp,0x20
  427319:	pop    rbx
  42731a:	pop    rsi
  42731b:	pop    rdi
  42731c:	ret    
  42731d:	nop    DWORD PTR [rax]
  427320:	lea    r9,[rax+r8*1]
  427324:	sub    rax,0x1
  427328:	mov    QWORD PTR [rcx+r9*8],rdx
  42732c:	jns    0x4272f4
  42732e:	lea    rdx,[rcx+rbx*8]
  427332:	shl    r8,0x3
  427336:	call   0x43a6b8
  42733b:	xor    eax,eax
  42733d:	add    rsp,0x20
  427341:	pop    rbx
  427342:	pop    rsi
  427343:	pop    rdi
  427344:	ret    
  427345:	sub    r8,0x1
  427349:	mov    r10,r8
  42734c:	not    r10
  42734f:	jmp    0x427262
  427354:	sub    r8,0x1
  427358:	sub    rax,0x1
  42735c:	mov    r10,r8
  42735f:	not    r10
  427362:	jmp    0x427262
  427367:	nop    WORD PTR [rax+rax*1+0x0]
  427370:	mov    rcx,QWORD PTR [rsi+0x10]
  427374:	add    rdx,rax
  427377:	lea    rbx,[rdx+rdx*1]
  42737b:	shl    rdx,0x4
  42737f:	call   0x43a680
  427384:	test   rax,rax
  427387:	je     0x4273bf
  427389:	mov    r8,QWORD PTR [rsi+0x8]
  42738d:	mov    QWORD PTR [rsi+0x10],rax
  427391:	mov    QWORD PTR [rsi],rbx
  427394:	mov    rax,QWORD PTR [rdi+0x8]
  427398:	test   r8,r8
  42739b:	jne    0x427250
  4273a1:	mov    QWORD PTR [rsi+0x8],rax
  4273a5:	mov    r8,QWORD PTR [rdi+0x8]
  4273a9:	mov    rcx,QWORD PTR [rsi+0x10]
  4273ad:	mov    rdx,QWORD PTR [rdi+0x10]
  4273b1:	shl    r8,0x3
  4273b5:	call   0x43a6b8
  4273ba:	jmp    0x427313
  4273bf:	mov    eax,0xc
  4273c4:	jmp    0x427315
  4273c9:	nop    DWORD PTR [rax+0x0]
  4273d0:	push   r15
  4273d2:	push   r14
  4273d4:	push   r13
  4273d6:	push   r12
  4273d8:	push   rbp
  4273d9:	push   rdi
  4273da:	push   rsi
  4273db:	push   rbx
  4273dc:	sub    rsp,0x88
  4273e3:	mov    rax,QWORD PTR [rdx+0x28]
  4273e7:	lea    rdi,[r8+r8*2]
  4273eb:	mov    QWORD PTR [rsp+0xd0],rcx
  4273f3:	mov    r15,rdx
  4273f6:	mov    rbp,r8
  4273f9:	mov    DWORD PTR [rsp+0x3c],r9d
  4273fe:	shl    rdi,0x3
  427402:	mov    rcx,QWORD PTR [rax+rdi*1+0x8]
  427407:	mov    QWORD PTR [rsp+0x48],0x0
  427410:	add    rcx,0x1
  427414:	mov    QWORD PTR [rsp+0x40],rcx
  427419:	shl    rcx,0x3
  42741d:	call   0x423ec0
  427422:	test   rax,rax
  427425:	mov    QWORD PTR [rsp+0x50],rax
  42742a:	je     0x4275da
  427430:	mov    rax,QWORD PTR [r15+0x30]
  427434:	mov    rcx,QWORD PTR [r15]
  427437:	mov    rbx,rbp
  42743a:	shl    rbx,0x4
  42743e:	mov    QWORD PTR [rax+rdi*1+0x8],0xffffffffffffffff
  427447:	lea    rax,[rcx+rbx*1]
  42744b:	mov    edx,DWORD PTR [rax+0x8]
  42744e:	test   edx,0x3ff00
  427454:	jne    0x4275e1
  42745a:	test   BYTE PTR [rax+0x8],0x8
  42745e:	je     0x4275c5
  427464:	mov    rcx,QWORD PTR [r15+0x28]
  427468:	lea    rax,[rcx+rdi*1]
  42746c:	cmp    QWORD PTR [rax+0x8],0x0
  427471:	jle    0x4275c5
  427477:	xor    r13d,r13d
  42747a:	xor    esi,esi
  42747c:	lea    r12,[rsp+0x40]
  427481:	jmp    0x4274e0
  427483:	test   rdx,rdx
  427486:	je     0x427590
  42748c:	mov    rdx,QWORD PTR [rax]
  42748f:	lea    r14,[rsp+0x60]
  427494:	mov    QWORD PTR [rsp+0x60],rdx
  427499:	mov    rdx,QWORD PTR [rax+0x8]
  42749d:	mov    QWORD PTR [rsp+0x68],rdx
  4274a2:	mov    rax,QWORD PTR [rax+0x10]
  4274a6:	mov    QWORD PTR [rsp+0x70],rax
  4274ab:	mov    rdx,r14
  4274ae:	mov    rcx,r12
  4274b1:	call   0x427210
  4274b6:	test   eax,eax
  4274b8:	jne    0x42757a
  4274be:	mov    rax,QWORD PTR [r15+0x30]
  4274c2:	cmp    QWORD PTR [rax+rbx*1+0x8],0x0
  4274c8:	je     0x4275b0
  4274ce:	mov    rcx,QWORD PTR [r15+0x28]
  4274d2:	add    rsi,0x1
  4274d6:	lea    rax,[rcx+rdi*1]
  4274da:	cmp    QWORD PTR [rax+0x8],rsi
  4274de:	jle    0x427515
  4274e0:	mov    rax,QWORD PTR [rax+0x10]
  4274e4:	mov    r8,QWORD PTR [rax+rsi*8]
  4274e8:	lea    rbx,[r8+r8*2]
  4274ec:	shl    rbx,0x3
  4274f0:	mov    rax,rbx
  4274f3:	add    rax,QWORD PTR [r15+0x30]
  4274f7:	mov    rdx,QWORD PTR [rax+0x8]
  4274fb:	cmp    rdx,0xffffffffffffffff
  4274ff:	jne    0x427483
  427501:	lea    rax,[rcx+rdi*1]
  427505:	add    rsi,0x1
  427509:	mov    r13d,0x1
  42750f:	cmp    QWORD PTR [rax+0x8],rsi
  427513:	jg     0x4274e0
  427515:	lea    rcx,[rsp+0x40]
  42751a:	mov    rdx,rbp
  42751d:	call   0x424ce0
  427522:	test   al,al
  427524:	je     0x4275da
  42752a:	cmp    r13b,BYTE PTR [rsp+0x3c]
  42752f:	ja     0x427640
  427535:	mov    rdx,QWORD PTR [rsp+0x40]
  42753a:	mov    rax,QWORD PTR [r15+0x30]
  42753e:	mov    QWORD PTR [rax+rdi*1],rdx
  427542:	mov    rdx,QWORD PTR [rsp+0x48]
  427547:	mov    QWORD PTR [rax+rdi*1+0x8],rdx
  42754c:	mov    rdx,QWORD PTR [rsp+0x50]
  427551:	mov    QWORD PTR [rax+rdi*1+0x10],rdx
  427556:	mov    rdi,QWORD PTR [rsp+0xd0]
  42755e:	mov    rax,QWORD PTR [rsp+0x40]
  427563:	mov    QWORD PTR [rdi],rax
  427566:	mov    rax,QWORD PTR [rsp+0x48]
  42756b:	mov    QWORD PTR [rdi+0x8],rax
  42756f:	mov    rax,QWORD PTR [rsp+0x50]
  427574:	mov    QWORD PTR [rdi+0x10],rax
  427578:	xor    eax,eax
  42757a:	add    rsp,0x88
  427581:	pop    rbx
  427582:	pop    rsi
  427583:	pop    rdi
  427584:	pop    rbp
  427585:	pop    r12
  427587:	pop    r13
  427589:	pop    r14
  42758b:	pop    r15
  42758d:	ret    
  42758e:	xchg   ax,ax
  427590:	lea    r14,[rsp+0x60]
  427595:	xor    r9d,r9d
  427598:	mov    rdx,r15
  42759b:	mov    rcx,r14
  42759e:	call   0x4273d0
  4275a3:	test   eax,eax
  4275a5:	je     0x4274ab
  4275ab:	jmp    0x42757a
  4275ad:	nop    DWORD PTR [rax]
  4275b0:	mov    rcx,QWORD PTR [rsp+0x70]
  4275b5:	mov    r13d,0x1
  4275bb:	call   0x43a748
  4275c0:	jmp    0x4274ce
  4275c5:	lea    rcx,[rsp+0x40]
  4275ca:	mov    rdx,rbp
  4275cd:	call   0x424ce0
  4275d2:	test   al,al
  4275d4:	jne    0x427535
  4275da:	mov    eax,0xc
  4275df:	jmp    0x42757a
  4275e1:	mov    r8,rdi
  4275e4:	add    r8,QWORD PTR [r15+0x28]
  4275e8:	cmp    QWORD PTR [r8+0x8],0x0
  4275ed:	je     0x4275c5
  4275ef:	mov    r8,QWORD PTR [r8+0x10]
  4275f3:	mov    r8,QWORD PTR [r8]
  4275f6:	shl    r8,0x4
  4275fa:	test   BYTE PTR [rcx+r8*1+0xa],0x4
  427600:	jne    0x42745a
  427606:	shr    edx,0x8
  427609:	mov    r9,rbp
  42760c:	mov    r8,rbp
  42760f:	and    edx,0x3ff
  427615:	mov    rcx,r15
  427618:	mov    DWORD PTR [rsp+0x20],edx
  42761c:	mov    rdx,rbp
  42761f:	call   0x425b90
  427624:	test   eax,eax
  427626:	jne    0x42757a
  42762c:	mov    rax,rbx
  42762f:	add    rax,QWORD PTR [r15]
  427632:	jmp    0x42745a
  427637:	nop    WORD PTR [rax+rax*1+0x0]
  427640:	mov    rax,QWORD PTR [r15+0x30]
  427644:	mov    QWORD PTR [rax+rdi*1+0x8],0x0
  42764d:	jmp    0x427556
  427652:	nop    DWORD PTR [rax+0x0]
  427656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427660:	push   r15
  427662:	push   r14
  427664:	push   r13
  427666:	push   r12
  427668:	push   rbp
  427669:	push   rdi
  42766a:	push   rsi
  42766b:	push   rbx
  42766c:	sub    rsp,0x68
  427670:	mov    rax,QWORD PTR [rdx+0x8]
  427674:	mov    r12,rcx
  427677:	mov    r13,rdx
  42767a:	mov    rsi,r8
  42767d:	mov    ebx,r9d
  427680:	mov    QWORD PTR [rsp+0x48],0x0
  427689:	lea    rcx,[rax*8+0x0]
  427691:	mov    QWORD PTR [rsp+0x40],rax
  427696:	call   0x423ec0
  42769b:	test   rax,rax
  42769e:	mov    QWORD PTR [rsp+0x50],rax
  4276a3:	je     0x427793
  4276a9:	xor    edi,edi
  4276ab:	cmp    QWORD PTR [r13+0x8],0x0
  4276b0:	lea    rbp,[rsp+0x40]
  4276b5:	jle    0x42773c
  4276bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4276c0:	mov    rax,QWORD PTR [r13+0x10]
  4276c4:	mov    r8,QWORD PTR [rax+rdi*8]
  4276c8:	mov    rax,QWORD PTR [r12+0x30]
  4276cd:	lea    rdx,[r8+r8*2]
  4276d1:	lea    rdx,[rax+rdx*8]
  4276d5:	mov    rcx,QWORD PTR [rdx+0x8]
  4276d9:	test   rcx,rcx
  4276dc:	jle    0x427764
  4276e2:	mov    r14,QWORD PTR [rdx+0x10]
  4276e6:	mov    r9,QWORD PTR [r12]
  4276ea:	xor    r10d,r10d
  4276ed:	jmp    0x4276f9
  4276ef:	nop
  4276f0:	add    r10,0x1
  4276f4:	cmp    r10,rcx
  4276f7:	je     0x427764
  4276f9:	mov    r11,QWORD PTR [r14+r10*8]
  4276fd:	mov    rax,r11
  427700:	shl    rax,0x4
  427704:	add    rax,r9
  427707:	movzx  r15d,BYTE PTR [rax+0x8]
  42770c:	cmp    ebx,r15d
  42770f:	jne    0x4276f0
  427711:	cmp    rsi,QWORD PTR [rax]
  427714:	jne    0x4276f0
  427716:	cmp    r11,0xffffffffffffffff
  42771a:	je     0x427764
  42771c:	mov    DWORD PTR [rsp+0x20],ebx
  427720:	mov    r9,rsi
  427723:	mov    rdx,rbp
  427726:	mov    rcx,r12
  427729:	call   0x426470
  42772e:	test   eax,eax
  427730:	jne    0x427770
  427732:	add    rdi,0x1
  427736:	cmp    QWORD PTR [r13+0x8],rdi
  42773a:	jg     0x4276c0
  42773c:	mov    rcx,QWORD PTR [r13+0x10]
  427740:	call   0x43a748
  427745:	mov    rax,QWORD PTR [rsp+0x40]
  42774a:	mov    QWORD PTR [r13+0x0],rax
  42774e:	mov    rax,QWORD PTR [rsp+0x48]
  427753:	mov    QWORD PTR [r13+0x8],rax
  427757:	mov    rax,QWORD PTR [rsp+0x50]
  42775c:	mov    QWORD PTR [r13+0x10],rax
  427760:	xor    eax,eax
  427762:	jmp    0x427782
  427764:	mov    rcx,rbp
  427767:	call   0x427210
  42776c:	test   eax,eax
  42776e:	je     0x427732
  427770:	mov    rcx,QWORD PTR [rsp+0x50]
  427775:	mov    DWORD PTR [rsp+0x3c],eax
  427779:	call   0x43a748
  42777e:	mov    eax,DWORD PTR [rsp+0x3c]
  427782:	add    rsp,0x68
  427786:	pop    rbx
  427787:	pop    rsi
  427788:	pop    rdi
  427789:	pop    rbp
  42778a:	pop    r12
  42778c:	pop    r13
  42778e:	pop    r14
  427790:	pop    r15
  427792:	ret    
  427793:	mov    eax,0xc
  427798:	jmp    0x427782
  42779a:	nop    WORD PTR [rax+rax*1+0x0]
  4277a0:	push   rsi
  4277a1:	push   rbx
  4277a2:	sub    rsp,0x28
  4277a6:	mov    rax,QWORD PTR [rdx+0x8]
  4277aa:	mov    QWORD PTR [rcx+0x8],rax
  4277ae:	cmp    QWORD PTR [rdx+0x8],0x0
  4277b3:	jle    0x4277f1
  4277b5:	mov    rbx,rcx
  4277b8:	mov    QWORD PTR [rcx],rax
  4277bb:	lea    rcx,[rax*8+0x0]
  4277c3:	mov    rsi,rdx
  4277c6:	call   0x423ec0
  4277cb:	test   rax,rax
  4277ce:	mov    QWORD PTR [rbx+0x10],rax
  4277d2:	je     0x427811
  4277d4:	mov    r8,QWORD PTR [rsi+0x8]
  4277d8:	mov    rdx,QWORD PTR [rsi+0x10]
  4277dc:	mov    rcx,rax
  4277df:	shl    r8,0x3
  4277e3:	call   0x43a6b8
  4277e8:	xor    eax,eax
  4277ea:	add    rsp,0x28
  4277ee:	pop    rbx
  4277ef:	pop    rsi
  4277f0:	ret    
  4277f1:	xor    eax,eax
  4277f3:	mov    QWORD PTR [rcx],0x0
  4277fa:	mov    QWORD PTR [rcx+0x8],0x0
  427802:	mov    QWORD PTR [rcx+0x10],0x0
  42780a:	add    rsp,0x28
  42780e:	pop    rbx
  42780f:	pop    rsi
  427810:	ret    
  427811:	mov    QWORD PTR [rbx+0x8],0x0
  427819:	mov    QWORD PTR [rbx],0x0
  427820:	mov    al,0xc
  427822:	jmp    0x4277ea
  427824:	xchg   ax,ax
  427826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427830:	push   r13
  427832:	push   r12
  427834:	push   rbp
  427835:	push   rdi
  427836:	push   rsi
  427837:	push   rbx
  427838:	sub    rsp,0x28
  42783c:	test   rdx,rdx
  42783f:	je     0x4278f8
  427845:	mov    r9,QWORD PTR [rdx+0x8]
  427849:	test   r9,r9
  42784c:	setg   al
  42784f:	test   r8,r8
  427852:	je     0x4278f4
  427858:	test   al,al
  42785a:	je     0x4278f8
  427860:	mov    rax,QWORD PTR [r8+0x8]
  427864:	test   rax,rax
  427867:	jle    0x427907
  42786d:	add    rax,r9
  427870:	mov    r12,rcx
  427873:	mov    rsi,r8
  427876:	mov    QWORD PTR [rcx],rax
  427879:	lea    rcx,[rax*8+0x0]
  427881:	mov    rdi,rdx
  427884:	call   0x423ec0
  427889:	test   rax,rax
  42788c:	mov    QWORD PTR [r12+0x10],rax
  427891:	je     0x4279b5
  427897:	mov    r9d,0x1
  42789d:	xor    ebx,ebx
  42789f:	xor    ebp,ebp
  4278a1:	jmp    0x4278b0
  4278a3:	add    rbx,0x1
  4278a7:	mov    QWORD PTR [rax+r9*8-0x8],r8
  4278ac:	add    r9,0x1
  4278b0:	mov    r8,QWORD PTR [rdi+0x8]
  4278b4:	lea    r13,[r9-0x1]
  4278b8:	cmp    rbp,r8
  4278bb:	jge    0x427950
  4278c1:	cmp    rbx,QWORD PTR [rsi+0x8]
  4278c5:	jge    0x427994
  4278cb:	mov    rdx,QWORD PTR [rdi+0x10]
  4278cf:	mov    r8,QWORD PTR [rsi+0x10]
  4278d3:	mov    rdx,QWORD PTR [rdx+rbp*8]
  4278d7:	mov    r8,QWORD PTR [r8+rbx*8]
  4278db:	cmp    rdx,r8
  4278de:	jg     0x4278a3
  4278e0:	sete   cl
  4278e3:	mov    QWORD PTR [rax+r9*8-0x8],rdx
  4278e8:	add    rbp,0x1
  4278ec:	movzx  ecx,cl
  4278ef:	add    rbx,rcx
  4278f2:	jmp    0x4278ac
  4278f4:	test   al,al
  4278f6:	jne    0x427907
  4278f8:	test   r8,r8
  4278fb:	je     0x427920
  4278fd:	cmp    QWORD PTR [r8+0x8],0x0
  427902:	jle    0x427920
  427904:	mov    rdx,r8
  427907:	add    rsp,0x28
  42790b:	pop    rbx
  42790c:	pop    rsi
  42790d:	pop    rdi
  42790e:	pop    rbp
  42790f:	pop    r12
  427911:	pop    r13
  427913:	jmp    0x4277a0
  427918:	nop    DWORD PTR [rax+rax*1+0x0]
  427920:	mov    QWORD PTR [rcx],0x0
  427927:	mov    QWORD PTR [rcx+0x8],0x0
  42792f:	xor    eax,eax
  427931:	mov    QWORD PTR [rcx+0x10],0x0
  427939:	add    rsp,0x28
  42793d:	pop    rbx
  42793e:	pop    rsi
  42793f:	pop    rdi
  427940:	pop    rbp
  427941:	pop    r12
  427943:	pop    r13
  427945:	ret    
  427946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427950:	mov    r8,QWORD PTR [rsi+0x8]
  427954:	cmp    rbx,r8
  427957:	jge    0x427980
  427959:	lea    rcx,[rax+r13*8]
  42795d:	mov    rax,QWORD PTR [rsi+0x10]
  427961:	sub    r8,rbx
  427964:	shl    r8,0x3
  427968:	sub    r13,rbx
  42796b:	lea    rdx,[rax+rbx*8]
  42796f:	call   0x43a6b8
  427974:	add    r13,QWORD PTR [rsi+0x8]
  427978:	nop    DWORD PTR [rax+rax*1+0x0]
  427980:	xor    eax,eax
  427982:	mov    QWORD PTR [r12+0x8],r13
  427987:	add    rsp,0x28
  42798b:	pop    rbx
  42798c:	pop    rsi
  42798d:	pop    rdi
  42798e:	pop    rbp
  42798f:	pop    r12
  427991:	pop    r13
  427993:	ret    
  427994:	lea    rcx,[rax+r13*8]
  427998:	mov    rax,QWORD PTR [rdi+0x10]
  42799c:	sub    r8,rbp
  42799f:	shl    r8,0x3
  4279a3:	sub    r13,rbp
  4279a6:	lea    rdx,[rax+rbp*8]
  4279aa:	call   0x43a6b8
  4279af:	add    r13,QWORD PTR [rdi+0x8]
  4279b3:	jmp    0x427980
  4279b5:	mov    eax,0xc
  4279ba:	jmp    0x427939
  4279bf:	nop
  4279c0:	push   r15
  4279c2:	push   r14
  4279c4:	push   r13
  4279c6:	push   r12
  4279c8:	push   rbp
  4279c9:	push   rdi
  4279ca:	push   rsi
  4279cb:	push   rbx
  4279cc:	sub    rsp,0x48
  4279d0:	mov    r15,rdx
  4279d3:	mov    rdx,QWORD PTR [r8+0x8]
  4279d7:	mov    QWORD PTR [rsp+0x90],rcx
  4279df:	mov    r14,r8
  4279e2:	mov    ebp,r9d
  4279e5:	test   rdx,rdx
  4279e8:	je     0x427c9e
  4279ee:	mov    r9d,r9d
  4279f1:	test   rdx,rdx
  4279f4:	lea    r13,[rdx+r9*1]
  4279f8:	jle    0x427a0e
  4279fa:	mov    rax,QWORD PTR [r8+0x10]
  4279fe:	lea    rdx,[rax+rdx*8]
  427a02:	add    r13,QWORD PTR [rax]
  427a05:	add    rax,0x8
  427a09:	cmp    rax,rdx
  427a0c:	jne    0x427a02
  427a0e:	mov    rax,r13
  427a11:	and    rax,QWORD PTR [r15+0x88]
  427a18:	lea    rdx,[rax+rax*2]
  427a1c:	mov    rax,QWORD PTR [r15+0x40]
  427a20:	lea    rax,[rax+rdx*8]
  427a24:	mov    rsi,QWORD PTR [rax]
  427a27:	test   rsi,rsi
  427a2a:	jle    0x427a84
  427a2c:	mov    r12,QWORD PTR [rax+0x10]
  427a30:	xor    ebx,ebx
  427a32:	jmp    0x427a3d
  427a34:	add    rbx,0x1
  427a38:	cmp    rbx,rsi
  427a3b:	je     0x427a84
  427a3d:	mov    rdi,QWORD PTR [r12+rbx*8]
  427a41:	cmp    QWORD PTR [rdi],r13
  427a44:	jne    0x427a34
  427a46:	movzx  eax,BYTE PTR [rdi+0x68]
  427a4a:	and    eax,0xf
  427a4d:	cmp    eax,ebp
  427a4f:	jne    0x427a34
  427a51:	mov    rcx,QWORD PTR [rdi+0x50]
  427a55:	test   rcx,rcx
  427a58:	je     0x427a34
  427a5a:	mov    rdx,r14
  427a5d:	call   0x4263b0
  427a62:	test   al,al
  427a64:	je     0x427a34
  427a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a70:	mov    rax,rdi
  427a73:	add    rsp,0x48
  427a77:	pop    rbx
  427a78:	pop    rsi
  427a79:	pop    rdi
  427a7a:	pop    rbp
  427a7b:	pop    r12
  427a7d:	pop    r13
  427a7f:	pop    r14
  427a81:	pop    r15
  427a83:	ret    
  427a84:	mov    edx,0x1
  427a89:	mov    ecx,0x70
  427a8e:	call   0x43a798
  427a93:	test   rax,rax
  427a96:	mov    rdi,rax
  427a99:	je     0x427c26
  427a9f:	lea    r12,[rax+0x8]
  427aa3:	mov    rdx,r14
  427aa6:	mov    rcx,r12
  427aa9:	call   0x4277a0
  427aae:	test   eax,eax
  427ab0:	jne    0x427cab
  427ab6:	movzx  edx,BYTE PTR [rdi+0x68]
  427aba:	mov    eax,ebp
  427abc:	xor    esi,esi
  427abe:	and    eax,0xf
  427ac1:	mov    QWORD PTR [rdi+0x50],r12
  427ac5:	and    edx,0xfffffff0
  427ac8:	or     eax,edx
  427aca:	lea    rdx,[rdi+0x18]
  427ace:	mov    BYTE PTR [rdi+0x68],al
  427ad1:	xor    eax,eax
  427ad3:	mov    QWORD PTR [rsp+0x20],rdx
  427ad8:	lea    rdx,[rdi+0x10]
  427adc:	mov    QWORD PTR [rsp+0x28],rdx
  427ae1:	mov    edx,ebp
  427ae3:	and    edx,0x4
  427ae6:	cmp    QWORD PTR [r14+0x8],0x0
  427aeb:	mov    DWORD PTR [rsp+0x34],edx
  427aef:	jle    0x427c08
  427af5:	mov    QWORD PTR [rsp+0xa0],r14
  427afd:	mov    QWORD PTR [rsp+0x38],r13
  427b02:	mov    r14,r15
  427b05:	mov    r13,rax
  427b08:	mov    r15,QWORD PTR [rsp+0xa0]
  427b10:	jmp    0x427b26
  427b12:	cmp    r9d,0x1
  427b16:	jne    0x427b4c
  427b18:	add    rsi,0x1
  427b1c:	cmp    rsi,QWORD PTR [r15+0x8]
  427b20:	jge    0x427c00
  427b26:	mov    rdx,QWORD PTR [r15+0x10]
  427b2a:	mov    rcx,QWORD PTR [rdx+rsi*8]
  427b2e:	shl    rcx,0x4
  427b32:	add    rcx,QWORD PTR [r14]
  427b35:	mov    ebx,DWORD PTR [rcx+0x8]
  427b38:	movzx  r9d,BYTE PTR [rcx+0x8]
  427b3d:	shr    ebx,0x8
  427b40:	and    bx,0x3ff
  427b45:	movzx  edx,bx
  427b48:	test   edx,edx
  427b4a:	je     0x427b12
  427b4c:	movzx  r8d,BYTE PTR [rcx+0xa]
  427b51:	movzx  ecx,BYTE PTR [rdi+0x68]
  427b55:	mov    r11d,ecx
  427b58:	shr    r8b,0x4
  427b5c:	and    ecx,0xffffffdf
  427b5f:	shr    r11b,0x5
  427b63:	or     r8d,r11d
  427b66:	and    r8d,0x1
  427b6a:	shl    r8d,0x5
  427b6e:	or     ecx,r8d
  427b71:	cmp    r9d,0x2
  427b75:	mov    BYTE PTR [rdi+0x68],cl
  427b78:	je     0x427c54
  427b7e:	cmp    r9d,0x4
  427b82:	je     0x427c60
  427b88:	test   edx,edx
  427b8a:	je     0x427b18
  427b8c:	cmp    r12,QWORD PTR [rdi+0x50]
  427b90:	je     0x427c70
  427b96:	test   bl,0x1
  427b99:	je     0x427c40
  427b9f:	test   bpl,0x1
  427ba3:	je     0x427bd0
  427ba5:	test   bl,0x2
  427ba8:	jne    0x427bd0
  427baa:	nop    WORD PTR [rax+rax*1+0x0]
  427bb0:	test   bl,0x10
  427bb3:	je     0x427bbb
  427bb5:	test   bpl,0x2
  427bb9:	je     0x427bd0
  427bbb:	and    ebx,0x40
  427bbe:	je     0x427b18
  427bc4:	mov    eax,DWORD PTR [rsp+0x34]
  427bc8:	test   eax,eax
  427bca:	jne    0x427b18
  427bd0:	mov    rdx,QWORD PTR [rsp+0x20]
  427bd5:	mov    rcx,QWORD PTR [rsp+0x28]
  427bda:	mov    r8,rsi
  427bdd:	sub    r8,r13
  427be0:	add    rsi,0x1
  427be4:	add    r13,0x1
  427be8:	call   0x426560
  427bed:	cmp    rsi,QWORD PTR [r15+0x8]
  427bf1:	jl     0x427b26
  427bf7:	nop    WORD PTR [rax+rax*1+0x0]
  427c00:	mov    r13,QWORD PTR [rsp+0x38]
  427c05:	mov    r15,r14
  427c08:	mov    r8,r13
  427c0b:	mov    rdx,rdi
  427c0e:	mov    rcx,r15
  427c11:	call   0x424e00
  427c16:	test   eax,eax
  427c18:	je     0x427a70
  427c1e:	mov    rcx,rdi
  427c21:	call   0x425e20
  427c26:	mov    rax,QWORD PTR [rsp+0x90]
  427c2e:	mov    DWORD PTR [rax],0xc
  427c34:	xor    eax,eax
  427c36:	jmp    0x427a73
  427c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  427c40:	test   bl,0x2
  427c43:	je     0x427bb0
  427c49:	test   bpl,0x1
  427c4d:	jne    0x427bd0
  427c4f:	jmp    0x427bb0
  427c54:	or     ecx,0x10
  427c57:	mov    BYTE PTR [rdi+0x68],cl
  427c5a:	jmp    0x427b88
  427c5f:	nop
  427c60:	or     ecx,0x40
  427c63:	mov    BYTE PTR [rdi+0x68],cl
  427c66:	jmp    0x427b88
  427c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  427c70:	mov    ecx,0x18
  427c75:	call   0x423ec0
  427c7a:	test   rax,rax
  427c7d:	mov    QWORD PTR [rdi+0x50],rax
  427c81:	je     0x427c1e
  427c83:	mov    rdx,r15
  427c86:	mov    rcx,rax
  427c89:	call   0x4277a0
  427c8e:	test   eax,eax
  427c90:	jne    0x427c26
  427c92:	or     BYTE PTR [rdi+0x68],0x80
  427c96:	xor    r13d,r13d
  427c99:	jmp    0x427b96
  427c9e:	mov    DWORD PTR [rcx],0x0
  427ca4:	xor    eax,eax
  427ca6:	jmp    0x427a73
  427cab:	mov    rcx,rdi
  427cae:	call   0x43a748
  427cb3:	jmp    0x427c26
  427cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  427cc0:	push   r15
  427cc2:	push   r14
  427cc4:	push   r13
  427cc6:	push   r12
  427cc8:	push   rbp
  427cc9:	push   rdi
  427cca:	push   rsi
  427ccb:	push   rbx
  427ccc:	sub    rsp,0x28
  427cd0:	mov    r12,QWORD PTR [r8+0x8]
  427cd4:	test   r12,r12
  427cd7:	je     0x427ead
  427cdd:	test   r12,r12
  427ce0:	jle    0x427cfc
  427ce2:	mov    rax,QWORD PTR [r8+0x10]
  427ce6:	lea    r9,[rax+r12*8]
  427cea:	nop    WORD PTR [rax+rax*1+0x0]
  427cf0:	add    r12,QWORD PTR [rax]
  427cf3:	add    rax,0x8
  427cf7:	cmp    rax,r9
  427cfa:	jne    0x427cf0
  427cfc:	mov    rax,r12
  427cff:	and    rax,QWORD PTR [rdx+0x88]
  427d06:	mov    rsi,rdx
  427d09:	mov    r13,r8
  427d0c:	mov    rdi,rcx
  427d0f:	lea    rdx,[rax+rax*2]
  427d13:	mov    rax,QWORD PTR [rsi+0x40]
  427d17:	lea    rax,[rax+rdx*8]
  427d1b:	mov    r14,QWORD PTR [rax]
  427d1e:	test   r14,r14
  427d21:	jle    0x427d70
  427d23:	mov    r15,QWORD PTR [rax+0x10]
  427d27:	xor    ebx,ebx
  427d29:	jmp    0x427d39
  427d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d30:	add    rbx,0x1
  427d34:	cmp    rbx,r14
  427d37:	je     0x427d70
  427d39:	mov    rbp,QWORD PTR [r15+rbx*8]
  427d3d:	cmp    QWORD PTR [rbp+0x0],r12
  427d41:	jne    0x427d30
  427d43:	lea    rcx,[rbp+0x8]
  427d47:	mov    rdx,r13
  427d4a:	call   0x4263b0
  427d4f:	test   al,al
  427d51:	je     0x427d30
  427d53:	mov    rax,rbp
  427d56:	add    rsp,0x28
  427d5a:	pop    rbx
  427d5b:	pop    rsi
  427d5c:	pop    rdi
  427d5d:	pop    rbp
  427d5e:	pop    r12
  427d60:	pop    r13
  427d62:	pop    r14
  427d64:	pop    r15
  427d66:	ret    
  427d67:	nop    WORD PTR [rax+rax*1+0x0]
  427d70:	mov    edx,0x1
  427d75:	mov    ecx,0x70
  427d7a:	call   0x43a798
  427d7f:	test   rax,rax
  427d82:	mov    rbp,rax
  427d85:	je     0x427e8f
  427d8b:	lea    rbx,[rax+0x8]
  427d8f:	mov    rdx,r13
  427d92:	mov    rcx,rbx
  427d95:	call   0x4277a0
  427d9a:	test   eax,eax
  427d9c:	jne    0x427eba
  427da2:	mov    rdx,QWORD PTR [r13+0x8]
  427da6:	mov    QWORD PTR [rbp+0x50],rbx
  427daa:	test   rdx,rdx
  427dad:	jle    0x427e71
  427db3:	mov    rcx,QWORD PTR [rsi]
  427db6:	mov    r8,QWORD PTR [r13+0x10]
  427dba:	xor    eax,eax
  427dbc:	jmp    0x427e15
  427dbe:	xchg   ax,ax
  427dc0:	movzx  r9d,BYTE PTR [rbp+0x68]
  427dc5:	movzx  r10d,BYTE PTR [r11+0xa]
  427dca:	mov    r13d,r9d
  427dcd:	shr    r10b,0x4
  427dd1:	and    r9d,0xffffffdf
  427dd5:	shr    r13b,0x5
  427dd9:	or     r10d,r13d
  427ddc:	and    r10d,0x1
  427de0:	shl    r10d,0x5
  427de4:	or     r9d,r10d
  427de7:	cmp    ebx,0x2
  427dea:	mov    BYTE PTR [rbp+0x68],r9b
  427dee:	je     0x427e60
  427df0:	cmp    ebx,0x4
  427df3:	je     0x427ea0
  427df9:	cmp    ebx,0xc
  427dfc:	je     0x427e08
  427dfe:	test   DWORD PTR [r11+0x8],0x3ff00
  427e06:	je     0x427e0c
  427e08:	or     BYTE PTR [rbp+0x68],0x80
  427e0c:	add    rax,0x1
  427e10:	cmp    rdx,rax
  427e13:	jle    0x427e71
  427e15:	mov    r11,QWORD PTR [r8+rax*8]
  427e19:	shl    r11,0x4
  427e1d:	add    r11,rcx
  427e20:	movzx  ebx,BYTE PTR [r11+0x8]
  427e25:	cmp    ebx,0x1
  427e28:	jne    0x427dc0
  427e2a:	test   DWORD PTR [r11+0x8],0x3ff00
  427e32:	je     0x427e0c
  427e34:	movzx  r9d,BYTE PTR [rbp+0x68]
  427e39:	movzx  r10d,BYTE PTR [r11+0xa]
  427e3e:	mov    ebx,r9d
  427e41:	shr    r10b,0x4
  427e45:	and    r9d,0xffffffdf
  427e49:	shr    bl,0x5
  427e4c:	or     r10d,ebx
  427e4f:	and    r10d,0x1
  427e53:	shl    r10d,0x5
  427e57:	or     r9d,r10d
  427e5a:	mov    BYTE PTR [rbp+0x68],r9b
  427e5e:	jmp    0x427dfe
  427e60:	add    rax,0x1
  427e64:	or     r9d,0x10
  427e68:	cmp    rdx,rax
  427e6b:	mov    BYTE PTR [rbp+0x68],r9b
  427e6f:	jg     0x427e15
  427e71:	mov    r8,r12
  427e74:	mov    rdx,rbp
  427e77:	mov    rcx,rsi
  427e7a:	call   0x424e00
  427e7f:	test   eax,eax
  427e81:	je     0x427d53
  427e87:	mov    rcx,rbp
  427e8a:	call   0x425e20
  427e8f:	mov    DWORD PTR [rdi],0xc
  427e95:	xor    eax,eax
  427e97:	jmp    0x427d56
  427e9c:	nop    DWORD PTR [rax+0x0]
  427ea0:	or     r9d,0x40
  427ea4:	mov    BYTE PTR [rbp+0x68],r9b
  427ea8:	jmp    0x427e0c
  427ead:	mov    DWORD PTR [rcx],0x0
  427eb3:	xor    eax,eax
  427eb5:	jmp    0x427d56
  427eba:	mov    rcx,rbp
  427ebd:	call   0x43a748
  427ec2:	jmp    0x427e8f
  427ec4:	xchg   ax,ax
  427ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427ed0:	push   r14
  427ed2:	push   r13
  427ed4:	push   r12
  427ed6:	push   rbp
  427ed7:	push   rdi
  427ed8:	push   rsi
  427ed9:	push   rbx
  427eda:	sub    rsp,0x50
  427ede:	xor    ebx,ebx
  427ee0:	test   r9,r9
  427ee3:	mov    r14,rcx
  427ee6:	mov    rsi,rdx
  427ee9:	mov    r12,r8
  427eec:	mov    rbp,r9
  427eef:	lea    rdi,[rsp+0x30]
  427ef4:	lea    r13,[rsp+0x2c]
  427ef9:	jg     0x427f4e
  427efb:	jmp    0x427f70
  427efd:	nop    DWORD PTR [rax]
  427f00:	mov    rcx,QWORD PTR [r12+rbx*8]
  427f04:	test   rcx,rcx
  427f07:	je     0x427f45
  427f09:	lea    r8,[rcx+0x8]
  427f0d:	lea    rdx,[rax+0x8]
  427f11:	mov    rcx,rdi
  427f14:	call   0x427830
  427f19:	test   eax,eax
  427f1b:	mov    DWORD PTR [rsp+0x2c],eax
  427f1f:	jne    0x427f72
  427f21:	mov    r8,rdi
  427f24:	mov    rdx,r14
  427f27:	mov    rcx,r13
  427f2a:	call   0x427cc0
  427f2f:	mov    rcx,QWORD PTR [rsp+0x40]
  427f34:	mov    QWORD PTR [rsi+rbx*8],rax
  427f38:	call   0x43a748
  427f3d:	mov    eax,DWORD PTR [rsp+0x2c]
  427f41:	test   eax,eax
  427f43:	jne    0x427f72
  427f45:	add    rbx,0x1
  427f49:	cmp    rbx,rbp
  427f4c:	je     0x427f70
  427f4e:	mov    rax,QWORD PTR [rsi+rbx*8]
  427f52:	test   rax,rax
  427f55:	jne    0x427f00
  427f57:	mov    rax,QWORD PTR [r12+rbx*8]
  427f5b:	mov    QWORD PTR [rsi+rbx*8],rax
  427f5f:	add    rbx,0x1
  427f63:	cmp    rbx,rbp
  427f66:	jne    0x427f4e
  427f68:	nop    DWORD PTR [rax+rax*1+0x0]
  427f70:	xor    eax,eax
  427f72:	add    rsp,0x50
  427f76:	pop    rbx
  427f77:	pop    rsi
  427f78:	pop    rdi
  427f79:	pop    rbp
  427f7a:	pop    r12
  427f7c:	pop    r13
  427f7e:	pop    r14
  427f80:	ret    
  427f81:	nop    DWORD PTR [rax+rax*1+0x0]
  427f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f90:	push   r15
  427f92:	push   r14
  427f94:	push   r13
  427f96:	push   r12
  427f98:	push   rbp
  427f99:	push   rdi
  427f9a:	push   rsi
  427f9b:	push   rbx
  427f9c:	sub    rsp,0x88
  427fa3:	mov    r13,QWORD PTR [rcx+0x98]
  427faa:	mov    r12,rcx
  427fad:	mov    rdi,rdx
  427fb0:	lea    rdx,[rcx+0xd8]
  427fb7:	mov    rcx,QWORD PTR [rcx+0xc8]
  427fbe:	mov    rbp,r8
  427fc1:	mov    QWORD PTR [rsp+0xe8],r9
  427fc9:	call   0x426690
  427fce:	cmp    rax,0xffffffffffffffff
  427fd2:	je     0x4281e1
  427fd8:	lea    rax,[rax+rax*4]
  427fdc:	shl    rax,0x3
  427fe0:	mov    QWORD PTR [rsp+0x48],rax
  427fe5:	lea    rax,[rdi+0x10]
  427fe9:	mov    QWORD PTR [rsp+0x28],rax
  427fee:	lea    rax,[rsp+0x5c]
  427ff3:	mov    QWORD PTR [rsp+0x40],rax
  427ff8:	mov    r14,QWORD PTR [rsp+0x48]
  427ffd:	add    r14,QWORD PTR [r12+0xd8]
  428005:	jmp    0x428062
  428007:	nop    WORD PTR [rax+rax*1+0x0]
  428010:	mov    rax,QWORD PTR [r13+0x18]
  428014:	mov    rsi,QWORD PTR [rax+r15*8]
  428018:	lea    rax,[rbx*8+0x0]
  428020:	mov    QWORD PTR [rsp+0x30],rax
  428025:	mov    rax,QWORD PTR [r12+0xb8]
  42802d:	mov    r15,QWORD PTR [rax+rbx*8]
  428031:	test   r15,r15
  428034:	je     0x428200
  42803a:	mov    rcx,QWORD PTR [r15+0x10]
  42803e:	lea    rdx,[r15+0x18]
  428042:	mov    r8,rsi
  428045:	call   0x426410
  42804a:	test   rax,rax
  42804d:	je     0x428150
  428053:	add    r14,0x28
  428057:	cmp    BYTE PTR [r14-0x8],0x0
  42805c:	je     0x4281e1
  428062:	mov    r15,QWORD PTR [r14]
  428065:	mov    rsi,QWORD PTR [rdi+0x8]
  428069:	mov    rdx,QWORD PTR [rsp+0x28]
  42806e:	mov    r8,r15
  428071:	mov    rcx,rsi
  428074:	call   0x426410
  428079:	test   rax,rax
  42807c:	je     0x428053
  42807e:	mov    r9,rbp
  428081:	add    r9,QWORD PTR [r14+0x18]
  428085:	mov    rbx,r9
  428088:	sub    rbx,QWORD PTR [r14+0x10]
  42808c:	cmp    rbx,rbp
  42808f:	jne    0x428010
  428095:	mov    rcx,QWORD PTR [r13+0x28]
  428099:	lea    rax,[r15+r15*2]
  42809d:	mov    rdx,QWORD PTR [rsp+0x28]
  4280a2:	lea    rax,[rcx+rax*8]
  4280a6:	mov    rcx,rsi
  4280a9:	mov    rax,QWORD PTR [rax+0x10]
  4280ad:	mov    r15,QWORD PTR [rax]
  4280b0:	mov    r8,r15
  4280b3:	call   0x426410
  4280b8:	test   rax,rax
  4280bb:	jne    0x428053
  4280bd:	mov    ecx,0x8
  4280c2:	mov    QWORD PTR [rsp+0x60],0x1
  4280cb:	mov    QWORD PTR [rsp+0x68],0x1
  4280d4:	call   0x423ec0
  4280d9:	test   rax,rax
  4280dc:	mov    QWORD PTR [rsp+0x70],rax
  4280e1:	je     0x42825c
  4280e7:	mov    QWORD PTR [rax],r15
  4280ea:	xor    eax,eax
  4280ec:	lea    r15,[rsp+0x60]
  4280f1:	mov    r9d,DWORD PTR [rsp+0xf0]
  4280f9:	mov    r8,QWORD PTR [rsp+0xe8]
  428101:	mov    rcx,r13
  428104:	mov    DWORD PTR [rsp+0x5c],eax
  428108:	mov    rdx,r15
  42810b:	call   0x427660
  428110:	mov    rdx,r15
  428113:	mov    rcx,rdi
  428116:	mov    ebx,eax
  428118:	call   0x427210
  42811d:	mov    rcx,QWORD PTR [rsp+0x70]
  428122:	mov    r15d,eax
  428125:	call   0x43a748
  42812a:	mov    eax,DWORD PTR [rsp+0x5c]
  42812e:	mov    edx,ebx
  428130:	or     edx,r15d
  428133:	or     edx,eax
  428135:	je     0x427ff8
  42813b:	test   eax,eax
  42813d:	jne    0x4281e3
  428143:	test   ebx,ebx
  428145:	mov    eax,r15d
  428148:	cmovne eax,ebx
  42814b:	jmp    0x4281e3
  428150:	lea    r8,[rsp+0x60]
  428155:	lea    rdx,[r15+0x8]
  428159:	mov    rcx,r8
  42815c:	mov    QWORD PTR [rsp+0x38],r8
  428161:	call   0x4277a0
  428166:	mov    r8,QWORD PTR [rsp+0x38]
  42816b:	mov    rdx,rsi
  42816e:	mov    DWORD PTR [rsp+0x5c],eax
  428172:	mov    rcx,r8
  428175:	call   0x424ce0
  42817a:	mov    edx,DWORD PTR [rsp+0x5c]
  42817e:	mov    r8,QWORD PTR [rsp+0x38]
  428183:	test   edx,edx
  428185:	setne  dl
  428188:	cmp    al,dl
  42818a:	jbe    0x42823b
  428190:	mov    r15,QWORD PTR [rsp+0x30]
  428195:	add    r15,QWORD PTR [r12+0xb8]
  42819d:	mov    rdx,r13
  4281a0:	mov    rcx,QWORD PTR [rsp+0x40]
  4281a5:	call   0x427cc0
  4281aa:	mov    QWORD PTR [r15],rax
  4281ad:	mov    rcx,QWORD PTR [rsp+0x70]
  4281b2:	call   0x43a748
  4281b7:	mov    rax,QWORD PTR [r12+0xb8]
  4281bf:	cmp    QWORD PTR [rax+rbx*8],0x0
  4281c4:	jne    0x428053
  4281ca:	mov    eax,DWORD PTR [rsp+0x5c]
  4281ce:	test   eax,eax
  4281d0:	jne    0x4281e3
  4281d2:	add    r14,0x28
  4281d6:	cmp    BYTE PTR [r14-0x8],0x0
  4281db:	jne    0x428062
  4281e1:	xor    eax,eax
  4281e3:	add    rsp,0x88
  4281ea:	pop    rbx
  4281eb:	pop    rsi
  4281ec:	pop    rdi
  4281ed:	pop    rbp
  4281ee:	pop    r12
  4281f0:	pop    r13
  4281f2:	pop    r14
  4281f4:	pop    r15
  4281f6:	ret    
  4281f7:	nop    WORD PTR [rax+rax*1+0x0]
  428200:	mov    ecx,0x8
  428205:	mov    QWORD PTR [rsp+0x60],0x1
  42820e:	mov    QWORD PTR [rsp+0x68],0x1
  428217:	call   0x423ec0
  42821c:	test   rax,rax
  42821f:	mov    QWORD PTR [rsp+0x70],rax
  428224:	je     0x428255
  428226:	mov    QWORD PTR [rax],rsi
  428229:	lea    r8,[rsp+0x60]
  42822e:	mov    DWORD PTR [rsp+0x5c],0x0
  428236:	jmp    0x428190
  42823b:	mov    rcx,QWORD PTR [rsp+0x70]
  428240:	call   0x43a748
  428245:	mov    eax,DWORD PTR [rsp+0x5c]
  428249:	mov    edx,0xc
  42824e:	test   eax,eax
  428250:	cmove  eax,edx
  428253:	jmp    0x4281e3
  428255:	mov    eax,0xc
  42825a:	jmp    0x4281e3
  42825c:	mov    QWORD PTR [rsp+0x68],0x0
  428265:	mov    QWORD PTR [rsp+0x60],0x0
  42826e:	mov    al,0xc
  428270:	jmp    0x4280ec
  428275:	nop
  428276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428280:	push   r15
  428282:	push   r14
  428284:	push   r13
  428286:	push   r12
  428288:	push   rbp
  428289:	push   rdi
  42828a:	push   rsi
  42828b:	push   rbx
  42828c:	sub    rsp,0xc8
  428293:	mov    r14,rcx
  428296:	mov    ecx,0x3800
  42829b:	mov    QWORD PTR [rsp+0x118],rdx
  4282a3:	call   0x423ec0
  4282a8:	test   rax,rax
  4282ab:	mov    QWORD PTR [rsp+0x20],rax
  4282b0:	je     0x42852f
  4282b6:	mov    rax,QWORD PTR [rsp+0x20]
  4282bb:	mov    QWORD PTR [rsp+0x60],0x0
  4282c4:	mov    QWORD PTR [rsp+0x68],0x0
  4282cd:	mov    QWORD PTR [rsp+0x70],0x0
  4282d6:	mov    QWORD PTR [rsp+0x78],0x0
  4282df:	add    rax,0x1800
  4282e5:	mov    QWORD PTR [rsp+0x28],rax
  4282ea:	mov    rax,QWORD PTR [rsp+0x118]
  4282f2:	cmp    QWORD PTR [rax+0x10],0x0
  4282f7:	mov    QWORD PTR [rax+0x58],0x0
  4282ff:	mov    QWORD PTR [rax+0x60],0x0
  428307:	jle    0x428cc0
  42830d:	xor    r12d,r12d
  428310:	mov    QWORD PTR [rsp+0x30],0x0
  428319:	mov    QWORD PTR [rsp+0x110],r14
  428321:	mov    r10,rax
  428324:	mov    rdi,QWORD PTR [rsp+0x30]
  428329:	mov    rax,rdi
  42832c:	shl    rax,0x3
  428330:	mov    QWORD PTR [rsp+0x38],rax
  428335:	mov    rax,QWORD PTR [r10+0x18]
  428339:	mov    r14,QWORD PTR [rax+rdi*8]
  42833d:	mov    rax,QWORD PTR [rsp+0x110]
  428345:	shl    r14,0x4
  428349:	add    r14,QWORD PTR [rax]
  42834c:	movzx  r15d,BYTE PTR [r14+0x8]
  428351:	mov    edx,DWORD PTR [r14+0x8]
  428355:	shr    edx,0x8
  428358:	and    dx,0x3ff
  42835d:	cmp    r15d,0x1
  428361:	je     0x428545
  428367:	cmp    r15d,0x3
  42836b:	je     0x428899
  428371:	cmp    r15d,0x5
  428375:	je     0x4288b9
  42837b:	cmp    r15d,0x7
  42837f:	je     0x428b80
  428385:	add    QWORD PTR [rsp+0x30],0x1
  42838b:	mov    rax,QWORD PTR [rsp+0x30]
  428390:	cmp    rax,QWORD PTR [r10+0x10]
  428394:	jl     0x428324
  428396:	test   r12,r12
  428399:	mov    r14,QWORD PTR [rsp+0x110]
  4283a1:	jle    0x428dfb
  4283a7:	lea    rbx,[r12+0x1]
  4283ac:	mov    QWORD PTR [rsp+0x88],0x0
  4283b8:	mov    QWORD PTR [rsp+0x80],rbx
  4283c0:	shl    rbx,0x3
  4283c4:	mov    rcx,rbx
  4283c7:	call   0x423ec0
  4283cc:	test   rax,rax
  4283cf:	mov    QWORD PTR [rsp+0x90],rax
  4283d7:	je     0x428bac
  4283dd:	movabs rdx,0xaaaaaaaaaaaa855
  4283e7:	mov    DWORD PTR [rsp+0x60],0x0
  4283ef:	cmp    r12,rdx
  4283f2:	jg     0x428bbb
  4283f8:	lea    rax,[r12+r12*2]
  4283fc:	shl    rax,0x3
  428400:	mov    rcx,rax
  428403:	mov    QWORD PTR [rsp+0x58],rax
  428408:	call   0x423ec0
  42840d:	test   rax,rax
  428410:	mov    rdi,rax
  428413:	je     0x428bc3
  428419:	lea    rax,[rax+rbx*1-0x8]
  42841e:	mov    QWORD PTR [rsp+0xa0],0x0
  42842a:	mov    QWORD PTR [rsp+0xa8],0x0
  428436:	mov    QWORD PTR [rsp+0xb0],0x0
  428442:	mov    QWORD PTR [rsp+0xb8],0x0
  42844e:	xor    ebp,ebp
  428450:	mov    QWORD PTR [rsp+0x38],rax
  428455:	lea    rax,[rdi+rbx*2-0x10]
  42845a:	lea    rbx,[rsp+0x80]
  428462:	mov    BYTE PTR [rsp+0x4f],0x0
  428467:	mov    QWORD PTR [rsp+0x40],rax
  42846c:	mov    rax,QWORD PTR [rsp+0x20]
  428471:	lea    r15,[rax+0x8]
  428475:	mov    rax,QWORD PTR [rsp+0x28]
  42847a:	mov    QWORD PTR [rsp+0x50],rax
  42847f:	mov    rsi,rax
  428482:	lea    rax,[rsp+0x60]
  428487:	mov    QWORD PTR [rsp+0x30],rax
  42848c:	mov    QWORD PTR [rsp+0x88],0x0
  428498:	xor    r13d,r13d
  42849b:	cmp    QWORD PTR [r15],0x0
  42849f:	jg     0x4284bd
  4284a1:	jmp    0x4289c0
  4284a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284b0:	add    r13,0x1
  4284b4:	cmp    QWORD PTR [r15],r13
  4284b7:	jle    0x4289c0
  4284bd:	mov    rax,QWORD PTR [r15+0x8]
  4284c1:	mov    rdx,QWORD PTR [rax+r13*8]
  4284c5:	mov    rax,QWORD PTR [r14+0x18]
  4284c9:	mov    rax,QWORD PTR [rax+rdx*8]
  4284cd:	cmp    rax,0xffffffffffffffff
  4284d1:	je     0x4284b0
  4284d3:	lea    rdx,[rax+rax*2]
  4284d7:	mov    rax,QWORD PTR [r14+0x30]
  4284db:	mov    rcx,rbx
  4284de:	lea    rdx,[rax+rdx*8]
  4284e2:	call   0x427210
  4284e7:	test   eax,eax
  4284e9:	mov    DWORD PTR [rsp+0x60],eax
  4284ed:	je     0x4284b0
  4284ef:	mov    rcx,rdi
  4284f2:	call   0x43a748
  4284f7:	mov    rcx,QWORD PTR [rsp+0x90]
  4284ff:	call   0x43a748
  428504:	mov    rax,QWORD PTR [rsp+0x20]
  428509:	xor    ebx,ebx
  42850b:	lea    rsi,[rax+0x10]
  42850f:	nop
  428510:	mov    rcx,QWORD PTR [rsi]
  428513:	add    rbx,0x1
  428517:	add    rsi,0x18
  42851b:	call   0x43a748
  428520:	cmp    rbx,r12
  428523:	jne    0x428510
  428525:	mov    rcx,QWORD PTR [rsp+0x20]
  42852a:	call   0x43a748
  42852f:	xor    eax,eax
  428531:	add    rsp,0xc8
  428538:	pop    rbx
  428539:	pop    rsi
  42853a:	pop    rdi
  42853b:	pop    rbp
  42853c:	pop    r12
  42853e:	pop    r13
  428540:	pop    r14
  428542:	pop    r15
  428544:	ret    
  428545:	movzx  ecx,BYTE PTR [r14]
  428549:	lea    rsi,[rsp+0x60]
  42854e:	mov    edi,r15d
  428551:	mov    rax,rcx
  428554:	and    ecx,0x1f
  428557:	shr    rax,0x3
  42855b:	shl    edi,cl
  42855d:	and    eax,0x1c
  428560:	or     DWORD PTR [rsi+rax*1],edi
  428563:	test   dx,dx
  428566:	je     0x428640
  42856c:	test   dl,0x20
  42856f:	jne    0x42891d
  428575:	test   dl,0x80
  428578:	jne    0x42880e
  42857e:	test   dl,0x4
  428581:	je     0x4285da
  428583:	cmp    r15d,0x1
  428587:	je     0x428b9c
  42858d:	mov    rax,QWORD PTR [rsp+0x110]
  428595:	cmp    DWORD PTR [rax+0xac],0x1
  42859c:	jle    0x428956
  4285a2:	mov    r9,QWORD PTR [rax+0x78]
  4285a6:	xor    r8d,r8d
  4285a9:	xor    ecx,ecx
  4285ab:	mov    r11,rax
  4285ae:	xchg   ax,ax
  4285b0:	mov    eax,DWORD PTR [r9+rcx*4]
  4285b4:	not    eax
  4285b6:	or     eax,DWORD PTR [r11+rcx*4+0xb0]
  4285be:	and    eax,DWORD PTR [rsi+rcx*4]
  4285c1:	mov    DWORD PTR [rsi+rcx*4],eax
  4285c4:	add    rcx,0x1
  4285c8:	or     r8d,eax
  4285cb:	cmp    rcx,0x8
  4285cf:	jne    0x4285b0
  4285d1:	test   r8d,r8d
  4285d4:	je     0x428385
  4285da:	and    edx,0x8
  4285dd:	je     0x428640
  4285df:	cmp    r15d,0x1
  4285e3:	je     0x428983
  4285e9:	mov    rax,QWORD PTR [rsp+0x110]
  4285f1:	cmp    DWORD PTR [rax+0xac],0x1
  4285f8:	jle    0x428993
  4285fe:	mov    r8,QWORD PTR [rax+0x78]
  428602:	xor    ecx,ecx
  428604:	xor    edx,edx
  428606:	mov    r9,rax
  428609:	nop    DWORD PTR [rax+0x0]
  428610:	mov    eax,DWORD PTR [r8+rdx*4]
  428614:	and    eax,DWORD PTR [r9+rdx*4+0xb0]
  42861c:	not    eax
  42861e:	and    eax,DWORD PTR [rsi+rdx*4]
  428621:	mov    DWORD PTR [rsi+rdx*4],eax
  428624:	add    rdx,0x1
  428628:	or     ecx,eax
  42862a:	cmp    rdx,0x8
  42862e:	jne    0x428610
  428630:	test   ecx,ecx
  428632:	je     0x428385
  428638:	nop    DWORD PTR [rax+rax*1+0x0]
  428640:	xor    ebp,ebp
  428642:	test   r12,r12
  428645:	mov    rbx,QWORD PTR [rsp+0x28]
  42864a:	mov    r13,QWORD PTR [rsp+0x20]
  42864f:	jle    0x42878a
  428655:	mov    QWORD PTR [rsp+0x40],r14
  42865a:	mov    rdi,r10
  42865d:	mov    r14,r12
  428660:	mov    r12,r13
  428663:	cmp    r15d,0x1
  428667:	je     0x428832
  42866d:	lea    rdx,[rsp+0x80]
  428675:	xor    r8d,r8d
  428678:	xor    eax,eax
  42867a:	nop    WORD PTR [rax+rax*1+0x0]
  428680:	mov    ecx,DWORD PTR [rbx+rax*4]
  428683:	and    ecx,DWORD PTR [rsi+rax*4]
  428686:	mov    DWORD PTR [rdx+rax*4],ecx
  428689:	add    rax,0x1
  42868d:	or     r8d,ecx
  428690:	cmp    rax,0x8
  428694:	jne    0x428680
  428696:	test   r8d,r8d
  428699:	je     0x42876f
  42869f:	lea    r11,[rsp+0xa0]
  4286a7:	xor    r13d,r13d
  4286aa:	xor    ecx,ecx
  4286ac:	xor    r9d,r9d
  4286af:	nop
  4286b0:	mov    eax,DWORD PTR [rsi+r9*4]
  4286b4:	mov    r8d,eax
  4286b7:	not    r8d
  4286ba:	and    r8d,DWORD PTR [rbx+r9*4]
  4286be:	mov    DWORD PTR [r11+r9*4],r8d
  4286c2:	or     ecx,r8d
  4286c5:	mov    r8d,DWORD PTR [rbx+r9*4]
  4286c9:	not    r8d
  4286cc:	and    eax,r8d
  4286cf:	mov    DWORD PTR [rsi+r9*4],eax
  4286d3:	add    r9,0x1
  4286d7:	or     r13d,eax
  4286da:	cmp    r9,0x8
  4286de:	jne    0x4286b0
  4286e0:	test   ecx,ecx
  4286e2:	je     0x42874d
  4286e4:	mov    rax,r14
  4286e7:	mov    rcx,QWORD PTR [r11]
  4286ea:	shl    rax,0x5
  4286ee:	add    rax,QWORD PTR [rsp+0x28]
  4286f3:	mov    QWORD PTR [rax],rcx
  4286f6:	mov    rcx,QWORD PTR [r11+0x8]
  4286fa:	mov    QWORD PTR [rax+0x8],rcx
  4286fe:	mov    rcx,QWORD PTR [r11+0x10]
  428702:	mov    QWORD PTR [rax+0x10],rcx
  428706:	mov    rcx,QWORD PTR [r11+0x18]
  42870a:	mov    QWORD PTR [rax+0x18],rcx
  42870e:	mov    rax,QWORD PTR [rdx]
  428711:	mov    QWORD PTR [rbx],rax
  428714:	mov    rax,QWORD PTR [rdx+0x8]
  428718:	mov    QWORD PTR [rbx+0x8],rax
  42871c:	mov    rax,QWORD PTR [rdx+0x10]
  428720:	mov    QWORD PTR [rbx+0x10],rax
  428724:	mov    rax,QWORD PTR [rdx+0x18]
  428728:	mov    rdx,QWORD PTR [rsp+0x20]
  42872d:	mov    QWORD PTR [rbx+0x18],rax
  428731:	lea    rax,[r14+r14*2]
  428735:	lea    rcx,[rdx+rax*8]
  428739:	mov    rdx,r12
  42873c:	call   0x4277a0
  428741:	test   eax,eax
  428743:	jne    0x428867
  428749:	add    r14,0x1
  42874d:	mov    rax,QWORD PTR [rdi+0x18]
  428751:	mov    rdx,QWORD PTR [rsp+0x38]
  428756:	mov    rcx,r12
  428759:	mov    rdx,QWORD PTR [rax+rdx*1]
  42875d:	call   0x424ce0
  428762:	test   al,al
  428764:	je     0x428867
  42876a:	test   r13d,r13d
  42876d:	je     0x428784
  42876f:	add    rbp,0x1
  428773:	add    rbx,0x20
  428777:	add    r12,0x18
  42877b:	cmp    rbp,r14
  42877e:	jl     0x428663
  428784:	mov    r12,r14
  428787:	mov    r10,rdi
  42878a:	cmp    rbp,r12
  42878d:	jne    0x428385
  428793:	mov    rax,r12
  428796:	mov    rdx,QWORD PTR [rsi]
  428799:	mov    rdi,QWORD PTR [rsp+0x38]
  42879e:	shl    rax,0x5
  4287a2:	add    rax,QWORD PTR [rsp+0x28]
  4287a7:	mov    rbx,QWORD PTR [rsp+0x20]
  4287ac:	mov    ecx,0x8
  4287b1:	mov    QWORD PTR [rsp+0x40],r10
  4287b6:	mov    QWORD PTR [rax],rdx
  4287b9:	mov    rdx,QWORD PTR [rsi+0x8]
  4287bd:	mov    QWORD PTR [rax+0x8],rdx
  4287c1:	mov    rdx,QWORD PTR [rsi+0x10]
  4287c5:	mov    QWORD PTR [rax+0x10],rdx
  4287c9:	mov    rdx,QWORD PTR [rsi+0x18]
  4287cd:	mov    QWORD PTR [rax+0x18],rdx
  4287d1:	mov    rax,QWORD PTR [r10+0x18]
  4287d5:	mov    rdi,QWORD PTR [rax+rdi*1]
  4287d9:	lea    rax,[r12+r12*2]
  4287dd:	lea    rbx,[rbx+rax*8]
  4287e1:	mov    QWORD PTR [rbx],0x1
  4287e8:	mov    QWORD PTR [rbx+0x8],0x1
  4287f0:	call   0x423ec0
  4287f5:	test   rax,rax
  4287f8:	mov    QWORD PTR [rbx+0x10],rax
  4287fc:	mov    r10,QWORD PTR [rsp+0x40]
  428801:	je     0x428cf0
  428807:	mov    QWORD PTR [rax],rdi
  42880a:	add    r12,0x1
  42880e:	mov    QWORD PTR [rsi],0x0
  428815:	mov    QWORD PTR [rsi+0x8],0x0
  42881d:	mov    QWORD PTR [rsi+0x10],0x0
  428825:	mov    QWORD PTR [rsi+0x18],0x0
  42882d:	jmp    0x428385
  428832:	mov    rax,QWORD PTR [rsp+0x40]
  428837:	mov    rcx,rbp
  42883a:	shl    rcx,0x5
  42883e:	movzx  eax,BYTE PTR [rax]
  428841:	mov    rdx,rax
  428844:	and    eax,0x1f
  428847:	shr    rdx,0x3
  42884b:	and    edx,0x1c
  42884e:	add    rdx,rcx
  428851:	mov    rcx,QWORD PTR [rsp+0x28]
  428856:	mov    edx,DWORD PTR [rcx+rdx*1]
  428859:	bt     edx,eax
  42885c:	jae    0x42876f
  428862:	jmp    0x42866d
  428867:	mov    r12,r14
  42886a:	mov    rax,QWORD PTR [rsp+0x20]
  42886f:	xor    ebx,ebx
  428871:	lea    rsi,[rax+0x10]
  428875:	mov    rcx,QWORD PTR [rsi]
  428878:	add    rbx,0x1
  42887c:	add    rsi,0x18
  428880:	call   0x43a748
  428885:	cmp    rbx,r12
  428888:	jne    0x428875
  42888a:	mov    rcx,QWORD PTR [rsp+0x20]
  42888f:	call   0x43a748
  428894:	jmp    0x42852f
  428899:	mov    r8,QWORD PTR [r14]
  42889c:	lea    rsi,[rsp+0x60]
  4288a1:	xor    eax,eax
  4288a3:	mov    ecx,DWORD PTR [r8+rax*1]
  4288a7:	or     DWORD PTR [rsi+rax*1],ecx
  4288aa:	add    rax,0x4
  4288ae:	cmp    rax,0x20
  4288b2:	jne    0x4288a3
  4288b4:	jmp    0x428563
  4288b9:	mov    rax,QWORD PTR [rsp+0x110]
  4288c1:	cmp    DWORD PTR [rax+0xac],0x1
  4288c8:	jle    0x428be1
  4288ce:	lea    rsi,[rsp+0x60]
  4288d3:	mov    r8,QWORD PTR [rax+0x78]
  4288d7:	xor    eax,eax
  4288d9:	nop    DWORD PTR [rax+0x0]
  4288e0:	mov    ecx,DWORD PTR [r8+rax*1]
  4288e4:	or     DWORD PTR [rsi+rax*1],ecx
  4288e7:	add    rax,0x4
  4288eb:	cmp    rax,0x20
  4288ef:	jne    0x4288e0
  4288f1:	mov    rax,QWORD PTR [rsp+0x110]
  4288f9:	mov    eax,DWORD PTR [rax+0xd0]
  4288ff:	test   al,0x40
  428901:	jne    0x42890b
  428903:	and    DWORD PTR [rsp+0x60],0xfffffbff
  42890b:	test   al,0x80
  42890d:	je     0x428563
  428913:	and    DWORD PTR [rsp+0x60],0xfffffffe
  428918:	jmp    0x428563
  42891d:	mov    eax,DWORD PTR [rsp+0x60]
  428921:	mov    QWORD PTR [rsi],0x0
  428928:	mov    QWORD PTR [rsi+0x8],0x0
  428930:	mov    QWORD PTR [rsi+0x10],0x0
  428938:	mov    QWORD PTR [rsi+0x18],0x0
  428940:	test   ah,0x4
  428943:	je     0x428385
  428949:	mov    DWORD PTR [rsp+0x60],0x400
  428951:	jmp    0x428575
  428956:	mov    r9,QWORD PTR [rsp+0x110]
  42895e:	xor    r8d,r8d
  428961:	xor    eax,eax
  428963:	mov    ecx,DWORD PTR [r9+rax*4+0xb0]
  42896b:	and    ecx,DWORD PTR [rsi+rax*4]
  42896e:	mov    DWORD PTR [rsi+rax*4],ecx
  428971:	add    rax,0x1
  428975:	or     r8d,ecx
  428978:	cmp    rax,0x8
  42897c:	jne    0x428963
  42897e:	jmp    0x4285d1
  428983:	test   BYTE PTR [r14+0xa],0x40
  428988:	je     0x4285e9
  42898e:	jmp    0x42880e
  428993:	mov    r8,QWORD PTR [rsp+0x110]
  42899b:	xor    ecx,ecx
  42899d:	xor    edx,edx
  42899f:	mov    eax,DWORD PTR [r8+rdx*4+0xb0]
  4289a7:	not    eax
  4289a9:	and    eax,DWORD PTR [rsi+rdx*4]
  4289ac:	mov    DWORD PTR [rsi+rdx*4],eax
  4289af:	add    rdx,0x1
  4289b3:	or     ecx,eax
  4289b5:	cmp    rdx,0x8
  4289b9:	jne    0x42899f
  4289bb:	jmp    0x428630
  4289c0:	mov    rcx,QWORD PTR [rsp+0x30]
  4289c5:	xor    r9d,r9d
  4289c8:	mov    r8,rbx
  4289cb:	mov    rdx,r14
  4289ce:	call   0x4279c0
  4289d3:	test   rax,rax
  4289d6:	mov    QWORD PTR [rdi+rbp*8],rax
  4289da:	je     0x428bd0
  4289e0:	cmp    BYTE PTR [rax+0x68],0x0
  4289e4:	js     0x428afe
  4289ea:	mov    rdx,QWORD PTR [rsp+0x38]
  4289ef:	mov    QWORD PTR [rdx+rbp*8],rax
  4289f3:	mov    rdx,QWORD PTR [rsp+0x40]
  4289f8:	mov    rax,QWORD PTR [rdi+rbp*8]
  4289fc:	mov    QWORD PTR [rdx+rbp*8],rax
  428a00:	lea    r8,[rsp+0xa0]
  428a08:	xor    eax,eax
  428a0a:	nop    WORD PTR [rax+rax*1+0x0]
  428a10:	mov    edx,DWORD PTR [rsi+rax*1]
  428a13:	or     DWORD PTR [r8+rax*1],edx
  428a17:	add    rax,0x4
  428a1b:	cmp    rax,0x20
  428a1f:	jne    0x428a10
  428a21:	add    rbp,0x1
  428a25:	add    r15,0x18
  428a29:	add    rsi,0x20
  428a2d:	cmp    rbp,r12
  428a30:	jne    0x42848c
  428a36:	cmp    BYTE PTR [rsp+0x4f],0x0
  428a3b:	mov    QWORD PTR [rsp+0x30],r8
  428a40:	jne    0x428d42
  428a46:	mov    edx,0x100
  428a4b:	mov    ecx,0x8
  428a50:	call   0x43a798
  428a55:	mov    rsi,QWORD PTR [rsp+0x118]
  428a5d:	test   rax,rax
  428a60:	mov    QWORD PTR [rsi+0x58],rax
  428a64:	je     0x4284ef
  428a6a:	mov    rsi,QWORD PTR [rsp+0x38]
  428a6f:	mov    r8,QWORD PTR [rsp+0x30]
  428a74:	mov    r13,rax
  428a77:	xor    ebp,ebp
  428a79:	mov    edx,DWORD PTR [r8+rbp*1]
  428a7d:	mov    rbx,QWORD PTR [rsp+0x28]
  428a82:	mov    r11,r13
  428a85:	mov    ecx,0x1
  428a8a:	test   edx,edx
  428a8c:	lea    rbx,[rbx+rbp*1+0x20]
  428a91:	jne    0x428aae
  428a93:	jmp    0x428c0f
  428a98:	nop    DWORD PTR [rax+rax*1+0x0]
  428aa0:	add    ecx,ecx
  428aa2:	add    r11,0x8
  428aa6:	shr    edx,1
  428aa8:	je     0x428c0f
  428aae:	test   dl,0x1
  428ab1:	je     0x428aa0
  428ab3:	mov    r10,QWORD PTR [rsp+0x20]
  428ab8:	test   DWORD PTR [r10+rbp*1+0x1800],ecx
  428ac0:	jne    0x428d10
  428ac6:	mov    r9,rbx
  428ac9:	xor    r10d,r10d
  428acc:	nop    DWORD PTR [rax+0x0]
  428ad0:	mov    r15d,DWORD PTR [r9]
  428ad3:	add    r10,0x1
  428ad7:	add    r9,0x20
  428adb:	and    r15d,ecx
  428ade:	test   r15d,r15d
  428ae1:	je     0x428ad0
  428ae3:	shl    r10,0x3
  428ae7:	test   DWORD PTR [r14+rbp*1+0xb0],ecx
  428aef:	je     0x428c99
  428af5:	mov    r9,QWORD PTR [rsi+r10*1]
  428af9:	mov    QWORD PTR [r11],r9
  428afc:	jmp    0x428aa0
  428afe:	mov    rcx,QWORD PTR [rsp+0x30]
  428b03:	mov    rdx,r14
  428b06:	mov    r9d,0x1
  428b0c:	mov    r8,rbx
  428b0f:	call   0x4279c0
  428b14:	mov    rdx,QWORD PTR [rsp+0x38]
  428b19:	test   rax,rax
  428b1c:	mov    QWORD PTR [rdx+rbp*8],rax
  428b20:	je     0x428ca5
  428b26:	cmp    rax,QWORD PTR [rdi+rbp*8]
  428b2a:	je     0x428b45
  428b2c:	movzx  eax,BYTE PTR [rsp+0x4f]
  428b31:	cmp    DWORD PTR [r14+0xac],0x2
  428b39:	mov    edx,0x1
  428b3e:	cmovge eax,edx
  428b41:	mov    BYTE PTR [rsp+0x4f],al
  428b45:	mov    rcx,QWORD PTR [rsp+0x30]
  428b4a:	mov    rdx,r14
  428b4d:	mov    r9d,0x2
  428b53:	mov    r8,rbx
  428b56:	call   0x4279c0
  428b5b:	mov    rdx,QWORD PTR [rsp+0x40]
  428b60:	test   rax,rax
  428b63:	mov    QWORD PTR [rdx+rbp*8],rax
  428b67:	jne    0x428a00
  428b6d:	mov    eax,DWORD PTR [rsp+0x60]
  428b71:	test   eax,eax
  428b73:	je     0x428a00
  428b79:	jmp    0x4284ef
  428b7e:	xchg   ax,ax
  428b80:	lea    rsi,[rsp+0x60]
  428b85:	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
  428b8e:	mov    QWORD PTR [rsp+0x68],0xffffffffffffffff
  428b97:	jmp    0x4288f1
  428b9c:	test   BYTE PTR [r14+0xa],0x40
  428ba1:	jne    0x42858d
  428ba7:	jmp    0x42880e
  428bac:	mov    DWORD PTR [rsp+0x60],0xc
  428bb4:	xor    ecx,ecx
  428bb6:	jmp    0x4284ff
  428bbb:	mov    rcx,rax
  428bbe:	jmp    0x4284ff
  428bc3:	mov    rcx,QWORD PTR [rsp+0x90]
  428bcb:	jmp    0x4284ff
  428bd0:	mov    ecx,DWORD PTR [rsp+0x60]
  428bd4:	test   ecx,ecx
  428bd6:	je     0x4289e0
  428bdc:	jmp    0x4284ef
  428be1:	lea    rsi,[rsp+0x60]
  428be6:	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
  428bef:	mov    QWORD PTR [rsp+0x68],0xffffffffffffffff
  428bf8:	mov    QWORD PTR [rsp+0x70],0xffffffffffffffff
  428c01:	mov    QWORD PTR [rsp+0x78],0xffffffffffffffff
  428c0a:	jmp    0x4288f1
  428c0f:	add    rbp,0x4
  428c13:	add    r13,0x100
  428c1a:	cmp    rbp,0x20
  428c1e:	jne    0x428a79
  428c24:	test   BYTE PTR [rsp+0xa1],0x4
  428c2c:	je     0x428c4e
  428c2e:	mov    rcx,QWORD PTR [rsp+0x50]
  428c33:	xor    edx,edx
  428c35:	test   DWORD PTR [rcx],0x400
  428c3b:	jne    0x428d18
  428c41:	add    rdx,0x1
  428c45:	add    rcx,0x20
  428c49:	cmp    rdx,r12
  428c4c:	jne    0x428c35
  428c4e:	mov    rcx,rdi
  428c51:	call   0x43a748
  428c56:	mov    rcx,QWORD PTR [rsp+0x90]
  428c5e:	call   0x43a748
  428c63:	mov    rax,QWORD PTR [rsp+0x20]
  428c68:	mov    rsi,QWORD PTR [rsp+0x58]
  428c6d:	mov    rbx,rax
  428c70:	add    rsi,rax
  428c73:	mov    rcx,QWORD PTR [rbx+0x10]
  428c77:	add    rbx,0x18
  428c7b:	call   0x43a748
  428c80:	cmp    rbx,rsi
  428c83:	jne    0x428c73
  428c85:	mov    rcx,QWORD PTR [rsp+0x20]
  428c8a:	call   0x43a748
  428c8f:	mov    eax,0x1
  428c94:	jmp    0x428531
  428c99:	mov    r9,QWORD PTR [rdi+r10*1]
  428c9d:	mov    QWORD PTR [r11],r9
  428ca0:	jmp    0x428aa0
  428ca5:	mov    edx,DWORD PTR [rsp+0x60]
  428ca9:	test   edx,edx
  428cab:	je     0x428b26
  428cb1:	jmp    0x4284ef
  428cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428cc0:	mov    rcx,QWORD PTR [rsp+0x20]
  428cc5:	call   0x43a748
  428cca:	mov    edx,0x100
  428ccf:	mov    ecx,0x8
  428cd4:	call   0x43a798
  428cd9:	mov    rdi,QWORD PTR [rsp+0x118]
  428ce1:	test   rax,rax
  428ce4:	mov    QWORD PTR [rdi+0x58],rax
  428ce8:	setne  al
  428ceb:	jmp    0x428531
  428cf0:	test   r12,r12
  428cf3:	mov    QWORD PTR [rbx+0x8],0x0
  428cfb:	mov    QWORD PTR [rbx],0x0
  428d02:	jle    0x428525
  428d08:	jmp    0x42886a
  428d0d:	nop    DWORD PTR [rax]
  428d10:	xor    r10d,r10d
  428d13:	jmp    0x428ae7
  428d18:	mov    rsi,QWORD PTR [rsp+0x40]
  428d1d:	cmp    BYTE PTR [rsp+0x4f],0x0
  428d22:	lea    rdx,[rsi+rdx*8]
  428d26:	mov    rcx,QWORD PTR [rdx]
  428d29:	mov    QWORD PTR [rax+0x50],rcx
  428d2d:	je     0x428c4e
  428d33:	mov    rdx,QWORD PTR [rdx]
  428d36:	mov    QWORD PTR [rax+0x850],rdx
  428d3d:	jmp    0x428c4e
  428d42:	mov    edx,0x200
  428d47:	mov    ecx,0x8
  428d4c:	call   0x43a798
  428d51:	mov    rsi,QWORD PTR [rsp+0x118]
  428d59:	test   rax,rax
  428d5c:	mov    QWORD PTR [rsi+0x60],rax
  428d60:	je     0x4284ef
  428d66:	mov    rsi,QWORD PTR [rsp+0x38]
  428d6b:	mov    r8,QWORD PTR [rsp+0x30]
  428d70:	mov    r13,rax
  428d73:	xor    ebp,ebp
  428d75:	mov    ecx,DWORD PTR [r8+rbp*1]
  428d79:	mov    rbx,QWORD PTR [rsp+0x28]
  428d7e:	mov    r10,r13
  428d81:	mov    r9d,0x1
  428d87:	test   ecx,ecx
  428d89:	lea    rbx,[rbx+rbp*1+0x20]
  428d8e:	jne    0x428d9d
  428d90:	jmp    0x428de1
  428d92:	add    r9d,r9d
  428d95:	add    r10,0x8
  428d99:	shr    ecx,1
  428d9b:	je     0x428de1
  428d9d:	test   cl,0x1
  428da0:	je     0x428d92
  428da2:	mov    rdx,QWORD PTR [rsp+0x20]
  428da7:	test   DWORD PTR [rdx+rbp*1+0x1800],r9d
  428daf:	jne    0x428df7
  428db1:	mov    r11,rbx
  428db4:	xor    edx,edx
  428db6:	mov    r14d,DWORD PTR [r11]
  428db9:	add    rdx,0x1
  428dbd:	add    r11,0x20
  428dc1:	and    r14d,r9d
  428dc4:	test   r14d,r14d
  428dc7:	je     0x428db6
  428dc9:	shl    rdx,0x3
  428dcd:	mov    r11,QWORD PTR [rdi+rdx*1]
  428dd1:	mov    QWORD PTR [r10],r11
  428dd4:	mov    rdx,QWORD PTR [rsi+rdx*1]
  428dd8:	mov    QWORD PTR [r10+0x800],rdx
  428ddf:	jmp    0x428d92
  428de1:	add    rbp,0x4
  428de5:	add    r13,0x100
  428dec:	cmp    rbp,0x20
  428df0:	jne    0x428d75
  428df2:	jmp    0x428c24
  428df7:	xor    edx,edx
  428df9:	jmp    0x428dcd
  428dfb:	mov    rcx,QWORD PTR [rsp+0x20]
  428e00:	call   0x43a748
  428e05:	test   r12,r12
  428e08:	je     0x428cca
  428e0e:	jmp    0x42852f
  428e13:	nop    DWORD PTR [rax]
  428e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e20:	push   r13
  428e22:	push   r12
  428e24:	push   rbp
  428e25:	push   rdi
  428e26:	push   rsi
  428e27:	push   rbx
  428e28:	sub    rsp,0x28
  428e2c:	mov    r10,QWORD PTR [rdx+0x8]
  428e30:	xor    eax,eax
  428e32:	test   r10,r10
  428e35:	je     0x428f1f
  428e3b:	mov    rbx,QWORD PTR [r8+0x8]
  428e3f:	test   rbx,rbx
  428e42:	je     0x428f1f
  428e48:	mov    r9,QWORD PTR [rcx+0x8]
  428e4c:	mov    rdi,rdx
  428e4f:	lea    rdx,[r10+rbx*1]
  428e53:	mov    rax,QWORD PTR [rcx]
  428e56:	mov    rsi,rcx
  428e59:	mov    rbp,r8
  428e5c:	lea    rcx,[rdx+r9*1]
  428e60:	cmp    rcx,rax
  428e63:	jg     0x428f76
  428e69:	mov    rcx,QWORD PTR [rsi+0x10]
  428e6d:	lea    r12,[r9+r10*1]
  428e71:	mov    r13,QWORD PTR [rdi+0x10]
  428e75:	mov    r8,QWORD PTR [rbp+0x10]
  428e79:	lea    rax,[r10-0x1]
  428e7d:	sub    r9,0x1
  428e81:	add    r12,rbx
  428e84:	sub    rbx,0x1
  428e88:	mov    r11,QWORD PTR [r13+rax*8+0x0]
  428e8d:	mov    rdx,QWORD PTR [r8+rbx*8]
  428e91:	cmp    r11,rdx
  428e94:	je     0x428eab
  428e96:	jge    0x428f30
  428e9c:	sub    rbx,0x1
  428ea0:	js     0x428ee5
  428ea2:	mov    rdx,QWORD PTR [r8+rbx*8]
  428ea6:	cmp    r11,rdx
  428ea9:	jne    0x428e96
  428eab:	test   r9,r9
  428eae:	jns    0x428ebc
  428eb0:	jmp    0x428eca
  428eb2:	sub    r9,0x1
  428eb6:	cmp    r9,0xffffffffffffffff
  428eba:	je     0x428eca
  428ebc:	mov    r10,QWORD PTR [rcx+r9*8]
  428ec0:	cmp    r10,r11
  428ec3:	jg     0x428eb2
  428ec5:	cmp    r10,r11
  428ec8:	je     0x428ed2
  428eca:	sub    r12,0x1
  428ece:	mov    QWORD PTR [rcx+r12*8],r11
  428ed2:	sub    rax,0x1
  428ed6:	js     0x428ee5
  428ed8:	sub    rbx,0x1
  428edc:	js     0x428ee5
  428ede:	mov    r11,QWORD PTR [r13+rax*8+0x0]
  428ee3:	jmp    0x428ea2
  428ee5:	mov    rdx,QWORD PTR [rsi+0x8]
  428ee9:	mov    r8,rdx
  428eec:	add    r8,QWORD PTR [rdi+0x8]
  428ef0:	lea    rax,[rdx-0x1]
  428ef4:	add    r8,QWORD PTR [rbp+0x8]
  428ef8:	lea    r10,[r8-0x1]
  428efc:	sub    r8,r12
  428eff:	add    rdx,r8
  428f02:	test   r8,r8
  428f05:	mov    QWORD PTR [rsi+0x8],rdx
  428f09:	jle    0x428f10
  428f0b:	test   rax,rax
  428f0e:	jns    0x428f52
  428f10:	shl    r8,0x3
  428f14:	lea    rdx,[rcx+r12*8]
  428f18:	call   0x43a6b8
  428f1d:	xor    eax,eax
  428f1f:	add    rsp,0x28
  428f23:	pop    rbx
  428f24:	pop    rsi
  428f25:	pop    rdi
  428f26:	pop    rbp
  428f27:	pop    r12
  428f29:	pop    r13
  428f2b:	ret    
  428f2c:	nop    DWORD PTR [rax+0x0]
  428f30:	sub    rax,0x1
  428f34:	js     0x428ee5
  428f36:	mov    r11,QWORD PTR [r13+rax*8+0x0]
  428f3b:	jmp    0x428e91
  428f40:	lea    r9,[rax+r8*1]
  428f44:	sub    rax,0x1
  428f48:	cmp    rax,0xffffffffffffffff
  428f4c:	mov    QWORD PTR [rcx+r9*8],rdx
  428f50:	je     0x428f10
  428f52:	mov    r9,QWORD PTR [rcx+r10*8]
  428f56:	mov    rdx,QWORD PTR [rcx+rax*8]
  428f5a:	cmp    r9,rdx
  428f5d:	jle    0x428f40
  428f5f:	lea    rdx,[rax+r8*1]
  428f63:	sub    r10,0x1
  428f67:	sub    r8,0x1
  428f6b:	mov    QWORD PTR [rcx+rdx*8],r9
  428f6f:	jne    0x428f52
  428f71:	xor    r8d,r8d
  428f74:	jmp    0x428f14
  428f76:	lea    rbx,[rdx+rax*1]
  428f7a:	mov    rcx,QWORD PTR [rsi+0x10]
  428f7e:	lea    rdx,[rbx*8+0x0]
  428f86:	call   0x43a680
  428f8b:	test   rax,rax
  428f8e:	je     0x428fab
  428f90:	mov    QWORD PTR [rsi],rbx
  428f93:	mov    QWORD PTR [rsi+0x10],rax
  428f97:	mov    rcx,rax
  428f9a:	mov    r9,QWORD PTR [rsi+0x8]
  428f9e:	mov    r10,QWORD PTR [rdi+0x8]
  428fa2:	mov    rbx,QWORD PTR [rbp+0x8]
  428fa6:	jmp    0x428e6d
  428fab:	mov    eax,0xc
  428fb0:	jmp    0x428f1f
  428fb5:	nop
  428fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fc0:	push   r15
  428fc2:	push   r14
  428fc4:	push   r13
  428fc6:	push   r12
  428fc8:	push   rbp
  428fc9:	push   rdi
  428fca:	push   rsi
  428fcb:	push   rbx
  428fcc:	sub    rsp,0x68
  428fd0:	mov    rax,QWORD PTR [rcx+0x38]
  428fd4:	mov    rbp,rdx
  428fd7:	lea    rdx,[rdx+rdx*2]
  428fdb:	mov    QWORD PTR [rsp+0x40],0x0
  428fe4:	mov    QWORD PTR [rsp+0x48],0x0
  428fed:	mov    QWORD PTR [rsp+0x50],0x0
  428ff6:	mov    rdi,rcx
  428ff9:	lea    r15,[rax+rdx*8]
  428ffd:	mov    QWORD PTR [rsp+0xc8],r9
  429005:	mov    rbx,QWORD PTR [r15+0x8]
  429009:	test   rbx,rbx
  42900c:	jle    0x429214
  429012:	lea    rax,[r15+0x10]
  429016:	xor    r14d,r14d
  429019:	mov    QWORD PTR [rsp+0xc0],r8
  429021:	mov    QWORD PTR [rsp+0x28],rax
  429026:	lea    rax,[r8+0x10]
  42902a:	mov    QWORD PTR [rsp+0x30],rax
  42902f:	lea    rax,[rsp+0x40]
  429034:	mov    QWORD PTR [rsp+0x38],rax
  429039:	jmp    0x42909d
  42903b:	nop    DWORD PTR [rax+rax*1+0x0]
  429040:	mov    rax,QWORD PTR [rsp+0xc0]
  429048:	mov    rdx,QWORD PTR [rsp+0x30]
  42904d:	mov    r8,r13
  429050:	mov    rcx,QWORD PTR [rax+0x8]
  429054:	call   0x426410
  429059:	test   rax,rax
  42905c:	je     0x4290f4
  429062:	add    rsi,QWORD PTR [rdi+0x38]
  429066:	mov    rdx,QWORD PTR [rsp+0xc8]
  42906e:	mov    rcx,QWORD PTR [rsp+0x38]
  429073:	mov    r8,rsi
  429076:	call   0x428e20
  42907b:	test   eax,eax
  42907d:	jne    0x429200
  429083:	mov    rbx,QWORD PTR [r15+0x8]
  429087:	nop    WORD PTR [rax+rax*1+0x0]
  429090:	add    r14,0x1
  429094:	cmp    rbx,r14
  429097:	jle    0x429175
  42909d:	mov    rax,QWORD PTR [r15+0x10]
  4290a1:	mov    rax,QWORD PTR [rax+r14*8]
  4290a5:	cmp    rax,rbp
  4290a8:	je     0x429090
  4290aa:	mov    rdx,rax
  4290ad:	shl    rdx,0x4
  4290b1:	add    rdx,QWORD PTR [rdi]
  4290b4:	test   BYTE PTR [rdx+0x8],0x8
  4290b8:	je     0x429090
  4290ba:	lea    rsi,[rax+rax*2]
  4290be:	shl    rsi,0x3
  4290c2:	mov    rax,rsi
  4290c5:	add    rax,QWORD PTR [rdi+0x28]
  4290c9:	cmp    QWORD PTR [rax+0x8],0x1
  4290ce:	mov    rdx,QWORD PTR [rax+0x10]
  4290d2:	mov    r13,QWORD PTR [rdx]
  4290d5:	jle    0x429135
  4290d7:	mov    r12,QWORD PTR [rdx+0x8]
  4290db:	mov    rdx,QWORD PTR [rsp+0x28]
  4290e0:	mov    r8,r13
  4290e3:	mov    rcx,rbx
  4290e6:	call   0x426410
  4290eb:	test   rax,rax
  4290ee:	je     0x429040
  4290f4:	test   r12,r12
  4290f7:	jle    0x429090
  4290f9:	mov    rdx,QWORD PTR [rsp+0x28]
  4290fe:	mov    r8,r12
  429101:	mov    rcx,rbx
  429104:	call   0x426410
  429109:	test   rax,rax
  42910c:	jne    0x429090
  42910e:	mov    rax,QWORD PTR [rsp+0xc0]
  429116:	mov    rdx,QWORD PTR [rsp+0x30]
  42911b:	mov    r8,r12
  42911e:	mov    rcx,QWORD PTR [rax+0x8]
  429122:	call   0x426410
  429127:	test   rax,rax
  42912a:	je     0x429090
  429130:	jmp    0x429062
  429135:	mov    rdx,QWORD PTR [rsp+0x28]
  42913a:	mov    r8,r13
  42913d:	mov    rcx,rbx
  429140:	call   0x426410
  429145:	test   rax,rax
  429148:	jne    0x429090
  42914e:	mov    rax,QWORD PTR [rsp+0xc0]
  429156:	mov    rdx,QWORD PTR [rsp+0x30]
  42915b:	mov    r8,r13
  42915e:	mov    rcx,QWORD PTR [rax+0x8]
  429162:	call   0x426410
  429167:	test   rax,rax
  42916a:	jne    0x429062
  429170:	jmp    0x429090
  429175:	mov    r13,QWORD PTR [rsp+0xc0]
  42917d:	xor    esi,esi
  42917f:	test   rbx,rbx
  429182:	lea    rdi,[rsp+0x50]
  429187:	lea    rbp,[r13+0x10]
  42918b:	lea    r12,[r13+0x8]
  42918f:	jg     0x42919d
  429191:	jmp    0x4291e2
  429193:	add    rsi,0x1
  429197:	cmp    QWORD PTR [r15+0x8],rsi
  42919b:	jle    0x4291e2
  42919d:	mov    rax,QWORD PTR [r15+0x10]
  4291a1:	mov    rcx,QWORD PTR [rsp+0x48]
  4291a6:	mov    rdx,rdi
  4291a9:	mov    rbx,QWORD PTR [rax+rsi*8]
  4291ad:	mov    r8,rbx
  4291b0:	call   0x426410
  4291b5:	test   rax,rax
  4291b8:	jne    0x429193
  4291ba:	mov    rcx,QWORD PTR [r13+0x8]
  4291be:	mov    r8,rbx
  4291c1:	mov    rdx,rbp
  4291c4:	add    rsi,0x1
  4291c8:	call   0x426410
  4291cd:	lea    r8,[rax-0x1]
  4291d1:	mov    rdx,rbp
  4291d4:	mov    rcx,r12
  4291d7:	call   0x426560
  4291dc:	cmp    QWORD PTR [r15+0x8],rsi
  4291e0:	jg     0x42919d
  4291e2:	mov    rcx,QWORD PTR [rsp+0x50]
  4291e7:	call   0x43a748
  4291ec:	xor    eax,eax
  4291ee:	add    rsp,0x68
  4291f2:	pop    rbx
  4291f3:	pop    rsi
  4291f4:	pop    rdi
  4291f5:	pop    rbp
  4291f6:	pop    r12
  4291f8:	pop    r13
  4291fa:	pop    r14
  4291fc:	pop    r15
  4291fe:	ret    
  4291ff:	nop
  429200:	mov    rcx,QWORD PTR [rsp+0x50]
  429205:	mov    DWORD PTR [rsp+0x28],eax
  429209:	call   0x43a748
  42920e:	mov    eax,DWORD PTR [rsp+0x28]
  429212:	jmp    0x4291ee
  429214:	xor    ecx,ecx
  429216:	jmp    0x4291e7
  429218:	nop    DWORD PTR [rax+rax*1+0x0]
  429220:	push   rsi
  429221:	push   rbx
  429222:	sub    rsp,0x28
  429226:	test   rdx,rdx
  429229:	mov    rsi,rcx
  42922c:	js     0x429280
  42922e:	cmp    rdx,QWORD PTR [rcx+0x58]
  429232:	je     0x4292f0
  429238:	cmp    DWORD PTR [rcx+0x90],0x1
  42923f:	jle    0x429290
  429241:	mov    rax,QWORD PTR [rcx+0x10]
  429245:	jmp    0x42925a
  429247:	nop    WORD PTR [rax+rax*1+0x0]
  429250:	sub    rdx,0x1
  429254:	cmp    rdx,0xffffffffffffffff
  429258:	je     0x429280
  42925a:	movzx  ebx,WORD PTR [rax+rdx*2]
  42925e:	cmp    bx,0xffff
  429262:	je     0x429250
  429264:	cmp    BYTE PTR [rsi+0x8e],0x0
  42926b:	jne    0x4292c9
  42926d:	cmp    bx,0xa
  429271:	je     0x4292b9
  429273:	xor    eax,eax
  429275:	add    rsp,0x28
  429279:	pop    rbx
  42927a:	pop    rsi
  42927b:	ret    
  42927c:	nop    DWORD PTR [rax+0x0]
  429280:	mov    eax,DWORD PTR [rsi+0x70]
  429283:	add    rsp,0x28
  429287:	pop    rbx
  429288:	pop    rsi
  429289:	ret    
  42928a:	nop    WORD PTR [rax+rax*1+0x0]
  429290:	mov    rax,QWORD PTR [rcx+0x8]
  429294:	mov    r8,QWORD PTR [rcx+0x80]
  42929b:	movzx  eax,BYTE PTR [rax+rdx*1]
  42929f:	mov    rdx,rax
  4292a2:	sar    rax,0x5
  4292a6:	mov    eax,DWORD PTR [r8+rax*4]
  4292aa:	mov    ecx,edx
  4292ac:	and    ecx,0x1f
  4292af:	bt     eax,ecx
  4292b2:	jb     0x4292e0
  4292b4:	cmp    dl,0xa
  4292b7:	jne    0x429273
  4292b9:	cmp    BYTE PTR [rsi+0x8d],0x0
  4292c0:	mov    eax,0x2
  4292c5:	je     0x429273
  4292c7:	jmp    0x429275
  4292c9:	movzx  ecx,bx
  4292cc:	mov    edx,0x107
  4292d1:	call   0x43a6e0
  4292d6:	test   eax,eax
  4292d8:	jne    0x4292e0
  4292da:	cmp    bx,0x5f
  4292de:	jne    0x42926d
  4292e0:	mov    eax,0x1
  4292e5:	jmp    0x429275
  4292e7:	nop    WORD PTR [rax+rax*1+0x0]
  4292f0:	and    r8d,0x2
  4292f4:	cmp    r8d,0x1
  4292f8:	sbb    eax,eax
  4292fa:	and    eax,0x2
  4292fd:	add    eax,0x8
  429300:	jmp    0x429275
  429305:	nop
  429306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429310:	push   rbx
  429311:	sub    rsp,0x20
  429315:	mov    rax,QWORD PTR [rcx+0x8]
  429319:	movzx  r9d,BYTE PTR [rax+r8*1]
  42931e:	movzx  eax,BYTE PTR [rdx+0x8]
  429322:	cmp    al,0x3
  429324:	je     0x4293f5
  42932a:	jbe    0x4293e0
  429330:	cmp    al,0x5
  429332:	je     0x429345
  429334:	cmp    al,0x7
  429336:	jne    0x4293d0
  42933c:	test   r9b,r9b
  42933f:	js     0x4293d0
  429345:	cmp    r9b,0xa
  429349:	je     0x429432
  42934f:	test   r9b,r9b
  429352:	jne    0x429367
  429354:	mov    r9,QWORD PTR [rcx+0x98]
  42935b:	xor    eax,eax
  42935d:	test   BYTE PTR [r9+0xd0],0x80
  429365:	jne    0x4293d2
  429367:	mov    ebx,DWORD PTR [rdx+0x8]
  42936a:	mov    eax,0x1
  42936f:	test   ebx,0x3ff00
  429375:	je     0x4293d2
  429377:	mov    rdx,r8
  42937a:	mov    r8d,DWORD PTR [rcx+0xa0]
  429381:	shr    ebx,0x8
  429384:	call   0x429220
  429389:	mov    ecx,ebx
  42938b:	mov    edx,eax
  42938d:	and    cx,0x3ff
  429392:	test   bl,0x4
  429395:	jne    0x429420
  42939b:	and    ebx,0x8
  42939e:	je     0x4293a7
  4293a0:	xor    eax,eax
  4293a2:	test   dl,0x1
  4293a5:	jne    0x4293d2
  4293a7:	test   cl,0x20
  4293aa:	je     0x4293b3
  4293ac:	xor    eax,eax
  4293ae:	test   dl,0x2
  4293b1:	je     0x4293d2
  4293b3:	and    ecx,0x80
  4293b9:	mov    eax,0x1
  4293be:	je     0x4293d2
  4293c0:	mov    eax,edx
  4293c2:	shr    eax,0x3
  4293c5:	and    eax,0x1
  4293c8:	jmp    0x4293d2
  4293ca:	nop    WORD PTR [rax+rax*1+0x0]
  4293d0:	xor    eax,eax
  4293d2:	add    rsp,0x20
  4293d6:	pop    rbx
  4293d7:	ret    
  4293d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4293e0:	cmp    al,0x1
  4293e2:	jne    0x4293d0
  4293e4:	xor    eax,eax
  4293e6:	cmp    BYTE PTR [rdx],r9b
  4293e9:	je     0x429367
  4293ef:	add    rsp,0x20
  4293f3:	pop    rbx
  4293f4:	ret    
  4293f5:	mov    r10,QWORD PTR [rdx]
  4293f8:	movzx  eax,r9b
  4293fc:	and    r9d,0x1f
  429400:	sar    rax,0x5
  429404:	mov    r10d,DWORD PTR [r10+rax*4]
  429408:	xor    eax,eax
  42940a:	bt     r10d,r9d
  42940e:	jb     0x429367
  429414:	jmp    0x4293d2
  429416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429420:	xor    eax,eax
  429422:	test   dl,0x1
  429425:	je     0x4293d2
  429427:	and    ebx,0x8
  42942a:	je     0x4293a7
  429430:	jmp    0x4293d2
  429432:	mov    r9,QWORD PTR [rcx+0x98]
  429439:	xor    eax,eax
  42943b:	test   BYTE PTR [r9+0xd0],0x40
  429443:	jne    0x429367
  429449:	jmp    0x4293d2
  42944b:	nop    DWORD PTR [rax+rax*1+0x0]
  429450:	push   r15
  429452:	push   r14
  429454:	push   r13
  429456:	push   r12
  429458:	push   rbp
  429459:	push   rdi
  42945a:	push   rsi
  42945b:	push   rbx
  42945c:	sub    rsp,0x58
  429460:	mov    rax,QWORD PTR [rcx+0x28]
  429464:	mov    rsi,rdx
  429467:	mov    rbx,rcx
  42946a:	mov    rdi,rdx
  42946d:	mov    r15d,r8d
  429470:	sub    rsi,rax
  429473:	cmp    rax,rdx
  429476:	jle    0x4294db
  429478:	cmp    DWORD PTR [rcx+0x90],0x1
  42947f:	jle    0x429488
  429481:	mov    DWORD PTR [rcx+0x20],0x0
  429488:	mov    rax,QWORD PTR [rbx+0x50]
  42948c:	mov    QWORD PTR [rbx+0x30],0x0
  429494:	mov    rsi,rdi
  429497:	mov    QWORD PTR [rbx+0x28],0x0
  42949f:	mov    QWORD PTR [rbx+0x38],0x0
  4294a7:	mov    BYTE PTR [rbx+0x8c],0x0
  4294ae:	mov    QWORD PTR [rbx+0x58],rax
  4294b2:	mov    rax,QWORD PTR [rbx+0x60]
  4294b6:	mov    QWORD PTR [rbx+0x68],rax
  4294ba:	mov    eax,r15d
  4294bd:	and    eax,0x1
  4294c0:	cmp    eax,0x1
  4294c3:	sbb    eax,eax
  4294c5:	and    eax,0x2
  4294c8:	add    eax,0x4
  4294cb:	cmp    BYTE PTR [rbx+0x8b],0x0
  4294d2:	mov    DWORD PTR [rbx+0x70],eax
  4294d5:	je     0x429593
  4294db:	test   rsi,rsi
  4294de:	je     0x42954b
  4294e0:	mov    rax,QWORD PTR [rbx+0x38]
  4294e4:	cmp    rsi,rax
  4294e7:	jge    0x4295c3
  4294ed:	cmp    BYTE PTR [rbx+0x8c],0x0
  4294f4:	jne    0x429683
  4294fa:	lea    rdx,[rsi-0x1]
  4294fe:	mov    r8d,r15d
  429501:	mov    rcx,rbx
  429504:	call   0x429220
  429509:	cmp    DWORD PTR [rbx+0x90],0x1
  429510:	mov    DWORD PTR [rbx+0x70],eax
  429513:	jle    0x42952c
  429515:	mov    rcx,QWORD PTR [rbx+0x10]
  429519:	mov    r8,QWORD PTR [rbx+0x30]
  42951d:	lea    rdx,[rcx+rsi*2]
  429521:	sub    r8,rsi
  429524:	add    r8,r8
  429527:	call   0x43a6b0
  42952c:	movzx  eax,BYTE PTR [rbx+0x8b]
  429533:	test   al,al
  429535:	jne    0x429780
  42953b:	sub    QWORD PTR [rbx+0x30],rsi
  42953f:	sub    QWORD PTR [rbx+0x38],rsi
  429543:	test   al,al
  429545:	jne    0x42954b
  429547:	add    QWORD PTR [rbx+0x8],rsi
  42954b:	mov    rax,QWORD PTR [rbx+0x58]
  42954f:	sub    QWORD PTR [rbx+0x68],rsi
  429553:	mov    QWORD PTR [rbx+0x28],rdi
  429557:	sub    rax,rsi
  42955a:	cmp    DWORD PTR [rbx+0x90],0x1
  429561:	mov    QWORD PTR [rbx+0x58],rax
  429565:	jle    0x4295b0
  429567:	cmp    BYTE PTR [rbx+0x88],0x0
  42956e:	mov    rcx,rbx
  429571:	jne    0x4295a0
  429573:	call   0x424f80
  429578:	mov    QWORD PTR [rbx+0x48],0x0
  429580:	xor    eax,eax
  429582:	add    rsp,0x58
  429586:	pop    rbx
  429587:	pop    rsi
  429588:	pop    rdi
  429589:	pop    rbp
  42958a:	pop    r12
  42958c:	pop    r13
  42958e:	pop    r14
  429590:	pop    r15
  429592:	ret    
  429593:	mov    rax,QWORD PTR [rbx]
  429596:	mov    QWORD PTR [rbx+0x8],rax
  42959a:	jmp    0x4294db
  42959f:	nop
  4295a0:	call   0x425120
  4295a5:	test   eax,eax
  4295a7:	je     0x429578
  4295a9:	jmp    0x429582
  4295ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4295b0:	cmp    BYTE PTR [rbx+0x8b],0x0
  4295b7:	jne    0x429911
  4295bd:	mov    QWORD PTR [rbx+0x30],rax
  4295c1:	jmp    0x429578
  4295c3:	cmp    BYTE PTR [rbx+0x8c],0x0
  4295ca:	mov    r12,QWORD PTR [rbx+0x30]
  4295ce:	jne    0x429991
  4295d4:	movsxd rdx,DWORD PTR [rbx+0x90]
  4295db:	mov    QWORD PTR [rbx+0x30],0x0
  4295e3:	cmp    edx,0x1
  4295e6:	jle    0x429940
  4295ec:	cmp    BYTE PTR [rbx+0x89],0x0
  4295f3:	jne    0x4297f0
  4295f9:	mov    r11,QWORD PTR [rbx+0x28]
  4295fd:	lea    r14,[r11+rax*1]
  429601:	cmp    rdi,r14
  429604:	jle    0x429b27
  42960a:	lea    rax,[rbx+0x20]
  42960e:	mov    QWORD PTR [rsp+0x20],rax
  429613:	lea    rax,[rsp+0x40]
  429618:	mov    QWORD PTR [rsp+0x28],rax
  42961d:	jmp    0x42962c
  42961f:	nop
  429620:	add    r14,rax
  429623:	cmp    rdi,r14
  429626:	jle    0x4299b9
  42962c:	mov    rbp,QWORD PTR [rbx+0x50]
  429630:	mov    rdx,r14
  429633:	add    rdx,QWORD PTR [rbx]
  429636:	mov    rcx,QWORD PTR [rsp+0x28]
  42963b:	mov    r9,QWORD PTR [rsp+0x20]
  429640:	mov    r13d,DWORD PTR [rbx+0x20]
  429644:	sub    rbp,r14
  429647:	mov    r8,rbp
  42964a:	call   0x423f00
  42964f:	lea    rdx,[rax-0x1]
  429653:	movzx  ecx,WORD PTR [rsp+0x40]
  429658:	cmp    rdx,0xfffffffffffffffc
  42965c:	jbe    0x429620
  42965e:	test   rbp,rbp
  429661:	je     0x429ac2
  429667:	test   rax,rax
  42966a:	je     0x429ac2
  429670:	mov    rax,QWORD PTR [rbx]
  429673:	movzx  ecx,BYTE PTR [rax+r14*1]
  429678:	mov    DWORD PTR [rbx+0x20],r13d
  42967c:	mov    eax,0x1
  429681:	jmp    0x429620
  429683:	mov    r14,QWORD PTR [rbx+0x30]
  429687:	mov    r13,QWORD PTR [rbx+0x18]
  42968b:	xor    ecx,ecx
  42968d:	mov    rdx,r14
  429690:	jmp    0x42969d
  429692:	jle    0x4296cb
  429694:	lea    rcx,[rax+0x1]
  429698:	cmp    rcx,rdx
  42969b:	jge    0x4296c0
  42969d:	lea    rax,[rdx+rcx*1]
  4296a1:	mov    r8,rax
  4296a4:	shr    r8,0x3f
  4296a8:	add    rax,r8
  4296ab:	sar    rax,1
  4296ae:	mov    r8,QWORD PTR [r13+rax*8+0x0]
  4296b3:	mov    rbp,rax
  4296b6:	cmp    rsi,r8
  4296b9:	jge    0x429692
  4296bb:	mov    rdx,rax
  4296be:	jmp    0x429698
  4296c0:	lea    rbp,[rax+0x1]
  4296c4:	cmp    rsi,r8
  4296c7:	cmovle rbp,rax
  4296cb:	lea    r12,[rbp-0x1]
  4296cf:	mov    r8d,r15d
  4296d2:	mov    rcx,rbx
  4296d5:	mov    rdx,r12
  4296d8:	call   0x429220
  4296dd:	cmp    rsi,rbp
  4296e0:	mov    DWORD PTR [rbx+0x70],eax
  4296e3:	jne    0x4296ee
  4296e5:	cmp    rsi,r14
  4296e8:	jl     0x429890
  4296ee:	mov    rax,rsi
  4296f1:	mov    BYTE PTR [rbx+0x8c],0x0
  4296f8:	sub    rax,rdi
  4296fb:	add    rax,QWORD PTR [rbx+0x50]
  4296ff:	mov    QWORD PTR [rbx+0x58],rax
  429703:	mov    rax,rsi
  429706:	sub    rax,rdi
  429709:	add    rax,QWORD PTR [rbx+0x60]
  42970d:	test   rbp,rbp
  429710:	mov    QWORD PTR [rbx+0x68],rax
  429714:	jle    0x429735
  429716:	mov    rax,QWORD PTR [r13+rbp*8-0x8]
  42971b:	cmp    rax,rsi
  42971e:	je     0x42972d
  429720:	jmp    0x429735
  429722:	cmp    QWORD PTR [r13+r12*8-0x8],rax
  429727:	jne    0x429735
  429729:	sub    r12,0x1
  42972d:	test   r12,r12
  429730:	mov    rbp,r12
  429733:	jne    0x429722
  429735:	cmp    rbp,r14
  429738:	jge    0x4297a0
  42973a:	mov    rax,QWORD PTR [rbx+0x10]
  42973e:	cmp    WORD PTR [rax+rbp*2],0xffff
  429743:	je     0x429757
  429745:	jmp    0x4297a2
  429747:	nop    WORD PTR [rax+rax*1+0x0]
  429750:	cmp    WORD PTR [rax+rbp*2],0xffff
  429755:	jne    0x4297a2
  429757:	add    rbp,0x1
  42975b:	cmp    rbp,r14
  42975e:	jne    0x429750
  429760:	mov    QWORD PTR [rbx+0x30],0x0
  429768:	xor    r8d,r8d
  42976b:	mov    QWORD PTR [rbx+0x38],r8
  42976f:	movzx  eax,BYTE PTR [rbx+0x8b]
  429776:	jmp    0x429543
  42977b:	nop    DWORD PTR [rax+rax*1+0x0]
  429780:	mov    rcx,QWORD PTR [rbx+0x8]
  429784:	mov    r8,QWORD PTR [rbx+0x30]
  429788:	lea    rdx,[rcx+rsi*1]
  42978c:	sub    r8,rsi
  42978f:	call   0x43a6b0
  429794:	movzx  eax,BYTE PTR [rbx+0x8b]
  42979b:	jmp    0x42953b
  4297a0:	je     0x429760
  4297a2:	mov    r8,QWORD PTR [r13+rbp*8+0x0]
  4297a7:	sub    r8,rsi
  4297aa:	cmp    r8,0x0
  4297ae:	mov    QWORD PTR [rbx+0x30],r8
  4297b2:	je     0x42976b
  4297b4:	jle    0x4297d4
  4297b6:	mov    rax,QWORD PTR [rbx+0x10]
  4297ba:	lea    rdx,[rax+r8*2]
  4297be:	xchg   ax,ax
  4297c0:	mov    r9d,0xffffffff
  4297c6:	add    rax,0x2
  4297ca:	mov    WORD PTR [rax-0x2],r9w
  4297cf:	cmp    rax,rdx
  4297d2:	jne    0x4297c0
  4297d4:	mov    rcx,QWORD PTR [rbx+0x8]
  4297d8:	mov    edx,0xff
  4297dd:	call   0x43a6a8
  4297e2:	mov    r8,QWORD PTR [rbx+0x30]
  4297e6:	jmp    0x42976b
  4297e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4297f0:	mov    r8,QWORD PTR [rbx]
  4297f3:	mov    r11,QWORD PTR [rbx+0x28]
  4297f7:	mov    rcx,rsi
  4297fa:	sub    rcx,rdx
  4297fd:	mov    rdx,rcx
  429800:	lea    rbp,[r8+r11*1]
  429804:	add    rdx,rbp
  429807:	cmp    rdx,r8
  42980a:	cmovae r8,rdx
  42980e:	lea    rdx,[rbp+rsi*1-0x1]
  429813:	cmp    rdx,r8
  429816:	jae    0x42982d
  429818:	jmp    0x4295fd
  42981d:	nop    DWORD PTR [rax]
  429820:	sub    rdx,0x1
  429824:	cmp    rdx,r8
  429827:	jb     0x4295fd
  42982d:	movzx  ecx,BYTE PTR [rdx]
  429830:	and    ecx,0xffffffc0
  429833:	cmp    cl,0x80
  429836:	je     0x429820
  429838:	mov    r8,rbp
  42983b:	add    r8,QWORD PTR [rbx+0x58]
  42983f:	mov    rcx,QWORD PTR [rbx+0x78]
  429843:	mov    r13,rdx
  429846:	sub    r8,rdx
  429849:	test   rcx,rcx
  42984c:	jne    0x429adc
  429852:	lea    rcx,[rsp+0x3a]
  429857:	lea    r9,[rsp+0x3c]
  42985c:	add    rbp,rsi
  42985f:	mov    DWORD PTR [rsp+0x3c],0x0
  429867:	call   0x423f00
  42986c:	mov    rdx,rbp
  42986f:	sub    rdx,r13
  429872:	cmp    rax,rdx
  429875:	jb     0x429881
  429877:	cmp    rax,0xfffffffffffffffd
  42987b:	jbe    0x4299f3
  429881:	mov    r11,QWORD PTR [rbx+0x28]
  429885:	mov    rax,QWORD PTR [rbx+0x38]
  429889:	jmp    0x4295fd
  42988e:	xchg   ax,ax
  429890:	mov    r15,QWORD PTR [r13+rbp*8+0x0]
  429895:	cmp    r15,rsi
  429898:	jne    0x4296ee
  42989e:	mov    rcx,QWORD PTR [rbx+0x10]
  4298a2:	sub    r14,rsi
  4298a5:	mov    r8,r14
  4298a8:	add    r8,r8
  4298ab:	lea    rdx,[rcx+rsi*2]
  4298af:	call   0x43a6b0
  4298b4:	mov    rcx,QWORD PTR [rbx+0x8]
  4298b8:	mov    r8,QWORD PTR [rbx+0x30]
  4298bc:	lea    rdx,[rcx+rsi*1]
  4298c0:	sub    r8,rsi
  4298c3:	call   0x43a6b0
  4298c8:	mov    rax,QWORD PTR [rbx+0x30]
  4298cc:	sub    QWORD PTR [rbx+0x38],rsi
  4298d0:	sub    rax,rsi
  4298d3:	test   rax,rax
  4298d6:	mov    QWORD PTR [rbx+0x30],rax
  4298da:	jle    0x429905
  4298dc:	mov    rcx,QWORD PTR [rbx+0x18]
  4298e0:	xor    eax,eax
  4298e2:	lea    r8,[rcx+rsi*8]
  4298e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298f0:	mov    rdx,QWORD PTR [r8+rax*8]
  4298f4:	sub    rdx,r15
  4298f7:	mov    QWORD PTR [rcx+rax*8],rdx
  4298fb:	add    rax,0x1
  4298ff:	cmp    QWORD PTR [rbx+0x30],rax
  429903:	jg     0x4298f0
  429905:	movzx  eax,BYTE PTR [rbx+0x8b]
  42990c:	jmp    0x429543
  429911:	cmp    BYTE PTR [rbx+0x88],0x0
  429918:	jne    0x429a40
  42991e:	cmp    QWORD PTR [rbx+0x78],0x0
  429923:	je     0x429578
  429929:	mov    rcx,rbx
  42992c:	call   0x4246e0
  429931:	jmp    0x429578
  429936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429940:	mov    rax,rsi
  429943:	add    rax,QWORD PTR [rbx]
  429946:	mov    rdx,QWORD PTR [rbx+0x78]
  42994a:	add    rax,QWORD PTR [rbx+0x28]
  42994e:	test   rdx,rdx
  429951:	movzx  eax,BYTE PTR [rax-0x1]
  429955:	mov    QWORD PTR [rbx+0x38],0x0
  42995d:	je     0x429963
  42995f:	movzx  eax,BYTE PTR [rdx+rax*1]
  429963:	mov    rcx,QWORD PTR [rbx+0x80]
  42996a:	movsxd rdx,eax
  42996d:	sar    rdx,0x5
  429971:	mov    ecx,DWORD PTR [rcx+rdx*4]
  429974:	mov    edx,0x1
  429979:	bt     ecx,eax
  42997c:	jb     0x429989
  42997e:	xor    dl,dl
  429980:	cmp    eax,0xa
  429983:	je     0x429ac9
  429989:	mov    DWORD PTR [rbx+0x70],edx
  42998c:	jmp    0x429905
  429991:	mov    rdx,rsi
  429994:	mov    BYTE PTR [rbx+0x8c],0x0
  42999b:	sub    rdx,rdi
  42999e:	add    rdx,QWORD PTR [rbx+0x50]
  4299a2:	mov    QWORD PTR [rbx+0x58],rdx
  4299a6:	mov    rdx,rsi
  4299a9:	sub    rdx,rdi
  4299ac:	add    rdx,QWORD PTR [rbx+0x60]
  4299b0:	mov    QWORD PTR [rbx+0x68],rdx
  4299b4:	jmp    0x4295d4
  4299b9:	sub    r14,rdi
  4299bc:	cmp    cx,0xffff
  4299c0:	mov    r13d,ecx
  4299c3:	mov    rbp,r14
  4299c6:	mov    QWORD PTR [rbx+0x30],r14
  4299ca:	jne    0x429a15
  4299cc:	lea    rdx,[r12-0x1]
  4299d1:	mov    r8d,r15d
  4299d4:	mov    rcx,rbx
  4299d7:	call   0x429220
  4299dc:	mov    DWORD PTR [rbx+0x70],eax
  4299df:	test   ebp,ebp
  4299e1:	jne    0x429a4d
  4299e3:	movzx  eax,BYTE PTR [rbx+0x8b]
  4299ea:	mov    QWORD PTR [rbx+0x38],rbp
  4299ee:	jmp    0x429543
  4299f3:	sub    r13,rbp
  4299f6:	mov    DWORD PTR [rbx+0x20],0x0
  4299fd:	add    rax,r13
  429a00:	movzx  r13d,WORD PTR [rsp+0x3a]
  429a06:	mov    QWORD PTR [rbx+0x30],rax
  429a0a:	cmp    r13w,0xffff
  429a0f:	je     0x429881
  429a15:	cmp    BYTE PTR [rbx+0x8e],0x0
  429a1c:	jne    0x429a9b
  429a1e:	xor    eax,eax
  429a20:	cmp    r13w,0xa
  429a25:	je     0x429a30
  429a27:	mov    DWORD PTR [rbx+0x70],eax
  429a2a:	mov    rbp,QWORD PTR [rbx+0x30]
  429a2e:	jmp    0x4299df
  429a30:	cmp    BYTE PTR [rbx+0x8d],0x1
  429a37:	sbb    eax,eax
  429a39:	not    eax
  429a3b:	and    eax,0x2
  429a3e:	jmp    0x429a27
  429a40:	mov    rcx,rbx
  429a43:	call   0x424f00
  429a48:	jmp    0x429578
  429a4d:	test   rbp,rbp
  429a50:	jle    0x429a72
  429a52:	mov    rdx,QWORD PTR [rbx+0x10]
  429a56:	lea    rax,[rdx+rbp*2]
  429a5a:	nop    WORD PTR [rax+rax*1+0x0]
  429a60:	mov    ecx,0xffffffff
  429a65:	add    rdx,0x2
  429a69:	mov    WORD PTR [rdx-0x2],cx
  429a6d:	cmp    rdx,rax
  429a70:	jne    0x429a60
  429a72:	movzx  eax,BYTE PTR [rbx+0x8b]
  429a79:	test   al,al
  429a7b:	je     0x4299ea
  429a81:	mov    rcx,QWORD PTR [rbx+0x8]
  429a85:	mov    r8,rbp
  429a88:	mov    edx,0xff
  429a8d:	call   0x43a6a8
  429a92:	mov    rbp,QWORD PTR [rbx+0x30]
  429a96:	jmp    0x4299e3
  429a9b:	movzx  ecx,r13w
  429a9f:	mov    edx,0x107
  429aa4:	call   0x43a6e0
  429aa9:	test   eax,eax
  429aab:	jne    0x429ab8
  429aad:	cmp    r13w,0x5f
  429ab2:	jne    0x429a1e
  429ab8:	mov    eax,0x1
  429abd:	jmp    0x429a27
  429ac2:	xor    ecx,ecx
  429ac4:	jmp    0x429678
  429ac9:	cmp    BYTE PTR [rbx+0x8d],0x1
  429ad0:	sbb    edx,edx
  429ad2:	not    edx
  429ad4:	and    edx,0x2
  429ad7:	jmp    0x429989
  429adc:	cmp    r8,0x6
  429ae0:	mov    eax,0x6
  429ae5:	cmovle rax,r8
  429ae9:	sub    eax,0x1
  429aec:	movsxd r9,eax
  429aef:	test   eax,eax
  429af1:	lea    rdx,[rdx+r9*1]
  429af5:	jns    0x429b03
  429af7:	jmp    0x429b1d
  429af9:	nop    DWORD PTR [rax+0x0]
  429b00:	movsxd r9,eax
  429b03:	movzx  r11d,BYTE PTR [rdx]
  429b07:	sub    eax,0x1
  429b0a:	sub    rdx,0x1
  429b0e:	cmp    eax,0xffffffff
  429b11:	movzx  r11d,BYTE PTR [rcx+r11*1]
  429b16:	mov    BYTE PTR [rsp+r9*1+0x40],r11b
  429b1b:	jne    0x429b00
  429b1d:	lea    rdx,[rsp+0x40]
  429b22:	jmp    0x429852
  429b27:	sub    r14,rdi
  429b2a:	mov    rbp,r14
  429b2d:	mov    QWORD PTR [rbx+0x30],r14
  429b31:	jmp    0x4299cc
  429b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429b40:	push   rbp
  429b41:	push   rdi
  429b42:	push   rsi
  429b43:	push   rbx
  429b44:	sub    rsp,0x28
  429b48:	mov    rdi,r8
  429b4b:	mov    r8d,DWORD PTR [rcx+0xa0]
  429b52:	mov    rbx,rdx
  429b55:	mov    rdx,r9
  429b58:	mov    rsi,rcx
  429b5b:	call   0x429220
  429b60:	test   rbx,rbx
  429b63:	jle    0x429c13
  429b69:	mov    rdx,QWORD PTR [rsi+0x98]
  429b70:	mov    ebp,eax
  429b72:	mov    r11,QWORD PTR [rdi]
  429b75:	mov    edi,eax
  429b77:	and    eax,0x1
  429b7a:	xor    r9d,r9d
  429b7d:	and    ebp,0x8
  429b80:	and    edi,0x2
  429b83:	mov    esi,eax
  429b85:	mov    rdx,QWORD PTR [rdx]
  429b88:	jmp    0x429b99
  429b8a:	nop    WORD PTR [rax+rax*1+0x0]
  429b90:	add    r9,0x1
  429b94:	cmp    r9,rbx
  429b97:	je     0x429c13
  429b99:	mov    rax,QWORD PTR [r11+r9*8]
  429b9d:	mov    rcx,rax
  429ba0:	shl    rcx,0x4
  429ba4:	add    rcx,rdx
  429ba7:	mov    r8d,DWORD PTR [rcx+0x8]
  429bab:	shr    r8d,0x8
  429baf:	mov    r10d,r8d
  429bb2:	and    r10w,0x3ff
  429bb8:	cmp    BYTE PTR [rcx+0x8],0x2
  429bbc:	jne    0x429b90
  429bbe:	test   r10w,r10w
  429bc2:	je     0x429bf0
  429bc4:	test   r8b,0x4
  429bc8:	je     0x429c00
  429bca:	test   esi,esi
  429bcc:	je     0x429b90
  429bce:	and    r8d,0x8
  429bd2:	jne    0x429b90
  429bd4:	test   r10b,0x20
  429bd8:	je     0x429bde
  429bda:	test   edi,edi
  429bdc:	je     0x429b90
  429bde:	and    r10d,0x80
  429be5:	je     0x429bf0
  429be7:	test   ebp,ebp
  429be9:	je     0x429b90
  429beb:	nop    DWORD PTR [rax+rax*1+0x0]
  429bf0:	add    rsp,0x28
  429bf4:	pop    rbx
  429bf5:	pop    rsi
  429bf6:	pop    rdi
  429bf7:	pop    rbp
  429bf8:	ret    
  429bf9:	nop    DWORD PTR [rax+0x0]
  429c00:	and    r8d,0x8
  429c04:	je     0x429bd4
  429c06:	test   esi,esi
  429c08:	je     0x429bd4
  429c0a:	add    r9,0x1
  429c0e:	cmp    r9,rbx
  429c11:	jne    0x429b99
  429c13:	xor    eax,eax
  429c15:	add    rsp,0x28
  429c19:	pop    rbx
  429c1a:	pop    rsi
  429c1b:	pop    rdi
  429c1c:	pop    rbp
  429c1d:	ret    
  429c1e:	xchg   ax,ax
  429c20:	push   r12
  429c22:	push   rbp
  429c23:	push   rdi
  429c24:	push   rsi
  429c25:	push   rbx
  429c26:	sub    rsp,0x20
  429c2a:	mov    rsi,QWORD PTR [rsp+0x70]
  429c2f:	shl    r8,0x4
  429c33:	add    rcx,r8
  429c36:	movzx  r8d,BYTE PTR [rcx+0x8]
  429c3b:	cmp    r8b,0x7
  429c3f:	je     0x429d40
  429c45:	cmp    DWORD PTR [r9+0x90],0x1
  429c4d:	je     0x429d50
  429c53:	mov    rax,QWORD PTR [r9+0x30]
  429c57:	lea    r10,[rsi+0x1]
  429c5b:	cmp    rax,r10
  429c5e:	jle    0x429d50
  429c64:	mov    r11,QWORD PTR [r9+0x10]
  429c68:	cmp    WORD PTR [r11+r10*2],0xffff
  429c6e:	jne    0x429d50
  429c74:	lea    r10,[rsi+0x2]
  429c78:	mov    ebx,0x1
  429c7d:	jmp    0x429c8d
  429c7f:	nop
  429c80:	add    r10,0x1
  429c84:	cmp    WORD PTR [r11+r10*2-0x2],0xffff
  429c8b:	jne    0x429c95
  429c8d:	add    ebx,0x1
  429c90:	cmp    r10,rax
  429c93:	jne    0x429c80
  429c95:	cmp    r8b,0x5
  429c99:	je     0x429d60
  429c9f:	cmp    r8b,0x6
  429ca3:	jne    0x429d50
  429ca9:	mov    rdi,QWORD PTR [rcx]
  429cac:	mov    rcx,QWORD PTR [rdi+0x40]
  429cb0:	test   rcx,rcx
  429cb3:	je     0x429d8c
  429cb9:	mov    r8,QWORD PTR [rdi+0x28]
  429cbd:	test   r8,r8
  429cc0:	movzx  ebp,WORD PTR [r11+rsi*2]
  429cc5:	jle    0x429cef
  429cc7:	mov    rdx,QWORD PTR [rdi]
  429cca:	cmp    bp,WORD PTR [rdx]
  429ccd:	je     0x429d26
  429ccf:	lea    rax,[rdx+0x2]
  429cd3:	lea    rdx,[rdx+r8*2]
  429cd7:	jmp    0x429cea
  429cd9:	nop    DWORD PTR [rax+0x0]
  429ce0:	add    rax,0x2
  429ce4:	cmp    bp,WORD PTR [rax-0x2]
  429ce8:	je     0x429d26
  429cea:	cmp    rax,rdx
  429ced:	jne    0x429ce0
  429cef:	mov    rax,QWORD PTR [rdi+0x48]
  429cf3:	test   rax,rax
  429cf6:	jle    0x429ed7
  429cfc:	movzx  r12d,bp
  429d00:	xor    esi,esi
  429d02:	jmp    0x429d12
  429d04:	add    rsi,0x1
  429d08:	cmp    rsi,QWORD PTR [rdi+0x48]
  429d0c:	jge    0x429de2
  429d12:	mov    rax,QWORD PTR [rdi+0x18]
  429d16:	mov    ecx,r12d
  429d19:	movzx  edx,WORD PTR [rax+rsi*2]
  429d1d:	call   0x43a6e0
  429d22:	test   eax,eax
  429d24:	je     0x429d04
  429d26:	test   BYTE PTR [rdi+0x20],0x1
  429d2a:	mov    eax,0x0
  429d2f:	cmove  eax,ebx
  429d32:	add    rsp,0x20
  429d36:	pop    rbx
  429d37:	pop    rsi
  429d38:	pop    rdi
  429d39:	pop    rbp
  429d3a:	pop    r12
  429d3c:	ret    
  429d3d:	nop    DWORD PTR [rax]
  429d40:	mov    rcx,QWORD PTR [r9+0x8]
  429d44:	lea    rdx,[rcx+rsi*1]
  429d48:	movzx  eax,BYTE PTR [rdx]
  429d4b:	cmp    al,0xc1
  429d4d:	ja     0x429db6
  429d4f:	nop
  429d50:	xor    eax,eax
  429d52:	add    rsp,0x20
  429d56:	pop    rbx
  429d57:	pop    rsi
  429d58:	pop    rdi
  429d59:	pop    rbp
  429d5a:	pop    r12
  429d5c:	ret    
  429d5d:	nop    DWORD PTR [rax]
  429d60:	mov    edx,DWORD PTR [rdx]
  429d62:	test   dl,0x40
  429d65:	je     0x429d80
  429d67:	and    edx,0x80
  429d6d:	mov    eax,ebx
  429d6f:	je     0x429d52
  429d71:	mov    rdx,QWORD PTR [r9+0x8]
  429d75:	cmp    BYTE PTR [rdx+rsi*1],0x0
  429d79:	je     0x429d50
  429d7b:	jmp    0x429d52
  429d7d:	nop    DWORD PTR [rax]
  429d80:	mov    rax,QWORD PTR [r9+0x8]
  429d84:	cmp    BYTE PTR [rax+rsi*1],0xa
  429d88:	jne    0x429d67
  429d8a:	jmp    0x429d50
  429d8c:	cmp    QWORD PTR [rdi+0x48],0x0
  429d91:	mov    r8,QWORD PTR [rdi+0x28]
  429d95:	jne    0x429cbd
  429d9b:	test   r8,r8
  429d9e:	jne    0x429cbd
  429da4:	test   BYTE PTR [rdi+0x20],0x1
  429da8:	je     0x429d50
  429daa:	test   ebx,ebx
  429dac:	mov    eax,0x1
  429db1:	cmovg  eax,ebx
  429db4:	jmp    0x429d52
  429db6:	mov    r8,QWORD PTR [r9+0x58]
  429dba:	lea    r9,[rsi+0x1]
  429dbe:	cmp    r9,r8
  429dc1:	jge    0x429d50
  429dc3:	cmp    al,0xdf
  429dc5:	movzx  ecx,BYTE PTR [rcx+rsi*1+0x1]
  429dca:	ja     0x429e1f
  429dcc:	add    ecx,0xffffff80
  429dcf:	mov    eax,0x2
  429dd4:	cmp    cl,0x3f
  429dd7:	jbe    0x429d52
  429ddd:	jmp    0x429d50
  429de2:	mov    rdx,QWORD PTR [rdi+0x40]
  429de6:	test   rdx,rdx
  429de9:	jle    0x429da4
  429deb:	mov    rcx,QWORD PTR [rdi+0x8]
  429def:	add    rdx,rdx
  429df2:	xor    eax,eax
  429df4:	jmp    0x429e09
  429df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429e00:	add    rax,0x2
  429e04:	cmp    rax,rdx
  429e07:	je     0x429da4
  429e09:	cmp    bp,WORD PTR [rcx+rax*1]
  429e0d:	jb     0x429e00
  429e0f:	mov    r8,QWORD PTR [rdi+0x10]
  429e13:	cmp    bp,WORD PTR [r8+rax*1]
  429e18:	ja     0x429e00
  429e1a:	jmp    0x429d26
  429e1f:	cmp    al,0xef
  429e21:	ja     0x429e6c
  429e23:	cmp    cl,0x9f
  429e26:	ja     0x429e30
  429e28:	cmp    al,0xe0
  429e2a:	je     0x429d50
  429e30:	mov    eax,0x3
  429e35:	mov    ebx,0x3
  429e3a:	add    rsi,rax
  429e3d:	cmp    r8,rsi
  429e40:	jl     0x429d50
  429e46:	mov    ecx,0x1
  429e4b:	jmp    0x429e59
  429e4d:	nop    DWORD PTR [rax]
  429e50:	add    rcx,0x1
  429e54:	cmp    rcx,rax
  429e57:	je     0x429ed0
  429e59:	movzx  edi,BYTE PTR [rdx+rcx*1]
  429e5d:	lea    r8d,[rdi-0x80]
  429e61:	cmp    r8b,0x3f
  429e65:	jbe    0x429e50
  429e67:	jmp    0x429d50
  429e6c:	cmp    al,0xf7
  429e6e:	ja     0x429e89
  429e70:	cmp    cl,0x8f
  429e73:	ja     0x429e7d
  429e75:	cmp    al,0xf0
  429e77:	je     0x429d50
  429e7d:	mov    eax,0x4
  429e82:	mov    ebx,0x4
  429e87:	jmp    0x429e3a
  429e89:	cmp    al,0xfb
  429e8b:	ja     0x429ea6
  429e8d:	cmp    cl,0x87
  429e90:	ja     0x429e9a
  429e92:	cmp    al,0xf8
  429e94:	je     0x429d50
  429e9a:	mov    eax,0x5
  429e9f:	mov    ebx,0x5
  429ea4:	jmp    0x429e3a
  429ea6:	cmp    al,0xfd
  429ea8:	ja     0x429d50
  429eae:	cmp    cl,0x83
  429eb1:	ja     0x429ebb
  429eb3:	cmp    al,0xfc
  429eb5:	je     0x429d50
  429ebb:	mov    eax,0x6
  429ec0:	mov    ebx,0x6
  429ec5:	jmp    0x429e3a
  429eca:	nop    WORD PTR [rax+rax*1+0x0]
  429ed0:	mov    eax,ebx
  429ed2:	jmp    0x429d52
  429ed7:	mov    rdx,rcx
  429eda:	jmp    0x429de6
  429edf:	nop
  429ee0:	push   r15
  429ee2:	push   r14
  429ee4:	push   r13
  429ee6:	push   r12
  429ee8:	push   rbp
  429ee9:	push   rdi
  429eea:	push   rsi
  429eeb:	push   rbx
  429eec:	sub    rsp,0xf8
  429ef3:	mov    rax,QWORD PTR [rcx+0x98]
  429efa:	mov    DWORD PTR [rsp+0xa8],0x0
  429f05:	mov    r12,rcx
  429f08:	mov    QWORD PTR [rsp+0x148],rdx
  429f10:	mov    rbp,r8
  429f13:	mov    rsi,r9
  429f16:	mov    rdi,rax
  429f19:	mov    QWORD PTR [rsp+0x70],rax
  429f1e:	mov    rax,r8
  429f21:	shl    rax,0x4
  429f25:	add    rax,QWORD PTR [rdi]
  429f28:	mov    rdi,QWORD PTR [rdx+0x8]
  429f2c:	mov    rax,QWORD PTR [rax]
  429f2f:	mov    QWORD PTR [rsp+0x78],rax
  429f34:	movsxd rax,DWORD PTR [rcx+0xe0]
  429f3b:	add    rax,QWORD PTR [rsp+0x168]
  429f43:	cmp    rax,rdi
  429f46:	jge    0x42a5d1
  429f4c:	mov    rax,QWORD PTR [rsp+0x148]
  429f54:	mov    rbx,QWORD PTR [rax]
  429f57:	mov    rax,QWORD PTR [r12+0xb8]
  429f5f:	mov    QWORD PTR [rsp+0x90],rax
  429f67:	mov    rax,QWORD PTR [r12+0x48]
  429f6c:	test   rbx,rbx
  429f6f:	mov    QWORD PTR [rsp+0x98],rax
  429f77:	mov    rax,QWORD PTR [rsp+0x148]
  429f7f:	je     0x42a440
  429f85:	mov    r13,QWORD PTR [rax+0x10]
  429f89:	mov    r8d,DWORD PTR [r12+0xa0]
  429f91:	lea    rdx,[rbx-0x1]
  429f95:	mov    QWORD PTR [r12+0x48],rbx
  429f9a:	mov    rcx,r12
  429f9d:	mov    QWORD PTR [r12+0xb8],r13
  429fa5:	call   0x429220
  429faa:	cmp    rbx,rsi
  429fad:	mov    edi,eax
  429faf:	je     0x42a467
  429fb5:	mov    r14,QWORD PTR [r13+rbx*8+0x0]
  429fba:	test   r14,r14
  429fbd:	je     0x42a64f
  429fc3:	movzx  eax,BYTE PTR [r14+0x68]
  429fc8:	test   al,0x40
  429fca:	jne    0x42a5a4
  429fd0:	mov    QWORD PTR [rsp+0xb0],0x0
  429fdc:	mov    QWORD PTR [rsp+0xb8],0x0
  429fe8:	mov    QWORD PTR [rsp+0xc0],0x0
  429ff4:	test   al,0x40
  429ff6:	je     0x42a068
  429ff8:	lea    rbp,[rsp+0xb0]
  42a000:	cmp    QWORD PTR [rsp+0xb8],0x0
  42a009:	je     0x42a038
  42a00b:	mov    eax,DWORD PTR [rsp+0x170]
  42a012:	mov    r9,QWORD PTR [rsp+0x78]
  42a017:	mov    r8,rbx
  42a01a:	mov    rdx,rbp
  42a01d:	mov    rcx,r12
  42a020:	mov    DWORD PTR [rsp+0x20],eax
  42a024:	call   0x427f90
  42a029:	test   eax,eax
  42a02b:	mov    DWORD PTR [rsp+0xa8],eax
  42a032:	jne    0x42a4f8
  42a038:	mov    rdx,QWORD PTR [rsp+0x70]
  42a03d:	lea    rcx,[rsp+0xa8]
  42a045:	mov    r9d,edi
  42a048:	mov    r8,rbp
  42a04b:	call   0x4279c0
  42a050:	test   rax,rax
  42a053:	mov    r14,rax
  42a056:	je     0x42a678
  42a05c:	mov    rax,QWORD PTR [r12+0xb8]
  42a064:	mov    QWORD PTR [rax+rbx*8],r14
  42a068:	cmp    rbx,QWORD PTR [rsp+0x168]
  42a070:	jge    0x42a3c5
  42a076:	mov    ecx,DWORD PTR [r12+0xe0]
  42a07e:	test   ecx,ecx
  42a080:	js     0x42a3c5
  42a086:	add    rbx,0x1
  42a08a:	mov    QWORD PTR [rsp+0x68],0x0
  42a093:	lea    rax,[rbx*8+0x0]
  42a09b:	mov    QWORD PTR [rsp+0x40],rbx
  42a0a0:	mov    QWORD PTR [rsp+0x50],rax
  42a0a5:	lea    rax,[rsp+0xd0]
  42a0ad:	mov    QWORD PTR [rsp+0x48],rax
  42a0b2:	lea    rax,[rsp+0xac]
  42a0ba:	mov    QWORD PTR [rsp+0x80],rax
  42a0c2:	lea    rax,[rsp+0xa8]
  42a0ca:	mov    QWORD PTR [rsp+0x88],rax
  42a0d2:	mov    rax,QWORD PTR [rsp+0x40]
  42a0d7:	mov    rdi,QWORD PTR [rsp+0x50]
  42a0dc:	mov    QWORD PTR [rsp+0xb8],0x0
  42a0e8:	lea    rbp,[rax-0x1]
  42a0ec:	mov    rax,QWORD PTR [r12+0xb8]
  42a0f4:	mov    rdx,QWORD PTR [rax+rdi*1]
  42a0f8:	test   rdx,rdx
  42a0fb:	je     0x42a533
  42a101:	lea    rsi,[rsp+0xb0]
  42a109:	add    rdx,0x8
  42a10d:	mov    rcx,rsi
  42a110:	call   0x427210
  42a115:	test   eax,eax
  42a117:	mov    DWORD PTR [rsp+0xa8],eax
  42a11e:	jne    0x42a4f8
  42a124:	test   r14,r14
  42a127:	je     0x42a2db
  42a12d:	cmp    QWORD PTR [r14+0x28],0x0
  42a132:	mov    rax,QWORD PTR [rsp+0x48]
  42a137:	mov    rsi,QWORD PTR [r12+0x98]
  42a13f:	mov    DWORD PTR [rsp+0xac],0x0
  42a14a:	mov    QWORD PTR [rax],0x0
  42a151:	mov    QWORD PTR [rax+0x8],0x0
  42a159:	mov    QWORD PTR [rax+0x10],0x0
  42a161:	jle    0x42a648
  42a167:	lea    rax,[rsp+0xb0]
  42a16f:	xor    ebx,ebx
  42a171:	mov    QWORD PTR [rsp+0x38],rax
  42a176:	lea    rax,[rsi+0xd0]
  42a17d:	mov    QWORD PTR [rsp+0x58],rax
  42a182:	jmp    0x42a1c3
  42a184:	mov    r8,rbp
  42a187:	mov    rcx,r12
  42a18a:	call   0x429310
  42a18f:	test   al,al
  42a191:	je     0x42a1b5
  42a193:	lea    r15,[r13*8+0x0]
  42a19b:	mov    rax,QWORD PTR [rsi+0x18]
  42a19f:	mov    rcx,QWORD PTR [rsp+0x38]
  42a1a4:	mov    rdx,QWORD PTR [rax+r15*1]
  42a1a8:	call   0x424ce0
  42a1ad:	test   al,al
  42a1af:	je     0x42a4e0
  42a1b5:	add    rbx,0x1
  42a1b9:	cmp    rbx,QWORD PTR [r14+0x28]
  42a1bd:	jge    0x42a550
  42a1c3:	mov    rax,QWORD PTR [r14+0x30]
  42a1c7:	mov    rcx,QWORD PTR [rsi]
  42a1ca:	mov    r13,QWORD PTR [rax+rbx*8]
  42a1ce:	mov    r15,r13
  42a1d1:	shl    r15,0x4
  42a1d5:	lea    rdx,[rcx+r15*1]
  42a1d9:	test   BYTE PTR [rdx+0xa],0x10
  42a1dd:	je     0x42a184
  42a1df:	mov    rdx,QWORD PTR [rsp+0x58]
  42a1e4:	mov    QWORD PTR [rsp+0x20],rbp
  42a1e9:	mov    r9,r12
  42a1ec:	mov    r8,r13
  42a1ef:	call   0x429c20
  42a1f4:	cmp    eax,0x1
  42a1f7:	jle    0x42a520
  42a1fd:	mov    rdx,QWORD PTR [rsi+0x18]
  42a201:	cdqe   
  42a203:	lea    r15,[r13*8+0x0]
  42a20b:	mov    rdi,QWORD PTR [rdx+r13*8]
  42a20f:	mov    QWORD PTR [rsp+0x60],rdi
  42a214:	lea    rdi,[rax+rbp*1]
  42a218:	mov    rax,QWORD PTR [r12+0xb8]
  42a220:	lea    r13,[rdi*8+0x0]
  42a228:	mov    rdx,QWORD PTR [rax+rdi*8]
  42a22c:	mov    QWORD PTR [rsp+0xd8],0x0
  42a238:	test   rdx,rdx
  42a23b:	je     0x42a256
  42a23d:	mov    rcx,QWORD PTR [rsp+0x48]
  42a242:	add    rdx,0x8
  42a246:	call   0x427210
  42a24b:	test   eax,eax
  42a24d:	mov    DWORD PTR [rsp+0xac],eax
  42a254:	jne    0x42a2b0
  42a256:	mov    rdx,QWORD PTR [rsp+0x60]
  42a25b:	mov    rcx,QWORD PTR [rsp+0x48]
  42a260:	call   0x424ce0
  42a265:	test   al,al
  42a267:	je     0x42a4e0
  42a26d:	add    r13,QWORD PTR [r12+0xb8]
  42a275:	mov    r8,QWORD PTR [rsp+0x48]
  42a27a:	mov    rdx,rsi
  42a27d:	mov    rcx,QWORD PTR [rsp+0x80]
  42a285:	call   0x427cc0
  42a28a:	mov    QWORD PTR [r13+0x0],rax
  42a28e:	mov    rax,QWORD PTR [r12+0xb8]
  42a296:	cmp    QWORD PTR [rax+rdi*8],0x0
  42a29b:	jne    0x42a19b
  42a2a1:	mov    edx,DWORD PTR [rsp+0xac]
  42a2a8:	test   edx,edx
  42a2aa:	je     0x42a19b
  42a2b0:	mov    rcx,QWORD PTR [rsp+0xe0]
  42a2b8:	call   0x43a748
  42a2bd:	mov    eax,DWORD PTR [rsp+0xac]
  42a2c4:	test   eax,eax
  42a2c6:	mov    DWORD PTR [rsp+0xa8],eax
  42a2cd:	jne    0x42a4f8
  42a2d3:	lea    rsi,[rsp+0xb0]
  42a2db:	cmp    QWORD PTR [rsp+0xb8],0x0
  42a2e4:	mov    rbx,QWORD PTR [rsp+0x40]
  42a2e9:	je     0x42a343
  42a2eb:	mov    r9d,DWORD PTR [rsp+0x170]
  42a2f3:	mov    r8,QWORD PTR [rsp+0x78]
  42a2f8:	mov    rdx,rsi
  42a2fb:	mov    rcx,QWORD PTR [rsp+0x70]
  42a300:	call   0x427660
  42a305:	test   eax,eax
  42a307:	mov    DWORD PTR [rsp+0xa8],eax
  42a30e:	jne    0x42a4f8
  42a314:	mov    eax,DWORD PTR [rsp+0x170]
  42a31b:	mov    r9,QWORD PTR [rsp+0x78]
  42a320:	mov    rdx,rsi
  42a323:	mov    r8,QWORD PTR [rsp+0x40]
  42a328:	mov    rcx,r12
  42a32b:	mov    DWORD PTR [rsp+0x20],eax
  42a32f:	call   0x427f90
  42a334:	test   eax,eax
  42a336:	mov    DWORD PTR [rsp+0xa8],eax
  42a33d:	jne    0x42a4f8
  42a343:	mov    r8d,DWORD PTR [r12+0xa0]
  42a34b:	mov    rdx,rbp
  42a34e:	mov    rcx,r12
  42a351:	call   0x429220
  42a356:	mov    rdx,QWORD PTR [rsp+0x70]
  42a35b:	mov    rcx,QWORD PTR [rsp+0x88]
  42a363:	mov    r9d,eax
  42a366:	mov    r8,rsi
  42a369:	call   0x4279c0
  42a36e:	test   rax,rax
  42a371:	mov    r14,rax
  42a374:	je     0x42a575
  42a37a:	mov    rax,QWORD PTR [r12+0xb8]
  42a382:	mov    rdi,QWORD PTR [rsp+0x50]
  42a387:	mov    QWORD PTR [rsp+0x68],0x0
  42a390:	mov    QWORD PTR [rax+rdi*1],r14
  42a394:	mov    rax,QWORD PTR [rsp+0x40]
  42a399:	cmp    QWORD PTR [rsp+0x168],rax
  42a3a1:	jle    0x42a3c5
  42a3a3:	add    rax,0x1
  42a3a7:	add    QWORD PTR [rsp+0x50],0x8
  42a3ad:	mov    QWORD PTR [rsp+0x40],rax
  42a3b2:	movsxd rax,DWORD PTR [r12+0xe0]
  42a3ba:	cmp    rax,QWORD PTR [rsp+0x68]
  42a3bf:	jge    0x42a0d2
  42a3c5:	mov    rcx,QWORD PTR [rsp+0xc0]
  42a3cd:	call   0x43a748
  42a3d2:	mov    rax,QWORD PTR [r12+0xb8]
  42a3da:	mov    rdi,QWORD PTR [rsp+0x168]
  42a3e2:	mov    rax,QWORD PTR [rax+rdi*8]
  42a3e6:	test   rax,rax
  42a3e9:	je     0x42a698
  42a3ef:	mov    rdi,QWORD PTR [rsp+0x148]
  42a3f7:	mov    r8,QWORD PTR [rsp+0x160]
  42a3ff:	lea    rdx,[rax+0x18]
  42a403:	mov    QWORD PTR [rdi],rbx
  42a406:	mov    rdi,QWORD PTR [rsp+0x90]
  42a40e:	mov    QWORD PTR [r12+0xb8],rdi
  42a416:	mov    rdi,QWORD PTR [rsp+0x98]
  42a41e:	mov    QWORD PTR [r12+0x48],rdi
  42a423:	mov    rcx,QWORD PTR [rax+0x10]
  42a427:	call   0x426410
  42a42c:	test   rax,rax
  42a42f:	sete   al
  42a432:	movzx  eax,al
  42a435:	jmp    0x42a50c
  42a43a:	nop    WORD PTR [rax+rax*1+0x0]
  42a440:	mov    rax,QWORD PTR [rax+0x10]
  42a444:	mov    r8d,DWORD PTR [r12+0xa0]
  42a44c:	lea    rdx,[rsi-0x1]
  42a450:	mov    QWORD PTR [r12+0x48],rsi
  42a455:	mov    rcx,r12
  42a458:	mov    QWORD PTR [r12+0xb8],rax
  42a460:	call   0x429220
  42a465:	mov    edi,eax
  42a467:	mov    ecx,0x8
  42a46c:	mov    QWORD PTR [rsp+0xb0],0x1
  42a478:	mov    QWORD PTR [rsp+0xb8],0x1
  42a484:	call   0x423ec0
  42a489:	test   rax,rax
  42a48c:	mov    QWORD PTR [rsp+0xc0],rax
  42a494:	je     0x42a68e
  42a49a:	mov    QWORD PTR [rax],rbp
  42a49d:	mov    r9d,DWORD PTR [rsp+0x170]
  42a4a5:	lea    rbp,[rsp+0xb0]
  42a4ad:	mov    r8,QWORD PTR [rsp+0x78]
  42a4b2:	mov    rcx,QWORD PTR [rsp+0x70]
  42a4b7:	mov    rbx,rsi
  42a4ba:	mov    rdx,rbp
  42a4bd:	mov    DWORD PTR [rsp+0xa8],0x0
  42a4c8:	call   0x427660
  42a4cd:	test   eax,eax
  42a4cf:	mov    DWORD PTR [rsp+0xa8],eax
  42a4d6:	je     0x42a000
  42a4dc:	jmp    0x42a4f8
  42a4de:	xchg   ax,ax
  42a4e0:	mov    rcx,QWORD PTR [rsp+0xe0]
  42a4e8:	call   0x43a748
  42a4ed:	mov    DWORD PTR [rsp+0xa8],0xc
  42a4f8:	mov    rcx,QWORD PTR [rsp+0xc0]
  42a500:	call   0x43a748
  42a505:	mov    eax,DWORD PTR [rsp+0xa8]
  42a50c:	add    rsp,0xf8
  42a513:	pop    rbx
  42a514:	pop    rsi
  42a515:	pop    rdi
  42a516:	pop    rbp
  42a517:	pop    r12
  42a519:	pop    r13
  42a51b:	pop    r14
  42a51d:	pop    r15
  42a51f:	ret    
  42a520:	test   eax,eax
  42a522:	jne    0x42a193
  42a528:	mov    rdx,r15
  42a52b:	add    rdx,QWORD PTR [rsi]
  42a52e:	jmp    0x42a184
  42a533:	test   r14,r14
  42a536:	jne    0x42a12d
  42a53c:	mov    rbx,QWORD PTR [rsp+0x40]
  42a541:	lea    rsi,[rsp+0xb0]
  42a549:	jmp    0x42a343
  42a54e:	xchg   ax,ax
  42a550:	mov    rcx,QWORD PTR [rsp+0xe0]
  42a558:	call   0x43a748
  42a55d:	lea    rsi,[rsp+0xb0]
  42a565:	mov    DWORD PTR [rsp+0xa8],0x0
  42a570:	jmp    0x42a2db
  42a575:	mov    eax,DWORD PTR [rsp+0xa8]
  42a57c:	test   eax,eax
  42a57e:	jne    0x42a4f8
  42a584:	mov    rax,QWORD PTR [r12+0xb8]
  42a58c:	mov    rdi,QWORD PTR [rsp+0x50]
  42a591:	add    QWORD PTR [rsp+0x68],0x1
  42a597:	mov    QWORD PTR [rax+rdi*1],0x0
  42a59f:	jmp    0x42a394
  42a5a4:	lea    rbp,[rsp+0xb0]
  42a5ac:	lea    rdx,[r14+0x8]
  42a5b0:	mov    rcx,rbp
  42a5b3:	call   0x4277a0
  42a5b8:	test   eax,eax
  42a5ba:	mov    DWORD PTR [rsp+0xa8],eax
  42a5c1:	jne    0x42a50c
  42a5c7:	movzx  eax,BYTE PTR [r14+0x68]
  42a5cc:	jmp    0x429ff4
  42a5d1:	lea    rbx,[rax+0x1]
  42a5d5:	movabs rax,0x7fffffffffffffff
  42a5df:	sub    rax,rdi
  42a5e2:	cmp    rbx,rax
  42a5e5:	jg     0x42a68e
  42a5eb:	lea    r13,[rdi+rbx*1]
  42a5ef:	movabs rax,0x1fffffffffffffff
  42a5f9:	cmp    r13,rax
  42a5fc:	ja     0x42a68e
  42a602:	mov    rax,QWORD PTR [rsp+0x148]
  42a60a:	lea    rdx,[r13*8+0x0]
  42a612:	mov    rcx,QWORD PTR [rax+0x10]
  42a616:	call   0x43a680
  42a61b:	test   rax,rax
  42a61e:	je     0x42a68e
  42a620:	mov    rcx,QWORD PTR [rsp+0x148]
  42a628:	lea    r8,[rbx*8+0x0]
  42a630:	xor    edx,edx
  42a632:	mov    QWORD PTR [rcx+0x8],r13
  42a636:	mov    QWORD PTR [rcx+0x10],rax
  42a63a:	lea    rcx,[rax+rdi*8]
  42a63e:	call   0x43a6a8
  42a643:	jmp    0x429f4c
  42a648:	xor    ecx,ecx
  42a64a:	jmp    0x42a558
  42a64f:	mov    QWORD PTR [rsp+0xb0],0x0
  42a65b:	mov    QWORD PTR [rsp+0xb8],0x0
  42a667:	mov    QWORD PTR [rsp+0xc0],0x0
  42a673:	jmp    0x42a068
  42a678:	mov    r8d,DWORD PTR [rsp+0xa8]
  42a680:	test   r8d,r8d
  42a683:	je     0x42a05c
  42a689:	jmp    0x42a4f8
  42a68e:	mov    eax,0xc
  42a693:	jmp    0x42a50c
  42a698:	mov    rax,QWORD PTR [rsp+0x148]
  42a6a0:	mov    QWORD PTR [rax],rbx
  42a6a3:	mov    rax,QWORD PTR [rsp+0x90]
  42a6ab:	mov    QWORD PTR [r12+0xb8],rax
  42a6b3:	mov    rax,QWORD PTR [rsp+0x98]
  42a6bb:	mov    QWORD PTR [r12+0x48],rax
  42a6c0:	mov    eax,0x1
  42a6c5:	jmp    0x42a50c
  42a6ca:	nop    WORD PTR [rax+rax*1+0x0]
  42a6d0:	push   rsi
  42a6d1:	push   rbx
  42a6d2:	sub    rsp,0x38
  42a6d6:	cmp    BYTE PTR [rdx+0x30],0x10
  42a6da:	je     0x42a750
  42a6dc:	mov    rbx,rdx
  42a6df:	mov    rax,QWORD PTR [rdx+0x28]
  42a6e3:	mov    rsi,rcx
  42a6e6:	mov    QWORD PTR [rbx+0x18],rdx
  42a6ea:	mov    rdx,QWORD PTR [rdx+0x30]
  42a6ee:	mov    QWORD PTR [rsp+0x20],rax
  42a6f3:	mov    QWORD PTR [rsp+0x28],rdx
  42a6f8:	lea    rdx,[rsp+0x20]
  42a6fd:	call   0x4258e0
  42a702:	cmp    rax,0xffffffffffffffff
  42a706:	mov    rdx,rax
  42a709:	mov    QWORD PTR [rbx+0x38],rax
  42a70d:	je     0x42a770
  42a70f:	xor    eax,eax
  42a711:	cmp    BYTE PTR [rbx+0x30],0xc
  42a715:	je     0x42a720
  42a717:	add    rsp,0x38
  42a71b:	pop    rbx
  42a71c:	pop    rsi
  42a71d:	ret    
  42a71e:	xchg   ax,ax
  42a720:	shl    rdx,0x4
  42a724:	add    rdx,QWORD PTR [rsi]
  42a727:	movzx  ecx,WORD PTR [rbx+0x28]
  42a72b:	mov    r8d,DWORD PTR [rdx+0x8]
  42a72f:	and    ecx,0x3ff
  42a735:	shl    ecx,0x8
  42a738:	and    r8d,0xfffc00ff
  42a73f:	or     ecx,r8d
  42a742:	mov    DWORD PTR [rdx+0x8],ecx
  42a745:	add    rsp,0x38
  42a749:	pop    rbx
  42a74a:	pop    rsi
  42a74b:	ret    
  42a74c:	nop    DWORD PTR [rax+0x0]
  42a750:	mov    rax,QWORD PTR [rdx+0x8]
  42a754:	mov    rcx,QWORD PTR [rax+0x18]
  42a758:	mov    rax,QWORD PTR [rax+0x38]
  42a75c:	mov    QWORD PTR [rdx+0x38],rax
  42a760:	xor    eax,eax
  42a762:	mov    QWORD PTR [rdx+0x18],rcx
  42a766:	add    rsp,0x38
  42a76a:	pop    rbx
  42a76b:	pop    rsi
  42a76c:	ret    
  42a76d:	nop    DWORD PTR [rax]
  42a770:	mov    eax,0xc
  42a775:	jmp    0x42a717
  42a777:	nop    WORD PTR [rax+rax*1+0x0]
  42a780:	push   r14
  42a782:	push   r13
  42a784:	push   r12
  42a786:	push   rbp
  42a787:	push   rdi
  42a788:	push   rsi
  42a789:	push   rbx
  42a78a:	sub    rsp,0x40
  42a78e:	mov    r12,QWORD PTR [rsp+0xa0]
  42a796:	mov    DWORD PTR [rsp+0x30],0x8
  42a79e:	mov    QWORD PTR [rsp+0x20],r9
  42a7a3:	mov    rbp,rdx
  42a7a6:	mov    rsi,r8
  42a7a9:	lea    rdx,[r8+0x10]
  42a7ad:	mov    rdi,r9
  42a7b0:	mov    QWORD PTR [rsp+0x28],r12
  42a7b5:	mov    r9,QWORD PTR [r8+0x8]
  42a7b9:	mov    rbx,rcx
  42a7bc:	mov    r8,QWORD PTR [r8]
  42a7bf:	call   0x429ee0
  42a7c4:	test   eax,eax
  42a7c6:	je     0x42a7e0
  42a7c8:	add    rsp,0x40
  42a7cc:	pop    rbx
  42a7cd:	pop    rsi
  42a7ce:	pop    rdi
  42a7cf:	pop    rbp
  42a7d0:	pop    r12
  42a7d2:	pop    r13
  42a7d4:	pop    r14
  42a7d6:	ret    
  42a7d7:	nop    WORD PTR [rax+rax*1+0x0]
  42a7e0:	mov    r8,QWORD PTR [rbx+0xc8]
  42a7e7:	mov    rax,QWORD PTR [rbx+0xd0]
  42a7ee:	mov    r13,QWORD PTR [rsi+0x8]
  42a7f2:	mov    r14,QWORD PTR [rbp+0x0]
  42a7f6:	cmp    r8,rax
  42a7f9:	jge    0x42a8b3
  42a7ff:	test   r8,r8
  42a802:	mov    r9,QWORD PTR [rbx+0xd8]
  42a809:	jle    0x42a916
  42a80f:	lea    rax,[r8+r8*4]
  42a813:	shl    rax,0x3
  42a817:	lea    rdx,[r9+rax*1-0x28]
  42a81c:	cmp    r12,QWORD PTR [rdx+0x8]
  42a820:	je     0x42a890
  42a822:	add    rax,r9
  42a825:	xor    edx,edx
  42a827:	cmp    r13,r14
  42a82a:	sete   dl
  42a82d:	add    r8,0x1
  42a831:	mov    QWORD PTR [rax],rdi
  42a834:	neg    edx
  42a836:	mov    QWORD PTR [rax+0x8],r12
  42a83a:	mov    QWORD PTR [rax+0x10],r14
  42a83e:	mov    WORD PTR [rax+0x22],dx
  42a842:	mov    QWORD PTR [rax+0x18],r13
  42a846:	mov    QWORD PTR [rbx+0xc8],r8
  42a84d:	mov    BYTE PTR [rax+0x20],0x0
  42a851:	mov    rax,r13
  42a854:	movsxd rdx,DWORD PTR [rbx+0xe0]
  42a85b:	sub    rax,r14
  42a85e:	cmp    rdx,rax
  42a861:	jge    0x42a86d
  42a863:	sub    r13d,r14d
  42a866:	mov    DWORD PTR [rbx+0xe0],r13d
  42a86d:	mov    rdx,r12
  42a870:	add    rdx,QWORD PTR [rsi+0x8]
  42a874:	mov    rcx,rbx
  42a877:	sub    rdx,QWORD PTR [rbp+0x0]
  42a87b:	add    rsp,0x40
  42a87f:	pop    rbx
  42a880:	pop    rsi
  42a881:	pop    rdi
  42a882:	pop    rbp
  42a883:	pop    r12
  42a885:	pop    r13
  42a887:	pop    r14
  42a889:	jmp    0x4257d0
  42a88e:	xchg   ax,ax
  42a890:	mov    BYTE PTR [rdx+0x20],0x1
  42a894:	mov    r8,QWORD PTR [rbx+0xc8]
  42a89b:	mov    r9,QWORD PTR [rbx+0xd8]
  42a8a2:	lea    rdx,[r8+r8*4]
  42a8a6:	lea    rax,[rdx*8+0x0]
  42a8ae:	jmp    0x42a822
  42a8b3:	lea    rdx,[rax+rax*4]
  42a8b7:	mov    rcx,QWORD PTR [rbx+0xd8]
  42a8be:	shl    rdx,0x4
  42a8c2:	call   0x43a680
  42a8c7:	test   rax,rax
  42a8ca:	je     0x42a930
  42a8cc:	mov    rdx,QWORD PTR [rbx+0xd0]
  42a8d3:	mov    QWORD PTR [rbx+0xd8],rax
  42a8da:	lea    r8,[rdx+rdx*4]
  42a8de:	mov    rdx,QWORD PTR [rbx+0xc8]
  42a8e5:	shl    r8,0x3
  42a8e9:	lea    rdx,[rdx+rdx*4]
  42a8ed:	lea    rcx,[rax+rdx*8]
  42a8f1:	xor    edx,edx
  42a8f3:	call   0x43a6a8
  42a8f8:	mov    r8,QWORD PTR [rbx+0xc8]
  42a8ff:	shl    QWORD PTR [rbx+0xd0],1
  42a906:	mov    r9,QWORD PTR [rbx+0xd8]
  42a90d:	test   r8,r8
  42a910:	jg     0x42a80f
  42a916:	lea    rcx,[r8+r8*4]
  42a91a:	lea    rax,[rcx*8+0x0]
  42a922:	jmp    0x42a822
  42a927:	nop    WORD PTR [rax+rax*1+0x0]
  42a930:	mov    rcx,QWORD PTR [rbx+0xd8]
  42a937:	call   0x43a748
  42a93c:	mov    eax,0xc
  42a941:	jmp    0x42a7c8
  42a946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a950:	push   r15
  42a952:	push   r14
  42a954:	push   r13
  42a956:	push   r12
  42a958:	push   rbp
  42a959:	push   rdi
  42a95a:	push   rsi
  42a95b:	push   rbx
  42a95c:	sub    rsp,0xf8
  42a963:	mov    rsi,QWORD PTR [rcx+0x98]
  42a96a:	lea    rax,[r8*8+0x0]
  42a972:	mov    QWORD PTR [rsp+0x140],rcx
  42a97a:	mov    r13,rdx
  42a97d:	mov    r15,r8
  42a980:	mov    rbx,r9
  42a983:	mov    DWORD PTR [rsp+0xac],0x0
  42a98e:	mov    QWORD PTR [rsp+0x70],rax
  42a993:	mov    rax,QWORD PTR [rcx+0xb8]
  42a99a:	mov    rax,QWORD PTR [rax+r8*8]
  42a99e:	test   rax,rax
  42a9a1:	je     0x42ae90
  42a9a7:	add    rax,0x8
  42a9ab:	cmp    QWORD PTR [r9+0x8],0x0
  42a9b0:	mov    QWORD PTR [rsp+0x48],rax
  42a9b5:	jne    0x42aa02
  42a9b7:	mov    rax,QWORD PTR [r13+0x0]
  42a9bb:	mov    QWORD PTR [rax+r15*8],0x0
  42a9c3:	cmp    QWORD PTR [rsp+0x48],0x0
  42a9c9:	je     0x42adfe
  42a9cf:	mov    rax,QWORD PTR [rsp+0x140]
  42a9d7:	mov    rax,QWORD PTR [rax+0xb8]
  42a9de:	mov    rdx,QWORD PTR [rax+r15*8]
  42a9e2:	xor    eax,eax
  42a9e4:	test   BYTE PTR [rdx+0x68],0x40
  42a9e8:	jne    0x42aabf
  42a9ee:	add    rsp,0xf8
  42a9f5:	pop    rbx
  42a9f6:	pop    rsi
  42a9f7:	pop    rdi
  42a9f8:	pop    rbp
  42a9f9:	pop    r12
  42a9fb:	pop    r13
  42a9fd:	pop    r14
  42a9ff:	pop    r15
  42aa01:	ret    
  42aa02:	lea    rcx,[rsp+0xb0]
  42aa0a:	mov    r8,r9
  42aa0d:	mov    rdx,rsi
  42aa10:	mov    DWORD PTR [rsp+0xb0],0x0
  42aa1b:	call   0x427cc0
  42aa20:	mov    rdi,rax
  42aa23:	mov    eax,DWORD PTR [rsp+0xb0]
  42aa2a:	test   eax,eax
  42aa2c:	jne    0x42a9ee
  42aa2e:	cmp    QWORD PTR [rdi+0x38],0x0
  42aa33:	jne    0x42ae05
  42aa39:	mov    rax,QWORD PTR [rbx+0x8]
  42aa3d:	mov    QWORD PTR [rdi+0x40],0x0
  42aa45:	lea    rcx,[rax*8+0x0]
  42aa4d:	mov    QWORD PTR [rdi+0x38],rax
  42aa51:	call   0x423ec0
  42aa56:	test   rax,rax
  42aa59:	mov    QWORD PTR [rdi+0x48],rax
  42aa5d:	je     0x42aab5
  42aa5f:	add    rdi,0x38
  42aa63:	xor    ebp,ebp
  42aa65:	cmp    QWORD PTR [rbx+0x8],0x0
  42aa6a:	mov    DWORD PTR [rsp+0xb0],0x0
  42aa75:	jg     0x42aa8e
  42aa77:	jmp    0x42ae09
  42aa7c:	nop    DWORD PTR [rax+0x0]
  42aa80:	add    rbp,0x1
  42aa84:	cmp    rbp,QWORD PTR [rbx+0x8]
  42aa88:	jge    0x42ae09
  42aa8e:	mov    rax,QWORD PTR [rbx+0x10]
  42aa92:	mov    rcx,rdi
  42aa95:	mov    rax,QWORD PTR [rax+rbp*8]
  42aa99:	lea    rdx,[rax+rax*2]
  42aa9d:	mov    rax,QWORD PTR [rsi+0x38]
  42aaa1:	lea    rdx,[rax+rdx*8]
  42aaa5:	call   0x427210
  42aaaa:	test   eax,eax
  42aaac:	mov    DWORD PTR [rsp+0xb0],eax
  42aab3:	je     0x42aa80
  42aab5:	mov    eax,0xc
  42aaba:	jmp    0x42a9ee
  42aabf:	mov    rax,QWORD PTR [rsp+0x140]
  42aac7:	mov    r8,r15
  42aaca:	mov    rcx,QWORD PTR [rax+0xc8]
  42aad1:	lea    rdx,[rax+0xd8]
  42aad8:	mov    r14,QWORD PTR [rax+0x98]
  42aadf:	call   0x426690
  42aae4:	cmp    rax,0xffffffffffffffff
  42aae8:	mov    QWORD PTR [rsp+0x88],rax
  42aaf0:	je     0x42adfe
  42aaf6:	mov    rdi,QWORD PTR [rsp+0x48]
  42aafb:	mov    QWORD PTR [rsp+0xb0],0x0
  42ab07:	cmp    QWORD PTR [rdi+0x8],0x0
  42ab0c:	jle    0x42adfe
  42ab12:	lea    rax,[rax+rax*4]
  42ab16:	mov    r11,r15
  42ab19:	mov    QWORD PTR [rsp+0x40],0x0
  42ab22:	mov    r15,r14
  42ab25:	mov    r14,r13
  42ab28:	shl    rax,0x3
  42ab2c:	mov    QWORD PTR [rsp+0x90],rax
  42ab34:	lea    rax,[r13+0x30]
  42ab38:	mov    QWORD PTR [rsp+0x80],rax
  42ab40:	lea    rax,[rsp+0xb0]
  42ab48:	mov    QWORD PTR [rsp+0x78],rax
  42ab4d:	lea    rax,[rsp+0xd0]
  42ab55:	mov    QWORD PTR [rsp+0x98],rax
  42ab5d:	jmp    0x42ab7e
  42ab5f:	nop
  42ab60:	cmp    al,0x4
  42ab62:	je     0x42abae
  42ab64:	mov    rdi,QWORD PTR [rsp+0x48]
  42ab69:	add    QWORD PTR [rsp+0x40],0x1
  42ab6f:	mov    rax,QWORD PTR [rsp+0x40]
  42ab74:	cmp    rax,QWORD PTR [rdi+0x8]
  42ab78:	jge    0x42ade6
  42ab7e:	mov    rax,QWORD PTR [rsp+0x48]
  42ab83:	mov    rcx,QWORD PTR [rsp+0x40]
  42ab88:	mov    rax,QWORD PTR [rax+0x10]
  42ab8c:	mov    r12,QWORD PTR [rax+rcx*8]
  42ab90:	mov    rax,r12
  42ab93:	shl    rax,0x4
  42ab97:	add    rax,QWORD PTR [r15]
  42ab9a:	cmp    r12,QWORD PTR [r14+0x10]
  42ab9e:	movzx  eax,BYTE PTR [rax+0x8]
  42aba2:	jne    0x42ab60
  42aba4:	cmp    r11,QWORD PTR [r14+0x18]
  42aba8:	je     0x42ab64
  42abaa:	cmp    al,0x4
  42abac:	jne    0x42ab64
  42abae:	mov    rax,QWORD PTR [rsp+0x140]
  42abb6:	mov    rbp,QWORD PTR [rsp+0x90]
  42abbe:	mov    rdi,QWORD PTR [rsp+0x88]
  42abc6:	mov    rbx,rbp
  42abc9:	add    rbx,QWORD PTR [rax+0xd8]
  42abd0:	lea    rax,[r12*8+0x0]
  42abd8:	mov    QWORD PTR [rsp+0x60],rax
  42abdd:	lea    rax,[r12+r12*2]
  42abe1:	shl    rax,0x3
  42abe5:	mov    QWORD PTR [rsp+0x68],rax
  42abea:	jmp    0x42ac06
  42abec:	nop    DWORD PTR [rax+0x0]
  42abf0:	add    rdi,0x1
  42abf4:	add    rbp,0x28
  42abf8:	cmp    BYTE PTR [rsi+0x20],0x0
  42abfc:	lea    rbx,[rsi+0x28]
  42ac00:	je     0x42ab64
  42ac06:	cmp    r12,QWORD PTR [rbx]
  42ac09:	mov    rsi,rbx
  42ac0c:	jne    0x42abf0
  42ac0e:	mov    rax,QWORD PTR [rbx+0x18]
  42ac12:	sub    rax,QWORD PTR [rbx+0x10]
  42ac16:	test   rax,rax
  42ac19:	lea    r13,[r11+rax*1]
  42ac1d:	je     0x42add0
  42ac23:	mov    rax,QWORD PTR [r15+0x18]
  42ac27:	mov    rcx,QWORD PTR [rsp+0x60]
  42ac2c:	mov    r9,QWORD PTR [rax+rcx*1]
  42ac30:	cmp    r13,QWORD PTR [r14+0x18]
  42ac34:	jg     0x42adc0
  42ac3a:	mov    rax,QWORD PTR [r14]
  42ac3d:	mov    rax,QWORD PTR [rax+r13*8]
  42ac41:	test   rax,rax
  42ac44:	je     0x42adc0
  42ac4a:	mov    rcx,QWORD PTR [rax+0x10]
  42ac4e:	lea    rdx,[rax+0x18]
  42ac52:	mov    r8,r9
  42ac55:	mov    QWORD PTR [rsp+0x58],r11
  42ac5a:	mov    QWORD PTR [rsp+0x50],r9
  42ac5f:	mov    rsi,rbx
  42ac62:	call   0x426410
  42ac67:	test   rax,rax
  42ac6a:	mov    r9,QWORD PTR [rsp+0x50]
  42ac6f:	mov    r11,QWORD PTR [rsp+0x58]
  42ac74:	je     0x42abf0
  42ac7a:	mov    r8,QWORD PTR [rsp+0x80]
  42ac82:	mov    rcx,QWORD PTR [rsp+0x140]
  42ac8a:	lea    rdx,[r14+0x28]
  42ac8e:	mov    QWORD PTR [rsp+0x28],r9
  42ac93:	mov    QWORD PTR [rsp+0x20],r11
  42ac98:	mov    r9,r12
  42ac9b:	mov    QWORD PTR [rsp+0x30],r13
  42aca0:	mov    QWORD PTR [rsp+0x50],r11
  42aca5:	call   0x426710
  42acaa:	test   al,al
  42acac:	mov    r11,QWORD PTR [rsp+0x50]
  42acb1:	jne    0x42abf0
  42acb7:	cmp    QWORD PTR [rsp+0xb0],0x0
  42acc0:	je     0x42b0b4
  42acc6:	mov    rax,QWORD PTR [rsp+0x78]
  42accb:	mov    rdx,rdi
  42acce:	mov    QWORD PTR [rsp+0xc8],r11
  42acd6:	mov    QWORD PTR [rsp+0x50],r11
  42acdb:	mov    QWORD PTR [rsp+0xc0],r12
  42ace3:	lea    rcx,[rax+0x20]
  42ace7:	call   0x424ce0
  42acec:	test   al,al
  42acee:	mov    r11,QWORD PTR [rsp+0x50]
  42acf3:	je     0x42ae62
  42acf9:	mov    rcx,QWORD PTR [rsp+0x70]
  42acfe:	mov    rax,QWORD PTR [rsp+0xb0]
  42ad06:	mov    rdx,QWORD PTR [rsp+0x78]
  42ad0b:	mov    QWORD PTR [rsp+0x50],r11
  42ad10:	mov    rbx,QWORD PTR [rax+rcx*1]
  42ad14:	mov    rcx,QWORD PTR [rsp+0x140]
  42ad1c:	call   0x42b150
  42ad21:	test   eax,eax
  42ad23:	jne    0x42ae67
  42ad29:	mov    rdx,QWORD PTR [r14+0x8]
  42ad2d:	mov    r11,QWORD PTR [rsp+0x50]
  42ad32:	test   rdx,rdx
  42ad35:	je     0x42ad5d
  42ad37:	mov    r8,QWORD PTR [rsp+0xb0]
  42ad3f:	lea    r9,[r11+0x1]
  42ad43:	mov    rcx,r15
  42ad46:	mov    QWORD PTR [rsp+0x50],r11
  42ad4b:	call   0x427ed0
  42ad50:	test   eax,eax
  42ad52:	mov    r11,QWORD PTR [rsp+0x50]
  42ad57:	jne    0x42ae67
  42ad5d:	mov    rsi,QWORD PTR [rsp+0x78]
  42ad62:	mov    rax,QWORD PTR [rsp+0xb0]
  42ad6a:	mov    r8,rdi
  42ad6d:	mov    rcx,QWORD PTR [rsp+0x70]
  42ad72:	mov    QWORD PTR [rsp+0x50],r11
  42ad77:	mov    QWORD PTR [rax+rcx*1],rbx
  42ad7b:	lea    rbx,[rsi+0x30]
  42ad7f:	mov    rcx,QWORD PTR [rsp+0xd8]
  42ad87:	mov    rdx,rbx
  42ad8a:	call   0x426410
  42ad8f:	mov    rcx,rsi
  42ad92:	lea    r8,[rax-0x1]
  42ad96:	mov    rdx,rbx
  42ad99:	add    rcx,0x28
  42ad9d:	mov    rsi,rbp
  42ada0:	call   0x426560
  42ada5:	mov    rax,QWORD PTR [rsp+0x140]
  42adad:	mov    r11,QWORD PTR [rsp+0x50]
  42adb2:	add    rsi,QWORD PTR [rax+0xd8]
  42adb9:	jmp    0x42abf0
  42adbe:	xchg   ax,ax
  42adc0:	mov    rsi,rbx
  42adc3:	jmp    0x42abf0
  42adc8:	nop    DWORD PTR [rax+rax*1+0x0]
  42add0:	mov    rax,QWORD PTR [r15+0x28]
  42add4:	mov    rcx,QWORD PTR [rsp+0x68]
  42add9:	mov    rax,QWORD PTR [rax+rcx*1+0x10]
  42adde:	mov    r9,QWORD PTR [rax]
  42ade1:	jmp    0x42ac30
  42ade6:	cmp    QWORD PTR [rsp+0xb0],0x0
  42adef:	je     0x42adfe
  42adf1:	mov    rcx,QWORD PTR [rsp+0xe0]
  42adf9:	call   0x43a748
  42adfe:	xor    eax,eax
  42ae00:	jmp    0x42a9ee
  42ae05:	add    rdi,0x38
  42ae09:	mov    rdx,QWORD PTR [rsp+0x48]
  42ae0e:	mov    r8,rdi
  42ae11:	mov    rcx,rbx
  42ae14:	call   0x428e20
  42ae19:	test   eax,eax
  42ae1b:	mov    DWORD PTR [rsp+0xac],eax
  42ae22:	jne    0x42a9ee
  42ae28:	cmp    QWORD PTR [r13+0x28],0x0
  42ae2d:	jne    0x42aea6
  42ae2f:	mov    rdi,QWORD PTR [rsp+0x70]
  42ae34:	add    rdi,QWORD PTR [r13+0x0]
  42ae38:	lea    rcx,[rsp+0xac]
  42ae40:	mov    r8,rbx
  42ae43:	mov    rdx,rsi
  42ae46:	call   0x427cc0
  42ae4b:	mov    QWORD PTR [rdi],rax
  42ae4e:	mov    eax,DWORD PTR [rsp+0xac]
  42ae55:	test   eax,eax
  42ae57:	je     0x42a9c3
  42ae5d:	jmp    0x42a9ee
  42ae62:	mov    eax,0xc
  42ae67:	cmp    QWORD PTR [rsp+0xb0],0x0
  42ae70:	je     0x42a9ee
  42ae76:	mov    rcx,QWORD PTR [rsp+0xe0]
  42ae7e:	mov    DWORD PTR [rsp+0x40],eax
  42ae82:	call   0x43a748
  42ae87:	mov    eax,DWORD PTR [rsp+0x40]
  42ae8b:	jmp    0x42a9ee
  42ae90:	cmp    QWORD PTR [r9+0x8],0x0
  42ae95:	mov    QWORD PTR [rsp+0x48],0x0
  42ae9e:	je     0x42a9b7
  42aea4:	jmp    0x42ae2f
  42aea6:	mov    rax,QWORD PTR [rsp+0x140]
  42aeae:	mov    rax,QWORD PTR [rax+0xd8]
  42aeb5:	mov    QWORD PTR [rsp+0x40],rax
  42aeba:	jle    0x42af73
  42aec0:	xor    edi,edi
  42aec2:	mov    rax,QWORD PTR [r13+0x30]
  42aec6:	mov    rcx,QWORD PTR [rsp+0x40]
  42aecb:	mov    rax,QWORD PTR [rax+rdi*8]
  42aecf:	lea    rax,[rax+rax*4]
  42aed3:	lea    rdx,[rcx+rax*8]
  42aed7:	cmp    r15,QWORD PTR [rdx+0x10]
  42aedb:	jle    0x42af65
  42aee1:	cmp    r15,QWORD PTR [rdx+0x8]
  42aee5:	jg     0x42af65
  42aee7:	mov    rcx,QWORD PTR [rdx]
  42aeea:	mov    rax,QWORD PTR [rsi]
  42aeed:	shl    rcx,0x4
  42aef1:	cmp    r15,QWORD PTR [rdx+0x18]
  42aef5:	mov    r14,QWORD PTR [rax+rcx*1]
  42aef9:	je     0x42af83
  42aeff:	cmp    QWORD PTR [rbx+0x8],0x0
  42af04:	jle    0x42af65
  42af06:	xor    ebp,ebp
  42af08:	jmp    0x42af1d
  42af0a:	nop    WORD PTR [rax+rax*1+0x0]
  42af10:	add    rbp,0x1
  42af14:	cmp    rbp,QWORD PTR [rbx+0x8]
  42af18:	jge    0x42af65
  42af1a:	mov    rax,QWORD PTR [rsi]
  42af1d:	mov    rdx,QWORD PTR [rbx+0x10]
  42af21:	mov    rdx,QWORD PTR [rdx+rbp*8]
  42af25:	mov    r9,rdx
  42af28:	shl    r9,0x4
  42af2c:	add    rax,r9
  42af2f:	movzx  r9d,BYTE PTR [rax+0x8]
  42af34:	sub    r9d,0x8
  42af38:	cmp    r9d,0x1
  42af3c:	ja     0x42af10
  42af3e:	cmp    r14,QWORD PTR [rax]
  42af41:	jne    0x42af10
  42af43:	mov    r9,QWORD PTR [rsp+0x48]
  42af48:	mov    r8,rbx
  42af4b:	mov    rcx,rsi
  42af4e:	call   0x428fc0
  42af53:	test   eax,eax
  42af55:	jne    0x42a9ee
  42af5b:	add    rbp,0x1
  42af5f:	cmp    rbp,QWORD PTR [rbx+0x8]
  42af63:	jl     0x42af1a
  42af65:	add    rdi,0x1
  42af69:	cmp    rdi,QWORD PTR [r13+0x28]
  42af6d:	jl     0x42aec2
  42af73:	mov    DWORD PTR [rsp+0xac],0x0
  42af7e:	jmp    0x42ae2f
  42af83:	mov    rdx,QWORD PTR [rbx+0x8]
  42af87:	test   rdx,rdx
  42af8a:	jle    0x42af65
  42af8c:	mov    r10,QWORD PTR [rbx+0x10]
  42af90:	lea    r11,[r10+rdx*8]
  42af94:	mov    rdx,0xffffffffffffffff
  42af9b:	mov    rcx,r10
  42af9e:	mov    r9,rdx
  42afa1:	mov    rbp,rdx
  42afa4:	jmp    0x42afc6
  42afa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42afb0:	cmp    r12d,0x9
  42afb4:	jne    0x42afbd
  42afb6:	cmp    r14,QWORD PTR [rdx]
  42afb9:	cmove  rbp,r8
  42afbd:	add    rcx,0x8
  42afc1:	cmp    rcx,r11
  42afc4:	je     0x42afee
  42afc6:	mov    r8,QWORD PTR [rcx]
  42afc9:	mov    rdx,r8
  42afcc:	shl    rdx,0x4
  42afd0:	add    rdx,rax
  42afd3:	movzx  r12d,BYTE PTR [rdx+0x8]
  42afd8:	cmp    r12d,0x8
  42afdc:	jne    0x42afb0
  42afde:	cmp    r14,QWORD PTR [rdx]
  42afe1:	cmove  r9,r8
  42afe5:	add    rcx,0x8
  42afe9:	cmp    rcx,r11
  42afec:	jne    0x42afc6
  42afee:	test   r9,r9
  42aff1:	mov    rax,r9
  42aff4:	js     0x42b139
  42affa:	mov    r9,QWORD PTR [rsp+0x48]
  42afff:	mov    r8,rbx
  42b002:	mov    rdx,rax
  42b005:	mov    rcx,rsi
  42b008:	call   0x428fc0
  42b00d:	test   eax,eax
  42b00f:	jne    0x42a9ee
  42b015:	test   rbp,rbp
  42b018:	js     0x42af65
  42b01e:	cmp    QWORD PTR [rbx+0x8],0x0
  42b023:	jle    0x42af65
  42b029:	mov    r10,QWORD PTR [rbx+0x10]
  42b02d:	xor    r14d,r14d
  42b030:	mov    QWORD PTR [rsp+0x50],rdi
  42b035:	mov    r12,rbp
  42b038:	jmp    0x42b052
  42b03a:	nop    WORD PTR [rax+rax*1+0x0]
  42b040:	add    r14,0x1
  42b044:	cmp    r14,QWORD PTR [rbx+0x8]
  42b048:	jge    0x42b12f
  42b04e:	mov    r10,QWORD PTR [rbx+0x10]
  42b052:	mov    rdi,QWORD PTR [r10+r14*8]
  42b056:	mov    r8,r12
  42b059:	lea    rbp,[rdi+rdi*2]
  42b05d:	shl    rbp,0x3
  42b061:	mov    rax,rbp
  42b064:	add    rax,QWORD PTR [rsi+0x38]
  42b068:	mov    rcx,QWORD PTR [rax+0x8]
  42b06c:	lea    rdx,[rax+0x10]
  42b070:	call   0x426410
  42b075:	test   rax,rax
  42b078:	jne    0x42b040
  42b07a:	add    rbp,QWORD PTR [rsi+0x30]
  42b07e:	mov    r8,r12
  42b081:	mov    rcx,QWORD PTR [rbp+0x8]
  42b085:	lea    rdx,[rbp+0x10]
  42b089:	call   0x426410
  42b08e:	test   rax,rax
  42b091:	jne    0x42b040
  42b093:	mov    r9,QWORD PTR [rsp+0x48]
  42b098:	mov    r8,rbx
  42b09b:	mov    rdx,rdi
  42b09e:	mov    rcx,rsi
  42b0a1:	call   0x428fc0
  42b0a6:	test   eax,eax
  42b0a8:	jne    0x42a9ee
  42b0ae:	sub    r14,0x1
  42b0b2:	jmp    0x42b040
  42b0b4:	mov    rax,QWORD PTR [r14]
  42b0b7:	mov    rcx,QWORD PTR [rsp+0x98]
  42b0bf:	lea    rdx,[r14+0x20]
  42b0c3:	mov    QWORD PTR [rsp+0x50],r11
  42b0c8:	mov    QWORD PTR [rsp+0xb0],rax
  42b0d0:	mov    rax,QWORD PTR [r14+0x8]
  42b0d4:	mov    QWORD PTR [rsp+0xb8],rax
  42b0dc:	mov    rax,QWORD PTR [r14+0x10]
  42b0e0:	mov    QWORD PTR [rsp+0xc0],rax
  42b0e8:	mov    rax,QWORD PTR [r14+0x18]
  42b0ec:	mov    QWORD PTR [rsp+0xc8],rax
  42b0f4:	mov    rax,QWORD PTR [r14+0x20]
  42b0f8:	mov    QWORD PTR [rsp+0xd0],rax
  42b100:	mov    rax,QWORD PTR [r14+0x28]
  42b104:	mov    QWORD PTR [rsp+0xd8],rax
  42b10c:	mov    rax,QWORD PTR [r14+0x30]
  42b110:	mov    QWORD PTR [rsp+0xe0],rax
  42b118:	call   0x4277a0
  42b11d:	test   eax,eax
  42b11f:	mov    r11,QWORD PTR [rsp+0x50]
  42b124:	je     0x42acc6
  42b12a:	jmp    0x42ae67
  42b12f:	mov    rdi,QWORD PTR [rsp+0x50]
  42b134:	jmp    0x42af65
  42b139:	test   rbp,rbp
  42b13c:	jns    0x42b02d
  42b142:	jmp    0x42af65
  42b147:	nop    WORD PTR [rax+rax*1+0x0]
  42b150:	push   r15
  42b152:	push   r14
  42b154:	push   r13
  42b156:	push   r12
  42b158:	push   rbp
  42b159:	push   rdi
  42b15a:	push   rsi
  42b15b:	push   rbx
  42b15c:	sub    rsp,0xa8
  42b163:	mov    rbp,QWORD PTR [rdx+0x18]
  42b167:	mov    rbx,QWORD PTR [rdx+0x10]
  42b16b:	mov    r12,rcx
  42b16e:	mov    ecx,0x8
  42b173:	mov    r14,rdx
  42b176:	mov    QWORD PTR [rsp+0x80],0x1
  42b182:	mov    QWORD PTR [rsp+0x88],0x1
  42b18e:	call   0x423ec0
  42b193:	test   rax,rax
  42b196:	mov    QWORD PTR [rsp+0x90],rax
  42b19e:	je     0x42b42e
  42b1a4:	mov    QWORD PTR [rax],rbx
  42b1a7:	lea    rax,[rsp+0x80]
  42b1af:	mov    r8,rbp
  42b1b2:	mov    rdx,r14
  42b1b5:	mov    rcx,r12
  42b1b8:	mov    r9,rax
  42b1bb:	mov    QWORD PTR [rsp+0x58],rax
  42b1c0:	call   0x42a950
  42b1c5:	test   eax,eax
  42b1c7:	jne    0x42b405
  42b1cd:	lea    rax,[rbp*8+0x0]
  42b1d5:	test   rbp,rbp
  42b1d8:	mov    DWORD PTR [rsp+0x7c],0x0
  42b1e0:	mov    QWORD PTR [rsp+0x48],rax
  42b1e5:	lea    rax,[r14+0x30]
  42b1e9:	mov    QWORD PTR [rsp+0x68],rax
  42b1ee:	lea    rax,[r14+0x28]
  42b1f2:	mov    QWORD PTR [rsp+0x70],rax
  42b1f7:	jle    0x42b3eb
  42b1fd:	mov    eax,DWORD PTR [rsp+0x7c]
  42b201:	mov    rdi,QWORD PTR [rsp+0x48]
  42b206:	mov    rcx,QWORD PTR [r14]
  42b209:	add    eax,0x1
  42b20c:	cmp    QWORD PTR [rcx+rdi*1],0x0
  42b211:	mov    edi,0x0
  42b216:	cmovne eax,edi
  42b219:	cmp    eax,DWORD PTR [r12+0xe0]
  42b221:	mov    DWORD PTR [rsp+0x7c],eax
  42b225:	jg     0x42b435
  42b22b:	mov    rax,QWORD PTR [r12+0xb8]
  42b233:	mov    rdi,QWORD PTR [rsp+0x48]
  42b238:	sub    rbp,0x1
  42b23c:	mov    QWORD PTR [rsp+0x88],0x0
  42b248:	mov    rdi,QWORD PTR [rax+rdi*1-0x8]
  42b24d:	test   rdi,rdi
  42b250:	je     0x42b3c5
  42b256:	cmp    QWORD PTR [rdi+0x28],0x0
  42b25b:	mov    r13,QWORD PTR [r12+0x98]
  42b263:	jle    0x42b3c5
  42b269:	xor    ebx,ebx
  42b26b:	jmp    0x42b314
  42b270:	mov    r8,rbp
  42b273:	mov    rcx,r12
  42b276:	call   0x429310
  42b27b:	test   al,al
  42b27d:	je     0x42b306
  42b283:	mov    rax,QWORD PTR [r14]
  42b286:	mov    rcx,QWORD PTR [rsp+0x48]
  42b28b:	mov    rax,QWORD PTR [rax+rcx*1]
  42b28f:	test   rax,rax
  42b292:	je     0x42b306
  42b294:	mov    r8,QWORD PTR [r13+0x18]
  42b298:	mov    rcx,QWORD PTR [rax+0x10]
  42b29c:	lea    rdx,[rax+0x18]
  42b2a0:	mov    r8,QWORD PTR [r8+rsi*8]
  42b2a4:	call   0x426410
  42b2a9:	test   rax,rax
  42b2ac:	je     0x42b306
  42b2ae:	mov    r9d,0x1
  42b2b4:	cmp    QWORD PTR [r14+0x28],0x0
  42b2b9:	je     0x42b2f1
  42b2bb:	mov    rax,QWORD PTR [r13+0x18]
  42b2bf:	mov    r8,QWORD PTR [rsp+0x68]
  42b2c4:	mov    rcx,r12
  42b2c7:	mov    rdx,QWORD PTR [rax+rsi*8]
  42b2cb:	movsxd rax,r9d
  42b2ce:	mov    QWORD PTR [rsp+0x30],rbp
  42b2d3:	add    rax,rbp
  42b2d6:	mov    QWORD PTR [rsp+0x28],rsi
  42b2db:	mov    QWORD PTR [rsp+0x20],rax
  42b2e0:	mov    r9,rdx
  42b2e3:	mov    rdx,QWORD PTR [rsp+0x70]
  42b2e8:	call   0x426710
  42b2ed:	test   al,al
  42b2ef:	jne    0x42b306
  42b2f1:	mov    rcx,QWORD PTR [rsp+0x58]
  42b2f6:	mov    rdx,rsi
  42b2f9:	call   0x424ce0
  42b2fe:	test   al,al
  42b300:	je     0x42b400
  42b306:	add    rbx,0x1
  42b30a:	cmp    rbx,QWORD PTR [rdi+0x28]
  42b30e:	jge    0x42b3c5
  42b314:	mov    rax,QWORD PTR [rdi+0x30]
  42b318:	mov    rsi,QWORD PTR [rax+rbx*8]
  42b31c:	mov    r15,rsi
  42b31f:	shl    r15,0x4
  42b323:	mov    rdx,r15
  42b326:	add    rdx,QWORD PTR [r13+0x0]
  42b32a:	test   BYTE PTR [rdx+0xa],0x10
  42b32e:	je     0x42b270
  42b334:	mov    r11,QWORD PTR [r12+0x98]
  42b33c:	mov    rax,QWORD PTR [r14+0x18]
  42b340:	mov    r9,r12
  42b343:	mov    QWORD PTR [rsp+0x20],rbp
  42b348:	mov    r8,rsi
  42b34b:	mov    rcx,QWORD PTR [r11]
  42b34e:	lea    rdx,[r11+0xd0]
  42b355:	mov    QWORD PTR [rsp+0x50],rax
  42b35a:	mov    QWORD PTR [rsp+0x60],r11
  42b35f:	call   0x429c20
  42b364:	cmp    eax,0x0
  42b367:	mov    r9d,eax
  42b36a:	jle    0x42b3f0
  42b370:	cdqe   
  42b372:	add    rax,rbp
  42b375:	cmp    QWORD PTR [rsp+0x50],rax
  42b37a:	jl     0x42b2b4
  42b380:	mov    rdx,QWORD PTR [r14]
  42b383:	mov    r11,QWORD PTR [rsp+0x60]
  42b388:	mov    rax,QWORD PTR [rdx+rax*8]
  42b38c:	test   rax,rax
  42b38f:	je     0x42b3b9
  42b391:	mov    r8,QWORD PTR [r11+0x18]
  42b395:	mov    rcx,QWORD PTR [rax+0x10]
  42b399:	lea    rdx,[rax+0x18]
  42b39d:	mov    DWORD PTR [rsp+0x50],r9d
  42b3a2:	mov    r8,QWORD PTR [r8+rsi*8]
  42b3a6:	call   0x426410
  42b3ab:	test   rax,rax
  42b3ae:	mov    r9d,DWORD PTR [rsp+0x50]
  42b3b3:	jne    0x42b2b4
  42b3b9:	mov    rdx,r15
  42b3bc:	add    rdx,QWORD PTR [r13+0x0]
  42b3c0:	jmp    0x42b270
  42b3c5:	mov    r9,QWORD PTR [rsp+0x58]
  42b3ca:	mov    r8,rbp
  42b3cd:	mov    rdx,r14
  42b3d0:	mov    rcx,r12
  42b3d3:	call   0x42a950
  42b3d8:	test   eax,eax
  42b3da:	jne    0x42b405
  42b3dc:	sub    QWORD PTR [rsp+0x48],0x8
  42b3e2:	test   rbp,rbp
  42b3e5:	jne    0x42b1fd
  42b3eb:	xor    eax,eax
  42b3ed:	jmp    0x42b405
  42b3ef:	nop
  42b3f0:	jne    0x42b2b4
  42b3f6:	jmp    0x42b3b9
  42b3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b400:	mov    eax,0xc
  42b405:	mov    rcx,QWORD PTR [rsp+0x90]
  42b40d:	mov    DWORD PTR [rsp+0x48],eax
  42b411:	call   0x43a748
  42b416:	mov    eax,DWORD PTR [rsp+0x48]
  42b41a:	add    rsp,0xa8
  42b421:	pop    rbx
  42b422:	pop    rsi
  42b423:	pop    rdi
  42b424:	pop    rbp
  42b425:	pop    r12
  42b427:	pop    r13
  42b429:	pop    r14
  42b42b:	pop    r15
  42b42d:	ret    
  42b42e:	mov    eax,0xc
  42b433:	jmp    0x42b41a
  42b435:	mov    r8,QWORD PTR [rsp+0x48]
  42b43a:	xor    edx,edx
  42b43c:	call   0x43a6a8
  42b441:	mov    rcx,QWORD PTR [rsp+0x90]
  42b449:	call   0x43a748
  42b44e:	xor    eax,eax
  42b450:	jmp    0x42b41a
  42b452:	nop    DWORD PTR [rax+0x0]
  42b456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b460:	push   rbp
  42b461:	push   rdi
  42b462:	push   rsi
  42b463:	push   rbx
  42b464:	sub    rsp,0x38
  42b468:	mov    rax,QWORD PTR [rcx]
  42b46b:	mov    rsi,QWORD PTR [rsp+0x88]
  42b473:	mov    rdi,rdx
  42b476:	mov    rbp,r8
  42b479:	lea    rbx,[rax-0x1]
  42b47d:	test   rbx,rbx
  42b480:	mov    QWORD PTR [rcx],rbx
  42b483:	js     0x42b4f2
  42b485:	lea    rax,[rbx+rbx*2]
  42b489:	mov    rcx,QWORD PTR [rsp+0x80]
  42b491:	mov    r8,r9
  42b494:	shl    r8,0x4
  42b498:	shl    rax,0x4
  42b49c:	mov    rbx,rax
  42b49f:	add    rax,QWORD PTR [rdi]
  42b4a2:	mov    rdx,QWORD PTR [rax]
  42b4a5:	mov    QWORD PTR [rbp+0x0],rdx
  42b4a9:	mov    rdx,QWORD PTR [rax+0x10]
  42b4ad:	call   0x43a6b8
  42b4b2:	mov    rcx,QWORD PTR [rsi+0x10]
  42b4b6:	call   0x43a748
  42b4bb:	mov    rax,QWORD PTR [rdi]
  42b4be:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
  42b4c3:	call   0x43a748
  42b4c8:	mov    rax,rbx
  42b4cb:	add    rax,QWORD PTR [rdi]
  42b4ce:	mov    rdx,QWORD PTR [rax+0x18]
  42b4d2:	mov    QWORD PTR [rsi],rdx
  42b4d5:	mov    rdx,QWORD PTR [rax+0x20]
  42b4d9:	mov    QWORD PTR [rsi+0x8],rdx
  42b4dd:	mov    rdx,QWORD PTR [rax+0x28]
  42b4e1:	mov    rax,QWORD PTR [rax+0x8]
  42b4e5:	mov    QWORD PTR [rsi+0x10],rdx
  42b4e9:	add    rsp,0x38
  42b4ed:	pop    rbx
  42b4ee:	pop    rsi
  42b4ef:	pop    rdi
  42b4f0:	pop    rbp
  42b4f1:	ret    
  42b4f2:	lea    rdx,[rip+0x1cc2f]        # 0x448128
  42b4f9:	lea    rcx,[rip+0x1cc7a]        # 0x44817a
  42b500:	mov    r8d,0x570
  42b506:	mov    QWORD PTR [rsp+0x28],r9
  42b50b:	call   0x435a10
  42b510:	mov    r9,QWORD PTR [rsp+0x28]
  42b515:	jmp    0x42b485
  42b51a:	nop    WORD PTR [rax+rax*1+0x0]
  42b520:	push   rbp
  42b521:	push   r15
  42b523:	push   r14
  42b525:	push   r13
  42b527:	push   r12
  42b529:	push   rdi
  42b52a:	push   rsi
  42b52b:	push   rbx
  42b52c:	sub    rsp,0xd8
  42b533:	lea    rbp,[rsp+0x80]
  42b53b:	cmp    BYTE PTR [rbp+0xc0],0x0
  42b542:	mov    rax,QWORD PTR [rcx]
  42b545:	mov    r14,rdx
  42b548:	mov    QWORD PTR [rbp+0xb0],r8
  42b54f:	mov    QWORD PTR [rbp+0xb8],r9
  42b556:	mov    QWORD PTR [rbp+0x30],0x0
  42b55e:	mov    QWORD PTR [rbp+0x38],0x2
  42b566:	mov    QWORD PTR [rbp-0x10],rax
  42b56a:	mov    QWORD PTR [rbp+0x40],0x0
  42b572:	je     0x42bc27
  42b578:	mov    ecx,0x60
  42b57d:	call   0x423ec0
  42b582:	mov    rdx,rax
  42b585:	mov    QWORD PTR [rbp+0x40],rax
  42b589:	mov    eax,0xc
  42b58e:	test   rdx,rdx
  42b591:	je     0x42b7f6
  42b597:	lea    rax,[rbp+0x30]
  42b59b:	mov    QWORD PTR [rbp-0x8],rax
  42b59f:	mov    rax,QWORD PTR [rbp-0x10]
  42b5a3:	mov    QWORD PTR [rbp+0x10],0x0
  42b5ab:	mov    QWORD PTR [rbp+0x18],0x0
  42b5b3:	mov    QWORD PTR [rbp+0x20],0x0
  42b5bb:	mov    rbx,QWORD PTR [rax+0x90]
  42b5c2:	mov    rax,QWORD PTR [rbp+0xb0]
  42b5c9:	shl    rax,0x4
  42b5cd:	cmp    rax,0xfbf
  42b5d3:	mov    QWORD PTR [rbp-0x38],rax
  42b5d7:	jbe    0x42b807
  42b5dd:	mov    rcx,QWORD PTR [rbp-0x38]
  42b5e1:	call   0x423ec0
  42b5e6:	test   rax,rax
  42b5e9:	mov    QWORD PTR [rbp-0x30],rax
  42b5ed:	mov    BYTE PTR [rbp-0x41],0x1
  42b5f1:	je     0x42bb48
  42b5f7:	mov    r8,QWORD PTR [rbp-0x38]
  42b5fb:	mov    rdx,QWORD PTR [rbp+0xb8]
  42b602:	mov    r15,rbx
  42b605:	mov    rcx,QWORD PTR [rbp-0x30]
  42b609:	call   0x43a6b8
  42b60e:	mov    rax,QWORD PTR [rbp+0xb8]
  42b615:	mov    rsi,QWORD PTR [rax]
  42b618:	lea    rax,[rbp+0x8]
  42b61c:	mov    QWORD PTR [rbp-0x28],rax
  42b620:	lea    rax,[rbp+0x10]
  42b624:	mov    QWORD PTR [rbp+0x8],rsi
  42b628:	mov    QWORD PTR [rbp-0x20],rax
  42b62c:	lea    rax,[rbp+0x20]
  42b630:	mov    QWORD PTR [rbp-0x40],rax
  42b634:	jmp    0x42b6d7
  42b639:	nop    DWORD PTR [rax+0x0]
  42b640:	test   BYTE PTR [rdx+0xa],0x10
  42b644:	jne    0x42b8b4
  42b64a:	cmp    al,0x4
  42b64c:	mov    r9,QWORD PTR [rbp+0x8]
  42b650:	je     0x42b8f0
  42b656:	mov    r8,r9
  42b659:	mov    rcx,r14
  42b65c:	mov    QWORD PTR [rbp-0x18],r9
  42b660:	call   0x429310
  42b665:	test   al,al
  42b667:	mov    r9,QWORD PTR [rbp-0x18]
  42b66b:	je     0x42ba43
  42b671:	mov    rax,QWORD PTR [r13+0x18]
  42b675:	mov    r15,QWORD PTR [rax+r12*8]
  42b679:	lea    rax,[r9+0x1]
  42b67d:	cmp    QWORD PTR [rbp-0x8],0x0
  42b682:	mov    QWORD PTR [rbp+0x8],rax
  42b686:	je     0x42b6c2
  42b688:	cmp    rax,QWORD PTR [r14+0xa8]
  42b68f:	jg     0x42ba43
  42b695:	mov    rdx,QWORD PTR [r14+0xb8]
  42b69c:	mov    rax,QWORD PTR [rdx+rax*8]
  42b6a0:	test   rax,rax
  42b6a3:	je     0x42ba43
  42b6a9:	mov    rcx,QWORD PTR [rax+0x10]
  42b6ad:	lea    rdx,[rax+0x18]
  42b6b1:	mov    r8,r15
  42b6b4:	call   0x426410
  42b6b9:	test   rax,rax
  42b6bc:	je     0x42ba43
  42b6c2:	mov    QWORD PTR [rbp+0x18],0x0
  42b6ca:	test   r15,r15
  42b6cd:	js     0x42ba39
  42b6d3:	mov    rsi,QWORD PTR [rbp+0x8]
  42b6d7:	mov    rax,QWORD PTR [rbp+0xb8]
  42b6de:	mov    rax,QWORD PTR [rax+0x8]
  42b6e2:	cmp    rax,rsi
  42b6e5:	jl     0x42b7da
  42b6eb:	mov    rbx,QWORD PTR [rbp-0x10]
  42b6ef:	mov    rdi,r15
  42b6f2:	mov    r12,r15
  42b6f5:	shl    rdi,0x4
  42b6f9:	mov    rcx,rdi
  42b6fc:	add    rcx,QWORD PTR [rbx]
  42b6ff:	movzx  edx,BYTE PTR [rcx+0x8]
  42b703:	cmp    edx,0x8
  42b706:	je     0x42b825
  42b70c:	cmp    edx,0x9
  42b70f:	je     0x42b860
  42b715:	cmp    rax,rsi
  42b718:	jne    0x42b727
  42b71a:	cmp    QWORD PTR [r14+0xb0],r15
  42b721:	je     0x42b9a0
  42b727:	mov    r13,QWORD PTR [r14+0x98]
  42b72e:	mov    rcx,QWORD PTR [r13+0x0]
  42b732:	lea    rdx,[rcx+rdi*1]
  42b736:	movzx  eax,BYTE PTR [rdx+0x8]
  42b73a:	test   al,0x8
  42b73c:	je     0x42b640
  42b742:	mov    rax,QWORD PTR [r14+0xb8]
  42b749:	mov    rdx,QWORD PTR [rbp+0x8]
  42b74d:	mov    rcx,QWORD PTR [rbp-0x20]
  42b751:	mov    rsi,QWORD PTR [rax+rdx*8]
  42b755:	mov    rax,QWORD PTR [r13+0x28]
  42b759:	lea    rdx,[r15+r15*2]
  42b75d:	lea    r12,[rax+rdx*8]
  42b761:	mov    rdx,r15
  42b764:	call   0x424ce0
  42b769:	test   al,al
  42b76b:	je     0x42bb30
  42b771:	mov    rdi,QWORD PTR [r12+0x8]
  42b776:	test   rdi,rdi
  42b779:	jle    0x42ba43
  42b77f:	lea    rax,[rsi+0x18]
  42b783:	mov    r13,QWORD PTR [r12+0x10]
  42b788:	mov    r15,0xffffffffffffffff
  42b78f:	mov    r12,QWORD PTR [rsi+0x10]
  42b793:	mov    QWORD PTR [rbp+0xa8],r14
  42b79a:	xor    esi,esi
  42b79c:	mov    rbx,rax
  42b79f:	nop
  42b7a0:	mov    r14,QWORD PTR [r13+rsi*8+0x0]
  42b7a5:	mov    rdx,rbx
  42b7a8:	mov    rcx,r12
  42b7ab:	mov    r8,r14
  42b7ae:	call   0x426410
  42b7b3:	test   rax,rax
  42b7b6:	je     0x42b7c5
  42b7b8:	cmp    r15,0xffffffffffffffff
  42b7bc:	jne    0x42ba84
  42b7c2:	mov    r15,r14
  42b7c5:	add    rsi,0x1
  42b7c9:	cmp    rsi,rdi
  42b7cc:	jne    0x42b7a0
  42b7ce:	mov    r14,QWORD PTR [rbp+0xa8]
  42b7d5:	jmp    0x42b6ca
  42b7da:	mov    rcx,QWORD PTR [rbp+0x20]
  42b7de:	call   0x43a748
  42b7e3:	cmp    BYTE PTR [rbp-0x41],0x0
  42b7e7:	jne    0x42bc19
  42b7ed:	mov    rcx,QWORD PTR [rbp-0x8]
  42b7f1:	call   0x4260f0
  42b7f6:	lea    rsp,[rbp+0x58]
  42b7fa:	pop    rbx
  42b7fb:	pop    rsi
  42b7fc:	pop    rdi
  42b7fd:	pop    r12
  42b7ff:	pop    r13
  42b801:	pop    r14
  42b803:	pop    r15
  42b805:	pop    rbp
  42b806:	ret    
  42b807:	add    rax,0x10
  42b80b:	call   0x4354a0
  42b810:	sub    rsp,rax
  42b813:	mov    BYTE PTR [rbp-0x41],0x0
  42b817:	lea    rax,[rsp+0x30]
  42b81c:	mov    QWORD PTR [rbp-0x30],rax
  42b820:	jmp    0x42b5f7
  42b825:	mov    rdx,QWORD PTR [rcx]
  42b828:	add    rdx,0x1
  42b82c:	cmp    QWORD PTR [rbp+0xb0],rdx
  42b833:	jle    0x42b715
  42b839:	shl    rdx,0x4
  42b83d:	add    rdx,QWORD PTR [rbp+0xb8]
  42b844:	mov    rax,QWORD PTR [rbp+0xb8]
  42b84b:	mov    QWORD PTR [rdx+0x8],0xffffffffffffffff
  42b853:	mov    QWORD PTR [rdx],rsi
  42b856:	mov    rax,QWORD PTR [rax+0x8]
  42b85a:	jmp    0x42b715
  42b85f:	nop
  42b860:	mov    rbx,QWORD PTR [rcx]
  42b863:	lea    rdx,[rbx+0x1]
  42b867:	cmp    QWORD PTR [rbp+0xb0],rdx
  42b86e:	jle    0x42b715
  42b874:	shl    rdx,0x4
  42b878:	mov    rax,rdx
  42b87b:	add    rax,QWORD PTR [rbp+0xb8]
  42b882:	cmp    rsi,QWORD PTR [rax]
  42b885:	jg     0x42bb83
  42b88b:	test   BYTE PTR [rcx+0xa],0x8
  42b88f:	je     0x42b8a0
  42b891:	mov    rbx,QWORD PTR [rbp-0x30]
  42b895:	cmp    QWORD PTR [rbx+rdx*1],0xffffffffffffffff
  42b89a:	jne    0x42bbb7
  42b8a0:	mov    QWORD PTR [rax+0x8],rsi
  42b8a4:	mov    rax,QWORD PTR [rbp+0xb8]
  42b8ab:	mov    rax,QWORD PTR [rax+0x8]
  42b8af:	jmp    0x42b715
  42b8b4:	mov    rax,QWORD PTR [rbp+0x8]
  42b8b8:	lea    rdx,[r13+0xd0]
  42b8bf:	mov    r9,r14
  42b8c2:	mov    r8,r15
  42b8c5:	mov    QWORD PTR [rsp+0x20],rax
  42b8ca:	call   0x429c20
  42b8cf:	movsxd rsi,eax
  42b8d2:	test   rsi,rsi
  42b8d5:	je     0x42bc77
  42b8db:	mov    rdi,QWORD PTR [rbp+0x8]
  42b8df:	mov    rdx,QWORD PTR [r13+0x18]
  42b8e3:	lea    rax,[rdi+rsi*1]
  42b8e7:	mov    r15,QWORD PTR [rdx+r15*8]
  42b8eb:	jmp    0x42b67d
  42b8f0:	mov    rax,QWORD PTR [rdx]
  42b8f3:	add    rax,0x1
  42b8f7:	shl    rax,0x4
  42b8fb:	add    rax,QWORD PTR [rbp+0xb8]
  42b902:	mov    rdx,QWORD PTR [rax+0x8]
  42b906:	mov    rax,QWORD PTR [rax]
  42b909:	mov    rsi,rdx
  42b90c:	sub    rsi,rax
  42b90f:	cmp    QWORD PTR [rbp-0x8],0x0
  42b914:	je     0x42bbda
  42b91a:	cmp    rax,0xffffffffffffffff
  42b91e:	je     0x42ba43
  42b924:	cmp    rdx,0xffffffffffffffff
  42b928:	je     0x42ba43
  42b92e:	test   rsi,rsi
  42b931:	jne    0x42bb60
  42b937:	mov    rcx,QWORD PTR [rbp-0x20]
  42b93b:	mov    rdx,r15
  42b93e:	call   0x424ce0
  42b943:	test   al,al
  42b945:	je     0x42bb30
  42b94b:	mov    rdx,QWORD PTR [r13+0x28]
  42b94f:	lea    rax,[r15+r15*2]
  42b953:	mov    r9,QWORD PTR [rbp+0x8]
  42b957:	lea    rax,[rdx+rax*8]
  42b95b:	mov    QWORD PTR [rbp-0x18],r9
  42b95f:	mov    rax,QWORD PTR [rax+0x10]
  42b963:	mov    r15,QWORD PTR [rax]
  42b966:	mov    rax,QWORD PTR [r14+0xb8]
  42b96d:	mov    rax,QWORD PTR [rax+r9*8]
  42b971:	mov    r8,r15
  42b974:	mov    rcx,QWORD PTR [rax+0x10]
  42b978:	lea    rdx,[rax+0x18]
  42b97c:	call   0x426410
  42b981:	test   rax,rax
  42b984:	jne    0x42b6ca
  42b98a:	add    rdi,QWORD PTR [r13+0x0]
  42b98e:	mov    r9,QWORD PTR [rbp-0x18]
  42b992:	mov    rdx,rdi
  42b995:	jmp    0x42b656
  42b99a:	nop    WORD PTR [rax+rax*1+0x0]
  42b9a0:	cmp    QWORD PTR [rbp-0x8],0x0
  42b9a5:	je     0x42bc34
  42b9ab:	cmp    QWORD PTR [rbp+0xb0],0x0
  42b9b3:	je     0x42b7da
  42b9b9:	mov    rax,QWORD PTR [rbp+0xb8]
  42b9c0:	mov    rcx,QWORD PTR [rbp+0xb0]
  42b9c7:	xor    edx,edx
  42b9c9:	nop    DWORD PTR [rax+0x0]
  42b9d0:	cmp    QWORD PTR [rax],0x0
  42b9d4:	js     0x42b9dd
  42b9d6:	cmp    QWORD PTR [rax+0x8],0xffffffffffffffff
  42b9db:	je     0x42b9ea
  42b9dd:	add    rdx,0x1
  42b9e1:	add    rax,0x10
  42b9e5:	cmp    rcx,rdx
  42b9e8:	jne    0x42b9d0
  42b9ea:	cmp    QWORD PTR [rbp+0xb0],rdx
  42b9f1:	je     0x42b7da
  42b9f7:	mov    rbx,QWORD PTR [rbp-0x20]
  42b9fb:	mov    rax,QWORD PTR [rbp-0x8]
  42b9ff:	mov    r9,QWORD PTR [rbp+0xb0]
  42ba06:	mov    r8,QWORD PTR [rbp-0x28]
  42ba0a:	mov    QWORD PTR [rsp+0x28],rbx
  42ba0f:	mov    rbx,QWORD PTR [rbp+0xb8]
  42ba16:	lea    rdx,[rax+0x10]
  42ba1a:	mov    rcx,rax
  42ba1d:	mov    QWORD PTR [rsp+0x20],rbx
  42ba22:	call   0x42b460
  42ba27:	mov    rdi,rax
  42ba2a:	mov    r15,rax
  42ba2d:	mov    r12,rax
  42ba30:	shl    rdi,0x4
  42ba34:	jmp    0x42b727
  42ba39:	cmp    r15,0xfffffffffffffffe
  42ba3d:	je     0x42bb30
  42ba43:	mov    rax,QWORD PTR [rbp-0x8]
  42ba47:	test   rax,rax
  42ba4a:	je     0x42bc5d
  42ba50:	mov    rbx,QWORD PTR [rbp-0x20]
  42ba54:	mov    r9,QWORD PTR [rbp+0xb0]
  42ba5b:	lea    rdx,[rax+0x10]
  42ba5f:	mov    r8,QWORD PTR [rbp-0x28]
  42ba63:	mov    rcx,rax
  42ba66:	mov    QWORD PTR [rsp+0x28],rbx
  42ba6b:	mov    rbx,QWORD PTR [rbp+0xb8]
  42ba72:	mov    QWORD PTR [rsp+0x20],rbx
  42ba77:	call   0x42b460
  42ba7c:	mov    r15,rax
  42ba7f:	jmp    0x42b6d3
  42ba84:	mov    rdx,QWORD PTR [rbp-0x40]
  42ba88:	mov    rcx,QWORD PTR [rbp+0x18]
  42ba8c:	mov    r8,r15
  42ba8f:	mov    rbx,r14
  42ba92:	mov    r14,QWORD PTR [rbp+0xa8]
  42ba99:	call   0x426410
  42ba9e:	test   rax,rax
  42baa1:	jne    0x42bbaf
  42baa7:	mov    rdi,QWORD PTR [rbp-0x8]
  42baab:	test   rdi,rdi
  42baae:	je     0x42b6ca
  42bab4:	mov    rsi,QWORD PTR [rdi]
  42bab7:	mov    r12,QWORD PTR [rbp+0x8]
  42babb:	lea    rax,[rsi+0x1]
  42babf:	cmp    rax,QWORD PTR [rdi+0x8]
  42bac3:	mov    QWORD PTR [rdi],rax
  42bac6:	je     0x42bbeb
  42bacc:	mov    rdi,QWORD PTR [rdi+0x10]
  42bad0:	lea    rsi,[rsi+rsi*2]
  42bad4:	shl    rsi,0x4
  42bad8:	add    rdi,rsi
  42badb:	mov    QWORD PTR [rdi],r12
  42bade:	mov    r12,QWORD PTR [rbp-0x38]
  42bae2:	mov    QWORD PTR [rdi+0x8],rbx
  42bae6:	mov    rcx,r12
  42bae9:	call   0x423ec0
  42baee:	mov    rbx,QWORD PTR [rbp-0x8]
  42baf2:	mov    QWORD PTR [rdi+0x10],rax
  42baf6:	mov    rax,QWORD PTR [rbx+0x10]
  42bafa:	mov    rcx,QWORD PTR [rax+rsi*1+0x10]
  42baff:	test   rcx,rcx
  42bb02:	je     0x42bb30
  42bb04:	mov    rdx,QWORD PTR [rbp+0xb8]
  42bb0b:	mov    r8,r12
  42bb0e:	call   0x43a6b8
  42bb13:	mov    rcx,rsi
  42bb16:	add    rcx,QWORD PTR [rbx+0x10]
  42bb1a:	mov    rdx,QWORD PTR [rbp-0x20]
  42bb1e:	add    rcx,0x18
  42bb22:	call   0x4277a0
  42bb27:	test   eax,eax
  42bb29:	je     0x42b6ca
  42bb2f:	nop
  42bb30:	mov    rcx,QWORD PTR [rbp+0x20]
  42bb34:	call   0x43a748
  42bb39:	cmp    BYTE PTR [rbp-0x41],0x0
  42bb3d:	je     0x42bb48
  42bb3f:	mov    rcx,QWORD PTR [rbp-0x30]
  42bb43:	call   0x43a748
  42bb48:	mov    rcx,QWORD PTR [rbp-0x8]
  42bb4c:	call   0x4260f0
  42bb51:	mov    eax,0xc
  42bb56:	jmp    0x42b7f6
  42bb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb60:	mov    rcx,QWORD PTR [r14+0x8]
  42bb64:	mov    r8,rsi
  42bb67:	mov    rdi,r9
  42bb6a:	lea    rdx,[rcx+r9*1]
  42bb6e:	add    rcx,rax
  42bb71:	call   0x43a6c0
  42bb76:	test   eax,eax
  42bb78:	je     0x42b8df
  42bb7e:	jmp    0x42ba43
  42bb83:	mov    r8,QWORD PTR [rbp-0x38]
  42bb87:	mov    rdx,QWORD PTR [rbp+0xb8]
  42bb8e:	mov    rcx,QWORD PTR [rbp-0x30]
  42bb92:	mov    QWORD PTR [rax+0x8],rsi
  42bb96:	call   0x43a6b8
  42bb9b:	mov    rax,QWORD PTR [rbp+0xb8]
  42bba2:	mov    rsi,QWORD PTR [rbp+0x8]
  42bba6:	mov    rax,QWORD PTR [rax+0x8]
  42bbaa:	jmp    0x42b715
  42bbaf:	mov    r15,rbx
  42bbb2:	jmp    0x42b6ca
  42bbb7:	mov    r8,QWORD PTR [rbp-0x38]
  42bbbb:	mov    rcx,QWORD PTR [rbp+0xb8]
  42bbc2:	mov    rdx,rbx
  42bbc5:	call   0x43a6b8
  42bbca:	mov    rax,QWORD PTR [rbp+0xb8]
  42bbd1:	mov    rax,QWORD PTR [rax+0x8]
  42bbd5:	jmp    0x42b715
  42bbda:	test   rsi,rsi
  42bbdd:	je     0x42b937
  42bbe3:	mov    rdi,r9
  42bbe6:	jmp    0x42b8df
  42bbeb:	mov    rdi,QWORD PTR [rbp-0x8]
  42bbef:	lea    rdx,[rax+rax*2]
  42bbf3:	shl    rdx,0x5
  42bbf7:	mov    rcx,QWORD PTR [rdi+0x10]
  42bbfb:	call   0x43a680
  42bc00:	test   rax,rax
  42bc03:	je     0x42bb30
  42bc09:	shl    QWORD PTR [rdi+0x8],1
  42bc0d:	mov    QWORD PTR [rdi+0x10],rax
  42bc11:	mov    rdi,rax
  42bc14:	jmp    0x42bad0
  42bc19:	mov    rcx,QWORD PTR [rbp-0x30]
  42bc1d:	call   0x43a748
  42bc22:	jmp    0x42b7ed
  42bc27:	mov    QWORD PTR [rbp-0x8],0x0
  42bc2f:	jmp    0x42b59f
  42bc34:	mov    rcx,QWORD PTR [rbp+0x20]
  42bc38:	call   0x43a748
  42bc3d:	xor    eax,eax
  42bc3f:	cmp    BYTE PTR [rbp-0x41],0x0
  42bc43:	je     0x42b7f6
  42bc49:	mov    rcx,QWORD PTR [rbp-0x30]
  42bc4d:	mov    DWORD PTR [rbp-0x8],eax
  42bc50:	call   0x43a748
  42bc55:	mov    eax,DWORD PTR [rbp-0x8]
  42bc58:	jmp    0x42b7f6
  42bc5d:	mov    rcx,QWORD PTR [rbp+0x20]
  42bc61:	call   0x43a748
  42bc66:	cmp    BYTE PTR [rbp-0x41],0x0
  42bc6a:	mov    eax,0x1
  42bc6f:	je     0x42b7f6
  42bc75:	jmp    0x42bc49
  42bc77:	add    rdi,QWORD PTR [r13+0x0]
  42bc7b:	mov    r9,QWORD PTR [rbp+0x8]
  42bc7f:	mov    rdx,rdi
  42bc82:	jmp    0x42b656
  42bc87:	nop    WORD PTR [rax+rax*1+0x0]
  42bc90:	push   r13
  42bc92:	push   r12
  42bc94:	push   rbp
  42bc95:	push   rdi
  42bc96:	push   rsi
  42bc97:	push   rbx
  42bc98:	sub    rsp,0x38
  42bc9c:	test   BYTE PTR [rsp+0xa2],0x40
  42bca4:	mov    r13,QWORD PTR [rsp+0x90]
  42bcac:	mov    r12,rcx
  42bcaf:	mov    rbp,rdx
  42bcb2:	mov    rbx,QWORD PTR [rsp+0x98]
  42bcba:	je     0x42bcda
  42bcbc:	lea    rdi,[rip+0x1c4c6]        # 0x448189
  42bcc3:	mov    ecx,0x6
  42bcc8:	mov    rsi,rbx
  42bccb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bccd:	jne    0x42be24
  42bcd3:	lea    rbx,[rip+0x1c4a9]        # 0x448183
  42bcda:	mov    rdx,QWORD PTR [r9]
  42bcdd:	cmp    QWORD PTR [r13+0x0],rdx
  42bce1:	je     0x42be4d
  42bce7:	mov    rax,QWORD PTR [r8]
  42bcea:	lea    rcx,[rdx+0x1]
  42bcee:	lea    rsi,[rax+rdx*2]
  42bcf2:	lea    rdi,[rip+0x1c49c]        # 0x448195
  42bcf9:	mov    QWORD PTR [r9],rcx
  42bcfc:	mov    rcx,rbx
  42bcff:	call   0x435cf0
  42bd04:	mov    ecx,0x6
  42bd09:	mov    WORD PTR [rsi],ax
  42bd0c:	mov    rsi,rbx
  42bd0f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bd11:	je     0x42bdb1
  42bd17:	lea    rdi,[rip+0x1c47d]        # 0x44819b
  42bd1e:	mov    ecx,0x6
  42bd23:	mov    rsi,rbx
  42bd26:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bd28:	jne    0x42be8a
  42bd2e:	xor    ebx,ebx
  42bd30:	test   r12,r12
  42bd33:	mov    rsi,QWORD PTR [rip+0x28d26]        # 0x454a60
  42bd3a:	mov    edi,0x1
  42bd3f:	jne    0x42bd80
  42bd41:	mov    ecx,ebx
  42bd43:	call   rsi
  42bd45:	test   eax,eax
  42bd47:	je     0x42bd5a
  42bd49:	mov    rax,rbx
  42bd4c:	mov    edx,edi
  42bd4e:	mov    ecx,ebx
  42bd50:	sar    rax,0x5
  42bd54:	shl    edx,cl
  42bd56:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42bd5a:	add    rbx,0x1
  42bd5e:	cmp    rbx,0x100
  42bd65:	jne    0x42bd41
  42bd67:	xor    eax,eax
  42bd69:	add    rsp,0x38
  42bd6d:	pop    rbx
  42bd6e:	pop    rsi
  42bd6f:	pop    rdi
  42bd70:	pop    rbp
  42bd71:	pop    r12
  42bd73:	pop    r13
  42bd75:	ret    
  42bd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd80:	mov    ecx,ebx
  42bd82:	call   rsi
  42bd84:	test   eax,eax
  42bd86:	je     0x42bda2
  42bd88:	movzx  ecx,BYTE PTR [r12+rbx*1]
  42bd8d:	mov    edx,edi
  42bd8f:	mov    rax,rcx
  42bd92:	and    ecx,0x1f
  42bd95:	shr    rax,0x3
  42bd99:	shl    edx,cl
  42bd9b:	and    eax,0x1c
  42bd9e:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42bda2:	add    rbx,0x1
  42bda6:	cmp    rbx,0x100
  42bdad:	jne    0x42bd80
  42bdaf:	jmp    0x42bd67
  42bdb1:	xor    ebx,ebx
  42bdb3:	test   r12,r12
  42bdb6:	mov    rsi,QWORD PTR [rip+0x28c93]        # 0x454a50
  42bdbd:	mov    edi,0x1
  42bdc2:	jne    0x42bdf0
  42bdc4:	mov    ecx,ebx
  42bdc6:	call   rsi
  42bdc8:	test   eax,eax
  42bdca:	je     0x42bddd
  42bdcc:	mov    rax,rbx
  42bdcf:	mov    edx,edi
  42bdd1:	mov    ecx,ebx
  42bdd3:	sar    rax,0x5
  42bdd7:	shl    edx,cl
  42bdd9:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42bddd:	add    rbx,0x1
  42bde1:	cmp    rbx,0x100
  42bde8:	jne    0x42bdc4
  42bdea:	jmp    0x42bd67
  42bdef:	nop
  42bdf0:	mov    ecx,ebx
  42bdf2:	call   rsi
  42bdf4:	test   eax,eax
  42bdf6:	je     0x42be12
  42bdf8:	movzx  ecx,BYTE PTR [r12+rbx*1]
  42bdfd:	mov    edx,edi
  42bdff:	mov    rax,rcx
  42be02:	and    ecx,0x1f
  42be05:	shr    rax,0x3
  42be09:	shl    edx,cl
  42be0b:	and    eax,0x1c
  42be0e:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42be12:	add    rbx,0x1
  42be16:	cmp    rbx,0x100
  42be1d:	jne    0x42bdf0
  42be1f:	jmp    0x42bd67
  42be24:	lea    rdi,[rip+0x1c364]        # 0x44818f
  42be2b:	mov    rsi,rbx
  42be2e:	mov    ecx,0x6
  42be33:	lea    rax,[rip+0x1c349]        # 0x448183
  42be3a:	mov    rdx,QWORD PTR [r9]
  42be3d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42be3f:	cmove  rbx,rax
  42be43:	cmp    QWORD PTR [r13+0x0],rdx
  42be47:	jne    0x42bce7
  42be4d:	lea    rsi,[rdx+rdx*1+0x1]
  42be52:	mov    rcx,QWORD PTR [r8]
  42be55:	mov    QWORD PTR [rsp+0x28],r9
  42be5a:	mov    QWORD PTR [rsp+0x20],r8
  42be5f:	lea    rdx,[rsi+rsi*1]
  42be63:	call   0x43a680
  42be68:	test   rax,rax
  42be6b:	je     0x42c1a0
  42be71:	mov    r8,QWORD PTR [rsp+0x20]
  42be76:	mov    r9,QWORD PTR [rsp+0x28]
  42be7b:	mov    QWORD PTR [r8],rax
  42be7e:	mov    QWORD PTR [r13+0x0],rsi
  42be82:	mov    rdx,QWORD PTR [r9]
  42be85:	jmp    0x42bcea
  42be8a:	lea    rdi,[rip+0x1c2fe]        # 0x44818f
  42be91:	mov    ecx,0x6
  42be96:	mov    rsi,rbx
  42be99:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42be9b:	je     0x42bf34
  42bea1:	lea    rdi,[rip+0x1c2f9]        # 0x4481a1
  42bea8:	mov    ecx,0x6
  42bead:	mov    rsi,rbx
  42beb0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42beb2:	jne    0x42bfb4
  42beb8:	xor    ebx,ebx
  42beba:	test   r12,r12
  42bebd:	mov    rsi,QWORD PTR [rip+0x28bc4]        # 0x454a88
  42bec4:	mov    edi,0x1
  42bec9:	jne    0x42bf00
  42becb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bed0:	mov    ecx,ebx
  42bed2:	call   rsi
  42bed4:	test   eax,eax
  42bed6:	je     0x42bee9
  42bed8:	mov    rax,rbx
  42bedb:	mov    edx,edi
  42bedd:	mov    ecx,ebx
  42bedf:	sar    rax,0x5
  42bee3:	shl    edx,cl
  42bee5:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42bee9:	add    rbx,0x1
  42beed:	cmp    rbx,0x100
  42bef4:	jne    0x42bed0
  42bef6:	jmp    0x42bd67
  42befb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bf00:	mov    ecx,ebx
  42bf02:	call   rsi
  42bf04:	test   eax,eax
  42bf06:	je     0x42bf22
  42bf08:	movzx  ecx,BYTE PTR [r12+rbx*1]
  42bf0d:	mov    edx,edi
  42bf0f:	mov    rax,rcx
  42bf12:	and    ecx,0x1f
  42bf15:	shr    rax,0x3
  42bf19:	shl    edx,cl
  42bf1b:	and    eax,0x1c
  42bf1e:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42bf22:	add    rbx,0x1
  42bf26:	cmp    rbx,0x100
  42bf2d:	jne    0x42bf00
  42bf2f:	jmp    0x42bd67
  42bf34:	xor    ebx,ebx
  42bf36:	test   r12,r12
  42bf39:	mov    rsi,QWORD PTR [rip+0x28b30]        # 0x454a70
  42bf40:	mov    edi,0x1
  42bf45:	jne    0x42bf80
  42bf47:	nop    WORD PTR [rax+rax*1+0x0]
  42bf50:	mov    ecx,ebx
  42bf52:	call   rsi
  42bf54:	test   eax,eax
  42bf56:	je     0x42bf69
  42bf58:	mov    rax,rbx
  42bf5b:	mov    edx,edi
  42bf5d:	mov    ecx,ebx
  42bf5f:	sar    rax,0x5
  42bf63:	shl    edx,cl
  42bf65:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42bf69:	add    rbx,0x1
  42bf6d:	cmp    rbx,0x100
  42bf74:	jne    0x42bf50
  42bf76:	jmp    0x42bd67
  42bf7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bf80:	mov    ecx,ebx
  42bf82:	call   rsi
  42bf84:	test   eax,eax
  42bf86:	je     0x42bfa2
  42bf88:	movzx  ecx,BYTE PTR [r12+rbx*1]
  42bf8d:	mov    edx,edi
  42bf8f:	mov    rax,rcx
  42bf92:	and    ecx,0x1f
  42bf95:	shr    rax,0x3
  42bf99:	shl    edx,cl
  42bf9b:	and    eax,0x1c
  42bf9e:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42bfa2:	add    rbx,0x1
  42bfa6:	cmp    rbx,0x100
  42bfad:	jne    0x42bf80
  42bfaf:	jmp    0x42bd67
  42bfb4:	lea    rdi,[rip+0x1c1c8]        # 0x448183
  42bfbb:	mov    ecx,0x6
  42bfc0:	mov    rsi,rbx
  42bfc3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42bfc5:	jne    0x42c00b
  42bfc7:	xor    ebx,ebx
  42bfc9:	test   r12,r12
  42bfcc:	mov    rsi,QWORD PTR [rip+0x28a85]        # 0x454a58
  42bfd3:	mov    edi,0x1
  42bfd8:	jne    0x42c050
  42bfda:	nop    WORD PTR [rax+rax*1+0x0]
  42bfe0:	mov    ecx,ebx
  42bfe2:	call   rsi
  42bfe4:	test   eax,eax
  42bfe6:	je     0x42bff9
  42bfe8:	mov    rax,rbx
  42bfeb:	mov    edx,edi
  42bfed:	mov    ecx,ebx
  42bfef:	sar    rax,0x5
  42bff3:	shl    edx,cl
  42bff5:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42bff9:	add    rbx,0x1
  42bffd:	cmp    rbx,0x100
  42c004:	jne    0x42bfe0
  42c006:	jmp    0x42bd67
  42c00b:	lea    rdi,[rip+0x1c195]        # 0x4481a7
  42c012:	mov    ecx,0x6
  42c017:	mov    rsi,rbx
  42c01a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c01c:	jne    0x42c084
  42c01e:	xor    ecx,ecx
  42c020:	test   r12,r12
  42c023:	mov    edx,0x1
  42c028:	je     0x42c03c
  42c02a:	jmp    0x42c3fa
  42c02f:	nop
  42c030:	lea    eax,[rcx-0x30]
  42c033:	cmp    eax,0x9
  42c036:	jbe    0x42c3ee
  42c03c:	add    ecx,0x1
  42c03f:	cmp    ecx,0x100
  42c045:	jne    0x42c030
  42c047:	jmp    0x42bd67
  42c04c:	nop    DWORD PTR [rax+0x0]
  42c050:	mov    ecx,ebx
  42c052:	call   rsi
  42c054:	test   eax,eax
  42c056:	je     0x42c072
  42c058:	movzx  ecx,BYTE PTR [r12+rbx*1]
  42c05d:	mov    edx,edi
  42c05f:	mov    rax,rcx
  42c062:	and    ecx,0x1f
  42c065:	shr    rax,0x3
  42c069:	shl    edx,cl
  42c06b:	and    eax,0x1c
  42c06e:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c072:	add    rbx,0x1
  42c076:	cmp    rbx,0x100
  42c07d:	jne    0x42c050
  42c07f:	jmp    0x42bd67
  42c084:	lea    rdi,[rip+0x1c122]        # 0x4481ad
  42c08b:	mov    ecx,0x6
  42c090:	mov    rsi,rbx
  42c093:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c095:	jne    0x42c111
  42c097:	xor    ebx,ebx
  42c099:	test   r12,r12
  42c09c:	mov    rsi,QWORD PTR [rip+0x289d5]        # 0x454a78
  42c0a3:	mov    edi,0x1
  42c0a8:	jne    0x42c0db
  42c0aa:	nop    WORD PTR [rax+rax*1+0x0]
  42c0b0:	mov    ecx,ebx
  42c0b2:	call   rsi
  42c0b4:	test   eax,eax
  42c0b6:	je     0x42c0c9
  42c0b8:	mov    rax,rbx
  42c0bb:	mov    edx,edi
  42c0bd:	mov    ecx,ebx
  42c0bf:	sar    rax,0x5
  42c0c3:	shl    edx,cl
  42c0c5:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42c0c9:	add    rbx,0x1
  42c0cd:	cmp    rbx,0x100
  42c0d4:	jne    0x42c0b0
  42c0d6:	jmp    0x42bd67
  42c0db:	mov    ecx,ebx
  42c0dd:	call   rsi
  42c0df:	test   eax,eax
  42c0e1:	je     0x42c0ff
  42c0e3:	movzx  edx,BYTE PTR [r12+rbx*1]
  42c0e8:	mov    rax,rdx
  42c0eb:	mov    ecx,edx
  42c0ed:	mov    edx,edi
  42c0ef:	shr    rax,0x3
  42c0f3:	and    ecx,0x1f
  42c0f6:	and    eax,0x1c
  42c0f9:	shl    edx,cl
  42c0fb:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c0ff:	add    rbx,0x1
  42c103:	cmp    rbx,0x100
  42c10a:	jne    0x42c0db
  42c10c:	jmp    0x42bd67
  42c111:	lea    rdi,[rip+0x1c071]        # 0x448189
  42c118:	mov    ecx,0x6
  42c11d:	mov    rsi,rbx
  42c120:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c122:	jne    0x42c1aa
  42c128:	xor    ebx,ebx
  42c12a:	test   r12,r12
  42c12d:	mov    rsi,QWORD PTR [rip+0x2895c]        # 0x454a90
  42c134:	mov    edi,0x1
  42c139:	jne    0x42c166
  42c13b:	mov    ecx,ebx
  42c13d:	call   rsi
  42c13f:	test   eax,eax
  42c141:	je     0x42c154
  42c143:	mov    rax,rbx
  42c146:	mov    edx,edi
  42c148:	mov    ecx,ebx
  42c14a:	sar    rax,0x5
  42c14e:	shl    edx,cl
  42c150:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42c154:	add    rbx,0x1
  42c158:	cmp    rbx,0x100
  42c15f:	jne    0x42c13b
  42c161:	jmp    0x42bd67
  42c166:	mov    ecx,ebx
  42c168:	call   rsi
  42c16a:	test   eax,eax
  42c16c:	je     0x42c18a
  42c16e:	movzx  edx,BYTE PTR [r12+rbx*1]
  42c173:	mov    rax,rdx
  42c176:	mov    ecx,edx
  42c178:	mov    edx,edi
  42c17a:	shr    rax,0x3
  42c17e:	and    ecx,0x1f
  42c181:	and    eax,0x1c
  42c184:	shl    edx,cl
  42c186:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c18a:	add    rbx,0x1
  42c18e:	cmp    rbx,0x100
  42c195:	jne    0x42c166
  42c197:	jmp    0x42bd67
  42c19c:	nop    DWORD PTR [rax+0x0]
  42c1a0:	mov    eax,0xc
  42c1a5:	jmp    0x42bd69
  42c1aa:	lea    rdi,[rip+0x1c002]        # 0x4481b3
  42c1b1:	mov    ecx,0x6
  42c1b6:	mov    rsi,rbx
  42c1b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c1bb:	jne    0x42c239
  42c1bd:	xor    ebx,ebx
  42c1bf:	test   r12,r12
  42c1c2:	mov    esi,0x1
  42c1c7:	jne    0x42c200
  42c1c9:	mov    ecx,ebx
  42c1cb:	call   0x435530
  42c1d0:	test   eax,eax
  42c1d2:	je     0x42c1e5
  42c1d4:	mov    rax,rbx
  42c1d7:	mov    edx,esi
  42c1d9:	mov    ecx,ebx
  42c1db:	sar    rax,0x5
  42c1df:	shl    edx,cl
  42c1e1:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42c1e5:	add    rbx,0x1
  42c1e9:	cmp    rbx,0x100
  42c1f0:	jne    0x42c1c9
  42c1f2:	jmp    0x42bd67
  42c1f7:	nop    WORD PTR [rax+rax*1+0x0]
  42c200:	mov    ecx,ebx
  42c202:	call   0x435530
  42c207:	test   eax,eax
  42c209:	je     0x42c227
  42c20b:	movzx  edx,BYTE PTR [r12+rbx*1]
  42c210:	mov    rax,rdx
  42c213:	mov    ecx,edx
  42c215:	mov    edx,esi
  42c217:	shr    rax,0x3
  42c21b:	and    ecx,0x1f
  42c21e:	and    eax,0x1c
  42c221:	shl    edx,cl
  42c223:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c227:	add    rbx,0x1
  42c22b:	cmp    rbx,0x100
  42c232:	jne    0x42c200
  42c234:	jmp    0x42bd67
  42c239:	lea    rdi,[rip+0x1bf79]        # 0x4481b9
  42c240:	mov    ecx,0x6
  42c245:	mov    rsi,rbx
  42c248:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c24a:	jne    0x42c2c6
  42c24c:	xor    ebx,ebx
  42c24e:	test   r12,r12
  42c251:	mov    rsi,QWORD PTR [rip+0x28810]        # 0x454a68
  42c258:	mov    edi,0x1
  42c25d:	jne    0x42c290
  42c25f:	mov    ecx,ebx
  42c261:	call   rsi
  42c263:	test   eax,eax
  42c265:	je     0x42c278
  42c267:	mov    rax,rbx
  42c26a:	mov    edx,edi
  42c26c:	mov    ecx,ebx
  42c26e:	sar    rax,0x5
  42c272:	shl    edx,cl
  42c274:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42c278:	add    rbx,0x1
  42c27c:	cmp    rbx,0x100
  42c283:	jne    0x42c25f
  42c285:	jmp    0x42bd67
  42c28a:	nop    WORD PTR [rax+rax*1+0x0]
  42c290:	mov    ecx,ebx
  42c292:	call   rsi
  42c294:	test   eax,eax
  42c296:	je     0x42c2b4
  42c298:	movzx  edx,BYTE PTR [r12+rbx*1]
  42c29d:	mov    rax,rdx
  42c2a0:	mov    ecx,edx
  42c2a2:	mov    edx,edi
  42c2a4:	shr    rax,0x3
  42c2a8:	and    ecx,0x1f
  42c2ab:	and    eax,0x1c
  42c2ae:	shl    edx,cl
  42c2b0:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c2b4:	add    rbx,0x1
  42c2b8:	cmp    rbx,0x100
  42c2bf:	jne    0x42c290
  42c2c1:	jmp    0x42bd67
  42c2c6:	lea    rdi,[rip+0x1bef2]        # 0x4481bf
  42c2cd:	mov    ecx,0x6
  42c2d2:	mov    rsi,rbx
  42c2d5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c2d7:	jne    0x42c356
  42c2d9:	xor    ebx,ebx
  42c2db:	test   r12,r12
  42c2de:	mov    rsi,QWORD PTR [rip+0x2879b]        # 0x454a80
  42c2e5:	mov    edi,0x1
  42c2ea:	jne    0x42c320
  42c2ec:	mov    ecx,ebx
  42c2ee:	call   rsi
  42c2f0:	test   eax,eax
  42c2f2:	je     0x42c305
  42c2f4:	mov    rax,rbx
  42c2f7:	mov    edx,edi
  42c2f9:	mov    ecx,ebx
  42c2fb:	sar    rax,0x5
  42c2ff:	shl    edx,cl
  42c301:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42c305:	add    rbx,0x1
  42c309:	cmp    rbx,0x100
  42c310:	jne    0x42c2ec
  42c312:	jmp    0x42bd67
  42c317:	nop    WORD PTR [rax+rax*1+0x0]
  42c320:	mov    ecx,ebx
  42c322:	call   rsi
  42c324:	test   eax,eax
  42c326:	je     0x42c344
  42c328:	movzx  edx,BYTE PTR [r12+rbx*1]
  42c32d:	mov    rax,rdx
  42c330:	mov    ecx,edx
  42c332:	mov    edx,edi
  42c334:	shr    rax,0x3
  42c338:	and    ecx,0x1f
  42c33b:	and    eax,0x1c
  42c33e:	shl    edx,cl
  42c340:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c344:	add    rbx,0x1
  42c348:	cmp    rbx,0x100
  42c34f:	jne    0x42c320
  42c351:	jmp    0x42bd67
  42c356:	lea    rdi,[rip+0x1be68]        # 0x4481c5
  42c35d:	mov    ecx,0x7
  42c362:	mov    rsi,rbx
  42c365:	mov    eax,0x4
  42c36a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c36c:	seta   cl
  42c36f:	setb   dl
  42c372:	cmp    cl,dl
  42c374:	jne    0x42bd69
  42c37a:	xor    ebx,ebx
  42c37c:	test   r12,r12
  42c37f:	mov    rsi,QWORD PTR [rip+0x2871a]        # 0x454aa0
  42c386:	mov    edi,0x1
  42c38b:	jne    0x42c3b8
  42c38d:	mov    ecx,ebx
  42c38f:	call   rsi
  42c391:	test   eax,eax
  42c393:	je     0x42c3a6
  42c395:	mov    rax,rbx
  42c398:	mov    edx,edi
  42c39a:	mov    ecx,ebx
  42c39c:	sar    rax,0x5
  42c3a0:	shl    edx,cl
  42c3a2:	or     DWORD PTR [rbp+rax*4+0x0],edx
  42c3a6:	add    rbx,0x1
  42c3aa:	cmp    rbx,0x100
  42c3b1:	jne    0x42c38d
  42c3b3:	jmp    0x42bd67
  42c3b8:	mov    ecx,ebx
  42c3ba:	call   rsi
  42c3bc:	test   eax,eax
  42c3be:	je     0x42c3dc
  42c3c0:	movzx  edx,BYTE PTR [r12+rbx*1]
  42c3c5:	mov    rax,rdx
  42c3c8:	mov    ecx,edx
  42c3ca:	mov    edx,edi
  42c3cc:	shr    rax,0x3
  42c3d0:	and    ecx,0x1f
  42c3d3:	and    eax,0x1c
  42c3d6:	shl    edx,cl
  42c3d8:	or     DWORD PTR [rbp+rax*1+0x0],edx
  42c3dc:	add    rbx,0x1
  42c3e0:	cmp    rbx,0x100
  42c3e7:	jne    0x42c3b8
  42c3e9:	jmp    0x42bd67
  42c3ee:	mov    eax,edx
  42c3f0:	shl    eax,cl
  42c3f2:	or     DWORD PTR [rbp+0x4],eax
  42c3f5:	jmp    0x42c03c
  42c3fa:	add    r12,0x1
  42c3fe:	mov    eax,0xffffffd1
  42c403:	mov    r8d,0x1
  42c409:	jmp    0x42c415
  42c40b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c410:	cmp    eax,0x9
  42c413:	jbe    0x42c428
  42c415:	add    eax,0x1
  42c418:	add    r12,0x1
  42c41c:	cmp    eax,0xd0
  42c421:	jne    0x42c410
  42c423:	jmp    0x42bd67
  42c428:	movzx  ecx,BYTE PTR [r12]
  42c42d:	mov    edi,r8d
  42c430:	mov    rdx,rcx
  42c433:	and    ecx,0x1f
  42c436:	shr    rdx,0x3
  42c43a:	shl    edi,cl
  42c43c:	and    edx,0x1c
  42c43f:	or     DWORD PTR [rbp+rdx*1+0x0],edi
  42c443:	jmp    0x42c415
  42c445:	nop
  42c446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c450:	push   r14
  42c452:	push   r13
  42c454:	push   r12
  42c456:	push   rbp
  42c457:	push   rdi
  42c458:	push   rsi
  42c459:	push   rbx
  42c45a:	add    rsp,0xffffffffffffff80
  42c45e:	mov    edi,DWORD PTR [rsp+0xe0]
  42c465:	mov    rsi,rcx
  42c468:	mov    r13,rdx
  42c46b:	mov    ecx,0x20
  42c470:	mov    edx,0x1
  42c475:	mov    r14,r8
  42c478:	mov    rbp,r9
  42c47b:	mov    QWORD PTR [rsp+0x58],0x0
  42c484:	call   0x43a798
  42c489:	test   rax,rax
  42c48c:	mov    rbx,rax
  42c48f:	je     0x42c650
  42c495:	mov    edx,0x1
  42c49a:	mov    ecx,0x50
  42c49f:	call   0x43a798
  42c4a4:	test   rax,rax
  42c4a7:	mov    r12,rax
  42c4aa:	je     0x42c690
  42c4b0:	movzx  edx,BYTE PTR [r12+0x20]
  42c4b6:	mov    eax,edi
  42c4b8:	lea    r9,[r12+0x48]
  42c4bd:	and    eax,0x1
  42c4c0:	lea    r8,[r12+0x18]
  42c4c5:	mov    DWORD PTR [rsp+0x30],0x0
  42c4cd:	mov    QWORD PTR [rsp+0x28],r14
  42c4d2:	mov    rcx,r13
  42c4d5:	and    edx,0xfffffffe
  42c4d8:	or     eax,edx
  42c4da:	mov    rdx,rbx
  42c4dd:	mov    BYTE PTR [r12+0x20],al
  42c4e2:	lea    rax,[rsp+0x58]
  42c4e7:	mov    QWORD PTR [rsp+0x20],rax
  42c4ec:	call   0x42bc90
  42c4f1:	test   eax,eax
  42c4f3:	jne    0x42c6b0
  42c4f9:	movsx  r8,BYTE PTR [rbp+0x0]
  42c4fe:	mov    edx,0x1
  42c503:	test   r8b,r8b
  42c506:	je     0x42c54f
  42c508:	nop    DWORD PTR [rax+rax*1+0x0]
  42c510:	lea    rax,[r8+0x1f]
  42c514:	test   r8,r8
  42c517:	mov    rcx,r8
  42c51a:	mov    r10d,edx
  42c51d:	cmovns rax,r8
  42c521:	sar    rcx,0x3f
  42c525:	add    rbp,0x1
  42c529:	shr    rcx,0x3b
  42c52d:	sar    rax,0x5
  42c531:	add    r8,rcx
  42c534:	and    r8d,0x1f
  42c538:	sub    r8,rcx
  42c53b:	mov    rcx,r8
  42c53e:	movsx  r8,BYTE PTR [rbp+0x0]
  42c543:	shl    r10d,cl
  42c546:	or     DWORD PTR [rbx+rax*4],r10d
  42c54a:	test   r8b,r8b
  42c54d:	jne    0x42c510
  42c54f:	test   dil,dil
  42c552:	jne    0x42c624
  42c558:	cmp    DWORD PTR [rsi+0xac],0x1
  42c55f:	jle    0x42c580
  42c561:	mov    rcx,QWORD PTR [rsi+0x78]
  42c565:	xor    eax,eax
  42c567:	nop    WORD PTR [rax+rax*1+0x0]
  42c570:	mov    edx,DWORD PTR [rcx+rax*1]
  42c573:	and    DWORD PTR [rbx+rax*1],edx
  42c576:	add    rax,0x4
  42c57a:	cmp    rax,0x20
  42c57e:	jne    0x42c570
  42c580:	lea    rbp,[rsi+0x70]
  42c584:	lea    r13,[rsi+0x80]
  42c58b:	lea    r14,[rsp+0x60]
  42c590:	xor    r9d,r9d
  42c593:	xor    r8d,r8d
  42c596:	mov    BYTE PTR [rsp+0x68],0x3
  42c59b:	mov    QWORD PTR [rsp+0x20],r14
  42c5a0:	mov    rdx,r13
  42c5a3:	mov    rcx,rbp
  42c5a6:	mov    QWORD PTR [rsp+0x60],rbx
  42c5ab:	call   0x426840
  42c5b0:	test   rax,rax
  42c5b3:	mov    rdi,rax
  42c5b6:	je     0x42c640
  42c5bc:	cmp    DWORD PTR [rsi+0xac],0x1
  42c5c3:	jle    0x42c670
  42c5c9:	or     BYTE PTR [rsi+0xa8],0x2
  42c5d0:	xor    r9d,r9d
  42c5d3:	xor    r8d,r8d
  42c5d6:	mov    QWORD PTR [rsp+0x20],r14
  42c5db:	mov    rdx,r13
  42c5de:	mov    rcx,rbp
  42c5e1:	mov    BYTE PTR [rsp+0x68],0x6
  42c5e6:	mov    QWORD PTR [rsp+0x60],r12
  42c5eb:	call   0x426840
  42c5f0:	test   rax,rax
  42c5f3:	mov    r9,rax
  42c5f6:	je     0x42c640
  42c5f8:	lea    rax,[rsp+0x70]
  42c5fd:	mov    r8,rdi
  42c600:	mov    rdx,r13
  42c603:	mov    rcx,rbp
  42c606:	mov    BYTE PTR [rsp+0x78],0xa
  42c60b:	mov    QWORD PTR [rsp+0x20],rax
  42c610:	call   0x426840
  42c615:	sub    rsp,0xffffffffffffff80
  42c619:	pop    rbx
  42c61a:	pop    rsi
  42c61b:	pop    rdi
  42c61c:	pop    rbp
  42c61d:	pop    r12
  42c61f:	pop    r13
  42c621:	pop    r14
  42c623:	ret    
  42c624:	lea    rdx,[rbx+0x20]
  42c628:	mov    rax,rbx
  42c62b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c630:	not    DWORD PTR [rax]
  42c632:	add    rax,0x4
  42c636:	cmp    rax,rdx
  42c639:	jne    0x42c630
  42c63b:	jmp    0x42c558
  42c640:	mov    rcx,rbx
  42c643:	call   0x43a748
  42c648:	mov    rcx,r12
  42c64b:	call   0x425860
  42c650:	mov    rax,QWORD PTR [rsp+0xe8]
  42c658:	mov    DWORD PTR [rax],0xc
  42c65e:	xor    eax,eax
  42c660:	sub    rsp,0xffffffffffffff80
  42c664:	pop    rbx
  42c665:	pop    rsi
  42c666:	pop    rdi
  42c667:	pop    rbp
  42c668:	pop    r12
  42c66a:	pop    r13
  42c66c:	pop    r14
  42c66e:	ret    
  42c66f:	nop
  42c670:	mov    rcx,r12
  42c673:	call   0x425860
  42c678:	mov    rax,rdi
  42c67b:	sub    rsp,0xffffffffffffff80
  42c67f:	pop    rbx
  42c680:	pop    rsi
  42c681:	pop    rdi
  42c682:	pop    rbp
  42c683:	pop    r12
  42c685:	pop    r13
  42c687:	pop    r14
  42c689:	ret    
  42c68a:	nop    WORD PTR [rax+rax*1+0x0]
  42c690:	mov    rcx,rbx
  42c693:	call   0x43a748
  42c698:	mov    rax,QWORD PTR [rsp+0xe8]
  42c6a0:	mov    DWORD PTR [rax],0xc
  42c6a6:	xor    eax,eax
  42c6a8:	jmp    0x42c615
  42c6ad:	nop    DWORD PTR [rax]
  42c6b0:	mov    rcx,rbx
  42c6b3:	mov    DWORD PTR [rsp+0x4c],eax
  42c6b7:	call   0x43a748
  42c6bc:	mov    rcx,r12
  42c6bf:	call   0x425860
  42c6c4:	mov    eax,DWORD PTR [rsp+0x4c]
  42c6c8:	mov    rdi,QWORD PTR [rsp+0xe8]
  42c6d0:	mov    DWORD PTR [rdi],eax
  42c6d2:	xor    eax,eax
  42c6d4:	jmp    0x42c615
  42c6d9:	nop    DWORD PTR [rax+0x0]
  42c6e0:	push   r15
  42c6e2:	push   r14
  42c6e4:	push   r13
  42c6e6:	push   r12
  42c6e8:	push   rbp
  42c6e9:	push   rdi
  42c6ea:	push   rsi
  42c6eb:	push   rbx
  42c6ec:	sub    rsp,0xf8
  42c6f3:	mov    rax,QWORD PTR [rcx+0x98]
  42c6fa:	cmp    QWORD PTR [rdx],0x0
  42c6fe:	mov    QWORD PTR [rsp+0x58],rax
  42c703:	mov    rax,QWORD PTR [rcx+0x48]
  42c707:	mov    QWORD PTR [rsp+0x40],rax
  42c70c:	jle    0x42c86c
  42c712:	mov    rax,QWORD PTR [rsp+0x40]
  42c717:	mov    QWORD PTR [rsp+0x60],r8
  42c71c:	mov    r15,rcx
  42c71f:	mov    QWORD PTR [rsp+0x68],rdx
  42c724:	xor    r14d,r14d
  42c727:	shl    rax,0x3
  42c72b:	mov    QWORD PTR [rsp+0x88],rax
  42c733:	lea    rax,[rcx+0xd8]
  42c73a:	mov    QWORD PTR [rsp+0xa8],rax
  42c742:	lea    rax,[rsp+0xd0]
  42c74a:	mov    QWORD PTR [rsp+0x80],rax
  42c752:	lea    rax,[rsp+0xcc]
  42c75a:	mov    QWORD PTR [rsp+0x98],rax
  42c762:	jmp    0x42c776
  42c764:	mov    rax,QWORD PTR [rsp+0x68]
  42c769:	add    r14,0x1
  42c76d:	cmp    r14,QWORD PTR [rax]
  42c770:	jge    0x42c86c
  42c776:	mov    rax,QWORD PTR [rsp+0x60]
  42c77b:	mov    rcx,QWORD PTR [rsp+0x58]
  42c780:	mov    rax,QWORD PTR [rax]
  42c783:	mov    rdi,QWORD PTR [rax+r14*8]
  42c787:	mov    rsi,rdi
  42c78a:	shl    rsi,0x4
  42c78e:	mov    rax,rsi
  42c791:	add    rax,QWORD PTR [rcx]
  42c794:	cmp    BYTE PTR [rax+0x8],0x4
  42c798:	jne    0x42c764
  42c79a:	mov    ebx,DWORD PTR [rax+0x8]
  42c79d:	test   ebx,0x3ff00
  42c7a3:	je     0x42c7f0
  42c7a5:	mov    rdx,QWORD PTR [rsp+0x40]
  42c7aa:	mov    r8d,DWORD PTR [r15+0xa0]
  42c7b1:	shr    ebx,0x8
  42c7b4:	mov    rcx,r15
  42c7b7:	call   0x429220
  42c7bc:	mov    edx,ebx
  42c7be:	and    dx,0x3ff
  42c7c3:	test   bl,0x4
  42c7c6:	je     0x42c884
  42c7cc:	test   al,0x1
  42c7ce:	je     0x42c764
  42c7d0:	and    ebx,0x8
  42c7d3:	jne    0x42c764
  42c7d5:	test   dl,0x20
  42c7d8:	je     0x42c7de
  42c7da:	test   al,0x2
  42c7dc:	je     0x42c764
  42c7de:	and    edx,0x80
  42c7e4:	je     0x42c7f0
  42c7e6:	test   al,0x8
  42c7e8:	je     0x42c764
  42c7ee:	xchg   ax,ax
  42c7f0:	mov    rbx,QWORD PTR [r15+0xc8]
  42c7f7:	mov    r11,QWORD PTR [r15+0x8]
  42c7fb:	mov    rax,QWORD PTR [r15+0x98]
  42c802:	mov    r8,QWORD PTR [rsp+0x40]
  42c807:	mov    rdx,QWORD PTR [rsp+0xa8]
  42c80f:	mov    rcx,rbx
  42c812:	mov    QWORD PTR [rsp+0x48],r11
  42c817:	mov    QWORD PTR [rsp+0x78],rax
  42c81c:	call   0x426690
  42c821:	cmp    rax,0xffffffffffffffff
  42c825:	mov    r11,QWORD PTR [rsp+0x48]
  42c82a:	je     0x42c8a0
  42c82c:	lea    rdx,[rax+rax*4]
  42c830:	mov    rax,QWORD PTR [r15+0xd8]
  42c837:	lea    rax,[rax+rdx*8]
  42c83b:	jmp    0x42c84a
  42c83d:	nop    DWORD PTR [rax]
  42c840:	add    rax,0x28
  42c844:	cmp    BYTE PTR [rax-0x8],0x0
  42c848:	je     0x42c8a0
  42c84a:	cmp    rdi,QWORD PTR [rax]
  42c84d:	jne    0x42c840
  42c84f:	mov    rax,QWORD PTR [rsp+0x68]
  42c854:	add    r14,0x1
  42c858:	mov    DWORD PTR [rsp+0xcc],0x0
  42c863:	cmp    r14,QWORD PTR [rax]
  42c866:	jl     0x42c776
  42c86c:	xor    eax,eax
  42c86e:	xchg   ax,ax
  42c870:	add    rsp,0xf8
  42c877:	pop    rbx
  42c878:	pop    rsi
  42c879:	pop    rdi
  42c87a:	pop    rbp
  42c87b:	pop    r12
  42c87d:	pop    r13
  42c87f:	pop    r14
  42c881:	pop    r15
  42c883:	ret    
  42c884:	and    ebx,0x8
  42c887:	je     0x42c7d5
  42c88d:	test   al,0x1
  42c88f:	jne    0x42c764
  42c895:	jmp    0x42c7d5
  42c89a:	nop    WORD PTR [rax+rax*1+0x0]
  42c8a0:	mov    rax,QWORD PTR [rsp+0x78]
  42c8a5:	cmp    QWORD PTR [r15+0xe8],0x0
  42c8ad:	mov    rdx,QWORD PTR [rax]
  42c8b0:	mov    rax,QWORD PTR [rdx+rsi*1]
  42c8b4:	mov    QWORD PTR [rsp+0x90],rax
  42c8bc:	jle    0x42c84f
  42c8be:	mov    QWORD PTR [rsp+0x50],0x0
  42c8c7:	mov    QWORD PTR [rsp+0x70],rdi
  42c8cc:	mov    r12,r11
  42c8cf:	mov    QWORD PTR [rsp+0xb0],rbx
  42c8d7:	mov    QWORD PTR [rsp+0xb8],r14
  42c8df:	mov    rax,QWORD PTR [r15+0xf8]
  42c8e6:	mov    rcx,QWORD PTR [rsp+0x50]
  42c8eb:	mov    rbx,QWORD PTR [rax+rcx*8]
  42c8ef:	mov    rcx,QWORD PTR [rsp+0x90]
  42c8f7:	mov    rax,QWORD PTR [rbx+0x8]
  42c8fb:	shl    rax,0x4
  42c8ff:	cmp    rcx,QWORD PTR [rdx+rax*1]
  42c903:	je     0x42c930
  42c905:	add    QWORD PTR [rsp+0x50],0x1
  42c90b:	mov    rax,QWORD PTR [rsp+0x50]
  42c910:	cmp    rax,QWORD PTR [r15+0xe8]
  42c917:	jge    0x42cbe5
  42c91d:	mov    rax,QWORD PTR [rsp+0x78]
  42c922:	mov    rdx,QWORD PTR [rax]
  42c925:	jmp    0x42c8df
  42c927:	nop    WORD PTR [rax+rax*1+0x0]
  42c930:	cmp    QWORD PTR [rbx+0x20],0x0
  42c935:	mov    r14,QWORD PTR [rbx]
  42c938:	mov    rbp,QWORD PTR [rsp+0x40]
  42c93d:	jle    0x42cedd
  42c943:	xor    edi,edi
  42c945:	jmp    0x42c9b3
  42c947:	nop    WORD PTR [rax+rax*1+0x0]
  42c950:	lea    r11,[r8+rbp*1]
  42c954:	cmp    r11,QWORD PTR [r15+0x30]
  42c958:	jg     0x42c9d0
  42c95a:	lea    rdx,[r12+r14*1]
  42c95e:	lea    rcx,[r12+rbp*1]
  42c962:	mov    QWORD PTR [rsp+0x48],r11
  42c967:	call   0x43a6c0
  42c96c:	test   eax,eax
  42c96e:	jne    0x42ca0c
  42c974:	mov    r11,QWORD PTR [rsp+0x48]
  42c979:	mov    rbp,r11
  42c97c:	mov    rax,QWORD PTR [rsp+0x40]
  42c981:	mov    r9,QWORD PTR [rsp+0x70]
  42c986:	mov    r8,r13
  42c989:	mov    rdx,rbx
  42c98c:	mov    rcx,r15
  42c98f:	mov    QWORD PTR [rsp+0x20],rax
  42c994:	call   0x42a780
  42c999:	cmp    eax,0x1
  42c99c:	mov    r12,QWORD PTR [r15+0x8]
  42c9a0:	ja     0x42c870
  42c9a6:	add    rdi,0x1
  42c9aa:	cmp    rdi,QWORD PTR [rbx+0x20]
  42c9ae:	mov    r14,rsi
  42c9b1:	jge    0x42ca19
  42c9b3:	mov    rax,QWORD PTR [rbx+0x28]
  42c9b7:	mov    r13,QWORD PTR [rax+rdi*8]
  42c9bb:	mov    rsi,QWORD PTR [r13+0x8]
  42c9bf:	mov    r8,rsi
  42c9c2:	sub    r8,r14
  42c9c5:	test   r8,r8
  42c9c8:	jg     0x42c950
  42c9ca:	add    rbp,r8
  42c9cd:	jmp    0x42c97c
  42c9cf:	nop
  42c9d0:	cmp    r11,QWORD PTR [r15+0x58]
  42c9d4:	mov    QWORD PTR [rsp+0xa0],r8
  42c9dc:	jg     0x42ca0c
  42c9de:	mov    rdx,r11
  42c9e1:	mov    rcx,r15
  42c9e4:	mov    QWORD PTR [rsp+0x48],r11
  42c9e9:	call   0x4257d0
  42c9ee:	test   eax,eax
  42c9f0:	jne    0x42c870
  42c9f6:	mov    r12,QWORD PTR [r15+0x8]
  42c9fa:	mov    r8,QWORD PTR [rsp+0xa0]
  42ca02:	mov    r11,QWORD PTR [rsp+0x48]
  42ca07:	jmp    0x42c95a
  42ca0c:	cmp    QWORD PTR [rbx+0x20],rdi
  42ca10:	jg     0x42c905
  42ca16:	mov    rsi,r14
  42ca19:	xor    eax,eax
  42ca1b:	test   rdi,rdi
  42ca1e:	setg   al
  42ca21:	add    rsi,rax
  42ca24:	mov    rax,QWORD PTR [rsp+0x40]
  42ca29:	cmp    rax,rsi
  42ca2c:	jl     0x42c905
  42ca32:	mov    r13,QWORD PTR [rsp+0x90]
  42ca3a:	mov    r14,rax
  42ca3d:	mov    rax,r15
  42ca40:	mov    r15,rbp
  42ca43:	mov    rbp,rax
  42ca46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ca50:	mov    rax,rsi
  42ca53:	sub    rax,QWORD PTR [rbx]
  42ca56:	test   rax,rax
  42ca59:	jle    0x42ca7c
  42ca5b:	cmp    QWORD PTR [rbp+0x30],r15
  42ca5f:	jle    0x42cbb8
  42ca65:	movzx  ecx,BYTE PTR [r12+rsi*1-0x1]
  42ca6b:	lea    rax,[r15+0x1]
  42ca6f:	cmp    BYTE PTR [r12+r15*1],cl
  42ca73:	jne    0x42cb81
  42ca79:	mov    r15,rax
  42ca7c:	mov    rax,QWORD PTR [rbp+0xb8]
  42ca83:	mov    rax,QWORD PTR [rax+rsi*8]
  42ca87:	test   rax,rax
  42ca8a:	je     0x42cb74
  42ca90:	mov    rcx,QWORD PTR [rax+0x10]
  42ca94:	test   rcx,rcx
  42ca97:	jle    0x42cb74
  42ca9d:	mov    r9,QWORD PTR [rax+0x18]
  42caa1:	mov    rax,QWORD PTR [rsp+0x78]
  42caa6:	xor    edx,edx
  42caa8:	mov    r8,QWORD PTR [rax]
  42caab:	jmp    0x42cabd
  42caad:	nop    DWORD PTR [rax]
  42cab0:	add    rdx,0x1
  42cab4:	cmp    rdx,rcx
  42cab7:	je     0x42cb74
  42cabd:	mov    rdi,QWORD PTR [r9+rdx*8]
  42cac1:	mov    rax,rdi
  42cac4:	shl    rax,0x4
  42cac8:	add    rax,r8
  42cacb:	cmp    BYTE PTR [rax+0x8],0x9
  42cacf:	jne    0x42cab0
  42cad1:	cmp    r13,QWORD PTR [rax]
  42cad4:	jne    0x42cab0
  42cad6:	cmp    rdi,0xffffffffffffffff
  42cada:	je     0x42cb74
  42cae0:	mov    rdx,QWORD PTR [rbx+0x10]
  42cae4:	mov    r9,QWORD PTR [rbx]
  42cae7:	test   rdx,rdx
  42caea:	je     0x42cb89
  42caf0:	mov    r8,QWORD PTR [rbx+0x8]
  42caf4:	mov    rcx,rbp
  42caf7:	mov    DWORD PTR [rsp+0x30],0x9
  42caff:	mov    QWORD PTR [rsp+0x28],rsi
  42cb04:	mov    QWORD PTR [rsp+0x20],rdi
  42cb09:	call   0x429ee0
  42cb0e:	cmp    eax,0x1
  42cb11:	je     0x42cb74
  42cb13:	test   eax,eax
  42cb15:	jne    0x42c870
  42cb1b:	mov    rax,QWORD PTR [rbx+0x20]
  42cb1f:	cmp    rax,QWORD PTR [rbx+0x18]
  42cb23:	je     0x42cea7
  42cb29:	mov    edx,0x28
  42cb2e:	mov    ecx,0x1
  42cb33:	call   0x43a798
  42cb38:	test   rax,rax
  42cb3b:	mov    r8,rax
  42cb3e:	je     0x42cbdb
  42cb44:	mov    rax,QWORD PTR [rbx+0x20]
  42cb48:	mov    rdx,QWORD PTR [rbx+0x28]
  42cb4c:	mov    rcx,rbp
  42cb4f:	mov    r9,QWORD PTR [rsp+0x70]
  42cb54:	mov    QWORD PTR [rdx+rax*8],r8
  42cb58:	add    rax,0x1
  42cb5c:	mov    QWORD PTR [r8],rdi
  42cb5f:	mov    QWORD PTR [r8+0x8],rsi
  42cb63:	mov    rdx,rbx
  42cb66:	mov    QWORD PTR [rbx+0x20],rax
  42cb6a:	mov    QWORD PTR [rsp+0x20],r14
  42cb6f:	call   0x42a780
  42cb74:	add    rsi,0x1
  42cb78:	cmp    r14,rsi
  42cb7b:	jge    0x42ca50
  42cb81:	mov    r15,rbp
  42cb84:	jmp    0x42c905
  42cb89:	mov    rdx,rsi
  42cb8c:	mov    ecx,0x18
  42cb91:	mov    QWORD PTR [rsp+0x48],r9
  42cb96:	sub    rdx,r9
  42cb99:	add    rdx,0x1
  42cb9d:	call   0x43a798
  42cba2:	test   rax,rax
  42cba5:	mov    QWORD PTR [rbx+0x10],rax
  42cba9:	je     0x42cbdb
  42cbab:	mov    rdx,rax
  42cbae:	mov    r9,QWORD PTR [rsp+0x48]
  42cbb3:	jmp    0x42caf0
  42cbb8:	cmp    QWORD PTR [rbp+0x58],r15
  42cbbc:	jle    0x42cb81
  42cbbe:	lea    edx,[r15+0x1]
  42cbc2:	mov    rcx,rbp
  42cbc5:	call   0x4256e0
  42cbca:	test   eax,eax
  42cbcc:	jne    0x42c870
  42cbd2:	mov    r12,QWORD PTR [rbp+0x8]
  42cbd6:	jmp    0x42ca65
  42cbdb:	mov    eax,0xc
  42cbe0:	jmp    0x42c870
  42cbe5:	mov    rbx,QWORD PTR [rsp+0xb0]
  42cbed:	cmp    rbx,QWORD PTR [r15+0xc8]
  42cbf4:	mov    rdi,QWORD PTR [rsp+0x70]
  42cbf9:	mov    r14,QWORD PTR [rsp+0xb8]
  42cc01:	mov    DWORD PTR [rsp+0xcc],0x0
  42cc0c:	jge    0x42c764
  42cc12:	lea    rax,[rdi+rdi*2]
  42cc16:	lea    rsi,[rbx+rbx*4]
  42cc1a:	mov    r13,QWORD PTR [rsp+0x58]
  42cc1f:	mov    r12,QWORD PTR [rsp+0x40]
  42cc24:	mov    QWORD PTR [rsp+0xb0],r14
  42cc2c:	shl    rax,0x3
  42cc30:	shl    rsi,0x3
  42cc34:	mov    QWORD PTR [rsp+0xa0],rax
  42cc3c:	lea    rax,[rdi*8+0x0]
  42cc44:	mov    QWORD PTR [rsp+0x90],rax
  42cc4c:	jmp    0x42cc65
  42cc4e:	xchg   ax,ax
  42cc50:	add    rbx,0x1
  42cc54:	add    rsi,0x28
  42cc58:	cmp    rbx,QWORD PTR [r15+0xc8]
  42cc5f:	jge    0x42ce21
  42cc65:	mov    rax,rsi
  42cc68:	add    rax,QWORD PTR [r15+0xd8]
  42cc6f:	cmp    rdi,QWORD PTR [rax]
  42cc72:	jne    0x42cc50
  42cc74:	cmp    r12,QWORD PTR [rax+0x8]
  42cc78:	jne    0x42cc50
  42cc7a:	mov    rbp,QWORD PTR [rax+0x18]
  42cc7e:	mov    rax,QWORD PTR [rax+0x10]
  42cc82:	mov    rcx,rbp
  42cc85:	sub    rcx,rax
  42cc88:	mov    QWORD PTR [rsp+0x48],rcx
  42cc8d:	jne    0x42ce00
  42cc93:	mov    rcx,QWORD PTR [rsp+0xa0]
  42cc9b:	mov    rdx,QWORD PTR [r13+0x28]
  42cc9f:	mov    rdx,QWORD PTR [rdx+rcx*1+0x10]
  42cca4:	mov    rdx,QWORD PTR [rdx]
  42cca7:	lea    rcx,[rdx+rdx*2]
  42ccab:	mov    rdx,QWORD PTR [r13+0x30]
  42ccaf:	lea    r14,[rdx+rcx*8]
  42ccb3:	add    rbp,r12
  42ccb6:	mov    r8d,DWORD PTR [r15+0xa0]
  42ccbd:	mov    rcx,r15
  42ccc0:	sub    rbp,rax
  42ccc3:	lea    rdx,[rbp-0x1]
  42ccc7:	call   0x429220
  42cccc:	mov    rcx,QWORD PTR [rsp+0x88]
  42ccd4:	mov    r9d,eax
  42ccd7:	mov    rax,QWORD PTR [r15+0xb8]
  42ccde:	lea    r11,[rbp*8+0x0]
  42cce6:	lea    r10,[rax+r11*1]
  42ccea:	mov    rax,QWORD PTR [rax+rcx*1]
  42ccee:	mov    rdx,QWORD PTR [r10]
  42ccf1:	test   rax,rax
  42ccf4:	je     0x42ce80
  42ccfa:	mov    rax,QWORD PTR [rax+0x10]
  42ccfe:	mov    QWORD PTR [rsp+0x78],rax
  42cd03:	test   rdx,rdx
  42cd06:	je     0x42ce30
  42cd0c:	mov    rdx,QWORD PTR [rdx+0x50]
  42cd10:	mov    rcx,QWORD PTR [rsp+0x80]
  42cd18:	mov    r8,r14
  42cd1b:	mov    QWORD PTR [rsp+0x70],r11
  42cd20:	mov    DWORD PTR [rsp+0x50],r9d
  42cd25:	call   0x427830
  42cd2a:	test   eax,eax
  42cd2c:	mov    DWORD PTR [rsp+0xcc],eax
  42cd33:	mov    r9d,DWORD PTR [rsp+0x50]
  42cd38:	mov    r11,QWORD PTR [rsp+0x70]
  42cd3d:	jne    0x42ce8e
  42cd43:	add    r11,QWORD PTR [r15+0xb8]
  42cd4a:	mov    r8,QWORD PTR [rsp+0x80]
  42cd52:	mov    rdx,r13
  42cd55:	mov    rcx,QWORD PTR [rsp+0x98]
  42cd5d:	mov    QWORD PTR [rsp+0x50],r11
  42cd62:	call   0x4279c0
  42cd67:	mov    r11,QWORD PTR [rsp+0x50]
  42cd6c:	mov    QWORD PTR [r11],rax
  42cd6f:	mov    rcx,QWORD PTR [rsp+0xe0]
  42cd77:	call   0x43a748
  42cd7c:	mov    rdx,QWORD PTR [r15+0xb8]
  42cd83:	cmp    QWORD PTR [rdx+rbp*8],0x0
  42cd88:	je     0x42ce62
  42cd8e:	cmp    QWORD PTR [rsp+0x48],0x0
  42cd94:	jne    0x42cc50
  42cd9a:	mov    rax,QWORD PTR [rsp+0x88]
  42cda2:	mov    rcx,QWORD PTR [rsp+0x78]
  42cda7:	mov    rax,QWORD PTR [rdx+rax*1]
  42cdab:	cmp    QWORD PTR [rax+0x10],rcx
  42cdaf:	jle    0x42cc50
  42cdb5:	lea    rbp,[r14+0x8]
  42cdb9:	add    r14,0x10
  42cdbd:	mov    r9,r12
  42cdc0:	mov    r8,r14
  42cdc3:	mov    rcx,r15
  42cdc6:	mov    rdx,rbp
  42cdc9:	call   0x426c60
  42cdce:	test   eax,eax
  42cdd0:	mov    DWORD PTR [rsp+0xcc],eax
  42cdd7:	jne    0x42c870
  42cddd:	mov    r8,r14
  42cde0:	mov    rdx,rbp
  42cde3:	mov    rcx,r15
  42cde6:	call   0x42c6e0
  42cdeb:	test   eax,eax
  42cded:	mov    DWORD PTR [rsp+0xcc],eax
  42cdf4:	je     0x42cc50
  42cdfa:	jmp    0x42c870
  42cdff:	nop
  42ce00:	mov    rcx,QWORD PTR [rsp+0x90]
  42ce08:	mov    rdx,QWORD PTR [r13+0x18]
  42ce0c:	mov    rdx,QWORD PTR [rdx+rcx*1]
  42ce10:	lea    rcx,[rdx+rdx*2]
  42ce14:	mov    rdx,QWORD PTR [r13+0x30]
  42ce18:	lea    r14,[rdx+rcx*8]
  42ce1c:	jmp    0x42ccb3
  42ce21:	mov    r14,QWORD PTR [rsp+0xb0]
  42ce29:	jmp    0x42c764
  42ce2e:	xchg   ax,ax
  42ce30:	mov    rcx,QWORD PTR [rsp+0x98]
  42ce38:	mov    rdx,r13
  42ce3b:	mov    r8,r14
  42ce3e:	mov    QWORD PTR [rsp+0x50],r10
  42ce43:	call   0x4279c0
  42ce48:	mov    r10,QWORD PTR [rsp+0x50]
  42ce4d:	mov    QWORD PTR [r10],rax
  42ce50:	mov    rdx,QWORD PTR [r15+0xb8]
  42ce57:	cmp    QWORD PTR [rdx+rbp*8],0x0
  42ce5c:	jne    0x42cd8e
  42ce62:	mov    eax,DWORD PTR [rsp+0xcc]
  42ce69:	test   eax,eax
  42ce6b:	je     0x42cd8e
  42ce71:	jmp    0x42c870
  42ce76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce80:	mov    QWORD PTR [rsp+0x78],0x0
  42ce89:	jmp    0x42cd03
  42ce8e:	mov    rcx,QWORD PTR [rsp+0xe0]
  42ce96:	call   0x43a748
  42ce9b:	mov    eax,DWORD PTR [rsp+0xcc]
  42cea2:	jmp    0x42c870
  42cea7:	lea    r8,[rax+rax*1+0x1]
  42ceac:	mov    rcx,QWORD PTR [rbx+0x28]
  42ceb0:	lea    rdx,[r8*8+0x0]
  42ceb8:	mov    QWORD PTR [rsp+0x48],r8
  42cebd:	call   0x43a680
  42cec2:	test   rax,rax
  42cec5:	je     0x42cbdb
  42cecb:	mov    r8,QWORD PTR [rsp+0x48]
  42ced0:	mov    QWORD PTR [rbx+0x28],rax
  42ced4:	mov    QWORD PTR [rbx+0x18],r8
  42ced8:	jmp    0x42cb29
  42cedd:	mov    rsi,r14
  42cee0:	jmp    0x42ca24
  42cee5:	nop
  42cee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cef0:	push   r14
  42cef2:	push   r13
  42cef4:	push   r12
  42cef6:	push   rbp
  42cef7:	push   rdi
  42cef8:	push   rsi
  42cef9:	push   rbx
  42cefa:	sub    rsp,0x50
  42cefe:	mov    rdi,QWORD PTR [rdx+0x48]
  42cf02:	cmp    rdi,QWORD PTR [rdx+0xc0]
  42cf09:	mov    r12,rcx
  42cf0c:	mov    rbx,rdx
  42cf0f:	mov    rbp,QWORD PTR [rdx+0x98]
  42cf16:	jle    0x42cf50
  42cf18:	mov    rax,QWORD PTR [rdx+0xb8]
  42cf1f:	mov    QWORD PTR [rax+rdi*8],r8
  42cf23:	mov    QWORD PTR [rdx+0xc0],rdi
  42cf2a:	mov    eax,DWORD PTR [rbp+0x98]
  42cf30:	mov    rsi,r8
  42cf33:	test   eax,eax
  42cf35:	jne    0x42d040
  42cf3b:	mov    rax,rsi
  42cf3e:	add    rsp,0x50
  42cf42:	pop    rbx
  42cf43:	pop    rsi
  42cf44:	pop    rdi
  42cf45:	pop    rbp
  42cf46:	pop    r12
  42cf48:	pop    r13
  42cf4a:	pop    r14
  42cf4c:	ret    
  42cf4d:	nop    DWORD PTR [rax]
  42cf50:	lea    rsi,[rdi*8+0x0]
  42cf58:	mov    r13,rsi
  42cf5b:	add    r13,QWORD PTR [rdx+0xb8]
  42cf62:	mov    rax,QWORD PTR [r13+0x0]
  42cf66:	test   rax,rax
  42cf69:	je     0x42d035
  42cf6f:	test   r8,r8
  42cf72:	mov    rax,QWORD PTR [rax+0x50]
  42cf76:	je     0x42cff2
  42cf78:	mov    r13,QWORD PTR [r8+0x50]
  42cf7c:	lea    r14,[rsp+0x30]
  42cf81:	mov    r8,rax
  42cf84:	mov    rcx,r14
  42cf87:	mov    rdx,r13
  42cf8a:	call   0x427830
  42cf8f:	test   eax,eax
  42cf91:	mov    DWORD PTR [r12],eax
  42cf95:	jne    0x42d0a0
  42cf9b:	mov    rax,QWORD PTR [rbx+0x48]
  42cf9f:	mov    r8d,DWORD PTR [rbx+0xa0]
  42cfa6:	mov    rcx,rbx
  42cfa9:	lea    rdx,[rax-0x1]
  42cfad:	call   0x429220
  42cfb2:	add    rsi,QWORD PTR [rbx+0xb8]
  42cfb9:	mov    r8,r14
  42cfbc:	mov    r9d,eax
  42cfbf:	mov    rdx,rbp
  42cfc2:	mov    rcx,r12
  42cfc5:	call   0x4279c0
  42cfca:	test   r13,r13
  42cfcd:	mov    r8,rax
  42cfd0:	mov    QWORD PTR [rsi],rax
  42cfd3:	je     0x42cf2a
  42cfd9:	mov    rcx,QWORD PTR [rsp+0x40]
  42cfde:	mov    QWORD PTR [rsp+0x28],rax
  42cfe3:	call   0x43a748
  42cfe8:	mov    r8,QWORD PTR [rsp+0x28]
  42cfed:	jmp    0x42cf2a
  42cff2:	mov    rdx,QWORD PTR [rax]
  42cff5:	mov    r8d,DWORD PTR [rbx+0xa0]
  42cffc:	mov    rcx,rbx
  42cfff:	mov    QWORD PTR [rsp+0x30],rdx
  42d004:	mov    rdx,QWORD PTR [rax+0x8]
  42d008:	mov    QWORD PTR [rsp+0x38],rdx
  42d00d:	mov    rax,QWORD PTR [rax+0x10]
  42d011:	lea    rdx,[rdi-0x1]
  42d015:	mov    QWORD PTR [rsp+0x40],rax
  42d01a:	call   0x429220
  42d01f:	lea    r8,[rsp+0x30]
  42d024:	mov    r9d,eax
  42d027:	mov    rdx,rbp
  42d02a:	mov    rcx,r12
  42d02d:	call   0x4279c0
  42d032:	mov    r8,rax
  42d035:	mov    QWORD PTR [r13+0x0],r8
  42d039:	jmp    0x42cf2a
  42d03e:	xchg   ax,ax
  42d040:	test   r8,r8
  42d043:	je     0x42d0a0
  42d045:	lea    rbp,[r8+0x10]
  42d049:	lea    r13,[r8+0x18]
  42d04d:	mov    r9,rdi
  42d050:	mov    rcx,rbx
  42d053:	mov    r8,r13
  42d056:	mov    rdx,rbp
  42d059:	call   0x426c60
  42d05e:	test   eax,eax
  42d060:	mov    DWORD PTR [r12],eax
  42d064:	jne    0x42d0a0
  42d066:	test   BYTE PTR [rsi+0x68],0x40
  42d06a:	je     0x42cf3b
  42d070:	mov    r8,r13
  42d073:	mov    rdx,rbp
  42d076:	mov    rcx,rbx
  42d079:	call   0x42c6e0
  42d07e:	test   eax,eax
  42d080:	mov    DWORD PTR [r12],eax
  42d084:	jne    0x42d0a0
  42d086:	mov    rax,QWORD PTR [rbx+0xb8]
  42d08d:	mov    rsi,QWORD PTR [rax+rdi*8]
  42d091:	jmp    0x42cf3b
  42d096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d0a0:	xor    esi,esi
  42d0a2:	jmp    0x42cf3b
  42d0a7:	nop    WORD PTR [rax+rax*1+0x0]
  42d0b0:	push   r15
  42d0b2:	push   r14
  42d0b4:	push   r13
  42d0b6:	push   r12
  42d0b8:	push   rbp
  42d0b9:	push   rdi
  42d0ba:	push   rsi
  42d0bb:	push   rbx
  42d0bc:	sub    rsp,0x228
  42d0c3:	mov    rax,QWORD PTR [rcx]
  42d0c6:	lea    r15,[rsp+0x120]
  42d0ce:	mov    QWORD PTR [rsp+0x270],rcx
  42d0d6:	mov    ecx,0x20
  42d0db:	mov    QWORD PTR [rsp+0x280],r8
  42d0e3:	mov    QWORD PTR [rsp+0x278],rdx
  42d0eb:	mov    rsi,rax
  42d0ee:	mov    QWORD PTR [rsp+0x50],rax
  42d0f3:	mov    rdi,r15
  42d0f6:	xor    eax,eax
  42d0f8:	mov    QWORD PTR [rsp+0x288],r9
  42d100:	mov    r8,QWORD PTR [rsp+0x2a0]
  42d108:	rep stos QWORD PTR es:[rdi],rax
  42d10b:	mov    QWORD PTR [rsp+0x1b8],rsi
  42d113:	mov    rsi,QWORD PTR [rsp+0x270]
  42d11b:	mov    rsi,QWORD PTR [rsi+0x20]
  42d11f:	test   rsi,rsi
  42d122:	mov    QWORD PTR [rsp+0x80],rsi
  42d12a:	je     0x42d161
  42d12c:	mov    rdi,QWORD PTR [rsp+0x270]
  42d134:	movzx  edx,BYTE PTR [rdi+0x38]
  42d138:	mov    rdi,QWORD PTR [rsp+0x290]
  42d140:	cmp    r9,rdi
  42d143:	je     0x42e17d
  42d149:	test   dl,0x8
  42d14c:	je     0x42e17d
  42d152:	and    edx,0x1
  42d155:	cmove  rax,rsi
  42d159:	mov    QWORD PTR [rsp+0x80],rax
  42d161:	mov    rax,QWORD PTR [rsp+0x270]
  42d169:	mov    rax,QWORD PTR [rax+0x28]
  42d16d:	mov    QWORD PTR [rsp+0x90],rax
  42d175:	mov    rax,QWORD PTR [rsp+0x270]
  42d17d:	mov    rdx,QWORD PTR [rax+0x30]
  42d181:	cmp    rdx,r8
  42d184:	jae    0x42d652
  42d18a:	mov    rax,QWORD PTR [rsp+0x270]
  42d192:	not    rdx
  42d195:	add    rdx,r8
  42d198:	mov    QWORD PTR [rsp+0xc8],rdx
  42d1a0:	cmp    QWORD PTR [rax+0x10],0x0
  42d1a5:	je     0x42d673
  42d1ab:	mov    rax,QWORD PTR [rsp+0x50]
  42d1b0:	mov    rax,QWORD PTR [rax+0x48]
  42d1b4:	test   rax,rax
  42d1b7:	je     0x42d673
  42d1bd:	mov    rsi,QWORD PTR [rsp+0x50]
  42d1c2:	mov    rcx,QWORD PTR [rsi+0x50]
  42d1c6:	test   rcx,rcx
  42d1c9:	je     0x42d673
  42d1cf:	mov    rsi,QWORD PTR [rsp+0x50]
  42d1d4:	mov    r9,QWORD PTR [rsi+0x58]
  42d1d8:	test   r9,r9
  42d1db:	je     0x42d673
  42d1e1:	cmp    QWORD PTR [rsi+0x60],0x0
  42d1e6:	je     0x42d673
  42d1ec:	cmp    QWORD PTR [rax+0x10],0x0
  42d1f1:	jne    0x42d250
  42d1f3:	cmp    QWORD PTR [rcx+0x10],0x0
  42d1f8:	jne    0x42d250
  42d1fa:	cmp    QWORD PTR [r9+0x10],0x0
  42d1ff:	je     0x42d20f
  42d201:	mov    rax,QWORD PTR [rsp+0x270]
  42d209:	cmp    BYTE PTR [rax+0x38],0x0
  42d20d:	js     0x42d250
  42d20f:	cmp    QWORD PTR [rsp+0x288],0x0
  42d218:	je     0x42d22e
  42d21a:	cmp    QWORD PTR [rsp+0x290],0x0
  42d223:	mov    eax,0x1
  42d228:	jne    0x42d678
  42d22e:	mov    QWORD PTR [rsp+0x290],0x0
  42d23a:	mov    QWORD PTR [rsp+0x288],0x0
  42d246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d250:	sub    r8,rdx
  42d253:	mov    DWORD PTR [rsp+0x6c],0x1
  42d25b:	mov    QWORD PTR [rsp+0xb8],r8
  42d263:	je     0x42d68c
  42d269:	mov    rsi,QWORD PTR [rsp+0x50]
  42d26e:	mov    rax,QWORD PTR [rsp+0x270]
  42d276:	mov    rdi,QWORD PTR [rsi+0x10]
  42d27a:	mov    eax,DWORD PTR [rax+0x18]
  42d27d:	movsxd r8,DWORD PTR [rsi+0xac]
  42d284:	lea    rcx,[rdi+0x1]
  42d288:	mov    QWORD PTR [rsp+0x30],rdi
  42d28d:	mov    rdi,QWORD PTR [rsp+0x278]
  42d295:	shr    eax,0x16
  42d298:	and    eax,0x1
  42d29b:	mov    DWORD PTR [rsp+0x1b0],r8d
  42d2a3:	mov    QWORD PTR [rsp+0x120],rdi
  42d2ab:	mov    rdi,QWORD PTR [rsp+0x280]
  42d2b3:	mov    BYTE PTR [rsp+0x1a8],al
  42d2ba:	mov    QWORD PTR [rsp+0x178],rdi
  42d2c2:	mov    QWORD PTR [rsp+0x170],rdi
  42d2ca:	mov    rdi,QWORD PTR [rsp+0x90]
  42d2d2:	test   rdi,rdi
  42d2d5:	mov    QWORD PTR [rsp+0x198],rdi
  42d2dd:	setne  BYTE PTR [rsp+0xb5]
  42d2e5:	movzx  edi,BYTE PTR [rsp+0xb5]
  42d2ed:	or     eax,edi
  42d2ef:	mov    BYTE PTR [rsp+0x1ab],al
  42d2f6:	movzx  eax,BYTE PTR [rsi+0xa8]
  42d2fd:	mov    edx,eax
  42d2ff:	shr    al,0x3
  42d302:	and    eax,0x1
  42d305:	shr    dl,0x2
  42d308:	mov    BYTE PTR [rsp+0x1aa],al
  42d30f:	mov    rax,QWORD PTR [rsp+0x280]
  42d317:	and    edx,0x1
  42d31a:	mov    BYTE PTR [rsp+0x1a9],dl
  42d321:	cmp    rcx,r8
  42d324:	lea    rdx,[rax+0x1]
  42d328:	mov    QWORD PTR [rsp+0x188],rax
  42d330:	mov    QWORD PTR [rsp+0x180],rax
  42d338:	mov    rax,r8
  42d33b:	cmovge rax,rcx
  42d33f:	mov    rcx,r15
  42d342:	cmp    rdx,rax
  42d345:	cmovg  rdx,rax
  42d349:	call   0x424bd0
  42d34e:	test   eax,eax
  42d350:	mov    DWORD PTR [rsp+0xb0],eax
  42d357:	jne    0x42e3c7
  42d35d:	mov    rsi,QWORD PTR [rsp+0x50]
  42d362:	mov    rax,rsi
  42d365:	add    rax,0xb0
  42d36b:	mov    QWORD PTR [rsp+0x1a0],rax
  42d373:	movzx  eax,BYTE PTR [rsi+0xa8]
  42d37a:	mov    BYTE PTR [rsp+0x30],al
  42d37e:	shr    al,0x4
  42d381:	and    eax,0x1
  42d384:	cmp    BYTE PTR [rsp+0x1ab],0x0
  42d38c:	mov    BYTE PTR [rsp+0x1ae],al
  42d393:	jne    0x42d3bb
  42d395:	mov    rsi,QWORD PTR [rsp+0x50]
  42d39a:	mov    rax,QWORD PTR [rsp+0x278]
  42d3a2:	cmp    DWORD PTR [rsi+0xac],0x1
  42d3a9:	mov    QWORD PTR [rsp+0x128],rax
  42d3b1:	mov    rax,QWORD PTR [rsp+0x280]
  42d3b9:	jle    0x42d3bd
  42d3bb:	xor    eax,eax
  42d3bd:	mov    QWORD PTR [rsp+0x150],rax
  42d3c5:	mov    QWORD PTR [rsp+0x158],rax
  42d3cd:	mov    rax,QWORD PTR [rsp+0x298]
  42d3d5:	mov    QWORD PTR [rsp+0x188],rax
  42d3dd:	mov    QWORD PTR [rsp+0x180],rax
  42d3e5:	mov    rax,QWORD PTR [rsp+0x270]
  42d3ed:	movzx  eax,BYTE PTR [rax+0x38]
  42d3f1:	mov    BYTE PTR [rsp+0x30],al
  42d3f5:	shr    al,0x7
  42d3f8:	mov    BYTE PTR [rsp+0x1ad],al
  42d3ff:	mov    rax,QWORD PTR [rsp+0x50]
  42d404:	mov    rsi,QWORD PTR [rax+0x98]
  42d40b:	mov    eax,DWORD PTR [rsp+0x2b0]
  42d412:	mov    QWORD PTR [rsp+0x1c8],0xffffffffffffffff
  42d41e:	lea    rbx,[rsi+rsi*1]
  42d422:	mov    DWORD PTR [rsp+0x1c0],eax
  42d429:	test   rbx,rbx
  42d42c:	jle    0x42d482
  42d42e:	movabs rax,0x666666666666666
  42d438:	cmp    rbx,rax
  42d43b:	jg     0x42e745
  42d441:	lea    rcx,[rbx+rsi*8]
  42d445:	shl    rsi,0x4
  42d449:	shl    rcx,0x3
  42d44d:	call   0x423ec0
  42d452:	mov    rcx,rsi
  42d455:	mov    QWORD PTR [rsp+0x1f8],rax
  42d45d:	call   0x423ec0
  42d462:	test   rax,rax
  42d465:	mov    QWORD PTR [rsp+0x218],rax
  42d46d:	je     0x42e745
  42d473:	cmp    QWORD PTR [rsp+0x1f8],0x0
  42d47c:	je     0x42e745
  42d482:	cmp    QWORD PTR [rsp+0xb8],0x1
  42d48b:	mov    QWORD PTR [rsp+0x1f0],rbx
  42d493:	mov    DWORD PTR [rsp+0x200],0x1
  42d49e:	mov    QWORD PTR [rsp+0x210],rbx
  42d4a6:	jbe    0x42e696
  42d4ac:	mov    rax,QWORD PTR [rsp+0x160]
  42d4b4:	movabs rdx,0x1ffffffffffffffe
  42d4be:	cmp    rax,rdx
  42d4c1:	ja     0x42e547
  42d4c7:	lea    rcx,[rax*8+0x8]
  42d4cf:	call   0x423ec0
  42d4d4:	test   rax,rax
  42d4d7:	mov    QWORD PTR [rsp+0x1d8],rax
  42d4df:	je     0x42e85b
  42d4e5:	mov    rax,QWORD PTR [rsp+0x288]
  42d4ed:	mov    QWORD PTR [rsp+0xd8],rax
  42d4f5:	mov    eax,DWORD PTR [rsp+0x2b0]
  42d4fc:	and    eax,0x1
  42d4ff:	cmp    eax,0x1
  42d502:	sbb    eax,eax
  42d504:	and    eax,0x2
  42d507:	add    eax,0x4
  42d50a:	mov    DWORD PTR [rsp+0x190],eax
  42d511:	mov    rax,QWORD PTR [rsp+0x290]
  42d519:	cmp    QWORD PTR [rsp+0x288],rax
  42d521:	setle  al
  42d524:	movzx  eax,al
  42d527:	lea    eax,[rax+rax*1-0x1]
  42d52b:	mov    DWORD PTR [rsp+0xc4],eax
  42d532:	mov    rax,QWORD PTR [rsp+0x288]
  42d53a:	cmp    QWORD PTR [rsp+0x290],rax
  42d542:	cmovle rax,QWORD PTR [rsp+0x290]
  42d54b:	mov    QWORD PTR [rsp+0xa8],rax
  42d553:	mov    rax,QWORD PTR [rsp+0x288]
  42d55b:	cmovge rax,QWORD PTR [rsp+0x290]
  42d564:	mov    QWORD PTR [rsp+0x88],rax
  42d56c:	mov    rax,QWORD PTR [rsp+0x50]
  42d571:	cmp    DWORD PTR [rax+0xac],0x1
  42d578:	sete   BYTE PTR [rsp+0xb7]
  42d580:	cmp    QWORD PTR [rsp+0x80],0x0
  42d589:	movzx  eax,BYTE PTR [rsp+0xb7]
  42d591:	je     0x42e7dc
  42d597:	test   al,al
  42d599:	mov    ecx,0x4
  42d59e:	je     0x42e554
  42d5a4:	mov    rax,QWORD PTR [rsp+0x290]
  42d5ac:	cmp    QWORD PTR [rsp+0x288],rax
  42d5b4:	movzx  edx,BYTE PTR [rsp+0xb5]
  42d5bc:	setle  al
  42d5bf:	movzx  eax,al
  42d5c2:	or     edx,ecx
  42d5c4:	add    eax,eax
  42d5c6:	or     eax,edx
  42d5c8:	mov    rsi,QWORD PTR [rsp+0x88]
  42d5d0:	cmp    QWORD PTR [rsp+0x288],rsi
  42d5d8:	jg     0x42e0d0
  42d5de:	mov    rsi,QWORD PTR [rsp+0xa8]
  42d5e6:	cmp    QWORD PTR [rsp+0x288],rsi
  42d5ee:	jl     0x42e0d0
  42d5f4:	sub    eax,0x4
  42d5f7:	mov    rbx,QWORD PTR [rsp+0x288]
  42d5ff:	mov    DWORD PTR [rsp+0xc0],eax
  42d606:	lea    rax,[rsp+0xe0]
  42d60e:	mov    QWORD PTR [rsp+0x70],rax
  42d613:	lea    rax,[rsp+0xd0]
  42d61b:	mov    QWORD PTR [rsp+0x38],rax
  42d620:	lea    rax,[rsp+0xd4]
  42d628:	mov    QWORD PTR [rsp+0x98],rax
  42d630:	mov    eax,DWORD PTR [rsp+0xc0]
  42d637:	cmp    eax,0x4
  42d63a:	ja     0x42e5a0
  42d640:	mov    edx,eax
  42d642:	lea    rax,[rip+0x1ab97]        # 0x4481e0
  42d649:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42d64d:	add    rax,rdx
  42d650:	jmp    rax
  42d652:	mov    rax,QWORD PTR [rsp+0x270]
  42d65a:	xor    edx,edx
  42d65c:	mov    QWORD PTR [rsp+0xc8],0x0
  42d668:	cmp    QWORD PTR [rax+0x10],0x0
  42d66d:	jne    0x42d1ab
  42d673:	mov    eax,0x1
  42d678:	add    rsp,0x228
  42d67f:	pop    rbx
  42d680:	pop    rsi
  42d681:	pop    rdi
  42d682:	pop    rbp
  42d683:	pop    r12
  42d685:	pop    r13
  42d687:	pop    r14
  42d689:	pop    r15
  42d68b:	ret    
  42d68c:	mov    rax,QWORD PTR [rsp+0x50]
  42d691:	cmp    QWORD PTR [rax+0x98],0x0
  42d699:	setne  al
  42d69c:	movzx  eax,al
  42d69f:	mov    DWORD PTR [rsp+0x6c],eax
  42d6a3:	jmp    0x42d269
  42d6a8:	cmp    QWORD PTR [rsp+0x88],rbx
  42d6b0:	jle    0x42d71f
  42d6b2:	mov    rax,QWORD PTR [rsp+0x278]
  42d6ba:	mov    rsi,QWORD PTR [rsp+0x80]
  42d6c2:	movzx  edx,BYTE PTR [rax+rbx*1]
  42d6c6:	lea    rax,[rbx+0x1]
  42d6ca:	cmp    BYTE PTR [rsi+rdx*1],0x0
  42d6ce:	jne    0x42d780
  42d6d4:	mov    r8,QWORD PTR [rsp+0x80]
  42d6dc:	mov    rcx,QWORD PTR [rsp+0x88]
  42d6e4:	mov    r9,QWORD PTR [rsp+0x278]
  42d6ec:	jmp    0x42d704
  42d6ee:	xchg   ax,ax
  42d6f0:	movzx  edx,BYTE PTR [r9+rax*1]
  42d6f5:	add    rax,0x1
  42d6f9:	cmp    BYTE PTR [r8+rdx*1],0x0
  42d6fe:	jne    0x42e721
  42d704:	cmp    rax,rcx
  42d707:	mov    rbx,rax
  42d70a:	jne    0x42d6f0
  42d70c:	mov    rax,QWORD PTR [rsp+0x88]
  42d714:	mov    rbx,rax
  42d717:	mov    QWORD PTR [rsp+0xd8],rax
  42d71f:	cmp    QWORD PTR [rsp+0x88],rbx
  42d727:	jne    0x42d780
  42d729:	xor    eax,eax
  42d72b:	mov    rsi,QWORD PTR [rsp+0x88]
  42d733:	cmp    QWORD PTR [rsp+0x280],rsi
  42d73b:	jle    0x42d749
  42d73d:	mov    rax,QWORD PTR [rsp+0x278]
  42d745:	movzx  eax,BYTE PTR [rax+rsi*1]
  42d749:	cmp    BYTE PTR [rsp+0xb5],0x0
  42d751:	je     0x42d75f
  42d753:	mov    rsi,QWORD PTR [rsp+0x90]
  42d75b:	movzx  eax,BYTE PTR [rsi+rax*1]
  42d75f:	mov    rsi,QWORD PTR [rsp+0x80]
  42d767:	cmp    BYTE PTR [rsi+rax*1],0x0
  42d76b:	je     0x42e0d0
  42d771:	mov    rbx,QWORD PTR [rsp+0x88]
  42d779:	nop    DWORD PTR [rax+0x0]
  42d780:	mov    r8d,DWORD PTR [rsp+0x2b0]
  42d788:	mov    rdx,rbx
  42d78b:	mov    rcx,r15
  42d78e:	call   0x429450
  42d793:	test   eax,eax
  42d795:	mov    DWORD PTR [rsp+0xb0],eax
  42d79c:	jne    0x42e3c7
  42d7a2:	cmp    BYTE PTR [rsp+0xb7],0x0
  42d7aa:	jne    0x42d7bb
  42d7ac:	cmp    QWORD PTR [rsp+0x150],0x0
  42d7b5:	jne    0x42e4dc
  42d7bb:	mov    rax,QWORD PTR [rsp+0x290]
  42d7c3:	cmp    QWORD PTR [rsp+0x288],rax
  42d7cb:	mov    DWORD PTR [rsp+0x200],0x0
  42d7d6:	mov    QWORD PTR [rsp+0x1e8],0x0
  42d7e2:	mov    QWORD PTR [rsp+0x1e0],0x0
  42d7ee:	jle    0x42e0f0
  42d7f4:	mov    BYTE PTR [rsp+0x30],0x0
  42d7f9:	mov    QWORD PTR [rsp+0x58],0x0
  42d802:	mov    rbx,QWORD PTR [rsp+0x1b8]
  42d80a:	movzx  eax,BYTE PTR [rsp+0x6c]
  42d80f:	mov    DWORD PTR [rsp+0xd0],0x0
  42d81a:	mov    r13,QWORD PTR [rbx+0x48]
  42d81e:	and    eax,0x1
  42d821:	mov    BYTE PTR [rsp+0xb6],al
  42d828:	mov    rax,QWORD PTR [rsp+0x168]
  42d830:	cmp    BYTE PTR [r13+0x68],0x0
  42d835:	mov    QWORD PTR [rsp+0x78],rax
  42d83a:	jns    0x42d8d0
  42d840:	mov    r8d,DWORD PTR [rsp+0x1c0]
  42d848:	lea    rdx,[rax-0x1]
  42d84c:	mov    rcx,r15
  42d84f:	call   0x429220
  42d854:	test   al,0x1
  42d856:	je     0x42e4f3
  42d85c:	mov    r13,QWORD PTR [rbx+0x50]
  42d860:	test   r13,r13
  42d863:	jne    0x42d8d0
  42d865:	lea    rcx,[rip+0x1a960]        # 0x4481cc
  42d86c:	lea    rdx,[rip+0x1a8b5]        # 0x448128
  42d873:	mov    r8d,0x44e
  42d879:	call   0x435a10
  42d87e:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42d886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d890:	mov    DWORD PTR [rsp+0xb0],0xc
  42d89b:	call   0x43a748
  42d8a0:	mov    rax,QWORD PTR [rsp+0x50]
  42d8a5:	cmp    QWORD PTR [rax+0x98],0x0
  42d8ad:	jne    0x42e66f
  42d8b3:	mov    rcx,r15
  42d8b6:	call   0x425e90
  42d8bb:	mov    eax,DWORD PTR [rsp+0xb0]
  42d8c2:	jmp    0x42d678
  42d8c7:	nop    WORD PTR [rax+rax*1+0x0]
  42d8d0:	mov    rax,QWORD PTR [rsp+0x1d8]
  42d8d8:	test   rax,rax
  42d8db:	je     0x42d8f6
  42d8dd:	mov    r11d,DWORD PTR [rbx+0x98]
  42d8e4:	mov    rsi,QWORD PTR [rsp+0x78]
  42d8e9:	test   r11d,r11d
  42d8ec:	mov    QWORD PTR [rax+rsi*8],r13
  42d8f0:	jne    0x42e78e
  42d8f6:	movzx  eax,BYTE PTR [r13+0x68]
  42d8fb:	test   al,0x10
  42d8fd:	jne    0x42e75d
  42d903:	mov    QWORD PTR [rsp+0x40],0xffffffffffffffff
  42d90c:	mov    QWORD PTR [rsp+0x60],0x0
  42d915:	mov    r12,QWORD PTR [rsp+0x168]
  42d91d:	mov    r14,r13
  42d920:	jmp    0x42d92d
  42d922:	mov    r12,QWORD PTR [rsp+0x168]
  42d92a:	mov    r14,rbx
  42d92d:	cmp    r12,QWORD PTR [rsp+0x188]
  42d935:	jge    0x42dab5
  42d93b:	mov    rax,QWORD PTR [rsp+0x160]
  42d943:	lea    rdi,[r12+0x1]
  42d948:	cmp    rdi,rax
  42d94b:	jge    0x42dd00
  42d951:	mov    rax,QWORD PTR [rsp+0x150]
  42d959:	cmp    rdi,rax
  42d95c:	jge    0x42df90
  42d962:	test   BYTE PTR [r14+0x68],0x20
  42d967:	jne    0x42dd40
  42d96d:	lea    rax,[r12+0x1]
  42d972:	mov    QWORD PTR [rsp+0x168],rax
  42d97a:	mov    rax,QWORD PTR [rsp+0x128]
  42d982:	movzx  ebx,BYTE PTR [rax+r12*1]
  42d987:	mov    rax,QWORD PTR [r14+0x58]
  42d98b:	test   rax,rax
  42d98e:	je     0x42df50
  42d994:	mov    rbx,QWORD PTR [rax+rbx*8]
  42d998:	cmp    QWORD PTR [rsp+0x1d8],0x0
  42d9a1:	je     0x42d9b6
  42d9a3:	mov    r8,rbx
  42d9a6:	mov    rcx,QWORD PTR [rsp+0x38]
  42d9ab:	mov    rdx,r15
  42d9ae:	call   0x42cef0
  42d9b3:	mov    rbx,rax
  42d9b6:	test   rbx,rbx
  42d9b9:	je     0x42da50
  42d9bf:	cmp    r14,rbx
  42d9c2:	jne    0x42d9cf
  42d9c4:	cmp    BYTE PTR [rsp+0x30],0x0
  42d9c9:	jne    0x42dcb0
  42d9cf:	mov    BYTE PTR [rsp+0x30],0x0
  42d9d4:	movzx  eax,BYTE PTR [rbx+0x68]
  42d9d8:	test   al,0x10
  42d9da:	je     0x42d922
  42d9e0:	test   al,al
  42d9e2:	js     0x42da20
  42d9e4:	mov    rax,QWORD PTR [rsp+0x168]
  42d9ec:	mov    QWORD PTR [rsp+0x40],rax
  42d9f1:	mov    eax,DWORD PTR [rsp+0x6c]
  42d9f5:	test   eax,eax
  42d9f7:	je     0x42e73b
  42d9fd:	mov    r12,QWORD PTR [rsp+0x40]
  42da02:	mov    QWORD PTR [rsp+0x60],0x1
  42da0b:	mov    QWORD PTR [rsp+0x58],0x0
  42da14:	jmp    0x42d92a
  42da19:	nop    DWORD PTR [rax+0x0]
  42da20:	mov    r12,QWORD PTR [rsp+0x168]
  42da28:	mov    rdx,QWORD PTR [rbx+0x10]
  42da2c:	lea    r8,[rbx+0x18]
  42da30:	mov    rcx,r15
  42da33:	mov    r9,r12
  42da36:	call   0x429b40
  42da3b:	test   rax,rax
  42da3e:	je     0x42d92a
  42da44:	mov    QWORD PTR [rsp+0x40],r12
  42da49:	jmp    0x42d9f1
  42da4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42da50:	mov    r9d,DWORD PTR [rsp+0xd0]
  42da58:	mov    r8,QWORD PTR [rsp+0x1d8]
  42da60:	test   r9d,r9d
  42da63:	mov    rcx,r8
  42da66:	jne    0x42d890
  42da6c:	test   r8,r8
  42da6f:	je     0x42dab5
  42da71:	movzx  esi,BYTE PTR [rsp+0x60]
  42da76:	cmp    BYTE PTR [rsp+0xb6],sil
  42da7e:	jb     0x42dab5
  42da80:	mov    rax,QWORD PTR [rsp+0x168]
  42da88:	mov    rcx,QWORD PTR [rsp+0x1e0]
  42da90:	mov    rdx,rax
  42da93:	jmp    0x42daa4
  42da95:	add    rdx,0x1
  42da99:	cmp    QWORD PTR [r8+rax*8],0x0
  42da9e:	jne    0x42dcc0
  42daa4:	add    rax,0x1
  42daa8:	cmp    rcx,rax
  42daab:	jge    0x42da95
  42daad:	mov    QWORD PTR [rsp+0x168],rdx
  42dab5:	cmp    QWORD PTR [rsp+0x58],0x0
  42dabb:	je     0x42e73b
  42dac1:	mov    rax,QWORD PTR [rsp+0x58]
  42dac6:	mov    rsi,QWORD PTR [rsp+0x78]
  42dacb:	mov    r13,QWORD PTR [rsp+0x40]
  42dad0:	add    QWORD PTR [rax],rsi
  42dad3:	cmp    r13,0xffffffffffffffff
  42dad7:	je     0x42e095
  42dadd:	cmp    r13,0xfffffffffffffffe
  42dae1:	je     0x42e547
  42dae7:	cmp    QWORD PTR [rsp+0xb8],0x1
  42daf0:	mov    QWORD PTR [rsp+0x1c8],r13
  42daf8:	seta   r14b
  42dafc:	jbe    0x42e107
  42db02:	mov    rax,QWORD PTR [rsp+0x270]
  42db0a:	test   BYTE PTR [rax+0x38],0x10
  42db0e:	jne    0x42e107
  42db14:	mov    rax,QWORD PTR [rsp+0x1d8]
  42db1c:	mov    r9,r13
  42db1f:	mov    rcx,r15
  42db22:	mov    rdi,rax
  42db25:	mov    rax,QWORD PTR [rax+r13*8]
  42db29:	mov    rdx,QWORD PTR [rax+0x10]
  42db2d:	lea    r8,[rax+0x18]
  42db31:	call   0x429b40
  42db36:	mov    rsi,QWORD PTR [rsp+0x50]
  42db3b:	mov    QWORD PTR [rsp+0x1d0],rax
  42db43:	test   BYTE PTR [rsi+0xa8],0x1
  42db4a:	jne    0x42e18e
  42db50:	mov    rax,QWORD PTR [rsp+0x50]
  42db55:	mov    rax,QWORD PTR [rax+0x98]
  42db5c:	test   rax,rax
  42db5f:	je     0x42e1c5
  42db65:	mov    rbx,QWORD PTR [rsp+0x1d0]
  42db6d:	movabs rax,0x1ffffffffffffffe
  42db77:	mov    r12,QWORD PTR [rsp+0x1b8]
  42db7f:	cmp    r13,rax
  42db82:	ja     0x42e7c9
  42db88:	lea    rbp,[r13+0x1]
  42db8c:	lea    rdi,[rbp*8+0x0]
  42db94:	mov    rcx,rdi
  42db97:	call   0x423ec0
  42db9c:	test   rax,rax
  42db9f:	mov    rsi,rax
  42dba2:	je     0x42e578
  42dba8:	cmp    QWORD PTR [r12+0x98],0x0
  42dbb1:	je     0x42e009
  42dbb7:	mov    rcx,rdi
  42dbba:	call   0x423ec0
  42dbbf:	test   rax,rax
  42dbc2:	je     0x42e578
  42dbc8:	mov    rdi,rbx
  42dbcb:	mov    rbx,QWORD PTR [rsp+0x70]
  42dbd0:	mov    QWORD PTR [rsp+0x40],r12
  42dbd5:	mov    BYTE PTR [rsp+0x30],r14b
  42dbda:	mov    r12,rbp
  42dbdd:	mov    rbp,rax
  42dbe0:	lea    r8,[r12*8+0x0]
  42dbe8:	xor    edx,edx
  42dbea:	mov    rcx,rbp
  42dbed:	call   0x43a6a8
  42dbf2:	mov    QWORD PTR [rsp+0xe0],rsi
  42dbfa:	mov    QWORD PTR [rsp+0xe8],rbp
  42dc02:	mov    rdx,rbx
  42dc05:	mov    QWORD PTR [rsp+0xf0],rdi
  42dc0d:	mov    QWORD PTR [rsp+0xf8],r13
  42dc15:	mov    rcx,r15
  42dc18:	mov    QWORD PTR [rbx+0x20],0x0
  42dc20:	mov    QWORD PTR [rbx+0x28],0x0
  42dc28:	mov    QWORD PTR [rbx+0x30],0x0
  42dc30:	call   0x42b150
  42dc35:	mov    rcx,QWORD PTR [rsp+0x110]
  42dc3d:	mov    r14d,eax
  42dc40:	call   0x43a748
  42dc45:	test   r14d,r14d
  42dc48:	jne    0x42e850
  42dc4e:	cmp    QWORD PTR [rsi],0x0
  42dc52:	jne    0x42e886
  42dc58:	cmp    QWORD PTR [rbp+0x0],0x0
  42dc5d:	jne    0x42e886
  42dc63:	mov    rdx,QWORD PTR [rsp+0x1d8]
  42dc6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42dc70:	sub    r13,0x1
  42dc74:	cmp    r13,0xffffffffffffffff
  42dc78:	je     0x42e657
  42dc7e:	mov    rax,QWORD PTR [rdx+r13*8]
  42dc82:	test   rax,rax
  42dc85:	je     0x42dc70
  42dc87:	test   BYTE PTR [rax+0x68],0x10
  42dc8b:	je     0x42dc70
  42dc8d:	mov    rdx,QWORD PTR [rax+0x10]
  42dc91:	lea    r8,[rax+0x18]
  42dc95:	mov    r9,r13
  42dc98:	mov    rcx,r15
  42dc9b:	lea    r12,[r13+0x1]
  42dc9f:	call   0x429b40
  42dca4:	mov    rdi,rax
  42dca7:	jmp    0x42dbe0
  42dcac:	nop    DWORD PTR [rax+0x0]
  42dcb0:	mov    QWORD PTR [rsp+0x78],rdi
  42dcb5:	mov    BYTE PTR [rsp+0x30],0x1
  42dcba:	jmp    0x42d9d4
  42dcbf:	nop
  42dcc0:	mov    rcx,QWORD PTR [rsp+0x38]
  42dcc5:	mov    QWORD PTR [rsp+0x168],rdx
  42dccd:	xor    r8d,r8d
  42dcd0:	mov    rdx,r15
  42dcd3:	call   0x42cef0
  42dcd8:	test   rax,rax
  42dcdb:	jne    0x42e836
  42dce1:	mov    edx,DWORD PTR [rsp+0xd0]
  42dce8:	test   edx,edx
  42dcea:	jne    0x42e836
  42dcf0:	mov    r8,QWORD PTR [rsp+0x1d8]
  42dcf8:	jmp    0x42da80
  42dcfd:	nop    DWORD PTR [rax]
  42dd00:	cmp    rax,QWORD PTR [rsp+0x178]
  42dd08:	jge    0x42d951
  42dd0e:	lea    edx,[rdi+0x1]
  42dd11:	mov    rcx,r15
  42dd14:	call   0x4256e0
  42dd19:	test   eax,eax
  42dd1b:	mov    DWORD PTR [rsp+0xd0],eax
  42dd22:	jne    0x42e6b9
  42dd28:	test   BYTE PTR [r14+0x68],0x20
  42dd2d:	mov    r12,QWORD PTR [rsp+0x168]
  42dd35:	je     0x42d96d
  42dd3b:	nop    DWORD PTR [rax+rax*1+0x0]
  42dd40:	cmp    QWORD PTR [r14+0x10],0x0
  42dd45:	mov    rsi,QWORD PTR [rsp+0x1b8]
  42dd4d:	jle    0x42de3e
  42dd53:	lea    rax,[rsi+0xd0]
  42dd5a:	mov    QWORD PTR [rsp+0xa0],rdi
  42dd62:	xor    ebx,ebx
  42dd64:	mov    rdi,r12
  42dd67:	mov    QWORD PTR [rsp+0x48],rax
  42dd6c:	jmp    0x42ddc7
  42dd6e:	xchg   ax,ax
  42dd70:	test   al,0x1
  42dd72:	je     0x42ddbd
  42dd74:	and    edx,0x8
  42dd77:	jne    0x42ddbd
  42dd79:	nop    DWORD PTR [rax+0x0]
  42dd80:	test   cl,0x20
  42dd83:	je     0x42dd89
  42dd85:	test   al,0x2
  42dd87:	je     0x42ddbd
  42dd89:	and    ecx,0x80
  42dd8f:	je     0x42dd95
  42dd91:	test   al,0x8
  42dd93:	je     0x42ddbd
  42dd95:	mov    rdx,QWORD PTR [rsp+0x48]
  42dd9a:	mov    QWORD PTR [rsp+0x20],rdi
  42dd9f:	mov    r9,r15
  42dda2:	mov    r8,r12
  42dda5:	mov    rcx,rbp
  42dda8:	call   0x429c20
  42ddad:	test   eax,eax
  42ddaf:	jne    0x42de50
  42ddb5:	mov    rdi,QWORD PTR [rsp+0x168]
  42ddbd:	add    rbx,0x1
  42ddc1:	cmp    rbx,QWORD PTR [r14+0x10]
  42ddc5:	jge    0x42de33
  42ddc7:	mov    rax,QWORD PTR [r14+0x18]
  42ddcb:	mov    rbp,QWORD PTR [rsi]
  42ddce:	mov    r12,QWORD PTR [rax+rbx*8]
  42ddd2:	mov    rax,r12
  42ddd5:	shl    rax,0x4
  42ddd9:	add    rax,rbp
  42dddc:	test   BYTE PTR [rax+0xa],0x10
  42dde0:	je     0x42ddbd
  42dde2:	mov    r13d,DWORD PTR [rax+0x8]
  42dde6:	test   r13d,0x3ff00
  42dded:	je     0x42dd95
  42ddef:	mov    r8d,DWORD PTR [rsp+0x1c0]
  42ddf7:	mov    rdx,rdi
  42ddfa:	mov    rcx,r15
  42ddfd:	call   0x429220
  42de02:	mov    edx,r13d
  42de05:	shr    edx,0x8
  42de08:	mov    ecx,edx
  42de0a:	and    cx,0x3ff
  42de0f:	test   dl,0x4
  42de12:	jne    0x42dd70
  42de18:	and    edx,0x8
  42de1b:	je     0x42dd80
  42de21:	test   al,0x1
  42de23:	je     0x42dd80
  42de29:	add    rbx,0x1
  42de2d:	cmp    rbx,QWORD PTR [r14+0x10]
  42de31:	jl     0x42ddc7
  42de33:	mov    r12,rdi
  42de36:	mov    rdi,QWORD PTR [rsp+0xa0]
  42de3e:	mov    DWORD PTR [rsp+0xd0],0x0
  42de49:	jmp    0x42d96d
  42de4e:	xchg   ax,ax
  42de50:	mov    edx,DWORD PTR [rsp+0x200]
  42de57:	movsxd rbp,eax
  42de5a:	add    rbp,QWORD PTR [rsp+0x168]
  42de62:	mov    rcx,r15
  42de65:	cmp    eax,edx
  42de67:	cmovl  eax,edx
  42de6a:	mov    rdx,rbp
  42de6d:	mov    DWORD PTR [rsp+0x200],eax
  42de74:	call   0x4257d0
  42de79:	test   eax,eax
  42de7b:	mov    DWORD PTR [rsp+0xd4],eax
  42de82:	jne    0x42e155
  42de88:	mov    rax,QWORD PTR [rsi+0x18]
  42de8c:	mov    rax,QWORD PTR [rax+r12*8]
  42de90:	lea    r12,[rbp*8+0x0]
  42de98:	mov    rdi,r12
  42de9b:	add    rdi,QWORD PTR [rsp+0x1d8]
  42dea3:	lea    rdx,[rax+rax*2]
  42dea7:	mov    rax,QWORD PTR [rsi+0x30]
  42deab:	lea    r8,[rax+rdx*8]
  42deaf:	mov    rax,QWORD PTR [rdi]
  42deb2:	test   rax,rax
  42deb5:	je     0x42dfa3
  42debb:	mov    rdx,QWORD PTR [rax+0x50]
  42debf:	mov    rcx,QWORD PTR [rsp+0x70]
  42dec4:	call   0x427830
  42dec9:	test   eax,eax
  42decb:	mov    DWORD PTR [rsp+0xd4],eax
  42ded2:	jne    0x42e155
  42ded8:	mov    r8d,DWORD PTR [rsp+0x1c0]
  42dee0:	lea    rdx,[rbp-0x1]
  42dee4:	mov    rcx,r15
  42dee7:	call   0x429220
  42deec:	add    r12,QWORD PTR [rsp+0x1d8]
  42def4:	mov    rcx,QWORD PTR [rsp+0x98]
  42defc:	mov    r9d,eax
  42deff:	mov    r8,QWORD PTR [rsp+0x70]
  42df04:	mov    rdx,rsi
  42df07:	call   0x4279c0
  42df0c:	mov    QWORD PTR [r12],rax
  42df10:	mov    rcx,QWORD PTR [rsp+0xf0]
  42df18:	call   0x43a748
  42df1d:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42df25:	cmp    QWORD PTR [rcx+rbp*8],0x0
  42df2a:	jne    0x42ddb5
  42df30:	mov    eax,DWORD PTR [rsp+0xd4]
  42df37:	test   eax,eax
  42df39:	je     0x42ddb5
  42df3f:	mov    rdi,QWORD PTR [rsp+0xa0]
  42df47:	jmp    0x42e165
  42df4c:	nop    DWORD PTR [rax+0x0]
  42df50:	mov    rsi,QWORD PTR [r14+0x60]
  42df54:	test   rsi,rsi
  42df57:	je     0x42e6e8
  42df5d:	mov    rax,QWORD PTR [rsp+0x168]
  42df65:	mov    r8d,DWORD PTR [rsp+0x1c0]
  42df6d:	mov    rcx,r15
  42df70:	lea    rdx,[rax-0x1]
  42df74:	call   0x429220
  42df79:	test   al,0x1
  42df7b:	je     0x42e000
  42df81:	mov    rbx,QWORD PTR [rsi+rbx*8+0x800]
  42df89:	jmp    0x42d998
  42df8e:	xchg   ax,ax
  42df90:	cmp    rax,QWORD PTR [rsp+0x178]
  42df98:	jge    0x42d962
  42df9e:	jmp    0x42dd0e
  42dfa3:	mov    rax,QWORD PTR [r8]
  42dfa6:	lea    rdx,[rbp-0x1]
  42dfaa:	mov    rcx,r15
  42dfad:	mov    QWORD PTR [rsp+0xe0],rax
  42dfb5:	mov    rax,QWORD PTR [r8+0x8]
  42dfb9:	mov    QWORD PTR [rsp+0xe8],rax
  42dfc1:	mov    rax,QWORD PTR [r8+0x10]
  42dfc5:	mov    r8d,DWORD PTR [rsp+0x1c0]
  42dfcd:	mov    QWORD PTR [rsp+0xf0],rax
  42dfd5:	call   0x429220
  42dfda:	mov    r8,QWORD PTR [rsp+0x70]
  42dfdf:	mov    rcx,QWORD PTR [rsp+0x98]
  42dfe7:	mov    r9d,eax
  42dfea:	mov    rdx,rsi
  42dfed:	call   0x4279c0
  42dff2:	mov    QWORD PTR [rdi],rax
  42dff5:	jmp    0x42df1d
  42dffa:	nop    WORD PTR [rax+rax*1+0x0]
  42e000:	mov    rbx,QWORD PTR [rsi+rbx*8]
  42e004:	jmp    0x42d998
  42e009:	mov    rdi,QWORD PTR [rsp+0x70]
  42e00e:	mov    QWORD PTR [rsp+0xe0],rax
  42e016:	mov    rcx,r15
  42e019:	mov    QWORD PTR [rsp+0xe8],0x0
  42e025:	mov    QWORD PTR [rsp+0xf0],rbx
  42e02d:	mov    QWORD PTR [rsp+0xf8],r13
  42e035:	mov    rdx,rdi
  42e038:	mov    QWORD PTR [rdi+0x20],0x0
  42e040:	mov    QWORD PTR [rdi+0x28],0x0
  42e048:	mov    QWORD PTR [rdi+0x30],0x0
  42e050:	call   0x42b150
  42e055:	mov    rcx,QWORD PTR [rsp+0x110]
  42e05d:	mov    DWORD PTR [rsp+0x30],eax
  42e061:	call   0x43a748
  42e066:	mov    eax,DWORD PTR [rsp+0x30]
  42e06a:	test   eax,eax
  42e06c:	je     0x42e196
  42e072:	xor    edi,edi
  42e074:	mov    rcx,rsi
  42e077:	mov    DWORD PTR [rsp+0x30],eax
  42e07b:	call   0x43a748
  42e080:	mov    rcx,rdi
  42e083:	call   0x43a748
  42e088:	mov    eax,DWORD PTR [rsp+0x30]
  42e08c:	cmp    eax,0x1
  42e08f:	jne    0x42e585
  42e095:	mov    rcx,r15
  42e098:	call   0x426030
  42e09d:	mov    rbx,QWORD PTR [rsp+0xd8]
  42e0a5:	movsxd rax,DWORD PTR [rsp+0xc4]
  42e0ad:	add    rbx,rax
  42e0b0:	cmp    QWORD PTR [rsp+0x88],rbx
  42e0b8:	mov    QWORD PTR [rsp+0xd8],rbx
  42e0c0:	jl     0x42e0d0
  42e0c2:	cmp    QWORD PTR [rsp+0xa8],rbx
  42e0ca:	jle    0x42d630
  42e0d0:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e0d8:	mov    DWORD PTR [rsp+0xb0],0x1
  42e0e3:	jmp    0x42d89b
  42e0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42e0f0:	lea    rax,[rsp+0xd8]
  42e0f8:	mov    BYTE PTR [rsp+0x30],0x1
  42e0fd:	mov    QWORD PTR [rsp+0x58],rax
  42e102:	jmp    0x42d802
  42e107:	mov    rax,QWORD PTR [rsp+0x50]
  42e10c:	cmp    QWORD PTR [rax+0x98],0x0
  42e114:	je     0x42e1c5
  42e11a:	mov    rax,QWORD PTR [rsp+0x1d8]
  42e122:	mov    r9,r13
  42e125:	mov    rcx,r15
  42e128:	mov    rdi,rax
  42e12b:	mov    rax,QWORD PTR [rax+r13*8]
  42e12f:	mov    rdx,QWORD PTR [rax+0x10]
  42e133:	lea    r8,[rax+0x18]
  42e137:	call   0x429b40
  42e13c:	mov    QWORD PTR [rsp+0x1d0],rax
  42e144:	mov    rax,QWORD PTR [rsp+0x50]
  42e149:	mov    rax,QWORD PTR [rax+0x98]
  42e150:	jmp    0x42db5c
  42e155:	mov    rdi,QWORD PTR [rsp+0xa0]
  42e15d:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e165:	test   rcx,rcx
  42e168:	mov    DWORD PTR [rsp+0xd0],eax
  42e16f:	je     0x42d890
  42e175:	xor    r8d,r8d
  42e178:	jmp    0x42d9a6
  42e17d:	mov    QWORD PTR [rsp+0x80],0x0
  42e189:	jmp    0x42d161
  42e18e:	mov    rbx,rax
  42e191:	jmp    0x42db6d
  42e196:	cmp    QWORD PTR [rsi],0x0
  42e19a:	je     0x42e862
  42e1a0:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e1a8:	call   0x43a748
  42e1ad:	mov    QWORD PTR [rsp+0x1d8],rsi
  42e1b5:	mov    QWORD PTR [rsp+0x1d0],rbx
  42e1bd:	mov    QWORD PTR [rsp+0x1c8],r13
  42e1c5:	cmp    QWORD PTR [rsp+0xb8],0x0
  42e1ce:	je     0x42e3c7
  42e1d4:	mov    rax,QWORD PTR [rsp+0x2a8]
  42e1dc:	mov    edx,0x1
  42e1e1:	mov    rcx,QWORD PTR [rsp+0xb8]
  42e1e9:	add    rax,0x18
  42e1ed:	test   r14b,r14b
  42e1f0:	je     0x42e20e
  42e1f2:	add    rdx,0x1
  42e1f6:	mov    QWORD PTR [rax],0xffffffffffffffff
  42e1fd:	mov    QWORD PTR [rax-0x8],0xffffffffffffffff
  42e205:	add    rax,0x10
  42e209:	cmp    rcx,rdx
  42e20c:	ja     0x42e1f2
  42e20e:	mov    rax,QWORD PTR [rsp+0x2a8]
  42e216:	cmp    QWORD PTR [rsp+0xb8],0x1
  42e21f:	mov    rsi,QWORD PTR [rsp+0x2a8]
  42e227:	mov    QWORD PTR [rax],0x0
  42e22e:	mov    rax,QWORD PTR [rsp+0x1c8]
  42e236:	mov    QWORD PTR [rsi+0x8],rax
  42e23a:	je     0x42e294
  42e23c:	mov    rax,QWORD PTR [rsp+0x270]
  42e244:	test   BYTE PTR [rax+0x38],0x10
  42e248:	jne    0x42e294
  42e24a:	mov    rsi,QWORD PTR [rsp+0x50]
  42e24f:	xor    eax,eax
  42e251:	test   BYTE PTR [rsi+0xa8],0x1
  42e258:	je     0x42e268
  42e25a:	cmp    QWORD PTR [rsi+0x98],0x0
  42e262:	setg   al
  42e265:	movzx  eax,al
  42e268:	mov    r9,QWORD PTR [rsp+0x2a8]
  42e270:	mov    r8,QWORD PTR [rsp+0xb8]
  42e278:	mov    rdx,r15
  42e27b:	mov    rcx,QWORD PTR [rsp+0x270]
  42e283:	mov    DWORD PTR [rsp+0x20],eax
  42e287:	call   0x42b520
  42e28c:	test   eax,eax
  42e28e:	jne    0x42e585
  42e294:	mov    rdx,QWORD PTR [rsp+0xb8]
  42e29c:	mov    rsi,QWORD PTR [rsp+0x2a8]
  42e2a4:	mov    rax,QWORD PTR [rsp+0x2a8]
  42e2ac:	mov    rbx,QWORD PTR [rsp+0x150]
  42e2b4:	mov    r11,QWORD PTR [rsp+0x158]
  42e2bc:	mov    r10,QWORD PTR [rsp+0x138]
  42e2c4:	shl    rdx,0x4
  42e2c8:	mov    r9,QWORD PTR [rsp+0xd8]
  42e2d0:	lea    rdx,[rsi+rdx*1+0x8]
  42e2d5:	add    rax,0x8
  42e2d9:	mov    rcx,QWORD PTR [rax-0x8]
  42e2dd:	cmp    rcx,0xffffffffffffffff
  42e2e1:	je     0x42e301
  42e2e3:	cmp    BYTE PTR [rsp+0x1ac],0x0
  42e2eb:	jne    0x42e8d0
  42e2f1:	mov    r8,QWORD PTR [rax]
  42e2f4:	add    rcx,r9
  42e2f7:	add    r8,r9
  42e2fa:	mov    QWORD PTR [rax-0x8],rcx
  42e2fe:	mov    QWORD PTR [rax],r8
  42e301:	add    rax,0x10
  42e305:	cmp    rax,rdx
  42e308:	jne    0x42e2d9
  42e30a:	cmp    QWORD PTR [rsp+0xc8],0x0
  42e313:	jle    0x42e34e
  42e315:	mov    rax,QWORD PTR [rsp+0xc8]
  42e31d:	add    rax,QWORD PTR [rsp+0xb8]
  42e325:	mov    rsi,QWORD PTR [rsp+0x2a8]
  42e32d:	shl    rax,0x4
  42e331:	lea    rax,[rsi+rax*1+0x8]
  42e336:	mov    QWORD PTR [rdx-0x8],0xffffffffffffffff
  42e33e:	mov    QWORD PTR [rdx],0xffffffffffffffff
  42e345:	add    rdx,0x10
  42e349:	cmp    rdx,rax
  42e34c:	jne    0x42e336
  42e34e:	mov    rax,QWORD PTR [rsp+0x50]
  42e353:	xor    r8d,r8d
  42e356:	mov    r10,QWORD PTR [rsp+0xb8]
  42e35e:	mov    r9,QWORD PTR [rax+0xd8]
  42e365:	mov    rax,QWORD PTR [rsp+0x2a8]
  42e36d:	test   r9,r9
  42e370:	lea    rcx,[rax+0x10]
  42e374:	jne    0x42e3be
  42e376:	jmp    0x42e3c7
  42e378:	nop    DWORD PTR [rax+rax*1+0x0]
  42e380:	mov    rax,QWORD PTR [r9+rdx*8-0x8]
  42e385:	cmp    rax,r8
  42e388:	je     0x42e3b7
  42e38a:	mov    rsi,QWORD PTR [rsp+0x2a8]
  42e392:	add    rax,0x1
  42e396:	shl    rax,0x4
  42e39a:	mov    rax,QWORD PTR [rsi+rax*1]
  42e39e:	mov    QWORD PTR [rcx],rax
  42e3a1:	mov    rax,QWORD PTR [r9+rdx*8-0x8]
  42e3a6:	add    rax,0x1
  42e3aa:	shl    rax,0x4
  42e3ae:	mov    rax,QWORD PTR [rsi+rax*1+0x8]
  42e3b3:	mov    QWORD PTR [rcx+0x8],rax
  42e3b7:	add    rcx,0x10
  42e3bb:	mov    r8,rdx
  42e3be:	lea    rdx,[r8+0x1]
  42e3c2:	cmp    rdx,r10
  42e3c5:	jne    0x42e380
  42e3c7:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e3cf:	jmp    0x42d89b
  42e3d4:	cmp    QWORD PTR [rsp+0x88],rbx
  42e3dc:	jle    0x42d71f
  42e3e2:	mov    rax,QWORD PTR [rsp+0x278]
  42e3ea:	mov    rsi,QWORD PTR [rsp+0x90]
  42e3f2:	movzx  eax,BYTE PTR [rax+rbx*1]
  42e3f6:	movzx  edx,BYTE PTR [rsi+rax*1]
  42e3fa:	mov    rsi,QWORD PTR [rsp+0x80]
  42e402:	lea    rax,[rbx+0x1]
  42e406:	cmp    BYTE PTR [rsi+rdx*1],0x0
  42e40a:	jne    0x42d780
  42e410:	mov    r8,QWORD PTR [rsp+0x80]
  42e418:	mov    r9,QWORD PTR [rsp+0x90]
  42e420:	mov    rcx,QWORD PTR [rsp+0x88]
  42e428:	mov    r10,QWORD PTR [rsp+0x278]
  42e430:	jmp    0x42e44b
  42e432:	movzx  edx,BYTE PTR [r10+rax*1]
  42e437:	add    rax,0x1
  42e43b:	movzx  edx,BYTE PTR [r9+rdx*1]
  42e440:	cmp    BYTE PTR [r8+rdx*1],0x0
  42e445:	jne    0x42e721
  42e44b:	cmp    rax,rcx
  42e44e:	mov    rbx,rax
  42e451:	jne    0x42e432
  42e453:	jmp    0x42d70c
  42e458:	cmp    QWORD PTR [rsp+0xa8],rbx
  42e460:	jg     0x42e0d0
  42e466:	mov    rdx,QWORD PTR [rsp+0xd8]
  42e46e:	mov    rcx,QWORD PTR [rsp+0x80]
  42e476:	mov    r11,QWORD PTR [rsp+0x90]
  42e47e:	mov    r10,QWORD PTR [rsp+0xa8]
  42e486:	movzx  r8d,BYTE PTR [rsp+0xb5]
  42e48f:	mov    rsi,QWORD PTR [rsp+0x278]
  42e497:	mov    r9,QWORD PTR [rsp+0x280]
  42e49f:	jmp    0x42e4b1
  42e4a1:	sub    rbx,0x1
  42e4a5:	cmp    r10,rbx
  42e4a8:	mov    rdx,rbx
  42e4ab:	jg     0x42e72e
  42e4b1:	xor    eax,eax
  42e4b3:	cmp    r9,rbx
  42e4b6:	jle    0x42e4bc
  42e4b8:	movzx  eax,BYTE PTR [rsi+rbx*1]
  42e4bc:	test   r8b,r8b
  42e4bf:	je     0x42e4c6
  42e4c1:	movzx  eax,BYTE PTR [r11+rax*1]
  42e4c6:	cmp    BYTE PTR [rcx+rax*1],0x0
  42e4ca:	je     0x42e4a1
  42e4cc:	mov    rbx,rdx
  42e4cf:	mov    QWORD PTR [rsp+0xd8],rdx
  42e4d7:	jmp    0x42d780
  42e4dc:	mov    rax,QWORD PTR [rsp+0x130]
  42e4e4:	cmp    WORD PTR [rax],0xffff
  42e4e8:	jne    0x42d7bb
  42e4ee:	jmp    0x42e0a5
  42e4f3:	test   eax,eax
  42e4f5:	je     0x42d8d0
  42e4fb:	mov    edx,eax
  42e4fd:	and    edx,0x6
  42e500:	cmp    edx,0x6
  42e503:	je     0x42e87d
  42e509:	test   al,0x2
  42e50b:	jne    0x42e809
  42e511:	test   al,0x4
  42e513:	je     0x42d8d0
  42e519:	mov    r8,QWORD PTR [r13+0x50]
  42e51d:	mov    rcx,QWORD PTR [rsp+0x38]
  42e522:	mov    r9d,eax
  42e525:	mov    rdx,rbx
  42e528:	call   0x4279c0
  42e52d:	test   rax,rax
  42e530:	mov    r13,rax
  42e533:	jne    0x42d8d0
  42e539:	cmp    DWORD PTR [rsp+0xd0],0xc
  42e541:	jne    0x42d865
  42e547:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e54f:	jmp    0x42d890
  42e554:	mov    rax,QWORD PTR [rsp+0x270]
  42e55c:	test   BYTE PTR [rax+0x1a],0x40
  42e560:	jne    0x42e571
  42e562:	cmp    QWORD PTR [rsp+0x90],0x0
  42e56b:	je     0x42d5a4
  42e571:	xor    ecx,ecx
  42e573:	jmp    0x42d5a4
  42e578:	mov    rcx,rsi
  42e57b:	call   0x43a748
  42e580:	mov    eax,0xc
  42e585:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e58d:	mov    DWORD PTR [rsp+0xb0],eax
  42e594:	jmp    0x42d89b
  42e599:	nop    DWORD PTR [rax+0x0]
  42e5a0:	movsxd rsi,DWORD PTR [rsp+0xc4]
  42e5a8:	mov    rbp,QWORD PTR [rsp+0x80]
  42e5b0:	mov    r14,QWORD PTR [rsp+0xa8]
  42e5b8:	mov    r13,QWORD PTR [rsp+0x88]
  42e5c0:	mov    r12,QWORD PTR [rsp+0x280]
  42e5c8:	jmp    0x42e617
  42e5ca:	nop    WORD PTR [rax+rax*1+0x0]
  42e5d0:	mov    rax,QWORD PTR [rsp+0xd8]
  42e5d8:	xor    r8d,r8d
  42e5db:	cmp    r12,rax
  42e5de:	jle    0x42e5ed
  42e5e0:	mov    r8,QWORD PTR [rsp+0x128]
  42e5e8:	movzx  r8d,BYTE PTR [r8+rdx*1]
  42e5ed:	cmp    BYTE PTR [rbp+r8*1+0x0],0x0
  42e5f3:	jne    0x42d780
  42e5f9:	lea    rbx,[rax+rsi*1]
  42e5fd:	cmp    r13,rbx
  42e600:	mov    QWORD PTR [rsp+0xd8],rbx
  42e608:	jl     0x42e0d0
  42e60e:	cmp    r14,rbx
  42e611:	jg     0x42e0d0
  42e617:	mov    rdx,rbx
  42e61a:	sub    rdx,QWORD PTR [rsp+0x148]
  42e622:	cmp    rdx,QWORD PTR [rsp+0x158]
  42e62a:	jb     0x42e5d0
  42e62c:	mov    r8d,DWORD PTR [rsp+0x2b0]
  42e634:	mov    rdx,rbx
  42e637:	mov    rcx,r15
  42e63a:	call   0x429450
  42e63f:	test   eax,eax
  42e641:	jne    0x42e869
  42e647:	mov    rdx,rbx
  42e64a:	sub    rdx,QWORD PTR [rsp+0x148]
  42e652:	jmp    0x42e5d0
  42e657:	mov    rdi,rbp
  42e65a:	mov    rcx,rsi
  42e65d:	call   0x43a748
  42e662:	mov    rcx,rdi
  42e665:	call   0x43a748
  42e66a:	jmp    0x42e095
  42e66f:	mov    rcx,r15
  42e672:	call   0x426030
  42e677:	mov    rcx,QWORD PTR [rsp+0x218]
  42e67f:	call   0x43a748
  42e684:	mov    rcx,QWORD PTR [rsp+0x1f8]
  42e68c:	call   0x43a748
  42e691:	jmp    0x42d8b3
  42e696:	mov    rax,QWORD PTR [rsp+0x50]
  42e69b:	test   BYTE PTR [rax+0xa8],0x2
  42e6a2:	jne    0x42d4ac
  42e6a8:	mov    QWORD PTR [rsp+0x1d8],0x0
  42e6b4:	jmp    0x42d4e5
  42e6b9:	cmp    eax,0xc
  42e6bc:	je     0x42e547
  42e6c2:	lea    rcx,[rip+0x19b03]        # 0x4481cc
  42e6c9:	lea    rdx,[rip+0x19a58]        # 0x448128
  42e6d0:	mov    r8d,0x485
  42e6d6:	call   0x435a10
  42e6db:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e6e3:	jmp    0x42d890
  42e6e8:	mov    rcx,QWORD PTR [rsp+0x1b8]
  42e6f0:	mov    rdx,r14
  42e6f3:	call   0x428280
  42e6f8:	test   al,al
  42e6fa:	jne    0x42d987
  42e700:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e708:	mov    DWORD PTR [rsp+0xd0],0xc
  42e713:	test   rcx,rcx
  42e716:	jne    0x42e175
  42e71c:	jmp    0x42d890
  42e721:	mov    QWORD PTR [rsp+0xd8],rbx
  42e729:	jmp    0x42d71f
  42e72e:	mov    QWORD PTR [rsp+0xd8],rbx
  42e736:	jmp    0x42e0d0
  42e73b:	mov    r13,QWORD PTR [rsp+0x40]
  42e740:	jmp    0x42dad3
  42e745:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e74d:	mov    DWORD PTR [rsp+0xb0],0xc
  42e758:	jmp    0x42d89b
  42e75d:	test   al,al
  42e75f:	js     0x42e7e6
  42e765:	mov    r10d,DWORD PTR [rsp+0x6c]
  42e76a:	mov    rax,QWORD PTR [rsp+0x78]
  42e76f:	mov    QWORD PTR [rsp+0x60],0x1
  42e778:	test   r10d,r10d
  42e77b:	mov    QWORD PTR [rsp+0x40],rax
  42e780:	jne    0x42d915
  42e786:	mov    r13,rax
  42e789:	jmp    0x42dad3
  42e78e:	lea    rsi,[r13+0x10]
  42e792:	lea    rbx,[r13+0x18]
  42e796:	xor    r9d,r9d
  42e799:	mov    rcx,r15
  42e79c:	mov    r8,rbx
  42e79f:	mov    rdx,rsi
  42e7a2:	call   0x426c60
  42e7a7:	test   eax,eax
  42e7a9:	mov    DWORD PTR [rsp+0xd0],eax
  42e7b0:	jne    0x42e8f5
  42e7b6:	movzx  eax,BYTE PTR [r13+0x68]
  42e7bb:	test   al,0x40
  42e7bd:	jne    0x42e812
  42e7bf:	mov    BYTE PTR [rsp+0x30],0x0
  42e7c4:	jmp    0x42d8fb
  42e7c9:	mov    rcx,rdi
  42e7cc:	mov    DWORD PTR [rsp+0xb0],0xc
  42e7d7:	jmp    0x42d89b
  42e7dc:	mov    eax,0x8
  42e7e1:	jmp    0x42d5c8
  42e7e6:	mov    rdx,QWORD PTR [r13+0x10]
  42e7ea:	mov    r9,QWORD PTR [rsp+0x78]
  42e7ef:	lea    r8,[r13+0x18]
  42e7f3:	mov    rcx,r15
  42e7f6:	call   0x429b40
  42e7fb:	test   rax,rax
  42e7fe:	je     0x42d903
  42e804:	jmp    0x42e765
  42e809:	mov    r13,QWORD PTR [rbx+0x58]
  42e80d:	jmp    0x42d860
  42e812:	mov    r8,rbx
  42e815:	mov    rdx,rsi
  42e818:	mov    rcx,r15
  42e81b:	call   0x42c6e0
  42e820:	test   eax,eax
  42e822:	mov    DWORD PTR [rsp+0xd0],eax
  42e829:	jne    0x42e8f5
  42e82f:	movzx  eax,BYTE PTR [r13+0x68]
  42e834:	jmp    0x42e7bf
  42e836:	test   rax,rax
  42e839:	mov    rbx,rax
  42e83c:	jne    0x42d9bf
  42e842:	jmp    0x42dab5
  42e847:	nop    WORD PTR [rax+rax*1+0x0]
  42e850:	mov    eax,r14d
  42e853:	mov    rdi,rbp
  42e856:	jmp    0x42e074
  42e85b:	xor    ecx,ecx
  42e85d:	jmp    0x42d890
  42e862:	xor    edi,edi
  42e864:	jmp    0x42e65a
  42e869:	mov    DWORD PTR [rsp+0xb0],eax
  42e870:	mov    rcx,QWORD PTR [rsp+0x1d8]
  42e878:	jmp    0x42d89b
  42e87d:	mov    r13,QWORD PTR [rbx+0x60]
  42e881:	jmp    0x42d860
  42e886:	mov    rbx,rdi
  42e889:	mov    rdi,rbp
  42e88c:	mov    rbp,r12
  42e88f:	mov    r12,QWORD PTR [rsp+0x40]
  42e894:	mov    r9,rbp
  42e897:	mov    r8,rdi
  42e89a:	mov    rdx,rsi
  42e89d:	movzx  r14d,BYTE PTR [rsp+0x30]
  42e8a3:	mov    rcx,r12
  42e8a6:	call   0x427ed0
  42e8ab:	mov    rcx,rdi
  42e8ae:	mov    DWORD PTR [rsp+0x30],eax
  42e8b2:	call   0x43a748
  42e8b7:	mov    eax,DWORD PTR [rsp+0x30]
  42e8bb:	test   eax,eax
  42e8bd:	je     0x42e1a0
  42e8c3:	jmp    0x42e072
  42e8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42e8d0:	cmp    rcx,rbx
  42e8d3:	je     0x42e8fd
  42e8d5:	mov    rcx,QWORD PTR [r10+rcx*8]
  42e8d9:	mov    rsi,QWORD PTR [rax]
  42e8dc:	mov    QWORD PTR [rax-0x8],rcx
  42e8e0:	mov    r8,r11
  42e8e3:	cmp    rbx,rsi
  42e8e6:	je     0x42e2f4
  42e8ec:	mov    r8,QWORD PTR [r10+rsi*8]
  42e8f0:	jmp    0x42e2f4
  42e8f5:	movsxd r13,eax
  42e8f8:	jmp    0x42dad3
  42e8fd:	mov    rcx,r11
  42e900:	jmp    0x42e8d9
  42e902:	nop    DWORD PTR [rax+0x0]
  42e906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e910:	push   r12
  42e912:	push   rbp
  42e913:	push   rdi
  42e914:	push   rsi
  42e915:	push   rbx
  42e916:	sub    rsp,0x30
  42e91a:	cmp    DWORD PTR [rdx+0x90],0x1
  42e921:	mov    edi,DWORD PTR [rsp+0x88]
  42e928:	mov    rbp,QWORD PTR [rdx+0x48]
  42e92c:	je     0x42e992
  42e92e:	mov    r10,QWORD PTR [rdx+0x30]
  42e932:	lea    r11,[rbp+0x1]
  42e936:	cmp    r10,r11
  42e939:	jle    0x42e992
  42e93b:	mov    rbx,QWORD PTR [rdx+0x10]
  42e93f:	lea    rax,[r11+r11*1]
  42e943:	cmp    WORD PTR [rbx+r11*2],0xffff
  42e949:	jne    0x42e992
  42e94b:	lea    rbx,[rbx+rax*1-0x2]
  42e950:	sub    r10,rbp
  42e953:	mov    eax,0x2
  42e958:	jmp    0x42e96c
  42e95a:	nop    WORD PTR [rax+rax*1+0x0]
  42e960:	add    rax,0x1
  42e964:	cmp    WORD PTR [rbx+rax*2-0x2],0xffff
  42e96a:	jne    0x42e977
  42e96c:	cmp    rax,r10
  42e96f:	mov    r11d,eax
  42e972:	mov    rsi,rax
  42e975:	jne    0x42e960
  42e977:	cmp    r11d,0x1
  42e97b:	je     0x42e992
  42e97d:	movzx  eax,WORD PTR [rbx]
  42e980:	mov    DWORD PTR [rcx],0x1
  42e986:	mov    WORD PTR [rcx+0x8],ax
  42e98a:	add    QWORD PTR [rdx+0x48],rsi
  42e98e:	xor    eax,eax
  42e990:	jmp    0x42e9fe
  42e992:	movsxd r9,r9d
  42e995:	lea    rax,[rbp+r9*1+0x0]
  42e99a:	mov    QWORD PTR [rdx+0x48],rax
  42e99e:	movzx  r10d,BYTE PTR [r8+0x8]
  42e9a3:	mov    r9d,r10d
  42e9a6:	and    r9d,0xfffffffb
  42e9aa:	cmp    r9b,0x1a
  42e9ae:	je     0x42ea09
  42e9b0:	cmp    r10b,0x1c
  42e9b4:	je     0x42ea09
  42e9b6:	test   dil,dil
  42e9b9:	mov    rsi,r8
  42e9bc:	mov    rbx,rcx
  42e9bf:	jne    0x42e9f0
  42e9c1:	cmp    r10b,0x16
  42e9c5:	jne    0x42e9f0
  42e9c7:	mov    r8d,DWORD PTR [rsp+0x80]
  42e9cf:	lea    rcx,[rsp+0x20]
  42e9d4:	call   0x424730
  42e9d9:	cmp    BYTE PTR [rsp+0x28],0x15
  42e9de:	je     0x42e9f0
  42e9e0:	mov    eax,0xb
  42e9e5:	jmp    0x42e9fe
  42e9e7:	nop    WORD PTR [rax+rax*1+0x0]
  42e9f0:	mov    DWORD PTR [rbx],0x0
  42e9f6:	movzx  eax,BYTE PTR [rsi]
  42e9f9:	mov    BYTE PTR [rbx+0x8],al
  42e9fc:	xor    eax,eax
  42e9fe:	add    rsp,0x30
  42ea02:	pop    rbx
  42ea03:	pop    rsi
  42ea04:	pop    rdi
  42ea05:	pop    rbp
  42ea06:	pop    r12
  42ea08:	ret    
  42ea09:	mov    rbx,QWORD PTR [rdx+0x68]
  42ea0d:	xor    r9d,r9d
  42ea10:	movzx  esi,BYTE PTR [r8]
  42ea14:	cmp    rax,rbx
  42ea17:	jl     0x42ea4e
  42ea19:	mov    eax,0x7
  42ea1e:	jmp    0x42e9fe
  42ea20:	mov    rax,QWORD PTR [rdx+0x8]
  42ea24:	cmp    BYTE PTR [rax+r10*1],0x5d
  42ea29:	je     0x42eaf9
  42ea2f:	mov    rax,QWORD PTR [rcx+0x8]
  42ea33:	mov    BYTE PTR [rax+r9*1],r11b
  42ea37:	add    r9,0x1
  42ea3b:	cmp    r9,0x20
  42ea3f:	je     0x42ea19
  42ea41:	movzx  r10d,BYTE PTR [r8+0x8]
  42ea46:	mov    rax,QWORD PTR [rdx+0x48]
  42ea4a:	mov    rbx,QWORD PTR [rdx+0x68]
  42ea4e:	cmp    r10b,0x1e
  42ea52:	movsxd rdi,r9d
  42ea55:	je     0x42ea74
  42ea57:	mov    r11,QWORD PTR [rdx+0x8]
  42ea5b:	lea    r10,[rax+0x1]
  42ea5f:	mov    QWORD PTR [rdx+0x48],r10
  42ea63:	movzx  r11d,BYTE PTR [r11+rax*1]
  42ea68:	cmp    rbx,r10
  42ea6b:	jle    0x42ea19
  42ea6d:	cmp    sil,r11b
  42ea70:	jne    0x42ea2f
  42ea72:	jmp    0x42ea20
  42ea74:	cmp    BYTE PTR [rdx+0x8b],0x0
  42ea7b:	je     0x42ea57
  42ea7d:	cmp    BYTE PTR [rdx+0x8c],0x0
  42ea84:	je     0x42eb2b
  42ea8a:	mov    rbp,QWORD PTR [rdx+0x30]
  42ea8e:	cmp    rbp,rax
  42ea91:	je     0x42ea9f
  42ea93:	mov    r10,QWORD PTR [rdx+0x10]
  42ea97:	cmp    WORD PTR [r10+rax*2],0xffff
  42ea9d:	je     0x42ea57
  42ea9f:	mov    r10,QWORD PTR [rdx+0x18]
  42eaa3:	mov    r10,QWORD PTR [r10+rax*8]
  42eaa7:	add    r10,QWORD PTR [rdx]
  42eaaa:	add    r10,QWORD PTR [rdx+0x28]
  42eaae:	movzx  r11d,BYTE PTR [r10]
  42eab2:	test   r11b,r11b
  42eab5:	js     0x42ea57
  42eab7:	cmp    DWORD PTR [rdx+0x90],0x1
  42eabe:	lea    r10,[rax+0x1]
  42eac2:	je     0x42eaf0
  42eac4:	cmp    rbp,r10
  42eac7:	jle    0x42eaf0
  42eac9:	mov    r12,QWORD PTR [rdx+0x10]
  42eacd:	cmp    WORD PTR [r12+r10*2],0xffff
  42ead3:	jne    0x42eaf0
  42ead5:	add    rax,0x2
  42ead9:	jmp    0x42eae8
  42eadb:	add    rax,0x1
  42eadf:	cmp    WORD PTR [r12+rax*2-0x2],0xffff
  42eae6:	jne    0x42eaf0
  42eae8:	cmp    rax,rbp
  42eaeb:	mov    r10,rax
  42eaee:	jne    0x42eadb
  42eaf0:	mov    QWORD PTR [rdx+0x48],r10
  42eaf4:	jmp    0x42ea68
  42eaf9:	add    r10,0x1
  42eafd:	mov    QWORD PTR [rdx+0x48],r10
  42eb01:	mov    rax,QWORD PTR [rcx+0x8]
  42eb05:	mov    BYTE PTR [rax+rdi*1],0x0
  42eb09:	movzx  eax,BYTE PTR [r8+0x8]
  42eb0e:	cmp    al,0x1c
  42eb10:	je     0x42eb51
  42eb12:	cmp    al,0x1e
  42eb14:	je     0x42eb44
  42eb16:	cmp    al,0x1a
  42eb18:	jne    0x42e98e
  42eb1e:	mov    DWORD PTR [rcx],0x3
  42eb24:	xor    eax,eax
  42eb26:	jmp    0x42e9fe
  42eb2b:	lea    r10,[rax+0x1]
  42eb2f:	add    rax,QWORD PTR [rdx]
  42eb32:	mov    r11,QWORD PTR [rdx+0x28]
  42eb36:	mov    QWORD PTR [rdx+0x48],r10
  42eb3a:	movzx  r11d,BYTE PTR [rax+r11*1]
  42eb3f:	jmp    0x42ea68
  42eb44:	mov    DWORD PTR [rcx],0x4
  42eb4a:	xor    eax,eax
  42eb4c:	jmp    0x42e9fe
  42eb51:	mov    DWORD PTR [rcx],0x2
  42eb57:	xor    eax,eax
  42eb59:	jmp    0x42e9fe
  42eb5e:	xchg   ax,ax
  42eb60:	push   r12
  42eb62:	push   rbp
  42eb63:	push   rdi
  42eb64:	push   rsi
  42eb65:	push   rbx
  42eb66:	sub    rsp,0x30
  42eb6a:	mov    rax,QWORD PTR [rdx+0x48]
  42eb6e:	cmp    QWORD PTR [rdx+0x68],rax
  42eb72:	jle    0x42ec30
  42eb78:	mov    r9,QWORD PTR [rdx+0x8]
  42eb7c:	movzx  r12d,BYTE PTR [rcx+0xa]
  42eb81:	movzx  esi,BYTE PTR [r9+rax*1]
  42eb86:	and    r12d,0xffffff9f
  42eb8a:	mov    BYTE PTR [rcx+0xa],r12b
  42eb8e:	mov    BYTE PTR [rcx],sil
  42eb91:	mov    eax,DWORD PTR [rdx+0x90]
  42eb97:	cmp    eax,0x1
  42eb9a:	jle    0x42ebb6
  42eb9c:	mov    r9,QWORD PTR [rdx+0x48]
  42eba0:	cmp    r9,QWORD PTR [rdx+0x30]
  42eba4:	je     0x42ebb6
  42eba6:	mov    r10,QWORD PTR [rdx+0x10]
  42ebaa:	cmp    WORD PTR [r10+r9*2],0xffff
  42ebb0:	je     0x42ecd4
  42ebb6:	cmp    sil,0x5c
  42ebba:	mov    ebp,r8d
  42ebbd:	mov    rbx,rdx
  42ebc0:	mov    rdi,rcx
  42ebc3:	je     0x42ec41
  42ebc5:	mov    BYTE PTR [rcx+0x8],0x1
  42ebc9:	cmp    DWORD PTR [rdx+0x90],0x1
  42ebd0:	jle    0x42ecf0
  42ebd6:	mov    rdx,QWORD PTR [rdx+0x48]
  42ebda:	mov    rax,QWORD PTR [rbx+0x10]
  42ebde:	movzx  ecx,WORD PTR [rax+rdx*2]
  42ebe2:	mov    edx,0x107
  42ebe7:	mov    r12d,ecx
  42ebea:	call   0x43a6e0
  42ebef:	test   eax,eax
  42ebf1:	setne  dl
  42ebf4:	cmp    r12w,0x5f
  42ebf9:	sete   al
  42ebfc:	or     eax,edx
  42ebfe:	movzx  edx,BYTE PTR [rdi+0xa]
  42ec02:	shl    eax,0x6
  42ec05:	and    edx,0xffffffbf
  42ec08:	or     eax,edx
  42ec0a:	mov    BYTE PTR [rdi+0xa],al
  42ec0d:	sub    esi,0xa
  42ec10:	cmp    sil,0x73
  42ec14:	ja     0x42eeb0
  42ec1a:	lea    rax,[rip+0x195d3]        # 0x4481f4
  42ec21:	movzx  esi,sil
  42ec25:	movsxd rdx,DWORD PTR [rax+rsi*4]
  42ec29:	add    rax,rdx
  42ec2c:	jmp    rax
  42ec2e:	xchg   ax,ax
  42ec30:	mov    BYTE PTR [rcx+0x8],0x2
  42ec34:	xor    eax,eax
  42ec36:	add    rsp,0x30
  42ec3a:	pop    rbx
  42ec3b:	pop    rsi
  42ec3c:	pop    rdi
  42ec3d:	pop    rbp
  42ec3e:	pop    r12
  42ec40:	ret    
  42ec41:	mov    rdx,QWORD PTR [rdx+0x48]
  42ec45:	lea    rcx,[rdx+0x1]
  42ec49:	cmp    rcx,QWORD PTR [rbx+0x58]
  42ec4d:	jge    0x42ed20
  42ec53:	cmp    BYTE PTR [rbx+0x8b],0x0
  42ec5a:	jne    0x42f164
  42ec60:	mov    rax,QWORD PTR [rbx+0x8]
  42ec64:	movzx  esi,BYTE PTR [rax+rdx*1+0x1]
  42ec69:	mov    BYTE PTR [rdi],sil
  42ec6c:	mov    BYTE PTR [rdi+0x8],0x1
  42ec70:	cmp    DWORD PTR [rbx+0x90],0x1
  42ec77:	jle    0x42f120
  42ec7d:	mov    rax,QWORD PTR [rbx+0x48]
  42ec81:	mov    rdx,QWORD PTR [rbx+0x10]
  42ec85:	add    rax,0x1
  42ec89:	movzx  ecx,WORD PTR [rdx+rax*2]
  42ec8d:	mov    edx,0x107
  42ec92:	mov    ebx,ecx
  42ec94:	call   0x43a6e0
  42ec99:	cmp    bx,0x5f
  42ec9d:	sete   dl
  42eca0:	test   eax,eax
  42eca2:	setne  al
  42eca5:	or     eax,edx
  42eca7:	movzx  edx,BYTE PTR [rdi+0xa]
  42ecab:	shl    eax,0x6
  42ecae:	and    edx,0xffffffbf
  42ecb1:	or     eax,edx
  42ecb3:	mov    BYTE PTR [rdi+0xa],al
  42ecb6:	lea    eax,[rsi-0x27]
  42ecb9:	cmp    al,0x56
  42ecbb:	ja     0x42f0ef
  42ecc1:	lea    rdx,[rip+0x196fc]        # 0x4483c4
  42ecc8:	movzx  eax,al
  42eccb:	movsxd rax,DWORD PTR [rdx+rax*4]
  42eccf:	add    rdx,rax
  42ecd2:	jmp    rdx
  42ecd4:	or     r12d,0x20
  42ecd8:	mov    BYTE PTR [rcx+0x8],0x1
  42ecdc:	mov    eax,0x1
  42ece1:	mov    BYTE PTR [rcx+0xa],r12b
  42ece5:	jmp    0x42ec36
  42ecea:	nop    WORD PTR [rax+rax*1+0x0]
  42ecf0:	movzx  ecx,sil
  42ecf4:	call   QWORD PTR [rip+0x25d56]        # 0x454a50
  42ecfa:	test   eax,eax
  42ecfc:	setne  dl
  42ecff:	cmp    sil,0x5f
  42ed03:	sete   al
  42ed06:	or     eax,edx
  42ed08:	shl    eax,0x6
  42ed0b:	or     r12d,eax
  42ed0e:	mov    BYTE PTR [rdi+0xa],r12b
  42ed12:	jmp    0x42ec0d
  42ed17:	nop    WORD PTR [rax+rax*1+0x0]
  42ed20:	mov    BYTE PTR [rdi+0x8],0x24
  42ed24:	mov    eax,0x1
  42ed29:	jmp    0x42ec36
  42ed2e:	xchg   ax,ax
  42ed30:	and    ebp,0x1200
  42ed36:	mov    eax,0x1
  42ed3b:	cmp    ebp,0x1200
  42ed41:	jne    0x42ec36
  42ed47:	mov    BYTE PTR [rdi+0x8],0x18
  42ed4b:	jmp    0x42ec36
  42ed50:	and    ebp,0x800
  42ed56:	mov    eax,0x1
  42ed5b:	je     0x42ec36
  42ed61:	mov    BYTE PTR [rdi+0x8],0xa
  42ed65:	mov    eax,0x1
  42ed6a:	jmp    0x42ec36
  42ed6f:	nop
  42ed70:	test   bpl,0x8
  42ed74:	jne    0x42edb3
  42ed76:	mov    rax,QWORD PTR [rbx+0x48]
  42ed7a:	add    rax,0x1
  42ed7e:	cmp    rax,QWORD PTR [rbx+0x58]
  42ed82:	je     0x42edb3
  42ed84:	lea    rcx,[rsp+0x20]
  42ed89:	mov    rdx,rbx
  42ed8c:	mov    QWORD PTR [rbx+0x48],rax
  42ed90:	mov    r8d,ebp
  42ed93:	call   0x42eb60
  42ed98:	movzx  eax,BYTE PTR [rsp+0x28]
  42ed9d:	sub    QWORD PTR [rbx+0x48],0x1
  42eda2:	lea    edx,[rax-0x9]
  42eda5:	mov    eax,0x1
  42edaa:	cmp    dl,0x1
  42edad:	ja     0x42ec36
  42edb3:	mov    BYTE PTR [rdi+0x8],0xc
  42edb7:	mov    DWORD PTR [rdi],0x20
  42edbd:	mov    eax,0x1
  42edc2:	jmp    0x42ec36
  42edc7:	nop    WORD PTR [rax+rax*1+0x0]
  42edd0:	and    ebp,0x2000
  42edd6:	mov    eax,0x1
  42eddb:	je     0x42ec36
  42ede1:	mov    BYTE PTR [rdi+0x8],0x8
  42ede5:	jmp    0x42ec36
  42edea:	nop    WORD PTR [rax+rax*1+0x0]
  42edf0:	and    ebp,0x2000
  42edf6:	mov    eax,0x1
  42edfb:	je     0x42ec36
  42ee01:	mov    BYTE PTR [rdi+0x8],0x9
  42ee05:	jmp    0x42ec36
  42ee0a:	nop    WORD PTR [rax+rax*1+0x0]
  42ee10:	mov    BYTE PTR [rdi+0x8],0xb
  42ee14:	mov    eax,0x1
  42ee19:	jmp    0x42ec36
  42ee1e:	xchg   ax,ax
  42ee20:	and    ebp,0x402
  42ee26:	mov    eax,0x1
  42ee2b:	jne    0x42ec36
  42ee31:	mov    BYTE PTR [rdi+0x8],0x12
  42ee35:	jmp    0x42ec36
  42ee3a:	nop    WORD PTR [rax+rax*1+0x0]
  42ee40:	mov    BYTE PTR [rdi+0x8],0x5
  42ee44:	mov    eax,0x1
  42ee49:	jmp    0x42ec36
  42ee4e:	xchg   ax,ax
  42ee50:	and    ebp,0x402
  42ee56:	mov    eax,0x1
  42ee5b:	jne    0x42ec36
  42ee61:	mov    BYTE PTR [rdi+0x8],0x13
  42ee65:	jmp    0x42ec36
  42ee6a:	nop    WORD PTR [rax+rax*1+0x0]
  42ee70:	mov    BYTE PTR [rdi+0x8],0x14
  42ee74:	mov    eax,0x1
  42ee79:	jmp    0x42ec36
  42ee7e:	xchg   ax,ax
  42ee80:	test   ebp,0x800008
  42ee86:	jne    0x42f150
  42ee8c:	mov    rax,QWORD PTR [rbx+0x48]
  42ee90:	test   rax,rax
  42ee93:	je     0x42f150
  42ee99:	mov    rdx,QWORD PTR [rbx+0x8]
  42ee9d:	cmp    BYTE PTR [rdx+rax*1-0x1],0xa
  42eea2:	jne    0x42eeb0
  42eea4:	and    ebp,0x800
  42eeaa:	jne    0x42f150
  42eeb0:	mov    eax,0x1
  42eeb5:	jmp    0x42ec36
  42eeba:	nop    WORD PTR [rax+rax*1+0x0]
  42eec0:	and    ebp,0x1200
  42eec6:	mov    eax,0x1
  42eecb:	cmp    ebp,0x1200
  42eed1:	jne    0x42ec36
  42eed7:	mov    BYTE PTR [rdi+0x8],0x17
  42eedb:	jmp    0x42ec36
  42eee0:	and    ebp,0x8400
  42eee6:	cmp    ebp,0x8000
  42eeec:	jne    0x42eeb0
  42eeee:	jmp    0x42ed61
  42eef3:	and    ebp,0x1200
  42eef9:	mov    eax,0x2
  42eefe:	cmp    ebp,0x200
  42ef04:	jne    0x42ec36
  42ef0a:	jmp    0x42ed47
  42ef0f:	and    ebp,0x8400
  42ef15:	mov    eax,0x2
  42ef1a:	jne    0x42ec36
  42ef20:	mov    BYTE PTR [rdi+0x8],0xa
  42ef24:	jmp    0x42ec36
  42ef29:	and    ebp,0x1200
  42ef2f:	mov    eax,0x2
  42ef34:	cmp    ebp,0x200
  42ef3a:	jne    0x42ec36
  42ef40:	jmp    0x42eed7
  42ef42:	and    ebp,0x80000
  42ef48:	mov    eax,0x2
  42ef4d:	jne    0x42ec36
  42ef53:	mov    BYTE PTR [rdi+0x8],0x20
  42ef57:	jmp    0x42ec36
  42ef5c:	and    ebp,0x80000
  42ef62:	mov    eax,0x2
  42ef67:	jne    0x42ec36
  42ef6d:	mov    BYTE PTR [rdi+0x8],0x22
  42ef71:	jmp    0x42ec36
  42ef76:	and    ebp,0x80000
  42ef7c:	mov    eax,0x2
  42ef81:	jne    0x42ec36
  42ef87:	mov    BYTE PTR [rdi+0x8],0xc
  42ef8b:	mov    DWORD PTR [rdi],0x100
  42ef91:	jmp    0x42ec36
  42ef96:	and    ebp,0x80000
  42ef9c:	mov    eax,0x2
  42efa1:	jne    0x42ec36
  42efa7:	mov    BYTE PTR [rdi+0x8],0xc
  42efab:	mov    DWORD PTR [rdi],0x40
  42efb1:	jmp    0x42ec36
  42efb6:	and    ebp,0x80000
  42efbc:	mov    eax,0x2
  42efc1:	jne    0x42ec36
  42efc7:	mov    BYTE PTR [rdi+0x8],0x21
  42efcb:	jmp    0x42ec36
  42efd0:	and    ebp,0x80000
  42efd6:	mov    eax,0x2
  42efdb:	jne    0x42ec36
  42efe1:	mov    BYTE PTR [rdi+0x8],0x23
  42efe5:	jmp    0x42ec36
  42efea:	and    ebp,0x80000
  42eff0:	mov    eax,0x2
  42eff5:	jne    0x42ec36
  42effb:	mov    BYTE PTR [rdi+0x8],0xc
  42efff:	mov    DWORD PTR [rdi],0x200
  42f005:	jmp    0x42ec36
  42f00a:	and    ebp,0x402
  42f010:	mov    eax,0x2
  42f015:	cmp    ebp,0x2
  42f018:	jne    0x42ec36
  42f01e:	jmp    0x42ee61
  42f023:	and    ebp,0x80000
  42f029:	mov    eax,0x2
  42f02e:	jne    0x42ec36
  42f034:	mov    BYTE PTR [rdi+0x8],0xc
  42f038:	mov    DWORD PTR [rdi],0x9
  42f03e:	jmp    0x42ec36
  42f043:	and    ebp,0x80000
  42f049:	mov    eax,0x2
  42f04e:	jne    0x42ec36
  42f054:	mov    BYTE PTR [rdi+0x8],0xc
  42f058:	mov    DWORD PTR [rdi],0x6
  42f05e:	jmp    0x42ec36
  42f063:	and    ebp,0x4000
  42f069:	mov    eax,0x2
  42f06e:	jne    0x42ec36
  42f074:	movzx  edx,sil
  42f078:	mov    BYTE PTR [rdi+0x8],0x4
  42f07c:	sub    edx,0x31
  42f07f:	movsxd rdx,edx
  42f082:	mov    QWORD PTR [rdi],rdx
  42f085:	jmp    0x42ec36
  42f08a:	and    ebp,0x402
  42f090:	mov    eax,0x2
  42f095:	cmp    ebp,0x2
  42f098:	jne    0x42ec36
  42f09e:	jmp    0x42ee31
  42f0a3:	and    ebp,0x2000
  42f0a9:	mov    eax,0x2
  42f0ae:	jne    0x42ec36
  42f0b4:	jmp    0x42ee01
  42f0b9:	and    ebp,0x2000
  42f0bf:	mov    eax,0x2
  42f0c4:	jne    0x42ec36
  42f0ca:	jmp    0x42ede1
  42f0cf:	and    ebp,0x80000
  42f0d5:	mov    eax,0x2
  42f0da:	jne    0x42ec36
  42f0e0:	mov    BYTE PTR [rdi+0x8],0xc
  42f0e4:	mov    DWORD PTR [rdi],0x80
  42f0ea:	jmp    0x42ec36
  42f0ef:	mov    eax,0x2
  42f0f4:	jmp    0x42ec36
  42f0f9:	mov    rax,rcx
  42f0fc:	add    rax,QWORD PTR [rbx]
  42f0ff:	add    rax,QWORD PTR [rbx+0x28]
  42f103:	movzx  esi,BYTE PTR [rax]
  42f106:	mov    BYTE PTR [rdi+0x8],0x1
  42f10a:	mov    BYTE PTR [rdi],sil
  42f10d:	cmp    DWORD PTR [rbx+0x90],0x1
  42f114:	jg     0x42ec7d
  42f11a:	nop    WORD PTR [rax+rax*1+0x0]
  42f120:	movzx  ecx,sil
  42f124:	call   QWORD PTR [rip+0x25926]        # 0x454a50
  42f12a:	test   eax,eax
  42f12c:	setne  dl
  42f12f:	cmp    sil,0x5f
  42f133:	sete   al
  42f136:	or     eax,edx
  42f138:	shl    eax,0x6
  42f13b:	or     r12d,eax
  42f13e:	mov    BYTE PTR [rdi+0xa],r12b
  42f142:	jmp    0x42ecb6
  42f147:	nop    WORD PTR [rax+rax*1+0x0]
  42f150:	mov    BYTE PTR [rdi+0x8],0xc
  42f154:	mov    DWORD PTR [rdi],0x10
  42f15a:	mov    eax,0x1
  42f15f:	jmp    0x42ec36
  42f164:	cmp    eax,0x1
  42f167:	jle    0x42f193
  42f169:	mov    rax,QWORD PTR [rbx+0x10]
  42f16d:	lea    r9,[rcx+rcx*1]
  42f171:	cmp    WORD PTR [rax+rcx*2],0xffff
  42f176:	je     0x42ec60
  42f17c:	lea    r8,[rdx+0x2]
  42f180:	cmp    QWORD PTR [rbx+0x30],r8
  42f184:	je     0x42f193
  42f186:	cmp    WORD PTR [rax+r9*1+0x2],0xffff
  42f18d:	je     0x42ec60
  42f193:	cmp    BYTE PTR [rbx+0x8c],0x0
  42f19a:	je     0x42f0f9
  42f1a0:	mov    rax,QWORD PTR [rbx+0x18]
  42f1a4:	mov    rax,QWORD PTR [rax+rcx*8]
  42f1a8:	add    rax,QWORD PTR [rbx]
  42f1ab:	add    rax,QWORD PTR [rbx+0x28]
  42f1af:	movzx  esi,BYTE PTR [rax]
  42f1b2:	test   sil,sil
  42f1b5:	js     0x42ec60
  42f1bb:	jmp    0x42ec69
  42f1c0:	push   r12
  42f1c2:	push   rbp
  42f1c3:	push   rdi
  42f1c4:	push   rsi
  42f1c5:	push   rbx
  42f1c6:	sub    rsp,0x20
  42f1ca:	mov    rdi,0xffffffffffffffff
  42f1d1:	mov    r12d,0x8000
  42f1d7:	mov    rsi,rcx
  42f1da:	mov    rbx,rdx
  42f1dd:	mov    ebp,r8d
  42f1e0:	mov    r8d,ebp
  42f1e3:	mov    rdx,rsi
  42f1e6:	mov    rcx,rbx
  42f1e9:	call   0x42eb60
  42f1ee:	cdqe   
  42f1f0:	add    QWORD PTR [rsi+0x48],rax
  42f1f4:	movzx  r9d,BYTE PTR [rbx+0x8]
  42f1f9:	movzx  eax,BYTE PTR [rbx]
  42f1fc:	cmp    r9b,0x2
  42f200:	je     0x42f250
  42f202:	cmp    r9b,0x18
  42f206:	je     0x42f270
  42f208:	cmp    al,0x2c
  42f20a:	je     0x42f270
  42f20c:	cmp    r9b,0x1
  42f210:	je     0x42f220
  42f212:	mov    rdi,0xfffffffffffffffe
  42f219:	jmp    0x42f1e0
  42f21b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f220:	cmp    rdi,0xfffffffffffffffe
  42f224:	je     0x42f212
  42f226:	lea    edx,[rax-0x30]
  42f229:	cmp    dl,0x9
  42f22c:	ja     0x42f212
  42f22e:	cmp    rdi,0xffffffffffffffff
  42f232:	je     0x42f262
  42f234:	lea    rdx,[rdi+rdi*4]
  42f238:	lea    rdx,[rax+rdx*2]
  42f23c:	lea    rdi,[rdx-0x30]
  42f240:	cmp    rdx,0x8030
  42f247:	cmovg  rdi,r12
  42f24b:	jmp    0x42f1e0
  42f24d:	nop    DWORD PTR [rax]
  42f250:	mov    rax,0xfffffffffffffffe
  42f257:	add    rsp,0x20
  42f25b:	pop    rbx
  42f25c:	pop    rsi
  42f25d:	pop    rdi
  42f25e:	pop    rbp
  42f25f:	pop    r12
  42f261:	ret    
  42f262:	movzx  edi,al
  42f265:	sub    edi,0x30
  42f268:	movsxd rdi,edi
  42f26b:	jmp    0x42f1e0
  42f270:	mov    rax,rdi
  42f273:	add    rsp,0x20
  42f277:	pop    rbx
  42f278:	pop    rsi
  42f279:	pop    rdi
  42f27a:	pop    rbp
  42f27b:	pop    r12
  42f27d:	ret    
  42f27e:	xchg   ax,ax
  42f280:	push   r15
  42f282:	push   r14
  42f284:	push   r13
  42f286:	push   r12
  42f288:	push   rbp
  42f289:	push   rdi
  42f28a:	push   rsi
  42f28b:	push   rbx
  42f28c:	sub    rsp,0x148
  42f293:	movaps XMMWORD PTR [rsp+0x130],xmm7
  42f29b:	movzx  r10d,BYTE PTR [r8+0x8]
  42f2a0:	mov    rax,QWORD PTR [rdx]
  42f2a3:	mov    QWORD PTR [rsp+0x58],rax
  42f2a8:	cmp    r10b,0x24
  42f2ac:	ja     0x42f340
  42f2b2:	lea    rax,[rip+0x1926f]        # 0x448528
  42f2b9:	mov    rbx,rdx
  42f2bc:	movzx  edx,r10b
  42f2c0:	mov    DWORD PTR [rsp+0x54],r9d
  42f2c5:	mov    QWORD PTR [rsp+0x40],r8
  42f2ca:	mov    r15,rcx
  42f2cd:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42f2d1:	add    rax,rdx
  42f2d4:	jmp    rax
  42f2d6:	mov    rbx,rdi
  42f2d9:	mov    r15,QWORD PTR [rsp+0x68]
  42f2de:	mov    rdi,QWORD PTR [rsp+0x60]
  42f2e3:	mov    r14,rax
  42f2e6:	cmp    rbx,rdi
  42f2e9:	je     0x42f594
  42f2ef:	mov    rdx,QWORD PTR [rsp+0x58]
  42f2f4:	mov    rcx,rsi
  42f2f7:	call   0x426910
  42f2fc:	test   rax,rax
  42f2ff:	mov    rsi,rax
  42f302:	jne    0x42f479
  42f308:	nop    DWORD PTR [rax+rax*1+0x0]
  42f310:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f318:	mov    DWORD PTR [rax],0xc
  42f31e:	mov    rax,QWORD PTR [rsp+0x48]
  42f323:	test   rax,rax
  42f326:	je     0x42f340
  42f328:	lea    rdx,[rip+0xffffffffffff6591]        # 0x4258c0
  42f32f:	xor    r8d,r8d
  42f332:	mov    rcx,rax
  42f335:	call   0x424b00
  42f33a:	nop    WORD PTR [rax+rax*1+0x0]
  42f340:	xor    eax,eax
  42f342:	movaps xmm7,XMMWORD PTR [rsp+0x130]
  42f34a:	add    rsp,0x148
  42f351:	pop    rbx
  42f352:	pop    rsi
  42f353:	pop    rdi
  42f354:	pop    rbp
  42f355:	pop    r12
  42f357:	pop    r13
  42f359:	pop    r14
  42f35b:	pop    r15
  42f35d:	ret    
  42f35e:	test   DWORD PTR [rsp+0x54],0x1000000
  42f366:	jne    0x42f83d
  42f36c:	mov    eax,DWORD PTR [rsp+0x54]
  42f370:	test   al,0x20
  42f372:	jne    0x42f83d
  42f378:	test   al,0x10
  42f37a:	jne    0x4300e2
  42f380:	cmp    r10b,0x9
  42f384:	je     0x42fe7f
  42f38a:	mov    rdi,QWORD PTR [rsp+0x58]
  42f38f:	mov    rax,QWORD PTR [rsp+0x40]
  42f394:	xor    r9d,r9d
  42f397:	xor    r8d,r8d
  42f39a:	lea    rdx,[rdi+0x80]
  42f3a1:	lea    rcx,[rdi+0x70]
  42f3a5:	mov    BYTE PTR [rax+0x8],0x1
  42f3a9:	mov    QWORD PTR [rsp+0x20],rax
  42f3ae:	call   0x426840
  42f3b3:	test   rax,rax
  42f3b6:	mov    QWORD PTR [rsp+0x48],rax
  42f3bb:	je     0x42fca5
  42f3c1:	mov    rdi,QWORD PTR [rsp+0x40]
  42f3c6:	mov    r8d,DWORD PTR [rsp+0x54]
  42f3cb:	mov    rdx,r15
  42f3ce:	lea    rbp,[rsp+0x110]
  42f3d6:	mov    rcx,rdi
  42f3d9:	call   0x42eb60
  42f3de:	cdqe   
  42f3e0:	add    QWORD PTR [r15+0x48],rax
  42f3e4:	movzx  eax,BYTE PTR [rdi+0x8]
  42f3e8:	mov    rdi,QWORD PTR [rsp+0x58]
  42f3ed:	lea    r13,[rdi+0x70]
  42f3f1:	lea    r12,[rdi+0x80]
  42f3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f400:	cmp    al,0x12
  42f402:	sete   bl
  42f405:	cmp    al,0x17
  42f407:	sete   dl
  42f40a:	cmp    al,0xb
  42f40c:	sete   cl
  42f40f:	or     cl,dl
  42f411:	jne    0x42f41f
  42f413:	lea    ecx,[rax-0x12]
  42f416:	cmp    cl,0x1
  42f419:	ja     0x42f814
  42f41f:	mov    rdi,QWORD PTR [rsp+0x40]
  42f424:	test   dl,dl
  42f426:	mov    rsi,QWORD PTR [r15+0x48]
  42f42a:	movdqu xmm7,XMMWORD PTR [rdi]
  42f42e:	jne    0x42f5e0
  42f434:	mov    r8d,DWORD PTR [rsp+0x54]
  42f439:	mov    rcx,QWORD PTR [rsp+0x40]
  42f43e:	xor    edi,edi
  42f440:	mov    rdx,r15
  42f443:	cmp    al,0x13
  42f445:	movzx  ebx,bl
  42f448:	sete   dil
  42f44c:	call   0x42eb60
  42f451:	cdqe   
  42f453:	add    QWORD PTR [r15+0x48],rax
  42f457:	cmp    QWORD PTR [rsp+0x48],0x0
  42f45d:	lea    rdi,[rdi+rdi*1-0x1]
  42f462:	je     0x42f5c1
  42f468:	xor    r14d,r14d
  42f46b:	test   rbx,rbx
  42f46e:	mov    rsi,QWORD PTR [rsp+0x48]
  42f473:	jg     0x42f670
  42f479:	cmp    BYTE PTR [rsi+0x30],0x11
  42f47d:	je     0x42f650
  42f483:	cmp    rdi,0xffffffffffffffff
  42f487:	mov    r8,rsi
  42f48a:	mov    QWORD PTR [rsp+0x20],rbp
  42f48f:	sete   al
  42f492:	mov    rdx,r12
  42f495:	xor    r9d,r9d
  42f498:	add    eax,0xa
  42f49b:	mov    rcx,r13
  42f49e:	mov    BYTE PTR [rsp+0x118],al
  42f4a5:	call   0x426840
  42f4aa:	test   rax,rax
  42f4ad:	mov    r8,rax
  42f4b0:	je     0x42f310
  42f4b6:	add    rbx,0x2
  42f4ba:	cmp    rdi,rbx
  42f4bd:	jl     0x42f553
  42f4c3:	mov    QWORD PTR [rsp+0x60],r14
  42f4c8:	mov    r14,QWORD PTR [rsp+0x58]
  42f4cd:	mov    QWORD PTR [rsp+0x68],r15
  42f4d2:	mov    r15,rax
  42f4d5:	mov    rcx,rsi
  42f4d8:	mov    rdx,r14
  42f4db:	call   0x426910
  42f4e0:	mov    r8,r15
  42f4e3:	mov    QWORD PTR [rsp+0x20],rbp
  42f4e8:	mov    r9,rax
  42f4eb:	mov    rdx,r12
  42f4ee:	mov    rcx,r13
  42f4f1:	mov    rsi,rax
  42f4f4:	mov    BYTE PTR [rsp+0x118],0x10
  42f4fc:	call   0x426840
  42f501:	test   rax,rax
  42f504:	mov    r8,rax
  42f507:	je     0x42f310
  42f50d:	test   rsi,rsi
  42f510:	je     0x42f310
  42f516:	xor    r9d,r9d
  42f519:	mov    QWORD PTR [rsp+0x20],rbp
  42f51e:	mov    rdx,r12
  42f521:	mov    rcx,r13
  42f524:	mov    BYTE PTR [rsp+0x118],0xa
  42f52c:	call   0x426840
  42f531:	test   rax,rax
  42f534:	mov    r15,rax
  42f537:	je     0x42f310
  42f53d:	add    rbx,0x1
  42f541:	cmp    rdi,rbx
  42f544:	jge    0x42f4d5
  42f546:	mov    r14,QWORD PTR [rsp+0x60]
  42f54b:	mov    r15,QWORD PTR [rsp+0x68]
  42f550:	mov    r8,rax
  42f553:	test   r14,r14
  42f556:	je     0x42f81e
  42f55c:	mov    r9,r8
  42f55f:	mov    QWORD PTR [rsp+0x20],rbp
  42f564:	mov    r8,r14
  42f567:	mov    rdx,r12
  42f56a:	mov    rcx,r13
  42f56d:	mov    BYTE PTR [rsp+0x118],0x10
  42f575:	call   0x426840
  42f57a:	mov    r14,rax
  42f57d:	test   r14,r14
  42f580:	jne    0x42f594
  42f582:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f58a:	mov    eax,DWORD PTR [rax]
  42f58c:	test   eax,eax
  42f58e:	jne    0x42f31e
  42f594:	test   DWORD PTR [rsp+0x54],0x1000000
  42f59c:	mov    rax,QWORD PTR [rsp+0x40]
  42f5a1:	movzx  eax,BYTE PTR [rax+0x8]
  42f5a5:	je     0x42f5b7
  42f5a7:	cmp    al,0x17
  42f5a9:	je     0x42f826
  42f5af:	cmp    al,0xb
  42f5b1:	je     0x42f826
  42f5b7:	mov    QWORD PTR [rsp+0x48],r14
  42f5bc:	jmp    0x42f400
  42f5c1:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f5c9:	mov    eax,DWORD PTR [rax]
  42f5cb:	test   eax,eax
  42f5cd:	jne    0x42f31e
  42f5d3:	xor    r14d,r14d
  42f5d6:	jmp    0x42f594
  42f5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f5e0:	mov    r8d,DWORD PTR [rsp+0x54]
  42f5e5:	mov    rdx,rdi
  42f5e8:	mov    rcx,r15
  42f5eb:	call   0x42f1c0
  42f5f0:	cmp    rax,0xffffffffffffffff
  42f5f4:	mov    rdi,rax
  42f5f7:	je     0x42f760
  42f5fd:	cmp    rax,0xfffffffffffffffe
  42f601:	je     0x42f61f
  42f603:	mov    rax,QWORD PTR [rsp+0x40]
  42f608:	mov    rbx,rdi
  42f60b:	movzx  eax,BYTE PTR [rax+0x8]
  42f60f:	cmp    al,0x18
  42f611:	je     0x42f6f0
  42f617:	cmp    al,0x1
  42f619:	je     0x42f7e5
  42f61f:	test   DWORD PTR [rsp+0x54],0x200000
  42f627:	je     0x43014b
  42f62d:	mov    rax,QWORD PTR [rsp+0x40]
  42f632:	mov    QWORD PTR [r15+0x48],rsi
  42f636:	mov    r14,QWORD PTR [rsp+0x48]
  42f63b:	movups XMMWORD PTR [rax],xmm7
  42f63e:	mov    BYTE PTR [rax+0x8],0x1
  42f642:	jmp    0x42f57d
  42f647:	nop    WORD PTR [rax+rax*1+0x0]
  42f650:	mov    r8,QWORD PTR [rsi+0x28]
  42f654:	lea    rdx,[rip+0xffffffffffff51f5]        # 0x424850
  42f65b:	mov    rcx,rsi
  42f65e:	call   0x424b00
  42f663:	jmp    0x42f483
  42f668:	nop    DWORD PTR [rax+rax*1+0x0]
  42f670:	cmp    rbx,0x1
  42f674:	je     0x42feb7
  42f67a:	mov    r10d,0x2
  42f680:	mov    QWORD PTR [rsp+0x60],rdi
  42f685:	mov    QWORD PTR [rsp+0x68],r15
  42f68a:	mov    rdi,rbx
  42f68d:	mov    r15,rsi
  42f690:	mov    rbx,QWORD PTR [rsp+0x58]
  42f695:	mov    r14,r10
  42f698:	jmp    0x42f6b6
  42f69a:	nop    WORD PTR [rax+rax*1+0x0]
  42f6a0:	test   rsi,rsi
  42f6a3:	je     0x42f310
  42f6a9:	add    r14,0x1
  42f6ad:	cmp    r14,rdi
  42f6b0:	jg     0x42f2d6
  42f6b6:	mov    rcx,rsi
  42f6b9:	mov    rdx,rbx
  42f6bc:	call   0x426910
  42f6c1:	mov    r8,r15
  42f6c4:	mov    QWORD PTR [rsp+0x20],rbp
  42f6c9:	mov    r9,rax
  42f6cc:	mov    rdx,r12
  42f6cf:	mov    rcx,r13
  42f6d2:	mov    rsi,rax
  42f6d5:	mov    BYTE PTR [rsp+0x118],0x10
  42f6dd:	call   0x426840
  42f6e2:	test   rax,rax
  42f6e5:	mov    r15,rax
  42f6e8:	jne    0x42f6a0
  42f6ea:	jmp    0x42f310
  42f6ef:	nop
  42f6f0:	xor    eax,eax
  42f6f2:	cmp    rdi,0x7fff
  42f6f9:	setg   al
  42f6fc:	test   eax,eax
  42f6fe:	jne    0x42f7d2
  42f704:	mov    r8d,DWORD PTR [rsp+0x54]
  42f709:	mov    rcx,QWORD PTR [rsp+0x40]
  42f70e:	mov    rdx,r15
  42f711:	call   0x42eb60
  42f716:	cdqe   
  42f718:	add    QWORD PTR [r15+0x48],rax
  42f71c:	cmp    QWORD PTR [rsp+0x48],0x0
  42f722:	je     0x42f5c1
  42f728:	mov    rax,rbx
  42f72b:	or     rax,rdi
  42f72e:	jne    0x42f468
  42f734:	mov    rcx,QWORD PTR [rsp+0x48]
  42f739:	lea    rdx,[rip+0xffffffffffff6180]        # 0x4258c0
  42f740:	xor    r8d,r8d
  42f743:	call   0x424b00
  42f748:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f750:	mov    eax,DWORD PTR [rax]
  42f752:	jmp    0x42f5cb
  42f757:	nop    WORD PTR [rax+rax*1+0x0]
  42f760:	mov    rax,QWORD PTR [rsp+0x40]
  42f765:	cmp    BYTE PTR [rax+0x8],0x1
  42f769:	jne    0x42f801
  42f76f:	mov    rax,QWORD PTR [rsp+0x40]
  42f774:	cmp    BYTE PTR [rax],0x2c
  42f777:	jne    0x42f801
  42f77d:	xor    ebx,ebx
  42f77f:	mov    r8d,DWORD PTR [rsp+0x54]
  42f784:	mov    rdx,QWORD PTR [rsp+0x40]
  42f789:	mov    rcx,r15
  42f78c:	call   0x42f1c0
  42f791:	cmp    rax,0xfffffffffffffffe
  42f795:	mov    rdi,rax
  42f798:	je     0x42f61f
  42f79e:	cmp    rax,0xffffffffffffffff
  42f7a2:	je     0x42f7a9
  42f7a4:	cmp    rbx,rax
  42f7a7:	jg     0x42f801
  42f7a9:	mov    rax,QWORD PTR [rsp+0x40]
  42f7ae:	cmp    BYTE PTR [rax+0x8],0x18
  42f7b2:	jne    0x42f801
  42f7b4:	cmp    rdi,0xffffffffffffffff
  42f7b8:	jne    0x42f6f0
  42f7be:	xor    eax,eax
  42f7c0:	cmp    rbx,0x7fff
  42f7c7:	setg   al
  42f7ca:	test   eax,eax
  42f7cc:	je     0x42f704
  42f7d2:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f7da:	mov    DWORD PTR [rax],0xf
  42f7e0:	jmp    0x42f31e
  42f7e5:	mov    rax,QWORD PTR [rsp+0x40]
  42f7ea:	cmp    BYTE PTR [rax],0x2c
  42f7ed:	je     0x430709
  42f7f3:	test   DWORD PTR [rsp+0x54],0x200000
  42f7fb:	jne    0x42f62d
  42f801:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f809:	mov    DWORD PTR [rax],0xa
  42f80f:	jmp    0x42f31e
  42f814:	mov    rax,QWORD PTR [rsp+0x48]
  42f819:	jmp    0x42f342
  42f81e:	mov    r14,r8
  42f821:	jmp    0x42f594
  42f826:	test   r14,r14
  42f829:	je     0x42f83d
  42f82b:	lea    rdx,[rip+0xffffffffffff608e]        # 0x4258c0
  42f832:	xor    r8d,r8d
  42f835:	mov    rcx,r14
  42f838:	call   0x424b00
  42f83d:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f845:	mov    DWORD PTR [rax],0xd
  42f84b:	xor    eax,eax
  42f84d:	jmp    0x42f342
  42f852:	mov    rsi,QWORD PTR [rbx+0x30]
  42f856:	mov    edi,DWORD PTR [rsp+0x54]
  42f85a:	mov    rdx,rcx
  42f85d:	mov    r14,QWORD PTR [rsp+0x40]
  42f862:	lea    rax,[rsi+0x1]
  42f866:	mov    r8d,edi
  42f869:	or     r8d,0x800000
  42f870:	mov    rcx,r14
  42f873:	mov    QWORD PTR [rbx+0x30],rax
  42f877:	call   0x42eb60
  42f87c:	cdqe   
  42f87e:	add    QWORD PTR [r15+0x48],rax
  42f882:	cmp    BYTE PTR [r14+0x8],0x9
  42f887:	je     0x42ff27
  42f88d:	mov    rax,QWORD PTR [rsp+0x1b8]
  42f895:	mov    r9d,edi
  42f898:	mov    r8,r14
  42f89b:	mov    rdx,rbx
  42f89e:	mov    rcx,r15
  42f8a1:	mov    QWORD PTR [rsp+0x28],rax
  42f8a6:	mov    rax,QWORD PTR [rsp+0x1b0]
  42f8ae:	add    rax,0x1
  42f8b2:	mov    QWORD PTR [rsp+0x20],rax
  42f8b7:	call   0x430a00
  42f8bc:	mov    rdi,QWORD PTR [rsp+0x1b8]
  42f8c4:	mov    r9d,DWORD PTR [rdi]
  42f8c7:	test   r9d,r9d
  42f8ca:	jne    0x42f340
  42f8d0:	mov    rdi,QWORD PTR [rsp+0x40]
  42f8d5:	cmp    BYTE PTR [rdi+0x8],0x9
  42f8d9:	jne    0x4307b9
  42f8df:	cmp    rsi,0x8
  42f8e3:	ja     0x42f8f9
  42f8e5:	mov    rdi,QWORD PTR [rsp+0x58]
  42f8ea:	mov    edx,0x1
  42f8ef:	mov    ecx,esi
  42f8f1:	shl    edx,cl
  42f8f3:	or     DWORD PTR [rdi+0xa4],edx
  42f8f9:	mov    rdi,QWORD PTR [rsp+0x58]
  42f8fe:	lea    r9,[rsp+0x110]
  42f906:	mov    r8,rax
  42f909:	mov    BYTE PTR [rsp+0x118],0x11
  42f911:	mov    QWORD PTR [rsp+0x20],r9
  42f916:	xor    r9d,r9d
  42f919:	lea    rdx,[rdi+0x80]
  42f920:	lea    rcx,[rdi+0x70]
  42f924:	call   0x426840
  42f929:	test   rax,rax
  42f92c:	mov    QWORD PTR [rsp+0x48],rax
  42f931:	je     0x42fca5
  42f937:	mov    QWORD PTR [rax+0x28],rsi
  42f93b:	jmp    0x42f3c1
  42f940:	mov    rax,QWORD PTR [rsp+0x40]
  42f945:	mov    edx,DWORD PTR [rax]
  42f947:	test   edx,0x30f
  42f94d:	je     0x42f9c7
  42f94f:	mov    rax,QWORD PTR [rsp+0x58]
  42f954:	movzx  eax,BYTE PTR [rax+0xa8]
  42f95b:	test   al,0x10
  42f95d:	jne    0x42f9c7
  42f95f:	mov    rdi,QWORD PTR [rsp+0x58]
  42f964:	or     eax,0x10
  42f967:	test   al,0x8
  42f969:	mov    BYTE PTR [rdi+0xa8],al
  42f96f:	jne    0x430881
  42f975:	test   al,0x4
  42f977:	mov    DWORD PTR [rdi+0xb0],0x0
  42f981:	mov    DWORD PTR [rdi+0xb4],0x3ff0000
  42f98b:	mov    DWORD PTR [rdi+0xb8],0x87fffffe
  42f995:	mov    DWORD PTR [rdi+0xbc],0x7fffffe
  42f99f:	je     0x430800
  42f9a5:	mov    rax,QWORD PTR [rsp+0x58]
  42f9aa:	mov    QWORD PTR [rax+0xc0],0x0
  42f9b5:	mov    QWORD PTR [rax+0xc8],0x0
  42f9c0:	mov    rax,QWORD PTR [rsp+0x40]
  42f9c5:	mov    edx,DWORD PTR [rax]
  42f9c7:	lea    eax,[rdx-0x100]
  42f9cd:	test   eax,0xfffffeff
  42f9d2:	jne    0x43016d
  42f9d8:	cmp    edx,0x100
  42f9de:	mov    r14,QWORD PTR [rsp+0x40]
  42f9e3:	je     0x43004a
  42f9e9:	mov    rdi,QWORD PTR [rsp+0x58]
  42f9ee:	mov    DWORD PTR [r14],0x5
  42f9f5:	xor    r9d,r9d
  42f9f8:	mov    QWORD PTR [rsp+0x20],r14
  42f9fd:	xor    r8d,r8d
  42fa00:	lea    rbx,[rdi+0x70]
  42fa04:	lea    rsi,[rdi+0x80]
  42fa0b:	mov    rcx,rbx
  42fa0e:	mov    rdx,rsi
  42fa11:	call   0x426840
  42fa16:	mov    DWORD PTR [r14],0xa
  42fa1d:	mov    rdi,rax
  42fa20:	mov    rax,QWORD PTR [rsp+0x40]
  42fa25:	xor    r9d,r9d
  42fa28:	xor    r8d,r8d
  42fa2b:	mov    rcx,rbx
  42fa2e:	mov    rdx,rsi
  42fa31:	mov    QWORD PTR [rsp+0x20],rax
  42fa36:	call   0x426840
  42fa3b:	mov    rbp,rax
  42fa3e:	lea    rax,[rsp+0x110]
  42fa46:	mov    rdx,rsi
  42fa49:	mov    rcx,rbx
  42fa4c:	mov    r9,rbp
  42fa4f:	mov    r8,rdi
  42fa52:	mov    QWORD PTR [rsp+0x20],rax
  42fa57:	mov    BYTE PTR [rsp+0x118],0xa
  42fa5f:	call   0x426840
  42fa64:	test   rbp,rbp
  42fa67:	mov    rbx,rax
  42fa6a:	sete   dl
  42fa6d:	test   rdi,rdi
  42fa70:	sete   al
  42fa73:	or     dl,al
  42fa75:	jne    0x42fca5
  42fa7b:	test   rbx,rbx
  42fa7e:	je     0x42fca5
  42fa84:	mov    r8d,DWORD PTR [rsp+0x54]
  42fa89:	mov    rcx,QWORD PTR [rsp+0x40]
  42fa8e:	mov    rdx,r15
  42fa91:	call   0x42eb60
  42fa96:	cdqe   
  42fa98:	add    QWORD PTR [r15+0x48],rax
  42fa9c:	mov    rax,rbx
  42fa9f:	jmp    0x42f342
  42faa4:	mov    rax,QWORD PTR [rsp+0x1b8]
  42faac:	mov    rdx,QWORD PTR [rcx+0x78]
  42fab0:	lea    r9,[rip+0x18a6d]        # 0x448524
  42fab7:	lea    r8,[rip+0x186e3]        # 0x4481a1
  42fabe:	mov    QWORD PTR [rsp+0x28],rax
  42fac3:	xor    eax,eax
  42fac5:	cmp    r10b,0x23
  42fac9:	sete   al
  42facc:	mov    DWORD PTR [rsp+0x20],eax
  42fad0:	mov    rcx,QWORD PTR [rsp+0x58]
  42fad5:	call   0x42c450
  42fada:	test   rax,rax
  42fadd:	mov    QWORD PTR [rsp+0x48],rax
  42fae2:	jne    0x42f3c1
  42fae8:	mov    rax,QWORD PTR [rsp+0x1b8]
  42faf0:	mov    edx,DWORD PTR [rax]
  42faf2:	test   edx,edx
  42faf4:	je     0x42f3c1
  42fafa:	jmp    0x42f340
  42faff:	mov    rax,QWORD PTR [rsp+0x40]
  42fb04:	mov    rdi,QWORD PTR [rsp+0x58]
  42fb09:	mov    rcx,QWORD PTR [rax]
  42fb0c:	mov    eax,0x1
  42fb11:	shl    eax,cl
  42fb13:	test   DWORD PTR [rdi+0xa4],eax
  42fb19:	je     0x4303ba
  42fb1f:	mov    rdi,QWORD PTR [rsp+0x58]
  42fb24:	xor    r9d,r9d
  42fb27:	xor    r8d,r8d
  42fb2a:	or     DWORD PTR [rdi+0xa0],eax
  42fb30:	mov    rax,QWORD PTR [rsp+0x40]
  42fb35:	lea    rdx,[rdi+0x80]
  42fb3c:	lea    rcx,[rdi+0x70]
  42fb40:	mov    QWORD PTR [rsp+0x20],rax
  42fb45:	call   0x426840
  42fb4a:	test   rax,rax
  42fb4d:	mov    QWORD PTR [rsp+0x48],rax
  42fb52:	je     0x42fca5
  42fb58:	add    QWORD PTR [rdi+0x98],0x1
  42fb60:	or     BYTE PTR [rdi+0xa8],0x2
  42fb67:	jmp    0x42f3c1
  42fb6c:	mov    rdi,QWORD PTR [rsp+0x58]
  42fb71:	mov    rax,QWORD PTR [rsp+0x40]
  42fb76:	xor    r9d,r9d
  42fb79:	xor    r8d,r8d
  42fb7c:	lea    rdx,[rdi+0x80]
  42fb83:	lea    rcx,[rdi+0x70]
  42fb87:	mov    QWORD PTR [rsp+0x20],rax
  42fb8c:	call   0x426840
  42fb91:	test   rax,rax
  42fb94:	mov    QWORD PTR [rsp+0x48],rax
  42fb99:	je     0x42fca5
  42fb9f:	cmp    DWORD PTR [rdi+0xac],0x1
  42fba6:	jle    0x42f3c1
  42fbac:	or     BYTE PTR [rdi+0xa8],0x2
  42fbb3:	jmp    0x42f3c1
  42fbb8:	mov    rax,QWORD PTR [rsp+0x58]
  42fbbd:	xor    r9d,r9d
  42fbc0:	xor    r8d,r8d
  42fbc3:	lea    rbx,[rax+0x70]
  42fbc7:	lea    rsi,[rax+0x80]
  42fbce:	mov    rax,QWORD PTR [rsp+0x40]
  42fbd3:	mov    rdx,rsi
  42fbd6:	mov    rcx,rbx
  42fbd9:	mov    QWORD PTR [rsp+0x20],rax
  42fbde:	call   0x426840
  42fbe3:	test   rax,rax
  42fbe6:	mov    QWORD PTR [rsp+0x48],rax
  42fbeb:	je     0x42fca5
  42fbf1:	mov    rax,QWORD PTR [rsp+0x58]
  42fbf6:	lea    rdi,[rsp+0x110]
  42fbfe:	cmp    DWORD PTR [rax+0xac],0x1
  42fc05:	jle    0x42f3c1
  42fc0b:	mov    r13,QWORD PTR [rsp+0x48]
  42fc10:	mov    rbp,QWORD PTR [rsp+0x40]
  42fc15:	mov    r12d,DWORD PTR [rsp+0x54]
  42fc1a:	jmp    0x42fc25
  42fc1c:	test   r14,r14
  42fc1f:	je     0x42fca5
  42fc25:	mov    r9,QWORD PTR [r15+0x48]
  42fc29:	cmp    QWORD PTR [r15+0x68],r9
  42fc2d:	jle    0x43019a
  42fc33:	cmp    r9,QWORD PTR [r15+0x30]
  42fc37:	je     0x43019a
  42fc3d:	mov    rax,QWORD PTR [r15+0x10]
  42fc41:	cmp    WORD PTR [rax+r9*2],0xffff
  42fc47:	jne    0x43019a
  42fc4d:	mov    r8d,r12d
  42fc50:	mov    rdx,r15
  42fc53:	mov    rcx,rbp
  42fc56:	call   0x42eb60
  42fc5b:	movsxd r9,eax
  42fc5e:	add    QWORD PTR [r15+0x48],r9
  42fc62:	xor    r8d,r8d
  42fc65:	xor    r9d,r9d
  42fc68:	mov    rdx,rsi
  42fc6b:	mov    rcx,rbx
  42fc6e:	mov    QWORD PTR [rsp+0x20],rbp
  42fc73:	call   0x426840
  42fc78:	mov    r8,r13
  42fc7b:	mov    QWORD PTR [rsp+0x20],rdi
  42fc80:	mov    r9,rax
  42fc83:	mov    rdx,rsi
  42fc86:	mov    rcx,rbx
  42fc89:	mov    r14,rax
  42fc8c:	mov    BYTE PTR [rsp+0x118],0x10
  42fc94:	call   0x426840
  42fc99:	test   rax,rax
  42fc9c:	mov    r13,rax
  42fc9f:	jne    0x42fc1c
  42fca5:	mov    rax,QWORD PTR [rsp+0x1b8]
  42fcad:	mov    DWORD PTR [rax],0xc
  42fcb3:	xor    eax,eax
  42fcb5:	jmp    0x42f342
  42fcba:	mov    edx,0x1
  42fcbf:	mov    ecx,0x20
  42fcc4:	mov    QWORD PTR [rsp+0xb8],0x0
  42fcd0:	call   0x43a798
  42fcd5:	mov    edx,0x1
  42fcda:	mov    ecx,0x50
  42fcdf:	mov    rdi,rax
  42fce2:	call   0x43a798
  42fce7:	test   rax,rax
  42fcea:	mov    rbp,rax
  42fced:	sete   dl
  42fcf0:	test   rdi,rdi
  42fcf3:	sete   al
  42fcf6:	or     dl,al
  42fcf8:	jne    0x4301a4
  42fcfe:	mov    rbx,QWORD PTR [rsp+0x40]
  42fd03:	mov    r8d,DWORD PTR [rsp+0x54]
  42fd08:	mov    rdx,r15
  42fd0b:	mov    rcx,rbx
  42fd0e:	call   0x424730
  42fd13:	mov    ecx,eax
  42fd15:	movzx  eax,BYTE PTR [rbx+0x8]
  42fd19:	cmp    al,0x2
  42fd1b:	je     0x43054b
  42fd21:	cmp    al,0x19
  42fd23:	mov    BYTE PTR [rsp+0xaa],0x0
  42fd2b:	je     0x42ffff
  42fd31:	cmp    al,0x15
  42fd33:	je     0x42fff1
  42fd39:	lea    rbx,[rsp+0xf0]
  42fd41:	mov    esi,DWORD PTR [rsp+0x54]
  42fd45:	mov    QWORD PTR [rsp+0x68],0x0
  42fd4e:	mov    eax,0x1
  42fd53:	mov    QWORD PTR [rsp+0x48],0x0
  42fd5c:	mov    r12d,ecx
  42fd5f:	mov    QWORD PTR [rsp+0x60],rbx
  42fd64:	lea    rbx,[rsp+0xc0]
  42fd6c:	mov    edx,esi
  42fd6e:	mov    QWORD PTR [rsp+0x70],rbx
  42fd73:	lea    rbx,[rsp+0xb8]
  42fd7b:	shr    edx,0x10
  42fd7e:	mov    QWORD PTR [rsp+0x80],rbx
  42fd86:	lea    rbx,[rsp+0xe0]
  42fd8e:	mov    QWORD PTR [rsp+0x78],rbx
  42fd93:	lea    rbx,[rsp+0x110]
  42fd9b:	mov    QWORD PTR [rsp+0x88],rbx
  42fda3:	lea    rbx,[rsp+0xd0]
  42fdab:	mov    QWORD PTR [rsp+0x90],rbx
  42fdb3:	mov    ebx,edx
  42fdb5:	and    ebx,0x1
  42fdb8:	mov    BYTE PTR [rsp+0xab],bl
  42fdbf:	mov    rbx,QWORD PTR [rsp+0x40]
  42fdc4:	mov    rdx,QWORD PTR [rsp+0x60]
  42fdc9:	mov    rcx,QWORD PTR [rsp+0x70]
  42fdce:	mov    r9d,r12d
  42fdd1:	mov    DWORD PTR [rsp+0x28],eax
  42fdd5:	mov    DWORD PTR [rsp+0x20],esi
  42fdd9:	mov    r8,rbx
  42fddc:	mov    DWORD PTR [rsp+0xc0],0x3
  42fde7:	mov    QWORD PTR [rsp+0xc8],rdx
  42fdef:	mov    rdx,r15
  42fdf2:	call   0x42e910
  42fdf7:	test   eax,eax
  42fdf9:	jne    0x4300c0
  42fdff:	mov    rdx,r15
  42fe02:	mov    r8d,esi
  42fe05:	mov    rcx,rbx
  42fe08:	call   0x424730
  42fe0d:	mov    r12d,eax
  42fe10:	mov    eax,DWORD PTR [rsp+0xc0]
  42fe17:	lea    edx,[rax-0x2]
  42fe1a:	and    edx,0xfffffffd
  42fe1d:	je     0x42fe35
  42fe1f:	movzx  edx,BYTE PTR [rbx+0x8]
  42fe23:	cmp    dl,0x2
  42fe26:	je     0x4300cf
  42fe2c:	cmp    dl,0x16
  42fe2f:	je     0x4301c7
  42fe35:	cmp    eax,0x4
  42fe38:	ja     0x43012d
  42fe3e:	lea    rdx,[rip+0x18777]        # 0x4485bc
  42fe45:	movsxd rax,DWORD PTR [rdx+rax*4]
  42fe49:	add    rdx,rax
  42fe4c:	jmp    rdx
  42fe4e:	mov    rax,QWORD PTR [rsp+0x1b8]
  42fe56:	mov    rdx,QWORD PTR [rcx+0x78]
  42fe5a:	lea    r9,[rip+0x186c1]        # 0x448522
  42fe61:	lea    r8,[rip+0x1832d]        # 0x448195
  42fe68:	mov    QWORD PTR [rsp+0x28],rax
  42fe6d:	xor    eax,eax
  42fe6f:	cmp    r10b,0x21
  42fe73:	sete   al
  42fe76:	mov    DWORD PTR [rsp+0x20],eax
  42fe7a:	jmp    0x42fad0
  42fe7f:	test   DWORD PTR [rsp+0x54],0x20000
  42fe87:	jne    0x42f38a
  42fe8d:	mov    rax,QWORD PTR [rsp+0x1b8]
  42fe95:	mov    DWORD PTR [rax],0x10
  42fe9b:	xor    eax,eax
  42fe9d:	jmp    0x42f342
  42fea2:	mov    rax,QWORD PTR [rsp+0x1b8]
  42feaa:	mov    DWORD PTR [rax],0x5
  42feb0:	xor    eax,eax
  42feb2:	jmp    0x42f342
  42feb7:	mov    rsi,QWORD PTR [rsp+0x48]
  42febc:	mov    r14,rsi
  42febf:	jmp    0x42f2e6
  42fec4:	mov    r14,QWORD PTR [rsp+0xc8]
  42fecc:	mov    rcx,r14
  42fecf:	call   0x43a620
  42fed4:	cmp    rax,0x1
  42fed8:	jne    0x430575
  42fede:	movzx  edx,BYTE PTR [r14]
  42fee2:	mov    r8d,0x1
  42fee8:	mov    rax,rdx
  42feeb:	and    edx,0x1f
  42feee:	shr    rax,0x3
  42fef2:	mov    ecx,edx
  42fef4:	and    eax,0x1c
  42fef7:	shl    r8d,cl
  42fefa:	or     DWORD PTR [rdi+rax*1],r8d
  42fefe:	mov    rax,QWORD PTR [rsp+0x1b8]
  42ff06:	mov    DWORD PTR [rax],0x0
  42ff0c:	movzx  eax,BYTE PTR [rbx+0x8]
  42ff10:	cmp    al,0x2
  42ff12:	je     0x4300cf
  42ff18:	cmp    al,0x15
  42ff1a:	je     0x4303cf
  42ff20:	xor    eax,eax
  42ff22:	jmp    0x42fdc4
  42ff27:	xor    eax,eax
  42ff29:	jmp    0x42f8df
  42ff2e:	mov    rdx,QWORD PTR [rbp+0x28]
  42ff32:	cmp    rdx,QWORD PTR [rsp+0x48]
  42ff37:	je     0x430711
  42ff3d:	mov    rax,QWORD PTR [rbp+0x0]
  42ff41:	lea    rcx,[rdx+0x1]
  42ff45:	mov    QWORD PTR [rbp+0x28],rcx
  42ff49:	movzx  ecx,WORD PTR [rsp+0xc8]
  42ff51:	mov    WORD PTR [rax+rdx*2],cx
  42ff55:	jmp    0x42ff0c
  42ff57:	movzx  edx,BYTE PTR [rsp+0xc8]
  42ff5f:	mov    r8d,0x1
  42ff65:	mov    rax,rdx
  42ff68:	and    edx,0x1f
  42ff6b:	shr    rax,0x3
  42ff6f:	mov    ecx,edx
  42ff71:	and    eax,0x1c
  42ff74:	shl    r8d,cl
  42ff77:	or     DWORD PTR [rdi+rax*1],r8d
  42ff7b:	jmp    0x42ff0c
  42ff7d:	mov    rax,QWORD PTR [rsp+0xc8]
  42ff85:	mov    rcx,QWORD PTR [r15+0x78]
  42ff89:	lea    r9,[rbp+0x48]
  42ff8d:	lea    r8,[rbp+0x18]
  42ff91:	mov    rdx,rdi
  42ff94:	mov    DWORD PTR [rsp+0x30],esi
  42ff98:	mov    QWORD PTR [rsp+0x28],rax
  42ff9d:	mov    rax,QWORD PTR [rsp+0x80]
  42ffa5:	mov    QWORD PTR [rsp+0x20],rax
  42ffaa:	call   0x42bc90
  42ffaf:	mov    rdx,QWORD PTR [rsp+0x1b8]
  42ffb7:	test   eax,eax
  42ffb9:	mov    DWORD PTR [rdx],eax
  42ffbb:	je     0x42ff0c
  42ffc1:	mov    rcx,rdi
  42ffc4:	call   0x43a748
  42ffc9:	mov    rcx,rbp
  42ffcc:	call   0x425860
  42ffd1:	mov    rax,QWORD PTR [rsp+0x1b8]
  42ffd9:	mov    ecx,DWORD PTR [rax]
  42ffdb:	test   ecx,ecx
  42ffdd:	jne    0x42f340
  42ffe3:	mov    QWORD PTR [rsp+0x48],0x0
  42ffec:	jmp    0x42f3c1
  42fff1:	mov    rax,QWORD PTR [rsp+0x40]
  42fff6:	mov    BYTE PTR [rax+0x8],0x1
  42fffa:	jmp    0x42fd39
  42ffff:	or     BYTE PTR [rbp+0x20],0x1
  430003:	test   DWORD PTR [rsp+0x54],0x100
  43000b:	je     0x430013
  43000d:	or     DWORD PTR [rdi],0x400
  430013:	movsxd rax,ecx
  430016:	mov    rbx,QWORD PTR [rsp+0x40]
  43001b:	add    QWORD PTR [r15+0x48],rax
  43001f:	mov    r8d,DWORD PTR [rsp+0x54]
  430024:	mov    rdx,r15
  430027:	mov    rcx,rbx
  43002a:	call   0x424730
  43002f:	mov    ecx,eax
  430031:	movzx  eax,BYTE PTR [rbx+0x8]
  430035:	cmp    al,0x2
  430037:	je     0x43054b
  43003d:	mov    BYTE PTR [rsp+0xaa],0x1
  430045:	jmp    0x42fd31
  43004a:	mov    rdi,QWORD PTR [rsp+0x58]
  43004f:	mov    DWORD PTR [r14],0x6
  430056:	xor    r9d,r9d
  430059:	mov    QWORD PTR [rsp+0x20],r14
  43005e:	xor    r8d,r8d
  430061:	lea    rbx,[rdi+0x70]
  430065:	lea    rsi,[rdi+0x80]
  43006c:	mov    rcx,rbx
  43006f:	mov    rdx,rsi
  430072:	call   0x426840
  430077:	mov    DWORD PTR [r14],0x9
  43007e:	mov    rdi,rax
  430081:	jmp    0x42fa20
  430086:	mov    rcx,QWORD PTR [rsp+0xc8]
  43008e:	mov    DWORD PTR [rsp+0xa0],edx
  430095:	mov    DWORD PTR [rsp+0x98],r8d
  43009d:	call   0x43a620
  4300a2:	cmp    rax,0x1
  4300a6:	mov    r8d,DWORD PTR [rsp+0x98]
  4300ae:	mov    edx,DWORD PTR [rsp+0xa0]
  4300b5:	jbe    0x4302a5
  4300bb:	mov    eax,0x3
  4300c0:	mov    rbx,QWORD PTR [rsp+0x1b8]
  4300c8:	mov    DWORD PTR [rbx],eax
  4300ca:	jmp    0x42ffc1
  4300cf:	mov    rax,QWORD PTR [rsp+0x1b8]
  4300d7:	mov    DWORD PTR [rax],0x7
  4300dd:	jmp    0x42ffc1
  4300e2:	mov    rdi,QWORD PTR [rsp+0x40]
  4300e7:	mov    rdx,r15
  4300ea:	mov    r8d,eax
  4300ed:	mov    esi,eax
  4300ef:	mov    rcx,rdi
  4300f2:	call   0x42eb60
  4300f7:	cdqe   
  4300f9:	add    QWORD PTR [r15+0x48],rax
  4300fd:	mov    rax,QWORD PTR [rsp+0x1b8]
  430105:	mov    r9d,esi
  430108:	mov    r8,rdi
  43010b:	mov    rdx,rbx
  43010e:	mov    rcx,r15
  430111:	mov    QWORD PTR [rsp+0x28],rax
  430116:	mov    rax,QWORD PTR [rsp+0x1b0]
  43011e:	mov    QWORD PTR [rsp+0x20],rax
  430123:	call   0x42f280
  430128:	jmp    0x42f342
  43012d:	lea    rdx,[rip+0x17f0c]        # 0x448040
  430134:	lea    rcx,[rip+0x183e5]        # 0x448520
  43013b:	mov    r8d,0xce8
  430141:	call   0x435a10
  430146:	jmp    0x42ff0c
  43014b:	mov    rax,QWORD PTR [rsp+0x40]
  430150:	cmp    BYTE PTR [rax+0x8],0x2
  430154:	jne    0x42f801
  43015a:	mov    rax,QWORD PTR [rsp+0x1b8]
  430162:	mov    DWORD PTR [rax],0x9
  430168:	jmp    0x42f31e
  43016d:	mov    rax,QWORD PTR [rsp+0x58]
  430172:	xor    r9d,r9d
  430175:	xor    r8d,r8d
  430178:	lea    rdx,[rax+0x80]
  43017f:	lea    rcx,[rax+0x70]
  430183:	mov    rax,QWORD PTR [rsp+0x40]
  430188:	mov    QWORD PTR [rsp+0x20],rax
  43018d:	call   0x426840
  430192:	mov    rbx,rax
  430195:	jmp    0x42fa7b
  43019a:	mov    QWORD PTR [rsp+0x48],r13
  43019f:	jmp    0x42f3c1
  4301a4:	mov    rcx,rdi
  4301a7:	call   0x43a748
  4301ac:	mov    rcx,rbp
  4301af:	call   0x43a748
  4301b4:	mov    rax,QWORD PTR [rsp+0x1b8]
  4301bc:	mov    DWORD PTR [rax],0xc
  4301c2:	jmp    0x42f340
  4301c7:	movsxd rax,r12d
  4301ca:	add    QWORD PTR [r15+0x48],rax
  4301ce:	mov    rcx,QWORD PTR [rsp+0x78]
  4301d3:	mov    rdx,r15
  4301d6:	mov    r8d,esi
  4301d9:	call   0x424730
  4301de:	movzx  edx,BYTE PTR [rsp+0xe8]
  4301e6:	mov    r9d,eax
  4301e9:	cmp    dl,0x2
  4301ec:	je     0x4300cf
  4301f2:	cmp    dl,0x15
  4301f5:	je     0x430530
  4301fb:	mov    rax,QWORD PTR [rsp+0x88]
  430203:	mov    r8,QWORD PTR [rsp+0x78]
  430208:	mov    rdx,r15
  43020b:	mov    rcx,QWORD PTR [rsp+0x90]
  430213:	mov    DWORD PTR [rsp+0x28],0x1
  43021b:	mov    DWORD PTR [rsp+0x20],esi
  43021f:	mov    DWORD PTR [rsp+0xd0],0x3
  43022a:	mov    QWORD PTR [rsp+0xd8],rax
  430232:	call   0x42e910
  430237:	test   eax,eax
  430239:	jne    0x4300c0
  43023f:	mov    r8d,esi
  430242:	mov    rdx,r15
  430245:	mov    rcx,rbx
  430248:	call   0x424730
  43024d:	mov    r12d,eax
  430250:	mov    rax,QWORD PTR [rsp+0x58]
  430255:	mov    r8d,0x0
  43025b:	cmp    DWORD PTR [rax+0xac],0x2
  430262:	cmovge r8,rbp
  430266:	mov    r13,r8
  430269:	mov    r8d,DWORD PTR [rsp+0xc0]
  430271:	lea    eax,[r8-0x2]
  430275:	and    eax,0xfffffffd
  430278:	je     0x4303b0
  43027e:	mov    edx,DWORD PTR [rsp+0xd0]
  430285:	cmp    edx,0x2
  430288:	je     0x4303b0
  43028e:	cmp    edx,0x4
  430291:	je     0x4303b0
  430297:	cmp    r8d,0x3
  43029b:	sete   r14b
  43029f:	je     0x430086
  4302a5:	cmp    edx,0x3
  4302a8:	je     0x430685
  4302ae:	test   r8d,r8d
  4302b1:	jne    0x430668
  4302b7:	movzx  r10d,BYTE PTR [rsp+0xc8]
  4302c0:	test   edx,edx
  4302c2:	jne    0x43063f
  4302c8:	movzx  r9d,BYTE PTR [rsp+0xd8]
  4302d1:	test   r8d,r8d
  4302d4:	je     0x4305f3
  4302da:	test   r14b,r14b
  4302dd:	jne    0x4305f3
  4302e3:	movzx  r14d,WORD PTR [rsp+0xc8]
  4302ec:	cmp    r14w,0xffff
  4302f1:	sete   r11b
  4302f5:	cmp    edx,0x3
  4302f8:	je     0x4306bf
  4302fe:	test   edx,edx
  430300:	je     0x4306bf
  430306:	movzx  r10d,WORD PTR [rsp+0xd8]
  43030f:	cmp    r10w,0xffff
  430314:	sete   al
  430317:	test   al,al
  430319:	jne    0x4300bb
  43031f:	test   r11b,r11b
  430322:	jne    0x4300bb
  430328:	cmp    r14w,r10w
  43032c:	jbe    0x430338
  43032e:	cmp    BYTE PTR [rsp+0xab],0x0
  430336:	jne    0x4303b0
  430338:	test   r13,r13
  43033b:	je     0x430366
  43033d:	mov    rdx,QWORD PTR [r13+0x40]
  430341:	cmp    rdx,QWORD PTR [rsp+0x68]
  430346:	je     0x430743
  43034c:	mov    r9,QWORD PTR [r13+0x8]
  430350:	mov    rax,QWORD PTR [r13+0x10]
  430354:	lea    rcx,[rdx+0x1]
  430358:	mov    WORD PTR [r9+rdx*2],r14w
  43035d:	mov    QWORD PTR [r13+0x40],rcx
  430361:	mov    WORD PTR [rax+rdx*2],r10w
  430366:	xor    eax,eax
  430368:	mov    r8d,0x1
  43036e:	cmp    r10w,ax
  430372:	mov    ecx,eax
  430374:	jb     0x43038d
  430376:	cmp    r14w,ax
  43037a:	ja     0x43038d
  43037c:	mov    rdx,rax
  43037f:	mov    r11d,r8d
  430382:	sar    rdx,0x5
  430386:	shl    r11d,cl
  430389:	or     DWORD PTR [rdi+rdx*4],r11d
  43038d:	add    rax,0x1
  430391:	cmp    rax,0x100
  430397:	jne    0x43036e
  430399:	mov    rax,QWORD PTR [rsp+0x1b8]
  4303a1:	mov    DWORD PTR [rax],0x0
  4303a7:	jmp    0x42ff0c
  4303ac:	nop    DWORD PTR [rax+0x0]
  4303b0:	mov    eax,0xb
  4303b5:	jmp    0x4300c0
  4303ba:	mov    rax,QWORD PTR [rsp+0x1b8]
  4303c2:	mov    DWORD PTR [rax],0x6
  4303c8:	xor    eax,eax
  4303ca:	jmp    0x42f342
  4303cf:	movsxd rax,r12d
  4303d2:	add    QWORD PTR [r15+0x48],rax
  4303d6:	cmp    BYTE PTR [rsp+0xaa],0x0
  4303de:	jne    0x43055e
  4303e4:	mov    rax,QWORD PTR [rsp+0x58]
  4303e9:	mov    edx,DWORD PTR [rax+0xac]
  4303ef:	cmp    edx,0x1
  4303f2:	jle    0x430411
  4303f4:	mov    rax,QWORD PTR [rsp+0x58]
  4303f9:	mov    rcx,QWORD PTR [rax+0x78]
  4303fd:	xor    eax,eax
  4303ff:	mov    r8d,DWORD PTR [rcx+rax*1]
  430403:	and    DWORD PTR [rdi+rax*1],r8d
  430407:	add    rax,0x4
  43040b:	cmp    rax,0x20
  43040f:	jne    0x4303ff
  430411:	cmp    QWORD PTR [rbp+0x28],0x0
  430416:	jne    0x430447
  430418:	cmp    QWORD PTR [rbp+0x30],0x0
  43041d:	jne    0x430447
  43041f:	cmp    QWORD PTR [rbp+0x38],0x0
  430424:	jne    0x430447
  430426:	cmp    QWORD PTR [rbp+0x40],0x0
  43042b:	jne    0x430447
  43042d:	cmp    edx,0x1
  430430:	jle    0x430588
  430436:	cmp    QWORD PTR [rbp+0x48],0x0
  43043b:	jne    0x430447
  43043d:	test   BYTE PTR [rbp+0x20],0x1
  430441:	je     0x430588
  430447:	mov    rax,QWORD PTR [rsp+0x58]
  43044c:	xor    r9d,r9d
  43044f:	xor    r8d,r8d
  430452:	or     BYTE PTR [rax+0xa8],0x2
  430459:	lea    rbx,[rax+0x70]
  43045d:	lea    rsi,[rax+0x80]
  430464:	mov    rax,QWORD PTR [rsp+0x60]
  430469:	mov    BYTE PTR [rsp+0xf8],0x6
  430471:	mov    rdx,rsi
  430474:	mov    rcx,rbx
  430477:	mov    QWORD PTR [rsp+0xf0],rbp
  43047f:	mov    QWORD PTR [rsp+0x20],rax
  430484:	call   0x426840
  430489:	mov    rcx,rax
  43048c:	mov    QWORD PTR [rsp+0x48],rax
  430491:	lea    rdx,[rdi+0x20]
  430495:	test   rcx,rcx
  430498:	mov    rax,rdi
  43049b:	jne    0x4304af
  43049d:	jmp    0x4305d3
  4304a2:	add    rax,0x4
  4304a6:	cmp    rax,rdx
  4304a9:	je     0x4305e6
  4304af:	mov    r8d,DWORD PTR [rax]
  4304b2:	test   r8d,r8d
  4304b5:	je     0x4304a2
  4304b7:	mov    rax,QWORD PTR [rsp+0x60]
  4304bc:	xor    r8d,r8d
  4304bf:	xor    r9d,r9d
  4304c2:	mov    rdx,rsi
  4304c5:	mov    rcx,rbx
  4304c8:	mov    BYTE PTR [rsp+0xf8],0x3
  4304d0:	mov    QWORD PTR [rsp+0xf0],rdi
  4304d8:	mov    QWORD PTR [rsp+0x20],rax
  4304dd:	call   0x426840
  4304e2:	test   rax,rax
  4304e5:	mov    r8,rax
  4304e8:	je     0x4305d3
  4304ee:	lea    r9,[rsp+0x110]
  4304f6:	mov    rdx,rsi
  4304f9:	mov    rcx,rbx
  4304fc:	mov    BYTE PTR [rsp+0x118],0xa
  430504:	mov    QWORD PTR [rsp+0x20],r9
  430509:	mov    r9,QWORD PTR [rsp+0x48]
  43050e:	call   0x426840
  430513:	test   rax,rax
  430516:	mov    QWORD PTR [rsp+0x48],rax
  43051b:	jne    0x42f3c1
  430521:	jmp    0x4305d3
  430526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430530:	mov    eax,r12d
  430533:	neg    eax
  430535:	cdqe   
  430537:	add    QWORD PTR [r15+0x48],rax
  43053b:	mov    BYTE PTR [rbx+0x8],0x1
  43053f:	mov    eax,DWORD PTR [rsp+0xc0]
  430546:	jmp    0x42fe35
  43054b:	mov    rax,QWORD PTR [rsp+0x1b8]
  430553:	mov    DWORD PTR [rax],0x2
  430559:	jmp    0x42ffc1
  43055e:	lea    rdx,[rdi+0x20]
  430562:	mov    rax,rdi
  430565:	not    DWORD PTR [rax]
  430567:	add    rax,0x4
  43056b:	cmp    rax,rdx
  43056e:	jne    0x430565
  430570:	jmp    0x4303e4
  430575:	mov    rax,QWORD PTR [rsp+0x1b8]
  43057d:	mov    DWORD PTR [rax],0x3
  430583:	jmp    0x42ffc1
  430588:	mov    rcx,rbp
  43058b:	call   0x425860
  430590:	mov    rax,QWORD PTR [rsp+0x58]
  430595:	xor    r9d,r9d
  430598:	xor    r8d,r8d
  43059b:	mov    BYTE PTR [rsp+0xf8],0x3
  4305a3:	mov    QWORD PTR [rsp+0xf0],rdi
  4305ab:	lea    rdx,[rax+0x80]
  4305b2:	lea    rcx,[rax+0x70]
  4305b6:	mov    rax,QWORD PTR [rsp+0x60]
  4305bb:	mov    QWORD PTR [rsp+0x20],rax
  4305c0:	call   0x426840
  4305c5:	test   rax,rax
  4305c8:	mov    QWORD PTR [rsp+0x48],rax
  4305cd:	jne    0x42f3c1
  4305d3:	mov    rax,QWORD PTR [rsp+0x1b8]
  4305db:	mov    DWORD PTR [rax],0xc
  4305e1:	jmp    0x42ffc1
  4305e6:	mov    rcx,rdi
  4305e9:	call   0x43a748
  4305ee:	jmp    0x42f3c1
  4305f3:	mov    ecx,r10d
  4305f6:	mov    DWORD PTR [rsp+0xa0],r9d
  4305fe:	mov    DWORD PTR [rsp+0x98],r10d
  430606:	call   0x4354e0
  43060b:	cmp    ax,0xffff
  43060f:	mov    r14d,eax
  430612:	mov    r9d,DWORD PTR [rsp+0xa0]
  43061a:	sete   r11b
  43061e:	jne    0x43065c
  430620:	test   r13,r13
  430623:	mov    r10d,DWORD PTR [rsp+0x98]
  43062b:	jne    0x43065c
  43062d:	mov    r14d,r10d
  430630:	mov    edx,DWORD PTR [rsp+0xd0]
  430637:	xor    r11d,r11d
  43063a:	jmp    0x4302f5
  43063f:	xor    r9d,r9d
  430642:	cmp    edx,0x3
  430645:	jne    0x4302d1
  43064b:	mov    rax,QWORD PTR [rsp+0xd8]
  430653:	movzx  r9d,BYTE PTR [rax]
  430657:	jmp    0x4302d1
  43065c:	mov    edx,DWORD PTR [rsp+0xd0]
  430663:	jmp    0x4302f5
  430668:	xor    r10d,r10d
  43066b:	test   r14b,r14b
  43066e:	je     0x4302c0
  430674:	mov    rax,QWORD PTR [rsp+0xc8]
  43067c:	movzx  r10d,BYTE PTR [rax]
  430680:	jmp    0x4302c0
  430685:	mov    rcx,QWORD PTR [rsp+0xd8]
  43068d:	mov    DWORD PTR [rsp+0xa0],edx
  430694:	mov    DWORD PTR [rsp+0x98],r8d
  43069c:	call   0x43a620
  4306a1:	cmp    rax,0x1
  4306a5:	mov    r8d,DWORD PTR [rsp+0x98]
  4306ad:	mov    edx,DWORD PTR [rsp+0xa0]
  4306b4:	jbe    0x4302ae
  4306ba:	jmp    0x4300bb
  4306bf:	mov    ecx,r9d
  4306c2:	mov    BYTE PTR [rsp+0xa0],r11b
  4306ca:	mov    DWORD PTR [rsp+0x98],r9d
  4306d2:	call   0x4354e0
  4306d7:	cmp    ax,0xffff
  4306db:	mov    r10d,eax
  4306de:	movzx  r11d,BYTE PTR [rsp+0xa0]
  4306e7:	sete   al
  4306ea:	jne    0x43031f
  4306f0:	test   r13,r13
  4306f3:	jne    0x430317
  4306f9:	mov    r9d,DWORD PTR [rsp+0x98]
  430701:	mov    r10d,r9d
  430704:	jmp    0x43031f
  430709:	mov    rbx,rdi
  43070c:	jmp    0x42f77f
  430711:	mov    rax,QWORD PTR [rsp+0x48]
  430716:	mov    rcx,QWORD PTR [rbp+0x0]
  43071a:	lea    rax,[rax+rax*1+0x1]
  43071f:	lea    rdx,[rax+rax*1]
  430723:	mov    QWORD PTR [rsp+0x48],rax
  430728:	call   0x43a680
  43072d:	test   rax,rax
  430730:	je     0x4305d3
  430736:	mov    QWORD PTR [rbp+0x0],rax
  43073a:	mov    rdx,QWORD PTR [rbp+0x28]
  43073e:	jmp    0x42ff41
  430743:	mov    rax,QWORD PTR [rsp+0x68]
  430748:	mov    rcx,QWORD PTR [r13+0x8]
  43074c:	mov    DWORD PTR [rsp+0xac],r10d
  430754:	lea    rax,[rax+rax*1+0x1]
  430759:	lea    r11,[rax+rax*1]
  43075d:	mov    QWORD PTR [rsp+0x68],rax
  430762:	mov    rdx,r11
  430765:	mov    QWORD PTR [rsp+0xa0],r11
  43076d:	call   0x43a680
  430772:	mov    r11,QWORD PTR [rsp+0xa0]
  43077a:	mov    rcx,QWORD PTR [r13+0x10]
  43077e:	mov    QWORD PTR [rsp+0x98],rax
  430786:	mov    rdx,r11
  430789:	call   0x43a680
  43078e:	test   rax,rax
  430791:	mov    r9,QWORD PTR [rsp+0x98]
  430799:	je     0x4307e3
  43079b:	test   r9,r9
  43079e:	mov    r10d,DWORD PTR [rsp+0xac]
  4307a6:	je     0x4307e3
  4307a8:	mov    QWORD PTR [r13+0x8],r9
  4307ac:	mov    QWORD PTR [r13+0x10],rax
  4307b0:	mov    rdx,QWORD PTR [r13+0x40]
  4307b4:	jmp    0x430354
  4307b9:	test   rax,rax
  4307bc:	je     0x4307d0
  4307be:	lea    rdx,[rip+0xffffffffffff50fb]        # 0x4258c0
  4307c5:	xor    r8d,r8d
  4307c8:	mov    rcx,rax
  4307cb:	call   0x424b00
  4307d0:	mov    rax,QWORD PTR [rsp+0x1b8]
  4307d8:	mov    DWORD PTR [rax],0x8
  4307de:	jmp    0x42f340
  4307e3:	mov    r13,rax
  4307e6:	mov    rcx,r9
  4307e9:	call   0x43a748
  4307ee:	mov    rcx,r13
  4307f1:	call   0x43a748
  4307f6:	mov    eax,0xc
  4307fb:	jmp    0x4300c0
  430800:	mov    esi,0x80
  430805:	mov    DWORD PTR [rsp+0x48],0x4
  43080d:	mov    rbp,QWORD PTR [rip+0x2423c]        # 0x454a50
  430814:	mov    r13d,0x1
  43081a:	movsxd rax,DWORD PTR [rsp+0x48]
  43081f:	mov    rbx,QWORD PTR [rsp+0x58]
  430824:	lea    edi,[rsi+0x20]
  430827:	mov    r14d,esi
  43082a:	lea    r12,[rbx+rax*4]
  43082e:	xchg   ax,ax
  430830:	mov    ebx,r14d
  430833:	mov    ecx,r14d
  430836:	sub    ebx,esi
  430838:	call   rbp
  43083a:	test   eax,eax
  43083c:	jne    0x430870
  43083e:	cmp    r14d,0x5f
  430842:	je     0x430870
  430844:	add    r14d,0x1
  430848:	cmp    edi,r14d
  43084b:	jne    0x430830
  43084d:	add    DWORD PTR [rsp+0x48],0x1
  430852:	mov    esi,edi
  430854:	mov    eax,DWORD PTR [rsp+0x48]
  430858:	cmp    eax,0x8
  43085b:	jne    0x43081a
  43085d:	mov    rax,QWORD PTR [rsp+0x40]
  430862:	mov    edx,DWORD PTR [rax]
  430864:	jmp    0x42f9c7
  430869:	nop    DWORD PTR [rax+0x0]
  430870:	mov    eax,r13d
  430873:	mov    ecx,ebx
  430875:	shl    eax,cl
  430877:	or     DWORD PTR [r12+0xb0],eax
  43087f:	jmp    0x430844
  430881:	xor    esi,esi
  430883:	mov    DWORD PTR [rsp+0x48],0x0
  43088b:	jmp    0x43080d
  43088d:	nop    DWORD PTR [rax]
  430890:	push   r15
  430892:	push   r14
  430894:	push   r13
  430896:	push   r12
  430898:	push   rbp
  430899:	push   rdi
  43089a:	push   rsi
  43089b:	push   rbx
  43089c:	sub    rsp,0x68
  4308a0:	mov    rsi,QWORD PTR [rsp+0xd0]
  4308a8:	mov    rdi,QWORD PTR [rsp+0xd8]
  4308b0:	mov    r14,QWORD PTR [rdx]
  4308b3:	mov    r12,rcx
  4308b6:	mov    rbp,rdx
  4308b9:	mov    rbx,r8
  4308bc:	mov    r13d,r9d
  4308bf:	mov    QWORD PTR [rsp+0x28],rdi
  4308c4:	mov    QWORD PTR [rsp+0x20],rsi
  4308c9:	call   0x42f280
  4308ce:	test   rax,rax
  4308d1:	mov    r15,rax
  4308d4:	jne    0x4308e0
  4308d6:	mov    edx,DWORD PTR [rdi]
  4308d8:	test   edx,edx
  4308da:	jne    0x4309f0
  4308e0:	lea    rax,[r14+0x80]
  4308e7:	mov    QWORD PTR [rsp+0x38],rax
  4308ec:	lea    rax,[r14+0x70]
  4308f0:	mov    QWORD PTR [rsp+0x40],rax
  4308f5:	lea    rax,[rsp+0x50]
  4308fa:	mov    QWORD PTR [rsp+0x48],rax
  4308ff:	nop
  430900:	movzx  eax,BYTE PTR [rbx+0x8]
  430904:	mov    edx,eax
  430906:	and    edx,0xfffffff7
  430909:	cmp    dl,0x2
  43090c:	je     0x43095f
  43090e:	test   rsi,rsi
  430911:	je     0x430917
  430913:	cmp    al,0x9
  430915:	je     0x43095f
  430917:	mov    QWORD PTR [rsp+0x28],rdi
  43091c:	mov    QWORD PTR [rsp+0x20],rsi
  430921:	mov    r9d,r13d
  430924:	mov    r8,rbx
  430927:	mov    rdx,rbp
  43092a:	mov    rcx,r12
  43092d:	call   0x42f280
  430932:	test   rax,rax
  430935:	mov    r14,rax
  430938:	jne    0x430940
  43093a:	mov    eax,DWORD PTR [rdi]
  43093c:	test   eax,eax
  43093e:	jne    0x4309a4
  430940:	test   r14,r14
  430943:	je     0x43094a
  430945:	test   r15,r15
  430948:	jne    0x430973
  43094a:	movzx  eax,BYTE PTR [rbx+0x8]
  43094e:	test   r15,r15
  430951:	cmove  r15,r14
  430955:	mov    edx,eax
  430957:	and    edx,0xfffffff7
  43095a:	cmp    dl,0x2
  43095d:	jne    0x43090e
  43095f:	mov    rax,r15
  430962:	add    rsp,0x68
  430966:	pop    rbx
  430967:	pop    rsi
  430968:	pop    rdi
  430969:	pop    rbp
  43096a:	pop    r12
  43096c:	pop    r13
  43096e:	pop    r14
  430970:	pop    r15
  430972:	ret    
  430973:	mov    rax,QWORD PTR [rsp+0x48]
  430978:	mov    rdx,QWORD PTR [rsp+0x38]
  43097d:	mov    r9,r14
  430980:	mov    rcx,QWORD PTR [rsp+0x40]
  430985:	mov    r8,r15
  430988:	mov    BYTE PTR [rsp+0x58],0x10
  43098d:	mov    QWORD PTR [rsp+0x20],rax
  430992:	call   0x426840
  430997:	test   rax,rax
  43099a:	je     0x4309bf
  43099c:	mov    r15,rax
  43099f:	jmp    0x430900
  4309a4:	test   r15,r15
  4309a7:	je     0x4309f0
  4309a9:	lea    rdx,[rip+0xffffffffffff4f10]        # 0x4258c0
  4309b0:	xor    r8d,r8d
  4309b3:	mov    rcx,r15
  4309b6:	call   0x424b00
  4309bb:	xor    eax,eax
  4309bd:	jmp    0x430962
  4309bf:	lea    rdx,[rip+0xffffffffffff4efa]        # 0x4258c0
  4309c6:	xor    r8d,r8d
  4309c9:	mov    rcx,r14
  4309cc:	call   0x424b00
  4309d1:	lea    rdx,[rip+0xffffffffffff4ee8]        # 0x4258c0
  4309d8:	xor    r8d,r8d
  4309db:	mov    rcx,r15
  4309de:	call   0x424b00
  4309e3:	mov    DWORD PTR [rdi],0xc
  4309e9:	nop    DWORD PTR [rax+0x0]
  4309f0:	xor    eax,eax
  4309f2:	jmp    0x430962
  4309f7:	nop    WORD PTR [rax+rax*1+0x0]
  430a00:	push   r15
  430a02:	push   r14
  430a04:	push   r13
  430a06:	push   r12
  430a08:	push   rbp
  430a09:	push   rdi
  430a0a:	push   rsi
  430a0b:	push   rbx
  430a0c:	sub    rsp,0x58
  430a10:	mov    rdi,QWORD PTR [rdx]
  430a13:	mov    r12,QWORD PTR [rsp+0xc0]
  430a1b:	mov    r15,QWORD PTR [rsp+0xc8]
  430a23:	mov    rsi,rcx
  430a26:	mov    QWORD PTR [rsp+0xa8],rdx
  430a2e:	mov    rbx,r8
  430a31:	mov    DWORD PTR [rsp+0xb8],r9d
  430a39:	mov    eax,DWORD PTR [rdi+0xa4]
  430a3f:	mov    QWORD PTR [rsp+0x20],r12
  430a44:	mov    QWORD PTR [rsp+0x28],r15
  430a49:	mov    DWORD PTR [rsp+0x3c],eax
  430a4d:	call   0x430890
  430a52:	test   rax,rax
  430a55:	mov    rbp,rax
  430a58:	jne    0x430a65
  430a5a:	mov    edx,DWORD PTR [r15]
  430a5d:	test   edx,edx
  430a5f:	jne    0x430b80
  430a65:	mov    eax,DWORD PTR [rsp+0xb8]
  430a6c:	lea    r14,[rsp+0x40]
  430a71:	or     eax,0x800000
  430a76:	mov    DWORD PTR [rsp+0x38],eax
  430a7a:	lea    rax,[rdi+0x80]
  430a81:	mov    QWORD PTR [rsp+0x30],rax
  430a86:	jmp    0x430b0c
  430a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  430a90:	test   r12,r12
  430a93:	je     0x430a9d
  430a95:	cmp    al,0x9
  430a97:	je     0x430b3a
  430a9d:	mov    eax,DWORD PTR [rsp+0x3c]
  430aa1:	mov    r9d,DWORD PTR [rsp+0xb8]
  430aa9:	mov    r8,rbx
  430aac:	mov    rdx,QWORD PTR [rsp+0xa8]
  430ab4:	mov    r13d,DWORD PTR [rdi+0xa4]
  430abb:	mov    rcx,rsi
  430abe:	mov    DWORD PTR [rdi+0xa4],eax
  430ac4:	mov    QWORD PTR [rsp+0x28],r15
  430ac9:	mov    QWORD PTR [rsp+0x20],r12
  430ace:	call   0x430890
  430ad3:	test   rax,rax
  430ad6:	mov    r9,rax
  430ad9:	jne    0x430ae2
  430adb:	mov    eax,DWORD PTR [r15]
  430ade:	test   eax,eax
  430ae0:	jne    0x430b60
  430ae2:	or     DWORD PTR [rdi+0xa4],r13d
  430ae9:	mov    rdx,QWORD PTR [rsp+0x30]
  430aee:	lea    rcx,[rdi+0x70]
  430af2:	mov    r8,rbp
  430af5:	mov    QWORD PTR [rsp+0x20],r14
  430afa:	mov    BYTE PTR [rsp+0x48],0xa
  430aff:	call   0x426840
  430b04:	test   rax,rax
  430b07:	mov    rbp,rax
  430b0a:	je     0x430b40
  430b0c:	cmp    BYTE PTR [rbx+0x8],0xa
  430b10:	jne    0x430b84
  430b12:	mov    r8d,DWORD PTR [rsp+0x38]
  430b17:	mov    rdx,rsi
  430b1a:	mov    rcx,rbx
  430b1d:	call   0x42eb60
  430b22:	cdqe   
  430b24:	add    QWORD PTR [rsi+0x48],rax
  430b28:	movzx  eax,BYTE PTR [rbx+0x8]
  430b2c:	mov    edx,eax
  430b2e:	and    edx,0xfffffff7
  430b31:	cmp    dl,0x2
  430b34:	jne    0x430a90
  430b3a:	xor    r9d,r9d
  430b3d:	jmp    0x430ae9
  430b3f:	nop
  430b40:	mov    DWORD PTR [r15],0xc
  430b47:	xor    eax,eax
  430b49:	add    rsp,0x58
  430b4d:	pop    rbx
  430b4e:	pop    rsi
  430b4f:	pop    rdi
  430b50:	pop    rbp
  430b51:	pop    r12
  430b53:	pop    r13
  430b55:	pop    r14
  430b57:	pop    r15
  430b59:	ret    
  430b5a:	nop    WORD PTR [rax+rax*1+0x0]
  430b60:	test   rbp,rbp
  430b63:	je     0x430b80
  430b65:	lea    rdx,[rip+0xffffffffffff4d54]        # 0x4258c0
  430b6c:	xor    r8d,r8d
  430b6f:	mov    rcx,rbp
  430b72:	call   0x424b00
  430b77:	nop    WORD PTR [rax+rax*1+0x0]
  430b80:	xor    eax,eax
  430b82:	jmp    0x430b49
  430b84:	mov    rax,rbp
  430b87:	jmp    0x430b49
  430b89:	nop    DWORD PTR [rax+0x0]
  430b90:	push   r15
  430b92:	push   r14
  430b94:	push   r13
  430b96:	push   r12
  430b98:	push   rbp
  430b99:	push   rdi
  430b9a:	push   rsi
  430b9b:	push   rbx
  430b9c:	sub    rsp,0x138
  430ba3:	movzx  eax,BYTE PTR [rcx+0x38]
  430ba7:	mov    rbx,QWORD PTR [rcx]
  430baa:	mov    r12,rcx
  430bad:	mov    QWORD PTR [rsp+0x188],rdx
  430bb5:	mov    QWORD PTR [rsp+0x190],r8
  430bbd:	mov    DWORD PTR [r12+0x18],r9d
  430bc2:	mov    DWORD PTR [rsp+0x198],r9d
  430bca:	mov    DWORD PTR [rsp+0x5c],0x0
  430bd2:	mov    QWORD PTR [rcx+0x10],0x0
  430bda:	and    eax,0xffffff90
  430bdd:	cmp    QWORD PTR [rcx+0x8],0xe7
  430be5:	mov    QWORD PTR [rcx+0x30],0x0
  430bed:	mov    BYTE PTR [rcx+0x38],al
  430bf0:	jbe    0x431447
  430bf6:	lea    rdi,[rbx+0x8]
  430bfa:	mov    rcx,rbx
  430bfd:	xor    eax,eax
  430bff:	mov    QWORD PTR [r12+0x10],0xe8
  430c08:	mov    QWORD PTR [rbx],0x0
  430c0f:	and    rdi,0xfffffffffffffff8
  430c13:	mov    QWORD PTR [rbx+0xe0],0x0
  430c1e:	sub    rcx,rdi
  430c21:	add    ecx,0xe8
  430c27:	shr    ecx,0x3
  430c2a:	rep stos QWORD PTR es:[rdi],rax
  430c2d:	movabs rax,0x555555555555554
  430c37:	mov    DWORD PTR [rbx+0x80],0xf
  430c41:	cmp    QWORD PTR [rsp+0x190],rax
  430c49:	ja     0x431264
  430c4f:	mov    rax,QWORD PTR [rsp+0x190]
  430c57:	add    rax,0x1
  430c5b:	mov    rcx,rax
  430c5e:	mov    QWORD PTR [rbx+0x8],rax
  430c62:	mov    QWORD PTR [rsp+0x30],rax
  430c67:	shl    rcx,0x4
  430c6b:	call   0x423ec0
  430c70:	cmp    QWORD PTR [rsp+0x190],0x0
  430c79:	mov    QWORD PTR [rbx],rax
  430c7c:	je     0x4314bf
  430c82:	mov    rax,QWORD PTR [rsp+0x190]
  430c8a:	mov    edx,0x1
  430c8f:	nop
  430c90:	add    rdx,rdx
  430c93:	cmp    rax,rdx
  430c96:	jae    0x430c90
  430c98:	lea    rsi,[rdx-0x1]
  430c9c:	mov    ecx,0x18
  430ca1:	call   0x43a798
  430ca6:	mov    QWORD PTR [rbx+0x40],rax
  430caa:	mov    rax,QWORD PTR [rip+0x18a0f]        # 0x4496c0
  430cb1:	mov    ecx,0x2710
  430cb6:	mov    QWORD PTR [rbx+0x88],rsi
  430cbd:	mov    rax,QWORD PTR [rax]
  430cc0:	mov    eax,DWORD PTR [rax]
  430cc2:	mov    DWORD PTR [rbx+0xac],eax
  430cc8:	call   0x424260
  430ccd:	movzx  edx,BYTE PTR [rax]
  430cd0:	and    edx,0xffffffdf
  430cd3:	cmp    dl,0x55
  430cd6:	jne    0x430d15
  430cd8:	movzx  edx,BYTE PTR [rax+0x1]
  430cdc:	and    edx,0xffffffdf
  430cdf:	cmp    dl,0x54
  430ce2:	jne    0x430d15
  430ce4:	movzx  edx,BYTE PTR [rax+0x2]
  430ce8:	and    edx,0xffffffdf
  430ceb:	cmp    dl,0x46
  430cee:	jne    0x430d15
  430cf0:	xor    edx,edx
  430cf2:	cmp    BYTE PTR [rax+0x3],0x2d
  430cf6:	lea    rdi,[rip+0x178d3]        # 0x4485d0
  430cfd:	mov    ecx,0x2
  430d02:	sete   dl
  430d05:	lea    rsi,[rax+rdx*1+0x3]
  430d0a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  430d0c:	jne    0x430d15
  430d0e:	or     BYTE PTR [rbx+0xa8],0x4
  430d15:	movzx  eax,BYTE PTR [rbx+0xa8]
  430d1c:	mov    edx,eax
  430d1e:	and    edx,0xfffffff7
  430d21:	cmp    DWORD PTR [rbx+0xac],0x1
  430d28:	mov    BYTE PTR [rbx+0xa8],dl
  430d2e:	jle    0x430d43
  430d30:	test   al,0x4
  430d32:	je     0x43135e
  430d38:	lea    rax,[rip+0x17921]        # 0x448660
  430d3f:	mov    QWORD PTR [rbx+0x78],rax
  430d43:	cmp    QWORD PTR [rbx],0x0
  430d47:	je     0x431264
  430d4d:	cmp    QWORD PTR [rbx+0x40],0x0
  430d52:	je     0x431264
  430d58:	lea    rax,[rbx+0xe0]
  430d5f:	xor    edx,edx
  430d61:	mov    DWORD PTR [rsp+0x5c],0x0
  430d69:	mov    rcx,rax
  430d6c:	mov    QWORD PTR [rsp+0x40],rax
  430d71:	call   0x433f68
  430d76:	test   eax,eax
  430d78:	jne    0x431264
  430d7e:	mov    eax,DWORD PTR [rsp+0x5c]
  430d82:	test   eax,eax
  430d84:	jne    0x430f5d
  430d8a:	mov    eax,DWORD PTR [rsp+0x198]
  430d91:	lea    rbp,[rsp+0x90]
  430d99:	mov    ecx,0x13
  430d9e:	mov    rdx,QWORD PTR [r12+0x28]
  430da3:	mov    rdi,rbp
  430da6:	and    eax,0x400000
  430dab:	setne  r14b
  430daf:	mov    DWORD PTR [rsp+0x38],eax
  430db3:	xor    eax,eax
  430db5:	rep stos QWORD PTR es:[rdi],rax
  430db8:	mov    rax,QWORD PTR [rsp+0x188]
  430dc0:	test   rdx,rdx
  430dc3:	mov    QWORD PTR [rsp+0x108],rdx
  430dcb:	setne  dil
  430dcf:	mov    edx,DWORD PTR [rbx+0xac]
  430dd5:	mov    ecx,r14d
  430dd8:	or     ecx,edi
  430dda:	mov    BYTE PTR [rsp+0x118],r14b
  430de2:	mov    QWORD PTR [rsp+0x90],rax
  430dea:	mov    rax,QWORD PTR [rsp+0x190]
  430df2:	mov    BYTE PTR [rsp+0x11b],cl
  430df9:	mov    DWORD PTR [rsp+0x120],edx
  430e00:	mov    QWORD PTR [rsp+0xe8],rax
  430e08:	mov    QWORD PTR [rsp+0xe0],rax
  430e10:	movzx  eax,BYTE PTR [rbx+0xa8]
  430e17:	mov    r8d,eax
  430e1a:	shr    al,0x3
  430e1d:	and    eax,0x1
  430e20:	shr    r8b,0x2
  430e24:	mov    BYTE PTR [rsp+0x11a],al
  430e2b:	mov    rax,QWORD PTR [rsp+0x190]
  430e33:	and    r8d,0x1
  430e37:	mov    BYTE PTR [rsp+0x119],r8b
  430e3f:	test   rax,rax
  430e42:	mov    QWORD PTR [rsp+0xf8],rax
  430e4a:	mov    QWORD PTR [rsp+0xf0],rax
  430e52:	je     0x430e77
  430e54:	mov    rdx,QWORD PTR [rsp+0x30]
  430e59:	mov    rcx,rbp
  430e5c:	call   0x424bd0
  430e61:	test   eax,eax
  430e63:	jne    0x430ef5
  430e69:	movzx  ecx,BYTE PTR [rsp+0x11b]
  430e71:	mov    edx,DWORD PTR [rbx+0xac]
  430e77:	test   cl,cl
  430e79:	mov    rax,QWORD PTR [rsp+0x188]
  430e81:	cmovne rax,QWORD PTR [rsp+0x98]
  430e8a:	test   r14b,r14b
  430e8d:	mov    QWORD PTR [rsp+0x98],rax
  430e95:	je     0x430f8e
  430e9b:	cmp    edx,0x1
  430e9e:	jle    0x43173e
  430ea4:	mov    rsi,QWORD PTR [rsp+0x190]
  430eac:	mov    rcx,rbp
  430eaf:	call   0x425120
  430eb4:	test   eax,eax
  430eb6:	jne    0x430ef5
  430eb8:	cmp    rsi,QWORD PTR [rsp+0xc8]
  430ec0:	jle    0x430fa8
  430ec6:	movsxd rax,DWORD PTR [rbx+0xac]
  430ecd:	mov    rdx,QWORD PTR [rsp+0xd0]
  430ed5:	add    rax,QWORD PTR [rsp+0xc0]
  430edd:	cmp    rdx,rax
  430ee0:	jg     0x430fa8
  430ee6:	add    rdx,rdx
  430ee9:	mov    rcx,rbp
  430eec:	call   0x424bd0
  430ef1:	test   eax,eax
  430ef3:	je     0x430eac
  430ef5:	mov    DWORD PTR [rsp+0x5c],eax
  430ef9:	mov    rdi,QWORD PTR [r12]
  430efd:	mov    rcx,QWORD PTR [rdi+0x70]
  430f01:	test   rcx,rcx
  430f04:	je     0x430f20
  430f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f10:	mov    rsi,QWORD PTR [rcx]
  430f13:	call   0x43a748
  430f18:	test   rsi,rsi
  430f1b:	mov    rcx,rsi
  430f1e:	jne    0x430f10
  430f20:	mov    rcx,QWORD PTR [rdi+0x20]
  430f24:	mov    QWORD PTR [rdi+0x70],0x0
  430f2c:	mov    DWORD PTR [rdi+0x80],0xf
  430f36:	mov    QWORD PTR [rdi+0x68],0x0
  430f3e:	call   0x43a748
  430f43:	mov    QWORD PTR [rdi+0x20],0x0
  430f4b:	mov    rcx,rbp
  430f4e:	call   0x425e90
  430f53:	mov    rcx,QWORD PTR [rsp+0x40]
  430f58:	call   0x433f70
  430f5d:	mov    rcx,rbx
  430f60:	call   0x425ed0
  430f65:	mov    eax,DWORD PTR [rsp+0x5c]
  430f69:	mov    QWORD PTR [r12],0x0
  430f71:	mov    QWORD PTR [r12+0x8],0x0
  430f7a:	add    rsp,0x138
  430f81:	pop    rbx
  430f82:	pop    rsi
  430f83:	pop    rdi
  430f84:	pop    rbp
  430f85:	pop    r12
  430f87:	pop    r13
  430f89:	pop    r14
  430f8b:	pop    r15
  430f8d:	ret    
  430f8e:	cmp    edx,0x1
  430f91:	jg     0x43142d
  430f97:	test   dil,dil
  430f9a:	je     0x4313e1
  430fa0:	mov    rcx,rbp
  430fa3:	call   0x4246e0
  430fa8:	mov    eax,DWORD PTR [rsp+0x198]
  430faf:	mov    rdi,QWORD PTR [r12]
  430fb3:	mov    rdx,rbp
  430fb6:	mov    r8d,DWORD PTR [rsp+0x198]
  430fbe:	mov    QWORD PTR [r12+0x30],0x0
  430fc7:	mov    DWORD PTR [rsp+0x5c],0x0
  430fcf:	mov    DWORD PTR [rdi+0xd0],eax
  430fd5:	lea    rax,[rsp+0x60]
  430fda:	or     r8d,0x800000
  430fe1:	mov    rcx,rax
  430fe4:	mov    rsi,rax
  430fe7:	mov    QWORD PTR [rsp+0x30],rax
  430fec:	call   0x42eb60
  430ff1:	mov    r9d,DWORD PTR [rsp+0x198]
  430ff9:	cdqe   
  430ffb:	add    QWORD PTR [rsp+0xd8],rax
  431003:	lea    rax,[rsp+0x5c]
  431008:	mov    r8,rsi
  43100b:	mov    rdx,r12
  43100e:	mov    QWORD PTR [rsp+0x20],0x0
  431017:	mov    rcx,rbp
  43101a:	mov    QWORD PTR [rsp+0x28],rax
  43101f:	call   0x430a00
  431024:	mov    edx,DWORD PTR [rsp+0x5c]
  431028:	mov    rsi,rax
  43102b:	test   edx,edx
  43102d:	jne    0x431472
  431033:	lea    r15,[rdi+0x70]
  431037:	lea    r13,[rdi+0x80]
  43103e:	lea    rdi,[rsp+0x70]
  431043:	xor    r9d,r9d
  431046:	xor    r8d,r8d
  431049:	mov    BYTE PTR [rsp+0x78],0x2
  43104e:	mov    QWORD PTR [rsp+0x20],rdi
  431053:	mov    rdx,r13
  431056:	mov    rcx,r15
  431059:	call   0x426840
  43105e:	test   rsi,rsi
  431061:	mov    r14,rax
  431064:	je     0x431081
  431066:	mov    QWORD PTR [rsp+0x20],rdi
  43106b:	mov    r9,r14
  43106e:	mov    r8,rsi
  431071:	mov    rdx,r13
  431074:	mov    rcx,r15
  431077:	mov    BYTE PTR [rsp+0x78],0x10
  43107c:	call   0x426840
  431081:	test   rax,rax
  431084:	je     0x4314aa
  43108a:	test   r14,r14
  43108d:	je     0x4314aa
  431093:	mov    r15,QWORD PTR [r12]
  431097:	mov    QWORD PTR [rbx+0x68],rax
  43109b:	mov    rax,QWORD PTR [r15+0x8]
  43109f:	lea    rcx,[rax*8+0x0]
  4310a7:	call   0x423ec0
  4310ac:	mov    QWORD PTR [r15+0x18],rax
  4310b0:	mov    rax,QWORD PTR [r15+0x8]
  4310b4:	lea    rcx,[rax*8+0x0]
  4310bc:	call   0x423ec0
  4310c1:	mov    QWORD PTR [r15+0x20],rax
  4310c5:	mov    rax,QWORD PTR [r15+0x8]
  4310c9:	lea    rcx,[rax+rax*2]
  4310cd:	shl    rcx,0x3
  4310d1:	call   0x423ec0
  4310d6:	mov    QWORD PTR [r15+0x28],rax
  4310da:	mov    rax,QWORD PTR [r15+0x8]
  4310de:	lea    rcx,[rax+rax*2]
  4310e2:	shl    rcx,0x3
  4310e6:	call   0x423ec0
  4310eb:	cmp    QWORD PTR [r15+0x18],0x0
  4310f0:	mov    QWORD PTR [r15+0x30],rax
  4310f4:	je     0x431354
  4310fa:	cmp    QWORD PTR [r15+0x20],0x0
  4310ff:	je     0x431354
  431105:	cmp    QWORD PTR [r15+0x28],0x0
  43110a:	je     0x43143a
  431110:	test   rax,rax
  431113:	je     0x431354
  431119:	mov    rax,QWORD PTR [r12+0x30]
  43111e:	lea    rcx,[rax*8+0x0]
  431126:	call   0x423ec0
  43112b:	test   rax,rax
  43112e:	mov    QWORD PTR [r15+0xd8],rax
  431135:	je     0x43119d
  431137:	xor    edx,edx
  431139:	cmp    QWORD PTR [r12+0x30],0x0
  43113f:	je     0x431150
  431141:	mov    QWORD PTR [rax+rdx*8],rdx
  431145:	add    rdx,0x1
  431149:	cmp    rdx,QWORD PTR [r12+0x30]
  43114e:	jb     0x431141
  431150:	mov    rcx,QWORD PTR [r15+0x68]
  431154:	lea    rdx,[rip+0xffffffffffff5445]        # 0x4265a0
  43115b:	mov    r8,r15
  43115e:	call   0x424b70
  431163:	mov    r8,QWORD PTR [r12+0x30]
  431168:	test   r8,r8
  43116b:	je     0x431722
  431171:	mov    rcx,QWORD PTR [r15+0xd8]
  431178:	cmp    QWORD PTR [rcx],0x0
  43117c:	jne    0x43119d
  43117e:	xor    edx,edx
  431180:	jmp    0x43118b
  431182:	mov    rdx,QWORD PTR [rcx+rax*8]
  431186:	cmp    rdx,rax
  431189:	jne    0x431194
  43118b:	lea    rax,[rdx+0x1]
  43118f:	cmp    r8,rax
  431192:	ja     0x431182
  431194:	cmp    r8,rax
  431197:	je     0x431729
  43119d:	mov    rcx,QWORD PTR [r15+0x68]
  4311a1:	lea    rdx,[rip+0xffffffffffff5a38]        # 0x426be0
  4311a8:	mov    r8,r12
  4311ab:	call   0x424b00
  4311b0:	test   eax,eax
  4311b2:	jne    0x430ef5
  4311b8:	mov    rcx,QWORD PTR [r15+0x68]
  4311bc:	lea    rdx,[rip+0xffffffffffff950d]        # 0x42a6d0
  4311c3:	mov    r8,r15
  4311c6:	call   0x424b00
  4311cb:	test   eax,eax
  4311cd:	jne    0x430ef5
  4311d3:	mov    rcx,QWORD PTR [r15+0x68]
  4311d7:	lea    rdx,[rip+0xffffffffffff5452]        # 0x426630
  4311de:	mov    r8,r15
  4311e1:	call   0x424b70
  4311e6:	mov    rcx,QWORD PTR [r15+0x68]
  4311ea:	lea    rdx,[rip+0xffffffffffff4f5f]        # 0x426150
  4311f1:	mov    r8,r15
  4311f4:	call   0x424b70
  4311f9:	test   eax,eax
  4311fb:	jne    0x430ef5
  431201:	mov    rdx,QWORD PTR [r15+0x10]
  431205:	xor    esi,esi
  431207:	xor    r13d,r13d
  43120a:	jmp    0x431214
  43120c:	nop    DWORD PTR [rax+0x0]
  431210:	add    r13,0x1
  431214:	cmp    r13,rdx
  431217:	je     0x431400
  43121d:	lea    r14,[r13+r13*2+0x0]
  431222:	shl    r14,0x3
  431226:	mov    rax,QWORD PTR [r15+0x30]
  43122a:	cmp    QWORD PTR [rax+r14*1+0x8],0x0
  431230:	jne    0x431210
  431232:	mov    r9d,0x1
  431238:	mov    r8,r13
  43123b:	mov    rdx,r15
  43123e:	mov    rcx,rdi
  431241:	call   0x4273d0
  431246:	test   eax,eax
  431248:	jne    0x430ef5
  43124e:	mov    rax,QWORD PTR [r15+0x30]
  431252:	cmp    QWORD PTR [rax+r14*1+0x8],0x0
  431258:	je     0x431416
  43125e:	mov    rdx,QWORD PTR [r15+0x10]
  431262:	jmp    0x431210
  431264:	mov    DWORD PTR [rsp+0x5c],0xc
  43126c:	jmp    0x430f5d
  431271:	test   BYTE PTR [r12+0x38],0x10
  431277:	jne    0x4314cb
  43127d:	cmp    QWORD PTR [r12+0x30],0x0
  431283:	je     0x4314cb
  431289:	test   BYTE PTR [r15+0xa8],0x1
  431291:	je     0x4314cb
  431297:	lea    rcx,[r13+r13*2+0x0]
  43129c:	shl    rcx,0x3
  4312a0:	call   0x423ec0
  4312a5:	test   rax,rax
  4312a8:	mov    QWORD PTR [r15+0x38],rax
  4312ac:	je     0x431354
  4312b2:	cmp    QWORD PTR [r15+0x10],0x0
  4312b7:	je     0x4314d9
  4312bd:	xor    ecx,ecx
  4312bf:	xor    edx,edx
  4312c1:	jmp    0x4312c7
  4312c3:	mov    rax,QWORD PTR [r15+0x38]
  4312c7:	add    rax,rcx
  4312ca:	add    rdx,0x1
  4312ce:	add    rcx,0x18
  4312d2:	mov    QWORD PTR [rax],0x0
  4312d9:	mov    QWORD PTR [rax+0x8],0x0
  4312e1:	mov    QWORD PTR [rax+0x10],0x0
  4312e9:	mov    rax,QWORD PTR [r15+0x10]
  4312ed:	cmp    rdx,rax
  4312f0:	jb     0x4312c3
  4312f2:	test   rax,rax
  4312f5:	je     0x4314d9
  4312fb:	mov    rax,QWORD PTR [r15+0x30]
  4312ff:	xor    r14d,r14d
  431302:	xor    r13d,r13d
  431305:	mov    QWORD PTR [rsp+0x48],rbx
  43130a:	lea    rdx,[rax+r14*1]
  43130e:	xor    esi,esi
  431310:	cmp    QWORD PTR [rdx+0x8],0x0
  431315:	mov    rbx,QWORD PTR [rdx+0x10]
  431319:	jg     0x431333
  43131b:	jmp    0x43174b
  431320:	mov    rax,QWORD PTR [r15+0x30]
  431324:	add    rsi,0x1
  431328:	cmp    rsi,QWORD PTR [rax+r14*1+0x8]
  43132d:	jge    0x43174b
  431333:	mov    rax,QWORD PTR [rbx+rsi*8]
  431337:	lea    rdx,[rax+rax*2]
  43133b:	mov    rax,QWORD PTR [r15+0x38]
  43133f:	lea    rcx,[rax+rdx*8]
  431343:	mov    rdx,r13
  431346:	call   0x424c70
  43134b:	test   al,al
  43134d:	jne    0x431320
  43134f:	mov    rbx,QWORD PTR [rsp+0x48]
  431354:	mov    eax,0xc
  431359:	jmp    0x430ef5
  43135e:	mov    edx,0x1
  431363:	mov    ecx,0x20
  431368:	call   0x43a798
  43136d:	test   rax,rax
  431370:	mov    QWORD PTR [rbx+0x78],rax
  431374:	je     0x431264
  43137a:	xor    r14d,r14d
  43137d:	xor    edi,edi
  43137f:	mov    r15d,0x1
  431385:	lea    r13d,[rdi+0x20]
  431389:	mov    esi,edi
  43138b:	nop    DWORD PTR [rax+rax*1+0x0]
  431390:	mov    ebp,esi
  431392:	mov    ecx,esi
  431394:	sub    ebp,edi
  431396:	call   0x4354e0
  43139b:	cmp    ax,0xffff
  43139f:	je     0x4313b3
  4313a1:	mov    rdx,r14
  4313a4:	add    rdx,QWORD PTR [rbx+0x78]
  4313a8:	mov    r11d,r15d
  4313ab:	mov    ecx,ebp
  4313ad:	shl    r11d,cl
  4313b0:	or     DWORD PTR [rdx],r11d
  4313b3:	cmp    esi,0x7f
  4313b6:	jg     0x4313c6
  4313b8:	movzx  eax,ax
  4313bb:	cmp    esi,eax
  4313bd:	je     0x4313c6
  4313bf:	or     BYTE PTR [rbx+0xa8],0x8
  4313c6:	add    esi,0x1
  4313c9:	cmp    esi,r13d
  4313cc:	jne    0x431390
  4313ce:	add    r14,0x4
  4313d2:	cmp    esi,0x100
  4313d8:	mov    edi,esi
  4313da:	jne    0x431385
  4313dc:	jmp    0x430d43
  4313e1:	mov    rax,QWORD PTR [rsp+0xd0]
  4313e9:	mov    QWORD PTR [rsp+0xc0],rax
  4313f1:	mov    QWORD PTR [rsp+0xc8],rax
  4313f9:	jmp    0x430fa8
  4313fe:	xchg   ax,ax
  431400:	test   sil,sil
  431403:	je     0x431271
  431409:	xor    r14d,r14d
  43140c:	xor    esi,esi
  43140e:	xor    r13d,r13d
  431411:	jmp    0x431226
  431416:	mov    rcx,QWORD PTR [rsp+0x80]
  43141e:	mov    esi,0x1
  431423:	call   0x43a748
  431428:	jmp    0x43125e
  43142d:	mov    rcx,rbp
  431430:	call   0x424f80
  431435:	jmp    0x430fa8
  43143a:	mov    DWORD PTR [rsp+0x5c],0xc
  431442:	jmp    0x430ef9
  431447:	mov    rcx,rbx
  43144a:	mov    edx,0xe8
  43144f:	call   0x43a680
  431454:	test   rax,rax
  431457:	mov    rbx,rax
  43145a:	je     0x431770
  431460:	mov    QWORD PTR [r12+0x8],0xe8
  431469:	mov    QWORD PTR [r12],rax
  43146d:	jmp    0x430bf6
  431472:	test   rsi,rsi
  431475:	je     0x4314b2
  431477:	lea    r15,[rdi+0x70]
  43147b:	lea    r13,[rdi+0x80]
  431482:	lea    rdi,[rsp+0x70]
  431487:	xor    r9d,r9d
  43148a:	xor    r8d,r8d
  43148d:	mov    BYTE PTR [rsp+0x78],0x2
  431492:	mov    QWORD PTR [rsp+0x20],rdi
  431497:	mov    rdx,r13
  43149a:	mov    rcx,r15
  43149d:	call   0x426840
  4314a2:	mov    r14,rax
  4314a5:	jmp    0x431066
  4314aa:	mov    DWORD PTR [rsp+0x5c],0xc
  4314b2:	mov    QWORD PTR [rbx+0x68],0x0
  4314ba:	jmp    0x430ef9
  4314bf:	xor    esi,esi
  4314c1:	mov    edx,0x1
  4314c6:	jmp    0x430c9c
  4314cb:	cmp    QWORD PTR [r15+0x98],0x0
  4314d3:	jne    0x431297
  4314d9:	mov    eax,DWORD PTR [rsp+0x38]
  4314dd:	mov    DWORD PTR [rsp+0x5c],0x0
  4314e5:	test   eax,eax
  4314e7:	jne    0x4314fe
  4314e9:	test   BYTE PTR [rbx+0xa8],0x4
  4314f0:	je     0x4314fe
  4314f2:	cmp    QWORD PTR [r12+0x28],0x0
  4314f8:	je     0x43177a
  4314fe:	mov    rax,QWORD PTR [rbx+0x68]
  431502:	mov    rcx,rdi
  431505:	mov    rax,QWORD PTR [rax+0x18]
  431509:	mov    rax,QWORD PTR [rax+0x38]
  43150d:	mov    QWORD PTR [rbx+0x90],rax
  431514:	lea    rdx,[rax+rax*2]
  431518:	mov    rax,QWORD PTR [rbx+0x30]
  43151c:	lea    rdx,[rax+rdx*8]
  431520:	call   0x4277a0
  431525:	test   eax,eax
  431527:	mov    esi,eax
  431529:	mov    DWORD PTR [rsp+0x60],eax
  43152d:	jne    0x431650
  431533:	cmp    QWORD PTR [rbx+0x98],0x0
  43153b:	jle    0x431611
  431541:	mov    r14,QWORD PTR [rsp+0x78]
  431546:	test   r14,r14
  431549:	jle    0x431611
  43154f:	lea    rax,[rdi+0x10]
  431553:	xor    r15d,r15d
  431556:	mov    QWORD PTR [rsp+0x38],rax
  43155b:	jmp    0x43156d
  43155d:	nop    DWORD PTR [rax]
  431560:	add    r15,0x1
  431564:	cmp    r14,r15
  431567:	jle    0x431611
  43156d:	mov    r8,QWORD PTR [rsp+0x80]
  431575:	mov    rcx,QWORD PTR [rbx]
  431578:	mov    r10,QWORD PTR [r8+r15*8]
  43157c:	mov    r9,r10
  43157f:	shl    r9,0x4
  431583:	add    r9,rcx
  431586:	cmp    BYTE PTR [r9+0x8],0x4
  43158b:	jne    0x431560
  43158d:	xor    edx,edx
  43158f:	jmp    0x43159a
  431591:	add    rdx,0x1
  431595:	cmp    rdx,r14
  431598:	je     0x431560
  43159a:	mov    rax,QWORD PTR [r8+rdx*8]
  43159e:	shl    rax,0x4
  4315a2:	add    rax,rcx
  4315a5:	cmp    BYTE PTR [rax+0x8],0x9
  4315a9:	jne    0x431591
  4315ab:	mov    r11,QWORD PTR [r9]
  4315ae:	cmp    QWORD PTR [rax],r11
  4315b1:	jne    0x431591
  4315b3:	cmp    rdx,r14
  4315b6:	je     0x431560
  4315b8:	mov    rcx,QWORD PTR [rbx+0x28]
  4315bc:	lea    rax,[r10+r10*2]
  4315c0:	mov    rdx,QWORD PTR [rsp+0x38]
  4315c5:	lea    rax,[rcx+rax*8]
  4315c9:	mov    rcx,r14
  4315cc:	mov    rax,QWORD PTR [rax+0x10]
  4315d0:	mov    r13,QWORD PTR [rax]
  4315d3:	mov    r8,r13
  4315d6:	call   0x426410
  4315db:	test   rax,rax
  4315de:	jne    0x431560
  4315e0:	mov    rax,QWORD PTR [rbx+0x30]
  4315e4:	lea    rdx,[r13+r13*2+0x0]
  4315e9:	mov    rcx,rdi
  4315ec:	lea    rdx,[rax+rdx*8]
  4315f0:	call   0x427210
  4315f5:	test   eax,eax
  4315f7:	jne    0x431868
  4315fd:	mov    r14,QWORD PTR [rsp+0x78]
  431602:	mov    r15d,0x1
  431608:	cmp    r14,r15
  43160b:	jg     0x43156d
  431611:	mov    rcx,QWORD PTR [rsp+0x30]
  431616:	xor    r9d,r9d
  431619:	mov    r8,rdi
  43161c:	mov    rdx,rbx
  43161f:	call   0x4279c0
  431624:	test   rax,rax
  431627:	mov    QWORD PTR [rbx+0x48],rax
  43162b:	je     0x431719
  431631:	cmp    BYTE PTR [rax+0x68],0x0
  431635:	js     0x4316b5
  431637:	mov    QWORD PTR [rbx+0x60],rax
  43163b:	mov    QWORD PTR [rbx+0x58],rax
  43163f:	mov    QWORD PTR [rbx+0x50],rax
  431643:	mov    rcx,QWORD PTR [rsp+0x80]
  43164b:	call   0x43a748
  431650:	mov    rdi,QWORD PTR [r12]
  431654:	mov    DWORD PTR [rsp+0x5c],esi
  431658:	mov    rcx,QWORD PTR [rdi+0x70]
  43165c:	test   rcx,rcx
  43165f:	je     0x431671
  431661:	mov    rsi,QWORD PTR [rcx]
  431664:	call   0x43a748
  431669:	test   rsi,rsi
  43166c:	mov    rcx,rsi
  43166f:	jne    0x431661
  431671:	mov    rcx,QWORD PTR [rdi+0x20]
  431675:	mov    QWORD PTR [rdi+0x70],0x0
  43167d:	mov    DWORD PTR [rdi+0x80],0xf
  431687:	mov    QWORD PTR [rdi+0x68],0x0
  43168f:	call   0x43a748
  431694:	mov    QWORD PTR [rdi+0x20],0x0
  43169c:	mov    rcx,rbp
  43169f:	call   0x425e90
  4316a4:	mov    eax,DWORD PTR [rsp+0x5c]
  4316a8:	test   eax,eax
  4316aa:	je     0x430f7a
  4316b0:	jmp    0x430f53
  4316b5:	mov    r15,QWORD PTR [rsp+0x30]
  4316ba:	mov    r9d,0x1
  4316c0:	mov    r8,rdi
  4316c3:	mov    rdx,rbx
  4316c6:	mov    rcx,r15
  4316c9:	call   0x4279c0
  4316ce:	mov    r9d,0x2
  4316d4:	mov    r8,rdi
  4316d7:	mov    rdx,rbx
  4316da:	mov    rcx,r15
  4316dd:	mov    QWORD PTR [rbx+0x50],rax
  4316e1:	call   0x4279c0
  4316e6:	mov    r9d,0x6
  4316ec:	mov    QWORD PTR [rbx+0x58],rax
  4316f0:	mov    r8,rdi
  4316f3:	mov    rdx,rbx
  4316f6:	mov    rcx,r15
  4316f9:	call   0x4279c0
  4316fe:	cmp    QWORD PTR [rbx+0x50],0x0
  431703:	mov    QWORD PTR [rbx+0x60],rax
  431707:	je     0x431719
  431709:	test   rax,rax
  43170c:	je     0x431719
  43170e:	cmp    QWORD PTR [rbx+0x58],0x0
  431713:	jne    0x431643
  431719:	mov    esi,DWORD PTR [rsp+0x60]
  43171d:	jmp    0x431650
  431722:	mov    rcx,QWORD PTR [r15+0xd8]
  431729:	call   0x43a748
  43172e:	mov    QWORD PTR [r15+0xd8],0x0
  431739:	jmp    0x43119d
  43173e:	mov    rcx,rbp
  431741:	call   0x424f00
  431746:	jmp    0x430fa8
  43174b:	add    r13,0x1
  43174f:	add    r14,0x18
  431753:	cmp    r13,QWORD PTR [r15+0x10]
  431757:	jb     0x43130a
  43175d:	mov    rbx,QWORD PTR [rsp+0x48]
  431762:	jmp    0x4314d9
  431767:	nop    WORD PTR [rax+rax*1+0x0]
  431770:	mov    eax,0xc
  431775:	jmp    0x430f7a
  43177a:	mov    r13,QWORD PTR [rbx+0x10]
  43177e:	test   r13,r13
  431781:	je     0x43187e
  431787:	mov    rax,QWORD PTR [rbx]
  43178a:	lea    rsi,[rip+0x16e43]        # 0x4485d4
  431791:	xor    ecx,ecx
  431793:	xor    r10d,r10d
  431796:	xor    r11d,r11d
  431799:	mov    r14d,0x1
  43179f:	mov    rdx,rax
  4317a2:	cmp    BYTE PTR [rdx+0x8],0xc
  4317a6:	ja     0x431863
  4317ac:	movzx  r8d,BYTE PTR [rdx+0x8]
  4317b1:	movsxd r8,DWORD PTR [rsi+r8*4]
  4317b5:	add    r8,rsi
  4317b8:	jmp    r8
  4317bb:	mov    ecx,0x1
  4317c0:	add    r11,0x1
  4317c4:	add    rdx,0x10
  4317c8:	cmp    r11,r13
  4317cb:	jne    0x4317a2
  4317cd:	test   r10b,r10b
  4317d0:	jne    0x431885
  4317d6:	test   cl,cl
  4317d8:	jne    0x431885
  4317de:	cmp    QWORD PTR [rbx+0x98],0x0
  4317e6:	movzx  edx,BYTE PTR [rbx+0xa8]
  4317ed:	mov    DWORD PTR [rbx+0xac],0x1
  4317f7:	setg   al
  4317fa:	and    edx,0xfffffff9
  4317fd:	or     eax,ecx
  4317ff:	add    eax,eax
  431801:	or     eax,edx
  431803:	mov    BYTE PTR [rbx+0xa8],al
  431809:	jmp    0x4314fe
  43180e:	xchg   ax,ax
  431810:	cmp    BYTE PTR [rdx],0x0
  431813:	cmovs  r10d,r14d
  431817:	jmp    0x4317c0
  431819:	mov    r8,QWORD PTR [rdx]
  43181c:	lea    r9,[r8+0x10]
  431820:	add    r8,0x20
  431824:	mov    r15d,DWORD PTR [r9]
  431827:	test   r15d,r15d
  43182a:	jne    0x4314fe
  431830:	add    r9,0x4
  431834:	cmp    r9,r8
  431837:	jne    0x431824
  431839:	jmp    0x4317c0
  43183b:	mov    r8d,DWORD PTR [rdx]
  43183e:	cmp    r8d,0x20
  431842:	je     0x4317c0
  431848:	jbe    0x43186f
  43184a:	cmp    r8d,0x40
  43184e:	je     0x4317c0
  431854:	add    r8d,0xffffff80
  431858:	je     0x4317c0
  43185e:	jmp    0x4314fe
  431863:	call   0x43a7b0
  431868:	mov    esi,eax
  43186a:	jmp    0x431650
  43186f:	cmp    r8d,0x10
  431873:	je     0x4317c0
  431879:	jmp    0x4314fe
  43187e:	xor    ecx,ecx
  431880:	jmp    0x4317de
  431885:	xor    r8d,r8d
  431888:	jmp    0x4318a6
  43188a:	nop    WORD PTR [rax+rax*1+0x0]
  431890:	cmp    dl,0x5
  431893:	je     0x4318c4
  431895:	add    r8,0x1
  431899:	cmp    r8,QWORD PTR [rbx+0x10]
  43189d:	jae    0x4317de
  4318a3:	mov    rax,QWORD PTR [rbx]
  4318a6:	mov    rdx,r8
  4318a9:	shl    rdx,0x4
  4318ad:	add    rax,rdx
  4318b0:	movzx  edx,BYTE PTR [rax+0x8]
  4318b4:	cmp    dl,0x1
  4318b7:	jne    0x431890
  4318b9:	cmp    BYTE PTR [rax],0x0
  4318bc:	jns    0x431895
  4318be:	and    BYTE PTR [rax+0xa],0xdf
  4318c2:	jmp    0x431895
  4318c4:	mov    BYTE PTR [rax+0x8],0x7
  4318c8:	jmp    0x431895
  4318ca:	nop    WORD PTR [rax+rax*1+0x0]
  4318d0:	sub    rsp,0x28
  4318d4:	mov    r9d,DWORD PTR [rip+0x22055]        # 0x453930
  4318db:	movzx  r10d,BYTE PTR [r8+0x38]
  4318e0:	mov    r11,rcx
  4318e3:	mov    rcx,r8
  4318e6:	mov    eax,r9d
  4318e9:	shr    eax,0x19
  4318ec:	and    r10d,0xffffffef
  4318f0:	and    eax,0x1
  4318f3:	shl    eax,0x4
  4318f6:	or     eax,r10d
  4318f9:	or     eax,0xffffff80
  4318fc:	mov    BYTE PTR [r8+0x38],al
  431900:	mov    r8,rdx
  431903:	mov    rdx,r11
  431906:	call   0x430b90
  43190b:	test   eax,eax
  43190d:	je     0x431930
  43190f:	lea    rdx,[rip+0x16d6a]        # 0x448680
  431916:	cdqe   
  431918:	lea    rcx,[rip+0x16e21]        # 0x448740
  43191f:	add    rcx,QWORD PTR [rdx+rax*8]
  431923:	add    rsp,0x28
  431927:	jmp    0x433f18
  43192c:	nop    DWORD PTR [rax+0x0]
  431930:	xor    eax,eax
  431932:	add    rsp,0x28
  431936:	ret    
  431937:	nop    WORD PTR [rax+rax*1+0x0]
  431940:	mov    eax,DWORD PTR [rip+0x21fea]        # 0x453930
  431946:	mov    DWORD PTR [rip+0x21fe4],ecx        # 0x453930
  43194c:	ret    
  43194d:	nop    DWORD PTR [rax]
  431950:	push   rbp
  431951:	push   rdi
  431952:	push   rsi
  431953:	push   rbx
  431954:	sub    rsp,0x28
  431958:	mov    rsi,QWORD PTR [rcx+0x20]
  43195c:	mov    rbp,QWORD PTR [rcx]
  43195f:	xor    eax,eax
  431961:	mov    rbx,rcx
  431964:	lea    rdi,[rsi+0x8]
  431968:	mov    rdx,rsi
  43196b:	mov    QWORD PTR [rsi],0x0
  431972:	mov    QWORD PTR [rsi+0xf8],0x0
  43197d:	mov    r9,rsi
  431980:	and    rdi,0xfffffffffffffff8
  431984:	sub    rdx,rdi
  431987:	add    edx,0x100
  43198d:	shr    edx,0x3
  431990:	mov    ecx,edx
  431992:	rep stos QWORD PTR es:[rdi],rax
  431995:	mov    rcx,rbx
  431998:	mov    rax,QWORD PTR [rbp+0x48]
  43199c:	lea    rdx,[rax+0x10]
  4319a0:	lea    r8,[rax+0x18]
  4319a4:	call   0x426d90
  4319a9:	mov    rax,QWORD PTR [rbp+0x50]
  4319ad:	cmp    QWORD PTR [rbp+0x48],rax
  4319b1:	je     0x4319ca
  4319b3:	lea    rdx,[rax+0x10]
  4319b7:	lea    r8,[rax+0x18]
  4319bb:	mov    r9,rsi
  4319be:	mov    rcx,rbx
  4319c1:	call   0x426d90
  4319c6:	mov    rax,QWORD PTR [rbp+0x48]
  4319ca:	mov    rcx,QWORD PTR [rbp+0x58]
  4319ce:	cmp    rcx,rax
  4319d1:	je     0x4319ea
  4319d3:	lea    rdx,[rcx+0x10]
  4319d7:	lea    r8,[rcx+0x18]
  4319db:	mov    r9,rsi
  4319de:	mov    rcx,rbx
  4319e1:	call   0x426d90
  4319e6:	mov    rax,QWORD PTR [rbp+0x48]
  4319ea:	mov    rcx,QWORD PTR [rbp+0x60]
  4319ee:	cmp    rcx,rax
  4319f1:	je     0x431a06
  4319f3:	lea    rdx,[rcx+0x10]
  4319f7:	lea    r8,[rcx+0x18]
  4319fb:	mov    r9,rsi
  4319fe:	mov    rcx,rbx
  431a01:	call   0x426d90
  431a06:	or     BYTE PTR [rbx+0x38],0x8
  431a0a:	xor    eax,eax
  431a0c:	add    rsp,0x28
  431a10:	pop    rbx
  431a11:	pop    rsi
  431a12:	pop    rdi
  431a13:	pop    rbp
  431a14:	ret    
  431a15:	nop
  431a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431a20:	push   r15
  431a22:	push   r14
  431a24:	push   r13
  431a26:	push   r12
  431a28:	push   rbp
  431a29:	push   rdi
  431a2a:	push   rsi
  431a2b:	push   rbx
  431a2c:	sub    rsp,0x78
  431a30:	mov    rax,QWORD PTR [rsp+0xe0]
  431a38:	mov    esi,DWORD PTR [rsp+0xf8]
  431a3f:	cmp    r9,r8
  431a42:	mov    rdi,QWORD PTR [rsp+0xf0]
  431a4a:	mov    r13,QWORD PTR [rcx]
  431a4d:	mov    DWORD PTR [rsp+0x6c],esi
  431a51:	lea    rbx,[r9+rax*1]
  431a55:	jg     0x431d53
  431a5b:	mov    r10,r9
  431a5e:	shr    r10,0x3f
  431a62:	test   r10b,r10b
  431a65:	jne    0x431d53
  431a6b:	cmp    rbx,r8
  431a6e:	jg     0x431cf5
  431a74:	cmp    rbx,r9
  431a77:	jge    0x431a82
  431a79:	test   rax,rax
  431a7c:	jns    0x431cf5
  431a82:	test   rbx,rbx
  431a85:	js     0x431de0
  431a8b:	cmp    r9,rbx
  431a8e:	jg     0x431a9f
  431a90:	shr    rax,0x3f
  431a94:	test   al,al
  431a96:	mov    eax,0x0
  431a9b:	cmovne rbx,rax
  431a9f:	lea    rax,[r13+0xe0]
  431aa6:	mov    rsi,rcx
  431aa9:	mov    r15,r9
  431aac:	mov    QWORD PTR [rsp+0x60],rdx
  431ab1:	mov    QWORD PTR [rsp+0x50],r9
  431ab6:	mov    rbp,r8
  431ab9:	mov    rcx,rax
  431abc:	mov    QWORD PTR [rsp+0x58],rax
  431ac1:	call   0x433f60
  431ac6:	movzx  edx,BYTE PTR [rsi+0x38]
  431aca:	mov    r12d,edx
  431acd:	mov    eax,edx
  431acf:	shr    r12b,0x5
  431ad3:	shr    eax,0x5
  431ad6:	and    r12d,0x1
  431ada:	and    eax,0x2
  431add:	or     eax,r12d
  431ae0:	cmp    rbx,r15
  431ae3:	mov    DWORD PTR [rsp+0x68],eax
  431ae7:	jg     0x431cb0
  431aed:	test   rdi,rdi
  431af0:	je     0x431dc0
  431af6:	movzx  eax,BYTE PTR [rsi+0x38]
  431afa:	test   al,0x10
  431afc:	jne    0x431dc0
  431b02:	and    eax,0x6
  431b05:	cmp    al,0x4
  431b07:	je     0x431da0
  431b0d:	mov    rax,QWORD PTR [rsi+0x30]
  431b11:	lea    r15,[rax+0x1]
  431b15:	mov    r13,r15
  431b18:	mov    rcx,r15
  431b1b:	shl    rcx,0x4
  431b1f:	call   0x423ec0
  431b24:	test   rax,rax
  431b27:	mov    r14,rax
  431b2a:	mov    r12,0xfffffffffffffffe
  431b31:	je     0x431c8a
  431b37:	mov    eax,DWORD PTR [rsp+0x68]
  431b3b:	mov    r9,QWORD PTR [rsp+0x50]
  431b40:	mov    r8,rbp
  431b43:	mov    rdx,QWORD PTR [rsp+0x60]
  431b48:	mov    QWORD PTR [rsp+0x38],r14
  431b4d:	mov    rcx,rsi
  431b50:	mov    QWORD PTR [rsp+0x30],r15
  431b55:	mov    QWORD PTR [rsp+0x20],rbx
  431b5a:	mov    DWORD PTR [rsp+0x40],eax
  431b5e:	mov    rax,QWORD PTR [rsp+0xe8]
  431b66:	mov    QWORD PTR [rsp+0x28],rax
  431b6b:	call   0x42d0b0
  431b70:	test   eax,eax
  431b72:	jne    0x431cd1
  431b78:	test   rdi,rdi
  431b7b:	je     0x431c4b
  431b81:	movzx  eax,BYTE PTR [rsi+0x38]
  431b85:	lea    r12,[r13+0x1]
  431b89:	shr    al,1
  431b8b:	and    eax,0x3
  431b8e:	je     0x431d60
  431b94:	cmp    eax,0x1
  431b97:	je     0x431d00
  431b9d:	cmp    eax,0x2
  431ba0:	je     0x431bbb
  431ba2:	lea    rdx,[rip+0x1657f]        # 0x448128
  431ba9:	lea    rcx,[rip+0x16a58]        # 0x448608
  431bb0:	mov    r8d,0x215
  431bb6:	call   0x435a10
  431bbb:	cmp    r15,QWORD PTR [rdi]
  431bbe:	mov    ebp,0x2
  431bc3:	ja     0x431df0
  431bc9:	test   r13,r13
  431bcc:	jle    0x431e0e
  431bd2:	mov    r9,QWORD PTR [rdi+0x8]
  431bd6:	mov    r8,QWORD PTR [rdi+0x10]
  431bda:	lea    rcx,[r13*8+0x0]
  431be2:	xor    eax,eax
  431be4:	mov    rdx,QWORD PTR [r14+rax*2]
  431be8:	mov    QWORD PTR [r9+rax*1],rdx
  431bec:	mov    rdx,QWORD PTR [r14+rax*2+0x8]
  431bf1:	mov    QWORD PTR [r8+rax*1],rdx
  431bf5:	add    rax,0x8
  431bf9:	cmp    rax,rcx
  431bfc:	jne    0x431be4
  431bfe:	mov    rax,r13
  431c01:	cmp    QWORD PTR [rdi],rax
  431c04:	jbe    0x431c2c
  431c06:	mov    rcx,QWORD PTR [rdi+0x8]
  431c0a:	mov    rdx,QWORD PTR [rdi+0x10]
  431c0e:	xchg   ax,ax
  431c10:	mov    QWORD PTR [rdx+rax*8],0xffffffffffffffff
  431c18:	add    r13,0x1
  431c1c:	mov    QWORD PTR [rcx+rax*8],0xffffffffffffffff
  431c24:	cmp    r13,QWORD PTR [rdi]
  431c27:	mov    rax,r13
  431c2a:	jb     0x431c10
  431c2c:	movzx  eax,BYTE PTR [rsi+0x38]
  431c30:	add    ebp,ebp
  431c32:	mov    r12,0xfffffffffffffffe
  431c39:	and    eax,0xfffffff9
  431c3c:	or     ebp,eax
  431c3e:	mov    BYTE PTR [rsi+0x38],bpl
  431c42:	and    ebp,0x6
  431c45:	je     0x431cdf
  431c4b:	cmp    BYTE PTR [rsp+0x6c],0x0
  431c50:	je     0x431cf0
  431c56:	mov    rax,QWORD PTR [rsp+0x50]
  431c5b:	cmp    QWORD PTR [r14],rax
  431c5e:	je     0x431c79
  431c60:	lea    rdx,[rip+0x164c1]        # 0x448128
  431c67:	lea    rcx,[rip+0x169cf]        # 0x44863d
  431c6e:	mov    r8d,0x1d9
  431c74:	call   0x435a10
  431c79:	mov    rcx,r14
  431c7c:	mov    r12,QWORD PTR [r14+0x8]
  431c80:	sub    r12,QWORD PTR [rsp+0x50]
  431c85:	call   0x43a748
  431c8a:	mov    rcx,QWORD PTR [rsp+0x58]
  431c8f:	call   0x433f58
  431c94:	mov    rax,r12
  431c97:	add    rsp,0x78
  431c9b:	pop    rbx
  431c9c:	pop    rsi
  431c9d:	pop    rdi
  431c9e:	pop    rbp
  431c9f:	pop    r12
  431ca1:	pop    r13
  431ca3:	pop    r14
  431ca5:	pop    r15
  431ca7:	ret    
  431ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  431cb0:	cmp    QWORD PTR [rsi+0x20],0x0
  431cb5:	je     0x431aed
  431cbb:	and    edx,0x8
  431cbe:	jne    0x431aed
  431cc4:	mov    rcx,rsi
  431cc7:	call   0x431950
  431ccc:	jmp    0x431aed
  431cd1:	xor    r12d,r12d
  431cd4:	cmp    eax,0x1
  431cd7:	sete   r12b
  431cdb:	sub    r12,0x2
  431cdf:	mov    rcx,r14
  431ce2:	call   0x43a748
  431ce7:	jmp    0x431c8a
  431ce9:	nop    DWORD PTR [rax+0x0]
  431cf0:	mov    r12,QWORD PTR [r14]
  431cf3:	jmp    0x431cdf
  431cf5:	mov    rbx,r8
  431cf8:	jmp    0x431a9f
  431cfd:	nop    DWORD PTR [rax]
  431d00:	cmp    r12,QWORD PTR [rdi]
  431d03:	mov    ebp,0x1
  431d08:	jbe    0x431bc9
  431d0e:	lea    r15,[r12*8+0x0]
  431d16:	mov    rcx,QWORD PTR [rdi+0x8]
  431d1a:	mov    rdx,r15
  431d1d:	call   0x43a680
  431d22:	test   rax,rax
  431d25:	mov    rbx,rax
  431d28:	je     0x431e21
  431d2e:	mov    rcx,QWORD PTR [rdi+0x10]
  431d32:	mov    rdx,r15
  431d35:	call   0x43a680
  431d3a:	test   rax,rax
  431d3d:	je     0x431e28
  431d43:	mov    QWORD PTR [rdi+0x8],rbx
  431d47:	mov    QWORD PTR [rdi+0x10],rax
  431d4b:	mov    QWORD PTR [rdi],r12
  431d4e:	jmp    0x431bc9
  431d53:	mov    rax,0xffffffffffffffff
  431d5a:	jmp    0x431c97
  431d5f:	nop
  431d60:	lea    rbp,[r12*8+0x0]
  431d68:	mov    rcx,rbp
  431d6b:	call   0x423ec0
  431d70:	test   rax,rax
  431d73:	mov    QWORD PTR [rdi+0x8],rax
  431d77:	je     0x431e21
  431d7d:	mov    rcx,rbp
  431d80:	call   0x423ec0
  431d85:	test   rax,rax
  431d88:	mov    QWORD PTR [rdi+0x10],rax
  431d8c:	je     0x431e18
  431d92:	mov    QWORD PTR [rdi],r12
  431d95:	mov    ebp,0x1
  431d9a:	jmp    0x431bc9
  431d9f:	nop
  431da0:	mov    r15,QWORD PTR [rdi]
  431da3:	mov    rax,QWORD PTR [rsi+0x30]
  431da7:	cmp    r15,rax
  431daa:	ja     0x431b11
  431db0:	test   r15,r15
  431db3:	mov    r13,r15
  431db6:	jg     0x431b18
  431dbc:	nop    DWORD PTR [rax+0x0]
  431dc0:	mov    ecx,0x10
  431dc5:	mov    r15d,0x1
  431dcb:	mov    r13d,0x1
  431dd1:	xor    edi,edi
  431dd3:	jmp    0x431b1f
  431dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  431de0:	xor    ebx,ebx
  431de2:	jmp    0x431a9f
  431de7:	nop    WORD PTR [rax+rax*1+0x0]
  431df0:	lea    rdx,[rip+0x16331]        # 0x448128
  431df7:	lea    rcx,[rip+0x16827]        # 0x448625
  431dfe:	mov    r8d,0x217
  431e04:	call   0x435a10
  431e09:	jmp    0x431bc9
  431e0e:	xor    eax,eax
  431e10:	xor    r13d,r13d
  431e13:	jmp    0x431c01
  431e18:	mov    rcx,QWORD PTR [rdi+0x8]
  431e1c:	call   0x43a748
  431e21:	xor    ebp,ebp
  431e23:	jmp    0x431c2c
  431e28:	mov    rcx,rbx
  431e2b:	xor    ebp,ebp
  431e2d:	call   0x43a748
  431e32:	jmp    0x431c2c
  431e37:	nop    WORD PTR [rax+rax*1+0x0]
  431e40:	push   r15
  431e42:	push   r14
  431e44:	push   r13
  431e46:	push   r12
  431e48:	push   rbp
  431e49:	push   rdi
  431e4a:	push   rsi
  431e4b:	push   rbx
  431e4c:	sub    rsp,0x58
  431e50:	mov    rsi,QWORD PTR [rsp+0xc0]
  431e58:	mov    r13,QWORD PTR [rsp+0xe0]
  431e60:	mov    rax,r8
  431e63:	mov    r15,rcx
  431e66:	mov    rbx,r8
  431e69:	shr    rax,0x3f
  431e6d:	mov    r14,r9
  431e70:	mov    edi,DWORD PTR [rsp+0xe8]
  431e77:	test   al,al
  431e79:	lea    rbp,[r8+rsi*1]
  431e7d:	jne    0x431f60
  431e83:	mov    rax,rsi
  431e86:	shr    rax,0x3f
  431e8a:	test   al,al
  431e8c:	jne    0x431f60
  431e92:	mov    rax,r13
  431e95:	shr    rax,0x3f
  431e99:	test   al,al
  431e9b:	jne    0x431f60
  431ea1:	cmp    rbp,r8
  431ea4:	jl     0x431f60
  431eaa:	test   rsi,rsi
  431ead:	je     0x431f70
  431eb3:	test   r8,r8
  431eb6:	mov    QWORD PTR [rsp+0x48],rdx
  431ebb:	jle    0x431f53
  431ec1:	mov    rcx,rbp
  431ec4:	call   0x423ec0
  431ec9:	test   rax,rax
  431ecc:	mov    r12,rax
  431ecf:	je     0x431f60
  431ed5:	mov    rdx,QWORD PTR [rsp+0x48]
  431eda:	mov    r8,rbx
  431edd:	mov    rcx,rax
  431ee0:	call   0x43a6b8
  431ee5:	lea    rcx,[r12+rbx*1]
  431ee9:	mov    rdx,r14
  431eec:	mov    r8,rsi
  431eef:	mov    r14,r12
  431ef2:	call   0x43a6b8
  431ef7:	mov    rax,QWORD PTR [rsp+0xd8]
  431eff:	mov    r9,QWORD PTR [rsp+0xc8]
  431f07:	movzx  edi,dil
  431f0b:	mov    r8,rbp
  431f0e:	mov    rdx,r14
  431f11:	mov    rcx,r15
  431f14:	mov    DWORD PTR [rsp+0x38],edi
  431f18:	mov    QWORD PTR [rsp+0x28],r13
  431f1d:	mov    QWORD PTR [rsp+0x30],rax
  431f22:	mov    rax,QWORD PTR [rsp+0xd0]
  431f2a:	mov    QWORD PTR [rsp+0x20],rax
  431f2f:	call   0x431a20
  431f34:	mov    rcx,r12
  431f37:	mov    rbx,rax
  431f3a:	call   0x43a748
  431f3f:	mov    rax,rbx
  431f42:	add    rsp,0x58
  431f46:	pop    rbx
  431f47:	pop    rsi
  431f48:	pop    rdi
  431f49:	pop    rbp
  431f4a:	pop    r12
  431f4c:	pop    r13
  431f4e:	pop    r14
  431f50:	pop    r15
  431f52:	ret    
  431f53:	xor    r12d,r12d
  431f56:	jmp    0x431ef7
  431f58:	nop    DWORD PTR [rax+rax*1+0x0]
  431f60:	mov    rax,0xfffffffffffffffe
  431f67:	jmp    0x431f42
  431f69:	nop    DWORD PTR [rax+0x0]
  431f70:	mov    r14,rdx
  431f73:	xor    r12d,r12d
  431f76:	jmp    0x431ef7
  431f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  431f80:	push   rbp
  431f81:	push   rdi
  431f82:	push   rsi
  431f83:	push   rbx
  431f84:	sub    rsp,0x38
  431f88:	mov    eax,r8d
  431f8b:	mov    rsi,rcx
  431f8e:	mov    QWORD PTR [rcx],0x0
  431f95:	and    eax,0x1
  431f98:	mov    QWORD PTR [rcx+0x8],0x0
  431fa0:	mov    QWORD PTR [rcx+0x10],0x0
  431fa8:	cmp    eax,0x1
  431fab:	mov    ecx,0x100
  431fb0:	mov    rbp,rdx
  431fb3:	sbb    edi,edi
  431fb5:	mov    ebx,r8d
  431fb8:	and    edi,0xfd4fca
  431fbe:	call   0x423ec0
  431fc3:	add    edi,0x3b2fc
  431fc9:	test   rax,rax
  431fcc:	mov    QWORD PTR [rsi+0x20],rax
  431fd0:	je     0x432074
  431fd6:	mov    r9d,ebx
  431fd9:	shl    r9d,0x15
  431fdd:	and    r9d,0x400000
  431fe4:	or     edi,r9d
  431fe7:	test   bl,0x4
  431fea:	jne    0x432045
  431fec:	and    BYTE PTR [rsi+0x38],0x7f
  431ff0:	movzx  r8d,BYTE PTR [rsi+0x38]
  431ff5:	shr    ebx,0x3
  431ff8:	mov    rcx,rbp
  431ffb:	and    ebx,0x1
  431ffe:	mov    QWORD PTR [rsi+0x28],0x0
  432006:	shl    ebx,0x4
  432009:	and    r8d,0xffffffef
  43200d:	or     ebx,r8d
  432010:	mov    BYTE PTR [rsi+0x38],bl
  432013:	call   0x43a620
  432018:	mov    r9d,edi
  43201b:	mov    r8,rax
  43201e:	mov    rdx,rbp
  432021:	mov    rcx,rsi
  432024:	call   0x430b90
  432029:	cmp    eax,0x10
  43202c:	je     0x432054
  43202e:	test   eax,eax
  432030:	jne    0x432059
  432032:	mov    rcx,rsi
  432035:	call   0x431950
  43203a:	xor    eax,eax
  43203c:	add    rsp,0x38
  432040:	pop    rbx
  432041:	pop    rsi
  432042:	pop    rdi
  432043:	pop    rbp
  432044:	ret    
  432045:	and    edi,0xffffffbf
  432048:	or     BYTE PTR [rsi+0x38],0x80
  43204c:	or     edi,0x100
  432052:	jmp    0x431ff0
  432054:	mov    eax,0x8
  432059:	mov    rcx,QWORD PTR [rsi+0x20]
  43205d:	mov    DWORD PTR [rsp+0x2c],eax
  432061:	call   0x43a748
  432066:	mov    QWORD PTR [rsi+0x20],0x0
  43206e:	mov    eax,DWORD PTR [rsp+0x2c]
  432072:	jmp    0x43203c
  432074:	mov    eax,0xc
  432079:	add    rsp,0x38
  43207d:	pop    rbx
  43207e:	pop    rsi
  43207f:	pop    rdi
  432080:	pop    rbp
  432081:	ret    
  432082:	nop    DWORD PTR [rax+0x0]
  432086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432090:	push   rbp
  432091:	push   rdi
  432092:	push   rsi
  432093:	push   rbx
  432094:	sub    rsp,0x28
  432098:	cmp    ecx,0x10
  43209b:	mov    rdi,r8
  43209e:	mov    rsi,r9
  4320a1:	ja     0x4320f3
  4320a3:	movsxd rax,ecx
  4320a6:	lea    rcx,[rip+0x165d3]        # 0x448680
  4320ad:	lea    rdx,[rip+0x1668c]        # 0x448740
  4320b4:	add    rdx,QWORD PTR [rcx+rax*8]
  4320b8:	mov    rcx,rdx
  4320bb:	call   0x433f18
  4320c0:	mov    rcx,rax
  4320c3:	mov    rbp,rax
  4320c6:	call   0x43a620
  4320cb:	test   rsi,rsi
  4320ce:	lea    rbx,[rax+0x1]
  4320d2:	je     0x4320e7
  4320d4:	cmp    rbx,rsi
  4320d7:	mov    r8,rbx
  4320da:	ja     0x432100
  4320dc:	mov    rdx,rbp
  4320df:	mov    rcx,rdi
  4320e2:	call   0x43a6b8
  4320e7:	mov    rax,rbx
  4320ea:	add    rsp,0x28
  4320ee:	pop    rbx
  4320ef:	pop    rsi
  4320f0:	pop    rdi
  4320f1:	pop    rbp
  4320f2:	ret    
  4320f3:	call   0x43a7b0
  4320f8:	nop    DWORD PTR [rax+rax*1+0x0]
  432100:	lea    r8,[rsi-0x1]
  432104:	mov    BYTE PTR [rdi+rsi*1-0x1],0x0
  432109:	jmp    0x4320dc
  43210b:	nop    DWORD PTR [rax+rax*1+0x0]
  432110:	push   rsi
  432111:	push   rbx
  432112:	sub    rsp,0x28
  432116:	mov    rsi,QWORD PTR [rcx]
  432119:	mov    rbx,rcx
  43211c:	test   rsi,rsi
  43211f:	je     0x432135
  432121:	lea    rcx,[rsi+0xe0]
  432128:	call   0x433f70
  43212d:	mov    rcx,rsi
  432130:	call   0x425ed0
  432135:	mov    rcx,QWORD PTR [rbx+0x20]
  432139:	mov    QWORD PTR [rbx],0x0
  432140:	mov    QWORD PTR [rbx+0x8],0x0
  432148:	call   0x43a748
  43214d:	mov    rcx,QWORD PTR [rbx+0x28]
  432151:	mov    QWORD PTR [rbx+0x20],0x0
  432159:	call   0x43a748
  43215e:	mov    QWORD PTR [rbx+0x28],0x0
  432166:	add    rsp,0x28
  43216a:	pop    rbx
  43216b:	pop    rsi
  43216c:	ret    
  43216d:	nop    DWORD PTR [rax]
  432170:	push   r15
  432172:	push   r14
  432174:	push   r13
  432176:	push   r12
  432178:	push   rbp
  432179:	push   rdi
  43217a:	push   rsi
  43217b:	push   rbx
  43217c:	sub    rsp,0x58
  432180:	mov    esi,DWORD PTR [rsp+0xc0]
  432187:	mov    rdi,QWORD PTR [rcx]
  43218a:	mov    eax,0x2
  43218f:	test   esi,0xfffffff8
  432195:	je     0x4321b0
  432197:	add    rsp,0x58
  43219b:	pop    rbx
  43219c:	pop    rsi
  43219d:	pop    rdi
  43219e:	pop    rbp
  43219f:	pop    r12
  4321a1:	pop    r13
  4321a3:	pop    r14
  4321a5:	pop    r15
  4321a7:	ret    
  4321a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4321b0:	test   sil,0x4
  4321b4:	mov    rbp,r9
  4321b7:	mov    r12,r8
  4321ba:	mov    r13,rdx
  4321bd:	mov    rbx,rcx
  4321c0:	jne    0x432230
  4321c2:	mov    rcx,rdx
  4321c5:	xor    r15d,r15d
  4321c8:	call   0x43a620
  4321cd:	mov    r14,rax
  4321d0:	add    rdi,0xe0
  4321d7:	mov    rcx,rdi
  4321da:	call   0x433f60
  4321df:	test   BYTE PTR [rbx+0x38],0x10
  4321e3:	mov    DWORD PTR [rsp+0x40],esi
  4321e7:	je     0x432240
  4321e9:	mov    QWORD PTR [rsp+0x38],0x0
  4321f2:	mov    QWORD PTR [rsp+0x30],0x0
  4321fb:	mov    rcx,rbx
  4321fe:	mov    r9,r15
  432201:	mov    r8,r14
  432204:	mov    rdx,r13
  432207:	mov    QWORD PTR [rsp+0x28],r14
  43220c:	mov    QWORD PTR [rsp+0x20],r14
  432211:	call   0x42d0b0
  432216:	mov    rcx,rdi
  432219:	mov    ebx,eax
  43221b:	call   0x433f58
  432220:	xor    eax,eax
  432222:	test   ebx,ebx
  432224:	setne  al
  432227:	jmp    0x432197
  43222c:	nop    DWORD PTR [rax+0x0]
  432230:	mov    r15,QWORD PTR [r9]
  432233:	mov    r14,QWORD PTR [r9+0x8]
  432237:	jmp    0x4321d0
  432239:	nop    DWORD PTR [rax+0x0]
  432240:	mov    QWORD PTR [rsp+0x38],rbp
  432245:	mov    QWORD PTR [rsp+0x30],r12
  43224a:	jmp    0x4321fb
  43224c:	nop    DWORD PTR [rax+0x0]
  432250:	sub    rsp,0x48
  432254:	mov    rax,QWORD PTR [rsp+0x70]
  432259:	mov    DWORD PTR [rsp+0x38],0x1
  432261:	mov    QWORD PTR [rsp+0x28],r8
  432266:	mov    QWORD PTR [rsp+0x20],0x0
  43226f:	mov    QWORD PTR [rsp+0x30],rax
  432274:	call   0x431a20
  432279:	add    rsp,0x48
  43227d:	ret    
  43227e:	xchg   ax,ax
  432280:	sub    rsp,0x48
  432284:	mov    rax,QWORD PTR [rsp+0x78]
  432289:	mov    DWORD PTR [rsp+0x38],0x0
  432291:	mov    QWORD PTR [rsp+0x28],r8
  432296:	mov    QWORD PTR [rsp+0x30],rax
  43229b:	mov    rax,QWORD PTR [rsp+0x70]
  4322a0:	mov    QWORD PTR [rsp+0x20],rax
  4322a5:	call   0x431a20
  4322aa:	add    rsp,0x48
  4322ae:	ret    
  4322af:	nop
  4322b0:	sub    rsp,0x58
  4322b4:	mov    rax,QWORD PTR [rsp+0x98]
  4322bc:	mov    DWORD PTR [rsp+0x48],0x1
  4322c4:	mov    QWORD PTR [rsp+0x30],0x0
  4322cd:	mov    QWORD PTR [rsp+0x40],rax
  4322d2:	mov    rax,QWORD PTR [rsp+0x90]
  4322da:	mov    QWORD PTR [rsp+0x38],rax
  4322df:	mov    rax,QWORD PTR [rsp+0x88]
  4322e7:	mov    QWORD PTR [rsp+0x28],rax
  4322ec:	mov    rax,QWORD PTR [rsp+0x80]
  4322f4:	mov    QWORD PTR [rsp+0x20],rax
  4322f9:	call   0x431e40
  4322fe:	add    rsp,0x58
  432302:	ret    
  432303:	nop    DWORD PTR [rax]
  432306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432310:	sub    rsp,0x58
  432314:	mov    rax,QWORD PTR [rsp+0xa0]
  43231c:	mov    DWORD PTR [rsp+0x48],0x0
  432324:	mov    QWORD PTR [rsp+0x40],rax
  432329:	mov    rax,QWORD PTR [rsp+0x98]
  432331:	mov    QWORD PTR [rsp+0x38],rax
  432336:	mov    rax,QWORD PTR [rsp+0x90]
  43233e:	mov    QWORD PTR [rsp+0x30],rax
  432343:	mov    rax,QWORD PTR [rsp+0x88]
  43234b:	mov    QWORD PTR [rsp+0x28],rax
  432350:	mov    rax,QWORD PTR [rsp+0x80]
  432358:	mov    QWORD PTR [rsp+0x20],rax
  43235d:	call   0x431e40
  432362:	add    rsp,0x58
  432366:	ret    
  432367:	nop    WORD PTR [rax+rax*1+0x0]
  432370:	test   r8,r8
  432373:	jne    0x432391
  432375:	and    BYTE PTR [rcx+0x38],0xf9
  432379:	mov    QWORD PTR [rdx],0x0
  432380:	mov    QWORD PTR [rdx+0x10],0x0
  432388:	mov    QWORD PTR [rdx+0x8],0x0
  432390:	ret    
  432391:	movzx  eax,BYTE PTR [rcx+0x38]
  432395:	and    eax,0xfffffff9
  432398:	or     eax,0x2
  43239b:	mov    BYTE PTR [rcx+0x38],al
  43239e:	mov    rax,QWORD PTR [rsp+0x28]
  4323a3:	mov    QWORD PTR [rdx],r8
  4323a6:	mov    QWORD PTR [rdx+0x8],r9
  4323aa:	mov    QWORD PTR [rdx+0x10],rax
  4323ae:	ret    
  4323af:	nop
  4323b0:	mov    rax,rcx
  4323b3:	jmp    0x4323b8
  4323b5:	mov    rax,r8
  4323b8:	movzx  ecx,BYTE PTR [rdx]
  4323bb:	lea    r8,[rax+0x1]
  4323bf:	add    rdx,0x1
  4323c3:	mov    BYTE PTR [r8-0x1],cl
  4323c7:	cmp    BYTE PTR [rdx-0x1],0x0
  4323cb:	jne    0x4323b5
  4323cd:	ret    
  4323ce:	nop
  4323cf:	nop
  4323d0:	push   r15
  4323d2:	push   r14
  4323d4:	push   r13
  4323d6:	push   r12
  4323d8:	push   rbp
  4323d9:	push   rdi
  4323da:	push   rsi
  4323db:	push   rbx
  4323dc:	sub    rsp,0x48
  4323e0:	mov    rax,QWORD PTR [rip+0x227a9]        # 0x454b90
  4323e7:	mov    ebp,0x1
  4323ec:	xor    r12d,r12d
  4323ef:	mov    rdi,rcx
  4323f2:	mov    QWORD PTR [rsp+0x98],rdx
  4323fa:	mov    QWORD PTR [rsp+0xa0],r8
  432402:	mov    QWORD PTR [rsp+0x28],0x1
  43240b:	mov    r15,0xffffffffffffffff
  432412:	mov    QWORD PTR [rsp+0x30],rax
  432417:	nop    WORD PTR [rax+rax*1+0x0]
  432420:	lea    r13,[r12+rbp*1]
  432424:	cmp    r13,QWORD PTR [rsp+0x98]
  43242c:	jae    0x43249a
  43242e:	movzx  ebx,BYTE PTR [rdi+r13*1]
  432433:	mov    ecx,ebx
  432435:	mov    esi,ebx
  432437:	call   QWORD PTR [rip+0x22653]        # 0x454a90
  43243d:	test   eax,eax
  43243f:	je     0x43244b
  432441:	mov    ecx,ebx
  432443:	call   QWORD PTR [rip+0x22747]        # 0x454b90
  432449:	mov    esi,eax
  43244b:	lea    rax,[rdi+r15*1]
  43244f:	movzx  r14d,BYTE PTR [rax+rbp*1]
  432454:	mov    ecx,r14d
  432457:	mov    ebx,r14d
  43245a:	call   QWORD PTR [rip+0x22630]        # 0x454a90
  432460:	test   eax,eax
  432462:	je     0x432470
  432464:	mov    ecx,r14d
  432467:	mov    rax,QWORD PTR [rsp+0x30]
  43246c:	call   rax
  43246e:	mov    ebx,eax
  432470:	cmp    sil,bl
  432473:	jae    0x4325a0
  432479:	mov    rax,r13
  43247c:	mov    r12,r13
  43247f:	mov    ebp,0x1
  432484:	sub    rax,r15
  432487:	lea    r13,[r12+rbp*1]
  43248b:	cmp    r13,QWORD PTR [rsp+0x98]
  432493:	mov    QWORD PTR [rsp+0x28],rax
  432498:	jb     0x43242e
  43249a:	mov    rax,QWORD PTR [rsp+0xa0]
  4324a2:	mov    rdx,QWORD PTR [rsp+0x28]
  4324a7:	mov    ebp,0x1
  4324ac:	mov    QWORD PTR [rsp+0x30],0x1
  4324b5:	xor    r12d,r12d
  4324b8:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
  4324c1:	mov    QWORD PTR [rax],rdx
  4324c4:	mov    rax,QWORD PTR [rip+0x226c5]        # 0x454b90
  4324cb:	mov    QWORD PTR [rsp+0x38],rax
  4324d0:	lea    r13,[r12+rbp*1]
  4324d4:	cmp    QWORD PTR [rsp+0x98],r13
  4324dc:	jbe    0x43254c
  4324de:	movzx  ebx,BYTE PTR [rdi+r13*1]
  4324e3:	mov    ecx,ebx
  4324e5:	mov    esi,ebx
  4324e7:	call   QWORD PTR [rip+0x225a3]        # 0x454a90
  4324ed:	test   eax,eax
  4324ef:	je     0x4324fb
  4324f1:	mov    ecx,ebx
  4324f3:	call   QWORD PTR [rip+0x22697]        # 0x454b90
  4324f9:	mov    esi,eax
  4324fb:	mov    rax,QWORD PTR [rsp+0x28]
  432500:	add    rax,rdi
  432503:	movzx  r14d,BYTE PTR [rax+rbp*1]
  432508:	mov    ecx,r14d
  43250b:	mov    ebx,r14d
  43250e:	call   QWORD PTR [rip+0x2257c]        # 0x454a90
  432514:	test   eax,eax
  432516:	je     0x432524
  432518:	mov    ecx,r14d
  43251b:	mov    rax,QWORD PTR [rsp+0x38]
  432520:	call   rax
  432522:	mov    ebx,eax
  432524:	cmp    sil,bl
  432527:	jbe    0x432582
  432529:	mov    r12,r13
  43252c:	mov    ebp,0x1
  432531:	mov    rax,r13
  432534:	lea    r13,[r12+rbp*1]
  432538:	sub    rax,QWORD PTR [rsp+0x28]
  43253d:	cmp    QWORD PTR [rsp+0x98],r13
  432545:	mov    QWORD PTR [rsp+0x30],rax
  43254a:	ja     0x4324de
  43254c:	mov    r13,QWORD PTR [rsp+0x28]
  432551:	lea    rax,[r15+0x1]
  432555:	add    r13,0x1
  432559:	cmp    r13,rax
  43255c:	jb     0x432571
  43255e:	mov    rax,QWORD PTR [rsp+0xa0]
  432566:	mov    rdx,QWORD PTR [rsp+0x30]
  43256b:	mov    QWORD PTR [rax],rdx
  43256e:	mov    rax,r13
  432571:	add    rsp,0x48
  432575:	pop    rbx
  432576:	pop    rsi
  432577:	pop    rdi
  432578:	pop    rbp
  432579:	pop    r12
  43257b:	pop    r13
  43257d:	pop    r14
  43257f:	pop    r15
  432581:	ret    
  432582:	je     0x4325c0
  432584:	mov    QWORD PTR [rsp+0x28],r12
  432589:	mov    QWORD PTR [rsp+0x30],0x1
  432592:	add    r12,0x1
  432596:	mov    ebp,0x1
  43259b:	jmp    0x4324d0
  4325a0:	je     0x4325d0
  4325a2:	mov    r15,r12
  4325a5:	mov    QWORD PTR [rsp+0x28],0x1
  4325ae:	add    r12,0x1
  4325b2:	mov    ebp,0x1
  4325b7:	jmp    0x432420
  4325bc:	nop    DWORD PTR [rax+0x0]
  4325c0:	cmp    rbp,QWORD PTR [rsp+0x30]
  4325c5:	je     0x4325e0
  4325c7:	add    rbp,0x1
  4325cb:	jmp    0x4324d0
  4325d0:	cmp    rbp,QWORD PTR [rsp+0x28]
  4325d5:	je     0x4325f2
  4325d7:	add    rbp,0x1
  4325db:	jmp    0x432420
  4325e0:	mov    QWORD PTR [rsp+0x30],rbp
  4325e5:	mov    r12,r13
  4325e8:	mov    ebp,0x1
  4325ed:	jmp    0x4324d0
  4325f2:	mov    QWORD PTR [rsp+0x28],rbp
  4325f7:	mov    r12,r13
  4325fa:	mov    ebp,0x1
  4325ff:	jmp    0x432420
  432604:	xchg   ax,ax
  432606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432610:	push   r15
  432612:	push   r14
  432614:	push   r13
  432616:	push   r12
  432618:	push   rbp
  432619:	push   rdi
  43261a:	push   rsi
  43261b:	push   rbx
  43261c:	sub    rsp,0x898
  432623:	cmp    r9,0x2
  432627:	mov    QWORD PTR [rsp+0x8e0],rcx
  43262f:	mov    r13,rdx
  432632:	mov    rsi,r8
  432635:	mov    rbx,r9
  432638:	ja     0x432b6f
  43263e:	lea    rax,[r9-0x1]
  432642:	mov    QWORD PTR [rsp+0x88],0x1
  43264e:	mov    QWORD PTR [rsp+0x20],0x1
  432657:	mov    QWORD PTR [rsp+0x38],rax
  43265c:	lea    rax,[rsp+0x90]
  432664:	lea    rdx,[rsp+0x890]
  43266c:	nop    DWORD PTR [rax+0x0]
  432670:	mov    QWORD PTR [rax],rbx
  432673:	add    rax,0x8
  432677:	cmp    rax,rdx
  43267a:	jne    0x432670
  43267c:	test   rbx,rbx
  43267f:	je     0x4326ce
  432681:	mov    rdi,QWORD PTR [rip+0x22408]        # 0x454a90
  432688:	mov    r12,QWORD PTR [rip+0x22501]        # 0x454b90
  43268f:	lea    rbp,[rbx-0x1]
  432693:	xor    r15d,r15d
  432696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4326a0:	movzx  r14d,BYTE PTR [rsi+r15*1]
  4326a5:	mov    ecx,r14d
  4326a8:	call   rdi
  4326aa:	test   eax,eax
  4326ac:	je     0x4326b7
  4326ae:	mov    ecx,r14d
  4326b1:	call   r12
  4326b4:	movsxd r14,eax
  4326b7:	mov    rax,rbp
  4326ba:	sub    rax,r15
  4326bd:	add    r15,0x1
  4326c1:	cmp    r15,rbx
  4326c4:	mov    QWORD PTR [rsp+r14*8+0x90],rax
  4326cc:	jne    0x4326a0
  4326ce:	mov    rdx,QWORD PTR [rsp+0x20]
  4326d3:	mov    r8,QWORD PTR [rsp+0x38]
  4326d8:	mov    rcx,rsi
  4326db:	add    rdx,rsi
  4326de:	call   QWORD PTR [rip+0x222d4]        # 0x4549b8
  4326e4:	test   eax,eax
  4326e6:	jne    0x432946
  4326ec:	mov    rax,QWORD PTR [rsp+0x88]
  4326f4:	mov    rdx,rbx
  4326f7:	mov    QWORD PTR [rsp+0x30],0x0
  432700:	mov    QWORD PTR [rsp+0x20],0x0
  432709:	mov    rdi,QWORD PTR [rip+0x22380]        # 0x454a90
  432710:	mov    QWORD PTR [rsp+0x8f8],rbx
  432718:	sub    rdx,rax
  43271b:	mov    QWORD PTR [rsp+0x60],rax
  432720:	lea    rax,[rbx-0x1]
  432724:	mov    QWORD PTR [rsp+0x68],rdx
  432729:	mov    QWORD PTR [rsp+0x50],rax
  43272e:	mov    rax,QWORD PTR [rip+0x2245b]        # 0x454b90
  432735:	mov    QWORD PTR [rsp+0x70],rax
  43273a:	mov    QWORD PTR [rsp+0x28],rax
  43273f:	mov    eax,0x1
  432744:	sub    rax,QWORD PTR [rsp+0x38]
  432749:	mov    QWORD PTR [rsp+0x78],rax
  43274e:	mov    rax,QWORD PTR [rip+0x2243b]        # 0x454b90
  432755:	mov    QWORD PTR [rsp+0x40],rax
  43275a:	mov    QWORD PTR [rsp+0x48],rax
  43275f:	jmp    0x432785
  432761:	cmp    QWORD PTR [rsp+0x30],0x0
  432767:	je     0x432774
  432769:	cmp    rax,QWORD PTR [rsp+0x60]
  43276e:	cmovb  rax,QWORD PTR [rsp+0x68]
  432774:	add    QWORD PTR [rsp+0x20],rax
  432779:	mov    QWORD PTR [rsp+0x30],0x0
  432782:	mov    r13,r15
  432785:	mov    r15,QWORD PTR [rsp+0x20]
  43278a:	add    r15,QWORD PTR [rsp+0x8f8]
  432792:	mov    rcx,r13
  432795:	add    rcx,QWORD PTR [rsp+0x8e0]
  43279d:	xor    edx,edx
  43279f:	mov    r8,r15
  4327a2:	sub    r8,r13
  4327a5:	call   0x424060
  4327aa:	test   r15,r15
  4327ad:	je     0x432b6b
  4327b3:	test   rax,rax
  4327b6:	jne    0x432b6b
  4327bc:	mov    rax,QWORD PTR [rsp+0x8e0]
  4327c4:	movzx  ebx,BYTE PTR [rax+r15*1-0x1]
  4327ca:	mov    ecx,ebx
  4327cc:	call   rdi
  4327ce:	test   eax,eax
  4327d0:	je     0x4327dd
  4327d2:	mov    ecx,ebx
  4327d4:	call   QWORD PTR [rip+0x223b6]        # 0x454b90
  4327da:	movsxd rbx,eax
  4327dd:	mov    rax,QWORD PTR [rsp+rbx*8+0x90]
  4327e5:	test   rax,rax
  4327e8:	jne    0x432761
  4327ee:	mov    rdx,QWORD PTR [rsp+0x30]
  4327f3:	mov    rax,QWORD PTR [rsp+0x38]
  4327f8:	cmp    rdx,rax
  4327fb:	mov    rbx,rax
  4327fe:	mov    rax,QWORD PTR [rsp+0x8e0]
  432806:	cmovae rbx,rdx
  43280a:	cmp    rbx,QWORD PTR [rsp+0x50]
  43280f:	mov    rdx,QWORD PTR [rsp+0x20]
  432814:	lea    r12,[rax+rdx*1]
  432818:	jae    0x4328a5
  43281e:	mov    QWORD PTR [rsp+0x58],r15
  432823:	mov    r13,QWORD PTR [rsp+0x50]
  432828:	mov    r15,QWORD PTR [rsp+0x70]
  43282d:	jmp    0x432839
  43282f:	nop
  432830:	add    rbx,0x1
  432834:	cmp    rbx,r13
  432837:	jae    0x4328a0
  432839:	movzx  ebp,BYTE PTR [rsi+rbx*1]
  43283d:	mov    ecx,ebp
  43283f:	call   rdi
  432841:	test   eax,eax
  432843:	je     0x43284c
  432845:	mov    ecx,ebp
  432847:	call   r15
  43284a:	mov    ebp,eax
  43284c:	movzx  r14d,BYTE PTR [r12+rbx*1]
  432851:	mov    ecx,r14d
  432854:	call   rdi
  432856:	test   eax,eax
  432858:	je     0x432867
  43285a:	mov    ecx,r14d
  43285d:	mov    rax,QWORD PTR [rsp+0x28]
  432862:	call   rax
  432864:	mov    r14d,eax
  432867:	cmp    ebp,r14d
  43286a:	je     0x432830
  43286c:	cmp    QWORD PTR [rsp+0x50],rbx
  432871:	mov    r15,QWORD PTR [rsp+0x58]
  432876:	jbe    0x4328a5
  432878:	mov    rax,QWORD PTR [rsp+0x20]
  43287d:	add    rax,QWORD PTR [rsp+0x78]
  432882:	mov    QWORD PTR [rsp+0x30],0x0
  43288b:	add    rax,rbx
  43288e:	mov    QWORD PTR [rsp+0x20],rax
  432893:	jmp    0x432782
  432898:	nop    DWORD PTR [rax+rax*1+0x0]
  4328a0:	mov    r15,QWORD PTR [rsp+0x58]
  4328a5:	mov    rax,QWORD PTR [rsp+0x38]
  4328aa:	cmp    QWORD PTR [rsp+0x30],rax
  4328af:	mov    rdx,QWORD PTR [rsp+0x8e0]
  4328b7:	mov    rcx,QWORD PTR [rsp+0x20]
  4328bc:	mov    rbx,rax
  4328bf:	lea    r12,[rdx+rcx*1]
  4328c3:	jae    0x43291b
  4328c5:	mov    r14,QWORD PTR [rsp+0x30]
  4328ca:	mov    QWORD PTR [rsp+0x58],r15
  4328cf:	jmp    0x4328d9
  4328d1:	cmp    r14,r13
  4328d4:	mov    rbx,r13
  4328d7:	jae    0x432916
  4328d9:	movzx  ebp,BYTE PTR [rsi+rbx*1-0x1]
  4328de:	lea    r13,[rbx-0x1]
  4328e2:	mov    ecx,ebp
  4328e4:	call   rdi
  4328e6:	test   eax,eax
  4328e8:	je     0x4328f5
  4328ea:	mov    ecx,ebp
  4328ec:	mov    rax,QWORD PTR [rsp+0x40]
  4328f1:	call   rax
  4328f3:	mov    ebp,eax
  4328f5:	movzx  r15d,BYTE PTR [r12+rbx*1-0x1]
  4328fb:	mov    ecx,r15d
  4328fe:	call   rdi
  432900:	test   eax,eax
  432902:	je     0x432911
  432904:	mov    ecx,r15d
  432907:	mov    rax,QWORD PTR [rsp+0x48]
  43290c:	call   rax
  43290e:	mov    r15d,eax
  432911:	cmp    ebp,r15d
  432914:	je     0x4328d1
  432916:	mov    r15,QWORD PTR [rsp+0x58]
  43291b:	mov    r14,QWORD PTR [rsp+0x30]
  432920:	add    r14,0x1
  432924:	cmp    r14,rbx
  432927:	ja     0x432b99
  43292d:	mov    rax,QWORD PTR [rsp+0x68]
  432932:	mov    rdx,QWORD PTR [rsp+0x60]
  432937:	add    QWORD PTR [rsp+0x20],rdx
  43293c:	mov    QWORD PTR [rsp+0x30],rax
  432941:	jmp    0x432782
  432946:	mov    rdx,QWORD PTR [rsp+0x38]
  43294b:	mov    rax,rbx
  43294e:	mov    r12,QWORD PTR [rip+0x2213b]        # 0x454a90
  432955:	mov    QWORD PTR [rsp+0x28],0x0
  43295e:	mov    QWORD PTR [rsp+0x8f8],rbx
  432966:	sub    rax,rdx
  432969:	cmp    rax,rdx
  43296c:	cmovb  rax,rdx
  432970:	add    rax,0x1
  432974:	mov    QWORD PTR [rsp+0x70],rax
  432979:	mov    QWORD PTR [rsp+0x88],rax
  432981:	lea    rax,[rbx-0x1]
  432985:	mov    rbp,rax
  432988:	mov    rax,QWORD PTR [rip+0x22201]        # 0x454b90
  43298f:	mov    QWORD PTR [rsp+0x20],rax
  432994:	mov    QWORD PTR [rsp+0x40],rax
  432999:	mov    eax,0x1
  43299e:	sub    rax,rdx
  4329a1:	mov    QWORD PTR [rsp+0x50],rax
  4329a6:	lea    rax,[rdx-0x1]
  4329aa:	mov    QWORD PTR [rsp+0x58],rax
  4329af:	mov    rax,QWORD PTR [rip+0x221da]        # 0x454b90
  4329b6:	mov    QWORD PTR [rsp+0x60],rax
  4329bb:	mov    QWORD PTR [rsp+0x68],rax
  4329c0:	mov    r14,QWORD PTR [rsp+0x28]
  4329c5:	add    r14,QWORD PTR [rsp+0x8f8]
  4329cd:	mov    rcx,r13
  4329d0:	add    rcx,QWORD PTR [rsp+0x8e0]
  4329d8:	xor    edx,edx
  4329da:	mov    r8,r14
  4329dd:	sub    r8,r13
  4329e0:	call   0x424060
  4329e5:	test   r14,r14
  4329e8:	je     0x432b6b
  4329ee:	test   rax,rax
  4329f1:	jne    0x432b6b
  4329f7:	mov    rax,QWORD PTR [rsp+0x8e0]
  4329ff:	movzx  ebx,BYTE PTR [rax+r14*1-0x1]
  432a05:	mov    ecx,ebx
  432a07:	call   r12
  432a0a:	test   eax,eax
  432a0c:	je     0x432a19
  432a0e:	mov    ecx,ebx
  432a10:	call   QWORD PTR [rip+0x2217a]        # 0x454b90
  432a16:	movsxd rbx,eax
  432a19:	mov    rax,QWORD PTR [rsp+rbx*8+0x90]
  432a21:	test   rax,rax
  432a24:	jne    0x432ac4
  432a2a:	mov    rax,QWORD PTR [rsp+0x38]
  432a2f:	mov    rdx,QWORD PTR [rsp+0x8e0]
  432a37:	mov    rdi,QWORD PTR [rsp+0x28]
  432a3c:	cmp    rax,rbp
  432a3f:	mov    rbx,rax
  432a42:	lea    r13,[rdx+rdi*1]
  432a46:	jae    0x432ad5
  432a4c:	mov    QWORD PTR [rsp+0x30],r14
  432a51:	mov    r15,QWORD PTR [rsp+0x40]
  432a56:	jmp    0x432a69
  432a58:	nop    DWORD PTR [rax+rax*1+0x0]
  432a60:	add    rbx,0x1
  432a64:	cmp    rbx,rbp
  432a67:	jae    0x432ad0
  432a69:	movzx  edi,BYTE PTR [rsi+rbx*1]
  432a6d:	mov    ecx,edi
  432a6f:	call   r12
  432a72:	test   eax,eax
  432a74:	je     0x432a81
  432a76:	mov    ecx,edi
  432a78:	mov    rax,QWORD PTR [rsp+0x20]
  432a7d:	call   rax
  432a7f:	mov    edi,eax
  432a81:	movzx  r14d,BYTE PTR [r13+rbx*1+0x0]
  432a87:	mov    ecx,r14d
  432a8a:	call   r12
  432a8d:	test   eax,eax
  432a8f:	je     0x432a9a
  432a91:	mov    ecx,r14d
  432a94:	call   r15
  432a97:	mov    r14d,eax
  432a9a:	cmp    edi,r14d
  432a9d:	je     0x432a60
  432a9f:	cmp    rbp,rbx
  432aa2:	mov    r14,QWORD PTR [rsp+0x30]
  432aa7:	jbe    0x432ad5
  432aa9:	mov    r15,QWORD PTR [rsp+0x28]
  432aae:	add    r15,QWORD PTR [rsp+0x50]
  432ab3:	lea    rax,[r15+rbx*1]
  432ab7:	mov    QWORD PTR [rsp+0x28],rax
  432abc:	mov    r13,r14
  432abf:	jmp    0x4329c0
  432ac4:	add    QWORD PTR [rsp+0x28],rax
  432ac9:	jmp    0x432abc
  432acb:	nop    DWORD PTR [rax+rax*1+0x0]
  432ad0:	mov    r14,QWORD PTR [rsp+0x30]
  432ad5:	mov    rax,QWORD PTR [rsp+0x58]
  432ada:	cmp    rax,0xffffffffffffffff
  432ade:	mov    rbx,rax
  432ae1:	je     0x432b54
  432ae3:	mov    QWORD PTR [rsp+0x48],rbp
  432ae8:	mov    QWORD PTR [rsp+0x30],r14
  432aed:	mov    rbp,QWORD PTR [rsp+0x60]
  432af2:	mov    r15,QWORD PTR [rsp+0x68]
  432af7:	jmp    0x432b0a
  432af9:	nop    DWORD PTR [rax+0x0]
  432b00:	sub    rbx,0x1
  432b04:	cmp    rbx,0xffffffffffffffff
  432b08:	je     0x432b54
  432b0a:	movzx  edi,BYTE PTR [rsi+rbx*1]
  432b0e:	mov    ecx,edi
  432b10:	call   r12
  432b13:	test   eax,eax
  432b15:	je     0x432b1d
  432b17:	mov    ecx,edi
  432b19:	call   rbp
  432b1b:	mov    edi,eax
  432b1d:	movzx  r14d,BYTE PTR [r13+rbx*1+0x0]
  432b23:	mov    ecx,r14d
  432b26:	call   r12
  432b29:	test   eax,eax
  432b2b:	je     0x432b36
  432b2d:	mov    ecx,r14d
  432b30:	call   r15
  432b33:	mov    r14d,eax
  432b36:	cmp    edi,r14d
  432b39:	je     0x432b00
  432b3b:	mov    rdx,QWORD PTR [rsp+0x70]
  432b40:	mov    r14,QWORD PTR [rsp+0x30]
  432b45:	mov    rbp,QWORD PTR [rsp+0x48]
  432b4a:	add    QWORD PTR [rsp+0x28],rdx
  432b4f:	jmp    0x432abc
  432b54:	mov    rax,r13
  432b57:	add    rsp,0x898
  432b5e:	pop    rbx
  432b5f:	pop    rsi
  432b60:	pop    rdi
  432b61:	pop    rbp
  432b62:	pop    r12
  432b64:	pop    r13
  432b66:	pop    r14
  432b68:	pop    r15
  432b6a:	ret    
  432b6b:	xor    eax,eax
  432b6d:	jmp    0x432b57
  432b6f:	lea    r8,[rsp+0x88]
  432b77:	mov    rdx,r9
  432b7a:	mov    rcx,rsi
  432b7d:	call   0x4323d0
  432b82:	mov    QWORD PTR [rsp+0x38],rax
  432b87:	mov    rax,QWORD PTR [rsp+0x88]
  432b8f:	mov    QWORD PTR [rsp+0x20],rax
  432b94:	jmp    0x43265c
  432b99:	mov    rax,QWORD PTR [rsp+0x20]
  432b9e:	add    rax,QWORD PTR [rsp+0x8e0]
  432ba6:	jmp    0x432b57
  432ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  432bb0:	push   r15
  432bb2:	push   r14
  432bb4:	push   r13
  432bb6:	push   r12
  432bb8:	push   rbp
  432bb9:	push   rdi
  432bba:	push   rsi
  432bbb:	push   rbx
  432bbc:	sub    rsp,0xa8
  432bc3:	movzx  ebx,BYTE PTR [rcx]
  432bc6:	mov    QWORD PTR [rsp+0xf0],rcx
  432bce:	mov    r14,rdx
  432bd1:	test   bl,bl
  432bd3:	je     0x4330af
  432bd9:	movzx  esi,BYTE PTR [rdx]
  432bdc:	test   sil,sil
  432bdf:	je     0x4330bd
  432be5:	mov    rdi,rdx
  432be8:	mov    rbp,rcx
  432beb:	mov    r12d,0x1
  432bf1:	mov    r13,QWORD PTR [rip+0x21e98]        # 0x454a90
  432bf8:	mov    r15,QWORD PTR [rip+0x21f91]        # 0x454b90
  432bff:	jmp    0x432c09
  432c01:	movzx  esi,BYTE PTR [rdi]
  432c04:	test   sil,sil
  432c07:	je     0x432c4d
  432c09:	mov    ecx,ebx
  432c0b:	call   r13
  432c0e:	test   eax,eax
  432c10:	je     0x432c1c
  432c12:	mov    ecx,ebx
  432c14:	call   QWORD PTR [rip+0x21f76]        # 0x454b90
  432c1a:	mov    ebx,eax
  432c1c:	mov    ecx,esi
  432c1e:	call   r13
  432c21:	test   eax,eax
  432c23:	je     0x432c2c
  432c25:	mov    ecx,esi
  432c27:	call   r15
  432c2a:	mov    esi,eax
  432c2c:	cmp    ebx,esi
  432c2e:	sete   al
  432c31:	add    rbp,0x1
  432c35:	movzx  ebx,BYTE PTR [rbp+0x0]
  432c39:	and    r12d,eax
  432c3c:	add    rdi,0x1
  432c40:	test   bl,bl
  432c42:	jne    0x432c01
  432c44:	cmp    BYTE PTR [rdi],0x0
  432c47:	jne    0x432e20
  432c4d:	test   r12b,r12b
  432c50:	mov    rax,QWORD PTR [rsp+0xf0]
  432c58:	jne    0x432c83
  432c5a:	sub    rdi,r14
  432c5d:	add    rax,0x1
  432c61:	cmp    rdi,0x1f
  432c65:	mov    QWORD PTR [rsp+0x40],rax
  432c6a:	lea    rbx,[rdi-0x1]
  432c6e:	jbe    0x432ca0
  432c70:	mov    rcx,QWORD PTR [rsp+0x40]
  432c75:	mov    r9,rdi
  432c78:	mov    r8,r14
  432c7b:	mov    rdx,rbx
  432c7e:	call   0x432610
  432c83:	add    rsp,0xa8
  432c8a:	pop    rbx
  432c8b:	pop    rsi
  432c8c:	pop    rdi
  432c8d:	pop    rbp
  432c8e:	pop    r12
  432c90:	pop    r13
  432c92:	pop    r14
  432c94:	pop    r15
  432c96:	ret    
  432c97:	nop    WORD PTR [rax+rax*1+0x0]
  432ca0:	cmp    rdi,0x2
  432ca4:	ja     0x432e27
  432caa:	mov    QWORD PTR [rsp+0x98],0x1
  432cb6:	mov    QWORD PTR [rsp+0x48],rbx
  432cbb:	mov    edx,0x1
  432cc0:	add    rdx,r14
  432cc3:	mov    r8,QWORD PTR [rsp+0x48]
  432cc8:	mov    rcx,r14
  432ccb:	call   QWORD PTR [rip+0x21ce7]        # 0x4549b8
  432cd1:	test   eax,eax
  432cd3:	jne    0x432efe
  432cd9:	mov    rax,QWORD PTR [rsp+0x98]
  432ce1:	mov    rdx,rdi
  432ce4:	mov    rsi,QWORD PTR [rip+0x21da5]        # 0x454a90
  432ceb:	mov    QWORD PTR [rsp+0x28],0x0
  432cf4:	mov    QWORD PTR [rsp+0x30],0x0
  432cfd:	sub    rdx,rax
  432d00:	mov    QWORD PTR [rsp+0x78],rax
  432d05:	mov    rax,QWORD PTR [rip+0x21e84]        # 0x454b90
  432d0c:	mov    QWORD PTR [rsp+0x80],rdx
  432d14:	mov    QWORD PTR [rsp+0x88],rsi
  432d1c:	mov    QWORD PTR [rsp+0x60],rax
  432d21:	mov    eax,0x1
  432d26:	sub    rax,QWORD PTR [rsp+0x48]
  432d2b:	mov    QWORD PTR [rsp+0x70],rax
  432d30:	mov    rax,QWORD PTR [rip+0x21e59]        # 0x454b90
  432d37:	mov    QWORD PTR [rsp+0x38],rax
  432d3c:	mov    QWORD PTR [rsp+0x50],rax
  432d41:	mov    rax,QWORD PTR [rsp+0x30]
  432d46:	mov    rdx,QWORD PTR [rsp+0x40]
  432d4b:	add    rax,rdi
  432d4e:	lea    rcx,[rdx+rbx*1]
  432d52:	xor    edx,edx
  432d54:	mov    r8,rax
  432d57:	mov    r15,rax
  432d5a:	mov    QWORD PTR [rsp+0x58],rax
  432d5f:	sub    r8,rbx
  432d62:	call   0x424060
  432d67:	test   r15,r15
  432d6a:	je     0x432e20
  432d70:	test   rax,rax
  432d73:	jne    0x432e20
  432d79:	mov    rdx,QWORD PTR [rsp+0x28]
  432d7e:	mov    rax,QWORD PTR [rsp+0x48]
  432d83:	mov    r13,QWORD PTR [rsp+0x60]
  432d88:	cmp    rdx,rax
  432d8b:	mov    rbx,rax
  432d8e:	mov    rax,QWORD PTR [rsp+0xf0]
  432d96:	cmovae rbx,rdx
  432d9a:	mov    rdx,QWORD PTR [rsp+0x30]
  432d9f:	cmp    rdi,rbx
  432da2:	lea    r12,[rax+rdx*1]
  432da6:	ja     0x432dbd
  432da8:	jmp    0x432e50
  432dad:	nop    DWORD PTR [rax]
  432db0:	add    rbx,0x1
  432db4:	cmp    rdi,rbx
  432db7:	jbe    0x432e50
  432dbd:	movzx  ebp,BYTE PTR [r14+rbx*1]
  432dc2:	mov    ecx,ebp
  432dc4:	call   rsi
  432dc6:	test   eax,eax
  432dc8:	je     0x432dd4
  432dca:	mov    ecx,ebp
  432dcc:	call   QWORD PTR [rip+0x21dbe]        # 0x454b90
  432dd2:	mov    ebp,eax
  432dd4:	movzx  r15d,BYTE PTR [r12+rbx*1+0x1]
  432dda:	mov    ecx,r15d
  432ddd:	call   rsi
  432ddf:	test   eax,eax
  432de1:	je     0x432dec
  432de3:	mov    ecx,r15d
  432de6:	call   r13
  432de9:	mov    r15d,eax
  432dec:	cmp    ebp,r15d
  432def:	je     0x432db0
  432df1:	cmp    rdi,rbx
  432df4:	jbe    0x432e50
  432df6:	mov    rax,QWORD PTR [rsp+0x30]
  432dfb:	add    rax,QWORD PTR [rsp+0x70]
  432e00:	mov    QWORD PTR [rsp+0x28],0x0
  432e09:	add    rax,rbx
  432e0c:	mov    QWORD PTR [rsp+0x30],rax
  432e11:	mov    rbx,QWORD PTR [rsp+0x58]
  432e16:	jmp    0x432d41
  432e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  432e20:	xor    eax,eax
  432e22:	jmp    0x432c83
  432e27:	lea    r8,[rsp+0x98]
  432e2f:	mov    rdx,rdi
  432e32:	mov    rcx,r14
  432e35:	call   0x4323d0
  432e3a:	mov    rdx,QWORD PTR [rsp+0x98]
  432e42:	mov    QWORD PTR [rsp+0x48],rax
  432e47:	jmp    0x432cc0
  432e4c:	nop    DWORD PTR [rax+0x0]
  432e50:	mov    rdx,QWORD PTR [rsp+0xf0]
  432e58:	mov    rcx,QWORD PTR [rsp+0x30]
  432e5d:	mov    rax,QWORD PTR [rsp+0x48]
  432e62:	lea    r12,[rdx+rcx*1]
  432e66:	mov    rdx,QWORD PTR [rsp+0x28]
  432e6b:	mov    rbx,rax
  432e6e:	cmp    rax,rdx
  432e71:	jbe    0x432ed0
  432e73:	mov    QWORD PTR [rsp+0x68],rdi
  432e78:	mov    r15,QWORD PTR [rsp+0x88]
  432e80:	jmp    0x432e8c
  432e82:	cmp    QWORD PTR [rsp+0x28],rbp
  432e87:	mov    rbx,rbp
  432e8a:	jae    0x432ecb
  432e8c:	movzx  edi,BYTE PTR [r14+rbx*1-0x1]
  432e92:	lea    rbp,[rbx-0x1]
  432e96:	mov    ecx,edi
  432e98:	call   r15
  432e9b:	test   eax,eax
  432e9d:	je     0x432eaa
  432e9f:	mov    ecx,edi
  432ea1:	mov    rax,QWORD PTR [rsp+0x38]
  432ea6:	call   rax
  432ea8:	mov    edi,eax
  432eaa:	movzx  r13d,BYTE PTR [r12+rbx*1]
  432eaf:	mov    ecx,r13d
  432eb2:	call   r15
  432eb5:	test   eax,eax
  432eb7:	je     0x432ec6
  432eb9:	mov    ecx,r13d
  432ebc:	mov    rax,QWORD PTR [rsp+0x50]
  432ec1:	call   rax
  432ec3:	mov    r13d,eax
  432ec6:	cmp    edi,r13d
  432ec9:	je     0x432e82
  432ecb:	mov    rdi,QWORD PTR [rsp+0x68]
  432ed0:	mov    rax,QWORD PTR [rsp+0x28]
  432ed5:	add    rax,0x1
  432ed9:	cmp    rax,rbx
  432edc:	ja     0x4330ca
  432ee2:	mov    rax,QWORD PTR [rsp+0x80]
  432eea:	mov    rdx,QWORD PTR [rsp+0x78]
  432eef:	add    QWORD PTR [rsp+0x30],rdx
  432ef4:	mov    QWORD PTR [rsp+0x28],rax
  432ef9:	jmp    0x432e11
  432efe:	mov    rdx,QWORD PTR [rsp+0x48]
  432f03:	mov    rax,rdi
  432f06:	mov    r13,QWORD PTR [rip+0x21b83]        # 0x454a90
  432f0d:	mov    QWORD PTR [rsp+0x38],0x0
  432f16:	sub    rax,rdx
  432f19:	mov    rbp,r13
  432f1c:	cmp    rax,rdx
  432f1f:	cmovb  rax,rdx
  432f23:	add    rax,0x1
  432f27:	mov    QWORD PTR [rsp+0x78],rax
  432f2c:	mov    QWORD PTR [rsp+0x98],rax
  432f34:	lea    rax,[rdx-0x1]
  432f38:	mov    QWORD PTR [rsp+0x60],rax
  432f3d:	mov    rax,QWORD PTR [rip+0x21c4c]        # 0x454b90
  432f44:	mov    QWORD PTR [rsp+0x70],rax
  432f49:	mov    QWORD PTR [rsp+0x28],rax
  432f4e:	mov    QWORD PTR [rsp+0x30],rax
  432f53:	mov    eax,0x1
  432f58:	sub    rax,rdx
  432f5b:	mov    QWORD PTR [rsp+0x68],rax
  432f60:	mov    r15,QWORD PTR [rsp+0x38]
  432f65:	mov    rdx,QWORD PTR [rsp+0x40]
  432f6a:	mov    rax,r15
  432f6d:	lea    rcx,[rdx+rbx*1]
  432f71:	xor    edx,edx
  432f73:	add    rax,rdi
  432f76:	mov    r8,rax
  432f79:	mov    rsi,rax
  432f7c:	mov    QWORD PTR [rsp+0x50],rax
  432f81:	sub    r8,rbx
  432f84:	call   0x424060
  432f89:	test   rsi,rsi
  432f8c:	je     0x432e20
  432f92:	test   rax,rax
  432f95:	jne    0x432e20
  432f9b:	mov    rdx,QWORD PTR [rsp+0x48]
  432fa0:	mov    rcx,QWORD PTR [rsp+0xf0]
  432fa8:	cmp    rdi,rdx
  432fab:	mov    rbx,rdx
  432fae:	lea    r12,[rcx+r15*1]
  432fb2:	ja     0x432fc9
  432fb4:	jmp    0x433023
  432fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432fc0:	add    rbx,0x1
  432fc4:	cmp    rdi,rbx
  432fc7:	jbe    0x433023
  432fc9:	movzx  esi,BYTE PTR [r14+rbx*1]
  432fce:	mov    ecx,esi
  432fd0:	call   rbp
  432fd2:	test   eax,eax
  432fd4:	je     0x432fe1
  432fd6:	mov    ecx,esi
  432fd8:	mov    rax,QWORD PTR [rsp+0x28]
  432fdd:	call   rax
  432fdf:	mov    esi,eax
  432fe1:	movzx  r15d,BYTE PTR [r12+rbx*1+0x1]
  432fe7:	mov    ecx,r15d
  432fea:	call   rbp
  432fec:	test   eax,eax
  432fee:	je     0x432ffd
  432ff0:	mov    ecx,r15d
  432ff3:	mov    rax,QWORD PTR [rsp+0x30]
  432ff8:	call   rax
  432ffa:	mov    r15d,eax
  432ffd:	cmp    esi,r15d
  433000:	je     0x432fc0
  433002:	cmp    rdi,rbx
  433005:	jbe    0x433023
  433007:	mov    rax,QWORD PTR [rsp+0x38]
  43300c:	add    rax,QWORD PTR [rsp+0x68]
  433011:	add    rax,rbx
  433014:	mov    QWORD PTR [rsp+0x38],rax
  433019:	mov    rbx,QWORD PTR [rsp+0x50]
  43301e:	jmp    0x432f60
  433023:	mov    rax,QWORD PTR [rsp+0x60]
  433028:	cmp    rax,0xffffffffffffffff
  43302c:	mov    rbx,rax
  43302f:	je     0x4330a0
  433031:	mov    rax,QWORD PTR [rsp+0xf0]
  433039:	mov    rdx,QWORD PTR [rsp+0x38]
  43303e:	mov    QWORD PTR [rsp+0x58],rdi
  433043:	mov    r15,QWORD PTR [rsp+0x70]
  433048:	lea    r12,[rax+rdx*1]
  43304c:	jmp    0x43305a
  43304e:	xchg   ax,ax
  433050:	sub    rbx,0x1
  433054:	cmp    rbx,0xffffffffffffffff
  433058:	je     0x4330a0
  43305a:	movzx  esi,BYTE PTR [r14+rbx*1]
  43305f:	mov    ecx,esi
  433061:	call   r13
  433064:	test   eax,eax
  433066:	je     0x433072
  433068:	mov    ecx,esi
  43306a:	call   QWORD PTR [rip+0x21b20]        # 0x454b90
  433070:	mov    esi,eax
  433072:	movzx  edi,BYTE PTR [r12+rbx*1+0x1]
  433078:	mov    ecx,edi
  43307a:	call   r13
  43307d:	test   eax,eax
  43307f:	je     0x433088
  433081:	mov    ecx,edi
  433083:	call   r15
  433086:	mov    edi,eax
  433088:	cmp    esi,edi
  43308a:	je     0x433050
  43308c:	mov    rdx,QWORD PTR [rsp+0x78]
  433091:	mov    rdi,QWORD PTR [rsp+0x58]
  433096:	add    QWORD PTR [rsp+0x38],rdx
  43309b:	jmp    0x433019
  4330a0:	mov    rax,QWORD PTR [rsp+0x40]
  4330a5:	add    rax,QWORD PTR [rsp+0x38]
  4330aa:	jmp    0x432c83
  4330af:	mov    rdi,rdx
  4330b2:	mov    r12d,0x1
  4330b8:	jmp    0x432c44
  4330bd:	mov    rax,QWORD PTR [rsp+0xf0]
  4330c5:	jmp    0x432c83
  4330ca:	mov    rax,QWORD PTR [rsp+0x40]
  4330cf:	add    rax,QWORD PTR [rsp+0x30]
  4330d4:	jmp    0x432c83
  4330d9:	nop
  4330da:	nop
  4330db:	nop
  4330dc:	nop
  4330dd:	nop
  4330de:	nop
  4330df:	nop
  4330e0:	sub    rsp,0x38
  4330e4:	lea    rdx,[rip+0x157d5]        # 0x4488c0
  4330eb:	lea    rcx,[rip+0x1f1ce]        # 0x4522c0
  4330f2:	mov    QWORD PTR [rsp+0x50],r8
  4330f7:	lea    r8,[rsp+0x50]
  4330fc:	mov    QWORD PTR [rsp+0x58],r9
  433101:	mov    QWORD PTR [rsp+0x28],r8
  433106:	call   0x435f80
  43310b:	add    rsp,0x38
  43310f:	ret    
  433110:	push   rdi
  433111:	push   rsi
  433112:	push   rbx
  433113:	sub    rsp,0x20
  433117:	mov    ebx,ecx
  433119:	call   0x433200
  43311e:	test   rax,rax
  433121:	je     0x433130
  433123:	add    rsp,0x20
  433127:	pop    rbx
  433128:	pop    rsi
  433129:	pop    rdi
  43312a:	ret    
  43312b:	nop    DWORD PTR [rax+rax*1+0x0]
  433130:	mov    ecx,ebx
  433132:	call   0x43a630
  433137:	test   rax,rax
  43313a:	mov    rsi,rax
  43313d:	je     0x4331c0
  433143:	cmp    BYTE PTR [rax],0x0
  433146:	je     0x4331c0
  433148:	mov    rcx,rax
  43314b:	call   0x43a620
  433150:	cmp    rax,0xff
  433156:	ja     0x4331ee
  43315c:	add    rax,0x1
  433160:	lea    rdi,[rip+0x1f159]        # 0x4522c0
  433167:	cmp    eax,0x8
  43316a:	jae    0x4331b0
  43316c:	xor    edx,edx
  43316e:	test   al,0x4
  433170:	jne    0x4331a0
  433172:	test   al,0x2
  433174:	jne    0x433190
  433176:	test   al,0x1
  433178:	jne    0x433183
  43317a:	lea    rax,[rip+0x1f13f]        # 0x4522c0
  433181:	jmp    0x433123
  433183:	movzx  eax,BYTE PTR [rsi+rdx*1]
  433187:	mov    BYTE PTR [rdi+rdx*1],al
  43318a:	jmp    0x43317a
  43318c:	nop    DWORD PTR [rax+0x0]
  433190:	movzx  ecx,WORD PTR [rsi+rdx*1]
  433194:	mov    WORD PTR [rdi+rdx*1],cx
  433198:	add    rdx,0x2
  43319c:	jmp    0x433176
  43319e:	xchg   ax,ax
  4331a0:	mov    edx,DWORD PTR [rsi]
  4331a2:	mov    DWORD PTR [rdi],edx
  4331a4:	mov    edx,0x4
  4331a9:	jmp    0x433172
  4331ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4331b0:	mov    ecx,eax
  4331b2:	shr    ecx,0x3
  4331b5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4331b8:	jmp    0x43316c
  4331ba:	nop    WORD PTR [rax+rax*1+0x0]
  4331c0:	lea    rdx,[rip+0x156f9]        # 0x4488c0
  4331c7:	lea    rcx,[rip+0x1f0f2]        # 0x4522c0
  4331ce:	mov    r8d,ebx
  4331d1:	call   0x4330e0
  4331d6:	call   QWORD PTR [rip+0x21764]        # 0x454940
  4331dc:	mov    DWORD PTR [rax],0x16
  4331e2:	lea    rax,[rip+0x1f0d7]        # 0x4522c0
  4331e9:	jmp    0x433123
  4331ee:	call   0x43a7b0
  4331f3:	nop
  4331f4:	nop
  4331f5:	nop
  4331f6:	nop
  4331f7:	nop
  4331f8:	nop
  4331f9:	nop
  4331fa:	nop
  4331fb:	nop
  4331fc:	nop
  4331fd:	nop
  4331fe:	nop
  4331ff:	nop
  433200:	cmp    ecx,0x2754
  433206:	je     0x4335b0
  43320c:	jg     0x433262
  43320e:	cmp    ecx,0x89
  433214:	je     0x433590
  43321a:	jg     0x4332c3
  433220:	cmp    ecx,0x79
  433223:	je     0x4335c0
  433229:	jle    0x4333f1
  43322f:	cmp    ecx,0x7d
  433232:	lea    rax,[rip+0x156e9]        # 0x448922
  433239:	je     0x433260
  43323b:	jle    0x433500
  433241:	cmp    ecx,0x7f
  433244:	lea    rax,[rip+0x15ad5]        # 0x448d20
  43324b:	je     0x433260
  43324d:	cmp    ecx,0x83
  433253:	lea    rax,[rip+0x156ea]        # 0x448944
  43325a:	jne    0x4332c0
  43325c:	nop    DWORD PTR [rax+0x0]
  433260:	repz ret 
  433262:	cmp    ecx,0x2779
  433268:	je     0x4335a0
  43326e:	jg     0x433312
  433274:	cmp    ecx,0x276c
  43327a:	je     0x433581
  433280:	jg     0x433430
  433286:	cmp    ecx,0x2756
  43328c:	lea    rax,[rip+0x1578b]        # 0x448a1e
  433293:	je     0x433260
  433295:	lea    rax,[rip+0x1576e]        # 0x448a0a
  43329c:	jl     0x433260
  43329e:	cmp    ecx,0x2757
  4332a4:	lea    rax,[rip+0x15789]        # 0x448a34
  4332ab:	je     0x433260
  4332ad:	cmp    ecx,0x276b
  4332b3:	lea    rax,[rip+0x15816]        # 0x448ad0
  4332ba:	je     0x433260
  4332bc:	nop    DWORD PTR [rax+0x0]
  4332c0:	xor    eax,eax
  4332c2:	ret    
  4332c3:	cmp    ecx,0x273c
  4332c9:	je     0x4335e0
  4332cf:	jle    0x433365
  4332d5:	cmp    ecx,0x274b
  4332db:	lea    rax,[rip+0x156d6]        # 0x4489b8
  4332e2:	je     0x433260
  4332e8:	jle    0x433470
  4332ee:	cmp    ecx,0x2750
  4332f4:	lea    rax,[rip+0x156e0]        # 0x4489db
  4332fb:	je     0x433260
  433301:	cmp    ecx,0x2753
  433307:	lea    rax,[rip+0x156da]        # 0x4489e8
  43330e:	jne    0x4332c0
  433310:	repz ret 
  433312:	cmp    ecx,0x277f
  433318:	je     0x4335d0
  43331e:	jle    0x4333b0
  433324:	cmp    ecx,0x2afa
  43332a:	lea    rax,[rip+0x15927]        # 0x448c58
  433331:	je     0x433260
  433337:	jle    0x4334d0
  43333d:	cmp    ecx,0x2afb
  433343:	lea    rax,[rip+0x1592e]        # 0x448c78
  43334a:	je     0x433260
  433350:	cmp    ecx,0x2afc
  433356:	lea    rax,[rip+0x15933]        # 0x448c90
  43335d:	jne    0x4332c0
  433363:	repz ret 
  433365:	cmp    ecx,0x3e4
  43336b:	lea    rax,[rip+0x156f6]        # 0x448a68
  433372:	je     0x433260
  433378:	jle    0x4334a0
  43337e:	cmp    ecx,0x3e5
  433384:	lea    rax,[rip+0x15715]        # 0x448aa0
  43338b:	je     0x433260
  433391:	cmp    ecx,0x7d4
  433397:	lea    rax,[rip+0x15963]        # 0x448d01
  43339e:	jne    0x4332c0
  4333a4:	repz ret 
  4333a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4333b0:	cmp    ecx,0x277c
  4333b6:	lea    rax,[rip+0x15845]        # 0x448c02
  4333bd:	je     0x433260
  4333c3:	jg     0x433543
  4333c9:	cmp    ecx,0x277a
  4333cf:	lea    rax,[rip+0x157f2]        # 0x448bc8
  4333d6:	je     0x433260
  4333dc:	cmp    ecx,0x277b
  4333e2:	lea    rax,[rip+0x15805]        # 0x448bee
  4333e9:	jne    0x4332c0
  4333ef:	repz ret 
  4333f1:	cmp    ecx,0x68
  4333f4:	lea    rax,[rip+0x15919]        # 0x448d14
  4333fb:	je     0x433260
  433401:	jle    0x433570
  433407:	cmp    ecx,0x6f
  43340a:	lea    rax,[rip+0x158c7]        # 0x448cd8
  433411:	je     0x433260
  433417:	cmp    ecx,0x78
  43341a:	lea    rax,[rip+0x154d6]        # 0x4488f7
  433421:	jne    0x4332c0
  433427:	repz ret 
  433429:	nop    DWORD PTR [rax+0x0]
  433430:	cmp    ecx,0x2776
  433436:	je     0x433562
  43343c:	jg     0x433522
  433442:	cmp    ecx,0x276d
  433448:	lea    rax,[rip+0x156d1]        # 0x448b20
  43344f:	je     0x433260
  433455:	cmp    ecx,0x2775
  43345b:	lea    rax,[rip+0x156e6]        # 0x448b48
  433462:	jne    0x4332c0
  433468:	repz ret 
  43346a:	nop    WORD PTR [rax+rax*1+0x0]
  433470:	cmp    ecx,0x273e
  433476:	lea    rax,[rip+0x154ed]        # 0x44896a
  43347d:	je     0x433260
  433483:	cmp    ecx,0x274a
  433489:	lea    rax,[rip+0x154f8]        # 0x448988
  433490:	jne    0x4332c0
  433496:	repz ret 
  433498:	nop    DWORD PTR [rax+rax*1+0x0]
  4334a0:	cmp    ecx,0x8b
  4334a6:	lea    rax,[rip+0x1543b]        # 0x4488e8
  4334ad:	je     0x433260
  4334b3:	cmp    ecx,0x3e3
  4334b9:	lea    rax,[rip+0x15585]        # 0x448a45
  4334c0:	jne    0x4332c0
  4334c6:	repz ret 
  4334c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4334d0:	cmp    ecx,0x2780
  4334d6:	lea    rax,[rip+0x1574c]        # 0x448c29
  4334dd:	je     0x433260
  4334e3:	cmp    ecx,0x2af9
  4334e9:	lea    rax,[rip+0x15754]        # 0x448c44
  4334f0:	jne    0x4332c0
  4334f6:	repz ret 
  4334f8:	nop    DWORD PTR [rax+rax*1+0x0]
  433500:	cmp    ecx,0x7a
  433503:	lea    rax,[rip+0x157b3]        # 0x448cbd
  43350a:	je     0x433260
  433510:	cmp    ecx,0x7c
  433513:	lea    rax,[rip+0x153ef]        # 0x448909
  43351a:	jne    0x4332c0
  433520:	repz ret 
  433522:	cmp    ecx,0x2777
  433528:	je     0x4335d0
  43352e:	cmp    ecx,0x2778
  433534:	lea    rax,[rip+0x1564d]        # 0x448b88
  43353b:	jne    0x4332c0
  433541:	repz ret 
  433543:	cmp    ecx,0x277d
  433549:	lea    rax,[rip+0x156c4]        # 0x448c14
  433550:	je     0x433260
  433556:	cmp    ecx,0x277e
  43355c:	jne    0x4332c0
  433562:	lea    rax,[rip+0x155fd]        # 0x448b66
  433569:	ret    
  43356a:	nop    WORD PTR [rax+rax*1+0x0]
  433570:	test   ecx,ecx
  433572:	lea    rax,[rip+0x15367]        # 0x4488e0
  433579:	jne    0x4332c0
  43357f:	repz ret 
  433581:	lea    rax,[rip+0x15570]        # 0x448af8
  433588:	ret    
  433589:	nop    DWORD PTR [rax+0x0]
  433590:	lea    rax,[rip+0x1539f]        # 0x448936
  433597:	ret    
  433598:	nop    DWORD PTR [rax+rax*1+0x0]
  4335a0:	lea    rax,[rip+0x15601]        # 0x448ba8
  4335a7:	ret    
  4335a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4335b0:	lea    rax,[rip+0x15444]        # 0x4489fb
  4335b7:	ret    
  4335b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4335c0:	lea    rax,[rip+0x15724]        # 0x448ceb
  4335c7:	ret    
  4335c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4335d0:	lea    rax,[rip+0x1559f]        # 0x448b76
  4335d7:	ret    
  4335d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4335e0:	lea    rax,[rip+0x15369]        # 0x448950
  4335e7:	ret    
  4335e8:	nop
  4335e9:	nop
  4335ea:	nop
  4335eb:	nop
  4335ec:	nop
  4335ed:	nop
  4335ee:	nop
  4335ef:	nop
  4335f0:	push   rdi
  4335f1:	push   rsi
  4335f2:	push   rbx
  4335f3:	mov    esi,0x1
  4335f8:	mov    r10d,0x1
  4335fe:	xor    r11d,r11d
  433601:	mov    rax,0xffffffffffffffff
  433608:	nop    DWORD PTR [rax+rax*1+0x0]
  433610:	lea    r9,[r11+r10*1]
  433614:	cmp    r9,rdx
  433617:	jae    0x433644
  433619:	lea    rbx,[rcx+rax*1]
  43361d:	movzx  edi,BYTE PTR [rbx+r10*1]
  433622:	cmp    BYTE PTR [rcx+r9*1],dil
  433626:	jae    0x4336b0
  43362c:	mov    r11,r9
  43362f:	mov    r10d,0x1
  433635:	mov    rsi,r9
  433638:	lea    r9,[r11+r10*1]
  43363c:	sub    rsi,rax
  43363f:	cmp    r9,rdx
  433642:	jb     0x433619
  433644:	mov    QWORD PTR [r8],rsi
  433647:	mov    edi,0x1
  43364c:	mov    r10d,0x1
  433652:	xor    r11d,r11d
  433655:	mov    rbx,0xffffffffffffffff
  43365c:	nop    DWORD PTR [rax+0x0]
  433660:	lea    r9,[r11+r10*1]
  433664:	cmp    rdx,r9
  433667:	jbe    0x433690
  433669:	lea    rsi,[rcx+rbx*1]
  43366d:	movzx  esi,BYTE PTR [rsi+r10*1]
  433672:	cmp    BYTE PTR [rcx+r9*1],sil
  433676:	jbe    0x4336d0
  433678:	mov    r11,r9
  43367b:	mov    r10d,0x1
  433681:	mov    rdi,r9
  433684:	lea    r9,[r11+r10*1]
  433688:	sub    rdi,rbx
  43368b:	cmp    rdx,r9
  43368e:	ja     0x433669
  433690:	add    rbx,0x1
  433694:	add    rax,0x1
  433698:	cmp    rbx,rax
  43369b:	jb     0x4336a3
  43369d:	mov    QWORD PTR [r8],rdi
  4336a0:	mov    rax,rbx
  4336a3:	pop    rbx
  4336a4:	pop    rsi
  4336a5:	pop    rdi
  4336a6:	ret    
  4336a7:	nop    WORD PTR [rax+rax*1+0x0]
  4336b0:	je     0x4336f0
  4336b2:	mov    rax,r11
  4336b5:	mov    esi,0x1
  4336ba:	add    r11,0x1
  4336be:	mov    r10d,0x1
  4336c4:	jmp    0x433610
  4336c9:	nop    DWORD PTR [rax+0x0]
  4336d0:	je     0x433700
  4336d2:	mov    rbx,r11
  4336d5:	mov    edi,0x1
  4336da:	add    r11,0x1
  4336de:	mov    r10d,0x1
  4336e4:	jmp    0x433660
  4336e9:	nop    DWORD PTR [rax+0x0]
  4336f0:	cmp    r10,rsi
  4336f3:	je     0x433710
  4336f5:	add    r10,0x1
  4336f9:	jmp    0x433610
  4336fe:	xchg   ax,ax
  433700:	cmp    r10,rdi
  433703:	je     0x433721
  433705:	add    r10,0x1
  433709:	jmp    0x433660
  43370e:	xchg   ax,ax
  433710:	mov    rsi,r10
  433713:	mov    r11,r9
  433716:	mov    r10d,0x1
  43371c:	jmp    0x433610
  433721:	mov    rdi,r10
  433724:	mov    r11,r9
  433727:	mov    r10d,0x1
  43372d:	jmp    0x433660
  433732:	nop    DWORD PTR [rax+0x0]
  433736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433740:	push   r15
  433742:	push   r14
  433744:	push   r13
  433746:	push   r12
  433748:	push   rbp
  433749:	push   rdi
  43374a:	push   rsi
  43374b:	push   rbx
  43374c:	sub    rsp,0x868
  433753:	cmp    r9,0x2
  433757:	mov    r15,rcx
  43375a:	mov    rbp,rdx
  43375d:	mov    rsi,r8
  433760:	mov    rbx,r9
  433763:	ja     0x433a0a
  433769:	lea    r13,[r9-0x1]
  43376d:	mov    QWORD PTR [rsp+0x58],0x1
  433776:	mov    QWORD PTR [rsp+0x30],0x1
  43377f:	lea    rax,[rsp+0x60]
  433784:	lea    rdx,[rsp+0x860]
  43378c:	nop    DWORD PTR [rax+0x0]
  433790:	mov    QWORD PTR [rax],rbx
  433793:	add    rax,0x8
  433797:	cmp    rax,rdx
  43379a:	jne    0x433790
  43379c:	xor    eax,eax
  43379e:	test   rbx,rbx
  4337a1:	lea    r8,[rbx-0x1]
  4337a5:	je     0x4337c8
  4337a7:	nop    WORD PTR [rax+rax*1+0x0]
  4337b0:	movzx  edx,BYTE PTR [rsi+rax*1]
  4337b4:	mov    rcx,r8
  4337b7:	sub    rcx,rax
  4337ba:	add    rax,0x1
  4337be:	cmp    rax,rbx
  4337c1:	mov    QWORD PTR [rsp+rdx*8+0x60],rcx
  4337c6:	jne    0x4337b0
  4337c8:	mov    rax,QWORD PTR [rsp+0x30]
  4337cd:	mov    r8,r13
  4337d0:	mov    rcx,rsi
  4337d3:	lea    rdx,[rsi+rax*1]
  4337d7:	call   0x43a6c0
  4337dc:	test   eax,eax
  4337de:	jne    0x4338f5
  4337e4:	lea    rax,[r13-0x1]
  4337e8:	xor    r12d,r12d
  4337eb:	xor    edi,edi
  4337ed:	lea    r14,[rbx-0x1]
  4337f1:	mov    QWORD PTR [rsp+0x40],rax
  4337f6:	mov    rax,rbx
  4337f9:	sub    rax,QWORD PTR [rsp+0x30]
  4337fe:	mov    QWORD PTR [rsp+0x38],rax
  433803:	mov    eax,0x1
  433808:	sub    rax,r13
  43380b:	mov    QWORD PTR [rsp+0x48],rax
  433810:	jmp    0x43382b
  433812:	cmp    rax,QWORD PTR [rsp+0x30]
  433817:	jae    0x433822
  433819:	test   r12,r12
  43381c:	cmovne rax,QWORD PTR [rsp+0x38]
  433822:	add    rdi,rax
  433825:	xor    r12d,r12d
  433828:	mov    rbp,r11
  43382b:	lea    r11,[rdi+rbx*1]
  43382f:	lea    rcx,[r15+rbp*1]
  433833:	xor    edx,edx
  433835:	mov    r8,r11
  433838:	mov    QWORD PTR [rsp+0x28],r11
  43383d:	sub    r8,rbp
  433840:	call   0x424060
  433845:	mov    r11,QWORD PTR [rsp+0x28]
  43384a:	test   r11,r11
  43384d:	je     0x433a06
  433853:	test   rax,rax
  433856:	jne    0x433a06
  43385c:	movzx  eax,BYTE PTR [r15+r11*1-0x1]
  433862:	mov    rax,QWORD PTR [rsp+rax*8+0x60]
  433867:	test   rax,rax
  43386a:	jne    0x433812
  43386c:	cmp    r12,r13
  43386f:	mov    rax,r13
  433872:	cmovae rax,r12
  433876:	cmp    rax,r14
  433879:	jae    0x4338a0
  43387b:	lea    rdx,[r15+rdi*1]
  43387f:	jmp    0x43388a
  433881:	add    rax,0x1
  433885:	cmp    rax,r14
  433888:	jae    0x4338a0
  43388a:	movzx  ecx,BYTE PTR [rdx+rax*1]
  43388e:	cmp    BYTE PTR [rsi+rax*1],cl
  433891:	je     0x433881
  433893:	add    rdi,QWORD PTR [rsp+0x48]
  433898:	jmp    0x433822
  43389a:	nop    WORD PTR [rax+rax*1+0x0]
  4338a0:	cmp    r12,r13
  4338a3:	jae    0x433a2c
  4338a9:	mov    rax,QWORD PTR [rsp+0x40]
  4338ae:	lea    rdx,[r15+rdi*1]
  4338b2:	movzx  ecx,BYTE PTR [rdx+rax*1]
  4338b6:	cmp    BYTE PTR [rsi+rax*1],cl
  4338b9:	je     0x4338d4
  4338bb:	jmp    0x433a2c
  4338c0:	movzx  r10d,BYTE PTR [rax+rdx*1-0x1]
  4338c6:	lea    rcx,[rax-0x1]
  4338ca:	cmp    BYTE PTR [rsi+rax*1-0x1],r10b
  4338cf:	jne    0x4338d9
  4338d1:	mov    rax,rcx
  4338d4:	cmp    rax,r12
  4338d7:	jne    0x4338c0
  4338d9:	add    r12,0x1
  4338dd:	cmp    r12,rax
  4338e0:	ja     0x433a34
  4338e6:	add    rdi,QWORD PTR [rsp+0x30]
  4338eb:	mov    r12,QWORD PTR [rsp+0x38]
  4338f0:	jmp    0x433828
  4338f5:	mov    rax,rbx
  4338f8:	lea    rdi,[rbx-0x1]
  4338fc:	sub    rax,r13
  4338ff:	cmp    rax,r13
  433902:	cmovb  rax,r13
  433906:	xor    r14d,r14d
  433909:	add    rax,0x1
  43390d:	mov    QWORD PTR [rsp+0x38],rax
  433912:	mov    QWORD PTR [rsp+0x58],rax
  433917:	lea    rax,[r13-0x1]
  43391b:	mov    QWORD PTR [rsp+0x28],rax
  433920:	mov    eax,0x1
  433925:	sub    rax,r13
  433928:	mov    QWORD PTR [rsp+0x30],rax
  43392d:	nop    DWORD PTR [rax]
  433930:	lea    r12,[r14+rbx*1]
  433934:	lea    rcx,[r15+rbp*1]
  433938:	xor    edx,edx
  43393a:	mov    r8,r12
  43393d:	sub    r8,rbp
  433940:	call   0x424060
  433945:	test   r12,r12
  433948:	je     0x433a06
  43394e:	test   rax,rax
  433951:	jne    0x433a06
  433957:	movzx  eax,BYTE PTR [r15+r12*1-0x1]
  43395d:	mov    rax,QWORD PTR [rsp+rax*8+0x60]
  433962:	test   rax,rax
  433965:	jne    0x4339e0
  433967:	cmp    r13,rdi
  43396a:	lea    rax,[r15+r14*1]
  43396e:	jae    0x433992
  433970:	movzx  ecx,BYTE PTR [rax+r13*1]
  433975:	mov    rdx,r13
  433978:	cmp    BYTE PTR [rsi+r13*1],cl
  43397c:	je     0x433989
  43397e:	jmp    0x4339f0
  433980:	movzx  ecx,BYTE PTR [rax+rdx*1]
  433984:	cmp    BYTE PTR [rsi+rdx*1],cl
  433987:	jne    0x4339f0
  433989:	add    rdx,0x1
  43398d:	cmp    rdx,rdi
  433990:	jb     0x433980
  433992:	mov    rcx,QWORD PTR [rsp+0x28]
  433997:	cmp    rcx,0xffffffffffffffff
  43399b:	mov    rdx,rcx
  43399e:	je     0x4339c5
  4339a0:	mov    rcx,QWORD PTR [rsp+0x28]
  4339a5:	movzx  r9d,BYTE PTR [rax+rcx*1]
  4339aa:	cmp    BYTE PTR [rsi+rcx*1],r9b
  4339ae:	je     0x4339bb
  4339b0:	jmp    0x4339ff
  4339b2:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4339b6:	cmp    BYTE PTR [rsi+rdx*1],cl
  4339b9:	jne    0x4339ff
  4339bb:	sub    rdx,0x1
  4339bf:	cmp    rdx,0xffffffffffffffff
  4339c3:	jne    0x4339b2
  4339c5:	add    rsp,0x868
  4339cc:	pop    rbx
  4339cd:	pop    rsi
  4339ce:	pop    rdi
  4339cf:	pop    rbp
  4339d0:	pop    r12
  4339d2:	pop    r13
  4339d4:	pop    r14
  4339d6:	pop    r15
  4339d8:	ret    
  4339d9:	nop    DWORD PTR [rax+0x0]
  4339e0:	add    r14,rax
  4339e3:	mov    rbp,r12
  4339e6:	jmp    0x433930
  4339eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4339f0:	mov    rax,QWORD PTR [rsp+0x30]
  4339f5:	lea    r11,[rax+r14*1]
  4339f9:	lea    r14,[r11+rdx*1]
  4339fd:	jmp    0x4339e3
  4339ff:	add    r14,QWORD PTR [rsp+0x38]
  433a04:	jmp    0x4339e3
  433a06:	xor    eax,eax
  433a08:	jmp    0x4339c5
  433a0a:	lea    r8,[rsp+0x58]
  433a0f:	mov    rdx,r9
  433a12:	mov    rcx,rsi
  433a15:	call   0x4335f0
  433a1a:	mov    r13,rax
  433a1d:	mov    rax,QWORD PTR [rsp+0x58]
  433a22:	mov    QWORD PTR [rsp+0x30],rax
  433a27:	jmp    0x43377f
  433a2c:	mov    rax,r13
  433a2f:	jmp    0x4338d9
  433a34:	lea    rax,[r15+rdi*1]
  433a38:	jmp    0x4339c5
  433a3a:	nop    WORD PTR [rax+rax*1+0x0]
  433a40:	push   r15
  433a42:	push   r14
  433a44:	push   r13
  433a46:	push   r12
  433a48:	push   rbp
  433a49:	push   rdi
  433a4a:	push   rsi
  433a4b:	push   rbx
  433a4c:	sub    rsp,0x58
  433a50:	movzx  eax,BYTE PTR [rcx]
  433a53:	test   al,al
  433a55:	je     0x433d37
  433a5b:	movzx  r8d,BYTE PTR [rdx]
  433a5f:	test   r8b,r8b
  433a62:	je     0x433d45
  433a68:	mov    rbx,rdx
  433a6b:	mov    r9,rcx
  433a6e:	mov    r10d,0x1
  433a74:	jmp    0x433a89
  433a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433a80:	movzx  r8d,BYTE PTR [rbx]
  433a84:	test   r8b,r8b
  433a87:	je     0x433aa7
  433a89:	add    r9,0x1
  433a8d:	add    rbx,0x1
  433a91:	cmp    al,r8b
  433a94:	sete   al
  433a97:	and    r10d,eax
  433a9a:	movzx  eax,BYTE PTR [r9]
  433a9e:	test   al,al
  433aa0:	jne    0x433a80
  433aa2:	cmp    BYTE PTR [rbx],0x0
  433aa5:	jne    0x433b20
  433aa7:	test   r10b,r10b
  433aaa:	mov    rax,rcx
  433aad:	jne    0x433b02
  433aaf:	mov    rsi,rbx
  433ab2:	mov    rdi,rcx
  433ab5:	lea    rcx,[rcx+0x1]
  433ab9:	sub    rsi,rdx
  433abc:	movsx  edx,BYTE PTR [rdx]
  433abf:	call   0x43a650
  433ac4:	test   rax,rax
  433ac7:	mov    r12,rax
  433aca:	je     0x433b13
  433acc:	cmp    rsi,0x1
  433ad0:	je     0x433b13
  433ad2:	lea    rcx,[rdi+rsi*1]
  433ad6:	sub    rbx,rsi
  433ad9:	mov    r10,rcx
  433adc:	sub    r10,rax
  433adf:	cmp    rax,rcx
  433ae2:	mov    eax,0x1
  433ae7:	cmova  r10,rax
  433aeb:	cmp    rsi,0x1f
  433aef:	jbe    0x433b24
  433af1:	mov    r9,rsi
  433af4:	mov    r8,rbx
  433af7:	mov    rdx,r10
  433afa:	mov    rcx,r12
  433afd:	call   0x433740
  433b02:	add    rsp,0x58
  433b06:	pop    rbx
  433b07:	pop    rsi
  433b08:	pop    rdi
  433b09:	pop    rbp
  433b0a:	pop    r12
  433b0c:	pop    r13
  433b0e:	pop    r14
  433b10:	pop    r15
  433b12:	ret    
  433b13:	mov    rax,r12
  433b16:	jmp    0x433b02
  433b18:	nop    DWORD PTR [rax+rax*1+0x0]
  433b20:	xor    eax,eax
  433b22:	jmp    0x433b02
  433b24:	cmp    rsi,0x2
  433b28:	ja     0x433d4d
  433b2e:	lea    r15,[rsi-0x1]
  433b32:	mov    QWORD PTR [rsp+0x48],0x1
  433b3b:	mov    QWORD PTR [rsp+0x28],0x1
  433b44:	mov    rax,QWORD PTR [rsp+0x28]
  433b49:	mov    r8,r15
  433b4c:	mov    rcx,rbx
  433b4f:	mov    QWORD PTR [rsp+0x30],r10
  433b54:	lea    rdx,[rbx+rax*1]
  433b58:	call   0x43a6c0
  433b5d:	test   eax,eax
  433b5f:	mov    r10,QWORD PTR [rsp+0x30]
  433b64:	jne    0x433c5c
  433b6a:	mov    rax,rsi
  433b6d:	sub    rax,QWORD PTR [rsp+0x28]
  433b72:	lea    r13,[r15-0x1]
  433b76:	xor    ebp,ebp
  433b78:	xor    edi,edi
  433b7a:	mov    QWORD PTR [rsp+0x38],rax
  433b7f:	mov    eax,0x1
  433b84:	sub    rax,r15
  433b87:	mov    QWORD PTR [rsp+0x30],rax
  433b8c:	nop    DWORD PTR [rax+0x0]
  433b90:	lea    r14,[rdi+rsi*1]
  433b94:	lea    rcx,[r12+r10*1]
  433b98:	xor    edx,edx
  433b9a:	mov    r8,r14
  433b9d:	sub    r8,r10
  433ba0:	call   0x424060
  433ba5:	test   r14,r14
  433ba8:	je     0x433b20
  433bae:	test   rax,rax
  433bb1:	jne    0x433b20
  433bb7:	cmp    rbp,r15
  433bba:	mov    rax,r15
  433bbd:	cmovae rax,rbp
  433bc1:	cmp    rsi,rax
  433bc4:	jbe    0x433bf2
  433bc6:	lea    rdx,[r12+rax*1]
  433bca:	movzx  ecx,BYTE PTR [rdx+rdi*1]
  433bce:	cmp    BYTE PTR [rbx+rax*1],cl
  433bd1:	jne    0x433c50
  433bd3:	lea    rdx,[r12+rdi*1]
  433bd7:	jmp    0x433be9
  433bd9:	nop    DWORD PTR [rax+0x0]
  433be0:	movzx  ecx,BYTE PTR [rdx+rax*1]
  433be4:	cmp    BYTE PTR [rbx+rax*1],cl
  433be7:	jne    0x433c50
  433be9:	add    rax,0x1
  433bed:	cmp    rsi,rax
  433bf0:	ja     0x433be0
  433bf2:	cmp    r15,rbp
  433bf5:	jbe    0x433d79
  433bfb:	lea    rcx,[r12+rdi*1]
  433bff:	movzx  eax,BYTE PTR [rcx+r13*1]
  433c04:	cmp    BYTE PTR [rbx+r13*1],al
  433c08:	jne    0x433d79
  433c0e:	mov    rax,r13
  433c11:	jmp    0x433c27
  433c13:	movzx  r11d,BYTE PTR [rax+rcx*1-0x1]
  433c19:	lea    rdx,[rax-0x1]
  433c1d:	cmp    BYTE PTR [rbx+rax*1-0x1],r11b
  433c22:	jne    0x433c2c
  433c24:	mov    rax,rdx
  433c27:	cmp    rax,rbp
  433c2a:	jne    0x433c13
  433c2c:	add    rbp,0x1
  433c30:	cmp    rbp,rax
  433c33:	ja     0x433d81
  433c39:	add    rdi,QWORD PTR [rsp+0x28]
  433c3e:	mov    rbp,QWORD PTR [rsp+0x38]
  433c43:	mov    r10,r14
  433c46:	jmp    0x433b90
  433c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  433c50:	add    rdi,QWORD PTR [rsp+0x30]
  433c55:	xor    ebp,ebp
  433c57:	add    rdi,rax
  433c5a:	jmp    0x433c43
  433c5c:	mov    rax,rsi
  433c5f:	mov    r14d,0x1
  433c65:	lea    r13,[r12+r15*1]
  433c69:	sub    rax,r15
  433c6c:	lea    rbp,[r15-0x1]
  433c70:	cmp    rax,r15
  433c73:	cmovb  rax,r15
  433c77:	sub    r14,r15
  433c7a:	xor    edi,edi
  433c7c:	add    rax,0x1
  433c80:	mov    QWORD PTR [rsp+0x28],r14
  433c85:	mov    QWORD PTR [rsp+0x30],rax
  433c8a:	mov    QWORD PTR [rsp+0x48],rax
  433c8f:	nop
  433c90:	lea    r14,[rdi+rsi*1]
  433c94:	lea    rcx,[r12+r10*1]
  433c98:	xor    edx,edx
  433c9a:	mov    r8,r14
  433c9d:	sub    r8,r10
  433ca0:	call   0x424060
  433ca5:	test   r14,r14
  433ca8:	je     0x433b20
  433cae:	test   rax,rax
  433cb1:	jne    0x433b20
  433cb7:	cmp    rsi,r15
  433cba:	lea    rax,[r12+rdi*1]
  433cbe:	jbe    0x433ce7
  433cc0:	movzx  ecx,BYTE PTR [r13+rdi*1+0x0]
  433cc6:	mov    rdx,r15
  433cc9:	lea    rax,[r12+rdi*1]
  433ccd:	cmp    BYTE PTR [rbx+r15*1],cl
  433cd1:	je     0x433cde
  433cd3:	jmp    0x433d20
  433cd5:	movzx  ecx,BYTE PTR [rax+rdx*1]
  433cd9:	cmp    BYTE PTR [rbx+rdx*1],cl
  433cdc:	jne    0x433d20
  433cde:	add    rdx,0x1
  433ce2:	cmp    rsi,rdx
  433ce5:	ja     0x433cd5
  433ce7:	cmp    rbp,0xffffffffffffffff
  433ceb:	mov    rdx,rbp
  433cee:	je     0x433b02
  433cf4:	movzx  ecx,BYTE PTR [rax+rbp*1]
  433cf8:	cmp    BYTE PTR [rbx+rbp*1],cl
  433cfb:	je     0x433d09
  433cfd:	jmp    0x433d30
  433cff:	nop
  433d00:	movzx  ecx,BYTE PTR [rax+rdx*1]
  433d04:	cmp    BYTE PTR [rbx+rdx*1],cl
  433d07:	jne    0x433d30
  433d09:	sub    rdx,0x1
  433d0d:	cmp    rdx,0xffffffffffffffff
  433d11:	jne    0x433d00
  433d13:	jmp    0x433b02
  433d18:	nop    DWORD PTR [rax+rax*1+0x0]
  433d20:	add    rdi,QWORD PTR [rsp+0x28]
  433d25:	add    rdi,rdx
  433d28:	mov    r10,r14
  433d2b:	jmp    0x433c90
  433d30:	add    rdi,QWORD PTR [rsp+0x30]
  433d35:	jmp    0x433d28
  433d37:	mov    rbx,rdx
  433d3a:	mov    r10d,0x1
  433d40:	jmp    0x433aa2
  433d45:	mov    rax,rcx
  433d48:	jmp    0x433b02
  433d4d:	lea    r8,[rsp+0x48]
  433d52:	mov    rdx,rsi
  433d55:	mov    rcx,rbx
  433d58:	mov    QWORD PTR [rsp+0x30],r10
  433d5d:	call   0x4335f0
  433d62:	mov    r15,rax
  433d65:	mov    rax,QWORD PTR [rsp+0x48]
  433d6a:	mov    r10,QWORD PTR [rsp+0x30]
  433d6f:	mov    QWORD PTR [rsp+0x28],rax
  433d74:	jmp    0x433b44
  433d79:	mov    rax,r15
  433d7c:	jmp    0x433c2c
  433d81:	lea    rax,[r12+rdi*1]
  433d85:	jmp    0x433b02
  433d8a:	nop
  433d8b:	nop
  433d8c:	nop
  433d8d:	nop
  433d8e:	nop
  433d8f:	nop
  433d90:	push   rdi
  433d91:	push   rsi
  433d92:	push   rbx
  433d93:	sub    rsp,0x20
  433d97:	xor    edx,edx
  433d99:	mov    esi,ecx
  433d9b:	call   0x43a670
  433da0:	test   rax,rax
  433da3:	je     0x433e20
  433da5:	mov    rcx,rax
  433da8:	call   0x433e80
  433dad:	test   rax,rax
  433db0:	mov    rbx,rax
  433db3:	je     0x433e20
  433db5:	lea    rdx,[rip+0x14f84]        # 0x448d40
  433dbc:	mov    ecx,esi
  433dbe:	call   0x43a670
  433dc3:	test   rax,rax
  433dc6:	je     0x433df5
  433dc8:	mov    rdx,rbx
  433dcb:	mov    rcx,rax
  433dce:	xor    edi,edi
  433dd0:	call   0x43a648
  433dd5:	test   eax,eax
  433dd7:	jne    0x433df5
  433dd9:	mov    rdx,rbx
  433ddc:	mov    ecx,esi
  433dde:	call   0x43a670
  433de3:	mov    rcx,rbx
  433de6:	call   0x43a748
  433deb:	mov    eax,edi
  433ded:	add    rsp,0x20
  433df1:	pop    rbx
  433df2:	pop    rsi
  433df3:	pop    rdi
  433df4:	ret    
  433df5:	lea    rdx,[rip+0x14f46]        # 0x448d42
  433dfc:	mov    ecx,esi
  433dfe:	call   0x43a670
  433e03:	test   rax,rax
  433e06:	je     0x433e30
  433e08:	mov    rdx,rbx
  433e0b:	mov    rcx,rax
  433e0e:	call   0x43a648
  433e13:	test   eax,eax
  433e15:	setne  dil
  433e19:	jmp    0x433dd9
  433e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  433e20:	mov    edi,0x1
  433e25:	mov    eax,edi
  433e27:	add    rsp,0x20
  433e2b:	pop    rbx
  433e2c:	pop    rsi
  433e2d:	pop    rdi
  433e2e:	ret    
  433e2f:	nop
  433e30:	mov    edi,0x1
  433e35:	jmp    0x433dd9
  433e37:	nop
  433e38:	nop
  433e39:	nop
  433e3a:	nop
  433e3b:	nop
  433e3c:	nop
  433e3d:	nop
  433e3e:	nop
  433e3f:	nop
  433e40:	ret    
  433e41:	nop    DWORD PTR [rax+rax*1+0x0]
  433e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433e50:	sub    rsp,0x28
  433e54:	mov    eax,DWORD PTR [rip+0x1e566]        # 0x4523c0
  433e5a:	test   eax,eax
  433e5c:	jne    0x433e75
  433e5e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x433e40
  433e65:	call   QWORD PTR [rip+0xc2cd]        # 0x440138
  433e6b:	mov    DWORD PTR [rip+0x1e54b],0x1        # 0x4523c0
  433e75:	add    rsp,0x28
  433e79:	ret    
  433e7a:	nop
  433e7b:	nop
  433e7c:	nop
  433e7d:	nop
  433e7e:	nop
  433e7f:	nop
  433e80:	push   rsi
  433e81:	push   rbx
  433e82:	sub    rsp,0x28
  433e86:	mov    rsi,rcx
  433e89:	call   0x43a620
  433e8e:	lea    rbx,[rax+0x1]
  433e92:	mov    rcx,rbx
  433e95:	call   0x423ec0
  433e9a:	test   rax,rax
  433e9d:	je     0x433eb3
  433e9f:	mov    r8,rbx
  433ea2:	mov    rdx,rsi
  433ea5:	mov    rcx,rax
  433ea8:	add    rsp,0x28
  433eac:	pop    rbx
  433ead:	pop    rsi
  433eae:	jmp    0x43a6b8
  433eb3:	xor    eax,eax
  433eb5:	add    rsp,0x28
  433eb9:	pop    rbx
  433eba:	pop    rsi
  433ebb:	ret    
  433ebc:	nop
  433ebd:	nop
  433ebe:	nop
  433ebf:	nop
  433ec0:	jmp    QWORD PTR [rip+0x20dca]        # 0x454c90
  433ec6:	nop
  433ec7:	nop
  433ec8:	jmp    QWORD PTR [rip+0x20dba]        # 0x454c88
  433ece:	nop
  433ecf:	nop
  433ed0:	jmp    QWORD PTR [rip+0x20daa]        # 0x454c80
  433ed6:	nop
  433ed7:	nop
  433ed8:	jmp    QWORD PTR [rip+0x20d9a]        # 0x454c78
  433ede:	nop
  433edf:	nop
  433ee0:	jmp    QWORD PTR [rip+0x20d8a]        # 0x454c70
  433ee6:	nop
  433ee7:	nop
  433ee8:	jmp    QWORD PTR [rip+0x2082a]        # 0x454718
  433eee:	nop
  433eef:	nop
  433ef0:	jmp    QWORD PTR [rip+0x2081a]        # 0x454710
  433ef6:	nop
  433ef7:	nop
  433ef8:	jmp    QWORD PTR [rip+0x2080a]        # 0x454708
  433efe:	nop
  433eff:	nop
  433f00:	jmp    QWORD PTR [rip+0x207fa]        # 0x454700
  433f06:	nop
  433f07:	nop
  433f08:	jmp    QWORD PTR [rip+0x207ea]        # 0x4546f8
  433f0e:	nop
  433f0f:	nop
  433f10:	jmp    QWORD PTR [rip+0x207da]        # 0x4546f0
  433f16:	nop
  433f17:	nop
  433f18:	jmp    QWORD PTR [rip+0x207ca]        # 0x4546e8
  433f1e:	nop
  433f1f:	nop
  433f20:	jmp    QWORD PTR [rip+0x207ba]        # 0x4546e0
  433f26:	nop
  433f27:	nop
  433f28:	jmp    QWORD PTR [rip+0x207aa]        # 0x4546d8
  433f2e:	nop
  433f2f:	nop
  433f30:	jmp    QWORD PTR [rip+0x2079a]        # 0x4546d0
  433f36:	nop
  433f37:	nop
  433f38:	jmp    QWORD PTR [rip+0x2078a]        # 0x4546c8
  433f3e:	nop
  433f3f:	nop
  433f40:	jmp    QWORD PTR [rip+0x20772]        # 0x4546b8
  433f46:	nop
  433f47:	nop
  433f48:	jmp    QWORD PTR [rip+0x20762]        # 0x4546b0
  433f4e:	nop
  433f4f:	nop
  433f50:	jmp    QWORD PTR [rip+0x20752]        # 0x4546a8
  433f56:	nop
  433f57:	nop
  433f58:	jmp    QWORD PTR [rip+0x20cf2]        # 0x454c50
  433f5e:	nop
  433f5f:	nop
  433f60:	jmp    QWORD PTR [rip+0x20ce2]        # 0x454c48
  433f66:	nop
  433f67:	nop
  433f68:	jmp    QWORD PTR [rip+0x20cd2]        # 0x454c40
  433f6e:	nop
  433f6f:	nop
  433f70:	jmp    QWORD PTR [rip+0x20cc2]        # 0x454c38
  433f76:	nop
  433f77:	nop
  433f78:	nop    DWORD PTR [rax+rax*1+0x0]
  433f80:	push   rbx
  433f81:	sub    rsp,0x30
  433f85:	mov    rbx,rcx
  433f88:	mov    rcx,QWORD PTR [rip+0x1f9a9]        # 0x453938
  433f8f:	call   0x434530
  433f94:	cmp    rax,0xffffffffffffffff
  433f98:	mov    QWORD PTR [rsp+0x20],rax
  433f9d:	je     0x434015
  433f9f:	mov    ecx,0x8
  433fa4:	call   0x43a800
  433fa9:	mov    rcx,QWORD PTR [rip+0x1f988]        # 0x453938
  433fb0:	call   0x434530
  433fb5:	mov    rcx,QWORD PTR [rip+0x1f984]        # 0x453940
  433fbc:	mov    QWORD PTR [rsp+0x20],rax
  433fc1:	call   0x434530
  433fc6:	lea    rdx,[rsp+0x20]
  433fcb:	lea    r8,[rsp+0x28]
  433fd0:	mov    rcx,rbx
  433fd3:	mov    QWORD PTR [rsp+0x28],rax
  433fd8:	call   0x43a880
  433fdd:	mov    rcx,QWORD PTR [rsp+0x20]
  433fe2:	mov    rbx,rax
  433fe5:	call   0x434540
  433fea:	mov    rcx,QWORD PTR [rsp+0x28]
  433fef:	mov    QWORD PTR [rip+0x1f942],rax        # 0x453938
  433ff6:	call   0x434540
  433ffb:	mov    ecx,0x8
  434000:	mov    QWORD PTR [rip+0x1f939],rax        # 0x453940
  434007:	call   0x43a7b8
  43400c:	mov    rax,rbx
  43400f:	add    rsp,0x30
  434013:	pop    rbx
  434014:	ret    
  434015:	mov    rax,QWORD PTR [rip+0x156d4]        # 0x4496f0
  43401c:	mov    rcx,rbx
  43401f:	call   QWORD PTR [rax]
  434021:	add    rsp,0x30
  434025:	pop    rbx
  434026:	ret    
  434027:	nop    WORD PTR [rax+rax*1+0x0]
  434030:	sub    rsp,0x28
  434034:	call   0x433f80
  434039:	test   rax,rax
  43403c:	sete   al
  43403f:	movzx  eax,al
  434042:	neg    eax
  434044:	add    rsp,0x28
  434048:	ret    
  434049:	nop
  43404a:	nop
  43404b:	nop
  43404c:	nop
  43404d:	nop
  43404e:	nop
  43404f:	nop
  434050:	sub    rsp,0x28
  434054:	mov    rax,QWORD PTR [rip+0xc045]        # 0x4400a0
  43405b:	mov    rax,QWORD PTR [rax]
  43405e:	test   rax,rax
  434061:	je     0x434080
  434063:	call   rax
  434065:	mov    rax,QWORD PTR [rip+0xc034]        # 0x4400a0
  43406c:	lea    rdx,[rax+0x8]
  434070:	mov    rax,QWORD PTR [rax+0x8]
  434074:	mov    QWORD PTR [rip+0xc025],rdx        # 0x4400a0
  43407b:	test   rax,rax
  43407e:	jne    0x434063
  434080:	add    rsp,0x28
  434084:	ret    
  434085:	nop
  434086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434090:	push   rsi
  434091:	push   rbx
  434092:	sub    rsp,0x28
  434096:	mov    rsi,QWORD PTR [rip+0x155c3]        # 0x449660
  43409d:	mov    rax,QWORD PTR [rsi]
  4340a0:	cmp    eax,0xffffffff
  4340a3:	mov    ebx,eax
  4340a5:	je     0x4340d0
  4340a7:	test   ebx,ebx
  4340a9:	je     0x4340ba
  4340ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4340b0:	mov    eax,ebx
  4340b2:	call   QWORD PTR [rsi+rax*8]
  4340b5:	sub    ebx,0x1
  4340b8:	jne    0x4340b0
  4340ba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x434050
  4340c1:	add    rsp,0x28
  4340c5:	pop    rbx
  4340c6:	pop    rsi
  4340c7:	jmp    0x434030
  4340cc:	nop    DWORD PTR [rax+0x0]
  4340d0:	xor    ebx,ebx
  4340d2:	jmp    0x4340d6
  4340d4:	mov    ebx,eax
  4340d6:	lea    edx,[rbx+0x1]
  4340d9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4340de:	mov    rax,rdx
  4340e1:	jne    0x4340d4
  4340e3:	jmp    0x4340a7
  4340e5:	nop
  4340e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4340f0:	mov    eax,DWORD PTR [rip+0x1e2da]        # 0x4523d0
  4340f6:	test   eax,eax
  4340f8:	je     0x434100
  4340fa:	repz ret 
  4340fc:	nop    DWORD PTR [rax+0x0]
  434100:	mov    DWORD PTR [rip+0x1e2c6],0x1        # 0x4523d0
  43410a:	jmp    0x434090
  43410c:	nop
  43410d:	nop
  43410e:	nop
  43410f:	nop
  434110:	mov    rax,QWORD PTR [rip+0x207e1]        # 0x4548f8
  434117:	rex.W jmp rax
  43411a:	nop
  43411b:	nop
  43411c:	nop
  43411d:	nop
  43411e:	nop
  43411f:	nop
  434120:	xor    eax,eax
  434122:	ret    
  434123:	nop
  434124:	nop
  434125:	nop
  434126:	nop
  434127:	nop
  434128:	nop
  434129:	nop
  43412a:	nop
  43412b:	nop
  43412c:	nop
  43412d:	nop
  43412e:	nop
  43412f:	nop
  434130:	push   r12
  434132:	push   rbp
  434133:	push   rdi
  434134:	push   rsi
  434135:	push   rbx
  434136:	sub    rsp,0x40
  43413a:	mov    rbx,QWORD PTR [rip+0xc00f]        # 0x440150
  434141:	movabs rax,0x2b992ddfa232
  43414b:	mov    QWORD PTR [rsp+0x20],0x0
  434154:	cmp    rbx,rax
  434157:	je     0x434170
  434159:	not    rbx
  43415c:	mov    QWORD PTR [rip+0xbffd],rbx        # 0x440160
  434163:	add    rsp,0x40
  434167:	pop    rbx
  434168:	pop    rsi
  434169:	pop    rdi
  43416a:	pop    rbp
  43416b:	pop    r12
  43416d:	ret    
  43416e:	xchg   ax,ax
  434170:	lea    rcx,[rsp+0x20]
  434175:	call   QWORD PTR [rip+0x20655]        # 0x4547d0
  43417b:	mov    r12,QWORD PTR [rsp+0x20]
  434180:	call   QWORD PTR [rip+0x20602]        # 0x454788
  434186:	mov    ebp,eax
  434188:	call   QWORD PTR [rip+0x20602]        # 0x454790
  43418e:	mov    edi,eax
  434190:	call   QWORD PTR [rip+0x20642]        # 0x4547d8
  434196:	lea    rcx,[rsp+0x30]
  43419b:	mov    esi,eax
  43419d:	call   QWORD PTR [rip+0x2065d]        # 0x454800
  4341a3:	xor    r12,QWORD PTR [rsp+0x30]
  4341a8:	mov    edx,edi
  4341aa:	movabs rax,0xffffffffffff
  4341b4:	xor    rbp,r12
  4341b7:	mov    rdi,rbp
  4341ba:	xor    rdi,rdx
  4341bd:	mov    edx,esi
  4341bf:	xor    rdi,rdx
  4341c2:	mov    rsi,rdi
  4341c5:	and    rsi,rax
  4341c8:	cmp    rsi,rbx
  4341cb:	je     0x4341f0
  4341cd:	mov    rax,rsi
  4341d0:	not    rax
  4341d3:	mov    QWORD PTR [rip+0xbf76],rsi        # 0x440150
  4341da:	mov    QWORD PTR [rip+0xbf7f],rax        # 0x440160
  4341e1:	add    rsp,0x40
  4341e5:	pop    rbx
  4341e6:	pop    rsi
  4341e7:	pop    rdi
  4341e8:	pop    rbp
  4341e9:	pop    r12
  4341eb:	ret    
  4341ec:	nop    DWORD PTR [rax+0x0]
  4341f0:	movabs rax,0xffffd466d2205dcc
  4341fa:	movabs rsi,0x2b992ddfa233
  434204:	jmp    0x4341d3
  434206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434210:	push   rbp
  434211:	push   rsi
  434212:	push   rbx
  434213:	mov    rbp,rsp
  434216:	sub    rsp,0x70
  43421a:	mov    rsi,rcx
  43421d:	lea    rcx,[rip+0x1e1dc]        # 0x452400
  434224:	call   QWORD PTR [rip+0x205f6]        # 0x454820
  43422a:	mov    rbx,QWORD PTR [rip+0x1e2c7]        # 0x4524f8
  434231:	xor    r8d,r8d
  434234:	lea    rdx,[rbp-0x28]
  434238:	mov    rcx,rbx
  43423b:	call   QWORD PTR [rip+0x205e7]        # 0x454828
  434241:	test   rax,rax
  434244:	mov    r9,rax
  434247:	je     0x4342f0
  43424d:	lea    rax,[rbp-0x20]
  434251:	mov    QWORD PTR [rsp+0x38],0x0
  43425a:	mov    r8,rbx
  43425d:	mov    rdx,QWORD PTR [rbp-0x28]
  434261:	xor    ecx,ecx
  434263:	mov    QWORD PTR [rsp+0x30],rax
  434268:	lea    rax,[rbp-0x18]
  43426c:	mov    QWORD PTR [rsp+0x28],rax
  434271:	lea    rax,[rip+0x1e188]        # 0x452400
  434278:	mov    QWORD PTR [rsp+0x20],rax
  43427d:	call   QWORD PTR [rip+0x205ad]        # 0x454830
  434283:	mov    rax,QWORD PTR [rip+0x1e26e]        # 0x4524f8
  43428a:	xor    ecx,ecx
  43428c:	mov    QWORD PTR [rip+0x1e1ed],rsi        # 0x452480
  434293:	mov    DWORD PTR [rip+0x1e663],0xc0000409        # 0x452900
  43429d:	mov    DWORD PTR [rip+0x1e65d],0x1        # 0x452904
  4342a7:	mov    QWORD PTR [rip+0x1e662],rax        # 0x452910
  4342ae:	mov    rax,QWORD PTR [rip+0xbe9b]        # 0x440150
  4342b5:	mov    QWORD PTR [rbp-0x10],rax
  4342b9:	mov    rax,QWORD PTR [rip+0xbea0]        # 0x440160
  4342c0:	mov    QWORD PTR [rbp-0x8],rax
  4342c4:	call   QWORD PTR [rip+0x205a6]        # 0x454870
  4342ca:	lea    rcx,[rip+0x14a7f]        # 0x448d50
  4342d1:	call   QWORD PTR [rip+0x205b9]        # 0x454890
  4342d7:	call   QWORD PTR [rip+0x204a3]        # 0x454780
  4342dd:	mov    edx,0xc0000409
  4342e2:	mov    rcx,rax
  4342e5:	call   QWORD PTR [rip+0x20595]        # 0x454880
  4342eb:	call   0x43a7b0
  4342f0:	mov    rax,QWORD PTR [rbp+0x18]
  4342f4:	mov    QWORD PTR [rip+0x1e1fd],rax        # 0x4524f8
  4342fb:	lea    rax,[rbp+0x8]
  4342ff:	mov    QWORD PTR [rip+0x1e192],rax        # 0x452498
  434306:	jmp    0x434283
  43430b:	nop
  43430c:	nop
  43430d:	nop
  43430e:	nop
  43430f:	nop
  434310:	sub    rsp,0x28
  434314:	test   edx,edx
  434316:	je     0x434330
  434318:	cmp    edx,0x3
  43431b:	je     0x434330
  43431d:	mov    eax,0x1
  434322:	add    rsp,0x28
  434326:	ret    
  434327:	nop    WORD PTR [rax+rax*1+0x0]
  434330:	call   0x435020
  434335:	mov    eax,0x1
  43433a:	add    rsp,0x28
  43433e:	ret    
  43433f:	nop
  434340:	push   rsi
  434341:	push   rbx
  434342:	sub    rsp,0x28
  434346:	mov    rax,QWORD PTR [rip+0x152f3]        # 0x449640
  43434d:	cmp    DWORD PTR [rax],0x2
  434350:	je     0x434358
  434352:	mov    DWORD PTR [rax],0x2
  434358:	cmp    edx,0x2
  43435b:	je     0x434370
  43435d:	cmp    edx,0x1
  434360:	je     0x4343a2
  434362:	mov    eax,0x1
  434367:	add    rsp,0x28
  43436b:	pop    rbx
  43436c:	pop    rsi
  43436d:	ret    
  43436e:	xchg   ax,ax
  434370:	lea    rbx,[rip+0x21ce9]        # 0x456060
  434377:	lea    rsi,[rip+0x21ce2]        # 0x456060
  43437e:	cmp    rbx,rsi
  434381:	je     0x434362
  434383:	mov    rax,QWORD PTR [rbx]
  434386:	test   rax,rax
  434389:	je     0x43438d
  43438b:	call   rax
  43438d:	add    rbx,0x8
  434391:	cmp    rbx,rsi
  434394:	jne    0x434383
  434396:	mov    eax,0x1
  43439b:	add    rsp,0x28
  43439f:	pop    rbx
  4343a0:	pop    rsi
  4343a1:	ret    
  4343a2:	call   0x435020
  4343a7:	jmp    0x434362
  4343a9:	nop    DWORD PTR [rax+0x0]
  4343b0:	xor    eax,eax
  4343b2:	ret    
  4343b3:	nop
  4343b4:	nop
  4343b5:	nop
  4343b6:	nop
  4343b7:	nop
  4343b8:	nop
  4343b9:	nop
  4343ba:	nop
  4343bb:	nop
  4343bc:	nop
  4343bd:	nop
  4343be:	nop
  4343bf:	nop
  4343c0:	sub    rsp,0x58
  4343c4:	mov    rax,QWORD PTR [rip+0x1e615]        # 0x4529e0
  4343cb:	test   rax,rax
  4343ce:	je     0x4343fc
  4343d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4343d9:	mov    DWORD PTR [rsp+0x20],ecx
  4343dd:	lea    rcx,[rsp+0x20]
  4343e2:	mov    QWORD PTR [rsp+0x28],rdx
  4343e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4343ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4343f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4343f9:	call   rax
  4343fb:	nop
  4343fc:	add    rsp,0x58
  434400:	ret    
  434401:	nop    DWORD PTR [rax+rax*1+0x0]
  434406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434410:	mov    QWORD PTR [rip+0x1e5c9],rcx        # 0x4529e0
  434417:	jmp    0x43a858
  43441c:	nop    DWORD PTR [rax+0x0]
  434420:	push   rsi
  434421:	push   rbx
  434422:	sub    rsp,0x78
  434426:	movaps XMMWORD PTR [rsp+0x40],xmm6
  43442b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  434430:	movaps XMMWORD PTR [rsp+0x60],xmm8
  434436:	cmp    DWORD PTR [rcx],0x6
  434439:	ja     0x434510
  43443f:	mov    edx,DWORD PTR [rcx]
  434441:	lea    rax,[rip+0x14a4c]        # 0x448e94
  434448:	movsxd rdx,DWORD PTR [rax+rdx*4]
  43444c:	add    rax,rdx
  43444f:	jmp    rax
  434451:	lea    rbx,[rip+0x14918]        # 0x448d70
  434458:	nop    DWORD PTR [rax+rax*1+0x0]
  434460:	movsd  xmm8,QWORD PTR [rcx+0x20]
  434466:	mov    rsi,QWORD PTR [rcx+0x8]
  43446a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  43446f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  434474:	call   0x43a870
  434479:	movsd  QWORD PTR [rsp+0x30],xmm8
  434480:	lea    rcx,[rax+0x60]
  434484:	lea    rdx,[rip+0x149dd]        # 0x448e68
  43448b:	movsd  QWORD PTR [rsp+0x28],xmm7
  434491:	mov    r9,rsi
  434494:	mov    r8,rbx
  434497:	movsd  QWORD PTR [rsp+0x20],xmm6
  43449d:	call   0x43a768
  4344a2:	nop
  4344a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4344a8:	xor    eax,eax
  4344aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4344af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4344b5:	add    rsp,0x78
  4344b9:	pop    rbx
  4344ba:	pop    rsi
  4344bb:	ret    
  4344bc:	nop    DWORD PTR [rax+0x0]
  4344c0:	lea    rbx,[rip+0x148c8]        # 0x448d8f
  4344c7:	jmp    0x434460
  4344c9:	nop    DWORD PTR [rax+0x0]
  4344d0:	lea    rbx,[rip+0x148d9]        # 0x448db0
  4344d7:	jmp    0x434460
  4344d9:	nop    DWORD PTR [rax+0x0]
  4344e0:	lea    rbx,[rip+0x14939]        # 0x448e20
  4344e7:	jmp    0x434460
  4344ec:	nop    DWORD PTR [rax+0x0]
  4344f0:	lea    rbx,[rip+0x14901]        # 0x448df8
  4344f7:	jmp    0x434460
  4344fc:	nop    DWORD PTR [rax+0x0]
  434500:	lea    rbx,[rip+0x148c9]        # 0x448dd0
  434507:	jmp    0x434460
  43450c:	nop    DWORD PTR [rax+0x0]
  434510:	lea    rbx,[rip+0x1493f]        # 0x448e56
  434517:	jmp    0x434460
  43451c:	nop
  43451d:	nop
  43451e:	nop
  43451f:	nop
  434520:	fninit 
  434522:	ret    
  434523:	nop
  434524:	nop
  434525:	nop
  434526:	nop
  434527:	nop
  434528:	nop
  434529:	nop
  43452a:	nop
  43452b:	nop
  43452c:	nop
  43452d:	nop
  43452e:	nop
  43452f:	nop
  434530:	mov    rax,rcx
  434533:	ret    
  434534:	xchg   ax,ax
  434536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434540:	mov    rax,rcx
  434543:	ret    
  434544:	nop
  434545:	nop
  434546:	nop
  434547:	nop
  434548:	nop
  434549:	nop
  43454a:	nop
  43454b:	nop
  43454c:	nop
  43454d:	nop
  43454e:	nop
  43454f:	nop
  434550:	push   rsi
  434551:	push   rbx
  434552:	sub    rsp,0x38
  434556:	lea    rax,[rsp+0x58]
  43455b:	mov    rbx,rcx
  43455e:	mov    QWORD PTR [rsp+0x58],rdx
  434563:	mov    QWORD PTR [rsp+0x60],r8
  434568:	mov    QWORD PTR [rsp+0x68],r9
  43456d:	mov    QWORD PTR [rsp+0x28],rax
  434572:	call   0x43a870
  434577:	lea    rcx,[rip+0x14932]        # 0x448eb0
  43457e:	lea    r9,[rax+0x60]
  434582:	mov    r8d,0x1b
  434588:	mov    edx,0x1
  43458d:	call   0x43a738
  434592:	mov    rsi,QWORD PTR [rsp+0x28]
  434597:	call   0x43a870
  43459c:	lea    rcx,[rax+0x60]
  4345a0:	mov    rdx,rbx
  4345a3:	mov    r8,rsi
  4345a6:	call   0x43a5c8
  4345ab:	call   0x43a7b0
  4345b0:	nop
  4345b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4345b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4345c0:	push   r13
  4345c2:	push   r12
  4345c4:	push   rbp
  4345c5:	push   rdi
  4345c6:	push   rsi
  4345c7:	push   rbx
  4345c8:	sub    rsp,0x58
  4345cc:	movsxd rbp,DWORD PTR [rip+0x1e431]        # 0x452a04
  4345d3:	mov    rbx,rcx
  4345d6:	mov    rsi,rdx
  4345d9:	mov    rdi,r8
  4345dc:	test   ebp,ebp
  4345de:	jle    0x4346da
  4345e4:	mov    rax,QWORD PTR [rip+0x1e41d]        # 0x452a08
  4345eb:	xor    r9d,r9d
  4345ee:	add    rax,0x8
  4345f2:	mov    r10,QWORD PTR [rax]
  4345f5:	cmp    rbx,r10
  4345f8:	jb     0x43460e
  4345fa:	mov    rdx,QWORD PTR [rax+0x8]
  4345fe:	mov    r11d,DWORD PTR [rdx+0x8]
  434602:	add    r10,r11
  434605:	cmp    rbx,r10
  434608:	jb     0x4346c0
  43460e:	add    r9d,0x1
  434612:	add    rax,0x18
  434616:	cmp    r9d,ebp
  434619:	jne    0x4345f2
  43461b:	mov    rcx,rbx
  43461e:	call   0x435230
  434623:	test   rax,rax
  434626:	mov    r12,rax
  434629:	je     0x434712
  43462f:	lea    rbp,[rbp+rbp*2+0x0]
  434634:	shl    rbp,0x3
  434638:	mov    r13,rbp
  43463b:	add    r13,QWORD PTR [rip+0x1e3c6]        # 0x452a08
  434642:	mov    QWORD PTR [r13+0x10],rax
  434646:	mov    DWORD PTR [r13+0x0],0x0
  43464e:	call   0x435350
  434653:	mov    edx,DWORD PTR [r12+0xc]
  434658:	mov    r8d,0x30
  43465e:	add    rax,rdx
  434661:	lea    rdx,[rsp+0x20]
  434666:	mov    QWORD PTR [r13+0x8],rax
  43466a:	mov    rax,QWORD PTR [rip+0x1e397]        # 0x452a08
  434671:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  434676:	call   QWORD PTR [rip+0x20224]        # 0x4548a0
  43467c:	test   rax,rax
  43467f:	je     0x4346f5
  434681:	mov    eax,DWORD PTR [rsp+0x44]
  434685:	lea    edx,[rax-0x4]
  434688:	and    edx,0xfffffffb
  43468b:	je     0x4346b9
  43468d:	sub    eax,0x40
  434690:	and    eax,0xffffffbf
  434693:	je     0x4346b9
  434695:	mov    r9,rbp
  434698:	add    r9,QWORD PTR [rip+0x1e369]        # 0x452a08
  43469f:	mov    r8d,0x40
  4346a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4346aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4346af:	call   QWORD PTR [rip+0x201e3]        # 0x454898
  4346b5:	test   eax,eax
  4346b7:	je     0x4346e1
  4346b9:	add    DWORD PTR [rip+0x1e344],0x1        # 0x452a04
  4346c0:	mov    r8,rdi
  4346c3:	mov    rdx,rsi
  4346c6:	mov    rcx,rbx
  4346c9:	add    rsp,0x58
  4346cd:	pop    rbx
  4346ce:	pop    rsi
  4346cf:	pop    rdi
  4346d0:	pop    rbp
  4346d1:	pop    r12
  4346d3:	pop    r13
  4346d5:	jmp    0x43a6b8
  4346da:	xor    ebp,ebp
  4346dc:	jmp    0x43461b
  4346e1:	call   QWORD PTR [rip+0x200b1]        # 0x454798
  4346e7:	lea    rcx,[rip+0x1483a]        # 0x448f28
  4346ee:	mov    edx,eax
  4346f0:	call   0x434550
  4346f5:	mov    rax,QWORD PTR [rip+0x1e30c]        # 0x452a08
  4346fc:	mov    edx,DWORD PTR [r12+0x8]
  434701:	lea    rcx,[rip+0x147e8]        # 0x448ef0
  434708:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  43470d:	call   0x434550
  434712:	lea    rcx,[rip+0x147b7]        # 0x448ed0
  434719:	mov    rdx,rbx
  43471c:	call   0x434550
  434721:	nop
  434722:	nop    DWORD PTR [rax+0x0]
  434726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434730:	push   rbp
  434731:	push   r14
  434733:	push   r13
  434735:	push   r12
  434737:	push   rdi
  434738:	push   rsi
  434739:	push   rbx
  43473a:	mov    rbp,rsp
  43473d:	sub    rsp,0x60
  434741:	mov    ebx,DWORD PTR [rip+0x1e2b9]        # 0x452a00
  434747:	test   ebx,ebx
  434749:	je     0x434760
  43474b:	mov    rsp,rbp
  43474e:	pop    rbx
  43474f:	pop    rsi
  434750:	pop    rdi
  434751:	pop    r12
  434753:	pop    r13
  434755:	pop    r14
  434757:	pop    rbp
  434758:	ret    
  434759:	nop    DWORD PTR [rax+0x0]
  434760:	mov    DWORD PTR [rip+0x1e296],0x1        # 0x452a00
  43476a:	call   0x435280
  43476f:	cdqe   
  434771:	lea    rax,[rax+rax*2]
  434775:	lea    rax,[rax*8+0x1e]
  43477d:	and    rax,0xfffffffffffffff0
  434781:	call   0x4354a0
  434786:	mov    rsi,QWORD PTR [rip+0x14ee3]        # 0x449670
  43478d:	mov    rbx,QWORD PTR [rip+0x14eec]        # 0x449680
  434794:	sub    rsp,rax
  434797:	mov    DWORD PTR [rip+0x1e263],0x0        # 0x452a04
  4347a1:	lea    rax,[rsp+0x20]
  4347a6:	mov    QWORD PTR [rip+0x1e25b],rax        # 0x452a08
  4347ad:	mov    rax,rsi
  4347b0:	sub    rax,rbx
  4347b3:	cmp    rax,0x7
  4347b7:	jle    0x43474b
  4347b9:	cmp    rax,0xb
  4347bd:	jle    0x4347e5
  4347bf:	mov    r11d,DWORD PTR [rbx]
  4347c2:	test   r11d,r11d
  4347c5:	jne    0x434910
  4347cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4347cf:	test   r10d,r10d
  4347d2:	jne    0x434910
  4347d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4347dc:	test   r9d,r9d
  4347df:	jne    0x4347fc
  4347e1:	add    rbx,0xc
  4347e5:	mov    r8d,DWORD PTR [rbx]
  4347e8:	test   r8d,r8d
  4347eb:	jne    0x434910
  4347f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4347f4:	test   ecx,ecx
  4347f6:	jne    0x434910
  4347fc:	mov    edx,DWORD PTR [rbx+0x8]
  4347ff:	cmp    edx,0x1
  434802:	jne    0x434a1c
  434808:	add    rbx,0xc
  43480c:	cmp    rbx,rsi
  43480f:	jae    0x43474b
  434815:	mov    r12,QWORD PTR [rip+0x14e84]        # 0x4496a0
  43481c:	lea    r13,[rbp-0x30]
  434820:	movabs r14,0xffffffff00000000
  43482a:	mov    ecx,DWORD PTR [rbx+0x4]
  43482d:	mov    eax,DWORD PTR [rbx]
  43482f:	movzx  edx,BYTE PTR [rbx+0x8]
  434833:	add    rax,r12
  434836:	add    rcx,r12
  434839:	cmp    edx,0x10
  43483c:	mov    r8,QWORD PTR [rax]
  43483f:	je     0x434986
  434845:	jbe    0x43494d
  43484b:	cmp    edx,0x20
  43484e:	je     0x4349cf
  434854:	cmp    edx,0x40
  434857:	jne    0x4349bb
  43485d:	sub    r8,rax
  434860:	mov    rdx,r13
  434863:	mov    rdi,r13
  434866:	mov    rax,r8
  434869:	add    rax,QWORD PTR [rcx]
  43486c:	mov    r8d,0x8
  434872:	mov    QWORD PTR [rbp-0x30],rax
  434876:	call   0x4345c0
  43487b:	add    rbx,0xc
  43487f:	cmp    rbx,rsi
  434882:	jb     0x43482a
  434884:	mov    eax,DWORD PTR [rip+0x1e17a]        # 0x452a04
  43488a:	xor    ebx,ebx
  43488c:	xor    esi,esi
  43488e:	test   eax,eax
  434890:	jle    0x43474b
  434896:	mov    r14,QWORD PTR [rip+0x20003]        # 0x4548a0
  43489d:	lea    r13,[rbp-0x34]
  4348a1:	mov    r12,QWORD PTR [rip+0x1fff0]        # 0x454898
  4348a8:	jmp    0x4348c3
  4348aa:	nop    WORD PTR [rax+rax*1+0x0]
  4348b0:	add    esi,0x1
  4348b3:	add    rbx,0x18
  4348b7:	cmp    esi,DWORD PTR [rip+0x1e147]        # 0x452a04
  4348bd:	jge    0x43474b
  4348c3:	mov    rax,rbx
  4348c6:	add    rax,QWORD PTR [rip+0x1e13b]        # 0x452a08
  4348cd:	mov    edx,DWORD PTR [rax]
  4348cf:	test   edx,edx
  4348d1:	je     0x4348b0
  4348d3:	mov    rcx,QWORD PTR [rax+0x8]
  4348d7:	mov    r8d,0x30
  4348dd:	mov    rdx,rdi
  4348e0:	call   r14
  4348e3:	test   rax,rax
  4348e6:	je     0x4349fe
  4348ec:	mov    rax,QWORD PTR [rip+0x1e115]        # 0x452a08
  4348f3:	mov    r9,r13
  4348f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4348fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4348fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  434902:	call   r12
  434905:	jmp    0x4348b0
  434907:	nop    WORD PTR [rax+rax*1+0x0]
  434910:	cmp    rbx,rsi
  434913:	jae    0x43474b
  434919:	mov    r12,QWORD PTR [rip+0x14d80]        # 0x4496a0
  434920:	lea    rdi,[rbp-0x30]
  434924:	mov    ecx,DWORD PTR [rbx+0x4]
  434927:	mov    eax,DWORD PTR [rbx]
  434929:	mov    r8d,0x4
  43492f:	mov    rdx,rdi
  434932:	add    rbx,0x8
  434936:	add    rcx,r12
  434939:	add    eax,DWORD PTR [rcx]
  43493b:	mov    DWORD PTR [rbp-0x30],eax
  43493e:	call   0x4345c0
  434943:	cmp    rbx,rsi
  434946:	jb     0x434924
  434948:	jmp    0x434884
  43494d:	cmp    edx,0x8
  434950:	jne    0x4349bb
  434952:	movzx  edx,BYTE PTR [rcx]
  434955:	mov    rdi,r13
  434958:	mov    r10,rdx
  43495b:	or     r10,0xffffffffffffff00
  434962:	test   dl,dl
  434964:	cmovs  rdx,r10
  434968:	sub    rdx,rax
  43496b:	lea    rax,[r8+rdx*1]
  43496f:	mov    r8d,0x1
  434975:	mov    rdx,r13
  434978:	mov    QWORD PTR [rbp-0x30],rax
  43497c:	call   0x4345c0
  434981:	jmp    0x43487b
  434986:	movzx  edx,WORD PTR [rcx]
  434989:	mov    rdi,r13
  43498c:	mov    r10,rdx
  43498f:	or     r10,0xffffffffffff0000
  434996:	test   dx,dx
  434999:	cmovs  rdx,r10
  43499d:	sub    rdx,rax
  4349a0:	lea    rax,[r8+rdx*1]
  4349a4:	mov    r8d,0x2
  4349aa:	mov    rdx,r13
  4349ad:	mov    QWORD PTR [rbp-0x30],rax
  4349b1:	call   0x4345c0
  4349b6:	jmp    0x43487b
  4349bb:	lea    rcx,[rip+0x145c6]        # 0x448f88
  4349c2:	mov    QWORD PTR [rbp-0x30],0x0
  4349ca:	call   0x434550
  4349cf:	mov    edx,DWORD PTR [rcx]
  4349d1:	mov    rdi,r13
  4349d4:	mov    r10,rdx
  4349d7:	or     r10,r14
  4349da:	test   edx,edx
  4349dc:	cmovs  rdx,r10
  4349e0:	sub    rdx,rax
  4349e3:	lea    rax,[r8+rdx*1]
  4349e7:	mov    r8d,0x4
  4349ed:	mov    rdx,r13
  4349f0:	mov    QWORD PTR [rbp-0x30],rax
  4349f4:	call   0x4345c0
  4349f9:	jmp    0x43487b
  4349fe:	add    rbx,QWORD PTR [rip+0x1e003]        # 0x452a08
  434a05:	lea    rcx,[rip+0x144e4]        # 0x448ef0
  434a0c:	mov    rax,QWORD PTR [rbx+0x10]
  434a10:	mov    r8,QWORD PTR [rbx+0x8]
  434a14:	mov    edx,DWORD PTR [rax+0x8]
  434a17:	call   0x434550
  434a1c:	lea    rcx,[rip+0x1452d]        # 0x448f50
  434a23:	call   0x434550
  434a28:	nop
  434a29:	nop
  434a2a:	nop
  434a2b:	nop
  434a2c:	nop
  434a2d:	nop
  434a2e:	nop
  434a2f:	nop
  434a30:	sub    rsp,0x28
  434a34:	mov    eax,DWORD PTR [rcx]
  434a36:	cmp    eax,0xc0000091
  434a3b:	ja     0x434aa0
  434a3d:	cmp    eax,0xc000008d
  434a42:	jae    0x434abf
  434a44:	cmp    eax,0xc0000008
  434a49:	je     0x434b60
  434a4f:	ja     0x434b30
  434a55:	cmp    eax,0x80000002
  434a5a:	je     0x434b60
  434a60:	cmp    eax,0xc0000005
  434a65:	jne    0x434b3e
  434a6b:	xor    edx,edx
  434a6d:	mov    ecx,0xb
  434a72:	call   0x43a660
  434a77:	cmp    rax,0x1
  434a7b:	je     0x434bc0
  434a81:	test   rax,rax
  434a84:	je     0x434ba0
  434a8a:	mov    ecx,0xb
  434a8f:	call   rax
  434a91:	xor    eax,eax
  434a93:	add    rsp,0x28
  434a97:	ret    
  434a98:	nop    DWORD PTR [rax+rax*1+0x0]
  434aa0:	cmp    eax,0xc0000094
  434aa5:	je     0x434b70
  434aab:	ja     0x434af0
  434aad:	cmp    eax,0xc0000092
  434ab2:	je     0x434b60
  434ab8:	cmp    eax,0xc0000093
  434abd:	jne    0x434b3e
  434abf:	xor    edx,edx
  434ac1:	mov    ecx,0x8
  434ac6:	call   0x43a660
  434acb:	cmp    rax,0x1
  434acf:	mov    rdx,rax
  434ad2:	je     0x434b48
  434ad4:	test   rdx,rdx
  434ad7:	mov    eax,0x1
  434adc:	je     0x434a93
  434ade:	mov    ecx,0x8
  434ae3:	call   rdx
  434ae5:	xor    eax,eax
  434ae7:	add    rsp,0x28
  434aeb:	ret    
  434aec:	nop    DWORD PTR [rax+0x0]
  434af0:	cmp    eax,0xc0000095
  434af5:	je     0x434b60
  434af7:	cmp    eax,0xc0000096
  434afc:	jne    0x434b3e
  434afe:	xor    edx,edx
  434b00:	mov    ecx,0x4
  434b05:	call   0x43a660
  434b0a:	cmp    rax,0x1
  434b0e:	je     0x434baa
  434b14:	test   rax,rax
  434b17:	je     0x434ba0
  434b1d:	mov    ecx,0x4
  434b22:	call   rax
  434b24:	xor    eax,eax
  434b26:	jmp    0x434a93
  434b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  434b30:	cmp    eax,0xc000001d
  434b35:	je     0x434afe
  434b37:	cmp    eax,0xc000008c
  434b3c:	je     0x434b60
  434b3e:	mov    eax,0x1
  434b43:	add    rsp,0x28
  434b47:	ret    
  434b48:	mov    edx,0x1
  434b4d:	mov    ecx,0x8
  434b52:	call   0x43a660
  434b57:	call   0x434520
  434b5c:	nop    DWORD PTR [rax+0x0]
  434b60:	xor    eax,eax
  434b62:	add    rsp,0x28
  434b66:	ret    
  434b67:	nop    WORD PTR [rax+rax*1+0x0]
  434b70:	xor    edx,edx
  434b72:	mov    ecx,0x8
  434b77:	call   0x43a660
  434b7c:	cmp    rax,0x1
  434b80:	mov    rdx,rax
  434b83:	jne    0x434ad4
  434b89:	mov    edx,0x1
  434b8e:	mov    ecx,0x8
  434b93:	call   0x43a660
  434b98:	xor    eax,eax
  434b9a:	jmp    0x434a93
  434b9f:	nop
  434ba0:	mov    eax,0x4
  434ba5:	add    rsp,0x28
  434ba9:	ret    
  434baa:	mov    edx,0x1
  434baf:	mov    ecx,0x4
  434bb4:	call   0x43a660
  434bb9:	xor    eax,eax
  434bbb:	jmp    0x434a93
  434bc0:	mov    edx,0x1
  434bc5:	mov    ecx,0xb
  434bca:	call   0x43a660
  434bcf:	xor    eax,eax
  434bd1:	jmp    0x434a93
  434bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434be0:	push   r12
  434be2:	push   rbp
  434be3:	push   rdi
  434be4:	push   rsi
  434be5:	push   rbx
  434be6:	sub    rsp,0x20
  434bea:	call   0x435350
  434bef:	mov    rbp,rax
  434bf2:	mov    eax,DWORD PTR [rip+0x1de50]        # 0x452a48
  434bf8:	test   eax,eax
  434bfa:	jne    0x434c21
  434bfc:	test   rbp,rbp
  434bff:	je     0x434c21
  434c01:	lea    rcx,[rip+0x143b8]        # 0x448fc0
  434c08:	mov    DWORD PTR [rip+0x1de36],0x1        # 0x452a48
  434c12:	call   0x435190
  434c17:	test   rax,rax
  434c1a:	je     0x434c30
  434c1c:	mov    eax,0x1
  434c21:	add    rsp,0x20
  434c25:	pop    rbx
  434c26:	pop    rsi
  434c27:	pop    rdi
  434c28:	pop    rbp
  434c29:	pop    r12
  434c2b:	ret    
  434c2c:	nop    DWORD PTR [rax+0x0]
  434c30:	lea    rbx,[rip+0x1df49]        # 0x452b80
  434c37:	mov    ecx,0x30
  434c3c:	lea    rdx,[rip+0x1de3d]        # 0x452a80
  434c43:	lea    r12,[rip+0xfffffffffffffde6]        # 0x434a30
  434c4a:	xor    esi,esi
  434c4c:	mov    rdi,rbx
  434c4f:	rep stos QWORD PTR es:[rdi],rax
  434c52:	mov    rdi,rdx
  434c55:	sub    r12,rbp
  434c58:	mov    cl,0x20
  434c5a:	rep stos QWORD PTR es:[rdi],rax
  434c5d:	mov    rdi,rdx
  434c60:	jmp    0x434c90
  434c62:	mov    BYTE PTR [rdi],0x9
  434c65:	mov    DWORD PTR [rdi+0x4],r12d
  434c69:	add    rsi,0x1
  434c6d:	mov    edx,DWORD PTR [rax+0xc]
  434c70:	add    rbx,0xc
  434c74:	mov    DWORD PTR [rbx-0xc],edx
  434c77:	add    edx,DWORD PTR [rax+0x8]
  434c7a:	mov    rax,rdi
  434c7d:	sub    rax,rbp
  434c80:	add    rdi,0x8
  434c84:	mov    DWORD PTR [rbx-0x4],eax
  434c87:	mov    DWORD PTR [rbx-0x8],edx
  434c8a:	cmp    rsi,0x20
  434c8e:	je     0x434cc5
  434c90:	mov    rcx,rsi
  434c93:	call   0x4352c0
  434c98:	test   rax,rax
  434c9b:	jne    0x434c62
  434c9d:	test   rsi,rsi
  434ca0:	je     0x434c1c
  434ca6:	mov    edx,esi
  434ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  434cb0:	mov    r8,rbp
  434cb3:	lea    rcx,[rip+0x1dec6]        # 0x452b80
  434cba:	call   QWORD PTR [rip+0x1fb58]        # 0x454818
  434cc0:	jmp    0x434c1c
  434cc5:	mov    edx,0x20
  434cca:	jmp    0x434cb0
  434ccc:	nop    DWORD PTR [rax+0x0]
  434cd0:	push   rbx
  434cd1:	sub    rsp,0x20
  434cd5:	mov    rdx,QWORD PTR [rcx]
  434cd8:	mov    eax,DWORD PTR [rdx]
  434cda:	mov    r8d,eax
  434cdd:	and    r8d,0x20ffffff
  434ce4:	cmp    r8d,0x20474343
  434ceb:	je     0x434df0
  434cf1:	cmp    eax,0xc0000091
  434cf6:	mov    rbx,rcx
  434cf9:	ja     0x434d80
  434cff:	cmp    eax,0xc000008d
  434d04:	jae    0x434d97
  434d0a:	cmp    eax,0xc0000008
  434d0f:	je     0x434d43
  434d11:	ja     0x434d50
  434d13:	cmp    eax,0x80000002
  434d18:	je     0x434d43
  434d1a:	cmp    eax,0xc0000005
  434d1f:	jne    0x434d62
  434d21:	xor    edx,edx
  434d23:	mov    ecx,0xb
  434d28:	call   0x43a660
  434d2d:	cmp    rax,0x1
  434d31:	je     0x434e60
  434d37:	test   rax,rax
  434d3a:	je     0x434d62
  434d3c:	mov    ecx,0xb
  434d41:	call   rax
  434d43:	mov    eax,0xffffffff
  434d48:	add    rsp,0x20
  434d4c:	pop    rbx
  434d4d:	ret    
  434d4e:	xchg   ax,ax
  434d50:	cmp    eax,0xc000001d
  434d55:	je     0x434e16
  434d5b:	cmp    eax,0xc000008c
  434d60:	je     0x434d43
  434d62:	mov    rax,QWORD PTR [rip+0x1dcd7]        # 0x452a40
  434d69:	test   rax,rax
  434d6c:	je     0x434d48
  434d6e:	mov    rcx,rbx
  434d71:	add    rsp,0x20
  434d75:	pop    rbx
  434d76:	rex.W jmp rax
  434d79:	nop    DWORD PTR [rax+0x0]
  434d80:	cmp    eax,0xc0000094
  434d85:	je     0x434dc2
  434d87:	ja     0x434e00
  434d89:	cmp    eax,0xc0000092
  434d8e:	je     0x434d43
  434d90:	cmp    eax,0xc0000093
  434d95:	jne    0x434d62
  434d97:	xor    edx,edx
  434d99:	mov    ecx,0x8
  434d9e:	call   0x43a660
  434da3:	cmp    rax,0x1
  434da7:	jne    0x434dd4
  434da9:	mov    edx,0x1
  434dae:	mov    ecx,0x8
  434db3:	call   0x43a660
  434db8:	call   0x434520
  434dbd:	jmp    0x434d43
  434dc2:	xor    edx,edx
  434dc4:	mov    ecx,0x8
  434dc9:	call   0x43a660
  434dce:	cmp    rax,0x1
  434dd2:	je     0x434e42
  434dd4:	test   rax,rax
  434dd7:	je     0x434d62
  434dd9:	mov    ecx,0x8
  434dde:	call   rax
  434de0:	mov    eax,0xffffffff
  434de5:	jmp    0x434d48
  434dea:	nop    WORD PTR [rax+rax*1+0x0]
  434df0:	test   BYTE PTR [rdx+0x4],0x1
  434df4:	jne    0x434cf1
  434dfa:	jmp    0x434d43
  434dff:	nop
  434e00:	cmp    eax,0xc0000095
  434e05:	je     0x434d43
  434e0b:	cmp    eax,0xc0000096
  434e10:	jne    0x434d62
  434e16:	xor    edx,edx
  434e18:	mov    ecx,0x4
  434e1d:	call   0x43a660
  434e22:	cmp    rax,0x1
  434e26:	je     0x434e74
  434e28:	test   rax,rax
  434e2b:	je     0x434d62
  434e31:	mov    ecx,0x4
  434e36:	call   rax
  434e38:	mov    eax,0xffffffff
  434e3d:	jmp    0x434d48
  434e42:	mov    edx,0x1
  434e47:	mov    ecx,0x8
  434e4c:	call   0x43a660
  434e51:	jmp    0x434d43
  434e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434e60:	mov    edx,0x1
  434e65:	mov    ecx,0xb
  434e6a:	call   0x43a660
  434e6f:	jmp    0x434d43
  434e74:	mov    edx,0x1
  434e79:	mov    ecx,0x4
  434e7e:	call   0x43a660
  434e83:	jmp    0x434d43
  434e88:	nop
  434e89:	nop
  434e8a:	nop
  434e8b:	nop
  434e8c:	nop
  434e8d:	nop
  434e8e:	nop
  434e8f:	nop
  434e90:	push   rbp
  434e91:	push   rdi
  434e92:	push   rsi
  434e93:	push   rbx
  434e94:	sub    rsp,0x28
  434e98:	lea    rcx,[rip+0x1de81]        # 0x452d20
  434e9f:	call   QWORD PTR [rip+0x1f89b]        # 0x454740
  434ea5:	mov    rbx,QWORD PTR [rip+0x1de54]        # 0x452d00
  434eac:	test   rbx,rbx
  434eaf:	je     0x434ee4
  434eb1:	mov    rbp,QWORD PTR [rip+0x1f9d0]        # 0x454888
  434eb8:	mov    rdi,QWORD PTR [rip+0x1f8d9]        # 0x454798
  434ebf:	nop
  434ec0:	mov    ecx,DWORD PTR [rbx]
  434ec2:	call   rbp
  434ec4:	mov    rsi,rax
  434ec7:	call   rdi
  434ec9:	test   eax,eax
  434ecb:	jne    0x434edb
  434ecd:	test   rsi,rsi
  434ed0:	je     0x434edb
  434ed2:	mov    rax,QWORD PTR [rbx+0x8]
  434ed6:	mov    rcx,rsi
  434ed9:	call   rax
  434edb:	mov    rbx,QWORD PTR [rbx+0x10]
  434edf:	test   rbx,rbx
  434ee2:	jne    0x434ec0
  434ee4:	mov    rax,QWORD PTR [rip+0x1f905]        # 0x4547f0
  434eeb:	lea    rcx,[rip+0x1de2e]        # 0x452d20
  434ef2:	add    rsp,0x28
  434ef6:	pop    rbx
  434ef7:	pop    rsi
  434ef8:	pop    rdi
  434ef9:	pop    rbp
  434efa:	rex.W jmp rax
  434efd:	nop    DWORD PTR [rax]
  434f00:	push   rdi
  434f01:	push   rsi
  434f02:	push   rbx
  434f03:	sub    rsp,0x20
  434f07:	mov    eax,DWORD PTR [rip+0x1ddfb]        # 0x452d08
  434f0d:	test   eax,eax
  434f0f:	jne    0x434f20
  434f11:	add    rsp,0x20
  434f15:	pop    rbx
  434f16:	pop    rsi
  434f17:	pop    rdi
  434f18:	ret    
  434f19:	nop    DWORD PTR [rax+0x0]
  434f20:	mov    rsi,rdx
  434f23:	mov    edi,ecx
  434f25:	mov    edx,0x18
  434f2a:	mov    ecx,0x1
  434f2f:	call   0x43a798
  434f34:	test   rax,rax
  434f37:	mov    rbx,rax
  434f3a:	je     0x434f78
  434f3c:	mov    DWORD PTR [rax],edi
  434f3e:	mov    QWORD PTR [rax+0x8],rsi
  434f42:	lea    rcx,[rip+0x1ddd7]        # 0x452d20
  434f49:	call   QWORD PTR [rip+0x1f7f1]        # 0x454740
  434f4f:	mov    rax,QWORD PTR [rip+0x1ddaa]        # 0x452d00
  434f56:	lea    rcx,[rip+0x1ddc3]        # 0x452d20
  434f5d:	mov    QWORD PTR [rip+0x1dd9c],rbx        # 0x452d00
  434f64:	mov    QWORD PTR [rbx+0x10],rax
  434f68:	call   QWORD PTR [rip+0x1f882]        # 0x4547f0
  434f6e:	xor    eax,eax
  434f70:	add    rsp,0x20
  434f74:	pop    rbx
  434f75:	pop    rsi
  434f76:	pop    rdi
  434f77:	ret    
  434f78:	mov    eax,0xffffffff
  434f7d:	jmp    0x434f11
  434f7f:	nop
  434f80:	push   rbx
  434f81:	sub    rsp,0x20
  434f85:	mov    eax,DWORD PTR [rip+0x1dd7d]        # 0x452d08
  434f8b:	test   eax,eax
  434f8d:	jne    0x434fa0
  434f8f:	xor    eax,eax
  434f91:	add    rsp,0x20
  434f95:	pop    rbx
  434f96:	ret    
  434f97:	nop    WORD PTR [rax+rax*1+0x0]
  434fa0:	mov    ebx,ecx
  434fa2:	lea    rcx,[rip+0x1dd77]        # 0x452d20
  434fa9:	call   QWORD PTR [rip+0x1f791]        # 0x454740
  434faf:	mov    rdx,QWORD PTR [rip+0x1dd4a]        # 0x452d00
  434fb6:	test   rdx,rdx
  434fb9:	je     0x434fd7
  434fbb:	mov    eax,DWORD PTR [rdx]
  434fbd:	cmp    eax,ebx
  434fbf:	jne    0x434fce
  434fc1:	jmp    0x43500f
  434fc3:	mov    r8d,DWORD PTR [rax]
  434fc6:	cmp    r8d,ebx
  434fc9:	je     0x434ff0
  434fcb:	mov    rdx,rax
  434fce:	mov    rax,QWORD PTR [rdx+0x10]
  434fd2:	test   rax,rax
  434fd5:	jne    0x434fc3
  434fd7:	lea    rcx,[rip+0x1dd42]        # 0x452d20
  434fde:	call   QWORD PTR [rip+0x1f80c]        # 0x4547f0
  434fe4:	xor    eax,eax
  434fe6:	add    rsp,0x20
  434fea:	pop    rbx
  434feb:	ret    
  434fec:	nop    DWORD PTR [rax+0x0]
  434ff0:	mov    rcx,rax
  434ff3:	mov    rax,QWORD PTR [rax+0x10]
  434ff7:	mov    QWORD PTR [rdx+0x10],rax
  434ffb:	call   0x43a748
  435000:	lea    rcx,[rip+0x1dd19]        # 0x452d20
  435007:	call   QWORD PTR [rip+0x1f7e3]        # 0x4547f0
  43500d:	jmp    0x434fe4
  43500f:	mov    rax,QWORD PTR [rdx+0x10]
  435013:	mov    rcx,rdx
  435016:	mov    QWORD PTR [rip+0x1dce3],rax        # 0x452d00
  43501d:	jmp    0x434ffb
  43501f:	nop
  435020:	push   rbx
  435021:	sub    rsp,0x20
  435025:	cmp    edx,0x1
  435028:	je     0x4350c0
  43502e:	jb     0x435060
  435030:	cmp    edx,0x2
  435033:	je     0x435050
  435035:	cmp    edx,0x3
  435038:	jne    0x435055
  43503a:	mov    eax,DWORD PTR [rip+0x1dcc8]        # 0x452d08
  435040:	test   eax,eax
  435042:	je     0x435055
  435044:	call   0x434e90
  435049:	jmp    0x435055
  43504b:	nop    DWORD PTR [rax+rax*1+0x0]
  435050:	call   0x434520
  435055:	mov    eax,0x1
  43505a:	add    rsp,0x20
  43505e:	pop    rbx
  43505f:	ret    
  435060:	mov    eax,DWORD PTR [rip+0x1dca2]        # 0x452d08
  435066:	test   eax,eax
  435068:	jne    0x4350f0
  43506e:	mov    eax,DWORD PTR [rip+0x1dc94]        # 0x452d08
  435074:	cmp    eax,0x1
  435077:	jne    0x435055
  435079:	mov    rcx,QWORD PTR [rip+0x1dc80]        # 0x452d00
  435080:	test   rcx,rcx
  435083:	je     0x435096
  435085:	mov    rbx,QWORD PTR [rcx+0x10]
  435089:	call   0x43a748
  43508e:	test   rbx,rbx
  435091:	mov    rcx,rbx
  435094:	jne    0x435085
  435096:	lea    rcx,[rip+0x1dc83]        # 0x452d20
  43509d:	mov    QWORD PTR [rip+0x1dc58],0x0        # 0x452d00
  4350a8:	mov    DWORD PTR [rip+0x1dc56],0x0        # 0x452d08
  4350b2:	call   QWORD PTR [rip+0x1f680]        # 0x454738
  4350b8:	jmp    0x435055
  4350ba:	nop    WORD PTR [rax+rax*1+0x0]
  4350c0:	mov    eax,DWORD PTR [rip+0x1dc42]        # 0x452d08
  4350c6:	test   eax,eax
  4350c8:	je     0x4350e0
  4350ca:	mov    eax,0x1
  4350cf:	mov    DWORD PTR [rip+0x1dc2f],0x1        # 0x452d08
  4350d9:	add    rsp,0x20
  4350dd:	pop    rbx
  4350de:	ret    
  4350df:	nop
  4350e0:	lea    rcx,[rip+0x1dc39]        # 0x452d20
  4350e7:	call   QWORD PTR [rip+0x1f6f3]        # 0x4547e0
  4350ed:	jmp    0x4350ca
  4350ef:	nop
  4350f0:	call   0x434e90
  4350f5:	jmp    0x43506e
  4350fa:	nop
  4350fb:	nop
  4350fc:	nop
  4350fd:	nop
  4350fe:	nop
  4350ff:	nop
  435100:	movsxd rax,DWORD PTR [rcx+0x3c]
  435104:	add    rcx,rax
  435107:	xor    eax,eax
  435109:	cmp    DWORD PTR [rcx],0x4550
  43510f:	je     0x435113
  435111:	repz ret 
  435113:	xor    eax,eax
  435115:	cmp    WORD PTR [rcx+0x18],0x20b
  43511b:	sete   al
  43511e:	ret    
  43511f:	nop
  435120:	cmp    WORD PTR [rcx],0x5a4d
  435125:	je     0x435130
  435127:	xor    eax,eax
  435129:	ret    
  43512a:	nop    WORD PTR [rax+rax*1+0x0]
  435130:	jmp    0x435100
  435132:	nop    DWORD PTR [rax+0x0]
  435136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435140:	movsxd rax,DWORD PTR [rcx+0x3c]
  435144:	add    rcx,rax
  435147:	movzx  eax,WORD PTR [rcx+0x14]
  43514b:	lea    rax,[rcx+rax*1+0x18]
  435150:	movzx  ecx,WORD PTR [rcx+0x6]
  435154:	test   ecx,ecx
  435156:	je     0x435181
  435158:	sub    ecx,0x1
  43515b:	lea    rcx,[rcx+rcx*4]
  43515f:	lea    r9,[rax+rcx*8+0x28]
  435164:	mov    r8d,DWORD PTR [rax+0xc]
  435168:	cmp    r8,rdx
  43516b:	mov    rcx,r8
  43516e:	ja     0x435178
  435170:	add    ecx,DWORD PTR [rax+0x8]
  435173:	cmp    rdx,rcx
  435176:	jb     0x435183
  435178:	add    rax,0x28
  43517c:	cmp    rax,r9
  43517f:	jne    0x435164
  435181:	xor    eax,eax
  435183:	repz ret 
  435185:	nop
  435186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435190:	push   rdi
  435191:	push   rsi
  435192:	push   rbx
  435193:	sub    rsp,0x20
  435197:	mov    rsi,rcx
  43519a:	call   0x43a620
  43519f:	cmp    rax,0x8
  4351a3:	ja     0x4351c0
  4351a5:	mov    rbx,QWORD PTR [rip+0x144f4]        # 0x4496a0
  4351ac:	xor    edi,edi
  4351ae:	cmp    WORD PTR [rbx],0x5a4d
  4351b3:	je     0x4351d0
  4351b5:	mov    rax,rdi
  4351b8:	add    rsp,0x20
  4351bc:	pop    rbx
  4351bd:	pop    rsi
  4351be:	pop    rdi
  4351bf:	ret    
  4351c0:	xor    edi,edi
  4351c2:	mov    rax,rdi
  4351c5:	add    rsp,0x20
  4351c9:	pop    rbx
  4351ca:	pop    rsi
  4351cb:	pop    rdi
  4351cc:	ret    
  4351cd:	nop    DWORD PTR [rax]
  4351d0:	mov    rcx,rbx
  4351d3:	call   0x435100
  4351d8:	test   eax,eax
  4351da:	je     0x4351b5
  4351dc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4351e0:	add    rdx,rbx
  4351e3:	movzx  eax,WORD PTR [rdx+0x14]
  4351e7:	lea    rbx,[rdx+rax*1+0x18]
  4351ec:	movzx  eax,WORD PTR [rdx+0x6]
  4351f0:	test   eax,eax
  4351f2:	je     0x4351b5
  4351f4:	sub    eax,0x1
  4351f7:	lea    rax,[rax+rax*4]
  4351fb:	lea    rdi,[rbx+rax*8+0x28]
  435200:	jmp    0x43520b
  435202:	add    rbx,0x28
  435206:	cmp    rbx,rdi
  435209:	je     0x4351c0
  43520b:	mov    r8d,0x8
  435211:	mov    rdx,rsi
  435214:	mov    rcx,rbx
  435217:	call   0x43a618
  43521c:	test   eax,eax
  43521e:	jne    0x435202
  435220:	mov    rdi,rbx
  435223:	mov    rax,rdi
  435226:	add    rsp,0x20
  43522a:	pop    rbx
  43522b:	pop    rsi
  43522c:	pop    rdi
  43522d:	ret    
  43522e:	xchg   ax,ax
  435230:	push   rsi
  435231:	push   rbx
  435232:	sub    rsp,0x28
  435236:	mov    rbx,QWORD PTR [rip+0x14463]        # 0x4496a0
  43523d:	cmp    WORD PTR [rbx],0x5a4d
  435242:	je     0x435250
  435244:	xor    eax,eax
  435246:	add    rsp,0x28
  43524a:	pop    rbx
  43524b:	pop    rsi
  43524c:	ret    
  43524d:	nop    DWORD PTR [rax]
  435250:	mov    rsi,rcx
  435253:	mov    rcx,rbx
  435256:	call   0x435100
  43525b:	test   eax,eax
  43525d:	je     0x435244
  43525f:	sub    rsi,rbx
  435262:	mov    rcx,rbx
  435265:	mov    rdx,rsi
  435268:	add    rsp,0x28
  43526c:	pop    rbx
  43526d:	pop    rsi
  43526e:	jmp    0x435140
  435273:	nop    DWORD PTR [rax]
  435276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435280:	push   rbx
  435281:	sub    rsp,0x20
  435285:	mov    rbx,QWORD PTR [rip+0x14414]        # 0x4496a0
  43528c:	xor    eax,eax
  43528e:	cmp    WORD PTR [rbx],0x5a4d
  435293:	je     0x4352a0
  435295:	add    rsp,0x20
  435299:	pop    rbx
  43529a:	ret    
  43529b:	nop    DWORD PTR [rax+rax*1+0x0]
  4352a0:	mov    rcx,rbx
  4352a3:	call   0x435100
  4352a8:	test   eax,eax
  4352aa:	je     0x435295
  4352ac:	movsxd rax,DWORD PTR [rbx+0x3c]
  4352b0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4352b5:	add    rsp,0x20
  4352b9:	pop    rbx
  4352ba:	ret    
  4352bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4352c0:	push   rdi
  4352c1:	push   rsi
  4352c2:	push   rbx
  4352c3:	sub    rsp,0x20
  4352c7:	mov    rsi,QWORD PTR [rip+0x143d2]        # 0x4496a0
  4352ce:	xor    edi,edi
  4352d0:	mov    rbx,rcx
  4352d3:	cmp    WORD PTR [rsi],0x5a4d
  4352d8:	je     0x4352e5
  4352da:	mov    rax,rdi
  4352dd:	add    rsp,0x20
  4352e1:	pop    rbx
  4352e2:	pop    rsi
  4352e3:	pop    rdi
  4352e4:	ret    
  4352e5:	mov    rcx,rsi
  4352e8:	call   0x435100
  4352ed:	test   eax,eax
  4352ef:	je     0x4352da
  4352f1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4352f5:	add    rsi,rax
  4352f8:	movzx  eax,WORD PTR [rsi+0x14]
  4352fc:	lea    rdx,[rsi+rax*1+0x18]
  435301:	movzx  eax,WORD PTR [rsi+0x6]
  435305:	test   eax,eax
  435307:	je     0x4352da
  435309:	sub    eax,0x1
  43530c:	lea    rax,[rax+rax*4]
  435310:	lea    rax,[rdx+rax*8+0x28]
  435315:	test   BYTE PTR [rdx+0x27],0x20
  435319:	je     0x435324
  43531b:	test   rbx,rbx
  43531e:	je     0x435340
  435320:	sub    rbx,0x1
  435324:	add    rdx,0x28
  435328:	cmp    rdx,rax
  43532b:	jne    0x435315
  43532d:	xor    edi,edi
  43532f:	mov    rax,rdi
  435332:	add    rsp,0x20
  435336:	pop    rbx
  435337:	pop    rsi
  435338:	pop    rdi
  435339:	ret    
  43533a:	nop    WORD PTR [rax+rax*1+0x0]
  435340:	mov    rdi,rdx
  435343:	mov    rax,rdi
  435346:	add    rsp,0x20
  43534a:	pop    rbx
  43534b:	pop    rsi
  43534c:	pop    rdi
  43534d:	ret    
  43534e:	xchg   ax,ax
  435350:	push   rsi
  435351:	push   rbx
  435352:	sub    rsp,0x28
  435356:	mov    rsi,QWORD PTR [rip+0x14343]        # 0x4496a0
  43535d:	xor    ebx,ebx
  43535f:	cmp    WORD PTR [rsi],0x5a4d
  435364:	je     0x435370
  435366:	mov    rax,rbx
  435369:	add    rsp,0x28
  43536d:	pop    rbx
  43536e:	pop    rsi
  43536f:	ret    
  435370:	mov    rcx,rsi
  435373:	call   0x435100
  435378:	test   eax,eax
  43537a:	cmovne rbx,rsi
  43537e:	mov    rax,rbx
  435381:	add    rsp,0x28
  435385:	pop    rbx
  435386:	pop    rsi
  435387:	ret    
  435388:	nop    DWORD PTR [rax+rax*1+0x0]
  435390:	push   rsi
  435391:	push   rbx
  435392:	sub    rsp,0x28
  435396:	mov    rbx,QWORD PTR [rip+0x14303]        # 0x4496a0
  43539d:	xor    eax,eax
  43539f:	cmp    WORD PTR [rbx],0x5a4d
  4353a4:	je     0x4353b0
  4353a6:	add    rsp,0x28
  4353aa:	pop    rbx
  4353ab:	pop    rsi
  4353ac:	ret    
  4353ad:	nop    DWORD PTR [rax]
  4353b0:	mov    rsi,rcx
  4353b3:	mov    rcx,rbx
  4353b6:	call   0x435100
  4353bb:	test   eax,eax
  4353bd:	je     0x4353a6
  4353bf:	sub    rsi,rbx
  4353c2:	mov    rcx,rbx
  4353c5:	mov    rdx,rsi
  4353c8:	call   0x435140
  4353cd:	test   rax,rax
  4353d0:	je     0x4353e1
  4353d2:	mov    eax,DWORD PTR [rax+0x24]
  4353d5:	not    eax
  4353d7:	shr    eax,0x1f
  4353da:	add    rsp,0x28
  4353de:	pop    rbx
  4353df:	pop    rsi
  4353e0:	ret    
  4353e1:	xor    eax,eax
  4353e3:	jmp    0x4353a6
  4353e5:	nop
  4353e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4353f0:	push   rbp
  4353f1:	push   rdi
  4353f2:	push   rsi
  4353f3:	push   rbx
  4353f4:	sub    rsp,0x28
  4353f8:	mov    rdi,QWORD PTR [rip+0x142a1]        # 0x4496a0
  4353ff:	xor    ebp,ebp
  435401:	mov    esi,ecx
  435403:	cmp    WORD PTR [rdi],0x5a4d
  435408:	je     0x435420
  43540a:	mov    rax,rbp
  43540d:	add    rsp,0x28
  435411:	pop    rbx
  435412:	pop    rsi
  435413:	pop    rdi
  435414:	pop    rbp
  435415:	ret    
  435416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435420:	mov    rcx,rdi
  435423:	call   0x435100
  435428:	test   eax,eax
  43542a:	je     0x43540a
  43542c:	movsxd rax,DWORD PTR [rdi+0x3c]
  435430:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  435437:	test   edx,edx
  435439:	je     0x43540a
  43543b:	mov    ebx,edx
  43543d:	mov    rcx,rdi
  435440:	mov    rdx,rbx
  435443:	call   0x435140
  435448:	test   rax,rax
  43544b:	je     0x43540a
  43544d:	add    rbx,rdi
  435450:	mov    rdx,rbx
  435453:	jne    0x435467
  435455:	jmp    0x43540a
  435457:	nop    WORD PTR [rax+rax*1+0x0]
  435460:	sub    esi,0x1
  435463:	add    rdx,0x14
  435467:	mov    ecx,DWORD PTR [rdx+0x4]
  43546a:	test   ecx,ecx
  43546c:	jne    0x435475
  43546e:	mov    eax,DWORD PTR [rdx+0xc]
  435471:	test   eax,eax
  435473:	je     0x435490
  435475:	test   esi,esi
  435477:	jg     0x435460
  435479:	mov    ebp,DWORD PTR [rdx+0xc]
  43547c:	add    rbp,rdi
  43547f:	mov    rax,rbp
  435482:	add    rsp,0x28
  435486:	pop    rbx
  435487:	pop    rsi
  435488:	pop    rdi
  435489:	pop    rbp
  43548a:	ret    
  43548b:	nop    DWORD PTR [rax+rax*1+0x0]
  435490:	xor    ebp,ebp
  435492:	mov    rax,rbp
  435495:	add    rsp,0x28
  435499:	pop    rbx
  43549a:	pop    rsi
  43549b:	pop    rdi
  43549c:	pop    rbp
  43549d:	ret    
  43549e:	nop
  43549f:	nop
  4354a0:	push   rcx
  4354a1:	push   rax
  4354a2:	cmp    rax,0x1000
  4354a8:	lea    rcx,[rsp+0x18]
  4354ad:	jb     0x4354c8
  4354af:	sub    rcx,0x1000
  4354b6:	or     QWORD PTR [rcx],0x0
  4354ba:	sub    rax,0x1000
  4354c0:	cmp    rax,0x1000
  4354c6:	ja     0x4354af
  4354c8:	sub    rcx,rax
  4354cb:	or     QWORD PTR [rcx],0x0
  4354cf:	pop    rax
  4354d0:	pop    rcx
  4354d1:	ret    
  4354d2:	nop
  4354d3:	nop
  4354d4:	nop
  4354d5:	nop
  4354d6:	nop
  4354d7:	nop
  4354d8:	nop
  4354d9:	nop
  4354da:	nop
  4354db:	nop
  4354dc:	nop
  4354dd:	nop
  4354de:	nop
  4354df:	nop
  4354e0:	sub    rsp,0x48
  4354e4:	mov    eax,0xffffffff
  4354e9:	cmp    ecx,0xffffffff
  4354ec:	je     0x43552b
  4354ee:	mov    BYTE PTR [rsp+0x3d],cl
  4354f2:	mov    WORD PTR [rsp+0x3e],ax
  4354f7:	call   0x43a888
  4354fc:	lea    rdx,[rsp+0x3e]
  435501:	mov    DWORD PTR [rsp+0x28],0x1
  435509:	mov    r9d,0x1
  43550f:	lea    r8,[rsp+0x3d]
  435514:	mov    ecx,eax
  435516:	mov    QWORD PTR [rsp+0x20],rdx
  43551b:	mov    edx,0x8
  435520:	call   QWORD PTR [rip+0x1f2d2]        # 0x4547f8
  435526:	movzx  eax,WORD PTR [rsp+0x3e]
  43552b:	add    rsp,0x48
  43552f:	ret    
  435530:	push   rbx
  435531:	sub    rsp,0x20
  435535:	mov    edx,0x40
  43553a:	mov    ebx,ecx
  43553c:	call   0x43a808
  435541:	test   eax,eax
  435543:	setne  dl
  435546:	cmp    ebx,0x9
  435549:	sete   al
  43554c:	or     eax,edx
  43554e:	movzx  eax,al
  435551:	add    rsp,0x20
  435555:	pop    rbx
  435556:	ret    
  435557:	nop
  435558:	nop
  435559:	nop
  43555a:	nop
  43555b:	nop
  43555c:	nop
  43555d:	nop
  43555e:	nop
  43555f:	nop
  435560:	push   rbp
  435561:	push   rdi
  435562:	push   rsi
  435563:	push   rbx
  435564:	sub    rsp,0x48
  435568:	test   rdx,rdx
  43556b:	je     0x435693
  435571:	test   r8,r8
  435574:	je     0x4356a0
  43557a:	mov    eax,DWORD PTR [r9]
  43557d:	mov    DWORD PTR [r9],0x0
  435584:	mov    DWORD PTR [rsp+0x30],eax
  435588:	movzx  eax,BYTE PTR [rdx]
  43558b:	test   al,al
  43558d:	je     0x435630
  435593:	cmp    DWORD PTR [rsp+0x98],0x1
  43559b:	mov    rsi,r9
  43559e:	mov    rdi,r8
  4355a1:	mov    rbx,rdx
  4355a4:	mov    rbp,rcx
  4355a7:	jbe    0x435610
  4355a9:	cmp    BYTE PTR [rsp+0x30],0x0
  4355ae:	jne    0x435640
  4355b4:	movzx  edx,al
  4355b7:	mov    ecx,DWORD PTR [rsp+0x90]
  4355be:	call   QWORD PTR [rip+0x1f224]        # 0x4547e8
  4355c4:	test   eax,eax
  4355c6:	je     0x435610
  4355c8:	cmp    rdi,0x1
  4355cc:	jbe    0x4356bc
  4355d2:	mov    DWORD PTR [rsp+0x28],0x1
  4355da:	mov    QWORD PTR [rsp+0x20],rbp
  4355df:	mov    r9d,0x2
  4355e5:	mov    r8,rbx
  4355e8:	mov    edx,0x8
  4355ed:	mov    ecx,DWORD PTR [rsp+0x90]
  4355f4:	call   QWORD PTR [rip+0x1f1fe]        # 0x4547f8
  4355fa:	test   eax,eax
  4355fc:	je     0x4356a7
  435602:	mov    eax,0x2
  435607:	add    rsp,0x48
  43560b:	pop    rbx
  43560c:	pop    rsi
  43560d:	pop    rdi
  43560e:	pop    rbp
  43560f:	ret    
  435610:	mov    eax,DWORD PTR [rsp+0x90]
  435617:	test   eax,eax
  435619:	jne    0x435660
  43561b:	movzx  eax,BYTE PTR [rbx]
  43561e:	mov    WORD PTR [rbp+0x0],ax
  435622:	mov    eax,0x1
  435627:	add    rsp,0x48
  43562b:	pop    rbx
  43562c:	pop    rsi
  43562d:	pop    rdi
  43562e:	pop    rbp
  43562f:	ret    
  435630:	xor    edx,edx
  435632:	xor    eax,eax
  435634:	mov    WORD PTR [rcx],dx
  435637:	add    rsp,0x48
  43563b:	pop    rbx
  43563c:	pop    rsi
  43563d:	pop    rdi
  43563e:	pop    rbp
  43563f:	ret    
  435640:	mov    BYTE PTR [rsp+0x31],al
  435644:	mov    DWORD PTR [rsp+0x28],0x1
  43564c:	mov    r9d,0x2
  435652:	mov    QWORD PTR [rsp+0x20],rcx
  435657:	lea    r8,[rsp+0x30]
  43565c:	jmp    0x4355e8
  43565e:	xchg   ax,ax
  435660:	mov    DWORD PTR [rsp+0x28],0x1
  435668:	mov    QWORD PTR [rsp+0x20],rbp
  43566d:	mov    r9d,0x1
  435673:	mov    r8,rbx
  435676:	mov    edx,0x8
  43567b:	mov    ecx,DWORD PTR [rsp+0x90]
  435682:	call   QWORD PTR [rip+0x1f170]        # 0x4547f8
  435688:	test   eax,eax
  43568a:	je     0x4356a7
  43568c:	mov    eax,0x1
  435691:	jmp    0x435637
  435693:	xor    eax,eax
  435695:	add    rsp,0x48
  435699:	pop    rbx
  43569a:	pop    rsi
  43569b:	pop    rdi
  43569c:	pop    rbp
  43569d:	ret    
  43569e:	xchg   ax,ax
  4356a0:	mov    eax,0xfffffffe
  4356a5:	jmp    0x435637
  4356a7:	call   0x43a830
  4356ac:	mov    DWORD PTR [rax],0x2a
  4356b2:	mov    eax,0xffffffff
  4356b7:	jmp    0x435637
  4356bc:	movzx  eax,BYTE PTR [rbx]
  4356bf:	mov    BYTE PTR [rsi],al
  4356c1:	mov    eax,0xfffffffe
  4356c6:	jmp    0x435637
  4356cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4356d0:	push   rbp
  4356d1:	push   rdi
  4356d2:	push   rsi
  4356d3:	push   rbx
  4356d4:	sub    rsp,0x58
  4356d8:	xor    eax,eax
  4356da:	mov    WORD PTR [rsp+0x4e],ax
  4356df:	lea    rax,[rsp+0x4e]
  4356e4:	test   rcx,rcx
  4356e7:	mov    rbx,rcx
  4356ea:	mov    rsi,r9
  4356ed:	mov    rdi,rdx
  4356f0:	cmove  rbx,rax
  4356f4:	mov    rax,QWORD PTR [rip+0x13fc5]        # 0x4496c0
  4356fb:	mov    QWORD PTR [rsp+0x38],r8
  435700:	mov    rax,QWORD PTR [rax]
  435703:	mov    ebp,DWORD PTR [rax]
  435705:	call   0x43a888
  43570a:	mov    r8,QWORD PTR [rsp+0x38]
  43570f:	lea    r9,[rip+0x1d662]        # 0x452d78
  435716:	test   rsi,rsi
  435719:	mov    DWORD PTR [rsp+0x28],ebp
  43571d:	mov    DWORD PTR [rsp+0x20],eax
  435721:	mov    rdx,rdi
  435724:	cmovne r9,rsi
  435728:	mov    rcx,rbx
  43572b:	call   0x435560
  435730:	cdqe   
  435732:	add    rsp,0x58
  435736:	pop    rbx
  435737:	pop    rsi
  435738:	pop    rdi
  435739:	pop    rbp
  43573a:	ret    
  43573b:	nop    DWORD PTR [rax+rax*1+0x0]
  435740:	push   r15
  435742:	push   r14
  435744:	push   r13
  435746:	push   r12
  435748:	push   rbp
  435749:	push   rdi
  43574a:	push   rsi
  43574b:	push   rbx
  43574c:	sub    rsp,0x48
  435750:	lea    rax,[rip+0x1d61d]        # 0x452d74
  435757:	test   r9,r9
  43575a:	mov    rdi,r9
  43575d:	mov    r13,rdx
  435760:	cmove  rdi,rax
  435764:	mov    r14,rcx
  435767:	mov    rsi,r8
  43576a:	call   0x43a888
  43576f:	mov    r12d,eax
  435772:	mov    rax,QWORD PTR [rip+0x13f47]        # 0x4496c0
  435779:	test   r13,r13
  43577c:	mov    rax,QWORD PTR [rax]
  43577f:	mov    ebp,DWORD PTR [rax]
  435781:	je     0x435805
  435787:	mov    rdx,QWORD PTR [r13+0x0]
  43578b:	test   rdx,rdx
  43578e:	je     0x435805
  435790:	test   r14,r14
  435793:	je     0x435810
  435795:	xor    ebx,ebx
  435797:	test   rsi,rsi
  43579a:	jne    0x4357ba
  43579c:	jmp    0x435805
  43579e:	xchg   ax,ax
  4357a0:	movsxd r10,eax
  4357a3:	add    r14,0x2
  4357a7:	mov    rdx,r10
  4357aa:	add    rdx,QWORD PTR [r13+0x0]
  4357ae:	add    rbx,r10
  4357b1:	cmp    rsi,rbx
  4357b4:	mov    QWORD PTR [r13+0x0],rdx
  4357b8:	jbe    0x435800
  4357ba:	mov    r8,rsi
  4357bd:	mov    DWORD PTR [rsp+0x28],ebp
  4357c1:	mov    DWORD PTR [rsp+0x20],r12d
  4357c6:	sub    r8,rbx
  4357c9:	mov    r9,rdi
  4357cc:	mov    rcx,r14
  4357cf:	call   0x435560
  4357d4:	cmp    eax,0x0
  4357d7:	jg     0x4357a0
  4357d9:	jne    0x435800
  4357db:	cmp    rbx,rsi
  4357de:	jae    0x435800
  4357e0:	mov    QWORD PTR [r13+0x0],0x0
  4357e8:	mov    rax,rbx
  4357eb:	add    rsp,0x48
  4357ef:	pop    rbx
  4357f0:	pop    rsi
  4357f1:	pop    rdi
  4357f2:	pop    rbp
  4357f3:	pop    r12
  4357f5:	pop    r13
  4357f7:	pop    r14
  4357f9:	pop    r15
  4357fb:	ret    
  4357fc:	xor    ebx,ebx
  4357fe:	xchg   ax,ax
  435800:	mov    rax,rbx
  435803:	jmp    0x4357eb
  435805:	xor    eax,eax
  435807:	jmp    0x4357eb
  435809:	nop    DWORD PTR [rax+0x0]
  435810:	xor    eax,eax
  435812:	test   rsi,rsi
  435815:	mov    WORD PTR [rsp+0x3e],ax
  43581a:	je     0x4357fc
  43581c:	mov    r15d,ebp
  43581f:	xor    ebx,ebx
  435821:	lea    r14,[rsp+0x3e]
  435826:	jmp    0x435845
  435828:	nop    DWORD PTR [rax+rax*1+0x0]
  435830:	cdqe   
  435832:	mov    rdx,rax
  435835:	add    rdx,QWORD PTR [r13+0x0]
  435839:	add    rbx,rax
  43583c:	cmp    rsi,rbx
  43583f:	mov    QWORD PTR [r13+0x0],rdx
  435843:	jbe    0x435800
  435845:	mov    DWORD PTR [rsp+0x28],ebp
  435849:	mov    DWORD PTR [rsp+0x20],r12d
  43584e:	mov    r9,rdi
  435851:	mov    r8,r15
  435854:	mov    rcx,r14
  435857:	call   0x435560
  43585c:	test   eax,eax
  43585e:	jg     0x435830
  435860:	jmp    0x435800
  435862:	nop    DWORD PTR [rax+0x0]
  435866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435870:	push   rbp
  435871:	push   rdi
  435872:	push   rsi
  435873:	push   rbx
  435874:	sub    rsp,0x48
  435878:	xor    eax,eax
  43587a:	mov    WORD PTR [rsp+0x3e],ax
  43587f:	mov    rax,QWORD PTR [rip+0x13e3a]        # 0x4496c0
  435886:	mov    rbx,r8
  435889:	mov    rsi,rcx
  43588c:	mov    rdi,rdx
  43588f:	mov    rax,QWORD PTR [rax]
  435892:	mov    ebp,DWORD PTR [rax]
  435894:	call   0x43a888
  435899:	lea    r9,[rip+0x1d4d0]        # 0x452d70
  4358a0:	test   rbx,rbx
  4358a3:	lea    rcx,[rsp+0x3e]
  4358a8:	mov    DWORD PTR [rsp+0x28],ebp
  4358ac:	mov    DWORD PTR [rsp+0x20],eax
  4358b0:	mov    r8,rdi
  4358b3:	cmovne r9,rbx
  4358b7:	mov    rdx,rsi
  4358ba:	call   0x435560
  4358bf:	cdqe   
  4358c1:	add    rsp,0x48
  4358c5:	pop    rbx
  4358c6:	pop    rsi
  4358c7:	pop    rdi
  4358c8:	pop    rbp
  4358c9:	ret    
  4358ca:	nop
  4358cb:	nop
  4358cc:	nop
  4358cd:	nop
  4358ce:	nop
  4358cf:	nop
  4358d0:	push   r12
  4358d2:	push   rbp
  4358d3:	push   rdi
  4358d4:	push   rsi
  4358d5:	push   rbx
  4358d6:	sub    rsp,0x250
  4358dd:	mov    rbx,rdx
  4358e0:	mov    rsi,rcx
  4358e3:	mov    ecx,0x4000
  4358e8:	mov    r12d,r8d
  4358eb:	call   0x43a6c8
  4358f0:	test   rbx,rbx
  4358f3:	mov    rbp,rax
  4358f6:	je     0x4359c0
  4358fc:	cmp    WORD PTR [rbx],0x0
  435900:	lea    rax,[rip+0x136c9]        # 0x448fd0
  435907:	cmove  rbx,rax
  43590b:	test   rsi,rsi
  43590e:	je     0x4359b1
  435914:	cmp    WORD PTR [rsi],0x0
  435918:	lea    rax,[rip+0x136c5]        # 0x448fe4
  43591f:	cmove  rsi,rax
  435923:	lea    rdi,[rsp+0x40]
  435928:	xor    ecx,ecx
  43592a:	mov    r8d,0x104
  435930:	mov    rdx,rdi
  435933:	call   QWORD PTR [rip+0x1ee67]        # 0x4547a0
  435939:	test   eax,eax
  43593b:	je     0x4359a0
  43593d:	lea    r8,[rip+0x136a4]        # 0x448fe8
  435944:	mov    QWORD PTR [rsp+0x30],rsi
  435949:	mov    DWORD PTR [rsp+0x28],r12d
  43594e:	mov    QWORD PTR [rsp+0x20],rbx
  435953:	mov    r9,rdi
  435956:	mov    edx,0x1fff
  43595b:	mov    rcx,rbp
  43595e:	call   0x43a7d8
  435963:	mov    rax,QWORD PTR [rip+0x14076]        # 0x4499e0
  43596a:	mov    eax,DWORD PTR [rax]
  43596c:	test   eax,eax
  43596e:	je     0x4359e5
  435970:	xor    ecx,ecx
  435972:	mov    r9d,0x12012
  435978:	lea    r8,[rip+0x13701]        # 0x449080
  43597f:	mov    rdx,rbp
  435982:	call   QWORD PTR [rip+0x1f318]        # 0x454ca0
  435988:	cmp    eax,0x3
  43598b:	je     0x4359d1
  43598d:	cmp    eax,0x5
  435990:	jne    0x4359cc
  435992:	add    rsp,0x250
  435999:	pop    rbx
  43599a:	pop    rsi
  43599b:	pop    rdi
  43599c:	pop    rbp
  43599d:	pop    r12
  43599f:	ret    
  4359a0:	lea    rdx,[rip+0x13629]        # 0x448fd0
  4359a7:	mov    rcx,rdi
  4359aa:	call   0x43a5c0
  4359af:	jmp    0x43593d
  4359b1:	lea    rsi,[rip+0x1362c]        # 0x448fe4
  4359b8:	jmp    0x435923
  4359bd:	nop    DWORD PTR [rax]
  4359c0:	lea    rbx,[rip+0x13609]        # 0x448fd0
  4359c7:	jmp    0x43590b
  4359cc:	call   0x43a7b0
  4359d1:	mov    ecx,0x16
  4359d6:	call   0x43a688
  4359db:	mov    ecx,0x3
  4359e0:	call   0x43a828
  4359e5:	call   0x43a870
  4359ea:	lea    rdx,[rip+0x1367f]        # 0x449070
  4359f1:	lea    rcx,[rax+0x60]
  4359f5:	mov    r8,rbp
  4359f8:	call   0x43a740
  4359fd:	call   0x43a7b0
  435a02:	nop
  435a03:	nop    DWORD PTR [rax]
  435a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435a10:	push   rbp
  435a11:	push   rdi
  435a12:	push   rsi
  435a13:	push   rbx
  435a14:	sub    rsp,0x38
  435a18:	mov    rdi,rdx
  435a1b:	mov    DWORD PTR [rsp+0x2c],r8d
  435a20:	mov    rbp,rcx
  435a23:	call   0x43a620
  435a28:	lea    rcx,[rax+rax*1+0x2]
  435a2d:	call   0x43a6c8
  435a32:	mov    rcx,rdi
  435a35:	mov    rsi,rax
  435a38:	call   0x43a620
  435a3d:	lea    rcx,[rax+rax*1+0x2]
  435a42:	call   0x43a6c8
  435a47:	movzx  r9d,BYTE PTR [rbp+0x0]
  435a4c:	xor    r10d,r10d
  435a4f:	mov    rbx,rax
  435a52:	mov    r8d,DWORD PTR [rsp+0x2c]
  435a57:	test   r9b,r9b
  435a5a:	je     0x435a77
  435a5c:	nop    DWORD PTR [rax+0x0]
  435a60:	mov    WORD PTR [rsi+r10*2],r9w
  435a65:	add    r10,0x1
  435a69:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  435a6f:	test   r9b,r9b
  435a72:	jne    0x435a60
  435a74:	add    r10,r10
  435a77:	movzx  r9d,BYTE PTR [rdi]
  435a7b:	xor    edx,edx
  435a7d:	mov    WORD PTR [rsi+r10*1],dx
  435a82:	xor    r10d,r10d
  435a85:	test   r9b,r9b
  435a88:	je     0x435aa6
  435a8a:	nop    WORD PTR [rax+rax*1+0x0]
  435a90:	mov    WORD PTR [rbx+r10*2],r9w
  435a95:	add    r10,0x1
  435a99:	movzx  r9d,BYTE PTR [rdi+r10*1]
  435a9e:	test   r9b,r9b
  435aa1:	jne    0x435a90
  435aa3:	add    r10,r10
  435aa6:	xor    eax,eax
  435aa8:	mov    rdx,rbx
  435aab:	mov    rcx,rsi
  435aae:	mov    WORD PTR [rbx+r10*1],ax
  435ab3:	call   0x4358d0
  435ab8:	mov    rcx,rsi
  435abb:	call   0x43a748
  435ac0:	mov    rcx,rbx
  435ac3:	add    rsp,0x38
  435ac7:	pop    rbx
  435ac8:	pop    rsi
  435ac9:	pop    rdi
  435aca:	pop    rbp
  435acb:	jmp    0x43a748
  435ad0:	sub    rsp,0x58
  435ad4:	test   r8d,r8d
  435ad7:	mov    eax,r8d
  435ada:	mov    WORD PTR [rsp+0x68],dx
  435adf:	jne    0x435af4
  435ae1:	cmp    dx,0xff
  435ae6:	ja     0x435b3a
  435ae8:	mov    BYTE PTR [rcx],dl
  435aea:	mov    eax,0x1
  435aef:	add    rsp,0x58
  435af3:	ret    
  435af4:	lea    rdx,[rsp+0x4c]
  435af9:	mov    DWORD PTR [rsp+0x28],r9d
  435afe:	mov    QWORD PTR [rsp+0x20],rcx
  435b03:	mov    DWORD PTR [rsp+0x4c],0x0
  435b0b:	mov    QWORD PTR [rsp+0x30],0x0
  435b14:	mov    r9d,0x1
  435b1a:	mov    QWORD PTR [rsp+0x38],rdx
  435b1f:	lea    r8,[rsp+0x68]
  435b24:	xor    edx,edx
  435b26:	mov    ecx,eax
  435b28:	call   QWORD PTR [rip+0x1ed7a]        # 0x4548a8
  435b2e:	test   eax,eax
  435b30:	je     0x435b3a
  435b32:	mov    edx,DWORD PTR [rsp+0x4c]
  435b36:	test   edx,edx
  435b38:	je     0x435aef
  435b3a:	call   0x43a830
  435b3f:	mov    DWORD PTR [rax],0x2a
  435b45:	mov    eax,0xffffffff
  435b4a:	add    rsp,0x58
  435b4e:	ret    
  435b4f:	nop
  435b50:	push   rdi
  435b51:	push   rsi
  435b52:	push   rbx
  435b53:	sub    rsp,0x30
  435b57:	lea    rax,[rsp+0x20]
  435b5c:	test   rcx,rcx
  435b5f:	mov    rbx,rcx
  435b62:	mov    esi,edx
  435b64:	cmove  rbx,rax
  435b68:	mov    rax,QWORD PTR [rip+0x13b51]        # 0x4496c0
  435b6f:	mov    rax,QWORD PTR [rax]
  435b72:	mov    edi,DWORD PTR [rax]
  435b74:	call   0x43a888
  435b79:	movzx  edx,si
  435b7c:	mov    r8d,eax
  435b7f:	mov    rcx,rbx
  435b82:	mov    r9d,edi
  435b85:	call   0x435ad0
  435b8a:	cdqe   
  435b8c:	add    rsp,0x30
  435b90:	pop    rbx
  435b91:	pop    rsi
  435b92:	pop    rdi
  435b93:	ret    
  435b94:	xchg   ax,ax
  435b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435ba0:	push   r14
  435ba2:	push   r13
  435ba4:	push   r12
  435ba6:	push   rbp
  435ba7:	push   rdi
  435ba8:	push   rsi
  435ba9:	push   rbx
  435baa:	sub    rsp,0x30
  435bae:	mov    r13,rdx
  435bb1:	mov    rbx,rcx
  435bb4:	mov    rdi,r8
  435bb7:	call   0x43a888
  435bbc:	mov    ebp,eax
  435bbe:	mov    rax,QWORD PTR [rip+0x13afb]        # 0x4496c0
  435bc5:	mov    r14,QWORD PTR [r13+0x0]
  435bc9:	mov    rax,QWORD PTR [rax]
  435bcc:	test   r14,r14
  435bcf:	mov    r12d,DWORD PTR [rax]
  435bd2:	je     0x435cc0
  435bd8:	xor    esi,esi
  435bda:	test   rbx,rbx
  435bdd:	je     0x435c70
  435be3:	test   rdi,rdi
  435be6:	jne    0x435c08
  435be8:	jmp    0x435c34
  435bea:	nop    WORD PTR [rax+rax*1+0x0]
  435bf0:	movsxd r10,eax
  435bf3:	add    rbx,r10
  435bf6:	add    rsi,r10
  435bf9:	cmp    BYTE PTR [rbx-0x1],0x0
  435bfd:	je     0x435c50
  435bff:	add    r14,0x2
  435c03:	cmp    rdi,rsi
  435c06:	jbe    0x435c34
  435c08:	movzx  edx,WORD PTR [r14]
  435c0c:	mov    r9d,r12d
  435c0f:	mov    r8d,ebp
  435c12:	mov    rcx,rbx
  435c15:	call   0x435ad0
  435c1a:	test   eax,eax
  435c1c:	jg     0x435bf0
  435c1e:	mov    rax,0xffffffffffffffff
  435c25:	add    rsp,0x30
  435c29:	pop    rbx
  435c2a:	pop    rsi
  435c2b:	pop    rdi
  435c2c:	pop    rbp
  435c2d:	pop    r12
  435c2f:	pop    r13
  435c31:	pop    r14
  435c33:	ret    
  435c34:	mov    rax,rsi
  435c37:	mov    QWORD PTR [r13+0x0],r14
  435c3b:	add    rsp,0x30
  435c3f:	pop    rbx
  435c40:	pop    rsi
  435c41:	pop    rdi
  435c42:	pop    rbp
  435c43:	pop    r12
  435c45:	pop    r13
  435c47:	pop    r14
  435c49:	ret    
  435c4a:	nop    WORD PTR [rax+rax*1+0x0]
  435c50:	lea    rax,[rsi-0x1]
  435c54:	mov    QWORD PTR [r13+0x0],0x0
  435c5c:	add    rsp,0x30
  435c60:	pop    rbx
  435c61:	pop    rsi
  435c62:	pop    rdi
  435c63:	pop    rbp
  435c64:	pop    r12
  435c66:	pop    r13
  435c68:	pop    r14
  435c6a:	ret    
  435c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  435c70:	test   rdi,rdi
  435c73:	lea    rbx,[rsp+0x20]
  435c78:	jne    0x435c9b
  435c7a:	jmp    0x435cd1
  435c7c:	nop    DWORD PTR [rax+0x0]
  435c80:	movsxd rdx,eax
  435c83:	sub    eax,0x1
  435c86:	cdqe   
  435c88:	add    rsi,rdx
  435c8b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  435c90:	je     0x435cd9
  435c92:	add    r14,0x2
  435c96:	cmp    rdi,rsi
  435c99:	jbe    0x435cd1
  435c9b:	movzx  edx,WORD PTR [r14]
  435c9f:	mov    r9d,r12d
  435ca2:	mov    r8d,ebp
  435ca5:	mov    rcx,rbx
  435ca8:	call   0x435ad0
  435cad:	test   eax,eax
  435caf:	jg     0x435c80
  435cb1:	jmp    0x435c1e
  435cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435cc0:	xor    eax,eax
  435cc2:	add    rsp,0x30
  435cc6:	pop    rbx
  435cc7:	pop    rsi
  435cc8:	pop    rdi
  435cc9:	pop    rbp
  435cca:	pop    r12
  435ccc:	pop    r13
  435cce:	pop    r14
  435cd0:	ret    
  435cd1:	mov    rax,rsi
  435cd4:	jmp    0x435c25
  435cd9:	lea    rax,[rsi-0x1]
  435cdd:	jmp    0x435c25
  435ce2:	nop
  435ce3:	nop
  435ce4:	nop
  435ce5:	nop
  435ce6:	nop
  435ce7:	nop
  435ce8:	nop
  435ce9:	nop
  435cea:	nop
  435ceb:	nop
  435cec:	nop
  435ced:	nop
  435cee:	nop
  435cef:	nop
  435cf0:	push   rbp
  435cf1:	push   rdi
  435cf2:	push   rsi
  435cf3:	push   rbx
  435cf4:	sub    rsp,0x28
  435cf8:	lea    rbp,[rip+0x13441]        # 0x449140
  435cff:	xor    ebx,ebx
  435d01:	mov    rdi,rcx
  435d04:	mov    rsi,rbp
  435d07:	nop    WORD PTR [rax+rax*1+0x0]
  435d10:	mov    rdx,QWORD PTR [rsi]
  435d13:	mov    rcx,rdi
  435d16:	call   0x43a648
  435d1b:	test   eax,eax
  435d1d:	je     0x435d40
  435d1f:	add    ebx,0x1
  435d22:	add    rsi,0x10
  435d26:	cmp    ebx,0xb
  435d29:	jne    0x435d10
  435d2b:	xor    eax,eax
  435d2d:	add    rsp,0x28
  435d31:	pop    rbx
  435d32:	pop    rsi
  435d33:	pop    rdi
  435d34:	pop    rbp
  435d35:	ret    
  435d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435d40:	movsxd rbx,ebx
  435d43:	shl    rbx,0x4
  435d47:	movzx  eax,WORD PTR [rbp+rbx*1+0x8]
  435d4c:	add    rsp,0x28
  435d50:	pop    rbx
  435d51:	pop    rsi
  435d52:	pop    rdi
  435d53:	pop    rbp
  435d54:	ret    
  435d55:	nop
  435d56:	nop
  435d57:	nop
  435d58:	nop
  435d59:	nop
  435d5a:	nop
  435d5b:	nop
  435d5c:	nop
  435d5d:	nop
  435d5e:	nop
  435d5f:	nop
  435d60:	push   r12
  435d62:	push   rbp
  435d63:	push   rdi
  435d64:	push   rsi
  435d65:	push   rbx
  435d66:	sub    rsp,0x60
  435d6a:	test   rcx,rcx
  435d6d:	mov    rsi,rcx
  435d70:	mov    rbx,rdx
  435d73:	je     0x435dc2
  435d75:	movzx  ebp,BYTE PTR [rcx]
  435d78:	test   bpl,bpl
  435d7b:	je     0x435dc2
  435d7d:	call   0x43a620
  435d82:	cmp    eax,0x1
  435d85:	mov    rdi,rax
  435d88:	jle    0x435dc2
  435d8a:	lea    eax,[rax-0x2]
  435d8d:	cmp    eax,0x1
  435d90:	jbe    0x435f20
  435d96:	cmp    bpl,0x2f
  435d9a:	je     0x435e44
  435da0:	cmp    bpl,0x5c
  435da4:	je     0x435e44
  435daa:	movsxd rbp,edi
  435dad:	movzx  eax,BYTE PTR [rsi+rbp*1-0x1]
  435db2:	cmp    al,0x5c
  435db4:	je     0x435ed0
  435dba:	cmp    al,0x2f
  435dbc:	je     0x435ed0
  435dc2:	lea    rdx,[rsp+0x20]
  435dc7:	mov    rcx,rsi
  435dca:	call   0x43a5b0
  435dcf:	mov    ebp,eax
  435dd1:	cmp    ebp,0xffffffff
  435dd4:	je     0x435f50
  435dda:	mov    eax,DWORD PTR [rsp+0x20]
  435dde:	mov    DWORD PTR [rbx],eax
  435de0:	movzx  eax,WORD PTR [rsp+0x24]
  435de5:	mov    WORD PTR [rbx+0x4],ax
  435de9:	movzx  eax,WORD PTR [rsp+0x26]
  435dee:	mov    WORD PTR [rbx+0x6],ax
  435df2:	movzx  eax,WORD PTR [rsp+0x28]
  435df7:	mov    WORD PTR [rbx+0x8],ax
  435dfb:	movzx  eax,WORD PTR [rsp+0x2a]
  435e00:	mov    WORD PTR [rbx+0xa],ax
  435e04:	movzx  eax,WORD PTR [rsp+0x2c]
  435e09:	mov    WORD PTR [rbx+0xc],ax
  435e0d:	mov    eax,DWORD PTR [rsp+0x30]
  435e11:	mov    DWORD PTR [rbx+0x10],eax
  435e14:	mov    rax,QWORD PTR [rsp+0x38]
  435e19:	mov    DWORD PTR [rbx+0x14],eax
  435e1c:	mov    rax,QWORD PTR [rsp+0x40]
  435e21:	mov    QWORD PTR [rbx+0x18],rax
  435e25:	mov    rax,QWORD PTR [rsp+0x48]
  435e2a:	mov    QWORD PTR [rbx+0x20],rax
  435e2e:	mov    rax,QWORD PTR [rsp+0x50]
  435e33:	mov    QWORD PTR [rbx+0x28],rax
  435e37:	mov    eax,ebp
  435e39:	add    rsp,0x60
  435e3d:	pop    rbx
  435e3e:	pop    rsi
  435e3f:	pop    rdi
  435e40:	pop    rbp
  435e41:	pop    r12
  435e43:	ret    
  435e44:	movzx  eax,BYTE PTR [rsi+0x1]
  435e48:	cmp    al,0x2f
  435e4a:	je     0x435e54
  435e4c:	cmp    al,0x5c
  435e4e:	jne    0x435daa
  435e54:	movzx  ecx,BYTE PTR [rsi+0x2]
  435e58:	lea    rdx,[rsi+0x2]
  435e5c:	cmp    cl,0x5c
  435e5f:	jne    0x435e80
  435e61:	jmp    0x435f30
  435e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435e70:	add    rdx,0x1
  435e74:	movzx  ecx,BYTE PTR [rdx]
  435e77:	cmp    cl,0x5c
  435e7a:	je     0x435f30
  435e80:	test   cl,cl
  435e82:	je     0x435f30
  435e88:	cmp    cl,0x2f
  435e8b:	jne    0x435e70
  435e8d:	add    rdx,0x1
  435e91:	movzx  eax,BYTE PTR [rdx]
  435e94:	test   al,al
  435e96:	je     0x435dc2
  435e9c:	cmp    al,0x5c
  435e9e:	je     0x435ec1
  435ea0:	cmp    al,0x2f
  435ea2:	je     0x435ec1
  435ea4:	add    rdx,0x1
  435ea8:	movzx  ecx,BYTE PTR [rdx]
  435eab:	cmp    cl,0x5c
  435eae:	je     0x435f40
  435eb4:	test   cl,cl
  435eb6:	je     0x435f40
  435ebc:	cmp    cl,0x2f
  435ebf:	jne    0x435ea4
  435ec1:	cmp    BYTE PTR [rdx+0x1],0x0
  435ec5:	jne    0x435daa
  435ecb:	jmp    0x435dc2
  435ed0:	mov    rcx,rbp
  435ed3:	call   0x43a6c8
  435ed8:	lea    r8d,[rdi-0x1]
  435edc:	mov    rdx,rsi
  435edf:	mov    rcx,rax
  435ee2:	mov    r12,rax
  435ee5:	movsxd r8,r8d
  435ee8:	call   0x43a6b8
  435eed:	lea    rdx,[rsp+0x20]
  435ef2:	mov    rcx,r12
  435ef5:	mov    BYTE PTR [r12+rbp*1-0x1],0x0
  435efb:	call   0x43a5b0
  435f00:	cmp    rsi,r12
  435f03:	mov    ebp,eax
  435f05:	je     0x435dd1
  435f0b:	mov    rcx,r12
  435f0e:	call   0x43a748
  435f13:	jmp    0x435dd1
  435f18:	nop    DWORD PTR [rax+rax*1+0x0]
  435f20:	cmp    BYTE PTR [rsi+0x1],0x3a
  435f24:	jne    0x435d96
  435f2a:	jmp    0x435dc2
  435f2f:	nop
  435f30:	test   cl,cl
  435f32:	je     0x435e91
  435f38:	jmp    0x435e8d
  435f3d:	nop    DWORD PTR [rax]
  435f40:	test   cl,cl
  435f42:	je     0x435dc2
  435f48:	jmp    0x435ec1
  435f4d:	nop    DWORD PTR [rax]
  435f50:	lea    rdi,[rbx+0x8]
  435f54:	mov    QWORD PTR [rbx],0x0
  435f5b:	mov    QWORD PTR [rbx+0x28],0x0
  435f63:	xor    eax,eax
  435f65:	and    rdi,0xfffffffffffffff8
  435f69:	sub    rbx,rdi
  435f6c:	lea    ecx,[rbx+0x30]
  435f6f:	shr    ecx,0x3
  435f72:	rep stos QWORD PTR es:[rdi],rax
  435f75:	jmp    0x435e37
  435f7a:	nop
  435f7b:	nop
  435f7c:	nop
  435f7d:	nop
  435f7e:	nop
  435f7f:	nop
  435f80:	push   rbx
  435f81:	sub    rsp,0x30
  435f85:	mov    rbx,rcx
  435f88:	mov    r9,rdx
  435f8b:	mov    QWORD PTR [rsp+0x20],r8
  435f90:	mov    rdx,rcx
  435f93:	xor    r8d,r8d
  435f96:	mov    ecx,0x4000
  435f9b:	call   0x4377e0
  435fa0:	movsxd rdx,eax
  435fa3:	mov    BYTE PTR [rbx+rdx*1],0x0
  435fa7:	add    rsp,0x30
  435fab:	pop    rbx
  435fac:	ret    
  435fad:	nop
  435fae:	nop
  435faf:	nop
  435fb0:	sub    rsp,0x58
  435fb4:	mov    rax,QWORD PTR [rdx]
  435fb7:	mov    r11,rdx
  435fba:	mov    edx,DWORD PTR [rdx+0x8]
  435fbd:	mov    r10,rdx
  435fc0:	and    r10w,0x7fff
  435fc6:	jne    0x435fe4
  435fc8:	mov    rdx,rax
  435fcb:	shr    rdx,0x20
  435fcf:	or     eax,edx
  435fd1:	jne    0x436050
  435fd3:	mov    DWORD PTR [rsp+0x44],0x0
  435fdb:	movzx  eax,WORD PTR [r11+0x8]
  435fe0:	xor    edx,edx
  435fe2:	jmp    0x43600b
  435fe4:	cmp    r10w,0x7fff
  435fea:	je     0x436070
  435ff0:	movzx  eax,WORD PTR [r11+0x8]
  435ff5:	mov    DWORD PTR [rsp+0x44],0x1
  435ffd:	mov    edx,eax
  435fff:	and    edx,0x7fff
  436005:	sub    edx,0x403e
  43600b:	and    eax,0x8000
  436010:	mov    r10,QWORD PTR [rsp+0x80]
  436018:	mov    DWORD PTR [r10],eax
  43601b:	lea    rax,[rsp+0x48]
  436020:	mov    QWORD PTR [rsp+0x30],r9
  436025:	mov    DWORD PTR [rsp+0x20],ecx
  436029:	lea    r9,[rsp+0x44]
  43602e:	lea    rcx,[rip+0xa0cb]        # 0x440100
  436035:	mov    DWORD PTR [rsp+0x28],r8d
  43603a:	mov    QWORD PTR [rsp+0x38],rax
  43603f:	mov    r8,r11
  436042:	call   0x438460
  436047:	add    rsp,0x58
  43604b:	ret    
  43604c:	nop    DWORD PTR [rax+0x0]
  436050:	test   edx,edx
  436052:	js     0x435ff0
  436054:	mov    DWORD PTR [rsp+0x44],0x2
  43605c:	movzx  eax,WORD PTR [r11+0x8]
  436061:	mov    edx,0xffffbfc3
  436066:	jmp    0x43600b
  436068:	nop    DWORD PTR [rax+rax*1+0x0]
  436070:	mov    rdx,rax
  436073:	shr    rdx,0x20
  436077:	and    edx,0x7fffffff
  43607d:	or     edx,eax
  43607f:	jne    0x436095
  436081:	mov    DWORD PTR [rsp+0x44],0x3
  436089:	movzx  eax,WORD PTR [r11+0x8]
  43608e:	xor    edx,edx
  436090:	jmp    0x43600b
  436095:	mov    DWORD PTR [rsp+0x44],0x4
  43609d:	xor    edx,edx
  43609f:	xor    eax,eax
  4360a1:	jmp    0x436010
  4360a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4360b0:	push   rbx
  4360b1:	sub    rsp,0x20
  4360b5:	mov    rbx,rdx
  4360b8:	mov    edx,DWORD PTR [rdx+0x8]
  4360bb:	test   dh,0x40
  4360be:	jne    0x4360c8
  4360c0:	mov    eax,DWORD PTR [rbx+0x24]
  4360c3:	cmp    DWORD PTR [rbx+0x28],eax
  4360c6:	jle    0x4360da
  4360c8:	and    dh,0x20
  4360cb:	jne    0x4360f0
  4360cd:	movsxd rax,DWORD PTR [rbx+0x24]
  4360d1:	mov    rdx,QWORD PTR [rbx]
  4360d4:	mov    BYTE PTR [rdx+rax*1],cl
  4360d7:	mov    eax,DWORD PTR [rbx+0x24]
  4360da:	add    eax,0x1
  4360dd:	mov    DWORD PTR [rbx+0x24],eax
  4360e0:	add    rsp,0x20
  4360e4:	pop    rbx
  4360e5:	ret    
  4360e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4360f0:	mov    rdx,QWORD PTR [rbx]
  4360f3:	call   0x43a760
  4360f8:	mov    eax,DWORD PTR [rbx+0x24]
  4360fb:	add    eax,0x1
  4360fe:	mov    DWORD PTR [rbx+0x24],eax
  436101:	add    rsp,0x20
  436105:	pop    rbx
  436106:	ret    
  436107:	nop    WORD PTR [rax+rax*1+0x0]
  436110:	push   r14
  436112:	push   r13
  436114:	push   r12
  436116:	push   rbp
  436117:	push   rdi
  436118:	push   rsi
  436119:	push   rbx
  43611a:	sub    rsp,0x40
  43611e:	lea    r14,[rsp+0x2c]
  436123:	lea    r13,[rsp+0x30]
  436128:	mov    ebx,edx
  43612a:	mov    rsi,r8
  43612d:	xor    edx,edx
  43612f:	mov    r12,rcx
  436132:	mov    r8,r14
  436135:	mov    rcx,r13
  436138:	call   0x435b50
  43613d:	mov    ebp,DWORD PTR [rsi+0x10]
  436140:	cmp    ebp,ebx
  436142:	jge    0x4361e9
  436148:	test   ebp,ebp
  43614a:	js     0x4361e9
  436150:	mov    eax,DWORD PTR [rsi+0xc]
  436153:	cmp    ebp,eax
  436155:	jge    0x4361f6
  43615b:	sub    eax,ebp
  43615d:	test   eax,eax
  43615f:	mov    DWORD PTR [rsi+0xc],eax
  436162:	jle    0x436170
  436164:	test   BYTE PTR [rsi+0x9],0x4
  436168:	je     0x436202
  43616e:	xchg   ax,ax
  436170:	test   ebp,ebp
  436172:	jle    0x4361cd
  436174:	add    r12,0x2
  436178:	movzx  edx,WORD PTR [r12-0x2]
  43617e:	mov    r8,r14
  436181:	mov    rcx,r13
  436184:	call   0x435b50
  436189:	test   eax,eax
  43618b:	jle    0x4361cd
  43618d:	sub    eax,0x1
  436190:	mov    rbx,r13
  436193:	lea    rdi,[r13+rax*1+0x1]
  436198:	nop    DWORD PTR [rax+rax*1+0x0]
  4361a0:	add    rbx,0x1
  4361a4:	movsx  ecx,BYTE PTR [rbx-0x1]
  4361a8:	mov    rdx,rsi
  4361ab:	call   0x4360b0
  4361b0:	cmp    rbx,rdi
  4361b3:	jne    0x4361a0
  4361b5:	sub    ebp,0x1
  4361b8:	jmp    0x436170
  4361ba:	nop    WORD PTR [rax+rax*1+0x0]
  4361c0:	mov    rdx,rsi
  4361c3:	mov    ecx,0x20
  4361c8:	call   0x4360b0
  4361cd:	mov    eax,DWORD PTR [rsi+0xc]
  4361d0:	lea    edx,[rax-0x1]
  4361d3:	test   eax,eax
  4361d5:	mov    DWORD PTR [rsi+0xc],edx
  4361d8:	jg     0x4361c0
  4361da:	add    rsp,0x40
  4361de:	pop    rbx
  4361df:	pop    rsi
  4361e0:	pop    rdi
  4361e1:	pop    rbp
  4361e2:	pop    r12
  4361e4:	pop    r13
  4361e6:	pop    r14
  4361e8:	ret    
  4361e9:	mov    eax,DWORD PTR [rsi+0xc]
  4361ec:	mov    ebp,ebx
  4361ee:	cmp    ebp,eax
  4361f0:	jl     0x43615b
  4361f6:	mov    DWORD PTR [rsi+0xc],0xffffffff
  4361fd:	jmp    0x436170
  436202:	sub    eax,0x1
  436205:	mov    DWORD PTR [rsi+0xc],eax
  436208:	nop    DWORD PTR [rax+rax*1+0x0]
  436210:	mov    rdx,rsi
  436213:	mov    ecx,0x20
  436218:	call   0x4360b0
  43621d:	mov    eax,DWORD PTR [rsi+0xc]
  436220:	lea    edx,[rax-0x1]
  436223:	test   eax,eax
  436225:	mov    DWORD PTR [rsi+0xc],edx
  436228:	jne    0x436210
  43622a:	jmp    0x436170
  43622f:	nop
  436230:	push   rdi
  436231:	push   rsi
  436232:	push   rbx
  436233:	sub    rsp,0x20
  436237:	mov    edi,DWORD PTR [r8+0x10]
  43623b:	mov    rsi,rcx
  43623e:	mov    rbx,r8
  436241:	cmp    edi,edx
  436243:	jge    0x4362c0
  436245:	test   edi,edi
  436247:	js     0x4362c0
  436249:	mov    eax,DWORD PTR [rbx+0xc]
  43624c:	cmp    edi,eax
  43624e:	jge    0x4362c9
  436250:	sub    eax,edi
  436252:	test   eax,eax
  436254:	mov    DWORD PTR [rbx+0xc],eax
  436257:	jle    0x436322
  43625d:	test   BYTE PTR [rbx+0x9],0x4
  436261:	jne    0x4362f0
  436267:	sub    eax,0x1
  43626a:	mov    DWORD PTR [rbx+0xc],eax
  43626d:	nop    DWORD PTR [rax]
  436270:	mov    rdx,rbx
  436273:	mov    ecx,0x20
  436278:	call   0x4360b0
  43627d:	mov    eax,DWORD PTR [rbx+0xc]
  436280:	mov    edx,eax
  436282:	sub    eax,0x1
  436285:	test   edx,edx
  436287:	mov    DWORD PTR [rbx+0xc],eax
  43628a:	jne    0x436270
  43628c:	test   edi,edi
  43628e:	lea    edx,[rdi-0x1]
  436291:	je     0x436310
  436293:	lea    rdi,[rsi+rdx*1+0x1]
  436298:	nop    DWORD PTR [rax+rax*1+0x0]
  4362a0:	add    rsi,0x1
  4362a4:	movsx  ecx,BYTE PTR [rsi-0x1]
  4362a8:	mov    rdx,rbx
  4362ab:	call   0x4360b0
  4362b0:	cmp    rsi,rdi
  4362b3:	jne    0x4362a0
  4362b5:	jmp    0x43630d
  4362b7:	nop    WORD PTR [rax+rax*1+0x0]
  4362c0:	mov    eax,DWORD PTR [rbx+0xc]
  4362c3:	mov    edi,edx
  4362c5:	cmp    edi,eax
  4362c7:	jl     0x436250
  4362c9:	test   edi,edi
  4362cb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4362d2:	lea    edx,[rdi-0x1]
  4362d5:	jne    0x436293
  4362d7:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  4362de:	add    rsp,0x20
  4362e2:	pop    rbx
  4362e3:	pop    rsi
  4362e4:	pop    rdi
  4362e5:	ret    
  4362e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4362f0:	test   edi,edi
  4362f2:	lea    edx,[rdi-0x1]
  4362f5:	jne    0x436293
  4362f7:	sub    eax,0x1
  4362fa:	mov    DWORD PTR [rbx+0xc],eax
  4362fd:	nop    DWORD PTR [rax]
  436300:	mov    rdx,rbx
  436303:	mov    ecx,0x20
  436308:	call   0x4360b0
  43630d:	mov    eax,DWORD PTR [rbx+0xc]
  436310:	lea    edx,[rax-0x1]
  436313:	test   eax,eax
  436315:	mov    DWORD PTR [rbx+0xc],edx
  436318:	jg     0x436300
  43631a:	add    rsp,0x20
  43631e:	pop    rbx
  43631f:	pop    rsi
  436320:	pop    rdi
  436321:	ret    
  436322:	test   edi,edi
  436324:	lea    edx,[rdi-0x1]
  436327:	jne    0x436293
  43632d:	sub    eax,0x1
  436330:	mov    DWORD PTR [rbx+0xc],eax
  436333:	jmp    0x4362de
  436335:	nop
  436336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436340:	sub    rsp,0x38
  436344:	test   ecx,ecx
  436346:	mov    DWORD PTR [r8+0x10],0xffffffff
  43634e:	je     0x436394
  436350:	lea    rcx,[rsp+0x20]
  436355:	mov    r11d,DWORD PTR [r8+0x8]
  436359:	mov    BYTE PTR [rsp+0x20],0x2d
  43635e:	lea    r10,[rcx+0x1]
  436362:	and    r11d,0x20
  436366:	xor    r9d,r9d
  436369:	movzx  eax,BYTE PTR [rdx+r9*1]
  43636e:	and    eax,0xffffffdf
  436371:	or     eax,r11d
  436374:	mov    BYTE PTR [r10+r9*1],al
  436378:	add    r9,0x1
  43637c:	cmp    r9,0x3
  436380:	jne    0x436369
  436382:	lea    rdx,[r10+0x3]
  436386:	sub    rdx,rcx
  436389:	call   0x436230
  43638e:	nop
  43638f:	add    rsp,0x38
  436393:	ret    
  436394:	mov    r11d,DWORD PTR [r8+0x8]
  436398:	test   r11d,0x100
  43639f:	je     0x4363b1
  4363a1:	lea    rcx,[rsp+0x20]
  4363a6:	mov    BYTE PTR [rsp+0x20],0x2b
  4363ab:	lea    r10,[rcx+0x1]
  4363af:	jmp    0x436362
  4363b1:	test   r11b,0x40
  4363b5:	je     0x4363d0
  4363b7:	lea    rcx,[rsp+0x20]
  4363bc:	mov    BYTE PTR [rsp+0x20],0x20
  4363c1:	lea    r10,[rcx+0x1]
  4363c5:	jmp    0x436362
  4363c7:	nop    WORD PTR [rax+rax*1+0x0]
  4363d0:	lea    rcx,[rsp+0x20]
  4363d5:	mov    r10,rcx
  4363d8:	jmp    0x436362
  4363da:	nop    WORD PTR [rax+rax*1+0x0]
  4363e0:	push   rbp
  4363e1:	push   r12
  4363e3:	push   rdi
  4363e4:	push   rsi
  4363e5:	push   rbx
  4363e6:	mov    rbp,rsp
  4363e9:	sub    rsp,0x30
  4363ed:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  4363f1:	mov    rsi,rcx
  4363f4:	je     0x436490
  4363fa:	movzx  edx,WORD PTR [rcx+0x18]
  4363fe:	test   dx,dx
  436401:	je     0x436462
  436403:	movsxd rax,DWORD PTR [rsi+0x14]
  436407:	mov    r12,rsp
  43640a:	add    rax,0xf
  43640e:	and    rax,0xfffffffffffffff0
  436412:	call   0x4354a0
  436417:	sub    rsp,rax
  43641a:	lea    r8,[rbp-0x4]
  43641e:	mov    DWORD PTR [rbp-0x4],0x0
  436425:	lea    rbx,[rsp+0x20]
  43642a:	mov    rcx,rbx
  43642d:	call   0x435b50
  436432:	test   eax,eax
  436434:	jle    0x436480
  436436:	sub    eax,0x1
  436439:	lea    rdi,[rbx+rax*1+0x1]
  43643e:	xchg   ax,ax
  436440:	add    rbx,0x1
  436444:	movsx  ecx,BYTE PTR [rbx-0x1]
  436448:	mov    rdx,rsi
  43644b:	call   0x4360b0
  436450:	cmp    rbx,rdi
  436453:	jne    0x436440
  436455:	mov    rsp,r12
  436458:	mov    rsp,rbp
  43645b:	pop    rbx
  43645c:	pop    rsi
  43645d:	pop    rdi
  43645e:	pop    r12
  436460:	pop    rbp
  436461:	ret    
  436462:	mov    rdx,rsi
  436465:	mov    ecx,0x2e
  43646a:	call   0x4360b0
  43646f:	nop
  436470:	mov    rsp,rbp
  436473:	pop    rbx
  436474:	pop    rsi
  436475:	pop    rdi
  436476:	pop    r12
  436478:	pop    rbp
  436479:	ret    
  43647a:	nop    WORD PTR [rax+rax*1+0x0]
  436480:	mov    rdx,rsi
  436483:	mov    ecx,0x2e
  436488:	call   0x4360b0
  43648d:	jmp    0x436455
  43648f:	nop
  436490:	mov    DWORD PTR [rbp-0x4],0x0
  436497:	call   0x43a6d0
  43649c:	mov    rdx,QWORD PTR [rax]
  43649f:	lea    rcx,[rbp-0x6]
  4364a3:	lea    r9,[rbp-0x4]
  4364a7:	mov    r8d,0x10
  4364ad:	call   0x4356d0
  4364b2:	test   eax,eax
  4364b4:	jle    0x4364c6
  4364b6:	movzx  edx,WORD PTR [rbp-0x6]
  4364ba:	mov    WORD PTR [rsi+0x18],dx
  4364be:	mov    DWORD PTR [rsi+0x14],eax
  4364c1:	jmp    0x4363fe
  4364c6:	movzx  edx,WORD PTR [rsi+0x18]
  4364ca:	jmp    0x4364be
  4364cc:	nop    DWORD PTR [rax+0x0]
  4364d0:	push   r12
  4364d2:	push   rbp
  4364d3:	push   rdi
  4364d4:	push   rsi
  4364d5:	push   rbx
  4364d6:	sub    rsp,0x20
  4364da:	mov    esi,r8d
  4364dd:	mov    ebp,ecx
  4364df:	mov    rdi,rdx
  4364e2:	test   esi,esi
  4364e4:	mov    rbx,r9
  4364e7:	mov    r8d,DWORD PTR [r9+0xc]
  4364eb:	jle    0x4366c2
  4364f1:	cmp    esi,r8d
  4364f4:	jg     0x436630
  4364fa:	sub    r8d,esi
  4364fd:	mov    DWORD PTR [r9+0xc],r8d
  436501:	test   r8d,r8d
  436504:	js     0x436630
  43650a:	mov    eax,DWORD PTR [rbx+0x10]
  43650d:	cmp    eax,r8d
  436510:	jge    0x436630
  436516:	sub    r8d,eax
  436519:	test   r8d,r8d
  43651c:	mov    DWORD PTR [rbx+0xc],r8d
  436520:	jle    0x43663d
  436526:	test   eax,eax
  436528:	jle    0x436775
  43652e:	sub    r8d,0x1
  436532:	test   esi,esi
  436534:	mov    DWORD PTR [rbx+0xc],r8d
  436538:	jle    0x436544
  43653a:	test   BYTE PTR [rbx+0x9],0x10
  43653e:	jne    0x43664f
  436544:	test   r8d,r8d
  436547:	jle    0x43658d
  436549:	test   ebp,ebp
  43654b:	jne    0x43655b
  43654d:	mov    eax,DWORD PTR [rbx+0x8]
  436550:	test   eax,0x1c0
  436555:	je     0x436755
  43655b:	sub    r8d,0x1
  43655f:	test   r8d,r8d
  436562:	mov    DWORD PTR [rbx+0xc],r8d
  436566:	jle    0x43658d
  436568:	test   DWORD PTR [rbx+0x8],0x600
  43656f:	jne    0x43658d
  436571:	jmp    0x436580
  436573:	mov    rdx,rbx
  436576:	mov    ecx,0x20
  43657b:	call   0x4360b0
  436580:	mov    eax,DWORD PTR [rbx+0xc]
  436583:	lea    edx,[rax-0x1]
  436586:	test   eax,eax
  436588:	mov    DWORD PTR [rbx+0xc],edx
  43658b:	jg     0x436573
  43658d:	test   ebp,ebp
  43658f:	jne    0x4366b0
  436595:	mov    eax,DWORD PTR [rbx+0x8]
  436598:	test   ah,0x1
  43659b:	jne    0x4366e0
  4365a1:	test   al,0x40
  4365a3:	jne    0x436763
  4365a9:	mov    edx,DWORD PTR [rbx+0xc]
  4365ac:	test   edx,edx
  4365ae:	jle    0x4365c3
  4365b0:	mov    eax,DWORD PTR [rbx+0x8]
  4365b3:	and    eax,0x600
  4365b8:	cmp    eax,0x200
  4365bd:	je     0x4366f2
  4365c3:	test   esi,esi
  4365c5:	jle    0x436722
  4365cb:	lea    r12,[rbx+0x20]
  4365cf:	mov    ebp,0x55555556
  4365d4:	movzx  eax,BYTE PTR [rdi]
  4365d7:	mov    ecx,0x30
  4365dc:	test   al,al
  4365de:	je     0x4365e7
  4365e0:	add    rdi,0x1
  4365e4:	movsx  ecx,al
  4365e7:	mov    rdx,rbx
  4365ea:	call   0x4360b0
  4365ef:	sub    esi,0x1
  4365f2:	je     0x436810
  4365f8:	test   BYTE PTR [rbx+0x9],0x10
  4365fc:	je     0x4365d4
  4365fe:	cmp    WORD PTR [rbx+0x20],0x0
  436603:	je     0x4365d4
  436605:	mov    eax,esi
  436607:	imul   ebp
  436609:	mov    eax,esi
  43660b:	sar    eax,0x1f
  43660e:	sub    edx,eax
  436610:	lea    eax,[rdx+rdx*2]
  436613:	cmp    esi,eax
  436615:	jne    0x4365d4
  436617:	mov    r8,rbx
  43661a:	mov    edx,0x1
  43661f:	mov    rcx,r12
  436622:	call   0x436110
  436627:	jmp    0x4365d4
  436629:	nop    DWORD PTR [rax+0x0]
  436630:	mov    DWORD PTR [rbx+0xc],0xffffffff
  436637:	mov    r8d,0xffffffff
  43663d:	test   esi,esi
  43663f:	jle    0x43658d
  436645:	test   BYTE PTR [rbx+0x9],0x10
  436649:	je     0x43658d
  43664f:	cmp    WORD PTR [rbx+0x20],0x0
  436654:	je     0x436544
  43665a:	lea    ecx,[rsi+0x2]
  43665d:	mov    edx,0x55555556
  436662:	mov    eax,ecx
  436664:	sar    ecx,0x1f
  436667:	imul   edx
  436669:	sub    edx,ecx
  43666b:	cmp    edx,0x1
  43666e:	jle    0x436544
  436674:	test   r8d,r8d
  436677:	jle    0x43658d
  43667d:	mov    eax,r8d
  436680:	sub    eax,edx
  436682:	add    eax,0x1
  436685:	jmp    0x436699
  436687:	nop    WORD PTR [rax+rax*1+0x0]
  436690:	test   r8d,r8d
  436693:	je     0x436804
  436699:	sub    r8d,0x1
  43669d:	cmp    r8d,eax
  4366a0:	jne    0x436690
  4366a2:	mov    DWORD PTR [rbx+0xc],r8d
  4366a6:	jmp    0x436544
  4366ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4366b0:	mov    rdx,rbx
  4366b3:	mov    ecx,0x2d
  4366b8:	call   0x4360b0
  4366bd:	jmp    0x4365a9
  4366c2:	test   r8d,r8d
  4366c5:	jle    0x436501
  4366cb:	sub    r8d,0x1
  4366cf:	mov    DWORD PTR [r9+0xc],r8d
  4366d3:	jmp    0x43650a
  4366d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4366e0:	mov    rdx,rbx
  4366e3:	mov    ecx,0x2b
  4366e8:	call   0x4360b0
  4366ed:	jmp    0x4365a9
  4366f2:	sub    edx,0x1
  4366f5:	mov    DWORD PTR [rbx+0xc],edx
  4366f8:	nop    DWORD PTR [rax+rax*1+0x0]
  436700:	mov    rdx,rbx
  436703:	mov    ecx,0x30
  436708:	call   0x4360b0
  43670d:	mov    eax,DWORD PTR [rbx+0xc]
  436710:	lea    edx,[rax-0x1]
  436713:	test   eax,eax
  436715:	mov    DWORD PTR [rbx+0xc],edx
  436718:	jg     0x436700
  43671a:	test   esi,esi
  43671c:	jg     0x4365cb
  436722:	mov    rdx,rbx
  436725:	mov    ecx,0x30
  43672a:	call   0x4360b0
  43672f:	mov    eax,DWORD PTR [rbx+0x10]
  436732:	test   eax,eax
  436734:	jg     0x4367a2
  436736:	test   BYTE PTR [rbx+0x9],0x8
  43673a:	jne    0x4367a2
  43673c:	test   esi,esi
  43673e:	jne    0x4367e6
  436744:	sub    eax,0x1
  436747:	mov    DWORD PTR [rbx+0x10],eax
  43674a:	add    rsp,0x20
  43674e:	pop    rbx
  43674f:	pop    rsi
  436750:	pop    rdi
  436751:	pop    rbp
  436752:	pop    r12
  436754:	ret    
  436755:	test   ah,0x6
  436758:	je     0x436580
  43675e:	jmp    0x436598
  436763:	mov    rdx,rbx
  436766:	mov    ecx,0x20
  43676b:	call   0x4360b0
  436770:	jmp    0x4365a9
  436775:	mov    eax,DWORD PTR [rbx+0x8]
  436778:	test   ah,0x8
  43677b:	jne    0x43652e
  436781:	test   esi,esi
  436783:	jle    0x436549
  436789:	test   ah,0x10
  43678c:	je     0x436549
  436792:	cmp    WORD PTR [rbx+0x20],0x0
  436797:	jne    0x43665a
  43679d:	jmp    0x436549
  4367a2:	mov    rcx,rbx
  4367a5:	call   0x4363e0
  4367aa:	test   esi,esi
  4367ac:	je     0x4367cb
  4367ae:	jmp    0x4367e3
  4367b0:	movzx  eax,BYTE PTR [rdi]
  4367b3:	mov    ecx,0x30
  4367b8:	test   al,al
  4367ba:	je     0x4367c3
  4367bc:	add    rdi,0x1
  4367c0:	movsx  ecx,al
  4367c3:	mov    rdx,rbx
  4367c6:	call   0x4360b0
  4367cb:	mov    eax,DWORD PTR [rbx+0x10]
  4367ce:	lea    edx,[rax-0x1]
  4367d1:	test   eax,eax
  4367d3:	mov    DWORD PTR [rbx+0x10],edx
  4367d6:	jg     0x4367b0
  4367d8:	add    rsp,0x20
  4367dc:	pop    rbx
  4367dd:	pop    rsi
  4367de:	pop    rdi
  4367df:	pop    rbp
  4367e0:	pop    r12
  4367e2:	ret    
  4367e3:	mov    eax,DWORD PTR [rbx+0x10]
  4367e6:	add    eax,esi
  4367e8:	mov    DWORD PTR [rbx+0x10],eax
  4367eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4367f0:	mov    rdx,rbx
  4367f3:	mov    ecx,0x30
  4367f8:	call   0x4360b0
  4367fd:	add    esi,0x1
  436800:	jne    0x4367f0
  436802:	jmp    0x4367cb
  436804:	mov    DWORD PTR [rbx+0xc],0x0
  43680b:	jmp    0x43658d
  436810:	mov    eax,DWORD PTR [rbx+0x10]
  436813:	test   eax,eax
  436815:	jle    0x436821
  436817:	mov    rcx,rbx
  43681a:	call   0x4363e0
  43681f:	jmp    0x4367cb
  436821:	test   BYTE PTR [rbx+0x9],0x8
  436825:	jne    0x436817
  436827:	jmp    0x436744
  43682c:	nop    DWORD PTR [rax+0x0]
  436830:	push   rsi
  436831:	push   rbx
  436832:	sub    rsp,0x68
  436836:	mov    r8d,DWORD PTR [rdx+0x10]
  43683a:	fld    TBYTE PTR [rcx]
  43683c:	mov    rbx,rdx
  43683f:	test   r8d,r8d
  436842:	js     0x4368e0
  436848:	lea    rdx,[rsp+0x30]
  43684d:	lea    r9,[rsp+0x4c]
  436852:	mov    ecx,0x3
  436857:	fstp   TBYTE PTR [rsp+0x50]
  43685b:	mov    rax,QWORD PTR [rsp+0x50]
  436860:	mov    QWORD PTR [rsp+0x30],rax
  436865:	mov    rax,QWORD PTR [rsp+0x58]
  43686a:	mov    QWORD PTR [rsp+0x38],rax
  43686f:	lea    rax,[rsp+0x48]
  436874:	mov    QWORD PTR [rsp+0x20],rax
  436879:	call   0x435fb0
  43687e:	mov    r8d,DWORD PTR [rsp+0x4c]
  436883:	mov    rsi,rax
  436886:	cmp    r8d,0xffff8000
  43688d:	je     0x4368f2
  43688f:	mov    ecx,DWORD PTR [rsp+0x48]
  436893:	mov    rdx,rax
  436896:	mov    r9,rbx
  436899:	call   0x4364d0
  43689e:	mov    eax,DWORD PTR [rbx+0xc]
  4368a1:	lea    edx,[rax-0x1]
  4368a4:	test   eax,eax
  4368a6:	mov    DWORD PTR [rbx+0xc],edx
  4368a9:	jle    0x4368ce
  4368ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4368b0:	mov    rdx,rbx
  4368b3:	mov    ecx,0x20
  4368b8:	call   0x4360b0
  4368bd:	mov    r8d,DWORD PTR [rbx+0xc]
  4368c1:	lea    r9d,[r8-0x1]
  4368c5:	test   r8d,r8d
  4368c8:	mov    DWORD PTR [rbx+0xc],r9d
  4368cc:	jg     0x4368b0
  4368ce:	mov    rcx,rsi
  4368d1:	call   0x4382c0
  4368d6:	nop
  4368d7:	add    rsp,0x68
  4368db:	pop    rbx
  4368dc:	pop    rsi
  4368dd:	ret    
  4368de:	xchg   ax,ax
  4368e0:	mov    DWORD PTR [rdx+0x10],0x6
  4368e7:	mov    r8d,0x6
  4368ed:	jmp    0x436848
  4368f2:	mov    ecx,DWORD PTR [rsp+0x48]
  4368f6:	mov    r8,rbx
  4368f9:	mov    rdx,rax
  4368fc:	call   0x436340
  436901:	mov    rcx,rsi
  436904:	call   0x4382c0
  436909:	nop
  43690a:	add    rsp,0x68
  43690e:	pop    rbx
  43690f:	pop    rsi
  436910:	ret    
  436911:	nop    DWORD PTR [rax+rax*1+0x0]
  436916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436920:	push   rbp
  436921:	push   r13
  436923:	push   r12
  436925:	push   rdi
  436926:	push   rsi
  436927:	push   rbx
  436928:	sub    rsp,0x28
  43692c:	lea    rbp,[rsp+0x80]
  436934:	mov    ebx,DWORD PTR [rdx+0x10]
  436937:	mov    r11d,DWORD PTR [rdx+0x8]
  43693b:	mov    r8d,0x0
  436941:	mov    rsi,rdx
  436944:	test   ebx,ebx
  436946:	cmovns r8d,ebx
  43694a:	add    r8d,0x17
  43694e:	test   r11d,0x1000
  436955:	je     0x436962
  436957:	cmp    WORD PTR [rdx+0x20],0x0
  43695c:	jne    0x436b52
  436962:	movsxd r13,DWORD PTR [rsi+0xc]
  436966:	movsxd rax,r8d
  436969:	cmp    r8d,r13d
  43696c:	cmovl  rax,r13
  436970:	add    rax,0x1e
  436974:	and    rax,0xfffffffffffffff0
  436978:	call   0x4354a0
  43697d:	sub    rsp,rax
  436980:	test   r11b,0x80
  436984:	lea    r12,[rsp+0x20]
  436989:	je     0x43699c
  43698b:	test   rcx,rcx
  43698e:	js     0x436be0
  436994:	and    r11b,0x7f
  436998:	mov    DWORD PTR [rsi+0x8],r11d
  43699c:	test   rcx,rcx
  43699f:	je     0x436be8
  4369a5:	mov    r10d,r11d
  4369a8:	mov    r8,r12
  4369ab:	movabs r9,0xcccccccccccccccd
  4369b5:	and    r10d,0x1000
  4369bc:	jmp    0x4369f3
  4369be:	xchg   ax,ax
  4369c0:	cmp    r12,rdi
  4369c3:	je     0x4369f0
  4369c5:	test   r10d,r10d
  4369c8:	je     0x4369f0
  4369ca:	cmp    WORD PTR [rsi+0x20],0x0
  4369cf:	je     0x4369f0
  4369d1:	mov    rax,rdi
  4369d4:	sub    rax,r12
  4369d7:	cqo    
  4369d9:	shr    rdx,0x3e
  4369dd:	add    rax,rdx
  4369e0:	and    eax,0x3
  4369e3:	sub    rax,rdx
  4369e6:	cmp    rax,0x3
  4369ea:	je     0x436b30
  4369f0:	mov    r8,rdi
  4369f3:	mov    rax,rcx
  4369f6:	lea    rdi,[r8+0x1]
  4369fa:	mul    r9
  4369fd:	shr    rdx,0x3
  436a01:	lea    rax,[rdx+rdx*4]
  436a05:	add    rax,rax
  436a08:	sub    rcx,rax
  436a0b:	add    ecx,0x30
  436a0e:	test   rdx,rdx
  436a11:	mov    BYTE PTR [r8],cl
  436a14:	mov    rcx,rdx
  436a17:	jne    0x4369c0
  436a19:	test   ebx,ebx
  436a1b:	jle    0x436a55
  436a1d:	mov    rax,r12
  436a20:	sub    rax,rdi
  436a23:	add    eax,ebx
  436a25:	test   eax,eax
  436a27:	jle    0x436a55
  436a29:	sub    eax,0x1
  436a2c:	mov    rdx,rax
  436a2f:	lea    rcx,[rdi+rax*1+0x1]
  436a34:	mov    rax,rdi
  436a37:	nop    WORD PTR [rax+rax*1+0x0]
  436a40:	add    rax,0x1
  436a44:	mov    BYTE PTR [rax-0x1],0x30
  436a48:	cmp    rax,rcx
  436a4b:	jne    0x436a40
  436a4d:	movsxd rax,edx
  436a50:	lea    rdi,[rdi+rax*1+0x1]
  436a55:	cmp    r12,rdi
  436a58:	jne    0x436a65
  436a5a:	test   ebx,ebx
  436a5c:	je     0x436a65
  436a5e:	mov    BYTE PTR [rdi],0x30
  436a61:	add    rdi,0x1
  436a65:	test   r13d,r13d
  436a68:	jle    0x436ace
  436a6a:	mov    rax,r12
  436a6d:	sub    rax,rdi
  436a70:	add    r13d,eax
  436a73:	test   r13d,r13d
  436a76:	mov    DWORD PTR [rsi+0xc],r13d
  436a7a:	jle    0x436ace
  436a7c:	test   r11d,0x1c0
  436a83:	je     0x436a8d
  436a85:	sub    r13d,0x1
  436a89:	mov    DWORD PTR [rsi+0xc],r13d
  436a8d:	test   ebx,ebx
  436a8f:	js     0x436b90
  436a95:	test   r11d,0x400
  436a9c:	jne    0x436ace
  436a9e:	mov    eax,DWORD PTR [rsi+0xc]
  436aa1:	lea    edx,[rax-0x1]
  436aa4:	test   eax,eax
  436aa6:	mov    DWORD PTR [rsi+0xc],edx
  436aa9:	jle    0x436ace
  436aab:	nop    DWORD PTR [rax+rax*1+0x0]
  436ab0:	mov    rdx,rsi
  436ab3:	mov    ecx,0x20
  436ab8:	call   0x4360b0
  436abd:	mov    eax,DWORD PTR [rsi+0xc]
  436ac0:	lea    edx,[rax-0x1]
  436ac3:	test   eax,eax
  436ac5:	mov    DWORD PTR [rsi+0xc],edx
  436ac8:	jg     0x436ab0
  436aca:	mov    r11d,DWORD PTR [rsi+0x8]
  436ace:	test   r11b,0x80
  436ad2:	je     0x436b40
  436ad4:	lea    rbx,[rdi+0x1]
  436ad8:	mov    BYTE PTR [rdi],0x2d
  436adb:	cmp    r12,rbx
  436ade:	jae    0x436b0e
  436ae0:	sub    rbx,0x1
  436ae4:	movsx  ecx,BYTE PTR [rbx]
  436ae7:	mov    rdx,rsi
  436aea:	call   0x4360b0
  436aef:	cmp    rbx,r12
  436af2:	jne    0x436ae0
  436af4:	mov    eax,DWORD PTR [rsi+0xc]
  436af7:	lea    edx,[rax-0x1]
  436afa:	test   eax,eax
  436afc:	mov    DWORD PTR [rsi+0xc],edx
  436aff:	jle    0x436b1b
  436b01:	mov    rdx,rsi
  436b04:	mov    ecx,0x20
  436b09:	call   0x4360b0
  436b0e:	mov    eax,DWORD PTR [rsi+0xc]
  436b11:	lea    edx,[rax-0x1]
  436b14:	test   eax,eax
  436b16:	mov    DWORD PTR [rsi+0xc],edx
  436b19:	jg     0x436b01
  436b1b:	lea    rsp,[rbp-0x58]
  436b1f:	pop    rbx
  436b20:	pop    rsi
  436b21:	pop    rdi
  436b22:	pop    r12
  436b24:	pop    r13
  436b26:	pop    rbp
  436b27:	ret    
  436b28:	nop    DWORD PTR [rax+rax*1+0x0]
  436b30:	lea    rdi,[r8+0x2]
  436b34:	mov    BYTE PTR [r8+0x1],0x2c
  436b39:	jmp    0x4369f0
  436b3e:	xchg   ax,ax
  436b40:	test   r11d,0x100
  436b47:	je     0x436b70
  436b49:	lea    rbx,[rdi+0x1]
  436b4d:	mov    BYTE PTR [rdi],0x2b
  436b50:	jmp    0x436adb
  436b52:	mov    eax,r8d
  436b55:	mov    edx,0x55555556
  436b5a:	imul   edx
  436b5c:	mov    eax,r8d
  436b5f:	sar    eax,0x1f
  436b62:	sub    edx,eax
  436b64:	add    r8d,edx
  436b67:	jmp    0x436962
  436b6c:	nop    DWORD PTR [rax+0x0]
  436b70:	and    r11d,0x40
  436b74:	mov    rbx,rdi
  436b77:	je     0x436adb
  436b7d:	add    rbx,0x1
  436b81:	mov    BYTE PTR [rdi],0x20
  436b84:	jmp    0x436adb
  436b89:	nop    DWORD PTR [rax+0x0]
  436b90:	mov    eax,r11d
  436b93:	and    eax,0x600
  436b98:	cmp    eax,0x200
  436b9d:	jne    0x436a95
  436ba3:	mov    eax,DWORD PTR [rsi+0xc]
  436ba6:	lea    ecx,[rax-0x1]
  436ba9:	test   eax,eax
  436bab:	mov    DWORD PTR [rsi+0xc],ecx
  436bae:	jle    0x436ace
  436bb4:	lea    rdx,[rdi+rcx*1+0x1]
  436bb9:	mov    rax,rdi
  436bbc:	nop    DWORD PTR [rax+0x0]
  436bc0:	add    rax,0x1
  436bc4:	mov    BYTE PTR [rax-0x1],0x30
  436bc8:	cmp    rax,rdx
  436bcb:	jne    0x436bc0
  436bcd:	lea    rdi,[rdi+rcx*1+0x1]
  436bd2:	mov    DWORD PTR [rsi+0xc],0xffffffff
  436bd9:	jmp    0x436ace
  436bde:	xchg   ax,ax
  436be0:	neg    rcx
  436be3:	jmp    0x43699c
  436be8:	mov    rdi,r12
  436beb:	jmp    0x436a19
  436bf0:	push   rdi
  436bf1:	push   rsi
  436bf2:	push   rbx
  436bf3:	sub    rsp,0x20
  436bf7:	mov    rsi,r9
  436bfa:	lea    r9d,[r8-0x1]
  436bfe:	mov    r8d,0x66666667
  436c04:	mov    r10,rdx
  436c07:	mov    eax,r9d
  436c0a:	movsxd rbx,r9d
  436c0d:	sar    r9d,0x1f
  436c11:	imul   r8d
  436c14:	sar    edx,0x2
  436c17:	mov    r8d,edx
  436c1a:	sub    r8d,r9d
  436c1d:	mov    r9d,0x1
  436c23:	je     0x436c4b
  436c25:	mov    r11d,0x66666667
  436c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  436c30:	mov    eax,r8d
  436c33:	sar    r8d,0x1f
  436c37:	add    r9d,0x1
  436c3b:	imul   r11d
  436c3e:	mov    eax,edx
  436c40:	sar    eax,0x2
  436c43:	sub    eax,r8d
  436c46:	mov    r8d,eax
  436c49:	jne    0x436c30
  436c4b:	mov    edi,DWORD PTR [rsi+0x2c]
  436c4e:	mov    eax,DWORD PTR [rsi+0xc]
  436c51:	cmp    r9d,edi
  436c54:	cmovge edi,r9d
  436c58:	lea    edx,[rdi+0x2]
  436c5b:	cmp    eax,edx
  436c5d:	jg     0x436cb2
  436c5f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  436c66:	mov    r9,rsi
  436c69:	mov    rdx,r10
  436c6c:	mov    r8d,0x1
  436c72:	call   0x4364d0
  436c77:	mov    ecx,DWORD PTR [rsi+0x8]
  436c7a:	mov    eax,DWORD PTR [rsi+0x2c]
  436c7d:	mov    rdx,rsi
  436c80:	mov    DWORD PTR [rsi+0x10],eax
  436c83:	mov    eax,ecx
  436c85:	and    ecx,0x20
  436c88:	or     eax,0x1c0
  436c8d:	or     ecx,0x45
  436c90:	mov    DWORD PTR [rsi+0x8],eax
  436c93:	call   0x4360b0
  436c98:	lea    r9d,[rdi+0x1]
  436c9c:	add    DWORD PTR [rsi+0xc],r9d
  436ca0:	mov    rdx,rsi
  436ca3:	mov    rcx,rbx
  436ca6:	add    rsp,0x20
  436caa:	pop    rbx
  436cab:	pop    rsi
  436cac:	pop    rdi
  436cad:	jmp    0x436920
  436cb2:	sub    eax,edx
  436cb4:	mov    DWORD PTR [rsi+0xc],eax
  436cb7:	jmp    0x436c66
  436cb9:	nop    DWORD PTR [rax+0x0]
  436cc0:	push   rsi
  436cc1:	push   rbx
  436cc2:	sub    rsp,0x68
  436cc6:	mov    eax,DWORD PTR [rdx+0x10]
  436cc9:	fld    TBYTE PTR [rcx]
  436ccb:	mov    rbx,rdx
  436cce:	test   eax,eax
  436cd0:	lea    r8d,[rax+0x1]
  436cd4:	js     0x436d40
  436cd6:	lea    rdx,[rsp+0x30]
  436cdb:	lea    r9,[rsp+0x4c]
  436ce0:	mov    ecx,0x2
  436ce5:	fstp   TBYTE PTR [rsp+0x50]
  436ce9:	mov    rax,QWORD PTR [rsp+0x50]
  436cee:	mov    QWORD PTR [rsp+0x30],rax
  436cf3:	mov    rax,QWORD PTR [rsp+0x58]
  436cf8:	mov    QWORD PTR [rsp+0x38],rax
  436cfd:	lea    rax,[rsp+0x48]
  436d02:	mov    QWORD PTR [rsp+0x20],rax
  436d07:	call   0x435fb0
  436d0c:	mov    r8d,DWORD PTR [rsp+0x4c]
  436d11:	mov    rsi,rax
  436d14:	cmp    r8d,0xffff8000
  436d1b:	je     0x436d50
  436d1d:	mov    ecx,DWORD PTR [rsp+0x48]
  436d21:	mov    r9,rbx
  436d24:	mov    rdx,rax
  436d27:	call   0x436bf0
  436d2c:	mov    rcx,rsi
  436d2f:	call   0x4382c0
  436d34:	nop
  436d35:	add    rsp,0x68
  436d39:	pop    rbx
  436d3a:	pop    rsi
  436d3b:	ret    
  436d3c:	nop    DWORD PTR [rax+0x0]
  436d40:	mov    DWORD PTR [rdx+0x10],0x6
  436d47:	mov    r8d,0x7
  436d4d:	jmp    0x436cd6
  436d4f:	nop
  436d50:	mov    ecx,DWORD PTR [rsp+0x48]
  436d54:	mov    r8,rbx
  436d57:	mov    rdx,rax
  436d5a:	call   0x436340
  436d5f:	mov    rcx,rsi
  436d62:	call   0x4382c0
  436d67:	nop
  436d68:	add    rsp,0x68
  436d6c:	pop    rbx
  436d6d:	pop    rsi
  436d6e:	ret    
  436d6f:	nop
  436d70:	push   rsi
  436d71:	push   rbx
  436d72:	sub    rsp,0x78
  436d76:	mov    r8d,DWORD PTR [rdx+0x10]
  436d7a:	fld    TBYTE PTR [rcx]
  436d7c:	mov    rbx,rdx
  436d7f:	test   r8d,r8d
  436d82:	js     0x436ec0
  436d88:	je     0x436ea0
  436d8e:	lea    rdx,[rsp+0x40]
  436d93:	lea    r9,[rsp+0x5c]
  436d98:	mov    ecx,0x2
  436d9d:	fstp   TBYTE PTR [rsp+0x60]
  436da1:	mov    rax,QWORD PTR [rsp+0x60]
  436da6:	mov    QWORD PTR [rsp+0x40],rax
  436dab:	mov    rax,QWORD PTR [rsp+0x68]
  436db0:	mov    QWORD PTR [rsp+0x48],rax
  436db5:	lea    rax,[rsp+0x58]
  436dba:	mov    QWORD PTR [rsp+0x20],rax
  436dbf:	call   0x435fb0
  436dc4:	mov    r8d,DWORD PTR [rsp+0x5c]
  436dc9:	mov    rsi,rax
  436dcc:	cmp    r8d,0xffff8000
  436dd3:	je     0x436ee0
  436dd9:	cmp    r8d,0xfffffffd
  436ddd:	jl     0x436e60
  436de3:	mov    eax,DWORD PTR [rbx+0x10]
  436de6:	cmp    r8d,eax
  436de9:	jg     0x436e60
  436deb:	test   BYTE PTR [rbx+0x9],0x8
  436def:	jne    0x436ed2
  436df5:	mov    rcx,rsi
  436df8:	mov    DWORD PTR [rsp+0x3c],r8d
  436dfd:	call   0x43a620
  436e02:	mov    r8d,DWORD PTR [rsp+0x3c]
  436e07:	sub    eax,r8d
  436e0a:	test   eax,eax
  436e0c:	mov    DWORD PTR [rbx+0x10],eax
  436e0f:	js     0x436ef1
  436e15:	mov    ecx,DWORD PTR [rsp+0x58]
  436e19:	mov    rdx,rsi
  436e1c:	mov    r9,rbx
  436e1f:	call   0x4364d0
  436e24:	mov    eax,DWORD PTR [rbx+0xc]
  436e27:	lea    edx,[rax-0x1]
  436e2a:	test   eax,eax
  436e2c:	mov    DWORD PTR [rbx+0xc],edx
  436e2f:	jle    0x436e8d
  436e31:	mov    rdx,rbx
  436e34:	mov    ecx,0x20
  436e39:	call   0x4360b0
  436e3e:	mov    r8d,DWORD PTR [rbx+0xc]
  436e42:	lea    r9d,[r8-0x1]
  436e46:	test   r8d,r8d
  436e49:	mov    DWORD PTR [rbx+0xc],r9d
  436e4d:	jg     0x436e31
  436e4f:	mov    rcx,rsi
  436e52:	call   0x4382c0
  436e57:	nop
  436e58:	add    rsp,0x78
  436e5c:	pop    rbx
  436e5d:	pop    rsi
  436e5e:	ret    
  436e5f:	nop
  436e60:	test   BYTE PTR [rbx+0x9],0x8
  436e64:	jne    0x436eb2
  436e66:	mov    rcx,rsi
  436e69:	mov    DWORD PTR [rsp+0x3c],r8d
  436e6e:	call   0x43a620
  436e73:	mov    r8d,DWORD PTR [rsp+0x3c]
  436e78:	sub    eax,0x1
  436e7b:	mov    DWORD PTR [rbx+0x10],eax
  436e7e:	mov    ecx,DWORD PTR [rsp+0x58]
  436e82:	mov    r9,rbx
  436e85:	mov    rdx,rsi
  436e88:	call   0x436bf0
  436e8d:	mov    rcx,rsi
  436e90:	call   0x4382c0
  436e95:	nop
  436e96:	add    rsp,0x78
  436e9a:	pop    rbx
  436e9b:	pop    rsi
  436e9c:	ret    
  436e9d:	nop    DWORD PTR [rax]
  436ea0:	mov    DWORD PTR [rdx+0x10],0x1
  436ea7:	mov    r8d,0x1
  436ead:	jmp    0x436d8e
  436eb2:	sub    DWORD PTR [rbx+0x10],0x1
  436eb6:	jmp    0x436e7e
  436eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  436ec0:	mov    DWORD PTR [rdx+0x10],0x6
  436ec7:	mov    r8d,0x6
  436ecd:	jmp    0x436d8e
  436ed2:	sub    eax,r8d
  436ed5:	mov    DWORD PTR [rbx+0x10],eax
  436ed8:	jmp    0x436e15
  436edd:	nop    DWORD PTR [rax]
  436ee0:	mov    ecx,DWORD PTR [rsp+0x58]
  436ee4:	mov    r8,rbx
  436ee7:	mov    rdx,rax
  436eea:	call   0x436340
  436eef:	jmp    0x436e8d
  436ef1:	mov    edx,DWORD PTR [rbx+0xc]
  436ef4:	test   edx,edx
  436ef6:	jle    0x436e15
  436efc:	add    eax,edx
  436efe:	mov    DWORD PTR [rbx+0xc],eax
  436f01:	jmp    0x436e15
  436f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436f10:	push   rbp
  436f11:	push   r14
  436f13:	push   r13
  436f15:	push   r12
  436f17:	push   rdi
  436f18:	push   rsi
  436f19:	push   rbx
  436f1a:	mov    rbp,rsp
  436f1d:	sub    rsp,0x20
  436f21:	mov    r10d,0x12
  436f27:	mov    eax,0x18
  436f2c:	cmp    ecx,0x6f
  436f2f:	mov    rbx,r8
  436f32:	mov    r8d,DWORD PTR [r8+0x10]
  436f36:	mov    r11d,ecx
  436f39:	setne  cl
  436f3c:	mov    edi,DWORD PTR [rbx+0x8]
  436f3f:	movzx  ecx,cl
  436f42:	cmovne eax,r10d
  436f46:	mov    r10b,0x0
  436f49:	add    ecx,0x3
  436f4c:	test   r8d,r8d
  436f4f:	mov    r9,rdx
  436f52:	cmovns r10d,r8d
  436f56:	add    r10d,eax
  436f59:	test   edi,0x1000
  436f5f:	je     0x436f6c
  436f61:	cmp    WORD PTR [rbx+0x20],0x0
  436f66:	jne    0x437133
  436f6c:	movsxd r12,DWORD PTR [rbx+0xc]
  436f70:	movsxd rax,r10d
  436f73:	cmp    r10d,r12d
  436f76:	cmovl  rax,r12
  436f7a:	add    rax,0x1e
  436f7e:	and    rax,0xfffffffffffffff0
  436f82:	call   0x4354a0
  436f87:	xor    edx,edx
  436f89:	sub    rsp,rax
  436f8c:	cmp    r11d,0x6f
  436f90:	lea    rsi,[rsp+0x20]
  436f95:	setne  dl
  436f98:	test   r9,r9
  436f9b:	lea    edx,[rdx*8+0x7]
  436fa2:	mov    r10,rsi
  436fa5:	je     0x437252
  436fab:	mov    r13d,r11d
  436fae:	and    r13d,0x20
  436fb2:	jmp    0x436fc0
  436fb4:	shr    r9,cl
  436fb7:	mov    BYTE PTR [r10-0x1],r14b
  436fbb:	test   r9,r9
  436fbe:	je     0x436fe5
  436fc0:	mov    eax,edx
  436fc2:	add    r10,0x1
  436fc6:	and    eax,r9d
  436fc9:	lea    r14d,[rax+0x30]
  436fcd:	cmp    r14b,0x39
  436fd1:	jbe    0x436fb4
  436fd3:	add    eax,0x37
  436fd6:	shr    r9,cl
  436fd9:	or     eax,r13d
  436fdc:	test   r9,r9
  436fdf:	mov    BYTE PTR [r10-0x1],al
  436fe3:	jne    0x436fc0
  436fe5:	cmp    rsi,r10
  436fe8:	je     0x437252
  436fee:	test   r8d,r8d
  436ff1:	jle    0x4371b2
  436ff7:	mov    rax,rsi
  436ffa:	sub    rax,r10
  436ffd:	add    eax,r8d
  437000:	test   eax,eax
  437002:	jle    0x4371b2
  437008:	sub    eax,0x1
  43700b:	mov    rdx,rax
  43700e:	lea    rcx,[r10+rax*1+0x1]
  437013:	mov    rax,r10
  437016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437020:	add    rax,0x1
  437024:	mov    BYTE PTR [rax-0x1],0x30
  437028:	cmp    rax,rcx
  43702b:	jne    0x437020
  43702d:	movsxd rax,edx
  437030:	lea    r10,[r10+rax*1+0x1]
  437035:	cmp    rsi,r10
  437038:	jne    0x437050
  43703a:	test   r8d,r8d
  43703d:	je     0x437050
  43703f:	mov    BYTE PTR [r10],0x30
  437043:	add    r10,0x1
  437047:	nop    WORD PTR [rax+rax*1+0x0]
  437050:	mov    rax,r10
  437053:	sub    rax,rsi
  437056:	cmp    r12d,eax
  437059:	jle    0x437180
  43705f:	sub    r12d,eax
  437062:	test   r12d,r12d
  437065:	mov    DWORD PTR [rbx+0xc],r12d
  437069:	jle    0x4372b7
  43706f:	cmp    r11d,0x6f
  437073:	mov    edx,DWORD PTR [rbx+0x8]
  437076:	je     0x437240
  43707c:	test   dh,0x8
  43707f:	je     0x437200
  437085:	lea    r13d,[r12-0x2]
  43708a:	test   r13d,r13d
  43708d:	jle    0x437098
  43708f:	test   r8d,r8d
  437092:	js     0x43714d
  437098:	test   r13d,r13d
  43709b:	mov    BYTE PTR [r10],r11b
  43709e:	lea    rdi,[r10+0x2]
  4370a2:	mov    BYTE PTR [r10+0x1],0x30
  4370a7:	jle    0x4371a8
  4370ad:	and    dh,0x4
  4370b0:	jne    0x4371d3
  4370b6:	lea    r14d,[r13-0x1]
  4370ba:	mov    r12d,r14d
  4370bd:	nop    DWORD PTR [rax]
  4370c0:	sub    r12d,0x1
  4370c4:	mov    rdx,rbx
  4370c7:	mov    ecx,0x20
  4370cc:	call   0x4360b0
  4370d1:	lea    eax,[r12+0x1]
  4370d6:	test   eax,eax
  4370d8:	jg     0x4370c0
  4370da:	test   r14d,r14d
  4370dd:	lea    r13d,[r14-0x1]
  4370e1:	mov    r12d,0x0
  4370e7:	cmovns r12d,r14d
  4370eb:	sub    r13d,r12d
  4370ee:	cmp    rsi,rdi
  4370f1:	jb     0x4371e0
  4370f7:	nop    WORD PTR [rax+rax*1+0x0]
  437100:	test   r13d,r13d
  437103:	lea    esi,[r13-0x1]
  437107:	jle    0x437125
  437109:	nop    DWORD PTR [rax+0x0]
  437110:	mov    rdx,rbx
  437113:	mov    ecx,0x20
  437118:	sub    esi,0x1
  43711b:	call   0x4360b0
  437120:	cmp    esi,0xffffffff
  437123:	jne    0x437110
  437125:	mov    rsp,rbp
  437128:	pop    rbx
  437129:	pop    rsi
  43712a:	pop    rdi
  43712b:	pop    r12
  43712d:	pop    r13
  43712f:	pop    r14
  437131:	pop    rbp
  437132:	ret    
  437133:	mov    eax,r10d
  437136:	mov    edx,0x55555556
  43713b:	imul   edx
  43713d:	mov    eax,r10d
  437140:	sar    eax,0x1f
  437143:	sub    edx,eax
  437145:	add    r10d,edx
  437148:	jmp    0x436f6c
  43714d:	mov    eax,edx
  43714f:	and    eax,0x600
  437154:	cmp    eax,0x200
  437159:	je     0x437260
  43715f:	mov    r12d,r13d
  437162:	test   dh,0x8
  437165:	mov    r13d,r12d
  437168:	mov    rdi,r10
  43716b:	je     0x4370ad
  437171:	mov    r13d,r12d
  437174:	jmp    0x437098
  437179:	nop    DWORD PTR [rax+0x0]
  437180:	mov    DWORD PTR [rbx+0xc],0xffffffff
  437187:	mov    r13d,0xffffffff
  43718d:	cmp    r11d,0x6f
  437191:	je     0x4371a5
  437193:	mov    edx,DWORD PTR [rbx+0x8]
  437196:	mov    eax,edx
  437198:	and    eax,0x800
  43719d:	test   eax,eax
  43719f:	jne    0x437098
  4371a5:	mov    rdi,r10
  4371a8:	cmp    rsi,rdi
  4371ab:	jb     0x4371e0
  4371ad:	jmp    0x437125
  4371b2:	cmp    r11d,0x6f
  4371b6:	jne    0x437035
  4371bc:	test   BYTE PTR [rbx+0x9],0x8
  4371c0:	je     0x437035
  4371c6:	mov    BYTE PTR [r10],0x30
  4371ca:	add    r10,0x1
  4371ce:	jmp    0x437035
  4371d3:	cmp    rsi,rdi
  4371d6:	jae    0x4372bf
  4371dc:	nop    DWORD PTR [rax+0x0]
  4371e0:	sub    rdi,0x1
  4371e4:	movsx  ecx,BYTE PTR [rdi]
  4371e7:	mov    rdx,rbx
  4371ea:	call   0x4360b0
  4371ef:	cmp    rsi,rdi
  4371f2:	jb     0x4371e0
  4371f4:	jmp    0x437100
  4371f9:	nop    DWORD PTR [rax+0x0]
  437200:	test   r8d,r8d
  437203:	jns    0x437162
  437209:	mov    eax,edx
  43720b:	and    eax,0x600
  437210:	cmp    eax,0x200
  437215:	je     0x4372ae
  43721b:	cmp    r11d,0x6f
  43721f:	jne    0x437162
  437225:	and    dh,0x4
  437228:	jne    0x43724a
  43722a:	lea    r14d,[r12-0x1]
  43722f:	mov    rdi,r10
  437232:	jmp    0x4370ba
  437237:	nop    WORD PTR [rax+rax*1+0x0]
  437240:	test   r8d,r8d
  437243:	js     0x437209
  437245:	and    dh,0x4
  437248:	je     0x43722a
  43724a:	mov    rdi,r10
  43724d:	mov    r13d,r12d
  437250:	jmp    0x4371ef
  437252:	and    edi,0xfffff7ff
  437258:	mov    DWORD PTR [rbx+0x8],edi
  43725b:	jmp    0x436fee
  437260:	lea    r8d,[r12-0x3]
  437265:	mov    r12d,r8d
  437268:	mov    eax,r12d
  43726b:	lea    rcx,[r10+rax*1+0x1]
  437270:	mov    rax,r10
  437273:	add    rax,0x1
  437277:	mov    BYTE PTR [rax-0x1],0x30
  43727b:	cmp    rax,rcx
  43727e:	jne    0x437273
  437280:	movsxd rax,r8d
  437283:	cmp    r11d,0x6f
  437287:	lea    r10,[r10+rax*1+0x1]
  43728c:	je     0x4372a0
  43728e:	mov    eax,edx
  437290:	mov    r13d,0xffffffff
  437296:	and    eax,0x800
  43729b:	jmp    0x43719d
  4372a0:	mov    rdi,r10
  4372a3:	mov    r13d,0xffffffff
  4372a9:	jmp    0x4371a8
  4372ae:	sub    r12d,0x1
  4372b2:	mov    r8d,r12d
  4372b5:	jmp    0x437268
  4372b7:	mov    r13d,r12d
  4372ba:	jmp    0x43718d
  4372bf:	lea    esi,[r13-0x1]
  4372c3:	jmp    0x437110
  4372c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4372d0:	push   r13
  4372d2:	push   r12
  4372d4:	push   rbp
  4372d5:	push   rdi
  4372d6:	push   rsi
  4372d7:	push   rbx
  4372d8:	sub    rsp,0x68
  4372dc:	mov    r9,QWORD PTR [rcx]
  4372df:	mov    r10d,DWORD PTR [rcx+0x8]
  4372e3:	mov    rbx,rdx
  4372e6:	mov    rax,r9
  4372e9:	mov    QWORD PTR [rsp+0x30],r9
  4372ee:	mov    DWORD PTR [rsp+0x38],r10d
  4372f3:	shr    rax,0x20
  4372f7:	mov    r8,r10
  4372fa:	and    eax,0x7fffffff
  4372ff:	or     r9d,eax
  437302:	lea    eax,[r10+r10*1]
  437306:	mov    edx,r9d
  437309:	neg    edx
  43730b:	and    eax,0xfffe
  437310:	or     edx,r9d
  437313:	shr    edx,0x1f
  437316:	or     edx,eax
  437318:	mov    eax,0xfffe
  43731d:	sub    eax,edx
  43731f:	sar    eax,0x10
  437322:	test   eax,eax
  437324:	jne    0x437710
  43732a:	movzx  esi,WORD PTR [rsp+0x38]
  43732f:	mov    ecx,esi
  437331:	and    ecx,0x8000
  437337:	je     0x437340
  437339:	or     DWORD PTR [rbx+0x8],0x80
  437340:	and    r8w,0x7fff
  437346:	cmp    r8w,0x7fff
  43734c:	jne    0x437370
  43734e:	test   r9d,r9d
  437351:	jne    0x437370
  437353:	lea    rdx,[rip+0x11eaa]        # 0x449204
  43735a:	mov    r8,rbx
  43735d:	call   0x436340
  437362:	jmp    0x4376e5
  437367:	nop    WORD PTR [rax+rax*1+0x0]
  437370:	and    si,0x7fff
  437375:	jne    0x4374a0
  43737b:	mov    rax,QWORD PTR [rsp+0x30]
  437380:	test   rax,rax
  437383:	jne    0x43772f
  437389:	mov    r9d,DWORD PTR [rbx+0x10]
  43738d:	cmp    r9d,0xe
  437391:	jbe    0x4377ac
  437397:	xor    esi,esi
  437399:	mov    r8d,DWORD PTR [rbx+0x8]
  43739d:	lea    rbp,[rsp+0x40]
  4373a2:	test   r9d,r9d
  4373a5:	jle    0x4377bc
  4373ab:	lea    rax,[rbp+0x1]
  4373af:	mov    BYTE PTR [rsp+0x40],0x2e
  4373b4:	mov    r10d,DWORD PTR [rbx+0xc]
  4373b8:	lea    rdi,[rax+0x1]
  4373bc:	mov    BYTE PTR [rax],0x30
  4373bf:	mov    r12d,0x2
  4373c5:	test   r10d,r10d
  4373c8:	jg     0x4375cc
  4373ce:	xchg   ax,ax
  4373d0:	test   r8b,0x80
  4373d4:	jne    0x437690
  4373da:	test   r8d,0x100
  4373e1:	jne    0x437780
  4373e7:	and    r8d,0x40
  4373eb:	jne    0x437792
  4373f1:	mov    rdx,rbx
  4373f4:	mov    ecx,0x30
  4373f9:	call   0x4360b0
  4373fe:	mov    ecx,DWORD PTR [rbx+0x8]
  437401:	mov    rdx,rbx
  437404:	and    ecx,0x20
  437407:	or     ecx,0x58
  43740a:	call   0x4360b0
  43740f:	mov    eax,DWORD PTR [rbx+0xc]
  437412:	test   eax,eax
  437414:	jle    0x43743c
  437416:	test   BYTE PTR [rbx+0x9],0x2
  43741a:	je     0x43743c
  43741c:	sub    eax,0x1
  43741f:	mov    DWORD PTR [rbx+0xc],eax
  437422:	mov    rdx,rbx
  437425:	mov    ecx,0x30
  43742a:	call   0x4360b0
  43742f:	mov    eax,DWORD PTR [rbx+0xc]
  437432:	lea    edx,[rax-0x1]
  437435:	test   eax,eax
  437437:	mov    DWORD PTR [rbx+0xc],edx
  43743a:	jg     0x437422
  43743c:	cmp    rdi,rbp
  43743f:	lea    r13,[rsp+0x2e]
  437444:	ja     0x437479
  437446:	jmp    0x4376af
  43744b:	nop    DWORD PTR [rax+rax*1+0x0]
  437450:	movzx  eax,WORD PTR [rbx+0x20]
  437454:	test   ax,ax
  437457:	mov    WORD PTR [rsp+0x2e],ax
  43745c:	je     0x437470
  43745e:	mov    r8,rbx
  437461:	mov    edx,0x1
  437466:	mov    rcx,r13
  437469:	call   0x436110
  43746e:	xchg   ax,ax
  437470:	cmp    rdi,rbp
  437473:	je     0x4376af
  437479:	sub    rdi,0x1
  43747d:	movsx  ecx,BYTE PTR [rdi]
  437480:	cmp    ecx,0x2e
  437483:	je     0x4376f2
  437489:	cmp    ecx,0x2c
  43748c:	je     0x437450
  43748e:	mov    rdx,rbx
  437491:	call   0x4360b0
  437496:	jmp    0x437470
  437498:	nop    DWORD PTR [rax+rax*1+0x0]
  4374a0:	mov    r9d,DWORD PTR [rbx+0x10]
  4374a4:	sub    si,0x3fff
  4374a9:	mov    rax,QWORD PTR [rsp+0x30]
  4374ae:	cmp    r9d,0xe
  4374b2:	ja     0x43775d
  4374b8:	test   rax,rax
  4374bb:	js     0x4374c5
  4374bd:	nop    DWORD PTR [rax]
  4374c0:	add    rax,rax
  4374c3:	jns    0x4374c0
  4374c5:	mov    ecx,0xe
  4374ca:	mov    edx,0x4
  4374cf:	shr    rax,1
  4374d2:	sub    ecx,r9d
  4374d5:	shl    ecx,0x2
  4374d8:	shl    rdx,cl
  4374db:	add    rax,rdx
  4374de:	js     0x4377a4
  4374e4:	add    rax,rax
  4374e7:	mov    ecx,0xf
  4374ec:	sub    ecx,r9d
  4374ef:	shl    ecx,0x2
  4374f2:	shr    rax,cl
  4374f5:	mov    r8d,DWORD PTR [rbx+0x8]
  4374f9:	lea    rbp,[rsp+0x40]
  4374fe:	mov    rdi,rbp
  437501:	mov    r11d,r8d
  437504:	mov    r10d,r8d
  437507:	and    r11d,0x800
  43750e:	and    r10d,0x20
  437512:	jmp    0x437543
  437514:	mov    ecx,DWORD PTR [rbx+0x10]
  437517:	test   ecx,ecx
  437519:	jle    0x437521
  43751b:	sub    ecx,0x1
  43751e:	mov    DWORD PTR [rbx+0x10],ecx
  437521:	shr    rax,0x4
  437525:	mov    r9,rdi
  437528:	test   edx,edx
  43752a:	je     0x437594
  43752c:	cmp    edx,0x9
  43752f:	lea    rdi,[r9+0x1]
  437533:	jle    0x4375a7
  437535:	add    edx,0x37
  437538:	or     edx,r10d
  43753b:	mov    BYTE PTR [r9],dl
  43753e:	test   rax,rax
  437541:	je     0x4375b0
  437543:	mov    edx,eax
  437545:	and    edx,0xf
  437548:	cmp    edx,eax
  43754a:	jne    0x437514
  43754c:	cmp    rdi,rbp
  43754f:	ja     0x437562
  437551:	test   r11d,r11d
  437554:	jne    0x437562
  437556:	mov    r12d,DWORD PTR [rbx+0x10]
  43755a:	mov    r9,rdi
  43755d:	test   r12d,r12d
  437560:	jle    0x437569
  437562:	lea    r9,[rdi+0x1]
  437566:	mov    BYTE PTR [rdi],0x2e
  437569:	cmp    rax,0x1
  43756d:	jbe    0x437779
  437573:	lea    ecx,[rsi-0x1]
  437576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437580:	shr    rax,1
  437583:	mov    esi,ecx
  437585:	cmp    rax,0x1
  437589:	lea    ecx,[rsi-0x1]
  43758c:	jne    0x437580
  43758e:	xor    al,al
  437590:	test   edx,edx
  437592:	jne    0x43752c
  437594:	cmp    r9,rbp
  437597:	ja     0x4375a3
  437599:	mov    ecx,DWORD PTR [rbx+0x10]
  43759c:	mov    rdi,r9
  43759f:	test   ecx,ecx
  4375a1:	js     0x43753e
  4375a3:	lea    rdi,[r9+0x1]
  4375a7:	add    edx,0x30
  4375aa:	jmp    0x43753b
  4375ac:	nop    DWORD PTR [rax+0x0]
  4375b0:	cmp    rdi,rbp
  4375b3:	je     0x4377b3
  4375b9:	mov    r10d,DWORD PTR [rbx+0xc]
  4375bd:	mov    r12d,0x2
  4375c3:	test   r10d,r10d
  4375c6:	jle    0x4373d0
  4375cc:	mov    edx,DWORD PTR [rbx+0x10]
  4375cf:	mov    rax,rdi
  4375d2:	movsx  r11d,si
  4375d6:	sub    rax,rbp
  4375d9:	lea    ecx,[rdx+rax*1]
  4375dc:	test   edx,edx
  4375de:	mov    edx,r8d
  4375e1:	cmovg  eax,ecx
  4375e4:	and    edx,0x1c0
  4375ea:	mov    ecx,0x66666667
  4375ef:	cmp    edx,0x1
  4375f2:	sbb    edx,edx
  4375f4:	lea    r9d,[rax+rdx*1+0x6]
  4375f9:	mov    eax,r11d
  4375fc:	imul   ecx
  4375fe:	mov    eax,r11d
  437601:	sar    eax,0x1f
  437604:	mov    ecx,edx
  437606:	sar    ecx,0x2
  437609:	sub    ecx,eax
  43760b:	je     0x437630
  43760d:	mov    r11d,0x66666667
  437613:	mov    eax,ecx
  437615:	sar    ecx,0x1f
  437618:	add    r9d,0x1
  43761c:	imul   r11d
  43761f:	add    r12d,0x1
  437623:	sar    edx,0x2
  437626:	sub    edx,ecx
  437628:	mov    ecx,edx
  43762a:	jne    0x437613
  43762c:	movsx  r12d,r12w
  437630:	cmp    r10d,r9d
  437633:	jle    0x437700
  437639:	sub    r10d,r9d
  43763c:	test   r8d,0x600
  437643:	jne    0x437770
  437649:	lea    eax,[r10-0x1]
  43764d:	test   r10d,r10d
  437650:	mov    DWORD PTR [rbx+0xc],eax
  437653:	jle    0x4373d0
  437659:	nop    DWORD PTR [rax+0x0]
  437660:	mov    rdx,rbx
  437663:	mov    ecx,0x20
  437668:	call   0x4360b0
  43766d:	mov    eax,DWORD PTR [rbx+0xc]
  437670:	lea    edx,[rax-0x1]
  437673:	test   eax,eax
  437675:	mov    DWORD PTR [rbx+0xc],edx
  437678:	jg     0x437660
  43767a:	mov    r8d,DWORD PTR [rbx+0x8]
  43767e:	test   r8b,0x80
  437682:	je     0x4373da
  437688:	nop    DWORD PTR [rax+rax*1+0x0]
  437690:	mov    rdx,rbx
  437693:	mov    ecx,0x2d
  437698:	call   0x4360b0
  43769d:	jmp    0x4373f1
  4376a2:	mov    rdx,rbx
  4376a5:	mov    ecx,0x30
  4376aa:	call   0x4360b0
  4376af:	mov    eax,DWORD PTR [rbx+0x10]
  4376b2:	lea    edx,[rax-0x1]
  4376b5:	test   eax,eax
  4376b7:	mov    DWORD PTR [rbx+0x10],edx
  4376ba:	jg     0x4376a2
  4376bc:	mov    ecx,DWORD PTR [rbx+0x8]
  4376bf:	mov    rdx,rbx
  4376c2:	and    ecx,0x20
  4376c5:	or     ecx,0x50
  4376c8:	call   0x4360b0
  4376cd:	add    DWORD PTR [rbx+0xc],r12d
  4376d1:	or     DWORD PTR [rbx+0x8],0x1c0
  4376d8:	movsx  rcx,si
  4376dc:	mov    rdx,rbx
  4376df:	call   0x436920
  4376e4:	nop
  4376e5:	add    rsp,0x68
  4376e9:	pop    rbx
  4376ea:	pop    rsi
  4376eb:	pop    rdi
  4376ec:	pop    rbp
  4376ed:	pop    r12
  4376ef:	pop    r13
  4376f1:	ret    
  4376f2:	mov    rcx,rbx
  4376f5:	call   0x4363e0
  4376fa:	jmp    0x437470
  4376ff:	nop
  437700:	mov    DWORD PTR [rbx+0xc],0xffffffff
  437707:	jmp    0x4373d0
  43770c:	nop    DWORD PTR [rax+0x0]
  437710:	lea    rdx,[rip+0x11ae9]        # 0x449200
  437717:	mov    r8,rbx
  43771a:	xor    ecx,ecx
  43771c:	call   0x436340
  437721:	nop
  437722:	add    rsp,0x68
  437726:	pop    rbx
  437727:	pop    rsi
  437728:	pop    rdi
  437729:	pop    rbp
  43772a:	pop    r12
  43772c:	pop    r13
  43772e:	ret    
  43772f:	js     0x4377d1
  437735:	mov    edx,0xffffc001
  43773a:	nop    WORD PTR [rax+rax*1+0x0]
  437740:	mov    esi,edx
  437742:	sub    edx,0x1
  437745:	add    rax,rax
  437748:	jns    0x437740
  43774a:	mov    r9d,DWORD PTR [rbx+0x10]
  43774e:	cmp    r9d,0xe
  437752:	jbe    0x4374c5
  437758:	jmp    0x4374f5
  43775d:	test   rax,rax
  437760:	jne    0x4374f5
  437766:	jmp    0x437399
  43776b:	nop    DWORD PTR [rax+rax*1+0x0]
  437770:	mov    DWORD PTR [rbx+0xc],r10d
  437774:	jmp    0x4373d0
  437779:	xor    eax,eax
  43777b:	jmp    0x437528
  437780:	mov    rdx,rbx
  437783:	mov    ecx,0x2b
  437788:	call   0x4360b0
  43778d:	jmp    0x4373f1
  437792:	mov    rdx,rbx
  437795:	mov    ecx,0x20
  43779a:	call   0x4360b0
  43779f:	jmp    0x4373f1
  4377a4:	add    esi,0x1
  4377a7:	jmp    0x4374e7
  4377ac:	xor    eax,eax
  4377ae:	jmp    0x4374c0
  4377b3:	mov    r9d,DWORD PTR [rbx+0x10]
  4377b7:	jmp    0x4373a2
  4377bc:	test   r8d,0x800
  4377c3:	mov    rax,rbp
  4377c6:	je     0x4373b4
  4377cc:	jmp    0x4373ab
  4377d1:	mov    esi,0xffffc002
  4377d6:	jmp    0x43774a
  4377db:	nop    DWORD PTR [rax+rax*1+0x0]
  4377e0:	push   r15
  4377e2:	push   r14
  4377e4:	push   r13
  4377e6:	push   r12
  4377e8:	push   rbp
  4377e9:	push   rdi
  4377ea:	push   rsi
  4377eb:	push   rbx
  4377ec:	sub    rsp,0xb8
  4377f3:	mov    r13,QWORD PTR [rsp+0x120]
  4377fb:	mov    r15d,ecx
  4377fe:	mov    rdi,rdx
  437801:	mov    esi,r8d
  437804:	mov    rbx,r9
  437807:	and    r15d,0x6000
  43780e:	call   0x43a830
  437813:	mov    eax,DWORD PTR [rax]
  437815:	lea    rcx,[rip+0x11a01]        # 0x44921d
  43781c:	xor    edx,edx
  43781e:	mov    QWORD PTR [rsp+0x80],rdi
  437826:	mov    DWORD PTR [rsp+0x88],r15d
  43782e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  437839:	mov    DWORD PTR [rsp+0x90],0xffffffff
  437844:	mov    DWORD PTR [rsp+0x34],eax
  437848:	xor    eax,eax
  43784a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  437855:	mov    WORD PTR [rsp+0x98],ax
  43785d:	mov    DWORD PTR [rsp+0x9c],0x0
  437868:	mov    WORD PTR [rsp+0xa0],dx
  437870:	mov    DWORD PTR [rsp+0xa4],0x0
  43787b:	mov    DWORD PTR [rsp+0xa8],esi
  437882:	call   0x43a730
  437887:	test   rax,rax
  43788a:	je     0x43789c
  43788c:	movsx  edx,BYTE PTR [rax]
  43788f:	mov    eax,0x2
  437894:	sub    edx,0x30
  437897:	cmp    edx,0x2
  43789a:	jbe    0x4378a9
  43789c:	call   0x43a980
  4378a1:	and    eax,0x1
  4378a4:	neg    eax
  4378a6:	add    eax,0x3
  4378a9:	lea    rdi,[rsp+0x70]
  4378ae:	mov    DWORD PTR [rsp+0xac],eax
  4378b5:	movzx  eax,BYTE PTR [rbx]
  4378b8:	lea    rsi,[rsp+0x6e]
  4378bd:	lea    r12,[rsp+0x80]
  4378c5:	lea    rbp,[rip+0x11968]        # 0x449234
  4378cc:	mov    QWORD PTR [rsp+0x28],rdi
  4378d1:	lea    rdi,[rsp+0x50]
  4378d6:	mov    QWORD PTR [rsp+0x38],rsi
  4378db:	mov    QWORD PTR [rsp+0x20],rdi
  4378e0:	mov    edi,r15d
  4378e3:	or     edi,0x200
  4378e9:	mov    DWORD PTR [rsp+0x48],edi
  4378ed:	nop    DWORD PTR [rax]
  4378f0:	movsx  ecx,al
  4378f3:	lea    rsi,[rbx+0x1]
  4378f7:	test   ecx,ecx
  4378f9:	je     0x43797a
  4378fb:	cmp    ecx,0x25
  4378fe:	jne    0x437960
  437900:	movzx  eax,BYTE PTR [rbx+0x1]
  437904:	xor    r10d,r10d
  437907:	xor    r14d,r14d
  43790a:	mov    DWORD PTR [rsp+0x88],r15d
  437912:	mov    DWORD PTR [rsp+0x90],0xffffffff
  43791d:	mov    rdi,rsi
  437920:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  43792b:	lea    r11,[r12+0xc]
  437930:	test   al,al
  437932:	je     0x437adb
  437938:	lea    edx,[rax-0x20]
  43793b:	lea    rbx,[rdi+0x1]
  43793f:	movsx  ecx,al
  437942:	cmp    dl,0x5a
  437945:	ja     0x437f50
  43794b:	movzx  edx,dl
  43794e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  437953:	add    rdx,rbp
  437956:	jmp    rdx
  437958:	nop    DWORD PTR [rax+rax*1+0x0]
  437960:	mov    rdx,r12
  437963:	call   0x4360b0
  437968:	movzx  eax,BYTE PTR [rbx+0x1]
  43796c:	mov    rbx,rsi
  43796f:	lea    rsi,[rbx+0x1]
  437973:	movsx  ecx,al
  437976:	test   ecx,ecx
  437978:	jne    0x4378fb
  43797a:	mov    eax,DWORD PTR [rsp+0xa4]
  437981:	add    rsp,0xb8
  437988:	pop    rbx
  437989:	pop    rsi
  43798a:	pop    rdi
  43798b:	pop    rbp
  43798c:	pop    r12
  43798e:	pop    r13
  437990:	pop    r14
  437992:	pop    r15
  437994:	ret    
  437995:	sub    r10d,0x2
  437999:	mov    rax,r13
  43799c:	cmp    r10d,0x1
  4379a0:	jbe    0x437f93
  4379a6:	mov    rsi,QWORD PTR [rax]
  4379a9:	add    r13,0x8
  4379ad:	test   rsi,rsi
  4379b0:	je     0x437a75
  4379b6:	mov    rcx,rsi
  4379b9:	call   0x43a620
  4379be:	mov    edx,eax
  4379c0:	mov    r8,r12
  4379c3:	mov    rcx,rsi
  4379c6:	call   0x436230
  4379cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4379d0:	movzx  eax,BYTE PTR [rbx]
  4379d3:	jmp    0x4378f0
  4379d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4379e0:	test   r14d,r14d
  4379e3:	jne    0x4379f3
  4379e5:	cmp    DWORD PTR [rsp+0x88],r15d
  4379ed:	je     0x43815b
  4379f3:	mov    rdx,QWORD PTR [r13+0x0]
  4379f7:	lea    rsi,[r13+0x8]
  4379fb:	mov    r8,r12
  4379fe:	mov    ecx,0x78
  437a03:	mov    QWORD PTR [rsp+0x78],0x0
  437a0c:	mov    r13,rsi
  437a0f:	mov    QWORD PTR [rsp+0x70],rdx
  437a14:	call   0x436f10
  437a19:	jmp    0x4379d0
  437a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a20:	cmp    r10d,0x5
  437a24:	mov    rax,QWORD PTR [r13+0x0]
  437a28:	je     0x43809a
  437a2e:	cmp    r10d,0x1
  437a32:	je     0x438124
  437a38:	cmp    r10d,0x2
  437a3c:	je     0x437a48
  437a3e:	cmp    r10d,0x3
  437a42:	je     0x4381cc
  437a48:	mov    edx,DWORD PTR [rsp+0xa4]
  437a4f:	add    r13,0x8
  437a53:	mov    DWORD PTR [rax],edx
  437a55:	jmp    0x4379d0
  437a5a:	nop    WORD PTR [rax+rax*1+0x0]
  437a60:	mov    ecx,DWORD PTR [rsp+0x34]
  437a64:	call   0x43a630
  437a69:	test   rax,rax
  437a6c:	mov    rsi,rax
  437a6f:	jne    0x4379b6
  437a75:	mov    edx,0x6
  437a7a:	lea    rsi,[rip+0x11795]        # 0x449216
  437a81:	jmp    0x4379c0
  437a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437a90:	movzx  eax,BYTE PTR [rdi+0x1]
  437a94:	mov    r10d,0x2
  437a9a:	mov    r14d,0x4
  437aa0:	cmp    al,0x6c
  437aa2:	jne    0x437ad0
  437aa4:	lea    rbx,[rdi+0x2]
  437aa8:	movzx  eax,BYTE PTR [rdi+0x2]
  437aac:	mov    r10d,0x3
  437ab2:	mov    r14d,0x4
  437ab8:	jmp    0x437ad0
  437aba:	nop    WORD PTR [rax+rax*1+0x0]
  437ac0:	movzx  eax,BYTE PTR [rdi+0x1]
  437ac4:	mov    r10d,0x3
  437aca:	mov    r14d,0x4
  437ad0:	test   al,al
  437ad2:	mov    rdi,rbx
  437ad5:	jne    0x437938
  437adb:	mov    rbx,rdi
  437ade:	jmp    0x4378f0
  437ae3:	mov    eax,DWORD PTR [rsp+0x88]
  437aea:	mov    rdx,r13
  437aed:	add    r13,0x8
  437af1:	or     eax,0x20
  437af4:	test   al,0x4
  437af6:	mov    DWORD PTR [rsp+0x88],eax
  437afd:	je     0x437d5b
  437b03:	mov    rax,QWORD PTR [rdx]
  437b06:	mov    rcx,QWORD PTR [rsp+0x20]
  437b0b:	mov    rdx,r12
  437b0e:	fld    TBYTE PTR [rax]
  437b10:	fstp   TBYTE PTR [rsp+0x50]
  437b14:	call   0x436d70
  437b19:	jmp    0x4379d0
  437b1e:	xchg   ax,ax
  437b20:	movzx  eax,BYTE PTR [rdi+0x1]
  437b24:	mov    r10d,0x1
  437b2a:	mov    r14d,0x4
  437b30:	cmp    al,0x68
  437b32:	jne    0x437ad0
  437b34:	lea    rbx,[rdi+0x2]
  437b38:	movzx  eax,BYTE PTR [rdi+0x2]
  437b3c:	mov    r10d,0x5
  437b42:	mov    r14d,0x4
  437b48:	jmp    0x437ad0
  437b4a:	nop    WORD PTR [rax+rax*1+0x0]
  437b50:	mov    eax,DWORD PTR [rsp+0x88]
  437b57:	mov    rdx,r13
  437b5a:	add    r13,0x8
  437b5e:	or     eax,0x20
  437b61:	test   al,0x4
  437b63:	mov    DWORD PTR [rsp+0x88],eax
  437b6a:	je     0x437d89
  437b70:	mov    rax,QWORD PTR [rdx]
  437b73:	mov    rcx,QWORD PTR [rsp+0x20]
  437b78:	mov    rdx,r12
  437b7b:	fld    TBYTE PTR [rax]
  437b7d:	fstp   TBYTE PTR [rsp+0x50]
  437b81:	call   0x436830
  437b86:	jmp    0x4379d0
  437b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  437b90:	mov    eax,DWORD PTR [rsp+0x88]
  437b97:	mov    rdx,r13
  437b9a:	add    r13,0x8
  437b9e:	or     eax,0x20
  437ba1:	test   al,0x4
  437ba3:	mov    DWORD PTR [rsp+0x88],eax
  437baa:	je     0x437db7
  437bb0:	mov    rax,QWORD PTR [rdx]
  437bb3:	mov    rcx,QWORD PTR [rsp+0x20]
  437bb8:	mov    rdx,r12
  437bbb:	fld    TBYTE PTR [rax]
  437bbd:	fstp   TBYTE PTR [rsp+0x50]
  437bc1:	call   0x436cc0
  437bc6:	jmp    0x4379d0
  437bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  437bd0:	cmp    r10d,0x3
  437bd4:	je     0x4380ac
  437bda:	cmp    r10d,0x2
  437bde:	je     0x438149
  437be4:	mov    eax,DWORD PTR [r13+0x0]
  437be8:	cmp    r10d,0x1
  437bec:	lea    rdx,[r13+0x8]
  437bf0:	mov    QWORD PTR [rsp+0x70],rax
  437bf5:	je     0x43818b
  437bfb:	cmp    r10d,0x5
  437bff:	mov    r13,rdx
  437c02:	je     0x4381e0
  437c08:	cmp    ecx,0x75
  437c0b:	je     0x4380ec
  437c11:	mov    r8,r12
  437c14:	mov    rdx,rax
  437c17:	call   0x436f10
  437c1c:	jmp    0x4379d0
  437c21:	sub    r10d,0x2
  437c25:	mov    rax,r13
  437c28:	mov    DWORD PTR [rsp+0x90],0xffffffff
  437c33:	cmp    r10d,0x1
  437c37:	jbe    0x437ddb
  437c3d:	mov    eax,DWORD PTR [rax]
  437c3f:	mov    rcx,QWORD PTR [rsp+0x28]
  437c44:	mov    r8,r12
  437c47:	mov    edx,0x1
  437c4c:	add    r13,0x8
  437c50:	mov    BYTE PTR [rsp+0x70],al
  437c54:	call   0x436230
  437c59:	jmp    0x4379d0
  437c5e:	xchg   ax,ax
  437c60:	mov    eax,DWORD PTR [rsp+0x88]
  437c67:	mov    rdx,r13
  437c6a:	add    r13,0x8
  437c6e:	or     eax,0x20
  437c71:	test   al,0x4
  437c73:	mov    DWORD PTR [rsp+0x88],eax
  437c7a:	je     0x437e18
  437c80:	mov    rax,QWORD PTR [rdx]
  437c83:	mov    rcx,QWORD PTR [rsp+0x20]
  437c88:	mov    rdx,r12
  437c8b:	fld    TBYTE PTR [rax]
  437c8d:	fstp   TBYTE PTR [rsp+0x50]
  437c91:	call   0x4372d0
  437c96:	jmp    0x4379d0
  437c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  437ca0:	or     DWORD PTR [rsp+0x88],0x80
  437cab:	cmp    r10d,0x3
  437caf:	je     0x438088
  437cb5:	cmp    r10d,0x2
  437cb9:	je     0x438137
  437cbf:	movsxd rcx,DWORD PTR [r13+0x0]
  437cc3:	cmp    r10d,0x1
  437cc7:	lea    rax,[r13+0x8]
  437ccb:	mov    QWORD PTR [rsp+0x70],rcx
  437cd0:	je     0x43819d
  437cd6:	cmp    r10d,0x5
  437cda:	mov    r13,rax
  437cdd:	je     0x4381ef
  437ce3:	mov    rax,rcx
  437ce6:	mov    rdx,r12
  437ce9:	sar    rax,0x3f
  437ced:	mov    QWORD PTR [rsp+0x78],rax
  437cf2:	call   0x436920
  437cf7:	jmp    0x4379d0
  437cfc:	nop    DWORD PTR [rax+0x0]
  437d00:	or     DWORD PTR [rsp+0x88],0x4
  437d08:	movzx  eax,BYTE PTR [rdi+0x1]
  437d0c:	mov    r14d,0x4
  437d12:	jmp    0x437ad0
  437d17:	nop    WORD PTR [rax+rax*1+0x0]
  437d20:	movzx  eax,BYTE PTR [rdi+0x1]
  437d24:	cmp    al,0x36
  437d26:	je     0x438068
  437d2c:	cmp    al,0x33
  437d2e:	je     0x4380fc
  437d34:	mov    r10d,0x3
  437d3a:	mov    r14d,0x4
  437d40:	jmp    0x437ad0
  437d45:	mov    eax,DWORD PTR [rsp+0x88]
  437d4c:	mov    rdx,r13
  437d4f:	add    r13,0x8
  437d53:	test   al,0x4
  437d55:	jne    0x437b03
  437d5b:	mov    rcx,QWORD PTR [rsp+0x20]
  437d60:	fld    QWORD PTR [rdx]
  437d62:	mov    rdx,r12
  437d65:	fstp   TBYTE PTR [rsp+0x50]
  437d69:	call   0x436d70
  437d6e:	jmp    0x4379d0
  437d73:	mov    eax,DWORD PTR [rsp+0x88]
  437d7a:	mov    rdx,r13
  437d7d:	add    r13,0x8
  437d81:	test   al,0x4
  437d83:	jne    0x437b70
  437d89:	mov    rcx,QWORD PTR [rsp+0x20]
  437d8e:	fld    QWORD PTR [rdx]
  437d90:	mov    rdx,r12
  437d93:	fstp   TBYTE PTR [rsp+0x50]
  437d97:	call   0x436830
  437d9c:	jmp    0x4379d0
  437da1:	mov    eax,DWORD PTR [rsp+0x88]
  437da8:	mov    rdx,r13
  437dab:	add    r13,0x8
  437daf:	test   al,0x4
  437db1:	jne    0x437bb0
  437db7:	mov    rcx,QWORD PTR [rsp+0x20]
  437dbc:	fld    QWORD PTR [rdx]
  437dbe:	mov    rdx,r12
  437dc1:	fstp   TBYTE PTR [rsp+0x50]
  437dc5:	call   0x436cc0
  437dca:	jmp    0x4379d0
  437dcf:	nop
  437dd0:	mov    DWORD PTR [rsp+0x90],0xffffffff
  437ddb:	mov    eax,DWORD PTR [r13+0x0]
  437ddf:	mov    rcx,QWORD PTR [rsp+0x28]
  437de4:	lea    rsi,[r13+0x8]
  437de8:	mov    r8,r12
  437deb:	mov    edx,0x1
  437df0:	mov    r13,rsi
  437df3:	mov    WORD PTR [rsp+0x70],ax
  437df8:	call   0x436110
  437dfd:	jmp    0x4379d0
  437e02:	mov    eax,DWORD PTR [rsp+0x88]
  437e09:	mov    rdx,r13
  437e0c:	add    r13,0x8
  437e10:	test   al,0x4
  437e12:	jne    0x437c80
  437e18:	mov    rcx,QWORD PTR [rsp+0x20]
  437e1d:	fld    QWORD PTR [rdx]
  437e1f:	mov    rdx,r12
  437e22:	fstp   TBYTE PTR [rsp+0x50]
  437e26:	call   0x4372d0
  437e2b:	jmp    0x4379d0
  437e30:	test   r14d,r14d
  437e33:	jne    0x437fd0
  437e39:	or     DWORD PTR [rsp+0x88],0x200
  437e44:	movzx  eax,BYTE PTR [rdi+0x1]
  437e48:	jmp    0x437ad0
  437e4d:	nop    DWORD PTR [rax]
  437e50:	cmp    r14d,0x1
  437e54:	jbe    0x4380be
  437e5a:	movzx  eax,BYTE PTR [rdi+0x1]
  437e5e:	mov    r14d,0x4
  437e64:	jmp    0x437ad0
  437e69:	nop    DWORD PTR [rax+0x0]
  437e70:	test   r14d,r14d
  437e73:	jne    0x437ef9
  437e79:	or     DWORD PTR [rsp+0x88],0x400
  437e84:	movzx  eax,BYTE PTR [rdi+0x1]
  437e88:	jmp    0x437ad0
  437e8d:	nop    DWORD PTR [rax]
  437e90:	test   r14d,r14d
  437e93:	jne    0x437ef9
  437e95:	or     DWORD PTR [rsp+0x88],0x100
  437ea0:	movzx  eax,BYTE PTR [rdi+0x1]
  437ea4:	jmp    0x437ad0
  437ea9:	nop    DWORD PTR [rax+0x0]
  437eb0:	test   r14d,r14d
  437eb3:	jne    0x437ef9
  437eb5:	or     DWORD PTR [rsp+0x88],0x800
  437ec0:	movzx  eax,BYTE PTR [rdi+0x1]
  437ec4:	jmp    0x437ad0
  437ec9:	nop    DWORD PTR [rax+0x0]
  437ed0:	test   r14d,r14d
  437ed3:	jne    0x437ef9
  437ed5:	or     DWORD PTR [rsp+0x88],0x40
  437edd:	movzx  eax,BYTE PTR [rdi+0x1]
  437ee1:	jmp    0x437ad0
  437ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437ef0:	test   r14d,r14d
  437ef3:	je     0x438002
  437ef9:	movzx  eax,BYTE PTR [rdi+0x1]
  437efd:	jmp    0x437ad0
  437f02:	mov    rdx,r12
  437f05:	call   0x4360b0
  437f0a:	jmp    0x4379d0
  437f0f:	nop
  437f10:	test   r11,r11
  437f13:	je     0x437e5a
  437f19:	test   r14d,0xfffffffd
  437f20:	jne    0x437ff0
  437f26:	mov    eax,DWORD PTR [r13+0x0]
  437f2a:	lea    rdx,[r13+0x8]
  437f2e:	test   eax,eax
  437f30:	mov    DWORD PTR [r11],eax
  437f33:	js     0x4381b0
  437f39:	movzx  eax,BYTE PTR [rdi+0x1]
  437f3d:	mov    r13,rdx
  437f40:	xor    r11d,r11d
  437f43:	jmp    0x437ad0
  437f48:	nop    DWORD PTR [rax+rax*1+0x0]
  437f50:	sub    eax,0x30
  437f53:	cmp    al,0x9
  437f55:	ja     0x438176
  437f5b:	cmp    r14d,0x3
  437f5f:	ja     0x438176
  437f65:	test   r14d,r14d
  437f68:	jne    0x437fda
  437f6a:	mov    r14d,0x1
  437f70:	test   r11,r11
  437f73:	je     0x437ef9
  437f75:	mov    eax,DWORD PTR [r11]
  437f78:	test   eax,eax
  437f7a:	js     0x4380dd
  437f80:	lea    eax,[rax+rax*4]
  437f83:	lea    eax,[rcx+rax*2-0x30]
  437f87:	mov    DWORD PTR [r11],eax
  437f8a:	movzx  eax,BYTE PTR [rdi+0x1]
  437f8e:	jmp    0x437ad0
  437f93:	mov    rsi,QWORD PTR [r13+0x0]
  437f97:	lea    rax,[rip+0x1126a]        # 0x449208
  437f9e:	lea    rdi,[r13+0x8]
  437fa2:	mov    r13,rdi
  437fa5:	test   rsi,rsi
  437fa8:	cmove  rsi,rax
  437fac:	mov    rcx,rsi
  437faf:	call   0x43a5b8
  437fb4:	mov    r8,r12
  437fb7:	mov    edx,eax
  437fb9:	mov    rcx,rsi
  437fbc:	call   0x436110
  437fc1:	jmp    0x4379d0
  437fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437fd0:	cmp    r14d,0x3
  437fd4:	ja     0x438176
  437fda:	cmp    r14d,0x2
  437fde:	mov    eax,0x3
  437fe3:	cmove  r14d,eax
  437fe7:	jmp    0x437f70
  437fe9:	nop    DWORD PTR [rax+0x0]
  437ff0:	movzx  eax,BYTE PTR [rdi+0x1]
  437ff4:	xor    r11d,r11d
  437ff7:	mov    r14d,0x4
  437ffd:	jmp    0x437ad0
  438002:	mov    DWORD PTR [rsp+0x4c],r10d
  438007:	mov    QWORD PTR [rsp+0x40],r11
  43800c:	or     DWORD PTR [rsp+0x88],0x1000
  438017:	mov    DWORD PTR [rsp+0x70],0x0
  43801f:	call   0x43a6d0
  438024:	mov    r9,QWORD PTR [rsp+0x28]
  438029:	mov    rdx,QWORD PTR [rax+0x8]
  43802d:	mov    r8d,0x10
  438033:	mov    rcx,QWORD PTR [rsp+0x38]
  438038:	call   0x4356d0
  43803d:	test   eax,eax
  43803f:	mov    r11,QWORD PTR [rsp+0x40]
  438044:	mov    r10d,DWORD PTR [rsp+0x4c]
  438049:	jle    0x438058
  43804b:	movzx  edx,WORD PTR [rsp+0x6e]
  438050:	mov    WORD PTR [rsp+0xa0],dx
  438058:	mov    DWORD PTR [rsp+0x9c],eax
  43805f:	movzx  eax,BYTE PTR [rdi+0x1]
  438063:	jmp    0x437ad0
  438068:	cmp    BYTE PTR [rdi+0x2],0x34
  43806c:	je     0x4381ff
  438072:	mov    eax,0x36
  438077:	mov    r10d,0x3
  43807d:	mov    r14d,0x4
  438083:	jmp    0x437ad0
  438088:	mov    rcx,QWORD PTR [r13+0x0]
  43808c:	add    r13,0x8
  438090:	mov    QWORD PTR [rsp+0x70],rcx
  438095:	jmp    0x437ce3
  43809a:	mov    edx,DWORD PTR [rsp+0xa4]
  4380a1:	add    r13,0x8
  4380a5:	mov    BYTE PTR [rax],dl
  4380a7:	jmp    0x4379d0
  4380ac:	mov    rax,QWORD PTR [r13+0x0]
  4380b0:	add    r13,0x8
  4380b4:	mov    QWORD PTR [rsp+0x70],rax
  4380b9:	jmp    0x437c08
  4380be:	mov    DWORD PTR [rsp+0x90],0x0
  4380c9:	movzx  eax,BYTE PTR [rdi+0x1]
  4380cd:	lea    r11,[r12+0x10]
  4380d2:	mov    r14d,0x2
  4380d8:	jmp    0x437ad0
  4380dd:	sub    ecx,0x30
  4380e0:	movzx  eax,BYTE PTR [rdi+0x1]
  4380e4:	mov    DWORD PTR [r11],ecx
  4380e7:	jmp    0x437ad0
  4380ec:	mov    rdx,r12
  4380ef:	mov    rcx,rax
  4380f2:	call   0x436920
  4380f7:	jmp    0x4379d0
  4380fc:	cmp    BYTE PTR [rdi+0x2],0x32
  438100:	mov    eax,0x33
  438105:	jne    0x437d34
  43810b:	lea    rbx,[rdi+0x3]
  43810f:	movzx  eax,BYTE PTR [rdi+0x3]
  438113:	mov    r10d,0x2
  438119:	mov    r14d,0x4
  43811f:	jmp    0x437ad0
  438124:	mov    edx,DWORD PTR [rsp+0xa4]
  43812b:	add    r13,0x8
  43812f:	mov    WORD PTR [rax],dx
  438132:	jmp    0x4379d0
  438137:	movsxd rcx,DWORD PTR [r13+0x0]
  43813b:	add    r13,0x8
  43813f:	mov    QWORD PTR [rsp+0x70],rcx
  438144:	jmp    0x437ce3
  438149:	mov    eax,DWORD PTR [r13+0x0]
  43814d:	add    r13,0x8
  438151:	mov    QWORD PTR [rsp+0x70],rax
  438156:	jmp    0x437c08
  43815b:	mov    eax,DWORD PTR [rsp+0x48]
  43815f:	mov    DWORD PTR [rsp+0x90],0x10
  43816a:	mov    DWORD PTR [rsp+0x88],eax
  438171:	jmp    0x4379f3
  438176:	mov    rdx,r12
  438179:	mov    ecx,0x25
  43817e:	mov    rbx,rsi
  438181:	call   0x4360b0
  438186:	jmp    0x4379d0
  43818b:	movzx  eax,WORD PTR [rsp+0x70]
  438190:	mov    r13,rdx
  438193:	mov    QWORD PTR [rsp+0x70],rax
  438198:	jmp    0x437c08
  43819d:	movsx  rcx,WORD PTR [rsp+0x70]
  4381a3:	mov    r13,rax
  4381a6:	mov    QWORD PTR [rsp+0x70],rcx
  4381ab:	jmp    0x437ce3
  4381b0:	test   r14d,r14d
  4381b3:	jne    0x438218
  4381b5:	or     DWORD PTR [rsp+0x88],0x400
  4381c0:	neg    DWORD PTR [rsp+0x8c]
  4381c7:	jmp    0x437f39
  4381cc:	movsxd rdx,DWORD PTR [rsp+0xa4]
  4381d4:	add    r13,0x8
  4381d8:	mov    QWORD PTR [rax],rdx
  4381db:	jmp    0x4379d0
  4381e0:	movzx  eax,BYTE PTR [rsp+0x70]
  4381e5:	mov    QWORD PTR [rsp+0x70],rax
  4381ea:	jmp    0x437c08
  4381ef:	movsx  rcx,BYTE PTR [rsp+0x70]
  4381f5:	mov    QWORD PTR [rsp+0x70],rcx
  4381fa:	jmp    0x437ce3
  4381ff:	lea    rbx,[rdi+0x3]
  438203:	movzx  eax,BYTE PTR [rdi+0x3]
  438207:	mov    r10d,0x3
  43820d:	mov    r14d,0x4
  438213:	jmp    0x437ad0
  438218:	mov    DWORD PTR [rsp+0x90],0xffffffff
  438223:	movzx  eax,BYTE PTR [rdi+0x1]
  438227:	mov    r13,rdx
  43822a:	xor    r11d,r11d
  43822d:	jmp    0x437ad0
  438232:	nop
  438233:	nop
  438234:	nop
  438235:	nop
  438236:	nop
  438237:	nop
  438238:	nop
  438239:	nop
  43823a:	nop
  43823b:	nop
  43823c:	nop
  43823d:	nop
  43823e:	nop
  43823f:	nop
  438240:	push   rbx
  438241:	sub    rsp,0x20
  438245:	xor    ebx,ebx
  438247:	cmp    ecx,0x1b
  43824a:	jle    0x43825d
  43824c:	mov    eax,0x4
  438251:	add    eax,eax
  438253:	add    ebx,0x1
  438256:	lea    edx,[rax+0x17]
  438259:	cmp    edx,ecx
  43825b:	jl     0x438251
  43825d:	mov    ecx,ebx
  43825f:	call   0x439b30
  438264:	mov    DWORD PTR [rax],ebx
  438266:	add    rax,0x4
  43826a:	add    rsp,0x20
  43826e:	pop    rbx
  43826f:	ret    
  438270:	push   rsi
  438271:	push   rbx
  438272:	sub    rsp,0x28
  438276:	mov    rbx,rcx
  438279:	mov    ecx,r8d
  43827c:	mov    rsi,rdx
  43827f:	call   0x438240
  438284:	movzx  ecx,BYTE PTR [rbx]
  438287:	lea    r8,[rbx+0x1]
  43828b:	test   cl,cl
  43828d:	mov    BYTE PTR [rax],cl
  43828f:	mov    rcx,rax
  438292:	je     0x4382a9
  438294:	add    r8,0x1
  438298:	movzx  r9d,BYTE PTR [r8-0x1]
  43829d:	add    rcx,0x1
  4382a1:	test   r9b,r9b
  4382a4:	mov    BYTE PTR [rcx],r9b
  4382a7:	jne    0x438294
  4382a9:	test   rsi,rsi
  4382ac:	je     0x4382b1
  4382ae:	mov    QWORD PTR [rsi],rcx
  4382b1:	add    rsp,0x28
  4382b5:	pop    rbx
  4382b6:	pop    rsi
  4382b7:	ret    
  4382b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4382c0:	mov    edx,0x1
  4382c5:	mov    rax,rcx
  4382c8:	mov    ecx,DWORD PTR [rcx-0x4]
  4382cb:	shl    edx,cl
  4382cd:	mov    DWORD PTR [rax+0x4],ecx
  4382d0:	lea    rcx,[rax-0x4]
  4382d4:	mov    DWORD PTR [rax+0x8],edx
  4382d7:	jmp    0x439c40
  4382dc:	nop    DWORD PTR [rax+0x0]
  4382e0:	push   r15
  4382e2:	push   r14
  4382e4:	push   r13
  4382e6:	push   r12
  4382e8:	push   rbp
  4382e9:	push   rdi
  4382ea:	push   rsi
  4382eb:	push   rbx
  4382ec:	sub    rsp,0x38
  4382f0:	xor    eax,eax
  4382f2:	mov    edi,DWORD PTR [rdx+0x14]
  4382f5:	cmp    edi,DWORD PTR [rcx+0x14]
  4382f8:	mov    r15,rdx
  4382fb:	jg     0x438449
  438301:	sub    edi,0x1
  438304:	lea    rbx,[rdx+0x18]
  438308:	lea    r12,[rcx+0x18]
  43830c:	movsxd r13,edi
  43830f:	xor    edx,edx
  438311:	shl    r13,0x2
  438315:	lea    rbp,[rbx+r13*1]
  438319:	add    r13,r12
  43831c:	mov    eax,DWORD PTR [rbp+0x0]
  43831f:	lea    r8d,[rax+0x1]
  438323:	mov    eax,DWORD PTR [r13+0x0]
  438327:	div    r8d
  43832a:	test   eax,eax
  43832c:	mov    r14d,eax
  43832f:	mov    DWORD PTR [rsp+0x2c],eax
  438333:	je     0x4383c7
  438339:	mov    edx,eax
  43833b:	mov    rsi,rbx
  43833e:	mov    r11,r12
  438341:	xor    eax,eax
  438343:	xor    r10d,r10d
  438346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438350:	add    rsi,0x4
  438354:	mov    r8d,DWORD PTR [rsi-0x4]
  438358:	mov    r9d,DWORD PTR [r11]
  43835b:	add    r11,0x4
  43835f:	imul   r8,rdx
  438363:	add    r8,rax
  438366:	mov    rax,r8
  438369:	mov    r8d,r8d
  43836c:	sub    r9,r8
  43836f:	shr    rax,0x20
  438373:	sub    r9,r10
  438376:	mov    r10,r9
  438379:	mov    DWORD PTR [r11-0x4],r9d
  43837d:	shr    r10,0x20
  438381:	and    r10d,0x1
  438385:	cmp    rbp,rsi
  438388:	jae    0x438350
  43838a:	mov    r11d,DWORD PTR [r13+0x0]
  43838e:	test   r11d,r11d
  438391:	jne    0x4383c7
  438393:	lea    rax,[r13-0x4]
  438397:	cmp    r12,rax
  43839a:	jae    0x4383c4
  43839c:	mov    r10d,DWORD PTR [r13-0x4]
  4383a0:	test   r10d,r10d
  4383a3:	je     0x4383b8
  4383a5:	jmp    0x4383c4
  4383a7:	nop    WORD PTR [rax+rax*1+0x0]
  4383b0:	mov    r9d,DWORD PTR [rax]
  4383b3:	test   r9d,r9d
  4383b6:	jne    0x4383c4
  4383b8:	sub    rax,0x4
  4383bc:	sub    edi,0x1
  4383bf:	cmp    r12,rax
  4383c2:	jb     0x4383b0
  4383c4:	mov    DWORD PTR [rcx+0x14],edi
  4383c7:	mov    rdx,r15
  4383ca:	mov    rsi,rcx
  4383cd:	call   0x43a160
  4383d2:	test   eax,eax
  4383d4:	js     0x438445
  4383d6:	lea    eax,[r14+0x1]
  4383da:	mov    rcx,r12
  4383dd:	xor    edx,edx
  4383df:	mov    DWORD PTR [rsp+0x2c],eax
  4383e3:	add    rbx,0x4
  4383e7:	mov    eax,DWORD PTR [rcx]
  4383e9:	mov    r8d,DWORD PTR [rbx-0x4]
  4383ed:	add    rcx,0x4
  4383f1:	sub    rax,r8
  4383f4:	sub    rax,rdx
  4383f7:	mov    rdx,rax
  4383fa:	mov    DWORD PTR [rcx-0x4],eax
  4383fd:	shr    rdx,0x20
  438401:	and    edx,0x1
  438404:	cmp    rbp,rbx
  438407:	jae    0x4383e3
  438409:	movsxd rax,edi
  43840c:	lea    rdx,[r12+rax*4]
  438410:	mov    r8d,DWORD PTR [rdx]
  438413:	test   r8d,r8d
  438416:	jne    0x438445
  438418:	lea    rax,[rdx-0x4]
  43841c:	cmp    r12,rax
  43841f:	jae    0x438442
  438421:	mov    ecx,DWORD PTR [rdx-0x4]
  438424:	test   ecx,ecx
  438426:	je     0x438436
  438428:	jmp    0x438442
  43842a:	nop    WORD PTR [rax+rax*1+0x0]
  438430:	mov    edx,DWORD PTR [rax]
  438432:	test   edx,edx
  438434:	jne    0x438442
  438436:	sub    rax,0x4
  43843a:	sub    edi,0x1
  43843d:	cmp    r12,rax
  438440:	jb     0x438430
  438442:	mov    DWORD PTR [rsi+0x14],edi
  438445:	mov    eax,DWORD PTR [rsp+0x2c]
  438449:	add    rsp,0x38
  43844d:	pop    rbx
  43844e:	pop    rsi
  43844f:	pop    rdi
  438450:	pop    rbp
  438451:	pop    r12
  438453:	pop    r13
  438455:	pop    r14
  438457:	pop    r15
  438459:	ret    
  43845a:	nop
  43845b:	nop
  43845c:	nop
  43845d:	nop
  43845e:	nop
  43845f:	nop
  438460:	push   r15
  438462:	push   r14
  438464:	push   r13
  438466:	push   r12
  438468:	push   rbp
  438469:	push   rdi
  43846a:	push   rsi
  43846b:	push   rbx
  43846c:	sub    rsp,0xb8
  438473:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  43847b:	mov    r12d,DWORD PTR [r9]
  43847e:	mov    eax,r12d
  438481:	and    eax,0xffffffcf
  438484:	mov    DWORD PTR [r9],eax
  438487:	mov    eax,r12d
  43848a:	and    eax,0x7
  43848d:	cmp    eax,0x4
  438490:	ja     0x4398c3
  438496:	mov    r13d,edx
  438499:	lea    rdx,[rip+0x10f10]        # 0x4493b0
  4384a0:	mov    QWORD PTR [rsp+0x28],r9
  4384a5:	mov    r15,r8
  4384a8:	mov    rbp,rcx
  4384ab:	movsxd rax,DWORD PTR [rdx+rax*4]
  4384af:	add    rdx,rax
  4384b2:	jmp    rdx
  4384b4:	mov    edi,DWORD PTR [rcx]
  4384b6:	xor    ecx,ecx
  4384b8:	cmp    edi,0x20
  4384bb:	jle    0x4384cb
  4384bd:	mov    eax,0x20
  4384c2:	add    eax,eax
  4384c4:	add    ecx,0x1
  4384c7:	cmp    edi,eax
  4384c9:	jg     0x4384c2
  4384cb:	call   0x439b30
  4384d0:	mov    rsi,rax
  4384d3:	lea    eax,[rdi-0x1]
  4384d6:	lea    r9,[rsi+0x18]
  4384da:	sar    eax,0x5
  4384dd:	cdqe   
  4384df:	mov    rdx,r9
  4384e2:	lea    r11,[r15+rax*4]
  4384e6:	mov    rax,r15
  4384e9:	nop    DWORD PTR [rax+0x0]
  4384f0:	mov    ecx,DWORD PTR [rax]
  4384f2:	add    rax,0x4
  4384f6:	add    rdx,0x4
  4384fa:	cmp    r11,rax
  4384fd:	mov    DWORD PTR [rdx-0x4],ecx
  438500:	jae    0x4384f0
  438502:	sub    rdx,r9
  438505:	sar    rdx,0x2
  438509:	mov    r14d,edx
  43850c:	movsxd rdx,edx
  43850f:	lea    rax,[r9+rdx*4-0x4]
  438514:	jmp    0x43852f
  438516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438520:	sub    rax,0x4
  438524:	test   edx,edx
  438526:	mov    r14d,edx
  438529:	je     0x438a30
  43852f:	mov    r8d,DWORD PTR [rax]
  438532:	lea    edx,[r14-0x1]
  438536:	test   r8d,r8d
  438539:	je     0x438520
  43853b:	movsxd rdx,edx
  43853e:	mov    DWORD PTR [rsi+0x14],r14d
  438542:	shl    r14d,0x5
  438546:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  43854b:	xor    eax,0x1f
  43854e:	sub    r14d,eax
  438551:	mov    rcx,rsi
  438554:	call   0x4399d0
  438559:	test   eax,eax
  43855b:	mov    DWORD PTR [rsp+0x9c],eax
  438562:	mov    r11d,r13d
  438565:	jne    0x438a40
  43856b:	mov    ecx,DWORD PTR [rsi+0x14]
  43856e:	test   ecx,ecx
  438570:	jne    0x438620
  438576:	mov    rcx,rsi
  438579:	call   0x439c40
  43857e:	mov    rax,QWORD PTR [rsp+0x130]
  438586:	mov    rdx,QWORD PTR [rsp+0x138]
  43858e:	lea    rcx,[rip+0x10e18]        # 0x4493ad
  438595:	mov    r8d,0x1
  43859b:	mov    DWORD PTR [rax],0x1
  4385a1:	call   0x438270
  4385a6:	nop
  4385a7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  4385af:	add    rsp,0xb8
  4385b6:	pop    rbx
  4385b7:	pop    rsi
  4385b8:	pop    rdi
  4385b9:	pop    rbp
  4385ba:	pop    r12
  4385bc:	pop    r13
  4385be:	pop    r14
  4385c0:	pop    r15
  4385c2:	ret    
  4385c3:	mov    rax,QWORD PTR [rsp+0x130]
  4385cb:	mov    rdx,QWORD PTR [rsp+0x138]
  4385d3:	lea    rcx,[rip+0x10dcf]        # 0x4493a9
  4385da:	mov    r8d,0x3
  4385e0:	mov    DWORD PTR [rax],0xffff8000
  4385e6:	call   0x438270
  4385eb:	jmp    0x4385a7
  4385ed:	nop    DWORD PTR [rax]
  4385f0:	mov    rax,QWORD PTR [rsp+0x130]
  4385f8:	mov    rdx,QWORD PTR [rsp+0x138]
  438600:	lea    rcx,[rip+0x10d99]        # 0x4493a0
  438607:	mov    r8d,0x8
  43860d:	mov    DWORD PTR [rax],0xffff8000
  438613:	call   0x438270
  438618:	jmp    0x4385a7
  43861a:	nop    WORD PTR [rax+rax*1+0x0]
  438620:	lea    rdx,[rsp+0x9c]
  438628:	mov    rcx,rsi
  43862b:	mov    DWORD PTR [rsp+0x30],r11d
  438630:	call   0x43a2f0
  438635:	movq   rdx,xmm0
  43863a:	movq   r9,xmm0
  43863f:	mov    r11d,DWORD PTR [rsp+0x30]
  438644:	pxor   xmm0,xmm0
  438648:	shr    rdx,0x20
  43864c:	mov    r9d,r9d
  43864f:	and    edx,0xfffff
  438655:	lea    ecx,[r11+r14*1-0x1]
  43865a:	or     edx,0x3ff00000
  438660:	mov    rax,rdx
  438663:	cvtsi2sd xmm0,ecx
  438667:	shl    rax,0x20
  43866b:	mov    ebx,ecx
  43866d:	or     r9,rax
  438670:	sar    ebx,0x1f
  438673:	mov    QWORD PTR [rsp+0x30],r9
  438678:	mov    eax,ebx
  43867a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  438680:	xor    eax,ecx
  438682:	sub    eax,ebx
  438684:	subsd  xmm1,QWORD PTR [rip+0x10d3c]        # 0x4493c8
  43868c:	sub    eax,0x435
  438691:	test   eax,eax
  438693:	mulsd  xmm0,QWORD PTR [rip+0x10d45]        # 0x4493e0
  43869b:	mulsd  xmm1,QWORD PTR [rip+0x10d2d]        # 0x4493d0
  4386a3:	addsd  xmm1,QWORD PTR [rip+0x10d2d]        # 0x4493d8
  4386ab:	addsd  xmm1,xmm0
  4386af:	jle    0x4386c5
  4386b1:	pxor   xmm0,xmm0
  4386b5:	cvtsi2sd xmm0,eax
  4386b9:	mulsd  xmm0,QWORD PTR [rip+0x10d27]        # 0x4493e8
  4386c1:	addsd  xmm1,xmm0
  4386c5:	cvttsd2si eax,xmm1
  4386c9:	pxor   xmm6,xmm6
  4386cd:	ucomisd xmm6,xmm1
  4386d1:	mov    DWORD PTR [rsp+0x30],eax
  4386d5:	ja     0x438f63
  4386db:	mov    eax,ecx
  4386dd:	mov    r9d,r9d
  4386e0:	mov    DWORD PTR [rsp+0x6c],0x1
  4386e8:	shl    eax,0x14
  4386eb:	add    eax,edx
  4386ed:	shl    rax,0x20
  4386f1:	or     r9,rax
  4386f4:	cmp    DWORD PTR [rsp+0x30],0x16
  4386f9:	mov    QWORD PTR [rsp+0x80],r9
  438701:	ja     0x438730
  438703:	movsxd rax,DWORD PTR [rsp+0x30]
  438708:	mov    rdx,QWORD PTR [rip+0x11041]        # 0x449750
  43870f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  438714:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  43871d:	jbe    0x438a80
  438723:	sub    DWORD PTR [rsp+0x30],0x1
  438728:	mov    DWORD PTR [rsp+0x6c],0x0
  438730:	mov    eax,r14d
  438733:	mov    DWORD PTR [rsp+0x50],0x0
  43873b:	sub    eax,ecx
  43873d:	sub    eax,0x1
  438740:	mov    DWORD PTR [rsp+0x40],eax
  438744:	js     0x438f50
  43874a:	mov    eax,DWORD PTR [rsp+0x30]
  43874e:	test   eax,eax
  438750:	js     0x438f30
  438756:	add    DWORD PTR [rsp+0x40],eax
  43875a:	mov    DWORD PTR [rsp+0x88],eax
  438761:	mov    DWORD PTR [rsp+0x58],0x0
  438769:	cmp    DWORD PTR [rsp+0x120],0x9
  438771:	ja     0x438a60
  438777:	cmp    DWORD PTR [rsp+0x120],0x5
  43877f:	jle    0x438a6b
  438785:	sub    DWORD PTR [rsp+0x120],0x4
  43878d:	xor    eax,eax
  43878f:	cmp    DWORD PTR [rsp+0x120],0x3
  438797:	je     0x439124
  43879d:	jle    0x438e83
  4387a3:	cmp    DWORD PTR [rsp+0x120],0x4
  4387ab:	mov    DWORD PTR [rsp+0x60],0x1
  4387b3:	je     0x438a90
  4387b9:	cmp    DWORD PTR [rsp+0x120],0x5
  4387c1:	jne    0x438e99
  4387c7:	mov    ebx,DWORD PTR [rsp+0x30]
  4387cb:	add    ebx,DWORD PTR [rsp+0x128]
  4387d2:	mov    DWORD PTR [rsp+0x8c],ebx
  4387d9:	add    ebx,0x1
  4387dc:	test   ebx,ebx
  4387de:	mov    DWORD PTR [rsp+0x68],ebx
  4387e2:	mov    ecx,ebx
  4387e4:	jle    0x439360
  4387ea:	cmp    ebx,0xe
  4387ed:	mov    DWORD PTR [rsp+0x9c],ebx
  4387f4:	setbe  bl
  4387f7:	and    ebx,eax
  4387f9:	mov    QWORD PTR [rsp+0x78],r9
  4387fe:	mov    DWORD PTR [rsp+0x70],r11d
  438803:	call   0x438240
  438808:	mov    QWORD PTR [rsp+0x48],rax
  43880d:	mov    eax,DWORD PTR [rbp+0xc]
  438810:	mov    r11d,DWORD PTR [rsp+0x70]
  438815:	mov    r9,QWORD PTR [rsp+0x78]
  43881a:	sub    eax,0x1
  43881d:	mov    DWORD PTR [rsp+0x38],eax
  438821:	je     0x438848
  438823:	mov    ecx,DWORD PTR [rsp+0x38]
  438827:	mov    eax,0x2
  43882c:	test   ecx,ecx
  43882e:	cmovns eax,ecx
  438831:	and    r12d,0x8
  438835:	mov    DWORD PTR [rsp+0x38],eax
  438839:	je     0x438848
  43883b:	mov    eax,0x3
  438840:	sub    eax,DWORD PTR [rsp+0x38]
  438844:	mov    DWORD PTR [rsp+0x38],eax
  438848:	test   bl,bl
  43884a:	je     0x438b40
  438850:	mov    eax,DWORD PTR [rsp+0x38]
  438854:	or     eax,DWORD PTR [rsp+0x30]
  438858:	jne    0x438b40
  43885e:	mov    eax,DWORD PTR [rsp+0x6c]
  438862:	mov    DWORD PTR [rsp+0x9c],0x0
  43886d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  438876:	test   eax,eax
  438878:	je     0x43888c
  43887a:	movsd  xmm0,QWORD PTR [rip+0x10b76]        # 0x4493f8
  438882:	ucomisd xmm0,xmm4
  438886:	ja     0x4396bb
  43888c:	movapd xmm0,xmm4
  438890:	mov    r12d,DWORD PTR [rsp+0x68]
  438895:	addsd  xmm0,xmm4
  438899:	addsd  xmm0,QWORD PTR [rip+0x10b6f]        # 0x449410
  4388a1:	movq   rdx,xmm0
  4388a6:	movq   rax,xmm0
  4388ab:	shr    rdx,0x20
  4388af:	mov    eax,eax
  4388b1:	sub    edx,0x3400000
  4388b7:	shl    rdx,0x20
  4388bb:	or     rax,rdx
  4388be:	test   r12d,r12d
  4388c1:	je     0x438af7
  4388c7:	mov    r9d,DWORD PTR [rsp+0x68]
  4388cc:	movapd xmm0,xmm4
  4388d0:	xor    ecx,ecx
  4388d2:	mov    ebx,DWORD PTR [rsp+0x60]
  4388d6:	lea    edx,[r9-0x1]
  4388da:	movsxd rdx,edx
  4388dd:	test   ebx,ebx
  4388df:	je     0x439403
  4388e5:	mov    r10,QWORD PTR [rip+0x10e64]        # 0x449750
  4388ec:	movsd  xmm1,QWORD PTR [rip+0x10b3c]        # 0x449430
  4388f4:	mov    QWORD PTR [rsp+0x38],rax
  4388f9:	cvttsd2si eax,xmm0
  4388fd:	pxor   xmm2,xmm2
  438901:	mov    DWORD PTR [rsp+0x9c],0x0
  43890c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  438912:	mov    rdx,QWORD PTR [rsp+0x48]
  438917:	mov    rbx,rdx
  43891a:	add    rbx,0x1
  43891e:	cvtsi2sd xmm2,eax
  438922:	add    eax,0x30
  438925:	mov    BYTE PTR [rdx],al
  438927:	movsd  xmm5,QWORD PTR [rsp+0x38]
  43892d:	subsd  xmm0,xmm2
  438931:	subsd  xmm1,xmm5
  438935:	ucomisd xmm1,xmm0
  438939:	ja     0x4389d4
  43893f:	movsd  xmm5,QWORD PTR [rip+0x10ab1]        # 0x4493f8
  438947:	movapd xmm2,xmm5
  43894b:	subsd  xmm2,xmm0
  43894f:	ucomisd xmm1,xmm2
  438953:	ja     0x4394d7
  438959:	mov    eax,DWORD PTR [rsp+0x9c]
  438960:	movsd  xmm3,QWORD PTR [rip+0x10a98]        # 0x449400
  438968:	add    eax,0x1
  43896b:	cmp    r9d,eax
  43896e:	mov    DWORD PTR [rsp+0x9c],eax
  438975:	jg     0x4389ac
  438977:	jmp    0x438b2e
  43897c:	nop    DWORD PTR [rax+0x0]
  438980:	movapd xmm2,xmm5
  438984:	subsd  xmm2,xmm0
  438988:	ucomisd xmm1,xmm2
  43898c:	ja     0x4394d7
  438992:	mov    eax,DWORD PTR [rsp+0x9c]
  438999:	add    eax,0x1
  43899c:	cmp    r9d,eax
  43899f:	mov    DWORD PTR [rsp+0x9c],eax
  4389a6:	jle    0x438b2e
  4389ac:	mulsd  xmm0,xmm3
  4389b0:	add    rbx,0x1
  4389b4:	pxor   xmm2,xmm2
  4389b8:	mulsd  xmm1,xmm3
  4389bc:	cvttsd2si eax,xmm0
  4389c0:	cvtsi2sd xmm2,eax
  4389c4:	add    eax,0x30
  4389c7:	mov    BYTE PTR [rbx-0x1],al
  4389ca:	subsd  xmm0,xmm2
  4389ce:	ucomisd xmm1,xmm0
  4389d2:	jbe    0x438980
  4389d4:	ucomisd xmm0,xmm6
  4389d8:	lea    ebp,[rcx+0x1]
  4389db:	jp     0x4389e3
  4389dd:	je     0x439337
  4389e3:	mov    r15d,0x10
  4389e9:	nop    DWORD PTR [rax+0x0]
  4389f0:	mov    rcx,rsi
  4389f3:	call   0x439c40
  4389f8:	cmp    QWORD PTR [rsp+0x138],0x0
  438a01:	mov    rax,QWORD PTR [rsp+0x130]
  438a09:	mov    BYTE PTR [rbx],0x0
  438a0c:	mov    DWORD PTR [rax],ebp
  438a0e:	je     0x438a1b
  438a10:	mov    rax,QWORD PTR [rsp+0x138]
  438a18:	mov    QWORD PTR [rax],rbx
  438a1b:	mov    rax,QWORD PTR [rsp+0x28]
  438a20:	or     DWORD PTR [rax],r15d
  438a23:	mov    rax,QWORD PTR [rsp+0x48]
  438a28:	jmp    0x4385a7
  438a2d:	nop    DWORD PTR [rax]
  438a30:	mov    DWORD PTR [rsi+0x14],0x0
  438a37:	jmp    0x438551
  438a3c:	nop    DWORD PTR [rax+0x0]
  438a40:	mov    edx,eax
  438a42:	mov    rcx,rsi
  438a45:	call   0x4398d0
  438a4a:	mov    eax,DWORD PTR [rsp+0x9c]
  438a51:	lea    r11d,[r13+rax*1+0x0]
  438a56:	sub    r14d,eax
  438a59:	jmp    0x43856b
  438a5e:	xchg   ax,ax
  438a60:	mov    DWORD PTR [rsp+0x120],0x0
  438a6b:	add    ecx,0x3fe
  438a71:	cmp    ecx,0x7f7
  438a77:	setbe  al
  438a7a:	jmp    0x43878f
  438a7f:	nop
  438a80:	mov    DWORD PTR [rsp+0x6c],0x0
  438a88:	jmp    0x438730
  438a8d:	nop    DWORD PTR [rax]
  438a90:	mov    edx,DWORD PTR [rsp+0x128]
  438a97:	test   edx,edx
  438a99:	jle    0x43934b
  438a9f:	cmp    DWORD PTR [rsp+0x128],0xe
  438aa7:	setbe  bl
  438aaa:	mov    ecx,DWORD PTR [rsp+0x128]
  438ab1:	and    ebx,eax
  438ab3:	mov    DWORD PTR [rsp+0x9c],ecx
  438aba:	mov    DWORD PTR [rsp+0x8c],ecx
  438ac1:	mov    DWORD PTR [rsp+0x68],ecx
  438ac5:	jmp    0x4387f9
  438aca:	movapd xmm0,xmm4
  438ace:	addsd  xmm0,xmm4
  438ad2:	addsd  xmm0,QWORD PTR [rip+0x10936]        # 0x449410
  438ada:	movq   rdx,xmm0
  438adf:	movq   rax,xmm0
  438ae4:	shr    rdx,0x20
  438ae8:	mov    eax,eax
  438aea:	sub    edx,0x3400000
  438af0:	shl    rdx,0x20
  438af4:	or     rax,rdx
  438af7:	movapd xmm1,xmm4
  438afb:	mov    QWORD PTR [rsp+0x38],rax
  438b00:	movsd  xmm0,QWORD PTR [rsp+0x38]
  438b06:	subsd  xmm1,QWORD PTR [rip+0x1090a]        # 0x449418
  438b0e:	ucomisd xmm1,xmm0
  438b12:	ja     0x4393f4
  438b18:	movsd  xmm2,QWORD PTR [rip+0x10900]        # 0x449420
  438b20:	xorpd  xmm0,xmm2
  438b24:	ucomisd xmm0,xmm1
  438b28:	ja     0x438f0d
  438b2e:	movq   r9,xmm4
  438b33:	mov    DWORD PTR [rsp+0x38],0x0
  438b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  438b40:	test   r11d,r11d
  438b43:	js     0x438be2
  438b49:	movsxd rax,DWORD PTR [rsp+0x30]
  438b4e:	cmp    eax,DWORD PTR [rbp+0x14]
  438b51:	jg     0x438be2
  438b57:	mov    ebx,DWORD PTR [rsp+0x68]
  438b5b:	mov    rdx,QWORD PTR [rip+0x10bee]        # 0x449750
  438b62:	test   ebx,ebx
  438b64:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  438b69:	jg     0x439273
  438b6f:	mov    eax,DWORD PTR [rsp+0x128]
  438b76:	shr    eax,0x1f
  438b79:	test   al,al
  438b7b:	je     0x439273
  438b81:	test   ebx,ebx
  438b83:	jne    0x438f0d
  438b89:	mulsd  xmm2,QWORD PTR [rip+0x10887]        # 0x449418
  438b91:	mov    QWORD PTR [rsp+0x38],r9
  438b96:	movsd  xmm5,QWORD PTR [rsp+0x38]
  438b9c:	ucomisd xmm2,xmm5
  438ba0:	jae    0x438f0d
  438ba6:	mov    ebp,DWORD PTR [rsp+0x30]
  438baa:	xor    r12d,r12d
  438bad:	xor    edi,edi
  438baf:	add    ebp,0x2
  438bb2:	mov    rax,QWORD PTR [rsp+0x48]
  438bb7:	mov    r15d,0x20
  438bbd:	lea    rbx,[rax+0x1]
  438bc1:	mov    BYTE PTR [rax],0x31
  438bc4:	mov    rcx,r12
  438bc7:	call   0x439c40
  438bcc:	test   rdi,rdi
  438bcf:	je     0x4389f0
  438bd5:	mov    rcx,rdi
  438bd8:	call   0x439c40
  438bdd:	jmp    0x4389f0
  438be2:	mov    r9d,DWORD PTR [rsp+0x60]
  438be7:	test   r9d,r9d
  438bea:	je     0x4390f0
  438bf0:	mov    edx,DWORD PTR [rbp+0x4]
  438bf3:	sub    edi,r14d
  438bf6:	mov    ecx,r11d
  438bf9:	lea    eax,[rdi+0x1]
  438bfc:	sub    ecx,edi
  438bfe:	cmp    ecx,edx
  438c00:	mov    DWORD PTR [rsp+0x9c],eax
  438c07:	jge    0x438c3c
  438c09:	mov    ebx,DWORD PTR [rsp+0x120]
  438c10:	lea    ecx,[rbx-0x3]
  438c13:	and    ecx,0xfffffffd
  438c16:	je     0x438c3c
  438c18:	mov    ebx,DWORD PTR [rsp+0x68]
  438c1c:	sub    r11d,edx
  438c1f:	lea    eax,[r11+0x1]
  438c23:	test   ebx,ebx
  438c25:	mov    DWORD PTR [rsp+0x9c],eax
  438c2c:	setg   cl
  438c2f:	cmp    ebx,eax
  438c31:	setl   dl
  438c34:	test   cl,dl
  438c36:	je     0x43937f
  438c3c:	cmp    DWORD PTR [rsp+0x120],0x1
  438c44:	jle    0x43937f
  438c4a:	mov    ebx,DWORD PTR [rsp+0x58]
  438c4e:	mov    eax,DWORD PTR [rsp+0x68]
  438c52:	mov    r12d,ebx
  438c55:	sub    eax,0x1
  438c58:	sub    r12d,eax
  438c5b:	cmp    ebx,eax
  438c5d:	jge    0x438c73
  438c5f:	mov    edx,eax
  438c61:	sub    edx,DWORD PTR [rsp+0x58]
  438c65:	xor    r12d,r12d
  438c68:	add    DWORD PTR [rsp+0x88],edx
  438c6f:	mov    DWORD PTR [rsp+0x58],eax
  438c73:	mov    eax,DWORD PTR [rsp+0x68]
  438c77:	test   eax,eax
  438c79:	js     0x439612
  438c7f:	mov    ebx,DWORD PTR [rsp+0x50]
  438c83:	mov    DWORD PTR [rsp+0x9c],eax
  438c8a:	mov    ecx,0x1
  438c8f:	add    DWORD PTR [rsp+0x50],eax
  438c93:	add    DWORD PTR [rsp+0x40],eax
  438c97:	call   0x439d70
  438c9c:	mov    rdi,rax
  438c9f:	mov    ecx,DWORD PTR [rsp+0x40]
  438ca3:	test   ecx,ecx
  438ca5:	mov    eax,ecx
  438ca7:	jle    0x438cc5
  438ca9:	test   ebx,ebx
  438cab:	jle    0x438cc5
  438cad:	cmp    ecx,ebx
  438caf:	cmovg  eax,ebx
  438cb2:	sub    DWORD PTR [rsp+0x50],eax
  438cb6:	sub    ecx,eax
  438cb8:	mov    DWORD PTR [rsp+0x9c],eax
  438cbf:	sub    ebx,eax
  438cc1:	mov    DWORD PTR [rsp+0x40],ecx
  438cc5:	mov    r8d,DWORD PTR [rsp+0x58]
  438cca:	test   r8d,r8d
  438ccd:	jle    0x438d1b
  438ccf:	mov    ecx,DWORD PTR [rsp+0x60]
  438cd3:	test   ecx,ecx
  438cd5:	je     0x439110
  438cdb:	test   r12d,r12d
  438cde:	jle    0x438d0e
  438ce0:	mov    rcx,rdi
  438ce3:	mov    edx,r12d
  438ce6:	call   0x439ed0
  438ceb:	mov    rdx,rsi
  438cee:	mov    rcx,rax
  438cf1:	mov    rdi,rax
  438cf4:	call   0x439da0
  438cf9:	mov    rcx,rsi
  438cfc:	mov    QWORD PTR [rsp+0x70],rax
  438d01:	call   0x439c40
  438d06:	mov    rax,QWORD PTR [rsp+0x70]
  438d0b:	mov    rsi,rax
  438d0e:	mov    edx,DWORD PTR [rsp+0x58]
  438d12:	sub    edx,r12d
  438d15:	jne    0x439114
  438d1b:	mov    ecx,0x1
  438d20:	call   0x439d70
  438d25:	mov    r12,rax
  438d28:	mov    eax,DWORD PTR [rsp+0x88]
  438d2f:	test   eax,eax
  438d31:	jle    0x438e60
  438d37:	mov    rcx,r12
  438d3a:	mov    edx,eax
  438d3c:	call   0x439ed0
  438d41:	cmp    DWORD PTR [rsp+0x120],0x1
  438d49:	mov    r12,rax
  438d4c:	jg     0x438d58
  438d4e:	cmp    r14d,0x1
  438d52:	je     0x438e1c
  438d58:	xor    ebp,ebp
  438d5a:	mov    eax,DWORD PTR [r12+0x14]
  438d5f:	sub    eax,0x1
  438d62:	cdqe   
  438d64:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  438d6a:	xor    eax,0x1f
  438d6d:	sub    eax,DWORD PTR [rsp+0x40]
  438d71:	mov    edx,DWORD PTR [rsp+0x50]
  438d75:	sub    eax,0x4
  438d78:	and    eax,0x1f
  438d7b:	add    edx,eax
  438d7d:	mov    r13d,eax
  438d80:	mov    DWORD PTR [rsp+0x9c],eax
  438d87:	test   edx,edx
  438d89:	mov    ecx,eax
  438d8b:	jle    0x438d9f
  438d8d:	mov    rcx,rsi
  438d90:	call   0x43a040
  438d95:	mov    ecx,DWORD PTR [rsp+0x9c]
  438d9c:	mov    rsi,rax
  438d9f:	mov    edx,DWORD PTR [rsp+0x40]
  438da3:	add    edx,ecx
  438da5:	test   edx,edx
  438da7:	jle    0x438db4
  438da9:	mov    rcx,r12
  438dac:	call   0x43a040
  438db1:	mov    r12,rax
  438db4:	mov    eax,DWORD PTR [rsp+0x6c]
  438db8:	test   eax,eax
  438dba:	jne    0x439131
  438dc0:	mov    r14d,DWORD PTR [rsp+0x68]
  438dc5:	test   r14d,r14d
  438dc8:	jg     0x438f81
  438dce:	cmp    DWORD PTR [rsp+0x120],0x2
  438dd6:	jle    0x438f81
  438ddc:	mov    r11d,DWORD PTR [rsp+0x68]
  438de1:	test   r11d,r11d
  438de4:	jne    0x438f12
  438dea:	xor    r8d,r8d
  438ded:	mov    rcx,r12
  438df0:	mov    edx,0x5
  438df5:	call   0x439cb0
  438dfa:	mov    rcx,rsi
  438dfd:	mov    rdx,rax
  438e00:	mov    r12,rax
  438e03:	call   0x43a160
  438e08:	test   eax,eax
  438e0a:	jle    0x438f12
  438e10:	mov    ebp,DWORD PTR [rsp+0x30]
  438e14:	add    ebp,0x2
  438e17:	jmp    0x438bb2
  438e1c:	mov    eax,DWORD PTR [rbp+0x4]
  438e1f:	add    eax,0x1
  438e22:	cmp    r13d,eax
  438e25:	jle    0x438d58
  438e2b:	add    DWORD PTR [rsp+0x50],0x1
  438e30:	add    DWORD PTR [rsp+0x40],0x1
  438e35:	mov    ebp,0x1
  438e3a:	nop    WORD PTR [rax+rax*1+0x0]
  438e40:	mov    edx,DWORD PTR [rsp+0x88]
  438e47:	mov    eax,0x1f
  438e4c:	test   edx,edx
  438e4e:	je     0x438d6d
  438e54:	jmp    0x438d5a
  438e59:	nop    DWORD PTR [rax+0x0]
  438e60:	cmp    DWORD PTR [rsp+0x120],0x1
  438e68:	jg     0x438e70
  438e6a:	cmp    r14d,0x1
  438e6e:	je     0x438e74
  438e70:	xor    ebp,ebp
  438e72:	jmp    0x438e40
  438e74:	mov    eax,DWORD PTR [rbp+0x4]
  438e77:	xor    ebp,ebp
  438e79:	add    eax,0x1
  438e7c:	cmp    r13d,eax
  438e7f:	jle    0x438e40
  438e81:	jmp    0x438e2b
  438e83:	cmp    DWORD PTR [rsp+0x120],0x2
  438e8b:	mov    DWORD PTR [rsp+0x60],0x0
  438e93:	je     0x438a90
  438e99:	pxor   xmm0,xmm0
  438e9d:	mov    QWORD PTR [rsp+0x60],r9
  438ea2:	mov    DWORD PTR [rsp+0x68],r11d
  438ea7:	cvtsi2sd xmm0,edi
  438eab:	mulsd  xmm0,QWORD PTR [rip+0x1053d]        # 0x4493f0
  438eb3:	cvttsd2si ecx,xmm0
  438eb7:	add    ecx,0x3
  438eba:	mov    DWORD PTR [rsp+0x9c],ecx
  438ec1:	call   0x438240
  438ec6:	mov    QWORD PTR [rsp+0x48],rax
  438ecb:	mov    eax,DWORD PTR [rbp+0xc]
  438ece:	mov    r11d,DWORD PTR [rsp+0x68]
  438ed3:	mov    r9,QWORD PTR [rsp+0x60]
  438ed8:	sub    eax,0x1
  438edb:	mov    DWORD PTR [rsp+0x38],eax
  438edf:	jne    0x43938d
  438ee5:	mov    eax,0xffffffff
  438eea:	mov    DWORD PTR [rsp+0x60],0x1
  438ef2:	mov    DWORD PTR [rsp+0x128],0x0
  438efd:	mov    DWORD PTR [rsp+0x8c],eax
  438f04:	mov    DWORD PTR [rsp+0x68],eax
  438f08:	jmp    0x438b40
  438f0d:	xor    r12d,r12d
  438f10:	xor    edi,edi
  438f12:	mov    ebp,DWORD PTR [rsp+0x128]
  438f19:	mov    rbx,QWORD PTR [rsp+0x48]
  438f1e:	mov    r15d,0x10
  438f24:	neg    ebp
  438f26:	jmp    0x438bc4
  438f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  438f30:	mov    eax,DWORD PTR [rsp+0x30]
  438f34:	sub    DWORD PTR [rsp+0x50],eax
  438f38:	mov    DWORD PTR [rsp+0x88],0x0
  438f43:	neg    eax
  438f45:	mov    DWORD PTR [rsp+0x58],eax
  438f49:	jmp    0x438769
  438f4e:	xchg   ax,ax
  438f50:	neg    eax
  438f52:	mov    DWORD PTR [rsp+0x40],0x0
  438f5a:	mov    DWORD PTR [rsp+0x50],eax
  438f5e:	jmp    0x43874a
  438f63:	pxor   xmm0,xmm0
  438f67:	cvtsi2sd xmm0,eax
  438f6b:	ucomisd xmm0,xmm1
  438f6f:	jp     0x438f77
  438f71:	je     0x4386db
  438f77:	sub    DWORD PTR [rsp+0x30],0x1
  438f7c:	jmp    0x4386db
  438f81:	mov    r10d,DWORD PTR [rsp+0x60]
  438f86:	test   r10d,r10d
  438f89:	je     0x439190
  438f8f:	lea    edx,[rbx+r13*1]
  438f93:	test   edx,edx
  438f95:	jle    0x438fa2
  438f97:	mov    rcx,rdi
  438f9a:	call   0x43a040
  438f9f:	mov    rdi,rax
  438fa2:	test   ebp,ebp
  438fa4:	mov    r13,rdi
  438fa7:	jne    0x439645
  438fad:	mov    DWORD PTR [rsp+0x9c],0x1
  438fb8:	mov    rbx,QWORD PTR [rsp+0x48]
  438fbd:	mov    QWORD PTR [rsp+0x40],r12
  438fc2:	mov    QWORD PTR [rsp+0x50],r15
  438fc7:	jmp    0x43908e
  438fcc:	nop    DWORD PTR [rax+0x0]
  438fd0:	mov    rcx,r8
  438fd3:	call   0x439c40
  438fd8:	mov    eax,r12d
  438fdb:	or     eax,DWORD PTR [rsp+0x120]
  438fe2:	jne    0x438ffa
  438fe4:	mov    ecx,DWORD PTR [rsp+0x38]
  438fe8:	test   ecx,ecx
  438fea:	jne    0x438ffa
  438fec:	mov    rax,QWORD PTR [rsp+0x50]
  438ff1:	test   BYTE PTR [rax],0x1
  438ff4:	je     0x4397b5
  438ffa:	test   r14d,r14d
  438ffd:	js     0x439510
  439003:	or     r14d,DWORD PTR [rsp+0x120]
  43900b:	jne    0x43901b
  43900d:	mov    rax,QWORD PTR [rsp+0x50]
  439012:	test   BYTE PTR [rax],0x1
  439015:	je     0x439510
  43901b:	test   r12d,r12d
  43901e:	jle    0x43902b
  439020:	cmp    DWORD PTR [rsp+0x38],0x2
  439025:	jne    0x43971f
  43902b:	add    rbx,0x1
  43902f:	mov    BYTE PTR [rbx-0x1],bpl
  439033:	mov    eax,DWORD PTR [rsp+0x68]
  439037:	cmp    DWORD PTR [rsp+0x9c],eax
  43903e:	je     0x4396ab
  439044:	xor    r8d,r8d
  439047:	mov    rcx,rsi
  43904a:	mov    edx,0xa
  43904f:	call   0x439cb0
  439054:	xor    r8d,r8d
  439057:	cmp    rdi,r13
  43905a:	mov    rsi,rax
  43905d:	mov    edx,0xa
  439062:	mov    rcx,rdi
  439065:	je     0x439100
  43906b:	call   0x439cb0
  439070:	mov    rcx,r13
  439073:	xor    r8d,r8d
  439076:	mov    edx,0xa
  43907b:	mov    rdi,rax
  43907e:	call   0x439cb0
  439083:	mov    r13,rax
  439086:	add    DWORD PTR [rsp+0x9c],0x1
  43908e:	mov    r12,QWORD PTR [rsp+0x40]
  439093:	mov    rcx,rsi
  439096:	mov    rdx,r12
  439099:	call   0x4382e0
  43909e:	mov    rdx,rdi
  4390a1:	mov    rcx,rsi
  4390a4:	mov    r15d,eax
  4390a7:	lea    ebp,[rax+0x30]
  4390aa:	call   0x43a160
  4390af:	mov    rcx,r12
  4390b2:	mov    rdx,r13
  4390b5:	mov    r14d,eax
  4390b8:	call   0x43a1b0
  4390bd:	mov    r9d,DWORD PTR [rax+0x10]
  4390c1:	mov    r8,rax
  4390c4:	mov    r12d,0x1
  4390ca:	test   r9d,r9d
  4390cd:	jne    0x438fd0
  4390d3:	mov    rdx,rax
  4390d6:	mov    rcx,rsi
  4390d9:	mov    QWORD PTR [rsp+0x58],rax
  4390de:	call   0x43a160
  4390e3:	mov    r8,QWORD PTR [rsp+0x58]
  4390e8:	mov    r12d,eax
  4390eb:	jmp    0x438fd0
  4390f0:	mov    r12d,DWORD PTR [rsp+0x58]
  4390f5:	mov    ebx,DWORD PTR [rsp+0x50]
  4390f9:	xor    edi,edi
  4390fb:	jmp    0x438c9f
  439100:	call   0x439cb0
  439105:	mov    rdi,rax
  439108:	mov    r13,rax
  43910b:	jmp    0x439086
  439110:	mov    edx,DWORD PTR [rsp+0x58]
  439114:	mov    rcx,rsi
  439117:	call   0x439ed0
  43911c:	mov    rsi,rax
  43911f:	jmp    0x438d1b
  439124:	mov    DWORD PTR [rsp+0x60],0x0
  43912c:	jmp    0x4387c7
  439131:	mov    rdx,r12
  439134:	mov    rcx,rsi
  439137:	call   0x43a160
  43913c:	test   eax,eax
  43913e:	jns    0x438dc0
  439144:	xor    r8d,r8d
  439147:	mov    rcx,rsi
  43914a:	mov    edx,0xa
  43914f:	sub    DWORD PTR [rsp+0x30],0x1
  439154:	call   0x439cb0
  439159:	mov    rsi,rax
  43915c:	mov    eax,DWORD PTR [rsp+0x60]
  439160:	test   eax,eax
  439162:	jne    0x439828
  439168:	mov    eax,DWORD PTR [rsp+0x8c]
  43916f:	test   eax,eax
  439171:	jg     0x439185
  439173:	cmp    DWORD PTR [rsp+0x120],0x2
  43917b:	mov    DWORD PTR [rsp+0x68],eax
  43917f:	jg     0x438ddc
  439185:	mov    eax,DWORD PTR [rsp+0x8c]
  43918c:	mov    DWORD PTR [rsp+0x68],eax
  439190:	mov    DWORD PTR [rsp+0x9c],0x1
  43919b:	mov    rbx,QWORD PTR [rsp+0x48]
  4391a0:	mov    r13d,DWORD PTR [rsp+0x68]
  4391a5:	jmp    0x4391cb
  4391a7:	nop    WORD PTR [rax+rax*1+0x0]
  4391b0:	mov    rcx,rsi
  4391b3:	xor    r8d,r8d
  4391b6:	mov    edx,0xa
  4391bb:	call   0x439cb0
  4391c0:	add    DWORD PTR [rsp+0x9c],0x1
  4391c8:	mov    rsi,rax
  4391cb:	mov    rdx,r12
  4391ce:	mov    rcx,rsi
  4391d1:	add    rbx,0x1
  4391d5:	call   0x4382e0
  4391da:	lea    ebp,[rax+0x30]
  4391dd:	mov    BYTE PTR [rbx-0x1],bpl
  4391e1:	cmp    DWORD PTR [rsp+0x9c],r13d
  4391e9:	jl     0x4391b0
  4391eb:	xor    r14d,r14d
  4391ee:	mov    eax,DWORD PTR [rsp+0x38]
  4391f2:	test   eax,eax
  4391f4:	je     0x4395bc
  4391fa:	cmp    eax,0x2
  4391fd:	je     0x4395ec
  439203:	cmp    DWORD PTR [rsi+0x14],0x1
  439207:	jle    0x439783
  43920d:	movzx  edx,BYTE PTR [rbx-0x1]
  439211:	mov    rcx,QWORD PTR [rsp+0x48]
  439216:	jmp    0x439230
  439218:	nop    DWORD PTR [rax+rax*1+0x0]
  439220:	cmp    rax,rcx
  439223:	je     0x4393dc
  439229:	movzx  edx,BYTE PTR [rax-0x1]
  43922d:	mov    rbx,rax
  439230:	cmp    dl,0x39
  439233:	lea    rax,[rbx-0x1]
  439237:	je     0x439220
  439239:	add    edx,0x1
  43923c:	mov    r15d,0x20
  439242:	mov    BYTE PTR [rax],dl
  439244:	mov    rcx,r12
  439247:	call   0x439c40
  43924c:	test   rdi,rdi
  43924f:	je     0x43933f
  439255:	cmp    r14,rdi
  439258:	je     0x439267
  43925a:	test   r14,r14
  43925d:	je     0x439267
  43925f:	mov    rcx,r14
  439262:	call   0x439c40
  439267:	mov    ebp,DWORD PTR [rsp+0x30]
  43926b:	add    ebp,0x1
  43926e:	jmp    0x438bd5
  439273:	mov    QWORD PTR [rsp+0x40],r9
  439278:	mov    rdi,QWORD PTR [rsp+0x48]
  43927d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  439283:	mov    DWORD PTR [rsp+0x9c],0x1
  43928e:	movapd xmm1,xmm0
  439292:	mov    rbx,rdi
  439295:	add    rbx,0x1
  439299:	divsd  xmm1,xmm2
  43929d:	cvttsd2si eax,xmm1
  4392a1:	pxor   xmm1,xmm1
  4392a5:	cvtsi2sd xmm1,eax
  4392a9:	lea    edx,[rax+0x30]
  4392ac:	mov    BYTE PTR [rdi],dl
  4392ae:	mulsd  xmm1,xmm2
  4392b2:	subsd  xmm0,xmm1
  4392b6:	ucomisd xmm0,xmm6
  4392ba:	jp     0x4392be
  4392bc:	je     0x439330
  4392be:	mov    edx,DWORD PTR [rsp+0x9c]
  4392c5:	cmp    DWORD PTR [rsp+0x68],edx
  4392c9:	je     0x4393b7
  4392cf:	movsd  xmm3,QWORD PTR [rip+0x10129]        # 0x449400
  4392d7:	movapd xmm4,xmm6
  4392db:	mov    ecx,DWORD PTR [rsp+0x68]
  4392df:	jmp    0x4392f0
  4392e1:	mov    edx,DWORD PTR [rsp+0x9c]
  4392e8:	cmp    ecx,edx
  4392ea:	je     0x4393b7
  4392f0:	mulsd  xmm0,xmm3
  4392f4:	add    edx,0x1
  4392f7:	add    rbx,0x1
  4392fb:	mov    DWORD PTR [rsp+0x9c],edx
  439302:	movapd xmm1,xmm0
  439306:	divsd  xmm1,xmm2
  43930a:	cvttsd2si eax,xmm1
  43930e:	pxor   xmm1,xmm1
  439312:	cvtsi2sd xmm1,eax
  439316:	lea    edx,[rax+0x30]
  439319:	mov    BYTE PTR [rbx-0x1],dl
  43931c:	mulsd  xmm1,xmm2
  439320:	subsd  xmm0,xmm1
  439324:	ucomisd xmm0,xmm6
  439328:	jp     0x4392e1
  43932a:	ucomisd xmm0,xmm4
  43932e:	jne    0x4392e1
  439330:	mov    ebp,DWORD PTR [rsp+0x30]
  439334:	add    ebp,0x1
  439337:	xor    r15d,r15d
  43933a:	jmp    0x4389f0
  43933f:	mov    ebp,DWORD PTR [rsp+0x30]
  439343:	add    ebp,0x1
  439346:	jmp    0x4389f0
  43934b:	mov    ebx,0x1
  439350:	mov    DWORD PTR [rsp+0x128],0x1
  43935b:	jmp    0x438aaa
  439360:	cmp    DWORD PTR [rsp+0x68],0xe
  439365:	mov    DWORD PTR [rsp+0x9c],0x1
  439370:	mov    ecx,0x1
  439375:	setbe  bl
  439378:	and    ebx,eax
  43937a:	jmp    0x4387f9
  43937f:	mov    r12d,DWORD PTR [rsp+0x58]
  439384:	mov    ebx,DWORD PTR [rsp+0x50]
  439388:	jmp    0x438c8a
  43938d:	mov    eax,0xffffffff
  439392:	xor    ebx,ebx
  439394:	mov    DWORD PTR [rsp+0x60],0x1
  43939c:	mov    DWORD PTR [rsp+0x8c],eax
  4393a3:	mov    DWORD PTR [rsp+0x68],eax
  4393a7:	mov    DWORD PTR [rsp+0x128],0x0
  4393b2:	jmp    0x438823
  4393b7:	mov    r10d,DWORD PTR [rsp+0x38]
  4393bc:	test   r10d,r10d
  4393bf:	je     0x43967e
  4393c5:	cmp    DWORD PTR [rsp+0x38],0x1
  4393ca:	je     0x439771
  4393d0:	mov    ebp,DWORD PTR [rsp+0x30]
  4393d4:	add    ebp,0x1
  4393d7:	jmp    0x4389e3
  4393dc:	mov    rax,QWORD PTR [rsp+0x48]
  4393e1:	add    DWORD PTR [rsp+0x30],0x1
  4393e6:	mov    r15d,0x20
  4393ec:	mov    BYTE PTR [rax],0x31
  4393ef:	jmp    0x439244
  4393f4:	mov    ebp,0x2
  4393f9:	xor    r12d,r12d
  4393fc:	xor    edi,edi
  4393fe:	jmp    0x438bb2
  439403:	mov    r10,QWORD PTR [rip+0x10346]        # 0x449750
  43940a:	mov    QWORD PTR [rsp+0x38],rax
  43940f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  439415:	mov    DWORD PTR [rsp+0x9c],0x1
  439420:	mov    rbx,QWORD PTR [rsp+0x48]
  439425:	movsd  xmm1,QWORD PTR [rip+0xffd3]        # 0x449400
  43942d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  439433:	jmp    0x439443
  439435:	mulsd  xmm0,xmm1
  439439:	add    edx,0x1
  43943c:	mov    DWORD PTR [rsp+0x9c],edx
  439443:	cvttsd2si eax,xmm0
  439447:	test   eax,eax
  439449:	je     0x439457
  43944b:	pxor   xmm2,xmm2
  43944f:	cvtsi2sd xmm2,eax
  439453:	subsd  xmm0,xmm2
  439457:	add    rbx,0x1
  43945b:	add    eax,0x30
  43945e:	mov    BYTE PTR [rbx-0x1],al
  439461:	mov    edx,DWORD PTR [rsp+0x9c]
  439468:	cmp    edx,r9d
  43946b:	jne    0x439435
  43946d:	movsd  xmm1,QWORD PTR [rip+0xffbb]        # 0x449430
  439475:	movapd xmm2,xmm3
  439479:	addsd  xmm2,xmm1
  43947d:	ucomisd xmm0,xmm2
  439481:	ja     0x4394d7
  439483:	subsd  xmm1,xmm3
  439487:	ucomisd xmm1,xmm0
  43948b:	jbe    0x438b2e
  439491:	ucomisd xmm0,xmm6
  439495:	jp     0x43981d
  43949b:	jne    0x43981d
  4394a1:	xor    r15d,r15d
  4394a4:	jmp    0x4394b7
  4394a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4394b0:	movzx  eax,BYTE PTR [rbx-0x2]
  4394b4:	mov    rbx,rdx
  4394b7:	cmp    al,0x30
  4394b9:	lea    rdx,[rbx-0x1]
  4394bd:	je     0x4394b0
  4394bf:	lea    ebp,[rcx+0x1]
  4394c2:	jmp    0x4389f0
  4394c7:	test   al,0x1
  4394c9:	mov    ecx,DWORD PTR [rsp+0x30]
  4394cd:	movzx  eax,BYTE PTR [rbx-0x1]
  4394d1:	je     0x43981d
  4394d7:	mov    r8,QWORD PTR [rsp+0x48]
  4394dc:	jmp    0x4394f0
  4394de:	xchg   ax,ax
  4394e0:	cmp    rdx,r8
  4394e3:	je     0x43962c
  4394e9:	movzx  eax,BYTE PTR [rdx-0x1]
  4394ed:	mov    rbx,rdx
  4394f0:	cmp    al,0x39
  4394f2:	lea    rdx,[rbx-0x1]
  4394f6:	je     0x4394e0
  4394f8:	mov    QWORD PTR [rsp+0x48],r8
  4394fd:	add    eax,0x1
  439500:	mov    BYTE PTR [rdx],al
  439502:	lea    ebp,[rcx+0x1]
  439505:	mov    r15d,0x20
  43950b:	jmp    0x4389f0
  439510:	mov    edx,DWORD PTR [rsp+0x38]
  439514:	mov    eax,r12d
  439517:	mov    r14d,ebp
  43951a:	mov    r12,QWORD PTR [rsp+0x40]
  43951f:	test   edx,edx
  439521:	je     0x439751
  439527:	cmp    DWORD PTR [rsi+0x14],0x1
  43952b:	jle    0x439747
  439531:	cmp    DWORD PTR [rsp+0x38],0x2
  439536:	jne    0x439587
  439538:	jmp    0x439766
  43953d:	nop    DWORD PTR [rax]
  439540:	add    rbx,0x1
  439544:	xor    r8d,r8d
  439547:	mov    rcx,r13
  43954a:	mov    BYTE PTR [rbx-0x1],r14b
  43954e:	mov    edx,0xa
  439553:	call   0x439cb0
  439558:	cmp    rdi,r13
  43955b:	mov    rcx,rsi
  43955e:	mov    edx,0xa
  439563:	cmove  rdi,rax
  439567:	xor    r8d,r8d
  43956a:	mov    rbp,rax
  43956d:	call   0x439cb0
  439572:	mov    rdx,r12
  439575:	mov    rcx,rax
  439578:	mov    rsi,rax
  43957b:	call   0x4382e0
  439580:	lea    r14d,[rax+0x30]
  439584:	mov    r13,rbp
  439587:	mov    rdx,r13
  43958a:	mov    rcx,r12
  43958d:	call   0x43a160
  439592:	test   eax,eax
  439594:	jg     0x439540
  439596:	cmp    r14d,0x39
  43959a:	je     0x439796
  4395a0:	add    r14d,0x1
  4395a4:	mov    r15d,0x20
  4395aa:	mov    BYTE PTR [rbx],r14b
  4395ad:	mov    r14,rdi
  4395b0:	add    rbx,0x1
  4395b4:	mov    rdi,r13
  4395b7:	jmp    0x439244
  4395bc:	mov    rcx,rsi
  4395bf:	mov    edx,0x1
  4395c4:	call   0x43a040
  4395c9:	mov    rdx,r12
  4395cc:	mov    rcx,rax
  4395cf:	mov    rsi,rax
  4395d2:	call   0x43a160
  4395d7:	cmp    eax,0x0
  4395da:	jg     0x43920d
  4395e0:	jne    0x4395ec
  4395e2:	and    bpl,0x1
  4395e6:	jne    0x43920d
  4395ec:	cmp    DWORD PTR [rsi+0x14],0x1
  4395f0:	mov    r15d,0x10
  4395f6:	jg     0x439603
  4395f8:	jmp    0x43988d
  4395fd:	nop    DWORD PTR [rax]
  439600:	mov    rbx,rax
  439603:	cmp    BYTE PTR [rbx-0x1],0x30
  439607:	lea    rax,[rbx-0x1]
  43960b:	je     0x439600
  43960d:	jmp    0x439244
  439612:	mov    ebx,DWORD PTR [rsp+0x50]
  439616:	mov    DWORD PTR [rsp+0x9c],0x0
  439621:	xor    eax,eax
  439623:	sub    ebx,DWORD PTR [rsp+0x68]
  439627:	jmp    0x438c8a
  43962c:	mov    QWORD PTR [rsp+0x48],r8
  439631:	add    ecx,0x1
  439634:	mov    BYTE PTR [r8],0x30
  439638:	mov    rdx,r8
  43963b:	mov    eax,0x31
  439640:	jmp    0x439500
  439645:	mov    ecx,DWORD PTR [rdi+0x8]
  439648:	call   0x439b30
  43964d:	lea    rcx,[rax+0x10]
  439651:	mov    rbx,rax
  439654:	movsxd rax,DWORD PTR [rdi+0x14]
  439658:	lea    rdx,[rdi+0x10]
  43965c:	lea    r8,[rax*4+0x8]
  439664:	call   0x43a6b8
  439669:	mov    edx,0x1
  43966e:	mov    rcx,rbx
  439671:	call   0x43a040
  439676:	mov    r13,rax
  439679:	jmp    0x438fad
  43967e:	addsd  xmm0,xmm0
  439682:	ucomisd xmm0,xmm2
  439686:	ja     0x439771
  43968c:	ucomisd xmm2,xmm0
  439690:	jp     0x439698
  439692:	je     0x4394c7
  439698:	movzx  eax,BYTE PTR [rbx-0x1]
  43969c:	mov    ecx,DWORD PTR [rsp+0x30]
  4396a0:	mov    r15d,0x10
  4396a6:	jmp    0x4394b7
  4396ab:	mov    r14,rdi
  4396ae:	mov    r12,QWORD PTR [rsp+0x40]
  4396b3:	mov    rdi,r13
  4396b6:	jmp    0x4391ee
  4396bb:	mov    eax,DWORD PTR [rsp+0x68]
  4396bf:	test   eax,eax
  4396c1:	je     0x438aca
  4396c7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4396cf:	test   r9d,r9d
  4396d2:	jle    0x438b2e
  4396d8:	movsd  xmm0,QWORD PTR [rip+0xfd20]        # 0x449400
  4396e0:	mov    ecx,0xffffffff
  4396e5:	movsd  xmm1,QWORD PTR [rip+0xfd1b]        # 0x449408
  4396ed:	mulsd  xmm0,xmm4
  4396f1:	mulsd  xmm1,xmm0
  4396f5:	addsd  xmm1,QWORD PTR [rip+0xfd13]        # 0x449410
  4396fd:	movq   rdx,xmm1
  439702:	movq   rax,xmm1
  439707:	shr    rdx,0x20
  43970b:	mov    eax,eax
  43970d:	sub    edx,0x3400000
  439713:	shl    rdx,0x20
  439717:	or     rax,rdx
  43971a:	jmp    0x4388d2
  43971f:	cmp    ebp,0x39
  439722:	mov    r12,QWORD PTR [rsp+0x40]
  439727:	mov    rax,rbx
  43972a:	je     0x439799
  43972c:	add    ebp,0x1
  43972f:	mov    r14,rdi
  439732:	add    rbx,0x1
  439736:	mov    BYTE PTR [rax],bpl
  439739:	mov    rdi,r13
  43973c:	mov    r15d,0x20
  439742:	jmp    0x439244
  439747:	cmp    DWORD PTR [rsi+0x18],0x0
  43974b:	jne    0x439531
  439751:	test   eax,eax
  439753:	jg     0x4397e9
  439759:	xor    r15d,r15d
  43975c:	cmp    DWORD PTR [rsi+0x14],0x1
  439760:	jle    0x439868
  439766:	mov    r15d,0x10
  43976c:	jmp    0x4395aa
  439771:	movzx  eax,BYTE PTR [rbx-0x1]
  439775:	mov    ecx,DWORD PTR [rsp+0x30]
  439779:	mov    r8,QWORD PTR [rsp+0x48]
  43977e:	jmp    0x4394f0
  439783:	mov    eax,DWORD PTR [rsi+0x18]
  439786:	test   eax,eax
  439788:	jne    0x43920d
  43978e:	xor    r15d,r15d
  439791:	jmp    0x439603
  439796:	mov    rax,rbx
  439799:	mov    r14,rdi
  43979c:	add    rbx,0x1
  4397a0:	mov    rdi,r13
  4397a3:	mov    BYTE PTR [rax],0x39
  4397a6:	mov    edx,0x39
  4397ab:	mov    rcx,QWORD PTR [rsp+0x48]
  4397b0:	jmp    0x439230
  4397b5:	cmp    ebp,0x39
  4397b8:	mov    r12,QWORD PTR [rsp+0x40]
  4397bd:	mov    rax,rbx
  4397c0:	je     0x439796
  4397c2:	test   r14d,r14d
  4397c5:	jle    0x4398a0
  4397cb:	mov    ebp,r15d
  4397ce:	mov    r15d,0x20
  4397d4:	add    ebp,0x31
  4397d7:	mov    r14,rdi
  4397da:	add    rbx,0x1
  4397de:	mov    BYTE PTR [rax],bpl
  4397e1:	mov    rdi,r13
  4397e4:	jmp    0x439244
  4397e9:	mov    rcx,rsi
  4397ec:	mov    edx,0x1
  4397f1:	call   0x43a040
  4397f6:	mov    rdx,r12
  4397f9:	mov    rcx,rax
  4397fc:	mov    rsi,rax
  4397ff:	call   0x43a160
  439804:	cmp    eax,0x0
  439807:	jle    0x43987a
  439809:	cmp    ebp,0x39
  43980c:	je     0x439796
  43980e:	lea    r14d,[rbp+0x1]
  439812:	mov    r15d,0x20
  439818:	jmp    0x43975c
  43981d:	mov    r15d,0x10
  439823:	jmp    0x4394b7
  439828:	xor    r8d,r8d
  43982b:	mov    rcx,rdi
  43982e:	mov    edx,0xa
  439833:	call   0x439cb0
  439838:	mov    rdi,rax
  43983b:	mov    eax,DWORD PTR [rsp+0x8c]
  439842:	test   eax,eax
  439844:	jg     0x439858
  439846:	cmp    DWORD PTR [rsp+0x120],0x2
  43984e:	mov    DWORD PTR [rsp+0x68],eax
  439852:	jg     0x438ddc
  439858:	mov    eax,DWORD PTR [rsp+0x8c]
  43985f:	mov    DWORD PTR [rsp+0x68],eax
  439863:	jmp    0x438f8f
  439868:	cmp    DWORD PTR [rsi+0x18],0x0
  43986c:	mov    eax,0x10
  439871:	cmovne r15d,eax
  439875:	jmp    0x4395aa
  43987a:	jne    0x439882
  43987c:	test   bpl,0x1
  439880:	jne    0x439809
  439882:	mov    r15d,0x20
  439888:	jmp    0x43975c
  43988d:	cmp    DWORD PTR [rsi+0x18],0x1
  439891:	sbb    r15d,r15d
  439894:	not    r15d
  439897:	and    r15d,0x10
  43989b:	jmp    0x439603
  4398a0:	cmp    DWORD PTR [rsi+0x14],0x1
  4398a4:	mov    r15d,0x10
  4398aa:	jg     0x4397d7
  4398b0:	cmp    DWORD PTR [rsi+0x18],0x1
  4398b4:	sbb    r15d,r15d
  4398b7:	not    r15d
  4398ba:	and    r15d,0x10
  4398be:	jmp    0x4397d7
  4398c3:	xor    eax,eax
  4398c5:	jmp    0x4385a7
  4398ca:	nop
  4398cb:	nop
  4398cc:	nop
  4398cd:	nop
  4398ce:	nop
  4398cf:	nop
  4398d0:	push   rbp
  4398d1:	push   rdi
  4398d2:	push   rsi
  4398d3:	push   rbx
  4398d4:	mov    rsi,rcx
  4398d7:	lea    r10,[rcx+0x18]
  4398db:	movsxd rcx,DWORD PTR [rcx+0x14]
  4398df:	mov    eax,edx
  4398e1:	sar    eax,0x5
  4398e4:	cmp    eax,ecx
  4398e6:	jge    0x439970
  4398ec:	cdqe   
  4398ee:	and    edx,0x1f
  4398f1:	lea    rbx,[r10+rcx*4]
  4398f5:	lea    rdi,[r10+rax*4]
  4398f9:	je     0x439983
  4398ff:	mov    r9d,DWORD PTR [rdi]
  439902:	lea    r8,[rdi+0x4]
  439906:	mov    ebp,0x20
  43990b:	mov    ecx,edx
  43990d:	sub    ebp,edx
  43990f:	shr    r9d,cl
  439912:	cmp    rbx,r8
  439915:	jbe    0x4399c8
  43991b:	mov    r11,r10
  43991e:	xchg   ax,ax
  439920:	mov    eax,DWORD PTR [r8]
  439923:	mov    ecx,ebp
  439925:	add    r11,0x4
  439929:	add    r8,0x4
  43992d:	shl    eax,cl
  43992f:	mov    ecx,edx
  439931:	or     eax,r9d
  439934:	mov    DWORD PTR [r11-0x4],eax
  439938:	mov    r9d,DWORD PTR [r8-0x4]
  43993c:	shr    r9d,cl
  43993f:	cmp    rbx,r8
  439942:	ja     0x439920
  439944:	sub    rbx,rdi
  439947:	lea    rax,[rbx-0x5]
  43994b:	shr    rax,0x2
  43994f:	lea    rax,[r10+rax*4+0x4]
  439954:	test   r9d,r9d
  439957:	mov    DWORD PTR [rax],r9d
  43995a:	je     0x439960
  43995c:	add    rax,0x4
  439960:	sub    rax,r10
  439963:	shr    rax,0x2
  439967:	jmp    0x4399bc
  439969:	nop    DWORD PTR [rax+0x0]
  439970:	mov    DWORD PTR [rsi+0x14],0x0
  439977:	mov    DWORD PTR [rsi+0x18],0x0
  43997e:	pop    rbx
  43997f:	pop    rsi
  439980:	pop    rdi
  439981:	pop    rbp
  439982:	ret    
  439983:	cmp    rbx,rdi
  439986:	mov    rdx,r10
  439989:	mov    rax,rdi
  43998c:	jbe    0x439970
  43998e:	xchg   ax,ax
  439990:	add    rax,0x4
  439994:	mov    r8d,DWORD PTR [rax-0x4]
  439998:	add    rdx,0x4
  43999c:	cmp    rbx,rax
  43999f:	mov    DWORD PTR [rdx-0x4],r8d
  4399a3:	ja     0x439990
  4399a5:	not    rdi
  4399a8:	lea    rax,[rdi+rbx*1]
  4399ac:	shr    rax,0x2
  4399b0:	lea    rax,[rax*4+0x4]
  4399b8:	shr    rax,0x2
  4399bc:	test   eax,eax
  4399be:	mov    DWORD PTR [rsi+0x14],eax
  4399c1:	je     0x439977
  4399c3:	pop    rbx
  4399c4:	pop    rsi
  4399c5:	pop    rdi
  4399c6:	pop    rbp
  4399c7:	ret    
  4399c8:	mov    rax,r10
  4399cb:	jmp    0x439954
  4399cd:	nop    DWORD PTR [rax]
  4399d0:	movsxd rax,DWORD PTR [rcx+0x14]
  4399d4:	lea    rdx,[rcx+0x18]
  4399d8:	lea    r8,[rdx+rax*4]
  4399dc:	cmp    rdx,r8
  4399df:	jae    0x439a0b
  4399e1:	mov    ecx,DWORD PTR [rcx+0x18]
  4399e4:	xor    eax,eax
  4399e6:	test   ecx,ecx
  4399e8:	je     0x4399f6
  4399ea:	jmp    0x439a04
  4399ec:	nop    DWORD PTR [rax+0x0]
  4399f0:	mov    ecx,DWORD PTR [rdx]
  4399f2:	test   ecx,ecx
  4399f4:	jne    0x439a04
  4399f6:	add    rdx,0x4
  4399fa:	add    eax,0x20
  4399fd:	cmp    r8,rdx
  439a00:	ja     0x4399f0
  439a02:	repz ret 
  439a04:	tzcnt  ecx,ecx
  439a08:	add    eax,ecx
  439a0a:	ret    
  439a0b:	xor    eax,eax
  439a0d:	ret    
  439a0e:	nop
  439a0f:	nop
  439a10:	push   rsi
  439a11:	push   rbx
  439a12:	sub    rsp,0x28
  439a16:	mov    eax,DWORD PTR [rip+0x19cf4]        # 0x453710
  439a1c:	movsxd rsi,ecx
  439a1f:	cmp    eax,0x2
  439a22:	je     0x439a8d
  439a24:	test   eax,eax
  439a26:	je     0x439a52
  439a28:	cmp    eax,0x1
  439a2b:	jne    0x439a4b
  439a2d:	mov    rbx,QWORD PTR [rip+0x1ae44]        # 0x454878
  439a34:	mov    ecx,0x1
  439a39:	call   rbx
  439a3b:	mov    eax,DWORD PTR [rip+0x19ccf]        # 0x453710
  439a41:	cmp    eax,0x1
  439a44:	je     0x439a34
  439a46:	cmp    eax,0x2
  439a49:	je     0x439a8d
  439a4b:	add    rsp,0x28
  439a4f:	pop    rbx
  439a50:	pop    rsi
  439a51:	ret    
  439a52:	mov    al,0x1
  439a54:	xchg   DWORD PTR [rip+0x19cb6],eax        # 0x453710
  439a5a:	test   eax,eax
  439a5c:	jne    0x439ab0
  439a5e:	lea    rcx,[rip+0x19cdb]        # 0x453740
  439a65:	mov    rbx,QWORD PTR [rip+0x1ad74]        # 0x4547e0
  439a6c:	call   rbx
  439a6e:	lea    rcx,[rip+0x19cf3]        # 0x453768
  439a75:	call   rbx
  439a77:	lea    rcx,[rip+0x62]        # 0x439ae0
  439a7e:	call   0x434030
  439a83:	mov    DWORD PTR [rip+0x19c83],0x2        # 0x453710
  439a8d:	lea    rdx,[rsi+rsi*4]
  439a91:	lea    rax,[rip+0x19ca8]        # 0x453740
  439a98:	lea    rcx,[rax+rdx*8]
  439a9c:	mov    rax,QWORD PTR [rip+0x1ac9d]        # 0x454740
  439aa3:	add    rsp,0x28
  439aa7:	pop    rbx
  439aa8:	pop    rsi
  439aa9:	rex.W jmp rax
  439aac:	nop    DWORD PTR [rax+0x0]
  439ab0:	cmp    eax,0x2
  439ab3:	je     0x439ad0
  439ab5:	mov    eax,DWORD PTR [rip+0x19c55]        # 0x453710
  439abb:	cmp    eax,0x1
  439abe:	je     0x439a2d
  439ac4:	jmp    0x439a46
  439ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439ad0:	mov    DWORD PTR [rip+0x19c36],0x2        # 0x453710
  439ada:	jmp    0x439a8d
  439adc:	nop    DWORD PTR [rax+0x0]
  439ae0:	push   rbx
  439ae1:	sub    rsp,0x20
  439ae5:	mov    eax,0x3
  439aea:	xchg   DWORD PTR [rip+0x19c20],eax        # 0x453710
  439af0:	cmp    eax,0x2
  439af3:	je     0x439b00
  439af5:	add    rsp,0x20
  439af9:	pop    rbx
  439afa:	ret    
  439afb:	nop    DWORD PTR [rax+rax*1+0x0]
  439b00:	mov    rbx,QWORD PTR [rip+0x1ac31]        # 0x454738
  439b07:	lea    rcx,[rip+0x19c32]        # 0x453740
  439b0e:	call   rbx
  439b10:	lea    rcx,[rip+0x19c51]        # 0x453768
  439b17:	mov    rax,rbx
  439b1a:	add    rsp,0x20
  439b1e:	pop    rbx
  439b1f:	rex.W jmp rax
  439b22:	nop    DWORD PTR [rax+0x0]
  439b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439b30:	push   rdi
  439b31:	push   rsi
  439b32:	push   rbx
  439b33:	sub    rsp,0x20
  439b37:	mov    ebx,ecx
  439b39:	xor    ecx,ecx
  439b3b:	call   0x439a10
  439b40:	cmp    ebx,0x9
  439b43:	jg     0x439b80
  439b45:	lea    rdx,[rip+0x19b74]        # 0x4536c0
  439b4c:	movsxd rcx,ebx
  439b4f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  439b53:	test   rdi,rdi
  439b56:	je     0x439be0
  439b5c:	cmp    DWORD PTR [rip+0x19bad],0x2        # 0x453710
  439b63:	mov    r8,QWORD PTR [rdi]
  439b66:	mov    QWORD PTR [rdx+rcx*8],r8
  439b6a:	jne    0x439bc6
  439b6c:	lea    rcx,[rip+0x19bcd]        # 0x453740
  439b73:	call   QWORD PTR [rip+0x1ac77]        # 0x4547f0
  439b79:	jmp    0x439bc6
  439b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  439b80:	mov    eax,0x1
  439b85:	mov    ecx,ebx
  439b87:	shl    eax,cl
  439b89:	mov    esi,eax
  439b8b:	lea    eax,[rax-0x1]
  439b8e:	cdqe   
  439b90:	lea    rdx,[rax*4+0x27]
  439b98:	shr    rdx,0x3
  439b9c:	mov    edx,edx
  439b9e:	lea    rcx,[rdx*8+0x0]
  439ba6:	call   0x43a6c8
  439bab:	test   rax,rax
  439bae:	mov    rdi,rax
  439bb1:	je     0x439c3a
  439bb7:	cmp    DWORD PTR [rip+0x19b52],0x2        # 0x453710
  439bbe:	mov    DWORD PTR [rdi+0x8],ebx
  439bc1:	mov    DWORD PTR [rdi+0xc],esi
  439bc4:	je     0x439b6c
  439bc6:	mov    DWORD PTR [rdi+0x14],0x0
  439bcd:	mov    DWORD PTR [rdi+0x10],0x0
  439bd4:	mov    rax,rdi
  439bd7:	add    rsp,0x20
  439bdb:	pop    rbx
  439bdc:	pop    rsi
  439bdd:	pop    rdi
  439bde:	ret    
  439bdf:	nop
  439be0:	mov    ecx,ebx
  439be2:	mov    eax,0x1
  439be7:	mov    rdi,QWORD PTR [rip+0x6532]        # 0x440120
  439bee:	shl    eax,cl
  439bf0:	lea    rcx,[rip+0x191c9]        # 0x452dc0
  439bf7:	lea    edx,[rax-0x1]
  439bfa:	mov    esi,eax
  439bfc:	mov    rax,rdi
  439bff:	movsxd rdx,edx
  439c02:	sub    rax,rcx
  439c05:	lea    rdx,[rdx*4+0x27]
  439c0d:	mov    rcx,rax
  439c10:	sar    rcx,0x3
  439c14:	shr    rdx,0x3
  439c18:	mov    edx,edx
  439c1a:	add    rcx,rdx
  439c1d:	cmp    rcx,0x120
  439c24:	ja     0x439b9e
  439c2a:	lea    rdx,[rdi+rdx*8]
  439c2e:	mov    QWORD PTR [rip+0x64eb],rdx        # 0x440120
  439c35:	jmp    0x439bb7
  439c3a:	xor    eax,eax
  439c3c:	jmp    0x439bd7
  439c3e:	xchg   ax,ax
  439c40:	push   rbx
  439c41:	sub    rsp,0x20
  439c45:	test   rcx,rcx
  439c48:	je     0x439c79
  439c4a:	cmp    DWORD PTR [rcx+0x8],0x9
  439c4e:	jg     0x439c80
  439c50:	mov    rbx,rcx
  439c53:	xor    ecx,ecx
  439c55:	call   0x439a10
  439c5a:	movsxd rdx,DWORD PTR [rbx+0x8]
  439c5e:	lea    rax,[rip+0x19a5b]        # 0x4536c0
  439c65:	cmp    DWORD PTR [rip+0x19aa4],0x2        # 0x453710
  439c6c:	mov    rcx,QWORD PTR [rax+rdx*8]
  439c70:	mov    QWORD PTR [rax+rdx*8],rbx
  439c74:	mov    QWORD PTR [rbx],rcx
  439c77:	je     0x439c90
  439c79:	add    rsp,0x20
  439c7d:	pop    rbx
  439c7e:	ret    
  439c7f:	nop
  439c80:	add    rsp,0x20
  439c84:	pop    rbx
  439c85:	jmp    0x43a748
  439c8a:	nop    WORD PTR [rax+rax*1+0x0]
  439c90:	mov    rax,QWORD PTR [rip+0x1ab59]        # 0x4547f0
  439c97:	lea    rcx,[rip+0x19aa2]        # 0x453740
  439c9e:	add    rsp,0x20
  439ca2:	pop    rbx
  439ca3:	rex.W jmp rax
  439ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439cb0:	push   rbp
  439cb1:	push   rdi
  439cb2:	push   rsi
  439cb3:	push   rbx
  439cb4:	sub    rsp,0x28
  439cb8:	mov    esi,DWORD PTR [rcx+0x14]
  439cbb:	xor    r9d,r9d
  439cbe:	lea    r10,[rcx+0x18]
  439cc2:	mov    rdi,rcx
  439cc5:	movsxd rbx,r8d
  439cc8:	movsxd rdx,edx
  439ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  439cd0:	mov    eax,DWORD PTR [r10+r9*4]
  439cd4:	imul   rax,rdx
  439cd8:	add    rax,rbx
  439cdb:	mov    rbx,rax
  439cde:	mov    DWORD PTR [r10+r9*4],eax
  439ce2:	add    r9,0x1
  439ce6:	shr    rbx,0x20
  439cea:	cmp    esi,r9d
  439ced:	jg     0x439cd0
  439cef:	test   rbx,rbx
  439cf2:	mov    rax,rdi
  439cf5:	je     0x439d0c
  439cf7:	cmp    esi,DWORD PTR [rdi+0xc]
  439cfa:	jge    0x439d15
  439cfc:	movsxd rax,esi
  439cff:	add    esi,0x1
  439d02:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  439d06:	mov    DWORD PTR [rdi+0x14],esi
  439d09:	mov    rax,rdi
  439d0c:	add    rsp,0x28
  439d10:	pop    rbx
  439d11:	pop    rsi
  439d12:	pop    rdi
  439d13:	pop    rbp
  439d14:	ret    
  439d15:	mov    eax,DWORD PTR [rdi+0x8]
  439d18:	lea    ecx,[rax+0x1]
  439d1b:	call   0x439b30
  439d20:	test   rax,rax
  439d23:	mov    rbp,rax
  439d26:	je     0x439d5e
  439d28:	lea    rcx,[rax+0x10]
  439d2c:	movsxd rax,DWORD PTR [rdi+0x14]
  439d30:	lea    rdx,[rdi+0x10]
  439d34:	lea    r8,[rax*4+0x8]
  439d3c:	call   0x43a6b8
  439d41:	mov    rcx,rdi
  439d44:	mov    rdi,rbp
  439d47:	call   0x439c40
  439d4c:	movsxd rax,esi
  439d4f:	add    esi,0x1
  439d52:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  439d56:	mov    DWORD PTR [rdi+0x14],esi
  439d59:	mov    rax,rdi
  439d5c:	jmp    0x439d0c
  439d5e:	xor    eax,eax
  439d60:	jmp    0x439d0c
  439d62:	nop    DWORD PTR [rax+0x0]
  439d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439d70:	push   rbx
  439d71:	sub    rsp,0x20
  439d75:	mov    ebx,ecx
  439d77:	mov    ecx,0x1
  439d7c:	call   0x439b30
  439d81:	test   rax,rax
  439d84:	je     0x439d90
  439d86:	mov    DWORD PTR [rax+0x18],ebx
  439d89:	mov    DWORD PTR [rax+0x14],0x1
  439d90:	add    rsp,0x20
  439d94:	pop    rbx
  439d95:	ret    
  439d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439da0:	push   r14
  439da2:	push   r13
  439da4:	push   r12
  439da6:	push   rbp
  439da7:	push   rdi
  439da8:	push   rsi
  439da9:	push   rbx
  439daa:	sub    rsp,0x20
  439dae:	movsxd r13,DWORD PTR [rcx+0x14]
  439db2:	movsxd rbx,DWORD PTR [rdx+0x14]
  439db6:	mov    r12,rcx
  439db9:	mov    r14,rdx
  439dbc:	cmp    r13d,ebx
  439dbf:	jl     0x439ec1
  439dc5:	mov    eax,ebx
  439dc7:	movsxd rbx,r13d
  439dca:	movsxd r13,eax
  439dcd:	xor    eax,eax
  439dcf:	lea    esi,[rbx+r13*1]
  439dd3:	cmp    esi,DWORD PTR [r12+0xc]
  439dd8:	setg   al
  439ddb:	add    eax,DWORD PTR [r12+0x8]
  439de0:	mov    ecx,eax
  439de2:	call   0x439b30
  439de7:	test   rax,rax
  439dea:	je     0x439ecc
  439df0:	lea    rdi,[rax+0x18]
  439df4:	movsxd rdx,esi
  439df7:	lea    rbp,[rdi+rdx*4]
  439dfb:	mov    r8,rdi
  439dfe:	cmp    rdi,rbp
  439e01:	jae    0x439e13
  439e03:	mov    DWORD PTR [r8],0x0
  439e0a:	add    r8,0x4
  439e0e:	cmp    rbp,r8
  439e11:	ja     0x439e03
  439e13:	lea    rdx,[r14+0x18]
  439e17:	add    r12,0x18
  439e1b:	lea    rbx,[r12+rbx*4]
  439e1f:	lea    r13,[rdx+r13*4]
  439e23:	cmp    rdx,r13
  439e26:	jae    0x439e89
  439e28:	nop    DWORD PTR [rax+rax*1+0x0]
  439e30:	add    rdx,0x4
  439e34:	mov    r11d,DWORD PTR [rdx-0x4]
  439e38:	test   r11d,r11d
  439e3b:	je     0x439e80
  439e3d:	mov    r9,rdi
  439e40:	mov    r8,r12
  439e43:	xor    r10d,r10d
  439e46:	jmp    0x439e53
  439e48:	nop    DWORD PTR [rax+rax*1+0x0]
  439e50:	mov    r9,r14
  439e53:	add    r8,0x4
  439e57:	mov    ecx,DWORD PTR [r8-0x4]
  439e5b:	mov    r14d,DWORD PTR [r9]
  439e5e:	imul   rcx,r11
  439e62:	add    rcx,r14
  439e65:	lea    r14,[r9+0x4]
  439e69:	add    rcx,r10
  439e6c:	mov    r10,rcx
  439e6f:	mov    DWORD PTR [r14-0x4],ecx
  439e73:	shr    r10,0x20
  439e77:	cmp    rbx,r8
  439e7a:	ja     0x439e50
  439e7c:	mov    DWORD PTR [r9+0x4],r10d
  439e80:	add    rdi,0x4
  439e84:	cmp    r13,rdx
  439e87:	ja     0x439e30
  439e89:	test   esi,esi
  439e8b:	jle    0x439eaf
  439e8d:	mov    r8d,DWORD PTR [rbp-0x4]
  439e91:	lea    rdx,[rbp-0x4]
  439e95:	test   r8d,r8d
  439e98:	je     0x439eaa
  439e9a:	jmp    0x439eaf
  439e9c:	nop    DWORD PTR [rax+0x0]
  439ea0:	sub    rdx,0x4
  439ea4:	mov    ecx,DWORD PTR [rdx]
  439ea6:	test   ecx,ecx
  439ea8:	jne    0x439eaf
  439eaa:	sub    esi,0x1
  439ead:	jne    0x439ea0
  439eaf:	mov    DWORD PTR [rax+0x14],esi
  439eb2:	add    rsp,0x20
  439eb6:	pop    rbx
  439eb7:	pop    rsi
  439eb8:	pop    rdi
  439eb9:	pop    rbp
  439eba:	pop    r12
  439ebc:	pop    r13
  439ebe:	pop    r14
  439ec0:	ret    
  439ec1:	mov    r12,rdx
  439ec4:	mov    r14,rcx
  439ec7:	jmp    0x439dcd
  439ecc:	xor    eax,eax
  439ece:	jmp    0x439eb2
  439ed0:	push   rbp
  439ed1:	push   rdi
  439ed2:	push   rsi
  439ed3:	push   rbx
  439ed4:	sub    rsp,0x28
  439ed8:	mov    eax,edx
  439eda:	mov    rbp,rcx
  439edd:	mov    ebx,edx
  439edf:	and    eax,0x3
  439ee2:	jne    0x439f70
  439ee8:	sar    ebx,0x2
  439eeb:	mov    rax,rbp
  439eee:	test   ebx,ebx
  439ef0:	je     0x439f3c
  439ef2:	mov    rdi,QWORD PTR [rip+0x18e87]        # 0x452d80
  439ef9:	test   rdi,rdi
  439efc:	jne    0x439f12
  439efe:	jmp    0x439fbd
  439f03:	sar    ebx,1
  439f05:	je     0x439f39
  439f07:	mov    rsi,QWORD PTR [rdi]
  439f0a:	test   rsi,rsi
  439f0d:	je     0x439f45
  439f0f:	mov    rdi,rsi
  439f12:	test   bl,0x1
  439f15:	je     0x439f03
  439f17:	mov    rdx,rdi
  439f1a:	mov    rcx,rbp
  439f1d:	call   0x439da0
  439f22:	test   rax,rax
  439f25:	mov    rsi,rax
  439f28:	je     0x439f93
  439f2a:	mov    rcx,rbp
  439f2d:	mov    rbp,rsi
  439f30:	call   0x439c40
  439f35:	sar    ebx,1
  439f37:	jne    0x439f07
  439f39:	mov    rax,rbp
  439f3c:	add    rsp,0x28
  439f40:	pop    rbx
  439f41:	pop    rsi
  439f42:	pop    rdi
  439f43:	pop    rbp
  439f44:	ret    
  439f45:	mov    ecx,0x1
  439f4a:	call   0x439a10
  439f4f:	mov    rsi,QWORD PTR [rdi]
  439f52:	test   rsi,rsi
  439f55:	je     0x439f9e
  439f57:	cmp    DWORD PTR [rip+0x197b2],0x2        # 0x453710
  439f5e:	jne    0x439f0f
  439f60:	lea    rcx,[rip+0x19801]        # 0x453768
  439f67:	call   QWORD PTR [rip+0x1a883]        # 0x4547f0
  439f6d:	jmp    0x439f0f
  439f6f:	nop
  439f70:	sub    eax,0x1
  439f73:	lea    rdx,[rip+0xf4c6]        # 0x449440
  439f7a:	xor    r8d,r8d
  439f7d:	cdqe   
  439f7f:	mov    edx,DWORD PTR [rdx+rax*4]
  439f82:	call   0x439cb0
  439f87:	test   rax,rax
  439f8a:	mov    rbp,rax
  439f8d:	jne    0x439ee8
  439f93:	xor    eax,eax
  439f95:	add    rsp,0x28
  439f99:	pop    rbx
  439f9a:	pop    rsi
  439f9b:	pop    rdi
  439f9c:	pop    rbp
  439f9d:	ret    
  439f9e:	mov    rdx,rdi
  439fa1:	mov    rcx,rdi
  439fa4:	call   0x439da0
  439fa9:	test   rax,rax
  439fac:	mov    rsi,rax
  439faf:	mov    QWORD PTR [rdi],rax
  439fb2:	je     0x439f93
  439fb4:	mov    QWORD PTR [rax],0x0
  439fbb:	jmp    0x439f57
  439fbd:	mov    ecx,0x1
  439fc2:	call   0x439a10
  439fc7:	mov    rdi,QWORD PTR [rip+0x18db2]        # 0x452d80
  439fce:	test   rdi,rdi
  439fd1:	je     0x439ff2
  439fd3:	cmp    DWORD PTR [rip+0x19736],0x2        # 0x453710
  439fda:	jne    0x439f12
  439fe0:	lea    rcx,[rip+0x19781]        # 0x453768
  439fe7:	call   QWORD PTR [rip+0x1a803]        # 0x4547f0
  439fed:	jmp    0x439f12
  439ff2:	mov    ecx,0x1
  439ff7:	call   0x439b30
  439ffc:	test   rax,rax
  439fff:	mov    rdi,rax
  43a002:	je     0x43a022
  43a004:	mov    DWORD PTR [rax+0x18],0x271
  43a00b:	mov    DWORD PTR [rax+0x14],0x1
  43a012:	mov    QWORD PTR [rip+0x18d67],rax        # 0x452d80
  43a019:	mov    QWORD PTR [rax],0x0
  43a020:	jmp    0x439fd3
  43a022:	mov    QWORD PTR [rip+0x18d53],0x0        # 0x452d80
  43a02d:	xor    eax,eax
  43a02f:	jmp    0x439f95
  43a034:	xchg   ax,ax
  43a036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a040:	push   r13
  43a042:	push   r12
  43a044:	push   rbp
  43a045:	push   rdi
  43a046:	push   rsi
  43a047:	push   rbx
  43a048:	sub    rsp,0x28
  43a04c:	mov    rdi,rcx
  43a04f:	mov    ebp,edx
  43a051:	mov    esi,edx
  43a053:	mov    r12d,DWORD PTR [rdi+0x14]
  43a057:	sar    ebp,0x5
  43a05a:	mov    eax,DWORD PTR [rdi+0xc]
  43a05d:	mov    ecx,DWORD PTR [rcx+0x8]
  43a060:	add    r12d,ebp
  43a063:	lea    ebx,[r12+0x1]
  43a068:	cmp    ebx,eax
  43a06a:	jle    0x43a079
  43a06c:	nop    DWORD PTR [rax+0x0]
  43a070:	add    eax,eax
  43a072:	add    ecx,0x1
  43a075:	cmp    ebx,eax
  43a077:	jg     0x43a070
  43a079:	call   0x439b30
  43a07e:	test   rax,rax
  43a081:	mov    r13,rax
  43a084:	je     0x43a14f
  43a08a:	test   ebp,ebp
  43a08c:	lea    r8,[rax+0x18]
  43a090:	jle    0x43a147
  43a096:	lea    eax,[rbp-0x1]
  43a099:	lea    r9,[r8+rax*4+0x4]
  43a09e:	xchg   ax,ax
  43a0a0:	add    r8,0x4
  43a0a4:	mov    DWORD PTR [r8-0x4],0x0
  43a0ac:	cmp    r8,r9
  43a0af:	jne    0x43a0a0
  43a0b1:	movsxd rax,DWORD PTR [rdi+0x14]
  43a0b5:	lea    r8,[rdi+0x18]
  43a0b9:	mov    edx,esi
  43a0bb:	and    edx,0x1f
  43a0be:	lea    rbp,[r8+rax*4]
  43a0c2:	je     0x43a130
  43a0c4:	mov    eax,0x20
  43a0c9:	xor    r11d,r11d
  43a0cc:	sub    eax,edx
  43a0ce:	jmp    0x43a0d3
  43a0d0:	mov    r9,rsi
  43a0d3:	mov    r10d,DWORD PTR [r8]
  43a0d6:	mov    ecx,edx
  43a0d8:	lea    rsi,[r9+0x4]
  43a0dc:	add    r8,0x4
  43a0e0:	shl    r10d,cl
  43a0e3:	mov    ecx,eax
  43a0e5:	or     r10d,r11d
  43a0e8:	mov    DWORD PTR [rsi-0x4],r10d
  43a0ec:	mov    r11d,DWORD PTR [r8-0x4]
  43a0f0:	shr    r11d,cl
  43a0f3:	cmp    rbp,r8
  43a0f6:	ja     0x43a0d0
  43a0f8:	add    r12d,0x2
  43a0fc:	test   r11d,r11d
  43a0ff:	mov    DWORD PTR [r9+0x4],r11d
  43a103:	cmovne ebx,r12d
  43a107:	sub    ebx,0x1
  43a10a:	mov    rcx,rdi
  43a10d:	mov    DWORD PTR [r13+0x14],ebx
  43a111:	call   0x439c40
  43a116:	mov    rax,r13
  43a119:	add    rsp,0x28
  43a11d:	pop    rbx
  43a11e:	pop    rsi
  43a11f:	pop    rdi
  43a120:	pop    rbp
  43a121:	pop    r12
  43a123:	pop    r13
  43a125:	ret    
  43a126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a130:	add    r8,0x4
  43a134:	mov    edx,DWORD PTR [r8-0x4]
  43a138:	add    r9,0x4
  43a13c:	cmp    rbp,r8
  43a13f:	mov    DWORD PTR [r9-0x4],edx
  43a143:	ja     0x43a130
  43a145:	jmp    0x43a107
  43a147:	mov    r9,r8
  43a14a:	jmp    0x43a0b1
  43a14f:	xor    eax,eax
  43a151:	jmp    0x43a119
  43a153:	nop    DWORD PTR [rax]
  43a156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a160:	movsxd r8,DWORD PTR [rdx+0x14]
  43a164:	mov    eax,DWORD PTR [rcx+0x14]
  43a167:	sub    eax,r8d
  43a16a:	test   eax,eax
  43a16c:	jne    0x43a1a2
  43a16e:	shl    r8,0x2
  43a172:	add    rcx,0x18
  43a176:	lea    rax,[rcx+r8*1]
  43a17a:	lea    rdx,[rdx+r8*1+0x18]
  43a17f:	jmp    0x43a186
  43a181:	cmp    rcx,rax
  43a184:	jae    0x43a1a0
  43a186:	sub    rdx,0x4
  43a18a:	sub    rax,0x4
  43a18e:	mov    r9d,DWORD PTR [rdx]
  43a191:	cmp    DWORD PTR [rax],r9d
  43a194:	je     0x43a181
  43a196:	sbb    eax,eax
  43a198:	or     eax,0x1
  43a19b:	ret    
  43a19c:	nop    DWORD PTR [rax+0x0]
  43a1a0:	xor    eax,eax
  43a1a2:	repz ret 
  43a1a4:	xchg   ax,ax
  43a1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a1b0:	push   rdi
  43a1b1:	push   rsi
  43a1b2:	push   rbx
  43a1b3:	sub    rsp,0x20
  43a1b7:	mov    rsi,rcx
  43a1ba:	mov    rdi,rdx
  43a1bd:	call   0x43a160
  43a1c2:	test   eax,eax
  43a1c4:	je     0x43a2b0
  43a1ca:	mov    ebx,0x0
  43a1cf:	js     0x43a2d2
  43a1d5:	mov    ecx,DWORD PTR [rsi+0x8]
  43a1d8:	call   0x439b30
  43a1dd:	test   rax,rax
  43a1e0:	je     0x43a2e2
  43a1e6:	movsxd rdx,DWORD PTR [rsi+0x14]
  43a1ea:	lea    rcx,[rsi+0x18]
  43a1ee:	mov    DWORD PTR [rax+0x10],ebx
  43a1f1:	lea    r10,[rdi+0x18]
  43a1f5:	xor    r9d,r9d
  43a1f8:	mov    rbx,rdx
  43a1fb:	lea    rsi,[rcx+rdx*4]
  43a1ff:	movsxd rdx,DWORD PTR [rdi+0x14]
  43a203:	lea    rdi,[r10+rdx*4]
  43a207:	lea    rdx,[rax+0x18]
  43a20b:	nop    DWORD PTR [rax+rax*1+0x0]
  43a210:	add    rcx,0x4
  43a214:	add    r10,0x4
  43a218:	mov    r11d,DWORD PTR [r10-0x4]
  43a21c:	mov    r8d,DWORD PTR [rcx-0x4]
  43a220:	add    rdx,0x4
  43a224:	sub    r8,r11
  43a227:	sub    r8,r9
  43a22a:	mov    r9,r8
  43a22d:	mov    r11d,r8d
  43a230:	mov    DWORD PTR [rdx-0x4],r8d
  43a234:	shr    r9,0x20
  43a238:	and    r9d,0x1
  43a23c:	cmp    rdi,r10
  43a23f:	ja     0x43a210
  43a241:	cmp    rsi,rcx
  43a244:	mov    rdi,rdx
  43a247:	mov    r10,rcx
  43a24a:	jbe    0x43a286
  43a24c:	nop    DWORD PTR [rax+0x0]
  43a250:	add    rcx,0x4
  43a254:	mov    r8d,DWORD PTR [rcx-0x4]
  43a258:	add    rdx,0x4
  43a25c:	sub    r8,r9
  43a25f:	mov    r9,r8
  43a262:	mov    r11d,r8d
  43a265:	mov    DWORD PTR [rdx-0x4],r8d
  43a269:	shr    r9,0x20
  43a26d:	and    r9d,0x1
  43a271:	cmp    rsi,rcx
  43a274:	ja     0x43a250
  43a276:	not    r10
  43a279:	lea    rdx,[r10+rsi*1]
  43a27d:	shr    rdx,0x2
  43a281:	lea    rdx,[rdi+rdx*4+0x4]
  43a286:	sub    rdx,0x4
  43a28a:	test   r11d,r11d
  43a28d:	jne    0x43a29d
  43a28f:	nop
  43a290:	sub    rdx,0x4
  43a294:	mov    ecx,DWORD PTR [rdx]
  43a296:	sub    ebx,0x1
  43a299:	test   ecx,ecx
  43a29b:	je     0x43a290
  43a29d:	mov    DWORD PTR [rax+0x14],ebx
  43a2a0:	add    rsp,0x20
  43a2a4:	pop    rbx
  43a2a5:	pop    rsi
  43a2a6:	pop    rdi
  43a2a7:	ret    
  43a2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a2b0:	xor    ecx,ecx
  43a2b2:	call   0x439b30
  43a2b7:	test   rax,rax
  43a2ba:	je     0x43a2e2
  43a2bc:	mov    DWORD PTR [rax+0x14],0x1
  43a2c3:	mov    DWORD PTR [rax+0x18],0x0
  43a2ca:	add    rsp,0x20
  43a2ce:	pop    rbx
  43a2cf:	pop    rsi
  43a2d0:	pop    rdi
  43a2d1:	ret    
  43a2d2:	mov    rax,rsi
  43a2d5:	mov    bl,0x1
  43a2d7:	mov    rsi,rdi
  43a2da:	mov    rdi,rax
  43a2dd:	jmp    0x43a1d5
  43a2e2:	xor    eax,eax
  43a2e4:	jmp    0x43a2a0
  43a2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a2f0:	push   rsi
  43a2f1:	push   rbx
  43a2f2:	sub    rsp,0x18
  43a2f6:	movsxd rax,DWORD PTR [rcx+0x14]
  43a2fa:	lea    r10,[rcx+0x18]
  43a2fe:	mov    ecx,0x20
  43a303:	lea    r9,[r10+rax*4]
  43a307:	mov    eax,DWORD PTR [r9-0x4]
  43a30b:	lea    rbx,[r9-0x4]
  43a30f:	bsr    r8d,eax
  43a313:	xor    r8d,0x1f
  43a317:	sub    ecx,r8d
  43a31a:	cmp    r8d,0xa
  43a31e:	mov    DWORD PTR [rdx],ecx
  43a320:	jg     0x43a370
  43a322:	mov    ecx,0xb
  43a327:	mov    r11d,eax
  43a32a:	xor    esi,esi
  43a32c:	sub    ecx,r8d
  43a32f:	shr    r11d,cl
  43a332:	or     r11d,0x3ff00000
  43a339:	shl    r11,0x20
  43a33d:	cmp    r10,rbx
  43a340:	jae    0x43a348
  43a342:	mov    esi,DWORD PTR [r9-0x8]
  43a346:	shr    esi,cl
  43a348:	lea    ecx,[r8+0x15]
  43a34c:	shl    eax,cl
  43a34e:	mov    edx,eax
  43a350:	mov    eax,esi
  43a352:	or     eax,edx
  43a354:	or     rax,r11
  43a357:	mov    QWORD PTR [rsp+0x8],rax
  43a35c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  43a362:	add    rsp,0x18
  43a366:	pop    rbx
  43a367:	pop    rsi
  43a368:	ret    
  43a369:	nop    DWORD PTR [rax+0x0]
  43a370:	cmp    r10,rbx
  43a373:	jae    0x43a3d0
  43a375:	mov    r11d,r8d
  43a378:	lea    rsi,[r9-0x8]
  43a37c:	mov    edx,DWORD PTR [r9-0x8]
  43a380:	sub    r11d,0xb
  43a384:	je     0x43a3f2
  43a386:	mov    ebx,0x2b
  43a38b:	mov    ecx,r11d
  43a38e:	sub    ebx,r8d
  43a391:	shl    eax,cl
  43a393:	mov    r8d,edx
  43a396:	mov    ecx,ebx
  43a398:	shr    r8d,cl
  43a39b:	or     eax,r8d
  43a39e:	xor    r8d,r8d
  43a3a1:	or     eax,0x3ff00000
  43a3a6:	shl    rax,0x20
  43a3aa:	cmp    r10,rsi
  43a3ad:	jae    0x43a3b6
  43a3af:	mov    r8d,DWORD PTR [r9-0xc]
  43a3b3:	shr    r8d,cl
  43a3b6:	mov    ecx,r11d
  43a3b9:	shl    edx,cl
  43a3bb:	or     r8d,edx
  43a3be:	movabs rdx,0xffffffff00000000
  43a3c8:	and    rax,rdx
  43a3cb:	or     rax,r8
  43a3ce:	jmp    0x43a357
  43a3d0:	mov    r11d,r8d
  43a3d3:	sub    r11d,0xb
  43a3d7:	je     0x43a3f0
  43a3d9:	mov    ecx,r11d
  43a3dc:	xor    r8d,r8d
  43a3df:	xor    edx,edx
  43a3e1:	shl    eax,cl
  43a3e3:	or     eax,0x3ff00000
  43a3e8:	shl    rax,0x20
  43a3ec:	jmp    0x43a3b6
  43a3ee:	xchg   ax,ax
  43a3f0:	xor    edx,edx
  43a3f2:	or     eax,0x3ff00000
  43a3f7:	shl    rax,0x20
  43a3fb:	or     rax,rdx
  43a3fe:	jmp    0x43a357
  43a403:	nop    DWORD PTR [rax]
  43a406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a410:	push   rdi
  43a411:	push   rsi
  43a412:	push   rbx
  43a413:	sub    rsp,0x20
  43a417:	mov    ecx,0x1
  43a41c:	movq   rbx,xmm0
  43a421:	mov    rdi,rdx
  43a424:	mov    rsi,r8
  43a427:	call   0x439b30
  43a42c:	test   rax,rax
  43a42f:	je     0x43a515
  43a435:	mov    r9,rbx
  43a438:	shr    r9,0x20
  43a43c:	mov    r10d,r9d
  43a43f:	and    r9d,0x7fffffff
  43a446:	and    r10d,0xfffff
  43a44d:	shr    r9d,0x14
  43a451:	mov    edx,r10d
  43a454:	or     edx,0x100000
  43a45a:	test   r9d,r9d
  43a45d:	cmovne r10d,edx
  43a461:	test   ebx,ebx
  43a463:	jne    0x43a4a4
  43a465:	xor    ecx,ecx
  43a467:	mov    DWORD PTR [rax+0x14],0x1
  43a46e:	mov    edx,0x1
  43a473:	tzcnt  ecx,r10d
  43a478:	shr    r10d,cl
  43a47b:	test   r9d,r9d
  43a47e:	lea    r11d,[rcx+0x20]
  43a482:	mov    DWORD PTR [rax+0x18],r10d
  43a486:	je     0x43a4e3
  43a488:	lea    edx,[r11+r9*1-0x433]
  43a490:	mov    DWORD PTR [rdi],edx
  43a492:	mov    edx,0x35
  43a497:	sub    edx,r11d
  43a49a:	mov    DWORD PTR [rsi],edx
  43a49c:	add    rsp,0x20
  43a4a0:	pop    rbx
  43a4a1:	pop    rsi
  43a4a2:	pop    rdi
  43a4a3:	ret    
  43a4a4:	xor    r11d,r11d
  43a4a7:	tzcnt  r11d,ebx
  43a4ac:	mov    ecx,r11d
  43a4af:	shr    ebx,cl
  43a4b1:	test   r11d,r11d
  43a4b4:	je     0x43a510
  43a4b6:	mov    ecx,0x20
  43a4bb:	mov    edx,r10d
  43a4be:	sub    ecx,r11d
  43a4c1:	shl    edx,cl
  43a4c3:	mov    ecx,r11d
  43a4c6:	or     ebx,edx
  43a4c8:	shr    r10d,cl
  43a4cb:	mov    DWORD PTR [rax+0x18],ebx
  43a4ce:	cmp    r10d,0x1
  43a4d2:	mov    DWORD PTR [rax+0x1c],r10d
  43a4d6:	sbb    edx,edx
  43a4d8:	add    edx,0x2
  43a4db:	test   r9d,r9d
  43a4de:	mov    DWORD PTR [rax+0x14],edx
  43a4e1:	jne    0x43a488
  43a4e3:	movsxd rcx,edx
  43a4e6:	shl    edx,0x5
  43a4e9:	sub    r11d,0x432
  43a4f0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  43a4f5:	mov    DWORD PTR [rdi],r11d
  43a4f8:	xor    ecx,0x1f
  43a4fb:	sub    edx,ecx
  43a4fd:	mov    DWORD PTR [rsi],edx
  43a4ff:	add    rsp,0x20
  43a503:	pop    rbx
  43a504:	pop    rsi
  43a505:	pop    rdi
  43a506:	ret    
  43a507:	nop    WORD PTR [rax+rax*1+0x0]
  43a510:	mov    DWORD PTR [rax+0x18],ebx
  43a513:	jmp    0x43a4ce
  43a515:	xor    eax,eax
  43a517:	jmp    0x43a49c
  43a519:	nop    DWORD PTR [rax+0x0]
  43a520:	mov    rax,rcx
  43a523:	lea    rcx,[rdx+0x1]
  43a527:	movzx  edx,BYTE PTR [rdx]
  43a52a:	test   dl,dl
  43a52c:	mov    BYTE PTR [rax],dl
  43a52e:	je     0x43a542
  43a530:	add    rcx,0x1
  43a534:	movzx  edx,BYTE PTR [rcx-0x1]
  43a538:	add    rax,0x1
  43a53c:	test   dl,dl
  43a53e:	mov    BYTE PTR [rax],dl
  43a540:	jne    0x43a530
  43a542:	repz ret 
  43a544:	nop
  43a545:	nop
  43a546:	nop
  43a547:	nop
  43a548:	nop
  43a549:	nop
  43a54a:	nop
  43a54b:	nop
  43a54c:	nop
  43a54d:	nop
  43a54e:	nop
  43a54f:	nop
  43a550:	jmp    QWORD PTR [rip+0x1a6d2]        # 0x454c28
  43a556:	nop
  43a557:	nop
  43a558:	jmp    QWORD PTR [rip+0x1a6c2]        # 0x454c20
  43a55e:	nop
  43a55f:	nop
  43a560:	jmp    QWORD PTR [rip+0x1a6b2]        # 0x454c18
  43a566:	nop
  43a567:	nop
  43a568:	jmp    QWORD PTR [rip+0x1a6a2]        # 0x454c10
  43a56e:	nop
  43a56f:	nop
  43a570:	jmp    QWORD PTR [rip+0x1a692]        # 0x454c08
  43a576:	nop
  43a577:	nop
  43a578:	jmp    QWORD PTR [rip+0x1a682]        # 0x454c00
  43a57e:	nop
  43a57f:	nop
  43a580:	jmp    QWORD PTR [rip+0x1a672]        # 0x454bf8
  43a586:	nop
  43a587:	nop
  43a588:	jmp    QWORD PTR [rip+0x1a662]        # 0x454bf0
  43a58e:	nop
  43a58f:	nop
  43a590:	jmp    QWORD PTR [rip+0x1a652]        # 0x454be8
  43a596:	nop
  43a597:	nop
  43a598:	jmp    QWORD PTR [rip+0x1a642]        # 0x454be0
  43a59e:	nop
  43a59f:	nop
  43a5a0:	jmp    QWORD PTR [rip+0x1a632]        # 0x454bd8
  43a5a6:	nop
  43a5a7:	nop
  43a5a8:	jmp    QWORD PTR [rip+0x1a622]        # 0x454bd0
  43a5ae:	nop
  43a5af:	nop
  43a5b0:	jmp    QWORD PTR [rip+0x1a612]        # 0x454bc8
  43a5b6:	nop
  43a5b7:	nop
  43a5b8:	jmp    QWORD PTR [rip+0x1a602]        # 0x454bc0
  43a5be:	nop
  43a5bf:	nop
  43a5c0:	jmp    QWORD PTR [rip+0x1a5f2]        # 0x454bb8
  43a5c6:	nop
  43a5c7:	nop
  43a5c8:	jmp    QWORD PTR [rip+0x1a5e2]        # 0x454bb0
  43a5ce:	nop
  43a5cf:	nop
  43a5d0:	jmp    QWORD PTR [rip+0x1a5d2]        # 0x454ba8
  43a5d6:	nop
  43a5d7:	nop
  43a5d8:	jmp    QWORD PTR [rip+0x1a5c2]        # 0x454ba0
  43a5de:	nop
  43a5df:	nop
  43a5e0:	jmp    QWORD PTR [rip+0x1a5b2]        # 0x454b98
  43a5e6:	nop
  43a5e7:	nop
  43a5e8:	jmp    QWORD PTR [rip+0x1a5a2]        # 0x454b90
  43a5ee:	nop
  43a5ef:	nop
  43a5f0:	jmp    QWORD PTR [rip+0x1a592]        # 0x454b88
  43a5f6:	nop
  43a5f7:	nop
  43a5f8:	jmp    QWORD PTR [rip+0x1a582]        # 0x454b80
  43a5fe:	nop
  43a5ff:	nop
  43a600:	jmp    QWORD PTR [rip+0x1a572]        # 0x454b78
  43a606:	nop
  43a607:	nop
  43a608:	jmp    QWORD PTR [rip+0x1a562]        # 0x454b70
  43a60e:	nop
  43a60f:	nop
  43a610:	jmp    QWORD PTR [rip+0x1a552]        # 0x454b68
  43a616:	nop
  43a617:	nop
  43a618:	jmp    QWORD PTR [rip+0x1a542]        # 0x454b60
  43a61e:	nop
  43a61f:	nop
  43a620:	jmp    QWORD PTR [rip+0x1a532]        # 0x454b58
  43a626:	nop
  43a627:	nop
  43a628:	jmp    QWORD PTR [rip+0x1a522]        # 0x454b50
  43a62e:	nop
  43a62f:	nop
  43a630:	jmp    QWORD PTR [rip+0x1a512]        # 0x454b48
  43a636:	nop
  43a637:	nop
  43a638:	jmp    QWORD PTR [rip+0x1a502]        # 0x454b40
  43a63e:	nop
  43a63f:	nop
  43a640:	jmp    QWORD PTR [rip+0x1a4f2]        # 0x454b38
  43a646:	nop
  43a647:	nop
  43a648:	jmp    QWORD PTR [rip+0x1a4e2]        # 0x454b30
  43a64e:	nop
  43a64f:	nop
  43a650:	jmp    QWORD PTR [rip+0x1a4d2]        # 0x454b28
  43a656:	nop
  43a657:	nop
  43a658:	jmp    QWORD PTR [rip+0x1a4c2]        # 0x454b20
  43a65e:	nop
  43a65f:	nop
  43a660:	jmp    QWORD PTR [rip+0x1a4b2]        # 0x454b18
  43a666:	nop
  43a667:	nop
  43a668:	jmp    QWORD PTR [rip+0x1a4a2]        # 0x454b10
  43a66e:	nop
  43a66f:	nop
  43a670:	jmp    QWORD PTR [rip+0x1a492]        # 0x454b08
  43a676:	nop
  43a677:	nop
  43a678:	jmp    QWORD PTR [rip+0x1a482]        # 0x454b00
  43a67e:	nop
  43a67f:	nop
  43a680:	jmp    QWORD PTR [rip+0x1a472]        # 0x454af8
  43a686:	nop
  43a687:	nop
  43a688:	jmp    QWORD PTR [rip+0x1a462]        # 0x454af0
  43a68e:	nop
  43a68f:	nop
  43a690:	jmp    QWORD PTR [rip+0x1a452]        # 0x454ae8
  43a696:	nop
  43a697:	nop
  43a698:	jmp    QWORD PTR [rip+0x1a442]        # 0x454ae0
  43a69e:	nop
  43a69f:	nop
  43a6a0:	jmp    QWORD PTR [rip+0x1a432]        # 0x454ad8
  43a6a6:	nop
  43a6a7:	nop
  43a6a8:	jmp    QWORD PTR [rip+0x1a422]        # 0x454ad0
  43a6ae:	nop
  43a6af:	nop
  43a6b0:	jmp    QWORD PTR [rip+0x1a412]        # 0x454ac8
  43a6b6:	nop
  43a6b7:	nop
  43a6b8:	jmp    QWORD PTR [rip+0x1a402]        # 0x454ac0
  43a6be:	nop
  43a6bf:	nop
  43a6c0:	jmp    QWORD PTR [rip+0x1a3f2]        # 0x454ab8
  43a6c6:	nop
  43a6c7:	nop
  43a6c8:	jmp    QWORD PTR [rip+0x1a3e2]        # 0x454ab0
  43a6ce:	nop
  43a6cf:	nop
  43a6d0:	jmp    QWORD PTR [rip+0x1a3d2]        # 0x454aa8
  43a6d6:	nop
  43a6d7:	nop
  43a6d8:	jmp    QWORD PTR [rip+0x1a3c2]        # 0x454aa0
  43a6de:	nop
  43a6df:	nop
  43a6e0:	jmp    QWORD PTR [rip+0x1a3b2]        # 0x454a98
  43a6e6:	nop
  43a6e7:	nop
  43a6e8:	jmp    QWORD PTR [rip+0x1a3a2]        # 0x454a90
  43a6ee:	nop
  43a6ef:	nop
  43a6f0:	jmp    QWORD PTR [rip+0x1a392]        # 0x454a88
  43a6f6:	nop
  43a6f7:	nop
  43a6f8:	jmp    QWORD PTR [rip+0x1a382]        # 0x454a80
  43a6fe:	nop
  43a6ff:	nop
  43a700:	jmp    QWORD PTR [rip+0x1a372]        # 0x454a78
  43a706:	nop
  43a707:	nop
  43a708:	jmp    QWORD PTR [rip+0x1a362]        # 0x454a70
  43a70e:	nop
  43a70f:	nop
  43a710:	jmp    QWORD PTR [rip+0x1a352]        # 0x454a68
  43a716:	nop
  43a717:	nop
  43a718:	jmp    QWORD PTR [rip+0x1a342]        # 0x454a60
  43a71e:	nop
  43a71f:	nop
  43a720:	jmp    QWORD PTR [rip+0x1a332]        # 0x454a58
  43a726:	nop
  43a727:	nop
  43a728:	jmp    QWORD PTR [rip+0x1a322]        # 0x454a50
  43a72e:	nop
  43a72f:	nop
  43a730:	jmp    QWORD PTR [rip+0x1a312]        # 0x454a48
  43a736:	nop
  43a737:	nop
  43a738:	jmp    QWORD PTR [rip+0x1a302]        # 0x454a40
  43a73e:	nop
  43a73f:	nop
  43a740:	jmp    QWORD PTR [rip+0x1a2f2]        # 0x454a38
  43a746:	nop
  43a747:	nop
  43a748:	jmp    QWORD PTR [rip+0x1a2e2]        # 0x454a30
  43a74e:	nop
  43a74f:	nop
  43a750:	jmp    QWORD PTR [rip+0x1a2d2]        # 0x454a28
  43a756:	nop
  43a757:	nop
  43a758:	jmp    QWORD PTR [rip+0x1a2c2]        # 0x454a20
  43a75e:	nop
  43a75f:	nop
  43a760:	jmp    QWORD PTR [rip+0x1a2b2]        # 0x454a18
  43a766:	nop
  43a767:	nop
  43a768:	jmp    QWORD PTR [rip+0x1a2a2]        # 0x454a10
  43a76e:	nop
  43a76f:	nop
  43a770:	jmp    QWORD PTR [rip+0x1a292]        # 0x454a08
  43a776:	nop
  43a777:	nop
  43a778:	jmp    QWORD PTR [rip+0x1a282]        # 0x454a00
  43a77e:	nop
  43a77f:	nop
  43a780:	jmp    QWORD PTR [rip+0x1a272]        # 0x4549f8
  43a786:	nop
  43a787:	nop
  43a788:	jmp    QWORD PTR [rip+0x1a262]        # 0x4549f0
  43a78e:	nop
  43a78f:	nop
  43a790:	jmp    QWORD PTR [rip+0x1a252]        # 0x4549e8
  43a796:	nop
  43a797:	nop
  43a798:	jmp    QWORD PTR [rip+0x1a242]        # 0x4549e0
  43a79e:	nop
  43a79f:	nop
  43a7a0:	jmp    QWORD PTR [rip+0x1a232]        # 0x4549d8
  43a7a6:	nop
  43a7a7:	nop
  43a7a8:	jmp    QWORD PTR [rip+0x1a222]        # 0x4549d0
  43a7ae:	nop
  43a7af:	nop
  43a7b0:	jmp    QWORD PTR [rip+0x1a212]        # 0x4549c8
  43a7b6:	nop
  43a7b7:	nop
  43a7b8:	jmp    QWORD PTR [rip+0x1a202]        # 0x4549c0
  43a7be:	nop
  43a7bf:	nop
  43a7c0:	jmp    QWORD PTR [rip+0x1a1f2]        # 0x4549b8
  43a7c6:	nop
  43a7c7:	nop
  43a7c8:	jmp    QWORD PTR [rip+0x1a1e2]        # 0x4549b0
  43a7ce:	nop
  43a7cf:	nop
  43a7d0:	jmp    QWORD PTR [rip+0x1a1d2]        # 0x4549a8
  43a7d6:	nop
  43a7d7:	nop
  43a7d8:	jmp    QWORD PTR [rip+0x1a1c2]        # 0x4549a0
  43a7de:	nop
  43a7df:	nop
  43a7e0:	jmp    QWORD PTR [rip+0x1a1b2]        # 0x454998
  43a7e6:	nop
  43a7e7:	nop
  43a7e8:	jmp    QWORD PTR [rip+0x1a1a2]        # 0x454990
  43a7ee:	nop
  43a7ef:	nop
  43a7f0:	jmp    QWORD PTR [rip+0x1a192]        # 0x454988
  43a7f6:	nop
  43a7f7:	nop
  43a7f8:	jmp    QWORD PTR [rip+0x1a182]        # 0x454980
  43a7fe:	nop
  43a7ff:	nop
  43a800:	jmp    QWORD PTR [rip+0x1a172]        # 0x454978
  43a806:	nop
  43a807:	nop
  43a808:	jmp    QWORD PTR [rip+0x1a162]        # 0x454970
  43a80e:	nop
  43a80f:	nop
  43a810:	jmp    QWORD PTR [rip+0x1a152]        # 0x454968
  43a816:	nop
  43a817:	nop
  43a818:	jmp    QWORD PTR [rip+0x1a142]        # 0x454960
  43a81e:	nop
  43a81f:	nop
  43a820:	jmp    QWORD PTR [rip+0x1a132]        # 0x454958
  43a826:	nop
  43a827:	nop
  43a828:	jmp    QWORD PTR [rip+0x1a11a]        # 0x454948
  43a82e:	nop
  43a82f:	nop
  43a830:	jmp    QWORD PTR [rip+0x1a10a]        # 0x454940
  43a836:	nop
  43a837:	nop
  43a838:	jmp    QWORD PTR [rip+0x1a0fa]        # 0x454938
  43a83e:	nop
  43a83f:	nop
  43a840:	jmp    QWORD PTR [rip+0x1a0ea]        # 0x454930
  43a846:	nop
  43a847:	nop
  43a848:	jmp    QWORD PTR [rip+0x1a0da]        # 0x454928
  43a84e:	nop
  43a84f:	nop
  43a850:	jmp    QWORD PTR [rip+0x1a0ca]        # 0x454920
  43a856:	nop
  43a857:	nop
  43a858:	jmp    QWORD PTR [rip+0x1a0b2]        # 0x454910
  43a85e:	nop
  43a85f:	nop
  43a860:	jmp    QWORD PTR [rip+0x1a0a2]        # 0x454908
  43a866:	nop
  43a867:	nop
  43a868:	jmp    QWORD PTR [rip+0x1a08a]        # 0x4548f8
  43a86e:	nop
  43a86f:	nop
  43a870:	jmp    QWORD PTR [rip+0x1a07a]        # 0x4548f0
  43a876:	nop
  43a877:	nop
  43a878:	jmp    QWORD PTR [rip+0x1a062]        # 0x4548e0
  43a87e:	nop
  43a87f:	nop
  43a880:	jmp    QWORD PTR [rip+0x1a052]        # 0x4548d8
  43a886:	nop
  43a887:	nop
  43a888:	jmp    QWORD PTR [rip+0x1a042]        # 0x4548d0
  43a88e:	nop
  43a88f:	nop
  43a890:	jmp    QWORD PTR [rip+0x1a032]        # 0x4548c8
  43a896:	nop
  43a897:	nop
  43a898:	nop    DWORD PTR [rax+rax*1+0x0]
  43a8a0:	mov    rax,QWORD PTR [rip+0x18f19]        # 0x4537c0
  43a8a7:	ret    
  43a8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a8b0:	mov    rax,rcx
  43a8b3:	xchg   QWORD PTR [rip+0x18f06],rax        # 0x4537c0
  43a8ba:	ret    
  43a8bb:	nop
  43a8bc:	nop
  43a8bd:	nop
  43a8be:	nop
  43a8bf:	nop
  43a8c0:	mov    eax,DWORD PTR [rip+0x18f0a]        # 0x4537d0
  43a8c6:	ret    
  43a8c7:	nop    WORD PTR [rax+rax*1+0x0]
  43a8d0:	mov    eax,ecx
  43a8d2:	xchg   DWORD PTR [rip+0x18ef8],eax        # 0x4537d0
  43a8d8:	ret    
  43a8d9:	nop    DWORD PTR [rax+0x0]
  43a8e0:	push   rbx
  43a8e1:	sub    rsp,0x20
  43a8e5:	mov    ebx,ecx
  43a8e7:	lea    rcx,[rip+0xecd2]        # 0x4495c0
  43a8ee:	call   QWORD PTR [rip+0x19eb4]        # 0x4547a8
  43a8f4:	lea    rdx,[rip+0xecdb]        # 0x4495d6
  43a8fb:	mov    rcx,rax
  43a8fe:	call   QWORD PTR [rip+0x19eb4]        # 0x4547b8
  43a904:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x43a8d0
  43a90b:	test   rax,rax
  43a90e:	mov    ecx,ebx
  43a910:	cmove  rax,rdx
  43a914:	mov    QWORD PTR [rip+0x582d],rax        # 0x440148
  43a91b:	add    rsp,0x20
  43a91f:	pop    rbx
  43a920:	rex.W jmp rax
  43a923:	nop    DWORD PTR [rax]
  43a926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a930:	sub    rsp,0x28
  43a934:	lea    rcx,[rip+0xec85]        # 0x4495c0
  43a93b:	call   QWORD PTR [rip+0x19e67]        # 0x4547a8
  43a941:	lea    rdx,[rip+0xeca1]        # 0x4495e9
  43a948:	mov    rcx,rax
  43a94b:	call   QWORD PTR [rip+0x19e67]        # 0x4547b8
  43a951:	lea    rdx,[rip+0xffffffffffffff68]        # 0x43a8c0
  43a958:	test   rax,rax
  43a95b:	cmove  rax,rdx
  43a95f:	mov    QWORD PTR [rip+0x57da],rax        # 0x440140
  43a966:	add    rsp,0x28
  43a96a:	rex.W jmp rax
  43a96d:	nop    DWORD PTR [rax]
  43a970:	mov    rax,QWORD PTR [rip+0x57d1]        # 0x440148
  43a977:	rex.W jmp rax
  43a97a:	nop    WORD PTR [rax+rax*1+0x0]
  43a980:	mov    rax,QWORD PTR [rip+0x57b9]        # 0x440140
  43a987:	rex.W jmp rax
  43a98a:	nop
  43a98b:	nop
  43a98c:	nop
  43a98d:	nop
  43a98e:	nop
  43a98f:	nop
  43a990:	jmp    QWORD PTR [rip+0x1a30a]        # 0x454ca0
  43a996:	nop
  43a997:	nop
  43a998:	nop    DWORD PTR [rax+rax*1+0x0]
  43a9a0:	jmp    QWORD PTR [rip+0x19f12]        # 0x4548b8
  43a9a6:	nop
  43a9a7:	nop
  43a9a8:	jmp    QWORD PTR [rip+0x19f02]        # 0x4548b0
  43a9ae:	nop
  43a9af:	nop
  43a9b0:	jmp    QWORD PTR [rip+0x19ef2]        # 0x4548a8
  43a9b6:	nop
  43a9b7:	nop
  43a9b8:	jmp    QWORD PTR [rip+0x19ee2]        # 0x4548a0
  43a9be:	nop
  43a9bf:	nop
  43a9c0:	jmp    QWORD PTR [rip+0x19ed2]        # 0x454898
  43a9c6:	nop
  43a9c7:	nop
  43a9c8:	jmp    QWORD PTR [rip+0x19ec2]        # 0x454890
  43a9ce:	nop
  43a9cf:	nop
  43a9d0:	jmp    QWORD PTR [rip+0x19eb2]        # 0x454888
  43a9d6:	nop
  43a9d7:	nop
  43a9d8:	jmp    QWORD PTR [rip+0x19ea2]        # 0x454880
  43a9de:	nop
  43a9df:	nop
  43a9e0:	jmp    QWORD PTR [rip+0x19e92]        # 0x454878
  43a9e6:	nop
  43a9e7:	nop
  43a9e8:	jmp    QWORD PTR [rip+0x19e82]        # 0x454870
  43a9ee:	nop
  43a9ef:	nop
  43a9f0:	jmp    QWORD PTR [rip+0x19e72]        # 0x454868
  43a9f6:	nop
  43a9f7:	nop
  43a9f8:	jmp    QWORD PTR [rip+0x19e62]        # 0x454860
  43a9fe:	nop
  43a9ff:	nop
  43aa00:	jmp    QWORD PTR [rip+0x19e52]        # 0x454858
  43aa06:	nop
  43aa07:	nop
  43aa08:	jmp    QWORD PTR [rip+0x19e42]        # 0x454850
  43aa0e:	nop
  43aa0f:	nop
  43aa10:	jmp    QWORD PTR [rip+0x19e32]        # 0x454848
  43aa16:	nop
  43aa17:	nop
  43aa18:	jmp    QWORD PTR [rip+0x19e22]        # 0x454840
  43aa1e:	nop
  43aa1f:	nop
  43aa20:	jmp    QWORD PTR [rip+0x19e12]        # 0x454838
  43aa26:	nop
  43aa27:	nop
  43aa28:	jmp    QWORD PTR [rip+0x19e02]        # 0x454830
  43aa2e:	nop
  43aa2f:	nop
  43aa30:	jmp    QWORD PTR [rip+0x19df2]        # 0x454828
  43aa36:	nop
  43aa37:	nop
  43aa38:	jmp    QWORD PTR [rip+0x19de2]        # 0x454820
  43aa3e:	nop
  43aa3f:	nop
  43aa40:	jmp    QWORD PTR [rip+0x19dd2]        # 0x454818
  43aa46:	nop
  43aa47:	nop
  43aa48:	jmp    QWORD PTR [rip+0x19dc2]        # 0x454810
  43aa4e:	nop
  43aa4f:	nop
  43aa50:	jmp    QWORD PTR [rip+0x19db2]        # 0x454808
  43aa56:	nop
  43aa57:	nop
  43aa58:	jmp    QWORD PTR [rip+0x19da2]        # 0x454800
  43aa5e:	nop
  43aa5f:	nop
  43aa60:	jmp    QWORD PTR [rip+0x19d92]        # 0x4547f8
  43aa66:	nop
  43aa67:	nop
  43aa68:	jmp    QWORD PTR [rip+0x19d82]        # 0x4547f0
  43aa6e:	nop
  43aa6f:	nop
  43aa70:	jmp    QWORD PTR [rip+0x19d72]        # 0x4547e8
  43aa76:	nop
  43aa77:	nop
  43aa78:	jmp    QWORD PTR [rip+0x19d62]        # 0x4547e0
  43aa7e:	nop
  43aa7f:	nop
  43aa80:	jmp    QWORD PTR [rip+0x19d52]        # 0x4547d8
  43aa86:	nop
  43aa87:	nop
  43aa88:	jmp    QWORD PTR [rip+0x19d42]        # 0x4547d0
  43aa8e:	nop
  43aa8f:	nop
  43aa90:	jmp    QWORD PTR [rip+0x19d32]        # 0x4547c8
  43aa96:	nop
  43aa97:	nop
  43aa98:	jmp    QWORD PTR [rip+0x19d22]        # 0x4547c0
  43aa9e:	nop
  43aa9f:	nop
  43aaa0:	jmp    QWORD PTR [rip+0x19d12]        # 0x4547b8
  43aaa6:	nop
  43aaa7:	nop
  43aaa8:	jmp    QWORD PTR [rip+0x19d02]        # 0x4547b0
  43aaae:	nop
  43aaaf:	nop
  43aab0:	jmp    QWORD PTR [rip+0x19cf2]        # 0x4547a8
  43aab6:	nop
  43aab7:	nop
  43aab8:	jmp    QWORD PTR [rip+0x19ce2]        # 0x4547a0
  43aabe:	nop
  43aabf:	nop
  43aac0:	jmp    QWORD PTR [rip+0x19cd2]        # 0x454798
  43aac6:	nop
  43aac7:	nop
  43aac8:	jmp    QWORD PTR [rip+0x19cc2]        # 0x454790
  43aace:	nop
  43aacf:	nop
  43aad0:	jmp    QWORD PTR [rip+0x19cb2]        # 0x454788
  43aad6:	nop
  43aad7:	nop
  43aad8:	jmp    QWORD PTR [rip+0x19ca2]        # 0x454780
  43aade:	nop
  43aadf:	nop
  43aae0:	jmp    QWORD PTR [rip+0x19c92]        # 0x454778
  43aae6:	nop
  43aae7:	nop
  43aae8:	jmp    QWORD PTR [rip+0x19c82]        # 0x454770
  43aaee:	nop
  43aaef:	nop
  43aaf0:	jmp    QWORD PTR [rip+0x19c72]        # 0x454768
  43aaf6:	nop
  43aaf7:	nop
  43aaf8:	jmp    QWORD PTR [rip+0x19c62]        # 0x454760
  43aafe:	nop
  43aaff:	nop
  43ab00:	jmp    QWORD PTR [rip+0x19c52]        # 0x454758
  43ab06:	nop
  43ab07:	nop
  43ab08:	jmp    QWORD PTR [rip+0x19c42]        # 0x454750
  43ab0e:	nop
  43ab0f:	nop
  43ab10:	jmp    QWORD PTR [rip+0x19c32]        # 0x454748
  43ab16:	nop
  43ab17:	nop
  43ab18:	jmp    QWORD PTR [rip+0x19c22]        # 0x454740
  43ab1e:	nop
  43ab1f:	nop
  43ab20:	jmp    QWORD PTR [rip+0x19c12]        # 0x454738
  43ab26:	nop
  43ab27:	nop
  43ab28:	jmp    QWORD PTR [rip+0x19c02]        # 0x454730
  43ab2e:	nop
  43ab2f:	nop
  43ab30:	jmp    QWORD PTR [rip+0x19bf2]        # 0x454728
  43ab36:	nop
  43ab37:	nop
  43ab38:	nop    DWORD PTR [rax+rax*1+0x0]
  43ab40:	push   r15
  43ab42:	push   r14
  43ab44:	push   r13
  43ab46:	push   r12
  43ab48:	push   rbp
  43ab49:	push   rdi
  43ab4a:	push   rsi
  43ab4b:	push   rbx
  43ab4c:	sub    rsp,0xa8
  43ab53:	xor    r13d,r13d
  43ab56:	mov    esi,ecx
  43ab58:	mov    rbx,rdx
  43ab5b:	lea    rdi,[rsp+0x84]
  43ab63:	call   0x4340f0
  43ab68:	lea    rdx,[rip+0x6f11]        # 0x441a80
  43ab6f:	xor    ecx,ecx
  43ab71:	mov    QWORD PTR [rsp+0x90],0x0
  43ab7d:	call   0x433f08
  43ab82:	lea    rdx,[rip+0x6eff]        # 0x441a88
  43ab89:	lea    rcx,[rip+0x6f41]        # 0x441ad1
  43ab90:	call   0x433f28
  43ab95:	lea    rcx,[rip+0x6f35]        # 0x441ad1
  43ab9c:	call   0x433ef8
  43aba1:	lea    rcx,[rip+0x6f31]        # 0x441ad9
  43aba8:	call   0x433f18
  43abad:	lea    rcx,[rip+0x6f3c]        # 0x441af0
  43abb4:	mov    QWORD PTR [rip+0x18cb5],rax        # 0x453870
  43abbb:	call   0x433f18
  43abc0:	lea    rcx,[rip+0x6f44]        # 0x441b0b
  43abc7:	mov    QWORD PTR [rip+0x18caa],rax        # 0x453878
  43abce:	call   0x433f18
  43abd3:	lea    rcx,[rip+0x6f4e]        # 0x441b28
  43abda:	mov    QWORD PTR [rip+0x18c3f],rax        # 0x453820
  43abe1:	call   0x433f18
  43abe6:	lea    rcx,[rip+0x6f6b]        # 0x441b58
  43abed:	mov    QWORD PTR [rip+0x18c54],rax        # 0x453848
  43abf4:	call   0x433f18
  43abf9:	lea    rcx,[rip+0x6f77]        # 0x441b77
  43ac00:	mov    QWORD PTR [rip+0x18c11],rax        # 0x453818
  43ac07:	call   0x433f18
  43ac0c:	lea    rcx,[rip+0x6f7a]        # 0x441b8d
  43ac13:	mov    QWORD PTR [rip+0x18c36],rax        # 0x453850
  43ac1a:	call   0x433f18
  43ac1f:	lea    rcx,[rip+0x6f82]        # 0x441ba8
  43ac26:	mov    QWORD PTR [rip+0x18c3b],rax        # 0x453868
  43ac2d:	call   0x433f18
  43ac32:	lea    rcx,[rip+0x6f97]        # 0x441bd0
  43ac39:	mov    QWORD PTR [rip+0x18be8],rax        # 0x453828
  43ac40:	call   0x433f18
  43ac45:	lea    rcx,[rip+0x6fa4]        # 0x441bf0
  43ac4c:	mov    QWORD PTR [rip+0x18c35],rax        # 0x453888
  43ac53:	call   0x433f18
  43ac58:	lea    rcx,[rip+0x6fc1]        # 0x441c20
  43ac5f:	mov    QWORD PTR [rip+0x18bfa],rax        # 0x453860
  43ac66:	call   0x433f18
  43ac6b:	lea    rcx,[rip+0x6fe6]        # 0x441c58
  43ac72:	mov    QWORD PTR [rip+0x18bbf],rax        # 0x453838
  43ac79:	call   0x433f18
  43ac7e:	lea    rcx,[rip+0x7003]        # 0x441c88
  43ac85:	mov    QWORD PTR [rip+0x18bb4],rax        # 0x453840
  43ac8c:	call   0x433f18
  43ac91:	lea    rcx,[rip+0x7020]        # 0x441cb8
  43ac98:	mov    QWORD PTR [rip+0x18bf1],rax        # 0x453890
  43ac9f:	call   0x433f18
  43aca4:	lea    rcx,[rip+0x7025]        # 0x441cd0
  43acab:	mov    QWORD PTR [rip+0x18ba6],rax        # 0x453858
  43acb2:	call   0x433f18
  43acb7:	lea    rcx,[rip+0x703a]        # 0x441cf8
  43acbe:	mov    QWORD PTR [rip+0x18b6b],rax        # 0x453830
  43acc5:	call   0x433f18
  43acca:	mov    rbp,QWORD PTR [rip+0xee6f]        # 0x449b40
  43acd1:	mov    QWORD PTR [rip+0x18ba8],rax        # 0x453880
  43acd8:	mov    rax,QWORD PTR [rip+0xeb41]        # 0x449820
  43acdf:	mov    r12,rbp
  43ace2:	mov    r15,rbp
  43ace5:	mov    r14,rbp
  43ace8:	mov    QWORD PTR [rsp+0x50],rax
  43aced:	nop    DWORD PTR [rax]
  43acf0:	lea    r9,[rip+0x2689]        # 0x43d380
  43acf7:	lea    r8,[rip+0x7035]        # 0x441d33
  43acfe:	mov    QWORD PTR [rsp+0x20],rdi
  43ad03:	mov    rdx,rbx
  43ad06:	mov    ecx,esi
  43ad08:	call   0x423de0
  43ad0d:	cmp    eax,0xffffffff
  43ad10:	je     0x43b07b
  43ad16:	test   eax,eax
  43ad18:	jne    0x43ad40
  43ad1a:	movsxd rax,DWORD PTR [rsp+0x84]
  43ad22:	lea    rdx,[rip+0x2657]        # 0x43d380
  43ad29:	shl    rax,0x5
  43ad2d:	add    rax,rdx
  43ad30:	cmp    QWORD PTR [rax+0x10],0x0
  43ad35:	jne    0x43acf0
  43ad37:	mov    eax,DWORD PTR [rax+0x18]
  43ad3a:	nop    WORD PTR [rax+rax*1+0x0]
  43ad40:	cmp    eax,0x78
  43ad43:	ja     0x43b050
  43ad49:	lea    rdx,[rip+0x7d7c]        # 0x442acc
  43ad50:	mov    eax,eax
  43ad52:	movsxd rax,DWORD PTR [rdx+rax*4]
  43ad56:	add    rdx,rax
  43ad59:	jmp    rdx
  43ad5b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ad60:	mov    rax,QWORD PTR [rbp+0x0]
  43ad64:	lea    rdx,[rsp+0x98]
  43ad6c:	mov    r8d,0xa
  43ad72:	mov    rcx,rax
  43ad75:	mov    QWORD PTR [rsp+0x48],rax
  43ad7a:	call   0x43a5f8
  43ad7f:	mov    rdx,QWORD PTR [rsp+0x98]
  43ad87:	cmp    BYTE PTR [rdx],0x0
  43ad8a:	jne    0x43c66a
  43ad90:	test   eax,eax
  43ad92:	js     0x43b31c
  43ad98:	mov    rcx,QWORD PTR [rip+0xea81]        # 0x449820
  43ad9f:	mov    DWORD PTR [rcx],eax
  43ada1:	jmp    0x43acf0
  43ada6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43adb0:	mov    DWORD PTR [rip+0x1666a],0x1        # 0x451424
  43adba:	jmp    0x43acf0
  43adbf:	nop
  43adc0:	mov    rax,QWORD PTR [r12]
  43adc4:	mov    edx,0x3d
  43adc9:	mov    rcx,rax
  43adcc:	mov    QWORD PTR [rsp+0x48],rax
  43add1:	call   0x43a650
  43add6:	test   rax,rax
  43add9:	je     0x43bd5e
  43addf:	lea    rcx,[rax+0x1]
  43ade3:	mov    BYTE PTR [rax],0x0
  43ade6:	mov    QWORD PTR [rsp+0x48],rcx
  43adeb:	mov    rcx,QWORD PTR [r12]
  43adef:	call   0x41eff0
  43adf4:	test   rax,rax
  43adf7:	je     0x43bd39
  43adfd:	mov    rdx,QWORD PTR [rsp+0x48]
  43ae02:	mov    r8d,0x2
  43ae08:	mov    rcx,rax
  43ae0b:	call   0x41f490
  43ae10:	test   eax,eax
  43ae12:	jne    0x43acf0
  43ae18:	lea    rcx,[rip+0x6f69]        # 0x441d88
  43ae1f:	mov    rbx,QWORD PTR [r12]
  43ae23:	call   0x433f18
  43ae28:	mov    rdx,QWORD PTR [rsp+0x48]
  43ae2d:	mov    rcx,rax
  43ae30:	mov    r8,rbx
  43ae33:	call   0x4144d0
  43ae38:	mov    ecx,0x1
  43ae3d:	call   0x43a790
  43ae42:	mov    DWORD PTR [rip+0x165d4],0x1        # 0x451420
  43ae4c:	jmp    0x43acf0
  43ae51:	mov    rcx,QWORD PTR [rip+0x165d8]        # 0x451430
  43ae58:	test   rcx,rcx
  43ae5b:	je     0x43ae62
  43ae5d:	call   0x43a748
  43ae62:	mov    rax,QWORD PTR [rip+0xecd7]        # 0x449b40
  43ae69:	mov    rcx,QWORD PTR [rax]
  43ae6c:	call   0x422a00
  43ae71:	mov    QWORD PTR [rip+0x165b8],rax        # 0x451430
  43ae78:	jmp    0x43acf0
  43ae7d:	nop    DWORD PTR [rax]
  43ae80:	mov    rax,QWORD PTR [rip+0x165d9]        # 0x451460
  43ae87:	mov    rdx,QWORD PTR [rip+0x165ca]        # 0x451458
  43ae8e:	lea    rcx,[rax+0x2]
  43ae92:	cmp    rcx,rdx
  43ae95:	jb     0x43aee8
  43ae97:	test   rdx,rdx
  43ae9a:	mov    rcx,QWORD PTR [rip+0x165c7]        # 0x451468
  43aea1:	je     0x43b160
  43aea7:	test   rcx,rcx
  43aeaa:	je     0x43aeca
  43aeac:	movabs rax,0x1555555555555554
  43aeb6:	cmp    rdx,rax
  43aeb9:	ja     0x43b317
  43aebf:	mov    rax,rdx
  43aec2:	shr    rax,1
  43aec5:	lea    rdx,[rdx+rax*1+0x1]
  43aeca:	mov    QWORD PTR [rip+0x16587],rdx        # 0x451458
  43aed1:	shl    rdx,0x3
  43aed5:	call   0x422820
  43aeda:	mov    QWORD PTR [rip+0x16587],rax        # 0x451468
  43aee1:	mov    rax,QWORD PTR [rip+0x16578]        # 0x451460
  43aee8:	lea    rcx,[rax+0x1]
  43aeec:	mov    rdx,QWORD PTR [rip+0x16575]        # 0x451468
  43aef3:	mov    QWORD PTR [rip+0x16566],rcx        # 0x451460
  43aefa:	mov    rcx,QWORD PTR [rip+0xec3f]        # 0x449b40
  43af01:	mov    rcx,QWORD PTR [rcx]
  43af04:	mov    QWORD PTR [rdx+rax*8+0x8],0x0
  43af0d:	mov    QWORD PTR [rdx+rax*8],rcx
  43af11:	jmp    0x43acf0
  43af16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43af20:	mov    rcx,QWORD PTR [rip+0x16571]        # 0x451498
  43af27:	mov    DWORD PTR [rip+0x1656f],0x1        # 0x4514a0
  43af31:	call   0x43a748
  43af36:	mov    rax,QWORD PTR [rip+0xec03]        # 0x449b40
  43af3d:	mov    rcx,QWORD PTR [rax]
  43af40:	call   0x422a00
  43af45:	mov    QWORD PTR [rip+0x1654c],rax        # 0x451498
  43af4c:	jmp    0x43acf0
  43af51:	mov    DWORD PTR [rip+0x1651d],0x1        # 0x451478
  43af5b:	jmp    0x43acf0
  43af60:	mov    rcx,QWORD PTR [rip+0x164d1]        # 0x451438
  43af67:	test   rcx,rcx
  43af6a:	je     0x43af71
  43af6c:	call   0x43a748
  43af71:	mov    rax,QWORD PTR [rip+0xebc8]        # 0x449b40
  43af78:	mov    rcx,QWORD PTR [rax]
  43af7b:	call   0x422a00
  43af80:	mov    QWORD PTR [rip+0x164b1],rax        # 0x451438
  43af87:	jmp    0x43acf0
  43af8c:	nop    DWORD PTR [rax+0x0]
  43af90:	mov    rax,QWORD PTR [rip+0xeba9]        # 0x449b40
  43af97:	mov    rcx,QWORD PTR [rax]
  43af9a:	call   0x40eae0
  43af9f:	jmp    0x43acf0
  43afa4:	mov    DWORD PTR [rip+0x16466],0x1        # 0x451414
  43afae:	jmp    0x43acf0
  43afb3:	mov    DWORD PTR [rip+0x1646b],0x1        # 0x451428
  43afbd:	jmp    0x43acf0
  43afc2:	mov    DWORD PTR [rip+0x2714],0x1        # 0x43d6e0
  43afcc:	jmp    0x43acf0
  43afd1:	mov    DWORD PTR [rip+0x164b5],0x1        # 0x451490
  43afdb:	jmp    0x43acf0
  43afe0:	mov    r13,QWORD PTR [r15]
  43afe3:	jmp    0x43acf0
  43afe8:	nop    DWORD PTR [rax+rax*1+0x0]
  43aff0:	mov    rcx,QWORD PTR [rip+0x16489]        # 0x451480
  43aff7:	mov    DWORD PTR [rip+0x16493],0x1        # 0x451494
  43b001:	call   0x43a748
  43b006:	mov    rcx,QWORD PTR [r14]
  43b009:	call   0x422a00
  43b00e:	mov    QWORD PTR [rip+0x1646b],rax        # 0x451480
  43b015:	jmp    0x43acf0
  43b01a:	nop    WORD PTR [rax+rax*1+0x0]
  43b020:	mov    rax,QWORD PTR [rip+0xeb19]        # 0x449b40
  43b027:	mov    rcx,QWORD PTR [rax]
  43b02a:	call   0x414040
  43b02f:	jmp    0x43acf0
  43b034:	call   0x4045e0
  43b039:	mov    rax,QWORD PTR [rip+0xeb00]        # 0x449b40
  43b040:	mov    rcx,QWORD PTR [rax]
  43b043:	call   0x404620
  43b048:	jmp    0x43acf0
  43b04d:	nop    DWORD PTR [rax]
  43b050:	lea    rcx,[rip+0x6d71]        # 0x441dc8
  43b057:	call   0x433f18
  43b05c:	mov    rbx,rax
  43b05f:	call   QWORD PTR [rip+0x1988b]        # 0x4548f0
  43b065:	lea    rcx,[rax+0x60]
  43b069:	mov    rdx,rbx
  43b06c:	call   0x433f20
  43b071:	mov    ecx,0x1
  43b076:	call   0x43a790
  43b07b:	mov    rdi,QWORD PTR [rip+0x1986e]        # 0x4548f0
  43b082:	call   rdi
  43b084:	lea    rcx,[rax+0x30]
  43b088:	call   0x43a578
  43b08d:	mov    ecx,eax
  43b08f:	call   0x43a590
  43b094:	test   eax,eax
  43b096:	jne    0x43b0a6
  43b098:	cmp    QWORD PTR [rip+0x16390],0x0        # 0x451430
  43b0a0:	je     0x43b6a9
  43b0a6:	cmp    DWORD PTR [rip+0x163cf],0x0        # 0x45147c
  43b0ad:	jne    0x43b170
  43b0b3:	cmp    DWORD PTR [rip+0x163be],0x0        # 0x451478
  43b0ba:	jne    0x43b32c
  43b0c0:	mov    rax,QWORD PTR [rip+0xea89]        # 0x449b50
  43b0c7:	mov    rcx,QWORD PTR [rip+0x1636a]        # 0x451438
  43b0ce:	movsxd rax,DWORD PTR [rax]
  43b0d1:	sub    esi,eax
  43b0d3:	test   rcx,rcx
  43b0d6:	lea    rbp,[rbx+rax*8]
  43b0da:	mov    DWORD PTR [rsp+0x48],esi
  43b0de:	je     0x43bced
  43b0e4:	call   0x422a00
  43b0e9:	mov    rbx,rax
  43b0ec:	mov    rcx,rax
  43b0ef:	call   0x409e60
  43b0f4:	cmp    rbx,rax
  43b0f7:	je     0x43b10e
  43b0f9:	cmp    BYTE PTR [rbx],0x0
  43b0fc:	jne    0x43b41d
  43b102:	mov    BYTE PTR [rax-0x1],0x0
  43b106:	mov    rcx,rbx
  43b109:	call   0x40eae0
  43b10e:	mov    rcx,rbx
  43b111:	call   0x43a748
  43b116:	mov    rcx,r13
  43b119:	call   0x413f30
  43b11e:	call   0x40eca0
  43b123:	cmp    DWORD PTR [rip+0x16376],0x0        # 0x4514a0
  43b12a:	jne    0x43bc76
  43b130:	mov    rdx,QWORD PTR [rip+0x16309]        # 0x451440
  43b137:	mov    rax,QWORD PTR [rip+0x1630a]        # 0x451448
  43b13e:	lea    rcx,[rdx+0x2]
  43b142:	cmp    rcx,rax
  43b145:	jb     0x43b1fd
  43b14b:	test   rax,rax
  43b14e:	mov    rcx,QWORD PTR [rip+0x162fb]        # 0x451450
  43b155:	jne    0x43b1b8
  43b157:	test   rcx,rcx
  43b15a:	mov    al,0x2
  43b15c:	jne    0x43b1d0
  43b15e:	jmp    0x43b1db
  43b160:	test   rcx,rcx
  43b163:	mov    dl,0xa
  43b165:	jne    0x43aebf
  43b16b:	jmp    0x43aeca
  43b170:	lea    r8,[rip+0x6c75]        # 0x441dec
  43b177:	lea    rdx,[rip+0x6953]        # 0x441ad1
  43b17e:	lea    rcx,[rip+0x6c6b]        # 0x441df0
  43b185:	call   0x433f38
  43b18a:	lea    rcx,[rip+0x68ef]        # 0x441a80
  43b191:	call   0x43a698
  43b196:	lea    rcx,[rip+0x6c6b]        # 0x441e08
  43b19d:	call   0x433f18
  43b1a2:	lea    rdx,[rip+0x6d57]        # 0x441f00
  43b1a9:	mov    rcx,rax
  43b1ac:	call   0x433f38
  43b1b1:	xor    ecx,ecx
  43b1b3:	call   0x43a790
  43b1b8:	test   rcx,rcx
  43b1bb:	je     0x43b1db
  43b1bd:	movabs rdx,0x1555555555555554
  43b1c7:	cmp    rax,rdx
  43b1ca:	ja     0x43b317
  43b1d0:	mov    rdx,rax
  43b1d3:	shr    rdx,1
  43b1d6:	lea    rax,[rdx+rax*1+0x1]
  43b1db:	lea    rdx,[rax*8+0x0]
  43b1e3:	mov    QWORD PTR [rip+0x1625e],rax        # 0x451448
  43b1ea:	call   0x422820
  43b1ef:	mov    rdx,QWORD PTR [rip+0x1624a]        # 0x451440
  43b1f6:	mov    QWORD PTR [rip+0x16253],rax        # 0x451450
  43b1fd:	cmp    DWORD PTR [rip+0x16224],0x0        # 0x451428
  43b204:	mov    rax,QWORD PTR [rip+0x16245]        # 0x451450
  43b20b:	mov    QWORD PTR [rax+rdx*8],0x0
  43b213:	mov    QWORD PTR [rax+rdx*8+0x8],0x0
  43b21c:	je     0x43b440
  43b222:	cmp    QWORD PTR [rip+0x1620e],0x0        # 0x451438
  43b22a:	je     0x43bf51
  43b230:	lea    r12,[rsp+0x98]
  43b238:	mov    rbp,QWORD PTR [rip+0x161f9]        # 0x451438
  43b23f:	mov    DWORD PTR [rsp+0x98],0x0
  43b24a:	movabs rbx,0x1555555555555554
  43b254:	mov    rcx,r12
  43b257:	call   0x40ea00
  43b25c:	test   rax,rax
  43b25f:	jne    0x43b2cb
  43b261:	jmp    0x43ba62
  43b266:	test   rcx,rcx
  43b269:	mov    r8b,0x2
  43b26c:	je     0x43b279
  43b26e:	mov    rax,r8
  43b271:	shr    rax,1
  43b274:	lea    r8,[rax+r8*1+0x1]
  43b279:	lea    rdx,[r8*8+0x0]
  43b281:	mov    QWORD PTR [rip+0x161c0],r8        # 0x451448
  43b288:	call   0x422820
  43b28d:	mov    r9,QWORD PTR [rip+0x161ac]        # 0x451440
  43b294:	mov    QWORD PTR [rip+0x161b5],rax        # 0x451450
  43b29b:	mov    rax,QWORD PTR [rip+0x161ae]        # 0x451450
  43b2a2:	lea    rdx,[r9+0x1]
  43b2a6:	mov    QWORD PTR [rip+0x16193],rdx        # 0x451440
  43b2ad:	mov    QWORD PTR [rax+r9*8],rsi
  43b2b1:	mov    QWORD PTR [rax+r9*8+0x8],0x0
  43b2ba:	mov    rcx,r12
  43b2bd:	call   0x40e9d0
  43b2c2:	test   rax,rax
  43b2c5:	je     0x43ba62
  43b2cb:	mov    rdx,rax
  43b2ce:	mov    rcx,rbp
  43b2d1:	call   0x401b90
  43b2d6:	test   rax,rax
  43b2d9:	mov    rsi,rax
  43b2dc:	je     0x43b2ba
  43b2de:	mov    r9,QWORD PTR [rip+0x1615b]        # 0x451440
  43b2e5:	mov    r8,QWORD PTR [rip+0x1615c]        # 0x451448
  43b2ec:	lea    rax,[r9+0x2]
  43b2f0:	cmp    rax,r8
  43b2f3:	jb     0x43b29b
  43b2f5:	test   r8,r8
  43b2f8:	mov    rcx,QWORD PTR [rip+0x16151]        # 0x451450
  43b2ff:	je     0x43b266
  43b305:	test   rcx,rcx
  43b308:	je     0x43b279
  43b30e:	cmp    r8,rbx
  43b311:	jbe    0x43b26e
  43b317:	call   0x422a20
  43b31c:	mov    rax,QWORD PTR [rsp+0x50]
  43b321:	mov    DWORD PTR [rax],0xffffffff
  43b327:	jmp    0x43acf0
  43b32c:	mov    rbx,QWORD PTR [rip+0x23b5]        # 0x43d6e8
  43b333:	lea    rcx,[rip+0x6bce]        # 0x441f08
  43b33a:	call   0x433f18
  43b33f:	mov    rdx,rbx
  43b342:	mov    rcx,rax
  43b345:	call   0x433f38
  43b34a:	lea    rcx,[rip+0x672f]        # 0x441a80
  43b351:	call   0x43a698
  43b356:	lea    rcx,[rip+0x6bfb]        # 0x441f58
  43b35d:	call   0x433f18
  43b362:	mov    rcx,rax
  43b365:	call   0x43a698
  43b36a:	lea    rcx,[rip+0x6d2f]        # 0x4420a0
  43b371:	call   0x433f18
  43b376:	mov    rcx,rax
  43b379:	call   0x43a698
  43b37e:	lea    rcx,[rip+0x6e2b]        # 0x4421b0
  43b385:	call   0x433f18
  43b38a:	mov    rcx,rax
  43b38d:	call   0x43a698
  43b392:	lea    rcx,[rip+0x6f1f]        # 0x4422b8
  43b399:	call   0x433f18
  43b39e:	mov    rcx,rax
  43b3a1:	call   0x43a698
  43b3a6:	lea    rcx,[rip+0x6f53]        # 0x442300
  43b3ad:	call   0x433f18
  43b3b2:	mov    rcx,rax
  43b3b5:	call   0x43a698
  43b3ba:	lea    rcx,[rip+0x711f]        # 0x4424e0
  43b3c1:	call   0x433f18
  43b3c6:	mov    rcx,rax
  43b3c9:	call   0x43a698
  43b3ce:	lea    rcx,[rip+0x723b]        # 0x442610
  43b3d5:	call   0x433f18
  43b3da:	mov    rcx,rax
  43b3dd:	call   0x43a698
  43b3e2:	lea    rcx,[rip+0x725f]        # 0x442648
  43b3e9:	call   0x433f18
  43b3ee:	mov    rcx,rax
  43b3f1:	call   0x43a698
  43b3f6:	lea    rcx,[rip+0x6683]        # 0x441a80
  43b3fd:	call   0x43a698
  43b402:	lea    rcx,[rip+0x74f7]        # 0x442900
  43b409:	call   0x433f18
  43b40e:	mov    rcx,rax
  43b411:	call   0x43a698
  43b416:	xor    ecx,ecx
  43b418:	call   0x43a790
  43b41d:	cmp    BYTE PTR [rbx+0x1],0x3a
  43b421:	jne    0x43b102
  43b427:	lea    rdx,[rbx+0x2]
  43b42b:	cmp    rax,rdx
  43b42e:	jne    0x43b102
  43b434:	mov    BYTE PTR [rax],0x2e
  43b437:	lea    rax,[rbx+0x4]
  43b43b:	jmp    0x43b102
  43b440:	cmp    DWORD PTR [rip+0x16049],0x0        # 0x451490
  43b447:	je     0x43b46e
  43b449:	cmp    QWORD PTR [rbp+0x0],0x0
  43b44e:	je     0x43c189
  43b454:	mov    rax,rbp
  43b457:	jmp    0x43b45d
  43b459:	add    rax,0x8
  43b45d:	cmp    QWORD PTR [rax+0x8],0x0
  43b462:	jne    0x43b459
  43b464:	mov    rax,QWORD PTR [rax]
  43b467:	mov    QWORD PTR [rip+0x1601a],rax        # 0x451488
  43b46e:	mov    rbx,QWORD PTR [rip+0x15fc3]        # 0x451438
  43b475:	test   rbx,rbx
  43b478:	je     0x43be22
  43b47e:	movzx  esi,BYTE PTR [rbx]
  43b481:	cmp    sil,0x5c
  43b485:	je     0x43b501
  43b487:	cmp    sil,0x2f
  43b48b:	je     0x43b501
  43b48d:	test   sil,sil
  43b490:	je     0x43bda7
  43b496:	cmp    BYTE PTR [rbx+0x1],0x3a
  43b49a:	je     0x43b52c
  43b4a0:	mov    edx,0x2f
  43b4a5:	mov    rcx,rbx
  43b4a8:	call   0x43a650
  43b4ad:	test   rax,rax
  43b4b0:	je     0x43c16e
  43b4b6:	cmp    sil,0x2e
  43b4ba:	jne    0x43b4c8
  43b4bc:	movzx  eax,BYTE PTR [rbx+0x1]
  43b4c0:	cmp    al,0x5c
  43b4c2:	je     0x43b510
  43b4c4:	cmp    al,0x2f
  43b4c6:	je     0x43b510
  43b4c8:	lea    rcx,[rsp+0x98]
  43b4d0:	lea    r8,[rip+0x751c]        # 0x4429f3
  43b4d7:	lea    rdx,[rip+0x7518]        # 0x4429f6
  43b4de:	mov    r9,rbx
  43b4e1:	call   0x433f30
  43b4e6:	mov    rcx,QWORD PTR [rip+0x15f4b]        # 0x451438
  43b4ed:	call   0x43a748
  43b4f2:	mov    rbx,QWORD PTR [rsp+0x98]
  43b4fa:	mov    QWORD PTR [rip+0x15f37],rbx        # 0x451438
  43b501:	movzx  eax,BYTE PTR [rbx]
  43b504:	cmp    al,0x5c
  43b506:	je     0x43b52c
  43b508:	cmp    al,0x2f
  43b50a:	je     0x43b52c
  43b50c:	test   al,al
  43b50e:	je     0x43b516
  43b510:	cmp    BYTE PTR [rbx+0x1],0x3a
  43b514:	je     0x43b52c
  43b516:	mov    edx,0x2f
  43b51b:	mov    rcx,rbx
  43b51e:	call   0x43a650
  43b523:	test   rax,rax
  43b526:	je     0x43c142
  43b52c:	xor    r8d,r8d
  43b52f:	mov    rdx,rbx
  43b532:	xor    ecx,ecx
  43b534:	call   0x406ab0
  43b539:	mov    QWORD PTR [rip+0x15f30],rax        # 0x451470
  43b540:	cmp    QWORD PTR [rip+0x15f28],0x0        # 0x451470
  43b548:	je     0x43bdd8
  43b54e:	cmp    DWORD PTR [rip+0x15f3f],0x0        # 0x451494
  43b555:	je     0x43b56c
  43b557:	mov    rcx,QWORD PTR [rip+0x15f12]        # 0x451470
  43b55e:	cmp    QWORD PTR [rip+0x15eca],0x0        # 0x451430
  43b566:	je     0x43c3db
  43b56c:	mov    rax,QWORD PTR [rip+0x15edd]        # 0x451450
  43b573:	mov    rbx,QWORD PTR [rax]
  43b576:	test   rbx,rbx
  43b579:	je     0x43b593
  43b57b:	mov    rcx,QWORD PTR [rbx+0x8]
  43b57f:	lea    rdx,[rip+0x745e]        # 0x4429e4
  43b586:	call   0x43a648
  43b58b:	test   eax,eax
  43b58d:	je     0x43b9dd
  43b593:	cmp    QWORD PTR [rip+0x15ecd],0x0        # 0x451468
  43b59b:	je     0x43b7bc
  43b5a1:	cmp    QWORD PTR [rip+0x15eb7],0x0        # 0x451460
  43b5a9:	je     0x43b5b9
  43b5ab:	cmp    QWORD PTR [rip+0x15e8d],0x0        # 0x451440
  43b5b3:	jne    0x43c018
  43b5b9:	lea    rax,[rsp+0x90]
  43b5c1:	xor    ebx,ebx
  43b5c3:	mov    r13,QWORD PTR [rip+0xe3b6]        # 0x449980
  43b5ca:	mov    r14,QWORD PTR [rip+0xe3bf]        # 0x449990
  43b5d1:	mov    QWORD PTR [rsp+0x70],rbp
  43b5d6:	mov    QWORD PTR [rsp+0x68],rax
  43b5db:	jmp    0x43b5e1
  43b5dd:	add    rbx,0x8
  43b5e1:	mov    rax,QWORD PTR [rip+0x15e80]        # 0x451468
  43b5e8:	mov    rcx,QWORD PTR [rax+rbx*1]
  43b5ec:	test   rcx,rcx
  43b5ef:	je     0x43b7b7
  43b5f5:	call   0x4095c0
  43b5fa:	mov    rsi,QWORD PTR [r13+0x0]
  43b5fe:	test   rsi,rsi
  43b601:	je     0x43b6ec
  43b607:	mov    r15,QWORD PTR [r14]
  43b60a:	test   r15,r15
  43b60d:	je     0x43b5dd
  43b60f:	mov    rdx,QWORD PTR [rip+0x15e2a]        # 0x451440
  43b616:	mov    rax,QWORD PTR [rip+0x15e2b]        # 0x451448
  43b61d:	lea    rcx,[rdx+0x2]
  43b621:	cmp    rcx,rax
  43b624:	jb     0x43b66a
  43b626:	test   rax,rax
  43b629:	mov    rcx,QWORD PTR [rip+0x15e20]        # 0x451450
  43b630:	jne    0x43b6cb
  43b636:	test   rcx,rcx
  43b639:	mov    al,0x2
  43b63b:	je     0x43b648
  43b63d:	mov    rdx,rax
  43b640:	shr    rdx,1
  43b643:	lea    rax,[rax+rdx*1+0x1]
  43b648:	lea    rdx,[rax*8+0x0]
  43b650:	mov    QWORD PTR [rip+0x15df1],rax        # 0x451448
  43b657:	call   0x422820
  43b65c:	mov    rdx,QWORD PTR [rip+0x15ddd]        # 0x451440
  43b663:	mov    QWORD PTR [rip+0x15de6],rax        # 0x451450
  43b66a:	lea    rax,[rdx+0x1]
  43b66e:	mov    rcx,rsi
  43b671:	mov    QWORD PTR [rip+0x15dc8],rax        # 0x451440
  43b678:	mov    rax,QWORD PTR [rip+0x15dd1]        # 0x451450
  43b67f:	lea    rdi,[rax+rdx*8]
  43b683:	mov    rdx,r15
  43b686:	call   0x409420
  43b68b:	mov    rdx,QWORD PTR [rip+0x15dae]        # 0x451440
  43b692:	mov    QWORD PTR [rdi],rax
  43b695:	mov    rax,QWORD PTR [rip+0x15db4]        # 0x451450
  43b69c:	mov    QWORD PTR [rax+rdx*8],0x0
  43b6a4:	jmp    0x43b5dd
  43b6a9:	lea    rcx,[rip+0x673a]        # 0x441dea
  43b6b0:	call   0x422a00
  43b6b5:	mov    DWORD PTR [rip+0x15d61],0x1        # 0x451420
  43b6bf:	mov    QWORD PTR [rip+0x15d6a],rax        # 0x451430
  43b6c6:	jmp    0x43b0a6
  43b6cb:	test   rcx,rcx
  43b6ce:	je     0x43b648
  43b6d4:	movabs rdx,0x1555555555555554
  43b6de:	cmp    rax,rdx
  43b6e1:	jbe    0x43b63d
  43b6e7:	jmp    0x43b317
  43b6ec:	mov    rsi,QWORD PTR [rip+0x15d7d]        # 0x451470
  43b6f3:	test   rsi,rsi
  43b6f6:	je     0x43b5dd
  43b6fc:	mov    rcx,rsi
  43b6ff:	mov    rbp,rbx
  43b702:	call   0x4117b0
  43b707:	mov    r12,QWORD PTR [rax+0x58]
  43b70b:	add    rbp,QWORD PTR [rip+0x15d56]        # 0x451468
  43b712:	mov    rdi,r12
  43b715:	jmp    0x43b733
  43b717:	mov    r15,QWORD PTR [rax+0x8]
  43b71b:	mov    rcx,QWORD PTR [rbp+0x0]
  43b71f:	add    rdi,0x8
  43b723:	mov    rdx,r15
  43b726:	call   0x43a648
  43b72b:	test   eax,eax
  43b72d:	je     0x43b60f
  43b733:	mov    rax,QWORD PTR [rdi]
  43b736:	test   rax,rax
  43b739:	jne    0x43b717
  43b73b:	mov    rdi,QWORD PTR [rbp+0x0]
  43b73f:	or     rdx,0xffffffffffffffff
  43b743:	xor    eax,eax
  43b745:	mov    rcx,rdx
  43b748:	mov    r15,rbx
  43b74b:	mov    r10,rdi
  43b74e:	repnz scas al,BYTE PTR es:[rdi]
  43b750:	mov    rbx,r10
  43b753:	mov    QWORD PTR [rsp+0x50],rsi
  43b758:	xor    edi,edi
  43b75a:	mov    rax,rcx
  43b75d:	mov    QWORD PTR [rsp+0x78],rbp
  43b762:	mov    esi,edx
  43b764:	not    rax
  43b767:	sub    eax,0x1
  43b76a:	cdqe   
  43b76c:	mov    QWORD PTR [rsp+0x60],rax
  43b771:	jmp    0x43b777
  43b773:	add    rdi,0x1
  43b777:	mov    rax,QWORD PTR [r12+rdi*8]
  43b77b:	test   rax,rax
  43b77e:	je     0x43c255
  43b784:	mov    rbp,QWORD PTR [rax+0x8]
  43b788:	mov    rcx,rbx
  43b78b:	mov    rdx,rbp
  43b78e:	call   0x4213b0
  43b793:	test   eax,eax
  43b795:	je     0x43c1ff
  43b79b:	cmp    esi,0xffffffff
  43b79e:	jne    0x43b773
  43b7a0:	mov    r8,QWORD PTR [rsp+0x60]
  43b7a5:	mov    rdx,rbp
  43b7a8:	mov    rcx,rbx
  43b7ab:	call   0x421e70
  43b7b0:	test   eax,eax
  43b7b2:	cmove  esi,edi
  43b7b5:	jmp    0x43b773
  43b7b7:	mov    rbp,QWORD PTR [rsp+0x70]
  43b7bc:	cmp    DWORD PTR [rip+0x15ccd],0x0        # 0x451490
  43b7c3:	je     0x43b8b5
  43b7c9:	cmp    QWORD PTR [rip+0x15c6f],0x0        # 0x451440
  43b7d1:	je     0x43c64c
  43b7d7:	mov    rcx,QWORD PTR [rip+0x15caa]        # 0x451488
  43b7de:	test   rcx,rcx
  43b7e1:	je     0x43c1d2
  43b7e7:	call   0x422a00
  43b7ec:	mov    rbx,rax
  43b7ef:	cmp    QWORD PTR [rip+0x15c49],0x0        # 0x451440
  43b7f7:	jne    0x43c1b1
  43b7fd:	mov    rax,QWORD PTR [rsp+0x58]
  43b802:	test   rax,rax
  43b805:	je     0x43b8ad
  43b80b:	mov    rdx,rbx
  43b80e:	mov    rcx,rax
  43b811:	call   0x4194a0
  43b816:	test   rax,rax
  43b819:	mov    rsi,rax
  43b81c:	je     0x43b8ad
  43b822:	mov    rax,QWORD PTR [rip+0x15c27]        # 0x451450
  43b829:	mov    rcx,QWORD PTR [rax]
  43b82c:	call   0x409390
  43b831:	mov    r8,QWORD PTR [rip+0x15c10]        # 0x451448
  43b838:	mov    QWORD PTR [rip+0x15bfd],0x0        # 0x451440
  43b843:	cmp    r8,0x2
  43b847:	ja     0x43b887
  43b849:	test   r8,r8
  43b84c:	mov    rcx,QWORD PTR [rip+0x15bfd]        # 0x451450
  43b853:	jne    0x43bf6f
  43b859:	test   rcx,rcx
  43b85c:	mov    r8b,0x2
  43b85f:	je     0x43b86c
  43b861:	mov    rax,r8
  43b864:	shr    rax,1
  43b867:	lea    r8,[r8+rax*1+0x1]
  43b86c:	lea    rdx,[r8*8+0x0]
  43b874:	mov    QWORD PTR [rip+0x15bcd],r8        # 0x451448
  43b87b:	call   0x422820
  43b880:	mov    QWORD PTR [rip+0x15bc9],rax        # 0x451450
  43b887:	mov    rax,QWORD PTR [rip+0x15bb2]        # 0x451440
  43b88e:	mov    rdx,QWORD PTR [rip+0x15bbb]        # 0x451450
  43b895:	lea    rcx,[rax+0x1]
  43b899:	mov    QWORD PTR [rdx+rax*8],rsi
  43b89d:	mov    QWORD PTR [rdx+rax*8+0x8],0x0
  43b8a6:	mov    QWORD PTR [rip+0x15b93],rcx        # 0x451440
  43b8ad:	mov    rcx,rbx
  43b8b0:	call   0x43a748
  43b8b5:	cmp    QWORD PTR [rip+0x15b83],0x0        # 0x451440
  43b8bd:	jne    0x43bd81
  43b8c3:	cmp    QWORD PTR [rip+0x15ba5],0x0        # 0x451470
  43b8cb:	je     0x43b9dd
  43b8d1:	mov    rax,QWORD PTR [rip+0x15b70]        # 0x451448
  43b8d8:	cmp    rax,0x2
  43b8dc:	ja     0x43b91b
  43b8de:	test   rax,rax
  43b8e1:	mov    rcx,QWORD PTR [rip+0x15b68]        # 0x451450
  43b8e8:	jne    0x43bf30
  43b8ee:	test   rcx,rcx
  43b8f1:	mov    al,0x2
  43b8f3:	je     0x43b900
  43b8f5:	mov    rdx,rax
  43b8f8:	shr    rdx,1
  43b8fb:	lea    rax,[rax+rdx*1+0x1]
  43b900:	lea    rdx,[rax*8+0x0]
  43b908:	mov    QWORD PTR [rip+0x15b39],rax        # 0x451448
  43b90f:	call   0x422820
  43b914:	mov    QWORD PTR [rip+0x15b35],rax        # 0x451450
  43b91b:	mov    rax,QWORD PTR [rip+0x15b1e]        # 0x451440
  43b922:	mov    rcx,QWORD PTR [rip+0x15b47]        # 0x451470
  43b929:	lea    rdx,[rax+0x1]
  43b92d:	mov    QWORD PTR [rip+0x15b0c],rdx        # 0x451440
  43b934:	mov    rdx,QWORD PTR [rip+0x15b15]        # 0x451450
  43b93b:	lea    rbx,[rdx+rax*8]
  43b93f:	lea    rdx,[rip+0x70c8]        # 0x442a0e
  43b946:	call   0x409420
  43b94b:	mov    rdx,QWORD PTR [rip+0x15aee]        # 0x451440
  43b952:	mov    QWORD PTR [rbx],rax
  43b955:	mov    rax,QWORD PTR [rip+0x15af4]        # 0x451450
  43b95c:	mov    QWORD PTR [rax+rdx*8],0x0
  43b964:	cmp    QWORD PTR [rbp+0x0],0x0
  43b969:	je     0x43b9dd
  43b96b:	test   rdx,rdx
  43b96e:	je     0x43b9dd
  43b970:	mov    rax,QWORD PTR [rax]
  43b973:	xor    r8d,r8d
  43b976:	mov    rdx,QWORD PTR [rax+0x10]
  43b97a:	mov    rcx,QWORD PTR [rax+0x8]
  43b97e:	call   0x412270
  43b983:	test   rax,rax
  43b986:	je     0x43b9dd
  43b988:	lea    rsi,[rsp+0x90]
  43b990:	mov    r9d,0x1
  43b996:	mov    rdx,rbp
  43b999:	mov    rcx,rax
  43b99c:	mov    r8,rsi
  43b99f:	call   0x418b10
  43b9a4:	test   rax,rax
  43b9a7:	mov    rbx,rax
  43b9aa:	je     0x43c2bb
  43b9b0:	mov    rax,QWORD PTR [rip+0x15a99]        # 0x451450
  43b9b7:	mov    rcx,QWORD PTR [rax]
  43b9ba:	call   0x409390
  43b9bf:	mov    rsi,QWORD PTR [rip+0x15a8a]        # 0x451450
  43b9c6:	mov    rcx,QWORD PTR [rbx]
  43b9c9:	mov    rdx,QWORD PTR [rbx+0x10]
  43b9cd:	call   0x409420
  43b9d2:	mov    rcx,rbx
  43b9d5:	mov    QWORD PTR [rsi],rax
  43b9d8:	call   0x414970
  43b9dd:	cmp    DWORD PTR [rip+0x15a40],0x0        # 0x451424
  43b9e4:	je     0x43ba05
  43b9e6:	mov    rdx,QWORD PTR [rip+0x15a83]        # 0x451470
  43b9ed:	test   rdx,rdx
  43b9f0:	je     0x43b9fe
  43b9f2:	lea    rcx,[rip+0x6ff6]        # 0x4429ef
  43b9f9:	call   0x433f38
  43b9fe:	xor    ecx,ecx
  43ba00:	call   0x43a790
  43ba05:	mov    rax,QWORD PTR [rip+0x15a24]        # 0x451430
  43ba0c:	test   rax,rax
  43ba0f:	mov    rdx,rax
  43ba12:	je     0x43bfab
  43ba18:	mov    rdx,QWORD PTR [rsp+0x90]
  43ba20:	test   rdx,rdx
  43ba23:	je     0x43ba38
  43ba25:	lea    rcx,[rip+0x709b]        # 0x442ac7
  43ba2c:	call   0x4144d0
  43ba31:	mov    rax,QWORD PTR [rip+0x159f8]        # 0x451430
  43ba38:	mov    rdx,QWORD PTR [rip+0xe0d1]        # 0x449b10
  43ba3f:	mov    rcx,QWORD PTR [rip+0x15a0a]        # 0x451450
  43ba46:	mov    r8d,DWORD PTR [rip+0x159d3]        # 0x451420
  43ba4d:	mov    DWORD PTR [rdx],0x0
  43ba53:	mov    rdx,rax
  43ba56:	call   0x419ac0
  43ba5b:	xor    ecx,ecx
  43ba5d:	call   0x43a790
  43ba62:	mov    DWORD PTR [rsp+0x98],0x0
  43ba6d:	movabs r13,0x1555555555555554
  43ba77:	nop    WORD PTR [rax+rax*1+0x0]
  43ba80:	xor    r8d,r8d
  43ba83:	mov    rdx,r12
  43ba86:	mov    rcx,rbp
  43ba89:	call   0x406c80
  43ba8e:	test   rax,rax
  43ba91:	mov    rdi,rax
  43ba94:	je     0x43bb6e
  43ba9a:	mov    rsi,QWORD PTR [rip+0x1599f]        # 0x451440
  43baa1:	xor    ebx,ebx
  43baa3:	mov    r14,QWORD PTR [rip+0x159a6]        # 0x451450
  43baaa:	test   rsi,rsi
  43baad:	jne    0x43baba
  43baaf:	jmp    0x43badd
  43bab1:	add    rbx,0x1
  43bab5:	cmp    rbx,rsi
  43bab8:	je     0x43badd
  43baba:	mov    rdx,QWORD PTR [r14+rbx*8]
  43babe:	mov    rcx,rdi
  43bac1:	mov    rdx,QWORD PTR [rdx+0x8]
  43bac5:	call   0x43a648
  43baca:	test   eax,eax
  43bacc:	jne    0x43bab1
  43bace:	cmp    rbx,rsi
  43bad1:	je     0x43badd
  43bad3:	mov    rcx,rdi
  43bad6:	call   0x43a748
  43badb:	jmp    0x43ba80
  43badd:	mov    rdx,QWORD PTR [rip+0x15964]        # 0x451448
  43bae4:	lea    rax,[rsi+0x2]
  43bae8:	cmp    rax,rdx
  43baeb:	jb     0x43bb28
  43baed:	test   rdx,rdx
  43baf0:	jne    0x43bb5f
  43baf2:	test   r14,r14
  43baf5:	mov    dl,0x2
  43baf7:	je     0x43bb04
  43baf9:	mov    rax,rdx
  43bafc:	shr    rax,1
  43baff:	lea    rdx,[rax+rdx*1+0x1]
  43bb04:	mov    QWORD PTR [rip+0x1593d],rdx        # 0x451448
  43bb0b:	mov    rcx,r14
  43bb0e:	shl    rdx,0x3
  43bb12:	call   0x422820
  43bb17:	mov    rsi,QWORD PTR [rip+0x15922]        # 0x451440
  43bb1e:	mov    QWORD PTR [rip+0x1592b],rax        # 0x451450
  43bb25:	mov    r14,rax
  43bb28:	lea    rax,[rsi+0x1]
  43bb2c:	lea    rbx,[r14+rsi*8]
  43bb30:	xor    edx,edx
  43bb32:	mov    rcx,rdi
  43bb35:	mov    QWORD PTR [rip+0x15904],rax        # 0x451440
  43bb3c:	call   0x409420
  43bb41:	mov    rdx,QWORD PTR [rip+0x158f8]        # 0x451440
  43bb48:	mov    QWORD PTR [rbx],rax
  43bb4b:	mov    rax,QWORD PTR [rip+0x158fe]        # 0x451450
  43bb52:	mov    QWORD PTR [rax+rdx*8],0x0
  43bb5a:	jmp    0x43bad3
  43bb5f:	test   r14,r14
  43bb62:	je     0x43bb04
  43bb64:	cmp    rdx,r13
  43bb67:	jbe    0x43baf9
  43bb69:	jmp    0x43b317
  43bb6e:	mov    rcx,rbp
  43bb71:	call   0x40f880
  43bb76:	test   rax,rax
  43bb79:	je     0x43bc20
  43bb7f:	mov    rcx,rax
  43bb82:	call   0x43a748
  43bb87:	mov    rdx,QWORD PTR [rip+0x158b2]        # 0x451440
  43bb8e:	mov    rax,QWORD PTR [rip+0x158b3]        # 0x451448
  43bb95:	lea    rcx,[rdx+0x2]
  43bb99:	cmp    rcx,rax
  43bb9c:	jb     0x43bbe2
  43bb9e:	test   rax,rax
  43bba1:	mov    rcx,QWORD PTR [rip+0x158a8]        # 0x451450
  43bba8:	jne    0x43bccc
  43bbae:	test   rcx,rcx
  43bbb1:	mov    al,0x2
  43bbb3:	je     0x43bbc0
  43bbb5:	mov    rdx,rax
  43bbb8:	shr    rdx,1
  43bbbb:	lea    rax,[rdx+rax*1+0x1]
  43bbc0:	lea    rdx,[rax*8+0x0]
  43bbc8:	mov    QWORD PTR [rip+0x15879],rax        # 0x451448
  43bbcf:	call   0x422820
  43bbd4:	mov    rdx,QWORD PTR [rip+0x15865]        # 0x451440
  43bbdb:	mov    QWORD PTR [rip+0x1586e],rax        # 0x451450
  43bbe2:	lea    rax,[rdx+0x1]
  43bbe6:	lea    rcx,[rip+0x6df7]        # 0x4429e4
  43bbed:	mov    QWORD PTR [rip+0x1584c],rax        # 0x451440
  43bbf4:	mov    rax,QWORD PTR [rip+0x15855]        # 0x451450
  43bbfb:	lea    rbx,[rax+rdx*8]
  43bbff:	mov    rdx,rbp
  43bc02:	call   0x409420
  43bc07:	mov    rdx,QWORD PTR [rip+0x15832]        # 0x451440
  43bc0e:	mov    QWORD PTR [rbx],rax
  43bc11:	mov    rax,QWORD PTR [rip+0x15838]        # 0x451450
  43bc18:	mov    QWORD PTR [rax+rdx*8],0x0
  43bc20:	cmp    QWORD PTR [rip+0x15818],0x1        # 0x451440
  43bc28:	je     0x43bd98
  43bc2e:	cmp    DWORD PTR [rip+0x157ef],0x0        # 0x451424
  43bc35:	je     0x43ba05
  43bc3b:	cmp    QWORD PTR [rip+0x1580d],0x0        # 0x451450
  43bc43:	je     0x43c00e
  43bc49:	xor    ebx,ebx
  43bc4b:	jmp    0x43bc5d
  43bc4d:	mov    rdx,QWORD PTR [rax+0x8]
  43bc51:	lea    rcx,[rip+0x6d97]        # 0x4429ef
  43bc58:	call   0x433f38
  43bc5d:	mov    rax,QWORD PTR [rip+0x157ec]        # 0x451450
  43bc64:	mov    rax,QWORD PTR [rax+rbx*1]
  43bc68:	add    rbx,0x8
  43bc6c:	test   rax,rax
  43bc6f:	jne    0x43bc4d
  43bc71:	jmp    0x43b9fe
  43bc76:	mov    rcx,QWORD PTR [rip+0x1581b]        # 0x451498
  43bc7d:	xor    edx,edx
  43bc7f:	call   0x4083e0
  43bc84:	test   rax,rax
  43bc87:	je     0x43c20f
  43bc8d:	mov    rbx,rax
  43bc90:	jmp    0x43bcba
  43bc92:	mov    r12,QWORD PTR [rax]
  43bc95:	mov    rbp,QWORD PTR [rax+0x10]
  43bc99:	mov    rsi,QWORD PTR [rax+0x8]
  43bc9d:	call   rdi
  43bc9f:	lea    rdx,[rip+0x6d2e]        # 0x4429d4
  43bca6:	lea    rcx,[rax+0x30]
  43bcaa:	mov    QWORD PTR [rsp+0x20],r12
  43bcaf:	mov    r9,rbp
  43bcb2:	mov    r8,rsi
  43bcb5:	call   0x433f20
  43bcba:	add    rbx,0x8
  43bcbe:	mov    rax,QWORD PTR [rbx-0x8]
  43bcc2:	test   rax,rax
  43bcc5:	jne    0x43bc92
  43bcc7:	jmp    0x43b9fe
  43bccc:	test   rcx,rcx
  43bccf:	je     0x43bbc0
  43bcd5:	movabs rdx,0x1555555555555554
  43bcdf:	cmp    rax,rdx
  43bce2:	jbe    0x43bbb5
  43bce8:	jmp    0x43b317
  43bced:	mov    rbx,QWORD PTR [rbp+0x0]
  43bcf1:	test   rbx,rbx
  43bcf4:	je     0x43b116
  43bcfa:	mov    edx,0x2f
  43bcff:	mov    rcx,rbx
  43bd02:	call   0x43a650
  43bd07:	test   rax,rax
  43bd0a:	je     0x43bf90
  43bd10:	mov    rcx,rbx
  43bd13:	add    rbp,0x8
  43bd17:	call   0x422a00
  43bd1c:	sub    DWORD PTR [rsp+0x48],0x1
  43bd21:	test   rax,rax
  43bd24:	mov    rcx,rax
  43bd27:	mov    QWORD PTR [rip+0x1570a],rax        # 0x451438
  43bd2e:	je     0x43b116
  43bd34:	jmp    0x43b0e4
  43bd39:	mov    rbx,QWORD PTR [r12]
  43bd3d:	lea    rcx,[rip+0x602e]        # 0x441d72
  43bd44:	call   0x433f18
  43bd49:	mov    rdx,rbx
  43bd4c:	mov    rcx,rax
  43bd4f:	call   0x4144d0
  43bd54:	mov    ecx,0x1
  43bd59:	call   0x43a790
  43bd5e:	lea    rcx,[rip+0x5feb]        # 0x441d50
  43bd65:	call   0x433f18
  43bd6a:	mov    rdx,QWORD PTR [rsp+0x48]
  43bd6f:	mov    rcx,rax
  43bd72:	call   0x4144d0
  43bd77:	mov    ecx,0x1
  43bd7c:	call   0x43a790
  43bd81:	cmp    QWORD PTR [rbp+0x0],0x0
  43bd86:	mov    rax,QWORD PTR [rip+0x156c3]        # 0x451450
  43bd8d:	jne    0x43b970
  43bd93:	jmp    0x43b9dd
  43bd98:	mov    DWORD PTR [rip+0x15686],0x0        # 0x451428
  43bda2:	jmp    0x43bc2e
  43bda7:	mov    edx,0x2f
  43bdac:	mov    rcx,rbx
  43bdaf:	call   0x43a650
  43bdb4:	test   rax,rax
  43bdb7:	jne    0x43b4c8
  43bdbd:	mov    edx,0x5c
  43bdc2:	mov    rcx,rbx
  43bdc5:	call   0x43a650
  43bdca:	test   rax,rax
  43bdcd:	jne    0x43b4c8
  43bdd3:	jmp    0x43b501
  43bdd8:	mov    rax,QWORD PTR [rip+0xdb11]        # 0x4498f0
  43bddf:	cmp    DWORD PTR [rax],0x0
  43bde2:	jne    0x43bdea
  43bde4:	mov    DWORD PTR [rax],0x2
  43bdea:	mov    edx,DWORD PTR [rax]
  43bdec:	mov    rcx,QWORD PTR [rip+0x15645]        # 0x451438
  43bdf3:	call   0x407190
  43bdf8:	mov    QWORD PTR [rsp+0x90],rax
  43be00:	cmp    DWORD PTR [rip+0x1568d],0x0        # 0x451494
  43be07:	je     0x43b56c
  43be0d:	mov    rcx,QWORD PTR [rip+0x1565c]        # 0x451470
  43be14:	test   rcx,rcx
  43be17:	jne    0x43b55e
  43be1d:	jmp    0x43b56c
  43be22:	mov    rcx,QWORD PTR [rbp+0x0]
  43be26:	test   rcx,rcx
  43be29:	je     0x43c199
  43be2f:	cmp    BYTE PTR [rcx],0x28
  43be32:	je     0x43c475
  43be38:	lea    rdx,[rip+0x6bc0]        # 0x4429ff
  43be3f:	call   0x4213b0
  43be44:	test   eax,eax
  43be46:	jne    0x43be53
  43be48:	lea    rax,[rip+0x6bb5]        # 0x442a04
  43be4f:	mov    QWORD PTR [rbp+0x0],rax
  43be53:	mov    rcx,QWORD PTR [rbp+0x0]
  43be57:	xor    edx,edx
  43be59:	call   0x401b40
  43be5e:	test   rax,rax
  43be61:	mov    rbx,rax
  43be64:	je     0x43c062
  43be6a:	mov    rcx,QWORD PTR [rax+0x8]
  43be6e:	xor    edx,edx
  43be70:	call   0x406dc0
  43be75:	test   rax,rax
  43be78:	mov    QWORD PTR [rip+0x155f1],rax        # 0x451470
  43be7f:	je     0x43c062
  43be85:	mov    rcx,rbx
  43be88:	sub    DWORD PTR [rsp+0x48],0x1
  43be8d:	add    rbp,0x8
  43be91:	call   0x409280
  43be96:	mov    rcx,QWORD PTR [rax+0x8]
  43be9a:	mov    rbx,rax
  43be9d:	call   0x43a748
  43bea2:	mov    rcx,QWORD PTR [rip+0x155c7]        # 0x451470
  43bea9:	call   0x422a00
  43beae:	mov    rdx,QWORD PTR [rip+0x1558b]        # 0x451440
  43beb5:	mov    r8,QWORD PTR [rip+0x1558c]        # 0x451448
  43bebc:	mov    QWORD PTR [rbx+0x8],rax
  43bec0:	lea    rax,[rdx+0x2]
  43bec4:	cmp    rax,r8
  43bec7:	jb     0x43bf0c
  43bec9:	test   r8,r8
  43becc:	mov    rcx,QWORD PTR [rip+0x1557d]        # 0x451450
  43bed3:	jne    0x43c03e
  43bed9:	test   rcx,rcx
  43bedc:	mov    edx,0x2
  43bee1:	je     0x43beee
  43bee3:	mov    rax,rdx
  43bee6:	shr    rax,1
  43bee9:	lea    rdx,[rdx+rax*1+0x1]
  43beee:	mov    QWORD PTR [rip+0x15553],rdx        # 0x451448
  43bef5:	shl    rdx,0x3
  43bef9:	call   0x422820
  43befe:	mov    rdx,QWORD PTR [rip+0x1553b]        # 0x451440
  43bf05:	mov    QWORD PTR [rip+0x15544],rax        # 0x451450
  43bf0c:	mov    rcx,QWORD PTR [rip+0x1553d]        # 0x451450
  43bf13:	lea    rax,[rdx+0x1]
  43bf17:	mov    QWORD PTR [rip+0x15522],rax        # 0x451440
  43bf1e:	mov    QWORD PTR [rcx+rdx*8],rbx
  43bf22:	mov    QWORD PTR [rcx+rdx*8+0x8],0x0
  43bf2b:	jmp    0x43be00
  43bf30:	test   rcx,rcx
  43bf33:	je     0x43b900
  43bf39:	movabs rdx,0x1555555555555554
  43bf43:	cmp    rax,rdx
  43bf46:	jbe    0x43b8f5
  43bf4c:	jmp    0x43b317
  43bf51:	mov    rcx,QWORD PTR [rbp+0x0]
  43bf55:	test   rcx,rcx
  43bf58:	je     0x43c00e
  43bf5e:	call   0x422a00
  43bf63:	mov    QWORD PTR [rip+0x154ce],rax        # 0x451438
  43bf6a:	jmp    0x43b230
  43bf6f:	test   rcx,rcx
  43bf72:	je     0x43b86c
  43bf78:	movabs rax,0x1555555555555554
  43bf82:	cmp    r8,rax
  43bf85:	jbe    0x43b861
  43bf8b:	jmp    0x43b317
  43bf90:	mov    edx,0x5c
  43bf95:	mov    rcx,rbx
  43bf98:	call   0x43a650
  43bf9d:	test   rax,rax
  43bfa0:	jne    0x43bd10
  43bfa6:	jmp    0x43b116
  43bfab:	mov    rax,QWORD PTR [rip+0x15486]        # 0x451438
  43bfb2:	mov    r8,QWORD PTR [rsp+0x90]
  43bfba:	test   rax,rax
  43bfbd:	je     0x43c232
  43bfc3:	test   r8,r8
  43bfc6:	je     0x43c232
  43bfcc:	lea    rcx,[rip+0x6af4]        # 0x442ac7
  43bfd3:	mov    rdx,r8
  43bfd6:	call   0x4144d0
  43bfdb:	xor    ecx,ecx
  43bfdd:	call   0x43a790
  43bfe2:	lea    rcx,[rip+0x6a77]        # 0x442a60
  43bfe9:	mov    rsi,QWORD PTR [rip+0x15490]        # 0x451480
  43bff0:	call   0x433f18
  43bff5:	mov    rbx,rax
  43bff8:	call   rdi
  43bffa:	lea    rcx,[rax+0x60]
  43bffe:	mov    r8,rsi
  43c001:	mov    rdx,rbx
  43c004:	call   0x433f20
  43c009:	call   0x4045e0
  43c00e:	mov    ecx,0x1
  43c013:	call   0x43a790
  43c018:	mov    rcx,rbx
  43c01b:	call   0x409390
  43c020:	mov    rax,QWORD PTR [rip+0x15429]        # 0x451450
  43c027:	mov    QWORD PTR [rip+0x1540e],0x0        # 0x451440
  43c032:	mov    QWORD PTR [rax],0x0
  43c039:	jmp    0x43b5b9
  43c03e:	test   rcx,rcx
  43c041:	mov    rdx,r8
  43c044:	je     0x43beee
  43c04a:	movabs rax,0x1555555555555554
  43c054:	cmp    rdx,rax
  43c057:	jbe    0x43bee3
  43c05d:	jmp    0x43b317
  43c062:	mov    rcx,QWORD PTR [rbp+0x0]
  43c066:	xor    edx,edx
  43c068:	call   0x406dc0
  43c06d:	test   rax,rax
  43c070:	mov    QWORD PTR [rip+0x153f9],rax        # 0x451470
  43c077:	je     0x43c69a
  43c07d:	mov    rdx,QWORD PTR [rip+0x153bc]        # 0x451440
  43c084:	mov    rax,QWORD PTR [rip+0x153bd]        # 0x451448
  43c08b:	lea    rcx,[rdx+0x2]
  43c08f:	cmp    rcx,rax
  43c092:	jb     0x43c0d8
  43c094:	test   rax,rax
  43c097:	mov    rcx,QWORD PTR [rip+0x153b2]        # 0x451450
  43c09e:	jne    0x43c125
  43c0a4:	test   rcx,rcx
  43c0a7:	mov    al,0x2
  43c0a9:	je     0x43c0b6
  43c0ab:	mov    rdx,rax
  43c0ae:	shr    rdx,1
  43c0b1:	lea    rax,[rdx+rax*1+0x1]
  43c0b6:	lea    rdx,[rax*8+0x0]
  43c0be:	mov    QWORD PTR [rip+0x15383],rax        # 0x451448
  43c0c5:	call   0x422820
  43c0ca:	mov    rdx,QWORD PTR [rip+0x1536f]        # 0x451440
  43c0d1:	mov    QWORD PTR [rip+0x15378],rax        # 0x451450
  43c0d8:	lea    rax,[rdx+0x1]
  43c0dc:	mov    rcx,QWORD PTR [rbp+0x0]
  43c0e0:	add    rbp,0x8
  43c0e4:	mov    QWORD PTR [rip+0x15355],rax        # 0x451440
  43c0eb:	mov    rax,QWORD PTR [rip+0x1535e]        # 0x451450
  43c0f2:	lea    rbx,[rax+rdx*8]
  43c0f6:	lea    rdx,[rip+0x6911]        # 0x442a0e
  43c0fd:	call   0x409420
  43c102:	mov    rdx,QWORD PTR [rip+0x15337]        # 0x451440
  43c109:	mov    QWORD PTR [rbx],rax
  43c10c:	mov    rax,QWORD PTR [rip+0x1533d]        # 0x451450
  43c113:	sub    DWORD PTR [rsp+0x48],0x1
  43c118:	mov    QWORD PTR [rax+rdx*8],0x0
  43c120:	jmp    0x43be00
  43c125:	test   rcx,rcx
  43c128:	je     0x43c0b6
  43c12a:	movabs rdx,0x1555555555555554
  43c134:	cmp    rax,rdx
  43c137:	jbe    0x43c0ab
  43c13d:	jmp    0x43b317
  43c142:	mov    edx,0x5c
  43c147:	mov    rcx,rbx
  43c14a:	call   0x43a650
  43c14f:	test   rax,rax
  43c152:	jne    0x43b52c
  43c158:	xor    edx,edx
  43c15a:	mov    rcx,rbx
  43c15d:	call   0x406dc0
  43c162:	mov    QWORD PTR [rip+0x15307],rax        # 0x451470
  43c169:	jmp    0x43b540
  43c16e:	mov    edx,0x5c
  43c173:	mov    rcx,rbx
  43c176:	call   0x43a650
  43c17b:	test   rax,rax
  43c17e:	jne    0x43b4b6
  43c184:	jmp    0x43b501
  43c189:	mov    rbx,QWORD PTR [rip+0x152a8]        # 0x451438
  43c190:	test   rbx,rbx
  43c193:	jne    0x43b47e
  43c199:	lea    rcx,[rip+0x685b]        # 0x4429fb
  43c1a0:	call   0x422a00
  43c1a5:	mov    QWORD PTR [rip+0x152c4],rax        # 0x451470
  43c1ac:	jmp    0x43be00
  43c1b1:	mov    rax,QWORD PTR [rip+0x15298]        # 0x451450
  43c1b8:	mov    rax,QWORD PTR [rax]
  43c1bb:	mov    rdx,QWORD PTR [rax+0x10]
  43c1bf:	mov    rcx,QWORD PTR [rax+0x8]
  43c1c3:	call   0x4124d0
  43c1c8:	mov    QWORD PTR [rsp+0x58],rax
  43c1cd:	jmp    0x43b7fd
  43c1d2:	mov    rax,QWORD PTR [rip+0x15277]        # 0x451450
  43c1d9:	mov    rax,QWORD PTR [rax]
  43c1dc:	test   rax,rax
  43c1df:	je     0x43c2af
  43c1e5:	mov    rcx,QWORD PTR [rax+0x8]
  43c1e9:	test   rcx,rcx
  43c1ec:	je     0x43c2af
  43c1f2:	call   0x4196f0
  43c1f7:	mov    rbx,rax
  43c1fa:	jmp    0x43b7ef
  43c1ff:	mov    rbx,r15
  43c202:	mov    rsi,QWORD PTR [rsp+0x50]
  43c207:	mov    r15,rbp
  43c20a:	jmp    0x43b60f
  43c20f:	mov    rbx,QWORD PTR [rip+0x15282]        # 0x451498
  43c216:	lea    rcx,[rip+0x6783]        # 0x4429a0
  43c21d:	call   0x433f18
  43c222:	mov    rdx,rbx
  43c225:	mov    rcx,rax
  43c228:	call   0x4144d0
  43c22d:	jmp    0x43b9fe
  43c232:	cmp    DWORD PTR [rip+0x151ef],0x0        # 0x451428
  43c239:	mov    rcx,QWORD PTR [rip+0x15210]        # 0x451450
  43c240:	cmovne rdx,rax
  43c244:	call   0x41a9d0
  43c249:	call   0x413f60
  43c24e:	xor    ecx,ecx
  43c250:	call   0x43a790
  43c255:	mov    eax,esi
  43c257:	mov    rbp,QWORD PTR [rsp+0x78]
  43c25c:	mov    rbx,r15
  43c25f:	cmp    eax,0xffffffff
  43c262:	mov    rsi,QWORD PTR [rsp+0x50]
  43c267:	je     0x43c27d
  43c269:	movsxd rdi,eax
  43c26c:	mov    rax,QWORD PTR [r12+rdi*8]
  43c270:	mov    r15,QWORD PTR [rax+0x8]
  43c274:	test   r15,r15
  43c277:	jne    0x43b60f
  43c27d:	mov    rcx,QWORD PTR [rsp+0x90]
  43c285:	call   0x43a748
  43c28a:	lea    rcx,[rip+0x5848]        # 0x441ad9
  43c291:	mov    rsi,QWORD PTR [rbp+0x0]
  43c295:	call   0x433f18
  43c29a:	mov    rcx,QWORD PTR [rsp+0x68]
  43c29f:	mov    r8,rsi
  43c2a2:	mov    rdx,rax
  43c2a5:	call   0x433f30
  43c2aa:	jmp    0x43b5dd
  43c2af:	lea    rcx,[rip+0x57ca]        # 0x441a80
  43c2b6:	jmp    0x43b7e7
  43c2bb:	cmp    DWORD PTR [rsp+0x48],0x1
  43c2c0:	je     0x43c5a2
  43c2c6:	mov    edi,DWORD PTR [rsp+0x48]
  43c2ca:	test   edi,edi
  43c2cc:	je     0x43b9dd
  43c2d2:	mov    rax,QWORD PTR [rip+0x15177]        # 0x451450
  43c2d9:	xor    r8d,r8d
  43c2dc:	mov    rax,QWORD PTR [rax]
  43c2df:	mov    rdx,QWORD PTR [rax+0x10]
  43c2e3:	mov    rcx,QWORD PTR [rax+0x8]
  43c2e7:	call   0x412270
  43c2ec:	mov    rcx,QWORD PTR [rsp+0x90]
  43c2f4:	mov    rbx,rax
  43c2f7:	call   0x43a748
  43c2fc:	xor    r9d,r9d
  43c2ff:	mov    rcx,rbx
  43c302:	mov    r8,rsi
  43c305:	mov    rdx,rbp
  43c308:	mov    QWORD PTR [rsp+0x90],0x0
  43c314:	call   0x418b10
  43c319:	test   rax,rax
  43c31c:	mov    rbx,rax
  43c31f:	je     0x43b9dd
  43c325:	mov    eax,edi
  43c327:	sub    eax,0x1
  43c32a:	jg     0x43b9b0
  43c330:	cmp    QWORD PTR [rsp+0x90],0x0
  43c339:	je     0x43b9b0
  43c33f:	mov    rcx,rbx
  43c342:	call   0x414970
  43c347:	cmp    DWORD PTR [rsp+0x48],0x1
  43c34c:	jne    0x43b9dd
  43c352:	mov    rax,QWORD PTR [rip+0xd4c7]        # 0x449820
  43c359:	cmp    DWORD PTR [rax],0x2
  43c35c:	ja     0x43c591
  43c362:	mov    rax,QWORD PTR [rip+0x150e7]        # 0x451450
  43c369:	mov    rax,QWORD PTR [rax]
  43c36c:	mov    rcx,QWORD PTR [rax+0x8]
  43c370:	call   0x4117b0
  43c375:	test   rax,rax
  43c378:	je     0x43b9dd
  43c37e:	mov    rdx,QWORD PTR [rbp+0x0]
  43c382:	mov    r8d,0x1
  43c388:	mov    rcx,rax
  43c38b:	call   0x408300
  43c390:	test   rax,rax
  43c393:	mov    rbx,rax
  43c396:	je     0x43b9dd
  43c39c:	mov    rcx,QWORD PTR [rsp+0x90]
  43c3a4:	call   0x43a748
  43c3a9:	mov    rax,QWORD PTR [rip+0x150a0]        # 0x451450
  43c3b0:	mov    QWORD PTR [rsp+0x90],0x0
  43c3bc:	mov    rcx,QWORD PTR [rax]
  43c3bf:	call   0x409390
  43c3c4:	mov    rsi,QWORD PTR [rip+0x15085]        # 0x451450
  43c3cb:	mov    rcx,rbx
  43c3ce:	call   0x409280
  43c3d3:	mov    QWORD PTR [rsi],rax
  43c3d6:	jmp    0x43b9dd
  43c3db:	call   0x4117b0
  43c3e0:	test   rax,rax
  43c3e3:	je     0x43bfe2
  43c3e9:	lea    rdx,[rsp+0x8c]
  43c3f1:	xor    r8d,r8d
  43c3f4:	mov    r9d,0x1
  43c3fa:	mov    rcx,rax
  43c3fd:	mov    QWORD PTR [rsp+0x30],rdx
  43c402:	lea    rdx,[rsp+0x88]
  43c40a:	mov    QWORD PTR [rsp+0x28],rdx
  43c40f:	lea    rdx,[rsp+0x98]
  43c417:	mov    QWORD PTR [rsp+0x20],rdx
  43c41c:	mov    rdx,QWORD PTR [rip+0x1505d]        # 0x451480
  43c423:	call   0x407c70
  43c428:	cmp    QWORD PTR [rsp+0x98],0x0
  43c431:	je     0x43bfe2
  43c437:	call   0x414600
  43c43c:	mov    edx,DWORD PTR [rsp+0x8c]
  43c443:	mov    ecx,DWORD PTR [rsp+0x88]
  43c44a:	call   0x407f70
  43c44f:	mov    rax,QWORD PTR [rip+0xd39a]        # 0x4497f0
  43c456:	mov    rdx,QWORD PTR [rsp+0x98]
  43c45e:	mov    rcx,QWORD PTR [rax]
  43c461:	call   0x416f40
  43c466:	call   0x41a8b0
  43c46b:	call   0x413f60
  43c470:	jmp    0x43b9fe
  43c475:	call   0x4095c0
  43c47a:	mov    rax,QWORD PTR [rip+0xd4ff]        # 0x449980
  43c481:	mov    rcx,QWORD PTR [rax]
  43c484:	test   rcx,rcx
  43c487:	je     0x43c57f
  43c48d:	xor    edx,edx
  43c48f:	call   0x406dc0
  43c494:	test   rax,rax
  43c497:	mov    QWORD PTR [rip+0x14fd2],rax        # 0x451470
  43c49e:	je     0x43c57f
  43c4a4:	mov    rdx,QWORD PTR [rip+0x14f95]        # 0x451440
  43c4ab:	mov    rax,QWORD PTR [rip+0x14f96]        # 0x451448
  43c4b2:	lea    rcx,[rdx+0x2]
  43c4b6:	cmp    rcx,rax
  43c4b9:	jb     0x43c4ff
  43c4bb:	test   rax,rax
  43c4be:	mov    rcx,QWORD PTR [rip+0x14f8b]        # 0x451450
  43c4c5:	jne    0x43c55e
  43c4cb:	test   rcx,rcx
  43c4ce:	mov    al,0x2
  43c4d0:	je     0x43c4dd
  43c4d2:	mov    rdx,rax
  43c4d5:	shr    rdx,1
  43c4d8:	lea    rax,[rax+rdx*1+0x1]
  43c4dd:	lea    rdx,[rax*8+0x0]
  43c4e5:	mov    QWORD PTR [rip+0x14f5c],rax        # 0x451448
  43c4ec:	call   0x422820
  43c4f1:	mov    rdx,QWORD PTR [rip+0x14f48]        # 0x451440
  43c4f8:	mov    QWORD PTR [rip+0x14f51],rax        # 0x451450
  43c4ff:	lea    rax,[rdx+0x1]
  43c503:	mov    rcx,QWORD PTR [rip+0x14f66]        # 0x451470
  43c50a:	mov    QWORD PTR [rip+0x14f2f],rax        # 0x451440
  43c511:	mov    rax,QWORD PTR [rip+0x14f38]        # 0x451450
  43c518:	lea    rbx,[rax+rdx*8]
  43c51c:	mov    rax,QWORD PTR [rip+0xd46d]        # 0x449990
  43c523:	mov    rdx,QWORD PTR [rax]
  43c526:	call   0x409420
  43c52b:	mov    rdx,QWORD PTR [rip+0x14f0e]        # 0x451440
  43c532:	mov    QWORD PTR [rbx],rax
  43c535:	mov    rcx,rbp
  43c538:	movsxd r8,DWORD PTR [rsp+0x48]
  43c53d:	mov    rax,QWORD PTR [rip+0x14f0c]        # 0x451450
  43c544:	mov    QWORD PTR [rax+rdx*8],0x0
  43c54c:	lea    rdx,[rbp+0x8]
  43c550:	shl    r8,0x3
  43c554:	call   0x43a6b0
  43c559:	jmp    0x43be00
  43c55e:	test   rcx,rcx
  43c561:	je     0x43c4dd
  43c567:	movabs rdx,0x1555555555555554
  43c571:	cmp    rax,rdx
  43c574:	jbe    0x43c4d2
  43c57a:	jmp    0x43b317
  43c57f:	mov    rcx,QWORD PTR [rbp+0x0]
  43c583:	test   rcx,rcx
  43c586:	je     0x43be53
  43c58c:	jmp    0x43be38
  43c591:	lea    rcx,[rip+0x6513]        # 0x442aab
  43c598:	call   0x4146b0
  43c59d:	jmp    0x43c362
  43c5a2:	cmp    QWORD PTR [rbp+0x0],0x0
  43c5a7:	je     0x43c5f4
  43c5a9:	mov    rax,QWORD PTR [rip+0xd270]        # 0x449820
  43c5b0:	cmp    DWORD PTR [rax],0x2
  43c5b3:	jbe    0x43c5c1
  43c5b5:	lea    rcx,[rip+0x64dc]        # 0x442a98
  43c5bc:	call   0x4146b0
  43c5c1:	mov    rax,QWORD PTR [rip+0x14e88]        # 0x451450
  43c5c8:	mov    rax,QWORD PTR [rax]
  43c5cb:	mov    rcx,QWORD PTR [rax+0x8]
  43c5cf:	call   0x4117b0
  43c5d4:	test   rax,rax
  43c5d7:	je     0x43c5f4
  43c5d9:	mov    rdx,QWORD PTR [rbp+0x0]
  43c5dd:	xor    r8d,r8d
  43c5e0:	mov    rcx,rax
  43c5e3:	call   0x408300
  43c5e8:	test   rax,rax
  43c5eb:	mov    rbx,rax
  43c5ee:	jne    0x43c39c
  43c5f4:	mov    rax,QWORD PTR [rip+0x14e55]        # 0x451450
  43c5fb:	xor    r8d,r8d
  43c5fe:	mov    rax,QWORD PTR [rax]
  43c601:	mov    rdx,QWORD PTR [rax+0x10]
  43c605:	mov    rcx,QWORD PTR [rax+0x8]
  43c609:	call   0x412270
  43c60e:	mov    rcx,QWORD PTR [rsp+0x90]
  43c616:	mov    rbx,rax
  43c619:	call   0x43a748
  43c61e:	xor    r9d,r9d
  43c621:	mov    rcx,rbx
  43c624:	mov    r8,rsi
  43c627:	mov    rdx,rbp
  43c62a:	mov    QWORD PTR [rsp+0x90],0x0
  43c636:	call   0x418b10
  43c63b:	test   rax,rax
  43c63e:	mov    rbx,rax
  43c641:	jne    0x43c330
  43c647:	jmp    0x43c352
  43c64c:	lea    rcx,[rip+0x642e]        # 0x442a81
  43c653:	call   0x433f18
  43c658:	mov    rcx,rax
  43c65b:	call   0x4144d0
  43c660:	mov    ecx,0x1
  43c665:	call   0x43a790
  43c66a:	lea    rcx,[rip+0x573d]        # 0x441dae
  43c671:	call   0x433f18
  43c676:	mov    rbx,rax
  43c679:	call   QWORD PTR [rip+0x18271]        # 0x4548f0
  43c67f:	mov    r8,QWORD PTR [rsp+0x48]
  43c684:	lea    rcx,[rax+0x60]
  43c688:	mov    rdx,rbx
  43c68b:	call   0x433f20
  43c690:	mov    ecx,0x1
  43c695:	call   0x43a790
  43c69a:	mov    rbx,QWORD PTR [rbp+0x0]
  43c69e:	lea    rcx,[rip+0x6373]        # 0x442a18
  43c6a5:	call   0x433f18
  43c6aa:	lea    rcx,[rsp+0x90]
  43c6b2:	lea    r9,[rip+0x637f]        # 0x442a38
  43c6b9:	mov    r8,rbx
  43c6bc:	mov    rdx,rax
  43c6bf:	call   0x433f30
  43c6c4:	mov    rax,QWORD PTR [rip+0xd155]        # 0x449820
  43c6cb:	cmp    DWORD PTR [rax],0x2
  43c6ce:	jbe    0x43c6dc
  43c6d0:	lea    rcx,[rip+0x636a]        # 0x442a41
  43c6d7:	call   0x4146b0
  43c6dc:	mov    rcx,QWORD PTR [rbp+0x0]
  43c6e0:	call   0x40f880
  43c6e5:	test   rax,rax
  43c6e8:	je     0x43c7b8
  43c6ee:	mov    rdx,QWORD PTR [rip+0x14d4b]        # 0x451440
  43c6f5:	mov    rax,QWORD PTR [rip+0x14d4c]        # 0x451448
  43c6fc:	lea    rcx,[rdx+0x2]
  43c700:	cmp    rcx,rax
  43c703:	jb     0x43c749
  43c705:	test   rax,rax
  43c708:	mov    rcx,QWORD PTR [rip+0x14d41]        # 0x451450
  43c70f:	jne    0x43c79b
  43c715:	test   rcx,rcx
  43c718:	mov    al,0x2
  43c71a:	je     0x43c727
  43c71c:	mov    rdx,rax
  43c71f:	shr    rdx,1
  43c722:	lea    rax,[rdx+rax*1+0x1]
  43c727:	lea    rdx,[rax*8+0x0]
  43c72f:	mov    QWORD PTR [rip+0x14d12],rax        # 0x451448
  43c736:	call   0x422820
  43c73b:	mov    rdx,QWORD PTR [rip+0x14cfe]        # 0x451440
  43c742:	mov    QWORD PTR [rip+0x14d07],rax        # 0x451450
  43c749:	lea    rax,[rdx+0x1]
  43c74d:	lea    rcx,[rip+0x6290]        # 0x4429e4
  43c754:	mov    QWORD PTR [rip+0x14ce5],rax        # 0x451440
  43c75b:	mov    rax,QWORD PTR [rip+0x14cee]        # 0x451450
  43c762:	lea    rbx,[rax+rdx*8]
  43c766:	mov    rdx,QWORD PTR [rbp+0x0]
  43c76a:	call   0x409420
  43c76f:	mov    rdx,QWORD PTR [rip+0x14cca]        # 0x451440
  43c776:	mov    QWORD PTR [rbx],rax
  43c779:	mov    rax,QWORD PTR [rip+0x14cd0]        # 0x451450
  43c780:	mov    QWORD PTR [rax+rdx*8],0x0
  43c788:	lea    rax,[rip+0x6255]        # 0x4429e4
  43c78f:	mov    QWORD PTR [rip+0x14cda],rax        # 0x451470
  43c796:	jmp    0x43b54e
  43c79b:	test   rcx,rcx
  43c79e:	je     0x43c727
  43c7a0:	movabs rdx,0x1555555555555554
  43c7aa:	cmp    rax,rdx
  43c7ad:	jbe    0x43c71c
  43c7b3:	jmp    0x43b317
  43c7b8:	mov    rcx,QWORD PTR [rbp+0x0]
  43c7bc:	mov    edx,0x1
  43c7c1:	call   0x401b40
  43c7c6:	test   rax,rax
  43c7c9:	mov    rbx,rax
  43c7cc:	je     0x43c199
  43c7d2:	mov    rcx,QWORD PTR [rax+0x8]
  43c7d6:	xor    edx,edx
  43c7d8:	call   0x406dc0
  43c7dd:	test   rax,rax
  43c7e0:	mov    QWORD PTR [rip+0x14c89],rax        # 0x451470
  43c7e7:	je     0x43c199
  43c7ed:	mov    rcx,QWORD PTR [rsp+0x90]
  43c7f5:	sub    DWORD PTR [rsp+0x48],0x1
  43c7fa:	add    rbp,0x8
  43c7fe:	call   0x43a748
  43c803:	mov    rcx,rbx
  43c806:	mov    QWORD PTR [rsp+0x90],0x0
  43c812:	call   0x409280
  43c817:	mov    rcx,QWORD PTR [rax+0x8]
  43c81b:	mov    rbx,rax
  43c81e:	call   0x43a748
  43c823:	mov    rax,QWORD PTR [rip+0x14c46]        # 0x451470
  43c82a:	jmp    0x43beae
  43c82f:	nop
  43c830:	lea    rax,[rip+0xfffffffffffdf819]        # 0x41c050
  43c837:	mov    QWORD PTR [rip+0x151e2],rax        # 0x451a20
  43c83e:	ret    
  43c83f:	nop
  43c840:	(bad)  
  43c841:	(bad)  
  43c842:	(bad)  
  43c843:	(bad)  
  43c844:	(bad)  
  43c845:	(bad)  
  43c846:	(bad)  
  43c847:	push   QWORD PTR [rax]
  43c849:	enter  0x43,0x0
	...
  43c855:	add    BYTE PTR [rax],al
  43c857:	add    bh,bh
  43c859:	(bad)  
  43c85a:	(bad)  
  43c85b:	(bad)  
  43c85c:	(bad)  
  43c85d:	(bad)  
  43c85e:	(bad)  
  43c85f:	inc    DWORD PTR [rax]
  43c861:	add    BYTE PTR [rax],al
  43c863:	add    BYTE PTR [rax],al
  43c865:	add    BYTE PTR [rax],al
	...
