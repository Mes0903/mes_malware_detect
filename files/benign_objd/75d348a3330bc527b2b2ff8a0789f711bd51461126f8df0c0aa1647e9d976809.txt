
75d348a3330bc527b2b2ff8a0789f711bd51461126f8df0c0aa1647e9d976809.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	test   rcx,rcx
   140001003:	je     0x140001018
   140001005:	mov    al,BYTE PTR [rcx]
   140001007:	test   al,al
   140001009:	je     0x140001018
   14000100b:	cmp    al,0x2f
   14000100d:	jne    0x140001012
   14000100f:	mov    BYTE PTR [rcx],0x5c
   140001012:	add    rcx,0x1
   140001016:	jne    0x140001005
   140001018:	repz ret 
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	mov    QWORD PTR [rsp+0x8],rbx
   140001021:	mov    QWORD PTR [rsp+0x10],rbp
   140001026:	mov    QWORD PTR [rsp+0x18],rsi
   14000102b:	push   rdi
   14000102c:	sub    rsp,0x20
   140001030:	mov    rdi,r8
   140001033:	mov    rbx,rdx
   140001036:	mov    rsi,rcx
   140001039:	test   rdx,rdx
   14000103c:	je     0x1400010d6
   140001042:	cmp    BYTE PTR [rbx],0x0
   140001045:	je     0x1400010d6
   14000104b:	mov    edx,0x5c
   140001050:	mov    rcx,rbx
   140001053:	call   0x1400089d0
   140001058:	mov    rbx,rax
   14000105b:	test   rax,rax
   14000105e:	je     0x1400010d6
   140001060:	mov    rcx,rsi
   140001063:	mov    BYTE PTR [rax],0x0
   140001066:	call   QWORD PTR [rip+0x26234]        # 0x1400272a0
   14000106c:	mov    ebp,eax
   14000106e:	cmp    eax,0xffffffff
   140001071:	jne    0x1400010a2
   140001073:	xor    edx,edx
   140001075:	mov    rcx,rsi
   140001078:	call   QWORD PTR [rip+0x2622a]        # 0x1400272a8
   14000107e:	test   eax,eax
   140001080:	jne    0x140001098
   140001082:	test   rdi,rdi
   140001085:	je     0x140001098
   140001087:	lea    rdx,[rip+0x26572]        # 0x140027600
   14000108e:	lea    ecx,[rax+0x5]
   140001091:	mov    r8,rsi
   140001094:	call   rdi
   140001096:	jmp    0x1400010a2
   140001098:	mov    rdx,rsi
   14000109b:	mov    ecx,0x1
   1400010a0:	call   rdi
   1400010a2:	test   bpl,0x10
   1400010a6:	jne    0x1400010c9
   1400010a8:	mov    ecx,0xb7
   1400010ad:	call   QWORD PTR [rip+0x261fd]        # 0x1400272b0
   1400010b3:	test   rdi,rdi
   1400010b6:	je     0x1400010c9
   1400010b8:	lea    rdx,[rip+0x26541]        # 0x140027600
   1400010bf:	mov    r8,rsi
   1400010c2:	mov    ecx,0x5
   1400010c7:	call   rdi
   1400010c9:	mov    BYTE PTR [rbx],0x5c
   1400010cc:	add    rbx,0x1
   1400010d0:	jne    0x140001042
   1400010d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400010e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400010e5:	mov    eax,0x1
   1400010ea:	add    rsp,0x20
   1400010ee:	pop    rdi
   1400010ef:	ret    
   1400010f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400010fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400010ff:	push   rdi
   140001100:	push   r12
   140001102:	push   r13
   140001104:	sub    rsp,0x50
   140001108:	mov    rbx,QWORD PTR [rsp+0xa0]
   140001110:	mov    r13d,r9d
   140001113:	mov    r12,r8
   140001116:	mov    rdi,rdx
   140001119:	mov    ebp,ecx
   14000111b:	mov    eax,0x1
   140001120:	test   ebp,ebp
   140001122:	mov    edx,0xc0000000
   140001127:	cmove  ebp,eax
   14000112a:	and    QWORD PTR [rsp+0x30],0x0
   140001130:	xor    r9d,r9d
   140001133:	xor    r8d,r8d
   140001136:	mov    rcx,rdi
   140001139:	mov    DWORD PTR [rsp+0x28],0x80
   140001141:	mov    DWORD PTR [rsp+0x20],ebp
   140001145:	call   QWORD PTR [rip+0x2611d]        # 0x140027268
   14000114b:	mov    rsi,rax
   14000114e:	cmp    rax,0xffffffffffffffff
   140001152:	jne    0x1400011f5
   140001158:	call   QWORD PTR [rip+0x26112]        # 0x140027270
   14000115e:	cmp    eax,0x3
   140001161:	jne    0x140001177
   140001163:	mov    r8,rbx
   140001166:	mov    rdx,r12
   140001169:	mov    rcx,rdi
   14000116c:	call   0x14000101c
   140001171:	test   eax,eax
   140001173:	jne    0x14000111b
   140001175:	jmp    0x1400011ee
   140001177:	cmp    eax,0x50
   14000117a:	je     0x140001186
   14000117c:	mov    ecx,eax
   14000117e:	call   QWORD PTR [rip+0x2612c]        # 0x1400272b0
   140001184:	jmp    0x1400011cc
   140001186:	test   rbx,rbx
   140001189:	je     0x1400011ee
   14000118b:	mov    rdx,rdi
   14000118e:	mov    ecx,0x2
   140001193:	call   rbx
   140001195:	test   eax,eax
   140001197:	je     0x1400011e4
   140001199:	and    QWORD PTR [rsp+0x30],0x0
   14000119f:	xor    r9d,r9d
   1400011a2:	xor    r8d,r8d
   1400011a5:	mov    edx,0xc0000000
   1400011aa:	mov    rcx,rdi
   1400011ad:	mov    DWORD PTR [rsp+0x28],0x80
   1400011b5:	mov    DWORD PTR [rsp+0x20],0x2
   1400011bd:	call   QWORD PTR [rip+0x260a5]        # 0x140027268
   1400011c3:	mov    rsi,rax
   1400011c6:	cmp    rax,0xffffffffffffffff
   1400011ca:	jne    0x1400011f5
   1400011cc:	test   rbx,rbx
   1400011cf:	je     0x1400011ee
   1400011d1:	lea    rdx,[rip+0x26470]        # 0x140027648
   1400011d8:	mov    r8,rdi
   1400011db:	mov    ecx,0x5
   1400011e0:	call   rbx
   1400011e2:	jmp    0x1400011ee
   1400011e4:	mov    rdx,rdi
   1400011e7:	mov    ecx,0x7
   1400011ec:	call   rbx
   1400011ee:	xor    eax,eax
   1400011f0:	jmp    0x1400012ca
   1400011f5:	test   rbx,rbx
   1400011f8:	je     0x140001204
   1400011fa:	mov    rdx,rdi
   1400011fd:	mov    ecx,0x3
   140001202:	call   rbx
   140001204:	movzx  edx,WORD PTR [rsp+0x98]
   14000120c:	movzx  ecx,WORD PTR [rsp+0x90]
   140001214:	lea    r8,[rsp+0x40]
   140001219:	call   QWORD PTR [rip+0x26059]        # 0x140027278
   14000121f:	lea    r9,[rsp+0x40]
   140001224:	lea    r8,[rsp+0x40]
   140001229:	lea    rdx,[rsp+0x40]
   14000122e:	mov    rcx,rsi
   140001231:	call   QWORD PTR [rip+0x26049]        # 0x140027280
   140001237:	mov    rcx,rsi
   14000123a:	test   r13d,r13d
   14000123d:	jne    0x140001247
   14000123f:	call   QWORD PTR [rip+0x26043]        # 0x140027288
   140001245:	jmp    0x1400011ee
   140001247:	and    QWORD PTR [rsp+0x28],0x0
   14000124d:	xor    r9d,r9d
   140001250:	xor    edx,edx
   140001252:	lea    r8d,[r9+0x4]
   140001256:	mov    DWORD PTR [rsp+0x20],r13d
   14000125b:	call   QWORD PTR [rip+0x2602f]        # 0x140027290
   140001261:	mov    rcx,rsi
   140001264:	mov    rbp,rax
   140001267:	call   QWORD PTR [rip+0x2601b]        # 0x140027288
   14000126d:	cmp    rbp,0xffffffffffffffff
   140001271:	jne    0x140001288
   140001273:	test   rbx,rbx
   140001276:	je     0x1400011ee
   14000127c:	lea    rdx,[rip+0x263ad]        # 0x140027630
   140001283:	jmp    0x1400011d8
   140001288:	and    QWORD PTR [rsp+0x20],0x0
   14000128e:	xor    r9d,r9d
   140001291:	xor    r8d,r8d
   140001294:	lea    edx,[r9+0x2]
   140001298:	mov    rcx,rbp
   14000129b:	call   QWORD PTR [rip+0x25ff7]        # 0x140027298
   1400012a1:	mov    rcx,rbp
   1400012a4:	mov    rsi,rax
   1400012a7:	call   QWORD PTR [rip+0x25fdb]        # 0x140027288
   1400012ad:	test   rsi,rsi
   1400012b0:	jne    0x1400012c7
   1400012b2:	test   rbx,rbx
   1400012b5:	je     0x1400011ee
   1400012bb:	lea    rdx,[rip+0x26356]        # 0x140027618
   1400012c2:	jmp    0x1400011d8
   1400012c7:	mov    rax,rsi
   1400012ca:	lea    r11,[rsp+0x50]
   1400012cf:	mov    rbx,QWORD PTR [r11+0x20]
   1400012d3:	mov    rbp,QWORD PTR [r11+0x28]
   1400012d7:	mov    rsi,QWORD PTR [r11+0x30]
   1400012db:	mov    rsp,r11
   1400012de:	pop    r13
   1400012e0:	pop    r12
   1400012e2:	pop    rdi
   1400012e3:	ret    
   1400012e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400012e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400012ee:	push   rdi
   1400012ef:	sub    rsp,0x80
   1400012f6:	mov    edi,r9d
   1400012f9:	mov    rbx,rdx
   1400012fc:	mov    rbp,rcx
   1400012ff:	cmp    r8d,0x8
   140001303:	jne    0x1400013dd
   140001309:	xor    edx,edx
   14000130b:	lea    rcx,[rsp+0x20]
   140001310:	lea    r8d,[rdx+0x58]
   140001314:	call   0x140008a00
   140001319:	lea    eax,[rdi+0x1]
   14000131c:	mov    QWORD PTR [rsp+0x20],rbx
   140001321:	mov    ebx,0x1
   140001326:	mov    DWORD PTR [rsp+0x28],eax
   14000132a:	mov    eax,DWORD PTR [rsp+0xb0]
   140001331:	lea    r8,[rip+0x26368]        # 0x1400276a0
   140001338:	lea    rcx,[rsp+0x20]
   14000133d:	lea    r9d,[rbx+0x57]
   140001341:	lea    edx,[rbx-0x10]
   140001344:	mov    DWORD PTR [rsp+0x38],eax
   140001348:	mov    QWORD PTR [rsp+0x30],rbp
   14000134d:	call   0x1400067a4
   140001352:	mov    rdi,QWORD PTR [rsp+0xb8]
   14000135a:	test   eax,eax
   14000135c:	je     0x14000136c
   14000135e:	test   rdi,rdi
   140001361:	je     0x140001395
   140001363:	lea    rdx,[rip+0x2631e]        # 0x140027688
   14000136a:	jmp    0x14000138b
   14000136c:	lea    rcx,[rsp+0x20]
   140001371:	mov    edx,0x4
   140001376:	call   0x1400069b4
   14000137b:	cmp    eax,ebx
   14000137d:	je     0x140001397
   14000137f:	test   rdi,rdi
   140001382:	je     0x140001395
   140001384:	lea    rdx,[rip+0x262e5]        # 0x140027670
   14000138b:	mov    r8d,eax
   14000138e:	mov    ecx,0x4
   140001393:	call   rdi
   140001395:	xor    ebx,ebx
   140001397:	lea    rcx,[rsp+0x20]
   14000139c:	call   0x140007eac
   1400013a1:	test   eax,eax
   1400013a3:	je     0x1400013bd
   1400013a5:	test   rdi,rdi
   1400013a8:	je     0x1400013bb
   1400013aa:	lea    rdx,[rip+0x262a7]        # 0x140027658
   1400013b1:	mov    r8d,eax
   1400013b4:	mov    ecx,0x4
   1400013b9:	call   rdi
   1400013bb:	xor    ebx,ebx
   1400013bd:	mov    rcx,rbp
   1400013c0:	call   QWORD PTR [rip+0x25e9a]        # 0x140027260
   1400013c6:	lea    r11,[rsp+0x80]
   1400013ce:	mov    eax,ebx
   1400013d0:	mov    rbx,QWORD PTR [r11+0x10]
   1400013d4:	mov    rbp,QWORD PTR [r11+0x18]
   1400013d8:	mov    rsp,r11
   1400013db:	pop    rdi
   1400013dc:	ret    
   1400013dd:	test   r8d,r8d
   1400013e0:	jne    0x1400013bb
   1400013e2:	movsxd r8,DWORD PTR [rsp+0xb0]
   1400013ea:	call   0x140008b00
   1400013ef:	mov    ebx,0x1
   1400013f4:	jmp    0x1400013bd
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400013fd:	push   rbp
   1400013fe:	push   rsi
   1400013ff:	push   rdi
   140001400:	push   r12
   140001402:	push   r13
   140001404:	push   r14
   140001406:	push   r15
   140001408:	sub    rsp,0x1a0
   14000140f:	mov    rax,QWORD PTR [rip+0x32e8a]        # 0x1400342a0
   140001416:	xor    rax,rsp
   140001419:	mov    QWORD PTR [rsp+0x190],rax
   140001421:	mov    r12,QWORD PTR [rsp+0x200]
   140001429:	mov    rbx,r8
   14000142c:	mov    ebp,r9d
   14000142f:	mov    eax,DWORD PTR [rbp+rbx*1-0x6]
   140001433:	sub    ebp,DWORD PTR [rbp+rbx*1-0xa]
   140001437:	mov    r14d,r9d
   14000143a:	sub    ebp,eax
   14000143c:	mov    r8,rdx
   14000143f:	mov    QWORD PTR [rsp+0x78],rdx
   140001444:	sub    ebp,0x16
   140001447:	cmp    DWORD PTR [r14+rbx*1-0x16],0x6054b50
   140001450:	mov    QWORD PTR [rsp+0x40],rcx
   140001455:	lea    edx,[rax+rbp*1]
   140001458:	mov    QWORD PTR [rsp+0x58],r12
   14000145d:	je     0x140001466
   14000145f:	xor    eax,eax
   140001461:	jmp    0x14000174b
   140001466:	xor    r12d,r12d
   140001469:	cmp    r12w,WORD PTR [r14+rbx*1-0xc]
   14000146f:	mov    r15d,r12d
   140001472:	jge    0x140001746
   140001478:	movsxd rsi,edx
   14000147b:	add    rsi,rbx
   14000147e:	movsxd rdi,DWORD PTR [rsi+0x2a]
   140001482:	lea    eax,[rdi+rbp*1]
   140001485:	movsxd r13,eax
   140001488:	add    r13,rbx
   14000148b:	cmp    DWORD PTR [rsi],0x2014b50
   140001491:	jne    0x14000145f
   140001493:	cmp    DWORD PTR [r13+0x0],0x4034b50
   14000149b:	jne    0x14000145f
   14000149d:	movsx  ecx,WORD PTR [rsi+0x20]
   1400014a1:	add    edx,0x2e
   1400014a4:	movsxd rax,edx
   1400014a7:	add    rax,rbx
   1400014aa:	mov    QWORD PTR [rsp+0x50],rax
   1400014af:	movsx  eax,WORD PTR [rsi+0x1e]
   1400014b3:	add    ecx,eax
   1400014b5:	movsx  eax,WORD PTR [rsi+0x1c]
   1400014b9:	add    edx,eax
   1400014bb:	movsx  rax,WORD PTR [r13+0x1a]
   1400014c0:	add    edx,ecx
   1400014c2:	lea    rcx,[rbx+rdi*1]
   1400014c6:	mov    DWORD PTR [rsp+0x48],edx
   1400014ca:	movsx  rdx,WORD PTR [r13+0x1c]
   1400014cf:	add    rdx,rax
   1400014d2:	movsxd rax,ebp
   1400014d5:	add    rcx,rdx
   1400014d8:	lea    rdx,[rsp+0x80]
   1400014e0:	lea    rax,[rax+rcx*1+0x1e]
   1400014e5:	mov    rcx,r8
   1400014e8:	sub    rdx,r8
   1400014eb:	mov    QWORD PTR [rsp+0x70],rax
   1400014f0:	mov    al,BYTE PTR [rcx]
   1400014f2:	mov    BYTE PTR [rdx+rcx*1],al
   1400014f5:	inc    rcx
   1400014f8:	cmp    al,r12b
   1400014fb:	jne    0x1400014f0
   1400014fd:	or     rcx,0xffffffffffffffff
   140001501:	xor    eax,eax
   140001503:	lea    rdi,[rsp+0x80]
   14000150b:	repnz scas al,BYTE PTR es:[rdi]
   14000150d:	lea    rdx,[rsp+0x80]
   140001515:	dec    rdx
   140001518:	not    rcx
   14000151b:	cmp    BYTE PTR [rcx+rdx*1-0x1],0x5c
   140001520:	mov    QWORD PTR [rsp+0x60],rdx
   140001525:	je     0x140001540
   140001527:	lea    rdi,[rsp+0x80]
   14000152f:	or     rcx,0xffffffffffffffff
   140001533:	repnz scas al,BYTE PTR es:[rdi]
   140001535:	movzx  eax,WORD PTR [rip+0x2616c]        # 0x1400276a8
   14000153c:	mov    WORD PTR [rdi-0x1],ax
   140001540:	lea    rcx,[rsp+0x80]
   140001548:	call   QWORD PTR [rip+0x25d02]        # 0x140027250
   14000154e:	movsxd rcx,eax
   140001551:	lea    rax,[rsp+rcx*1+0x80]
   140001559:	mov    QWORD PTR [rsp+0x68],rax
   14000155e:	mov    rax,QWORD PTR [rsp+0x40]
   140001563:	cmp    QWORD PTR [rax],0x0
   140001567:	je     0x1400015ab
   140001569:	mov    r9,rax
   14000156c:	mov    rdi,QWORD PTR [r9]
   14000156f:	mov    rdx,QWORD PTR [rsp+0x50]
   140001574:	or     rcx,0xffffffffffffffff
   140001578:	xor    eax,eax
   14000157a:	repnz scas al,BYTE PTR es:[rdi]
   14000157c:	not    rcx
   14000157f:	lea    r8,[rcx-0x1]
   140001583:	mov    rcx,QWORD PTR [r9]
   140001586:	call   0x14002419c
   14000158b:	test   eax,eax
   14000158d:	je     0x140001692
   140001593:	mov    rcx,QWORD PTR [rsp+0x40]
   140001598:	inc    r12
   14000159b:	mov    r9,r12
   14000159e:	shl    r9,0x4
   1400015a2:	add    r9,rcx
   1400015a5:	cmp    QWORD PTR [r9],0x0
   1400015a9:	jne    0x14000156c
   1400015ab:	movsx  r8,WORD PTR [r13+0x1a]
   1400015b0:	mov    rdx,QWORD PTR [rsp+0x50]
   1400015b5:	lea    rcx,[rsp+0x80]
   1400015bd:	call   0x140008ed0
   1400015c2:	mov    r12,QWORD PTR [rsp+0x60]
   1400015c7:	lea    rcx,[rsp+0x80]
   1400015cf:	call   0x140001000
   1400015d4:	or     rcx,0xffffffffffffffff
   1400015d8:	xor    eax,eax
   1400015da:	lea    rdi,[rsp+0x80]
   1400015e2:	repnz scas al,BYTE PTR es:[rdi]
   1400015e4:	mov    rdi,QWORD PTR [rsp+0x68]
   1400015e9:	not    rcx
   1400015ec:	cmp    BYTE PTR [rcx+r12*1-0x1],0x5c
   1400015f2:	mov    r12,QWORD PTR [rsp+0x58]
   1400015f7:	je     0x140001655
   1400015f9:	movzx  eax,WORD PTR [rsi+0xc]
   1400015fd:	mov    r9d,DWORD PTR [rsi+0x18]
   140001601:	mov    QWORD PTR [rsp+0x30],r12
   140001606:	mov    WORD PTR [rsp+0x28],ax
   14000160b:	movzx  eax,WORD PTR [rsi+0xe]
   14000160f:	lea    rdx,[rsp+0x80]
   140001617:	mov    r8,rdi
   14000161a:	xor    ecx,ecx
   14000161c:	mov    WORD PTR [rsp+0x20],ax
   140001621:	call   0x1400010f0
   140001626:	test   rax,rax
   140001629:	je     0x140001655
   14000162b:	mov    ecx,DWORD PTR [rsi+0x18]
   14000162e:	movsx  r8d,WORD PTR [r13+0x8]
   140001633:	mov    r9d,DWORD PTR [rsi+0x14]
   140001637:	mov    rdx,QWORD PTR [rsp+0x70]
   14000163c:	mov    QWORD PTR [rsp+0x28],r12
   140001641:	mov    DWORD PTR [rsp+0x20],ecx
   140001645:	mov    rcx,rax
   140001648:	call   0x1400012e4
   14000164d:	test   eax,eax
   14000164f:	je     0x14000145f
   140001655:	test   r12,r12
   140001658:	je     0x14000166f
   14000165a:	movsx  r8d,WORD PTR [r14+rbx*1-0xc]
   140001660:	lea    r9d,[r15+0x1]
   140001664:	mov    rdx,rdi
   140001667:	mov    ecx,0x6
   14000166c:	call   r12
   14000166f:	movsx  eax,WORD PTR [r14+rbx*1-0xc]
   140001675:	inc    r15d
   140001678:	cmp    r15d,eax
   14000167b:	jge    0x140001746
   140001681:	mov    edx,DWORD PTR [rsp+0x48]
   140001685:	mov    r8,QWORD PTR [rsp+0x78]
   14000168a:	xor    r12d,r12d
   14000168d:	jmp    0x140001478
   140001692:	mov    rdx,QWORD PTR [rsp+0x40]
   140001697:	add    r12,r12
   14000169a:	or     r10,0xffffffffffffffff
   14000169e:	mov    rdi,QWORD PTR [rdx+r12*8]
   1400016a2:	mov    r8,QWORD PTR [rdx+r12*8+0x8]
   1400016a7:	xor    eax,eax
   1400016a9:	mov    rcx,r10
   1400016ac:	repnz scas al,BYTE PTR es:[rdi]
   1400016ae:	lea    rdi,[rsp+0x80]
   1400016b6:	not    rcx
   1400016b9:	lea    r9,[rcx-0x1]
   1400016bd:	mov    rcx,r10
   1400016c0:	repnz scas al,BYTE PTR es:[rdi]
   1400016c2:	xor    edx,edx
   1400016c4:	mov    al,BYTE PTR [r8+rdx*1]
   1400016c8:	inc    rdx
   1400016cb:	mov    BYTE PTR [rdi+rdx*1-0x2],al
   1400016cf:	test   al,al
   1400016d1:	jne    0x1400016c4
   1400016d3:	mov    r12,QWORD PTR [rsp+0x60]
   1400016d8:	movsx  r8d,WORD PTR [r13+0x1a]
   1400016dd:	xor    eax,eax
   1400016df:	lea    rdi,[rsp+0x80]
   1400016e7:	mov    rcx,r10
   1400016ea:	movsxd rdx,r9d
   1400016ed:	add    rdx,QWORD PTR [rsp+0x50]
   1400016f2:	repnz scas al,BYTE PTR es:[rdi]
   1400016f4:	sub    r8d,r9d
   1400016f7:	not    rcx
   1400016fa:	mov    al,BYTE PTR [rcx+r12*1-0x1]
   1400016ff:	cmp    al,0x5c
   140001701:	je     0x140001721
   140001703:	cmp    al,0x2f
   140001705:	je     0x140001721
   140001707:	xor    eax,eax
   140001709:	lea    rdi,[rsp+0x80]
   140001711:	mov    rcx,r10
   140001714:	repnz scas al,BYTE PTR es:[rdi]
   140001716:	movzx  eax,WORD PTR [rip+0x25f8b]        # 0x1400276a8
   14000171d:	mov    WORD PTR [rdi-0x1],ax
   140001721:	cmp    BYTE PTR [rdx],0x5c
   140001724:	je     0x14000172b
   140001726:	cmp    BYTE PTR [rdx],0x2f
   140001729:	jne    0x140001731
   14000172b:	inc    rdx
   14000172e:	dec    r8d
   140001731:	lea    rcx,[rsp+0x80]
   140001739:	movsxd r8,r8d
   14000173c:	call   0x140008ed0
   140001741:	jmp    0x1400015c7
   140001746:	mov    eax,0x1
   14000174b:	mov    rcx,QWORD PTR [rsp+0x190]
   140001753:	xor    rcx,rsp
   140001756:	call   0x140009080
   14000175b:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140001763:	add    rsp,0x1a0
   14000176a:	pop    r15
   14000176c:	pop    r14
   14000176e:	pop    r13
   140001770:	pop    r12
   140001772:	pop    rdi
   140001773:	pop    rsi
   140001774:	pop    rbp
   140001775:	ret    
   140001776:	int3   
   140001777:	int3   
   140001778:	jmp    0x140009408
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	jmp    0x140009454
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	mov    QWORD PTR [rsp+0x10],rbx
   14000178d:	mov    QWORD PTR [rsp+0x18],rbp
   140001792:	push   rdi
   140001793:	sub    rsp,0x20
   140001797:	mov    edi,r8d
   14000179a:	mov    rax,rdx
   14000179d:	mov    rbx,rcx
   1400017a0:	test   rdx,rdx
   1400017a3:	je     0x14000181e
   1400017a5:	or     ebp,0xffffffff
   1400017a8:	mov    cl,BYTE PTR [rax]
   1400017aa:	test   cl,cl
   1400017ac:	je     0x14000181e
   1400017ae:	cmp    edi,0x2
   1400017b1:	jbe    0x14000181e
   1400017b3:	inc    rax
   1400017b6:	cmp    cl,0x5c
   1400017b9:	jne    0x140001812
   1400017bb:	cmp    BYTE PTR [rax],0x30
   1400017be:	jl     0x140001819
   1400017c0:	cmp    BYTE PTR [rax],0x33
   1400017c3:	jle    0x1400017ea
   1400017c5:	cmp    BYTE PTR [rax],0x6e
   1400017c8:	je     0x1400017d7
   1400017ca:	cmp    BYTE PTR [rax],0x72
   1400017cd:	jne    0x140001819
   1400017cf:	inc    rax
   1400017d2:	mov    BYTE PTR [rbx],0xd
   1400017d5:	jmp    0x140001814
   1400017d7:	mov    BYTE PTR [rbx],0xd
   1400017da:	mov    BYTE PTR [rbx+0x1],0xa
   1400017de:	inc    rax
   1400017e1:	add    rbx,0x2
   1400017e5:	add    edi,0xfffffffe
   1400017e8:	jmp    0x140001819
   1400017ea:	lea    rdx,[rsp+0x30]
   1400017ef:	mov    r8d,0x8
   1400017f5:	mov    rcx,rax
   1400017f8:	call   0x1400097fc
   1400017fd:	cmp    al,0xa
   1400017ff:	jne    0x140001809
   140001801:	mov    BYTE PTR [rbx],0xd
   140001804:	inc    rbx
   140001807:	add    edi,ebp
   140001809:	mov    BYTE PTR [rbx],al
   14000180b:	mov    rax,QWORD PTR [rsp+0x30]
   140001810:	jmp    0x140001814
   140001812:	mov    BYTE PTR [rbx],cl
   140001814:	inc    rbx
   140001817:	add    edi,ebp
   140001819:	test   rax,rax
   14000181c:	jne    0x1400017a8
   14000181e:	mov    rbp,QWORD PTR [rsp+0x40]
   140001823:	mov    BYTE PTR [rbx],0x0
   140001826:	mov    rbx,QWORD PTR [rsp+0x38]
   14000182b:	add    rsp,0x20
   14000182f:	pop    rdi
   140001830:	ret    
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	rex push rbx
   140001836:	sub    rsp,0x20
   14000183a:	mov    rbx,rcx
   14000183d:	mov    rcx,QWORD PTR [rip+0x3408c]        # 0x1400358d0
   140001844:	test   rcx,rcx
   140001847:	je     0x14000184e
   140001849:	call   0x1400098ac
   14000184e:	mov    rcx,rbx
   140001851:	call   0x14001e864
   140001856:	and    DWORD PTR [rip+0x3630b],0x0        # 0x140037b68
   14000185d:	mov    QWORD PTR [rip+0x3406c],rax        # 0x1400358d0
   140001864:	add    rsp,0x20
   140001868:	pop    rbx
   140001869:	ret    
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	mov    rax,QWORD PTR [rip+0x3405d]        # 0x1400358d0
   140001873:	test   rax,rax
   140001876:	jne    0x14000187f
   140001878:	lea    rax,[rip+0x25fc9]        # 0x140027848
   14000187f:	ret    
   140001880:	mov    QWORD PTR [rsp+0x8],rbx
   140001885:	push   rdi
   140001886:	sub    rsp,0x20
   14000188a:	mov    rbx,rcx
   14000188d:	mov    ecx,0x10
   140001892:	call   0x14000993c
   140001897:	mov    rcx,rbx
   14000189a:	mov    rdi,rax
   14000189d:	call   0x14001e864
   1400018a2:	mov    rcx,QWORD PTR [rip+0x3402f]        # 0x1400358d8
   1400018a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ae:	mov    QWORD PTR [rip+0x34023],rdi        # 0x1400358d8
   1400018b5:	mov    QWORD PTR [rdi+0x8],rcx
   1400018b9:	mov    QWORD PTR [rdi],rax
   1400018bc:	add    rsp,0x20
   1400018c0:	pop    rdi
   1400018c1:	ret    
   1400018c2:	int3   
   1400018c3:	int3   
   1400018c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400018c9:	push   rdi
   1400018ca:	sub    rsp,0x150
   1400018d1:	mov    rax,QWORD PTR [rip+0x329c8]        # 0x1400342a0
   1400018d8:	xor    rax,rsp
   1400018db:	mov    QWORD PTR [rsp+0x140],rax
   1400018e3:	cmp    QWORD PTR [rip+0x33fdd],0x0        # 0x1400358c8
   1400018eb:	mov    rbx,rdx
   1400018ee:	jne    0x140001932
   1400018f0:	lea    rcx,[rip+0x25fc9]        # 0x1400278c0
   1400018f7:	call   QWORD PTR [rip+0x25943]        # 0x140027240
   1400018fd:	test   rax,rax
   140001900:	jne    0x14000191b
   140001902:	mov    rcx,QWORD PTR [rip+0x3641f]        # 0x140037d28
   140001909:	lea    rdx,[rip+0x25f98]        # 0x1400278a8
   140001910:	call   QWORD PTR [rip+0x3521a]        # 0x140036b30
   140001916:	jmp    0x1400019e0
   14000191b:	lea    rdx,[rip+0x25f6e]        # 0x140027890
   140001922:	mov    rcx,rax
   140001925:	call   QWORD PTR [rip+0x2591d]        # 0x140027248
   14000192b:	mov    QWORD PTR [rip+0x33f96],rax        # 0x1400358c8
   140001932:	lea    r8,[rsp+0x20]
   140001937:	lea    rdx,[rip+0x25f4e]        # 0x14002788c
   14000193e:	mov    rcx,rbx
   140001941:	call   QWORD PTR [rip+0x351e1]        # 0x140036b28
   140001947:	test   eax,eax
   140001949:	je     0x1400019e0
   14000194f:	cmp    QWORD PTR [rip+0x33f71],0x0        # 0x1400358c8
   140001957:	je     0x140001902
   140001959:	xor    ebx,ebx
   14000195b:	lea    rdi,[rip+0x327a6]        # 0x140034108
   140001962:	mov    rdx,QWORD PTR [rsp+0x20]
   140001967:	mov    rcx,QWORD PTR [rdi]
   14000196a:	call   0x140018934
   14000196f:	test   eax,eax
   140001971:	je     0x14000198e
   140001973:	inc    ebx
   140001975:	add    rdi,0x10
   140001979:	cmp    ebx,0xa
   14000197c:	jb     0x140001962
   14000197e:	mov    rcx,QWORD PTR [rip+0x3620b]        # 0x140037b90
   140001985:	lea    rdx,[rip+0x25eec]        # 0x140027878
   14000198c:	jmp    0x1400019d5
   14000198e:	lea    rdx,[rip+0x3276b]        # 0x140034100
   140001995:	movsxd rax,ebx
   140001998:	xor    r9d,r9d
   14000199b:	add    rax,rax
   14000199e:	xor    ecx,ecx
   1400019a0:	mov    r8d,DWORD PTR [rdx+rax*8]
   1400019a4:	lea    rdx,[rsp+0x30]
   1400019a9:	call   QWORD PTR [rip+0x33f19]        # 0x1400358c8
   1400019af:	test   eax,eax
   1400019b1:	je     0x1400019c7
   1400019b3:	lea    rdx,[rsp+0x30]
   1400019b8:	lea    rcx,[rip+0x25ecd]        # 0x14002788c
   1400019bf:	call   QWORD PTR [rip+0x3622b]        # 0x140037bf0
   1400019c5:	jmp    0x1400019e2
   1400019c7:	mov    rcx,QWORD PTR [rip+0x3635a]        # 0x140037d28
   1400019ce:	lea    rdx,[rip+0x25e8b]        # 0x140027860
   1400019d5:	mov    r8,QWORD PTR [rsp+0x20]
   1400019da:	call   QWORD PTR [rip+0x35150]        # 0x140036b30
   1400019e0:	xor    eax,eax
   1400019e2:	mov    rcx,QWORD PTR [rsp+0x140]
   1400019ea:	xor    rcx,rsp
   1400019ed:	call   0x140009080
   1400019f2:	mov    rbx,QWORD PTR [rsp+0x160]
   1400019fa:	add    rsp,0x150
   140001a01:	pop    rdi
   140001a02:	ret    
   140001a03:	int3   
   140001a04:	rex push rbx
   140001a06:	sub    rsp,0x2c0
   140001a0d:	mov    rax,QWORD PTR [rip+0x3288c]        # 0x1400342a0
   140001a14:	xor    rax,rsp
   140001a17:	mov    QWORD PTR [rsp+0x2b0],rax
   140001a1f:	and    QWORD PTR [rsp+0x80],0x0
   140001a28:	and    QWORD PTR [rsp+0x68],0x0
   140001a2e:	and    DWORD PTR [rsp+0x58],0x0
   140001a33:	and    QWORD PTR [rsp+0x78],0x0
   140001a39:	and    QWORD PTR [rsp+0x50],0x0
   140001a3f:	and    QWORD PTR [rsp+0x60],0x0
   140001a45:	xor    ecx,ecx
   140001a47:	mov    rbx,rdx
   140001a4a:	call   QWORD PTR [rip+0x25b00]        # 0x140027550
   140001a50:	test   eax,eax
   140001a52:	jns    0x140001a70
   140001a54:	lea    rdx,[rip+0x25fb5]        # 0x140027a10
   140001a5b:	mov    rcx,QWORD PTR [rip+0x362c6]        # 0x140037d28
   140001a62:	mov    r8d,eax
   140001a65:	call   QWORD PTR [rip+0x350c5]        # 0x140036b30
   140001a6b:	jmp    0x140001c4f
   140001a70:	lea    rax,[rsp+0x58]
   140001a75:	lea    r9,[rsp+0x90]
   140001a7d:	lea    r8,[rsp+0x88]
   140001a85:	mov    QWORD PTR [rsp+0x40],rax
   140001a8a:	lea    rax,[rsp+0x68]
   140001a8f:	lea    rdx,[rip+0x25f6a]        # 0x140027a00
   140001a96:	mov    QWORD PTR [rsp+0x38],rax
   140001a9b:	lea    rax,[rsp+0x78]
   140001aa0:	mov    rcx,rbx
   140001aa3:	mov    QWORD PTR [rsp+0x30],rax
   140001aa8:	lea    rax,[rsp+0x80]
   140001ab0:	mov    QWORD PTR [rsp+0x28],rax
   140001ab5:	lea    rax,[rsp+0x70]
   140001aba:	mov    QWORD PTR [rsp+0x20],rax
   140001abf:	call   QWORD PTR [rip+0x35063]        # 0x140036b28
   140001ac5:	test   eax,eax
   140001ac7:	jne    0x140001ad0
   140001ac9:	xor    eax,eax
   140001acb:	jmp    0x140001ca3
   140001ad0:	lea    rax,[rsp+0x50]
   140001ad5:	mov    ebx,0x1
   140001ada:	lea    r9,[rip+0x29d6f]        # 0x14002b850
   140001ae1:	lea    rcx,[rip+0x2bf28]        # 0x14002da10
   140001ae8:	xor    edx,edx
   140001aea:	mov    r8d,ebx
   140001aed:	mov    QWORD PTR [rsp+0x20],rax
   140001af2:	call   QWORD PTR [rip+0x25a48]        # 0x140027540
   140001af8:	test   eax,eax
   140001afa:	jns    0x140001b08
   140001afc:	lea    rdx,[rip+0x25ed5]        # 0x1400279d8
   140001b03:	jmp    0x140001a5b
   140001b08:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b0d:	lea    r8,[rsp+0x60]
   140001b12:	lea    rdx,[rip+0x2af97]        # 0x14002cab0
   140001b19:	mov    rax,QWORD PTR [rcx]
   140001b1c:	call   QWORD PTR [rax]
   140001b1e:	test   eax,eax
   140001b20:	jns    0x140001b2e
   140001b22:	lea    rdx,[rip+0x25e87]        # 0x1400279b0
   140001b29:	jmp    0x140001a5b
   140001b2e:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b33:	mov    rdx,QWORD PTR [rsp+0x88]
   140001b3b:	mov    rax,QWORD PTR [rcx]
   140001b3e:	call   QWORD PTR [rax+0xa0]
   140001b44:	test   eax,eax
   140001b46:	jns    0x140001b54
   140001b48:	lea    rdx,[rip+0x25e41]        # 0x140027990
   140001b4f:	jmp    0x140001a5b
   140001b54:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b59:	mov    rdx,QWORD PTR [rsp+0x90]
   140001b61:	mov    rax,QWORD PTR [rcx]
   140001b64:	call   QWORD PTR [rax+0x38]
   140001b67:	test   eax,eax
   140001b69:	jns    0x140001b77
   140001b6b:	lea    rdx,[rip+0x25df6]        # 0x140027968
   140001b72:	jmp    0x140001a5b
   140001b77:	mov    rdx,QWORD PTR [rsp+0x80]
   140001b7f:	test   rdx,rdx
   140001b82:	je     0x140001b9f
   140001b84:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b89:	mov    rax,QWORD PTR [rcx]
   140001b8c:	call   QWORD PTR [rax+0x58]
   140001b8f:	test   eax,eax
   140001b91:	jns    0x140001b9f
   140001b93:	lea    rdx,[rip+0x25dae]        # 0x140027948
   140001b9a:	jmp    0x140001a5b
   140001b9f:	mov    rdx,QWORD PTR [rsp+0x68]
   140001ba4:	test   rdx,rdx
   140001ba7:	je     0x140001bcc
   140001ba9:	mov    rcx,QWORD PTR [rsp+0x50]
   140001bae:	mov    r8d,DWORD PTR [rsp+0x58]
   140001bb3:	mov    rax,QWORD PTR [rcx]
   140001bb6:	call   QWORD PTR [rax+0x88]
   140001bbc:	test   eax,eax
   140001bbe:	jns    0x140001bcc
   140001bc0:	lea    rdx,[rip+0x25d61]        # 0x140027928
   140001bc7:	jmp    0x140001a5b
   140001bcc:	mov    rdx,QWORD PTR [rsp+0x78]
   140001bd1:	test   rdx,rdx
   140001bd4:	je     0x140001bf1
   140001bd6:	mov    rcx,QWORD PTR [rsp+0x50]
   140001bdb:	mov    rax,QWORD PTR [rcx]
   140001bde:	call   QWORD PTR [rax+0x48]
   140001be1:	test   eax,eax
   140001be3:	jns    0x140001bf1
   140001be5:	lea    rdx,[rip+0x25d14]        # 0x140027900
   140001bec:	jmp    0x140001a5b
   140001bf1:	mov    r8,QWORD PTR [rsp+0x70]
   140001bf6:	lea    rax,[rsp+0xa0]
   140001bfe:	or     r9d,0xffffffff
   140001c02:	xor    edx,edx
   140001c04:	xor    ecx,ecx
   140001c06:	mov    DWORD PTR [rsp+0x28],0x104
   140001c0e:	mov    QWORD PTR [rsp+0x20],rax
   140001c13:	call   QWORD PTR [rip+0x2561f]        # 0x140027238
   140001c19:	mov    rcx,QWORD PTR [rsp+0x60]
   140001c1e:	mov    rax,QWORD PTR [rcx]
   140001c21:	lea    rdx,[rsp+0xa0]
   140001c29:	mov    r8d,ebx
   140001c2c:	call   QWORD PTR [rax+0x30]
   140001c2f:	test   eax,eax
   140001c31:	jns    0x140001c7a
   140001c33:	mov    r8,QWORD PTR [rsp+0x70]
   140001c38:	mov    rcx,QWORD PTR [rip+0x360e9]        # 0x140037d28
   140001c3f:	lea    rdx,[rip+0x25c8a]        # 0x1400278d0
   140001c46:	mov    r9d,eax
   140001c49:	call   QWORD PTR [rip+0x34ee1]        # 0x140036b30
   140001c4f:	mov    rcx,QWORD PTR [rsp+0x60]
   140001c54:	test   rcx,rcx
   140001c57:	je     0x140001c5f
   140001c59:	mov    rax,QWORD PTR [rcx]
   140001c5c:	call   QWORD PTR [rax+0x10]
   140001c5f:	mov    rcx,QWORD PTR [rsp+0x50]
   140001c64:	test   rcx,rcx
   140001c67:	je     0x140001c6f
   140001c69:	mov    rax,QWORD PTR [rcx]
   140001c6c:	call   QWORD PTR [rax+0x10]
   140001c6f:	call   QWORD PTR [rip+0x258d3]        # 0x140027548
   140001c75:	jmp    0x140001ac9
   140001c7a:	mov    rcx,QWORD PTR [rsp+0x60]
   140001c7f:	mov    rax,QWORD PTR [rcx]
   140001c82:	call   QWORD PTR [rax+0x10]
   140001c85:	mov    rcx,QWORD PTR [rsp+0x50]
   140001c8a:	mov    rax,QWORD PTR [rcx]
   140001c8d:	call   QWORD PTR [rax+0x10]
   140001c90:	call   QWORD PTR [rip+0x258b2]        # 0x140027548
   140001c96:	lea    rcx,[rip+0x25b9b]        # 0x140027838
   140001c9d:	call   QWORD PTR [rip+0x35f4d]        # 0x140037bf0
   140001ca3:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140001cab:	xor    rcx,rsp
   140001cae:	call   0x140009080
   140001cb3:	add    rsp,0x2c0
   140001cba:	pop    rbx
   140001cbb:	ret    
   140001cbc:	mov    r11,rsp
   140001cbf:	sub    rsp,0x48
   140001cc3:	lea    rcx,[r11+0x18]
   140001cc7:	mov    rax,rdx
   140001cca:	lea    r9,[r11+0x20]
   140001cce:	mov    QWORD PTR [r11-0x28],rcx
   140001cd2:	lea    r8,[r11-0x18]
   140001cd6:	lea    rdx,[rip+0x25d57]        # 0x140027a34
   140001cdd:	mov    rcx,rax
   140001ce0:	call   QWORD PTR [rip+0x34e42]        # 0x140036b28
   140001ce6:	test   eax,eax
   140001ce8:	jne    0x140001cee
   140001cea:	xor    eax,eax
   140001cec:	jmp    0x140001d1b
   140001cee:	call   QWORD PTR [rip+0x2577c]        # 0x140027470
   140001cf4:	mov    r9d,DWORD PTR [rsp+0x60]
   140001cf9:	mov    r8,QWORD PTR [rsp+0x68]
   140001cfe:	mov    rdx,QWORD PTR [rsp+0x30]
   140001d03:	mov    rcx,rax
   140001d06:	call   QWORD PTR [rip+0x257c4]        # 0x1400274d0
   140001d0c:	lea    rcx,[rip+0x25d1d]        # 0x140027a30
   140001d13:	mov    edx,eax
   140001d15:	call   QWORD PTR [rip+0x35ed5]        # 0x140037bf0
   140001d1b:	add    rsp,0x48
   140001d1f:	ret    
   140001d20:	mov    rcx,QWORD PTR [rip+0x322d9]        # 0x140034000
   140001d27:	rex.W jmp QWORD PTR [rip+0x35e42]        # 0x140037b70
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rsp+0x10],rbx
   140001d35:	push   rdi
   140001d36:	sub    rsp,0x2b0
   140001d3d:	mov    rax,QWORD PTR [rip+0x3255c]        # 0x1400342a0
   140001d44:	xor    rax,rsp
   140001d47:	mov    QWORD PTR [rsp+0x2a0],rax
   140001d4f:	mov    rbx,rcx
   140001d52:	lea    r8,[rip+0x35ec7]        # 0x140037c20
   140001d59:	lea    rdx,[rip+0x25d08]        # 0x140027a68
   140001d60:	lea    rcx,[rsp+0x190]
   140001d68:	mov    DWORD PTR [rsp+0x20],0x104
   140001d70:	call   QWORD PTR [rip+0x256f2]        # 0x140027468
   140001d76:	lea    rcx,[rsp+0x190]
   140001d7e:	call   0x140009c98
   140001d83:	mov    rcx,rbx
   140001d86:	call   QWORD PTR [rip+0x254b4]        # 0x140027240
   140001d8c:	test   rax,rax
   140001d8f:	jne    0x140001e4a
   140001d95:	mov    r9d,DWORD PTR [rip+0x35dfc]        # 0x140037b98
   140001d9c:	mov    r8d,DWORD PTR [rip+0x35dc9]        # 0x140037b6c
   140001da3:	lea    rdx,[rip+0x25c8e]        # 0x140027a38
   140001daa:	lea    rcx,[rsp+0x30]
   140001daf:	call   QWORD PTR [rip+0x256b3]        # 0x140027468
   140001db5:	lea    r9,[rsp+0x20]
   140001dba:	lea    r8,[rsp+0x80]
   140001dc2:	lea    rdx,[rsp+0x30]
   140001dc7:	mov    rcx,0xffffffff80000001
   140001dce:	call   QWORD PTR [rip+0x2526c]        # 0x140027040
   140001dd4:	test   eax,eax
   140001dd6:	je     0x140001dff
   140001dd8:	lea    r9,[rsp+0x20]
   140001ddd:	lea    r8,[rsp+0x80]
   140001de5:	lea    rdx,[rsp+0x30]
   140001dea:	mov    rcx,0xffffffff80000002
   140001df1:	call   QWORD PTR [rip+0x25249]        # 0x140027040
   140001df7:	test   eax,eax
   140001df9:	je     0x140001dff
   140001dfb:	xor    eax,eax
   140001dfd:	jmp    0x140001e4a
   140001dff:	xor    eax,eax
   140001e01:	or     rdx,0xffffffffffffffff
   140001e05:	lea    rdi,[rsp+0x80]
   140001e0d:	mov    rcx,rdx
   140001e10:	repnz scas al,BYTE PTR es:[rdi]
   140001e12:	movzx  eax,WORD PTR [rip+0x2588f]        # 0x1400276a8
   140001e19:	mov    rcx,rdx
   140001e1c:	mov    WORD PTR [rdi-0x1],ax
   140001e20:	xor    eax,eax
   140001e22:	lea    rdi,[rsp+0x80]
   140001e2a:	repnz scas al,BYTE PTR es:[rdi]
   140001e2c:	xor    ecx,ecx
   140001e2e:	mov    al,BYTE PTR [rbx+rcx*1]
   140001e31:	inc    rcx
   140001e34:	mov    BYTE PTR [rdi+rcx*1-0x2],al
   140001e38:	test   al,al
   140001e3a:	jne    0x140001e2e
   140001e3c:	lea    rcx,[rsp+0x80]
   140001e44:	call   QWORD PTR [rip+0x253f6]        # 0x140027240
   140001e4a:	mov    rcx,QWORD PTR [rsp+0x2a0]
   140001e52:	xor    rcx,rsp
   140001e55:	call   0x140009080
   140001e5a:	mov    rbx,QWORD PTR [rsp+0x2c8]
   140001e62:	add    rsp,0x2b0
   140001e69:	pop    rdi
   140001e6a:	ret    
   140001e6b:	int3   
   140001e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140001e71:	push   rbp
   140001e72:	push   rsi
   140001e73:	push   rdi
   140001e74:	push   r12
   140001e76:	push   r13
   140001e78:	push   r14
   140001e7a:	push   r15
   140001e7c:	sub    rsp,0x20
   140001e80:	lea    rdx,[rip+0x25ca9]        # 0x140027b30
   140001e87:	mov    rbx,rcx
   140001e8a:	call   QWORD PTR [rip+0x253b8]        # 0x140027248
   140001e90:	lea    rdx,[rip+0x25c81]        # 0x140027b18
   140001e97:	mov    rcx,rbx
   140001e9a:	mov    rdi,rax
   140001e9d:	call   QWORD PTR [rip+0x253a5]        # 0x140027248
   140001ea3:	lea    rdx,[rip+0x25c56]        # 0x140027b00
   140001eaa:	mov    rcx,rbx
   140001ead:	mov    r14,rax
   140001eb0:	call   QWORD PTR [rip+0x25392]        # 0x140027248
   140001eb6:	lea    rdx,[rip+0x25c33]        # 0x140027af0
   140001ebd:	mov    rcx,rbx
   140001ec0:	mov    rsi,rax
   140001ec3:	call   QWORD PTR [rip+0x2537f]        # 0x140027248
   140001ec9:	lea    rdx,[rip+0x25c10]        # 0x140027ae0
   140001ed0:	mov    rcx,rbx
   140001ed3:	mov    r15,rax
   140001ed6:	call   QWORD PTR [rip+0x2536c]        # 0x140027248
   140001edc:	lea    rdx,[rip+0x25be5]        # 0x140027ac8
   140001ee3:	mov    rcx,rbx
   140001ee6:	mov    rbp,rax
   140001ee9:	mov    QWORD PTR [rsp+0x68],rax
   140001eee:	call   QWORD PTR [rip+0x25354]        # 0x140027248
   140001ef4:	lea    rdx,[rip+0x25bbd]        # 0x140027ab8
   140001efb:	mov    rcx,rbx
   140001efe:	mov    r12,rax
   140001f01:	call   QWORD PTR [rip+0x25341]        # 0x140027248
   140001f07:	lea    rdx,[rip+0x25b92]        # 0x140027aa0
   140001f0e:	mov    rcx,rbx
   140001f11:	mov    r13,rax
   140001f14:	call   QWORD PTR [rip+0x2532e]        # 0x140027248
   140001f1a:	xor    ebx,ebx
   140001f1c:	mov    QWORD PTR [rsp+0x70],rax
   140001f21:	cmp    rdi,rbx
   140001f24:	je     0x140001ff1
   140001f2a:	cmp    rsi,rbx
   140001f2d:	je     0x140001ff1
   140001f33:	cmp    r14,rbx
   140001f36:	je     0x140001ff1
   140001f3c:	cmp    r15,rbx
   140001f3f:	je     0x140001ff1
   140001f45:	cmp    rbp,rbx
   140001f48:	je     0x140001ff1
   140001f4e:	cmp    r12,rbx
   140001f51:	je     0x140001ff1
   140001f57:	cmp    r13,rbx
   140001f5a:	je     0x140001ff1
   140001f60:	lea    rcx,[rip+0x25b29]        # 0x140027a90
   140001f67:	call   rdi
   140001f69:	mov    rdi,rax
   140001f6c:	cmp    rax,rbx
   140001f6f:	je     0x140001fcc
   140001f71:	lea    rdx,[rip+0x25b08]        # 0x140027a80
   140001f78:	mov    rcx,rax
   140001f7b:	call   rsi
   140001f7d:	lea    rdx,[rip+0x25af4]        # 0x140027a78
   140001f84:	mov    rcx,rdi
   140001f87:	mov    QWORD PTR [rip+0x35c02],rax        # 0x140037b90
   140001f8e:	call   rsi
   140001f90:	lea    rbp,[rip+0x32209]        # 0x1400341a0
   140001f97:	mov    rsi,rbp
   140001f9a:	mov    QWORD PTR [rip+0x35d87],rax        # 0x140037d28
   140001fa1:	movsxd rcx,ebx
   140001fa4:	xor    edx,edx
   140001fa6:	shl    rcx,0x5
   140001faa:	add    rcx,rbp
   140001fad:	call   r15
   140001fb0:	mov    rdx,QWORD PTR [rsi]
   140001fb3:	mov    rcx,rdi
   140001fb6:	mov    r8,rax
   140001fb9:	call   r14
   140001fbc:	inc    ebx
   140001fbe:	add    rsi,0x20
   140001fc2:	cmp    ebx,0x6
   140001fc5:	jb     0x140001fa1
   140001fc7:	mov    rbp,QWORD PTR [rsp+0x68]
   140001fcc:	mov    rax,QWORD PTR [rsp+0x70]
   140001fd1:	mov    QWORD PTR [rip+0x35c18],rbp        # 0x140037bf0
   140001fd8:	mov    QWORD PTR [rip+0x34b49],r12        # 0x140036b28
   140001fdf:	mov    QWORD PTR [rip+0x35b8a],rax        # 0x140037b70
   140001fe6:	xor    eax,eax
   140001fe8:	mov    QWORD PTR [rip+0x34b41],r13        # 0x140036b30
   140001fef:	jmp    0x140001ff6
   140001ff1:	mov    eax,0x1
   140001ff6:	mov    rbx,QWORD PTR [rsp+0x60]
   140001ffb:	add    rsp,0x20
   140001fff:	pop    r15
   140002001:	pop    r14
   140002003:	pop    r13
   140002005:	pop    r12
   140002007:	pop    rdi
   140002008:	pop    rsi
   140002009:	pop    rbp
   14000200a:	ret    
   14000200b:	int3   
   14000200c:	rex push rbp
   14000200e:	push   r12
   140002010:	push   r13
   140002012:	push   r14
   140002014:	push   r15
   140002016:	sub    rsp,0x80
   14000201d:	lea    rbp,[rsp+0x20]
   140002022:	mov    QWORD PTR [rbp+0x90],rbx
   140002029:	mov    QWORD PTR [rbp+0x98],rsi
   140002030:	mov    QWORD PTR [rbp+0xa0],rdi
   140002037:	mov    rax,QWORD PTR [rip+0x32262]        # 0x1400342a0
   14000203e:	xor    rax,rbp
   140002041:	mov    QWORD PTR [rbp+0x50],rax
   140002045:	mov    rbx,rdx
   140002048:	lea    rdx,[rip+0x25b71]        # 0x140027bc0
   14000204f:	mov    QWORD PTR [rbp+0x18],r9
   140002053:	mov    DWORD PTR [rbp+0x0],r8d
   140002057:	mov    r14,rcx
   14000205a:	mov    QWORD PTR [rbp+0x8],rcx
   14000205e:	call   QWORD PTR [rip+0x251e4]        # 0x140027248
   140002064:	lea    rdx,[rip+0x25b45]        # 0x140027bb0
   14000206b:	mov    rcx,r14
   14000206e:	mov    QWORD PTR [rbp+0x10],rax
   140002072:	call   QWORD PTR [rip+0x251d0]        # 0x140027248
   140002078:	lea    rdx,[rip+0x25b19]        # 0x140027b98
   14000207f:	mov    rcx,r14
   140002082:	mov    rdi,rax
   140002085:	call   QWORD PTR [rip+0x251bd]        # 0x140027248
   14000208b:	lea    rdx,[rip+0x25af6]        # 0x140027b88
   140002092:	mov    rcx,r14
   140002095:	mov    r13,rax
   140002098:	call   QWORD PTR [rip+0x251aa]        # 0x140027248
   14000209e:	lea    rdx,[rip+0x25a3b]        # 0x140027ae0
   1400020a5:	mov    rcx,r14
   1400020a8:	mov    r12,rax
   1400020ab:	call   QWORD PTR [rip+0x25197]        # 0x140027248
   1400020b1:	lea    rdx,[rip+0x25a38]        # 0x140027af0
   1400020b8:	mov    rcx,r14
   1400020bb:	mov    rsi,rax
   1400020be:	call   QWORD PTR [rip+0x25184]        # 0x140027248
   1400020c4:	lea    rdx,[rip+0x259fd]        # 0x140027ac8
   1400020cb:	mov    rcx,r14
   1400020ce:	mov    r15,rax
   1400020d1:	call   QWORD PTR [rip+0x25171]        # 0x140027248
   1400020d7:	mov    rcx,QWORD PTR [rbp+0x8]
   1400020db:	lea    rdx,[rip+0x259d6]        # 0x140027ab8
   1400020e2:	mov    r14,rax
   1400020e5:	call   QWORD PTR [rip+0x2515d]        # 0x140027248
   1400020eb:	cmp    QWORD PTR [rbp+0x10],0x0
   1400020f0:	je     0x14000221f
   1400020f6:	test   rdi,rdi
   1400020f9:	je     0x14000221f
   1400020ff:	test   r13,r13
   140002102:	je     0x14000221f
   140002108:	test   r12,r12
   14000210b:	je     0x14000221f
   140002111:	test   rsi,rsi
   140002114:	je     0x14000221f
   14000211a:	test   r14,r14
   14000211d:	je     0x14000221f
   140002123:	test   rax,rax
   140002126:	je     0x14000221f
   14000212c:	test   r15,r15
   14000212f:	je     0x14000221f
   140002135:	test   rbx,rbx
   140002138:	je     0x140002218
   14000213e:	cmp    BYTE PTR [rbx],0x0
   140002141:	je     0x140002218
   140002147:	xor    edx,edx
   140002149:	mov    rcx,rbx
   14000214c:	call   0x140022450
   140002151:	mov    esi,eax
   140002153:	cmp    eax,0xffffffff
   140002156:	jne    0x140002178
   140002158:	call   0x14000a3b0
   14000215d:	lea    rdx,[rip+0x259fc]        # 0x140027b60
   140002164:	mov    r8,rbx
   140002167:	lea    rcx,[rax+0x60]
   14000216b:	call   0x14000a190
   140002170:	lea    eax,[rsi+0x4]
   140002173:	jmp    0x140002224
   140002178:	mov    rcx,QWORD PTR [rip+0x35a81]        # 0x140037c00
   14000217f:	lea    r8,[rip+0x259c2]        # 0x140027b48
   140002186:	mov    edx,0x3ec
   14000218b:	call   QWORD PTR [rip+0x2539f]        # 0x140027530
   140002191:	call   QWORD PTR [rbp+0x10]
   140002194:	mov    rcx,QWORD PTR [rbp+0x8]
   140002198:	call   0x140001e6c
   14000219d:	mov    rdx,QWORD PTR [rbp+0x18]
   1400021a1:	mov    ecx,DWORD PTR [rbp+0x0]
   1400021a4:	call   rdi
   1400021a6:	lea    rdx,[rbp+0x20]
   1400021aa:	mov    ecx,esi
   1400021ac:	mov    ebx,0x3
   1400021b1:	call   0x140009d50
   1400021b6:	test   eax,eax
   1400021b8:	jne    0x14000220a
   1400021ba:	mov    r8d,DWORD PTR [rbp+0x34]
   1400021be:	lea    eax,[r8+0x5]
   1400021c2:	movsxd rcx,eax
   1400021c5:	lea    rax,[rcx+0xf]
   1400021c9:	cmp    rax,rcx
   1400021cc:	ja     0x1400021d8
   1400021ce:	movabs rax,0xffffffffffffff0
   1400021d8:	and    rax,0xfffffffffffffff0
   1400021dc:	call   0x140025f10
   1400021e1:	sub    rsp,rax
   1400021e4:	mov    ecx,esi
   1400021e6:	lea    rdi,[rsp+0x20]
   1400021eb:	mov    rdx,rdi
   1400021ee:	call   0x1400231d4
   1400021f3:	test   eax,eax
   1400021f5:	jle    0x14000220a
   1400021f7:	cdqe   
   1400021f9:	mov    rcx,rdi
   1400021fc:	mov    BYTE PTR [rax+rdi*1],0xa
   140002200:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
   140002205:	call   r13
   140002208:	mov    ebx,eax
   14000220a:	call   r12
   14000220d:	mov    ecx,esi
   14000220f:	call   0x140017ba4
   140002214:	mov    eax,ebx
   140002216:	jmp    0x140002224
   140002218:	mov    eax,0x2
   14000221d:	jmp    0x140002224
   14000221f:	mov    eax,0x1
   140002224:	mov    rcx,QWORD PTR [rbp+0x50]
   140002228:	xor    rcx,rbp
   14000222b:	call   0x140009080
   140002230:	mov    rbx,QWORD PTR [rbp+0x90]
   140002237:	mov    rsi,QWORD PTR [rbp+0x98]
   14000223e:	mov    rdi,QWORD PTR [rbp+0xa0]
   140002245:	lea    rsp,[rbp+0x60]
   140002249:	pop    r15
   14000224b:	pop    r14
   14000224d:	pop    r13
   14000224f:	pop    r12
   140002251:	pop    rbp
   140002252:	ret    
   140002253:	int3   
   140002254:	mov    QWORD PTR [rsp+0x8],rbx
   140002259:	mov    QWORD PTR [rsp+0x10],rbp
   14000225e:	mov    QWORD PTR [rsp+0x18],rsi
   140002263:	push   rdi
   140002264:	push   r12
   140002266:	push   r13
   140002268:	push   r14
   14000226a:	push   r15
   14000226c:	sub    rsp,0x50
   140002270:	and    QWORD PTR [r9],0x0
   140002274:	mov    r14d,edx
   140002277:	mov    r15,rcx
   14000227a:	xor    edx,edx
   14000227c:	xor    ecx,ecx
   14000227e:	mov    rsi,r9
   140002281:	mov    r13,r8
   140002284:	mov    ebp,0x1
   140002289:	call   0x1400259e4
   14000228e:	and    QWORD PTR [rsp+0x30],0x0
   140002294:	xor    r9d,r9d
   140002297:	mov    r8d,ebp
   14000229a:	mov    rcx,rax
   14000229d:	mov    edx,0xc0000000
   1400022a2:	mov    DWORD PTR [rsp+0x28],0x80000080
   1400022aa:	mov    r12,rax
   1400022ad:	mov    DWORD PTR [rsp+0x20],0x2
   1400022b5:	call   QWORD PTR [rip+0x24fad]        # 0x140027268
   1400022bb:	mov    edi,0xfffffff5
   1400022c0:	mov    rbx,rax
   1400022c3:	mov    ecx,edi
   1400022c5:	call   QWORD PTR [rip+0x24df5]        # 0x1400270c0
   1400022cb:	mov    ecx,0xfffffff4
   1400022d0:	mov    QWORD PTR [rsp+0x98],rax
   1400022d8:	call   QWORD PTR [rip+0x24de2]        # 0x1400270c0
   1400022de:	mov    rdx,rbx
   1400022e1:	mov    ecx,edi
   1400022e3:	mov    QWORD PTR [rsp+0x40],rax
   1400022e8:	call   QWORD PTR [rip+0x24dca]        # 0x1400270b8
   1400022ee:	mov    rdx,rbx
   1400022f1:	mov    ecx,0xfffffff4
   1400022f6:	call   QWORD PTR [rip+0x24dbc]        # 0x1400270b8
   1400022fc:	lea    rcx,[rip+0x3471d]        # 0x140036a20
   140002303:	call   0x140001d30
   140002308:	mov    rdi,rax
   14000230b:	test   rax,rax
   14000230e:	je     0x14000232e
   140002310:	mov    r9,r13
   140002313:	mov    r8d,r14d
   140002316:	mov    rdx,r15
   140002319:	mov    rcx,rax
   14000231c:	call   0x14000200c
   140002321:	mov    rcx,rdi
   140002324:	mov    ebp,eax
   140002326:	call   QWORD PTR [rip+0x24d84]        # 0x1400270b0
   14000232c:	jmp    0x140002343
   14000232e:	call   0x14000a3b0
   140002333:	lea    rdx,[rip+0x25896]        # 0x140027bd0
   14000233a:	lea    rcx,[rax+0x60]
   14000233e:	call   0x14000a190
   140002343:	mov    rdx,QWORD PTR [rsp+0x98]
   14000234b:	mov    ecx,0xfffffff5
   140002350:	call   QWORD PTR [rip+0x24d62]        # 0x1400270b8
   140002356:	mov    rdx,QWORD PTR [rsp+0x40]
   14000235b:	mov    ecx,0xfffffff4
   140002360:	call   QWORD PTR [rip+0x24d52]        # 0x1400270b8
   140002366:	xor    edx,edx
   140002368:	mov    rcx,rbx
   14000236b:	call   QWORD PTR [rip+0x24def]        # 0x140027160
   140002371:	mov    edi,0x1000
   140002376:	cmp    eax,edi
   140002378:	jae    0x140002387
   14000237a:	xor    edx,edx
   14000237c:	mov    rcx,rbx
   14000237f:	call   QWORD PTR [rip+0x24ddb]        # 0x140027160
   140002385:	mov    edi,eax
   140002387:	lea    eax,[rdi+0x1]
   14000238a:	movsxd rcx,eax
   14000238d:	call   0x14000993c
   140002392:	xor    r13d,r13d
   140002395:	mov    QWORD PTR [rsi],rax
   140002398:	cmp    rax,r13
   14000239b:	je     0x1400023e1
   14000239d:	xor    r9d,r9d
   1400023a0:	xor    r8d,r8d
   1400023a3:	xor    edx,edx
   1400023a5:	mov    rcx,rbx
   1400023a8:	mov    DWORD PTR [rsp+0x98],r13d
   1400023b0:	call   QWORD PTR [rip+0x24e6a]        # 0x140027220
   1400023b6:	mov    rdx,QWORD PTR [rsi]
   1400023b9:	lea    r9,[rsp+0x98]
   1400023c1:	mov    r8d,edi
   1400023c4:	mov    rcx,rbx
   1400023c7:	mov    QWORD PTR [rsp+0x20],r13
   1400023cc:	call   QWORD PTR [rip+0x24e56]        # 0x140027228
   1400023d2:	mov    r11d,DWORD PTR [rsp+0x98]
   1400023da:	mov    rax,QWORD PTR [rsi]
   1400023dd:	mov    BYTE PTR [r11+rax*1],r13b
   1400023e1:	mov    rcx,rbx
   1400023e4:	call   QWORD PTR [rip+0x24e9e]        # 0x140027288
   1400023ea:	mov    rcx,r12
   1400023ed:	call   QWORD PTR [rip+0x24e3d]        # 0x140027230
   1400023f3:	lea    r11,[rsp+0x50]
   1400023f8:	mov    eax,ebp
   1400023fa:	mov    rbx,QWORD PTR [r11+0x30]
   1400023fe:	mov    rbp,QWORD PTR [r11+0x38]
   140002402:	mov    rsi,QWORD PTR [r11+0x40]
   140002406:	mov    rsp,r11
   140002409:	pop    r15
   14000240b:	pop    r14
   14000240d:	pop    r13
   14000240f:	pop    r12
   140002411:	pop    rdi
   140002412:	ret    
   140002413:	int3   
   140002414:	mov    rax,rsp
   140002417:	mov    QWORD PTR [rax+0x8],rbx
   14000241b:	mov    QWORD PTR [rax+0x10],rbp
   14000241f:	mov    QWORD PTR [rax+0x18],rsi
   140002423:	mov    QWORD PTR [rax+0x20],rdi
   140002427:	push   r12
   140002429:	push   r13
   14000242b:	push   r14
   14000242d:	sub    rsp,0x20
   140002431:	mov    r14,rdx
   140002434:	lea    rdx,[rip+0x25785]        # 0x140027bc0
   14000243b:	mov    r12,rcx
   14000243e:	call   QWORD PTR [rip+0x24e04]        # 0x140027248
   140002444:	lea    rdx,[rip+0x257b5]        # 0x140027c00
   14000244b:	mov    rcx,r12
   14000244e:	mov    r13,rax
   140002451:	call   QWORD PTR [rip+0x24df1]        # 0x140027248
   140002457:	lea    rdx,[rip+0x2572a]        # 0x140027b88
   14000245e:	mov    rcx,r12
   140002461:	mov    rbx,rax
   140002464:	call   QWORD PTR [rip+0x24dde]        # 0x140027248
   14000246a:	lea    rdx,[rip+0x25727]        # 0x140027b98
   140002471:	mov    rcx,r12
   140002474:	mov    rdi,rax
   140002477:	call   QWORD PTR [rip+0x24dcb]        # 0x140027248
   14000247d:	lea    rdx,[rip+0x2576c]        # 0x140027bf0
   140002484:	mov    rcx,r12
   140002487:	mov    rbp,rax
   14000248a:	call   QWORD PTR [rip+0x24db8]        # 0x140027248
   140002490:	mov    rsi,rax
   140002493:	test   r13,r13
   140002496:	je     0x1400024d3
   140002498:	test   rbx,rbx
   14000249b:	je     0x1400024d3
   14000249d:	test   rdi,rdi
   1400024a0:	je     0x1400024d3
   1400024a2:	test   rbp,rbp
   1400024a5:	je     0x1400024d3
   1400024a7:	test   rax,rax
   1400024aa:	je     0x1400024d3
   1400024ac:	lea    rcx,[rip+0x3444d]        # 0x140036900
   1400024b3:	call   rbx
   1400024b5:	call   r13
   1400024b8:	mov    rcx,r12
   1400024bb:	call   0x140001e6c
   1400024c0:	mov    rcx,r14
   1400024c3:	call   rbp
   1400024c5:	mov    ebx,eax
   1400024c7:	test   eax,eax
   1400024c9:	je     0x1400024cd
   1400024cb:	call   rsi
   1400024cd:	call   rdi
   1400024cf:	mov    eax,ebx
   1400024d1:	jmp    0x1400024d6
   1400024d3:	or     eax,0xffffffff
   1400024d6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400024db:	mov    rbp,QWORD PTR [rsp+0x48]
   1400024e0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400024e5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400024ea:	add    rsp,0x20
   1400024ee:	pop    r14
   1400024f0:	pop    r13
   1400024f2:	pop    r12
   1400024f4:	ret    
   1400024f5:	int3   
   1400024f6:	int3   
   1400024f7:	int3   
   1400024f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400024fd:	mov    QWORD PTR [rsp+0x18],rbp
   140002502:	push   rsi
   140002503:	push   rdi
   140002504:	push   r12
   140002506:	push   r13
   140002508:	push   r14
   14000250a:	sub    rsp,0xe0
   140002511:	mov    rax,QWORD PTR [rip+0x31d88]        # 0x1400342a0
   140002518:	xor    rax,rsp
   14000251b:	mov    QWORD PTR [rsp+0xd0],rax
   140002523:	mov    rbx,rcx
   140002526:	xor    edx,edx
   140002528:	xor    ecx,ecx
   14000252a:	call   0x1400259e4
   14000252f:	and    QWORD PTR [rsp+0x30],0x0
   140002535:	xor    r9d,r9d
   140002538:	lea    r8d,[r9+0x1]
   14000253c:	mov    edx,0xc0000000
   140002541:	mov    rcx,rax
   140002544:	mov    DWORD PTR [rsp+0x28],0x80000080
   14000254c:	mov    r14,rax
   14000254f:	mov    DWORD PTR [rsp+0x20],0x2
   140002557:	call   QWORD PTR [rip+0x24d0b]        # 0x140027268
   14000255d:	mov    edi,0xfffffff5
   140002562:	mov    ecx,edi
   140002564:	mov    rsi,rax
   140002567:	call   QWORD PTR [rip+0x24b53]        # 0x1400270c0
   14000256d:	mov    r12d,0xfffffff4
   140002573:	mov    ecx,r12d
   140002576:	mov    rbp,rax
   140002579:	call   QWORD PTR [rip+0x24b41]        # 0x1400270c0
   14000257f:	mov    rdx,rsi
   140002582:	mov    ecx,edi
   140002584:	mov    r13,rax
   140002587:	call   QWORD PTR [rip+0x24b2b]        # 0x1400270b8
   14000258d:	mov    rdx,rsi
   140002590:	mov    ecx,r12d
   140002593:	call   QWORD PTR [rip+0x24b1f]        # 0x1400270b8
   140002599:	lea    rcx,[rip+0x34480]        # 0x140036a20
   1400025a0:	call   0x140001d30
   1400025a5:	mov    rdi,rax
   1400025a8:	test   rax,rax
   1400025ab:	jne    0x1400025da
   1400025ad:	call   QWORD PTR [rip+0x24cbd]        # 0x140027270
   1400025b3:	lea    rdx,[rip+0x2569e]        # 0x140027c58
   1400025ba:	lea    rcx,[rsp+0x50]
   1400025bf:	mov    r8d,eax
   1400025c2:	call   QWORD PTR [rip+0x24ea0]        # 0x140027468
   1400025c8:	lea    rcx,[rsp+0x50]
   1400025cd:	call   0x140001834
   1400025d2:	or     eax,0xffffffff
   1400025d5:	jmp    0x1400026df
   1400025da:	mov    rdx,rbx
   1400025dd:	mov    rcx,rax
   1400025e0:	call   0x140002414
   1400025e5:	mov    rcx,rdi
   1400025e8:	mov    r12d,eax
   1400025eb:	call   QWORD PTR [rip+0x24abf]        # 0x1400270b0
   1400025f1:	mov    rdx,rbp
   1400025f4:	mov    ecx,0xfffffff5
   1400025f9:	call   QWORD PTR [rip+0x24ab9]        # 0x1400270b8
   1400025ff:	mov    rdx,r13
   140002602:	mov    ecx,0xfffffff4
   140002607:	call   QWORD PTR [rip+0x24aab]        # 0x1400270b8
   14000260d:	test   r12d,r12d
   140002610:	je     0x1400026ca
   140002616:	or     rcx,0xffffffffffffffff
   14000261a:	xor    eax,eax
   14000261c:	lea    rbx,[rip+0x25605]        # 0x140027c28
   140002623:	mov    rdi,rbx
   140002626:	xor    edx,edx
   140002628:	repnz scas al,BYTE PTR es:[rdi]
   14000262a:	not    rcx
   14000262d:	lea    r13,[rcx-0x1]
   140002631:	mov    rcx,rsi
   140002634:	call   QWORD PTR [rip+0x24b26]        # 0x140027160
   14000263a:	mov    ebp,eax
   14000263c:	mov    eax,0x1000
   140002641:	cmp    ebp,0xffffffff
   140002644:	cmove  ebp,eax
   140002647:	lea    eax,[rbp+r13*1+0x1]
   14000264c:	movsxd rcx,eax
   14000264f:	call   0x14000993c
   140002654:	mov    rdi,rax
   140002657:	test   rax,rax
   14000265a:	je     0x1400026be
   14000265c:	and    DWORD PTR [rsp+0x40],0x0
   140002661:	mov    rdx,rax
   140002664:	sub    rdx,rbx
   140002667:	mov    cl,BYTE PTR [rbx]
   140002669:	mov    BYTE PTR [rdx+rbx*1],cl
   14000266c:	inc    rbx
   14000266f:	test   cl,cl
   140002671:	jne    0x140002667
   140002673:	xor    r9d,r9d
   140002676:	xor    r8d,r8d
   140002679:	xor    edx,edx
   14000267b:	mov    rcx,rsi
   14000267e:	call   QWORD PTR [rip+0x24b9c]        # 0x140027220
   140002684:	and    QWORD PTR [rsp+0x20],0x0
   14000268a:	movsxd rdx,r13d
   14000268d:	lea    r9,[rsp+0x40]
   140002692:	add    rdx,rdi
   140002695:	mov    r8d,ebp
   140002698:	mov    rcx,rsi
   14000269b:	call   QWORD PTR [rip+0x24b87]        # 0x140027228
   1400026a1:	mov    eax,DWORD PTR [rsp+0x40]
   1400026a5:	mov    rcx,rdi
   1400026a8:	add    eax,r13d
   1400026ab:	mov    BYTE PTR [rax+rdi*1],0x0
   1400026af:	call   0x140001834
   1400026b4:	mov    rcx,rdi
   1400026b7:	call   0x1400098ac
   1400026bc:	jmp    0x1400026ca
   1400026be:	lea    rcx,[rip+0x25553]        # 0x140027c18
   1400026c5:	call   0x140001834
   1400026ca:	mov    rcx,rsi
   1400026cd:	call   QWORD PTR [rip+0x24bb5]        # 0x140027288
   1400026d3:	mov    rcx,r14
   1400026d6:	call   QWORD PTR [rip+0x24b54]        # 0x140027230
   1400026dc:	mov    eax,r12d
   1400026df:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400026e7:	xor    rcx,rsp
   1400026ea:	call   0x140009080
   1400026ef:	lea    r11,[rsp+0xe0]
   1400026f7:	mov    rbx,QWORD PTR [r11+0x38]
   1400026fb:	mov    rbp,QWORD PTR [r11+0x40]
   1400026ff:	mov    rsp,r11
   140002702:	pop    r14
   140002704:	pop    r13
   140002706:	pop    r12
   140002708:	pop    rdi
   140002709:	pop    rsi
   14000270a:	ret    
   14000270b:	int3   
   14000270c:	mov    QWORD PTR [rsp+0x18],rbx
   140002711:	push   rdi
   140002712:	sub    rsp,0x460
   140002719:	mov    rax,QWORD PTR [rip+0x31b80]        # 0x1400342a0
   140002720:	xor    rax,rsp
   140002723:	mov    QWORD PTR [rsp+0x450],rax
   14000272b:	xor    eax,eax
   14000272d:	mov    rdi,rdx
   140002730:	mov    ebx,0x400
   140002735:	cmp    ecx,eax
   140002737:	je     0x14000277e
   140002739:	mov    QWORD PTR [rsp+0x30],rax
   14000273e:	mov    DWORD PTR [rsp+0x28],eax
   140002742:	lea    rax,[rsp+0x40]
   140002747:	mov    r8d,ecx
   14000274a:	mov    r9d,ebx
   14000274d:	xor    edx,edx
   14000274f:	mov    ecx,0x1100
   140002754:	mov    QWORD PTR [rsp+0x20],rax
   140002759:	call   QWORD PTR [rip+0x24971]        # 0x1400270d0
   14000275f:	mov    rdx,QWORD PTR [rsp+0x40]
   140002764:	lea    rcx,[rsp+0x50]
   140002769:	mov    r8,rbx
   14000276c:	call   0x14000a6c0
   140002771:	mov    rcx,QWORD PTR [rsp+0x40]
   140002776:	call   QWORD PTR [rip+0x2494c]        # 0x1400270c8
   14000277c:	jmp    0x140002782
   14000277e:	mov    BYTE PTR [rsp+0x50],al
   140002782:	lea    rcx,[rsp+0x50]
   140002787:	call   QWORD PTR [rip+0x24ac3]        # 0x140027250
   14000278d:	mov    r8,rdi
   140002790:	movsxd rcx,eax
   140002793:	sub    rbx,rcx
   140002796:	lea    rcx,[rsp+rcx*1+0x50]
   14000279b:	mov    rdx,rbx
   14000279e:	call   0x14000a5e0
   1400027a3:	mov    rcx,QWORD PTR [rip+0x353b6]        # 0x140037b60
   1400027aa:	lea    r8,[rip+0x254d7]        # 0x140027c88
   1400027b1:	lea    rdx,[rsp+0x50]
   1400027b6:	mov    r9d,0x10
   1400027bc:	call   QWORD PTR [rip+0x24d0e]        # 0x1400274d0
   1400027c2:	xor    eax,eax
   1400027c4:	mov    rcx,QWORD PTR [rsp+0x450]
   1400027cc:	xor    rcx,rsp
   1400027cf:	call   0x140009080
   1400027d4:	mov    rbx,QWORD PTR [rsp+0x480]
   1400027dc:	add    rsp,0x460
   1400027e3:	pop    rdi
   1400027e4:	ret    
   1400027e5:	int3   
   1400027e6:	int3   
   1400027e7:	int3   
   1400027e8:	mov    r11,rsp
   1400027eb:	mov    QWORD PTR [r11+0x10],rdx
   1400027ef:	mov    QWORD PTR [r11+0x18],r8
   1400027f3:	mov    QWORD PTR [r11+0x20],r9
   1400027f7:	push   rsi
   1400027f8:	push   rdi
   1400027f9:	sub    rsp,0x438
   140002800:	mov    rax,QWORD PTR [rip+0x31a99]        # 0x1400342a0
   140002807:	xor    rax,rsp
   14000280a:	mov    QWORD PTR [rsp+0x420],rax
   140002812:	lea    rsi,[r11+0x18]
   140002816:	mov    edi,ecx
   140002818:	mov    r8,rdx
   14000281b:	lea    rcx,[rsp+0x20]
   140002820:	mov    edx,0x400
   140002825:	mov    r9,rsi
   140002828:	call   0x14000a900
   14000282d:	sub    edi,0x1
   140002830:	je     0x14000294f
   140002836:	sub    edi,0x2
   140002839:	je     0x1400028f6
   14000283f:	sub    edi,0x1
   140002842:	je     0x1400028d3
   140002848:	sub    edi,0x1
   14000284b:	je     0x1400028bc
   14000284d:	sub    edi,0x1
   140002850:	je     0x140002877
   140002852:	cmp    edi,0x1
   140002855:	jne    0x14000296f
   14000285b:	mov    rcx,QWORD PTR [rip+0x354ce]        # 0x140037d30
   140002862:	test   rcx,rcx
   140002865:	je     0x140002916
   14000286b:	lea    rdx,[rip+0x2545e]        # 0x140027cd0
   140002872:	jmp    0x140002909
   140002877:	mov    eax,DWORD PTR [rsi]
   140002879:	mov    rcx,QWORD PTR [rip+0x35380]        # 0x140037c00
   140002880:	movsxd rdi,DWORD PTR [rsi+0x8]
   140002884:	movzx  r9d,ax
   140002888:	xor    r8d,r8d
   14000288b:	mov    edx,0x401
   140002890:	shl    r9d,0x10
   140002894:	call   QWORD PTR [rip+0x24c8e]        # 0x140027528
   14000289a:	mov    r9,QWORD PTR [rsp+0x458]
   1400028a2:	mov    rcx,QWORD PTR [rip+0x35357]        # 0x140037c00
   1400028a9:	mov    r8,rdi
   1400028ac:	mov    edx,0x402
   1400028b1:	call   QWORD PTR [rip+0x24c71]        # 0x140027528
   1400028b7:	jmp    0x14000296f
   1400028bc:	call   QWORD PTR [rip+0x249ae]        # 0x140027270
   1400028c2:	lea    rdx,[rsp+0x20]
   1400028c7:	mov    ecx,eax
   1400028c9:	call   0x14000270c
   1400028ce:	jmp    0x14000296f
   1400028d3:	call   QWORD PTR [rip+0x24b97]        # 0x140027470
   1400028d9:	lea    r8,[rip+0x253e4]        # 0x140027cc4
   1400028e0:	lea    rdx,[rsp+0x20]
   1400028e5:	mov    rcx,rax
   1400028e8:	mov    r9d,0x30
   1400028ee:	call   QWORD PTR [rip+0x24bdc]        # 0x1400274d0
   1400028f4:	jmp    0x14000296f
   1400028f6:	mov    rcx,QWORD PTR [rip+0x35433]        # 0x140037d30
   1400028fd:	test   rcx,rcx
   140002900:	je     0x140002916
   140002902:	lea    rdx,[rip+0x253a7]        # 0x140027cb0
   140002909:	mov    r8,QWORD PTR [rsp+0x458]
   140002911:	call   0x14000a190
   140002916:	mov    rcx,QWORD PTR [rsp+0x458]
   14000291e:	mov    edx,0x2e
   140002923:	call   0x14000a824
   140002928:	test   rax,rax
   14000292b:	je     0x14000296f
   14000292d:	lea    rdi,[rip+0x25378]        # 0x140027cac
   140002934:	mov    rsi,rax
   140002937:	mov    ecx,0x4
   14000293c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000293e:	jne    0x14000296f
   140002940:	mov    rcx,QWORD PTR [rsp+0x458]
   140002948:	call   0x140001880
   14000294d:	jmp    0x14000296f
   14000294f:	mov    rcx,QWORD PTR [rip+0x353da]        # 0x140037d30
   140002956:	test   rcx,rcx
   140002959:	je     0x14000296f
   14000295b:	mov    r8,QWORD PTR [rsp+0x458]
   140002963:	lea    rdx,[rip+0x2532e]        # 0x140027c98
   14000296a:	call   0x14000a190
   14000296f:	mov    eax,0x1
   140002974:	mov    rcx,QWORD PTR [rsp+0x420]
   14000297c:	xor    rcx,rsp
   14000297f:	call   0x140009080
   140002984:	add    rsp,0x438
   14000298b:	pop    rdi
   14000298c:	pop    rsi
   14000298d:	ret    
   14000298e:	int3   
   14000298f:	int3   
   140002990:	mov    rax,rsp
   140002993:	mov    QWORD PTR [rax+0x8],rbx
   140002997:	mov    QWORD PTR [rax+0x10],rbp
   14000299b:	mov    QWORD PTR [rax+0x20],rsi
   14000299f:	push   rdi
   1400029a0:	sub    rsp,0x40
   1400029a4:	and    QWORD PTR [rax-0x18],0x0
   1400029a9:	xor    r9d,r9d
   1400029ac:	mov    rsi,rdx
   1400029af:	mov    DWORD PTR [rax-0x20],0x80
   1400029b6:	lea    r8d,[r9+0x1]
   1400029ba:	mov    edx,0x80000000
   1400029bf:	mov    DWORD PTR [rax-0x28],0x3
   1400029c6:	call   QWORD PTR [rip+0x2489c]        # 0x140027268
   1400029cc:	mov    rbx,rax
   1400029cf:	cmp    rax,0xffffffffffffffff
   1400029d3:	jne    0x1400029d9
   1400029d5:	xor    eax,eax
   1400029d7:	jmp    0x140002a42
   1400029d9:	lea    rdx,[rsp+0x60]
   1400029de:	mov    rcx,rax
   1400029e1:	call   QWORD PTR [rip+0x24779]        # 0x140027160
   1400029e7:	and    QWORD PTR [rsp+0x28],0x0
   1400029ed:	and    DWORD PTR [rsp+0x20],0x0
   1400029f2:	xor    r9d,r9d
   1400029f5:	xor    edx,edx
   1400029f7:	mov    rcx,rbx
   1400029fa:	lea    r8d,[r9+0x2]
   1400029fe:	mov    ebp,eax
   140002a00:	call   QWORD PTR [rip+0x2488a]        # 0x140027290
   140002a06:	mov    rcx,rbx
   140002a09:	mov    rdi,rax
   140002a0c:	call   QWORD PTR [rip+0x24876]        # 0x140027288
   140002a12:	cmp    rdi,0xffffffffffffffff
   140002a16:	je     0x1400029d5
   140002a18:	and    QWORD PTR [rsp+0x20],0x0
   140002a1e:	xor    r9d,r9d
   140002a21:	xor    r8d,r8d
   140002a24:	lea    edx,[r9+0x4]
   140002a28:	mov    rcx,rdi
   140002a2b:	call   QWORD PTR [rip+0x24867]        # 0x140027298
   140002a31:	mov    rcx,rdi
   140002a34:	mov    rbx,rax
   140002a37:	call   QWORD PTR [rip+0x2484b]        # 0x140027288
   140002a3d:	mov    DWORD PTR [rsi],ebp
   140002a3f:	mov    rax,rbx
   140002a42:	mov    rbx,QWORD PTR [rsp+0x50]
   140002a47:	mov    rbp,QWORD PTR [rsp+0x58]
   140002a4c:	mov    rsi,QWORD PTR [rsp+0x68]
   140002a51:	add    rsp,0x40
   140002a55:	pop    rdi
   140002a56:	ret    
   140002a57:	int3   
   140002a58:	mov    QWORD PTR [rsp+0x8],rbx
   140002a5d:	push   rdi
   140002a5e:	sub    rsp,0x30
   140002a62:	cmp    QWORD PTR [rip+0x340ee],0x0        # 0x140036b58
   140002a6a:	mov    rdi,rcx
   140002a6d:	je     0x140002ac0
   140002a6f:	cmp    QWORD PTR [rip+0x352c9],0x0        # 0x140037d40
   140002a77:	jne    0x140002ac0
   140002a79:	call   QWORD PTR [rip+0x24a99]        # 0x140027518
   140002a7f:	mov    r8,QWORD PTR [rip+0x340d2]        # 0x140036b58
   140002a86:	and    DWORD PTR [rsp+0x28],0x0
   140002a8b:	mov    r9d,DWORD PTR [r8+0xa]
   140002a8f:	lea    rdx,[r8+0xe]
   140002a93:	mov    rcx,rax
   140002a96:	add    r9,r8
   140002a99:	mov    r8d,0x4
   140002a9f:	mov    rbx,rax
   140002aa2:	mov    QWORD PTR [rsp+0x20],rdx
   140002aa7:	call   QWORD PTR [rip+0x245eb]        # 0x140027098
   140002aad:	mov    rdx,rbx
   140002ab0:	mov    rcx,rdi
   140002ab3:	mov    QWORD PTR [rip+0x35286],rax        # 0x140037d40
   140002aba:	call   QWORD PTR [rip+0x24a60]        # 0x140027520
   140002ac0:	mov    rbx,QWORD PTR [rsp+0x40]
   140002ac5:	add    rsp,0x30
   140002ac9:	pop    rdi
   140002aca:	ret    
   140002acb:	int3   
   140002acc:	rex push rbx
   140002ace:	push   rbp
   140002acf:	push   rsi
   140002ad0:	push   rdi
   140002ad1:	push   r12
   140002ad3:	push   r13
   140002ad5:	push   r14
   140002ad7:	sub    rsp,0x160
   140002ade:	mov    rax,QWORD PTR [rip+0x317bb]        # 0x1400342a0
   140002ae5:	xor    rax,rsp
   140002ae8:	mov    QWORD PTR [rsp+0x150],rax
   140002af0:	mov    r13,QWORD PTR [rsp+0x1c0]
   140002af8:	mov    eax,edx
   140002afa:	xor    r14d,r14d
   140002afd:	sub    edx,DWORD PTR [rax+rcx*1-0x6]
   140002b01:	mov    r12,r9
   140002b04:	sub    edx,DWORD PTR [rax+rcx*1-0xa]
   140002b08:	mov    QWORD PTR [r13+0x0],r14
   140002b0c:	mov    QWORD PTR [r9],r14
   140002b0f:	sub    edx,0x22
   140002b12:	movsxd rbx,edx
   140002b15:	add    rbx,rcx
   140002b18:	cmp    DWORD PTR [rax+rcx*1-0x16],0x6054b50
   140002b20:	jne    0x140002c41
   140002b26:	cmp    DWORD PTR [rbx],0x1234567b
   140002b2c:	je     0x140002b41
   140002b2e:	lea    rdx,[rip+0x251db]        # 0x140027d10
   140002b35:	xor    ecx,ecx
   140002b37:	call   0x14000270c
   140002b3c:	jmp    0x140002c43
   140002b41:	cmp    edx,r14d
   140002b44:	jl     0x140002c41
   140002b4a:	cmp    DWORD PTR [rbx+0x8],r14d
   140002b4e:	je     0x140002b68
   140002b50:	movsxd rax,DWORD PTR [rbx+0x4]
   140002b54:	mov    rcx,rbx
   140002b57:	sub    rcx,rax
   140002b5a:	movsxd rax,DWORD PTR [rbx+0x8]
   140002b5e:	sub    rcx,rax
   140002b61:	mov    QWORD PTR [rip+0x33ff0],rcx        # 0x140036b58
   140002b68:	sub    edx,DWORD PTR [rbx+0x8]
   140002b6b:	lea    rdi,[rbx+0x4]
   140002b6f:	mov    ebp,0x104
   140002b74:	sub    edx,DWORD PTR [rdi]
   140002b76:	mov    rcx,rbp
   140002b79:	mov    DWORD PTR [r8],edx
   140002b7c:	movsxd rax,DWORD PTR [rdi]
   140002b7f:	sub    rbx,rax
   140002b82:	call   0x14000993c
   140002b87:	mov    rsi,rax
   140002b8a:	cmp    rax,r14
   140002b8d:	je     0x140002c41
   140002b93:	lea    rdx,[rsp+0x40]
   140002b98:	mov    ecx,ebp
   140002b9a:	call   QWORD PTR [rip+0x24540]        # 0x1400270e0
   140002ba0:	cmp    eax,r14d
   140002ba3:	je     0x140002c2d
   140002ba9:	lea    rdx,[rip+0x25158]        # 0x140027d08
   140002bb0:	lea    rcx,[rsp+0x40]
   140002bb5:	mov    r9,rsi
   140002bb8:	xor    r8d,r8d
   140002bbb:	call   QWORD PTR [rip+0x24517]        # 0x1400270d8
   140002bc1:	cmp    eax,r14d
   140002bc4:	je     0x140002c2d
   140002bc6:	mov    r9d,DWORD PTR [rdi]
   140002bc9:	xor    r8d,r8d
   140002bcc:	mov    QWORD PTR [rsp+0x30],r14
   140002bd1:	lea    ecx,[r8+0x2]
   140002bd5:	mov    rdx,rsi
   140002bd8:	mov    WORD PTR [rsp+0x28],r14w
   140002bde:	mov    WORD PTR [rsp+0x20],r14w
   140002be4:	call   0x1400010f0
   140002be9:	mov    rbp,rax
   140002bec:	cmp    rax,r14
   140002bef:	je     0x140002c41
   140002bf1:	movsxd r8,DWORD PTR [rdi]
   140002bf4:	mov    rdx,rbx
   140002bf7:	mov    rcx,rax
   140002bfa:	call   0x14000a6c0
   140002bff:	or     rcx,0xffffffffffffffff
   140002c03:	xor    eax,eax
   140002c05:	mov    rdi,rbp
   140002c08:	repnz scas al,BYTE PTR es:[rdi]
   140002c0a:	not    rcx
   140002c0d:	add    rcx,rbx
   140002c10:	call   0x14001e864
   140002c15:	mov    rcx,rbp
   140002c18:	mov    QWORD PTR [r13+0x0],rax
   140002c1c:	mov    QWORD PTR [r12],rsi
   140002c20:	call   QWORD PTR [rip+0x2463a]        # 0x140027260
   140002c26:	mov    eax,0x1
   140002c2b:	jmp    0x140002c43
   140002c2d:	call   QWORD PTR [rip+0x2463d]        # 0x140027270
   140002c33:	lea    rdx,[rip+0x250ae]        # 0x140027ce8
   140002c3a:	mov    ecx,eax
   140002c3c:	call   0x14000270c
   140002c41:	xor    eax,eax
   140002c43:	mov    rcx,QWORD PTR [rsp+0x150]
   140002c4b:	xor    rcx,rsp
   140002c4e:	call   0x140009080
   140002c53:	add    rsp,0x160
   140002c5a:	pop    r14
   140002c5c:	pop    r13
   140002c5e:	pop    r12
   140002c60:	pop    rdi
   140002c61:	pop    rsi
   140002c62:	pop    rbp
   140002c63:	pop    rbx
   140002c64:	ret    
   140002c65:	int3   
   140002c66:	int3   
   140002c67:	int3   
   140002c68:	sub    rsp,0x68
   140002c6c:	jmp    0x140002c84
   140002c6e:	lea    rcx,[rsp+0x30]
   140002c73:	call   QWORD PTR [rip+0x24887]        # 0x140027500
   140002c79:	lea    rcx,[rsp+0x30]
   140002c7e:	call   QWORD PTR [rip+0x24884]        # 0x140027508
   140002c84:	lea    rcx,[rsp+0x30]
   140002c89:	xor    r9d,r9d
   140002c8c:	xor    r8d,r8d
   140002c8f:	xor    edx,edx
   140002c91:	mov    DWORD PTR [rsp+0x20],0x1
   140002c99:	call   QWORD PTR [rip+0x24871]        # 0x140027510
   140002c9f:	test   eax,eax
   140002ca1:	jne    0x140002c6e
   140002ca3:	add    rsp,0x68
   140002ca7:	ret    
   140002ca8:	rex push rbx
   140002caa:	push   rbp
   140002cab:	push   rsi
   140002cac:	push   rdi
   140002cad:	sub    rsp,0xd8
   140002cb4:	mov    rax,QWORD PTR [rip+0x315e5]        # 0x1400342a0
   140002cbb:	xor    rax,rsp
   140002cbe:	mov    QWORD PTR [rsp+0xc0],rax
   140002cc6:	mov    rbp,rcx
   140002cc9:	cmp    edx,0xf
   140002ccc:	je     0x140002cd9
   140002cce:	call   QWORD PTR [rip+0x2480c]        # 0x1400274e0
   140002cd4:	jmp    0x140002dff
   140002cd9:	lea    rdx,[rsp+0x70]
   140002cde:	call   QWORD PTR [rip+0x24804]        # 0x1400274e8
   140002ce4:	mov    ecx,0x1
   140002ce9:	mov    rsi,rax
   140002cec:	call   QWORD PTR [rip+0x247fe]        # 0x1400274f0
   140002cf2:	xor    r9d,r9d
   140002cf5:	mov    edx,eax
   140002cf7:	mov    eax,0x66666667
   140002cfc:	xor    r8d,r8d
   140002cff:	imul   edx
   140002d01:	mov    eax,edx
   140002d03:	xor    edx,edx
   140002d05:	sar    eax,0x2
   140002d08:	mov    ecx,eax
   140002d0a:	shr    ecx,0x1f
   140002d0d:	add    eax,ecx
   140002d0f:	lea    rcx,[rip+0x25032]        # 0x140027d48
   140002d16:	mov    QWORD PTR [rsp+0x68],rcx
   140002d1b:	xor    ecx,ecx
   140002d1d:	mov    DWORD PTR [rsp+0x60],ecx
   140002d21:	mov    DWORD PTR [rsp+0x58],ecx
   140002d25:	mov    DWORD PTR [rsp+0x50],ecx
   140002d29:	mov    DWORD PTR [rsp+0x48],ecx
   140002d2d:	mov    DWORD PTR [rsp+0x40],ecx
   140002d31:	mov    DWORD PTR [rsp+0x38],ecx
   140002d35:	mov    DWORD PTR [rsp+0x30],ecx
   140002d39:	mov    ecx,eax
   140002d3b:	mov    DWORD PTR [rsp+0x28],0x1
   140002d43:	mov    DWORD PTR [rsp+0x20],0x2bc
   140002d4b:	call   QWORD PTR [rip+0x24317]        # 0x140027068
   140002d51:	mov    rcx,rsi
   140002d54:	mov    rdx,rax
   140002d57:	call   QWORD PTR [rip+0x24313]        # 0x140027070
   140002d5d:	mov    edx,0x1
   140002d62:	mov    rcx,rsi
   140002d65:	mov    rbx,rax
   140002d68:	call   QWORD PTR [rip+0x2430a]        # 0x140027078
   140002d6e:	or     rcx,0xffffffffffffffff
   140002d72:	xor    eax,eax
   140002d74:	lea    rdi,[rip+0x339a5]        # 0x140036720
   140002d7b:	lea    r9,[rip+0x3399e]        # 0x140036720
   140002d82:	repnz scas al,BYTE PTR es:[rdi]
   140002d84:	lea    edx,[rax+0xf]
   140002d87:	not    rcx
   140002d8a:	mov    r8d,edx
   140002d8d:	dec    rcx
   140002d90:	mov    DWORD PTR [rsp+0x20],ecx
   140002d94:	mov    rcx,rsi
   140002d97:	call   QWORD PTR [rip+0x242e3]        # 0x140027080
   140002d9d:	mov    edx,0xffffff
   140002da2:	mov    rcx,rsi
   140002da5:	call   QWORD PTR [rip+0x242dd]        # 0x140027088
   140002dab:	or     rcx,0xffffffffffffffff
   140002daf:	xor    eax,eax
   140002db1:	lea    edx,[rax+0xa]
   140002db4:	lea    rdi,[rip+0x33965]        # 0x140036720
   140002dbb:	lea    r9,[rip+0x3395e]        # 0x140036720
   140002dc2:	repnz scas al,BYTE PTR es:[rdi]
   140002dc4:	mov    r8d,edx
   140002dc7:	not    rcx
   140002dca:	dec    rcx
   140002dcd:	mov    DWORD PTR [rsp+0x20],ecx
   140002dd1:	mov    rcx,rsi
   140002dd4:	call   QWORD PTR [rip+0x242a6]        # 0x140027080
   140002dda:	mov    rdx,rbx
   140002ddd:	mov    rcx,rsi
   140002de0:	call   QWORD PTR [rip+0x2428a]        # 0x140027070
   140002de6:	mov    rcx,rax
   140002de9:	call   QWORD PTR [rip+0x242a1]        # 0x140027090
   140002def:	lea    rdx,[rsp+0x70]
   140002df4:	mov    rcx,rbp
   140002df7:	call   QWORD PTR [rip+0x246fb]        # 0x1400274f8
   140002dfd:	xor    eax,eax
   140002dff:	mov    rcx,QWORD PTR [rsp+0xc0]
   140002e07:	xor    rcx,rsp
   140002e0a:	call   0x140009080
   140002e0f:	add    rsp,0xd8
   140002e16:	pop    rdi
   140002e17:	pop    rsi
   140002e18:	pop    rbp
   140002e19:	pop    rbx
   140002e1a:	ret    
   140002e1b:	int3   
   140002e1c:	mov    QWORD PTR [rsp+0x10],rbx
   140002e21:	mov    QWORD PTR [rsp+0x18],rsi
   140002e26:	mov    QWORD PTR [rsp+0x20],rdi
   140002e2b:	push   r12
   140002e2d:	mov    eax,0x10c0
   140002e32:	call   0x140025f10
   140002e37:	sub    rsp,rax
   140002e3a:	mov    rax,QWORD PTR [rip+0x3145f]        # 0x1400342a0
   140002e41:	xor    rax,rsp
   140002e44:	mov    QWORD PTR [rsp+0x10b0],rax
   140002e4c:	lea    rax,[rip+0xfffffffffffffe55]        # 0x140002ca8
   140002e53:	mov    rbx,rcx
   140002e56:	xor    esi,esi
   140002e58:	xor    ecx,ecx
   140002e5a:	mov    DWORD PTR [rsp+0x60],0x3
   140002e62:	mov    QWORD PTR [rsp+0x68],rax
   140002e67:	mov    DWORD PTR [rsp+0x74],esi
   140002e6b:	mov    DWORD PTR [rsp+0x70],esi
   140002e6f:	call   QWORD PTR [rip+0x24273]        # 0x1400270e8
   140002e75:	mov    edx,0x7f00
   140002e7a:	xor    ecx,ecx
   140002e7c:	mov    QWORD PTR [rsp+0x80],rsi
   140002e84:	mov    QWORD PTR [rsp+0x78],rax
   140002e89:	call   QWORD PTR [rip+0x24629]        # 0x1400274b8
   140002e8f:	mov    ecx,0x800000
   140002e94:	mov    QWORD PTR [rsp+0x88],rax
   140002e9c:	call   QWORD PTR [rip+0x241fe]        # 0x1400270a0
   140002ea2:	lea    r12,[rip+0x24eef]        # 0x140027d98
   140002ea9:	lea    rcx,[rsp+0x60]
   140002eae:	mov    QWORD PTR [rsp+0xa0],r12
   140002eb6:	mov    QWORD PTR [rsp+0x98],rsi
   140002ebe:	mov    QWORD PTR [rsp+0x90],rax
   140002ec6:	call   QWORD PTR [rip+0x245f4]        # 0x1400274c0
   140002ecc:	cmp    ax,si
   140002ecf:	jne    0x140002eef
   140002ed1:	mov    rcx,QWORD PTR [rip+0x34c88]        # 0x140037b60
   140002ed8:	lea    r8,[rip+0x24ea9]        # 0x140027d88
   140002edf:	lea    rdx,[rip+0x24e82]        # 0x140027d68
   140002ee6:	xor    r9d,r9d
   140002ee9:	call   QWORD PTR [rip+0x245e1]        # 0x1400274d0
   140002eef:	lea    rdx,[rip+0x24e62]        # 0x140027d58
   140002ef6:	lea    rcx,[rsp+0xb0]
   140002efe:	mov    r8,rbx
   140002f01:	call   QWORD PTR [rip+0x24561]        # 0x140027468
   140002f07:	xor    ecx,ecx
   140002f09:	call   QWORD PTR [rip+0x241d9]        # 0x1400270e8
   140002f0f:	mov    ecx,0x11
   140002f14:	mov    rbx,rax
   140002f17:	call   QWORD PTR [rip+0x245d3]        # 0x1400274f0
   140002f1d:	mov    ecx,0x10
   140002f22:	mov    edi,eax
   140002f24:	call   QWORD PTR [rip+0x245c6]        # 0x1400274f0
   140002f2a:	mov    QWORD PTR [rsp+0x58],rsi
   140002f2f:	mov    QWORD PTR [rsp+0x50],rbx
   140002f34:	mov    QWORD PTR [rsp+0x48],rsi
   140002f39:	mov    QWORD PTR [rsp+0x40],rsi
   140002f3e:	mov    DWORD PTR [rsp+0x38],edi
   140002f42:	mov    DWORD PTR [rsp+0x30],eax
   140002f46:	lea    r8,[rsp+0xb0]
   140002f4e:	xor    r9d,r9d
   140002f51:	mov    rdx,r12
   140002f54:	xor    ecx,ecx
   140002f56:	mov    DWORD PTR [rsp+0x28],esi
   140002f5a:	mov    DWORD PTR [rsp+0x20],esi
   140002f5e:	call   QWORD PTR [rip+0x24564]        # 0x1400274c8
   140002f64:	mov    rcx,rax
   140002f67:	mov    edx,0x3
   140002f6c:	mov    rbx,rax
   140002f6f:	call   QWORD PTR [rip+0x24503]        # 0x140027478
   140002f75:	mov    rcx,rbx
   140002f78:	call   QWORD PTR [rip+0x2455a]        # 0x1400274d8
   140002f7e:	mov    rax,rbx
   140002f81:	mov    rcx,QWORD PTR [rsp+0x10b0]
   140002f89:	xor    rcx,rsp
   140002f8c:	call   0x140009080
   140002f91:	lea    r11,[rsp+0x10c0]
   140002f99:	mov    rbx,QWORD PTR [r11+0x18]
   140002f9d:	mov    rsi,QWORD PTR [r11+0x20]
   140002fa1:	mov    rdi,QWORD PTR [r11+0x28]
   140002fa5:	mov    rsp,r11
   140002fa8:	pop    r12
   140002faa:	ret    
   140002fab:	int3   
   140002fac:	mov    QWORD PTR [rsp+0x8],rbx
   140002fb1:	push   rdi
   140002fb2:	sub    rsp,0x40
   140002fb6:	lea    rdx,[rsp+0x30]
   140002fbb:	mov    rdi,rcx
   140002fbe:	call   QWORD PTR [rip+0x244e4]        # 0x1400274a8
   140002fc4:	xor    ecx,ecx
   140002fc6:	call   QWORD PTR [rip+0x24524]        # 0x1400274f0
   140002fcc:	mov    ecx,0x1
   140002fd1:	mov    ebx,eax
   140002fd3:	call   QWORD PTR [rip+0x24517]        # 0x1400274f0
   140002fd9:	mov    ecx,DWORD PTR [rsp+0x30]
   140002fdd:	mov    r10d,DWORD PTR [rsp+0x3c]
   140002fe2:	mov    r9d,DWORD PTR [rsp+0x38]
   140002fe7:	and    DWORD PTR [rsp+0x28],0x0
   140002fec:	mov    r11d,eax
   140002fef:	mov    eax,DWORD PTR [rsp+0x34]
   140002ff3:	sub    r9d,ecx
   140002ff6:	sub    ecx,DWORD PTR [rsp+0x38]
   140002ffa:	sub    r10d,eax
   140002ffd:	sub    eax,DWORD PTR [rsp+0x3c]
   140003001:	add    eax,r11d
   140003004:	mov    DWORD PTR [rsp+0x20],r10d
   140003009:	cdq    
   14000300a:	sub    eax,edx
   14000300c:	sar    eax,1
   14000300e:	mov    r8d,eax
   140003011:	lea    eax,[rbx+rcx*1]
   140003014:	mov    rcx,rdi
   140003017:	cdq    
   140003018:	sub    eax,edx
   14000301a:	sar    eax,1
   14000301c:	mov    edx,eax
   14000301e:	call   QWORD PTR [rip+0x2448c]        # 0x1400274b0
   140003024:	mov    rbx,QWORD PTR [rsp+0x50]
   140003029:	add    rsp,0x40
   14000302d:	pop    rdi
   14000302e:	ret    
   14000302f:	int3   
   140003030:	rex push rbx
   140003032:	mov    eax,0x1040
   140003037:	call   0x140025f10
   14000303c:	sub    rsp,rax
   14000303f:	mov    rax,QWORD PTR [rip+0x3125a]        # 0x1400342a0
   140003046:	xor    rax,rsp
   140003049:	mov    QWORD PTR [rsp+0x1030],rax
   140003051:	mov    rbx,rcx
   140003054:	cmp    edx,0x4e
   140003057:	je     0x1400030ff
   14000305d:	cmp    edx,0x110
   140003063:	jne    0x140003126
   140003069:	call   0x140002a58
   14000306e:	mov    r11,QWORD PTR [rip+0x34ccb]        # 0x140037d40
   140003075:	test   r11,r11
   140003078:	je     0x140003096
   14000307a:	xor    r9d,r9d
   14000307d:	mov    edx,0x401
   140003082:	mov    r8d,0x172
   140003088:	mov    rcx,rbx
   14000308b:	mov    QWORD PTR [rsp+0x20],r11
   140003090:	call   QWORD PTR [rip+0x243fa]        # 0x140027490
   140003096:	mov    rcx,rbx
   140003099:	call   QWORD PTR [rip+0x243f9]        # 0x140027498
   14000309f:	mov    rcx,rax
   1400030a2:	call   0x140002fac
   1400030a7:	lea    r8,[rip+0x337f2]        # 0x1400368a0
   1400030ae:	lea    rdx,[rip+0x24cfb]        # 0x140027db0
   1400030b5:	lea    rcx,[rsp+0x30]
   1400030ba:	call   QWORD PTR [rip+0x243a8]        # 0x140027468
   1400030c0:	lea    r8,[rsp+0x30]
   1400030c5:	mov    edx,0x3e8
   1400030ca:	mov    rcx,rbx
   1400030cd:	call   QWORD PTR [rip+0x2445d]        # 0x140027530
   1400030d3:	lea    r8,[rip+0x33a86]        # 0x140036b60
   1400030da:	mov    edx,0x3fd
   1400030df:	mov    rcx,rbx
   1400030e2:	call   QWORD PTR [rip+0x24448]        # 0x140027530
   1400030e8:	lea    r8,[rip+0x34ab1]        # 0x140037ba0
   1400030ef:	mov    edx,0x400
   1400030f4:	mov    rcx,rbx
   1400030f7:	call   QWORD PTR [rip+0x24433]        # 0x140027530
   1400030fd:	jmp    0x140003126
   1400030ff:	cmp    DWORD PTR [r9+0x10],0xffffff38
   140003107:	jne    0x140003126
   140003109:	call   QWORD PTR [rip+0x24389]        # 0x140027498
   14000310f:	mov    r9d,0x2
   140003115:	xor    r8d,r8d
   140003118:	mov    rcx,rax
   14000311b:	mov    edx,0x470
   140003120:	call   QWORD PTR [rip+0x2437a]        # 0x1400274a0
   140003126:	xor    eax,eax
   140003128:	mov    rcx,QWORD PTR [rsp+0x1030]
   140003130:	xor    rcx,rsp
   140003133:	call   0x140009080
   140003138:	add    rsp,0x1040
   14000313f:	pop    rbx
   140003140:	ret    
   140003141:	int3   
   140003142:	int3   
   140003143:	int3   
   140003144:	mov    QWORD PTR [rsp+0x18],rbx
   140003149:	mov    QWORD PTR [rsp+0x20],rbp
   14000314e:	push   rsi
   14000314f:	push   rdi
   140003150:	push   r12
   140003152:	sub    rsp,0x160
   140003159:	mov    rax,QWORD PTR [rip+0x31140]        # 0x1400342a0
   140003160:	xor    rax,rsp
   140003163:	mov    QWORD PTR [rsp+0x150],rax
   14000316b:	mov    rbp,rdx
   14000316e:	lea    rax,[rsp+0x48]
   140003173:	mov    rdi,r8
   140003176:	mov    r12,rcx
   140003179:	lea    rdx,[rip+0x24cf8]        # 0x140027e78
   140003180:	mov    r9d,0x20019
   140003186:	xor    r8d,r8d
   140003189:	mov    rcx,rbp
   14000318c:	mov    QWORD PTR [rsp+0x20],rax
   140003191:	xor    esi,esi
   140003193:	call   QWORD PTR [rip+0x23e9f]        # 0x140027038
   140003199:	test   eax,eax
   14000319b:	je     0x1400031a4
   14000319d:	xor    eax,eax
   14000319f:	jmp    0x140003325
   1400031a4:	and    QWORD PTR [rsp+0x38],rsi
   1400031a9:	and    QWORD PTR [rsp+0x30],rsi
   1400031ae:	and    QWORD PTR [rsp+0x28],rsi
   1400031b3:	and    QWORD PTR [rsp+0x20],rsi
   1400031b8:	mov    DWORD PTR [rsp+0x40],0x50
   1400031c0:	xor    edx,edx
   1400031c2:	jmp    0x1400032f8
   1400031c7:	inc    esi
   1400031c9:	mov    DWORD PTR [rsp+0x40],0x50
   1400031d1:	test   rdi,rdi
   1400031d4:	je     0x140003203
   1400031d6:	cmp    BYTE PTR [rdi],0x0
   1400031d9:	je     0x140003203
   1400031db:	lea    rdx,[rsp+0x60]
   1400031e0:	mov    rax,rdi
   1400031e3:	sub    rdx,rdi
   1400031e6:	movzx  ecx,BYTE PTR [rax]
   1400031e9:	movzx  r8d,BYTE PTR [rax+rdx*1]
   1400031ee:	sub    ecx,r8d
   1400031f1:	jne    0x1400031fb
   1400031f3:	inc    rax
   1400031f6:	test   r8d,r8d
   1400031f9:	jne    0x1400031e6
   1400031fb:	test   ecx,ecx
   1400031fd:	jne    0x1400032de
   140003203:	lea    r8,[rsp+0x60]
   140003208:	lea    rdx,[rip+0x24c41]        # 0x140027e50
   14000320f:	lea    rcx,[rsp+0x100]
   140003217:	call   QWORD PTR [rip+0x2424b]        # 0x140027468
   14000321d:	lea    r8,[rsp+0x60]
   140003222:	lea    rdx,[rip+0x24bf7]        # 0x140027e20
   140003229:	lea    rcx,[rsp+0xb0]
   140003231:	call   QWORD PTR [rip+0x24231]        # 0x140027468
   140003237:	lea    r11,[rsp+0x50]
   14000323c:	lea    rdx,[rsp+0xb0]
   140003244:	mov    r9d,0x20019
   14000324a:	xor    r8d,r8d
   14000324d:	mov    rcx,rbp
   140003250:	mov    QWORD PTR [rsp+0x20],r11
   140003255:	call   QWORD PTR [rip+0x23ddd]        # 0x140027038
   14000325b:	test   eax,eax
   14000325d:	jne    0x1400032de
   14000325f:	mov    ecx,0x110
   140003264:	call   0x14000993c
   140003269:	mov    DWORD PTR [rsp+0x44],0x105
   140003271:	mov    rbx,rax
   140003274:	test   rax,rax
   140003277:	je     0x1400032d3
   140003279:	mov    rcx,QWORD PTR [rsp+0x50]
   14000327e:	lea    rax,[rsp+0x44]
   140003283:	xor    r9d,r9d
   140003286:	mov    QWORD PTR [rsp+0x28],rax
   14000328b:	xor    r8d,r8d
   14000328e:	xor    edx,edx
   140003290:	mov    QWORD PTR [rsp+0x20],rbx
   140003295:	call   QWORD PTR [rip+0x23d7d]        # 0x140027018
   14000329b:	test   eax,eax
   14000329d:	jne    0x1400032d3
   14000329f:	lea    r9,[rsp+0x100]
   1400032a7:	xor    r8d,r8d
   1400032aa:	mov    edx,0x180
   1400032af:	mov    rcx,r12
   1400032b2:	call   QWORD PTR [rip+0x24270]        # 0x140027528
   1400032b8:	mov    r9,rbx
   1400032bb:	mov    edx,0x19a
   1400032c0:	mov    rcx,r12
   1400032c3:	movsxd r8,eax
   1400032c6:	mov    QWORD PTR [rbx+0x108],rbp
   1400032cd:	call   QWORD PTR [rip+0x24255]        # 0x140027528
   1400032d3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400032d8:	call   QWORD PTR [rip+0x23d32]        # 0x140027010
   1400032de:	and    QWORD PTR [rsp+0x38],0x0
   1400032e4:	and    QWORD PTR [rsp+0x30],0x0
   1400032ea:	and    QWORD PTR [rsp+0x28],0x0
   1400032f0:	and    QWORD PTR [rsp+0x20],0x0
   1400032f6:	mov    edx,esi
   1400032f8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032fd:	lea    r9,[rsp+0x40]
   140003302:	lea    r8,[rsp+0x60]
   140003307:	call   QWORD PTR [rip+0x23cfb]        # 0x140027008
   14000330d:	test   eax,eax
   14000330f:	je     0x1400031c7
   140003315:	mov    rcx,QWORD PTR [rsp+0x48]
   14000331a:	call   QWORD PTR [rip+0x23cf0]        # 0x140027010
   140003320:	mov    eax,0x1
   140003325:	mov    rcx,QWORD PTR [rsp+0x150]
   14000332d:	xor    rcx,rsp
   140003330:	call   0x140009080
   140003335:	lea    r11,[rsp+0x160]
   14000333d:	mov    rbx,QWORD PTR [r11+0x30]
   140003341:	mov    rbp,QWORD PTR [r11+0x38]
   140003345:	mov    rsp,r11
   140003348:	pop    r12
   14000334a:	pop    rdi
   14000334b:	pop    rsi
   14000334c:	ret    
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    QWORD PTR [rsp+0x10],rbx
   140003355:	push   rdi
   140003356:	sub    rsp,0x30
   14000335a:	lea    rax,[rsp+0x40]
   14000335f:	lea    rdx,[rip+0x30ca2]        # 0x140034008
   140003366:	mov    r9d,0x4
   14000336c:	xor    r8d,r8d
   14000336f:	mov    rcx,0xffffffff80000002
   140003376:	mov    QWORD PTR [rsp+0x20],rax
   14000337b:	call   QWORD PTR [rip+0x23cb7]        # 0x140027038
   140003381:	xor    ebx,ebx
   140003383:	mov    edi,eax
   140003385:	cmp    eax,ebx
   140003387:	jne    0x140003394
   140003389:	mov    rcx,QWORD PTR [rsp+0x40]
   14000338e:	call   QWORD PTR [rip+0x23c7c]        # 0x140027010
   140003394:	cmp    edi,ebx
   140003396:	sete   bl
   140003399:	mov    eax,ebx
   14000339b:	mov    rbx,QWORD PTR [rsp+0x48]
   1400033a0:	add    rsp,0x30
   1400033a4:	pop    rdi
   1400033a5:	ret    
   1400033a6:	int3   
   1400033a7:	int3   
   1400033a8:	rex push rbx
   1400033aa:	sub    rsp,0x20
   1400033ae:	mov    rax,QWORD PTR [rip+0x30c4b]        # 0x140034000
   1400033b5:	mov    rbx,0xffffffff80000001
   1400033bc:	cmp    rax,rbx
   1400033bf:	je     0x14000340c
   1400033c1:	cmp    rax,0xffffffff80000002
   1400033c7:	jne    0x1400033db
   1400033c9:	call   0x140003350
   1400033ce:	test   eax,eax
   1400033d0:	jne    0x14000340c
   1400033d2:	mov    QWORD PTR [rip+0x30c27],rbx        # 0x140034000
   1400033d9:	jmp    0x14000340c
   1400033db:	lea    r8,[rip+0x24ade]        # 0x140027ec0
   1400033e2:	lea    rdx,[rip+0x24aaf]        # 0x140027e98
   1400033e9:	mov    r9d,0x10
   1400033ef:	call   QWORD PTR [rip+0x240db]        # 0x1400274d0
   1400033f5:	call   0x140003350
   1400033fa:	neg    eax
   1400033fc:	sbb    rcx,rcx
   1400033ff:	neg    rcx
   140003402:	add    rcx,rbx
   140003405:	mov    QWORD PTR [rip+0x30bf4],rcx        # 0x140034000
   14000340c:	add    rsp,0x20
   140003410:	pop    rbx
   140003411:	ret    
   140003412:	int3   
   140003413:	int3   
   140003414:	cmp    ecx,0x2
   140003417:	jle    0x140003421
   140003419:	lea    rax,[rip+0x30c80]        # 0x1400340a0
   140003420:	ret    
   140003421:	jne    0x14000342f
   140003423:	cmp    edx,0x2
   140003426:	lea    rax,[rip+0x30c73]        # 0x1400340a0
   14000342d:	jge    0x140003436
   14000342f:	lea    rax,[rip+0x30c0a]        # 0x140034040
   140003436:	ret    
   140003437:	int3   
   140003438:	mov    QWORD PTR [rsp+0x10],rbp
   14000343d:	mov    QWORD PTR [rsp+0x18],rsi
   140003442:	mov    QWORD PTR [rsp+0x20],rdi
   140003447:	push   r13
   140003449:	push   r14
   14000344b:	push   r15
   14000344d:	mov    eax,0x1150
   140003452:	call   0x140025f10
   140003457:	sub    rsp,rax
   14000345a:	mov    rax,QWORD PTR [rip+0x30e3f]        # 0x1400342a0
   140003461:	xor    rax,rsp
   140003464:	mov    QWORD PTR [rsp+0x1140],rax
   14000346c:	sub    edx,0x4e
   14000346f:	mov    rsi,rcx
   140003472:	je     0x140003822
   140003478:	xor    edi,edi
   14000347a:	sub    edx,0xc2
   140003480:	je     0x1400034ad
   140003482:	cmp    edx,0x1
   140003485:	jne    0x140003878
   14000348b:	mov    ebp,0x3fe
   140003490:	cmp    r8w,bp
   140003494:	jne    0x140003878
   14000349a:	shr    r8,0x10
   14000349e:	cmp    r8w,dx
   1400034a2:	je     0x1400035e1
   1400034a8:	jmp    0x140003878
   1400034ad:	mov    rax,QWORD PTR [rip+0x3488c]        # 0x140037d40
   1400034b4:	cmp    rax,rdi
   1400034b7:	je     0x1400034d2
   1400034b9:	xor    r9d,r9d
   1400034bc:	mov    edx,0x401
   1400034c1:	mov    r8d,0x172
   1400034c7:	mov    QWORD PTR [rsp+0x20],rax
   1400034cc:	call   QWORD PTR [rip+0x23fbe]        # 0x140027490
   1400034d2:	mov    ebp,0x3fe
   1400034d7:	mov    rcx,rsi
   1400034da:	mov    edx,ebp
   1400034dc:	call   QWORD PTR [rip+0x23fa6]        # 0x140027488
   1400034e2:	lea    r14,[rip+0x34697]        # 0x140037b80
   1400034e9:	mov    rdx,0xffffffff80000002
   1400034f0:	mov    rcx,rax
   1400034f3:	mov    r8,r14
   1400034f6:	call   0x140003144
   1400034fb:	mov    edx,ebp
   1400034fd:	mov    rcx,rsi
   140003500:	call   QWORD PTR [rip+0x23f82]        # 0x140027488
   140003506:	mov    r8,r14
   140003509:	mov    rdx,0xffffffff80000001
   140003510:	mov    rcx,rax
   140003513:	call   0x140003144
   140003518:	xor    r9d,r9d
   14000351b:	mov    r8d,0x18b
   140003521:	mov    edx,ebp
   140003523:	mov    rcx,rsi
   140003526:	mov    QWORD PTR [rsp+0x20],rdi
   14000352b:	call   QWORD PTR [rip+0x23f5f]        # 0x140027490
   140003531:	mov    r13,rax
   140003534:	cmp    eax,edi
   140003536:	je     0x140003559
   140003538:	cmp    eax,0xffffffff
   14000353b:	je     0x140003559
   14000353d:	lea    ecx,[rax-0x1]
   140003540:	mov    r8d,0x186
   140003546:	mov    edx,ebp
   140003548:	movsxd r9,ecx
   14000354b:	mov    rcx,rsi
   14000354e:	mov    QWORD PTR [rsp+0x20],rdi
   140003553:	call   QWORD PTR [rip+0x23f37]        # 0x140027490
   140003559:	mov    al,BYTE PTR [rip+0x34621]        # 0x140037b80
   14000355f:	cmp    al,dil
   140003562:	je     0x140003598
   140003564:	lea    rdx,[rip+0x24a15]        # 0x140027f80
   14000356b:	lea    rcx,[rsp+0x140]
   140003573:	mov    r8,r14
   140003576:	call   QWORD PTR [rip+0x23eec]        # 0x140027468
   14000357c:	lea    r8,[rsp+0x140]
   140003584:	mov    edx,0x3e8
   140003589:	mov    rcx,rsi
   14000358c:	call   QWORD PTR [rip+0x23f9e]        # 0x140027530
   140003592:	mov    al,BYTE PTR [rip+0x345e8]        # 0x140037b80
   140003598:	cmp    r13d,edi
   14000359b:	jne    0x1400035e1
   14000359d:	cmp    al,dil
   1400035a0:	je     0x1400035c4
   1400035a2:	lea    rdx,[rip+0x24987]        # 0x140027f30
   1400035a9:	lea    rcx,[rsp+0x140]
   1400035b1:	mov    r8,r14
   1400035b4:	call   QWORD PTR [rip+0x23eae]        # 0x140027468
   1400035ba:	lea    rdx,[rsp+0x140]
   1400035c2:	jmp    0x1400035cb
   1400035c4:	lea    rdx,[rip+0x24935]        # 0x140027f00
   1400035cb:	lea    r8,[rip+0x2491e]        # 0x140027ef0
   1400035d2:	mov    r9d,0x10
   1400035d8:	mov    rcx,rsi
   1400035db:	call   QWORD PTR [rip+0x23eef]        # 0x1400274d0
   1400035e1:	mov    rcx,rsi
   1400035e4:	call   QWORD PTR [rip+0x23eae]        # 0x140027498
   1400035ea:	mov    r13d,0x3
   1400035f0:	xor    r8d,r8d
   1400035f3:	mov    rcx,rax
   1400035f6:	mov    r9,r13
   1400035f9:	mov    edx,0x470
   1400035fe:	call   QWORD PTR [rip+0x23e9c]        # 0x1400274a0
   140003604:	xor    r9d,r9d
   140003607:	mov    r8d,0x188
   14000360d:	mov    edx,ebp
   14000360f:	mov    rcx,rsi
   140003612:	mov    QWORD PTR [rsp+0x20],rdi
   140003617:	call   QWORD PTR [rip+0x23e73]        # 0x140027490
   14000361d:	mov    rcx,rsi
   140003620:	mov    r14,rax
   140003623:	cmp    eax,0xffffffff
   140003626:	jne    0x140003684
   140003628:	call   QWORD PTR [rip+0x23e6a]        # 0x140027498
   14000362e:	lea    r9d,[r13-0x2]
   140003632:	xor    r8d,r8d
   140003635:	mov    rcx,rax
   140003638:	mov    edx,0x470
   14000363d:	call   QWORD PTR [rip+0x23e5d]        # 0x1400274a0
   140003643:	lea    r8,[rip+0x241ee]        # 0x140027838
   14000364a:	mov    edx,0x3ef
   14000364f:	mov    rcx,rsi
   140003652:	call   QWORD PTR [rip+0x23ed8]        # 0x140027530
   140003658:	lea    r8,[rip+0x241d9]        # 0x140027838
   14000365f:	mov    edx,0x3f0
   140003664:	mov    rcx,rsi
   140003667:	call   QWORD PTR [rip+0x23ec3]        # 0x140027530
   14000366d:	mov    dl,BYTE PTR [rip+0x241c5]        # 0x140027838
   140003673:	mov    BYTE PTR [rip+0x345a7],dl        # 0x140037c20
   140003679:	mov    BYTE PTR [rip+0x333a1],dl        # 0x140036a20
   14000367f:	jmp    0x140003878
   140003684:	call   QWORD PTR [rip+0x23e0e]        # 0x140027498
   14000368a:	mov    r9,r13
   14000368d:	xor    r8d,r8d
   140003690:	mov    rcx,rax
   140003693:	mov    edx,0x470
   140003698:	call   QWORD PTR [rip+0x23e02]        # 0x1400274a0
   14000369e:	movsxd r14,r14d
   1400036a1:	mov    r8d,0x199
   1400036a7:	mov    edx,ebp
   1400036a9:	mov    rcx,rsi
   1400036ac:	mov    r9,r14
   1400036af:	mov    QWORD PTR [rsp+0x20],rdi
   1400036b4:	call   QWORD PTR [rip+0x23dd6]        # 0x140027490
   1400036ba:	lea    r15,[rip+0x3455f]        # 0x140037c20
   1400036c1:	mov    rcx,QWORD PTR [rax+0x108]
   1400036c8:	mov    rdx,r15
   1400036cb:	mov    QWORD PTR [rip+0x3092e],rcx        # 0x140034000
   1400036d2:	sub    rdx,rax
   1400036d5:	mov    cl,BYTE PTR [rax]
   1400036d7:	mov    BYTE PTR [rdx+rax*1],cl
   1400036da:	inc    rax
   1400036dd:	cmp    cl,dil
   1400036e0:	jne    0x1400036d5
   1400036e2:	mov    r8,r15
   1400036e5:	mov    edx,0x3ef
   1400036ea:	mov    rcx,rsi
   1400036ed:	call   QWORD PTR [rip+0x23e3d]        # 0x140027530
   1400036f3:	mov    r9,r14
   1400036f6:	mov    r8d,0x18a
   1400036fc:	mov    edx,ebp
   1400036fe:	mov    rcx,rsi
   140003701:	mov    QWORD PTR [rsp+0x20],rdi
   140003706:	call   QWORD PTR [rip+0x23d84]        # 0x140027490
   14000370c:	inc    eax
   14000370e:	movsxd rcx,eax
   140003711:	call   0x14000993c
   140003716:	mov    r13,rax
   140003719:	cmp    rax,rdi
   14000371c:	je     0x140003785
   14000371e:	mov    r9,r14
   140003721:	mov    r8d,0x189
   140003727:	mov    edx,ebp
   140003729:	mov    rcx,rsi
   14000372c:	mov    QWORD PTR [rsp+0x20],rax
   140003731:	call   QWORD PTR [rip+0x23d59]        # 0x140027490
   140003737:	lea    r9,[rip+0x3445a]        # 0x140037b98
   14000373e:	lea    r8,[rip+0x34427]        # 0x140037b6c
   140003745:	lea    rdx,[rip+0x2478c]        # 0x140027ed8
   14000374c:	mov    rcx,r13
   14000374f:	call   0x14000a9bc
   140003754:	cmp    eax,0x2
   140003757:	jne    0x14000377b
   140003759:	mov    r9d,DWORD PTR [rip+0x34438]        # 0x140037b98
   140003760:	mov    r8d,DWORD PTR [rip+0x34405]        # 0x140037b6c
   140003767:	lea    rdx,[rip+0x2475a]        # 0x140027ec8
   14000376e:	lea    rcx,[rip+0x332ab]        # 0x140036a20
   140003775:	call   QWORD PTR [rip+0x23ced]        # 0x140027468
   14000377b:	mov    rcx,r13
   14000377e:	call   0x1400098ac
   140003783:	jmp    0x140003791
   140003785:	mov    al,BYTE PTR [rip+0x240ad]        # 0x140027838
   14000378b:	mov    BYTE PTR [rip+0x3328f],al        # 0x140036a20
   140003791:	mov    edx,DWORD PTR [rip+0x34401]        # 0x140037b98
   140003797:	mov    ecx,DWORD PTR [rip+0x343cf]        # 0x140037b6c
   14000379d:	call   0x140003414
   1400037a2:	mov    rdx,rdi
   1400037a5:	mov    r8,rax
   1400037a8:	mov    cl,BYTE PTR [rdx+r15*1]
   1400037ac:	inc    rdx
   1400037af:	mov    BYTE PTR [rsp+rdx*1+0x2f],cl
   1400037b3:	cmp    cl,dil
   1400037b6:	jne    0x1400037a8
   1400037b8:	xor    eax,eax
   1400037ba:	or     rcx,0xffffffffffffffff
   1400037be:	lea    rdi,[rsp+0x30]
   1400037c3:	repnz scas al,BYTE PTR es:[rdi]
   1400037c5:	lea    rax,[rsp+0x30]
   1400037ca:	not    rcx
   1400037cd:	cmp    BYTE PTR [rcx+rax*1-0x2],0x5c
   1400037d2:	je     0x1400037ec
   1400037d4:	xor    eax,eax
   1400037d6:	lea    rdi,[rsp+0x30]
   1400037db:	or     rcx,0xffffffffffffffff
   1400037df:	repnz scas al,BYTE PTR es:[rdi]
   1400037e1:	movzx  eax,WORD PTR [rip+0x23ec0]        # 0x1400276a8
   1400037e8:	mov    WORD PTR [rdi-0x1],ax
   1400037ec:	mov    rdx,QWORD PTR [r8+0x8]
   1400037f0:	xor    eax,eax
   1400037f2:	or     rcx,0xffffffffffffffff
   1400037f6:	lea    rdi,[rsp+0x30]
   1400037fb:	repnz scas al,BYTE PTR es:[rdi]
   1400037fd:	xor    ecx,ecx
   1400037ff:	mov    al,BYTE PTR [rdx+rcx*1]
   140003802:	inc    rcx
   140003805:	mov    BYTE PTR [rdi+rcx*1-0x2],al
   140003809:	test   al,al
   14000380b:	jne    0x1400037ff
   14000380d:	lea    r8,[rsp+0x30]
   140003812:	mov    edx,0x3f0
   140003817:	mov    rcx,rsi
   14000381a:	call   QWORD PTR [rip+0x23d10]        # 0x140027530
   140003820:	jmp    0x140003878
   140003822:	cmp    DWORD PTR [r9+0x10],0xffffff38
   14000382a:	jne    0x140003878
   14000382c:	xor    edi,edi
   14000382e:	xor    r9d,r9d
   140003831:	mov    edx,0x3fe
   140003836:	mov    r8d,0x188
   14000383c:	mov    QWORD PTR [rsp+0x20],rdi
   140003841:	call   QWORD PTR [rip+0x23c49]        # 0x140027490
   140003847:	mov    rcx,rsi
   14000384a:	cmp    eax,0xffffffff
   14000384d:	jne    0x14000385b
   14000384f:	call   QWORD PTR [rip+0x23c43]        # 0x140027498
   140003855:	lea    r9d,[rdi+0x1]
   140003859:	jmp    0x140003867
   14000385b:	call   QWORD PTR [rip+0x23c37]        # 0x140027498
   140003861:	mov    r9d,0x3
   140003867:	xor    r8d,r8d
   14000386a:	mov    edx,0x470
   14000386f:	mov    rcx,rax
   140003872:	call   QWORD PTR [rip+0x23c28]        # 0x1400274a0
   140003878:	xor    eax,eax
   14000387a:	mov    rcx,QWORD PTR [rsp+0x1140]
   140003882:	xor    rcx,rsp
   140003885:	call   0x140009080
   14000388a:	lea    r11,[rsp+0x1150]
   140003892:	mov    rbp,QWORD PTR [r11+0x28]
   140003896:	mov    rsi,QWORD PTR [r11+0x30]
   14000389a:	mov    rdi,QWORD PTR [r11+0x38]
   14000389e:	mov    rsp,r11
   1400038a1:	pop    r15
   1400038a3:	pop    r14
   1400038a5:	pop    r13
   1400038a7:	ret    
   1400038a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400038ad:	mov    QWORD PTR [rsp+0x18],rsi
   1400038b2:	push   rdi
   1400038b3:	push   r12
   1400038b5:	push   r14
   1400038b7:	sub    rsp,0x290
   1400038be:	mov    rax,QWORD PTR [rip+0x309db]        # 0x1400342a0
   1400038c5:	xor    rax,rsp
   1400038c8:	mov    QWORD PTR [rsp+0x280],rax
   1400038d0:	mov    rbx,rcx
   1400038d3:	mov    rcx,QWORD PTR [rip+0x30726]        # 0x140034000
   1400038da:	lea    rax,[rip+0x248d7]        # 0x1400281b8
   1400038e1:	cmp    rcx,0xffffffff80000002
   1400038e8:	lea    rdi,[rip+0x248b1]        # 0x1400281a0
   1400038ef:	lea    r12,[rip+0x3096a]        # 0x140034260
   1400038f6:	cmove  rdi,rax
   1400038fa:	and    QWORD PTR [rsp+0x40],0x0
   140003900:	lea    rax,[rsp+0x58]
   140003905:	mov    QWORD PTR [rsp+0x38],rax
   14000390a:	and    QWORD PTR [rsp+0x30],0x0
   140003910:	xor    r9d,r9d
   140003913:	xor    r8d,r8d
   140003916:	mov    rdx,r12
   140003919:	mov    DWORD PTR [rsp+0x28],0x4
   140003921:	and    DWORD PTR [rsp+0x20],0x0
   140003926:	call   QWORD PTR [rip+0x236fc]        # 0x140027028
   14000392c:	test   eax,eax
   14000392e:	je     0x140003977
   140003930:	cmp    eax,0x5
   140003933:	jne    0x14000395b
   140003935:	call   QWORD PTR [rip+0x23b35]        # 0x140027470
   14000393b:	lea    rdx,[rip+0x247fe]        # 0x140028140
   140003942:	mov    r9d,0x10
   140003948:	mov    rcx,rax
   14000394b:	xor    r8d,r8d
   14000394e:	call   QWORD PTR [rip+0x23b7c]        # 0x1400274d0
   140003954:	xor    eax,eax
   140003956:	jmp    0x140003c9a
   14000395b:	call   QWORD PTR [rip+0x23b0f]        # 0x140027470
   140003961:	lea    r8,[rip+0x247c0]        # 0x140028128
   140003968:	xor    r9d,r9d
   14000396b:	mov    rcx,rax
   14000396e:	mov    rdx,r12
   140003971:	call   QWORD PTR [rip+0x23b59]        # 0x1400274d0
   140003977:	lea    r14,[rip+0x32f22]        # 0x1400368a0
   14000397e:	lea    rdx,[rip+0x2478b]        # 0x140028110
   140003985:	lea    rcx,[rsp+0x70]
   14000398a:	mov    r9,r14
   14000398d:	mov    r8,rbx
   140003990:	call   0x14000c5f0
   140003995:	lea    rdx,[rip+0x2476c]        # 0x140028108
   14000399c:	lea    rcx,[rsp+0x70]
   1400039a1:	call   0x14000c580
   1400039a6:	lea    rcx,[rsp+0x68]
   1400039ab:	mov    QWORD PTR [rip+0x3437e],rax        # 0x140037d30
   1400039b2:	call   0x140009454
   1400039b7:	lea    rcx,[rsp+0x68]
   1400039bc:	call   0x140009408
   1400039c1:	lea    rcx,[rsp+0x68]
   1400039c6:	call   0x140009408
   1400039cb:	lea    r8,[rip+0x24706]        # 0x1400280d8
   1400039d2:	lea    rcx,[rsp+0x70]
   1400039d7:	mov    r9,rax
   1400039da:	mov    edx,0x105
   1400039df:	call   0x14000c40c
   1400039e4:	mov    rcx,QWORD PTR [rip+0x34345]        # 0x140037d30
   1400039eb:	lea    rdx,[rsp+0x70]
   1400039f0:	call   0x14000a190
   1400039f5:	mov    rcx,QWORD PTR [rip+0x34334]        # 0x140037d30
   1400039fc:	lea    r8,[rip+0x32efd]        # 0x140036900
   140003a03:	lea    rdx,[rip+0x246be]        # 0x1400280c8
   140003a0a:	call   0x14000a190
   140003a0f:	mov    rcx,QWORD PTR [rip+0x3431a]        # 0x140037d30
   140003a16:	lea    rdx,[rip+0x24693]        # 0x1400280b0
   140003a1d:	mov    r8,rdi
   140003a20:	call   0x14000a190
   140003a25:	mov    edx,DWORD PTR [rip+0x3416d]        # 0x140037b98
   140003a2b:	mov    r9d,DWORD PTR [rip+0x3413a]        # 0x140037b6c
   140003a32:	mov    DWORD PTR [rsp+0x20],edx
   140003a36:	lea    rcx,[rsp+0x180]
   140003a3e:	lea    rdx,[rip+0x2465b]        # 0x1400280a0
   140003a45:	mov    r8,r14
   140003a48:	call   0x14000c5f0
   140003a4d:	mov    rcx,QWORD PTR [rsp+0x58]
   140003a52:	lea    rdx,[rsp+0x50]
   140003a57:	mov    QWORD PTR [rsp+0x40],rdx
   140003a5c:	lea    rax,[rsp+0x60]
   140003a61:	lea    rdx,[rsp+0x180]
   140003a69:	mov    QWORD PTR [rsp+0x38],rax
   140003a6e:	and    QWORD PTR [rsp+0x30],0x0
   140003a74:	xor    r9d,r9d
   140003a77:	xor    r8d,r8d
   140003a7a:	mov    DWORD PTR [rsp+0x28],0x20006
   140003a82:	and    DWORD PTR [rsp+0x20],0x0
   140003a87:	call   QWORD PTR [rip+0x2359b]        # 0x140027028
   140003a8d:	test   eax,eax
   140003a8f:	je     0x140003ab2
   140003a91:	call   QWORD PTR [rip+0x239d9]        # 0x140027470
   140003a97:	lea    r8,[rip+0x245ea]        # 0x140028088
   140003a9e:	lea    rdx,[rsp+0x180]
   140003aa6:	mov    rcx,rax
   140003aa9:	xor    r9d,r9d
   140003aac:	call   QWORD PTR [rip+0x23a1e]        # 0x1400274d0
   140003ab2:	mov    rcx,QWORD PTR [rsp+0x58]
   140003ab7:	call   QWORD PTR [rip+0x23553]        # 0x140027010
   140003abd:	mov    esi,0x1
   140003ac2:	cmp    DWORD PTR [rsp+0x50],esi
   140003ac6:	jne    0x140003ae6
   140003ac8:	mov    rcx,QWORD PTR [rip+0x34261]        # 0x140037d30
   140003acf:	lea    r9,[rsp+0x180]
   140003ad7:	lea    rdx,[rip+0x24592]        # 0x140028070
   140003ade:	mov    r8,r12
   140003ae1:	call   0x14000a190
   140003ae6:	mov    r9d,DWORD PTR [rip+0x340ab]        # 0x140037b98
   140003aed:	mov    r8d,DWORD PTR [rip+0x34078]        # 0x140037b6c
   140003af4:	lea    rax,[rip+0x32c25]        # 0x140036720
   140003afb:	lea    rdx,[rip+0x2455e]        # 0x140028060
   140003b02:	lea    rcx,[rsp+0x70]
   140003b07:	mov    QWORD PTR [rsp+0x20],rax
   140003b0c:	call   0x14000c5f0
   140003b11:	or     rcx,0xffffffffffffffff
   140003b15:	xor    eax,eax
   140003b17:	lea    rdi,[rsp+0x70]
   140003b1c:	mov    r9d,esi
   140003b1f:	xor    r8d,r8d
   140003b22:	repnz scas al,BYTE PTR es:[rdi]
   140003b24:	lea    rax,[rsp+0x70]
   140003b29:	lea    rdi,[rip+0x24520]        # 0x140028050
   140003b30:	not    rcx
   140003b33:	mov    rdx,rdi
   140003b36:	sub    rcx,rsi
   140003b39:	add    ecx,esi
   140003b3b:	mov    DWORD PTR [rsp+0x28],ecx
   140003b3f:	mov    rcx,QWORD PTR [rsp+0x60]
   140003b44:	mov    QWORD PTR [rsp+0x20],rax
   140003b49:	call   QWORD PTR [rip+0x234e1]        # 0x140027030
   140003b4f:	test   eax,eax
   140003b51:	je     0x140003b71
   140003b53:	call   QWORD PTR [rip+0x23917]        # 0x140027470
   140003b59:	lea    r8,[rip+0x244d8]        # 0x140028038
   140003b60:	lea    rdx,[rsp+0x70]
   140003b65:	mov    rcx,rax
   140003b68:	xor    r9d,r9d
   140003b6b:	call   QWORD PTR [rip+0x2395f]        # 0x1400274d0
   140003b71:	mov    rcx,QWORD PTR [rip+0x341b8]        # 0x140037d30
   140003b78:	lea    rax,[rsp+0x70]
   140003b7d:	lea    r9,[rsp+0x180]
   140003b85:	mov    QWORD PTR [rsp+0x28],rax
   140003b8a:	lea    rdx,[rip+0x24487]        # 0x140028018
   140003b91:	mov    r8,r12
   140003b94:	mov    QWORD PTR [rsp+0x20],rdi
   140003b99:	call   0x14000a190
   140003b9e:	lea    rdx,[rip+0x24463]        # 0x140028008
   140003ba5:	lea    rcx,[rsp+0x70]
   140003baa:	mov    r9,r14
   140003bad:	mov    r8,rbx
   140003bb0:	call   0x14000c5f0
   140003bb5:	lea    rdx,[rip+0x24448]        # 0x140028004
   140003bbc:	lea    rcx,[rsp+0x70]
   140003bc1:	call   0x14000c580
   140003bc6:	movsxd rdx,DWORD PTR [rip+0x32bab]        # 0x140036778
   140003bcd:	mov    rcx,QWORD PTR [rip+0x34024]        # 0x140037bf8
   140003bd4:	mov    r9,rax
   140003bd7:	mov    r8,rsi
   140003bda:	mov    rdi,rax
   140003bdd:	call   0x14000ad34
   140003be2:	mov    rcx,rdi
   140003be5:	call   0x14000ab20
   140003bea:	lea    rdx,[rip+0x243e7]        # 0x140027fd8
   140003bf1:	lea    rcx,[rsp+0x70]
   140003bf6:	mov    r9,r14
   140003bf9:	mov    r8,rbx
   140003bfc:	mov    QWORD PTR [rsp+0x28],r14
   140003c01:	mov    QWORD PTR [rsp+0x20],rbx
   140003c06:	call   0x14000c5f0
   140003c0b:	or     rcx,0xffffffffffffffff
   140003c0f:	xor    eax,eax
   140003c11:	lea    rdi,[rsp+0x70]
   140003c16:	mov    r9d,esi
   140003c19:	repnz scas al,BYTE PTR es:[rdi]
   140003c1b:	lea    rax,[rsp+0x70]
   140003c20:	lea    rdi,[rip+0x243a1]        # 0x140027fc8
   140003c27:	not    rcx
   140003c2a:	xor    r8d,r8d
   140003c2d:	mov    rdx,rdi
   140003c30:	sub    rcx,rsi
   140003c33:	add    ecx,esi
   140003c35:	mov    DWORD PTR [rsp+0x28],ecx
   140003c39:	mov    rcx,QWORD PTR [rsp+0x60]
   140003c3e:	mov    QWORD PTR [rsp+0x20],rax
   140003c43:	call   QWORD PTR [rip+0x233e7]        # 0x140027030
   140003c49:	test   eax,eax
   140003c4b:	je     0x140003c6b
   140003c4d:	call   QWORD PTR [rip+0x2381d]        # 0x140027470
   140003c53:	lea    r8,[rip+0x243de]        # 0x140028038
   140003c5a:	lea    rdx,[rsp+0x70]
   140003c5f:	mov    rcx,rax
   140003c62:	xor    r9d,r9d
   140003c65:	call   QWORD PTR [rip+0x23865]        # 0x1400274d0
   140003c6b:	lea    rcx,[rsp+0x70]
   140003c70:	lea    r9,[rsp+0x180]
   140003c78:	lea    rdx,[rip+0x24399]        # 0x140028018
   140003c7f:	mov    QWORD PTR [rsp+0x28],rcx
   140003c84:	mov    rcx,QWORD PTR [rip+0x340a5]        # 0x140037d30
   140003c8b:	mov    r8,r12
   140003c8e:	mov    QWORD PTR [rsp+0x20],rdi
   140003c93:	call   0x14000a190
   140003c98:	mov    eax,esi
   140003c9a:	mov    rcx,QWORD PTR [rsp+0x280]
   140003ca2:	xor    rcx,rsp
   140003ca5:	call   0x140009080
   140003caa:	lea    r11,[rsp+0x290]
   140003cb2:	mov    rbx,QWORD PTR [r11+0x28]
   140003cb6:	mov    rsi,QWORD PTR [r11+0x30]
   140003cba:	mov    rsp,r11
   140003cbd:	pop    r14
   140003cbf:	pop    r12
   140003cc1:	pop    rdi
   140003cc2:	ret    
   140003cc3:	int3   
   140003cc4:	sub    rsp,0x158
   140003ccb:	mov    rax,QWORD PTR [rip+0x305ce]        # 0x1400342a0
   140003cd2:	xor    rax,rsp
   140003cd5:	mov    QWORD PTR [rsp+0x140],rax
   140003cdd:	lea    rcx,[rsp+0x20]
   140003ce2:	call   0x140009454
   140003ce7:	lea    rcx,[rsp+0x20]
   140003cec:	call   0x140009408
   140003cf1:	lea    rcx,[rsp+0x20]
   140003cf6:	call   0x140009408
   140003cfb:	lea    r8,[rip+0x244ce]        # 0x1400281d0
   140003d02:	lea    rcx,[rsp+0x30]
   140003d07:	mov    r9,rax
   140003d0a:	mov    edx,0x105
   140003d0f:	call   0x14000c40c
   140003d14:	mov    rcx,QWORD PTR [rip+0x34015]        # 0x140037d30
   140003d1b:	lea    rdx,[rsp+0x30]
   140003d20:	call   0x14000a190
   140003d25:	mov    rcx,QWORD PTR [rip+0x34004]        # 0x140037d30
   140003d2c:	test   rcx,rcx
   140003d2f:	je     0x140003d36
   140003d31:	call   0x14000ab20
   140003d36:	mov    rcx,QWORD PTR [rsp+0x140]
   140003d3e:	xor    rcx,rsp
   140003d41:	call   0x140009080
   140003d46:	add    rsp,0x158
   140003d4d:	ret    
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	mov    QWORD PTR [rsp+0x10],rbp
   140003d55:	mov    QWORD PTR [rsp+0x18],rsi
   140003d5a:	push   rdi
   140003d5b:	sub    rsp,0x170
   140003d62:	mov    rax,QWORD PTR [rip+0x30537]        # 0x1400342a0
   140003d69:	xor    rax,rsp
   140003d6c:	mov    QWORD PTR [rsp+0x160],rax
   140003d74:	mov    rsi,rcx
   140003d77:	cmp    edx,0x4e
   140003d7a:	je     0x140003f61
   140003d80:	cmp    edx,0x110
   140003d86:	je     0x140003f02
   140003d8c:	cmp    edx,0x400
   140003d92:	jne    0x140003f88
   140003d98:	cmp    DWORD PTR [rip+0x33dc9],0x0        # 0x140037b68
   140003d9f:	je     0x140003f5a
   140003da5:	cmp    BYTE PTR [rip+0x329d4],0x0        # 0x140036780
   140003dac:	je     0x140003f5a
   140003db2:	and    QWORD PTR [rsp+0x38],0x0
   140003db8:	and    QWORD PTR [rsp+0x48],0x0
   140003dbe:	lea    rax,[rip+0x24513]        # 0x1400282d8
   140003dc5:	lea    r8,[rip+0x244dc]        # 0x1400282a8
   140003dcc:	mov    edx,0x3e8
   140003dd1:	mov    QWORD PTR [rsp+0x40],rax
   140003dd6:	call   QWORD PTR [rip+0x23754]        # 0x140027530
   140003ddc:	xor    edx,edx
   140003dde:	lea    rax,[rip+0x33e3b]        # 0x140037c20
   140003de5:	mov    al,BYTE PTR [rdx+rax*1]
   140003de8:	inc    rdx
   140003deb:	mov    BYTE PTR [rsp+rdx*1+0x4f],al
   140003def:	test   al,al
   140003df1:	jne    0x140003dde
   140003df3:	xor    eax,eax
   140003df5:	or     rdx,0xffffffffffffffff
   140003df9:	lea    rdi,[rsp+0x50]
   140003dfe:	mov    rcx,rdx
   140003e01:	repnz scas al,BYTE PTR es:[rdi]
   140003e03:	mov    rax,QWORD PTR [rip+0x2448e]        # 0x140028298
   140003e0a:	mov    rcx,rdx
   140003e0d:	mov    QWORD PTR [rdi-0x1],rax
   140003e11:	movzx  eax,WORD PTR [rip+0x24488]        # 0x1400282a0
   140003e18:	lea    rdx,[rip+0x32961]        # 0x140036780
   140003e1f:	mov    WORD PTR [rdi+0x7],ax
   140003e23:	xor    eax,eax
   140003e25:	lea    rdi,[rsp+0x50]
   140003e2a:	repnz scas al,BYTE PTR es:[rdi]
   140003e2c:	xor    ecx,ecx
   140003e2e:	mov    al,BYTE PTR [rdx+rcx*1]
   140003e31:	inc    rcx
   140003e34:	mov    BYTE PTR [rdi+rcx*1-0x2],al
   140003e38:	test   al,al
   140003e3a:	jne    0x140003e2e
   140003e3c:	mov    rcx,QWORD PTR [rip+0x33eed]        # 0x140037d30
   140003e43:	test   rcx,rcx
   140003e46:	je     0x140003e60
   140003e48:	lea    r9,[rsp+0x50]
   140003e4d:	lea    r8,[rip+0x32bcc]        # 0x140036a20
   140003e54:	lea    rdx,[rip+0x24425]        # 0x140028280
   140003e5b:	call   0x14000a190
   140003e60:	mov    edx,0x7f02
   140003e65:	xor    ecx,ecx
   140003e67:	call   QWORD PTR [rip+0x2364b]        # 0x1400274b8
   140003e6d:	mov    rcx,rax
   140003e70:	call   QWORD PTR [rip+0x2360a]        # 0x140027480
   140003e76:	lea    r9,[rsp+0x30]
   140003e7b:	lea    r8,[rsp+0x38]
   140003e80:	mov    rbp,rax
   140003e83:	lea    rax,[rsp+0x50]
   140003e88:	lea    rcx,[rsp+0x50]
   140003e8d:	mov    edx,0x2
   140003e92:	mov    QWORD PTR [rsp+0x38],rax
   140003e97:	call   0x140002254
   140003e9c:	mov    edi,eax
   140003e9e:	test   eax,eax
   140003ea0:	je     0x140003eba
   140003ea2:	call   0x14000a3b0
   140003ea7:	lea    rdx,[rip+0x243a2]        # 0x140028250
   140003eae:	mov    r8d,edi
   140003eb1:	lea    rcx,[rax+0x60]
   140003eb5:	call   0x14000a190
   140003eba:	mov    rdi,QWORD PTR [rsp+0x30]
   140003ebf:	test   rdi,rdi
   140003ec2:	je     0x140003ed5
   140003ec4:	mov    r8,rdi
   140003ec7:	mov    edx,0x3ec
   140003ecc:	mov    rcx,rsi
   140003ecf:	call   QWORD PTR [rip+0x2365b]        # 0x140027530
   140003ed5:	lea    r8,[rip+0x24324]        # 0x140028200
   140003edc:	mov    edx,0x3e8
   140003ee1:	mov    rcx,rsi
   140003ee4:	call   QWORD PTR [rip+0x23646]        # 0x140027530
   140003eea:	mov    rcx,rdi
   140003eed:	call   0x1400098ac
   140003ef2:	mov    rcx,rbp
   140003ef5:	call   QWORD PTR [rip+0x23585]        # 0x140027480
   140003efb:	call   0x140003cc4
   140003f00:	jmp    0x140003f5a
   140003f02:	mov    rax,QWORD PTR [rip+0x33e37]        # 0x140037d40
   140003f09:	test   rax,rax
   140003f0c:	je     0x140003f27
   140003f0e:	xor    r9d,r9d
   140003f11:	mov    edx,0x401
   140003f16:	mov    r8d,0x172
   140003f1c:	mov    QWORD PTR [rsp+0x20],rax
   140003f21:	call   QWORD PTR [rip+0x23569]        # 0x140027490
   140003f27:	cmp    DWORD PTR [rip+0x33c3a],0x0        # 0x140037b68
   140003f2e:	jne    0x140003f46
   140003f30:	call   0x14000186c
   140003f35:	mov    edx,0x3ec
   140003f3a:	mov    rcx,rsi
   140003f3d:	mov    r8,rax
   140003f40:	call   QWORD PTR [rip+0x235ea]        # 0x140027530
   140003f46:	xor    r9d,r9d
   140003f49:	xor    r8d,r8d
   140003f4c:	mov    edx,0x400
   140003f51:	mov    rcx,rsi
   140003f54:	call   QWORD PTR [rip+0x23546]        # 0x1400274a0
   140003f5a:	mov    eax,0x1
   140003f5f:	jmp    0x140003f8a
   140003f61:	cmp    DWORD PTR [r9+0x10],0xffffff38
   140003f69:	jne    0x140003f88
   140003f6b:	call   QWORD PTR [rip+0x23527]        # 0x140027498
   140003f71:	mov    r9d,0x4
   140003f77:	xor    r8d,r8d
   140003f7a:	mov    rcx,rax
   140003f7d:	mov    edx,0x470
   140003f82:	call   QWORD PTR [rip+0x23518]        # 0x1400274a0
   140003f88:	xor    eax,eax
   140003f8a:	mov    rcx,QWORD PTR [rsp+0x160]
   140003f92:	xor    rcx,rsp
   140003f95:	call   0x140009080
   140003f9a:	lea    r11,[rsp+0x170]
   140003fa2:	mov    rbp,QWORD PTR [r11+0x18]
   140003fa6:	mov    rsi,QWORD PTR [r11+0x20]
   140003faa:	mov    rsp,r11
   140003fad:	pop    rdi
   140003fae:	ret    
   140003faf:	int3   
   140003fb0:	sub    rsp,0x28
   140003fb4:	lea    rcx,[rip+0x23905]        # 0x1400278c0
   140003fbb:	call   QWORD PTR [rip+0x2327f]        # 0x140027240
   140003fc1:	test   rax,rax
   140003fc4:	jne    0x140003fca
   140003fc6:	xor    eax,eax
   140003fc8:	jmp    0x140003fe8
   140003fca:	lea    rdx,[rip+0x24317]        # 0x1400282e8
   140003fd1:	mov    rcx,rax
   140003fd4:	call   QWORD PTR [rip+0x2326e]        # 0x140027248
   140003fda:	mov    QWORD PTR [rip+0x318ff],rax        # 0x1400358e0
   140003fe1:	test   rax,rax
   140003fe4:	je     0x140003fc6
   140003fe6:	call   rax
   140003fe8:	add    rsp,0x28
   140003fec:	ret    
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	sub    rsp,0xa8
   140003ff7:	mov    rax,QWORD PTR [rip+0x302a2]        # 0x1400342a0
   140003ffe:	xor    rax,rsp
   140004001:	mov    QWORD PTR [rsp+0x90],rax
   140004009:	cmp    BYTE PTR [rip+0x33b70],0x0        # 0x140037b80
   140004010:	jne    0x140004016
   140004012:	xor    eax,eax
   140004014:	jmp    0x140004068
   140004016:	lea    r8,[rip+0x33b63]        # 0x140037b80
   14000401d:	lea    rdx,[rip+0x23dfc]        # 0x140027e20
   140004024:	lea    rcx,[rsp+0x40]
   140004029:	call   QWORD PTR [rip+0x23439]        # 0x140027468
   14000402f:	lea    r11,[rsp+0x30]
   140004034:	lea    rdx,[rsp+0x40]
   140004039:	mov    r9d,0x20019
   14000403f:	xor    r8d,r8d
   140004042:	mov    rcx,0xffffffff80000002
   140004049:	mov    QWORD PTR [rsp+0x20],r11
   14000404e:	call   QWORD PTR [rip+0x22fe4]        # 0x140027038
   140004054:	test   eax,eax
   140004056:	jne    0x140004012
   140004058:	mov    rcx,QWORD PTR [rsp+0x30]
   14000405d:	call   QWORD PTR [rip+0x22fad]        # 0x140027010
   140004063:	mov    eax,0x1
   140004068:	mov    rcx,QWORD PTR [rsp+0x90]
   140004070:	xor    rcx,rsp
   140004073:	call   0x140009080
   140004078:	add    rsp,0xa8
   14000407f:	ret    
   140004080:	sub    rsp,0xd8
   140004087:	mov    rax,QWORD PTR [rip+0x30212]        # 0x1400342a0
   14000408e:	xor    rax,rsp
   140004091:	mov    QWORD PTR [rsp+0xc0],rax
   140004099:	lea    rcx,[rsp+0x20]
   14000409e:	mov    DWORD PTR [rsp+0x20],0x94
   1400040a6:	call   QWORD PTR [rip+0x23044]        # 0x1400270f0
   1400040ac:	xor    ecx,ecx
   1400040ae:	cmp    eax,ecx
   1400040b0:	jne    0x1400040b6
   1400040b2:	xor    eax,eax
   1400040b4:	jmp    0x1400040cd
   1400040b6:	cmp    DWORD PTR [rsp+0x24],0x5
   1400040bb:	ja     0x1400040c6
   1400040bd:	jne    0x1400040cb
   1400040bf:	cmp    DWORD PTR [rsp+0x28],0x1
   1400040c4:	jb     0x1400040cb
   1400040c6:	mov    ecx,0x1
   1400040cb:	mov    eax,ecx
   1400040cd:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400040d5:	xor    rcx,rsp
   1400040d8:	call   0x140009080
   1400040dd:	add    rsp,0xd8
   1400040e4:	ret    
   1400040e5:	int3   
   1400040e6:	int3   
   1400040e7:	int3   
   1400040e8:	sub    rsp,0xc8
   1400040ef:	mov    rax,QWORD PTR [rip+0x301aa]        # 0x1400342a0
   1400040f6:	xor    rax,rsp
   1400040f9:	mov    QWORD PTR [rsp+0xb0],rax
   140004101:	lea    r9,[rip+0x23730]        # 0x140027838
   140004108:	lea    r8,[rip+0x327f1]        # 0x140036900
   14000410f:	lea    rdx,[rip+0x24226]        # 0x14002833c
   140004116:	xor    ecx,ecx
   140004118:	mov    DWORD PTR [rsp+0x28],0x1
   140004120:	and    QWORD PTR [rsp+0x20],0x0
   140004126:	call   QWORD PTR [rip+0x2332c]        # 0x140027458
   14000412c:	cmp    eax,0x20
   14000412f:	jg     0x140004160
   140004131:	lea    rdx,[rip+0x241c8]        # 0x140028300
   140004138:	lea    rcx,[rsp+0x30]
   14000413d:	mov    r8d,eax
   140004140:	call   QWORD PTR [rip+0x23322]        # 0x140027468
   140004146:	lea    r8,[rip+0x241ab]        # 0x1400282f8
   14000414d:	lea    rdx,[rsp+0x30]
   140004152:	mov    r9d,0x10
   140004158:	xor    ecx,ecx
   14000415a:	call   QWORD PTR [rip+0x23370]        # 0x1400274d0
   140004160:	mov    rcx,QWORD PTR [rsp+0xb0]
   140004168:	xor    rcx,rsp
   14000416b:	call   0x140009080
   140004170:	add    rsp,0xc8
   140004177:	ret    
   140004178:	mov    rax,QWORD PTR [rdx]
   14000417b:	mov    rdx,QWORD PTR [rcx]
   14000417e:	sub    rdx,rax
   140004181:	mov    cl,BYTE PTR [rax]
   140004183:	cmp    cl,BYTE PTR [rax+rdx*1]
   140004186:	jne    0x140004192
   140004188:	inc    rax
   14000418b:	test   cl,cl
   14000418d:	jne    0x140004181
   14000418f:	xor    eax,eax
   140004191:	ret    
   140004192:	sbb    eax,eax
   140004194:	sbb    eax,0xffffffff
   140004197:	ret    
   140004198:	rex push rbx
   14000419a:	sub    rsp,0x310
   1400041a1:	mov    rax,QWORD PTR [rip+0x300f8]        # 0x1400342a0
   1400041a8:	xor    rax,rsp
   1400041ab:	mov    QWORD PTR [rsp+0x300],rax
   1400041b3:	lea    rdx,[rsp+0xe0]
   1400041bb:	mov    r8d,0x104
   1400041c1:	xor    ecx,ecx
   1400041c3:	call   QWORD PTR [rip+0x22f5f]        # 0x140027128
   1400041c9:	lea    r8,[rsp+0xe0]
   1400041d1:	lea    rdx,[rip+0x241b0]        # 0x140028388
   1400041d8:	lea    rcx,[rsp+0x1f0]
   1400041e0:	call   0x14000c5f0
   1400041e5:	lea    rdx,[rip+0x24198]        # 0x140028384
   1400041ec:	lea    rcx,[rsp+0x1f0]
   1400041f4:	call   0x14000c580
   1400041f9:	lea    rdx,[rip+0x24178]        # 0x140028378
   140004200:	mov    rcx,rax
   140004203:	mov    rbx,rax
   140004206:	call   0x14000a190
   14000420b:	lea    r8,[rsp+0xe0]
   140004213:	lea    rdx,[rip+0x2414e]        # 0x140028368
   14000421a:	mov    rcx,rbx
   14000421d:	call   0x14000a190
   140004222:	lea    r8,[rsp+0xe0]
   14000422a:	lea    rdx,[rip+0x24117]        # 0x140028348
   140004231:	mov    rcx,rbx
   140004234:	call   0x14000a190
   140004239:	lea    r8,[rsp+0x1f0]
   140004241:	lea    rdx,[rip+0x24120]        # 0x140028368
   140004248:	mov    rcx,rbx
   14000424b:	call   0x14000a190
   140004250:	mov    rcx,rbx
   140004253:	call   0x14000ab20
   140004258:	mov    ebx,0x68
   14000425d:	lea    rcx,[rsp+0x70]
   140004262:	mov    r8,rbx
   140004265:	xor    edx,edx
   140004267:	call   0x140008a00
   14000426c:	lea    rax,[rsp+0x50]
   140004271:	mov    DWORD PTR [rsp+0x70],ebx
   140004275:	mov    QWORD PTR [rsp+0x48],rax
   14000427a:	xor    ebx,ebx
   14000427c:	lea    rax,[rsp+0x70]
   140004281:	mov    QWORD PTR [rsp+0x40],rax
   140004286:	lea    rax,[rip+0x2341b]        # 0x1400276a8
   14000428d:	lea    rdx,[rsp+0x1f0]
   140004295:	mov    QWORD PTR [rsp+0x38],rax
   14000429a:	mov    QWORD PTR [rsp+0x30],rbx
   14000429f:	xor    r9d,r9d
   1400042a2:	xor    r8d,r8d
   1400042a5:	xor    ecx,ecx
   1400042a7:	mov    DWORD PTR [rsp+0x28],0x44
   1400042af:	mov    DWORD PTR [rsp+0xac],0x1
   1400042ba:	mov    WORD PTR [rsp+0xb0],bx
   1400042c2:	mov    DWORD PTR [rsp+0x20],ebx
   1400042c6:	call   QWORD PTR [rip+0x22e54]        # 0x140027120
   1400042cc:	cmp    eax,ebx
   1400042ce:	je     0x140004325
   1400042d0:	mov    rcx,QWORD PTR [rsp+0x58]
   1400042d5:	lea    edx,[rbx-0xf]
   1400042d8:	call   QWORD PTR [rip+0x22e3a]        # 0x140027118
   1400042de:	call   QWORD PTR [rip+0x22e2c]        # 0x140027110
   1400042e4:	lea    edx,[rbx+0xf]
   1400042e7:	mov    rcx,rax
   1400042ea:	call   QWORD PTR [rip+0x22e28]        # 0x140027118
   1400042f0:	call   QWORD PTR [rip+0x22e12]        # 0x140027108
   1400042f6:	mov    edx,0x80
   1400042fb:	mov    rcx,rax
   1400042fe:	call   QWORD PTR [rip+0x22dfc]        # 0x140027100
   140004304:	mov    rcx,QWORD PTR [rsp+0x50]
   140004309:	call   QWORD PTR [rip+0x22f79]        # 0x140027288
   14000430f:	mov    rcx,QWORD PTR [rsp+0x58]
   140004314:	call   QWORD PTR [rip+0x22dde]        # 0x1400270f8
   14000431a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000431f:	call   QWORD PTR [rip+0x22f63]        # 0x140027288
   140004325:	mov    rcx,QWORD PTR [rsp+0x300]
   14000432d:	xor    rcx,rsp
   140004330:	call   0x140009080
   140004335:	add    rsp,0x310
   14000433c:	pop    rbx
   14000433d:	ret    
   14000433e:	int3   
   14000433f:	int3   
   140004340:	mov    QWORD PTR [rsp+0x8],rbx
   140004345:	mov    QWORD PTR [rsp+0x18],rbp
   14000434a:	mov    QWORD PTR [rsp+0x20],rsi
   14000434f:	push   rdi
   140004350:	sub    rsp,0x30
   140004354:	mov    rsi,rcx
   140004357:	call   0x14001e864
   14000435c:	mov    edx,0x5b
   140004361:	mov    rcx,rax
   140004364:	mov    rbp,rax
   140004367:	call   0x1400089d0
   14000436c:	mov    rdi,rax
   14000436f:	test   rax,rax
   140004372:	je     0x140004438
   140004378:	lea    rcx,[rax+0x1]
   14000437c:	mov    edx,0x5d
   140004381:	call   0x1400089d0
   140004386:	mov    rbx,rax
   140004389:	test   rax,rax
   14000438c:	je     0x140004438
   140004392:	lea    rcx,[rax+0x1]
   140004396:	mov    edx,0xa
   14000439b:	mov    BYTE PTR [rax],0x0
   14000439e:	call   0x1400089d0
   1400043a3:	test   rax,rax
   1400043a6:	je     0x1400043ab
   1400043a8:	mov    BYTE PTR [rax],0x0
   1400043ab:	mov    rcx,QWORD PTR [rip+0x2fc4e]        # 0x140034000
   1400043b2:	lea    rax,[rsp+0x48]
   1400043b7:	lea    rdx,[rdi+0x1]
   1400043bb:	mov    r9d,0x20006
   1400043c1:	xor    r8d,r8d
   1400043c4:	mov    QWORD PTR [rsp+0x20],rax
   1400043c9:	call   QWORD PTR [rip+0x22c69]        # 0x140027038
   1400043cf:	test   eax,eax
   1400043d1:	je     0x1400043f1
   1400043d3:	call   QWORD PTR [rip+0x23097]        # 0x140027470
   1400043d9:	lea    r8,[rip+0x23d48]        # 0x140028128
   1400043e0:	xor    r9d,r9d
   1400043e3:	mov    rcx,rax
   1400043e6:	mov    rdx,rsi
   1400043e9:	call   QWORD PTR [rip+0x230e1]        # 0x1400274d0
   1400043ef:	jmp    0x140004430
   1400043f1:	mov    rcx,QWORD PTR [rsp+0x48]
   1400043f6:	lea    rdx,[rbx+0x1]
   1400043fa:	call   QWORD PTR [rip+0x22c20]        # 0x140027020
   140004400:	test   eax,eax
   140004402:	je     0x140004425
   140004404:	cmp    eax,0x2
   140004407:	je     0x140004425
   140004409:	call   QWORD PTR [rip+0x23061]        # 0x140027470
   14000440f:	lea    r8,[rip+0x23f7a]        # 0x140028390
   140004416:	xor    r9d,r9d
   140004419:	mov    rcx,rax
   14000441c:	mov    rdx,rsi
   14000441f:	call   QWORD PTR [rip+0x230ab]        # 0x1400274d0
   140004425:	mov    rcx,QWORD PTR [rsp+0x48]
   14000442a:	call   QWORD PTR [rip+0x22be0]        # 0x140027010
   140004430:	mov    rcx,rbp
   140004433:	call   0x1400098ac
   140004438:	mov    rbx,QWORD PTR [rsp+0x40]
   14000443d:	mov    rbp,QWORD PTR [rsp+0x50]
   140004442:	mov    rsi,QWORD PTR [rsp+0x58]
   140004447:	add    rsp,0x30
   14000444b:	pop    rdi
   14000444c:	ret    
   14000444d:	int3   
   14000444e:	int3   
   14000444f:	int3   
   140004450:	mov    QWORD PTR [rsp+0x8],rbx
   140004455:	mov    QWORD PTR [rsp+0x18],rbp
   14000445a:	mov    QWORD PTR [rsp+0x20],rsi
   14000445f:	push   rdi
   140004460:	sub    rsp,0x30
   140004464:	mov    rsi,rcx
   140004467:	call   0x14001e864
   14000446c:	mov    edx,0x5b
   140004471:	mov    rcx,rax
   140004474:	mov    rbp,rax
   140004477:	call   0x1400089d0
   14000447c:	mov    rdi,rax
   14000447f:	test   rax,rax
   140004482:	je     0x14000454c
   140004488:	lea    rcx,[rax+0x1]
   14000448c:	mov    edx,0x5d
   140004491:	call   0x1400089d0
   140004496:	mov    rbx,rax
   140004499:	test   rax,rax
   14000449c:	je     0x14000454c
   1400044a2:	lea    rcx,[rax+0x1]
   1400044a6:	mov    edx,0x3d
   1400044ab:	mov    BYTE PTR [rax],0x0
   1400044ae:	call   0x1400089d0
   1400044b3:	test   rax,rax
   1400044b6:	je     0x14000454c
   1400044bc:	mov    BYTE PTR [rax],0x0
   1400044bf:	mov    rcx,QWORD PTR [rip+0x2fb3a]        # 0x140034000
   1400044c6:	lea    rax,[rsp+0x48]
   1400044cb:	lea    rdx,[rdi+0x1]
   1400044cf:	mov    r9d,0x20006
   1400044d5:	xor    r8d,r8d
   1400044d8:	mov    QWORD PTR [rsp+0x20],rax
   1400044dd:	call   QWORD PTR [rip+0x22b55]        # 0x140027038
   1400044e3:	test   eax,eax
   1400044e5:	je     0x140004505
   1400044e7:	call   QWORD PTR [rip+0x22f83]        # 0x140027470
   1400044ed:	lea    r8,[rip+0x23c34]        # 0x140028128
   1400044f4:	xor    r9d,r9d
   1400044f7:	mov    rcx,rax
   1400044fa:	mov    rdx,rsi
   1400044fd:	call   QWORD PTR [rip+0x22fcd]        # 0x1400274d0
   140004503:	jmp    0x140004544
   140004505:	mov    rcx,QWORD PTR [rsp+0x48]
   14000450a:	lea    rdx,[rbx+0x1]
   14000450e:	call   QWORD PTR [rip+0x22aec]        # 0x140027000
   140004514:	test   eax,eax
   140004516:	je     0x140004539
   140004518:	cmp    eax,0x2
   14000451b:	je     0x140004539
   14000451d:	call   QWORD PTR [rip+0x22f4d]        # 0x140027470
   140004523:	lea    r8,[rip+0x23e7e]        # 0x1400283a8
   14000452a:	xor    r9d,r9d
   14000452d:	mov    rcx,rax
   140004530:	mov    rdx,rsi
   140004533:	call   QWORD PTR [rip+0x22f97]        # 0x1400274d0
   140004539:	mov    rcx,QWORD PTR [rsp+0x48]
   14000453e:	call   QWORD PTR [rip+0x22acc]        # 0x140027010
   140004544:	mov    rcx,rbp
   140004547:	call   0x1400098ac
   14000454c:	mov    rbx,QWORD PTR [rsp+0x40]
   140004551:	mov    rbp,QWORD PTR [rsp+0x50]
   140004556:	mov    rsi,QWORD PTR [rsp+0x58]
   14000455b:	add    rsp,0x30
   14000455f:	pop    rdi
   140004560:	ret    
   140004561:	int3   
   140004562:	int3   
   140004563:	int3   
   140004564:	rex push rbx
   140004566:	sub    rsp,0x20
   14000456a:	mov    edx,0x3a
   14000456f:	call   0x1400089d0
   140004574:	mov    rbx,rax
   140004577:	test   rax,rax
   14000457a:	je     0x140004594
   14000457c:	inc    rbx
   14000457f:	movsx  ecx,BYTE PTR [rbx]
   140004582:	call   0x14000ccfc
   140004587:	test   eax,eax
   140004589:	jne    0x14000457c
   14000458b:	mov    rcx,rbx
   14000458e:	call   QWORD PTR [rip+0x22c9c]        # 0x140027230
   140004594:	add    rsp,0x20
   140004598:	pop    rbx
   140004599:	ret    
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	rex push rbx
   14000459e:	sub    rsp,0x20
   1400045a2:	mov    edx,0x3a
   1400045a7:	call   0x1400089d0
   1400045ac:	mov    rbx,rax
   1400045af:	test   rax,rax
   1400045b2:	je     0x1400045cc
   1400045b4:	inc    rbx
   1400045b7:	movsx  ecx,BYTE PTR [rbx]
   1400045ba:	call   0x14000ccfc
   1400045bf:	test   eax,eax
   1400045c1:	jne    0x1400045b4
   1400045c3:	mov    rcx,rbx
   1400045c6:	call   QWORD PTR [rip+0x22b64]        # 0x140027130
   1400045cc:	add    rsp,0x20
   1400045d0:	pop    rbx
   1400045d1:	ret    
   1400045d2:	int3   
   1400045d3:	int3   
   1400045d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400045d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400045de:	push   rdi
   1400045df:	sub    rsp,0x40
   1400045e3:	mov    edx,0x5b
   1400045e8:	call   0x1400089d0
   1400045ed:	test   rax,rax
   1400045f0:	jne    0x1400045f9
   1400045f2:	xor    eax,eax
   1400045f4:	jmp    0x1400046d6
   1400045f9:	lea    rcx,[rax+0x1]
   1400045fd:	mov    edx,0x5d
   140004602:	call   0x1400089d0
   140004607:	mov    rbx,rax
   14000460a:	test   rax,rax
   14000460d:	je     0x1400045f2
   14000460f:	inc    rbx
   140004612:	lea    rsi,[rip+0x311a7]        # 0x1400357c0
   140004619:	mov    BYTE PTR [rax],0x0
   14000461c:	mov    rdx,rbx
   14000461f:	mov    rax,rsi
   140004622:	sub    rdx,rsi
   140004625:	movzx  ecx,BYTE PTR [rax]
   140004628:	movzx  r8d,BYTE PTR [rax+rdx*1]
   14000462d:	sub    ecx,r8d
   140004630:	jne    0x14000463a
   140004632:	inc    rax
   140004635:	test   r8d,r8d
   140004638:	jne    0x140004625
   14000463a:	test   ecx,ecx
   14000463c:	je     0x1400046d1
   140004642:	and    QWORD PTR [rsp+0x30],0x0
   140004648:	and    QWORD PTR [rsp+0x58],0x0
   14000464e:	lea    rax,[rip+0x23db3]        # 0x140028408
   140004655:	lea    r9,[rsp+0x58]
   14000465a:	lea    r8,[rsp+0x20]
   14000465f:	mov    edx,0x2
   140004664:	mov    rcx,rbx
   140004667:	mov    QWORD PTR [rsp+0x28],rax
   14000466c:	mov    QWORD PTR [rsp+0x20],rbx
   140004671:	call   0x140002254
   140004676:	test   eax,eax
   140004678:	je     0x14000468f
   14000467a:	call   0x14000a3b0
   14000467f:	lea    rdx,[rip+0x23d52]        # 0x1400283d8
   140004686:	lea    rcx,[rax+0x60]
   14000468a:	call   0x14000a190
   14000468f:	mov    rdi,QWORD PTR [rsp+0x58]
   140004694:	test   rdi,rdi
   140004697:	je     0x1400046ba
   140004699:	cmp    BYTE PTR [rdi],0x0
   14000469c:	je     0x1400046ba
   14000469e:	call   QWORD PTR [rip+0x22dcc]        # 0x140027470
   1400046a4:	lea    r8,[rip+0x23d15]        # 0x1400283c0
   1400046ab:	xor    r9d,r9d
   1400046ae:	mov    rcx,rax
   1400046b1:	mov    rdx,rdi
   1400046b4:	call   QWORD PTR [rip+0x22e16]        # 0x1400274d0
   1400046ba:	mov    rcx,rdi
   1400046bd:	call   0x1400098ac
   1400046c2:	sub    rsi,rbx
   1400046c5:	mov    cl,BYTE PTR [rbx]
   1400046c7:	mov    BYTE PTR [rsi+rbx*1],cl
   1400046ca:	inc    rbx
   1400046cd:	test   cl,cl
   1400046cf:	jne    0x1400046c5
   1400046d1:	mov    eax,0x1
   1400046d6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400046db:	mov    rsi,QWORD PTR [rsp+0x60]
   1400046e0:	add    rsp,0x40
   1400046e4:	pop    rdi
   1400046e5:	ret    
   1400046e6:	int3   
   1400046e7:	int3   
   1400046e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400046ed:	mov    QWORD PTR [rsp+0x18],rbp
   1400046f2:	mov    QWORD PTR [rsp+0x20],rsi
   1400046f7:	push   rdi
   1400046f8:	push   r12
   1400046fa:	push   r13
   1400046fc:	push   r14
   1400046fe:	push   r15
   140004700:	mov    eax,0x1060
   140004705:	call   0x140025f10
   14000470a:	sub    rsp,rax
   14000470d:	mov    rax,QWORD PTR [rip+0x2fb8c]        # 0x1400342a0
   140004714:	xor    rax,rsp
   140004717:	mov    QWORD PTR [rsp+0x1050],rax
   14000471f:	xor    r15d,r15d
   140004722:	xor    r12d,r12d
   140004725:	xor    r14d,r14d
   140004728:	xor    ebp,ebp
   14000472a:	mov    rax,rdx
   14000472d:	mov    QWORD PTR [rsp+0x40],rdx
   140004732:	lea    r13d,[r15+0xa]
   140004736:	cmp    ecx,0x3
   140004739:	je     0x14000475a
   14000473b:	lea    rdx,[rip+0x23f0e]        # 0x140028650
   140004742:	xor    r9d,r9d
   140004745:	xor    r8d,r8d
   140004748:	xor    ecx,ecx
   14000474a:	call   QWORD PTR [rip+0x22d80]        # 0x1400274d0
   140004750:	mov    eax,0x1
   140004755:	jmp    0x140004b10
   14000475a:	mov    rsi,QWORD PTR [rdx+0x8]
   14000475e:	lea    rdi,[rip+0x23ee7]        # 0x14002864c
   140004765:	mov    ecx,0x3
   14000476a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000476c:	je     0x140004777
   14000476e:	lea    rdx,[rip+0x23ec3]        # 0x140028638
   140004775:	jmp    0x140004742
   140004777:	mov    rcx,QWORD PTR [rax+0x10]
   14000477b:	lea    rdx,[rip+0x23eae]        # 0x140028630
   140004782:	call   0x14000c580
   140004787:	mov    rsi,rax
   14000478a:	test   rax,rax
   14000478d:	jne    0x140004798
   14000478f:	lea    rdx,[rip+0x23e82]        # 0x140028618
   140004796:	jmp    0x140004742
   140004798:	mov    ecx,0x50
   14000479d:	call   0x14000993c
   1400047a2:	mov    rdi,rax
   1400047a5:	mov    QWORD PTR [rsp+0x38],rax
   1400047aa:	test   rax,rax
   1400047ad:	jne    0x1400047c2
   1400047af:	lea    rdx,[rip+0x23e52]        # 0x140028608
   1400047b6:	xor    ecx,ecx
   1400047b8:	call   0x14000270c
   1400047bd:	jmp    0x140004b10
   1400047c2:	lea    rcx,[rsp+0x50]
   1400047c7:	mov    r8,rsi
   1400047ca:	mov    edx,0x1000
   1400047cf:	call   0x14000d828
   1400047d4:	test   rax,rax
   1400047d7:	je     0x140004883
   1400047dd:	or     rcx,0xffffffffffffffff
   1400047e1:	xor    eax,eax
   1400047e3:	lea    rdi,[rsp+0x50]
   1400047e8:	repnz scas al,BYTE PTR es:[rdi]
   1400047ea:	not    rcx
   1400047ed:	dec    rcx
   1400047f0:	movsxd rdi,ecx
   1400047f3:	mov    rbx,rcx
   1400047f6:	movsx  ecx,BYTE PTR [rsp+rdi*1+0x4f]
   1400047fb:	call   0x14000ccfc
   140004800:	test   eax,eax
   140004802:	je     0x14000481a
   140004804:	lea    rdi,[rsp+rdi*1+0x4f]
   140004809:	dec    rdi
   14000480c:	dec    ebx
   14000480e:	movsx  ecx,BYTE PTR [rdi]
   140004811:	call   0x14000ccfc
   140004816:	test   eax,eax
   140004818:	jne    0x140004809
   14000481a:	movsxd rax,ebx
   14000481d:	lea    rcx,[rsp+0x50]
   140004822:	mov    BYTE PTR [rsp+rax*1+0x50],bpl
   140004827:	call   0x14001e864
   14000482c:	mov    rdi,QWORD PTR [rsp+0x38]
   140004831:	inc    r15d
   140004834:	mov    QWORD PTR [r14+rdi*1],rax
   140004838:	add    r14,0x8
   14000483c:	cmp    r15d,r13d
   14000483f:	jl     0x140004865
   140004841:	add    r13d,0xa
   140004845:	mov    rcx,rdi
   140004848:	movsxd rdx,r13d
   14000484b:	shl    rdx,0x3
   14000484f:	call   0x14000d754
   140004854:	mov    rdi,rax
   140004857:	mov    QWORD PTR [rsp+0x38],rax
   14000485c:	test   rax,rax
   14000485f:	je     0x1400047af
   140004865:	lea    rcx,[rsp+0x50]
   14000486a:	mov    r8,rsi
   14000486d:	mov    edx,0x1000
   140004872:	call   0x14000d828
   140004877:	test   rax,rax
   14000487a:	jne    0x1400047dd
   140004880:	mov    r14d,ebp
   140004883:	mov    rcx,rsi
   140004886:	call   0x14000ab20
   14000488b:	movsxd r15,r15d
   14000488e:	lea    r9,[rip+0xfffffffffffff8e3]        # 0x140004178
   140004895:	mov    rdx,r15
   140004898:	mov    r8d,0x8
   14000489e:	mov    rcx,rdi
   1400048a1:	call   0x14000d450
   1400048a6:	lea    r8,[rip+0x23d4b]        # 0x1400285f8
   1400048ad:	lea    rdx,[rip+0x23cfc]        # 0x1400285b0
   1400048b4:	mov    r9d,0x24
   1400048ba:	xor    ecx,ecx
   1400048bc:	call   QWORD PTR [rip+0x22c0e]        # 0x1400274d0
   1400048c2:	cmp    eax,0x6
   1400048c5:	jne    0x140004b0e
   1400048cb:	xor    r13d,r13d
   1400048ce:	mov    QWORD PTR [rip+0x2f727],0xffffffff80000002        # 0x140034000
   1400048d9:	lea    rbx,[rip+0x22f58]        # 0x140027838
   1400048e0:	test   r15,r15
   1400048e3:	jle    0x140004a77
   1400048e9:	mov    rdi,QWORD PTR [rdi+r13*8]
   1400048ed:	mov    rax,rbx
   1400048f0:	sub    rdi,rbx
   1400048f3:	movzx  ecx,BYTE PTR [rax]
   1400048f6:	movzx  edx,BYTE PTR [rax+rdi*1]
   1400048fa:	sub    ecx,edx
   1400048fc:	jne    0x140004905
   1400048fe:	inc    rax
   140004901:	test   edx,edx
   140004903:	jne    0x1400048f3
   140004905:	mov    rdi,QWORD PTR [rsp+0x38]
   14000490a:	test   ecx,ecx
   14000490c:	je     0x140004a6b
   140004912:	mov    rbx,QWORD PTR [rdi+r13*8]
   140004916:	lea    r9,[rsp+0x50]
   14000491b:	lea    r8,[rsp+0x30]
   140004920:	lea    rdx,[rip+0x23c71]        # 0x140028598
   140004927:	mov    rcx,rbx
   14000492a:	call   0x14000a9bc
   14000492f:	cmp    eax,0x2
   140004932:	jne    0x14000496b
   140004934:	lea    rsi,[rsp+0x50]
   140004939:	lea    rdi,[rip+0x23860]        # 0x1400281a0
   140004940:	lea    ecx,[rax+0x10]
   140004943:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140004945:	jne    0x140004954
   140004947:	mov    QWORD PTR [rip+0x2f6ae],0xffffffff80000001        # 0x140034000
   140004952:	jmp    0x140004961
   140004954:	call   0x140003350
   140004959:	test   eax,eax
   14000495b:	je     0x140004a8f
   140004961:	mov    rdi,QWORD PTR [rsp+0x38]
   140004966:	jmp    0x140004a6b
   14000496b:	lea    r9,[rsp+0x50]
   140004970:	lea    r8,[rsp+0x30]
   140004975:	lea    rdx,[rip+0x23c0c]        # 0x140028588
   14000497c:	mov    rcx,rbx
   14000497f:	call   0x14000a9bc
   140004984:	mov    rcx,rbx
   140004987:	cmp    eax,0x2
   14000498a:	jne    0x14000499d
   14000498c:	call   0x14000459c
   140004991:	test   eax,eax
   140004993:	je     0x140004a0f
   140004995:	inc    r14d
   140004998:	jmp    0x140004a6b
   14000499d:	lea    r9,[rsp+0x50]
   1400049a2:	lea    r8,[rsp+0x30]
   1400049a7:	lea    rdx,[rip+0x23bc2]        # 0x140028570
   1400049ae:	call   0x14000a9bc
   1400049b3:	mov    rcx,rbx
   1400049b6:	cmp    eax,0x2
   1400049b9:	jne    0x1400049cc
   1400049bb:	call   0x140004564
   1400049c0:	test   eax,eax
   1400049c2:	je     0x140004a0f
   1400049c4:	inc    r12d
   1400049c7:	jmp    0x140004a6b
   1400049cc:	lea    r9,[rsp+0x50]
   1400049d1:	lea    r8,[rsp+0x30]
   1400049d6:	lea    rdx,[rip+0x23b7b]        # 0x140028558
   1400049dd:	call   0x14000a9bc
   1400049e2:	mov    rcx,rbx
   1400049e5:	cmp    eax,0x2
   1400049e8:	je     0x1400049bb
   1400049ea:	lea    r9,[rsp+0x50]
   1400049ef:	lea    r8,[rsp+0x30]
   1400049f4:	lea    rdx,[rip+0x23b45]        # 0x140028540
   1400049fb:	call   0x14000a9bc
   140004a00:	mov    rcx,rbx
   140004a03:	cmp    eax,0x2
   140004a06:	jne    0x140004a23
   140004a08:	call   0x140004340
   140004a0d:	jmp    0x140004a6b
   140004a0f:	call   QWORD PTR [rip+0x2285b]        # 0x140027270
   140004a15:	cmp    eax,0x2
   140004a18:	je     0x140004a6b
   140004a1a:	cmp    eax,0x3
   140004a1d:	je     0x140004a6b
   140004a1f:	inc    ebp
   140004a21:	jmp    0x140004a6b
   140004a23:	lea    r9,[rsp+0x50]
   140004a28:	lea    r8,[rsp+0x30]
   140004a2d:	lea    rdx,[rip+0x23af4]        # 0x140028528
   140004a34:	call   0x14000a9bc
   140004a39:	mov    rcx,rbx
   140004a3c:	cmp    eax,0x2
   140004a3f:	jne    0x140004a48
   140004a41:	call   0x140004450
   140004a46:	jmp    0x140004a6b
   140004a48:	lea    r9,[rsp+0x50]
   140004a4d:	lea    r8,[rsp+0x30]
   140004a52:	lea    rdx,[rip+0x23ab7]        # 0x140028510
   140004a59:	call   0x14000a9bc
   140004a5e:	cmp    eax,0x2
   140004a61:	jne    0x140004a6b
   140004a63:	mov    rcx,rbx
   140004a66:	call   0x1400045d4
   140004a6b:	inc    r13
   140004a6e:	cmp    r13,r15
   140004a71:	jl     0x1400048e9
   140004a77:	mov    rdi,QWORD PTR [rsp+0x40]
   140004a7c:	mov    rcx,QWORD PTR [rdi+0x10]
   140004a80:	call   QWORD PTR [rip+0x227aa]        # 0x140027230
   140004a86:	test   eax,eax
   140004a88:	je     0x140004aad
   140004a8a:	inc    r12d
   140004a8d:	jmp    0x140004ac0
   140004a8f:	call   QWORD PTR [rip+0x229db]        # 0x140027470
   140004a95:	mov    r9d,0x10
   140004a9b:	xor    r8d,r8d
   140004a9e:	mov    rcx,rax
   140004aa1:	lea    rdx,[rip+0x23a08]        # 0x1400284b0
   140004aa8:	jmp    0x14000474a
   140004aad:	inc    ebp
   140004aaf:	call   QWORD PTR [rip+0x227bb]        # 0x140027270
   140004ab5:	mov    rdx,QWORD PTR [rdi+0x10]
   140004ab9:	mov    ecx,eax
   140004abb:	call   0x14000270c
   140004ac0:	mov    r9d,r14d
   140004ac3:	mov    r8d,r12d
   140004ac6:	lea    rcx,[rsp+0x50]
   140004acb:	test   ebp,ebp
   140004acd:	je     0x140004ae2
   140004acf:	lea    rdx,[rip+0x2397a]        # 0x140028450
   140004ad6:	mov    DWORD PTR [rsp+0x20],ebp
   140004ada:	call   QWORD PTR [rip+0x22988]        # 0x140027468
   140004ae0:	jmp    0x140004aef
   140004ae2:	lea    rdx,[rip+0x2393f]        # 0x140028428
   140004ae9:	call   QWORD PTR [rip+0x22979]        # 0x140027468
   140004aef:	lea    r8,[rip+0x2391a]        # 0x140028410
   140004af6:	lea    rdx,[rsp+0x50]
   140004afb:	mov    r9d,0x40
   140004b01:	xor    ecx,ecx
   140004b03:	call   QWORD PTR [rip+0x229c7]        # 0x1400274d0
   140004b09:	call   0x140004198
   140004b0e:	xor    eax,eax
   140004b10:	mov    rcx,QWORD PTR [rsp+0x1050]
   140004b18:	xor    rcx,rsp
   140004b1b:	call   0x140009080
   140004b20:	lea    r11,[rsp+0x1060]
   140004b28:	mov    rbx,QWORD PTR [r11+0x30]
   140004b2c:	mov    rbp,QWORD PTR [r11+0x40]
   140004b30:	mov    rsi,QWORD PTR [r11+0x48]
   140004b34:	mov    rsp,r11
   140004b37:	pop    r15
   140004b39:	pop    r14
   140004b3b:	pop    r13
   140004b3d:	pop    r12
   140004b3f:	pop    rdi
   140004b40:	ret    
   140004b41:	int3   
   140004b42:	int3   
   140004b43:	int3   
   140004b44:	mov    QWORD PTR [rsp+0x18],rbx
   140004b49:	mov    QWORD PTR [rsp+0x20],rbp
   140004b4e:	push   rsi
   140004b4f:	push   rdi
   140004b50:	push   r12
   140004b52:	sub    rsp,0x190
   140004b59:	mov    rax,QWORD PTR [rip+0x2f740]        # 0x1400342a0
   140004b60:	xor    rax,rsp
   140004b63:	mov    QWORD PTR [rsp+0x180],rax
   140004b6b:	mov    rax,QWORD PTR [rip+0x30d66]        # 0x1400358d8
   140004b72:	xor    edi,edi
   140004b74:	mov    ebx,edx
   140004b76:	xor    r8d,r8d
   140004b79:	mov    r12,rcx
   140004b7c:	jmp    0x140004b85
   140004b7e:	mov    rax,QWORD PTR [rax+0x8]
   140004b82:	inc    r8d
   140004b85:	test   rax,rax
   140004b88:	jne    0x140004b7e
   140004b8a:	mov    rcx,QWORD PTR [rip+0x3306f]        # 0x140037c00
   140004b91:	movzx  eax,r8w
   140004b95:	mov    edx,0x3eb
   140004b9a:	shl    eax,0x10
   140004b9d:	lea    r8d,[rdx+0x16]
   140004ba1:	xor    r9d,r9d
   140004ba4:	mov    QWORD PTR [rsp+0x20],rax
   140004ba9:	call   QWORD PTR [rip+0x228e1]        # 0x140027490
   140004baf:	mov    rcx,QWORD PTR [rip+0x3304a]        # 0x140037c00
   140004bb6:	and    QWORD PTR [rsp+0x20],rdi
   140004bbb:	mov    edx,0x3eb
   140004bc0:	xor    r9d,r9d
   140004bc3:	lea    r8d,[rdx+0x17]
   140004bc7:	call   QWORD PTR [rip+0x228c3]        # 0x140027490
   140004bcd:	mov    rbp,QWORD PTR [rip+0x30d04]        # 0x1400358d8
   140004bd4:	xor    esi,esi
   140004bd6:	test   rbp,rbp
   140004bd9:	je     0x140004c77
   140004bdf:	neg    ebx
   140004be1:	sbb    ebx,ebx
   140004be3:	and    ebx,0xc
   140004be6:	mov    r8,QWORD PTR [rbp+0x0]
   140004bea:	lea    rdx,[rip+0x23a7f]        # 0x140028670
   140004bf1:	lea    rcx,[rsp+0x30]
   140004bf6:	inc    esi
   140004bf8:	call   QWORD PTR [rip+0x2286a]        # 0x140027468
   140004bfe:	lea    rcx,[rsp+0x30]
   140004c03:	call   r12
   140004c06:	test   eax,eax
   140004c08:	je     0x140004c0c
   140004c0a:	inc    edi
   140004c0c:	mov    r8,QWORD PTR [rbp+0x0]
   140004c10:	lea    r9d,[rbx+0x63]
   140004c14:	lea    rdx,[rip+0x23a4d]        # 0x140028668
   140004c1b:	lea    rcx,[rsp+0x30]
   140004c20:	call   QWORD PTR [rip+0x22842]        # 0x140027468
   140004c26:	lea    rdx,[rsp+0x30]
   140004c2b:	mov    ecx,0x3
   140004c30:	call   0x1400027e8
   140004c35:	mov    rcx,QWORD PTR [rip+0x32fc4]        # 0x140037c00
   140004c3c:	and    QWORD PTR [rsp+0x20],0x0
   140004c42:	mov    edx,0x3eb
   140004c47:	movsxd r9,esi
   140004c4a:	lea    r8d,[rdx+0x17]
   140004c4e:	call   QWORD PTR [rip+0x2283c]        # 0x140027490
   140004c54:	mov    r8,QWORD PTR [rbp+0x0]
   140004c58:	mov    rcx,QWORD PTR [rip+0x32fa1]        # 0x140037c00
   140004c5f:	mov    edx,0x3ec
   140004c64:	call   QWORD PTR [rip+0x228c6]        # 0x140027530
   140004c6a:	mov    rbp,QWORD PTR [rbp+0x8]
   140004c6e:	test   rbp,rbp
   140004c71:	jne    0x140004be6
   140004c77:	mov    eax,edi
   140004c79:	mov    rcx,QWORD PTR [rsp+0x180]
   140004c81:	xor    rcx,rsp
   140004c84:	call   0x140009080
   140004c89:	lea    r11,[rsp+0x190]
   140004c91:	mov    rbx,QWORD PTR [r11+0x30]
   140004c95:	mov    rbp,QWORD PTR [r11+0x38]
   140004c99:	mov    rsp,r11
   140004c9c:	pop    r12
   140004c9e:	pop    rdi
   140004c9f:	pop    rsi
   140004ca0:	ret    
   140004ca1:	int3   
   140004ca2:	int3   
   140004ca3:	int3   
   140004ca4:	mov    rax,rsp
   140004ca7:	mov    QWORD PTR [rax+0x8],rbx
   140004cab:	mov    QWORD PTR [rax+0x10],rbp
   140004caf:	mov    QWORD PTR [rax+0x18],rsi
   140004cb3:	mov    QWORD PTR [rax+0x20],rdi
   140004cb7:	push   r12
   140004cb9:	push   r13
   140004cbb:	push   r14
   140004cbd:	sub    rsp,0x20
   140004cc1:	mov    r13d,edx
   140004cc4:	lea    rdx,[rip+0x22ef5]        # 0x140027bc0
   140004ccb:	mov    rbx,rcx
   140004cce:	call   QWORD PTR [rip+0x22574]        # 0x140027248
   140004cd4:	lea    rdx,[rip+0x22f25]        # 0x140027c00
   140004cdb:	mov    rcx,rbx
   140004cde:	mov    rdi,rax
   140004ce1:	call   QWORD PTR [rip+0x22561]        # 0x140027248
   140004ce7:	lea    rdx,[rip+0x22e9a]        # 0x140027b88
   140004cee:	mov    rcx,rbx
   140004cf1:	mov    rsi,rax
   140004cf4:	call   QWORD PTR [rip+0x2254e]        # 0x140027248
   140004cfa:	lea    rdx,[rip+0x22e97]        # 0x140027b98
   140004d01:	mov    rcx,rbx
   140004d04:	mov    rbp,rax
   140004d07:	call   QWORD PTR [rip+0x2253b]        # 0x140027248
   140004d0d:	lea    rdx,[rip+0x2399c]        # 0x1400286b0
   140004d14:	mov    rcx,rbx
   140004d17:	mov    r12,rax
   140004d1a:	call   QWORD PTR [rip+0x22528]        # 0x140027248
   140004d20:	lea    rdx,[rip+0x23979]        # 0x1400286a0
   140004d27:	mov    rcx,rbx
   140004d2a:	mov    r14,rax
   140004d2d:	call   QWORD PTR [rip+0x22515]        # 0x140027248
   140004d33:	xor    ecx,ecx
   140004d35:	cmp    QWORD PTR [rip+0x30b9c],rcx        # 0x1400358d8
   140004d3c:	jne    0x140004d42
   140004d3e:	xor    eax,eax
   140004d40:	jmp    0x140004d89
   140004d42:	cmp    rdi,rcx
   140004d45:	je     0x140004d86
   140004d47:	cmp    rsi,rcx
   140004d4a:	je     0x140004d86
   140004d4c:	cmp    rbp,rcx
   140004d4f:	je     0x140004d86
   140004d51:	cmp    r12,rcx
   140004d54:	je     0x140004d86
   140004d56:	cmp    r14,rcx
   140004d59:	je     0x140004d86
   140004d5b:	cmp    rax,rcx
   140004d5e:	je     0x140004d86
   140004d60:	cmp    r13d,ecx
   140004d63:	setne  cl
   140004d66:	mov    DWORD PTR [rax],ecx
   140004d68:	lea    rcx,[rip+0x31b91]        # 0x140036900
   140004d6f:	call   rsi
   140004d71:	call   rdi
   140004d73:	mov    edx,r13d
   140004d76:	mov    rcx,r12
   140004d79:	call   0x140004b44
   140004d7e:	mov    ebx,eax
   140004d80:	call   rbp
   140004d82:	mov    eax,ebx
   140004d84:	jmp    0x140004d89
   140004d86:	or     eax,0xffffffff
   140004d89:	mov    rbx,QWORD PTR [rsp+0x40]
   140004d8e:	mov    rbp,QWORD PTR [rsp+0x48]
   140004d93:	mov    rsi,QWORD PTR [rsp+0x50]
   140004d98:	mov    rdi,QWORD PTR [rsp+0x58]
   140004d9d:	add    rsp,0x20
   140004da1:	pop    r14
   140004da3:	pop    r13
   140004da5:	pop    r12
   140004da7:	ret    
   140004da8:	sub    rsp,0x28
   140004dac:	mov    rcx,rdx
   140004daf:	lea    r8,[rsp+0x40]
   140004db4:	lea    rdx,[rip+0x22ad1]        # 0x14002788c
   140004dbb:	call   QWORD PTR [rip+0x31d67]        # 0x140036b28
   140004dc1:	test   eax,eax
   140004dc3:	jne    0x140004dc9
   140004dc5:	xor    eax,eax
   140004dc7:	jmp    0x140004de5
   140004dc9:	mov    rdx,QWORD PTR [rsp+0x40]
   140004dce:	mov    ecx,0x3
   140004dd3:	call   0x1400027e8
   140004dd8:	lea    rcx,[rip+0x22a59]        # 0x140027838
   140004ddf:	call   QWORD PTR [rip+0x32e0b]        # 0x140037bf0
   140004de5:	add    rsp,0x28
   140004de9:	ret    
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	sub    rsp,0x28
   140004df0:	mov    rcx,rdx
   140004df3:	lea    r8,[rsp+0x40]
   140004df8:	lea    rdx,[rip+0x22a8d]        # 0x14002788c
   140004dff:	call   QWORD PTR [rip+0x31d23]        # 0x140036b28
   140004e05:	test   eax,eax
   140004e07:	jne    0x140004e0d
   140004e09:	xor    eax,eax
   140004e0b:	jmp    0x140004e29
   140004e0d:	mov    rdx,QWORD PTR [rsp+0x40]
   140004e12:	mov    ecx,0x1
   140004e17:	call   0x1400027e8
   140004e1c:	lea    rcx,[rip+0x22a15]        # 0x140027838
   140004e23:	call   QWORD PTR [rip+0x32dc7]        # 0x140037bf0
   140004e29:	add    rsp,0x28
   140004e2d:	ret    
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	rex push rbx
   140004e32:	push   rbp
   140004e33:	push   rsi
   140004e34:	push   rdi
   140004e35:	push   r12
   140004e37:	mov    eax,0x1040
   140004e3c:	call   0x140025f10
   140004e41:	sub    rsp,rax
   140004e44:	mov    rax,QWORD PTR [rip+0x2f455]        # 0x1400342a0
   140004e4b:	xor    rax,rsp
   140004e4e:	mov    QWORD PTR [rsp+0x1030],rax
   140004e56:	sub    edx,0x4e
   140004e59:	mov    rsi,r9
   140004e5c:	mov    rbx,rcx
   140004e5f:	je     0x140004f3d
   140004e65:	sub    edx,0xc2
   140004e6b:	je     0x140004ed0
   140004e6d:	sub    edx,0x2f1
   140004e73:	je     0x140004eaa
   140004e75:	cmp    edx,0x1
   140004e78:	jne    0x140005184
   140004e7e:	mov    edx,0x3eb
   140004e83:	mov    r9,r8
   140004e86:	xor    edi,edi
   140004e88:	lea    r8d,[rdx+0x17]
   140004e8c:	mov    QWORD PTR [rsp+0x20],rdi
   140004e91:	call   QWORD PTR [rip+0x225f9]        # 0x140027490
   140004e97:	mov    r8,rsi
   140004e9a:	mov    edx,0x3ec
   140004e9f:	mov    rcx,rbx
   140004ea2:	call   QWORD PTR [rip+0x22688]        # 0x140027530
   140004ea8:	jmp    0x140004ec1
   140004eaa:	mov    edx,0x3eb
   140004eaf:	mov    QWORD PTR [rsp+0x20],r9
   140004eb4:	xor    r9d,r9d
   140004eb7:	lea    r8d,[rdx+0x16]
   140004ebb:	call   QWORD PTR [rip+0x225cf]        # 0x140027490
   140004ec1:	call   0x140002c68
   140004ec6:	mov    eax,0x1
   140004ecb:	jmp    0x140005186
   140004ed0:	mov    rax,QWORD PTR [rip+0x32e69]        # 0x140037d40
   140004ed7:	xor    edi,edi
   140004ed9:	cmp    rax,rdi
   140004edc:	je     0x140004ef7
   140004ede:	xor    r9d,r9d
   140004ee1:	mov    edx,0x401
   140004ee6:	mov    r8d,0x172
   140004eec:	mov    QWORD PTR [rsp+0x20],rax
   140004ef1:	call   QWORD PTR [rip+0x22599]        # 0x140027490
   140004ef7:	lea    r8,[rip+0x319a2]        # 0x1400368a0
   140004efe:	lea    rdx,[rip+0x2388b]        # 0x140028790
   140004f05:	lea    rcx,[rsp+0x30]
   140004f0a:	call   QWORD PTR [rip+0x22558]        # 0x140027468
   140004f10:	lea    r8,[rsp+0x30]
   140004f15:	mov    edx,0x3e8
   140004f1a:	mov    rcx,rbx
   140004f1d:	call   QWORD PTR [rip+0x2260d]        # 0x140027530
   140004f23:	lea    r8,[rip+0x2384e]        # 0x140028778
   140004f2a:	mov    edx,0x3ec
   140004f2f:	mov    rcx,rbx
   140004f32:	call   QWORD PTR [rip+0x225f8]        # 0x140027530
   140004f38:	jmp    0x140005184
   140004f3d:	cmp    DWORD PTR [r9+0x10],0xffffff31
   140004f45:	je     0x140004f77
   140004f47:	cmp    DWORD PTR [r9+0x10],0xffffff38
   140004f4f:	jne    0x140005184
   140004f55:	call   QWORD PTR [rip+0x2253d]        # 0x140027498
   140004f5b:	mov    r9d,0x3
   140004f61:	xor    r8d,r8d
   140004f64:	mov    rcx,rax
   140004f67:	mov    edx,0x470
   140004f6c:	call   QWORD PTR [rip+0x2252e]        # 0x1400274a0
   140004f72:	jmp    0x140005184
   140004f77:	mov    QWORD PTR [rip+0x32c82],rcx        # 0x140037c00
   140004f7e:	mov    DWORD PTR [rip+0x32be0],0x1        # 0x140037b68
   140004f88:	call   QWORD PTR [rip+0x2250a]        # 0x140027498
   140004f8e:	xor    r9d,r9d
   140004f91:	xor    r8d,r8d
   140004f94:	mov    edx,0x470
   140004f99:	mov    rcx,rax
   140004f9c:	call   QWORD PTR [rip+0x224fe]        # 0x1400274a0
   140004fa2:	mov    rcx,rbx
   140004fa5:	call   QWORD PTR [rip+0x224ed]        # 0x140027498
   140004fab:	xor    r9d,r9d
   140004fae:	xor    r8d,r8d
   140004fb1:	mov    rcx,rax
   140004fb4:	mov    edx,0x46b
   140004fb9:	call   QWORD PTR [rip+0x22569]        # 0x140027528
   140004fbf:	lea    r12,[rip+0x32c5a]        # 0x140037c20
   140004fc6:	or     rdx,0xffffffffffffffff
   140004fca:	xor    eax,eax
   140004fcc:	mov    rcx,rdx
   140004fcf:	mov    rdi,r12
   140004fd2:	repnz scas al,BYTE PTR es:[rdi]
   140004fd4:	not    rcx
   140004fd7:	cmp    BYTE PTR [rcx+r12*1-0x2],0x5c
   140004fdd:	je     0x140004ff2
   140004fdf:	mov    rdi,r12
   140004fe2:	mov    rcx,rdx
   140004fe5:	repnz scas al,BYTE PTR es:[rdi]
   140004fe7:	movzx  eax,WORD PTR [rip+0x226ba]        # 0x1400276a8
   140004fee:	mov    WORD PTR [rdi-0x1],ax
   140004ff2:	xor    eax,eax
   140004ff4:	mov    rcx,rdx
   140004ff7:	mov    rdi,r12
   140004ffa:	repnz scas al,BYTE PTR es:[rdi]
   140004ffc:	xor    edi,edi
   140004ffe:	not    rcx
   140005001:	mov    BYTE PTR [rcx+r12*1-0x2],dil
   140005006:	mov    rcx,rbx
   140005009:	call   0x1400033a8
   14000500e:	mov    rcx,r12
   140005011:	call   0x1400038a8
   140005016:	cmp    eax,edi
   140005018:	je     0x140005184
   14000501e:	mov    edx,DWORD PTR [rip+0x32b74]        # 0x140037b98
   140005024:	mov    ecx,DWORD PTR [rip+0x32b42]        # 0x140037b6c
   14000502a:	call   0x140003414
   14000502f:	mov    rcx,QWORD PTR [rip+0x31b1a]        # 0x140036b50
   140005036:	mov    esi,0x3e8
   14000503b:	mov    rbp,rax
   14000503e:	cmp    rcx,rdi
   140005041:	je     0x140005066
   140005043:	cmp    BYTE PTR [rcx],dil
   140005046:	je     0x140005066
   140005048:	lea    r8,[rip+0x23709]        # 0x140028758
   14000504f:	mov    edx,esi
   140005051:	mov    rcx,rbx
   140005054:	call   QWORD PTR [rip+0x224d6]        # 0x140027530
   14000505a:	mov    rcx,QWORD PTR [rip+0x31aef]        # 0x140036b50
   140005061:	call   0x1400024f8
   140005066:	cmp    DWORD PTR [rip+0x32afc],edi        # 0x140037b68
   14000506c:	je     0x140005184
   140005072:	lea    r8,[rip+0x236c7]        # 0x140028740
   140005079:	mov    edx,esi
   14000507b:	mov    rcx,rbx
   14000507e:	call   QWORD PTR [rip+0x224ac]        # 0x140027530
   140005084:	mov    r9d,DWORD PTR [rip+0x31681]        # 0x14003670c
   14000508b:	mov    r8,QWORD PTR [rip+0x32b66]        # 0x140037bf8
   140005092:	lea    r11,[rip+0xffffffffffffd74f]        # 0x1400027e8
   140005099:	mov    rdx,r12
   14000509c:	mov    rcx,rbp
   14000509f:	mov    QWORD PTR [rsp+0x20],r11
   1400050a4:	call   0x1400013f8
   1400050a9:	cmp    eax,edi
   1400050ab:	jne    0x1400050b9
   1400050ad:	lea    rcx,[rip+0x23664]        # 0x140028718
   1400050b4:	call   0x140001834
   1400050b9:	cmp    DWORD PTR [rip+0x32aa9],edi        # 0x140037b68
   1400050bf:	je     0x140005184
   1400050c5:	cmp    DWORD PTR [rip+0x316a9],edi        # 0x140036774
   1400050cb:	je     0x14000511f
   1400050cd:	lea    r8,[rip+0x23624]        # 0x1400286f8
   1400050d4:	mov    edx,esi
   1400050d6:	mov    rcx,rbx
   1400050d9:	call   QWORD PTR [rip+0x22451]        # 0x140027530
   1400050df:	mov    rcx,QWORD PTR [rip+0x32b1a]        # 0x140037c00
   1400050e6:	lea    r8,[rip+0x235f3]        # 0x1400286e0
   1400050ed:	mov    edx,0x3ec
   1400050f2:	call   QWORD PTR [rip+0x22438]        # 0x140027530
   1400050f8:	lea    rcx,[rip+0x31921]        # 0x140036a20
   1400050ff:	call   0x140001d30
   140005104:	mov    rbp,rax
   140005107:	cmp    rax,rdi
   14000510a:	je     0x14000511f
   14000510c:	xor    edx,edx
   14000510e:	mov    rcx,rax
   140005111:	call   0x140004ca4
   140005116:	mov    rcx,rbp
   140005119:	call   QWORD PTR [rip+0x21f91]        # 0x1400270b0
   14000511f:	cmp    DWORD PTR [rip+0x32a43],edi        # 0x140037b68
   140005125:	je     0x140005184
   140005127:	cmp    DWORD PTR [rip+0x31643],edi        # 0x140036770
   14000512d:	je     0x140005184
   14000512f:	lea    r8,[rip+0x2358a]        # 0x1400286c0
   140005136:	mov    edx,esi
   140005138:	mov    rcx,rbx
   14000513b:	call   QWORD PTR [rip+0x223ef]        # 0x140027530
   140005141:	mov    rcx,QWORD PTR [rip+0x32ab8]        # 0x140037c00
   140005148:	lea    r8,[rip+0x23591]        # 0x1400286e0
   14000514f:	mov    edx,0x3ec
   140005154:	call   QWORD PTR [rip+0x223d6]        # 0x140027530
   14000515a:	lea    rcx,[rip+0x318bf]        # 0x140036a20
   140005161:	call   0x140001d30
   140005166:	mov    rbx,rax
   140005169:	cmp    rax,rdi
   14000516c:	je     0x140005184
   14000516e:	mov    edx,0x1
   140005173:	mov    rcx,rax
   140005176:	call   0x140004ca4
   14000517b:	mov    rcx,rbx
   14000517e:	call   QWORD PTR [rip+0x21f2c]        # 0x1400270b0
   140005184:	xor    eax,eax
   140005186:	mov    rcx,QWORD PTR [rsp+0x1030]
   14000518e:	xor    rcx,rsp
   140005191:	call   0x140009080
   140005196:	add    rsp,0x1040
   14000519d:	pop    r12
   14000519f:	pop    rdi
   1400051a0:	pop    rsi
   1400051a1:	pop    rbp
   1400051a2:	pop    rbx
   1400051a3:	ret    
   1400051a4:	rex push rbx
   1400051a6:	sub    rsp,0x110
   1400051ad:	xor    edx,edx
   1400051af:	mov    rbx,rcx
   1400051b2:	lea    rcx,[rsp+0x44]
   1400051b7:	lea    r8d,[rdx+0x64]
   1400051bb:	call   0x140008a00
   1400051c0:	and    QWORD PTR [rsp+0x20],0x0
   1400051c6:	xor    eax,eax
   1400051c8:	and    DWORD PTR [rsp+0xb0],eax
   1400051cf:	lea    r8d,[rax+0x5c]
   1400051d3:	lea    rcx,[rsp+0xb4]
   1400051db:	xor    edx,edx
   1400051dd:	mov    QWORD PTR [rsp+0x28],rax
   1400051e2:	mov    QWORD PTR [rsp+0x30],rax
   1400051e7:	mov    QWORD PTR [rsp+0x38],rax
   1400051ec:	call   0x140008a00
   1400051f1:	xor    ecx,ecx
   1400051f3:	mov    DWORD PTR [rsp+0x40],0x68
   1400051fb:	mov    DWORD PTR [rsp+0x44],0x800
   140005203:	call   QWORD PTR [rip+0x21edf]        # 0x1400270e8
   140005209:	and    QWORD PTR [rsp+0x70],0x0
   14000520f:	mov    QWORD PTR [rsp+0x48],rax
   140005214:	lea    rax,[rip+0xffffffffffffde15]        # 0x140003030
   14000521b:	lea    rcx,[rsp+0x40]
   140005220:	mov    QWORD PTR [rsp+0x68],rax
   140005225:	mov    QWORD PTR [rsp+0x50],0x6b
   14000522e:	call   QWORD PTR [rip+0x21e1c]        # 0x140027050
   140005234:	lea    rcx,[rsp+0x40]
   140005239:	mov    DWORD PTR [rsp+0x44],0x800
   140005241:	mov    QWORD PTR [rsp+0x20],rax
   140005246:	lea    rax,[rip+0xffffffffffffe1eb]        # 0x140003438
   14000524d:	mov    QWORD PTR [rsp+0x50],0x6c
   140005256:	mov    QWORD PTR [rsp+0x68],rax
   14000525b:	call   QWORD PTR [rip+0x21def]        # 0x140027050
   140005261:	lea    rcx,[rsp+0x40]
   140005266:	mov    QWORD PTR [rsp+0x28],rax
   14000526b:	lea    rax,[rip+0xfffffffffffffbbe]        # 0x140004e30
   140005272:	mov    DWORD PTR [rsp+0x44],0x800
   14000527a:	mov    QWORD PTR [rsp+0x68],rax
   14000527f:	mov    QWORD PTR [rsp+0x50],0x6d
   140005288:	call   QWORD PTR [rip+0x21dc2]        # 0x140027050
   14000528e:	mov    QWORD PTR [rsp+0x30],rax
   140005293:	lea    rax,[rip+0xffffffffffffeab6]        # 0x140003d50
   14000529a:	lea    rcx,[rsp+0x40]
   14000529f:	mov    DWORD PTR [rsp+0x44],0x800
   1400052a7:	mov    QWORD PTR [rsp+0x50],0x6e
   1400052b0:	mov    QWORD PTR [rsp+0x68],rax
   1400052b5:	call   QWORD PTR [rip+0x21d95]        # 0x140027050
   1400052bb:	xor    ecx,ecx
   1400052bd:	mov    DWORD PTR [rsp+0xb0],0x60
   1400052c8:	mov    QWORD PTR [rsp+0x38],rax
   1400052cd:	call   QWORD PTR [rip+0x21e15]        # 0x1400270e8
   1400052d3:	and    QWORD PTR [rsp+0xf8],0x0
   1400052dc:	and    QWORD PTR [rsp+0x108],0x0
   1400052e5:	and    DWORD PTR [rsp+0xe0],0x0
   1400052ed:	mov    QWORD PTR [rsp+0xc0],rax
   1400052f5:	lea    rax,[rsp+0x20]
   1400052fa:	lea    rcx,[rsp+0xb0]
   140005302:	mov    QWORD PTR [rsp+0xb8],rbx
   14000530a:	mov    DWORD PTR [rsp+0xb4],0x20
   140005315:	mov    DWORD PTR [rsp+0xd8],0x4
   140005320:	mov    QWORD PTR [rsp+0xe8],rax
   140005328:	call   QWORD PTR [rip+0x21d2a]        # 0x140027058
   14000532e:	add    rsp,0x110
   140005335:	pop    rbx
   140005336:	ret    
   140005337:	int3   
   140005338:	mov    QWORD PTR [rsp+0x8],rbx
   14000533d:	mov    QWORD PTR [rsp+0x10],rbp
   140005342:	mov    QWORD PTR [rsp+0x18],rsi
   140005347:	push   rdi
   140005348:	mov    eax,0x1040
   14000534d:	call   0x140025f10
   140005352:	sub    rsp,rax
   140005355:	mov    rax,QWORD PTR [rip+0x2ef44]        # 0x1400342a0
   14000535c:	xor    rax,rsp
   14000535f:	mov    QWORD PTR [rsp+0x1030],rax
   140005367:	mov    rax,QWORD PTR [rip+0x329ca]        # 0x140037d38
   14000536e:	lea    rbp,[rip+0x224c3]        # 0x140027838
   140005375:	lea    rbx,[rip+0x22f7c]        # 0x1400282f8
   14000537c:	mov    QWORD PTR [rsp+0x28],rax
   140005381:	lea    r9,[rsp+0x30]
   140005386:	lea    rdx,[rip+0x23567]        # 0x1400288f4
   14000538d:	mov    edi,0x1000
   140005392:	mov    r8,rbp
   140005395:	mov    rcx,rbx
   140005398:	mov    DWORD PTR [rsp+0x20],edi
   14000539c:	call   QWORD PTR [rip+0x21d9e]        # 0x140027140
   1400053a2:	mov    esi,0x50
   1400053a7:	lea    rdx,[rsp+0x30]
   1400053ac:	lea    rcx,[rip+0x3136d]        # 0x140036720
   1400053b3:	mov    r8d,esi
   1400053b6:	call   0x140001788
   1400053bb:	mov    rdx,QWORD PTR [rip+0x32976]        # 0x140037d38
   1400053c2:	lea    r9,[rsp+0x30]
   1400053c7:	mov    QWORD PTR [rsp+0x28],rdx
   1400053cc:	lea    rdx,[rip+0x23519]        # 0x1400288ec
   1400053d3:	mov    r8,rbp
   1400053d6:	mov    rcx,rbx
   1400053d9:	mov    DWORD PTR [rsp+0x20],edi
   1400053dd:	call   QWORD PTR [rip+0x21d5d]        # 0x140027140
   1400053e3:	lea    rdx,[rsp+0x30]
   1400053e8:	lea    rcx,[rip+0x31771]        # 0x140036b60
   1400053ef:	mov    r8d,edi
   1400053f2:	call   0x140001788
   1400053f7:	mov    rdx,QWORD PTR [rip+0x3293a]        # 0x140037d38
   1400053fe:	lea    r9,[rip+0x3279b]        # 0x140037ba0
   140005405:	mov    QWORD PTR [rsp+0x28],rdx
   14000540a:	lea    rdx,[rip+0x234cf]        # 0x1400288e0
   140005411:	mov    r8,rbp
   140005414:	mov    rcx,rbx
   140005417:	mov    DWORD PTR [rsp+0x20],esi
   14000541b:	call   QWORD PTR [rip+0x21d1f]        # 0x140027140
   140005421:	mov    r9,QWORD PTR [rip+0x32910]        # 0x140037d38
   140005428:	lea    edi,[rsi-0x4f]
   14000542b:	lea    rdx,[rip+0x2349e]        # 0x1400288d0
   140005432:	mov    r8d,edi
   140005435:	mov    rcx,rbx
   140005438:	call   QWORD PTR [rip+0x21cfa]        # 0x140027138
   14000543e:	mov    r9,QWORD PTR [rip+0x328f3]        # 0x140037d38
   140005445:	lea    rdx,[rip+0x23474]        # 0x1400288c0
   14000544c:	mov    r8d,edi
   14000544f:	mov    rcx,rbx
   140005452:	mov    DWORD PTR [rip+0x3131c],eax        # 0x140036774
   140005458:	call   QWORD PTR [rip+0x21cda]        # 0x140027138
   14000545e:	lea    edi,[rsi-0x46]
   140005461:	lea    r9,[rip+0x32718]        # 0x140037b80
   140005468:	mov    DWORD PTR [rip+0x31302],eax        # 0x140036770
   14000546e:	mov    rax,QWORD PTR [rip+0x328c3]        # 0x140037d38
   140005475:	lea    rdx,[rip+0x23434]        # 0x1400288b0
   14000547c:	mov    QWORD PTR [rsp+0x28],rax
   140005481:	mov    r8,rbp
   140005484:	mov    rcx,rbx
   140005487:	mov    DWORD PTR [rsp+0x20],edi
   14000548b:	call   QWORD PTR [rip+0x21caf]        # 0x140027140
   140005491:	mov    rdx,QWORD PTR [rip+0x328a0]        # 0x140037d38
   140005498:	mov    QWORD PTR [rsp+0x28],rdx
   14000549d:	lea    r9,[rip+0x313fc]        # 0x1400368a0
   1400054a4:	lea    rcx,[rip+0x233f5]        # 0x1400288a0
   1400054ab:	lea    rdx,[rip+0x233e6]        # 0x140028898
   1400054b2:	mov    r8,rbp
   1400054b5:	mov    DWORD PTR [rsp+0x20],esi
   1400054b9:	call   QWORD PTR [rip+0x21c81]        # 0x140027140
   1400054bf:	mov    rdx,QWORD PTR [rip+0x32872]        # 0x140037d38
   1400054c6:	lea    r9,[rip+0x312b3]        # 0x140036780
   1400054cd:	mov    QWORD PTR [rsp+0x28],rdx
   1400054d2:	lea    rdx,[rip+0x233af]        # 0x140028888
   1400054d9:	mov    r8,rbp
   1400054dc:	mov    rcx,rbx
   1400054df:	mov    DWORD PTR [rsp+0x20],0x104
   1400054e7:	call   QWORD PTR [rip+0x21c53]        # 0x140027140
   1400054ed:	mov    rdx,QWORD PTR [rip+0x32844]        # 0x140037d38
   1400054f4:	lea    r9,[rip+0x31645]        # 0x140036b40
   1400054fb:	mov    QWORD PTR [rsp+0x28],rdx
   140005500:	mov    r8,rbp
   140005503:	mov    rcx,rbx
   140005506:	mov    DWORD PTR [rsp+0x20],edi
   14000550a:	lea    rdx,[rip+0x2335f]        # 0x140028870
   140005511:	call   QWORD PTR [rip+0x21c29]        # 0x140027140
   140005517:	lea    rsi,[rip+0x31622]        # 0x140036b40
   14000551e:	lea    rdi,[rip+0x23343]        # 0x140028868
   140005525:	mov    ecx,0x6
   14000552a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000552c:	jne    0x14000554e
   14000552e:	call   0x140004080
   140005533:	test   eax,eax
   140005535:	je     0x1400055c3
   14000553b:	call   0x140003fb0
   140005540:	test   eax,eax
   140005542:	jne    0x1400055c3
   140005544:	call   0x1400040e8
   140005549:	jmp    0x14000560f
   14000554e:	mov    eax,0x5
   140005553:	lea    rsi,[rip+0x315e6]        # 0x140036b40
   14000555a:	lea    rdi,[rip+0x232ff]        # 0x140028860
   140005561:	mov    rcx,rax
   140005564:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140005566:	jne    0x140005585
   140005568:	call   0x140004080
   14000556d:	test   eax,eax
   14000556f:	je     0x1400055c3
   140005571:	call   0x140003fb0
   140005576:	test   eax,eax
   140005578:	jne    0x1400055c3
   14000557a:	call   0x140003ff0
   14000557f:	test   eax,eax
   140005581:	je     0x1400055c3
   140005583:	jmp    0x140005544
   140005585:	cmp    BYTE PTR [rip+0x315b4],0x0        # 0x140036b40
   14000558c:	je     0x1400055c3
   14000558e:	lea    rsi,[rip+0x315ab]        # 0x140036b40
   140005595:	lea    rdi,[rip+0x232bc]        # 0x140028858
   14000559c:	mov    rcx,rax
   14000559f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400055a1:	je     0x1400055c3
   1400055a3:	call   QWORD PTR [rip+0x21ec7]        # 0x140027470
   1400055a9:	lea    r8,[rip+0x232a0]        # 0x140028850
   1400055b0:	lea    rdx,[rip+0x23279]        # 0x140028830
   1400055b7:	mov    rcx,rax
   1400055ba:	xor    r9d,r9d
   1400055bd:	call   QWORD PTR [rip+0x21f0d]        # 0x1400274d0
   1400055c3:	lea    rcx,[rip+0x31156]        # 0x140036720
   1400055ca:	call   0x140002e1c
   1400055cf:	mov    rcx,rax
   1400055d2:	mov    QWORD PTR [rip+0x32587],rax        # 0x140037b60
   1400055d9:	call   0x1400051a4
   1400055de:	mov    rcx,QWORD PTR [rip+0x32613]        # 0x140037bf8
   1400055e5:	call   QWORD PTR [rip+0x21c75]        # 0x140027260
   1400055eb:	mov    rcx,QWORD PTR [rip+0x32746]        # 0x140037d38
   1400055f2:	test   rcx,rcx
   1400055f5:	je     0x1400055fd
   1400055f7:	call   QWORD PTR [rip+0x21c33]        # 0x140027230
   1400055fd:	mov    rcx,QWORD PTR [rip+0x3273c]        # 0x140037d40
   140005604:	test   rcx,rcx
   140005607:	je     0x14000560f
   140005609:	call   QWORD PTR [rip+0x21a81]        # 0x140027090
   14000560f:	xor    eax,eax
   140005611:	mov    rcx,QWORD PTR [rsp+0x1030]
   140005619:	xor    rcx,rsp
   14000561c:	call   0x140009080
   140005621:	lea    r11,[rsp+0x1040]
   140005629:	mov    rbx,QWORD PTR [r11+0x10]
   14000562d:	mov    rbp,QWORD PTR [r11+0x18]
   140005631:	mov    rsi,QWORD PTR [r11+0x20]
   140005635:	mov    rsp,r11
   140005638:	pop    rdi
   140005639:	ret    
   14000563a:	int3   
   14000563b:	int3   
   14000563c:	sub    rsp,0x38
   140005640:	lea    rdx,[rip+0x312b9]        # 0x140036900
   140005647:	mov    r8d,0x104
   14000564d:	xor    ecx,ecx
   14000564f:	call   QWORD PTR [rip+0x21ad3]        # 0x140027128
   140005655:	lea    rdx,[rip+0x310b0]        # 0x14003670c
   14000565c:	lea    rcx,[rip+0x3129d]        # 0x140036900
   140005663:	call   0x140002990
   140005668:	mov    QWORD PTR [rip+0x32589],rax        # 0x140037bf8
   14000566f:	test   rax,rax
   140005672:	jne    0x140005688
   140005674:	call   QWORD PTR [rip+0x21bf6]        # 0x140027270
   14000567a:	lea    rdx,[rip+0x232df]        # 0x140028960
   140005681:	mov    ecx,eax
   140005683:	jmp    0x140005723
   140005688:	mov    edx,DWORD PTR [rip+0x3107e]        # 0x14003670c
   14000568e:	lea    rcx,[rip+0x314bb]        # 0x140036b50
   140005695:	lea    r9,[rip+0x3269c]        # 0x140037d38
   14000569c:	mov    QWORD PTR [rsp+0x20],rcx
   1400056a1:	lea    r8,[rip+0x310d0]        # 0x140036778
   1400056a8:	mov    rcx,rax
   1400056ab:	call   0x140002acc
   1400056b0:	test   eax,eax
   1400056b2:	je     0x1400056bb
   1400056b4:	call   0x140005338
   1400056b9:	jmp    0x14000572d
   1400056bb:	cmp    QWORD PTR [rip+0x32675],0x0        # 0x140037d38
   1400056c3:	jne    0x1400056de
   1400056c5:	mov    ecx,DWORD PTR [rip+0x30229]        # 0x1400358f4
   1400056cb:	cmp    ecx,0x1
   1400056ce:	jle    0x1400056de
   1400056d0:	mov    rdx,QWORD PTR [rip+0x30221]        # 0x1400358f8
   1400056d7:	call   0x1400046e8
   1400056dc:	jmp    0x14000572d
   1400056de:	lea    rcx,[rip+0x3121b]        # 0x140036900
   1400056e5:	mov    edx,0x5c
   1400056ea:	call   0x14000a824
   1400056ef:	test   rax,rax
   1400056f2:	je     0x14000571a
   1400056f4:	add    rax,0x1
   1400056f8:	je     0x14000571a
   1400056fa:	lea    rdx,[rip+0x23253]        # 0x140028954
   140005701:	mov    r8d,0x6
   140005707:	mov    rcx,rax
   14000570a:	call   0x14000da20
   14000570f:	lea    rdx,[rip+0x23212]        # 0x140028928
   140005716:	test   eax,eax
   140005718:	je     0x140005721
   14000571a:	lea    rdx,[rip+0x231df]        # 0x140028900
   140005721:	xor    ecx,ecx
   140005723:	call   0x14000270c
   140005728:	mov    eax,0x1
   14000572d:	add    rsp,0x38
   140005731:	ret    
   140005732:	int3   
   140005733:	int3   
   140005734:	mov    QWORD PTR [rsp+0x8],rdi
   140005739:	mov    r9d,ecx
   14000573c:	mov    r11,rdx
   14000573f:	movzx  r10d,cx
   140005743:	shr    r9d,0x10
   140005747:	cmp    r8d,0x1
   14000574b:	jne    0x140005779
   14000574d:	movzx  eax,BYTE PTR [rdx]
   140005750:	mov    ecx,0xfff1
   140005755:	add    r10d,eax
   140005758:	mov    eax,0xffff000f
   14000575d:	cmp    r10d,ecx
   140005760:	jb     0x140005765
   140005762:	add    r10d,eax
   140005765:	add    r9d,r10d
   140005768:	cmp    r9d,ecx
   14000576b:	jb     0x1400059fb
   140005771:	add    r9d,eax
   140005774:	jmp    0x1400059fb
   140005779:	test   rdx,rdx
   14000577c:	jne    0x140005786
   14000577e:	lea    eax,[rdx+0x1]
   140005781:	jmp    0x140005a05
   140005786:	cmp    r8d,0x10
   14000578a:	jae    0x1400057d3
   14000578c:	test   r8d,r8d
   14000578f:	je     0x1400057a4
   140005791:	movzx  eax,BYTE PTR [r11]
   140005795:	inc    r11
   140005798:	add    r10d,eax
   14000579b:	add    r9d,r10d
   14000579e:	add    r8d,0xffffffff
   1400057a2:	jne    0x140005791
   1400057a4:	mov    ecx,0xfff1
   1400057a9:	cmp    r10d,ecx
   1400057ac:	jb     0x1400057b6
   1400057ae:	mov    eax,0xffff000f
   1400057b3:	add    r10d,eax
   1400057b6:	mov    eax,0x80078071
   1400057bb:	mul    r9d
   1400057be:	shr    edx,0xf
   1400057c1:	imul   edx,edx,0xf
   1400057c4:	lea    eax,[r9+rdx*1]
   1400057c8:	shl    eax,0x10
   1400057cb:	or     eax,r10d
   1400057ce:	jmp    0x140005a05
   1400057d3:	mov    ecx,0x80078071
   1400057d8:	cmp    r8d,0x15b0
   1400057df:	jb     0x1400058e6
   1400057e5:	mov    eax,0x5e6ea9af
   1400057ea:	mul    r8d
   1400057ed:	shr    edx,0xb
   1400057f0:	mov    edi,edx
   1400057f2:	add    r8d,0xffffea50
   1400057f9:	mov    edx,0x15b
   1400057fe:	movzx  eax,BYTE PTR [r11]
   140005802:	add    r11,0x10
   140005806:	add    r10d,eax
   140005809:	movzx  eax,BYTE PTR [r11-0xf]
   14000580e:	add    r9d,r10d
   140005811:	add    r10d,eax
   140005814:	movzx  eax,BYTE PTR [r11-0xe]
   140005819:	add    r9d,r10d
   14000581c:	add    r10d,eax
   14000581f:	movzx  eax,BYTE PTR [r11-0xd]
   140005824:	add    r9d,r10d
   140005827:	add    r10d,eax
   14000582a:	movzx  eax,BYTE PTR [r11-0xc]
   14000582f:	add    r9d,r10d
   140005832:	add    r10d,eax
   140005835:	movzx  eax,BYTE PTR [r11-0xb]
   14000583a:	add    r9d,r10d
   14000583d:	add    r10d,eax
   140005840:	movzx  eax,BYTE PTR [r11-0xa]
   140005845:	add    r9d,r10d
   140005848:	add    r10d,eax
   14000584b:	movzx  eax,BYTE PTR [r11-0x9]
   140005850:	add    r9d,r10d
   140005853:	add    r10d,eax
   140005856:	movzx  eax,BYTE PTR [r11-0x8]
   14000585b:	add    r9d,r10d
   14000585e:	add    r10d,eax
   140005861:	movzx  eax,BYTE PTR [r11-0x7]
   140005866:	add    r9d,r10d
   140005869:	add    r10d,eax
   14000586c:	movzx  eax,BYTE PTR [r11-0x6]
   140005871:	add    r9d,r10d
   140005874:	add    r10d,eax
   140005877:	movzx  eax,BYTE PTR [r11-0x5]
   14000587c:	add    r9d,r10d
   14000587f:	add    r10d,eax
   140005882:	movzx  eax,BYTE PTR [r11-0x4]
   140005887:	add    r9d,r10d
   14000588a:	add    r10d,eax
   14000588d:	movzx  eax,BYTE PTR [r11-0x3]
   140005892:	add    r9d,r10d
   140005895:	add    r10d,eax
   140005898:	movzx  eax,BYTE PTR [r11-0x2]
   14000589d:	add    r9d,r10d
   1400058a0:	add    r10d,eax
   1400058a3:	movzx  eax,BYTE PTR [r11-0x1]
   1400058a8:	add    r9d,r10d
   1400058ab:	add    r10d,eax
   1400058ae:	add    r9d,r10d
   1400058b1:	add    edx,0xffffffff
   1400058b4:	jne    0x1400057fe
   1400058ba:	mov    eax,ecx
   1400058bc:	mul    r10d
   1400058bf:	mov    eax,ecx
   1400058c1:	shr    edx,0xf
   1400058c4:	imul   edx,edx,0xffff000f
   1400058ca:	add    r10d,edx
   1400058cd:	mul    r9d
   1400058d0:	shr    edx,0xf
   1400058d3:	imul   edx,edx,0xffff000f
   1400058d9:	add    r9d,edx
   1400058dc:	sub    rdi,0x1
   1400058e0:	jne    0x1400057f2
   1400058e6:	test   r8d,r8d
   1400058e9:	je     0x1400059fb
   1400058ef:	cmp    r8d,0x10
   1400058f3:	jb     0x1400059c1
   1400058f9:	mov    edx,r8d
   1400058fc:	shr    rdx,0x4
   140005900:	movzx  eax,BYTE PTR [r11]
   140005904:	add    r8d,0xfffffff0
   140005908:	add    r11,0x10
   14000590c:	add    r10d,eax
   14000590f:	movzx  eax,BYTE PTR [r11-0xf]
   140005914:	add    r9d,r10d
   140005917:	add    r10d,eax
   14000591a:	movzx  eax,BYTE PTR [r11-0xe]
   14000591f:	add    r9d,r10d
   140005922:	add    r10d,eax
   140005925:	movzx  eax,BYTE PTR [r11-0xd]
   14000592a:	add    r9d,r10d
   14000592d:	add    r10d,eax
   140005930:	movzx  eax,BYTE PTR [r11-0xc]
   140005935:	add    r9d,r10d
   140005938:	add    r10d,eax
   14000593b:	movzx  eax,BYTE PTR [r11-0xb]
   140005940:	add    r9d,r10d
   140005943:	add    r10d,eax
   140005946:	movzx  eax,BYTE PTR [r11-0xa]
   14000594b:	add    r9d,r10d
   14000594e:	add    r10d,eax
   140005951:	movzx  eax,BYTE PTR [r11-0x9]
   140005956:	add    r9d,r10d
   140005959:	add    r10d,eax
   14000595c:	movzx  eax,BYTE PTR [r11-0x8]
   140005961:	add    r9d,r10d
   140005964:	add    r10d,eax
   140005967:	movzx  eax,BYTE PTR [r11-0x7]
   14000596c:	add    r9d,r10d
   14000596f:	add    r10d,eax
   140005972:	movzx  eax,BYTE PTR [r11-0x6]
   140005977:	add    r9d,r10d
   14000597a:	add    r10d,eax
   14000597d:	movzx  eax,BYTE PTR [r11-0x5]
   140005982:	add    r9d,r10d
   140005985:	add    r10d,eax
   140005988:	movzx  eax,BYTE PTR [r11-0x4]
   14000598d:	add    r9d,r10d
   140005990:	add    r10d,eax
   140005993:	movzx  eax,BYTE PTR [r11-0x3]
   140005998:	add    r9d,r10d
   14000599b:	add    r10d,eax
   14000599e:	movzx  eax,BYTE PTR [r11-0x2]
   1400059a3:	add    r9d,r10d
   1400059a6:	add    r10d,eax
   1400059a9:	movzx  eax,BYTE PTR [r11-0x1]
   1400059ae:	add    r9d,r10d
   1400059b1:	add    r10d,eax
   1400059b4:	add    r9d,r10d
   1400059b7:	sub    rdx,0x1
   1400059bb:	jne    0x140005900
   1400059c1:	test   r8d,r8d
   1400059c4:	je     0x1400059d9
   1400059c6:	movzx  eax,BYTE PTR [r11]
   1400059ca:	inc    r11
   1400059cd:	add    r10d,eax
   1400059d0:	add    r9d,r10d
   1400059d3:	add    r8d,0xffffffff
   1400059d7:	jne    0x1400059c6
   1400059d9:	mov    eax,ecx
   1400059db:	mul    r10d
   1400059de:	mov    eax,ecx
   1400059e0:	shr    edx,0xf
   1400059e3:	imul   edx,edx,0xffff000f
   1400059e9:	add    r10d,edx
   1400059ec:	mul    r9d
   1400059ef:	shr    edx,0xf
   1400059f2:	imul   edx,edx,0xffff000f
   1400059f8:	add    r9d,edx
   1400059fb:	shl    r9d,0x10
   1400059ff:	or     r9d,r10d
   140005a02:	mov    eax,r9d
   140005a05:	mov    rdi,QWORD PTR [rsp+0x8]
   140005a0a:	ret    
   140005a0b:	int3   
   140005a0c:	mov    QWORD PTR [rsp+0x8],rbx
   140005a11:	mov    r10d,edx
   140005a14:	mov    ebx,r8d
   140005a17:	mov    r11d,ecx
   140005a1a:	shr    r11d,0x10
   140005a1e:	mov    eax,0x80078071
   140005a23:	mul    r8d
   140005a26:	movzx  r8d,cx
   140005a2a:	movzx  ecx,r10w
   140005a2e:	shr    edx,0xf
   140005a31:	mov    r9d,r8d
   140005a34:	shr    r10d,0x10
   140005a38:	lea    r8d,[r8+rcx*1+0xfff0]
   140005a40:	mov    eax,0x80078071
   140005a45:	mov    ecx,0xffff000f
   140005a4a:	imul   edx,edx,0xfff1
   140005a50:	sub    ebx,edx
   140005a52:	imul   r9d,ebx
   140005a56:	mul    r9d
   140005a59:	shr    edx,0xf
   140005a5c:	imul   edx,edx,0xfff1
   140005a62:	sub    r11d,edx
   140005a65:	mov    edx,0xfff1
   140005a6a:	add    r11d,r10d
   140005a6d:	sub    r11d,ebx
   140005a70:	lea    eax,[r9+r11*1+0xfff1]
   140005a78:	cmp    r8d,edx
   140005a7b:	jbe    0x140005a88
   140005a7d:	add    r8d,ecx
   140005a80:	cmp    r8d,edx
   140005a83:	jbe    0x140005a88
   140005a85:	add    r8d,ecx
   140005a88:	cmp    eax,0x1ffe2
   140005a8d:	jbe    0x140005a94
   140005a8f:	add    eax,0xfffe001e
   140005a94:	cmp    eax,edx
   140005a96:	jbe    0x140005a9a
   140005a98:	add    eax,ecx
   140005a9a:	mov    rbx,QWORD PTR [rsp+0x8]
   140005a9f:	shl    eax,0x10
   140005aa2:	or     eax,r8d
   140005aa5:	ret    
   140005aa6:	int3   
   140005aa7:	int3   
   140005aa8:	lea    rax,[rip+0x22ed1]        # 0x140028980
   140005aaf:	ret    
   140005ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140005aba:	mov    QWORD PTR [rsp+0x18],rdi
   140005abf:	mov    r10d,ecx
   140005ac2:	mov    r11d,r8d
   140005ac5:	mov    rbx,rdx
   140005ac8:	lea    rsi,[rip+0x22eb1]        # 0x140028980
   140005acf:	not    r10d
   140005ad2:	test   r8d,r8d
   140005ad5:	je     0x140005afb
   140005ad7:	test   bl,0x3
   140005ada:	je     0x140005afb
   140005adc:	movzx  ecx,BYTE PTR [rbx]
   140005adf:	mov    eax,r10d
   140005ae2:	inc    rbx
   140005ae5:	xor    rcx,rax
   140005ae8:	shr    eax,0x8
   140005aeb:	movzx  edx,cl
   140005aee:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140005af2:	xor    r10d,eax
   140005af5:	add    r11d,0xffffffff
   140005af9:	jne    0x140005ad7
   140005afb:	cmp    r11d,0x20
   140005aff:	jb     0x140005d27
   140005b05:	mov    edi,r11d
   140005b08:	shr    rdi,0x5
   140005b0c:	xor    r10d,DWORD PTR [rbx]
   140005b0f:	mov    eax,r10d
   140005b12:	shr    rax,0x10
   140005b16:	movzx  edx,al
   140005b19:	mov    eax,r10d
   140005b1c:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005b24:	shr    rax,0x8
   140005b28:	movzx  ecx,al
   140005b2b:	mov    eax,r10d
   140005b2e:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005b36:	shr    rax,0x18
   140005b3a:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005b3e:	movzx  eax,r10b
   140005b42:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005b4a:	xor    r8d,DWORD PTR [rbx+0x4]
   140005b4e:	mov    r9d,r8d
   140005b51:	mov    eax,r8d
   140005b54:	shr    rax,0x10
   140005b58:	movzx  edx,al
   140005b5b:	mov    eax,r8d
   140005b5e:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005b66:	shr    rax,0x8
   140005b6a:	movzx  ecx,al
   140005b6d:	mov    rax,r9
   140005b70:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005b78:	shr    rax,0x18
   140005b7c:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005b80:	movzx  eax,r9b
   140005b84:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005b8c:	xor    r8d,DWORD PTR [rbx+0x8]
   140005b90:	mov    r9d,r8d
   140005b93:	mov    eax,r8d
   140005b96:	shr    rax,0x10
   140005b9a:	movzx  edx,al
   140005b9d:	mov    eax,r8d
   140005ba0:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005ba8:	shr    rax,0x8
   140005bac:	movzx  ecx,al
   140005baf:	mov    rax,r9
   140005bb2:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005bba:	shr    rax,0x18
   140005bbe:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005bc2:	movzx  eax,r9b
   140005bc6:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005bce:	xor    r8d,DWORD PTR [rbx+0xc]
   140005bd2:	mov    r9d,r8d
   140005bd5:	mov    eax,r8d
   140005bd8:	shr    rax,0x10
   140005bdc:	movzx  edx,al
   140005bdf:	mov    eax,r8d
   140005be2:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005bea:	shr    rax,0x8
   140005bee:	movzx  ecx,al
   140005bf1:	mov    rax,r9
   140005bf4:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005bfc:	shr    rax,0x18
   140005c00:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005c04:	movzx  eax,r9b
   140005c08:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005c10:	xor    r8d,DWORD PTR [rbx+0x10]
   140005c14:	mov    r9d,r8d
   140005c17:	mov    eax,r8d
   140005c1a:	shr    rax,0x10
   140005c1e:	movzx  edx,al
   140005c21:	mov    eax,r8d
   140005c24:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005c2c:	shr    rax,0x8
   140005c30:	movzx  ecx,al
   140005c33:	mov    rax,r9
   140005c36:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005c3e:	shr    rax,0x18
   140005c42:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005c46:	movzx  eax,r9b
   140005c4a:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005c52:	xor    r8d,DWORD PTR [rbx+0x14]
   140005c56:	mov    eax,r8d
   140005c59:	mov    r9d,r8d
   140005c5c:	shr    rax,0x10
   140005c60:	movzx  edx,al
   140005c63:	mov    eax,r8d
   140005c66:	shr    rax,0x8
   140005c6a:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005c72:	movzx  ecx,al
   140005c75:	mov    rax,r9
   140005c78:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005c80:	shr    rax,0x18
   140005c84:	add    rbx,0x20
   140005c88:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005c8c:	movzx  eax,r9b
   140005c90:	add    r11d,0xffffffe0
   140005c94:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005c9c:	xor    r8d,DWORD PTR [rbx-0x8]
   140005ca0:	mov    r9d,r8d
   140005ca3:	mov    eax,r8d
   140005ca6:	shr    rax,0x10
   140005caa:	movzx  edx,al
   140005cad:	mov    eax,r8d
   140005cb0:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140005cb8:	shr    rax,0x8
   140005cbc:	movzx  ecx,al
   140005cbf:	mov    rax,r9
   140005cc2:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140005cca:	shr    rax,0x18
   140005cce:	xor    r8d,DWORD PTR [rsi+rax*4]
   140005cd2:	movzx  eax,r9b
   140005cd6:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140005cde:	xor    r8d,DWORD PTR [rbx-0x4]
   140005ce2:	mov    eax,r8d
   140005ce5:	shr    rax,0x10
   140005ce9:	movzx  edx,al
   140005cec:	mov    eax,r8d
   140005cef:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140005cf7:	shr    rax,0x8
   140005cfb:	movzx  ecx,al
   140005cfe:	mov    eax,r8d
   140005d01:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140005d09:	shr    rax,0x18
   140005d0d:	xor    r10d,DWORD PTR [rsi+rax*4]
   140005d11:	movzx  eax,r8b
   140005d15:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   140005d1d:	sub    rdi,0x1
   140005d21:	jne    0x140005b0c
   140005d27:	cmp    r11d,0x4
   140005d2b:	jb     0x140005d83
   140005d2d:	mov    r9d,r11d
   140005d30:	shr    r9,0x2
   140005d34:	xor    r10d,DWORD PTR [rbx]
   140005d37:	add    r11d,0xfffffffc
   140005d3b:	add    rbx,0x4
   140005d3f:	mov    r8d,r10d
   140005d42:	mov    eax,r10d
   140005d45:	shr    rax,0x10
   140005d49:	movzx  edx,al
   140005d4c:	mov    eax,r10d
   140005d4f:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140005d57:	shr    rax,0x8
   140005d5b:	movzx  ecx,al
   140005d5e:	mov    rax,r8
   140005d61:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140005d69:	shr    rax,0x18
   140005d6d:	xor    r10d,DWORD PTR [rsi+rax*4]
   140005d71:	movzx  eax,r8b
   140005d75:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   140005d7d:	sub    r9,0x1
   140005d81:	jne    0x140005d34
   140005d83:	test   r11d,r11d
   140005d86:	je     0x140005da7
   140005d88:	movzx  ecx,BYTE PTR [rbx]
   140005d8b:	mov    eax,r10d
   140005d8e:	inc    rbx
   140005d91:	xor    rcx,rax
   140005d94:	shr    eax,0x8
   140005d97:	movzx  edx,cl
   140005d9a:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140005d9e:	xor    r10d,eax
   140005da1:	add    r11d,0xffffffff
   140005da5:	jne    0x140005d88
   140005da7:	mov    rbx,QWORD PTR [rsp+0x8]
   140005dac:	mov    rsi,QWORD PTR [rsp+0x10]
   140005db1:	mov    rdi,QWORD PTR [rsp+0x18]
   140005db6:	not    r10d
   140005db9:	mov    eax,r10d
   140005dbc:	ret    
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	mov    rax,rsp
   140005dc3:	mov    QWORD PTR [rax+0x8],rbx
   140005dc7:	mov    QWORD PTR [rax+0x10],rbp
   140005dcb:	mov    QWORD PTR [rax+0x18],rsi
   140005dcf:	mov    QWORD PTR [rax+0x20],rdi
   140005dd3:	mov    r10d,ecx
   140005dd6:	mov    ebp,0xff00
   140005ddb:	mov    eax,ecx
   140005ddd:	and    r10d,ebp
   140005de0:	shl    eax,0x10
   140005de3:	mov    r11d,r8d
   140005de6:	add    r10d,eax
   140005de9:	mov    eax,ecx
   140005deb:	shr    ecx,0x18
   140005dee:	shl    r10d,0x8
   140005df2:	shr    eax,0x8
   140005df5:	lea    rsi,[rip+0x22b84]        # 0x140028980
   140005dfc:	and    eax,ebp
   140005dfe:	add    r10d,eax
   140005e01:	add    r10d,ecx
   140005e04:	not    r10d
   140005e07:	test   r8d,r8d
   140005e0a:	je     0x140005e38
   140005e0c:	test   dl,0x3
   140005e0f:	je     0x140005e38
   140005e11:	movzx  eax,BYTE PTR [rdx]
   140005e14:	mov    ecx,r10d
   140005e17:	inc    rdx
   140005e1a:	shr    rcx,0x18
   140005e1e:	xor    rcx,rax
   140005e21:	mov    eax,r10d
   140005e24:	mov    r10d,DWORD PTR [rsi+rcx*4+0x1000]
   140005e2c:	shl    eax,0x8
   140005e2f:	xor    r10d,eax
   140005e32:	add    r11d,0xffffffff
   140005e36:	jne    0x140005e0c
   140005e38:	lea    rbx,[rdx-0x4]
   140005e3c:	cmp    r11d,0x20
   140005e40:	jb     0x140006088
   140005e46:	mov    edi,r11d
   140005e49:	shr    rdi,0x5
   140005e4d:	xor    r10d,DWORD PTR [rbx+0x4]
   140005e51:	mov    eax,r10d
   140005e54:	shr    rax,0x10
   140005e58:	movzx  edx,al
   140005e5b:	mov    eax,r10d
   140005e5e:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140005e66:	shr    rax,0x8
   140005e6a:	movzx  ecx,al
   140005e6d:	mov    eax,r10d
   140005e70:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140005e78:	shr    rax,0x18
   140005e7c:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140005e84:	movzx  eax,r10b
   140005e88:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   140005e90:	xor    r8d,DWORD PTR [rbx+0x8]
   140005e94:	mov    r9d,r8d
   140005e97:	mov    eax,r8d
   140005e9a:	shr    rax,0x10
   140005e9e:	movzx  edx,al
   140005ea1:	mov    eax,r8d
   140005ea4:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140005eac:	shr    rax,0x8
   140005eb0:	movzx  ecx,al
   140005eb3:	mov    rax,r9
   140005eb6:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140005ebe:	shr    rax,0x18
   140005ec2:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140005eca:	movzx  eax,r9b
   140005ece:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   140005ed6:	xor    r8d,DWORD PTR [rbx+0xc]
   140005eda:	mov    r9d,r8d
   140005edd:	mov    eax,r8d
   140005ee0:	shr    rax,0x10
   140005ee4:	movzx  edx,al
   140005ee7:	mov    eax,r8d
   140005eea:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140005ef2:	shr    rax,0x8
   140005ef6:	movzx  ecx,al
   140005ef9:	mov    rax,r9
   140005efc:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140005f04:	shr    rax,0x18
   140005f08:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140005f10:	movzx  eax,r9b
   140005f14:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   140005f1c:	xor    r8d,DWORD PTR [rbx+0x10]
   140005f20:	mov    r9d,r8d
   140005f23:	mov    eax,r8d
   140005f26:	shr    rax,0x10
   140005f2a:	movzx  edx,al
   140005f2d:	mov    eax,r8d
   140005f30:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140005f38:	shr    rax,0x8
   140005f3c:	movzx  ecx,al
   140005f3f:	mov    rax,r9
   140005f42:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140005f4a:	shr    rax,0x18
   140005f4e:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140005f56:	movzx  eax,r9b
   140005f5a:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   140005f62:	xor    r8d,DWORD PTR [rbx+0x14]
   140005f66:	mov    r9d,r8d
   140005f69:	mov    eax,r8d
   140005f6c:	shr    rax,0x10
   140005f70:	movzx  edx,al
   140005f73:	mov    eax,r8d
   140005f76:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140005f7e:	shr    rax,0x8
   140005f82:	movzx  ecx,al
   140005f85:	mov    rax,r9
   140005f88:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140005f90:	shr    rax,0x18
   140005f94:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140005f9c:	movzx  eax,r9b
   140005fa0:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   140005fa8:	xor    r8d,DWORD PTR [rbx+0x18]
   140005fac:	mov    eax,r8d
   140005faf:	mov    r9d,r8d
   140005fb2:	shr    rax,0x10
   140005fb6:	movzx  edx,al
   140005fb9:	mov    eax,r8d
   140005fbc:	shr    rax,0x8
   140005fc0:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140005fc8:	movzx  ecx,al
   140005fcb:	mov    rax,r9
   140005fce:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140005fd6:	shr    rax,0x18
   140005fda:	add    rbx,0x20
   140005fde:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140005fe6:	movzx  eax,r9b
   140005fea:	add    r11d,0xffffffe0
   140005fee:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   140005ff6:	xor    r8d,DWORD PTR [rbx-0x4]
   140005ffa:	mov    r9d,r8d
   140005ffd:	mov    eax,r8d
   140006000:	shr    rax,0x10
   140006004:	movzx  edx,al
   140006007:	mov    eax,r8d
   14000600a:	mov    r8d,DWORD PTR [rsi+rdx*4+0x1800]
   140006012:	shr    rax,0x8
   140006016:	movzx  ecx,al
   140006019:	mov    rax,r9
   14000601c:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140006024:	shr    rax,0x18
   140006028:	xor    r8d,DWORD PTR [rsi+rax*4+0x1c00]
   140006030:	movzx  eax,r9b
   140006034:	xor    r8d,DWORD PTR [rsi+rax*4+0x1000]
   14000603c:	xor    r8d,DWORD PTR [rbx]
   14000603f:	mov    eax,r8d
   140006042:	shr    rax,0x10
   140006046:	movzx  edx,al
   140006049:	mov    eax,r8d
   14000604c:	mov    r10d,DWORD PTR [rsi+rdx*4+0x1800]
   140006054:	shr    rax,0x8
   140006058:	movzx  ecx,al
   14000605b:	mov    eax,r8d
   14000605e:	xor    r10d,DWORD PTR [rsi+rcx*4+0x1400]
   140006066:	shr    rax,0x18
   14000606a:	xor    r10d,DWORD PTR [rsi+rax*4+0x1c00]
   140006072:	movzx  eax,r8b
   140006076:	xor    r10d,DWORD PTR [rsi+rax*4+0x1000]
   14000607e:	sub    rdi,0x1
   140006082:	jne    0x140005e4d
   140006088:	cmp    r11d,0x4
   14000608c:	jb     0x1400060e8
   14000608e:	mov    r9d,r11d
   140006091:	shr    r9,0x2
   140006095:	add    rbx,0x4
   140006099:	add    r11d,0xfffffffc
   14000609d:	xor    r10d,DWORD PTR [rbx]
   1400060a0:	mov    r8d,r10d
   1400060a3:	mov    eax,r10d
   1400060a6:	shr    rax,0x10
   1400060aa:	movzx  edx,al
   1400060ad:	mov    eax,r10d
   1400060b0:	mov    r10d,DWORD PTR [rsi+rdx*4+0x1800]
   1400060b8:	shr    rax,0x8
   1400060bc:	movzx  ecx,al
   1400060bf:	mov    rax,r8
   1400060c2:	xor    r10d,DWORD PTR [rsi+rcx*4+0x1400]
   1400060ca:	shr    rax,0x18
   1400060ce:	xor    r10d,DWORD PTR [rsi+rax*4+0x1c00]
   1400060d6:	movzx  eax,r8b
   1400060da:	xor    r10d,DWORD PTR [rsi+rax*4+0x1000]
   1400060e2:	sub    r9,0x1
   1400060e6:	jne    0x140006095
   1400060e8:	add    rbx,0x4
   1400060ec:	test   r11d,r11d
   1400060ef:	je     0x140006118
   1400060f1:	movzx  eax,BYTE PTR [rbx]
   1400060f4:	mov    ecx,r10d
   1400060f7:	inc    rbx
   1400060fa:	shr    rcx,0x18
   1400060fe:	xor    rcx,rax
   140006101:	mov    eax,r10d
   140006104:	mov    r10d,DWORD PTR [rsi+rcx*4+0x1000]
   14000610c:	shl    eax,0x8
   14000610f:	xor    r10d,eax
   140006112:	add    r11d,0xffffffff
   140006116:	jne    0x1400060f1
   140006118:	mov    rbx,QWORD PTR [rsp+0x8]
   14000611d:	mov    rsi,QWORD PTR [rsp+0x18]
   140006122:	mov    rdi,QWORD PTR [rsp+0x20]
   140006127:	not    r10d
   14000612a:	mov    eax,r10d
   14000612d:	mov    ecx,r10d
   140006130:	and    eax,ebp
   140006132:	shl    ecx,0x10
   140006135:	add    eax,ecx
   140006137:	mov    ecx,r10d
   14000613a:	shr    r10d,0x18
   14000613e:	shl    eax,0x8
   140006141:	shr    ecx,0x8
   140006144:	and    ecx,ebp
   140006146:	mov    rbp,QWORD PTR [rsp+0x10]
   14000614b:	add    eax,ecx
   14000614d:	add    eax,r10d
   140006150:	ret    
   140006151:	int3   
   140006152:	int3   
   140006153:	int3   
   140006154:	xor    eax,eax
   140006156:	test   edx,edx
   140006158:	je     0x140006169
   14000615a:	test   dl,0x1
   14000615d:	je     0x140006161
   14000615f:	xor    eax,DWORD PTR [rcx]
   140006161:	add    rcx,0x4
   140006165:	shr    edx,1
   140006167:	jne    0x14000615a
   140006169:	repz ret 
   14000616b:	int3   
   14000616c:	sub    rsp,0x28
   140006170:	mov    r9,rdx
   140006173:	mov    r10,rdx
   140006176:	mov    r8,rcx
   140006179:	sub    r9,rcx
   14000617c:	mov    r11d,0x20
   140006182:	mov    edx,DWORD PTR [r9+r8*1]
   140006186:	mov    rcx,r10
   140006189:	call   0x140006154
   14000618e:	mov    DWORD PTR [r8],eax
   140006191:	add    r8,0x4
   140006195:	sub    r11,0x1
   140006199:	jne    0x140006182
   14000619b:	add    rsp,0x28
   14000619f:	ret    
   1400061a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400061a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400061aa:	push   rdi
   1400061ab:	sub    rsp,0x120
   1400061b2:	mov    edi,r8d
   1400061b5:	mov    esi,edx
   1400061b7:	mov    ebx,ecx
   1400061b9:	test   r8d,r8d
   1400061bc:	je     0x14000625e
   1400061c2:	mov    ecx,0x1
   1400061c7:	mov    DWORD PTR [rsp+0x20],0xedb88320
   1400061cf:	mov    rax,rcx
   1400061d2:	mov    DWORD PTR [rsp+rax*4+0x20],ecx
   1400061d6:	inc    rax
   1400061d9:	add    ecx,ecx
   1400061db:	cmp    rax,0x20
   1400061df:	jl     0x1400061d2
   1400061e1:	lea    rdx,[rsp+0x20]
   1400061e6:	lea    rcx,[rsp+0xa0]
   1400061ee:	call   0x14000616c
   1400061f3:	lea    rdx,[rsp+0xa0]
   1400061fb:	lea    rcx,[rsp+0x20]
   140006200:	call   0x14000616c
   140006205:	lea    rdx,[rsp+0x20]
   14000620a:	lea    rcx,[rsp+0xa0]
   140006212:	call   0x14000616c
   140006217:	test   dil,0x1
   14000621b:	je     0x14000622e
   14000621d:	lea    rcx,[rsp+0xa0]
   140006225:	mov    edx,ebx
   140006227:	call   0x140006154
   14000622c:	mov    ebx,eax
   14000622e:	sar    edi,1
   140006230:	je     0x14000625c
   140006232:	lea    rdx,[rsp+0xa0]
   14000623a:	lea    rcx,[rsp+0x20]
   14000623f:	call   0x14000616c
   140006244:	test   dil,0x1
   140006248:	je     0x140006258
   14000624a:	lea    rcx,[rsp+0x20]
   14000624f:	mov    edx,ebx
   140006251:	call   0x140006154
   140006256:	mov    ebx,eax
   140006258:	sar    edi,1
   14000625a:	jne    0x140006205
   14000625c:	xor    ebx,esi
   14000625e:	lea    r11,[rsp+0x120]
   140006266:	mov    eax,ebx
   140006268:	mov    rbx,QWORD PTR [r11+0x10]
   14000626c:	mov    rsi,QWORD PTR [r11+0x18]
   140006270:	mov    rsp,r11
   140006273:	pop    rdi
   140006274:	ret    
   140006275:	int3   
   140006276:	int3   
   140006277:	int3   
   140006278:	sub    rsp,0x28
   14000627c:	test   rdx,rdx
   14000627f:	jne    0x140006285
   140006281:	xor    eax,eax
   140006283:	jmp    0x14000628a
   140006285:	call   0x140005ab0
   14000628a:	add    rsp,0x28
   14000628e:	ret    
   14000628f:	int3   
   140006290:	rex push rbx
   140006292:	push   rbp
   140006293:	push   rsi
   140006294:	push   rdi
   140006295:	push   r12
   140006297:	push   r13
   140006299:	push   r14
   14000629b:	push   r15
   14000629d:	sub    rsp,0x38
   1400062a1:	mov    r12,QWORD PTR [rcx+0x28]
   1400062a5:	mov    r14d,DWORD PTR [rcx+0x8]
   1400062a9:	mov    rdi,QWORD PTR [rcx]
   1400062ac:	mov    r8,QWORD PTR [rcx+0x10]
   1400062b0:	mov    r9,QWORD PTR [r12+0x58]
   1400062b5:	mov    rsi,QWORD PTR [r12+0x60]
   1400062ba:	mov    r13d,DWORD PTR [r12+0x34]
   1400062bf:	mov    ebx,DWORD PTR [r12+0x40]
   1400062c4:	mov    r10d,DWORD PTR [r12+0x44]
   1400062c9:	mov    rbp,rcx
   1400062cc:	mov    ecx,DWORD PTR [rcx+0x18]
   1400062cf:	dec    r8
   1400062d2:	sub    edx,ecx
   1400062d4:	lea    r15d,[rcx-0x101]
   1400062db:	mov    ecx,DWORD PTR [r12+0x68]
   1400062e0:	mov    eax,edx
   1400062e2:	mov    rdx,r8
   1400062e5:	dec    rdi
   1400062e8:	sub    rdx,rax
   1400062eb:	mov    eax,DWORD PTR [r12+0x2c]
   1400062f0:	add    r14d,0xfffffffb
   1400062f4:	mov    DWORD PTR [rsp+0x80],eax
   1400062fb:	mov    eax,DWORD PTR [r12+0x30]
   140006300:	mov    QWORD PTR [rsp+0x10],rdx
   140006305:	mov    DWORD PTR [rsp+0x98],eax
   14000630c:	mov    rax,QWORD PTR [r12+0x38]
   140006311:	mov    edx,0x1
   140006316:	mov    QWORD PTR [rsp+0x18],rax
   14000631b:	mov    eax,0x1
   140006320:	add    r14,rdi
   140006323:	shl    eax,cl
   140006325:	mov    ecx,DWORD PTR [r12+0x6c]
   14000632a:	add    r15,r8
   14000632d:	shl    edx,cl
   14000632f:	dec    eax
   140006331:	mov    QWORD PTR [rsp+0x8],r9
   140006336:	dec    edx
   140006338:	mov    QWORD PTR [rsp],rsi
   14000633c:	mov    DWORD PTR [rsp+0x90],edx
   140006343:	mov    edx,eax
   140006345:	mov    QWORD PTR [rsp+0x20],rdx
   14000634a:	cmp    r10d,0xf
   14000634e:	jae    0x14000636e
   140006350:	movzx  eax,BYTE PTR [rdi+0x1]
   140006354:	mov    ecx,r10d
   140006357:	add    rdi,0x2
   14000635b:	shl    eax,cl
   14000635d:	lea    ecx,[r10+0x8]
   140006361:	add    ebx,eax
   140006363:	movzx  eax,BYTE PTR [rdi]
   140006366:	shl    eax,cl
   140006368:	add    ebx,eax
   14000636a:	add    r10d,0x10
   14000636e:	mov    eax,ebx
   140006370:	and    rax,rdx
   140006373:	jmp    0x140006397
   140006375:	test   dl,0x10
   140006378:	jne    0x1400063c1
   14000637a:	test   dl,0x40
   14000637d:	jne    0x140006658
   140006383:	mov    ecx,edx
   140006385:	mov    eax,0x1
   14000638a:	shr    r11d,0x10
   14000638e:	shl    eax,cl
   140006390:	dec    eax
   140006392:	and    eax,ebx
   140006394:	add    eax,r11d
   140006397:	mov    r11d,DWORD PTR [r9+rax*4]
   14000639b:	mov    eax,r11d
   14000639e:	movzx  edx,r11b
   1400063a2:	shr    eax,0x8
   1400063a5:	movzx  ecx,al
   1400063a8:	shr    ebx,cl
   1400063aa:	sub    r10d,ecx
   1400063ad:	test   r11b,r11b
   1400063b0:	jne    0x140006375
   1400063b2:	inc    r8
   1400063b5:	shr    r11d,0x10
   1400063b9:	mov    BYTE PTR [r8],r11b
   1400063bc:	jmp    0x140006644
   1400063c1:	shr    r11d,0x10
   1400063c5:	and    edx,0xf
   1400063c8:	je     0x1400063f5
   1400063ca:	cmp    r10d,edx
   1400063cd:	jae    0x1400063e0
   1400063cf:	inc    rdi
   1400063d2:	mov    ecx,r10d
   1400063d5:	movzx  eax,BYTE PTR [rdi]
   1400063d8:	shl    eax,cl
   1400063da:	add    ebx,eax
   1400063dc:	add    r10d,0x8
   1400063e0:	mov    ecx,edx
   1400063e2:	mov    eax,0x1
   1400063e7:	shl    eax,cl
   1400063e9:	dec    eax
   1400063eb:	and    eax,ebx
   1400063ed:	shr    ebx,cl
   1400063ef:	add    r11d,eax
   1400063f2:	sub    r10d,edx
   1400063f5:	cmp    r10d,0xf
   1400063f9:	jae    0x140006419
   1400063fb:	movzx  eax,BYTE PTR [rdi+0x1]
   1400063ff:	mov    ecx,r10d
   140006402:	add    rdi,0x2
   140006406:	shl    eax,cl
   140006408:	lea    ecx,[r10+0x8]
   14000640c:	add    ebx,eax
   14000640e:	movzx  eax,BYTE PTR [rdi]
   140006411:	shl    eax,cl
   140006413:	add    ebx,eax
   140006415:	add    r10d,0x10
   140006419:	mov    ecx,DWORD PTR [rsp+0x90]
   140006420:	mov    eax,ebx
   140006422:	and    rcx,rax
   140006425:	mov    esi,DWORD PTR [rsi+rcx*4]
   140006428:	jmp    0x140006451
   14000642a:	test   dl,0x40
   14000642d:	jne    0x140006670
   140006433:	movzx  eax,WORD PTR [rsp+0x8a]
   14000643b:	mov    ecx,edx
   14000643d:	mov    edx,0x1
   140006442:	shl    edx,cl
   140006444:	mov    rcx,QWORD PTR [rsp]
   140006448:	dec    edx
   14000644a:	and    edx,ebx
   14000644c:	add    edx,eax
   14000644e:	mov    esi,DWORD PTR [rcx+rdx*4]
   140006451:	mov    eax,esi
   140006453:	movzx  edx,sil
   140006457:	mov    DWORD PTR [rsp+0x88],esi
   14000645e:	shr    eax,0x8
   140006461:	movzx  ecx,al
   140006464:	shr    ebx,cl
   140006466:	sub    r10d,ecx
   140006469:	test   dl,0x10
   14000646c:	je     0x14000642a
   14000646e:	and    edx,0xf
   140006471:	shr    esi,0x10
   140006474:	cmp    r10d,edx
   140006477:	jae    0x1400064a0
   140006479:	inc    rdi
   14000647c:	mov    ecx,r10d
   14000647f:	add    r10d,0x8
   140006483:	movzx  eax,BYTE PTR [rdi]
   140006486:	shl    eax,cl
   140006488:	add    ebx,eax
   14000648a:	cmp    r10d,edx
   14000648d:	jae    0x1400064a0
   14000648f:	inc    rdi
   140006492:	mov    ecx,r10d
   140006495:	movzx  eax,BYTE PTR [rdi]
   140006498:	shl    eax,cl
   14000649a:	add    ebx,eax
   14000649c:	add    r10d,0x8
   1400064a0:	mov    ecx,edx
   1400064a2:	mov    eax,0x1
   1400064a7:	sub    r10d,edx
   1400064aa:	shl    eax,cl
   1400064ac:	dec    eax
   1400064ae:	and    eax,ebx
   1400064b0:	shr    ebx,cl
   1400064b2:	add    esi,eax
   1400064b4:	mov    eax,r8d
   1400064b7:	sub    eax,DWORD PTR [rsp+0x10]
   1400064bb:	cmp    esi,eax
   1400064bd:	jbe    0x1400065eb
   1400064c3:	mov    ecx,esi
   1400064c5:	sub    ecx,eax
   1400064c7:	cmp    ecx,DWORD PTR [rsp+0x98]
   1400064ce:	ja     0x140006679
   1400064d4:	mov    rdx,QWORD PTR [rsp+0x18]
   1400064d9:	lea    r9,[rdx-0x1]
   1400064dd:	test   r13d,r13d
   1400064e0:	jne    0x14000650d
   1400064e2:	mov    eax,DWORD PTR [rsp+0x80]
   1400064e9:	sub    eax,ecx
   1400064eb:	add    r9,rax
   1400064ee:	cmp    ecx,r11d
   1400064f1:	jae    0x140006583
   1400064f7:	sub    r11d,ecx
   1400064fa:	inc    r9
   1400064fd:	inc    r8
   140006500:	add    ecx,0xffffffff
   140006503:	mov    al,BYTE PTR [r9]
   140006506:	mov    BYTE PTR [r8],al
   140006509:	jne    0x1400064fa
   14000650b:	jmp    0x14000657b
   14000650d:	mov    eax,r13d
   140006510:	sub    eax,ecx
   140006512:	cmp    r13d,ecx
   140006515:	jae    0x14000655f
   140006517:	add    eax,DWORD PTR [rsp+0x80]
   14000651e:	sub    ecx,r13d
   140006521:	add    r9,rax
   140006524:	cmp    ecx,r11d
   140006527:	jae    0x140006583
   140006529:	sub    r11d,ecx
   14000652c:	inc    r9
   14000652f:	inc    r8
   140006532:	add    ecx,0xffffffff
   140006535:	mov    al,BYTE PTR [r9]
   140006538:	mov    BYTE PTR [r8],al
   14000653b:	jne    0x14000652c
   14000653d:	lea    r9,[rdx-0x1]
   140006541:	cmp    r13d,r11d
   140006544:	jae    0x140006583
   140006546:	mov    ecx,r13d
   140006549:	sub    r11d,r13d
   14000654c:	inc    r9
   14000654f:	inc    r8
   140006552:	add    ecx,0xffffffff
   140006555:	mov    al,BYTE PTR [r9]
   140006558:	mov    BYTE PTR [r8],al
   14000655b:	jne    0x14000654c
   14000655d:	jmp    0x14000657b
   14000655f:	add    r9,rax
   140006562:	cmp    ecx,r11d
   140006565:	jae    0x140006583
   140006567:	sub    r11d,ecx
   14000656a:	inc    r9
   14000656d:	inc    r8
   140006570:	add    ecx,0xffffffff
   140006573:	mov    al,BYTE PTR [r9]
   140006576:	mov    BYTE PTR [r8],al
   140006579:	jne    0x14000656a
   14000657b:	mov    eax,esi
   14000657d:	mov    r9,r8
   140006580:	sub    r9,rax
   140006583:	cmp    r11d,0x2
   140006587:	jbe    0x1400065c1
   140006589:	lea    ecx,[r11-0x3]
   14000658d:	mov    eax,0xaaaaaaab
   140006592:	mul    ecx
   140006594:	shr    edx,1
   140006596:	lea    ecx,[rdx+0x1]
   140006599:	mov    al,BYTE PTR [r9+0x1]
   14000659d:	add    r9,0x3
   1400065a1:	add    r8,0x3
   1400065a5:	mov    BYTE PTR [r8-0x2],al
   1400065a9:	mov    al,BYTE PTR [r9-0x1]
   1400065ad:	add    r11d,0xfffffffd
   1400065b1:	sub    rcx,0x1
   1400065b5:	mov    BYTE PTR [r8-0x1],al
   1400065b9:	mov    al,BYTE PTR [r9]
   1400065bc:	mov    BYTE PTR [r8],al
   1400065bf:	jne    0x140006599
   1400065c1:	test   r11d,r11d
   1400065c4:	je     0x14000663b
   1400065c6:	mov    al,BYTE PTR [r9+0x1]
   1400065ca:	mov    rsi,QWORD PTR [rsp]
   1400065ce:	inc    r8
   1400065d1:	mov    BYTE PTR [r8],al
   1400065d4:	cmp    r11d,0x1
   1400065d8:	jbe    0x1400065e4
   1400065da:	mov    al,BYTE PTR [r9+0x2]
   1400065de:	inc    r8
   1400065e1:	mov    BYTE PTR [r8],al
   1400065e4:	mov    r9,QWORD PTR [rsp+0x8]
   1400065e9:	jmp    0x140006644
   1400065eb:	mov    eax,esi
   1400065ed:	mov    rcx,r8
   1400065f0:	sub    rcx,rax
   1400065f3:	mov    al,BYTE PTR [rcx+0x1]
   1400065f6:	add    rcx,0x3
   1400065fa:	add    r8,0x3
   1400065fe:	mov    BYTE PTR [r8-0x2],al
   140006602:	mov    al,BYTE PTR [rcx-0x1]
   140006605:	add    r11d,0xfffffffd
   140006609:	mov    BYTE PTR [r8-0x1],al
   14000660d:	mov    al,BYTE PTR [rcx]
   14000660f:	mov    BYTE PTR [r8],al
   140006612:	cmp    r11d,0x2
   140006616:	ja     0x1400065f3
   140006618:	test   r11d,r11d
   14000661b:	je     0x140006640
   14000661d:	mov    al,BYTE PTR [rcx+0x1]
   140006620:	mov    rsi,QWORD PTR [rsp]
   140006624:	inc    r8
   140006627:	mov    BYTE PTR [r8],al
   14000662a:	cmp    r11d,0x1
   14000662e:	jbe    0x140006644
   140006630:	mov    al,BYTE PTR [rcx+0x2]
   140006633:	inc    r8
   140006636:	mov    BYTE PTR [r8],al
   140006639:	jmp    0x140006644
   14000663b:	mov    r9,QWORD PTR [rsp+0x8]
   140006640:	mov    rsi,QWORD PTR [rsp]
   140006644:	cmp    rdi,r14
   140006647:	jae    0x14000668c
   140006649:	cmp    r8,r15
   14000664c:	jae    0x14000668c
   14000664e:	mov    rdx,QWORD PTR [rsp+0x20]
   140006653:	jmp    0x14000634a
   140006658:	test   dl,0x20
   14000665b:	je     0x140006667
   14000665d:	mov    DWORD PTR [r12],0xb
   140006665:	jmp    0x14000668c
   140006667:	lea    rax,[rip+0x2434a]        # 0x14002a9b8
   14000666e:	jmp    0x140006680
   140006670:	lea    rax,[rip+0x24329]        # 0x14002a9a0
   140006677:	jmp    0x140006680
   140006679:	lea    rax,[rip+0x24300]        # 0x14002a980
   140006680:	mov    QWORD PTR [rbp+0x20],rax
   140006684:	mov    DWORD PTR [r12],0x1b
   14000668c:	mov    ecx,r10d
   14000668f:	sub    r15d,r8d
   140006692:	shr    ecx,0x3
   140006695:	add    r15d,0x101
   14000669c:	mov    eax,ecx
   14000669e:	mov    DWORD PTR [rbp+0x18],r15d
   1400066a2:	sub    rdi,rax
   1400066a5:	mov    eax,ecx
   1400066a7:	shl    eax,0x3
   1400066aa:	sub    r14d,edi
   1400066ad:	sub    r10d,eax
   1400066b0:	lea    rax,[rdi+0x1]
   1400066b4:	add    r14d,0x5
   1400066b8:	mov    QWORD PTR [rbp+0x0],rax
   1400066bc:	lea    rax,[r8+0x1]
   1400066c0:	mov    DWORD PTR [rbp+0x8],r14d
   1400066c4:	mov    QWORD PTR [rbp+0x10],rax
   1400066c8:	mov    eax,0x1
   1400066cd:	mov    ecx,r10d
   1400066d0:	shl    eax,cl
   1400066d2:	mov    DWORD PTR [r12+0x44],r10d
   1400066d7:	dec    eax
   1400066d9:	and    eax,ebx
   1400066db:	mov    DWORD PTR [r12+0x40],eax
   1400066e0:	add    rsp,0x38
   1400066e4:	pop    r15
   1400066e6:	pop    r14
   1400066e8:	pop    r13
   1400066ea:	pop    r12
   1400066ec:	pop    rdi
   1400066ed:	pop    rsi
   1400066ee:	pop    rbp
   1400066ef:	pop    rbx
   1400066f0:	ret    
   1400066f1:	int3   
   1400066f2:	int3   
   1400066f3:	int3   
   1400066f4:	xor    eax,eax
   1400066f6:	cmp    rcx,rax
   1400066f9:	je     0x140006753
   1400066fb:	mov    rdx,QWORD PTR [rcx+0x28]
   1400066ff:	cmp    rdx,rax
   140006702:	je     0x140006753
   140006704:	mov    DWORD PTR [rdx+0x1c],eax
   140006707:	mov    DWORD PTR [rcx+0x1c],eax
   14000670a:	mov    DWORD PTR [rcx+0xc],eax
   14000670d:	mov    QWORD PTR [rcx+0x20],rax
   140006711:	mov    DWORD PTR [rcx+0x4c],0x1
   140006718:	mov    DWORD PTR [rdx],eax
   14000671a:	mov    DWORD PTR [rdx+0x4],eax
   14000671d:	mov    DWORD PTR [rdx+0xc],eax
   140006720:	mov    QWORD PTR [rdx+0x20],rax
   140006724:	mov    DWORD PTR [rdx+0x2c],eax
   140006727:	mov    DWORD PTR [rdx+0x30],eax
   14000672a:	mov    DWORD PTR [rdx+0x34],eax
   14000672d:	mov    DWORD PTR [rdx+0x40],eax
   140006730:	mov    DWORD PTR [rdx+0x44],eax
   140006733:	lea    rax,[rdx+0x548]
   14000673a:	mov    QWORD PTR [rdx+0x80],rax
   140006741:	mov    QWORD PTR [rdx+0x60],rax
   140006745:	mov    QWORD PTR [rdx+0x58],rax
   140006749:	xor    eax,eax
   14000674b:	mov    DWORD PTR [rdx+0x14],0x8000
   140006752:	ret    
   140006753:	mov    eax,0xfffffffe
   140006758:	ret    
   140006759:	int3   
   14000675a:	int3   
   14000675b:	int3   
   14000675c:	mov    r11d,r8d
   14000675f:	test   rcx,rcx
   140006762:	je     0x14000679e
   140006764:	mov    r9,QWORD PTR [rcx+0x28]
   140006768:	test   r9,r9
   14000676b:	je     0x14000679e
   14000676d:	cmp    edx,0x10
   140006770:	jg     0x14000679e
   140006772:	mov    r8d,DWORD PTR [r9+0x44]
   140006776:	lea    r10d,[r8+rdx*1]
   14000677a:	cmp    r10d,0x20
   14000677e:	ja     0x14000679e
   140006780:	mov    ecx,edx
   140006782:	mov    eax,0x1
   140006787:	mov    DWORD PTR [r9+0x44],r10d
   14000678b:	shl    eax,cl
   14000678d:	mov    ecx,r8d
   140006790:	dec    eax
   140006792:	and    eax,r11d
   140006795:	shl    eax,cl
   140006797:	add    DWORD PTR [r9+0x40],eax
   14000679b:	xor    eax,eax
   14000679d:	ret    
   14000679e:	mov    eax,0xfffffffe
   1400067a3:	ret    
   1400067a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400067a9:	push   rdi
   1400067aa:	sub    rsp,0x20
   1400067ae:	mov    edi,edx
   1400067b0:	mov    rbx,rcx
   1400067b3:	test   r8,r8
   1400067b6:	je     0x140006879
   1400067bc:	cmp    BYTE PTR [r8],0x31
   1400067c0:	jne    0x140006879
   1400067c6:	cmp    r9d,0x58
   1400067ca:	jne    0x140006879
   1400067d0:	test   rcx,rcx
   1400067d3:	jne    0x1400067df
   1400067d5:	mov    eax,0xfffffffe
   1400067da:	jmp    0x14000687e
   1400067df:	and    QWORD PTR [rcx+0x20],0x0
   1400067e4:	cmp    QWORD PTR [rcx+0x30],0x0
   1400067e9:	jne    0x1400067fb
   1400067eb:	and    QWORD PTR [rcx+0x40],0x0
   1400067f0:	lea    rax,[rip+0x1fb9]        # 0x1400087b0
   1400067f7:	mov    QWORD PTR [rcx+0x30],rax
   1400067fb:	cmp    QWORD PTR [rcx+0x38],0x0
   140006800:	jne    0x14000680d
   140006802:	lea    rax,[rip+0x1fb3]        # 0x1400087bc
   140006809:	mov    QWORD PTR [rcx+0x38],rax
   14000680d:	mov    rcx,QWORD PTR [rcx+0x40]
   140006811:	mov    edx,0x1
   140006816:	mov    r8d,0x2548
   14000681c:	call   QWORD PTR [rbx+0x30]
   14000681f:	mov    rdx,rax
   140006822:	test   rax,rax
   140006825:	jne    0x14000682c
   140006827:	lea    eax,[rdx-0x4]
   14000682a:	jmp    0x14000687e
   14000682c:	mov    QWORD PTR [rbx+0x28],rax
   140006830:	test   edi,edi
   140006832:	jns    0x14000683c
   140006834:	and    DWORD PTR [rax+0x8],0x0
   140006838:	neg    edi
   14000683a:	jmp    0x14000684e
   14000683c:	mov    eax,edi
   14000683e:	sar    eax,0x4
   140006841:	inc    eax
   140006843:	cmp    edi,0x30
   140006846:	mov    DWORD PTR [rdx+0x8],eax
   140006849:	jge    0x14000684e
   14000684b:	and    edi,0xf
   14000684e:	lea    eax,[rdi-0x8]
   140006851:	cmp    eax,0x7
   140006854:	ja     0x140006868
   140006856:	and    QWORD PTR [rdx+0x38],0x0
   14000685b:	mov    rcx,rbx
   14000685e:	mov    DWORD PTR [rdx+0x28],edi
   140006861:	call   0x1400066f4
   140006866:	jmp    0x14000687e
   140006868:	mov    rcx,QWORD PTR [rbx+0x40]
   14000686c:	call   QWORD PTR [rbx+0x38]
   14000686f:	and    QWORD PTR [rbx+0x28],0x0
   140006874:	jmp    0x1400067d5
   140006879:	mov    eax,0xfffffffa
   14000687e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006883:	add    rsp,0x20
   140006887:	pop    rdi
   140006888:	ret    
   140006889:	int3   
   14000688a:	int3   
   14000688b:	int3   
   14000688c:	mov    r9d,r8d
   14000688f:	mov    r8,rdx
   140006892:	mov    edx,0xf
   140006897:	jmp    0x1400067a4
   14000689c:	lea    rax,[rip+0x2413d]        # 0x14002a9e0
   1400068a3:	mov    DWORD PTR [rcx+0x68],0x9
   1400068aa:	mov    DWORD PTR [rcx+0x6c],0x5
   1400068b1:	mov    QWORD PTR [rcx+0x58],rax
   1400068b5:	lea    rax,[rip+0x24924]        # 0x14002b1e0
   1400068bc:	mov    QWORD PTR [rcx+0x60],rax
   1400068c0:	ret    
   1400068c1:	int3   
   1400068c2:	int3   
   1400068c3:	int3   
   1400068c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400068c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400068ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400068d3:	push   rdi
   1400068d4:	sub    rsp,0x20
   1400068d8:	mov    rbx,QWORD PTR [rcx+0x28]
   1400068dc:	mov    ebp,edx
   1400068de:	mov    rsi,rcx
   1400068e1:	cmp    QWORD PTR [rbx+0x38],0x0
   1400068e6:	mov    edi,0x1
   1400068eb:	jne    0x14000690e
   1400068ed:	mov    ecx,DWORD PTR [rbx+0x28]
   1400068f0:	mov    edx,edi
   1400068f2:	mov    r8d,edi
   1400068f5:	shl    edx,cl
   1400068f7:	mov    rcx,QWORD PTR [rsi+0x40]
   1400068fb:	call   QWORD PTR [rsi+0x30]
   1400068fe:	mov    QWORD PTR [rbx+0x38],rax
   140006902:	test   rax,rax
   140006905:	jne    0x14000690e
   140006907:	mov    eax,edi
   140006909:	jmp    0x14000699f
   14000690e:	cmp    DWORD PTR [rbx+0x2c],0x0
   140006912:	jne    0x140006924
   140006914:	mov    ecx,DWORD PTR [rbx+0x28]
   140006917:	and    DWORD PTR [rbx+0x34],0x0
   14000691b:	shl    edi,cl
   14000691d:	and    DWORD PTR [rbx+0x30],0x0
   140006921:	mov    DWORD PTR [rbx+0x2c],edi
   140006924:	sub    ebp,DWORD PTR [rsi+0x18]
   140006927:	mov    edi,DWORD PTR [rbx+0x2c]
   14000692a:	mov    rdx,QWORD PTR [rsi+0x10]
   14000692e:	cmp    ebp,edi
   140006930:	jb     0x14000694a
   140006932:	mov    rcx,QWORD PTR [rbx+0x38]
   140006936:	mov    r8,rdi
   140006939:	sub    rdx,rdi
   14000693c:	call   0x140008b00
   140006941:	and    DWORD PTR [rbx+0x34],0x0
   140006945:	mov    eax,DWORD PTR [rbx+0x2c]
   140006948:	jmp    0x14000699a
   14000694a:	sub    edi,DWORD PTR [rbx+0x34]
   14000694d:	mov    ecx,DWORD PTR [rbx+0x34]
   140006950:	mov    eax,ebp
   140006952:	cmp    edi,ebp
   140006954:	cmova  edi,ebp
   140006957:	add    rcx,QWORD PTR [rbx+0x38]
   14000695b:	sub    rdx,rax
   14000695e:	mov    r8d,edi
   140006961:	call   0x140008b00
   140006966:	sub    ebp,edi
   140006968:	je     0x140006982
   14000696a:	mov    rdx,QWORD PTR [rsi+0x10]
   14000696e:	mov    rcx,QWORD PTR [rbx+0x38]
   140006972:	mov    r8d,ebp
   140006975:	sub    rdx,r8
   140006978:	call   0x140008b00
   14000697d:	mov    DWORD PTR [rbx+0x34],ebp
   140006980:	jmp    0x140006945
   140006982:	mov    ecx,DWORD PTR [rbx+0x2c]
   140006985:	add    DWORD PTR [rbx+0x34],edi
   140006988:	cmp    DWORD PTR [rbx+0x34],ecx
   14000698b:	jne    0x140006991
   14000698d:	and    DWORD PTR [rbx+0x34],0x0
   140006991:	mov    eax,DWORD PTR [rbx+0x30]
   140006994:	cmp    eax,ecx
   140006996:	jae    0x14000699d
   140006998:	add    eax,edi
   14000699a:	mov    DWORD PTR [rbx+0x30],eax
   14000699d:	xor    eax,eax
   14000699f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069a4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400069a9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400069ae:	add    rsp,0x20
   1400069b2:	pop    rdi
   1400069b3:	ret    
   1400069b4:	mov    DWORD PTR [rsp+0x10],edx
   1400069b8:	push   rbx
   1400069b9:	push   rbp
   1400069ba:	push   rsi
   1400069bb:	push   rdi
   1400069bc:	push   r12
   1400069be:	push   r13
   1400069c0:	push   r14
   1400069c2:	push   r15
   1400069c4:	sub    rsp,0x58
   1400069c8:	xor    r12d,r12d
   1400069cb:	mov    ebx,edx
   1400069cd:	mov    r13,rcx
   1400069d0:	cmp    rcx,r12
   1400069d3:	je     0x140006aa9
   1400069d9:	mov    rdi,QWORD PTR [rcx+0x28]
   1400069dd:	cmp    rdi,r12
   1400069e0:	je     0x140006aa9
   1400069e6:	cmp    QWORD PTR [rcx+0x10],r12
   1400069ea:	je     0x140006aa9
   1400069f0:	cmp    QWORD PTR [rcx],r12
   1400069f3:	jne    0x1400069ff
   1400069f5:	cmp    DWORD PTR [rcx+0x8],r12d
   1400069f9:	jne    0x140006aa9
   1400069ff:	cmp    DWORD PTR [rdi],0xb
   140006a02:	jne    0x140006a0a
   140006a04:	mov    DWORD PTR [rdi],0xc
   140006a0a:	mov    r9d,DWORD PTR [rcx+0x18]
   140006a0e:	mov    r14d,DWORD PTR [rcx+0x8]
   140006a12:	mov    r10,QWORD PTR [rcx+0x10]
   140006a16:	mov    r15,QWORD PTR [rcx]
   140006a19:	mov    DWORD PTR [rsp+0x38],r14d
   140006a1e:	mov    r8d,r9d
   140006a21:	mov    DWORD PTR [rsp+0xb8],r9d
   140006a29:	mov    DWORD PTR [rsp+0xa0],r12d
   140006a31:	mov    esi,DWORD PTR [rdi+0x44]
   140006a34:	mov    ebp,DWORD PTR [rdi+0x40]
   140006a37:	mov    DWORD PTR [rsp+0xb0],r9d
   140006a3f:	mov    QWORD PTR [rsp+0x40],r10
   140006a44:	mov    r11d,0x10
   140006a4a:	mov    edx,0x7
   140006a4f:	mov    ecx,DWORD PTR [rdi]
   140006a51:	cmp    ecx,0xe
   140006a54:	jg     0x1400072e0
   140006a5a:	je     0x1400070a7
   140006a60:	cmp    ecx,edx
   140006a62:	jg     0x140007021
   140006a68:	je     0x140006df9
   140006a6e:	cmp    ecx,r12d
   140006a71:	je     0x140006e7e
   140006a77:	sub    ecx,0x1
   140006a7a:	je     0x140006adb
   140006a7c:	sub    ecx,0x1
   140006a7f:	je     0x140006b70
   140006a85:	sub    ecx,0x1
   140006a88:	je     0x140006bed
   140006a8e:	sub    ecx,0x1
   140006a91:	je     0x140006c4a
   140006a97:	sub    ecx,0x1
   140006a9a:	je     0x140006c64
   140006aa0:	cmp    ecx,0x1
   140006aa3:	je     0x140006d63
   140006aa9:	mov    eax,0xfffffffe
   140006aae:	add    rsp,0x58
   140006ab2:	pop    r15
   140006ab4:	pop    r14
   140006ab6:	pop    r13
   140006ab8:	pop    r12
   140006aba:	pop    rdi
   140006abb:	pop    rsi
   140006abc:	pop    rbp
   140006abd:	pop    rbx
   140006abe:	ret    
   140006abf:	cmp    r14d,r12d
   140006ac2:	je     0x140007dc3
   140006ac8:	movzx  eax,BYTE PTR [r15]
   140006acc:	mov    ecx,esi
   140006ace:	dec    r14d
   140006ad1:	shl    eax,cl
   140006ad3:	inc    r15
   140006ad6:	add    ebp,eax
   140006ad8:	add    esi,0x8
   140006adb:	cmp    esi,r11d
   140006ade:	jb     0x140006abf
   140006ae0:	mov    DWORD PTR [rdi+0x10],ebp
   140006ae3:	cmp    bpl,0x8
   140006ae7:	je     0x140006af5
   140006ae9:	lea    rax,[rip+0x24908]        # 0x14002b3f8
   140006af0:	jmp    0x140006fca
   140006af5:	test   ebp,0xe000
   140006afb:	je     0x140006b09
   140006afd:	lea    rax,[rip+0x248d4]        # 0x14002b3d8
   140006b04:	jmp    0x140006fca
   140006b09:	mov    rcx,QWORD PTR [rdi+0x20]
   140006b0d:	cmp    rcx,r12
   140006b10:	je     0x140006b1c
   140006b12:	mov    eax,ebp
   140006b14:	shr    eax,0x8
   140006b17:	and    eax,0x1
   140006b1a:	mov    DWORD PTR [rcx],eax
   140006b1c:	bt     DWORD PTR [rdi+0x10],0x9
   140006b21:	jae    0x140006b46
   140006b23:	mov    BYTE PTR [rsp+0x30],bpl
   140006b28:	shr    ebp,0x8
   140006b2b:	lea    rdx,[rsp+0x30]
   140006b30:	mov    BYTE PTR [rsp+0x31],bpl
   140006b35:	mov    ecx,DWORD PTR [rdi+0x18]
   140006b38:	mov    r8d,0x2
   140006b3e:	call   0x140006278
   140006b43:	mov    DWORD PTR [rdi+0x18],eax
   140006b46:	mov    ebp,r12d
   140006b49:	mov    esi,r12d
   140006b4c:	mov    DWORD PTR [rdi],0x2
   140006b52:	jmp    0x140006b70
   140006b54:	cmp    r14d,r12d
   140006b57:	je     0x140007dc3
   140006b5d:	movzx  eax,BYTE PTR [r15]
   140006b61:	mov    ecx,esi
   140006b63:	dec    r14d
   140006b66:	shl    eax,cl
   140006b68:	inc    r15
   140006b6b:	add    ebp,eax
   140006b6d:	add    esi,0x8
   140006b70:	cmp    esi,0x20
   140006b73:	jb     0x140006b54
   140006b75:	mov    rax,QWORD PTR [rdi+0x20]
   140006b79:	cmp    rax,r12
   140006b7c:	je     0x140006b81
   140006b7e:	mov    DWORD PTR [rax+0x4],ebp
   140006b81:	bt     DWORD PTR [rdi+0x10],0x9
   140006b86:	jae    0x140006bbd
   140006b88:	mov    eax,ebp
   140006b8a:	mov    BYTE PTR [rsp+0x30],bpl
   140006b8f:	lea    rdx,[rsp+0x30]
   140006b94:	shr    eax,0x8
   140006b97:	mov    r8d,0x4
   140006b9d:	mov    BYTE PTR [rsp+0x31],al
   140006ba1:	mov    eax,ebp
   140006ba3:	shr    ebp,0x18
   140006ba6:	shr    eax,0x10
   140006ba9:	mov    BYTE PTR [rsp+0x33],bpl
   140006bae:	mov    BYTE PTR [rsp+0x32],al
   140006bb2:	mov    ecx,DWORD PTR [rdi+0x18]
   140006bb5:	call   0x140006278
   140006bba:	mov    DWORD PTR [rdi+0x18],eax
   140006bbd:	mov    ebp,r12d
   140006bc0:	mov    esi,r12d
   140006bc3:	mov    DWORD PTR [rdi],0x3
   140006bc9:	mov    r11d,0x10
   140006bcf:	jmp    0x140006bed
   140006bd1:	cmp    r14d,r12d
   140006bd4:	je     0x140007dc3
   140006bda:	movzx  eax,BYTE PTR [r15]
   140006bde:	mov    ecx,esi
   140006be0:	dec    r14d
   140006be3:	shl    eax,cl
   140006be5:	inc    r15
   140006be8:	add    ebp,eax
   140006bea:	add    esi,0x8
   140006bed:	cmp    esi,r11d
   140006bf0:	jb     0x140006bd1
   140006bf2:	mov    rcx,QWORD PTR [rdi+0x20]
   140006bf6:	cmp    rcx,r12
   140006bf9:	je     0x140006c0e
   140006bfb:	movzx  eax,bpl
   140006bff:	mov    DWORD PTR [rcx+0x8],eax
   140006c02:	mov    rax,QWORD PTR [rdi+0x20]
   140006c06:	mov    ecx,ebp
   140006c08:	shr    ecx,0x8
   140006c0b:	mov    DWORD PTR [rax+0xc],ecx
   140006c0e:	bt     DWORD PTR [rdi+0x10],0x9
   140006c13:	jae    0x140006c3e
   140006c15:	mov    BYTE PTR [rsp+0x30],bpl
   140006c1a:	shr    ebp,0x8
   140006c1d:	lea    rdx,[rsp+0x30]
   140006c22:	mov    BYTE PTR [rsp+0x31],bpl
   140006c27:	mov    ecx,DWORD PTR [rdi+0x18]
   140006c2a:	mov    r8d,0x2
   140006c30:	call   0x140006278
   140006c35:	mov    r11d,0x10
   140006c3b:	mov    DWORD PTR [rdi+0x18],eax
   140006c3e:	mov    ebp,r12d
   140006c41:	mov    esi,r12d
   140006c44:	mov    DWORD PTR [rdi],0x4
   140006c4a:	bt     DWORD PTR [rdi+0x10],0xa
   140006c4f:	jb     0x140006ccc
   140006c51:	mov    rax,QWORD PTR [rdi+0x20]
   140006c55:	cmp    rax,r12
   140006c58:	je     0x140006c5e
   140006c5a:	mov    QWORD PTR [rax+0x10],r12
   140006c5e:	mov    DWORD PTR [rdi],0x5
   140006c64:	bt     DWORD PTR [rdi+0x10],0xa
   140006c69:	jae    0x140006d54
   140006c6f:	mov    ebx,DWORD PTR [rdi+0x48]
   140006c72:	cmp    ebx,r14d
   140006c75:	cmova  ebx,r14d
   140006c79:	cmp    ebx,r12d
   140006c7c:	je     0x140006d4a
   140006c82:	mov    rax,QWORD PTR [rdi+0x20]
   140006c86:	cmp    rax,r12
   140006c89:	je     0x140006d27
   140006c8f:	mov    r9,QWORD PTR [rax+0x10]
   140006c93:	cmp    r9,r12
   140006c96:	je     0x140006d27
   140006c9c:	mov    edx,DWORD PTR [rax+0x18]
   140006c9f:	mov    ecx,DWORD PTR [rax+0x1c]
   140006ca2:	sub    edx,DWORD PTR [rdi+0x48]
   140006ca5:	lea    eax,[rbx+rdx*1]
   140006ca8:	cmp    eax,ecx
   140006caa:	jbe    0x140006d15
   140006cac:	sub    ecx,edx
   140006cae:	jmp    0x140006d17
   140006cb0:	cmp    r14d,r12d
   140006cb3:	je     0x140007dc3
   140006cb9:	movzx  eax,BYTE PTR [r15]
   140006cbd:	mov    ecx,esi
   140006cbf:	dec    r14d
   140006cc2:	shl    eax,cl
   140006cc4:	inc    r15
   140006cc7:	add    ebp,eax
   140006cc9:	add    esi,0x8
   140006ccc:	cmp    esi,r11d
   140006ccf:	jb     0x140006cb0
   140006cd1:	mov    rax,QWORD PTR [rdi+0x20]
   140006cd5:	mov    DWORD PTR [rdi+0x48],ebp
   140006cd8:	cmp    rax,r12
   140006cdb:	je     0x140006ce0
   140006cdd:	mov    DWORD PTR [rax+0x18],ebp
   140006ce0:	bt     DWORD PTR [rdi+0x10],0x9
   140006ce5:	jae    0x140006d0a
   140006ce7:	mov    BYTE PTR [rsp+0x30],bpl
   140006cec:	shr    ebp,0x8
   140006cef:	lea    rdx,[rsp+0x30]
   140006cf4:	mov    BYTE PTR [rsp+0x31],bpl
   140006cf9:	mov    ecx,DWORD PTR [rdi+0x18]
   140006cfc:	mov    r8d,0x2
   140006d02:	call   0x140006278
   140006d07:	mov    DWORD PTR [rdi+0x18],eax
   140006d0a:	mov    ebp,r12d
   140006d0d:	mov    esi,r12d
   140006d10:	jmp    0x140006c5e
   140006d15:	mov    ecx,ebx
   140006d17:	mov    r8d,ecx
   140006d1a:	mov    ecx,edx
   140006d1c:	mov    rdx,r15
   140006d1f:	add    rcx,r9
   140006d22:	call   0x140008b00
   140006d27:	bt     DWORD PTR [rdi+0x10],0x9
   140006d2c:	jae    0x140006d3f
   140006d2e:	mov    ecx,DWORD PTR [rdi+0x18]
   140006d31:	mov    r8d,ebx
   140006d34:	mov    rdx,r15
   140006d37:	call   0x140006278
   140006d3c:	mov    DWORD PTR [rdi+0x18],eax
   140006d3f:	mov    eax,ebx
   140006d41:	sub    r14d,ebx
   140006d44:	add    r15,rax
   140006d47:	sub    DWORD PTR [rdi+0x48],ebx
   140006d4a:	cmp    DWORD PTR [rdi+0x48],r12d
   140006d4e:	jne    0x140007dc3
   140006d54:	mov    DWORD PTR [rdi+0x48],r12d
   140006d58:	mov    DWORD PTR [rdi],0x6
   140006d5e:	mov    edx,0x7
   140006d63:	bt     DWORD PTR [rdi+0x10],0xb
   140006d68:	jae    0x140006de6
   140006d6a:	cmp    r14d,r12d
   140006d6d:	je     0x140007dc3
   140006d73:	mov    ebx,r12d
   140006d76:	mov    r8,r15
   140006d79:	xor    r9d,r9d
   140006d7c:	mov    rax,QWORD PTR [rdi+0x20]
   140006d80:	movzx  r12d,BYTE PTR [r8]
   140006d84:	inc    ebx
   140006d86:	inc    r8
   140006d89:	cmp    rax,r9
   140006d8c:	je     0x140006da6
   140006d8e:	mov    rdx,QWORD PTR [rax+0x20]
   140006d92:	cmp    rdx,r9
   140006d95:	je     0x140006da6
   140006d97:	mov    ecx,DWORD PTR [rdi+0x48]
   140006d9a:	cmp    ecx,DWORD PTR [rax+0x28]
   140006d9d:	jae    0x140006da6
   140006d9f:	mov    BYTE PTR [rcx+rdx*1],r12b
   140006da3:	inc    DWORD PTR [rdi+0x48]
   140006da6:	cmp    r12d,r9d
   140006da9:	je     0x140006db0
   140006dab:	cmp    ebx,r14d
   140006dae:	jb     0x140006d7c
   140006db0:	bt     DWORD PTR [rdi+0x10],0x9
   140006db5:	jae    0x140006dcb
   140006db7:	mov    ecx,DWORD PTR [rdi+0x18]
   140006dba:	mov    r8d,ebx
   140006dbd:	mov    rdx,r15
   140006dc0:	call   0x140006278
   140006dc5:	xor    r9d,r9d
   140006dc8:	mov    DWORD PTR [rdi+0x18],eax
   140006dcb:	mov    eax,ebx
   140006dcd:	sub    r14d,ebx
   140006dd0:	add    r15,rax
   140006dd3:	cmp    r12d,r9d
   140006dd6:	jne    0x140007dc3
   140006ddc:	xor    r12d,r12d
   140006ddf:	lea    edx,[r12+0x7]
   140006de4:	jmp    0x140006df3
   140006de6:	mov    rax,QWORD PTR [rdi+0x20]
   140006dea:	cmp    rax,r12
   140006ded:	je     0x140006df3
   140006def:	mov    QWORD PTR [rax+0x20],r12
   140006df3:	mov    DWORD PTR [rdi+0x48],r12d
   140006df7:	mov    DWORD PTR [rdi],edx
   140006df9:	bt     DWORD PTR [rdi+0x10],0xc
   140006dfe:	jae    0x140006fd9
   140006e04:	cmp    r14d,r12d
   140006e07:	je     0x140007dc3
   140006e0d:	mov    ebx,r12d
   140006e10:	mov    r8,r15
   140006e13:	xor    r9d,r9d
   140006e16:	mov    rax,QWORD PTR [rdi+0x20]
   140006e1a:	movzx  r12d,BYTE PTR [r8]
   140006e1e:	inc    ebx
   140006e20:	inc    r8
   140006e23:	cmp    rax,r9
   140006e26:	je     0x140006e40
   140006e28:	mov    rdx,QWORD PTR [rax+0x30]
   140006e2c:	cmp    rdx,r9
   140006e2f:	je     0x140006e40
   140006e31:	mov    ecx,DWORD PTR [rdi+0x48]
   140006e34:	cmp    ecx,DWORD PTR [rax+0x38]
   140006e37:	jae    0x140006e40
   140006e39:	mov    BYTE PTR [rcx+rdx*1],r12b
   140006e3d:	inc    DWORD PTR [rdi+0x48]
   140006e40:	cmp    r12d,r9d
   140006e43:	je     0x140006e4a
   140006e45:	cmp    ebx,r14d
   140006e48:	jb     0x140006e16
   140006e4a:	bt     DWORD PTR [rdi+0x10],0x9
   140006e4f:	jae    0x140006e65
   140006e51:	mov    ecx,DWORD PTR [rdi+0x18]
   140006e54:	mov    r8d,ebx
   140006e57:	mov    rdx,r15
   140006e5a:	call   0x140006278
   140006e5f:	xor    r9d,r9d
   140006e62:	mov    DWORD PTR [rdi+0x18],eax
   140006e65:	mov    eax,ebx
   140006e67:	sub    r14d,ebx
   140006e6a:	add    r15,rax
   140006e6d:	cmp    r12d,r9d
   140006e70:	jne    0x140007dc3
   140006e76:	xor    r12d,r12d
   140006e79:	jmp    0x140006fe6
   140006e7e:	cmp    DWORD PTR [rdi+0x8],r12d
   140006e82:	jne    0x140006eab
   140006e84:	mov    DWORD PTR [rdi],0xc
   140006e8a:	jmp    0x140006a4f
   140006e8f:	cmp    r14d,r12d
   140006e92:	je     0x140007dc3
   140006e98:	movzx  eax,BYTE PTR [r15]
   140006e9c:	mov    ecx,esi
   140006e9e:	dec    r14d
   140006ea1:	shl    eax,cl
   140006ea3:	inc    r15
   140006ea6:	add    ebp,eax
   140006ea8:	add    esi,0x8
   140006eab:	cmp    esi,r11d
   140006eae:	jb     0x140006e8f
   140006eb0:	test   BYTE PTR [rdi+0x8],0x2
   140006eb4:	je     0x140006f13
   140006eb6:	cmp    ebp,0x8b1f
   140006ebc:	jne    0x140006f13
   140006ebe:	xor    r8d,r8d
   140006ec1:	xor    edx,edx
   140006ec3:	xor    ecx,ecx
   140006ec5:	call   0x140006278
   140006eca:	lea    rdx,[rsp+0x30]
   140006ecf:	mov    r8d,0x2
   140006ed5:	mov    DWORD PTR [rdi+0x18],eax
   140006ed8:	mov    BYTE PTR [rsp+0x30],0x1f
   140006edd:	mov    BYTE PTR [rsp+0x31],0x8b
   140006ee2:	mov    ecx,DWORD PTR [rdi+0x18]
   140006ee5:	call   0x140006278
   140006eea:	mov    DWORD PTR [rdi],0x1
   140006ef0:	mov    DWORD PTR [rdi+0x18],eax
   140006ef3:	mov    esi,r12d
   140006ef6:	mov    ebp,r12d
   140006ef9:	mov    r8d,DWORD PTR [rsp+0xb8]
   140006f01:	mov    r9d,DWORD PTR [rsp+0xb0]
   140006f09:	mov    r10,QWORD PTR [rsp+0x40]
   140006f0e:	jmp    0x140006a44
   140006f13:	mov    rax,QWORD PTR [rdi+0x20]
   140006f17:	mov    DWORD PTR [rdi+0x10],r12d
   140006f1b:	cmp    rax,r12
   140006f1e:	je     0x140006f24
   140006f20:	or     DWORD PTR [rax+0x40],0xffffffff
   140006f24:	test   BYTE PTR [rdi+0x8],0x1
   140006f28:	je     0x140006fc3
   140006f2e:	movzx  ecx,bpl
   140006f32:	mov    eax,ebp
   140006f34:	shr    eax,0x8
   140006f37:	shl    ecx,0x8
   140006f3a:	add    ecx,eax
   140006f3c:	mov    eax,0x8421085
   140006f41:	mul    ecx
   140006f43:	mov    eax,ecx
   140006f45:	sub    eax,edx
   140006f47:	shr    eax,1
   140006f49:	add    eax,edx
   140006f4b:	shr    eax,0x4
   140006f4e:	imul   eax,eax,0x1f
   140006f51:	cmp    ecx,eax
   140006f53:	jne    0x140006fbe
   140006f55:	mov    eax,ebp
   140006f57:	and    al,0xf
   140006f59:	cmp    al,0x8
   140006f5b:	je     0x140006f73
   140006f5d:	lea    rax,[rip+0x24494]        # 0x14002b3f8
   140006f64:	mov    QWORD PTR [r13+0x20],rax
   140006f68:	mov    DWORD PTR [rdi],0x1b
   140006f6e:	jmp    0x140006a4a
   140006f73:	shr    ebp,0x4
   140006f76:	add    esi,0xfffffffc
   140006f79:	mov    ecx,ebp
   140006f7b:	and    ecx,0xf
   140006f7e:	add    ecx,0x8
   140006f81:	cmp    ecx,DWORD PTR [rdi+0x28]
   140006f84:	jbe    0x140006f8f
   140006f86:	lea    rax,[rip+0x24433]        # 0x14002b3c0
   140006f8d:	jmp    0x140006f64
   140006f8f:	mov    eax,0x1
   140006f94:	xor    r8d,r8d
   140006f97:	xor    edx,edx
   140006f99:	shl    eax,cl
   140006f9b:	xor    ecx,ecx
   140006f9d:	mov    DWORD PTR [rdi+0x14],eax
   140006fa0:	call   0x140005734
   140006fa5:	shr    ebp,0x8
   140006fa8:	not    ebp
   140006faa:	mov    DWORD PTR [rdi+0x18],eax
   140006fad:	mov    DWORD PTR [r13+0x4c],eax
   140006fb1:	and    ebp,0x2
   140006fb4:	or     ebp,0x9
   140006fb7:	mov    DWORD PTR [rdi],ebp
   140006fb9:	jmp    0x140006ef3
   140006fbe:	mov    edx,0x7
   140006fc3:	lea    rax,[rip+0x243de]        # 0x14002b3a8
   140006fca:	mov    QWORD PTR [r13+0x20],rax
   140006fce:	mov    DWORD PTR [rdi],0x1b
   140006fd4:	jmp    0x140006a4f
   140006fd9:	mov    rax,QWORD PTR [rdi+0x20]
   140006fdd:	cmp    rax,r12
   140006fe0:	je     0x140006fe6
   140006fe2:	mov    QWORD PTR [rax+0x30],r12
   140006fe6:	mov    r8d,DWORD PTR [rsp+0xb8]
   140006fee:	mov    r9d,DWORD PTR [rsp+0xb0]
   140006ff6:	mov    r10,QWORD PTR [rsp+0x40]
   140006ffb:	mov    ebx,DWORD PTR [rsp+0xa8]
   140007002:	mov    edx,0x7
   140007007:	mov    DWORD PTR [rdi],0x8
   14000700d:	lea    r11d,[rdx+0x9]
   140007011:	bt     DWORD PTR [rdi+0x10],0x9
   140007016:	jae    0x140007294
   14000701c:	jmp    0x140007275
   140007021:	sub    ecx,0x8
   140007024:	je     0x140007011
   140007026:	sub    ecx,0x1
   140007029:	je     0x14000713b
   14000702f:	sub    ecx,0x1
   140007032:	je     0x140007174
   140007038:	sub    ecx,0x1
   14000703b:	je     0x1400071b5
   140007041:	sub    ecx,0x1
   140007044:	je     0x1400071be
   14000704a:	cmp    ecx,0x1
   14000704d:	jne    0x140006aa9
   140007053:	mov    ecx,esi
   140007055:	and    ecx,edx
   140007057:	shr    ebp,cl
   140007059:	sub    esi,ecx
   14000705b:	jmp    0x140007079
   14000705d:	cmp    r14d,r12d
   140007060:	je     0x140007dc3
   140007066:	movzx  eax,BYTE PTR [r15]
   14000706a:	mov    ecx,esi
   14000706c:	dec    r14d
   14000706f:	shl    eax,cl
   140007071:	inc    r15
   140007074:	add    ebp,eax
   140007076:	add    esi,0x8
   140007079:	cmp    esi,0x20
   14000707c:	jb     0x14000705d
   14000707e:	mov    eax,ebp
   140007080:	movzx  ecx,bp
   140007083:	not    eax
   140007085:	shr    eax,0x10
   140007088:	cmp    ecx,eax
   14000708a:	je     0x140007098
   14000708c:	lea    rax,[rip+0x242f5]        # 0x14002b388
   140007093:	jmp    0x140006fca
   140007098:	mov    DWORD PTR [rdi+0x48],ecx
   14000709b:	mov    ebp,r12d
   14000709e:	mov    esi,r12d
   1400070a1:	mov    DWORD PTR [rdi],0xe
   1400070a7:	mov    r12d,DWORD PTR [rdi+0x48]
   1400070ab:	xor    ecx,ecx
   1400070ad:	cmp    r12d,ecx
   1400070b0:	je     0x1400072d2
   1400070b6:	cmp    r12d,r14d
   1400070b9:	cmova  r12d,r14d
   1400070bd:	cmp    r12d,r9d
   1400070c0:	cmova  r12d,r9d
   1400070c4:	cmp    r12d,ecx
   1400070c7:	je     0x140007dc3
   1400070cd:	mov    r8d,r12d
   1400070d0:	mov    rdx,r15
   1400070d3:	mov    rcx,r10
   1400070d6:	mov    ebx,r12d
   1400070d9:	call   0x140008b00
   1400070de:	mov    r9d,DWORD PTR [rsp+0xb0]
   1400070e6:	mov    r10,QWORD PTR [rsp+0x40]
   1400070eb:	sub    r9d,r12d
   1400070ee:	sub    r14d,r12d
   1400070f1:	add    r10,rbx
   1400070f4:	add    r15,rbx
   1400070f7:	sub    DWORD PTR [rdi+0x48],r12d
   1400070fb:	mov    DWORD PTR [rsp+0xb0],r9d
   140007103:	mov    QWORD PTR [rsp+0x40],r10
   140007108:	mov    r8d,DWORD PTR [rsp+0xb8]
   140007110:	mov    ebx,DWORD PTR [rsp+0xa8]
   140007117:	xor    r12d,r12d
   14000711a:	jmp    0x140006a44
   14000711f:	cmp    r14d,r12d
   140007122:	je     0x140007dc3
   140007128:	movzx  eax,BYTE PTR [r15]
   14000712c:	mov    ecx,esi
   14000712e:	dec    r14d
   140007131:	shl    eax,cl
   140007133:	inc    r15
   140007136:	add    ebp,eax
   140007138:	add    esi,0x8
   14000713b:	cmp    esi,0x20
   14000713e:	jb     0x14000711f
   140007140:	mov    ecx,ebp
   140007142:	mov    eax,ebp
   140007144:	mov    edx,0xff00
   140007149:	shl    eax,0x10
   14000714c:	and    ecx,edx
   14000714e:	mov    esi,r12d
   140007151:	add    ecx,eax
   140007153:	mov    eax,ebp
   140007155:	shr    ebp,0x18
   140007158:	shr    eax,0x8
   14000715b:	shl    ecx,0x8
   14000715e:	and    eax,edx
   140007160:	add    eax,ecx
   140007162:	add    eax,ebp
   140007164:	mov    ebp,r12d
   140007167:	mov    DWORD PTR [rdi+0x18],eax
   14000716a:	mov    DWORD PTR [r13+0x4c],eax
   14000716e:	mov    DWORD PTR [rdi],0xa
   140007174:	cmp    DWORD PTR [rdi+0xc],r12d
   140007178:	je     0x140007d87
   14000717e:	xor    r8d,r8d
   140007181:	xor    edx,edx
   140007183:	xor    ecx,ecx
   140007185:	call   0x140005734
   14000718a:	mov    r8d,DWORD PTR [rsp+0xb8]
   140007192:	mov    r9d,DWORD PTR [rsp+0xb0]
   14000719a:	mov    r10,QWORD PTR [rsp+0x40]
   14000719f:	mov    edx,0x7
   1400071a4:	mov    DWORD PTR [rdi+0x18],eax
   1400071a7:	mov    DWORD PTR [r13+0x4c],eax
   1400071ab:	mov    DWORD PTR [rdi],0xb
   1400071b1:	lea    r11d,[rdx+0x9]
   1400071b5:	cmp    ebx,0x5
   1400071b8:	je     0x140007dc3
   1400071be:	cmp    DWORD PTR [rdi+0x4],r12d
   1400071c2:	je     0x1400071f3
   1400071c4:	mov    ecx,esi
   1400071c6:	mov    DWORD PTR [rdi],0x18
   1400071cc:	and    ecx,edx
   1400071ce:	shr    ebp,cl
   1400071d0:	sub    esi,ecx
   1400071d2:	jmp    0x140006a4f
   1400071d7:	cmp    r14d,r12d
   1400071da:	je     0x140007dc3
   1400071e0:	movzx  eax,BYTE PTR [r15]
   1400071e4:	mov    ecx,esi
   1400071e6:	dec    r14d
   1400071e9:	shl    eax,cl
   1400071eb:	inc    r15
   1400071ee:	add    ebp,eax
   1400071f0:	add    esi,0x8
   1400071f3:	cmp    esi,0x3
   1400071f6:	jb     0x1400071d7
   1400071f8:	mov    eax,ebp
   1400071fa:	shr    ebp,1
   1400071fc:	dec    esi
   1400071fe:	and    eax,0x1
   140007201:	mov    DWORD PTR [rdi+0x4],eax
   140007204:	mov    eax,ebp
   140007206:	and    eax,0x3
   140007209:	cmp    eax,r12d
   14000720c:	je     0x140007248
   14000720e:	sub    eax,0x1
   140007211:	je     0x140007238
   140007213:	sub    eax,0x1
   140007216:	je     0x140007230
   140007218:	cmp    eax,0x1
   14000721b:	jne    0x14000724e
   14000721d:	lea    rax,[rip+0x2414c]        # 0x14002b370
   140007224:	mov    QWORD PTR [r13+0x20],rax
   140007228:	mov    DWORD PTR [rdi],0x1b
   14000722e:	jmp    0x14000724e
   140007230:	mov    DWORD PTR [rdi],0xf
   140007236:	jmp    0x14000724e
   140007238:	mov    rcx,rdi
   14000723b:	call   0x14000689c
   140007240:	mov    DWORD PTR [rdi],0x12
   140007246:	jmp    0x14000724e
   140007248:	mov    DWORD PTR [rdi],0xd
   14000724e:	shr    ebp,0x2
   140007251:	add    esi,0xfffffffe
   140007254:	jmp    0x140006a4f
   140007259:	cmp    r14d,r12d
   14000725c:	je     0x140007dc3
   140007262:	movzx  eax,BYTE PTR [r15]
   140007266:	mov    ecx,esi
   140007268:	dec    r14d
   14000726b:	shl    eax,cl
   14000726d:	inc    r15
   140007270:	add    ebp,eax
   140007272:	add    esi,0x8
   140007275:	cmp    esi,r11d
   140007278:	jb     0x140007259
   14000727a:	movzx  eax,WORD PTR [rdi+0x18]
   14000727e:	cmp    ebp,eax
   140007280:	je     0x14000728e
   140007282:	lea    rax,[rip+0x240cf]        # 0x14002b358
   140007289:	jmp    0x140006fca
   14000728e:	mov    ebp,r12d
   140007291:	mov    esi,r12d
   140007294:	mov    rcx,QWORD PTR [rdi+0x20]
   140007298:	cmp    rcx,r12
   14000729b:	je     0x1400072b4
   14000729d:	mov    eax,DWORD PTR [rdi+0x10]
   1400072a0:	sar    eax,0x9
   1400072a3:	and    eax,0x1
   1400072a6:	mov    DWORD PTR [rcx+0x3c],eax
   1400072a9:	mov    rax,QWORD PTR [rdi+0x20]
   1400072ad:	mov    DWORD PTR [rax+0x40],0x1
   1400072b4:	xor    r8d,r8d
   1400072b7:	xor    edx,edx
   1400072b9:	xor    ecx,ecx
   1400072bb:	call   0x140006278
   1400072c0:	mov    DWORD PTR [rdi+0x18],eax
   1400072c3:	mov    DWORD PTR [r13+0x4c],eax
   1400072c7:	mov    DWORD PTR [rdi],0xb
   1400072cd:	jmp    0x140006ef9
   1400072d2:	mov    DWORD PTR [rdi],0xb
   1400072d8:	xor    r12d,r12d
   1400072db:	jmp    0x140006a4f
   1400072e0:	cmp    ecx,0x16
   1400072e3:	jg     0x140007c0e
   1400072e9:	je     0x140007b80
   1400072ef:	sub    ecx,0xf
   1400072f2:	je     0x14000734b
   1400072f4:	sub    ecx,0x1
   1400072f7:	je     0x1400073a0
   1400072fd:	sub    ecx,0x1
   140007300:	je     0x140007483
   140007306:	sub    ecx,0x1
   140007309:	je     0x1400077c1
   14000730f:	sub    ecx,0x1
   140007312:	je     0x140007976
   140007318:	sub    ecx,0x1
   14000731b:	je     0x1400079bd
   140007321:	cmp    ecx,0x1
   140007324:	jne    0x140006aa9
   14000732a:	jmp    0x140007b1f
   14000732f:	cmp    r14d,r12d
   140007332:	je     0x140007dc3
   140007338:	movzx  eax,BYTE PTR [r15]
   14000733c:	mov    ecx,esi
   14000733e:	dec    r14d
   140007341:	shl    eax,cl
   140007343:	inc    r15
   140007346:	add    ebp,eax
   140007348:	add    esi,0x8
   14000734b:	cmp    esi,0xe
   14000734e:	jb     0x14000732f
   140007350:	mov    ecx,ebp
   140007352:	shr    ebp,0x5
   140007355:	add    esi,0xfffffff2
   140007358:	mov    edx,ebp
   14000735a:	shr    ebp,0x5
   14000735d:	and    ecx,0x1f
   140007360:	mov    eax,ebp
   140007362:	and    edx,0x1f
   140007365:	add    ecx,0x101
   14000736b:	and    eax,0xf
   14000736e:	inc    edx
   140007370:	shr    ebp,0x4
   140007373:	add    eax,0x4
   140007376:	mov    DWORD PTR [rdi+0x74],ecx
   140007379:	mov    DWORD PTR [rdi+0x78],edx
   14000737c:	mov    DWORD PTR [rdi+0x70],eax
   14000737f:	cmp    ecx,0x11e
   140007385:	ja     0x140007ba8
   14000738b:	cmp    edx,0x1e
   14000738e:	ja     0x140007ba8
   140007394:	mov    DWORD PTR [rdi+0x7c],r12d
   140007398:	mov    DWORD PTR [rdi],r11d
   14000739b:	mov    edx,0x7
   1400073a0:	lea    r8,[rip+0x23eb9]        # 0x14002b260
   1400073a7:	mov    eax,DWORD PTR [rdi+0x70]
   1400073aa:	cmp    DWORD PTR [rdi+0x7c],eax
   1400073ad:	jae    0x140007407
   1400073af:	jmp    0x1400073cd
   1400073b1:	cmp    r14d,r12d
   1400073b4:	je     0x140007dc3
   1400073ba:	movzx  eax,BYTE PTR [r15]
   1400073be:	mov    ecx,esi
   1400073c0:	dec    r14d
   1400073c3:	shl    eax,cl
   1400073c5:	inc    r15
   1400073c8:	add    ebp,eax
   1400073ca:	add    esi,0x8
   1400073cd:	cmp    esi,0x3
   1400073d0:	jb     0x1400073b1
   1400073d2:	mov    eax,DWORD PTR [rdi+0x7c]
   1400073d5:	movzx  ecx,bp
   1400073d8:	shr    ebp,0x3
   1400073db:	movzx  eax,WORD PTR [r8+rax*2]
   1400073e0:	and    cx,dx
   1400073e3:	mov    WORD PTR [rdi+rax*2+0x88],cx
   1400073eb:	inc    DWORD PTR [rdi+0x7c]
   1400073ee:	add    esi,0xfffffffd
   1400073f1:	jmp    0x1400073a7
   1400073f3:	mov    eax,DWORD PTR [rdi+0x7c]
   1400073f6:	movzx  ecx,WORD PTR [r8+rax*2]
   1400073fb:	mov    WORD PTR [rdi+rcx*2+0x88],r12w
   140007404:	inc    DWORD PTR [rdi+0x7c]
   140007407:	cmp    DWORD PTR [rdi+0x7c],0x13
   14000740b:	jb     0x1400073f3
   14000740d:	lea    rcx,[rdi+0x68]
   140007411:	lea    rax,[rdi+0x548]
   140007418:	lea    r9,[rdi+0x80]
   14000741f:	mov    DWORD PTR [rcx],edx
   140007421:	mov    QWORD PTR [r9],rax
   140007424:	mov    QWORD PTR [rdi+0x58],rax
   140007428:	lea    rax,[rdi+0x308]
   14000742f:	lea    rdx,[rdi+0x88]
   140007436:	mov    QWORD PTR [rsp+0x28],rax
   14000743b:	mov    QWORD PTR [rsp+0x20],rcx
   140007440:	xor    ecx,ecx
   140007442:	lea    r8d,[rcx+0x13]
   140007446:	call   0x1400082f4
   14000744b:	mov    DWORD PTR [rsp+0xa0],eax
   140007452:	cmp    eax,r12d
   140007455:	je     0x14000746d
   140007457:	lea    rax,[rip+0x23eda]        # 0x14002b338
   14000745e:	mov    QWORD PTR [r13+0x20],rax
   140007462:	mov    DWORD PTR [rdi],0x1b
   140007468:	jmp    0x140006ef9
   14000746d:	mov    r10,QWORD PTR [rsp+0x40]
   140007472:	mov    edx,0x11
   140007477:	mov    DWORD PTR [rdi+0x7c],r12d
   14000747b:	lea    r11d,[rdx-0x1]
   14000747f:	mov    DWORD PTR [rdi],edx
   140007481:	jmp    0x140007488
   140007483:	mov    edx,0x11
   140007488:	mov    eax,DWORD PTR [rdi+0x78]
   14000748b:	add    eax,DWORD PTR [rdi+0x74]
   14000748e:	cmp    DWORD PTR [rdi+0x7c],eax
   140007491:	jae    0x14000764f
   140007497:	jmp    0x1400074b5
   140007499:	cmp    r14d,r12d
   14000749c:	je     0x140007dc3
   1400074a2:	movzx  eax,BYTE PTR [r15]
   1400074a6:	mov    ecx,esi
   1400074a8:	dec    r14d
   1400074ab:	shl    eax,cl
   1400074ad:	inc    r15
   1400074b0:	add    ebp,eax
   1400074b2:	add    esi,0x8
   1400074b5:	mov    ecx,DWORD PTR [rdi+0x68]
   1400074b8:	mov    eax,0x1
   1400074bd:	shl    eax,cl
   1400074bf:	lea    ecx,[rax-0x1]
   1400074c2:	mov    eax,ebp
   1400074c4:	and    rcx,rax
   1400074c7:	mov    rax,QWORD PTR [rdi+0x58]
   1400074cb:	mov    eax,DWORD PTR [rax+rcx*4]
   1400074ce:	mov    ecx,eax
   1400074d0:	mov    DWORD PTR [rsp+0x34],eax
   1400074d4:	shr    ecx,0x8
   1400074d7:	movzx  ecx,cl
   1400074da:	cmp    ecx,esi
   1400074dc:	ja     0x140007499
   1400074de:	mov    ecx,eax
   1400074e0:	shr    ecx,0x10
   1400074e3:	cmp    cx,r11w
   1400074e7:	jae    0x140007539
   1400074e9:	shr    eax,0x8
   1400074ec:	movzx  ecx,al
   1400074ef:	cmp    esi,ecx
   1400074f1:	jae    0x140007518
   1400074f3:	cmp    r14d,r12d
   1400074f6:	je     0x140007dc3
   1400074fc:	movzx  eax,BYTE PTR [r15]
   140007500:	mov    ecx,esi
   140007502:	add    esi,0x8
   140007505:	shl    eax,cl
   140007507:	dec    r14d
   14000750a:	inc    r15
   14000750d:	add    ebp,eax
   14000750f:	movzx  eax,BYTE PTR [rsp+0x35]
   140007514:	cmp    esi,eax
   140007516:	jb     0x1400074f3
   140007518:	movzx  ecx,BYTE PTR [rsp+0x35]
   14000751d:	movzx  eax,WORD PTR [rsp+0x36]
   140007522:	shr    ebp,cl
   140007524:	sub    esi,ecx
   140007526:	mov    ecx,DWORD PTR [rdi+0x7c]
   140007529:	mov    WORD PTR [rdi+rcx*2+0x88],ax
   140007531:	inc    DWORD PTR [rdi+0x7c]
   140007534:	jmp    0x1400076fc
   140007539:	cmp    WORD PTR [rsp+0x36],r11w
   14000753f:	jne    0x14000759d
   140007541:	movzx  edx,BYTE PTR [rsp+0x35]
   140007546:	lea    r8d,[rdx+0x2]
   14000754a:	jmp    0x140007568
   14000754c:	cmp    r14d,r12d
   14000754f:	je     0x140007dc3
   140007555:	movzx  eax,BYTE PTR [r15]
   140007559:	mov    ecx,esi
   14000755b:	dec    r14d
   14000755e:	shl    eax,cl
   140007560:	inc    r15
   140007563:	add    ebp,eax
   140007565:	add    esi,0x8
   140007568:	cmp    esi,r8d
   14000756b:	jb     0x14000754c
   14000756d:	mov    eax,DWORD PTR [rdi+0x7c]
   140007570:	mov    ecx,edx
   140007572:	sub    esi,edx
   140007574:	shr    ebp,cl
   140007576:	cmp    eax,r12d
   140007579:	je     0x140007715
   14000757f:	mov    edx,ebp
   140007581:	dec    eax
   140007583:	shr    ebp,0x2
   140007586:	movzx  r9d,WORD PTR [rdi+rax*2+0x88]
   14000758f:	and    edx,0x3
   140007592:	add    edx,0x3
   140007595:	add    esi,0xfffffffe
   140007598:	jmp    0x14000762a
   14000759d:	movzx  r8d,BYTE PTR [rsp+0x35]
   1400075a3:	cmp    WORD PTR [rsp+0x36],dx
   1400075a8:	jne    0x1400075e7
   1400075aa:	lea    edx,[r8+0x3]
   1400075ae:	jmp    0x1400075cc
   1400075b0:	cmp    r14d,r12d
   1400075b3:	je     0x140007dc3
   1400075b9:	movzx  eax,BYTE PTR [r15]
   1400075bd:	mov    ecx,esi
   1400075bf:	dec    r14d
   1400075c2:	shl    eax,cl
   1400075c4:	inc    r15
   1400075c7:	add    ebp,eax
   1400075c9:	add    esi,0x8
   1400075cc:	cmp    esi,edx
   1400075ce:	jb     0x1400075b0
   1400075d0:	mov    ecx,r8d
   1400075d3:	mov    eax,0xfffffffd
   1400075d8:	shr    ebp,cl
   1400075da:	mov    edx,ebp
   1400075dc:	and    edx,0x7
   1400075df:	add    edx,0x3
   1400075e2:	shr    ebp,0x3
   1400075e5:	jmp    0x140007622
   1400075e7:	lea    edx,[r8+0x7]
   1400075eb:	jmp    0x140007609
   1400075ed:	cmp    r14d,r12d
   1400075f0:	je     0x140007dc3
   1400075f6:	movzx  eax,BYTE PTR [r15]
   1400075fa:	mov    ecx,esi
   1400075fc:	dec    r14d
   1400075ff:	shl    eax,cl
   140007601:	inc    r15
   140007604:	add    ebp,eax
   140007606:	add    esi,0x8
   140007609:	cmp    esi,edx
   14000760b:	jb     0x1400075ed
   14000760d:	mov    ecx,r8d
   140007610:	mov    eax,0xfffffff9
   140007615:	shr    ebp,cl
   140007617:	mov    edx,ebp
   140007619:	and    edx,0x7f
   14000761c:	add    edx,0xb
   14000761f:	shr    ebp,0x7
   140007622:	sub    eax,r8d
   140007625:	mov    r9d,r12d
   140007628:	add    esi,eax
   14000762a:	mov    eax,DWORD PTR [rdi+0x7c]
   14000762d:	lea    ecx,[rdx+rax*1]
   140007630:	mov    eax,DWORD PTR [rdi+0x78]
   140007633:	add    eax,DWORD PTR [rdi+0x74]
   140007636:	cmp    ecx,eax
   140007638:	jbe    0x1400076f7
   14000763e:	lea    rax,[rip+0x23cd3]        # 0x14002b318
   140007645:	mov    QWORD PTR [r13+0x20],rax
   140007649:	mov    DWORD PTR [rdi],0x1b
   14000764f:	cmp    DWORD PTR [rdi],0x1b
   140007652:	mov    r8d,DWORD PTR [rsp+0xb8]
   14000765a:	mov    r9d,DWORD PTR [rsp+0xb0]
   140007662:	mov    edx,0x7
   140007667:	je     0x140006a4f
   14000766d:	mov    r8d,DWORD PTR [rdi+0x74]
   140007671:	lea    rax,[rdi+0x548]
   140007678:	lea    r12,[rdi+0x308]
   14000767f:	mov    QWORD PTR [rdi+0x80],rax
   140007686:	mov    QWORD PTR [rdi+0x58],rax
   14000768a:	lea    rax,[rdi+0x68]
   14000768e:	lea    rdx,[rdi+0x88]
   140007695:	lea    r9,[rdi+0x80]
   14000769c:	mov    ecx,0x1
   1400076a1:	mov    QWORD PTR [rsp+0x28],r12
   1400076a6:	mov    DWORD PTR [rax],0x9
   1400076ac:	mov    QWORD PTR [rsp+0x20],rax
   1400076b1:	call   0x1400082f4
   1400076b6:	xor    ecx,ecx
   1400076b8:	mov    DWORD PTR [rsp+0xa0],eax
   1400076bf:	cmp    eax,ecx
   1400076c1:	je     0x14000773b
   1400076c3:	mov    r9d,DWORD PTR [rsp+0xb0]
   1400076cb:	mov    r10,QWORD PTR [rsp+0x40]
   1400076d0:	lea    rax,[rip+0x23c21]        # 0x14002b2f8
   1400076d7:	mov    QWORD PTR [r13+0x20],rax
   1400076db:	mov    DWORD PTR [rdi],0x1b
   1400076e1:	jmp    0x140007108
   1400076e6:	mov    eax,DWORD PTR [rdi+0x7c]
   1400076e9:	dec    edx
   1400076eb:	mov    WORD PTR [rdi+rax*2+0x88],r9w
   1400076f4:	inc    DWORD PTR [rdi+0x7c]
   1400076f7:	cmp    edx,r12d
   1400076fa:	jne    0x1400076e6
   1400076fc:	mov    eax,DWORD PTR [rdi+0x78]
   1400076ff:	add    eax,DWORD PTR [rdi+0x74]
   140007702:	cmp    DWORD PTR [rdi+0x7c],eax
   140007705:	jae    0x14000764f
   14000770b:	mov    edx,0x11
   140007710:	jmp    0x1400074b5
   140007715:	mov    r8d,DWORD PTR [rsp+0xb8]
   14000771d:	mov    r9d,DWORD PTR [rsp+0xb0]
   140007725:	lea    rax,[rip+0x23bec]        # 0x14002b318
   14000772c:	mov    QWORD PTR [r13+0x20],rax
   140007730:	mov    DWORD PTR [rdi],0x1b
   140007736:	jmp    0x140006a4a
   14000773b:	mov    rax,QWORD PTR [rdi+0x80]
   140007742:	mov    r8d,DWORD PTR [rdi+0x78]
   140007746:	lea    rcx,[rdi+0x6c]
   14000774a:	mov    QWORD PTR [rdi+0x60],rax
   14000774e:	mov    eax,DWORD PTR [rdi+0x74]
   140007751:	mov    DWORD PTR [rcx],0x6
   140007757:	mov    QWORD PTR [rsp+0x28],r12
   14000775c:	mov    QWORD PTR [rsp+0x20],rcx
   140007761:	lea    r9,[rdi+0x80]
   140007768:	lea    rdx,[rdi+rax*2+0x88]
   140007770:	mov    ecx,0x2
   140007775:	call   0x1400082f4
   14000777a:	mov    r8d,DWORD PTR [rsp+0xb8]
   140007782:	mov    r9d,DWORD PTR [rsp+0xb0]
   14000778a:	mov    r10,QWORD PTR [rsp+0x40]
   14000778f:	mov    ebx,DWORD PTR [rsp+0xa8]
   140007796:	xor    r12d,r12d
   140007799:	mov    DWORD PTR [rsp+0xa0],eax
   1400077a0:	cmp    eax,r12d
   1400077a3:	je     0x1400077bb
   1400077a5:	lea    rax,[rip+0x23b34]        # 0x14002b2e0
   1400077ac:	mov    QWORD PTR [r13+0x20],rax
   1400077b0:	mov    DWORD PTR [rdi],0x1b
   1400077b6:	jmp    0x140006a44
   1400077bb:	mov    DWORD PTR [rdi],0x12
   1400077c1:	cmp    r14d,0x6
   1400077c5:	jb     0x14000780e
   1400077c7:	cmp    r9d,0x102
   1400077ce:	jb     0x14000780e
   1400077d0:	mov    QWORD PTR [r13+0x10],r10
   1400077d4:	mov    DWORD PTR [r13+0x18],r9d
   1400077d8:	mov    QWORD PTR [r13+0x0],r15
   1400077dc:	mov    DWORD PTR [r13+0x8],r14d
   1400077e0:	mov    edx,r8d
   1400077e3:	mov    rcx,r13
   1400077e6:	mov    DWORD PTR [rdi+0x40],ebp
   1400077e9:	mov    DWORD PTR [rdi+0x44],esi
   1400077ec:	call   0x140006290
   1400077f1:	mov    r10,QWORD PTR [r13+0x10]
   1400077f5:	mov    r9d,DWORD PTR [r13+0x18]
   1400077f9:	mov    r15,QWORD PTR [r13+0x0]
   1400077fd:	mov    r14d,DWORD PTR [r13+0x8]
   140007801:	mov    r8d,DWORD PTR [rsp+0xb8]
   140007809:	jmp    0x140006a31
   14000780e:	mov    ecx,DWORD PTR [rdi+0x68]
   140007811:	mov    r11,QWORD PTR [rdi+0x58]
   140007815:	mov    r9d,0x1
   14000781b:	mov    eax,r9d
   14000781e:	shl    eax,cl
   140007820:	sub    eax,r9d
   140007823:	mov    ecx,eax
   140007825:	mov    eax,ebp
   140007827:	and    rcx,rax
   14000782a:	mov    eax,DWORD PTR [r11+rcx*4]
   14000782e:	jmp    0x140007865
   140007830:	cmp    r14d,r12d
   140007833:	je     0x140007dc3
   140007839:	movzx  eax,BYTE PTR [r15]
   14000783d:	mov    ecx,esi
   14000783f:	dec    r14d
   140007842:	shl    eax,cl
   140007844:	mov    ecx,DWORD PTR [rdi+0x68]
   140007847:	add    r15,r9
   14000784a:	add    ebp,eax
   14000784c:	mov    eax,r9d
   14000784f:	add    esi,0x8
   140007852:	shl    eax,cl
   140007854:	sub    eax,r9d
   140007857:	mov    ecx,eax
   140007859:	mov    eax,ebp
   14000785b:	and    rcx,rax
   14000785e:	mov    rax,QWORD PTR [rdi+0x58]
   140007862:	mov    eax,DWORD PTR [rax+rcx*4]
   140007865:	mov    ecx,eax
   140007867:	shr    ecx,0x8
   14000786a:	movzx  ecx,cl
   14000786d:	cmp    ecx,esi
   14000786f:	ja     0x140007830
   140007871:	cmp    al,r12b
   140007874:	je     0x14000792b
   14000787a:	test   al,0xf0
   14000787c:	jne    0x14000792b
   140007882:	mov    r10d,eax
   140007885:	movzx  ecx,al
   140007888:	mov    edx,eax
   14000788a:	shr    r10d,0x8
   14000788e:	mov    DWORD PTR [rsp+0x34],eax
   140007892:	shr    eax,0x10
   140007895:	movzx  r8d,r10b
   140007899:	add    ecx,r8d
   14000789c:	shl    r9d,cl
   14000789f:	mov    ecx,r8d
   1400078a2:	dec    r9d
   1400078a5:	and    r9d,ebp
   1400078a8:	shr    r9d,cl
   1400078ab:	add    r9d,eax
   1400078ae:	mov    eax,DWORD PTR [r11+r9*4]
   1400078b2:	mov    ecx,eax
   1400078b4:	shr    ecx,0x8
   1400078b7:	movzx  r8d,cl
   1400078bb:	movzx  ecx,r10b
   1400078bf:	add    r8d,ecx
   1400078c2:	jmp    0x14000791d
   1400078c4:	cmp    r14d,r12d
   1400078c7:	je     0x140007dc3
   1400078cd:	movzx  eax,BYTE PTR [r15]
   1400078d1:	movzx  r9d,BYTE PTR [rsp+0x35]
   1400078d7:	mov    ecx,esi
   1400078d9:	shl    eax,cl
   1400078db:	mov    r8d,0x1
   1400078e1:	movzx  ecx,dl
   1400078e4:	add    ecx,r9d
   1400078e7:	add    ebp,eax
   1400078e9:	movzx  eax,WORD PTR [rsp+0x36]
   1400078ee:	shl    r8d,cl
   1400078f1:	mov    ecx,r9d
   1400078f4:	dec    r14d
   1400078f7:	dec    r8d
   1400078fa:	inc    r15
   1400078fd:	add    esi,0x8
   140007900:	and    r8d,ebp
   140007903:	shr    r8d,cl
   140007906:	add    r8d,eax
   140007909:	mov    rax,QWORD PTR [rdi+0x58]
   14000790d:	mov    eax,DWORD PTR [rax+r8*4]
   140007911:	mov    ecx,eax
   140007913:	shr    ecx,0x8
   140007916:	movzx  r8d,cl
   14000791a:	add    r8d,r9d
   14000791d:	cmp    r8d,esi
   140007920:	ja     0x1400078c4
   140007922:	movzx  ecx,BYTE PTR [rsp+0x35]
   140007927:	shr    ebp,cl
   140007929:	sub    esi,ecx
   14000792b:	mov    ecx,eax
   14000792d:	shr    ecx,0x8
   140007930:	movzx  ecx,cl
   140007933:	shr    ebp,cl
   140007935:	sub    esi,ecx
   140007937:	mov    ecx,eax
   140007939:	shr    ecx,0x10
   14000793c:	mov    DWORD PTR [rdi+0x48],ecx
   14000793f:	cmp    al,r12b
   140007942:	jne    0x14000794f
   140007944:	mov    DWORD PTR [rdi],0x17
   14000794a:	jmp    0x140006ef9
   14000794f:	test   al,0x20
   140007951:	jne    0x1400072c7
   140007957:	test   al,0x40
   140007959:	je     0x140007967
   14000795b:	lea    rax,[rip+0x23056]        # 0x14002a9b8
   140007962:	jmp    0x14000745e
   140007967:	movzx  ecx,al
   14000796a:	mov    DWORD PTR [rdi],0x13
   140007970:	and    ecx,0xf
   140007973:	mov    DWORD PTR [rdi+0x50],ecx
   140007976:	mov    edx,DWORD PTR [rdi+0x50]
   140007979:	cmp    edx,r12d
   14000797c:	je     0x1400079b7
   14000797e:	cmp    esi,edx
   140007980:	jae    0x1400079a3
   140007982:	cmp    r14d,r12d
   140007985:	je     0x140007dc3
   14000798b:	movzx  eax,BYTE PTR [r15]
   14000798f:	mov    ecx,esi
   140007991:	add    esi,0x8
   140007994:	shl    eax,cl
   140007996:	dec    r14d
   140007999:	inc    r15
   14000799c:	add    ebp,eax
   14000799e:	cmp    esi,DWORD PTR [rdi+0x50]
   1400079a1:	jb     0x140007982
   1400079a3:	mov    ecx,edx
   1400079a5:	mov    eax,0x1
   1400079aa:	shl    eax,cl
   1400079ac:	dec    eax
   1400079ae:	and    eax,ebp
   1400079b0:	shr    ebp,cl
   1400079b2:	add    DWORD PTR [rdi+0x48],eax
   1400079b5:	sub    esi,edx
   1400079b7:	mov    DWORD PTR [rdi],0x14
   1400079bd:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400079c0:	mov    r11,QWORD PTR [rdi+0x60]
   1400079c4:	mov    r9d,0x1
   1400079ca:	mov    eax,r9d
   1400079cd:	shl    eax,cl
   1400079cf:	sub    eax,r9d
   1400079d2:	mov    ecx,eax
   1400079d4:	mov    eax,ebp
   1400079d6:	and    rcx,rax
   1400079d9:	mov    eax,DWORD PTR [r11+rcx*4]
   1400079dd:	jmp    0x140007a14
   1400079df:	cmp    r14d,r12d
   1400079e2:	je     0x140007dc3
   1400079e8:	movzx  eax,BYTE PTR [r15]
   1400079ec:	mov    ecx,esi
   1400079ee:	dec    r14d
   1400079f1:	shl    eax,cl
   1400079f3:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400079f6:	add    r15,r9
   1400079f9:	add    ebp,eax
   1400079fb:	mov    eax,r9d
   1400079fe:	add    esi,0x8
   140007a01:	shl    eax,cl
   140007a03:	sub    eax,r9d
   140007a06:	mov    ecx,eax
   140007a08:	mov    eax,ebp
   140007a0a:	and    rcx,rax
   140007a0d:	mov    rax,QWORD PTR [rdi+0x60]
   140007a11:	mov    eax,DWORD PTR [rax+rcx*4]
   140007a14:	mov    ecx,eax
   140007a16:	shr    ecx,0x8
   140007a19:	movzx  ecx,cl
   140007a1c:	cmp    ecx,esi
   140007a1e:	ja     0x1400079df
   140007a20:	test   al,0xf0
   140007a22:	jne    0x140007ad1
   140007a28:	mov    r10d,eax
   140007a2b:	movzx  ecx,al
   140007a2e:	mov    edx,eax
   140007a30:	shr    r10d,0x8
   140007a34:	mov    DWORD PTR [rsp+0x34],eax
   140007a38:	shr    eax,0x10
   140007a3b:	movzx  r8d,r10b
   140007a3f:	add    ecx,r8d
   140007a42:	shl    r9d,cl
   140007a45:	mov    ecx,r8d
   140007a48:	dec    r9d
   140007a4b:	and    r9d,ebp
   140007a4e:	shr    r9d,cl
   140007a51:	add    r9d,eax
   140007a54:	mov    eax,DWORD PTR [r11+r9*4]
   140007a58:	mov    ecx,eax
   140007a5a:	shr    ecx,0x8
   140007a5d:	movzx  r8d,cl
   140007a61:	movzx  ecx,r10b
   140007a65:	add    r8d,ecx
   140007a68:	jmp    0x140007ac3
   140007a6a:	cmp    r14d,r12d
   140007a6d:	je     0x140007dc3
   140007a73:	movzx  eax,BYTE PTR [r15]
   140007a77:	movzx  r9d,BYTE PTR [rsp+0x35]
   140007a7d:	mov    ecx,esi
   140007a7f:	shl    eax,cl
   140007a81:	mov    r8d,0x1
   140007a87:	movzx  ecx,dl
   140007a8a:	add    ecx,r9d
   140007a8d:	add    ebp,eax
   140007a8f:	movzx  eax,WORD PTR [rsp+0x36]
   140007a94:	shl    r8d,cl
   140007a97:	mov    ecx,r9d
   140007a9a:	dec    r14d
   140007a9d:	dec    r8d
   140007aa0:	inc    r15
   140007aa3:	add    esi,0x8
   140007aa6:	and    r8d,ebp
   140007aa9:	shr    r8d,cl
   140007aac:	add    r8d,eax
   140007aaf:	mov    rax,QWORD PTR [rdi+0x60]
   140007ab3:	mov    eax,DWORD PTR [rax+r8*4]
   140007ab7:	mov    ecx,eax
   140007ab9:	shr    ecx,0x8
   140007abc:	movzx  r8d,cl
   140007ac0:	add    r8d,r9d
   140007ac3:	cmp    r8d,esi
   140007ac6:	ja     0x140007a6a
   140007ac8:	movzx  ecx,BYTE PTR [rsp+0x35]
   140007acd:	shr    ebp,cl
   140007acf:	sub    esi,ecx
   140007ad1:	mov    ecx,eax
   140007ad3:	shr    ecx,0x8
   140007ad6:	movzx  ecx,cl
   140007ad9:	shr    ebp,cl
   140007adb:	sub    esi,ecx
   140007add:	test   al,0x40
   140007adf:	je     0x140007aed
   140007ae1:	lea    rax,[rip+0x22eb8]        # 0x14002a9a0
   140007ae8:	jmp    0x14000745e
   140007aed:	mov    r8d,DWORD PTR [rsp+0xb8]
   140007af5:	mov    r9d,DWORD PTR [rsp+0xb0]
   140007afd:	mov    r10,QWORD PTR [rsp+0x40]
   140007b02:	mov    ecx,eax
   140007b04:	mov    DWORD PTR [rdi],0x15
   140007b0a:	mov    r11d,0x10
   140007b10:	shr    ecx,0x10
   140007b13:	mov    DWORD PTR [rdi+0x4c],ecx
   140007b16:	movzx  ecx,al
   140007b19:	and    ecx,0xf
   140007b1c:	mov    DWORD PTR [rdi+0x50],ecx
   140007b1f:	mov    edx,DWORD PTR [rdi+0x50]
   140007b22:	cmp    edx,r12d
   140007b25:	je     0x140007b60
   140007b27:	cmp    esi,edx
   140007b29:	jae    0x140007b4c
   140007b2b:	cmp    r14d,r12d
   140007b2e:	je     0x140007dc3
   140007b34:	movzx  eax,BYTE PTR [r15]
   140007b38:	mov    ecx,esi
   140007b3a:	add    esi,0x8
   140007b3d:	shl    eax,cl
   140007b3f:	dec    r14d
   140007b42:	inc    r15
   140007b45:	add    ebp,eax
   140007b47:	cmp    esi,DWORD PTR [rdi+0x50]
   140007b4a:	jb     0x140007b2b
   140007b4c:	mov    ecx,edx
   140007b4e:	mov    eax,0x1
   140007b53:	shl    eax,cl
   140007b55:	dec    eax
   140007b57:	and    eax,ebp
   140007b59:	shr    ebp,cl
   140007b5b:	add    DWORD PTR [rdi+0x4c],eax
   140007b5e:	sub    esi,edx
   140007b60:	mov    eax,DWORD PTR [rdi+0x30]
   140007b63:	sub    eax,r9d
   140007b66:	add    eax,r8d
   140007b69:	cmp    DWORD PTR [rdi+0x4c],eax
   140007b6c:	jbe    0x140007b7a
   140007b6e:	lea    rax,[rip+0x22e0b]        # 0x14002a980
   140007b75:	jmp    0x140006f64
   140007b7a:	mov    DWORD PTR [rdi],0x16
   140007b80:	cmp    r9d,r12d
   140007b83:	je     0x140007dc3
   140007b89:	mov    ecx,DWORD PTR [rdi+0x4c]
   140007b8c:	mov    eax,r8d
   140007b8f:	sub    eax,r9d
   140007b92:	cmp    ecx,eax
   140007b94:	jbe    0x140007bc5
   140007b96:	sub    ecx,eax
   140007b98:	mov    eax,DWORD PTR [rdi+0x34]
   140007b9b:	cmp    ecx,eax
   140007b9d:	jbe    0x140007bb4
   140007b9f:	mov    edx,DWORD PTR [rdi+0x2c]
   140007ba2:	sub    ecx,eax
   140007ba4:	sub    edx,ecx
   140007ba6:	jmp    0x140007bb8
   140007ba8:	lea    rax,[rip+0x23709]        # 0x14002b2b8
   140007baf:	jmp    0x140006f64
   140007bb4:	sub    eax,ecx
   140007bb6:	mov    edx,eax
   140007bb8:	mov    eax,DWORD PTR [rdi+0x48]
   140007bbb:	add    rdx,QWORD PTR [rdi+0x38]
   140007bbf:	cmp    ecx,eax
   140007bc1:	jbe    0x140007bd0
   140007bc3:	jmp    0x140007bce
   140007bc5:	mov    eax,DWORD PTR [rdi+0x48]
   140007bc8:	mov    rdx,r10
   140007bcb:	sub    rdx,rcx
   140007bce:	mov    ecx,eax
   140007bd0:	cmp    ecx,r9d
   140007bd3:	cmova  ecx,r9d
   140007bd7:	sub    r9d,ecx
   140007bda:	sub    eax,ecx
   140007bdc:	mov    DWORD PTR [rdi+0x48],eax
   140007bdf:	mov    DWORD PTR [rsp+0xb0],r9d
   140007be7:	mov    al,BYTE PTR [rdx]
   140007be9:	inc    rdx
   140007bec:	mov    BYTE PTR [r10],al
   140007bef:	inc    r10
   140007bf2:	add    ecx,0xffffffff
   140007bf5:	jne    0x140007be7
   140007bf7:	mov    QWORD PTR [rsp+0x40],r10
   140007bfc:	lea    edx,[rcx+0x7]
   140007bff:	cmp    DWORD PTR [rdi+0x48],r12d
   140007c03:	jne    0x140006a4f
   140007c09:	jmp    0x140007d7c
   140007c0e:	sub    ecx,0x17
   140007c11:	je     0x140007d5e
   140007c17:	sub    ecx,0x1
   140007c1a:	je     0x140007c4a
   140007c1c:	sub    ecx,0x1
   140007c1f:	je     0x140007d16
   140007c25:	sub    ecx,0x1
   140007c28:	je     0x140007dbb
   140007c2e:	sub    ecx,0x1
   140007c31:	je     0x140007da7
   140007c37:	cmp    ecx,0x1
   140007c3a:	jne    0x140006aa9
   140007c40:	mov    eax,0xfffffffc
   140007c45:	jmp    0x140006aae
   140007c4a:	cmp    DWORD PTR [rdi+0x8],r12d
   140007c4e:	je     0x140007d10
   140007c54:	jmp    0x140007c72
   140007c56:	cmp    r14d,r12d
   140007c59:	je     0x140007dc3
   140007c5f:	movzx  eax,BYTE PTR [r15]
   140007c63:	mov    ecx,esi
   140007c65:	dec    r14d
   140007c68:	shl    eax,cl
   140007c6a:	inc    r15
   140007c6d:	add    ebp,eax
   140007c6f:	add    esi,0x8
   140007c72:	cmp    esi,0x20
   140007c75:	jb     0x140007c56
   140007c77:	sub    r8d,r9d
   140007c7a:	add    DWORD PTR [r13+0x1c],r8d
   140007c7e:	add    DWORD PTR [rdi+0x1c],r8d
   140007c82:	cmp    r8d,r12d
   140007c85:	je     0x140007cc2
   140007c87:	mov    ecx,DWORD PTR [rdi+0x18]
   140007c8a:	mov    eax,r8d
   140007c8d:	mov    rdx,r10
   140007c90:	sub    rdx,rax
   140007c93:	cmp    DWORD PTR [rdi+0x10],r12d
   140007c97:	je     0x140007ca0
   140007c99:	call   0x140006278
   140007c9e:	jmp    0x140007ca5
   140007ca0:	call   0x140005734
   140007ca5:	mov    r9d,DWORD PTR [rsp+0xb0]
   140007cad:	mov    r10,QWORD PTR [rsp+0x40]
   140007cb2:	mov    edx,0x7
   140007cb7:	mov    DWORD PTR [rdi+0x18],eax
   140007cba:	lea    r11d,[rdx+0x9]
   140007cbe:	mov    DWORD PTR [r13+0x4c],eax
   140007cc2:	mov    ecx,ebp
   140007cc4:	mov    eax,ebp
   140007cc6:	mov    r8d,r9d
   140007cc9:	shl    eax,0x10
   140007ccc:	and    ecx,0xff00
   140007cd2:	mov    DWORD PTR [rsp+0xb8],r9d
   140007cda:	add    ecx,eax
   140007cdc:	mov    eax,ebp
   140007cde:	shr    eax,0x8
   140007ce1:	shl    ecx,0x8
   140007ce4:	and    eax,0xff00
   140007ce9:	add    ecx,eax
   140007ceb:	mov    eax,ebp
   140007ced:	shr    eax,0x18
   140007cf0:	add    ecx,eax
   140007cf2:	cmp    DWORD PTR [rdi+0x10],r12d
   140007cf6:	cmovne ecx,ebp
   140007cf9:	cmp    ecx,DWORD PTR [rdi+0x18]
   140007cfc:	je     0x140007d0a
   140007cfe:	lea    rax,[rip+0x2359b]        # 0x14002b2a0
   140007d05:	jmp    0x140006fca
   140007d0a:	mov    ebp,r12d
   140007d0d:	mov    esi,r12d
   140007d10:	mov    DWORD PTR [rdi],0x19
   140007d16:	cmp    DWORD PTR [rdi+0x8],r12d
   140007d1a:	je     0x140007db5
   140007d20:	cmp    DWORD PTR [rdi+0x10],r12d
   140007d24:	je     0x140007db5
   140007d2a:	jmp    0x140007d48
   140007d2c:	cmp    r14d,r12d
   140007d2f:	je     0x140007dc3
   140007d35:	movzx  eax,BYTE PTR [r15]
   140007d39:	mov    ecx,esi
   140007d3b:	dec    r14d
   140007d3e:	shl    eax,cl
   140007d40:	inc    r15
   140007d43:	add    ebp,eax
   140007d45:	add    esi,0x8
   140007d48:	cmp    esi,0x20
   140007d4b:	jb     0x140007d2c
   140007d4d:	cmp    ebp,DWORD PTR [rdi+0x1c]
   140007d50:	je     0x140007daf
   140007d52:	lea    rax,[rip+0x2352f]        # 0x14002b288
   140007d59:	jmp    0x140006fca
   140007d5e:	cmp    r9d,r12d
   140007d61:	je     0x140007dc3
   140007d63:	mov    al,BYTE PTR [rdi+0x48]
   140007d66:	mov    BYTE PTR [r10],al
   140007d69:	inc    r10
   140007d6c:	dec    r9d
   140007d6f:	mov    DWORD PTR [rsp+0xb0],r9d
   140007d77:	mov    QWORD PTR [rsp+0x40],r10
   140007d7c:	mov    DWORD PTR [rdi],0x12
   140007d82:	jmp    0x140006a4f
   140007d87:	mov    QWORD PTR [r13+0x10],r10
   140007d8b:	mov    DWORD PTR [r13+0x18],r9d
   140007d8f:	mov    QWORD PTR [r13+0x0],r15
   140007d93:	mov    DWORD PTR [r13+0x8],r14d
   140007d97:	mov    eax,0x2
   140007d9c:	mov    DWORD PTR [rdi+0x40],ebp
   140007d9f:	mov    DWORD PTR [rdi+0x44],esi
   140007da2:	jmp    0x140006aae
   140007da7:	mov    r12d,0xfffffffd
   140007dad:	jmp    0x140007dcb
   140007daf:	mov    ebp,r12d
   140007db2:	mov    esi,r12d
   140007db5:	mov    DWORD PTR [rdi],0x1a
   140007dbb:	mov    r12d,0x1
   140007dc1:	jmp    0x140007dcb
   140007dc3:	mov    r12d,DWORD PTR [rsp+0xa0]
   140007dcb:	mov    rax,QWORD PTR [rsp+0x40]
   140007dd0:	mov    ebx,DWORD PTR [rsp+0xb8]
   140007dd7:	mov    QWORD PTR [r13+0x0],r15
   140007ddb:	mov    QWORD PTR [r13+0x10],rax
   140007ddf:	mov    eax,DWORD PTR [rsp+0xb0]
   140007de6:	mov    DWORD PTR [r13+0x8],r14d
   140007dea:	mov    DWORD PTR [r13+0x18],eax
   140007dee:	mov    DWORD PTR [rdi+0x40],ebp
   140007df1:	xor    ebp,ebp
   140007df3:	mov    DWORD PTR [rdi+0x44],esi
   140007df6:	cmp    DWORD PTR [rdi+0x2c],ebp
   140007df9:	jne    0x140007e06
   140007dfb:	cmp    DWORD PTR [rdi],0x18
   140007dfe:	jge    0x140007e1f
   140007e00:	cmp    ebx,DWORD PTR [r13+0x18]
   140007e04:	je     0x140007e1f
   140007e06:	mov    edx,ebx
   140007e08:	mov    rcx,r13
   140007e0b:	call   0x1400068c4
   140007e10:	cmp    eax,ebp
   140007e12:	je     0x140007e1f
   140007e14:	mov    DWORD PTR [rdi],0x1c
   140007e1a:	jmp    0x140007c40
   140007e1f:	sub    ebx,DWORD PTR [r13+0x18]
   140007e23:	mov    esi,DWORD PTR [rsp+0x38]
   140007e27:	sub    esi,DWORD PTR [r13+0x8]
   140007e2b:	add    DWORD PTR [r13+0x1c],ebx
   140007e2f:	add    DWORD PTR [r13+0xc],esi
   140007e33:	add    DWORD PTR [rdi+0x1c],ebx
   140007e36:	cmp    DWORD PTR [rdi+0x8],ebp
   140007e39:	je     0x140007e66
   140007e3b:	cmp    ebx,ebp
   140007e3d:	je     0x140007e66
   140007e3f:	mov    rdx,QWORD PTR [r13+0x10]
   140007e43:	mov    ecx,DWORD PTR [rdi+0x18]
   140007e46:	mov    eax,ebx
   140007e48:	sub    rdx,rax
   140007e4b:	mov    r8d,ebx
   140007e4e:	cmp    DWORD PTR [rdi+0x10],ebp
   140007e51:	je     0x140007e5a
   140007e53:	call   0x140006278
   140007e58:	jmp    0x140007e5f
   140007e5a:	call   0x140005734
   140007e5f:	mov    DWORD PTR [rdi+0x18],eax
   140007e62:	mov    DWORD PTR [r13+0x4c],eax
   140007e66:	mov    eax,DWORD PTR [rdi+0x4]
   140007e69:	mov    edx,0x80
   140007e6e:	neg    eax
   140007e70:	mov    eax,ebp
   140007e72:	sbb    ecx,ecx
   140007e74:	and    ecx,0x40
   140007e77:	cmp    DWORD PTR [rdi],0xb
   140007e7a:	cmove  eax,edx
   140007e7d:	add    ecx,eax
   140007e7f:	add    ecx,DWORD PTR [rdi+0x44]
   140007e82:	mov    DWORD PTR [r13+0x48],ecx
   140007e86:	cmp    esi,ebp
   140007e88:	jne    0x140007e8e
   140007e8a:	cmp    ebx,ebp
   140007e8c:	je     0x140007e98
   140007e8e:	cmp    DWORD PTR [rsp+0xa8],0x4
   140007e96:	jne    0x140007ea4
   140007e98:	mov    eax,0xfffffffb
   140007e9d:	cmp    r12d,ebp
   140007ea0:	cmove  r12d,eax
   140007ea4:	mov    eax,r12d
   140007ea7:	jmp    0x140006aae
   140007eac:	rex push rbx
   140007eae:	sub    rsp,0x20
   140007eb2:	mov    rbx,rcx
   140007eb5:	test   rcx,rcx
   140007eb8:	je     0x140007ef0
   140007eba:	mov    rax,QWORD PTR [rcx+0x28]
   140007ebe:	test   rax,rax
   140007ec1:	je     0x140007ef0
   140007ec3:	mov    r8,QWORD PTR [rcx+0x38]
   140007ec7:	test   r8,r8
   140007eca:	je     0x140007ef0
   140007ecc:	mov    rdx,QWORD PTR [rax+0x38]
   140007ed0:	test   rdx,rdx
   140007ed3:	je     0x140007edc
   140007ed5:	mov    rcx,QWORD PTR [rcx+0x40]
   140007ed9:	call   r8
   140007edc:	mov    rdx,QWORD PTR [rbx+0x28]
   140007ee0:	mov    rcx,QWORD PTR [rbx+0x40]
   140007ee4:	call   QWORD PTR [rbx+0x38]
   140007ee7:	and    QWORD PTR [rbx+0x28],0x0
   140007eec:	xor    eax,eax
   140007eee:	jmp    0x140007ef5
   140007ef0:	mov    eax,0xfffffffe
   140007ef5:	add    rsp,0x20
   140007ef9:	pop    rbx
   140007efa:	ret    
   140007efb:	int3   
   140007efc:	mov    QWORD PTR [rsp+0x8],rbx
   140007f01:	mov    QWORD PTR [rsp+0x10],rbp
   140007f06:	mov    QWORD PTR [rsp+0x18],rsi
   140007f0b:	push   rdi
   140007f0c:	sub    rsp,0x20
   140007f10:	mov    esi,r8d
   140007f13:	mov    rbp,rdx
   140007f16:	mov    rdi,rcx
   140007f19:	test   rcx,rcx
   140007f1c:	je     0x140007f32
   140007f1e:	mov    rbx,QWORD PTR [rcx+0x28]
   140007f22:	test   rbx,rbx
   140007f25:	je     0x140007f32
   140007f27:	cmp    DWORD PTR [rbx+0x8],0x0
   140007f2b:	je     0x140007f4c
   140007f2d:	cmp    DWORD PTR [rbx],0xa
   140007f30:	je     0x140007f51
   140007f32:	mov    eax,0xfffffffe
   140007f37:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f3c:	mov    rbp,QWORD PTR [rsp+0x38]
   140007f41:	mov    rsi,QWORD PTR [rsp+0x40]
   140007f46:	add    rsp,0x20
   140007f4a:	pop    rdi
   140007f4b:	ret    
   140007f4c:	cmp    DWORD PTR [rbx],0xa
   140007f4f:	jne    0x140007f76
   140007f51:	xor    r8d,r8d
   140007f54:	xor    edx,edx
   140007f56:	xor    ecx,ecx
   140007f58:	call   0x140005734
   140007f5d:	mov    r8d,esi
   140007f60:	mov    rdx,rbp
   140007f63:	mov    ecx,eax
   140007f65:	call   0x140005734
   140007f6a:	cmp    eax,DWORD PTR [rbx+0x18]
   140007f6d:	je     0x140007f76
   140007f6f:	mov    eax,0xfffffffd
   140007f74:	jmp    0x140007f37
   140007f76:	mov    edx,DWORD PTR [rdi+0x18]
   140007f79:	mov    rcx,rdi
   140007f7c:	call   0x1400068c4
   140007f81:	test   eax,eax
   140007f83:	je     0x140007f92
   140007f85:	mov    DWORD PTR [rbx],0x1c
   140007f8b:	mov    eax,0xfffffffc
   140007f90:	jmp    0x140007f37
   140007f92:	mov    rcx,QWORD PTR [rbx+0x38]
   140007f96:	cmp    esi,DWORD PTR [rbx+0x2c]
   140007f99:	jbe    0x140007fb7
   140007f9b:	mov    r8d,DWORD PTR [rbx+0x2c]
   140007f9f:	mov    rdx,rsi
   140007fa2:	sub    rdx,r8
   140007fa5:	add    rdx,rbp
   140007fa8:	call   0x140008b00
   140007fad:	mov    r11d,DWORD PTR [rbx+0x2c]
   140007fb1:	mov    DWORD PTR [rbx+0x30],r11d
   140007fb5:	jmp    0x140007fce
   140007fb7:	mov    eax,DWORD PTR [rbx+0x2c]
   140007fba:	sub    rcx,rsi
   140007fbd:	mov    r8,rsi
   140007fc0:	add    rcx,rax
   140007fc3:	mov    rdx,rbp
   140007fc6:	call   0x140008b00
   140007fcb:	mov    DWORD PTR [rbx+0x30],esi
   140007fce:	mov    DWORD PTR [rbx+0xc],0x1
   140007fd5:	xor    eax,eax
   140007fd7:	jmp    0x140007f37
   140007fdc:	test   rcx,rcx
   140007fdf:	je     0x140007ffb
   140007fe1:	mov    rax,QWORD PTR [rcx+0x28]
   140007fe5:	test   rax,rax
   140007fe8:	je     0x140007ffb
   140007fea:	test   BYTE PTR [rax+0x8],0x2
   140007fee:	je     0x140007ffb
   140007ff0:	mov    QWORD PTR [rax+0x20],rdx
   140007ff4:	and    DWORD PTR [rdx+0x40],0x0
   140007ff8:	xor    eax,eax
   140007ffa:	ret    
   140007ffb:	mov    eax,0xfffffffe
   140008000:	ret    
   140008001:	int3   
   140008002:	int3   
   140008003:	int3   
   140008004:	mov    r9d,DWORD PTR [rcx]
   140008007:	xor    r10d,r10d
   14000800a:	mov    r11,rcx
   14000800d:	test   r8d,r8d
   140008010:	je     0x14000804e
   140008012:	cmp    r9d,0x4
   140008016:	jae    0x14000804e
   140008018:	movzx  ecx,BYTE PTR [rdx]
   14000801b:	cmp    r9d,0x2
   14000801f:	sbb    eax,eax
   140008021:	not    eax
   140008023:	movzx  eax,al
   140008026:	cmp    ecx,eax
   140008028:	jne    0x14000802f
   14000802a:	inc    r9d
   14000802d:	jmp    0x140008043
   14000802f:	test   cl,cl
   140008031:	je     0x140008038
   140008033:	xor    r9d,r9d
   140008036:	jmp    0x140008043
   140008038:	mov    ecx,0x4
   14000803d:	sub    ecx,r9d
   140008040:	mov    r9d,ecx
   140008043:	inc    r10d
   140008046:	inc    rdx
   140008049:	cmp    r10d,r8d
   14000804c:	jb     0x140008012
   14000804e:	mov    DWORD PTR [r11],r9d
   140008051:	mov    eax,r10d
   140008054:	ret    
   140008055:	int3   
   140008056:	int3   
   140008057:	int3   
   140008058:	mov    QWORD PTR [rsp+0x10],rbx
   14000805d:	mov    QWORD PTR [rsp+0x18],rsi
   140008062:	push   rdi
   140008063:	sub    rsp,0x20
   140008067:	mov    rdi,rcx
   14000806a:	test   rcx,rcx
   14000806d:	je     0x140008132
   140008073:	mov    rsi,QWORD PTR [rcx+0x28]
   140008077:	test   rsi,rsi
   14000807a:	je     0x140008132
   140008080:	cmp    DWORD PTR [rcx+0x8],0x0
   140008084:	jne    0x140008096
   140008086:	cmp    DWORD PTR [rsi+0x44],0x8
   14000808a:	jae    0x140008096
   14000808c:	mov    eax,0xfffffffb
   140008091:	jmp    0x140008137
   140008096:	cmp    DWORD PTR [rsi],0x1d
   140008099:	je     0x1400080e8
   14000809b:	mov    eax,DWORD PTR [rsi+0x44]
   14000809e:	xor    r8d,r8d
   1400080a1:	mov    DWORD PTR [rsi],0x1d
   1400080a7:	mov    ecx,eax
   1400080a9:	and    ecx,0x7
   1400080ac:	shl    DWORD PTR [rsi+0x40],cl
   1400080af:	sub    eax,ecx
   1400080b1:	mov    DWORD PTR [rsi+0x44],eax
   1400080b4:	cmp    eax,0x8
   1400080b7:	jb     0x1400080d7
   1400080b9:	lea    rcx,[rsp+0x30]
   1400080be:	mov    al,BYTE PTR [rsi+0x40]
   1400080c1:	add    DWORD PTR [rsi+0x44],0xfffffff8
   1400080c5:	shr    DWORD PTR [rsi+0x40],0x8
   1400080c9:	mov    BYTE PTR [rcx],al
   1400080cb:	inc    r8d
   1400080ce:	inc    rcx
   1400080d1:	cmp    DWORD PTR [rsi+0x44],0x8
   1400080d5:	jae    0x1400080be
   1400080d7:	lea    rcx,[rsi+0x7c]
   1400080db:	lea    rdx,[rsp+0x30]
   1400080e0:	and    DWORD PTR [rcx],0x0
   1400080e3:	call   0x140008004
   1400080e8:	mov    r8d,DWORD PTR [rdi+0x8]
   1400080ec:	mov    rdx,QWORD PTR [rdi]
   1400080ef:	lea    rcx,[rsi+0x7c]
   1400080f3:	call   0x140008004
   1400080f8:	add    DWORD PTR [rdi+0xc],eax
   1400080fb:	sub    DWORD PTR [rdi+0x8],eax
   1400080fe:	mov    r9d,DWORD PTR [rdi+0xc]
   140008102:	mov    ecx,eax
   140008104:	add    QWORD PTR [rdi],rcx
   140008107:	cmp    DWORD PTR [rsi+0x7c],0x4
   14000810b:	je     0x140008114
   14000810d:	mov    eax,0xfffffffd
   140008112:	jmp    0x140008137
   140008114:	mov    r8d,DWORD PTR [rdi+0x1c]
   140008118:	mov    rcx,rdi
   14000811b:	call   0x1400066f4
   140008120:	mov    DWORD PTR [rdi+0xc],r9d
   140008124:	mov    DWORD PTR [rdi+0x1c],r8d
   140008128:	mov    DWORD PTR [rsi],0xb
   14000812e:	xor    eax,eax
   140008130:	jmp    0x140008137
   140008132:	mov    eax,0xfffffffe
   140008137:	mov    rbx,QWORD PTR [rsp+0x38]
   14000813c:	mov    rsi,QWORD PTR [rsp+0x40]
   140008141:	add    rsp,0x20
   140008145:	pop    rdi
   140008146:	ret    
   140008147:	int3   
   140008148:	xor    eax,eax
   14000814a:	cmp    rcx,rax
   14000814d:	je     0x140008168
   14000814f:	mov    rcx,QWORD PTR [rcx+0x28]
   140008153:	cmp    rcx,rax
   140008156:	je     0x140008168
   140008158:	cmp    DWORD PTR [rcx],0xd
   14000815b:	jne    0x14000816d
   14000815d:	cmp    DWORD PTR [rcx+0x44],eax
   140008160:	jne    0x14000816d
   140008162:	mov    eax,0x1
   140008167:	ret    
   140008168:	mov    eax,0xfffffffe
   14000816d:	ret    
   14000816e:	int3   
   14000816f:	int3   
   140008170:	mov    QWORD PTR [rsp+0x8],rbx
   140008175:	mov    QWORD PTR [rsp+0x10],rbp
   14000817a:	mov    QWORD PTR [rsp+0x18],rsi
   14000817f:	push   rdi
   140008180:	push   r12
   140008182:	push   r13
   140008184:	sub    rsp,0x20
   140008188:	mov    rbx,rdx
   14000818b:	mov    r12,rcx
   14000818e:	test   rcx,rcx
   140008191:	je     0x1400082d4
   140008197:	test   rdx,rdx
   14000819a:	je     0x1400082d4
   1400081a0:	mov    rdi,QWORD PTR [rdx+0x28]
   1400081a4:	test   rdi,rdi
   1400081a7:	je     0x1400082d4
   1400081ad:	mov    rax,QWORD PTR [rdx+0x30]
   1400081b1:	test   rax,rax
   1400081b4:	je     0x1400082d4
   1400081ba:	cmp    QWORD PTR [rdx+0x38],0x0
   1400081bf:	je     0x1400082d4
   1400081c5:	mov    rcx,QWORD PTR [rbx+0x40]
   1400081c9:	mov    r13d,0x1
   1400081cf:	mov    r8d,0x2548
   1400081d5:	mov    edx,r13d
   1400081d8:	call   rax
   1400081da:	mov    rsi,rax
   1400081dd:	test   rax,rax
   1400081e0:	jne    0x1400081ec
   1400081e2:	mov    eax,0xfffffffc
   1400081e7:	jmp    0x1400082d9
   1400081ec:	xor    ebp,ebp
   1400081ee:	cmp    QWORD PTR [rdi+0x38],rbp
   1400081f2:	je     0x14000821a
   1400081f4:	mov    ecx,DWORD PTR [rdi+0x28]
   1400081f7:	mov    edx,r13d
   1400081fa:	mov    r8d,r13d
   1400081fd:	shl    edx,cl
   1400081ff:	mov    rcx,QWORD PTR [rbx+0x40]
   140008203:	call   QWORD PTR [rbx+0x30]
   140008206:	mov    rbp,rax
   140008209:	test   rax,rax
   14000820c:	jne    0x14000821a
   14000820e:	mov    rcx,QWORD PTR [rbx+0x40]
   140008212:	mov    rdx,rsi
   140008215:	call   QWORD PTR [rbx+0x38]
   140008218:	jmp    0x1400081e2
   14000821a:	mov    rcx,r12
   14000821d:	mov    rdx,rbx
   140008220:	mov    r8d,0x58
   140008226:	call   0x140008b00
   14000822b:	mov    r8d,0x2548
   140008231:	mov    rdx,rdi
   140008234:	mov    rcx,rsi
   140008237:	call   0x140008b00
   14000823c:	mov    r11,QWORD PTR [rdi+0x58]
   140008240:	lea    rax,[rdi+0x548]
   140008247:	mov    ecx,0x548
   14000824c:	cmp    r11,rax
   14000824f:	jb     0x14000828d
   140008251:	lea    rax,[rdi+0x2544]
   140008258:	cmp    r11,rax
   14000825b:	ja     0x14000828d
   14000825d:	sub    r11,rdi
   140008260:	sub    r11,rcx
   140008263:	sar    r11,0x2
   140008267:	lea    rax,[rsi+r11*4+0x548]
   14000826f:	mov    QWORD PTR [rsi+0x58],rax
   140008273:	mov    rax,QWORD PTR [rdi+0x60]
   140008277:	sub    rax,rdi
   14000827a:	sub    rax,rcx
   14000827d:	sar    rax,0x2
   140008281:	lea    rax,[rsi+rax*4+0x548]
   140008289:	mov    QWORD PTR [rsi+0x60],rax
   14000828d:	mov    rax,QWORD PTR [rdi+0x80]
   140008294:	sub    rax,rdi
   140008297:	sub    rax,rcx
   14000829a:	sar    rax,0x2
   14000829e:	lea    rax,[rsi+rax*4+0x548]
   1400082a6:	mov    QWORD PTR [rsi+0x80],rax
   1400082ad:	test   rbp,rbp
   1400082b0:	je     0x1400082c7
   1400082b2:	mov    ecx,DWORD PTR [rdi+0x28]
   1400082b5:	mov    rdx,QWORD PTR [rdi+0x38]
   1400082b9:	shl    r13d,cl
   1400082bc:	mov    rcx,rbp
   1400082bf:	mov    r8d,r13d
   1400082c2:	call   0x140008b00
   1400082c7:	mov    QWORD PTR [rsi+0x38],rbp
   1400082cb:	xor    eax,eax
   1400082cd:	mov    QWORD PTR [r12+0x28],rsi
   1400082d2:	jmp    0x1400082d9
   1400082d4:	mov    eax,0xfffffffe
   1400082d9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400082de:	mov    rbp,QWORD PTR [rsp+0x48]
   1400082e3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400082e8:	add    rsp,0x20
   1400082ec:	pop    r13
   1400082ee:	pop    r12
   1400082f0:	pop    rdi
   1400082f1:	ret    
   1400082f2:	int3   
   1400082f3:	int3   
   1400082f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400082f9:	push   rbp
   1400082fa:	push   rsi
   1400082fb:	push   rdi
   1400082fc:	push   r12
   1400082fe:	push   r13
   140008300:	push   r14
   140008302:	push   r15
   140008304:	sub    rsp,0xa0
   14000830b:	mov    rax,QWORD PTR [rip+0x2bf8e]        # 0x1400342a0
   140008312:	xor    rax,rsp
   140008315:	mov    QWORD PTR [rsp+0x90],rax
   14000831d:	mov    rbp,QWORD PTR [rsp+0x108]
   140008325:	xor    r13d,r13d
   140008328:	mov    ebx,ecx
   14000832a:	mov    DWORD PTR [rsp+0x20],ecx
   14000832e:	mov    r10,r9
   140008331:	mov    QWORD PTR [rsp+0x38],r9
   140008336:	mov    r9,QWORD PTR [rsp+0x100]
   14000833e:	lea    ecx,[r13+0x10]
   140008342:	lea    rdi,[rsp+0x50]
   140008347:	movzx  eax,r13w
   14000834b:	mov    r12,rdx
   14000834e:	mov    QWORD PTR [rsp+0x40],rdx
   140008353:	mov    QWORD PTR [rsp+0x48],r9
   140008358:	mov    QWORD PTR [rsp+0x30],rbp
   14000835d:	lea    r14d,[r13+0x1]
   140008361:	rep stos WORD PTR es:[rdi],ax
   140008364:	cmp    r8d,r13d
   140008367:	jbe    0x140008381
   140008369:	mov    rcx,rdx
   14000836c:	mov    edx,r8d
   14000836f:	movzx  eax,WORD PTR [rcx]
   140008372:	add    rcx,0x2
   140008376:	add    WORD PTR [rsp+rax*2+0x50],r14w
   14000837c:	sub    rdx,r14
   14000837f:	jne    0x14000836f
   140008381:	mov    r11d,DWORD PTR [r9]
   140008384:	or     ecx,0xffffffff
   140008387:	mov    esi,0xf
   14000838c:	mov    DWORD PTR [rsp+0x10],ecx
   140008390:	lea    rax,[rsp+0x6e]
   140008395:	cmp    WORD PTR [rax],r13w
   140008399:	jne    0x1400083a6
   14000839b:	add    esi,ecx
   14000839d:	sub    rax,0x2
   1400083a1:	cmp    esi,r14d
   1400083a4:	jae    0x140008395
   1400083a6:	cmp    r11d,esi
   1400083a9:	cmova  r11d,esi
   1400083ad:	cmp    esi,r13d
   1400083b0:	jne    0x1400083e0
   1400083b2:	mov    rcx,QWORD PTR [r10]
   1400083b5:	mov    BYTE PTR [rsp],0x40
   1400083b9:	mov    BYTE PTR [rsp+0x1],r14b
   1400083be:	mov    WORD PTR [rsp+0x2],r13w
   1400083c4:	mov    eax,DWORD PTR [rsp]
   1400083c7:	mov    DWORD PTR [rcx],eax
   1400083c9:	add    QWORD PTR [r10],0x4
   1400083cd:	mov    rcx,QWORD PTR [r10]
   1400083d0:	mov    DWORD PTR [rcx],eax
   1400083d2:	add    QWORD PTR [r10],0x4
   1400083d6:	mov    DWORD PTR [r9],r14d
   1400083d9:	xor    eax,eax
   1400083db:	jmp    0x14000875d
   1400083e0:	mov    r9d,r14d
   1400083e3:	lea    rax,[rsp+0x52]
   1400083e8:	cmp    WORD PTR [rax],r13w
   1400083ec:	jne    0x1400083fb
   1400083ee:	add    r9d,r14d
   1400083f1:	add    rax,0x2
   1400083f5:	cmp    r9d,0xf
   1400083f9:	jbe    0x1400083e8
   1400083fb:	cmp    r11d,r9d
   1400083fe:	mov    edx,r14d
   140008401:	mov    edi,r14d
   140008404:	cmovb  r11d,r9d
   140008408:	mov    eax,edi
   14000840a:	add    edx,edx
   14000840c:	movzx  ecx,WORD PTR [rsp+rax*2+0x50]
   140008411:	sub    edx,ecx
   140008413:	js     0x14000875a
   140008419:	add    edi,r14d
   14000841c:	cmp    edi,0xf
   14000841f:	jbe    0x140008408
   140008421:	cmp    edx,r13d
   140008424:	jle    0x140008438
   140008426:	cmp    ebx,r13d
   140008429:	je     0x14000875a
   14000842f:	cmp    esi,r14d
   140008432:	jne    0x14000875a
   140008438:	mov    WORD PTR [rsp+0x72],r13w
   14000843e:	mov    rcx,r13
   140008441:	mov    edx,0xe
   140008446:	movzx  eax,WORD PTR [rsp+rcx*1+0x52]
   14000844b:	add    rcx,0x2
   14000844f:	add    ax,WORD PTR [rsp+rcx*1+0x70]
   140008454:	sub    rdx,r14
   140008457:	mov    WORD PTR [rsp+rcx*1+0x72],ax
   14000845c:	jne    0x140008446
   14000845e:	mov    edi,r13d
   140008461:	cmp    r8d,r13d
   140008464:	jbe    0x140008491
   140008466:	mov    rdx,r12
   140008469:	cmp    WORD PTR [rdx],r13w
   14000846d:	je     0x140008485
   14000846f:	movzx  eax,WORD PTR [rdx]
   140008472:	movzx  ecx,WORD PTR [rsp+rax*2+0x70]
   140008477:	mov    WORD PTR [rbp+rcx*2+0x0],di
   14000847c:	movzx  eax,WORD PTR [rdx]
   14000847f:	add    WORD PTR [rsp+rax*2+0x70],r14w
   140008485:	add    edi,r14d
   140008488:	add    rdx,0x2
   14000848c:	cmp    edi,r8d
   14000848f:	jb     0x140008469
   140008491:	cmp    ebx,r13d
   140008494:	je     0x1400084d0
   140008496:	cmp    ebx,r14d
   140008499:	je     0x1400084af
   14000849b:	lea    r14,[rip+0x2302e]        # 0x14002b4d0
   1400084a2:	lea    r15,[rip+0x23067]        # 0x14002b510
   1400084a9:	or     r8d,0xffffffff
   1400084ad:	jmp    0x1400084dc
   1400084af:	mov    eax,0x202
   1400084b4:	lea    r14,[rip+0x22f95]        # 0x14002b450
   1400084bb:	lea    r15,[rip+0x22fce]        # 0x14002b490
   1400084c2:	sub    r14,rax
   1400084c5:	sub    r15,rax
   1400084c8:	mov    r8d,0x100
   1400084ce:	jmp    0x1400084dc
   1400084d0:	mov    r15,rbp
   1400084d3:	mov    r14,rbp
   1400084d6:	mov    r8d,0x13
   1400084dc:	mov    rax,QWORD PTR [r10]
   1400084df:	mov    ecx,r11d
   1400084e2:	mov    ebx,0x1
   1400084e7:	shl    ebx,cl
   1400084e9:	cmp    DWORD PTR [rsp+0x20],0x1
   1400084ee:	mov    QWORD PTR [rsp+0x8],rax
   1400084f3:	lea    eax,[rbx-0x1]
   1400084f6:	mov    edx,r13d
   1400084f9:	mov    edi,r13d
   1400084fc:	mov    DWORD PTR [rsp+0x1c],ebx
   140008500:	mov    DWORD PTR [rsp+0x14],ebx
   140008504:	mov    DWORD PTR [rsp+0x24],eax
   140008508:	mov    DWORD PTR [rsp+0x18],edx
   14000850c:	jne    0x140008520
   14000850e:	cmp    ebx,0x5b0
   140008514:	jb     0x140008520
   140008516:	mov    eax,0x1
   14000851b:	jmp    0x14000875d
   140008520:	mov    r12,QWORD PTR [rsp+0x8]
   140008525:	mov    al,r9b
   140008528:	mov    ecx,edx
   14000852a:	sub    al,r13b
   14000852d:	mov    BYTE PTR [rsp+0x1],al
   140008531:	movzx  eax,WORD PTR [rbp+rcx*2+0x0]
   140008536:	cmp    eax,r8d
   140008539:	jge    0x140008544
   14000853b:	xor    r10d,r10d
   14000853e:	mov    BYTE PTR [rsp],r10b
   140008542:	jmp    0x140008562
   140008544:	jle    0x140008559
   140008546:	movzx  ecx,WORD PTR [rbp+rcx*2+0x0]
   14000854b:	mov    al,BYTE PTR [r15+rcx*2]
   14000854f:	mov    BYTE PTR [rsp],al
   140008552:	movzx  eax,WORD PTR [r14+rcx*2]
   140008557:	jmp    0x14000855f
   140008559:	mov    BYTE PTR [rsp],0x60
   14000855d:	xor    eax,eax
   14000855f:	xor    r10d,r10d
   140008562:	mov    ecx,r9d
   140008565:	mov    ebp,0x1
   14000856a:	mov    edx,edi
   14000856c:	sub    ecx,r13d
   14000856f:	mov    WORD PTR [rsp+0x2],ax
   140008574:	mov    eax,DWORD PTR [rsp]
   140008577:	shl    ebp,cl
   140008579:	mov    ecx,r13d
   14000857c:	mov    DWORD PTR [rsp+0x28],ebx
   140008580:	shr    edx,cl
   140008582:	add    edx,ebx
   140008584:	sub    edx,ebp
   140008586:	sub    ebx,ebp
   140008588:	mov    DWORD PTR [r12+rdx*4],eax
   14000858c:	cmp    ebx,r10d
   14000858f:	jne    0x140008584
   140008591:	mov    r10,QWORD PTR [rsp+0x38]
   140008596:	lea    ecx,[r9-0x1]
   14000859a:	mov    edx,0x1
   14000859f:	shl    edx,cl
   1400085a1:	jmp    0x1400085a5
   1400085a3:	shr    edx,1
   1400085a5:	test   edi,edx
   1400085a7:	jne    0x1400085a3
   1400085a9:	xor    ebx,ebx
   1400085ab:	cmp    edx,ebx
   1400085ad:	je     0x1400085b9
   1400085af:	lea    eax,[rdx-0x1]
   1400085b2:	and    eax,edi
   1400085b4:	lea    edi,[rdx+rax*1]
   1400085b7:	jmp    0x1400085bb
   1400085b9:	mov    edi,ebx
   1400085bb:	mov    edx,DWORD PTR [rsp+0x18]
   1400085bf:	mov    eax,r9d
   1400085c2:	mov    ecx,0xffff
   1400085c7:	inc    edx
   1400085c9:	add    WORD PTR [rsp+rax*2+0x50],cx
   1400085ce:	mov    DWORD PTR [rsp+0x18],edx
   1400085d2:	jne    0x1400085f3
   1400085d4:	cmp    r9d,esi
   1400085d7:	je     0x1400086c9
   1400085dd:	mov    rbp,QWORD PTR [rsp+0x30]
   1400085e2:	mov    rax,QWORD PTR [rsp+0x40]
   1400085e7:	movzx  ecx,WORD PTR [rbp+rdx*2+0x0]
   1400085ec:	movzx  r9d,WORD PTR [rax+rcx*2]
   1400085f1:	jmp    0x1400085f8
   1400085f3:	mov    rbp,QWORD PTR [rsp+0x30]
   1400085f8:	mov    ebx,DWORD PTR [rsp+0x1c]
   1400085fc:	cmp    r9d,r11d
   1400085ff:	jbe    0x140008525
   140008605:	mov    r12d,DWORD PTR [rsp+0x24]
   14000860a:	and    r12d,edi
   14000860d:	cmp    r12d,DWORD PTR [rsp+0x10]
   140008612:	je     0x140008520
   140008618:	mov    rcx,QWORD PTR [rsp+0x8]
   14000861d:	xor    eax,eax
   14000861f:	mov    ebp,r9d
   140008622:	cmp    r13d,eax
   140008625:	mov    eax,DWORD PTR [rsp+0x28]
   140008629:	mov    edx,0x1
   14000862e:	cmove  r13d,r11d
   140008632:	lea    rcx,[rcx+rax*4]
   140008636:	sub    ebp,r13d
   140008639:	mov    QWORD PTR [rsp+0x8],rcx
   14000863e:	lea    ebx,[r13+rbp*1+0x0]
   140008643:	mov    ecx,ebp
   140008645:	shl    edx,cl
   140008647:	cmp    ebx,esi
   140008649:	jae    0x140008669
   14000864b:	xor    r10d,r10d
   14000864e:	movzx  ecx,WORD PTR [rsp+rbx*2+0x50]
   140008653:	sub    edx,ecx
   140008655:	cmp    edx,r10d
   140008658:	jle    0x140008664
   14000865a:	inc    ebx
   14000865c:	inc    ebp
   14000865e:	add    edx,edx
   140008660:	cmp    ebx,esi
   140008662:	jb     0x14000864e
   140008664:	mov    r10,QWORD PTR [rsp+0x38]
   140008669:	mov    eax,DWORD PTR [rsp+0x14]
   14000866d:	mov    ecx,ebp
   14000866f:	mov    ebx,0x1
   140008674:	shl    ebx,cl
   140008676:	add    eax,ebx
   140008678:	cmp    DWORD PTR [rsp+0x20],0x1
   14000867d:	mov    DWORD PTR [rsp+0x1c],ebx
   140008681:	mov    DWORD PTR [rsp+0x14],eax
   140008685:	jne    0x140008692
   140008687:	cmp    eax,0x5b0
   14000868c:	jae    0x140008516
   140008692:	mov    rax,QWORD PTR [r10]
   140008695:	mov    edx,DWORD PTR [rsp+0x18]
   140008699:	mov    DWORD PTR [rsp+0x10],r12d
   14000869e:	mov    BYTE PTR [rax+r12*4],bpl
   1400086a2:	mov    rax,QWORD PTR [r10]
   1400086a5:	mov    rbp,QWORD PTR [rsp+0x30]
   1400086aa:	mov    BYTE PTR [rax+r12*4+0x1],r11b
   1400086af:	mov    rcx,QWORD PTR [r10]
   1400086b2:	mov    rax,QWORD PTR [rsp+0x8]
   1400086b7:	sub    rax,rcx
   1400086ba:	sar    rax,0x2
   1400086be:	mov    WORD PTR [rcx+r12*4+0x2],ax
   1400086c4:	jmp    0x140008520
   1400086c9:	mov    al,r9b
   1400086cc:	mov    BYTE PTR [rsp],0x40
   1400086d0:	mov    WORD PTR [rsp+0x2],bx
   1400086d5:	sub    al,r13b
   1400086d8:	mov    BYTE PTR [rsp+0x1],al
   1400086dc:	cmp    edi,ebx
   1400086de:	je     0x140008742
   1400086e0:	mov    r8d,DWORD PTR [rsp+0x10]
   1400086e5:	cmp    r13d,ebx
   1400086e8:	je     0x140008708
   1400086ea:	mov    eax,DWORD PTR [rsp+0x24]
   1400086ee:	and    eax,edi
   1400086f0:	cmp    eax,r8d
   1400086f3:	je     0x140008708
   1400086f5:	mov    rax,QWORD PTR [r10]
   1400086f8:	mov    r13d,ebx
   1400086fb:	mov    r9d,r11d
   1400086fe:	mov    QWORD PTR [rsp+0x8],rax
   140008703:	mov    BYTE PTR [rsp+0x1],r11b
   140008708:	mov    eax,DWORD PTR [rsp]
   14000870b:	mov    ecx,r13d
   14000870e:	mov    edx,edi
   140008710:	shr    rdx,cl
   140008713:	mov    rcx,QWORD PTR [rsp+0x8]
   140008718:	mov    DWORD PTR [rcx+rdx*4],eax
   14000871b:	lea    ecx,[r9-0x1]
   14000871f:	mov    edx,0x1
   140008724:	shl    edx,cl
   140008726:	jmp    0x14000872a
   140008728:	shr    edx,1
   14000872a:	test   edi,edx
   14000872c:	jne    0x140008728
   14000872e:	cmp    edx,ebx
   140008730:	je     0x14000873c
   140008732:	lea    eax,[rdx-0x1]
   140008735:	and    eax,edi
   140008737:	lea    edi,[rdx+rax*1]
   14000873a:	jmp    0x14000873e
   14000873c:	mov    edi,ebx
   14000873e:	cmp    edi,ebx
   140008740:	jne    0x1400086e5
   140008742:	mov    eax,DWORD PTR [rsp+0x14]
   140008746:	shl    rax,0x2
   14000874a:	add    QWORD PTR [r10],rax
   14000874d:	mov    rax,QWORD PTR [rsp+0x48]
   140008752:	mov    DWORD PTR [rax],r11d
   140008755:	jmp    0x1400083d9
   14000875a:	or     eax,0xffffffff
   14000875d:	mov    rcx,QWORD PTR [rsp+0x90]
   140008765:	xor    rcx,rsp
   140008768:	call   0x140009080
   14000876d:	mov    rbx,QWORD PTR [rsp+0xe0]
   140008775:	add    rsp,0xa0
   14000877c:	pop    r15
   14000877e:	pop    r14
   140008780:	pop    r13
   140008782:	pop    r12
   140008784:	pop    rdi
   140008785:	pop    rsi
   140008786:	pop    rbp
   140008787:	ret    
   140008788:	lea    rax,[rip+0x1ef11]        # 0x1400276a0
   14000878f:	ret    
   140008790:	mov    eax,0x65
   140008795:	ret    
   140008796:	int3   
   140008797:	int3   
   140008798:	movsxd rdx,ecx
   14000879b:	lea    rax,[rip+0x22e4e]        # 0x14002b5f0
   1400087a2:	shl    rdx,0x3
   1400087a6:	sub    rax,rdx
   1400087a9:	mov    rax,QWORD PTR [rax]
   1400087ac:	ret    
   1400087ad:	int3   
   1400087ae:	int3   
   1400087af:	int3   
   1400087b0:	imul   edx,r8d
   1400087b4:	mov    ecx,edx
   1400087b6:	jmp    0x14000993c
   1400087bb:	int3   
   1400087bc:	mov    rcx,rdx
   1400087bf:	jmp    0x1400098ac
   1400087c4:	jmp    QWORD PTR [rip+0x1e88e]        # 0x140027058
   1400087ca:	jmp    QWORD PTR [rip+0x1e880]        # 0x140027050
   1400087d0:	jmp    QWORD PTR [rip+0x1eada]        # 0x1400272b0
   1400087d6:	jmp    QWORD PTR [rip+0x1eacc]        # 0x1400272a8
   1400087dc:	jmp    QWORD PTR [rip+0x1eabe]        # 0x1400272a0
   1400087e2:	jmp    QWORD PTR [rip+0x1eab0]        # 0x140027298
   1400087e8:	jmp    QWORD PTR [rip+0x1eaa2]        # 0x140027290
   1400087ee:	jmp    QWORD PTR [rip+0x1ea94]        # 0x140027288
   1400087f4:	jmp    QWORD PTR [rip+0x1ea86]        # 0x140027280
   1400087fa:	jmp    QWORD PTR [rip+0x1ea78]        # 0x140027278
   140008800:	jmp    QWORD PTR [rip+0x1ea6a]        # 0x140027270
   140008806:	jmp    QWORD PTR [rip+0x1ea5c]        # 0x140027268
   14000880c:	jmp    QWORD PTR [rip+0x1ea4e]        # 0x140027260
   140008812:	jmp    QWORD PTR [rip+0x1ea38]        # 0x140027250
   140008818:	jmp    QWORD PTR [rip+0x1ea2a]        # 0x140027248
   14000881e:	jmp    QWORD PTR [rip+0x1ea1c]        # 0x140027240
   140008824:	jmp    QWORD PTR [rip+0x1ea0e]        # 0x140027238
   14000882a:	jmp    QWORD PTR [rip+0x1ea00]        # 0x140027230
   140008830:	jmp    QWORD PTR [rip+0x1e9f2]        # 0x140027228
   140008836:	jmp    QWORD PTR [rip+0x1e9e4]        # 0x140027220
   14000883c:	jmp    QWORD PTR [rip+0x1e91e]        # 0x140027160
   140008842:	jmp    QWORD PTR [rip+0x1e868]        # 0x1400270b0
   140008848:	jmp    QWORD PTR [rip+0x1e86a]        # 0x1400270b8
   14000884e:	jmp    QWORD PTR [rip+0x1e86c]        # 0x1400270c0
   140008854:	jmp    QWORD PTR [rip+0x1e86e]        # 0x1400270c8
   14000885a:	jmp    QWORD PTR [rip+0x1e870]        # 0x1400270d0
   140008860:	jmp    QWORD PTR [rip+0x1e872]        # 0x1400270d8
   140008866:	jmp    QWORD PTR [rip+0x1e874]        # 0x1400270e0
   14000886c:	jmp    QWORD PTR [rip+0x1e876]        # 0x1400270e8
   140008872:	jmp    QWORD PTR [rip+0x1e878]        # 0x1400270f0
   140008878:	jmp    QWORD PTR [rip+0x1e87a]        # 0x1400270f8
   14000887e:	jmp    QWORD PTR [rip+0x1e87c]        # 0x140027100
   140008884:	jmp    QWORD PTR [rip+0x1e87e]        # 0x140027108
   14000888a:	jmp    QWORD PTR [rip+0x1e880]        # 0x140027110
   140008890:	jmp    QWORD PTR [rip+0x1e882]        # 0x140027118
   140008896:	jmp    QWORD PTR [rip+0x1e884]        # 0x140027120
   14000889c:	jmp    QWORD PTR [rip+0x1e886]        # 0x140027128
   1400088a2:	jmp    QWORD PTR [rip+0x1e888]        # 0x140027130
   1400088a8:	jmp    QWORD PTR [rip+0x1e88a]        # 0x140027138
   1400088ae:	jmp    QWORD PTR [rip+0x1e88c]        # 0x140027140
   1400088b4:	jmp    QWORD PTR [rip+0x1ec16]        # 0x1400274d0
   1400088ba:	jmp    QWORD PTR [rip+0x1ebb0]        # 0x140027470
   1400088c0:	jmp    QWORD PTR [rip+0x1eba2]        # 0x140027468
   1400088c6:	jmp    QWORD PTR [rip+0x1ec64]        # 0x140027530
   1400088cc:	jmp    QWORD PTR [rip+0x1ec56]        # 0x140027528
   1400088d2:	jmp    QWORD PTR [rip+0x1ec48]        # 0x140027520
   1400088d8:	jmp    QWORD PTR [rip+0x1ec3a]        # 0x140027518
   1400088de:	jmp    QWORD PTR [rip+0x1ec2c]        # 0x140027510
   1400088e4:	jmp    QWORD PTR [rip+0x1ec1e]        # 0x140027508
   1400088ea:	jmp    QWORD PTR [rip+0x1ec10]        # 0x140027500
   1400088f0:	jmp    QWORD PTR [rip+0x1ec02]        # 0x1400274f8
   1400088f6:	jmp    QWORD PTR [rip+0x1ebf4]        # 0x1400274f0
   1400088fc:	jmp    QWORD PTR [rip+0x1ebe6]        # 0x1400274e8
   140008902:	jmp    QWORD PTR [rip+0x1ebd8]        # 0x1400274e0
   140008908:	jmp    QWORD PTR [rip+0x1ebca]        # 0x1400274d8
   14000890e:	jmp    QWORD PTR [rip+0x1eb64]        # 0x140027478
   140008914:	jmp    QWORD PTR [rip+0x1ebae]        # 0x1400274c8
   14000891a:	jmp    QWORD PTR [rip+0x1eba0]        # 0x1400274c0
   140008920:	jmp    QWORD PTR [rip+0x1eb92]        # 0x1400274b8
   140008926:	jmp    QWORD PTR [rip+0x1eb84]        # 0x1400274b0
   14000892c:	jmp    QWORD PTR [rip+0x1eb76]        # 0x1400274a8
   140008932:	jmp    QWORD PTR [rip+0x1eb68]        # 0x1400274a0
   140008938:	jmp    QWORD PTR [rip+0x1eb5a]        # 0x140027498
   14000893e:	jmp    QWORD PTR [rip+0x1eb4c]        # 0x140027490
   140008944:	jmp    QWORD PTR [rip+0x1eb3e]        # 0x140027488
   14000894a:	jmp    QWORD PTR [rip+0x1eb30]        # 0x140027480
   140008950:	jmp    QWORD PTR [rip+0x1e742]        # 0x140027098
   140008956:	jmp    QWORD PTR [rip+0x1e734]        # 0x140027090
   14000895c:	jmp    QWORD PTR [rip+0x1e726]        # 0x140027088
   140008962:	jmp    QWORD PTR [rip+0x1e718]        # 0x140027080
   140008968:	jmp    QWORD PTR [rip+0x1e70a]        # 0x140027078
   14000896e:	jmp    QWORD PTR [rip+0x1e6fc]        # 0x140027070
   140008974:	jmp    QWORD PTR [rip+0x1e6ee]        # 0x140027068
   14000897a:	jmp    QWORD PTR [rip+0x1e720]        # 0x1400270a0
   140008980:	jmp    QWORD PTR [rip+0x1e6ba]        # 0x140027040
   140008986:	jmp    QWORD PTR [rip+0x1e67c]        # 0x140027008
   14000898c:	jmp    QWORD PTR [rip+0x1e67e]        # 0x140027010
   140008992:	jmp    QWORD PTR [rip+0x1e680]        # 0x140027018
   140008998:	jmp    QWORD PTR [rip+0x1e69a]        # 0x140027038
   14000899e:	jmp    QWORD PTR [rip+0x1e68c]        # 0x140027030
   1400089a4:	jmp    QWORD PTR [rip+0x1e67e]        # 0x140027028
   1400089aa:	jmp    QWORD PTR [rip+0x1e670]        # 0x140027020
   1400089b0:	jmp    QWORD PTR [rip+0x1e64a]        # 0x140027000
   1400089b6:	jmp    QWORD PTR [rip+0x1ea9c]        # 0x140027458
   1400089bc:	jmp    QWORD PTR [rip+0x1eb86]        # 0x140027548
   1400089c2:	jmp    QWORD PTR [rip+0x1eb78]        # 0x140027540
   1400089c8:	jmp    QWORD PTR [rip+0x1eb82]        # 0x140027550
   1400089ce:	int3   
   1400089cf:	int3   
   1400089d0:	jmp    0x1400089d9
   1400089d2:	cmp    al,dl
   1400089d4:	je     0x1400089e3
   1400089d6:	inc    rcx
   1400089d9:	mov    al,BYTE PTR [rcx]
   1400089db:	test   al,al
   1400089dd:	jne    0x1400089d2
   1400089df:	cmp    al,dl
   1400089e1:	jne    0x1400089e7
   1400089e3:	mov    rax,rcx
   1400089e6:	ret    
   1400089e7:	xor    eax,eax
   1400089e9:	ret    
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	int3   
   1400089f1:	int3   
   1400089f2:	int3   
   1400089f3:	int3   
   1400089f4:	int3   
   1400089f5:	int3   
   1400089f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008a00:	mov    rax,rcx
   140008a03:	cmp    r8,0x8
   140008a07:	jb     0x140008a5c
   140008a09:	movzx  edx,dl
   140008a0c:	movabs r9,0x101010101010101
   140008a16:	imul   rdx,r9
   140008a1a:	cmp    r8,0x40
   140008a1e:	jb     0x140008a3e
   140008a20:	neg    rcx
   140008a23:	and    ecx,0x7
   140008a26:	je     0x140008a2e
   140008a28:	sub    r8,rcx
   140008a2b:	mov    QWORD PTR [rax],rdx
   140008a2e:	add    rcx,rax
   140008a31:	mov    r9,r8
   140008a34:	and    r8,0x3f
   140008a38:	shr    r9,0x6
   140008a3c:	jne    0x140008a77
   140008a3e:	mov    r9,r8
   140008a41:	and    r8,0x7
   140008a45:	shr    r9,0x3
   140008a49:	je     0x140008a5c
   140008a4b:	data16 data16 xchg ax,ax
   140008a4f:	nop
   140008a50:	mov    QWORD PTR [rcx],rdx
   140008a53:	add    rcx,0x8
   140008a57:	dec    r9
   140008a5a:	jne    0x140008a50
   140008a5c:	test   r8,r8
   140008a5f:	je     0x140008a6b
   140008a61:	mov    BYTE PTR [rcx],dl
   140008a63:	inc    rcx
   140008a66:	dec    r8
   140008a69:	jne    0x140008a61
   140008a6b:	ret    
   140008a6c:	nop    DWORD PTR [rax+0x0]
   140008a70:	data16 data16 xchg ax,ax
   140008a74:	data16 xchg ax,ax
   140008a77:	cmp    r9,0x1c00
   140008a7e:	jae    0x140008ab0
   140008a80:	mov    QWORD PTR [rcx],rdx
   140008a83:	mov    QWORD PTR [rcx+0x8],rdx
   140008a87:	mov    QWORD PTR [rcx+0x10],rdx
   140008a8b:	add    rcx,0x40
   140008a8f:	mov    QWORD PTR [rcx-0x28],rdx
   140008a93:	mov    QWORD PTR [rcx-0x20],rdx
   140008a97:	dec    r9
   140008a9a:	mov    QWORD PTR [rcx-0x18],rdx
   140008a9e:	mov    QWORD PTR [rcx-0x10],rdx
   140008aa2:	mov    QWORD PTR [rcx-0x8],rdx
   140008aa6:	jne    0x140008a80
   140008aa8:	jmp    0x140008a3e
   140008aaa:	nop    WORD PTR [rax+rax*1+0x0]
   140008ab0:	movnti QWORD PTR [rcx],rdx
   140008ab4:	movnti QWORD PTR [rcx+0x8],rdx
   140008ab9:	movnti QWORD PTR [rcx+0x10],rdx
   140008abe:	add    rcx,0x40
   140008ac2:	movnti QWORD PTR [rcx-0x28],rdx
   140008ac7:	movnti QWORD PTR [rcx-0x20],rdx
   140008acc:	dec    r9
   140008acf:	movnti QWORD PTR [rcx-0x18],rdx
   140008ad4:	movnti QWORD PTR [rcx-0x10],rdx
   140008ad9:	movnti QWORD PTR [rcx-0x8],rdx
   140008ade:	jne    0x140008ab0
   140008ae0:	lock or BYTE PTR [rsp],0x0
   140008ae5:	jmp    0x140008a3e
   140008aea:	int3   
   140008aeb:	int3   
   140008aec:	int3   
   140008aed:	int3   
   140008aee:	int3   
   140008aef:	int3   
   140008af0:	int3   
   140008af1:	int3   
   140008af2:	int3   
   140008af3:	int3   
   140008af4:	int3   
   140008af5:	int3   
   140008af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008b00:	mov    r11,rcx
   140008b03:	sub    rdx,rcx
   140008b06:	jb     0x140008caa
   140008b0c:	cmp    r8,0x8
   140008b10:	jb     0x140008b73
   140008b12:	test   cl,0x7
   140008b15:	je     0x140008b4d
   140008b17:	test   cl,0x1
   140008b1a:	je     0x140008b27
   140008b1c:	mov    al,BYTE PTR [rdx+rcx*1]
   140008b1f:	dec    r8
   140008b22:	mov    BYTE PTR [rcx],al
   140008b24:	inc    rcx
   140008b27:	test   cl,0x2
   140008b2a:	je     0x140008b3b
   140008b2c:	mov    ax,WORD PTR [rdx+rcx*1]
   140008b30:	sub    r8,0x2
   140008b34:	mov    WORD PTR [rcx],ax
   140008b37:	add    rcx,0x2
   140008b3b:	test   cl,0x4
   140008b3e:	je     0x140008b4d
   140008b40:	mov    eax,DWORD PTR [rdx+rcx*1]
   140008b43:	sub    r8,0x4
   140008b47:	mov    DWORD PTR [rcx],eax
   140008b49:	add    rcx,0x4
   140008b4d:	mov    r9,r8
   140008b50:	shr    r9,0x5
   140008b54:	jne    0x140008ba7
   140008b56:	mov    r9,r8
   140008b59:	shr    r9,0x3
   140008b5d:	je     0x140008b73
   140008b5f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008b63:	mov    QWORD PTR [rcx],rax
   140008b66:	add    rcx,0x8
   140008b6a:	dec    r9
   140008b6d:	jne    0x140008b5f
   140008b6f:	and    r8,0x7
   140008b73:	test   r8,r8
   140008b76:	jne    0x140008b80
   140008b78:	mov    rax,r11
   140008b7b:	ret    
   140008b7c:	nop    DWORD PTR [rax+0x0]
   140008b80:	mov    al,BYTE PTR [rdx+rcx*1]
   140008b83:	mov    BYTE PTR [rcx],al
   140008b85:	inc    rcx
   140008b88:	dec    r8
   140008b8b:	jne    0x140008b80
   140008b8d:	mov    rax,r11
   140008b90:	ret    
   140008b91:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008ba0:	data16 data16 xchg ax,ax
   140008ba4:	data16 xchg ax,ax
   140008ba7:	cmp    r9,0x2000
   140008bae:	jae    0x140008bf2
   140008bb0:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008bb4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140008bb9:	add    rcx,0x20
   140008bbd:	mov    QWORD PTR [rcx-0x20],rax
   140008bc1:	mov    QWORD PTR [rcx-0x18],r10
   140008bc5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140008bca:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140008bcf:	dec    r9
   140008bd2:	mov    QWORD PTR [rcx-0x10],rax
   140008bd6:	mov    QWORD PTR [rcx-0x8],r10
   140008bda:	jne    0x140008bb0
   140008bdc:	and    r8,0x1f
   140008be0:	jmp    0x140008b56
   140008be5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008bf0:	xchg   ax,ax
   140008bf2:	cmp    rdx,0x1000
   140008bf9:	jb     0x140008bb0
   140008bfb:	mov    eax,0x20
   140008c00:	prefetchnta BYTE PTR [rdx+rcx*1]
   140008c04:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140008c09:	add    rcx,0x80
   140008c10:	dec    eax
   140008c12:	jne    0x140008c00
   140008c14:	sub    rcx,0x1000
   140008c1b:	mov    eax,0x40
   140008c20:	mov    r9,QWORD PTR [rdx+rcx*1]
   140008c24:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140008c29:	movnti QWORD PTR [rcx],r9
   140008c2d:	movnti QWORD PTR [rcx+0x8],r10
   140008c32:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140008c37:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   140008c3c:	movnti QWORD PTR [rcx+0x10],r9
   140008c41:	movnti QWORD PTR [rcx+0x18],r10
   140008c46:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   140008c4b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140008c50:	add    rcx,0x40
   140008c54:	movnti QWORD PTR [rcx-0x20],r9
   140008c59:	movnti QWORD PTR [rcx-0x18],r10
   140008c5e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140008c63:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140008c68:	dec    eax
   140008c6a:	movnti QWORD PTR [rcx-0x10],r9
   140008c6f:	movnti QWORD PTR [rcx-0x8],r10
   140008c74:	jne    0x140008c20
   140008c76:	sub    r8,0x1000
   140008c7d:	cmp    r8,0x1000
   140008c84:	jae    0x140008bfb
   140008c8a:	lock or BYTE PTR [rsp],0x0
   140008c8f:	jmp    0x140008b4d
   140008c94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008ca0:	data16 data16 xchg ax,ax
   140008ca4:	data16 data16 xchg ax,ax
   140008ca8:	xchg   ax,ax
   140008caa:	add    rcx,r8
   140008cad:	cmp    r8,0x8
   140008cb1:	jb     0x140008d14
   140008cb3:	test   cl,0x7
   140008cb6:	je     0x140008cee
   140008cb8:	test   cl,0x1
   140008cbb:	je     0x140008cc8
   140008cbd:	dec    rcx
   140008cc0:	mov    al,BYTE PTR [rdx+rcx*1]
   140008cc3:	dec    r8
   140008cc6:	mov    BYTE PTR [rcx],al
   140008cc8:	test   cl,0x2
   140008ccb:	je     0x140008cdc
   140008ccd:	sub    rcx,0x2
   140008cd1:	mov    ax,WORD PTR [rdx+rcx*1]
   140008cd5:	sub    r8,0x2
   140008cd9:	mov    WORD PTR [rcx],ax
   140008cdc:	test   cl,0x4
   140008cdf:	je     0x140008cee
   140008ce1:	sub    rcx,0x4
   140008ce5:	mov    eax,DWORD PTR [rdx+rcx*1]
   140008ce8:	sub    r8,0x4
   140008cec:	mov    DWORD PTR [rcx],eax
   140008cee:	mov    r9,r8
   140008cf1:	shr    r9,0x5
   140008cf5:	jne    0x140008d47
   140008cf7:	mov    r9,r8
   140008cfa:	shr    r9,0x3
   140008cfe:	je     0x140008d14
   140008d00:	sub    rcx,0x8
   140008d04:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008d08:	dec    r9
   140008d0b:	mov    QWORD PTR [rcx],rax
   140008d0e:	jne    0x140008d00
   140008d10:	and    r8,0x7
   140008d14:	test   r8,r8
   140008d17:	jne    0x140008d20
   140008d19:	mov    rax,r11
   140008d1c:	ret    
   140008d1d:	nop    DWORD PTR [rax]
   140008d20:	dec    rcx
   140008d23:	mov    al,BYTE PTR [rdx+rcx*1]
   140008d26:	dec    r8
   140008d29:	mov    BYTE PTR [rcx],al
   140008d2b:	jne    0x140008d20
   140008d2d:	mov    rax,r11
   140008d30:	ret    
   140008d31:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008d40:	data16 data16 xchg ax,ax
   140008d44:	data16 xchg ax,ax
   140008d47:	cmp    r9,0x2000
   140008d4e:	jae    0x140008d92
   140008d50:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140008d55:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140008d5a:	sub    rcx,0x20
   140008d5e:	mov    QWORD PTR [rcx+0x18],rax
   140008d62:	mov    QWORD PTR [rcx+0x10],r10
   140008d66:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140008d6b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140008d6f:	dec    r9
   140008d72:	mov    QWORD PTR [rcx+0x8],rax
   140008d76:	mov    QWORD PTR [rcx],r10
   140008d79:	jne    0x140008d50
   140008d7b:	and    r8,0x1f
   140008d7f:	jmp    0x140008cf7
   140008d84:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008d90:	xchg   ax,ax
   140008d92:	cmp    rdx,0xfffffffffffff000
   140008d99:	ja     0x140008d50
   140008d9b:	mov    eax,0x20
   140008da0:	sub    rcx,0x80
   140008da7:	prefetchnta BYTE PTR [rdx+rcx*1]
   140008dab:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140008db0:	dec    eax
   140008db2:	jne    0x140008da0
   140008db4:	add    rcx,0x1000
   140008dbb:	mov    eax,0x40
   140008dc0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140008dc5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140008dca:	movnti QWORD PTR [rcx-0x8],r9
   140008dcf:	movnti QWORD PTR [rcx-0x10],r10
   140008dd4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140008dd9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   140008dde:	movnti QWORD PTR [rcx-0x18],r9
   140008de3:	movnti QWORD PTR [rcx-0x20],r10
   140008de8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   140008ded:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140008df2:	sub    rcx,0x40
   140008df6:	movnti QWORD PTR [rcx+0x18],r9
   140008dfb:	movnti QWORD PTR [rcx+0x10],r10
   140008e00:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140008e05:	mov    r10,QWORD PTR [rdx+rcx*1]
   140008e09:	dec    eax
   140008e0b:	movnti QWORD PTR [rcx+0x8],r9
   140008e10:	movnti QWORD PTR [rcx],r10
   140008e14:	jne    0x140008dc0
   140008e16:	sub    r8,0x1000
   140008e1d:	cmp    r8,0x1000
   140008e24:	jae    0x140008d9b
   140008e2a:	lock or BYTE PTR [rsp],0x0
   140008e2f:	jmp    0x140008cee
   140008e34:	rex push rbx
   140008e36:	sub    rsp,0x20
   140008e3a:	mov    r11d,DWORD PTR [r8]
   140008e3d:	mov    rbx,rdx
   140008e40:	mov    r9,rcx
   140008e43:	and    r11d,0xfffffff8
   140008e47:	test   BYTE PTR [r8],0x4
   140008e4b:	mov    r10,rcx
   140008e4e:	je     0x140008e63
   140008e50:	mov    eax,DWORD PTR [r8+0x8]
   140008e54:	movsxd r10,DWORD PTR [r8+0x4]
   140008e58:	neg    eax
   140008e5a:	add    r10,rcx
   140008e5d:	movsxd rcx,eax
   140008e60:	and    r10,rcx
   140008e63:	movsxd rax,r11d
   140008e66:	mov    rdx,QWORD PTR [rax+r10*1]
   140008e6a:	mov    rax,QWORD PTR [rbx+0x10]
   140008e6e:	mov    ecx,DWORD PTR [rax+0x8]
   140008e71:	add    rcx,QWORD PTR [rbx+0x8]
   140008e75:	test   BYTE PTR [rcx+0x3],0xf
   140008e79:	je     0x140008e87
   140008e7b:	movzx  eax,BYTE PTR [rcx+0x3]
   140008e7f:	and    eax,0xfffffff0
   140008e82:	cdqe   
   140008e84:	add    r9,rax
   140008e87:	xor    r9,rdx
   140008e8a:	mov    rcx,r9
   140008e8d:	add    rsp,0x20
   140008e91:	pop    rbx
   140008e92:	jmp    0x140009080
   140008e97:	int3   
   140008e98:	sub    rsp,0x28
   140008e9c:	mov    r8,QWORD PTR [r9+0x38]
   140008ea0:	mov    rcx,rdx
   140008ea3:	mov    rdx,r9
   140008ea6:	call   0x140008e34
   140008eab:	mov    eax,0x1
   140008eb0:	add    rsp,0x28
   140008eb4:	ret    
   140008eb5:	int3   
   140008eb6:	int3   
   140008eb7:	int3   
   140008eb8:	int3   
   140008eb9:	int3   
   140008eba:	int3   
   140008ebb:	int3   
   140008ebc:	int3   
   140008ebd:	int3   
   140008ebe:	int3   
   140008ebf:	int3   
   140008ec0:	int3   
   140008ec1:	int3   
   140008ec2:	int3   
   140008ec3:	int3   
   140008ec4:	int3   
   140008ec5:	int3   
   140008ec6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008ed0:	mov    r11,rcx
   140008ed3:	or     r8,r8
   140008ed6:	je     0x140008f8b
   140008edc:	test   cl,0x7
   140008edf:	je     0x140008ef0
   140008ee1:	mov    al,BYTE PTR [rcx]
   140008ee3:	test   al,al
   140008ee5:	je     0x140008f66
   140008ee7:	inc    rcx
   140008eea:	test   cl,0x7
   140008eed:	jne    0x140008ee1
   140008eef:	nop
   140008ef0:	mov    rax,QWORD PTR [rcx]
   140008ef3:	mov    r10,rax
   140008ef6:	movabs r9,0x7efefefefefefeff
   140008f00:	add    r9,r10
   140008f03:	xor    r10,0xffffffffffffffff
   140008f07:	xor    r10,r9
   140008f0a:	add    rcx,0x8
   140008f0e:	movabs r9,0x8101010101010100
   140008f18:	test   r9,r10
   140008f1b:	je     0x140008ef0
   140008f1d:	sub    rcx,0x8
   140008f21:	test   al,al
   140008f23:	je     0x140008f66
   140008f25:	inc    rcx
   140008f28:	test   ah,ah
   140008f2a:	je     0x140008f66
   140008f2c:	inc    rcx
   140008f2f:	shr    rax,0x10
   140008f33:	test   al,al
   140008f35:	je     0x140008f66
   140008f37:	inc    rcx
   140008f3a:	test   ah,ah
   140008f3c:	je     0x140008f66
   140008f3e:	inc    rcx
   140008f41:	shr    rax,0x10
   140008f45:	test   al,al
   140008f47:	je     0x140008f66
   140008f49:	inc    rcx
   140008f4c:	test   ah,ah
   140008f4e:	je     0x140008f66
   140008f50:	inc    rcx
   140008f53:	shr    eax,0x10
   140008f56:	test   al,al
   140008f58:	je     0x140008f66
   140008f5a:	inc    rcx
   140008f5d:	test   ah,ah
   140008f5f:	je     0x140008f66
   140008f61:	inc    rcx
   140008f64:	jmp    0x140008ef0
   140008f66:	sub    rcx,rdx
   140008f69:	test   dl,0x7
   140008f6c:	je     0x140008f98
   140008f6e:	mov    al,BYTE PTR [rdx]
   140008f70:	mov    BYTE PTR [rcx+rdx*1],al
   140008f73:	test   al,al
   140008f75:	je     0x140008f8b
   140008f77:	inc    rdx
   140008f7a:	dec    r8
   140008f7d:	je     0x140008f86
   140008f7f:	test   dl,0x7
   140008f82:	jne    0x140008f6e
   140008f84:	jmp    0x140008f98
   140008f86:	xor    al,al
   140008f88:	mov    BYTE PTR [rcx+rdx*1],al
   140008f8b:	mov    rax,r11
   140008f8e:	ret    
   140008f8f:	nop
   140008f90:	mov    QWORD PTR [rcx+rdx*1],rax
   140008f94:	add    rdx,0x8
   140008f98:	mov    rax,QWORD PTR [rdx]
   140008f9b:	sub    r8,0x8
   140008f9f:	jb     0x140008fc7
   140008fa1:	movabs r9,0x7efefefefefefeff
   140008fab:	add    r9,rax
   140008fae:	mov    r10,rax
   140008fb1:	xor    r10,0xffffffffffffffff
   140008fb5:	xor    r10,r9
   140008fb8:	movabs r9,0x8101010101010100
   140008fc2:	test   r9,r10
   140008fc5:	je     0x140008f90
   140008fc7:	add    r8,0x8
   140008fcb:	je     0x14000905c
   140008fd1:	test   al,al
   140008fd3:	mov    BYTE PTR [rcx+rdx*1],al
   140008fd6:	je     0x140009061
   140008fdc:	inc    rdx
   140008fdf:	dec    r8
   140008fe2:	je     0x14000905c
   140008fe4:	test   ah,ah
   140008fe6:	mov    BYTE PTR [rcx+rdx*1],ah
   140008fe9:	je     0x140009061
   140008feb:	inc    rdx
   140008fee:	dec    r8
   140008ff1:	je     0x14000905c
   140008ff3:	shr    rax,0x10
   140008ff7:	test   al,al
   140008ff9:	mov    BYTE PTR [rcx+rdx*1],al
   140008ffc:	je     0x140009061
   140008ffe:	inc    rdx
   140009001:	dec    r8
   140009004:	je     0x14000905c
   140009006:	test   ah,ah
   140009008:	mov    BYTE PTR [rcx+rdx*1],ah
   14000900b:	je     0x140009061
   14000900d:	inc    rdx
   140009010:	dec    r8
   140009013:	je     0x14000905c
   140009015:	shr    rax,0x10
   140009019:	test   al,al
   14000901b:	mov    BYTE PTR [rcx+rdx*1],al
   14000901e:	je     0x140009061
   140009020:	inc    rdx
   140009023:	dec    r8
   140009026:	je     0x14000905c
   140009028:	test   ah,ah
   14000902a:	mov    BYTE PTR [rcx+rdx*1],ah
   14000902d:	je     0x140009061
   14000902f:	inc    rdx
   140009032:	dec    r8
   140009035:	je     0x14000905c
   140009037:	shr    eax,0x10
   14000903a:	test   al,al
   14000903c:	mov    BYTE PTR [rcx+rdx*1],al
   14000903f:	je     0x140009061
   140009041:	inc    rdx
   140009044:	dec    r8
   140009047:	je     0x14000905c
   140009049:	test   ah,ah
   14000904b:	mov    BYTE PTR [rcx+rdx*1],ah
   14000904e:	je     0x140009061
   140009050:	inc    rdx
   140009053:	dec    r8
   140009056:	jne    0x140008f98
   14000905c:	xor    al,al
   14000905e:	mov    BYTE PTR [rcx+rdx*1],al
   140009061:	mov    rax,r11
   140009064:	ret    
   140009065:	int3   
   140009066:	int3   
   140009067:	int3   
   140009068:	int3   
   140009069:	int3   
   14000906a:	int3   
   14000906b:	int3   
   14000906c:	int3   
   14000906d:	int3   
   14000906e:	int3   
   14000906f:	int3   
   140009070:	int3   
   140009071:	int3   
   140009072:	int3   
   140009073:	int3   
   140009074:	int3   
   140009075:	int3   
   140009076:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009080:	cmp    rcx,QWORD PTR [rip+0x2b219]        # 0x1400342a0
   140009087:	jne    0x14000909a
   140009089:	rol    rcx,0x10
   14000908d:	test   cx,0xffff
   140009092:	jne    0x140009096
   140009094:	repz ret 
   140009096:	ror    rcx,0x10
   14000909a:	jmp    0x14000e1fc
   14000909f:	int3   
   1400090a0:	test   ecx,ecx
   1400090a2:	je     0x1400090d4
   1400090a4:	push   rbx
   1400090a5:	sub    rsp,0x30
   1400090a9:	mov    rax,QWORD PTR [rsp+0x68]
   1400090ae:	mov    r10,r9
   1400090b1:	mov    r9d,DWORD PTR [rsp+0x60]
   1400090b6:	mov    r11,r8
   1400090b9:	mov    rbx,rdx
   1400090bc:	mov    r8,r10
   1400090bf:	mov    rdx,r11
   1400090c2:	mov    rcx,rbx
   1400090c5:	mov    QWORD PTR [rsp+0x20],rax
   1400090ca:	call   0x14000e350
   1400090cf:	add    rsp,0x30
   1400090d3:	pop    rbx
   1400090d4:	ret    
   1400090d5:	int3   
   1400090d6:	int3   
   1400090d7:	int3   
   1400090d8:	mov    rax,rsp
   1400090db:	mov    QWORD PTR [rax+0x10],rbx
   1400090df:	push   rdi
   1400090e0:	sub    rsp,0x40
   1400090e4:	and    DWORD PTR [rax+0x18],0x0
   1400090e8:	and    DWORD PTR [rax+0x20],0x0
   1400090ec:	and    DWORD PTR [rax+0x8],0x0
   1400090f0:	mov    rdi,rdx
   1400090f3:	mov    rbx,rcx
   1400090f6:	test   rcx,rcx
   1400090f9:	jne    0x140009123
   1400090fb:	call   0x14000f574
   140009100:	and    QWORD PTR [rsp+0x20],0x0
   140009106:	mov    ebx,0x16
   14000910b:	xor    r9d,r9d
   14000910e:	xor    r8d,r8d
   140009111:	xor    edx,edx
   140009113:	xor    ecx,ecx
   140009115:	mov    DWORD PTR [rax],ebx
   140009117:	call   0x14000e4d8
   14000911c:	mov    eax,ebx
   14000911e:	jmp    0x1400093b0
   140009123:	mov    edx,0xff
   140009128:	mov    r8d,0x24
   14000912e:	call   0x140008a00
   140009133:	test   rdi,rdi
   140009136:	je     0x1400090fb
   140009138:	cmp    QWORD PTR [rdi],0x0
   14000913c:	jge    0x14000914c
   14000913e:	call   0x14000f574
   140009143:	mov    ebx,0x16
   140009148:	mov    DWORD PTR [rax],ebx
   14000914a:	jmp    0x14000911c
   14000914c:	movabs rax,0x793406fff
   140009156:	cmp    QWORD PTR [rdi],rax
   140009159:	jg     0x14000913e
   14000915b:	call   0x14000efdc
   140009160:	lea    rcx,[rsp+0x60]
   140009165:	call   0x14000f384
   14000916a:	test   eax,eax
   14000916c:	je     0x140009183
   14000916e:	and    QWORD PTR [rsp+0x20],0x0
   140009174:	xor    r9d,r9d
   140009177:	xor    r8d,r8d
   14000917a:	xor    edx,edx
   14000917c:	xor    ecx,ecx
   14000917e:	call   0x14000e350
   140009183:	lea    rcx,[rsp+0x68]
   140009188:	call   0x14000f3c4
   14000918d:	test   eax,eax
   14000918f:	je     0x1400091a6
   140009191:	and    QWORD PTR [rsp+0x20],0x0
   140009197:	xor    r9d,r9d
   14000919a:	xor    r8d,r8d
   14000919d:	xor    edx,edx
   14000919f:	xor    ecx,ecx
   1400091a1:	call   0x14000e350
   1400091a6:	lea    rcx,[rsp+0x50]
   1400091ab:	call   0x14000f404
   1400091b0:	test   eax,eax
   1400091b2:	je     0x1400091c9
   1400091b4:	and    QWORD PTR [rsp+0x20],0x0
   1400091ba:	xor    r9d,r9d
   1400091bd:	xor    r8d,r8d
   1400091c0:	xor    edx,edx
   1400091c2:	xor    ecx,ecx
   1400091c4:	call   0x14000e350
   1400091c9:	mov    rcx,QWORD PTR [rdi]
   1400091cc:	cmp    rcx,0x3f480
   1400091d3:	jle    0x14000923c
   1400091d5:	movsxd rax,DWORD PTR [rsp+0x50]
   1400091da:	lea    rdx,[rsp+0x30]
   1400091df:	sub    rcx,rax
   1400091e2:	mov    QWORD PTR [rsp+0x30],rcx
   1400091e7:	mov    rcx,rbx
   1400091ea:	call   0x14000f06c
   1400091ef:	test   eax,eax
   1400091f1:	jne    0x1400093b0
   1400091f7:	cmp    DWORD PTR [rsp+0x60],eax
   1400091fb:	je     0x1400093ae
   140009201:	mov    rcx,rbx
   140009204:	call   0x14000f03c
   140009209:	test   eax,eax
   14000920b:	je     0x1400093ae
   140009211:	movsxd rax,DWORD PTR [rsp+0x68]
   140009216:	lea    rdx,[rsp+0x30]
   14000921b:	mov    rcx,rbx
   14000921e:	sub    QWORD PTR [rsp+0x30],rax
   140009223:	call   0x14000f06c
   140009228:	test   eax,eax
   14000922a:	jne    0x1400093b0
   140009230:	mov    DWORD PTR [rbx+0x20],0x1
   140009237:	jmp    0x1400093ae
   14000923c:	mov    rdx,rdi
   14000923f:	mov    rcx,rbx
   140009242:	call   0x14000f06c
   140009247:	test   eax,eax
   140009249:	jne    0x1400093b0
   14000924f:	cmp    DWORD PTR [rsp+0x60],eax
   140009253:	je     0x140009276
   140009255:	mov    rcx,rbx
   140009258:	call   0x14000f03c
   14000925d:	test   eax,eax
   14000925f:	je     0x140009276
   140009261:	mov    eax,DWORD PTR [rsp+0x50]
   140009265:	mov    ecx,DWORD PTR [rsp+0x68]
   140009269:	mov    DWORD PTR [rbx+0x20],0x1
   140009270:	add    eax,ecx
   140009272:	cdqe   
   140009274:	jmp    0x14000927b
   140009276:	movsxd rax,DWORD PTR [rsp+0x50]
   14000927b:	movsxd rcx,DWORD PTR [rbx]
   14000927e:	movabs r8,0x8888888888888889
   140009288:	sub    rcx,rax
   14000928b:	mov    rax,r8
   14000928e:	imul   rcx
   140009291:	add    rdx,rcx
   140009294:	sar    rdx,0x5
   140009298:	mov    rax,rdx
   14000929b:	shr    rax,0x3f
   14000929f:	add    rdx,rax
   1400092a2:	mov    rax,rcx
   1400092a5:	imul   rdx,rdx,0x3c
   1400092a9:	sub    rax,rdx
   1400092ac:	mov    DWORD PTR [rbx],eax
   1400092ae:	test   eax,eax
   1400092b0:	jns    0x1400092bb
   1400092b2:	add    eax,0x3c
   1400092b5:	sub    rcx,0x3c
   1400092b9:	mov    DWORD PTR [rbx],eax
   1400092bb:	mov    rax,r8
   1400092be:	imul   rcx
   1400092c1:	lea    r9,[rcx+rdx*1]
   1400092c5:	sar    r9,0x5
   1400092c9:	mov    rax,r9
   1400092cc:	shr    rax,0x3f
   1400092d0:	add    r9,rax
   1400092d3:	movsxd rax,DWORD PTR [rbx+0x4]
   1400092d7:	add    r9,rax
   1400092da:	mov    rax,r8
   1400092dd:	mov    rcx,r9
   1400092e0:	imul   r9
   1400092e3:	add    rdx,r9
   1400092e6:	sar    rdx,0x5
   1400092ea:	mov    rax,rdx
   1400092ed:	shr    rax,0x3f
   1400092f1:	add    rdx,rax
   1400092f4:	imul   rdx,rdx,0x3c
   1400092f8:	sub    rcx,rdx
   1400092fb:	mov    DWORD PTR [rbx+0x4],ecx
   1400092fe:	test   ecx,ecx
   140009300:	jns    0x14000930c
   140009302:	add    ecx,0x3c
   140009305:	sub    r9,0x3c
   140009309:	mov    DWORD PTR [rbx+0x4],ecx
   14000930c:	mov    rax,r8
   14000930f:	imul   r9
   140009312:	lea    r8,[r9+rdx*1]
   140009316:	movabs r9,0x2aaaaaaaaaaaaaab
   140009320:	sar    r8,0x5
   140009324:	mov    rax,r8
   140009327:	shr    rax,0x3f
   14000932b:	add    r8,rax
   14000932e:	movsxd rax,DWORD PTR [rbx+0x8]
   140009332:	add    r8,rax
   140009335:	mov    rax,r9
   140009338:	imul   r8
   14000933b:	sar    rdx,0x2
   14000933f:	mov    rax,rdx
   140009342:	shr    rax,0x3f
   140009346:	add    rdx,rax
   140009349:	lea    rcx,[rdx+rdx*2]
   14000934d:	mov    rdx,r8
   140009350:	shl    rcx,0x3
   140009354:	sub    rdx,rcx
   140009357:	mov    DWORD PTR [rbx+0x8],edx
   14000935a:	test   edx,edx
   14000935c:	jns    0x140009368
   14000935e:	lea    ecx,[rdx+0x18]
   140009361:	sub    r8,0x18
   140009365:	mov    DWORD PTR [rbx+0x8],ecx
   140009368:	mov    rax,r9
   14000936b:	imul   r8
   14000936e:	mov    r8,rdx
   140009371:	sar    r8,0x2
   140009375:	mov    rax,r8
   140009378:	shr    rax,0x3f
   14000937c:	add    r8,rax
   14000937f:	test   r8,r8
   140009382:	jle    0x1400093bb
   140009384:	mov    eax,DWORD PTR [rbx+0x18]
   140009387:	lea    ecx,[r8+rax*1]
   14000938b:	mov    eax,0x92492493
   140009390:	imul   ecx
   140009392:	add    edx,ecx
   140009394:	sar    edx,0x2
   140009397:	mov    eax,edx
   140009399:	shr    eax,0x1f
   14000939c:	add    edx,eax
   14000939e:	imul   edx,edx,0x7
   1400093a1:	sub    ecx,edx
   1400093a3:	add    DWORD PTR [rbx+0xc],r8d
   1400093a7:	mov    DWORD PTR [rbx+0x18],ecx
   1400093aa:	add    DWORD PTR [rbx+0x1c],r8d
   1400093ae:	xor    eax,eax
   1400093b0:	mov    rbx,QWORD PTR [rsp+0x58]
   1400093b5:	add    rsp,0x40
   1400093b9:	pop    rdi
   1400093ba:	ret    
   1400093bb:	jns    0x1400093ae
   1400093bd:	mov    eax,DWORD PTR [rbx+0x18]
   1400093c0:	add    DWORD PTR [rbx+0xc],r8d
   1400093c4:	lea    ecx,[r8+rax*1+0x7]
   1400093c9:	mov    eax,0x92492493
   1400093ce:	imul   ecx
   1400093d0:	add    edx,ecx
   1400093d2:	sar    edx,0x2
   1400093d5:	mov    eax,edx
   1400093d7:	shr    eax,0x1f
   1400093da:	add    edx,eax
   1400093dc:	mov    eax,DWORD PTR [rbx+0xc]
   1400093df:	imul   edx,edx,0x7
   1400093e2:	sub    ecx,edx
   1400093e4:	mov    DWORD PTR [rbx+0x18],ecx
   1400093e7:	test   eax,eax
   1400093e9:	jg     0x1400093aa
   1400093eb:	add    eax,0x1f
   1400093ee:	mov    DWORD PTR [rbx+0x10],0xb
   1400093f5:	mov    DWORD PTR [rbx+0xc],eax
   1400093f8:	lea    eax,[r8+0x16d]
   1400093ff:	add    DWORD PTR [rbx+0x1c],eax
   140009402:	dec    DWORD PTR [rbx+0x14]
   140009405:	jmp    0x1400093ae
   140009407:	int3   
   140009408:	mov    QWORD PTR [rsp+0x8],rbx
   14000940d:	mov    QWORD PTR [rsp+0x10],rsi
   140009412:	push   rdi
   140009413:	sub    rsp,0x20
   140009417:	mov    rdi,rcx
   14000941a:	call   0x14000f8b4
   14000941f:	xor    esi,esi
   140009421:	mov    rbx,rax
   140009424:	cmp    rax,rsi
   140009427:	jne    0x14000942d
   140009429:	xor    eax,eax
   14000942b:	jmp    0x140009441
   14000942d:	mov    rdx,rdi
   140009430:	mov    rcx,rax
   140009433:	call   0x1400090d8
   140009438:	cmp    eax,esi
   14000943a:	cmovne rbx,rsi
   14000943e:	mov    rax,rbx
   140009441:	mov    rbx,QWORD PTR [rsp+0x30]
   140009446:	mov    rsi,QWORD PTR [rsp+0x38]
   14000944b:	add    rsp,0x20
   14000944f:	pop    rdi
   140009450:	ret    
   140009451:	int3   
   140009452:	int3   
   140009453:	int3   
   140009454:	rex push rbx
   140009456:	sub    rsp,0x20
   14000945a:	mov    rbx,rcx
   14000945d:	lea    rcx,[rsp+0x30]
   140009462:	call   QWORD PTR [rip+0x1de80]        # 0x1400272e8
   140009468:	mov    rdx,QWORD PTR [rsp+0x30]
   14000946d:	or     rcx,0xffffffffffffffff
   140009471:	movabs r11,0xfe624e212ac18000
   14000947b:	movabs rax,0xd6bf94d5e57a42bd
   140009485:	add    rdx,r11
   140009488:	mul    rdx
   14000948b:	movabs rax,0x793406fff
   140009495:	shr    rdx,0x17
   140009499:	cmp    rdx,rax
   14000949c:	cmovg  rdx,rcx
   1400094a0:	test   rbx,rbx
   1400094a3:	je     0x1400094a8
   1400094a5:	mov    QWORD PTR [rbx],rdx
   1400094a8:	mov    rax,rdx
   1400094ab:	add    rsp,0x20
   1400094af:	pop    rbx
   1400094b0:	ret    
   1400094b1:	int3   
   1400094b2:	int3   
   1400094b3:	int3   
   1400094b4:	rex push rbx
   1400094b6:	sub    rsp,0x20
   1400094ba:	mov    rbx,rcx
   1400094bd:	mov    BYTE PTR [rcx+0x18],0x0
   1400094c1:	test   rdx,rdx
   1400094c4:	jne    0x14000954c
   1400094ca:	call   0x1400118e4
   1400094cf:	mov    QWORD PTR [rbx+0x10],rax
   1400094d3:	mov    rdx,QWORD PTR [rax+0xc0]
   1400094da:	mov    QWORD PTR [rbx],rdx
   1400094dd:	mov    rcx,QWORD PTR [rax+0xb8]
   1400094e4:	mov    QWORD PTR [rbx+0x8],rcx
   1400094e8:	mov    rcx,QWORD PTR [rip+0x2bbe1]        # 0x1400350d0
   1400094ef:	cmp    rdx,rcx
   1400094f2:	je     0x14000950a
   1400094f4:	mov    eax,DWORD PTR [rax+0xc8]
   1400094fa:	test   DWORD PTR [rip+0x2ba58],eax        # 0x140034f58
   140009500:	jne    0x14000950a
   140009502:	call   0x140010580
   140009507:	mov    QWORD PTR [rbx],rax
   14000950a:	mov    rax,QWORD PTR [rip+0x2b93f]        # 0x140034e50
   140009511:	cmp    QWORD PTR [rbx+0x8],rax
   140009515:	je     0x140009532
   140009517:	mov    rax,QWORD PTR [rbx+0x10]
   14000951b:	mov    ecx,DWORD PTR [rax+0xc8]
   140009521:	test   DWORD PTR [rip+0x2ba31],ecx        # 0x140034f58
   140009527:	jne    0x140009532
   140009529:	call   0x14000fbf4
   14000952e:	mov    QWORD PTR [rbx+0x8],rax
   140009532:	mov    rax,QWORD PTR [rbx+0x10]
   140009536:	test   BYTE PTR [rax+0xc8],0x2
   14000953d:	jne    0x140009554
   14000953f:	or     DWORD PTR [rax+0xc8],0x2
   140009546:	mov    BYTE PTR [rbx+0x18],0x1
   14000954a:	jmp    0x140009554
   14000954c:	movdqu xmm0,XMMWORD PTR [rdx]
   140009550:	movdqu XMMWORD PTR [rcx],xmm0
   140009554:	mov    rax,rbx
   140009557:	add    rsp,0x20
   14000955b:	pop    rbx
   14000955c:	ret    
   14000955d:	int3   
   14000955e:	int3   
   14000955f:	int3   
   140009560:	cmp    BYTE PTR [rcx+0x18],0x0
   140009564:	je     0x140009571
   140009566:	mov    rax,QWORD PTR [rcx+0x10]
   14000956a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009571:	ret    
   140009572:	int3   
   140009573:	int3   
   140009574:	mov    rax,rcx
   140009577:	ret    
   140009578:	mov    rax,rsp
   14000957b:	mov    QWORD PTR [rax+0x8],rbx
   14000957f:	mov    QWORD PTR [rax+0x10],rbp
   140009583:	mov    QWORD PTR [rax+0x18],rsi
   140009587:	mov    QWORD PTR [rax+0x20],rdi
   14000958b:	push   r12
   14000958d:	push   r13
   14000958f:	push   r14
   140009591:	sub    rsp,0x50
   140009595:	mov    r14,rdx
   140009598:	mov    rdx,rcx
   14000959b:	lea    rcx,[rax-0x38]
   14000959f:	mov    r12d,r9d
   1400095a2:	mov    r13,r8
   1400095a5:	call   0x1400094b4
   1400095aa:	test   r13,r13
   1400095ad:	je     0x1400095b3
   1400095af:	mov    QWORD PTR [r13+0x0],r14
   1400095b3:	test   r14,r14
   1400095b6:	jne    0x1400095e2
   1400095b8:	call   0x14000f574
   1400095bd:	and    QWORD PTR [rsp+0x20],0x0
   1400095c3:	xor    r9d,r9d
   1400095c6:	xor    r8d,r8d
   1400095c9:	xor    edx,edx
   1400095cb:	xor    ecx,ecx
   1400095cd:	mov    DWORD PTR [rax],0x16
   1400095d3:	call   0x14000e4d8
   1400095d8:	cmp    BYTE PTR [rsp+0x48],0x0
   1400095dd:	jmp    0x1400097cb
   1400095e2:	test   r12d,r12d
   1400095e5:	je     0x1400095f3
   1400095e7:	cmp    r12d,0x2
   1400095eb:	jl     0x1400095b8
   1400095ed:	cmp    r12d,0x24
   1400095f1:	jg     0x1400095b8
   1400095f3:	mov    bpl,BYTE PTR [r14]
   1400095f6:	mov    r8,QWORD PTR [rsp+0x30]
   1400095fb:	xor    edi,edi
   1400095fd:	lea    rbx,[r14+0x1]
   140009601:	cmp    DWORD PTR [r8+0x10c],0x1
   140009609:	jle    0x140009625
   14000960b:	lea    r8,[rsp+0x30]
   140009610:	movzx  ecx,bpl
   140009614:	mov    edx,0x8
   140009619:	call   0x140011b14
   14000961e:	mov    r8,QWORD PTR [rsp+0x30]
   140009623:	jmp    0x140009637
   140009625:	mov    rax,QWORD PTR [r8+0x140]
   14000962c:	movzx  ecx,bpl
   140009630:	movzx  eax,WORD PTR [rax+rcx*2]
   140009634:	and    eax,0x8
   140009637:	test   eax,eax
   140009639:	je     0x140009643
   14000963b:	mov    bpl,BYTE PTR [rbx]
   14000963e:	inc    rbx
   140009641:	jmp    0x140009601
   140009643:	mov    esi,DWORD PTR [rsp+0x90]
   14000964a:	cmp    bpl,0x2d
   14000964e:	jne    0x140009655
   140009650:	or     esi,0x2
   140009653:	jmp    0x14000965b
   140009655:	cmp    bpl,0x2b
   140009659:	jne    0x140009661
   14000965b:	mov    bpl,BYTE PTR [rbx]
   14000965e:	inc    rbx
   140009661:	test   r12d,r12d
   140009664:	js     0x1400097bd
   14000966a:	cmp    r12d,0x1
   14000966e:	je     0x1400097bd
   140009674:	cmp    r12d,0x24
   140009678:	jg     0x1400097bd
   14000967e:	test   r12d,r12d
   140009681:	jne    0x1400096ab
   140009683:	cmp    bpl,0x30
   140009687:	je     0x140009691
   140009689:	mov    r12d,0xa
   14000968f:	jmp    0x1400096c9
   140009691:	cmp    BYTE PTR [rbx],0x78
   140009694:	je     0x1400096a3
   140009696:	cmp    BYTE PTR [rbx],0x58
   140009699:	je     0x1400096a3
   14000969b:	mov    r12d,0x8
   1400096a1:	jmp    0x1400096c9
   1400096a3:	mov    r12d,0x10
   1400096a9:	jmp    0x1400096b7
   1400096ab:	cmp    r12d,0x10
   1400096af:	jne    0x1400096c9
   1400096b1:	cmp    bpl,0x30
   1400096b5:	jne    0x1400096c9
   1400096b7:	cmp    BYTE PTR [rbx],0x78
   1400096ba:	je     0x1400096c1
   1400096bc:	cmp    BYTE PTR [rbx],0x58
   1400096bf:	jne    0x1400096c9
   1400096c1:	mov    bpl,BYTE PTR [rbx+0x1]
   1400096c5:	add    rbx,0x2
   1400096c9:	mov    r10,QWORD PTR [r8+0x140]
   1400096d0:	xor    edx,edx
   1400096d2:	or     eax,0xffffffff
   1400096d5:	div    r12d
   1400096d8:	mov    r9d,eax
   1400096db:	movzx  ecx,bpl
   1400096df:	movzx  r8d,WORD PTR [r10+rcx*2]
   1400096e4:	test   r8b,0x4
   1400096e8:	je     0x1400096f3
   1400096ea:	movsx  ecx,bpl
   1400096ee:	sub    ecx,0x30
   1400096f1:	jmp    0x14000970d
   1400096f3:	test   r8d,0x103
   1400096fa:	je     0x140009728
   1400096fc:	lea    eax,[rbp-0x61]
   1400096ff:	movsx  ecx,bpl
   140009703:	cmp    al,0x19
   140009705:	ja     0x14000970a
   140009707:	sub    ecx,0x20
   14000970a:	add    ecx,0xffffffc9
   14000970d:	cmp    ecx,r12d
   140009710:	jae    0x140009728
   140009712:	or     esi,0x8
   140009715:	cmp    edi,r9d
   140009718:	jb     0x14000973c
   14000971a:	jne    0x140009720
   14000971c:	cmp    ecx,edx
   14000971e:	jbe    0x14000973c
   140009720:	or     esi,0x4
   140009723:	test   r13,r13
   140009726:	jne    0x140009742
   140009728:	dec    rbx
   14000972b:	test   sil,0x8
   14000972f:	jne    0x14000974a
   140009731:	test   r13,r13
   140009734:	cmovne rbx,r14
   140009738:	xor    edi,edi
   14000973a:	jmp    0x140009795
   14000973c:	imul   edi,r12d
   140009740:	add    edi,ecx
   140009742:	mov    bpl,BYTE PTR [rbx]
   140009745:	inc    rbx
   140009748:	jmp    0x1400096db
   14000974a:	mov    ebp,0x7fffffff
   14000974f:	test   sil,0x4
   140009753:	jne    0x140009772
   140009755:	test   sil,0x1
   140009759:	jne    0x140009795
   14000975b:	mov    eax,esi
   14000975d:	and    eax,0x2
   140009760:	je     0x14000976a
   140009762:	cmp    edi,0x80000000
   140009768:	ja     0x140009772
   14000976a:	test   eax,eax
   14000976c:	jne    0x140009795
   14000976e:	cmp    edi,ebp
   140009770:	jbe    0x140009795
   140009772:	call   0x14000f574
   140009777:	mov    DWORD PTR [rax],0x22
   14000977d:	test   sil,0x1
   140009781:	je     0x140009788
   140009783:	or     edi,0xffffffff
   140009786:	jmp    0x140009795
   140009788:	mov    al,sil
   14000978b:	and    al,0x2
   14000978d:	neg    al
   14000978f:	sbb    edi,edi
   140009791:	neg    edi
   140009793:	add    edi,ebp
   140009795:	test   r13,r13
   140009798:	je     0x14000979e
   14000979a:	mov    QWORD PTR [r13+0x0],rbx
   14000979e:	test   sil,0x2
   1400097a2:	je     0x1400097a6
   1400097a4:	neg    edi
   1400097a6:	cmp    BYTE PTR [rsp+0x48],0x0
   1400097ab:	je     0x1400097b9
   1400097ad:	mov    rcx,QWORD PTR [rsp+0x40]
   1400097b2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400097b9:	mov    eax,edi
   1400097bb:	jmp    0x1400097db
   1400097bd:	test   r13,r13
   1400097c0:	je     0x1400097c6
   1400097c2:	mov    QWORD PTR [r13+0x0],r14
   1400097c6:	cmp    BYTE PTR [rsp+0x48],dil
   1400097cb:	je     0x1400097d9
   1400097cd:	mov    rax,QWORD PTR [rsp+0x40]
   1400097d2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400097d9:	xor    eax,eax
   1400097db:	lea    r11,[rsp+0x50]
   1400097e0:	mov    rbx,QWORD PTR [r11+0x20]
   1400097e4:	mov    rbp,QWORD PTR [r11+0x28]
   1400097e8:	mov    rsi,QWORD PTR [r11+0x30]
   1400097ec:	mov    rdi,QWORD PTR [r11+0x38]
   1400097f0:	mov    rsp,r11
   1400097f3:	pop    r14
   1400097f5:	pop    r13
   1400097f7:	pop    r12
   1400097f9:	ret    
   1400097fa:	int3   
   1400097fb:	int3   
   1400097fc:	sub    rsp,0x38
   140009800:	xor    eax,eax
   140009802:	mov    r9d,r8d
   140009805:	mov    r8,rdx
   140009808:	mov    DWORD PTR [rsp+0x20],eax
   14000980c:	mov    rdx,rcx
   14000980f:	cmp    DWORD PTR [rip+0x2c7ab],eax        # 0x140035fc0
   140009815:	jne    0x140009820
   140009817:	lea    rcx,[rip+0x2b8c2]        # 0x1400350e0
   14000981e:	jmp    0x140009822
   140009820:	xor    ecx,ecx
   140009822:	call   0x140009578
   140009827:	add    rsp,0x38
   14000982b:	ret    
   14000982c:	sub    rsp,0x38
   140009830:	and    DWORD PTR [rsp+0x20],0x0
   140009835:	mov    rax,r9
   140009838:	mov    r9d,r8d
   14000983b:	mov    r8,rdx
   14000983e:	mov    rdx,rcx
   140009841:	mov    rcx,rax
   140009844:	call   0x140009578
   140009849:	add    rsp,0x38
   14000984d:	ret    
   14000984e:	int3   
   14000984f:	int3   
   140009850:	sub    rsp,0x38
   140009854:	cmp    DWORD PTR [rip+0x2c765],0x0        # 0x140035fc0
   14000985b:	mov    r9d,r8d
   14000985e:	mov    r8,rdx
   140009861:	mov    rdx,rcx
   140009864:	mov    DWORD PTR [rsp+0x20],0x1
   14000986c:	jne    0x140009877
   14000986e:	lea    rcx,[rip+0x2b86b]        # 0x1400350e0
   140009875:	jmp    0x140009879
   140009877:	xor    ecx,ecx
   140009879:	call   0x140009578
   14000987e:	add    rsp,0x38
   140009882:	ret    
   140009883:	int3   
   140009884:	sub    rsp,0x38
   140009888:	mov    rax,r9
   14000988b:	mov    r9d,r8d
   14000988e:	mov    r8,rdx
   140009891:	mov    rdx,rcx
   140009894:	mov    rcx,rax
   140009897:	mov    DWORD PTR [rsp+0x20],0x1
   14000989f:	call   0x140009578
   1400098a4:	add    rsp,0x38
   1400098a8:	ret    
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	test   rcx,rcx
   1400098af:	je     0x1400098e8
   1400098b1:	push   rbx
   1400098b2:	sub    rsp,0x20
   1400098b6:	mov    r8,rcx
   1400098b9:	mov    rcx,QWORD PTR [rip+0x2c728]        # 0x140035fe8
   1400098c0:	xor    edx,edx
   1400098c2:	call   QWORD PTR [rip+0x1da28]        # 0x1400272f0
   1400098c8:	test   eax,eax
   1400098ca:	jne    0x1400098e3
   1400098cc:	call   0x14000f574
   1400098d1:	mov    rbx,rax
   1400098d4:	call   QWORD PTR [rip+0x1d996]        # 0x140027270
   1400098da:	mov    ecx,eax
   1400098dc:	call   0x14000f52c
   1400098e1:	mov    DWORD PTR [rbx],eax
   1400098e3:	add    rsp,0x20
   1400098e7:	pop    rbx
   1400098e8:	ret    
   1400098e9:	int3   
   1400098ea:	int3   
   1400098eb:	int3   
   1400098ec:	rex push rbx
   1400098ee:	sub    rsp,0x20
   1400098f2:	mov    rbx,rcx
   1400098f5:	mov    rcx,QWORD PTR [rip+0x2c6ec]        # 0x140035fe8
   1400098fc:	test   rcx,rcx
   1400098ff:	jne    0x140009921
   140009901:	call   0x140011f14
   140009906:	mov    ecx,0x1e
   14000990b:	call   0x140011cc0
   140009910:	mov    ecx,0xff
   140009915:	call   0x14000db88
   14000991a:	mov    rcx,QWORD PTR [rip+0x2c6c7]        # 0x140035fe8
   140009921:	test   rbx,rbx
   140009924:	mov    r8d,0x1
   14000992a:	cmovne r8,rbx
   14000992e:	xor    edx,edx
   140009930:	add    rsp,0x20
   140009934:	pop    rbx
   140009935:	rex.W jmp QWORD PTR [rip+0x1d9bc]        # 0x1400272f8
   14000993c:	mov    QWORD PTR [rsp+0x8],rbx
   140009941:	mov    QWORD PTR [rsp+0x10],rsi
   140009946:	push   rdi
   140009947:	sub    rsp,0x20
   14000994b:	mov    rbx,rcx
   14000994e:	cmp    rcx,0xffffffffffffffe0
   140009952:	ja     0x1400099d0
   140009954:	mov    edi,0x1
   140009959:	test   rcx,rcx
   14000995c:	cmovne rdi,rcx
   140009960:	mov    rcx,QWORD PTR [rip+0x2c681]        # 0x140035fe8
   140009967:	test   rcx,rcx
   14000996a:	jne    0x14000998c
   14000996c:	call   0x140011f14
   140009971:	mov    ecx,0x1e
   140009976:	call   0x140011cc0
   14000997b:	mov    ecx,0xff
   140009980:	call   0x14000db88
   140009985:	mov    rcx,QWORD PTR [rip+0x2c65c]        # 0x140035fe8
   14000998c:	mov    r8,rdi
   14000998f:	xor    edx,edx
   140009991:	call   QWORD PTR [rip+0x1d961]        # 0x1400272f8
   140009997:	mov    rsi,rax
   14000999a:	test   rax,rax
   14000999d:	jne    0x1400099cb
   14000999f:	cmp    DWORD PTR [rip+0x2c96b],eax        # 0x140036310
   1400099a5:	je     0x1400099b5
   1400099a7:	mov    rcx,rbx
   1400099aa:	call   0x140011fc4
   1400099af:	test   eax,eax
   1400099b1:	je     0x1400099c0
   1400099b3:	jmp    0x140009960
   1400099b5:	call   0x14000f574
   1400099ba:	mov    DWORD PTR [rax],0xc
   1400099c0:	call   0x14000f574
   1400099c5:	mov    DWORD PTR [rax],0xc
   1400099cb:	mov    rax,rsi
   1400099ce:	jmp    0x1400099e2
   1400099d0:	call   0x140011fc4
   1400099d5:	call   0x14000f574
   1400099da:	mov    DWORD PTR [rax],0xc
   1400099e0:	xor    eax,eax
   1400099e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400099e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400099ec:	add    rsp,0x20
   1400099f0:	pop    rdi
   1400099f1:	ret    
   1400099f2:	int3   
   1400099f3:	int3   
   1400099f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400099f9:	push   rbp
   1400099fa:	push   rsi
   1400099fb:	push   rdi
   1400099fc:	push   r13
   1400099fe:	push   r14
   140009a00:	sub    rsp,0x30
   140009a04:	xor    r14d,r14d
   140009a07:	mov    rsi,rdx
   140009a0a:	mov    rdi,rcx
   140009a0d:	mov    QWORD PTR [rsp+0x78],r14
   140009a12:	cmp    DWORD PTR [rip+0x2e55f],r14d        # 0x140037f78
   140009a19:	jne    0x140009a23
   140009a1b:	or     eax,0xffffffff
   140009a1e:	jmp    0x140009c85
   140009a23:	cmp    rcx,r14
   140009a26:	jne    0x140009a49
   140009a28:	call   0x14000f574
   140009a2d:	xor    r9d,r9d
   140009a30:	xor    r8d,r8d
   140009a33:	xor    edx,edx
   140009a35:	xor    ecx,ecx
   140009a37:	mov    QWORD PTR [rsp+0x20],r14
   140009a3c:	mov    DWORD PTR [rax],0x16
   140009a42:	call   0x14000e4d8
   140009a47:	jmp    0x140009a1b
   140009a49:	cmp    rdx,r14
   140009a4c:	jne    0x140009ab5
   140009a4e:	mov    r13d,0x3d
   140009a54:	mov    edx,r13d
   140009a57:	call   0x140012fcc
   140009a5c:	cmp    rax,r14
   140009a5f:	je     0x140009a82
   140009a61:	mov    rcx,rax
   140009a64:	mov    ebx,0x7fff
   140009a69:	sub    rcx,rdi
   140009a6c:	cmp    rcx,rbx
   140009a6f:	jge    0x140009a28
   140009a71:	lea    rcx,[rax+0x1]
   140009a75:	mov    rdx,rbx
   140009a78:	call   0x140012eb8
   140009a7d:	cmp    rax,rbx
   140009a80:	jae    0x140009a28
   140009a82:	mov    rcx,rdi
   140009a85:	call   0x140012e10
   140009a8a:	mov    edx,0x1
   140009a8f:	lea    rcx,[rax+0x1]
   140009a93:	mov    rbx,rax
   140009a96:	call   0x140012c6c
   140009a9b:	mov    QWORD PTR [rsp+0x78],rax
   140009aa0:	cmp    rax,r14
   140009aa3:	je     0x140009a1b
   140009aa9:	mov    r8,rdi
   140009aac:	lea    rdx,[rbx+0x1]
   140009ab0:	mov    rcx,rax
   140009ab3:	jmp    0x140009b33
   140009ab5:	mov    ebx,0x7fff
   140009aba:	mov    rdx,rbx
   140009abd:	call   0x140012eb8
   140009ac2:	mov    rdx,rbx
   140009ac5:	mov    rcx,rsi
   140009ac8:	mov    rbp,rax
   140009acb:	call   0x140012eb8
   140009ad0:	cmp    rbp,rbx
   140009ad3:	jae    0x140009a28
   140009ad9:	cmp    rax,rbx
   140009adc:	jae    0x140009a28
   140009ae2:	lea    rbx,[rax+rbp*1+0x2]
   140009ae7:	mov    edx,0x1
   140009aec:	mov    rcx,rbx
   140009aef:	call   0x140012c6c
   140009af4:	mov    QWORD PTR [rsp+0x78],rax
   140009af9:	cmp    rax,r14
   140009afc:	je     0x140009a1b
   140009b02:	mov    r8,rdi
   140009b05:	mov    rdx,rbx
   140009b08:	mov    rcx,rax
   140009b0b:	call   0x140012b54
   140009b10:	mov    rax,QWORD PTR [rsp+0x78]
   140009b15:	mov    r13d,0x3d
   140009b1b:	mov    BYTE PTR [rax+rbp*1],r13b
   140009b1f:	mov    rcx,QWORD PTR [rsp+0x78]
   140009b24:	inc    rbp
   140009b27:	sub    rbx,rbp
   140009b2a:	mov    r8,rsi
   140009b2d:	add    rcx,rbp
   140009b30:	mov    rdx,rbx
   140009b33:	call   0x140012b54
   140009b38:	lea    rcx,[rsp+0x78]
   140009b3d:	mov    edx,0x1
   140009b42:	call   0x1400127a4
   140009b47:	cmp    eax,r14d
   140009b4a:	je     0x140009b64
   140009b4c:	mov    rcx,QWORD PTR [rsp+0x78]
   140009b51:	cmp    rcx,r14
   140009b54:	je     0x140009a1b
   140009b5a:	call   0x1400098ac
   140009b5f:	jmp    0x140009a1b
   140009b64:	cmp    QWORD PTR [rip+0x2bdad],r14        # 0x140035918
   140009b6b:	je     0x140009c83
   140009b71:	or     ebx,0xffffffff
   140009b74:	mov    r8,rdi
   140009b77:	xor    edx,edx
   140009b79:	xor    ecx,ecx
   140009b7b:	mov    r9d,ebx
   140009b7e:	mov    DWORD PTR [rsp+0x28],r14d
   140009b83:	mov    QWORD PTR [rsp+0x70],r14
   140009b88:	mov    QWORD PTR [rsp+0x20],r14
   140009b8d:	call   QWORD PTR [rip+0x1d6a5]        # 0x140027238
   140009b93:	mov    ebp,eax
   140009b95:	cmp    eax,r14d
   140009b98:	jne    0x140009bac
   140009b9a:	call   0x14000f574
   140009b9f:	mov    DWORD PTR [rax],0x2a
   140009ba5:	mov    eax,ebx
   140009ba7:	jmp    0x140009c85
   140009bac:	cmp    rsi,r14
   140009baf:	je     0x140009bd4
   140009bb1:	mov    r9d,ebx
   140009bb4:	mov    r8,rsi
   140009bb7:	xor    edx,edx
   140009bb9:	xor    ecx,ecx
   140009bbb:	mov    DWORD PTR [rsp+0x28],r14d
   140009bc0:	mov    QWORD PTR [rsp+0x20],r14
   140009bc5:	call   QWORD PTR [rip+0x1d66d]        # 0x140027238
   140009bcb:	cmp    eax,r14d
   140009bce:	je     0x140009b9a
   140009bd0:	lea    ebp,[rbp+rax*1+0x1]
   140009bd4:	movsxd rcx,ebp
   140009bd7:	mov    edx,0x2
   140009bdc:	call   0x140012c6c
   140009be1:	mov    QWORD PTR [rsp+0x70],rax
   140009be6:	cmp    rax,r14
   140009be9:	je     0x140009ba5
   140009beb:	mov    r9d,ebx
   140009bee:	mov    r8,rdi
   140009bf1:	xor    edx,edx
   140009bf3:	xor    ecx,ecx
   140009bf5:	mov    DWORD PTR [rsp+0x28],ebp
   140009bf9:	mov    QWORD PTR [rsp+0x20],rax
   140009bfe:	call   QWORD PTR [rip+0x1d634]        # 0x140027238
   140009c04:	cmp    eax,r14d
   140009c07:	jne    0x140009c15
   140009c09:	mov    rcx,QWORD PTR [rsp+0x70]
   140009c0e:	call   0x1400098ac
   140009c13:	jmp    0x140009b9a
   140009c15:	cmp    rsi,r14
   140009c18:	je     0x140009c5a
   140009c1a:	mov    rcx,QWORD PTR [rsp+0x70]
   140009c1f:	call   0x140012684
   140009c24:	mov    rcx,QWORD PTR [rsp+0x70]
   140009c29:	mov    r9d,ebx
   140009c2c:	mov    WORD PTR [rcx+rax*2],r13w
   140009c31:	mov    rcx,QWORD PTR [rsp+0x70]
   140009c36:	inc    rax
   140009c39:	sub    ebp,eax
   140009c3b:	lea    rax,[rcx+rax*2]
   140009c3f:	mov    r8,rsi
   140009c42:	xor    edx,edx
   140009c44:	xor    ecx,ecx
   140009c46:	mov    DWORD PTR [rsp+0x28],ebp
   140009c4a:	mov    QWORD PTR [rsp+0x20],rax
   140009c4f:	call   QWORD PTR [rip+0x1d5e3]        # 0x140027238
   140009c55:	cmp    eax,r14d
   140009c58:	je     0x140009c09
   140009c5a:	lea    rcx,[rsp+0x70]
   140009c5f:	xor    edx,edx
   140009c61:	call   0x140012108
   140009c66:	cmp    eax,r14d
   140009c69:	je     0x140009c83
   140009c6b:	mov    rcx,QWORD PTR [rsp+0x70]
   140009c70:	cmp    rcx,r14
   140009c73:	je     0x140009ba5
   140009c79:	call   0x1400098ac
   140009c7e:	jmp    0x140009ba5
   140009c83:	xor    eax,eax
   140009c85:	mov    rbx,QWORD PTR [rsp+0x60]
   140009c8a:	add    rsp,0x30
   140009c8e:	pop    r14
   140009c90:	pop    r13
   140009c92:	pop    rdi
   140009c93:	pop    rsi
   140009c94:	pop    rbp
   140009c95:	ret    
   140009c96:	int3   
   140009c97:	int3   
   140009c98:	rex push rbx
   140009c9a:	sub    rsp,0x20
   140009c9e:	mov    rbx,rcx
   140009ca1:	mov    ecx,0x7
   140009ca6:	call   0x1400133a8
   140009cab:	nop
   140009cac:	xor    edx,edx
   140009cae:	mov    rcx,rbx
   140009cb1:	call   0x1400099f4
   140009cb6:	mov    ebx,eax
   140009cb8:	mov    ecx,0x7
   140009cbd:	call   0x140013288
   140009cc2:	mov    eax,ebx
   140009cc4:	add    rsp,0x20
   140009cc8:	pop    rbx
   140009cc9:	ret    
   140009cca:	int3   
   140009ccb:	int3   
   140009ccc:	mov    QWORD PTR [rsp+0x8],rbx
   140009cd1:	mov    QWORD PTR [rsp+0x10],rsi
   140009cd6:	push   rdi
   140009cd7:	sub    rsp,0x30
   140009cdb:	mov    rdi,rdx
   140009cde:	mov    rsi,rcx
   140009ce1:	xor    ebx,ebx
   140009ce3:	mov    eax,ebx
   140009ce5:	cmp    rdx,rbx
   140009ce8:	setne  al
   140009ceb:	cmp    eax,ebx
   140009ced:	jne    0x140009d11
   140009cef:	call   0x14000f574
   140009cf4:	lea    edi,[rbx+0x16]
   140009cf7:	mov    DWORD PTR [rax],edi
   140009cf9:	mov    QWORD PTR [rsp+0x20],rbx
   140009cfe:	xor    r9d,r9d
   140009d01:	xor    r8d,r8d
   140009d04:	xor    edx,edx
   140009d06:	xor    ecx,ecx
   140009d08:	call   0x14000e4d8
   140009d0d:	mov    eax,edi
   140009d0f:	jmp    0x140009d3e
   140009d11:	mov    ecx,0x7
   140009d16:	call   0x1400133a8
   140009d1b:	nop
   140009d1c:	mov    rdx,rdi
   140009d1f:	mov    rcx,rsi
   140009d22:	call   0x1400099f4
   140009d27:	cmp    eax,ebx
   140009d29:	je     0x140009d32
   140009d2b:	call   0x14000f574
   140009d30:	mov    ebx,DWORD PTR [rax]
   140009d32:	mov    ecx,0x7
   140009d37:	call   0x140013288
   140009d3c:	mov    eax,ebx
   140009d3e:	mov    rbx,QWORD PTR [rsp+0x40]
   140009d43:	mov    rsi,QWORD PTR [rsp+0x48]
   140009d48:	add    rsp,0x30
   140009d4c:	pop    rdi
   140009d4d:	ret    
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	mov    DWORD PTR [rsp+0x8],ecx
   140009d54:	push   rbx
   140009d55:	push   rsi
   140009d56:	push   rdi
   140009d57:	push   r12
   140009d59:	push   r13
   140009d5b:	push   r14
   140009d5d:	push   r15
   140009d5f:	sub    rsp,0x90
   140009d66:	mov    rdi,rdx
   140009d69:	movsxd rsi,ecx
   140009d6c:	xor    ebx,ebx
   140009d6e:	mov    eax,ebx
   140009d70:	cmp    rdx,rbx
   140009d73:	setne  al
   140009d76:	cmp    eax,ebx
   140009d78:	jne    0x140009da8
   140009d7a:	call   0x14000f594
   140009d7f:	mov    DWORD PTR [rax],ebx
   140009d81:	call   0x14000f574
   140009d86:	mov    DWORD PTR [rax],0x16
   140009d8c:	mov    QWORD PTR [rsp+0x20],rbx
   140009d91:	xor    r9d,r9d
   140009d94:	xor    r8d,r8d
   140009d97:	xor    edx,edx
   140009d99:	xor    ecx,ecx
   140009d9b:	call   0x14000e4d8
   140009da0:	or     eax,0xffffffff
   140009da3:	jmp    0x14000a17a
   140009da8:	xor    edx,edx
   140009daa:	lea    r8d,[rdx+0x30]
   140009dae:	mov    rcx,rdi
   140009db1:	call   0x140008a00
   140009db6:	cmp    esi,0xfffffffe
   140009db9:	jne    0x140009dd5
   140009dbb:	call   0x14000f594
   140009dc0:	mov    DWORD PTR [rax],ebx
   140009dc2:	call   0x14000f574
   140009dc7:	mov    DWORD PTR [rax],0x9
   140009dcd:	or     eax,0xffffffff
   140009dd0:	jmp    0x14000a17a
   140009dd5:	cmp    esi,ebx
   140009dd7:	jl     0x14000a151
   140009ddd:	cmp    esi,DWORD PTR [rip+0x2df69]        # 0x140037d4c
   140009de3:	jae    0x14000a151
   140009de9:	mov    r12,rsi
   140009dec:	mov    r13,rsi
   140009def:	sar    r13,0x5
   140009df3:	lea    r15,[rip+0x2df66]        # 0x140037d60
   140009dfa:	and    r12d,0x1f
   140009dfe:	imul   r12,r12,0x58
   140009e02:	mov    rax,QWORD PTR [r15+r13*8]
   140009e06:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140009e0c:	mov    r14d,0x1
   140009e12:	and    ecx,r14d
   140009e15:	jne    0x140009e45
   140009e17:	call   0x14000f594
   140009e1c:	mov    DWORD PTR [rax],ebx
   140009e1e:	call   0x14000f574
   140009e23:	mov    DWORD PTR [rax],0x9
   140009e29:	mov    QWORD PTR [rsp+0x20],rbx
   140009e2e:	xor    r9d,r9d
   140009e31:	xor    r8d,r8d
   140009e34:	xor    edx,edx
   140009e36:	xor    ecx,ecx
   140009e38:	call   0x14000e4d8
   140009e3d:	or     eax,0xffffffff
   140009e40:	jmp    0x14000a17a
   140009e45:	mov    ecx,esi
   140009e47:	call   0x1400135cc
   140009e4c:	nop
   140009e4d:	mov    rcx,QWORD PTR [r15+r13*8]
   140009e51:	test   BYTE PTR [rcx+r12*1+0x8],r14b
   140009e56:	jne    0x140009e6b
   140009e58:	call   0x14000f574
   140009e5d:	mov    DWORD PTR [rax],0x9
   140009e63:	or     ebx,0xffffffff
   140009e66:	jmp    0x14000a146
   140009e6b:	mov    rcx,QWORD PTR [rcx+r12*1]
   140009e6f:	call   QWORD PTR [rip+0x1d4ab]        # 0x140027320
   140009e75:	btr    eax,0xf
   140009e79:	cmp    eax,r14d
   140009e7c:	je     0x140009f3b
   140009e82:	cmp    eax,0x2
   140009e85:	je     0x140009eb8
   140009e87:	cmp    eax,0x3
   140009e8a:	je     0x140009eb8
   140009e8c:	cmp    eax,ebx
   140009e8e:	jne    0x140009ea3
   140009e90:	call   0x14000f574
   140009e95:	mov    DWORD PTR [rax],0x9
   140009e9b:	or     ebx,0xffffffff
   140009e9e:	jmp    0x14000a146
   140009ea3:	call   QWORD PTR [rip+0x1d3c7]        # 0x140027270
   140009ea9:	mov    ecx,eax
   140009eab:	call   0x14000f5b4
   140009eb0:	or     ebx,0xffffffff
   140009eb3:	jmp    0x14000a146
   140009eb8:	cmp    eax,0x2
   140009ebb:	jne    0x140009ec8
   140009ebd:	mov    ecx,0x2000
   140009ec2:	mov    WORD PTR [rdi+0x6],cx
   140009ec6:	jmp    0x140009ed1
   140009ec8:	mov    ecx,0x1000
   140009ecd:	mov    WORD PTR [rdi+0x6],cx
   140009ed1:	mov    DWORD PTR [rdi],esi
   140009ed3:	mov    DWORD PTR [rdi+0x10],esi
   140009ed6:	mov    WORD PTR [rdi+0x8],r14w
   140009edb:	mov    WORD PTR [rdi+0x4],bx
   140009edf:	mov    WORD PTR [rdi+0xc],bx
   140009ee3:	mov    WORD PTR [rdi+0xa],bx
   140009ee7:	mov    QWORD PTR [rdi+0x28],rbx
   140009eeb:	mov    QWORD PTR [rdi+0x20],rbx
   140009eef:	mov    QWORD PTR [rdi+0x18],rbx
   140009ef3:	cmp    eax,0x2
   140009ef6:	jne    0x140009f00
   140009ef8:	mov    DWORD PTR [rdi+0x14],ebx
   140009efb:	jmp    0x14000a146
   140009f00:	mov    rcx,QWORD PTR [r15+r13*8]
   140009f04:	mov    QWORD PTR [rsp+0x28],rbx
   140009f09:	lea    rax,[rsp+0xd8]
   140009f11:	mov    QWORD PTR [rsp+0x20],rax
   140009f16:	xor    r9d,r9d
   140009f19:	xor    r8d,r8d
   140009f1c:	xor    edx,edx
   140009f1e:	mov    rcx,QWORD PTR [rcx+r12*1]
   140009f22:	call   QWORD PTR [rip+0x1d3f0]        # 0x140027318
   140009f28:	neg    eax
   140009f2a:	sbb    ecx,ecx
   140009f2c:	and    ecx,DWORD PTR [rsp+0xd8]
   140009f33:	mov    DWORD PTR [rdi+0x14],ecx
   140009f36:	jmp    0x14000a146
   140009f3b:	mov    WORD PTR [rdi+0x6],bx
   140009f3f:	mov    WORD PTR [rdi+0xc],bx
   140009f43:	mov    WORD PTR [rdi+0xa],bx
   140009f47:	mov    WORD PTR [rdi+0x4],bx
   140009f4b:	mov    WORD PTR [rdi+0x8],r14w
   140009f50:	mov    rcx,QWORD PTR [r15+r13*8]
   140009f54:	lea    rdx,[rsp+0x50]
   140009f59:	mov    rcx,QWORD PTR [rcx+r12*1]
   140009f5d:	call   QWORD PTR [rip+0x1d3ad]        # 0x140027310
   140009f63:	cmp    eax,ebx
   140009f65:	jne    0x140009f7c
   140009f67:	call   QWORD PTR [rip+0x1d303]        # 0x140027270
   140009f6d:	mov    ecx,eax
   140009f6f:	call   0x14000f5b4
   140009f74:	or     ebx,0xffffffff
   140009f77:	jmp    0x14000a146
   140009f7c:	test   BYTE PTR [rsp+0x50],r14b
   140009f81:	je     0x140009f92
   140009f83:	movzx  eax,WORD PTR [rdi+0x6]
   140009f87:	or     eax,0x124
   140009f8c:	mov    WORD PTR [rdi+0x6],ax
   140009f90:	jmp    0x140009f9f
   140009f92:	movzx  eax,WORD PTR [rdi+0x6]
   140009f96:	or     eax,0x1b6
   140009f9b:	mov    WORD PTR [rdi+0x6],ax
   140009f9f:	cmp    DWORD PTR [rsp+0x64],ebx
   140009fa3:	jne    0x140009fb1
   140009fa5:	cmp    DWORD PTR [rsp+0x68],ebx
   140009fa9:	jne    0x140009fb1
   140009fab:	mov    QWORD PTR [rdi+0x20],rbx
   140009faf:	jmp    0x14000a01f
   140009fb1:	lea    rdx,[rsp+0xe0]
   140009fb9:	lea    rcx,[rsp+0x64]
   140009fbe:	call   QWORD PTR [rip+0x1d344]        # 0x140027308
   140009fc4:	cmp    eax,ebx
   140009fc6:	je     0x14000a143
   140009fcc:	lea    rdx,[rsp+0x40]
   140009fd1:	lea    rcx,[rsp+0xe0]
   140009fd9:	call   QWORD PTR [rip+0x1d321]        # 0x140027300
   140009fdf:	cmp    eax,ebx
   140009fe1:	je     0x14000a143
   140009fe7:	movzx  eax,WORD PTR [rsp+0x4c]
   140009fec:	movzx  r10d,WORD PTR [rsp+0x4a]
   140009ff2:	movzx  r9d,WORD PTR [rsp+0x48]
   140009ff8:	movzx  r8d,WORD PTR [rsp+0x46]
   140009ffe:	movzx  edx,WORD PTR [rsp+0x42]
   14000a003:	movzx  ecx,WORD PTR [rsp+0x40]
   14000a008:	or     DWORD PTR [rsp+0x30],0xffffffff
   14000a00d:	mov    DWORD PTR [rsp+0x28],eax
   14000a011:	mov    DWORD PTR [rsp+0x20],r10d
   14000a016:	call   0x1400139b0
   14000a01b:	mov    QWORD PTR [rdi+0x20],rax
   14000a01f:	cmp    DWORD PTR [rsp+0x5c],ebx
   14000a023:	jne    0x14000a035
   14000a025:	cmp    DWORD PTR [rsp+0x60],ebx
   14000a029:	jne    0x14000a035
   14000a02b:	mov    rax,QWORD PTR [rdi+0x20]
   14000a02f:	mov    QWORD PTR [rdi+0x18],rax
   14000a033:	jmp    0x14000a0a3
   14000a035:	lea    rdx,[rsp+0xe0]
   14000a03d:	lea    rcx,[rsp+0x5c]
   14000a042:	call   QWORD PTR [rip+0x1d2c0]        # 0x140027308
   14000a048:	cmp    eax,ebx
   14000a04a:	je     0x14000a13e
   14000a050:	lea    rdx,[rsp+0x40]
   14000a055:	lea    rcx,[rsp+0xe0]
   14000a05d:	call   QWORD PTR [rip+0x1d29d]        # 0x140027300
   14000a063:	cmp    eax,ebx
   14000a065:	je     0x14000a13e
   14000a06b:	movzx  eax,WORD PTR [rsp+0x4c]
   14000a070:	movzx  r10d,WORD PTR [rsp+0x4a]
   14000a076:	movzx  r9d,WORD PTR [rsp+0x48]
   14000a07c:	movzx  r8d,WORD PTR [rsp+0x46]
   14000a082:	movzx  edx,WORD PTR [rsp+0x42]
   14000a087:	movzx  ecx,WORD PTR [rsp+0x40]
   14000a08c:	or     DWORD PTR [rsp+0x30],0xffffffff
   14000a091:	mov    DWORD PTR [rsp+0x28],eax
   14000a095:	mov    DWORD PTR [rsp+0x20],r10d
   14000a09a:	call   0x1400139b0
   14000a09f:	mov    QWORD PTR [rdi+0x18],rax
   14000a0a3:	cmp    DWORD PTR [rsp+0x54],ebx
   14000a0a7:	jne    0x14000a0b9
   14000a0a9:	cmp    DWORD PTR [rsp+0x58],ebx
   14000a0ad:	jne    0x14000a0b9
   14000a0af:	mov    rax,QWORD PTR [rdi+0x20]
   14000a0b3:	mov    QWORD PTR [rdi+0x28],rax
   14000a0b7:	jmp    0x14000a11f
   14000a0b9:	lea    rdx,[rsp+0xe0]
   14000a0c1:	lea    rcx,[rsp+0x54]
   14000a0c6:	call   QWORD PTR [rip+0x1d23c]        # 0x140027308
   14000a0cc:	cmp    eax,ebx
   14000a0ce:	je     0x14000a139
   14000a0d0:	lea    rdx,[rsp+0x40]
   14000a0d5:	lea    rcx,[rsp+0xe0]
   14000a0dd:	call   QWORD PTR [rip+0x1d21d]        # 0x140027300
   14000a0e3:	cmp    eax,ebx
   14000a0e5:	je     0x14000a139
   14000a0e7:	movzx  eax,WORD PTR [rsp+0x4c]
   14000a0ec:	movzx  r10d,WORD PTR [rsp+0x4a]
   14000a0f2:	movzx  r9d,WORD PTR [rsp+0x48]
   14000a0f8:	movzx  r8d,WORD PTR [rsp+0x46]
   14000a0fe:	movzx  edx,WORD PTR [rsp+0x42]
   14000a103:	movzx  ecx,WORD PTR [rsp+0x40]
   14000a108:	or     DWORD PTR [rsp+0x30],0xffffffff
   14000a10d:	mov    DWORD PTR [rsp+0x28],eax
   14000a111:	mov    DWORD PTR [rsp+0x20],r10d
   14000a116:	call   0x1400139b0
   14000a11b:	mov    QWORD PTR [rdi+0x28],rax
   14000a11f:	mov    eax,DWORD PTR [rsp+0x74]
   14000a123:	mov    DWORD PTR [rdi+0x14],eax
   14000a126:	movzx  eax,WORD PTR [rdi+0x6]
   14000a12a:	bts    eax,0xf
   14000a12e:	mov    WORD PTR [rdi+0x6],ax
   14000a132:	mov    DWORD PTR [rdi],ebx
   14000a134:	mov    DWORD PTR [rdi+0x10],ebx
   14000a137:	jmp    0x14000a146
   14000a139:	or     ebx,0xffffffff
   14000a13c:	jmp    0x14000a146
   14000a13e:	or     ebx,0xffffffff
   14000a141:	jmp    0x14000a146
   14000a143:	or     ebx,0xffffffff
   14000a146:	mov    ecx,esi
   14000a148:	call   0x140013674
   14000a14d:	mov    eax,ebx
   14000a14f:	jmp    0x14000a17a
   14000a151:	call   0x14000f594
   14000a156:	mov    DWORD PTR [rax],ebx
   14000a158:	call   0x14000f574
   14000a15d:	mov    DWORD PTR [rax],0x9
   14000a163:	mov    QWORD PTR [rsp+0x20],rbx
   14000a168:	xor    r9d,r9d
   14000a16b:	xor    r8d,r8d
   14000a16e:	xor    edx,edx
   14000a170:	xor    ecx,ecx
   14000a172:	call   0x14000e4d8
   14000a177:	or     eax,0xffffffff
   14000a17a:	add    rsp,0x90
   14000a181:	pop    r15
   14000a183:	pop    r14
   14000a185:	pop    r13
   14000a187:	pop    r12
   14000a189:	pop    rdi
   14000a18a:	pop    rsi
   14000a18b:	pop    rbx
   14000a18c:	ret    
   14000a18d:	int3   
   14000a18e:	int3   
   14000a18f:	int3   
   14000a190:	mov    rax,rsp
   14000a193:	mov    QWORD PTR [rax+0x10],rdx
   14000a197:	mov    QWORD PTR [rax+0x8],rcx
   14000a19b:	mov    QWORD PTR [rax+0x18],r8
   14000a19f:	mov    QWORD PTR [rax+0x20],r9
   14000a1a3:	push   rbx
   14000a1a4:	push   rsi
   14000a1a5:	push   rdi
   14000a1a6:	push   r12
   14000a1a8:	sub    rsp,0x38
   14000a1ac:	mov    rdi,rcx
   14000a1af:	xor    ebx,ebx
   14000a1b1:	mov    esi,ebx
   14000a1b3:	mov    eax,ebx
   14000a1b5:	cmp    rcx,rbx
   14000a1b8:	setne  al
   14000a1bb:	cmp    eax,ebx
   14000a1bd:	jne    0x14000a1e6
   14000a1bf:	call   0x14000f574
   14000a1c4:	mov    DWORD PTR [rax],0x16
   14000a1ca:	mov    QWORD PTR [rsp+0x20],rbx
   14000a1cf:	xor    r9d,r9d
   14000a1d2:	xor    r8d,r8d
   14000a1d5:	xor    edx,edx
   14000a1d7:	xor    ecx,ecx
   14000a1d9:	call   0x14000e4d8
   14000a1de:	or     eax,0xffffffff
   14000a1e1:	jmp    0x14000a2fb
   14000a1e6:	mov    eax,ebx
   14000a1e8:	cmp    rdx,rbx
   14000a1eb:	setne  al
   14000a1ee:	cmp    eax,ebx
   14000a1f0:	jne    0x14000a219
   14000a1f2:	call   0x14000f574
   14000a1f7:	mov    DWORD PTR [rax],0x16
   14000a1fd:	mov    QWORD PTR [rsp+0x20],rbx
   14000a202:	xor    r9d,r9d
   14000a205:	xor    r8d,r8d
   14000a208:	xor    edx,edx
   14000a20a:	xor    ecx,ecx
   14000a20c:	call   0x14000e4d8
   14000a211:	or     eax,0xffffffff
   14000a214:	jmp    0x14000a2fb
   14000a219:	lea    r12,[rsp+0x70]
   14000a21e:	call   0x14000a4c4
   14000a223:	nop
   14000a224:	test   BYTE PTR [rdi+0x18],0x40
   14000a228:	jne    0x14000a2c3
   14000a22e:	mov    rcx,rdi
   14000a231:	call   0x140014cfc
   14000a236:	cmp    eax,0xffffffff
   14000a239:	je     0x14000a265
   14000a23b:	cmp    eax,0xfffffffe
   14000a23e:	je     0x14000a265
   14000a240:	movsxd rdx,eax
   14000a243:	mov    rcx,rdx
   14000a246:	sar    rcx,0x5
   14000a24a:	lea    r8,[rip+0x2db0f]        # 0x140037d60
   14000a251:	and    edx,0x1f
   14000a254:	imul   rdx,rdx,0x58
   14000a258:	add    rdx,QWORD PTR [r8+rcx*8]
   14000a25c:	lea    rcx,[rip+0x2b25d]        # 0x1400354c0
   14000a263:	jmp    0x14000a276
   14000a265:	lea    rcx,[rip+0x2b254]        # 0x1400354c0
   14000a26c:	mov    rdx,rcx
   14000a26f:	lea    r8,[rip+0x2daea]        # 0x140037d60
   14000a276:	test   BYTE PTR [rdx+0x38],0x7f
   14000a27a:	jne    0x14000a2a1
   14000a27c:	cmp    eax,0xffffffff
   14000a27f:	je     0x14000a29b
   14000a281:	cmp    eax,0xfffffffe
   14000a284:	je     0x14000a29b
   14000a286:	movsxd rcx,eax
   14000a289:	mov    rax,rcx
   14000a28c:	sar    rax,0x5
   14000a290:	and    ecx,0x1f
   14000a293:	imul   rcx,rcx,0x58
   14000a297:	add    rcx,QWORD PTR [r8+rax*8]
   14000a29b:	test   BYTE PTR [rcx+0x38],0x80
   14000a29f:	je     0x14000a2c3
   14000a2a1:	call   0x14000f574
   14000a2a6:	mov    DWORD PTR [rax],0x16
   14000a2ac:	mov    QWORD PTR [rsp+0x20],rbx
   14000a2b1:	xor    r9d,r9d
   14000a2b4:	xor    r8d,r8d
   14000a2b7:	xor    edx,edx
   14000a2b9:	xor    ecx,ecx
   14000a2bb:	call   0x14000e4d8
   14000a2c0:	or     esi,0xffffffff
   14000a2c3:	cmp    esi,ebx
   14000a2c5:	jne    0x14000a2f1
   14000a2c7:	mov    rcx,rdi
   14000a2ca:	call   0x140013fc8
   14000a2cf:	mov    ebx,eax
   14000a2d1:	mov    r9,r12
   14000a2d4:	xor    r8d,r8d
   14000a2d7:	mov    rdx,QWORD PTR [rsp+0x68]
   14000a2dc:	mov    rcx,rdi
   14000a2df:	call   0x140014214
   14000a2e4:	mov    esi,eax
   14000a2e6:	mov    rdx,rdi
   14000a2e9:	mov    ecx,ebx
   14000a2eb:	call   0x14001409c
   14000a2f0:	nop
   14000a2f1:	mov    rcx,rdi
   14000a2f4:	call   0x14000a554
   14000a2f9:	mov    eax,esi
   14000a2fb:	add    rsp,0x38
   14000a2ff:	pop    r12
   14000a301:	pop    rdi
   14000a302:	pop    rsi
   14000a303:	pop    rbx
   14000a304:	ret    
   14000a305:	int3   
   14000a306:	int3   
   14000a307:	int3   
   14000a308:	mov    QWORD PTR [rsp+0x18],r8
   14000a30d:	mov    QWORD PTR [rsp+0x20],r9
   14000a312:	sub    rsp,0x28
   14000a316:	lea    r9,[rsp+0x48]
   14000a31b:	call   0x140014ec0
   14000a320:	add    rsp,0x28
   14000a324:	ret    
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	mov    QWORD PTR [rsp+0x18],r8
   14000a32d:	mov    QWORD PTR [rsp+0x20],r9
   14000a332:	sub    rsp,0x28
   14000a336:	lea    r9,[rsp+0x48]
   14000a33b:	call   0x140014ee4
   14000a340:	add    rsp,0x28
   14000a344:	ret    
   14000a345:	int3   
   14000a346:	int3   
   14000a347:	int3   
   14000a348:	mov    rax,rsp
   14000a34b:	mov    QWORD PTR [rax+0x10],rdx
   14000a34f:	mov    QWORD PTR [rax+0x18],r8
   14000a353:	mov    QWORD PTR [rax+0x20],r9
   14000a357:	sub    rsp,0x28
   14000a35b:	lea    r9,[rax+0x18]
   14000a35f:	xor    r8d,r8d
   14000a362:	call   0x140014ee4
   14000a367:	add    rsp,0x28
   14000a36b:	ret    
   14000a36c:	mov    QWORD PTR [rsp+0x18],r8
   14000a371:	mov    QWORD PTR [rsp+0x20],r9
   14000a376:	sub    rsp,0x28
   14000a37a:	lea    r9,[rsp+0x48]
   14000a37f:	call   0x140014f08
   14000a384:	add    rsp,0x28
   14000a388:	ret    
   14000a389:	int3   
   14000a38a:	int3   
   14000a38b:	int3   
   14000a38c:	mov    rax,rsp
   14000a38f:	mov    QWORD PTR [rax+0x10],rdx
   14000a393:	mov    QWORD PTR [rax+0x18],r8
   14000a397:	mov    QWORD PTR [rax+0x20],r9
   14000a39b:	sub    rsp,0x28
   14000a39f:	lea    r9,[rax+0x18]
   14000a3a3:	xor    r8d,r8d
   14000a3a6:	call   0x140014f08
   14000a3ab:	add    rsp,0x28
   14000a3af:	ret    
   14000a3b0:	lea    rax,[rip+0x29ef9]        # 0x1400342b0
   14000a3b7:	ret    
   14000a3b8:	rex push rbx
   14000a3ba:	sub    rsp,0x20
   14000a3be:	mov    eax,DWORD PTR [rip+0x2ebfc]        # 0x140038fc0
   14000a3c4:	mov    ebx,0x14
   14000a3c9:	test   eax,eax
   14000a3cb:	jne    0x14000a3d4
   14000a3cd:	mov    eax,0x200
   14000a3d2:	jmp    0x14000a3d9
   14000a3d4:	cmp    eax,ebx
   14000a3d6:	cmovl  eax,ebx
   14000a3d9:	movsxd rcx,eax
   14000a3dc:	mov    edx,0x8
   14000a3e1:	mov    DWORD PTR [rip+0x2ebd9],eax        # 0x140038fc0
   14000a3e7:	call   0x140012c6c
   14000a3ec:	mov    QWORD PTR [rip+0x2dbb5],rax        # 0x140037fa8
   14000a3f3:	test   rax,rax
   14000a3f6:	jne    0x14000a41c
   14000a3f8:	lea    edx,[rax+0x8]
   14000a3fb:	mov    rcx,rbx
   14000a3fe:	mov    DWORD PTR [rip+0x2ebbc],ebx        # 0x140038fc0
   14000a404:	call   0x140012c6c
   14000a409:	mov    QWORD PTR [rip+0x2db98],rax        # 0x140037fa8
   14000a410:	test   rax,rax
   14000a413:	jne    0x14000a41c
   14000a415:	mov    eax,0x1a
   14000a41a:	jmp    0x14000a494
   14000a41c:	xor    ecx,ecx
   14000a41e:	lea    rdx,[rip+0x29e8b]        # 0x1400342b0
   14000a425:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a429:	add    rdx,0x30
   14000a42d:	add    rcx,0x8
   14000a431:	sub    rbx,0x1
   14000a435:	je     0x14000a440
   14000a437:	mov    rax,QWORD PTR [rip+0x2db6a]        # 0x140037fa8
   14000a43e:	jmp    0x14000a425
   14000a440:	xor    r8d,r8d
   14000a443:	lea    rdx,[rip+0x29e82]        # 0x1400342cc
   14000a44a:	lea    r9d,[r8+0x3]
   14000a44e:	mov    rcx,r8
   14000a451:	lea    r10,[rip+0x2d908]        # 0x140037d60
   14000a458:	mov    rax,r8
   14000a45b:	sar    rax,0x5
   14000a45f:	and    ecx,0x1f
   14000a462:	mov    rax,QWORD PTR [r10+rax*8]
   14000a466:	imul   rcx,rcx,0x58
   14000a46a:	mov    r10,QWORD PTR [rcx+rax*1]
   14000a46e:	cmp    r10,0xffffffffffffffff
   14000a472:	je     0x14000a47f
   14000a474:	cmp    r10,0xfffffffffffffffe
   14000a478:	je     0x14000a47f
   14000a47a:	test   r10,r10
   14000a47d:	jne    0x14000a485
   14000a47f:	mov    DWORD PTR [rdx],0xfffffffe
   14000a485:	inc    r8
   14000a488:	add    rdx,0x30
   14000a48c:	sub    r9,0x1
   14000a490:	jne    0x14000a44e
   14000a492:	xor    eax,eax
   14000a494:	add    rsp,0x20
   14000a498:	pop    rbx
   14000a499:	ret    
   14000a49a:	int3   
   14000a49b:	int3   
   14000a49c:	sub    rsp,0x28
   14000a4a0:	call   0x140015244
   14000a4a5:	cmp    BYTE PTR [rip+0x2b48c],0x0        # 0x140035938
   14000a4ac:	je     0x14000a4b3
   14000a4ae:	call   0x140014f98
   14000a4b3:	mov    rcx,QWORD PTR [rip+0x2daee]        # 0x140037fa8
   14000a4ba:	add    rsp,0x28
   14000a4be:	jmp    0x1400098ac
   14000a4c3:	int3   
   14000a4c4:	rex push rbx
   14000a4c6:	sub    rsp,0x20
   14000a4ca:	mov    rbx,rcx
   14000a4cd:	lea    rcx,[rip+0x29ddc]        # 0x1400342b0
   14000a4d4:	cmp    rbx,rcx
   14000a4d7:	jb     0x14000a513
   14000a4d9:	lea    rax,[rip+0x2a160]        # 0x140034640
   14000a4e0:	cmp    rbx,rax
   14000a4e3:	ja     0x14000a513
   14000a4e5:	mov    rdx,rbx
   14000a4e8:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a4f2:	sub    rdx,rcx
   14000a4f5:	imul   rdx
   14000a4f8:	sar    rdx,0x3
   14000a4fc:	mov    rcx,rdx
   14000a4ff:	shr    rcx,0x3f
   14000a503:	lea    ecx,[rcx+rdx*1+0x10]
   14000a507:	call   0x1400133a8
   14000a50c:	bts    DWORD PTR [rbx+0x18],0xf
   14000a511:	jmp    0x14000a51d
   14000a513:	lea    rcx,[rbx+0x30]
   14000a517:	call   QWORD PTR [rip+0x1ce0b]        # 0x140027328
   14000a51d:	add    rsp,0x20
   14000a521:	pop    rbx
   14000a522:	ret    
   14000a523:	int3   
   14000a524:	rex push rbx
   14000a526:	sub    rsp,0x20
   14000a52a:	cmp    ecx,0x14
   14000a52d:	mov    rbx,rdx
   14000a530:	jge    0x14000a541
   14000a532:	add    ecx,0x10
   14000a535:	call   0x1400133a8
   14000a53a:	bts    DWORD PTR [rbx+0x18],0xf
   14000a53f:	jmp    0x14000a54b
   14000a541:	lea    rcx,[rdx+0x30]
   14000a545:	call   QWORD PTR [rip+0x1cddd]        # 0x140027328
   14000a54b:	add    rsp,0x20
   14000a54f:	pop    rbx
   14000a550:	ret    
   14000a551:	int3   
   14000a552:	int3   
   14000a553:	int3   
   14000a554:	sub    rsp,0x28
   14000a558:	lea    rdx,[rip+0x29d51]        # 0x1400342b0
   14000a55f:	cmp    rcx,rdx
   14000a562:	jb     0x14000a59b
   14000a564:	lea    rax,[rip+0x2a0d5]        # 0x140034640
   14000a56b:	cmp    rcx,rax
   14000a56e:	ja     0x14000a59b
   14000a570:	btr    DWORD PTR [rcx+0x18],0xf
   14000a575:	sub    rcx,rdx
   14000a578:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a582:	imul   rcx
   14000a585:	sar    rdx,0x3
   14000a589:	mov    rcx,rdx
   14000a58c:	shr    rcx,0x3f
   14000a590:	lea    ecx,[rcx+rdx*1+0x10]
   14000a594:	call   0x140013288
   14000a599:	jmp    0x14000a5a5
   14000a59b:	add    rcx,0x30
   14000a59f:	call   QWORD PTR [rip+0x1cd8b]        # 0x140027330
   14000a5a5:	add    rsp,0x28
   14000a5a9:	ret    
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	sub    rsp,0x28
   14000a5b0:	cmp    ecx,0x14
   14000a5b3:	jge    0x14000a5c4
   14000a5b5:	btr    DWORD PTR [rdx+0x18],0xf
   14000a5ba:	add    ecx,0x10
   14000a5bd:	call   0x140013288
   14000a5c2:	jmp    0x14000a5ce
   14000a5c4:	lea    rcx,[rdx+0x30]
   14000a5c8:	call   QWORD PTR [rip+0x1cd62]        # 0x140027330
   14000a5ce:	add    rsp,0x28
   14000a5d2:	ret    
   14000a5d3:	int3   
   14000a5d4:	int3   
   14000a5d5:	int3   
   14000a5d6:	int3   
   14000a5d7:	int3   
   14000a5d8:	int3   
   14000a5d9:	int3   
   14000a5da:	int3   
   14000a5db:	int3   
   14000a5dc:	int3   
   14000a5dd:	int3   
   14000a5de:	int3   
   14000a5df:	int3   
   14000a5e0:	mov    QWORD PTR [rsp+0x18],r8
   14000a5e5:	mov    QWORD PTR [rsp+0x20],r9
   14000a5ea:	push   rbx
   14000a5eb:	push   rdi
   14000a5ec:	sub    rsp,0x68
   14000a5f0:	mov    rax,r8
   14000a5f3:	mov    rdi,rcx
   14000a5f6:	test   r8,r8
   14000a5f9:	jne    0x14000a620
   14000a5fb:	call   0x14000f574
   14000a600:	and    QWORD PTR [rsp+0x20],0x0
   14000a606:	xor    r9d,r9d
   14000a609:	xor    r8d,r8d
   14000a60c:	xor    edx,edx
   14000a60e:	xor    ecx,ecx
   14000a610:	mov    DWORD PTR [rax],0x16
   14000a616:	call   0x14000e4d8
   14000a61b:	or     eax,0xffffffff
   14000a61e:	jmp    0x14000a689
   14000a620:	test   rdx,rdx
   14000a623:	je     0x14000a62a
   14000a625:	test   rcx,rcx
   14000a628:	je     0x14000a5fb
   14000a62a:	mov    ecx,0x7fffffff
   14000a62f:	lea    r9,[rsp+0x98]
   14000a637:	mov    DWORD PTR [rsp+0x48],0x42
   14000a63f:	cmp    rdx,rcx
   14000a642:	mov    QWORD PTR [rsp+0x40],rdi
   14000a647:	mov    QWORD PTR [rsp+0x30],rdi
   14000a64c:	cmova  edx,ecx
   14000a64f:	lea    rcx,[rsp+0x30]
   14000a654:	xor    r8d,r8d
   14000a657:	mov    DWORD PTR [rsp+0x38],edx
   14000a65b:	mov    rdx,rax
   14000a65e:	call   0x140014214
   14000a663:	mov    ebx,eax
   14000a665:	test   rdi,rdi
   14000a668:	je     0x14000a689
   14000a66a:	sub    DWORD PTR [rsp+0x38],0x1
   14000a66f:	js     0x14000a67b
   14000a671:	mov    rax,QWORD PTR [rsp+0x30]
   14000a676:	mov    BYTE PTR [rax],0x0
   14000a679:	jmp    0x14000a687
   14000a67b:	lea    rdx,[rsp+0x30]
   14000a680:	xor    ecx,ecx
   14000a682:	call   0x140015250
   14000a687:	mov    eax,ebx
   14000a689:	add    rsp,0x68
   14000a68d:	pop    rdi
   14000a68e:	pop    rbx
   14000a68f:	ret    
   14000a690:	mov    QWORD PTR [rsp+0x20],r9
   14000a695:	sub    rsp,0x38
   14000a699:	lea    rax,[rsp+0x60]
   14000a69e:	mov    QWORD PTR [rsp+0x20],rax
   14000a6a3:	call   0x14000a84c
   14000a6a8:	add    rsp,0x38
   14000a6ac:	ret    
   14000a6ad:	int3   
   14000a6ae:	int3   
   14000a6af:	int3   
   14000a6b0:	int3   
   14000a6b1:	int3   
   14000a6b2:	int3   
   14000a6b3:	int3   
   14000a6b4:	int3   
   14000a6b5:	int3   
   14000a6b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6c0:	mov    r11,rcx
   14000a6c3:	or     r8,r8
   14000a6c6:	je     0x14000a6ec
   14000a6c8:	sub    rcx,rdx
   14000a6cb:	test   dl,0x7
   14000a6ce:	je     0x14000a6f8
   14000a6d0:	mov    al,BYTE PTR [rdx]
   14000a6d2:	test   al,al
   14000a6d4:	mov    BYTE PTR [rcx+rdx*1],al
   14000a6d7:	je     0x14000a7c0
   14000a6dd:	inc    rdx
   14000a6e0:	dec    r8
   14000a6e3:	je     0x14000a6ec
   14000a6e5:	test   dl,0x7
   14000a6e8:	jne    0x14000a6d0
   14000a6ea:	jmp    0x14000a6f8
   14000a6ec:	mov    rax,r11
   14000a6ef:	ret    
   14000a6f0:	mov    QWORD PTR [rcx+rdx*1],rax
   14000a6f4:	add    rdx,0x8
   14000a6f8:	mov    rax,QWORD PTR [rdx]
   14000a6fb:	sub    r8,0x8
   14000a6ff:	jb     0x14000a727
   14000a701:	movabs r9,0x7efefefefefefeff
   14000a70b:	add    r9,rax
   14000a70e:	mov    r10,rax
   14000a711:	xor    r10,0xffffffffffffffff
   14000a715:	xor    r10,r9
   14000a718:	movabs r9,0x8101010101010100
   14000a722:	test   r9,r10
   14000a725:	je     0x14000a6f0
   14000a727:	add    r8,0x8
   14000a72b:	je     0x14000a7bc
   14000a731:	test   al,al
   14000a733:	mov    BYTE PTR [rcx+rdx*1],al
   14000a736:	je     0x14000a7c0
   14000a73c:	inc    rdx
   14000a73f:	dec    r8
   14000a742:	je     0x14000a7bc
   14000a744:	test   ah,ah
   14000a746:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a749:	je     0x14000a7c0
   14000a74b:	inc    rdx
   14000a74e:	dec    r8
   14000a751:	je     0x14000a7bc
   14000a753:	shr    rax,0x10
   14000a757:	test   al,al
   14000a759:	mov    BYTE PTR [rcx+rdx*1],al
   14000a75c:	je     0x14000a7c0
   14000a75e:	inc    rdx
   14000a761:	dec    r8
   14000a764:	je     0x14000a7bc
   14000a766:	test   ah,ah
   14000a768:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a76b:	je     0x14000a7c0
   14000a76d:	inc    rdx
   14000a770:	dec    r8
   14000a773:	je     0x14000a7bc
   14000a775:	shr    rax,0x10
   14000a779:	test   al,al
   14000a77b:	mov    BYTE PTR [rcx+rdx*1],al
   14000a77e:	je     0x14000a7c0
   14000a780:	inc    rdx
   14000a783:	dec    r8
   14000a786:	je     0x14000a7bc
   14000a788:	test   ah,ah
   14000a78a:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a78d:	je     0x14000a7c0
   14000a78f:	inc    rdx
   14000a792:	dec    r8
   14000a795:	je     0x14000a7bc
   14000a797:	shr    eax,0x10
   14000a79a:	test   al,al
   14000a79c:	mov    BYTE PTR [rcx+rdx*1],al
   14000a79f:	je     0x14000a7c0
   14000a7a1:	inc    rdx
   14000a7a4:	dec    r8
   14000a7a7:	je     0x14000a7bc
   14000a7a9:	test   ah,ah
   14000a7ab:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7ae:	je     0x14000a7c0
   14000a7b0:	inc    rdx
   14000a7b3:	dec    r8
   14000a7b6:	jne    0x14000a6f8
   14000a7bc:	mov    rax,r11
   14000a7bf:	ret    
   14000a7c0:	add    rcx,rdx
   14000a7c3:	xor    rdx,rdx
   14000a7c6:	cmp    r8,0x10
   14000a7ca:	jb     0x14000a811
   14000a7cc:	test   cl,0x7
   14000a7cf:	je     0x14000a7db
   14000a7d1:	inc    rcx
   14000a7d4:	mov    BYTE PTR [rcx],dl
   14000a7d6:	dec    r8
   14000a7d9:	jmp    0x14000a7cc
   14000a7db:	sub    r8,0x20
   14000a7df:	jb     0x14000a7fa
   14000a7e1:	mov    QWORD PTR [rcx],rdx
   14000a7e4:	mov    QWORD PTR [rcx+0x8],rdx
   14000a7e8:	mov    QWORD PTR [rcx+0x10],rdx
   14000a7ec:	mov    QWORD PTR [rcx+0x18],rdx
   14000a7f0:	add    rcx,0x20
   14000a7f4:	sub    r8,0x20
   14000a7f8:	jae    0x14000a7e1
   14000a7fa:	add    r8,0x20
   14000a7fe:	sub    r8,0x8
   14000a802:	jb     0x14000a80d
   14000a804:	mov    QWORD PTR [rcx],rdx
   14000a807:	add    rcx,0x8
   14000a80b:	jmp    0x14000a7fe
   14000a80d:	add    r8,0x8
   14000a811:	sub    r8,0x1
   14000a815:	jb     0x14000a81e
   14000a817:	mov    BYTE PTR [rcx],dl
   14000a819:	inc    rcx
   14000a81c:	jmp    0x14000a811
   14000a81e:	mov    rax,r11
   14000a821:	ret    
   14000a822:	int3   
   14000a823:	int3   
   14000a824:	mov    r9,rcx
   14000a827:	xor    r8d,r8d
   14000a82a:	mov    al,BYTE PTR [rcx]
   14000a82c:	inc    rcx
   14000a82f:	cmp    al,r8b
   14000a832:	jne    0x14000a82a
   14000a834:	dec    rcx
   14000a837:	cmp    rcx,r9
   14000a83a:	je     0x14000a840
   14000a83c:	cmp    BYTE PTR [rcx],dl
   14000a83e:	jne    0x14000a834
   14000a840:	cmp    BYTE PTR [rcx],dl
   14000a842:	cmove  r8,rcx
   14000a846:	mov    rax,r8
   14000a849:	ret    
   14000a84a:	int3   
   14000a84b:	int3   
   14000a84c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a851:	push   rdi
   14000a852:	sub    rsp,0x60
   14000a856:	mov    r10,r9
   14000a859:	mov    rax,r8
   14000a85c:	mov    rdi,rcx
   14000a85f:	test   r8,r8
   14000a862:	jne    0x14000a889
   14000a864:	call   0x14000f574
   14000a869:	and    QWORD PTR [rsp+0x20],0x0
   14000a86f:	xor    r9d,r9d
   14000a872:	xor    r8d,r8d
   14000a875:	xor    edx,edx
   14000a877:	xor    ecx,ecx
   14000a879:	mov    DWORD PTR [rax],0x16
   14000a87f:	call   0x14000e4d8
   14000a884:	or     eax,0xffffffff
   14000a887:	jmp    0x14000a8f2
   14000a889:	test   rdx,rdx
   14000a88c:	je     0x14000a893
   14000a88e:	test   rcx,rcx
   14000a891:	je     0x14000a864
   14000a893:	mov    r9,QWORD PTR [rsp+0x90]
   14000a89b:	mov    ecx,0x7fffffff
   14000a8a0:	mov    r8,r10
   14000a8a3:	cmp    rdx,rcx
   14000a8a6:	mov    DWORD PTR [rsp+0x48],0x42
   14000a8ae:	mov    QWORD PTR [rsp+0x40],rdi
   14000a8b3:	cmova  edx,ecx
   14000a8b6:	lea    rcx,[rsp+0x30]
   14000a8bb:	mov    QWORD PTR [rsp+0x30],rdi
   14000a8c0:	mov    DWORD PTR [rsp+0x38],edx
   14000a8c4:	mov    rdx,rax
   14000a8c7:	call   0x140014214
   14000a8cc:	mov    ebx,eax
   14000a8ce:	test   rdi,rdi
   14000a8d1:	je     0x14000a8f2
   14000a8d3:	sub    DWORD PTR [rsp+0x38],0x1
   14000a8d8:	js     0x14000a8e4
   14000a8da:	mov    rax,QWORD PTR [rsp+0x30]
   14000a8df:	mov    BYTE PTR [rax],0x0
   14000a8e2:	jmp    0x14000a8f0
   14000a8e4:	lea    rdx,[rsp+0x30]
   14000a8e9:	xor    ecx,ecx
   14000a8eb:	call   0x140015250
   14000a8f0:	mov    eax,ebx
   14000a8f2:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a8f7:	add    rsp,0x60
   14000a8fb:	pop    rdi
   14000a8fc:	ret    
   14000a8fd:	int3   
   14000a8fe:	int3   
   14000a8ff:	int3   
   14000a900:	sub    rsp,0x38
   14000a904:	mov    QWORD PTR [rsp+0x20],r9
   14000a909:	xor    r9d,r9d
   14000a90c:	call   0x14000a84c
   14000a911:	add    rsp,0x38
   14000a915:	ret    
   14000a916:	int3   
   14000a917:	int3   
   14000a918:	mov    QWORD PTR [rsp+0x8],rbx
   14000a91d:	mov    QWORD PTR [rsp+0x10],rbp
   14000a922:	mov    QWORD PTR [rsp+0x18],rsi
   14000a927:	push   rdi
   14000a928:	sub    rsp,0x60
   14000a92c:	mov    rbp,rcx
   14000a92f:	mov    rcx,rdx
   14000a932:	mov    rsi,r9
   14000a935:	mov    rbx,r8
   14000a938:	mov    rdi,rdx
   14000a93b:	call   0x140012e10
   14000a940:	test   rdi,rdi
   14000a943:	jne    0x14000a96a
   14000a945:	call   0x14000f574
   14000a94a:	and    QWORD PTR [rsp+0x20],0x0
   14000a950:	xor    r9d,r9d
   14000a953:	xor    r8d,r8d
   14000a956:	xor    edx,edx
   14000a958:	xor    ecx,ecx
   14000a95a:	mov    DWORD PTR [rax],0x16
   14000a960:	call   0x14000e4d8
   14000a965:	or     eax,0xffffffff
   14000a968:	jmp    0x14000a9a5
   14000a96a:	test   rbx,rbx
   14000a96d:	je     0x14000a945
   14000a96f:	mov    r9,QWORD PTR [rsp+0x90]
   14000a977:	mov    ecx,0x7fffffff
   14000a97c:	mov    r8,rsi
   14000a97f:	cmp    rax,rcx
   14000a982:	mov    rdx,rbx
   14000a985:	mov    DWORD PTR [rsp+0x48],0x49
   14000a98d:	cmova  eax,ecx
   14000a990:	lea    rcx,[rsp+0x30]
   14000a995:	mov    QWORD PTR [rsp+0x40],rdi
   14000a99a:	mov    QWORD PTR [rsp+0x30],rdi
   14000a99f:	mov    DWORD PTR [rsp+0x38],eax
   14000a9a3:	call   rbp
   14000a9a5:	lea    r11,[rsp+0x60]
   14000a9aa:	mov    rbx,QWORD PTR [r11+0x10]
   14000a9ae:	mov    rbp,QWORD PTR [r11+0x18]
   14000a9b2:	mov    rsi,QWORD PTR [r11+0x20]
   14000a9b6:	mov    rsp,r11
   14000a9b9:	pop    rdi
   14000a9ba:	ret    
   14000a9bb:	int3   
   14000a9bc:	mov    r11,rsp
   14000a9bf:	mov    QWORD PTR [r11+0x10],rdx
   14000a9c3:	mov    QWORD PTR [r11+0x18],r8
   14000a9c7:	mov    QWORD PTR [r11+0x20],r9
   14000a9cb:	sub    rsp,0x38
   14000a9cf:	mov    r8,rdx
   14000a9d2:	lea    rax,[r11+0x18]
   14000a9d6:	mov    rdx,rcx
   14000a9d9:	lea    rcx,[rip+0xab4c]        # 0x14001552c
   14000a9e0:	xor    r9d,r9d
   14000a9e3:	mov    QWORD PTR [r11-0x18],rax
   14000a9e7:	call   0x14000a918
   14000a9ec:	add    rsp,0x38
   14000a9f0:	ret    
   14000a9f1:	int3   
   14000a9f2:	int3   
   14000a9f3:	int3   
   14000a9f4:	mov    r11,rsp
   14000a9f7:	mov    QWORD PTR [r11+0x18],r8
   14000a9fb:	mov    QWORD PTR [r11+0x20],r9
   14000a9ff:	sub    rsp,0x38
   14000aa03:	mov    r9,r8
   14000aa06:	mov    r8,rdx
   14000aa09:	lea    rax,[r11+0x20]
   14000aa0d:	mov    rdx,rcx
   14000aa10:	lea    rcx,[rip+0xab15]        # 0x14001552c
   14000aa17:	mov    QWORD PTR [r11-0x18],rax
   14000aa1b:	call   0x14000a918
   14000aa20:	add    rsp,0x38
   14000aa24:	ret    
   14000aa25:	int3   
   14000aa26:	int3   
   14000aa27:	int3   
   14000aa28:	mov    r11,rsp
   14000aa2b:	mov    QWORD PTR [r11+0x10],rdx
   14000aa2f:	mov    QWORD PTR [r11+0x18],r8
   14000aa33:	mov    QWORD PTR [r11+0x20],r9
   14000aa37:	sub    rsp,0x38
   14000aa3b:	mov    r8,rdx
   14000aa3e:	lea    rax,[r11+0x18]
   14000aa42:	mov    rdx,rcx
   14000aa45:	lea    rcx,[rip+0xbda0]        # 0x1400167ec
   14000aa4c:	xor    r9d,r9d
   14000aa4f:	mov    QWORD PTR [r11-0x18],rax
   14000aa53:	call   0x14000a918
   14000aa58:	add    rsp,0x38
   14000aa5c:	ret    
   14000aa5d:	int3   
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	mov    r11,rsp
   14000aa63:	mov    QWORD PTR [r11+0x18],r8
   14000aa67:	mov    QWORD PTR [r11+0x20],r9
   14000aa6b:	sub    rsp,0x38
   14000aa6f:	mov    r9,r8
   14000aa72:	mov    r8,rdx
   14000aa75:	lea    rax,[r11+0x20]
   14000aa79:	mov    rdx,rcx
   14000aa7c:	lea    rcx,[rip+0xbd69]        # 0x1400167ec
   14000aa83:	mov    QWORD PTR [r11-0x18],rax
   14000aa87:	call   0x14000a918
   14000aa8c:	add    rsp,0x38
   14000aa90:	ret    
   14000aa91:	int3   
   14000aa92:	int3   
   14000aa93:	int3   
   14000aa94:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa99:	push   rdi
   14000aa9a:	sub    rsp,0x30
   14000aa9e:	or     edi,0xffffffff
   14000aaa1:	mov    rbx,rcx
   14000aaa4:	test   rcx,rcx
   14000aaa7:	jne    0x14000aacc
   14000aaa9:	call   0x14000f574
   14000aaae:	and    QWORD PTR [rsp+0x20],rbx
   14000aab3:	xor    r9d,r9d
   14000aab6:	xor    r8d,r8d
   14000aab9:	xor    edx,edx
   14000aabb:	xor    ecx,ecx
   14000aabd:	mov    DWORD PTR [rax],0x16
   14000aac3:	call   0x14000e4d8
   14000aac8:	or     eax,edi
   14000aaca:	jmp    0x14000ab12
   14000aacc:	test   BYTE PTR [rcx+0x18],0x83
   14000aad0:	je     0x14000ab0c
   14000aad2:	call   0x140015048
   14000aad7:	mov    rcx,rbx
   14000aada:	mov    edi,eax
   14000aadc:	call   0x140017cbc
   14000aae1:	mov    rcx,rbx
   14000aae4:	call   0x140014cfc
   14000aae9:	mov    ecx,eax
   14000aaeb:	call   0x140017ba4
   14000aaf0:	test   eax,eax
   14000aaf2:	jns    0x14000aaf9
   14000aaf4:	or     edi,0xffffffff
   14000aaf7:	jmp    0x14000ab0c
   14000aaf9:	mov    rcx,QWORD PTR [rbx+0x28]
   14000aafd:	test   rcx,rcx
   14000ab00:	je     0x14000ab0c
   14000ab02:	call   0x1400098ac
   14000ab07:	and    QWORD PTR [rbx+0x28],0x0
   14000ab0c:	and    DWORD PTR [rbx+0x18],0x0
   14000ab10:	mov    eax,edi
   14000ab12:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab17:	add    rsp,0x30
   14000ab1b:	pop    rdi
   14000ab1c:	ret    
   14000ab1d:	int3   
   14000ab1e:	int3   
   14000ab1f:	int3   
   14000ab20:	mov    QWORD PTR [rsp+0x10],rbx
   14000ab25:	mov    QWORD PTR [rsp+0x8],rcx
   14000ab2a:	push   rdi
   14000ab2b:	sub    rsp,0x30
   14000ab2f:	mov    rbx,rcx
   14000ab32:	or     edi,0xffffffff
   14000ab35:	xor    eax,eax
   14000ab37:	test   rcx,rcx
   14000ab3a:	setne  al
   14000ab3d:	test   eax,eax
   14000ab3f:	jne    0x14000ab65
   14000ab41:	call   0x14000f574
   14000ab46:	mov    DWORD PTR [rax],0x16
   14000ab4c:	and    QWORD PTR [rsp+0x20],0x0
   14000ab52:	xor    r9d,r9d
   14000ab55:	xor    r8d,r8d
   14000ab58:	xor    edx,edx
   14000ab5a:	xor    ecx,ecx
   14000ab5c:	call   0x14000e4d8
   14000ab61:	mov    eax,edi
   14000ab63:	jmp    0x14000ab8b
   14000ab65:	test   BYTE PTR [rcx+0x18],0x40
   14000ab69:	je     0x14000ab71
   14000ab6b:	and    DWORD PTR [rcx+0x18],0x0
   14000ab6f:	jmp    0x14000ab89
   14000ab71:	call   0x14000a4c4
   14000ab76:	nop
   14000ab77:	mov    rcx,rbx
   14000ab7a:	call   0x14000aa94
   14000ab7f:	mov    edi,eax
   14000ab81:	mov    rcx,rbx
   14000ab84:	call   0x14000a554
   14000ab89:	mov    eax,edi
   14000ab8b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ab90:	add    rsp,0x30
   14000ab94:	pop    rdi
   14000ab95:	ret    
   14000ab96:	int3   
   14000ab97:	int3   
   14000ab98:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab9d:	mov    QWORD PTR [rsp+0x18],rbp
   14000aba2:	mov    QWORD PTR [rsp+0x20],rsi
   14000aba7:	push   rdi
   14000aba8:	push   r12
   14000abaa:	push   r13
   14000abac:	push   r14
   14000abae:	push   r15
   14000abb0:	sub    rsp,0x30
   14000abb4:	mov    rsi,r9
   14000abb7:	mov    r15,r8
   14000abba:	mov    r12,rdx
   14000abbd:	mov    r14,rcx
   14000abc0:	test   rdx,rdx
   14000abc3:	je     0x14000abef
   14000abc5:	test   r8,r8
   14000abc8:	je     0x14000abef
   14000abca:	test   r9,r9
   14000abcd:	jne    0x14000ac0e
   14000abcf:	call   0x14000f574
   14000abd4:	and    QWORD PTR [rsp+0x20],0x0
   14000abda:	xor    r9d,r9d
   14000abdd:	xor    r8d,r8d
   14000abe0:	xor    edx,edx
   14000abe2:	xor    ecx,ecx
   14000abe4:	mov    DWORD PTR [rax],0x16
   14000abea:	call   0x14000e4d8
   14000abef:	xor    eax,eax
   14000abf1:	mov    rbx,QWORD PTR [rsp+0x60]
   14000abf6:	mov    rbp,QWORD PTR [rsp+0x70]
   14000abfb:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ac00:	add    rsp,0x30
   14000ac04:	pop    r15
   14000ac06:	pop    r14
   14000ac08:	pop    r13
   14000ac0a:	pop    r12
   14000ac0c:	pop    rdi
   14000ac0d:	ret    
   14000ac0e:	test   rcx,rcx
   14000ac11:	je     0x14000abcf
   14000ac13:	xor    edx,edx
   14000ac15:	or     rax,0xffffffffffffffff
   14000ac19:	div    r12
   14000ac1c:	cmp    r8,rax
   14000ac1f:	ja     0x14000abcf
   14000ac21:	mov    rdi,r12
   14000ac24:	imul   rdi,r15
   14000ac28:	test   DWORD PTR [r9+0x18],0x10c
   14000ac30:	mov    rbp,rdi
   14000ac33:	je     0x14000ac3b
   14000ac35:	mov    r13d,DWORD PTR [r9+0x24]
   14000ac39:	jmp    0x14000ac41
   14000ac3b:	mov    r13d,0x1000
   14000ac41:	test   rdi,rdi
   14000ac44:	je     0x14000ad2a
   14000ac4a:	mov    eax,DWORD PTR [rsi+0x18]
   14000ac4d:	and    eax,0x108
   14000ac52:	je     0x14000ac90
   14000ac54:	mov    ecx,DWORD PTR [rsi+0x8]
   14000ac57:	test   ecx,ecx
   14000ac59:	je     0x14000ac90
   14000ac5b:	js     0x14000ace8
   14000ac61:	cmp    rbp,rcx
   14000ac64:	mov    rdx,r14
   14000ac67:	cmovb  ecx,ebp
   14000ac6a:	mov    DWORD PTR [rsp+0x68],ecx
   14000ac6e:	mov    ebx,ecx
   14000ac70:	mov    r8d,ecx
   14000ac73:	mov    rcx,QWORD PTR [rsi]
   14000ac76:	call   0x140008b00
   14000ac7b:	mov    eax,DWORD PTR [rsp+0x68]
   14000ac7f:	add    QWORD PTR [rsi],rbx
   14000ac82:	sub    DWORD PTR [rsi+0x8],eax
   14000ac85:	sub    rbp,rbx
   14000ac88:	add    r14,rbx
   14000ac8b:	jmp    0x14000ad22
   14000ac90:	mov    ebx,r13d
   14000ac93:	cmp    rbp,rbx
   14000ac96:	jb     0x14000acfc
   14000ac98:	test   eax,eax
   14000ac9a:	je     0x14000aca8
   14000ac9c:	mov    rcx,rsi
   14000ac9f:	call   0x140015048
   14000aca4:	test   eax,eax
   14000aca6:	jne    0x14000acec
   14000aca8:	test   r13d,r13d
   14000acab:	je     0x14000acbb
   14000acad:	xor    edx,edx
   14000acaf:	mov    rax,rbp
   14000acb2:	div    rbx
   14000acb5:	mov    ebx,ebp
   14000acb7:	sub    ebx,edx
   14000acb9:	jmp    0x14000acbd
   14000acbb:	mov    ebx,ebp
   14000acbd:	mov    rcx,rsi
   14000acc0:	call   0x140014cfc
   14000acc5:	mov    r8d,ebx
   14000acc8:	mov    rdx,r14
   14000accb:	mov    ecx,eax
   14000accd:	call   0x140018454
   14000acd2:	cmp    eax,0xffffffff
   14000acd5:	je     0x14000ace8
   14000acd7:	mov    ecx,eax
   14000acd9:	cmp    eax,ebx
   14000acdb:	cmova  ecx,ebx
   14000acde:	sub    rbp,rcx
   14000ace1:	add    r14,rcx
   14000ace4:	cmp    eax,ebx
   14000ace6:	jae    0x14000ad22
   14000ace8:	or     DWORD PTR [rsi+0x18],0x20
   14000acec:	sub    rdi,rbp
   14000acef:	xor    edx,edx
   14000acf1:	mov    rax,rdi
   14000acf4:	div    r12
   14000acf7:	jmp    0x14000abf1
   14000acfc:	movsx  ecx,BYTE PTR [r14]
   14000ad00:	mov    rdx,rsi
   14000ad03:	call   0x140015250
   14000ad08:	cmp    eax,0xffffffff
   14000ad0b:	je     0x14000acec
   14000ad0d:	inc    r14
   14000ad10:	dec    rbp
   14000ad13:	cmp    DWORD PTR [rsi+0x24],0x0
   14000ad17:	mov    r13d,0x1
   14000ad1d:	cmovg  r13d,DWORD PTR [rsi+0x24]
   14000ad22:	test   rbp,rbp
   14000ad25:	jmp    0x14000ac44
   14000ad2a:	mov    rax,r15
   14000ad2d:	jmp    0x14000abf1
   14000ad32:	int3   
   14000ad33:	int3   
   14000ad34:	mov    rax,rsp
   14000ad37:	mov    QWORD PTR [rax+0x8],rbx
   14000ad3b:	mov    QWORD PTR [rax+0x10],rsi
   14000ad3f:	mov    QWORD PTR [rax+0x18],rdi
   14000ad43:	mov    QWORD PTR [rax+0x20],r9
   14000ad47:	push   r12
   14000ad49:	sub    rsp,0x30
   14000ad4d:	mov    rbx,r9
   14000ad50:	mov    rdi,r8
   14000ad53:	mov    rsi,rdx
   14000ad56:	mov    r12,rcx
   14000ad59:	test   rdx,rdx
   14000ad5c:	je     0x14000adbd
   14000ad5e:	test   r8,r8
   14000ad61:	je     0x14000adbd
   14000ad63:	xor    eax,eax
   14000ad65:	test   rbx,rbx
   14000ad68:	setne  al
   14000ad6b:	test   eax,eax
   14000ad6d:	jne    0x14000ad93
   14000ad6f:	call   0x14000f574
   14000ad74:	mov    DWORD PTR [rax],0x16
   14000ad7a:	and    QWORD PTR [rsp+0x20],0x0
   14000ad80:	xor    r9d,r9d
   14000ad83:	xor    r8d,r8d
   14000ad86:	xor    edx,edx
   14000ad88:	xor    ecx,ecx
   14000ad8a:	call   0x14000e4d8
   14000ad8f:	xor    eax,eax
   14000ad91:	jmp    0x14000adbf
   14000ad93:	mov    rcx,rbx
   14000ad96:	call   0x14000a4c4
   14000ad9b:	nop
   14000ad9c:	mov    r9,rbx
   14000ad9f:	mov    r8,rdi
   14000ada2:	mov    rdx,rsi
   14000ada5:	mov    rcx,r12
   14000ada8:	call   0x14000ab98
   14000adad:	mov    rdi,rax
   14000adb0:	mov    rcx,rbx
   14000adb3:	call   0x14000a554
   14000adb8:	mov    rax,rdi
   14000adbb:	jmp    0x14000adbf
   14000adbd:	xor    eax,eax
   14000adbf:	mov    rbx,QWORD PTR [rsp+0x40]
   14000adc4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000adc9:	mov    rdi,QWORD PTR [rsp+0x50]
   14000adce:	add    rsp,0x30
   14000add2:	pop    r12
   14000add4:	ret    
   14000add5:	int3   
   14000add6:	int3   
   14000add7:	int3   
   14000add8:	test   rcx,rcx
   14000addb:	je     0x14000ade3
   14000addd:	mov    DWORD PTR [rcx],edx
   14000addf:	add    rcx,0x10
   14000ade3:	mov    rax,rcx
   14000ade6:	ret    
   14000ade7:	int3   
   14000ade8:	sub    rsp,0x28
   14000adec:	test   rcx,rcx
   14000adef:	je     0x14000ae02
   14000adf1:	sub    rcx,0x10
   14000adf5:	cmp    DWORD PTR [rcx],0xdddd
   14000adfb:	jne    0x14000ae02
   14000adfd:	call   0x1400098ac
   14000ae02:	add    rsp,0x28
   14000ae06:	ret    
   14000ae07:	int3   
   14000ae08:	mov    rax,rsp
   14000ae0b:	mov    QWORD PTR [rax+0x8],rbx
   14000ae0f:	mov    QWORD PTR [rax+0x10],rbp
   14000ae13:	mov    QWORD PTR [rax+0x18],rsi
   14000ae17:	mov    QWORD PTR [rax+0x20],rdi
   14000ae1b:	push   r12
   14000ae1d:	sub    rsp,0x50
   14000ae21:	mov    rdx,rcx
   14000ae24:	lea    rcx,[rax-0x28]
   14000ae28:	xor    ebp,ebp
   14000ae2a:	call   0x1400094b4
   14000ae2f:	mov    r11,QWORD PTR [rsp+0x30]
   14000ae34:	xor    edi,edi
   14000ae36:	mov    r12,QWORD PTR [r11+0x158]
   14000ae3d:	mov    rcx,QWORD PTR [r12+rdi*8+0x38]
   14000ae42:	call   0x140012e10
   14000ae47:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000ae4b:	mov    rbx,rax
   14000ae4e:	call   0x140012e10
   14000ae53:	inc    rdi
   14000ae56:	add    rax,rbp
   14000ae59:	lea    rbp,[rax+rbx*1+0x2]
   14000ae5e:	cmp    rdi,0x7
   14000ae62:	jb     0x14000ae3d
   14000ae64:	lea    rcx,[rbp+0x1]
   14000ae68:	call   0x140012c00
   14000ae6d:	mov    rdi,rax
   14000ae70:	test   rax,rax
   14000ae73:	je     0x14000af11
   14000ae79:	mov    rbx,rax
   14000ae7c:	xor    esi,esi
   14000ae7e:	mov    BYTE PTR [rbx],0x3a
   14000ae81:	mov    r8,QWORD PTR [r12+rsi*8]
   14000ae85:	inc    rbx
   14000ae88:	mov    rcx,rdi
   14000ae8b:	sub    rcx,rbx
   14000ae8e:	lea    rdx,[rcx+rbp*1+0x1]
   14000ae93:	mov    rcx,rbx
   14000ae96:	call   0x140012b54
   14000ae9b:	test   eax,eax
   14000ae9d:	je     0x14000aeb4
   14000ae9f:	and    QWORD PTR [rsp+0x20],0x0
   14000aea5:	xor    r9d,r9d
   14000aea8:	xor    r8d,r8d
   14000aeab:	xor    edx,edx
   14000aead:	xor    ecx,ecx
   14000aeaf:	call   0x14000e350
   14000aeb4:	mov    rcx,rbx
   14000aeb7:	call   0x140012e10
   14000aebc:	add    rbx,rax
   14000aebf:	mov    rax,rdi
   14000aec2:	mov    BYTE PTR [rbx],0x3a
   14000aec5:	mov    r8,QWORD PTR [r12+rsi*8+0x38]
   14000aeca:	inc    rbx
   14000aecd:	sub    rax,rbx
   14000aed0:	mov    rcx,rbx
   14000aed3:	lea    rdx,[rax+rbp*1+0x1]
   14000aed8:	call   0x140012b54
   14000aedd:	test   eax,eax
   14000aedf:	je     0x14000aef6
   14000aee1:	and    QWORD PTR [rsp+0x20],0x0
   14000aee7:	xor    r9d,r9d
   14000aeea:	xor    r8d,r8d
   14000aeed:	xor    edx,edx
   14000aeef:	xor    ecx,ecx
   14000aef1:	call   0x14000e350
   14000aef6:	mov    rcx,rbx
   14000aef9:	call   0x140012e10
   14000aefe:	inc    rsi
   14000af01:	add    rbx,rax
   14000af04:	cmp    rsi,0x7
   14000af08:	jb     0x14000ae7e
   14000af0e:	mov    BYTE PTR [rbx],0x0
   14000af11:	cmp    BYTE PTR [rsp+0x48],0x0
   14000af16:	je     0x14000af24
   14000af18:	mov    rax,QWORD PTR [rsp+0x40]
   14000af1d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000af24:	mov    rbx,QWORD PTR [rsp+0x60]
   14000af29:	mov    rbp,QWORD PTR [rsp+0x68]
   14000af2e:	mov    rsi,QWORD PTR [rsp+0x70]
   14000af33:	mov    rax,rdi
   14000af36:	mov    rdi,QWORD PTR [rsp+0x78]
   14000af3b:	add    rsp,0x50
   14000af3f:	pop    r12
   14000af41:	ret    
   14000af42:	int3   
   14000af43:	int3   
   14000af44:	xor    ecx,ecx
   14000af46:	jmp    0x14000ae08
   14000af4b:	int3   
   14000af4c:	mov    rax,rsp
   14000af4f:	mov    QWORD PTR [rax+0x8],rbx
   14000af53:	mov    QWORD PTR [rax+0x10],rbp
   14000af57:	mov    QWORD PTR [rax+0x18],rsi
   14000af5b:	push   rdi
   14000af5c:	push   r12
   14000af5e:	push   r13
   14000af60:	sub    rsp,0x50
   14000af64:	mov    rdx,rcx
   14000af67:	lea    rcx,[rax-0x38]
   14000af6b:	xor    ebp,ebp
   14000af6d:	call   0x1400094b4
   14000af72:	mov    r11,QWORD PTR [rsp+0x30]
   14000af77:	lea    r13d,[rbp+0xc]
   14000af7b:	mov    rsi,QWORD PTR [r11+0x158]
   14000af82:	mov    r12,r13
   14000af85:	lea    rdi,[rsi+0x70]
   14000af89:	mov    rcx,QWORD PTR [rdi+0x60]
   14000af8d:	call   0x140012e10
   14000af92:	mov    rcx,QWORD PTR [rdi]
   14000af95:	mov    rbx,rax
   14000af98:	call   0x140012e10
   14000af9d:	add    rdi,0x8
   14000afa1:	add    rax,rbp
   14000afa4:	sub    r12,0x1
   14000afa8:	lea    rbp,[rax+rbx*1+0x2]
   14000afad:	jne    0x14000af89
   14000afaf:	lea    rcx,[rbp+0x1]
   14000afb3:	call   0x140012c00
   14000afb8:	mov    rdi,rax
   14000afbb:	test   rax,rax
   14000afbe:	je     0x14000b060
   14000afc4:	mov    rbx,rax
   14000afc7:	add    rsi,0xd0
   14000afce:	mov    BYTE PTR [rbx],0x3a
   14000afd1:	mov    r8,QWORD PTR [rsi-0x60]
   14000afd5:	inc    rbx
   14000afd8:	mov    rcx,rdi
   14000afdb:	sub    rcx,rbx
   14000afde:	lea    rdx,[rcx+rbp*1+0x1]
   14000afe3:	mov    rcx,rbx
   14000afe6:	call   0x140012b54
   14000afeb:	test   eax,eax
   14000afed:	je     0x14000b004
   14000afef:	and    QWORD PTR [rsp+0x20],0x0
   14000aff5:	xor    r9d,r9d
   14000aff8:	xor    r8d,r8d
   14000affb:	xor    edx,edx
   14000affd:	xor    ecx,ecx
   14000afff:	call   0x14000e350
   14000b004:	mov    rcx,rbx
   14000b007:	call   0x140012e10
   14000b00c:	add    rbx,rax
   14000b00f:	mov    rax,rdi
   14000b012:	mov    BYTE PTR [rbx],0x3a
   14000b015:	mov    r8,QWORD PTR [rsi]
   14000b018:	inc    rbx
   14000b01b:	sub    rax,rbx
   14000b01e:	mov    rcx,rbx
   14000b021:	lea    rdx,[rax+rbp*1+0x1]
   14000b026:	call   0x140012b54
   14000b02b:	test   eax,eax
   14000b02d:	je     0x14000b044
   14000b02f:	and    QWORD PTR [rsp+0x20],0x0
   14000b035:	xor    r9d,r9d
   14000b038:	xor    r8d,r8d
   14000b03b:	xor    edx,edx
   14000b03d:	xor    ecx,ecx
   14000b03f:	call   0x14000e350
   14000b044:	mov    rcx,rbx
   14000b047:	call   0x140012e10
   14000b04c:	add    rsi,0x8
   14000b050:	add    rbx,rax
   14000b053:	sub    r13,0x1
   14000b057:	jne    0x14000afce
   14000b05d:	mov    BYTE PTR [rbx],r13b
   14000b060:	cmp    BYTE PTR [rsp+0x48],0x0
   14000b065:	je     0x14000b073
   14000b067:	mov    rax,QWORD PTR [rsp+0x40]
   14000b06c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b073:	lea    r11,[rsp+0x50]
   14000b078:	mov    rax,rdi
   14000b07b:	mov    rbx,QWORD PTR [r11+0x20]
   14000b07f:	mov    rbp,QWORD PTR [r11+0x28]
   14000b083:	mov    rsi,QWORD PTR [r11+0x30]
   14000b087:	mov    rsp,r11
   14000b08a:	pop    r13
   14000b08c:	pop    r12
   14000b08e:	pop    rdi
   14000b08f:	ret    
   14000b090:	xor    ecx,ecx
   14000b092:	jmp    0x14000af4c
   14000b097:	int3   
   14000b098:	mov    QWORD PTR [rsp+0x8],rbx
   14000b09d:	push   rbp
   14000b09e:	push   rsi
   14000b09f:	push   rdi
   14000b0a0:	push   r12
   14000b0a2:	push   r13
   14000b0a4:	push   r14
   14000b0a6:	push   r15
   14000b0a8:	sub    rsp,0x50
   14000b0ac:	mov    rdx,rcx
   14000b0af:	xor    r14d,r14d
   14000b0b2:	lea    rcx,[rsp+0x30]
   14000b0b7:	mov    rbp,r14
   14000b0ba:	call   0x1400094b4
   14000b0bf:	mov    r11,QWORD PTR [rsp+0x30]
   14000b0c4:	mov    rsi,QWORD PTR [r11+0x158]
   14000b0cb:	mov    rdi,r14
   14000b0ce:	mov    QWORD PTR [rsp+0xa8],rsi
   14000b0d6:	mov    rcx,QWORD PTR [rsi+rdi*8+0x38]
   14000b0db:	call   0x140012e10
   14000b0e0:	mov    rcx,QWORD PTR [rsi+rdi*8]
   14000b0e4:	mov    rbx,rax
   14000b0e7:	call   0x140012e10
   14000b0ec:	inc    rdi
   14000b0ef:	add    rax,rbp
   14000b0f2:	lea    rbp,[rax+rbx*1+0x2]
   14000b0f7:	cmp    rdi,0x7
   14000b0fb:	jb     0x14000b0d6
   14000b0fd:	mov    r15d,0xc
   14000b103:	lea    r12,[rsi+0x70]
   14000b107:	mov    rdi,r12
   14000b10a:	mov    QWORD PTR [rsp+0xa0],r15
   14000b112:	mov    r13,r15
   14000b115:	mov    rcx,QWORD PTR [rdi+0x60]
   14000b119:	call   0x140012e10
   14000b11e:	mov    rcx,QWORD PTR [rdi]
   14000b121:	mov    rbx,rax
   14000b124:	call   0x140012e10
   14000b129:	add    rdi,0x8
   14000b12d:	add    rax,rbp
   14000b130:	sub    r13,0x1
   14000b134:	lea    rbp,[rax+rbx*1+0x2]
   14000b139:	jne    0x14000b115
   14000b13b:	mov    rcx,QWORD PTR [rsi+0x138]
   14000b142:	call   0x140012e10
   14000b147:	mov    rcx,QWORD PTR [rsi+0x130]
   14000b14e:	mov    rbx,rax
   14000b151:	call   0x140012e10
   14000b156:	mov    rcx,QWORD PTR [rsi+0x140]
   14000b15d:	add    rax,rbp
   14000b160:	lea    rbx,[rax+rbx*1+0x2]
   14000b165:	call   0x140012e10
   14000b16a:	mov    rcx,QWORD PTR [rsi+0x148]
   14000b171:	lea    rbx,[rbx+rax*1+0x1]
   14000b176:	call   0x140012e10
   14000b17b:	mov    rcx,QWORD PTR [rsi+0x150]
   14000b182:	lea    rbx,[rbx+rax*1+0x1]
   14000b187:	call   0x140012e10
   14000b18c:	lea    rbp,[rbx+rax*1+0x169]
   14000b194:	mov    rcx,rbp
   14000b197:	call   0x140012c00
   14000b19c:	mov    rbx,rax
   14000b19f:	cmp    rax,r14
   14000b1a2:	je     0x14000b460
   14000b1a8:	mov    r8d,0x168
   14000b1ae:	mov    rdx,rsi
   14000b1b1:	mov    rcx,rax
   14000b1b4:	lea    rdi,[rax+0x168]
   14000b1bb:	call   0x140008b00
   14000b1c0:	mov    rax,rbx
   14000b1c3:	sub    rax,rsi
   14000b1c6:	lea    r13,[rsi+0x38]
   14000b1ca:	mov    QWORD PTR [rsp+0x98],rax
   14000b1d2:	mov    r15,rax
   14000b1d5:	mov    QWORD PTR [rbx+r14*8],rdi
   14000b1d9:	mov    r8,QWORD PTR [r13-0x38]
   14000b1dd:	mov    rdx,rbx
   14000b1e0:	sub    rdx,rdi
   14000b1e3:	mov    rcx,rdi
   14000b1e6:	add    rdx,rbp
   14000b1e9:	call   0x140012b54
   14000b1ee:	test   eax,eax
   14000b1f0:	je     0x14000b207
   14000b1f2:	and    QWORD PTR [rsp+0x20],0x0
   14000b1f8:	xor    r9d,r9d
   14000b1fb:	xor    r8d,r8d
   14000b1fe:	xor    edx,edx
   14000b200:	xor    ecx,ecx
   14000b202:	call   0x14000e350
   14000b207:	mov    rcx,rdi
   14000b20a:	call   0x140012e10
   14000b20f:	mov    rdx,rbx
   14000b212:	lea    rdi,[rdi+rax*1+0x1]
   14000b217:	mov    QWORD PTR [r15+r13*1],rdi
   14000b21b:	mov    r8,QWORD PTR [r13+0x0]
   14000b21f:	sub    rdx,rdi
   14000b222:	add    rdx,rbp
   14000b225:	mov    rcx,rdi
   14000b228:	call   0x140012b54
   14000b22d:	test   eax,eax
   14000b22f:	je     0x14000b246
   14000b231:	and    QWORD PTR [rsp+0x20],0x0
   14000b237:	xor    r9d,r9d
   14000b23a:	xor    r8d,r8d
   14000b23d:	xor    edx,edx
   14000b23f:	xor    ecx,ecx
   14000b241:	call   0x14000e350
   14000b246:	mov    rcx,rdi
   14000b249:	call   0x140012e10
   14000b24e:	inc    r14
   14000b251:	add    r13,0x8
   14000b255:	lea    rdi,[rdi+rax*1+0x1]
   14000b25a:	cmp    r14,0x7
   14000b25e:	jb     0x14000b1d5
   14000b264:	mov    r15,QWORD PTR [rsp+0xa0]
   14000b26c:	mov    rsi,QWORD PTR [rsp+0x98]
   14000b274:	lea    r13,[rbx+0xd0]
   14000b27b:	xor    r14d,r14d
   14000b27e:	mov    QWORD PTR [r12+rsi*1],rdi
   14000b282:	mov    r8,QWORD PTR [r12]
   14000b286:	mov    rdx,rbx
   14000b289:	sub    rdx,rdi
   14000b28c:	mov    rcx,rdi
   14000b28f:	add    rdx,rbp
   14000b292:	call   0x140012b54
   14000b297:	cmp    eax,r14d
   14000b29a:	je     0x14000b2b0
   14000b29c:	xor    r9d,r9d
   14000b29f:	xor    r8d,r8d
   14000b2a2:	xor    edx,edx
   14000b2a4:	xor    ecx,ecx
   14000b2a6:	mov    QWORD PTR [rsp+0x20],r14
   14000b2ab:	call   0x14000e350
   14000b2b0:	mov    rcx,rdi
   14000b2b3:	call   0x140012e10
   14000b2b8:	mov    rdx,rbx
   14000b2bb:	lea    rdi,[rdi+rax*1+0x1]
   14000b2c0:	mov    QWORD PTR [r13+0x0],rdi
   14000b2c4:	mov    r8,QWORD PTR [r12+0x60]
   14000b2c9:	sub    rdx,rdi
   14000b2cc:	add    rdx,rbp
   14000b2cf:	mov    rcx,rdi
   14000b2d2:	call   0x140012b54
   14000b2d7:	cmp    eax,r14d
   14000b2da:	je     0x14000b2f0
   14000b2dc:	xor    r9d,r9d
   14000b2df:	xor    r8d,r8d
   14000b2e2:	xor    edx,edx
   14000b2e4:	xor    ecx,ecx
   14000b2e6:	mov    QWORD PTR [rsp+0x20],r14
   14000b2eb:	call   0x14000e350
   14000b2f0:	mov    rcx,rdi
   14000b2f3:	call   0x140012e10
   14000b2f8:	add    r12,0x8
   14000b2fc:	add    r13,0x8
   14000b300:	sub    r15,0x1
   14000b304:	lea    rdi,[rdi+rax*1+0x1]
   14000b309:	jne    0x14000b27e
   14000b30f:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b317:	mov    QWORD PTR [rbx+0x130],rdi
   14000b31e:	mov    rdx,rbx
   14000b321:	mov    r8,QWORD PTR [rsi+0x130]
   14000b328:	sub    rdx,rdi
   14000b32b:	mov    rcx,rdi
   14000b32e:	add    rdx,rbp
   14000b331:	call   0x140012b54
   14000b336:	cmp    eax,r14d
   14000b339:	je     0x14000b34f
   14000b33b:	xor    r9d,r9d
   14000b33e:	xor    r8d,r8d
   14000b341:	xor    edx,edx
   14000b343:	xor    ecx,ecx
   14000b345:	mov    QWORD PTR [rsp+0x20],r14
   14000b34a:	call   0x14000e350
   14000b34f:	mov    rcx,rdi
   14000b352:	call   0x140012e10
   14000b357:	mov    rdx,rbx
   14000b35a:	lea    rdi,[rdi+rax*1+0x1]
   14000b35f:	mov    QWORD PTR [rbx+0x138],rdi
   14000b366:	mov    r8,QWORD PTR [rsi+0x138]
   14000b36d:	sub    rdx,rdi
   14000b370:	add    rdx,rbp
   14000b373:	mov    rcx,rdi
   14000b376:	call   0x140012b54
   14000b37b:	cmp    eax,r14d
   14000b37e:	je     0x14000b394
   14000b380:	xor    r9d,r9d
   14000b383:	xor    r8d,r8d
   14000b386:	xor    edx,edx
   14000b388:	xor    ecx,ecx
   14000b38a:	mov    QWORD PTR [rsp+0x20],r14
   14000b38f:	call   0x14000e350
   14000b394:	mov    rcx,rdi
   14000b397:	call   0x140012e10
   14000b39c:	mov    rdx,rbx
   14000b39f:	lea    rdi,[rdi+rax*1+0x1]
   14000b3a4:	mov    QWORD PTR [rbx+0x140],rdi
   14000b3ab:	mov    r8,QWORD PTR [rsi+0x140]
   14000b3b2:	sub    rdx,rdi
   14000b3b5:	add    rdx,rbp
   14000b3b8:	mov    rcx,rdi
   14000b3bb:	call   0x140012b54
   14000b3c0:	cmp    eax,r14d
   14000b3c3:	je     0x14000b3d9
   14000b3c5:	xor    r9d,r9d
   14000b3c8:	xor    r8d,r8d
   14000b3cb:	xor    edx,edx
   14000b3cd:	xor    ecx,ecx
   14000b3cf:	mov    QWORD PTR [rsp+0x20],r14
   14000b3d4:	call   0x14000e350
   14000b3d9:	mov    rcx,rdi
   14000b3dc:	call   0x140012e10
   14000b3e1:	mov    rdx,rbx
   14000b3e4:	lea    rdi,[rdi+rax*1+0x1]
   14000b3e9:	mov    QWORD PTR [rbx+0x148],rdi
   14000b3f0:	mov    r8,QWORD PTR [rsi+0x148]
   14000b3f7:	sub    rdx,rdi
   14000b3fa:	add    rdx,rbp
   14000b3fd:	mov    rcx,rdi
   14000b400:	call   0x140012b54
   14000b405:	cmp    eax,r14d
   14000b408:	je     0x14000b41e
   14000b40a:	xor    r9d,r9d
   14000b40d:	xor    r8d,r8d
   14000b410:	xor    edx,edx
   14000b412:	xor    ecx,ecx
   14000b414:	mov    QWORD PTR [rsp+0x20],r14
   14000b419:	call   0x14000e350
   14000b41e:	mov    rcx,rdi
   14000b421:	call   0x140012e10
   14000b426:	mov    rdx,rbx
   14000b429:	lea    rcx,[rdi+rax*1+0x1]
   14000b42e:	mov    QWORD PTR [rbx+0x150],rcx
   14000b435:	mov    r8,QWORD PTR [rsi+0x150]
   14000b43c:	sub    rdx,rcx
   14000b43f:	add    rdx,rbp
   14000b442:	call   0x140012b54
   14000b447:	cmp    eax,r14d
   14000b44a:	je     0x14000b460
   14000b44c:	xor    r9d,r9d
   14000b44f:	xor    r8d,r8d
   14000b452:	xor    edx,edx
   14000b454:	xor    ecx,ecx
   14000b456:	mov    QWORD PTR [rsp+0x20],r14
   14000b45b:	call   0x14000e350
   14000b460:	cmp    BYTE PTR [rsp+0x48],r14b
   14000b465:	je     0x14000b473
   14000b467:	mov    rax,QWORD PTR [rsp+0x40]
   14000b46c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b473:	mov    rax,rbx
   14000b476:	mov    rbx,QWORD PTR [rsp+0x90]
   14000b47e:	add    rsp,0x50
   14000b482:	pop    r15
   14000b484:	pop    r14
   14000b486:	pop    r13
   14000b488:	pop    r12
   14000b48a:	pop    rdi
   14000b48b:	pop    rsi
   14000b48c:	pop    rbp
   14000b48d:	ret    
   14000b48e:	int3   
   14000b48f:	int3   
   14000b490:	xor    ecx,ecx
   14000b492:	jmp    0x14000b098
   14000b497:	int3   
   14000b498:	jmp    0x14000b4b1
   14000b49a:	mov    r9b,BYTE PTR [rcx]
   14000b49d:	test   r9b,r9b
   14000b4a0:	je     0x14000b4b7
   14000b4a2:	mov    rax,QWORD PTR [rdx]
   14000b4a5:	inc    rcx
   14000b4a8:	mov    BYTE PTR [rax],r9b
   14000b4ab:	inc    QWORD PTR [rdx]
   14000b4ae:	dec    QWORD PTR [r8]
   14000b4b1:	cmp    QWORD PTR [r8],0x0
   14000b4b5:	jne    0x14000b49a
   14000b4b7:	repz ret 
   14000b4b9:	int3   
   14000b4ba:	int3   
   14000b4bb:	int3   
   14000b4bc:	mov    r9,QWORD PTR [rdx]
   14000b4bf:	mov    r10,rdx
   14000b4c2:	mov    r11d,ecx
   14000b4c5:	jmp    0x14000b4fa
   14000b4c7:	mov    eax,0x66666667
   14000b4cc:	imul   r11d
   14000b4cf:	sar    edx,0x2
   14000b4d2:	mov    eax,edx
   14000b4d4:	shr    eax,0x1f
   14000b4d7:	add    edx,eax
   14000b4d9:	mov    al,dl
   14000b4db:	shl    al,0x2
   14000b4de:	lea    ecx,[rax+rdx*1]
   14000b4e1:	add    cl,cl
   14000b4e3:	sub    r11b,cl
   14000b4e6:	add    r11b,0x30
   14000b4ea:	mov    BYTE PTR [r9],r11b
   14000b4ed:	dec    QWORD PTR [r8]
   14000b4f0:	inc    r9
   14000b4f3:	mov    r11d,edx
   14000b4f6:	test   edx,edx
   14000b4f8:	jle    0x14000b500
   14000b4fa:	cmp    QWORD PTR [r8],0x1
   14000b4fe:	ja     0x14000b4c7
   14000b500:	mov    rdx,QWORD PTR [r10]
   14000b503:	mov    QWORD PTR [r10],r9
   14000b506:	dec    r9
   14000b509:	mov    al,BYTE PTR [rdx]
   14000b50b:	mov    cl,BYTE PTR [r9]
   14000b50e:	mov    BYTE PTR [r9],al
   14000b511:	mov    BYTE PTR [rdx],cl
   14000b513:	inc    rdx
   14000b516:	dec    r9
   14000b519:	cmp    rdx,r9
   14000b51c:	jb     0x14000b509
   14000b51e:	repz ret 
   14000b520:	mov    QWORD PTR [rsp+0x8],rbx
   14000b525:	mov    QWORD PTR [rsp+0x10],rdi
   14000b52a:	xor    r10d,r10d
   14000b52d:	mov    r11d,ecx
   14000b530:	cmp    DWORD PTR [rsp+0x28],r10d
   14000b535:	je     0x14000b595
   14000b537:	mov    r10,QWORD PTR [r8]
   14000b53a:	jmp    0x14000b56f
   14000b53c:	mov    eax,0x66666667
   14000b541:	imul   r11d
   14000b544:	sar    edx,0x2
   14000b547:	mov    eax,edx
   14000b549:	shr    eax,0x1f
   14000b54c:	add    edx,eax
   14000b54e:	mov    al,dl
   14000b550:	shl    al,0x2
   14000b553:	lea    ecx,[rax+rdx*1]
   14000b556:	add    cl,cl
   14000b558:	sub    r11b,cl
   14000b55b:	add    r11b,0x30
   14000b55f:	mov    BYTE PTR [r10],r11b
   14000b562:	dec    QWORD PTR [r9]
   14000b565:	inc    r10
   14000b568:	mov    r11d,edx
   14000b56b:	test   edx,edx
   14000b56d:	jle    0x14000b575
   14000b56f:	cmp    QWORD PTR [r9],0x1
   14000b573:	ja     0x14000b53c
   14000b575:	mov    rdx,QWORD PTR [r8]
   14000b578:	mov    QWORD PTR [r8],r10
   14000b57b:	dec    r10
   14000b57e:	mov    al,BYTE PTR [rdx]
   14000b580:	mov    cl,BYTE PTR [r10]
   14000b583:	mov    BYTE PTR [r10],al
   14000b586:	mov    BYTE PTR [rdx],cl
   14000b588:	inc    rdx
   14000b58b:	dec    r10
   14000b58e:	cmp    rdx,r10
   14000b591:	jb     0x14000b57e
   14000b593:	jmp    0x14000b5ef
   14000b595:	movsxd rax,edx
   14000b598:	cmp    rax,QWORD PTR [r9]
   14000b59b:	jae    0x14000b5ec
   14000b59d:	dec    edx
   14000b59f:	movsxd rdi,edx
   14000b5a2:	lea    ebx,[rdx+0x1]
   14000b5a5:	test   ebx,ebx
   14000b5a7:	je     0x14000b5e1
   14000b5a9:	mov    eax,0x66666667
   14000b5ae:	inc    r10d
   14000b5b1:	imul   r11d
   14000b5b4:	sar    edx,0x2
   14000b5b7:	mov    eax,edx
   14000b5b9:	shr    eax,0x1f
   14000b5bc:	add    edx,eax
   14000b5be:	mov    al,dl
   14000b5c0:	shl    al,0x2
   14000b5c3:	lea    ecx,[rax+rdx*1]
   14000b5c6:	mov    rax,QWORD PTR [r8]
   14000b5c9:	add    cl,cl
   14000b5cb:	sub    r11b,cl
   14000b5ce:	add    r11b,0x30
   14000b5d2:	mov    BYTE PTR [rdi+rax*1],r11b
   14000b5d6:	dec    rdi
   14000b5d9:	sub    ebx,0x1
   14000b5dc:	mov    r11d,edx
   14000b5df:	jne    0x14000b5a9
   14000b5e1:	movsxd rax,r10d
   14000b5e4:	add    QWORD PTR [r8],rax
   14000b5e7:	sub    QWORD PTR [r9],rax
   14000b5ea:	jmp    0x14000b5ef
   14000b5ec:	and    QWORD PTR [r9],r10
   14000b5ef:	mov    rbx,QWORD PTR [rsp+0x8]
   14000b5f4:	mov    rdi,QWORD PTR [rsp+0x10]
   14000b5f9:	ret    
   14000b5fa:	int3   
   14000b5fb:	int3   
   14000b5fc:	mov    rax,rsp
   14000b5ff:	mov    QWORD PTR [rax+0x8],rbx
   14000b603:	mov    QWORD PTR [rax+0x10],rbp
   14000b607:	mov    QWORD PTR [rax+0x18],rsi
   14000b60b:	mov    QWORD PTR [rax+0x20],rdi
   14000b60f:	push   r12
   14000b611:	push   r13
   14000b613:	push   r14
   14000b615:	sub    rsp,0x30
   14000b619:	movsx  r10d,dl
   14000b61d:	mov    rdi,r9
   14000b620:	mov    rsi,r8
   14000b623:	cmp    r10d,0x59
   14000b627:	mov    rbp,rcx
   14000b62a:	mov    r14d,0x1
   14000b630:	jg     0x14000b92b
   14000b636:	je     0x14000b8da
   14000b63c:	cmp    r10d,0x49
   14000b640:	jg     0x14000b7c4
   14000b646:	je     0x14000b78a
   14000b64c:	sub    r10d,0x4
   14000b650:	je     0x14000bc4e
   14000b656:	sub    r10d,0x9
   14000b65a:	je     0x14000bc4e
   14000b660:	sub    r10d,0x18
   14000b664:	je     0x14000b774
   14000b66a:	sub    r10d,0x1c
   14000b66e:	je     0x14000b721
   14000b674:	sub    r10d,r14d
   14000b677:	je     0x14000b6d5
   14000b679:	lea    ecx,[r14+0x5]
   14000b67d:	cmp    r10d,ecx
   14000b680:	jne    0x14000b6b4
   14000b682:	mov    ecx,DWORD PTR [r8+0x8]
   14000b686:	xor    ebx,ebx
   14000b688:	cmp    ecx,ebx
   14000b68a:	jl     0x14000b695
   14000b68c:	cmp    ecx,0x17
   14000b68f:	jle    0x14000b99f
   14000b695:	call   0x14000f574
   14000b69a:	xor    r9d,r9d
   14000b69d:	xor    r8d,r8d
   14000b6a0:	xor    edx,edx
   14000b6a2:	xor    ecx,ecx
   14000b6a4:	mov    QWORD PTR [rsp+0x20],rbx
   14000b6a9:	mov    DWORD PTR [rax],0x16
   14000b6af:	call   0x14000e4d8
   14000b6b4:	xor    eax,eax
   14000b6b6:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b6bb:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b6c0:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b6c5:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b6ca:	add    rsp,0x30
   14000b6ce:	pop    r14
   14000b6d0:	pop    r13
   14000b6d2:	pop    r12
   14000b6d4:	ret    
   14000b6d5:	xor    ebx,ebx
   14000b6d7:	cmp    DWORD PTR [r8+0x10],ebx
   14000b6db:	jl     0x14000b695
   14000b6dd:	cmp    DWORD PTR [r8+0x10],0xb
   14000b6e2:	jg     0x14000b695
   14000b6e4:	movsxd rcx,DWORD PTR [r8+0x10]
   14000b6e8:	mov    rax,QWORD PTR [rsp+0x78]
   14000b6ed:	mov    rdx,QWORD PTR [rax+rcx*8+0xd0]
   14000b6f5:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b6fa:	jmp    0x14000b717
   14000b6fc:	mov    r8b,BYTE PTR [rdx]
   14000b6ff:	cmp    r8b,bl
   14000b702:	je     0x14000bc4e
   14000b708:	mov    rax,QWORD PTR [r9]
   14000b70b:	add    rdx,r14
   14000b70e:	mov    BYTE PTR [rax],r8b
   14000b711:	add    QWORD PTR [r9],r14
   14000b714:	dec    QWORD PTR [rcx]
   14000b717:	cmp    QWORD PTR [rcx],rbx
   14000b71a:	jne    0x14000b6fc
   14000b71c:	jmp    0x14000bc4e
   14000b721:	xor    ebx,ebx
   14000b723:	cmp    DWORD PTR [r8+0x18],ebx
   14000b727:	jl     0x14000b695
   14000b72d:	lea    ecx,[rbx+0x6]
   14000b730:	cmp    DWORD PTR [r8+0x18],ecx
   14000b734:	jg     0x14000b695
   14000b73a:	movsxd rcx,DWORD PTR [r8+0x18]
   14000b73e:	mov    rax,QWORD PTR [rsp+0x78]
   14000b743:	mov    rdx,QWORD PTR [rax+rcx*8+0x38]
   14000b748:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b74d:	jmp    0x14000b76a
   14000b74f:	mov    r8b,BYTE PTR [rdx]
   14000b752:	cmp    r8b,bl
   14000b755:	je     0x14000bc4e
   14000b75b:	mov    rax,QWORD PTR [r9]
   14000b75e:	add    rdx,r14
   14000b761:	mov    BYTE PTR [rax],r8b
   14000b764:	add    QWORD PTR [r9],r14
   14000b767:	dec    QWORD PTR [rcx]
   14000b76a:	cmp    QWORD PTR [rcx],rbx
   14000b76d:	jne    0x14000b74f
   14000b76f:	jmp    0x14000bc4e
   14000b774:	mov    rax,QWORD PTR [r9]
   14000b777:	mov    BYTE PTR [rax],0x25
   14000b77a:	mov    rax,QWORD PTR [rsp+0x70]
   14000b77f:	add    QWORD PTR [r9],r14
   14000b782:	dec    QWORD PTR [rax]
   14000b785:	jmp    0x14000bc4e
   14000b78a:	mov    ecx,DWORD PTR [r8+0x8]
   14000b78e:	xor    ebx,ebx
   14000b790:	cmp    ecx,ebx
   14000b792:	jl     0x14000b695
   14000b798:	cmp    ecx,0x17
   14000b79b:	jg     0x14000b695
   14000b7a1:	mov    eax,0x2aaaaaab
   14000b7a6:	imul   ecx
   14000b7a8:	sar    edx,1
   14000b7aa:	mov    eax,edx
   14000b7ac:	shr    eax,0x1f
   14000b7af:	add    edx,eax
   14000b7b1:	lea    eax,[rdx+rdx*2]
   14000b7b4:	shl    eax,0x2
   14000b7b7:	sub    ecx,eax
   14000b7b9:	lea    eax,[rbx+0xc]
   14000b7bc:	cmove  ecx,eax
   14000b7bf:	jmp    0x14000b99f
   14000b7c4:	sub    r10d,0x4d
   14000b7c8:	je     0x14000b8c4
   14000b7ce:	mov    ecx,0x6
   14000b7d3:	sub    r10d,ecx
   14000b7d6:	je     0x14000b8a8
   14000b7dc:	sub    r10d,0x2
   14000b7e0:	je     0x14000b83e
   14000b7e2:	sub    r10d,0x2
   14000b7e6:	je     0x14000b81f
   14000b7e8:	cmp    r10d,r14d
   14000b7eb:	jne    0x14000b6b4
   14000b7f1:	mov    rax,QWORD PTR [rsp+0x78]
   14000b7f6:	lea    edx,[rcx-0x4]
   14000b7f9:	mov    rcx,rbp
   14000b7fc:	mov    QWORD PTR [rsp+0x28],rax
   14000b801:	mov    rax,QWORD PTR [rsp+0x70]
   14000b806:	mov    QWORD PTR [rsp+0x20],rax
   14000b80b:	call   0x14000bc58
   14000b810:	xor    ebx,ebx
   14000b812:	cmp    eax,ebx
   14000b814:	jne    0x14000bc4e
   14000b81a:	jmp    0x14000b6b4
   14000b81f:	mov    eax,DWORD PTR [r8+0x18]
   14000b823:	xor    ebx,ebx
   14000b825:	cmp    eax,ebx
   14000b827:	jl     0x14000b695
   14000b82d:	cmp    eax,ecx
   14000b82f:	jg     0x14000b695
   14000b835:	cmp    eax,ebx
   14000b837:	je     0x14000b858
   14000b839:	lea    ecx,[rax-0x1]
   14000b83c:	jmp    0x14000b858
   14000b83e:	xor    ebx,ebx
   14000b840:	cmp    DWORD PTR [r8+0x18],ebx
   14000b844:	jl     0x14000b695
   14000b84a:	cmp    DWORD PTR [r8+0x18],ecx
   14000b84e:	jg     0x14000b695
   14000b854:	mov    ecx,DWORD PTR [r8+0x18]
   14000b858:	cmp    DWORD PTR [r8+0x1c],ebx
   14000b85c:	jl     0x14000b695
   14000b862:	cmp    DWORD PTR [r8+0x1c],0x16d
   14000b86a:	jg     0x14000b695
   14000b870:	cmp    DWORD PTR [r8+0x1c],ecx
   14000b874:	jl     0x14000b8a1
   14000b876:	mov    r8d,DWORD PTR [r8+0x1c]
   14000b87a:	mov    eax,0x92492493
   14000b87f:	imul   r8d
   14000b882:	add    edx,r8d
   14000b885:	sar    edx,0x2
   14000b888:	mov    eax,edx
   14000b88a:	shr    eax,0x1f
   14000b88d:	add    edx,eax
   14000b88f:	mov    eax,edx
   14000b891:	mov    ebx,edx
   14000b893:	imul   eax,eax,0x7
   14000b896:	sub    r8d,eax
   14000b899:	cmp    r8d,ecx
   14000b89c:	jl     0x14000b8a1
   14000b89e:	add    ebx,r14d
   14000b8a1:	mov    ecx,ebx
   14000b8a3:	jmp    0x14000b99f
   14000b8a8:	xor    ebx,ebx
   14000b8aa:	cmp    DWORD PTR [r8],ebx
   14000b8ad:	jl     0x14000b695
   14000b8b3:	cmp    DWORD PTR [r8],0x3b
   14000b8b7:	jg     0x14000b695
   14000b8bd:	mov    ecx,DWORD PTR [rsi]
   14000b8bf:	jmp    0x14000b99f
   14000b8c4:	mov    ecx,DWORD PTR [r8+0x4]
   14000b8c8:	xor    ebx,ebx
   14000b8ca:	cmp    ecx,ebx
   14000b8cc:	jl     0x14000b695
   14000b8d2:	cmp    ecx,0x3b
   14000b8d5:	jmp    0x14000b68f
   14000b8da:	cmp    DWORD PTR [r8+0x14],0xfffff894
   14000b8e2:	jl     0x14000b91f
   14000b8e4:	cmp    DWORD PTR [r8+0x14],0x1fa3
   14000b8ec:	jg     0x14000b91f
   14000b8ee:	mov    r8d,DWORD PTR [r8+0x14]
   14000b8f2:	mov    eax,0x51eb851f
   14000b8f7:	imul   r8d
   14000b8fa:	sar    edx,0x5
   14000b8fd:	mov    eax,edx
   14000b8ff:	shr    eax,0x1f
   14000b902:	add    edx,eax
   14000b904:	mov    eax,edx
   14000b906:	lea    ecx,[rdx+0x13]
   14000b909:	mov    edx,0x4
   14000b90e:	imul   eax,eax,0x64
   14000b911:	sub    r8d,eax
   14000b914:	imul   ecx,ecx,0x64
   14000b917:	add    ecx,r8d
   14000b91a:	jmp    0x14000b9a4
   14000b91f:	call   0x14000f574
   14000b924:	xor    ebx,ebx
   14000b926:	jmp    0x14000b69a
   14000b92b:	cmp    r10d,0x6d
   14000b92f:	jg     0x14000baee
   14000b935:	je     0x14000bad0
   14000b93b:	sub    r10d,0x5a
   14000b93f:	je     0x14000bb15
   14000b945:	sub    r10d,0x7
   14000b949:	je     0x14000ba7e
   14000b94f:	sub    r10d,r14d
   14000b952:	je     0x14000ba2d
   14000b958:	sub    r10d,r14d
   14000b95b:	je     0x14000b9c1
   14000b95d:	sub    r10d,r14d
   14000b960:	je     0x14000b991
   14000b962:	mov    ecx,0x6
   14000b967:	cmp    r10d,ecx
   14000b96a:	jne    0x14000b6b4
   14000b970:	mov    ecx,DWORD PTR [r8+0x1c]
   14000b974:	xor    ebx,ebx
   14000b976:	cmp    ecx,ebx
   14000b978:	jl     0x14000b695
   14000b97e:	cmp    ecx,0x16d
   14000b984:	jg     0x14000b695
   14000b98a:	inc    ecx
   14000b98c:	lea    edx,[rbx+0x3]
   14000b98f:	jmp    0x14000b9a4
   14000b991:	mov    ecx,DWORD PTR [r8+0xc]
   14000b995:	cmp    ecx,r14d
   14000b998:	jl     0x14000b91f
   14000b99a:	cmp    ecx,0x1f
   14000b99d:	jg     0x14000b91f
   14000b99f:	mov    edx,0x2
   14000b9a4:	mov    eax,DWORD PTR [rsp+0x80]
   14000b9ab:	mov    r9,QWORD PTR [rsp+0x70]
   14000b9b0:	mov    r8,rdi
   14000b9b3:	mov    DWORD PTR [rsp+0x20],eax
   14000b9b7:	call   0x14000b520
   14000b9bc:	jmp    0x14000bc4e
   14000b9c1:	mov    r13,QWORD PTR [rsp+0x78]
   14000b9c6:	mov    r12,QWORD PTR [rsp+0x70]
   14000b9cb:	xor    ebx,ebx
   14000b9cd:	mov    QWORD PTR [rsp+0x28],r13
   14000b9d2:	mov    QWORD PTR [rsp+0x20],r12
   14000b9d7:	cmp    DWORD PTR [rsp+0x80],ebx
   14000b9de:	je     0x14000ba29
   14000b9e0:	mov    edx,r14d
   14000b9e3:	call   0x14000bc58
   14000b9e8:	cmp    eax,ebx
   14000b9ea:	je     0x14000b6b4
   14000b9f0:	cmp    QWORD PTR [r12],rbx
   14000b9f4:	je     0x14000b6b4
   14000b9fa:	mov    rax,QWORD PTR [rdi]
   14000b9fd:	mov    QWORD PTR [rsp+0x28],r13
   14000ba02:	mov    r9,rdi
   14000ba05:	mov    BYTE PTR [rax],0x20
   14000ba08:	add    QWORD PTR [rdi],r14
   14000ba0b:	dec    QWORD PTR [r12]
   14000ba0f:	mov    QWORD PTR [rsp+0x20],r12
   14000ba14:	mov    r8,rsi
   14000ba17:	mov    edx,0x2
   14000ba1c:	mov    rcx,rbp
   14000ba1f:	call   0x14000bc58
   14000ba24:	jmp    0x14000b812
   14000ba29:	xor    edx,edx
   14000ba2b:	jmp    0x14000b9e3
   14000ba2d:	xor    ebx,ebx
   14000ba2f:	cmp    DWORD PTR [r8+0x10],ebx
   14000ba33:	jl     0x14000b695
   14000ba39:	cmp    DWORD PTR [r8+0x10],0xb
   14000ba3e:	jg     0x14000b695
   14000ba44:	movsxd rcx,DWORD PTR [r8+0x10]
   14000ba48:	mov    rax,QWORD PTR [rsp+0x78]
   14000ba4d:	mov    rdx,QWORD PTR [rax+rcx*8+0x70]
   14000ba52:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ba57:	jmp    0x14000ba74
   14000ba59:	mov    r8b,BYTE PTR [rdx]
   14000ba5c:	cmp    r8b,bl
   14000ba5f:	je     0x14000bc4e
   14000ba65:	mov    rax,QWORD PTR [r9]
   14000ba68:	add    rdx,r14
   14000ba6b:	mov    BYTE PTR [rax],r8b
   14000ba6e:	add    QWORD PTR [r9],r14
   14000ba71:	dec    QWORD PTR [rcx]
   14000ba74:	cmp    QWORD PTR [rcx],rbx
   14000ba77:	jne    0x14000ba59
   14000ba79:	jmp    0x14000bc4e
   14000ba7e:	xor    ebx,ebx
   14000ba80:	cmp    DWORD PTR [r8+0x18],ebx
   14000ba84:	jl     0x14000b695
   14000ba8a:	lea    ecx,[rbx+0x6]
   14000ba8d:	cmp    DWORD PTR [r8+0x18],ecx
   14000ba91:	jg     0x14000b695
   14000ba97:	movsxd rcx,DWORD PTR [r8+0x18]
   14000ba9b:	mov    rax,QWORD PTR [rsp+0x78]
   14000baa0:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000baa4:	mov    rcx,QWORD PTR [rsp+0x70]
   14000baa9:	jmp    0x14000bac6
   14000baab:	mov    r8b,BYTE PTR [rdx]
   14000baae:	cmp    r8b,bl
   14000bab1:	je     0x14000bc4e
   14000bab7:	mov    rax,QWORD PTR [r9]
   14000baba:	add    rdx,r14
   14000babd:	mov    BYTE PTR [rax],r8b
   14000bac0:	add    QWORD PTR [r9],r14
   14000bac3:	dec    QWORD PTR [rcx]
   14000bac6:	cmp    QWORD PTR [rcx],rbx
   14000bac9:	jne    0x14000baab
   14000bacb:	jmp    0x14000bc4e
   14000bad0:	mov    ecx,DWORD PTR [r8+0x10]
   14000bad4:	xor    ebx,ebx
   14000bad6:	cmp    ecx,ebx
   14000bad8:	jl     0x14000b695
   14000bade:	cmp    ecx,0xb
   14000bae1:	jg     0x14000b695
   14000bae7:	inc    ecx
   14000bae9:	jmp    0x14000b99f
   14000baee:	sub    r10d,0x70
   14000baf2:	je     0x14000bbd5
   14000baf8:	sub    r10d,0x7
   14000bafc:	je     0x14000bbb1
   14000bb02:	sub    r10d,r14d
   14000bb05:	je     0x14000bb83
   14000bb07:	sub    r10d,r14d
   14000bb0a:	je     0x14000bb5a
   14000bb0c:	cmp    r10d,r14d
   14000bb0f:	jne    0x14000b6b4
   14000bb15:	call   0x14000efdc
   14000bb1a:	call   0x14000f524
   14000bb1f:	xor    ebx,ebx
   14000bb21:	cmp    DWORD PTR [rsi+0x20],ebx
   14000bb24:	mov    rcx,rbx
   14000bb27:	setne  cl
   14000bb2a:	mov    rdx,QWORD PTR [rax+rcx*8]
   14000bb2e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000bb33:	jmp    0x14000bb50
   14000bb35:	mov    r8b,BYTE PTR [rdx]
   14000bb38:	cmp    r8b,bl
   14000bb3b:	je     0x14000bc4e
   14000bb41:	mov    rax,QWORD PTR [rdi]
   14000bb44:	add    rdx,r14
   14000bb47:	mov    BYTE PTR [rax],r8b
   14000bb4a:	add    QWORD PTR [rdi],r14
   14000bb4d:	dec    QWORD PTR [rcx]
   14000bb50:	cmp    QWORD PTR [rcx],rbx
   14000bb53:	jne    0x14000bb35
   14000bb55:	jmp    0x14000bc4e
   14000bb5a:	mov    ecx,DWORD PTR [r8+0x14]
   14000bb5e:	xor    ebx,ebx
   14000bb60:	cmp    ecx,ebx
   14000bb62:	jl     0x14000b695
   14000bb68:	mov    eax,0x51eb851f
   14000bb6d:	imul   ecx
   14000bb6f:	sar    edx,0x5
   14000bb72:	mov    eax,edx
   14000bb74:	shr    eax,0x1f
   14000bb77:	add    edx,eax
   14000bb79:	imul   edx,edx,0x64
   14000bb7c:	sub    ecx,edx
   14000bb7e:	jmp    0x14000b99f
   14000bb83:	mov    rax,QWORD PTR [rsp+0x78]
   14000bb88:	xor    ebx,ebx
   14000bb8a:	mov    QWORD PTR [rsp+0x28],rax
   14000bb8f:	mov    rax,QWORD PTR [rsp+0x70]
   14000bb94:	mov    QWORD PTR [rsp+0x20],rax
   14000bb99:	cmp    DWORD PTR [rsp+0x80],ebx
   14000bba0:	je     0x14000bbaa
   14000bba2:	mov    edx,r14d
   14000bba5:	jmp    0x14000ba1f
   14000bbaa:	xor    edx,edx
   14000bbac:	jmp    0x14000ba1f
   14000bbb1:	xor    ebx,ebx
   14000bbb3:	cmp    DWORD PTR [r8+0x18],ebx
   14000bbb7:	jl     0x14000b695
   14000bbbd:	lea    ecx,[rbx+0x6]
   14000bbc0:	cmp    DWORD PTR [r8+0x18],ecx
   14000bbc4:	jg     0x14000b695
   14000bbca:	mov    ecx,DWORD PTR [rsi+0x18]
   14000bbcd:	mov    edx,r14d
   14000bbd0:	jmp    0x14000b9a4
   14000bbd5:	xor    ebx,ebx
   14000bbd7:	cmp    DWORD PTR [r8+0x8],ebx
   14000bbdb:	jl     0x14000b695
   14000bbe1:	cmp    DWORD PTR [r8+0x8],0x17
   14000bbe6:	jg     0x14000b695
   14000bbec:	cmp    DWORD PTR [r8+0x8],0xb
   14000bbf1:	mov    rax,QWORD PTR [rsp+0x78]
   14000bbf6:	jg     0x14000bc24
   14000bbf8:	mov    rdx,QWORD PTR [rax+0x130]
   14000bbff:	mov    rcx,QWORD PTR [rsp+0x70]
   14000bc04:	jmp    0x14000bc1d
   14000bc06:	mov    r8b,BYTE PTR [rdx]
   14000bc09:	cmp    r8b,bl
   14000bc0c:	je     0x14000bc4e
   14000bc0e:	mov    rax,QWORD PTR [r9]
   14000bc11:	add    rdx,r14
   14000bc14:	mov    BYTE PTR [rax],r8b
   14000bc17:	add    QWORD PTR [r9],r14
   14000bc1a:	dec    QWORD PTR [rcx]
   14000bc1d:	cmp    QWORD PTR [rcx],rbx
   14000bc20:	jne    0x14000bc06
   14000bc22:	jmp    0x14000bc4e
   14000bc24:	mov    r8,QWORD PTR [rax+0x138]
   14000bc2b:	mov    rdx,QWORD PTR [rsp+0x70]
   14000bc30:	jmp    0x14000bc49
   14000bc32:	mov    r9b,BYTE PTR [r8]
   14000bc35:	cmp    r9b,bl
   14000bc38:	je     0x14000bc4e
   14000bc3a:	mov    rcx,QWORD PTR [rdi]
   14000bc3d:	add    r8,r14
   14000bc40:	mov    BYTE PTR [rcx],r9b
   14000bc43:	add    QWORD PTR [rdi],r14
   14000bc46:	dec    QWORD PTR [rdx]
   14000bc49:	cmp    QWORD PTR [rdx],rbx
   14000bc4c:	jne    0x14000bc32
   14000bc4e:	mov    eax,r14d
   14000bc51:	jmp    0x14000b6b6
   14000bc56:	int3   
   14000bc57:	int3   
   14000bc58:	rex push rbp
   14000bc5a:	push   r12
   14000bc5c:	push   r13
   14000bc5e:	push   r14
   14000bc60:	push   r15
   14000bc62:	sub    rsp,0x70
   14000bc66:	lea    rbp,[rsp+0x40]
   14000bc6b:	mov    QWORD PTR [rbp+0x60],rbx
   14000bc6f:	mov    QWORD PTR [rbp+0x68],rsi
   14000bc73:	mov    QWORD PTR [rbp+0x70],rdi
   14000bc77:	mov    rax,QWORD PTR [rip+0x28622]        # 0x1400342a0
   14000bc7e:	xor    rax,rbp
   14000bc81:	mov    QWORD PTR [rbp+0x20],rax
   14000bc85:	mov    r15,QWORD PTR [rbp+0x88]
   14000bc8c:	mov    r14,r9
   14000bc8f:	mov    QWORD PTR [rbp+0x0],r8
   14000bc93:	mov    r9,r8
   14000bc96:	xor    r8d,r8d
   14000bc99:	mov    r13,rcx
   14000bc9c:	mov    QWORD PTR [rbp+0x18],rcx
   14000bca0:	mov    r11d,0x1
   14000bca6:	cmp    edx,r8d
   14000bca9:	je     0x14000bcc2
   14000bcab:	cmp    edx,r11d
   14000bcae:	je     0x14000bcb9
   14000bcb0:	mov    rdi,QWORD PTR [r15+0x150]
   14000bcb7:	jmp    0x14000bcc9
   14000bcb9:	mov    rdi,QWORD PTR [r15+0x148]
   14000bcc0:	jmp    0x14000bcc9
   14000bcc2:	mov    rdi,QWORD PTR [r15+0x140]
   14000bcc9:	cmp    DWORD PTR [r15+0x15c],r11d
   14000bcd0:	je     0x14000be37
   14000bcd6:	movzx  eax,WORD PTR [r9+0x14]
   14000bcdb:	mov    r13,QWORD PTR [rip+0x1b65e]        # 0x140027340
   14000bce2:	cmp    edx,0x2
   14000bce5:	cmovne r13,QWORD PTR [rip+0x1b64b]        # 0x140027338
   14000bced:	mov    ecx,0x76c
   14000bcf2:	mov    DWORD PTR [rsp+0x28],r8d
   14000bcf7:	add    ax,cx
   14000bcfa:	mov    ecx,DWORD PTR [r15+0x158]
   14000bd01:	mov    WORD PTR [rbp+0x16],r8w
   14000bd06:	mov    WORD PTR [rbp+0x8],ax
   14000bd0a:	movzx  eax,WORD PTR [r9+0x10]
   14000bd0f:	mov    QWORD PTR [rsp+0x20],r8
   14000bd14:	add    ax,r11w
   14000bd18:	lea    r8,[rbp+0x8]
   14000bd1c:	xor    edx,edx
   14000bd1e:	mov    WORD PTR [rbp+0xa],ax
   14000bd22:	movzx  eax,WORD PTR [r9+0xc]
   14000bd27:	mov    WORD PTR [rbp+0xe],ax
   14000bd2b:	movzx  eax,WORD PTR [r9+0x8]
   14000bd30:	mov    WORD PTR [rbp+0x10],ax
   14000bd34:	movzx  eax,WORD PTR [r9+0x4]
   14000bd39:	mov    WORD PTR [rbp+0x12],ax
   14000bd3d:	movzx  eax,WORD PTR [r9]
   14000bd41:	mov    r9,rdi
   14000bd44:	mov    WORD PTR [rbp+0x14],ax
   14000bd48:	call   r13
   14000bd4b:	xor    r8d,r8d
   14000bd4e:	mov    r12d,eax
   14000bd51:	cmp    eax,r8d
   14000bd54:	je     0x14000be29
   14000bd5a:	add    eax,0x10
   14000bd5d:	cmp    eax,0x400
   14000bd62:	jg     0x14000bd9e
   14000bd64:	cdqe   
   14000bd66:	lea    rcx,[rax+0xf]
   14000bd6a:	cmp    rcx,rax
   14000bd6d:	ja     0x14000bd79
   14000bd6f:	movabs rcx,0xffffffffffffff0
   14000bd79:	and    rcx,0xfffffffffffffff0
   14000bd7d:	mov    rax,rcx
   14000bd80:	call   0x140025f10
   14000bd85:	sub    rsp,rcx
   14000bd88:	lea    rbx,[rsp+0x40]
   14000bd8d:	cmp    rbx,r8
   14000bd90:	je     0x14000be29
   14000bd96:	mov    DWORD PTR [rbx],0xcccc
   14000bd9c:	jmp    0x14000bdb7
   14000bd9e:	movsxd rcx,eax
   14000bda1:	call   0x14000993c
   14000bda6:	xor    r8d,r8d
   14000bda9:	mov    rbx,rax
   14000bdac:	cmp    rax,r8
   14000bdaf:	je     0x14000bdbb
   14000bdb1:	mov    DWORD PTR [rax],0xdddd
   14000bdb7:	add    rbx,0x10
   14000bdbb:	cmp    rbx,r8
   14000bdbe:	je     0x14000be29
   14000bdc0:	mov    ecx,DWORD PTR [r15+0x158]
   14000bdc7:	lea    r8,[rbp+0x8]
   14000bdcb:	mov    r9,rdi
   14000bdce:	xor    edx,edx
   14000bdd0:	mov    DWORD PTR [rsp+0x28],r12d
   14000bdd5:	mov    rsi,rbx
   14000bdd8:	mov    QWORD PTR [rsp+0x20],rbx
   14000bddd:	call   r13
   14000bde0:	lea    r11d,[rax-0x1]
   14000bde4:	test   r11d,r11d
   14000bde7:	jle    0x14000be0e
   14000bde9:	mov    rdx,QWORD PTR [rbp+0x80]
   14000bdf0:	cmp    QWORD PTR [rdx],0x0
   14000bdf4:	jbe    0x14000be0e
   14000bdf6:	mov    al,BYTE PTR [rsi]
   14000bdf8:	mov    rcx,QWORD PTR [r14]
   14000bdfb:	dec    r11d
   14000bdfe:	mov    BYTE PTR [rcx],al
   14000be00:	inc    QWORD PTR [r14]
   14000be03:	dec    QWORD PTR [rdx]
   14000be06:	inc    rsi
   14000be09:	test   r11d,r11d
   14000be0c:	jg     0x14000bdf0
   14000be0e:	lea    rcx,[rbx-0x10]
   14000be12:	cmp    DWORD PTR [rcx],0xdddd
   14000be18:	jne    0x14000be1f
   14000be1a:	call   0x1400098ac
   14000be1f:	mov    eax,0x1
   14000be24:	jmp    0x14000c1b5
   14000be29:	mov    r9,QWORD PTR [rbp+0x0]
   14000be2d:	mov    r13,QWORD PTR [rbp+0x18]
   14000be31:	mov    r11d,0x1
   14000be37:	mov    al,BYTE PTR [rdi]
   14000be39:	cmp    al,r8b
   14000be3c:	je     0x14000c1b2
   14000be42:	mov    rsi,QWORD PTR [rbp+0x80]
   14000be49:	cmp    QWORD PTR [rsi],r8
   14000be4c:	je     0x14000c1b2
   14000be52:	mov    ebx,r8d
   14000be55:	mov    ecx,r8d
   14000be58:	mov    rdx,r8
   14000be5b:	mov    r12,rdi
   14000be5e:	add    r12,r11
   14000be61:	add    ecx,r11d
   14000be64:	add    rdx,r11
   14000be67:	cmp    BYTE PTR [r12],al
   14000be6b:	je     0x14000be5e
   14000be6d:	movsx  r8d,al
   14000be71:	cmp    r8d,0x64
   14000be75:	jg     0x14000bfe2
   14000be7b:	je     0x14000bfb2
   14000be81:	cmp    r8d,0x27
   14000be85:	je     0x14000bf27
   14000be8b:	cmp    r8d,0x41
   14000be8f:	je     0x14000bea7
   14000be91:	cmp    r8d,0x48
   14000be95:	je     0x14000bef0
   14000be97:	cmp    r8d,0x4d
   14000be9b:	je     0x14000bec0
   14000be9d:	cmp    r8d,0x61
   14000bea1:	jne    0x14000c129
   14000bea7:	lea    rdx,[rip+0x21fd2]        # 0x14002de80
   14000beae:	mov    rcx,rdi
   14000beb1:	call   0x140018814
   14000beb6:	test   eax,eax
   14000beb8:	jne    0x14000bf09
   14000beba:	lea    r12,[rdi+0x5]
   14000bebe:	jmp    0x14000bf20
   14000bec0:	sub    ecx,r11d
   14000bec3:	je     0x14000bee6
   14000bec5:	sub    ecx,r11d
   14000bec8:	je     0x14000bee9
   14000beca:	sub    ecx,r11d
   14000becd:	je     0x14000bedf
   14000becf:	cmp    ecx,r11d
   14000bed2:	jne    0x14000c129
   14000bed8:	mov    dl,0x42
   14000beda:	jmp    0x14000c172
   14000bedf:	mov    dl,0x62
   14000bee1:	jmp    0x14000c172
   14000bee6:	mov    ebx,r11d
   14000bee9:	mov    dl,0x6d
   14000beeb:	jmp    0x14000c172
   14000bef0:	sub    ecx,r11d
   14000bef3:	je     0x14000beff
   14000bef5:	cmp    ecx,r11d
   14000bef8:	je     0x14000bf02
   14000befa:	jmp    0x14000c129
   14000beff:	mov    ebx,r11d
   14000bf02:	mov    dl,0x48
   14000bf04:	jmp    0x14000c172
   14000bf09:	lea    rdx,[rip+0x21f6c]        # 0x14002de7c
   14000bf10:	mov    rcx,rdi
   14000bf13:	call   0x140018814
   14000bf18:	test   eax,eax
   14000bf1a:	jne    0x14000bf20
   14000bf1c:	lea    r12,[rdi+0x3]
   14000bf20:	mov    dl,0x70
   14000bf22:	jmp    0x14000c172
   14000bf27:	test   r11b,cl
   14000bf2a:	je     0x14000bfa4
   14000bf2c:	add    rdi,rdx
   14000bf2f:	xor    r8d,r8d
   14000bf32:	mov    al,BYTE PTR [rdi]
   14000bf34:	cmp    al,r8b
   14000bf37:	je     0x14000c1b2
   14000bf3d:	cmp    QWORD PTR [rsi],r8
   14000bf40:	je     0x14000c19e
   14000bf46:	cmp    al,0x27
   14000bf48:	je     0x14000bf9c
   14000bf4a:	movsx  ecx,al
   14000bf4d:	mov    rdx,r13
   14000bf50:	call   0x140018588
   14000bf55:	xor    r8d,r8d
   14000bf58:	lea    r11d,[r8+0x1]
   14000bf5c:	cmp    eax,r8d
   14000bf5f:	je     0x14000bf80
   14000bf61:	cmp    QWORD PTR [rsi],r11
   14000bf64:	jbe    0x14000bf80
   14000bf66:	cmp    BYTE PTR [rdi+0x1],r8b
   14000bf6a:	je     0x14000c1ae
   14000bf70:	mov    al,BYTE PTR [rdi]
   14000bf72:	mov    rcx,QWORD PTR [r14]
   14000bf75:	inc    rdi
   14000bf78:	mov    BYTE PTR [rcx],al
   14000bf7a:	add    QWORD PTR [r14],r11
   14000bf7d:	dec    QWORD PTR [rsi]
   14000bf80:	mov    al,BYTE PTR [rdi]
   14000bf82:	mov    rcx,QWORD PTR [r14]
   14000bf85:	add    rdi,r11
   14000bf88:	mov    BYTE PTR [rcx],al
   14000bf8a:	add    QWORD PTR [r14],r11
   14000bf8d:	dec    QWORD PTR [rsi]
   14000bf90:	mov    al,BYTE PTR [rdi]
   14000bf92:	cmp    al,r8b
   14000bf95:	jne    0x14000bf3d
   14000bf97:	jmp    0x14000c19e
   14000bf9c:	add    rdi,r11
   14000bf9f:	jmp    0x14000c19e
   14000bfa4:	movsxd rax,ecx
   14000bfa7:	add    rdi,rax
   14000bfaa:	xor    r8d,r8d
   14000bfad:	jmp    0x14000c19e
   14000bfb2:	sub    ecx,r11d
   14000bfb5:	je     0x14000bfd8
   14000bfb7:	sub    ecx,r11d
   14000bfba:	je     0x14000bfdb
   14000bfbc:	sub    ecx,r11d
   14000bfbf:	je     0x14000bfd1
   14000bfc1:	cmp    ecx,r11d
   14000bfc4:	jne    0x14000c129
   14000bfca:	mov    dl,0x41
   14000bfcc:	jmp    0x14000c172
   14000bfd1:	mov    dl,0x61
   14000bfd3:	jmp    0x14000c172
   14000bfd8:	mov    ebx,r11d
   14000bfdb:	mov    dl,0x64
   14000bfdd:	jmp    0x14000c172
   14000bfe2:	mov    edx,r8d
   14000bfe5:	sub    edx,0x68
   14000bfe8:	je     0x14000c11f
   14000bfee:	sub    edx,0x5
   14000bff1:	je     0x14000c10c
   14000bff7:	sub    edx,0x6
   14000bffa:	je     0x14000c0f9
   14000c000:	sub    edx,r11d
   14000c003:	je     0x14000c02a
   14000c005:	sub    edx,0x5
   14000c008:	jne    0x14000c129
   14000c00e:	cmp    ecx,0x2
   14000c011:	je     0x14000c023
   14000c013:	cmp    ecx,0x4
   14000c016:	jne    0x14000c129
   14000c01c:	mov    dl,0x59
   14000c01e:	jmp    0x14000c172
   14000c023:	mov    dl,0x79
   14000c025:	jmp    0x14000c172
   14000c02a:	cmp    DWORD PTR [r9+0x8],0xb
   14000c02f:	jg     0x14000c03a
   14000c031:	mov    rbx,QWORD PTR [r15+0x130]
   14000c038:	jmp    0x14000c041
   14000c03a:	mov    rbx,QWORD PTR [r15+0x138]
   14000c041:	xor    r8d,r8d
   14000c044:	cmp    ecx,r11d
   14000c047:	jne    0x14000c0ed
   14000c04d:	cmp    QWORD PTR [rsi],r8
   14000c050:	jbe    0x14000c0ed
   14000c056:	movsx  ecx,BYTE PTR [rbx]
   14000c059:	mov    rdx,r13
   14000c05c:	call   0x140018588
   14000c061:	xor    r8d,r8d
   14000c064:	lea    r11d,[r8+0x1]
   14000c068:	cmp    eax,r8d
   14000c06b:	je     0x14000c08c
   14000c06d:	cmp    QWORD PTR [rsi],r11
   14000c070:	jbe    0x14000c08c
   14000c072:	cmp    BYTE PTR [rbx+0x1],r8b
   14000c076:	je     0x14000c1ae
   14000c07c:	mov    al,BYTE PTR [rbx]
   14000c07e:	mov    rcx,QWORD PTR [r14]
   14000c081:	inc    rbx
   14000c084:	mov    BYTE PTR [rcx],al
   14000c086:	add    QWORD PTR [r14],r11
   14000c089:	dec    QWORD PTR [rsi]
   14000c08c:	mov    rcx,QWORD PTR [r14]
   14000c08f:	mov    al,BYTE PTR [rbx]
   14000c091:	mov    BYTE PTR [rcx],al
   14000c093:	add    QWORD PTR [r14],r11
   14000c096:	dec    QWORD PTR [rsi]
   14000c099:	jmp    0x14000c19b
   14000c09e:	cmp    QWORD PTR [rsi],r8
   14000c0a1:	jbe    0x14000c19b
   14000c0a7:	movsx  ecx,al
   14000c0aa:	mov    rdx,r13
   14000c0ad:	call   0x140018588
   14000c0b2:	xor    r8d,r8d
   14000c0b5:	lea    r11d,[r8+0x1]
   14000c0b9:	cmp    eax,r8d
   14000c0bc:	je     0x14000c0dd
   14000c0be:	cmp    QWORD PTR [rsi],r11
   14000c0c1:	jbe    0x14000c0dd
   14000c0c3:	cmp    BYTE PTR [rbx+0x1],r8b
   14000c0c7:	je     0x14000c1ae
   14000c0cd:	mov    al,BYTE PTR [rbx]
   14000c0cf:	mov    rcx,QWORD PTR [r14]
   14000c0d2:	inc    rbx
   14000c0d5:	mov    BYTE PTR [rcx],al
   14000c0d7:	add    QWORD PTR [r14],r11
   14000c0da:	dec    QWORD PTR [rsi]
   14000c0dd:	mov    al,BYTE PTR [rbx]
   14000c0df:	mov    rcx,QWORD PTR [r14]
   14000c0e2:	add    rbx,r11
   14000c0e5:	mov    BYTE PTR [rcx],al
   14000c0e7:	add    QWORD PTR [r14],r11
   14000c0ea:	dec    QWORD PTR [rsi]
   14000c0ed:	mov    al,BYTE PTR [rbx]
   14000c0ef:	cmp    al,r8b
   14000c0f2:	jne    0x14000c09e
   14000c0f4:	jmp    0x14000c19b
   14000c0f9:	sub    ecx,r11d
   14000c0fc:	je     0x14000c105
   14000c0fe:	cmp    ecx,r11d
   14000c101:	je     0x14000c108
   14000c103:	jmp    0x14000c129
   14000c105:	mov    ebx,r11d
   14000c108:	mov    dl,0x53
   14000c10a:	jmp    0x14000c172
   14000c10c:	sub    ecx,r11d
   14000c10f:	je     0x14000c118
   14000c111:	cmp    ecx,r11d
   14000c114:	je     0x14000c11b
   14000c116:	jmp    0x14000c129
   14000c118:	mov    ebx,r11d
   14000c11b:	mov    dl,0x4d
   14000c11d:	jmp    0x14000c172
   14000c11f:	sub    ecx,r11d
   14000c122:	je     0x14000c16d
   14000c124:	cmp    ecx,r11d
   14000c127:	je     0x14000c170
   14000c129:	mov    rdx,r13
   14000c12c:	mov    ecx,r8d
   14000c12f:	call   0x140018588
   14000c134:	xor    r8d,r8d
   14000c137:	lea    r11d,[r8+0x1]
   14000c13b:	cmp    eax,r8d
   14000c13e:	je     0x14000c15b
   14000c140:	cmp    QWORD PTR [rsi],r11
   14000c143:	jbe    0x14000c15b
   14000c145:	cmp    BYTE PTR [rdi+0x1],r8b
   14000c149:	je     0x14000c1ae
   14000c14b:	mov    al,BYTE PTR [rdi]
   14000c14d:	mov    rcx,QWORD PTR [r14]
   14000c150:	inc    rdi
   14000c153:	mov    BYTE PTR [rcx],al
   14000c155:	add    QWORD PTR [r14],r11
   14000c158:	dec    QWORD PTR [rsi]
   14000c15b:	mov    al,BYTE PTR [rdi]
   14000c15d:	mov    rcx,QWORD PTR [r14]
   14000c160:	add    rdi,r11
   14000c163:	mov    BYTE PTR [rcx],al
   14000c165:	add    QWORD PTR [r14],r11
   14000c168:	dec    QWORD PTR [rsi]
   14000c16b:	jmp    0x14000c19e
   14000c16d:	mov    ebx,r11d
   14000c170:	mov    dl,0x49
   14000c172:	mov    r8,QWORD PTR [rbp+0x0]
   14000c176:	mov    DWORD PTR [rsp+0x30],ebx
   14000c17a:	mov    r9,r14
   14000c17d:	mov    rcx,r13
   14000c180:	mov    QWORD PTR [rsp+0x28],r15
   14000c185:	mov    QWORD PTR [rsp+0x20],rsi
   14000c18a:	call   0x14000b5fc
   14000c18f:	xor    r8d,r8d
   14000c192:	cmp    eax,r8d
   14000c195:	je     0x14000c1ae
   14000c197:	lea    r11d,[r8+0x1]
   14000c19b:	mov    rdi,r12
   14000c19e:	mov    al,BYTE PTR [rdi]
   14000c1a0:	cmp    al,r8b
   14000c1a3:	je     0x14000c1b2
   14000c1a5:	mov    r9,QWORD PTR [rbp+0x0]
   14000c1a9:	jmp    0x14000be49
   14000c1ae:	xor    eax,eax
   14000c1b0:	jmp    0x14000c1b5
   14000c1b2:	mov    eax,r11d
   14000c1b5:	mov    rcx,QWORD PTR [rbp+0x20]
   14000c1b9:	xor    rcx,rbp
   14000c1bc:	call   0x140009080
   14000c1c1:	mov    rbx,QWORD PTR [rbp+0x60]
   14000c1c5:	mov    rsi,QWORD PTR [rbp+0x68]
   14000c1c9:	mov    rdi,QWORD PTR [rbp+0x70]
   14000c1cd:	lea    rsp,[rbp+0x30]
   14000c1d1:	pop    r15
   14000c1d3:	pop    r14
   14000c1d5:	pop    r13
   14000c1d7:	pop    r12
   14000c1d9:	pop    rbp
   14000c1da:	ret    
   14000c1db:	int3   
   14000c1dc:	mov    rax,rsp
   14000c1df:	mov    QWORD PTR [rax+0x10],rbx
   14000c1e3:	mov    QWORD PTR [rax+0x18],rbp
   14000c1e7:	mov    QWORD PTR [rax+0x8],rcx
   14000c1eb:	push   rsi
   14000c1ec:	push   rdi
   14000c1ed:	push   r12
   14000c1ef:	push   r13
   14000c1f1:	push   r14
   14000c1f3:	sub    rsp,0x70
   14000c1f7:	mov    rdi,rdx
   14000c1fa:	mov    rdx,QWORD PTR [rsp+0xc8]
   14000c202:	mov    r12,rcx
   14000c205:	lea    rcx,[rax-0x50]
   14000c209:	xor    r14d,r14d
   14000c20c:	mov    r13,r9
   14000c20f:	mov    rbx,r8
   14000c212:	mov    esi,r14d
   14000c215:	call   0x1400094b4
   14000c21a:	mov    r11,QWORD PTR [rsp+0xa0]
   14000c222:	cmp    r11,r14
   14000c225:	je     0x14000c39e
   14000c22b:	cmp    rdi,r14
   14000c22e:	je     0x14000c39e
   14000c234:	mov    BYTE PTR [r11],r14b
   14000c237:	cmp    rbx,r14
   14000c23a:	je     0x14000c39e
   14000c240:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000c248:	cmp    rbp,r14
   14000c24b:	jne    0x14000c259
   14000c24d:	mov    rax,QWORD PTR [rsp+0x48]
   14000c252:	mov    rbp,QWORD PTR [rax+0x158]
   14000c259:	mov    rax,rdi
   14000c25c:	cmp    rdi,r14
   14000c25f:	mov    QWORD PTR [rsp+0x40],rax
   14000c264:	jbe    0x14000c354
   14000c26a:	mov    cl,BYTE PTR [rbx]
   14000c26c:	cmp    cl,r14b
   14000c26f:	je     0x14000c371
   14000c275:	cmp    cl,0x25
   14000c278:	je     0x14000c2ed
   14000c27a:	lea    rdx,[rsp+0x48]
   14000c27f:	movsx  ecx,cl
   14000c282:	call   0x140018588
   14000c287:	cmp    eax,r14d
   14000c28a:	je     0x14000c2c7
   14000c28c:	cmp    QWORD PTR [rsp+0x40],0x1
   14000c292:	jbe    0x14000c2c7
   14000c294:	cmp    BYTE PTR [rbx+0x1],r14b
   14000c298:	je     0x14000c34f
   14000c29e:	mov    cl,BYTE PTR [rbx]
   14000c2a0:	mov    rax,QWORD PTR [rsp+0xa0]
   14000c2a8:	inc    rbx
   14000c2ab:	mov    BYTE PTR [rax],cl
   14000c2ad:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000c2b5:	inc    rcx
   14000c2b8:	dec    QWORD PTR [rsp+0x40]
   14000c2bd:	mov    QWORD PTR [rsp+0xa0],rcx
   14000c2c5:	jmp    0x14000c2cf
   14000c2c7:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000c2cf:	mov    al,BYTE PTR [rbx]
   14000c2d1:	inc    rbx
   14000c2d4:	mov    BYTE PTR [rcx],al
   14000c2d6:	mov    rax,QWORD PTR [rsp+0x40]
   14000c2db:	inc    QWORD PTR [rsp+0xa0]
   14000c2e3:	dec    rax
   14000c2e6:	mov    QWORD PTR [rsp+0x40],rax
   14000c2eb:	jmp    0x14000c340
   14000c2ed:	cmp    r13,r14
   14000c2f0:	je     0x14000c39e
   14000c2f6:	inc    rbx
   14000c2f9:	mov    eax,r14d
   14000c2fc:	cmp    BYTE PTR [rbx],0x23
   14000c2ff:	jne    0x14000c309
   14000c301:	mov    eax,0x1
   14000c306:	inc    rbx
   14000c309:	mov    dl,BYTE PTR [rbx]
   14000c30b:	mov    DWORD PTR [rsp+0x30],eax
   14000c30f:	lea    rax,[rsp+0x40]
   14000c314:	lea    r9,[rsp+0xa0]
   14000c31c:	lea    rcx,[rsp+0x48]
   14000c321:	mov    r8,r13
   14000c324:	mov    QWORD PTR [rsp+0x28],rbp
   14000c329:	mov    QWORD PTR [rsp+0x20],rax
   14000c32e:	call   0x14000b5fc
   14000c333:	cmp    eax,r14d
   14000c336:	je     0x14000c348
   14000c338:	mov    rax,QWORD PTR [rsp+0x40]
   14000c33d:	inc    rbx
   14000c340:	cmp    rax,r14
   14000c343:	jmp    0x14000c264
   14000c348:	cmp    QWORD PTR [rsp+0x40],r14
   14000c34d:	jbe    0x14000c354
   14000c34f:	mov    esi,0x1
   14000c354:	mov    BYTE PTR [r12],r14b
   14000c358:	cmp    esi,r14d
   14000c35b:	jne    0x14000c39e
   14000c35d:	cmp    QWORD PTR [rsp+0x40],r14
   14000c362:	ja     0x14000c39e
   14000c364:	call   0x14000f574
   14000c369:	mov    DWORD PTR [rax],0x22
   14000c36f:	jmp    0x14000c3bd
   14000c371:	cmp    rax,r14
   14000c374:	jbe    0x14000c354
   14000c376:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000c37e:	mov    BYTE PTR [rcx],r14b
   14000c381:	sub    rdi,QWORD PTR [rsp+0x40]
   14000c386:	cmp    BYTE PTR [rsp+0x60],r14b
   14000c38b:	je     0x14000c399
   14000c38d:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c392:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c399:	mov    rax,rdi
   14000c39c:	jmp    0x14000c3d2
   14000c39e:	call   0x14000f574
   14000c3a3:	xor    r9d,r9d
   14000c3a6:	xor    r8d,r8d
   14000c3a9:	xor    edx,edx
   14000c3ab:	xor    ecx,ecx
   14000c3ad:	mov    QWORD PTR [rsp+0x20],r14
   14000c3b2:	mov    DWORD PTR [rax],0x16
   14000c3b8:	call   0x14000e4d8
   14000c3bd:	cmp    BYTE PTR [rsp+0x60],r14b
   14000c3c2:	je     0x14000c3d0
   14000c3c4:	mov    rax,QWORD PTR [rsp+0x58]
   14000c3c9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c3d0:	xor    eax,eax
   14000c3d2:	lea    r11,[rsp+0x70]
   14000c3d7:	mov    rbx,QWORD PTR [r11+0x38]
   14000c3db:	mov    rbp,QWORD PTR [r11+0x40]
   14000c3df:	mov    rsp,r11
   14000c3e2:	pop    r14
   14000c3e4:	pop    r13
   14000c3e6:	pop    r12
   14000c3e8:	pop    rdi
   14000c3e9:	pop    rsi
   14000c3ea:	ret    
   14000c3eb:	int3   
   14000c3ec:	sub    rsp,0x38
   14000c3f0:	mov    rax,QWORD PTR [rsp+0x60]
   14000c3f5:	mov    QWORD PTR [rsp+0x28],rax
   14000c3fa:	and    QWORD PTR [rsp+0x20],0x0
   14000c400:	call   0x14000c1dc
   14000c405:	add    rsp,0x38
   14000c409:	ret    
   14000c40a:	int3   
   14000c40b:	int3   
   14000c40c:	sub    rsp,0x38
   14000c410:	and    QWORD PTR [rsp+0x28],0x0
   14000c416:	and    QWORD PTR [rsp+0x20],0x0
   14000c41c:	call   0x14000c1dc
   14000c421:	add    rsp,0x38
   14000c425:	ret    
   14000c426:	int3   
   14000c427:	int3   
   14000c428:	sub    rsp,0x38
   14000c42c:	mov    rax,QWORD PTR [rsp+0x60]
   14000c431:	and    QWORD PTR [rsp+0x28],0x0
   14000c437:	mov    QWORD PTR [rsp+0x20],rax
   14000c43c:	call   0x14000c1dc
   14000c441:	add    rsp,0x38
   14000c445:	ret    
   14000c446:	int3   
   14000c447:	int3   
   14000c448:	mov    QWORD PTR [rsp+0x10],rbx
   14000c44d:	mov    QWORD PTR [rsp+0x18],rsi
   14000c452:	mov    QWORD PTR [rsp+0x20],rdi
   14000c457:	push   r12
   14000c459:	sub    rsp,0x40
   14000c45d:	mov    QWORD PTR [rsp+0x30],rsp
   14000c462:	mov    r12d,r8d
   14000c465:	mov    rdi,rdx
   14000c468:	mov    rsi,rcx
   14000c46b:	xor    eax,eax
   14000c46d:	test   rcx,rcx
   14000c470:	setne  al
   14000c473:	test   eax,eax
   14000c475:	jne    0x14000c49e
   14000c477:	call   0x14000f574
   14000c47c:	mov    DWORD PTR [rax],0x16
   14000c482:	and    QWORD PTR [rsp+0x20],0x0
   14000c488:	xor    r9d,r9d
   14000c48b:	xor    r8d,r8d
   14000c48e:	xor    edx,edx
   14000c490:	xor    ecx,ecx
   14000c492:	call   0x14000e4d8
   14000c497:	xor    eax,eax
   14000c499:	jmp    0x14000c567
   14000c49e:	xor    eax,eax
   14000c4a0:	test   rdx,rdx
   14000c4a3:	setne  al
   14000c4a6:	test   eax,eax
   14000c4a8:	jne    0x14000c4d1
   14000c4aa:	call   0x14000f574
   14000c4af:	mov    DWORD PTR [rax],0x16
   14000c4b5:	and    QWORD PTR [rsp+0x20],0x0
   14000c4bb:	xor    r9d,r9d
   14000c4be:	xor    r8d,r8d
   14000c4c1:	xor    edx,edx
   14000c4c3:	xor    ecx,ecx
   14000c4c5:	call   0x14000e4d8
   14000c4ca:	xor    eax,eax
   14000c4cc:	jmp    0x14000c567
   14000c4d1:	xor    eax,eax
   14000c4d3:	cmp    BYTE PTR [rdx],al
   14000c4d5:	setne  al
   14000c4d8:	test   eax,eax
   14000c4da:	jne    0x14000c500
   14000c4dc:	call   0x14000f574
   14000c4e1:	mov    DWORD PTR [rax],0x16
   14000c4e7:	and    QWORD PTR [rsp+0x20],0x0
   14000c4ed:	xor    r9d,r9d
   14000c4f0:	xor    r8d,r8d
   14000c4f3:	xor    edx,edx
   14000c4f5:	xor    ecx,ecx
   14000c4f7:	call   0x14000e4d8
   14000c4fc:	xor    eax,eax
   14000c4fe:	jmp    0x14000c567
   14000c500:	call   0x140018c50
   14000c505:	mov    rbx,rax
   14000c508:	mov    QWORD PTR [rsp+0x50],rax
   14000c50d:	test   rax,rax
   14000c510:	jne    0x14000c521
   14000c512:	call   0x14000f574
   14000c517:	mov    DWORD PTR [rax],0x18
   14000c51d:	xor    eax,eax
   14000c51f:	jmp    0x14000c567
   14000c521:	cmp    BYTE PTR [rsi],0x0
   14000c524:	jne    0x14000c548
   14000c526:	call   0x14000f574
   14000c52b:	mov    DWORD PTR [rax],0x16
   14000c531:	lea    rdx,[rip+0xc]        # 0x14000c544
   14000c538:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c53d:	call   0x140018dd0
   14000c542:	nop
   14000c543:	nop
   14000c544:	xor    eax,eax
   14000c546:	jmp    0x14000c567
   14000c548:	mov    r9,rax
   14000c54b:	mov    r8d,r12d
   14000c54e:	mov    rdx,rdi
   14000c551:	mov    rcx,rsi
   14000c554:	call   0x140018988
   14000c559:	mov    rdi,rax
   14000c55c:	mov    rcx,rbx
   14000c55f:	call   0x14000a554
   14000c564:	mov    rax,rdi
   14000c567:	mov    rbx,QWORD PTR [rsp+0x58]
   14000c56c:	mov    rsi,QWORD PTR [rsp+0x60]
   14000c571:	mov    rdi,QWORD PTR [rsp+0x68]
   14000c576:	add    rsp,0x40
   14000c57a:	pop    r12
   14000c57c:	ret    
   14000c57d:	int3   
   14000c57e:	int3   
   14000c57f:	int3   
   14000c580:	mov    r8d,0x40
   14000c586:	jmp    0x14000c448
   14000c58b:	int3   
   14000c58c:	rex push rbx
   14000c58e:	sub    rsp,0x30
   14000c592:	mov    rax,r8
   14000c595:	mov    r9,rdx
   14000c598:	mov    rbx,rcx
   14000c59b:	test   rcx,rcx
   14000c59e:	jne    0x14000c5c5
   14000c5a0:	call   0x14000f574
   14000c5a5:	and    QWORD PTR [rsp+0x20],0x0
   14000c5ab:	mov    ebx,0x16
   14000c5b0:	xor    r9d,r9d
   14000c5b3:	xor    r8d,r8d
   14000c5b6:	xor    edx,edx
   14000c5b8:	xor    ecx,ecx
   14000c5ba:	mov    DWORD PTR [rax],ebx
   14000c5bc:	call   0x14000e4d8
   14000c5c1:	mov    eax,ebx
   14000c5c3:	jmp    0x14000c5e9
   14000c5c5:	mov    r8d,0x80
   14000c5cb:	mov    rdx,rax
   14000c5ce:	mov    rcx,r9
   14000c5d1:	call   0x14000c448
   14000c5d6:	mov    QWORD PTR [rbx],rax
   14000c5d9:	test   rax,rax
   14000c5dc:	je     0x14000c5e2
   14000c5de:	xor    eax,eax
   14000c5e0:	jmp    0x14000c5e9
   14000c5e2:	call   0x14000f574
   14000c5e7:	mov    eax,DWORD PTR [rax]
   14000c5e9:	add    rsp,0x30
   14000c5ed:	pop    rbx
   14000c5ee:	ret    
   14000c5ef:	int3   
   14000c5f0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c5f5:	mov    QWORD PTR [rsp+0x18],r8
   14000c5fa:	mov    QWORD PTR [rsp+0x20],r9
   14000c5ff:	push   rbx
   14000c600:	sub    rsp,0x60
   14000c604:	test   rdx,rdx
   14000c607:	jne    0x14000c62e
   14000c609:	call   0x14000f574
   14000c60e:	and    QWORD PTR [rsp+0x20],0x0
   14000c614:	xor    r9d,r9d
   14000c617:	xor    r8d,r8d
   14000c61a:	xor    edx,edx
   14000c61c:	xor    ecx,ecx
   14000c61e:	mov    DWORD PTR [rax],0x16
   14000c624:	call   0x14000e4d8
   14000c629:	or     eax,0xffffffff
   14000c62c:	jmp    0x14000c683
   14000c62e:	test   rcx,rcx
   14000c631:	je     0x14000c609
   14000c633:	mov    QWORD PTR [rsp+0x40],rcx
   14000c638:	mov    QWORD PTR [rsp+0x30],rcx
   14000c63d:	lea    r9,[rsp+0x80]
   14000c645:	lea    rcx,[rsp+0x30]
   14000c64a:	xor    r8d,r8d
   14000c64d:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   14000c655:	mov    DWORD PTR [rsp+0x48],0x42
   14000c65d:	call   0x140014214
   14000c662:	sub    DWORD PTR [rsp+0x38],0x1
   14000c667:	mov    ebx,eax
   14000c669:	js     0x14000c675
   14000c66b:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c670:	mov    BYTE PTR [rcx],0x0
   14000c673:	jmp    0x14000c681
   14000c675:	lea    rdx,[rsp+0x30]
   14000c67a:	xor    ecx,ecx
   14000c67c:	call   0x140015250
   14000c681:	mov    eax,ebx
   14000c683:	add    rsp,0x60
   14000c687:	pop    rbx
   14000c688:	ret    
   14000c689:	int3   
   14000c68a:	int3   
   14000c68b:	int3   
   14000c68c:	mov    QWORD PTR [rsp+0x18],r8
   14000c691:	mov    QWORD PTR [rsp+0x20],r9
   14000c696:	sub    rsp,0x28
   14000c69a:	lea    r9,[rsp+0x48]
   14000c69f:	call   0x140018e34
   14000c6a4:	add    rsp,0x28
   14000c6a8:	ret    
   14000c6a9:	int3   
   14000c6aa:	int3   
   14000c6ab:	int3   
   14000c6ac:	mov    r11,rsp
   14000c6af:	mov    QWORD PTR [r11+0x18],r8
   14000c6b3:	mov    QWORD PTR [r11+0x20],r9
   14000c6b7:	sub    rsp,0x38
   14000c6bb:	lea    rax,[r11+0x20]
   14000c6bf:	xor    r9d,r9d
   14000c6c2:	mov    QWORD PTR [r11-0x18],rax
   14000c6c6:	call   0x1400190d4
   14000c6cb:	add    rsp,0x38
   14000c6cf:	ret    
   14000c6d0:	mov    QWORD PTR [rsp+0x20],r9
   14000c6d5:	sub    rsp,0x38
   14000c6d9:	lea    rax,[rsp+0x60]
   14000c6de:	mov    QWORD PTR [rsp+0x20],rax
   14000c6e3:	call   0x1400190d4
   14000c6e8:	add    rsp,0x38
   14000c6ec:	ret    
   14000c6ed:	int3   
   14000c6ee:	int3   
   14000c6ef:	int3   
   14000c6f0:	mov    r11,rsp
   14000c6f3:	mov    QWORD PTR [r11+0x20],r9
   14000c6f7:	sub    rsp,0x38
   14000c6fb:	lea    rax,[r11+0x28]
   14000c6ff:	mov    QWORD PTR [r11-0x10],rax
   14000c703:	and    QWORD PTR [r11-0x18],0x0
   14000c708:	call   0x14001916c
   14000c70d:	add    rsp,0x38
   14000c711:	ret    
   14000c712:	int3   
   14000c713:	int3   
   14000c714:	mov    r11,rsp
   14000c717:	sub    rsp,0x38
   14000c71b:	lea    rax,[r11+0x30]
   14000c71f:	mov    QWORD PTR [r11-0x10],rax
   14000c723:	mov    rax,QWORD PTR [r11+0x28]
   14000c727:	mov    QWORD PTR [r11-0x18],rax
   14000c72b:	call   0x14001916c
   14000c730:	add    rsp,0x38
   14000c734:	ret    
   14000c735:	int3   
   14000c736:	int3   
   14000c737:	int3   
   14000c738:	mov    r11,rsp
   14000c73b:	mov    QWORD PTR [r11+0x18],r8
   14000c73f:	mov    QWORD PTR [r11+0x20],r9
   14000c743:	sub    rsp,0x38
   14000c747:	lea    rax,[r11+0x20]
   14000c74b:	xor    r9d,r9d
   14000c74e:	mov    QWORD PTR [r11-0x18],rax
   14000c752:	call   0x14001931c
   14000c757:	add    rsp,0x38
   14000c75b:	ret    
   14000c75c:	mov    QWORD PTR [rsp+0x20],r9
   14000c761:	sub    rsp,0x38
   14000c765:	lea    rax,[rsp+0x60]
   14000c76a:	mov    QWORD PTR [rsp+0x20],rax
   14000c76f:	call   0x14001931c
   14000c774:	add    rsp,0x38
   14000c778:	ret    
   14000c779:	int3   
   14000c77a:	int3   
   14000c77b:	int3   
   14000c77c:	mov    rax,rsp
   14000c77f:	mov    QWORD PTR [rax+0x8],rcx
   14000c783:	mov    QWORD PTR [rax+0x10],rdx
   14000c787:	mov    QWORD PTR [rax+0x18],r8
   14000c78b:	mov    QWORD PTR [rax+0x20],r9
   14000c78f:	sub    rsp,0x28
   14000c793:	lea    rdx,[rax+0x10]
   14000c797:	call   0x140018f1c
   14000c79c:	add    rsp,0x28
   14000c7a0:	ret    
   14000c7a1:	int3   
   14000c7a2:	int3   
   14000c7a3:	int3   
   14000c7a4:	mov    rax,rsp
   14000c7a7:	mov    QWORD PTR [rax+0x8],rcx
   14000c7ab:	mov    QWORD PTR [rax+0x10],rdx
   14000c7af:	mov    QWORD PTR [rax+0x18],r8
   14000c7b3:	mov    QWORD PTR [rax+0x20],r9
   14000c7b7:	sub    rsp,0x28
   14000c7bb:	lea    rdx,[rax+0x10]
   14000c7bf:	call   0x140018f4c
   14000c7c4:	add    rsp,0x28
   14000c7c8:	ret    
   14000c7c9:	int3   
   14000c7ca:	int3   
   14000c7cb:	int3   
   14000c7cc:	mov    rax,rsp
   14000c7cf:	mov    QWORD PTR [rax+0x10],rdx
   14000c7d3:	mov    QWORD PTR [rax+0x18],r8
   14000c7d7:	mov    QWORD PTR [rax+0x20],r9
   14000c7db:	sub    rsp,0x28
   14000c7df:	lea    r8,[rax+0x18]
   14000c7e3:	call   0x140018f34
   14000c7e8:	add    rsp,0x28
   14000c7ec:	ret    
   14000c7ed:	int3   
   14000c7ee:	int3   
   14000c7ef:	int3   
   14000c7f0:	mov    rax,rsp
   14000c7f3:	mov    QWORD PTR [rax+0x10],rdx
   14000c7f7:	mov    QWORD PTR [rax+0x18],r8
   14000c7fb:	mov    QWORD PTR [rax+0x20],r9
   14000c7ff:	sub    rsp,0x28
   14000c803:	lea    r8,[rax+0x18]
   14000c807:	call   0x140018f64
   14000c80c:	add    rsp,0x28
   14000c810:	ret    
   14000c811:	int3   
   14000c812:	int3   
   14000c813:	int3   
   14000c814:	rex push rbx
   14000c816:	sub    rsp,0x40
   14000c81a:	movsxd rbx,ecx
   14000c81d:	lea    rcx,[rsp+0x20]
   14000c822:	call   0x1400094b4
   14000c827:	mov    rax,QWORD PTR [rsp+0x20]
   14000c82c:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c833:	jle    0x14000c84b
   14000c835:	lea    r8,[rsp+0x20]
   14000c83a:	mov    edx,0x103
   14000c83f:	mov    ecx,ebx
   14000c841:	call   0x140011b14
   14000c846:	mov    r11d,eax
   14000c849:	jmp    0x14000c85e
   14000c84b:	mov    rax,QWORD PTR [rax+0x140]
   14000c852:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c857:	and    r11d,0x103
   14000c85e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c863:	je     0x14000c871
   14000c865:	mov    rax,QWORD PTR [rsp+0x30]
   14000c86a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c871:	mov    eax,r11d
   14000c874:	add    rsp,0x40
   14000c878:	pop    rbx
   14000c879:	ret    
   14000c87a:	int3   
   14000c87b:	int3   
   14000c87c:	rex push rbx
   14000c87e:	sub    rsp,0x40
   14000c882:	cmp    DWORD PTR [rip+0x29737],0x0        # 0x140035fc0
   14000c889:	movsxd rbx,ecx
   14000c88c:	jne    0x14000c8a0
   14000c88e:	mov    rax,QWORD PTR [rip+0x2881b]        # 0x1400350b0
   14000c895:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c899:	and    eax,0x103
   14000c89e:	jmp    0x14000c8f9
   14000c8a0:	lea    rcx,[rsp+0x20]
   14000c8a5:	xor    edx,edx
   14000c8a7:	call   0x1400094b4
   14000c8ac:	mov    rax,QWORD PTR [rsp+0x20]
   14000c8b1:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c8b8:	jle    0x14000c8d0
   14000c8ba:	lea    r8,[rsp+0x20]
   14000c8bf:	mov    edx,0x103
   14000c8c4:	mov    ecx,ebx
   14000c8c6:	call   0x140011b14
   14000c8cb:	mov    r11d,eax
   14000c8ce:	jmp    0x14000c8e3
   14000c8d0:	mov    rax,QWORD PTR [rax+0x140]
   14000c8d7:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c8dc:	and    r11d,0x103
   14000c8e3:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c8e8:	je     0x14000c8f6
   14000c8ea:	mov    rax,QWORD PTR [rsp+0x30]
   14000c8ef:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c8f6:	mov    eax,r11d
   14000c8f9:	add    rsp,0x40
   14000c8fd:	pop    rbx
   14000c8fe:	ret    
   14000c8ff:	int3   
   14000c900:	rex push rbx
   14000c902:	sub    rsp,0x40
   14000c906:	movsxd rbx,ecx
   14000c909:	lea    rcx,[rsp+0x20]
   14000c90e:	call   0x1400094b4
   14000c913:	mov    rax,QWORD PTR [rsp+0x20]
   14000c918:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c91f:	jle    0x14000c937
   14000c921:	lea    r8,[rsp+0x20]
   14000c926:	mov    edx,0x1
   14000c92b:	mov    ecx,ebx
   14000c92d:	call   0x140011b14
   14000c932:	mov    r11d,eax
   14000c935:	jmp    0x14000c947
   14000c937:	mov    rax,QWORD PTR [rax+0x140]
   14000c93e:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c943:	and    r11d,0x1
   14000c947:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c94c:	je     0x14000c95a
   14000c94e:	mov    rax,QWORD PTR [rsp+0x30]
   14000c953:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c95a:	mov    eax,r11d
   14000c95d:	add    rsp,0x40
   14000c961:	pop    rbx
   14000c962:	ret    
   14000c963:	int3   
   14000c964:	rex push rbx
   14000c966:	sub    rsp,0x40
   14000c96a:	cmp    DWORD PTR [rip+0x2964f],0x0        # 0x140035fc0
   14000c971:	movsxd rbx,ecx
   14000c974:	jne    0x14000c986
   14000c976:	mov    rax,QWORD PTR [rip+0x28733]        # 0x1400350b0
   14000c97d:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c981:	and    eax,0x1
   14000c984:	jmp    0x14000c9dc
   14000c986:	lea    rcx,[rsp+0x20]
   14000c98b:	xor    edx,edx
   14000c98d:	call   0x1400094b4
   14000c992:	mov    rax,QWORD PTR [rsp+0x20]
   14000c997:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c99e:	jle    0x14000c9b6
   14000c9a0:	lea    r8,[rsp+0x20]
   14000c9a5:	mov    edx,0x1
   14000c9aa:	mov    ecx,ebx
   14000c9ac:	call   0x140011b14
   14000c9b1:	mov    r11d,eax
   14000c9b4:	jmp    0x14000c9c6
   14000c9b6:	mov    rax,QWORD PTR [rax+0x140]
   14000c9bd:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c9c2:	and    r11d,0x1
   14000c9c6:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c9cb:	je     0x14000c9d9
   14000c9cd:	mov    rax,QWORD PTR [rsp+0x30]
   14000c9d2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c9d9:	mov    eax,r11d
   14000c9dc:	add    rsp,0x40
   14000c9e0:	pop    rbx
   14000c9e1:	ret    
   14000c9e2:	int3   
   14000c9e3:	int3   
   14000c9e4:	rex push rbx
   14000c9e6:	sub    rsp,0x40
   14000c9ea:	movsxd rbx,ecx
   14000c9ed:	lea    rcx,[rsp+0x20]
   14000c9f2:	call   0x1400094b4
   14000c9f7:	mov    rax,QWORD PTR [rsp+0x20]
   14000c9fc:	cmp    DWORD PTR [rax+0x10c],0x1
   14000ca03:	jle    0x14000ca1b
   14000ca05:	lea    r8,[rsp+0x20]
   14000ca0a:	mov    edx,0x2
   14000ca0f:	mov    ecx,ebx
   14000ca11:	call   0x140011b14
   14000ca16:	mov    r11d,eax
   14000ca19:	jmp    0x14000ca2b
   14000ca1b:	mov    rax,QWORD PTR [rax+0x140]
   14000ca22:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000ca27:	and    r11d,0x2
   14000ca2b:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ca30:	je     0x14000ca3e
   14000ca32:	mov    rax,QWORD PTR [rsp+0x30]
   14000ca37:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ca3e:	mov    eax,r11d
   14000ca41:	add    rsp,0x40
   14000ca45:	pop    rbx
   14000ca46:	ret    
   14000ca47:	int3   
   14000ca48:	rex push rbx
   14000ca4a:	sub    rsp,0x40
   14000ca4e:	cmp    DWORD PTR [rip+0x2956b],0x0        # 0x140035fc0
   14000ca55:	movsxd rbx,ecx
   14000ca58:	jne    0x14000ca6a
   14000ca5a:	mov    rax,QWORD PTR [rip+0x2864f]        # 0x1400350b0
   14000ca61:	movzx  eax,WORD PTR [rax+rbx*2]
   14000ca65:	and    eax,0x2
   14000ca68:	jmp    0x14000cac0
   14000ca6a:	lea    rcx,[rsp+0x20]
   14000ca6f:	xor    edx,edx
   14000ca71:	call   0x1400094b4
   14000ca76:	mov    rax,QWORD PTR [rsp+0x20]
   14000ca7b:	cmp    DWORD PTR [rax+0x10c],0x1
   14000ca82:	jle    0x14000ca9a
   14000ca84:	lea    r8,[rsp+0x20]
   14000ca89:	mov    edx,0x2
   14000ca8e:	mov    ecx,ebx
   14000ca90:	call   0x140011b14
   14000ca95:	mov    r11d,eax
   14000ca98:	jmp    0x14000caaa
   14000ca9a:	mov    rax,QWORD PTR [rax+0x140]
   14000caa1:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000caa6:	and    r11d,0x2
   14000caaa:	cmp    BYTE PTR [rsp+0x38],0x0
   14000caaf:	je     0x14000cabd
   14000cab1:	mov    rax,QWORD PTR [rsp+0x30]
   14000cab6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cabd:	mov    eax,r11d
   14000cac0:	add    rsp,0x40
   14000cac4:	pop    rbx
   14000cac5:	ret    
   14000cac6:	int3   
   14000cac7:	int3   
   14000cac8:	rex push rbx
   14000caca:	sub    rsp,0x40
   14000cace:	movsxd rbx,ecx
   14000cad1:	lea    rcx,[rsp+0x20]
   14000cad6:	call   0x1400094b4
   14000cadb:	mov    rax,QWORD PTR [rsp+0x20]
   14000cae0:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cae7:	jle    0x14000caff
   14000cae9:	lea    r8,[rsp+0x20]
   14000caee:	mov    edx,0x4
   14000caf3:	mov    ecx,ebx
   14000caf5:	call   0x140011b14
   14000cafa:	mov    r11d,eax
   14000cafd:	jmp    0x14000cb0f
   14000caff:	mov    rax,QWORD PTR [rax+0x140]
   14000cb06:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cb0b:	and    r11d,0x4
   14000cb0f:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cb14:	je     0x14000cb22
   14000cb16:	mov    rax,QWORD PTR [rsp+0x30]
   14000cb1b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cb22:	mov    eax,r11d
   14000cb25:	add    rsp,0x40
   14000cb29:	pop    rbx
   14000cb2a:	ret    
   14000cb2b:	int3   
   14000cb2c:	rex push rbx
   14000cb2e:	sub    rsp,0x40
   14000cb32:	cmp    DWORD PTR [rip+0x29487],0x0        # 0x140035fc0
   14000cb39:	movsxd rbx,ecx
   14000cb3c:	jne    0x14000cb4e
   14000cb3e:	mov    rax,QWORD PTR [rip+0x2856b]        # 0x1400350b0
   14000cb45:	movzx  eax,WORD PTR [rax+rbx*2]
   14000cb49:	and    eax,0x4
   14000cb4c:	jmp    0x14000cba4
   14000cb4e:	lea    rcx,[rsp+0x20]
   14000cb53:	xor    edx,edx
   14000cb55:	call   0x1400094b4
   14000cb5a:	mov    rax,QWORD PTR [rsp+0x20]
   14000cb5f:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cb66:	jle    0x14000cb7e
   14000cb68:	lea    r8,[rsp+0x20]
   14000cb6d:	mov    edx,0x4
   14000cb72:	mov    ecx,ebx
   14000cb74:	call   0x140011b14
   14000cb79:	mov    r11d,eax
   14000cb7c:	jmp    0x14000cb8e
   14000cb7e:	mov    rax,QWORD PTR [rax+0x140]
   14000cb85:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cb8a:	and    r11d,0x4
   14000cb8e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cb93:	je     0x14000cba1
   14000cb95:	mov    rax,QWORD PTR [rsp+0x30]
   14000cb9a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cba1:	mov    eax,r11d
   14000cba4:	add    rsp,0x40
   14000cba8:	pop    rbx
   14000cba9:	ret    
   14000cbaa:	int3   
   14000cbab:	int3   
   14000cbac:	rex push rbx
   14000cbae:	sub    rsp,0x40
   14000cbb2:	movsxd rbx,ecx
   14000cbb5:	lea    rcx,[rsp+0x20]
   14000cbba:	call   0x1400094b4
   14000cbbf:	mov    rax,QWORD PTR [rsp+0x20]
   14000cbc4:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cbcb:	jle    0x14000cbe3
   14000cbcd:	lea    r8,[rsp+0x20]
   14000cbd2:	mov    edx,0x80
   14000cbd7:	mov    ecx,ebx
   14000cbd9:	call   0x140011b14
   14000cbde:	mov    r11d,eax
   14000cbe1:	jmp    0x14000cbf6
   14000cbe3:	mov    rax,QWORD PTR [rax+0x140]
   14000cbea:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cbef:	and    r11d,0x80
   14000cbf6:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cbfb:	je     0x14000cc09
   14000cbfd:	mov    rax,QWORD PTR [rsp+0x30]
   14000cc02:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cc09:	mov    eax,r11d
   14000cc0c:	add    rsp,0x40
   14000cc10:	pop    rbx
   14000cc11:	ret    
   14000cc12:	int3   
   14000cc13:	int3   
   14000cc14:	rex push rbx
   14000cc16:	sub    rsp,0x40
   14000cc1a:	cmp    DWORD PTR [rip+0x2939f],0x0        # 0x140035fc0
   14000cc21:	movsxd rbx,ecx
   14000cc24:	jne    0x14000cc38
   14000cc26:	mov    rax,QWORD PTR [rip+0x28483]        # 0x1400350b0
   14000cc2d:	movzx  eax,WORD PTR [rax+rbx*2]
   14000cc31:	and    eax,0x80
   14000cc36:	jmp    0x14000cc91
   14000cc38:	lea    rcx,[rsp+0x20]
   14000cc3d:	xor    edx,edx
   14000cc3f:	call   0x1400094b4
   14000cc44:	mov    rax,QWORD PTR [rsp+0x20]
   14000cc49:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cc50:	jle    0x14000cc68
   14000cc52:	lea    r8,[rsp+0x20]
   14000cc57:	mov    edx,0x80
   14000cc5c:	mov    ecx,ebx
   14000cc5e:	call   0x140011b14
   14000cc63:	mov    r11d,eax
   14000cc66:	jmp    0x14000cc7b
   14000cc68:	mov    rax,QWORD PTR [rax+0x140]
   14000cc6f:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cc74:	and    r11d,0x80
   14000cc7b:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cc80:	je     0x14000cc8e
   14000cc82:	mov    rax,QWORD PTR [rsp+0x30]
   14000cc87:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cc8e:	mov    eax,r11d
   14000cc91:	add    rsp,0x40
   14000cc95:	pop    rbx
   14000cc96:	ret    
   14000cc97:	int3   
   14000cc98:	rex push rbx
   14000cc9a:	sub    rsp,0x40
   14000cc9e:	movsxd rbx,ecx
   14000cca1:	lea    rcx,[rsp+0x20]
   14000cca6:	call   0x1400094b4
   14000ccab:	mov    rax,QWORD PTR [rsp+0x20]
   14000ccb0:	cmp    DWORD PTR [rax+0x10c],0x1
   14000ccb7:	jle    0x14000cccf
   14000ccb9:	lea    r8,[rsp+0x20]
   14000ccbe:	mov    edx,0x8
   14000ccc3:	mov    ecx,ebx
   14000ccc5:	call   0x140011b14
   14000ccca:	mov    r11d,eax
   14000cccd:	jmp    0x14000ccdf
   14000cccf:	mov    rax,QWORD PTR [rax+0x140]
   14000ccd6:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000ccdb:	and    r11d,0x8
   14000ccdf:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cce4:	je     0x14000ccf2
   14000cce6:	mov    rax,QWORD PTR [rsp+0x30]
   14000cceb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ccf2:	mov    eax,r11d
   14000ccf5:	add    rsp,0x40
   14000ccf9:	pop    rbx
   14000ccfa:	ret    
   14000ccfb:	int3   
   14000ccfc:	rex push rbx
   14000ccfe:	sub    rsp,0x40
   14000cd02:	cmp    DWORD PTR [rip+0x292b7],0x0        # 0x140035fc0
   14000cd09:	movsxd rbx,ecx
   14000cd0c:	jne    0x14000cd1e
   14000cd0e:	mov    rax,QWORD PTR [rip+0x2839b]        # 0x1400350b0
   14000cd15:	movzx  eax,WORD PTR [rax+rbx*2]
   14000cd19:	and    eax,0x8
   14000cd1c:	jmp    0x14000cd74
   14000cd1e:	lea    rcx,[rsp+0x20]
   14000cd23:	xor    edx,edx
   14000cd25:	call   0x1400094b4
   14000cd2a:	mov    rax,QWORD PTR [rsp+0x20]
   14000cd2f:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cd36:	jle    0x14000cd4e
   14000cd38:	lea    r8,[rsp+0x20]
   14000cd3d:	mov    edx,0x8
   14000cd42:	mov    ecx,ebx
   14000cd44:	call   0x140011b14
   14000cd49:	mov    r11d,eax
   14000cd4c:	jmp    0x14000cd5e
   14000cd4e:	mov    rax,QWORD PTR [rax+0x140]
   14000cd55:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cd5a:	and    r11d,0x8
   14000cd5e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cd63:	je     0x14000cd71
   14000cd65:	mov    rax,QWORD PTR [rsp+0x30]
   14000cd6a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cd71:	mov    eax,r11d
   14000cd74:	add    rsp,0x40
   14000cd78:	pop    rbx
   14000cd79:	ret    
   14000cd7a:	int3   
   14000cd7b:	int3   
   14000cd7c:	rex push rbx
   14000cd7e:	sub    rsp,0x40
   14000cd82:	movsxd rbx,ecx
   14000cd85:	lea    rcx,[rsp+0x20]
   14000cd8a:	call   0x1400094b4
   14000cd8f:	mov    rax,QWORD PTR [rsp+0x20]
   14000cd94:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cd9b:	jle    0x14000cdb3
   14000cd9d:	lea    r8,[rsp+0x20]
   14000cda2:	mov    edx,0x10
   14000cda7:	mov    ecx,ebx
   14000cda9:	call   0x140011b14
   14000cdae:	mov    r11d,eax
   14000cdb1:	jmp    0x14000cdc3
   14000cdb3:	mov    rax,QWORD PTR [rax+0x140]
   14000cdba:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cdbf:	and    r11d,0x10
   14000cdc3:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cdc8:	je     0x14000cdd6
   14000cdca:	mov    rax,QWORD PTR [rsp+0x30]
   14000cdcf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cdd6:	mov    eax,r11d
   14000cdd9:	add    rsp,0x40
   14000cddd:	pop    rbx
   14000cdde:	ret    
   14000cddf:	int3   
   14000cde0:	rex push rbx
   14000cde2:	sub    rsp,0x40
   14000cde6:	cmp    DWORD PTR [rip+0x291d3],0x0        # 0x140035fc0
   14000cded:	movsxd rbx,ecx
   14000cdf0:	jne    0x14000ce02
   14000cdf2:	mov    rax,QWORD PTR [rip+0x282b7]        # 0x1400350b0
   14000cdf9:	movzx  eax,WORD PTR [rax+rbx*2]
   14000cdfd:	and    eax,0x10
   14000ce00:	jmp    0x14000ce58
   14000ce02:	lea    rcx,[rsp+0x20]
   14000ce07:	xor    edx,edx
   14000ce09:	call   0x1400094b4
   14000ce0e:	mov    rax,QWORD PTR [rsp+0x20]
   14000ce13:	cmp    DWORD PTR [rax+0x10c],0x1
   14000ce1a:	jle    0x14000ce32
   14000ce1c:	lea    r8,[rsp+0x20]
   14000ce21:	mov    edx,0x10
   14000ce26:	mov    ecx,ebx
   14000ce28:	call   0x140011b14
   14000ce2d:	mov    r11d,eax
   14000ce30:	jmp    0x14000ce42
   14000ce32:	mov    rax,QWORD PTR [rax+0x140]
   14000ce39:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000ce3e:	and    r11d,0x10
   14000ce42:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ce47:	je     0x14000ce55
   14000ce49:	mov    rax,QWORD PTR [rsp+0x30]
   14000ce4e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ce55:	mov    eax,r11d
   14000ce58:	add    rsp,0x40
   14000ce5c:	pop    rbx
   14000ce5d:	ret    
   14000ce5e:	int3   
   14000ce5f:	int3   
   14000ce60:	rex push rbx
   14000ce62:	sub    rsp,0x40
   14000ce66:	movsxd rbx,ecx
   14000ce69:	lea    rcx,[rsp+0x20]
   14000ce6e:	call   0x1400094b4
   14000ce73:	mov    rax,QWORD PTR [rsp+0x20]
   14000ce78:	cmp    DWORD PTR [rax+0x10c],0x1
   14000ce7f:	jle    0x14000ce97
   14000ce81:	lea    r8,[rsp+0x20]
   14000ce86:	mov    edx,0x107
   14000ce8b:	mov    ecx,ebx
   14000ce8d:	call   0x140011b14
   14000ce92:	mov    r11d,eax
   14000ce95:	jmp    0x14000ceaa
   14000ce97:	mov    rax,QWORD PTR [rax+0x140]
   14000ce9e:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cea3:	and    r11d,0x107
   14000ceaa:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ceaf:	je     0x14000cebd
   14000ceb1:	mov    rax,QWORD PTR [rsp+0x30]
   14000ceb6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cebd:	mov    eax,r11d
   14000cec0:	add    rsp,0x40
   14000cec4:	pop    rbx
   14000cec5:	ret    
   14000cec6:	int3   
   14000cec7:	int3   
   14000cec8:	rex push rbx
   14000ceca:	sub    rsp,0x40
   14000cece:	cmp    DWORD PTR [rip+0x290eb],0x0        # 0x140035fc0
   14000ced5:	movsxd rbx,ecx
   14000ced8:	jne    0x14000ceec
   14000ceda:	mov    rax,QWORD PTR [rip+0x281cf]        # 0x1400350b0
   14000cee1:	movzx  eax,WORD PTR [rax+rbx*2]
   14000cee5:	and    eax,0x107
   14000ceea:	jmp    0x14000cf45
   14000ceec:	lea    rcx,[rsp+0x20]
   14000cef1:	xor    edx,edx
   14000cef3:	call   0x1400094b4
   14000cef8:	mov    rax,QWORD PTR [rsp+0x20]
   14000cefd:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cf04:	jle    0x14000cf1c
   14000cf06:	lea    r8,[rsp+0x20]
   14000cf0b:	mov    edx,0x107
   14000cf10:	mov    ecx,ebx
   14000cf12:	call   0x140011b14
   14000cf17:	mov    r11d,eax
   14000cf1a:	jmp    0x14000cf2f
   14000cf1c:	mov    rax,QWORD PTR [rax+0x140]
   14000cf23:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cf28:	and    r11d,0x107
   14000cf2f:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cf34:	je     0x14000cf42
   14000cf36:	mov    rax,QWORD PTR [rsp+0x30]
   14000cf3b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cf42:	mov    eax,r11d
   14000cf45:	add    rsp,0x40
   14000cf49:	pop    rbx
   14000cf4a:	ret    
   14000cf4b:	int3   
   14000cf4c:	rex push rbx
   14000cf4e:	sub    rsp,0x40
   14000cf52:	movsxd rbx,ecx
   14000cf55:	lea    rcx,[rsp+0x20]
   14000cf5a:	call   0x1400094b4
   14000cf5f:	mov    rax,QWORD PTR [rsp+0x20]
   14000cf64:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cf6b:	jle    0x14000cf83
   14000cf6d:	lea    r8,[rsp+0x20]
   14000cf72:	mov    edx,0x157
   14000cf77:	mov    ecx,ebx
   14000cf79:	call   0x140011b14
   14000cf7e:	mov    r11d,eax
   14000cf81:	jmp    0x14000cf96
   14000cf83:	mov    rax,QWORD PTR [rax+0x140]
   14000cf8a:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000cf8f:	and    r11d,0x157
   14000cf96:	cmp    BYTE PTR [rsp+0x38],0x0
   14000cf9b:	je     0x14000cfa9
   14000cf9d:	mov    rax,QWORD PTR [rsp+0x30]
   14000cfa2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000cfa9:	mov    eax,r11d
   14000cfac:	add    rsp,0x40
   14000cfb0:	pop    rbx
   14000cfb1:	ret    
   14000cfb2:	int3   
   14000cfb3:	int3   
   14000cfb4:	rex push rbx
   14000cfb6:	sub    rsp,0x40
   14000cfba:	cmp    DWORD PTR [rip+0x28fff],0x0        # 0x140035fc0
   14000cfc1:	movsxd rbx,ecx
   14000cfc4:	jne    0x14000cfd8
   14000cfc6:	mov    rax,QWORD PTR [rip+0x280e3]        # 0x1400350b0
   14000cfcd:	movzx  eax,WORD PTR [rax+rbx*2]
   14000cfd1:	and    eax,0x157
   14000cfd6:	jmp    0x14000d031
   14000cfd8:	lea    rcx,[rsp+0x20]
   14000cfdd:	xor    edx,edx
   14000cfdf:	call   0x1400094b4
   14000cfe4:	mov    rax,QWORD PTR [rsp+0x20]
   14000cfe9:	cmp    DWORD PTR [rax+0x10c],0x1
   14000cff0:	jle    0x14000d008
   14000cff2:	lea    r8,[rsp+0x20]
   14000cff7:	mov    edx,0x157
   14000cffc:	mov    ecx,ebx
   14000cffe:	call   0x140011b14
   14000d003:	mov    r11d,eax
   14000d006:	jmp    0x14000d01b
   14000d008:	mov    rax,QWORD PTR [rax+0x140]
   14000d00f:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d014:	and    r11d,0x157
   14000d01b:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d020:	je     0x14000d02e
   14000d022:	mov    rax,QWORD PTR [rsp+0x30]
   14000d027:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d02e:	mov    eax,r11d
   14000d031:	add    rsp,0x40
   14000d035:	pop    rbx
   14000d036:	ret    
   14000d037:	int3   
   14000d038:	rex push rbx
   14000d03a:	sub    rsp,0x40
   14000d03e:	movsxd rbx,ecx
   14000d041:	lea    rcx,[rsp+0x20]
   14000d046:	call   0x1400094b4
   14000d04b:	mov    rax,QWORD PTR [rsp+0x20]
   14000d050:	cmp    DWORD PTR [rax+0x10c],0x1
   14000d057:	jle    0x14000d06f
   14000d059:	lea    r8,[rsp+0x20]
   14000d05e:	mov    edx,0x117
   14000d063:	mov    ecx,ebx
   14000d065:	call   0x140011b14
   14000d06a:	mov    r11d,eax
   14000d06d:	jmp    0x14000d082
   14000d06f:	mov    rax,QWORD PTR [rax+0x140]
   14000d076:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d07b:	and    r11d,0x117
   14000d082:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d087:	je     0x14000d095
   14000d089:	mov    rax,QWORD PTR [rsp+0x30]
   14000d08e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d095:	mov    eax,r11d
   14000d098:	add    rsp,0x40
   14000d09c:	pop    rbx
   14000d09d:	ret    
   14000d09e:	int3   
   14000d09f:	int3   
   14000d0a0:	rex push rbx
   14000d0a2:	sub    rsp,0x40
   14000d0a6:	cmp    DWORD PTR [rip+0x28f13],0x0        # 0x140035fc0
   14000d0ad:	movsxd rbx,ecx
   14000d0b0:	jne    0x14000d0c4
   14000d0b2:	mov    rax,QWORD PTR [rip+0x27ff7]        # 0x1400350b0
   14000d0b9:	movzx  eax,WORD PTR [rax+rbx*2]
   14000d0bd:	and    eax,0x117
   14000d0c2:	jmp    0x14000d11d
   14000d0c4:	lea    rcx,[rsp+0x20]
   14000d0c9:	xor    edx,edx
   14000d0cb:	call   0x1400094b4
   14000d0d0:	mov    rax,QWORD PTR [rsp+0x20]
   14000d0d5:	cmp    DWORD PTR [rax+0x10c],0x1
   14000d0dc:	jle    0x14000d0f4
   14000d0de:	lea    r8,[rsp+0x20]
   14000d0e3:	mov    edx,0x117
   14000d0e8:	mov    ecx,ebx
   14000d0ea:	call   0x140011b14
   14000d0ef:	mov    r11d,eax
   14000d0f2:	jmp    0x14000d107
   14000d0f4:	mov    rax,QWORD PTR [rax+0x140]
   14000d0fb:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d100:	and    r11d,0x117
   14000d107:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d10c:	je     0x14000d11a
   14000d10e:	mov    rax,QWORD PTR [rsp+0x30]
   14000d113:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d11a:	mov    eax,r11d
   14000d11d:	add    rsp,0x40
   14000d121:	pop    rbx
   14000d122:	ret    
   14000d123:	int3   
   14000d124:	rex push rbx
   14000d126:	sub    rsp,0x40
   14000d12a:	movsxd rbx,ecx
   14000d12d:	lea    rcx,[rsp+0x20]
   14000d132:	call   0x1400094b4
   14000d137:	mov    rax,QWORD PTR [rsp+0x20]
   14000d13c:	cmp    DWORD PTR [rax+0x10c],0x1
   14000d143:	jle    0x14000d15b
   14000d145:	lea    r8,[rsp+0x20]
   14000d14a:	mov    edx,0x20
   14000d14f:	mov    ecx,ebx
   14000d151:	call   0x140011b14
   14000d156:	mov    r11d,eax
   14000d159:	jmp    0x14000d16b
   14000d15b:	mov    rax,QWORD PTR [rax+0x140]
   14000d162:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d167:	and    r11d,0x20
   14000d16b:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d170:	je     0x14000d17e
   14000d172:	mov    rax,QWORD PTR [rsp+0x30]
   14000d177:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d17e:	mov    eax,r11d
   14000d181:	add    rsp,0x40
   14000d185:	pop    rbx
   14000d186:	ret    
   14000d187:	int3   
   14000d188:	rex push rbx
   14000d18a:	sub    rsp,0x40
   14000d18e:	cmp    DWORD PTR [rip+0x28e2b],0x0        # 0x140035fc0
   14000d195:	movsxd rbx,ecx
   14000d198:	jne    0x14000d1aa
   14000d19a:	mov    rax,QWORD PTR [rip+0x27f0f]        # 0x1400350b0
   14000d1a1:	movzx  eax,WORD PTR [rax+rbx*2]
   14000d1a5:	and    eax,0x20
   14000d1a8:	jmp    0x14000d200
   14000d1aa:	lea    rcx,[rsp+0x20]
   14000d1af:	xor    edx,edx
   14000d1b1:	call   0x1400094b4
   14000d1b6:	mov    rax,QWORD PTR [rsp+0x20]
   14000d1bb:	cmp    DWORD PTR [rax+0x10c],0x1
   14000d1c2:	jle    0x14000d1da
   14000d1c4:	lea    r8,[rsp+0x20]
   14000d1c9:	mov    edx,0x20
   14000d1ce:	mov    ecx,ebx
   14000d1d0:	call   0x140011b14
   14000d1d5:	mov    r11d,eax
   14000d1d8:	jmp    0x14000d1ea
   14000d1da:	mov    rax,QWORD PTR [rax+0x140]
   14000d1e1:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d1e6:	and    r11d,0x20
   14000d1ea:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d1ef:	je     0x14000d1fd
   14000d1f1:	mov    rax,QWORD PTR [rsp+0x30]
   14000d1f6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d1fd:	mov    eax,r11d
   14000d200:	add    rsp,0x40
   14000d204:	pop    rbx
   14000d205:	ret    
   14000d206:	int3   
   14000d207:	int3   
   14000d208:	xor    eax,eax
   14000d20a:	cmp    ecx,0x80
   14000d210:	setb   al
   14000d213:	ret    
   14000d214:	and    ecx,0x7f
   14000d217:	mov    eax,ecx
   14000d219:	ret    
   14000d21a:	int3   
   14000d21b:	int3   
   14000d21c:	rex push rbx
   14000d21e:	sub    rsp,0x40
   14000d222:	movsxd rbx,ecx
   14000d225:	lea    rcx,[rsp+0x20]
   14000d22a:	call   0x1400094b4
   14000d22f:	mov    rax,QWORD PTR [rsp+0x20]
   14000d234:	cmp    DWORD PTR [rax+0x10c],0x1
   14000d23b:	jle    0x14000d253
   14000d23d:	lea    r8,[rsp+0x20]
   14000d242:	mov    edx,0x103
   14000d247:	mov    ecx,ebx
   14000d249:	call   0x140011b14
   14000d24e:	mov    r11d,eax
   14000d251:	jmp    0x14000d266
   14000d253:	mov    rax,QWORD PTR [rax+0x140]
   14000d25a:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d25f:	and    r11d,0x103
   14000d266:	xor    ecx,ecx
   14000d268:	cmp    BYTE PTR [rsp+0x38],cl
   14000d26c:	je     0x14000d27a
   14000d26e:	mov    rax,QWORD PTR [rsp+0x30]
   14000d273:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d27a:	cmp    r11d,ecx
   14000d27d:	jne    0x14000d284
   14000d27f:	cmp    ebx,0x5f
   14000d282:	jne    0x14000d289
   14000d284:	mov    ecx,0x1
   14000d289:	mov    eax,ecx
   14000d28b:	add    rsp,0x40
   14000d28f:	pop    rbx
   14000d290:	ret    
   14000d291:	int3   
   14000d292:	int3   
   14000d293:	int3   
   14000d294:	rex push rbx
   14000d296:	sub    rsp,0x20
   14000d29a:	mov    ebx,ecx
   14000d29c:	call   0x14000c87c
   14000d2a1:	xor    edx,edx
   14000d2a3:	cmp    eax,edx
   14000d2a5:	jne    0x14000d2ac
   14000d2a7:	cmp    ebx,0x5f
   14000d2aa:	jne    0x14000d2b1
   14000d2ac:	mov    edx,0x1
   14000d2b1:	mov    eax,edx
   14000d2b3:	add    rsp,0x20
   14000d2b7:	pop    rbx
   14000d2b8:	ret    
   14000d2b9:	int3   
   14000d2ba:	int3   
   14000d2bb:	int3   
   14000d2bc:	rex push rbx
   14000d2be:	sub    rsp,0x40
   14000d2c2:	movsxd rbx,ecx
   14000d2c5:	lea    rcx,[rsp+0x20]
   14000d2ca:	call   0x1400094b4
   14000d2cf:	mov    rax,QWORD PTR [rsp+0x20]
   14000d2d4:	cmp    DWORD PTR [rax+0x10c],0x1
   14000d2db:	jle    0x14000d2f3
   14000d2dd:	lea    r8,[rsp+0x20]
   14000d2e2:	mov    edx,0x107
   14000d2e7:	mov    ecx,ebx
   14000d2e9:	call   0x140011b14
   14000d2ee:	mov    r11d,eax
   14000d2f1:	jmp    0x14000d306
   14000d2f3:	mov    rax,QWORD PTR [rax+0x140]
   14000d2fa:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000d2ff:	and    r11d,0x107
   14000d306:	xor    ecx,ecx
   14000d308:	cmp    BYTE PTR [rsp+0x38],cl
   14000d30c:	je     0x14000d31a
   14000d30e:	mov    rax,QWORD PTR [rsp+0x30]
   14000d313:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d31a:	cmp    r11d,ecx
   14000d31d:	jne    0x14000d324
   14000d31f:	cmp    ebx,0x5f
   14000d322:	jne    0x14000d329
   14000d324:	mov    ecx,0x1
   14000d329:	mov    eax,ecx
   14000d32b:	add    rsp,0x40
   14000d32f:	pop    rbx
   14000d330:	ret    
   14000d331:	int3   
   14000d332:	int3   
   14000d333:	int3   
   14000d334:	rex push rbx
   14000d336:	sub    rsp,0x20
   14000d33a:	mov    ebx,ecx
   14000d33c:	movzx  ecx,cl
   14000d33f:	call   0x14000cec8
   14000d344:	xor    edx,edx
   14000d346:	cmp    eax,edx
   14000d348:	jne    0x14000d34f
   14000d34a:	cmp    bl,0x5f
   14000d34d:	jne    0x14000d354
   14000d34f:	mov    edx,0x1
   14000d354:	mov    eax,edx
   14000d356:	add    rsp,0x20
   14000d35a:	pop    rbx
   14000d35b:	ret    
   14000d35c:	int3   
   14000d35d:	int3   
   14000d35e:	int3   
   14000d35f:	int3   
   14000d360:	cmp    rcx,rdx
   14000d363:	je     0x14000d389
   14000d365:	test   r8,r8
   14000d368:	je     0x14000d389
   14000d36a:	nop    WORD PTR [rax+rax*1+0x0]
   14000d370:	movzx  eax,BYTE PTR [rdx]
   14000d373:	movzx  r9d,BYTE PTR [rcx]
   14000d377:	inc    rdx
   14000d37a:	mov    BYTE PTR [rcx],al
   14000d37c:	mov    BYTE PTR [rdx-0x1],r9b
   14000d380:	inc    rcx
   14000d383:	sub    r8,0x1
   14000d387:	jne    0x14000d370
   14000d389:	repz ret 
   14000d38b:	int3   
   14000d38c:	int3   
   14000d38d:	int3   
   14000d38e:	int3   
   14000d38f:	int3   
   14000d390:	cmp    rdx,rcx
   14000d393:	jbe    0x14000d44c
   14000d399:	mov    QWORD PTR [rsp+0x20],rbp
   14000d39e:	push   rdi
   14000d39f:	push   r12
   14000d3a1:	push   r13
   14000d3a3:	sub    rsp,0x20
   14000d3a7:	mov    QWORD PTR [rsp+0x40],rbx
   14000d3ac:	mov    QWORD PTR [rsp+0x48],rsi
   14000d3b1:	mov    QWORD PTR [rsp+0x50],r14
   14000d3b6:	lea    r14,[rcx+r8*1]
   14000d3ba:	mov    r13,r9
   14000d3bd:	mov    rbp,r8
   14000d3c0:	mov    rdi,rdx
   14000d3c3:	mov    r12,rcx
   14000d3c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d3d0:	mov    rbx,r12
   14000d3d3:	mov    rsi,r14
   14000d3d6:	cmp    r14,rdi
   14000d3d9:	ja     0x14000d3f7
   14000d3db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d3e0:	mov    rdx,rbx
   14000d3e3:	mov    rcx,rsi
   14000d3e6:	call   r13
   14000d3e9:	test   eax,eax
   14000d3eb:	cmovg  rbx,rsi
   14000d3ef:	add    rsi,rbp
   14000d3f2:	cmp    rsi,rdi
   14000d3f5:	jbe    0x14000d3e0
   14000d3f7:	mov    r8,rbp
   14000d3fa:	mov    rdx,rdi
   14000d3fd:	cmp    rbx,rdi
   14000d400:	je     0x14000d427
   14000d402:	test   rbp,rbp
   14000d405:	je     0x14000d427
   14000d407:	sub    rbx,rdi
   14000d40a:	nop    WORD PTR [rax+rax*1+0x0]
   14000d410:	movzx  eax,BYTE PTR [rdx]
   14000d413:	movzx  ecx,BYTE PTR [rbx+rdx*1]
   14000d417:	inc    rdx
   14000d41a:	sub    r8,0x1
   14000d41e:	mov    BYTE PTR [rbx+rdx*1-0x1],al
   14000d422:	mov    BYTE PTR [rdx-0x1],cl
   14000d425:	jne    0x14000d410
   14000d427:	sub    rdi,rbp
   14000d42a:	cmp    rdi,r12
   14000d42d:	ja     0x14000d3d0
   14000d42f:	mov    r14,QWORD PTR [rsp+0x50]
   14000d434:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d439:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d43e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d443:	add    rsp,0x20
   14000d447:	pop    r13
   14000d449:	pop    r12
   14000d44b:	pop    rdi
   14000d44c:	repz ret 
   14000d44e:	int3   
   14000d44f:	int3   
   14000d450:	rex push rbp
   14000d452:	push   r12
   14000d454:	push   r14
   14000d456:	push   r15
   14000d458:	sub    rsp,0x418
   14000d45f:	mov    r12,r9
   14000d462:	mov    rbp,r8
   14000d465:	mov    r14,rcx
   14000d468:	test   rcx,rcx
   14000d46b:	jne    0x14000d4a3
   14000d46d:	test   rdx,rdx
   14000d470:	je     0x14000d4a3
   14000d472:	call   0x14000f574
   14000d477:	xor    r15d,r15d
   14000d47a:	xor    r9d,r9d
   14000d47d:	xor    r8d,r8d
   14000d480:	xor    edx,edx
   14000d482:	xor    ecx,ecx
   14000d484:	mov    DWORD PTR [rax],0x16
   14000d48a:	mov    QWORD PTR [rsp+0x20],r15
   14000d48f:	call   0x14000e4d8
   14000d494:	add    rsp,0x418
   14000d49b:	pop    r15
   14000d49d:	pop    r14
   14000d49f:	pop    r12
   14000d4a1:	pop    rbp
   14000d4a2:	ret    
   14000d4a3:	test   r8,r8
   14000d4a6:	je     0x14000d472
   14000d4a8:	test   r9,r9
   14000d4ab:	je     0x14000d472
   14000d4ad:	cmp    rdx,0x2
   14000d4b1:	jb     0x14000d742
   14000d4b7:	mov    QWORD PTR [rsp+0x440],rbx
   14000d4bf:	mov    QWORD PTR [rsp+0x448],rsi
   14000d4c7:	mov    QWORD PTR [rsp+0x450],rdi
   14000d4cf:	mov    QWORD PTR [rsp+0x410],r13
   14000d4d7:	lea    r13,[rdx-0x1]
   14000d4db:	imul   r13,rbp
   14000d4df:	add    r13,rcx
   14000d4e2:	xor    r15d,r15d
   14000d4e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d4f0:	xor    edx,edx
   14000d4f2:	mov    rax,r13
   14000d4f5:	sub    rax,r14
   14000d4f8:	div    rbp
   14000d4fb:	lea    rsi,[rax+0x1]
   14000d4ff:	cmp    rsi,0x8
   14000d503:	ja     0x14000d52f
   14000d505:	mov    r9,r12
   14000d508:	mov    r8,rbp
   14000d50b:	mov    rdx,r13
   14000d50e:	mov    rcx,r14
   14000d511:	call   0x14000d390
   14000d516:	sub    r15,0x1
   14000d51a:	js     0x14000d722
   14000d520:	mov    r14,QWORD PTR [rsp+r15*8+0x30]
   14000d525:	mov    r13,QWORD PTR [rsp+r15*8+0x220]
   14000d52d:	jmp    0x14000d4f0
   14000d52f:	shr    rsi,1
   14000d532:	mov    rcx,r14
   14000d535:	imul   rsi,rbp
   14000d539:	add    rsi,r14
   14000d53c:	mov    rdx,rsi
   14000d53f:	call   r12
   14000d542:	test   eax,eax
   14000d544:	jle    0x14000d579
   14000d546:	mov    r8,rbp
   14000d549:	mov    rdx,rsi
   14000d54c:	cmp    r14,rsi
   14000d54f:	je     0x14000d579
   14000d551:	mov    r9,r14
   14000d554:	sub    r9,rsi
   14000d557:	nop    WORD PTR [rax+rax*1+0x0]
   14000d560:	movzx  eax,BYTE PTR [rdx]
   14000d563:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14000d568:	inc    rdx
   14000d56b:	sub    r8,0x1
   14000d56f:	mov    BYTE PTR [r9+rdx*1-0x1],al
   14000d574:	mov    BYTE PTR [rdx-0x1],cl
   14000d577:	jne    0x14000d560
   14000d579:	mov    rdx,r13
   14000d57c:	mov    rcx,r14
   14000d57f:	call   r12
   14000d582:	test   eax,eax
   14000d584:	jle    0x14000d5b9
   14000d586:	mov    r8,rbp
   14000d589:	mov    rdx,r13
   14000d58c:	cmp    r14,r13
   14000d58f:	je     0x14000d5b9
   14000d591:	mov    r9,r14
   14000d594:	sub    r9,r13
   14000d597:	nop    WORD PTR [rax+rax*1+0x0]
   14000d5a0:	movzx  eax,BYTE PTR [rdx]
   14000d5a3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14000d5a8:	inc    rdx
   14000d5ab:	sub    r8,0x1
   14000d5af:	mov    BYTE PTR [r9+rdx*1-0x1],al
   14000d5b4:	mov    BYTE PTR [rdx-0x1],cl
   14000d5b7:	jne    0x14000d5a0
   14000d5b9:	mov    rdx,r13
   14000d5bc:	mov    rcx,rsi
   14000d5bf:	call   r12
   14000d5c2:	test   eax,eax
   14000d5c4:	jle    0x14000d5f9
   14000d5c6:	mov    r8,rbp
   14000d5c9:	mov    rdx,r13
   14000d5cc:	cmp    rsi,r13
   14000d5cf:	je     0x14000d5f9
   14000d5d1:	mov    r9,rsi
   14000d5d4:	sub    r9,r13
   14000d5d7:	nop    WORD PTR [rax+rax*1+0x0]
   14000d5e0:	movzx  eax,BYTE PTR [rdx]
   14000d5e3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14000d5e8:	inc    rdx
   14000d5eb:	sub    r8,0x1
   14000d5ef:	mov    BYTE PTR [r9+rdx*1-0x1],al
   14000d5f4:	mov    BYTE PTR [rdx-0x1],cl
   14000d5f7:	jne    0x14000d5e0
   14000d5f9:	mov    rbx,r14
   14000d5fc:	mov    rdi,r13
   14000d5ff:	nop
   14000d600:	cmp    rsi,rbx
   14000d603:	jbe    0x14000d620
   14000d605:	add    rbx,rbp
   14000d608:	cmp    rbx,rsi
   14000d60b:	jae    0x14000d620
   14000d60d:	mov    rdx,rsi
   14000d610:	mov    rcx,rbx
   14000d613:	call   r12
   14000d616:	test   eax,eax
   14000d618:	jle    0x14000d605
   14000d61a:	cmp    rsi,rbx
   14000d61d:	ja     0x14000d635
   14000d61f:	nop
   14000d620:	add    rbx,rbp
   14000d623:	cmp    rbx,r13
   14000d626:	ja     0x14000d635
   14000d628:	mov    rdx,rsi
   14000d62b:	mov    rcx,rbx
   14000d62e:	call   r12
   14000d631:	test   eax,eax
   14000d633:	jle    0x14000d620
   14000d635:	sub    rdi,rbp
   14000d638:	cmp    rdi,rsi
   14000d63b:	jbe    0x14000d64a
   14000d63d:	mov    rdx,rsi
   14000d640:	mov    rcx,rdi
   14000d643:	call   r12
   14000d646:	test   eax,eax
   14000d648:	jg     0x14000d635
   14000d64a:	cmp    rdi,rbx
   14000d64d:	jb     0x14000d686
   14000d64f:	mov    r9,rbp
   14000d652:	mov    rdx,rdi
   14000d655:	cmp    rbx,rdi
   14000d658:	je     0x14000d679
   14000d65a:	mov    r8,rbx
   14000d65d:	sub    r8,rdi
   14000d660:	movzx  eax,BYTE PTR [rdx]
   14000d663:	movzx  ecx,BYTE PTR [r8+rdx*1]
   14000d668:	inc    rdx
   14000d66b:	sub    r9,0x1
   14000d66f:	mov    BYTE PTR [r8+rdx*1-0x1],al
   14000d674:	mov    BYTE PTR [rdx-0x1],cl
   14000d677:	jne    0x14000d660
   14000d679:	cmp    rsi,rdi
   14000d67c:	jne    0x14000d600
   14000d67e:	mov    rsi,rbx
   14000d681:	jmp    0x14000d600
   14000d686:	add    rdi,rbp
   14000d689:	cmp    rsi,rdi
   14000d68c:	jae    0x14000d6b0
   14000d68e:	xchg   ax,ax
   14000d690:	sub    rdi,rbp
   14000d693:	cmp    rdi,rsi
   14000d696:	jbe    0x14000d6b0
   14000d698:	mov    rdx,rsi
   14000d69b:	mov    rcx,rdi
   14000d69e:	call   r12
   14000d6a1:	test   eax,eax
   14000d6a3:	je     0x14000d690
   14000d6a5:	cmp    rsi,rdi
   14000d6a8:	jb     0x14000d6c5
   14000d6aa:	nop    WORD PTR [rax+rax*1+0x0]
   14000d6b0:	sub    rdi,rbp
   14000d6b3:	cmp    rdi,r14
   14000d6b6:	jbe    0x14000d6c5
   14000d6b8:	mov    rdx,rsi
   14000d6bb:	mov    rcx,rdi
   14000d6be:	call   r12
   14000d6c1:	test   eax,eax
   14000d6c3:	je     0x14000d6b0
   14000d6c5:	mov    rcx,r13
   14000d6c8:	mov    rax,rdi
   14000d6cb:	sub    rcx,rbx
   14000d6ce:	sub    rax,r14
   14000d6d1:	cmp    rax,rcx
   14000d6d4:	jl     0x14000d6fc
   14000d6d6:	cmp    r14,rdi
   14000d6d9:	jae    0x14000d6eb
   14000d6db:	mov    QWORD PTR [rsp+r15*8+0x30],r14
   14000d6e0:	mov    QWORD PTR [rsp+r15*8+0x220],rdi
   14000d6e8:	inc    r15
   14000d6eb:	cmp    rbx,r13
   14000d6ee:	jae    0x14000d516
   14000d6f4:	mov    r14,rbx
   14000d6f7:	jmp    0x14000d4f0
   14000d6fc:	cmp    rbx,r13
   14000d6ff:	jae    0x14000d711
   14000d701:	mov    QWORD PTR [rsp+r15*8+0x30],rbx
   14000d706:	mov    QWORD PTR [rsp+r15*8+0x220],r13
   14000d70e:	inc    r15
   14000d711:	cmp    r14,rdi
   14000d714:	jae    0x14000d516
   14000d71a:	mov    r13,rdi
   14000d71d:	jmp    0x14000d4f0
   14000d722:	mov    rdi,QWORD PTR [rsp+0x450]
   14000d72a:	mov    rsi,QWORD PTR [rsp+0x448]
   14000d732:	mov    rbx,QWORD PTR [rsp+0x440]
   14000d73a:	mov    r13,QWORD PTR [rsp+0x410]
   14000d742:	add    rsp,0x418
   14000d749:	pop    r15
   14000d74b:	pop    r14
   14000d74d:	pop    r12
   14000d74f:	pop    rbp
   14000d750:	ret    
   14000d751:	int3   
   14000d752:	int3   
   14000d753:	int3   
   14000d754:	mov    QWORD PTR [rsp+0x8],rbx
   14000d759:	mov    QWORD PTR [rsp+0x10],rsi
   14000d75e:	push   rdi
   14000d75f:	sub    rsp,0x20
   14000d763:	mov    rbx,rdx
   14000d766:	mov    rdi,rcx
   14000d769:	test   rcx,rcx
   14000d76c:	jne    0x14000d778
   14000d76e:	mov    rcx,rdx
   14000d771:	call   0x14000993c
   14000d776:	jmp    0x14000d7e2
   14000d778:	test   rdx,rdx
   14000d77b:	jne    0x14000d784
   14000d77d:	call   0x1400098ac
   14000d782:	jmp    0x14000d7e0
   14000d784:	cmp    rdx,0xffffffffffffffe0
   14000d788:	ja     0x14000d7cd
   14000d78a:	mov    rcx,QWORD PTR [rip+0x28857]        # 0x140035fe8
   14000d791:	mov    eax,0x1
   14000d796:	test   rbx,rbx
   14000d799:	cmove  rbx,rax
   14000d79d:	mov    r8,rdi
   14000d7a0:	xor    edx,edx
   14000d7a2:	mov    r9,rbx
   14000d7a5:	call   QWORD PTR [rip+0x19b9d]        # 0x140027348
   14000d7ab:	mov    rsi,rax
   14000d7ae:	test   rax,rax
   14000d7b1:	jne    0x14000d822
   14000d7b3:	cmp    DWORD PTR [rip+0x28b57],eax        # 0x140036310
   14000d7b9:	je     0x14000d80b
   14000d7bb:	mov    rcx,rbx
   14000d7be:	call   0x140011fc4
   14000d7c3:	test   eax,eax
   14000d7c5:	je     0x14000d7f2
   14000d7c7:	cmp    rbx,0xffffffffffffffe0
   14000d7cb:	jbe    0x14000d78a
   14000d7cd:	mov    rcx,rbx
   14000d7d0:	call   0x140011fc4
   14000d7d5:	call   0x14000f574
   14000d7da:	mov    DWORD PTR [rax],0xc
   14000d7e0:	xor    eax,eax
   14000d7e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d7e7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d7ec:	add    rsp,0x20
   14000d7f0:	pop    rdi
   14000d7f1:	ret    
   14000d7f2:	call   0x14000f574
   14000d7f7:	mov    rbx,rax
   14000d7fa:	call   QWORD PTR [rip+0x19a70]        # 0x140027270
   14000d800:	mov    ecx,eax
   14000d802:	call   0x14000f52c
   14000d807:	mov    DWORD PTR [rbx],eax
   14000d809:	jmp    0x14000d7e0
   14000d80b:	call   0x14000f574
   14000d810:	mov    rbx,rax
   14000d813:	call   QWORD PTR [rip+0x19a57]        # 0x140027270
   14000d819:	mov    ecx,eax
   14000d81b:	call   0x14000f52c
   14000d820:	mov    DWORD PTR [rbx],eax
   14000d822:	mov    rax,rsi
   14000d825:	jmp    0x14000d7e2
   14000d827:	int3   
   14000d828:	rex push rbx
   14000d82a:	push   rsi
   14000d82b:	push   rdi
   14000d82c:	push   r12
   14000d82e:	push   r13
   14000d830:	sub    rsp,0x40
   14000d834:	mov    rbx,r8
   14000d837:	mov    edi,edx
   14000d839:	mov    r13,rcx
   14000d83c:	mov    r12,rcx
   14000d83f:	mov    rsi,rcx
   14000d842:	test   rcx,rcx
   14000d845:	jne    0x14000d871
   14000d847:	test   edx,edx
   14000d849:	je     0x14000d871
   14000d84b:	call   0x14000f574
   14000d850:	mov    DWORD PTR [rax],0x16
   14000d856:	and    QWORD PTR [rsp+0x20],rsi
   14000d85b:	xor    r9d,r9d
   14000d85e:	xor    r8d,r8d
   14000d861:	xor    edx,edx
   14000d863:	xor    ecx,ecx
   14000d865:	call   0x14000e4d8
   14000d86a:	xor    eax,eax
   14000d86c:	jmp    0x14000d9fc
   14000d871:	xor    eax,eax
   14000d873:	test   edx,edx
   14000d875:	setns  al
   14000d878:	test   eax,eax
   14000d87a:	jne    0x14000d8a3
   14000d87c:	call   0x14000f574
   14000d881:	mov    DWORD PTR [rax],0x16
   14000d887:	and    QWORD PTR [rsp+0x20],0x0
   14000d88d:	xor    r9d,r9d
   14000d890:	xor    r8d,r8d
   14000d893:	xor    edx,edx
   14000d895:	xor    ecx,ecx
   14000d897:	call   0x14000e4d8
   14000d89c:	xor    eax,eax
   14000d89e:	jmp    0x14000d9fc
   14000d8a3:	xor    eax,eax
   14000d8a5:	test   rbx,rbx
   14000d8a8:	setne  al
   14000d8ab:	test   eax,eax
   14000d8ad:	jne    0x14000d8d6
   14000d8af:	call   0x14000f574
   14000d8b4:	mov    DWORD PTR [rax],0x16
   14000d8ba:	and    QWORD PTR [rsp+0x20],0x0
   14000d8c0:	xor    r9d,r9d
   14000d8c3:	xor    r8d,r8d
   14000d8c6:	xor    edx,edx
   14000d8c8:	xor    ecx,ecx
   14000d8ca:	call   0x14000e4d8
   14000d8cf:	xor    eax,eax
   14000d8d1:	jmp    0x14000d9fc
   14000d8d6:	test   edx,edx
   14000d8d8:	jne    0x14000d8e1
   14000d8da:	xor    eax,eax
   14000d8dc:	jmp    0x14000d9fc
   14000d8e1:	mov    QWORD PTR [rsp+0x88],rbx
   14000d8e9:	mov    rcx,rbx
   14000d8ec:	call   0x14000a4c4
   14000d8f1:	nop
   14000d8f2:	test   BYTE PTR [rbx+0x18],0x40
   14000d8f6:	jne    0x14000d996
   14000d8fc:	mov    rcx,rbx
   14000d8ff:	call   0x140014cfc
   14000d904:	cmp    eax,0xffffffff
   14000d907:	je     0x14000d933
   14000d909:	cmp    eax,0xfffffffe
   14000d90c:	je     0x14000d933
   14000d90e:	movsxd rdx,eax
   14000d911:	mov    rcx,rdx
   14000d914:	sar    rcx,0x5
   14000d918:	lea    r8,[rip+0x2a441]        # 0x140037d60
   14000d91f:	and    edx,0x1f
   14000d922:	imul   rdx,rdx,0x58
   14000d926:	add    rdx,QWORD PTR [r8+rcx*8]
   14000d92a:	lea    rcx,[rip+0x27b8f]        # 0x1400354c0
   14000d931:	jmp    0x14000d944
   14000d933:	lea    rcx,[rip+0x27b86]        # 0x1400354c0
   14000d93a:	mov    rdx,rcx
   14000d93d:	lea    r8,[rip+0x2a41c]        # 0x140037d60
   14000d944:	test   BYTE PTR [rdx+0x38],0x7f
   14000d948:	jne    0x14000d96f
   14000d94a:	cmp    eax,0xffffffff
   14000d94d:	je     0x14000d969
   14000d94f:	cmp    eax,0xfffffffe
   14000d952:	je     0x14000d969
   14000d954:	movsxd rcx,eax
   14000d957:	mov    rax,rcx
   14000d95a:	sar    rax,0x5
   14000d95e:	and    ecx,0x1f
   14000d961:	imul   rcx,rcx,0x58
   14000d965:	add    rcx,QWORD PTR [r8+rax*8]
   14000d969:	test   BYTE PTR [rcx+0x38],0x80
   14000d96d:	je     0x14000d996
   14000d96f:	call   0x14000f574
   14000d974:	mov    DWORD PTR [rax],0x16
   14000d97a:	and    QWORD PTR [rsp+0x20],0x0
   14000d980:	xor    r9d,r9d
   14000d983:	xor    r8d,r8d
   14000d986:	xor    edx,edx
   14000d988:	xor    ecx,ecx
   14000d98a:	call   0x14000e4d8
   14000d98f:	xor    esi,esi
   14000d991:	mov    QWORD PTR [rsp+0x30],rsi
   14000d996:	test   rsi,rsi
   14000d999:	je     0x14000d9f1
   14000d99b:	sub    edi,0x1
   14000d99e:	mov    DWORD PTR [rsp+0x78],edi
   14000d9a2:	je     0x14000d9ec
   14000d9a4:	add    DWORD PTR [rbx+0x8],0xffffffff
   14000d9a8:	js     0x14000d9b8
   14000d9aa:	mov    rax,QWORD PTR [rbx]
   14000d9ad:	movzx  ecx,BYTE PTR [rax]
   14000d9b0:	inc    rax
   14000d9b3:	mov    QWORD PTR [rbx],rax
   14000d9b6:	jmp    0x14000d9c2
   14000d9b8:	mov    rcx,rbx
   14000d9bb:	call   0x140019354
   14000d9c0:	mov    ecx,eax
   14000d9c2:	mov    DWORD PTR [rsp+0x70],ecx
   14000d9c6:	cmp    ecx,0xffffffff
   14000d9c9:	jne    0x14000d9d9
   14000d9cb:	cmp    r12,r13
   14000d9ce:	jne    0x14000d9ec
   14000d9d0:	xor    esi,esi
   14000d9d2:	mov    QWORD PTR [rsp+0x30],rsi
   14000d9d7:	jmp    0x14000d9f1
   14000d9d9:	mov    BYTE PTR [r12],cl
   14000d9dd:	inc    r12
   14000d9e0:	mov    QWORD PTR [rsp+0x38],r12
   14000d9e5:	cmp    cl,0xa
   14000d9e8:	je     0x14000d9ec
   14000d9ea:	jmp    0x14000d99b
   14000d9ec:	mov    BYTE PTR [r12],0x0
   14000d9f1:	mov    rcx,rbx
   14000d9f4:	call   0x14000a554
   14000d9f9:	mov    rax,rsi
   14000d9fc:	add    rsp,0x40
   14000da00:	pop    r13
   14000da02:	pop    r12
   14000da04:	pop    rdi
   14000da05:	pop    rsi
   14000da06:	pop    rbx
   14000da07:	ret    
   14000da08:	int3   
   14000da09:	int3   
   14000da0a:	int3   
   14000da0b:	int3   
   14000da0c:	int3   
   14000da0d:	int3   
   14000da0e:	int3   
   14000da0f:	int3   
   14000da10:	int3   
   14000da11:	int3   
   14000da12:	int3   
   14000da13:	int3   
   14000da14:	int3   
   14000da15:	int3   
   14000da16:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000da20:	test   r8,r8
   14000da23:	je     0x14000da9a
   14000da25:	sub    rdx,rcx
   14000da28:	mov    r9,rdx
   14000da2b:	movabs r11,0x8101010101010100
   14000da35:	test   cl,0x7
   14000da38:	je     0x14000da59
   14000da3a:	mov    al,BYTE PTR [rcx]
   14000da3c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000da40:	inc    rcx
   14000da43:	cmp    al,dl
   14000da45:	jne    0x14000da9e
   14000da47:	dec    r8
   14000da4a:	je     0x14000da9a
   14000da4c:	test   al,al
   14000da4e:	je     0x14000da9a
   14000da50:	test   rcx,0x7
   14000da57:	jne    0x14000da3a
   14000da59:	lea    rdx,[rcx+r9*1]
   14000da5d:	and    dx,0xfff
   14000da62:	cmp    dx,0xff8
   14000da67:	ja     0x14000da3a
   14000da69:	mov    rax,QWORD PTR [rcx]
   14000da6c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000da70:	cmp    rax,rdx
   14000da73:	jne    0x14000da3a
   14000da75:	add    rcx,0x8
   14000da79:	sub    r8,0x8
   14000da7d:	movabs r10,0x7efefefefefefeff
   14000da87:	jbe    0x14000da9a
   14000da89:	xor    rax,0xffffffffffffffff
   14000da8d:	add    r10,rdx
   14000da90:	xor    rax,r10
   14000da93:	test   r11,rax
   14000da96:	je     0x14000da59
   14000da98:	jmp    0x14000daa6
   14000da9a:	xor    rax,rax
   14000da9d:	ret    
   14000da9e:	sbb    rax,rax
   14000daa1:	sbb    rax,0xffffffffffffffff
   14000daa5:	ret    
   14000daa6:	test   dl,dl
   14000daa8:	je     0x14000dad1
   14000daaa:	test   dh,dh
   14000daac:	je     0x14000dad1
   14000daae:	shr    rdx,0x10
   14000dab2:	test   dl,dl
   14000dab4:	je     0x14000dad1
   14000dab6:	test   dh,dh
   14000dab8:	je     0x14000dad1
   14000daba:	shr    rdx,0x10
   14000dabe:	test   dl,dl
   14000dac0:	je     0x14000dad1
   14000dac2:	test   dh,dh
   14000dac4:	je     0x14000dad1
   14000dac6:	shr    edx,0x10
   14000dac9:	test   dl,dl
   14000dacb:	je     0x14000dad1
   14000dacd:	test   dh,dh
   14000dacf:	jne    0x14000da59
   14000dad1:	xor    rax,rax
   14000dad4:	ret    
   14000dad5:	int3   
   14000dad6:	int3   
   14000dad7:	int3   
   14000dad8:	mov    QWORD PTR [rsp+0x8],rbx
   14000dadd:	push   rdi
   14000dade:	sub    rsp,0x20
   14000dae2:	mov    rdi,rcx
   14000dae5:	mov    ebx,0x3e8
   14000daea:	mov    ecx,ebx
   14000daec:	call   QWORD PTR [rip+0x19866]        # 0x140027358
   14000daf2:	mov    rcx,rdi
   14000daf5:	call   QWORD PTR [rip+0x19855]        # 0x140027350
   14000dafb:	add    ebx,0x3e8
   14000db01:	cmp    ebx,0xea60
   14000db07:	ja     0x14000db0e
   14000db09:	test   rax,rax
   14000db0c:	je     0x14000daea
   14000db0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db13:	add    rsp,0x20
   14000db17:	pop    rdi
   14000db18:	ret    
   14000db19:	int3   
   14000db1a:	int3   
   14000db1b:	int3   
   14000db1c:	rex push rbx
   14000db1e:	sub    rsp,0x20
   14000db22:	mov    ebx,ecx
   14000db24:	call   0x140011f14
   14000db29:	mov    ecx,ebx
   14000db2b:	call   0x140011cc0
   14000db30:	mov    rcx,QWORD PTR [rip+0x26ca9]        # 0x1400347e0
   14000db37:	call   0x140011758
   14000db3c:	mov    ecx,0xff
   14000db41:	add    rsp,0x20
   14000db45:	pop    rbx
   14000db46:	rex.W jmp rax
   14000db49:	int3   
   14000db4a:	int3   
   14000db4b:	int3   
   14000db4c:	rex push rbx
   14000db4e:	sub    rsp,0x20
   14000db52:	mov    ebx,ecx
   14000db54:	lea    rcx,[rip+0x2033d]        # 0x14002de98
   14000db5b:	call   QWORD PTR [rip+0x197ef]        # 0x140027350
   14000db61:	test   rax,rax
   14000db64:	je     0x14000db7f
   14000db66:	lea    rdx,[rip+0x2031b]        # 0x14002de88
   14000db6d:	mov    rcx,rax
   14000db70:	call   QWORD PTR [rip+0x196d2]        # 0x140027248
   14000db76:	test   rax,rax
   14000db79:	je     0x14000db7f
   14000db7b:	mov    ecx,ebx
   14000db7d:	call   rax
   14000db7f:	add    rsp,0x20
   14000db83:	pop    rbx
   14000db84:	ret    
   14000db85:	int3   
   14000db86:	int3   
   14000db87:	int3   
   14000db88:	rex push rbx
   14000db8a:	sub    rsp,0x20
   14000db8e:	mov    ebx,ecx
   14000db90:	call   0x14000db4c
   14000db95:	mov    ecx,ebx
   14000db97:	call   QWORD PTR [rip+0x197c3]        # 0x140027360
   14000db9d:	int3   
   14000db9e:	int3   
   14000db9f:	int3   
   14000dba0:	mov    ecx,0x8
   14000dba5:	jmp    0x1400133a8
   14000dbaa:	int3   
   14000dbab:	int3   
   14000dbac:	mov    ecx,0x8
   14000dbb1:	jmp    0x140013288
   14000dbb6:	int3   
   14000dbb7:	int3   
   14000dbb8:	cmp    rcx,rdx
   14000dbbb:	jae    0x14000dbea
   14000dbbd:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbc2:	push   rdi
   14000dbc3:	sub    rsp,0x20
   14000dbc7:	mov    rdi,rdx
   14000dbca:	mov    rbx,rcx
   14000dbcd:	mov    rax,QWORD PTR [rbx]
   14000dbd0:	test   rax,rax
   14000dbd3:	je     0x14000dbd7
   14000dbd5:	call   rax
   14000dbd7:	add    rbx,0x8
   14000dbdb:	cmp    rbx,rdi
   14000dbde:	jb     0x14000dbcd
   14000dbe0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dbe5:	add    rsp,0x20
   14000dbe9:	pop    rdi
   14000dbea:	ret    
   14000dbeb:	int3   
   14000dbec:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbf1:	push   rdi
   14000dbf2:	sub    rsp,0x20
   14000dbf6:	xor    eax,eax
   14000dbf8:	mov    rdi,rdx
   14000dbfb:	mov    rbx,rcx
   14000dbfe:	cmp    rcx,rdx
   14000dc01:	jae    0x14000dc1a
   14000dc03:	test   eax,eax
   14000dc05:	jne    0x14000dc1a
   14000dc07:	mov    rcx,QWORD PTR [rbx]
   14000dc0a:	test   rcx,rcx
   14000dc0d:	je     0x14000dc11
   14000dc0f:	call   rcx
   14000dc11:	add    rbx,0x8
   14000dc15:	cmp    rbx,rdi
   14000dc18:	jb     0x14000dc03
   14000dc1a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc1f:	add    rsp,0x20
   14000dc23:	pop    rdi
   14000dc24:	ret    
   14000dc25:	int3   
   14000dc26:	int3   
   14000dc27:	int3   
   14000dc28:	sub    rsp,0x38
   14000dc2c:	test   rcx,rcx
   14000dc2f:	jne    0x14000dc58
   14000dc31:	call   0x14000f574
   14000dc36:	and    QWORD PTR [rsp+0x20],0x0
   14000dc3c:	xor    r9d,r9d
   14000dc3f:	xor    r8d,r8d
   14000dc42:	xor    edx,edx
   14000dc44:	xor    ecx,ecx
   14000dc46:	mov    DWORD PTR [rax],0x16
   14000dc4c:	call   0x14000e4d8
   14000dc51:	mov    eax,0x16
   14000dc56:	jmp    0x14000dc69
   14000dc58:	mov    rax,QWORD PTR [rip+0x27cd1]        # 0x140035930
   14000dc5f:	test   rax,rax
   14000dc62:	je     0x14000dc31
   14000dc64:	mov    QWORD PTR [rcx],rax
   14000dc67:	xor    eax,eax
   14000dc69:	add    rsp,0x38
   14000dc6d:	ret    
   14000dc6e:	int3   
   14000dc6f:	int3   
   14000dc70:	sub    rsp,0x38
   14000dc74:	test   rcx,rcx
   14000dc77:	jne    0x14000dca0
   14000dc79:	call   0x14000f574
   14000dc7e:	and    QWORD PTR [rsp+0x20],0x0
   14000dc84:	xor    r9d,r9d
   14000dc87:	xor    r8d,r8d
   14000dc8a:	xor    edx,edx
   14000dc8c:	xor    ecx,ecx
   14000dc8e:	mov    DWORD PTR [rax],0x16
   14000dc94:	call   0x14000e4d8
   14000dc99:	mov    eax,0x16
   14000dc9e:	jmp    0x14000dcb1
   14000dca0:	mov    rax,QWORD PTR [rip+0x27c81]        # 0x140035928
   14000dca7:	test   rax,rax
   14000dcaa:	je     0x14000dc79
   14000dcac:	mov    QWORD PTR [rcx],rax
   14000dcaf:	xor    eax,eax
   14000dcb1:	add    rsp,0x38
   14000dcb5:	ret    
   14000dcb6:	int3   
   14000dcb7:	int3   
   14000dcb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000dcbd:	push   rdi
   14000dcbe:	sub    rsp,0x20
   14000dcc2:	cmp    QWORD PTR [rip+0x2a2ce],0x0        # 0x140037f98
   14000dcca:	mov    ebx,ecx
   14000dccc:	je     0x14000dce6
   14000dcce:	lea    rcx,[rip+0x2a2c3]        # 0x140037f98
   14000dcd5:	call   0x140019830
   14000dcda:	test   eax,eax
   14000dcdc:	je     0x14000dce6
   14000dcde:	mov    ecx,ebx
   14000dce0:	call   QWORD PTR [rip+0x2a2b2]        # 0x140037f98
   14000dce6:	call   0x140019770
   14000dceb:	lea    rdx,[rip+0x198a6]        # 0x140027598
   14000dcf2:	lea    rcx,[rip+0x19877]        # 0x140027570
   14000dcf9:	call   0x14000dbec
   14000dcfe:	test   eax,eax
   14000dd00:	jne    0x14000dd5c
   14000dd02:	lea    rcx,[rip+0xba2f]        # 0x140019738
   14000dd09:	call   0x1400196e8
   14000dd0e:	lea    rbx,[rip+0x1984b]        # 0x140027560
   14000dd15:	lea    rdi,[rip+0x1984c]        # 0x140027568
   14000dd1c:	jmp    0x14000dd2c
   14000dd1e:	mov    rax,QWORD PTR [rbx]
   14000dd21:	test   rax,rax
   14000dd24:	je     0x14000dd28
   14000dd26:	call   rax
   14000dd28:	add    rbx,0x8
   14000dd2c:	cmp    rbx,rdi
   14000dd2f:	jb     0x14000dd1e
   14000dd31:	cmp    QWORD PTR [rip+0x2a267],0x0        # 0x140037fa0
   14000dd39:	je     0x14000dd5a
   14000dd3b:	lea    rcx,[rip+0x2a25e]        # 0x140037fa0
   14000dd42:	call   0x140019830
   14000dd47:	test   eax,eax
   14000dd49:	je     0x14000dd5a
   14000dd4b:	xor    r8d,r8d
   14000dd4e:	xor    ecx,ecx
   14000dd50:	lea    edx,[r8+0x2]
   14000dd54:	call   QWORD PTR [rip+0x2a246]        # 0x140037fa0
   14000dd5a:	xor    eax,eax
   14000dd5c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd61:	add    rsp,0x20
   14000dd65:	pop    rdi
   14000dd66:	ret    
   14000dd67:	int3   
   14000dd68:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd6d:	mov    QWORD PTR [rsp+0x10],rsi
   14000dd72:	mov    DWORD PTR [rsp+0x18],r8d
   14000dd77:	push   rdi
   14000dd78:	push   r12
   14000dd7a:	push   r13
   14000dd7c:	push   r14
   14000dd7e:	push   r15
   14000dd80:	sub    rsp,0x40
   14000dd84:	mov    r12d,r8d
   14000dd87:	mov    ebx,edx
   14000dd89:	mov    r15d,ecx
   14000dd8c:	mov    ecx,0x8
   14000dd91:	call   0x1400133a8
   14000dd96:	nop
   14000dd97:	cmp    DWORD PTR [rip+0x27ba2],0x1        # 0x140035940
   14000dd9e:	je     0x14000dea0
   14000dda4:	mov    DWORD PTR [rip+0x27b8e],0x1        # 0x14003593c
   14000ddae:	mov    BYTE PTR [rip+0x27b83],r12b        # 0x140035938
   14000ddb5:	test   ebx,ebx
   14000ddb7:	jne    0x14000de8c
   14000ddbd:	mov    rcx,QWORD PTR [rip+0x2a1c4]        # 0x140037f88
   14000ddc4:	call   0x140011758
   14000ddc9:	mov    rsi,rax
   14000ddcc:	mov    QWORD PTR [rsp+0x30],rax
   14000ddd1:	test   rax,rax
   14000ddd4:	je     0x14000de79
   14000ddda:	mov    rcx,QWORD PTR [rip+0x2a19f]        # 0x140037f80
   14000dde1:	call   0x140011758
   14000dde6:	mov    rdi,rax
   14000dde9:	mov    QWORD PTR [rsp+0x20],rax
   14000ddee:	mov    r14,rsi
   14000ddf1:	mov    QWORD PTR [rsp+0x28],rsi
   14000ddf6:	mov    r13,rax
   14000ddf9:	mov    QWORD PTR [rsp+0x38],rax
   14000ddfe:	sub    rdi,0x8
   14000de02:	mov    QWORD PTR [rsp+0x20],rdi
   14000de07:	cmp    rdi,rsi
   14000de0a:	jb     0x14000de18
   14000de0c:	call   0x14001174c
   14000de11:	cmp    QWORD PTR [rdi],rax
   14000de14:	jne    0x14000de18
   14000de16:	jmp    0x14000ddfe
   14000de18:	cmp    rdi,rsi
   14000de1b:	jb     0x14000de79
   14000de1d:	mov    rcx,QWORD PTR [rdi]
   14000de20:	call   0x140011758
   14000de25:	mov    rbx,rax
   14000de28:	call   0x14001174c
   14000de2d:	mov    QWORD PTR [rdi],rax
   14000de30:	call   rbx
   14000de32:	mov    rcx,QWORD PTR [rip+0x2a14f]        # 0x140037f88
   14000de39:	call   0x140011758
   14000de3e:	mov    rbx,rax
   14000de41:	mov    rcx,QWORD PTR [rip+0x2a138]        # 0x140037f80
   14000de48:	call   0x140011758
   14000de4d:	cmp    r14,rbx
   14000de50:	jne    0x14000de57
   14000de52:	cmp    r13,rax
   14000de55:	je     0x14000de77
   14000de57:	mov    r14,rbx
   14000de5a:	mov    QWORD PTR [rsp+0x28],rbx
   14000de5f:	mov    rsi,rbx
   14000de62:	mov    QWORD PTR [rsp+0x30],rbx
   14000de67:	mov    r13,rax
   14000de6a:	mov    QWORD PTR [rsp+0x38],rax
   14000de6f:	mov    rdi,rax
   14000de72:	mov    QWORD PTR [rsp+0x20],rax
   14000de77:	jmp    0x14000ddfe
   14000de79:	lea    rdx,[rip+0x19740]        # 0x1400275c0
   14000de80:	lea    rcx,[rip+0x19719]        # 0x1400275a0
   14000de87:	call   0x14000dbb8
   14000de8c:	lea    rdx,[rip+0x1973d]        # 0x1400275d0
   14000de93:	lea    rcx,[rip+0x1972e]        # 0x1400275c8
   14000de9a:	call   0x14000dbb8
   14000de9f:	nop
   14000dea0:	test   r12d,r12d
   14000dea3:	je     0x14000deaf
   14000dea5:	mov    ecx,0x8
   14000deaa:	call   0x140013288
   14000deaf:	test   r12d,r12d
   14000deb2:	jne    0x14000deda
   14000deb4:	mov    DWORD PTR [rip+0x27a82],0x1        # 0x140035940
   14000debe:	lea    ecx,[r12+0x8]
   14000dec3:	call   0x140013288
   14000dec8:	mov    ecx,r15d
   14000decb:	call   0x14000db4c
   14000ded0:	mov    ecx,r15d
   14000ded3:	call   QWORD PTR [rip+0x19487]        # 0x140027360
   14000ded9:	int3   
   14000deda:	mov    rbx,QWORD PTR [rsp+0x70]
   14000dedf:	mov    rsi,QWORD PTR [rsp+0x78]
   14000dee4:	add    rsp,0x40
   14000dee8:	pop    r15
   14000deea:	pop    r14
   14000deec:	pop    r13
   14000deee:	pop    r12
   14000def0:	pop    rdi
   14000def1:	ret    
   14000def2:	int3   
   14000def3:	int3   
   14000def4:	xor    r8d,r8d
   14000def7:	xor    edx,edx
   14000def9:	jmp    0x14000dd68
   14000defe:	int3   
   14000deff:	int3   
   14000df00:	xor    r8d,r8d
   14000df03:	lea    edx,[r8+0x1]
   14000df07:	jmp    0x14000dd68
   14000df0c:	xor    edx,edx
   14000df0e:	xor    ecx,ecx
   14000df10:	lea    r8d,[rdx+0x1]
   14000df14:	jmp    0x14000dd68
   14000df19:	int3   
   14000df1a:	int3   
   14000df1b:	int3   
   14000df1c:	mov    edx,0x1
   14000df21:	xor    ecx,ecx
   14000df23:	mov    r8d,edx
   14000df26:	jmp    0x14000dd68
   14000df2b:	int3   
   14000df2c:	rex push rbx
   14000df2e:	sub    rsp,0x20
   14000df32:	call   0x14001174c
   14000df37:	mov    rcx,rax
   14000df3a:	mov    rbx,rax
   14000df3d:	call   0x140011f58
   14000df42:	mov    rcx,rbx
   14000df45:	call   0x14001a48c
   14000df4a:	mov    rcx,rbx
   14000df4d:	call   0x14000e348
   14000df52:	mov    rcx,rbx
   14000df55:	call   0x14001a484
   14000df5a:	mov    rcx,rbx
   14000df5d:	call   0x14001a190
   14000df62:	mov    rcx,rbx
   14000df65:	call   0x140019b28
   14000df6a:	mov    rcx,rbx
   14000df6d:	call   0x1400198f8
   14000df72:	mov    rcx,rbx
   14000df75:	call   0x1400198dc
   14000df7a:	lea    rcx,[rip+0xffffffffffffff7f]        # 0x14000df00
   14000df81:	call   0x140011744
   14000df86:	mov    QWORD PTR [rip+0x26853],rax        # 0x1400347e0
   14000df8d:	add    rsp,0x20
   14000df91:	pop    rbx
   14000df92:	ret    
   14000df93:	int3   
   14000df94:	rex push rbx
   14000df96:	sub    rsp,0x20
   14000df9a:	cmp    DWORD PTR [rip+0x279b7],0x1        # 0x140035958
   14000dfa1:	mov    ebx,ecx
   14000dfa3:	jne    0x14000dfaa
   14000dfa5:	call   0x140011f14
   14000dfaa:	mov    ecx,ebx
   14000dfac:	call   0x140011cc0
   14000dfb1:	mov    ecx,0xff
   14000dfb6:	add    rsp,0x20
   14000dfba:	pop    rbx
   14000dfbb:	jmp    0x14000db88
   14000dfc0:	mov    eax,0x5a4d
   14000dfc5:	cmp    WORD PTR [rip+0xffffffffffff2034],ax        # 0x140000000
   14000dfcc:	jne    0x14000e007
   14000dfce:	movsxd rcx,DWORD PTR [rip+0xffffffffffff2067]        # 0x14000003c
   14000dfd5:	lea    rax,[rip+0xffffffffffff2024]        # 0x140000000
   14000dfdc:	add    rcx,rax
   14000dfdf:	cmp    DWORD PTR [rcx],0x4550
   14000dfe5:	jne    0x14000e007
   14000dfe7:	mov    eax,0x20b
   14000dfec:	cmp    WORD PTR [rcx+0x18],ax
   14000dff0:	jne    0x14000e007
   14000dff2:	xor    eax,eax
   14000dff4:	cmp    DWORD PTR [rcx+0x84],0xe
   14000dffb:	jbe    0x14000e009
   14000dffd:	cmp    DWORD PTR [rcx+0xf8],eax
   14000e003:	setne  al
   14000e006:	ret    
   14000e007:	xor    eax,eax
   14000e009:	ret    
   14000e00a:	int3   
   14000e00b:	int3   
   14000e00c:	mov    QWORD PTR [rsp+0x10],rbx
   14000e011:	mov    QWORD PTR [rsp+0x18],rsi
   14000e016:	push   rdi
   14000e017:	sub    rsp,0xa0
   14000e01e:	lea    rcx,[rsp+0x30]
   14000e023:	call   QWORD PTR [rip+0x19347]        # 0x140027370
   14000e029:	nop
   14000e02a:	mov    eax,0x5a4d
   14000e02f:	cmp    WORD PTR [rip+0xffffffffffff1fca],ax        # 0x140000000
   14000e036:	jne    0x14000e09a
   14000e038:	movsxd rax,DWORD PTR [rip+0xffffffffffff1ffd]        # 0x14000003c
   14000e03f:	lea    rsi,[rip+0xffffffffffff1fba]        # 0x140000000
   14000e046:	add    rax,rsi
   14000e049:	cmp    DWORD PTR [rax],0x4550
   14000e04f:	je     0x14000e05c
   14000e051:	xor    ebx,ebx
   14000e053:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e05a:	jmp    0x14000e0aa
   14000e05c:	mov    ecx,0x20b
   14000e061:	cmp    WORD PTR [rax+0x18],cx
   14000e065:	je     0x14000e072
   14000e067:	xor    ebx,ebx
   14000e069:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e070:	jmp    0x14000e0aa
   14000e072:	cmp    DWORD PTR [rax+0x84],0xe
   14000e079:	ja     0x14000e086
   14000e07b:	xor    ebx,ebx
   14000e07d:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e084:	jmp    0x14000e0aa
   14000e086:	xor    ebx,ebx
   14000e088:	cmp    DWORD PTR [rax+0xf8],ebx
   14000e08e:	setne  bl
   14000e091:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e098:	jmp    0x14000e0aa
   14000e09a:	xor    ebx,ebx
   14000e09c:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e0a3:	lea    rsi,[rip+0xffffffffffff1f56]        # 0x140000000
   14000e0aa:	mov    edi,0x1
   14000e0af:	mov    ecx,edi
   14000e0b1:	call   0x140011c4c
   14000e0b6:	test   eax,eax
   14000e0b8:	jne    0x14000e0db
   14000e0ba:	cmp    DWORD PTR [rip+0x27898],edi        # 0x140035958
   14000e0c0:	jne    0x14000e0c7
   14000e0c2:	call   0x140011f14
   14000e0c7:	mov    ecx,0x1c
   14000e0cc:	call   0x140011cc0
   14000e0d1:	mov    ecx,0xff
   14000e0d6:	call   0x14000db88
   14000e0db:	call   0x140011a90
   14000e0e0:	test   eax,eax
   14000e0e2:	jne    0x14000e105
   14000e0e4:	cmp    DWORD PTR [rip+0x2786e],edi        # 0x140035958
   14000e0ea:	jne    0x14000e0f1
   14000e0ec:	call   0x140011f14
   14000e0f1:	mov    ecx,0x10
   14000e0f6:	call   0x140011cc0
   14000e0fb:	mov    ecx,0xff
   14000e100:	call   0x14000db88
   14000e105:	call   0x140019700
   14000e10a:	nop
   14000e10b:	call   0x140013c6c
   14000e110:	test   eax,eax
   14000e112:	jns    0x14000e11e
   14000e114:	mov    ecx,0x1b
   14000e119:	call   0x14000db1c
   14000e11e:	call   QWORD PTR [rip+0x19244]        # 0x140027368
   14000e124:	mov    QWORD PTR [rip+0x29e45],rax        # 0x140037f70
   14000e12b:	call   0x14001a9a4
   14000e130:	mov    QWORD PTR [rip+0x27811],rax        # 0x140035948
   14000e137:	call   0x14001a8ac
   14000e13c:	test   eax,eax
   14000e13e:	jns    0x14000e14a
   14000e140:	mov    ecx,0x8
   14000e145:	call   0x14000db1c
   14000e14a:	call   0x14001a5a4
   14000e14f:	test   eax,eax
   14000e151:	jns    0x14000e15d
   14000e153:	mov    ecx,0x9
   14000e158:	call   0x14000db1c
   14000e15d:	mov    ecx,edi
   14000e15f:	call   0x14000dcb8
   14000e164:	test   eax,eax
   14000e166:	je     0x14000e16f
   14000e168:	mov    ecx,eax
   14000e16a:	call   0x14000db1c
   14000e16f:	call   0x14001a528
   14000e174:	test   BYTE PTR [rsp+0x6c],dil
   14000e179:	movzx  edx,WORD PTR [rsp+0x70]
   14000e17e:	mov    r9d,0xa
   14000e184:	cmovne r9d,edx
   14000e188:	mov    r8,rax
   14000e18b:	xor    edx,edx
   14000e18d:	mov    rcx,rsi
   14000e190:	call   0x14000563c
   14000e195:	mov    edi,eax
   14000e197:	mov    DWORD PTR [rsp+0x20],eax
   14000e19b:	test   ebx,ebx
   14000e19d:	jne    0x14000e1a6
   14000e19f:	mov    ecx,eax
   14000e1a1:	call   0x14000def4
   14000e1a6:	call   0x14000df0c
   14000e1ab:	jmp    0x14000e1c7
   14000e1ad:	mov    edi,eax
   14000e1af:	cmp    DWORD PTR [rsp+0xb0],0x0
   14000e1b7:	jne    0x14000e1c1
   14000e1b9:	mov    ecx,eax
   14000e1bb:	call   0x14000df00
   14000e1c0:	int3   
   14000e1c1:	call   0x14000df1c
   14000e1c6:	nop
   14000e1c7:	mov    eax,edi
   14000e1c9:	jmp    0x14000e1d0
   14000e1cb:	mov    eax,0xff
   14000e1d0:	lea    r11,[rsp+0xa0]
   14000e1d8:	mov    rbx,QWORD PTR [r11+0x18]
   14000e1dc:	mov    rsi,QWORD PTR [r11+0x20]
   14000e1e0:	mov    rsp,r11
   14000e1e3:	pop    rdi
   14000e1e4:	ret    
   14000e1e5:	int3   
   14000e1e6:	int3   
   14000e1e7:	int3   
   14000e1e8:	sub    rsp,0x28
   14000e1ec:	call   0x14001ab58
   14000e1f1:	add    rsp,0x28
   14000e1f5:	jmp    0x14000e00c
   14000e1fa:	int3   
   14000e1fb:	int3   
   14000e1fc:	mov    QWORD PTR [rsp+0x8],rcx
   14000e201:	sub    rsp,0x88
   14000e208:	lea    rcx,[rip+0x277f1]        # 0x140035a00
   14000e20f:	call   QWORD PTR [rip+0x19193]        # 0x1400273a8
   14000e215:	mov    r11,QWORD PTR [rip+0x278dc]        # 0x140035af8
   14000e21c:	mov    QWORD PTR [rsp+0x58],r11
   14000e221:	xor    r8d,r8d
   14000e224:	lea    rdx,[rsp+0x60]
   14000e229:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e22e:	call   0x1400257e8
   14000e233:	mov    QWORD PTR [rsp+0x50],rax
   14000e238:	cmp    QWORD PTR [rsp+0x50],0x0
   14000e23e:	je     0x14000e281
   14000e240:	mov    QWORD PTR [rsp+0x38],0x0
   14000e249:	lea    rax,[rsp+0x48]
   14000e24e:	mov    QWORD PTR [rsp+0x30],rax
   14000e253:	lea    rax,[rsp+0x40]
   14000e258:	mov    QWORD PTR [rsp+0x28],rax
   14000e25d:	lea    rax,[rip+0x2779c]        # 0x140035a00
   14000e264:	mov    QWORD PTR [rsp+0x20],rax
   14000e269:	mov    r9,QWORD PTR [rsp+0x50]
   14000e26e:	mov    r8,QWORD PTR [rsp+0x58]
   14000e273:	mov    rdx,QWORD PTR [rsp+0x60]
   14000e278:	xor    ecx,ecx
   14000e27a:	call   0x1400257e2
   14000e27f:	jmp    0x14000e2a3
   14000e281:	mov    rax,QWORD PTR [rsp+0x88]
   14000e289:	mov    QWORD PTR [rip+0x27868],rax        # 0x140035af8
   14000e290:	lea    rax,[rsp+0x88]
   14000e298:	add    rax,0x8
   14000e29c:	mov    QWORD PTR [rip+0x277f5],rax        # 0x140035a98
   14000e2a3:	mov    rax,QWORD PTR [rip+0x2784e]        # 0x140035af8
   14000e2aa:	mov    QWORD PTR [rip+0x276bf],rax        # 0x140035970
   14000e2b1:	mov    rax,QWORD PTR [rsp+0x90]
   14000e2b9:	mov    QWORD PTR [rip+0x277c0],rax        # 0x140035a80
   14000e2c0:	mov    DWORD PTR [rip+0x27696],0xc0000409        # 0x140035960
   14000e2ca:	mov    DWORD PTR [rip+0x27690],0x1        # 0x140035964
   14000e2d4:	mov    rax,QWORD PTR [rip+0x25fc5]        # 0x1400342a0
   14000e2db:	mov    QWORD PTR [rsp+0x68],rax
   14000e2e0:	mov    rax,QWORD PTR [rip+0x25fc1]        # 0x1400342a8
   14000e2e7:	mov    QWORD PTR [rsp+0x70],rax
   14000e2ec:	call   QWORD PTR [rip+0x1909e]        # 0x140027390
   14000e2f2:	mov    DWORD PTR [rip+0x27700],eax        # 0x1400359f8
   14000e2f8:	mov    ecx,0x1
   14000e2fd:	call   0x14001ac0c
   14000e302:	xor    ecx,ecx
   14000e304:	call   QWORD PTR [rip+0x1907e]        # 0x140027388
   14000e30a:	lea    rcx,[rip+0x1fb9f]        # 0x14002deb0
   14000e311:	call   QWORD PTR [rip+0x19069]        # 0x140027380
   14000e317:	cmp    DWORD PTR [rip+0x276da],0x0        # 0x1400359f8
   14000e31e:	jne    0x14000e32a
   14000e320:	mov    ecx,0x1
   14000e325:	call   0x14001ac0c
   14000e32a:	call   QWORD PTR [rip+0x18dd8]        # 0x140027108
   14000e330:	mov    edx,0xc0000409
   14000e335:	mov    rcx,rax
   14000e338:	call   QWORD PTR [rip+0x1903a]        # 0x140027378
   14000e33e:	add    rsp,0x88
   14000e345:	ret    
   14000e346:	int3   
   14000e347:	int3   
   14000e348:	mov    QWORD PTR [rip+0x27b81],rcx        # 0x140035ed0
   14000e34f:	ret    
   14000e350:	rex push rbx
   14000e352:	sub    rsp,0x5e0
   14000e359:	and    DWORD PTR [rsp+0x70],0x0
   14000e35e:	lea    rcx,[rsp+0x74]
   14000e363:	xor    edx,edx
   14000e365:	mov    r8d,0x94
   14000e36b:	call   0x140008a00
   14000e370:	lea    r11,[rsp+0x70]
   14000e375:	lea    rax,[rsp+0x110]
   14000e37d:	lea    rcx,[rsp+0x110]
   14000e385:	mov    QWORD PTR [rsp+0x48],r11
   14000e38a:	mov    QWORD PTR [rsp+0x50],rax
   14000e38f:	call   QWORD PTR [rip+0x19013]        # 0x1400273a8
   14000e395:	mov    rbx,QWORD PTR [rsp+0x208]
   14000e39d:	lea    rdx,[rsp+0x40]
   14000e3a2:	mov    rcx,rbx
   14000e3a5:	xor    r8d,r8d
   14000e3a8:	call   0x1400257e8
   14000e3ad:	test   rax,rax
   14000e3b0:	je     0x14000e3ed
   14000e3b2:	and    QWORD PTR [rsp+0x38],0x0
   14000e3b8:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e3bd:	lea    rcx,[rsp+0x60]
   14000e3c2:	mov    QWORD PTR [rsp+0x30],rcx
   14000e3c7:	lea    rcx,[rsp+0x58]
   14000e3cc:	mov    r9,rax
   14000e3cf:	mov    QWORD PTR [rsp+0x28],rcx
   14000e3d4:	lea    rcx,[rsp+0x110]
   14000e3dc:	mov    r8,rbx
   14000e3df:	mov    QWORD PTR [rsp+0x20],rcx
   14000e3e4:	xor    ecx,ecx
   14000e3e6:	call   0x1400257e2
   14000e3eb:	jmp    0x14000e40d
   14000e3ed:	mov    rax,QWORD PTR [rsp+0x5e8]
   14000e3f5:	mov    QWORD PTR [rsp+0x208],rax
   14000e3fd:	lea    rax,[rsp+0x5e8]
   14000e405:	mov    QWORD PTR [rsp+0x1a8],rax
   14000e40d:	mov    rax,QWORD PTR [rsp+0x5e8]
   14000e415:	mov    DWORD PTR [rsp+0x70],0xc0000417
   14000e41d:	mov    DWORD PTR [rsp+0x74],0x1
   14000e425:	mov    QWORD PTR [rsp+0x80],rax
   14000e42d:	call   QWORD PTR [rip+0x18f5d]        # 0x140027390
   14000e433:	xor    ecx,ecx
   14000e435:	mov    ebx,eax
   14000e437:	call   QWORD PTR [rip+0x18f4b]        # 0x140027388
   14000e43d:	lea    rcx,[rsp+0x48]
   14000e442:	call   QWORD PTR [rip+0x18f38]        # 0x140027380
   14000e448:	test   eax,eax
   14000e44a:	jne    0x14000e458
   14000e44c:	test   ebx,ebx
   14000e44e:	jne    0x14000e458
   14000e450:	lea    ecx,[rax+0x2]
   14000e453:	call   0x14001ac0c
   14000e458:	call   QWORD PTR [rip+0x18caa]        # 0x140027108
   14000e45e:	mov    edx,0xc0000417
   14000e463:	mov    rcx,rax
   14000e466:	call   QWORD PTR [rip+0x18f0c]        # 0x140027378
   14000e46c:	add    rsp,0x5e0
   14000e473:	pop    rbx
   14000e474:	ret    
   14000e475:	int3   
   14000e476:	int3   
   14000e477:	int3   
   14000e478:	mov    QWORD PTR [rsp+0x8],rbx
   14000e47d:	push   rdi
   14000e47e:	sub    rsp,0x20
   14000e482:	mov    rdi,rcx
   14000e485:	mov    rcx,QWORD PTR [rip+0x27a44]        # 0x140035ed0
   14000e48c:	call   0x140011758
   14000e491:	mov    rcx,rdi
   14000e494:	mov    rbx,rax
   14000e497:	call   0x140011744
   14000e49c:	mov    QWORD PTR [rip+0x27a2d],rax        # 0x140035ed0
   14000e4a3:	mov    rax,rbx
   14000e4a6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e4ab:	add    rsp,0x20
   14000e4af:	pop    rdi
   14000e4b0:	ret    
   14000e4b1:	int3   
   14000e4b2:	int3   
   14000e4b3:	int3   
   14000e4b4:	mov    rcx,QWORD PTR [rip+0x27a15]        # 0x140035ed0
   14000e4bb:	jmp    0x140011758
   14000e4c0:	sub    rsp,0x38
   14000e4c4:	mov    rax,QWORD PTR [rsp+0x60]
   14000e4c9:	mov    QWORD PTR [rsp+0x20],rax
   14000e4ce:	call   0x14000e350
   14000e4d3:	add    rsp,0x38
   14000e4d7:	ret    
   14000e4d8:	mov    QWORD PTR [rsp+0x8],rbx
   14000e4dd:	mov    QWORD PTR [rsp+0x10],rbp
   14000e4e2:	mov    QWORD PTR [rsp+0x18],rsi
   14000e4e7:	push   rdi
   14000e4e8:	sub    rsp,0x30
   14000e4ec:	mov    rbp,rcx
   14000e4ef:	mov    rcx,QWORD PTR [rip+0x279da]        # 0x140035ed0
   14000e4f6:	mov    ebx,r9d
   14000e4f9:	mov    rdi,r8
   14000e4fc:	mov    rsi,rdx
   14000e4ff:	call   0x140011758
   14000e504:	test   rax,rax
   14000e507:	je     0x14000e523
   14000e509:	mov    r10,QWORD PTR [rsp+0x60]
   14000e50e:	mov    r9d,ebx
   14000e511:	mov    r8,rdi
   14000e514:	mov    rdx,rsi
   14000e517:	mov    rcx,rbp
   14000e51a:	mov    QWORD PTR [rsp+0x20],r10
   14000e51f:	call   rax
   14000e521:	jmp    0x14000e548
   14000e523:	mov    ecx,0x2
   14000e528:	call   0x14001ac0c
   14000e52d:	mov    r11,QWORD PTR [rsp+0x60]
   14000e532:	mov    r9d,ebx
   14000e535:	mov    r8,rdi
   14000e538:	mov    rdx,rsi
   14000e53b:	mov    rcx,rbp
   14000e53e:	mov    QWORD PTR [rsp+0x20],r11
   14000e543:	call   0x14000e350
   14000e548:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e54d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e552:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e557:	add    rsp,0x30
   14000e55b:	pop    rdi
   14000e55c:	ret    
   14000e55d:	int3   
   14000e55e:	int3   
   14000e55f:	int3   
   14000e560:	sub    rsp,0x38
   14000e564:	and    QWORD PTR [rsp+0x20],0x0
   14000e56a:	xor    r9d,r9d
   14000e56d:	xor    r8d,r8d
   14000e570:	xor    edx,edx
   14000e572:	xor    ecx,ecx
   14000e574:	call   0x14000e4d8
   14000e579:	add    rsp,0x38
   14000e57d:	ret    
   14000e57e:	int3   
   14000e57f:	int3   
   14000e580:	sub    rsp,0x38
   14000e584:	mov    rax,QWORD PTR [rsp+0x60]
   14000e589:	mov    QWORD PTR [rsp+0x20],rax
   14000e58e:	call   0x14000e4d8
   14000e593:	add    rsp,0x38
   14000e597:	ret    
   14000e598:	rex push rbx
   14000e59a:	sub    rsp,0x20
   14000e59e:	mov    ebx,ecx
   14000e5a0:	call   0x14000f50c
   14000e5a5:	mov    DWORD PTR [rax],ebx
   14000e5a7:	add    rsp,0x20
   14000e5ab:	pop    rbx
   14000e5ac:	ret    
   14000e5ad:	int3   
   14000e5ae:	int3   
   14000e5af:	int3   
   14000e5b0:	rex push rbx
   14000e5b2:	sub    rsp,0x20
   14000e5b6:	mov    ebx,ecx
   14000e5b8:	call   0x14000f514
   14000e5bd:	mov    DWORD PTR [rax],ebx
   14000e5bf:	add    rsp,0x20
   14000e5c3:	pop    rbx
   14000e5c4:	ret    
   14000e5c5:	int3   
   14000e5c6:	int3   
   14000e5c7:	int3   
   14000e5c8:	rex push rbx
   14000e5ca:	sub    rsp,0x20
   14000e5ce:	mov    ebx,ecx
   14000e5d0:	call   0x14000f51c
   14000e5d5:	mov    DWORD PTR [rax],ebx
   14000e5d7:	add    rsp,0x20
   14000e5db:	pop    rbx
   14000e5dc:	ret    
   14000e5dd:	int3   
   14000e5de:	int3   
   14000e5df:	int3   
   14000e5e0:	mov    rax,rsp
   14000e5e3:	push   rbx
   14000e5e4:	push   rsi
   14000e5e5:	push   rdi
   14000e5e6:	push   r12
   14000e5e8:	push   r13
   14000e5ea:	push   r14
   14000e5ec:	push   r15
   14000e5ee:	sub    rsp,0x50
   14000e5f2:	xor    r14d,r14d
   14000e5f5:	mov    r13d,r14d
   14000e5f8:	mov    esi,r14d
   14000e5fb:	mov    DWORD PTR [rax+0x8],r14d
   14000e5ff:	mov    DWORD PTR [rax+0x10],r14d
   14000e603:	mov    DWORD PTR [rax+0x18],r14d
   14000e607:	lea    ecx,[r14+0x7]
   14000e60b:	call   0x1400133a8
   14000e610:	nop
   14000e611:	call   0x14000f524
   14000e616:	mov    r12,rax
   14000e619:	lea    rcx,[rsp+0x90]
   14000e621:	call   0x14000f404
   14000e626:	cmp    eax,r14d
   14000e629:	je     0x14000e63f
   14000e62b:	mov    QWORD PTR [rsp+0x20],r14
   14000e630:	xor    r9d,r9d
   14000e633:	xor    r8d,r8d
   14000e636:	xor    edx,edx
   14000e638:	xor    ecx,ecx
   14000e63a:	call   0x14000e350
   14000e63f:	lea    rcx,[rsp+0x98]
   14000e647:	call   0x14000f384
   14000e64c:	cmp    eax,r14d
   14000e64f:	je     0x14000e665
   14000e651:	mov    QWORD PTR [rsp+0x20],r14
   14000e656:	xor    r9d,r9d
   14000e659:	xor    r8d,r8d
   14000e65c:	xor    edx,edx
   14000e65e:	xor    ecx,ecx
   14000e660:	call   0x14000e350
   14000e665:	lea    rcx,[rsp+0xa0]
   14000e66d:	call   0x14000f3c4
   14000e672:	cmp    eax,r14d
   14000e675:	je     0x14000e68b
   14000e677:	mov    QWORD PTR [rsp+0x20],r14
   14000e67c:	xor    r9d,r9d
   14000e67f:	xor    r8d,r8d
   14000e682:	xor    edx,edx
   14000e684:	xor    ecx,ecx
   14000e686:	call   0x14000e350
   14000e68b:	call   0x14001b7e4
   14000e690:	mov    ebx,eax
   14000e692:	mov    DWORD PTR [rip+0x278f3],r14d        # 0x140035f8c
   14000e699:	or     r15d,0xffffffff
   14000e69d:	mov    DWORD PTR [rip+0x2615c],r15d        # 0x140034800
   14000e6a4:	mov    DWORD PTR [rip+0x26145],r15d        # 0x1400347f0
   14000e6ab:	lea    rcx,[rip+0x1f80e]        # 0x14002dec0
   14000e6b2:	call   0x14001ae00
   14000e6b7:	mov    rdi,rax
   14000e6ba:	mov    QWORD PTR [rsp+0x40],rax
   14000e6bf:	cmp    rax,r14
   14000e6c2:	je     0x14000e76b
   14000e6c8:	cmp    BYTE PTR [rax],r14b
   14000e6cb:	je     0x14000e76b
   14000e6d1:	mov    rcx,QWORD PTR [rip+0x278b8]        # 0x140035f90
   14000e6d8:	cmp    rcx,r14
   14000e6db:	je     0x14000e6fd
   14000e6dd:	mov    rdx,rcx
   14000e6e0:	mov    rcx,rax
   14000e6e3:	call   0x14001ad50
   14000e6e8:	cmp    eax,r14d
   14000e6eb:	jne    0x14000e6f6
   14000e6ed:	lea    esi,[r15+0x2]
   14000e6f1:	jmp    0x14000e8ca
   14000e6f6:	mov    rcx,QWORD PTR [rip+0x27893]        # 0x140035f90
   14000e6fd:	cmp    rcx,r14
   14000e700:	je     0x14000e707
   14000e702:	call   0x1400098ac
   14000e707:	mov    rcx,rdi
   14000e70a:	call   0x140012e10
   14000e70f:	lea    rcx,[rax+0x1]
   14000e713:	call   0x140012c00
   14000e718:	mov    QWORD PTR [rip+0x27871],rax        # 0x140035f90
   14000e71f:	cmp    rax,r14
   14000e722:	jne    0x14000e72e
   14000e724:	mov    esi,0x1
   14000e729:	jmp    0x14000e8ca
   14000e72e:	mov    rcx,rdi
   14000e731:	call   0x140012e10
   14000e736:	mov    r8,rdi
   14000e739:	lea    rdx,[rax+0x1]
   14000e73d:	mov    rcx,QWORD PTR [rip+0x2784c]        # 0x140035f90
   14000e744:	call   0x140012b54
   14000e749:	cmp    eax,r14d
   14000e74c:	je     0x14000e8ca
   14000e752:	mov    QWORD PTR [rsp+0x20],r14
   14000e757:	xor    r9d,r9d
   14000e75a:	xor    r8d,r8d
   14000e75d:	xor    edx,edx
   14000e75f:	xor    ecx,ecx
   14000e761:	call   0x14000e350
   14000e766:	jmp    0x14000e8ca
   14000e76b:	mov    rcx,QWORD PTR [rip+0x2781e]        # 0x140035f90
   14000e772:	cmp    rcx,r14
   14000e775:	je     0x14000e783
   14000e777:	call   0x1400098ac
   14000e77c:	mov    QWORD PTR [rip+0x2780d],r14        # 0x140035f90
   14000e783:	lea    rcx,[rip+0x27756]        # 0x140035ee0
   14000e78a:	call   QWORD PTR [rip+0x18c28]        # 0x1400273b8
   14000e790:	cmp    eax,0xffffffff
   14000e793:	je     0x14000e8c5
   14000e799:	mov    DWORD PTR [rip+0x277e9],0x1        # 0x140035f8c
   14000e7a3:	mov    ecx,DWORD PTR [rip+0x27737]        # 0x140035ee0
   14000e7a9:	imul   ecx,ecx,0x3c
   14000e7ac:	mov    DWORD PTR [rsp+0x90],ecx
   14000e7b3:	cmp    WORD PTR [rip+0x2776b],r14w        # 0x140035f26
   14000e7bb:	je     0x14000e7d3
   14000e7bd:	mov    edx,DWORD PTR [rip+0x27771]        # 0x140035f34
   14000e7c3:	mov    eax,edx
   14000e7c5:	imul   eax,eax,0x3c
   14000e7c8:	add    ecx,eax
   14000e7ca:	mov    DWORD PTR [rsp+0x90],ecx
   14000e7d1:	jmp    0x14000e7d9
   14000e7d3:	mov    edx,DWORD PTR [rip+0x2775b]        # 0x140035f34
   14000e7d9:	cmp    WORD PTR [rip+0x27799],r14w        # 0x140035f7a
   14000e7e1:	je     0x14000e807
   14000e7e3:	mov    eax,DWORD PTR [rip+0x2779f]        # 0x140035f88
   14000e7e9:	cmp    eax,r14d
   14000e7ec:	je     0x14000e807
   14000e7ee:	mov    DWORD PTR [rsp+0x98],0x1
   14000e7f9:	sub    eax,edx
   14000e7fb:	imul   eax,eax,0x3c
   14000e7fe:	mov    DWORD PTR [rsp+0xa0],eax
   14000e805:	jmp    0x14000e817
   14000e807:	mov    DWORD PTR [rsp+0x98],r14d
   14000e80f:	mov    DWORD PTR [rsp+0xa0],r14d
   14000e817:	lea    rax,[rsp+0xa8]
   14000e81f:	mov    QWORD PTR [rsp+0x38],rax
   14000e824:	mov    QWORD PTR [rsp+0x30],r14
   14000e829:	mov    esi,0x3f
   14000e82e:	mov    DWORD PTR [rsp+0x28],esi
   14000e832:	mov    rax,QWORD PTR [r12]
   14000e836:	mov    QWORD PTR [rsp+0x20],rax
   14000e83b:	mov    r9d,r15d
   14000e83e:	lea    r8,[rip+0x2769f]        # 0x140035ee4
   14000e845:	xor    edx,edx
   14000e847:	mov    ecx,ebx
   14000e849:	call   QWORD PTR [rip+0x18b61]        # 0x1400273b0
   14000e84f:	cmp    eax,r14d
   14000e852:	je     0x14000e868
   14000e854:	cmp    DWORD PTR [rsp+0xa8],r14d
   14000e85c:	jne    0x14000e868
   14000e85e:	mov    rax,QWORD PTR [r12]
   14000e862:	mov    BYTE PTR [rax+0x3f],r14b
   14000e866:	jmp    0x14000e86f
   14000e868:	mov    rax,QWORD PTR [r12]
   14000e86c:	mov    BYTE PTR [rax],r14b
   14000e86f:	lea    rax,[rsp+0xa8]
   14000e877:	mov    QWORD PTR [rsp+0x38],rax
   14000e87c:	mov    QWORD PTR [rsp+0x30],r14
   14000e881:	mov    DWORD PTR [rsp+0x28],esi
   14000e885:	mov    rax,QWORD PTR [r12+0x8]
   14000e88a:	mov    QWORD PTR [rsp+0x20],rax
   14000e88f:	mov    r9d,r15d
   14000e892:	lea    r8,[rip+0x2769f]        # 0x140035f38
   14000e899:	xor    edx,edx
   14000e89b:	mov    ecx,ebx
   14000e89d:	call   QWORD PTR [rip+0x18b0d]        # 0x1400273b0
   14000e8a3:	cmp    eax,r14d
   14000e8a6:	je     0x14000e8bd
   14000e8a8:	cmp    DWORD PTR [rsp+0xa8],r14d
   14000e8b0:	jne    0x14000e8bd
   14000e8b2:	mov    rax,QWORD PTR [r12+0x8]
   14000e8b7:	mov    BYTE PTR [rax+0x3f],r14b
   14000e8bb:	jmp    0x14000e8c5
   14000e8bd:	mov    rax,QWORD PTR [r12+0x8]
   14000e8c2:	mov    BYTE PTR [rax],r14b
   14000e8c5:	mov    esi,0x1
   14000e8ca:	mov    ebx,DWORD PTR [rsp+0x90]
   14000e8d1:	call   0x14000f51c
   14000e8d6:	mov    DWORD PTR [rax],ebx
   14000e8d8:	mov    ebx,DWORD PTR [rsp+0x98]
   14000e8df:	call   0x14000f50c
   14000e8e4:	mov    DWORD PTR [rax],ebx
   14000e8e6:	mov    ebx,DWORD PTR [rsp+0xa0]
   14000e8ed:	call   0x14000f514
   14000e8f2:	mov    DWORD PTR [rax],ebx
   14000e8f4:	mov    ecx,0x7
   14000e8f9:	call   0x140013288
   14000e8fe:	cmp    esi,r14d
   14000e901:	jne    0x14000ea6e
   14000e907:	mov    r15d,0x3
   14000e90d:	mov    r9,r15
   14000e910:	mov    r8,rdi
   14000e913:	lea    edx,[r15+0x3d]
   14000e917:	mov    rcx,QWORD PTR [r12]
   14000e91b:	call   0x14001ac68
   14000e920:	cmp    eax,r14d
   14000e923:	je     0x14000e939
   14000e925:	mov    QWORD PTR [rsp+0x20],r14
   14000e92a:	xor    r9d,r9d
   14000e92d:	xor    r8d,r8d
   14000e930:	xor    edx,edx
   14000e932:	xor    ecx,ecx
   14000e934:	call   0x14000e350
   14000e939:	add    rdi,r15
   14000e93c:	cmp    BYTE PTR [rdi],0x2d
   14000e93f:	jne    0x14000e94a
   14000e941:	mov    r13d,0x1
   14000e947:	inc    rdi
   14000e94a:	mov    rcx,rdi
   14000e94d:	call   0x14001ac14
   14000e952:	mov    r11d,eax
   14000e955:	imul   r11d,r11d,0xe10
   14000e95c:	mov    DWORD PTR [rsp+0x90],r11d
   14000e964:	mov    bl,0x30
   14000e966:	mov    sil,0x39
   14000e969:	mov    al,BYTE PTR [rdi]
   14000e96b:	cmp    al,0x2b
   14000e96d:	je     0x14000ea66
   14000e973:	cmp    al,bl
   14000e975:	jl     0x14000e980
   14000e977:	cmp    al,sil
   14000e97a:	jle    0x14000ea66
   14000e980:	cmp    BYTE PTR [rdi],0x3a
   14000e983:	jne    0x14000e9f1
   14000e985:	inc    rdi
   14000e988:	mov    rcx,rdi
   14000e98b:	call   0x14001ac14
   14000e990:	imul   eax,eax,0x3c
   14000e993:	mov    r11d,DWORD PTR [rsp+0x90]
   14000e99b:	add    r11d,eax
   14000e99e:	mov    DWORD PTR [rsp+0x90],r11d
   14000e9a6:	mov    al,BYTE PTR [rdi]
   14000e9a8:	cmp    al,bl
   14000e9aa:	jl     0x14000e9ba
   14000e9ac:	cmp    al,sil
   14000e9af:	jg     0x14000e9ba
   14000e9b1:	inc    rdi
   14000e9b4:	mov    al,BYTE PTR [rdi]
   14000e9b6:	cmp    al,bl
   14000e9b8:	jge    0x14000e9ac
   14000e9ba:	cmp    BYTE PTR [rdi],0x3a
   14000e9bd:	jne    0x14000e9f1
   14000e9bf:	inc    rdi
   14000e9c2:	mov    rcx,rdi
   14000e9c5:	call   0x14001ac14
   14000e9ca:	mov    r11d,DWORD PTR [rsp+0x90]
   14000e9d2:	add    r11d,eax
   14000e9d5:	mov    DWORD PTR [rsp+0x90],r11d
   14000e9dd:	mov    al,BYTE PTR [rdi]
   14000e9df:	cmp    al,bl
   14000e9e1:	jl     0x14000e9f1
   14000e9e3:	cmp    al,sil
   14000e9e6:	jg     0x14000e9f1
   14000e9e8:	inc    rdi
   14000e9eb:	mov    al,BYTE PTR [rdi]
   14000e9ed:	cmp    al,bl
   14000e9ef:	jge    0x14000e9e3
   14000e9f1:	cmp    r13d,r14d
   14000e9f4:	je     0x14000ea01
   14000e9f6:	neg    r11d
   14000e9f9:	mov    DWORD PTR [rsp+0x90],r11d
   14000ea01:	movsx  eax,BYTE PTR [rdi]
   14000ea04:	mov    DWORD PTR [rsp+0x98],eax
   14000ea0b:	cmp    eax,r14d
   14000ea0e:	je     0x14000ea40
   14000ea10:	mov    r9,r15
   14000ea13:	mov    r8,rdi
   14000ea16:	mov    edx,0x40
   14000ea1b:	mov    rcx,QWORD PTR [r12+0x8]
   14000ea20:	call   0x14001ac68
   14000ea25:	cmp    eax,r14d
   14000ea28:	je     0x14000ea48
   14000ea2a:	mov    QWORD PTR [rsp+0x20],r14
   14000ea2f:	xor    r9d,r9d
   14000ea32:	xor    r8d,r8d
   14000ea35:	xor    edx,edx
   14000ea37:	xor    ecx,ecx
   14000ea39:	call   0x14000e350
   14000ea3e:	jmp    0x14000ea48
   14000ea40:	mov    rax,QWORD PTR [r12+0x8]
   14000ea45:	mov    BYTE PTR [rax],r14b
   14000ea48:	mov    ebx,DWORD PTR [rsp+0x90]
   14000ea4f:	call   0x14000f51c
   14000ea54:	mov    DWORD PTR [rax],ebx
   14000ea56:	mov    ebx,DWORD PTR [rsp+0x98]
   14000ea5d:	call   0x14000f50c
   14000ea62:	mov    DWORD PTR [rax],ebx
   14000ea64:	jmp    0x14000ea6e
   14000ea66:	inc    rdi
   14000ea69:	jmp    0x14000e969
   14000ea6e:	add    rsp,0x50
   14000ea72:	pop    r15
   14000ea74:	pop    r14
   14000ea76:	pop    r13
   14000ea78:	pop    r12
   14000ea7a:	pop    rdi
   14000ea7b:	pop    rsi
   14000ea7c:	pop    rbx
   14000ea7d:	ret    
   14000ea7e:	int3   
   14000ea7f:	int3   
   14000ea80:	mov    QWORD PTR [rsp+0x10],rbx
   14000ea85:	mov    QWORD PTR [rsp+0x18],rbp
   14000ea8a:	push   rsi
   14000ea8b:	push   rdi
   14000ea8c:	push   r12
   14000ea8e:	sub    rsp,0x30
   14000ea92:	and    DWORD PTR [rsp+0x50],0x0
   14000ea97:	mov    ebx,r8d
   14000ea9a:	cmp    edx,0x1
   14000ea9d:	mov    eax,ebx
   14000ea9f:	mov    r12d,ecx
   14000eaa2:	mov    edi,0x51eb851f
   14000eaa7:	cdq    
   14000eaa8:	jne    0x14000ec03
   14000eaae:	and    edx,0x3
   14000eab1:	lea    ebp,[rdx+rax*1]
   14000eab4:	and    ebp,0x3
   14000eab7:	sub    ebp,edx
   14000eab9:	jne    0x14000ead0
   14000eabb:	mov    eax,edi
   14000eabd:	imul   ebx
   14000eabf:	sar    edx,0x5
   14000eac2:	mov    eax,edx
   14000eac4:	shr    eax,0x1f
   14000eac7:	add    edx,eax
   14000eac9:	imul   edx,edx,0x64
   14000eacc:	cmp    ebx,edx
   14000eace:	jne    0x14000eb03
   14000ead0:	lea    ecx,[r8+0x76c]
   14000ead7:	mov    eax,edi
   14000ead9:	imul   ecx
   14000eadb:	sar    edx,0x7
   14000eade:	mov    eax,edx
   14000eae0:	shr    eax,0x1f
   14000eae3:	add    edx,eax
   14000eae5:	imul   edx,edx,0x190
   14000eaeb:	cmp    ecx,edx
   14000eaed:	je     0x14000eb03
   14000eaef:	lea    r11,[rip+0xffffffffffff150a]        # 0x140000000
   14000eaf6:	movsxd rsi,r9d
   14000eaf9:	mov    r10d,DWORD PTR [r11+rsi*4+0x355c4]
   14000eb01:	jmp    0x14000eb15
   14000eb03:	lea    r11,[rip+0xffffffffffff14f6]        # 0x140000000
   14000eb0a:	movsxd rsi,r9d
   14000eb0d:	mov    r10d,DWORD PTR [r11+rsi*4+0x3558c]
   14000eb15:	dec    r8d
   14000eb18:	lea    ecx,[rbx+0x12b]
   14000eb1e:	mov    eax,edi
   14000eb20:	inc    r10d
   14000eb23:	imul   ecx
   14000eb25:	mov    r9d,edx
   14000eb28:	sar    r9d,0x7
   14000eb2c:	mov    eax,r9d
   14000eb2f:	shr    eax,0x1f
   14000eb32:	add    r9d,eax
   14000eb35:	mov    eax,edi
   14000eb37:	imul   r8d
   14000eb3a:	sar    edx,0x5
   14000eb3d:	mov    eax,edx
   14000eb3f:	shr    eax,0x1f
   14000eb42:	add    edx,eax
   14000eb44:	mov    eax,r8d
   14000eb47:	sub    r9d,edx
   14000eb4a:	cdq    
   14000eb4b:	and    edx,0x3
   14000eb4e:	add    eax,edx
   14000eb50:	sar    eax,0x2
   14000eb53:	lea    ecx,[r10+rax*1]
   14000eb57:	mov    eax,ebx
   14000eb59:	add    ecx,r9d
   14000eb5c:	imul   eax,eax,0x16d
   14000eb62:	lea    r8d,[rax+rcx*1-0x63db]
   14000eb6a:	mov    ecx,DWORD PTR [rsp+0x70]
   14000eb6e:	mov    eax,0x92492493
   14000eb73:	imul   r8d
   14000eb76:	add    edx,r8d
   14000eb79:	sar    edx,0x2
   14000eb7c:	mov    eax,edx
   14000eb7e:	shr    eax,0x1f
   14000eb81:	add    edx,eax
   14000eb83:	mov    eax,ecx
   14000eb85:	imul   edx,edx,0x7
   14000eb88:	imul   eax,eax,0x7
   14000eb8b:	sub    r8d,edx
   14000eb8e:	mov    edx,DWORD PTR [rsp+0x78]
   14000eb92:	sub    eax,r8d
   14000eb95:	add    eax,edx
   14000eb97:	cmp    r8d,edx
   14000eb9a:	jg     0x14000eba3
   14000eb9c:	lea    r10d,[r10+rax*1-0x7]
   14000eba1:	jmp    0x14000eba6
   14000eba3:	add    r10d,eax
   14000eba6:	cmp    ecx,0x5
   14000eba9:	jne    0x14000ec71
   14000ebaf:	test   ebp,ebp
   14000ebb1:	jne    0x14000ebc8
   14000ebb3:	mov    eax,edi
   14000ebb5:	imul   ebx
   14000ebb7:	sar    edx,0x5
   14000ebba:	mov    ecx,edx
   14000ebbc:	shr    ecx,0x1f
   14000ebbf:	add    edx,ecx
   14000ebc1:	imul   edx,edx,0x64
   14000ebc4:	cmp    ebx,edx
   14000ebc6:	jne    0x14000ebf0
   14000ebc8:	lea    ecx,[rbx+0x76c]
   14000ebce:	mov    eax,edi
   14000ebd0:	imul   ecx
   14000ebd2:	sar    edx,0x7
   14000ebd5:	mov    eax,edx
   14000ebd7:	shr    eax,0x1f
   14000ebda:	add    edx,eax
   14000ebdc:	imul   edx,edx,0x190
   14000ebe2:	cmp    ecx,edx
   14000ebe4:	je     0x14000ebf0
   14000ebe6:	mov    eax,DWORD PTR [r11+rsi*4+0x355c8]
   14000ebee:	jmp    0x14000ebf8
   14000ebf0:	mov    eax,DWORD PTR [r11+rsi*4+0x35590]
   14000ebf8:	cmp    r10d,eax
   14000ebfb:	jle    0x14000ec71
   14000ebfd:	sub    r10d,0x7
   14000ec01:	jmp    0x14000ec71
   14000ec03:	and    edx,0x3
   14000ec06:	add    eax,edx
   14000ec08:	and    eax,0x3
   14000ec0b:	cmp    eax,edx
   14000ec0d:	jne    0x14000ec24
   14000ec0f:	mov    eax,edi
   14000ec11:	imul   ebx
   14000ec13:	sar    edx,0x5
   14000ec16:	mov    eax,edx
   14000ec18:	shr    eax,0x1f
   14000ec1b:	add    edx,eax
   14000ec1d:	imul   edx,edx,0x64
   14000ec20:	cmp    ebx,edx
   14000ec22:	jne    0x14000ec57
   14000ec24:	lea    ecx,[r8+0x76c]
   14000ec2b:	mov    eax,edi
   14000ec2d:	imul   ecx
   14000ec2f:	sar    edx,0x7
   14000ec32:	mov    eax,edx
   14000ec34:	shr    eax,0x1f
   14000ec37:	add    edx,eax
   14000ec39:	imul   edx,edx,0x190
   14000ec3f:	cmp    ecx,edx
   14000ec41:	je     0x14000ec57
   14000ec43:	lea    r11,[rip+0xffffffffffff13b6]        # 0x140000000
   14000ec4a:	movsxd rax,r9d
   14000ec4d:	mov    r10d,DWORD PTR [r11+rax*4+0x355c4]
   14000ec55:	jmp    0x14000ec69
   14000ec57:	lea    r11,[rip+0xffffffffffff13a2]        # 0x140000000
   14000ec5e:	movsxd rax,r9d
   14000ec61:	mov    r10d,DWORD PTR [r11+rax*4+0x3558c]
   14000ec69:	add    r10d,DWORD PTR [rsp+0x80]
   14000ec71:	mov    eax,DWORD PTR [rsp+0x88]
   14000ec78:	imul   eax,eax,0x3c
   14000ec7b:	add    eax,DWORD PTR [rsp+0x90]
   14000ec82:	imul   eax,eax,0x3c
   14000ec85:	add    eax,DWORD PTR [rsp+0x98]
   14000ec8c:	imul   eax,eax,0x3e8
   14000ec92:	add    eax,DWORD PTR [rsp+0xa0]
   14000ec99:	cmp    r12d,0x1
   14000ec9d:	jne    0x14000ecb4
   14000ec9f:	mov    DWORD PTR [rip+0x25b4e],r10d        # 0x1400347f4
   14000eca6:	mov    DWORD PTR [rip+0x25b4c],eax        # 0x1400347f8
   14000ecac:	mov    DWORD PTR [rip+0x25b3e],ebx        # 0x1400347f0
   14000ecb2:	jmp    0x14000ed25
   14000ecb4:	lea    rcx,[rsp+0x50]
   14000ecb9:	mov    DWORD PTR [rip+0x25b44],r10d        # 0x140034804
   14000ecc0:	mov    DWORD PTR [rip+0x25b42],eax        # 0x140034808
   14000ecc6:	call   0x14000f3c4
   14000eccb:	test   eax,eax
   14000eccd:	je     0x14000ece4
   14000eccf:	and    QWORD PTR [rsp+0x20],0x0
   14000ecd5:	xor    r9d,r9d
   14000ecd8:	xor    r8d,r8d
   14000ecdb:	xor    edx,edx
   14000ecdd:	xor    ecx,ecx
   14000ecdf:	call   0x14000e350
   14000ece4:	mov    ecx,DWORD PTR [rip+0x25b1e]        # 0x140034808
   14000ecea:	mov    eax,DWORD PTR [rsp+0x50]
   14000ecee:	imul   eax,eax,0x3e8
   14000ecf4:	add    ecx,eax
   14000ecf6:	mov    eax,0x5265c00
   14000ecfb:	mov    DWORD PTR [rip+0x25b07],ecx        # 0x140034808
   14000ed01:	jns    0x14000ed0d
   14000ed03:	add    ecx,eax
   14000ed05:	dec    DWORD PTR [rip+0x25af9]        # 0x140034804
   14000ed0b:	jmp    0x14000ed19
   14000ed0d:	cmp    ecx,eax
   14000ed0f:	jl     0x14000ed1f
   14000ed11:	sub    ecx,eax
   14000ed13:	inc    DWORD PTR [rip+0x25aeb]        # 0x140034804
   14000ed19:	mov    DWORD PTR [rip+0x25ae9],ecx        # 0x140034808
   14000ed1f:	mov    DWORD PTR [rip+0x25adb],ebx        # 0x140034800
   14000ed25:	mov    rbx,QWORD PTR [rsp+0x58]
   14000ed2a:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ed2f:	add    rsp,0x30
   14000ed33:	pop    r12
   14000ed35:	pop    rdi
   14000ed36:	pop    rsi
   14000ed37:	ret    
   14000ed38:	mov    rax,rsp
   14000ed3b:	mov    QWORD PTR [rax+0x8],rbx
   14000ed3f:	mov    QWORD PTR [rax+0x18],rbp
   14000ed43:	mov    QWORD PTR [rax+0x20],rsi
   14000ed47:	push   rdi
   14000ed48:	push   r12
   14000ed4a:	push   r13
   14000ed4c:	sub    rsp,0x60
   14000ed50:	mov    rdi,rcx
   14000ed53:	lea    rcx,[rax+0x10]
   14000ed57:	xor    ebx,ebx
   14000ed59:	mov    DWORD PTR [rax+0x10],ebx
   14000ed5c:	call   0x14000f384
   14000ed61:	cmp    eax,ebx
   14000ed63:	je     0x14000ed79
   14000ed65:	xor    r9d,r9d
   14000ed68:	xor    r8d,r8d
   14000ed6b:	xor    edx,edx
   14000ed6d:	xor    ecx,ecx
   14000ed6f:	mov    QWORD PTR [rsp+0x20],rbx
   14000ed74:	call   0x14000e350
   14000ed79:	cmp    DWORD PTR [rsp+0x88],ebx
   14000ed80:	jne    0x14000ed89
   14000ed82:	xor    eax,eax
   14000ed84:	jmp    0x14000ef79
   14000ed89:	mov    esi,DWORD PTR [rdi+0x14]
   14000ed8c:	mov    r13d,0x1
   14000ed92:	cmp    esi,DWORD PTR [rip+0x25a58]        # 0x1400347f0
   14000ed98:	jne    0x14000eda6
   14000ed9a:	cmp    esi,DWORD PTR [rip+0x25a60]        # 0x140034800
   14000eda0:	je     0x14000ef47
   14000eda6:	cmp    DWORD PTR [rip+0x271e0],ebx        # 0x140035f8c
   14000edac:	je     0x14000eec4
   14000edb2:	movzx  ecx,WORD PTR [rip+0x271cb]        # 0x140035f84
   14000edb9:	movzx  eax,WORD PTR [rip+0x271c6]        # 0x140035f86
   14000edc0:	movzx  edx,WORD PTR [rip+0x271bb]        # 0x140035f82
   14000edc7:	movzx  r9d,WORD PTR [rip+0x271ab]        # 0x140035f7a
   14000edcf:	mov    DWORD PTR [rsp+0x50],eax
   14000edd3:	mov    DWORD PTR [rsp+0x48],ecx
   14000edd7:	mov    DWORD PTR [rsp+0x40],edx
   14000eddb:	mov    ecx,r13d
   14000edde:	cmp    WORD PTR [rip+0x27193],bx        # 0x140035f78
   14000ede5:	jne    0x14000ee17
   14000ede7:	movzx  r10d,WORD PTR [rip+0x27191]        # 0x140035f80
   14000edef:	movzx  r11d,WORD PTR [rip+0x27185]        # 0x140035f7c
   14000edf7:	movzx  r8d,WORD PTR [rip+0x2717f]        # 0x140035f7e
   14000edff:	mov    DWORD PTR [rsp+0x38],r10d
   14000ee04:	mov    DWORD PTR [rsp+0x30],ebx
   14000ee08:	mov    DWORD PTR [rsp+0x28],r11d
   14000ee0d:	mov    DWORD PTR [rsp+0x20],r8d
   14000ee12:	mov    edx,r13d
   14000ee15:	jmp    0x14000ee3b
   14000ee17:	movzx  r8d,WORD PTR [rip+0x27161]        # 0x140035f80
   14000ee1f:	movzx  r10d,WORD PTR [rip+0x27157]        # 0x140035f7e
   14000ee27:	xor    edx,edx
   14000ee29:	mov    DWORD PTR [rsp+0x38],r8d
   14000ee2e:	mov    DWORD PTR [rsp+0x30],r10d
   14000ee33:	mov    DWORD PTR [rsp+0x28],ebx
   14000ee37:	mov    DWORD PTR [rsp+0x20],ebx
   14000ee3b:	mov    r8d,esi
   14000ee3e:	call   0x14000ea80
   14000ee43:	movzx  ecx,WORD PTR [rip+0x270e6]        # 0x140035f30
   14000ee4a:	movzx  r8d,WORD PTR [rip+0x270da]        # 0x140035f2c
   14000ee52:	movzx  eax,WORD PTR [rip+0x270d9]        # 0x140035f32
   14000ee59:	movzx  edx,WORD PTR [rip+0x270ce]        # 0x140035f2e
   14000ee60:	movzx  r9d,WORD PTR [rip+0x270be]        # 0x140035f26
   14000ee68:	mov    DWORD PTR [rsp+0x50],eax
   14000ee6c:	mov    DWORD PTR [rsp+0x48],ecx
   14000ee70:	mov    DWORD PTR [rsp+0x40],edx
   14000ee74:	xor    ecx,ecx
   14000ee76:	mov    DWORD PTR [rsp+0x38],r8d
   14000ee7b:	mov    r8d,DWORD PTR [rdi+0x14]
   14000ee7f:	cmp    WORD PTR [rip+0x2709e],bx        # 0x140035f24
   14000ee86:	jne    0x14000eeab
   14000ee88:	movzx  r10d,WORD PTR [rip+0x27098]        # 0x140035f28
   14000ee90:	movzx  r11d,WORD PTR [rip+0x27092]        # 0x140035f2a
   14000ee98:	mov    DWORD PTR [rsp+0x30],ebx
   14000ee9c:	mov    DWORD PTR [rsp+0x28],r10d
   14000eea1:	mov    DWORD PTR [rsp+0x20],r11d
   14000eea6:	jmp    0x14000ef3f
   14000eeab:	movzx  r10d,WORD PTR [rip+0x27077]        # 0x140035f2a
   14000eeb3:	xor    edx,edx
   14000eeb5:	mov    DWORD PTR [rsp+0x30],r10d
   14000eeba:	mov    DWORD PTR [rsp+0x28],ebx
   14000eebe:	mov    DWORD PTR [rsp+0x20],ebx
   14000eec2:	jmp    0x14000ef42
   14000eec4:	cmp    esi,0x6b
   14000eec7:	mov    eax,0x2
   14000eecc:	mov    r12d,r13d
   14000eecf:	lea    r9d,[rax+0x1]
   14000eed3:	lea    ebp,[rax+0x9]
   14000eed6:	jge    0x14000eee7
   14000eed8:	lea    r9d,[rax+0x2]
   14000eedc:	mov    eax,r13d
   14000eedf:	lea    ebp,[r9+0x6]
   14000eee3:	lea    r12d,[r9+0x1]
   14000eee7:	mov    DWORD PTR [rsp+0x50],ebx
   14000eeeb:	mov    DWORD PTR [rsp+0x48],ebx
   14000eeef:	mov    DWORD PTR [rsp+0x40],ebx
   14000eef3:	mov    DWORD PTR [rsp+0x38],0x2
   14000eefb:	mov    DWORD PTR [rsp+0x30],ebx
   14000eeff:	mov    r8d,esi
   14000ef02:	mov    edx,r13d
   14000ef05:	mov    ecx,r13d
   14000ef08:	mov    DWORD PTR [rsp+0x28],ebx
   14000ef0c:	mov    DWORD PTR [rsp+0x20],eax
   14000ef10:	call   0x14000ea80
   14000ef15:	mov    r8d,DWORD PTR [rdi+0x14]
   14000ef19:	mov    DWORD PTR [rsp+0x50],ebx
   14000ef1d:	mov    DWORD PTR [rsp+0x48],ebx
   14000ef21:	mov    DWORD PTR [rsp+0x40],ebx
   14000ef25:	mov    DWORD PTR [rsp+0x38],0x2
   14000ef2d:	mov    DWORD PTR [rsp+0x30],ebx
   14000ef31:	mov    DWORD PTR [rsp+0x28],ebx
   14000ef35:	mov    DWORD PTR [rsp+0x20],r12d
   14000ef3a:	mov    r9d,ebp
   14000ef3d:	xor    ecx,ecx
   14000ef3f:	mov    edx,r13d
   14000ef42:	call   0x14000ea80
   14000ef47:	mov    edx,DWORD PTR [rip+0x258a7]        # 0x1400347f4
   14000ef4d:	mov    r8d,DWORD PTR [rip+0x258b0]        # 0x140034804
   14000ef54:	mov    ecx,DWORD PTR [rdi+0x1c]
   14000ef57:	cmp    edx,r8d
   14000ef5a:	jge    0x14000ef93
   14000ef5c:	cmp    ecx,edx
   14000ef5e:	jl     0x14000ed82
   14000ef64:	cmp    ecx,r8d
   14000ef67:	jg     0x14000ed82
   14000ef6d:	cmp    ecx,edx
   14000ef6f:	jle    0x14000efa9
   14000ef71:	cmp    ecx,r8d
   14000ef74:	jge    0x14000efa9
   14000ef76:	mov    eax,r13d
   14000ef79:	lea    r11,[rsp+0x60]
   14000ef7e:	mov    rbx,QWORD PTR [r11+0x20]
   14000ef82:	mov    rbp,QWORD PTR [r11+0x30]
   14000ef86:	mov    rsi,QWORD PTR [r11+0x38]
   14000ef8a:	mov    rsp,r11
   14000ef8d:	pop    r13
   14000ef8f:	pop    r12
   14000ef91:	pop    rdi
   14000ef92:	ret    
   14000ef93:	cmp    ecx,r8d
   14000ef96:	jl     0x14000ef76
   14000ef98:	cmp    ecx,edx
   14000ef9a:	jg     0x14000ef76
   14000ef9c:	cmp    ecx,r8d
   14000ef9f:	jle    0x14000efa9
   14000efa1:	cmp    ecx,edx
   14000efa3:	jl     0x14000ed82
   14000efa9:	mov    eax,DWORD PTR [rdi+0x8]
   14000efac:	imul   eax,eax,0x3c
   14000efaf:	add    eax,DWORD PTR [rdi+0x4]
   14000efb2:	imul   eax,eax,0x3c
   14000efb5:	add    eax,DWORD PTR [rdi]
   14000efb7:	imul   eax,eax,0x3e8
   14000efbd:	cmp    ecx,edx
   14000efbf:	jne    0x14000efce
   14000efc1:	cmp    eax,DWORD PTR [rip+0x25831]        # 0x1400347f8
   14000efc7:	setge  bl
   14000efca:	mov    eax,ebx
   14000efcc:	jmp    0x14000ef79
   14000efce:	cmp    eax,DWORD PTR [rip+0x25834]        # 0x140034808
   14000efd4:	setl   bl
   14000efd7:	jmp    0x14000efca
   14000efd9:	int3   
   14000efda:	int3   
   14000efdb:	int3   
   14000efdc:	sub    rsp,0x28
   14000efe0:	cmp    DWORD PTR [rip+0x26fb1],0x0        # 0x140035f98
   14000efe7:	jne    0x14000f012
   14000efe9:	mov    ecx,0x6
   14000efee:	call   0x1400133a8
   14000eff3:	nop
   14000eff4:	cmp    DWORD PTR [rip+0x26f9d],0x0        # 0x140035f98
   14000effb:	jne    0x14000f008
   14000effd:	call   0x14000e5e0
   14000f002:	inc    DWORD PTR [rip+0x26f90]        # 0x140035f98
   14000f008:	mov    ecx,0x6
   14000f00d:	call   0x140013288
   14000f012:	add    rsp,0x28
   14000f016:	ret    
   14000f017:	int3   
   14000f018:	sub    rsp,0x28
   14000f01c:	mov    ecx,0x6
   14000f021:	call   0x1400133a8
   14000f026:	nop
   14000f027:	call   0x14000e5e0
   14000f02c:	nop
   14000f02d:	mov    ecx,0x6
   14000f032:	call   0x140013288
   14000f037:	add    rsp,0x28
   14000f03b:	ret    
   14000f03c:	rex push rbx
   14000f03e:	sub    rsp,0x20
   14000f042:	mov    rbx,rcx
   14000f045:	mov    ecx,0x6
   14000f04a:	call   0x1400133a8
   14000f04f:	nop
   14000f050:	mov    rcx,rbx
   14000f053:	call   0x14000ed38
   14000f058:	mov    ebx,eax
   14000f05a:	mov    ecx,0x6
   14000f05f:	call   0x140013288
   14000f064:	mov    eax,ebx
   14000f066:	add    rsp,0x20
   14000f06a:	pop    rbx
   14000f06b:	ret    
   14000f06c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f071:	mov    QWORD PTR [rsp+0x10],rsi
   14000f076:	mov    QWORD PTR [rsp+0x18],rdi
   14000f07b:	push   r13
   14000f07d:	sub    rsp,0x30
   14000f081:	xor    edi,edi
   14000f083:	mov    rsi,rdx
   14000f086:	mov    rbx,rcx
   14000f089:	test   rcx,rcx
   14000f08c:	jne    0x14000f0b5
   14000f08e:	call   0x14000f574
   14000f093:	and    QWORD PTR [rsp+0x20],rdi
   14000f098:	mov    ebx,0x16
   14000f09d:	xor    r9d,r9d
   14000f0a0:	xor    r8d,r8d
   14000f0a3:	xor    edx,edx
   14000f0a5:	xor    ecx,ecx
   14000f0a7:	mov    DWORD PTR [rax],ebx
   14000f0a9:	call   0x14000e4d8
   14000f0ae:	mov    eax,ebx
   14000f0b0:	jmp    0x14000f322
   14000f0b5:	mov    edx,0xff
   14000f0ba:	mov    r8d,0x24
   14000f0c0:	call   0x140008a00
   14000f0c5:	test   rsi,rsi
   14000f0c8:	je     0x14000f08e
   14000f0ca:	mov    r9,QWORD PTR [rsi]
   14000f0cd:	cmp    r9,0xffffffffffff5740
   14000f0d4:	jge    0x14000f0e4
   14000f0d6:	call   0x14000f574
   14000f0db:	mov    ebx,0x16
   14000f0e0:	mov    DWORD PTR [rax],ebx
   14000f0e2:	jmp    0x14000f0ae
   14000f0e4:	movabs rax,0x7934126cf
   14000f0ee:	cmp    r9,rax
   14000f0f1:	jg     0x14000f0d6
   14000f0f3:	mov    r11d,0x51eb851f
   14000f0f9:	movabs rax,0x883148f5cb1270b9
   14000f103:	imul   r9
   14000f106:	lea    r8,[r9+rdx*1]
   14000f10a:	sar    r8,0x18
   14000f10e:	mov    rax,r8
   14000f111:	shr    rax,0x3f
   14000f115:	add    r8,rax
   14000f118:	mov    eax,r11d
   14000f11b:	add    r8d,0x46
   14000f11f:	lea    ecx,[r8+0x12b]
   14000f126:	lea    r10d,[r8-0x1]
   14000f12a:	imul   ecx
   14000f12c:	mov    ecx,edx
   14000f12e:	sar    ecx,0x7
   14000f131:	mov    eax,ecx
   14000f133:	shr    eax,0x1f
   14000f136:	add    ecx,eax
   14000f138:	mov    eax,r11d
   14000f13b:	imul   r10d
   14000f13e:	sar    edx,0x5
   14000f141:	mov    eax,edx
   14000f143:	shr    eax,0x1f
   14000f146:	add    edx,eax
   14000f148:	mov    eax,r10d
   14000f14b:	sub    ecx,edx
   14000f14d:	cdq    
   14000f14e:	and    edx,0x3
   14000f151:	add    eax,edx
   14000f153:	sar    eax,0x2
   14000f156:	lea    ecx,[rcx+rax*1-0x11]
   14000f15a:	lea    eax,[r8-0x46]
   14000f15e:	movsxd rdx,ecx
   14000f161:	movsxd rcx,eax
   14000f164:	imul   rcx,rcx,0xfffffffffffffe93
   14000f16b:	sub    rcx,rdx
   14000f16e:	imul   rcx,rcx,0x15180
   14000f175:	add    r9,rcx
   14000f178:	jns    0x14000f1d5
   14000f17a:	mov    eax,r10d
   14000f17d:	add    r9,0x1e13380
   14000f184:	mov    r8d,r10d
   14000f187:	cdq    
   14000f188:	and    edx,0x3
   14000f18b:	add    eax,edx
   14000f18d:	and    eax,0x3
   14000f190:	cmp    eax,edx
   14000f192:	jne    0x14000f1ac
   14000f194:	mov    eax,r11d
   14000f197:	imul   r8d
   14000f19a:	sar    edx,0x5
   14000f19d:	mov    ecx,edx
   14000f19f:	shr    ecx,0x1f
   14000f1a2:	add    edx,ecx
   14000f1a4:	imul   edx,edx,0x64
   14000f1a7:	cmp    r10d,edx
   14000f1aa:	jne    0x14000f1cc
   14000f1ac:	lea    ecx,[r10+0x76c]
   14000f1b3:	mov    eax,r11d
   14000f1b6:	imul   ecx
   14000f1b8:	sar    edx,0x7
   14000f1bb:	mov    eax,edx
   14000f1bd:	shr    eax,0x1f
   14000f1c0:	add    edx,eax
   14000f1c2:	imul   edx,edx,0x190
   14000f1c8:	cmp    ecx,edx
   14000f1ca:	jne    0x14000f222
   14000f1cc:	add    r9,0x15180
   14000f1d3:	jmp    0x14000f21d
   14000f1d5:	mov    eax,r8d
   14000f1d8:	cdq    
   14000f1d9:	and    edx,0x3
   14000f1dc:	add    eax,edx
   14000f1de:	and    eax,0x3
   14000f1e1:	cmp    eax,edx
   14000f1e3:	jne    0x14000f1fd
   14000f1e5:	mov    eax,r11d
   14000f1e8:	imul   r8d
   14000f1eb:	sar    edx,0x5
   14000f1ee:	mov    eax,edx
   14000f1f0:	shr    eax,0x1f
   14000f1f3:	add    edx,eax
   14000f1f5:	imul   edx,edx,0x64
   14000f1f8:	cmp    r8d,edx
   14000f1fb:	jne    0x14000f21d
   14000f1fd:	lea    ecx,[r8+0x76c]
   14000f204:	mov    eax,r11d
   14000f207:	imul   ecx
   14000f209:	sar    edx,0x7
   14000f20c:	mov    eax,edx
   14000f20e:	shr    eax,0x1f
   14000f211:	add    edx,eax
   14000f213:	imul   edx,edx,0x190
   14000f219:	cmp    ecx,edx
   14000f21b:	jne    0x14000f222
   14000f21d:	mov    edi,0x1
   14000f222:	movabs r13,0x1845c8a0ce512957
   14000f22c:	mov    DWORD PTR [rbx+0x14],r8d
   14000f230:	lea    r8,[rip+0x26359]        # 0x140035590
   14000f237:	mov    rax,r13
   14000f23a:	imul   r9
   14000f23d:	sar    rdx,0xd
   14000f241:	mov    rax,rdx
   14000f244:	shr    rax,0x3f
   14000f248:	add    rdx,rax
   14000f24b:	movsxd rax,edx
   14000f24e:	mov    DWORD PTR [rbx+0x1c],edx
   14000f251:	mov    r11d,DWORD PTR [rbx+0x1c]
   14000f255:	imul   rax,rax,0xfffffffffffeae80
   14000f25c:	add    r9,rax
   14000f25f:	lea    rax,[rip+0x26362]        # 0x1400355c8
   14000f266:	test   edi,edi
   14000f268:	mov    edx,0x1
   14000f26d:	cmove  r8,rax
   14000f271:	lea    rcx,[r8+0x4]
   14000f275:	jmp    0x14000f27d
   14000f277:	inc    edx
   14000f279:	add    rcx,0x4
   14000f27d:	cmp    DWORD PTR [rcx],r11d
   14000f280:	jl     0x14000f277
   14000f282:	dec    edx
   14000f284:	mov    rax,r13
   14000f287:	movsxd rcx,edx
   14000f28a:	mov    DWORD PTR [rbx+0x10],edx
   14000f28d:	sub    r11d,DWORD PTR [r8+rcx*4]
   14000f291:	mov    DWORD PTR [rbx+0xc],r11d
   14000f295:	imul   QWORD PTR [rsi]
   14000f298:	and    DWORD PTR [rbx+0x20],0x0
   14000f29c:	mov    rcx,rdx
   14000f29f:	sar    rcx,0xd
   14000f2a3:	mov    rax,rcx
   14000f2a6:	shr    rax,0x3f
   14000f2aa:	add    rcx,rax
   14000f2ad:	mov    eax,0x92492493
   14000f2b2:	add    ecx,0x4
   14000f2b5:	imul   ecx
   14000f2b7:	add    edx,ecx
   14000f2b9:	sar    edx,0x2
   14000f2bc:	mov    eax,edx
   14000f2be:	shr    eax,0x1f
   14000f2c1:	add    edx,eax
   14000f2c3:	movabs rax,0x48d159e26af37c05
   14000f2cd:	imul   edx,edx,0x7
   14000f2d0:	sub    ecx,edx
   14000f2d2:	imul   r9
   14000f2d5:	mov    DWORD PTR [rbx+0x18],ecx
   14000f2d8:	sar    rdx,0xa
   14000f2dc:	mov    rax,rdx
   14000f2df:	shr    rax,0x3f
   14000f2e3:	add    rdx,rax
   14000f2e6:	movsxd rax,edx
   14000f2e9:	mov    DWORD PTR [rbx+0x8],edx
   14000f2ec:	imul   rax,rax,0xfffffffffffff1f0
   14000f2f3:	add    r9,rax
   14000f2f6:	movabs rax,0x8888888888888889
   14000f300:	imul   r9
   14000f303:	add    rdx,r9
   14000f306:	sar    rdx,0x5
   14000f30a:	mov    rax,rdx
   14000f30d:	shr    rax,0x3f
   14000f311:	add    rdx,rax
   14000f314:	mov    DWORD PTR [rbx+0x4],edx
   14000f317:	imul   edx,edx,0x3c
   14000f31a:	sub    r9d,edx
   14000f31d:	xor    eax,eax
   14000f31f:	mov    DWORD PTR [rbx],r9d
   14000f322:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f327:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f32c:	mov    rdi,QWORD PTR [rsp+0x50]
   14000f331:	add    rsp,0x30
   14000f335:	pop    r13
   14000f337:	ret    
   14000f338:	mov    QWORD PTR [rsp+0x8],rbx
   14000f33d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f342:	push   rdi
   14000f343:	sub    rsp,0x20
   14000f347:	mov    rdi,rcx
   14000f34a:	call   0x14000f8b4
   14000f34f:	xor    esi,esi
   14000f351:	mov    rbx,rax
   14000f354:	cmp    rax,rsi
   14000f357:	jne    0x14000f35d
   14000f359:	xor    eax,eax
   14000f35b:	jmp    0x14000f371
   14000f35d:	mov    rdx,rdi
   14000f360:	mov    rcx,rax
   14000f363:	call   0x14000f06c
   14000f368:	cmp    eax,esi
   14000f36a:	cmovne rbx,rsi
   14000f36e:	mov    rax,rbx
   14000f371:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f376:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f37b:	add    rsp,0x20
   14000f37f:	pop    rdi
   14000f380:	ret    
   14000f381:	int3   
   14000f382:	int3   
   14000f383:	int3   
   14000f384:	sub    rsp,0x38
   14000f388:	test   rcx,rcx
   14000f38b:	jne    0x14000f3b4
   14000f38d:	call   0x14000f574
   14000f392:	and    QWORD PTR [rsp+0x20],0x0
   14000f398:	xor    r9d,r9d
   14000f39b:	xor    r8d,r8d
   14000f39e:	xor    edx,edx
   14000f3a0:	xor    ecx,ecx
   14000f3a2:	mov    DWORD PTR [rax],0x16
   14000f3a8:	call   0x14000e4d8
   14000f3ad:	mov    eax,0x16
   14000f3b2:	jmp    0x14000f3be
   14000f3b4:	mov    eax,DWORD PTR [rip+0x2545a]        # 0x140034814
   14000f3ba:	mov    DWORD PTR [rcx],eax
   14000f3bc:	xor    eax,eax
   14000f3be:	add    rsp,0x38
   14000f3c2:	ret    
   14000f3c3:	int3   
   14000f3c4:	sub    rsp,0x38
   14000f3c8:	test   rcx,rcx
   14000f3cb:	jne    0x14000f3f4
   14000f3cd:	call   0x14000f574
   14000f3d2:	and    QWORD PTR [rsp+0x20],0x0
   14000f3d8:	xor    r9d,r9d
   14000f3db:	xor    r8d,r8d
   14000f3de:	xor    edx,edx
   14000f3e0:	xor    ecx,ecx
   14000f3e2:	mov    DWORD PTR [rax],0x16
   14000f3e8:	call   0x14000e4d8
   14000f3ed:	mov    eax,0x16
   14000f3f2:	jmp    0x14000f3fe
   14000f3f4:	mov    eax,DWORD PTR [rip+0x2541e]        # 0x140034818
   14000f3fa:	mov    DWORD PTR [rcx],eax
   14000f3fc:	xor    eax,eax
   14000f3fe:	add    rsp,0x38
   14000f402:	ret    
   14000f403:	int3   
   14000f404:	sub    rsp,0x38
   14000f408:	test   rcx,rcx
   14000f40b:	jne    0x14000f434
   14000f40d:	call   0x14000f574
   14000f412:	and    QWORD PTR [rsp+0x20],0x0
   14000f418:	xor    r9d,r9d
   14000f41b:	xor    r8d,r8d
   14000f41e:	xor    edx,edx
   14000f420:	xor    ecx,ecx
   14000f422:	mov    DWORD PTR [rax],0x16
   14000f428:	call   0x14000e4d8
   14000f42d:	mov    eax,0x16
   14000f432:	jmp    0x14000f43e
   14000f434:	mov    eax,DWORD PTR [rip+0x253d6]        # 0x140034810
   14000f43a:	mov    DWORD PTR [rcx],eax
   14000f43c:	xor    eax,eax
   14000f43e:	add    rsp,0x38
   14000f442:	ret    
   14000f443:	int3   
   14000f444:	mov    rax,rsp
   14000f447:	mov    QWORD PTR [rax+0x8],rbx
   14000f44b:	mov    QWORD PTR [rax+0x10],rbp
   14000f44f:	mov    QWORD PTR [rax+0x18],rsi
   14000f453:	mov    QWORD PTR [rax+0x20],rdi
   14000f457:	push   r13
   14000f459:	sub    rsp,0x30
   14000f45d:	mov    rbx,r8
   14000f460:	mov    rdi,rdx
   14000f463:	mov    rsi,rcx
   14000f466:	test   rdx,rdx
   14000f469:	je     0x14000f4ab
   14000f46b:	test   rbx,rbx
   14000f46e:	je     0x14000f4b0
   14000f470:	test   rdx,rdx
   14000f473:	je     0x14000f478
   14000f475:	mov    BYTE PTR [rdx],0x0
   14000f478:	test   rcx,rcx
   14000f47b:	je     0x14000f4b0
   14000f47d:	test   r9d,r9d
   14000f480:	je     0x14000f488
   14000f482:	cmp    r9d,0x1
   14000f486:	jne    0x14000f4b0
   14000f488:	movsxd rbp,r9d
   14000f48b:	lea    r13,[rip+0x2540e]        # 0x1400348a0
   14000f492:	mov    rcx,QWORD PTR [r13+rbp*8+0x0]
   14000f497:	call   0x140012e10
   14000f49c:	inc    rax
   14000f49f:	mov    QWORD PTR [rsi],rax
   14000f4a2:	test   rdi,rdi
   14000f4a5:	jne    0x14000f4d5
   14000f4a7:	xor    eax,eax
   14000f4a9:	jmp    0x14000f4f1
   14000f4ab:	test   rbx,rbx
   14000f4ae:	je     0x14000f470
   14000f4b0:	call   0x14000f574
   14000f4b5:	and    QWORD PTR [rsp+0x20],0x0
   14000f4bb:	mov    ebx,0x16
   14000f4c0:	xor    r9d,r9d
   14000f4c3:	xor    r8d,r8d
   14000f4c6:	xor    edx,edx
   14000f4c8:	xor    ecx,ecx
   14000f4ca:	mov    DWORD PTR [rax],ebx
   14000f4cc:	call   0x14000e4d8
   14000f4d1:	mov    eax,ebx
   14000f4d3:	jmp    0x14000f4f1
   14000f4d5:	cmp    rax,rbx
   14000f4d8:	jbe    0x14000f4e1
   14000f4da:	mov    eax,0x22
   14000f4df:	jmp    0x14000f4f1
   14000f4e1:	mov    r8,QWORD PTR [r13+rbp*8+0x0]
   14000f4e6:	mov    rdx,rbx
   14000f4e9:	mov    rcx,rdi
   14000f4ec:	call   0x140012b54
   14000f4f1:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f4f6:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f4fb:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f500:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f505:	add    rsp,0x30
   14000f509:	pop    r13
   14000f50b:	ret    
   14000f50c:	lea    rax,[rip+0x25301]        # 0x140034814
   14000f513:	ret    
   14000f514:	lea    rax,[rip+0x252fd]        # 0x140034818
   14000f51b:	ret    
   14000f51c:	lea    rax,[rip+0x252ed]        # 0x140034810
   14000f523:	ret    
   14000f524:	lea    rax,[rip+0x25375]        # 0x1400348a0
   14000f52b:	ret    
   14000f52c:	lea    r9,[rip+0x2537d]        # 0x1400348b0
   14000f533:	xor    eax,eax
   14000f535:	mov    rdx,r9
   14000f538:	lea    r8d,[rax+0x8]
   14000f53c:	cmp    ecx,DWORD PTR [rdx]
   14000f53e:	je     0x14000f56b
   14000f540:	inc    eax
   14000f542:	add    rdx,r8
   14000f545:	cmp    eax,0x2d
   14000f548:	jb     0x14000f53c
   14000f54a:	lea    eax,[rcx-0x13]
   14000f54d:	cmp    eax,0x11
   14000f550:	ja     0x14000f558
   14000f552:	mov    eax,0xd
   14000f557:	ret    
   14000f558:	add    ecx,0xffffff44
   14000f55e:	mov    eax,0x16
   14000f563:	cmp    ecx,0xe
   14000f566:	cmovbe eax,r8d
   14000f56a:	ret    
   14000f56b:	cdqe   
   14000f56d:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000f572:	ret    
   14000f573:	int3   
   14000f574:	sub    rsp,0x28
   14000f578:	call   0x140011860
   14000f57d:	test   rax,rax
   14000f580:	jne    0x14000f58b
   14000f582:	lea    rax,[rip+0x2548f]        # 0x140034a18
   14000f589:	jmp    0x14000f58f
   14000f58b:	add    rax,0x10
   14000f58f:	add    rsp,0x28
   14000f593:	ret    
   14000f594:	sub    rsp,0x28
   14000f598:	call   0x140011860
   14000f59d:	test   rax,rax
   14000f5a0:	jne    0x14000f5ab
   14000f5a2:	lea    rax,[rip+0x25473]        # 0x140034a1c
   14000f5a9:	jmp    0x14000f5af
   14000f5ab:	add    rax,0x14
   14000f5af:	add    rsp,0x28
   14000f5b3:	ret    
   14000f5b4:	rex push rbx
   14000f5b6:	sub    rsp,0x20
   14000f5ba:	mov    ebx,ecx
   14000f5bc:	call   0x140011860
   14000f5c1:	test   rax,rax
   14000f5c4:	jne    0x14000f5cf
   14000f5c6:	lea    rax,[rip+0x2544f]        # 0x140034a1c
   14000f5cd:	jmp    0x14000f5d3
   14000f5cf:	add    rax,0x14
   14000f5d3:	mov    DWORD PTR [rax],ebx
   14000f5d5:	call   0x140011860
   14000f5da:	lea    r10,[rip+0x25437]        # 0x140034a18
   14000f5e1:	test   rax,rax
   14000f5e4:	je     0x14000f5ea
   14000f5e6:	lea    r10,[rax+0x10]
   14000f5ea:	mov    ecx,ebx
   14000f5ec:	call   0x14000f52c
   14000f5f1:	mov    DWORD PTR [r10],eax
   14000f5f4:	add    rsp,0x20
   14000f5f8:	pop    rbx
   14000f5f9:	ret    
   14000f5fa:	int3   
   14000f5fb:	int3   
   14000f5fc:	rex push rbx
   14000f5fe:	sub    rsp,0x20
   14000f602:	mov    ebx,ecx
   14000f604:	call   0x140011860
   14000f609:	test   rax,rax
   14000f60c:	jne    0x14000f615
   14000f60e:	mov    eax,0xc
   14000f613:	jmp    0x14000f630
   14000f615:	call   0x140011860
   14000f61a:	test   rax,rax
   14000f61d:	jne    0x14000f628
   14000f61f:	lea    rax,[rip+0x253f2]        # 0x140034a18
   14000f626:	jmp    0x14000f62c
   14000f628:	add    rax,0x10
   14000f62c:	mov    DWORD PTR [rax],ebx
   14000f62e:	xor    eax,eax
   14000f630:	add    rsp,0x20
   14000f634:	pop    rbx
   14000f635:	ret    
   14000f636:	int3   
   14000f637:	int3   
   14000f638:	rex push rbx
   14000f63a:	sub    rsp,0x30
   14000f63e:	mov    rbx,rcx
   14000f641:	test   rcx,rcx
   14000f644:	jne    0x14000f65d
   14000f646:	and    QWORD PTR [rsp+0x20],rcx
   14000f64b:	xor    r9d,r9d
   14000f64e:	xor    r8d,r8d
   14000f651:	xor    edx,edx
   14000f653:	call   0x14000e4d8
   14000f658:	lea    eax,[rbx+0x16]
   14000f65b:	jmp    0x14000f67a
   14000f65d:	call   0x140011860
   14000f662:	test   rax,rax
   14000f665:	jne    0x14000f670
   14000f667:	lea    rax,[rip+0x253aa]        # 0x140034a18
   14000f66e:	jmp    0x14000f674
   14000f670:	add    rax,0x10
   14000f674:	mov    eax,DWORD PTR [rax]
   14000f676:	mov    DWORD PTR [rbx],eax
   14000f678:	xor    eax,eax
   14000f67a:	add    rsp,0x30
   14000f67e:	pop    rbx
   14000f67f:	ret    
   14000f680:	rex push rbx
   14000f682:	sub    rsp,0x20
   14000f686:	mov    ebx,ecx
   14000f688:	call   0x140011860
   14000f68d:	test   rax,rax
   14000f690:	jne    0x14000f699
   14000f692:	mov    eax,0xc
   14000f697:	jmp    0x14000f6b4
   14000f699:	call   0x140011860
   14000f69e:	test   rax,rax
   14000f6a1:	jne    0x14000f6ac
   14000f6a3:	lea    rax,[rip+0x25372]        # 0x140034a1c
   14000f6aa:	jmp    0x14000f6b0
   14000f6ac:	add    rax,0x14
   14000f6b0:	mov    DWORD PTR [rax],ebx
   14000f6b2:	xor    eax,eax
   14000f6b4:	add    rsp,0x20
   14000f6b8:	pop    rbx
   14000f6b9:	ret    
   14000f6ba:	int3   
   14000f6bb:	int3   
   14000f6bc:	rex push rbx
   14000f6be:	sub    rsp,0x30
   14000f6c2:	mov    rbx,rcx
   14000f6c5:	test   rcx,rcx
   14000f6c8:	jne    0x14000f6e1
   14000f6ca:	and    QWORD PTR [rsp+0x20],rcx
   14000f6cf:	xor    r9d,r9d
   14000f6d2:	xor    r8d,r8d
   14000f6d5:	xor    edx,edx
   14000f6d7:	call   0x14000e4d8
   14000f6dc:	lea    eax,[rbx+0x16]
   14000f6df:	jmp    0x14000f6fe
   14000f6e1:	call   0x140011860
   14000f6e6:	test   rax,rax
   14000f6e9:	jne    0x14000f6f4
   14000f6eb:	lea    rax,[rip+0x2532a]        # 0x140034a1c
   14000f6f2:	jmp    0x14000f6f8
   14000f6f4:	add    rax,0x14
   14000f6f8:	mov    eax,DWORD PTR [rax]
   14000f6fa:	mov    DWORD PTR [rbx],eax
   14000f6fc:	xor    eax,eax
   14000f6fe:	add    rsp,0x30
   14000f702:	pop    rbx
   14000f703:	ret    
   14000f704:	mov    QWORD PTR [rsp+0x8],rbx
   14000f709:	mov    QWORD PTR [rsp+0x10],rsi
   14000f70e:	push   rdi
   14000f70f:	sub    rsp,0x30
   14000f713:	xor    esi,esi
   14000f715:	mov    rdi,rdx
   14000f718:	mov    rbx,rcx
   14000f71b:	test   rcx,rcx
   14000f71e:	jne    0x14000f747
   14000f720:	call   0x14000f574
   14000f725:	and    QWORD PTR [rsp+0x20],rsi
   14000f72a:	mov    ebx,0x16
   14000f72f:	xor    r9d,r9d
   14000f732:	xor    r8d,r8d
   14000f735:	xor    edx,edx
   14000f737:	xor    ecx,ecx
   14000f739:	mov    DWORD PTR [rax],ebx
   14000f73b:	call   0x14000e4d8
   14000f740:	mov    eax,ebx
   14000f742:	jmp    0x14000f8a3
   14000f747:	mov    edx,0xff
   14000f74c:	mov    r8d,0x24
   14000f752:	call   0x140008a00
   14000f757:	test   rdi,rdi
   14000f75a:	je     0x14000f720
   14000f75c:	mov    r8d,DWORD PTR [rdi]
   14000f75f:	cmp    r8d,0xffff5740
   14000f766:	jge    0x14000f776
   14000f768:	call   0x14000f574
   14000f76d:	mov    ebx,0x16
   14000f772:	mov    DWORD PTR [rax],ebx
   14000f774:	jmp    0x14000f740
   14000f776:	mov    eax,0x11032d79
   14000f77b:	imul   r8d
   14000f77e:	sar    edx,0x17
   14000f781:	mov    eax,edx
   14000f783:	shr    eax,0x1f
   14000f786:	add    edx,eax
   14000f788:	mov    eax,edx
   14000f78a:	lea    edx,[rdx*4+0x46]
   14000f791:	imul   eax,eax,0xf879e080
   14000f797:	add    r8d,eax
   14000f79a:	mov    eax,0x1e13380
   14000f79f:	cmp    r8d,eax
   14000f7a2:	jl     0x14000f7c9
   14000f7a4:	sub    r8d,eax
   14000f7a7:	inc    edx
   14000f7a9:	cmp    r8d,eax
   14000f7ac:	jl     0x14000f7c9
   14000f7ae:	sub    r8d,eax
   14000f7b1:	mov    eax,0x1e28500
   14000f7b6:	inc    edx
   14000f7b8:	cmp    r8d,eax
   14000f7bb:	jl     0x14000f7c4
   14000f7bd:	inc    edx
   14000f7bf:	sub    r8d,eax
   14000f7c2:	jmp    0x14000f7c9
   14000f7c4:	mov    esi,0x1
   14000f7c9:	mov    DWORD PTR [rbx+0x14],edx
   14000f7cc:	mov    eax,0xc22e4507
   14000f7d1:	lea    r9,[rip+0x25db8]        # 0x140035590
   14000f7d8:	imul   r8d
   14000f7db:	add    edx,r8d
   14000f7de:	sar    edx,0x10
   14000f7e1:	mov    eax,edx
   14000f7e3:	shr    eax,0x1f
   14000f7e6:	add    edx,eax
   14000f7e8:	lea    rax,[rip+0x25dd9]        # 0x1400355c8
   14000f7ef:	mov    DWORD PTR [rbx+0x1c],edx
   14000f7f2:	mov    r11d,DWORD PTR [rbx+0x1c]
   14000f7f6:	imul   edx,edx,0xfffeae80
   14000f7fc:	add    r8d,edx
   14000f7ff:	test   esi,esi
   14000f801:	cmove  r9,rax
   14000f805:	mov    edx,0x1
   14000f80a:	lea    rcx,[r9+0x4]
   14000f80e:	jmp    0x14000f816
   14000f810:	inc    edx
   14000f812:	add    rcx,0x4
   14000f816:	cmp    DWORD PTR [rcx],r11d
   14000f819:	jl     0x14000f810
   14000f81b:	dec    edx
   14000f81d:	mov    eax,0xc22e4507
   14000f822:	movsxd rcx,edx
   14000f825:	mov    DWORD PTR [rbx+0x10],edx
   14000f828:	sub    r11d,DWORD PTR [r9+rcx*4]
   14000f82c:	mov    DWORD PTR [rbx+0xc],r11d
   14000f830:	imul   DWORD PTR [rdi]
   14000f832:	add    edx,DWORD PTR [rdi]
   14000f834:	and    DWORD PTR [rbx+0x20],0x0
   14000f838:	sar    edx,0x10
   14000f83b:	mov    eax,edx
   14000f83d:	shr    eax,0x1f
   14000f840:	lea    ecx,[rdx+rax*1+0x4]
   14000f844:	mov    eax,0x92492493
   14000f849:	imul   ecx
   14000f84b:	add    edx,ecx
   14000f84d:	sar    edx,0x2
   14000f850:	mov    eax,edx
   14000f852:	shr    eax,0x1f
   14000f855:	add    edx,eax
   14000f857:	mov    eax,0x91a2b3c5
   14000f85c:	imul   edx,edx,0x7
   14000f85f:	sub    ecx,edx
   14000f861:	imul   r8d
   14000f864:	mov    DWORD PTR [rbx+0x18],ecx
   14000f867:	add    edx,r8d
   14000f86a:	sar    edx,0xb
   14000f86d:	mov    eax,edx
   14000f86f:	shr    eax,0x1f
   14000f872:	add    edx,eax
   14000f874:	mov    eax,0x88888889
   14000f879:	mov    DWORD PTR [rbx+0x8],edx
   14000f87c:	imul   edx,edx,0xfffff1f0
   14000f882:	add    r8d,edx
   14000f885:	imul   r8d
   14000f888:	add    edx,r8d
   14000f88b:	sar    edx,0x5
   14000f88e:	mov    eax,edx
   14000f890:	shr    eax,0x1f
   14000f893:	add    edx,eax
   14000f895:	mov    DWORD PTR [rbx+0x4],edx
   14000f898:	imul   edx,edx,0x3c
   14000f89b:	sub    r8d,edx
   14000f89e:	xor    eax,eax
   14000f8a0:	mov    DWORD PTR [rbx],r8d
   14000f8a3:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f8a8:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f8ad:	add    rsp,0x30
   14000f8b1:	pop    rdi
   14000f8b2:	ret    
   14000f8b3:	int3   
   14000f8b4:	rex push rbx
   14000f8b6:	sub    rsp,0x20
   14000f8ba:	call   0x140011860
   14000f8bf:	mov    rbx,rax
   14000f8c2:	test   rax,rax
   14000f8c5:	jne    0x14000f8d6
   14000f8c7:	call   0x14000f574
   14000f8cc:	mov    DWORD PTR [rax],0xc
   14000f8d2:	xor    eax,eax
   14000f8d4:	jmp    0x14000f8f4
   14000f8d6:	cmp    QWORD PTR [rax+0x78],0x0
   14000f8db:	jne    0x14000f8f0
   14000f8dd:	mov    ecx,0x24
   14000f8e2:	call   0x140012c00
   14000f8e7:	mov    QWORD PTR [rbx+0x78],rax
   14000f8eb:	test   rax,rax
   14000f8ee:	je     0x14000f8c7
   14000f8f0:	mov    rax,QWORD PTR [rbx+0x78]
   14000f8f4:	add    rsp,0x20
   14000f8f8:	pop    rbx
   14000f8f9:	ret    
   14000f8fa:	int3   
   14000f8fb:	int3   
   14000f8fc:	mov    QWORD PTR [rsp+0x8],rbx
   14000f901:	mov    QWORD PTR [rsp+0x10],rsi
   14000f906:	push   rdi
   14000f907:	sub    rsp,0x20
   14000f90b:	mov    rdi,rcx
   14000f90e:	call   0x14000f8b4
   14000f913:	xor    esi,esi
   14000f915:	mov    rbx,rax
   14000f918:	cmp    rax,rsi
   14000f91b:	jne    0x14000f921
   14000f91d:	xor    eax,eax
   14000f91f:	jmp    0x14000f935
   14000f921:	mov    rdx,rdi
   14000f924:	mov    rcx,rax
   14000f927:	call   0x14000f704
   14000f92c:	cmp    eax,esi
   14000f92e:	cmovne rbx,rsi
   14000f932:	mov    rax,rbx
   14000f935:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f93a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f93f:	add    rsp,0x20
   14000f943:	pop    rdi
   14000f944:	ret    
   14000f945:	int3   
   14000f946:	int3   
   14000f947:	int3   
   14000f948:	sub    ecx,0x3a4
   14000f94e:	je     0x14000f974
   14000f950:	sub    ecx,0x4
   14000f953:	je     0x14000f96e
   14000f955:	sub    ecx,0xd
   14000f958:	je     0x14000f968
   14000f95a:	cmp    ecx,0x1
   14000f95d:	je     0x14000f962
   14000f95f:	xor    eax,eax
   14000f961:	ret    
   14000f962:	mov    eax,0x404
   14000f967:	ret    
   14000f968:	mov    eax,0x412
   14000f96d:	ret    
   14000f96e:	mov    eax,0x804
   14000f973:	ret    
   14000f974:	mov    eax,0x411
   14000f979:	ret    
   14000f97a:	int3   
   14000f97b:	int3   
   14000f97c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f981:	mov    QWORD PTR [rsp+0x10],rbp
   14000f986:	mov    QWORD PTR [rsp+0x18],rsi
   14000f98b:	push   rdi
   14000f98c:	sub    rsp,0x20
   14000f990:	lea    rbx,[rcx+0x1c]
   14000f994:	mov    rbp,rcx
   14000f997:	mov    esi,0x101
   14000f99c:	mov    rcx,rbx
   14000f99f:	mov    r8,rsi
   14000f9a2:	xor    edx,edx
   14000f9a4:	call   0x140008a00
   14000f9a9:	xor    r11d,r11d
   14000f9ac:	lea    rdi,[rbp+0x10]
   14000f9b0:	lea    ecx,[r11+0x6]
   14000f9b4:	movzx  eax,r11w
   14000f9b8:	mov    DWORD PTR [rbp+0x4],r11d
   14000f9bc:	mov    DWORD PTR [rbp+0x8],r11d
   14000f9c0:	mov    DWORD PTR [rbp+0xc],r11d
   14000f9c4:	rep stos WORD PTR es:[rdi],ax
   14000f9c7:	lea    rdi,[rip+0x25052]        # 0x140034a20
   14000f9ce:	sub    rdi,rbp
   14000f9d1:	mov    al,BYTE PTR [rdi+rbx*1]
   14000f9d4:	mov    BYTE PTR [rbx],al
   14000f9d6:	inc    rbx
   14000f9d9:	sub    rsi,0x1
   14000f9dd:	jne    0x14000f9d1
   14000f9df:	lea    rcx,[rbp+0x11d]
   14000f9e6:	mov    edx,0x100
   14000f9eb:	mov    al,BYTE PTR [rcx+rdi*1]
   14000f9ee:	mov    BYTE PTR [rcx],al
   14000f9f0:	inc    rcx
   14000f9f3:	sub    rdx,0x1
   14000f9f7:	jne    0x14000f9eb
   14000f9f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f9fe:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fa03:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fa08:	add    rsp,0x20
   14000fa0c:	pop    rdi
   14000fa0d:	ret    
   14000fa0e:	int3   
   14000fa0f:	int3   
   14000fa10:	mov    QWORD PTR [rsp+0x10],rbx
   14000fa15:	mov    QWORD PTR [rsp+0x18],rsi
   14000fa1a:	push   rdi
   14000fa1b:	sub    rsp,0x580
   14000fa22:	mov    rax,QWORD PTR [rip+0x24877]        # 0x1400342a0
   14000fa29:	xor    rax,rsp
   14000fa2c:	mov    QWORD PTR [rsp+0x570],rax
   14000fa34:	mov    rsi,rcx
   14000fa37:	mov    ecx,DWORD PTR [rcx+0x4]
   14000fa3a:	lea    rdx,[rsp+0x50]
   14000fa3f:	call   QWORD PTR [rip+0x1797b]        # 0x1400273c0
   14000fa45:	mov    ebx,0x100
   14000fa4a:	test   eax,eax
   14000fa4c:	je     0x14000fb8f
   14000fa52:	xor    eax,eax
   14000fa54:	lea    rdx,[rsp+0x70]
   14000fa59:	mov    BYTE PTR [rdx],al
   14000fa5b:	inc    eax
   14000fa5d:	inc    rdx
   14000fa60:	cmp    eax,ebx
   14000fa62:	jb     0x14000fa59
   14000fa64:	mov    al,BYTE PTR [rsp+0x56]
   14000fa68:	mov    BYTE PTR [rsp+0x70],0x20
   14000fa6d:	lea    rdi,[rsp+0x56]
   14000fa72:	jmp    0x14000fa9d
   14000fa74:	movzx  edx,BYTE PTR [rdi+0x1]
   14000fa78:	movzx  r8d,al
   14000fa7c:	cmp    r8d,edx
   14000fa7f:	ja     0x14000fa97
   14000fa81:	sub    edx,r8d
   14000fa84:	mov    rax,r8
   14000fa87:	lea    rcx,[rsp+r8*1+0x70]
   14000fa8c:	lea    r8d,[rdx+0x1]
   14000fa90:	mov    dl,0x20
   14000fa92:	call   0x140008a00
   14000fa97:	add    rdi,0x2
   14000fa9b:	mov    al,BYTE PTR [rdi]
   14000fa9d:	test   al,al
   14000fa9f:	jne    0x14000fa74
   14000faa1:	mov    eax,DWORD PTR [rsi+0xc]
   14000faa4:	and    DWORD PTR [rsp+0x38],0x0
   14000faa9:	lea    r8,[rsp+0x70]
   14000faae:	mov    DWORD PTR [rsp+0x30],eax
   14000fab2:	mov    eax,DWORD PTR [rsi+0x4]
   14000fab5:	mov    r9d,ebx
   14000fab8:	mov    DWORD PTR [rsp+0x28],eax
   14000fabc:	lea    rax,[rsp+0x370]
   14000fac4:	mov    edx,0x1
   14000fac9:	xor    ecx,ecx
   14000facb:	mov    QWORD PTR [rsp+0x20],rax
   14000fad0:	call   0x14001c0ec
   14000fad5:	and    DWORD PTR [rsp+0x40],0x0
   14000fada:	mov    eax,DWORD PTR [rsi+0x4]
   14000fadd:	mov    edx,DWORD PTR [rsi+0xc]
   14000fae0:	mov    DWORD PTR [rsp+0x38],eax
   14000fae4:	lea    rax,[rsp+0x170]
   14000faec:	mov    DWORD PTR [rsp+0x30],ebx
   14000faf0:	mov    QWORD PTR [rsp+0x28],rax
   14000faf5:	lea    r9,[rsp+0x70]
   14000fafa:	mov    r8d,ebx
   14000fafd:	xor    ecx,ecx
   14000faff:	mov    DWORD PTR [rsp+0x20],ebx
   14000fb03:	call   0x14001bde8
   14000fb08:	and    DWORD PTR [rsp+0x40],0x0
   14000fb0d:	mov    eax,DWORD PTR [rsi+0x4]
   14000fb10:	mov    edx,DWORD PTR [rsi+0xc]
   14000fb13:	mov    DWORD PTR [rsp+0x38],eax
   14000fb17:	lea    rax,[rsp+0x270]
   14000fb1f:	mov    DWORD PTR [rsp+0x30],ebx
   14000fb23:	mov    QWORD PTR [rsp+0x28],rax
   14000fb28:	lea    r9,[rsp+0x70]
   14000fb2d:	mov    r8d,0x200
   14000fb33:	xor    ecx,ecx
   14000fb35:	mov    DWORD PTR [rsp+0x20],ebx
   14000fb39:	call   0x14001bde8
   14000fb3e:	lea    r11,[rsp+0x370]
   14000fb46:	lea    rcx,[rsi+0x1d]
   14000fb4a:	xor    edx,edx
   14000fb4c:	test   BYTE PTR [r11],0x1
   14000fb50:	je     0x14000fb5e
   14000fb52:	or     BYTE PTR [rcx],0x10
   14000fb55:	mov    al,BYTE PTR [rsp+rdx*1+0x170]
   14000fb5c:	jmp    0x14000fb6e
   14000fb5e:	test   BYTE PTR [r11],0x2
   14000fb62:	je     0x14000fb76
   14000fb64:	or     BYTE PTR [rcx],0x20
   14000fb67:	mov    al,BYTE PTR [rsp+rdx*1+0x270]
   14000fb6e:	mov    BYTE PTR [rcx+0x100],al
   14000fb74:	jmp    0x14000fb7d
   14000fb76:	mov    BYTE PTR [rcx+0x100],0x0
   14000fb7d:	inc    rcx
   14000fb80:	inc    rdx
   14000fb83:	add    r11,0x2
   14000fb87:	sub    rbx,0x1
   14000fb8b:	jne    0x14000fb4c
   14000fb8d:	jmp    0x14000fbce
   14000fb8f:	xor    edx,edx
   14000fb91:	lea    rcx,[rsi+0x1d]
   14000fb95:	lea    r8d,[rdx-0x61]
   14000fb99:	lea    eax,[r8+0x20]
   14000fb9d:	cmp    eax,0x19
   14000fba0:	ja     0x14000fbaa
   14000fba2:	or     BYTE PTR [rcx],0x10
   14000fba5:	lea    eax,[rdx+0x20]
   14000fba8:	jmp    0x14000fbb6
   14000fbaa:	cmp    r8d,0x19
   14000fbae:	ja     0x14000fbbe
   14000fbb0:	or     BYTE PTR [rcx],0x20
   14000fbb3:	lea    eax,[rdx-0x20]
   14000fbb6:	mov    BYTE PTR [rcx+0x100],al
   14000fbbc:	jmp    0x14000fbc5
   14000fbbe:	mov    BYTE PTR [rcx+0x100],0x0
   14000fbc5:	inc    edx
   14000fbc7:	inc    rcx
   14000fbca:	cmp    edx,ebx
   14000fbcc:	jb     0x14000fb95
   14000fbce:	mov    rcx,QWORD PTR [rsp+0x570]
   14000fbd6:	xor    rcx,rsp
   14000fbd9:	call   0x140009080
   14000fbde:	lea    r11,[rsp+0x580]
   14000fbe6:	mov    rbx,QWORD PTR [r11+0x18]
   14000fbea:	mov    rsi,QWORD PTR [r11+0x20]
   14000fbee:	mov    rsp,r11
   14000fbf1:	pop    rdi
   14000fbf2:	ret    
   14000fbf3:	int3   
   14000fbf4:	mov    QWORD PTR [rsp+0x10],rbx
   14000fbf9:	push   rdi
   14000fbfa:	sub    rsp,0x20
   14000fbfe:	call   0x1400118e4
   14000fc03:	mov    rdi,rax
   14000fc06:	mov    ecx,DWORD PTR [rax+0xc8]
   14000fc0c:	test   DWORD PTR [rip+0x25346],ecx        # 0x140034f58
   14000fc12:	je     0x14000fc27
   14000fc14:	cmp    QWORD PTR [rax+0xc0],0x0
   14000fc1c:	je     0x14000fc27
   14000fc1e:	mov    rbx,QWORD PTR [rax+0xb8]
   14000fc25:	jmp    0x14000fc95
   14000fc27:	mov    ecx,0xd
   14000fc2c:	call   0x1400133a8
   14000fc31:	nop
   14000fc32:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000fc39:	mov    QWORD PTR [rsp+0x30],rbx
   14000fc3e:	cmp    rbx,QWORD PTR [rip+0x2520b]        # 0x140034e50
   14000fc45:	je     0x14000fc8b
   14000fc47:	test   rbx,rbx
   14000fc4a:	je     0x14000fc68
   14000fc4c:	lock add DWORD PTR [rbx],0xffffffff
   14000fc50:	jne    0x14000fc68
   14000fc52:	lea    rax,[rip+0x24dc7]        # 0x140034a20
   14000fc59:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fc5e:	cmp    rcx,rax
   14000fc61:	je     0x14000fc68
   14000fc63:	call   0x1400098ac
   14000fc68:	mov    rax,QWORD PTR [rip+0x251e1]        # 0x140034e50
   14000fc6f:	mov    QWORD PTR [rdi+0xb8],rax
   14000fc76:	mov    rax,QWORD PTR [rip+0x251d3]        # 0x140034e50
   14000fc7d:	mov    QWORD PTR [rsp+0x30],rax
   14000fc82:	lock add DWORD PTR [rax],0x1
   14000fc86:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fc8b:	mov    ecx,0xd
   14000fc90:	call   0x140013288
   14000fc95:	test   rbx,rbx
   14000fc98:	jne    0x14000fca2
   14000fc9a:	lea    ecx,[rbx+0x20]
   14000fc9d:	call   0x14000db1c
   14000fca2:	mov    rax,rbx
   14000fca5:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fcaa:	add    rsp,0x20
   14000fcae:	pop    rdi
   14000fcaf:	ret    
   14000fcb0:	rex push rbx
   14000fcb2:	sub    rsp,0x40
   14000fcb6:	mov    ebx,ecx
   14000fcb8:	lea    rcx,[rsp+0x20]
   14000fcbd:	xor    edx,edx
   14000fcbf:	call   0x1400094b4
   14000fcc4:	and    DWORD PTR [rip+0x262d5],0x0        # 0x140035fa0
   14000fccb:	cmp    ebx,0xfffffffe
   14000fcce:	jne    0x14000fcf5
   14000fcd0:	mov    DWORD PTR [rip+0x262c6],0x1        # 0x140035fa0
   14000fcda:	call   QWORD PTR [rip+0x176f0]        # 0x1400273d0
   14000fce0:	cmp    BYTE PTR [rsp+0x38],0x0
   14000fce5:	je     0x14000fd3a
   14000fce7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fcec:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000fcf3:	jmp    0x14000fd3a
   14000fcf5:	cmp    ebx,0xfffffffd
   14000fcf8:	jne    0x14000fd0c
   14000fcfa:	mov    DWORD PTR [rip+0x2629c],0x1        # 0x140035fa0
   14000fd04:	call   QWORD PTR [rip+0x176be]        # 0x1400273c8
   14000fd0a:	jmp    0x14000fce0
   14000fd0c:	cmp    ebx,0xfffffffc
   14000fd0f:	jne    0x14000fd25
   14000fd11:	mov    rax,QWORD PTR [rsp+0x20]
   14000fd16:	mov    DWORD PTR [rip+0x26280],0x1        # 0x140035fa0
   14000fd20:	mov    eax,DWORD PTR [rax+0x4]
   14000fd23:	jmp    0x14000fce0
   14000fd25:	cmp    BYTE PTR [rsp+0x38],0x0
   14000fd2a:	je     0x14000fd38
   14000fd2c:	mov    rax,QWORD PTR [rsp+0x30]
   14000fd31:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000fd38:	mov    eax,ebx
   14000fd3a:	add    rsp,0x40
   14000fd3e:	pop    rbx
   14000fd3f:	ret    
   14000fd40:	mov    QWORD PTR [rsp+0x18],rbx
   14000fd45:	push   rbp
   14000fd46:	push   rsi
   14000fd47:	push   rdi
   14000fd48:	push   r12
   14000fd4a:	push   r13
   14000fd4c:	sub    rsp,0x40
   14000fd50:	mov    rax,QWORD PTR [rip+0x24549]        # 0x1400342a0
   14000fd57:	xor    rax,rsp
   14000fd5a:	mov    QWORD PTR [rsp+0x38],rax
   14000fd5f:	mov    rsi,rdx
   14000fd62:	call   0x14000fcb0
   14000fd67:	xor    ebx,ebx
   14000fd69:	mov    edi,eax
   14000fd6b:	cmp    eax,ebx
   14000fd6d:	jne    0x14000fd7c
   14000fd6f:	mov    rcx,rsi
   14000fd72:	call   0x14000f97c
   14000fd77:	jmp    0x14000ff94
   14000fd7c:	lea    r13,[rip+0x250dd]        # 0x140034e60
   14000fd83:	mov    ecx,ebx
   14000fd85:	mov    rbp,rbx
   14000fd88:	mov    rax,r13
   14000fd8b:	mov    r12d,0x1
   14000fd91:	cmp    DWORD PTR [rax],edi
   14000fd93:	je     0x14000fec0
   14000fd99:	add    ecx,r12d
   14000fd9c:	add    rbp,r12
   14000fd9f:	add    rax,0x30
   14000fda3:	cmp    ecx,0x5
   14000fda6:	jb     0x14000fd91
   14000fda8:	cmp    edi,0xfde8
   14000fdae:	je     0x14000feb8
   14000fdb4:	cmp    edi,0xfde9
   14000fdba:	je     0x14000feb8
   14000fdc0:	movzx  ecx,di
   14000fdc3:	call   QWORD PTR [rip+0x1760f]        # 0x1400273d8
   14000fdc9:	cmp    eax,ebx
   14000fdcb:	je     0x14000feb8
   14000fdd1:	lea    rdx,[rsp+0x20]
   14000fdd6:	mov    ecx,edi
   14000fdd8:	call   QWORD PTR [rip+0x175e2]        # 0x1400273c0
   14000fdde:	cmp    eax,ebx
   14000fde0:	je     0x14000feac
   14000fde6:	lea    rcx,[rsi+0x1c]
   14000fdea:	xor    edx,edx
   14000fdec:	mov    r8d,0x101
   14000fdf2:	call   0x140008a00
   14000fdf7:	mov    DWORD PTR [rsi+0x4],edi
   14000fdfa:	mov    DWORD PTR [rsi+0xc],ebx
   14000fdfd:	cmp    DWORD PTR [rsp+0x20],r12d
   14000fe02:	jbe    0x14000fe95
   14000fe08:	lea    rax,[rsp+0x26]
   14000fe0d:	cmp    BYTE PTR [rsp+0x26],bl
   14000fe11:	je     0x14000fe40
   14000fe13:	cmp    BYTE PTR [rax+0x1],bl
   14000fe16:	je     0x14000fe40
   14000fe18:	movzx  edi,BYTE PTR [rax]
   14000fe1b:	movzx  ecx,BYTE PTR [rax+0x1]
   14000fe1f:	cmp    edi,ecx
   14000fe21:	ja     0x14000fe38
   14000fe23:	sub    ecx,edi
   14000fe25:	lea    rdx,[rdi+rsi*1+0x1d]
   14000fe2a:	add    ecx,r12d
   14000fe2d:	or     BYTE PTR [rdx],0x4
   14000fe30:	add    rdx,r12
   14000fe33:	sub    rcx,r12
   14000fe36:	jne    0x14000fe2d
   14000fe38:	add    rax,0x2
   14000fe3c:	cmp    BYTE PTR [rax],bl
   14000fe3e:	jne    0x14000fe13
   14000fe40:	lea    rax,[rsi+0x1e]
   14000fe44:	mov    ecx,0xfe
   14000fe49:	or     BYTE PTR [rax],0x8
   14000fe4c:	add    rax,r12
   14000fe4f:	sub    rcx,r12
   14000fe52:	jne    0x14000fe49
   14000fe54:	mov    ecx,DWORD PTR [rsi+0x4]
   14000fe57:	sub    ecx,0x3a4
   14000fe5d:	je     0x14000fe87
   14000fe5f:	sub    ecx,0x4
   14000fe62:	je     0x14000fe80
   14000fe64:	sub    ecx,0xd
   14000fe67:	je     0x14000fe79
   14000fe69:	cmp    ecx,r12d
   14000fe6c:	je     0x14000fe72
   14000fe6e:	mov    eax,ebx
   14000fe70:	jmp    0x14000fe8c
   14000fe72:	mov    eax,0x404
   14000fe77:	jmp    0x14000fe8c
   14000fe79:	mov    eax,0x412
   14000fe7e:	jmp    0x14000fe8c
   14000fe80:	mov    eax,0x804
   14000fe85:	jmp    0x14000fe8c
   14000fe87:	mov    eax,0x411
   14000fe8c:	mov    DWORD PTR [rsi+0xc],eax
   14000fe8f:	mov    DWORD PTR [rsi+0x8],r12d
   14000fe93:	jmp    0x14000fe98
   14000fe95:	mov    DWORD PTR [rsi+0x8],ebx
   14000fe98:	lea    rdi,[rsi+0x10]
   14000fe9c:	movzx  eax,bx
   14000fe9f:	mov    ecx,0x6
   14000fea4:	rep stos WORD PTR es:[rdi],ax
   14000fea7:	jmp    0x14000ff8c
   14000feac:	cmp    DWORD PTR [rip+0x260ee],ebx        # 0x140035fa0
   14000feb2:	jne    0x14000fd6f
   14000feb8:	or     eax,0xffffffff
   14000febb:	jmp    0x14000ff96
   14000fec0:	lea    rcx,[rsi+0x1c]
   14000fec4:	xor    edx,edx
   14000fec6:	mov    r8d,0x101
   14000fecc:	call   0x140008a00
   14000fed1:	lea    rbp,[rbp+rbp*2+0x0]
   14000fed6:	lea    r11,[rip+0x24f7b]        # 0x140034e58
   14000fedd:	add    rbp,rbp
   14000fee0:	mov    r10d,0x4
   14000fee6:	lea    r8,[r13+rbp*8+0x10]
   14000feeb:	mov    rcx,r8
   14000feee:	cmp    BYTE PTR [r8],bl
   14000fef1:	je     0x14000ff24
   14000fef3:	cmp    BYTE PTR [rcx+0x1],bl
   14000fef6:	je     0x14000ff24
   14000fef8:	movzx  edx,BYTE PTR [rcx]
   14000fefb:	movzx  eax,BYTE PTR [rcx+0x1]
   14000feff:	cmp    edx,eax
   14000ff01:	ja     0x14000ff1c
   14000ff03:	lea    r9,[rdx+rsi*1+0x1d]
   14000ff08:	mov    al,BYTE PTR [r11]
   14000ff0b:	add    edx,r12d
   14000ff0e:	or     BYTE PTR [r9],al
   14000ff11:	movzx  eax,BYTE PTR [rcx+0x1]
   14000ff15:	add    r9,r12
   14000ff18:	cmp    edx,eax
   14000ff1a:	jbe    0x14000ff08
   14000ff1c:	add    rcx,0x2
   14000ff20:	cmp    BYTE PTR [rcx],bl
   14000ff22:	jne    0x14000fef3
   14000ff24:	add    r8,0x8
   14000ff28:	add    r11,r12
   14000ff2b:	sub    r10,r12
   14000ff2e:	jne    0x14000feeb
   14000ff30:	mov    DWORD PTR [rsi+0x4],edi
   14000ff33:	sub    edi,0x3a4
   14000ff39:	mov    DWORD PTR [rsi+0x8],r12d
   14000ff3d:	je     0x14000ff63
   14000ff3f:	sub    edi,0x4
   14000ff42:	je     0x14000ff5c
   14000ff44:	sub    edi,0xd
   14000ff47:	je     0x14000ff55
   14000ff49:	cmp    edi,r12d
   14000ff4c:	jne    0x14000ff68
   14000ff4e:	mov    ebx,0x404
   14000ff53:	jmp    0x14000ff68
   14000ff55:	mov    ebx,0x412
   14000ff5a:	jmp    0x14000ff68
   14000ff5c:	mov    ebx,0x804
   14000ff61:	jmp    0x14000ff68
   14000ff63:	mov    ebx,0x411
   14000ff68:	mov    DWORD PTR [rsi+0xc],ebx
   14000ff6b:	lea    rdx,[rsi+0x10]
   14000ff6f:	lea    rdi,[r13+rbp*8+0x4]
   14000ff74:	mov    ecx,0x6
   14000ff79:	movzx  eax,WORD PTR [rdi]
   14000ff7c:	add    rdi,0x2
   14000ff80:	mov    WORD PTR [rdx],ax
   14000ff83:	add    rdx,0x2
   14000ff87:	sub    rcx,r12
   14000ff8a:	jne    0x14000ff79
   14000ff8c:	mov    rcx,rsi
   14000ff8f:	call   0x14000fa10
   14000ff94:	xor    eax,eax
   14000ff96:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ff9b:	xor    rcx,rsp
   14000ff9e:	call   0x140009080
   14000ffa3:	mov    rbx,QWORD PTR [rsp+0x80]
   14000ffab:	add    rsp,0x40
   14000ffaf:	pop    r13
   14000ffb1:	pop    r12
   14000ffb3:	pop    rdi
   14000ffb4:	pop    rsi
   14000ffb5:	pop    rbp
   14000ffb6:	ret    
   14000ffb7:	int3   
   14000ffb8:	sub    rsp,0x48
   14000ffbc:	lea    rcx,[rsp+0x20]
   14000ffc1:	xor    edx,edx
   14000ffc3:	call   0x1400094b4
   14000ffc8:	mov    rax,QWORD PTR [rsp+0x28]
   14000ffcd:	xor    r11d,r11d
   14000ffd0:	cmp    DWORD PTR [rax+0x8],r11d
   14000ffd4:	je     0x14000ffee
   14000ffd6:	mov    eax,DWORD PTR [rax+0x4]
   14000ffd9:	cmp    BYTE PTR [rsp+0x38],r11b
   14000ffde:	je     0x140010003
   14000ffe0:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ffe5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ffec:	jmp    0x140010003
   14000ffee:	cmp    BYTE PTR [rsp+0x38],r11b
   14000fff3:	je     0x140010001
   14000fff5:	mov    rax,QWORD PTR [rsp+0x30]
   14000fffa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140010001:	xor    eax,eax
   140010003:	add    rsp,0x48
   140010007:	ret    
   140010008:	mov    rax,rsp
   14001000b:	mov    QWORD PTR [rax+0x8],rbx
   14001000f:	mov    QWORD PTR [rax+0x10],rsi
   140010013:	mov    QWORD PTR [rax+0x18],rdi
   140010017:	mov    QWORD PTR [rax+0x20],r12
   14001001b:	push   r13
   14001001d:	sub    rsp,0x30
   140010021:	mov    edi,ecx
   140010023:	or     r13d,0xffffffff
   140010027:	call   0x1400118e4
   14001002c:	mov    rsi,rax
   14001002f:	call   0x14000fbf4
   140010034:	mov    rbx,QWORD PTR [rsi+0xb8]
   14001003b:	mov    ecx,edi
   14001003d:	call   0x14000fcb0
   140010042:	mov    r12d,eax
   140010045:	cmp    eax,DWORD PTR [rbx+0x4]
   140010048:	je     0x1400101dd
   14001004e:	mov    ecx,0x220
   140010053:	call   0x140012c00
   140010058:	mov    rbx,rax
   14001005b:	xor    edi,edi
   14001005d:	cmp    rax,rdi
   140010060:	je     0x1400101e2
   140010066:	mov    rdx,QWORD PTR [rsi+0xb8]
   14001006d:	mov    rcx,rax
   140010070:	mov    r8d,0x220
   140010076:	call   0x140008b00
   14001007b:	mov    DWORD PTR [rbx],edi
   14001007d:	mov    rdx,rbx
   140010080:	mov    ecx,r12d
   140010083:	call   0x14000fd40
   140010088:	mov    r13d,eax
   14001008b:	cmp    eax,edi
   14001008d:	jne    0x1400101b7
   140010093:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001009a:	lock add DWORD PTR [rcx],0xffffffff
   14001009e:	jne    0x1400100ba
   1400100a0:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400100a7:	lea    r12,[rip+0x24972]        # 0x140034a20
   1400100ae:	cmp    rcx,r12
   1400100b1:	je     0x1400100c1
   1400100b3:	call   0x1400098ac
   1400100b8:	jmp    0x1400100c1
   1400100ba:	lea    r12,[rip+0x2495f]        # 0x140034a20
   1400100c1:	mov    QWORD PTR [rsi+0xb8],rbx
   1400100c8:	lock add DWORD PTR [rbx],0x1
   1400100cc:	test   BYTE PTR [rsi+0xc8],0x2
   1400100d3:	jne    0x1400101e2
   1400100d9:	test   BYTE PTR [rip+0x24e78],0x1        # 0x140034f58
   1400100e0:	jne    0x1400101e2
   1400100e6:	mov    ecx,0xd
   1400100eb:	call   0x1400133a8
   1400100f0:	nop
   1400100f1:	mov    eax,DWORD PTR [rbx+0x4]
   1400100f4:	mov    DWORD PTR [rip+0x25eba],eax        # 0x140035fb4
   1400100fa:	mov    eax,DWORD PTR [rbx+0x8]
   1400100fd:	mov    DWORD PTR [rip+0x25eb5],eax        # 0x140035fb8
   140010103:	mov    eax,DWORD PTR [rbx+0xc]
   140010106:	mov    DWORD PTR [rip+0x25eb0],eax        # 0x140035fbc
   14001010c:	mov    edx,edi
   14001010e:	mov    DWORD PTR [rsp+0x20],edx
   140010112:	lea    r8,[rip+0xfffffffffffefee7]        # 0x140000000
   140010119:	cmp    edx,0x5
   14001011c:	jge    0x140010137
   14001011e:	movsxd rcx,edx
   140010121:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140010126:	mov    WORD PTR [r8+rcx*2+0x35fa8],ax
   14001012f:	inc    edx
   140010131:	mov    DWORD PTR [rsp+0x20],edx
   140010135:	jmp    0x140010119
   140010137:	mov    edx,edi
   140010139:	mov    DWORD PTR [rsp+0x20],edx
   14001013d:	cmp    edx,0x101
   140010143:	jge    0x14001015c
   140010145:	movsxd rcx,edx
   140010148:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   14001014c:	mov    BYTE PTR [rcx+r8*1+0x34c40],al
   140010154:	inc    edx
   140010156:	mov    DWORD PTR [rsp+0x20],edx
   14001015a:	jmp    0x14001013d
   14001015c:	mov    DWORD PTR [rsp+0x20],edi
   140010160:	cmp    edi,0x100
   140010166:	jge    0x140010182
   140010168:	movsxd rcx,edi
   14001016b:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140010172:	mov    BYTE PTR [rcx+r8*1+0x34d50],al
   14001017a:	inc    edi
   14001017c:	mov    DWORD PTR [rsp+0x20],edi
   140010180:	jmp    0x140010160
   140010182:	mov    rax,QWORD PTR [rip+0x24cc7]        # 0x140034e50
   140010189:	lock add DWORD PTR [rax],0xffffffff
   14001018d:	jne    0x1400101a0
   14001018f:	mov    rcx,QWORD PTR [rip+0x24cba]        # 0x140034e50
   140010196:	cmp    rcx,r12
   140010199:	je     0x1400101a0
   14001019b:	call   0x1400098ac
   1400101a0:	mov    QWORD PTR [rip+0x24ca9],rbx        # 0x140034e50
   1400101a7:	lock add DWORD PTR [rbx],0x1
   1400101ab:	mov    ecx,0xd
   1400101b0:	call   0x140013288
   1400101b5:	jmp    0x1400101e2
   1400101b7:	cmp    eax,0xffffffff
   1400101ba:	jne    0x1400101e2
   1400101bc:	lea    r12,[rip+0x2485d]        # 0x140034a20
   1400101c3:	cmp    rbx,r12
   1400101c6:	je     0x1400101d0
   1400101c8:	mov    rcx,rbx
   1400101cb:	call   0x1400098ac
   1400101d0:	call   0x14000f574
   1400101d5:	mov    DWORD PTR [rax],0x16
   1400101db:	jmp    0x1400101e2
   1400101dd:	xor    edi,edi
   1400101df:	mov    r13d,edi
   1400101e2:	mov    eax,r13d
   1400101e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400101ea:	mov    rsi,QWORD PTR [rsp+0x48]
   1400101ef:	mov    rdi,QWORD PTR [rsp+0x50]
   1400101f4:	mov    r12,QWORD PTR [rsp+0x58]
   1400101f9:	add    rsp,0x30
   1400101fd:	pop    r13
   1400101ff:	ret    
   140010200:	sub    rsp,0x28
   140010204:	cmp    DWORD PTR [rip+0x27d85],0x0        # 0x140037f90
   14001020b:	jne    0x140010221
   14001020d:	mov    ecx,0xfffffffd
   140010212:	call   0x140010008
   140010217:	mov    DWORD PTR [rip+0x27d6f],0x1        # 0x140037f90
   140010221:	xor    eax,eax
   140010223:	add    rsp,0x28
   140010227:	ret    
   140010228:	mov    eax,DWORD PTR [rip+0x27d3a]        # 0x140037f68
   14001022e:	ret    
   14001022f:	int3   
   140010230:	lea    rax,[rip+0x27d35]        # 0x140037f6c
   140010237:	ret    
   140010238:	mov    QWORD PTR [rsp+0x8],rbx
   14001023d:	mov    QWORD PTR [rsp+0x10],rsi
   140010242:	push   rdi
   140010243:	sub    rsp,0x20
   140010247:	mov    rax,QWORD PTR [rcx+0x128]
   14001024e:	mov    rbx,rcx
   140010251:	test   rax,rax
   140010254:	je     0x1400102cf
   140010256:	lea    rcx,[rip+0x253c3]        # 0x140035620
   14001025d:	cmp    rax,rcx
   140010260:	je     0x1400102cf
   140010262:	mov    rax,QWORD PTR [rbx+0x110]
   140010269:	test   rax,rax
   14001026c:	je     0x1400102cf
   14001026e:	cmp    DWORD PTR [rax],0x0
   140010271:	jne    0x1400102cf
   140010273:	mov    rcx,QWORD PTR [rbx+0x120]
   14001027a:	test   rcx,rcx
   14001027d:	je     0x140010295
   14001027f:	cmp    DWORD PTR [rcx],0x0
   140010282:	jne    0x140010295
   140010284:	call   0x1400098ac
   140010289:	mov    rcx,QWORD PTR [rbx+0x128]
   140010290:	call   0x14001cd44
   140010295:	mov    rcx,QWORD PTR [rbx+0x118]
   14001029c:	test   rcx,rcx
   14001029f:	je     0x1400102b7
   1400102a1:	cmp    DWORD PTR [rcx],0x0
   1400102a4:	jne    0x1400102b7
   1400102a6:	call   0x1400098ac
   1400102ab:	mov    rcx,QWORD PTR [rbx+0x128]
   1400102b2:	call   0x14001cab4
   1400102b7:	mov    rcx,QWORD PTR [rbx+0x110]
   1400102be:	call   0x1400098ac
   1400102c3:	mov    rcx,QWORD PTR [rbx+0x128]
   1400102ca:	call   0x1400098ac
   1400102cf:	mov    rax,QWORD PTR [rbx+0x130]
   1400102d6:	test   rax,rax
   1400102d9:	je     0x140010322
   1400102db:	cmp    DWORD PTR [rax],0x0
   1400102de:	jne    0x140010322
   1400102e0:	mov    rcx,QWORD PTR [rbx+0x138]
   1400102e7:	sub    rcx,0xfe
   1400102ee:	call   0x1400098ac
   1400102f3:	mov    rcx,QWORD PTR [rbx+0x148]
   1400102fa:	mov    edi,0x80
   1400102ff:	sub    rcx,rdi
   140010302:	call   0x1400098ac
   140010307:	mov    rcx,QWORD PTR [rbx+0x150]
   14001030e:	sub    rcx,rdi
   140010311:	call   0x1400098ac
   140010316:	mov    rcx,QWORD PTR [rbx+0x130]
   14001031d:	call   0x1400098ac
   140010322:	mov    rcx,QWORD PTR [rbx+0x158]
   140010329:	lea    rax,[rip+0x24340]        # 0x140034670
   140010330:	cmp    rcx,rax
   140010333:	je     0x14001034f
   140010335:	cmp    DWORD PTR [rcx+0x160],0x0
   14001033c:	jne    0x14001034f
   14001033e:	call   0x14001c7f0
   140010343:	mov    rcx,QWORD PTR [rbx+0x158]
   14001034a:	call   0x1400098ac
   14001034f:	lea    rdi,[rbx+0x58]
   140010353:	mov    esi,0x6
   140010358:	lea    rax,[rip+0x24c01]        # 0x140034f60
   14001035f:	cmp    QWORD PTR [rdi-0x10],rax
   140010363:	je     0x140010377
   140010365:	mov    rcx,QWORD PTR [rdi]
   140010368:	test   rcx,rcx
   14001036b:	je     0x140010377
   14001036d:	cmp    DWORD PTR [rcx],0x0
   140010370:	jne    0x140010377
   140010372:	call   0x1400098ac
   140010377:	cmp    QWORD PTR [rdi-0x8],0x0
   14001037c:	je     0x140010391
   14001037e:	mov    rcx,QWORD PTR [rdi+0x8]
   140010382:	test   rcx,rcx
   140010385:	je     0x140010391
   140010387:	cmp    DWORD PTR [rcx],0x0
   14001038a:	jne    0x140010391
   14001038c:	call   0x1400098ac
   140010391:	add    rdi,0x20
   140010395:	sub    rsi,0x1
   140010399:	jne    0x140010358
   14001039b:	mov    rcx,rbx
   14001039e:	mov    rbx,QWORD PTR [rsp+0x30]
   1400103a3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400103a8:	add    rsp,0x20
   1400103ac:	pop    rdi
   1400103ad:	jmp    0x1400098ac
   1400103b2:	int3   
   1400103b3:	int3   
   1400103b4:	lock add DWORD PTR [rcx],0x1
   1400103b8:	mov    rax,QWORD PTR [rcx+0x110]
   1400103bf:	test   rax,rax
   1400103c2:	je     0x1400103c8
   1400103c4:	lock add DWORD PTR [rax],0x1
   1400103c8:	mov    rax,QWORD PTR [rcx+0x120]
   1400103cf:	test   rax,rax
   1400103d2:	je     0x1400103d8
   1400103d4:	lock add DWORD PTR [rax],0x1
   1400103d8:	mov    rax,QWORD PTR [rcx+0x118]
   1400103df:	test   rax,rax
   1400103e2:	je     0x1400103e8
   1400103e4:	lock add DWORD PTR [rax],0x1
   1400103e8:	mov    rax,QWORD PTR [rcx+0x130]
   1400103ef:	test   rax,rax
   1400103f2:	je     0x1400103f8
   1400103f4:	lock add DWORD PTR [rax],0x1
   1400103f8:	lea    rax,[rcx+0x58]
   1400103fc:	mov    r8d,0x6
   140010402:	lea    rdx,[rip+0x24b57]        # 0x140034f60
   140010409:	cmp    QWORD PTR [rax-0x10],rdx
   14001040d:	je     0x14001041b
   14001040f:	mov    rdx,QWORD PTR [rax]
   140010412:	test   rdx,rdx
   140010415:	je     0x14001041b
   140010417:	lock add DWORD PTR [rdx],0x1
   14001041b:	cmp    QWORD PTR [rax-0x8],0x0
   140010420:	je     0x14001042f
   140010422:	mov    rdx,QWORD PTR [rax+0x8]
   140010426:	test   rdx,rdx
   140010429:	je     0x14001042f
   14001042b:	lock add DWORD PTR [rdx],0x1
   14001042f:	add    rax,0x20
   140010433:	sub    r8,0x1
   140010437:	jne    0x140010402
   140010439:	mov    rax,QWORD PTR [rcx+0x158]
   140010440:	lock add DWORD PTR [rax+0x160],0x1
   140010448:	ret    
   140010449:	int3   
   14001044a:	int3   
   14001044b:	int3   
   14001044c:	test   rcx,rcx
   14001044f:	je     0x1400104ed
   140010455:	or     r9d,0xffffffff
   140010459:	lock add DWORD PTR [rcx],r9d
   14001045d:	mov    rax,QWORD PTR [rcx+0x110]
   140010464:	test   rax,rax
   140010467:	je     0x14001046d
   140010469:	lock add DWORD PTR [rax],r9d
   14001046d:	mov    rax,QWORD PTR [rcx+0x120]
   140010474:	test   rax,rax
   140010477:	je     0x14001047d
   140010479:	lock add DWORD PTR [rax],r9d
   14001047d:	mov    rax,QWORD PTR [rcx+0x118]
   140010484:	test   rax,rax
   140010487:	je     0x14001048d
   140010489:	lock add DWORD PTR [rax],r9d
   14001048d:	mov    rax,QWORD PTR [rcx+0x130]
   140010494:	test   rax,rax
   140010497:	je     0x14001049d
   140010499:	lock add DWORD PTR [rax],r9d
   14001049d:	lea    rax,[rcx+0x58]
   1400104a1:	mov    r8d,0x6
   1400104a7:	lea    rdx,[rip+0x24ab2]        # 0x140034f60
   1400104ae:	cmp    QWORD PTR [rax-0x10],rdx
   1400104b2:	je     0x1400104c0
   1400104b4:	mov    rdx,QWORD PTR [rax]
   1400104b7:	test   rdx,rdx
   1400104ba:	je     0x1400104c0
   1400104bc:	lock add DWORD PTR [rdx],r9d
   1400104c0:	cmp    QWORD PTR [rax-0x8],0x0
   1400104c5:	je     0x1400104d4
   1400104c7:	mov    rdx,QWORD PTR [rax+0x8]
   1400104cb:	test   rdx,rdx
   1400104ce:	je     0x1400104d4
   1400104d0:	lock add DWORD PTR [rdx],r9d
   1400104d4:	add    rax,0x20
   1400104d8:	sub    r8,0x1
   1400104dc:	jne    0x1400104a7
   1400104de:	mov    rax,QWORD PTR [rcx+0x158]
   1400104e5:	lock add DWORD PTR [rax+0x160],r9d
   1400104ed:	mov    rax,rcx
   1400104f0:	ret    
   1400104f1:	int3   
   1400104f2:	int3   
   1400104f3:	int3   
   1400104f4:	test   rdx,rdx
   1400104f7:	je     0x140010526
   1400104f9:	push   rbx
   1400104fa:	sub    rsp,0x20
   1400104fe:	mov    rbx,rcx
   140010501:	test   rcx,rcx
   140010504:	je     0x140010521
   140010506:	cmp    rcx,rdx
   140010509:	je     0x140010521
   14001050b:	mov    r8d,0x160
   140010511:	call   0x140008b00
   140010516:	and    DWORD PTR [rbx],0x0
   140010519:	mov    rcx,rbx
   14001051c:	call   0x1400103b4
   140010521:	add    rsp,0x20
   140010525:	pop    rbx
   140010526:	ret    
   140010527:	int3   
   140010528:	rex push rbx
   14001052a:	sub    rsp,0x20
   14001052e:	mov    rbx,rdx
   140010531:	test   rdx,rdx
   140010534:	je     0x140010577
   140010536:	test   rcx,rcx
   140010539:	je     0x140010577
   14001053b:	mov    r10,QWORD PTR [rcx]
   14001053e:	cmp    r10,rdx
   140010541:	je     0x140010572
   140010543:	mov    QWORD PTR [rcx],rdx
   140010546:	mov    rcx,rdx
   140010549:	call   0x1400103b4
   14001054e:	test   r10,r10
   140010551:	je     0x140010572
   140010553:	mov    rcx,r10
   140010556:	call   0x14001044c
   14001055b:	cmp    DWORD PTR [r10],0x0
   14001055f:	jne    0x140010572
   140010561:	lea    rax,[rip+0x24a08]        # 0x140034f70
   140010568:	cmp    r10,rax
   14001056b:	je     0x140010572
   14001056d:	call   0x140010238
   140010572:	mov    rax,rbx
   140010575:	jmp    0x140010579
   140010577:	xor    eax,eax
   140010579:	add    rsp,0x20
   14001057d:	pop    rbx
   14001057e:	ret    
   14001057f:	int3   
   140010580:	rex push rbx
   140010582:	sub    rsp,0x20
   140010586:	call   0x1400118e4
   14001058b:	mov    rbx,rax
   14001058e:	mov    ecx,DWORD PTR [rax+0xc8]
   140010594:	test   DWORD PTR [rip+0x249be],ecx        # 0x140034f58
   14001059a:	je     0x1400105b4
   14001059c:	cmp    QWORD PTR [rax+0xc0],0x0
   1400105a4:	je     0x1400105b4
   1400105a6:	call   0x1400118e4
   1400105ab:	mov    rbx,QWORD PTR [rax+0xc0]
   1400105b2:	jmp    0x1400105df
   1400105b4:	mov    ecx,0xc
   1400105b9:	call   0x1400133a8
   1400105be:	nop
   1400105bf:	lea    rcx,[rbx+0xc0]
   1400105c6:	mov    rdx,QWORD PTR [rip+0x24b03]        # 0x1400350d0
   1400105cd:	call   0x140010528
   1400105d2:	mov    rbx,rax
   1400105d5:	mov    ecx,0xc
   1400105da:	call   0x140013288
   1400105df:	test   rbx,rbx
   1400105e2:	jne    0x1400105ec
   1400105e4:	lea    ecx,[rbx+0x20]
   1400105e7:	call   0x14000db1c
   1400105ec:	mov    rax,rbx
   1400105ef:	add    rsp,0x20
   1400105f3:	pop    rbx
   1400105f4:	ret    
   1400105f5:	int3   
   1400105f6:	int3   
   1400105f7:	int3   
   1400105f8:	rex push rbx
   1400105fa:	sub    rsp,0x30
   1400105fe:	mov    ebx,ecx
   140010600:	call   0x1400118e4
   140010605:	mov    r8d,DWORD PTR [rax+0xc8]
   14001060c:	mov    edx,r8d
   14001060f:	and    dl,0x2
   140010612:	neg    dl
   140010614:	sbb    ecx,ecx
   140010616:	cmp    ebx,0xffffffff
   140010619:	je     0x140010661
   14001061b:	test   ebx,ebx
   14001061d:	je     0x140010668
   14001061f:	cmp    ebx,0x1
   140010622:	je     0x140010654
   140010624:	cmp    ebx,0x2
   140010627:	je     0x14001064e
   140010629:	call   0x14000f574
   14001062e:	and    QWORD PTR [rsp+0x20],0x0
   140010634:	xor    r9d,r9d
   140010637:	xor    r8d,r8d
   14001063a:	xor    edx,edx
   14001063c:	xor    ecx,ecx
   14001063e:	mov    DWORD PTR [rax],0x16
   140010644:	call   0x14000e4d8
   140010649:	or     eax,0xffffffff
   14001064c:	jmp    0x14001066b
   14001064e:	and    r8d,0xfffffffd
   140010652:	jmp    0x140010658
   140010654:	or     r8d,0x2
   140010658:	mov    DWORD PTR [rax+0xc8],r8d
   14001065f:	jmp    0x140010668
   140010661:	or     DWORD PTR [rip+0x248f0],0xffffffff        # 0x140034f58
   140010668:	lea    eax,[rcx+0x2]
   14001066b:	add    rsp,0x30
   14001066f:	pop    rbx
   140010670:	ret    
   140010671:	int3   
   140010672:	int3   
   140010673:	int3   
   140010674:	mov    rcx,QWORD PTR [rip+0x24a55]        # 0x1400350d0
   14001067b:	mov    eax,DWORD PTR [rcx+0x4]
   14001067e:	mov    DWORD PTR [rip+0x2595c],eax        # 0x140035fe0
   140010684:	mov    eax,DWORD PTR [rcx+0x8]
   140010687:	mov    DWORD PTR [rip+0x25957],eax        # 0x140035fe4
   14001068d:	mov    eax,DWORD PTR [rcx+0x108]
   140010693:	mov    DWORD PTR [rip+0x24a3f],eax        # 0x1400350d8
   140010699:	mov    rax,QWORD PTR [rcx+0x158]
   1400106a0:	mov    QWORD PTR [rip+0x24131],rax        # 0x1400347d8
   1400106a7:	mov    rax,QWORD PTR [rcx+0x128]
   1400106ae:	mov    QWORD PTR [rip+0x24fc3],rax        # 0x140035678
   1400106b5:	mov    rax,QWORD PTR [rcx+0x140]
   1400106bc:	mov    QWORD PTR [rip+0x24f3d],rax        # 0x140035600
   1400106c3:	mov    eax,DWORD PTR [rcx+0x10c]
   1400106c9:	mov    DWORD PTR [rip+0x24fb1],eax        # 0x140035680
   1400106cf:	ret    
   1400106d0:	test   rcx,rcx
   1400106d3:	je     0x140010776
   1400106d9:	push   rbx
   1400106da:	sub    rsp,0x20
   1400106de:	mov    rbx,rcx
   1400106e1:	mov    ecx,0xd
   1400106e6:	call   0x1400133a8
   1400106eb:	nop
   1400106ec:	mov    rcx,QWORD PTR [rbx+0x8]
   1400106f0:	test   rcx,rcx
   1400106f3:	je     0x140010711
   1400106f5:	lock add DWORD PTR [rcx],0xffffffff
   1400106f9:	jne    0x140010711
   1400106fb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400106ff:	lea    rax,[rip+0x2431a]        # 0x140034a20
   140010706:	cmp    rcx,rax
   140010709:	je     0x140010711
   14001070b:	call   0x1400098ac
   140010710:	nop
   140010711:	mov    ecx,0xd
   140010716:	call   0x140013288
   14001071b:	cmp    QWORD PTR [rbx],0x0
   14001071f:	je     0x14001075d
   140010721:	mov    ecx,0xc
   140010726:	call   0x1400133a8
   14001072b:	nop
   14001072c:	mov    rcx,QWORD PTR [rbx]
   14001072f:	call   0x14001044c
   140010734:	mov    rcx,QWORD PTR [rbx]
   140010737:	test   rcx,rcx
   14001073a:	je     0x140010753
   14001073c:	cmp    DWORD PTR [rcx],0x0
   14001073f:	jne    0x140010753
   140010741:	lea    rax,[rip+0x24828]        # 0x140034f70
   140010748:	cmp    rcx,rax
   14001074b:	je     0x140010753
   14001074d:	call   0x140010238
   140010752:	nop
   140010753:	mov    ecx,0xc
   140010758:	call   0x140013288
   14001075d:	mov    eax,0xbaadf00d
   140010762:	mov    QWORD PTR [rbx],rax
   140010765:	mov    QWORD PTR [rbx+0x8],rax
   140010769:	mov    rcx,rbx
   14001076c:	call   0x1400098ac
   140010771:	add    rsp,0x20
   140010775:	pop    rbx
   140010776:	ret    
   140010777:	int3   
   140010778:	jmp    0x1400106d0
   14001077d:	int3   
   14001077e:	int3   
   14001077f:	int3   
   140010780:	mov    QWORD PTR [rsp+0x8],rbx
   140010785:	push   rdi
   140010786:	sub    rsp,0x20
   14001078a:	call   0x1400118e4
   14001078f:	mov    rdi,rax
   140010792:	mov    edx,0x1
   140010797:	lea    ecx,[rdx+0xf]
   14001079a:	call   0x140012c6c
   14001079f:	mov    rbx,rax
   1400107a2:	test   rax,rax
   1400107a5:	jne    0x1400107b6
   1400107a7:	call   0x14000f574
   1400107ac:	mov    DWORD PTR [rax],0xc
   1400107b2:	xor    eax,eax
   1400107b4:	jmp    0x140010813
   1400107b6:	call   0x140010580
   1400107bb:	call   0x14000fbf4
   1400107c0:	mov    r11,QWORD PTR [rdi+0xc0]
   1400107c7:	mov    QWORD PTR [rbx],r11
   1400107ca:	mov    rax,QWORD PTR [rdi+0xb8]
   1400107d1:	mov    QWORD PTR [rbx+0x8],rax
   1400107d5:	mov    ecx,0xc
   1400107da:	call   0x1400133a8
   1400107df:	nop
   1400107e0:	mov    rcx,QWORD PTR [rbx]
   1400107e3:	call   0x1400103b4
   1400107e8:	nop
   1400107e9:	mov    ecx,0xc
   1400107ee:	call   0x140013288
   1400107f3:	mov    ecx,0xd
   1400107f8:	call   0x1400133a8
   1400107fd:	nop
   1400107fe:	mov    rax,QWORD PTR [rbx+0x8]
   140010802:	lock add DWORD PTR [rax],0x1
   140010806:	mov    ecx,0xd
   14001080b:	call   0x140013288
   140010810:	mov    rax,rbx
   140010813:	mov    rbx,QWORD PTR [rsp+0x30]
   140010818:	add    rsp,0x20
   14001081c:	pop    rdi
   14001081d:	ret    
   14001081e:	int3   
   14001081f:	int3   
   140010820:	jmp    0x140010780
   140010825:	int3   
   140010826:	int3   
   140010827:	int3   
   140010828:	xor    eax,eax
   14001082a:	ret    
   14001082b:	int3   
   14001082c:	test   r8d,r8d
   14001082f:	jle    0x14001088f
   140010831:	mov    DWORD PTR [rsp+0x18],r8d
   140010836:	mov    QWORD PTR [rsp+0x20],r9
   14001083b:	push   rbx
   14001083c:	push   rbp
   14001083d:	push   rsi
   14001083e:	push   rdi
   14001083f:	sub    rsp,0x38
   140010843:	lea    rdi,[rsp+0x78]
   140010848:	xor    ebx,ebx
   14001084a:	mov    rsi,rdx
   14001084d:	add    rdi,0xfffffffffffffff8
   140010851:	mov    rbp,rcx
   140010854:	add    rdi,0x8
   140010858:	mov    rdx,rsi
   14001085b:	mov    rcx,rbp
   14001085e:	mov    r8,QWORD PTR [rdi]
   140010861:	call   0x14001d1d8
   140010866:	test   eax,eax
   140010868:	je     0x14001087f
   14001086a:	and    QWORD PTR [rsp+0x20],0x0
   140010870:	xor    r9d,r9d
   140010873:	xor    r8d,r8d
   140010876:	xor    edx,edx
   140010878:	xor    ecx,ecx
   14001087a:	call   0x14000e350
   14001087f:	inc    ebx
   140010881:	cmp    ebx,DWORD PTR [rsp+0x70]
   140010885:	jl     0x140010854
   140010887:	add    rsp,0x38
   14001088b:	pop    rdi
   14001088c:	pop    rsi
   14001088d:	pop    rbp
   14001088e:	pop    rbx
   14001088f:	ret    
   140010890:	mov    rax,rsp
   140010893:	mov    QWORD PTR [rax+0x8],rbx
   140010897:	mov    QWORD PTR [rax+0x10],rbp
   14001089b:	mov    QWORD PTR [rax+0x18],rsi
   14001089f:	mov    QWORD PTR [rax+0x20],rdi
   1400108a3:	push   r12
   1400108a5:	sub    rsp,0x30
   1400108a9:	mov    rbx,rdx
   1400108ac:	mov    r8d,0x90
   1400108b2:	xor    edx,edx
   1400108b4:	mov    rsi,rcx
   1400108b7:	call   0x140008a00
   1400108bc:	cmp    BYTE PTR [rbx],0x0
   1400108bf:	jne    0x1400108c8
   1400108c1:	xor    eax,eax
   1400108c3:	jmp    0x1400109da
   1400108c8:	cmp    BYTE PTR [rbx],0x2e
   1400108cb:	jne    0x14001090e
   1400108cd:	lea    r8,[rbx+0x1]
   1400108d1:	cmp    BYTE PTR [r8],0x0
   1400108d5:	je     0x14001090e
   1400108d7:	mov    edx,0x10
   1400108dc:	lea    rcx,[rsi+0x80]
   1400108e3:	lea    r9d,[rdx-0x1]
   1400108e7:	call   0x14001ac68
   1400108ec:	test   eax,eax
   1400108ee:	je     0x140010905
   1400108f0:	and    QWORD PTR [rsp+0x20],0x0
   1400108f6:	xor    r9d,r9d
   1400108f9:	xor    r8d,r8d
   1400108fc:	xor    edx,edx
   1400108fe:	xor    ecx,ecx
   140010900:	call   0x14000e350
   140010905:	mov    BYTE PTR [rsi+0x8f],0x0
   14001090c:	jmp    0x1400108c1
   14001090e:	xor    ebp,ebp
   140010910:	jmp    0x1400109bf
   140010915:	lea    r12,[rax+rbx*1]
   140010919:	mov    dil,BYTE PTR [r12]
   14001091d:	test   ebp,ebp
   14001091f:	jne    0x14001093d
   140010921:	cmp    rax,0x40
   140010925:	jae    0x1400109d7
   14001092b:	cmp    dil,0x2e
   14001092f:	je     0x1400109d7
   140010935:	lea    edx,[rbp+0x40]
   140010938:	mov    rcx,rsi
   14001093b:	jmp    0x140010981
   14001093d:	cmp    ebp,0x1
   140010940:	jne    0x14001095f
   140010942:	cmp    rax,0x40
   140010946:	jae    0x1400109d7
   14001094c:	cmp    dil,0x5f
   140010950:	je     0x1400109d7
   140010956:	lea    rcx,[rsi+0x40]
   14001095a:	lea    edx,[rbp+0x3f]
   14001095d:	jmp    0x140010981
   14001095f:	cmp    ebp,0x2
   140010962:	jne    0x1400109d7
   140010964:	cmp    rax,0x10
   140010968:	jae    0x1400109d7
   14001096a:	test   dil,dil
   14001096d:	je     0x140010975
   14001096f:	cmp    dil,0x2c
   140010973:	jne    0x1400109d7
   140010975:	lea    rcx,[rsi+0x80]
   14001097c:	mov    edx,0x10
   140010981:	mov    r9,rax
   140010984:	mov    r8,rbx
   140010987:	call   0x14001ac68
   14001098c:	test   eax,eax
   14001098e:	je     0x1400109a5
   140010990:	and    QWORD PTR [rsp+0x20],0x0
   140010996:	xor    r9d,r9d
   140010999:	xor    r8d,r8d
   14001099c:	xor    edx,edx
   14001099e:	xor    ecx,ecx
   1400109a0:	call   0x14000e350
   1400109a5:	cmp    dil,0x2c
   1400109a9:	je     0x1400108c1
   1400109af:	test   dil,dil
   1400109b2:	je     0x1400108c1
   1400109b8:	lea    rbx,[r12+0x1]
   1400109bd:	inc    ebp
   1400109bf:	lea    rdx,[rip+0x1d6aa]        # 0x14002e070
   1400109c6:	mov    rcx,rbx
   1400109c9:	call   0x14001d264
   1400109ce:	test   rax,rax
   1400109d1:	jne    0x140010915
   1400109d7:	or     eax,0xffffffff
   1400109da:	mov    rbx,QWORD PTR [rsp+0x40]
   1400109df:	mov    rbp,QWORD PTR [rsp+0x48]
   1400109e4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400109e9:	mov    rdi,QWORD PTR [rsp+0x58]
   1400109ee:	add    rsp,0x30
   1400109f2:	pop    r12
   1400109f4:	ret    
   1400109f5:	int3   
   1400109f6:	int3   
   1400109f7:	int3   
   1400109f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400109fd:	mov    QWORD PTR [rsp+0x10],rsi
   140010a02:	push   rdi
   140010a03:	sub    rsp,0x30
   140010a07:	mov    rbx,r8
   140010a0a:	mov    rdi,rdx
   140010a0d:	mov    rsi,rcx
   140010a10:	call   0x140012b54
   140010a15:	test   eax,eax
   140010a17:	je     0x140010a2e
   140010a19:	and    QWORD PTR [rsp+0x20],0x0
   140010a1f:	xor    r9d,r9d
   140010a22:	xor    r8d,r8d
   140010a25:	xor    edx,edx
   140010a27:	xor    ecx,ecx
   140010a29:	call   0x14000e350
   140010a2e:	lea    rax,[rbx+0x40]
   140010a32:	cmp    BYTE PTR [rax],0x0
   140010a35:	je     0x140010a54
   140010a37:	lea    r9,[rip+0x1d63a]        # 0x14002e078
   140010a3e:	mov    r8d,0x2
   140010a44:	mov    rdx,rdi
   140010a47:	mov    rcx,rsi
   140010a4a:	mov    QWORD PTR [rsp+0x20],rax
   140010a4f:	call   0x14001082c
   140010a54:	lea    rax,[rbx+0x80]
   140010a5b:	cmp    BYTE PTR [rax],0x0
   140010a5e:	je     0x140010a7d
   140010a60:	lea    r9,[rip+0x1d60d]        # 0x14002e074
   140010a67:	mov    r8d,0x2
   140010a6d:	mov    rdx,rdi
   140010a70:	mov    rcx,rsi
   140010a73:	mov    QWORD PTR [rsp+0x20],rax
   140010a78:	call   0x14001082c
   140010a7d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010a82:	mov    rsi,QWORD PTR [rsp+0x48]
   140010a87:	add    rsp,0x30
   140010a8b:	pop    rdi
   140010a8c:	ret    
   140010a8d:	int3   
   140010a8e:	int3   
   140010a8f:	int3   
   140010a90:	mov    QWORD PTR [rsp+0x8],rbx
   140010a95:	push   rbp
   140010a96:	push   rsi
   140010a97:	push   rdi
   140010a98:	push   r12
   140010a9a:	push   r13
   140010a9c:	push   r14
   140010a9e:	push   r15
   140010aa0:	sub    rsp,0x30
   140010aa4:	mov    rbx,rcx
   140010aa7:	mov    r12d,0x1
   140010aad:	mov    ecx,0x355
   140010ab2:	mov    edi,r12d
   140010ab5:	call   0x140012c00
   140010aba:	mov    rsi,rax
   140010abd:	mov    QWORD PTR [rsp+0x80],rax
   140010ac5:	xor    eax,eax
   140010ac7:	cmp    rsi,rax
   140010aca:	je     0x140010c61
   140010ad0:	lea    rbp,[rsi+0x4]
   140010ad4:	lea    r13,[rbx+0x68]
   140010ad8:	lea    r8d,[r12+0x2]
   140010add:	mov    BYTE PTR [rbp+0x0],al
   140010ae0:	mov    DWORD PTR [rsi],r12d
   140010ae3:	mov    rax,QWORD PTR [r13+0x0]
   140010ae7:	mov    r9,QWORD PTR [rip+0x1d48a]        # 0x14002df78
   140010aee:	mov    QWORD PTR [rsp+0x28],rax
   140010af3:	lea    rax,[rip+0x1d586]        # 0x14002e080
   140010afa:	mov    edx,0x351
   140010aff:	mov    rcx,rbp
   140010b02:	mov    QWORD PTR [rsp+0x20],rax
   140010b07:	call   0x14001082c
   140010b0c:	mov    r15,r12
   140010b0f:	lea    r12,[rbx+0x88]
   140010b16:	lea    r14,[rip+0x1d45b]        # 0x14002df78
   140010b1d:	xor    esi,esi
   140010b1f:	lea    r8,[rip+0x1d556]        # 0x14002e07c
   140010b26:	mov    edx,0x351
   140010b2b:	mov    rcx,rbp
   140010b2e:	call   0x14001d1d8
   140010b33:	cmp    eax,esi
   140010b35:	je     0x140010b4b
   140010b37:	xor    r9d,r9d
   140010b3a:	xor    r8d,r8d
   140010b3d:	xor    edx,edx
   140010b3f:	xor    ecx,ecx
   140010b41:	mov    QWORD PTR [rsp+0x20],rsi
   140010b46:	call   0x14000e350
   140010b4b:	mov    rdx,QWORD PTR [r12]
   140010b4f:	mov    rcx,QWORD PTR [r13+0x0]
   140010b53:	call   0x14001ad50
   140010b58:	mov    edx,0x351
   140010b5d:	mov    r8d,0x3
   140010b63:	cmp    eax,esi
   140010b65:	mov    rcx,rbp
   140010b68:	cmovne edi,esi
   140010b6b:	inc    r15
   140010b6e:	add    r14,0x18
   140010b72:	mov    r9,QWORD PTR [r14]
   140010b75:	mov    rax,r15
   140010b78:	add    r12,0x20
   140010b7c:	shl    rax,0x5
   140010b80:	lea    r13,[rax+rbx*1+0x48]
   140010b85:	mov    rax,QWORD PTR [r13+0x0]
   140010b89:	mov    QWORD PTR [rsp+0x28],rax
   140010b8e:	lea    rax,[rip+0x1d4eb]        # 0x14002e080
   140010b95:	mov    QWORD PTR [rsp+0x20],rax
   140010b9a:	call   0x14001082c
   140010b9f:	lea    r11,[rip+0x1d432]        # 0x14002dfd8
   140010ba6:	cmp    r14,r11
   140010ba9:	jl     0x140010b1f
   140010baf:	mov    rsi,QWORD PTR [rsp+0x80]
   140010bb7:	xor    r13d,r13d
   140010bba:	cmp    edi,r13d
   140010bbd:	jne    0x140010c07
   140010bbf:	mov    rcx,QWORD PTR [rbx+0x58]
   140010bc3:	or     edi,0xffffffff
   140010bc6:	cmp    rcx,r13
   140010bc9:	je     0x140010bde
   140010bcb:	mov    eax,edi
   140010bcd:	lock xadd DWORD PTR [rcx],eax
   140010bd1:	add    eax,edi
   140010bd3:	jne    0x140010bde
   140010bd5:	mov    rcx,QWORD PTR [rbx+0x58]
   140010bd9:	call   0x1400098ac
   140010bde:	mov    rdx,QWORD PTR [rbx+0x60]
   140010be2:	cmp    rdx,r13
   140010be5:	je     0x140010bfa
   140010be7:	mov    ecx,edi
   140010be9:	lock xadd DWORD PTR [rdx],ecx
   140010bed:	add    ecx,edi
   140010bef:	jne    0x140010bfa
   140010bf1:	mov    rcx,QWORD PTR [rbx+0x60]
   140010bf5:	call   0x1400098ac
   140010bfa:	mov    QWORD PTR [rbx+0x58],rsi
   140010bfe:	mov    QWORD PTR [rbx+0x48],rbp
   140010c02:	mov    rax,rbp
   140010c05:	jmp    0x140010c59
   140010c07:	mov    rcx,rsi
   140010c0a:	call   0x1400098ac
   140010c0f:	mov    rcx,QWORD PTR [rbx+0x58]
   140010c13:	or     edi,0xffffffff
   140010c16:	cmp    rcx,r13
   140010c19:	je     0x140010c2e
   140010c1b:	mov    eax,edi
   140010c1d:	lock xadd DWORD PTR [rcx],eax
   140010c21:	add    eax,edi
   140010c23:	jne    0x140010c2e
   140010c25:	mov    rcx,QWORD PTR [rbx+0x58]
   140010c29:	call   0x1400098ac
   140010c2e:	mov    rdx,QWORD PTR [rbx+0x60]
   140010c32:	cmp    rdx,r13
   140010c35:	je     0x140010c4a
   140010c37:	mov    ecx,edi
   140010c39:	lock xadd DWORD PTR [rdx],ecx
   140010c3d:	add    ecx,edi
   140010c3f:	jne    0x140010c4a
   140010c41:	mov    rcx,QWORD PTR [rbx+0x60]
   140010c45:	call   0x1400098ac
   140010c4a:	mov    rax,QWORD PTR [rbx+0x88]
   140010c51:	mov    QWORD PTR [rbx+0x58],r13
   140010c55:	mov    QWORD PTR [rbx+0x48],r13
   140010c59:	mov    QWORD PTR [rbx+0x50],r13
   140010c5d:	mov    QWORD PTR [rbx+0x60],r13
   140010c61:	mov    rbx,QWORD PTR [rsp+0x70]
   140010c66:	add    rsp,0x30
   140010c6a:	pop    r15
   140010c6c:	pop    r14
   140010c6e:	pop    r13
   140010c70:	pop    r12
   140010c72:	pop    rdi
   140010c73:	pop    rsi
   140010c74:	pop    rbp
   140010c75:	ret    
   140010c76:	int3   
   140010c77:	int3   
   140010c78:	rex push rbx
   140010c7a:	push   rbp
   140010c7b:	push   rsi
   140010c7c:	push   rdi
   140010c7d:	push   r12
   140010c7f:	push   r13
   140010c81:	push   r14
   140010c83:	push   r15
   140010c85:	sub    rsp,0xf8
   140010c8c:	mov    rax,QWORD PTR [rip+0x2360d]        # 0x1400342a0
   140010c93:	xor    rax,rsp
   140010c96:	mov    QWORD PTR [rsp+0xe0],rax
   140010c9e:	mov    rsi,QWORD PTR [rsp+0x160]
   140010ca6:	mov    rdi,r9
   140010ca9:	mov    r15,r8
   140010cac:	mov    rbp,rdx
   140010caf:	mov    rbx,rcx
   140010cb2:	call   0x1400118e4
   140010cb7:	lea    rcx,[rax+0x170]
   140010cbe:	lea    r14,[rax+0x168]
   140010cc5:	xor    r12d,r12d
   140010cc8:	mov    QWORD PTR [rsp+0x40],rcx
   140010ccd:	lea    rcx,[rax+0x174]
   140010cd4:	mov    QWORD PTR [rsp+0x30],r14
   140010cd9:	lea    r13,[rax+0x1f7]
   140010ce0:	mov    QWORD PTR [rsp+0x38],rcx
   140010ce5:	cmp    rbx,r12
   140010ce8:	je     0x140010e92
   140010cee:	cmp    rbp,r12
   140010cf1:	je     0x140010e92
   140010cf7:	cmp    r15,r12
   140010cfa:	je     0x140010e92
   140010d00:	cmp    BYTE PTR [rbx],0x43
   140010d03:	jne    0x140010d59
   140010d05:	cmp    BYTE PTR [rbx+0x1],r12b
   140010d09:	jne    0x140010d59
   140010d0b:	lea    r8,[rip+0x1d372]        # 0x14002e084
   140010d12:	mov    rdx,r15
   140010d15:	mov    rcx,rbp
   140010d18:	call   0x140012b54
   140010d1d:	cmp    eax,r12d
   140010d20:	je     0x140010d36
   140010d22:	xor    r9d,r9d
   140010d25:	xor    r8d,r8d
   140010d28:	xor    edx,edx
   140010d2a:	xor    ecx,ecx
   140010d2c:	mov    QWORD PTR [rsp+0x20],r12
   140010d31:	call   0x14000e350
   140010d36:	cmp    rdi,r12
   140010d39:	je     0x140010d49
   140010d3b:	mov    WORD PTR [rdi],r12w
   140010d3f:	mov    WORD PTR [rdi+0x2],r12w
   140010d44:	mov    WORD PTR [rdi+0x4],r12w
   140010d49:	cmp    rsi,r12
   140010d4c:	je     0x140010d51
   140010d4e:	mov    DWORD PTR [rsi],r12d
   140010d51:	mov    rax,rbp
   140010d54:	jmp    0x140010e94
   140010d59:	mov    rcx,rbx
   140010d5c:	call   0x140012e10
   140010d61:	mov    r12,rax
   140010d64:	cmp    rax,0x83
   140010d6a:	jae    0x140010d94
   140010d6c:	mov    rdx,rbx
   140010d6f:	mov    rcx,r13
   140010d72:	call   0x14001ad50
   140010d77:	test   eax,eax
   140010d79:	je     0x140010e38
   140010d7f:	mov    rcx,QWORD PTR [rsp+0x38]
   140010d84:	mov    rdx,rbx
   140010d87:	call   0x14001ad50
   140010d8c:	test   eax,eax
   140010d8e:	je     0x140010e38
   140010d94:	lea    rcx,[rsp+0x50]
   140010d99:	mov    rdx,rbx
   140010d9c:	xor    r14d,r14d
   140010d9f:	call   0x140010890
   140010da4:	test   eax,eax
   140010da6:	jne    0x140010e92
   140010dac:	mov    rdx,QWORD PTR [rsp+0x30]
   140010db1:	lea    r8,[rsp+0x50]
   140010db6:	lea    rcx,[rsp+0x50]
   140010dbb:	call   0x14001db7c
   140010dc0:	test   eax,eax
   140010dc2:	je     0x140010e92
   140010dc8:	mov    rax,QWORD PTR [rsp+0x30]
   140010dcd:	mov    rcx,QWORD PTR [rsp+0x40]
   140010dd2:	lea    r8,[rsp+0x50]
   140010dd7:	movzx  eax,WORD PTR [rax+0x4]
   140010ddb:	mov    edx,0x83
   140010de0:	mov    DWORD PTR [rcx],eax
   140010de2:	mov    rcx,r13
   140010de5:	call   0x1400109f8
   140010dea:	cmp    BYTE PTR [rbx],r14b
   140010ded:	je     0x140010dfd
   140010def:	cmp    r12,0x83
   140010df6:	jae    0x140010dfd
   140010df8:	mov    r14,r12
   140010dfb:	jmp    0x140010e04
   140010dfd:	lea    rbx,[rip+0x16a34]        # 0x140027838
   140010e04:	mov    rcx,QWORD PTR [rsp+0x38]
   140010e09:	lea    r9,[r14+0x1]
   140010e0d:	mov    r8,rbx
   140010e10:	mov    edx,0x83
   140010e15:	call   0x14001ac68
   140010e1a:	test   eax,eax
   140010e1c:	je     0x140010e33
   140010e1e:	and    QWORD PTR [rsp+0x20],0x0
   140010e24:	xor    r9d,r9d
   140010e27:	xor    r8d,r8d
   140010e2a:	xor    edx,edx
   140010e2c:	xor    ecx,ecx
   140010e2e:	call   0x14000e350
   140010e33:	mov    r14,QWORD PTR [rsp+0x30]
   140010e38:	test   rdi,rdi
   140010e3b:	je     0x140010e4e
   140010e3d:	mov    r8d,0x6
   140010e43:	mov    rdx,r14
   140010e46:	mov    rcx,rdi
   140010e49:	call   0x140008b00
   140010e4e:	test   rsi,rsi
   140010e51:	je     0x140010e66
   140010e53:	mov    rdx,QWORD PTR [rsp+0x40]
   140010e58:	mov    r8d,0x4
   140010e5e:	mov    rcx,rsi
   140010e61:	call   0x140008b00
   140010e66:	mov    r8,r13
   140010e69:	mov    rdx,r15
   140010e6c:	mov    rcx,rbp
   140010e6f:	call   0x140012b54
   140010e74:	test   eax,eax
   140010e76:	je     0x140010e8d
   140010e78:	and    QWORD PTR [rsp+0x20],0x0
   140010e7e:	xor    r9d,r9d
   140010e81:	xor    r8d,r8d
   140010e84:	xor    edx,edx
   140010e86:	xor    ecx,ecx
   140010e88:	call   0x14000e350
   140010e8d:	mov    rax,r13
   140010e90:	jmp    0x140010e94
   140010e92:	xor    eax,eax
   140010e94:	mov    rcx,QWORD PTR [rsp+0xe0]
   140010e9c:	xor    rcx,rsp
   140010e9f:	call   0x140009080
   140010ea4:	add    rsp,0xf8
   140010eab:	pop    r15
   140010ead:	pop    r14
   140010eaf:	pop    r13
   140010eb1:	pop    r12
   140010eb3:	pop    rdi
   140010eb4:	pop    rsi
   140010eb5:	pop    rbp
   140010eb6:	pop    rbx
   140010eb7:	ret    
   140010eb8:	mov    QWORD PTR [rsp+0x20],rbx
   140010ebd:	push   rbp
   140010ebe:	push   rsi
   140010ebf:	push   rdi
   140010ec0:	push   r12
   140010ec2:	push   r13
   140010ec4:	push   r14
   140010ec6:	push   r15
   140010ec8:	sub    rsp,0x210
   140010ecf:	mov    rax,QWORD PTR [rip+0x233ca]        # 0x1400342a0
   140010ed6:	xor    rax,rsp
   140010ed9:	mov    QWORD PTR [rsp+0x200],rax
   140010ee1:	mov    rbx,r8
   140010ee4:	movsxd r15,edx
   140010ee7:	mov    rdi,rcx
   140010eea:	call   0x1400118e4
   140010eef:	lea    r9,[rsp+0x48]
   140010ef4:	lea    rdx,[rsp+0x70]
   140010ef9:	mov    rsi,rax
   140010efc:	lea    rax,[rsp+0x40]
   140010f01:	mov    r8d,0x83
   140010f07:	mov    rcx,rbx
   140010f0a:	mov    DWORD PTR [rsp+0x28],r15d
   140010f0f:	mov    QWORD PTR [rsp+0x20],rax
   140010f14:	call   0x140010c78
   140010f19:	test   rax,rax
   140010f1c:	jne    0x140010f25
   140010f1e:	xor    eax,eax
   140010f20:	jmp    0x140011194
   140010f25:	mov    rbx,r15
   140010f28:	lea    rcx,[rsp+0x70]
   140010f2d:	shl    rbx,0x5
   140010f31:	mov    rdx,QWORD PTR [rbx+rdi*1+0x48]
   140010f36:	call   0x14001ad50
   140010f3b:	test   eax,eax
   140010f3d:	je     0x14001118f
   140010f43:	lea    rcx,[rsp+0x70]
   140010f48:	call   0x140012e10
   140010f4d:	mov    rbp,rax
   140010f50:	lea    rcx,[rax+0x5]
   140010f54:	call   0x140012c00
   140010f59:	mov    r12,rax
   140010f5c:	test   rax,rax
   140010f5f:	je     0x140010f1e
   140010f61:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   140010f66:	lea    r13,[r15+0x3]
   140010f6a:	lea    rcx,[rsp+0x68]
   140010f6f:	mov    QWORD PTR [rsp+0x58],rax
   140010f74:	mov    eax,DWORD PTR [rdi+r13*4]
   140010f78:	mov    r8d,0x6
   140010f7e:	mov    DWORD PTR [rsp+0x50],eax
   140010f82:	lea    rax,[r15+r15*2+0x12]
   140010f87:	lea    rax,[rdi+rax*2]
   140010f8b:	mov    rdx,rax
   140010f8e:	mov    QWORD PTR [rsp+0x60],rax
   140010f93:	call   0x140008b00
   140010f98:	mov    eax,DWORD PTR [rdi+0x4]
   140010f9b:	lea    rdx,[rbp+0x1]
   140010f9f:	lea    r8,[rsp+0x70]
   140010fa4:	lea    rcx,[r12+0x4]
   140010fa9:	mov    DWORD PTR [rsp+0x44],eax
   140010fad:	call   0x140012b54
   140010fb2:	test   eax,eax
   140010fb4:	je     0x140010fcb
   140010fb6:	and    QWORD PTR [rsp+0x20],0x0
   140010fbc:	xor    r9d,r9d
   140010fbf:	xor    r8d,r8d
   140010fc2:	xor    edx,edx
   140010fc4:	xor    ecx,ecx
   140010fc6:	call   0x14000e350
   140010fcb:	mov    rcx,QWORD PTR [rsp+0x60]
   140010fd0:	lea    rax,[r12+0x4]
   140010fd5:	lea    rdx,[rsp+0x48]
   140010fda:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   140010fdf:	movzx  eax,WORD PTR [rsp+0x48]
   140010fe4:	mov    r8d,0x6
   140010fea:	mov    DWORD PTR [rdi+r13*4],eax
   140010fee:	call   0x140008b00
   140010ff3:	cmp    r15d,0x2
   140010ff7:	jne    0x140011104
   140010ffd:	mov    eax,DWORD PTR [rsp+0x40]
   140011001:	xor    r8d,r8d
   140011004:	xor    edx,edx
   140011006:	mov    DWORD PTR [rdi+0x4],eax
   140011009:	mov    rcx,QWORD PTR [rsi+0x29c]
   140011010:	mov    eax,DWORD PTR [rsi+rdx*8+0x27c]
   140011017:	cmp    DWORD PTR [rdi+0x4],eax
   14001101a:	je     0x14001103d
   14001101c:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   140011024:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   14001102c:	inc    rdx
   14001102f:	inc    r8d
   140011032:	cmp    rdx,0x5
   140011036:	mov    rcx,rax
   140011039:	jl     0x140011010
   14001103b:	jmp    0x14001105c
   14001103d:	test   r8d,r8d
   140011040:	je     0x14001105c
   140011042:	movsxd rdx,r8d
   140011045:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   14001104d:	mov    QWORD PTR [rsi+0x27c],rax
   140011054:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   14001105c:	cmp    r8d,0x5
   140011060:	jne    0x1400110f8
   140011066:	mov    eax,DWORD PTR [rdi+0x14]
   140011069:	lea    ebp,[r8+0x7a]
   14001106d:	mov    DWORD PTR [rsp+0x38],0x1
   140011075:	mov    DWORD PTR [rsp+0x30],eax
   140011079:	mov    eax,DWORD PTR [rdi+0x4]
   14001107c:	lea    r8,[rip+0x1cf6d]        # 0x14002dff0
   140011083:	mov    DWORD PTR [rsp+0x28],eax
   140011087:	lea    rax,[rsp+0x100]
   14001108f:	lea    edx,[rbp-0x7e]
   140011092:	mov    r9d,ebp
   140011095:	xor    ecx,ecx
   140011097:	mov    QWORD PTR [rsp+0x20],rax
   14001109c:	call   0x14001c0ec
   1400110a1:	test   eax,eax
   1400110a3:	je     0x1400110e8
   1400110a5:	lea    rax,[rsp+0x100]
   1400110ad:	mov    ecx,0x1ff
   1400110b2:	and    WORD PTR [rax],cx
   1400110b5:	add    rax,0x2
   1400110b9:	sub    rbp,0x1
   1400110bd:	jne    0x1400110ad
   1400110bf:	mov    rdx,QWORD PTR [rip+0x23e8a]        # 0x140034f50
   1400110c6:	lea    rcx,[rsp+0x100]
   1400110ce:	mov    r8d,0xfe
   1400110d4:	call   0x14001de00
   1400110d9:	xor    ecx,ecx
   1400110db:	test   eax,eax
   1400110dd:	sete   cl
   1400110e0:	mov    DWORD PTR [rsi+0x280],ecx
   1400110e6:	jmp    0x1400110ef
   1400110e8:	and    DWORD PTR [rsi+0x280],0x0
   1400110ef:	mov    eax,DWORD PTR [rdi+0x4]
   1400110f2:	mov    DWORD PTR [rsi+0x27c],eax
   1400110f8:	mov    eax,DWORD PTR [rsi+0x280]
   1400110fe:	mov    DWORD PTR [rdi+0x108],eax
   140011104:	cmp    r15d,0x1
   140011108:	jne    0x140011111
   14001110a:	mov    eax,DWORD PTR [rsp+0x40]
   14001110e:	mov    DWORD PTR [rdi+0x8],eax
   140011111:	lea    rax,[r15+r15*2]
   140011115:	lea    rdx,[rip+0x1ce54]        # 0x14002df70
   14001111c:	mov    rcx,rdi
   14001111f:	call   QWORD PTR [rdx+rax*8]
   140011122:	test   eax,eax
   140011124:	mov    rax,QWORD PTR [rsp+0x58]
   140011129:	je     0x14001114d
   14001112b:	mov    rcx,r12
   14001112e:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   140011133:	call   0x1400098ac
   140011138:	mov    r11d,DWORD PTR [rsp+0x50]
   14001113d:	mov    eax,DWORD PTR [rsp+0x44]
   140011141:	mov    DWORD PTR [rdi+r13*4],r11d
   140011145:	mov    DWORD PTR [rdi+0x4],eax
   140011148:	jmp    0x140010f1e
   14001114d:	lea    rcx,[rip+0x23e0c]        # 0x140034f60
   140011154:	cmp    rax,rcx
   140011157:	je     0x140011182
   140011159:	mov    rdx,QWORD PTR [rbx+rdi*1+0x58]
   14001115e:	lock add DWORD PTR [rdx],0xffffffff
   140011162:	jne    0x140011182
   140011164:	mov    rcx,QWORD PTR [rbx+rdi*1+0x58]
   140011169:	call   0x1400098ac
   14001116e:	shl    r13,0x5
   140011172:	mov    rcx,QWORD PTR [r13+rdi*1+0x0]
   140011177:	call   0x1400098ac
   14001117c:	and    QWORD PTR [rbx+rdi*1+0x50],0x0
   140011182:	mov    DWORD PTR [r12],0x1
   14001118a:	mov    QWORD PTR [rbx+rdi*1+0x58],r12
   14001118f:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   140011194:	mov    rcx,QWORD PTR [rsp+0x200]
   14001119c:	xor    rcx,rsp
   14001119f:	call   0x140009080
   1400111a4:	mov    rbx,QWORD PTR [rsp+0x268]
   1400111ac:	add    rsp,0x210
   1400111b3:	pop    r15
   1400111b5:	pop    r14
   1400111b7:	pop    r13
   1400111b9:	pop    r12
   1400111bb:	pop    rdi
   1400111bc:	pop    rsi
   1400111bd:	pop    rbp
   1400111be:	ret    
   1400111bf:	int3   
   1400111c0:	rex push rbx
   1400111c2:	push   rbp
   1400111c3:	push   rsi
   1400111c4:	push   rdi
   1400111c5:	push   r12
   1400111c7:	push   r13
   1400111c9:	push   r14
   1400111cb:	sub    rsp,0xd0
   1400111d2:	mov    rax,QWORD PTR [rip+0x230c7]        # 0x1400342a0
   1400111d9:	xor    rax,rsp
   1400111dc:	mov    QWORD PTR [rsp+0xc0],rax
   1400111e4:	mov    rbx,r8
   1400111e7:	mov    rdi,rcx
   1400111ea:	test   edx,edx
   1400111ec:	je     0x14001120e
   1400111ee:	test   rbx,rbx
   1400111f1:	je     0x1400111fd
   1400111f3:	call   0x140010eb8
   1400111f8:	jmp    0x140011346
   1400111fd:	movsxd rax,edx
   140011200:	shl    rax,0x5
   140011204:	mov    rax,QWORD PTR [rax+rcx*1+0x48]
   140011209:	jmp    0x140011346
   14001120e:	xor    esi,esi
   140011210:	lea    r12d,[rsi+0x1]
   140011214:	test   rbx,rbx
   140011217:	je     0x140011341
   14001121d:	cmp    BYTE PTR [r8],0x4c
   140011221:	jne    0x140011368
   140011227:	cmp    BYTE PTR [r8+0x1],0x43
   14001122c:	jne    0x140011368
   140011232:	cmp    BYTE PTR [r8+0x2],0x5f
   140011237:	jne    0x140011368
   14001123d:	lea    rdx,[rip+0x1ce44]        # 0x14002e088
   140011244:	mov    rcx,rbx
   140011247:	call   0x14001dec8
   14001124c:	mov    rbp,rax
   14001124f:	test   rax,rax
   140011252:	je     0x1400113dc
   140011258:	mov    r13,rax
   14001125b:	sub    r13,rbx
   14001125e:	je     0x1400113dc
   140011264:	cmp    BYTE PTR [rax],0x3b
   140011267:	je     0x1400113dc
   14001126d:	mov    r14d,0x1
   140011273:	lea    r12,[rip+0x1ccfe]        # 0x14002df78
   14001127a:	mov    rcx,QWORD PTR [r12]
   14001127e:	mov    r8,r13
   140011281:	mov    rdx,rbx
   140011284:	call   0x14000da20
   140011289:	test   eax,eax
   14001128b:	jne    0x14001129b
   14001128d:	mov    rcx,QWORD PTR [r12]
   140011291:	call   0x140012e10
   140011296:	cmp    r13,rax
   140011299:	je     0x1400112ae
   14001129b:	lea    rax,[rip+0x1cd36]        # 0x14002dfd8
   1400112a2:	add    r12,0x18
   1400112a6:	inc    r14d
   1400112a9:	cmp    r12,rax
   1400112ac:	jle    0x14001127a
   1400112ae:	inc    rbp
   1400112b1:	lea    rdx,[rip+0x1cdc4]        # 0x14002e07c
   1400112b8:	mov    rcx,rbp
   1400112bb:	call   0x14001d264
   1400112c0:	mov    rbx,rax
   1400112c3:	test   rax,rax
   1400112c6:	jne    0x1400112d2
   1400112c8:	cmp    BYTE PTR [rbp+0x0],0x3b
   1400112cc:	jne    0x1400113dc
   1400112d2:	cmp    r14d,0x5
   1400112d6:	jg     0x140011322
   1400112d8:	lea    rcx,[rsp+0x30]
   1400112dd:	mov    r9,rax
   1400112e0:	mov    r8,rbp
   1400112e3:	mov    edx,0x83
   1400112e8:	call   0x14001ac68
   1400112ed:	test   eax,eax
   1400112ef:	je     0x140011306
   1400112f1:	and    QWORD PTR [rsp+0x20],0x0
   1400112f7:	xor    r9d,r9d
   1400112fa:	xor    r8d,r8d
   1400112fd:	xor    edx,edx
   1400112ff:	xor    ecx,ecx
   140011301:	call   0x14000e350
   140011306:	lea    r8,[rsp+0x30]
   14001130b:	mov    edx,r14d
   14001130e:	mov    rcx,rdi
   140011311:	mov    BYTE PTR [rsp+rbx*1+0x30],0x0
   140011316:	call   0x140010eb8
   14001131b:	test   rax,rax
   14001131e:	je     0x140011322
   140011320:	inc    esi
   140011322:	add    rbx,rbp
   140011325:	cmp    BYTE PTR [rbx],0x0
   140011328:	je     0x140011336
   14001132a:	inc    rbx
   14001132d:	cmp    BYTE PTR [rbx],0x0
   140011330:	jne    0x14001123d
   140011336:	test   esi,esi
   140011338:	je     0x1400113dc
   14001133e:	mov    rcx,rdi
   140011341:	call   0x140010a90
   140011346:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001134e:	xor    rcx,rsp
   140011351:	call   0x140009080
   140011356:	add    rsp,0xd0
   14001135d:	pop    r14
   14001135f:	pop    r13
   140011361:	pop    r12
   140011363:	pop    rdi
   140011364:	pop    rsi
   140011365:	pop    rbp
   140011366:	pop    rbx
   140011367:	ret    
   140011368:	and    DWORD PTR [rsp+0x28],esi
   14001136c:	and    QWORD PTR [rsp+0x20],rsi
   140011371:	lea    rdx,[rsp+0x30]
   140011376:	xor    r9d,r9d
   140011379:	mov    r8d,0x83
   14001137f:	mov    rcx,rbx
   140011382:	call   0x140010c78
   140011387:	test   rax,rax
   14001138a:	je     0x140011346
   14001138c:	xor    ebx,ebx
   14001138e:	lea    rbp,[rdi+0x48]
   140011392:	test   ebx,ebx
   140011394:	je     0x1400113c3
   140011396:	mov    rdx,QWORD PTR [rbp+0x0]
   14001139a:	lea    rcx,[rsp+0x30]
   14001139f:	call   0x14001ad50
   1400113a4:	test   eax,eax
   1400113a6:	je     0x1400113c1
   1400113a8:	lea    r8,[rsp+0x30]
   1400113ad:	mov    edx,ebx
   1400113af:	mov    rcx,rdi
   1400113b2:	call   0x140010eb8
   1400113b7:	test   rax,rax
   1400113ba:	jne    0x1400113c1
   1400113bc:	xor    r12d,r12d
   1400113bf:	jmp    0x1400113c3
   1400113c1:	inc    esi
   1400113c3:	inc    ebx
   1400113c5:	add    rbp,0x20
   1400113c9:	cmp    ebx,0x5
   1400113cc:	jle    0x140011392
   1400113ce:	test   r12d,r12d
   1400113d1:	jne    0x14001133e
   1400113d7:	jmp    0x140011336
   1400113dc:	xor    eax,eax
   1400113de:	jmp    0x140011346
   1400113e3:	int3   
   1400113e4:	mov    rax,rsp
   1400113e7:	mov    QWORD PTR [rax+0x8],rbx
   1400113eb:	mov    QWORD PTR [rax+0x10],rbp
   1400113ef:	mov    QWORD PTR [rax+0x18],rsi
   1400113f3:	mov    QWORD PTR [rax+0x20],rdi
   1400113f7:	push   r12
   1400113f9:	sub    rsp,0x20
   1400113fd:	mov    rsi,rdx
   140011400:	mov    ebp,ecx
   140011402:	cmp    ecx,0x5
   140011405:	ja     0x140011432
   140011407:	test   rdx,rdx
   14001140a:	je     0x140011432
   14001140c:	mov    r12d,0x1
   140011412:	mov    rdx,r12
   140011415:	lea    ecx,[r12+0xf]
   14001141a:	call   0x140012c6c
   14001141f:	mov    rbx,rax
   140011422:	test   rax,rax
   140011425:	jne    0x14001144f
   140011427:	call   0x14000f574
   14001142c:	mov    DWORD PTR [rax],0xc
   140011432:	xor    eax,eax
   140011434:	mov    rbx,QWORD PTR [rsp+0x30]
   140011439:	mov    rbp,QWORD PTR [rsp+0x38]
   14001143e:	mov    rsi,QWORD PTR [rsp+0x40]
   140011443:	mov    rdi,QWORD PTR [rsp+0x48]
   140011448:	add    rsp,0x20
   14001144c:	pop    r12
   14001144e:	ret    
   14001144f:	mov    rdx,r12
   140011452:	mov    ecx,0x160
   140011457:	call   0x140012c6c
   14001145c:	mov    QWORD PTR [rbx],rax
   14001145f:	test   rax,rax
   140011462:	jne    0x14001146e
   140011464:	mov    rcx,rbx
   140011467:	call   0x1400098ac
   14001146c:	jmp    0x140011427
   14001146e:	mov    rdx,r12
   140011471:	mov    ecx,0x220
   140011476:	call   0x140012c6c
   14001147b:	mov    QWORD PTR [rbx+0x8],rax
   14001147f:	test   rax,rax
   140011482:	jne    0x14001148e
   140011484:	mov    rcx,QWORD PTR [rbx]
   140011487:	call   0x1400098ac
   14001148c:	jmp    0x140011464
   14001148e:	mov    rdi,QWORD PTR [rbx]
   140011491:	test   rdi,rdi
   140011494:	je     0x1400114bb
   140011496:	lea    rdx,[rip+0x23ad3]        # 0x140034f70
   14001149d:	cmp    rdi,rdx
   1400114a0:	je     0x1400114bb
   1400114a2:	mov    rcx,rdi
   1400114a5:	mov    r8d,0x160
   1400114ab:	call   0x140008b00
   1400114b0:	and    DWORD PTR [rdi],0x0
   1400114b3:	mov    rcx,rdi
   1400114b6:	call   0x1400103b4
   1400114bb:	mov    rcx,QWORD PTR [rbx]
   1400114be:	mov    r8,rsi
   1400114c1:	mov    edx,ebp
   1400114c3:	call   0x1400111c0
   1400114c8:	test   rax,rax
   1400114cb:	je     0x1400114e9
   1400114cd:	mov    rax,QWORD PTR [rbx]
   1400114d0:	mov    rdx,QWORD PTR [rbx+0x8]
   1400114d4:	mov    ecx,DWORD PTR [rax+0x4]
   1400114d7:	call   0x14000fd40
   1400114dc:	test   eax,eax
   1400114de:	je     0x140011505
   1400114e0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400114e4:	call   0x1400098ac
   1400114e9:	mov    rcx,QWORD PTR [rbx]
   1400114ec:	call   0x14001044c
   1400114f1:	mov    rcx,QWORD PTR [rbx]
   1400114f4:	call   0x140010238
   1400114f9:	mov    rcx,rbx
   1400114fc:	call   0x1400098ac
   140011501:	xor    ebx,ebx
   140011503:	jmp    0x140011513
   140011505:	mov    rax,QWORD PTR [rbx+0x8]
   140011509:	mov    DWORD PTR [rax],r12d
   14001150c:	mov    rax,QWORD PTR [rbx+0x8]
   140011510:	mov    DWORD PTR [rax],r12d
   140011513:	mov    rax,rbx
   140011516:	jmp    0x140011434
   14001151b:	int3   
   14001151c:	jmp    0x1400113e4
   140011521:	int3   
   140011522:	int3   
   140011523:	int3   
   140011524:	mov    QWORD PTR [rsp+0x8],rsi
   140011529:	mov    QWORD PTR [rsp+0x10],rdi
   14001152e:	mov    QWORD PTR [rsp+0x20],r12
   140011533:	push   r13
   140011535:	push   r14
   140011537:	push   r15
   140011539:	sub    rsp,0x40
   14001153d:	mov    r13,rdx
   140011540:	mov    r14d,ecx
   140011543:	xor    r12d,r12d
   140011546:	cmp    ecx,0x5
   140011549:	jbe    0x140011571
   14001154b:	call   0x14000f574
   140011550:	mov    DWORD PTR [rax],0x16
   140011556:	and    QWORD PTR [rsp+0x20],r12
   14001155b:	xor    r9d,r9d
   14001155e:	xor    r8d,r8d
   140011561:	xor    edx,edx
   140011563:	xor    ecx,ecx
   140011565:	call   0x14000e4d8
   14001156a:	xor    eax,eax
   14001156c:	jmp    0x140011727
   140011571:	call   0x1400118e4
   140011576:	mov    rsi,rax
   140011579:	mov    QWORD PTR [rsp+0x70],rax
   14001157e:	call   0x140010580
   140011583:	or     DWORD PTR [rsi+0xc8],0x10
   14001158a:	mov    edx,0x1
   14001158f:	mov    ecx,0x160
   140011594:	call   0x140012c6c
   140011599:	mov    rdi,rax
   14001159c:	test   rax,rax
   14001159f:	je     0x14001171d
   1400115a5:	mov    ecx,0xc
   1400115aa:	call   0x1400133a8
   1400115af:	nop
   1400115b0:	mov    rdx,QWORD PTR [rsi+0xc0]
   1400115b7:	test   rdx,rdx
   1400115ba:	je     0x1400115db
   1400115bc:	cmp    rdi,rdx
   1400115bf:	je     0x1400115db
   1400115c1:	mov    rcx,rdi
   1400115c4:	mov    r8d,0x160
   1400115ca:	call   0x140008b00
   1400115cf:	and    DWORD PTR [rdi],0x0
   1400115d2:	mov    rcx,rdi
   1400115d5:	call   0x1400103b4
   1400115da:	nop
   1400115db:	mov    ecx,0xc
   1400115e0:	call   0x140013288
   1400115e5:	mov    r8,r13
   1400115e8:	mov    edx,r14d
   1400115eb:	mov    rcx,rdi
   1400115ee:	call   0x1400111c0
   1400115f3:	mov    r12,rax
   1400115f6:	mov    QWORD PTR [rsp+0x30],rax
   1400115fb:	test   rax,rax
   1400115fe:	je     0x14001170f
   140011604:	test   r13,r13
   140011607:	je     0x140011632
   140011609:	lea    rdx,[rip+0x23950]        # 0x140034f60
   140011610:	mov    rcx,r13
   140011613:	call   0x14001ad50
   140011618:	mov    ecx,DWORD PTR [rip+0x249a2]        # 0x140035fc0
   14001161e:	test   eax,eax
   140011620:	mov    r13d,0x1
   140011626:	cmovne ecx,r13d
   14001162a:	mov    DWORD PTR [rip+0x24990],ecx        # 0x140035fc0
   140011630:	jmp    0x140011638
   140011632:	mov    r13d,0x1
   140011638:	mov    ecx,0xc
   14001163d:	call   0x1400133a8
   140011642:	nop
   140011643:	mov    rdx,rdi
   140011646:	lea    rcx,[rsi+0xc0]
   14001164d:	call   0x140010528
   140011652:	mov    rcx,rdi
   140011655:	call   0x14001044c
   14001165a:	test   BYTE PTR [rsi+0xc8],0x2
   140011661:	jne    0x140011703
   140011667:	test   BYTE PTR [rip+0x238ea],r13b        # 0x140034f58
   14001166e:	jne    0x140011703
   140011674:	mov    rdx,QWORD PTR [rsi+0xc0]
   14001167b:	lea    rcx,[rip+0x23a4e]        # 0x1400350d0
   140011682:	call   0x140010528
   140011687:	mov    rdx,QWORD PTR [rip+0x23a42]        # 0x1400350d0
   14001168e:	add    rdx,0xc
   140011692:	mov    r8d,0x18
   140011698:	lea    rcx,[rip+0x24929]        # 0x140035fc8
   14001169f:	call   0x140008b00
   1400116a4:	mov    r11,QWORD PTR [rip+0x23a25]        # 0x1400350d0
   1400116ab:	mov    eax,DWORD PTR [r11+0x4]
   1400116af:	mov    DWORD PTR [rip+0x2492b],eax        # 0x140035fe0
   1400116b5:	mov    eax,DWORD PTR [r11+0x8]
   1400116b9:	mov    DWORD PTR [rip+0x24925],eax        # 0x140035fe4
   1400116bf:	mov    eax,DWORD PTR [r11+0x108]
   1400116c6:	mov    DWORD PTR [rip+0x23a0c],eax        # 0x1400350d8
   1400116cc:	mov    rax,QWORD PTR [r11+0x158]
   1400116d3:	mov    QWORD PTR [rip+0x230fe],rax        # 0x1400347d8
   1400116da:	mov    rax,QWORD PTR [r11+0x128]
   1400116e1:	mov    QWORD PTR [rip+0x23f90],rax        # 0x140035678
   1400116e8:	mov    rax,QWORD PTR [r11+0x140]
   1400116ef:	mov    QWORD PTR [rip+0x23f0a],rax        # 0x140035600
   1400116f6:	mov    eax,DWORD PTR [r11+0x10c]
   1400116fd:	mov    DWORD PTR [rip+0x23f7d],eax        # 0x140035680
   140011703:	mov    ecx,0xc
   140011708:	call   0x140013288
   14001170d:	jmp    0x14001171d
   14001170f:	mov    rcx,rdi
   140011712:	call   0x14001044c
   140011717:	call   0x140010238
   14001171c:	nop
   14001171d:	and    DWORD PTR [rsi+0xc8],0xffffffef
   140011724:	mov    rax,r12
   140011727:	mov    rsi,QWORD PTR [rsp+0x60]
   14001172c:	mov    rdi,QWORD PTR [rsp+0x68]
   140011731:	mov    r12,QWORD PTR [rsp+0x78]
   140011736:	add    rsp,0x40
   14001173a:	pop    r15
   14001173c:	pop    r14
   14001173e:	pop    r13
   140011740:	ret    
   140011741:	int3   
   140011742:	int3   
   140011743:	int3   
   140011744:	rex.W jmp QWORD PTR [rip+0x15c95]        # 0x1400273e0
   14001174b:	int3   
   14001174c:	xor    ecx,ecx
   14001174e:	rex.W jmp QWORD PTR [rip+0x15c8b]        # 0x1400273e0
   140011755:	int3   
   140011756:	int3   
   140011757:	int3   
   140011758:	rex.W jmp QWORD PTR [rip+0x15c89]        # 0x1400273e8
   14001175f:	int3   
   140011760:	rex.W jmp QWORD PTR [rip+0x15c89]        # 0x1400273f0
   140011767:	int3   
   140011768:	rex.W jmp QWORD PTR [rip+0x15c89]        # 0x1400273f8
   14001176f:	int3   
   140011770:	mov    eax,DWORD PTR [rip+0x2397a]        # 0x1400350f0
   140011776:	ret    
   140011777:	int3   
   140011778:	xor    eax,eax
   14001177a:	ret    
   14001177b:	int3   
   14001177c:	rex.W jmp QWORD PTR [rip+0x15c7d]        # 0x140027400
   140011783:	int3   
   140011784:	sub    rsp,0x28
   140011788:	mov    ecx,DWORD PTR [rip+0x23962]        # 0x1400350f0
   14001178e:	cmp    ecx,0xffffffff
   140011791:	je     0x1400117a0
   140011793:	call   QWORD PTR [rip+0x15c6f]        # 0x140027408
   140011799:	or     DWORD PTR [rip+0x23950],0xffffffff        # 0x1400350f0
   1400117a0:	add    rsp,0x28
   1400117a4:	jmp    0x140013204
   1400117a9:	int3   
   1400117aa:	int3   
   1400117ab:	int3   
   1400117ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400117b1:	push   rdi
   1400117b2:	sub    rsp,0x20
   1400117b6:	mov    rdi,rdx
   1400117b9:	mov    rbx,rcx
   1400117bc:	lea    rax,[rip+0x1cf6d]        # 0x14002e730
   1400117c3:	mov    QWORD PTR [rcx+0xa0],rax
   1400117ca:	mov    DWORD PTR [rcx+0x1c],0x1
   1400117d1:	mov    DWORD PTR [rcx+0xc8],0x1
   1400117db:	mov    BYTE PTR [rcx+0x174],0x43
   1400117e2:	mov    BYTE PTR [rcx+0x1f7],0x43
   1400117e9:	lea    rax,[rip+0x23230]        # 0x140034a20
   1400117f0:	mov    QWORD PTR [rcx+0xb8],rax
   1400117f7:	mov    ecx,0xd
   1400117fc:	call   0x1400133a8
   140011801:	nop
   140011802:	mov    rax,QWORD PTR [rbx+0xb8]
   140011809:	lock add DWORD PTR [rax],0x1
   14001180d:	mov    ecx,0xd
   140011812:	call   0x140013288
   140011817:	mov    ecx,0xc
   14001181c:	call   0x1400133a8
   140011821:	nop
   140011822:	mov    QWORD PTR [rbx+0xc0],rdi
   140011829:	test   rdi,rdi
   14001182c:	jne    0x14001183c
   14001182e:	mov    rax,QWORD PTR [rip+0x2389b]        # 0x1400350d0
   140011835:	mov    QWORD PTR [rbx+0xc0],rax
   14001183c:	mov    rcx,QWORD PTR [rbx+0xc0]
   140011843:	call   0x1400103b4
   140011848:	nop
   140011849:	mov    ecx,0xc
   14001184e:	call   0x140013288
   140011853:	mov    rbx,QWORD PTR [rsp+0x30]
   140011858:	add    rsp,0x20
   14001185c:	pop    rdi
   14001185d:	ret    
   14001185e:	int3   
   14001185f:	int3   
   140011860:	mov    QWORD PTR [rsp+0x8],rbx
   140011865:	push   rdi
   140011866:	sub    rsp,0x20
   14001186a:	call   QWORD PTR [rip+0x15a00]        # 0x140027270
   140011870:	mov    ecx,DWORD PTR [rip+0x2387a]        # 0x1400350f0
   140011876:	mov    edi,eax
   140011878:	call   QWORD PTR [rip+0x15b7a]        # 0x1400273f8
   14001187e:	mov    rbx,rax
   140011881:	test   rax,rax
   140011884:	jne    0x1400118ce
   140011886:	lea    ecx,[rax+0x1]
   140011889:	mov    edx,0x2c8
   14001188e:	call   0x140012c6c
   140011893:	mov    rbx,rax
   140011896:	test   rax,rax
   140011899:	je     0x1400118ce
   14001189b:	mov    ecx,DWORD PTR [rip+0x2384f]        # 0x1400350f0
   1400118a1:	mov    rdx,rax
   1400118a4:	call   QWORD PTR [rip+0x15b56]        # 0x140027400
   1400118aa:	mov    rcx,rbx
   1400118ad:	test   eax,eax
   1400118af:	je     0x1400118c7
   1400118b1:	xor    edx,edx
   1400118b3:	call   0x1400117ac
   1400118b8:	call   QWORD PTR [rip+0x15b52]        # 0x140027410
   1400118be:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400118c3:	mov    DWORD PTR [rbx],eax
   1400118c5:	jmp    0x1400118ce
   1400118c7:	call   0x1400098ac
   1400118cc:	xor    ebx,ebx
   1400118ce:	mov    ecx,edi
   1400118d0:	call   QWORD PTR [rip+0x159da]        # 0x1400272b0
   1400118d6:	mov    rax,rbx
   1400118d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118de:	add    rsp,0x20
   1400118e2:	pop    rdi
   1400118e3:	ret    
   1400118e4:	rex push rbx
   1400118e6:	sub    rsp,0x20
   1400118ea:	call   0x140011860
   1400118ef:	mov    rbx,rax
   1400118f2:	test   rax,rax
   1400118f5:	jne    0x1400118ff
   1400118f7:	lea    ecx,[rax+0x10]
   1400118fa:	call   0x14000db1c
   1400118ff:	mov    rax,rbx
   140011902:	add    rsp,0x20
   140011906:	pop    rbx
   140011907:	ret    
   140011908:	test   rcx,rcx
   14001190b:	je     0x140011a3c
   140011911:	mov    QWORD PTR [rsp+0x10],rbx
   140011916:	push   rdi
   140011917:	sub    rsp,0x20
   14001191b:	mov    rbx,rcx
   14001191e:	mov    rcx,QWORD PTR [rcx+0x38]
   140011922:	test   rcx,rcx
   140011925:	je     0x14001192c
   140011927:	call   0x1400098ac
   14001192c:	mov    rcx,QWORD PTR [rbx+0x48]
   140011930:	test   rcx,rcx
   140011933:	je     0x14001193a
   140011935:	call   0x1400098ac
   14001193a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001193e:	test   rcx,rcx
   140011941:	je     0x140011948
   140011943:	call   0x1400098ac
   140011948:	mov    rcx,QWORD PTR [rbx+0x68]
   14001194c:	test   rcx,rcx
   14001194f:	je     0x140011956
   140011951:	call   0x1400098ac
   140011956:	mov    rcx,QWORD PTR [rbx+0x70]
   14001195a:	test   rcx,rcx
   14001195d:	je     0x140011964
   14001195f:	call   0x1400098ac
   140011964:	mov    rcx,QWORD PTR [rbx+0x78]
   140011968:	test   rcx,rcx
   14001196b:	je     0x140011972
   14001196d:	call   0x1400098ac
   140011972:	mov    rcx,QWORD PTR [rbx+0x80]
   140011979:	test   rcx,rcx
   14001197c:	je     0x140011983
   14001197e:	call   0x1400098ac
   140011983:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001198a:	lea    rax,[rip+0x1cd9f]        # 0x14002e730
   140011991:	cmp    rcx,rax
   140011994:	je     0x14001199b
   140011996:	call   0x1400098ac
   14001199b:	mov    ecx,0xd
   1400119a0:	call   0x1400133a8
   1400119a5:	nop
   1400119a6:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400119ad:	mov    QWORD PTR [rsp+0x30],rcx
   1400119b2:	test   rcx,rcx
   1400119b5:	je     0x1400119d4
   1400119b7:	lock add DWORD PTR [rcx],0xffffffff
   1400119bb:	jne    0x1400119d4
   1400119bd:	lea    rax,[rip+0x2305c]        # 0x140034a20
   1400119c4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400119c9:	cmp    rcx,rax
   1400119cc:	je     0x1400119d4
   1400119ce:	call   0x1400098ac
   1400119d3:	nop
   1400119d4:	mov    ecx,0xd
   1400119d9:	call   0x140013288
   1400119de:	mov    ecx,0xc
   1400119e3:	call   0x1400133a8
   1400119e8:	nop
   1400119e9:	mov    rdi,QWORD PTR [rbx+0xc0]
   1400119f0:	test   rdi,rdi
   1400119f3:	je     0x140011a20
   1400119f5:	mov    rcx,rdi
   1400119f8:	call   0x14001044c
   1400119fd:	cmp    rdi,QWORD PTR [rip+0x236cc]        # 0x1400350d0
   140011a04:	je     0x140011a20
   140011a06:	lea    rax,[rip+0x23563]        # 0x140034f70
   140011a0d:	cmp    rdi,rax
   140011a10:	je     0x140011a20
   140011a12:	cmp    DWORD PTR [rdi],0x0
   140011a15:	jne    0x140011a20
   140011a17:	mov    rcx,rdi
   140011a1a:	call   0x140010238
   140011a1f:	nop
   140011a20:	mov    ecx,0xc
   140011a25:	call   0x140013288
   140011a2a:	mov    rcx,rbx
   140011a2d:	call   0x1400098ac
   140011a32:	mov    rbx,QWORD PTR [rsp+0x38]
   140011a37:	add    rsp,0x20
   140011a3b:	pop    rdi
   140011a3c:	ret    
   140011a3d:	int3   
   140011a3e:	int3   
   140011a3f:	int3   
   140011a40:	rex push rbx
   140011a42:	sub    rsp,0x20
   140011a46:	mov    rbx,rcx
   140011a49:	mov    ecx,DWORD PTR [rip+0x236a1]        # 0x1400350f0
   140011a4f:	cmp    ecx,0xffffffff
   140011a52:	je     0x140011a78
   140011a54:	test   rbx,rbx
   140011a57:	jne    0x140011a68
   140011a59:	call   QWORD PTR [rip+0x15999]        # 0x1400273f8
   140011a5f:	mov    ecx,DWORD PTR [rip+0x2368b]        # 0x1400350f0
   140011a65:	mov    rbx,rax
   140011a68:	xor    edx,edx
   140011a6a:	call   QWORD PTR [rip+0x15990]        # 0x140027400
   140011a70:	mov    rcx,rbx
   140011a73:	call   0x140011908
   140011a78:	add    rsp,0x20
   140011a7c:	pop    rbx
   140011a7d:	ret    
   140011a7e:	int3   
   140011a7f:	int3   
   140011a80:	rex.W jmp QWORD PTR [rip+0x15989]        # 0x140027410
   140011a87:	int3   
   140011a88:	rex.W jmp QWORD PTR [rip+0x15681]        # 0x140027110
   140011a8f:	int3   
   140011a90:	rex push rbx
   140011a92:	sub    rsp,0x20
   140011a96:	call   0x14000df2c
   140011a9b:	call   0x140013178
   140011aa0:	test   eax,eax
   140011aa2:	je     0x140011b04
   140011aa4:	lea    rcx,[rip+0xfffffffffffffe5d]        # 0x140011908
   140011aab:	call   QWORD PTR [rip+0x15967]        # 0x140027418
   140011ab1:	mov    DWORD PTR [rip+0x23639],eax        # 0x1400350f0
   140011ab7:	cmp    eax,0xffffffff
   140011aba:	je     0x140011b04
   140011abc:	mov    edx,0x2c8
   140011ac1:	mov    ecx,0x1
   140011ac6:	call   0x140012c6c
   140011acb:	mov    rbx,rax
   140011ace:	test   rax,rax
   140011ad1:	je     0x140011b04
   140011ad3:	mov    ecx,DWORD PTR [rip+0x23617]        # 0x1400350f0
   140011ad9:	mov    rdx,rax
   140011adc:	call   QWORD PTR [rip+0x1591e]        # 0x140027400
   140011ae2:	test   eax,eax
   140011ae4:	je     0x140011b04
   140011ae6:	xor    edx,edx
   140011ae8:	mov    rcx,rbx
   140011aeb:	call   0x1400117ac
   140011af0:	call   QWORD PTR [rip+0x1591a]        # 0x140027410
   140011af6:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140011afb:	mov    DWORD PTR [rbx],eax
   140011afd:	mov    eax,0x1
   140011b02:	jmp    0x140011b0b
   140011b04:	call   0x140011784
   140011b09:	xor    eax,eax
   140011b0b:	add    rsp,0x20
   140011b0f:	pop    rbx
   140011b10:	ret    
   140011b11:	int3   
   140011b12:	int3   
   140011b13:	int3   
   140011b14:	mov    QWORD PTR [rsp+0x10],rbp
   140011b19:	mov    QWORD PTR [rsp+0x18],rsi
   140011b1e:	push   rdi
   140011b1f:	sub    rsp,0x60
   140011b23:	movsxd rdi,ecx
   140011b26:	mov    ebp,edx
   140011b28:	lea    rcx,[rsp+0x40]
   140011b2d:	mov    rdx,r8
   140011b30:	call   0x1400094b4
   140011b35:	lea    r11d,[rdi+0x1]
   140011b39:	cmp    r11d,0x100
   140011b40:	ja     0x140011b57
   140011b42:	mov    rax,QWORD PTR [rsp+0x40]
   140011b47:	mov    rcx,QWORD PTR [rax+0x140]
   140011b4e:	movzx  eax,WORD PTR [rcx+rdi*2]
   140011b52:	jmp    0x140011bf6
   140011b57:	mov    esi,edi
   140011b59:	lea    rdx,[rsp+0x40]
   140011b5e:	sar    esi,0x8
   140011b61:	movzx  ecx,sil
   140011b65:	call   0x140018588
   140011b6a:	mov    edx,0x1
   140011b6f:	test   eax,eax
   140011b71:	je     0x140011b91
   140011b73:	mov    BYTE PTR [rsp+0x88],sil
   140011b7b:	mov    BYTE PTR [rsp+0x89],dil
   140011b83:	mov    BYTE PTR [rsp+0x8a],0x0
   140011b8b:	lea    r9d,[rdx+0x1]
   140011b8f:	jmp    0x140011ba4
   140011b91:	mov    BYTE PTR [rsp+0x88],dil
   140011b99:	mov    BYTE PTR [rsp+0x89],0x0
   140011ba1:	mov    r9d,edx
   140011ba4:	mov    rcx,QWORD PTR [rsp+0x40]
   140011ba9:	mov    DWORD PTR [rsp+0x38],edx
   140011bad:	lea    r8,[rsp+0x88]
   140011bb5:	mov    eax,DWORD PTR [rcx+0x14]
   140011bb8:	mov    DWORD PTR [rsp+0x30],eax
   140011bbc:	mov    eax,DWORD PTR [rcx+0x4]
   140011bbf:	lea    rcx,[rsp+0x40]
   140011bc4:	mov    DWORD PTR [rsp+0x28],eax
   140011bc8:	lea    rax,[rsp+0x70]
   140011bcd:	mov    QWORD PTR [rsp+0x20],rax
   140011bd2:	call   0x14001c0ec
   140011bd7:	test   eax,eax
   140011bd9:	jne    0x140011bf1
   140011bdb:	cmp    BYTE PTR [rsp+0x58],al
   140011bdf:	je     0x140011bed
   140011be1:	mov    rax,QWORD PTR [rsp+0x50]
   140011be6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140011bed:	xor    eax,eax
   140011bef:	jmp    0x140011c0b
   140011bf1:	movzx  eax,WORD PTR [rsp+0x70]
   140011bf6:	and    eax,ebp
   140011bf8:	cmp    BYTE PTR [rsp+0x58],0x0
   140011bfd:	je     0x140011c0b
   140011bff:	mov    rcx,QWORD PTR [rsp+0x50]
   140011c04:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140011c0b:	lea    r11,[rsp+0x60]
   140011c10:	mov    rbp,QWORD PTR [r11+0x18]
   140011c14:	mov    rsi,QWORD PTR [r11+0x20]
   140011c18:	mov    rsp,r11
   140011c1b:	pop    rdi
   140011c1c:	ret    
   140011c1d:	int3   
   140011c1e:	int3   
   140011c1f:	int3   
   140011c20:	sub    rsp,0x28
   140011c24:	cmp    DWORD PTR [rip+0x24395],0x0        # 0x140035fc0
   140011c2b:	jne    0x140011c3f
   140011c2d:	mov    rax,QWORD PTR [rip+0x2347c]        # 0x1400350b0
   140011c34:	movsxd rcx,ecx
   140011c37:	movzx  eax,WORD PTR [rax+rcx*2]
   140011c3b:	and    eax,edx
   140011c3d:	jmp    0x140011c47
   140011c3f:	xor    r8d,r8d
   140011c42:	call   0x140011b14
   140011c47:	add    rsp,0x28
   140011c4b:	ret    
   140011c4c:	mov    DWORD PTR [rsp+0x8],ecx
   140011c50:	sub    rsp,0x28
   140011c54:	xor    r8d,r8d
   140011c57:	mov    edx,0x1000
   140011c5c:	xor    ecx,ecx
   140011c5e:	call   QWORD PTR [rip+0x157c4]        # 0x140027428
   140011c64:	mov    QWORD PTR [rip+0x2437d],rax        # 0x140035fe8
   140011c6b:	test   rax,rax
   140011c6e:	je     0x140011c93
   140011c70:	lea    r8,[rsp+0x30]
   140011c75:	mov    r9d,0x4
   140011c7b:	xor    edx,edx
   140011c7d:	mov    rcx,rax
   140011c80:	mov    DWORD PTR [rsp+0x30],0x2
   140011c88:	call   QWORD PTR [rip+0x15792]        # 0x140027420
   140011c8e:	mov    eax,0x1
   140011c93:	add    rsp,0x28
   140011c97:	ret    
   140011c98:	sub    rsp,0x28
   140011c9c:	mov    rcx,QWORD PTR [rip+0x24345]        # 0x140035fe8
   140011ca3:	call   QWORD PTR [rip+0x15787]        # 0x140027430
   140011ca9:	and    QWORD PTR [rip+0x24337],0x0        # 0x140035fe8
   140011cb1:	add    rsp,0x28
   140011cb5:	ret    
   140011cb6:	int3   
   140011cb7:	int3   
   140011cb8:	mov    rax,QWORD PTR [rip+0x24329]        # 0x140035fe8
   140011cbf:	ret    
   140011cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140011cc5:	mov    QWORD PTR [rsp+0x18],rdi
   140011cca:	mov    QWORD PTR [rsp+0x20],r13
   140011ccf:	push   r14
   140011cd1:	sub    rsp,0x30
   140011cd5:	lea    r14,[rip+0x23424]        # 0x140035100
   140011cdc:	mov    edi,ecx
   140011cde:	xor    ebx,ebx
   140011ce0:	mov    rax,r14
   140011ce3:	cmp    ecx,DWORD PTR [rax]
   140011ce5:	je     0x140011cf2
   140011ce7:	inc    ebx
   140011ce9:	add    rax,0x10
   140011ced:	cmp    ebx,0x17
   140011cf0:	jb     0x140011ce3
   140011cf2:	cmp    ebx,0x17
   140011cf5:	jae    0x140011ecf
   140011cfb:	mov    ecx,0x3
   140011d00:	call   0x14001e158
   140011d05:	cmp    eax,0x1
   140011d08:	je     0x140011e8a
   140011d0e:	mov    ecx,0x3
   140011d13:	call   0x14001e158
   140011d18:	test   eax,eax
   140011d1a:	jne    0x140011d29
   140011d1c:	cmp    DWORD PTR [rip+0x22ac5],0x1        # 0x1400347e8
   140011d23:	je     0x140011e8a
   140011d29:	cmp    edi,0xfc
   140011d2f:	je     0x140011ecf
   140011d35:	lea    rdi,[rip+0x242b4]        # 0x140035ff0
   140011d3c:	mov    r13d,0x314
   140011d42:	lea    r8,[rip+0x1c917]        # 0x14002e660
   140011d49:	mov    rcx,rdi
   140011d4c:	mov    rdx,r13
   140011d4f:	call   0x140012b54
   140011d54:	test   eax,eax
   140011d56:	je     0x140011d6d
   140011d58:	and    QWORD PTR [rsp+0x20],0x0
   140011d5e:	xor    r9d,r9d
   140011d61:	xor    r8d,r8d
   140011d64:	xor    edx,edx
   140011d66:	xor    ecx,ecx
   140011d68:	call   0x14000e350
   140011d6d:	lea    rdx,[rip+0x24295]        # 0x140036009
   140011d74:	mov    r8d,0x104
   140011d7a:	xor    ecx,ecx
   140011d7c:	mov    BYTE PTR [rip+0x2438a],0x0        # 0x14003610d
   140011d83:	call   QWORD PTR [rip+0x1539f]        # 0x140027128
   140011d89:	test   eax,eax
   140011d8b:	jne    0x140011dbe
   140011d8d:	lea    r8,[rip+0x1c8b4]        # 0x14002e648
   140011d94:	lea    rcx,[rip+0x2426e]        # 0x140036009
   140011d9b:	mov    edx,0x2fb
   140011da0:	call   0x140012b54
   140011da5:	test   eax,eax
   140011da7:	je     0x140011dbe
   140011da9:	and    QWORD PTR [rsp+0x20],0x0
   140011daf:	xor    r9d,r9d
   140011db2:	xor    r8d,r8d
   140011db5:	xor    edx,edx
   140011db7:	xor    ecx,ecx
   140011db9:	call   0x14000e350
   140011dbe:	lea    rcx,[rip+0x24244]        # 0x140036009
   140011dc5:	call   0x140012e10
   140011dca:	inc    rax
   140011dcd:	cmp    rax,0x3c
   140011dd1:	jbe    0x140011e19
   140011dd3:	lea    rcx,[rip+0x2422f]        # 0x140036009
   140011dda:	call   0x140012e10
   140011ddf:	lea    rdx,[rip+0x2451e]        # 0x140036304
   140011de6:	lea    r8,[rip+0x1c857]        # 0x14002e644
   140011ded:	lea    rcx,[rax+rdi*1-0x22]
   140011df2:	mov    r9d,0x3
   140011df8:	sub    rdx,rcx
   140011dfb:	call   0x14001ac68
   140011e00:	test   eax,eax
   140011e02:	je     0x140011e19
   140011e04:	and    QWORD PTR [rsp+0x20],0x0
   140011e0a:	xor    r9d,r9d
   140011e0d:	xor    r8d,r8d
   140011e10:	xor    edx,edx
   140011e12:	xor    ecx,ecx
   140011e14:	call   0x14000e350
   140011e19:	lea    r8,[rip+0x1c820]        # 0x14002e640
   140011e20:	mov    rdx,r13
   140011e23:	mov    rcx,rdi
   140011e26:	call   0x14001d1d8
   140011e2b:	test   eax,eax
   140011e2d:	je     0x140011e44
   140011e2f:	and    QWORD PTR [rsp+0x20],0x0
   140011e35:	xor    r9d,r9d
   140011e38:	xor    r8d,r8d
   140011e3b:	xor    edx,edx
   140011e3d:	xor    ecx,ecx
   140011e3f:	call   0x14000e350
   140011e44:	movsxd r8,ebx
   140011e47:	mov    rdx,r13
   140011e4a:	mov    rcx,rdi
   140011e4d:	add    r8,r8
   140011e50:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   140011e55:	call   0x14001d1d8
   140011e5a:	test   eax,eax
   140011e5c:	je     0x140011e73
   140011e5e:	and    QWORD PTR [rsp+0x20],0x0
   140011e64:	xor    r9d,r9d
   140011e67:	xor    r8d,r8d
   140011e6a:	xor    edx,edx
   140011e6c:	xor    ecx,ecx
   140011e6e:	call   0x14000e350
   140011e73:	lea    rdx,[rip+0x1c79e]        # 0x14002e618
   140011e7a:	mov    r8d,0x12010
   140011e80:	mov    rcx,rdi
   140011e83:	call   0x14001df64
   140011e88:	jmp    0x140011ecf
   140011e8a:	mov    ecx,0xfffffff4
   140011e8f:	call   QWORD PTR [rip+0x1522b]        # 0x1400270c0
   140011e95:	mov    rdi,rax
   140011e98:	test   rax,rax
   140011e9b:	je     0x140011ecf
   140011e9d:	cmp    rax,0xffffffffffffffff
   140011ea1:	je     0x140011ecf
   140011ea3:	movsxd rbx,ebx
   140011ea6:	add    rbx,rbx
   140011ea9:	mov    rcx,QWORD PTR [r14+rbx*8+0x8]
   140011eae:	call   0x140012e10
   140011eb3:	mov    rdx,QWORD PTR [r14+rbx*8+0x8]
   140011eb8:	and    QWORD PTR [rsp+0x20],0x0
   140011ebe:	lea    r9,[rsp+0x48]
   140011ec3:	mov    r8,rax
   140011ec6:	mov    rcx,rdi
   140011ec9:	call   QWORD PTR [rip+0x15569]        # 0x140027438
   140011ecf:	mov    rbx,QWORD PTR [rsp+0x40]
   140011ed4:	mov    rdi,QWORD PTR [rsp+0x50]
   140011ed9:	mov    r13,QWORD PTR [rsp+0x58]
   140011ede:	add    rsp,0x30
   140011ee2:	pop    r14
   140011ee4:	ret    
   140011ee5:	int3   
   140011ee6:	int3   
   140011ee7:	int3   
   140011ee8:	lea    r8,[rip+0x23211]        # 0x140035100
   140011eef:	xor    eax,eax
   140011ef1:	mov    rdx,r8
   140011ef4:	cmp    ecx,DWORD PTR [rdx]
   140011ef6:	je     0x140011f06
   140011ef8:	inc    eax
   140011efa:	add    rdx,0x10
   140011efe:	cmp    eax,0x17
   140011f01:	jb     0x140011ef4
   140011f03:	xor    eax,eax
   140011f05:	ret    
   140011f06:	cdqe   
   140011f08:	add    rax,rax
   140011f0b:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   140011f10:	ret    
   140011f11:	int3   
   140011f12:	int3   
   140011f13:	int3   
   140011f14:	sub    rsp,0x28
   140011f18:	mov    ecx,0x3
   140011f1d:	call   0x14001e158
   140011f22:	cmp    eax,0x1
   140011f25:	je     0x140011f3e
   140011f27:	mov    ecx,0x3
   140011f2c:	call   0x14001e158
   140011f31:	test   eax,eax
   140011f33:	jne    0x140011f52
   140011f35:	cmp    DWORD PTR [rip+0x228ac],0x1        # 0x1400347e8
   140011f3c:	jne    0x140011f52
   140011f3e:	mov    ecx,0xfc
   140011f43:	call   0x140011cc0
   140011f48:	mov    ecx,0xff
   140011f4d:	call   0x140011cc0
   140011f52:	add    rsp,0x28
   140011f56:	ret    
   140011f57:	int3   
   140011f58:	mov    QWORD PTR [rip+0x243a9],rcx        # 0x140036308
   140011f5f:	ret    
   140011f60:	mov    QWORD PTR [rsp+0x8],rbx
   140011f65:	push   rdi
   140011f66:	sub    rsp,0x20
   140011f6a:	mov    rdi,rcx
   140011f6d:	mov    ecx,0x4
   140011f72:	call   0x1400133a8
   140011f77:	mov    rcx,QWORD PTR [rip+0x2438a]        # 0x140036308
   140011f7e:	call   0x140011758
   140011f83:	mov    rcx,rdi
   140011f86:	mov    rbx,rax
   140011f89:	call   0x140011744
   140011f8e:	mov    ecx,0x4
   140011f93:	mov    QWORD PTR [rip+0x2436e],rax        # 0x140036308
   140011f9a:	call   0x140013288
   140011f9f:	mov    rax,rbx
   140011fa2:	mov    rbx,QWORD PTR [rsp+0x30]
   140011fa7:	add    rsp,0x20
   140011fab:	pop    rdi
   140011fac:	ret    
   140011fad:	int3   
   140011fae:	int3   
   140011faf:	int3   
   140011fb0:	xor    ecx,ecx
   140011fb2:	jmp    0x140011f60
   140011fb7:	int3   
   140011fb8:	mov    rcx,QWORD PTR [rip+0x24349]        # 0x140036308
   140011fbf:	jmp    0x140011758
   140011fc4:	rex push rbx
   140011fc6:	sub    rsp,0x20
   140011fca:	mov    rbx,rcx
   140011fcd:	mov    rcx,QWORD PTR [rip+0x24334]        # 0x140036308
   140011fd4:	call   0x140011758
   140011fd9:	test   rax,rax
   140011fdc:	je     0x140011fee
   140011fde:	mov    rcx,rbx
   140011fe1:	call   rax
   140011fe3:	test   eax,eax
   140011fe5:	je     0x140011fee
   140011fe7:	mov    eax,0x1
   140011fec:	jmp    0x140011ff0
   140011fee:	xor    eax,eax
   140011ff0:	add    rsp,0x20
   140011ff4:	pop    rbx
   140011ff5:	ret    
   140011ff6:	int3   
   140011ff7:	int3   
   140011ff8:	mov    QWORD PTR [rsp+0x8],rbx
   140011ffd:	mov    QWORD PTR [rsp+0x10],rbp
   140012002:	mov    QWORD PTR [rsp+0x18],rsi
   140012007:	push   rdi
   140012008:	sub    rsp,0x20
   14001200c:	mov    rax,QWORD PTR [rip+0x23905]        # 0x140035918
   140012013:	movsxd r8,edx
   140012016:	xor    ebp,ebp
   140012018:	mov    rdx,QWORD PTR [rax]
   14001201b:	mov    rsi,rcx
   14001201e:	mov    rbx,rax
   140012021:	cmp    rdx,rbp
   140012024:	je     0x14001205b
   140012026:	mov    rdi,r8
   140012029:	mov    r8,rdi
   14001202c:	mov    rcx,rsi
   14001202f:	call   0x14001e300
   140012034:	cmp    eax,ebp
   140012036:	jne    0x140012048
   140012038:	mov    rax,QWORD PTR [rbx]
   14001203b:	cmp    WORD PTR [rax+rdi*2],0x3d
   140012040:	je     0x14001207b
   140012042:	cmp    WORD PTR [rax+rdi*2],bp
   140012046:	je     0x14001207b
   140012048:	add    rbx,0x8
   14001204c:	mov    rdx,QWORD PTR [rbx]
   14001204f:	cmp    rdx,rbp
   140012052:	jne    0x140012029
   140012054:	mov    rax,QWORD PTR [rip+0x238bd]        # 0x140035918
   14001205b:	sub    rbx,rax
   14001205e:	sar    rbx,0x3
   140012062:	neg    ebx
   140012064:	mov    rbp,QWORD PTR [rsp+0x38]
   140012069:	mov    rsi,QWORD PTR [rsp+0x40]
   14001206e:	mov    eax,ebx
   140012070:	mov    rbx,QWORD PTR [rsp+0x30]
   140012075:	add    rsp,0x20
   140012079:	pop    rdi
   14001207a:	ret    
   14001207b:	sub    rbx,QWORD PTR [rip+0x23896]        # 0x140035918
   140012082:	sar    rbx,0x3
   140012086:	jmp    0x140012064
   140012088:	mov    QWORD PTR [rsp+0x8],rbx
   14001208d:	mov    QWORD PTR [rsp+0x10],rsi
   140012092:	push   rdi
   140012093:	sub    rsp,0x20
   140012097:	mov    rbx,rcx
   14001209a:	xor    ecx,ecx
   14001209c:	mov    rax,rbx
   14001209f:	test   rbx,rbx
   1400120a2:	je     0x1400120f8
   1400120a4:	cmp    QWORD PTR [rbx],rcx
   1400120a7:	je     0x1400120b5
   1400120a9:	add    rax,0x8
   1400120ad:	inc    ecx
   1400120af:	cmp    QWORD PTR [rax],0x0
   1400120b3:	jne    0x1400120a9
   1400120b5:	lea    eax,[rcx+0x1]
   1400120b8:	mov    edx,0x8
   1400120bd:	movsxd rcx,eax
   1400120c0:	call   0x140012c6c
   1400120c5:	mov    rdi,rax
   1400120c8:	mov    rsi,rax
   1400120cb:	test   rax,rax
   1400120ce:	jne    0x1400120ea
   1400120d0:	lea    ecx,[rax+0x9]
   1400120d3:	call   0x14000db1c
   1400120d8:	jmp    0x1400120ea
   1400120da:	call   0x14001e3a8
   1400120df:	mov    QWORD PTR [rdi],rax
   1400120e2:	add    rdi,0x8
   1400120e6:	add    rbx,0x8
   1400120ea:	mov    rcx,QWORD PTR [rbx]
   1400120ed:	test   rcx,rcx
   1400120f0:	jne    0x1400120da
   1400120f2:	and    QWORD PTR [rdi],rcx
   1400120f5:	mov    rax,rsi
   1400120f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400120fd:	mov    rsi,QWORD PTR [rsp+0x38]
   140012102:	add    rsp,0x20
   140012106:	pop    rdi
   140012107:	ret    
   140012108:	mov    QWORD PTR [rsp+0x20],rbx
   14001210d:	mov    DWORD PTR [rsp+0x10],edx
   140012111:	mov    QWORD PTR [rsp+0x8],rcx
   140012116:	push   rbp
   140012117:	push   rsi
   140012118:	push   rdi
   140012119:	push   r12
   14001211b:	push   r13
   14001211d:	push   r14
   14001211f:	push   r15
   140012121:	sub    rsp,0x40
   140012125:	xor    r12d,r12d
   140012128:	mov    ebx,edx
   14001212a:	mov    r13,rcx
   14001212d:	mov    ebp,r12d
   140012130:	cmp    rcx,r12
   140012133:	jne    0x140012159
   140012135:	call   0x14000f574
   14001213a:	xor    r9d,r9d
   14001213d:	xor    r8d,r8d
   140012140:	xor    edx,edx
   140012142:	xor    ecx,ecx
   140012144:	mov    QWORD PTR [rsp+0x20],r12
   140012149:	mov    DWORD PTR [rax],0x16
   14001214f:	call   0x14000e4d8
   140012154:	jmp    0x140012262
   140012159:	mov    r15,QWORD PTR [rcx]
   14001215c:	cmp    r15,r12
   14001215f:	je     0x140012257
   140012165:	mov    edx,0x3d
   14001216a:	mov    rcx,r15
   14001216d:	call   0x14001e72c
   140012172:	mov    r14,rax
   140012175:	cmp    rax,r12
   140012178:	je     0x140012257
   14001217e:	cmp    r15,rax
   140012181:	je     0x140012257
   140012187:	cmp    WORD PTR [rax+0x2],r12w
   14001218c:	mov    rdi,QWORD PTR [rip+0x23785]        # 0x140035918
   140012193:	mov    ecx,r12d
   140012196:	sete   cl
   140012199:	mov    DWORD PTR [rsp+0x90],ecx
   1400121a0:	cmp    rdi,QWORD PTR [rip+0x23779]        # 0x140035920
   1400121a7:	jne    0x14001221d
   1400121a9:	mov    rsi,rdi
   1400121ac:	mov    eax,r12d
   1400121af:	cmp    rdi,r12
   1400121b2:	jne    0x1400121bf
   1400121b4:	mov    rdi,r12
   1400121b7:	jmp    0x140012216
   1400121b9:	add    rdi,0x8
   1400121bd:	inc    eax
   1400121bf:	cmp    QWORD PTR [rdi],r12
   1400121c2:	jne    0x1400121b9
   1400121c4:	inc    eax
   1400121c6:	mov    edx,0x8
   1400121cb:	movsxd rcx,eax
   1400121ce:	call   0x140012c6c
   1400121d3:	mov    rbx,rax
   1400121d6:	mov    rdi,rax
   1400121d9:	cmp    rax,r12
   1400121dc:	jne    0x1400121fd
   1400121de:	mov    ecx,0x9
   1400121e3:	call   0x14000db1c
   1400121e8:	jmp    0x1400121fd
   1400121ea:	mov    rcx,rax
   1400121ed:	call   0x14001e3a8
   1400121f2:	mov    QWORD PTR [rbx],rax
   1400121f5:	add    rbx,0x8
   1400121f9:	add    rsi,0x8
   1400121fd:	mov    rax,QWORD PTR [rsi]
   140012200:	cmp    rax,r12
   140012203:	jne    0x1400121ea
   140012205:	mov    ecx,DWORD PTR [rsp+0x90]
   14001220c:	mov    QWORD PTR [rbx],r12
   14001220f:	mov    ebx,DWORD PTR [rsp+0x88]
   140012216:	mov    QWORD PTR [rip+0x236fb],rdi        # 0x140035918
   14001221d:	cmp    rdi,r12
   140012220:	jne    0x1400122d0
   140012226:	mov    rax,QWORD PTR [rip+0x236db]        # 0x140035908
   14001222d:	cmp    ebx,r12d
   140012230:	je     0x14001227d
   140012232:	cmp    rax,r12
   140012235:	je     0x14001227d
   140012237:	call   0x14001e6a0
   14001223c:	mov    QWORD PTR [rip+0x2370d],rax        # 0x140035950
   140012243:	call   0x14001e568
   140012248:	cmp    eax,r12d
   14001224b:	jge    0x1400122c9
   14001224d:	call   0x14001e4a0
   140012252:	cmp    eax,r12d
   140012255:	je     0x1400122c9
   140012257:	call   0x14000f574
   14001225c:	mov    DWORD PTR [rax],0x16
   140012262:	or     eax,0xffffffff
   140012265:	mov    rbx,QWORD PTR [rsp+0x98]
   14001226d:	add    rsp,0x40
   140012271:	pop    r15
   140012273:	pop    r14
   140012275:	pop    r13
   140012277:	pop    r12
   140012279:	pop    rdi
   14001227a:	pop    rsi
   14001227b:	pop    rbp
   14001227c:	ret    
   14001227d:	cmp    ecx,r12d
   140012280:	je     0x140012286
   140012282:	xor    eax,eax
   140012284:	jmp    0x140012265
   140012286:	cmp    rax,r12
   140012289:	jne    0x1400122b0
   14001228b:	mov    ecx,0x8
   140012290:	call   0x140012c00
   140012295:	mov    QWORD PTR [rip+0x2366c],rax        # 0x140035908
   14001229c:	cmp    rax,r12
   14001229f:	je     0x140012262
   1400122a1:	mov    QWORD PTR [rax],r12
   1400122a4:	mov    rdi,QWORD PTR [rip+0x2366d]        # 0x140035918
   1400122ab:	cmp    rdi,r12
   1400122ae:	jne    0x1400122d0
   1400122b0:	mov    ecx,0x8
   1400122b5:	call   0x140012c00
   1400122ba:	mov    QWORD PTR [rip+0x23657],rax        # 0x140035918
   1400122c1:	cmp    rax,r12
   1400122c4:	je     0x140012262
   1400122c6:	mov    QWORD PTR [rax],r12
   1400122c9:	mov    rdi,QWORD PTR [rip+0x23648]        # 0x140035918
   1400122d0:	mov    rsi,rdi
   1400122d3:	cmp    rdi,r12
   1400122d6:	je     0x140012262
   1400122d8:	mov    rax,QWORD PTR [rdi]
   1400122db:	sub    r14,r15
   1400122de:	xor    ecx,ecx
   1400122e0:	sar    r14,1
   1400122e3:	mov    rbx,rdi
   1400122e6:	movsxd r12,r14d
   1400122e9:	cmp    rax,rcx
   1400122ec:	je     0x140012331
   1400122ee:	lea    edi,[rcx+0x3d]
   1400122f1:	mov    r8,r12
   1400122f4:	mov    rdx,rax
   1400122f7:	mov    rcx,r15
   1400122fa:	call   0x14001e300
   1400122ff:	xor    ecx,ecx
   140012301:	cmp    eax,ecx
   140012303:	jne    0x14001231e
   140012305:	mov    rax,QWORD PTR [rbx]
   140012308:	cmp    WORD PTR [rax+r12*2],di
   14001230d:	je     0x1400123bd
   140012313:	cmp    WORD PTR [rax+r12*2],cx
   140012318:	je     0x1400123bd
   14001231e:	add    rbx,0x8
   140012322:	mov    rax,QWORD PTR [rbx]
   140012325:	cmp    rax,rcx
   140012328:	jne    0x1400122f1
   14001232a:	mov    rdi,QWORD PTR [rip+0x235e7]        # 0x140035918
   140012331:	sub    rbx,rdi
   140012334:	sar    rbx,0x3
   140012338:	neg    ebx
   14001233a:	cmp    ebx,ecx
   14001233c:	jl     0x140012485
   140012342:	cmp    QWORD PTR [rsi],rcx
   140012345:	je     0x140012485
   14001234b:	movsxd rdi,ebx
   14001234e:	mov    rcx,QWORD PTR [rsi+rdi*8]
   140012352:	call   0x1400098ac
   140012357:	mov    r12d,DWORD PTR [rsp+0x90]
   14001235f:	xor    ecx,ecx
   140012361:	cmp    r12d,ecx
   140012364:	je     0x1400123d0
   140012366:	cmp    QWORD PTR [rsi+rdi*8],rcx
   14001236a:	je     0x140012389
   14001236c:	lea    rcx,[rsi+rdi*8+0x8]
   140012371:	xor    edx,edx
   140012373:	mov    rax,QWORD PTR [rcx]
   140012376:	inc    ebx
   140012378:	add    rcx,0x8
   14001237c:	mov    QWORD PTR [rsi+rdi*8],rax
   140012380:	inc    rdi
   140012383:	cmp    QWORD PTR [rsi+rdi*8],rdx
   140012387:	jne    0x140012373
   140012389:	movsxd rdx,ebx
   14001238c:	movabs rax,0x1fffffffffffffff
   140012396:	cmp    rdx,rax
   140012399:	jae    0x1400123d8
   14001239b:	mov    rcx,QWORD PTR [rip+0x23576]        # 0x140035918
   1400123a2:	mov    r8d,0x8
   1400123a8:	call   0x140012d78
   1400123ad:	xor    edi,edi
   1400123af:	cmp    rax,rdi
   1400123b2:	je     0x1400123da
   1400123b4:	mov    QWORD PTR [rip+0x2355d],rax        # 0x140035918
   1400123bb:	jmp    0x1400123da
   1400123bd:	mov    rdi,QWORD PTR [rip+0x23554]        # 0x140035918
   1400123c4:	sub    rbx,rdi
   1400123c7:	sar    rbx,0x3
   1400123cb:	jmp    0x14001233a
   1400123d0:	mov    QWORD PTR [rsi+rdi*8],r15
   1400123d4:	mov    QWORD PTR [r13+0x0],rcx
   1400123d8:	xor    edi,edi
   1400123da:	cmp    DWORD PTR [rsp+0x88],edi
   1400123e1:	je     0x140012654
   1400123e7:	mov    rcx,r15
   1400123ea:	call   0x140012684
   1400123ef:	mov    ebx,0x2
   1400123f4:	lea    rcx,[rbx+rax*1]
   1400123f8:	mov    rdx,rbx
   1400123fb:	call   0x140012c6c
   140012400:	mov    rsi,rax
   140012403:	cmp    rax,rdi
   140012406:	je     0x140012654
   14001240c:	mov    rcx,r15
   14001240f:	call   0x140012684
   140012414:	mov    r8,r15
   140012417:	mov    rcx,rsi
   14001241a:	lea    rdx,[rbx+rax*1]
   14001241e:	call   0x14001e41c
   140012423:	xor    ecx,ecx
   140012425:	cmp    eax,ecx
   140012427:	je     0x14001243d
   140012429:	xor    r9d,r9d
   14001242c:	xor    r8d,r8d
   14001242f:	xor    edx,edx
   140012431:	mov    QWORD PTR [rsp+0x20],rcx
   140012436:	call   0x14000e350
   14001243b:	xor    ecx,ecx
   14001243d:	lea    rdi,[rsi+r14*2]
   140012441:	mov    WORD PTR [rdi],cx
   140012444:	add    rdi,rbx
   140012447:	or     ebx,0xffffffff
   14001244a:	cmp    DWORD PTR [rip+0x22e1f],0x1        # 0x140035270
   140012451:	jne    0x1400124ec
   140012457:	cmp    r12d,ecx
   14001245a:	mov    rdx,rdi
   14001245d:	cmovne rdx,rcx
   140012461:	mov    rcx,rsi
   140012464:	call   QWORD PTR [rip+0x14fde]        # 0x140027448
   14001246a:	xor    ecx,ecx
   14001246c:	cmp    eax,ecx
   14001246e:	jne    0x1400124ec
   140012470:	call   QWORD PTR [rip+0x14dfa]        # 0x140027270
   140012476:	xor    ecx,ecx
   140012478:	cmp    eax,0x78
   14001247b:	jne    0x1400124ea
   14001247d:	mov    DWORD PTR [rip+0x22ded],ecx        # 0x140035270
   140012483:	jmp    0x1400124f8
   140012485:	mov    r12d,DWORD PTR [rsp+0x90]
   14001248d:	cmp    r12d,ecx
   140012490:	jne    0x140012670
   140012496:	cmp    ebx,ecx
   140012498:	jge    0x14001249c
   14001249a:	neg    ebx
   14001249c:	lea    eax,[rbx+0x2]
   14001249f:	cmp    eax,ebx
   1400124a1:	jl     0x140012262
   1400124a7:	movsxd r8,eax
   1400124aa:	movabs rax,0x1fffffffffffffff
   1400124b4:	cmp    r8,rax
   1400124b7:	jae    0x140012262
   1400124bd:	mov    edx,0x8
   1400124c2:	mov    rcx,rdi
   1400124c5:	call   0x140012d78
   1400124ca:	xor    edi,edi
   1400124cc:	cmp    rax,rdi
   1400124cf:	je     0x140012262
   1400124d5:	movsxd rcx,ebx
   1400124d8:	mov    QWORD PTR [rax+rcx*8],r15
   1400124dc:	mov    QWORD PTR [rax+rcx*8+0x8],rdi
   1400124e1:	mov    QWORD PTR [r13+0x0],rdi
   1400124e5:	jmp    0x1400123b4
   1400124ea:	mov    ebp,ebx
   1400124ec:	cmp    DWORD PTR [rip+0x22d7e],ecx        # 0x140035270
   1400124f2:	jne    0x14001263b
   1400124f8:	mov    QWORD PTR [rsp+0x38],rcx
   1400124fd:	mov    QWORD PTR [rsp+0x30],rcx
   140012502:	mov    DWORD PTR [rsp+0x28],ecx
   140012506:	mov    QWORD PTR [rsp+0x20],rcx
   14001250b:	mov    r12,rcx
   14001250e:	mov    r14,rcx
   140012511:	mov    r9d,ebx
   140012514:	mov    r8,rsi
   140012517:	xor    edx,edx
   140012519:	xor    ecx,ecx
   14001251b:	call   QWORD PTR [rip+0x14e8f]        # 0x1400273b0
   140012521:	xor    edx,edx
   140012523:	movsxd r13,eax
   140012526:	cmp    r13d,edx
   140012529:	jne    0x140012532
   14001252b:	mov    ebp,ebx
   14001252d:	jmp    0x140012623
   140012532:	mov    rcx,r13
   140012535:	mov    edx,0x1
   14001253a:	call   0x140012c6c
   14001253f:	mov    r12,rax
   140012542:	xor    eax,eax
   140012544:	cmp    r12,rax
   140012547:	je     0x14001252b
   140012549:	mov    QWORD PTR [rsp+0x38],rax
   14001254e:	mov    QWORD PTR [rsp+0x30],rax
   140012553:	mov    r9d,ebx
   140012556:	mov    r8,rsi
   140012559:	xor    edx,edx
   14001255b:	xor    ecx,ecx
   14001255d:	mov    DWORD PTR [rsp+0x28],r13d
   140012562:	mov    QWORD PTR [rsp+0x20],r12
   140012567:	call   QWORD PTR [rip+0x14e43]        # 0x1400273b0
   14001256d:	xor    r13d,r13d
   140012570:	cmp    eax,r13d
   140012573:	je     0x14001252b
   140012575:	mov    eax,DWORD PTR [rsp+0x90]
   14001257c:	cmp    eax,r13d
   14001257f:	jne    0x140012606
   140012585:	mov    QWORD PTR [rsp+0x38],r13
   14001258a:	mov    QWORD PTR [rsp+0x30],r13
   14001258f:	mov    r9d,ebx
   140012592:	mov    r8,rdi
   140012595:	xor    edx,edx
   140012597:	xor    ecx,ecx
   140012599:	mov    DWORD PTR [rsp+0x28],r13d
   14001259e:	mov    QWORD PTR [rsp+0x20],r13
   1400125a3:	call   QWORD PTR [rip+0x14e07]        # 0x1400273b0
   1400125a9:	movsxd r13,eax
   1400125ac:	xor    edx,edx
   1400125ae:	cmp    r13d,edx
   1400125b1:	je     0x14001252b
   1400125b7:	mov    rcx,r13
   1400125ba:	mov    edx,0x1
   1400125bf:	call   0x140012c6c
   1400125c4:	mov    r14,rax
   1400125c7:	xor    eax,eax
   1400125c9:	cmp    r14,rax
   1400125cc:	je     0x14001252b
   1400125d2:	mov    QWORD PTR [rsp+0x38],rax
   1400125d7:	mov    QWORD PTR [rsp+0x30],rax
   1400125dc:	mov    r9d,ebx
   1400125df:	mov    r8,rdi
   1400125e2:	xor    edx,edx
   1400125e4:	xor    ecx,ecx
   1400125e6:	mov    DWORD PTR [rsp+0x28],r13d
   1400125eb:	mov    QWORD PTR [rsp+0x20],r14
   1400125f0:	call   QWORD PTR [rip+0x14dba]        # 0x1400273b0
   1400125f6:	xor    r13d,r13d
   1400125f9:	cmp    eax,r13d
   1400125fc:	mov    eax,DWORD PTR [rsp+0x90]
   140012603:	cmove  ebp,ebx
   140012606:	cmp    ebp,ebx
   140012608:	je     0x140012623
   14001260a:	cmp    eax,r13d
   14001260d:	mov    rdx,r14
   140012610:	mov    rcx,r12
   140012613:	cmovne rdx,r13
   140012617:	call   QWORD PTR [rip+0x14e23]        # 0x140027440
   14001261d:	cmp    eax,r13d
   140012620:	cmove  ebp,ebx
   140012623:	mov    rcx,r14
   140012626:	call   0x1400098ac
   14001262b:	mov    rcx,r12
   14001262e:	call   0x1400098ac
   140012633:	mov    r13,QWORD PTR [rsp+0x80]
   14001263b:	cmp    ebp,ebx
   14001263d:	jne    0x14001264a
   14001263f:	call   0x14000f574
   140012644:	mov    DWORD PTR [rax],0x2a
   14001264a:	mov    rcx,rsi
   14001264d:	call   0x1400098ac
   140012652:	xor    edi,edi
   140012654:	cmp    DWORD PTR [rsp+0x90],edi
   14001265b:	je     0x140012669
   14001265d:	mov    rcx,r15
   140012660:	call   0x1400098ac
   140012665:	mov    QWORD PTR [r13+0x0],rdi
   140012669:	mov    eax,ebp
   14001266b:	jmp    0x140012265
   140012670:	mov    rcx,r15
   140012673:	call   0x1400098ac
   140012678:	xor    edx,edx
   14001267a:	mov    QWORD PTR [r13+0x0],rdx
   14001267e:	jmp    0x140012282
   140012683:	int3   
   140012684:	mov    rax,rcx
   140012687:	movzx  edx,WORD PTR [rax]
   14001268a:	add    rax,0x2
   14001268e:	test   dx,dx
   140012691:	jne    0x140012687
   140012693:	sub    rax,rcx
   140012696:	sar    rax,1
   140012699:	dec    rax
   14001269c:	ret    
   14001269d:	int3   
   14001269e:	int3   
   14001269f:	int3   
   1400126a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400126a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400126aa:	push   rdi
   1400126ab:	sub    rsp,0x20
   1400126af:	mov    rax,QWORD PTR [rip+0x23252]        # 0x140035908
   1400126b6:	movsxd r8,edx
   1400126b9:	mov    rsi,rcx
   1400126bc:	mov    rdx,QWORD PTR [rax]
   1400126bf:	mov    rbx,rax
   1400126c2:	test   rdx,rdx
   1400126c5:	je     0x1400126fb
   1400126c7:	mov    rdi,r8
   1400126ca:	mov    r8,rdi
   1400126cd:	mov    rcx,rsi
   1400126d0:	call   0x14001e85c
   1400126d5:	test   eax,eax
   1400126d7:	jne    0x1400126e8
   1400126d9:	mov    rax,QWORD PTR [rbx]
   1400126dc:	cmp    BYTE PTR [rdi+rax*1],0x3d
   1400126e0:	je     0x140012716
   1400126e2:	cmp    BYTE PTR [rdi+rax*1],0x0
   1400126e6:	je     0x140012716
   1400126e8:	add    rbx,0x8
   1400126ec:	mov    rdx,QWORD PTR [rbx]
   1400126ef:	test   rdx,rdx
   1400126f2:	jne    0x1400126ca
   1400126f4:	mov    rax,QWORD PTR [rip+0x2320d]        # 0x140035908
   1400126fb:	sub    rbx,rax
   1400126fe:	sar    rbx,0x3
   140012702:	neg    ebx
   140012704:	mov    rsi,QWORD PTR [rsp+0x38]
   140012709:	mov    eax,ebx
   14001270b:	mov    rbx,QWORD PTR [rsp+0x30]
   140012710:	add    rsp,0x20
   140012714:	pop    rdi
   140012715:	ret    
   140012716:	sub    rbx,QWORD PTR [rip+0x231eb]        # 0x140035908
   14001271d:	sar    rbx,0x3
   140012721:	jmp    0x140012704
   140012723:	int3   
   140012724:	mov    QWORD PTR [rsp+0x8],rbx
   140012729:	mov    QWORD PTR [rsp+0x10],rsi
   14001272e:	push   rdi
   14001272f:	sub    rsp,0x20
   140012733:	mov    rbx,rcx
   140012736:	xor    ecx,ecx
   140012738:	mov    rax,rbx
   14001273b:	test   rbx,rbx
   14001273e:	je     0x140012794
   140012740:	cmp    QWORD PTR [rbx],rcx
   140012743:	je     0x140012751
   140012745:	add    rax,0x8
   140012749:	inc    ecx
   14001274b:	cmp    QWORD PTR [rax],0x0
   14001274f:	jne    0x140012745
   140012751:	lea    eax,[rcx+0x1]
   140012754:	mov    edx,0x8
   140012759:	movsxd rcx,eax
   14001275c:	call   0x140012c6c
   140012761:	mov    rdi,rax
   140012764:	mov    rsi,rax
   140012767:	test   rax,rax
   14001276a:	jne    0x140012786
   14001276c:	lea    ecx,[rax+0x9]
   14001276f:	call   0x14000db1c
   140012774:	jmp    0x140012786
   140012776:	call   0x14001e864
   14001277b:	mov    QWORD PTR [rdi],rax
   14001277e:	add    rdi,0x8
   140012782:	add    rbx,0x8
   140012786:	mov    rcx,QWORD PTR [rbx]
   140012789:	test   rcx,rcx
   14001278c:	jne    0x140012776
   14001278e:	and    QWORD PTR [rdi],rcx
   140012791:	mov    rax,rsi
   140012794:	mov    rbx,QWORD PTR [rsp+0x30]
   140012799:	mov    rsi,QWORD PTR [rsp+0x38]
   14001279e:	add    rsp,0x20
   1400127a2:	pop    rdi
   1400127a3:	ret    
   1400127a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400127a9:	mov    DWORD PTR [rsp+0x10],edx
   1400127ad:	push   rbp
   1400127ae:	push   rsi
   1400127af:	push   rdi
   1400127b0:	push   r12
   1400127b2:	push   r13
   1400127b4:	push   r14
   1400127b6:	push   r15
   1400127b8:	sub    rsp,0x30
   1400127bc:	xor    r13d,r13d
   1400127bf:	mov    ebp,edx
   1400127c1:	mov    r14,rcx
   1400127c4:	mov    ebx,r13d
   1400127c7:	cmp    rcx,r13
   1400127ca:	jne    0x1400127f0
   1400127cc:	call   0x14000f574
   1400127d1:	xor    r9d,r9d
   1400127d4:	xor    r8d,r8d
   1400127d7:	xor    edx,edx
   1400127d9:	xor    ecx,ecx
   1400127db:	mov    QWORD PTR [rsp+0x20],r13
   1400127e0:	mov    DWORD PTR [rax],0x16
   1400127e6:	call   0x14000e4d8
   1400127eb:	jmp    0x1400128da
   1400127f0:	mov    r12,QWORD PTR [rcx]
   1400127f3:	cmp    r12,r13
   1400127f6:	je     0x1400128cf
   1400127fc:	mov    edx,0x3d
   140012801:	mov    rcx,r12
   140012804:	call   0x140012fcc
   140012809:	mov    rdi,rax
   14001280c:	mov    QWORD PTR [rsp+0x70],rax
   140012811:	cmp    rax,r13
   140012814:	je     0x1400128cf
   14001281a:	cmp    r12,rax
   14001281d:	je     0x1400128cf
   140012823:	cmp    BYTE PTR [rax+0x1],r13b
   140012827:	mov    rsi,QWORD PTR [rip+0x230da]        # 0x140035908
   14001282e:	mov    r15d,r13d
   140012831:	sete   r15b
   140012835:	cmp    rsi,QWORD PTR [rip+0x230d4]        # 0x140035910
   14001283c:	jne    0x1400128ae
   14001283e:	mov    rbp,rsi
   140012841:	mov    eax,r13d
   140012844:	cmp    rsi,r13
   140012847:	jne    0x140012854
   140012849:	mov    rsi,r13
   14001284c:	jmp    0x1400128a3
   14001284e:	add    rsi,0x8
   140012852:	inc    eax
   140012854:	cmp    QWORD PTR [rsi],r13
   140012857:	jne    0x14001284e
   140012859:	inc    eax
   14001285b:	mov    edx,0x8
   140012860:	movsxd rcx,eax
   140012863:	call   0x140012c6c
   140012868:	mov    rdi,rax
   14001286b:	mov    rsi,rax
   14001286e:	cmp    rax,r13
   140012871:	jne    0x140012892
   140012873:	mov    ecx,0x9
   140012878:	call   0x14000db1c
   14001287d:	jmp    0x140012892
   14001287f:	mov    rcx,rax
   140012882:	call   0x14001e864
   140012887:	mov    QWORD PTR [rdi],rax
   14001288a:	add    rdi,0x8
   14001288e:	add    rbp,0x8
   140012892:	mov    rax,QWORD PTR [rbp+0x0]
   140012896:	cmp    rax,r13
   140012899:	jne    0x14001287f
   14001289b:	mov    QWORD PTR [rdi],r13
   14001289e:	mov    rdi,QWORD PTR [rsp+0x70]
   1400128a3:	mov    ebp,DWORD PTR [rsp+0x78]
   1400128a7:	mov    QWORD PTR [rip+0x2305a],rsi        # 0x140035908
   1400128ae:	cmp    rsi,r13
   1400128b1:	jne    0x140012940
   1400128b7:	cmp    ebp,r13d
   1400128ba:	je     0x1400128f5
   1400128bc:	cmp    QWORD PTR [rip+0x23055],r13        # 0x140035918
   1400128c3:	je     0x1400128f5
   1400128c5:	call   0x14001e8d4
   1400128ca:	cmp    eax,r13d
   1400128cd:	je     0x140012939
   1400128cf:	call   0x14000f574
   1400128d4:	mov    DWORD PTR [rax],0x16
   1400128da:	or     eax,0xffffffff
   1400128dd:	mov    rbx,QWORD PTR [rsp+0x80]
   1400128e5:	add    rsp,0x30
   1400128e9:	pop    r15
   1400128eb:	pop    r14
   1400128ed:	pop    r13
   1400128ef:	pop    r12
   1400128f1:	pop    rdi
   1400128f2:	pop    rsi
   1400128f3:	pop    rbp
   1400128f4:	ret    
   1400128f5:	cmp    r15d,r13d
   1400128f8:	je     0x1400128fe
   1400128fa:	xor    eax,eax
   1400128fc:	jmp    0x1400128dd
   1400128fe:	mov    ecx,0x8
   140012903:	call   0x140012c00
   140012908:	mov    QWORD PTR [rip+0x22ff9],rax        # 0x140035908
   14001290f:	cmp    rax,r13
   140012912:	je     0x1400128da
   140012914:	mov    QWORD PTR [rax],r13
   140012917:	cmp    QWORD PTR [rip+0x22ffa],r13        # 0x140035918
   14001291e:	jne    0x140012939
   140012920:	mov    ecx,0x8
   140012925:	call   0x140012c00
   14001292a:	mov    QWORD PTR [rip+0x22fe7],rax        # 0x140035918
   140012931:	cmp    rax,r13
   140012934:	je     0x1400128da
   140012936:	mov    QWORD PTR [rax],r13
   140012939:	mov    rsi,QWORD PTR [rip+0x22fc8]        # 0x140035908
   140012940:	mov    rbp,rsi
   140012943:	cmp    rsi,r13
   140012946:	je     0x1400128da
   140012948:	mov    rcx,QWORD PTR [rsi]
   14001294b:	mov    eax,edi
   14001294d:	mov    rdi,rsi
   140012950:	sub    eax,r12d
   140012953:	movsxd r13,eax
   140012956:	test   rcx,rcx
   140012959:	je     0x14001299a
   14001295b:	mov    rdx,rcx
   14001295e:	mov    r8,r13
   140012961:	mov    rcx,r12
   140012964:	call   0x14001e85c
   140012969:	test   eax,eax
   14001296b:	jne    0x140012987
   14001296d:	mov    rax,QWORD PTR [rdi]
   140012970:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   140012976:	je     0x140012a1e
   14001297c:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   140012981:	je     0x140012a1e
   140012987:	add    rdi,0x8
   14001298b:	mov    rcx,QWORD PTR [rdi]
   14001298e:	test   rcx,rcx
   140012991:	jne    0x14001295b
   140012993:	mov    rsi,QWORD PTR [rip+0x22f6e]        # 0x140035908
   14001299a:	sub    rdi,rsi
   14001299d:	sar    rdi,0x3
   1400129a1:	neg    edi
   1400129a3:	xor    r13d,r13d
   1400129a6:	cmp    edi,r13d
   1400129a9:	jl     0x140012a3b
   1400129af:	cmp    QWORD PTR [rbp+0x0],r13
   1400129b3:	je     0x140012a3b
   1400129b9:	movsxd rsi,edi
   1400129bc:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   1400129c1:	call   0x1400098ac
   1400129c6:	cmp    r15d,r13d
   1400129c9:	je     0x140012a31
   1400129cb:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   1400129d0:	je     0x1400129ef
   1400129d2:	lea    rcx,[rbp+rsi*8+0x8]
   1400129d7:	mov    rax,QWORD PTR [rcx]
   1400129da:	inc    edi
   1400129dc:	add    rcx,0x8
   1400129e0:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   1400129e5:	inc    rsi
   1400129e8:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   1400129ed:	jne    0x1400129d7
   1400129ef:	movsxd rdx,edi
   1400129f2:	movabs rax,0x1fffffffffffffff
   1400129fc:	cmp    rdx,rax
   1400129ff:	jae    0x140012a98
   140012a05:	mov    rcx,QWORD PTR [rip+0x22efc]        # 0x140035908
   140012a0c:	mov    r8d,0x8
   140012a12:	call   0x140012d78
   140012a17:	cmp    rax,r13
   140012a1a:	je     0x140012a98
   140012a1c:	jmp    0x140012a91
   140012a1e:	mov    rsi,QWORD PTR [rip+0x22ee3]        # 0x140035908
   140012a25:	sub    rdi,rsi
   140012a28:	sar    rdi,0x3
   140012a2c:	jmp    0x1400129a3
   140012a31:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140012a36:	mov    QWORD PTR [r14],r13
   140012a39:	jmp    0x140012a98
   140012a3b:	cmp    r15d,r13d
   140012a3e:	jne    0x140012b44
   140012a44:	cmp    edi,r13d
   140012a47:	jge    0x140012a4b
   140012a49:	neg    edi
   140012a4b:	lea    eax,[rdi+0x2]
   140012a4e:	cmp    eax,edi
   140012a50:	jl     0x1400128da
   140012a56:	movsxd r8,eax
   140012a59:	movabs rax,0x1fffffffffffffff
   140012a63:	cmp    r8,rax
   140012a66:	jae    0x1400128da
   140012a6c:	mov    edx,0x8
   140012a71:	mov    rcx,rsi
   140012a74:	call   0x140012d78
   140012a79:	cmp    rax,r13
   140012a7c:	je     0x1400128da
   140012a82:	movsxd rcx,edi
   140012a85:	mov    QWORD PTR [rax+rcx*8],r12
   140012a89:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140012a8e:	mov    QWORD PTR [r14],r13
   140012a91:	mov    QWORD PTR [rip+0x22e70],rax        # 0x140035908
   140012a98:	cmp    DWORD PTR [rsp+0x78],r13d
   140012a9d:	je     0x140012b2d
   140012aa3:	mov    rcx,r12
   140012aa6:	call   0x140012e10
   140012aab:	mov    edx,0x1
   140012ab0:	lea    rcx,[rax+0x2]
   140012ab4:	call   0x140012c6c
   140012ab9:	mov    rdi,rax
   140012abc:	cmp    rax,r13
   140012abf:	je     0x140012b2d
   140012ac1:	mov    rcx,r12
   140012ac4:	call   0x140012e10
   140012ac9:	mov    r8,r12
   140012acc:	mov    rcx,rdi
   140012acf:	lea    rdx,[rax+0x2]
   140012ad3:	call   0x140012b54
   140012ad8:	cmp    eax,r13d
   140012adb:	je     0x140012af1
   140012add:	xor    r9d,r9d
   140012ae0:	xor    r8d,r8d
   140012ae3:	xor    edx,edx
   140012ae5:	xor    ecx,ecx
   140012ae7:	mov    QWORD PTR [rsp+0x20],r13
   140012aec:	call   0x14000e350
   140012af1:	mov    rdx,rdi
   140012af4:	mov    rcx,rdi
   140012af7:	sub    rdx,r12
   140012afa:	add    rdx,QWORD PTR [rsp+0x70]
   140012aff:	mov    BYTE PTR [rdx],r13b
   140012b02:	inc    rdx
   140012b05:	cmp    r15d,r13d
   140012b08:	cmovne rdx,r13
   140012b0c:	call   QWORD PTR [rip+0x1492e]        # 0x140027440
   140012b12:	cmp    eax,r13d
   140012b15:	jne    0x140012b25
   140012b17:	or     ebx,0xffffffff
   140012b1a:	call   0x14000f574
   140012b1f:	mov    DWORD PTR [rax],0x2a
   140012b25:	mov    rcx,rdi
   140012b28:	call   0x1400098ac
   140012b2d:	cmp    r15d,r13d
   140012b30:	je     0x140012b3d
   140012b32:	mov    rcx,r12
   140012b35:	call   0x1400098ac
   140012b3a:	mov    QWORD PTR [r14],r13
   140012b3d:	mov    eax,ebx
   140012b3f:	jmp    0x1400128dd
   140012b44:	mov    rcx,r12
   140012b47:	call   0x1400098ac
   140012b4c:	mov    QWORD PTR [r14],r13
   140012b4f:	jmp    0x1400128fa
   140012b54:	rex push rbx
   140012b56:	sub    rsp,0x30
   140012b5a:	test   rcx,rcx
   140012b5d:	je     0x140012b6c
   140012b5f:	test   rdx,rdx
   140012b62:	je     0x140012b6c
   140012b64:	test   r8,r8
   140012b67:	jne    0x140012b95
   140012b69:	mov    BYTE PTR [rcx],r8b
   140012b6c:	call   0x14000f574
   140012b71:	mov    ebx,0x16
   140012b76:	and    QWORD PTR [rsp+0x20],0x0
   140012b7c:	xor    r9d,r9d
   140012b7f:	xor    r8d,r8d
   140012b82:	xor    edx,edx
   140012b84:	xor    ecx,ecx
   140012b86:	mov    DWORD PTR [rax],ebx
   140012b88:	call   0x14000e4d8
   140012b8d:	mov    eax,ebx
   140012b8f:	add    rsp,0x30
   140012b93:	pop    rbx
   140012b94:	ret    
   140012b95:	mov    r9,rcx
   140012b98:	mov    al,BYTE PTR [r8]
   140012b9b:	inc    r8
   140012b9e:	mov    BYTE PTR [r9],al
   140012ba1:	inc    r9
   140012ba4:	test   al,al
   140012ba6:	je     0x140012bae
   140012ba8:	sub    rdx,0x1
   140012bac:	jne    0x140012b98
   140012bae:	test   rdx,rdx
   140012bb1:	jne    0x140012bc1
   140012bb3:	mov    BYTE PTR [rcx],dl
   140012bb5:	call   0x14000f574
   140012bba:	mov    ebx,0x22
   140012bbf:	jmp    0x140012b76
   140012bc1:	xor    eax,eax
   140012bc3:	jmp    0x140012b8f
   140012bc5:	int3   
   140012bc6:	int3   
   140012bc7:	int3   
   140012bc8:	rex push rbx
   140012bca:	sub    rsp,0x20
   140012bce:	mov    ebx,ecx
   140012bd0:	call   QWORD PTR [rip+0x14782]        # 0x140027358
   140012bd6:	or     eax,0xffffffff
   140012bd9:	add    ebx,0x3e8
   140012bdf:	cmp    ebx,DWORD PTR [rip+0x2372f]        # 0x140036314
   140012be5:	cmova  ebx,eax
   140012be8:	mov    eax,ebx
   140012bea:	add    rsp,0x20
   140012bee:	pop    rbx
   140012bef:	ret    
   140012bf0:	mov    eax,DWORD PTR [rip+0x2371e]        # 0x140036314
   140012bf6:	mov    DWORD PTR [rip+0x23718],ecx        # 0x140036314
   140012bfc:	ret    
   140012bfd:	int3   
   140012bfe:	int3   
   140012bff:	int3   
   140012c00:	mov    QWORD PTR [rsp+0x8],rbx
   140012c05:	mov    QWORD PTR [rsp+0x10],rbp
   140012c0a:	mov    QWORD PTR [rsp+0x18],rsi
   140012c0f:	push   rdi
   140012c10:	sub    rsp,0x20
   140012c14:	xor    edi,edi
   140012c16:	mov    rsi,rcx
   140012c19:	or     ebp,0xffffffff
   140012c1c:	mov    rcx,rsi
   140012c1f:	call   0x14000993c
   140012c24:	mov    rbx,rax
   140012c27:	test   rax,rax
   140012c2a:	jne    0x140012c54
   140012c2c:	cmp    DWORD PTR [rip+0x236e2],eax        # 0x140036314
   140012c32:	jbe    0x140012c54
   140012c34:	mov    ecx,edi
   140012c36:	call   QWORD PTR [rip+0x1471c]        # 0x140027358
   140012c3c:	lea    r11d,[rdi+0x3e8]
   140012c43:	cmp    r11d,DWORD PTR [rip+0x236ca]        # 0x140036314
   140012c4a:	mov    edi,r11d
   140012c4d:	cmova  edi,ebp
   140012c50:	cmp    edi,ebp
   140012c52:	jne    0x140012c1c
   140012c54:	mov    rbp,QWORD PTR [rsp+0x38]
   140012c59:	mov    rsi,QWORD PTR [rsp+0x40]
   140012c5e:	mov    rax,rbx
   140012c61:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c66:	add    rsp,0x20
   140012c6a:	pop    rdi
   140012c6b:	ret    
   140012c6c:	mov    rax,rsp
   140012c6f:	mov    QWORD PTR [rax+0x8],rbx
   140012c73:	mov    QWORD PTR [rax+0x10],rbp
   140012c77:	mov    QWORD PTR [rax+0x18],rsi
   140012c7b:	mov    QWORD PTR [rax+0x20],rdi
   140012c7f:	push   r12
   140012c81:	sub    rsp,0x20
   140012c85:	xor    edi,edi
   140012c87:	mov    rsi,rdx
   140012c8a:	mov    rbp,rcx
   140012c8d:	or     r12d,0xffffffff
   140012c91:	xor    r8d,r8d
   140012c94:	mov    rdx,rsi
   140012c97:	mov    rcx,rbp
   140012c9a:	call   0x14001e9c8
   140012c9f:	mov    rbx,rax
   140012ca2:	test   rax,rax
   140012ca5:	jne    0x140012cd1
   140012ca7:	cmp    DWORD PTR [rip+0x23667],eax        # 0x140036314
   140012cad:	jbe    0x140012cd1
   140012caf:	mov    ecx,edi
   140012cb1:	call   QWORD PTR [rip+0x146a1]        # 0x140027358
   140012cb7:	lea    r11d,[rdi+0x3e8]
   140012cbe:	cmp    r11d,DWORD PTR [rip+0x2364f]        # 0x140036314
   140012cc5:	mov    edi,r11d
   140012cc8:	cmova  edi,r12d
   140012ccc:	cmp    edi,r12d
   140012ccf:	jne    0x140012c91
   140012cd1:	mov    rbp,QWORD PTR [rsp+0x38]
   140012cd6:	mov    rsi,QWORD PTR [rsp+0x40]
   140012cdb:	mov    rdi,QWORD PTR [rsp+0x48]
   140012ce0:	mov    rax,rbx
   140012ce3:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ce8:	add    rsp,0x20
   140012cec:	pop    r12
   140012cee:	ret    
   140012cef:	int3   
   140012cf0:	mov    rax,rsp
   140012cf3:	mov    QWORD PTR [rax+0x8],rbx
   140012cf7:	mov    QWORD PTR [rax+0x10],rbp
   140012cfb:	mov    QWORD PTR [rax+0x18],rsi
   140012cff:	mov    QWORD PTR [rax+0x20],rdi
   140012d03:	push   r12
   140012d05:	sub    rsp,0x20
   140012d09:	xor    esi,esi
   140012d0b:	mov    rdi,rdx
   140012d0e:	mov    rbp,rcx
   140012d11:	or     r12d,0xffffffff
   140012d15:	mov    rdx,rdi
   140012d18:	mov    rcx,rbp
   140012d1b:	call   0x14000d754
   140012d20:	mov    rbx,rax
   140012d23:	test   rax,rax
   140012d26:	jne    0x140012d57
   140012d28:	test   rdi,rdi
   140012d2b:	je     0x140012d57
   140012d2d:	cmp    DWORD PTR [rip+0x235e1],eax        # 0x140036314
   140012d33:	jbe    0x140012d57
   140012d35:	mov    ecx,esi
   140012d37:	call   QWORD PTR [rip+0x1461b]        # 0x140027358
   140012d3d:	lea    r11d,[rsi+0x3e8]
   140012d44:	cmp    r11d,DWORD PTR [rip+0x235c9]        # 0x140036314
   140012d4b:	mov    esi,r11d
   140012d4e:	cmova  esi,r12d
   140012d52:	cmp    esi,r12d
   140012d55:	jne    0x140012d15
   140012d57:	mov    rbp,QWORD PTR [rsp+0x38]
   140012d5c:	mov    rsi,QWORD PTR [rsp+0x40]
   140012d61:	mov    rdi,QWORD PTR [rsp+0x48]
   140012d66:	mov    rax,rbx
   140012d69:	mov    rbx,QWORD PTR [rsp+0x30]
   140012d6e:	add    rsp,0x20
   140012d72:	pop    r12
   140012d74:	ret    
   140012d75:	int3   
   140012d76:	int3   
   140012d77:	int3   
   140012d78:	mov    QWORD PTR [rsp+0x8],rbx
   140012d7d:	mov    QWORD PTR [rsp+0x10],rbp
   140012d82:	mov    QWORD PTR [rsp+0x18],rsi
   140012d87:	push   rdi
   140012d88:	push   r12
   140012d8a:	push   r13
   140012d8c:	sub    rsp,0x20
   140012d90:	xor    esi,esi
   140012d92:	mov    rdi,r8
   140012d95:	mov    rbp,rdx
   140012d98:	or     r13d,0xffffffff
   140012d9c:	mov    r12,rcx
   140012d9f:	mov    r8,rdi
   140012da2:	mov    rdx,rbp
   140012da5:	mov    rcx,r12
   140012da8:	call   0x14001ea78
   140012dad:	mov    rbx,rax
   140012db0:	test   rax,rax
   140012db3:	jne    0x140012de4
   140012db5:	test   rdi,rdi
   140012db8:	je     0x140012de4
   140012dba:	cmp    DWORD PTR [rip+0x23554],eax        # 0x140036314
   140012dc0:	jbe    0x140012de4
   140012dc2:	mov    ecx,esi
   140012dc4:	call   QWORD PTR [rip+0x1458e]        # 0x140027358
   140012dca:	lea    r11d,[rsi+0x3e8]
   140012dd1:	cmp    r11d,DWORD PTR [rip+0x2353c]        # 0x140036314
   140012dd8:	mov    esi,r11d
   140012ddb:	cmova  esi,r13d
   140012ddf:	cmp    esi,r13d
   140012de2:	jne    0x140012d9f
   140012de4:	mov    rbp,QWORD PTR [rsp+0x48]
   140012de9:	mov    rsi,QWORD PTR [rsp+0x50]
   140012dee:	mov    rax,rbx
   140012df1:	mov    rbx,QWORD PTR [rsp+0x40]
   140012df6:	add    rsp,0x20
   140012dfa:	pop    r13
   140012dfc:	pop    r12
   140012dfe:	pop    rdi
   140012dff:	ret    
   140012e00:	int3   
   140012e01:	int3   
   140012e02:	int3   
   140012e03:	int3   
   140012e04:	int3   
   140012e05:	int3   
   140012e06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012e10:	mov    rax,rcx
   140012e13:	neg    rcx
   140012e16:	test   rax,0x7
   140012e1c:	je     0x140012e2d
   140012e1e:	xchg   ax,ax
   140012e20:	mov    dl,BYTE PTR [rax]
   140012e22:	inc    rax
   140012e25:	test   dl,dl
   140012e27:	je     0x140012e88
   140012e29:	test   al,0x7
   140012e2b:	jne    0x140012e20
   140012e2d:	movabs r8,0x7efefefefefefeff
   140012e37:	movabs r11,0x8101010101010100
   140012e41:	mov    rdx,QWORD PTR [rax]
   140012e44:	mov    r9,r8
   140012e47:	add    rax,0x8
   140012e4b:	add    r9,rdx
   140012e4e:	not    rdx
   140012e51:	xor    rdx,r9
   140012e54:	and    rdx,r11
   140012e57:	je     0x140012e41
   140012e59:	mov    rdx,QWORD PTR [rax-0x8]
   140012e5d:	test   dl,dl
   140012e5f:	je     0x140012eb2
   140012e61:	test   dh,dh
   140012e63:	je     0x140012eac
   140012e65:	shr    rdx,0x10
   140012e69:	test   dl,dl
   140012e6b:	je     0x140012ea6
   140012e6d:	test   dh,dh
   140012e6f:	je     0x140012ea0
   140012e71:	shr    rdx,0x10
   140012e75:	test   dl,dl
   140012e77:	je     0x140012e9a
   140012e79:	test   dh,dh
   140012e7b:	je     0x140012e94
   140012e7d:	shr    edx,0x10
   140012e80:	test   dl,dl
   140012e82:	je     0x140012e8e
   140012e84:	test   dh,dh
   140012e86:	jne    0x140012e41
   140012e88:	lea    rax,[rcx+rax*1-0x1]
   140012e8d:	ret    
   140012e8e:	lea    rax,[rcx+rax*1-0x2]
   140012e93:	ret    
   140012e94:	lea    rax,[rcx+rax*1-0x3]
   140012e99:	ret    
   140012e9a:	lea    rax,[rcx+rax*1-0x4]
   140012e9f:	ret    
   140012ea0:	lea    rax,[rcx+rax*1-0x5]
   140012ea5:	ret    
   140012ea6:	lea    rax,[rcx+rax*1-0x6]
   140012eab:	ret    
   140012eac:	lea    rax,[rcx+rax*1-0x7]
   140012eb1:	ret    
   140012eb2:	lea    rax,[rcx+rax*1-0x8]
   140012eb7:	ret    
   140012eb8:	xor    eax,eax
   140012eba:	test   rdx,rdx
   140012ebd:	je     0x140012ecf
   140012ebf:	cmp    BYTE PTR [rcx],0x0
   140012ec2:	je     0x140012ecf
   140012ec4:	inc    rax
   140012ec7:	inc    rcx
   140012eca:	cmp    rax,rdx
   140012ecd:	jb     0x140012ebf
   140012ecf:	repz ret 
   140012ed1:	int3   
   140012ed2:	int3   
   140012ed3:	int3   
   140012ed4:	mov    QWORD PTR [rsp+0x8],rbx
   140012ed9:	mov    QWORD PTR [rsp+0x10],rsi
   140012ede:	push   rdi
   140012edf:	sub    rsp,0x50
   140012ee3:	mov    rbx,rcx
   140012ee6:	mov    edi,edx
   140012ee8:	lea    rcx,[rsp+0x30]
   140012eed:	mov    rdx,r8
   140012ef0:	call   0x1400094b4
   140012ef5:	xor    esi,esi
   140012ef7:	cmp    rbx,rsi
   140012efa:	jne    0x140012f40
   140012efc:	call   0x14000f574
   140012f01:	xor    r9d,r9d
   140012f04:	xor    r8d,r8d
   140012f07:	xor    edx,edx
   140012f09:	xor    ecx,ecx
   140012f0b:	mov    QWORD PTR [rsp+0x20],rsi
   140012f10:	mov    DWORD PTR [rax],0x16
   140012f16:	call   0x14000e4d8
   140012f1b:	cmp    BYTE PTR [rsp+0x48],sil
   140012f20:	je     0x140012f2e
   140012f22:	mov    rax,QWORD PTR [rsp+0x40]
   140012f27:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140012f2e:	xor    eax,eax
   140012f30:	mov    rbx,QWORD PTR [rsp+0x60]
   140012f35:	mov    rsi,QWORD PTR [rsp+0x68]
   140012f3a:	add    rsp,0x50
   140012f3e:	pop    rdi
   140012f3f:	ret    
   140012f40:	mov    rdx,QWORD PTR [rsp+0x38]
   140012f45:	cmp    DWORD PTR [rdx+0x8],esi
   140012f48:	jne    0x140012f69
   140012f4a:	mov    edx,edi
   140012f4c:	mov    rcx,rbx
   140012f4f:	call   0x1400089d0
   140012f54:	cmp    BYTE PTR [rsp+0x48],sil
   140012f59:	je     0x140012f30
   140012f5b:	mov    rcx,QWORD PTR [rsp+0x40]
   140012f60:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140012f67:	jmp    0x140012f30
   140012f69:	movzx  ecx,BYTE PTR [rbx]
   140012f6c:	cmp    cx,si
   140012f6f:	je     0x140012fa4
   140012f71:	movzx  eax,cl
   140012f74:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140012f79:	je     0x140012f98
   140012f7b:	inc    rbx
   140012f7e:	cmp    BYTE PTR [rbx],sil
   140012f81:	je     0x140012f1b
   140012f83:	movzx  eax,BYTE PTR [rbx]
   140012f86:	movzx  ecx,cx
   140012f89:	shl    ecx,0x8
   140012f8c:	or     ecx,eax
   140012f8e:	cmp    edi,ecx
   140012f90:	jne    0x140012f9f
   140012f92:	lea    rax,[rbx-0x1]
   140012f96:	jmp    0x140012f54
   140012f98:	movzx  eax,cx
   140012f9b:	cmp    edi,eax
   140012f9d:	je     0x140012fa4
   140012f9f:	inc    rbx
   140012fa2:	jmp    0x140012f69
   140012fa4:	movzx  eax,cx
   140012fa7:	cmp    edi,eax
   140012fa9:	jne    0x140012f1b
   140012faf:	cmp    BYTE PTR [rsp+0x48],sil
   140012fb4:	je     0x140012fc2
   140012fb6:	mov    rax,QWORD PTR [rsp+0x40]
   140012fbb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140012fc2:	mov    rax,rbx
   140012fc5:	jmp    0x140012f30
   140012fca:	int3   
   140012fcb:	int3   
   140012fcc:	xor    r8d,r8d
   140012fcf:	jmp    0x140012ed4
   140012fd4:	mov    rax,rsp
   140012fd7:	mov    QWORD PTR [rax+0x8],rbx
   140012fdb:	mov    QWORD PTR [rax+0x18],rbp
   140012fdf:	mov    QWORD PTR [rax+0x20],rsi
   140012fe3:	mov    QWORD PTR [rax+0x10],rdx
   140012fe7:	push   rdi
   140012fe8:	push   r12
   140012fea:	push   r13
   140012fec:	push   r14
   140012fee:	push   r15
   140012ff0:	sub    rsp,0x40
   140012ff4:	mov    r15,QWORD PTR [r9+0x8]
   140012ff8:	mov    r12,QWORD PTR [r9]
   140012ffb:	mov    rsi,QWORD PTR [r9+0x38]
   140012fff:	sub    r12,r15
   140013002:	test   BYTE PTR [rcx+0x4],0x66
   140013006:	mov    r14,r9
   140013009:	mov    rbp,rdx
   14001300c:	mov    r13,rcx
   14001300f:	jne    0x1400130f1
   140013015:	xor    edi,edi
   140013017:	mov    QWORD PTR [rax-0x38],rcx
   14001301b:	mov    QWORD PTR [rax-0x30],r8
   14001301f:	cmp    DWORD PTR [rsi],edi
   140013021:	jbe    0x140013152
   140013027:	lea    rbx,[rsi+0xc]
   14001302b:	mov    eax,DWORD PTR [rbx-0x8]
   14001302e:	cmp    r12,rax
   140013031:	jb     0x1400130de
   140013037:	mov    eax,DWORD PTR [rbx-0x4]
   14001303a:	cmp    r12,rax
   14001303d:	jae    0x1400130de
   140013043:	cmp    DWORD PTR [rbx+0x4],0x0
   140013047:	je     0x1400130de
   14001304d:	cmp    DWORD PTR [rbx],0x1
   140013050:	je     0x14001306b
   140013052:	mov    eax,DWORD PTR [rbx]
   140013054:	lea    rcx,[rsp+0x30]
   140013059:	mov    rdx,rbp
   14001305c:	add    rax,r15
   14001305f:	call   rax
   140013061:	test   eax,eax
   140013063:	js     0x1400130ed
   140013069:	jle    0x1400130de
   14001306b:	cmp    DWORD PTR [r13+0x0],0xe06d7363
   140013073:	jne    0x14001309d
   140013075:	cmp    QWORD PTR [rip+0x24ee3],0x0        # 0x140037f60
   14001307d:	je     0x14001309d
   14001307f:	lea    rcx,[rip+0x24eda]        # 0x140037f60
   140013086:	call   0x140019830
   14001308b:	test   eax,eax
   14001308d:	je     0x14001309d
   14001308f:	mov    edx,0x1
   140013094:	mov    rcx,r13
   140013097:	call   QWORD PTR [rip+0x24ec3]        # 0x140037f60
   14001309d:	mov    ecx,DWORD PTR [rbx+0x4]
   1400130a0:	mov    r8d,0x1
   1400130a6:	mov    rdx,rbp
   1400130a9:	add    rcx,r15
   1400130ac:	call   0x140018e00
   1400130b1:	mov    rax,QWORD PTR [r14+0x40]
   1400130b5:	mov    edx,DWORD PTR [rbx+0x4]
   1400130b8:	movsxd r9,DWORD PTR [r13+0x0]
   1400130bc:	mov    QWORD PTR [rsp+0x28],rax
   1400130c1:	mov    rax,QWORD PTR [r14+0x28]
   1400130c5:	add    rdx,r15
   1400130c8:	mov    r8,r13
   1400130cb:	mov    rcx,rbp
   1400130ce:	mov    QWORD PTR [rsp+0x20],rax
   1400130d3:	call   QWORD PTR [rip+0x14207]        # 0x1400272e0
   1400130d9:	call   0x140018e30
   1400130de:	inc    edi
   1400130e0:	add    rbx,0x10
   1400130e4:	cmp    edi,DWORD PTR [rsi]
   1400130e6:	jae    0x140013152
   1400130e8:	jmp    0x14001302b
   1400130ed:	xor    eax,eax
   1400130ef:	jmp    0x140013157
   1400130f1:	mov    rdi,QWORD PTR [r9+0x20]
   1400130f5:	xor    ebp,ebp
   1400130f7:	sub    rdi,r15
   1400130fa:	cmp    DWORD PTR [rsi],ebp
   1400130fc:	jbe    0x140013152
   1400130fe:	lea    rbx,[rsi+0x10]
   140013102:	mov    ecx,DWORD PTR [rbx-0xc]
   140013105:	cmp    r12,rcx
   140013108:	jb     0x140013148
   14001310a:	mov    eax,DWORD PTR [rbx-0x8]
   14001310d:	cmp    r12,rax
   140013110:	jae    0x140013148
   140013112:	cmp    rdi,rcx
   140013115:	jb     0x140013123
   140013117:	cmp    rdi,rax
   14001311a:	jae    0x140013123
   14001311c:	test   BYTE PTR [r13+0x4],0x20
   140013121:	jne    0x140013152
   140013123:	cmp    DWORD PTR [rbx],0x0
   140013126:	je     0x140013131
   140013128:	mov    eax,DWORD PTR [rbx]
   14001312a:	cmp    rdi,rax
   14001312d:	je     0x140013152
   14001312f:	jmp    0x140013148
   140013131:	mov    rdx,QWORD PTR [rsp+0x78]
   140013136:	add    rax,r15
   140013139:	mov    cl,0x1
   14001313b:	mov    QWORD PTR [r14],rax
   14001313e:	mov    r8d,DWORD PTR [rbx-0x4]
   140013142:	add    r8,r15
   140013145:	call   r8
   140013148:	inc    ebp
   14001314a:	add    rbx,0x10
   14001314e:	cmp    ebp,DWORD PTR [rsi]
   140013150:	jb     0x140013102
   140013152:	mov    eax,0x1
   140013157:	lea    r11,[rsp+0x40]
   14001315c:	mov    rbx,QWORD PTR [r11+0x30]
   140013160:	mov    rbp,QWORD PTR [r11+0x40]
   140013164:	mov    rsi,QWORD PTR [r11+0x48]
   140013168:	mov    rsp,r11
   14001316b:	pop    r15
   14001316d:	pop    r14
   14001316f:	pop    r13
   140013171:	pop    r12
   140013173:	pop    rdi
   140013174:	ret    
   140013175:	int3   
   140013176:	int3   
   140013177:	int3   
   140013178:	mov    QWORD PTR [rsp+0x8],rbx
   14001317d:	mov    QWORD PTR [rsp+0x10],rsi
   140013182:	mov    QWORD PTR [rsp+0x18],rdi
   140013187:	push   r12
   140013189:	sub    rsp,0x20
   14001318d:	lea    r12,[rip+0x220ec]        # 0x140035280
   140013194:	xor    esi,esi
   140013196:	xor    edi,edi
   140013198:	mov    rbx,r12
   14001319b:	cmp    DWORD PTR [rbx+0x8],0x1
   14001319f:	jne    0x1400131c6
   1400131a1:	movsxd rax,esi
   1400131a4:	mov    edx,0xfa0
   1400131a9:	inc    esi
   1400131ab:	lea    rcx,[rax+rax*4]
   1400131af:	lea    rax,[rip+0x2316a]        # 0x140036320
   1400131b6:	lea    rcx,[rax+rcx*8]
   1400131ba:	mov    QWORD PTR [rbx],rcx
   1400131bd:	call   0x14001a494
   1400131c2:	test   eax,eax
   1400131c4:	je     0x1400131f3
   1400131c6:	lea    rax,[rip+0x222f3]        # 0x1400354c0
   1400131cd:	add    rbx,0x10
   1400131d1:	inc    edi
   1400131d3:	cmp    rbx,rax
   1400131d6:	jl     0x14001319b
   1400131d8:	mov    eax,0x1
   1400131dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400131e2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400131e7:	mov    rdi,QWORD PTR [rsp+0x40]
   1400131ec:	add    rsp,0x20
   1400131f0:	pop    r12
   1400131f2:	ret    
   1400131f3:	movsxd rax,edi
   1400131f6:	add    rax,rax
   1400131f9:	and    QWORD PTR [r12+rax*8],0x0
   1400131fe:	xor    eax,eax
   140013200:	jmp    0x1400131dd
   140013202:	int3   
   140013203:	int3   
   140013204:	mov    QWORD PTR [rsp+0x8],rbx
   140013209:	mov    QWORD PTR [rsp+0x10],rbp
   14001320e:	mov    QWORD PTR [rsp+0x18],rsi
   140013213:	push   rdi
   140013214:	sub    rsp,0x20
   140013218:	lea    rbx,[rip+0x22061]        # 0x140035280
   14001321f:	lea    rbp,[rip+0x2229a]        # 0x1400354c0
   140013226:	mov    rdi,rbx
   140013229:	mov    rsi,QWORD PTR [rdi]
   14001322c:	test   rsi,rsi
   14001322f:	je     0x14001324c
   140013231:	cmp    DWORD PTR [rdi+0x8],0x1
   140013235:	je     0x14001324c
   140013237:	mov    rcx,rsi
   14001323a:	call   QWORD PTR [rip+0x14090]        # 0x1400272d0
   140013240:	mov    rcx,rsi
   140013243:	call   0x1400098ac
   140013248:	and    QWORD PTR [rdi],0x0
   14001324c:	add    rdi,0x10
   140013250:	cmp    rdi,rbp
   140013253:	jl     0x140013229
   140013255:	mov    rcx,QWORD PTR [rbx]
   140013258:	test   rcx,rcx
   14001325b:	je     0x140013269
   14001325d:	cmp    DWORD PTR [rbx+0x8],0x1
   140013261:	jne    0x140013269
   140013263:	call   QWORD PTR [rip+0x14067]        # 0x1400272d0
   140013269:	add    rbx,0x10
   14001326d:	cmp    rbx,rbp
   140013270:	jl     0x140013255
   140013272:	mov    rbx,QWORD PTR [rsp+0x30]
   140013277:	mov    rbp,QWORD PTR [rsp+0x38]
   14001327c:	mov    rsi,QWORD PTR [rsp+0x40]
   140013281:	add    rsp,0x20
   140013285:	pop    rdi
   140013286:	ret    
   140013287:	int3   
   140013288:	movsxd rcx,ecx
   14001328b:	lea    rax,[rip+0x21fee]        # 0x140035280
   140013292:	add    rcx,rcx
   140013295:	mov    rcx,QWORD PTR [rax+rcx*8]
   140013299:	rex.W jmp QWORD PTR [rip+0x14090]        # 0x140027330
   1400132a0:	sub    rsp,0x28
   1400132a4:	mov    rdx,rcx
   1400132a7:	xor    ecx,ecx
   1400132a9:	call   QWORD PTR [rip+0x14019]        # 0x1400272c8
   1400132af:	mov    ecx,0xff
   1400132b4:	add    rsp,0x28
   1400132b8:	jmp    0x14000db88
   1400132bd:	int3   
   1400132be:	int3   
   1400132bf:	int3   
   1400132c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400132c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400132ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400132cf:	push   r13
   1400132d1:	sub    rsp,0x20
   1400132d5:	movsxd rbx,ecx
   1400132d8:	mov    esi,0x1
   1400132dd:	cmp    QWORD PTR [rip+0x22d03],0x0        # 0x140035fe8
   1400132e5:	jne    0x1400132fe
   1400132e7:	call   0x140011f14
   1400132ec:	lea    ecx,[rsi+0x1d]
   1400132ef:	call   0x140011cc0
   1400132f4:	mov    ecx,0xff
   1400132f9:	call   0x14000db88
   1400132fe:	mov    rdi,rbx
   140013301:	add    rdi,rdi
   140013304:	lea    r13,[rip+0x21f75]        # 0x140035280
   14001330b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140013311:	je     0x140013317
   140013313:	mov    eax,esi
   140013315:	jmp    0x140013392
   140013317:	mov    ecx,0x28
   14001331c:	call   0x140012c00
   140013321:	mov    rbx,rax
   140013324:	test   rax,rax
   140013327:	jne    0x140013338
   140013329:	call   0x14000f574
   14001332e:	mov    DWORD PTR [rax],0xc
   140013334:	xor    eax,eax
   140013336:	jmp    0x140013392
   140013338:	mov    ecx,0xa
   14001333d:	call   0x1400133a8
   140013342:	nop
   140013343:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140013349:	jne    0x14001337a
   14001334b:	mov    edx,0xfa0
   140013350:	mov    rcx,rbx
   140013353:	call   0x14001a494
   140013358:	test   eax,eax
   14001335a:	jne    0x140013373
   14001335c:	mov    rcx,rbx
   14001335f:	call   0x1400098ac
   140013364:	call   0x14000f574
   140013369:	mov    DWORD PTR [rax],0xc
   14001336f:	xor    esi,esi
   140013371:	jmp    0x140013383
   140013373:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140013378:	jmp    0x140013383
   14001337a:	mov    rcx,rbx
   14001337d:	call   0x1400098ac
   140013382:	nop
   140013383:	mov    rcx,QWORD PTR [rip+0x21f96]        # 0x140035320
   14001338a:	call   QWORD PTR [rip+0x13fa0]        # 0x140027330
   140013390:	mov    eax,esi
   140013392:	mov    rbx,QWORD PTR [rsp+0x30]
   140013397:	mov    rsi,QWORD PTR [rsp+0x38]
   14001339c:	mov    rdi,QWORD PTR [rsp+0x40]
   1400133a1:	add    rsp,0x20
   1400133a5:	pop    r13
   1400133a7:	ret    
   1400133a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400133ad:	push   rdi
   1400133ae:	sub    rsp,0x20
   1400133b2:	movsxd rbx,ecx
   1400133b5:	lea    rdi,[rip+0x21ec4]        # 0x140035280
   1400133bc:	add    rbx,rbx
   1400133bf:	cmp    QWORD PTR [rdi+rbx*8],0x0
   1400133c4:	jne    0x1400133d7
   1400133c6:	call   0x1400132c0
   1400133cb:	test   eax,eax
   1400133cd:	jne    0x1400133d7
   1400133cf:	lea    ecx,[rax+0x11]
   1400133d2:	call   0x14000db1c
   1400133d7:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400133db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400133e0:	add    rsp,0x20
   1400133e4:	pop    rdi
   1400133e5:	rex.W jmp QWORD PTR [rip+0x13f3c]        # 0x140027328
   1400133ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400133f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400133f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400133fb:	push   rdi
   1400133fc:	sub    rsp,0x20
   140013400:	mov    rbx,rdx
   140013403:	test   ecx,ecx
   140013405:	js     0x140013470
   140013407:	cmp    ecx,DWORD PTR [rip+0x2493f]        # 0x140037d4c
   14001340d:	jae    0x140013470
   14001340f:	movsxd rdi,ecx
   140013412:	lea    rbp,[rip+0x24947]        # 0x140037d60
   140013419:	mov    rsi,rdi
   14001341c:	and    edi,0x1f
   14001341f:	sar    rsi,0x5
   140013423:	imul   rdi,rdi,0x58
   140013427:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14001342c:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   140013431:	jne    0x140013470
   140013433:	cmp    DWORD PTR [rip+0x213ae],0x1        # 0x1400347e8
   14001343a:	jne    0x140013463
   14001343c:	test   ecx,ecx
   14001343e:	je     0x140013458
   140013440:	sub    ecx,0x1
   140013443:	je     0x140013451
   140013445:	cmp    ecx,0x1
   140013448:	jne    0x140013463
   14001344a:	mov    ecx,0xfffffff4
   14001344f:	jmp    0x14001345d
   140013451:	mov    ecx,0xfffffff5
   140013456:	jmp    0x14001345d
   140013458:	mov    ecx,0xfffffff6
   14001345d:	call   QWORD PTR [rip+0x13c55]        # 0x1400270b8
   140013463:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   140013468:	mov    QWORD PTR [rdi+rax*1],rbx
   14001346c:	xor    eax,eax
   14001346e:	jmp    0x140013486
   140013470:	call   0x14000f574
   140013475:	mov    DWORD PTR [rax],0x9
   14001347b:	call   0x14000f594
   140013480:	and    DWORD PTR [rax],0x0
   140013483:	or     eax,0xffffffff
   140013486:	mov    rbx,QWORD PTR [rsp+0x30]
   14001348b:	mov    rbp,QWORD PTR [rsp+0x38]
   140013490:	mov    rsi,QWORD PTR [rsp+0x40]
   140013495:	add    rsp,0x20
   140013499:	pop    rdi
   14001349a:	ret    
   14001349b:	int3   
   14001349c:	mov    QWORD PTR [rsp+0x8],rbx
   1400134a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400134a6:	push   rdi
   1400134a7:	sub    rsp,0x20
   1400134ab:	test   ecx,ecx
   1400134ad:	js     0x140013522
   1400134af:	cmp    ecx,DWORD PTR [rip+0x24897]        # 0x140037d4c
   1400134b5:	jae    0x140013522
   1400134b7:	movsxd rbx,ecx
   1400134ba:	lea    rbp,[rip+0x2489f]        # 0x140037d60
   1400134c1:	mov    rdi,rbx
   1400134c4:	and    ebx,0x1f
   1400134c7:	sar    rdi,0x5
   1400134cb:	imul   rbx,rbx,0x58
   1400134cf:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400134d4:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400134d9:	je     0x140013522
   1400134db:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400134e0:	je     0x140013522
   1400134e2:	cmp    DWORD PTR [rip+0x212ff],0x1        # 0x1400347e8
   1400134e9:	jne    0x140013514
   1400134eb:	test   ecx,ecx
   1400134ed:	je     0x140013507
   1400134ef:	sub    ecx,0x1
   1400134f2:	je     0x140013500
   1400134f4:	cmp    ecx,0x1
   1400134f7:	jne    0x140013514
   1400134f9:	mov    ecx,0xfffffff4
   1400134fe:	jmp    0x14001350c
   140013500:	mov    ecx,0xfffffff5
   140013505:	jmp    0x14001350c
   140013507:	mov    ecx,0xfffffff6
   14001350c:	xor    edx,edx
   14001350e:	call   QWORD PTR [rip+0x13ba4]        # 0x1400270b8
   140013514:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140013519:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14001351e:	xor    eax,eax
   140013520:	jmp    0x140013538
   140013522:	call   0x14000f574
   140013527:	mov    DWORD PTR [rax],0x9
   14001352d:	call   0x14000f594
   140013532:	and    DWORD PTR [rax],0x0
   140013535:	or     eax,0xffffffff
   140013538:	mov    rbx,QWORD PTR [rsp+0x30]
   14001353d:	mov    rbp,QWORD PTR [rsp+0x38]
   140013542:	add    rsp,0x20
   140013546:	pop    rdi
   140013547:	ret    
   140013548:	sub    rsp,0x38
   14001354c:	cmp    ecx,0xfffffffe
   14001354f:	jne    0x140013566
   140013551:	call   0x14000f594
   140013556:	and    DWORD PTR [rax],0x0
   140013559:	call   0x14000f574
   14001355e:	mov    DWORD PTR [rax],0x9
   140013564:	jmp    0x1400135c3
   140013566:	test   ecx,ecx
   140013568:	js     0x14001359b
   14001356a:	cmp    ecx,DWORD PTR [rip+0x247dc]        # 0x140037d4c
   140013570:	jae    0x14001359b
   140013572:	movsxd rdx,ecx
   140013575:	lea    rcx,[rip+0x247e4]        # 0x140037d60
   14001357c:	mov    rax,rdx
   14001357f:	and    edx,0x1f
   140013582:	sar    rax,0x5
   140013586:	imul   rdx,rdx,0x58
   14001358a:	mov    rax,QWORD PTR [rcx+rax*8]
   14001358e:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140013593:	je     0x14001359b
   140013595:	mov    rax,QWORD PTR [rax+rdx*1]
   140013599:	jmp    0x1400135c7
   14001359b:	call   0x14000f594
   1400135a0:	and    DWORD PTR [rax],0x0
   1400135a3:	call   0x14000f574
   1400135a8:	and    QWORD PTR [rsp+0x20],0x0
   1400135ae:	xor    r9d,r9d
   1400135b1:	xor    r8d,r8d
   1400135b4:	xor    edx,edx
   1400135b6:	xor    ecx,ecx
   1400135b8:	mov    DWORD PTR [rax],0x9
   1400135be:	call   0x14000e4d8
   1400135c3:	or     rax,0xffffffffffffffff
   1400135c7:	add    rsp,0x38
   1400135cb:	ret    
   1400135cc:	mov    rax,rsp
   1400135cf:	mov    QWORD PTR [rax+0x8],rbx
   1400135d3:	mov    QWORD PTR [rax+0x10],rsi
   1400135d7:	mov    QWORD PTR [rax+0x18],rdi
   1400135db:	mov    QWORD PTR [rax+0x20],r12
   1400135df:	push   r13
   1400135e1:	sub    rsp,0x20
   1400135e5:	movsxd rbx,ecx
   1400135e8:	mov    r12,rbx
   1400135eb:	sar    r12,0x5
   1400135ef:	lea    r13,[rip+0x2476a]        # 0x140037d60
   1400135f6:	and    ebx,0x1f
   1400135f9:	imul   rbx,rbx,0x58
   1400135fd:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   140013602:	mov    edi,0x1
   140013607:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14001360c:	jne    0x140013641
   14001360e:	lea    ecx,[rdi+0x9]
   140013611:	call   0x1400133a8
   140013616:	nop
   140013617:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14001361c:	jne    0x140013637
   14001361e:	lea    rcx,[rbx+rsi*1+0x10]
   140013623:	mov    edx,0xfa0
   140013628:	call   0x14001a494
   14001362d:	neg    eax
   14001362f:	sbb    edx,edx
   140013631:	and    edi,edx
   140013633:	inc    DWORD PTR [rbx+rsi*1+0xc]
   140013637:	mov    ecx,0xa
   14001363c:	call   0x140013288
   140013641:	test   edi,edi
   140013643:	je     0x140013655
   140013645:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14001364a:	lea    rcx,[rcx+rbx*1+0x10]
   14001364f:	call   QWORD PTR [rip+0x13cd3]        # 0x140027328
   140013655:	mov    eax,edi
   140013657:	mov    rbx,QWORD PTR [rsp+0x30]
   14001365c:	mov    rsi,QWORD PTR [rsp+0x38]
   140013661:	mov    rdi,QWORD PTR [rsp+0x40]
   140013666:	mov    r12,QWORD PTR [rsp+0x48]
   14001366b:	add    rsp,0x20
   14001366f:	pop    r13
   140013671:	ret    
   140013672:	int3   
   140013673:	int3   
   140013674:	movsxd rdx,ecx
   140013677:	lea    rcx,[rip+0x246e2]        # 0x140037d60
   14001367e:	mov    rax,rdx
   140013681:	and    edx,0x1f
   140013684:	sar    rax,0x5
   140013688:	imul   rdx,rdx,0x58
   14001368c:	mov    rax,QWORD PTR [rcx+rax*8]
   140013690:	lea    rcx,[rax+rdx*1+0x10]
   140013695:	rex.W jmp QWORD PTR [rip+0x13c94]        # 0x140027330
   14001369c:	mov    QWORD PTR [rsp+0x8],rbx
   1400136a1:	mov    QWORD PTR [rsp+0x10],rdi
   1400136a6:	mov    QWORD PTR [rsp+0x18],r12
   1400136ab:	push   r13
   1400136ad:	push   r14
   1400136af:	push   r15
   1400136b1:	sub    rsp,0x40
   1400136b5:	or     r12,0xffffffffffffffff
   1400136b9:	mov    r13d,r12d
   1400136bc:	xor    r14d,r14d
   1400136bf:	lea    ecx,[r12+0xc]
   1400136c4:	call   0x1400132c0
   1400136c9:	test   eax,eax
   1400136cb:	jne    0x1400136d5
   1400136cd:	mov    eax,r12d
   1400136d0:	jmp    0x14001389e
   1400136d5:	mov    ecx,0xb
   1400136da:	call   0x1400133a8
   1400136df:	nop
   1400136e0:	xor    edi,edi
   1400136e2:	mov    DWORD PTR [rsp+0x24],edi
   1400136e6:	lea    rax,[rip+0x24673]        # 0x140037d60
   1400136ed:	cmp    edi,0x40
   1400136f0:	jge    0x140013891
   1400136f6:	movsxd r15,edi
   1400136f9:	mov    rbx,QWORD PTR [rax+r15*8]
   1400136fd:	test   rbx,rbx
   140013700:	je     0x140013806
   140013706:	mov    QWORD PTR [rsp+0x30],rbx
   14001370b:	mov    rax,QWORD PTR [rax+r15*8]
   14001370f:	add    rax,0xb00
   140013715:	cmp    rbx,rax
   140013718:	jae    0x1400137eb
   14001371e:	test   BYTE PTR [rbx+0x8],0x1
   140013722:	jne    0x1400137d2
   140013728:	cmp    DWORD PTR [rbx+0xc],0x0
   14001372c:	jne    0x140013769
   14001372e:	mov    ecx,0xa
   140013733:	call   0x1400133a8
   140013738:	nop
   140013739:	cmp    DWORD PTR [rbx+0xc],0x0
   14001373d:	jne    0x14001375f
   14001373f:	lea    rcx,[rbx+0x10]
   140013743:	mov    edx,0xfa0
   140013748:	call   0x14001a494
   14001374d:	test   eax,eax
   14001374f:	jne    0x14001375c
   140013751:	lea    r14d,[rax+0x1]
   140013755:	mov    DWORD PTR [rsp+0x28],r14d
   14001375a:	jmp    0x14001375f
   14001375c:	inc    DWORD PTR [rbx+0xc]
   14001375f:	mov    ecx,0xa
   140013764:	call   0x140013288
   140013769:	test   r14d,r14d
   14001376c:	jne    0x14001378e
   14001376e:	lea    rcx,[rbx+0x10]
   140013772:	call   QWORD PTR [rip+0x13bb0]        # 0x140027328
   140013778:	test   BYTE PTR [rbx+0x8],0x1
   14001377c:	je     0x14001378a
   14001377e:	lea    rcx,[rbx+0x10]
   140013782:	call   QWORD PTR [rip+0x13ba8]        # 0x140027330
   140013788:	jmp    0x1400137d2
   14001378a:	or     r12,0xffffffffffffffff
   14001378e:	test   r14d,r14d
   140013791:	jne    0x1400137d2
   140013793:	mov    BYTE PTR [rbx+0x8],0x1
   140013797:	mov    QWORD PTR [rbx],r12
   14001379a:	lea    r8,[rip+0x245bf]        # 0x140037d60
   1400137a1:	sub    rbx,QWORD PTR [r8+r15*8]
   1400137a5:	movabs rax,0x2e8ba2e8ba2e8ba3
   1400137af:	imul   rbx
   1400137b2:	mov    r13,rdx
   1400137b5:	sar    r13,0x4
   1400137b9:	mov    rax,r13
   1400137bc:	shr    rax,0x3f
   1400137c0:	add    r13,rax
   1400137c3:	mov    eax,edi
   1400137c5:	shl    eax,0x5
   1400137c8:	add    r13d,eax
   1400137cb:	mov    DWORD PTR [rsp+0x20],r13d
   1400137d0:	jmp    0x1400137eb
   1400137d2:	add    rbx,0x58
   1400137d6:	mov    QWORD PTR [rsp+0x30],rbx
   1400137db:	or     r12,0xffffffffffffffff
   1400137df:	lea    rax,[rip+0x2457a]        # 0x140037d60
   1400137e6:	jmp    0x14001370b
   1400137eb:	cmp    r13d,r12d
   1400137ee:	jne    0x140013891
   1400137f4:	inc    edi
   1400137f6:	mov    DWORD PTR [rsp+0x24],edi
   1400137fa:	lea    rax,[rip+0x2455f]        # 0x140037d60
   140013801:	jmp    0x1400136ed
   140013806:	mov    edx,0x58
   14001380b:	lea    ecx,[rdx-0x38]
   14001380e:	call   0x140012c6c
   140013813:	mov    QWORD PTR [rsp+0x30],rax
   140013818:	test   rax,rax
   14001381b:	je     0x140013891
   14001381d:	movsxd rdx,edi
   140013820:	lea    r8,[rip+0x24539]        # 0x140037d60
   140013827:	mov    QWORD PTR [r8+rdx*8],rax
   14001382b:	add    DWORD PTR [rip+0x2451a],0x20        # 0x140037d4c
   140013832:	mov    rcx,QWORD PTR [r8+rdx*8]
   140013836:	add    rcx,0xb00
   14001383d:	cmp    rax,rcx
   140013840:	jae    0x14001385c
   140013842:	mov    BYTE PTR [rax+0x8],0x0
   140013846:	mov    QWORD PTR [rax],r12
   140013849:	mov    BYTE PTR [rax+0x9],0xa
   14001384d:	and    DWORD PTR [rax+0xc],0x0
   140013851:	add    rax,0x58
   140013855:	mov    QWORD PTR [rsp+0x30],rax
   14001385a:	jmp    0x140013832
   14001385c:	shl    edi,0x5
   14001385f:	mov    DWORD PTR [rsp+0x20],edi
   140013863:	movsxd rcx,edi
   140013866:	mov    rax,rcx
   140013869:	sar    rax,0x5
   14001386d:	and    ecx,0x1f
   140013870:	imul   rcx,rcx,0x58
   140013874:	mov    rax,QWORD PTR [r8+rax*8]
   140013878:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14001387d:	mov    ecx,edi
   14001387f:	call   0x1400135cc
   140013884:	test   eax,eax
   140013886:	cmove  edi,r12d
   14001388a:	mov    r13d,edi
   14001388d:	mov    DWORD PTR [rsp+0x20],edi
   140013891:	mov    ecx,0xb
   140013896:	call   0x140013288
   14001389b:	mov    eax,r13d
   14001389e:	mov    rbx,QWORD PTR [rsp+0x60]
   1400138a3:	mov    rdi,QWORD PTR [rsp+0x68]
   1400138a8:	mov    r12,QWORD PTR [rsp+0x70]
   1400138ad:	add    rsp,0x40
   1400138b1:	pop    r15
   1400138b3:	pop    r14
   1400138b5:	pop    r13
   1400138b7:	ret    
   1400138b8:	mov    rax,rsp
   1400138bb:	mov    QWORD PTR [rax+0x8],rbx
   1400138bf:	mov    QWORD PTR [rax+0x18],rsi
   1400138c3:	mov    QWORD PTR [rax+0x20],rdi
   1400138c7:	push   r12
   1400138c9:	sub    rsp,0x30
   1400138cd:	mov    r12,rcx
   1400138d0:	xor    edi,edi
   1400138d2:	mov    DWORD PTR [rax-0x18],edi
   1400138d5:	test   dl,0x8
   1400138d8:	movzx  ebx,dil
   1400138dc:	lea    eax,[rdi+0x20]
   1400138df:	cmovne ebx,eax
   1400138e2:	bt     edx,0xe
   1400138e6:	jae    0x1400138eb
   1400138e8:	or     bl,0x80
   1400138eb:	test   dl,dl
   1400138ed:	jns    0x1400138f2
   1400138ef:	or     bl,0x10
   1400138f2:	call   QWORD PTR [rip+0x13a28]        # 0x140027320
   1400138f8:	cmp    eax,edi
   1400138fa:	jne    0x140013911
   1400138fc:	call   QWORD PTR [rip+0x1396e]        # 0x140027270
   140013902:	mov    ecx,eax
   140013904:	call   0x14000f5b4
   140013909:	or     eax,0xffffffff
   14001390c:	jmp    0x14001399a
   140013911:	cmp    eax,0x2
   140013914:	jne    0x14001391b
   140013916:	or     bl,0x40
   140013919:	jmp    0x140013923
   14001391b:	cmp    eax,0x3
   14001391e:	jne    0x140013923
   140013920:	or     bl,0x8
   140013923:	call   0x14001369c
   140013928:	movsxd rsi,eax
   14001392b:	mov    DWORD PTR [rsp+0x48],esi
   14001392f:	cmp    esi,0xffffffff
   140013932:	jne    0x14001394a
   140013934:	call   0x14000f574
   140013939:	mov    DWORD PTR [rax],0x18
   14001393f:	call   0x14000f594
   140013944:	mov    DWORD PTR [rax],edi
   140013946:	or     eax,esi
   140013948:	jmp    0x14001399a
   14001394a:	mov    rdx,r12
   14001394d:	mov    ecx,esi
   14001394f:	call   0x1400133ec
   140013954:	or     bl,0x1
   140013957:	mov    rdx,rsi
   14001395a:	mov    rcx,rsi
   14001395d:	sar    rcx,0x5
   140013961:	lea    r8,[rip+0x243f8]        # 0x140037d60
   140013968:	and    edx,0x1f
   14001396b:	imul   rdx,rdx,0x58
   14001396f:	mov    rax,QWORD PTR [r8+rcx*8]
   140013973:	mov    BYTE PTR [rax+rdx*1+0x8],bl
   140013977:	mov    rax,QWORD PTR [r8+rcx*8]
   14001397b:	and    BYTE PTR [rax+rdx*1+0x38],0x80
   140013980:	mov    rax,QWORD PTR [r8+rcx*8]
   140013984:	and    BYTE PTR [rax+rdx*1+0x38],0x7f
   140013989:	mov    DWORD PTR [rsp+0x20],0x1
   140013991:	mov    ecx,esi
   140013993:	call   0x140013674
   140013998:	mov    eax,esi
   14001399a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001399f:	mov    rsi,QWORD PTR [rsp+0x50]
   1400139a4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400139a9:	add    rsp,0x30
   1400139ad:	pop    r12
   1400139af:	ret    
   1400139b0:	mov    rax,rsp
   1400139b3:	mov    QWORD PTR [rax+0x10],rbx
   1400139b7:	mov    QWORD PTR [rax+0x18],rbp
   1400139bb:	push   rsi
   1400139bc:	push   rdi
   1400139bd:	push   r12
   1400139bf:	push   r13
   1400139c1:	push   r14
   1400139c3:	sub    rsp,0x60
   1400139c7:	and    DWORD PTR [rax-0x58],0x0
   1400139cb:	and    DWORD PTR [rax-0x54],0x0
   1400139cf:	and    DWORD PTR [rax+0x8],0x0
   1400139d3:	lea    ebx,[rcx-0x76c]
   1400139d9:	movsxd r14,r9d
   1400139dc:	movsxd rsi,edx
   1400139df:	cmp    ebx,0x46
   1400139e2:	jl     0x140013c42
   1400139e8:	cmp    ebx,0x44c
   1400139ee:	jg     0x140013c42
   1400139f4:	lea    eax,[rsi-0x1]
   1400139f7:	cmp    eax,0xb
   1400139fa:	ja     0x140013c42
   140013a00:	cmp    r14d,0x17
   140013a04:	ja     0x140013c42
   140013a0a:	movsxd r12,DWORD PTR [rsp+0xb0]
   140013a12:	cmp    r12d,0x3b
   140013a16:	ja     0x140013c42
   140013a1c:	movsxd r13,DWORD PTR [rsp+0xb8]
   140013a24:	cmp    r13d,0x3b
   140013a28:	ja     0x140013c42
   140013a2e:	cmp    r8d,0x1
   140013a32:	jl     0x140013c42
   140013a38:	lea    rcx,[rip+0x21b89]        # 0x1400355c8
   140013a3f:	mov    r10d,0x51eb851f
   140013a45:	mov    r9d,DWORD PTR [rcx+rsi*4-0x4]
   140013a4a:	mov    ecx,DWORD PTR [rcx+rsi*4]
   140013a4d:	sub    ecx,r9d
   140013a50:	cmp    ecx,r8d
   140013a53:	jge    0x140013ab0
   140013a55:	mov    eax,ebx
   140013a57:	cdq    
   140013a58:	and    edx,0x3
   140013a5b:	add    eax,edx
   140013a5d:	and    eax,0x3
   140013a60:	cmp    eax,edx
   140013a62:	jne    0x140013a7a
   140013a64:	mov    eax,r10d
   140013a67:	imul   ebx
   140013a69:	sar    edx,0x5
   140013a6c:	mov    eax,edx
   140013a6e:	shr    eax,0x1f
   140013a71:	add    edx,eax
   140013a73:	imul   edx,edx,0x64
   140013a76:	cmp    ebx,edx
   140013a78:	jne    0x140013a9d
   140013a7a:	lea    ecx,[rbx+0x76c]
   140013a80:	mov    eax,r10d
   140013a83:	imul   ecx
   140013a85:	sar    edx,0x7
   140013a88:	mov    eax,edx
   140013a8a:	shr    eax,0x1f
   140013a8d:	add    edx,eax
   140013a8f:	imul   edx,edx,0x190
   140013a95:	cmp    ecx,edx
   140013a97:	jne    0x140013c42
   140013a9d:	cmp    esi,0x2
   140013aa0:	jne    0x140013c42
   140013aa6:	cmp    r8d,0x1d
   140013aaa:	jg     0x140013c42
   140013ab0:	mov    eax,ebx
   140013ab2:	lea    ebp,[r9+r8*1]
   140013ab6:	cdq    
   140013ab7:	and    edx,0x3
   140013aba:	add    eax,edx
   140013abc:	and    eax,0x3
   140013abf:	cmp    eax,edx
   140013ac1:	jne    0x140013ad9
   140013ac3:	mov    eax,r10d
   140013ac6:	imul   ebx
   140013ac8:	sar    edx,0x5
   140013acb:	mov    eax,edx
   140013acd:	shr    eax,0x1f
   140013ad0:	add    edx,eax
   140013ad2:	imul   edx,edx,0x64
   140013ad5:	cmp    ebx,edx
   140013ad7:	jne    0x140013af8
   140013ad9:	lea    ecx,[rbx+0x76c]
   140013adf:	mov    eax,r10d
   140013ae2:	imul   ecx
   140013ae4:	sar    edx,0x7
   140013ae7:	mov    eax,edx
   140013ae9:	shr    eax,0x1f
   140013aec:	add    edx,eax
   140013aee:	imul   edx,edx,0x190
   140013af4:	cmp    ecx,edx
   140013af6:	jne    0x140013aff
   140013af8:	cmp    esi,0x2
   140013afb:	jle    0x140013aff
   140013afd:	inc    ebp
   140013aff:	lea    ecx,[rbx+0x12b]
   140013b05:	mov    eax,r10d
   140013b08:	lea    r8d,[rbx-0x1]
   140013b0c:	imul   ecx
   140013b0e:	mov    r9d,edx
   140013b11:	mov    eax,r10d
   140013b14:	sar    r9d,0x7
   140013b18:	mov    ecx,r9d
   140013b1b:	shr    ecx,0x1f
   140013b1e:	add    r9d,ecx
   140013b21:	imul   r8d
   140013b24:	sar    edx,0x5
   140013b27:	mov    eax,r8d
   140013b2a:	mov    ecx,edx
   140013b2c:	shr    ecx,0x1f
   140013b2f:	add    edx,ecx
   140013b31:	sub    r9d,edx
   140013b34:	cdq    
   140013b35:	and    edx,0x3
   140013b38:	add    eax,edx
   140013b3a:	sar    eax,0x2
   140013b3d:	lea    ecx,[r9+rax*1-0x11]
   140013b42:	movsxd rax,ebx
   140013b45:	sub    rax,0x46
   140013b49:	movsxd rdx,ecx
   140013b4c:	imul   rax,rax,0x16d
   140013b53:	add    rdx,rax
   140013b56:	movsxd rax,ebp
   140013b59:	add    rdx,rax
   140013b5c:	lea    rcx,[rdx+rdx*2]
   140013b60:	lea    rdi,[r14+rcx*8]
   140013b64:	imul   rdi,rdi,0x3c
   140013b68:	add    rdi,r12
   140013b6b:	imul   rdi,rdi,0x3c
   140013b6f:	add    rdi,r13
   140013b72:	call   0x14000efdc
   140013b77:	lea    rcx,[rsp+0x30]
   140013b7c:	call   0x14000f384
   140013b81:	test   eax,eax
   140013b83:	je     0x140013b9a
   140013b85:	and    QWORD PTR [rsp+0x20],0x0
   140013b8b:	xor    r9d,r9d
   140013b8e:	xor    r8d,r8d
   140013b91:	xor    edx,edx
   140013b93:	xor    ecx,ecx
   140013b95:	call   0x14000e350
   140013b9a:	lea    rcx,[rsp+0x34]
   140013b9f:	call   0x14000f3c4
   140013ba4:	test   eax,eax
   140013ba6:	je     0x140013bbd
   140013ba8:	and    QWORD PTR [rsp+0x20],0x0
   140013bae:	xor    r9d,r9d
   140013bb1:	xor    r8d,r8d
   140013bb4:	xor    edx,edx
   140013bb6:	xor    ecx,ecx
   140013bb8:	call   0x14000e350
   140013bbd:	lea    rcx,[rsp+0x90]
   140013bc5:	call   0x14000f404
   140013bca:	test   eax,eax
   140013bcc:	je     0x140013be3
   140013bce:	and    QWORD PTR [rsp+0x20],0x0
   140013bd4:	xor    r9d,r9d
   140013bd7:	xor    r8d,r8d
   140013bda:	xor    edx,edx
   140013bdc:	xor    ecx,ecx
   140013bde:	call   0x14000e350
   140013be3:	movsxd rax,DWORD PTR [rsp+0x90]
   140013beb:	mov    DWORD PTR [rsp+0x54],ebp
   140013bef:	mov    DWORD PTR [rsp+0x4c],ebx
   140013bf3:	add    rdi,rax
   140013bf6:	cmp    DWORD PTR [rsp+0xc0],0x1
   140013bfe:	lea    eax,[rsi-0x1]
   140013c01:	mov    DWORD PTR [rsp+0x40],r14d
   140013c06:	mov    DWORD PTR [rsp+0x3c],r12d
   140013c0b:	mov    DWORD PTR [rsp+0x38],r13d
   140013c10:	mov    DWORD PTR [rsp+0x48],eax
   140013c14:	je     0x140013c35
   140013c16:	cmp    DWORD PTR [rsp+0xc0],0xffffffff
   140013c1e:	jne    0x140013c3d
   140013c20:	cmp    DWORD PTR [rsp+0x30],0x0
   140013c25:	je     0x140013c3d
   140013c27:	lea    rcx,[rsp+0x38]
   140013c2c:	call   0x14000f03c
   140013c31:	test   eax,eax
   140013c33:	je     0x140013c3d
   140013c35:	movsxd rcx,DWORD PTR [rsp+0x34]
   140013c3a:	add    rdi,rcx
   140013c3d:	mov    rax,rdi
   140013c40:	jmp    0x140013c51
   140013c42:	call   0x14000f574
   140013c47:	mov    DWORD PTR [rax],0x16
   140013c4d:	or     rax,0xffffffffffffffff
   140013c51:	lea    r11,[rsp+0x60]
   140013c56:	mov    rbx,QWORD PTR [r11+0x38]
   140013c5a:	mov    rbp,QWORD PTR [r11+0x40]
   140013c5e:	mov    rsp,r11
   140013c61:	pop    r14
   140013c63:	pop    r13
   140013c65:	pop    r12
   140013c67:	pop    rdi
   140013c68:	pop    rsi
   140013c69:	ret    
   140013c6a:	int3   
   140013c6b:	int3   
   140013c6c:	mov    rax,rsp
   140013c6f:	mov    QWORD PTR [rax+0x8],rbx
   140013c73:	mov    QWORD PTR [rax+0x10],rsi
   140013c77:	mov    QWORD PTR [rax+0x18],rdi
   140013c7b:	mov    QWORD PTR [rax+0x20],r12
   140013c7f:	push   r13
   140013c81:	push   r14
   140013c83:	push   r15
   140013c85:	sub    rsp,0x90
   140013c8c:	lea    rcx,[rsp+0x20]
   140013c91:	call   QWORD PTR [rip+0x136d9]        # 0x140027370
   140013c97:	nop
   140013c98:	mov    edx,0x58
   140013c9d:	lea    r12d,[rdx-0x38]
   140013ca1:	mov    rcx,r12
   140013ca4:	call   0x140012c6c
   140013ca9:	mov    r11,rax
   140013cac:	xor    r15d,r15d
   140013caf:	cmp    rax,r15
   140013cb2:	jne    0x140013cbc
   140013cb4:	or     eax,0xffffffff
   140013cb7:	jmp    0x140013f37
   140013cbc:	mov    QWORD PTR [rip+0x2409d],rax        # 0x140037d60
   140013cc3:	mov    ecx,r12d
   140013cc6:	mov    DWORD PTR [rip+0x24080],ecx        # 0x140037d4c
   140013ccc:	add    rax,0xb00
   140013cd2:	cmp    r11,rax
   140013cd5:	jae    0x140013d1a
   140013cd7:	mov    BYTE PTR [r11+0x8],r15b
   140013cdb:	or     QWORD PTR [r11],0xffffffffffffffff
   140013cdf:	mov    BYTE PTR [r11+0x9],0xa
   140013ce4:	mov    DWORD PTR [r11+0xc],r15d
   140013ce8:	mov    BYTE PTR [r11+0x38],r15b
   140013cec:	mov    BYTE PTR [r11+0x39],0xa
   140013cf1:	mov    BYTE PTR [r11+0x3a],0xa
   140013cf6:	mov    DWORD PTR [r11+0x50],r15d
   140013cfa:	mov    BYTE PTR [r11+0x4c],r15b
   140013cfe:	add    r11,0x58
   140013d02:	mov    rax,QWORD PTR [rip+0x24057]        # 0x140037d60
   140013d09:	add    rax,0xb00
   140013d0f:	cmp    r11,rax
   140013d12:	jb     0x140013cd7
   140013d14:	mov    ecx,DWORD PTR [rip+0x24032]        # 0x140037d4c
   140013d1a:	cmp    WORD PTR [rsp+0x62],r15w
   140013d20:	je     0x140013e6f
   140013d26:	mov    rax,QWORD PTR [rsp+0x68]
   140013d2b:	cmp    rax,r15
   140013d2e:	je     0x140013e6f
   140013d34:	lea    r13,[rax+0x4]
   140013d38:	movsxd rsi,DWORD PTR [rax]
   140013d3b:	add    rsi,r13
   140013d3e:	mov    ebx,0x800
   140013d43:	cmp    DWORD PTR [rax],ebx
   140013d45:	cmovl  ebx,DWORD PTR [rax]
   140013d48:	mov    edi,0x1
   140013d4d:	cmp    ecx,ebx
   140013d4f:	jge    0x140013de2
   140013d55:	lea    r14,[rip+0x24004]        # 0x140037d60
   140013d5c:	mov    edx,0x58
   140013d61:	mov    rcx,r12
   140013d64:	call   0x140012c6c
   140013d69:	mov    r11,rax
   140013d6c:	cmp    rax,r15
   140013d6f:	je     0x140013dda
   140013d71:	mov    QWORD PTR [r14+rdi*8],rax
   140013d75:	mov    eax,DWORD PTR [rip+0x23fd1]        # 0x140037d4c
   140013d7b:	add    eax,r12d
   140013d7e:	mov    DWORD PTR [rip+0x23fc8],eax        # 0x140037d4c
   140013d84:	lea    rcx,[r11+0xb00]
   140013d8b:	cmp    r11,rcx
   140013d8e:	jae    0x140013dd1
   140013d90:	mov    BYTE PTR [r11+0x8],r15b
   140013d94:	or     QWORD PTR [r11],0xffffffffffffffff
   140013d98:	mov    BYTE PTR [r11+0x9],0xa
   140013d9d:	mov    DWORD PTR [r11+0xc],r15d
   140013da1:	and    BYTE PTR [r11+0x38],0x80
   140013da6:	mov    BYTE PTR [r11+0x39],0xa
   140013dab:	mov    BYTE PTR [r11+0x3a],0xa
   140013db0:	mov    DWORD PTR [r11+0x50],r15d
   140013db4:	mov    BYTE PTR [r11+0x4c],r15b
   140013db8:	add    r11,0x58
   140013dbc:	mov    rax,QWORD PTR [r14+rdi*8]
   140013dc0:	add    rax,0xb00
   140013dc6:	cmp    r11,rax
   140013dc9:	jb     0x140013d90
   140013dcb:	mov    eax,DWORD PTR [rip+0x23f7b]        # 0x140037d4c
   140013dd1:	inc    rdi
   140013dd4:	cmp    eax,ebx
   140013dd6:	jl     0x140013d5c
   140013dd8:	jmp    0x140013de9
   140013dda:	mov    ebx,DWORD PTR [rip+0x23f6c]        # 0x140037d4c
   140013de0:	jmp    0x140013de9
   140013de2:	lea    r14,[rip+0x23f77]        # 0x140037d60
   140013de9:	mov    edi,r15d
   140013dec:	cmp    ebx,r15d
   140013def:	jle    0x140013e6f
   140013df1:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   140013df5:	je     0x140013e62
   140013df7:	cmp    QWORD PTR [rsi],0xfffffffffffffffe
   140013dfb:	je     0x140013e62
   140013dfd:	test   BYTE PTR [r13+0x0],0x1
   140013e02:	je     0x140013e62
   140013e04:	test   BYTE PTR [r13+0x0],0x8
   140013e09:	jne    0x140013e19
   140013e0b:	mov    rcx,QWORD PTR [rsi]
   140013e0e:	call   QWORD PTR [rip+0x1350c]        # 0x140027320
   140013e14:	cmp    eax,r15d
   140013e17:	je     0x140013e62
   140013e19:	movsxd r12,edi
   140013e1c:	mov    rax,r12
   140013e1f:	sar    rax,0x5
   140013e23:	and    r12d,0x1f
   140013e27:	imul   r12,r12,0x58
   140013e2b:	add    r12,QWORD PTR [r14+rax*8]
   140013e2f:	mov    rax,QWORD PTR [rsi]
   140013e32:	mov    QWORD PTR [r12],rax
   140013e36:	mov    al,BYTE PTR [r13+0x0]
   140013e3a:	mov    BYTE PTR [r12+0x8],al
   140013e3f:	lea    rcx,[r12+0x10]
   140013e44:	mov    edx,0xfa0
   140013e49:	call   0x14001a494
   140013e4e:	cmp    eax,r15d
   140013e51:	je     0x140013e5a
   140013e53:	inc    DWORD PTR [r12+0xc]
   140013e58:	jmp    0x140013e62
   140013e5a:	or     eax,0xffffffff
   140013e5d:	jmp    0x140013f37
   140013e62:	inc    edi
   140013e64:	inc    r13
   140013e67:	add    rsi,0x8
   140013e6b:	cmp    edi,ebx
   140013e6d:	jl     0x140013df1
   140013e6f:	mov    r12d,r15d
   140013e72:	mov    rdi,r15
   140013e75:	mov    rbx,rdi
   140013e78:	imul   rbx,rbx,0x58
   140013e7c:	add    rbx,QWORD PTR [rip+0x23edd]        # 0x140037d60
   140013e83:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   140013e87:	je     0x140013e95
   140013e89:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   140013e8d:	je     0x140013e95
   140013e8f:	or     BYTE PTR [rbx+0x8],0x80
   140013e93:	jmp    0x140013f14
   140013e95:	mov    BYTE PTR [rbx+0x8],0x81
   140013e99:	lea    eax,[r12-0x1]
   140013e9e:	neg    eax
   140013ea0:	sbb    ecx,ecx
   140013ea2:	add    ecx,0xfffffff5
   140013ea5:	mov    eax,0xfffffff6
   140013eaa:	cmp    r12d,r15d
   140013ead:	cmove  ecx,eax
   140013eb0:	call   QWORD PTR [rip+0x1320a]        # 0x1400270c0
   140013eb6:	mov    rsi,rax
   140013eb9:	cmp    rax,0xffffffffffffffff
   140013ebd:	je     0x140013f09
   140013ebf:	cmp    rax,r15
   140013ec2:	je     0x140013f09
   140013ec4:	mov    rcx,rax
   140013ec7:	call   QWORD PTR [rip+0x13453]        # 0x140027320
   140013ecd:	cmp    eax,r15d
   140013ed0:	je     0x140013f09
   140013ed2:	mov    QWORD PTR [rbx],rsi
   140013ed5:	movzx  eax,al
   140013ed8:	cmp    eax,0x2
   140013edb:	jne    0x140013ee3
   140013edd:	or     BYTE PTR [rbx+0x8],0x40
   140013ee1:	jmp    0x140013eec
   140013ee3:	cmp    eax,0x3
   140013ee6:	jne    0x140013eec
   140013ee8:	or     BYTE PTR [rbx+0x8],0x8
   140013eec:	lea    rcx,[rbx+0x10]
   140013ef0:	mov    edx,0xfa0
   140013ef5:	call   0x14001a494
   140013efa:	cmp    eax,r15d
   140013efd:	je     0x140013f04
   140013eff:	inc    DWORD PTR [rbx+0xc]
   140013f02:	jmp    0x140013f14
   140013f04:	or     eax,0xffffffff
   140013f07:	jmp    0x140013f37
   140013f09:	or     BYTE PTR [rbx+0x8],0x40
   140013f0d:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   140013f14:	inc    r12d
   140013f17:	inc    rdi
   140013f1a:	cmp    rdi,0x3
   140013f1e:	jl     0x140013e75
   140013f24:	mov    ecx,DWORD PTR [rip+0x23e22]        # 0x140037d4c
   140013f2a:	call   QWORD PTR [rip+0x13390]        # 0x1400272c0
   140013f30:	xor    eax,eax
   140013f32:	jmp    0x140013f37
   140013f34:	or     eax,0xffffffff
   140013f37:	lea    r11,[rsp+0x90]
   140013f3f:	mov    rbx,QWORD PTR [r11+0x20]
   140013f43:	mov    rsi,QWORD PTR [r11+0x28]
   140013f47:	mov    rdi,QWORD PTR [r11+0x30]
   140013f4b:	mov    r12,QWORD PTR [r11+0x38]
   140013f4f:	mov    rsp,r11
   140013f52:	pop    r15
   140013f54:	pop    r14
   140013f56:	pop    r13
   140013f58:	ret    
   140013f59:	int3   
   140013f5a:	int3   
   140013f5b:	int3   
   140013f5c:	mov    QWORD PTR [rsp+0x8],rbx
   140013f61:	push   rdi
   140013f62:	sub    rsp,0x20
   140013f66:	lea    rbx,[rip+0x23df3]        # 0x140037d60
   140013f6d:	mov    rdi,QWORD PTR [rbx]
   140013f70:	test   rdi,rdi
   140013f73:	je     0x140013fac
   140013f75:	lea    rax,[rdi+0xb00]
   140013f7c:	jmp    0x140013f9b
   140013f7e:	cmp    DWORD PTR [rdi+0xc],0x0
   140013f82:	je     0x140013f8e
   140013f84:	lea    rcx,[rdi+0x10]
   140013f88:	call   QWORD PTR [rip+0x13342]        # 0x1400272d0
   140013f8e:	mov    rax,QWORD PTR [rbx]
   140013f91:	add    rdi,0x58
   140013f95:	add    rax,0xb00
   140013f9b:	cmp    rdi,rax
   140013f9e:	jb     0x140013f7e
   140013fa0:	mov    rcx,QWORD PTR [rbx]
   140013fa3:	call   0x1400098ac
   140013fa8:	and    QWORD PTR [rbx],0x0
   140013fac:	lea    rax,[rip+0x23fad]        # 0x140037f60
   140013fb3:	add    rbx,0x8
   140013fb7:	cmp    rbx,rax
   140013fba:	jl     0x140013f6d
   140013fbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fc1:	add    rsp,0x20
   140013fc5:	pop    rdi
   140013fc6:	ret    
   140013fc7:	int3   
   140013fc8:	mov    QWORD PTR [rsp+0x8],rbx
   140013fcd:	mov    QWORD PTR [rsp+0x10],rdi
   140013fd2:	push   r12
   140013fd4:	sub    rsp,0x20
   140013fd8:	mov    rbx,rcx
   140013fdb:	call   0x140014cfc
   140013fe0:	mov    ecx,eax
   140013fe2:	call   0x14001eb14
   140013fe7:	test   eax,eax
   140013fe9:	je     0x140014086
   140013fef:	call   0x14000a3b0
   140013ff4:	add    rax,0x30
   140013ff8:	cmp    rbx,rax
   140013ffb:	jne    0x140014001
   140013ffd:	xor    eax,eax
   140013fff:	jmp    0x140014014
   140014001:	call   0x14000a3b0
   140014006:	add    rax,0x60
   14001400a:	cmp    rbx,rax
   14001400d:	jne    0x140014086
   14001400f:	mov    eax,0x1
   140014014:	inc    DWORD PTR [rip+0x218ce]        # 0x1400358e8
   14001401a:	test   DWORD PTR [rbx+0x18],0x10c
   140014021:	jne    0x140014086
   140014023:	lea    r12,[rip+0x22526]        # 0x140036550
   14001402a:	movsxd rdi,eax
   14001402d:	cmp    QWORD PTR [r12+rdi*8],0x0
   140014032:	jne    0x14001405f
   140014034:	mov    ecx,0x1000
   140014039:	call   0x140012c00
   14001403e:	mov    QWORD PTR [r12+rdi*8],rax
   140014042:	test   rax,rax
   140014045:	jne    0x14001405f
   140014047:	lea    rax,[rbx+0x20]
   14001404b:	mov    QWORD PTR [rbx+0x10],rax
   14001404f:	mov    QWORD PTR [rbx],rax
   140014052:	mov    eax,0x2
   140014057:	mov    DWORD PTR [rbx+0x24],eax
   14001405a:	mov    DWORD PTR [rbx+0x8],eax
   14001405d:	jmp    0x140014078
   14001405f:	mov    rcx,QWORD PTR [r12+rdi*8]
   140014063:	mov    DWORD PTR [rbx+0x24],0x1000
   14001406a:	mov    DWORD PTR [rbx+0x8],0x1000
   140014071:	mov    QWORD PTR [rbx+0x10],rcx
   140014075:	mov    QWORD PTR [rbx],rcx
   140014078:	or     DWORD PTR [rbx+0x18],0x1102
   14001407f:	mov    eax,0x1
   140014084:	jmp    0x140014088
   140014086:	xor    eax,eax
   140014088:	mov    rbx,QWORD PTR [rsp+0x30]
   14001408d:	mov    rdi,QWORD PTR [rsp+0x38]
   140014092:	add    rsp,0x20
   140014096:	pop    r12
   140014098:	ret    
   140014099:	int3   
   14001409a:	int3   
   14001409b:	int3   
   14001409c:	test   ecx,ecx
   14001409e:	je     0x1400140d0
   1400140a0:	push   rbx
   1400140a1:	sub    rsp,0x20
   1400140a5:	bt     DWORD PTR [rdx+0x18],0xc
   1400140aa:	mov    rbx,rdx
   1400140ad:	jae    0x1400140cb
   1400140af:	mov    rcx,rdx
   1400140b2:	call   0x140015048
   1400140b7:	and    DWORD PTR [rbx+0x18],0xffffeeff
   1400140be:	and    DWORD PTR [rbx+0x24],0x0
   1400140c2:	and    QWORD PTR [rbx],0x0
   1400140c6:	and    QWORD PTR [rbx+0x10],0x0
   1400140cb:	add    rsp,0x20
   1400140cf:	pop    rbx
   1400140d0:	ret    
   1400140d1:	int3   
   1400140d2:	int3   
   1400140d3:	int3   
   1400140d4:	rex push rbx
   1400140d6:	sub    rsp,0x20
   1400140da:	test   BYTE PTR [rdx+0x18],0x40
   1400140de:	mov    rbx,r8
   1400140e1:	je     0x1400140ef
   1400140e3:	cmp    QWORD PTR [rdx+0x10],0x0
   1400140e8:	jne    0x1400140ef
   1400140ea:	inc    DWORD PTR [r8]
   1400140ed:	jmp    0x140014115
   1400140ef:	add    DWORD PTR [rdx+0x8],0xffffffff
   1400140f3:	js     0x140014102
   1400140f5:	mov    rax,QWORD PTR [rdx]
   1400140f8:	mov    BYTE PTR [rax],cl
   1400140fa:	inc    QWORD PTR [rdx]
   1400140fd:	movzx  eax,cl
   140014100:	jmp    0x14001410a
   140014102:	movsx  ecx,cl
   140014105:	call   0x140015250
   14001410a:	cmp    eax,0xffffffff
   14001410d:	jne    0x140014113
   14001410f:	or     DWORD PTR [rbx],eax
   140014111:	jmp    0x140014115
   140014113:	inc    DWORD PTR [rbx]
   140014115:	add    rsp,0x20
   140014119:	pop    rbx
   14001411a:	ret    
   14001411b:	int3   
   14001411c:	test   edx,edx
   14001411e:	jle    0x14001416c
   140014120:	mov    QWORD PTR [rsp+0x8],rbx
   140014125:	mov    QWORD PTR [rsp+0x10],rbp
   14001412a:	mov    QWORD PTR [rsp+0x18],rsi
   14001412f:	push   rdi
   140014130:	sub    rsp,0x20
   140014134:	mov    rdi,r9
   140014137:	mov    rsi,r8
   14001413a:	mov    ebx,edx
   14001413c:	mov    bpl,cl
   14001413f:	mov    r8,rdi
   140014142:	mov    rdx,rsi
   140014145:	mov    cl,bpl
   140014148:	dec    ebx
   14001414a:	call   0x1400140d4
   14001414f:	cmp    DWORD PTR [rdi],0xffffffff
   140014152:	je     0x140014158
   140014154:	test   ebx,ebx
   140014156:	jg     0x14001413f
   140014158:	mov    rbx,QWORD PTR [rsp+0x30]
   14001415d:	mov    rbp,QWORD PTR [rsp+0x38]
   140014162:	mov    rsi,QWORD PTR [rsp+0x40]
   140014167:	add    rsp,0x20
   14001416b:	pop    rdi
   14001416c:	ret    
   14001416d:	int3   
   14001416e:	int3   
   14001416f:	int3   
   140014170:	mov    QWORD PTR [rsp+0x8],rbx
   140014175:	mov    QWORD PTR [rsp+0x10],rbp
   14001417a:	mov    QWORD PTR [rsp+0x18],rsi
   14001417f:	push   rdi
   140014180:	sub    rsp,0x20
   140014184:	test   BYTE PTR [r8+0x18],0x40
   140014189:	mov    rdi,r9
   14001418c:	mov    rsi,r8
   14001418f:	mov    ebx,edx
   140014191:	mov    rbp,rcx
   140014194:	je     0x1400141a2
   140014196:	cmp    QWORD PTR [r8+0x10],0x0
   14001419b:	jne    0x1400141a2
   14001419d:	add    DWORD PTR [r9],edx
   1400141a0:	jmp    0x1400141d9
   1400141a2:	test   edx,edx
   1400141a4:	jle    0x1400141d9
   1400141a6:	mov    cl,BYTE PTR [rbp+0x0]
   1400141a9:	mov    r8,rdi
   1400141ac:	mov    rdx,rsi
   1400141af:	dec    ebx
   1400141b1:	call   0x1400140d4
   1400141b6:	inc    rbp
   1400141b9:	cmp    DWORD PTR [rdi],0xffffffff
   1400141bc:	jne    0x1400141d5
   1400141be:	call   0x14000f574
   1400141c3:	cmp    DWORD PTR [rax],0x2a
   1400141c6:	jne    0x1400141d9
   1400141c8:	mov    r8,rdi
   1400141cb:	mov    rdx,rsi
   1400141ce:	mov    cl,0x3f
   1400141d0:	call   0x1400140d4
   1400141d5:	test   ebx,ebx
   1400141d7:	jg     0x1400141a6
   1400141d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400141de:	mov    rbp,QWORD PTR [rsp+0x38]
   1400141e3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400141e8:	add    rsp,0x20
   1400141ec:	pop    rdi
   1400141ed:	ret    
   1400141ee:	int3   
   1400141ef:	int3   
   1400141f0:	add    QWORD PTR [rcx],0x8
   1400141f4:	mov    rax,QWORD PTR [rcx]
   1400141f7:	mov    eax,DWORD PTR [rax-0x8]
   1400141fa:	ret    
   1400141fb:	int3   
   1400141fc:	add    QWORD PTR [rcx],0x8
   140014200:	mov    rax,QWORD PTR [rcx]
   140014203:	mov    rax,QWORD PTR [rax-0x8]
   140014207:	ret    
   140014208:	add    QWORD PTR [rcx],0x8
   14001420c:	mov    rax,QWORD PTR [rcx]
   14001420f:	mov    ax,WORD PTR [rax-0x8]
   140014213:	ret    
   140014214:	mov    QWORD PTR [rsp+0x18],rbx
   140014219:	push   rbp
   14001421a:	push   rsi
   14001421b:	push   rdi
   14001421c:	push   r12
   14001421e:	push   r13
   140014220:	push   r14
   140014222:	push   r15
   140014224:	sub    rsp,0x2d0
   14001422b:	mov    rax,QWORD PTR [rip+0x2006e]        # 0x1400342a0
   140014232:	xor    rax,rsp
   140014235:	mov    QWORD PTR [rsp+0x2c8],rax
   14001423d:	xor    eax,eax
   14001423f:	mov    rbx,rcx
   140014242:	mov    QWORD PTR [rsp+0x68],rcx
   140014247:	mov    rdi,rdx
   14001424a:	lea    rcx,[rsp+0x78]
   14001424f:	mov    rdx,r8
   140014252:	mov    r13,r9
   140014255:	mov    DWORD PTR [rsp+0x60],eax
   140014259:	mov    r12d,eax
   14001425c:	mov    DWORD PTR [rsp+0x54],eax
   140014260:	mov    r14d,eax
   140014263:	mov    DWORD PTR [rsp+0x48],eax
   140014267:	mov    DWORD PTR [rsp+0x58],eax
   14001426b:	mov    DWORD PTR [rsp+0x50],eax
   14001426f:	call   0x1400094b4
   140014274:	xor    r10d,r10d
   140014277:	cmp    rbx,r10
   14001427a:	jne    0x1400142bd
   14001427c:	call   0x14000f574
   140014281:	xor    ebx,ebx
   140014283:	xor    r9d,r9d
   140014286:	xor    r8d,r8d
   140014289:	xor    edx,edx
   14001428b:	xor    ecx,ecx
   14001428d:	mov    DWORD PTR [rax],0x16
   140014293:	mov    QWORD PTR [rsp+0x20],rbx
   140014298:	call   0x14000e4d8
   14001429d:	cmp    BYTE PTR [rsp+0x90],bl
   1400142a4:	je     0x1400142b5
   1400142a6:	mov    rax,QWORD PTR [rsp+0x88]
   1400142ae:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400142b5:	or     eax,0xffffffff
   1400142b8:	jmp    0x140014aba
   1400142bd:	or     r15d,0xffffffff
   1400142c1:	test   BYTE PTR [rbx+0x18],0x40
   1400142c5:	lea    r9,[rip+0xfffffffffffebd34]        # 0x140000000
   1400142cc:	jne    0x14001438c
   1400142d2:	mov    rcx,rbx
   1400142d5:	call   0x140014cfc
   1400142da:	lea    rdx,[rip+0x211df]        # 0x1400354c0
   1400142e1:	cmp    eax,r15d
   1400142e4:	je     0x14001430e
   1400142e6:	cmp    eax,0xfffffffe
   1400142e9:	je     0x14001430e
   1400142eb:	movsxd r8,eax
   1400142ee:	lea    r9,[rip+0xfffffffffffebd0b]        # 0x140000000
   1400142f5:	mov    rcx,r8
   1400142f8:	and    r8d,0x1f
   1400142fc:	sar    rcx,0x5
   140014300:	imul   r8,r8,0x58
   140014304:	add    r8,QWORD PTR [r9+rcx*8+0x37d60]
   14001430c:	jmp    0x140014318
   14001430e:	mov    r8,rdx
   140014311:	lea    r9,[rip+0xfffffffffffebce8]        # 0x140000000
   140014318:	test   BYTE PTR [r8+0x38],0x7f
   14001431d:	jne    0x140014348
   14001431f:	cmp    eax,r15d
   140014322:	je     0x140014342
   140014324:	cmp    eax,0xfffffffe
   140014327:	je     0x140014342
   140014329:	movsxd rdx,eax
   14001432c:	mov    rax,rdx
   14001432f:	and    edx,0x1f
   140014332:	sar    rax,0x5
   140014336:	imul   rdx,rdx,0x58
   14001433a:	add    rdx,QWORD PTR [r9+rax*8+0x37d60]
   140014342:	test   BYTE PTR [rdx+0x38],0x80
   140014346:	je     0x140014389
   140014348:	call   0x14000f574
   14001434d:	xor    ebx,ebx
   14001434f:	xor    r9d,r9d
   140014352:	xor    r8d,r8d
   140014355:	xor    edx,edx
   140014357:	xor    ecx,ecx
   140014359:	mov    DWORD PTR [rax],0x16
   14001435f:	mov    QWORD PTR [rsp+0x20],rbx
   140014364:	call   0x14000e4d8
   140014369:	cmp    BYTE PTR [rsp+0x90],bl
   140014370:	je     0x140014381
   140014372:	mov    rax,QWORD PTR [rsp+0x88]
   14001437a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014381:	mov    eax,r15d
   140014384:	jmp    0x140014aba
   140014389:	xor    r10d,r10d
   14001438c:	cmp    rdi,r10
   14001438f:	je     0x140014348
   140014391:	mov    bpl,BYTE PTR [rdi]
   140014394:	mov    esi,r10d
   140014397:	mov    DWORD PTR [rsp+0x40],r10d
   14001439c:	mov    DWORD PTR [rsp+0x44],r10d
   1400143a1:	mov    edx,r10d
   1400143a4:	mov    QWORD PTR [rsp+0x98],r10
   1400143ac:	cmp    bpl,r10b
   1400143af:	je     0x140014a9f
   1400143b5:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400143bd:	mov    r11d,0x200
   1400143c3:	inc    rdi
   1400143c6:	cmp    esi,r10d
   1400143c9:	mov    QWORD PTR [rsp+0xb0],rdi
   1400143d1:	jl     0x140014a9f
   1400143d7:	lea    eax,[rbp-0x20]
   1400143da:	cmp    al,0x58
   1400143dc:	ja     0x1400143f0
   1400143de:	movsx  rax,bpl
   1400143e2:	movsx  ecx,BYTE PTR [rax+r9*1+0x2e680]
   1400143eb:	and    ecx,0xf
   1400143ee:	jmp    0x1400143f3
   1400143f0:	mov    ecx,r10d
   1400143f3:	movsxd rax,edx
   1400143f6:	movsxd rcx,ecx
   1400143f9:	lea    rdx,[rax+rcx*8]
   1400143fd:	movsx  edx,BYTE PTR [rdx+r9*1+0x2e6a0]
   140014406:	sar    edx,0x4
   140014409:	mov    DWORD PTR [rsp+0x5c],edx
   14001440d:	mov    ecx,edx
   14001440f:	cmp    edx,r10d
   140014412:	je     0x140014b91
   140014418:	sub    ecx,0x1
   14001441b:	je     0x140014ca9
   140014421:	sub    ecx,0x1
   140014424:	je     0x140014c59
   14001442a:	sub    ecx,0x1
   14001442d:	je     0x140014c1e
   140014433:	sub    ecx,0x1
   140014436:	je     0x140014c16
   14001443c:	sub    ecx,0x1
   14001443f:	je     0x140014be5
   140014445:	sub    ecx,0x1
   140014448:	je     0x140014ae5
   14001444e:	cmp    ecx,0x1
   140014451:	jne    0x140014a93
   140014457:	movsx  eax,bpl
   14001445b:	cmp    eax,0x64
   14001445e:	jg     0x1400145e2
   140014464:	je     0x1400146ea
   14001446a:	cmp    eax,0x41
   14001446d:	je     0x1400145b3
   140014473:	cmp    eax,0x43
   140014476:	je     0x14001454c
   14001447c:	cmp    eax,0x45
   14001447f:	je     0x1400145b3
   140014485:	cmp    eax,0x47
   140014488:	je     0x1400145b3
   14001448e:	cmp    eax,0x53
   140014491:	je     0x140014500
   140014493:	cmp    eax,0x58
   140014496:	je     0x140014680
   14001449c:	cmp    eax,0x5a
   14001449f:	je     0x1400144b8
   1400144a1:	cmp    eax,0x61
   1400144a4:	je     0x1400145bf
   1400144aa:	cmp    eax,0x63
   1400144ad:	je     0x14001455a
   1400144b3:	jmp    0x140014900
   1400144b8:	mov    rax,QWORD PTR [r13+0x0]
   1400144bc:	add    r13,0x8
   1400144c0:	cmp    rax,r10
   1400144c3:	je     0x1400144f4
   1400144c5:	mov    rbx,QWORD PTR [rax+0x8]
   1400144c9:	cmp    rbx,r10
   1400144cc:	je     0x1400144f4
   1400144ce:	bt     r12d,0xb
   1400144d3:	movsx  eax,WORD PTR [rax]
   1400144d6:	jae    0x1400144ea
   1400144d8:	cdq    
   1400144d9:	mov    DWORD PTR [rsp+0x50],0x1
   1400144e1:	sub    eax,edx
   1400144e3:	sar    eax,1
   1400144e5:	jmp    0x1400148fc
   1400144ea:	mov    DWORD PTR [rsp+0x50],r10d
   1400144ef:	jmp    0x1400148fc
   1400144f4:	mov    rbx,QWORD PTR [rip+0x2101d]        # 0x140035518
   1400144fb:	jmp    0x1400148f1
   140014500:	test   r12d,0x830
   140014507:	jne    0x14001450e
   140014509:	bts    r12d,0xb
   14001450e:	mov    rbx,QWORD PTR [r13+0x0]
   140014512:	cmp    r14d,r15d
   140014515:	mov    eax,r14d
   140014518:	mov    ecx,0x7fffffff
   14001451d:	cmove  eax,ecx
   140014520:	add    r13,0x8
   140014524:	test   r12d,0x810
   14001452b:	je     0x14001464b
   140014531:	cmp    rbx,r10
   140014534:	mov    DWORD PTR [rsp+0x50],0x1
   14001453c:	cmove  rbx,QWORD PTR [rip+0x20fdc]        # 0x140035520
   140014544:	mov    rcx,rbx
   140014547:	jmp    0x14001463e
   14001454c:	test   r12d,0x830
   140014553:	jne    0x14001455a
   140014555:	bts    r12d,0xb
   14001455a:	add    r13,0x8
   14001455e:	test   r12d,0x810
   140014565:	je     0x140014593
   140014567:	movzx  r9d,WORD PTR [r13-0x8]
   14001456c:	lea    rdx,[rsp+0xc0]
   140014574:	lea    rcx,[rsp+0x44]
   140014579:	mov    r8,r11
   14001457c:	call   0x14001ef4c
   140014581:	xor    r10d,r10d
   140014584:	cmp    eax,r10d
   140014587:	je     0x1400145a6
   140014589:	mov    DWORD PTR [rsp+0x58],0x1
   140014591:	jmp    0x1400145a6
   140014593:	mov    al,BYTE PTR [r13-0x8]
   140014597:	mov    DWORD PTR [rsp+0x44],0x1
   14001459f:	mov    BYTE PTR [rsp+0xc0],al
   1400145a6:	lea    rbx,[rsp+0xc0]
   1400145ae:	jmp    0x140014900
   1400145b3:	mov    DWORD PTR [rsp+0x70],0x1
   1400145bb:	add    bpl,0x20
   1400145bf:	or     r12d,0x40
   1400145c3:	cmp    r14d,r10d
   1400145c6:	lea    rbx,[rsp+0xc0]
   1400145ce:	mov    esi,r11d
   1400145d1:	jge    0x140014804
   1400145d7:	mov    r14d,0x6
   1400145dd:	jmp    0x14001484d
   1400145e2:	cmp    eax,0x65
   1400145e5:	jl     0x140014900
   1400145eb:	cmp    eax,0x67
   1400145ee:	jle    0x1400145bf
   1400145f0:	cmp    eax,0x69
   1400145f3:	je     0x1400146ea
   1400145f9:	cmp    eax,0x6e
   1400145fc:	je     0x1400146b7
   140014602:	cmp    eax,0x6f
   140014605:	je     0x1400146a5
   14001460b:	cmp    eax,0x70
   14001460e:	je     0x140014675
   140014610:	cmp    eax,0x73
   140014613:	je     0x14001450e
   140014619:	cmp    eax,0x75
   14001461c:	je     0x1400146ee
   140014622:	cmp    eax,0x78
   140014625:	jne    0x140014900
   14001462b:	mov    eax,0x27
   140014630:	jmp    0x140014685
   140014632:	dec    eax
   140014634:	cmp    WORD PTR [rcx],r10w
   140014638:	je     0x140014643
   14001463a:	add    rcx,0x2
   14001463e:	cmp    eax,r10d
   140014641:	jne    0x140014632
   140014643:	sub    rcx,rbx
   140014646:	sar    rcx,1
   140014649:	jmp    0x14001466c
   14001464b:	cmp    rbx,r10
   14001464e:	cmove  rbx,QWORD PTR [rip+0x20ec2]        # 0x140035518
   140014656:	mov    rcx,rbx
   140014659:	jmp    0x140014665
   14001465b:	dec    eax
   14001465d:	cmp    BYTE PTR [rcx],r10b
   140014660:	je     0x14001466a
   140014662:	inc    rcx
   140014665:	cmp    eax,r10d
   140014668:	jne    0x14001465b
   14001466a:	sub    ecx,ebx
   14001466c:	mov    DWORD PTR [rsp+0x44],ecx
   140014670:	jmp    0x140014900
   140014675:	mov    r14d,0x10
   14001467b:	bts    r12d,0xf
   140014680:	mov    eax,0x7
   140014685:	mov    DWORD PTR [rsp+0x60],eax
   140014689:	mov    r9d,0x10
   14001468f:	test   r12b,r12b
   140014692:	jns    0x1400146f4
   140014694:	add    al,0x51
   140014696:	mov    BYTE PTR [rsp+0x4c],0x30
   14001469b:	lea    edx,[r9-0xe]
   14001469f:	mov    BYTE PTR [rsp+0x4d],al
   1400146a3:	jmp    0x1400146f8
   1400146a5:	mov    r9d,0x8
   1400146ab:	test   r12b,r12b
   1400146ae:	jns    0x1400146f4
   1400146b0:	bts    r12d,0x9
   1400146b5:	jmp    0x1400146f4
   1400146b7:	mov    rdi,QWORD PTR [r13+0x0]
   1400146bb:	add    r13,0x8
   1400146bf:	call   0x14001ed24
   1400146c4:	xor    r10d,r10d
   1400146c7:	cmp    eax,r10d
   1400146ca:	je     0x140014348
   1400146d0:	test   r12b,0x20
   1400146d4:	je     0x1400146db
   1400146d6:	mov    WORD PTR [rdi],si
   1400146d9:	jmp    0x1400146dd
   1400146db:	mov    DWORD PTR [rdi],esi
   1400146dd:	mov    DWORD PTR [rsp+0x58],0x1
   1400146e5:	jmp    0x140014a56
   1400146ea:	or     r12d,0x40
   1400146ee:	mov    r9d,0xa
   1400146f4:	mov    edx,DWORD PTR [rsp+0x48]
   1400146f8:	bt     r12d,0xf
   1400146fd:	jb     0x140014706
   1400146ff:	bt     r12d,0xc
   140014704:	jae    0x140014710
   140014706:	mov    r8,QWORD PTR [r13+0x0]
   14001470a:	add    r13,0x8
   14001470e:	jmp    0x14001473e
   140014710:	add    r13,0x8
   140014714:	test   r12b,0x20
   140014718:	je     0x14001472e
   14001471a:	test   r12b,0x40
   14001471e:	je     0x140014727
   140014720:	movsx  r8,WORD PTR [r13-0x8]
   140014725:	jmp    0x14001473e
   140014727:	movzx  r8d,WORD PTR [r13-0x8]
   14001472c:	jmp    0x14001473e
   14001472e:	test   r12b,0x40
   140014732:	je     0x14001473a
   140014734:	movsxd r8,DWORD PTR [r13-0x8]
   140014738:	jmp    0x14001473e
   14001473a:	mov    r8d,DWORD PTR [r13-0x8]
   14001473e:	test   r12b,0x40
   140014742:	je     0x140014751
   140014744:	cmp    r8,r10
   140014747:	jge    0x140014751
   140014749:	neg    r8
   14001474c:	bts    r12d,0x8
   140014751:	bt     r12d,0xf
   140014756:	jb     0x140014762
   140014758:	bt     r12d,0xc
   14001475d:	jb     0x140014762
   14001475f:	mov    r8d,r8d
   140014762:	cmp    r14d,r10d
   140014765:	jge    0x14001476f
   140014767:	mov    r14d,0x1
   14001476d:	jmp    0x14001477a
   14001476f:	and    r12d,0xfffffff7
   140014773:	cmp    r14d,r11d
   140014776:	cmovg  r14d,r11d
   14001477a:	mov    r15d,DWORD PTR [rsp+0x60]
   14001477f:	mov    rax,r8
   140014782:	lea    rbx,[rsp+0x2bf]
   14001478a:	neg    rax
   14001478d:	sbb    ecx,ecx
   14001478f:	and    ecx,edx
   140014791:	mov    DWORD PTR [rsp+0x48],ecx
   140014795:	mov    ecx,r14d
   140014798:	dec    r14d
   14001479b:	cmp    ecx,r10d
   14001479e:	jg     0x1400147a5
   1400147a0:	cmp    r8,r10
   1400147a3:	je     0x1400147c5
   1400147a5:	xor    edx,edx
   1400147a7:	mov    rax,r8
   1400147aa:	movsxd rcx,r9d
   1400147ad:	div    rcx
   1400147b0:	mov    r8,rax
   1400147b3:	lea    eax,[rdx+0x30]
   1400147b6:	cmp    eax,0x39
   1400147b9:	jle    0x1400147be
   1400147bb:	add    eax,r15d
   1400147be:	mov    BYTE PTR [rbx],al
   1400147c0:	dec    rbx
   1400147c3:	jmp    0x140014795
   1400147c5:	lea    rax,[rsp+0x2bf]
   1400147cd:	mov    r15d,0xffffffff
   1400147d3:	sub    eax,ebx
   1400147d5:	inc    rbx
   1400147d8:	bt     r12d,0x9
   1400147dd:	mov    DWORD PTR [rsp+0x44],eax
   1400147e1:	jae    0x140014900
   1400147e7:	cmp    eax,r10d
   1400147ea:	je     0x1400147f5
   1400147ec:	cmp    BYTE PTR [rbx],0x30
   1400147ef:	je     0x140014900
   1400147f5:	dec    rbx
   1400147f8:	inc    DWORD PTR [rsp+0x44]
   1400147fc:	mov    BYTE PTR [rbx],0x30
   1400147ff:	jmp    0x140014900
   140014804:	jne    0x140014814
   140014806:	cmp    bpl,0x67
   14001480a:	jne    0x14001484d
   14001480c:	mov    r14d,0x1
   140014812:	jmp    0x14001484d
   140014814:	cmp    r14d,r11d
   140014817:	cmovg  r14d,r11d
   14001481b:	cmp    r14d,0xa3
   140014822:	jle    0x14001484d
   140014824:	lea    edi,[r14+0x15d]
   14001482b:	movsxd rcx,edi
   14001482e:	call   0x140012c00
   140014833:	mov    QWORD PTR [rsp+0x98],rax
   14001483b:	test   rax,rax
   14001483e:	je     0x140014847
   140014840:	mov    rbx,rax
   140014843:	mov    esi,edi
   140014845:	jmp    0x14001484d
   140014847:	mov    r14d,0xa3
   14001484d:	mov    rax,QWORD PTR [r13+0x0]
   140014851:	mov    rcx,QWORD PTR [rip+0x20d08]        # 0x140035560
   140014858:	add    r13,0x8
   14001485c:	movsx  edi,bpl
   140014860:	movsxd rsi,esi
   140014863:	mov    QWORD PTR [rsp+0xa8],rax
   14001486b:	call   0x140011758
   140014870:	lea    rcx,[rsp+0x78]
   140014875:	mov    r9d,edi
   140014878:	mov    QWORD PTR [rsp+0x30],rcx
   14001487d:	mov    ecx,DWORD PTR [rsp+0x70]
   140014881:	mov    r8,rsi
   140014884:	mov    DWORD PTR [rsp+0x28],ecx
   140014888:	lea    rcx,[rsp+0xa8]
   140014890:	mov    rdx,rbx
   140014893:	mov    DWORD PTR [rsp+0x20],r14d
   140014898:	call   rax
   14001489a:	mov    edi,r12d
   14001489d:	xor    eax,eax
   14001489f:	and    edi,0x80
   1400148a5:	je     0x1400148c4
   1400148a7:	cmp    r14d,eax
   1400148aa:	jne    0x1400148c4
   1400148ac:	mov    rcx,QWORD PTR [rip+0x20cc5]        # 0x140035578
   1400148b3:	call   0x140011758
   1400148b8:	lea    rdx,[rsp+0x78]
   1400148bd:	mov    rcx,rbx
   1400148c0:	call   rax
   1400148c2:	xor    eax,eax
   1400148c4:	cmp    bpl,0x67
   1400148c8:	jne    0x1400148e4
   1400148ca:	cmp    edi,eax
   1400148cc:	jne    0x1400148e4
   1400148ce:	mov    rcx,QWORD PTR [rip+0x20c9b]        # 0x140035570
   1400148d5:	call   0x140011758
   1400148da:	lea    rdx,[rsp+0x78]
   1400148df:	mov    rcx,rbx
   1400148e2:	call   rax
   1400148e4:	cmp    BYTE PTR [rbx],0x2d
   1400148e7:	jne    0x1400148f1
   1400148e9:	bts    r12d,0x8
   1400148ee:	inc    rbx
   1400148f1:	mov    rcx,rbx
   1400148f4:	call   0x140012e10
   1400148f9:	xor    r10d,r10d
   1400148fc:	mov    DWORD PTR [rsp+0x44],eax
   140014900:	cmp    DWORD PTR [rsp+0x58],r10d
   140014905:	jne    0x140014a56
   14001490b:	test   r12b,0x40
   14001490f:	je     0x140014942
   140014911:	bt     r12d,0x8
   140014916:	jae    0x14001491f
   140014918:	mov    BYTE PTR [rsp+0x4c],0x2d
   14001491d:	jmp    0x14001492a
   14001491f:	test   r12b,0x1
   140014923:	je     0x140014935
   140014925:	mov    BYTE PTR [rsp+0x4c],0x2b
   14001492a:	mov    edi,0x1
   14001492f:	mov    DWORD PTR [rsp+0x48],edi
   140014933:	jmp    0x140014946
   140014935:	test   r12b,0x2
   140014939:	je     0x140014942
   14001493b:	mov    BYTE PTR [rsp+0x4c],0x20
   140014940:	jmp    0x14001492a
   140014942:	mov    edi,DWORD PTR [rsp+0x48]
   140014946:	mov    esi,DWORD PTR [rsp+0x54]
   14001494a:	mov    rbp,QWORD PTR [rsp+0x68]
   14001494f:	sub    esi,DWORD PTR [rsp+0x44]
   140014953:	sub    esi,edi
   140014955:	test   r12b,0xc
   140014959:	jne    0x14001496c
   14001495b:	lea    r9,[rsp+0x40]
   140014960:	mov    r8,rbp
   140014963:	mov    edx,esi
   140014965:	mov    cl,0x20
   140014967:	call   0x14001411c
   14001496c:	lea    r9,[rsp+0x40]
   140014971:	lea    rcx,[rsp+0x4c]
   140014976:	mov    r8,rbp
   140014979:	mov    edx,edi
   14001497b:	call   0x140014170
   140014980:	test   r12b,0x8
   140014984:	je     0x14001499d
   140014986:	test   r12b,0x4
   14001498a:	jne    0x14001499d
   14001498c:	lea    r9,[rsp+0x40]
   140014991:	mov    r8,rbp
   140014994:	mov    edx,esi
   140014996:	mov    cl,0x30
   140014998:	call   0x14001411c
   14001499d:	mov    edi,DWORD PTR [rsp+0x44]
   1400149a1:	xor    eax,eax
   1400149a3:	cmp    DWORD PTR [rsp+0x50],eax
   1400149a7:	je     0x140014a1e
   1400149a9:	cmp    edi,eax
   1400149ab:	jle    0x140014a1e
   1400149ad:	mov    rbp,rbx
   1400149b0:	movzx  r9d,WORD PTR [rbp+0x0]
   1400149b5:	lea    rdx,[rsp+0x2c0]
   1400149bd:	lea    rcx,[rsp+0xa0]
   1400149c5:	mov    r8d,0x6
   1400149cb:	dec    edi
   1400149cd:	add    rbp,0x2
   1400149d1:	call   0x14001ef4c
   1400149d6:	xor    r10d,r10d
   1400149d9:	cmp    eax,r10d
   1400149dc:	jne    0x140014a10
   1400149de:	mov    edx,DWORD PTR [rsp+0xa0]
   1400149e5:	cmp    edx,r10d
   1400149e8:	je     0x140014a10
   1400149ea:	mov    r8,QWORD PTR [rsp+0x68]
   1400149ef:	lea    r9,[rsp+0x40]
   1400149f4:	lea    rcx,[rsp+0x2c0]
   1400149fc:	call   0x140014170
   140014a01:	xor    r10d,r10d
   140014a04:	cmp    edi,r10d
   140014a07:	jne    0x1400149b0
   140014a09:	mov    rbp,QWORD PTR [rsp+0x68]
   140014a0e:	jmp    0x140014a33
   140014a10:	mov    rbp,QWORD PTR [rsp+0x68]
   140014a15:	mov    eax,r15d
   140014a18:	mov    DWORD PTR [rsp+0x40],eax
   140014a1c:	jmp    0x140014a37
   140014a1e:	lea    r9,[rsp+0x40]
   140014a23:	mov    r8,rbp
   140014a26:	mov    edx,edi
   140014a28:	mov    rcx,rbx
   140014a2b:	call   0x140014170
   140014a30:	xor    r10d,r10d
   140014a33:	mov    eax,DWORD PTR [rsp+0x40]
   140014a37:	cmp    eax,r10d
   140014a3a:	jl     0x140014a56
   140014a3c:	test   r12b,0x4
   140014a40:	je     0x140014a56
   140014a42:	lea    r9,[rsp+0x40]
   140014a47:	mov    r8,rbp
   140014a4a:	mov    edx,esi
   140014a4c:	mov    cl,0x20
   140014a4e:	call   0x14001411c
   140014a53:	xor    r10d,r10d
   140014a56:	mov    rax,QWORD PTR [rsp+0x98]
   140014a5e:	cmp    rax,r10
   140014a61:	je     0x140014a76
   140014a63:	mov    rcx,rax
   140014a66:	call   0x1400098ac
   140014a6b:	xor    r10d,r10d
   140014a6e:	mov    QWORD PTR [rsp+0x98],r10
   140014a76:	mov    rdi,QWORD PTR [rsp+0xb0]
   140014a7e:	mov    esi,DWORD PTR [rsp+0x40]
   140014a82:	mov    edx,DWORD PTR [rsp+0x5c]
   140014a86:	lea    r9,[rip+0xfffffffffffeb573]        # 0x140000000
   140014a8d:	mov    r11d,0x200
   140014a93:	mov    bpl,BYTE PTR [rdi]
   140014a96:	cmp    bpl,r10b
   140014a99:	jne    0x1400143c3
   140014a9f:	cmp    BYTE PTR [rsp+0x90],r10b
   140014aa7:	je     0x140014ab8
   140014aa9:	mov    rcx,QWORD PTR [rsp+0x88]
   140014ab1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014ab8:	mov    eax,esi
   140014aba:	mov    rcx,QWORD PTR [rsp+0x2c8]
   140014ac2:	xor    rcx,rsp
   140014ac5:	call   0x140009080
   140014aca:	mov    rbx,QWORD PTR [rsp+0x320]
   140014ad2:	add    rsp,0x2d0
   140014ad9:	pop    r15
   140014adb:	pop    r14
   140014add:	pop    r13
   140014adf:	pop    r12
   140014ae1:	pop    rdi
   140014ae2:	pop    rsi
   140014ae3:	pop    rbp
   140014ae4:	ret    
   140014ae5:	cmp    bpl,0x49
   140014ae9:	je     0x140014b25
   140014aeb:	cmp    bpl,0x68
   140014aef:	je     0x140014b1c
   140014af1:	cmp    bpl,0x6c
   140014af5:	je     0x140014b04
   140014af7:	cmp    bpl,0x77
   140014afb:	jne    0x140014a93
   140014afd:	bts    r12d,0xb
   140014b02:	jmp    0x140014a93
   140014b04:	cmp    BYTE PTR [rdi],0x6c
   140014b07:	jne    0x140014b13
   140014b09:	inc    rdi
   140014b0c:	bts    r12d,0xc
   140014b11:	jmp    0x140014a93
   140014b13:	or     r12d,0x10
   140014b17:	jmp    0x140014a93
   140014b1c:	or     r12d,0x20
   140014b20:	jmp    0x140014a93
   140014b25:	mov    al,BYTE PTR [rdi]
   140014b27:	bts    r12d,0xf
   140014b2c:	cmp    al,0x36
   140014b2e:	jne    0x140014b44
   140014b30:	cmp    BYTE PTR [rdi+0x1],0x34
   140014b34:	jne    0x140014b44
   140014b36:	add    rdi,0x2
   140014b3a:	bts    r12d,0xf
   140014b3f:	jmp    0x140014a93
   140014b44:	cmp    al,0x33
   140014b46:	jne    0x140014b5c
   140014b48:	cmp    BYTE PTR [rdi+0x1],0x32
   140014b4c:	jne    0x140014b5c
   140014b4e:	add    rdi,0x2
   140014b52:	btr    r12d,0xf
   140014b57:	jmp    0x140014a93
   140014b5c:	cmp    al,0x64
   140014b5e:	je     0x140014a93
   140014b64:	cmp    al,0x69
   140014b66:	je     0x140014a93
   140014b6c:	cmp    al,0x6f
   140014b6e:	je     0x140014a93
   140014b74:	cmp    al,0x75
   140014b76:	je     0x140014a93
   140014b7c:	cmp    al,0x78
   140014b7e:	je     0x140014a93
   140014b84:	cmp    al,0x58
   140014b86:	je     0x140014a93
   140014b8c:	mov    DWORD PTR [rsp+0x5c],r10d
   140014b91:	lea    rdx,[rsp+0x78]
   140014b96:	movzx  ecx,bpl
   140014b9a:	mov    DWORD PTR [rsp+0x50],r10d
   140014b9f:	call   0x140018588
   140014ba4:	xor    esi,esi
   140014ba6:	cmp    eax,esi
   140014ba8:	je     0x140014bcb
   140014baa:	mov    rdx,QWORD PTR [rsp+0x68]
   140014baf:	lea    r8,[rsp+0x40]
   140014bb4:	mov    cl,bpl
   140014bb7:	call   0x1400140d4
   140014bbc:	mov    bpl,BYTE PTR [rdi]
   140014bbf:	inc    rdi
   140014bc2:	cmp    bpl,sil
   140014bc5:	je     0x140014ccd
   140014bcb:	mov    rdx,QWORD PTR [rsp+0x68]
   140014bd0:	lea    r8,[rsp+0x40]
   140014bd5:	mov    cl,bpl
   140014bd8:	call   0x1400140d4
   140014bdd:	xor    r10d,r10d
   140014be0:	jmp    0x140014a7e
   140014be5:	cmp    bpl,0x2a
   140014be9:	jne    0x140014c04
   140014beb:	mov    r14d,DWORD PTR [r13+0x0]
   140014bef:	add    r13,0x8
   140014bf3:	cmp    r14d,r10d
   140014bf6:	jge    0x140014a93
   140014bfc:	mov    r14d,r15d
   140014bff:	jmp    0x140014a93
   140014c04:	lea    ecx,[r14+r14*4]
   140014c08:	movsx  eax,bpl
   140014c0c:	lea    r14d,[rax+rcx*2-0x30]
   140014c11:	jmp    0x140014a93
   140014c16:	mov    r14d,r10d
   140014c19:	jmp    0x140014a93
   140014c1e:	cmp    bpl,0x2a
   140014c22:	jne    0x140014c41
   140014c24:	mov    eax,DWORD PTR [r13+0x0]
   140014c28:	add    r13,0x8
   140014c2c:	cmp    eax,r10d
   140014c2f:	mov    DWORD PTR [rsp+0x54],eax
   140014c33:	jge    0x140014a93
   140014c39:	or     r12d,0x4
   140014c3d:	neg    eax
   140014c3f:	jmp    0x140014c50
   140014c41:	mov    eax,DWORD PTR [rsp+0x54]
   140014c45:	lea    ecx,[rax+rax*4]
   140014c48:	movsx  eax,bpl
   140014c4c:	lea    eax,[rax+rcx*2-0x30]
   140014c50:	mov    DWORD PTR [rsp+0x54],eax
   140014c54:	jmp    0x140014a93
   140014c59:	cmp    bpl,0x20
   140014c5d:	je     0x140014ca0
   140014c5f:	cmp    bpl,0x23
   140014c63:	je     0x140014c96
   140014c65:	cmp    bpl,0x2b
   140014c69:	je     0x140014c8d
   140014c6b:	cmp    bpl,0x2d
   140014c6f:	je     0x140014c84
   140014c71:	cmp    bpl,0x30
   140014c75:	jne    0x140014a93
   140014c7b:	or     r12d,0x8
   140014c7f:	jmp    0x140014a93
   140014c84:	or     r12d,0x4
   140014c88:	jmp    0x140014a93
   140014c8d:	or     r12d,0x1
   140014c91:	jmp    0x140014a93
   140014c96:	bts    r12d,0x7
   140014c9b:	jmp    0x140014a93
   140014ca0:	or     r12d,0x2
   140014ca4:	jmp    0x140014a93
   140014ca9:	mov    DWORD PTR [rsp+0x70],r10d
   140014cae:	mov    DWORD PTR [rsp+0x58],r10d
   140014cb3:	mov    DWORD PTR [rsp+0x54],r10d
   140014cb8:	mov    DWORD PTR [rsp+0x48],r10d
   140014cbd:	mov    r12d,r10d
   140014cc0:	mov    r14d,r15d
   140014cc3:	mov    DWORD PTR [rsp+0x50],r10d
   140014cc8:	jmp    0x140014a93
   140014ccd:	call   0x14000f574
   140014cd2:	xor    r9d,r9d
   140014cd5:	xor    r8d,r8d
   140014cd8:	xor    edx,edx
   140014cda:	xor    ecx,ecx
   140014cdc:	mov    QWORD PTR [rsp+0x20],rsi
   140014ce1:	mov    DWORD PTR [rax],0x16
   140014ce7:	call   0x14000e4d8
   140014cec:	cmp    BYTE PTR [rsp+0x90],sil
   140014cf4:	jmp    0x140014370
   140014cf9:	int3   
   140014cfa:	int3   
   140014cfb:	int3   
   140014cfc:	sub    rsp,0x38
   140014d00:	test   rcx,rcx
   140014d03:	jne    0x140014d2a
   140014d05:	call   0x14000f574
   140014d0a:	and    QWORD PTR [rsp+0x20],0x0
   140014d10:	xor    r9d,r9d
   140014d13:	xor    r8d,r8d
   140014d16:	xor    edx,edx
   140014d18:	xor    ecx,ecx
   140014d1a:	mov    DWORD PTR [rax],0x16
   140014d20:	call   0x14000e4d8
   140014d25:	or     eax,0xffffffff
   140014d28:	jmp    0x140014d2d
   140014d2a:	mov    eax,DWORD PTR [rcx+0x1c]
   140014d2d:	add    rsp,0x38
   140014d31:	ret    
   140014d32:	int3   
   140014d33:	int3   
   140014d34:	mov    rax,rsp
   140014d37:	mov    QWORD PTR [rax+0x8],rbx
   140014d3b:	mov    QWORD PTR [rax+0x18],rsi
   140014d3f:	mov    QWORD PTR [rax+0x20],rdi
   140014d43:	mov    QWORD PTR [rax+0x10],rdx
   140014d47:	push   r12
   140014d49:	push   r13
   140014d4b:	push   r14
   140014d4d:	sub    rsp,0x30
   140014d51:	mov    r13,r9
   140014d54:	mov    r12,r8
   140014d57:	mov    rdi,rdx
   140014d5a:	mov    r14,rcx
   140014d5d:	xor    ebx,ebx
   140014d5f:	mov    esi,ebx
   140014d61:	mov    eax,ebx
   140014d63:	cmp    rdx,rbx
   140014d66:	setne  al
   140014d69:	cmp    eax,ebx
   140014d6b:	jne    0x140014d94
   140014d6d:	call   0x14000f574
   140014d72:	mov    DWORD PTR [rax],0x16
   140014d78:	mov    QWORD PTR [rsp+0x20],rbx
   140014d7d:	xor    r9d,r9d
   140014d80:	xor    r8d,r8d
   140014d83:	xor    edx,edx
   140014d85:	xor    ecx,ecx
   140014d87:	call   0x14000e4d8
   140014d8c:	or     eax,0xffffffff
   140014d8f:	jmp    0x140014ea5
   140014d94:	mov    eax,ebx
   140014d96:	cmp    r8,rbx
   140014d99:	setne  al
   140014d9c:	cmp    eax,ebx
   140014d9e:	jne    0x140014dc7
   140014da0:	call   0x14000f574
   140014da5:	mov    DWORD PTR [rax],0x16
   140014dab:	mov    QWORD PTR [rsp+0x20],rbx
   140014db0:	xor    r9d,r9d
   140014db3:	xor    r8d,r8d
   140014db6:	xor    edx,edx
   140014db8:	xor    ecx,ecx
   140014dba:	call   0x14000e4d8
   140014dbf:	or     eax,0xffffffff
   140014dc2:	jmp    0x140014ea5
   140014dc7:	mov    rcx,rdx
   140014dca:	call   0x14000a4c4
   140014dcf:	nop
   140014dd0:	test   BYTE PTR [rdi+0x18],0x40
   140014dd4:	jne    0x140014e6f
   140014dda:	mov    rcx,rdi
   140014ddd:	call   0x140014cfc
   140014de2:	cmp    eax,0xffffffff
   140014de5:	je     0x140014e11
   140014de7:	cmp    eax,0xfffffffe
   140014dea:	je     0x140014e11
   140014dec:	movsxd rdx,eax
   140014def:	mov    rcx,rdx
   140014df2:	sar    rcx,0x5
   140014df6:	lea    r8,[rip+0x22f63]        # 0x140037d60
   140014dfd:	and    edx,0x1f
   140014e00:	imul   rdx,rdx,0x58
   140014e04:	add    rdx,QWORD PTR [r8+rcx*8]
   140014e08:	lea    rcx,[rip+0x206b1]        # 0x1400354c0
   140014e0f:	jmp    0x140014e22
   140014e11:	lea    rcx,[rip+0x206a8]        # 0x1400354c0
   140014e18:	mov    rdx,rcx
   140014e1b:	lea    r8,[rip+0x22f3e]        # 0x140037d60
   140014e22:	test   BYTE PTR [rdx+0x38],0x7f
   140014e26:	jne    0x140014e4d
   140014e28:	cmp    eax,0xffffffff
   140014e2b:	je     0x140014e47
   140014e2d:	cmp    eax,0xfffffffe
   140014e30:	je     0x140014e47
   140014e32:	movsxd rcx,eax
   140014e35:	mov    rax,rcx
   140014e38:	sar    rax,0x5
   140014e3c:	and    ecx,0x1f
   140014e3f:	imul   rcx,rcx,0x58
   140014e43:	add    rcx,QWORD PTR [r8+rax*8]
   140014e47:	test   BYTE PTR [rcx+0x38],0x80
   140014e4b:	je     0x140014e6f
   140014e4d:	call   0x14000f574
   140014e52:	mov    DWORD PTR [rax],0x16
   140014e58:	mov    QWORD PTR [rsp+0x20],rbx
   140014e5d:	xor    r9d,r9d
   140014e60:	xor    r8d,r8d
   140014e63:	xor    edx,edx
   140014e65:	xor    ecx,ecx
   140014e67:	call   0x14000e4d8
   140014e6c:	or     esi,0xffffffff
   140014e6f:	cmp    esi,ebx
   140014e71:	jne    0x140014e9b
   140014e73:	mov    rcx,rdi
   140014e76:	call   0x140013fc8
   140014e7b:	mov    ebx,eax
   140014e7d:	mov    r9,QWORD PTR [rsp+0x70]
   140014e82:	mov    r8,r13
   140014e85:	mov    rdx,r12
   140014e88:	mov    rcx,rdi
   140014e8b:	call   r14
   140014e8e:	mov    esi,eax
   140014e90:	mov    rdx,rdi
   140014e93:	mov    ecx,ebx
   140014e95:	call   0x14001409c
   140014e9a:	nop
   140014e9b:	mov    rcx,rdi
   140014e9e:	call   0x14000a554
   140014ea3:	mov    eax,esi
   140014ea5:	mov    rbx,QWORD PTR [rsp+0x50]
   140014eaa:	mov    rsi,QWORD PTR [rsp+0x60]
   140014eaf:	mov    rdi,QWORD PTR [rsp+0x68]
   140014eb4:	add    rsp,0x30
   140014eb8:	pop    r14
   140014eba:	pop    r13
   140014ebc:	pop    r12
   140014ebe:	ret    
   140014ebf:	int3   
   140014ec0:	sub    rsp,0x38
   140014ec4:	mov    QWORD PTR [rsp+0x20],r9
   140014ec9:	mov    r9,r8
   140014ecc:	mov    r8,rdx
   140014ecf:	mov    rdx,rcx
   140014ed2:	lea    rcx,[rip+0xfffffffffffff33b]        # 0x140014214
   140014ed9:	call   0x140014d34
   140014ede:	add    rsp,0x38
   140014ee2:	ret    
   140014ee3:	int3   
   140014ee4:	sub    rsp,0x38
   140014ee8:	mov    QWORD PTR [rsp+0x20],r9
   140014eed:	mov    r9,r8
   140014ef0:	mov    r8,rdx
   140014ef3:	mov    rdx,rcx
   140014ef6:	lea    rcx,[rip+0xa24f]        # 0x14001f14c
   140014efd:	call   0x140014d34
   140014f02:	add    rsp,0x38
   140014f06:	ret    
   140014f07:	int3   
   140014f08:	sub    rsp,0x38
   140014f0c:	mov    QWORD PTR [rsp+0x20],r9
   140014f11:	mov    r9,r8
   140014f14:	mov    r8,rdx
   140014f17:	mov    rdx,rcx
   140014f1a:	lea    rcx,[rip+0xafb3]        # 0x14001fed4
   140014f21:	call   0x140014d34
   140014f26:	add    rsp,0x38
   140014f2a:	ret    
   140014f2b:	int3   
   140014f2c:	sub    rsp,0x38
   140014f30:	mov    QWORD PTR [rsp+0x20],r8
   140014f35:	mov    r8,rdx
   140014f38:	mov    rdx,rcx
   140014f3b:	lea    rcx,[rip+0xfffffffffffff2d2]        # 0x140014214
   140014f42:	xor    r9d,r9d
   140014f45:	call   0x140014d34
   140014f4a:	add    rsp,0x38
   140014f4e:	ret    
   140014f4f:	int3   
   140014f50:	sub    rsp,0x38
   140014f54:	mov    QWORD PTR [rsp+0x20],r8
   140014f59:	mov    r8,rdx
   140014f5c:	mov    rdx,rcx
   140014f5f:	lea    rcx,[rip+0xa1e6]        # 0x14001f14c
   140014f66:	xor    r9d,r9d
   140014f69:	call   0x140014d34
   140014f6e:	add    rsp,0x38
   140014f72:	ret    
   140014f73:	int3   
   140014f74:	sub    rsp,0x38
   140014f78:	mov    QWORD PTR [rsp+0x20],r8
   140014f7d:	mov    r8,rdx
   140014f80:	mov    rdx,rcx
   140014f83:	lea    rcx,[rip+0xaf4a]        # 0x14001fed4
   140014f8a:	xor    r9d,r9d
   140014f8d:	call   0x140014d34
   140014f92:	add    rsp,0x38
   140014f96:	ret    
   140014f97:	int3   
   140014f98:	mov    QWORD PTR [rsp+0x8],rbx
   140014f9d:	mov    QWORD PTR [rsp+0x10],rsi
   140014fa2:	push   r12
   140014fa4:	sub    rsp,0x30
   140014fa8:	xor    esi,esi
   140014faa:	lea    ecx,[rsi+0x1]
   140014fad:	call   0x1400133a8
   140014fb2:	nop
   140014fb3:	lea    ebx,[rsi+0x3]
   140014fb6:	mov    DWORD PTR [rsp+0x20],ebx
   140014fba:	cmp    ebx,DWORD PTR [rip+0x24000]        # 0x140038fc0
   140014fc0:	jge    0x14001502b
   140014fc2:	movsxd r12,ebx
   140014fc5:	mov    rax,QWORD PTR [rip+0x22fdc]        # 0x140037fa8
   140014fcc:	cmp    QWORD PTR [rax+r12*8],0x0
   140014fd1:	je     0x140015023
   140014fd3:	mov    rcx,QWORD PTR [rax+r12*8]
   140014fd7:	test   BYTE PTR [rcx+0x18],0x83
   140014fdb:	je     0x140014fed
   140014fdd:	call   0x14000ab20
   140014fe2:	cmp    eax,0xffffffff
   140014fe5:	je     0x140014fed
   140014fe7:	inc    esi
   140014fe9:	mov    DWORD PTR [rsp+0x24],esi
   140014fed:	cmp    ebx,0x14
   140014ff0:	jl     0x140015023
   140014ff2:	mov    rax,QWORD PTR [rip+0x22faf]        # 0x140037fa8
   140014ff9:	mov    rcx,QWORD PTR [rax+r12*8]
   140014ffd:	add    rcx,0x30
   140015001:	call   QWORD PTR [rip+0x122c9]        # 0x1400272d0
   140015007:	mov    rcx,QWORD PTR [rip+0x22f9a]        # 0x140037fa8
   14001500e:	mov    rcx,QWORD PTR [rcx+r12*8]
   140015012:	call   0x1400098ac
   140015017:	mov    r11,QWORD PTR [rip+0x22f8a]        # 0x140037fa8
   14001501e:	and    QWORD PTR [r11+r12*8],0x0
   140015023:	inc    ebx
   140015025:	mov    DWORD PTR [rsp+0x20],ebx
   140015029:	jmp    0x140014fba
   14001502b:	mov    ecx,0x1
   140015030:	call   0x140013288
   140015035:	mov    eax,esi
   140015037:	mov    rbx,QWORD PTR [rsp+0x40]
   14001503c:	mov    rsi,QWORD PTR [rsp+0x48]
   140015041:	add    rsp,0x30
   140015045:	pop    r12
   140015047:	ret    
   140015048:	mov    QWORD PTR [rsp+0x8],rbx
   14001504d:	mov    QWORD PTR [rsp+0x10],rsi
   140015052:	push   rdi
   140015053:	sub    rsp,0x20
   140015057:	mov    eax,DWORD PTR [rcx+0x18]
   14001505a:	xor    esi,esi
   14001505c:	mov    rbx,rcx
   14001505f:	and    al,0x3
   140015061:	cmp    al,0x2
   140015063:	jne    0x1400150a4
   140015065:	test   DWORD PTR [rcx+0x18],0x108
   14001506c:	je     0x1400150a4
   14001506e:	mov    edi,DWORD PTR [rcx]
   140015070:	sub    edi,DWORD PTR [rcx+0x10]
   140015073:	test   edi,edi
   140015075:	jle    0x1400150a4
   140015077:	call   0x140014cfc
   14001507c:	mov    rdx,QWORD PTR [rbx+0x10]
   140015080:	mov    r8d,edi
   140015083:	mov    ecx,eax
   140015085:	call   0x140018454
   14001508a:	cmp    eax,edi
   14001508c:	jne    0x14001509d
   14001508e:	mov    eax,DWORD PTR [rbx+0x18]
   140015091:	test   al,al
   140015093:	jns    0x1400150a4
   140015095:	and    eax,0xfffffffd
   140015098:	mov    DWORD PTR [rbx+0x18],eax
   14001509b:	jmp    0x1400150a4
   14001509d:	or     DWORD PTR [rbx+0x18],0x20
   1400150a1:	or     esi,0xffffffff
   1400150a4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400150a8:	and    DWORD PTR [rbx+0x8],0x0
   1400150ac:	mov    eax,esi
   1400150ae:	mov    rsi,QWORD PTR [rsp+0x38]
   1400150b3:	mov    QWORD PTR [rbx],rcx
   1400150b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400150bb:	add    rsp,0x20
   1400150bf:	pop    rdi
   1400150c0:	ret    
   1400150c1:	int3   
   1400150c2:	int3   
   1400150c3:	int3   
   1400150c4:	rex push rbx
   1400150c6:	sub    rsp,0x20
   1400150ca:	mov    rbx,rcx
   1400150cd:	test   rcx,rcx
   1400150d0:	jne    0x1400150d9
   1400150d2:	call   0x14001510c
   1400150d7:	jmp    0x140015105
   1400150d9:	call   0x140015048
   1400150de:	test   eax,eax
   1400150e0:	je     0x1400150e7
   1400150e2:	or     eax,0xffffffff
   1400150e5:	jmp    0x140015105
   1400150e7:	bt     DWORD PTR [rbx+0x18],0xe
   1400150ec:	jae    0x140015103
   1400150ee:	mov    rcx,rbx
   1400150f1:	call   0x140014cfc
   1400150f6:	mov    ecx,eax
   1400150f8:	call   0x14002112c
   1400150fd:	neg    eax
   1400150ff:	sbb    eax,eax
   140015101:	jmp    0x140015105
   140015103:	xor    eax,eax
   140015105:	add    rsp,0x20
   140015109:	pop    rbx
   14001510a:	ret    
   14001510b:	int3   
   14001510c:	mov    QWORD PTR [rsp+0x8],rsi
   140015111:	mov    QWORD PTR [rsp+0x10],rdi
   140015116:	mov    QWORD PTR [rsp+0x18],r12
   14001511b:	push   r13
   14001511d:	push   r14
   14001511f:	push   r15
   140015121:	sub    rsp,0x30
   140015125:	mov    r14d,ecx
   140015128:	xor    r12d,r12d
   14001512b:	xor    esi,esi
   14001512d:	lea    ecx,[rsi+0x1]
   140015130:	call   0x1400133a8
   140015135:	nop
   140015136:	xor    edi,edi
   140015138:	mov    DWORD PTR [rsp+0x20],edi
   14001513c:	or     r15d,0xffffffff
   140015140:	cmp    edi,DWORD PTR [rip+0x23e7a]        # 0x140038fc0
   140015146:	jge    0x1400151d2
   14001514c:	movsxd r13,edi
   14001514f:	mov    rax,QWORD PTR [rip+0x22e52]        # 0x140037fa8
   140015156:	cmp    QWORD PTR [rax+r13*8],0x0
   14001515b:	je     0x1400151c7
   14001515d:	mov    rdx,QWORD PTR [rax+r13*8]
   140015161:	test   BYTE PTR [rdx+0x18],0x83
   140015165:	je     0x1400151c7
   140015167:	mov    ecx,edi
   140015169:	call   0x14000a524
   14001516e:	nop
   14001516f:	mov    rax,QWORD PTR [rip+0x22e32]        # 0x140037fa8
   140015176:	mov    rcx,QWORD PTR [rax+r13*8]
   14001517a:	test   BYTE PTR [rcx+0x18],0x83
   14001517e:	je     0x1400151b5
   140015180:	cmp    r14d,0x1
   140015184:	jne    0x14001519a
   140015186:	call   0x1400150c4
   14001518b:	cmp    eax,r15d
   14001518e:	je     0x1400151b5
   140015190:	inc    r12d
   140015193:	mov    DWORD PTR [rsp+0x24],r12d
   140015198:	jmp    0x1400151b5
   14001519a:	test   r14d,r14d
   14001519d:	jne    0x1400151b5
   14001519f:	test   BYTE PTR [rcx+0x18],0x2
   1400151a3:	je     0x1400151b5
   1400151a5:	call   0x1400150c4
   1400151aa:	cmp    eax,r15d
   1400151ad:	cmove  esi,r15d
   1400151b1:	mov    DWORD PTR [rsp+0x28],esi
   1400151b5:	mov    rdx,QWORD PTR [rip+0x22dec]        # 0x140037fa8
   1400151bc:	mov    rdx,QWORD PTR [rdx+r13*8]
   1400151c0:	mov    ecx,edi
   1400151c2:	call   0x14000a5ac
   1400151c7:	inc    edi
   1400151c9:	mov    DWORD PTR [rsp+0x20],edi
   1400151cd:	jmp    0x140015140
   1400151d2:	mov    ecx,0x1
   1400151d7:	call   0x140013288
   1400151dc:	cmp    r14d,0x1
   1400151e0:	cmove  esi,r12d
   1400151e4:	mov    eax,esi
   1400151e6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400151eb:	mov    rdi,QWORD PTR [rsp+0x58]
   1400151f0:	mov    r12,QWORD PTR [rsp+0x60]
   1400151f5:	add    rsp,0x30
   1400151f9:	pop    r15
   1400151fb:	pop    r14
   1400151fd:	pop    r13
   1400151ff:	ret    
   140015200:	mov    QWORD PTR [rsp+0x10],rbx
   140015205:	mov    QWORD PTR [rsp+0x8],rcx
   14001520a:	push   rdi
   14001520b:	sub    rsp,0x20
   14001520f:	mov    rbx,rcx
   140015212:	test   rcx,rcx
   140015215:	jne    0x14001521e
   140015217:	call   0x14001510c
   14001521c:	jmp    0x140015238
   14001521e:	call   0x14000a4c4
   140015223:	nop
   140015224:	mov    rcx,rbx
   140015227:	call   0x1400150c4
   14001522c:	mov    edi,eax
   14001522e:	mov    rcx,rbx
   140015231:	call   0x14000a554
   140015236:	mov    eax,edi
   140015238:	mov    rbx,QWORD PTR [rsp+0x38]
   14001523d:	add    rsp,0x20
   140015241:	pop    rdi
   140015242:	ret    
   140015243:	int3   
   140015244:	mov    ecx,0x1
   140015249:	jmp    0x14001510c
   14001524e:	int3   
   14001524f:	int3   
   140015250:	mov    rax,rsp
   140015253:	mov    QWORD PTR [rax+0x10],rbx
   140015257:	mov    QWORD PTR [rax+0x18],rbp
   14001525b:	mov    QWORD PTR [rax+0x20],rsi
   14001525f:	mov    DWORD PTR [rax+0x8],ecx
   140015262:	push   rdi
   140015263:	sub    rsp,0x20
   140015267:	mov    rcx,rdx
   14001526a:	mov    rbx,rdx
   14001526d:	call   0x140014cfc
   140015272:	mov    ecx,DWORD PTR [rbx+0x18]
   140015275:	movsxd rsi,eax
   140015278:	test   cl,0x82
   14001527b:	jne    0x140015294
   14001527d:	call   0x14000f574
   140015282:	mov    DWORD PTR [rax],0x9
   140015288:	or     DWORD PTR [rbx+0x18],0x20
   14001528c:	or     eax,0xffffffff
   14001528f:	jmp    0x1400153c8
   140015294:	test   cl,0x40
   140015297:	je     0x1400152a6
   140015299:	call   0x14000f574
   14001529e:	mov    DWORD PTR [rax],0x22
   1400152a4:	jmp    0x140015288
   1400152a6:	xor    edi,edi
   1400152a8:	test   cl,0x1
   1400152ab:	je     0x1400152c6
   1400152ad:	mov    DWORD PTR [rbx+0x8],edi
   1400152b0:	test   cl,0x10
   1400152b3:	je     0x140015342
   1400152b9:	mov    rax,QWORD PTR [rbx+0x10]
   1400152bd:	and    ecx,0xfffffffe
   1400152c0:	mov    QWORD PTR [rbx],rax
   1400152c3:	mov    DWORD PTR [rbx+0x18],ecx
   1400152c6:	mov    eax,DWORD PTR [rbx+0x18]
   1400152c9:	mov    DWORD PTR [rbx+0x8],edi
   1400152cc:	and    eax,0xffffffef
   1400152cf:	or     eax,0x2
   1400152d2:	mov    DWORD PTR [rbx+0x18],eax
   1400152d5:	test   eax,0x10c
   1400152da:	jne    0x14001530b
   1400152dc:	call   0x14000a3b0
   1400152e1:	add    rax,0x30
   1400152e5:	cmp    rbx,rax
   1400152e8:	je     0x1400152f8
   1400152ea:	call   0x14000a3b0
   1400152ef:	add    rax,0x60
   1400152f3:	cmp    rbx,rax
   1400152f6:	jne    0x140015303
   1400152f8:	mov    ecx,esi
   1400152fa:	call   0x14001eb14
   1400152ff:	cmp    eax,edi
   140015301:	jne    0x14001530b
   140015303:	mov    rcx,rbx
   140015306:	call   0x140021410
   14001530b:	test   DWORD PTR [rbx+0x18],0x108
   140015312:	je     0x1400153a5
   140015318:	mov    ebp,DWORD PTR [rbx]
   14001531a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001531e:	sub    ebp,DWORD PTR [rbx+0x10]
   140015321:	lea    rax,[rdx+0x1]
   140015325:	mov    QWORD PTR [rbx],rax
   140015328:	mov    eax,DWORD PTR [rbx+0x24]
   14001532b:	dec    eax
   14001532d:	cmp    ebp,edi
   14001532f:	mov    DWORD PTR [rbx+0x8],eax
   140015332:	jle    0x14001534d
   140015334:	mov    r8d,ebp
   140015337:	mov    ecx,esi
   140015339:	call   0x140018454
   14001533e:	mov    edi,eax
   140015340:	jmp    0x140015399
   140015342:	or     ecx,0x20
   140015345:	mov    DWORD PTR [rbx+0x18],ecx
   140015348:	jmp    0x14001528c
   14001534d:	cmp    esi,0xffffffff
   140015350:	je     0x140015375
   140015352:	cmp    esi,0xfffffffe
   140015355:	je     0x140015375
   140015357:	mov    rcx,rsi
   14001535a:	mov    rax,rsi
   14001535d:	lea    rdx,[rip+0x229fc]        # 0x140037d60
   140015364:	and    ecx,0x1f
   140015367:	sar    rax,0x5
   14001536b:	imul   rcx,rcx,0x58
   14001536f:	add    rcx,QWORD PTR [rdx+rax*8]
   140015373:	jmp    0x14001537c
   140015375:	lea    rcx,[rip+0x20144]        # 0x1400354c0
   14001537c:	test   BYTE PTR [rcx+0x8],0x20
   140015380:	je     0x140015399
   140015382:	xor    edx,edx
   140015384:	mov    ecx,esi
   140015386:	lea    r8d,[rdx+0x2]
   14001538a:	call   0x1400212d8
   14001538f:	cmp    rax,0xffffffffffffffff
   140015393:	je     0x140015288
   140015399:	mov    rcx,QWORD PTR [rbx+0x10]
   14001539d:	mov    al,BYTE PTR [rsp+0x30]
   1400153a1:	mov    BYTE PTR [rcx],al
   1400153a3:	jmp    0x1400153bb
   1400153a5:	mov    ebp,0x1
   1400153aa:	lea    rdx,[rsp+0x30]
   1400153af:	mov    ecx,esi
   1400153b1:	mov    r8d,ebp
   1400153b4:	call   0x140018454
   1400153b9:	mov    edi,eax
   1400153bb:	cmp    edi,ebp
   1400153bd:	jne    0x140015288
   1400153c3:	movzx  eax,BYTE PTR [rsp+0x30]
   1400153c8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400153cd:	mov    rbp,QWORD PTR [rsp+0x40]
   1400153d2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400153d7:	add    rsp,0x20
   1400153db:	pop    rdi
   1400153dc:	ret    
   1400153dd:	int3   
   1400153de:	int3   
   1400153df:	int3   
   1400153e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400153e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400153ea:	push   rdi
   1400153eb:	sub    rsp,0x20
   1400153ef:	mov    rsi,r9
   1400153f2:	mov    rdi,r8
   1400153f5:	mov    rbx,rdx
   1400153f8:	cmp    rcx,QWORD PTR [rdx]
   1400153fb:	jne    0x140015461
   1400153fd:	cmp    QWORD PTR [r8],r9
   140015400:	jne    0x14001543f
   140015402:	mov    rcx,QWORD PTR [rbx]
   140015405:	mov    edx,0x2
   14001540a:	call   0x140012c6c
   14001540f:	mov    QWORD PTR [rdi],rax
   140015412:	test   rax,rax
   140015415:	jne    0x14001541b
   140015417:	xor    eax,eax
   140015419:	jmp    0x140015466
   14001541b:	mov    rax,QWORD PTR [rsp+0x50]
   140015420:	mov    rdx,rsi
   140015423:	mov    DWORD PTR [rax],0x1
   140015429:	mov    r8,QWORD PTR [rbx]
   14001542c:	mov    rcx,QWORD PTR [rdi]
   14001542f:	call   0x140008b00
   140015434:	mov    r11,QWORD PTR [rbx]
   140015437:	add    r11,r11
   14001543a:	mov    QWORD PTR [rbx],r11
   14001543d:	jmp    0x140015461
   14001543f:	mov    rdx,QWORD PTR [rdx]
   140015442:	mov    rcx,QWORD PTR [rdi]
   140015445:	mov    r8d,0x2
   14001544b:	call   0x140012d78
   140015450:	test   rax,rax
   140015453:	je     0x140015417
   140015455:	mov    QWORD PTR [rdi],rax
   140015458:	mov    rcx,QWORD PTR [rbx]
   14001545b:	add    rcx,rcx
   14001545e:	mov    QWORD PTR [rbx],rcx
   140015461:	mov    eax,0x1
   140015466:	mov    rbx,QWORD PTR [rsp+0x30]
   14001546b:	mov    rsi,QWORD PTR [rsp+0x38]
   140015470:	add    rsp,0x20
   140015474:	pop    rdi
   140015475:	ret    
   140015476:	int3   
   140015477:	int3   
   140015478:	mov    rax,QWORD PTR [rcx]
   14001547b:	mov    rax,QWORD PTR [rax+0x128]
   140015482:	ret    
   140015483:	int3   
   140015484:	rex push rbx
   140015486:	sub    rsp,0x20
   14001548a:	movsx  ebx,cl
   14001548d:	movzx  ecx,cl
   140015490:	call   0x14000cb2c
   140015495:	mov    ecx,ebx
   140015497:	and    ecx,0xffffffdf
   14001549a:	sub    ecx,0x7
   14001549d:	test   eax,eax
   14001549f:	cmovne ecx,ebx
   1400154a2:	mov    eax,ecx
   1400154a4:	add    rsp,0x20
   1400154a8:	pop    rbx
   1400154a9:	ret    
   1400154aa:	int3   
   1400154ab:	int3   
   1400154ac:	sub    rsp,0x28
   1400154b0:	add    DWORD PTR [rcx+0x8],0xffffffff
   1400154b4:	js     0x1400154c4
   1400154b6:	mov    rax,QWORD PTR [rcx]
   1400154b9:	movzx  edx,BYTE PTR [rax]
   1400154bc:	inc    rax
   1400154bf:	mov    QWORD PTR [rcx],rax
   1400154c2:	jmp    0x1400154cb
   1400154c4:	call   0x140019354
   1400154c9:	mov    edx,eax
   1400154cb:	mov    eax,edx
   1400154cd:	add    rsp,0x28
   1400154d1:	ret    
   1400154d2:	int3   
   1400154d3:	int3   
   1400154d4:	sub    rsp,0x28
   1400154d8:	cmp    ecx,0xffffffff
   1400154db:	je     0x1400154e2
   1400154dd:	call   0x140021464
   1400154e2:	add    rsp,0x28
   1400154e6:	ret    
   1400154e7:	int3   
   1400154e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400154ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400154f2:	push   rdi
   1400154f3:	sub    rsp,0x20
   1400154f7:	mov    rsi,rdx
   1400154fa:	mov    rdi,rcx
   1400154fd:	inc    DWORD PTR [rdi]
   1400154ff:	mov    rcx,rsi
   140015502:	call   0x1400154ac
   140015507:	mov    ebx,eax
   140015509:	cmp    eax,0xffffffff
   14001550c:	je     0x14001551a
   14001550e:	movzx  ecx,al
   140015511:	call   0x14000ccfc
   140015516:	test   eax,eax
   140015518:	jne    0x1400154fd
   14001551a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001551f:	mov    eax,ebx
   140015521:	mov    rbx,QWORD PTR [rsp+0x30]
   140015526:	add    rsp,0x20
   14001552a:	pop    rdi
   14001552b:	ret    
   14001552c:	mov    QWORD PTR [rsp+0x18],rbx
   140015531:	push   rbp
   140015532:	push   rsi
   140015533:	push   rdi
   140015534:	push   r12
   140015536:	push   r13
   140015538:	push   r14
   14001553a:	push   r15
   14001553c:	sub    rsp,0x280
   140015543:	mov    rax,QWORD PTR [rip+0x1ed56]        # 0x1400342a0
   14001554a:	xor    rax,rsp
   14001554d:	mov    QWORD PTR [rsp+0x270],rax
   140015555:	xor    r15d,r15d
   140015558:	lea    r12,[rsp+0x110]
   140015560:	mov    QWORD PTR [rsp+0xb0],r9
   140015568:	mov    rbx,r8
   14001556b:	mov    rbp,rdx
   14001556e:	mov    QWORD PTR [rsp+0x50],rdx
   140015573:	mov    QWORD PTR [rsp+0x70],r12
   140015578:	mov    rsi,rcx
   14001557b:	mov    QWORD PTR [rsp+0x60],rcx
   140015580:	mov    QWORD PTR [rsp+0xa0],0x15e
   14001558c:	mov    DWORD PTR [rsp+0x7c],r15d
   140015591:	mov    WORD PTR [rsp+0x78],r15w
   140015597:	mov    edi,r15d
   14001559a:	mov    DWORD PTR [rsp+0x3c],r15d
   14001559f:	cmp    rdx,r15
   1400155a2:	jne    0x1400155cb
   1400155a4:	call   0x14000f574
   1400155a9:	xor    r9d,r9d
   1400155ac:	xor    r8d,r8d
   1400155af:	xor    edx,edx
   1400155b1:	xor    ecx,ecx
   1400155b3:	mov    QWORD PTR [rsp+0x20],r15
   1400155b8:	mov    DWORD PTR [rax],0x16
   1400155be:	call   0x14000e4d8
   1400155c3:	or     eax,0xffffffff
   1400155c6:	jmp    0x140016681
   1400155cb:	cmp    rcx,r15
   1400155ce:	je     0x1400155a4
   1400155d0:	or     r14d,0xffffffff
   1400155d4:	test   BYTE PTR [rcx+0x18],0x40
   1400155d8:	jne    0x140015669
   1400155de:	call   0x140014cfc
   1400155e3:	lea    rdx,[rip+0x1fed6]        # 0x1400354c0
   1400155ea:	lea    r9,[rip+0x2276f]        # 0x140037d60
   1400155f1:	cmp    eax,r14d
   1400155f4:	je     0x140015613
   1400155f6:	cmp    eax,0xfffffffe
   1400155f9:	je     0x140015613
   1400155fb:	movsxd r8,eax
   1400155fe:	mov    rcx,r8
   140015601:	and    r8d,0x1f
   140015605:	sar    rcx,0x5
   140015609:	imul   r8,r8,0x58
   14001560d:	add    r8,QWORD PTR [r9+rcx*8]
   140015611:	jmp    0x140015616
   140015613:	mov    r8,rdx
   140015616:	test   BYTE PTR [r8+0x38],0x7f
   14001561b:	jne    0x140015642
   14001561d:	cmp    eax,r14d
   140015620:	je     0x14001563c
   140015622:	cmp    eax,0xfffffffe
   140015625:	je     0x14001563c
   140015627:	movsxd rdx,eax
   14001562a:	mov    rax,rdx
   14001562d:	and    edx,0x1f
   140015630:	sar    rax,0x5
   140015634:	imul   rdx,rdx,0x58
   140015638:	add    rdx,QWORD PTR [r9+rax*8]
   14001563c:	test   BYTE PTR [rdx+0x38],0x80
   140015640:	je     0x140015669
   140015642:	call   0x14000f574
   140015647:	xor    r9d,r9d
   14001564a:	xor    r8d,r8d
   14001564d:	xor    edx,edx
   14001564f:	xor    ecx,ecx
   140015651:	mov    QWORD PTR [rsp+0x20],r15
   140015656:	mov    DWORD PTR [rax],0x16
   14001565c:	call   0x14000e4d8
   140015661:	mov    eax,r14d
   140015664:	jmp    0x140016681
   140015669:	lea    rcx,[rsp+0xc0]
   140015671:	mov    rdx,rbx
   140015674:	call   0x1400094b4
   140015679:	mov    al,BYTE PTR [rbp+0x0]
   14001567c:	mov    ebx,r15d
   14001567f:	mov    BYTE PTR [rsp+0x39],r15b
   140015684:	mov    r13d,r15d
   140015687:	mov    DWORD PTR [rsp+0x34],r15d
   14001568c:	mov    DWORD PTR [rsp+0x6c],ebx
   140015690:	cmp    al,r15b
   140015693:	je     0x140016666
   140015699:	mov    ebx,0x1
   14001569e:	mov    r12b,0x25
   1400156a1:	movzx  ecx,al
   1400156a4:	call   0x14000ccfc
   1400156a9:	cmp    eax,r15d
   1400156ac:	je     0x140015706
   1400156ae:	sub    r13d,ebx
   1400156b1:	jmp    0x1400156b8
   1400156b3:	mov    ebx,0x1
   1400156b8:	add    r13d,ebx
   1400156bb:	mov    rcx,rsi
   1400156be:	mov    DWORD PTR [rsp+0x34],r13d
   1400156c3:	call   0x1400154ac
   1400156c8:	mov    ebx,eax
   1400156ca:	cmp    eax,r14d
   1400156cd:	je     0x1400156e6
   1400156cf:	movzx  ecx,al
   1400156d2:	call   0x14000ccfc
   1400156d7:	cmp    eax,r15d
   1400156da:	jne    0x1400156b3
   1400156dc:	mov    rdx,rsi
   1400156df:	mov    ecx,ebx
   1400156e1:	call   0x140021464
   1400156e6:	mov    ebx,0x1
   1400156eb:	add    rbp,rbx
   1400156ee:	movzx  ecx,BYTE PTR [rbp+0x0]
   1400156f2:	call   0x14000ccfc
   1400156f7:	cmp    eax,r15d
   1400156fa:	jne    0x1400156eb
   1400156fc:	mov    QWORD PTR [rsp+0x50],rbp
   140015701:	jmp    0x1400165d8
   140015706:	cmp    BYTE PTR [rbp+0x0],r12b
   14001570a:	jne    0x14001657b
   140015710:	cmp    BYTE PTR [rbp+0x1],r12b
   140015714:	je     0x14001656a
   14001571a:	xor    eax,eax
   14001571c:	mov    DWORD PTR [rsp+0x5c],r15d
   140015721:	mov    BYTE PTR [rsp+0x80],r15b
   140015729:	mov    DWORD PTR [rsp+0x4c],r15d
   14001572e:	mov    edi,r15d
   140015731:	mov    r13d,r15d
   140015734:	mov    BYTE PTR [rsp+0x58],r15b
   140015739:	mov    BYTE PTR [rsp+0x40],r15b
   14001573e:	mov    BYTE PTR [rsp+0x30],r15b
   140015743:	mov    sil,r15b
   140015746:	mov    DWORD PTR [rsp+0xa8],r15d
   14001574e:	mov    r15,QWORD PTR [rsp+0x50]
   140015753:	mov    bpl,al
   140015756:	mov    r12d,eax
   140015759:	mov    BYTE PTR [rsp+0x38],bl
   14001575d:	add    r15,rbx
   140015760:	movzx  ebx,BYTE PTR [r15]
   140015764:	mov    ecx,ebx
   140015766:	call   0x14000cb2c
   14001576b:	xor    edx,edx
   14001576d:	cmp    eax,edx
   14001576f:	je     0x1400157e7
   140015771:	lea    eax,[r13+r13*4+0x0]
   140015776:	inc    edi
   140015778:	lea    r13d,[rbx+rax*2-0x30]
   14001577d:	mov    ebx,0x1
   140015782:	mov    cl,BYTE PTR [rsp+0x30]
   140015786:	cmp    sil,dl
   140015789:	je     0x14001575d
   14001578b:	mov    DWORD PTR [rsp+0x68],edi
   14001578f:	mov    edi,DWORD PTR [rsp+0x3c]
   140015793:	mov    DWORD PTR [rsp+0x44],r12d
   140015798:	mov    r12b,BYTE PTR [rsp+0x80]
   1400157a0:	mov    QWORD PTR [rsp+0x50],r15
   1400157a5:	mov    r15d,DWORD PTR [rsp+0xa8]
   1400157ad:	mov    DWORD PTR [rsp+0x48],r13d
   1400157b2:	cmp    cl,dl
   1400157b4:	jne    0x1400158d7
   1400157ba:	mov    rax,QWORD PTR [rsp+0xb0]
   1400157c2:	mov    QWORD PTR [rsp+0xe0],rax
   1400157ca:	add    rax,0x8
   1400157ce:	mov    QWORD PTR [rsp+0xb0],rax
   1400157d6:	mov    rax,QWORD PTR [rax-0x8]
   1400157da:	mov    QWORD PTR [rsp+0x98],rax
   1400157e2:	jmp    0x1400158df
   1400157e7:	cmp    ebx,0x2a
   1400157ea:	je     0x1400158c3
   1400157f0:	cmp    ebx,0x46
   1400157f3:	je     0x14001577d
   1400157f5:	cmp    ebx,0x49
   1400157f8:	je     0x140015867
   1400157fa:	cmp    ebx,0x4c
   1400157fd:	je     0x140015859
   1400157ff:	cmp    ebx,0x4e
   140015802:	je     0x14001577d
   140015808:	cmp    ebx,0x68
   14001580b:	je     0x14001584c
   14001580d:	cmp    ebx,0x6c
   140015810:	je     0x140015821
   140015812:	cmp    ebx,0x77
   140015815:	mov    ebx,0x1
   14001581a:	je     0x140015844
   14001581c:	jmp    0x1400158bb
   140015821:	cmp    BYTE PTR [r15+0x1],0x6c
   140015826:	mov    ebx,0x1
   14001582b:	jne    0x140015840
   14001582d:	inc    r15
   140015830:	add    r12d,ebx
   140015833:	mov    QWORD PTR [rsp+0x88],rdx
   14001583b:	jmp    0x140015782
   140015840:	add    BYTE PTR [rsp+0x38],bl
   140015844:	add    bpl,bl
   140015847:	jmp    0x140015782
   14001584c:	add    BYTE PTR [rsp+0x38],r14b
   140015851:	add    bpl,r14b
   140015854:	jmp    0x14001577d
   140015859:	mov    ebx,0x1
   14001585e:	add    BYTE PTR [rsp+0x38],bl
   140015862:	jmp    0x140015782
   140015867:	mov    al,BYTE PTR [r15+0x1]
   14001586b:	cmp    al,0x36
   14001586d:	jne    0x140015882
   14001586f:	lea    rcx,[r15+0x2]
   140015873:	cmp    BYTE PTR [rcx],0x34
   140015876:	jne    0x140015882
   140015878:	mov    r15,rcx
   14001587b:	mov    ebx,0x1
   140015880:	jmp    0x140015830
   140015882:	cmp    al,0x33
   140015884:	jne    0x140015897
   140015886:	lea    rcx,[r15+0x2]
   14001588a:	cmp    BYTE PTR [rcx],0x32
   14001588d:	jne    0x140015897
   14001588f:	mov    r15,rcx
   140015892:	jmp    0x14001577d
   140015897:	cmp    al,0x64
   140015899:	je     0x14001587b
   14001589b:	cmp    al,0x69
   14001589d:	je     0x14001587b
   14001589f:	cmp    al,0x6f
   1400158a1:	je     0x14001587b
   1400158a3:	cmp    al,0x78
   1400158a5:	je     0x14001587b
   1400158a7:	cmp    al,0x58
   1400158a9:	je     0x14001587b
   1400158ab:	mov    ebx,0x1
   1400158b0:	mov    QWORD PTR [rsp+0x88],rdx
   1400158b8:	add    r12d,ebx
   1400158bb:	add    sil,bl
   1400158be:	jmp    0x140015782
   1400158c3:	mov    cl,BYTE PTR [rsp+0x30]
   1400158c7:	mov    ebx,0x1
   1400158cc:	add    cl,bl
   1400158ce:	mov    BYTE PTR [rsp+0x30],cl
   1400158d2:	jmp    0x140015786
   1400158d7:	mov    QWORD PTR [rsp+0x98],rdx
   1400158df:	mov    rax,QWORD PTR [rsp+0x50]
   1400158e4:	mov    bl,dl
   1400158e6:	cmp    bpl,dl
   1400158e9:	jne    0x1400158f8
   1400158eb:	cmp    BYTE PTR [rax],0x53
   1400158ee:	je     0x14001596d
   1400158f0:	cmp    BYTE PTR [rax],0x43
   1400158f3:	je     0x14001596d
   1400158f5:	mov    bpl,r14b
   1400158f8:	mov    r8d,0x1
   1400158fe:	movzx  r13d,BYTE PTR [rax]
   140015902:	or     r13d,0x20
   140015906:	mov    DWORD PTR [rsp+0xb8],r13d
   14001590e:	cmp    r13d,0x6e
   140015912:	je     0x14001599c
   140015918:	cmp    r13d,0x63
   14001591c:	je     0x140015978
   14001591e:	cmp    r13d,0x7b
   140015922:	je     0x140015978
   140015924:	mov    rsi,QWORD PTR [rsp+0x60]
   140015929:	mov    r15d,DWORD PTR [rsp+0x34]
   14001592e:	mov    r13d,0x1
   140015934:	mov    rcx,rsi
   140015937:	add    r15d,r13d
   14001593a:	call   0x1400154ac
   14001593f:	mov    edi,eax
   140015941:	mov    DWORD PTR [rsp+0x3c],eax
   140015945:	cmp    eax,r14d
   140015948:	je     0x140015956
   14001594a:	movzx  ecx,al
   14001594d:	call   0x14000ccfc
   140015952:	test   eax,eax
   140015954:	jne    0x140015934
   140015956:	mov    r13d,DWORD PTR [rsp+0xb8]
   14001595e:	mov    DWORD PTR [rsp+0x34],r15d
   140015963:	mov    r15d,DWORD PTR [rsp+0xa8]
   14001596b:	jmp    0x14001598d
   14001596d:	mov    r8d,0x1
   140015973:	mov    bpl,r8b
   140015976:	jmp    0x1400158fe
   140015978:	mov    rcx,QWORD PTR [rsp+0x60]
   14001597d:	add    DWORD PTR [rsp+0x34],r8d
   140015982:	call   0x1400154ac
   140015987:	mov    edi,eax
   140015989:	mov    DWORD PTR [rsp+0x3c],eax
   14001598d:	cmp    edi,r14d
   140015990:	je     0x14001660f
   140015996:	mov    cl,BYTE PTR [rsp+0x30]
   14001599a:	xor    edx,edx
   14001599c:	mov    eax,DWORD PTR [rsp+0x68]
   1400159a0:	mov    esi,DWORD PTR [rsp+0x48]
   1400159a4:	cmp    eax,edx
   1400159a6:	je     0x1400159b0
   1400159a8:	cmp    esi,edx
   1400159aa:	je     0x1400165e5
   1400159b0:	cmp    r13d,0x6f
   1400159b4:	jg     0x140015dd4
   1400159ba:	je     0x1400162d9
   1400159c0:	cmp    r13d,0x63
   1400159c4:	je     0x140015dac
   1400159ca:	cmp    r13d,0x64
   1400159ce:	je     0x1400162d9
   1400159d4:	jle    0x140015e02
   1400159da:	cmp    r13d,0x67
   1400159de:	jle    0x140015a2c
   1400159e0:	cmp    r13d,0x69
   1400159e4:	je     0x140015a0d
   1400159e6:	cmp    r13d,0x6e
   1400159ea:	jne    0x140015e02
   1400159f0:	mov    eax,DWORD PTR [rsp+0x34]
   1400159f4:	xor    r15d,r15d
   1400159f7:	cmp    cl,r15b
   1400159fa:	je     0x140016504
   140015a00:	mov    rbp,QWORD PTR [rsp+0x50]
   140015a05:	mov    r13d,eax
   140015a08:	jmp    0x14001654f
   140015a0d:	mov    r13d,0x64
   140015a13:	mov    r15d,0x1
   140015a19:	cmp    edi,0x2d
   140015a1c:	jne    0x140015f41
   140015a22:	mov    BYTE PTR [rsp+0x40],r15b
   140015a27:	jmp    0x140015f46
   140015a2c:	xor    r15d,r15d
   140015a2f:	mov    rbx,r15
   140015a32:	lea    ebp,[r15+0x1]
   140015a36:	cmp    edi,0x2d
   140015a39:	jne    0x140015a48
   140015a3b:	mov    rax,QWORD PTR [rsp+0x70]
   140015a40:	mov    rbx,rbp
   140015a43:	mov    BYTE PTR [rax],dil
   140015a46:	jmp    0x140015a4d
   140015a48:	cmp    edi,0x2b
   140015a4b:	jne    0x140015a70
   140015a4d:	mov    r12,QWORD PTR [rsp+0x60]
   140015a52:	mov    r13d,DWORD PTR [rsp+0x34]
   140015a57:	sub    esi,ebp
   140015a59:	mov    rcx,r12
   140015a5c:	add    r13d,ebp
   140015a5f:	call   0x1400154ac
   140015a64:	mov    edi,eax
   140015a66:	mov    DWORD PTR [rsp+0x3c],eax
   140015a6a:	mov    eax,DWORD PTR [rsp+0x68]
   140015a6e:	jmp    0x140015a7a
   140015a70:	mov    r12,QWORD PTR [rsp+0x60]
   140015a75:	mov    r13d,DWORD PTR [rsp+0x34]
   140015a7a:	cmp    eax,r15d
   140015a7d:	movzx  ecx,dil
   140015a81:	cmove  esi,r14d
   140015a85:	mov    DWORD PTR [rsp+0x48],esi
   140015a89:	jmp    0x140015aec
   140015a8b:	mov    eax,esi
   140015a8d:	sub    esi,ebp
   140015a8f:	mov    DWORD PTR [rsp+0x48],esi
   140015a93:	cmp    eax,r15d
   140015a96:	je     0x140015af6
   140015a98:	mov    rax,QWORD PTR [rsp+0x70]
   140015a9d:	add    DWORD PTR [rsp+0x4c],ebp
   140015aa1:	lea    r9,[rsp+0x110]
   140015aa9:	mov    BYTE PTR [rbx+rax*1],dil
   140015aad:	lea    rax,[rsp+0x7c]
   140015ab2:	add    rbx,rbp
   140015ab5:	lea    r8,[rsp+0x70]
   140015aba:	lea    rdx,[rsp+0xa0]
   140015ac2:	mov    rcx,rbx
   140015ac5:	mov    QWORD PTR [rsp+0x20],rax
   140015aca:	call   0x1400153e0
   140015acf:	cmp    eax,r15d
   140015ad2:	je     0x14001660f
   140015ad8:	mov    rcx,r12
   140015adb:	add    r13d,ebp
   140015ade:	call   0x1400154ac
   140015ae3:	mov    edi,eax
   140015ae5:	mov    DWORD PTR [rsp+0x3c],eax
   140015ae9:	movzx  ecx,al
   140015aec:	call   0x14000cb2c
   140015af1:	cmp    eax,r15d
   140015af4:	jne    0x140015a8b
   140015af6:	mov    rax,QWORD PTR [rsp+0xc0]
   140015afe:	mov    ebp,DWORD PTR [rsp+0x48]
   140015b02:	mov    rcx,QWORD PTR [rax+0x128]
   140015b09:	mov    rax,QWORD PTR [rcx]
   140015b0c:	mov    ecx,0x1
   140015b11:	mov    sil,BYTE PTR [rax]
   140015b14:	cmp    sil,dil
   140015b17:	jne    0x140015be9
   140015b1d:	mov    eax,ebp
   140015b1f:	sub    ebp,ecx
   140015b21:	cmp    eax,r15d
   140015b24:	je     0x140015be9
   140015b2a:	add    r13d,ecx
   140015b2d:	mov    rcx,r12
   140015b30:	call   0x1400154ac
   140015b35:	lea    r9,[rsp+0x110]
   140015b3d:	lea    r8,[rsp+0x70]
   140015b42:	mov    edi,eax
   140015b44:	mov    DWORD PTR [rsp+0x3c],eax
   140015b48:	mov    rax,QWORD PTR [rsp+0x70]
   140015b4d:	mov    BYTE PTR [rbx+rax*1],sil
   140015b51:	lea    rax,[rsp+0x7c]
   140015b56:	inc    rbx
   140015b59:	lea    rdx,[rsp+0xa0]
   140015b61:	mov    rcx,rbx
   140015b64:	mov    QWORD PTR [rsp+0x20],rax
   140015b69:	call   0x1400153e0
   140015b6e:	cmp    eax,r15d
   140015b71:	je     0x14001660f
   140015b77:	movzx  ecx,dil
   140015b7b:	call   0x14000cb2c
   140015b80:	mov    ecx,0x1
   140015b85:	cmp    eax,r15d
   140015b88:	je     0x140015be9
   140015b8a:	mov    eax,ebp
   140015b8c:	sub    ebp,ecx
   140015b8e:	cmp    eax,r15d
   140015b91:	je     0x140015be9
   140015b93:	mov    rax,QWORD PTR [rsp+0x70]
   140015b98:	add    DWORD PTR [rsp+0x4c],ecx
   140015b9c:	lea    r9,[rsp+0x110]
   140015ba4:	mov    BYTE PTR [rbx+rax*1],dil
   140015ba8:	add    rbx,rcx
   140015bab:	lea    rax,[rsp+0x7c]
   140015bb0:	lea    r8,[rsp+0x70]
   140015bb5:	lea    rdx,[rsp+0xa0]
   140015bbd:	mov    rcx,rbx
   140015bc0:	mov    QWORD PTR [rsp+0x20],rax
   140015bc5:	call   0x1400153e0
   140015bca:	cmp    eax,r15d
   140015bcd:	je     0x14001660f
   140015bd3:	mov    rcx,r12
   140015bd6:	inc    r13d
   140015bd9:	call   0x1400154ac
   140015bde:	mov    edi,eax
   140015be0:	mov    DWORD PTR [rsp+0x3c],eax
   140015be4:	movzx  ecx,al
   140015be7:	jmp    0x140015b7b
   140015be9:	mov    esi,DWORD PTR [rsp+0x4c]
   140015bed:	cmp    esi,r15d
   140015bf0:	je     0x140015d3a
   140015bf6:	cmp    edi,0x65
   140015bf9:	je     0x140015c04
   140015bfb:	cmp    edi,0x45
   140015bfe:	jne    0x140015d3a
   140015c04:	mov    eax,ebp
   140015c06:	sub    ebp,ecx
   140015c08:	cmp    eax,r15d
   140015c0b:	je     0x140015d3a
   140015c11:	mov    rax,QWORD PTR [rsp+0x70]
   140015c16:	lea    r9,[rsp+0x110]
   140015c1e:	lea    r8,[rsp+0x70]
   140015c23:	mov    BYTE PTR [rbx+rax*1],0x65
   140015c27:	add    rbx,rcx
   140015c2a:	lea    rax,[rsp+0x7c]
   140015c2f:	lea    rdx,[rsp+0xa0]
   140015c37:	mov    rcx,rbx
   140015c3a:	mov    QWORD PTR [rsp+0x20],rax
   140015c3f:	call   0x1400153e0
   140015c44:	cmp    eax,r15d
   140015c47:	je     0x14001660f
   140015c4d:	mov    rcx,r12
   140015c50:	inc    r13d
   140015c53:	call   0x1400154ac
   140015c58:	mov    edi,eax
   140015c5a:	mov    DWORD PTR [rsp+0x3c],eax
   140015c5e:	cmp    eax,0x2d
   140015c61:	jne    0x140015ca1
   140015c63:	mov    rax,QWORD PTR [rsp+0x70]
   140015c68:	lea    r9,[rsp+0x110]
   140015c70:	lea    r8,[rsp+0x70]
   140015c75:	mov    BYTE PTR [rbx+rax*1],dil
   140015c79:	lea    rax,[rsp+0x7c]
   140015c7e:	inc    rbx
   140015c81:	lea    rdx,[rsp+0xa0]
   140015c89:	mov    rcx,rbx
   140015c8c:	mov    QWORD PTR [rsp+0x20],rax
   140015c91:	call   0x1400153e0
   140015c96:	cmp    eax,r15d
   140015c99:	je     0x14001660f
   140015c9f:	jmp    0x140015ca6
   140015ca1:	cmp    eax,0x2b
   140015ca4:	jne    0x140015cca
   140015ca6:	mov    eax,ebp
   140015ca8:	mov    ecx,0x1
   140015cad:	sub    ebp,ecx
   140015caf:	cmp    eax,r15d
   140015cb2:	jne    0x140015cb9
   140015cb4:	mov    ebp,r15d
   140015cb7:	jmp    0x140015cca
   140015cb9:	add    r13d,ecx
   140015cbc:	mov    rcx,r12
   140015cbf:	call   0x1400154ac
   140015cc4:	mov    edi,eax
   140015cc6:	mov    DWORD PTR [rsp+0x3c],eax
   140015cca:	movzx  ecx,dil
   140015cce:	jmp    0x140015d30
   140015cd0:	mov    eax,ebp
   140015cd2:	mov    ecx,0x1
   140015cd7:	sub    ebp,ecx
   140015cd9:	cmp    eax,r15d
   140015cdc:	je     0x140015d3a
   140015cde:	mov    rax,QWORD PTR [rsp+0x70]
   140015ce3:	add    esi,ecx
   140015ce5:	lea    r9,[rsp+0x110]
   140015ced:	mov    BYTE PTR [rbx+rax*1],dil
   140015cf1:	add    rbx,rcx
   140015cf4:	lea    rax,[rsp+0x7c]
   140015cf9:	lea    r8,[rsp+0x70]
   140015cfe:	lea    rdx,[rsp+0xa0]
   140015d06:	mov    rcx,rbx
   140015d09:	mov    QWORD PTR [rsp+0x20],rax
   140015d0e:	call   0x1400153e0
   140015d13:	cmp    eax,r15d
   140015d16:	je     0x14001660f
   140015d1c:	mov    rcx,r12
   140015d1f:	inc    r13d
   140015d22:	call   0x1400154ac
   140015d27:	mov    edi,eax
   140015d29:	mov    DWORD PTR [rsp+0x3c],eax
   140015d2d:	movzx  ecx,al
   140015d30:	call   0x14000cb2c
   140015d35:	cmp    eax,r15d
   140015d38:	jne    0x140015cd0
   140015d3a:	mov    eax,0x1
   140015d3f:	sub    r13d,eax
   140015d42:	mov    DWORD PTR [rsp+0x34],r13d
   140015d47:	cmp    edi,r14d
   140015d4a:	je     0x140015d5b
   140015d4c:	mov    rdx,r12
   140015d4f:	mov    ecx,edi
   140015d51:	call   0x140021464
   140015d56:	mov    eax,0x1
   140015d5b:	cmp    esi,r15d
   140015d5e:	je     0x14001660f
   140015d64:	cmp    BYTE PTR [rsp+0x30],r15b
   140015d69:	jne    0x140015da2
   140015d6b:	mov    rsi,QWORD PTR [rsp+0x70]
   140015d70:	add    DWORD PTR [rsp+0x6c],eax
   140015d74:	mov    BYTE PTR [rbx+rsi*1],r15b
   140015d78:	movsx  ebx,BYTE PTR [rsp+0x38]
   140015d7d:	mov    rcx,QWORD PTR [rip+0x1f7e4]        # 0x140035568
   140015d84:	sub    ebx,eax
   140015d86:	call   0x140011758
   140015d8b:	mov    rdx,QWORD PTR [rsp+0x98]
   140015d93:	lea    r9,[rsp+0xc0]
   140015d9b:	mov    r8,rsi
   140015d9e:	mov    ecx,ebx
   140015da0:	call   rax
   140015da2:	mov    rbp,QWORD PTR [rsp+0x50]
   140015da7:	jmp    0x14001654f
   140015dac:	mov    r11d,0x1
   140015db2:	cmp    eax,edx
   140015db4:	jne    0x140015dbe
   140015db6:	mov    DWORD PTR [rsp+0x68],r11d
   140015dbb:	add    esi,r11d
   140015dbe:	cmp    bpl,dl
   140015dc1:	mov    rbp,QWORD PTR [rsp+0x50]
   140015dc6:	jle    0x1400160c5
   140015dcc:	mov    r15b,r11b
   140015dcf:	jmp    0x1400160c5
   140015dd4:	cmp    r13d,0x70
   140015dd8:	je     0x1400162be
   140015dde:	cmp    r13d,0x73
   140015de2:	je     0x1400160af
   140015de8:	cmp    r13d,0x75
   140015dec:	je     0x1400162d9
   140015df2:	cmp    r13d,0x78
   140015df6:	je     0x140015a13
   140015dfc:	cmp    r13d,0x7b
   140015e00:	je     0x140015e44
   140015e02:	mov    rbp,QWORD PTR [rsp+0x50]
   140015e07:	movzx  eax,BYTE PTR [rbp+0x0]
   140015e0b:	cmp    eax,edi
   140015e0d:	jne    0x1400165e5
   140015e13:	mov    dl,BYTE PTR [rsp+0x39]
   140015e17:	mov    r13d,DWORD PTR [rsp+0x34]
   140015e1c:	xor    r15d,r15d
   140015e1f:	add    dl,r14b
   140015e22:	mov    BYTE PTR [rsp+0x39],dl
   140015e26:	cmp    cl,r15b
   140015e29:	jne    0x14001654f
   140015e2f:	mov    r9,QWORD PTR [rsp+0xe0]
   140015e37:	mov    QWORD PTR [rsp+0xb0],r9
   140015e3f:	jmp    0x14001654f
   140015e44:	cmp    bpl,dl
   140015e47:	mov    rbp,QWORD PTR [rsp+0x50]
   140015e4c:	mov    eax,0x1
   140015e51:	movzx  r15d,r15b
   140015e55:	cmovg  r15d,eax
   140015e59:	add    rbp,rax
   140015e5c:	cmp    BYTE PTR [rbp+0x0],0x5e
   140015e60:	jne    0x140015e6a
   140015e62:	inc    rbp
   140015e65:	mov    BYTE PTR [rsp+0x58],r14b
   140015e6a:	xor    edx,edx
   140015e6c:	lea    rcx,[rsp+0xe8]
   140015e74:	lea    r8d,[rdx+0x20]
   140015e78:	call   0x140008a00
   140015e7d:	cmp    BYTE PTR [rbp+0x0],0x5d
   140015e81:	mov    r11d,0x1
   140015e87:	jne    0x140015e97
   140015e89:	mov    r12b,0x5d
   140015e8c:	add    rbp,r11
   140015e8f:	mov    BYTE PTR [rsp+0xf3],0x20
   140015e97:	mov    al,BYTE PTR [rbp+0x0]
   140015e9a:	cmp    al,0x5d
   140015e9c:	je     0x140015f31
   140015ea2:	xor    r14d,r14d
   140015ea5:	add    rbp,r11
   140015ea8:	cmp    al,0x2d
   140015eaa:	jne    0x140015f02
   140015eac:	cmp    r12b,r14b
   140015eaf:	je     0x140015f02
   140015eb1:	mov    cl,BYTE PTR [rbp+0x0]
   140015eb4:	cmp    cl,0x5d
   140015eb7:	je     0x140015f02
   140015eb9:	add    rbp,r11
   140015ebc:	cmp    r12b,cl
   140015ebf:	jae    0x140015ec6
   140015ec1:	mov    r9b,cl
   140015ec4:	jmp    0x140015ecc
   140015ec6:	mov    r9b,r12b
   140015ec9:	mov    r12b,cl
   140015ecc:	cmp    r12b,r9b
   140015ecf:	ja     0x140015efd
   140015ed1:	movzx  r10d,r12b
   140015ed5:	movzx  eax,r12b
   140015ed9:	mov    r8,r10
   140015edc:	mov    edx,r11d
   140015edf:	and    eax,0x7
   140015ee2:	shr    r8,0x3
   140015ee6:	add    r12b,r11b
   140015ee9:	mov    cl,al
   140015eeb:	add    r10,r11
   140015eee:	shl    dl,cl
   140015ef0:	or     BYTE PTR [rsp+r8*1+0xe8],dl
   140015ef8:	cmp    r12b,r9b
   140015efb:	jbe    0x140015ed5
   140015efd:	mov    r12b,r14b
   140015f00:	jmp    0x140015f22
   140015f02:	movzx  r8d,al
   140015f06:	mov    r12b,al
   140015f09:	movzx  eax,al
   140015f0c:	and    eax,0x7
   140015f0f:	mov    edx,r11d
   140015f12:	shr    r8,0x3
   140015f16:	mov    cl,al
   140015f18:	shl    dl,cl
   140015f1a:	or     BYTE PTR [rsp+r8*1+0xe8],dl
   140015f22:	mov    al,BYTE PTR [rbp+0x0]
   140015f25:	cmp    al,0x5d
   140015f27:	jne    0x140015ea5
   140015f2d:	or     r14d,0xffffffff
   140015f31:	xor    ebx,ebx
   140015f33:	cmp    BYTE PTR [rbp+0x0],bl
   140015f36:	je     0x140016611
   140015f3c:	jmp    0x1400160c5
   140015f41:	cmp    edi,0x2b
   140015f44:	jne    0x140015f5e
   140015f46:	sub    esi,r15d
   140015f49:	mov    DWORD PTR [rsp+0x48],esi
   140015f4d:	jne    0x14001602d
   140015f53:	cmp    eax,edx
   140015f55:	je     0x14001602d
   140015f5b:	mov    bl,r15b
   140015f5e:	mov    r12d,DWORD PTR [rsp+0x34]
   140015f63:	mov    rbp,QWORD PTR [rsp+0x60]
   140015f68:	cmp    edi,0x30
   140015f6b:	jne    0x140015fbc
   140015f6d:	add    r12d,r15d
   140015f70:	mov    rcx,rbp
   140015f73:	mov    DWORD PTR [rsp+0x34],r12d
   140015f78:	call   0x1400154ac
   140015f7d:	mov    edi,eax
   140015f7f:	mov    DWORD PTR [rsp+0x3c],eax
   140015f83:	cmp    al,0x78
   140015f85:	je     0x140016077
   140015f8b:	cmp    al,0x58
   140015f8d:	je     0x140016077
   140015f93:	mov    DWORD PTR [rsp+0x4c],r15d
   140015f98:	cmp    r13d,0x78
   140015f9c:	je     0x140016052
   140015fa2:	xor    eax,eax
   140015fa4:	cmp    DWORD PTR [rsp+0x68],eax
   140015fa8:	je     0x140015fb6
   140015faa:	sub    esi,r15d
   140015fad:	mov    DWORD PTR [rsp+0x48],esi
   140015fb1:	jne    0x140015fb6
   140015fb3:	add    bl,r15b
   140015fb6:	mov    r13d,0x6f
   140015fbc:	mov    r12d,DWORD PTR [rsp+0x44]
   140015fc1:	mov    r15,QWORD PTR [rsp+0x60]
   140015fc6:	xor    esi,esi
   140015fc8:	cmp    r12d,esi
   140015fcb:	je     0x1400163ed
   140015fd1:	cmp    bl,sil
   140015fd4:	mov    rsi,QWORD PTR [rsp+0x88]
   140015fdc:	jne    0x1400163cf
   140015fe2:	mov    ebp,DWORD PTR [rsp+0x48]
   140015fe6:	mov    ebx,DWORD PTR [rsp+0x34]
   140015fea:	cmp    r13d,0x78
   140015fee:	je     0x14001632f
   140015ff4:	cmp    r13d,0x70
   140015ff8:	je     0x14001632f
   140015ffe:	movzx  ecx,dil
   140016002:	call   0x14000cb2c
   140016007:	xor    ecx,ecx
   140016009:	cmp    eax,ecx
   14001600b:	je     0x1400163b2
   140016011:	cmp    r13d,0x6f
   140016015:	jne    0x140016326
   14001601b:	cmp    edi,0x38
   14001601e:	jge    0x1400163b2
   140016024:	shl    rsi,0x3
   140016028:	jmp    0x14001636f
   14001602d:	mov    r12d,DWORD PTR [rsp+0x34]
   140016032:	mov    rbp,QWORD PTR [rsp+0x60]
   140016037:	add    r12d,r15d
   14001603a:	mov    rcx,rbp
   14001603d:	mov    DWORD PTR [rsp+0x34],r12d
   140016042:	call   0x1400154ac
   140016047:	mov    edi,eax
   140016049:	mov    DWORD PTR [rsp+0x3c],eax
   14001604d:	jmp    0x140015f68
   140016052:	sub    r12d,r15d
   140016055:	mov    DWORD PTR [rsp+0x34],r12d
   14001605a:	cmp    eax,r14d
   14001605d:	je     0x140016069
   14001605f:	mov    rdx,rbp
   140016062:	mov    ecx,eax
   140016064:	call   0x140021464
   140016069:	mov    edi,0x30
   14001606e:	mov    DWORD PTR [rsp+0x3c],edi
   140016072:	jmp    0x140015fbc
   140016077:	add    r12d,r15d
   14001607a:	mov    rcx,rbp
   14001607d:	mov    DWORD PTR [rsp+0x34],r12d
   140016082:	call   0x1400154ac
   140016087:	mov    edi,eax
   140016089:	mov    DWORD PTR [rsp+0x3c],eax
   14001608d:	xor    eax,eax
   14001608f:	cmp    DWORD PTR [rsp+0x68],eax
   140016093:	je     0x1400160a4
   140016095:	sub    esi,0x2
   140016098:	cmp    esi,r15d
   14001609b:	mov    DWORD PTR [rsp+0x48],esi
   14001609f:	jge    0x1400160a4
   1400160a1:	add    bl,r15b
   1400160a4:	mov    r13d,0x78
   1400160aa:	jmp    0x140015fbc
   1400160af:	cmp    bpl,dl
   1400160b2:	mov    rbp,QWORD PTR [rsp+0x50]
   1400160b7:	movzx  r15d,r15b
   1400160bb:	mov    r11d,0x1
   1400160c1:	cmovg  r15d,r11d
   1400160c5:	mov    ecx,DWORD PTR [rsp+0x34]
   1400160c9:	mov    rbx,QWORD PTR [rsp+0x98]
   1400160d1:	sub    ecx,r11d
   1400160d4:	mov    DWORD PTR [rsp+0x34],ecx
   1400160d8:	cmp    edi,r14d
   1400160db:	je     0x1400160f3
   1400160dd:	mov    rdx,QWORD PTR [rsp+0x60]
   1400160e2:	mov    ecx,edi
   1400160e4:	call   0x140021464
   1400160e9:	mov    ecx,DWORD PTR [rsp+0x34]
   1400160ed:	mov    r11d,0x1
   1400160f3:	mov    r12b,BYTE PTR [rsp+0x58]
   1400160f8:	xor    edx,edx
   1400160fa:	cmp    DWORD PTR [rsp+0x68],edx
   1400160fe:	je     0x14001610d
   140016100:	mov    eax,esi
   140016102:	sub    esi,r11d
   140016105:	cmp    eax,edx
   140016107:	je     0x14001626d
   14001610d:	add    ecx,r11d
   140016110:	mov    DWORD PTR [rsp+0x34],ecx
   140016114:	mov    rcx,QWORD PTR [rsp+0x60]
   140016119:	call   0x1400154ac
   14001611e:	movsxd rdi,eax
   140016121:	mov    DWORD PTR [rsp+0x3c],edi
   140016125:	cmp    edi,r14d
   140016128:	je     0x140016249
   14001612e:	cmp    r13d,0x63
   140016132:	je     0x14001617a
   140016134:	cmp    r13d,0x73
   140016138:	jne    0x14001614d
   14001613a:	cmp    edi,0x9
   14001613d:	jl     0x140016148
   14001613f:	cmp    edi,0xd
   140016142:	jle    0x140016249
   140016148:	cmp    edi,0x20
   14001614b:	jne    0x14001617a
   14001614d:	cmp    r13d,0x7b
   140016151:	jne    0x140016249
   140016157:	mov    rax,rdi
   14001615a:	mov    edx,edi
   14001615c:	sar    rax,0x3
   140016160:	and    edx,0x7
   140016163:	movsx  ecx,BYTE PTR [rsp+rax*1+0xe8]
   14001616b:	movsx  eax,r12b
   14001616f:	xor    ecx,eax
   140016171:	bt     ecx,edx
   140016174:	jae    0x140016249
   14001617a:	xor    edx,edx
   14001617c:	cmp    BYTE PTR [rsp+0x30],dl
   140016180:	jne    0x140016237
   140016186:	cmp    r15b,dl
   140016189:	je     0x140016219
   14001618f:	movzx  ecx,dil
   140016193:	mov    BYTE PTR [rsp+0x90],dil
   14001619b:	call   0x1400185d0
   1400161a0:	test   eax,eax
   1400161a2:	je     0x1400161b9
   1400161a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400161a9:	inc    DWORD PTR [rsp+0x34]
   1400161ad:	call   0x1400154ac
   1400161b2:	mov    BYTE PTR [rsp+0x91],al
   1400161b9:	mov    eax,0x3f
   1400161be:	lea    r9,[rsp+0xc0]
   1400161c6:	lea    rdx,[rsp+0x90]
   1400161ce:	mov    WORD PTR [rsp+0x78],ax
   1400161d3:	mov    rax,QWORD PTR [rsp+0xc0]
   1400161db:	lea    rcx,[rsp+0x78]
   1400161e0:	movsxd r8,DWORD PTR [rax+0x10c]
   1400161e7:	call   0x1400215f0
   1400161ec:	mov    rax,QWORD PTR [rsp+0x98]
   1400161f4:	movzx  r11d,WORD PTR [rsp+0x78]
   1400161fa:	mov    ecx,DWORD PTR [rsp+0x34]
   1400161fe:	mov    WORD PTR [rax],r11w
   140016202:	add    rax,0x2
   140016206:	mov    QWORD PTR [rsp+0x98],rax
   14001620e:	mov    r11d,0x1
   140016214:	jmp    0x1400160f8
   140016219:	mov    rax,QWORD PTR [rsp+0x98]
   140016221:	mov    r11d,0x1
   140016227:	mov    BYTE PTR [rax],dil
   14001622a:	add    rax,r11
   14001622d:	mov    QWORD PTR [rsp+0x98],rax
   140016235:	jmp    0x140016240
   140016237:	mov    r11d,0x1
   14001623d:	add    rbx,r11
   140016240:	mov    ecx,DWORD PTR [rsp+0x34]
   140016244:	jmp    0x1400160fa
   140016249:	mov    r11d,0x1
   14001624f:	sub    DWORD PTR [rsp+0x34],r11d
   140016254:	cmp    edi,r14d
   140016257:	je     0x14001626b
   140016259:	mov    rdx,QWORD PTR [rsp+0x60]
   14001625e:	mov    ecx,edi
   140016260:	call   0x140021464
   140016265:	mov    r11d,0x1
   14001626b:	xor    edx,edx
   14001626d:	mov    rax,QWORD PTR [rsp+0x98]
   140016275:	cmp    rbx,rax
   140016278:	je     0x14001660f
   14001627e:	cmp    BYTE PTR [rsp+0x30],dl
   140016282:	jne    0x140016547
   140016288:	mov    ebx,DWORD PTR [rsp+0x6c]
   14001628c:	add    ebx,r11d
   14001628f:	cmp    r13d,0x63
   140016293:	mov    r13d,DWORD PTR [rsp+0x34]
   140016298:	mov    DWORD PTR [rsp+0x6c],ebx
   14001629c:	je     0x14001654c
   1400162a2:	cmp    r15b,dl
   1400162a5:	je     0x1400162b3
   1400162a7:	xor    r15d,r15d
   1400162aa:	mov    WORD PTR [rax],r15w
   1400162ae:	jmp    0x14001654f
   1400162b3:	xor    r15d,r15d
   1400162b6:	mov    BYTE PTR [rax],r15b
   1400162b9:	jmp    0x14001654f
   1400162be:	mov    r12d,DWORD PTR [rsp+0x44]
   1400162c3:	mov    ecx,0x1
   1400162c8:	mov    QWORD PTR [rsp+0x88],rdx
   1400162d0:	add    r12d,ecx
   1400162d3:	mov    BYTE PTR [rsp+0x38],cl
   1400162d7:	jmp    0x1400162e3
   1400162d9:	mov    r12d,DWORD PTR [rsp+0x44]
   1400162de:	mov    ecx,0x1
   1400162e3:	cmp    edi,0x2d
   1400162e6:	jne    0x1400162ee
   1400162e8:	mov    BYTE PTR [rsp+0x40],cl
   1400162ec:	jmp    0x1400162f7
   1400162ee:	cmp    edi,0x2b
   1400162f1:	jne    0x140015fc1
   1400162f7:	sub    esi,ecx
   1400162f9:	mov    DWORD PTR [rsp+0x48],esi
   1400162fd:	jne    0x14001630a
   1400162ff:	cmp    eax,edx
   140016301:	je     0x14001630a
   140016303:	mov    bl,cl
   140016305:	jmp    0x140015fc1
   14001630a:	add    DWORD PTR [rsp+0x34],ecx
   14001630e:	mov    r15,QWORD PTR [rsp+0x60]
   140016313:	mov    rcx,r15
   140016316:	call   0x1400154ac
   14001631b:	mov    edi,eax
   14001631d:	mov    DWORD PTR [rsp+0x3c],eax
   140016321:	jmp    0x140015fc6
   140016326:	lea    rsi,[rsi+rsi*4]
   14001632a:	add    rsi,rsi
   14001632d:	jmp    0x14001636f
   14001632f:	movzx  esi,dil
   140016333:	mov    ecx,esi
   140016335:	call   0x14000cc14
   14001633a:	xor    ecx,ecx
   14001633c:	cmp    eax,ecx
   14001633e:	je     0x1400163b2
   140016340:	shl    QWORD PTR [rsp+0x88],0x4
   140016349:	mov    ecx,esi
   14001634b:	movsx  ebx,dil
   14001634f:	call   0x14000cb2c
   140016354:	mov    rsi,QWORD PTR [rsp+0x88]
   14001635c:	mov    edi,ebx
   14001635e:	and    edi,0xffffffdf
   140016361:	xor    ecx,ecx
   140016363:	sub    edi,0x7
   140016366:	cmp    eax,ecx
   140016368:	cmovne edi,ebx
   14001636b:	mov    DWORD PTR [rsp+0x3c],edi
   14001636f:	lea    eax,[rdi-0x30]
   140016372:	mov    edx,0x1
   140016377:	add    DWORD PTR [rsp+0x4c],edx
   14001637b:	movsxd rcx,eax
   14001637e:	xor    eax,eax
   140016380:	add    rsi,rcx
   140016383:	mov    QWORD PTR [rsp+0x88],rsi
   14001638b:	cmp    DWORD PTR [rsp+0x68],eax
   14001638f:	je     0x140016395
   140016391:	sub    ebp,edx
   140016393:	je     0x1400163cf
   140016395:	mov    ebx,DWORD PTR [rsp+0x34]
   140016399:	mov    rcx,r15
   14001639c:	add    ebx,edx
   14001639e:	mov    DWORD PTR [rsp+0x34],ebx
   1400163a2:	call   0x1400154ac
   1400163a7:	mov    edi,eax
   1400163a9:	mov    DWORD PTR [rsp+0x3c],eax
   1400163ad:	jmp    0x140015fea
   1400163b2:	dec    ebx
   1400163b4:	mov    DWORD PTR [rsp+0x34],ebx
   1400163b8:	cmp    edi,r14d
   1400163bb:	je     0x1400163c7
   1400163bd:	mov    rdx,r15
   1400163c0:	mov    ecx,edi
   1400163c2:	call   0x140021464
   1400163c7:	mov    rsi,QWORD PTR [rsp+0x88]
   1400163cf:	xor    r15d,r15d
   1400163d2:	cmp    BYTE PTR [rsp+0x40],r15b
   1400163d7:	je     0x1400164de
   1400163dd:	neg    rsi
   1400163e0:	mov    QWORD PTR [rsp+0x88],rsi
   1400163e8:	jmp    0x1400164de
   1400163ed:	cmp    bl,sil
   1400163f0:	mov    esi,DWORD PTR [rsp+0x5c]
   1400163f4:	jne    0x1400164ce
   1400163fa:	mov    ebp,DWORD PTR [rsp+0x48]
   1400163fe:	mov    ebx,DWORD PTR [rsp+0x34]
   140016402:	cmp    r13d,0x78
   140016406:	je     0x14001643d
   140016408:	cmp    r13d,0x70
   14001640c:	je     0x14001643d
   14001640e:	movzx  ecx,dil
   140016412:	call   0x14000cb2c
   140016417:	xor    ecx,ecx
   140016419:	cmp    eax,ecx
   14001641b:	je     0x1400164b5
   140016421:	cmp    r13d,0x6f
   140016425:	jne    0x140016435
   140016427:	cmp    edi,0x38
   14001642a:	jge    0x1400164b5
   140016430:	shl    esi,0x3
   140016433:	jmp    0x14001647b
   140016435:	lea    eax,[rsi+rsi*4]
   140016438:	lea    esi,[rax+rax*1]
   14001643b:	jmp    0x14001647b
   14001643d:	movzx  esi,dil
   140016441:	mov    ecx,esi
   140016443:	call   0x14000cc14
   140016448:	xor    ecx,ecx
   14001644a:	cmp    eax,ecx
   14001644c:	je     0x1400164b5
   14001644e:	mov    eax,DWORD PTR [rsp+0x5c]
   140016452:	mov    ecx,esi
   140016454:	movsx  ebx,dil
   140016458:	shl    eax,0x4
   14001645b:	mov    DWORD PTR [rsp+0x5c],eax
   14001645f:	call   0x14000cb2c
   140016464:	mov    esi,DWORD PTR [rsp+0x5c]
   140016468:	mov    edi,ebx
   14001646a:	xor    ecx,ecx
   14001646c:	and    edi,0xffffffdf
   14001646f:	sub    edi,0x7
   140016472:	cmp    eax,ecx
   140016474:	cmovne edi,ebx
   140016477:	mov    DWORD PTR [rsp+0x3c],edi
   14001647b:	mov    ecx,0x1
   140016480:	lea    esi,[rsi+rdi*1-0x30]
   140016484:	xor    eax,eax
   140016486:	add    DWORD PTR [rsp+0x4c],ecx
   14001648a:	mov    DWORD PTR [rsp+0x5c],esi
   14001648e:	cmp    DWORD PTR [rsp+0x68],eax
   140016492:	je     0x140016498
   140016494:	sub    ebp,ecx
   140016496:	je     0x1400164ce
   140016498:	mov    ebx,DWORD PTR [rsp+0x34]
   14001649c:	add    ebx,ecx
   14001649e:	mov    rcx,r15
   1400164a1:	mov    DWORD PTR [rsp+0x34],ebx
   1400164a5:	call   0x1400154ac
   1400164aa:	mov    edi,eax
   1400164ac:	mov    DWORD PTR [rsp+0x3c],eax
   1400164b0:	jmp    0x140016402
   1400164b5:	dec    ebx
   1400164b7:	mov    DWORD PTR [rsp+0x34],ebx
   1400164bb:	cmp    edi,r14d
   1400164be:	je     0x1400164ca
   1400164c0:	mov    rdx,r15
   1400164c3:	mov    ecx,edi
   1400164c5:	call   0x140021464
   1400164ca:	mov    esi,DWORD PTR [rsp+0x5c]
   1400164ce:	xor    r15d,r15d
   1400164d1:	cmp    BYTE PTR [rsp+0x40],r15b
   1400164d6:	je     0x1400164de
   1400164d8:	neg    esi
   1400164da:	mov    DWORD PTR [rsp+0x5c],esi
   1400164de:	mov    eax,DWORD PTR [rsp+0x4c]
   1400164e2:	cmp    r13d,0x46
   1400164e6:	cmove  eax,r15d
   1400164ea:	cmp    eax,r15d
   1400164ed:	je     0x14001660f
   1400164f3:	cmp    BYTE PTR [rsp+0x30],r15b
   1400164f8:	jne    0x140016521
   1400164fa:	inc    DWORD PTR [rsp+0x6c]
   1400164fe:	mov    eax,DWORD PTR [rsp+0x5c]
   140016502:	jmp    0x140016509
   140016504:	mov    r12d,DWORD PTR [rsp+0x44]
   140016509:	mov    rcx,QWORD PTR [rsp+0x98]
   140016511:	cmp    r12d,r15d
   140016514:	je     0x14001652d
   140016516:	mov    rax,QWORD PTR [rsp+0x88]
   14001651e:	mov    QWORD PTR [rcx],rax
   140016521:	mov    rbp,QWORD PTR [rsp+0x50]
   140016526:	mov    r13d,DWORD PTR [rsp+0x34]
   14001652b:	jmp    0x14001654f
   14001652d:	mov    rbp,QWORD PTR [rsp+0x50]
   140016532:	mov    r13d,DWORD PTR [rsp+0x34]
   140016537:	cmp    BYTE PTR [rsp+0x38],r15b
   14001653c:	je     0x140016542
   14001653e:	mov    DWORD PTR [rcx],eax
   140016540:	jmp    0x14001654f
   140016542:	mov    WORD PTR [rcx],ax
   140016545:	jmp    0x14001654f
   140016547:	mov    r13d,DWORD PTR [rsp+0x34]
   14001654c:	xor    r15d,r15d
   14001654f:	mov    rsi,QWORD PTR [rsp+0x60]
   140016554:	mov    ebx,0x1
   140016559:	mov    r12b,0x25
   14001655c:	add    BYTE PTR [rsp+0x39],bl
   140016560:	add    rbp,rbx
   140016563:	mov    QWORD PTR [rsp+0x50],rbp
   140016568:	jmp    0x1400165c7
   14001656a:	cmp    BYTE PTR [rbp+0x0],r12b
   14001656e:	jne    0x14001657b
   140016570:	lea    rax,[rbp+0x1]
   140016574:	cmp    BYTE PTR [rax],r12b
   140016577:	cmove  rbp,rax
   14001657b:	add    r13d,ebx
   14001657e:	mov    rcx,rsi
   140016581:	mov    DWORD PTR [rsp+0x34],r13d
   140016586:	call   0x1400154ac
   14001658b:	mov    edi,eax
   14001658d:	mov    DWORD PTR [rsp+0x3c],eax
   140016591:	movzx  eax,BYTE PTR [rbp+0x0]
   140016595:	add    rbp,rbx
   140016598:	mov    QWORD PTR [rsp+0x50],rbp
   14001659d:	cmp    eax,edi
   14001659f:	jne    0x140016600
   1400165a1:	movzx  ecx,dil
   1400165a5:	call   0x1400185d0
   1400165aa:	cmp    eax,r15d
   1400165ad:	je     0x1400165c7
   1400165af:	mov    rcx,rsi
   1400165b2:	call   0x1400154ac
   1400165b7:	movzx  ecx,BYTE PTR [rbp+0x0]
   1400165bb:	add    rbp,rbx
   1400165be:	mov    QWORD PTR [rsp+0x50],rbp
   1400165c3:	cmp    ecx,eax
   1400165c5:	jne    0x1400165f1
   1400165c7:	cmp    edi,r14d
   1400165ca:	jne    0x1400165d8
   1400165cc:	cmp    BYTE PTR [rbp+0x0],r12b
   1400165d0:	jne    0x14001660f
   1400165d2:	cmp    BYTE PTR [rbp+0x1],0x6e
   1400165d6:	jne    0x14001660f
   1400165d8:	mov    al,BYTE PTR [rbp+0x0]
   1400165db:	cmp    al,r15b
   1400165de:	je     0x14001660f
   1400165e0:	jmp    0x1400156a1
   1400165e5:	cmp    edi,r14d
   1400165e8:	je     0x14001660f
   1400165ea:	mov    rdx,QWORD PTR [rsp+0x60]
   1400165ef:	jmp    0x140016608
   1400165f1:	cmp    eax,r14d
   1400165f4:	je     0x140016600
   1400165f6:	mov    rdx,rsi
   1400165f9:	mov    ecx,eax
   1400165fb:	call   0x140021464
   140016600:	cmp    edi,r14d
   140016603:	je     0x14001660f
   140016605:	mov    rdx,rsi
   140016608:	mov    ecx,edi
   14001660a:	call   0x140021464
   14001660f:	xor    ebx,ebx
   140016611:	mov    eax,0x1
   140016616:	cmp    DWORD PTR [rsp+0x7c],eax
   14001661a:	jne    0x140016626
   14001661c:	mov    rcx,QWORD PTR [rsp+0x70]
   140016621:	call   0x1400098ac
   140016626:	cmp    edi,r14d
   140016629:	jne    0x14001665f
   14001662b:	mov    eax,DWORD PTR [rsp+0x6c]
   14001662f:	cmp    eax,ebx
   140016631:	jne    0x14001663b
   140016633:	mov    dl,BYTE PTR [rsp+0x39]
   140016637:	cmp    dl,bl
   140016639:	je     0x14001663e
   14001663b:	mov    r14d,eax
   14001663e:	cmp    BYTE PTR [rsp+0xd8],bl
   140016645:	je     0x140015661
   14001664b:	mov    rcx,QWORD PTR [rsp+0xd0]
   140016653:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001665a:	jmp    0x140015661
   14001665f:	mov    ebx,DWORD PTR [rsp+0x6c]
   140016663:	xor    r15d,r15d
   140016666:	cmp    BYTE PTR [rsp+0xd8],r15b
   14001666e:	je     0x14001667f
   140016670:	mov    rcx,QWORD PTR [rsp+0xd0]
   140016678:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001667f:	mov    eax,ebx
   140016681:	mov    rcx,QWORD PTR [rsp+0x270]
   140016689:	xor    rcx,rsp
   14001668c:	call   0x140009080
   140016691:	mov    rbx,QWORD PTR [rsp+0x2d0]
   140016699:	add    rsp,0x280
   1400166a0:	pop    r15
   1400166a2:	pop    r14
   1400166a4:	pop    r13
   1400166a6:	pop    r12
   1400166a8:	pop    rdi
   1400166a9:	pop    rsi
   1400166aa:	pop    rbp
   1400166ab:	ret    
   1400166ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400166b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400166b6:	push   rdi
   1400166b7:	sub    rsp,0x20
   1400166bb:	mov    rsi,r9
   1400166be:	mov    rdi,r8
   1400166c1:	mov    rbx,rdx
   1400166c4:	cmp    rcx,QWORD PTR [rdx]
   1400166c7:	jne    0x14001672d
   1400166c9:	cmp    QWORD PTR [r8],r9
   1400166cc:	jne    0x14001670b
   1400166ce:	mov    rcx,QWORD PTR [rbx]
   1400166d1:	mov    edx,0x2
   1400166d6:	call   0x140012c6c
   1400166db:	mov    QWORD PTR [rdi],rax
   1400166de:	test   rax,rax
   1400166e1:	jne    0x1400166e7
   1400166e3:	xor    eax,eax
   1400166e5:	jmp    0x140016732
   1400166e7:	mov    rax,QWORD PTR [rsp+0x50]
   1400166ec:	mov    rdx,rsi
   1400166ef:	mov    DWORD PTR [rax],0x1
   1400166f5:	mov    r8,QWORD PTR [rbx]
   1400166f8:	mov    rcx,QWORD PTR [rdi]
   1400166fb:	call   0x140008b00
   140016700:	mov    r11,QWORD PTR [rbx]
   140016703:	add    r11,r11
   140016706:	mov    QWORD PTR [rbx],r11
   140016709:	jmp    0x14001672d
   14001670b:	mov    rdx,QWORD PTR [rdx]
   14001670e:	mov    rcx,QWORD PTR [rdi]
   140016711:	mov    r8d,0x2
   140016717:	call   0x140012d78
   14001671c:	test   rax,rax
   14001671f:	je     0x1400166e3
   140016721:	mov    QWORD PTR [rdi],rax
   140016724:	mov    rcx,QWORD PTR [rbx]
   140016727:	add    rcx,rcx
   14001672a:	mov    QWORD PTR [rbx],rcx
   14001672d:	mov    eax,0x1
   140016732:	mov    rbx,QWORD PTR [rsp+0x30]
   140016737:	mov    rsi,QWORD PTR [rsp+0x38]
   14001673c:	add    rsp,0x20
   140016740:	pop    rdi
   140016741:	ret    
   140016742:	int3   
   140016743:	int3   
   140016744:	rex push rbx
   140016746:	sub    rsp,0x20
   14001674a:	movsx  ebx,cl
   14001674d:	movzx  ecx,cl
   140016750:	call   0x14000cb2c
   140016755:	mov    ecx,ebx
   140016757:	and    ecx,0xffffffdf
   14001675a:	sub    ecx,0x7
   14001675d:	test   eax,eax
   14001675f:	cmovne ecx,ebx
   140016762:	mov    eax,ecx
   140016764:	add    rsp,0x20
   140016768:	pop    rbx
   140016769:	ret    
   14001676a:	int3   
   14001676b:	int3   
   14001676c:	sub    rsp,0x28
   140016770:	add    DWORD PTR [rcx+0x8],0xffffffff
   140016774:	js     0x140016784
   140016776:	mov    rax,QWORD PTR [rcx]
   140016779:	movzx  edx,BYTE PTR [rax]
   14001677c:	inc    rax
   14001677f:	mov    QWORD PTR [rcx],rax
   140016782:	jmp    0x14001678b
   140016784:	call   0x140019354
   140016789:	mov    edx,eax
   14001678b:	mov    eax,edx
   14001678d:	add    rsp,0x28
   140016791:	ret    
   140016792:	int3   
   140016793:	int3   
   140016794:	sub    rsp,0x28
   140016798:	cmp    ecx,0xffffffff
   14001679b:	je     0x1400167a2
   14001679d:	call   0x140021464
   1400167a2:	add    rsp,0x28
   1400167a6:	ret    
   1400167a7:	int3   
   1400167a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400167ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400167b2:	push   rdi
   1400167b3:	sub    rsp,0x20
   1400167b7:	mov    rsi,rdx
   1400167ba:	mov    rdi,rcx
   1400167bd:	inc    DWORD PTR [rdi]
   1400167bf:	mov    rcx,rsi
   1400167c2:	call   0x14001676c
   1400167c7:	mov    ebx,eax
   1400167c9:	cmp    eax,0xffffffff
   1400167cc:	je     0x1400167da
   1400167ce:	movzx  ecx,al
   1400167d1:	call   0x14000ccfc
   1400167d6:	test   eax,eax
   1400167d8:	jne    0x1400167bd
   1400167da:	mov    rsi,QWORD PTR [rsp+0x38]
   1400167df:	mov    eax,ebx
   1400167e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400167e6:	add    rsp,0x20
   1400167ea:	pop    rdi
   1400167eb:	ret    
   1400167ec:	mov    r11,rsp
   1400167ef:	mov    QWORD PTR [r11+0x18],rbx
   1400167f3:	push   rbp
   1400167f4:	push   rsi
   1400167f5:	push   rdi
   1400167f6:	push   r12
   1400167f8:	push   r13
   1400167fa:	push   r14
   1400167fc:	push   r15
   1400167fe:	sub    rsp,0x280
   140016805:	mov    rax,QWORD PTR [rip+0x1da94]        # 0x1400342a0
   14001680c:	xor    rax,rsp
   14001680f:	mov    QWORD PTR [rsp+0x270],rax
   140016817:	xor    r14d,r14d
   14001681a:	lea    r12,[r11-0x1a8]
   140016821:	mov    QWORD PTR [rsp+0xb8],r9
   140016829:	mov    QWORD PTR [rsp+0x78],r12
   14001682e:	mov    rbx,r8
   140016831:	mov    rsi,rdx
   140016834:	mov    QWORD PTR [rsp+0x70],rdx
   140016839:	mov    rbp,rcx
   14001683c:	mov    QWORD PTR [rsp+0x68],rcx
   140016841:	mov    r12d,r14d
   140016844:	mov    QWORD PTR [r11-0x218],0x15e
   14001684f:	mov    DWORD PTR [r11-0x234],r14d
   140016856:	mov    WORD PTR [r11-0x238],r14w
   14001685e:	mov    edi,r14d
   140016861:	mov    DWORD PTR [rsp+0x3c],r14d
   140016866:	mov    DWORD PTR [rsp+0x44],r14d
   14001686b:	cmp    rdx,r14
   14001686e:	jne    0x140016897
   140016870:	call   0x14000f574
   140016875:	xor    r9d,r9d
   140016878:	xor    r8d,r8d
   14001687b:	xor    edx,edx
   14001687d:	xor    ecx,ecx
   14001687f:	mov    QWORD PTR [rsp+0x20],r14
   140016884:	mov    DWORD PTR [rax],0x16
   14001688a:	call   0x14000e4d8
   14001688f:	or     eax,0xffffffff
   140016892:	jmp    0x140017abc
   140016897:	cmp    rcx,r14
   14001689a:	je     0x140016870
   14001689c:	or     r15d,0xffffffff
   1400168a0:	test   BYTE PTR [rcx+0x18],0x40
   1400168a4:	jne    0x140016935
   1400168aa:	call   0x140014cfc
   1400168af:	lea    rdx,[rip+0x1ec0a]        # 0x1400354c0
   1400168b6:	lea    r9,[rip+0x214a3]        # 0x140037d60
   1400168bd:	cmp    eax,r15d
   1400168c0:	je     0x1400168df
   1400168c2:	cmp    eax,0xfffffffe
   1400168c5:	je     0x1400168df
   1400168c7:	movsxd r8,eax
   1400168ca:	mov    rcx,r8
   1400168cd:	and    r8d,0x1f
   1400168d1:	sar    rcx,0x5
   1400168d5:	imul   r8,r8,0x58
   1400168d9:	add    r8,QWORD PTR [r9+rcx*8]
   1400168dd:	jmp    0x1400168e2
   1400168df:	mov    r8,rdx
   1400168e2:	test   BYTE PTR [r8+0x38],0x7f
   1400168e7:	jne    0x14001690e
   1400168e9:	cmp    eax,r15d
   1400168ec:	je     0x140016908
   1400168ee:	cmp    eax,0xfffffffe
   1400168f1:	je     0x140016908
   1400168f3:	movsxd rdx,eax
   1400168f6:	mov    rax,rdx
   1400168f9:	and    edx,0x1f
   1400168fc:	sar    rax,0x5
   140016900:	imul   rdx,rdx,0x58
   140016904:	add    rdx,QWORD PTR [r9+rax*8]
   140016908:	test   BYTE PTR [rdx+0x38],0x80
   14001690c:	je     0x140016935
   14001690e:	call   0x14000f574
   140016913:	xor    r9d,r9d
   140016916:	xor    r8d,r8d
   140016919:	xor    edx,edx
   14001691b:	xor    ecx,ecx
   14001691d:	mov    QWORD PTR [rsp+0x20],r14
   140016922:	mov    DWORD PTR [rax],0x16
   140016928:	call   0x14000e4d8
   14001692d:	mov    eax,r15d
   140016930:	jmp    0x140017abc
   140016935:	lea    rcx,[rsp+0xd0]
   14001693d:	mov    rdx,rbx
   140016940:	call   0x1400094b4
   140016945:	mov    al,BYTE PTR [rsi]
   140016947:	mov    ebx,r14d
   14001694a:	mov    BYTE PTR [rsp+0x39],r14b
   14001694f:	mov    r13d,r14d
   140016952:	mov    DWORD PTR [rsp+0x34],r14d
   140016957:	mov    DWORD PTR [rsp+0x64],ebx
   14001695b:	cmp    al,r14b
   14001695e:	je     0x140017aa1
   140016964:	mov    ebx,0x1
   140016969:	mov    r12b,0x25
   14001696c:	movzx  ecx,al
   14001696f:	call   0x14000ccfc
   140016974:	cmp    eax,r14d
   140016977:	je     0x1400169d0
   140016979:	sub    r13d,ebx
   14001697c:	jmp    0x140016983
   14001697e:	mov    ebx,0x1
   140016983:	add    r13d,ebx
   140016986:	mov    rcx,rbp
   140016989:	mov    DWORD PTR [rsp+0x34],r13d
   14001698e:	call   0x14001676c
   140016993:	mov    ebx,eax
   140016995:	cmp    eax,r15d
   140016998:	je     0x1400169b1
   14001699a:	movzx  ecx,al
   14001699d:	call   0x14000ccfc
   1400169a2:	cmp    eax,r14d
   1400169a5:	jne    0x14001697e
   1400169a7:	mov    rdx,rbp
   1400169aa:	mov    ecx,ebx
   1400169ac:	call   0x140021464
   1400169b1:	mov    ebx,0x1
   1400169b6:	add    rsi,rbx
   1400169b9:	movzx  ecx,BYTE PTR [rsi]
   1400169bc:	call   0x14000ccfc
   1400169c1:	cmp    eax,r14d
   1400169c4:	jne    0x1400169b6
   1400169c6:	mov    QWORD PTR [rsp+0x70],rsi
   1400169cb:	jmp    0x140017948
   1400169d0:	cmp    BYTE PTR [rsi],r12b
   1400169d3:	jne    0x1400178e6
   1400169d9:	cmp    BYTE PTR [rsi+0x1],r12b
   1400169dd:	je     0x1400178d6
   1400169e3:	xor    eax,eax
   1400169e5:	mov    DWORD PTR [rsp+0x5c],r14d
   1400169ea:	mov    BYTE PTR [rsp+0x4c],r14b
   1400169ef:	mov    DWORD PTR [rsp+0x58],r14d
   1400169f4:	mov    edi,r14d
   1400169f7:	mov    r12d,r14d
   1400169fa:	mov    QWORD PTR [rsp+0xc8],r14
   140016a02:	mov    BYTE PTR [rsp+0x54],r14b
   140016a07:	mov    BYTE PTR [rsp+0x40],r14b
   140016a0c:	mov    BYTE PTR [rsp+0x30],r14b
   140016a11:	mov    sil,r14b
   140016a14:	mov    DWORD PTR [rsp+0xa8],r14d
   140016a1c:	mov    r14,QWORD PTR [rsp+0x70]
   140016a21:	mov    bpl,al
   140016a24:	mov    r13d,eax
   140016a27:	mov    BYTE PTR [rsp+0x38],bl
   140016a2b:	add    r14,rbx
   140016a2e:	movzx  ebx,BYTE PTR [r14]
   140016a32:	mov    ecx,ebx
   140016a34:	call   0x14000cb2c
   140016a39:	xor    r8d,r8d
   140016a3c:	cmp    eax,r8d
   140016a3f:	je     0x140016ab4
   140016a41:	lea    eax,[r12+r12*4]
   140016a45:	inc    edi
   140016a47:	lea    r12d,[rbx+rax*2-0x30]
   140016a4c:	mov    ebx,0x1
   140016a51:	mov    dl,BYTE PTR [rsp+0x30]
   140016a55:	cmp    sil,r8b
   140016a58:	je     0x140016a2b
   140016a5a:	mov    DWORD PTR [rsp+0x60],edi
   140016a5e:	mov    edi,DWORD PTR [rsp+0x3c]
   140016a62:	mov    DWORD PTR [rsp+0x50],r13d
   140016a67:	mov    r13b,BYTE PTR [rsp+0x4c]
   140016a6c:	mov    QWORD PTR [rsp+0x70],r14
   140016a71:	mov    r14d,DWORD PTR [rsp+0xa8]
   140016a79:	mov    DWORD PTR [rsp+0x48],r12d
   140016a7e:	cmp    dl,r8b
   140016a81:	jne    0x140016ba2
   140016a87:	mov    rax,QWORD PTR [rsp+0xb8]
   140016a8f:	mov    QWORD PTR [rsp+0xb0],rax
   140016a97:	add    rax,0x8
   140016a9b:	mov    QWORD PTR [rsp+0xb8],rax
   140016aa3:	mov    rax,QWORD PTR [rax-0x8]
   140016aa7:	mov    QWORD PTR [rsp+0x90],rax
   140016aaf:	jmp    0x140016baa
   140016ab4:	cmp    ebx,0x2a
   140016ab7:	je     0x140016b8e
   140016abd:	cmp    ebx,0x46
   140016ac0:	je     0x140016a4c
   140016ac2:	cmp    ebx,0x49
   140016ac5:	je     0x140016b34
   140016ac7:	cmp    ebx,0x4c
   140016aca:	je     0x140016b26
   140016acc:	cmp    ebx,0x4e
   140016acf:	je     0x140016a4c
   140016ad5:	cmp    ebx,0x68
   140016ad8:	je     0x140016b19
   140016ada:	cmp    ebx,0x6c
   140016add:	je     0x140016aee
   140016adf:	cmp    ebx,0x77
   140016ae2:	mov    ebx,0x1
   140016ae7:	je     0x140016b11
   140016ae9:	jmp    0x140016b86
   140016aee:	cmp    BYTE PTR [r14+0x1],0x6c
   140016af3:	mov    ebx,0x1
   140016af8:	jne    0x140016b0d
   140016afa:	inc    r14
   140016afd:	add    r13d,ebx
   140016b00:	mov    QWORD PTR [rsp+0x88],r8
   140016b08:	jmp    0x140016a51
   140016b0d:	add    BYTE PTR [rsp+0x38],bl
   140016b11:	add    bpl,bl
   140016b14:	jmp    0x140016a51
   140016b19:	add    BYTE PTR [rsp+0x38],r15b
   140016b1e:	add    bpl,r15b
   140016b21:	jmp    0x140016a4c
   140016b26:	mov    ebx,0x1
   140016b2b:	add    BYTE PTR [rsp+0x38],bl
   140016b2f:	jmp    0x140016a51
   140016b34:	mov    al,BYTE PTR [r14+0x1]
   140016b38:	cmp    al,0x36
   140016b3a:	jne    0x140016b4e
   140016b3c:	cmp    BYTE PTR [r14+0x2],0x34
   140016b41:	jne    0x140016b4e
   140016b43:	add    r14,0x2
   140016b47:	mov    ebx,0x1
   140016b4c:	jmp    0x140016afd
   140016b4e:	cmp    al,0x33
   140016b50:	jne    0x140016b62
   140016b52:	cmp    BYTE PTR [r14+0x2],0x32
   140016b57:	jne    0x140016b62
   140016b59:	add    r14,0x2
   140016b5d:	jmp    0x140016a4c
   140016b62:	cmp    al,0x64
   140016b64:	je     0x140016b47
   140016b66:	cmp    al,0x69
   140016b68:	je     0x140016b47
   140016b6a:	cmp    al,0x6f
   140016b6c:	je     0x140016b47
   140016b6e:	cmp    al,0x78
   140016b70:	je     0x140016b47
   140016b72:	cmp    al,0x58
   140016b74:	je     0x140016b47
   140016b76:	mov    ebx,0x1
   140016b7b:	mov    QWORD PTR [rsp+0x88],r8
   140016b83:	add    r13d,ebx
   140016b86:	add    sil,bl
   140016b89:	jmp    0x140016a51
   140016b8e:	mov    dl,BYTE PTR [rsp+0x30]
   140016b92:	mov    ebx,0x1
   140016b97:	add    dl,bl
   140016b99:	mov    BYTE PTR [rsp+0x30],dl
   140016b9d:	jmp    0x140016a55
   140016ba2:	mov    QWORD PTR [rsp+0x90],r8
   140016baa:	mov    r10,QWORD PTR [rsp+0x70]
   140016baf:	mov    bl,r8b
   140016bb2:	cmp    bpl,r8b
   140016bb5:	jne    0x140016bca
   140016bb7:	cmp    BYTE PTR [r10],0x53
   140016bbb:	je     0x140016c44
   140016bc1:	cmp    BYTE PTR [r10],0x43
   140016bc5:	je     0x140016c44
   140016bc7:	mov    bpl,r15b
   140016bca:	mov    eax,0x1
   140016bcf:	movzx  r12d,BYTE PTR [r10]
   140016bd3:	or     r12d,0x20
   140016bd7:	mov    DWORD PTR [rsp+0xc0],r12d
   140016bdf:	cmp    r12d,0x6e
   140016be3:	je     0x140016c77
   140016be9:	cmp    r12d,0x63
   140016bed:	je     0x140016c4e
   140016bef:	cmp    r12d,0x7b
   140016bf3:	je     0x140016c4e
   140016bf5:	mov    rsi,QWORD PTR [rsp+0x68]
   140016bfa:	mov    r14d,DWORD PTR [rsp+0x34]
   140016bff:	xor    r12d,r12d
   140016c02:	lea    ebx,[r12+0x1]
   140016c07:	mov    rcx,rsi
   140016c0a:	add    r14d,ebx
   140016c0d:	call   0x14001676c
   140016c12:	mov    edi,eax
   140016c14:	mov    DWORD PTR [rsp+0x3c],eax
   140016c18:	cmp    eax,r15d
   140016c1b:	je     0x140016c2a
   140016c1d:	movzx  ecx,al
   140016c20:	call   0x14000ccfc
   140016c25:	cmp    eax,r12d
   140016c28:	jne    0x140016c07
   140016c2a:	mov    DWORD PTR [rsp+0x34],r14d
   140016c2f:	mov    r14d,DWORD PTR [rsp+0xa8]
   140016c37:	mov    bl,r12b
   140016c3a:	mov    r12d,DWORD PTR [rsp+0xc0]
   140016c42:	jmp    0x140016c62
   140016c44:	mov    eax,0x1
   140016c49:	mov    bpl,al
   140016c4c:	jmp    0x140016bcf
   140016c4e:	mov    rcx,QWORD PTR [rsp+0x68]
   140016c53:	add    DWORD PTR [rsp+0x34],eax
   140016c57:	call   0x14001676c
   140016c5c:	mov    edi,eax
   140016c5e:	mov    DWORD PTR [rsp+0x3c],eax
   140016c62:	cmp    edi,r15d
   140016c65:	je     0x140017965
   140016c6b:	mov    r10,QWORD PTR [rsp+0x70]
   140016c70:	mov    dl,BYTE PTR [rsp+0x30]
   140016c74:	xor    r8d,r8d
   140016c77:	mov    ecx,DWORD PTR [rsp+0x60]
   140016c7b:	mov    eax,DWORD PTR [rsp+0x48]
   140016c7f:	cmp    ecx,r8d
   140016c82:	je     0x140016c8d
   140016c84:	cmp    eax,r8d
   140016c87:	je     0x140017954
   140016c8d:	cmp    dl,r8b
   140016c90:	jne    0x140016d4b
   140016c96:	cmp    r12d,0x63
   140016c9a:	je     0x140016cac
   140016c9c:	cmp    r12d,0x73
   140016ca0:	je     0x140016cac
   140016ca2:	cmp    r12d,0x7b
   140016ca6:	jne    0x140016d4b
   140016cac:	mov    r8,QWORD PTR [rsp+0xb0]
   140016cb4:	mov    r11d,0x1
   140016cba:	mov    rcx,QWORD PTR [r8]
   140016cbd:	add    r8,0x8
   140016cc1:	mov    esi,DWORD PTR [r8]
   140016cc4:	mov    r9,r8
   140016cc7:	mov    QWORD PTR [rsp+0xb0],r8
   140016ccf:	add    r8,0x8
   140016cd3:	mov    QWORD PTR [rsp+0x90],rcx
   140016cdb:	mov    QWORD PTR [rsp+0xb8],r8
   140016ce3:	cmp    rsi,r11
   140016ce6:	jb     0x1400179c1
   140016cec:	mov    ecx,DWORD PTR [rsp+0x60]
   140016cf0:	xor    r8d,r8d
   140016cf3:	cmp    r12d,0x6f
   140016cf7:	jg     0x140017134
   140016cfd:	je     0x140017662
   140016d03:	cmp    r12d,0x63
   140016d07:	je     0x140017112
   140016d0d:	cmp    r12d,0x64
   140016d11:	je     0x140017662
   140016d17:	jle    0x140017162
   140016d1d:	cmp    r12d,0x67
   140016d21:	jle    0x140016d7a
   140016d23:	cmp    r12d,0x69
   140016d27:	je     0x140016d63
   140016d29:	cmp    r12d,0x6e
   140016d2d:	jne    0x140017162
   140016d33:	mov    eax,DWORD PTR [rsp+0x34]
   140016d37:	xor    r14d,r14d
   140016d3a:	cmp    dl,r14b
   140016d3d:	je     0x14001787b
   140016d43:	mov    r13d,eax
   140016d46:	jmp    0x1400178b6
   140016d4b:	mov    rsi,QWORD PTR [rsp+0xc8]
   140016d53:	mov    r9,QWORD PTR [rsp+0xb0]
   140016d5b:	mov    r11d,0x1
   140016d61:	jmp    0x140016cf3
   140016d63:	mov    r12d,0x64
   140016d69:	cmp    edi,0x2d
   140016d6c:	jne    0x1400172a8
   140016d72:	mov    r14b,r11b
   140016d75:	jmp    0x1400172b2
   140016d7a:	xor    r14d,r14d
   140016d7d:	mov    rbx,r14
   140016d80:	cmp    edi,0x2d
   140016d83:	jne    0x140016d92
   140016d85:	mov    rax,QWORD PTR [rsp+0x78]
   140016d8a:	mov    rbx,r11
   140016d8d:	mov    BYTE PTR [rax],dil
   140016d90:	jmp    0x140016d97
   140016d92:	cmp    edi,0x2b
   140016d95:	jne    0x140016dbb
   140016d97:	mov    r12,QWORD PTR [rsp+0x68]
   140016d9c:	mov    ebp,DWORD PTR [rsp+0x48]
   140016da0:	mov    r13d,DWORD PTR [rsp+0x34]
   140016da5:	mov    rcx,r12
   140016da8:	sub    ebp,r11d
   140016dab:	add    r13d,r11d
   140016dae:	call   0x14001676c
   140016db3:	mov    edi,eax
   140016db5:	mov    DWORD PTR [rsp+0x3c],eax
   140016db9:	jmp    0x140016dc9
   140016dbb:	mov    ebp,DWORD PTR [rsp+0x48]
   140016dbf:	mov    r12,QWORD PTR [rsp+0x68]
   140016dc4:	mov    r13d,DWORD PTR [rsp+0x34]
   140016dc9:	cmp    DWORD PTR [rsp+0x60],r14d
   140016dce:	movzx  ecx,dil
   140016dd2:	cmove  ebp,r15d
   140016dd6:	call   0x14000cb2c
   140016ddb:	cmp    eax,r14d
   140016dde:	je     0x140016e4f
   140016de0:	mov    esi,0x1
   140016de5:	mov    eax,ebp
   140016de7:	sub    ebp,esi
   140016de9:	cmp    eax,r14d
   140016dec:	je     0x140016e4f
   140016dee:	mov    rax,QWORD PTR [rsp+0x78]
   140016df3:	add    DWORD PTR [rsp+0x58],esi
   140016df7:	lea    r9,[rsp+0x110]
   140016dff:	mov    BYTE PTR [rbx+rax*1],dil
   140016e03:	lea    rax,[rsp+0x84]
   140016e0b:	add    rbx,rsi
   140016e0e:	lea    r8,[rsp+0x78]
   140016e13:	lea    rdx,[rsp+0xa0]
   140016e1b:	mov    rcx,rbx
   140016e1e:	mov    QWORD PTR [rsp+0x20],rax
   140016e23:	call   0x1400166ac
   140016e28:	cmp    eax,r14d
   140016e2b:	je     0x1400179dd
   140016e31:	mov    rcx,r12
   140016e34:	add    r13d,esi
   140016e37:	call   0x14001676c
   140016e3c:	movzx  ecx,al
   140016e3f:	mov    edi,eax
   140016e41:	mov    DWORD PTR [rsp+0x3c],eax
   140016e45:	call   0x14000cb2c
   140016e4a:	cmp    eax,r14d
   140016e4d:	jne    0x140016de5
   140016e4f:	mov    rax,QWORD PTR [rsp+0xd0]
   140016e57:	mov    rcx,QWORD PTR [rax+0x128]
   140016e5e:	mov    rax,QWORD PTR [rcx]
   140016e61:	mov    ecx,0x1
   140016e66:	mov    sil,BYTE PTR [rax]
   140016e69:	cmp    sil,dil
   140016e6c:	jne    0x140016f47
   140016e72:	mov    eax,ebp
   140016e74:	sub    ebp,ecx
   140016e76:	cmp    eax,r14d
   140016e79:	je     0x140016f47
   140016e7f:	add    r13d,ecx
   140016e82:	mov    rcx,r12
   140016e85:	call   0x14001676c
   140016e8a:	lea    r9,[rsp+0x110]
   140016e92:	lea    r8,[rsp+0x78]
   140016e97:	mov    edi,eax
   140016e99:	mov    DWORD PTR [rsp+0x3c],eax
   140016e9d:	mov    rax,QWORD PTR [rsp+0x78]
   140016ea2:	mov    BYTE PTR [rbx+rax*1],sil
   140016ea6:	lea    rax,[rsp+0x84]
   140016eae:	mov    esi,0x1
   140016eb3:	add    rbx,rsi
   140016eb6:	lea    rdx,[rsp+0xa0]
   140016ebe:	mov    QWORD PTR [rsp+0x20],rax
   140016ec3:	mov    rcx,rbx
   140016ec6:	call   0x1400166ac
   140016ecb:	cmp    eax,r14d
   140016ece:	je     0x1400179dd
   140016ed4:	movzx  ecx,dil
   140016ed8:	jmp    0x140016f3a
   140016eda:	mov    eax,ebp
   140016edc:	sub    ebp,esi
   140016ede:	cmp    eax,r14d
   140016ee1:	je     0x140016f44
   140016ee3:	mov    rax,QWORD PTR [rsp+0x78]
   140016ee8:	add    DWORD PTR [rsp+0x58],esi
   140016eec:	lea    r9,[rsp+0x110]
   140016ef4:	mov    BYTE PTR [rbx+rax*1],dil
   140016ef8:	lea    rax,[rsp+0x84]
   140016f00:	add    rbx,rsi
   140016f03:	lea    r8,[rsp+0x78]
   140016f08:	lea    rdx,[rsp+0xa0]
   140016f10:	mov    rcx,rbx
   140016f13:	mov    QWORD PTR [rsp+0x20],rax
   140016f18:	call   0x1400166ac
   140016f1d:	cmp    eax,r14d
   140016f20:	je     0x1400179dd
   140016f26:	mov    rcx,r12
   140016f29:	add    r13d,esi
   140016f2c:	call   0x14001676c
   140016f31:	mov    edi,eax
   140016f33:	mov    DWORD PTR [rsp+0x3c],eax
   140016f37:	movzx  ecx,al
   140016f3a:	call   0x14000cb2c
   140016f3f:	cmp    eax,r14d
   140016f42:	jne    0x140016eda
   140016f44:	mov    rcx,rsi
   140016f47:	mov    esi,DWORD PTR [rsp+0x58]
   140016f4b:	cmp    esi,r14d
   140016f4e:	je     0x1400170a1
   140016f54:	cmp    edi,0x65
   140016f57:	je     0x140016f62
   140016f59:	cmp    edi,0x45
   140016f5c:	jne    0x1400170a1
   140016f62:	mov    eax,ebp
   140016f64:	sub    ebp,ecx
   140016f66:	cmp    eax,r14d
   140016f69:	je     0x1400170a1
   140016f6f:	mov    rax,QWORD PTR [rsp+0x78]
   140016f74:	lea    r9,[rsp+0x110]
   140016f7c:	lea    r8,[rsp+0x78]
   140016f81:	mov    BYTE PTR [rbx+rax*1],0x65
   140016f85:	add    rbx,rcx
   140016f88:	lea    rax,[rsp+0x84]
   140016f90:	lea    rdx,[rsp+0xa0]
   140016f98:	mov    rcx,rbx
   140016f9b:	mov    QWORD PTR [rsp+0x20],rax
   140016fa0:	call   0x1400166ac
   140016fa5:	cmp    eax,r14d
   140016fa8:	je     0x1400179dd
   140016fae:	mov    rcx,r12
   140016fb1:	inc    r13d
   140016fb4:	call   0x14001676c
   140016fb9:	mov    edi,eax
   140016fbb:	mov    DWORD PTR [rsp+0x3c],eax
   140016fbf:	cmp    eax,0x2d
   140016fc2:	jne    0x140017005
   140016fc4:	mov    rax,QWORD PTR [rsp+0x78]
   140016fc9:	lea    r9,[rsp+0x110]
   140016fd1:	lea    r8,[rsp+0x78]
   140016fd6:	mov    BYTE PTR [rbx+rax*1],dil
   140016fda:	lea    rax,[rsp+0x84]
   140016fe2:	inc    rbx
   140016fe5:	lea    rdx,[rsp+0xa0]
   140016fed:	mov    rcx,rbx
   140016ff0:	mov    QWORD PTR [rsp+0x20],rax
   140016ff5:	call   0x1400166ac
   140016ffa:	cmp    eax,r14d
   140016ffd:	je     0x1400179dd
   140017003:	jmp    0x14001700a
   140017005:	cmp    eax,0x2b
   140017008:	jne    0x14001702e
   14001700a:	mov    eax,ebp
   14001700c:	mov    ecx,0x1
   140017011:	sub    ebp,ecx
   140017013:	cmp    eax,r14d
   140017016:	jne    0x14001701d
   140017018:	mov    ebp,r14d
   14001701b:	jmp    0x14001702e
   14001701d:	add    r13d,ecx
   140017020:	mov    rcx,r12
   140017023:	call   0x14001676c
   140017028:	mov    edi,eax
   14001702a:	mov    DWORD PTR [rsp+0x3c],eax
   14001702e:	movzx  ecx,dil
   140017032:	jmp    0x140017097
   140017034:	mov    eax,ebp
   140017036:	mov    ecx,0x1
   14001703b:	sub    ebp,ecx
   14001703d:	cmp    eax,r14d
   140017040:	je     0x1400170a1
   140017042:	mov    rax,QWORD PTR [rsp+0x78]
   140017047:	add    esi,ecx
   140017049:	lea    r9,[rsp+0x110]
   140017051:	mov    BYTE PTR [rbx+rax*1],dil
   140017055:	add    rbx,rcx
   140017058:	lea    rax,[rsp+0x84]
   140017060:	lea    r8,[rsp+0x78]
   140017065:	lea    rdx,[rsp+0xa0]
   14001706d:	mov    rcx,rbx
   140017070:	mov    QWORD PTR [rsp+0x20],rax
   140017075:	call   0x1400166ac
   14001707a:	cmp    eax,r14d
   14001707d:	je     0x1400179dd
   140017083:	mov    rcx,r12
   140017086:	inc    r13d
   140017089:	call   0x14001676c
   14001708e:	mov    edi,eax
   140017090:	mov    DWORD PTR [rsp+0x3c],eax
   140017094:	movzx  ecx,al
   140017097:	call   0x14000cb2c
   14001709c:	cmp    eax,r14d
   14001709f:	jne    0x140017034
   1400170a1:	mov    eax,0x1
   1400170a6:	sub    r13d,eax
   1400170a9:	mov    DWORD PTR [rsp+0x34],r13d
   1400170ae:	cmp    edi,r15d
   1400170b1:	je     0x1400170c2
   1400170b3:	mov    rdx,r12
   1400170b6:	mov    ecx,edi
   1400170b8:	call   0x140021464
   1400170bd:	mov    eax,0x1
   1400170c2:	cmp    esi,r14d
   1400170c5:	je     0x1400179dd
   1400170cb:	cmp    BYTE PTR [rsp+0x30],r14b
   1400170d0:	jne    0x1400178b6
   1400170d6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400170db:	add    DWORD PTR [rsp+0x64],eax
   1400170df:	mov    BYTE PTR [rbx+rsi*1],r14b
   1400170e3:	movsx  ebx,BYTE PTR [rsp+0x38]
   1400170e8:	mov    rcx,QWORD PTR [rip+0x1e479]        # 0x140035568
   1400170ef:	sub    ebx,eax
   1400170f1:	call   0x140011758
   1400170f6:	mov    rdx,QWORD PTR [rsp+0x90]
   1400170fe:	lea    r9,[rsp+0xd0]
   140017106:	mov    r8,rsi
   140017109:	mov    ecx,ebx
   14001710b:	call   rax
   14001710d:	jmp    0x1400178b6
   140017112:	cmp    ecx,r8d
   140017115:	jne    0x140017123
   140017117:	add    eax,r11d
   14001711a:	mov    DWORD PTR [rsp+0x60],r11d
   14001711f:	mov    DWORD PTR [rsp+0x48],eax
   140017123:	cmp    bpl,r8b
   140017126:	jle    0x14001741a
   14001712c:	mov    r14b,r11b
   14001712f:	jmp    0x14001741a
   140017134:	cmp    r12d,0x70
   140017138:	je     0x14001764c
   14001713e:	cmp    r12d,0x73
   140017142:	je     0x14001740f
   140017148:	cmp    r12d,0x75
   14001714c:	je     0x140017662
   140017152:	cmp    r12d,0x78
   140017156:	je     0x140016d69
   14001715c:	cmp    r12d,0x7b
   140017160:	je     0x140017197
   140017162:	movzx  eax,BYTE PTR [r10]
   140017166:	cmp    eax,edi
   140017168:	jne    0x1400179e2
   14001716e:	mov    cl,BYTE PTR [rsp+0x39]
   140017172:	mov    r13d,DWORD PTR [rsp+0x34]
   140017177:	xor    r14d,r14d
   14001717a:	add    cl,r15b
   14001717d:	mov    BYTE PTR [rsp+0x39],cl
   140017181:	cmp    dl,r14b
   140017184:	jne    0x1400178b6
   14001718a:	mov    QWORD PTR [rsp+0xb8],r9
   140017192:	jmp    0x1400178b6
   140017197:	cmp    bpl,r8b
   14001719a:	movzx  r14d,r14b
   14001719e:	cmovg  r14d,r11d
   1400171a2:	add    r10,r11
   1400171a5:	cmp    BYTE PTR [r10],0x5e
   1400171a9:	mov    QWORD PTR [rsp+0x70],r10
   1400171ae:	jne    0x1400171bd
   1400171b0:	inc    r10
   1400171b3:	mov    BYTE PTR [rsp+0x54],r15b
   1400171b8:	mov    QWORD PTR [rsp+0x70],r10
   1400171bd:	xor    edx,edx
   1400171bf:	lea    rcx,[rsp+0xf0]
   1400171c7:	lea    r8d,[rdx+0x20]
   1400171cb:	call   0x140008a00
   1400171d0:	mov    r10,QWORD PTR [rsp+0x70]
   1400171d5:	mov    bl,0x5d
   1400171d7:	mov    r11d,0x1
   1400171dd:	cmp    BYTE PTR [r10],bl
   1400171e0:	jne    0x1400171f0
   1400171e2:	mov    r13b,bl
   1400171e5:	add    r10,r11
   1400171e8:	mov    BYTE PTR [rsp+0xfb],0x20
   1400171f0:	mov    al,BYTE PTR [r10]
   1400171f3:	cmp    al,bl
   1400171f5:	je     0x140017293
   1400171fb:	xor    r15d,r15d
   1400171fe:	add    r10,r11
   140017201:	cmp    al,0x2d
   140017203:	jne    0x140017264
   140017205:	cmp    r13b,r15b
   140017208:	je     0x140017264
   14001720a:	mov    cl,BYTE PTR [r10]
   14001720d:	cmp    cl,bl
   14001720f:	je     0x140017264
   140017211:	add    r10,r11
   140017214:	mov    QWORD PTR [rsp+0x70],r10
   140017219:	cmp    r13b,cl
   14001721c:	jae    0x140017223
   14001721e:	mov    r9b,cl
   140017221:	jmp    0x140017229
   140017223:	mov    r9b,r13b
   140017226:	mov    r13b,cl
   140017229:	cmp    r13b,r9b
   14001722c:	ja     0x14001725f
   14001722e:	movzx  r10d,r13b
   140017232:	movzx  eax,r13b
   140017236:	mov    r8,r10
   140017239:	mov    edx,r11d
   14001723c:	and    eax,0x7
   14001723f:	shr    r8,0x3
   140017243:	add    r13b,r11b
   140017246:	mov    cl,al
   140017248:	add    r10,r11
   14001724b:	shl    dl,cl
   14001724d:	or     BYTE PTR [rsp+r8*1+0xf0],dl
   140017255:	cmp    r13b,r9b
   140017258:	jbe    0x140017232
   14001725a:	mov    r10,QWORD PTR [rsp+0x70]
   14001725f:	mov    r13b,r15b
   140017262:	jmp    0x140017284
   140017264:	movzx  r8d,al
   140017268:	mov    r13b,al
   14001726b:	movzx  eax,al
   14001726e:	and    eax,0x7
   140017271:	mov    edx,r11d
   140017274:	shr    r8,0x3
   140017278:	mov    cl,al
   14001727a:	shl    dl,cl
   14001727c:	or     BYTE PTR [rsp+r8*1+0xf0],dl
   140017284:	mov    al,BYTE PTR [r10]
   140017287:	cmp    al,bl
   140017289:	jne    0x1400171fe
   14001728f:	or     r15d,0xffffffff
   140017293:	xor    eax,eax
   140017295:	cmp    BYTE PTR [r10],al
   140017298:	je     0x140017a54
   14001729e:	mov    QWORD PTR [rsp+0x70],r10
   1400172a3:	jmp    0x14001741a
   1400172a8:	mov    r14b,BYTE PTR [rsp+0x40]
   1400172ad:	cmp    edi,0x2b
   1400172b0:	jne    0x1400172c3
   1400172b2:	sub    eax,r11d
   1400172b5:	mov    DWORD PTR [rsp+0x48],eax
   1400172b9:	jne    0x140017327
   1400172bb:	cmp    ecx,r8d
   1400172be:	je     0x140017327
   1400172c0:	mov    bl,r11b
   1400172c3:	mov    ebp,DWORD PTR [rsp+0x34]
   1400172c7:	mov    rsi,QWORD PTR [rsp+0x68]
   1400172cc:	cmp    edi,0x30
   1400172cf:	jne    0x140017365
   1400172d5:	inc    ebp
   1400172d7:	mov    rcx,rsi
   1400172da:	mov    DWORD PTR [rsp+0x34],ebp
   1400172de:	call   0x14001676c
   1400172e3:	mov    edi,eax
   1400172e5:	mov    DWORD PTR [rsp+0x3c],eax
   1400172e9:	cmp    al,0x78
   1400172eb:	je     0x1400173cc
   1400172f1:	cmp    al,0x58
   1400172f3:	je     0x1400173cc
   1400172f9:	mov    eax,0x1
   1400172fe:	mov    DWORD PTR [rsp+0x58],eax
   140017302:	cmp    r12d,0x78
   140017306:	je     0x140017347
   140017308:	mov    r13d,DWORD PTR [rsp+0x48]
   14001730d:	xor    ebp,ebp
   14001730f:	cmp    DWORD PTR [rsp+0x60],ebp
   140017313:	je     0x14001731c
   140017315:	sub    r13d,eax
   140017318:	jne    0x14001731c
   14001731a:	add    bl,al
   14001731c:	mov    r12d,0x6f
   140017322:	jmp    0x140017406
   140017327:	mov    ebp,DWORD PTR [rsp+0x34]
   14001732b:	mov    rsi,QWORD PTR [rsp+0x68]
   140017330:	add    ebp,r11d
   140017333:	mov    rcx,rsi
   140017336:	mov    DWORD PTR [rsp+0x34],ebp
   14001733a:	call   0x14001676c
   14001733f:	mov    edi,eax
   140017341:	mov    DWORD PTR [rsp+0x3c],eax
   140017345:	jmp    0x1400172cc
   140017347:	sub    ebp,eax
   140017349:	mov    DWORD PTR [rsp+0x34],ebp
   14001734d:	cmp    edi,r15d
   140017350:	je     0x14001735c
   140017352:	mov    rdx,rsi
   140017355:	mov    ecx,edi
   140017357:	call   0x140021464
   14001735c:	mov    edi,0x30
   140017361:	mov    DWORD PTR [rsp+0x3c],edi
   140017365:	mov    ebp,DWORD PTR [rsp+0x50]
   140017369:	mov    r13d,DWORD PTR [rsp+0x48]
   14001736e:	test   ebp,ebp
   140017370:	je     0x14001776e
   140017376:	mov    rsi,QWORD PTR [rsp+0x88]
   14001737e:	test   bl,bl
   140017380:	jne    0x140017755
   140017386:	mov    rbx,QWORD PTR [rsp+0x68]
   14001738b:	cmp    r12d,0x78
   14001738f:	je     0x1400176ba
   140017395:	cmp    r12d,0x70
   140017399:	je     0x1400176ba
   14001739f:	movzx  ecx,dil
   1400173a3:	call   0x14000cb2c
   1400173a8:	test   eax,eax
   1400173aa:	je     0x14001773a
   1400173b0:	cmp    r12d,0x6f
   1400173b4:	jne    0x1400176b1
   1400173ba:	cmp    edi,0x38
   1400173bd:	jge    0x14001773a
   1400173c3:	shl    rsi,0x3
   1400173c7:	jmp    0x1400176f8
   1400173cc:	mov    r12d,0x1
   1400173d2:	mov    rcx,rsi
   1400173d5:	add    ebp,r12d
   1400173d8:	mov    DWORD PTR [rsp+0x34],ebp
   1400173dc:	call   0x14001676c
   1400173e1:	mov    r13d,DWORD PTR [rsp+0x48]
   1400173e6:	xor    ebp,ebp
   1400173e8:	mov    edi,eax
   1400173ea:	mov    DWORD PTR [rsp+0x3c],eax
   1400173ee:	cmp    DWORD PTR [rsp+0x60],ebp
   1400173f2:	je     0x140017400
   1400173f4:	sub    r13d,0x2
   1400173f8:	cmp    r13d,r12d
   1400173fb:	jge    0x140017400
   1400173fd:	add    bl,r12b
   140017400:	mov    r12d,0x78
   140017406:	mov    ebp,DWORD PTR [rsp+0x50]
   14001740a:	jmp    0x14001736e
   14001740f:	movzx  r14d,r14b
   140017413:	cmp    bpl,r8b
   140017416:	cmovg  r14d,r11d
   14001741a:	mov    ecx,DWORD PTR [rsp+0x34]
   14001741e:	mov    rbx,QWORD PTR [rsp+0x90]
   140017426:	mov    r8d,0x1
   14001742c:	sub    ecx,r8d
   14001742f:	mov    DWORD PTR [rsp+0x34],ecx
   140017433:	cmp    edi,r15d
   140017436:	je     0x14001744e
   140017438:	mov    rdx,QWORD PTR [rsp+0x68]
   14001743d:	mov    ecx,edi
   14001743f:	call   0x140021464
   140017444:	mov    ecx,DWORD PTR [rsp+0x34]
   140017448:	mov    r8d,0x1
   14001744e:	cmp    r12d,0x63
   140017452:	je     0x140017457
   140017454:	sub    rsi,r8
   140017457:	mov    bpl,BYTE PTR [rsp+0x54]
   14001745c:	mov    r13d,DWORD PTR [rsp+0x48]
   140017461:	xor    edx,edx
   140017463:	cmp    DWORD PTR [rsp+0x60],edx
   140017467:	je     0x140017477
   140017469:	mov    eax,r13d
   14001746c:	sub    r13d,r8d
   14001746f:	cmp    eax,edx
   140017471:	je     0x14001763a
   140017477:	add    ecx,r8d
   14001747a:	mov    DWORD PTR [rsp+0x34],ecx
   14001747e:	mov    rcx,QWORD PTR [rsp+0x68]
   140017483:	call   0x14001676c
   140017488:	movsxd rdi,eax
   14001748b:	mov    DWORD PTR [rsp+0x3c],edi
   14001748f:	cmp    edi,r15d
   140017492:	je     0x1400175cd
   140017498:	cmp    r12d,0x63
   14001749c:	je     0x1400174e4
   14001749e:	cmp    r12d,0x73
   1400174a2:	jne    0x1400174b7
   1400174a4:	cmp    edi,0x9
   1400174a7:	jl     0x1400174b2
   1400174a9:	cmp    edi,0xd
   1400174ac:	jle    0x1400175cd
   1400174b2:	cmp    edi,0x20
   1400174b5:	jne    0x1400174e4
   1400174b7:	cmp    r12d,0x7b
   1400174bb:	jne    0x1400175cd
   1400174c1:	mov    rax,rdi
   1400174c4:	mov    edx,edi
   1400174c6:	sar    rax,0x3
   1400174ca:	and    edx,0x7
   1400174cd:	movsx  ecx,BYTE PTR [rsp+rax*1+0xf0]
   1400174d5:	movsx  eax,bpl
   1400174d9:	xor    ecx,eax
   1400174db:	bt     ecx,edx
   1400174de:	jae    0x1400175cd
   1400174e4:	xor    edx,edx
   1400174e6:	cmp    BYTE PTR [rsp+0x30],dl
   1400174ea:	jne    0x1400175bb
   1400174f0:	cmp    rsi,rdx
   1400174f3:	je     0x140017a01
   1400174f9:	cmp    r14b,dl
   1400174fc:	je     0x14001759a
   140017502:	movzx  ecx,dil
   140017506:	mov    BYTE PTR [rsp+0x98],dil
   14001750e:	call   0x1400185d0
   140017513:	xor    ecx,ecx
   140017515:	cmp    eax,ecx
   140017517:	je     0x14001752e
   140017519:	mov    rcx,QWORD PTR [rsp+0x68]
   14001751e:	inc    DWORD PTR [rsp+0x34]
   140017522:	call   0x14001676c
   140017527:	mov    BYTE PTR [rsp+0x99],al
   14001752e:	mov    eax,0x3f
   140017533:	lea    r9,[rsp+0xd0]
   14001753b:	lea    rdx,[rsp+0x98]
   140017543:	mov    WORD PTR [rsp+0x80],ax
   14001754b:	mov    rax,QWORD PTR [rsp+0xd0]
   140017553:	lea    rcx,[rsp+0x80]
   14001755b:	movsxd r8,DWORD PTR [rax+0x10c]
   140017562:	call   0x1400215f0
   140017567:	mov    rax,QWORD PTR [rsp+0x90]
   14001756f:	movzx  r11d,WORD PTR [rsp+0x80]
   140017578:	mov    ecx,DWORD PTR [rsp+0x34]
   14001757c:	mov    WORD PTR [rax],r11w
   140017580:	add    rax,0x2
   140017584:	mov    r8d,0x1
   14001758a:	mov    QWORD PTR [rsp+0x90],rax
   140017592:	sub    rsi,r8
   140017595:	jmp    0x140017461
   14001759a:	mov    rax,QWORD PTR [rsp+0x90]
   1400175a2:	mov    r8d,0x1
   1400175a8:	mov    BYTE PTR [rax],dil
   1400175ab:	add    rax,r8
   1400175ae:	sub    rsi,r8
   1400175b1:	mov    QWORD PTR [rsp+0x90],rax
   1400175b9:	jmp    0x1400175c4
   1400175bb:	mov    r8d,0x1
   1400175c1:	add    rbx,r8
   1400175c4:	mov    ecx,DWORD PTR [rsp+0x34]
   1400175c8:	jmp    0x140017463
   1400175cd:	mov    r13d,DWORD PTR [rsp+0x34]
   1400175d2:	mov    r8d,0x1
   1400175d8:	sub    r13d,r8d
   1400175db:	mov    DWORD PTR [rsp+0x34],r13d
   1400175e0:	cmp    edi,r15d
   1400175e3:	je     0x1400175f7
   1400175e5:	mov    rdx,QWORD PTR [rsp+0x68]
   1400175ea:	mov    ecx,edi
   1400175ec:	call   0x140021464
   1400175f1:	mov    r8d,0x1
   1400175f7:	xor    edx,edx
   1400175f9:	mov    rax,QWORD PTR [rsp+0x90]
   140017601:	cmp    rbx,rax
   140017604:	je     0x140017965
   14001760a:	cmp    BYTE PTR [rsp+0x30],dl
   14001760e:	jne    0x1400178b3
   140017614:	mov    ebx,DWORD PTR [rsp+0x64]
   140017618:	add    ebx,r8d
   14001761b:	mov    DWORD PTR [rsp+0x64],ebx
   14001761f:	cmp    r12d,0x63
   140017623:	je     0x1400178b3
   140017629:	cmp    r14b,dl
   14001762c:	je     0x140017641
   14001762e:	xor    r14d,r14d
   140017631:	mov    WORD PTR [rax],r14w
   140017635:	jmp    0x1400178b6
   14001763a:	mov    r13d,DWORD PTR [rsp+0x34]
   14001763f:	jmp    0x1400175f9
   140017641:	xor    r14d,r14d
   140017644:	mov    BYTE PTR [rax],r14b
   140017647:	jmp    0x1400178b6
   14001764c:	mov    ebp,DWORD PTR [rsp+0x50]
   140017650:	mov    BYTE PTR [rsp+0x38],r11b
   140017655:	mov    QWORD PTR [rsp+0x88],r8
   14001765d:	add    ebp,r11d
   140017660:	jmp    0x140017666
   140017662:	mov    ebp,DWORD PTR [rsp+0x50]
   140017666:	cmp    edi,0x2d
   140017669:	jne    0x140017670
   14001766b:	mov    r14b,r11b
   14001766e:	jmp    0x14001767e
   140017670:	mov    r14b,BYTE PTR [rsp+0x40]
   140017675:	cmp    edi,0x2b
   140017678:	jne    0x140017369
   14001767e:	sub    eax,r11d
   140017681:	mov    DWORD PTR [rsp+0x48],eax
   140017685:	jne    0x140017697
   140017687:	cmp    ecx,r8d
   14001768a:	je     0x140017697
   14001768c:	mov    bl,r11b
   14001768f:	mov    r13d,eax
   140017692:	jmp    0x14001736e
   140017697:	mov    rcx,QWORD PTR [rsp+0x68]
   14001769c:	add    DWORD PTR [rsp+0x34],r11d
   1400176a1:	call   0x14001676c
   1400176a6:	mov    edi,eax
   1400176a8:	mov    DWORD PTR [rsp+0x3c],eax
   1400176ac:	jmp    0x140017369
   1400176b1:	lea    rsi,[rsi+rsi*4]
   1400176b5:	add    rsi,rsi
   1400176b8:	jmp    0x1400176f8
   1400176ba:	movzx  esi,dil
   1400176be:	mov    ecx,esi
   1400176c0:	call   0x14000cc14
   1400176c5:	test   eax,eax
   1400176c7:	je     0x14001773a
   1400176c9:	shl    QWORD PTR [rsp+0x88],0x4
   1400176d2:	mov    ecx,esi
   1400176d4:	movsx  ebx,dil
   1400176d8:	call   0x14000cb2c
   1400176dd:	mov    rsi,QWORD PTR [rsp+0x88]
   1400176e5:	mov    edi,ebx
   1400176e7:	and    edi,0xffffffdf
   1400176ea:	xor    ecx,ecx
   1400176ec:	sub    edi,0x7
   1400176ef:	cmp    eax,ecx
   1400176f1:	cmovne edi,ebx
   1400176f4:	mov    DWORD PTR [rsp+0x3c],edi
   1400176f8:	lea    eax,[rdi-0x30]
   1400176fb:	mov    edx,0x1
   140017700:	add    DWORD PTR [rsp+0x58],edx
   140017704:	movsxd rcx,eax
   140017707:	add    rsi,rcx
   14001770a:	cmp    DWORD PTR [rsp+0x60],0x0
   14001770f:	mov    QWORD PTR [rsp+0x88],rsi
   140017717:	je     0x14001771e
   140017719:	sub    r13d,edx
   14001771c:	je     0x140017755
   14001771e:	mov    rbx,QWORD PTR [rsp+0x68]
   140017723:	add    DWORD PTR [rsp+0x34],edx
   140017727:	mov    rcx,rbx
   14001772a:	call   0x14001676c
   14001772f:	mov    edi,eax
   140017731:	mov    DWORD PTR [rsp+0x3c],eax
   140017735:	jmp    0x14001738b
   14001773a:	dec    DWORD PTR [rsp+0x34]
   14001773e:	cmp    edi,r15d
   140017741:	je     0x14001774d
   140017743:	mov    rdx,rbx
   140017746:	mov    ecx,edi
   140017748:	call   0x140021464
   14001774d:	mov    rsi,QWORD PTR [rsp+0x88]
   140017755:	test   r14b,r14b
   140017758:	je     0x14001784f
   14001775e:	neg    rsi
   140017761:	mov    QWORD PTR [rsp+0x88],rsi
   140017769:	jmp    0x14001784f
   14001776e:	mov    esi,DWORD PTR [rsp+0x5c]
   140017772:	test   bl,bl
   140017774:	jne    0x140017844
   14001777a:	mov    rbx,QWORD PTR [rsp+0x68]
   14001777f:	cmp    r12d,0x78
   140017783:	je     0x1400177b8
   140017785:	cmp    r12d,0x70
   140017789:	je     0x1400177b8
   14001778b:	movzx  ecx,dil
   14001778f:	call   0x14000cb2c
   140017794:	test   eax,eax
   140017796:	je     0x14001782d
   14001779c:	cmp    r12d,0x6f
   1400177a0:	jne    0x1400177b0
   1400177a2:	cmp    edi,0x38
   1400177a5:	jge    0x14001782d
   1400177ab:	shl    esi,0x3
   1400177ae:	jmp    0x1400177f4
   1400177b0:	lea    eax,[rsi+rsi*4]
   1400177b3:	lea    esi,[rax+rax*1]
   1400177b6:	jmp    0x1400177f4
   1400177b8:	movzx  esi,dil
   1400177bc:	mov    ecx,esi
   1400177be:	call   0x14000cc14
   1400177c3:	test   eax,eax
   1400177c5:	je     0x14001782d
   1400177c7:	mov    eax,DWORD PTR [rsp+0x5c]
   1400177cb:	mov    ecx,esi
   1400177cd:	movsx  ebx,dil
   1400177d1:	shl    eax,0x4
   1400177d4:	mov    DWORD PTR [rsp+0x5c],eax
   1400177d8:	call   0x14000cb2c
   1400177dd:	xor    esi,esi
   1400177df:	mov    edi,ebx
   1400177e1:	and    edi,0xffffffdf
   1400177e4:	sub    edi,0x7
   1400177e7:	cmp    eax,esi
   1400177e9:	mov    esi,DWORD PTR [rsp+0x5c]
   1400177ed:	cmovne edi,ebx
   1400177f0:	mov    DWORD PTR [rsp+0x3c],edi
   1400177f4:	mov    eax,0x1
   1400177f9:	lea    esi,[rsi+rdi*1-0x30]
   1400177fd:	add    DWORD PTR [rsp+0x58],eax
   140017801:	cmp    DWORD PTR [rsp+0x60],0x0
   140017806:	mov    DWORD PTR [rsp+0x5c],esi
   14001780a:	je     0x140017811
   14001780c:	sub    r13d,eax
   14001780f:	je     0x140017844
   140017811:	mov    rbx,QWORD PTR [rsp+0x68]
   140017816:	add    DWORD PTR [rsp+0x34],eax
   14001781a:	mov    rcx,rbx
   14001781d:	call   0x14001676c
   140017822:	mov    edi,eax
   140017824:	mov    DWORD PTR [rsp+0x3c],eax
   140017828:	jmp    0x14001777f
   14001782d:	dec    DWORD PTR [rsp+0x34]
   140017831:	cmp    edi,r15d
   140017834:	je     0x140017840
   140017836:	mov    rdx,rbx
   140017839:	mov    ecx,edi
   14001783b:	call   0x140021464
   140017840:	mov    esi,DWORD PTR [rsp+0x5c]
   140017844:	test   r14b,r14b
   140017847:	je     0x14001784f
   140017849:	neg    esi
   14001784b:	mov    DWORD PTR [rsp+0x5c],esi
   14001784f:	mov    eax,DWORD PTR [rsp+0x58]
   140017853:	cmp    r12d,0x46
   140017857:	mov    r14d,0x0
   14001785d:	cmove  eax,r14d
   140017861:	cmp    eax,r14d
   140017864:	je     0x1400179dd
   14001786a:	cmp    BYTE PTR [rsp+0x30],r14b
   14001786f:	jne    0x140017897
   140017871:	inc    DWORD PTR [rsp+0x64]
   140017875:	mov    eax,DWORD PTR [rsp+0x5c]
   140017879:	jmp    0x14001787f
   14001787b:	mov    ebp,DWORD PTR [rsp+0x50]
   14001787f:	mov    rcx,QWORD PTR [rsp+0x90]
   140017887:	cmp    ebp,r14d
   14001788a:	je     0x14001789e
   14001788c:	mov    rax,QWORD PTR [rsp+0x88]
   140017894:	mov    QWORD PTR [rcx],rax
   140017897:	mov    r13d,DWORD PTR [rsp+0x34]
   14001789c:	jmp    0x1400178b6
   14001789e:	mov    r13d,DWORD PTR [rsp+0x34]
   1400178a3:	cmp    BYTE PTR [rsp+0x38],r14b
   1400178a8:	je     0x1400178ae
   1400178aa:	mov    DWORD PTR [rcx],eax
   1400178ac:	jmp    0x1400178b6
   1400178ae:	mov    WORD PTR [rcx],ax
   1400178b1:	jmp    0x1400178b6
   1400178b3:	xor    r14d,r14d
   1400178b6:	mov    rsi,QWORD PTR [rsp+0x70]
   1400178bb:	mov    rbp,QWORD PTR [rsp+0x68]
   1400178c0:	mov    ebx,0x1
   1400178c5:	add    BYTE PTR [rsp+0x39],bl
   1400178c9:	add    rsi,rbx
   1400178cc:	mov    r12b,0x25
   1400178cf:	mov    QWORD PTR [rsp+0x70],rsi
   1400178d4:	jmp    0x140017938
   1400178d6:	cmp    BYTE PTR [rsi],r12b
   1400178d9:	jne    0x1400178e6
   1400178db:	lea    rax,[rsi+0x1]
   1400178df:	cmp    BYTE PTR [rax],r12b
   1400178e2:	cmove  rsi,rax
   1400178e6:	add    r13d,ebx
   1400178e9:	mov    rcx,rbp
   1400178ec:	mov    DWORD PTR [rsp+0x34],r13d
   1400178f1:	call   0x14001676c
   1400178f6:	mov    edi,eax
   1400178f8:	mov    DWORD PTR [rsp+0x3c],eax
   1400178fc:	movzx  eax,BYTE PTR [rsi]
   1400178ff:	add    rsi,rbx
   140017902:	mov    QWORD PTR [rsp+0x70],rsi
   140017907:	cmp    eax,edi
   140017909:	jne    0x140017a3c
   14001790f:	movzx  ecx,dil
   140017913:	call   0x1400185d0
   140017918:	cmp    eax,r14d
   14001791b:	je     0x140017938
   14001791d:	mov    rcx,rbp
   140017920:	call   0x14001676c
   140017925:	movzx  ecx,BYTE PTR [rsi]
   140017928:	add    rsi,rbx
   14001792b:	mov    QWORD PTR [rsp+0x70],rsi
   140017930:	cmp    ecx,eax
   140017932:	jne    0x140017a2d
   140017938:	cmp    edi,r15d
   14001793b:	jne    0x140017948
   14001793d:	cmp    BYTE PTR [rsi],r12b
   140017940:	jne    0x140017968
   140017942:	cmp    BYTE PTR [rsi+0x1],0x6e
   140017946:	jne    0x140017968
   140017948:	mov    al,BYTE PTR [rsi]
   14001794a:	cmp    al,r14b
   14001794d:	je     0x140017968
   14001794f:	jmp    0x14001696c
   140017954:	cmp    edi,r15d
   140017957:	je     0x140017965
   140017959:	mov    rdx,QWORD PTR [rsp+0x68]
   14001795e:	mov    ecx,edi
   140017960:	call   0x140021464
   140017965:	xor    r14d,r14d
   140017968:	mov    r12d,DWORD PTR [rsp+0x44]
   14001796d:	cmp    DWORD PTR [rsp+0x84],0x1
   140017975:	jne    0x140017981
   140017977:	mov    rcx,QWORD PTR [rsp+0x78]
   14001797c:	call   0x1400098ac
   140017981:	cmp    edi,r15d
   140017984:	jne    0x140017a59
   14001798a:	mov    eax,DWORD PTR [rsp+0x64]
   14001798e:	cmp    eax,r14d
   140017991:	jne    0x14001799c
   140017993:	mov    cl,BYTE PTR [rsp+0x39]
   140017997:	cmp    cl,r14b
   14001799a:	je     0x14001799f
   14001799c:	mov    r15d,eax
   14001799f:	cmp    BYTE PTR [rsp+0xe8],r14b
   1400179a7:	je     0x14001692d
   1400179ad:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400179b5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400179bc:	jmp    0x14001692d
   1400179c1:	xor    r14d,r14d
   1400179c4:	cmp    bpl,r14b
   1400179c7:	jle    0x1400179cf
   1400179c9:	mov    WORD PTR [rcx],r14w
   1400179cd:	jmp    0x1400179d2
   1400179cf:	mov    BYTE PTR [rcx],r14b
   1400179d2:	call   0x14000f574
   1400179d7:	mov    DWORD PTR [rax],0xc
   1400179dd:	mov    r12d,r14d
   1400179e0:	jmp    0x14001796d
   1400179e2:	cmp    edi,r15d
   1400179e5:	je     0x1400179f3
   1400179e7:	mov    rdx,QWORD PTR [rsp+0x68]
   1400179ec:	mov    ecx,edi
   1400179ee:	call   0x140021464
   1400179f3:	mov    r12d,0x1
   1400179f9:	xor    r14d,r14d
   1400179fc:	jmp    0x14001796d
   140017a01:	call   0x14000f574
   140017a06:	mov    DWORD PTR [rax],0xc
   140017a0c:	xor    eax,eax
   140017a0e:	mov    r12d,eax
   140017a11:	cmp    r14b,al
   140017a14:	je     0x140017a22
   140017a16:	xor    r14d,r14d
   140017a19:	mov    WORD PTR [rbx],r14w
   140017a1d:	jmp    0x14001796d
   140017a22:	xor    r14d,r14d
   140017a25:	mov    BYTE PTR [rbx],r14b
   140017a28:	jmp    0x14001796d
   140017a2d:	cmp    eax,r15d
   140017a30:	je     0x140017a3c
   140017a32:	mov    rdx,rbp
   140017a35:	mov    ecx,eax
   140017a37:	call   0x140021464
   140017a3c:	cmp    edi,r15d
   140017a3f:	je     0x140017968
   140017a45:	mov    rdx,rbp
   140017a48:	mov    ecx,edi
   140017a4a:	call   0x140021464
   140017a4f:	jmp    0x140017968
   140017a54:	mov    r12d,eax
   140017a57:	jmp    0x1400179f9
   140017a59:	cmp    r12d,0x1
   140017a5d:	jne    0x140017a9d
   140017a5f:	call   0x14000f574
   140017a64:	xor    r9d,r9d
   140017a67:	xor    r8d,r8d
   140017a6a:	xor    edx,edx
   140017a6c:	xor    ecx,ecx
   140017a6e:	mov    QWORD PTR [rsp+0x20],r14
   140017a73:	mov    DWORD PTR [rax],0x16
   140017a79:	call   0x14000e4d8
   140017a7e:	cmp    BYTE PTR [rsp+0xe8],r14b
   140017a86:	je     0x140017a97
   140017a88:	mov    rcx,QWORD PTR [rsp+0xe0]
   140017a90:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017a97:	mov    eax,DWORD PTR [rsp+0x64]
   140017a9b:	jmp    0x140017abc
   140017a9d:	mov    ebx,DWORD PTR [rsp+0x64]
   140017aa1:	cmp    BYTE PTR [rsp+0xe8],r14b
   140017aa9:	je     0x140017aba
   140017aab:	mov    rax,QWORD PTR [rsp+0xe0]
   140017ab3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140017aba:	mov    eax,ebx
   140017abc:	mov    rcx,QWORD PTR [rsp+0x270]
   140017ac4:	xor    rcx,rsp
   140017ac7:	call   0x140009080
   140017acc:	mov    rbx,QWORD PTR [rsp+0x2d0]
   140017ad4:	add    rsp,0x280
   140017adb:	pop    r15
   140017add:	pop    r14
   140017adf:	pop    r13
   140017ae1:	pop    r12
   140017ae3:	pop    rdi
   140017ae4:	pop    rsi
   140017ae5:	pop    rbp
   140017ae6:	ret    
   140017ae7:	int3   
   140017ae8:	mov    QWORD PTR [rsp+0x8],rbx
   140017aed:	push   rdi
   140017aee:	sub    rsp,0x20
   140017af2:	movsxd rdi,ecx
   140017af5:	mov    ecx,edi
   140017af7:	call   0x140013548
   140017afc:	cmp    rax,0xffffffffffffffff
   140017b00:	je     0x140017b5b
   140017b02:	mov    rax,QWORD PTR [rip+0x20257]        # 0x140037d60
   140017b09:	mov    ecx,0x2
   140017b0e:	cmp    edi,0x1
   140017b11:	jne    0x140017b1c
   140017b13:	test   BYTE PTR [rax+0xb8],dil
   140017b1a:	jne    0x140017b26
   140017b1c:	cmp    edi,ecx
   140017b1e:	jne    0x140017b3d
   140017b20:	test   BYTE PTR [rax+0x60],0x1
   140017b24:	je     0x140017b3d
   140017b26:	call   0x140013548
   140017b2b:	mov    ecx,0x1
   140017b30:	mov    rbx,rax
   140017b33:	call   0x140013548
   140017b38:	cmp    rax,rbx
   140017b3b:	je     0x140017b5b
   140017b3d:	mov    ecx,edi
   140017b3f:	call   0x140013548
   140017b44:	mov    rcx,rax
   140017b47:	call   QWORD PTR [rip+0xf73b]        # 0x140027288
   140017b4d:	test   eax,eax
   140017b4f:	jne    0x140017b5b
   140017b51:	call   QWORD PTR [rip+0xf719]        # 0x140027270
   140017b57:	mov    ebx,eax
   140017b59:	jmp    0x140017b5d
   140017b5b:	xor    ebx,ebx
   140017b5d:	mov    ecx,edi
   140017b5f:	call   0x14001349c
   140017b64:	mov    r11,rdi
   140017b67:	mov    rcx,rdi
   140017b6a:	sar    rcx,0x5
   140017b6e:	and    r11d,0x1f
   140017b72:	lea    rdx,[rip+0x201e7]        # 0x140037d60
   140017b79:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140017b7d:	imul   r11,r11,0x58
   140017b81:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140017b87:	test   ebx,ebx
   140017b89:	je     0x140017b97
   140017b8b:	mov    ecx,ebx
   140017b8d:	call   0x14000f5b4
   140017b92:	or     eax,0xffffffff
   140017b95:	jmp    0x140017b99
   140017b97:	xor    eax,eax
   140017b99:	mov    rbx,QWORD PTR [rsp+0x30]
   140017b9e:	add    rsp,0x20
   140017ba2:	pop    rdi
   140017ba3:	ret    
   140017ba4:	mov    QWORD PTR [rsp+0x18],rbx
   140017ba9:	mov    QWORD PTR [rsp+0x20],rsi
   140017bae:	mov    DWORD PTR [rsp+0x8],ecx
   140017bb2:	push   rdi
   140017bb3:	push   r12
   140017bb5:	push   r13
   140017bb7:	sub    rsp,0x30
   140017bbb:	movsxd rbx,ecx
   140017bbe:	cmp    ebx,0xfffffffe
   140017bc1:	jne    0x140017bdf
   140017bc3:	call   0x14000f594
   140017bc8:	xor    edi,edi
   140017bca:	mov    DWORD PTR [rax],edi
   140017bcc:	call   0x14000f574
   140017bd1:	mov    DWORD PTR [rax],0x9
   140017bd7:	or     eax,0xffffffff
   140017bda:	jmp    0x140017ca8
   140017bdf:	xor    edi,edi
   140017be1:	cmp    ebx,edi
   140017be3:	jl     0x140017c7f
   140017be9:	cmp    ebx,DWORD PTR [rip+0x2015d]        # 0x140037d4c
   140017bef:	jae    0x140017c7f
   140017bf5:	mov    rsi,rbx
   140017bf8:	mov    r12,rbx
   140017bfb:	sar    r12,0x5
   140017bff:	lea    r13,[rip+0x2015a]        # 0x140037d60
   140017c06:	and    esi,0x1f
   140017c09:	imul   rsi,rsi,0x58
   140017c0d:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140017c12:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140017c17:	and    ecx,0x1
   140017c1a:	jne    0x140017c47
   140017c1c:	call   0x14000f594
   140017c21:	mov    DWORD PTR [rax],edi
   140017c23:	call   0x14000f574
   140017c28:	mov    DWORD PTR [rax],0x9
   140017c2e:	mov    QWORD PTR [rsp+0x20],rdi
   140017c33:	xor    r9d,r9d
   140017c36:	xor    r8d,r8d
   140017c39:	xor    edx,edx
   140017c3b:	xor    ecx,ecx
   140017c3d:	call   0x14000e4d8
   140017c42:	or     eax,0xffffffff
   140017c45:	jmp    0x140017ca8
   140017c47:	mov    ecx,ebx
   140017c49:	call   0x1400135cc
   140017c4e:	nop
   140017c4f:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140017c54:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140017c59:	je     0x140017c66
   140017c5b:	mov    ecx,ebx
   140017c5d:	call   0x140017ae8
   140017c62:	mov    edi,eax
   140017c64:	jmp    0x140017c74
   140017c66:	call   0x14000f574
   140017c6b:	mov    DWORD PTR [rax],0x9
   140017c71:	or     edi,0xffffffff
   140017c74:	mov    ecx,ebx
   140017c76:	call   0x140013674
   140017c7b:	mov    eax,edi
   140017c7d:	jmp    0x140017ca8
   140017c7f:	call   0x14000f594
   140017c84:	mov    DWORD PTR [rax],edi
   140017c86:	call   0x14000f574
   140017c8b:	mov    DWORD PTR [rax],0x9
   140017c91:	mov    QWORD PTR [rsp+0x20],rdi
   140017c96:	xor    r9d,r9d
   140017c99:	xor    r8d,r8d
   140017c9c:	xor    edx,edx
   140017c9e:	xor    ecx,ecx
   140017ca0:	call   0x14000e4d8
   140017ca5:	or     eax,0xffffffff
   140017ca8:	mov    rbx,QWORD PTR [rsp+0x60]
   140017cad:	mov    rsi,QWORD PTR [rsp+0x68]
   140017cb2:	add    rsp,0x30
   140017cb6:	pop    r13
   140017cb8:	pop    r12
   140017cba:	pop    rdi
   140017cbb:	ret    
   140017cbc:	rex push rbx
   140017cbe:	sub    rsp,0x20
   140017cc2:	test   BYTE PTR [rcx+0x18],0x83
   140017cc6:	mov    rbx,rcx
   140017cc9:	je     0x140017ced
   140017ccb:	test   BYTE PTR [rcx+0x18],0x8
   140017ccf:	je     0x140017ced
   140017cd1:	mov    rcx,QWORD PTR [rcx+0x10]
   140017cd5:	call   0x1400098ac
   140017cda:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140017ce1:	xor    eax,eax
   140017ce3:	mov    QWORD PTR [rbx],rax
   140017ce6:	mov    QWORD PTR [rbx+0x10],rax
   140017cea:	mov    DWORD PTR [rbx+0x8],eax
   140017ced:	add    rsp,0x20
   140017cf1:	pop    rbx
   140017cf2:	ret    
   140017cf3:	int3   
   140017cf4:	mov    QWORD PTR [rsp+0x20],rbx
   140017cf9:	push   rbp
   140017cfa:	push   rsi
   140017cfb:	push   rdi
   140017cfc:	push   r12
   140017cfe:	push   r13
   140017d00:	push   r14
   140017d02:	push   r15
   140017d04:	mov    eax,0x1b30
   140017d09:	call   0x140025f10
   140017d0e:	sub    rsp,rax
   140017d11:	mov    rax,QWORD PTR [rip+0x1c588]        # 0x1400342a0
   140017d18:	xor    rax,rsp
   140017d1b:	mov    QWORD PTR [rsp+0x1b20],rax
   140017d23:	xor    ebp,ebp
   140017d25:	xor    edi,edi
   140017d27:	mov    r13d,r8d
   140017d2a:	mov    r12,rdx
   140017d2d:	movsxd rbx,ecx
   140017d30:	mov    DWORD PTR [rsp+0x40],ebp
   140017d34:	test   r8d,r8d
   140017d37:	jne    0x140017d40
   140017d39:	xor    eax,eax
   140017d3b:	jmp    0x140018427
   140017d40:	test   rdx,rdx
   140017d43:	jne    0x140017d73
   140017d45:	call   0x14000f594
   140017d4a:	and    DWORD PTR [rax],edi
   140017d4c:	call   0x14000f574
   140017d51:	and    QWORD PTR [rsp+0x20],rdi
   140017d56:	xor    r9d,r9d
   140017d59:	xor    r8d,r8d
   140017d5c:	xor    edx,edx
   140017d5e:	xor    ecx,ecx
   140017d60:	mov    DWORD PTR [rax],0x16
   140017d66:	call   0x14000e4d8
   140017d6b:	or     eax,0xffffffff
   140017d6e:	jmp    0x140018427
   140017d73:	mov    r15,rbx
   140017d76:	mov    r14,rbx
   140017d79:	lea    rax,[rip+0x1ffe0]        # 0x140037d60
   140017d80:	sar    r14,0x5
   140017d84:	and    r15d,0x1f
   140017d88:	mov    rcx,QWORD PTR [rax+r14*8]
   140017d8c:	mov    QWORD PTR [rsp+0x50],r14
   140017d91:	imul   r15,r15,0x58
   140017d95:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140017d9a:	add    sil,sil
   140017d9d:	sar    sil,1
   140017da0:	cmp    sil,0x2
   140017da4:	je     0x140017dac
   140017da6:	cmp    sil,0x1
   140017daa:	jne    0x140017db5
   140017dac:	mov    eax,r13d
   140017daf:	not    eax
   140017db1:	test   al,0x1
   140017db3:	je     0x140017d45
   140017db5:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140017dbb:	je     0x140017dca
   140017dbd:	xor    edx,edx
   140017dbf:	mov    ecx,ebx
   140017dc1:	lea    r8d,[rdx+0x2]
   140017dc5:	call   0x140021240
   140017dca:	mov    ecx,ebx
   140017dcc:	call   0x14001eb14
   140017dd1:	test   eax,eax
   140017dd3:	je     0x1400180ca
   140017dd9:	lea    rax,[rip+0x1ff80]        # 0x140037d60
   140017de0:	mov    rax,QWORD PTR [rax+r14*8]
   140017de4:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140017dea:	je     0x1400180ca
   140017df0:	call   0x1400118e4
   140017df5:	xor    ebx,ebx
   140017df7:	lea    rdx,[rsp+0x58]
   140017dfc:	mov    rcx,QWORD PTR [rax+0xc0]
   140017e03:	lea    rax,[rip+0x1ff56]        # 0x140037d60
   140017e0a:	cmp    DWORD PTR [rcx+0x14],ebx
   140017e0d:	mov    rcx,QWORD PTR [rax+r14*8]
   140017e11:	mov    rcx,QWORD PTR [r15+rcx*1]
   140017e15:	sete   bl
   140017e18:	call   QWORD PTR [rip+0xf3fa]        # 0x140027218
   140017e1e:	test   eax,eax
   140017e20:	je     0x1400180ca
   140017e26:	test   ebx,ebx
   140017e28:	je     0x140017e33
   140017e2a:	test   sil,sil
   140017e2d:	je     0x1400180ca
   140017e33:	call   QWORD PTR [rip+0xf47f]        # 0x1400272b8
   140017e39:	and    DWORD PTR [rsp+0x4c],edi
   140017e3d:	mov    rbx,r12
   140017e40:	mov    DWORD PTR [rsp+0x58],eax
   140017e44:	test   r13d,r13d
   140017e47:	je     0x1400180c4
   140017e4d:	mov    r14d,DWORD PTR [rsp+0x58]
   140017e52:	mov    ebp,0xd
   140017e57:	test   sil,sil
   140017e5a:	jne    0x140017fe3
   140017e60:	mov    rdx,QWORD PTR [rsp+0x50]
   140017e65:	mov    cl,BYTE PTR [rbx]
   140017e67:	xor    r14d,r14d
   140017e6a:	cmp    cl,0xa
   140017e6d:	lea    rbp,[rip+0x1feec]        # 0x140037d60
   140017e74:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   140017e79:	sete   r14b
   140017e7d:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140017e83:	je     0x140017ea5
   140017e85:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140017e8a:	mov    BYTE PTR [rsp+0x5d],cl
   140017e8e:	mov    r8d,0x2
   140017e94:	mov    BYTE PTR [rsp+0x5c],al
   140017e98:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140017e9e:	lea    rdx,[rsp+0x5c]
   140017ea3:	jmp    0x140017eee
   140017ea5:	movsx  ecx,cl
   140017ea8:	call   0x1400185d0
   140017ead:	test   eax,eax
   140017eaf:	je     0x140017ee5
   140017eb1:	mov    rax,r13
   140017eb4:	sub    rax,rbx
   140017eb7:	add    rax,r12
   140017eba:	cmp    rax,0x1
   140017ebe:	jle    0x140018093
   140017ec4:	lea    rcx,[rsp+0x44]
   140017ec9:	mov    r8d,0x2
   140017ecf:	mov    rdx,rbx
   140017ed2:	call   0x140021764
   140017ed7:	cmp    eax,0xffffffff
   140017eda:	je     0x140018056
   140017ee0:	inc    rbx
   140017ee3:	jmp    0x140017f01
   140017ee5:	mov    r8d,0x1
   140017eeb:	mov    rdx,rbx
   140017eee:	lea    rcx,[rsp+0x44]
   140017ef3:	call   0x140021764
   140017ef8:	cmp    eax,0xffffffff
   140017efb:	je     0x140018056
   140017f01:	and    QWORD PTR [rsp+0x38],0x0
   140017f07:	and    QWORD PTR [rsp+0x30],0x0
   140017f0d:	mov    ecx,DWORD PTR [rsp+0x58]
   140017f11:	lea    rax,[rsp+0x5c]
   140017f16:	lea    r8,[rsp+0x44]
   140017f1b:	mov    r9d,0x1
   140017f21:	xor    edx,edx
   140017f23:	mov    DWORD PTR [rsp+0x28],0x5
   140017f2b:	inc    rbx
   140017f2e:	mov    QWORD PTR [rsp+0x20],rax
   140017f33:	call   QWORD PTR [rip+0xf477]        # 0x1400273b0
   140017f39:	mov    ebp,eax
   140017f3b:	test   eax,eax
   140017f3d:	je     0x140018056
   140017f43:	mov    rax,QWORD PTR [rsp+0x50]
   140017f48:	and    QWORD PTR [rsp+0x20],0x0
   140017f4e:	lea    rcx,[rip+0x1fe0b]        # 0x140037d60
   140017f55:	mov    rcx,QWORD PTR [rcx+rax*8]
   140017f59:	lea    r9,[rsp+0x4c]
   140017f5e:	lea    rdx,[rsp+0x5c]
   140017f63:	mov    rcx,QWORD PTR [r15+rcx*1]
   140017f67:	mov    r8d,ebp
   140017f6a:	call   QWORD PTR [rip+0xf4c8]        # 0x140027438
   140017f70:	test   eax,eax
   140017f72:	je     0x1400180ba
   140017f78:	mov    edi,ebx
   140017f7a:	sub    edi,r12d
   140017f7d:	add    edi,DWORD PTR [rsp+0x40]
   140017f81:	cmp    DWORD PTR [rsp+0x4c],ebp
   140017f85:	jl     0x140018056
   140017f8b:	mov    ebp,0xd
   140017f90:	test   r14d,r14d
   140017f93:	je     0x140018048
   140017f99:	mov    rax,QWORD PTR [rsp+0x50]
   140017f9e:	and    QWORD PTR [rsp+0x20],0x0
   140017fa4:	mov    BYTE PTR [rsp+0x5c],bpl
   140017fa9:	lea    rcx,[rip+0x1fdb0]        # 0x140037d60
   140017fb0:	lea    r9,[rsp+0x4c]
   140017fb5:	lea    r8d,[rbp-0xc]
   140017fb9:	mov    rcx,QWORD PTR [rcx+rax*8]
   140017fbd:	lea    rdx,[rsp+0x5c]
   140017fc2:	mov    rcx,QWORD PTR [r15+rcx*1]
   140017fc6:	call   QWORD PTR [rip+0xf46c]        # 0x140027438
   140017fcc:	test   eax,eax
   140017fce:	je     0x1400180ba
   140017fd4:	cmp    DWORD PTR [rsp+0x4c],0x1
   140017fd9:	jl     0x140018056
   140017fdb:	inc    DWORD PTR [rsp+0x40]
   140017fdf:	inc    edi
   140017fe1:	jmp    0x140018048
   140017fe3:	cmp    sil,0x1
   140017fe7:	je     0x140017fef
   140017fe9:	cmp    sil,0x2
   140017fed:	jne    0x140018006
   140017fef:	movzx  eax,WORD PTR [rbx]
   140017ff2:	xor    r14d,r14d
   140017ff5:	cmp    ax,0xa
   140017ff9:	mov    WORD PTR [rsp+0x44],ax
   140017ffe:	sete   r14b
   140018002:	add    rbx,0x2
   140018006:	cmp    sil,0x1
   14001800a:	je     0x140018012
   14001800c:	cmp    sil,0x2
   140018010:	jne    0x140018048
   140018012:	movzx  ecx,WORD PTR [rsp+0x44]
   140018017:	call   0x14002176c
   14001801c:	cmp    ax,WORD PTR [rsp+0x44]
   140018021:	jne    0x1400180ba
   140018027:	add    edi,0x2
   14001802a:	test   r14d,r14d
   14001802d:	je     0x140018048
   14001802f:	mov    ecx,ebp
   140018031:	mov    WORD PTR [rsp+0x44],bp
   140018036:	call   0x14002176c
   14001803b:	cmp    ax,WORD PTR [rsp+0x44]
   140018040:	jne    0x1400180ba
   140018042:	inc    edi
   140018044:	inc    DWORD PTR [rsp+0x40]
   140018048:	mov    eax,ebx
   14001804a:	sub    eax,r12d
   14001804d:	cmp    eax,r13d
   140018050:	jb     0x140017e57
   140018056:	mov    ebx,DWORD PTR [rsp+0x4c]
   14001805a:	mov    r14,QWORD PTR [rsp+0x50]
   14001805f:	mov    ebp,DWORD PTR [rsp+0x40]
   140018063:	test   edi,edi
   140018065:	jne    0x140018423
   14001806b:	test   ebx,ebx
   14001806d:	je     0x1400183ed
   140018073:	cmp    ebx,0x5
   140018076:	jne    0x1400183e1
   14001807c:	call   0x14000f574
   140018081:	mov    DWORD PTR [rax],0x9
   140018087:	call   0x14000f594
   14001808c:	mov    DWORD PTR [rax],ebx
   14001808e:	jmp    0x140017d6b
   140018093:	mov    al,BYTE PTR [rbx]
   140018095:	mov    r14,QWORD PTR [rsp+0x50]
   14001809a:	inc    edi
   14001809c:	mov    rcx,QWORD PTR [rbp+r14*8+0x0]
   1400180a1:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   1400180a6:	mov    rax,QWORD PTR [rbp+r14*8+0x0]
   1400180ab:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   1400180b4:	mov    ebx,DWORD PTR [rsp+0x4c]
   1400180b8:	jmp    0x14001805f
   1400180ba:	call   QWORD PTR [rip+0xf1b0]        # 0x140027270
   1400180c0:	mov    ebx,eax
   1400180c2:	jmp    0x14001805a
   1400180c4:	mov    ebx,DWORD PTR [rsp+0x4c]
   1400180c8:	jmp    0x14001806b
   1400180ca:	lea    rax,[rip+0x1fc8f]        # 0x140037d60
   1400180d1:	mov    rcx,QWORD PTR [rax+r14*8]
   1400180d5:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   1400180db:	je     0x1400183ab
   1400180e1:	xor    ebx,ebx
   1400180e3:	mov    rbp,r12
   1400180e6:	test   sil,sil
   1400180e9:	jne    0x1400181bf
   1400180ef:	test   r13d,r13d
   1400180f2:	je     0x1400183f4
   1400180f8:	lea    edx,[rbx+0xd]
   1400180fb:	mov    r14d,DWORD PTR [rsp+0x40]
   140018100:	lea    rsi,[rsp+0x720]
   140018108:	xor    ecx,ecx
   14001810a:	mov    eax,ebp
   14001810c:	sub    eax,r12d
   14001810f:	cmp    eax,r13d
   140018112:	jae    0x14001813a
   140018114:	mov    al,BYTE PTR [rbp+0x0]
   140018117:	inc    rbp
   14001811a:	cmp    al,0xa
   14001811c:	jne    0x140018129
   14001811e:	mov    BYTE PTR [rsi],dl
   140018120:	inc    r14d
   140018123:	inc    rsi
   140018126:	inc    rcx
   140018129:	inc    rcx
   14001812c:	mov    BYTE PTR [rsi],al
   14001812e:	inc    rsi
   140018131:	cmp    rcx,0x13ff
   140018138:	jb     0x14001810a
   14001813a:	and    QWORD PTR [rsp+0x20],rbx
   14001813f:	lea    rax,[rsp+0x720]
   140018147:	mov    r8d,esi
   14001814a:	sub    r8d,eax
   14001814d:	lea    rax,[rip+0x1fc0c]        # 0x140037d60
   140018154:	mov    DWORD PTR [rsp+0x40],r14d
   140018159:	mov    r14,QWORD PTR [rsp+0x50]
   14001815e:	lea    r9,[rsp+0x48]
   140018163:	lea    rdx,[rsp+0x720]
   14001816b:	mov    rcx,QWORD PTR [rax+r14*8]
   14001816f:	mov    rcx,QWORD PTR [r15+rcx*1]
   140018173:	call   QWORD PTR [rip+0xf2bf]        # 0x140027438
   140018179:	test   eax,eax
   14001817b:	je     0x1400181b2
   14001817d:	add    edi,DWORD PTR [rsp+0x48]
   140018181:	lea    rax,[rsp+0x720]
   140018189:	sub    rsi,rax
   14001818c:	movsxd rax,DWORD PTR [rsp+0x48]
   140018191:	cmp    rax,rsi
   140018194:	jl     0x14001805f
   14001819a:	mov    eax,ebp
   14001819c:	mov    edx,0xd
   1400181a1:	sub    eax,r12d
   1400181a4:	cmp    eax,r13d
   1400181a7:	jb     0x1400180fb
   1400181ad:	jmp    0x14001805f
   1400181b2:	call   QWORD PTR [rip+0xf0b8]        # 0x140027270
   1400181b8:	mov    ebx,eax
   1400181ba:	jmp    0x14001805f
   1400181bf:	cmp    sil,0x2
   1400181c3:	jne    0x14001829d
   1400181c9:	test   r13d,r13d
   1400181cc:	je     0x1400183f4
   1400181d2:	mov    edx,0xd
   1400181d7:	mov    r14d,DWORD PTR [rsp+0x40]
   1400181dc:	lea    rsi,[rsp+0x720]
   1400181e4:	xor    ecx,ecx
   1400181e6:	mov    eax,ebp
   1400181e8:	sub    eax,r12d
   1400181eb:	cmp    eax,r13d
   1400181ee:	jae    0x140018221
   1400181f0:	movzx  eax,WORD PTR [rbp+0x0]
   1400181f4:	add    rbp,0x2
   1400181f8:	cmp    ax,0xa
   1400181fc:	jne    0x14001820d
   1400181fe:	mov    WORD PTR [rsi],dx
   140018201:	add    r14d,0x2
   140018205:	add    rsi,0x2
   140018209:	add    rcx,0x2
   14001820d:	add    rcx,0x2
   140018211:	mov    WORD PTR [rsi],ax
   140018214:	add    rsi,0x2
   140018218:	cmp    rcx,0x13fe
   14001821f:	jb     0x1400181e6
   140018221:	and    QWORD PTR [rsp+0x20],rbx
   140018226:	lea    rax,[rsp+0x720]
   14001822e:	mov    r8d,esi
   140018231:	sub    r8d,eax
   140018234:	lea    rax,[rip+0x1fb25]        # 0x140037d60
   14001823b:	mov    DWORD PTR [rsp+0x40],r14d
   140018240:	mov    r14,QWORD PTR [rsp+0x50]
   140018245:	lea    r9,[rsp+0x48]
   14001824a:	lea    rdx,[rsp+0x720]
   140018252:	mov    rcx,QWORD PTR [rax+r14*8]
   140018256:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001825a:	call   QWORD PTR [rip+0xf1d8]        # 0x140027438
   140018260:	test   eax,eax
   140018262:	je     0x1400181b2
   140018268:	add    edi,DWORD PTR [rsp+0x48]
   14001826c:	lea    rax,[rsp+0x720]
   140018274:	sub    rsi,rax
   140018277:	movsxd rax,DWORD PTR [rsp+0x48]
   14001827c:	cmp    rax,rsi
   14001827f:	jl     0x14001805f
   140018285:	mov    eax,ebp
   140018287:	mov    edx,0xd
   14001828c:	sub    eax,r12d
   14001828f:	cmp    eax,r13d
   140018292:	jb     0x1400181d7
   140018298:	jmp    0x14001805f
   14001829d:	test   r13d,r13d
   1400182a0:	je     0x1400183f4
   1400182a6:	mov    r8d,0xd
   1400182ac:	lea    rcx,[rsp+0x70]
   1400182b1:	xor    edx,edx
   1400182b3:	mov    eax,ebp
   1400182b5:	sub    eax,r12d
   1400182b8:	cmp    eax,r13d
   1400182bb:	jae    0x1400182eb
   1400182bd:	movzx  eax,WORD PTR [rbp+0x0]
   1400182c1:	add    rbp,0x2
   1400182c5:	cmp    ax,0xa
   1400182c9:	jne    0x1400182d7
   1400182cb:	mov    WORD PTR [rcx],r8w
   1400182cf:	add    rcx,0x2
   1400182d3:	add    rdx,0x2
   1400182d7:	add    rdx,0x2
   1400182db:	mov    WORD PTR [rcx],ax
   1400182de:	add    rcx,0x2
   1400182e2:	cmp    rdx,0x6a8
   1400182e9:	jb     0x1400182b3
   1400182eb:	and    QWORD PTR [rsp+0x38],0x0
   1400182f1:	and    QWORD PTR [rsp+0x30],0x0
   1400182f7:	lea    rax,[rsp+0x70]
   1400182fc:	sub    ecx,eax
   1400182fe:	lea    r8,[rsp+0x70]
   140018303:	mov    DWORD PTR [rsp+0x28],0xd55
   14001830b:	mov    eax,ecx
   14001830d:	mov    ecx,0xfde9
   140018312:	cdq    
   140018313:	sub    eax,edx
   140018315:	xor    edx,edx
   140018317:	sar    eax,1
   140018319:	mov    r9d,eax
   14001831c:	lea    rax,[rsp+0x720]
   140018324:	mov    QWORD PTR [rsp+0x20],rax
   140018329:	call   QWORD PTR [rip+0xf081]        # 0x1400273b0
   14001832f:	mov    r14d,eax
   140018332:	test   eax,eax
   140018334:	je     0x1400180ba
   14001833a:	xor    esi,esi
   14001833c:	mov    rax,QWORD PTR [rsp+0x50]
   140018341:	and    QWORD PTR [rsp+0x20],0x0
   140018347:	movsxd rcx,esi
   14001834a:	lea    rdx,[rsp+rcx*1+0x720]
   140018352:	mov    r8d,r14d
   140018355:	lea    rcx,[rip+0x1fa04]        # 0x140037d60
   14001835c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140018360:	lea    r9,[rsp+0x48]
   140018365:	sub    r8d,esi
   140018368:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001836c:	call   QWORD PTR [rip+0xf0c6]        # 0x140027438
   140018372:	test   eax,eax
   140018374:	je     0x140018381
   140018376:	add    esi,DWORD PTR [rsp+0x48]
   14001837a:	cmp    r14d,esi
   14001837d:	jg     0x14001833c
   14001837f:	jmp    0x140018389
   140018381:	call   QWORD PTR [rip+0xeee9]        # 0x140027270
   140018387:	mov    ebx,eax
   140018389:	cmp    r14d,esi
   14001838c:	jg     0x14001805a
   140018392:	mov    edi,ebp
   140018394:	mov    r8d,0xd
   14001839a:	sub    edi,r12d
   14001839d:	cmp    edi,r13d
   1400183a0:	jb     0x1400182ac
   1400183a6:	jmp    0x14001805a
   1400183ab:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400183af:	and    QWORD PTR [rsp+0x20],rdi
   1400183b4:	lea    r9,[rsp+0x48]
   1400183b9:	mov    r8d,r13d
   1400183bc:	mov    rdx,r12
   1400183bf:	call   QWORD PTR [rip+0xf073]        # 0x140027438
   1400183c5:	test   eax,eax
   1400183c7:	je     0x1400183d4
   1400183c9:	mov    edi,DWORD PTR [rsp+0x48]
   1400183cd:	xor    ebx,ebx
   1400183cf:	jmp    0x140018063
   1400183d4:	call   QWORD PTR [rip+0xee96]        # 0x140027270
   1400183da:	mov    ebx,eax
   1400183dc:	jmp    0x140018063
   1400183e1:	mov    ecx,ebx
   1400183e3:	call   0x14000f5b4
   1400183e8:	jmp    0x140017d6b
   1400183ed:	lea    rax,[rip+0x1f96c]        # 0x140037d60
   1400183f4:	mov    rax,QWORD PTR [rax+r14*8]
   1400183f8:	test   BYTE PTR [r15+rax*1+0x8],0x40
   1400183fe:	je     0x14001840b
   140018400:	cmp    BYTE PTR [r12],0x1a
   140018405:	je     0x140017d39
   14001840b:	call   0x14000f574
   140018410:	mov    DWORD PTR [rax],0x1c
   140018416:	call   0x14000f594
   14001841b:	and    DWORD PTR [rax],0x0
   14001841e:	jmp    0x140017d6b
   140018423:	sub    edi,ebp
   140018425:	mov    eax,edi
   140018427:	mov    rcx,QWORD PTR [rsp+0x1b20]
   14001842f:	xor    rcx,rsp
   140018432:	call   0x140009080
   140018437:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14001843f:	add    rsp,0x1b30
   140018446:	pop    r15
   140018448:	pop    r14
   14001844a:	pop    r13
   14001844c:	pop    r12
   14001844e:	pop    rdi
   14001844f:	pop    rsi
   140018450:	pop    rbp
   140018451:	ret    
   140018452:	int3   
   140018453:	int3   
   140018454:	mov    QWORD PTR [rsp+0x10],rbx
   140018459:	mov    QWORD PTR [rsp+0x18],rsi
   14001845e:	mov    DWORD PTR [rsp+0x8],ecx
   140018462:	push   rdi
   140018463:	push   r12
   140018465:	push   r13
   140018467:	push   r14
   140018469:	push   r15
   14001846b:	sub    rsp,0x30
   14001846f:	mov    r12d,r8d
   140018472:	mov    r13,rdx
   140018475:	movsxd rbx,ecx
   140018478:	cmp    ebx,0xfffffffe
   14001847b:	jne    0x140018499
   14001847d:	call   0x14000f594
   140018482:	xor    edi,edi
   140018484:	mov    DWORD PTR [rax],edi
   140018486:	call   0x14000f574
   14001848b:	mov    DWORD PTR [rax],0x9
   140018491:	or     eax,0xffffffff
   140018494:	jmp    0x14001856d
   140018499:	xor    edi,edi
   14001849b:	cmp    ebx,edi
   14001849d:	jl     0x140018544
   1400184a3:	cmp    ebx,DWORD PTR [rip+0x1f8a3]        # 0x140037d4c
   1400184a9:	jae    0x140018544
   1400184af:	mov    rsi,rbx
   1400184b2:	mov    r14,rbx
   1400184b5:	sar    r14,0x5
   1400184b9:	lea    r15,[rip+0x1f8a0]        # 0x140037d60
   1400184c0:	and    esi,0x1f
   1400184c3:	imul   rsi,rsi,0x58
   1400184c7:	mov    rax,QWORD PTR [r15+r14*8]
   1400184cb:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400184d0:	and    ecx,0x1
   1400184d3:	jne    0x140018500
   1400184d5:	call   0x14000f594
   1400184da:	mov    DWORD PTR [rax],edi
   1400184dc:	call   0x14000f574
   1400184e1:	mov    DWORD PTR [rax],0x9
   1400184e7:	mov    QWORD PTR [rsp+0x20],rdi
   1400184ec:	xor    r9d,r9d
   1400184ef:	xor    r8d,r8d
   1400184f2:	xor    edx,edx
   1400184f4:	xor    ecx,ecx
   1400184f6:	call   0x14000e4d8
   1400184fb:	or     eax,0xffffffff
   1400184fe:	jmp    0x14001856d
   140018500:	mov    ecx,ebx
   140018502:	call   0x1400135cc
   140018507:	nop
   140018508:	mov    rax,QWORD PTR [r15+r14*8]
   14001850c:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140018511:	je     0x140018524
   140018513:	mov    r8d,r12d
   140018516:	mov    rdx,r13
   140018519:	mov    ecx,ebx
   14001851b:	call   0x140017cf4
   140018520:	mov    edi,eax
   140018522:	jmp    0x140018539
   140018524:	call   0x14000f574
   140018529:	mov    DWORD PTR [rax],0x9
   14001852f:	call   0x14000f594
   140018534:	mov    DWORD PTR [rax],edi
   140018536:	or     edi,0xffffffff
   140018539:	mov    ecx,ebx
   14001853b:	call   0x140013674
   140018540:	mov    eax,edi
   140018542:	jmp    0x14001856d
   140018544:	call   0x14000f594
   140018549:	mov    DWORD PTR [rax],edi
   14001854b:	call   0x14000f574
   140018550:	mov    DWORD PTR [rax],0x9
   140018556:	mov    QWORD PTR [rsp+0x20],rdi
   14001855b:	xor    r9d,r9d
   14001855e:	xor    r8d,r8d
   140018561:	xor    edx,edx
   140018563:	xor    ecx,ecx
   140018565:	call   0x14000e4d8
   14001856a:	or     eax,0xffffffff
   14001856d:	mov    rbx,QWORD PTR [rsp+0x68]
   140018572:	mov    rsi,QWORD PTR [rsp+0x70]
   140018577:	add    rsp,0x30
   14001857b:	pop    r15
   14001857d:	pop    r14
   14001857f:	pop    r13
   140018581:	pop    r12
   140018583:	pop    rdi
   140018584:	ret    
   140018585:	int3   
   140018586:	int3   
   140018587:	int3   
   140018588:	rex push rbx
   14001858a:	sub    rsp,0x40
   14001858e:	mov    ebx,ecx
   140018590:	lea    rcx,[rsp+0x20]
   140018595:	call   0x1400094b4
   14001859a:	mov    rax,QWORD PTR [rsp+0x20]
   14001859f:	movzx  r11d,bl
   1400185a3:	mov    rcx,QWORD PTR [rax+0x140]
   1400185aa:	movzx  eax,WORD PTR [rcx+r11*2]
   1400185af:	and    eax,0x8000
   1400185b4:	cmp    BYTE PTR [rsp+0x38],0x0
   1400185b9:	je     0x1400185c7
   1400185bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400185c0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400185c7:	add    rsp,0x40
   1400185cb:	pop    rbx
   1400185cc:	ret    
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	rex push rbx
   1400185d2:	sub    rsp,0x40
   1400185d6:	mov    ebx,ecx
   1400185d8:	lea    rcx,[rsp+0x20]
   1400185dd:	xor    edx,edx
   1400185df:	call   0x1400094b4
   1400185e4:	mov    rax,QWORD PTR [rsp+0x20]
   1400185e9:	movzx  r11d,bl
   1400185ed:	mov    rcx,QWORD PTR [rax+0x140]
   1400185f4:	movzx  eax,WORD PTR [rcx+r11*2]
   1400185f9:	and    eax,0x8000
   1400185fe:	cmp    BYTE PTR [rsp+0x38],0x0
   140018603:	je     0x140018611
   140018605:	mov    rcx,QWORD PTR [rsp+0x30]
   14001860a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018611:	add    rsp,0x40
   140018615:	pop    rbx
   140018616:	ret    
   140018617:	int3   
   140018618:	mov    r8,rdx
   14001861b:	mov    edx,0x103
   140018620:	jmp    0x140021960
   140018625:	int3   
   140018626:	int3   
   140018627:	int3   
   140018628:	mov    edx,0x103
   14001862d:	jmp    0x140021a1c
   140018632:	int3   
   140018633:	int3   
   140018634:	mov    r8,rdx
   140018637:	mov    edx,0x1
   14001863c:	jmp    0x140021960
   140018641:	int3   
   140018642:	int3   
   140018643:	int3   
   140018644:	mov    edx,0x1
   140018649:	jmp    0x140021a1c
   14001864e:	int3   
   14001864f:	int3   
   140018650:	mov    r8,rdx
   140018653:	mov    edx,0x2
   140018658:	jmp    0x140021960
   14001865d:	int3   
   14001865e:	int3   
   14001865f:	int3   
   140018660:	mov    edx,0x2
   140018665:	jmp    0x140021a1c
   14001866a:	int3   
   14001866b:	int3   
   14001866c:	mov    r8,rdx
   14001866f:	mov    edx,0x4
   140018674:	jmp    0x140021960
   140018679:	int3   
   14001867a:	int3   
   14001867b:	int3   
   14001867c:	mov    edx,0x4
   140018681:	jmp    0x140021a1c
   140018686:	int3   
   140018687:	int3   
   140018688:	mov    r8,rdx
   14001868b:	mov    edx,0x80
   140018690:	jmp    0x140021960
   140018695:	int3   
   140018696:	int3   
   140018697:	int3   
   140018698:	mov    edx,0x80
   14001869d:	jmp    0x140021a1c
   1400186a2:	int3   
   1400186a3:	int3   
   1400186a4:	mov    r8,rdx
   1400186a7:	mov    edx,0x8
   1400186ac:	jmp    0x140021960
   1400186b1:	int3   
   1400186b2:	int3   
   1400186b3:	int3   
   1400186b4:	mov    edx,0x8
   1400186b9:	jmp    0x140021a1c
   1400186be:	int3   
   1400186bf:	int3   
   1400186c0:	mov    r8,rdx
   1400186c3:	mov    edx,0x10
   1400186c8:	jmp    0x140021960
   1400186cd:	int3   
   1400186ce:	int3   
   1400186cf:	int3   
   1400186d0:	mov    edx,0x10
   1400186d5:	jmp    0x140021a1c
   1400186da:	int3   
   1400186db:	int3   
   1400186dc:	mov    r8,rdx
   1400186df:	mov    edx,0x107
   1400186e4:	jmp    0x140021960
   1400186e9:	int3   
   1400186ea:	int3   
   1400186eb:	int3   
   1400186ec:	mov    edx,0x107
   1400186f1:	jmp    0x140021a1c
   1400186f6:	int3   
   1400186f7:	int3   
   1400186f8:	mov    r8,rdx
   1400186fb:	mov    edx,0x157
   140018700:	jmp    0x140021960
   140018705:	int3   
   140018706:	int3   
   140018707:	int3   
   140018708:	mov    edx,0x157
   14001870d:	jmp    0x140021a1c
   140018712:	int3   
   140018713:	int3   
   140018714:	mov    r8,rdx
   140018717:	mov    edx,0x117
   14001871c:	jmp    0x140021960
   140018721:	int3   
   140018722:	int3   
   140018723:	int3   
   140018724:	mov    edx,0x117
   140018729:	jmp    0x140021a1c
   14001872e:	int3   
   14001872f:	int3   
   140018730:	mov    r8,rdx
   140018733:	mov    edx,0x20
   140018738:	jmp    0x140021960
   14001873d:	int3   
   14001873e:	int3   
   14001873f:	int3   
   140018740:	mov    edx,0x20
   140018745:	jmp    0x140021a1c
   14001874a:	int3   
   14001874b:	int3   
   14001874c:	xor    eax,eax
   14001874e:	mov    edx,0x80
   140018753:	cmp    cx,dx
   140018756:	setb   al
   140018759:	ret    
   14001875a:	int3   
   14001875b:	int3   
   14001875c:	rex push rbx
   14001875e:	sub    rsp,0x20
   140018762:	mov    r8,rdx
   140018765:	mov    edx,0x107
   14001876a:	movzx  ebx,cx
   14001876d:	call   0x140021960
   140018772:	xor    edx,edx
   140018774:	cmp    eax,edx
   140018776:	jne    0x14001877e
   140018778:	cmp    bx,0x5f
   14001877c:	jne    0x140018783
   14001877e:	mov    edx,0x1
   140018783:	mov    eax,edx
   140018785:	add    rsp,0x20
   140018789:	pop    rbx
   14001878a:	ret    
   14001878b:	int3   
   14001878c:	rex push rbx
   14001878e:	sub    rsp,0x20
   140018792:	mov    edx,0x107
   140018797:	movzx  ebx,cx
   14001879a:	call   0x140021a1c
   14001879f:	xor    edx,edx
   1400187a1:	cmp    eax,edx
   1400187a3:	jne    0x1400187ab
   1400187a5:	cmp    bx,0x5f
   1400187a9:	jne    0x1400187b0
   1400187ab:	mov    edx,0x1
   1400187b0:	mov    eax,edx
   1400187b2:	add    rsp,0x20
   1400187b6:	pop    rbx
   1400187b7:	ret    
   1400187b8:	rex push rbx
   1400187ba:	sub    rsp,0x20
   1400187be:	mov    r8,rdx
   1400187c1:	mov    edx,0x103
   1400187c6:	movzx  ebx,cx
   1400187c9:	call   0x140021960
   1400187ce:	xor    edx,edx
   1400187d0:	cmp    eax,edx
   1400187d2:	jne    0x1400187da
   1400187d4:	cmp    bx,0x5f
   1400187d8:	jne    0x1400187df
   1400187da:	mov    edx,0x1
   1400187df:	mov    eax,edx
   1400187e1:	add    rsp,0x20
   1400187e5:	pop    rbx
   1400187e6:	ret    
   1400187e7:	int3   
   1400187e8:	rex push rbx
   1400187ea:	sub    rsp,0x20
   1400187ee:	mov    edx,0x103
   1400187f3:	movzx  ebx,cx
   1400187f6:	call   0x140021a1c
   1400187fb:	xor    edx,edx
   1400187fd:	cmp    eax,edx
   1400187ff:	jne    0x140018807
   140018801:	cmp    bx,0x5f
   140018805:	jne    0x14001880c
   140018807:	mov    edx,0x1
   14001880c:	mov    eax,edx
   14001880e:	add    rsp,0x20
   140018812:	pop    rbx
   140018813:	ret    
   140018814:	mov    r9,rcx
   140018817:	movzx  r8d,BYTE PTR [r9]
   14001881b:	inc    r9
   14001881e:	lea    eax,[r8-0x41]
   140018822:	cmp    eax,0x19
   140018825:	ja     0x14001882b
   140018827:	add    r8d,0x20
   14001882b:	movzx  ecx,BYTE PTR [rdx]
   14001882e:	inc    rdx
   140018831:	lea    eax,[rcx-0x41]
   140018834:	cmp    eax,0x19
   140018837:	ja     0x14001883c
   140018839:	add    ecx,0x20
   14001883c:	test   r8d,r8d
   14001883f:	je     0x140018846
   140018841:	cmp    r8d,ecx
   140018844:	je     0x140018817
   140018846:	sub    r8d,ecx
   140018849:	mov    eax,r8d
   14001884c:	ret    
   14001884d:	int3   
   14001884e:	int3   
   14001884f:	int3   
   140018850:	mov    QWORD PTR [rsp+0x8],rbx
   140018855:	mov    QWORD PTR [rsp+0x10],rsi
   14001885a:	push   rdi
   14001885b:	sub    rsp,0x50
   14001885f:	mov    rsi,rcx
   140018862:	mov    rdi,rdx
   140018865:	lea    rcx,[rsp+0x30]
   14001886a:	mov    rdx,r8
   14001886d:	call   0x1400094b4
   140018872:	test   rsi,rsi
   140018875:	jne    0x1400188b1
   140018877:	call   0x14000f574
   14001887c:	and    QWORD PTR [rsp+0x20],0x0
   140018882:	xor    r9d,r9d
   140018885:	xor    r8d,r8d
   140018888:	xor    edx,edx
   14001888a:	xor    ecx,ecx
   14001888c:	mov    DWORD PTR [rax],0x16
   140018892:	call   0x14000e4d8
   140018897:	cmp    BYTE PTR [rsp+0x48],0x0
   14001889c:	je     0x1400188aa
   14001889e:	mov    rax,QWORD PTR [rsp+0x40]
   1400188a3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400188aa:	mov    eax,0x7fffffff
   1400188af:	jmp    0x140018922
   1400188b1:	test   rdi,rdi
   1400188b4:	je     0x140018877
   1400188b6:	mov    rax,QWORD PTR [rsp+0x30]
   1400188bb:	cmp    DWORD PTR [rax+0x14],0x0
   1400188bf:	jne    0x1400188e1
   1400188c1:	mov    rdx,rdi
   1400188c4:	mov    rcx,rsi
   1400188c7:	call   0x140018814
   1400188cc:	cmp    BYTE PTR [rsp+0x48],0x0
   1400188d1:	je     0x140018922
   1400188d3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400188d8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400188df:	jmp    0x140018922
   1400188e1:	movzx  ecx,BYTE PTR [rsi]
   1400188e4:	lea    rdx,[rsp+0x30]
   1400188e9:	call   0x140021ab8
   1400188ee:	movzx  ecx,BYTE PTR [rdi]
   1400188f1:	lea    rdx,[rsp+0x30]
   1400188f6:	mov    ebx,eax
   1400188f8:	inc    rsi
   1400188fb:	call   0x140021ab8
   140018900:	inc    rdi
   140018903:	test   ebx,ebx
   140018905:	je     0x14001890b
   140018907:	cmp    ebx,eax
   140018909:	je     0x1400188e1
   14001890b:	sub    ebx,eax
   14001890d:	cmp    BYTE PTR [rsp+0x48],0x0
   140018912:	je     0x140018920
   140018914:	mov    rcx,QWORD PTR [rsp+0x40]
   140018919:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018920:	mov    eax,ebx
   140018922:	mov    rbx,QWORD PTR [rsp+0x60]
   140018927:	mov    rsi,QWORD PTR [rsp+0x68]
   14001892c:	add    rsp,0x50
   140018930:	pop    rdi
   140018931:	ret    
   140018932:	int3   
   140018933:	int3   
   140018934:	sub    rsp,0x38
   140018938:	cmp    DWORD PTR [rip+0x1d681],0x0        # 0x140035fc0
   14001893f:	jne    0x140018979
   140018941:	test   rcx,rcx
   140018944:	jne    0x14001896d
   140018946:	call   0x14000f574
   14001894b:	and    QWORD PTR [rsp+0x20],0x0
   140018951:	xor    r9d,r9d
   140018954:	xor    r8d,r8d
   140018957:	xor    edx,edx
   140018959:	xor    ecx,ecx
   14001895b:	mov    DWORD PTR [rax],0x16
   140018961:	call   0x14000e4d8
   140018966:	mov    eax,0x7fffffff
   14001896b:	jmp    0x140018981
   14001896d:	test   rdx,rdx
   140018970:	je     0x140018946
   140018972:	call   0x140018814
   140018977:	jmp    0x140018981
   140018979:	xor    r8d,r8d
   14001897c:	call   0x140018850
   140018981:	add    rsp,0x38
   140018985:	ret    
   140018986:	int3   
   140018987:	int3   
   140018988:	mov    QWORD PTR [rsp+0x8],rbx
   14001898d:	mov    QWORD PTR [rsp+0x18],rbp
   140018992:	push   rsi
   140018993:	push   rdi
   140018994:	push   r12
   140018996:	push   r13
   140018998:	push   r15
   14001899a:	sub    rsp,0x30
   14001899e:	mov    ebp,DWORD PTR [rip+0x1dd54]        # 0x1400366f8
   1400189a4:	mov    rsi,r9
   1400189a7:	xor    r9d,r9d
   1400189aa:	xor    r10d,r10d
   1400189ad:	xor    r11d,r11d
   1400189b0:	cmp    BYTE PTR [rdx],0x20
   1400189b3:	lea    r15d,[r9+0x1]
   1400189b7:	mov    r12d,r8d
   1400189ba:	mov    rbx,rdx
   1400189bd:	mov    r13,rcx
   1400189c0:	jne    0x1400189ca
   1400189c2:	add    rbx,r15
   1400189c5:	cmp    BYTE PTR [rbx],0x20
   1400189c8:	je     0x1400189c2
   1400189ca:	cmp    BYTE PTR [rbx],0x61
   1400189cd:	je     0x140018a0e
   1400189cf:	cmp    BYTE PTR [rbx],0x72
   1400189d2:	je     0x140018a07
   1400189d4:	cmp    BYTE PTR [rbx],0x77
   1400189d7:	je     0x140018a00
   1400189d9:	call   0x14000f574
   1400189de:	and    QWORD PTR [rsp+0x20],0x0
   1400189e4:	xor    r9d,r9d
   1400189e7:	xor    r8d,r8d
   1400189ea:	xor    edx,edx
   1400189ec:	xor    ecx,ecx
   1400189ee:	mov    DWORD PTR [rax],0x16
   1400189f4:	call   0x14000e4d8
   1400189f9:	xor    eax,eax
   1400189fb:	jmp    0x140018c39
   140018a00:	mov    edi,0x301
   140018a05:	jmp    0x140018a13
   140018a07:	xor    edi,edi
   140018a09:	or     ebp,r15d
   140018a0c:	jmp    0x140018a16
   140018a0e:	mov    edi,0x109
   140018a13:	or     ebp,0x2
   140018a16:	add    rbx,r15
   140018a19:	mov    edx,r15d
   140018a1c:	mov    al,BYTE PTR [rbx]
   140018a1e:	test   al,al
   140018a20:	je     0x140018be3
   140018a26:	mov    r8d,0xc000
   140018a2c:	test   edx,edx
   140018a2e:	je     0x140018b24
   140018a34:	movsx  ecx,al
   140018a37:	cmp    ecx,0x53
   140018a3a:	jg     0x140018aba
   140018a3c:	je     0x140018aad
   140018a3e:	sub    ecx,0x20
   140018a41:	je     0x140018b17
   140018a47:	sub    ecx,0xb
   140018a4a:	je     0x140018a98
   140018a4c:	sub    ecx,r15d
   140018a4f:	je     0x140018a93
   140018a51:	sub    ecx,0x18
   140018a54:	je     0x140018a81
   140018a56:	sub    ecx,0xa
   140018a59:	je     0x140018a78
   140018a5b:	cmp    ecx,0x4
   140018a5e:	jne    0x1400189d9
   140018a64:	test   r10d,r10d
   140018a67:	jne    0x140018b0f
   140018a6d:	mov    r10d,r15d
   140018a70:	or     edi,0x10
   140018a73:	jmp    0x140018b17
   140018a78:	bts    edi,0x7
   140018a7c:	jmp    0x140018b17
   140018a81:	test   dil,0x40
   140018a85:	jne    0x140018b0f
   140018a8b:	or     edi,0x40
   140018a8e:	jmp    0x140018b17
   140018a93:	mov    r11d,r15d
   140018a96:	jmp    0x140018b0f
   140018a98:	test   dil,0x2
   140018a9c:	jne    0x140018b0f
   140018a9e:	and    edi,0xfffffffe
   140018aa1:	and    ebp,0xfffffffc
   140018aa4:	or     edi,0x2
   140018aa7:	bts    ebp,0x7
   140018aab:	jmp    0x140018b17
   140018aad:	test   r10d,r10d
   140018ab0:	jne    0x140018b0f
   140018ab2:	mov    r10d,r15d
   140018ab5:	or     edi,0x20
   140018ab8:	jmp    0x140018b17
   140018aba:	sub    ecx,0x54
   140018abd:	je     0x140018b09
   140018abf:	sub    ecx,0xe
   140018ac2:	je     0x140018afe
   140018ac4:	sub    ecx,r15d
   140018ac7:	je     0x140018af0
   140018ac9:	sub    ecx,0xb
   140018acc:	je     0x140018ae2
   140018ace:	cmp    ecx,0x6
   140018ad1:	jne    0x1400189d9
   140018ad7:	test   r8d,edi
   140018ada:	jne    0x140018b0f
   140018adc:	bts    edi,0xe
   140018ae0:	jmp    0x140018b17
   140018ae2:	test   r9d,r9d
   140018ae5:	jne    0x140018b0f
   140018ae7:	mov    r9d,r15d
   140018aea:	btr    ebp,0xe
   140018aee:	jmp    0x140018b17
   140018af0:	test   r9d,r9d
   140018af3:	jne    0x140018b0f
   140018af5:	mov    r9d,r15d
   140018af8:	bts    ebp,0xe
   140018afc:	jmp    0x140018b17
   140018afe:	test   r8d,edi
   140018b01:	jne    0x140018b0f
   140018b03:	bts    edi,0xf
   140018b07:	jmp    0x140018b17
   140018b09:	bt     edi,0xc
   140018b0d:	jae    0x140018b13
   140018b0f:	xor    edx,edx
   140018b11:	jmp    0x140018b17
   140018b13:	bts    edi,0xc
   140018b17:	add    rbx,r15
   140018b1a:	mov    al,BYTE PTR [rbx]
   140018b1c:	test   al,al
   140018b1e:	jne    0x140018a2c
   140018b24:	test   r11d,r11d
   140018b27:	je     0x140018be3
   140018b2d:	jmp    0x140018b32
   140018b2f:	add    rbx,r15
   140018b32:	cmp    BYTE PTR [rbx],0x20
   140018b35:	je     0x140018b2f
   140018b37:	lea    rcx,[rip+0x15bc2]        # 0x14002e700
   140018b3e:	mov    r8d,0x3
   140018b44:	mov    rdx,rbx
   140018b47:	call   0x140022a4c
   140018b4c:	test   eax,eax
   140018b4e:	jne    0x1400189d9
   140018b54:	add    rbx,0x3
   140018b58:	jmp    0x140018b5d
   140018b5a:	add    rbx,r15
   140018b5d:	cmp    BYTE PTR [rbx],0x20
   140018b60:	je     0x140018b5a
   140018b62:	cmp    BYTE PTR [rbx],0x3d
   140018b65:	jne    0x1400189d9
   140018b6b:	add    rbx,r15
   140018b6e:	cmp    BYTE PTR [rbx],0x20
   140018b71:	je     0x140018b6b
   140018b73:	lea    rdx,[rip+0x15b8a]        # 0x14002e704
   140018b7a:	mov    r8d,0x5
   140018b80:	mov    rcx,rbx
   140018b83:	call   0x1400228dc
   140018b88:	test   eax,eax
   140018b8a:	jne    0x140018b96
   140018b8c:	add    rbx,0x5
   140018b90:	bts    edi,0x12
   140018b94:	jmp    0x140018be3
   140018b96:	lea    rdx,[rip+0x15b73]        # 0x14002e710
   140018b9d:	mov    r8d,0x8
   140018ba3:	mov    rcx,rbx
   140018ba6:	call   0x1400228dc
   140018bab:	test   eax,eax
   140018bad:	jne    0x140018bb9
   140018baf:	add    rbx,0x8
   140018bb3:	bts    edi,0x11
   140018bb7:	jmp    0x140018be3
   140018bb9:	lea    rdx,[rip+0x15b60]        # 0x14002e720
   140018bc0:	mov    r8d,0x7
   140018bc6:	mov    rcx,rbx
   140018bc9:	call   0x1400228dc
   140018bce:	test   eax,eax
   140018bd0:	jne    0x1400189d9
   140018bd6:	add    rbx,0x7
   140018bda:	bts    edi,0x10
   140018bde:	jmp    0x140018be3
   140018be0:	add    rbx,r15
   140018be3:	cmp    BYTE PTR [rbx],0x20
   140018be6:	je     0x140018be0
   140018be8:	cmp    BYTE PTR [rbx],0x0
   140018beb:	jne    0x1400189d9
   140018bf1:	lea    rcx,[rsp+0x68]
   140018bf6:	mov    r9d,r12d
   140018bf9:	mov    r8d,edi
   140018bfc:	mov    rdx,r13
   140018bff:	mov    DWORD PTR [rsp+0x20],0x180
   140018c07:	call   0x1400226bc
   140018c0c:	test   eax,eax
   140018c0e:	jne    0x1400189f9
   140018c14:	add    DWORD PTR [rip+0x1cccd],r15d        # 0x1400358e8
   140018c1b:	and    DWORD PTR [rsi+0x8],eax
   140018c1e:	mov    eax,DWORD PTR [rsp+0x68]
   140018c22:	and    QWORD PTR [rsi],0x0
   140018c26:	and    QWORD PTR [rsi+0x10],0x0
   140018c2b:	and    QWORD PTR [rsi+0x28],0x0
   140018c30:	mov    DWORD PTR [rsi+0x1c],eax
   140018c33:	mov    DWORD PTR [rsi+0x18],ebp
   140018c36:	mov    rax,rsi
   140018c39:	mov    rbx,QWORD PTR [rsp+0x60]
   140018c3e:	mov    rbp,QWORD PTR [rsp+0x70]
   140018c43:	add    rsp,0x30
   140018c47:	pop    r15
   140018c49:	pop    r13
   140018c4b:	pop    r12
   140018c4d:	pop    rdi
   140018c4e:	pop    rsi
   140018c4f:	ret    
   140018c50:	mov    QWORD PTR [rsp+0x8],rbx
   140018c55:	mov    QWORD PTR [rsp+0x10],rsi
   140018c5a:	push   rdi
   140018c5b:	sub    rsp,0x30
   140018c5f:	xor    ebx,ebx
   140018c61:	lea    ecx,[rbx+0x1]
   140018c64:	call   0x1400133a8
   140018c69:	nop
   140018c6a:	xor    edi,edi
   140018c6c:	mov    DWORD PTR [rsp+0x20],edi
   140018c70:	cmp    edi,DWORD PTR [rip+0x2034a]        # 0x140038fc0
   140018c76:	jge    0x140018d76
   140018c7c:	movsxd rsi,edi
   140018c7f:	mov    rax,QWORD PTR [rip+0x1f322]        # 0x140037fa8
   140018c86:	cmp    QWORD PTR [rax+rsi*8],0x0
   140018c8b:	je     0x140018cf8
   140018c8d:	mov    rax,QWORD PTR [rax+rsi*8]
   140018c91:	test   BYTE PTR [rax+0x18],0x83
   140018c95:	jne    0x140018ced
   140018c97:	bt     DWORD PTR [rax+0x18],0xf
   140018c9c:	jb     0x140018ced
   140018c9e:	lea    eax,[rdi-0x3]
   140018ca1:	cmp    eax,0x10
   140018ca4:	ja     0x140018cb6
   140018ca6:	lea    ecx,[rdi+0x10]
   140018ca9:	call   0x1400132c0
   140018cae:	test   eax,eax
   140018cb0:	je     0x140018d76
   140018cb6:	mov    rdx,QWORD PTR [rip+0x1f2eb]        # 0x140037fa8
   140018cbd:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140018cc1:	mov    ecx,edi
   140018cc3:	call   0x14000a524
   140018cc8:	mov    r11,QWORD PTR [rip+0x1f2d9]        # 0x140037fa8
   140018ccf:	mov    rax,QWORD PTR [r11+rsi*8]
   140018cd3:	test   BYTE PTR [rax+0x18],0x83
   140018cd7:	je     0x140018ce5
   140018cd9:	mov    rdx,rax
   140018cdc:	mov    ecx,edi
   140018cde:	call   0x14000a5ac
   140018ce3:	jmp    0x140018ced
   140018ce5:	mov    rbx,rax
   140018ce8:	jmp    0x140018d76
   140018ced:	inc    edi
   140018cef:	mov    DWORD PTR [rsp+0x20],edi
   140018cf3:	jmp    0x140018c70
   140018cf8:	movsxd rdi,edi
   140018cfb:	mov    ecx,0x58
   140018d00:	call   0x140012c00
   140018d05:	mov    rcx,QWORD PTR [rip+0x1f29c]        # 0x140037fa8
   140018d0c:	mov    QWORD PTR [rcx+rdi*8],rax
   140018d10:	mov    rcx,QWORD PTR [rip+0x1f291]        # 0x140037fa8
   140018d17:	cmp    QWORD PTR [rcx+rdi*8],0x0
   140018d1c:	je     0x140018d76
   140018d1e:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140018d22:	add    rcx,0x30
   140018d26:	mov    edx,0xfa0
   140018d2b:	call   0x14001a494
   140018d30:	test   eax,eax
   140018d32:	jne    0x140018d52
   140018d34:	mov    rcx,QWORD PTR [rip+0x1f26d]        # 0x140037fa8
   140018d3b:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140018d3f:	call   0x1400098ac
   140018d44:	mov    r11,QWORD PTR [rip+0x1f25d]        # 0x140037fa8
   140018d4b:	and    QWORD PTR [r11+rdi*8],0x0
   140018d50:	jmp    0x140018d76
   140018d52:	mov    rax,QWORD PTR [rip+0x1f24f]        # 0x140037fa8
   140018d59:	mov    rcx,QWORD PTR [rax+rdi*8]
   140018d5d:	add    rcx,0x30
   140018d61:	call   QWORD PTR [rip+0xe5c1]        # 0x140027328
   140018d67:	mov    r11,QWORD PTR [rip+0x1f23a]        # 0x140037fa8
   140018d6e:	mov    rbx,QWORD PTR [r11+rdi*8]
   140018d72:	and    DWORD PTR [rbx+0x18],0x0
   140018d76:	test   rbx,rbx
   140018d79:	je     0x140018d98
   140018d7b:	and    DWORD PTR [rbx+0x18],0x8000
   140018d82:	and    DWORD PTR [rbx+0x8],0x0
   140018d86:	and    QWORD PTR [rbx+0x10],0x0
   140018d8b:	and    QWORD PTR [rbx],0x0
   140018d8f:	and    QWORD PTR [rbx+0x28],0x0
   140018d94:	or     DWORD PTR [rbx+0x1c],0xffffffff
   140018d98:	mov    ecx,0x1
   140018d9d:	call   0x140013288
   140018da2:	mov    rax,rbx
   140018da5:	mov    rbx,QWORD PTR [rsp+0x40]
   140018daa:	mov    rsi,QWORD PTR [rsp+0x48]
   140018daf:	add    rsp,0x30
   140018db3:	pop    rdi
   140018db4:	ret    
   140018db5:	int3   
   140018db6:	int3   
   140018db7:	int3   
   140018db8:	int3   
   140018db9:	int3   
   140018dba:	int3   
   140018dbb:	int3   
   140018dbc:	int3   
   140018dbd:	int3   
   140018dbe:	int3   
   140018dbf:	int3   
   140018dc0:	int3   
   140018dc1:	int3   
   140018dc2:	int3   
   140018dc3:	int3   
   140018dc4:	int3   
   140018dc5:	int3   
   140018dc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018dd0:	sub    rsp,0x4d8
   140018dd7:	xor    r8,r8
   140018dda:	xor    r9,r9
   140018ddd:	mov    QWORD PTR [rsp+0x20],rsp
   140018de2:	mov    QWORD PTR [rsp+0x28],r8
   140018de7:	call   0x14002586c
   140018dec:	add    rsp,0x4d8
   140018df3:	ret    
   140018df4:	int3   
   140018df5:	int3   
   140018df6:	int3   
   140018df7:	int3   
   140018df8:	int3   
   140018df9:	int3   
   140018dfa:	nop    WORD PTR [rax+rax*1+0x0]
   140018e00:	mov    QWORD PTR [rsp+0x8],rcx
   140018e05:	mov    QWORD PTR [rsp+0x18],rdx
   140018e0a:	mov    DWORD PTR [rsp+0x10],r8d
   140018e0f:	mov    r9,0x19930520
   140018e16:	jmp    0x140018e20
   140018e18:	int3   
   140018e19:	int3   
   140018e1a:	int3   
   140018e1b:	int3   
   140018e1c:	int3   
   140018e1d:	int3   
   140018e1e:	xchg   ax,ax
   140018e20:	ret    
   140018e21:	int3   
   140018e22:	int3   
   140018e23:	int3   
   140018e24:	int3   
   140018e25:	int3   
   140018e26:	int3   
   140018e27:	nop    WORD PTR [rax+rax*1+0x0]
   140018e30:	ret    
   140018e31:	int3   
   140018e32:	int3   
   140018e33:	int3   
   140018e34:	rex push rbx
   140018e36:	sub    rsp,0x60
   140018e3a:	test   rdx,rdx
   140018e3d:	jne    0x140018e64
   140018e3f:	call   0x14000f574
   140018e44:	and    QWORD PTR [rsp+0x20],0x0
   140018e4a:	xor    r9d,r9d
   140018e4d:	xor    r8d,r8d
   140018e50:	xor    edx,edx
   140018e52:	xor    ecx,ecx
   140018e54:	mov    DWORD PTR [rax],0x16
   140018e5a:	call   0x14000e4d8
   140018e5f:	or     eax,0xffffffff
   140018e62:	jmp    0x140018eae
   140018e64:	test   rcx,rcx
   140018e67:	je     0x140018e3f
   140018e69:	mov    QWORD PTR [rsp+0x40],rcx
   140018e6e:	mov    QWORD PTR [rsp+0x30],rcx
   140018e73:	lea    rcx,[rsp+0x30]
   140018e78:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140018e80:	mov    DWORD PTR [rsp+0x48],0x42
   140018e88:	call   0x140014214
   140018e8d:	sub    DWORD PTR [rsp+0x38],0x1
   140018e92:	mov    ebx,eax
   140018e94:	js     0x140018ea0
   140018e96:	mov    rcx,QWORD PTR [rsp+0x30]
   140018e9b:	mov    BYTE PTR [rcx],0x0
   140018e9e:	jmp    0x140018eac
   140018ea0:	lea    rdx,[rsp+0x30]
   140018ea5:	xor    ecx,ecx
   140018ea7:	call   0x140015250
   140018eac:	mov    eax,ebx
   140018eae:	add    rsp,0x60
   140018eb2:	pop    rbx
   140018eb3:	ret    
   140018eb4:	mov    r9,r8
   140018eb7:	xor    r8d,r8d
   140018eba:	jmp    0x140018e34
   140018ebf:	int3   
   140018ec0:	sub    rsp,0x68
   140018ec4:	mov    rax,rcx
   140018ec7:	test   rdx,rdx
   140018eca:	jne    0x140018ef1
   140018ecc:	call   0x14000f574
   140018ed1:	and    QWORD PTR [rsp+0x20],0x0
   140018ed7:	xor    r9d,r9d
   140018eda:	xor    r8d,r8d
   140018edd:	xor    edx,edx
   140018edf:	xor    ecx,ecx
   140018ee1:	mov    DWORD PTR [rax],0x16
   140018ee7:	call   0x14000e4d8
   140018eec:	or     eax,0xffffffff
   140018eef:	jmp    0x140018f14
   140018ef1:	and    QWORD PTR [rsp+0x40],0x0
   140018ef7:	and    QWORD PTR [rsp+0x30],0x0
   140018efd:	lea    rcx,[rsp+0x30]
   140018f02:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140018f0a:	mov    DWORD PTR [rsp+0x48],0x42
   140018f12:	call   rax
   140018f14:	add    rsp,0x68
   140018f18:	ret    
   140018f19:	int3   
   140018f1a:	int3   
   140018f1b:	int3   
   140018f1c:	mov    r9,rdx
   140018f1f:	mov    rdx,rcx
   140018f22:	lea    rcx,[rip+0xffffffffffffb2eb]        # 0x140014214
   140018f29:	xor    r8d,r8d
   140018f2c:	jmp    0x140018ec0
   140018f31:	int3   
   140018f32:	int3   
   140018f33:	int3   
   140018f34:	mov    r9,r8
   140018f37:	mov    r8,rdx
   140018f3a:	mov    rdx,rcx
   140018f3d:	lea    rcx,[rip+0xffffffffffffb2d0]        # 0x140014214
   140018f44:	jmp    0x140018ec0
   140018f49:	int3   
   140018f4a:	int3   
   140018f4b:	int3   
   140018f4c:	mov    r9,rdx
   140018f4f:	mov    rdx,rcx
   140018f52:	lea    rcx,[rip+0x6f7b]        # 0x14001fed4
   140018f59:	xor    r8d,r8d
   140018f5c:	jmp    0x140018ec0
   140018f61:	int3   
   140018f62:	int3   
   140018f63:	int3   
   140018f64:	mov    r9,r8
   140018f67:	mov    r8,rdx
   140018f6a:	mov    rdx,rcx
   140018f6d:	lea    rcx,[rip+0x6f60]        # 0x14001fed4
   140018f74:	jmp    0x140018ec0
   140018f79:	int3   
   140018f7a:	int3   
   140018f7b:	int3   
   140018f7c:	mov    QWORD PTR [rsp+0x8],rbx
   140018f81:	mov    QWORD PTR [rsp+0x10],rbp
   140018f86:	mov    QWORD PTR [rsp+0x18],rsi
   140018f8b:	push   rdi
   140018f8c:	sub    rsp,0x60
   140018f90:	xor    ebx,ebx
   140018f92:	mov    r10,r9
   140018f95:	mov    rbp,r8
   140018f98:	mov    rsi,rdx
   140018f9b:	mov    r11,rcx
   140018f9e:	cmp    r9,rbx
   140018fa1:	jne    0x140018fca
   140018fa3:	call   0x14000f574
   140018fa8:	xor    r9d,r9d
   140018fab:	xor    r8d,r8d
   140018fae:	xor    edx,edx
   140018fb0:	xor    ecx,ecx
   140018fb2:	mov    QWORD PTR [rsp+0x20],rbx
   140018fb7:	mov    DWORD PTR [rax],0x16
   140018fbd:	call   0x14000e4d8
   140018fc2:	or     eax,0xffffffff
   140018fc5:	jmp    0x140019051
   140018fca:	cmp    r8,rbx
   140018fcd:	je     0x140018fd4
   140018fcf:	cmp    rdx,rbx
   140018fd2:	je     0x140018fa3
   140018fd4:	mov    r9,QWORD PTR [rsp+0x98]
   140018fdc:	mov    ecx,0x7fffffff
   140018fe1:	mov    eax,r8d
   140018fe4:	cmp    r8,rcx
   140018fe7:	mov    r8,QWORD PTR [rsp+0x90]
   140018fef:	mov    QWORD PTR [rsp+0x40],rdx
   140018ff4:	cmova  eax,ecx
   140018ff7:	mov    QWORD PTR [rsp+0x30],rdx
   140018ffc:	lea    rcx,[rsp+0x30]
   140019001:	mov    rdx,r10
   140019004:	mov    DWORD PTR [rsp+0x48],0x42
   14001900c:	mov    DWORD PTR [rsp+0x38],eax
   140019010:	call   r11
   140019013:	mov    edi,eax
   140019015:	cmp    rsi,rbx
   140019018:	je     0x140019051
   14001901a:	cmp    eax,ebx
   14001901c:	jl     0x140019043
   14001901e:	sub    DWORD PTR [rsp+0x38],0x1
   140019023:	js     0x14001902e
   140019025:	mov    rax,QWORD PTR [rsp+0x30]
   14001902a:	mov    BYTE PTR [rax],bl
   14001902c:	jmp    0x14001903f
   14001902e:	lea    rdx,[rsp+0x30]
   140019033:	xor    ecx,ecx
   140019035:	call   0x140015250
   14001903a:	cmp    eax,0xffffffff
   14001903d:	je     0x140019043
   14001903f:	mov    eax,edi
   140019041:	jmp    0x140019051
   140019043:	cmp    DWORD PTR [rsp+0x38],ebx
   140019047:	mov    BYTE PTR [rsi+rbp*1-0x1],bl
   14001904b:	setge  bl
   14001904e:	lea    eax,[rbx-0x2]
   140019051:	lea    r11,[rsp+0x60]
   140019056:	mov    rbx,QWORD PTR [r11+0x10]
   14001905a:	mov    rbp,QWORD PTR [r11+0x18]
   14001905e:	mov    rsi,QWORD PTR [r11+0x20]
   140019062:	mov    rsp,r11
   140019065:	pop    rdi
   140019066:	ret    
   140019067:	int3   
   140019068:	sub    rsp,0x38
   14001906c:	mov    QWORD PTR [rsp+0x28],r9
   140019071:	and    QWORD PTR [rsp+0x20],0x0
   140019077:	mov    r9,r8
   14001907a:	mov    r8,rdx
   14001907d:	mov    rdx,rcx
   140019080:	lea    rcx,[rip+0xffffffffffffb18d]        # 0x140014214
   140019087:	call   0x140018f7c
   14001908c:	or     ecx,0xffffffff
   14001908f:	test   eax,eax
   140019091:	cmovs  eax,ecx
   140019094:	add    rsp,0x38
   140019098:	ret    
   140019099:	int3   
   14001909a:	int3   
   14001909b:	int3   
   14001909c:	sub    rsp,0x38
   1400190a0:	mov    rax,QWORD PTR [rsp+0x60]
   1400190a5:	mov    QWORD PTR [rsp+0x28],rax
   1400190aa:	mov    QWORD PTR [rsp+0x20],r9
   1400190af:	mov    r9,r8
   1400190b2:	mov    r8,rdx
   1400190b5:	mov    rdx,rcx
   1400190b8:	lea    rcx,[rip+0xffffffffffffb155]        # 0x140014214
   1400190bf:	call   0x140018f7c
   1400190c4:	or     ecx,0xffffffff
   1400190c7:	test   eax,eax
   1400190c9:	cmovs  eax,ecx
   1400190cc:	add    rsp,0x38
   1400190d0:	ret    
   1400190d1:	int3   
   1400190d2:	int3   
   1400190d3:	int3   
   1400190d4:	rex push rbx
   1400190d6:	sub    rsp,0x30
   1400190da:	mov    rbx,rcx
   1400190dd:	test   r8,r8
   1400190e0:	je     0x140019129
   1400190e2:	test   rcx,rcx
   1400190e5:	je     0x140019129
   1400190e7:	test   rdx,rdx
   1400190ea:	je     0x140019129
   1400190ec:	mov    rax,QWORD PTR [rsp+0x60]
   1400190f1:	mov    QWORD PTR [rsp+0x28],rax
   1400190f6:	mov    QWORD PTR [rsp+0x20],r9
   1400190fb:	mov    r9,r8
   1400190fe:	mov    r8,rdx
   140019101:	mov    rdx,rcx
   140019104:	lea    rcx,[rip+0x6041]        # 0x14001f14c
   14001910b:	call   0x140018f7c
   140019110:	test   eax,eax
   140019112:	jns    0x140019117
   140019114:	mov    BYTE PTR [rbx],0x0
   140019117:	cmp    eax,0xfffffffe
   14001911a:	jne    0x14001914c
   14001911c:	call   0x14000f574
   140019121:	mov    DWORD PTR [rax],0x22
   140019127:	jmp    0x140019134
   140019129:	call   0x14000f574
   14001912e:	mov    DWORD PTR [rax],0x16
   140019134:	and    QWORD PTR [rsp+0x20],0x0
   14001913a:	xor    r9d,r9d
   14001913d:	xor    r8d,r8d
   140019140:	xor    edx,edx
   140019142:	xor    ecx,ecx
   140019144:	call   0x14000e4d8
   140019149:	or     eax,0xffffffff
   14001914c:	add    rsp,0x30
   140019150:	pop    rbx
   140019151:	ret    
   140019152:	int3   
   140019153:	int3   
   140019154:	sub    rsp,0x38
   140019158:	mov    QWORD PTR [rsp+0x20],r9
   14001915d:	xor    r9d,r9d
   140019160:	call   0x1400190d4
   140019165:	add    rsp,0x38
   140019169:	ret    
   14001916a:	int3   
   14001916b:	int3   
   14001916c:	mov    rax,rsp
   14001916f:	mov    QWORD PTR [rax+0x8],rbx
   140019173:	mov    QWORD PTR [rax+0x10],rbp
   140019177:	mov    QWORD PTR [rax+0x18],rsi
   14001917b:	mov    QWORD PTR [rax+0x20],rdi
   14001917f:	push   r12
   140019181:	sub    rsp,0x30
   140019185:	mov    rbp,r9
   140019188:	mov    rsi,r8
   14001918b:	mov    rbx,rdx
   14001918e:	mov    rdi,rcx
   140019191:	test   r9,r9
   140019194:	je     0x140019289
   14001919a:	test   r8,r8
   14001919d:	jne    0x1400191b4
   14001919f:	test   rcx,rcx
   1400191a2:	jne    0x1400191bd
   1400191a4:	test   rdx,rdx
   1400191a7:	jne    0x140019289
   1400191ad:	xor    eax,eax
   1400191af:	jmp    0x1400192ac
   1400191b4:	test   rcx,rcx
   1400191b7:	je     0x140019289
   1400191bd:	test   rdx,rdx
   1400191c0:	je     0x140019289
   1400191c6:	cmp    rdx,r8
   1400191c9:	jbe    0x14001921b
   1400191cb:	call   0x14000f574
   1400191d0:	lea    r8,[rsi+0x1]
   1400191d4:	lea    rcx,[rip+0x5f71]        # 0x14001f14c
   1400191db:	mov    ebx,DWORD PTR [rax]
   1400191dd:	mov    rax,QWORD PTR [rsp+0x68]
   1400191e2:	mov    r9,rbp
   1400191e5:	mov    QWORD PTR [rsp+0x28],rax
   1400191ea:	mov    rax,QWORD PTR [rsp+0x60]
   1400191ef:	mov    rdx,rdi
   1400191f2:	mov    QWORD PTR [rsp+0x20],rax
   1400191f7:	call   0x140018f7c
   1400191fc:	cmp    eax,0xfffffffe
   1400191ff:	jne    0x140019270
   140019201:	call   0x14000f574
   140019206:	cmp    DWORD PTR [rax],0x22
   140019209:	jne    0x1400192a9
   14001920f:	call   0x14000f574
   140019214:	mov    DWORD PTR [rax],ebx
   140019216:	jmp    0x1400192a9
   14001921b:	call   0x14000f574
   140019220:	lea    rcx,[rip+0x5f25]        # 0x14001f14c
   140019227:	mov    r9,rbp
   14001922a:	mov    r12d,DWORD PTR [rax]
   14001922d:	mov    rax,QWORD PTR [rsp+0x68]
   140019232:	mov    r8,rbx
   140019235:	mov    QWORD PTR [rsp+0x28],rax
   14001923a:	mov    rax,QWORD PTR [rsp+0x60]
   14001923f:	mov    rdx,rdi
   140019242:	mov    QWORD PTR [rsp+0x20],rax
   140019247:	call   0x140018f7c
   14001924c:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140019251:	cmp    eax,0xfffffffe
   140019254:	jne    0x140019270
   140019256:	cmp    rsi,0xffffffffffffffff
   14001925a:	jne    0x140019274
   14001925c:	call   0x14000f574
   140019261:	cmp    DWORD PTR [rax],0x22
   140019264:	jne    0x1400192a9
   140019266:	call   0x14000f574
   14001926b:	mov    DWORD PTR [rax],r12d
   14001926e:	jmp    0x1400192a9
   140019270:	test   eax,eax
   140019272:	jns    0x1400192ac
   140019274:	mov    BYTE PTR [rdi],0x0
   140019277:	cmp    eax,0xfffffffe
   14001927a:	jne    0x1400192a9
   14001927c:	call   0x14000f574
   140019281:	mov    DWORD PTR [rax],0x22
   140019287:	jmp    0x140019294
   140019289:	call   0x14000f574
   14001928e:	mov    DWORD PTR [rax],0x16
   140019294:	and    QWORD PTR [rsp+0x20],0x0
   14001929a:	xor    r9d,r9d
   14001929d:	xor    r8d,r8d
   1400192a0:	xor    edx,edx
   1400192a2:	xor    ecx,ecx
   1400192a4:	call   0x14000e4d8
   1400192a9:	or     eax,0xffffffff
   1400192ac:	mov    rbx,QWORD PTR [rsp+0x40]
   1400192b1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400192b6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400192bb:	mov    rdi,QWORD PTR [rsp+0x58]
   1400192c0:	add    rsp,0x30
   1400192c4:	pop    r12
   1400192c6:	ret    
   1400192c7:	int3   
   1400192c8:	sub    rsp,0x38
   1400192cc:	mov    rax,QWORD PTR [rsp+0x60]
   1400192d1:	mov    QWORD PTR [rsp+0x28],rax
   1400192d6:	and    QWORD PTR [rsp+0x20],0x0
   1400192dc:	call   0x14001916c
   1400192e1:	add    rsp,0x38
   1400192e5:	ret    
   1400192e6:	int3   
   1400192e7:	int3   
   1400192e8:	sub    rsp,0x38
   1400192ec:	mov    QWORD PTR [rsp+0x28],r9
   1400192f1:	and    QWORD PTR [rsp+0x20],0x0
   1400192f7:	mov    r9,r8
   1400192fa:	mov    r8,rdx
   1400192fd:	mov    rdx,rcx
   140019300:	lea    rcx,[rip+0x6bcd]        # 0x14001fed4
   140019307:	call   0x140018f7c
   14001930c:	or     ecx,0xffffffff
   14001930f:	test   eax,eax
   140019311:	cmovs  eax,ecx
   140019314:	add    rsp,0x38
   140019318:	ret    
   140019319:	int3   
   14001931a:	int3   
   14001931b:	int3   
   14001931c:	sub    rsp,0x38
   140019320:	mov    rax,QWORD PTR [rsp+0x60]
   140019325:	mov    QWORD PTR [rsp+0x28],rax
   14001932a:	mov    QWORD PTR [rsp+0x20],r9
   14001932f:	mov    r9,r8
   140019332:	mov    r8,rdx
   140019335:	mov    rdx,rcx
   140019338:	lea    rcx,[rip+0x6b95]        # 0x14001fed4
   14001933f:	call   0x140018f7c
   140019344:	or     ecx,0xffffffff
   140019347:	test   eax,eax
   140019349:	cmovs  eax,ecx
   14001934c:	add    rsp,0x38
   140019350:	ret    
   140019351:	int3   
   140019352:	int3   
   140019353:	int3   
   140019354:	mov    QWORD PTR [rsp+0x8],rbx
   140019359:	mov    QWORD PTR [rsp+0x10],rsi
   14001935e:	push   rdi
   14001935f:	sub    rsp,0x30
   140019363:	mov    rdi,rcx
   140019366:	test   rcx,rcx
   140019369:	jne    0x14001938f
   14001936b:	call   0x14000f574
   140019370:	and    QWORD PTR [rsp+0x20],rdi
   140019375:	xor    r9d,r9d
   140019378:	xor    r8d,r8d
   14001937b:	xor    edx,edx
   14001937d:	xor    ecx,ecx
   14001937f:	mov    DWORD PTR [rax],0x16
   140019385:	call   0x14000e4d8
   14001938a:	jmp    0x14001949b
   14001938f:	mov    eax,DWORD PTR [rcx+0x18]
   140019392:	test   al,0x83
   140019394:	je     0x14001949b
   14001939a:	test   al,0x40
   14001939c:	jne    0x14001949b
   1400193a2:	test   al,0x2
   1400193a4:	je     0x1400193b1
   1400193a6:	or     eax,0x20
   1400193a9:	mov    DWORD PTR [rcx+0x18],eax
   1400193ac:	jmp    0x14001949b
   1400193b1:	or     eax,0x1
   1400193b4:	mov    DWORD PTR [rcx+0x18],eax
   1400193b7:	test   eax,0x10c
   1400193bc:	jne    0x1400193c5
   1400193be:	call   0x140021410
   1400193c3:	jmp    0x1400193cc
   1400193c5:	mov    rax,QWORD PTR [rcx+0x10]
   1400193c9:	mov    QWORD PTR [rcx],rax
   1400193cc:	mov    rcx,rdi
   1400193cf:	call   0x140014cfc
   1400193d4:	mov    r8d,DWORD PTR [rdi+0x24]
   1400193d8:	mov    rdx,QWORD PTR [rdi+0x10]
   1400193dc:	mov    ecx,eax
   1400193de:	call   0x1400231d4
   1400193e3:	mov    DWORD PTR [rdi+0x8],eax
   1400193e6:	test   eax,eax
   1400193e8:	je     0x14001948a
   1400193ee:	cmp    eax,0xffffffff
   1400193f1:	je     0x14001948a
   1400193f7:	test   BYTE PTR [rdi+0x18],0x82
   1400193fb:	jne    0x14001945c
   1400193fd:	mov    rcx,rdi
   140019400:	call   0x140014cfc
   140019405:	cmp    eax,0xffffffff
   140019408:	je     0x140019446
   14001940a:	mov    rcx,rdi
   14001940d:	call   0x140014cfc
   140019412:	cmp    eax,0xfffffffe
   140019415:	je     0x140019446
   140019417:	mov    rcx,rdi
   14001941a:	call   0x140014cfc
   14001941f:	mov    rcx,rdi
   140019422:	lea    rsi,[rip+0x1e937]        # 0x140037d60
   140019429:	movsxd rbx,eax
   14001942c:	sar    rbx,0x5
   140019430:	call   0x140014cfc
   140019435:	mov    r11d,eax
   140019438:	and    r11d,0x1f
   14001943c:	imul   r11,r11,0x58
   140019440:	add    r11,QWORD PTR [rsi+rbx*8]
   140019444:	jmp    0x14001944d
   140019446:	lea    r11,[rip+0x1c073]        # 0x1400354c0
   14001944d:	mov    al,BYTE PTR [r11+0x8]
   140019451:	and    al,0x82
   140019453:	cmp    al,0x82
   140019455:	jne    0x14001945c
   140019457:	bts    DWORD PTR [rdi+0x18],0xd
   14001945c:	cmp    DWORD PTR [rdi+0x24],0x200
   140019463:	jne    0x140019479
   140019465:	test   BYTE PTR [rdi+0x18],0x8
   140019469:	je     0x140019479
   14001946b:	bt     DWORD PTR [rdi+0x18],0xa
   140019470:	jb     0x140019479
   140019472:	mov    DWORD PTR [rdi+0x24],0x1000
   140019479:	mov    rcx,QWORD PTR [rdi]
   14001947c:	dec    DWORD PTR [rdi+0x8]
   14001947f:	movzx  eax,BYTE PTR [rcx]
   140019482:	inc    rcx
   140019485:	mov    QWORD PTR [rdi],rcx
   140019488:	jmp    0x14001949e
   14001948a:	neg    eax
   14001948c:	sbb    eax,eax
   14001948e:	and    eax,0x10
   140019491:	add    eax,0x10
   140019494:	or     DWORD PTR [rdi+0x18],eax
   140019497:	and    DWORD PTR [rdi+0x8],0x0
   14001949b:	or     eax,0xffffffff
   14001949e:	mov    rbx,QWORD PTR [rsp+0x40]
   1400194a3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400194a8:	add    rsp,0x30
   1400194ac:	pop    rdi
   1400194ad:	ret    
   1400194ae:	int3   
   1400194af:	int3   
   1400194b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400194b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400194ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400194bf:	push   rdi
   1400194c0:	push   r12
   1400194c2:	push   r13
   1400194c4:	sub    rsp,0x20
   1400194c8:	mov    r13,rcx
   1400194cb:	mov    rcx,QWORD PTR [rip+0x1eab6]        # 0x140037f88
   1400194d2:	call   0x140011758
   1400194d7:	mov    rcx,QWORD PTR [rip+0x1eaa2]        # 0x140037f80
   1400194de:	mov    rbp,rax
   1400194e1:	call   0x140011758
   1400194e6:	mov    rdi,rax
   1400194e9:	cmp    rax,rbp
   1400194ec:	jb     0x140019580
   1400194f2:	mov    rbx,rax
   1400194f5:	sub    rbx,rbp
   1400194f8:	lea    r12,[rbx+0x8]
   1400194fc:	cmp    r12,0x8
   140019500:	jb     0x140019580
   140019502:	mov    rcx,rbp
   140019505:	call   0x140023348
   14001950a:	mov    rsi,rax
   14001950d:	cmp    rax,r12
   140019510:	jae    0x140019560
   140019512:	mov    edx,0x1000
   140019517:	cmp    rax,rdx
   14001951a:	cmovb  rdx,rax
   14001951e:	add    rdx,rax
   140019521:	cmp    rdx,rax
   140019524:	jb     0x140019533
   140019526:	mov    rcx,rbp
   140019529:	call   0x140012cf0
   14001952e:	test   rax,rax
   140019531:	jne    0x140019549
   140019533:	lea    rdx,[rsi+0x20]
   140019537:	cmp    rdx,rsi
   14001953a:	jb     0x140019580
   14001953c:	mov    rcx,rbp
   14001953f:	call   0x140012cf0
   140019544:	test   rax,rax
   140019547:	je     0x140019580
   140019549:	sar    rbx,0x3
   14001954d:	mov    rcx,rax
   140019550:	lea    rdi,[rax+rbx*8]
   140019554:	call   0x140011744
   140019559:	mov    QWORD PTR [rip+0x1ea28],rax        # 0x140037f88
   140019560:	mov    rcx,r13
   140019563:	call   0x140011744
   140019568:	lea    rcx,[rdi+0x8]
   14001956c:	mov    QWORD PTR [rdi],rax
   14001956f:	call   0x140011744
   140019574:	mov    QWORD PTR [rip+0x1ea05],rax        # 0x140037f80
   14001957b:	mov    rax,r13
   14001957e:	jmp    0x140019582
   140019580:	xor    eax,eax
   140019582:	mov    rbx,QWORD PTR [rsp+0x40]
   140019587:	mov    rbp,QWORD PTR [rsp+0x48]
   14001958c:	mov    rsi,QWORD PTR [rsp+0x50]
   140019591:	add    rsp,0x20
   140019595:	pop    r13
   140019597:	pop    r12
   140019599:	pop    rdi
   14001959a:	ret    
   14001959b:	int3   
   14001959c:	rex push rbx
   14001959e:	sub    rsp,0x20
   1400195a2:	mov    edx,0x8
   1400195a7:	lea    ecx,[rdx+0x18]
   1400195aa:	call   0x140012c6c
   1400195af:	mov    rcx,rax
   1400195b2:	mov    rbx,rax
   1400195b5:	call   0x140011744
   1400195ba:	mov    QWORD PTR [rip+0x1e9c7],rax        # 0x140037f88
   1400195c1:	mov    QWORD PTR [rip+0x1e9b8],rax        # 0x140037f80
   1400195c8:	test   rbx,rbx
   1400195cb:	jne    0x1400195d2
   1400195cd:	lea    eax,[rbx+0x18]
   1400195d0:	jmp    0x1400195d8
   1400195d2:	and    QWORD PTR [rbx],0x0
   1400195d6:	xor    eax,eax
   1400195d8:	add    rsp,0x20
   1400195dc:	pop    rbx
   1400195dd:	ret    
   1400195de:	int3   
   1400195df:	int3   
   1400195e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400195e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400195ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400195ef:	push   r12
   1400195f1:	push   r13
   1400195f3:	push   r14
   1400195f5:	sub    rsp,0x20
   1400195f9:	mov    r14,rcx
   1400195fc:	call   0x14000dba0
   140019601:	nop
   140019602:	mov    rcx,QWORD PTR [rip+0x1e97f]        # 0x140037f88
   140019609:	call   0x140011758
   14001960e:	mov    r12,rax
   140019611:	mov    rcx,QWORD PTR [rip+0x1e968]        # 0x140037f80
   140019618:	call   0x140011758
   14001961d:	mov    rbx,rax
   140019620:	cmp    rax,r12
   140019623:	jb     0x1400196c1
   140019629:	mov    rdi,rax
   14001962c:	sub    rdi,r12
   14001962f:	lea    r13,[rdi+0x8]
   140019633:	cmp    r13,0x8
   140019637:	jb     0x1400196c1
   14001963d:	mov    rcx,r12
   140019640:	call   0x140023348
   140019645:	mov    rsi,rax
   140019648:	cmp    rax,r13
   14001964b:	jae    0x1400196a1
   14001964d:	mov    edx,0x1000
   140019652:	cmp    rax,rdx
   140019655:	cmovb  rdx,rax
   140019659:	add    rdx,rax
   14001965c:	cmp    rdx,rax
   14001965f:	jb     0x140019672
   140019661:	mov    rcx,r12
   140019664:	call   0x140012cf0
   140019669:	xor    ebx,ebx
   14001966b:	cmp    rax,rbx
   14001966e:	jne    0x14001968a
   140019670:	jmp    0x140019674
   140019672:	xor    ebx,ebx
   140019674:	lea    rdx,[rsi+0x20]
   140019678:	cmp    rdx,rsi
   14001967b:	jb     0x1400196c3
   14001967d:	mov    rcx,r12
   140019680:	call   0x140012cf0
   140019685:	cmp    rax,rbx
   140019688:	je     0x1400196c3
   14001968a:	sar    rdi,0x3
   14001968e:	lea    rbx,[rax+rdi*8]
   140019692:	mov    rcx,rax
   140019695:	call   0x140011744
   14001969a:	mov    QWORD PTR [rip+0x1e8e7],rax        # 0x140037f88
   1400196a1:	mov    rcx,r14
   1400196a4:	call   0x140011744
   1400196a9:	mov    QWORD PTR [rbx],rax
   1400196ac:	lea    rcx,[rbx+0x8]
   1400196b0:	call   0x140011744
   1400196b5:	mov    QWORD PTR [rip+0x1e8c4],rax        # 0x140037f80
   1400196bc:	mov    rbx,r14
   1400196bf:	jmp    0x1400196c3
   1400196c1:	xor    ebx,ebx
   1400196c3:	call   0x14000dbac
   1400196c8:	mov    rax,rbx
   1400196cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400196d0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400196d5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400196da:	add    rsp,0x20
   1400196de:	pop    r14
   1400196e0:	pop    r13
   1400196e2:	pop    r12
   1400196e4:	ret    
   1400196e5:	int3   
   1400196e6:	int3   
   1400196e7:	int3   
   1400196e8:	sub    rsp,0x28
   1400196ec:	call   0x1400195e0
   1400196f1:	neg    rax
   1400196f4:	sbb    eax,eax
   1400196f6:	neg    eax
   1400196f8:	dec    eax
   1400196fa:	add    rsp,0x28
   1400196fe:	ret    
   1400196ff:	int3   
   140019700:	mov    QWORD PTR [rsp+0x8],rbx
   140019705:	push   rdi
   140019706:	sub    rsp,0x20
   14001970a:	lea    rbx,[rip+0x165d7]        # 0x14002fce8
   140019711:	lea    rdi,[rip+0x165d0]        # 0x14002fce8
   140019718:	jmp    0x140019728
   14001971a:	mov    rax,QWORD PTR [rbx]
   14001971d:	test   rax,rax
   140019720:	je     0x140019724
   140019722:	call   rax
   140019724:	add    rbx,0x8
   140019728:	cmp    rbx,rdi
   14001972b:	jb     0x14001971a
   14001972d:	mov    rbx,QWORD PTR [rsp+0x30]
   140019732:	add    rsp,0x20
   140019736:	pop    rdi
   140019737:	ret    
   140019738:	mov    QWORD PTR [rsp+0x8],rbx
   14001973d:	push   rdi
   14001973e:	sub    rsp,0x20
   140019742:	lea    rbx,[rip+0x165af]        # 0x14002fcf8
   140019749:	lea    rdi,[rip+0x165a8]        # 0x14002fcf8
   140019750:	jmp    0x140019760
   140019752:	mov    rax,QWORD PTR [rbx]
   140019755:	test   rax,rax
   140019758:	je     0x14001975c
   14001975a:	call   rax
   14001975c:	add    rbx,0x8
   140019760:	cmp    rbx,rdi
   140019763:	jb     0x140019752
   140019765:	mov    rbx,QWORD PTR [rsp+0x30]
   14001976a:	add    rsp,0x20
   14001976e:	pop    rdi
   14001976f:	ret    
   140019770:	mov    QWORD PTR [rsp+0x8],rbx
   140019775:	push   rdi
   140019776:	sub    rsp,0x20
   14001977a:	lea    rbx,[rip+0x1bdaf]        # 0x140035530
   140019781:	mov    edi,0xa
   140019786:	mov    rcx,QWORD PTR [rbx]
   140019789:	call   0x140011744
   14001978e:	mov    QWORD PTR [rbx],rax
   140019791:	add    rbx,0x8
   140019795:	sub    rdi,0x1
   140019799:	jne    0x140019786
   14001979b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400197a0:	add    rsp,0x20
   1400197a4:	pop    rdi
   1400197a5:	ret    
   1400197a6:	int3   
   1400197a7:	int3   
   1400197a8:	int3   
   1400197a9:	int3   
   1400197aa:	int3   
   1400197ab:	int3   
   1400197ac:	int3   
   1400197ad:	int3   
   1400197ae:	int3   
   1400197af:	int3   
   1400197b0:	mov    rax,rcx
   1400197b3:	mov    ecx,0x5a4d
   1400197b8:	cmp    WORD PTR [rax],cx
   1400197bb:	je     0x1400197c0
   1400197bd:	xor    eax,eax
   1400197bf:	ret    
   1400197c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400197c4:	add    rcx,rax
   1400197c7:	xor    eax,eax
   1400197c9:	cmp    DWORD PTR [rcx],0x4550
   1400197cf:	jne    0x1400197dd
   1400197d1:	mov    edx,0x20b
   1400197d6:	cmp    WORD PTR [rcx+0x18],dx
   1400197da:	sete   al
   1400197dd:	repz ret 
   1400197df:	int3   
   1400197e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400197e4:	xor    r9d,r9d
   1400197e7:	mov    r10,rdx
   1400197ea:	add    r8,rcx
   1400197ed:	movzx  eax,WORD PTR [r8+0x14]
   1400197f2:	movzx  r11d,WORD PTR [r8+0x6]
   1400197f7:	lea    rcx,[rax+r8*1+0x18]
   1400197fc:	test   r11d,r11d
   1400197ff:	je     0x14001981f
   140019801:	mov    edx,DWORD PTR [rcx+0xc]
   140019804:	cmp    r10,rdx
   140019807:	jb     0x140019813
   140019809:	mov    eax,DWORD PTR [rcx+0x8]
   14001980c:	add    eax,edx
   14001980e:	cmp    r10,rax
   140019811:	jb     0x140019822
   140019813:	inc    r9d
   140019816:	add    rcx,0x28
   14001981a:	cmp    r9d,r11d
   14001981d:	jb     0x140019801
   14001981f:	xor    eax,eax
   140019821:	ret    
   140019822:	mov    rax,rcx
   140019825:	ret    
   140019826:	int3   
   140019827:	int3   
   140019828:	int3   
   140019829:	int3   
   14001982a:	int3   
   14001982b:	int3   
   14001982c:	int3   
   14001982d:	int3   
   14001982e:	int3   
   14001982f:	int3   
   140019830:	sub    rsp,0x28
   140019834:	mov    r8,rcx
   140019837:	lea    r9,[rip+0xfffffffffffe67c2]        # 0x140000000
   14001983e:	mov    rcx,r9
   140019841:	call   0x1400197b0
   140019846:	test   eax,eax
   140019848:	je     0x14001986c
   14001984a:	sub    r8,r9
   14001984d:	mov    rdx,r8
   140019850:	mov    rcx,r9
   140019853:	call   0x1400197e0
   140019858:	test   rax,rax
   14001985b:	je     0x14001986c
   14001985d:	mov    eax,DWORD PTR [rax+0x24]
   140019860:	shr    eax,0x1f
   140019863:	not    eax
   140019865:	and    eax,0x1
   140019868:	jmp    0x14001986c
   14001986a:	xor    eax,eax
   14001986c:	add    rsp,0x28
   140019870:	ret    
   140019871:	int3   
   140019872:	int3   
   140019873:	int3   
   140019874:	sub    rsp,0x28
   140019878:	call   0x1400118e4
   14001987d:	mov    rcx,QWORD PTR [rax+0xd0]
   140019884:	test   rcx,rcx
   140019887:	je     0x14001988d
   140019889:	call   rcx
   14001988b:	jmp    0x14001988d
   14001988d:	call   0x14002339c
   140019892:	add    rsp,0x28
   140019896:	ret    
   140019897:	int3   
   140019898:	sub    rsp,0x28
   14001989c:	call   0x1400118e4
   1400198a1:	mov    rcx,QWORD PTR [rax+0xd8]
   1400198a8:	test   rcx,rcx
   1400198ab:	je     0x1400198af
   1400198ad:	call   rcx
   1400198af:	call   0x140019874
   1400198b4:	int3   
   1400198b5:	int3   
   1400198b6:	int3   
   1400198b7:	int3   
   1400198b8:	sub    rsp,0x28
   1400198bc:	mov    rcx,QWORD PTR [rip+0x1cc9d]        # 0x140036560
   1400198c3:	call   0x140011758
   1400198c8:	test   rax,rax
   1400198cb:	je     0x1400198d1
   1400198cd:	call   rax
   1400198cf:	jmp    0x1400198d1
   1400198d1:	call   0x140019874
   1400198d6:	int3   
   1400198d7:	add    rsp,0x28
   1400198db:	ret    
   1400198dc:	sub    rsp,0x28
   1400198e0:	lea    rcx,[rip+0xffffffffffffff8d]        # 0x140019874
   1400198e7:	call   0x140011744
   1400198ec:	mov    QWORD PTR [rip+0x1cc6d],rax        # 0x140036560
   1400198f3:	add    rsp,0x28
   1400198f7:	ret    
   1400198f8:	ret    0x0
   1400198fb:	int3   
   1400198fc:	mov    r9d,ecx
   1400198ff:	movsxd rcx,DWORD PTR [rip+0x1bc86]        # 0x14003558c
   140019906:	mov    rax,rdx
   140019909:	cmp    DWORD PTR [rax],r9d
   14001990c:	je     0x140019921
   14001990e:	mov    r8,rcx
   140019911:	add    rax,0x10
   140019915:	shl    r8,0x4
   140019919:	add    r8,rdx
   14001991c:	cmp    rax,r8
   14001991f:	jb     0x140019909
   140019921:	shl    rcx,0x4
   140019925:	add    rcx,rdx
   140019928:	cmp    rax,rcx
   14001992b:	jae    0x140019932
   14001992d:	cmp    DWORD PTR [rax],r9d
   140019930:	je     0x140019934
   140019932:	xor    eax,eax
   140019934:	ret    
   140019935:	int3   
   140019936:	int3   
   140019937:	int3   
   140019938:	mov    QWORD PTR [rsp+0x8],rbx
   14001993d:	mov    QWORD PTR [rsp+0x10],rbp
   140019942:	mov    QWORD PTR [rsp+0x18],rsi
   140019947:	push   rdi
   140019948:	sub    rsp,0x20
   14001994c:	mov    rsi,rdx
   14001994f:	mov    edi,ecx
   140019951:	call   0x140011860
   140019956:	xor    r11d,r11d
   140019959:	mov    rbx,rax
   14001995c:	cmp    rax,r11
   14001995f:	je     0x140019aef
   140019965:	mov    rcx,QWORD PTR [rax+0xa0]
   14001996c:	movsxd r8,DWORD PTR [rip+0x1bc19]        # 0x14003558c
   140019973:	mov    rdx,rcx
   140019976:	cmp    DWORD PTR [rdx],edi
   140019978:	je     0x14001998d
   14001997a:	mov    rax,r8
   14001997d:	add    rdx,0x10
   140019981:	shl    rax,0x4
   140019985:	add    rax,rcx
   140019988:	cmp    rdx,rax
   14001998b:	jb     0x140019976
   14001998d:	mov    rax,r8
   140019990:	shl    rax,0x4
   140019994:	add    rax,rcx
   140019997:	cmp    rdx,rax
   14001999a:	jae    0x1400199a0
   14001999c:	cmp    DWORD PTR [rdx],edi
   14001999e:	je     0x1400199a3
   1400199a0:	mov    rdx,r11
   1400199a3:	cmp    rdx,r11
   1400199a6:	je     0x140019aef
   1400199ac:	mov    r8,QWORD PTR [rdx+0x8]
   1400199b0:	cmp    r8,r11
   1400199b3:	je     0x140019aef
   1400199b9:	cmp    r8,0x5
   1400199bd:	jne    0x1400199cc
   1400199bf:	mov    QWORD PTR [rdx+0x8],r11
   1400199c3:	lea    eax,[r8-0x4]
   1400199c7:	jmp    0x140019af1
   1400199cc:	cmp    r8,0x1
   1400199d0:	jne    0x1400199da
   1400199d2:	or     eax,0xffffffff
   1400199d5:	jmp    0x140019af1
   1400199da:	mov    rbp,QWORD PTR [rbx+0xa8]
   1400199e1:	mov    QWORD PTR [rbx+0xa8],rsi
   1400199e8:	mov    ecx,DWORD PTR [rdx+0x4]
   1400199eb:	cmp    ecx,0x8
   1400199ee:	jne    0x140019adc
   1400199f4:	movsxd r10,DWORD PTR [rip+0x1bb85]        # 0x140035580
   1400199fb:	mov    ecx,DWORD PTR [rip+0x1bb83]        # 0x140035584
   140019a01:	add    ecx,r10d
   140019a04:	mov    r9,r10
   140019a07:	cmp    r10d,ecx
   140019a0a:	jge    0x140019a36
   140019a0c:	shl    r9,0x4
   140019a10:	mov    rax,QWORD PTR [rbx+0xa0]
   140019a17:	inc    r10d
   140019a1a:	add    r9,0x10
   140019a1e:	mov    QWORD PTR [r9+rax*1-0x8],r11
   140019a23:	mov    ecx,DWORD PTR [rip+0x1bb57]        # 0x140035580
   140019a29:	mov    eax,DWORD PTR [rip+0x1bb55]        # 0x140035584
   140019a2f:	add    ecx,eax
   140019a31:	cmp    r10d,ecx
   140019a34:	jl     0x140019a10
   140019a36:	cmp    DWORD PTR [rdx],0xc000008e
   140019a3c:	mov    edi,DWORD PTR [rbx+0xb0]
   140019a42:	jne    0x140019a50
   140019a44:	mov    DWORD PTR [rbx+0xb0],0x83
   140019a4e:	jmp    0x140019ac6
   140019a50:	cmp    DWORD PTR [rdx],0xc0000090
   140019a56:	jne    0x140019a64
   140019a58:	mov    DWORD PTR [rbx+0xb0],0x81
   140019a62:	jmp    0x140019ac6
   140019a64:	cmp    DWORD PTR [rdx],0xc0000091
   140019a6a:	jne    0x140019a78
   140019a6c:	mov    DWORD PTR [rbx+0xb0],0x84
   140019a76:	jmp    0x140019ac6
   140019a78:	cmp    DWORD PTR [rdx],0xc0000093
   140019a7e:	jne    0x140019a8c
   140019a80:	mov    DWORD PTR [rbx+0xb0],0x85
   140019a8a:	jmp    0x140019ac6
   140019a8c:	cmp    DWORD PTR [rdx],0xc000008d
   140019a92:	jne    0x140019aa0
   140019a94:	mov    DWORD PTR [rbx+0xb0],0x82
   140019a9e:	jmp    0x140019ac6
   140019aa0:	cmp    DWORD PTR [rdx],0xc000008f
   140019aa6:	jne    0x140019ab4
   140019aa8:	mov    DWORD PTR [rbx+0xb0],0x86
   140019ab2:	jmp    0x140019ac6
   140019ab4:	cmp    DWORD PTR [rdx],0xc0000092
   140019aba:	jne    0x140019ac6
   140019abc:	mov    DWORD PTR [rbx+0xb0],0x8a
   140019ac6:	mov    edx,DWORD PTR [rbx+0xb0]
   140019acc:	mov    ecx,0x8
   140019ad1:	call   r8
   140019ad4:	mov    DWORD PTR [rbx+0xb0],edi
   140019ada:	jmp    0x140019ae3
   140019adc:	mov    QWORD PTR [rdx+0x8],r11
   140019ae0:	call   r8
   140019ae3:	mov    QWORD PTR [rbx+0xa8],rbp
   140019aea:	jmp    0x1400199d2
   140019aef:	xor    eax,eax
   140019af1:	mov    rbx,QWORD PTR [rsp+0x30]
   140019af6:	mov    rbp,QWORD PTR [rsp+0x38]
   140019afb:	mov    rsi,QWORD PTR [rsp+0x40]
   140019b00:	add    rsp,0x20
   140019b04:	pop    rdi
   140019b05:	ret    
   140019b06:	int3   
   140019b07:	int3   
   140019b08:	sub    rsp,0x28
   140019b0c:	mov    eax,0xe06d7363
   140019b11:	cmp    ecx,eax
   140019b13:	jne    0x140019b1e
   140019b15:	mov    ecx,eax
   140019b17:	call   0x140019938
   140019b1c:	jmp    0x140019b20
   140019b1e:	xor    eax,eax
   140019b20:	add    rsp,0x28
   140019b24:	ret    
   140019b25:	int3   
   140019b26:	int3   
   140019b27:	int3   
   140019b28:	mov    QWORD PTR [rip+0x1ca39],rcx        # 0x140036568
   140019b2f:	mov    QWORD PTR [rip+0x1ca3a],rcx        # 0x140036570
   140019b36:	mov    QWORD PTR [rip+0x1ca3b],rcx        # 0x140036578
   140019b3d:	mov    QWORD PTR [rip+0x1ca3c],rcx        # 0x140036580
   140019b44:	ret    
   140019b45:	int3   
   140019b46:	int3   
   140019b47:	int3   
   140019b48:	mov    QWORD PTR [rsp+0x8],rbx
   140019b4d:	mov    QWORD PTR [rsp+0x10],rsi
   140019b52:	push   rdi
   140019b53:	sub    rsp,0x20
   140019b57:	mov    ebx,ecx
   140019b59:	xor    ecx,ecx
   140019b5b:	call   0x1400133a8
   140019b60:	nop
   140019b61:	test   ebx,ebx
   140019b63:	jne    0x140019b82
   140019b65:	lea    rdi,[rip+0x1c9fc]        # 0x140036568
   140019b6c:	mov    rcx,QWORD PTR [rip+0x1c9f5]        # 0x140036568
   140019b73:	call   0x140011758
   140019b78:	mov    rbx,rax
   140019b7b:	mov    esi,0x2
   140019b80:	jmp    0x140019b9d
   140019b82:	lea    rdi,[rip+0x1c9e7]        # 0x140036570
   140019b89:	mov    rcx,QWORD PTR [rip+0x1c9e0]        # 0x140036570
   140019b90:	call   0x140011758
   140019b95:	mov    rbx,rax
   140019b98:	mov    esi,0x15
   140019b9d:	test   rbx,rbx
   140019ba0:	je     0x140019bb0
   140019ba2:	cmp    rbx,0x1
   140019ba6:	je     0x140019bb0
   140019ba8:	call   0x14001174c
   140019bad:	mov    QWORD PTR [rdi],rax
   140019bb0:	xor    ecx,ecx
   140019bb2:	call   0x140013288
   140019bb7:	test   rbx,rbx
   140019bba:	jne    0x140019bc0
   140019bbc:	xor    eax,eax
   140019bbe:	jmp    0x140019bcf
   140019bc0:	cmp    rbx,0x1
   140019bc4:	je     0x140019bca
   140019bc6:	mov    ecx,esi
   140019bc8:	call   rbx
   140019bca:	mov    eax,0x1
   140019bcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140019bd4:	mov    rsi,QWORD PTR [rsp+0x38]
   140019bd9:	add    rsp,0x20
   140019bdd:	pop    rdi
   140019bde:	ret    
   140019bdf:	int3   
   140019be0:	mov    r9d,ecx
   140019be3:	movsxd rcx,DWORD PTR [rip+0x1b9a2]        # 0x14003558c
   140019bea:	mov    rax,rdx
   140019bed:	cmp    DWORD PTR [rax+0x4],r9d
   140019bf1:	je     0x140019c06
   140019bf3:	mov    r8,rcx
   140019bf6:	add    rax,0x10
   140019bfa:	shl    r8,0x4
   140019bfe:	add    r8,rdx
   140019c01:	cmp    rax,r8
   140019c04:	jb     0x140019bed
   140019c06:	shl    rcx,0x4
   140019c0a:	add    rcx,rdx
   140019c0d:	cmp    rax,rcx
   140019c10:	jae    0x140019c18
   140019c12:	cmp    DWORD PTR [rax+0x4],r9d
   140019c16:	je     0x140019c1a
   140019c18:	xor    eax,eax
   140019c1a:	ret    
   140019c1b:	int3   
   140019c1c:	mov    rcx,QWORD PTR [rip+0x1c955]        # 0x140036578
   140019c23:	jmp    0x140011758
   140019c28:	sub    rsp,0x28
   140019c2c:	call   0x1400118e4
   140019c31:	add    rax,0xb0
   140019c37:	add    rsp,0x28
   140019c3b:	ret    
   140019c3c:	sub    rsp,0x28
   140019c40:	call   0x1400118e4
   140019c45:	add    rax,0xa8
   140019c4b:	add    rsp,0x28
   140019c4f:	ret    
   140019c50:	mov    QWORD PTR [rsp+0x8],rbx
   140019c55:	mov    QWORD PTR [rsp+0x10],rsi
   140019c5a:	mov    QWORD PTR [rsp+0x18],rdi
   140019c5f:	push   r12
   140019c61:	sub    rsp,0x40
   140019c65:	mov    rsi,rdx
   140019c68:	mov    edi,ecx
   140019c6a:	xor    r12d,r12d
   140019c6d:	cmp    rdx,0x4
   140019c71:	je     0x140019ec3
   140019c77:	cmp    rdx,0x3
   140019c7b:	je     0x140019ec3
   140019c81:	cmp    ecx,0x2
   140019c84:	je     0x140019d9f
   140019c8a:	cmp    ecx,0x15
   140019c8d:	je     0x140019d9f
   140019c93:	cmp    ecx,0x16
   140019c96:	je     0x140019d9f
   140019c9c:	cmp    ecx,0x6
   140019c9f:	je     0x140019d9f
   140019ca5:	cmp    ecx,0xf
   140019ca8:	je     0x140019d9f
   140019cae:	cmp    ecx,0x8
   140019cb1:	je     0x140019cc1
   140019cb3:	cmp    ecx,0x4
   140019cb6:	je     0x140019cc1
   140019cb8:	cmp    ecx,0xb
   140019cbb:	jne    0x140019ec3
   140019cc1:	call   0x140011860
   140019cc6:	mov    r12,rax
   140019cc9:	test   rax,rax
   140019ccc:	je     0x140019ec3
   140019cd2:	lea    rbx,[rip+0x14a57]        # 0x14002e730
   140019cd9:	cmp    QWORD PTR [rax+0xa0],rbx
   140019ce0:	jne    0x140019d11
   140019ce2:	movsxd rcx,DWORD PTR [rip+0x1b89f]        # 0x140035588
   140019ce9:	call   0x140012c00
   140019cee:	mov    QWORD PTR [r12+0xa0],rax
   140019cf6:	test   rax,rax
   140019cf9:	je     0x140019ec3
   140019cff:	movsxd r8,DWORD PTR [rip+0x1b882]        # 0x140035588
   140019d06:	mov    rdx,rbx
   140019d09:	mov    rcx,rax
   140019d0c:	call   0x140008b00
   140019d11:	mov    rdx,QWORD PTR [r12+0xa0]
   140019d19:	mov    rcx,rdx
   140019d1c:	movsxd r8,DWORD PTR [rip+0x1b869]        # 0x14003558c
   140019d23:	cmp    DWORD PTR [rcx+0x4],edi
   140019d26:	je     0x140019d3b
   140019d28:	add    rcx,0x10
   140019d2c:	mov    rax,r8
   140019d2f:	shl    rax,0x4
   140019d33:	add    rax,rdx
   140019d36:	cmp    rcx,rax
   140019d39:	jb     0x140019d23
   140019d3b:	mov    rax,r8
   140019d3e:	shl    rax,0x4
   140019d42:	add    rax,rdx
   140019d45:	cmp    rcx,rax
   140019d48:	jae    0x140019d4f
   140019d4a:	cmp    DWORD PTR [rcx+0x4],edi
   140019d4d:	je     0x140019d51
   140019d4f:	xor    ecx,ecx
   140019d51:	test   rcx,rcx
   140019d54:	je     0x140019ec3
   140019d5a:	mov    rbx,QWORD PTR [rcx+0x8]
   140019d5e:	cmp    rsi,0x2
   140019d62:	je     0x140019ebe
   140019d68:	cmp    DWORD PTR [rcx+0x4],edi
   140019d6b:	jne    0x140019ebe
   140019d71:	mov    QWORD PTR [rcx+0x8],rsi
   140019d75:	add    rcx,0x10
   140019d79:	movsxd rax,DWORD PTR [rip+0x1b80c]        # 0x14003558c
   140019d80:	shl    rax,0x4
   140019d84:	add    rax,QWORD PTR [r12+0xa0]
   140019d8c:	cmp    rcx,rax
   140019d8f:	jae    0x140019ebe
   140019d95:	cmp    DWORD PTR [rcx+0x4],edi
   140019d98:	je     0x140019d71
   140019d9a:	jmp    0x140019ebe
   140019d9f:	xor    ecx,ecx
   140019da1:	call   0x1400133a8
   140019da6:	nop
   140019da7:	cmp    edi,0x2
   140019daa:	je     0x140019db1
   140019dac:	cmp    edi,0x15
   140019daf:	jne    0x140019def
   140019db1:	cmp    DWORD PTR [rip+0x1c7d0],0x0        # 0x140036588
   140019db8:	jne    0x140019def
   140019dba:	mov    edx,0x1
   140019dbf:	lea    rcx,[rip+0xfffffffffffffd82]        # 0x140019b48
   140019dc6:	call   QWORD PTR [rip+0xd444]        # 0x140027210
   140019dcc:	cmp    eax,0x1
   140019dcf:	jne    0x140019dd9
   140019dd1:	mov    DWORD PTR [rip+0x1c7b1],eax        # 0x140036588
   140019dd7:	jmp    0x140019def
   140019dd9:	call   0x14000f594
   140019dde:	mov    rbx,rax
   140019de1:	call   QWORD PTR [rip+0xd489]        # 0x140027270
   140019de7:	mov    DWORD PTR [rbx],eax
   140019de9:	mov    r12d,0x1
   140019def:	mov    ecx,edi
   140019df1:	sub    ecx,0x2
   140019df4:	je     0x140019e8e
   140019dfa:	sub    ecx,0x4
   140019dfd:	je     0x140019e68
   140019dff:	sub    ecx,0x9
   140019e02:	je     0x140019e42
   140019e04:	sub    ecx,0x6
   140019e07:	je     0x140019e18
   140019e09:	cmp    ecx,0x1
   140019e0c:	je     0x140019e68
   140019e0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e13:	jmp    0x140019eb2
   140019e18:	mov    rcx,QWORD PTR [rip+0x1c751]        # 0x140036570
   140019e1f:	call   0x140011758
   140019e24:	mov    rbx,rax
   140019e27:	cmp    rsi,0x2
   140019e2b:	je     0x140019eb2
   140019e31:	mov    rcx,rsi
   140019e34:	call   0x140011744
   140019e39:	mov    QWORD PTR [rip+0x1c730],rax        # 0x140036570
   140019e40:	jmp    0x140019eb2
   140019e42:	mov    rcx,QWORD PTR [rip+0x1c737]        # 0x140036580
   140019e49:	call   0x140011758
   140019e4e:	mov    rbx,rax
   140019e51:	cmp    rsi,0x2
   140019e55:	je     0x140019eb2
   140019e57:	mov    rcx,rsi
   140019e5a:	call   0x140011744
   140019e5f:	mov    QWORD PTR [rip+0x1c71a],rax        # 0x140036580
   140019e66:	jmp    0x140019eb2
   140019e68:	mov    rcx,QWORD PTR [rip+0x1c709]        # 0x140036578
   140019e6f:	call   0x140011758
   140019e74:	mov    rbx,rax
   140019e77:	cmp    rsi,0x2
   140019e7b:	je     0x140019eb2
   140019e7d:	mov    rcx,rsi
   140019e80:	call   0x140011744
   140019e85:	mov    QWORD PTR [rip+0x1c6ec],rax        # 0x140036578
   140019e8c:	jmp    0x140019eb2
   140019e8e:	mov    rcx,QWORD PTR [rip+0x1c6d3]        # 0x140036568
   140019e95:	call   0x140011758
   140019e9a:	mov    rbx,rax
   140019e9d:	cmp    rsi,0x2
   140019ea1:	je     0x140019eb2
   140019ea3:	mov    rcx,rsi
   140019ea6:	call   0x140011744
   140019eab:	mov    QWORD PTR [rip+0x1c6b6],rax        # 0x140036568
   140019eb2:	xor    ecx,ecx
   140019eb4:	call   0x140013288
   140019eb9:	test   r12d,r12d
   140019ebc:	jne    0x140019ec3
   140019ebe:	mov    rax,rbx
   140019ec1:	jmp    0x140019f06
   140019ec3:	cmp    edi,0x1
   140019ec6:	je     0x140019f02
   140019ec8:	cmp    edi,0x3
   140019ecb:	je     0x140019f02
   140019ecd:	cmp    edi,0xd
   140019ed0:	je     0x140019f02
   140019ed2:	cmp    edi,0xf
   140019ed5:	jle    0x140019edc
   140019ed7:	cmp    edi,0x11
   140019eda:	jle    0x140019f02
   140019edc:	call   0x14000f574
   140019ee1:	mov    DWORD PTR [rax],0x16
   140019ee7:	and    QWORD PTR [rsp+0x20],0x0
   140019eed:	xor    r9d,r9d
   140019ef0:	xor    r8d,r8d
   140019ef3:	xor    edx,edx
   140019ef5:	xor    ecx,ecx
   140019ef7:	call   0x14000e4d8
   140019efc:	or     rax,0xffffffffffffffff
   140019f00:	jmp    0x140019f06
   140019f02:	or     rax,0xffffffffffffffff
   140019f06:	mov    rbx,QWORD PTR [rsp+0x50]
   140019f0b:	mov    rsi,QWORD PTR [rsp+0x58]
   140019f10:	mov    rdi,QWORD PTR [rsp+0x60]
   140019f15:	add    rsp,0x40
   140019f19:	pop    r12
   140019f1b:	ret    
   140019f1c:	mov    QWORD PTR [rsp+0x10],rbx
   140019f21:	mov    QWORD PTR [rsp+0x18],rsi
   140019f26:	push   rdi
   140019f27:	push   r12
   140019f29:	push   r13
   140019f2b:	push   r14
   140019f2d:	push   r15
   140019f2f:	sub    rsp,0x40
   140019f33:	mov    ebx,ecx
   140019f35:	xor    edi,edi
   140019f37:	mov    DWORD PTR [rsp+0x70],edi
   140019f3b:	xor    esi,esi
   140019f3d:	mov    edx,ecx
   140019f3f:	sub    edx,0x2
   140019f42:	je     0x14001a051
   140019f48:	sub    edx,0x2
   140019f4b:	je     0x140019ff3
   140019f51:	sub    edx,0x2
   140019f54:	je     0x140019fda
   140019f5a:	sub    edx,0x2
   140019f5d:	je     0x140019ff3
   140019f63:	sub    edx,0x3
   140019f66:	je     0x140019ff3
   140019f6c:	sub    edx,0x4
   140019f6f:	je     0x140019fbe
   140019f71:	sub    edx,0x6
   140019f74:	je     0x140019fa2
   140019f76:	cmp    edx,0x1
   140019f79:	je     0x140019fda
   140019f7b:	call   0x14000f574
   140019f80:	mov    DWORD PTR [rax],0x16
   140019f86:	and    QWORD PTR [rsp+0x20],rsi
   140019f8b:	xor    r9d,r9d
   140019f8e:	xor    r8d,r8d
   140019f91:	xor    edx,edx
   140019f93:	xor    ecx,ecx
   140019f95:	call   0x14000e4d8
   140019f9a:	or     eax,0xffffffff
   140019f9d:	jmp    0x14001a173
   140019fa2:	lea    r12,[rip+0x1c5c7]        # 0x140036570
   140019fa9:	mov    rcx,QWORD PTR [rip+0x1c5c0]        # 0x140036570
   140019fb0:	mov    edi,0x1
   140019fb5:	mov    DWORD PTR [rsp+0x70],edi
   140019fb9:	jmp    0x14001a068
   140019fbe:	lea    r12,[rip+0x1c5bb]        # 0x140036580
   140019fc5:	mov    rcx,QWORD PTR [rip+0x1c5b4]        # 0x140036580
   140019fcc:	mov    edi,0x1
   140019fd1:	mov    DWORD PTR [rsp+0x70],edi
   140019fd5:	jmp    0x14001a068
   140019fda:	lea    r12,[rip+0x1c597]        # 0x140036578
   140019fe1:	mov    rcx,QWORD PTR [rip+0x1c590]        # 0x140036578
   140019fe8:	mov    edi,0x1
   140019fed:	mov    DWORD PTR [rsp+0x70],edi
   140019ff1:	jmp    0x14001a068
   140019ff3:	call   0x140011860
   140019ff8:	mov    rsi,rax
   140019ffb:	test   rax,rax
   140019ffe:	jne    0x14001a008
   14001a000:	or     eax,0xffffffff
   14001a003:	jmp    0x14001a173
   14001a008:	mov    rdx,QWORD PTR [rax+0xa0]
   14001a00f:	mov    rcx,rdx
   14001a012:	movsxd r8,DWORD PTR [rip+0x1b573]        # 0x14003558c
   14001a019:	cmp    DWORD PTR [rcx+0x4],ebx
   14001a01c:	je     0x14001a031
   14001a01e:	add    rcx,0x10
   14001a022:	mov    rax,r8
   14001a025:	shl    rax,0x4
   14001a029:	add    rax,rdx
   14001a02c:	cmp    rcx,rax
   14001a02f:	jb     0x14001a019
   14001a031:	mov    rax,r8
   14001a034:	shl    rax,0x4
   14001a038:	add    rax,rdx
   14001a03b:	cmp    rcx,rax
   14001a03e:	jae    0x14001a045
   14001a040:	cmp    DWORD PTR [rcx+0x4],ebx
   14001a043:	je     0x14001a047
   14001a045:	xor    ecx,ecx
   14001a047:	lea    r12,[rcx+0x8]
   14001a04b:	mov    r13,QWORD PTR [r12]
   14001a04f:	jmp    0x14001a070
   14001a051:	lea    r12,[rip+0x1c510]        # 0x140036568
   14001a058:	mov    rcx,QWORD PTR [rip+0x1c509]        # 0x140036568
   14001a05f:	mov    edi,0x1
   14001a064:	mov    DWORD PTR [rsp+0x70],edi
   14001a068:	call   0x140011758
   14001a06d:	mov    r13,rax
   14001a070:	cmp    r13,0x1
   14001a074:	jne    0x14001a07d
   14001a076:	xor    eax,eax
   14001a078:	jmp    0x14001a173
   14001a07d:	test   r13,r13
   14001a080:	jne    0x14001a08c
   14001a082:	lea    ecx,[r13+0x3]
   14001a086:	call   0x14000df00
   14001a08b:	int3   
   14001a08c:	test   edi,edi
   14001a08e:	je     0x14001a098
   14001a090:	xor    ecx,ecx
   14001a092:	call   0x1400133a8
   14001a097:	nop
   14001a098:	cmp    ebx,0x8
   14001a09b:	je     0x14001a0b3
   14001a09d:	cmp    ebx,0xb
   14001a0a0:	je     0x14001a0b3
   14001a0a2:	cmp    ebx,0x4
   14001a0a5:	je     0x14001a0b3
   14001a0a7:	mov    r15,QWORD PTR [rsp+0x38]
   14001a0ac:	mov    r14d,DWORD PTR [rsp+0x70]
   14001a0b1:	jmp    0x14001a0e4
   14001a0b3:	mov    r15,QWORD PTR [rsi+0xa8]
   14001a0ba:	mov    QWORD PTR [rsp+0x38],r15
   14001a0bf:	and    QWORD PTR [rsi+0xa8],0x0
   14001a0c7:	cmp    ebx,0x8
   14001a0ca:	jne    0x14001a0df
   14001a0cc:	mov    r14d,DWORD PTR [rsi+0xb0]
   14001a0d3:	mov    DWORD PTR [rsi+0xb0],0x8c
   14001a0dd:	jmp    0x14001a0e4
   14001a0df:	mov    r14d,DWORD PTR [rsp+0x70]
   14001a0e4:	cmp    ebx,0x8
   14001a0e7:	jne    0x14001a122
   14001a0e9:	mov    ecx,DWORD PTR [rip+0x1b491]        # 0x140035580
   14001a0ef:	mov    edx,ecx
   14001a0f1:	mov    DWORD PTR [rsp+0x30],ecx
   14001a0f5:	mov    eax,DWORD PTR [rip+0x1b489]        # 0x140035584
   14001a0fb:	add    ecx,eax
   14001a0fd:	cmp    edx,ecx
   14001a0ff:	jge    0x14001a12b
   14001a101:	movsxd rcx,edx
   14001a104:	add    rcx,rcx
   14001a107:	mov    rax,QWORD PTR [rsi+0xa0]
   14001a10e:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14001a114:	inc    edx
   14001a116:	mov    DWORD PTR [rsp+0x30],edx
   14001a11a:	mov    ecx,DWORD PTR [rip+0x1b460]        # 0x140035580
   14001a120:	jmp    0x14001a0f5
   14001a122:	call   0x14001174c
   14001a127:	mov    QWORD PTR [r12],rax
   14001a12b:	test   edi,edi
   14001a12d:	je     0x14001a136
   14001a12f:	xor    ecx,ecx
   14001a131:	call   0x140013288
   14001a136:	mov    edi,0x8
   14001a13b:	cmp    ebx,edi
   14001a13d:	jne    0x14001a14c
   14001a13f:	mov    edx,DWORD PTR [rsi+0xb0]
   14001a145:	mov    ecx,edi
   14001a147:	call   r13
   14001a14a:	jmp    0x14001a151
   14001a14c:	mov    ecx,ebx
   14001a14e:	call   r13
   14001a151:	cmp    ebx,edi
   14001a153:	je     0x14001a15f
   14001a155:	cmp    ebx,0xb
   14001a158:	je     0x14001a15f
   14001a15a:	cmp    ebx,0x4
   14001a15d:	jne    0x14001a171
   14001a15f:	mov    QWORD PTR [rsi+0xa8],r15
   14001a166:	cmp    ebx,edi
   14001a168:	jne    0x14001a171
   14001a16a:	mov    DWORD PTR [rsi+0xb0],r14d
   14001a171:	xor    eax,eax
   14001a173:	lea    r11,[rsp+0x40]
   14001a178:	mov    rbx,QWORD PTR [r11+0x38]
   14001a17c:	mov    rsi,QWORD PTR [r11+0x40]
   14001a180:	mov    rsp,r11
   14001a183:	pop    r15
   14001a185:	pop    r14
   14001a187:	pop    r13
   14001a189:	pop    r12
   14001a18b:	pop    rdi
   14001a18c:	ret    
   14001a18d:	int3   
   14001a18e:	int3   
   14001a18f:	int3   
   14001a190:	mov    QWORD PTR [rip+0x1c3f9],rcx        # 0x140036590
   14001a197:	ret    
   14001a198:	mov    QWORD PTR [rsp+0x8],rbx
   14001a19d:	mov    QWORD PTR [rsp+0x10],rbp
   14001a1a2:	mov    QWORD PTR [rsp+0x18],rsi
   14001a1a7:	push   rdi
   14001a1a8:	sub    rsp,0x30
   14001a1ac:	mov    rbp,rcx
   14001a1af:	mov    rcx,QWORD PTR [rip+0x1c3da]        # 0x140036590
   14001a1b6:	call   0x140011758
   14001a1bb:	mov    rdi,rax
   14001a1be:	test   rbp,rbp
   14001a1c1:	jne    0x14001a1eb
   14001a1c3:	call   0x14000f574
   14001a1c8:	and    QWORD PTR [rsp+0x20],0x0
   14001a1ce:	mov    ebx,0x16
   14001a1d3:	xor    r9d,r9d
   14001a1d6:	xor    r8d,r8d
   14001a1d9:	xor    edx,edx
   14001a1db:	xor    ecx,ecx
   14001a1dd:	mov    DWORD PTR [rax],ebx
   14001a1df:	call   0x14000e4d8
   14001a1e4:	mov    eax,ebx
   14001a1e6:	jmp    0x14001a2a8
   14001a1eb:	and    DWORD PTR [rbp+0x0],0x0
   14001a1ef:	test   rax,rax
   14001a1f2:	jne    0x14001a284
   14001a1f8:	lea    rcx,[rip+0x145e9]        # 0x14002e7e8
   14001a1ff:	call   QWORD PTR [rip+0xd03b]        # 0x140027240
   14001a205:	mov    rsi,rax
   14001a208:	test   rax,rax
   14001a20b:	je     0x14001a1c3
   14001a20d:	lea    rdx,[rip+0x145bc]        # 0x14002e7d0
   14001a214:	mov    rcx,rax
   14001a217:	call   QWORD PTR [rip+0xd02b]        # 0x140027248
   14001a21d:	mov    rdi,rax
   14001a220:	test   rax,rax
   14001a223:	jne    0x14001a25f
   14001a225:	call   0x14000f574
   14001a22a:	mov    rbx,rax
   14001a22d:	call   QWORD PTR [rip+0xd03d]        # 0x140027270
   14001a233:	mov    ecx,eax
   14001a235:	call   0x14000f52c
   14001a23a:	and    QWORD PTR [rsp+0x20],rdi
   14001a23f:	xor    r9d,r9d
   14001a242:	xor    r8d,r8d
   14001a245:	xor    edx,edx
   14001a247:	xor    ecx,ecx
   14001a249:	mov    DWORD PTR [rbx],eax
   14001a24b:	call   0x14000e4d8
   14001a250:	call   QWORD PTR [rip+0xd01a]        # 0x140027270
   14001a256:	mov    ecx,eax
   14001a258:	call   0x14000f52c
   14001a25d:	jmp    0x14001a2a8
   14001a25f:	mov    rcx,rax
   14001a262:	call   0x140011744
   14001a267:	mov    rbx,rax
   14001a26a:	call   0x14001174c
   14001a26f:	xchg   QWORD PTR [rip+0x1c31a],rbx        # 0x140036590
   14001a276:	cmp    rbx,rax
   14001a279:	je     0x14001a284
   14001a27b:	mov    rcx,rsi
   14001a27e:	call   QWORD PTR [rip+0xce2c]        # 0x1400270b0
   14001a284:	mov    edx,0x4
   14001a289:	mov    rcx,rbp
   14001a28c:	call   rdi
   14001a28e:	test   eax,eax
   14001a290:	jne    0x14001a2a6
   14001a292:	call   0x14000f574
   14001a297:	mov    DWORD PTR [rax],0xc
   14001a29d:	call   0x14000f574
   14001a2a2:	mov    eax,DWORD PTR [rax]
   14001a2a4:	jmp    0x14001a2a8
   14001a2a6:	xor    eax,eax
   14001a2a8:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a2ad:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a2b2:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a2b7:	add    rsp,0x30
   14001a2bb:	pop    rdi
   14001a2bc:	ret    
   14001a2bd:	int3   
   14001a2be:	int3   
   14001a2bf:	int3   
   14001a2c0:	rex push rbp
   14001a2c2:	push   rsi
   14001a2c3:	push   rdi
   14001a2c4:	push   r12
   14001a2c6:	push   r13
   14001a2c8:	push   r14
   14001a2ca:	push   r15
   14001a2cc:	sub    rsp,0xc0
   14001a2d3:	mov    rax,QWORD PTR [rip+0x19fc6]        # 0x1400342a0
   14001a2da:	xor    rax,rsp
   14001a2dd:	mov    QWORD PTR [rsp+0xb0],rax
   14001a2e5:	mov    rbp,QWORD PTR [rsp+0x120]
   14001a2ed:	mov    r15d,r9d
   14001a2f0:	mov    r14d,r8d
   14001a2f3:	mov    r13,rcx
   14001a2f6:	cmp    edx,0x1
   14001a2f9:	jne    0x14001a41c
   14001a2ff:	xor    esi,esi
   14001a301:	lea    r9,[rsp+0x30]
   14001a306:	mov    r8d,r15d
   14001a309:	and    DWORD PTR [rsp+0x28],esi
   14001a30d:	mov    edx,r14d
   14001a310:	lea    rdi,[rsp+0x30]
   14001a315:	mov    DWORD PTR [rsp+0x20],0x80
   14001a31d:	call   0x1400236b0
   14001a322:	mov    r12d,eax
   14001a325:	test   eax,eax
   14001a327:	jne    0x14001a392
   14001a329:	call   QWORD PTR [rip+0xcf41]        # 0x140027270
   14001a32f:	cmp    eax,0x7a
   14001a332:	jne    0x14001a3ba
   14001a338:	and    DWORD PTR [rsp+0x28],esi
   14001a33c:	and    DWORD PTR [rsp+0x20],esi
   14001a340:	xor    r9d,r9d
   14001a343:	mov    r8d,r15d
   14001a346:	mov    edx,r14d
   14001a349:	mov    rcx,r13
   14001a34c:	call   0x1400236b0
   14001a351:	movsxd r12,eax
   14001a354:	test   eax,eax
   14001a356:	je     0x14001a3ba
   14001a358:	mov    esi,0x1
   14001a35d:	mov    rcx,r12
   14001a360:	mov    rdx,rsi
   14001a363:	call   0x140012c6c
   14001a368:	mov    rdi,rax
   14001a36b:	test   rax,rax
   14001a36e:	je     0x14001a3ba
   14001a370:	and    DWORD PTR [rsp+0x28],0x0
   14001a375:	mov    r9,rax
   14001a378:	mov    r8d,r15d
   14001a37b:	mov    edx,r14d
   14001a37e:	mov    rcx,r13
   14001a381:	mov    DWORD PTR [rsp+0x20],r12d
   14001a386:	call   0x1400236b0
   14001a38b:	mov    r12d,eax
   14001a38e:	test   eax,eax
   14001a390:	je     0x14001a3b2
   14001a392:	movsxd r13,r12d
   14001a395:	mov    edx,0x1
   14001a39a:	mov    rcx,r13
   14001a39d:	call   0x140012c6c
   14001a3a2:	mov    rcx,rax
   14001a3a5:	mov    QWORD PTR [rbp+0x0],rax
   14001a3a9:	test   rax,rax
   14001a3ac:	jne    0x14001a3e0
   14001a3ae:	test   esi,esi
   14001a3b0:	je     0x14001a3ba
   14001a3b2:	mov    rcx,rdi
   14001a3b5:	call   0x1400098ac
   14001a3ba:	or     eax,0xffffffff
   14001a3bd:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001a3c5:	xor    rcx,rsp
   14001a3c8:	call   0x140009080
   14001a3cd:	add    rsp,0xc0
   14001a3d4:	pop    r15
   14001a3d6:	pop    r14
   14001a3d8:	pop    r13
   14001a3da:	pop    r12
   14001a3dc:	pop    rdi
   14001a3dd:	pop    rsi
   14001a3de:	pop    rbp
   14001a3df:	ret    
   14001a3e0:	lea    eax,[r12-0x1]
   14001a3e5:	mov    r8,rdi
   14001a3e8:	mov    rdx,r13
   14001a3eb:	movsxd r9,eax
   14001a3ee:	call   0x14001ac68
   14001a3f3:	test   eax,eax
   14001a3f5:	je     0x14001a40c
   14001a3f7:	and    QWORD PTR [rsp+0x20],0x0
   14001a3fd:	xor    r9d,r9d
   14001a400:	xor    r8d,r8d
   14001a403:	xor    edx,edx
   14001a405:	xor    ecx,ecx
   14001a407:	call   0x14000e350
   14001a40c:	test   esi,esi
   14001a40e:	je     0x14001a418
   14001a410:	mov    rcx,rdi
   14001a413:	call   0x1400098ac
   14001a418:	xor    eax,eax
   14001a41a:	jmp    0x14001a3bd
   14001a41c:	test   edx,edx
   14001a41e:	jne    0x14001a3ba
   14001a420:	and    DWORD PTR [rsp+0x28],edx
   14001a424:	lea    rdi,[rip+0x1c16d]        # 0x140036598
   14001a42b:	mov    r8d,r15d
   14001a42e:	mov    edx,r14d
   14001a431:	mov    r9,rdi
   14001a434:	mov    DWORD PTR [rsp+0x20],0x4
   14001a43c:	call   0x140023478
   14001a441:	test   eax,eax
   14001a443:	je     0x14001a3ba
   14001a449:	mov    BYTE PTR [rbp+0x0],0x0
   14001a44d:	movzx  esi,BYTE PTR [rdi]
   14001a450:	mov    ecx,esi
   14001a452:	call   0x14000cb2c
   14001a457:	test   eax,eax
   14001a459:	je     0x14001a418
   14001a45b:	mov    cl,BYTE PTR [rbp+0x0]
   14001a45e:	add    rdi,0x2
   14001a462:	mov    al,cl
   14001a464:	shl    al,0x2
   14001a467:	add    cl,al
   14001a469:	lea    rax,[rip+0x1c130]        # 0x1400365a0
   14001a470:	add    cl,cl
   14001a472:	add    cl,sil
   14001a475:	sub    cl,0x30
   14001a478:	cmp    rdi,rax
   14001a47b:	mov    BYTE PTR [rbp+0x0],cl
   14001a47e:	jl     0x14001a44d
   14001a480:	jmp    0x14001a418
   14001a482:	int3   
   14001a483:	int3   
   14001a484:	mov    QWORD PTR [rip+0x1c115],rcx        # 0x1400365a0
   14001a48b:	ret    
   14001a48c:	mov    QWORD PTR [rip+0x1c115],rcx        # 0x1400365a8
   14001a493:	ret    
   14001a494:	sub    rsp,0x38
   14001a498:	call   QWORD PTR [rip+0xcd6a]        # 0x140027208
   14001a49e:	mov    r11d,eax
   14001a4a1:	mov    DWORD PTR [rsp+0x20],eax
   14001a4a5:	jmp    0x14001a4c1
   14001a4a7:	cmp    eax,0xc0000017
   14001a4ac:	jne    0x14001a4b9
   14001a4ae:	mov    ecx,0x8
   14001a4b3:	call   QWORD PTR [rip+0xcdf7]        # 0x1400272b0
   14001a4b9:	xor    r11d,r11d
   14001a4bc:	mov    DWORD PTR [rsp+0x20],r11d
   14001a4c1:	mov    eax,r11d
   14001a4c4:	add    rsp,0x38
   14001a4c8:	ret    
   14001a4c9:	int3   
   14001a4ca:	int3   
   14001a4cb:	int3   
   14001a4cc:	sub    rsp,0x28
   14001a4d0:	mov    rax,QWORD PTR [rcx]
   14001a4d3:	cmp    DWORD PTR [rax],0xe06d7363
   14001a4d9:	jne    0x14001a506
   14001a4db:	cmp    DWORD PTR [rax+0x18],0x4
   14001a4df:	jne    0x14001a506
   14001a4e1:	mov    eax,DWORD PTR [rax+0x20]
   14001a4e4:	cmp    eax,0x19930520
   14001a4e9:	je     0x14001a500
   14001a4eb:	cmp    eax,0x19930521
   14001a4f0:	je     0x14001a500
   14001a4f2:	cmp    eax,0x19930522
   14001a4f7:	je     0x14001a500
   14001a4f9:	cmp    eax,0x1994000
   14001a4fe:	jne    0x14001a506
   14001a500:	call   0x140019874
   14001a505:	int3   
   14001a506:	xor    eax,eax
   14001a508:	add    rsp,0x28
   14001a50c:	ret    
   14001a50d:	int3   
   14001a50e:	int3   
   14001a50f:	int3   
   14001a510:	sub    rsp,0x28
   14001a514:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14001a4cc
   14001a51b:	call   QWORD PTR [rip+0xce67]        # 0x140027388
   14001a521:	xor    eax,eax
   14001a523:	add    rsp,0x28
   14001a527:	ret    
   14001a528:	mov    QWORD PTR [rsp+0x8],rbx
   14001a52d:	push   rdi
   14001a52e:	sub    rsp,0x20
   14001a532:	xor    edi,edi
   14001a534:	cmp    DWORD PTR [rip+0x1da56],edi        # 0x140037f90
   14001a53a:	jne    0x14001a541
   14001a53c:	call   0x140010200
   14001a541:	mov    rbx,QWORD PTR [rip+0x1da28]        # 0x140037f70
   14001a548:	lea    rax,[rip+0xd2e9]        # 0x140027838
   14001a54f:	test   rbx,rbx
   14001a552:	cmove  rbx,rax
   14001a556:	cmp    BYTE PTR [rbx],0x20
   14001a559:	ja     0x14001a564
   14001a55b:	cmp    BYTE PTR [rbx],0x0
   14001a55e:	je     0x14001a593
   14001a560:	test   edi,edi
   14001a562:	je     0x14001a58d
   14001a564:	cmp    BYTE PTR [rbx],0x22
   14001a567:	jne    0x14001a572
   14001a569:	xor    eax,eax
   14001a56b:	test   edi,edi
   14001a56d:	sete   al
   14001a570:	mov    edi,eax
   14001a572:	movzx  ecx,BYTE PTR [rbx]
   14001a575:	call   0x140023938
   14001a57a:	test   eax,eax
   14001a57c:	je     0x14001a581
   14001a57e:	inc    rbx
   14001a581:	inc    rbx
   14001a584:	jmp    0x14001a556
   14001a586:	cmp    al,0x20
   14001a588:	ja     0x14001a593
   14001a58a:	inc    rbx
   14001a58d:	mov    al,BYTE PTR [rbx]
   14001a58f:	test   al,al
   14001a591:	jne    0x14001a586
   14001a593:	mov    rax,rbx
   14001a596:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a59b:	add    rsp,0x20
   14001a59f:	pop    rdi
   14001a5a0:	ret    
   14001a5a1:	int3   
   14001a5a2:	int3   
   14001a5a3:	int3   
   14001a5a4:	mov    QWORD PTR [rsp+0x8],rbx
   14001a5a9:	mov    QWORD PTR [rsp+0x10],rbp
   14001a5ae:	mov    QWORD PTR [rsp+0x18],rsi
   14001a5b3:	push   rdi
   14001a5b4:	sub    rsp,0x30
   14001a5b8:	cmp    DWORD PTR [rip+0x1d9d1],0x0        # 0x140037f90
   14001a5bf:	jne    0x14001a5c6
   14001a5c1:	call   0x140010200
   14001a5c6:	mov    rbx,QWORD PTR [rip+0x1b37b]        # 0x140035948
   14001a5cd:	xor    edi,edi
   14001a5cf:	test   rbx,rbx
   14001a5d2:	jne    0x14001a5ef
   14001a5d4:	or     eax,0xffffffff
   14001a5d7:	jmp    0x14001a6a5
   14001a5dc:	cmp    al,0x3d
   14001a5de:	je     0x14001a5e2
   14001a5e0:	inc    edi
   14001a5e2:	mov    rcx,rbx
   14001a5e5:	call   0x140012e10
   14001a5ea:	lea    rbx,[rbx+rax*1+0x1]
   14001a5ef:	mov    al,BYTE PTR [rbx]
   14001a5f1:	test   al,al
   14001a5f3:	jne    0x14001a5dc
   14001a5f5:	lea    eax,[rdi+0x1]
   14001a5f8:	mov    edx,0x8
   14001a5fd:	movsxd rcx,eax
   14001a600:	call   0x140012c6c
   14001a605:	mov    rdi,rax
   14001a608:	mov    QWORD PTR [rip+0x1b2f9],rax        # 0x140035908
   14001a60f:	test   rax,rax
   14001a612:	je     0x14001a5d4
   14001a614:	mov    rbx,QWORD PTR [rip+0x1b32d]        # 0x140035948
   14001a61b:	cmp    BYTE PTR [rbx],0x0
   14001a61e:	je     0x14001a685
   14001a620:	mov    rcx,rbx
   14001a623:	call   0x140012e10
   14001a628:	cmp    BYTE PTR [rbx],0x3d
   14001a62b:	lea    esi,[rax+0x1]
   14001a62e:	je     0x14001a673
   14001a630:	movsxd rbp,esi
   14001a633:	mov    edx,0x1
   14001a638:	mov    rcx,rbp
   14001a63b:	call   0x140012c6c
   14001a640:	mov    QWORD PTR [rdi],rax
   14001a643:	test   rax,rax
   14001a646:	je     0x14001a6ba
   14001a648:	mov    r8,rbx
   14001a64b:	mov    rdx,rbp
   14001a64e:	mov    rcx,rax
   14001a651:	call   0x140012b54
   14001a656:	test   eax,eax
   14001a658:	je     0x14001a66f
   14001a65a:	and    QWORD PTR [rsp+0x20],0x0
   14001a660:	xor    r9d,r9d
   14001a663:	xor    r8d,r8d
   14001a666:	xor    edx,edx
   14001a668:	xor    ecx,ecx
   14001a66a:	call   0x14000e350
   14001a66f:	add    rdi,0x8
   14001a673:	movsxd rax,esi
   14001a676:	add    rbx,rax
   14001a679:	cmp    BYTE PTR [rbx],0x0
   14001a67c:	jne    0x14001a620
   14001a67e:	mov    rbx,QWORD PTR [rip+0x1b2c3]        # 0x140035948
   14001a685:	mov    rcx,rbx
   14001a688:	call   0x1400098ac
   14001a68d:	and    QWORD PTR [rip+0x1b2b3],0x0        # 0x140035948
   14001a695:	and    QWORD PTR [rdi],0x0
   14001a699:	mov    DWORD PTR [rip+0x1d8d5],0x1        # 0x140037f78
   14001a6a3:	xor    eax,eax
   14001a6a5:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a6aa:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a6af:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a6b4:	add    rsp,0x30
   14001a6b8:	pop    rdi
   14001a6b9:	ret    
   14001a6ba:	mov    rcx,QWORD PTR [rip+0x1b247]        # 0x140035908
   14001a6c1:	call   0x1400098ac
   14001a6c6:	and    QWORD PTR [rip+0x1b23a],0x0        # 0x140035908
   14001a6ce:	jmp    0x14001a5d4
   14001a6d3:	int3   
   14001a6d4:	mov    QWORD PTR [rip+0x1b24d],rcx        # 0x140035928
   14001a6db:	ret    
   14001a6dc:	mov    rax,rsp
   14001a6df:	mov    QWORD PTR [rax+0x8],rbx
   14001a6e3:	mov    QWORD PTR [rax+0x10],rbp
   14001a6e7:	mov    QWORD PTR [rax+0x18],rsi
   14001a6eb:	mov    QWORD PTR [rax+0x20],rdi
   14001a6ef:	push   r12
   14001a6f1:	push   r13
   14001a6f3:	push   r14
   14001a6f5:	sub    rsp,0x20
   14001a6f9:	mov    r13,QWORD PTR [rsp+0x60]
   14001a6fe:	mov    r14,r9
   14001a701:	mov    rdi,r8
   14001a704:	and    DWORD PTR [r13+0x0],0x0
   14001a709:	mov    r12,rdx
   14001a70c:	mov    rbx,rcx
   14001a70f:	mov    DWORD PTR [r9],0x1
   14001a716:	test   rdx,rdx
   14001a719:	je     0x14001a722
   14001a71b:	mov    QWORD PTR [rdx],r8
   14001a71e:	add    r12,0x8
   14001a722:	xor    ebp,ebp
   14001a724:	cmp    BYTE PTR [rbx],0x22
   14001a727:	jne    0x14001a73a
   14001a729:	xor    eax,eax
   14001a72b:	test   ebp,ebp
   14001a72d:	mov    sil,0x22
   14001a730:	sete   al
   14001a733:	inc    rbx
   14001a736:	mov    ebp,eax
   14001a738:	jmp    0x14001a773
   14001a73a:	inc    DWORD PTR [r13+0x0]
   14001a73e:	test   rdi,rdi
   14001a741:	je     0x14001a74a
   14001a743:	mov    al,BYTE PTR [rbx]
   14001a745:	mov    BYTE PTR [rdi],al
   14001a747:	inc    rdi
   14001a74a:	movzx  esi,BYTE PTR [rbx]
   14001a74d:	inc    rbx
   14001a750:	mov    ecx,esi
   14001a752:	call   0x140023938
   14001a757:	test   eax,eax
   14001a759:	je     0x14001a76e
   14001a75b:	inc    DWORD PTR [r13+0x0]
   14001a75f:	test   rdi,rdi
   14001a762:	je     0x14001a76b
   14001a764:	mov    al,BYTE PTR [rbx]
   14001a766:	mov    BYTE PTR [rdi],al
   14001a768:	inc    rdi
   14001a76b:	inc    rbx
   14001a76e:	test   sil,sil
   14001a771:	je     0x14001a78e
   14001a773:	test   ebp,ebp
   14001a775:	jne    0x14001a724
   14001a777:	cmp    sil,0x20
   14001a77b:	je     0x14001a783
   14001a77d:	cmp    sil,0x9
   14001a781:	jne    0x14001a724
   14001a783:	test   rdi,rdi
   14001a786:	je     0x14001a791
   14001a788:	mov    BYTE PTR [rdi-0x1],0x0
   14001a78c:	jmp    0x14001a791
   14001a78e:	dec    rbx
   14001a791:	xor    esi,esi
   14001a793:	cmp    BYTE PTR [rbx],0x0
   14001a796:	je     0x14001a87f
   14001a79c:	cmp    BYTE PTR [rbx],0x20
   14001a79f:	je     0x14001a7a6
   14001a7a1:	cmp    BYTE PTR [rbx],0x9
   14001a7a4:	jne    0x14001a7ab
   14001a7a6:	inc    rbx
   14001a7a9:	jmp    0x14001a79c
   14001a7ab:	cmp    BYTE PTR [rbx],0x0
   14001a7ae:	je     0x14001a87f
   14001a7b4:	test   r12,r12
   14001a7b7:	je     0x14001a7c1
   14001a7b9:	mov    QWORD PTR [r12],rdi
   14001a7bd:	add    r12,0x8
   14001a7c1:	inc    DWORD PTR [r14]
   14001a7c4:	mov    edx,0x1
   14001a7c9:	xor    ecx,ecx
   14001a7cb:	jmp    0x14001a7d2
   14001a7cd:	inc    rbx
   14001a7d0:	inc    ecx
   14001a7d2:	cmp    BYTE PTR [rbx],0x5c
   14001a7d5:	je     0x14001a7cd
   14001a7d7:	cmp    BYTE PTR [rbx],0x22
   14001a7da:	jne    0x14001a812
   14001a7dc:	test   dl,cl
   14001a7de:	jne    0x14001a7fd
   14001a7e0:	test   esi,esi
   14001a7e2:	je     0x14001a7f2
   14001a7e4:	lea    rax,[rbx+0x1]
   14001a7e8:	cmp    BYTE PTR [rax],0x22
   14001a7eb:	jne    0x14001a7f2
   14001a7ed:	mov    rbx,rax
   14001a7f0:	jmp    0x14001a7fd
   14001a7f2:	xor    eax,eax
   14001a7f4:	xor    edx,edx
   14001a7f6:	test   esi,esi
   14001a7f8:	sete   al
   14001a7fb:	mov    esi,eax
   14001a7fd:	shr    ecx,1
   14001a7ff:	jmp    0x14001a812
   14001a801:	dec    ecx
   14001a803:	test   rdi,rdi
   14001a806:	je     0x14001a80e
   14001a808:	mov    BYTE PTR [rdi],0x5c
   14001a80b:	inc    rdi
   14001a80e:	inc    DWORD PTR [r13+0x0]
   14001a812:	test   ecx,ecx
   14001a814:	jne    0x14001a801
   14001a816:	mov    al,BYTE PTR [rbx]
   14001a818:	test   al,al
   14001a81a:	je     0x14001a86b
   14001a81c:	test   esi,esi
   14001a81e:	jne    0x14001a828
   14001a820:	cmp    al,0x20
   14001a822:	je     0x14001a86b
   14001a824:	cmp    al,0x9
   14001a826:	je     0x14001a86b
   14001a828:	test   edx,edx
   14001a82a:	je     0x14001a863
   14001a82c:	movsx  ecx,al
   14001a82f:	call   0x140023938
   14001a834:	test   rdi,rdi
   14001a837:	je     0x14001a854
   14001a839:	test   eax,eax
   14001a83b:	je     0x14001a84b
   14001a83d:	mov    al,BYTE PTR [rbx]
   14001a83f:	inc    rbx
   14001a842:	mov    BYTE PTR [rdi],al
   14001a844:	inc    rdi
   14001a847:	inc    DWORD PTR [r13+0x0]
   14001a84b:	mov    al,BYTE PTR [rbx]
   14001a84d:	mov    BYTE PTR [rdi],al
   14001a84f:	inc    rdi
   14001a852:	jmp    0x14001a85f
   14001a854:	test   eax,eax
   14001a856:	je     0x14001a85f
   14001a858:	inc    rbx
   14001a85b:	inc    DWORD PTR [r13+0x0]
   14001a85f:	inc    DWORD PTR [r13+0x0]
   14001a863:	inc    rbx
   14001a866:	jmp    0x14001a7c4
   14001a86b:	test   rdi,rdi
   14001a86e:	je     0x14001a876
   14001a870:	mov    BYTE PTR [rdi],0x0
   14001a873:	inc    rdi
   14001a876:	inc    DWORD PTR [r13+0x0]
   14001a87a:	jmp    0x14001a793
   14001a87f:	test   r12,r12
   14001a882:	je     0x14001a889
   14001a884:	and    QWORD PTR [r12],0x0
   14001a889:	inc    DWORD PTR [r14]
   14001a88c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a891:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a896:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a89b:	mov    rdi,QWORD PTR [rsp+0x58]
   14001a8a0:	add    rsp,0x20
   14001a8a4:	pop    r14
   14001a8a6:	pop    r13
   14001a8a8:	pop    r12
   14001a8aa:	ret    
   14001a8ab:	int3   
   14001a8ac:	mov    QWORD PTR [rsp+0x18],rbx
   14001a8b1:	mov    QWORD PTR [rsp+0x20],rsi
   14001a8b6:	push   rdi
   14001a8b7:	sub    rsp,0x30
   14001a8bb:	cmp    DWORD PTR [rip+0x1d6ce],0x0        # 0x140037f90
   14001a8c2:	jne    0x14001a8c9
   14001a8c4:	call   0x140010200
   14001a8c9:	lea    rdi,[rip+0x1bce0]        # 0x1400365b0
   14001a8d0:	mov    r8d,0x104
   14001a8d6:	xor    ecx,ecx
   14001a8d8:	mov    rdx,rdi
   14001a8db:	mov    BYTE PTR [rip+0x1bdd2],0x0        # 0x1400366b4
   14001a8e2:	call   QWORD PTR [rip+0xc840]        # 0x140027128
   14001a8e8:	mov    rbx,QWORD PTR [rip+0x1d681]        # 0x140037f70
   14001a8ef:	mov    QWORD PTR [rip+0x1b032],rdi        # 0x140035928
   14001a8f6:	test   rbx,rbx
   14001a8f9:	je     0x14001a900
   14001a8fb:	cmp    BYTE PTR [rbx],0x0
   14001a8fe:	jne    0x14001a903
   14001a900:	mov    rbx,rdi
   14001a903:	lea    rax,[rsp+0x48]
   14001a908:	lea    r9,[rsp+0x40]
   14001a90d:	xor    r8d,r8d
   14001a910:	xor    edx,edx
   14001a912:	mov    rcx,rbx
   14001a915:	mov    QWORD PTR [rsp+0x20],rax
   14001a91a:	call   0x14001a6dc
   14001a91f:	movsxd rsi,DWORD PTR [rsp+0x40]
   14001a924:	movabs rcx,0x1fffffffffffffff
   14001a92e:	cmp    rsi,rcx
   14001a931:	jae    0x14001a98f
   14001a933:	movsxd rcx,DWORD PTR [rsp+0x48]
   14001a938:	cmp    rcx,0xffffffffffffffff
   14001a93c:	jae    0x14001a98f
   14001a93e:	lea    rdx,[rcx+rsi*8]
   14001a942:	cmp    rdx,rcx
   14001a945:	jb     0x14001a98f
   14001a947:	mov    rcx,rdx
   14001a94a:	call   0x140012c00
   14001a94f:	mov    rdi,rax
   14001a952:	test   rax,rax
   14001a955:	je     0x14001a98f
   14001a957:	lea    r8,[rax+rsi*8]
   14001a95b:	lea    rax,[rsp+0x48]
   14001a960:	lea    r9,[rsp+0x40]
   14001a965:	mov    rdx,rdi
   14001a968:	mov    rcx,rbx
   14001a96b:	mov    QWORD PTR [rsp+0x20],rax
   14001a970:	call   0x14001a6dc
   14001a975:	mov    r11d,DWORD PTR [rsp+0x40]
   14001a97a:	mov    QWORD PTR [rip+0x1af77],rdi        # 0x1400358f8
   14001a981:	dec    r11d
   14001a984:	xor    eax,eax
   14001a986:	mov    DWORD PTR [rip+0x1af67],r11d        # 0x1400358f4
   14001a98d:	jmp    0x14001a992
   14001a98f:	or     eax,0xffffffff
   14001a992:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a997:	mov    rsi,QWORD PTR [rsp+0x58]
   14001a99c:	add    rsp,0x30
   14001a9a0:	pop    rdi
   14001a9a1:	ret    
   14001a9a2:	int3   
   14001a9a3:	int3   
   14001a9a4:	mov    rax,rsp
   14001a9a7:	mov    QWORD PTR [rax+0x8],rbx
   14001a9ab:	mov    QWORD PTR [rax+0x10],rbp
   14001a9af:	mov    QWORD PTR [rax+0x18],rsi
   14001a9b3:	mov    QWORD PTR [rax+0x20],rdi
   14001a9b7:	push   r12
   14001a9b9:	sub    rsp,0x40
   14001a9bd:	mov    ecx,DWORD PTR [rip+0x1bcf5]        # 0x1400366b8
   14001a9c3:	xor    r12d,r12d
   14001a9c6:	mov    rbx,r12
   14001a9c9:	lea    esi,[r12+0x2]
   14001a9ce:	cmp    ecx,r12d
   14001a9d1:	jne    0x14001aa05
   14001a9d3:	call   QWORD PTR [rip+0xc80f]        # 0x1400271e8
   14001a9d9:	mov    rbx,rax
   14001a9dc:	cmp    rax,r12
   14001a9df:	je     0x14001a9ed
   14001a9e1:	mov    DWORD PTR [rip+0x1bccd],0x1        # 0x1400366b8
   14001a9eb:	jmp    0x14001aa0e
   14001a9ed:	call   QWORD PTR [rip+0xc87d]        # 0x140027270
   14001a9f3:	mov    ecx,DWORD PTR [rip+0x1bcbf]        # 0x1400366b8
   14001a9f9:	cmp    eax,0x78
   14001a9fc:	cmove  ecx,esi
   14001a9ff:	mov    DWORD PTR [rip+0x1bcb3],ecx        # 0x1400366b8
   14001aa05:	cmp    ecx,0x1
   14001aa08:	jne    0x14001aac8
   14001aa0e:	cmp    rbx,r12
   14001aa11:	jne    0x14001aa28
   14001aa13:	call   QWORD PTR [rip+0xc7cf]        # 0x1400271e8
   14001aa19:	mov    rbx,rax
   14001aa1c:	cmp    rax,r12
   14001aa1f:	jne    0x14001aa28
   14001aa21:	xor    eax,eax
   14001aa23:	jmp    0x14001ab3b
   14001aa28:	mov    rdi,rbx
   14001aa2b:	cmp    WORD PTR [rbx],r12w
   14001aa2f:	je     0x14001aa43
   14001aa31:	add    rdi,rsi
   14001aa34:	cmp    WORD PTR [rdi],r12w
   14001aa38:	jne    0x14001aa31
   14001aa3a:	add    rdi,rsi
   14001aa3d:	cmp    WORD PTR [rdi],r12w
   14001aa41:	jne    0x14001aa31
   14001aa43:	mov    QWORD PTR [rsp+0x38],r12
   14001aa48:	mov    QWORD PTR [rsp+0x30],r12
   14001aa4d:	sub    rdi,rbx
   14001aa50:	sar    rdi,1
   14001aa53:	mov    r8,rbx
   14001aa56:	xor    edx,edx
   14001aa58:	lea    r9d,[rdi+0x1]
   14001aa5c:	xor    ecx,ecx
   14001aa5e:	mov    DWORD PTR [rsp+0x28],r12d
   14001aa63:	mov    QWORD PTR [rsp+0x20],r12
   14001aa68:	call   QWORD PTR [rip+0xc942]        # 0x1400273b0
   14001aa6e:	movsxd rbp,eax
   14001aa71:	cmp    ebp,r12d
   14001aa74:	je     0x14001aab7
   14001aa76:	mov    rcx,rbp
   14001aa79:	call   0x140012c00
   14001aa7e:	mov    rsi,rax
   14001aa81:	cmp    rax,r12
   14001aa84:	je     0x14001aab7
   14001aa86:	mov    QWORD PTR [rsp+0x38],r12
   14001aa8b:	mov    QWORD PTR [rsp+0x30],r12
   14001aa90:	lea    r9d,[rdi+0x1]
   14001aa94:	mov    r8,rbx
   14001aa97:	xor    edx,edx
   14001aa99:	xor    ecx,ecx
   14001aa9b:	mov    DWORD PTR [rsp+0x28],ebp
   14001aa9f:	mov    QWORD PTR [rsp+0x20],rax
   14001aaa4:	call   QWORD PTR [rip+0xc906]        # 0x1400273b0
   14001aaaa:	cmp    eax,r12d
   14001aaad:	jne    0x14001aaba
   14001aaaf:	mov    rcx,rsi
   14001aab2:	call   0x1400098ac
   14001aab7:	mov    rsi,r12
   14001aaba:	mov    rcx,rbx
   14001aabd:	call   QWORD PTR [rip+0xc72d]        # 0x1400271f0
   14001aac3:	mov    rax,rsi
   14001aac6:	jmp    0x14001ab3b
   14001aac8:	cmp    ecx,esi
   14001aaca:	je     0x14001aad5
   14001aacc:	cmp    ecx,r12d
   14001aacf:	jne    0x14001aa21
   14001aad5:	call   QWORD PTR [rip+0xc71d]        # 0x1400271f8
   14001aadb:	mov    rbx,rax
   14001aade:	cmp    rax,r12
   14001aae1:	je     0x14001aa21
   14001aae7:	cmp    BYTE PTR [rax],r12b
   14001aaea:	je     0x14001aafc
   14001aaec:	inc    rax
   14001aaef:	cmp    BYTE PTR [rax],r12b
   14001aaf2:	jne    0x14001aaec
   14001aaf4:	inc    rax
   14001aaf7:	cmp    BYTE PTR [rax],r12b
   14001aafa:	jne    0x14001aaec
   14001aafc:	sub    eax,ebx
   14001aafe:	inc    eax
   14001ab00:	movsxd rsi,eax
   14001ab03:	mov    rcx,rsi
   14001ab06:	call   0x140012c00
   14001ab0b:	mov    rdi,rax
   14001ab0e:	cmp    rax,r12
   14001ab11:	jne    0x14001ab21
   14001ab13:	mov    rcx,rbx
   14001ab16:	call   QWORD PTR [rip+0xc6e4]        # 0x140027200
   14001ab1c:	jmp    0x14001aa21
   14001ab21:	mov    r8,rsi
   14001ab24:	mov    rdx,rbx
   14001ab27:	mov    rcx,rax
   14001ab2a:	call   0x140008b00
   14001ab2f:	mov    rcx,rbx
   14001ab32:	call   QWORD PTR [rip+0xc6c8]        # 0x140027200
   14001ab38:	mov    rax,rdi
   14001ab3b:	mov    rbx,QWORD PTR [rsp+0x50]
   14001ab40:	mov    rbp,QWORD PTR [rsp+0x58]
   14001ab45:	mov    rsi,QWORD PTR [rsp+0x60]
   14001ab4a:	mov    rdi,QWORD PTR [rsp+0x68]
   14001ab4f:	add    rsp,0x40
   14001ab53:	pop    r12
   14001ab55:	ret    
   14001ab56:	int3   
   14001ab57:	int3   
   14001ab58:	mov    QWORD PTR [rsp+0x18],rbx
   14001ab5d:	push   rdi
   14001ab5e:	sub    rsp,0x20
   14001ab62:	mov    rax,QWORD PTR [rip+0x19737]        # 0x1400342a0
   14001ab69:	and    QWORD PTR [rsp+0x30],0x0
   14001ab6f:	movabs rdi,0x2b992ddfa232
   14001ab79:	cmp    rax,rdi
   14001ab7c:	je     0x14001ab8a
   14001ab7e:	not    rax
   14001ab81:	mov    QWORD PTR [rip+0x19720],rax        # 0x1400342a8
   14001ab88:	jmp    0x14001ac00
   14001ab8a:	lea    rcx,[rsp+0x30]
   14001ab8f:	call   QWORD PTR [rip+0xc753]        # 0x1400272e8
   14001ab95:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ab9a:	call   QWORD PTR [rip+0xc630]        # 0x1400271d0
   14001aba0:	mov    r11d,eax
   14001aba3:	xor    rbx,r11
   14001aba6:	call   QWORD PTR [rip+0xc864]        # 0x140027410
   14001abac:	mov    r11d,eax
   14001abaf:	xor    rbx,r11
   14001abb2:	call   QWORD PTR [rip+0xc620]        # 0x1400271d8
   14001abb8:	lea    rcx,[rsp+0x38]
   14001abbd:	mov    r11d,eax
   14001abc0:	xor    rbx,r11
   14001abc3:	call   QWORD PTR [rip+0xc617]        # 0x1400271e0
   14001abc9:	mov    r11,QWORD PTR [rsp+0x38]
   14001abce:	xor    r11,rbx
   14001abd1:	movabs rax,0xffffffffffff
   14001abdb:	and    r11,rax
   14001abde:	movabs rax,0x2b992ddfa233
   14001abe8:	cmp    r11,rdi
   14001abeb:	cmove  r11,rax
   14001abef:	mov    QWORD PTR [rip+0x196aa],r11        # 0x1400342a0
   14001abf6:	not    r11
   14001abf9:	mov    QWORD PTR [rip+0x196a8],r11        # 0x1400342a8
   14001ac00:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ac05:	add    rsp,0x20
   14001ac09:	pop    rdi
   14001ac0a:	ret    
   14001ac0b:	int3   
   14001ac0c:	and    DWORD PTR [rip+0x1d135],0x0        # 0x140037d48
   14001ac13:	ret    
   14001ac14:	xor    edx,edx
   14001ac16:	lea    r8d,[rdx+0xa]
   14001ac1a:	jmp    0x1400097fc
   14001ac1f:	int3   
   14001ac20:	mov    r9,rdx
   14001ac23:	xor    edx,edx
   14001ac25:	lea    r8d,[rdx+0xa]
   14001ac29:	jmp    0x14000982c
   14001ac2e:	int3   
   14001ac2f:	int3   
   14001ac30:	xor    edx,edx
   14001ac32:	lea    r8d,[rdx+0xa]
   14001ac36:	jmp    0x1400097fc
   14001ac3b:	int3   
   14001ac3c:	mov    r9,rdx
   14001ac3f:	xor    edx,edx
   14001ac41:	lea    r8d,[rdx+0xa]
   14001ac45:	jmp    0x14000982c
   14001ac4a:	int3   
   14001ac4b:	int3   
   14001ac4c:	xor    edx,edx
   14001ac4e:	lea    r8d,[rdx+0xa]
   14001ac52:	jmp    0x140023c70
   14001ac57:	int3   
   14001ac58:	mov    r9,rdx
   14001ac5b:	xor    edx,edx
   14001ac5d:	lea    r8d,[rdx+0xa]
   14001ac61:	jmp    0x140023ca0
   14001ac66:	int3   
   14001ac67:	int3   
   14001ac68:	rex push rbx
   14001ac6a:	sub    rsp,0x30
   14001ac6e:	mov    r11,r8
   14001ac71:	test   r9,r9
   14001ac74:	jne    0x14001ac84
   14001ac76:	test   rcx,rcx
   14001ac79:	jne    0x14001ac89
   14001ac7b:	test   rdx,rdx
   14001ac7e:	jne    0x14001aca0
   14001ac80:	xor    eax,eax
   14001ac82:	jmp    0x14001acc3
   14001ac84:	test   rcx,rcx
   14001ac87:	je     0x14001aca0
   14001ac89:	test   rdx,rdx
   14001ac8c:	je     0x14001aca0
   14001ac8e:	test   r9,r9
   14001ac91:	jne    0x14001ac98
   14001ac93:	mov    BYTE PTR [rcx],r9b
   14001ac96:	jmp    0x14001ac80
   14001ac98:	test   r8,r8
   14001ac9b:	jne    0x14001acc9
   14001ac9d:	mov    BYTE PTR [rcx],r8b
   14001aca0:	call   0x14000f574
   14001aca5:	mov    ebx,0x16
   14001acaa:	and    QWORD PTR [rsp+0x20],0x0
   14001acb0:	xor    r9d,r9d
   14001acb3:	xor    r8d,r8d
   14001acb6:	xor    edx,edx
   14001acb8:	xor    ecx,ecx
   14001acba:	mov    DWORD PTR [rax],ebx
   14001acbc:	call   0x14000e4d8
   14001acc1:	mov    eax,ebx
   14001acc3:	add    rsp,0x30
   14001acc7:	pop    rbx
   14001acc8:	ret    
   14001acc9:	mov    r10,rcx
   14001accc:	mov    r8,rdx
   14001accf:	cmp    r9,0xffffffffffffffff
   14001acd3:	jne    0x14001aced
   14001acd5:	mov    al,BYTE PTR [r11]
   14001acd8:	inc    r11
   14001acdb:	mov    BYTE PTR [r10],al
   14001acde:	inc    r10
   14001ace1:	test   al,al
   14001ace3:	je     0x14001ad11
   14001ace5:	sub    r8,0x1
   14001ace9:	jne    0x14001acd5
   14001aceb:	jmp    0x14001ad11
   14001aced:	mov    al,BYTE PTR [r11]
   14001acf0:	inc    r11
   14001acf3:	mov    BYTE PTR [r10],al
   14001acf6:	inc    r10
   14001acf9:	test   al,al
   14001acfb:	je     0x14001ad09
   14001acfd:	sub    r8,0x1
   14001ad01:	je     0x14001ad09
   14001ad03:	sub    r9,0x1
   14001ad07:	jne    0x14001aced
   14001ad09:	test   r9,r9
   14001ad0c:	jne    0x14001ad11
   14001ad0e:	mov    BYTE PTR [r10],r9b
   14001ad11:	test   r8,r8
   14001ad14:	jne    0x14001ac80
   14001ad1a:	cmp    r9,0xffffffffffffffff
   14001ad1e:	jne    0x14001ad2b
   14001ad20:	mov    BYTE PTR [rcx+rdx*1-0x1],r8b
   14001ad25:	lea    eax,[r8+0x50]
   14001ad29:	jmp    0x14001acc3
   14001ad2b:	mov    BYTE PTR [rcx],0x0
   14001ad2e:	call   0x14000f574
   14001ad33:	mov    ebx,0x22
   14001ad38:	jmp    0x14001acaa
   14001ad3d:	int3   
   14001ad3e:	int3   
   14001ad3f:	int3   
   14001ad40:	int3   
   14001ad41:	int3   
   14001ad42:	int3   
   14001ad43:	int3   
   14001ad44:	int3   
   14001ad45:	int3   
   14001ad46:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ad50:	sub    rdx,rcx
   14001ad53:	mov    r9,rdx
   14001ad56:	test   cl,0x7
   14001ad59:	je     0x14001ad76
   14001ad5b:	mov    al,BYTE PTR [rcx]
   14001ad5d:	mov    dl,BYTE PTR [rcx+r9*1]
   14001ad61:	cmp    al,dl
   14001ad63:	jne    0x14001adbb
   14001ad65:	inc    rcx
   14001ad68:	test   al,al
   14001ad6a:	je     0x14001adc3
   14001ad6c:	test   rcx,0x7
   14001ad73:	jne    0x14001ad5b
   14001ad75:	nop
   14001ad76:	movabs r11,0x8101010101010100
   14001ad80:	lea    rdx,[rcx+r9*1]
   14001ad84:	and    dx,0xfff
   14001ad89:	cmp    dx,0xff8
   14001ad8e:	ja     0x14001ad5b
   14001ad90:	mov    rax,QWORD PTR [rcx]
   14001ad93:	mov    rdx,QWORD PTR [rcx+r9*1]
   14001ad97:	cmp    rax,rdx
   14001ad9a:	jne    0x14001ad5b
   14001ad9c:	movabs r10,0x7efefefefefefeff
   14001ada6:	add    r10,rdx
   14001ada9:	xor    rax,0xffffffffffffffff
   14001adad:	add    rcx,0x8
   14001adb1:	xor    rax,r10
   14001adb4:	test   r11,rax
   14001adb7:	je     0x14001ad80
   14001adb9:	jmp    0x14001adca
   14001adbb:	sbb    rax,rax
   14001adbe:	sbb    rax,0xffffffffffffffff
   14001adc2:	ret    
   14001adc3:	xor    eax,eax
   14001adc5:	ret    
   14001adc6:	data16 data16 xchg ax,ax
   14001adca:	test   dl,dl
   14001adcc:	je     0x14001adf5
   14001adce:	test   dh,dh
   14001add0:	je     0x14001adf5
   14001add2:	shr    rdx,0x10
   14001add6:	test   dl,dl
   14001add8:	je     0x14001adf5
   14001adda:	test   dh,dh
   14001addc:	je     0x14001adf5
   14001adde:	shr    rdx,0x10
   14001ade2:	test   dl,dl
   14001ade4:	je     0x14001adf5
   14001ade6:	test   dh,dh
   14001ade8:	je     0x14001adf5
   14001adea:	shr    edx,0x10
   14001aded:	test   dl,dl
   14001adef:	je     0x14001adf5
   14001adf1:	test   dh,dh
   14001adf3:	jne    0x14001ad80
   14001adf5:	xor    eax,eax
   14001adf7:	ret    
   14001adf8:	sbb    rax,rax
   14001adfb:	sbb    rax,0xffffffffffffffff
   14001adff:	ret    
   14001ae00:	mov    QWORD PTR [rsp+0x8],rbx
   14001ae05:	mov    QWORD PTR [rsp+0x10],rsi
   14001ae0a:	push   rdi
   14001ae0b:	sub    rsp,0x20
   14001ae0f:	cmp    DWORD PTR [rip+0x1d162],0x0        # 0x140037f78
   14001ae16:	mov    rbx,QWORD PTR [rip+0x1aaeb]        # 0x140035908
   14001ae1d:	mov    rsi,rcx
   14001ae20:	je     0x14001ae8f
   14001ae22:	test   rbx,rbx
   14001ae25:	jne    0x14001ae45
   14001ae27:	cmp    QWORD PTR [rip+0x1aaea],rbx        # 0x140035918
   14001ae2e:	je     0x14001ae8f
   14001ae30:	call   0x14001e8d4
   14001ae35:	test   eax,eax
   14001ae37:	jne    0x14001ae8f
   14001ae39:	mov    rbx,QWORD PTR [rip+0x1aac8]        # 0x140035908
   14001ae40:	test   rbx,rbx
   14001ae43:	je     0x14001ae8f
   14001ae45:	test   rsi,rsi
   14001ae48:	je     0x14001ae8f
   14001ae4a:	mov    rcx,rsi
   14001ae4d:	call   0x140012e10
   14001ae52:	mov    rdi,rax
   14001ae55:	mov    rcx,QWORD PTR [rbx]
   14001ae58:	test   rcx,rcx
   14001ae5b:	je     0x14001ae8f
   14001ae5d:	call   0x140012e10
   14001ae62:	cmp    rax,rdi
   14001ae65:	jbe    0x14001ae7f
   14001ae67:	mov    rcx,QWORD PTR [rbx]
   14001ae6a:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   14001ae6e:	jne    0x14001ae7f
   14001ae70:	mov    r8,rdi
   14001ae73:	mov    rdx,rsi
   14001ae76:	call   0x14001e85c
   14001ae7b:	test   eax,eax
   14001ae7d:	je     0x14001ae85
   14001ae7f:	add    rbx,0x8
   14001ae83:	jmp    0x14001ae55
   14001ae85:	mov    rax,QWORD PTR [rbx]
   14001ae88:	lea    rax,[rax+rdi*1+0x1]
   14001ae8d:	jmp    0x14001ae91
   14001ae8f:	xor    eax,eax
   14001ae91:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ae96:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ae9b:	add    rsp,0x20
   14001ae9f:	pop    rdi
   14001aea0:	ret    
   14001aea1:	int3   
   14001aea2:	int3   
   14001aea3:	int3   
   14001aea4:	mov    QWORD PTR [rsp+0x8],rbx
   14001aea9:	mov    QWORD PTR [rsp+0x10],rbp
   14001aeae:	mov    QWORD PTR [rsp+0x18],rsi
   14001aeb3:	push   rdi
   14001aeb4:	sub    rsp,0x30
   14001aeb8:	mov    rbx,r8
   14001aebb:	mov    rdi,rdx
   14001aebe:	mov    rbp,rcx
   14001aec1:	test   rcx,rcx
   14001aec4:	jne    0x14001aeeb
   14001aec6:	call   0x14000f574
   14001aecb:	and    QWORD PTR [rsp+0x20],0x0
   14001aed1:	mov    ebx,0x16
   14001aed6:	xor    r9d,r9d
   14001aed9:	xor    r8d,r8d
   14001aedc:	xor    edx,edx
   14001aede:	xor    ecx,ecx
   14001aee0:	mov    DWORD PTR [rax],ebx
   14001aee2:	call   0x14000e4d8
   14001aee7:	mov    eax,ebx
   14001aee9:	jmp    0x14001af61
   14001aeeb:	and    QWORD PTR [rcx],0x0
   14001aeef:	test   rdx,rdx
   14001aef2:	je     0x14001aefb
   14001aef4:	test   rbx,rbx
   14001aef7:	jne    0x14001af00
   14001aef9:	jmp    0x14001aec6
   14001aefb:	test   rbx,rbx
   14001aefe:	jne    0x14001aec6
   14001af00:	test   rdx,rdx
   14001af03:	je     0x14001af08
   14001af05:	mov    BYTE PTR [rdx],0x0
   14001af08:	mov    rcx,r9
   14001af0b:	call   0x14001ae00
   14001af10:	mov    rsi,rax
   14001af13:	test   rax,rax
   14001af16:	je     0x14001af5f
   14001af18:	mov    rcx,rax
   14001af1b:	call   0x140012e10
   14001af20:	inc    rax
   14001af23:	mov    QWORD PTR [rbp+0x0],rax
   14001af27:	test   rbx,rbx
   14001af2a:	je     0x14001af5f
   14001af2c:	cmp    rax,rbx
   14001af2f:	jbe    0x14001af38
   14001af31:	mov    eax,0x22
   14001af36:	jmp    0x14001af61
   14001af38:	mov    r8,rsi
   14001af3b:	mov    rdx,rbx
   14001af3e:	mov    rcx,rdi
   14001af41:	call   0x140012b54
   14001af46:	test   eax,eax
   14001af48:	je     0x14001af5f
   14001af4a:	and    QWORD PTR [rsp+0x20],0x0
   14001af50:	xor    r9d,r9d
   14001af53:	xor    r8d,r8d
   14001af56:	xor    edx,edx
   14001af58:	xor    ecx,ecx
   14001af5a:	call   0x14000e350
   14001af5f:	xor    eax,eax
   14001af61:	mov    rbx,QWORD PTR [rsp+0x40]
   14001af66:	mov    rbp,QWORD PTR [rsp+0x48]
   14001af6b:	mov    rsi,QWORD PTR [rsp+0x50]
   14001af70:	add    rsp,0x30
   14001af74:	pop    rdi
   14001af75:	ret    
   14001af76:	int3   
   14001af77:	int3   
   14001af78:	mov    QWORD PTR [rsp+0x8],rbx
   14001af7d:	mov    QWORD PTR [rsp+0x10],rbp
   14001af82:	mov    QWORD PTR [rsp+0x18],rsi
   14001af87:	push   rdi
   14001af88:	sub    rsp,0x30
   14001af8c:	mov    rbx,rdx
   14001af8f:	mov    rdi,rcx
   14001af92:	test   rcx,rcx
   14001af95:	jne    0x14001afbf
   14001af97:	call   0x14000f574
   14001af9c:	and    QWORD PTR [rsp+0x20],0x0
   14001afa2:	mov    ebx,0x16
   14001afa7:	xor    r9d,r9d
   14001afaa:	xor    r8d,r8d
   14001afad:	xor    edx,edx
   14001afaf:	xor    ecx,ecx
   14001afb1:	mov    DWORD PTR [rax],ebx
   14001afb3:	call   0x14000e4d8
   14001afb8:	mov    eax,ebx
   14001afba:	jmp    0x14001b047
   14001afbf:	and    QWORD PTR [rcx],0x0
   14001afc3:	test   rdx,rdx
   14001afc6:	je     0x14001afcc
   14001afc8:	and    QWORD PTR [rdx],0x0
   14001afcc:	test   r8,r8
   14001afcf:	je     0x14001af97
   14001afd1:	mov    rcx,r8
   14001afd4:	call   0x14001ae00
   14001afd9:	mov    rsi,rax
   14001afdc:	test   rax,rax
   14001afdf:	je     0x14001b045
   14001afe1:	mov    rcx,rax
   14001afe4:	call   0x140012e10
   14001afe9:	mov    edx,0x1
   14001afee:	lea    rbp,[rdx+rax*1]
   14001aff2:	mov    rcx,rbp
   14001aff5:	call   0x140023d20
   14001affa:	mov    QWORD PTR [rdi],rax
   14001affd:	test   rax,rax
   14001b000:	jne    0x14001b016
   14001b002:	call   0x14000f574
   14001b007:	mov    DWORD PTR [rax],0xc
   14001b00d:	call   0x14000f574
   14001b012:	mov    eax,DWORD PTR [rax]
   14001b014:	jmp    0x14001b047
   14001b016:	mov    r8,rsi
   14001b019:	mov    rdx,rbp
   14001b01c:	mov    rcx,rax
   14001b01f:	call   0x140012b54
   14001b024:	test   eax,eax
   14001b026:	je     0x14001b03d
   14001b028:	and    QWORD PTR [rsp+0x20],0x0
   14001b02e:	xor    r9d,r9d
   14001b031:	xor    r8d,r8d
   14001b034:	xor    edx,edx
   14001b036:	xor    ecx,ecx
   14001b038:	call   0x14000e350
   14001b03d:	test   rbx,rbx
   14001b040:	je     0x14001b045
   14001b042:	mov    QWORD PTR [rbx],rbp
   14001b045:	xor    eax,eax
   14001b047:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b04c:	mov    rbp,QWORD PTR [rsp+0x48]
   14001b051:	mov    rsi,QWORD PTR [rsp+0x50]
   14001b056:	add    rsp,0x30
   14001b05a:	pop    rdi
   14001b05b:	ret    
   14001b05c:	rex push rbx
   14001b05e:	sub    rsp,0x30
   14001b062:	mov    rbx,rcx
   14001b065:	xor    eax,eax
   14001b067:	test   rcx,rcx
   14001b06a:	setne  al
   14001b06d:	test   eax,eax
   14001b06f:	jne    0x14001b095
   14001b071:	call   0x14000f574
   14001b076:	mov    DWORD PTR [rax],0x16
   14001b07c:	and    QWORD PTR [rsp+0x20],0x0
   14001b082:	xor    r9d,r9d
   14001b085:	xor    r8d,r8d
   14001b088:	xor    edx,edx
   14001b08a:	xor    ecx,ecx
   14001b08c:	call   0x14000e4d8
   14001b091:	xor    eax,eax
   14001b093:	jmp    0x14001b0f5
   14001b095:	mov    edx,0x7fff
   14001b09a:	call   0x140012eb8
   14001b09f:	xor    ecx,ecx
   14001b0a1:	cmp    rax,0x7fff
   14001b0a7:	setb   cl
   14001b0aa:	test   ecx,ecx
   14001b0ac:	jne    0x14001b0d2
   14001b0ae:	call   0x14000f574
   14001b0b3:	mov    DWORD PTR [rax],0x16
   14001b0b9:	and    QWORD PTR [rsp+0x20],0x0
   14001b0bf:	xor    r9d,r9d
   14001b0c2:	xor    r8d,r8d
   14001b0c5:	xor    edx,edx
   14001b0c7:	xor    ecx,ecx
   14001b0c9:	call   0x14000e4d8
   14001b0ce:	xor    eax,eax
   14001b0d0:	jmp    0x14001b0f5
   14001b0d2:	mov    ecx,0x7
   14001b0d7:	call   0x1400133a8
   14001b0dc:	nop
   14001b0dd:	mov    rcx,rbx
   14001b0e0:	call   0x14001ae00
   14001b0e5:	mov    rbx,rax
   14001b0e8:	mov    ecx,0x7
   14001b0ed:	call   0x140013288
   14001b0f2:	mov    rax,rbx
   14001b0f5:	add    rsp,0x30
   14001b0f9:	pop    rbx
   14001b0fa:	ret    
   14001b0fb:	int3   
   14001b0fc:	mov    QWORD PTR [rsp+0x8],rbx
   14001b101:	mov    QWORD PTR [rsp+0x10],rsi
   14001b106:	mov    QWORD PTR [rsp+0x18],rdi
   14001b10b:	push   r12
   14001b10d:	sub    rsp,0x30
   14001b111:	mov    rsi,r9
   14001b114:	mov    rdi,r8
   14001b117:	mov    rbx,rdx
   14001b11a:	mov    r12,rcx
   14001b11d:	mov    ecx,0x7
   14001b122:	call   0x1400133a8
   14001b127:	nop
   14001b128:	xor    eax,eax
   14001b12a:	test   r12,r12
   14001b12d:	setne  al
   14001b130:	test   eax,eax
   14001b132:	jne    0x14001b15a
   14001b134:	call   0x14000f574
   14001b139:	mov    ebx,0x16
   14001b13e:	mov    DWORD PTR [rax],ebx
   14001b140:	and    QWORD PTR [rsp+0x20],0x0
   14001b146:	xor    r9d,r9d
   14001b149:	xor    r8d,r8d
   14001b14c:	xor    edx,edx
   14001b14e:	xor    ecx,ecx
   14001b150:	call   0x14000e4d8
   14001b155:	jmp    0x14001b20c
   14001b15a:	and    QWORD PTR [r12],0x0
   14001b15f:	test   rbx,rbx
   14001b162:	je     0x14001b169
   14001b164:	test   rdi,rdi
   14001b167:	jne    0x14001b173
   14001b169:	test   rbx,rbx
   14001b16c:	jne    0x14001b17a
   14001b16e:	test   rdi,rdi
   14001b171:	jne    0x14001b17a
   14001b173:	mov    eax,0x1
   14001b178:	jmp    0x14001b17c
   14001b17a:	xor    eax,eax
   14001b17c:	test   eax,eax
   14001b17e:	jne    0x14001b1a3
   14001b180:	call   0x14000f574
   14001b185:	mov    ebx,0x16
   14001b18a:	mov    DWORD PTR [rax],ebx
   14001b18c:	and    QWORD PTR [rsp+0x20],0x0
   14001b192:	xor    r9d,r9d
   14001b195:	xor    r8d,r8d
   14001b198:	xor    edx,edx
   14001b19a:	xor    ecx,ecx
   14001b19c:	call   0x14000e4d8
   14001b1a1:	jmp    0x14001b20c
   14001b1a3:	test   rbx,rbx
   14001b1a6:	je     0x14001b1ab
   14001b1a8:	mov    BYTE PTR [rbx],0x0
   14001b1ab:	mov    rcx,rsi
   14001b1ae:	call   0x14001ae00
   14001b1b3:	mov    rsi,rax
   14001b1b6:	test   rax,rax
   14001b1b9:	jne    0x14001b1bf
   14001b1bb:	xor    ebx,ebx
   14001b1bd:	jmp    0x14001b20c
   14001b1bf:	mov    rcx,rax
   14001b1c2:	call   0x140012e10
   14001b1c7:	inc    rax
   14001b1ca:	mov    QWORD PTR [r12],rax
   14001b1ce:	test   rdi,rdi
   14001b1d1:	jne    0x14001b1d7
   14001b1d3:	xor    ebx,ebx
   14001b1d5:	jmp    0x14001b20c
   14001b1d7:	cmp    rax,rdi
   14001b1da:	jbe    0x14001b1e3
   14001b1dc:	mov    ebx,0x22
   14001b1e1:	jmp    0x14001b20c
   14001b1e3:	mov    r8,rsi
   14001b1e6:	mov    rdx,rdi
   14001b1e9:	mov    rcx,rbx
   14001b1ec:	call   0x140012b54
   14001b1f1:	test   eax,eax
   14001b1f3:	je     0x14001b20a
   14001b1f5:	and    QWORD PTR [rsp+0x20],0x0
   14001b1fb:	xor    r9d,r9d
   14001b1fe:	xor    r8d,r8d
   14001b201:	xor    edx,edx
   14001b203:	xor    ecx,ecx
   14001b205:	call   0x14000e350
   14001b20a:	xor    ebx,ebx
   14001b20c:	mov    ecx,0x7
   14001b211:	call   0x140013288
   14001b216:	mov    eax,ebx
   14001b218:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b21d:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b222:	mov    rdi,QWORD PTR [rsp+0x50]
   14001b227:	add    rsp,0x30
   14001b22b:	pop    r12
   14001b22d:	ret    
   14001b22e:	int3   
   14001b22f:	int3   
   14001b230:	mov    QWORD PTR [rsp+0x8],rbx
   14001b235:	mov    QWORD PTR [rsp+0x10],rsi
   14001b23a:	mov    QWORD PTR [rsp+0x18],rdi
   14001b23f:	push   r12
   14001b241:	sub    rsp,0x30
   14001b245:	mov    rsi,r8
   14001b248:	mov    rbx,rdx
   14001b24b:	mov    rdi,rcx
   14001b24e:	mov    ecx,0x7
   14001b253:	call   0x1400133a8
   14001b258:	nop
   14001b259:	xor    eax,eax
   14001b25b:	test   rdi,rdi
   14001b25e:	setne  al
   14001b261:	test   eax,eax
   14001b263:	jne    0x14001b28b
   14001b265:	call   0x14000f574
   14001b26a:	mov    ebx,0x16
   14001b26f:	mov    DWORD PTR [rax],ebx
   14001b271:	and    QWORD PTR [rsp+0x20],0x0
   14001b277:	xor    r9d,r9d
   14001b27a:	xor    r8d,r8d
   14001b27d:	xor    edx,edx
   14001b27f:	xor    ecx,ecx
   14001b281:	call   0x14000e4d8
   14001b286:	jmp    0x14001b341
   14001b28b:	and    QWORD PTR [rdi],0x0
   14001b28f:	test   rbx,rbx
   14001b292:	je     0x14001b298
   14001b294:	and    QWORD PTR [rbx],0x0
   14001b298:	xor    eax,eax
   14001b29a:	test   rsi,rsi
   14001b29d:	setne  al
   14001b2a0:	test   eax,eax
   14001b2a2:	jne    0x14001b2c7
   14001b2a4:	call   0x14000f574
   14001b2a9:	mov    ebx,0x16
   14001b2ae:	mov    DWORD PTR [rax],ebx
   14001b2b0:	and    QWORD PTR [rsp+0x20],0x0
   14001b2b6:	xor    r9d,r9d
   14001b2b9:	xor    r8d,r8d
   14001b2bc:	xor    edx,edx
   14001b2be:	xor    ecx,ecx
   14001b2c0:	call   0x14000e4d8
   14001b2c5:	jmp    0x14001b341
   14001b2c7:	mov    rcx,rsi
   14001b2ca:	call   0x14001ae00
   14001b2cf:	mov    rsi,rax
   14001b2d2:	test   rax,rax
   14001b2d5:	jne    0x14001b2db
   14001b2d7:	xor    ebx,ebx
   14001b2d9:	jmp    0x14001b341
   14001b2db:	mov    rcx,rax
   14001b2de:	call   0x140012e10
   14001b2e3:	mov    edx,0x1
   14001b2e8:	lea    r12,[rdx+rax*1]
   14001b2ec:	mov    rcx,r12
   14001b2ef:	call   0x140023d20
   14001b2f4:	mov    QWORD PTR [rdi],rax
   14001b2f7:	test   rax,rax
   14001b2fa:	jne    0x14001b310
   14001b2fc:	call   0x14000f574
   14001b301:	mov    DWORD PTR [rax],0xc
   14001b307:	call   0x14000f574
   14001b30c:	mov    ebx,DWORD PTR [rax]
   14001b30e:	jmp    0x14001b341
   14001b310:	mov    r8,rsi
   14001b313:	mov    rdx,r12
   14001b316:	mov    rcx,rax
   14001b319:	call   0x140012b54
   14001b31e:	test   eax,eax
   14001b320:	je     0x14001b337
   14001b322:	and    QWORD PTR [rsp+0x20],0x0
   14001b328:	xor    r9d,r9d
   14001b32b:	xor    r8d,r8d
   14001b32e:	xor    edx,edx
   14001b330:	xor    ecx,ecx
   14001b332:	call   0x14000e350
   14001b337:	test   rbx,rbx
   14001b33a:	je     0x14001b33f
   14001b33c:	mov    QWORD PTR [rbx],r12
   14001b33f:	xor    ebx,ebx
   14001b341:	mov    ecx,0x7
   14001b346:	call   0x140013288
   14001b34b:	mov    eax,ebx
   14001b34d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b352:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b357:	mov    rdi,QWORD PTR [rsp+0x50]
   14001b35c:	add    rsp,0x30
   14001b360:	pop    r12
   14001b362:	ret    
   14001b363:	int3   
   14001b364:	mov    r11,rsp
   14001b367:	mov    QWORD PTR [r11+0x10],rbx
   14001b36b:	mov    QWORD PTR [r11+0x18],rbp
   14001b36f:	mov    QWORD PTR [r11+0x20],rsi
   14001b373:	push   rdi
   14001b374:	push   r12
   14001b376:	push   r13
   14001b378:	push   r14
   14001b37a:	push   r15
   14001b37c:	sub    rsp,0x90
   14001b383:	mov    rax,QWORD PTR [rip+0x18f16]        # 0x1400342a0
   14001b38a:	xor    rax,rsp
   14001b38d:	mov    QWORD PTR [rsp+0x88],rax
   14001b395:	xor    ebx,ebx
   14001b397:	mov    rdi,rcx
   14001b39a:	mov    QWORD PTR [r11-0x58],rcx
   14001b39e:	mov    QWORD PTR [rsp+0x58],rbx
   14001b3a3:	mov    r13,rbx
   14001b3a6:	mov    r15,rbx
   14001b3a9:	mov    r14,rbx
   14001b3ac:	mov    r12,rbx
   14001b3af:	mov    QWORD PTR [r11-0x50],rbx
   14001b3b3:	cmp    DWORD PTR [rcx+0x14],ebx
   14001b3b6:	je     0x14001b700
   14001b3bc:	lea    rbp,[rcx+0x4]
   14001b3c0:	lea    esi,[rbx+0x1]
   14001b3c3:	cmp    DWORD PTR [rbp+0x0],ebx
   14001b3c6:	jne    0x14001b3eb
   14001b3c8:	movzx  r8d,WORD PTR [rcx+0x30]
   14001b3cd:	lea    rcx,[r11-0x58]
   14001b3d1:	xor    edx,edx
   14001b3d3:	mov    r9d,0x1004
   14001b3d9:	mov    QWORD PTR [rsp+0x20],rbp
   14001b3de:	call   0x14001a2c0
   14001b3e3:	cmp    eax,ebx
   14001b3e5:	jne    0x14001b6d0
   14001b3eb:	mov    ecx,0x4
   14001b3f0:	call   0x140012c00
   14001b3f5:	mov    r12d,0x180
   14001b3fb:	mov    edx,0x2
   14001b400:	mov    rcx,r12
   14001b403:	mov    QWORD PTR [rsp+0x58],rax
   14001b408:	call   0x140012c6c
   14001b40d:	mov    rdx,rsi
   14001b410:	mov    rcx,r12
   14001b413:	mov    r13,rax
   14001b416:	call   0x140012c6c
   14001b41b:	mov    rdx,rsi
   14001b41e:	mov    rcx,r12
   14001b421:	mov    r15,rax
   14001b424:	call   0x140012c6c
   14001b429:	lea    ecx,[r12-0x7f]
   14001b42e:	mov    rdx,rsi
   14001b431:	mov    r14,rax
   14001b434:	call   0x140012c6c
   14001b439:	mov    r12,rax
   14001b43c:	mov    rax,QWORD PTR [rsp+0x58]
   14001b441:	cmp    rax,rbx
   14001b444:	je     0x14001b6d0
   14001b44a:	cmp    r13,rbx
   14001b44d:	je     0x14001b6d0
   14001b453:	cmp    r12,rbx
   14001b456:	je     0x14001b6d0
   14001b45c:	cmp    r15,rbx
   14001b45f:	je     0x14001b6d0
   14001b465:	cmp    r14,rbx
   14001b468:	je     0x14001b6d0
   14001b46e:	mov    DWORD PTR [rax],ebx
   14001b470:	mov    rcx,r12
   14001b473:	mov    eax,ebx
   14001b475:	mov    BYTE PTR [rcx],al
   14001b477:	add    eax,esi
   14001b479:	add    rcx,rsi
   14001b47c:	cmp    eax,0x100
   14001b481:	jl     0x14001b475
   14001b483:	mov    ecx,DWORD PTR [rbp+0x0]
   14001b486:	lea    rdx,[rsp+0x70]
   14001b48b:	call   QWORD PTR [rip+0xbf2f]        # 0x1400273c0
   14001b491:	cmp    eax,ebx
   14001b493:	je     0x14001b6d0
   14001b499:	cmp    DWORD PTR [rsp+0x70],0x5
   14001b49e:	ja     0x14001b6d0
   14001b4a4:	movzx  eax,WORD PTR [rsp+0x70]
   14001b4a9:	cmp    eax,esi
   14001b4ab:	mov    DWORD PTR [rsp+0x50],eax
   14001b4af:	jle    0x14001b4e0
   14001b4b1:	cmp    BYTE PTR [rsp+0x76],bl
   14001b4b5:	je     0x14001b4e0
   14001b4b7:	lea    rcx,[rsp+0x77]
   14001b4bc:	cmp    BYTE PTR [rcx],bl
   14001b4be:	je     0x14001b4e0
   14001b4c0:	movzx  edx,BYTE PTR [rcx-0x1]
   14001b4c4:	jmp    0x14001b4d0
   14001b4c6:	movsxd rax,edx
   14001b4c9:	add    edx,esi
   14001b4cb:	mov    BYTE PTR [rax+r12*1],0x20
   14001b4d0:	movzx  eax,BYTE PTR [rcx]
   14001b4d3:	cmp    edx,eax
   14001b4d5:	jle    0x14001b4c6
   14001b4d7:	add    rcx,0x2
   14001b4db:	cmp    BYTE PTR [rcx-0x1],bl
   14001b4de:	jne    0x14001b4bc
   14001b4e0:	mov    eax,DWORD PTR [rbp+0x0]
   14001b4e3:	mov    DWORD PTR [rsp+0x38],ebx
   14001b4e7:	lea    rcx,[r13+0x100]
   14001b4ee:	mov    DWORD PTR [rsp+0x30],ebx
   14001b4f2:	mov    DWORD PTR [rsp+0x28],eax
   14001b4f6:	mov    QWORD PTR [rsp+0x20],rcx
   14001b4fb:	xor    ecx,ecx
   14001b4fd:	mov    r9d,0x100
   14001b503:	mov    r8,r12
   14001b506:	mov    edx,esi
   14001b508:	call   0x14001c0ec
   14001b50d:	cmp    eax,ebx
   14001b50f:	je     0x14001b6d0
   14001b515:	mov    eax,DWORD PTR [rbp+0x0]
   14001b518:	mov    edx,DWORD PTR [rdi+0x14]
   14001b51b:	mov    DWORD PTR [rsp+0x40],ebx
   14001b51f:	mov    DWORD PTR [rsp+0x38],eax
   14001b523:	mov    eax,0xff
   14001b528:	lea    rcx,[r15+0x81]
   14001b52f:	mov    DWORD PTR [rsp+0x30],eax
   14001b533:	mov    QWORD PTR [rsp+0x28],rcx
   14001b538:	lea    r8d,[rax+0x1]
   14001b53c:	lea    r9,[r12+0x1]
   14001b541:	xor    ecx,ecx
   14001b543:	mov    DWORD PTR [rsp+0x20],eax
   14001b547:	call   0x14001bde8
   14001b54c:	cmp    eax,ebx
   14001b54e:	je     0x14001b6d0
   14001b554:	mov    eax,DWORD PTR [rbp+0x0]
   14001b557:	mov    edx,DWORD PTR [rdi+0x14]
   14001b55a:	mov    DWORD PTR [rsp+0x40],ebx
   14001b55e:	mov    DWORD PTR [rsp+0x38],eax
   14001b562:	mov    eax,0xff
   14001b567:	lea    rcx,[r14+0x81]
   14001b56e:	mov    DWORD PTR [rsp+0x30],eax
   14001b572:	mov    QWORD PTR [rsp+0x28],rcx
   14001b577:	lea    r9,[r12+0x1]
   14001b57c:	xor    ecx,ecx
   14001b57e:	mov    r8d,0x200
   14001b584:	mov    DWORD PTR [rsp+0x20],eax
   14001b588:	call   0x14001bde8
   14001b58d:	cmp    eax,ebx
   14001b58f:	je     0x14001b6d0
   14001b595:	cmp    DWORD PTR [rsp+0x50],esi
   14001b599:	lea    rbp,[r13+0xfe]
   14001b5a0:	mov    WORD PTR [rbp+0x0],bx
   14001b5a4:	mov    BYTE PTR [r15+0x7f],bl
   14001b5a8:	mov    BYTE PTR [r14+0x7f],bl
   14001b5ac:	mov    BYTE PTR [r15+0x80],bl
   14001b5b3:	mov    BYTE PTR [r14+0x80],bl
   14001b5ba:	jle    0x14001b5f5
   14001b5bc:	cmp    BYTE PTR [rsp+0x76],bl
   14001b5c0:	je     0x14001b5f5
   14001b5c2:	lea    rcx,[rsp+0x77]
   14001b5c7:	cmp    BYTE PTR [rcx],bl
   14001b5c9:	je     0x14001b5f5
   14001b5cb:	movzx  edx,BYTE PTR [rcx-0x1]
   14001b5cf:	jmp    0x14001b5e5
   14001b5d1:	movsxd rax,edx
   14001b5d4:	mov    r8d,0x8000
   14001b5da:	add    edx,esi
   14001b5dc:	mov    WORD PTR [r13+rax*2+0x100],r8w
   14001b5e5:	movzx  eax,BYTE PTR [rcx]
   14001b5e8:	cmp    edx,eax
   14001b5ea:	jle    0x14001b5d1
   14001b5ec:	add    rcx,0x2
   14001b5f0:	cmp    BYTE PTR [rcx-0x1],bl
   14001b5f3:	jne    0x14001b5c7
   14001b5f5:	lea    rdx,[r13+0x200]
   14001b5fc:	mov    r8d,0xfe
   14001b602:	mov    rcx,r13
   14001b605:	call   0x140008b00
   14001b60a:	lea    rdx,[r15+0x100]
   14001b611:	mov    r8d,0x7f
   14001b617:	mov    rcx,r15
   14001b61a:	call   0x140008b00
   14001b61f:	lea    rdx,[r14+0x100]
   14001b626:	mov    r8d,0x7f
   14001b62c:	mov    rcx,r14
   14001b62f:	call   0x140008b00
   14001b634:	mov    rcx,QWORD PTR [rdi+0x130]
   14001b63b:	cmp    rcx,rbx
   14001b63e:	je     0x14001b685
   14001b640:	lock add DWORD PTR [rcx],0xffffffff
   14001b644:	jne    0x14001b685
   14001b646:	mov    rcx,QWORD PTR [rdi+0x138]
   14001b64d:	sub    rcx,0xfe
   14001b654:	call   0x1400098ac
   14001b659:	mov    rcx,QWORD PTR [rdi+0x148]
   14001b660:	add    rcx,0xffffffffffffff80
   14001b664:	call   0x1400098ac
   14001b669:	mov    rcx,QWORD PTR [rdi+0x150]
   14001b670:	add    rcx,0xffffffffffffff80
   14001b674:	call   0x1400098ac
   14001b679:	mov    rcx,QWORD PTR [rdi+0x130]
   14001b680:	call   0x1400098ac
   14001b685:	mov    rax,QWORD PTR [rsp+0x58]
   14001b68a:	mov    DWORD PTR [rax],esi
   14001b68c:	mov    QWORD PTR [rdi+0x130],rax
   14001b693:	lea    rax,[r13+0x100]
   14001b69a:	mov    QWORD PTR [rdi+0x140],rax
   14001b6a1:	lea    rax,[r15+0x80]
   14001b6a8:	mov    QWORD PTR [rdi+0x138],rbp
   14001b6af:	mov    QWORD PTR [rdi+0x148],rax
   14001b6b6:	lea    rax,[r14+0x80]
   14001b6bd:	mov    QWORD PTR [rdi+0x150],rax
   14001b6c4:	mov    eax,DWORD PTR [rsp+0x50]
   14001b6c8:	mov    DWORD PTR [rdi+0x10c],eax
   14001b6ce:	jmp    0x14001b6f4
   14001b6d0:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b6d5:	call   0x1400098ac
   14001b6da:	mov    rcx,r13
   14001b6dd:	call   0x1400098ac
   14001b6e2:	mov    rcx,r15
   14001b6e5:	call   0x1400098ac
   14001b6ea:	mov    rcx,r14
   14001b6ed:	call   0x1400098ac
   14001b6f2:	mov    ebx,esi
   14001b6f4:	mov    rcx,r12
   14001b6f7:	call   0x1400098ac
   14001b6fc:	mov    eax,ebx
   14001b6fe:	jmp    0x14001b755
   14001b700:	mov    rax,QWORD PTR [rcx+0x130]
   14001b707:	cmp    rax,rbx
   14001b70a:	je     0x14001b710
   14001b70c:	lock add DWORD PTR [rax],0xffffffff
   14001b710:	lea    rax,[rip+0x131e9]        # 0x14002e900
   14001b717:	mov    esi,0x1
   14001b71c:	mov    QWORD PTR [rcx+0x130],rbx
   14001b723:	mov    QWORD PTR [rcx+0x140],rax
   14001b72a:	lea    rax,[rip+0x1365f]        # 0x14002ed90
   14001b731:	mov    QWORD PTR [rcx+0x138],rbx
   14001b738:	mov    QWORD PTR [rcx+0x148],rax
   14001b73f:	lea    rax,[rip+0x137ca]        # 0x14002ef10
   14001b746:	mov    DWORD PTR [rcx+0x10c],esi
   14001b74c:	mov    QWORD PTR [rcx+0x150],rax
   14001b753:	xor    eax,eax
   14001b755:	mov    rcx,QWORD PTR [rsp+0x88]
   14001b75d:	xor    rcx,rsp
   14001b760:	call   0x140009080
   14001b765:	lea    r11,[rsp+0x90]
   14001b76d:	mov    rbx,QWORD PTR [r11+0x38]
   14001b771:	mov    rbp,QWORD PTR [r11+0x40]
   14001b775:	mov    rsi,QWORD PTR [r11+0x48]
   14001b779:	mov    rsp,r11
   14001b77c:	pop    r15
   14001b77e:	pop    r14
   14001b780:	pop    r13
   14001b782:	pop    r12
   14001b784:	pop    rdi
   14001b785:	ret    
   14001b786:	int3   
   14001b787:	int3   
   14001b788:	sub    rsp,0x28
   14001b78c:	call   0x1400118e4
   14001b791:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b798:	cmp    rcx,QWORD PTR [rip+0x19931]        # 0x1400350d0
   14001b79f:	je     0x14001b7b7
   14001b7a1:	mov    eax,DWORD PTR [rax+0xc8]
   14001b7a7:	test   DWORD PTR [rip+0x197ab],eax        # 0x140034f58
   14001b7ad:	jne    0x14001b7b7
   14001b7af:	call   0x140010580
   14001b7b4:	mov    rcx,rax
   14001b7b7:	mov    eax,DWORD PTR [rcx+0x10c]
   14001b7bd:	add    rsp,0x28
   14001b7c1:	ret    
   14001b7c2:	int3   
   14001b7c3:	int3   
   14001b7c4:	sub    rsp,0x28
   14001b7c8:	test   rcx,rcx
   14001b7cb:	jne    0x14001b7d4
   14001b7cd:	call   0x14001b788
   14001b7d2:	jmp    0x14001b7dd
   14001b7d4:	mov    rax,QWORD PTR [rcx]
   14001b7d7:	mov    eax,DWORD PTR [rax+0x10c]
   14001b7dd:	add    rsp,0x28
   14001b7e1:	ret    
   14001b7e2:	int3   
   14001b7e3:	int3   
   14001b7e4:	sub    rsp,0x28
   14001b7e8:	call   0x1400118e4
   14001b7ed:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b7f4:	cmp    rcx,QWORD PTR [rip+0x198d5]        # 0x1400350d0
   14001b7fb:	je     0x14001b813
   14001b7fd:	mov    eax,DWORD PTR [rax+0xc8]
   14001b803:	test   DWORD PTR [rip+0x1974f],eax        # 0x140034f58
   14001b809:	jne    0x14001b813
   14001b80b:	call   0x140010580
   14001b810:	mov    rcx,rax
   14001b813:	mov    eax,DWORD PTR [rcx+0x4]
   14001b816:	add    rsp,0x28
   14001b81a:	ret    
   14001b81b:	int3   
   14001b81c:	sub    rsp,0x28
   14001b820:	call   0x1400118e4
   14001b825:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b82c:	cmp    rcx,QWORD PTR [rip+0x1989d]        # 0x1400350d0
   14001b833:	je     0x14001b84b
   14001b835:	mov    eax,DWORD PTR [rax+0xc8]
   14001b83b:	test   DWORD PTR [rip+0x19717],eax        # 0x140034f58
   14001b841:	jne    0x14001b84b
   14001b843:	call   0x140010580
   14001b848:	mov    rcx,rax
   14001b84b:	mov    eax,DWORD PTR [rcx+0x8]
   14001b84e:	add    rsp,0x28
   14001b852:	ret    
   14001b853:	int3   
   14001b854:	sub    rsp,0x28
   14001b858:	call   0x1400118e4
   14001b85d:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b864:	cmp    rcx,QWORD PTR [rip+0x19865]        # 0x1400350d0
   14001b86b:	je     0x14001b883
   14001b86d:	mov    eax,DWORD PTR [rax+0xc8]
   14001b873:	test   DWORD PTR [rip+0x196df],eax        # 0x140034f58
   14001b879:	jne    0x14001b883
   14001b87b:	call   0x140010580
   14001b880:	mov    rcx,rax
   14001b883:	lea    rax,[rcx+0xc]
   14001b887:	add    rsp,0x28
   14001b88b:	ret    
   14001b88c:	mov    eax,edx
   14001b88e:	test   edx,edx
   14001b890:	je     0x14001b8a0
   14001b892:	dec    eax
   14001b894:	cmp    BYTE PTR [rcx],0x0
   14001b897:	je     0x14001b8a2
   14001b899:	inc    rcx
   14001b89c:	test   eax,eax
   14001b89e:	jne    0x14001b892
   14001b8a0:	dec    eax
   14001b8a2:	sub    edx,eax
   14001b8a4:	lea    eax,[rdx-0x1]
   14001b8a7:	ret    
   14001b8a8:	rex push rbp
   14001b8aa:	push   r12
   14001b8ac:	push   r13
   14001b8ae:	push   r14
   14001b8b0:	push   r15
   14001b8b2:	sub    rsp,0x60
   14001b8b6:	lea    rbp,[rsp+0x40]
   14001b8bb:	mov    QWORD PTR [rbp+0x50],rbx
   14001b8bf:	mov    QWORD PTR [rbp+0x58],rsi
   14001b8c3:	mov    QWORD PTR [rbp+0x60],rdi
   14001b8c7:	mov    rax,QWORD PTR [rip+0x189d2]        # 0x1400342a0
   14001b8ce:	xor    rax,rbp
   14001b8d1:	mov    QWORD PTR [rbp+0x18],rax
   14001b8d5:	mov    r10d,DWORD PTR [rip+0x1ade0]        # 0x1400366bc
   14001b8dc:	mov    esi,0x2
   14001b8e1:	xor    edi,edi
   14001b8e3:	mov    r11,r9
   14001b8e6:	mov    QWORD PTR [rbp+0x10],r9
   14001b8ea:	mov    DWORD PTR [rbp+0x0],r8d
   14001b8ee:	mov    r14d,edx
   14001b8f1:	mov    DWORD PTR [rbp+0x8],edx
   14001b8f4:	mov    rbx,rcx
   14001b8f7:	lea    r13d,[rsi-0x1]
   14001b8fb:	cmp    r10d,edi
   14001b8fe:	jne    0x14001b94f
   14001b900:	lea    r8,[rip+0x12ef1]        # 0x14002e7f8
   14001b907:	mov    r9d,r13d
   14001b90a:	mov    edx,0x100
   14001b90f:	xor    ecx,ecx
   14001b911:	mov    DWORD PTR [rsp+0x28],edi
   14001b915:	mov    QWORD PTR [rsp+0x20],rdi
   14001b91a:	call   QWORD PTR [rip+0xb8a0]        # 0x1400271c0
   14001b920:	cmp    eax,edi
   14001b922:	je     0x14001b930
   14001b924:	mov    r10d,r13d
   14001b927:	mov    DWORD PTR [rip+0x1ad8e],r13d        # 0x1400366bc
   14001b92e:	jmp    0x14001b94b
   14001b930:	call   QWORD PTR [rip+0xb93a]        # 0x140027270
   14001b936:	mov    r10d,DWORD PTR [rip+0x1ad7f]        # 0x1400366bc
   14001b93d:	cmp    eax,0x78
   14001b940:	cmove  r10d,esi
   14001b944:	mov    DWORD PTR [rip+0x1ad71],r10d        # 0x1400366bc
   14001b94b:	mov    r11,QWORD PTR [rbp+0x10]
   14001b94f:	mov    r9d,DWORD PTR [rbp+0x70]
   14001b953:	cmp    r9d,edi
   14001b956:	jle    0x14001b98d
   14001b958:	mov    ecx,r9d
   14001b95b:	mov    rax,r11
   14001b95e:	sub    ecx,r13d
   14001b961:	cmp    BYTE PTR [rax],dil
   14001b964:	je     0x14001b970
   14001b966:	add    rax,r13
   14001b969:	cmp    ecx,edi
   14001b96b:	jne    0x14001b95e
   14001b96d:	or     ecx,0xffffffff
   14001b970:	mov    eax,r9d
   14001b973:	sub    eax,ecx
   14001b975:	sub    eax,r13d
   14001b978:	cmp    eax,r9d
   14001b97b:	jge    0x14001b987
   14001b97d:	lea    r9d,[rax+0x1]
   14001b981:	mov    DWORD PTR [rbp+0x70],r9d
   14001b985:	jmp    0x14001b98d
   14001b987:	mov    r9d,eax
   14001b98a:	mov    DWORD PTR [rbp+0x70],eax
   14001b98d:	cmp    r10d,esi
   14001b990:	je     0x14001bbf2
   14001b996:	cmp    r10d,edi
   14001b999:	je     0x14001bbf2
   14001b99f:	cmp    r10d,r13d
   14001b9a2:	jne    0x14001bc28
   14001b9a8:	mov    r12d,DWORD PTR [rbp+0x88]
   14001b9af:	mov    esi,edi
   14001b9b1:	cmp    r12d,edi
   14001b9b4:	jne    0x14001b9bd
   14001b9b6:	mov    rax,QWORD PTR [rbx]
   14001b9b9:	mov    r12d,DWORD PTR [rax+0x4]
   14001b9bd:	neg    DWORD PTR [rbp+0x90]
   14001b9c3:	mov    r8,r11
   14001b9c6:	mov    ecx,r12d
   14001b9c9:	sbb    edx,edx
   14001b9cb:	mov    DWORD PTR [rsp+0x28],edi
   14001b9cf:	mov    QWORD PTR [rsp+0x20],rdi
   14001b9d4:	and    edx,0x8
   14001b9d7:	add    edx,r13d
   14001b9da:	call   QWORD PTR [rip+0xb858]        # 0x140027238
   14001b9e0:	movsxd r15,eax
   14001b9e3:	cmp    r15d,edi
   14001b9e6:	je     0x14001bc28
   14001b9ec:	movabs rbx,0xffffffffffffff0
   14001b9f6:	mov    r14d,0xdddd
   14001b9fc:	mov    r13d,0x400
   14001ba02:	jle    0x14001ba5f
   14001ba04:	xor    edx,edx
   14001ba06:	lea    rax,[rdx-0x20]
   14001ba0a:	div    r15
   14001ba0d:	cmp    rax,0x2
   14001ba11:	jb     0x14001ba5f
   14001ba13:	lea    rcx,[r15+r15*1+0x10]
   14001ba18:	cmp    rcx,r13
   14001ba1b:	ja     0x14001ba4b
   14001ba1d:	lea    rax,[rcx+0xf]
   14001ba21:	cmp    rax,rcx
   14001ba24:	ja     0x14001ba29
   14001ba26:	mov    rax,rbx
   14001ba29:	and    rax,0xfffffffffffffff0
   14001ba2d:	call   0x140025f10
   14001ba32:	sub    rsp,rax
   14001ba35:	lea    rdi,[rsp+0x40]
   14001ba3a:	test   rdi,rdi
   14001ba3d:	je     0x14001bc28
   14001ba43:	mov    DWORD PTR [rdi],0xcccc
   14001ba49:	jmp    0x14001ba5b
   14001ba4b:	call   0x14000993c
   14001ba50:	mov    rdi,rax
   14001ba53:	test   rax,rax
   14001ba56:	je     0x14001ba5f
   14001ba58:	mov    DWORD PTR [rax],r14d
   14001ba5b:	add    rdi,0x10
   14001ba5f:	test   rdi,rdi
   14001ba62:	je     0x14001bc28
   14001ba68:	mov    r9d,DWORD PTR [rbp+0x70]
   14001ba6c:	mov    r8,QWORD PTR [rbp+0x10]
   14001ba70:	mov    edx,0x1
   14001ba75:	mov    ecx,r12d
   14001ba78:	mov    DWORD PTR [rsp+0x28],r15d
   14001ba7d:	mov    QWORD PTR [rsp+0x20],rdi
   14001ba82:	call   QWORD PTR [rip+0xb7b0]        # 0x140027238
   14001ba88:	xor    ecx,ecx
   14001ba8a:	cmp    eax,ecx
   14001ba8c:	je     0x14001bbdd
   14001ba92:	mov    edx,DWORD PTR [rbp+0x0]
   14001ba95:	mov    DWORD PTR [rsp+0x28],ecx
   14001ba99:	mov    QWORD PTR [rsp+0x20],rcx
   14001ba9e:	mov    ecx,DWORD PTR [rbp+0x8]
   14001baa1:	mov    r9d,r15d
   14001baa4:	mov    r8,rdi
   14001baa7:	call   QWORD PTR [rip+0xb713]        # 0x1400271c0
   14001baad:	xor    r8d,r8d
   14001bab0:	movsxd rsi,eax
   14001bab3:	cmp    esi,r8d
   14001bab6:	je     0x14001bbdd
   14001babc:	mov    r10d,DWORD PTR [rbp+0x0]
   14001bac0:	bt     r10d,0xa
   14001bac5:	jae    0x14001bb02
   14001bac7:	mov    eax,DWORD PTR [rbp+0x80]
   14001bacd:	cmp    eax,r8d
   14001bad0:	je     0x14001bbdd
   14001bad6:	cmp    esi,eax
   14001bad8:	jg     0x14001bbdd
   14001bade:	mov    ecx,DWORD PTR [rbp+0x8]
   14001bae1:	mov    DWORD PTR [rsp+0x28],eax
   14001bae5:	mov    rax,QWORD PTR [rbp+0x78]
   14001bae9:	mov    r9d,r15d
   14001baec:	mov    r8,rdi
   14001baef:	mov    edx,r10d
   14001baf2:	mov    QWORD PTR [rsp+0x20],rax
   14001baf7:	call   QWORD PTR [rip+0xb6c3]        # 0x1400271c0
   14001bafd:	jmp    0x14001bbdd
   14001bb02:	cmp    esi,r8d
   14001bb05:	jle    0x14001bb67
   14001bb07:	xor    edx,edx
   14001bb09:	lea    rax,[rdx-0x20]
   14001bb0d:	div    rsi
   14001bb10:	cmp    rax,0x2
   14001bb14:	jb     0x14001bb67
   14001bb16:	lea    rcx,[rsi+rsi*1+0x10]
   14001bb1b:	cmp    rcx,r13
   14001bb1e:	ja     0x14001bb4a
   14001bb20:	lea    rax,[rcx+0xf]
   14001bb24:	cmp    rax,rcx
   14001bb27:	ja     0x14001bb2c
   14001bb29:	mov    rax,rbx
   14001bb2c:	and    rax,0xfffffffffffffff0
   14001bb30:	call   0x140025f10
   14001bb35:	sub    rsp,rax
   14001bb38:	lea    rbx,[rsp+0x40]
   14001bb3d:	cmp    rbx,r8
   14001bb40:	je     0x14001bb61
   14001bb42:	mov    DWORD PTR [rbx],0xcccc
   14001bb48:	jmp    0x14001bb5d
   14001bb4a:	call   0x14000993c
   14001bb4f:	xor    r8d,r8d
   14001bb52:	mov    rbx,rax
   14001bb55:	cmp    rax,r8
   14001bb58:	je     0x14001bb61
   14001bb5a:	mov    DWORD PTR [rax],r14d
   14001bb5d:	add    rbx,0x10
   14001bb61:	mov    r10d,DWORD PTR [rbp+0x0]
   14001bb65:	jmp    0x14001bb6a
   14001bb67:	mov    rbx,r8
   14001bb6a:	cmp    rbx,r8
   14001bb6d:	je     0x14001bbdd
   14001bb6f:	mov    ecx,DWORD PTR [rbp+0x8]
   14001bb72:	mov    r9d,r15d
   14001bb75:	mov    r8,rdi
   14001bb78:	mov    edx,r10d
   14001bb7b:	mov    DWORD PTR [rsp+0x28],esi
   14001bb7f:	mov    QWORD PTR [rsp+0x20],rbx
   14001bb84:	call   QWORD PTR [rip+0xb636]        # 0x1400271c0
   14001bb8a:	xor    ecx,ecx
   14001bb8c:	cmp    eax,ecx
   14001bb8e:	je     0x14001bbcf
   14001bb90:	mov    eax,DWORD PTR [rbp+0x80]
   14001bb96:	xor    edx,edx
   14001bb98:	mov    QWORD PTR [rsp+0x38],rcx
   14001bb9d:	mov    r9d,esi
   14001bba0:	mov    r8,rbx
   14001bba3:	mov    QWORD PTR [rsp+0x30],rcx
   14001bba8:	cmp    eax,ecx
   14001bbaa:	jne    0x14001bbb7
   14001bbac:	mov    DWORD PTR [rsp+0x28],ecx
   14001bbb0:	mov    QWORD PTR [rsp+0x20],rcx
   14001bbb5:	jmp    0x14001bbc4
   14001bbb7:	mov    DWORD PTR [rsp+0x28],eax
   14001bbbb:	mov    rax,QWORD PTR [rbp+0x78]
   14001bbbf:	mov    QWORD PTR [rsp+0x20],rax
   14001bbc4:	mov    ecx,r12d
   14001bbc7:	call   QWORD PTR [rip+0xb7e3]        # 0x1400273b0
   14001bbcd:	mov    esi,eax
   14001bbcf:	lea    rcx,[rbx-0x10]
   14001bbd3:	cmp    DWORD PTR [rcx],r14d
   14001bbd6:	jne    0x14001bbdd
   14001bbd8:	call   0x1400098ac
   14001bbdd:	lea    rcx,[rdi-0x10]
   14001bbe1:	cmp    DWORD PTR [rcx],r14d
   14001bbe4:	jne    0x14001bbeb
   14001bbe6:	call   0x1400098ac
   14001bbeb:	mov    eax,esi
   14001bbed:	jmp    0x14001bdbf
   14001bbf2:	mov    rsi,rdi
   14001bbf5:	mov    r12,rdi
   14001bbf8:	cmp    r14d,edi
   14001bbfb:	jne    0x14001bc08
   14001bbfd:	mov    rax,QWORD PTR [rbx]
   14001bc00:	mov    r14d,DWORD PTR [rax+0x14]
   14001bc04:	mov    DWORD PTR [rbp+0x8],r14d
   14001bc08:	mov    edi,DWORD PTR [rbp+0x88]
   14001bc0e:	test   edi,edi
   14001bc10:	jne    0x14001bc18
   14001bc12:	mov    rax,QWORD PTR [rbx]
   14001bc15:	mov    edi,DWORD PTR [rax+0x4]
   14001bc18:	mov    ecx,r14d
   14001bc1b:	call   0x140023d64
   14001bc20:	mov    r13d,eax
   14001bc23:	cmp    eax,0xffffffff
   14001bc26:	jne    0x14001bc2f
   14001bc28:	xor    eax,eax
   14001bc2a:	jmp    0x14001bdbf
   14001bc2f:	mov    r15,QWORD PTR [rbp+0x78]
   14001bc33:	mov    r8,QWORD PTR [rbp+0x10]
   14001bc37:	cmp    eax,edi
   14001bc39:	je     0x14001bd7b
   14001bc3f:	xor    ebx,ebx
   14001bc41:	lea    r9,[rbp+0x70]
   14001bc45:	mov    edx,eax
   14001bc47:	mov    ecx,edi
   14001bc49:	mov    DWORD PTR [rsp+0x28],ebx
   14001bc4d:	mov    QWORD PTR [rsp+0x20],rbx
   14001bc52:	call   0x140023db8
   14001bc57:	mov    rsi,rax
   14001bc5a:	cmp    rax,rbx
   14001bc5d:	je     0x14001bc28
   14001bc5f:	mov    r9d,DWORD PTR [rbp+0x70]
   14001bc63:	mov    edx,DWORD PTR [rbp+0x0]
   14001bc66:	mov    r8,rax
   14001bc69:	mov    ecx,r14d
   14001bc6c:	mov    DWORD PTR [rsp+0x28],ebx
   14001bc70:	mov    QWORD PTR [rsp+0x20],rbx
   14001bc75:	call   QWORD PTR [rip+0xb54d]        # 0x1400271c8
   14001bc7b:	movsxd r9,eax
   14001bc7e:	mov    DWORD PTR [rbp+0x4],r9d
   14001bc82:	cmp    r9d,ebx
   14001bc85:	jne    0x14001bc8e
   14001bc87:	mov    edi,ebx
   14001bc89:	jmp    0x14001bd9e
   14001bc8e:	cmp    r9d,ebx
   14001bc91:	mov    r14d,0xdddd
   14001bc97:	jle    0x14001bcfb
   14001bc99:	mov    rcx,r9
   14001bc9c:	cmp    r9,0xffffffffffffffe0
   14001bca0:	ja     0x14001bcfb
   14001bca2:	add    rcx,0x10
   14001bca6:	cmp    rcx,0x400
   14001bcad:	ja     0x14001bce3
   14001bcaf:	lea    rbx,[rcx+0xf]
   14001bcb3:	cmp    rbx,rcx
   14001bcb6:	ja     0x14001bcc2
   14001bcb8:	movabs rbx,0xffffffffffffff0
   14001bcc2:	and    rbx,0xfffffffffffffff0
   14001bcc6:	mov    rax,rbx
   14001bcc9:	call   0x140025f10
   14001bcce:	sub    rsp,rbx
   14001bcd1:	lea    rbx,[rsp+0x40]
   14001bcd6:	test   rbx,rbx
   14001bcd9:	je     0x14001bd00
   14001bcdb:	mov    DWORD PTR [rbx],0xcccc
   14001bce1:	jmp    0x14001bcf3
   14001bce3:	call   0x14000993c
   14001bce8:	mov    rbx,rax
   14001bceb:	test   rax,rax
   14001bcee:	je     0x14001bcf7
   14001bcf0:	mov    DWORD PTR [rax],r14d
   14001bcf3:	add    rbx,0x10
   14001bcf7:	mov    r9d,DWORD PTR [rbp+0x4]
   14001bcfb:	test   rbx,rbx
   14001bcfe:	jne    0x14001bd04
   14001bd00:	xor    ebx,ebx
   14001bd02:	jmp    0x14001bc87
   14001bd04:	movsxd r8,r9d
   14001bd07:	xor    edx,edx
   14001bd09:	mov    rcx,rbx
   14001bd0c:	call   0x140008a00
   14001bd11:	mov    r11d,DWORD PTR [rbp+0x4]
   14001bd15:	mov    r9d,DWORD PTR [rbp+0x70]
   14001bd19:	mov    edx,DWORD PTR [rbp+0x0]
   14001bd1c:	mov    ecx,DWORD PTR [rbp+0x8]
   14001bd1f:	mov    DWORD PTR [rsp+0x28],r11d
   14001bd24:	mov    r8,rsi
   14001bd27:	mov    QWORD PTR [rsp+0x20],rbx
   14001bd2c:	call   QWORD PTR [rip+0xb496]        # 0x1400271c8
   14001bd32:	mov    DWORD PTR [rbp+0x4],eax
   14001bd35:	test   eax,eax
   14001bd37:	jne    0x14001bd3d
   14001bd39:	xor    edi,edi
   14001bd3b:	jmp    0x14001bd6b
   14001bd3d:	mov    eax,DWORD PTR [rbp+0x80]
   14001bd43:	lea    r9,[rbp+0x4]
   14001bd47:	mov    r8,rbx
   14001bd4a:	mov    DWORD PTR [rsp+0x28],eax
   14001bd4e:	mov    edx,edi
   14001bd50:	mov    ecx,r13d
   14001bd53:	mov    QWORD PTR [rsp+0x20],r15
   14001bd58:	call   0x140023db8
   14001bd5d:	mov    edi,DWORD PTR [rbp+0x4]
   14001bd60:	mov    r12,rax
   14001bd63:	xor    eax,eax
   14001bd65:	cmp    r12,rax
   14001bd68:	cmove  edi,eax
   14001bd6b:	lea    rcx,[rbx-0x10]
   14001bd6f:	cmp    DWORD PTR [rcx],r14d
   14001bd72:	jne    0x14001bd9c
   14001bd74:	call   0x1400098ac
   14001bd79:	jmp    0x14001bd9c
   14001bd7b:	mov    eax,DWORD PTR [rbp+0x80]
   14001bd81:	mov    r9d,DWORD PTR [rbp+0x70]
   14001bd85:	mov    edx,DWORD PTR [rbp+0x0]
   14001bd88:	mov    DWORD PTR [rsp+0x28],eax
   14001bd8c:	mov    ecx,r14d
   14001bd8f:	mov    QWORD PTR [rsp+0x20],r15
   14001bd94:	call   QWORD PTR [rip+0xb42e]        # 0x1400271c8
   14001bd9a:	mov    edi,eax
   14001bd9c:	xor    ebx,ebx
   14001bd9e:	cmp    rsi,rbx
   14001bda1:	je     0x14001bdab
   14001bda3:	mov    rcx,rsi
   14001bda6:	call   0x1400098ac
   14001bdab:	cmp    r12,rbx
   14001bdae:	je     0x14001bdbd
   14001bdb0:	cmp    r15,r12
   14001bdb3:	je     0x14001bdbd
   14001bdb5:	mov    rcx,r12
   14001bdb8:	call   0x1400098ac
   14001bdbd:	mov    eax,edi
   14001bdbf:	mov    rcx,QWORD PTR [rbp+0x18]
   14001bdc3:	xor    rcx,rbp
   14001bdc6:	call   0x140009080
   14001bdcb:	mov    rbx,QWORD PTR [rbp+0x50]
   14001bdcf:	mov    rsi,QWORD PTR [rbp+0x58]
   14001bdd3:	mov    rdi,QWORD PTR [rbp+0x60]
   14001bdd7:	lea    rsp,[rbp+0x20]
   14001bddb:	pop    r15
   14001bddd:	pop    r14
   14001bddf:	pop    r13
   14001bde1:	pop    r12
   14001bde3:	pop    rbp
   14001bde4:	ret    
   14001bde5:	int3   
   14001bde6:	int3   
   14001bde7:	int3   
   14001bde8:	mov    QWORD PTR [rsp+0x8],rbx
   14001bded:	mov    QWORD PTR [rsp+0x10],rsi
   14001bdf2:	push   rdi
   14001bdf3:	sub    rsp,0x70
   14001bdf7:	mov    esi,edx
   14001bdf9:	mov    rdx,rcx
   14001bdfc:	lea    rcx,[rsp+0x50]
   14001be01:	mov    rbx,r9
   14001be04:	mov    edi,r8d
   14001be07:	call   0x1400094b4
   14001be0c:	mov    eax,DWORD PTR [rsp+0xb8]
   14001be13:	mov    r11d,DWORD PTR [rsp+0xc0]
   14001be1b:	lea    rcx,[rsp+0x50]
   14001be20:	mov    DWORD PTR [rsp+0x40],r11d
   14001be25:	mov    DWORD PTR [rsp+0x38],eax
   14001be29:	mov    eax,DWORD PTR [rsp+0xb0]
   14001be30:	mov    DWORD PTR [rsp+0x30],eax
   14001be34:	mov    rax,QWORD PTR [rsp+0xa8]
   14001be3c:	mov    r9,rbx
   14001be3f:	mov    QWORD PTR [rsp+0x28],rax
   14001be44:	mov    eax,DWORD PTR [rsp+0xa0]
   14001be4b:	mov    r8d,edi
   14001be4e:	mov    edx,esi
   14001be50:	mov    DWORD PTR [rsp+0x20],eax
   14001be54:	call   0x14001b8a8
   14001be59:	cmp    BYTE PTR [rsp+0x68],0x0
   14001be5e:	je     0x14001be6c
   14001be60:	mov    rcx,QWORD PTR [rsp+0x60]
   14001be65:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001be6c:	lea    r11,[rsp+0x70]
   14001be71:	mov    rbx,QWORD PTR [r11+0x10]
   14001be75:	mov    rsi,QWORD PTR [r11+0x18]
   14001be79:	mov    rsp,r11
   14001be7c:	pop    rdi
   14001be7d:	ret    
   14001be7e:	int3   
   14001be7f:	int3   
   14001be80:	mov    DWORD PTR [rsp+0x20],r9d
   14001be85:	push   rbp
   14001be86:	push   r12
   14001be88:	push   r13
   14001be8a:	push   r14
   14001be8c:	push   r15
   14001be8e:	sub    rsp,0x40
   14001be92:	lea    rbp,[rsp+0x30]
   14001be97:	mov    QWORD PTR [rbp+0x40],rbx
   14001be9b:	mov    QWORD PTR [rbp+0x48],rsi
   14001be9f:	mov    QWORD PTR [rbp+0x50],rdi
   14001bea3:	mov    rax,QWORD PTR [rip+0x183f6]        # 0x1400342a0
   14001beaa:	xor    rax,rbp
   14001bead:	mov    QWORD PTR [rbp+0x8],rax
   14001beb1:	mov    r9d,DWORD PTR [rip+0x1a808]        # 0x1400366c0
   14001beb8:	mov    edi,0x1
   14001bebd:	xor    ebx,ebx
   14001bebf:	mov    r14,r8
   14001bec2:	mov    r15d,edx
   14001bec5:	mov    r13,rcx
   14001bec8:	lea    esi,[rdi+0x1]
   14001becb:	cmp    r9d,ebx
   14001bece:	jne    0x14001bf0d
   14001bed0:	lea    r9,[rbp+0x0]
   14001bed4:	lea    rdx,[rip+0x1291d]        # 0x14002e7f8
   14001bedb:	mov    r8d,edi
   14001bede:	mov    ecx,edi
   14001bee0:	call   QWORD PTR [rip+0xb2ca]        # 0x1400271b0
   14001bee6:	cmp    eax,ebx
   14001bee8:	je     0x14001bef2
   14001beea:	mov    DWORD PTR [rip+0x1a7d0],edi        # 0x1400366c0
   14001bef0:	jmp    0x14001bf28
   14001bef2:	call   QWORD PTR [rip+0xb378]        # 0x140027270
   14001bef8:	mov    r9d,DWORD PTR [rip+0x1a7c1]        # 0x1400366c0
   14001beff:	cmp    eax,0x78
   14001bf02:	cmove  r9d,esi
   14001bf06:	mov    DWORD PTR [rip+0x1a7b3],r9d        # 0x1400366c0
   14001bf0d:	cmp    r9d,esi
   14001bf10:	je     0x14001c03c
   14001bf16:	cmp    r9d,ebx
   14001bf19:	je     0x14001c03c
   14001bf1f:	cmp    r9d,edi
   14001bf22:	jne    0x14001c06b
   14001bf28:	mov    esi,DWORD PTR [rbp+0x68]
   14001bf2b:	cmp    esi,ebx
   14001bf2d:	jne    0x14001bf36
   14001bf2f:	mov    rax,QWORD PTR [r13+0x0]
   14001bf33:	mov    esi,DWORD PTR [rax+0x4]
   14001bf36:	neg    DWORD PTR [rbp+0x78]
   14001bf39:	mov    r9d,DWORD PTR [rbp+0x58]
   14001bf3d:	mov    r8,r14
   14001bf40:	sbb    edx,edx
   14001bf42:	mov    ecx,esi
   14001bf44:	mov    DWORD PTR [rsp+0x28],ebx
   14001bf48:	and    edx,0x8
   14001bf4b:	mov    QWORD PTR [rsp+0x20],rbx
   14001bf50:	add    edx,edi
   14001bf52:	call   QWORD PTR [rip+0xb2e0]        # 0x140027238
   14001bf58:	movsxd r12,eax
   14001bf5b:	cmp    r12d,ebx
   14001bf5e:	je     0x14001c06b
   14001bf64:	mov    r13d,0xdddd
   14001bf6a:	jle    0x14001bfd4
   14001bf6c:	movabs rax,0x7ffffffffffffff0
   14001bf76:	cmp    r12,rax
   14001bf79:	ja     0x14001bfd4
   14001bf7b:	lea    rcx,[r12+r12*1+0x10]
   14001bf80:	cmp    rcx,0x400
   14001bf87:	ja     0x14001bfbe
   14001bf89:	lea    rax,[rcx+0xf]
   14001bf8d:	cmp    rax,rcx
   14001bf90:	ja     0x14001bf9c
   14001bf92:	movabs rax,0xffffffffffffff0
   14001bf9c:	and    rax,0xfffffffffffffff0
   14001bfa0:	call   0x140025f10
   14001bfa5:	sub    rsp,rax
   14001bfa8:	lea    rdi,[rsp+0x30]
   14001bfad:	cmp    rdi,rbx
   14001bfb0:	je     0x14001c06b
   14001bfb6:	mov    DWORD PTR [rdi],0xcccc
   14001bfbc:	jmp    0x14001bfce
   14001bfbe:	call   0x14000993c
   14001bfc3:	mov    rdi,rax
   14001bfc6:	cmp    rax,rbx
   14001bfc9:	je     0x14001bfd7
   14001bfcb:	mov    DWORD PTR [rax],r13d
   14001bfce:	add    rdi,0x10
   14001bfd2:	jmp    0x14001bfd7
   14001bfd4:	mov    rdi,rbx
   14001bfd7:	cmp    rdi,rbx
   14001bfda:	je     0x14001c06b
   14001bfe0:	mov    r8,r12
   14001bfe3:	xor    edx,edx
   14001bfe5:	mov    rcx,rdi
   14001bfe8:	add    r8,r8
   14001bfeb:	call   0x140008a00
   14001bff0:	mov    r9d,DWORD PTR [rbp+0x58]
   14001bff4:	mov    r8,r14
   14001bff7:	mov    edx,0x1
   14001bffc:	mov    ecx,esi
   14001bffe:	mov    DWORD PTR [rsp+0x28],r12d
   14001c003:	mov    QWORD PTR [rsp+0x20],rdi
   14001c008:	call   QWORD PTR [rip+0xb22a]        # 0x140027238
   14001c00e:	cmp    eax,ebx
   14001c010:	je     0x14001c027
   14001c012:	mov    r9,QWORD PTR [rbp+0x60]
   14001c016:	mov    r8d,eax
   14001c019:	mov    rdx,rdi
   14001c01c:	mov    ecx,r15d
   14001c01f:	call   QWORD PTR [rip+0xb18b]        # 0x1400271b0
   14001c025:	mov    ebx,eax
   14001c027:	lea    rcx,[rdi-0x10]
   14001c02b:	cmp    DWORD PTR [rcx],r13d
   14001c02e:	jne    0x14001c035
   14001c030:	call   0x1400098ac
   14001c035:	mov    eax,ebx
   14001c037:	jmp    0x14001c0c4
   14001c03c:	mov    r12d,DWORD PTR [rbp+0x70]
   14001c040:	mov    rdi,rbx
   14001c043:	cmp    r12d,ebx
   14001c046:	jne    0x14001c050
   14001c048:	mov    rax,QWORD PTR [r13+0x0]
   14001c04c:	mov    r12d,DWORD PTR [rax+0x14]
   14001c050:	mov    esi,DWORD PTR [rbp+0x68]
   14001c053:	cmp    esi,ebx
   14001c055:	jne    0x14001c05e
   14001c057:	mov    rax,QWORD PTR [r13+0x0]
   14001c05b:	mov    esi,DWORD PTR [rax+0x4]
   14001c05e:	mov    ecx,r12d
   14001c061:	call   0x140023d64
   14001c066:	cmp    eax,0xffffffff
   14001c069:	jne    0x14001c06f
   14001c06b:	xor    eax,eax
   14001c06d:	jmp    0x14001c0c4
   14001c06f:	cmp    eax,esi
   14001c071:	je     0x14001c097
   14001c073:	lea    r9,[rbp+0x58]
   14001c077:	mov    r8,r14
   14001c07a:	mov    edx,eax
   14001c07c:	mov    ecx,esi
   14001c07e:	mov    DWORD PTR [rsp+0x28],ebx
   14001c082:	mov    QWORD PTR [rsp+0x20],rbx
   14001c087:	call   0x140023db8
   14001c08c:	mov    rdi,rax
   14001c08f:	cmp    rax,rbx
   14001c092:	je     0x14001c06b
   14001c094:	mov    r14,rax
   14001c097:	mov    rax,QWORD PTR [rbp+0x60]
   14001c09b:	mov    r9d,DWORD PTR [rbp+0x58]
   14001c09f:	mov    r8,r14
   14001c0a2:	mov    edx,r15d
   14001c0a5:	mov    ecx,r12d
   14001c0a8:	mov    QWORD PTR [rsp+0x20],rax
   14001c0ad:	call   QWORD PTR [rip+0xb105]        # 0x1400271b8
   14001c0b3:	mov    esi,eax
   14001c0b5:	cmp    rdi,rbx
   14001c0b8:	je     0x14001c0c2
   14001c0ba:	mov    rcx,rdi
   14001c0bd:	call   0x1400098ac
   14001c0c2:	mov    eax,esi
   14001c0c4:	mov    rcx,QWORD PTR [rbp+0x8]
   14001c0c8:	xor    rcx,rbp
   14001c0cb:	call   0x140009080
   14001c0d0:	mov    rbx,QWORD PTR [rbp+0x40]
   14001c0d4:	mov    rsi,QWORD PTR [rbp+0x48]
   14001c0d8:	mov    rdi,QWORD PTR [rbp+0x50]
   14001c0dc:	lea    rsp,[rbp+0x10]
   14001c0e0:	pop    r15
   14001c0e2:	pop    r14
   14001c0e4:	pop    r13
   14001c0e6:	pop    r12
   14001c0e8:	pop    rbp
   14001c0e9:	ret    
   14001c0ea:	int3   
   14001c0eb:	int3   
   14001c0ec:	mov    QWORD PTR [rsp+0x8],rbx
   14001c0f1:	mov    QWORD PTR [rsp+0x10],rsi
   14001c0f6:	push   rdi
   14001c0f7:	sub    rsp,0x60
   14001c0fb:	mov    esi,edx
   14001c0fd:	mov    rdx,rcx
   14001c100:	lea    rcx,[rsp+0x40]
   14001c105:	mov    ebx,r9d
   14001c108:	mov    rdi,r8
   14001c10b:	call   0x1400094b4
   14001c110:	mov    eax,DWORD PTR [rsp+0xa0]
   14001c117:	mov    r11d,DWORD PTR [rsp+0xa8]
   14001c11f:	lea    rcx,[rsp+0x40]
   14001c124:	mov    DWORD PTR [rsp+0x38],r11d
   14001c129:	mov    DWORD PTR [rsp+0x30],eax
   14001c12d:	mov    eax,DWORD PTR [rsp+0x98]
   14001c134:	mov    DWORD PTR [rsp+0x28],eax
   14001c138:	mov    rax,QWORD PTR [rsp+0x90]
   14001c140:	mov    r9d,ebx
   14001c143:	mov    r8,rdi
   14001c146:	mov    edx,esi
   14001c148:	mov    QWORD PTR [rsp+0x20],rax
   14001c14d:	call   0x14001be80
   14001c152:	cmp    BYTE PTR [rsp+0x58],0x0
   14001c157:	je     0x14001c165
   14001c159:	mov    rcx,QWORD PTR [rsp+0x50]
   14001c15e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c165:	mov    rbx,QWORD PTR [rsp+0x70]
   14001c16a:	mov    rsi,QWORD PTR [rsp+0x78]
   14001c16f:	add    rsp,0x60
   14001c173:	pop    rdi
   14001c174:	ret    
   14001c175:	int3   
   14001c176:	int3   
   14001c177:	int3   
   14001c178:	mov    rax,QWORD PTR [rip+0x19489]        # 0x140035608
   14001c17f:	ret    
   14001c180:	sub    rsp,0x28
   14001c184:	call   0x1400118e4
   14001c189:	mov    rcx,QWORD PTR [rax+0xc0]
   14001c190:	cmp    rcx,QWORD PTR [rip+0x18f39]        # 0x1400350d0
   14001c197:	je     0x14001c1af
   14001c199:	mov    eax,DWORD PTR [rax+0xc8]
   14001c19f:	test   DWORD PTR [rip+0x18db3],eax        # 0x140034f58
   14001c1a5:	jne    0x14001c1af
   14001c1a7:	call   0x140010580
   14001c1ac:	mov    rcx,rax
   14001c1af:	mov    rax,QWORD PTR [rcx+0x140]
   14001c1b6:	add    rsp,0x28
   14001c1ba:	ret    
   14001c1bb:	int3   
   14001c1bc:	mov    rax,rsp
   14001c1bf:	mov    QWORD PTR [rax+0x8],rbx
   14001c1c3:	mov    QWORD PTR [rax+0x10],rbp
   14001c1c7:	mov    QWORD PTR [rax+0x18],rsi
   14001c1cb:	mov    QWORD PTR [rax+0x20],rdi
   14001c1cf:	push   r12
   14001c1d1:	sub    rsp,0x40
   14001c1d5:	movzx  esi,WORD PTR [rdx+0x42]
   14001c1d9:	movzx  ebp,WORD PTR [rdx+0x44]
   14001c1dd:	mov    rdi,rcx
   14001c1e0:	test   rcx,rcx
   14001c1e3:	jne    0x14001c1ed
   14001c1e5:	or     eax,0xffffffff
   14001c1e8:	jmp    0x14001c7d4
   14001c1ed:	and    QWORD PTR [rsp+0x38],0x0
   14001c1f3:	lea    rax,[rcx+0x8]
   14001c1f7:	mov    r9d,0x31
   14001c1fd:	lea    r12d,[r9-0x30]
   14001c201:	mov    QWORD PTR [rsp+0x30],rdx
   14001c206:	lea    rcx,[rsp+0x30]
   14001c20b:	mov    r8d,esi
   14001c20e:	mov    edx,r12d
   14001c211:	mov    QWORD PTR [rsp+0x20],rax
   14001c216:	call   0x14001a2c0
   14001c21b:	lea    rcx,[rdi+0x10]
   14001c21f:	lea    r9d,[r12+0x31]
   14001c224:	mov    QWORD PTR [rsp+0x20],rcx
   14001c229:	lea    rcx,[rsp+0x30]
   14001c22e:	mov    r8d,esi
   14001c231:	mov    edx,r12d
   14001c234:	mov    ebx,eax
   14001c236:	call   0x14001a2c0
   14001c23b:	lea    rcx,[rdi+0x18]
   14001c23f:	lea    r9d,[r12+0x32]
   14001c244:	mov    QWORD PTR [rsp+0x20],rcx
   14001c249:	lea    rcx,[rsp+0x30]
   14001c24e:	mov    r8d,esi
   14001c251:	mov    edx,r12d
   14001c254:	or     ebx,eax
   14001c256:	call   0x14001a2c0
   14001c25b:	lea    r9d,[r12+0x33]
   14001c260:	lea    rcx,[rsp+0x30]
   14001c265:	or     ebx,eax
   14001c267:	lea    rax,[rdi+0x20]
   14001c26b:	mov    r8d,esi
   14001c26e:	mov    edx,r12d
   14001c271:	mov    QWORD PTR [rsp+0x20],rax
   14001c276:	call   0x14001a2c0
   14001c27b:	lea    r9d,[r12+0x34]
   14001c280:	lea    rcx,[rsp+0x30]
   14001c285:	or     ebx,eax
   14001c287:	lea    rax,[rdi+0x28]
   14001c28b:	mov    r8d,esi
   14001c28e:	mov    edx,r12d
   14001c291:	mov    QWORD PTR [rsp+0x20],rax
   14001c296:	call   0x14001a2c0
   14001c29b:	lea    r9d,[r12+0x35]
   14001c2a0:	lea    rcx,[rsp+0x30]
   14001c2a5:	or     ebx,eax
   14001c2a7:	lea    rax,[rdi+0x30]
   14001c2ab:	mov    r8d,esi
   14001c2ae:	mov    edx,r12d
   14001c2b1:	mov    QWORD PTR [rsp+0x20],rax
   14001c2b6:	call   0x14001a2c0
   14001c2bb:	lea    r9d,[r12+0x36]
   14001c2c0:	lea    rcx,[rsp+0x30]
   14001c2c5:	mov    r8d,esi
   14001c2c8:	mov    edx,r12d
   14001c2cb:	mov    QWORD PTR [rsp+0x20],rdi
   14001c2d0:	or     ebx,eax
   14001c2d2:	call   0x14001a2c0
   14001c2d7:	lea    r9d,[r12+0x29]
   14001c2dc:	or     ebx,eax
   14001c2de:	lea    rax,[rdi+0x40]
   14001c2e2:	lea    rcx,[rsp+0x30]
   14001c2e7:	mov    r8d,esi
   14001c2ea:	mov    edx,r12d
   14001c2ed:	mov    QWORD PTR [rsp+0x20],rax
   14001c2f2:	call   0x14001a2c0
   14001c2f7:	lea    r9d,[r12+0x2a]
   14001c2fc:	lea    rcx,[rsp+0x30]
   14001c301:	or     ebx,eax
   14001c303:	lea    rax,[rdi+0x48]
   14001c307:	mov    r8d,esi
   14001c30a:	mov    edx,r12d
   14001c30d:	mov    QWORD PTR [rsp+0x20],rax
   14001c312:	call   0x14001a2c0
   14001c317:	lea    r9d,[r12+0x2b]
   14001c31c:	lea    rcx,[rsp+0x30]
   14001c321:	or     ebx,eax
   14001c323:	lea    rax,[rdi+0x50]
   14001c327:	mov    r8d,esi
   14001c32a:	mov    edx,r12d
   14001c32d:	mov    QWORD PTR [rsp+0x20],rax
   14001c332:	call   0x14001a2c0
   14001c337:	or     ebx,eax
   14001c339:	lea    rax,[rdi+0x58]
   14001c33d:	lea    r9d,[r12+0x2c]
   14001c342:	lea    rcx,[rsp+0x30]
   14001c347:	mov    r8d,esi
   14001c34a:	mov    edx,r12d
   14001c34d:	mov    QWORD PTR [rsp+0x20],rax
   14001c352:	call   0x14001a2c0
   14001c357:	lea    r9d,[r12+0x2d]
   14001c35c:	or     ebx,eax
   14001c35e:	lea    rax,[rdi+0x60]
   14001c362:	lea    rcx,[rsp+0x30]
   14001c367:	mov    r8d,esi
   14001c36a:	mov    edx,r12d
   14001c36d:	mov    QWORD PTR [rsp+0x20],rax
   14001c372:	call   0x14001a2c0
   14001c377:	lea    r9d,[r12+0x2e]
   14001c37c:	lea    rcx,[rsp+0x30]
   14001c381:	or     ebx,eax
   14001c383:	lea    rax,[rdi+0x68]
   14001c387:	mov    r8d,esi
   14001c38a:	mov    edx,r12d
   14001c38d:	mov    QWORD PTR [rsp+0x20],rax
   14001c392:	call   0x14001a2c0
   14001c397:	lea    r9d,[r12+0x2f]
   14001c39c:	lea    rcx,[rsp+0x30]
   14001c3a1:	or     ebx,eax
   14001c3a3:	lea    rax,[rdi+0x38]
   14001c3a7:	mov    r8d,esi
   14001c3aa:	mov    edx,r12d
   14001c3ad:	mov    QWORD PTR [rsp+0x20],rax
   14001c3b2:	call   0x14001a2c0
   14001c3b7:	lea    r9d,[r12+0x43]
   14001c3bc:	lea    rcx,[rsp+0x30]
   14001c3c1:	or     ebx,eax
   14001c3c3:	lea    rax,[rdi+0x70]
   14001c3c7:	mov    r8d,esi
   14001c3ca:	mov    edx,r12d
   14001c3cd:	mov    QWORD PTR [rsp+0x20],rax
   14001c3d2:	call   0x14001a2c0
   14001c3d7:	lea    r9d,[r12+0x44]
   14001c3dc:	lea    rcx,[rsp+0x30]
   14001c3e1:	or     ebx,eax
   14001c3e3:	lea    rax,[rdi+0x78]
   14001c3e7:	mov    r8d,esi
   14001c3ea:	mov    edx,r12d
   14001c3ed:	mov    QWORD PTR [rsp+0x20],rax
   14001c3f2:	call   0x14001a2c0
   14001c3f7:	lea    r9d,[r12+0x45]
   14001c3fc:	lea    rcx,[rsp+0x30]
   14001c401:	or     ebx,eax
   14001c403:	lea    rax,[rdi+0x80]
   14001c40a:	mov    r8d,esi
   14001c40d:	mov    edx,r12d
   14001c410:	mov    QWORD PTR [rsp+0x20],rax
   14001c415:	call   0x14001a2c0
   14001c41a:	lea    r9d,[r12+0x46]
   14001c41f:	lea    rcx,[rsp+0x30]
   14001c424:	or     ebx,eax
   14001c426:	lea    rax,[rdi+0x88]
   14001c42d:	mov    r8d,esi
   14001c430:	mov    edx,r12d
   14001c433:	mov    QWORD PTR [rsp+0x20],rax
   14001c438:	call   0x14001a2c0
   14001c43d:	lea    r9d,[r12+0x47]
   14001c442:	lea    rcx,[rsp+0x30]
   14001c447:	or     ebx,eax
   14001c449:	lea    rax,[rdi+0x90]
   14001c450:	mov    r8d,esi
   14001c453:	mov    edx,r12d
   14001c456:	mov    QWORD PTR [rsp+0x20],rax
   14001c45b:	call   0x14001a2c0
   14001c460:	lea    r9d,[r12+0x48]
   14001c465:	lea    rcx,[rsp+0x30]
   14001c46a:	or     ebx,eax
   14001c46c:	lea    rax,[rdi+0x98]
   14001c473:	mov    r8d,esi
   14001c476:	mov    edx,r12d
   14001c479:	mov    QWORD PTR [rsp+0x20],rax
   14001c47e:	call   0x14001a2c0
   14001c483:	or     ebx,eax
   14001c485:	lea    rax,[rdi+0xa0]
   14001c48c:	lea    r9d,[r12+0x49]
   14001c491:	lea    rcx,[rsp+0x30]
   14001c496:	mov    r8d,esi
   14001c499:	mov    edx,r12d
   14001c49c:	mov    QWORD PTR [rsp+0x20],rax
   14001c4a1:	call   0x14001a2c0
   14001c4a6:	lea    r9d,[r12+0x4a]
   14001c4ab:	lea    rcx,[rsp+0x30]
   14001c4b0:	or     ebx,eax
   14001c4b2:	lea    rax,[rdi+0xa8]
   14001c4b9:	mov    r8d,esi
   14001c4bc:	mov    edx,r12d
   14001c4bf:	mov    QWORD PTR [rsp+0x20],rax
   14001c4c4:	call   0x14001a2c0
   14001c4c9:	lea    r9d,[r12+0x4b]
   14001c4ce:	lea    rcx,[rsp+0x30]
   14001c4d3:	or     ebx,eax
   14001c4d5:	lea    rax,[rdi+0xb0]
   14001c4dc:	mov    r8d,esi
   14001c4df:	mov    edx,r12d
   14001c4e2:	mov    QWORD PTR [rsp+0x20],rax
   14001c4e7:	call   0x14001a2c0
   14001c4ec:	lea    r9d,[r12+0x4c]
   14001c4f1:	lea    rcx,[rsp+0x30]
   14001c4f6:	or     ebx,eax
   14001c4f8:	lea    rax,[rdi+0xb8]
   14001c4ff:	mov    r8d,esi
   14001c502:	mov    edx,r12d
   14001c505:	mov    QWORD PTR [rsp+0x20],rax
   14001c50a:	call   0x14001a2c0
   14001c50f:	lea    r9d,[r12+0x4d]
   14001c514:	lea    rcx,[rsp+0x30]
   14001c519:	or     ebx,eax
   14001c51b:	lea    rax,[rdi+0xc0]
   14001c522:	mov    r8d,esi
   14001c525:	mov    edx,r12d
   14001c528:	mov    QWORD PTR [rsp+0x20],rax
   14001c52d:	call   0x14001a2c0
   14001c532:	lea    r9d,[r12+0x4e]
   14001c537:	lea    rcx,[rsp+0x30]
   14001c53c:	or     ebx,eax
   14001c53e:	lea    rax,[rdi+0xc8]
   14001c545:	mov    r8d,esi
   14001c548:	mov    edx,r12d
   14001c54b:	mov    QWORD PTR [rsp+0x20],rax
   14001c550:	call   0x14001a2c0
   14001c555:	lea    r9d,[r12+0x37]
   14001c55a:	lea    rcx,[rsp+0x30]
   14001c55f:	or     ebx,eax
   14001c561:	lea    rax,[rdi+0xd0]
   14001c568:	mov    r8d,esi
   14001c56b:	mov    edx,r12d
   14001c56e:	mov    QWORD PTR [rsp+0x20],rax
   14001c573:	call   0x14001a2c0
   14001c578:	lea    r9d,[r12+0x38]
   14001c57d:	lea    rcx,[rsp+0x30]
   14001c582:	or     ebx,eax
   14001c584:	lea    rax,[rdi+0xd8]
   14001c58b:	mov    r8d,esi
   14001c58e:	mov    edx,r12d
   14001c591:	mov    QWORD PTR [rsp+0x20],rax
   14001c596:	call   0x14001a2c0
   14001c59b:	lea    r9d,[r12+0x39]
   14001c5a0:	lea    rcx,[rsp+0x30]
   14001c5a5:	or     ebx,eax
   14001c5a7:	lea    rax,[rdi+0xe0]
   14001c5ae:	mov    r8d,esi
   14001c5b1:	mov    edx,r12d
   14001c5b4:	mov    QWORD PTR [rsp+0x20],rax
   14001c5b9:	call   0x14001a2c0
   14001c5be:	lea    r9d,[r12+0x3a]
   14001c5c3:	lea    rcx,[rsp+0x30]
   14001c5c8:	or     ebx,eax
   14001c5ca:	lea    rax,[rdi+0xe8]
   14001c5d1:	mov    r8d,esi
   14001c5d4:	mov    edx,r12d
   14001c5d7:	mov    QWORD PTR [rsp+0x20],rax
   14001c5dc:	call   0x14001a2c0
   14001c5e1:	or     ebx,eax
   14001c5e3:	lea    rax,[rdi+0xf0]
   14001c5ea:	lea    r9d,[r12+0x3b]
   14001c5ef:	lea    rcx,[rsp+0x30]
   14001c5f4:	mov    r8d,esi
   14001c5f7:	mov    edx,r12d
   14001c5fa:	mov    QWORD PTR [rsp+0x20],rax
   14001c5ff:	call   0x14001a2c0
   14001c604:	lea    r9d,[r12+0x3c]
   14001c609:	lea    rcx,[rsp+0x30]
   14001c60e:	or     ebx,eax
   14001c610:	lea    rax,[rdi+0xf8]
   14001c617:	mov    r8d,esi
   14001c61a:	mov    edx,r12d
   14001c61d:	mov    QWORD PTR [rsp+0x20],rax
   14001c622:	call   0x14001a2c0
   14001c627:	lea    r9d,[r12+0x3d]
   14001c62c:	lea    rcx,[rsp+0x30]
   14001c631:	or     ebx,eax
   14001c633:	lea    rax,[rdi+0x100]
   14001c63a:	mov    r8d,esi
   14001c63d:	mov    edx,r12d
   14001c640:	mov    QWORD PTR [rsp+0x20],rax
   14001c645:	call   0x14001a2c0
   14001c64a:	lea    r9d,[r12+0x3e]
   14001c64f:	lea    rcx,[rsp+0x30]
   14001c654:	or     ebx,eax
   14001c656:	lea    rax,[rdi+0x108]
   14001c65d:	mov    r8d,esi
   14001c660:	mov    edx,r12d
   14001c663:	mov    QWORD PTR [rsp+0x20],rax
   14001c668:	call   0x14001a2c0
   14001c66d:	lea    r9d,[r12+0x3f]
   14001c672:	lea    rcx,[rsp+0x30]
   14001c677:	or     ebx,eax
   14001c679:	lea    rax,[rdi+0x110]
   14001c680:	mov    r8d,esi
   14001c683:	mov    edx,r12d
   14001c686:	mov    QWORD PTR [rsp+0x20],rax
   14001c68b:	call   0x14001a2c0
   14001c690:	lea    r9d,[r12+0x40]
   14001c695:	lea    rcx,[rsp+0x30]
   14001c69a:	or     ebx,eax
   14001c69c:	lea    rax,[rdi+0x118]
   14001c6a3:	mov    r8d,esi
   14001c6a6:	mov    edx,r12d
   14001c6a9:	mov    QWORD PTR [rsp+0x20],rax
   14001c6ae:	call   0x14001a2c0
   14001c6b3:	lea    r9d,[r12+0x41]
   14001c6b8:	lea    rcx,[rsp+0x30]
   14001c6bd:	or     ebx,eax
   14001c6bf:	lea    rax,[rdi+0x120]
   14001c6c6:	mov    r8d,esi
   14001c6c9:	mov    edx,r12d
   14001c6cc:	mov    QWORD PTR [rsp+0x20],rax
   14001c6d1:	call   0x14001a2c0
   14001c6d6:	lea    r9d,[r12+0x42]
   14001c6db:	lea    rcx,[rsp+0x30]
   14001c6e0:	or     ebx,eax
   14001c6e2:	lea    rax,[rdi+0x128]
   14001c6e9:	mov    r8d,esi
   14001c6ec:	mov    edx,r12d
   14001c6ef:	mov    QWORD PTR [rsp+0x20],rax
   14001c6f4:	call   0x14001a2c0
   14001c6f9:	lea    r9d,[r12+0x27]
   14001c6fe:	lea    rcx,[rsp+0x30]
   14001c703:	or     ebx,eax
   14001c705:	lea    rax,[rdi+0x130]
   14001c70c:	mov    r8d,esi
   14001c70f:	mov    edx,r12d
   14001c712:	mov    QWORD PTR [rsp+0x20],rax
   14001c717:	call   0x14001a2c0
   14001c71c:	lea    r9d,[r12+0x28]
   14001c721:	lea    rcx,[rsp+0x30]
   14001c726:	or     ebx,eax
   14001c728:	lea    rax,[rdi+0x138]
   14001c72f:	mov    r8d,esi
   14001c732:	mov    edx,r12d
   14001c735:	mov    QWORD PTR [rsp+0x20],rax
   14001c73a:	call   0x14001a2c0
   14001c73f:	or     ebx,eax
   14001c741:	lea    rax,[rdi+0x140]
   14001c748:	mov    QWORD PTR [rsp+0x20],rax
   14001c74d:	lea    r9d,[r12+0x1e]
   14001c752:	lea    rcx,[rsp+0x30]
   14001c757:	mov    r8d,ebp
   14001c75a:	mov    edx,r12d
   14001c75d:	call   0x14001a2c0
   14001c762:	lea    r9d,[r12+0x1f]
   14001c767:	lea    rcx,[rsp+0x30]
   14001c76c:	or     ebx,eax
   14001c76e:	lea    rax,[rdi+0x148]
   14001c775:	mov    r8d,ebp
   14001c778:	mov    edx,r12d
   14001c77b:	mov    QWORD PTR [rsp+0x20],rax
   14001c780:	call   0x14001a2c0
   14001c785:	lea    rcx,[rsp+0x30]
   14001c78a:	mov    r9d,0x1003
   14001c790:	or     ebx,eax
   14001c792:	lea    rax,[rdi+0x150]
   14001c799:	mov    r8d,ebp
   14001c79c:	mov    edx,r12d
   14001c79f:	mov    QWORD PTR [rsp+0x20],rax
   14001c7a4:	call   0x14001a2c0
   14001c7a9:	lea    rcx,[rsp+0x30]
   14001c7ae:	mov    r9d,0x1009
   14001c7b4:	or     ebx,eax
   14001c7b6:	lea    rax,[rdi+0x15c]
   14001c7bd:	mov    r8d,ebp
   14001c7c0:	xor    edx,edx
   14001c7c2:	mov    QWORD PTR [rsp+0x20],rax
   14001c7c7:	call   0x14001a2c0
   14001c7cc:	mov    DWORD PTR [rdi+0x158],ebp
   14001c7d2:	or     eax,ebx
   14001c7d4:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c7d9:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c7de:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c7e3:	mov    rdi,QWORD PTR [rsp+0x68]
   14001c7e8:	add    rsp,0x40
   14001c7ec:	pop    r12
   14001c7ee:	ret    
   14001c7ef:	int3   
   14001c7f0:	test   rcx,rcx
   14001c7f3:	je     0x14001c9d9
   14001c7f9:	push   rbx
   14001c7fa:	sub    rsp,0x20
   14001c7fe:	mov    rbx,rcx
   14001c801:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c805:	call   0x1400098ac
   14001c80a:	mov    rcx,QWORD PTR [rbx+0x10]
   14001c80e:	call   0x1400098ac
   14001c813:	mov    rcx,QWORD PTR [rbx+0x18]
   14001c817:	call   0x1400098ac
   14001c81c:	mov    rcx,QWORD PTR [rbx+0x20]
   14001c820:	call   0x1400098ac
   14001c825:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c829:	call   0x1400098ac
   14001c82e:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c832:	call   0x1400098ac
   14001c837:	mov    rcx,QWORD PTR [rbx]
   14001c83a:	call   0x1400098ac
   14001c83f:	mov    rcx,QWORD PTR [rbx+0x40]
   14001c843:	call   0x1400098ac
   14001c848:	mov    rcx,QWORD PTR [rbx+0x48]
   14001c84c:	call   0x1400098ac
   14001c851:	mov    rcx,QWORD PTR [rbx+0x50]
   14001c855:	call   0x1400098ac
   14001c85a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001c85e:	call   0x1400098ac
   14001c863:	mov    rcx,QWORD PTR [rbx+0x60]
   14001c867:	call   0x1400098ac
   14001c86c:	mov    rcx,QWORD PTR [rbx+0x68]
   14001c870:	call   0x1400098ac
   14001c875:	mov    rcx,QWORD PTR [rbx+0x38]
   14001c879:	call   0x1400098ac
   14001c87e:	mov    rcx,QWORD PTR [rbx+0x70]
   14001c882:	call   0x1400098ac
   14001c887:	mov    rcx,QWORD PTR [rbx+0x78]
   14001c88b:	call   0x1400098ac
   14001c890:	mov    rcx,QWORD PTR [rbx+0x80]
   14001c897:	call   0x1400098ac
   14001c89c:	mov    rcx,QWORD PTR [rbx+0x88]
   14001c8a3:	call   0x1400098ac
   14001c8a8:	mov    rcx,QWORD PTR [rbx+0x90]
   14001c8af:	call   0x1400098ac
   14001c8b4:	mov    rcx,QWORD PTR [rbx+0x98]
   14001c8bb:	call   0x1400098ac
   14001c8c0:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001c8c7:	call   0x1400098ac
   14001c8cc:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001c8d3:	call   0x1400098ac
   14001c8d8:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001c8df:	call   0x1400098ac
   14001c8e4:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001c8eb:	call   0x1400098ac
   14001c8f0:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001c8f7:	call   0x1400098ac
   14001c8fc:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001c903:	call   0x1400098ac
   14001c908:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001c90f:	call   0x1400098ac
   14001c914:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001c91b:	call   0x1400098ac
   14001c920:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001c927:	call   0x1400098ac
   14001c92c:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001c933:	call   0x1400098ac
   14001c938:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001c93f:	call   0x1400098ac
   14001c944:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001c94b:	call   0x1400098ac
   14001c950:	mov    rcx,QWORD PTR [rbx+0x100]
   14001c957:	call   0x1400098ac
   14001c95c:	mov    rcx,QWORD PTR [rbx+0x108]
   14001c963:	call   0x1400098ac
   14001c968:	mov    rcx,QWORD PTR [rbx+0x110]
   14001c96f:	call   0x1400098ac
   14001c974:	mov    rcx,QWORD PTR [rbx+0x118]
   14001c97b:	call   0x1400098ac
   14001c980:	mov    rcx,QWORD PTR [rbx+0x120]
   14001c987:	call   0x1400098ac
   14001c98c:	mov    rcx,QWORD PTR [rbx+0x128]
   14001c993:	call   0x1400098ac
   14001c998:	mov    rcx,QWORD PTR [rbx+0x130]
   14001c99f:	call   0x1400098ac
   14001c9a4:	mov    rcx,QWORD PTR [rbx+0x138]
   14001c9ab:	call   0x1400098ac
   14001c9b0:	mov    rcx,QWORD PTR [rbx+0x140]
   14001c9b7:	call   0x1400098ac
   14001c9bc:	mov    rcx,QWORD PTR [rbx+0x148]
   14001c9c3:	call   0x1400098ac
   14001c9c8:	mov    rcx,QWORD PTR [rbx+0x150]
   14001c9cf:	call   0x1400098ac
   14001c9d4:	add    rsp,0x20
   14001c9d8:	pop    rbx
   14001c9d9:	ret    
   14001c9da:	int3   
   14001c9db:	int3   
   14001c9dc:	mov    QWORD PTR [rsp+0x8],rbx
   14001c9e1:	mov    QWORD PTR [rsp+0x10],rbp
   14001c9e6:	push   rdi
   14001c9e7:	sub    rsp,0x20
   14001c9eb:	cmp    DWORD PTR [rcx+0x20],0x0
   14001c9ef:	mov    rdi,rcx
   14001c9f2:	lea    rbp,[rip+0x17c77]        # 0x140034670
   14001c9f9:	je     0x14001ca46
   14001c9fb:	mov    edx,0x168
   14001ca00:	mov    ecx,0x1
   14001ca05:	call   0x140012c6c
   14001ca0a:	mov    rbx,rax
   14001ca0d:	test   rax,rax
   14001ca10:	jne    0x14001ca19
   14001ca12:	mov    eax,0x1
   14001ca17:	jmp    0x14001ca66
   14001ca19:	mov    rdx,rdi
   14001ca1c:	mov    rcx,rax
   14001ca1f:	call   0x14001c1bc
   14001ca24:	test   eax,eax
   14001ca26:	je     0x14001ca3a
   14001ca28:	mov    rcx,rbx
   14001ca2b:	call   0x14001c7f0
   14001ca30:	mov    rcx,rbx
   14001ca33:	call   0x1400098ac
   14001ca38:	jmp    0x14001ca12
   14001ca3a:	mov    DWORD PTR [rbx+0x160],0x1
   14001ca44:	jmp    0x14001ca49
   14001ca46:	mov    rbx,rbp
   14001ca49:	mov    rax,QWORD PTR [rdi+0x158]
   14001ca50:	cmp    rax,rbp
   14001ca53:	je     0x14001ca5d
   14001ca55:	lock add DWORD PTR [rax+0x160],0xffffffff
   14001ca5d:	mov    QWORD PTR [rdi+0x158],rbx
   14001ca64:	xor    eax,eax
   14001ca66:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ca6b:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ca70:	add    rsp,0x20
   14001ca74:	pop    rdi
   14001ca75:	ret    
   14001ca76:	int3   
   14001ca77:	int3   
   14001ca78:	xor    r9d,r9d
   14001ca7b:	mov    rdx,rcx
   14001ca7e:	cmp    BYTE PTR [rcx],r9b
   14001ca81:	je     0x14001ca99
   14001ca83:	mov    al,BYTE PTR [rdx]
   14001ca85:	cmp    al,0x30
   14001ca87:	jl     0x14001ca9b
   14001ca89:	cmp    al,0x39
   14001ca8b:	jg     0x14001ca9b
   14001ca8d:	sub    al,0x30
   14001ca8f:	mov    BYTE PTR [rdx],al
   14001ca91:	inc    rdx
   14001ca94:	cmp    BYTE PTR [rdx],r9b
   14001ca97:	jne    0x14001ca83
   14001ca99:	repz ret 
   14001ca9b:	cmp    al,0x3b
   14001ca9d:	jne    0x14001ca91
   14001ca9f:	mov    r8,rdx
   14001caa2:	mov    al,BYTE PTR [r8+0x1]
   14001caa6:	mov    BYTE PTR [r8],al
   14001caa9:	inc    r8
   14001caac:	cmp    al,r9b
   14001caaf:	jne    0x14001caa2
   14001cab1:	jmp    0x14001ca94
   14001cab3:	int3   
   14001cab4:	test   rcx,rcx
   14001cab7:	je     0x14001cafb
   14001cab9:	push   rbx
   14001caba:	sub    rsp,0x20
   14001cabe:	mov    rbx,rcx
   14001cac1:	mov    rcx,QWORD PTR [rcx]
   14001cac4:	cmp    rcx,QWORD PTR [rip+0x18b55]        # 0x140035620
   14001cacb:	je     0x14001cad2
   14001cacd:	call   0x1400098ac
   14001cad2:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cad6:	cmp    rcx,QWORD PTR [rip+0x18b4b]        # 0x140035628
   14001cadd:	je     0x14001cae4
   14001cadf:	call   0x1400098ac
   14001cae4:	mov    rcx,QWORD PTR [rbx+0x10]
   14001cae8:	cmp    rcx,QWORD PTR [rip+0x18b41]        # 0x140035630
   14001caef:	je     0x14001caf6
   14001caf1:	call   0x1400098ac
   14001caf6:	add    rsp,0x20
   14001cafa:	pop    rbx
   14001cafb:	ret    
   14001cafc:	mov    rax,rsp
   14001caff:	mov    QWORD PTR [rax+0x8],rbx
   14001cb03:	mov    QWORD PTR [rax+0x10],rbp
   14001cb07:	mov    QWORD PTR [rax+0x18],rsi
   14001cb0b:	push   rdi
   14001cb0c:	push   r12
   14001cb0e:	push   r13
   14001cb10:	push   r14
   14001cb12:	push   r15
   14001cb14:	sub    rsp,0x40
   14001cb18:	xor    ebx,ebx
   14001cb1a:	mov    rsi,rcx
   14001cb1d:	mov    QWORD PTR [rax-0x38],rcx
   14001cb21:	mov    QWORD PTR [rax-0x30],rbx
   14001cb25:	cmp    DWORD PTR [rcx+0x1c],ebx
   14001cb28:	jne    0x14001cb41
   14001cb2a:	cmp    DWORD PTR [rcx+0x18],ebx
   14001cb2d:	jne    0x14001cb41
   14001cb2f:	mov    r13,rbx
   14001cb32:	mov    r14,rbx
   14001cb35:	lea    rbp,[rip+0x18ae4]        # 0x140035620
   14001cb3c:	jmp    0x14001cc99
   14001cb41:	mov    edi,0x58
   14001cb46:	mov    rdx,rdi
   14001cb49:	lea    r12d,[rdi-0x57]
   14001cb4d:	mov    rcx,r12
   14001cb50:	call   0x140012c6c
   14001cb55:	mov    rbp,rax
   14001cb58:	cmp    rax,rbx
   14001cb5b:	jne    0x14001cb65
   14001cb5d:	mov    eax,r12d
   14001cb60:	jmp    0x14001ccea
   14001cb65:	mov    rdx,QWORD PTR [rsi+0x128]
   14001cb6c:	mov    rcx,rax
   14001cb6f:	mov    r8,rdi
   14001cb72:	call   0x140008b00
   14001cb77:	mov    edi,0x4
   14001cb7c:	mov    rcx,rdi
   14001cb7f:	call   0x140012c00
   14001cb84:	mov    r14,rax
   14001cb87:	cmp    rax,rbx
   14001cb8a:	jne    0x14001cb96
   14001cb8c:	mov    rcx,rbp
   14001cb8f:	call   0x1400098ac
   14001cb94:	jmp    0x14001cb5d
   14001cb96:	mov    DWORD PTR [rax],ebx
   14001cb98:	cmp    DWORD PTR [rsi+0x1c],ebx
   14001cb9b:	je     0x14001cc69
   14001cba1:	mov    rcx,rdi
   14001cba4:	call   0x140012c00
   14001cba9:	mov    r13,rax
   14001cbac:	cmp    rax,rbx
   14001cbaf:	je     0x14001cc24
   14001cbb1:	mov    DWORD PTR [rax],ebx
   14001cbb3:	movzx  edi,WORD PTR [rsi+0x3e]
   14001cbb7:	lea    rcx,[rsp+0x30]
   14001cbbc:	mov    r9d,0xe
   14001cbc2:	mov    edx,r12d
   14001cbc5:	mov    r8d,edi
   14001cbc8:	mov    QWORD PTR [rsp+0x20],rbp
   14001cbcd:	call   0x14001a2c0
   14001cbd2:	lea    rcx,[rbp+0x8]
   14001cbd6:	mov    QWORD PTR [rsp+0x20],rcx
   14001cbdb:	lea    rcx,[rsp+0x30]
   14001cbe0:	mov    r9d,0xf
   14001cbe6:	mov    r8d,edi
   14001cbe9:	mov    edx,r12d
   14001cbec:	mov    ebx,eax
   14001cbee:	call   0x14001a2c0
   14001cbf3:	lea    r15,[rbp+0x10]
   14001cbf7:	lea    rcx,[rsp+0x30]
   14001cbfc:	mov    r9d,0x10
   14001cc02:	mov    r8d,edi
   14001cc05:	mov    edx,r12d
   14001cc08:	or     ebx,eax
   14001cc0a:	mov    QWORD PTR [rsp+0x20],r15
   14001cc0f:	call   0x14001a2c0
   14001cc14:	or     eax,ebx
   14001cc16:	je     0x14001cc34
   14001cc18:	mov    rcx,rbp
   14001cc1b:	call   0x14001cab4
   14001cc20:	or     r12d,0xffffffff
   14001cc24:	mov    rcx,rbp
   14001cc27:	call   0x1400098ac
   14001cc2c:	mov    rcx,r14
   14001cc2f:	jmp    0x14001cb8f
   14001cc34:	mov    rdx,QWORD PTR [r15]
   14001cc37:	xor    ebx,ebx
   14001cc39:	jmp    0x14001cc4c
   14001cc3b:	mov    al,BYTE PTR [rdx]
   14001cc3d:	cmp    al,0x30
   14001cc3f:	jl     0x14001cc52
   14001cc41:	cmp    al,0x39
   14001cc43:	jg     0x14001cc52
   14001cc45:	sub    al,0x30
   14001cc47:	mov    BYTE PTR [rdx],al
   14001cc49:	add    rdx,r12
   14001cc4c:	cmp    BYTE PTR [rdx],bl
   14001cc4e:	jne    0x14001cc3b
   14001cc50:	jmp    0x14001cc8d
   14001cc52:	cmp    al,0x3b
   14001cc54:	jne    0x14001cc49
   14001cc56:	mov    r8,rdx
   14001cc59:	mov    al,BYTE PTR [r8+0x1]
   14001cc5d:	mov    BYTE PTR [r8],al
   14001cc60:	inc    r8
   14001cc63:	cmp    al,bl
   14001cc65:	jne    0x14001cc59
   14001cc67:	jmp    0x14001cc4c
   14001cc69:	mov    rax,QWORD PTR [rip+0x189b0]        # 0x140035620
   14001cc70:	mov    r13,rbx
   14001cc73:	mov    QWORD PTR [rbp+0x0],rax
   14001cc77:	mov    rax,QWORD PTR [rip+0x189aa]        # 0x140035628
   14001cc7e:	mov    QWORD PTR [rbp+0x8],rax
   14001cc82:	mov    rax,QWORD PTR [rip+0x189a7]        # 0x140035630
   14001cc89:	mov    QWORD PTR [rbp+0x10],rax
   14001cc8d:	mov    DWORD PTR [r14],r12d
   14001cc90:	cmp    r13,rbx
   14001cc93:	je     0x14001cc99
   14001cc95:	mov    DWORD PTR [r13+0x0],r12d
   14001cc99:	mov    rax,QWORD PTR [rsi+0x118]
   14001cca0:	cmp    rax,rbx
   14001cca3:	je     0x14001cca9
   14001cca5:	lock add DWORD PTR [rax],0xffffffff
   14001cca9:	mov    rcx,QWORD PTR [rsi+0x110]
   14001ccb0:	cmp    rcx,rbx
   14001ccb3:	je     0x14001ccd3
   14001ccb5:	lock add DWORD PTR [rcx],0xffffffff
   14001ccb9:	jne    0x14001ccd3
   14001ccbb:	mov    rcx,QWORD PTR [rsi+0x110]
   14001ccc2:	call   0x1400098ac
   14001ccc7:	mov    rcx,QWORD PTR [rsi+0x128]
   14001ccce:	call   0x1400098ac
   14001ccd3:	mov    QWORD PTR [rsi+0x118],r13
   14001ccda:	mov    QWORD PTR [rsi+0x110],r14
   14001cce1:	mov    QWORD PTR [rsi+0x128],rbp
   14001cce8:	xor    eax,eax
   14001ccea:	lea    r11,[rsp+0x40]
   14001ccef:	mov    rbx,QWORD PTR [r11+0x30]
   14001ccf3:	mov    rbp,QWORD PTR [r11+0x38]
   14001ccf7:	mov    rsi,QWORD PTR [r11+0x40]
   14001ccfb:	mov    rsp,r11
   14001ccfe:	pop    r15
   14001cd00:	pop    r14
   14001cd02:	pop    r13
   14001cd04:	pop    r12
   14001cd06:	pop    rdi
   14001cd07:	ret    
   14001cd08:	xor    r9d,r9d
   14001cd0b:	mov    rdx,rcx
   14001cd0e:	cmp    BYTE PTR [rcx],r9b
   14001cd11:	je     0x14001cd29
   14001cd13:	mov    al,BYTE PTR [rdx]
   14001cd15:	cmp    al,0x30
   14001cd17:	jl     0x14001cd2b
   14001cd19:	cmp    al,0x39
   14001cd1b:	jg     0x14001cd2b
   14001cd1d:	sub    al,0x30
   14001cd1f:	mov    BYTE PTR [rdx],al
   14001cd21:	inc    rdx
   14001cd24:	cmp    BYTE PTR [rdx],r9b
   14001cd27:	jne    0x14001cd13
   14001cd29:	repz ret 
   14001cd2b:	cmp    al,0x3b
   14001cd2d:	jne    0x14001cd21
   14001cd2f:	mov    r8,rdx
   14001cd32:	mov    al,BYTE PTR [r8+0x1]
   14001cd36:	mov    BYTE PTR [r8],al
   14001cd39:	inc    r8
   14001cd3c:	cmp    al,r9b
   14001cd3f:	jne    0x14001cd32
   14001cd41:	jmp    0x14001cd24
   14001cd43:	int3   
   14001cd44:	test   rcx,rcx
   14001cd47:	je     0x14001cdd8
   14001cd4d:	push   rbx
   14001cd4e:	sub    rsp,0x20
   14001cd52:	mov    rbx,rcx
   14001cd55:	mov    rcx,QWORD PTR [rcx+0x18]
   14001cd59:	cmp    rcx,QWORD PTR [rip+0x188d8]        # 0x140035638
   14001cd60:	je     0x14001cd67
   14001cd62:	call   0x1400098ac
   14001cd67:	mov    rcx,QWORD PTR [rbx+0x20]
   14001cd6b:	cmp    rcx,QWORD PTR [rip+0x188ce]        # 0x140035640
   14001cd72:	je     0x14001cd79
   14001cd74:	call   0x1400098ac
   14001cd79:	mov    rcx,QWORD PTR [rbx+0x28]
   14001cd7d:	cmp    rcx,QWORD PTR [rip+0x188c4]        # 0x140035648
   14001cd84:	je     0x14001cd8b
   14001cd86:	call   0x1400098ac
   14001cd8b:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cd8f:	cmp    rcx,QWORD PTR [rip+0x188ba]        # 0x140035650
   14001cd96:	je     0x14001cd9d
   14001cd98:	call   0x1400098ac
   14001cd9d:	mov    rcx,QWORD PTR [rbx+0x38]
   14001cda1:	cmp    rcx,QWORD PTR [rip+0x188b0]        # 0x140035658
   14001cda8:	je     0x14001cdaf
   14001cdaa:	call   0x1400098ac
   14001cdaf:	mov    rcx,QWORD PTR [rbx+0x40]
   14001cdb3:	cmp    rcx,QWORD PTR [rip+0x188a6]        # 0x140035660
   14001cdba:	je     0x14001cdc1
   14001cdbc:	call   0x1400098ac
   14001cdc1:	mov    rcx,QWORD PTR [rbx+0x48]
   14001cdc5:	cmp    rcx,QWORD PTR [rip+0x1889c]        # 0x140035668
   14001cdcc:	je     0x14001cdd3
   14001cdce:	call   0x1400098ac
   14001cdd3:	add    rsp,0x20
   14001cdd7:	pop    rbx
   14001cdd8:	ret    
   14001cdd9:	int3   
   14001cdda:	int3   
   14001cddb:	int3   
   14001cddc:	mov    rax,rsp
   14001cddf:	mov    QWORD PTR [rax+0x8],rbx
   14001cde3:	mov    QWORD PTR [rax+0x10],rbp
   14001cde7:	mov    QWORD PTR [rax+0x18],rsi
   14001cdeb:	mov    QWORD PTR [rax+0x20],rdi
   14001cdef:	push   r12
   14001cdf1:	push   r13
   14001cdf3:	push   r14
   14001cdf5:	sub    rsp,0x40
   14001cdf9:	xor    r12d,r12d
   14001cdfc:	mov    rsi,rcx
   14001cdff:	mov    QWORD PTR [rax-0x28],rcx
   14001ce03:	and    QWORD PTR [rax-0x20],r12
   14001ce07:	cmp    DWORD PTR [rcx+0x18],r12d
   14001ce0b:	jne    0x14001ce22
   14001ce0d:	cmp    DWORD PTR [rcx+0x1c],r12d
   14001ce11:	jne    0x14001ce22
   14001ce13:	xor    r13d,r13d
   14001ce16:	lea    rbp,[rip+0x18803]        # 0x140035620
   14001ce1d:	jmp    0x14001d12b
   14001ce22:	mov    edi,0x58
   14001ce27:	mov    rdx,rdi
   14001ce2a:	lea    ecx,[rdi-0x57]
   14001ce2d:	call   0x140012c6c
   14001ce32:	mov    rbp,rax
   14001ce35:	test   rax,rax
   14001ce38:	jne    0x14001ce44
   14001ce3a:	mov    eax,0x1
   14001ce3f:	jmp    0x14001d17c
   14001ce44:	mov    ebx,0x4
   14001ce49:	mov    rcx,rbx
   14001ce4c:	call   0x140012c00
   14001ce51:	mov    r13,rax
   14001ce54:	test   rax,rax
   14001ce57:	jne    0x14001ce63
   14001ce59:	mov    rcx,rbp
   14001ce5c:	call   0x1400098ac
   14001ce61:	jmp    0x14001ce3a
   14001ce63:	and    DWORD PTR [rax],r12d
   14001ce66:	cmp    DWORD PTR [rsi+0x18],r12d
   14001ce6a:	je     0x14001d0d8
   14001ce70:	mov    rcx,rbx
   14001ce73:	call   0x140012c00
   14001ce78:	mov    r12,rax
   14001ce7b:	test   rax,rax
   14001ce7e:	jne    0x14001ce8d
   14001ce80:	mov    rcx,rbp
   14001ce83:	call   0x1400098ac
   14001ce88:	mov    rcx,r13
   14001ce8b:	jmp    0x14001ce5c
   14001ce8d:	and    DWORD PTR [rax],0x0
   14001ce90:	movzx  edi,WORD PTR [rsi+0x38]
   14001ce94:	mov    r9d,0x15
   14001ce9a:	lea    rax,[rbp+0x18]
   14001ce9e:	lea    edx,[r9-0x14]
   14001cea2:	lea    rcx,[rsp+0x30]
   14001cea7:	mov    r8d,edi
   14001ceaa:	mov    QWORD PTR [rsp+0x20],rax
   14001ceaf:	call   0x14001a2c0
   14001ceb4:	lea    rcx,[rbp+0x20]
   14001ceb8:	mov    r9d,0x14
   14001cebe:	mov    QWORD PTR [rsp+0x20],rcx
   14001cec3:	lea    edx,[r9-0x13]
   14001cec7:	lea    rcx,[rsp+0x30]
   14001cecc:	mov    r8d,edi
   14001cecf:	mov    ebx,eax
   14001ced1:	call   0x14001a2c0
   14001ced6:	lea    rcx,[rbp+0x28]
   14001ceda:	mov    r9d,0x16
   14001cee0:	mov    QWORD PTR [rsp+0x20],rcx
   14001cee5:	lea    edx,[r9-0x15]
   14001cee9:	lea    rcx,[rsp+0x30]
   14001ceee:	mov    r8d,edi
   14001cef1:	or     ebx,eax
   14001cef3:	call   0x14001a2c0
   14001cef8:	mov    r9d,0x17
   14001cefe:	lea    rcx,[rsp+0x30]
   14001cf03:	or     ebx,eax
   14001cf05:	lea    rax,[rbp+0x30]
   14001cf09:	lea    edx,[r9-0x16]
   14001cf0d:	mov    r8d,edi
   14001cf10:	mov    QWORD PTR [rsp+0x20],rax
   14001cf15:	call   0x14001a2c0
   14001cf1a:	mov    r9d,0x18
   14001cf20:	lea    r14,[rbp+0x38]
   14001cf24:	lea    rcx,[rsp+0x30]
   14001cf29:	lea    edx,[r9-0x17]
   14001cf2d:	mov    r8d,edi
   14001cf30:	or     ebx,eax
   14001cf32:	mov    QWORD PTR [rsp+0x20],r14
   14001cf37:	call   0x14001a2c0
   14001cf3c:	mov    r9d,0x50
   14001cf42:	or     ebx,eax
   14001cf44:	lea    rax,[rbp+0x40]
   14001cf48:	lea    rcx,[rsp+0x30]
   14001cf4d:	lea    edx,[r9-0x4f]
   14001cf51:	mov    r8d,edi
   14001cf54:	mov    QWORD PTR [rsp+0x20],rax
   14001cf59:	call   0x14001a2c0
   14001cf5e:	mov    r9d,0x51
   14001cf64:	or     ebx,eax
   14001cf66:	lea    rax,[rbp+0x48]
   14001cf6a:	lea    rcx,[rsp+0x30]
   14001cf6f:	lea    edx,[r9-0x50]
   14001cf73:	mov    r8d,edi
   14001cf76:	mov    QWORD PTR [rsp+0x20],rax
   14001cf7b:	call   0x14001a2c0
   14001cf80:	lea    rcx,[rsp+0x30]
   14001cf85:	mov    r9d,0x1a
   14001cf8b:	or     ebx,eax
   14001cf8d:	lea    rax,[rbp+0x50]
   14001cf91:	mov    r8d,edi
   14001cf94:	xor    edx,edx
   14001cf96:	mov    QWORD PTR [rsp+0x20],rax
   14001cf9b:	call   0x14001a2c0
   14001cfa0:	lea    rcx,[rsp+0x30]
   14001cfa5:	mov    r9d,0x19
   14001cfab:	or     ebx,eax
   14001cfad:	lea    rax,[rbp+0x51]
   14001cfb1:	mov    r8d,edi
   14001cfb4:	xor    edx,edx
   14001cfb6:	mov    QWORD PTR [rsp+0x20],rax
   14001cfbb:	call   0x14001a2c0
   14001cfc0:	lea    rcx,[rsp+0x30]
   14001cfc5:	mov    r9d,0x54
   14001cfcb:	or     ebx,eax
   14001cfcd:	lea    rax,[rbp+0x52]
   14001cfd1:	mov    r8d,edi
   14001cfd4:	xor    edx,edx
   14001cfd6:	mov    QWORD PTR [rsp+0x20],rax
   14001cfdb:	call   0x14001a2c0
   14001cfe0:	or     ebx,eax
   14001cfe2:	lea    rax,[rbp+0x53]
   14001cfe6:	lea    rcx,[rsp+0x30]
   14001cfeb:	mov    r9d,0x55
   14001cff1:	mov    r8d,edi
   14001cff4:	xor    edx,edx
   14001cff6:	mov    QWORD PTR [rsp+0x20],rax
   14001cffb:	call   0x14001a2c0
   14001d000:	lea    rcx,[rsp+0x30]
   14001d005:	or     ebx,eax
   14001d007:	lea    rax,[rbp+0x54]
   14001d00b:	mov    r9d,0x56
   14001d011:	mov    r8d,edi
   14001d014:	xor    edx,edx
   14001d016:	mov    QWORD PTR [rsp+0x20],rax
   14001d01b:	call   0x14001a2c0
   14001d020:	lea    rcx,[rsp+0x30]
   14001d025:	mov    r9d,0x57
   14001d02b:	or     ebx,eax
   14001d02d:	lea    rax,[rbp+0x55]
   14001d031:	mov    r8d,edi
   14001d034:	xor    edx,edx
   14001d036:	mov    QWORD PTR [rsp+0x20],rax
   14001d03b:	call   0x14001a2c0
   14001d040:	lea    rcx,[rsp+0x30]
   14001d045:	mov    r9d,0x52
   14001d04b:	or     ebx,eax
   14001d04d:	lea    rax,[rbp+0x56]
   14001d051:	mov    r8d,edi
   14001d054:	xor    edx,edx
   14001d056:	mov    QWORD PTR [rsp+0x20],rax
   14001d05b:	call   0x14001a2c0
   14001d060:	lea    rcx,[rsp+0x30]
   14001d065:	mov    r9d,0x53
   14001d06b:	or     ebx,eax
   14001d06d:	lea    rax,[rbp+0x57]
   14001d071:	mov    r8d,edi
   14001d074:	xor    edx,edx
   14001d076:	mov    QWORD PTR [rsp+0x20],rax
   14001d07b:	call   0x14001a2c0
   14001d080:	or     eax,ebx
   14001d082:	je     0x14001d0a4
   14001d084:	mov    rcx,rbp
   14001d087:	call   0x14001cd44
   14001d08c:	mov    rcx,rbp
   14001d08f:	call   0x1400098ac
   14001d094:	mov    rcx,r13
   14001d097:	call   0x1400098ac
   14001d09c:	mov    rcx,r12
   14001d09f:	jmp    0x14001ce5c
   14001d0a4:	mov    rdx,QWORD PTR [r14]
   14001d0a7:	jmp    0x14001d0ba
   14001d0a9:	mov    al,BYTE PTR [rdx]
   14001d0ab:	cmp    al,0x30
   14001d0ad:	jl     0x14001d0c1
   14001d0af:	cmp    al,0x39
   14001d0b1:	jg     0x14001d0c1
   14001d0b3:	sub    al,0x30
   14001d0b5:	mov    BYTE PTR [rdx],al
   14001d0b7:	inc    rdx
   14001d0ba:	cmp    BYTE PTR [rdx],0x0
   14001d0bd:	jne    0x14001d0a9
   14001d0bf:	jmp    0x14001d0ea
   14001d0c1:	cmp    al,0x3b
   14001d0c3:	jne    0x14001d0b7
   14001d0c5:	mov    r8,rdx
   14001d0c8:	mov    al,BYTE PTR [r8+0x1]
   14001d0cc:	mov    BYTE PTR [r8],al
   14001d0cf:	inc    r8
   14001d0d2:	cmp    al,0x0
   14001d0d4:	jne    0x14001d0c8
   14001d0d6:	jmp    0x14001d0ba
   14001d0d8:	lea    rdx,[rip+0x18541]        # 0x140035620
   14001d0df:	mov    rcx,rbp
   14001d0e2:	mov    r8,rdi
   14001d0e5:	call   0x140008b00
   14001d0ea:	mov    rax,QWORD PTR [rsi+0x128]
   14001d0f1:	mov    rcx,QWORD PTR [rax]
   14001d0f4:	mov    QWORD PTR [rbp+0x0],rcx
   14001d0f8:	mov    rax,QWORD PTR [rsi+0x128]
   14001d0ff:	mov    rcx,QWORD PTR [rax+0x8]
   14001d103:	mov    QWORD PTR [rbp+0x8],rcx
   14001d107:	mov    rax,QWORD PTR [rsi+0x128]
   14001d10e:	mov    rcx,QWORD PTR [rax+0x10]
   14001d112:	mov    QWORD PTR [rbp+0x10],rcx
   14001d116:	mov    DWORD PTR [r13+0x0],0x1
   14001d11e:	test   r12,r12
   14001d121:	je     0x14001d12b
   14001d123:	mov    DWORD PTR [r12],0x1
   14001d12b:	mov    rax,QWORD PTR [rsi+0x120]
   14001d132:	test   rax,rax
   14001d135:	je     0x14001d13b
   14001d137:	lock add DWORD PTR [rax],0xffffffff
   14001d13b:	mov    rcx,QWORD PTR [rsi+0x110]
   14001d142:	test   rcx,rcx
   14001d145:	je     0x14001d165
   14001d147:	lock add DWORD PTR [rcx],0xffffffff
   14001d14b:	jne    0x14001d165
   14001d14d:	mov    rcx,QWORD PTR [rsi+0x128]
   14001d154:	call   0x1400098ac
   14001d159:	mov    rcx,QWORD PTR [rsi+0x110]
   14001d160:	call   0x1400098ac
   14001d165:	mov    QWORD PTR [rsi+0x120],r12
   14001d16c:	mov    QWORD PTR [rsi+0x110],r13
   14001d173:	mov    QWORD PTR [rsi+0x128],rbp
   14001d17a:	xor    eax,eax
   14001d17c:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d181:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d186:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d18b:	mov    rdi,QWORD PTR [rsp+0x78]
   14001d190:	add    rsp,0x40
   14001d194:	pop    r14
   14001d196:	pop    r13
   14001d198:	pop    r12
   14001d19a:	ret    
   14001d19b:	int3   
   14001d19c:	xor    eax,eax
   14001d19e:	ret    
   14001d19f:	int3   
   14001d1a0:	sub    rsp,0x28
   14001d1a4:	call   0x1400118e4
   14001d1a9:	mov    rcx,QWORD PTR [rip+0x17f20]        # 0x1400350d0
   14001d1b0:	cmp    QWORD PTR [rax+0xc0],rcx
   14001d1b7:	je     0x14001d1cc
   14001d1b9:	mov    eax,DWORD PTR [rax+0xc8]
   14001d1bf:	test   DWORD PTR [rip+0x17d93],eax        # 0x140034f58
   14001d1c5:	jne    0x14001d1cc
   14001d1c7:	call   0x140010580
   14001d1cc:	mov    rax,QWORD PTR [rip+0x184a5]        # 0x140035678
   14001d1d3:	add    rsp,0x28
   14001d1d7:	ret    
   14001d1d8:	rex push rbx
   14001d1da:	sub    rsp,0x30
   14001d1de:	mov    r9,rcx
   14001d1e1:	test   rcx,rcx
   14001d1e4:	je     0x14001d1f3
   14001d1e6:	test   rdx,rdx
   14001d1e9:	je     0x14001d1f3
   14001d1eb:	test   r8,r8
   14001d1ee:	jne    0x14001d21c
   14001d1f0:	mov    BYTE PTR [rcx],r8b
   14001d1f3:	call   0x14000f574
   14001d1f8:	mov    ebx,0x16
   14001d1fd:	and    QWORD PTR [rsp+0x20],0x0
   14001d203:	xor    r9d,r9d
   14001d206:	xor    r8d,r8d
   14001d209:	xor    edx,edx
   14001d20b:	xor    ecx,ecx
   14001d20d:	mov    DWORD PTR [rax],ebx
   14001d20f:	call   0x14000e4d8
   14001d214:	mov    eax,ebx
   14001d216:	add    rsp,0x30
   14001d21a:	pop    rbx
   14001d21b:	ret    
   14001d21c:	cmp    BYTE PTR [rcx],0x0
   14001d21f:	je     0x14001d22a
   14001d221:	inc    rcx
   14001d224:	sub    rdx,0x1
   14001d228:	jne    0x14001d21c
   14001d22a:	test   rdx,rdx
   14001d22d:	jne    0x14001d234
   14001d22f:	mov    BYTE PTR [r9],dl
   14001d232:	jmp    0x14001d1f3
   14001d234:	mov    al,BYTE PTR [r8]
   14001d237:	inc    r8
   14001d23a:	mov    BYTE PTR [rcx],al
   14001d23c:	inc    rcx
   14001d23f:	test   al,al
   14001d241:	je     0x14001d249
   14001d243:	sub    rdx,0x1
   14001d247:	jne    0x14001d234
   14001d249:	test   rdx,rdx
   14001d24c:	jne    0x14001d25d
   14001d24e:	mov    BYTE PTR [r9],dl
   14001d251:	call   0x14000f574
   14001d256:	mov    ebx,0x22
   14001d25b:	jmp    0x14001d1fd
   14001d25d:	xor    eax,eax
   14001d25f:	jmp    0x14001d216
   14001d261:	int3   
   14001d262:	int3   
   14001d263:	int3   
   14001d264:	sub    rsp,0x38
   14001d268:	mov    rax,QWORD PTR [rip+0x17031]        # 0x1400342a0
   14001d26f:	xor    rax,rsp
   14001d272:	mov    QWORD PTR [rsp+0x20],rax
   14001d277:	mov    al,BYTE PTR [rdx]
   14001d279:	xor    r9d,r9d
   14001d27c:	mov    r11,rdx
   14001d27f:	mov    QWORD PTR [rsp],r9
   14001d283:	mov    QWORD PTR [rsp+0x8],r9
   14001d288:	mov    QWORD PTR [rsp+0x10],r9
   14001d28d:	mov    QWORD PTR [rsp+0x18],r9
   14001d292:	mov    r10,rcx
   14001d295:	jmp    0x14001d2b3
   14001d297:	movzx  r8d,al
   14001d29b:	movzx  eax,al
   14001d29e:	and    eax,0x7
   14001d2a1:	shr    r8,0x3
   14001d2a5:	mov    cl,al
   14001d2a7:	shl    dl,cl
   14001d2a9:	or     BYTE PTR [rsp+r8*1],dl
   14001d2ad:	inc    r11
   14001d2b0:	mov    al,BYTE PTR [r11]
   14001d2b3:	mov    edx,0x1
   14001d2b8:	cmp    al,r9b
   14001d2bb:	jne    0x14001d297
   14001d2bd:	or     BYTE PTR [rsp],dl
   14001d2c0:	jmp    0x14001d2cd
   14001d2c2:	inc    r9d
   14001d2c5:	mov    edx,0x1
   14001d2ca:	inc    r10
   14001d2cd:	movzx  r8d,BYTE PTR [r10]
   14001d2d1:	mov    ecx,r8d
   14001d2d4:	shr    r8,0x3
   14001d2d8:	and    ecx,0x7
   14001d2db:	shl    edx,cl
   14001d2dd:	test   BYTE PTR [rsp+r8*1],dl
   14001d2e1:	je     0x14001d2c2
   14001d2e3:	movsxd rax,r9d
   14001d2e6:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d2eb:	xor    rcx,rsp
   14001d2ee:	call   0x140009080
   14001d2f3:	add    rsp,0x38
   14001d2f7:	ret    
   14001d2f8:	mov    rax,rsp
   14001d2fb:	mov    QWORD PTR [rax+0x8],rbx
   14001d2ff:	mov    QWORD PTR [rax+0x10],rbp
   14001d303:	mov    QWORD PTR [rax+0x18],rsi
   14001d307:	mov    QWORD PTR [rax+0x20],rdi
   14001d30b:	push   r12
   14001d30d:	push   r13
   14001d30f:	push   r14
   14001d311:	sub    rsp,0x20
   14001d315:	xor    ebx,ebx
   14001d317:	mov    r13,r8
   14001d31a:	mov    edi,edx
   14001d31c:	cmp    edx,ebx
   14001d31e:	mov    r14,rcx
   14001d321:	mov    eax,0x1
   14001d326:	mov    esi,ebx
   14001d328:	jl     0x14001d369
   14001d32a:	cmp    eax,ebx
   14001d32c:	je     0x14001d36b
   14001d32e:	mov    rcx,QWORD PTR [r13+0x0]
   14001d332:	lea    eax,[rsi+rdi*1]
   14001d335:	cdq    
   14001d336:	sub    eax,edx
   14001d338:	sar    eax,1
   14001d33a:	movsxd rbp,eax
   14001d33d:	mov    r12,rbp
   14001d340:	add    r12,r12
   14001d343:	mov    rdx,QWORD PTR [r14+r12*8]
   14001d347:	call   0x140018934
   14001d34c:	cmp    eax,ebx
   14001d34e:	jne    0x14001d35b
   14001d350:	lea    rcx,[r14+r12*8+0x8]
   14001d355:	mov    QWORD PTR [r13+0x0],rcx
   14001d359:	jmp    0x14001d365
   14001d35b:	jge    0x14001d362
   14001d35d:	lea    edi,[rbp-0x1]
   14001d360:	jmp    0x14001d365
   14001d362:	lea    esi,[rbp+0x1]
   14001d365:	cmp    esi,edi
   14001d367:	jle    0x14001d32a
   14001d369:	cmp    eax,ebx
   14001d36b:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d370:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d375:	mov    rdi,QWORD PTR [rsp+0x58]
   14001d37a:	sete   bl
   14001d37d:	mov    eax,ebx
   14001d37f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d384:	add    rsp,0x20
   14001d388:	pop    r14
   14001d38a:	pop    r13
   14001d38c:	pop    r12
   14001d38e:	ret    
   14001d38f:	int3   
   14001d390:	rex push rbx
   14001d392:	sub    rsp,0x20
   14001d396:	or     DWORD PTR [rcx+0x10],0x104
   14001d39d:	mov    rbx,rcx
   14001d3a0:	call   QWORD PTR [rip+0x9e02]        # 0x1400271a8
   14001d3a6:	mov    DWORD PTR [rbx+0x24],eax
   14001d3a9:	mov    DWORD PTR [rbx+0x20],eax
   14001d3ac:	add    rsp,0x20
   14001d3b0:	pop    rbx
   14001d3b1:	ret    
   14001d3b2:	int3   
   14001d3b3:	int3   
   14001d3b4:	mov    QWORD PTR [rsp+0x18],rbx
   14001d3b9:	push   rdi
   14001d3ba:	sub    rsp,0x30
   14001d3be:	mov    rax,QWORD PTR [rip+0x16edb]        # 0x1400342a0
   14001d3c5:	xor    rax,rsp
   14001d3c8:	mov    QWORD PTR [rsp+0x28],rax
   14001d3cd:	mov    rdi,rdx
   14001d3d0:	mov    rbx,rcx
   14001d3d3:	test   rcx,rcx
   14001d3d6:	je     0x14001d43e
   14001d3d8:	cmp    BYTE PTR [rcx],0x0
   14001d3db:	je     0x14001d43e
   14001d3dd:	lea    rdx,[rip+0x12788]        # 0x14002fb6c
   14001d3e4:	call   0x14001ad50
   14001d3e9:	test   eax,eax
   14001d3eb:	je     0x14001d43e
   14001d3ed:	lea    rdx,[rip+0x12774]        # 0x14002fb68
   14001d3f4:	mov    rcx,rbx
   14001d3f7:	call   0x14001ad50
   14001d3fc:	test   eax,eax
   14001d3fe:	jne    0x14001d41e
   14001d400:	mov    ecx,DWORD PTR [rdi+0x24]
   14001d403:	lea    r9d,[rax+0x8]
   14001d407:	lea    r8,[rsp+0x20]
   14001d40c:	lea    edx,[rax+0xb]
   14001d40f:	call   QWORD PTR [rip+0x9d8b]        # 0x1400271a0
   14001d415:	test   eax,eax
   14001d417:	je     0x14001d45b
   14001d419:	lea    rbx,[rsp+0x20]
   14001d41e:	mov    rcx,rbx
   14001d421:	call   0x14001ac14
   14001d426:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d42b:	xor    rcx,rsp
   14001d42e:	call   0x140009080
   14001d433:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d438:	add    rsp,0x30
   14001d43c:	pop    rdi
   14001d43d:	ret    
   14001d43e:	mov    ecx,DWORD PTR [rdi+0x24]
   14001d441:	lea    r8,[rsp+0x20]
   14001d446:	mov    r9d,0x8
   14001d44c:	mov    edx,0x1004
   14001d451:	call   QWORD PTR [rip+0x9d49]        # 0x1400271a0
   14001d457:	test   eax,eax
   14001d459:	jne    0x14001d45f
   14001d45b:	xor    eax,eax
   14001d45d:	jmp    0x14001d426
   14001d45f:	lea    rdx,[rip+0x126fe]        # 0x14002fb64
   14001d466:	lea    rcx,[rsp+0x20]
   14001d46b:	call   0x14001ad50
   14001d470:	test   eax,eax
   14001d472:	jne    0x14001d419
   14001d474:	call   QWORD PTR [rip+0x9f4e]        # 0x1400273c8
   14001d47a:	jmp    0x14001d426
   14001d47c:	xor    r8d,r8d
   14001d47f:	lea    rdx,[rip+0x126ca]        # 0x14002fb50
   14001d486:	lea    eax,[r8+0x1]
   14001d48a:	cmp    cx,WORD PTR [rdx]
   14001d48d:	je     0x14001d49e
   14001d48f:	add    r8d,eax
   14001d492:	add    rdx,0x2
   14001d496:	cmp    r8d,0xa
   14001d49a:	jb     0x14001d48a
   14001d49c:	repz ret 
   14001d49e:	xor    eax,eax
   14001d4a0:	ret    
   14001d4a1:	int3   
   14001d4a2:	int3   
   14001d4a3:	int3   
   14001d4a4:	mov    dl,BYTE PTR [rcx]
   14001d4a6:	mov    r8,rcx
   14001d4a9:	xor    r9d,r9d
   14001d4ac:	jmp    0x14001d4d5
   14001d4ae:	lea    eax,[rdx-0x61]
   14001d4b1:	inc    r8
   14001d4b4:	cmp    al,0x5
   14001d4b6:	ja     0x14001d4bd
   14001d4b8:	add    dl,0xd9
   14001d4bb:	jmp    0x14001d4c7
   14001d4bd:	lea    eax,[rdx-0x41]
   14001d4c0:	cmp    al,0x5
   14001d4c2:	ja     0x14001d4c7
   14001d4c4:	add    dl,0xf9
   14001d4c7:	movsx  ecx,dl
   14001d4ca:	mov    dl,BYTE PTR [r8]
   14001d4cd:	add    r9d,r9d
   14001d4d0:	lea    r9d,[rcx+r9*8-0x30]
   14001d4d5:	test   dl,dl
   14001d4d7:	jne    0x14001d4ae
   14001d4d9:	mov    eax,r9d
   14001d4dc:	ret    
   14001d4dd:	int3   
   14001d4de:	int3   
   14001d4df:	int3   
   14001d4e0:	xor    edx,edx
   14001d4e2:	mov    al,BYTE PTR [rcx]
   14001d4e4:	inc    rcx
   14001d4e7:	cmp    al,0x41
   14001d4e9:	jl     0x14001d4ef
   14001d4eb:	cmp    al,0x5a
   14001d4ed:	jle    0x14001d4f5
   14001d4ef:	sub    al,0x61
   14001d4f1:	cmp    al,0x19
   14001d4f3:	ja     0x14001d4f9
   14001d4f5:	inc    edx
   14001d4f7:	jmp    0x14001d4e2
   14001d4f9:	mov    eax,edx
   14001d4fb:	ret    
   14001d4fc:	mov    QWORD PTR [rsp+0x10],rbx
   14001d501:	mov    QWORD PTR [rsp+0x18],rsi
   14001d506:	push   rdi
   14001d507:	sub    rsp,0xb0
   14001d50e:	mov    rax,QWORD PTR [rip+0x16d8b]        # 0x1400342a0
   14001d515:	xor    rax,rsp
   14001d518:	mov    QWORD PTR [rsp+0xa0],rax
   14001d520:	mov    rbx,rcx
   14001d523:	call   0x1400118e4
   14001d528:	mov    rcx,rbx
   14001d52b:	mov    rdi,rax
   14001d52e:	call   0x14001d4a4
   14001d533:	mov    ecx,DWORD PTR [rdi+0x15c]
   14001d539:	neg    ecx
   14001d53b:	lea    r8,[rsp+0x20]
   14001d540:	mov    r9d,0x78
   14001d546:	sbb    edx,edx
   14001d548:	mov    ecx,eax
   14001d54a:	mov    esi,eax
   14001d54c:	and    edx,0xfffff005
   14001d552:	add    edx,0x1002
   14001d558:	call   QWORD PTR [rip+0x9c42]        # 0x1400271a0
   14001d55e:	xor    ebx,ebx
   14001d560:	cmp    eax,ebx
   14001d562:	jne    0x14001d56f
   14001d564:	mov    DWORD PTR [rdi+0x150],ebx
   14001d56a:	lea    eax,[rbx+0x1]
   14001d56d:	jmp    0x14001d5bc
   14001d56f:	mov    rcx,QWORD PTR [rdi+0x148]
   14001d576:	lea    rdx,[rsp+0x20]
   14001d57b:	call   0x140018934
   14001d580:	cmp    eax,ebx
   14001d582:	jne    0x14001d5ae
   14001d584:	lea    rax,[rip+0x125c5]        # 0x14002fb50
   14001d58b:	cmp    si,WORD PTR [rax]
   14001d58e:	je     0x14001d5ae
   14001d590:	inc    ebx
   14001d592:	add    rax,0x2
   14001d596:	cmp    ebx,0xa
   14001d599:	jb     0x14001d58b
   14001d59b:	or     DWORD PTR [rdi+0x150],0x4
   14001d5a2:	mov    DWORD PTR [rdi+0x164],esi
   14001d5a8:	mov    DWORD PTR [rdi+0x160],esi
   14001d5ae:	mov    eax,DWORD PTR [rdi+0x150]
   14001d5b4:	shr    eax,0x2
   14001d5b7:	not    eax
   14001d5b9:	and    eax,0x1
   14001d5bc:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001d5c4:	xor    rcx,rsp
   14001d5c7:	call   0x140009080
   14001d5cc:	lea    r11,[rsp+0xb0]
   14001d5d4:	mov    rbx,QWORD PTR [r11+0x18]
   14001d5d8:	mov    rsi,QWORD PTR [r11+0x20]
   14001d5dc:	mov    rsp,r11
   14001d5df:	pop    rdi
   14001d5e0:	ret    
   14001d5e1:	int3   
   14001d5e2:	int3   
   14001d5e3:	int3   
   14001d5e4:	mov    QWORD PTR [rsp+0x10],rbx
   14001d5e9:	push   rbp
   14001d5ea:	push   rsi
   14001d5eb:	push   rdi
   14001d5ec:	sub    rsp,0xb0
   14001d5f3:	mov    rax,QWORD PTR [rip+0x16ca6]        # 0x1400342a0
   14001d5fa:	xor    rax,rsp
   14001d5fd:	mov    QWORD PTR [rsp+0xa0],rax
   14001d605:	mov    esi,ecx
   14001d607:	mov    r9d,0x78
   14001d60d:	and    ecx,0x3ff
   14001d613:	mov    rbp,r8
   14001d616:	mov    edi,edx
   14001d618:	lea    edx,[r9-0x77]
   14001d61c:	lea    r8,[rsp+0x20]
   14001d621:	bts    ecx,0xa
   14001d625:	call   QWORD PTR [rip+0x9b75]        # 0x1400271a0
   14001d62b:	xor    ebx,ebx
   14001d62d:	cmp    eax,ebx
   14001d62f:	jne    0x14001d635
   14001d631:	xor    eax,eax
   14001d633:	jmp    0x14001d674
   14001d635:	lea    rcx,[rsp+0x20]
   14001d63a:	call   0x14001d4a4
   14001d63f:	cmp    esi,eax
   14001d641:	je     0x14001d66f
   14001d643:	cmp    edi,ebx
   14001d645:	je     0x14001d66f
   14001d647:	mov    rcx,QWORD PTR [rbp+0x0]
   14001d64b:	mov    al,BYTE PTR [rcx]
   14001d64d:	inc    rcx
   14001d650:	cmp    al,0x41
   14001d652:	jl     0x14001d658
   14001d654:	cmp    al,0x5a
   14001d656:	jle    0x14001d65e
   14001d658:	sub    al,0x61
   14001d65a:	cmp    al,0x19
   14001d65c:	ja     0x14001d662
   14001d65e:	inc    ebx
   14001d660:	jmp    0x14001d64b
   14001d662:	mov    rcx,QWORD PTR [rbp+0x0]
   14001d666:	call   0x140012e10
   14001d66b:	cmp    ebx,eax
   14001d66d:	je     0x14001d631
   14001d66f:	mov    eax,0x1
   14001d674:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001d67c:	xor    rcx,rsp
   14001d67f:	call   0x140009080
   14001d684:	mov    rbx,QWORD PTR [rsp+0xd8]
   14001d68c:	add    rsp,0xb0
   14001d693:	pop    rdi
   14001d694:	pop    rsi
   14001d695:	pop    rbp
   14001d696:	ret    
   14001d697:	int3   
   14001d698:	mov    QWORD PTR [rsp+0x10],rbx
   14001d69d:	mov    QWORD PTR [rsp+0x18],rbp
   14001d6a2:	push   rdi
   14001d6a3:	sub    rsp,0xb0
   14001d6aa:	mov    rax,QWORD PTR [rip+0x16bef]        # 0x1400342a0
   14001d6b1:	xor    rax,rsp
   14001d6b4:	mov    QWORD PTR [rsp+0xa0],rax
   14001d6bc:	mov    rbx,rcx
   14001d6bf:	call   0x1400118e4
   14001d6c4:	mov    rcx,rbx
   14001d6c7:	mov    rdi,rax
   14001d6ca:	call   0x14001d4a4
   14001d6cf:	mov    ecx,DWORD PTR [rdi+0x15c]
   14001d6d5:	neg    ecx
   14001d6d7:	lea    r8,[rsp+0x20]
   14001d6dc:	mov    r9d,0x78
   14001d6e2:	sbb    edx,edx
   14001d6e4:	mov    ecx,eax
   14001d6e6:	mov    ebx,eax
   14001d6e8:	and    edx,0xfffff005
   14001d6ee:	add    edx,0x1002
   14001d6f4:	call   QWORD PTR [rip+0x9aa6]        # 0x1400271a0
   14001d6fa:	xor    ebp,ebp
   14001d6fc:	cmp    eax,ebp
   14001d6fe:	jne    0x14001d710
   14001d700:	mov    DWORD PTR [rdi+0x150],ebp
   14001d706:	mov    eax,0x1
   14001d70b:	jmp    0x14001d905
   14001d710:	mov    rcx,QWORD PTR [rdi+0x148]
   14001d717:	lea    rdx,[rsp+0x20]
   14001d71c:	call   0x140018934
   14001d721:	cmp    eax,ebp
   14001d723:	jne    0x14001d808
   14001d729:	mov    eax,DWORD PTR [rdi+0x158]
   14001d72f:	lea    r8,[rsp+0x20]
   14001d734:	mov    r9d,0x78
   14001d73a:	neg    eax
   14001d73c:	mov    ecx,ebx
   14001d73e:	sbb    edx,edx
   14001d740:	and    edx,0xfffff002
   14001d746:	add    edx,0x1001
   14001d74c:	call   QWORD PTR [rip+0x9a4e]        # 0x1400271a0
   14001d752:	cmp    eax,ebp
   14001d754:	je     0x14001d700
   14001d756:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d75d:	lea    rdx,[rsp+0x20]
   14001d762:	call   0x140018934
   14001d767:	cmp    eax,ebp
   14001d769:	jne    0x14001d780
   14001d76b:	or     DWORD PTR [rdi+0x150],0x304
   14001d775:	mov    DWORD PTR [rdi+0x160],ebx
   14001d77b:	jmp    0x14001d802
   14001d780:	test   BYTE PTR [rdi+0x150],0x2
   14001d787:	jne    0x14001d808
   14001d789:	cmp    DWORD PTR [rdi+0x154],ebp
   14001d78f:	je     0x14001d7d6
   14001d791:	movsxd r8,DWORD PTR [rdi+0x154]
   14001d798:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d79f:	lea    rdx,[rsp+0x20]
   14001d7a4:	call   0x14002419c
   14001d7a9:	cmp    eax,ebp
   14001d7ab:	jne    0x14001d7d6
   14001d7ad:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d7b4:	or     DWORD PTR [rdi+0x150],0x2
   14001d7bb:	mov    DWORD PTR [rdi+0x164],ebx
   14001d7c1:	call   0x140012e10
   14001d7c6:	cmp    eax,DWORD PTR [rdi+0x154]
   14001d7cc:	jne    0x14001d808
   14001d7ce:	mov    DWORD PTR [rdi+0x160],ebx
   14001d7d4:	jmp    0x14001d808
   14001d7d6:	mov    eax,DWORD PTR [rdi+0x150]
   14001d7dc:	test   al,0x1
   14001d7de:	jne    0x14001d808
   14001d7e0:	mov    edx,ebp
   14001d7e2:	lea    rcx,[rip+0x12367]        # 0x14002fb50
   14001d7e9:	cmp    bx,WORD PTR [rcx]
   14001d7ec:	je     0x14001d808
   14001d7ee:	inc    edx
   14001d7f0:	add    rcx,0x2
   14001d7f4:	cmp    edx,0xa
   14001d7f7:	jb     0x14001d7e9
   14001d7f9:	or     eax,0x1
   14001d7fc:	mov    DWORD PTR [rdi+0x150],eax
   14001d802:	mov    DWORD PTR [rdi+0x164],ebx
   14001d808:	mov    eax,DWORD PTR [rdi+0x150]
   14001d80e:	mov    ecx,0x300
   14001d813:	and    eax,ecx
   14001d815:	cmp    eax,ecx
   14001d817:	je     0x14001d8f7
   14001d81d:	mov    eax,DWORD PTR [rdi+0x158]
   14001d823:	lea    r8,[rsp+0x20]
   14001d828:	mov    r9d,0x78
   14001d82e:	neg    eax
   14001d830:	mov    ecx,ebx
   14001d832:	sbb    edx,edx
   14001d834:	and    edx,0xfffff002
   14001d83a:	add    edx,0x1001
   14001d840:	call   QWORD PTR [rip+0x995a]        # 0x1400271a0
   14001d846:	cmp    eax,ebp
   14001d848:	je     0x14001d700
   14001d84e:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d855:	lea    rdx,[rsp+0x20]
   14001d85a:	call   0x140018934
   14001d85f:	cmp    eax,ebp
   14001d861:	jne    0x14001d8a8
   14001d863:	bts    DWORD PTR [rdi+0x150],0x9
   14001d86b:	mov    eax,DWORD PTR [rdi+0x150]
   14001d871:	cmp    DWORD PTR [rdi+0x158],ebp
   14001d877:	je     0x14001d885
   14001d879:	bts    eax,0x8
   14001d87d:	mov    DWORD PTR [rdi+0x150],eax
   14001d883:	jmp    0x14001d8e9
   14001d885:	cmp    DWORD PTR [rdi+0x154],ebp
   14001d88b:	je     0x14001d8e1
   14001d88d:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d894:	call   0x140012e10
   14001d899:	cmp    eax,DWORD PTR [rdi+0x154]
   14001d89f:	jne    0x14001d8e1
   14001d8a1:	mov    edx,0x1
   14001d8a6:	jmp    0x14001d8cf
   14001d8a8:	cmp    DWORD PTR [rdi+0x158],ebp
   14001d8ae:	jne    0x14001d8f7
   14001d8b0:	cmp    DWORD PTR [rdi+0x154],ebp
   14001d8b6:	je     0x14001d8f7
   14001d8b8:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d8bf:	lea    rdx,[rsp+0x20]
   14001d8c4:	call   0x140018934
   14001d8c9:	cmp    eax,ebp
   14001d8cb:	jne    0x14001d8f7
   14001d8cd:	xor    edx,edx
   14001d8cf:	lea    r8,[rdi+0x140]
   14001d8d6:	mov    ecx,ebx
   14001d8d8:	call   0x14001d5e4
   14001d8dd:	cmp    eax,ebp
   14001d8df:	je     0x14001d8f7
   14001d8e1:	bts    DWORD PTR [rdi+0x150],0x8
   14001d8e9:	cmp    DWORD PTR [rdi+0x160],ebp
   14001d8ef:	jne    0x14001d8f7
   14001d8f1:	mov    DWORD PTR [rdi+0x160],ebx
   14001d8f7:	mov    eax,DWORD PTR [rdi+0x150]
   14001d8fd:	shr    eax,0x2
   14001d900:	not    eax
   14001d902:	and    eax,0x1
   14001d905:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001d90d:	xor    rcx,rsp
   14001d910:	call   0x140009080
   14001d915:	lea    r11,[rsp+0xb0]
   14001d91d:	mov    rbx,QWORD PTR [r11+0x18]
   14001d921:	mov    rbp,QWORD PTR [r11+0x20]
   14001d925:	mov    rsp,r11
   14001d928:	pop    rdi
   14001d929:	ret    
   14001d92a:	int3   
   14001d92b:	int3   
   14001d92c:	mov    QWORD PTR [rsp+0x10],rbx
   14001d931:	push   rdi
   14001d932:	sub    rsp,0xb0
   14001d939:	mov    rax,QWORD PTR [rip+0x16960]        # 0x1400342a0
   14001d940:	xor    rax,rsp
   14001d943:	mov    QWORD PTR [rsp+0xa0],rax
   14001d94b:	mov    rbx,rcx
   14001d94e:	call   0x1400118e4
   14001d953:	mov    rcx,rbx
   14001d956:	mov    rdi,rax
   14001d959:	call   0x14001d4a4
   14001d95e:	mov    ecx,DWORD PTR [rdi+0x158]
   14001d964:	neg    ecx
   14001d966:	lea    r8,[rsp+0x20]
   14001d96b:	mov    r9d,0x78
   14001d971:	sbb    edx,edx
   14001d973:	mov    ecx,eax
   14001d975:	mov    ebx,eax
   14001d977:	and    edx,0xfffff002
   14001d97d:	add    edx,0x1001
   14001d983:	call   QWORD PTR [rip+0x9817]        # 0x1400271a0
   14001d989:	test   eax,eax
   14001d98b:	jne    0x14001d99a
   14001d98d:	and    DWORD PTR [rdi+0x150],eax
   14001d993:	mov    eax,0x1
   14001d998:	jmp    0x14001da18
   14001d99a:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d9a1:	lea    rdx,[rsp+0x20]
   14001d9a6:	call   0x140018934
   14001d9ab:	test   eax,eax
   14001d9ad:	jne    0x14001d9bc
   14001d9af:	cmp    DWORD PTR [rdi+0x158],eax
   14001d9b5:	jne    0x14001d9f7
   14001d9b7:	lea    edx,[rax+0x1]
   14001d9ba:	jmp    0x14001d9e5
   14001d9bc:	cmp    DWORD PTR [rdi+0x158],0x0
   14001d9c3:	jne    0x14001da0a
   14001d9c5:	cmp    DWORD PTR [rdi+0x154],0x0
   14001d9cc:	je     0x14001da0a
   14001d9ce:	mov    rcx,QWORD PTR [rdi+0x140]
   14001d9d5:	lea    rdx,[rsp+0x20]
   14001d9da:	call   0x140018934
   14001d9df:	test   eax,eax
   14001d9e1:	jne    0x14001da0a
   14001d9e3:	xor    edx,edx
   14001d9e5:	lea    r8,[rdi+0x140]
   14001d9ec:	mov    ecx,ebx
   14001d9ee:	call   0x14001d5e4
   14001d9f3:	test   eax,eax
   14001d9f5:	je     0x14001da0a
   14001d9f7:	or     DWORD PTR [rdi+0x150],0x4
   14001d9fe:	mov    DWORD PTR [rdi+0x160],ebx
   14001da04:	mov    DWORD PTR [rdi+0x164],ebx
   14001da0a:	mov    eax,DWORD PTR [rdi+0x150]
   14001da10:	shr    eax,0x2
   14001da13:	not    eax
   14001da15:	and    eax,0x1
   14001da18:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001da20:	xor    rcx,rsp
   14001da23:	call   0x140009080
   14001da28:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001da30:	add    rsp,0xb0
   14001da37:	pop    rdi
   14001da38:	ret    
   14001da39:	int3   
   14001da3a:	int3   
   14001da3b:	int3   
   14001da3c:	rex push rbx
   14001da3e:	sub    rsp,0x20
   14001da42:	mov    rbx,rcx
   14001da45:	mov    rcx,QWORD PTR [rcx+0x8]
   14001da49:	call   0x140012e10
   14001da4e:	xor    edx,edx
   14001da50:	lea    rcx,[rip+0xfffffffffffffaa5]        # 0x14001d4fc
   14001da57:	cmp    rax,0x3
   14001da5b:	sete   dl
   14001da5e:	mov    DWORD PTR [rbx+0x1c],edx
   14001da61:	mov    edx,0x1
   14001da66:	call   QWORD PTR [rip+0x972c]        # 0x140027198
   14001da6c:	test   BYTE PTR [rbx+0x10],0x4
   14001da70:	jne    0x14001da76
   14001da72:	and    DWORD PTR [rbx+0x10],0x0
   14001da76:	add    rsp,0x20
   14001da7a:	pop    rbx
   14001da7b:	ret    
   14001da7c:	rex push rbx
   14001da7e:	sub    rsp,0x20
   14001da82:	mov    rbx,rcx
   14001da85:	mov    rcx,QWORD PTR [rcx]
   14001da88:	call   0x140012e10
   14001da8d:	mov    rcx,QWORD PTR [rbx+0x8]
   14001da91:	xor    edx,edx
   14001da93:	cmp    rax,0x3
   14001da97:	sete   dl
   14001da9a:	mov    DWORD PTR [rbx+0x18],edx
   14001da9d:	call   0x140012e10
   14001daa2:	xor    ecx,ecx
   14001daa4:	cmp    rax,0x3
   14001daa8:	sete   cl
   14001daab:	and    DWORD PTR [rbx+0x20],0x0
   14001daaf:	cmp    DWORD PTR [rbx+0x18],0x0
   14001dab3:	mov    DWORD PTR [rbx+0x1c],ecx
   14001dab6:	je     0x14001daf0
   14001dab8:	mov    edx,0x2
   14001dabd:	mov    DWORD PTR [rbx+0x14],edx
   14001dac0:	lea    rcx,[rip+0xfffffffffffffbd1]        # 0x14001d698
   14001dac7:	mov    edx,0x1
   14001dacc:	call   QWORD PTR [rip+0x96c6]        # 0x140027198
   14001dad2:	bt     DWORD PTR [rbx+0x10],0x8
   14001dad7:	jae    0x14001dae6
   14001dad9:	bt     DWORD PTR [rbx+0x10],0x9
   14001dade:	jae    0x14001dae6
   14001dae0:	test   BYTE PTR [rbx+0x10],0x7
   14001dae4:	jne    0x14001daea
   14001dae6:	and    DWORD PTR [rbx+0x10],0x0
   14001daea:	add    rsp,0x20
   14001daee:	pop    rbx
   14001daef:	ret    
   14001daf0:	mov    rax,QWORD PTR [rbx]
   14001daf3:	xor    edx,edx
   14001daf5:	mov    cl,BYTE PTR [rax]
   14001daf7:	inc    rax
   14001dafa:	cmp    cl,0x41
   14001dafd:	jl     0x14001db04
   14001daff:	cmp    cl,0x5a
   14001db02:	jle    0x14001db0c
   14001db04:	sub    cl,0x61
   14001db07:	cmp    cl,0x19
   14001db0a:	ja     0x14001dabd
   14001db0c:	inc    edx
   14001db0e:	jmp    0x14001daf5
   14001db10:	rex push rbx
   14001db12:	sub    rsp,0x20
   14001db16:	mov    rbx,rcx
   14001db19:	mov    rcx,QWORD PTR [rcx]
   14001db1c:	call   0x140012e10
   14001db21:	xor    edx,edx
   14001db23:	cmp    rax,0x3
   14001db27:	sete   dl
   14001db2a:	mov    DWORD PTR [rbx+0x18],edx
   14001db2d:	test   edx,edx
   14001db2f:	je     0x14001db5b
   14001db31:	mov    edx,0x2
   14001db36:	mov    DWORD PTR [rbx+0x14],edx
   14001db39:	lea    rcx,[rip+0xfffffffffffffdec]        # 0x14001d92c
   14001db40:	mov    edx,0x1
   14001db45:	call   QWORD PTR [rip+0x964d]        # 0x140027198
   14001db4b:	test   BYTE PTR [rbx+0x10],0x4
   14001db4f:	jne    0x14001db55
   14001db51:	and    DWORD PTR [rbx+0x10],0x0
   14001db55:	add    rsp,0x20
   14001db59:	pop    rbx
   14001db5a:	ret    
   14001db5b:	mov    rax,QWORD PTR [rbx]
   14001db5e:	xor    edx,edx
   14001db60:	mov    cl,BYTE PTR [rax]
   14001db62:	inc    rax
   14001db65:	cmp    cl,0x41
   14001db68:	jl     0x14001db6f
   14001db6a:	cmp    cl,0x5a
   14001db6d:	jle    0x14001db77
   14001db6f:	sub    cl,0x61
   14001db72:	cmp    cl,0x19
   14001db75:	ja     0x14001db36
   14001db77:	inc    edx
   14001db79:	jmp    0x14001db60
   14001db7b:	int3   
   14001db7c:	mov    rax,rsp
   14001db7f:	mov    QWORD PTR [rax+0x8],rbx
   14001db83:	mov    QWORD PTR [rax+0x10],rbp
   14001db87:	mov    QWORD PTR [rax+0x18],rsi
   14001db8b:	mov    QWORD PTR [rax+0x20],rdi
   14001db8f:	push   r12
   14001db91:	sub    rsp,0x30
   14001db95:	mov    r12,r8
   14001db98:	mov    rbp,rdx
   14001db9b:	mov    rsi,rcx
   14001db9e:	call   0x1400118e4
   14001dba3:	lea    rbx,[rax+0x140]
   14001dbaa:	test   rsi,rsi
   14001dbad:	jne    0x14001dbbb
   14001dbaf:	or     DWORD PTR [rbx+0x10],0x104
   14001dbb6:	jmp    0x14001dc9e
   14001dbbb:	lea    rax,[rsi+0x40]
   14001dbbf:	mov    QWORD PTR [rbx],rsi
   14001dbc2:	mov    QWORD PTR [rbx+0x8],rax
   14001dbc6:	test   rax,rax
   14001dbc9:	je     0x14001dbe5
   14001dbcb:	cmp    BYTE PTR [rax],0x0
   14001dbce:	je     0x14001dbe5
   14001dbd0:	lea    r8,[rbx+0x8]
   14001dbd4:	lea    rcx,[rip+0x11e05]        # 0x14002f9e0
   14001dbdb:	mov    edx,0x16
   14001dbe0:	call   0x14001d2f8
   14001dbe5:	mov    rax,QWORD PTR [rbx]
   14001dbe8:	and    DWORD PTR [rbx+0x10],0x0
   14001dbec:	test   rax,rax
   14001dbef:	je     0x14001dc5a
   14001dbf1:	cmp    BYTE PTR [rax],0x0
   14001dbf4:	je     0x14001dc5a
   14001dbf6:	mov    rax,QWORD PTR [rbx+0x8]
   14001dbfa:	test   rax,rax
   14001dbfd:	je     0x14001dc0e
   14001dbff:	cmp    BYTE PTR [rax],0x0
   14001dc02:	je     0x14001dc0e
   14001dc04:	mov    rcx,rbx
   14001dc07:	call   0x14001da7c
   14001dc0c:	jmp    0x14001dc16
   14001dc0e:	mov    rcx,rbx
   14001dc11:	call   0x14001db10
   14001dc16:	cmp    DWORD PTR [rbx+0x10],0x0
   14001dc1a:	jne    0x14001dcb4
   14001dc20:	lea    rcx,[rip+0x119a9]        # 0x14002f5d0
   14001dc27:	mov    r8,rbx
   14001dc2a:	mov    edx,0x40
   14001dc2f:	call   0x14001d2f8
   14001dc34:	test   eax,eax
   14001dc36:	je     0x14001dcaa
   14001dc38:	mov    rax,QWORD PTR [rbx+0x8]
   14001dc3c:	test   rax,rax
   14001dc3f:	je     0x14001dc50
   14001dc41:	cmp    BYTE PTR [rax],0x0
   14001dc44:	je     0x14001dc50
   14001dc46:	mov    rcx,rbx
   14001dc49:	call   0x14001da7c
   14001dc4e:	jmp    0x14001dcaa
   14001dc50:	mov    rcx,rbx
   14001dc53:	call   0x14001db10
   14001dc58:	jmp    0x14001dcaa
   14001dc5a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001dc5e:	test   rcx,rcx
   14001dc61:	je     0x14001dc97
   14001dc63:	cmp    BYTE PTR [rcx],0x0
   14001dc66:	je     0x14001dc97
   14001dc68:	call   0x140012e10
   14001dc6d:	xor    ecx,ecx
   14001dc6f:	mov    edx,0x1
   14001dc74:	cmp    rax,0x3
   14001dc78:	sete   cl
   14001dc7b:	mov    DWORD PTR [rbx+0x1c],ecx
   14001dc7e:	lea    rcx,[rip+0xfffffffffffff877]        # 0x14001d4fc
   14001dc85:	call   QWORD PTR [rip+0x950d]        # 0x140027198
   14001dc8b:	test   BYTE PTR [rbx+0x10],0x4
   14001dc8f:	jne    0x14001dcaa
   14001dc91:	and    DWORD PTR [rbx+0x10],0x0
   14001dc95:	jmp    0x14001dcaa
   14001dc97:	mov    DWORD PTR [rbx+0x10],0x104
   14001dc9e:	call   QWORD PTR [rip+0x9504]        # 0x1400271a8
   14001dca4:	mov    DWORD PTR [rbx+0x20],eax
   14001dca7:	mov    DWORD PTR [rbx+0x24],eax
   14001dcaa:	cmp    DWORD PTR [rbx+0x10],0x0
   14001dcae:	je     0x14001ddc7
   14001dcb4:	lea    rax,[rsi+0x80]
   14001dcbb:	neg    rsi
   14001dcbe:	mov    rdx,rbx
   14001dcc1:	sbb    rcx,rcx
   14001dcc4:	and    rcx,rax
   14001dcc7:	call   0x14001d3b4
   14001dccc:	mov    edi,eax
   14001dcce:	test   eax,eax
   14001dcd0:	je     0x14001ddc7
   14001dcd6:	cmp    eax,0xfde8
   14001dcdb:	je     0x14001ddc7
   14001dce1:	cmp    eax,0xfde9
   14001dce6:	je     0x14001ddc7
   14001dcec:	movzx  ecx,ax
   14001dcef:	call   QWORD PTR [rip+0x96e3]        # 0x1400273d8
   14001dcf5:	test   eax,eax
   14001dcf7:	je     0x14001ddc7
   14001dcfd:	mov    ecx,DWORD PTR [rbx+0x20]
   14001dd00:	mov    edx,0x1
   14001dd05:	call   QWORD PTR [rip+0x9485]        # 0x140027190
   14001dd0b:	test   eax,eax
   14001dd0d:	je     0x14001ddc7
   14001dd13:	test   rbp,rbp
   14001dd16:	je     0x14001dd2c
   14001dd18:	movzx  eax,WORD PTR [rbx+0x20]
   14001dd1c:	mov    WORD PTR [rbp+0x0],ax
   14001dd20:	movzx  eax,WORD PTR [rbx+0x24]
   14001dd24:	mov    WORD PTR [rbp+0x4],di
   14001dd28:	mov    WORD PTR [rbp+0x2],ax
   14001dd2c:	test   r12,r12
   14001dd2f:	je     0x14001ddc0
   14001dd35:	mov    eax,0x814
   14001dd3a:	cmp    WORD PTR [rbp+0x0],ax
   14001dd3e:	jne    0x14001dd6f
   14001dd40:	lea    r8,[rip+0x11e29]        # 0x14002fb70
   14001dd47:	mov    edx,0x40
   14001dd4c:	mov    rcx,r12
   14001dd4f:	call   0x140012b54
   14001dd54:	test   eax,eax
   14001dd56:	je     0x14001dd8a
   14001dd58:	and    QWORD PTR [rsp+0x20],0x0
   14001dd5e:	xor    r9d,r9d
   14001dd61:	xor    r8d,r8d
   14001dd64:	xor    edx,edx
   14001dd66:	xor    ecx,ecx
   14001dd68:	call   0x14000e350
   14001dd6d:	jmp    0x14001dd8a
   14001dd6f:	mov    ecx,DWORD PTR [rbx+0x20]
   14001dd72:	mov    r9d,0x40
   14001dd78:	mov    r8,r12
   14001dd7b:	mov    edx,0x1001
   14001dd80:	call   QWORD PTR [rip+0x941a]        # 0x1400271a0
   14001dd86:	test   eax,eax
   14001dd88:	je     0x14001ddc7
   14001dd8a:	mov    ecx,DWORD PTR [rbx+0x24]
   14001dd8d:	lea    r8,[r12+0x40]
   14001dd92:	mov    edx,0x1002
   14001dd97:	mov    r9d,0x40
   14001dd9d:	call   QWORD PTR [rip+0x93fd]        # 0x1400271a0
   14001dda3:	test   eax,eax
   14001dda5:	je     0x14001ddc7
   14001dda7:	mov    r9d,0xa
   14001ddad:	lea    rdx,[r12+0x80]
   14001ddb5:	mov    ecx,edi
   14001ddb7:	lea    r8d,[r9+0x6]
   14001ddbb:	call   0x1400242fc
   14001ddc0:	mov    eax,0x1
   14001ddc5:	jmp    0x14001ddc9
   14001ddc7:	xor    eax,eax
   14001ddc9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ddce:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ddd3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ddd8:	mov    rdi,QWORD PTR [rsp+0x58]
   14001dddd:	add    rsp,0x30
   14001dde1:	pop    r12
   14001dde3:	ret    
   14001dde4:	int3   
   14001dde5:	int3   
   14001dde6:	int3   
   14001dde7:	int3   
   14001dde8:	int3   
   14001dde9:	int3   
   14001ddea:	int3   
   14001ddeb:	int3   
   14001ddec:	int3   
   14001dded:	int3   
   14001ddee:	int3   
   14001ddef:	int3   
   14001ddf0:	int3   
   14001ddf1:	int3   
   14001ddf2:	int3   
   14001ddf3:	int3   
   14001ddf4:	int3   
   14001ddf5:	int3   
   14001ddf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001de00:	sub    rdx,rcx
   14001de03:	cmp    r8,0x8
   14001de07:	jb     0x14001de2b
   14001de09:	test   cl,0x7
   14001de0c:	je     0x14001de22
   14001de0e:	xchg   ax,ax
   14001de10:	mov    al,BYTE PTR [rcx]
   14001de12:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001de15:	jne    0x14001de43
   14001de17:	inc    rcx
   14001de1a:	dec    r8
   14001de1d:	test   cl,0x7
   14001de20:	jne    0x14001de10
   14001de22:	mov    r9,r8
   14001de25:	shr    r9,0x3
   14001de29:	jne    0x14001de4a
   14001de2b:	test   r8,r8
   14001de2e:	je     0x14001de3f
   14001de30:	mov    al,BYTE PTR [rcx]
   14001de32:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001de35:	jne    0x14001de43
   14001de37:	inc    rcx
   14001de3a:	dec    r8
   14001de3d:	jne    0x14001de30
   14001de3f:	xor    rax,rax
   14001de42:	ret    
   14001de43:	sbb    eax,eax
   14001de45:	sbb    eax,0xffffffff
   14001de48:	ret    
   14001de49:	nop
   14001de4a:	shr    r9,0x2
   14001de4e:	je     0x14001de87
   14001de50:	mov    rax,QWORD PTR [rcx]
   14001de53:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001de57:	jne    0x14001deb4
   14001de59:	mov    rax,QWORD PTR [rcx+0x8]
   14001de5d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001de62:	jne    0x14001deb0
   14001de64:	mov    rax,QWORD PTR [rcx+0x10]
   14001de68:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14001de6d:	jne    0x14001deac
   14001de6f:	mov    rax,QWORD PTR [rcx+0x18]
   14001de73:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14001de78:	jne    0x14001dea8
   14001de7a:	add    rcx,0x20
   14001de7e:	dec    r9
   14001de81:	jne    0x14001de50
   14001de83:	and    r8,0x1f
   14001de87:	mov    r9,r8
   14001de8a:	shr    r9,0x3
   14001de8e:	je     0x14001de2b
   14001de90:	mov    rax,QWORD PTR [rcx]
   14001de93:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001de97:	jne    0x14001deb4
   14001de99:	add    rcx,0x8
   14001de9d:	dec    r9
   14001dea0:	jne    0x14001de90
   14001dea2:	and    r8,0x7
   14001dea6:	jmp    0x14001de2b
   14001dea8:	add    rcx,0x8
   14001deac:	add    rcx,0x8
   14001deb0:	add    rcx,0x8
   14001deb4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14001deb8:	bswap  rax
   14001debb:	bswap  rcx
   14001debe:	cmp    rax,rcx
   14001dec1:	sbb    eax,eax
   14001dec3:	sbb    eax,0xffffffff
   14001dec6:	ret    
   14001dec7:	int3   
   14001dec8:	sub    rsp,0x38
   14001decc:	mov    rax,QWORD PTR [rip+0x163cd]        # 0x1400342a0
   14001ded3:	xor    rax,rsp
   14001ded6:	mov    QWORD PTR [rsp+0x20],rax
   14001dedb:	mov    al,BYTE PTR [rdx]
   14001dedd:	xor    r11d,r11d
   14001dee0:	mov    r10,rdx
   14001dee3:	mov    QWORD PTR [rsp],r11
   14001dee7:	mov    QWORD PTR [rsp+0x8],r11
   14001deec:	mov    QWORD PTR [rsp+0x10],r11
   14001def1:	mov    QWORD PTR [rsp+0x18],r11
   14001def6:	mov    r9,rcx
   14001def9:	jmp    0x14001df1c
   14001defb:	movzx  r8d,al
   14001deff:	movzx  eax,al
   14001df02:	mov    edx,0x1
   14001df07:	and    eax,0x7
   14001df0a:	shr    r8,0x3
   14001df0e:	mov    cl,al
   14001df10:	shl    dl,cl
   14001df12:	or     BYTE PTR [rsp+r8*1],dl
   14001df16:	inc    r10
   14001df19:	mov    al,BYTE PTR [r10]
   14001df1c:	cmp    al,r11b
   14001df1f:	jne    0x14001defb
   14001df21:	jmp    0x14001df41
   14001df23:	movzx  ecx,r8b
   14001df27:	movzx  eax,r8b
   14001df2b:	mov    edx,0x1
   14001df30:	and    ecx,0x7
   14001df33:	shr    rax,0x3
   14001df37:	shl    edx,cl
   14001df39:	test   BYTE PTR [rsp+rax*1],dl
   14001df3c:	jne    0x14001df5d
   14001df3e:	inc    r9
   14001df41:	mov    r8b,BYTE PTR [r9]
   14001df44:	cmp    r8b,r11b
   14001df47:	jne    0x14001df23
   14001df49:	xor    eax,eax
   14001df4b:	mov    rcx,QWORD PTR [rsp+0x20]
   14001df50:	xor    rcx,rsp
   14001df53:	call   0x140009080
   14001df58:	add    rsp,0x38
   14001df5c:	ret    
   14001df5d:	mov    rax,r9
   14001df60:	jmp    0x14001df4b
   14001df62:	int3   
   14001df63:	int3   
   14001df64:	mov    QWORD PTR [rsp+0x8],rbx
   14001df69:	mov    QWORD PTR [rsp+0x10],rbp
   14001df6e:	push   rsi
   14001df6f:	push   rdi
   14001df70:	push   r12
   14001df72:	push   r13
   14001df74:	push   r14
   14001df76:	sub    rsp,0x40
   14001df7a:	mov    ebp,r8d
   14001df7d:	mov    r13,rdx
   14001df80:	mov    r14,rcx
   14001df83:	call   0x14001174c
   14001df88:	xor    ebx,ebx
   14001df8a:	mov    rdi,rax
   14001df8d:	cmp    QWORD PTR [rip+0x18734],rbx        # 0x1400366c8
   14001df94:	jne    0x14001e06a
   14001df9a:	lea    rcx,[rip+0x11c57]        # 0x14002fbf8
   14001dfa1:	call   QWORD PTR [rip+0x9299]        # 0x140027240
   14001dfa7:	mov    rsi,rax
   14001dfaa:	test   rax,rax
   14001dfad:	je     0x14001e13f
   14001dfb3:	lea    rdx,[rip+0x11c2e]        # 0x14002fbe8
   14001dfba:	mov    rcx,rax
   14001dfbd:	call   QWORD PTR [rip+0x9285]        # 0x140027248
   14001dfc3:	test   rax,rax
   14001dfc6:	je     0x14001e13f
   14001dfcc:	mov    rcx,rax
   14001dfcf:	call   0x140011744
   14001dfd4:	lea    rdx,[rip+0x11bfd]        # 0x14002fbd8
   14001dfdb:	mov    rcx,rsi
   14001dfde:	mov    QWORD PTR [rip+0x186e3],rax        # 0x1400366c8
   14001dfe5:	call   QWORD PTR [rip+0x925d]        # 0x140027248
   14001dfeb:	mov    rcx,rax
   14001dfee:	call   0x140011744
   14001dff3:	lea    rdx,[rip+0x11bc6]        # 0x14002fbc0
   14001dffa:	mov    rcx,rsi
   14001dffd:	mov    QWORD PTR [rip+0x186cc],rax        # 0x1400366d0
   14001e004:	call   QWORD PTR [rip+0x923e]        # 0x140027248
   14001e00a:	mov    rcx,rax
   14001e00d:	call   0x140011744
   14001e012:	lea    rdx,[rip+0x11b87]        # 0x14002fba0
   14001e019:	mov    rcx,rsi
   14001e01c:	mov    QWORD PTR [rip+0x186b5],rax        # 0x1400366d8
   14001e023:	call   QWORD PTR [rip+0x921f]        # 0x140027248
   14001e029:	mov    rcx,rax
   14001e02c:	call   0x140011744
   14001e031:	mov    r11,rax
   14001e034:	mov    QWORD PTR [rip+0x186ad],rax        # 0x1400366e8
   14001e03b:	test   rax,rax
   14001e03e:	je     0x14001e061
   14001e040:	lea    rdx,[rip+0x11b41]        # 0x14002fb88
   14001e047:	mov    rcx,rsi
   14001e04a:	call   QWORD PTR [rip+0x91f8]        # 0x140027248
   14001e050:	mov    rcx,rax
   14001e053:	call   0x140011744
   14001e058:	mov    QWORD PTR [rip+0x18681],rax        # 0x1400366e0
   14001e05f:	jmp    0x14001e071
   14001e061:	mov    rax,QWORD PTR [rip+0x18678]        # 0x1400366e0
   14001e068:	jmp    0x14001e078
   14001e06a:	mov    rax,QWORD PTR [rip+0x1866f]        # 0x1400366e0
   14001e071:	mov    r11,QWORD PTR [rip+0x18670]        # 0x1400366e8
   14001e078:	cmp    rax,rdi
   14001e07b:	je     0x14001e0e0
   14001e07d:	cmp    r11,rdi
   14001e080:	je     0x14001e0e0
   14001e082:	mov    rcx,rax
   14001e085:	call   0x140011758
   14001e08a:	mov    rcx,QWORD PTR [rip+0x18657]        # 0x1400366e8
   14001e091:	mov    rsi,rax
   14001e094:	call   0x140011758
   14001e099:	mov    r12,rax
   14001e09c:	test   rsi,rsi
   14001e09f:	je     0x14001e0e0
   14001e0a1:	test   rax,rax
   14001e0a4:	je     0x14001e0e0
   14001e0a6:	call   rsi
   14001e0a8:	test   rax,rax
   14001e0ab:	je     0x14001e0da
   14001e0ad:	lea    rcx,[rsp+0x88]
   14001e0b5:	mov    r9d,0xc
   14001e0bb:	lea    r8,[rsp+0x30]
   14001e0c0:	mov    QWORD PTR [rsp+0x20],rcx
   14001e0c5:	lea    edx,[r9-0xb]
   14001e0c9:	mov    rcx,rax
   14001e0cc:	call   r12
   14001e0cf:	test   eax,eax
   14001e0d1:	je     0x14001e0da
   14001e0d3:	test   BYTE PTR [rsp+0x38],0x1
   14001e0d8:	jne    0x14001e0e0
   14001e0da:	bts    ebp,0x15
   14001e0de:	jmp    0x14001e11e
   14001e0e0:	mov    rcx,QWORD PTR [rip+0x185e9]        # 0x1400366d0
   14001e0e7:	cmp    rcx,rdi
   14001e0ea:	je     0x14001e11e
   14001e0ec:	call   0x140011758
   14001e0f1:	test   rax,rax
   14001e0f4:	je     0x14001e11e
   14001e0f6:	call   rax
   14001e0f8:	mov    rbx,rax
   14001e0fb:	test   rax,rax
   14001e0fe:	je     0x14001e11e
   14001e100:	mov    rcx,QWORD PTR [rip+0x185d1]        # 0x1400366d8
   14001e107:	cmp    rcx,rdi
   14001e10a:	je     0x14001e11e
   14001e10c:	call   0x140011758
   14001e111:	test   rax,rax
   14001e114:	je     0x14001e11e
   14001e116:	mov    rcx,rbx
   14001e119:	call   rax
   14001e11b:	mov    rbx,rax
   14001e11e:	mov    rcx,QWORD PTR [rip+0x185a3]        # 0x1400366c8
   14001e125:	call   0x140011758
   14001e12a:	test   rax,rax
   14001e12d:	je     0x14001e13f
   14001e12f:	mov    r9d,ebp
   14001e132:	mov    r8,r13
   14001e135:	mov    rdx,r14
   14001e138:	mov    rcx,rbx
   14001e13b:	call   rax
   14001e13d:	jmp    0x14001e141
   14001e13f:	xor    eax,eax
   14001e141:	mov    rbx,QWORD PTR [rsp+0x70]
   14001e146:	mov    rbp,QWORD PTR [rsp+0x78]
   14001e14b:	add    rsp,0x40
   14001e14f:	pop    r14
   14001e151:	pop    r13
   14001e153:	pop    r12
   14001e155:	pop    rdi
   14001e156:	pop    rsi
   14001e157:	ret    
   14001e158:	sub    rsp,0x38
   14001e15c:	test   ecx,ecx
   14001e15e:	js     0x14001e180
   14001e160:	cmp    ecx,0x2
   14001e163:	jle    0x14001e172
   14001e165:	cmp    ecx,0x3
   14001e168:	jne    0x14001e180
   14001e16a:	mov    eax,DWORD PTR [rip+0x177e8]        # 0x140035958
   14001e170:	jmp    0x14001e1a3
   14001e172:	mov    eax,DWORD PTR [rip+0x177e0]        # 0x140035958
   14001e178:	mov    DWORD PTR [rip+0x177da],ecx        # 0x140035958
   14001e17e:	jmp    0x14001e1a3
   14001e180:	call   0x14000f574
   14001e185:	and    QWORD PTR [rsp+0x20],0x0
   14001e18b:	xor    r9d,r9d
   14001e18e:	xor    r8d,r8d
   14001e191:	xor    edx,edx
   14001e193:	xor    ecx,ecx
   14001e195:	mov    DWORD PTR [rax],0x16
   14001e19b:	call   0x14000e4d8
   14001e1a0:	or     eax,0xffffffff
   14001e1a3:	add    rsp,0x38
   14001e1a7:	ret    
   14001e1a8:	mov    DWORD PTR [rip+0x1663a],ecx        # 0x1400347e8
   14001e1ae:	ret    
   14001e1af:	int3   
   14001e1b0:	mov    eax,DWORD PTR [rip+0x16632]        # 0x1400347e8
   14001e1b6:	ret    
   14001e1b7:	int3   
   14001e1b8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e1bd:	mov    QWORD PTR [rsp+0x10],rbp
   14001e1c2:	mov    QWORD PTR [rsp+0x18],rsi
   14001e1c7:	push   rdi
   14001e1c8:	sub    rsp,0x60
   14001e1cc:	xor    ebp,ebp
   14001e1ce:	mov    rsi,r8
   14001e1d1:	mov    rdi,rdx
   14001e1d4:	mov    rbx,rcx
   14001e1d7:	cmp    r8,rbp
   14001e1da:	jne    0x14001e1e3
   14001e1dc:	xor    eax,eax
   14001e1de:	jmp    0x14001e2ea
   14001e1e3:	cmp    rcx,rbp
   14001e1e6:	jne    0x14001e211
   14001e1e8:	call   0x14000f574
   14001e1ed:	xor    r9d,r9d
   14001e1f0:	xor    r8d,r8d
   14001e1f3:	xor    edx,edx
   14001e1f5:	xor    ecx,ecx
   14001e1f7:	mov    QWORD PTR [rsp+0x20],rbp
   14001e1fc:	mov    DWORD PTR [rax],0x16
   14001e202:	call   0x14000e4d8
   14001e207:	mov    eax,0x7fffffff
   14001e20c:	jmp    0x14001e2ea
   14001e211:	cmp    rdx,rbp
   14001e214:	je     0x14001e1e8
   14001e216:	cmp    r8,0x7fffffff
   14001e21d:	ja     0x14001e1e8
   14001e21f:	lea    rcx,[rsp+0x40]
   14001e224:	mov    rdx,r9
   14001e227:	call   0x1400094b4
   14001e22c:	mov    r11,QWORD PTR [rsp+0x40]
   14001e231:	mov    edx,DWORD PTR [r11+0x10]
   14001e235:	cmp    edx,ebp
   14001e237:	jne    0x14001e281
   14001e239:	movzx  eax,WORD PTR [rbx]
   14001e23c:	cmp    ax,0x41
   14001e240:	jb     0x14001e24c
   14001e242:	cmp    ax,0x5a
   14001e246:	ja     0x14001e24c
   14001e248:	add    ax,0x20
   14001e24c:	movzx  ecx,WORD PTR [rdi]
   14001e24f:	cmp    cx,0x41
   14001e253:	jb     0x14001e25f
   14001e255:	cmp    cx,0x5a
   14001e259:	ja     0x14001e25f
   14001e25b:	add    cx,0x20
   14001e25f:	add    rbx,0x2
   14001e263:	add    rdi,0x2
   14001e267:	sub    rsi,0x1
   14001e26b:	je     0x14001e277
   14001e26d:	cmp    ax,bp
   14001e270:	je     0x14001e277
   14001e272:	cmp    ax,cx
   14001e275:	je     0x14001e239
   14001e277:	movzx  ecx,cx
   14001e27a:	movzx  eax,ax
   14001e27d:	sub    eax,ecx
   14001e27f:	jmp    0x14001e2d7
   14001e281:	mov    eax,DWORD PTR [r11+0x8]
   14001e285:	lea    rcx,[rsp+0x40]
   14001e28a:	mov    r9,rbx
   14001e28d:	mov    DWORD PTR [rsp+0x38],eax
   14001e291:	mov    DWORD PTR [rsp+0x30],esi
   14001e295:	mov    r8d,0x1001
   14001e29b:	mov    QWORD PTR [rsp+0x28],rdi
   14001e2a0:	mov    DWORD PTR [rsp+0x20],esi
   14001e2a4:	call   0x140024594
   14001e2a9:	cmp    eax,ebp
   14001e2ab:	jne    0x14001e2d4
   14001e2ad:	call   0x14000f574
   14001e2b2:	mov    DWORD PTR [rax],0x16
   14001e2b8:	cmp    BYTE PTR [rsp+0x58],bpl
   14001e2bd:	je     0x14001e207
   14001e2c3:	mov    rax,QWORD PTR [rsp+0x50]
   14001e2c8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e2cf:	jmp    0x14001e207
   14001e2d4:	add    eax,0xfffffffe
   14001e2d7:	cmp    BYTE PTR [rsp+0x58],bpl
   14001e2dc:	je     0x14001e2ea
   14001e2de:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e2e3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e2ea:	lea    r11,[rsp+0x60]
   14001e2ef:	mov    rbx,QWORD PTR [r11+0x10]
   14001e2f3:	mov    rbp,QWORD PTR [r11+0x18]
   14001e2f7:	mov    rsi,QWORD PTR [r11+0x20]
   14001e2fb:	mov    rsp,r11
   14001e2fe:	pop    rdi
   14001e2ff:	ret    
   14001e300:	rex push rbx
   14001e302:	sub    rsp,0x30
   14001e306:	xor    ebx,ebx
   14001e308:	mov    r10,rcx
   14001e30b:	cmp    DWORD PTR [rip+0x17caf],ebx        # 0x140035fc0
   14001e311:	jne    0x14001e399
   14001e317:	cmp    rcx,rbx
   14001e31a:	jne    0x14001e342
   14001e31c:	call   0x14000f574
   14001e321:	xor    r9d,r9d
   14001e324:	xor    r8d,r8d
   14001e327:	xor    edx,edx
   14001e329:	xor    ecx,ecx
   14001e32b:	mov    QWORD PTR [rsp+0x20],rbx
   14001e330:	mov    DWORD PTR [rax],0x16
   14001e336:	call   0x14000e4d8
   14001e33b:	mov    eax,0x7fffffff
   14001e340:	jmp    0x14001e3a1
   14001e342:	cmp    rdx,rbx
   14001e345:	je     0x14001e31c
   14001e347:	cmp    r8,0x7fffffff
   14001e34e:	ja     0x14001e31c
   14001e350:	movzx  eax,WORD PTR [r10]
   14001e354:	cmp    ax,0x41
   14001e358:	jb     0x14001e364
   14001e35a:	cmp    ax,0x5a
   14001e35e:	ja     0x14001e364
   14001e360:	add    ax,0x20
   14001e364:	movzx  ecx,WORD PTR [rdx]
   14001e367:	cmp    cx,0x41
   14001e36b:	jb     0x14001e377
   14001e36d:	cmp    cx,0x5a
   14001e371:	ja     0x14001e377
   14001e373:	add    cx,0x20
   14001e377:	add    r10,0x2
   14001e37b:	add    rdx,0x2
   14001e37f:	sub    r8,0x1
   14001e383:	je     0x14001e38f
   14001e385:	cmp    ax,bx
   14001e388:	je     0x14001e38f
   14001e38a:	cmp    ax,cx
   14001e38d:	je     0x14001e350
   14001e38f:	movzx  ecx,cx
   14001e392:	movzx  eax,ax
   14001e395:	sub    eax,ecx
   14001e397:	jmp    0x14001e3a1
   14001e399:	xor    r9d,r9d
   14001e39c:	call   0x14001e1b8
   14001e3a1:	add    rsp,0x30
   14001e3a5:	pop    rbx
   14001e3a6:	ret    
   14001e3a7:	int3   
   14001e3a8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e3ad:	mov    QWORD PTR [rsp+0x10],rsi
   14001e3b2:	push   rdi
   14001e3b3:	sub    rsp,0x30
   14001e3b7:	mov    rbx,rcx
   14001e3ba:	test   rcx,rcx
   14001e3bd:	je     0x14001e40a
   14001e3bf:	call   0x140012684
   14001e3c4:	mov    edx,0x2
   14001e3c9:	lea    rcx,[rax+0x1]
   14001e3cd:	mov    rsi,rax
   14001e3d0:	call   0x140023d20
   14001e3d5:	mov    rdi,rax
   14001e3d8:	test   rax,rax
   14001e3db:	je     0x14001e40a
   14001e3dd:	lea    rdx,[rsi+0x1]
   14001e3e1:	mov    r8,rbx
   14001e3e4:	mov    rcx,rax
   14001e3e7:	call   0x14001e41c
   14001e3ec:	test   eax,eax
   14001e3ee:	je     0x14001e405
   14001e3f0:	and    QWORD PTR [rsp+0x20],0x0
   14001e3f6:	xor    r9d,r9d
   14001e3f9:	xor    r8d,r8d
   14001e3fc:	xor    edx,edx
   14001e3fe:	xor    ecx,ecx
   14001e400:	call   0x14000e350
   14001e405:	mov    rax,rdi
   14001e408:	jmp    0x14001e40c
   14001e40a:	xor    eax,eax
   14001e40c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e411:	mov    rsi,QWORD PTR [rsp+0x48]
   14001e416:	add    rsp,0x30
   14001e41a:	pop    rdi
   14001e41b:	ret    
   14001e41c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e421:	push   rdi
   14001e422:	sub    rsp,0x30
   14001e426:	xor    edi,edi
   14001e428:	cmp    rcx,rdi
   14001e42b:	je     0x14001e43a
   14001e42d:	cmp    rdx,rdi
   14001e430:	jbe    0x14001e43a
   14001e432:	cmp    r8,rdi
   14001e435:	jne    0x14001e467
   14001e437:	mov    WORD PTR [rcx],di
   14001e43a:	call   0x14000f574
   14001e43f:	mov    ebx,0x16
   14001e444:	xor    r9d,r9d
   14001e447:	xor    r8d,r8d
   14001e44a:	xor    edx,edx
   14001e44c:	xor    ecx,ecx
   14001e44e:	mov    QWORD PTR [rsp+0x20],rdi
   14001e453:	mov    DWORD PTR [rax],ebx
   14001e455:	call   0x14000e4d8
   14001e45a:	mov    eax,ebx
   14001e45c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e461:	add    rsp,0x30
   14001e465:	pop    rdi
   14001e466:	ret    
   14001e467:	mov    r9,rcx
   14001e46a:	movzx  eax,WORD PTR [r8]
   14001e46e:	add    r8,0x2
   14001e472:	mov    WORD PTR [r9],ax
   14001e476:	add    r9,0x2
   14001e47a:	cmp    ax,di
   14001e47d:	je     0x14001e485
   14001e47f:	sub    rdx,0x1
   14001e483:	jne    0x14001e46a
   14001e485:	cmp    rdx,rdi
   14001e488:	jne    0x14001e499
   14001e48a:	mov    WORD PTR [rcx],di
   14001e48d:	call   0x14000f574
   14001e492:	mov    ebx,0x22
   14001e497:	jmp    0x14001e444
   14001e499:	xor    eax,eax
   14001e49b:	jmp    0x14001e45c
   14001e49d:	int3   
   14001e49e:	int3   
   14001e49f:	int3   
   14001e4a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e4a5:	mov    QWORD PTR [rsp+0x18],rbp
   14001e4aa:	push   rdi
   14001e4ab:	sub    rsp,0x30
   14001e4af:	and    QWORD PTR [rsp+0x40],0x0
   14001e4b5:	mov    rbx,QWORD PTR [rip+0x1744c]        # 0x140035908
   14001e4bc:	mov    rax,QWORD PTR [rbx]
   14001e4bf:	test   rax,rax
   14001e4c2:	je     0x14001e539
   14001e4c4:	or     ebp,0xffffffff
   14001e4c7:	and    DWORD PTR [rsp+0x28],0x0
   14001e4cc:	and    QWORD PTR [rsp+0x20],0x0
   14001e4d2:	mov    r9d,ebp
   14001e4d5:	mov    r8,rax
   14001e4d8:	xor    edx,edx
   14001e4da:	xor    ecx,ecx
   14001e4dc:	call   QWORD PTR [rip+0x8d56]        # 0x140027238
   14001e4e2:	movsxd rdi,eax
   14001e4e5:	test   eax,eax
   14001e4e7:	je     0x14001e561
   14001e4e9:	mov    rcx,rdi
   14001e4ec:	mov    edx,0x2
   14001e4f1:	call   0x140012c6c
   14001e4f6:	mov    QWORD PTR [rsp+0x40],rax
   14001e4fb:	test   rax,rax
   14001e4fe:	je     0x14001e561
   14001e500:	mov    r8,QWORD PTR [rbx]
   14001e503:	mov    r9d,ebp
   14001e506:	xor    edx,edx
   14001e508:	xor    ecx,ecx
   14001e50a:	mov    DWORD PTR [rsp+0x28],edi
   14001e50e:	mov    QWORD PTR [rsp+0x20],rax
   14001e513:	call   QWORD PTR [rip+0x8d1f]        # 0x140027238
   14001e519:	test   eax,eax
   14001e51b:	je     0x14001e557
   14001e51d:	lea    rcx,[rsp+0x40]
   14001e522:	xor    edx,edx
   14001e524:	call   0x140012108
   14001e529:	test   eax,eax
   14001e52b:	js     0x14001e54b
   14001e52d:	add    rbx,0x8
   14001e531:	mov    rax,QWORD PTR [rbx]
   14001e534:	test   rax,rax
   14001e537:	jne    0x14001e4c7
   14001e539:	xor    eax,eax
   14001e53b:	mov    rbx,QWORD PTR [rsp+0x48]
   14001e540:	mov    rbp,QWORD PTR [rsp+0x50]
   14001e545:	add    rsp,0x30
   14001e549:	pop    rdi
   14001e54a:	ret    
   14001e54b:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e550:	test   rcx,rcx
   14001e553:	je     0x14001e561
   14001e555:	jmp    0x14001e55c
   14001e557:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e55c:	call   0x1400098ac
   14001e561:	mov    eax,ebp
   14001e563:	jmp    0x14001e53b
   14001e565:	int3   
   14001e566:	int3   
   14001e567:	int3   
   14001e568:	mov    rax,rsp
   14001e56b:	mov    QWORD PTR [rax+0x8],rbx
   14001e56f:	mov    QWORD PTR [rax+0x10],rbp
   14001e573:	mov    QWORD PTR [rax+0x18],rsi
   14001e577:	mov    QWORD PTR [rax+0x20],rdi
   14001e57b:	push   r12
   14001e57d:	sub    rsp,0x30
   14001e581:	mov    rbx,QWORD PTR [rip+0x173c8]        # 0x140035950
   14001e588:	xor    r12d,r12d
   14001e58b:	mov    edi,r12d
   14001e58e:	cmp    rbx,r12
   14001e591:	jne    0x14001e5b0
   14001e593:	or     eax,0xffffffff
   14001e596:	jmp    0x14001e66b
   14001e59b:	cmp    ax,0x3d
   14001e59f:	je     0x14001e5a3
   14001e5a1:	inc    edi
   14001e5a3:	mov    rcx,rbx
   14001e5a6:	call   0x140012684
   14001e5ab:	lea    rbx,[rbx+rax*2+0x2]
   14001e5b0:	movzx  eax,WORD PTR [rbx]
   14001e5b3:	cmp    ax,r12w
   14001e5b7:	jne    0x14001e59b
   14001e5b9:	lea    eax,[rdi+0x1]
   14001e5bc:	mov    edx,0x8
   14001e5c1:	movsxd rcx,eax
   14001e5c4:	call   0x140012c6c
   14001e5c9:	mov    rdi,rax
   14001e5cc:	mov    QWORD PTR [rip+0x17345],rax        # 0x140035918
   14001e5d3:	cmp    rax,r12
   14001e5d6:	je     0x14001e593
   14001e5d8:	mov    rbx,QWORD PTR [rip+0x17371]        # 0x140035950
   14001e5df:	cmp    WORD PTR [rbx],r12w
   14001e5e3:	je     0x14001e64d
   14001e5e5:	mov    rcx,rbx
   14001e5e8:	call   0x140012684
   14001e5ed:	cmp    WORD PTR [rbx],0x3d
   14001e5f1:	lea    esi,[rax+0x1]
   14001e5f4:	je     0x14001e639
   14001e5f6:	movsxd rbp,esi
   14001e5f9:	mov    edx,0x2
   14001e5fe:	mov    rcx,rbp
   14001e601:	call   0x140012c6c
   14001e606:	mov    QWORD PTR [rdi],rax
   14001e609:	cmp    rax,r12
   14001e60c:	je     0x14001e686
   14001e60e:	mov    r8,rbx
   14001e611:	mov    rdx,rbp
   14001e614:	mov    rcx,rax
   14001e617:	call   0x14001e41c
   14001e61c:	cmp    eax,r12d
   14001e61f:	je     0x14001e635
   14001e621:	xor    r9d,r9d
   14001e624:	xor    r8d,r8d
   14001e627:	xor    edx,edx
   14001e629:	xor    ecx,ecx
   14001e62b:	mov    QWORD PTR [rsp+0x20],r12
   14001e630:	call   0x14000e350
   14001e635:	add    rdi,0x8
   14001e639:	movsxd rax,esi
   14001e63c:	lea    rbx,[rbx+rax*2]
   14001e640:	cmp    WORD PTR [rbx],r12w
   14001e644:	jne    0x14001e5e5
   14001e646:	mov    rbx,QWORD PTR [rip+0x17303]        # 0x140035950
   14001e64d:	mov    rcx,rbx
   14001e650:	call   0x1400098ac
   14001e655:	mov    QWORD PTR [rip+0x172f4],r12        # 0x140035950
   14001e65c:	mov    QWORD PTR [rdi],r12
   14001e65f:	mov    DWORD PTR [rip+0x1990f],0x1        # 0x140037f78
   14001e669:	xor    eax,eax
   14001e66b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e670:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e675:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e67a:	mov    rdi,QWORD PTR [rsp+0x58]
   14001e67f:	add    rsp,0x30
   14001e683:	pop    r12
   14001e685:	ret    
   14001e686:	mov    rcx,QWORD PTR [rip+0x1728b]        # 0x140035918
   14001e68d:	call   0x1400098ac
   14001e692:	mov    QWORD PTR [rip+0x1727f],r12        # 0x140035918
   14001e699:	jmp    0x14001e593
   14001e69e:	int3   
   14001e69f:	int3   
   14001e6a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e6a5:	mov    QWORD PTR [rsp+0x10],rbp
   14001e6aa:	mov    QWORD PTR [rsp+0x18],rsi
   14001e6af:	push   rdi
   14001e6b0:	sub    rsp,0x20
   14001e6b4:	call   QWORD PTR [rip+0x8b2e]        # 0x1400271e8
   14001e6ba:	xor    ebx,ebx
   14001e6bc:	mov    rdi,rax
   14001e6bf:	cmp    rax,rbx
   14001e6c2:	jne    0x14001e6c8
   14001e6c4:	xor    eax,eax
   14001e6c6:	jmp    0x14001e714
   14001e6c8:	cmp    WORD PTR [rdi],bx
   14001e6cb:	je     0x14001e6df
   14001e6cd:	add    rax,0x2
   14001e6d1:	cmp    WORD PTR [rax],bx
   14001e6d4:	jne    0x14001e6cd
   14001e6d6:	add    rax,0x2
   14001e6da:	cmp    WORD PTR [rax],bx
   14001e6dd:	jne    0x14001e6cd
   14001e6df:	sub    eax,edi
   14001e6e1:	add    eax,0x2
   14001e6e4:	movsxd rbp,eax
   14001e6e7:	mov    rcx,rbp
   14001e6ea:	call   0x140012c00
   14001e6ef:	mov    rsi,rax
   14001e6f2:	cmp    rax,rbx
   14001e6f5:	je     0x14001e708
   14001e6f7:	mov    r8,rbp
   14001e6fa:	mov    rdx,rdi
   14001e6fd:	mov    rcx,rax
   14001e700:	call   0x140008b00
   14001e705:	mov    rbx,rsi
   14001e708:	mov    rcx,rdi
   14001e70b:	call   QWORD PTR [rip+0x8adf]        # 0x1400271f0
   14001e711:	mov    rax,rbx
   14001e714:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e719:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e71e:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e723:	add    rsp,0x20
   14001e727:	pop    rdi
   14001e728:	ret    
   14001e729:	int3   
   14001e72a:	int3   
   14001e72b:	int3   
   14001e72c:	jmp    0x14001e737
   14001e72e:	cmp    ax,dx
   14001e731:	je     0x14001e744
   14001e733:	add    rcx,0x2
   14001e737:	movzx  eax,WORD PTR [rcx]
   14001e73a:	test   ax,ax
   14001e73d:	jne    0x14001e72e
   14001e73f:	cmp    ax,dx
   14001e742:	jne    0x14001e748
   14001e744:	mov    rax,rcx
   14001e747:	ret    
   14001e748:	xor    eax,eax
   14001e74a:	ret    
   14001e74b:	int3   
   14001e74c:	mov    rax,rsp
   14001e74f:	mov    QWORD PTR [rax+0x8],rbx
   14001e753:	mov    QWORD PTR [rax+0x10],rbp
   14001e757:	mov    QWORD PTR [rax+0x18],rsi
   14001e75b:	push   rdi
   14001e75c:	sub    rsp,0x60
   14001e760:	mov    rsi,rcx
   14001e763:	mov    rdi,rdx
   14001e766:	lea    rcx,[rax-0x28]
   14001e76a:	mov    rdx,r9
   14001e76d:	mov    rbp,r9
   14001e770:	mov    rbx,r8
   14001e773:	call   0x1400094b4
   14001e778:	test   rbx,rbx
   14001e77b:	jne    0x14001e796
   14001e77d:	cmp    BYTE PTR [rsp+0x58],bl
   14001e781:	je     0x14001e78f
   14001e783:	mov    rax,QWORD PTR [rsp+0x50]
   14001e788:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e78f:	xor    eax,eax
   14001e791:	jmp    0x14001e845
   14001e796:	test   rsi,rsi
   14001e799:	jne    0x14001e7d5
   14001e79b:	call   0x14000f574
   14001e7a0:	and    QWORD PTR [rsp+0x20],0x0
   14001e7a6:	xor    r9d,r9d
   14001e7a9:	xor    r8d,r8d
   14001e7ac:	xor    edx,edx
   14001e7ae:	xor    ecx,ecx
   14001e7b0:	mov    DWORD PTR [rax],0x16
   14001e7b6:	call   0x14000e4d8
   14001e7bb:	cmp    BYTE PTR [rsp+0x58],0x0
   14001e7c0:	je     0x14001e7ce
   14001e7c2:	mov    rax,QWORD PTR [rsp+0x50]
   14001e7c7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e7ce:	mov    eax,0x7fffffff
   14001e7d3:	jmp    0x14001e845
   14001e7d5:	test   rdi,rdi
   14001e7d8:	je     0x14001e79b
   14001e7da:	cmp    rbx,0x7fffffff
   14001e7e1:	ja     0x14001e79b
   14001e7e3:	mov    rcx,QWORD PTR [rsp+0x48]
   14001e7e8:	cmp    DWORD PTR [rcx+0x8],0x0
   14001e7ec:	jne    0x14001e801
   14001e7ee:	mov    r9,rbp
   14001e7f1:	mov    r8,rbx
   14001e7f4:	mov    rdx,rdi
   14001e7f7:	mov    rcx,rsi
   14001e7fa:	call   0x140024c0c
   14001e7ff:	jmp    0x14001e832
   14001e801:	mov    eax,DWORD PTR [rcx+0x4]
   14001e804:	mov    edx,DWORD PTR [rcx+0xc]
   14001e807:	lea    rcx,[rsp+0x40]
   14001e80c:	mov    DWORD PTR [rsp+0x38],eax
   14001e810:	mov    DWORD PTR [rsp+0x30],ebx
   14001e814:	mov    r9,rsi
   14001e817:	mov    r8d,0x1001
   14001e81d:	mov    QWORD PTR [rsp+0x28],rdi
   14001e822:	mov    DWORD PTR [rsp+0x20],ebx
   14001e826:	call   0x140024b80
   14001e82b:	test   eax,eax
   14001e82d:	je     0x14001e7bb
   14001e82f:	add    eax,0xfffffffe
   14001e832:	cmp    BYTE PTR [rsp+0x58],0x0
   14001e837:	je     0x14001e845
   14001e839:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e83e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e845:	lea    r11,[rsp+0x60]
   14001e84a:	mov    rbx,QWORD PTR [r11+0x10]
   14001e84e:	mov    rbp,QWORD PTR [r11+0x18]
   14001e852:	mov    rsi,QWORD PTR [r11+0x20]
   14001e856:	mov    rsp,r11
   14001e859:	pop    rdi
   14001e85a:	ret    
   14001e85b:	int3   
   14001e85c:	xor    r9d,r9d
   14001e85f:	jmp    0x14001e74c
   14001e864:	mov    QWORD PTR [rsp+0x8],rbx
   14001e869:	mov    QWORD PTR [rsp+0x10],rsi
   14001e86e:	push   rdi
   14001e86f:	sub    rsp,0x30
   14001e873:	mov    rbx,rcx
   14001e876:	test   rcx,rcx
   14001e879:	je     0x14001e8c1
   14001e87b:	call   0x140012e10
   14001e880:	mov    rsi,rax
   14001e883:	lea    rcx,[rax+0x1]
   14001e887:	call   0x14000993c
   14001e88c:	mov    rdi,rax
   14001e88f:	test   rax,rax
   14001e892:	je     0x14001e8c1
   14001e894:	lea    rdx,[rsi+0x1]
   14001e898:	mov    r8,rbx
   14001e89b:	mov    rcx,rax
   14001e89e:	call   0x140012b54
   14001e8a3:	test   eax,eax
   14001e8a5:	je     0x14001e8bc
   14001e8a7:	and    QWORD PTR [rsp+0x20],0x0
   14001e8ad:	xor    r9d,r9d
   14001e8b0:	xor    r8d,r8d
   14001e8b3:	xor    edx,edx
   14001e8b5:	xor    ecx,ecx
   14001e8b7:	call   0x14000e350
   14001e8bc:	mov    rax,rdi
   14001e8bf:	jmp    0x14001e8c3
   14001e8c1:	xor    eax,eax
   14001e8c3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e8c8:	mov    rsi,QWORD PTR [rsp+0x48]
   14001e8cd:	add    rsp,0x30
   14001e8d1:	pop    rdi
   14001e8d2:	ret    
   14001e8d3:	int3   
   14001e8d4:	mov    QWORD PTR [rsp+0x10],rbx
   14001e8d9:	mov    QWORD PTR [rsp+0x18],rbp
   14001e8de:	push   rdi
   14001e8df:	sub    rsp,0x40
   14001e8e3:	and    QWORD PTR [rsp+0x50],0x0
   14001e8e9:	mov    rbx,QWORD PTR [rip+0x17028]        # 0x140035918
   14001e8f0:	mov    rax,QWORD PTR [rbx]
   14001e8f3:	test   rax,rax
   14001e8f6:	je     0x14001e9a6
   14001e8fc:	or     ebp,0xffffffff
   14001e8ff:	and    QWORD PTR [rsp+0x38],0x0
   14001e905:	and    QWORD PTR [rsp+0x30],0x0
   14001e90b:	and    DWORD PTR [rsp+0x28],0x0
   14001e910:	and    QWORD PTR [rsp+0x20],0x0
   14001e916:	mov    r9d,ebp
   14001e919:	mov    r8,rax
   14001e91c:	xor    edx,edx
   14001e91e:	xor    ecx,ecx
   14001e920:	call   QWORD PTR [rip+0x8a8a]        # 0x1400273b0
   14001e926:	movsxd rdi,eax
   14001e929:	test   eax,eax
   14001e92b:	je     0x14001e9c2
   14001e931:	mov    rcx,rdi
   14001e934:	mov    edx,0x1
   14001e939:	call   0x140012c6c
   14001e93e:	mov    QWORD PTR [rsp+0x50],rax
   14001e943:	test   rax,rax
   14001e946:	je     0x14001e9c2
   14001e948:	and    QWORD PTR [rsp+0x38],0x0
   14001e94e:	and    QWORD PTR [rsp+0x30],0x0
   14001e954:	mov    r8,QWORD PTR [rbx]
   14001e957:	mov    r9d,ebp
   14001e95a:	xor    edx,edx
   14001e95c:	xor    ecx,ecx
   14001e95e:	mov    DWORD PTR [rsp+0x28],edi
   14001e962:	mov    QWORD PTR [rsp+0x20],rax
   14001e967:	call   QWORD PTR [rip+0x8a43]        # 0x1400273b0
   14001e96d:	test   eax,eax
   14001e96f:	je     0x14001e9b8
   14001e971:	lea    rcx,[rsp+0x50]
   14001e976:	xor    edx,edx
   14001e978:	call   0x1400127a4
   14001e97d:	test   eax,eax
   14001e97f:	jns    0x14001e996
   14001e981:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e986:	test   rcx,rcx
   14001e989:	je     0x14001e996
   14001e98b:	call   0x1400098ac
   14001e990:	and    QWORD PTR [rsp+0x50],0x0
   14001e996:	add    rbx,0x8
   14001e99a:	mov    rax,QWORD PTR [rbx]
   14001e99d:	test   rax,rax
   14001e9a0:	jne    0x14001e8ff
   14001e9a6:	xor    eax,eax
   14001e9a8:	mov    rbx,QWORD PTR [rsp+0x58]
   14001e9ad:	mov    rbp,QWORD PTR [rsp+0x60]
   14001e9b2:	add    rsp,0x40
   14001e9b6:	pop    rdi
   14001e9b7:	ret    
   14001e9b8:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e9bd:	call   0x1400098ac
   14001e9c2:	mov    eax,ebp
   14001e9c4:	jmp    0x14001e9a8
   14001e9c6:	int3   
   14001e9c7:	int3   
   14001e9c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9cd:	push   rdi
   14001e9ce:	sub    rsp,0x30
   14001e9d2:	mov    rbx,r8
   14001e9d5:	mov    rdi,rdx
   14001e9d8:	test   rcx,rcx
   14001e9db:	je     0x14001ea0f
   14001e9dd:	xor    edx,edx
   14001e9df:	lea    rax,[rdx-0x20]
   14001e9e3:	div    rcx
   14001e9e6:	cmp    rax,rdi
   14001e9e9:	jae    0x14001ea0f
   14001e9eb:	call   0x14000f574
   14001e9f0:	and    QWORD PTR [rsp+0x20],0x0
   14001e9f6:	xor    r9d,r9d
   14001e9f9:	xor    r8d,r8d
   14001e9fc:	xor    edx,edx
   14001e9fe:	xor    ecx,ecx
   14001ea00:	mov    DWORD PTR [rax],0xc
   14001ea06:	call   0x14000e4d8
   14001ea0b:	xor    eax,eax
   14001ea0d:	jmp    0x14001ea6c
   14001ea0f:	imul   rdi,rcx
   14001ea13:	mov    eax,0x1
   14001ea18:	test   rdi,rdi
   14001ea1b:	cmove  rdi,rax
   14001ea1f:	xor    eax,eax
   14001ea21:	cmp    rdi,0xffffffffffffffe0
   14001ea25:	ja     0x14001ea3f
   14001ea27:	mov    rcx,QWORD PTR [rip+0x175ba]        # 0x140035fe8
   14001ea2e:	lea    edx,[rax+0x8]
   14001ea31:	mov    r8,rdi
   14001ea34:	call   QWORD PTR [rip+0x88be]        # 0x1400272f8
   14001ea3a:	test   rax,rax
   14001ea3d:	jne    0x14001ea6c
   14001ea3f:	cmp    DWORD PTR [rip+0x178ca],0x0        # 0x140036310
   14001ea46:	je     0x14001ea61
   14001ea48:	mov    rcx,rdi
   14001ea4b:	call   0x140011fc4
   14001ea50:	test   eax,eax
   14001ea52:	jne    0x14001ea1f
   14001ea54:	test   rbx,rbx
   14001ea57:	je     0x14001ea0b
   14001ea59:	mov    DWORD PTR [rbx],0xc
   14001ea5f:	jmp    0x14001ea0b
   14001ea61:	test   rbx,rbx
   14001ea64:	je     0x14001ea6c
   14001ea66:	mov    DWORD PTR [rbx],0xc
   14001ea6c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ea71:	add    rsp,0x30
   14001ea75:	pop    rdi
   14001ea76:	ret    
   14001ea77:	int3   
   14001ea78:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea7d:	mov    QWORD PTR [rsp+0x10],rsi
   14001ea82:	push   rdi
   14001ea83:	sub    rsp,0x30
   14001ea87:	xor    edi,edi
   14001ea89:	mov    rbx,rdx
   14001ea8c:	mov    rsi,rcx
   14001ea8f:	test   rdx,rdx
   14001ea92:	je     0x14001eac5
   14001ea94:	xor    edx,edx
   14001ea96:	lea    rax,[rdi-0x20]
   14001ea9a:	div    rbx
   14001ea9d:	cmp    rax,r8
   14001eaa0:	jae    0x14001eac5
   14001eaa2:	call   0x14000f574
   14001eaa7:	and    QWORD PTR [rsp+0x20],rdi
   14001eaac:	xor    r9d,r9d
   14001eaaf:	xor    r8d,r8d
   14001eab2:	xor    edx,edx
   14001eab4:	xor    ecx,ecx
   14001eab6:	mov    DWORD PTR [rax],0xc
   14001eabc:	call   0x14000e4d8
   14001eac1:	xor    eax,eax
   14001eac3:	jmp    0x14001eb02
   14001eac5:	imul   rbx,r8
   14001eac9:	test   rcx,rcx
   14001eacc:	je     0x14001ead6
   14001eace:	call   0x140023348
   14001ead3:	mov    rdi,rax
   14001ead6:	mov    rdx,rbx
   14001ead9:	mov    rcx,rsi
   14001eadc:	call   0x14000d754
   14001eae1:	mov    rsi,rax
   14001eae4:	test   rax,rax
   14001eae7:	je     0x14001eaff
   14001eae9:	cmp    rdi,rbx
   14001eaec:	jae    0x14001eaff
   14001eaee:	sub    rbx,rdi
   14001eaf1:	lea    rcx,[rdi+rax*1]
   14001eaf5:	xor    edx,edx
   14001eaf7:	mov    r8,rbx
   14001eafa:	call   0x140008a00
   14001eaff:	mov    rax,rsi
   14001eb02:	mov    rbx,QWORD PTR [rsp+0x40]
   14001eb07:	mov    rsi,QWORD PTR [rsp+0x48]
   14001eb0c:	add    rsp,0x30
   14001eb10:	pop    rdi
   14001eb11:	ret    
   14001eb12:	int3   
   14001eb13:	int3   
   14001eb14:	sub    rsp,0x38
   14001eb18:	cmp    ecx,0xfffffffe
   14001eb1b:	jne    0x14001eb2a
   14001eb1d:	call   0x14000f574
   14001eb22:	mov    DWORD PTR [rax],0x9
   14001eb28:	jmp    0x14001eb7c
   14001eb2a:	test   ecx,ecx
   14001eb2c:	js     0x14001eb5c
   14001eb2e:	cmp    ecx,DWORD PTR [rip+0x19218]        # 0x140037d4c
   14001eb34:	jae    0x14001eb5c
   14001eb36:	movsxd rcx,ecx
   14001eb39:	lea    rdx,[rip+0x19220]        # 0x140037d60
   14001eb40:	mov    rax,rcx
   14001eb43:	and    ecx,0x1f
   14001eb46:	sar    rax,0x5
   14001eb4a:	imul   rcx,rcx,0x58
   14001eb4e:	mov    rax,QWORD PTR [rdx+rax*8]
   14001eb52:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001eb57:	and    eax,0x40
   14001eb5a:	jmp    0x14001eb7e
   14001eb5c:	call   0x14000f574
   14001eb61:	and    QWORD PTR [rsp+0x20],0x0
   14001eb67:	xor    r9d,r9d
   14001eb6a:	xor    r8d,r8d
   14001eb6d:	xor    edx,edx
   14001eb6f:	xor    ecx,ecx
   14001eb71:	mov    DWORD PTR [rax],0x9
   14001eb77:	call   0x14000e4d8
   14001eb7c:	xor    eax,eax
   14001eb7e:	add    rsp,0x38
   14001eb82:	ret    
   14001eb83:	int3   
   14001eb84:	mov    rax,rsp
   14001eb87:	mov    QWORD PTR [rax+0x8],rcx
   14001eb8b:	mov    QWORD PTR [rax+0x10],rdx
   14001eb8f:	mov    QWORD PTR [rax+0x18],r8
   14001eb93:	mov    QWORD PTR [rax+0x20],r9
   14001eb97:	push   rbx
   14001eb98:	push   rdi
   14001eb99:	sub    rsp,0x38
   14001eb9d:	xor    eax,eax
   14001eb9f:	test   rcx,rcx
   14001eba2:	setne  al
   14001eba5:	test   eax,eax
   14001eba7:	jne    0x14001ebce
   14001eba9:	call   0x14000f574
   14001ebae:	mov    DWORD PTR [rax],0x16
   14001ebb4:	and    QWORD PTR [rsp+0x20],0x0
   14001ebba:	xor    r9d,r9d
   14001ebbd:	xor    r8d,r8d
   14001ebc0:	xor    edx,edx
   14001ebc2:	xor    ecx,ecx
   14001ebc4:	call   0x14000e4d8
   14001ebc9:	or     eax,0xffffffff
   14001ebcc:	jmp    0x14001ec38
   14001ebce:	lea    rdi,[rsp+0x58]
   14001ebd3:	call   0x14000a3b0
   14001ebd8:	lea    rdx,[rax+0x30]
   14001ebdc:	mov    ecx,0x1
   14001ebe1:	call   0x14000a524
   14001ebe6:	nop
   14001ebe7:	call   0x14000a3b0
   14001ebec:	lea    rcx,[rax+0x30]
   14001ebf0:	call   0x140013fc8
   14001ebf5:	mov    ebx,eax
   14001ebf7:	call   0x14000a3b0
   14001ebfc:	mov    r9,rdi
   14001ebff:	xor    r8d,r8d
   14001ec02:	mov    rdx,QWORD PTR [rsp+0x50]
   14001ec07:	lea    rcx,[rax+0x30]
   14001ec0b:	call   0x140014214
   14001ec10:	mov    edi,eax
   14001ec12:	call   0x14000a3b0
   14001ec17:	lea    rdx,[rax+0x30]
   14001ec1b:	mov    ecx,ebx
   14001ec1d:	call   0x14001409c
   14001ec22:	nop
   14001ec23:	call   0x14000a3b0
   14001ec28:	lea    rdx,[rax+0x30]
   14001ec2c:	mov    ecx,0x1
   14001ec31:	call   0x14000a5ac
   14001ec36:	mov    eax,edi
   14001ec38:	add    rsp,0x38
   14001ec3c:	pop    rdi
   14001ec3d:	pop    rbx
   14001ec3e:	ret    
   14001ec3f:	int3   
   14001ec40:	mov    rax,rsp
   14001ec43:	mov    QWORD PTR [rax+0x10],rdx
   14001ec47:	mov    QWORD PTR [rax+0x18],r8
   14001ec4b:	mov    QWORD PTR [rax+0x20],r9
   14001ec4f:	sub    rsp,0x28
   14001ec53:	lea    r8,[rax+0x18]
   14001ec57:	call   0x140024e00
   14001ec5c:	add    rsp,0x28
   14001ec60:	ret    
   14001ec61:	int3   
   14001ec62:	int3   
   14001ec63:	int3   
   14001ec64:	mov    rax,rsp
   14001ec67:	mov    QWORD PTR [rax+0x10],rdx
   14001ec6b:	mov    QWORD PTR [rax+0x18],r8
   14001ec6f:	mov    QWORD PTR [rax+0x20],r9
   14001ec73:	sub    rsp,0x28
   14001ec77:	lea    r8,[rax+0x18]
   14001ec7b:	call   0x140024e18
   14001ec80:	add    rsp,0x28
   14001ec84:	ret    
   14001ec85:	int3   
   14001ec86:	int3   
   14001ec87:	int3   
   14001ec88:	mov    rax,rsp
   14001ec8b:	mov    QWORD PTR [rax+0x8],rcx
   14001ec8f:	mov    QWORD PTR [rax+0x10],rdx
   14001ec93:	mov    QWORD PTR [rax+0x18],r8
   14001ec97:	mov    QWORD PTR [rax+0x20],r9
   14001ec9b:	sub    rsp,0x28
   14001ec9f:	lea    r8,[rax+0x10]
   14001eca3:	xor    edx,edx
   14001eca5:	call   0x140024e18
   14001ecaa:	add    rsp,0x28
   14001ecae:	ret    
   14001ecaf:	int3   
   14001ecb0:	mov    rax,rsp
   14001ecb3:	mov    QWORD PTR [rax+0x10],rdx
   14001ecb7:	mov    QWORD PTR [rax+0x18],r8
   14001ecbb:	mov    QWORD PTR [rax+0x20],r9
   14001ecbf:	sub    rsp,0x28
   14001ecc3:	lea    r8,[rax+0x18]
   14001ecc7:	call   0x140024e30
   14001eccc:	add    rsp,0x28
   14001ecd0:	ret    
   14001ecd1:	int3   
   14001ecd2:	int3   
   14001ecd3:	int3   
   14001ecd4:	mov    rax,rsp
   14001ecd7:	mov    QWORD PTR [rax+0x8],rcx
   14001ecdb:	mov    QWORD PTR [rax+0x10],rdx
   14001ecdf:	mov    QWORD PTR [rax+0x18],r8
   14001ece3:	mov    QWORD PTR [rax+0x20],r9
   14001ece7:	sub    rsp,0x28
   14001eceb:	lea    r8,[rax+0x10]
   14001ecef:	xor    edx,edx
   14001ecf1:	call   0x140024e30
   14001ecf6:	add    rsp,0x28
   14001ecfa:	ret    
   14001ecfb:	int3   
   14001ecfc:	mov    rdx,QWORD PTR [rip+0x1559d]        # 0x1400342a0
   14001ed03:	xor    eax,eax
   14001ed05:	or     rdx,0x1
   14001ed09:	cmp    QWORD PTR [rip+0x179e0],rdx        # 0x1400366f0
   14001ed10:	sete   al
   14001ed13:	neg    ecx
   14001ed15:	sbb    rcx,rcx
   14001ed18:	and    rcx,rdx
   14001ed1b:	mov    QWORD PTR [rip+0x179ce],rcx        # 0x1400366f0
   14001ed22:	ret    
   14001ed23:	int3   
   14001ed24:	mov    rcx,QWORD PTR [rip+0x15575]        # 0x1400342a0
   14001ed2b:	xor    eax,eax
   14001ed2d:	or     rcx,0x1
   14001ed31:	cmp    QWORD PTR [rip+0x179b8],rcx        # 0x1400366f0
   14001ed38:	sete   al
   14001ed3b:	ret    
   14001ed3c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ed41:	mov    WORD PTR [rsp+0x20],r9w
   14001ed47:	push   rbp
   14001ed48:	push   rsi
   14001ed49:	push   rdi
   14001ed4a:	sub    rsp,0x60
   14001ed4e:	xor    ebp,ebp
   14001ed50:	mov    rdi,r8
   14001ed53:	mov    rsi,rdx
   14001ed56:	mov    rbx,rcx
   14001ed59:	cmp    rdx,rbp
   14001ed5c:	jne    0x14001ed71
   14001ed5e:	cmp    r8,rbp
   14001ed61:	jbe    0x14001ed71
   14001ed63:	cmp    rcx,rbp
   14001ed66:	je     0x14001ed6a
   14001ed68:	mov    DWORD PTR [rcx],ebp
   14001ed6a:	xor    eax,eax
   14001ed6c:	jmp    0x14001ee15
   14001ed71:	cmp    rcx,rbp
   14001ed74:	je     0x14001ed79
   14001ed76:	or     DWORD PTR [rcx],0xffffffff
   14001ed79:	cmp    r8,0x7fffffff
   14001ed80:	jbe    0x14001eda6
   14001ed82:	call   0x14000f574
   14001ed87:	mov    ebx,0x16
   14001ed8c:	xor    r9d,r9d
   14001ed8f:	xor    r8d,r8d
   14001ed92:	xor    edx,edx
   14001ed94:	xor    ecx,ecx
   14001ed96:	mov    DWORD PTR [rax],ebx
   14001ed98:	mov    QWORD PTR [rsp+0x20],rbp
   14001ed9d:	call   0x14000e4d8
   14001eda2:	mov    eax,ebx
   14001eda4:	jmp    0x14001ee15
   14001eda6:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001edae:	lea    rcx,[rsp+0x40]
   14001edb3:	call   0x1400094b4
   14001edb8:	mov    r11,QWORD PTR [rsp+0x40]
   14001edbd:	cmp    DWORD PTR [r11+0x14],ebp
   14001edc1:	jne    0x14001ee94
   14001edc7:	movzx  eax,WORD PTR [rsp+0x98]
   14001edcf:	mov    ecx,0xff
   14001edd4:	cmp    ax,cx
   14001edd7:	jbe    0x14001ee25
   14001edd9:	cmp    rsi,rbp
   14001eddc:	je     0x14001edf0
   14001edde:	cmp    rdi,rbp
   14001ede1:	jbe    0x14001edf0
   14001ede3:	mov    r8,rdi
   14001ede6:	xor    edx,edx
   14001ede8:	mov    rcx,rsi
   14001edeb:	call   0x140008a00
   14001edf0:	call   0x14000f574
   14001edf5:	mov    DWORD PTR [rax],0x2a
   14001edfb:	call   0x14000f574
   14001ee00:	mov    eax,DWORD PTR [rax]
   14001ee02:	cmp    BYTE PTR [rsp+0x58],bpl
   14001ee07:	je     0x14001ee15
   14001ee09:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ee0e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ee15:	mov    rbx,QWORD PTR [rsp+0x80]
   14001ee1d:	add    rsp,0x60
   14001ee21:	pop    rdi
   14001ee22:	pop    rsi
   14001ee23:	pop    rbp
   14001ee24:	ret    
   14001ee25:	cmp    rsi,rbp
   14001ee28:	je     0x14001ee6d
   14001ee2a:	cmp    rdi,rbp
   14001ee2d:	ja     0x14001ee6b
   14001ee2f:	call   0x14000f574
   14001ee34:	mov    ebx,0x22
   14001ee39:	xor    r9d,r9d
   14001ee3c:	xor    r8d,r8d
   14001ee3f:	xor    edx,edx
   14001ee41:	xor    ecx,ecx
   14001ee43:	mov    DWORD PTR [rax],ebx
   14001ee45:	mov    QWORD PTR [rsp+0x20],rbp
   14001ee4a:	call   0x14000e4d8
   14001ee4f:	cmp    BYTE PTR [rsp+0x58],bpl
   14001ee54:	je     0x14001eda2
   14001ee5a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ee5f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ee66:	jmp    0x14001eda2
   14001ee6b:	mov    BYTE PTR [rsi],al
   14001ee6d:	cmp    rbx,rbp
   14001ee70:	je     0x14001ee78
   14001ee72:	mov    DWORD PTR [rbx],0x1
   14001ee78:	cmp    BYTE PTR [rsp+0x58],bpl
   14001ee7d:	je     0x14001ed6a
   14001ee83:	mov    rax,QWORD PTR [rsp+0x50]
   14001ee88:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ee8f:	jmp    0x14001ed6a
   14001ee94:	lea    rax,[rsp+0x88]
   14001ee9c:	mov    DWORD PTR [rsp+0x88],ebp
   14001eea3:	mov    ecx,DWORD PTR [r11+0x4]
   14001eea7:	mov    QWORD PTR [rsp+0x38],rax
   14001eeac:	mov    QWORD PTR [rsp+0x30],rbp
   14001eeb1:	lea    r8,[rsp+0x98]
   14001eeb9:	mov    r9d,0x1
   14001eebf:	xor    edx,edx
   14001eec1:	mov    DWORD PTR [rsp+0x28],edi
   14001eec5:	mov    QWORD PTR [rsp+0x20],rsi
   14001eeca:	call   QWORD PTR [rip+0x84e0]        # 0x1400273b0
   14001eed0:	cmp    eax,ebp
   14001eed2:	je     0x14001eeea
   14001eed4:	cmp    DWORD PTR [rsp+0x88],ebp
   14001eedb:	jne    0x14001edf0
   14001eee1:	cmp    rbx,rbp
   14001eee4:	je     0x14001ee78
   14001eee6:	mov    DWORD PTR [rbx],eax
   14001eee8:	jmp    0x14001ee78
   14001eeea:	call   QWORD PTR [rip+0x8380]        # 0x140027270
   14001eef0:	cmp    eax,0x7a
   14001eef3:	jne    0x14001edf0
   14001eef9:	cmp    rsi,rbp
   14001eefc:	je     0x14001ef10
   14001eefe:	cmp    rdi,rbp
   14001ef01:	jbe    0x14001ef10
   14001ef03:	mov    r8,rdi
   14001ef06:	xor    edx,edx
   14001ef08:	mov    rcx,rsi
   14001ef0b:	call   0x140008a00
   14001ef10:	call   0x14000f574
   14001ef15:	mov    ebx,0x22
   14001ef1a:	xor    r9d,r9d
   14001ef1d:	xor    r8d,r8d
   14001ef20:	xor    edx,edx
   14001ef22:	xor    ecx,ecx
   14001ef24:	mov    DWORD PTR [rax],ebx
   14001ef26:	mov    QWORD PTR [rsp+0x20],rbp
   14001ef2b:	call   0x14000e4d8
   14001ef30:	cmp    BYTE PTR [rsp+0x58],bpl
   14001ef35:	je     0x14001eda2
   14001ef3b:	mov    rax,QWORD PTR [rsp+0x50]
   14001ef40:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ef47:	jmp    0x14001eda2
   14001ef4c:	sub    rsp,0x38
   14001ef50:	and    QWORD PTR [rsp+0x20],0x0
   14001ef56:	call   0x14001ed3c
   14001ef5b:	add    rsp,0x38
   14001ef5f:	ret    
   14001ef60:	mov    rax,rsp
   14001ef63:	mov    QWORD PTR [rax+0x8],rbx
   14001ef67:	mov    QWORD PTR [rax+0x10],rsi
   14001ef6b:	push   rdi
   14001ef6c:	sub    rsp,0x50
   14001ef70:	mov    rdi,rcx
   14001ef73:	movzx  ebx,dx
   14001ef76:	lea    rcx,[rax-0x28]
   14001ef7a:	or     esi,0xffffffff
   14001ef7d:	mov    rdx,r8
   14001ef80:	mov    DWORD PTR [rax+0x20],esi
   14001ef83:	call   0x1400094b4
   14001ef88:	mov    r11,QWORD PTR [rsp+0x30]
   14001ef8d:	movsxd r8,DWORD PTR [r11+0x10c]
   14001ef94:	lea    rax,[rsp+0x30]
   14001ef99:	lea    rcx,[rsp+0x78]
   14001ef9e:	movzx  r9d,bx
   14001efa2:	mov    rdx,rdi
   14001efa5:	mov    QWORD PTR [rsp+0x20],rax
   14001efaa:	call   0x14001ed3c
   14001efaf:	test   eax,eax
   14001efb1:	cmove  esi,DWORD PTR [rsp+0x78]
   14001efb6:	cmp    BYTE PTR [rsp+0x48],0x0
   14001efbb:	je     0x14001efc9
   14001efbd:	mov    rax,QWORD PTR [rsp+0x40]
   14001efc2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001efc9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001efce:	mov    eax,esi
   14001efd0:	mov    rsi,QWORD PTR [rsp+0x68]
   14001efd5:	add    rsp,0x50
   14001efd9:	pop    rdi
   14001efda:	ret    
   14001efdb:	int3   
   14001efdc:	mov    QWORD PTR [rsp+0x8],rbx
   14001efe1:	mov    QWORD PTR [rsp+0x10],rsi
   14001efe6:	push   rdi
   14001efe7:	sub    rsp,0x30
   14001efeb:	or     esi,0xffffffff
   14001efee:	movzx  ebx,dx
   14001eff1:	mov    rdi,rcx
   14001eff4:	mov    DWORD PTR [rsp+0x50],esi
   14001eff8:	call   0x14001b788
   14001effd:	and    QWORD PTR [rsp+0x20],0x0
   14001f003:	lea    rcx,[rsp+0x50]
   14001f008:	movsxd r8,eax
   14001f00b:	movzx  r9d,bx
   14001f00f:	mov    rdx,rdi
   14001f012:	call   0x14001ed3c
   14001f017:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f01c:	test   eax,eax
   14001f01e:	cmove  esi,DWORD PTR [rsp+0x50]
   14001f023:	mov    eax,esi
   14001f025:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f02a:	add    rsp,0x30
   14001f02e:	pop    rdi
   14001f02f:	ret    
   14001f030:	rex push rbx
   14001f032:	sub    rsp,0x20
   14001f036:	test   BYTE PTR [rdx+0x18],0x40
   14001f03a:	mov    rbx,r8
   14001f03d:	je     0x14001f04b
   14001f03f:	cmp    QWORD PTR [rdx+0x10],0x0
   14001f044:	jne    0x14001f04b
   14001f046:	inc    DWORD PTR [r8]
   14001f049:	jmp    0x14001f071
   14001f04b:	add    DWORD PTR [rdx+0x8],0xffffffff
   14001f04f:	js     0x14001f05e
   14001f051:	mov    rax,QWORD PTR [rdx]
   14001f054:	mov    BYTE PTR [rax],cl
   14001f056:	inc    QWORD PTR [rdx]
   14001f059:	movzx  eax,cl
   14001f05c:	jmp    0x14001f066
   14001f05e:	movsx  ecx,cl
   14001f061:	call   0x140015250
   14001f066:	cmp    eax,0xffffffff
   14001f069:	jne    0x14001f06f
   14001f06b:	or     DWORD PTR [rbx],eax
   14001f06d:	jmp    0x14001f071
   14001f06f:	inc    DWORD PTR [rbx]
   14001f071:	add    rsp,0x20
   14001f075:	pop    rbx
   14001f076:	ret    
   14001f077:	int3   
   14001f078:	test   edx,edx
   14001f07a:	jle    0x14001f0c8
   14001f07c:	mov    QWORD PTR [rsp+0x8],rbx
   14001f081:	mov    QWORD PTR [rsp+0x10],rbp
   14001f086:	mov    QWORD PTR [rsp+0x18],rsi
   14001f08b:	push   rdi
   14001f08c:	sub    rsp,0x20
   14001f090:	mov    rdi,r9
   14001f093:	mov    rsi,r8
   14001f096:	mov    ebx,edx
   14001f098:	mov    bpl,cl
   14001f09b:	mov    r8,rdi
   14001f09e:	mov    rdx,rsi
   14001f0a1:	mov    cl,bpl
   14001f0a4:	dec    ebx
   14001f0a6:	call   0x14001f030
   14001f0ab:	cmp    DWORD PTR [rdi],0xffffffff
   14001f0ae:	je     0x14001f0b4
   14001f0b0:	test   ebx,ebx
   14001f0b2:	jg     0x14001f09b
   14001f0b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f0b9:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f0be:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f0c3:	add    rsp,0x20
   14001f0c7:	pop    rdi
   14001f0c8:	ret    
   14001f0c9:	int3   
   14001f0ca:	int3   
   14001f0cb:	int3   
   14001f0cc:	mov    QWORD PTR [rsp+0x8],rbx
   14001f0d1:	mov    QWORD PTR [rsp+0x10],rbp
   14001f0d6:	mov    QWORD PTR [rsp+0x18],rsi
   14001f0db:	push   rdi
   14001f0dc:	sub    rsp,0x20
   14001f0e0:	test   BYTE PTR [r8+0x18],0x40
   14001f0e5:	mov    rdi,r9
   14001f0e8:	mov    rsi,r8
   14001f0eb:	mov    ebx,edx
   14001f0ed:	mov    rbp,rcx
   14001f0f0:	je     0x14001f0fe
   14001f0f2:	cmp    QWORD PTR [r8+0x10],0x0
   14001f0f7:	jne    0x14001f0fe
   14001f0f9:	add    DWORD PTR [r9],edx
   14001f0fc:	jmp    0x14001f135
   14001f0fe:	test   edx,edx
   14001f100:	jle    0x14001f135
   14001f102:	mov    cl,BYTE PTR [rbp+0x0]
   14001f105:	mov    r8,rdi
   14001f108:	mov    rdx,rsi
   14001f10b:	dec    ebx
   14001f10d:	call   0x14001f030
   14001f112:	inc    rbp
   14001f115:	cmp    DWORD PTR [rdi],0xffffffff
   14001f118:	jne    0x14001f131
   14001f11a:	call   0x14000f574
   14001f11f:	cmp    DWORD PTR [rax],0x2a
   14001f122:	jne    0x14001f135
   14001f124:	mov    r8,rdi
   14001f127:	mov    rdx,rsi
   14001f12a:	mov    cl,0x3f
   14001f12c:	call   0x14001f030
   14001f131:	test   ebx,ebx
   14001f133:	jg     0x14001f102
   14001f135:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f13a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f13f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f144:	add    rsp,0x20
   14001f148:	pop    rdi
   14001f149:	ret    
   14001f14a:	int3   
   14001f14b:	int3   
   14001f14c:	mov    QWORD PTR [rsp+0x18],rbx
   14001f151:	push   rbp
   14001f152:	push   rsi
   14001f153:	push   rdi
   14001f154:	push   r12
   14001f156:	push   r13
   14001f158:	push   r14
   14001f15a:	push   r15
   14001f15c:	sub    rsp,0x2d0
   14001f163:	mov    rax,QWORD PTR [rip+0x15136]        # 0x1400342a0
   14001f16a:	xor    rax,rsp
   14001f16d:	mov    QWORD PTR [rsp+0x2c8],rax
   14001f175:	xor    eax,eax
   14001f177:	mov    rbx,rcx
   14001f17a:	mov    QWORD PTR [rsp+0x68],rcx
   14001f17f:	mov    rdi,rdx
   14001f182:	lea    rcx,[rsp+0x78]
   14001f187:	mov    rdx,r8
   14001f18a:	mov    r13,r9
   14001f18d:	mov    DWORD PTR [rsp+0x60],eax
   14001f191:	mov    r12d,eax
   14001f194:	mov    DWORD PTR [rsp+0x54],eax
   14001f198:	mov    r15d,eax
   14001f19b:	mov    DWORD PTR [rsp+0x48],eax
   14001f19f:	mov    DWORD PTR [rsp+0x58],eax
   14001f1a3:	mov    DWORD PTR [rsp+0x50],eax
   14001f1a7:	call   0x1400094b4
   14001f1ac:	xor    r10d,r10d
   14001f1af:	cmp    rbx,r10
   14001f1b2:	jne    0x14001f1f5
   14001f1b4:	call   0x14000f574
   14001f1b9:	xor    ebx,ebx
   14001f1bb:	xor    r9d,r9d
   14001f1be:	xor    r8d,r8d
   14001f1c1:	xor    edx,edx
   14001f1c3:	xor    ecx,ecx
   14001f1c5:	mov    DWORD PTR [rax],0x16
   14001f1cb:	mov    QWORD PTR [rsp+0x20],rbx
   14001f1d0:	call   0x14000e4d8
   14001f1d5:	cmp    BYTE PTR [rsp+0x90],bl
   14001f1dc:	je     0x14001f1ed
   14001f1de:	mov    rax,QWORD PTR [rsp+0x88]
   14001f1e6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001f1ed:	or     eax,0xffffffff
   14001f1f0:	jmp    0x14001fa0c
   14001f1f5:	or     r14d,0xffffffff
   14001f1f9:	test   BYTE PTR [rbx+0x18],0x40
   14001f1fd:	lea    r9,[rip+0xfffffffffffe0dfc]        # 0x140000000
   14001f204:	jne    0x14001f2c4
   14001f20a:	mov    rcx,rbx
   14001f20d:	call   0x140014cfc
   14001f212:	lea    rdx,[rip+0x162a7]        # 0x1400354c0
   14001f219:	cmp    eax,r14d
   14001f21c:	je     0x14001f246
   14001f21e:	cmp    eax,0xfffffffe
   14001f221:	je     0x14001f246
   14001f223:	movsxd r8,eax
   14001f226:	lea    r9,[rip+0xfffffffffffe0dd3]        # 0x140000000
   14001f22d:	mov    rcx,r8
   14001f230:	and    r8d,0x1f
   14001f234:	sar    rcx,0x5
   14001f238:	imul   r8,r8,0x58
   14001f23c:	add    r8,QWORD PTR [r9+rcx*8+0x37d60]
   14001f244:	jmp    0x14001f250
   14001f246:	mov    r8,rdx
   14001f249:	lea    r9,[rip+0xfffffffffffe0db0]        # 0x140000000
   14001f250:	test   BYTE PTR [r8+0x38],0x7f
   14001f255:	jne    0x14001f280
   14001f257:	cmp    eax,r14d
   14001f25a:	je     0x14001f27a
   14001f25c:	cmp    eax,0xfffffffe
   14001f25f:	je     0x14001f27a
   14001f261:	movsxd rdx,eax
   14001f264:	mov    rax,rdx
   14001f267:	and    edx,0x1f
   14001f26a:	sar    rax,0x5
   14001f26e:	imul   rdx,rdx,0x58
   14001f272:	add    rdx,QWORD PTR [r9+rax*8+0x37d60]
   14001f27a:	test   BYTE PTR [rdx+0x38],0x80
   14001f27e:	je     0x14001f2c1
   14001f280:	call   0x14000f574
   14001f285:	xor    ebx,ebx
   14001f287:	xor    r9d,r9d
   14001f28a:	xor    r8d,r8d
   14001f28d:	xor    edx,edx
   14001f28f:	xor    ecx,ecx
   14001f291:	mov    DWORD PTR [rax],0x16
   14001f297:	mov    QWORD PTR [rsp+0x20],rbx
   14001f29c:	call   0x14000e4d8
   14001f2a1:	cmp    BYTE PTR [rsp+0x90],bl
   14001f2a8:	je     0x14001f2b9
   14001f2aa:	mov    rax,QWORD PTR [rsp+0x88]
   14001f2b2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001f2b9:	mov    eax,r14d
   14001f2bc:	jmp    0x14001fa0c
   14001f2c1:	xor    r10d,r10d
   14001f2c4:	cmp    rdi,r10
   14001f2c7:	je     0x14001f280
   14001f2c9:	mov    bpl,BYTE PTR [rdi]
   14001f2cc:	mov    esi,r10d
   14001f2cf:	mov    DWORD PTR [rsp+0x40],r10d
   14001f2d4:	mov    DWORD PTR [rsp+0x44],r10d
   14001f2d9:	mov    edx,r10d
   14001f2dc:	mov    QWORD PTR [rsp+0x98],r10
   14001f2e4:	cmp    bpl,r10b
   14001f2e7:	je     0x14001f9f1
   14001f2ed:	mov    rbx,QWORD PTR [rsp+0xa8]
   14001f2f5:	mov    r11d,0x200
   14001f2fb:	inc    rdi
   14001f2fe:	cmp    esi,r10d
   14001f301:	mov    QWORD PTR [rsp+0xb0],rdi
   14001f309:	jl     0x14001f9e3
   14001f30f:	lea    eax,[rbp-0x20]
   14001f312:	cmp    al,0x58
   14001f314:	ja     0x14001f328
   14001f316:	movsx  rax,bpl
   14001f31a:	movzx  ecx,BYTE PTR [rax+r9*1+0x2fbf0]
   14001f323:	and    ecx,0xf
   14001f326:	jmp    0x14001f32b
   14001f328:	mov    ecx,r10d
   14001f32b:	movsxd rax,ecx
   14001f32e:	lea    rcx,[rax+rax*8]
   14001f332:	movsxd rax,edx
   14001f335:	add    rcx,rax
   14001f338:	movzx  edx,BYTE PTR [rcx+r9*1+0x2fc10]
   14001f341:	shr    edx,0x4
   14001f344:	mov    DWORD PTR [rsp+0x5c],edx
   14001f348:	cmp    edx,0x8
   14001f34b:	je     0x14001f280
   14001f351:	mov    ecx,edx
   14001f353:	cmp    edx,r10d
   14001f356:	je     0x14001fae6
   14001f35c:	sub    ecx,0x1
   14001f35f:	je     0x14001fbfe
   14001f365:	sub    ecx,0x1
   14001f368:	je     0x14001fbae
   14001f36e:	sub    ecx,0x1
   14001f371:	je     0x14001fb73
   14001f377:	sub    ecx,0x1
   14001f37a:	je     0x14001fb6b
   14001f380:	sub    ecx,0x1
   14001f383:	je     0x14001fb3a
   14001f389:	sub    ecx,0x1
   14001f38c:	je     0x14001fa37
   14001f392:	cmp    ecx,0x1
   14001f395:	jne    0x14001f9d7
   14001f39b:	movsx  eax,bpl
   14001f39f:	cmp    eax,0x64
   14001f3a2:	jg     0x14001f526
   14001f3a8:	je     0x14001f62e
   14001f3ae:	cmp    eax,0x41
   14001f3b1:	je     0x14001f4f7
   14001f3b7:	cmp    eax,0x43
   14001f3ba:	je     0x14001f490
   14001f3c0:	cmp    eax,0x45
   14001f3c3:	je     0x14001f4f7
   14001f3c9:	cmp    eax,0x47
   14001f3cc:	je     0x14001f4f7
   14001f3d2:	cmp    eax,0x53
   14001f3d5:	je     0x14001f444
   14001f3d7:	cmp    eax,0x58
   14001f3da:	je     0x14001f5c4
   14001f3e0:	cmp    eax,0x5a
   14001f3e3:	je     0x14001f3fc
   14001f3e5:	cmp    eax,0x61
   14001f3e8:	je     0x14001f503
   14001f3ee:	cmp    eax,0x63
   14001f3f1:	je     0x14001f49e
   14001f3f7:	jmp    0x14001f844
   14001f3fc:	mov    rax,QWORD PTR [r13+0x0]
   14001f400:	add    r13,0x8
   14001f404:	cmp    rax,r10
   14001f407:	je     0x14001f438
   14001f409:	mov    rbx,QWORD PTR [rax+0x8]
   14001f40d:	cmp    rbx,r10
   14001f410:	je     0x14001f438
   14001f412:	bt     r12d,0xb
   14001f417:	movsx  eax,WORD PTR [rax]
   14001f41a:	jae    0x14001f42e
   14001f41c:	cdq    
   14001f41d:	mov    DWORD PTR [rsp+0x50],0x1
   14001f425:	sub    eax,edx
   14001f427:	sar    eax,1
   14001f429:	jmp    0x14001f840
   14001f42e:	mov    DWORD PTR [rsp+0x50],r10d
   14001f433:	jmp    0x14001f840
   14001f438:	mov    rbx,QWORD PTR [rip+0x160d9]        # 0x140035518
   14001f43f:	jmp    0x14001f835
   14001f444:	test   r12d,0x830
   14001f44b:	jne    0x14001f452
   14001f44d:	bts    r12d,0xb
   14001f452:	mov    rbx,QWORD PTR [r13+0x0]
   14001f456:	cmp    r15d,r14d
   14001f459:	mov    eax,r15d
   14001f45c:	mov    ecx,0x7fffffff
   14001f461:	cmove  eax,ecx
   14001f464:	add    r13,0x8
   14001f468:	test   r12d,0x810
   14001f46f:	je     0x14001f58f
   14001f475:	cmp    rbx,r10
   14001f478:	mov    DWORD PTR [rsp+0x50],0x1
   14001f480:	cmove  rbx,QWORD PTR [rip+0x16098]        # 0x140035520
   14001f488:	mov    rcx,rbx
   14001f48b:	jmp    0x14001f582
   14001f490:	test   r12d,0x830
   14001f497:	jne    0x14001f49e
   14001f499:	bts    r12d,0xb
   14001f49e:	add    r13,0x8
   14001f4a2:	test   r12d,0x810
   14001f4a9:	je     0x14001f4d7
   14001f4ab:	movzx  r9d,WORD PTR [r13-0x8]
   14001f4b0:	lea    rdx,[rsp+0xc0]
   14001f4b8:	lea    rcx,[rsp+0x44]
   14001f4bd:	mov    r8,r11
   14001f4c0:	call   0x14001ef4c
   14001f4c5:	xor    r10d,r10d
   14001f4c8:	cmp    eax,r10d
   14001f4cb:	je     0x14001f4ea
   14001f4cd:	mov    DWORD PTR [rsp+0x58],0x1
   14001f4d5:	jmp    0x14001f4ea
   14001f4d7:	mov    al,BYTE PTR [r13-0x8]
   14001f4db:	mov    DWORD PTR [rsp+0x44],0x1
   14001f4e3:	mov    BYTE PTR [rsp+0xc0],al
   14001f4ea:	lea    rbx,[rsp+0xc0]
   14001f4f2:	jmp    0x14001f844
   14001f4f7:	mov    DWORD PTR [rsp+0x70],0x1
   14001f4ff:	add    bpl,0x20
   14001f503:	or     r12d,0x40
   14001f507:	cmp    r15d,r10d
   14001f50a:	lea    rbx,[rsp+0xc0]
   14001f512:	mov    esi,r11d
   14001f515:	jge    0x14001f748
   14001f51b:	mov    r15d,0x6
   14001f521:	jmp    0x14001f791
   14001f526:	cmp    eax,0x65
   14001f529:	jl     0x14001f844
   14001f52f:	cmp    eax,0x67
   14001f532:	jle    0x14001f503
   14001f534:	cmp    eax,0x69
   14001f537:	je     0x14001f62e
   14001f53d:	cmp    eax,0x6e
   14001f540:	je     0x14001f5fb
   14001f546:	cmp    eax,0x6f
   14001f549:	je     0x14001f5e9
   14001f54f:	cmp    eax,0x70
   14001f552:	je     0x14001f5b9
   14001f554:	cmp    eax,0x73
   14001f557:	je     0x14001f452
   14001f55d:	cmp    eax,0x75
   14001f560:	je     0x14001f632
   14001f566:	cmp    eax,0x78
   14001f569:	jne    0x14001f844
   14001f56f:	mov    eax,0x27
   14001f574:	jmp    0x14001f5c9
   14001f576:	dec    eax
   14001f578:	cmp    WORD PTR [rcx],r10w
   14001f57c:	je     0x14001f587
   14001f57e:	add    rcx,0x2
   14001f582:	cmp    eax,r10d
   14001f585:	jne    0x14001f576
   14001f587:	sub    rcx,rbx
   14001f58a:	sar    rcx,1
   14001f58d:	jmp    0x14001f5b0
   14001f58f:	cmp    rbx,r10
   14001f592:	cmove  rbx,QWORD PTR [rip+0x15f7e]        # 0x140035518
   14001f59a:	mov    rcx,rbx
   14001f59d:	jmp    0x14001f5a9
   14001f59f:	dec    eax
   14001f5a1:	cmp    BYTE PTR [rcx],r10b
   14001f5a4:	je     0x14001f5ae
   14001f5a6:	inc    rcx
   14001f5a9:	cmp    eax,r10d
   14001f5ac:	jne    0x14001f59f
   14001f5ae:	sub    ecx,ebx
   14001f5b0:	mov    DWORD PTR [rsp+0x44],ecx
   14001f5b4:	jmp    0x14001f844
   14001f5b9:	mov    r15d,0x10
   14001f5bf:	bts    r12d,0xf
   14001f5c4:	mov    eax,0x7
   14001f5c9:	mov    DWORD PTR [rsp+0x60],eax
   14001f5cd:	mov    r9d,0x10
   14001f5d3:	test   r12b,r12b
   14001f5d6:	jns    0x14001f638
   14001f5d8:	add    al,0x51
   14001f5da:	mov    BYTE PTR [rsp+0x4c],0x30
   14001f5df:	lea    edx,[r9-0xe]
   14001f5e3:	mov    BYTE PTR [rsp+0x4d],al
   14001f5e7:	jmp    0x14001f63c
   14001f5e9:	mov    r9d,0x8
   14001f5ef:	test   r12b,r12b
   14001f5f2:	jns    0x14001f638
   14001f5f4:	bts    r12d,0x9
   14001f5f9:	jmp    0x14001f638
   14001f5fb:	mov    rdi,QWORD PTR [r13+0x0]
   14001f5ff:	add    r13,0x8
   14001f603:	call   0x14001ed24
   14001f608:	xor    r10d,r10d
   14001f60b:	cmp    eax,r10d
   14001f60e:	je     0x14001f280
   14001f614:	test   r12b,0x20
   14001f618:	je     0x14001f61f
   14001f61a:	mov    WORD PTR [rdi],si
   14001f61d:	jmp    0x14001f621
   14001f61f:	mov    DWORD PTR [rdi],esi
   14001f621:	mov    DWORD PTR [rsp+0x58],0x1
   14001f629:	jmp    0x14001f99a
   14001f62e:	or     r12d,0x40
   14001f632:	mov    r9d,0xa
   14001f638:	mov    edx,DWORD PTR [rsp+0x48]
   14001f63c:	bt     r12d,0xf
   14001f641:	jb     0x14001f64a
   14001f643:	bt     r12d,0xc
   14001f648:	jae    0x14001f654
   14001f64a:	mov    r8,QWORD PTR [r13+0x0]
   14001f64e:	add    r13,0x8
   14001f652:	jmp    0x14001f682
   14001f654:	add    r13,0x8
   14001f658:	test   r12b,0x20
   14001f65c:	je     0x14001f672
   14001f65e:	test   r12b,0x40
   14001f662:	je     0x14001f66b
   14001f664:	movsx  r8,WORD PTR [r13-0x8]
   14001f669:	jmp    0x14001f682
   14001f66b:	movzx  r8d,WORD PTR [r13-0x8]
   14001f670:	jmp    0x14001f682
   14001f672:	test   r12b,0x40
   14001f676:	je     0x14001f67e
   14001f678:	movsxd r8,DWORD PTR [r13-0x8]
   14001f67c:	jmp    0x14001f682
   14001f67e:	mov    r8d,DWORD PTR [r13-0x8]
   14001f682:	test   r12b,0x40
   14001f686:	je     0x14001f695
   14001f688:	cmp    r8,r10
   14001f68b:	jge    0x14001f695
   14001f68d:	neg    r8
   14001f690:	bts    r12d,0x8
   14001f695:	bt     r12d,0xf
   14001f69a:	jb     0x14001f6a6
   14001f69c:	bt     r12d,0xc
   14001f6a1:	jb     0x14001f6a6
   14001f6a3:	mov    r8d,r8d
   14001f6a6:	cmp    r15d,r10d
   14001f6a9:	jge    0x14001f6b3
   14001f6ab:	mov    r15d,0x1
   14001f6b1:	jmp    0x14001f6be
   14001f6b3:	and    r12d,0xfffffff7
   14001f6b7:	cmp    r15d,r11d
   14001f6ba:	cmovg  r15d,r11d
   14001f6be:	mov    r14d,DWORD PTR [rsp+0x60]
   14001f6c3:	mov    rax,r8
   14001f6c6:	lea    rbx,[rsp+0x2bf]
   14001f6ce:	neg    rax
   14001f6d1:	sbb    ecx,ecx
   14001f6d3:	and    ecx,edx
   14001f6d5:	mov    DWORD PTR [rsp+0x48],ecx
   14001f6d9:	mov    ecx,r15d
   14001f6dc:	dec    r15d
   14001f6df:	cmp    ecx,r10d
   14001f6e2:	jg     0x14001f6e9
   14001f6e4:	cmp    r8,r10
   14001f6e7:	je     0x14001f709
   14001f6e9:	xor    edx,edx
   14001f6eb:	mov    rax,r8
   14001f6ee:	movsxd rcx,r9d
   14001f6f1:	div    rcx
   14001f6f4:	mov    r8,rax
   14001f6f7:	lea    eax,[rdx+0x30]
   14001f6fa:	cmp    eax,0x39
   14001f6fd:	jle    0x14001f702
   14001f6ff:	add    eax,r14d
   14001f702:	mov    BYTE PTR [rbx],al
   14001f704:	dec    rbx
   14001f707:	jmp    0x14001f6d9
   14001f709:	lea    rax,[rsp+0x2bf]
   14001f711:	mov    r14d,0xffffffff
   14001f717:	sub    eax,ebx
   14001f719:	inc    rbx
   14001f71c:	bt     r12d,0x9
   14001f721:	mov    DWORD PTR [rsp+0x44],eax
   14001f725:	jae    0x14001f844
   14001f72b:	cmp    eax,r10d
   14001f72e:	je     0x14001f739
   14001f730:	cmp    BYTE PTR [rbx],0x30
   14001f733:	je     0x14001f844
   14001f739:	dec    rbx
   14001f73c:	inc    DWORD PTR [rsp+0x44]
   14001f740:	mov    BYTE PTR [rbx],0x30
   14001f743:	jmp    0x14001f844
   14001f748:	jne    0x14001f758
   14001f74a:	cmp    bpl,0x67
   14001f74e:	jne    0x14001f791
   14001f750:	mov    r15d,0x1
   14001f756:	jmp    0x14001f791
   14001f758:	cmp    r15d,r11d
   14001f75b:	cmovg  r15d,r11d
   14001f75f:	cmp    r15d,0xa3
   14001f766:	jle    0x14001f791
   14001f768:	lea    edi,[r15+0x15d]
   14001f76f:	movsxd rcx,edi
   14001f772:	call   0x140012c00
   14001f777:	mov    QWORD PTR [rsp+0x98],rax
   14001f77f:	test   rax,rax
   14001f782:	je     0x14001f78b
   14001f784:	mov    rbx,rax
   14001f787:	mov    esi,edi
   14001f789:	jmp    0x14001f791
   14001f78b:	mov    r15d,0xa3
   14001f791:	mov    rax,QWORD PTR [r13+0x0]
   14001f795:	mov    rcx,QWORD PTR [rip+0x15dc4]        # 0x140035560
   14001f79c:	add    r13,0x8
   14001f7a0:	movsx  edi,bpl
   14001f7a4:	movsxd rsi,esi
   14001f7a7:	mov    QWORD PTR [rsp+0xa8],rax
   14001f7af:	call   0x140011758
   14001f7b4:	lea    rcx,[rsp+0x78]
   14001f7b9:	mov    r9d,edi
   14001f7bc:	mov    QWORD PTR [rsp+0x30],rcx
   14001f7c1:	mov    ecx,DWORD PTR [rsp+0x70]
   14001f7c5:	mov    r8,rsi
   14001f7c8:	mov    DWORD PTR [rsp+0x28],ecx
   14001f7cc:	lea    rcx,[rsp+0xa8]
   14001f7d4:	mov    rdx,rbx
   14001f7d7:	mov    DWORD PTR [rsp+0x20],r15d
   14001f7dc:	call   rax
   14001f7de:	mov    edi,r12d
   14001f7e1:	xor    eax,eax
   14001f7e3:	and    edi,0x80
   14001f7e9:	je     0x14001f808
   14001f7eb:	cmp    r15d,eax
   14001f7ee:	jne    0x14001f808
   14001f7f0:	mov    rcx,QWORD PTR [rip+0x15d81]        # 0x140035578
   14001f7f7:	call   0x140011758
   14001f7fc:	lea    rdx,[rsp+0x78]
   14001f801:	mov    rcx,rbx
   14001f804:	call   rax
   14001f806:	xor    eax,eax
   14001f808:	cmp    bpl,0x67
   14001f80c:	jne    0x14001f828
   14001f80e:	cmp    edi,eax
   14001f810:	jne    0x14001f828
   14001f812:	mov    rcx,QWORD PTR [rip+0x15d57]        # 0x140035570
   14001f819:	call   0x140011758
   14001f81e:	lea    rdx,[rsp+0x78]
   14001f823:	mov    rcx,rbx
   14001f826:	call   rax
   14001f828:	cmp    BYTE PTR [rbx],0x2d
   14001f82b:	jne    0x14001f835
   14001f82d:	bts    r12d,0x8
   14001f832:	inc    rbx
   14001f835:	mov    rcx,rbx
   14001f838:	call   0x140012e10
   14001f83d:	xor    r10d,r10d
   14001f840:	mov    DWORD PTR [rsp+0x44],eax
   14001f844:	cmp    DWORD PTR [rsp+0x58],r10d
   14001f849:	jne    0x14001f99a
   14001f84f:	test   r12b,0x40
   14001f853:	je     0x14001f886
   14001f855:	bt     r12d,0x8
   14001f85a:	jae    0x14001f863
   14001f85c:	mov    BYTE PTR [rsp+0x4c],0x2d
   14001f861:	jmp    0x14001f86e
   14001f863:	test   r12b,0x1
   14001f867:	je     0x14001f879
   14001f869:	mov    BYTE PTR [rsp+0x4c],0x2b
   14001f86e:	mov    edi,0x1
   14001f873:	mov    DWORD PTR [rsp+0x48],edi
   14001f877:	jmp    0x14001f88a
   14001f879:	test   r12b,0x2
   14001f87d:	je     0x14001f886
   14001f87f:	mov    BYTE PTR [rsp+0x4c],0x20
   14001f884:	jmp    0x14001f86e
   14001f886:	mov    edi,DWORD PTR [rsp+0x48]
   14001f88a:	mov    esi,DWORD PTR [rsp+0x54]
   14001f88e:	mov    rbp,QWORD PTR [rsp+0x68]
   14001f893:	sub    esi,DWORD PTR [rsp+0x44]
   14001f897:	sub    esi,edi
   14001f899:	test   r12b,0xc
   14001f89d:	jne    0x14001f8b0
   14001f89f:	lea    r9,[rsp+0x40]
   14001f8a4:	mov    r8,rbp
   14001f8a7:	mov    edx,esi
   14001f8a9:	mov    cl,0x20
   14001f8ab:	call   0x14001f078
   14001f8b0:	lea    r9,[rsp+0x40]
   14001f8b5:	lea    rcx,[rsp+0x4c]
   14001f8ba:	mov    r8,rbp
   14001f8bd:	mov    edx,edi
   14001f8bf:	call   0x14001f0cc
   14001f8c4:	test   r12b,0x8
   14001f8c8:	je     0x14001f8e1
   14001f8ca:	test   r12b,0x4
   14001f8ce:	jne    0x14001f8e1
   14001f8d0:	lea    r9,[rsp+0x40]
   14001f8d5:	mov    r8,rbp
   14001f8d8:	mov    edx,esi
   14001f8da:	mov    cl,0x30
   14001f8dc:	call   0x14001f078
   14001f8e1:	mov    edi,DWORD PTR [rsp+0x44]
   14001f8e5:	xor    eax,eax
   14001f8e7:	cmp    DWORD PTR [rsp+0x50],eax
   14001f8eb:	je     0x14001f962
   14001f8ed:	cmp    edi,eax
   14001f8ef:	jle    0x14001f962
   14001f8f1:	mov    rbp,rbx
   14001f8f4:	movzx  r9d,WORD PTR [rbp+0x0]
   14001f8f9:	lea    rdx,[rsp+0x2c0]
   14001f901:	lea    rcx,[rsp+0xa0]
   14001f909:	mov    r8d,0x6
   14001f90f:	dec    edi
   14001f911:	add    rbp,0x2
   14001f915:	call   0x14001ef4c
   14001f91a:	xor    r10d,r10d
   14001f91d:	cmp    eax,r10d
   14001f920:	jne    0x14001f954
   14001f922:	mov    edx,DWORD PTR [rsp+0xa0]
   14001f929:	cmp    edx,r10d
   14001f92c:	je     0x14001f954
   14001f92e:	mov    r8,QWORD PTR [rsp+0x68]
   14001f933:	lea    r9,[rsp+0x40]
   14001f938:	lea    rcx,[rsp+0x2c0]
   14001f940:	call   0x14001f0cc
   14001f945:	xor    r10d,r10d
   14001f948:	cmp    edi,r10d
   14001f94b:	jne    0x14001f8f4
   14001f94d:	mov    rbp,QWORD PTR [rsp+0x68]
   14001f952:	jmp    0x14001f977
   14001f954:	mov    rbp,QWORD PTR [rsp+0x68]
   14001f959:	mov    eax,r14d
   14001f95c:	mov    DWORD PTR [rsp+0x40],eax
   14001f960:	jmp    0x14001f97b
   14001f962:	lea    r9,[rsp+0x40]
   14001f967:	mov    r8,rbp
   14001f96a:	mov    edx,edi
   14001f96c:	mov    rcx,rbx
   14001f96f:	call   0x14001f0cc
   14001f974:	xor    r10d,r10d
   14001f977:	mov    eax,DWORD PTR [rsp+0x40]
   14001f97b:	cmp    eax,r10d
   14001f97e:	jl     0x14001f99a
   14001f980:	test   r12b,0x4
   14001f984:	je     0x14001f99a
   14001f986:	lea    r9,[rsp+0x40]
   14001f98b:	mov    r8,rbp
   14001f98e:	mov    edx,esi
   14001f990:	mov    cl,0x20
   14001f992:	call   0x14001f078
   14001f997:	xor    r10d,r10d
   14001f99a:	mov    rax,QWORD PTR [rsp+0x98]
   14001f9a2:	cmp    rax,r10
   14001f9a5:	je     0x14001f9ba
   14001f9a7:	mov    rcx,rax
   14001f9aa:	call   0x1400098ac
   14001f9af:	xor    r10d,r10d
   14001f9b2:	mov    QWORD PTR [rsp+0x98],r10
   14001f9ba:	mov    rdi,QWORD PTR [rsp+0xb0]
   14001f9c2:	mov    esi,DWORD PTR [rsp+0x40]
   14001f9c6:	mov    edx,DWORD PTR [rsp+0x5c]
   14001f9ca:	lea    r9,[rip+0xfffffffffffe062f]        # 0x140000000
   14001f9d1:	mov    r11d,0x200
   14001f9d7:	mov    bpl,BYTE PTR [rdi]
   14001f9da:	cmp    bpl,r10b
   14001f9dd:	jne    0x14001f2fb
   14001f9e3:	cmp    edx,r10d
   14001f9e6:	je     0x14001f9f1
   14001f9e8:	cmp    edx,0x7
   14001f9eb:	jne    0x14001f280
   14001f9f1:	cmp    BYTE PTR [rsp+0x90],r10b
   14001f9f9:	je     0x14001fa0a
   14001f9fb:	mov    rcx,QWORD PTR [rsp+0x88]
   14001fa03:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001fa0a:	mov    eax,esi
   14001fa0c:	mov    rcx,QWORD PTR [rsp+0x2c8]
   14001fa14:	xor    rcx,rsp
   14001fa17:	call   0x140009080
   14001fa1c:	mov    rbx,QWORD PTR [rsp+0x320]
   14001fa24:	add    rsp,0x2d0
   14001fa2b:	pop    r15
   14001fa2d:	pop    r14
   14001fa2f:	pop    r13
   14001fa31:	pop    r12
   14001fa33:	pop    rdi
   14001fa34:	pop    rsi
   14001fa35:	pop    rbp
   14001fa36:	ret    
   14001fa37:	cmp    bpl,0x49
   14001fa3b:	je     0x14001fa7a
   14001fa3d:	cmp    bpl,0x68
   14001fa41:	je     0x14001fa71
   14001fa43:	cmp    bpl,0x6c
   14001fa47:	je     0x14001fa56
   14001fa49:	cmp    bpl,0x77
   14001fa4d:	jne    0x14001f9d7
   14001fa4f:	bts    r12d,0xb
   14001fa54:	jmp    0x14001f9d7
   14001fa56:	cmp    BYTE PTR [rdi],0x6c
   14001fa59:	jne    0x14001fa68
   14001fa5b:	inc    rdi
   14001fa5e:	bts    r12d,0xc
   14001fa63:	jmp    0x14001f9d7
   14001fa68:	or     r12d,0x10
   14001fa6c:	jmp    0x14001f9d7
   14001fa71:	or     r12d,0x20
   14001fa75:	jmp    0x14001f9d7
   14001fa7a:	mov    al,BYTE PTR [rdi]
   14001fa7c:	bts    r12d,0xf
   14001fa81:	cmp    al,0x36
   14001fa83:	jne    0x14001fa99
   14001fa85:	cmp    BYTE PTR [rdi+0x1],0x34
   14001fa89:	jne    0x14001fa99
   14001fa8b:	add    rdi,0x2
   14001fa8f:	bts    r12d,0xf
   14001fa94:	jmp    0x14001f9d7
   14001fa99:	cmp    al,0x33
   14001fa9b:	jne    0x14001fab1
   14001fa9d:	cmp    BYTE PTR [rdi+0x1],0x32
   14001faa1:	jne    0x14001fab1
   14001faa3:	add    rdi,0x2
   14001faa7:	btr    r12d,0xf
   14001faac:	jmp    0x14001f9d7
   14001fab1:	cmp    al,0x64
   14001fab3:	je     0x14001f9d7
   14001fab9:	cmp    al,0x69
   14001fabb:	je     0x14001f9d7
   14001fac1:	cmp    al,0x6f
   14001fac3:	je     0x14001f9d7
   14001fac9:	cmp    al,0x75
   14001facb:	je     0x14001f9d7
   14001fad1:	cmp    al,0x78
   14001fad3:	je     0x14001f9d7
   14001fad9:	cmp    al,0x58
   14001fadb:	je     0x14001f9d7
   14001fae1:	mov    DWORD PTR [rsp+0x5c],r10d
   14001fae6:	lea    rdx,[rsp+0x78]
   14001faeb:	movzx  ecx,bpl
   14001faef:	mov    DWORD PTR [rsp+0x50],r10d
   14001faf4:	call   0x140018588
   14001faf9:	xor    esi,esi
   14001fafb:	cmp    eax,esi
   14001fafd:	je     0x14001fb20
   14001faff:	mov    rdx,QWORD PTR [rsp+0x68]
   14001fb04:	lea    r8,[rsp+0x40]
   14001fb09:	mov    cl,bpl
   14001fb0c:	call   0x14001f030
   14001fb11:	mov    bpl,BYTE PTR [rdi]
   14001fb14:	inc    rdi
   14001fb17:	cmp    bpl,sil
   14001fb1a:	je     0x14001fc22
   14001fb20:	mov    rdx,QWORD PTR [rsp+0x68]
   14001fb25:	lea    r8,[rsp+0x40]
   14001fb2a:	mov    cl,bpl
   14001fb2d:	call   0x14001f030
   14001fb32:	xor    r10d,r10d
   14001fb35:	jmp    0x14001f9c2
   14001fb3a:	cmp    bpl,0x2a
   14001fb3e:	jne    0x14001fb59
   14001fb40:	mov    r15d,DWORD PTR [r13+0x0]
   14001fb44:	add    r13,0x8
   14001fb48:	cmp    r15d,r10d
   14001fb4b:	jge    0x14001f9d7
   14001fb51:	mov    r15d,r14d
   14001fb54:	jmp    0x14001f9d7
   14001fb59:	lea    ecx,[r15+r15*4]
   14001fb5d:	movsx  eax,bpl
   14001fb61:	lea    r15d,[rax+rcx*2-0x30]
   14001fb66:	jmp    0x14001f9d7
   14001fb6b:	mov    r15d,r10d
   14001fb6e:	jmp    0x14001f9d7
   14001fb73:	cmp    bpl,0x2a
   14001fb77:	jne    0x14001fb96
   14001fb79:	mov    eax,DWORD PTR [r13+0x0]
   14001fb7d:	add    r13,0x8
   14001fb81:	cmp    eax,r10d
   14001fb84:	mov    DWORD PTR [rsp+0x54],eax
   14001fb88:	jge    0x14001f9d7
   14001fb8e:	or     r12d,0x4
   14001fb92:	neg    eax
   14001fb94:	jmp    0x14001fba5
   14001fb96:	mov    eax,DWORD PTR [rsp+0x54]
   14001fb9a:	lea    ecx,[rax+rax*4]
   14001fb9d:	movsx  eax,bpl
   14001fba1:	lea    eax,[rax+rcx*2-0x30]
   14001fba5:	mov    DWORD PTR [rsp+0x54],eax
   14001fba9:	jmp    0x14001f9d7
   14001fbae:	cmp    bpl,0x20
   14001fbb2:	je     0x14001fbf5
   14001fbb4:	cmp    bpl,0x23
   14001fbb8:	je     0x14001fbeb
   14001fbba:	cmp    bpl,0x2b
   14001fbbe:	je     0x14001fbe2
   14001fbc0:	cmp    bpl,0x2d
   14001fbc4:	je     0x14001fbd9
   14001fbc6:	cmp    bpl,0x30
   14001fbca:	jne    0x14001f9d7
   14001fbd0:	or     r12d,0x8
   14001fbd4:	jmp    0x14001f9d7
   14001fbd9:	or     r12d,0x4
   14001fbdd:	jmp    0x14001f9d7
   14001fbe2:	or     r12d,0x1
   14001fbe6:	jmp    0x14001f9d7
   14001fbeb:	bts    r12d,0x7
   14001fbf0:	jmp    0x14001f9d7
   14001fbf5:	or     r12d,0x2
   14001fbf9:	jmp    0x14001f9d7
   14001fbfe:	mov    DWORD PTR [rsp+0x70],r10d
   14001fc03:	mov    DWORD PTR [rsp+0x58],r10d
   14001fc08:	mov    DWORD PTR [rsp+0x54],r10d
   14001fc0d:	mov    DWORD PTR [rsp+0x48],r10d
   14001fc12:	mov    r12d,r10d
   14001fc15:	mov    r15d,r14d
   14001fc18:	mov    DWORD PTR [rsp+0x50],r10d
   14001fc1d:	jmp    0x14001f9d7
   14001fc22:	call   0x14000f574
   14001fc27:	xor    r9d,r9d
   14001fc2a:	xor    r8d,r8d
   14001fc2d:	xor    edx,edx
   14001fc2f:	xor    ecx,ecx
   14001fc31:	mov    QWORD PTR [rsp+0x20],rsi
   14001fc36:	mov    DWORD PTR [rax],0x16
   14001fc3c:	call   0x14000e4d8
   14001fc41:	cmp    BYTE PTR [rsp+0x90],sil
   14001fc49:	jmp    0x14001f2a8
   14001fc4e:	int3   
   14001fc4f:	int3   
   14001fc50:	mov    QWORD PTR [rsp+0x8],rbx
   14001fc55:	mov    QWORD PTR [rsp+0x10],rdi
   14001fc5a:	mov    r11b,BYTE PTR [rcx+0x10]
   14001fc5e:	mov    ebx,r9d
   14001fc61:	mov    edi,edx
   14001fc63:	mov    r9,rcx
   14001fc66:	cmp    r11b,0x70
   14001fc6a:	je     0x14001fd94
   14001fc70:	cmp    r8b,0x70
   14001fc74:	je     0x14001fd94
   14001fc7a:	xor    r10d,r10d
   14001fc7d:	mov    edx,0x1
   14001fc82:	cmp    r11b,0x73
   14001fc86:	je     0x14001fc91
   14001fc88:	mov    ecx,r10d
   14001fc8b:	cmp    r11b,0x53
   14001fc8f:	jne    0x14001fc93
   14001fc91:	mov    ecx,edx
   14001fc93:	cmp    r8b,0x73
   14001fc97:	je     0x14001fca2
   14001fc99:	mov    eax,r10d
   14001fc9c:	cmp    r8b,0x53
   14001fca0:	jne    0x14001fca4
   14001fca2:	mov    eax,edx
   14001fca4:	cmp    ecx,r10d
   14001fca7:	jne    0x14001fd6e
   14001fcad:	cmp    eax,r10d
   14001fcb0:	jne    0x14001fd8d
   14001fcb6:	mov    cl,0x69
   14001fcb8:	cmp    r11b,0x64
   14001fcbc:	je     0x14001fd24
   14001fcbe:	cmp    r11b,cl
   14001fcc1:	je     0x14001fcfe
   14001fcc3:	cmp    r11b,0x6f
   14001fcc7:	je     0x14001fcfe
   14001fcc9:	cmp    r11b,0x75
   14001fccd:	je     0x14001fcfe
   14001fccf:	cmp    r11b,0x78
   14001fcd3:	je     0x14001fcfe
   14001fcd5:	cmp    r11b,0x58
   14001fcd9:	je     0x14001fcfe
   14001fcdb:	cmp    r8b,0x64
   14001fcdf:	je     0x14001fcfe
   14001fce1:	cmp    r8b,cl
   14001fce4:	je     0x14001fcfe
   14001fce6:	cmp    r8b,0x6f
   14001fcea:	je     0x14001fcfe
   14001fcec:	cmp    r8b,0x75
   14001fcf0:	je     0x14001fcfe
   14001fcf2:	cmp    r8b,0x78
   14001fcf6:	je     0x14001fcfe
   14001fcf8:	cmp    r8b,0x58
   14001fcfc:	jne    0x14001fd69
   14001fcfe:	cmp    r11b,0x64
   14001fd02:	je     0x14001fd24
   14001fd04:	cmp    r11b,cl
   14001fd07:	je     0x14001fd24
   14001fd09:	cmp    r11b,0x6f
   14001fd0d:	je     0x14001fd24
   14001fd0f:	cmp    r11b,0x75
   14001fd13:	je     0x14001fd24
   14001fd15:	cmp    r11b,0x78
   14001fd19:	je     0x14001fd24
   14001fd1b:	mov    eax,r10d
   14001fd1e:	cmp    r11b,0x58
   14001fd22:	jne    0x14001fd26
   14001fd24:	mov    eax,edx
   14001fd26:	cmp    r8b,0x64
   14001fd2a:	je     0x14001fd4c
   14001fd2c:	cmp    r8b,cl
   14001fd2f:	je     0x14001fd4c
   14001fd31:	cmp    r8b,0x6f
   14001fd35:	je     0x14001fd4c
   14001fd37:	cmp    r8b,0x75
   14001fd3b:	je     0x14001fd4c
   14001fd3d:	cmp    r8b,0x78
   14001fd41:	je     0x14001fd4c
   14001fd43:	cmp    r8b,0x58
   14001fd47:	je     0x14001fd4c
   14001fd49:	mov    edx,r10d
   14001fd4c:	cmp    eax,edx
   14001fd4e:	je     0x14001fd54
   14001fd50:	xor    eax,eax
   14001fd52:	jmp    0x14001fda1
   14001fd54:	mov    ecx,DWORD PTR [r9+0x14]
   14001fd58:	mov    eax,ecx
   14001fd5a:	xor    eax,ebx
   14001fd5c:	bt     eax,0x10
   14001fd60:	jb     0x14001fd50
   14001fd62:	xor    ecx,ebx
   14001fd64:	test   cl,0x20
   14001fd67:	jne    0x14001fd50
   14001fd69:	cmp    DWORD PTR [r9],edi
   14001fd6c:	jmp    0x14001fd9a
   14001fd6e:	cmp    ecx,eax
   14001fd70:	jne    0x14001fd8d
   14001fd72:	mov    eax,0x810
   14001fd77:	mov    ecx,r10d
   14001fd7a:	test   DWORD PTR [r9+0x14],eax
   14001fd7e:	setne  cl
   14001fd81:	test   eax,ebx
   14001fd83:	mov    eax,r10d
   14001fd86:	setne  al
   14001fd89:	cmp    ecx,eax
   14001fd8b:	je     0x14001fd90
   14001fd8d:	mov    edx,r10d
   14001fd90:	mov    eax,edx
   14001fd92:	jmp    0x14001fda1
   14001fd94:	xor    r10d,r10d
   14001fd97:	cmp    r11b,r8b
   14001fd9a:	sete   r10b
   14001fd9e:	mov    eax,r10d
   14001fda1:	mov    rbx,QWORD PTR [rsp+0x8]
   14001fda6:	mov    rdi,QWORD PTR [rsp+0x10]
   14001fdab:	ret    
   14001fdac:	rex push rbx
   14001fdae:	sub    rsp,0x20
   14001fdb2:	test   BYTE PTR [rdx+0x18],0x40
   14001fdb6:	mov    rbx,r8
   14001fdb9:	je     0x14001fdc7
   14001fdbb:	cmp    QWORD PTR [rdx+0x10],0x0
   14001fdc0:	jne    0x14001fdc7
   14001fdc2:	inc    DWORD PTR [r8]
   14001fdc5:	jmp    0x14001fded
   14001fdc7:	add    DWORD PTR [rdx+0x8],0xffffffff
   14001fdcb:	js     0x14001fdda
   14001fdcd:	mov    rax,QWORD PTR [rdx]
   14001fdd0:	mov    BYTE PTR [rax],cl
   14001fdd2:	inc    QWORD PTR [rdx]
   14001fdd5:	movzx  eax,cl
   14001fdd8:	jmp    0x14001fde2
   14001fdda:	movsx  ecx,cl
   14001fddd:	call   0x140015250
   14001fde2:	cmp    eax,0xffffffff
   14001fde5:	jne    0x14001fdeb
   14001fde7:	or     DWORD PTR [rbx],eax
   14001fde9:	jmp    0x14001fded
   14001fdeb:	inc    DWORD PTR [rbx]
   14001fded:	add    rsp,0x20
   14001fdf1:	pop    rbx
   14001fdf2:	ret    
   14001fdf3:	int3   
   14001fdf4:	test   edx,edx
   14001fdf6:	jle    0x14001fe44
   14001fdf8:	mov    QWORD PTR [rsp+0x8],rbx
   14001fdfd:	mov    QWORD PTR [rsp+0x10],rbp
   14001fe02:	mov    QWORD PTR [rsp+0x18],rsi
   14001fe07:	push   rdi
   14001fe08:	sub    rsp,0x20
   14001fe0c:	mov    rdi,r9
   14001fe0f:	mov    rsi,r8
   14001fe12:	mov    ebx,edx
   14001fe14:	mov    bpl,cl
   14001fe17:	mov    r8,rdi
   14001fe1a:	mov    rdx,rsi
   14001fe1d:	mov    cl,bpl
   14001fe20:	dec    ebx
   14001fe22:	call   0x14001fdac
   14001fe27:	cmp    DWORD PTR [rdi],0xffffffff
   14001fe2a:	je     0x14001fe30
   14001fe2c:	test   ebx,ebx
   14001fe2e:	jg     0x14001fe17
   14001fe30:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fe35:	mov    rbp,QWORD PTR [rsp+0x38]
   14001fe3a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fe3f:	add    rsp,0x20
   14001fe43:	pop    rdi
   14001fe44:	ret    
   14001fe45:	int3   
   14001fe46:	int3   
   14001fe47:	int3   
   14001fe48:	mov    QWORD PTR [rsp+0x8],rbx
   14001fe4d:	mov    QWORD PTR [rsp+0x10],rbp
   14001fe52:	mov    QWORD PTR [rsp+0x18],rsi
   14001fe57:	push   rdi
   14001fe58:	sub    rsp,0x20
   14001fe5c:	test   BYTE PTR [r8+0x18],0x40
   14001fe61:	mov    rdi,r9
   14001fe64:	mov    rsi,r8
   14001fe67:	mov    ebx,edx
   14001fe69:	mov    rbp,rcx
   14001fe6c:	je     0x14001fe7a
   14001fe6e:	cmp    QWORD PTR [r8+0x10],0x0
   14001fe73:	jne    0x14001fe7a
   14001fe75:	add    DWORD PTR [r9],edx
   14001fe78:	jmp    0x14001feb1
   14001fe7a:	test   edx,edx
   14001fe7c:	jle    0x14001feb1
   14001fe7e:	mov    cl,BYTE PTR [rbp+0x0]
   14001fe81:	mov    r8,rdi
   14001fe84:	mov    rdx,rsi
   14001fe87:	dec    ebx
   14001fe89:	call   0x14001fdac
   14001fe8e:	inc    rbp
   14001fe91:	cmp    DWORD PTR [rdi],0xffffffff
   14001fe94:	jne    0x14001fead
   14001fe96:	call   0x14000f574
   14001fe9b:	cmp    DWORD PTR [rax],0x2a
   14001fe9e:	jne    0x14001feb1
   14001fea0:	mov    r8,rdi
   14001fea3:	mov    rdx,rsi
   14001fea6:	mov    cl,0x3f
   14001fea8:	call   0x14001fdac
   14001fead:	test   ebx,ebx
   14001feaf:	jg     0x14001fe7e
   14001feb1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001feb6:	mov    rbp,QWORD PTR [rsp+0x38]
   14001febb:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fec0:	add    rsp,0x20
   14001fec4:	pop    rdi
   14001fec5:	ret    
   14001fec6:	int3   
   14001fec7:	int3   
   14001fec8:	add    QWORD PTR [rcx],0x8
   14001fecc:	mov    rax,QWORD PTR [rcx]
   14001fecf:	mov    rax,QWORD PTR [rax-0x8]
   14001fed3:	ret    
   14001fed4:	mov    QWORD PTR [rsp+0x18],rbx
   14001fed9:	push   rbp
   14001feda:	push   rsi
   14001fedb:	push   rdi
   14001fedc:	push   r12
   14001fede:	push   r13
   14001fee0:	push   r14
   14001fee2:	push   r15
   14001fee4:	sub    rsp,0xc50
   14001feeb:	mov    rax,QWORD PTR [rip+0x143ae]        # 0x1400342a0
   14001fef2:	xor    rax,rsp
   14001fef5:	mov    QWORD PTR [rsp+0xc48],rax
   14001fefd:	mov    rbx,rcx
   14001ff00:	mov    QWORD PTR [rsp+0xa8],rcx
   14001ff08:	xor    ecx,ecx
   14001ff0a:	mov    DWORD PTR [rsp+0x98],ecx
   14001ff11:	mov    r12d,ecx
   14001ff14:	mov    DWORD PTR [rsp+0x50],ecx
   14001ff18:	mov    DWORD PTR [rsp+0x44],ecx
   14001ff1c:	mov    DWORD PTR [rsp+0x88],ecx
   14001ff23:	mov    rdi,rdx
   14001ff26:	mov    QWORD PTR [rsp+0xd8],rdx
   14001ff2e:	lea    rcx,[rsp+0x58]
   14001ff33:	mov    rdx,r8
   14001ff36:	mov    r13,r9
   14001ff39:	call   0x1400094b4
   14001ff3e:	xor    r8d,r8d
   14001ff41:	or     ebp,0xffffffff
   14001ff44:	mov    QWORD PTR [rsp+0x90],r8
   14001ff4c:	mov    esi,ebp
   14001ff4e:	cmp    rbx,r8
   14001ff51:	jne    0x14001ff8e
   14001ff53:	call   0x14000f574
   14001ff58:	xor    esi,esi
   14001ff5a:	xor    r9d,r9d
   14001ff5d:	xor    r8d,r8d
   14001ff60:	xor    edx,edx
   14001ff62:	xor    ecx,ecx
   14001ff64:	mov    DWORD PTR [rax],0x16
   14001ff6a:	mov    QWORD PTR [rsp+0x20],rsi
   14001ff6f:	call   0x14000e4d8
   14001ff74:	cmp    BYTE PTR [rsp+0x70],sil
   14001ff79:	je     0x14001ff87
   14001ff7b:	mov    rcx,QWORD PTR [rsp+0x68]
   14001ff80:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ff87:	mov    eax,ebp
   14001ff89:	jmp    0x140021101
   14001ff8e:	test   BYTE PTR [rbx+0x18],0x40
   14001ff92:	lea    r14,[rip+0xfffffffffffe0067]        # 0x140000000
   14001ff99:	jne    0x140020045
   14001ff9f:	mov    rcx,rbx
   14001ffa2:	call   0x140014cfc
   14001ffa7:	lea    rdx,[rip+0x15512]        # 0x1400354c0
   14001ffae:	cmp    eax,ebp
   14001ffb0:	je     0x14001ffd3
   14001ffb2:	cmp    eax,0xfffffffe
   14001ffb5:	je     0x14001ffd3
   14001ffb7:	movsxd r8,eax
   14001ffba:	mov    rcx,r8
   14001ffbd:	and    r8d,0x1f
   14001ffc1:	sar    rcx,0x5
   14001ffc5:	imul   r8,r8,0x58
   14001ffc9:	add    r8,QWORD PTR [r14+rcx*8+0x37d60]
   14001ffd1:	jmp    0x14001ffd6
   14001ffd3:	mov    r8,rdx
   14001ffd6:	test   BYTE PTR [r8+0x38],0x7f
   14001ffdb:	jne    0x140020005
   14001ffdd:	cmp    eax,ebp
   14001ffdf:	je     0x14001ffff
   14001ffe1:	cmp    eax,0xfffffffe
   14001ffe4:	je     0x14001ffff
   14001ffe6:	movsxd rdx,eax
   14001ffe9:	mov    rax,rdx
   14001ffec:	and    edx,0x1f
   14001ffef:	sar    rax,0x5
   14001fff3:	imul   rdx,rdx,0x58
   14001fff7:	add    rdx,QWORD PTR [r14+rax*8+0x37d60]
   14001ffff:	test   BYTE PTR [rdx+0x38],0x80
   140020003:	je     0x140020042
   140020005:	call   0x14000f574
   14002000a:	xor    esi,esi
   14002000c:	xor    r9d,r9d
   14002000f:	xor    r8d,r8d
   140020012:	xor    edx,edx
   140020014:	xor    ecx,ecx
   140020016:	mov    DWORD PTR [rax],0x16
   14002001c:	mov    QWORD PTR [rsp+0x20],rsi
   140020021:	call   0x14000e4d8
   140020026:	cmp    BYTE PTR [rsp+0x70],sil
   14002002b:	je     0x14001ff87
   140020031:	mov    rax,QWORD PTR [rsp+0x68]
   140020036:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002003d:	jmp    0x14001ff87
   140020042:	xor    r8d,r8d
   140020045:	cmp    rdi,r8
   140020048:	je     0x140020005
   14002004a:	mov    rbx,QWORD PTR [rsp+0xd8]
   140020052:	mov    eax,r8d
   140020055:	mov    r11d,r8d
   140020058:	mov    DWORD PTR [rsp+0x48],eax
   14002005c:	mov    DWORD PTR [rsp+0xa0],r8d
   140020064:	cmp    r11d,0x1
   140020068:	jne    0x140020073
   14002006a:	cmp    esi,r8d
   14002006d:	je     0x1400210ee
   140020073:	mov    DWORD PTR [rsp+0x4c],r8d
   140020078:	mov    r10d,ebp
   14002007b:	mov    DWORD PTR [rsp+0x40],ebp
   14002007f:	mov    r14d,ebp
   140020082:	mov    esi,ebp
   140020084:	mov    DWORD PTR [rsp+0x8c],ebp
   14002008b:	mov    bpl,BYTE PTR [rdi]
   14002008e:	mov    r9,rdi
   140020091:	movsxd rdi,r11d
   140020094:	mov    edx,r8d
   140020097:	mov    QWORD PTR [rsp+0xc8],r8
   14002009f:	mov    DWORD PTR [rsp+0x78],r8d
   1400200a4:	mov    r15d,r8d
   1400200a7:	mov    QWORD PTR [rsp+0xb8],rdi
   1400200af:	cmp    bpl,r8b
   1400200b2:	je     0x140021096
   1400200b8:	mov    r11d,0x1
   1400200be:	add    r9,r11
   1400200c1:	cmp    eax,r8d
   1400200c4:	mov    QWORD PTR [rsp+0x80],r9
   1400200cc:	jl     0x140021028
   1400200d2:	lea    eax,[rbp-0x20]
   1400200d5:	cmp    al,0x58
   1400200d7:	ja     0x1400200f1
   1400200d9:	lea    rcx,[rip+0xfffffffffffdff20]        # 0x140000000
   1400200e0:	movsx  rax,bpl
   1400200e4:	movzx  ecx,BYTE PTR [rax+rcx*1+0x2fbf0]
   1400200ec:	and    ecx,0xf
   1400200ef:	jmp    0x1400200f4
   1400200f1:	mov    ecx,r8d
   1400200f4:	movsxd rax,ecx
   1400200f7:	lea    rcx,[rax+rax*8]
   1400200fb:	movsxd rax,edx
   1400200fe:	add    rcx,rax
   140020101:	lea    rax,[rip+0xfffffffffffdfef8]        # 0x140000000
   140020108:	movzx  eax,BYTE PTR [rcx+rax*1+0x2fc10]
   140020110:	shr    eax,0x4
   140020113:	mov    DWORD PTR [rsp+0x9c],eax
   14002011a:	cmp    eax,r11d
   14002011d:	jne    0x140020211
   140020123:	cmp    BYTE PTR [r9],0x25
   140020127:	je     0x14002021a
   14002012d:	cmp    esi,0xffffffff
   140020130:	jne    0x14002019c
   140020132:	lea    r8d,[rsi+0xb]
   140020136:	lea    rdx,[rsp+0x90]
   14002013e:	mov    rcx,r9
   140020141:	call   0x1400097fc
   140020146:	xor    r8d,r8d
   140020149:	cmp    eax,r8d
   14002014c:	jle    0x140020183
   14002014e:	mov    rax,QWORD PTR [rsp+0x90]
   140020156:	cmp    BYTE PTR [rax],0x24
   140020159:	jne    0x140020183
   14002015b:	cmp    rdi,r8
   14002015e:	jne    0x140020175
   140020160:	lea    rcx,[rsp+0xe0]
   140020168:	xor    edx,edx
   14002016a:	mov    r8d,0x960
   140020170:	call   0x140008a00
   140020175:	mov    esi,0x1
   14002017a:	mov    DWORD PTR [rsp+0x8c],esi
   140020181:	jmp    0x1400201a1
   140020183:	mov    r9,QWORD PTR [rsp+0x80]
   14002018b:	mov    esi,r8d
   14002018e:	mov    DWORD PTR [rsp+0x8c],r8d
   140020196:	mov    r11d,0x1
   14002019c:	cmp    esi,r11d
   14002019f:	jne    0x14002021a
   1400201a1:	mov    rcx,QWORD PTR [rsp+0x80]
   1400201a9:	lea    rdx,[rsp+0x90]
   1400201b1:	mov    r8d,0xa
   1400201b7:	call   0x1400097fc
   1400201bc:	mov    rcx,QWORD PTR [rsp+0x90]
   1400201c4:	mov    r11d,0x1
   1400201ca:	lea    r9,[rcx+0x1]
   1400201ce:	mov    r14d,eax
   1400201d1:	xor    r8d,r8d
   1400201d4:	sub    r14d,r11d
   1400201d7:	mov    QWORD PTR [rsp+0x80],r9
   1400201df:	cmp    rdi,r8
   1400201e2:	jne    0x14002021a
   1400201e4:	cmp    r14d,r8d
   1400201e7:	jl     0x140020376
   1400201ed:	cmp    BYTE PTR [rcx],0x24
   1400201f0:	jne    0x140020376
   1400201f6:	cmp    r14d,0x64
   1400201fa:	jge    0x140020376
   140020200:	mov    eax,DWORD PTR [rsp+0x40]
   140020204:	cmp    r14d,eax
   140020207:	cmovg  eax,r14d
   14002020b:	mov    DWORD PTR [rsp+0x40],eax
   14002020f:	jmp    0x14002021a
   140020211:	cmp    eax,0x8
   140020214:	je     0x140020376
   14002021a:	mov    ecx,DWORD PTR [rsp+0x9c]
   140020221:	cmp    ecx,r8d
   140020224:	je     0x140020f7b
   14002022a:	sub    ecx,r11d
   14002022d:	je     0x140020f50
   140020233:	sub    ecx,r11d
   140020236:	je     0x140020efc
   14002023c:	sub    ecx,r11d
   14002023f:	je     0x140020e5f
   140020245:	sub    ecx,r11d
   140020248:	je     0x140020e57
   14002024e:	sub    ecx,r11d
   140020251:	je     0x140020d4c
   140020257:	sub    ecx,r11d
   14002025a:	je     0x140020c93
   140020260:	cmp    ecx,r11d
   140020263:	jne    0x140020fff
   140020269:	movsx  eax,bpl
   14002026d:	cmp    eax,0x64
   140020270:	jg     0x140020554
   140020276:	je     0x140020703
   14002027c:	cmp    eax,0x41
   14002027f:	je     0x1400204f5
   140020285:	cmp    eax,0x43
   140020288:	je     0x14002040a
   14002028e:	cmp    eax,0x45
   140020291:	je     0x1400204f5
   140020297:	cmp    eax,0x47
   14002029a:	je     0x1400204f5
   1400202a0:	cmp    eax,0x53
   1400202a3:	je     0x1400203d7
   1400202a9:	cmp    eax,0x58
   1400202ac:	je     0x140020652
   1400202b2:	cmp    eax,0x5a
   1400202b5:	je     0x1400202ce
   1400202b7:	cmp    eax,0x61
   1400202ba:	je     0x140020501
   1400202c0:	cmp    eax,0x63
   1400202c3:	je     0x140020418
   1400202c9:	jmp    0x140020af0
   1400202ce:	cmp    esi,r8d
   1400202d1:	jne    0x1400202dd
   1400202d3:	mov    rax,QWORD PTR [r13+0x0]
   1400202d7:	add    r13,0x8
   1400202db:	jmp    0x140020302
   1400202dd:	cmp    r14d,0x63
   1400202e1:	ja     0x140020376
   1400202e7:	movsxd rax,r14d
   1400202ea:	lea    rcx,[rax+rax*2]
   1400202ee:	cmp    rdi,r8
   1400202f1:	je     0x1400205c1
   1400202f7:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   1400202ff:	mov    rax,QWORD PTR [rax]
   140020302:	cmp    rax,r8
   140020305:	je     0x1400203c3
   14002030b:	mov    rbx,QWORD PTR [rax+0x8]
   14002030f:	cmp    rbx,r8
   140020312:	je     0x1400203c3
   140020318:	bt     r12d,0xb
   14002031d:	movsx  eax,WORD PTR [rax]
   140020320:	jae    0x1400203b2
   140020326:	cdq    
   140020327:	mov    DWORD PTR [rsp+0x88],r11d
   14002032f:	sub    eax,edx
   140020331:	sar    eax,1
   140020333:	mov    DWORD PTR [rsp+0x4c],eax
   140020337:	jmp    0x140020af0
   14002033c:	mov    DWORD PTR [rax],0x3
   140020342:	mov    BYTE PTR [rsp+rcx*8+0xf0],bpl
   14002034a:	mov    DWORD PTR [rsp+rcx*8+0xf4],r12d
   140020352:	jmp    0x140020af0
   140020357:	mov    edx,0x3
   14002035c:	mov    r9d,r12d
   14002035f:	mov    r8b,bpl
   140020362:	mov    rcx,rax
   140020365:	call   0x14001fc50
   14002036a:	xor    r8d,r8d
   14002036d:	cmp    eax,r8d
   140020370:	jne    0x140020af0
   140020376:	call   0x14000f574
   14002037b:	xor    esi,esi
   14002037d:	xor    r9d,r9d
   140020380:	xor    r8d,r8d
   140020383:	xor    edx,edx
   140020385:	xor    ecx,ecx
   140020387:	mov    DWORD PTR [rax],0x16
   14002038d:	mov    QWORD PTR [rsp+0x20],rsi
   140020392:	call   0x14000e4d8
   140020397:	cmp    BYTE PTR [rsp+0x70],sil
   14002039c:	je     0x1400203aa
   14002039e:	mov    rax,QWORD PTR [rsp+0x68]
   1400203a3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400203aa:	or     eax,0xffffffff
   1400203ad:	jmp    0x140021101
   1400203b2:	mov    DWORD PTR [rsp+0x88],r8d
   1400203ba:	mov    DWORD PTR [rsp+0x4c],eax
   1400203be:	jmp    0x140020af0
   1400203c3:	mov    rbx,QWORD PTR [rip+0x1514e]        # 0x140035518
   1400203ca:	mov    rcx,rbx
   1400203cd:	call   0x140012e10
   1400203d2:	jmp    0x140020ae9
   1400203d7:	test   r12d,0x830
   1400203de:	jne    0x1400203e5
   1400203e0:	bts    r12d,0xb
   1400203e5:	cmp    r15d,0xffffffff
   1400203e9:	mov    edx,r15d
   1400203ec:	mov    eax,0x7fffffff
   1400203f1:	cmove  edx,eax
   1400203f4:	cmp    esi,r8d
   1400203f7:	jne    0x1400205ab
   1400203fd:	mov    rbx,QWORD PTR [r13+0x0]
   140020401:	add    r13,0x8
   140020405:	jmp    0x1400205e2
   14002040a:	test   r12d,0x830
   140020411:	jne    0x140020418
   140020413:	bts    r12d,0xb
   140020418:	test   r12d,0x810
   14002041f:	je     0x14002049f
   140020421:	cmp    esi,r8d
   140020424:	jne    0x140020431
   140020426:	movzx  r9d,WORD PTR [r13+0x0]
   14002042b:	add    r13,0x8
   14002042f:	jmp    0x140020475
   140020431:	cmp    r14d,0x63
   140020435:	ja     0x140020376
   14002043b:	movsxd rax,r14d
   14002043e:	lea    rcx,[rax+rax*2]
   140020442:	cmp    rdi,r8
   140020445:	jne    0x140020469
   140020447:	lea    rax,[rsp+rcx*8+0xe0]
   14002044f:	cmp    DWORD PTR [rax],r8d
   140020452:	jne    0x14002045f
   140020454:	mov    DWORD PTR [rax],0x2
   14002045a:	jmp    0x140020342
   14002045f:	mov    edx,0x2
   140020464:	jmp    0x14002035c
   140020469:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   140020471:	mov    r9w,WORD PTR [rax]
   140020475:	lea    rdx,[rsp+0xa40]
   14002047d:	lea    rcx,[rsp+0x4c]
   140020482:	mov    r8d,0x200
   140020488:	call   0x14001ef4c
   14002048d:	xor    r8d,r8d
   140020490:	cmp    eax,r8d
   140020493:	je     0x1400204e0
   140020495:	mov    DWORD PTR [rsp+0x44],0x1
   14002049d:	jmp    0x1400204e0
   14002049f:	cmp    esi,r8d
   1400204a2:	jne    0x1400204af
   1400204a4:	movzx  eax,WORD PTR [r13+0x0]
   1400204a9:	add    r13,0x8
   1400204ad:	jmp    0x1400204d4
   1400204af:	cmp    r14d,0x63
   1400204b3:	ja     0x140020376
   1400204b9:	movsxd rax,r14d
   1400204bc:	lea    rcx,[rax+rax*2]
   1400204c0:	cmp    rdi,r8
   1400204c3:	je     0x1400207ef
   1400204c9:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   1400204d1:	mov    ax,WORD PTR [rax]
   1400204d4:	mov    BYTE PTR [rsp+0xa40],al
   1400204db:	mov    DWORD PTR [rsp+0x4c],r11d
   1400204e0:	lea    rbx,[rsp+0xa40]
   1400204e8:	jmp    0x140020af0
   1400204ed:	mov    DWORD PTR [rax],r11d
   1400204f0:	jmp    0x140020342
   1400204f5:	mov    DWORD PTR [rsp+0xb0],r11d
   1400204fd:	add    bpl,0x20
   140020501:	or     r12d,0x40
   140020505:	cmp    esi,r11d
   140020508:	jne    0x14002099f
   14002050e:	cmp    rdi,r8
   140020511:	jne    0x14002099f
   140020517:	cmp    r14d,0x63
   14002051b:	ja     0x140020376
   140020521:	movsxd rax,r14d
   140020524:	lea    rcx,[rax+rax*2]
   140020528:	lea    rax,[rsp+rcx*8+0xe0]
   140020530:	cmp    DWORD PTR [rax],r8d
   140020533:	jne    0x140020992
   140020539:	mov    DWORD PTR [rax],0x8
   14002053f:	mov    BYTE PTR [rsp+rcx*8+0xf0],bpl
   140020547:	mov    DWORD PTR [rsp+rcx*8+0xf4],r12d
   14002054f:	jmp    0x140020fff
   140020554:	cmp    eax,0x65
   140020557:	jl     0x140020af0
   14002055d:	cmp    eax,0x67
   140020560:	jle    0x140020501
   140020562:	cmp    eax,0x69
   140020565:	je     0x140020703
   14002056b:	cmp    eax,0x6e
   14002056e:	je     0x140020697
   140020574:	cmp    eax,0x6f
   140020577:	je     0x140020685
   14002057d:	cmp    eax,0x70
   140020580:	je     0x140020647
   140020586:	cmp    eax,0x73
   140020589:	je     0x1400203e5
   14002058f:	cmp    eax,0x75
   140020592:	je     0x140020707
   140020598:	cmp    eax,0x78
   14002059b:	jne    0x140020af0
   1400205a1:	mov    eax,0x27
   1400205a6:	jmp    0x140020657
   1400205ab:	cmp    r14d,0x63
   1400205af:	ja     0x140020376
   1400205b5:	movsxd rax,r14d
   1400205b8:	lea    rcx,[rax+rax*2]
   1400205bc:	cmp    rdi,r8
   1400205bf:	jne    0x1400205d7
   1400205c1:	lea    rax,[rsp+rcx*8+0xe0]
   1400205c9:	cmp    DWORD PTR [rax],r8d
   1400205cc:	je     0x14002033c
   1400205d2:	jmp    0x140020357
   1400205d7:	mov    rbx,QWORD PTR [rsp+rcx*8+0xe8]
   1400205df:	mov    rbx,QWORD PTR [rbx]
   1400205e2:	test   r12d,0x810
   1400205e9:	je     0x140020620
   1400205eb:	cmp    rbx,r8
   1400205ee:	mov    DWORD PTR [rsp+0x88],r11d
   1400205f6:	cmove  rbx,QWORD PTR [rip+0x14f22]        # 0x140035520
   1400205fe:	mov    rax,rbx
   140020601:	jmp    0x140020610
   140020603:	sub    edx,r11d
   140020606:	cmp    WORD PTR [rax],r8w
   14002060a:	je     0x140020615
   14002060c:	add    rax,0x2
   140020610:	cmp    edx,r8d
   140020613:	jne    0x140020603
   140020615:	sub    rax,rbx
   140020618:	sar    rax,1
   14002061b:	jmp    0x1400203ba
   140020620:	cmp    rbx,r8
   140020623:	cmove  rbx,QWORD PTR [rip+0x14eed]        # 0x140035518
   14002062b:	mov    rax,rbx
   14002062e:	jmp    0x14002063b
   140020630:	sub    edx,r11d
   140020633:	cmp    BYTE PTR [rax],r8b
   140020636:	je     0x140020640
   140020638:	add    rax,r11
   14002063b:	cmp    edx,r8d
   14002063e:	jne    0x140020630
   140020640:	sub    eax,ebx
   140020642:	jmp    0x1400203ba
   140020647:	mov    r15d,0x10
   14002064d:	bts    r12d,0xf
   140020652:	mov    eax,0x7
   140020657:	mov    DWORD PTR [rsp+0x98],eax
   14002065e:	mov    r9d,0x10
   140020664:	test   r12b,r12b
   140020667:	jns    0x14002070d
   14002066d:	lea    edx,[r9-0xe]
   140020671:	add    al,0x51
   140020673:	mov    BYTE PTR [rsp+0x54],0x30
   140020678:	mov    DWORD PTR [rsp+0x50],edx
   14002067c:	mov    BYTE PTR [rsp+0x55],al
   140020680:	jmp    0x140020711
   140020685:	mov    r9d,0x8
   14002068b:	test   r12b,r12b
   14002068e:	jns    0x14002070d
   140020690:	bts    r12d,0x9
   140020695:	jmp    0x14002070d
   140020697:	cmp    esi,r8d
   14002069a:	jne    0x1400206a6
   14002069c:	mov    rdi,QWORD PTR [r13+0x0]
   1400206a0:	add    r13,0x8
   1400206a4:	jmp    0x1400206cb
   1400206a6:	cmp    r14d,0x63
   1400206aa:	ja     0x140020376
   1400206b0:	movsxd rax,r14d
   1400206b3:	lea    rcx,[rax+rax*2]
   1400206b7:	cmp    rdi,r8
   1400206ba:	je     0x1400205c1
   1400206c0:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   1400206c8:	mov    rdi,QWORD PTR [rax]
   1400206cb:	call   0x14001ed24
   1400206d0:	xor    r8d,r8d
   1400206d3:	cmp    eax,r8d
   1400206d6:	je     0x140020376
   1400206dc:	mov    eax,DWORD PTR [rsp+0x48]
   1400206e0:	test   r12b,0x20
   1400206e4:	je     0x1400206eb
   1400206e6:	mov    WORD PTR [rdi],ax
   1400206e9:	jmp    0x1400206ed
   1400206eb:	mov    DWORD PTR [rdi],eax
   1400206ed:	mov    rdi,QWORD PTR [rsp+0xb8]
   1400206f5:	mov    eax,0x1
   1400206fa:	mov    DWORD PTR [rsp+0x44],eax
   1400206fe:	jmp    0x140020af4
   140020703:	or     r12d,0x40
   140020707:	mov    r9d,0xa
   14002070d:	mov    edx,DWORD PTR [rsp+0x50]
   140020711:	bt     r12d,0xf
   140020716:	jae    0x140020762
   140020718:	cmp    esi,r8d
   14002071b:	jne    0x14002072a
   14002071d:	mov    r8,QWORD PTR [r13+0x0]
   140020721:	add    r13,0x8
   140020725:	jmp    0x1400208c0
   14002072a:	cmp    r14d,0x63
   14002072e:	ja     0x140020376
   140020734:	movsxd rax,r14d
   140020737:	lea    rcx,[rax+rax*2]
   14002073b:	cmp    rdi,r8
   14002073e:	jne    0x1400207a6
   140020740:	lea    rax,[rsp+rcx*8+0xe0]
   140020748:	cmp    DWORD PTR [rax],r8d
   14002074b:	jne    0x140020758
   14002074d:	mov    DWORD PTR [rax],0x4
   140020753:	jmp    0x140020342
   140020758:	mov    edx,0x4
   14002075d:	jmp    0x14002035c
   140020762:	bt     r12d,0xc
   140020767:	jae    0x1400207b6
   140020769:	cmp    esi,r8d
   14002076c:	je     0x14002071d
   14002076e:	cmp    r14d,0x63
   140020772:	ja     0x140020376
   140020778:	movsxd rax,r14d
   14002077b:	lea    rcx,[rax+rax*2]
   14002077f:	cmp    rdi,r8
   140020782:	jne    0x1400207a6
   140020784:	lea    rax,[rsp+rcx*8+0xe0]
   14002078c:	cmp    DWORD PTR [rax],r8d
   14002078f:	jne    0x14002079c
   140020791:	mov    DWORD PTR [rax],0x5
   140020797:	jmp    0x140020342
   14002079c:	mov    edx,0x5
   1400207a1:	jmp    0x14002035c
   1400207a6:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   1400207ae:	mov    r8,QWORD PTR [rax]
   1400207b1:	jmp    0x1400208c0
   1400207b6:	test   r12b,0x20
   1400207ba:	je     0x140020850
   1400207c0:	test   r12b,0x40
   1400207c4:	je     0x140020819
   1400207c6:	cmp    esi,r8d
   1400207c9:	jne    0x1400207d9
   1400207cb:	movsx  r8,WORD PTR [r13+0x0]
   1400207d0:	add    r13,0x8
   1400207d4:	jmp    0x1400208c0
   1400207d9:	cmp    r14d,0x63
   1400207dd:	ja     0x140020376
   1400207e3:	movsxd rax,r14d
   1400207e6:	lea    rcx,[rax+rax*2]
   1400207ea:	cmp    rdi,r8
   1400207ed:	jne    0x140020808
   1400207ef:	lea    rax,[rsp+rcx*8+0xe0]
   1400207f7:	cmp    DWORD PTR [rax],r8d
   1400207fa:	je     0x1400204ed
   140020800:	mov    edx,r11d
   140020803:	jmp    0x14002035c
   140020808:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   140020810:	movsx  r8,WORD PTR [rax]
   140020814:	jmp    0x1400208c0
   140020819:	cmp    esi,r8d
   14002081c:	jne    0x14002082c
   14002081e:	movzx  r8d,WORD PTR [r13+0x0]
   140020823:	add    r13,0x8
   140020827:	jmp    0x1400208c0
   14002082c:	cmp    r14d,0x63
   140020830:	ja     0x140020376
   140020836:	movsxd rax,r14d
   140020839:	lea    rcx,[rax+rax*2]
   14002083d:	cmp    rdi,r8
   140020840:	je     0x1400207ef
   140020842:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   14002084a:	movzx  r8d,WORD PTR [rax]
   14002084e:	jmp    0x1400208c0
   140020850:	test   r12b,0x40
   140020854:	je     0x14002088c
   140020856:	cmp    esi,r8d
   140020859:	jne    0x140020865
   14002085b:	movsxd r8,DWORD PTR [r13+0x0]
   14002085f:	add    r13,0x8
   140020863:	jmp    0x1400208c0
   140020865:	cmp    r14d,0x63
   140020869:	ja     0x140020376
   14002086f:	movsxd rax,r14d
   140020872:	lea    rcx,[rax+rax*2]
   140020876:	cmp    rdi,r8
   140020879:	je     0x1400207ef
   14002087f:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   140020887:	movsxd r8,DWORD PTR [rax]
   14002088a:	jmp    0x1400208c0
   14002088c:	cmp    esi,r8d
   14002088f:	jne    0x14002089b
   140020891:	mov    r8d,DWORD PTR [r13+0x0]
   140020895:	add    r13,0x8
   140020899:	jmp    0x1400208c0
   14002089b:	cmp    r14d,0x63
   14002089f:	ja     0x140020376
   1400208a5:	movsxd rax,r14d
   1400208a8:	lea    rcx,[rax+rax*2]
   1400208ac:	cmp    rdi,r8
   1400208af:	je     0x1400207ef
   1400208b5:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   1400208bd:	mov    r8d,DWORD PTR [rax]
   1400208c0:	xor    r10d,r10d
   1400208c3:	test   r12b,0x40
   1400208c7:	je     0x1400208d6
   1400208c9:	cmp    r8,r10
   1400208cc:	jge    0x1400208d6
   1400208ce:	neg    r8
   1400208d1:	bts    r12d,0x8
   1400208d6:	bt     r12d,0xf
   1400208db:	jb     0x1400208e7
   1400208dd:	bt     r12d,0xc
   1400208e2:	jb     0x1400208e7
   1400208e4:	mov    r8d,r8d
   1400208e7:	cmp    r15d,r10d
   1400208ea:	jge    0x1400208f1
   1400208ec:	mov    r15d,r11d
   1400208ef:	jmp    0x140020901
   1400208f1:	mov    eax,0x200
   1400208f6:	and    r12d,0xfffffff7
   1400208fa:	cmp    r15d,eax
   1400208fd:	cmovg  r15d,eax
   140020901:	mov    edi,DWORD PTR [rsp+0x98]
   140020908:	mov    rax,r8
   14002090b:	lea    rbx,[rsp+0xc3f]
   140020913:	neg    rax
   140020916:	sbb    ecx,ecx
   140020918:	and    ecx,edx
   14002091a:	mov    DWORD PTR [rsp+0x50],ecx
   14002091e:	mov    ecx,r15d
   140020921:	sub    r15d,r11d
   140020924:	cmp    ecx,r10d
   140020927:	jg     0x14002092e
   140020929:	cmp    r8,r10
   14002092c:	je     0x14002094d
   14002092e:	xor    edx,edx
   140020930:	mov    rax,r8
   140020933:	movsxd rcx,r9d
   140020936:	div    rcx
   140020939:	mov    r8,rax
   14002093c:	lea    eax,[rdx+0x30]
   14002093f:	cmp    eax,0x39
   140020942:	jle    0x140020946
   140020944:	add    eax,edi
   140020946:	mov    BYTE PTR [rbx],al
   140020948:	sub    rbx,r11
   14002094b:	jmp    0x14002091e
   14002094d:	mov    rdi,QWORD PTR [rsp+0xb8]
   140020955:	lea    rax,[rsp+0xc3f]
   14002095d:	sub    eax,ebx
   14002095f:	add    rbx,r11
   140020962:	bt     r12d,0x9
   140020967:	mov    DWORD PTR [rsp+0x4c],eax
   14002096b:	jae    0x140020aed
   140020971:	xor    r8d,r8d
   140020974:	cmp    eax,r8d
   140020977:	je     0x140020982
   140020979:	cmp    BYTE PTR [rbx],0x30
   14002097c:	je     0x140020af0
   140020982:	sub    rbx,r11
   140020985:	add    DWORD PTR [rsp+0x4c],r11d
   14002098a:	mov    BYTE PTR [rbx],0x30
   14002098d:	jmp    0x140020af0
   140020992:	mov    r8b,bpl
   140020995:	mov    edx,0x8
   14002099a:	jmp    0x140020e01
   14002099f:	cmp    r15d,r8d
   1400209a2:	mov    eax,0x200
   1400209a7:	lea    rbx,[rsp+0xa40]
   1400209af:	mov    esi,eax
   1400209b1:	jge    0x1400209bb
   1400209b3:	mov    r15d,0x6
   1400209b9:	jmp    0x140020a04
   1400209bb:	jne    0x1400209c8
   1400209bd:	cmp    bpl,0x67
   1400209c1:	jne    0x140020a04
   1400209c3:	mov    r15d,r11d
   1400209c6:	jmp    0x140020a04
   1400209c8:	cmp    r15d,eax
   1400209cb:	cmovg  r15d,eax
   1400209cf:	cmp    r15d,0xa3
   1400209d6:	jle    0x140020a04
   1400209d8:	lea    edi,[r15+0x15d]
   1400209df:	movsxd rcx,edi
   1400209e2:	call   0x140012c00
   1400209e7:	xor    r8d,r8d
   1400209ea:	mov    QWORD PTR [rsp+0xc8],rax
   1400209f2:	cmp    rax,r8
   1400209f5:	je     0x1400209fe
   1400209f7:	mov    rbx,rax
   1400209fa:	mov    esi,edi
   1400209fc:	jmp    0x140020a04
   1400209fe:	mov    r15d,0xa3
   140020a04:	cmp    DWORD PTR [rsp+0x8c],r8d
   140020a0c:	jne    0x140020a20
   140020a0e:	mov    rax,QWORD PTR [r13+0x0]
   140020a12:	add    r13,0x8
   140020a16:	mov    QWORD PTR [rsp+0xd0],rax
   140020a1e:	jmp    0x140020a44
   140020a20:	cmp    r14d,0x63
   140020a24:	ja     0x140020376
   140020a2a:	movsxd rax,r14d
   140020a2d:	lea    rcx,[rax+rax*2]
   140020a31:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   140020a39:	mov    rcx,QWORD PTR [rax]
   140020a3c:	mov    QWORD PTR [rsp+0xd0],rcx
   140020a44:	mov    rcx,QWORD PTR [rip+0x14b15]        # 0x140035560
   140020a4b:	movsx  edi,bpl
   140020a4f:	movsxd rsi,esi
   140020a52:	call   0x140011758
   140020a57:	lea    rcx,[rsp+0x58]
   140020a5c:	mov    r9d,edi
   140020a5f:	mov    QWORD PTR [rsp+0x30],rcx
   140020a64:	mov    ecx,DWORD PTR [rsp+0xb0]
   140020a6b:	mov    r8,rsi
   140020a6e:	mov    DWORD PTR [rsp+0x28],ecx
   140020a72:	lea    rcx,[rsp+0xd0]
   140020a7a:	mov    rdx,rbx
   140020a7d:	mov    DWORD PTR [rsp+0x20],r15d
   140020a82:	call   rax
   140020a84:	mov    edi,r12d
   140020a87:	xor    esi,esi
   140020a89:	and    edi,0x80
   140020a8f:	je     0x140020aac
   140020a91:	cmp    r15d,esi
   140020a94:	jne    0x140020aac
   140020a96:	mov    rcx,QWORD PTR [rip+0x14adb]        # 0x140035578
   140020a9d:	call   0x140011758
   140020aa2:	lea    rdx,[rsp+0x58]
   140020aa7:	mov    rcx,rbx
   140020aaa:	call   rax
   140020aac:	cmp    bpl,0x67
   140020ab0:	jne    0x140020acc
   140020ab2:	cmp    edi,esi
   140020ab4:	jne    0x140020acc
   140020ab6:	mov    rcx,QWORD PTR [rip+0x14ab3]        # 0x140035570
   140020abd:	call   0x140011758
   140020ac2:	lea    rdx,[rsp+0x58]
   140020ac7:	mov    rcx,rbx
   140020aca:	call   rax
   140020acc:	cmp    BYTE PTR [rbx],0x2d
   140020acf:	jne    0x140020ad9
   140020ad1:	bts    r12d,0x8
   140020ad6:	inc    rbx
   140020ad9:	mov    rcx,rbx
   140020adc:	call   0x140012e10
   140020ae1:	mov    rdi,QWORD PTR [rsp+0xb8]
   140020ae9:	mov    DWORD PTR [rsp+0x4c],eax
   140020aed:	xor    r8d,r8d
   140020af0:	mov    eax,DWORD PTR [rsp+0x44]
   140020af4:	cmp    DWORD PTR [rsp+0x8c],0x1
   140020afc:	jne    0x140020b07
   140020afe:	cmp    rdi,r8
   140020b01:	je     0x140020ff7
   140020b07:	cmp    eax,r8d
   140020b0a:	jne    0x140020c69
   140020b10:	test   r12b,0x40
   140020b14:	je     0x140020b47
   140020b16:	bt     r12d,0x8
   140020b1b:	jae    0x140020b24
   140020b1d:	mov    BYTE PTR [rsp+0x54],0x2d
   140020b22:	jmp    0x140020b2f
   140020b24:	test   r12b,0x1
   140020b28:	je     0x140020b3a
   140020b2a:	mov    BYTE PTR [rsp+0x54],0x2b
   140020b2f:	mov    edi,0x1
   140020b34:	mov    DWORD PTR [rsp+0x50],edi
   140020b38:	jmp    0x140020b4b
   140020b3a:	test   r12b,0x2
   140020b3e:	je     0x140020b47
   140020b40:	mov    BYTE PTR [rsp+0x54],0x20
   140020b45:	jmp    0x140020b2f
   140020b47:	mov    edi,DWORD PTR [rsp+0x50]
   140020b4b:	mov    ebp,DWORD PTR [rsp+0x78]
   140020b4f:	mov    rsi,QWORD PTR [rsp+0xa8]
   140020b57:	sub    ebp,DWORD PTR [rsp+0x4c]
   140020b5b:	sub    ebp,edi
   140020b5d:	test   r12b,0xc
   140020b61:	jne    0x140020b74
   140020b63:	lea    r9,[rsp+0x48]
   140020b68:	mov    r8,rsi
   140020b6b:	mov    edx,ebp
   140020b6d:	mov    cl,0x20
   140020b6f:	call   0x14001fdf4
   140020b74:	lea    r9,[rsp+0x48]
   140020b79:	lea    rcx,[rsp+0x54]
   140020b7e:	mov    r8,rsi
   140020b81:	mov    edx,edi
   140020b83:	call   0x14001fe48
   140020b88:	test   r12b,0x8
   140020b8c:	je     0x140020ba5
   140020b8e:	test   r12b,0x4
   140020b92:	jne    0x140020ba5
   140020b94:	lea    r9,[rsp+0x48]
   140020b99:	mov    r8,rsi
   140020b9c:	mov    edx,ebp
   140020b9e:	mov    cl,0x30
   140020ba0:	call   0x14001fdf4
   140020ba5:	mov    edi,DWORD PTR [rsp+0x4c]
   140020ba9:	xor    eax,eax
   140020bab:	cmp    DWORD PTR [rsp+0x88],eax
   140020bb2:	je     0x140020c31
   140020bb4:	cmp    edi,eax
   140020bb6:	jle    0x140020c31
   140020bb8:	mov    rsi,rbx
   140020bbb:	movzx  r9d,WORD PTR [rsi]
   140020bbf:	lea    rdx,[rsp+0xc40]
   140020bc7:	lea    rcx,[rsp+0xc0]
   140020bcf:	mov    r8d,0x6
   140020bd5:	dec    edi
   140020bd7:	add    rsi,0x2
   140020bdb:	call   0x14001ef4c
   140020be0:	xor    r8d,r8d
   140020be3:	cmp    eax,r8d
   140020be6:	jne    0x140020c20
   140020be8:	mov    edx,DWORD PTR [rsp+0xc0]
   140020bef:	cmp    edx,r8d
   140020bf2:	je     0x140020c20
   140020bf4:	mov    r8,QWORD PTR [rsp+0xa8]
   140020bfc:	lea    r9,[rsp+0x48]
   140020c01:	lea    rcx,[rsp+0xc40]
   140020c09:	call   0x14001fe48
   140020c0e:	xor    r8d,r8d
   140020c11:	cmp    edi,r8d
   140020c14:	jne    0x140020bbb
   140020c16:	mov    rsi,QWORD PTR [rsp+0xa8]
   140020c1e:	jmp    0x140020c46
   140020c20:	mov    rsi,QWORD PTR [rsp+0xa8]
   140020c28:	or     eax,0xffffffff
   140020c2b:	mov    DWORD PTR [rsp+0x48],eax
   140020c2f:	jmp    0x140020c4a
   140020c31:	lea    r9,[rsp+0x48]
   140020c36:	mov    r8,rsi
   140020c39:	mov    edx,edi
   140020c3b:	mov    rcx,rbx
   140020c3e:	call   0x14001fe48
   140020c43:	xor    r8d,r8d
   140020c46:	mov    eax,DWORD PTR [rsp+0x48]
   140020c4a:	cmp    eax,r8d
   140020c4d:	jl     0x140020c69
   140020c4f:	test   r12b,0x4
   140020c53:	je     0x140020c69
   140020c55:	lea    r9,[rsp+0x48]
   140020c5a:	mov    r8,rsi
   140020c5d:	mov    edx,ebp
   140020c5f:	mov    cl,0x20
   140020c61:	call   0x14001fdf4
   140020c66:	xor    r8d,r8d
   140020c69:	mov    rcx,QWORD PTR [rsp+0xc8]
   140020c71:	cmp    rcx,r8
   140020c74:	je     0x140020c86
   140020c76:	call   0x1400098ac
   140020c7b:	xor    r8d,r8d
   140020c7e:	mov    QWORD PTR [rsp+0xc8],r8
   140020c86:	mov    rdi,QWORD PTR [rsp+0xb8]
   140020c8e:	jmp    0x140020ff7
   140020c93:	cmp    bpl,0x49
   140020c97:	je     0x140020ce3
   140020c99:	cmp    bpl,0x68
   140020c9d:	je     0x140020cda
   140020c9f:	cmp    bpl,0x6c
   140020ca3:	je     0x140020cb9
   140020ca5:	cmp    bpl,0x77
   140020ca9:	jne    0x140020fff
   140020caf:	bts    r12d,0xb
   140020cb4:	jmp    0x140020fff
   140020cb9:	cmp    BYTE PTR [r9],0x6c
   140020cbd:	mov    r10d,DWORD PTR [rsp+0x40]
   140020cc2:	jne    0x140020cd1
   140020cc4:	add    r9,r11
   140020cc7:	bts    r12d,0xc
   140020ccc:	jmp    0x140021004
   140020cd1:	or     r12d,0x10
   140020cd5:	jmp    0x140021004
   140020cda:	or     r12d,0x20
   140020cde:	jmp    0x140020fff
   140020ce3:	mov    al,BYTE PTR [r9]
   140020ce6:	bts    r12d,0xf
   140020ceb:	cmp    al,0x36
   140020ced:	jne    0x140020d04
   140020cef:	cmp    BYTE PTR [r9+0x1],0x34
   140020cf4:	jne    0x140020d04
   140020cf6:	add    r9,0x2
   140020cfa:	bts    r12d,0xf
   140020cff:	jmp    0x140020fff
   140020d04:	cmp    al,0x33
   140020d06:	jne    0x140020d1d
   140020d08:	cmp    BYTE PTR [r9+0x1],0x32
   140020d0d:	jne    0x140020d1d
   140020d0f:	add    r9,0x2
   140020d13:	btr    r12d,0xf
   140020d18:	jmp    0x140020fff
   140020d1d:	cmp    al,0x64
   140020d1f:	je     0x140020d42
   140020d21:	cmp    al,0x69
   140020d23:	je     0x140020d42
   140020d25:	cmp    al,0x6f
   140020d27:	je     0x140020d42
   140020d29:	cmp    al,0x75
   140020d2b:	je     0x140020d42
   140020d2d:	cmp    al,0x78
   140020d2f:	je     0x140020d42
   140020d31:	cmp    al,0x58
   140020d33:	je     0x140020d42
   140020d35:	mov    DWORD PTR [rsp+0x9c],r8d
   140020d3d:	jmp    0x140020f8f
   140020d42:	bts    r12d,0x10
   140020d47:	jmp    0x140020fff
   140020d4c:	cmp    bpl,0x2a
   140020d50:	jne    0x140020e45
   140020d56:	cmp    esi,r8d
   140020d59:	jne    0x140020d68
   140020d5b:	mov    r15d,DWORD PTR [r13+0x0]
   140020d5f:	add    r13,0x8
   140020d63:	jmp    0x140020e2e
   140020d68:	lea    rdx,[rsp+0x90]
   140020d70:	mov    r8d,0xa
   140020d76:	mov    rcx,r9
   140020d79:	call   0x1400097fc
   140020d7e:	mov    rcx,QWORD PTR [rsp+0x90]
   140020d86:	mov    r11d,0x1
   140020d8c:	lea    r9,[rcx+0x1]
   140020d90:	xor    r8d,r8d
   140020d93:	sub    eax,r11d
   140020d96:	mov    QWORD PTR [rsp+0x80],r9
   140020d9e:	cmp    rdi,r8
   140020da1:	jne    0x140020e1d
   140020da3:	cmp    eax,r8d
   140020da6:	jl     0x140020376
   140020dac:	cmp    BYTE PTR [rcx],0x24
   140020daf:	jne    0x140020376
   140020db5:	cmp    r14d,0x64
   140020db9:	jge    0x140020376
   140020dbf:	mov    r10d,DWORD PTR [rsp+0x40]
   140020dc4:	cmp    eax,r10d
   140020dc7:	cmovg  r10d,eax
   140020dcb:	cdqe   
   140020dcd:	lea    rcx,[rax+rax*2]
   140020dd1:	mov    DWORD PTR [rsp+0x40],r10d
   140020dd6:	lea    rax,[rsp+rcx*8+0xe0]
   140020dde:	cmp    DWORD PTR [rax],r8d
   140020de1:	jne    0x140020dfb
   140020de3:	mov    DWORD PTR [rax],r11d
   140020de6:	mov    BYTE PTR [rsp+rcx*8+0xf0],0x2a
   140020dee:	mov    DWORD PTR [rsp+rcx*8+0xf4],r12d
   140020df6:	jmp    0x140021004
   140020dfb:	mov    r8b,0x2a
   140020dfe:	mov    edx,r11d
   140020e01:	mov    r9d,r12d
   140020e04:	mov    rcx,rax
   140020e07:	call   0x14001fc50
   140020e0c:	xor    r8d,r8d
   140020e0f:	cmp    eax,r8d
   140020e12:	je     0x140020376
   140020e18:	jmp    0x140020ff7
   140020e1d:	cdqe   
   140020e1f:	lea    rcx,[rax+rax*2]
   140020e23:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   140020e2b:	mov    r15d,DWORD PTR [rax]
   140020e2e:	cmp    r15d,r8d
   140020e31:	mov    r10d,DWORD PTR [rsp+0x40]
   140020e36:	jge    0x140021004
   140020e3c:	or     r15d,0xffffffff
   140020e40:	jmp    0x140021004
   140020e45:	lea    ecx,[r15+r15*4]
   140020e49:	movsx  eax,bpl
   140020e4d:	lea    r15d,[rax+rcx*2-0x30]
   140020e52:	jmp    0x140020fff
   140020e57:	mov    r15d,r8d
   140020e5a:	jmp    0x140020fff
   140020e5f:	cmp    bpl,0x2a
   140020e63:	jne    0x140020ee4
   140020e65:	cmp    esi,r8d
   140020e68:	jne    0x140020e74
   140020e6a:	mov    ecx,DWORD PTR [r13+0x0]
   140020e6e:	add    r13,0x8
   140020e72:	jmp    0x140020ec3
   140020e74:	lea    rdx,[rsp+0x90]
   140020e7c:	mov    r8d,0xa
   140020e82:	mov    rcx,r9
   140020e85:	call   0x1400097fc
   140020e8a:	mov    rcx,QWORD PTR [rsp+0x90]
   140020e92:	mov    r11d,0x1
   140020e98:	lea    r9,[rcx+0x1]
   140020e9c:	xor    r8d,r8d
   140020e9f:	sub    eax,r11d
   140020ea2:	mov    QWORD PTR [rsp+0x80],r9
   140020eaa:	cmp    rdi,r8
   140020ead:	je     0x140020da3
   140020eb3:	cdqe   
   140020eb5:	lea    rcx,[rax+rax*2]
   140020eb9:	mov    rax,QWORD PTR [rsp+rcx*8+0xe8]
   140020ec1:	mov    ecx,DWORD PTR [rax]
   140020ec3:	cmp    ecx,r8d
   140020ec6:	mov    r10d,DWORD PTR [rsp+0x40]
   140020ecb:	mov    DWORD PTR [rsp+0x78],ecx
   140020ecf:	jge    0x140021004
   140020ed5:	or     r12d,0x4
   140020ed9:	neg    ecx
   140020edb:	mov    DWORD PTR [rsp+0x78],ecx
   140020edf:	jmp    0x140021004
   140020ee4:	mov    eax,DWORD PTR [rsp+0x78]
   140020ee8:	lea    ecx,[rax+rax*4]
   140020eeb:	movsx  eax,bpl
   140020eef:	lea    ecx,[rax+rcx*2-0x30]
   140020ef3:	mov    DWORD PTR [rsp+0x78],ecx
   140020ef7:	jmp    0x140020fff
   140020efc:	cmp    bpl,0x20
   140020f00:	je     0x140020f47
   140020f02:	cmp    bpl,0x23
   140020f06:	je     0x140020f3d
   140020f08:	cmp    bpl,0x2b
   140020f0c:	je     0x140020f35
   140020f0e:	cmp    bpl,0x2d
   140020f12:	je     0x140020f2c
   140020f14:	mov    r10d,DWORD PTR [rsp+0x40]
   140020f19:	cmp    bpl,0x30
   140020f1d:	jne    0x140021004
   140020f23:	or     r12d,0x8
   140020f27:	jmp    0x140021004
   140020f2c:	or     r12d,0x4
   140020f30:	jmp    0x140020fff
   140020f35:	or     r12d,r11d
   140020f38:	jmp    0x140020fff
   140020f3d:	bts    r12d,0x7
   140020f42:	jmp    0x140020fff
   140020f47:	or     r12d,0x2
   140020f4b:	jmp    0x140020fff
   140020f50:	mov    DWORD PTR [rsp+0xb0],r8d
   140020f58:	mov    DWORD PTR [rsp+0x44],r8d
   140020f5d:	mov    DWORD PTR [rsp+0x78],r8d
   140020f62:	mov    DWORD PTR [rsp+0x50],r8d
   140020f67:	mov    r12d,r8d
   140020f6a:	or     r15d,0xffffffff
   140020f6e:	mov    DWORD PTR [rsp+0x88],r8d
   140020f76:	jmp    0x140020fff
   140020f7b:	cmp    rdi,r8
   140020f7e:	jne    0x140020f85
   140020f80:	cmp    esi,r11d
   140020f83:	je     0x140020fff
   140020f85:	cmp    rdi,r11
   140020f88:	jne    0x140020f8f
   140020f8a:	cmp    esi,0xffffffff
   140020f8d:	je     0x140020fff
   140020f8f:	lea    rdx,[rsp+0x58]
   140020f94:	movzx  ecx,bpl
   140020f98:	mov    DWORD PTR [rsp+0x88],r8d
   140020fa0:	call   0x140018588
   140020fa5:	xor    esi,esi
   140020fa7:	cmp    eax,esi
   140020fa9:	je     0x140020fdf
   140020fab:	mov    rdx,QWORD PTR [rsp+0xa8]
   140020fb3:	lea    r8,[rsp+0x48]
   140020fb8:	mov    cl,bpl
   140020fbb:	call   0x14001fdac
   140020fc0:	mov    rax,QWORD PTR [rsp+0x80]
   140020fc8:	mov    bpl,BYTE PTR [rax]
   140020fcb:	inc    rax
   140020fce:	mov    QWORD PTR [rsp+0x80],rax
   140020fd6:	cmp    bpl,sil
   140020fd9:	je     0x1400210bb
   140020fdf:	mov    rdx,QWORD PTR [rsp+0xa8]
   140020fe7:	lea    r8,[rsp+0x48]
   140020fec:	mov    cl,bpl
   140020fef:	call   0x14001fdac
   140020ff4:	xor    r8d,r8d
   140020ff7:	mov    r9,QWORD PTR [rsp+0x80]
   140020fff:	mov    r10d,DWORD PTR [rsp+0x40]
   140021004:	mov    bpl,BYTE PTR [r9]
   140021007:	mov    esi,DWORD PTR [rsp+0x8c]
   14002100e:	mov    eax,DWORD PTR [rsp+0x48]
   140021012:	mov    edx,DWORD PTR [rsp+0x9c]
   140021019:	cmp    bpl,r8b
   14002101c:	jne    0x1400200b8
   140021022:	mov    r11d,0x1
   140021028:	cmp    edx,r8d
   14002102b:	je     0x140021036
   14002102d:	cmp    edx,0x7
   140021030:	jne    0x140020376
   140021036:	cmp    esi,r11d
   140021039:	mov    r11d,DWORD PTR [rsp+0xa0]
   140021041:	jne    0x140021096
   140021043:	cmp    r11d,r8d
   140021046:	jne    0x140021096
   140021048:	movsxd r9,r10d
   14002104b:	xor    edi,edi
   14002104d:	cmp    r9,rdi
   140021050:	jl     0x140021093
   140021052:	lea    rdx,[rsp+0xe8]
   14002105a:	mov    ecx,DWORD PTR [rdx-0x8]
   14002105d:	sub    ecx,0x1
   140021060:	je     0x140021080
   140021062:	sub    ecx,0x1
   140021065:	je     0x140021080
   140021067:	sub    ecx,0x1
   14002106a:	je     0x140021080
   14002106c:	sub    ecx,0x1
   14002106f:	je     0x140021080
   140021071:	sub    ecx,0x1
   140021074:	je     0x140021080
   140021076:	sub    ecx,0x1
   140021079:	je     0x140021080
   14002107b:	cmp    ecx,0x2
   14002107e:	jne    0x1400210c5
   140021080:	mov    QWORD PTR [rdx],r13
   140021083:	inc    r8
   140021086:	add    r13,0x8
   14002108a:	add    rdx,0x18
   14002108e:	cmp    r8,r9
   140021091:	jle    0x14002105a
   140021093:	xor    r8d,r8d
   140021096:	mov    eax,DWORD PTR [rsp+0x48]
   14002109a:	inc    r11d
   14002109d:	cmp    r11d,0x2
   1400210a1:	mov    DWORD PTR [rsp+0xa0],r11d
   1400210a9:	jge    0x1400210ee
   1400210ab:	mov    rdi,QWORD PTR [rsp+0xd8]
   1400210b3:	or     ebp,0xffffffff
   1400210b6:	jmp    0x140020064
   1400210bb:	call   0x14000f574
   1400210c0:	jmp    0x14002037d
   1400210c5:	call   0x14000f574
   1400210ca:	xor    r9d,r9d
   1400210cd:	xor    r8d,r8d
   1400210d0:	xor    edx,edx
   1400210d2:	xor    ecx,ecx
   1400210d4:	mov    QWORD PTR [rsp+0x20],rdi
   1400210d9:	mov    DWORD PTR [rax],0x16
   1400210df:	call   0x14000e4d8
   1400210e4:	cmp    BYTE PTR [rsp+0x70],dil
   1400210e9:	jmp    0x14002039c
   1400210ee:	cmp    BYTE PTR [rsp+0x70],r8b
   1400210f3:	je     0x140021101
   1400210f5:	mov    rcx,QWORD PTR [rsp+0x68]
   1400210fa:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021101:	mov    rcx,QWORD PTR [rsp+0xc48]
   140021109:	xor    rcx,rsp
   14002110c:	call   0x140009080
   140021111:	mov    rbx,QWORD PTR [rsp+0xca0]
   140021119:	add    rsp,0xc50
   140021120:	pop    r15
   140021122:	pop    r14
   140021124:	pop    r13
   140021126:	pop    r12
   140021128:	pop    rdi
   140021129:	pop    rsi
   14002112a:	pop    rbp
   14002112b:	ret    
   14002112c:	mov    QWORD PTR [rsp+0x18],rbx
   140021131:	mov    DWORD PTR [rsp+0x8],ecx
   140021135:	push   rsi
   140021136:	push   rdi
   140021137:	push   r12
   140021139:	sub    rsp,0x30
   14002113d:	movsxd rdi,ecx
   140021140:	cmp    edi,0xfffffffe
   140021143:	jne    0x140021158
   140021145:	call   0x14000f574
   14002114a:	mov    DWORD PTR [rax],0x9
   140021150:	or     eax,0xffffffff
   140021153:	jmp    0x140021231
   140021158:	test   ecx,ecx
   14002115a:	js     0x14002120e
   140021160:	cmp    edi,DWORD PTR [rip+0x16be6]        # 0x140037d4c
   140021166:	jae    0x14002120e
   14002116c:	mov    rbx,rdi
   14002116f:	mov    rsi,rdi
   140021172:	sar    rsi,0x5
   140021176:	lea    r12,[rip+0x16be3]        # 0x140037d60
   14002117d:	and    ebx,0x1f
   140021180:	imul   rbx,rbx,0x58
   140021184:	mov    rax,QWORD PTR [r12+rsi*8]
   140021188:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14002118d:	and    ecx,0x1
   140021190:	jne    0x1400211b7
   140021192:	call   0x14000f574
   140021197:	mov    DWORD PTR [rax],0x9
   14002119d:	and    QWORD PTR [rsp+0x20],0x0
   1400211a3:	xor    r9d,r9d
   1400211a6:	xor    r8d,r8d
   1400211a9:	xor    edx,edx
   1400211ab:	xor    ecx,ecx
   1400211ad:	call   0x14000e4d8
   1400211b2:	or     eax,0xffffffff
   1400211b5:	jmp    0x140021231
   1400211b7:	mov    ecx,edi
   1400211b9:	call   0x1400135cc
   1400211be:	nop
   1400211bf:	mov    rax,QWORD PTR [r12+rsi*8]
   1400211c3:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400211c8:	je     0x1400211f5
   1400211ca:	mov    ecx,edi
   1400211cc:	call   0x140013548
   1400211d1:	mov    rcx,rax
   1400211d4:	call   QWORD PTR [rip+0x5fae]        # 0x140027188
   1400211da:	test   eax,eax
   1400211dc:	jne    0x1400211e8
   1400211de:	call   QWORD PTR [rip+0x608c]        # 0x140027270
   1400211e4:	mov    ebx,eax
   1400211e6:	jmp    0x1400211ea
   1400211e8:	xor    ebx,ebx
   1400211ea:	test   ebx,ebx
   1400211ec:	je     0x140021203
   1400211ee:	call   0x14000f594
   1400211f3:	mov    DWORD PTR [rax],ebx
   1400211f5:	call   0x14000f574
   1400211fa:	mov    DWORD PTR [rax],0x9
   140021200:	or     ebx,0xffffffff
   140021203:	mov    ecx,edi
   140021205:	call   0x140013674
   14002120a:	mov    eax,ebx
   14002120c:	jmp    0x140021231
   14002120e:	call   0x14000f574
   140021213:	mov    DWORD PTR [rax],0x9
   140021219:	and    QWORD PTR [rsp+0x20],0x0
   14002121f:	xor    r9d,r9d
   140021222:	xor    r8d,r8d
   140021225:	xor    edx,edx
   140021227:	xor    ecx,ecx
   140021229:	call   0x14000e4d8
   14002122e:	or     eax,0xffffffff
   140021231:	mov    rbx,QWORD PTR [rsp+0x60]
   140021236:	add    rsp,0x30
   14002123a:	pop    r12
   14002123c:	pop    rdi
   14002123d:	pop    rsi
   14002123e:	ret    
   14002123f:	int3   
   140021240:	mov    QWORD PTR [rsp+0x8],rbx
   140021245:	push   rdi
   140021246:	sub    rsp,0x20
   14002124a:	movsxd rbx,ecx
   14002124d:	mov    edi,r8d
   140021250:	mov    QWORD PTR [rsp+0x38],rdx
   140021255:	mov    ecx,ebx
   140021257:	call   0x140013548
   14002125c:	cmp    rax,0xffffffffffffffff
   140021260:	jne    0x140021273
   140021262:	call   0x14000f574
   140021267:	mov    DWORD PTR [rax],0x9
   14002126d:	or     rax,0xffffffffffffffff
   140021271:	jmp    0x1400212ca
   140021273:	mov    edx,DWORD PTR [rsp+0x38]
   140021277:	lea    r8,[rsp+0x3c]
   14002127c:	mov    r9d,edi
   14002127f:	mov    rcx,rax
   140021282:	call   QWORD PTR [rip+0x5f98]        # 0x140027220
   140021288:	mov    DWORD PTR [rsp+0x38],eax
   14002128c:	cmp    eax,0xffffffff
   14002128f:	jne    0x1400212a4
   140021291:	call   QWORD PTR [rip+0x5fd9]        # 0x140027270
   140021297:	test   eax,eax
   140021299:	je     0x1400212a4
   14002129b:	mov    ecx,eax
   14002129d:	call   0x14000f5b4
   1400212a2:	jmp    0x14002126d
   1400212a4:	mov    rcx,rbx
   1400212a7:	mov    rax,rbx
   1400212aa:	lea    rdx,[rip+0x16aaf]        # 0x140037d60
   1400212b1:	sar    rax,0x5
   1400212b5:	and    ecx,0x1f
   1400212b8:	mov    rax,QWORD PTR [rdx+rax*8]
   1400212bc:	imul   rcx,rcx,0x58
   1400212c0:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400212c5:	mov    rax,QWORD PTR [rsp+0x38]
   1400212ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400212cf:	add    rsp,0x20
   1400212d3:	pop    rdi
   1400212d4:	ret    
   1400212d5:	int3   
   1400212d6:	int3   
   1400212d7:	int3   
   1400212d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400212dd:	mov    QWORD PTR [rsp+0x18],rsi
   1400212e2:	mov    DWORD PTR [rsp+0x8],ecx
   1400212e6:	push   rdi
   1400212e7:	push   r12
   1400212e9:	push   r13
   1400212eb:	push   r14
   1400212ed:	push   r15
   1400212ef:	sub    rsp,0x30
   1400212f3:	mov    r12d,r8d
   1400212f6:	mov    r13,rdx
   1400212f9:	movsxd rbx,ecx
   1400212fc:	cmp    ebx,0xfffffffe
   1400212ff:	jne    0x14002131e
   140021301:	call   0x14000f594
   140021306:	xor    edi,edi
   140021308:	mov    DWORD PTR [rax],edi
   14002130a:	call   0x14000f574
   14002130f:	mov    DWORD PTR [rax],0x9
   140021315:	or     rax,0xffffffffffffffff
   140021319:	jmp    0x1400213f7
   14002131e:	xor    edi,edi
   140021320:	cmp    ebx,edi
   140021322:	jl     0x1400213cd
   140021328:	cmp    ebx,DWORD PTR [rip+0x16a1e]        # 0x140037d4c
   14002132e:	jae    0x1400213cd
   140021334:	mov    rsi,rbx
   140021337:	mov    r14,rbx
   14002133a:	sar    r14,0x5
   14002133e:	lea    r15,[rip+0x16a1b]        # 0x140037d60
   140021345:	and    esi,0x1f
   140021348:	imul   rsi,rsi,0x58
   14002134c:	mov    rax,QWORD PTR [r15+r14*8]
   140021350:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140021355:	and    ecx,0x1
   140021358:	jne    0x140021386
   14002135a:	call   0x14000f594
   14002135f:	mov    DWORD PTR [rax],edi
   140021361:	call   0x14000f574
   140021366:	mov    DWORD PTR [rax],0x9
   14002136c:	mov    QWORD PTR [rsp+0x20],rdi
   140021371:	xor    r9d,r9d
   140021374:	xor    r8d,r8d
   140021377:	xor    edx,edx
   140021379:	xor    ecx,ecx
   14002137b:	call   0x14000e4d8
   140021380:	or     rax,0xffffffffffffffff
   140021384:	jmp    0x1400213f7
   140021386:	mov    ecx,ebx
   140021388:	call   0x1400135cc
   14002138d:	nop
   14002138e:	mov    rax,QWORD PTR [r15+r14*8]
   140021392:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140021397:	je     0x1400213ab
   140021399:	mov    r8d,r12d
   14002139c:	mov    rdx,r13
   14002139f:	mov    ecx,ebx
   1400213a1:	call   0x140021240
   1400213a6:	mov    rdi,rax
   1400213a9:	jmp    0x1400213c1
   1400213ab:	call   0x14000f574
   1400213b0:	mov    DWORD PTR [rax],0x9
   1400213b6:	call   0x14000f594
   1400213bb:	mov    DWORD PTR [rax],edi
   1400213bd:	or     rdi,0xffffffffffffffff
   1400213c1:	mov    ecx,ebx
   1400213c3:	call   0x140013674
   1400213c8:	mov    rax,rdi
   1400213cb:	jmp    0x1400213f7
   1400213cd:	call   0x14000f594
   1400213d2:	mov    DWORD PTR [rax],edi
   1400213d4:	call   0x14000f574
   1400213d9:	mov    DWORD PTR [rax],0x9
   1400213df:	mov    QWORD PTR [rsp+0x20],rdi
   1400213e4:	xor    r9d,r9d
   1400213e7:	xor    r8d,r8d
   1400213ea:	xor    edx,edx
   1400213ec:	xor    ecx,ecx
   1400213ee:	call   0x14000e4d8
   1400213f3:	or     rax,0xffffffffffffffff
   1400213f7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400213fc:	mov    rsi,QWORD PTR [rsp+0x70]
   140021401:	add    rsp,0x30
   140021405:	pop    r15
   140021407:	pop    r14
   140021409:	pop    r13
   14002140b:	pop    r12
   14002140d:	pop    rdi
   14002140e:	ret    
   14002140f:	int3   
   140021410:	rex push rbx
   140021412:	sub    rsp,0x20
   140021416:	inc    DWORD PTR [rip+0x144cc]        # 0x1400358e8
   14002141c:	mov    rbx,rcx
   14002141f:	mov    ecx,0x1000
   140021424:	call   0x140012c00
   140021429:	mov    QWORD PTR [rbx+0x10],rax
   14002142d:	test   rax,rax
   140021430:	je     0x14002143f
   140021432:	or     DWORD PTR [rbx+0x18],0x8
   140021436:	mov    DWORD PTR [rbx+0x24],0x1000
   14002143d:	jmp    0x140021452
   14002143f:	or     DWORD PTR [rbx+0x18],0x4
   140021443:	lea    rax,[rbx+0x20]
   140021447:	mov    DWORD PTR [rbx+0x24],0x2
   14002144e:	mov    QWORD PTR [rbx+0x10],rax
   140021452:	mov    rax,QWORD PTR [rbx+0x10]
   140021456:	and    DWORD PTR [rbx+0x8],0x0
   14002145a:	mov    QWORD PTR [rbx],rax
   14002145d:	add    rsp,0x20
   140021461:	pop    rbx
   140021462:	ret    
   140021463:	int3   
   140021464:	mov    QWORD PTR [rsp+0x8],rbx
   140021469:	push   rdi
   14002146a:	sub    rsp,0x30
   14002146e:	test   BYTE PTR [rdx+0x18],0x40
   140021472:	mov    rbx,rdx
   140021475:	mov    edi,ecx
   140021477:	jne    0x140021517
   14002147d:	mov    rcx,rdx
   140021480:	call   0x140014cfc
   140021485:	lea    rdx,[rip+0x14034]        # 0x1400354c0
   14002148c:	lea    r8,[rip+0x168cd]        # 0x140037d60
   140021493:	movsxd r11,eax
   140021496:	cmp    r11d,0xffffffff
   14002149a:	je     0x1400214b9
   14002149c:	cmp    r11d,0xfffffffe
   1400214a0:	je     0x1400214b9
   1400214a2:	mov    rcx,r11
   1400214a5:	mov    rax,r11
   1400214a8:	and    ecx,0x1f
   1400214ab:	sar    rax,0x5
   1400214af:	imul   rcx,rcx,0x58
   1400214b3:	add    rcx,QWORD PTR [r8+rax*8]
   1400214b7:	jmp    0x1400214bc
   1400214b9:	mov    rcx,rdx
   1400214bc:	test   BYTE PTR [rcx+0x38],0x7f
   1400214c0:	jne    0x1400214e9
   1400214c2:	cmp    r11d,0xffffffff
   1400214c6:	je     0x1400214e3
   1400214c8:	cmp    r11d,0xfffffffe
   1400214cc:	je     0x1400214e3
   1400214ce:	mov    rdx,r11
   1400214d1:	mov    rax,r11
   1400214d4:	and    edx,0x1f
   1400214d7:	sar    rax,0x5
   1400214db:	imul   rdx,rdx,0x58
   1400214df:	add    rdx,QWORD PTR [r8+rax*8]
   1400214e3:	test   BYTE PTR [rdx+0x38],0x80
   1400214e7:	je     0x140021517
   1400214e9:	call   0x14000f574
   1400214ee:	and    QWORD PTR [rsp+0x20],0x0
   1400214f4:	xor    r9d,r9d
   1400214f7:	xor    r8d,r8d
   1400214fa:	xor    edx,edx
   1400214fc:	xor    ecx,ecx
   1400214fe:	mov    DWORD PTR [rax],0x16
   140021504:	call   0x14000e4d8
   140021509:	or     eax,0xffffffff
   14002150c:	mov    rbx,QWORD PTR [rsp+0x40]
   140021511:	add    rsp,0x30
   140021515:	pop    rdi
   140021516:	ret    
   140021517:	cmp    edi,0xffffffff
   14002151a:	je     0x140021509
   14002151c:	test   BYTE PTR [rbx+0x18],0x1
   140021520:	jne    0x14002152e
   140021522:	test   BYTE PTR [rbx+0x18],0x80
   140021526:	je     0x140021509
   140021528:	test   BYTE PTR [rbx+0x18],0x2
   14002152c:	jne    0x140021509
   14002152e:	cmp    QWORD PTR [rbx+0x10],0x0
   140021533:	jne    0x14002153d
   140021535:	mov    rcx,rbx
   140021538:	call   0x140021410
   14002153d:	mov    rax,QWORD PTR [rbx]
   140021540:	cmp    rax,QWORD PTR [rbx+0x10]
   140021544:	jne    0x140021552
   140021546:	cmp    DWORD PTR [rbx+0x8],0x0
   14002154a:	jne    0x140021509
   14002154c:	inc    rax
   14002154f:	mov    QWORD PTR [rbx],rax
   140021552:	dec    QWORD PTR [rbx]
   140021555:	test   BYTE PTR [rbx+0x18],0x40
   140021559:	mov    rax,QWORD PTR [rbx]
   14002155c:	je     0x14002156b
   14002155e:	cmp    BYTE PTR [rax],dil
   140021561:	je     0x14002156e
   140021563:	inc    rax
   140021566:	mov    QWORD PTR [rbx],rax
   140021569:	jmp    0x140021509
   14002156b:	mov    BYTE PTR [rax],dil
   14002156e:	inc    DWORD PTR [rbx+0x8]
   140021571:	and    DWORD PTR [rbx+0x18],0xffffffef
   140021575:	or     DWORD PTR [rbx+0x18],0x1
   140021579:	movzx  eax,dil
   14002157d:	jmp    0x14002150c
   14002157f:	int3   
   140021580:	mov    QWORD PTR [rsp+0x8],rbx
   140021585:	mov    QWORD PTR [rsp+0x10],rdx
   14002158a:	push   rdi
   14002158b:	sub    rsp,0x30
   14002158f:	mov    rbx,rdx
   140021592:	mov    edi,ecx
   140021594:	xor    eax,eax
   140021596:	test   rdx,rdx
   140021599:	setne  al
   14002159c:	test   eax,eax
   14002159e:	jne    0x1400215c5
   1400215a0:	call   0x14000f574
   1400215a5:	mov    DWORD PTR [rax],0x16
   1400215ab:	and    QWORD PTR [rsp+0x20],0x0
   1400215b1:	xor    r9d,r9d
   1400215b4:	xor    r8d,r8d
   1400215b7:	xor    edx,edx
   1400215b9:	xor    ecx,ecx
   1400215bb:	call   0x14000e4d8
   1400215c0:	or     eax,0xffffffff
   1400215c3:	jmp    0x1400215e4
   1400215c5:	mov    rcx,rdx
   1400215c8:	call   0x14000a4c4
   1400215cd:	nop
   1400215ce:	mov    rdx,rbx
   1400215d1:	mov    ecx,edi
   1400215d3:	call   0x140021464
   1400215d8:	mov    edi,eax
   1400215da:	mov    rcx,rbx
   1400215dd:	call   0x14000a554
   1400215e2:	mov    eax,edi
   1400215e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400215e9:	add    rsp,0x30
   1400215ed:	pop    rdi
   1400215ee:	ret    
   1400215ef:	int3   
   1400215f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400215f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400215fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400215ff:	push   rdi
   140021600:	sub    rsp,0x50
   140021604:	xor    ebp,ebp
   140021606:	mov    rsi,r8
   140021609:	mov    rdi,rdx
   14002160c:	mov    rbx,rcx
   14002160f:	cmp    rdx,rbp
   140021612:	je     0x140021626
   140021614:	cmp    r8,rbp
   140021617:	je     0x140021626
   140021619:	cmp    BYTE PTR [rdx],bpl
   14002161c:	jne    0x14002163d
   14002161e:	cmp    rcx,rbp
   140021621:	je     0x140021626
   140021623:	mov    WORD PTR [rcx],bp
   140021626:	xor    eax,eax
   140021628:	mov    rbx,QWORD PTR [rsp+0x60]
   14002162d:	mov    rbp,QWORD PTR [rsp+0x68]
   140021632:	mov    rsi,QWORD PTR [rsp+0x70]
   140021637:	add    rsp,0x50
   14002163b:	pop    rdi
   14002163c:	ret    
   14002163d:	lea    rcx,[rsp+0x30]
   140021642:	mov    rdx,r9
   140021645:	call   0x1400094b4
   14002164a:	mov    r11,QWORD PTR [rsp+0x30]
   14002164f:	cmp    DWORD PTR [r11+0x14],ebp
   140021653:	jne    0x14002167a
   140021655:	cmp    rbx,rbp
   140021658:	je     0x140021660
   14002165a:	movzx  eax,BYTE PTR [rdi]
   14002165d:	mov    WORD PTR [rbx],ax
   140021660:	cmp    BYTE PTR [rsp+0x48],bpl
   140021665:	je     0x140021673
   140021667:	mov    rax,QWORD PTR [rsp+0x40]
   14002166c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140021673:	mov    eax,0x1
   140021678:	jmp    0x140021628
   14002167a:	movzx  ecx,BYTE PTR [rdi]
   14002167d:	lea    rdx,[rsp+0x30]
   140021682:	call   0x140018588
   140021687:	cmp    eax,ebp
   140021689:	je     0x14002172b
   14002168f:	mov    rcx,QWORD PTR [rsp+0x30]
   140021694:	mov    r9d,DWORD PTR [rcx+0x10c]
   14002169b:	cmp    r9d,0x1
   14002169f:	jle    0x1400216d1
   1400216a1:	cmp    esi,r9d
   1400216a4:	jl     0x1400216d1
   1400216a6:	mov    ecx,DWORD PTR [rcx+0x4]
   1400216a9:	mov    eax,ebp
   1400216ab:	cmp    rbx,rbp
   1400216ae:	setne  al
   1400216b1:	mov    r8,rdi
   1400216b4:	mov    edx,0x9
   1400216b9:	mov    DWORD PTR [rsp+0x28],eax
   1400216bd:	mov    QWORD PTR [rsp+0x20],rbx
   1400216c2:	call   QWORD PTR [rip+0x5b70]        # 0x140027238
   1400216c8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400216cd:	cmp    eax,ebp
   1400216cf:	jne    0x1400216e3
   1400216d1:	movsxd rax,DWORD PTR [rcx+0x10c]
   1400216d8:	cmp    rsi,rax
   1400216db:	jb     0x140021705
   1400216dd:	cmp    BYTE PTR [rdi+0x1],bpl
   1400216e1:	je     0x140021705
   1400216e3:	mov    eax,DWORD PTR [rcx+0x10c]
   1400216e9:	cmp    BYTE PTR [rsp+0x48],bpl
   1400216ee:	je     0x140021628
   1400216f4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400216f9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021700:	jmp    0x140021628
   140021705:	call   0x14000f574
   14002170a:	mov    DWORD PTR [rax],0x2a
   140021710:	cmp    BYTE PTR [rsp+0x48],bpl
   140021715:	je     0x140021723
   140021717:	mov    rax,QWORD PTR [rsp+0x40]
   14002171c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140021723:	or     eax,0xffffffff
   140021726:	jmp    0x140021628
   14002172b:	mov    eax,ebp
   14002172d:	mov    r9d,0x1
   140021733:	cmp    rbx,rbp
   140021736:	setne  al
   140021739:	lea    edx,[r9+0x8]
   14002173d:	mov    r8,rdi
   140021740:	mov    DWORD PTR [rsp+0x28],eax
   140021744:	mov    rax,QWORD PTR [rsp+0x30]
   140021749:	mov    QWORD PTR [rsp+0x20],rbx
   14002174e:	mov    ecx,DWORD PTR [rax+0x4]
   140021751:	call   QWORD PTR [rip+0x5ae1]        # 0x140027238
   140021757:	cmp    eax,ebp
   140021759:	jne    0x140021660
   14002175f:	jmp    0x140021705
   140021761:	int3   
   140021762:	int3   
   140021763:	int3   
   140021764:	xor    r9d,r9d
   140021767:	jmp    0x1400215f0
   14002176c:	sub    rsp,0x68
   140021770:	mov    rax,QWORD PTR [rip+0x12b29]        # 0x1400342a0
   140021777:	xor    rax,rsp
   14002177a:	mov    QWORD PTR [rsp+0x50],rax
   14002177f:	cmp    DWORD PTR [rip+0x13f0a],0x0        # 0x140035690
   140021786:	mov    WORD PTR [rsp+0x40],cx
   14002178b:	je     0x1400217f3
   14002178d:	mov    rcx,QWORD PTR [rip+0x1401c]        # 0x1400357b0
   140021794:	cmp    rcx,0xfffffffffffffffe
   140021798:	jne    0x1400217a6
   14002179a:	call   0x140024ecc
   14002179f:	mov    rcx,QWORD PTR [rip+0x1400a]        # 0x1400357b0
   1400217a6:	cmp    rcx,0xffffffffffffffff
   1400217aa:	je     0x140021869
   1400217b0:	and    QWORD PTR [rsp+0x20],0x0
   1400217b6:	lea    r9,[rsp+0x44]
   1400217bb:	lea    rdx,[rsp+0x40]
   1400217c0:	mov    r8d,0x1
   1400217c6:	call   QWORD PTR [rip+0x59a4]        # 0x140027170
   1400217cc:	test   eax,eax
   1400217ce:	jne    0x14002185d
   1400217d4:	cmp    DWORD PTR [rip+0x13eb5],0x2        # 0x140035690
   1400217db:	jne    0x140021869
   1400217e1:	call   QWORD PTR [rip+0x5a89]        # 0x140027270
   1400217e7:	cmp    eax,0x78
   1400217ea:	jne    0x140021869
   1400217ec:	and    DWORD PTR [rip+0x13e9d],0x0        # 0x140035690
   1400217f3:	call   QWORD PTR [rip+0x597f]        # 0x140027178
   1400217f9:	and    QWORD PTR [rsp+0x38],0x0
   1400217ff:	and    QWORD PTR [rsp+0x30],0x0
   140021805:	mov    ecx,eax
   140021807:	lea    rax,[rsp+0x48]
   14002180c:	lea    r8,[rsp+0x40]
   140021811:	mov    r9d,0x1
   140021817:	xor    edx,edx
   140021819:	mov    DWORD PTR [rsp+0x28],0x5
   140021821:	mov    QWORD PTR [rsp+0x20],rax
   140021826:	call   QWORD PTR [rip+0x5b84]        # 0x1400273b0
   14002182c:	mov    rcx,QWORD PTR [rip+0x13f7d]        # 0x1400357b0
   140021833:	cmp    rcx,0xffffffffffffffff
   140021837:	je     0x140021869
   140021839:	and    QWORD PTR [rsp+0x20],0x0
   14002183f:	lea    r9,[rsp+0x44]
   140021844:	lea    rdx,[rsp+0x48]
   140021849:	mov    r8d,eax
   14002184c:	call   QWORD PTR [rip+0x592e]        # 0x140027180
   140021852:	test   eax,eax
   140021854:	je     0x140021869
   140021856:	mov    ax,WORD PTR [rsp+0x40]
   14002185b:	jmp    0x14002186e
   14002185d:	mov    DWORD PTR [rip+0x13e29],0x1        # 0x140035690
   140021867:	jmp    0x140021856
   140021869:	mov    eax,0xffff
   14002186e:	mov    rcx,QWORD PTR [rsp+0x50]
   140021873:	xor    rcx,rsp
   140021876:	call   0x140009080
   14002187b:	add    rsp,0x68
   14002187f:	ret    
   140021880:	mov    QWORD PTR [rsp+0x10],rbx
   140021885:	mov    QWORD PTR [rsp+0x18],rsi
   14002188a:	push   rdi
   14002188b:	sub    rsp,0x40
   14002188f:	mov    rsi,rcx
   140021892:	xor    ebx,ebx
   140021894:	mov    eax,ebx
   140021896:	cmp    rcx,rbx
   140021899:	setne  al
   14002189c:	cmp    eax,ebx
   14002189e:	jne    0x1400218cb
   1400218a0:	call   0x14000f594
   1400218a5:	mov    DWORD PTR [rax],ebx
   1400218a7:	call   0x14000f574
   1400218ac:	mov    DWORD PTR [rax],0x16
   1400218b2:	mov    QWORD PTR [rsp+0x20],rbx
   1400218b7:	xor    r9d,r9d
   1400218ba:	xor    r8d,r8d
   1400218bd:	xor    edx,edx
   1400218bf:	xor    ecx,ecx
   1400218c1:	call   0x14000e4d8
   1400218c6:	or     eax,0xffffffff
   1400218c9:	jmp    0x14002191c
   1400218cb:	call   0x140012684
   1400218d0:	mov    rdi,rax
   1400218d3:	mov    ecx,0x3
   1400218d8:	call   0x1400133a8
   1400218dd:	nop
   1400218de:	mov    rcx,rdi
   1400218e1:	dec    rdi
   1400218e4:	mov    QWORD PTR [rsp+0x30],rdi
   1400218e9:	cmp    rcx,rbx
   1400218ec:	je     0x140021910
   1400218ee:	movzx  ecx,WORD PTR [rsi]
   1400218f1:	add    rsi,0x2
   1400218f5:	mov    QWORD PTR [rsp+0x50],rsi
   1400218fa:	call   0x14002176c
   1400218ff:	mov    ecx,0xffff
   140021904:	cmp    ax,cx
   140021907:	jne    0x14002190e
   140021909:	or     ebx,0xffffffff
   14002190c:	jmp    0x140021910
   14002190e:	jmp    0x1400218de
   140021910:	mov    ecx,0x3
   140021915:	call   0x140013288
   14002191a:	mov    eax,ebx
   14002191c:	mov    rbx,QWORD PTR [rsp+0x58]
   140021921:	mov    rsi,QWORD PTR [rsp+0x60]
   140021926:	add    rsp,0x40
   14002192a:	pop    rdi
   14002192b:	ret    
   14002192c:	rex push rbx
   14002192e:	sub    rsp,0x20
   140021932:	movzx  ebx,cx
   140021935:	mov    ecx,0x3
   14002193a:	call   0x1400133a8
   14002193f:	nop
   140021940:	movzx  ecx,bx
   140021943:	call   0x14002176c
   140021948:	movzx  ebx,ax
   14002194b:	mov    ecx,0x3
   140021950:	call   0x140013288
   140021955:	mov    ax,bx
   140021958:	add    rsp,0x20
   14002195c:	pop    rbx
   14002195d:	ret    
   14002195e:	int3   
   14002195f:	int3   
   140021960:	mov    WORD PTR [rsp+0x8],cx
   140021965:	push   rbx
   140021966:	sub    rsp,0x60
   14002196a:	mov    eax,0xffff
   14002196f:	movzx  ebx,dx
   140021972:	cmp    cx,ax
   140021975:	jne    0x140021981
   140021977:	xor    ecx,ecx
   140021979:	mov    ax,cx
   14002197c:	jmp    0x140021a0c
   140021981:	mov    eax,0x100
   140021986:	cmp    cx,ax
   140021989:	jae    0x14002199e
   14002198b:	mov    rax,QWORD PTR [rip+0x13c76]        # 0x140035608
   140021992:	movzx  ecx,cx
   140021995:	mov    ax,WORD PTR [rax+rcx*2]
   140021999:	and    ax,bx
   14002199c:	jmp    0x140021a0c
   14002199e:	lea    rcx,[rsp+0x40]
   1400219a3:	mov    rdx,r8
   1400219a6:	call   0x1400094b4
   1400219ab:	mov    r11,QWORD PTR [rsp+0x40]
   1400219b0:	mov    edx,0x1
   1400219b5:	mov    eax,DWORD PTR [r11+0x14]
   1400219b9:	lea    r8,[rsp+0x70]
   1400219be:	lea    rcx,[rsp+0x40]
   1400219c3:	mov    DWORD PTR [rsp+0x30],eax
   1400219c7:	mov    eax,DWORD PTR [r11+0x4]
   1400219cb:	mov    r9d,edx
   1400219ce:	mov    DWORD PTR [rsp+0x28],eax
   1400219d2:	lea    rax,[rsp+0x78]
   1400219d7:	mov    QWORD PTR [rsp+0x20],rax
   1400219dc:	call   0x140024f74
   1400219e1:	xor    ecx,ecx
   1400219e3:	cmp    eax,ecx
   1400219e5:	jne    0x1400219f0
   1400219e7:	mov    eax,ecx
   1400219e9:	mov    WORD PTR [rsp+0x78],cx
   1400219ee:	jmp    0x1400219f5
   1400219f0:	mov    ax,WORD PTR [rsp+0x78]
   1400219f5:	cmp    BYTE PTR [rsp+0x58],cl
   1400219f9:	je     0x140021a0c
   1400219fb:	mov    rax,QWORD PTR [rsp+0x50]
   140021a00:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140021a07:	mov    ax,WORD PTR [rsp+0x78]
   140021a0c:	movzx  eax,ax
   140021a0f:	movzx  ecx,bx
   140021a12:	and    eax,ecx
   140021a14:	add    rsp,0x60
   140021a18:	pop    rbx
   140021a19:	ret    
   140021a1a:	int3   
   140021a1b:	int3   
   140021a1c:	mov    WORD PTR [rsp+0x8],cx
   140021a21:	push   rbx
   140021a22:	sub    rsp,0x40
   140021a26:	mov    eax,0xffff
   140021a2b:	movzx  ebx,dx
   140021a2e:	cmp    cx,ax
   140021a31:	jne    0x140021a37
   140021a33:	xor    eax,eax
   140021a35:	jmp    0x140021aa6
   140021a37:	mov    eax,0x100
   140021a3c:	cmp    cx,ax
   140021a3f:	jae    0x140021a56
   140021a41:	mov    rax,QWORD PTR [rip+0x13bc0]        # 0x140035608
   140021a48:	movzx  ecx,cx
   140021a4b:	movzx  eax,WORD PTR [rax+rcx*2]
   140021a4f:	movzx  ecx,bx
   140021a52:	and    eax,ecx
   140021a54:	jmp    0x140021aa6
   140021a56:	cmp    DWORD PTR [rip+0x14563],0x0        # 0x140035fc0
   140021a5d:	jne    0x140021a9b
   140021a5f:	mov    eax,DWORD PTR [rip+0x1351f]        # 0x140034f84
   140021a65:	mov    edx,0x1
   140021a6a:	lea    r8,[rsp+0x50]
   140021a6f:	mov    DWORD PTR [rsp+0x30],eax
   140021a73:	mov    eax,DWORD PTR [rip+0x134fb]        # 0x140034f74
   140021a79:	lea    rcx,[rip+0x13660]        # 0x1400350e0
   140021a80:	mov    DWORD PTR [rsp+0x28],eax
   140021a84:	lea    rax,[rsp+0x60]
   140021a89:	mov    r9d,edx
   140021a8c:	mov    QWORD PTR [rsp+0x20],rax
   140021a91:	call   0x140024f74
   140021a96:	movzx  ecx,WORD PTR [rsp+0x50]
   140021a9b:	xor    r8d,r8d
   140021a9e:	movzx  edx,bx
   140021aa1:	call   0x140021960
   140021aa6:	add    rsp,0x40
   140021aaa:	pop    rbx
   140021aab:	ret    
   140021aac:	jmp    0x140021a1c
   140021ab1:	int3   
   140021ab2:	int3   
   140021ab3:	int3   
   140021ab4:	lea    eax,[rcx+0x20]
   140021ab7:	ret    
   140021ab8:	mov    QWORD PTR [rsp+0x10],rbp
   140021abd:	push   rdi
   140021abe:	sub    rsp,0x70
   140021ac2:	movsxd rdi,ecx
   140021ac5:	lea    rcx,[rsp+0x50]
   140021aca:	call   0x1400094b4
   140021acf:	cmp    edi,0x100
   140021ad5:	jae    0x140021b39
   140021ad7:	mov    rdx,QWORD PTR [rsp+0x50]
   140021adc:	cmp    DWORD PTR [rdx+0x10c],0x1
   140021ae3:	jle    0x140021afd
   140021ae5:	lea    r8,[rsp+0x50]
   140021aea:	mov    edx,0x1
   140021aef:	mov    ecx,edi
   140021af1:	call   0x140011b14
   140021af6:	mov    rdx,QWORD PTR [rsp+0x50]
   140021afb:	jmp    0x140021b0b
   140021afd:	mov    rax,QWORD PTR [rdx+0x140]
   140021b04:	movzx  eax,WORD PTR [rax+rdi*2]
   140021b08:	and    eax,0x1
   140021b0b:	test   eax,eax
   140021b0d:	je     0x140021b1f
   140021b0f:	mov    rax,QWORD PTR [rdx+0x148]
   140021b16:	movzx  eax,BYTE PTR [rax+rdi*1]
   140021b1a:	jmp    0x140021c07
   140021b1f:	cmp    BYTE PTR [rsp+0x68],0x0
   140021b24:	je     0x140021b32
   140021b26:	mov    rax,QWORD PTR [rsp+0x60]
   140021b2b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140021b32:	mov    eax,edi
   140021b34:	jmp    0x140021c1a
   140021b39:	mov    rax,QWORD PTR [rsp+0x50]
   140021b3e:	cmp    DWORD PTR [rax+0x10c],0x1
   140021b45:	jle    0x140021b7d
   140021b47:	mov    ebp,edi
   140021b49:	lea    rdx,[rsp+0x50]
   140021b4e:	sar    ebp,0x8
   140021b51:	movzx  ecx,bpl
   140021b55:	call   0x140018588
   140021b5a:	test   eax,eax
   140021b5c:	je     0x140021b7d
   140021b5e:	mov    BYTE PTR [rsp+0x80],bpl
   140021b66:	mov    BYTE PTR [rsp+0x81],dil
   140021b6e:	mov    BYTE PTR [rsp+0x82],0x0
   140021b76:	mov    edx,0x2
   140021b7b:	jmp    0x140021b9d
   140021b7d:	call   0x14000f574
   140021b82:	mov    edx,0x1
   140021b87:	mov    DWORD PTR [rax],0x2a
   140021b8d:	mov    BYTE PTR [rsp+0x80],dil
   140021b95:	mov    BYTE PTR [rsp+0x81],0x0
   140021b9d:	mov    rcx,QWORD PTR [rsp+0x50]
   140021ba2:	mov    DWORD PTR [rsp+0x40],0x1
   140021baa:	lea    r9,[rsp+0x80]
   140021bb2:	mov    eax,DWORD PTR [rcx+0x4]
   140021bb5:	mov    r8d,0x100
   140021bbb:	mov    DWORD PTR [rsp+0x38],eax
   140021bbf:	lea    rax,[rsp+0x90]
   140021bc7:	mov    DWORD PTR [rsp+0x30],0x3
   140021bcf:	mov    QWORD PTR [rsp+0x28],rax
   140021bd4:	mov    DWORD PTR [rsp+0x20],edx
   140021bd8:	mov    edx,DWORD PTR [rcx+0x14]
   140021bdb:	lea    rcx,[rsp+0x50]
   140021be0:	call   0x14001bde8
   140021be5:	test   eax,eax
   140021be7:	je     0x140021b1f
   140021bed:	cmp    eax,0x1
   140021bf0:	movzx  eax,BYTE PTR [rsp+0x90]
   140021bf8:	je     0x140021c07
   140021bfa:	movzx  ecx,BYTE PTR [rsp+0x91]
   140021c02:	shl    eax,0x8
   140021c05:	or     eax,ecx
   140021c07:	cmp    BYTE PTR [rsp+0x68],0x0
   140021c0c:	je     0x140021c1a
   140021c0e:	mov    rcx,QWORD PTR [rsp+0x60]
   140021c13:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021c1a:	mov    rbp,QWORD PTR [rsp+0x88]
   140021c22:	add    rsp,0x70
   140021c26:	pop    rdi
   140021c27:	ret    
   140021c28:	sub    rsp,0x28
   140021c2c:	cmp    DWORD PTR [rip+0x1438d],0x0        # 0x140035fc0
   140021c33:	jne    0x140021c44
   140021c35:	lea    eax,[rcx-0x41]
   140021c38:	cmp    eax,0x19
   140021c3b:	ja     0x140021c40
   140021c3d:	add    ecx,0x20
   140021c40:	mov    eax,ecx
   140021c42:	jmp    0x140021c4b
   140021c44:	xor    edx,edx
   140021c46:	call   0x140021ab8
   140021c4b:	add    rsp,0x28
   140021c4f:	ret    
   140021c50:	mov    rax,rsp
   140021c53:	mov    QWORD PTR [rax+0x10],rbx
   140021c57:	mov    QWORD PTR [rax+0x18],r8
   140021c5b:	mov    QWORD PTR [rax+0x8],rcx
   140021c5f:	push   rbp
   140021c60:	push   rsi
   140021c61:	push   rdi
   140021c62:	push   r12
   140021c64:	push   r13
   140021c66:	push   r14
   140021c68:	push   r15
   140021c6a:	sub    rsp,0x80
   140021c71:	xor    edi,edi
   140021c73:	mov    r12b,0x80
   140021c76:	mov    esi,r9d
   140021c79:	mov    rbx,rdx
   140021c7c:	mov    DWORD PTR [rax-0x58],0x18
   140021c83:	lea    ebp,[rdi+0x1]
   140021c86:	mov    DWORD PTR [rax-0x64],edi
   140021c89:	mov    BYTE PTR [rsp+0xd8],dil
   140021c91:	mov    QWORD PTR [rax-0x50],rdi
   140021c95:	test   r12b,r9b
   140021c98:	je     0x140021ca2
   140021c9a:	mov    DWORD PTR [rax-0x48],edi
   140021c9d:	mov    r14b,0x10
   140021ca0:	jmp    0x140021ca9
   140021ca2:	mov    DWORD PTR [rsp+0x70],ebp
   140021ca6:	mov    r14b,dil
   140021ca9:	lea    rcx,[rsp+0x54]
   140021cae:	call   0x1400255c8
   140021cb3:	cmp    eax,edi
   140021cb5:	je     0x140021ccb
   140021cb7:	xor    r9d,r9d
   140021cba:	xor    r8d,r8d
   140021cbd:	xor    edx,edx
   140021cbf:	xor    ecx,ecx
   140021cc1:	mov    QWORD PTR [rsp+0x20],rdi
   140021cc6:	call   0x14000e350
   140021ccb:	bt     esi,0xf
   140021ccf:	jb     0x140021ce6
   140021cd1:	test   esi,0x74000
   140021cd7:	jne    0x140021ce3
   140021cd9:	cmp    DWORD PTR [rsp+0x54],0x8000
   140021ce1:	je     0x140021ce6
   140021ce3:	or     r14b,r12b
   140021ce6:	mov    ecx,esi
   140021ce8:	mov    r8d,0x3
   140021cee:	mov    eax,0xc0000000
   140021cf3:	and    ecx,r8d
   140021cf6:	mov    edx,0x80000000
   140021cfb:	cmp    ecx,edi
   140021cfd:	je     0x140021d53
   140021cff:	sub    ecx,ebp
   140021d01:	je     0x140021d3d
   140021d03:	cmp    ecx,ebp
   140021d05:	je     0x140021d38
   140021d07:	call   0x14000f594
   140021d0c:	mov    DWORD PTR [rax],edi
   140021d0e:	or     DWORD PTR [rbx],0xffffffff
   140021d11:	call   0x14000f574
   140021d16:	mov    ebx,0x16
   140021d1b:	xor    r9d,r9d
   140021d1e:	xor    r8d,r8d
   140021d21:	xor    edx,edx
   140021d23:	xor    ecx,ecx
   140021d25:	mov    QWORD PTR [rsp+0x20],rdi
   140021d2a:	mov    DWORD PTR [rax],ebx
   140021d2c:	call   0x14000e4d8
   140021d31:	mov    eax,ebx
   140021d33:	jmp    0x140022433
   140021d38:	mov    r15d,eax
   140021d3b:	jmp    0x140021d56
   140021d3d:	test   sil,0x8
   140021d41:	je     0x140021d4b
   140021d43:	test   esi,0x70000
   140021d49:	jne    0x140021d38
   140021d4b:	mov    r15d,0x40000000
   140021d51:	jmp    0x140021d56
   140021d53:	mov    r15d,edx
   140021d56:	mov    ecx,DWORD PTR [rsp+0xe0]
   140021d5d:	mov    r12d,0x2
   140021d63:	sub    ecx,0x10
   140021d66:	je     0x140021d94
   140021d68:	sub    ecx,0x10
   140021d6b:	je     0x140021d90
   140021d6d:	sub    ecx,0x10
   140021d70:	je     0x140021d8b
   140021d72:	sub    ecx,0x10
   140021d75:	je     0x140021d86
   140021d77:	cmp    ecx,0x40
   140021d7a:	jne    0x140021d07
   140021d7c:	cmp    r15d,edx
   140021d7f:	mov    ecx,edi
   140021d81:	sete   cl
   140021d84:	jmp    0x140021d96
   140021d86:	mov    ecx,r8d
   140021d89:	jmp    0x140021d96
   140021d8b:	mov    ecx,r12d
   140021d8e:	jmp    0x140021d96
   140021d90:	mov    ecx,ebp
   140021d92:	jmp    0x140021d96
   140021d94:	mov    ecx,edi
   140021d96:	mov    eax,esi
   140021d98:	mov    edx,0x700
   140021d9d:	mov    DWORD PTR [rsp+0x48],ecx
   140021da1:	and    eax,edx
   140021da3:	je     0x140021deb
   140021da5:	cmp    eax,0x100
   140021daa:	je     0x140021de4
   140021dac:	cmp    eax,0x200
   140021db1:	je     0x140021ddd
   140021db3:	cmp    eax,0x300
   140021db8:	je     0x140021dd8
   140021dba:	cmp    eax,0x400
   140021dbf:	je     0x140021deb
   140021dc1:	cmp    eax,0x500
   140021dc6:	je     0x140021dee
   140021dc8:	cmp    eax,0x600
   140021dcd:	je     0x140021ddd
   140021dcf:	cmp    eax,edx
   140021dd1:	je     0x140021dee
   140021dd3:	jmp    0x140021d07
   140021dd8:	mov    ebp,r12d
   140021ddb:	jmp    0x140021dee
   140021ddd:	mov    ebp,0x5
   140021de2:	jmp    0x140021dee
   140021de4:	mov    ebp,0x4
   140021de9:	jmp    0x140021dee
   140021deb:	mov    ebp,r8d
   140021dee:	bt     esi,0x8
   140021df2:	mov    r13d,0x80
   140021df8:	mov    DWORD PTR [rsp+0x50],r13d
   140021dfd:	jae    0x140021e1d
   140021dff:	mov    al,BYTE PTR [rip+0x13aeb]        # 0x1400358f0
   140021e05:	not    al
   140021e07:	and    al,BYTE PTR [rsp+0xe8]
   140021e0e:	test   al,0x80
   140021e10:	lea    eax,[r13-0x7f]
   140021e14:	cmove  r13d,eax
   140021e18:	mov    DWORD PTR [rsp+0x50],r13d
   140021e1d:	test   sil,0x40
   140021e21:	je     0x140021e39
   140021e23:	bts    r13d,0x1a
   140021e28:	bts    r15d,0x10
   140021e2d:	or     ecx,0x4
   140021e30:	mov    DWORD PTR [rsp+0x50],r13d
   140021e35:	mov    DWORD PTR [rsp+0x48],ecx
   140021e39:	bt     esi,0xc
   140021e3d:	jae    0x140021e49
   140021e3f:	bts    r13d,0x8
   140021e44:	mov    DWORD PTR [rsp+0x50],r13d
   140021e49:	test   sil,0x20
   140021e4d:	je     0x140021e56
   140021e4f:	bts    r13d,0x1b
   140021e54:	jmp    0x140021e61
   140021e56:	test   sil,0x10
   140021e5a:	je     0x140021e66
   140021e5c:	bts    r13d,0x1c
   140021e61:	mov    DWORD PTR [rsp+0x50],r13d
   140021e66:	call   0x14001369c
   140021e6b:	mov    DWORD PTR [rbx],eax
   140021e6d:	cmp    eax,0xffffffff
   140021e70:	jne    0x140021e93
   140021e72:	call   0x14000f594
   140021e77:	mov    DWORD PTR [rax],edi
   140021e79:	or     DWORD PTR [rbx],0xffffffff
   140021e7c:	call   0x14000f574
   140021e81:	mov    DWORD PTR [rax],0x18
   140021e87:	call   0x14000f574
   140021e8c:	mov    eax,DWORD PTR [rax]
   140021e8e:	jmp    0x140022433
   140021e93:	mov    rax,QWORD PTR [rsp+0xc0]
   140021e9b:	mov    r8d,DWORD PTR [rsp+0x48]
   140021ea0:	mov    rcx,QWORD PTR [rsp+0xd0]
   140021ea8:	mov    QWORD PTR [rsp+0x30],rdi
   140021ead:	lea    r9,[rsp+0x60]
   140021eb2:	mov    edx,r15d
   140021eb5:	mov    DWORD PTR [rsp+0x28],r13d
   140021eba:	mov    DWORD PTR [rax],0x1
   140021ec0:	mov    DWORD PTR [rsp+0x20],ebp
   140021ec4:	call   QWORD PTR [rip+0x539e]        # 0x140027268
   140021eca:	mov    QWORD PTR [rsp+0x58],rax
   140021ecf:	cmp    rax,0xffffffffffffffff
   140021ed3:	jne    0x140021f65
   140021ed9:	mov    ecx,0xc0000000
   140021ede:	mov    eax,r15d
   140021ee1:	and    eax,ecx
   140021ee3:	cmp    eax,ecx
   140021ee5:	jne    0x140021f2a
   140021ee7:	mov    eax,0x1
   140021eec:	test   al,sil
   140021eef:	je     0x140021f2a
   140021ef1:	mov    r8d,DWORD PTR [rsp+0x48]
   140021ef6:	mov    rcx,QWORD PTR [rsp+0xd0]
   140021efe:	mov    QWORD PTR [rsp+0x30],rdi
   140021f03:	btr    r15d,0x1f
   140021f08:	lea    r9,[rsp+0x60]
   140021f0d:	mov    DWORD PTR [rsp+0x28],r13d
   140021f12:	mov    edx,r15d
   140021f15:	mov    DWORD PTR [rsp+0x20],ebp
   140021f19:	call   QWORD PTR [rip+0x5349]        # 0x140027268
   140021f1f:	mov    QWORD PTR [rsp+0x58],rax
   140021f24:	cmp    rax,0xffffffffffffffff
   140021f28:	jne    0x140021f65
   140021f2a:	movsxd rcx,DWORD PTR [rbx]
   140021f2d:	lea    r13,[rip+0x15e2c]        # 0x140037d60
   140021f34:	mov    rax,rcx
   140021f37:	and    ecx,0x1f
   140021f3a:	sar    rax,0x5
   140021f3e:	imul   rcx,rcx,0x58
   140021f42:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   140021f47:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140021f4c:	call   QWORD PTR [rip+0x531e]        # 0x140027270
   140021f52:	mov    ecx,eax
   140021f54:	call   0x14000f5b4
   140021f59:	call   0x14000f574
   140021f5e:	mov    edi,DWORD PTR [rax]
   140021f60:	jmp    0x140022431
   140021f65:	mov    rcx,rax
   140021f68:	call   QWORD PTR [rip+0x53b2]        # 0x140027320
   140021f6e:	cmp    eax,edi
   140021f70:	jne    0x140021fbf
   140021f72:	movsxd rcx,DWORD PTR [rbx]
   140021f75:	lea    r13,[rip+0x15de4]        # 0x140037d60
   140021f7c:	mov    rax,rcx
   140021f7f:	and    ecx,0x1f
   140021f82:	sar    rax,0x5
   140021f86:	imul   rcx,rcx,0x58
   140021f8a:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   140021f8f:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140021f94:	call   QWORD PTR [rip+0x52d6]        # 0x140027270
   140021f9a:	mov    ecx,eax
   140021f9c:	mov    ebx,eax
   140021f9e:	call   0x14000f5b4
   140021fa3:	mov    rcx,QWORD PTR [rsp+0x58]
   140021fa8:	call   QWORD PTR [rip+0x52da]        # 0x140027288
   140021fae:	cmp    ebx,edi
   140021fb0:	jne    0x140021f59
   140021fb2:	call   0x14000f574
   140021fb7:	mov    DWORD PTR [rax],0xd
   140021fbd:	jmp    0x140021f59
   140021fbf:	cmp    eax,r12d
   140021fc2:	jne    0x140021fca
   140021fc4:	or     r14b,0x40
   140021fc8:	jmp    0x140021fd3
   140021fca:	cmp    eax,0x3
   140021fcd:	jne    0x140021fd3
   140021fcf:	or     r14b,0x8
   140021fd3:	mov    rdx,QWORD PTR [rsp+0x58]
   140021fd8:	mov    ecx,DWORD PTR [rbx]
   140021fda:	call   0x1400133ec
   140021fdf:	movsxd rcx,DWORD PTR [rbx]
   140021fe2:	lea    r13,[rip+0x15d77]        # 0x140037d60
   140021fe9:	mov    rax,rcx
   140021fec:	and    ecx,0x1f
   140021fef:	mov    edx,0x1
   140021ff4:	sar    rax,0x5
   140021ff8:	or     r14b,dl
   140021ffb:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   140022000:	imul   rcx,rcx,0x58
   140022004:	mov    BYTE PTR [rax+rcx*1+0x8],r14b
   140022009:	movsxd rcx,DWORD PTR [rbx]
   14002200c:	mov    rax,rcx
   14002200f:	and    ecx,0x1f
   140022012:	sar    rax,0x5
   140022016:	imul   rcx,rcx,0x58
   14002201a:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002201f:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140022024:	mov    al,r14b
   140022027:	and    al,0x48
   140022029:	mov    BYTE PTR [rsp+0x4c],al
   14002202d:	jne    0x1400220b9
   140022033:	test   r14b,r14b
   140022036:	jns    0x1400222fe
   14002203c:	test   r12b,sil
   14002203f:	je     0x1400220b9
   140022041:	mov    ecx,DWORD PTR [rbx]
   140022043:	mov    r8d,r12d
   140022046:	or     edx,0xffffffff
   140022049:	call   0x1400252dc
   14002204e:	mov    DWORD PTR [rsp+0x44],eax
   140022052:	cmp    eax,0xffffffff
   140022055:	jne    0x140022070
   140022057:	call   0x14000f594
   14002205c:	cmp    DWORD PTR [rax],0x83
   140022062:	je     0x1400220b4
   140022064:	mov    ecx,DWORD PTR [rbx]
   140022066:	call   0x140017ae8
   14002206b:	jmp    0x140021f59
   140022070:	mov    ecx,DWORD PTR [rbx]
   140022072:	lea    rdx,[rsp+0x40]
   140022077:	mov    r8d,0x1
   14002207d:	mov    BYTE PTR [rsp+0x40],dil
   140022082:	call   0x140022a54
   140022087:	cmp    eax,edi
   140022089:	jne    0x1400220a3
   14002208b:	cmp    BYTE PTR [rsp+0x40],0x1a
   140022090:	jne    0x1400220a3
   140022092:	movsxd rdx,DWORD PTR [rsp+0x44]
   140022097:	mov    ecx,DWORD PTR [rbx]
   140022099:	call   0x140024fd8
   14002209e:	cmp    eax,0xffffffff
   1400220a1:	je     0x140022064
   1400220a3:	mov    ecx,DWORD PTR [rbx]
   1400220a5:	xor    r8d,r8d
   1400220a8:	xor    edx,edx
   1400220aa:	call   0x1400252dc
   1400220af:	cmp    eax,0xffffffff
   1400220b2:	je     0x140022064
   1400220b4:	mov    edx,0x1
   1400220b9:	test   r14b,r14b
   1400220bc:	jns    0x1400222fe
   1400220c2:	mov    ecx,0x74000
   1400220c7:	test   ecx,esi
   1400220c9:	jne    0x1400220db
   1400220cb:	mov    eax,DWORD PTR [rsp+0x54]
   1400220cf:	and    eax,ecx
   1400220d1:	jne    0x1400220d9
   1400220d3:	bts    esi,0xe
   1400220d7:	jmp    0x1400220db
   1400220d9:	or     esi,eax
   1400220db:	mov    eax,esi
   1400220dd:	and    eax,ecx
   1400220df:	cmp    eax,0x4000
   1400220e4:	je     0x140022130
   1400220e6:	cmp    eax,0x10000
   1400220eb:	je     0x140022119
   1400220ed:	cmp    eax,0x14000
   1400220f2:	je     0x140022119
   1400220f4:	cmp    eax,0x20000
   1400220f9:	je     0x140022126
   1400220fb:	cmp    eax,0x24000
   140022100:	je     0x140022126
   140022102:	cmp    eax,0x40000
   140022107:	je     0x140022110
   140022109:	cmp    eax,0x44000
   14002210e:	jne    0x140022138
   140022110:	mov    BYTE PTR [rsp+0xd8],dl
   140022117:	jmp    0x140022138
   140022119:	mov    ecx,0x301
   14002211e:	mov    eax,esi
   140022120:	and    eax,ecx
   140022122:	cmp    eax,ecx
   140022124:	jne    0x140022138
   140022126:	mov    BYTE PTR [rsp+0xd8],r12b
   14002212e:	jmp    0x140022138
   140022130:	mov    BYTE PTR [rsp+0xd8],dil
   140022138:	test   esi,0x70000
   14002213e:	je     0x1400222fe
   140022144:	mov    DWORD PTR [rsp+0x44],edi
   140022148:	test   r14b,0x40
   14002214c:	jne    0x1400222fe
   140022152:	mov    eax,r15d
   140022155:	and    eax,0xc0000000
   14002215a:	cmp    eax,0x40000000
   14002215f:	je     0x140022289
   140022165:	cmp    eax,0x80000000
   14002216a:	je     0x1400221e8
   14002216c:	cmp    eax,0xc0000000
   140022171:	jne    0x1400222fe
   140022177:	cmp    ebp,edi
   140022179:	jbe    0x1400222fe
   14002217f:	cmp    ebp,r12d
   140022182:	jbe    0x140022192
   140022184:	cmp    ebp,0x4
   140022187:	jbe    0x1400221c1
   140022189:	cmp    ebp,0x5
   14002218c:	jne    0x1400222fe
   140022192:	movsx  ecx,BYTE PTR [rsp+0xd8]
   14002219a:	mov    r8d,0x1
   1400221a0:	mov    ebp,edi
   1400221a2:	sub    ecx,r8d
   1400221a5:	je     0x1400222cb
   1400221ab:	cmp    ecx,r8d
   1400221ae:	jne    0x140022304
   1400221b4:	mov    DWORD PTR [rsp+0x44],0xfeff
   1400221bc:	jmp    0x1400222d9
   1400221c1:	mov    ecx,DWORD PTR [rbx]
   1400221c3:	mov    r8d,r12d
   1400221c6:	xor    edx,edx
   1400221c8:	call   0x140021240
   1400221cd:	cmp    rax,rdi
   1400221d0:	je     0x140022192
   1400221d2:	mov    ecx,DWORD PTR [rbx]
   1400221d4:	xor    r8d,r8d
   1400221d7:	xor    edx,edx
   1400221d9:	call   0x140021240
   1400221de:	cmp    rax,0xffffffffffffffff
   1400221e2:	je     0x140022064
   1400221e8:	mov    ecx,DWORD PTR [rbx]
   1400221ea:	lea    rdx,[rsp+0x44]
   1400221ef:	mov    r8d,0x3
   1400221f5:	call   0x140022a54
   1400221fa:	cmp    eax,0xffffffff
   1400221fd:	je     0x140022064
   140022203:	cmp    eax,r12d
   140022206:	je     0x140022228
   140022208:	cmp    eax,0x3
   14002220b:	jne    0x140022278
   14002220d:	cmp    DWORD PTR [rsp+0x44],0xbfbbef
   140022215:	jne    0x140022228
   140022217:	lea    r8d,[rax-0x2]
   14002221b:	mov    BYTE PTR [rsp+0xd8],r8b
   140022223:	jmp    0x140022304
   140022228:	movzx  eax,WORD PTR [rsp+0x44]
   14002222d:	cmp    eax,0xfffe
   140022232:	jne    0x14002224e
   140022234:	mov    ecx,DWORD PTR [rbx]
   140022236:	call   0x140017ae8
   14002223b:	call   0x14000f574
   140022240:	mov    ebx,0x16
   140022245:	mov    DWORD PTR [rax],ebx
   140022247:	mov    edi,ebx
   140022249:	jmp    0x140022431
   14002224e:	cmp    eax,0xfeff
   140022253:	jne    0x140022278
   140022255:	mov    ecx,DWORD PTR [rbx]
   140022257:	xor    r8d,r8d
   14002225a:	mov    edx,r12d
   14002225d:	call   0x1400252dc
   140022262:	cmp    eax,0xffffffff
   140022265:	je     0x140022064
   14002226b:	mov    BYTE PTR [rsp+0xd8],r12b
   140022273:	jmp    0x1400222fe
   140022278:	mov    ecx,DWORD PTR [rbx]
   14002227a:	xor    r8d,r8d
   14002227d:	xor    edx,edx
   14002227f:	call   0x1400252dc
   140022284:	cmp    eax,0xffffffff
   140022287:	jmp    0x1400222c4
   140022289:	cmp    ebp,edi
   14002228b:	jbe    0x1400222fe
   14002228d:	cmp    ebp,r12d
   140022290:	jbe    0x140022192
   140022296:	cmp    ebp,0x4
   140022299:	ja     0x140022189
   14002229f:	mov    ecx,DWORD PTR [rbx]
   1400222a1:	mov    r8d,r12d
   1400222a4:	xor    edx,edx
   1400222a6:	call   0x140021240
   1400222ab:	cmp    rax,rdi
   1400222ae:	je     0x140022192
   1400222b4:	mov    ecx,DWORD PTR [rbx]
   1400222b6:	xor    r8d,r8d
   1400222b9:	xor    edx,edx
   1400222bb:	call   0x140021240
   1400222c0:	cmp    rax,0xffffffffffffffff
   1400222c4:	jne    0x1400222fe
   1400222c6:	jmp    0x140022064
   1400222cb:	mov    DWORD PTR [rsp+0x44],0xbfbbef
   1400222d3:	mov    r12d,0x3
   1400222d9:	mov    ecx,DWORD PTR [rbx]
   1400222db:	movsxd rax,ebp
   1400222de:	mov    r8d,r12d
   1400222e1:	lea    rdx,[rsp+rax*1+0x44]
   1400222e6:	sub    r8d,ebp
   1400222e9:	call   0x140018454
   1400222ee:	cmp    eax,0xffffffff
   1400222f1:	je     0x140022064
   1400222f7:	add    ebp,eax
   1400222f9:	cmp    r12d,ebp
   1400222fc:	jg     0x1400222d9
   1400222fe:	mov    r8d,0x1
   140022304:	movsxd rcx,DWORD PTR [rbx]
   140022307:	mov    bpl,BYTE PTR [rsp+0xd8]
   14002230f:	mov    rax,rcx
   140022312:	and    ecx,0x1f
   140022315:	and    bpl,0x7f
   140022319:	sar    rax,0x5
   14002231d:	imul   rcx,rcx,0x58
   140022321:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   140022326:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14002232b:	or     BYTE PTR [rax+rcx*1+0x38],bpl
   140022330:	movsxd rdx,DWORD PTR [rbx]
   140022333:	mov    rax,rdx
   140022336:	and    edx,0x1f
   140022339:	sar    rax,0x5
   14002233d:	imul   rdx,rdx,0x58
   140022341:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   140022346:	mov    eax,esi
   140022348:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   14002234d:	shr    eax,0x10
   140022350:	shl    al,0x7
   140022353:	or     BYTE PTR [rcx+rdx*1+0x38],al
   140022357:	cmp    BYTE PTR [rsp+0x4c],dil
   14002235c:	jne    0x14002237f
   14002235e:	test   sil,0x8
   140022362:	je     0x14002237f
   140022364:	movsxd rcx,DWORD PTR [rbx]
   140022367:	mov    rax,rcx
   14002236a:	and    ecx,0x1f
   14002236d:	sar    rax,0x5
   140022371:	imul   rcx,rcx,0x58
   140022375:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002237a:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   14002237f:	mov    eax,r15d
   140022382:	and    eax,0xc0000000
   140022387:	cmp    eax,0xc0000000
   14002238c:	jne    0x140022431
   140022392:	test   r8b,sil
   140022395:	je     0x140022431
   14002239b:	mov    rcx,QWORD PTR [rsp+0x58]
   1400223a0:	call   QWORD PTR [rip+0x4ee2]        # 0x140027288
   1400223a6:	mov    eax,DWORD PTR [rsp+0x50]
   1400223aa:	mov    r8d,DWORD PTR [rsp+0x48]
   1400223af:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400223b7:	mov    QWORD PTR [rsp+0x30],rdi
   1400223bc:	mov    DWORD PTR [rsp+0x28],eax
   1400223c0:	btr    r15d,0x1f
   1400223c5:	lea    r9,[rsp+0x60]
   1400223ca:	mov    DWORD PTR [rsp+0x20],0x3
   1400223d2:	mov    edx,r15d
   1400223d5:	call   QWORD PTR [rip+0x4e8d]        # 0x140027268
   1400223db:	cmp    rax,0xffffffffffffffff
   1400223df:	jne    0x140022417
   1400223e1:	call   QWORD PTR [rip+0x4e89]        # 0x140027270
   1400223e7:	mov    ecx,eax
   1400223e9:	call   0x14000f5b4
   1400223ee:	movsxd r11,DWORD PTR [rbx]
   1400223f1:	mov    rax,r11
   1400223f4:	and    r11d,0x1f
   1400223f8:	sar    rax,0x5
   1400223fc:	imul   r11,r11,0x58
   140022400:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   140022405:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14002240b:	mov    ecx,DWORD PTR [rbx]
   14002240d:	call   0x14001349c
   140022412:	jmp    0x140021f59
   140022417:	movsxd rdx,DWORD PTR [rbx]
   14002241a:	mov    rcx,rdx
   14002241d:	and    edx,0x1f
   140022420:	sar    rcx,0x5
   140022424:	imul   rdx,rdx,0x58
   140022428:	mov    rcx,QWORD PTR [r13+rcx*8+0x0]
   14002242d:	mov    QWORD PTR [rdx+rcx*1],rax
   140022431:	mov    eax,edi
   140022433:	mov    rbx,QWORD PTR [rsp+0xc8]
   14002243b:	add    rsp,0x80
   140022442:	pop    r15
   140022444:	pop    r14
   140022446:	pop    r13
   140022448:	pop    r12
   14002244a:	pop    rdi
   14002244b:	pop    rsi
   14002244c:	pop    rbp
   14002244d:	ret    
   14002244e:	int3   
   14002244f:	int3   
   140022450:	mov    rax,rsp
   140022453:	mov    DWORD PTR [rax+0x10],edx
   140022456:	mov    QWORD PTR [rax+0x18],r8
   14002245a:	mov    QWORD PTR [rax+0x20],r9
   14002245e:	push   rsi
   14002245f:	push   rdi
   140022460:	sub    rsp,0x58
   140022464:	or     DWORD PTR [rax-0x28],0xffffffff
   140022468:	and    DWORD PTR [rax-0x24],0x0
   14002246c:	xor    r8d,r8d
   14002246f:	test   rcx,rcx
   140022472:	setne  r8b
   140022476:	test   r8d,r8d
   140022479:	jne    0x1400224a3
   14002247b:	call   0x14000f574
   140022480:	mov    DWORD PTR [rax],0x16
   140022486:	and    QWORD PTR [rsp+0x20],0x0
   14002248c:	xor    r9d,r9d
   14002248f:	xor    r8d,r8d
   140022492:	xor    edx,edx
   140022494:	xor    ecx,ecx
   140022496:	call   0x14000e4d8
   14002249b:	or     eax,0xffffffff
   14002249e:	jmp    0x140022536
   1400224a3:	lea    rax,[rsp+0x80]
   1400224ab:	add    rax,0x8
   1400224af:	mov    r8d,DWORD PTR [rax-0x8]
   1400224b3:	and    DWORD PTR [rsp+0x30],0x0
   1400224b8:	mov    DWORD PTR [rsp+0x28],r8d
   1400224bd:	mov    DWORD PTR [rsp+0x20],0x40
   1400224c5:	mov    r9d,edx
   1400224c8:	mov    r8,rcx
   1400224cb:	lea    rdx,[rsp+0x40]
   1400224d0:	lea    rcx,[rsp+0x44]
   1400224d5:	call   0x140021c50
   1400224da:	mov    esi,eax
   1400224dc:	mov    DWORD PTR [rsp+0x48],eax
   1400224e0:	cmp    DWORD PTR [rsp+0x44],0x0
   1400224e5:	je     0x140022520
   1400224e7:	test   eax,eax
   1400224e9:	je     0x140022513
   1400224eb:	movsxd rdi,DWORD PTR [rsp+0x40]
   1400224f0:	mov    rcx,rdi
   1400224f3:	mov    rax,rdi
   1400224f6:	sar    rax,0x5
   1400224fa:	lea    r8,[rip+0x1585f]        # 0x140037d60
   140022501:	and    ecx,0x1f
   140022504:	imul   rcx,rcx,0x58
   140022508:	mov    rax,QWORD PTR [r8+rax*8]
   14002250c:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140022511:	jmp    0x140022517
   140022513:	mov    edi,DWORD PTR [rsp+0x40]
   140022517:	mov    ecx,edi
   140022519:	call   0x140013674
   14002251e:	jmp    0x140022524
   140022520:	mov    edi,DWORD PTR [rsp+0x40]
   140022524:	test   esi,esi
   140022526:	je     0x140022534
   140022528:	call   0x14000f574
   14002252d:	mov    DWORD PTR [rax],esi
   14002252f:	or     eax,0xffffffff
   140022532:	jmp    0x140022536
   140022534:	mov    eax,edi
   140022536:	add    rsp,0x58
   14002253a:	pop    rdi
   14002253b:	pop    rsi
   14002253c:	ret    
   14002253d:	int3   
   14002253e:	int3   
   14002253f:	int3   
   140022540:	mov    QWORD PTR [rsp+0x8],rsi
   140022545:	push   rdi
   140022546:	sub    rsp,0x50
   14002254a:	mov    r10d,r8d
   14002254d:	mov    r8,rcx
   140022550:	and    DWORD PTR [rsp+0x40],0x0
   140022555:	xor    eax,eax
   140022557:	mov    rsi,QWORD PTR [rsp+0x80]
   14002255f:	test   rsi,rsi
   140022562:	setne  al
   140022565:	test   eax,eax
   140022567:	jne    0x140022591
   140022569:	call   0x14000f574
   14002256e:	mov    edi,0x16
   140022573:	mov    DWORD PTR [rax],edi
   140022575:	and    QWORD PTR [rsp+0x20],0x0
   14002257b:	xor    r9d,r9d
   14002257e:	xor    r8d,r8d
   140022581:	xor    edx,edx
   140022583:	xor    ecx,ecx
   140022585:	call   0x14000e4d8
   14002258a:	mov    eax,edi
   14002258c:	jmp    0x14002266b
   140022591:	or     DWORD PTR [rsi],0xffffffff
   140022594:	xor    eax,eax
   140022596:	test   rcx,rcx
   140022599:	setne  al
   14002259c:	test   eax,eax
   14002259e:	jne    0x1400225c8
   1400225a0:	call   0x14000f574
   1400225a5:	mov    edi,0x16
   1400225aa:	mov    DWORD PTR [rax],edi
   1400225ac:	and    QWORD PTR [rsp+0x20],0x0
   1400225b2:	xor    r9d,r9d
   1400225b5:	xor    r8d,r8d
   1400225b8:	xor    edx,edx
   1400225ba:	xor    ecx,ecx
   1400225bc:	call   0x14000e4d8
   1400225c1:	mov    eax,edi
   1400225c3:	jmp    0x14002266b
   1400225c8:	mov    ecx,DWORD PTR [rsp+0x88]
   1400225cf:	test   ecx,ecx
   1400225d1:	je     0x14002260b
   1400225d3:	test   r9d,0xfffffe7f
   1400225da:	mov    eax,0x0
   1400225df:	sete   al
   1400225e2:	test   eax,eax
   1400225e4:	jne    0x14002260b
   1400225e6:	call   0x14000f574
   1400225eb:	mov    edi,0x16
   1400225f0:	mov    DWORD PTR [rax],edi
   1400225f2:	and    QWORD PTR [rsp+0x20],0x0
   1400225f8:	xor    r9d,r9d
   1400225fb:	xor    r8d,r8d
   1400225fe:	xor    edx,edx
   140022600:	xor    ecx,ecx
   140022602:	call   0x14000e4d8
   140022607:	mov    eax,edi
   140022609:	jmp    0x14002266b
   14002260b:	mov    DWORD PTR [rsp+0x30],ecx
   14002260f:	mov    DWORD PTR [rsp+0x28],r9d
   140022614:	mov    DWORD PTR [rsp+0x20],r10d
   140022619:	mov    r9d,edx
   14002261c:	mov    rdx,rsi
   14002261f:	lea    rcx,[rsp+0x40]
   140022624:	call   0x140021c50
   140022629:	mov    edi,eax
   14002262b:	mov    DWORD PTR [rsp+0x44],eax
   14002262f:	cmp    DWORD PTR [rsp+0x40],0x0
   140022634:	je     0x140022662
   140022636:	test   eax,eax
   140022638:	je     0x14002265b
   14002263a:	movsxd rcx,DWORD PTR [rsi]
   14002263d:	mov    rax,rcx
   140022640:	sar    rax,0x5
   140022644:	lea    r8,[rip+0x15715]        # 0x140037d60
   14002264b:	and    ecx,0x1f
   14002264e:	imul   rcx,rcx,0x58
   140022652:	mov    rax,QWORD PTR [r8+rax*8]
   140022656:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002265b:	mov    ecx,DWORD PTR [rsi]
   14002265d:	call   0x140013674
   140022662:	test   edi,edi
   140022664:	je     0x140022669
   140022666:	or     DWORD PTR [rsi],0xffffffff
   140022669:	mov    eax,edi
   14002266b:	mov    rsi,QWORD PTR [rsp+0x60]
   140022670:	add    rsp,0x50
   140022674:	pop    rdi
   140022675:	ret    
   140022676:	int3   
   140022677:	int3   
   140022678:	mov    r11,rsp
   14002267b:	mov    DWORD PTR [r11+0x18],r8d
   14002267f:	mov    QWORD PTR [r11+0x20],r9
   140022683:	push   rbx
   140022684:	sub    rsp,0x40
   140022688:	and    DWORD PTR [rsp+0x28],0x0
   14002268d:	lea    r9,[r11-0x18]
   140022691:	lea    rax,[r11+0x20]
   140022695:	mov    QWORD PTR [r11-0x28],r9
   140022699:	mov    r9d,DWORD PTR [rax]
   14002269c:	or     ebx,0xffffffff
   14002269f:	mov    DWORD PTR [rsp+0x30],ebx
   1400226a3:	call   0x140022540
   1400226a8:	mov    ecx,DWORD PTR [rsp+0x30]
   1400226ac:	test   eax,eax
   1400226ae:	cmovne ecx,ebx
   1400226b1:	mov    eax,ecx
   1400226b3:	add    rsp,0x40
   1400226b7:	pop    rbx
   1400226b8:	ret    
   1400226b9:	int3   
   1400226ba:	int3   
   1400226bb:	int3   
   1400226bc:	sub    rsp,0x38
   1400226c0:	mov    eax,r9d
   1400226c3:	mov    r9d,DWORD PTR [rsp+0x60]
   1400226c8:	mov    r10d,r8d
   1400226cb:	mov    r11,rdx
   1400226ce:	mov    DWORD PTR [rsp+0x28],0x1
   1400226d6:	mov    QWORD PTR [rsp+0x20],rcx
   1400226db:	mov    r8d,eax
   1400226de:	mov    edx,r10d
   1400226e1:	mov    rcx,r11
   1400226e4:	call   0x140022540
   1400226e9:	add    rsp,0x38
   1400226ed:	ret    
   1400226ee:	int3   
   1400226ef:	int3   
   1400226f0:	mov    rax,rsp
   1400226f3:	mov    QWORD PTR [rax+0x8],rbx
   1400226f7:	mov    QWORD PTR [rax+0x10],rbp
   1400226fb:	mov    QWORD PTR [rax+0x18],rsi
   1400226ff:	push   rdi
   140022700:	sub    rsp,0x50
   140022704:	mov    rdi,rcx
   140022707:	mov    rsi,rdx
   14002270a:	lea    rcx,[rax-0x28]
   14002270e:	mov    rdx,r9
   140022711:	mov    rbx,r8
   140022714:	call   0x1400094b4
   140022719:	xor    ebp,ebp
   14002271b:	cmp    rbx,rbp
   14002271e:	jne    0x14002273a
   140022720:	cmp    BYTE PTR [rsp+0x48],bpl
   140022725:	je     0x140022733
   140022727:	mov    rax,QWORD PTR [rsp+0x40]
   14002272c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140022733:	xor    eax,eax
   140022735:	jmp    0x1400228c5
   14002273a:	mov    rcx,QWORD PTR [rsp+0x38]
   14002273f:	cmp    DWORD PTR [rcx+0x8],ebp
   140022742:	jne    0x140022757
   140022744:	mov    r8,rbx
   140022747:	mov    rdx,rsi
   14002274a:	mov    rcx,rdi
   14002274d:	call   0x14002419c
   140022752:	jmp    0x1400228b2
   140022757:	cmp    rdi,rbp
   14002275a:	jne    0x140022798
   14002275c:	call   0x14000f574
   140022761:	xor    r9d,r9d
   140022764:	xor    r8d,r8d
   140022767:	xor    edx,edx
   140022769:	xor    ecx,ecx
   14002276b:	mov    QWORD PTR [rsp+0x20],rbp
   140022770:	mov    DWORD PTR [rax],0x16
   140022776:	call   0x14000e4d8
   14002277b:	cmp    BYTE PTR [rsp+0x48],bpl
   140022780:	je     0x14002278e
   140022782:	mov    rax,QWORD PTR [rsp+0x40]
   140022787:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002278e:	mov    eax,0x7fffffff
   140022793:	jmp    0x1400228c5
   140022798:	cmp    rsi,rbp
   14002279b:	je     0x14002275c
   14002279d:	mov    r9b,0x4
   1400227a0:	movzx  edx,BYTE PTR [rdi]
   1400227a3:	dec    rbx
   1400227a6:	inc    rdi
   1400227a9:	test   BYTE PTR [rdx+rcx*1+0x1d],r9b
   1400227ae:	je     0x140022805
   1400227b0:	cmp    rbx,rbp
   1400227b3:	jne    0x1400227cb
   1400227b5:	movzx  eax,BYTE PTR [rsi]
   1400227b8:	mov    dx,bp
   1400227bb:	test   BYTE PTR [rax+rcx*1+0x1d],r9b
   1400227c0:	jne    0x140022720
   1400227c6:	jmp    0x14002288f
   1400227cb:	cmp    BYTE PTR [rdi],bpl
   1400227ce:	jne    0x1400227d4
   1400227d0:	mov    edx,ebp
   1400227d2:	jmp    0x140022817
   1400227d4:	movzx  eax,BYTE PTR [rdi]
   1400227d7:	shl    dx,0x8
   1400227db:	inc    rdi
   1400227de:	or     dx,ax
   1400227e1:	cmp    dx,WORD PTR [rcx+0x10]
   1400227e5:	jb     0x1400227f3
   1400227e7:	cmp    dx,WORD PTR [rcx+0x12]
   1400227eb:	ja     0x1400227f3
   1400227ed:	add    dx,WORD PTR [rcx+0x14]
   1400227f1:	jmp    0x140022817
   1400227f3:	cmp    dx,WORD PTR [rcx+0x16]
   1400227f7:	jb     0x140022817
   1400227f9:	cmp    dx,WORD PTR [rcx+0x18]
   1400227fd:	ja     0x140022817
   1400227ff:	add    dx,WORD PTR [rcx+0x1a]
   140022803:	jmp    0x140022817
   140022805:	movzx  eax,dx
   140022808:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   14002280d:	je     0x140022817
   14002280f:	movzx  edx,BYTE PTR [rax+rcx*1+0x11d]
   140022817:	movzx  r8d,BYTE PTR [rsi]
   14002281b:	inc    rsi
   14002281e:	mov    rax,r8
   140022821:	test   BYTE PTR [r8+rcx*1+0x1d],r9b
   140022826:	je     0x140022876
   140022828:	cmp    rbx,rbp
   14002282b:	jne    0x140022831
   14002282d:	mov    eax,ebp
   14002282f:	jmp    0x14002288f
   140022831:	dec    rbx
   140022834:	cmp    BYTE PTR [rsi],bpl
   140022837:	jne    0x14002283e
   140022839:	mov    ax,bp
   14002283c:	jmp    0x14002288f
   14002283e:	movzx  eax,BYTE PTR [rsi]
   140022841:	shl    r8w,0x8
   140022846:	inc    rsi
   140022849:	or     r8w,ax
   14002284d:	mov    ax,r8w
   140022851:	cmp    r8w,WORD PTR [rcx+0x10]
   140022856:	jb     0x140022864
   140022858:	cmp    ax,WORD PTR [rcx+0x12]
   14002285c:	ja     0x140022864
   14002285e:	add    ax,WORD PTR [rcx+0x14]
   140022862:	jmp    0x14002288f
   140022864:	cmp    ax,WORD PTR [rcx+0x16]
   140022868:	jb     0x14002288f
   14002286a:	cmp    ax,WORD PTR [rcx+0x18]
   14002286e:	ja     0x14002288f
   140022870:	add    ax,WORD PTR [rcx+0x1a]
   140022874:	jmp    0x14002288f
   140022876:	movzx  eax,r8w
   14002287a:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   14002287f:	je     0x14002288b
   140022881:	movzx  eax,BYTE PTR [rax+rcx*1+0x11d]
   140022889:	jmp    0x14002288f
   14002288b:	mov    ax,r8w
   14002288f:	cmp    ax,dx
   140022892:	jne    0x1400228ab
   140022894:	cmp    dx,bp
   140022897:	je     0x140022720
   14002289d:	cmp    rbx,rbp
   1400228a0:	jne    0x1400227a0
   1400228a6:	jmp    0x140022720
   1400228ab:	sbb    eax,eax
   1400228ad:	and    eax,0x2
   1400228b0:	dec    eax
   1400228b2:	cmp    BYTE PTR [rsp+0x48],bpl
   1400228b7:	je     0x1400228c5
   1400228b9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400228be:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400228c5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400228ca:	mov    rbp,QWORD PTR [rsp+0x68]
   1400228cf:	mov    rsi,QWORD PTR [rsp+0x70]
   1400228d4:	add    rsp,0x50
   1400228d8:	pop    rdi
   1400228d9:	ret    
   1400228da:	int3   
   1400228db:	int3   
   1400228dc:	xor    r9d,r9d
   1400228df:	jmp    0x1400226f0
   1400228e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400228e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400228ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400228f3:	push   rdi
   1400228f4:	sub    rsp,0x50
   1400228f8:	xor    ebp,ebp
   1400228fa:	mov    rbx,r8
   1400228fd:	mov    rsi,rdx
   140022900:	mov    rdi,rcx
   140022903:	cmp    r8,rbp
   140022906:	jne    0x14002290f
   140022908:	xor    eax,eax
   14002290a:	jmp    0x140022a35
   14002290f:	lea    rcx,[rsp+0x30]
   140022914:	mov    rdx,r9
   140022917:	call   0x1400094b4
   14002291c:	mov    r11,QWORD PTR [rsp+0x38]
   140022921:	cmp    DWORD PTR [r11+0x8],ebp
   140022925:	jne    0x14002293a
   140022927:	mov    r8,rbx
   14002292a:	mov    rdx,rsi
   14002292d:	mov    rcx,rdi
   140022930:	call   0x14000da20
   140022935:	jmp    0x140022a22
   14002293a:	cmp    rdi,rbp
   14002293d:	jne    0x14002297b
   14002293f:	call   0x14000f574
   140022944:	xor    r9d,r9d
   140022947:	xor    r8d,r8d
   14002294a:	xor    edx,edx
   14002294c:	xor    ecx,ecx
   14002294e:	mov    QWORD PTR [rsp+0x20],rbp
   140022953:	mov    DWORD PTR [rax],0x16
   140022959:	call   0x14000e4d8
   14002295e:	cmp    BYTE PTR [rsp+0x48],bpl
   140022963:	je     0x140022971
   140022965:	mov    rax,QWORD PTR [rsp+0x40]
   14002296a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140022971:	mov    eax,0x7fffffff
   140022976:	jmp    0x140022a35
   14002297b:	cmp    rsi,rbp
   14002297e:	je     0x14002293f
   140022980:	mov    r8b,0x4
   140022983:	movzx  ecx,BYTE PTR [rdi]
   140022986:	dec    rbx
   140022989:	inc    rdi
   14002298c:	test   BYTE PTR [rcx+r11*1+0x1d],r8b
   140022991:	je     0x1400229c0
   140022993:	cmp    rbx,rbp
   140022996:	jne    0x1400229a9
   140022998:	movzx  eax,BYTE PTR [rsi]
   14002299b:	mov    ecx,ebp
   14002299d:	test   BYTE PTR [rax+r11*1+0x1d],r8b
   1400229a2:	jne    0x1400229ff
   1400229a4:	mov    dx,ax
   1400229a7:	jmp    0x1400229f0
   1400229a9:	cmp    BYTE PTR [rdi],bpl
   1400229ac:	jne    0x1400229b3
   1400229ae:	mov    cx,bp
   1400229b1:	jmp    0x1400229c0
   1400229b3:	movzx  eax,BYTE PTR [rdi]
   1400229b6:	shl    cx,0x8
   1400229ba:	or     cx,ax
   1400229bd:	inc    rdi
   1400229c0:	movzx  edx,BYTE PTR [rsi]
   1400229c3:	inc    rsi
   1400229c6:	test   BYTE PTR [rdx+r11*1+0x1d],r8b
   1400229cb:	je     0x1400229f0
   1400229cd:	cmp    rbx,rbp
   1400229d0:	jne    0x1400229d6
   1400229d2:	mov    edx,ebp
   1400229d4:	jmp    0x1400229f0
   1400229d6:	dec    rbx
   1400229d9:	cmp    BYTE PTR [rsi],bpl
   1400229dc:	jne    0x1400229e3
   1400229de:	mov    dx,bp
   1400229e1:	jmp    0x1400229f0
   1400229e3:	movzx  eax,BYTE PTR [rsi]
   1400229e6:	shl    dx,0x8
   1400229ea:	or     dx,ax
   1400229ed:	inc    rsi
   1400229f0:	cmp    dx,cx
   1400229f3:	jne    0x140022a1b
   1400229f5:	cmp    cx,bp
   1400229f8:	je     0x1400229ff
   1400229fa:	cmp    rbx,rbp
   1400229fd:	jne    0x140022983
   1400229ff:	cmp    BYTE PTR [rsp+0x48],bpl
   140022a04:	je     0x140022908
   140022a0a:	mov    rax,QWORD PTR [rsp+0x40]
   140022a0f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140022a16:	jmp    0x140022908
   140022a1b:	sbb    eax,eax
   140022a1d:	and    eax,0x2
   140022a20:	dec    eax
   140022a22:	cmp    BYTE PTR [rsp+0x48],bpl
   140022a27:	je     0x140022a35
   140022a29:	mov    rcx,QWORD PTR [rsp+0x40]
   140022a2e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140022a35:	mov    rbx,QWORD PTR [rsp+0x60]
   140022a3a:	mov    rbp,QWORD PTR [rsp+0x68]
   140022a3f:	mov    rsi,QWORD PTR [rsp+0x70]
   140022a44:	add    rsp,0x50
   140022a48:	pop    rdi
   140022a49:	ret    
   140022a4a:	int3   
   140022a4b:	int3   
   140022a4c:	xor    r9d,r9d
   140022a4f:	jmp    0x1400228e4
   140022a54:	mov    QWORD PTR [rsp+0x10],rdx
   140022a59:	mov    DWORD PTR [rsp+0x8],ecx
   140022a5d:	push   rbx
   140022a5e:	push   rbp
   140022a5f:	push   rsi
   140022a60:	push   rdi
   140022a61:	push   r12
   140022a63:	push   r13
   140022a65:	push   r14
   140022a67:	push   r15
   140022a69:	sub    rsp,0x58
   140022a6d:	mov    r12d,0xfffffffe
   140022a73:	movsxd rax,ecx
   140022a76:	mov    ebx,r8d
   140022a79:	mov    DWORD PTR [rsp+0x34],r12d
   140022a7e:	mov    DWORD PTR [rsp+0x38],ebx
   140022a82:	cmp    eax,r12d
   140022a85:	jne    0x140022aa0
   140022a87:	call   0x14000f594
   140022a8c:	xor    edi,edi
   140022a8e:	mov    DWORD PTR [rax],edi
   140022a90:	call   0x14000f574
   140022a95:	mov    DWORD PTR [rax],0x9
   140022a9b:	jmp    0x1400231bf
   140022aa0:	xor    edi,edi
   140022aa2:	cmp    eax,edi
   140022aa4:	jl     0x140023199
   140022aaa:	cmp    eax,DWORD PTR [rip+0x1529c]        # 0x140037d4c
   140022ab0:	jae    0x140023199
   140022ab6:	mov    rsi,rax
   140022ab9:	mov    r14,rax
   140022abc:	lea    r9,[rip+0xfffffffffffdd53d]        # 0x140000000
   140022ac3:	sar    r14,0x5
   140022ac7:	and    esi,0x1f
   140022aca:	mov    rcx,QWORD PTR [r9+r14*8+0x37d60]
   140022ad2:	imul   rsi,rsi,0x58
   140022ad6:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   140022ada:	test   al,0x1
   140022adc:	je     0x140023199
   140022ae2:	cmp    ebx,0x7fffffff
   140022ae8:	jbe    0x140022b01
   140022aea:	call   0x14000f594
   140022aef:	mov    DWORD PTR [rax],edi
   140022af1:	call   0x14000f574
   140022af6:	mov    DWORD PTR [rax],0x16
   140022afc:	jmp    0x1400231ab
   140022b01:	mov    ebp,edi
   140022b03:	cmp    ebx,edi
   140022b05:	je     0x140023195
   140022b0b:	test   al,0x2
   140022b0d:	jne    0x140023195
   140022b13:	cmp    rdx,rdi
   140022b16:	je     0x140022aea
   140022b18:	mov    r15b,BYTE PTR [rcx+rsi*1+0x38]
   140022b1d:	mov    r8d,0x4
   140022b23:	add    r15b,r15b
   140022b26:	sar    r15b,1
   140022b29:	movsx  ecx,r15b
   140022b2d:	sub    ecx,0x1
   140022b30:	je     0x140022b47
   140022b32:	sub    ecx,0x1
   140022b35:	jne    0x140022b42
   140022b37:	mov    eax,ebx
   140022b39:	not    eax
   140022b3b:	test   al,0x1
   140022b3d:	je     0x140022aea
   140022b3f:	and    ebx,0xfffffffe
   140022b42:	mov    r13,rdx
   140022b45:	jmp    0x140022bab
   140022b47:	mov    eax,ebx
   140022b49:	not    eax
   140022b4b:	test   al,0x1
   140022b4d:	je     0x140022aea
   140022b4f:	shr    ebx,1
   140022b51:	cmp    ebx,r8d
   140022b54:	cmovb  ebx,r8d
   140022b58:	mov    ecx,ebx
   140022b5a:	call   0x140012c00
   140022b5f:	mov    r13,rax
   140022b62:	cmp    rax,rdi
   140022b65:	jne    0x140022b82
   140022b67:	call   0x14000f574
   140022b6c:	mov    DWORD PTR [rax],0xc
   140022b72:	call   0x14000f594
   140022b77:	mov    DWORD PTR [rax],0x8
   140022b7d:	jmp    0x1400231bf
   140022b82:	mov    ecx,DWORD PTR [rsp+0xa0]
   140022b89:	xor    edx,edx
   140022b8b:	lea    r8d,[rdx+0x1]
   140022b8f:	call   0x140021240
   140022b94:	lea    r9,[rip+0xfffffffffffdd465]        # 0x140000000
   140022b9b:	mov    r11,rax
   140022b9e:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022ba6:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140022bab:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022bb3:	mov    rdx,r13
   140022bb6:	mov    r8d,0xa
   140022bbc:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140022bc1:	je     0x140022c63
   140022bc7:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140022bcb:	cmp    cl,r8b
   140022bce:	je     0x140022c63
   140022bd4:	cmp    ebx,edi
   140022bd6:	je     0x140022c63
   140022bdc:	mov    BYTE PTR [r13+0x0],cl
   140022be0:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022be8:	or     r10d,0xffffffff
   140022bec:	add    ebx,r10d
   140022bef:	lea    rdx,[r13+0x1]
   140022bf3:	lea    ebp,[r8-0x9]
   140022bf7:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140022bfc:	cmp    r15b,dil
   140022bff:	je     0x140022c63
   140022c01:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022c09:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140022c0d:	cmp    cl,r8b
   140022c10:	je     0x140022c63
   140022c12:	cmp    ebx,edi
   140022c14:	je     0x140022c63
   140022c16:	mov    BYTE PTR [rdx],cl
   140022c18:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022c20:	add    ebx,r10d
   140022c23:	inc    rdx
   140022c26:	lea    ebp,[r8-0x8]
   140022c2a:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   140022c2f:	cmp    r15b,0x1
   140022c33:	jne    0x140022c63
   140022c35:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022c3d:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140022c41:	cmp    cl,r8b
   140022c44:	je     0x140022c63
   140022c46:	cmp    ebx,edi
   140022c48:	je     0x140022c63
   140022c4a:	mov    BYTE PTR [rdx],cl
   140022c4c:	mov    rax,QWORD PTR [r9+r14*8+0x37d60]
   140022c54:	inc    rdx
   140022c57:	lea    ebp,[r8-0x7]
   140022c5b:	add    ebx,r10d
   140022c5e:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   140022c63:	mov    rcx,QWORD PTR [r9+r14*8+0x37d60]
   140022c6b:	lea    r9,[rsp+0x30]
   140022c70:	mov    r8d,ebx
   140022c73:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140022c77:	mov    QWORD PTR [rsp+0x20],rdi
   140022c7c:	call   QWORD PTR [rip+0x45a6]        # 0x140027228
   140022c82:	cmp    eax,edi
   140022c84:	je     0x140023159
   140022c8a:	movsxd rdx,DWORD PTR [rsp+0x30]
   140022c8f:	cmp    edx,edi
   140022c91:	jl     0x140023159
   140022c97:	mov    eax,ebx
   140022c99:	cmp    rdx,rax
   140022c9c:	ja     0x140023159
   140022ca2:	lea    r8,[rip+0xfffffffffffdd357]        # 0x140000000
   140022ca9:	add    ebp,edx
   140022cab:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   140022cb3:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   140022cb8:	je     0x140023137
   140022cbe:	cmp    r15b,0x2
   140022cc2:	je     0x140022f80
   140022cc8:	cmp    edx,edi
   140022cca:	je     0x140022cda
   140022ccc:	cmp    BYTE PTR [r13+0x0],0xa
   140022cd1:	jne    0x140022cda
   140022cd3:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   140022cd8:	jmp    0x140022cdf
   140022cda:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140022cdf:	movsxd rax,ebp
   140022ce2:	mov    rbx,r13
   140022ce5:	mov    r12,r13
   140022ce8:	add    rax,r13
   140022ceb:	mov    QWORD PTR [rsp+0x40],rax
   140022cf0:	cmp    r13,rax
   140022cf3:	jae    0x140022e33
   140022cf9:	mov    ebp,0xd
   140022cfe:	mov    al,BYTE PTR [r12]
   140022d02:	cmp    al,0x1a
   140022d04:	je     0x140022e14
   140022d0a:	cmp    al,bpl
   140022d0d:	je     0x140022d1c
   140022d0f:	mov    BYTE PTR [rbx],al
   140022d11:	inc    rbx
   140022d14:	inc    r12
   140022d17:	jmp    0x140022e07
   140022d1c:	mov    rax,QWORD PTR [rsp+0x40]
   140022d21:	dec    rax
   140022d24:	cmp    r12,rax
   140022d27:	jae    0x140022d44
   140022d29:	lea    rax,[r12+0x1]
   140022d2e:	cmp    BYTE PTR [rax],0xa
   140022d31:	jne    0x140022d3c
   140022d33:	add    r12,0x2
   140022d37:	jmp    0x140022dcc
   140022d3c:	mov    r12,rax
   140022d3f:	jmp    0x140022e01
   140022d44:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140022d4c:	lea    r9,[rsp+0x30]
   140022d51:	lea    rdx,[rsp+0xb0]
   140022d59:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140022d5d:	mov    r8d,0x1
   140022d63:	inc    r12
   140022d66:	mov    QWORD PTR [rsp+0x20],rdi
   140022d6b:	call   QWORD PTR [rip+0x44b7]        # 0x140027228
   140022d71:	cmp    eax,edi
   140022d73:	jne    0x140022d7f
   140022d75:	call   QWORD PTR [rip+0x44f5]        # 0x140027270
   140022d7b:	cmp    eax,edi
   140022d7d:	jne    0x140022dfa
   140022d7f:	cmp    DWORD PTR [rsp+0x30],edi
   140022d83:	je     0x140022dfa
   140022d85:	lea    r8,[rip+0xfffffffffffdd274]        # 0x140000000
   140022d8c:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   140022d94:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140022d99:	je     0x140022dbd
   140022d9b:	cmp    BYTE PTR [rsp+0xb0],0xa
   140022da3:	je     0x140022dcc
   140022da5:	mov    BYTE PTR [rbx],bpl
   140022da8:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140022db0:	mov    al,BYTE PTR [rsp+0xb0]
   140022db7:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140022dbb:	jmp    0x140022e04
   140022dbd:	cmp    rbx,r13
   140022dc0:	jne    0x140022dd1
   140022dc2:	cmp    BYTE PTR [rsp+0xb0],0xa
   140022dca:	jne    0x140022dd1
   140022dcc:	mov    BYTE PTR [rbx],0xa
   140022dcf:	jmp    0x140022e04
   140022dd1:	mov    ecx,DWORD PTR [rsp+0xa0]
   140022dd8:	mov    r8d,0x1
   140022dde:	or     rdx,0xffffffffffffffff
   140022de2:	call   0x140021240
   140022de7:	cmp    BYTE PTR [rsp+0xb0],0xa
   140022def:	lea    r8,[rip+0xfffffffffffdd20a]        # 0x140000000
   140022df6:	je     0x140022e07
   140022df8:	jmp    0x140022e01
   140022dfa:	lea    r8,[rip+0xfffffffffffdd1ff]        # 0x140000000
   140022e01:	mov    BYTE PTR [rbx],bpl
   140022e04:	inc    rbx
   140022e07:	cmp    r12,QWORD PTR [rsp+0x40]
   140022e0c:	jb     0x140022cfe
   140022e12:	jmp    0x140022e33
   140022e14:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   140022e1c:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140022e21:	jne    0x140022e2a
   140022e23:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140022e28:	jmp    0x140022e33
   140022e2a:	mov    al,BYTE PTR [r12]
   140022e2e:	mov    BYTE PTR [rbx],al
   140022e30:	inc    rbx
   140022e33:	mov    ebp,ebx
   140022e35:	sub    ebp,r13d
   140022e38:	cmp    r15b,0x1
   140022e3c:	jne    0x140023132
   140022e42:	cmp    ebp,edi
   140022e44:	je     0x140023132
   140022e4a:	mov    r15d,0x1
   140022e50:	sub    rbx,r15
   140022e53:	test   BYTE PTR [rbx],0x80
   140022e56:	jne    0x140022e60
   140022e58:	add    rbx,r15
   140022e5b:	jmp    0x140022f12
   140022e60:	mov    edx,r15d
   140022e63:	jmp    0x140022e75
   140022e65:	cmp    edx,0x4
   140022e68:	jg     0x140022e82
   140022e6a:	cmp    rbx,r13
   140022e6d:	jb     0x140022e82
   140022e6f:	sub    rbx,r15
   140022e72:	add    edx,r15d
   140022e75:	movzx  eax,BYTE PTR [rbx]
   140022e78:	cmp    BYTE PTR [rax+r8*1+0x356a0],dil
   140022e80:	je     0x140022e65
   140022e82:	movzx  ecx,BYTE PTR [rbx]
   140022e85:	movsx  eax,BYTE PTR [rcx+r8*1+0x356a0]
   140022e8e:	cmp    eax,edi
   140022e90:	jne    0x140022ea6
   140022e92:	call   0x14000f574
   140022e97:	mov    DWORD PTR [rax],0x2a
   140022e9d:	or     r12d,0xffffffff
   140022ea1:	jmp    0x140023137
   140022ea6:	inc    eax
   140022ea8:	cmp    eax,edx
   140022eaa:	jne    0x140022eb4
   140022eac:	movsxd rax,edx
   140022eaf:	add    rbx,rax
   140022eb2:	jmp    0x140022f12
   140022eb4:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   140022ebc:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140022ec1:	je     0x140022efe
   140022ec3:	add    rbx,r15
   140022ec6:	cmp    edx,0x2
   140022ec9:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   140022ecd:	jl     0x140022ee0
   140022ecf:	mov    al,BYTE PTR [rbx]
   140022ed1:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140022ed9:	add    rbx,r15
   140022edc:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140022ee0:	cmp    edx,0x3
   140022ee3:	jne    0x140022ef6
   140022ee5:	mov    al,BYTE PTR [rbx]
   140022ee7:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140022eef:	add    rbx,r15
   140022ef2:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   140022ef6:	movsxd rax,edx
   140022ef9:	sub    rbx,rax
   140022efc:	jmp    0x140022f12
   140022efe:	mov    ecx,DWORD PTR [rsp+0xa0]
   140022f05:	neg    edx
   140022f07:	mov    r8d,r15d
   140022f0a:	movsxd rdx,edx
   140022f0d:	call   0x140021240
   140022f12:	mov    eax,DWORD PTR [rsp+0x38]
   140022f16:	mov    r15,QWORD PTR [rsp+0xa8]
   140022f1e:	sub    ebx,r13d
   140022f21:	shr    eax,1
   140022f23:	mov    r9d,ebx
   140022f26:	mov    r8,r13
   140022f29:	mov    DWORD PTR [rsp+0x28],eax
   140022f2d:	xor    edx,edx
   140022f2f:	mov    ecx,0xfde9
   140022f34:	mov    QWORD PTR [rsp+0x20],r15
   140022f39:	call   QWORD PTR [rip+0x42f9]        # 0x140027238
   140022f3f:	mov    ebp,eax
   140022f41:	cmp    eax,edi
   140022f43:	jne    0x140022f5b
   140022f45:	call   QWORD PTR [rip+0x4325]        # 0x140027270
   140022f4b:	mov    ecx,eax
   140022f4d:	call   0x14000f5b4
   140022f52:	or     r12d,0xffffffff
   140022f56:	jmp    0x14002313f
   140022f5b:	mov    r12d,DWORD PTR [rsp+0x34]
   140022f60:	cmp    eax,ebx
   140022f62:	lea    rax,[rip+0xfffffffffffdd097]        # 0x140000000
   140022f69:	mov    rax,QWORD PTR [rax+r14*8+0x37d60]
   140022f71:	setne  dil
   140022f75:	add    ebp,ebp
   140022f77:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140022f7b:	jmp    0x14002313f
   140022f80:	cmp    edx,edi
   140022f82:	mov    edx,0xa
   140022f87:	je     0x140022f97
   140022f89:	cmp    WORD PTR [r13+0x0],dx
   140022f8e:	jne    0x140022f97
   140022f90:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   140022f95:	jmp    0x140022f9c
   140022f97:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140022f9c:	movsxd rax,ebp
   140022f9f:	mov    rbx,r13
   140022fa2:	mov    r12,r13
   140022fa5:	lea    r15,[rax+r13*1]
   140022fa9:	cmp    r13,r15
   140022fac:	jae    0x14002312d
   140022fb2:	mov    ebp,0xd
   140022fb7:	movzx  eax,WORD PTR [r12]
   140022fbc:	cmp    ax,0x1a
   140022fc0:	je     0x14002310b
   140022fc6:	cmp    ax,bp
   140022fc9:	je     0x140022fdb
   140022fcb:	mov    WORD PTR [rbx],ax
   140022fce:	add    rbx,0x2
   140022fd2:	add    r12,0x2
   140022fd6:	jmp    0x140023100
   140022fdb:	lea    rax,[r15-0x2]
   140022fdf:	cmp    r12,rax
   140022fe2:	jae    0x140022fff
   140022fe4:	lea    rax,[r12+0x2]
   140022fe9:	cmp    WORD PTR [rax],dx
   140022fec:	jne    0x140022ff7
   140022fee:	add    r12,0x4
   140022ff2:	jmp    0x1400230b9
   140022ff7:	mov    r12,rax
   140022ffa:	jmp    0x1400230f9
   140022fff:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140023007:	lea    r9,[rsp+0x30]
   14002300c:	lea    rdx,[rsp+0xb8]
   140023014:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140023018:	mov    r8d,0x2
   14002301e:	add    r12,0x2
   140023022:	mov    QWORD PTR [rsp+0x20],rdi
   140023027:	call   QWORD PTR [rip+0x41fb]        # 0x140027228
   14002302d:	cmp    eax,edi
   14002302f:	jne    0x14002303f
   140023031:	call   QWORD PTR [rip+0x4239]        # 0x140027270
   140023037:	cmp    eax,edi
   140023039:	jne    0x1400230ed
   14002303f:	cmp    DWORD PTR [rsp+0x30],edi
   140023043:	je     0x1400230ed
   140023049:	lea    r8,[rip+0xfffffffffffdcfb0]        # 0x140000000
   140023050:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   140023058:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002305d:	je     0x1400230a5
   14002305f:	mov    edx,0xa
   140023064:	cmp    WORD PTR [rsp+0xb8],dx
   14002306c:	je     0x1400230b9
   14002306e:	mov    WORD PTR [rbx],bp
   140023071:	mov    al,BYTE PTR [rsp+0xb8]
   140023078:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140023080:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140023084:	mov    al,BYTE PTR [rsp+0xb9]
   14002308b:	mov    rcx,QWORD PTR [r8+r14*8+0x37d60]
   140023093:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140023097:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   14002309f:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   1400230a3:	jmp    0x1400230fc
   1400230a5:	cmp    rbx,r13
   1400230a8:	jne    0x1400230be
   1400230aa:	mov    edx,0xa
   1400230af:	cmp    WORD PTR [rsp+0xb8],dx
   1400230b7:	jne    0x1400230be
   1400230b9:	mov    WORD PTR [rbx],dx
   1400230bc:	jmp    0x1400230fc
   1400230be:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400230c5:	mov    rdx,0xfffffffffffffffe
   1400230cc:	lea    r8d,[rdx+0x3]
   1400230d0:	call   0x140021240
   1400230d5:	mov    edx,0xa
   1400230da:	lea    r8,[rip+0xfffffffffffdcf1f]        # 0x140000000
   1400230e1:	cmp    WORD PTR [rsp+0xb8],dx
   1400230e9:	je     0x140023100
   1400230eb:	jmp    0x1400230f9
   1400230ed:	mov    edx,0xa
   1400230f2:	lea    r8,[rip+0xfffffffffffdcf07]        # 0x140000000
   1400230f9:	mov    WORD PTR [rbx],bp
   1400230fc:	add    rbx,0x2
   140023100:	cmp    r12,r15
   140023103:	jb     0x140022fb7
   140023109:	jmp    0x14002312d
   14002310b:	mov    rax,QWORD PTR [r8+r14*8+0x37d60]
   140023113:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140023118:	jne    0x140023121
   14002311a:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14002311f:	jmp    0x14002312d
   140023121:	movzx  eax,WORD PTR [r12]
   140023126:	mov    WORD PTR [rbx],ax
   140023129:	add    rbx,0x2
   14002312d:	mov    ebp,ebx
   14002312f:	sub    ebp,r13d
   140023132:	mov    r12d,DWORD PTR [rsp+0x34]
   140023137:	mov    r15,QWORD PTR [rsp+0xa8]
   14002313f:	cmp    r13,r15
   140023142:	je     0x14002314c
   140023144:	mov    rcx,r13
   140023147:	call   0x1400098ac
   14002314c:	cmp    r12d,0xfffffffe
   140023150:	cmove  r12d,ebp
   140023154:	mov    eax,r12d
   140023157:	jmp    0x1400231c2
   140023159:	call   QWORD PTR [rip+0x4111]        # 0x140027270
   14002315f:	cmp    eax,0x5
   140023162:	jne    0x14002317f
   140023164:	call   0x14000f574
   140023169:	mov    DWORD PTR [rax],0x9
   14002316f:	call   0x14000f594
   140023174:	mov    DWORD PTR [rax],0x5
   14002317a:	jmp    0x140022e9d
   14002317f:	cmp    eax,0x6d
   140023182:	jne    0x140023189
   140023184:	mov    r12d,edi
   140023187:	jmp    0x140023137
   140023189:	mov    ecx,eax
   14002318b:	call   0x14000f5b4
   140023190:	jmp    0x140022e9d
   140023195:	xor    eax,eax
   140023197:	jmp    0x1400231c2
   140023199:	call   0x14000f594
   14002319e:	mov    DWORD PTR [rax],edi
   1400231a0:	call   0x14000f574
   1400231a5:	mov    DWORD PTR [rax],0x9
   1400231ab:	xor    r9d,r9d
   1400231ae:	xor    r8d,r8d
   1400231b1:	xor    edx,edx
   1400231b3:	xor    ecx,ecx
   1400231b5:	mov    QWORD PTR [rsp+0x20],rdi
   1400231ba:	call   0x14000e4d8
   1400231bf:	or     eax,0xffffffff
   1400231c2:	add    rsp,0x58
   1400231c6:	pop    r15
   1400231c8:	pop    r14
   1400231ca:	pop    r13
   1400231cc:	pop    r12
   1400231ce:	pop    rdi
   1400231cf:	pop    rsi
   1400231d0:	pop    rbp
   1400231d1:	pop    rbx
   1400231d2:	ret    
   1400231d3:	int3   
   1400231d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400231d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400231de:	mov    DWORD PTR [rsp+0x8],ecx
   1400231e2:	push   rdi
   1400231e3:	push   r12
   1400231e5:	push   r13
   1400231e7:	push   r14
   1400231e9:	push   r15
   1400231eb:	sub    rsp,0x30
   1400231ef:	mov    esi,r8d
   1400231f2:	mov    r13,rdx
   1400231f5:	movsxd rdi,ecx
   1400231f8:	cmp    edi,0xfffffffe
   1400231fb:	jne    0x140023219
   1400231fd:	call   0x14000f594
   140023202:	xor    ebx,ebx
   140023204:	mov    DWORD PTR [rax],ebx
   140023206:	call   0x14000f574
   14002320b:	mov    DWORD PTR [rax],0x9
   140023211:	or     eax,0xffffffff
   140023214:	jmp    0x14002332e
   140023219:	xor    ebx,ebx
   14002321b:	cmp    edi,ebx
   14002321d:	jl     0x140023305
   140023223:	cmp    edi,DWORD PTR [rip+0x14b23]        # 0x140037d4c
   140023229:	jae    0x140023305
   14002322f:	mov    r12,rdi
   140023232:	mov    r14,rdi
   140023235:	sar    r14,0x5
   140023239:	lea    r15,[rip+0x14b20]        # 0x140037d60
   140023240:	and    r12d,0x1f
   140023244:	imul   r12,r12,0x58
   140023248:	mov    rax,QWORD PTR [r15+r14*8]
   14002324c:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140023252:	and    ecx,0x1
   140023255:	jne    0x140023285
   140023257:	call   0x14000f594
   14002325c:	mov    DWORD PTR [rax],ebx
   14002325e:	call   0x14000f574
   140023263:	mov    DWORD PTR [rax],0x9
   140023269:	mov    QWORD PTR [rsp+0x20],rbx
   14002326e:	xor    r9d,r9d
   140023271:	xor    r8d,r8d
   140023274:	xor    edx,edx
   140023276:	xor    ecx,ecx
   140023278:	call   0x14000e4d8
   14002327d:	or     eax,0xffffffff
   140023280:	jmp    0x14002332e
   140023285:	mov    eax,ebx
   140023287:	cmp    r8d,0x7fffffff
   14002328e:	setbe  al
   140023291:	cmp    eax,ebx
   140023293:	jne    0x1400232c0
   140023295:	call   0x14000f594
   14002329a:	mov    DWORD PTR [rax],ebx
   14002329c:	call   0x14000f574
   1400232a1:	mov    DWORD PTR [rax],0x16
   1400232a7:	mov    QWORD PTR [rsp+0x20],rbx
   1400232ac:	xor    r9d,r9d
   1400232af:	xor    r8d,r8d
   1400232b2:	xor    edx,edx
   1400232b4:	xor    ecx,ecx
   1400232b6:	call   0x14000e4d8
   1400232bb:	or     eax,0xffffffff
   1400232be:	jmp    0x14002332e
   1400232c0:	mov    ecx,edi
   1400232c2:	call   0x1400135cc
   1400232c7:	nop
   1400232c8:	mov    rax,QWORD PTR [r15+r14*8]
   1400232cc:	test   BYTE PTR [rax+r12*1+0x8],0x1
   1400232d2:	je     0x1400232e5
   1400232d4:	mov    r8d,esi
   1400232d7:	mov    rdx,r13
   1400232da:	mov    ecx,edi
   1400232dc:	call   0x140022a54
   1400232e1:	mov    ebx,eax
   1400232e3:	jmp    0x1400232fa
   1400232e5:	call   0x14000f574
   1400232ea:	mov    DWORD PTR [rax],0x9
   1400232f0:	call   0x14000f594
   1400232f5:	mov    DWORD PTR [rax],ebx
   1400232f7:	or     ebx,0xffffffff
   1400232fa:	mov    ecx,edi
   1400232fc:	call   0x140013674
   140023301:	mov    eax,ebx
   140023303:	jmp    0x14002332e
   140023305:	call   0x14000f594
   14002330a:	mov    DWORD PTR [rax],ebx
   14002330c:	call   0x14000f574
   140023311:	mov    DWORD PTR [rax],0x9
   140023317:	mov    QWORD PTR [rsp+0x20],rbx
   14002331c:	xor    r9d,r9d
   14002331f:	xor    r8d,r8d
   140023322:	xor    edx,edx
   140023324:	xor    ecx,ecx
   140023326:	call   0x14000e4d8
   14002332b:	or     eax,0xffffffff
   14002332e:	mov    rbx,QWORD PTR [rsp+0x68]
   140023333:	mov    rsi,QWORD PTR [rsp+0x70]
   140023338:	add    rsp,0x30
   14002333c:	pop    r15
   14002333e:	pop    r14
   140023340:	pop    r13
   140023342:	pop    r12
   140023344:	pop    rdi
   140023345:	ret    
   140023346:	int3   
   140023347:	int3   
   140023348:	sub    rsp,0x38
   14002334c:	test   rcx,rcx
   14002334f:	jne    0x140023377
   140023351:	call   0x14000f574
   140023356:	and    QWORD PTR [rsp+0x20],0x0
   14002335c:	xor    r9d,r9d
   14002335f:	xor    r8d,r8d
   140023362:	xor    edx,edx
   140023364:	xor    ecx,ecx
   140023366:	mov    DWORD PTR [rax],0x16
   14002336c:	call   0x14000e4d8
   140023371:	or     rax,0xffffffffffffffff
   140023375:	jmp    0x140023389
   140023377:	mov    r8,rcx
   14002337a:	mov    rcx,QWORD PTR [rip+0x12c67]        # 0x140035fe8
   140023381:	xor    edx,edx
   140023383:	call   QWORD PTR [rip+0x3ddf]        # 0x140027168
   140023389:	add    rsp,0x38
   14002338d:	ret    
   14002338e:	int3   
   14002338f:	int3   
   140023390:	mov    ecx,0x2
   140023395:	jmp    0x14000db1c
   14002339a:	int3   
   14002339b:	int3   
   14002339c:	sub    rsp,0x5a8
   1400233a3:	test   BYTE PTR [rip+0x123f6],0x1        # 0x1400357a0
   1400233aa:	je     0x1400233b6
   1400233ac:	mov    ecx,0xa
   1400233b1:	call   0x140011cc0
   1400233b6:	call   0x140019c1c
   1400233bb:	test   rax,rax
   1400233be:	je     0x1400233ca
   1400233c0:	mov    ecx,0x16
   1400233c5:	call   0x140019f1c
   1400233ca:	test   BYTE PTR [rip+0x123cf],0x2        # 0x1400357a0
   1400233d1:	je     0x140023432
   1400233d3:	lea    rcx,[rsp+0xd0]
   1400233db:	call   QWORD PTR [rip+0x3fc7]        # 0x1400273a8
   1400233e1:	lea    rcx,[rsp+0x30]
   1400233e6:	xor    edx,edx
   1400233e8:	mov    r8d,0x98
   1400233ee:	call   0x140008a00
   1400233f3:	mov    rax,QWORD PTR [rsp+0x5a8]
   1400233fb:	xor    ecx,ecx
   1400233fd:	mov    QWORD PTR [rsp+0x40],rax
   140023402:	lea    rax,[rsp+0x30]
   140023407:	mov    DWORD PTR [rsp+0x30],0x40000015
   14002340f:	mov    QWORD PTR [rsp+0x20],rax
   140023414:	lea    rax,[rsp+0xd0]
   14002341c:	mov    QWORD PTR [rsp+0x28],rax
   140023421:	call   QWORD PTR [rip+0x3f61]        # 0x140027388
   140023427:	lea    rcx,[rsp+0x20]
   14002342c:	call   QWORD PTR [rip+0x3f4e]        # 0x140027380
   140023432:	mov    ecx,0x3
   140023437:	call   0x14000df00
   14002343c:	int3   
   14002343d:	int3   
   14002343e:	int3   
   14002343f:	int3   
   140023440:	mov    eax,DWORD PTR [rip+0x1235a]        # 0x1400357a0
   140023446:	mov    r8d,edx
   140023449:	and    ecx,edx
   14002344b:	not    r8d
   14002344e:	and    r8d,eax
   140023451:	or     r8d,ecx
   140023454:	mov    DWORD PTR [rip+0x12345],r8d        # 0x1400357a0
   14002345b:	ret    
   14002345c:	mov    rax,r9
   14002345f:	mov    r9d,DWORD PTR [rsp+0x28]
   140023464:	mov    r10d,r8d
   140023467:	mov    ecx,edx
   140023469:	mov    r8,rax
   14002346c:	mov    edx,r10d
   14002346f:	rex.W jmp QWORD PTR [rip+0x3de2]        # 0x140027258
   140023476:	int3   
   140023477:	int3   
   140023478:	mov    QWORD PTR [rsp+0x8],rbx
   14002347d:	mov    QWORD PTR [rsp+0x10],rsi
   140023482:	push   rdi
   140023483:	sub    rsp,0x40
   140023487:	mov    esi,edx
   140023489:	mov    rdx,rcx
   14002348c:	lea    rcx,[rsp+0x20]
   140023491:	mov    rbx,r9
   140023494:	mov    edi,r8d
   140023497:	call   0x1400094b4
   14002349c:	mov    r9d,DWORD PTR [rsp+0x70]
   1400234a1:	mov    r8,rbx
   1400234a4:	mov    edx,edi
   1400234a6:	mov    ecx,esi
   1400234a8:	call   QWORD PTR [rip+0x3daa]        # 0x140027258
   1400234ae:	cmp    BYTE PTR [rsp+0x38],0x0
   1400234b3:	je     0x1400234c1
   1400234b5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400234ba:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400234c1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400234c6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400234cb:	add    rsp,0x40
   1400234cf:	pop    rdi
   1400234d0:	ret    
   1400234d1:	int3   
   1400234d2:	int3   
   1400234d3:	int3   
   1400234d4:	rex push rbp
   1400234d6:	push   r12
   1400234d8:	push   r13
   1400234da:	push   r14
   1400234dc:	push   r15
   1400234de:	sub    rsp,0x50
   1400234e2:	lea    rbp,[rsp+0x40]
   1400234e7:	mov    QWORD PTR [rbp+0x40],rbx
   1400234eb:	mov    QWORD PTR [rbp+0x48],rsi
   1400234ef:	mov    QWORD PTR [rbp+0x50],rdi
   1400234f3:	mov    rax,QWORD PTR [rip+0x10da6]        # 0x1400342a0
   1400234fa:	xor    rax,rbp
   1400234fd:	mov    QWORD PTR [rbp+0x0],rax
   140023501:	mov    r10d,DWORD PTR [rip+0x131f4]        # 0x1400366fc
   140023508:	mov    esi,0x1
   14002350d:	xor    ebx,ebx
   14002350f:	mov    r15,r9
   140023512:	mov    r13d,r8d
   140023515:	mov    r14d,edx
   140023518:	mov    rdi,rcx
   14002351b:	lea    r12d,[rsi+0x1]
   14002351f:	cmp    r10d,ebx
   140023522:	jne    0x14002355b
   140023524:	xor    r9d,r9d
   140023527:	xor    r8d,r8d
   14002352a:	mov    edx,esi
   14002352c:	xor    ecx,ecx
   14002352e:	call   QWORD PTR [rip+0x3d24]        # 0x140027258
   140023534:	cmp    eax,ebx
   140023536:	je     0x140023540
   140023538:	mov    DWORD PTR [rip+0x131be],esi        # 0x1400366fc
   14002353e:	jmp    0x140023572
   140023540:	call   QWORD PTR [rip+0x3d2a]        # 0x140027270
   140023546:	mov    r10d,DWORD PTR [rip+0x131af]        # 0x1400366fc
   14002354d:	cmp    eax,0x78
   140023550:	cmove  r10d,r12d
   140023554:	mov    DWORD PTR [rip+0x131a1],r10d        # 0x1400366fc
   14002355b:	cmp    r10d,r12d
   14002355e:	je     0x140023674
   140023564:	cmp    r10d,ebx
   140023567:	je     0x140023674
   14002356d:	cmp    r10d,esi
   140023570:	jne    0x140023599
   140023572:	mov    esi,DWORD PTR [rbp+0x68]
   140023575:	cmp    esi,ebx
   140023577:	jne    0x14002357f
   140023579:	mov    rax,QWORD PTR [rdi]
   14002357c:	mov    esi,DWORD PTR [rax+0x4]
   14002357f:	xor    r9d,r9d
   140023582:	xor    r8d,r8d
   140023585:	mov    edx,r13d
   140023588:	mov    ecx,r14d
   14002358b:	call   QWORD PTR [rip+0x3cc7]        # 0x140027258
   140023591:	movsxd r12,eax
   140023594:	cmp    r12d,ebx
   140023597:	jne    0x1400235a0
   140023599:	xor    eax,eax
   14002359b:	jmp    0x140023687
   1400235a0:	jle    0x140023609
   1400235a2:	xor    edx,edx
   1400235a4:	lea    rax,[rdx-0x20]
   1400235a8:	div    r12
   1400235ab:	cmp    rax,0x2
   1400235af:	jb     0x140023609
   1400235b1:	lea    rcx,[r12+r12*1+0x10]
   1400235b6:	cmp    rcx,0x400
   1400235bd:	ja     0x1400235f0
   1400235bf:	lea    rax,[rcx+0xf]
   1400235c3:	cmp    rax,rcx
   1400235c6:	ja     0x1400235d2
   1400235c8:	movabs rax,0xffffffffffffff0
   1400235d2:	and    rax,0xfffffffffffffff0
   1400235d6:	call   0x140025f10
   1400235db:	sub    rsp,rax
   1400235de:	lea    rdi,[rsp+0x40]
   1400235e3:	cmp    rdi,rbx
   1400235e6:	je     0x140023599
   1400235e8:	mov    DWORD PTR [rdi],0xcccc
   1400235ee:	jmp    0x140023603
   1400235f0:	call   0x14000993c
   1400235f5:	mov    rdi,rax
   1400235f8:	cmp    rax,rbx
   1400235fb:	je     0x14002360c
   1400235fd:	mov    DWORD PTR [rax],0xdddd
   140023603:	add    rdi,0x10
   140023607:	jmp    0x14002360c
   140023609:	mov    rdi,rbx
   14002360c:	cmp    rdi,rbx
   14002360f:	je     0x140023599
   140023611:	mov    r9d,r12d
   140023614:	mov    r8,rdi
   140023617:	mov    edx,r13d
   14002361a:	mov    ecx,r14d
   14002361d:	call   QWORD PTR [rip+0x3c35]        # 0x140027258
   140023623:	cmp    eax,ebx
   140023625:	je     0x14002365f
   140023627:	mov    eax,DWORD PTR [rbp+0x60]
   14002362a:	or     r9d,0xffffffff
   14002362e:	xor    edx,edx
   140023630:	mov    QWORD PTR [rsp+0x38],rbx
   140023635:	mov    r8,rdi
   140023638:	mov    ecx,esi
   14002363a:	mov    QWORD PTR [rsp+0x30],rbx
   14002363f:	cmp    eax,ebx
   140023641:	jne    0x14002364e
   140023643:	mov    DWORD PTR [rsp+0x28],ebx
   140023647:	mov    QWORD PTR [rsp+0x20],rbx
   14002364c:	jmp    0x140023657
   14002364e:	mov    DWORD PTR [rsp+0x28],eax
   140023652:	mov    QWORD PTR [rsp+0x20],r15
   140023657:	call   QWORD PTR [rip+0x3d53]        # 0x1400273b0
   14002365d:	mov    ebx,eax
   14002365f:	lea    rcx,[rdi-0x10]
   140023663:	cmp    DWORD PTR [rcx],0xdddd
   140023669:	jne    0x140023670
   14002366b:	call   0x1400098ac
   140023670:	mov    eax,ebx
   140023672:	jmp    0x140023687
   140023674:	mov    r9d,DWORD PTR [rbp+0x60]
   140023678:	mov    r8,r15
   14002367b:	mov    edx,r13d
   14002367e:	mov    ecx,r14d
   140023681:	call   QWORD PTR [rip+0x3b19]        # 0x1400271a0
   140023687:	mov    rcx,QWORD PTR [rbp+0x0]
   14002368b:	xor    rcx,rbp
   14002368e:	call   0x140009080
   140023693:	mov    rbx,QWORD PTR [rbp+0x40]
   140023697:	mov    rsi,QWORD PTR [rbp+0x48]
   14002369b:	mov    rdi,QWORD PTR [rbp+0x50]
   14002369f:	lea    rsp,[rbp+0x10]
   1400236a3:	pop    r15
   1400236a5:	pop    r14
   1400236a7:	pop    r13
   1400236a9:	pop    r12
   1400236ab:	pop    rbp
   1400236ac:	ret    
   1400236ad:	int3   
   1400236ae:	int3   
   1400236af:	int3   
   1400236b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400236b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400236ba:	push   rdi
   1400236bb:	sub    rsp,0x50
   1400236bf:	mov    esi,edx
   1400236c1:	mov    rdx,rcx
   1400236c4:	lea    rcx,[rsp+0x30]
   1400236c9:	mov    rbx,r9
   1400236cc:	mov    edi,r8d
   1400236cf:	call   0x1400094b4
   1400236d4:	mov    r11d,DWORD PTR [rsp+0x88]
   1400236dc:	mov    eax,DWORD PTR [rsp+0x80]
   1400236e3:	lea    rcx,[rsp+0x30]
   1400236e8:	mov    DWORD PTR [rsp+0x28],r11d
   1400236ed:	mov    r9,rbx
   1400236f0:	mov    r8d,edi
   1400236f3:	mov    edx,esi
   1400236f5:	mov    DWORD PTR [rsp+0x20],eax
   1400236f9:	call   0x1400234d4
   1400236fe:	cmp    BYTE PTR [rsp+0x48],0x0
   140023703:	je     0x140023711
   140023705:	mov    rcx,QWORD PTR [rsp+0x40]
   14002370a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140023711:	mov    rbx,QWORD PTR [rsp+0x60]
   140023716:	mov    rsi,QWORD PTR [rsp+0x68]
   14002371b:	add    rsp,0x50
   14002371f:	pop    rdi
   140023720:	ret    
   140023721:	int3   
   140023722:	int3   
   140023723:	int3   
   140023724:	mov    QWORD PTR [rsp+0x8],rbx
   140023729:	mov    QWORD PTR [rsp+0x10],rsi
   14002372e:	push   rdi
   14002372f:	sub    rsp,0x40
   140023733:	mov    ebx,edx
   140023735:	mov    rdx,rcx
   140023738:	lea    rcx,[rsp+0x20]
   14002373d:	mov    edi,r9d
   140023740:	mov    esi,r8d
   140023743:	call   0x1400094b4
   140023748:	mov    rax,QWORD PTR [rsp+0x28]
   14002374d:	movzx  r11d,bl
   140023751:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140023756:	jne    0x140023777
   140023758:	test   esi,esi
   14002375a:	je     0x140023771
   14002375c:	mov    rax,QWORD PTR [rsp+0x20]
   140023761:	mov    rcx,QWORD PTR [rax+0x140]
   140023768:	movzx  eax,WORD PTR [rcx+r11*2]
   14002376d:	and    eax,esi
   14002376f:	jmp    0x140023773
   140023771:	xor    eax,eax
   140023773:	test   eax,eax
   140023775:	je     0x14002377c
   140023777:	mov    eax,0x1
   14002377c:	cmp    BYTE PTR [rsp+0x38],0x0
   140023781:	je     0x14002378f
   140023783:	mov    rcx,QWORD PTR [rsp+0x30]
   140023788:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002378f:	mov    rbx,QWORD PTR [rsp+0x50]
   140023794:	mov    rsi,QWORD PTR [rsp+0x58]
   140023799:	add    rsp,0x40
   14002379d:	pop    rdi
   14002379e:	ret    
   14002379f:	int3   
   1400237a0:	mov    rax,rdx
   1400237a3:	mov    edx,ecx
   1400237a5:	mov    r9d,0x1
   1400237ab:	mov    rcx,rax
   1400237ae:	xor    r8d,r8d
   1400237b1:	jmp    0x140023724
   1400237b6:	int3   
   1400237b7:	int3   
   1400237b8:	mov    edx,ecx
   1400237ba:	mov    r9d,0x1
   1400237c0:	xor    r8d,r8d
   1400237c3:	xor    ecx,ecx
   1400237c5:	jmp    0x140023724
   1400237ca:	int3   
   1400237cb:	int3   
   1400237cc:	mov    rax,rdx
   1400237cf:	mov    edx,ecx
   1400237d1:	mov    r9d,0x3
   1400237d7:	mov    rcx,rax
   1400237da:	xor    r8d,r8d
   1400237dd:	jmp    0x140023724
   1400237e2:	int3   
   1400237e3:	int3   
   1400237e4:	mov    edx,ecx
   1400237e6:	mov    r9d,0x3
   1400237ec:	xor    r8d,r8d
   1400237ef:	xor    ecx,ecx
   1400237f1:	jmp    0x140023724
   1400237f6:	int3   
   1400237f7:	int3   
   1400237f8:	mov    rax,rdx
   1400237fb:	mov    edx,ecx
   1400237fd:	mov    r9d,0x2
   140023803:	mov    rcx,rax
   140023806:	xor    r8d,r8d
   140023809:	jmp    0x140023724
   14002380e:	int3   
   14002380f:	int3   
   140023810:	mov    edx,ecx
   140023812:	mov    r9d,0x2
   140023818:	xor    r8d,r8d
   14002381b:	xor    ecx,ecx
   14002381d:	jmp    0x140023724
   140023822:	int3   
   140023823:	int3   
   140023824:	mov    rax,rdx
   140023827:	mov    edx,ecx
   140023829:	mov    r9d,0x1
   14002382f:	mov    rcx,rax
   140023832:	mov    r8d,0x107
   140023838:	jmp    0x140023724
   14002383d:	int3   
   14002383e:	int3   
   14002383f:	int3   
   140023840:	mov    edx,ecx
   140023842:	mov    r9d,0x1
   140023848:	mov    r8d,0x107
   14002384e:	xor    ecx,ecx
   140023850:	jmp    0x140023724
   140023855:	int3   
   140023856:	int3   
   140023857:	int3   
   140023858:	mov    rax,rdx
   14002385b:	mov    edx,ecx
   14002385d:	mov    r9d,0x1
   140023863:	mov    rcx,rax
   140023866:	mov    r8d,0x103
   14002386c:	jmp    0x140023724
   140023871:	int3   
   140023872:	int3   
   140023873:	int3   
   140023874:	mov    edx,ecx
   140023876:	mov    r9d,0x1
   14002387c:	mov    r8d,0x103
   140023882:	xor    ecx,ecx
   140023884:	jmp    0x140023724
   140023889:	int3   
   14002388a:	int3   
   14002388b:	int3   
   14002388c:	mov    rax,rdx
   14002388f:	mov    edx,ecx
   140023891:	mov    r9d,0x3
   140023897:	mov    rcx,rax
   14002389a:	mov    r8d,0x117
   1400238a0:	jmp    0x140023724
   1400238a5:	int3   
   1400238a6:	int3   
   1400238a7:	int3   
   1400238a8:	mov    edx,ecx
   1400238aa:	mov    r9d,0x3
   1400238b0:	mov    r8d,0x117
   1400238b6:	xor    ecx,ecx
   1400238b8:	jmp    0x140023724
   1400238bd:	int3   
   1400238be:	int3   
   1400238bf:	int3   
   1400238c0:	mov    rax,rdx
   1400238c3:	mov    edx,ecx
   1400238c5:	mov    r9d,0x3
   1400238cb:	mov    rcx,rax
   1400238ce:	mov    r8d,0x157
   1400238d4:	jmp    0x140023724
   1400238d9:	int3   
   1400238da:	int3   
   1400238db:	int3   
   1400238dc:	mov    edx,ecx
   1400238de:	mov    r9d,0x3
   1400238e4:	mov    r8d,0x157
   1400238ea:	xor    ecx,ecx
   1400238ec:	jmp    0x140023724
   1400238f1:	int3   
   1400238f2:	int3   
   1400238f3:	int3   
   1400238f4:	mov    rax,rdx
   1400238f7:	mov    r9d,0x2
   1400238fd:	mov    edx,ecx
   1400238ff:	lea    r8d,[r9+0xe]
   140023903:	mov    rcx,rax
   140023906:	jmp    0x140023724
   14002390b:	int3   
   14002390c:	mov    r9d,0x2
   140023912:	mov    edx,ecx
   140023914:	xor    ecx,ecx
   140023916:	lea    r8d,[r9+0xe]
   14002391a:	jmp    0x140023724
   14002391f:	int3   
   140023920:	mov    rax,rdx
   140023923:	mov    edx,ecx
   140023925:	mov    r9d,0x4
   14002392b:	mov    rcx,rax
   14002392e:	xor    r8d,r8d
   140023931:	jmp    0x140023724
   140023936:	int3   
   140023937:	int3   
   140023938:	mov    edx,ecx
   14002393a:	mov    r9d,0x4
   140023940:	xor    r8d,r8d
   140023943:	xor    ecx,ecx
   140023945:	jmp    0x140023724
   14002394a:	int3   
   14002394b:	int3   
   14002394c:	mov    rax,rdx
   14002394f:	mov    edx,ecx
   140023951:	mov    r9d,0x8
   140023957:	mov    rcx,rax
   14002395a:	xor    r8d,r8d
   14002395d:	jmp    0x140023724
   140023962:	int3   
   140023963:	int3   
   140023964:	mov    edx,ecx
   140023966:	mov    r9d,0x8
   14002396c:	xor    r8d,r8d
   14002396f:	xor    ecx,ecx
   140023971:	jmp    0x140023724
   140023976:	int3   
   140023977:	int3   
   140023978:	mov    QWORD PTR [rsp+0x8],rbx
   14002397d:	push   rdi
   14002397e:	sub    rsp,0x40
   140023982:	mov    edi,ecx
   140023984:	lea    rcx,[rsp+0x20]
   140023989:	mov    rbx,rdx
   14002398c:	call   0x1400094b4
   140023991:	mov    r11,QWORD PTR [rsp+0x28]
   140023996:	test   r11,r11
   140023999:	je     0x1400239cd
   14002399b:	cmp    DWORD PTR [r11+0x4],0x3a4
   1400239a3:	jne    0x1400239cd
   1400239a5:	mov    r9d,0x3
   1400239ab:	xor    r8d,r8d
   1400239ae:	mov    edx,edi
   1400239b0:	mov    rcx,rbx
   1400239b3:	call   0x140023724
   1400239b8:	cmp    BYTE PTR [rsp+0x38],0x0
   1400239bd:	je     0x1400239e2
   1400239bf:	mov    rcx,QWORD PTR [rsp+0x30]
   1400239c4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400239cb:	jmp    0x1400239e2
   1400239cd:	cmp    BYTE PTR [rsp+0x38],0x0
   1400239d2:	je     0x1400239e0
   1400239d4:	mov    rax,QWORD PTR [rsp+0x30]
   1400239d9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400239e0:	xor    eax,eax
   1400239e2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400239e7:	add    rsp,0x40
   1400239eb:	pop    rdi
   1400239ec:	ret    
   1400239ed:	int3   
   1400239ee:	int3   
   1400239ef:	int3   
   1400239f0:	xor    edx,edx
   1400239f2:	jmp    0x140023978
   1400239f7:	int3   
   1400239f8:	mov    rax,rsp
   1400239fb:	mov    QWORD PTR [rax+0x8],rbx
   1400239ff:	mov    QWORD PTR [rax+0x10],rbp
   140023a03:	mov    QWORD PTR [rax+0x18],rsi
   140023a07:	mov    QWORD PTR [rax+0x20],rdi
   140023a0b:	push   r12
   140023a0d:	push   r13
   140023a0f:	push   r14
   140023a11:	sub    rsp,0x50
   140023a15:	mov    r13,rdx
   140023a18:	mov    rdx,rcx
   140023a1b:	lea    rcx,[rax-0x38]
   140023a1f:	mov    r12d,r9d
   140023a22:	mov    r14,r8
   140023a25:	call   0x1400094b4
   140023a2a:	test   r14,r14
   140023a2d:	je     0x140023a32
   140023a2f:	mov    QWORD PTR [r14],r13
   140023a32:	test   r13,r13
   140023a35:	jne    0x140023a71
   140023a37:	call   0x14000f574
   140023a3c:	and    QWORD PTR [rsp+0x20],0x0
   140023a42:	xor    r9d,r9d
   140023a45:	xor    r8d,r8d
   140023a48:	xor    edx,edx
   140023a4a:	xor    ecx,ecx
   140023a4c:	mov    DWORD PTR [rax],0x16
   140023a52:	call   0x14000e4d8
   140023a57:	cmp    BYTE PTR [rsp+0x48],0x0
   140023a5c:	je     0x140023a6a
   140023a5e:	mov    rax,QWORD PTR [rsp+0x40]
   140023a63:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140023a6a:	xor    eax,eax
   140023a6c:	jmp    0x140023c50
   140023a71:	test   r12d,r12d
   140023a74:	je     0x140023a82
   140023a76:	cmp    r12d,0x2
   140023a7a:	jl     0x140023a37
   140023a7c:	cmp    r12d,0x24
   140023a80:	jg     0x140023a37
   140023a82:	mov    sil,BYTE PTR [r13+0x0]
   140023a86:	mov    r8,QWORD PTR [rsp+0x30]
   140023a8b:	xor    edi,edi
   140023a8d:	lea    rbx,[r13+0x1]
   140023a91:	cmp    DWORD PTR [r8+0x10c],0x1
   140023a99:	jle    0x140023ab5
   140023a9b:	lea    r8,[rsp+0x30]
   140023aa0:	movzx  ecx,sil
   140023aa4:	mov    edx,0x8
   140023aa9:	call   0x140011b14
   140023aae:	mov    r8,QWORD PTR [rsp+0x30]
   140023ab3:	jmp    0x140023ac7
   140023ab5:	mov    rax,QWORD PTR [r8+0x140]
   140023abc:	movzx  ecx,sil
   140023ac0:	movzx  eax,WORD PTR [rax+rcx*2]
   140023ac4:	and    eax,0x8
   140023ac7:	test   eax,eax
   140023ac9:	je     0x140023ad3
   140023acb:	mov    sil,BYTE PTR [rbx]
   140023ace:	inc    rbx
   140023ad1:	jmp    0x140023a91
   140023ad3:	mov    ebp,DWORD PTR [rsp+0x90]
   140023ada:	cmp    sil,0x2d
   140023ade:	jne    0x140023ae5
   140023ae0:	or     ebp,0x2
   140023ae3:	jmp    0x140023aeb
   140023ae5:	cmp    sil,0x2b
   140023ae9:	jne    0x140023af1
   140023aeb:	mov    sil,BYTE PTR [rbx]
   140023aee:	inc    rbx
   140023af1:	test   r12d,r12d
   140023af4:	jne    0x140023b1c
   140023af6:	cmp    sil,0x30
   140023afa:	je     0x140023b04
   140023afc:	mov    r12d,0xa
   140023b02:	jmp    0x140023b3a
   140023b04:	cmp    BYTE PTR [rbx],0x78
   140023b07:	je     0x140023b16
   140023b09:	cmp    BYTE PTR [rbx],0x58
   140023b0c:	je     0x140023b16
   140023b0e:	mov    r12d,0x8
   140023b14:	jmp    0x140023b3a
   140023b16:	mov    r12d,0x10
   140023b1c:	cmp    r12d,0x10
   140023b20:	jne    0x140023b3a
   140023b22:	cmp    sil,0x30
   140023b26:	jne    0x140023b3a
   140023b28:	cmp    BYTE PTR [rbx],0x78
   140023b2b:	je     0x140023b32
   140023b2d:	cmp    BYTE PTR [rbx],0x58
   140023b30:	jne    0x140023b3a
   140023b32:	mov    sil,BYTE PTR [rbx+0x1]
   140023b36:	add    rbx,0x2
   140023b3a:	mov    r11,QWORD PTR [r8+0x140]
   140023b41:	movsxd r10,r12d
   140023b44:	xor    edx,edx
   140023b46:	or     rax,0xffffffffffffffff
   140023b4a:	div    r10
   140023b4d:	mov    r9,rax
   140023b50:	movzx  ecx,sil
   140023b54:	movzx  r8d,WORD PTR [r11+rcx*2]
   140023b59:	test   r8b,0x4
   140023b5d:	je     0x140023b69
   140023b5f:	movsx  r8d,sil
   140023b63:	sub    r8d,0x30
   140023b67:	jmp    0x140023b85
   140023b69:	test   r8d,0x103
   140023b70:	je     0x140023ba4
   140023b72:	lea    eax,[rsi-0x61]
   140023b75:	movsx  r8d,sil
   140023b79:	cmp    al,0x19
   140023b7b:	ja     0x140023b81
   140023b7d:	sub    r8d,0x20
   140023b81:	add    r8d,0xffffffc9
   140023b85:	cmp    r8d,r12d
   140023b88:	jae    0x140023ba4
   140023b8a:	or     ebp,0x8
   140023b8d:	cmp    rdi,r9
   140023b90:	jb     0x140023bb8
   140023b92:	jne    0x140023b9c
   140023b94:	mov    eax,r8d
   140023b97:	cmp    rax,rdx
   140023b9a:	jbe    0x140023bb8
   140023b9c:	or     ebp,0x4
   140023b9f:	test   r14,r14
   140023ba2:	jne    0x140023bc5
   140023ba4:	dec    rbx
   140023ba7:	test   bpl,0x8
   140023bab:	jne    0x140023bcd
   140023bad:	test   r14,r14
   140023bb0:	cmovne rbx,r13
   140023bb4:	xor    edi,edi
   140023bb6:	jmp    0x140023c29
   140023bb8:	mov    rcx,r10
   140023bbb:	imul   rcx,rdi
   140023bbf:	mov    edi,r8d
   140023bc2:	add    rdi,rcx
   140023bc5:	mov    sil,BYTE PTR [rbx]
   140023bc8:	inc    rbx
   140023bcb:	jmp    0x140023b50
   140023bcd:	movabs rsi,0x7fffffffffffffff
   140023bd7:	test   bpl,0x4
   140023bdb:	jne    0x140023c02
   140023bdd:	test   bpl,0x1
   140023be1:	jne    0x140023c29
   140023be3:	mov    eax,ebp
   140023be5:	and    eax,0x2
   140023be8:	je     0x140023bf9
   140023bea:	movabs rcx,0x8000000000000000
   140023bf4:	cmp    rdi,rcx
   140023bf7:	ja     0x140023c02
   140023bf9:	test   eax,eax
   140023bfb:	jne    0x140023c29
   140023bfd:	cmp    rdi,rsi
   140023c00:	jbe    0x140023c29
   140023c02:	call   0x14000f574
   140023c07:	mov    DWORD PTR [rax],0x22
   140023c0d:	test   bpl,0x1
   140023c11:	je     0x140023c19
   140023c13:	or     rdi,0xffffffffffffffff
   140023c17:	jmp    0x140023c29
   140023c19:	mov    al,bpl
   140023c1c:	and    al,0x2
   140023c1e:	neg    al
   140023c20:	sbb    rdi,rdi
   140023c23:	neg    rdi
   140023c26:	add    rdi,rsi
   140023c29:	test   r14,r14
   140023c2c:	je     0x140023c31
   140023c2e:	mov    QWORD PTR [r14],rbx
   140023c31:	test   bpl,0x2
   140023c35:	je     0x140023c3a
   140023c37:	neg    rdi
   140023c3a:	cmp    BYTE PTR [rsp+0x48],0x0
   140023c3f:	je     0x140023c4d
   140023c41:	mov    rcx,QWORD PTR [rsp+0x40]
   140023c46:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140023c4d:	mov    rax,rdi
   140023c50:	lea    r11,[rsp+0x50]
   140023c55:	mov    rbx,QWORD PTR [r11+0x20]
   140023c59:	mov    rbp,QWORD PTR [r11+0x28]
   140023c5d:	mov    rsi,QWORD PTR [r11+0x30]
   140023c61:	mov    rdi,QWORD PTR [r11+0x38]
   140023c65:	mov    rsp,r11
   140023c68:	pop    r14
   140023c6a:	pop    r13
   140023c6c:	pop    r12
   140023c6e:	ret    
   140023c6f:	int3   
   140023c70:	sub    rsp,0x38
   140023c74:	xor    eax,eax
   140023c76:	mov    r9d,r8d
   140023c79:	mov    r8,rdx
   140023c7c:	mov    DWORD PTR [rsp+0x20],eax
   140023c80:	mov    rdx,rcx
   140023c83:	cmp    DWORD PTR [rip+0x12337],eax        # 0x140035fc0
   140023c89:	jne    0x140023c94
   140023c8b:	lea    rcx,[rip+0x1144e]        # 0x1400350e0
   140023c92:	jmp    0x140023c96
   140023c94:	xor    ecx,ecx
   140023c96:	call   0x1400239f8
   140023c9b:	add    rsp,0x38
   140023c9f:	ret    
   140023ca0:	sub    rsp,0x38
   140023ca4:	and    DWORD PTR [rsp+0x20],0x0
   140023ca9:	mov    rax,r9
   140023cac:	mov    r9d,r8d
   140023caf:	mov    r8,rdx
   140023cb2:	mov    rdx,rcx
   140023cb5:	mov    rcx,rax
   140023cb8:	call   0x1400239f8
   140023cbd:	add    rsp,0x38
   140023cc1:	ret    
   140023cc2:	int3   
   140023cc3:	int3   
   140023cc4:	sub    rsp,0x38
   140023cc8:	cmp    DWORD PTR [rip+0x122f1],0x0        # 0x140035fc0
   140023ccf:	mov    r9d,r8d
   140023cd2:	mov    r8,rdx
   140023cd5:	mov    rdx,rcx
   140023cd8:	mov    DWORD PTR [rsp+0x20],0x1
   140023ce0:	jne    0x140023ceb
   140023ce2:	lea    rcx,[rip+0x113f7]        # 0x1400350e0
   140023ce9:	jmp    0x140023ced
   140023ceb:	xor    ecx,ecx
   140023ced:	call   0x1400239f8
   140023cf2:	add    rsp,0x38
   140023cf6:	ret    
   140023cf7:	int3   
   140023cf8:	sub    rsp,0x38
   140023cfc:	mov    rax,r9
   140023cff:	mov    r9d,r8d
   140023d02:	mov    r8,rdx
   140023d05:	mov    rdx,rcx
   140023d08:	mov    rcx,rax
   140023d0b:	mov    DWORD PTR [rsp+0x20],0x1
   140023d13:	call   0x1400239f8
   140023d18:	add    rsp,0x38
   140023d1c:	ret    
   140023d1d:	int3   
   140023d1e:	int3   
   140023d1f:	int3   
   140023d20:	rex push rbx
   140023d22:	sub    rsp,0x20
   140023d26:	and    DWORD PTR [rsp+0x40],0x0
   140023d2b:	lea    r8,[rsp+0x40]
   140023d30:	call   0x14001e9c8
   140023d35:	mov    rbx,rax
   140023d38:	test   rax,rax
   140023d3b:	jne    0x140023d58
   140023d3d:	cmp    DWORD PTR [rsp+0x40],eax
   140023d41:	je     0x140023d58
   140023d43:	call   0x14000f574
   140023d48:	test   rax,rax
   140023d4b:	je     0x140023d58
   140023d4d:	call   0x14000f574
   140023d52:	mov    ecx,DWORD PTR [rsp+0x40]
   140023d56:	mov    DWORD PTR [rax],ecx
   140023d58:	mov    rax,rbx
   140023d5b:	add    rsp,0x20
   140023d5f:	pop    rbx
   140023d60:	ret    
   140023d61:	int3   
   140023d62:	int3   
   140023d63:	int3   
   140023d64:	sub    rsp,0x38
   140023d68:	mov    rax,QWORD PTR [rip+0x10531]        # 0x1400342a0
   140023d6f:	xor    rax,rsp
   140023d72:	mov    QWORD PTR [rsp+0x28],rax
   140023d77:	lea    r8,[rsp+0x20]
   140023d7c:	mov    r9d,0x6
   140023d82:	mov    edx,0x1004
   140023d87:	mov    BYTE PTR [rsp+0x26],0x0
   140023d8c:	call   QWORD PTR [rip+0x340e]        # 0x1400271a0
   140023d92:	test   eax,eax
   140023d94:	jne    0x140023d9b
   140023d96:	or     eax,0xffffffff
   140023d99:	jmp    0x140023da5
   140023d9b:	lea    rcx,[rsp+0x20]
   140023da0:	call   0x14001ac14
   140023da5:	mov    rcx,QWORD PTR [rsp+0x28]
   140023daa:	xor    rcx,rsp
   140023dad:	call   0x140009080
   140023db2:	add    rsp,0x38
   140023db6:	ret    
   140023db7:	int3   
   140023db8:	rex push rbp
   140023dba:	push   rbx
   140023dbb:	push   rsi
   140023dbc:	push   rdi
   140023dbd:	push   r12
   140023dbf:	push   r13
   140023dc1:	push   r14
   140023dc3:	push   r15
   140023dc5:	sub    rsp,0x88
   140023dcc:	lea    rbp,[rsp+0x40]
   140023dd1:	mov    rax,QWORD PTR [rip+0x104c8]        # 0x1400342a0
   140023dd8:	xor    rax,rbp
   140023ddb:	mov    QWORD PTR [rbp+0x30],rax
   140023ddf:	mov    r14,QWORD PTR [rbp+0xb0]
   140023de6:	mov    r12d,DWORD PTR [r9]
   140023de9:	xor    edi,edi
   140023deb:	mov    rbx,r8
   140023dee:	mov    rsi,rdi
   140023df1:	mov    DWORD PTR [rbp+0x0],edi
   140023df4:	mov    QWORD PTR [rbp+0x10],r9
   140023df8:	mov    r13d,edx
   140023dfb:	mov    r15d,ecx
   140023dfe:	mov    QWORD PTR [rbp+0x8],rbx
   140023e02:	cmp    ecx,edx
   140023e04:	je     0x14002401d
   140023e0a:	lea    rdx,[rbp+0x18]
   140023e0e:	call   QWORD PTR [rip+0x35ac]        # 0x1400273c0
   140023e14:	cmp    eax,edi
   140023e16:	je     0x140023ebb
   140023e1c:	cmp    DWORD PTR [rbp+0x18],0x1
   140023e20:	jne    0x140023ebb
   140023e26:	lea    rdx,[rbp+0x18]
   140023e2a:	mov    ecx,r13d
   140023e2d:	call   QWORD PTR [rip+0x358d]        # 0x1400273c0
   140023e33:	cmp    eax,edi
   140023e35:	je     0x140023ebb
   140023e3b:	cmp    DWORD PTR [rbp+0x18],0x1
   140023e3f:	jne    0x140023ebb
   140023e41:	mov    DWORD PTR [rbp+0x0],0x1
   140023e48:	cmp    r12d,0xffffffff
   140023e4c:	je     0x140023eae
   140023e4e:	mov    edi,r12d
   140023e51:	test   edi,edi
   140023e53:	jle    0x140023f02
   140023e59:	movsxd rcx,edi
   140023e5c:	movabs rax,0x7ffffffffffffff0
   140023e66:	cmp    rcx,rax
   140023e69:	ja     0x140023f02
   140023e6f:	lea    rcx,[rcx+rcx*1+0x10]
   140023e74:	cmp    rcx,0x400
   140023e7b:	ja     0x140023ee9
   140023e7d:	lea    rax,[rcx+0xf]
   140023e81:	cmp    rax,rcx
   140023e84:	ja     0x140023e90
   140023e86:	movabs rax,0xffffffffffffff0
   140023e90:	and    rax,0xfffffffffffffff0
   140023e94:	call   0x140025f10
   140023e99:	sub    rsp,rax
   140023e9c:	lea    rbx,[rsp+0x40]
   140023ea1:	test   rbx,rbx
   140023ea4:	je     0x140023ee2
   140023ea6:	mov    DWORD PTR [rbx],0xcccc
   140023eac:	jmp    0x140023efc
   140023eae:	mov    rcx,rbx
   140023eb1:	call   0x140012e10
   140023eb6:	lea    edi,[rax+0x1]
   140023eb9:	jmp    0x140023e51
   140023ebb:	mov    r9d,r12d
   140023ebe:	mov    r8,rbx
   140023ec1:	mov    edx,0x1
   140023ec6:	mov    ecx,r15d
   140023ec9:	mov    DWORD PTR [rsp+0x28],edi
   140023ecd:	mov    QWORD PTR [rsp+0x20],rdi
   140023ed2:	call   QWORD PTR [rip+0x3360]        # 0x140027238
   140023ed8:	mov    edi,eax
   140023eda:	test   eax,eax
   140023edc:	jne    0x140023e51
   140023ee2:	xor    eax,eax
   140023ee4:	jmp    0x140024020
   140023ee9:	call   0x14000993c
   140023eee:	mov    rbx,rax
   140023ef1:	test   rax,rax
   140023ef4:	je     0x140023f04
   140023ef6:	mov    DWORD PTR [rax],0xdddd
   140023efc:	add    rbx,0x10
   140023f00:	jmp    0x140023f04
   140023f02:	xor    ebx,ebx
   140023f04:	test   rbx,rbx
   140023f07:	je     0x140023ee2
   140023f09:	movsxd r8,edi
   140023f0c:	xor    edx,edx
   140023f0e:	mov    rcx,rbx
   140023f11:	add    r8,r8
   140023f14:	call   0x140008a00
   140023f19:	mov    r8,QWORD PTR [rbp+0x8]
   140023f1d:	mov    r9d,r12d
   140023f20:	mov    edx,0x1
   140023f25:	mov    ecx,r15d
   140023f28:	mov    DWORD PTR [rsp+0x28],edi
   140023f2c:	mov    QWORD PTR [rsp+0x20],rbx
   140023f31:	call   QWORD PTR [rip+0x3301]        # 0x140027238
   140023f37:	xor    r15d,r15d
   140023f3a:	cmp    eax,r15d
   140023f3d:	je     0x14002400c
   140023f43:	cmp    r14,r15
   140023f46:	je     0x140023f83
   140023f48:	mov    eax,DWORD PTR [rbp+0xb8]
   140023f4e:	mov    QWORD PTR [rsp+0x38],r15
   140023f53:	mov    QWORD PTR [rsp+0x30],r15
   140023f58:	mov    DWORD PTR [rsp+0x28],eax
   140023f5c:	mov    r9d,edi
   140023f5f:	mov    r8,rbx
   140023f62:	xor    edx,edx
   140023f64:	mov    ecx,r13d
   140023f67:	mov    QWORD PTR [rsp+0x20],r14
   140023f6c:	call   QWORD PTR [rip+0x343e]        # 0x1400273b0
   140023f72:	cmp    eax,r15d
   140023f75:	je     0x14002400c
   140023f7b:	mov    rsi,r14
   140023f7e:	jmp    0x14002400c
   140023f83:	cmp    DWORD PTR [rbp+0x0],r15d
   140023f87:	jne    0x140023fb5
   140023f89:	mov    QWORD PTR [rsp+0x38],r15
   140023f8e:	mov    QWORD PTR [rsp+0x30],r15
   140023f93:	mov    r9d,edi
   140023f96:	mov    r8,rbx
   140023f99:	xor    edx,edx
   140023f9b:	mov    ecx,r13d
   140023f9e:	mov    DWORD PTR [rsp+0x28],r15d
   140023fa3:	mov    QWORD PTR [rsp+0x20],r15
   140023fa8:	call   QWORD PTR [rip+0x3402]        # 0x1400273b0
   140023fae:	mov    edi,eax
   140023fb0:	cmp    eax,r15d
   140023fb3:	je     0x14002400c
   140023fb5:	movsxd rdx,edi
   140023fb8:	mov    ecx,0x1
   140023fbd:	call   0x140012c6c
   140023fc2:	mov    rsi,rax
   140023fc5:	cmp    rax,r15
   140023fc8:	je     0x14002400c
   140023fca:	mov    QWORD PTR [rsp+0x38],r15
   140023fcf:	mov    QWORD PTR [rsp+0x30],r15
   140023fd4:	mov    r9d,edi
   140023fd7:	mov    r8,rbx
   140023fda:	xor    edx,edx
   140023fdc:	mov    ecx,r13d
   140023fdf:	mov    DWORD PTR [rsp+0x28],edi
   140023fe3:	mov    QWORD PTR [rsp+0x20],rax
   140023fe8:	call   QWORD PTR [rip+0x33c2]        # 0x1400273b0
   140023fee:	cmp    eax,r15d
   140023ff1:	jne    0x140024000
   140023ff3:	mov    rcx,rsi
   140023ff6:	call   0x1400098ac
   140023ffb:	mov    rsi,r15
   140023ffe:	jmp    0x14002400c
   140024000:	cmp    r12d,0xffffffff
   140024004:	je     0x14002400c
   140024006:	mov    rcx,QWORD PTR [rbp+0x10]
   14002400a:	mov    DWORD PTR [rcx],eax
   14002400c:	lea    rcx,[rbx-0x10]
   140024010:	cmp    DWORD PTR [rcx],0xdddd
   140024016:	jne    0x14002401d
   140024018:	call   0x1400098ac
   14002401d:	mov    rax,rsi
   140024020:	mov    rcx,QWORD PTR [rbp+0x30]
   140024024:	xor    rcx,rbp
   140024027:	call   0x140009080
   14002402c:	lea    rsp,[rbp+0x48]
   140024030:	pop    r15
   140024032:	pop    r14
   140024034:	pop    r13
   140024036:	pop    r12
   140024038:	pop    rdi
   140024039:	pop    rsi
   14002403a:	pop    rbx
   14002403b:	pop    rbp
   14002403c:	ret    
   14002403d:	int3   
   14002403e:	int3   
   14002403f:	int3   
   140024040:	mov    r10,rcx
   140024043:	test   r8,r8
   140024046:	je     0x140024084
   140024048:	movzx  r9d,BYTE PTR [r10]
   14002404c:	inc    r10
   14002404f:	lea    eax,[r9-0x41]
   140024053:	cmp    eax,0x19
   140024056:	ja     0x14002405c
   140024058:	add    r9d,0x20
   14002405c:	movzx  ecx,BYTE PTR [rdx]
   14002405f:	inc    rdx
   140024062:	lea    eax,[rcx-0x41]
   140024065:	cmp    eax,0x19
   140024068:	ja     0x14002406d
   14002406a:	add    ecx,0x20
   14002406d:	sub    r8,0x1
   140024071:	je     0x14002407d
   140024073:	test   r9d,r9d
   140024076:	je     0x14002407d
   140024078:	cmp    r9d,ecx
   14002407b:	je     0x140024048
   14002407d:	sub    r9d,ecx
   140024080:	mov    eax,r9d
   140024083:	ret    
   140024084:	xor    eax,eax
   140024086:	ret    
   140024087:	int3   
   140024088:	mov    rax,rsp
   14002408b:	mov    QWORD PTR [rax+0x8],rbx
   14002408f:	mov    QWORD PTR [rax+0x10],rbp
   140024093:	mov    QWORD PTR [rax+0x18],rsi
   140024097:	push   rdi
   140024098:	sub    rsp,0x50
   14002409c:	mov    rdi,r8
   14002409f:	mov    rsi,rdx
   1400240a2:	mov    rbp,rcx
   1400240a5:	test   r8,r8
   1400240a8:	je     0x140024182
   1400240ae:	lea    rcx,[rax-0x28]
   1400240b2:	mov    rdx,r9
   1400240b5:	call   0x1400094b4
   1400240ba:	test   rbp,rbp
   1400240bd:	jne    0x1400240fc
   1400240bf:	call   0x14000f574
   1400240c4:	and    QWORD PTR [rsp+0x20],0x0
   1400240ca:	xor    r9d,r9d
   1400240cd:	xor    r8d,r8d
   1400240d0:	xor    edx,edx
   1400240d2:	xor    ecx,ecx
   1400240d4:	mov    DWORD PTR [rax],0x16
   1400240da:	call   0x14000e4d8
   1400240df:	cmp    BYTE PTR [rsp+0x48],0x0
   1400240e4:	je     0x1400240f2
   1400240e6:	mov    rax,QWORD PTR [rsp+0x40]
   1400240eb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400240f2:	mov    eax,0x7fffffff
   1400240f7:	jmp    0x140024184
   1400240fc:	test   rsi,rsi
   1400240ff:	je     0x1400240bf
   140024101:	cmp    rdi,0x7fffffff
   140024108:	ja     0x1400240bf
   14002410a:	mov    rax,QWORD PTR [rsp+0x30]
   14002410f:	cmp    DWORD PTR [rax+0x14],0x0
   140024113:	jne    0x140024138
   140024115:	mov    r8,rdi
   140024118:	mov    rdx,rsi
   14002411b:	mov    rcx,rbp
   14002411e:	call   0x140024040
   140024123:	cmp    BYTE PTR [rsp+0x48],0x0
   140024128:	je     0x140024184
   14002412a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002412f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024136:	jmp    0x140024184
   140024138:	movzx  ecx,BYTE PTR [rbp+0x0]
   14002413c:	lea    rdx,[rsp+0x30]
   140024141:	call   0x140021ab8
   140024146:	movzx  ecx,BYTE PTR [rsi]
   140024149:	lea    rdx,[rsp+0x30]
   14002414e:	mov    ebx,eax
   140024150:	inc    rbp
   140024153:	call   0x140021ab8
   140024158:	inc    rsi
   14002415b:	sub    rdi,0x1
   14002415f:	je     0x140024169
   140024161:	test   ebx,ebx
   140024163:	je     0x140024169
   140024165:	cmp    ebx,eax
   140024167:	je     0x140024138
   140024169:	sub    ebx,eax
   14002416b:	cmp    BYTE PTR [rsp+0x48],0x0
   140024170:	je     0x14002417e
   140024172:	mov    rcx,QWORD PTR [rsp+0x40]
   140024177:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002417e:	mov    eax,ebx
   140024180:	jmp    0x140024184
   140024182:	xor    eax,eax
   140024184:	mov    rbx,QWORD PTR [rsp+0x60]
   140024189:	mov    rbp,QWORD PTR [rsp+0x68]
   14002418e:	mov    rsi,QWORD PTR [rsp+0x70]
   140024193:	add    rsp,0x50
   140024197:	pop    rdi
   140024198:	ret    
   140024199:	int3   
   14002419a:	int3   
   14002419b:	int3   
   14002419c:	sub    rsp,0x38
   1400241a0:	cmp    DWORD PTR [rip+0x11e19],0x0        # 0x140035fc0
   1400241a7:	jne    0x1400241ea
   1400241a9:	test   rcx,rcx
   1400241ac:	jne    0x1400241d5
   1400241ae:	call   0x14000f574
   1400241b3:	and    QWORD PTR [rsp+0x20],0x0
   1400241b9:	xor    r9d,r9d
   1400241bc:	xor    r8d,r8d
   1400241bf:	xor    edx,edx
   1400241c1:	xor    ecx,ecx
   1400241c3:	mov    DWORD PTR [rax],0x16
   1400241c9:	call   0x14000e4d8
   1400241ce:	mov    eax,0x7fffffff
   1400241d3:	jmp    0x1400241f2
   1400241d5:	test   rdx,rdx
   1400241d8:	je     0x1400241ae
   1400241da:	cmp    r8,0x7fffffff
   1400241e1:	ja     0x1400241ae
   1400241e3:	call   0x140024040
   1400241e8:	jmp    0x1400241f2
   1400241ea:	xor    r9d,r9d
   1400241ed:	call   0x140024088
   1400241f2:	add    rsp,0x38
   1400241f6:	ret    
   1400241f7:	int3   
   1400241f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400241fd:	mov    QWORD PTR [rsp+0x10],rsi
   140024202:	push   rdi
   140024203:	sub    rsp,0x30
   140024207:	mov    esi,r9d
   14002420a:	mov    r11,r8
   14002420d:	mov    r10,rdx
   140024210:	mov    edi,ecx
   140024212:	test   rdx,rdx
   140024215:	jne    0x14002423f
   140024217:	call   0x14000f574
   14002421c:	mov    ebx,0x16
   140024221:	and    QWORD PTR [rsp+0x20],0x0
   140024227:	xor    r9d,r9d
   14002422a:	xor    r8d,r8d
   14002422d:	xor    edx,edx
   14002422f:	xor    ecx,ecx
   140024231:	mov    DWORD PTR [rax],ebx
   140024233:	call   0x14000e4d8
   140024238:	mov    eax,ebx
   14002423a:	jmp    0x1400242e9
   14002423f:	test   r8,r8
   140024242:	je     0x140024217
   140024244:	mov    BYTE PTR [rdx],0x0
   140024247:	mov    edx,DWORD PTR [rsp+0x60]
   14002424b:	mov    eax,edx
   14002424d:	neg    eax
   14002424f:	sbb    rcx,rcx
   140024252:	neg    rcx
   140024255:	inc    rcx
   140024258:	cmp    r8,rcx
   14002425b:	ja     0x140024269
   14002425d:	call   0x14000f574
   140024262:	mov    ebx,0x22
   140024267:	jmp    0x140024221
   140024269:	lea    eax,[r9-0x2]
   14002426d:	mov    ebx,0x22
   140024272:	cmp    eax,ebx
   140024274:	ja     0x140024217
   140024276:	xor    ecx,ecx
   140024278:	mov    r8,r10
   14002427b:	test   edx,edx
   14002427d:	je     0x14002428c
   14002427f:	mov    BYTE PTR [r10],0x2d
   140024283:	lea    r8,[r10+0x1]
   140024287:	lea    ecx,[rbx-0x21]
   14002428a:	neg    edi
   14002428c:	mov    r9,r8
   14002428f:	xor    edx,edx
   140024291:	mov    eax,edi
   140024293:	div    esi
   140024295:	mov    edi,eax
   140024297:	cmp    edx,0x9
   14002429a:	jbe    0x1400242a1
   14002429c:	add    dl,0x57
   14002429f:	jmp    0x1400242a4
   1400242a1:	add    dl,0x30
   1400242a4:	mov    BYTE PTR [r8],dl
   1400242a7:	inc    rcx
   1400242aa:	inc    r8
   1400242ad:	test   eax,eax
   1400242af:	je     0x1400242b6
   1400242b1:	cmp    rcx,r11
   1400242b4:	jb     0x14002428f
   1400242b6:	cmp    rcx,r11
   1400242b9:	jb     0x1400242c9
   1400242bb:	mov    BYTE PTR [r10],0x0
   1400242bf:	call   0x14000f574
   1400242c4:	jmp    0x140024221
   1400242c9:	mov    BYTE PTR [r8],0x0
   1400242cd:	dec    r8
   1400242d0:	mov    al,BYTE PTR [r9]
   1400242d3:	mov    cl,BYTE PTR [r8]
   1400242d6:	mov    BYTE PTR [r8],al
   1400242d9:	mov    BYTE PTR [r9],cl
   1400242dc:	inc    r9
   1400242df:	dec    r8
   1400242e2:	cmp    r9,r8
   1400242e5:	jb     0x1400242d0
   1400242e7:	xor    eax,eax
   1400242e9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400242ee:	mov    rsi,QWORD PTR [rsp+0x48]
   1400242f3:	add    rsp,0x30
   1400242f7:	pop    rdi
   1400242f8:	ret    
   1400242f9:	int3   
   1400242fa:	int3   
   1400242fb:	int3   
   1400242fc:	sub    rsp,0x38
   140024300:	cmp    r9d,0xa
   140024304:	jne    0x140024314
   140024306:	test   ecx,ecx
   140024308:	jns    0x140024314
   14002430a:	mov    DWORD PTR [rsp+0x20],0x1
   140024312:	jmp    0x140024319
   140024314:	and    DWORD PTR [rsp+0x20],0x0
   140024319:	call   0x1400241f8
   14002431e:	add    rsp,0x38
   140024322:	ret    
   140024323:	int3   
   140024324:	sub    rsp,0x38
   140024328:	xor    eax,eax
   14002432a:	cmp    r9d,0xa
   14002432e:	jne    0x140024338
   140024330:	cmp    ecx,eax
   140024332:	jge    0x140024338
   140024334:	lea    eax,[r9-0x9]
   140024338:	mov    DWORD PTR [rsp+0x20],eax
   14002433c:	call   0x1400241f8
   140024341:	add    rsp,0x38
   140024345:	ret    
   140024346:	int3   
   140024347:	int3   
   140024348:	sub    rsp,0x38
   14002434c:	and    DWORD PTR [rsp+0x20],0x0
   140024351:	call   0x1400241f8
   140024356:	add    rsp,0x38
   14002435a:	ret    
   14002435b:	int3   
   14002435c:	mov    QWORD PTR [rsp+0x8],rbx
   140024361:	mov    QWORD PTR [rsp+0x10],rsi
   140024366:	push   rdi
   140024367:	sub    rsp,0x30
   14002436b:	mov    esi,r9d
   14002436e:	mov    r11,r8
   140024371:	mov    r10,rdx
   140024374:	mov    rdi,rcx
   140024377:	test   rdx,rdx
   14002437a:	jne    0x1400243a4
   14002437c:	call   0x14000f574
   140024381:	mov    ebx,0x16
   140024386:	and    QWORD PTR [rsp+0x20],0x0
   14002438c:	xor    r9d,r9d
   14002438f:	xor    r8d,r8d
   140024392:	xor    edx,edx
   140024394:	xor    ecx,ecx
   140024396:	mov    DWORD PTR [rax],ebx
   140024398:	call   0x14000e4d8
   14002439d:	mov    eax,ebx
   14002439f:	jmp    0x140024452
   1400243a4:	test   r8,r8
   1400243a7:	je     0x14002437c
   1400243a9:	mov    BYTE PTR [rdx],0x0
   1400243ac:	mov    edx,DWORD PTR [rsp+0x60]
   1400243b0:	mov    eax,edx
   1400243b2:	neg    eax
   1400243b4:	sbb    rcx,rcx
   1400243b7:	neg    rcx
   1400243ba:	inc    rcx
   1400243bd:	cmp    r8,rcx
   1400243c0:	ja     0x1400243ce
   1400243c2:	call   0x14000f574
   1400243c7:	mov    ebx,0x22
   1400243cc:	jmp    0x140024386
   1400243ce:	lea    eax,[rsi-0x2]
   1400243d1:	mov    ebx,0x22
   1400243d6:	cmp    eax,ebx
   1400243d8:	ja     0x14002437c
   1400243da:	xor    ecx,ecx
   1400243dc:	mov    r8,r10
   1400243df:	test   edx,edx
   1400243e1:	je     0x1400243f1
   1400243e3:	mov    BYTE PTR [r10],0x2d
   1400243e7:	lea    r8,[r10+0x1]
   1400243eb:	lea    ecx,[rbx-0x21]
   1400243ee:	neg    rdi
   1400243f1:	mov    r9,r8
   1400243f4:	xor    edx,edx
   1400243f6:	mov    rax,rdi
   1400243f9:	div    rsi
   1400243fc:	mov    rdi,rax
   1400243ff:	cmp    edx,0x9
   140024402:	jbe    0x140024409
   140024404:	add    dl,0x57
   140024407:	jmp    0x14002440c
   140024409:	add    dl,0x30
   14002440c:	mov    BYTE PTR [r8],dl
   14002440f:	inc    rcx
   140024412:	inc    r8
   140024415:	test   rax,rax
   140024418:	je     0x14002441f
   14002441a:	cmp    rcx,r11
   14002441d:	jb     0x1400243f4
   14002441f:	cmp    rcx,r11
   140024422:	jb     0x140024432
   140024424:	mov    BYTE PTR [r10],0x0
   140024428:	call   0x14000f574
   14002442d:	jmp    0x140024386
   140024432:	mov    BYTE PTR [r8],0x0
   140024436:	dec    r8
   140024439:	mov    al,BYTE PTR [r9]
   14002443c:	mov    cl,BYTE PTR [r8]
   14002443f:	mov    BYTE PTR [r8],al
   140024442:	mov    BYTE PTR [r9],cl
   140024445:	inc    r9
   140024448:	dec    r8
   14002444b:	cmp    r9,r8
   14002444e:	jb     0x140024439
   140024450:	xor    eax,eax
   140024452:	mov    rbx,QWORD PTR [rsp+0x40]
   140024457:	mov    rsi,QWORD PTR [rsp+0x48]
   14002445c:	add    rsp,0x30
   140024460:	pop    rdi
   140024461:	ret    
   140024462:	int3   
   140024463:	int3   
   140024464:	sub    rsp,0x38
   140024468:	xor    eax,eax
   14002446a:	cmp    r9d,0xa
   14002446e:	jne    0x140024479
   140024470:	cmp    rcx,rax
   140024473:	jge    0x140024479
   140024475:	lea    eax,[r9-0x9]
   140024479:	mov    DWORD PTR [rsp+0x20],eax
   14002447d:	call   0x14002435c
   140024482:	add    rsp,0x38
   140024486:	ret    
   140024487:	int3   
   140024488:	sub    rsp,0x38
   14002448c:	and    DWORD PTR [rsp+0x20],0x0
   140024491:	call   0x14002435c
   140024496:	add    rsp,0x38
   14002449a:	ret    
   14002449b:	int3   
   14002449c:	xor    r8d,r8d
   14002449f:	mov    eax,edx
   1400244a1:	cmp    edx,r8d
   1400244a4:	je     0x1400244b7
   1400244a6:	dec    eax
   1400244a8:	cmp    WORD PTR [rcx],r8w
   1400244ac:	je     0x1400244b9
   1400244ae:	add    rcx,0x2
   1400244b2:	cmp    eax,r8d
   1400244b5:	jne    0x1400244a6
   1400244b7:	dec    eax
   1400244b9:	sub    edx,eax
   1400244bb:	lea    eax,[rdx-0x1]
   1400244be:	ret    
   1400244bf:	int3   
   1400244c0:	mov    rax,rsp
   1400244c3:	mov    QWORD PTR [rax+0x8],rbx
   1400244c7:	mov    QWORD PTR [rax+0x10],rbp
   1400244cb:	mov    QWORD PTR [rax+0x18],rsi
   1400244cf:	mov    QWORD PTR [rax+0x20],rdi
   1400244d3:	push   r12
   1400244d5:	sub    rsp,0x30
   1400244d9:	mov    r11,r9
   1400244dc:	mov    r9d,DWORD PTR [rsp+0x60]
   1400244e1:	mov    ebp,0x2
   1400244e6:	xor    esi,esi
   1400244e8:	or     r10d,0xffffffff
   1400244ec:	mov    ebx,r8d
   1400244ef:	cmp    r9d,esi
   1400244f2:	mov    edi,edx
   1400244f4:	lea    r12d,[rbp-0x1]
   1400244f8:	jle    0x14002451a
   1400244fa:	mov    ecx,r9d
   1400244fd:	mov    rax,r11
   140024500:	sub    ecx,r12d
   140024503:	cmp    WORD PTR [rax],si
   140024506:	je     0x140024512
   140024508:	add    rax,rbp
   14002450b:	cmp    ecx,esi
   14002450d:	jne    0x140024500
   14002450f:	mov    ecx,r10d
   140024512:	mov    eax,r10d
   140024515:	sub    eax,ecx
   140024517:	add    r9d,eax
   14002451a:	mov    eax,DWORD PTR [rsp+0x70]
   14002451e:	mov    r8,QWORD PTR [rsp+0x68]
   140024523:	cmp    eax,esi
   140024525:	jle    0x140024544
   140024527:	mov    ecx,eax
   140024529:	mov    rdx,r8
   14002452c:	sub    ecx,r12d
   14002452f:	cmp    WORD PTR [rdx],si
   140024532:	je     0x14002453e
   140024534:	add    rdx,rbp
   140024537:	cmp    ecx,esi
   140024539:	jne    0x14002452c
   14002453b:	mov    ecx,r10d
   14002453e:	sub    r10d,ecx
   140024541:	add    eax,r10d
   140024544:	cmp    r9d,esi
   140024547:	je     0x140024565
   140024549:	cmp    eax,esi
   14002454b:	je     0x140024565
   14002454d:	mov    DWORD PTR [rsp+0x28],eax
   140024551:	mov    QWORD PTR [rsp+0x20],r8
   140024556:	mov    edx,ebx
   140024558:	mov    r8,r11
   14002455b:	mov    ecx,edi
   14002455d:	call   QWORD PTR [rip+0x2bf5]        # 0x140027158
   140024563:	jmp    0x140024577
   140024565:	sub    r9d,eax
   140024568:	mov    eax,0x3
   14002456d:	cmovs  eax,r12d
   140024571:	cmp    r9d,esi
   140024574:	cmove  eax,ebp
   140024577:	mov    rbx,QWORD PTR [rsp+0x40]
   14002457c:	mov    rbp,QWORD PTR [rsp+0x48]
   140024581:	mov    rsi,QWORD PTR [rsp+0x50]
   140024586:	mov    rdi,QWORD PTR [rsp+0x58]
   14002458b:	add    rsp,0x30
   14002458f:	pop    r12
   140024591:	ret    
   140024592:	int3   
   140024593:	int3   
   140024594:	mov    rax,rsp
   140024597:	mov    QWORD PTR [rax+0x8],rbx
   14002459b:	mov    QWORD PTR [rax+0x10],rbp
   14002459f:	mov    QWORD PTR [rax+0x18],rsi
   1400245a3:	push   rdi
   1400245a4:	sub    rsp,0x50
   1400245a8:	mov    esi,edx
   1400245aa:	mov    rdx,rcx
   1400245ad:	lea    rcx,[rax-0x28]
   1400245b1:	mov    rbx,r9
   1400245b4:	mov    edi,r8d
   1400245b7:	call   0x1400094b4
   1400245bc:	mov    eax,DWORD PTR [rsp+0x80]
   1400245c3:	mov    r11d,DWORD PTR [rsp+0x90]
   1400245cb:	xor    ebp,ebp
   1400245cd:	cmp    eax,ebp
   1400245cf:	lea    r9d,[rbp+0x1]
   1400245d3:	lea    r10d,[rbp+0x2]
   1400245d7:	jle    0x1400245f5
   1400245d9:	mov    ecx,eax
   1400245db:	mov    rdx,rbx
   1400245de:	sub    ecx,r9d
   1400245e1:	cmp    WORD PTR [rdx],bp
   1400245e4:	je     0x1400245f0
   1400245e6:	add    rdx,r10
   1400245e9:	cmp    ecx,ebp
   1400245eb:	jne    0x1400245de
   1400245ed:	or     ecx,0xffffffff
   1400245f0:	sub    eax,ecx
   1400245f2:	sub    eax,r9d
   1400245f5:	cmp    r11d,ebp
   1400245f8:	mov    r8,QWORD PTR [rsp+0x88]
   140024600:	jle    0x140024620
   140024602:	mov    ecx,r11d
   140024605:	mov    rdx,r8
   140024608:	sub    ecx,r9d
   14002460b:	cmp    WORD PTR [rdx],bp
   14002460e:	je     0x14002461a
   140024610:	add    rdx,r10
   140024613:	cmp    ecx,ebp
   140024615:	jne    0x140024608
   140024617:	or     ecx,0xffffffff
   14002461a:	sub    r11d,ecx
   14002461d:	sub    r11d,r9d
   140024620:	cmp    eax,ebp
   140024622:	je     0x140024648
   140024624:	cmp    r11d,ebp
   140024627:	je     0x140024648
   140024629:	mov    DWORD PTR [rsp+0x28],r11d
   14002462e:	mov    QWORD PTR [rsp+0x20],r8
   140024633:	mov    r9d,eax
   140024636:	mov    r8,rbx
   140024639:	mov    edx,edi
   14002463b:	mov    ecx,esi
   14002463d:	call   QWORD PTR [rip+0x2b15]        # 0x140027158
   140024643:	mov    r11d,eax
   140024646:	jmp    0x14002465b
   140024648:	sub    eax,r11d
   14002464b:	mov    r11d,0x3
   140024651:	cmovs  r11d,r9d
   140024655:	cmp    eax,ebp
   140024657:	cmove  r11d,r10d
   14002465b:	cmp    BYTE PTR [rsp+0x48],bpl
   140024660:	je     0x14002466e
   140024662:	mov    rax,QWORD PTR [rsp+0x40]
   140024667:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002466e:	mov    rbx,QWORD PTR [rsp+0x60]
   140024673:	mov    rbp,QWORD PTR [rsp+0x68]
   140024678:	mov    rsi,QWORD PTR [rsp+0x70]
   14002467d:	mov    eax,r11d
   140024680:	add    rsp,0x50
   140024684:	pop    rdi
   140024685:	ret    
   140024686:	int3   
   140024687:	int3   
   140024688:	mov    eax,edx
   14002468a:	test   edx,edx
   14002468c:	je     0x14002469c
   14002468e:	dec    eax
   140024690:	cmp    BYTE PTR [rcx],0x0
   140024693:	je     0x14002469e
   140024695:	inc    rcx
   140024698:	test   eax,eax
   14002469a:	jne    0x14002468e
   14002469c:	dec    eax
   14002469e:	sub    edx,eax
   1400246a0:	lea    eax,[rdx-0x1]
   1400246a3:	ret    
   1400246a4:	rex push rbp
   1400246a6:	push   rbx
   1400246a7:	push   rsi
   1400246a8:	push   rdi
   1400246a9:	push   r12
   1400246ab:	push   r13
   1400246ad:	push   r14
   1400246af:	push   r15
   1400246b1:	sub    rsp,0x68
   1400246b5:	lea    rbp,[rsp+0x30]
   1400246ba:	mov    rax,QWORD PTR [rip+0xfbdf]        # 0x1400342a0
   1400246c1:	xor    rax,rbp
   1400246c4:	mov    QWORD PTR [rbp+0x28],rax
   1400246c8:	mov    rdi,QWORD PTR [rbp+0xa8]
   1400246cf:	mov    r10d,edx
   1400246d2:	mov    DWORD PTR [rbp+0x0],edx
   1400246d5:	mov    edx,DWORD PTR [rip+0x12025]        # 0x140036700
   1400246db:	mov    r11d,0x2
   1400246e1:	xor    ebx,ebx
   1400246e3:	mov    r15,r9
   1400246e6:	mov    DWORD PTR [rbp+0x4],r8d
   1400246ea:	mov    r14,rcx
   1400246ed:	mov    QWORD PTR [rbp+0x8],rdi
   1400246f1:	lea    r12d,[r11-0x1]
   1400246f5:	cmp    edx,ebx
   1400246f7:	jne    0x140024748
   1400246f9:	lea    r8,[rip+0xa0f8]        # 0x14002e7f8
   140024700:	mov    r9d,r12d
   140024703:	xor    edx,edx
   140024705:	xor    ecx,ecx
   140024707:	mov    DWORD PTR [rsp+0x28],r12d
   14002470c:	mov    QWORD PTR [rsp+0x20],r8
   140024711:	call   QWORD PTR [rip+0x2a41]        # 0x140027158
   140024717:	cmp    eax,ebx
   140024719:	je     0x140024725
   14002471b:	mov    edx,r12d
   14002471e:	lea    r11d,[r12+0x1]
   140024723:	jmp    0x14002473e
   140024725:	call   QWORD PTR [rip+0x2b45]        # 0x140027270
   14002472b:	mov    edx,DWORD PTR [rip+0x11fcf]        # 0x140036700
   140024731:	mov    r11d,0x2
   140024737:	cmp    eax,0x78
   14002473a:	cmove  edx,r11d
   14002473e:	mov    r10d,DWORD PTR [rbp+0x0]
   140024742:	mov    DWORD PTR [rip+0x11fb8],edx        # 0x140036700
   140024748:	mov    r9d,DWORD PTR [rbp+0xa0]
   14002474f:	cmp    r9d,ebx
   140024752:	jle    0x1400247ad
   140024754:	mov    ecx,r9d
   140024757:	mov    rax,r15
   14002475a:	sub    ecx,r12d
   14002475d:	or     esi,0xffffffff
   140024760:	cmp    BYTE PTR [rax],bl
   140024762:	je     0x14002476d
   140024764:	add    rax,r12
   140024767:	cmp    ecx,ebx
   140024769:	jne    0x14002475a
   14002476b:	mov    ecx,esi
   14002476d:	mov    eax,esi
   14002476f:	sub    eax,ecx
   140024771:	add    r9d,eax
   140024774:	mov    DWORD PTR [rbp+0xa0],r9d
   14002477b:	mov    r8d,DWORD PTR [rbp+0xb0]
   140024782:	cmp    r8d,ebx
   140024785:	jle    0x1400247bc
   140024787:	mov    ecx,r8d
   14002478a:	mov    rax,rdi
   14002478d:	sub    ecx,r12d
   140024790:	cmp    BYTE PTR [rax],bl
   140024792:	je     0x14002479d
   140024794:	add    rax,r12
   140024797:	cmp    ecx,ebx
   140024799:	jne    0x14002478d
   14002479b:	mov    ecx,esi
   14002479d:	mov    eax,esi
   14002479f:	sub    eax,ecx
   1400247a1:	add    r8d,eax
   1400247a4:	mov    DWORD PTR [rbp+0xb0],r8d
   1400247ab:	jmp    0x1400247c1
   1400247ad:	or     esi,0xffffffff
   1400247b0:	cmp    r9d,esi
   1400247b3:	jge    0x14002477b
   1400247b5:	xor    eax,eax
   1400247b7:	jmp    0x140024b61
   1400247bc:	cmp    r8d,esi
   1400247bf:	jl     0x1400247b5
   1400247c1:	cmp    edx,r11d
   1400247c4:	je     0x140024a79
   1400247ca:	cmp    edx,ebx
   1400247cc:	je     0x140024a79
   1400247d2:	cmp    edx,r12d
   1400247d5:	jne    0x1400247b5
   1400247d7:	mov    r13d,DWORD PTR [rbp+0xb8]
   1400247de:	cmp    r13d,ebx
   1400247e1:	jne    0x1400247ea
   1400247e3:	mov    rcx,QWORD PTR [r14]
   1400247e6:	mov    r13d,DWORD PTR [rcx+0x4]
   1400247ea:	cmp    r9d,ebx
   1400247ed:	je     0x1400247f8
   1400247ef:	cmp    r8d,ebx
   1400247f2:	jne    0x1400248a3
   1400247f8:	cmp    r9d,r8d
   1400247fb:	jne    0x140024805
   1400247fd:	mov    eax,r11d
   140024800:	jmp    0x140024b61
   140024805:	cmp    r8d,r12d
   140024808:	jle    0x140024812
   14002480a:	mov    eax,r12d
   14002480d:	jmp    0x140024b61
   140024812:	cmp    r9d,r12d
   140024815:	jle    0x140024821
   140024817:	mov    eax,0x3
   14002481c:	jmp    0x140024b61
   140024821:	lea    rdx,[rbp+0x10]
   140024825:	mov    ecx,r13d
   140024828:	call   QWORD PTR [rip+0x2b92]        # 0x1400273c0
   14002482e:	cmp    eax,ebx
   140024830:	je     0x1400247b5
   140024832:	mov    r9d,DWORD PTR [rbp+0xa0]
   140024839:	cmp    r9d,ebx
   14002483c:	jle    0x140024870
   14002483e:	cmp    DWORD PTR [rbp+0x10],0x2
   140024842:	jb     0x140024817
   140024844:	cmp    BYTE PTR [rbp+0x16],bl
   140024847:	lea    rax,[rbp+0x16]
   14002484b:	je     0x140024817
   14002484d:	cmp    BYTE PTR [rax+0x1],bl
   140024850:	je     0x140024817
   140024852:	mov    cl,BYTE PTR [r15]
   140024855:	cmp    cl,BYTE PTR [rax]
   140024857:	jb     0x14002485e
   140024859:	cmp    cl,BYTE PTR [rax+0x1]
   14002485c:	jbe    0x140024866
   14002485e:	add    rax,0x2
   140024862:	cmp    BYTE PTR [rax],bl
   140024864:	jmp    0x14002484b
   140024866:	mov    eax,0x2
   14002486b:	jmp    0x140024b61
   140024870:	cmp    DWORD PTR [rbp+0xb0],ebx
   140024876:	jle    0x1400248a3
   140024878:	cmp    DWORD PTR [rbp+0x10],0x2
   14002487c:	jb     0x14002480a
   14002487e:	cmp    BYTE PTR [rbp+0x16],bl
   140024881:	lea    rax,[rbp+0x16]
   140024885:	je     0x14002480a
   140024887:	cmp    BYTE PTR [rax+0x1],bl
   14002488a:	je     0x14002480a
   140024890:	mov    cl,BYTE PTR [rdi]
   140024892:	cmp    cl,BYTE PTR [rax]
   140024894:	jb     0x14002489b
   140024896:	cmp    cl,BYTE PTR [rax+0x1]
   140024899:	jbe    0x140024866
   14002489b:	add    rax,0x2
   14002489f:	cmp    BYTE PTR [rax],bl
   1400248a1:	jmp    0x140024885
   1400248a3:	mov    r8,r15
   1400248a6:	mov    edx,0x9
   1400248ab:	mov    ecx,r13d
   1400248ae:	mov    DWORD PTR [rsp+0x28],ebx
   1400248b2:	mov    QWORD PTR [rsp+0x20],rbx
   1400248b7:	call   QWORD PTR [rip+0x297b]        # 0x140027238
   1400248bd:	movsxd r14,eax
   1400248c0:	cmp    r14d,ebx
   1400248c3:	je     0x1400247b5
   1400248c9:	movabs r8,0xffffffffffffff0
   1400248d3:	jle    0x140024939
   1400248d5:	xor    edx,edx
   1400248d7:	lea    rax,[rdx-0x20]
   1400248db:	div    r14
   1400248de:	cmp    rax,0x2
   1400248e2:	jb     0x140024939
   1400248e4:	lea    rcx,[r14+r14*1+0x10]
   1400248e9:	cmp    rcx,0x400
   1400248f0:	ja     0x140024920
   1400248f2:	lea    rax,[rcx+0xf]
   1400248f6:	cmp    rax,rcx
   1400248f9:	ja     0x1400248fe
   1400248fb:	mov    rax,r8
   1400248fe:	and    rax,0xfffffffffffffff0
   140024902:	call   0x140025f10
   140024907:	sub    rsp,rax
   14002490a:	lea    rsi,[rsp+0x30]
   14002490f:	cmp    rsi,rbx
   140024912:	je     0x1400247b5
   140024918:	mov    DWORD PTR [rsi],0xcccc
   14002491e:	jmp    0x140024933
   140024920:	call   0x14000993c
   140024925:	mov    rsi,rax
   140024928:	cmp    rax,rbx
   14002492b:	je     0x14002493c
   14002492d:	mov    DWORD PTR [rax],0xdddd
   140024933:	add    rsi,0x10
   140024937:	jmp    0x14002493c
   140024939:	mov    rsi,rbx
   14002493c:	cmp    rsi,rbx
   14002493f:	je     0x1400247b5
   140024945:	mov    r9d,DWORD PTR [rbp+0xa0]
   14002494c:	mov    r8,r15
   14002494f:	mov    edx,r12d
   140024952:	mov    ecx,r13d
   140024955:	mov    DWORD PTR [rsp+0x28],r14d
   14002495a:	mov    QWORD PTR [rsp+0x20],rsi
   14002495f:	call   QWORD PTR [rip+0x28d3]        # 0x140027238
   140024965:	cmp    eax,ebx
   140024967:	je     0x140024a61
   14002496d:	mov    r9d,DWORD PTR [rbp+0xb0]
   140024974:	mov    r8,rdi
   140024977:	mov    edx,0x9
   14002497c:	mov    ecx,r13d
   14002497f:	mov    DWORD PTR [rsp+0x28],ebx
   140024983:	mov    QWORD PTR [rsp+0x20],rbx
   140024988:	call   QWORD PTR [rip+0x28aa]        # 0x140027238
   14002498e:	movsxd r12,eax
   140024991:	cmp    r12d,ebx
   140024994:	je     0x140024a61
   14002499a:	jle    0x140024a03
   14002499c:	xor    edx,edx
   14002499e:	lea    rax,[rdx-0x20]
   1400249a2:	div    r12
   1400249a5:	cmp    rax,0x2
   1400249a9:	jb     0x140024a03
   1400249ab:	lea    rcx,[r12+r12*1+0x10]
   1400249b0:	cmp    rcx,0x400
   1400249b7:	ja     0x1400249ea
   1400249b9:	lea    rax,[rcx+0xf]
   1400249bd:	cmp    rax,rcx
   1400249c0:	ja     0x1400249cc
   1400249c2:	movabs rax,0xffffffffffffff0
   1400249cc:	and    rax,0xfffffffffffffff0
   1400249d0:	call   0x140025f10
   1400249d5:	sub    rsp,rax
   1400249d8:	lea    rdi,[rsp+0x30]
   1400249dd:	cmp    rdi,rbx
   1400249e0:	je     0x140024a61
   1400249e2:	mov    DWORD PTR [rdi],0xcccc
   1400249e8:	jmp    0x1400249fd
   1400249ea:	call   0x14000993c
   1400249ef:	mov    rdi,rax
   1400249f2:	cmp    rax,rbx
   1400249f5:	je     0x140024a06
   1400249f7:	mov    DWORD PTR [rax],0xdddd
   1400249fd:	add    rdi,0x10
   140024a01:	jmp    0x140024a06
   140024a03:	mov    rdi,rbx
   140024a06:	cmp    rdi,rbx
   140024a09:	je     0x140024a61
   140024a0b:	mov    r9d,DWORD PTR [rbp+0xb0]
   140024a12:	mov    r8,QWORD PTR [rbp+0x8]
   140024a16:	mov    edx,0x1
   140024a1b:	mov    ecx,r13d
   140024a1e:	mov    DWORD PTR [rsp+0x28],r12d
   140024a23:	mov    QWORD PTR [rsp+0x20],rdi
   140024a28:	call   QWORD PTR [rip+0x280a]        # 0x140027238
   140024a2e:	cmp    eax,ebx
   140024a30:	je     0x140024a50
   140024a32:	mov    edx,DWORD PTR [rbp+0x4]
   140024a35:	mov    ecx,DWORD PTR [rbp+0x0]
   140024a38:	mov    r9d,r14d
   140024a3b:	mov    r8,rsi
   140024a3e:	mov    DWORD PTR [rsp+0x28],r12d
   140024a43:	mov    QWORD PTR [rsp+0x20],rdi
   140024a48:	call   QWORD PTR [rip+0x270a]        # 0x140027158
   140024a4e:	mov    ebx,eax
   140024a50:	lea    rcx,[rdi-0x10]
   140024a54:	cmp    DWORD PTR [rcx],0xdddd
   140024a5a:	jne    0x140024a61
   140024a5c:	call   0x1400098ac
   140024a61:	lea    rcx,[rsi-0x10]
   140024a65:	cmp    DWORD PTR [rcx],0xdddd
   140024a6b:	jne    0x140024a72
   140024a6d:	call   0x1400098ac
   140024a72:	mov    eax,ebx
   140024a74:	jmp    0x140024b61
   140024a79:	mov    rdi,rbx
   140024a7c:	mov    r13,rbx
   140024a7f:	cmp    r10d,ebx
   140024a82:	jne    0x140024a8f
   140024a84:	mov    rax,QWORD PTR [r14]
   140024a87:	mov    r10d,DWORD PTR [rax+0x14]
   140024a8b:	mov    DWORD PTR [rbp+0x0],r10d
   140024a8f:	mov    r12d,DWORD PTR [rbp+0xb8]
   140024a96:	cmp    r12d,ebx
   140024a99:	jne    0x140024aa2
   140024a9b:	mov    rax,QWORD PTR [r14]
   140024a9e:	mov    r12d,DWORD PTR [rax+0x4]
   140024aa2:	mov    ecx,r10d
   140024aa5:	call   0x140023d64
   140024aaa:	mov    r14d,eax
   140024aad:	cmp    eax,esi
   140024aaf:	je     0x1400247b5
   140024ab5:	cmp    eax,r12d
   140024ab8:	je     0x140024b1f
   140024aba:	lea    r9,[rbp+0xa0]
   140024ac1:	mov    r8,r15
   140024ac4:	mov    edx,eax
   140024ac6:	mov    ecx,r12d
   140024ac9:	mov    DWORD PTR [rsp+0x28],ebx
   140024acd:	mov    QWORD PTR [rsp+0x20],rbx
   140024ad2:	call   0x140023db8
   140024ad7:	mov    rdi,rax
   140024ada:	cmp    rax,rbx
   140024add:	je     0x1400247b5
   140024ae3:	mov    r8,QWORD PTR [rbp+0x8]
   140024ae7:	lea    r9,[rbp+0xb0]
   140024aee:	mov    edx,r14d
   140024af1:	mov    ecx,r12d
   140024af4:	mov    DWORD PTR [rsp+0x28],ebx
   140024af8:	mov    QWORD PTR [rsp+0x20],rbx
   140024afd:	call   0x140023db8
   140024b02:	mov    r13,rax
   140024b05:	cmp    rax,rbx
   140024b08:	jne    0x140024b17
   140024b0a:	mov    rcx,rdi
   140024b0d:	call   0x1400098ac
   140024b12:	jmp    0x1400247b5
   140024b17:	mov    r15,rdi
   140024b1a:	mov    r8,rax
   140024b1d:	jmp    0x140024b23
   140024b1f:	mov    r8,QWORD PTR [rbp+0x8]
   140024b23:	mov    eax,DWORD PTR [rbp+0xb0]
   140024b29:	mov    r9d,DWORD PTR [rbp+0xa0]
   140024b30:	mov    edx,DWORD PTR [rbp+0x4]
   140024b33:	mov    ecx,DWORD PTR [rbp+0x0]
   140024b36:	mov    DWORD PTR [rsp+0x28],eax
   140024b3a:	mov    QWORD PTR [rsp+0x20],r8
   140024b3f:	mov    r8,r15
   140024b42:	call   QWORD PTR [rip+0x2608]        # 0x140027150
   140024b48:	mov    esi,eax
   140024b4a:	cmp    rdi,rbx
   140024b4d:	je     0x140024b5f
   140024b4f:	mov    rcx,rdi
   140024b52:	call   0x1400098ac
   140024b57:	mov    rcx,r13
   140024b5a:	call   0x1400098ac
   140024b5f:	mov    eax,esi
   140024b61:	mov    rcx,QWORD PTR [rbp+0x28]
   140024b65:	xor    rcx,rbp
   140024b68:	call   0x140009080
   140024b6d:	lea    rsp,[rbp+0x38]
   140024b71:	pop    r15
   140024b73:	pop    r14
   140024b75:	pop    r13
   140024b77:	pop    r12
   140024b79:	pop    rdi
   140024b7a:	pop    rsi
   140024b7b:	pop    rbx
   140024b7c:	pop    rbp
   140024b7d:	ret    
   140024b7e:	int3   
   140024b7f:	int3   
   140024b80:	mov    QWORD PTR [rsp+0x8],rbx
   140024b85:	mov    QWORD PTR [rsp+0x10],rsi
   140024b8a:	push   rdi
   140024b8b:	sub    rsp,0x60
   140024b8f:	mov    esi,edx
   140024b91:	mov    rdx,rcx
   140024b94:	lea    rcx,[rsp+0x40]
   140024b99:	mov    rbx,r9
   140024b9c:	mov    edi,r8d
   140024b9f:	call   0x1400094b4
   140024ba4:	mov    r11d,DWORD PTR [rsp+0xa8]
   140024bac:	mov    eax,DWORD PTR [rsp+0xa0]
   140024bb3:	lea    rcx,[rsp+0x40]
   140024bb8:	mov    DWORD PTR [rsp+0x38],r11d
   140024bbd:	mov    DWORD PTR [rsp+0x30],eax
   140024bc1:	mov    rax,QWORD PTR [rsp+0x98]
   140024bc9:	mov    QWORD PTR [rsp+0x28],rax
   140024bce:	mov    eax,DWORD PTR [rsp+0x90]
   140024bd5:	mov    r9,rbx
   140024bd8:	mov    r8d,edi
   140024bdb:	mov    edx,esi
   140024bdd:	mov    DWORD PTR [rsp+0x20],eax
   140024be1:	call   0x1400246a4
   140024be6:	cmp    BYTE PTR [rsp+0x58],0x0
   140024beb:	je     0x140024bf9
   140024bed:	mov    rcx,QWORD PTR [rsp+0x50]
   140024bf2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024bf9:	mov    rbx,QWORD PTR [rsp+0x70]
   140024bfe:	mov    rsi,QWORD PTR [rsp+0x78]
   140024c03:	add    rsp,0x60
   140024c07:	pop    rdi
   140024c08:	ret    
   140024c09:	int3   
   140024c0a:	int3   
   140024c0b:	int3   
   140024c0c:	mov    QWORD PTR [rsp+0x8],rbx
   140024c11:	mov    QWORD PTR [rsp+0x10],rsi
   140024c16:	push   rdi
   140024c17:	sub    rsp,0x60
   140024c1b:	mov    rsi,rcx
   140024c1e:	mov    rdi,rdx
   140024c21:	lea    rcx,[rsp+0x40]
   140024c26:	mov    rdx,r9
   140024c29:	mov    rbx,r8
   140024c2c:	call   0x1400094b4
   140024c31:	test   rbx,rbx
   140024c34:	jne    0x140024c4f
   140024c36:	cmp    BYTE PTR [rsp+0x58],bl
   140024c3a:	je     0x140024c48
   140024c3c:	mov    rax,QWORD PTR [rsp+0x50]
   140024c41:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024c48:	xor    eax,eax
   140024c4a:	jmp    0x140024d11
   140024c4f:	test   rsi,rsi
   140024c52:	jne    0x140024c91
   140024c54:	call   0x14000f574
   140024c59:	and    QWORD PTR [rsp+0x20],0x0
   140024c5f:	xor    r9d,r9d
   140024c62:	xor    r8d,r8d
   140024c65:	xor    edx,edx
   140024c67:	xor    ecx,ecx
   140024c69:	mov    DWORD PTR [rax],0x16
   140024c6f:	call   0x14000e4d8
   140024c74:	cmp    BYTE PTR [rsp+0x58],0x0
   140024c79:	je     0x140024c87
   140024c7b:	mov    rax,QWORD PTR [rsp+0x50]
   140024c80:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024c87:	mov    eax,0x7fffffff
   140024c8c:	jmp    0x140024d11
   140024c91:	test   rdi,rdi
   140024c94:	je     0x140024c54
   140024c96:	cmp    rbx,0x7fffffff
   140024c9d:	ja     0x140024c54
   140024c9f:	mov    rax,QWORD PTR [rsp+0x40]
   140024ca4:	mov    edx,DWORD PTR [rax+0x10]
   140024ca7:	test   edx,edx
   140024ca9:	jne    0x140024cc0
   140024cab:	lea    r9,[rsp+0x40]
   140024cb0:	mov    r8,rbx
   140024cb3:	mov    rdx,rdi
   140024cb6:	mov    rcx,rsi
   140024cb9:	call   0x140024088
   140024cbe:	jmp    0x140024cfe
   140024cc0:	mov    eax,DWORD PTR [rax+0x8]
   140024cc3:	lea    rcx,[rsp+0x40]
   140024cc8:	mov    r9,rsi
   140024ccb:	mov    DWORD PTR [rsp+0x38],eax
   140024ccf:	mov    DWORD PTR [rsp+0x30],ebx
   140024cd3:	mov    r8d,0x1001
   140024cd9:	mov    QWORD PTR [rsp+0x28],rdi
   140024cde:	mov    DWORD PTR [rsp+0x20],ebx
   140024ce2:	call   0x140024b80
   140024ce7:	test   eax,eax
   140024ce9:	jne    0x140024cfb
   140024ceb:	call   0x14000f574
   140024cf0:	mov    DWORD PTR [rax],0x16
   140024cf6:	jmp    0x140024c74
   140024cfb:	add    eax,0xfffffffe
   140024cfe:	cmp    BYTE PTR [rsp+0x58],0x0
   140024d03:	je     0x140024d11
   140024d05:	mov    rcx,QWORD PTR [rsp+0x50]
   140024d0a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024d11:	mov    rbx,QWORD PTR [rsp+0x70]
   140024d16:	mov    rsi,QWORD PTR [rsp+0x78]
   140024d1b:	add    rsp,0x60
   140024d1f:	pop    rdi
   140024d20:	ret    
   140024d21:	int3   
   140024d22:	int3   
   140024d23:	int3   
   140024d24:	sub    rsp,0x28
   140024d28:	cmp    DWORD PTR [rip+0x11291],0x0        # 0x140035fc0
   140024d2f:	jne    0x140024d38
   140024d31:	call   0x14002419c
   140024d36:	jmp    0x140024d40
   140024d38:	xor    r9d,r9d
   140024d3b:	call   0x140024c0c
   140024d40:	add    rsp,0x28
   140024d44:	ret    
   140024d45:	int3   
   140024d46:	int3   
   140024d47:	int3   
   140024d48:	mov    QWORD PTR [rsp+0x8],rbx
   140024d4d:	mov    QWORD PTR [rsp+0x18],rsi
   140024d52:	mov    QWORD PTR [rsp+0x20],rdi
   140024d57:	push   r12
   140024d59:	push   r13
   140024d5b:	push   r14
   140024d5d:	sub    rsp,0x30
   140024d61:	mov    r12,r9
   140024d64:	mov    r13,r8
   140024d67:	mov    rsi,rdx
   140024d6a:	mov    r14,rcx
   140024d6d:	call   0x14000a3b0
   140024d72:	lea    rdi,[rax+0x30]
   140024d76:	mov    QWORD PTR [rsp+0x58],rdi
   140024d7b:	xor    eax,eax
   140024d7d:	test   rsi,rsi
   140024d80:	setne  al
   140024d83:	test   eax,eax
   140024d85:	jne    0x140024dac
   140024d87:	call   0x14000f574
   140024d8c:	mov    DWORD PTR [rax],0x16
   140024d92:	and    QWORD PTR [rsp+0x20],0x0
   140024d98:	xor    r9d,r9d
   140024d9b:	xor    r8d,r8d
   140024d9e:	xor    edx,edx
   140024da0:	xor    ecx,ecx
   140024da2:	call   0x14000e4d8
   140024da7:	or     eax,0xffffffff
   140024daa:	jmp    0x140024de5
   140024dac:	mov    rcx,rdi
   140024daf:	call   0x14000a4c4
   140024db4:	nop
   140024db5:	mov    rcx,rdi
   140024db8:	call   0x140013fc8
   140024dbd:	mov    ebx,eax
   140024dbf:	mov    r9,r12
   140024dc2:	mov    r8,r13
   140024dc5:	mov    rdx,rsi
   140024dc8:	mov    rcx,rdi
   140024dcb:	call   r14
   140024dce:	mov    esi,eax
   140024dd0:	mov    rdx,rdi
   140024dd3:	mov    ecx,ebx
   140024dd5:	call   0x14001409c
   140024dda:	nop
   140024ddb:	mov    rcx,rdi
   140024dde:	call   0x14000a554
   140024de3:	mov    eax,esi
   140024de5:	mov    rbx,QWORD PTR [rsp+0x50]
   140024dea:	mov    rsi,QWORD PTR [rsp+0x60]
   140024def:	mov    rdi,QWORD PTR [rsp+0x68]
   140024df4:	add    rsp,0x30
   140024df8:	pop    r14
   140024dfa:	pop    r13
   140024dfc:	pop    r12
   140024dfe:	ret    
   140024dff:	int3   
   140024e00:	mov    r9,r8
   140024e03:	mov    r8,rdx
   140024e06:	mov    rdx,rcx
   140024e09:	lea    rcx,[rip+0xfffffffffffef404]        # 0x140014214
   140024e10:	jmp    0x140024d48
   140024e15:	int3   
   140024e16:	int3   
   140024e17:	int3   
   140024e18:	mov    r9,r8
   140024e1b:	mov    r8,rdx
   140024e1e:	mov    rdx,rcx
   140024e21:	lea    rcx,[rip+0xffffffffffffa324]        # 0x14001f14c
   140024e28:	jmp    0x140024d48
   140024e2d:	int3   
   140024e2e:	int3   
   140024e2f:	int3   
   140024e30:	mov    r9,r8
   140024e33:	mov    r8,rdx
   140024e36:	mov    rdx,rcx
   140024e39:	lea    rcx,[rip+0xffffffffffffb094]        # 0x14001fed4
   140024e40:	jmp    0x140024d48
   140024e45:	int3   
   140024e46:	int3   
   140024e47:	int3   
   140024e48:	mov    r9,rdx
   140024e4b:	mov    rdx,rcx
   140024e4e:	lea    rcx,[rip+0xfffffffffffef3bf]        # 0x140014214
   140024e55:	xor    r8d,r8d
   140024e58:	jmp    0x140024d48
   140024e5d:	int3   
   140024e5e:	int3   
   140024e5f:	int3   
   140024e60:	mov    r9,rdx
   140024e63:	mov    rdx,rcx
   140024e66:	lea    rcx,[rip+0xffffffffffffa2df]        # 0x14001f14c
   140024e6d:	xor    r8d,r8d
   140024e70:	jmp    0x140024d48
   140024e75:	int3   
   140024e76:	int3   
   140024e77:	int3   
   140024e78:	mov    r9,rdx
   140024e7b:	mov    rdx,rcx
   140024e7e:	lea    rcx,[rip+0xffffffffffffb04f]        # 0x14001fed4
   140024e85:	xor    r8d,r8d
   140024e88:	jmp    0x140024d48
   140024e8d:	int3   
   140024e8e:	int3   
   140024e8f:	int3   
   140024e90:	sub    rsp,0x48
   140024e94:	and    QWORD PTR [rsp+0x30],0x0
   140024e9a:	and    DWORD PTR [rsp+0x28],0x0
   140024e9f:	mov    r8d,0x3
   140024ea5:	lea    rcx,[rip+0xadc0]        # 0x14002fc6c
   140024eac:	xor    r9d,r9d
   140024eaf:	mov    edx,0xc0000000
   140024eb4:	mov    DWORD PTR [rsp+0x20],r8d
   140024eb9:	call   QWORD PTR [rip+0x23a9]        # 0x140027268
   140024ebf:	mov    QWORD PTR [rip+0x108e2],rax        # 0x1400357a8
   140024ec6:	add    rsp,0x48
   140024eca:	ret    
   140024ecb:	int3   
   140024ecc:	sub    rsp,0x48
   140024ed0:	and    QWORD PTR [rsp+0x30],0x0
   140024ed6:	and    DWORD PTR [rsp+0x28],0x0
   140024edb:	mov    r8d,0x3
   140024ee1:	lea    rcx,[rip+0xad90]        # 0x14002fc78
   140024ee8:	xor    r9d,r9d
   140024eeb:	mov    edx,0x40000000
   140024ef0:	mov    DWORD PTR [rsp+0x20],r8d
   140024ef5:	call   QWORD PTR [rip+0x236d]        # 0x140027268
   140024efb:	mov    QWORD PTR [rip+0x108ae],rax        # 0x1400357b0
   140024f02:	add    rsp,0x48
   140024f06:	ret    
   140024f07:	int3   
   140024f08:	sub    rsp,0x28
   140024f0c:	mov    rcx,QWORD PTR [rip+0x1089d]        # 0x1400357b0
   140024f13:	cmp    rcx,0xffffffffffffffff
   140024f17:	je     0x140024f25
   140024f19:	cmp    rcx,0xfffffffffffffffe
   140024f1d:	je     0x140024f25
   140024f1f:	call   QWORD PTR [rip+0x2363]        # 0x140027288
   140024f25:	mov    rcx,QWORD PTR [rip+0x1087c]        # 0x1400357a8
   140024f2c:	cmp    rcx,0xffffffffffffffff
   140024f30:	je     0x140024f3e
   140024f32:	cmp    rcx,0xfffffffffffffffe
   140024f36:	je     0x140024f3e
   140024f38:	call   QWORD PTR [rip+0x234a]        # 0x140027288
   140024f3e:	add    rsp,0x28
   140024f42:	ret    
   140024f43:	int3   
   140024f44:	sub    rsp,0x28
   140024f48:	cmp    r9d,0xffffffff
   140024f4c:	mov    eax,r9d
   140024f4f:	mov    r10,r8
   140024f52:	mov    r11d,edx
   140024f55:	jge    0x140024f5b
   140024f57:	xor    eax,eax
   140024f59:	jmp    0x140024f6f
   140024f5b:	mov    r9,QWORD PTR [rsp+0x50]
   140024f60:	mov    r8d,eax
   140024f63:	mov    rdx,r10
   140024f66:	mov    ecx,r11d
   140024f69:	call   QWORD PTR [rip+0x2241]        # 0x1400271b0
   140024f6f:	add    rsp,0x28
   140024f73:	ret    
   140024f74:	mov    QWORD PTR [rsp+0x8],rbx
   140024f79:	mov    QWORD PTR [rsp+0x10],rsi
   140024f7e:	push   rdi
   140024f7f:	sub    rsp,0x40
   140024f83:	mov    esi,edx
   140024f85:	mov    rdx,rcx
   140024f88:	lea    rcx,[rsp+0x20]
   140024f8d:	mov    ebx,r9d
   140024f90:	mov    rdi,r8
   140024f93:	call   0x1400094b4
   140024f98:	cmp    ebx,0xffffffff
   140024f9b:	jge    0x140024fa1
   140024f9d:	xor    eax,eax
   140024f9f:	jmp    0x140024fb4
   140024fa1:	mov    r9,QWORD PTR [rsp+0x70]
   140024fa6:	mov    r8d,ebx
   140024fa9:	mov    rdx,rdi
   140024fac:	mov    ecx,esi
   140024fae:	call   QWORD PTR [rip+0x21fc]        # 0x1400271b0
   140024fb4:	cmp    BYTE PTR [rsp+0x38],0x0
   140024fb9:	je     0x140024fc7
   140024fbb:	mov    rcx,QWORD PTR [rsp+0x30]
   140024fc0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024fc7:	mov    rbx,QWORD PTR [rsp+0x50]
   140024fcc:	mov    rsi,QWORD PTR [rsp+0x58]
   140024fd1:	add    rsp,0x40
   140024fd5:	pop    rdi
   140024fd6:	ret    
   140024fd7:	int3   
   140024fd8:	mov    rax,rsp
   140024fdb:	mov    QWORD PTR [rax+0x8],rbx
   140024fdf:	mov    QWORD PTR [rax+0x10],rbp
   140024fe3:	mov    QWORD PTR [rax+0x18],rsi
   140024fe7:	mov    QWORD PTR [rax+0x20],rdi
   140024feb:	push   r12
   140024fed:	push   r13
   140024fef:	push   r15
   140024ff1:	sub    rsp,0x20
   140024ff5:	mov    rbp,rdx
   140024ff8:	xor    edi,edi
   140024ffa:	xor    edx,edx
   140024ffc:	lea    r8d,[rdi+0x1]
   140025000:	mov    esi,ecx
   140025002:	call   0x140021240
   140025007:	mov    r13,rax
   14002500a:	cmp    rax,0xffffffffffffffff
   14002500e:	je     0x140025060
   140025010:	lea    r8d,[rdi+0x2]
   140025014:	xor    edx,edx
   140025016:	mov    ecx,esi
   140025018:	call   0x140021240
   14002501d:	cmp    rax,0xffffffffffffffff
   140025021:	je     0x140025060
   140025023:	mov    rbx,rbp
   140025026:	sub    rbx,rax
   140025029:	cmp    rbx,rdi
   14002502c:	jle    0x1400250f3
   140025032:	call   QWORD PTR [rip+0x22a0]        # 0x1400272d8
   140025038:	mov    r15d,0x1000
   14002503e:	lea    edx,[rdi+0x8]
   140025041:	mov    rcx,rax
   140025044:	mov    r8,r15
   140025047:	call   QWORD PTR [rip+0x22ab]        # 0x1400272f8
   14002504d:	mov    rbp,rax
   140025050:	cmp    rax,rdi
   140025053:	jne    0x140025086
   140025055:	call   0x14000f574
   14002505a:	mov    DWORD PTR [rax],0xc
   140025060:	call   0x14000f574
   140025065:	mov    eax,DWORD PTR [rax]
   140025067:	mov    rbx,QWORD PTR [rsp+0x40]
   14002506c:	mov    rbp,QWORD PTR [rsp+0x48]
   140025071:	mov    rsi,QWORD PTR [rsp+0x50]
   140025076:	mov    rdi,QWORD PTR [rsp+0x58]
   14002507b:	add    rsp,0x20
   14002507f:	pop    r15
   140025081:	pop    r13
   140025083:	pop    r12
   140025085:	ret    
   140025086:	mov    edx,0x8000
   14002508b:	mov    ecx,esi
   14002508d:	call   0x1400254a8
   140025092:	mov    r12d,eax
   140025095:	mov    r8d,ebx
   140025098:	cmp    rbx,r15
   14002509b:	mov    rdx,rbp
   14002509e:	cmovge r8d,r15d
   1400250a2:	mov    ecx,esi
   1400250a4:	call   0x140017cf4
   1400250a9:	cmp    eax,0xffffffff
   1400250ac:	je     0x1400250ba
   1400250ae:	cdqe   
   1400250b0:	sub    rbx,rax
   1400250b3:	cmp    rbx,rdi
   1400250b6:	jle    0x1400250d3
   1400250b8:	jmp    0x140025095
   1400250ba:	call   0x14000f594
   1400250bf:	cmp    DWORD PTR [rax],0x5
   1400250c2:	jne    0x1400250cf
   1400250c4:	call   0x14000f574
   1400250c9:	mov    DWORD PTR [rax],0xd
   1400250cf:	or     rdi,0xffffffffffffffff
   1400250d3:	mov    edx,r12d
   1400250d6:	mov    ecx,esi
   1400250d8:	call   0x1400254a8
   1400250dd:	call   QWORD PTR [rip+0x21f5]        # 0x1400272d8
   1400250e3:	mov    r8,rbp
   1400250e6:	mov    rcx,rax
   1400250e9:	xor    edx,edx
   1400250eb:	call   QWORD PTR [rip+0x21ff]        # 0x1400272f0
   1400250f1:	jmp    0x140025148
   1400250f3:	jge    0x140025152
   1400250f5:	xor    r8d,r8d
   1400250f8:	mov    rdx,rbp
   1400250fb:	mov    ecx,esi
   1400250fd:	call   0x140021240
   140025102:	cmp    rax,0xffffffffffffffff
   140025106:	je     0x140025060
   14002510c:	mov    ecx,esi
   14002510e:	call   0x140013548
   140025113:	mov    rcx,rax
   140025116:	call   QWORD PTR [rip+0x202c]        # 0x140027148
   14002511c:	neg    eax
   14002511e:	sbb    rdi,rdi
   140025121:	neg    rdi
   140025124:	dec    rdi
   140025127:	cmp    rdi,0xffffffffffffffff
   14002512b:	jne    0x140025152
   14002512d:	call   0x14000f574
   140025132:	mov    DWORD PTR [rax],0xd
   140025138:	call   0x14000f594
   14002513d:	mov    rbx,rax
   140025140:	call   QWORD PTR [rip+0x212a]        # 0x140027270
   140025146:	mov    DWORD PTR [rbx],eax
   140025148:	cmp    rdi,0xffffffffffffffff
   14002514c:	je     0x140025060
   140025152:	xor    r8d,r8d
   140025155:	mov    rdx,r13
   140025158:	mov    ecx,esi
   14002515a:	call   0x140021240
   14002515f:	cmp    rax,0xffffffffffffffff
   140025163:	je     0x140025060
   140025169:	xor    eax,eax
   14002516b:	jmp    0x140025067
   140025170:	mov    QWORD PTR [rsp+0x10],rsi
   140025175:	mov    QWORD PTR [rsp+0x20],rdi
   14002517a:	mov    DWORD PTR [rsp+0x8],ecx
   14002517e:	push   r12
   140025180:	push   r13
   140025182:	push   r14
   140025184:	sub    rsp,0x30
   140025188:	mov    rdi,rdx
   14002518b:	movsxd rsi,ecx
   14002518e:	cmp    esi,0xfffffffe
   140025191:	jne    0x1400251a3
   140025193:	call   0x14000f594
   140025198:	and    DWORD PTR [rax],0x0
   14002519b:	lea    eax,[rsi+0xb]
   14002519e:	jmp    0x1400252ac
   1400251a3:	test   ecx,ecx
   1400251a5:	js     0x140025281
   1400251ab:	cmp    esi,DWORD PTR [rip+0x12b9b]        # 0x140037d4c
   1400251b1:	jae    0x140025281
   1400251b7:	mov    r12,rsi
   1400251ba:	mov    r13,rsi
   1400251bd:	sar    r13,0x5
   1400251c1:	lea    r14,[rip+0x12b98]        # 0x140037d60
   1400251c8:	and    r12d,0x1f
   1400251cc:	imul   r12,r12,0x58
   1400251d0:	mov    rax,QWORD PTR [r14+r13*8]
   1400251d4:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   1400251da:	and    ecx,0x1
   1400251dd:	jne    0x14002520f
   1400251df:	call   0x14000f594
   1400251e4:	and    DWORD PTR [rax],0x0
   1400251e7:	call   0x14000f574
   1400251ec:	mov    edi,0x9
   1400251f1:	mov    DWORD PTR [rax],edi
   1400251f3:	and    QWORD PTR [rsp+0x20],0x0
   1400251f9:	xor    r9d,r9d
   1400251fc:	xor    r8d,r8d
   1400251ff:	xor    edx,edx
   140025201:	xor    ecx,ecx
   140025203:	call   0x14000e4d8
   140025208:	mov    eax,edi
   14002520a:	jmp    0x1400252ac
   14002520f:	xor    eax,eax
   140025211:	test   rdx,rdx
   140025214:	setns  al
   140025217:	test   eax,eax
   140025219:	jne    0x140025248
   14002521b:	call   0x14000f594
   140025220:	and    DWORD PTR [rax],0x0
   140025223:	call   0x14000f574
   140025228:	mov    edi,0x16
   14002522d:	mov    DWORD PTR [rax],edi
   14002522f:	and    QWORD PTR [rsp+0x20],0x0
   140025235:	xor    r9d,r9d
   140025238:	xor    r8d,r8d
   14002523b:	xor    edx,edx
   14002523d:	xor    ecx,ecx
   14002523f:	call   0x14000e4d8
   140025244:	mov    eax,edi
   140025246:	jmp    0x1400252ac
   140025248:	mov    ecx,esi
   14002524a:	call   0x1400135cc
   14002524f:	nop
   140025250:	mov    rax,QWORD PTR [r14+r13*8]
   140025254:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14002525a:	je     0x14002526a
   14002525c:	mov    rdx,rdi
   14002525f:	mov    ecx,esi
   140025261:	call   0x140024fd8
   140025266:	mov    edi,eax
   140025268:	jmp    0x140025276
   14002526a:	call   0x14000f574
   14002526f:	mov    edi,0x9
   140025274:	mov    DWORD PTR [rax],edi
   140025276:	mov    ecx,esi
   140025278:	call   0x140013674
   14002527d:	mov    eax,edi
   14002527f:	jmp    0x1400252ac
   140025281:	call   0x14000f594
   140025286:	and    DWORD PTR [rax],0x0
   140025289:	call   0x14000f574
   14002528e:	mov    edi,0x9
   140025293:	mov    DWORD PTR [rax],edi
   140025295:	and    QWORD PTR [rsp+0x20],0x0
   14002529b:	xor    r9d,r9d
   14002529e:	xor    r8d,r8d
   1400252a1:	xor    edx,edx
   1400252a3:	xor    ecx,ecx
   1400252a5:	call   0x14000e4d8
   1400252aa:	mov    eax,edi
   1400252ac:	mov    rsi,QWORD PTR [rsp+0x58]
   1400252b1:	mov    rdi,QWORD PTR [rsp+0x68]
   1400252b6:	add    rsp,0x30
   1400252ba:	pop    r14
   1400252bc:	pop    r13
   1400252be:	pop    r12
   1400252c0:	ret    
   1400252c1:	int3   
   1400252c2:	int3   
   1400252c3:	int3   
   1400252c4:	sub    rsp,0x28
   1400252c8:	movsxd rdx,edx
   1400252cb:	call   0x140025170
   1400252d0:	neg    eax
   1400252d2:	sbb    eax,eax
   1400252d4:	add    rsp,0x28
   1400252d8:	ret    
   1400252d9:	int3   
   1400252da:	int3   
   1400252db:	int3   
   1400252dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400252e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400252e6:	push   rdi
   1400252e7:	sub    rsp,0x20
   1400252eb:	movsxd rbx,ecx
   1400252ee:	mov    edi,r8d
   1400252f1:	mov    esi,edx
   1400252f3:	mov    ecx,ebx
   1400252f5:	call   0x140013548
   1400252fa:	cmp    rax,0xffffffffffffffff
   1400252fe:	jne    0x140025310
   140025300:	call   0x14000f574
   140025305:	mov    DWORD PTR [rax],0x9
   14002530b:	or     eax,0xffffffff
   14002530e:	jmp    0x140025362
   140025310:	mov    r9d,edi
   140025313:	xor    r8d,r8d
   140025316:	mov    edx,esi
   140025318:	mov    rcx,rax
   14002531b:	call   QWORD PTR [rip+0x1eff]        # 0x140027220
   140025321:	mov    edi,eax
   140025323:	cmp    eax,0xffffffff
   140025326:	jne    0x140025330
   140025328:	call   QWORD PTR [rip+0x1f42]        # 0x140027270
   14002532e:	jmp    0x140025332
   140025330:	xor    eax,eax
   140025332:	test   eax,eax
   140025334:	je     0x14002533f
   140025336:	mov    ecx,eax
   140025338:	call   0x14000f5b4
   14002533d:	jmp    0x14002530b
   14002533f:	mov    rcx,rbx
   140025342:	mov    rax,rbx
   140025345:	lea    rdx,[rip+0x12a14]        # 0x140037d60
   14002534c:	sar    rax,0x5
   140025350:	and    ecx,0x1f
   140025353:	mov    rax,QWORD PTR [rdx+rax*8]
   140025357:	imul   rcx,rcx,0x58
   14002535b:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140025360:	mov    eax,edi
   140025362:	mov    rbx,QWORD PTR [rsp+0x30]
   140025367:	mov    rsi,QWORD PTR [rsp+0x38]
   14002536c:	add    rsp,0x20
   140025370:	pop    rdi
   140025371:	ret    
   140025372:	int3   
   140025373:	int3   
   140025374:	mov    QWORD PTR [rsp+0x10],rbx
   140025379:	mov    QWORD PTR [rsp+0x18],rsi
   14002537e:	mov    DWORD PTR [rsp+0x8],ecx
   140025382:	push   rdi
   140025383:	push   r12
   140025385:	push   r13
   140025387:	push   r14
   140025389:	push   r15
   14002538b:	sub    rsp,0x30
   14002538f:	mov    r12d,r8d
   140025392:	mov    r13d,edx
   140025395:	movsxd rbx,ecx
   140025398:	cmp    ebx,0xfffffffe
   14002539b:	jne    0x1400253b9
   14002539d:	call   0x14000f594
   1400253a2:	xor    edi,edi
   1400253a4:	mov    DWORD PTR [rax],edi
   1400253a6:	call   0x14000f574
   1400253ab:	mov    DWORD PTR [rax],0x9
   1400253b1:	or     eax,0xffffffff
   1400253b4:	jmp    0x14002548d
   1400253b9:	xor    edi,edi
   1400253bb:	cmp    ebx,edi
   1400253bd:	jl     0x140025464
   1400253c3:	cmp    ebx,DWORD PTR [rip+0x12983]        # 0x140037d4c
   1400253c9:	jae    0x140025464
   1400253cf:	mov    rsi,rbx
   1400253d2:	mov    r14,rbx
   1400253d5:	sar    r14,0x5
   1400253d9:	lea    r15,[rip+0x12980]        # 0x140037d60
   1400253e0:	and    esi,0x1f
   1400253e3:	imul   rsi,rsi,0x58
   1400253e7:	mov    rax,QWORD PTR [r15+r14*8]
   1400253eb:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400253f0:	and    ecx,0x1
   1400253f3:	jne    0x140025420
   1400253f5:	call   0x14000f594
   1400253fa:	mov    DWORD PTR [rax],edi
   1400253fc:	call   0x14000f574
   140025401:	mov    DWORD PTR [rax],0x9
   140025407:	mov    QWORD PTR [rsp+0x20],rdi
   14002540c:	xor    r9d,r9d
   14002540f:	xor    r8d,r8d
   140025412:	xor    edx,edx
   140025414:	xor    ecx,ecx
   140025416:	call   0x14000e4d8
   14002541b:	or     eax,0xffffffff
   14002541e:	jmp    0x14002548d
   140025420:	mov    ecx,ebx
   140025422:	call   0x1400135cc
   140025427:	nop
   140025428:	mov    rax,QWORD PTR [r15+r14*8]
   14002542c:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140025431:	je     0x140025444
   140025433:	mov    r8d,r12d
   140025436:	mov    edx,r13d
   140025439:	mov    ecx,ebx
   14002543b:	call   0x1400252dc
   140025440:	mov    edi,eax
   140025442:	jmp    0x140025459
   140025444:	call   0x14000f574
   140025449:	mov    DWORD PTR [rax],0x9
   14002544f:	call   0x14000f594
   140025454:	mov    DWORD PTR [rax],edi
   140025456:	or     edi,0xffffffff
   140025459:	mov    ecx,ebx
   14002545b:	call   0x140013674
   140025460:	mov    eax,edi
   140025462:	jmp    0x14002548d
   140025464:	call   0x14000f594
   140025469:	mov    DWORD PTR [rax],edi
   14002546b:	call   0x14000f574
   140025470:	mov    DWORD PTR [rax],0x9
   140025476:	mov    QWORD PTR [rsp+0x20],rdi
   14002547b:	xor    r9d,r9d
   14002547e:	xor    r8d,r8d
   140025481:	xor    edx,edx
   140025483:	xor    ecx,ecx
   140025485:	call   0x14000e4d8
   14002548a:	or     eax,0xffffffff
   14002548d:	mov    rbx,QWORD PTR [rsp+0x68]
   140025492:	mov    rsi,QWORD PTR [rsp+0x70]
   140025497:	add    rsp,0x30
   14002549b:	pop    r15
   14002549d:	pop    r14
   14002549f:	pop    r13
   1400254a1:	pop    r12
   1400254a3:	pop    rdi
   1400254a4:	ret    
   1400254a5:	int3   
   1400254a6:	int3   
   1400254a7:	int3   
   1400254a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400254ad:	movsxd r8,ecx
   1400254b0:	lea    rbx,[rip+0x128a9]        # 0x140037d60
   1400254b7:	mov    r9,r8
   1400254ba:	and    r8d,0x1f
   1400254be:	sar    r9,0x5
   1400254c2:	imul   r8,r8,0x58
   1400254c6:	mov    rcx,QWORD PTR [rbx+r9*8]
   1400254ca:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   1400254cf:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   1400254d5:	add    al,al
   1400254d7:	and    r11d,0x80
   1400254de:	movsx  r10d,al
   1400254e2:	sar    r10d,1
   1400254e5:	cmp    edx,0x4000
   1400254eb:	je     0x140025545
   1400254ed:	cmp    edx,0x8000
   1400254f3:	je     0x14002553d
   1400254f5:	cmp    edx,0x10000
   1400254fb:	je     0x140025525
   1400254fd:	cmp    edx,0x20000
   140025503:	je     0x140025525
   140025505:	cmp    edx,0x40000
   14002550b:	jne    0x140025555
   14002550d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140025513:	mov    rax,QWORD PTR [rbx+r9*8]
   140025517:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14002551d:	or     BYTE PTR [rax+r8*1+0x38],0x1
   140025523:	jmp    0x140025555
   140025525:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14002552b:	mov    rax,QWORD PTR [rbx+r9*8]
   14002552f:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140025535:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14002553b:	jmp    0x140025555
   14002553d:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   140025543:	jmp    0x140025555
   140025545:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14002554b:	mov    rcx,QWORD PTR [rbx+r9*8]
   14002554f:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   140025555:	test   r11d,r11d
   140025558:	jne    0x140025561
   14002555a:	mov    eax,0x8000
   14002555f:	jmp    0x140025570
   140025561:	neg    r10d
   140025564:	sbb    eax,eax
   140025566:	and    eax,0xc000
   14002556b:	add    eax,0x4000
   140025570:	mov    rbx,QWORD PTR [rsp+0x8]
   140025575:	ret    
   140025576:	int3   
   140025577:	int3   
   140025578:	sub    rsp,0x38
   14002557c:	cmp    ecx,0x4000
   140025582:	je     0x1400255bb
   140025584:	cmp    ecx,0x8000
   14002558a:	je     0x1400255bb
   14002558c:	cmp    ecx,0x10000
   140025592:	je     0x1400255bb
   140025594:	call   0x14000f574
   140025599:	and    QWORD PTR [rsp+0x20],0x0
   14002559f:	xor    r9d,r9d
   1400255a2:	xor    r8d,r8d
   1400255a5:	xor    edx,edx
   1400255a7:	xor    ecx,ecx
   1400255a9:	mov    DWORD PTR [rax],0x16
   1400255af:	call   0x14000e4d8
   1400255b4:	mov    eax,0x16
   1400255b9:	jmp    0x1400255c3
   1400255bb:	xchg   DWORD PTR [rip+0x11143],ecx        # 0x140036704
   1400255c1:	xor    eax,eax
   1400255c3:	add    rsp,0x38
   1400255c7:	ret    
   1400255c8:	sub    rsp,0x38
   1400255cc:	test   rcx,rcx
   1400255cf:	jne    0x1400255f8
   1400255d1:	call   0x14000f574
   1400255d6:	and    QWORD PTR [rsp+0x20],0x0
   1400255dc:	xor    r9d,r9d
   1400255df:	xor    r8d,r8d
   1400255e2:	xor    edx,edx
   1400255e4:	xor    ecx,ecx
   1400255e6:	mov    DWORD PTR [rax],0x16
   1400255ec:	call   0x14000e4d8
   1400255f1:	mov    eax,0x16
   1400255f6:	jmp    0x140025602
   1400255f8:	mov    eax,DWORD PTR [rip+0x11106]        # 0x140036704
   1400255fe:	mov    DWORD PTR [rcx],eax
   140025600:	xor    eax,eax
   140025602:	add    rsp,0x38
   140025606:	ret    
   140025607:	int3   
   140025608:	mov    QWORD PTR [rsp+0x18],rbx
   14002560d:	mov    QWORD PTR [rsp+0x20],rsi
   140025612:	mov    DWORD PTR [rsp+0x8],ecx
   140025616:	push   rdi
   140025617:	push   r12
   140025619:	push   r13
   14002561b:	sub    rsp,0x30
   14002561f:	mov    ebx,edx
   140025621:	movsxd rdi,ecx
   140025624:	cmp    edx,0x4000
   14002562a:	je     0x140025674
   14002562c:	cmp    edx,0x8000
   140025632:	je     0x140025674
   140025634:	cmp    edx,0x10000
   14002563a:	je     0x140025674
   14002563c:	cmp    edx,0x40000
   140025642:	je     0x140025674
   140025644:	cmp    edx,0x20000
   14002564a:	je     0x140025674
   14002564c:	call   0x14000f574
   140025651:	mov    DWORD PTR [rax],0x16
   140025657:	and    QWORD PTR [rsp+0x20],0x0
   14002565d:	xor    r9d,r9d
   140025660:	xor    r8d,r8d
   140025663:	xor    edx,edx
   140025665:	xor    ecx,ecx
   140025667:	call   0x14000e4d8
   14002566c:	or     eax,0xffffffff
   14002566f:	jmp    0x140025749
   140025674:	cmp    edi,0xfffffffe
   140025677:	jne    0x14002568c
   140025679:	call   0x14000f574
   14002567e:	mov    DWORD PTR [rax],0x9
   140025684:	or     eax,0xffffffff
   140025687:	jmp    0x140025749
   14002568c:	test   ecx,ecx
   14002568e:	js     0x140025726
   140025694:	cmp    edi,DWORD PTR [rip+0x126b2]        # 0x140037d4c
   14002569a:	jae    0x140025726
   1400256a0:	mov    rsi,rdi
   1400256a3:	mov    r12,rdi
   1400256a6:	sar    r12,0x5
   1400256aa:	lea    r13,[rip+0x126af]        # 0x140037d60
   1400256b1:	and    esi,0x1f
   1400256b4:	imul   rsi,rsi,0x58
   1400256b8:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   1400256bd:	movsx  ecx,BYTE PTR [rsi+rax*1+0x8]
   1400256c2:	and    ecx,0x1
   1400256c5:	jne    0x1400256ec
   1400256c7:	call   0x14000f574
   1400256cc:	mov    DWORD PTR [rax],0x9
   1400256d2:	and    QWORD PTR [rsp+0x20],0x0
   1400256d8:	xor    r9d,r9d
   1400256db:	xor    r8d,r8d
   1400256de:	xor    edx,edx
   1400256e0:	xor    ecx,ecx
   1400256e2:	call   0x14000e4d8
   1400256e7:	or     eax,0xffffffff
   1400256ea:	jmp    0x140025749
   1400256ec:	mov    ecx,edi
   1400256ee:	call   0x1400135cc
   1400256f3:	nop
   1400256f4:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   1400256f9:	test   BYTE PTR [rsi+rax*1+0x8],0x1
   1400256fe:	je     0x14002570d
   140025700:	mov    edx,ebx
   140025702:	mov    ecx,edi
   140025704:	call   0x1400254a8
   140025709:	mov    ebx,eax
   14002570b:	jmp    0x14002571b
   14002570d:	call   0x14000f574
   140025712:	mov    DWORD PTR [rax],0x9
   140025718:	or     ebx,0xffffffff
   14002571b:	mov    ecx,edi
   14002571d:	call   0x140013674
   140025722:	mov    eax,ebx
   140025724:	jmp    0x140025749
   140025726:	call   0x14000f574
   14002572b:	mov    DWORD PTR [rax],0x9
   140025731:	and    QWORD PTR [rsp+0x20],0x0
   140025737:	xor    r9d,r9d
   14002573a:	xor    r8d,r8d
   14002573d:	xor    edx,edx
   14002573f:	xor    ecx,ecx
   140025741:	call   0x14000e4d8
   140025746:	or     eax,0xffffffff
   140025749:	mov    rbx,QWORD PTR [rsp+0x60]
   14002574e:	mov    rsi,QWORD PTR [rsp+0x68]
   140025753:	add    rsp,0x30
   140025757:	pop    r13
   140025759:	pop    r12
   14002575b:	pop    rdi
   14002575c:	ret    
   14002575d:	int3   
   14002575e:	jmp    QWORD PTR [rip+0x1b84]        # 0x1400272e8
   140025764:	jmp    QWORD PTR [rip+0x1b86]        # 0x1400272f0
   14002576a:	jmp    QWORD PTR [rip+0x1b88]        # 0x1400272f8
   140025770:	jmp    QWORD PTR [rip+0x1b8a]        # 0x140027300
   140025776:	jmp    QWORD PTR [rip+0x1b8c]        # 0x140027308
   14002577c:	jmp    QWORD PTR [rip+0x1b8e]        # 0x140027310
   140025782:	jmp    QWORD PTR [rip+0x1b90]        # 0x140027318
   140025788:	jmp    QWORD PTR [rip+0x1b92]        # 0x140027320
   14002578e:	jmp    QWORD PTR [rip+0x1b94]        # 0x140027328
   140025794:	jmp    QWORD PTR [rip+0x1b96]        # 0x140027330
   14002579a:	jmp    QWORD PTR [rip+0x1b98]        # 0x140027338
   1400257a0:	jmp    QWORD PTR [rip+0x1b9a]        # 0x140027340
   1400257a6:	jmp    QWORD PTR [rip+0x1b9c]        # 0x140027348
   1400257ac:	jmp    QWORD PTR [rip+0x1b9e]        # 0x140027350
   1400257b2:	jmp    QWORD PTR [rip+0x1ba0]        # 0x140027358
   1400257b8:	jmp    QWORD PTR [rip+0x1ba2]        # 0x140027360
   1400257be:	jmp    QWORD PTR [rip+0x1ba4]        # 0x140027368
   1400257c4:	jmp    QWORD PTR [rip+0x1ba6]        # 0x140027370
   1400257ca:	jmp    QWORD PTR [rip+0x1ba8]        # 0x140027378
   1400257d0:	jmp    QWORD PTR [rip+0x1baa]        # 0x140027380
   1400257d6:	jmp    QWORD PTR [rip+0x1bac]        # 0x140027388
   1400257dc:	jmp    QWORD PTR [rip+0x1bae]        # 0x140027390
   1400257e2:	jmp    QWORD PTR [rip+0x1bb0]        # 0x140027398
   1400257e8:	jmp    QWORD PTR [rip+0x1bb2]        # 0x1400273a0
   1400257ee:	jmp    QWORD PTR [rip+0x1bb4]        # 0x1400273a8
   1400257f4:	jmp    QWORD PTR [rip+0x1bb6]        # 0x1400273b0
   1400257fa:	jmp    QWORD PTR [rip+0x1bb8]        # 0x1400273b8
   140025800:	jmp    QWORD PTR [rip+0x1bba]        # 0x1400273c0
   140025806:	jmp    QWORD PTR [rip+0x1bbc]        # 0x1400273c8
   14002580c:	jmp    QWORD PTR [rip+0x1bbe]        # 0x1400273d0
   140025812:	jmp    QWORD PTR [rip+0x1bc0]        # 0x1400273d8
   140025818:	jmp    QWORD PTR [rip+0x1bc2]        # 0x1400273e0
   14002581e:	jmp    QWORD PTR [rip+0x1bc4]        # 0x1400273e8
   140025824:	jmp    QWORD PTR [rip+0x1bc6]        # 0x1400273f0
   14002582a:	jmp    QWORD PTR [rip+0x1bc8]        # 0x1400273f8
   140025830:	jmp    QWORD PTR [rip+0x1bca]        # 0x140027400
   140025836:	jmp    QWORD PTR [rip+0x1bcc]        # 0x140027408
   14002583c:	jmp    QWORD PTR [rip+0x1bce]        # 0x140027410
   140025842:	jmp    QWORD PTR [rip+0x1bd0]        # 0x140027418
   140025848:	jmp    QWORD PTR [rip+0x1bd2]        # 0x140027420
   14002584e:	jmp    QWORD PTR [rip+0x1bd4]        # 0x140027428
   140025854:	jmp    QWORD PTR [rip+0x1bd6]        # 0x140027430
   14002585a:	jmp    QWORD PTR [rip+0x1bd8]        # 0x140027438
   140025860:	jmp    QWORD PTR [rip+0x1bda]        # 0x140027440
   140025866:	jmp    QWORD PTR [rip+0x1bdc]        # 0x140027448
   14002586c:	jmp    QWORD PTR [rip+0x1a6e]        # 0x1400272e0
   140025872:	jmp    QWORD PTR [rip+0x1a58]        # 0x1400272d0
   140025878:	jmp    QWORD PTR [rip+0x1a4a]        # 0x1400272c8
   14002587e:	jmp    QWORD PTR [rip+0x1a3c]        # 0x1400272c0
   140025884:	jmp    QWORD PTR [rip+0x1a2e]        # 0x1400272b8
   14002588a:	jmp    QWORD PTR [rip+0x1988]        # 0x140027218
   140025890:	jmp    QWORD PTR [rip+0x197a]        # 0x140027210
   140025896:	jmp    QWORD PTR [rip+0x196c]        # 0x140027208
   14002589c:	jmp    QWORD PTR [rip+0x195e]        # 0x140027200
   1400258a2:	jmp    QWORD PTR [rip+0x1950]        # 0x1400271f8
   1400258a8:	jmp    QWORD PTR [rip+0x1942]        # 0x1400271f0
   1400258ae:	jmp    QWORD PTR [rip+0x1934]        # 0x1400271e8
   1400258b4:	jmp    QWORD PTR [rip+0x1926]        # 0x1400271e0
   1400258ba:	jmp    QWORD PTR [rip+0x1918]        # 0x1400271d8
   1400258c0:	jmp    QWORD PTR [rip+0x190a]        # 0x1400271d0
   1400258c6:	jmp    QWORD PTR [rip+0x18fc]        # 0x1400271c8
   1400258cc:	jmp    QWORD PTR [rip+0x18ee]        # 0x1400271c0
   1400258d2:	jmp    QWORD PTR [rip+0x18e0]        # 0x1400271b8
   1400258d8:	jmp    QWORD PTR [rip+0x18d2]        # 0x1400271b0
   1400258de:	jmp    QWORD PTR [rip+0x18c4]        # 0x1400271a8
   1400258e4:	jmp    QWORD PTR [rip+0x18b6]        # 0x1400271a0
   1400258ea:	jmp    QWORD PTR [rip+0x18a8]        # 0x140027198
   1400258f0:	jmp    QWORD PTR [rip+0x189a]        # 0x140027190
   1400258f6:	jmp    QWORD PTR [rip+0x188c]        # 0x140027188
   1400258fc:	jmp    QWORD PTR [rip+0x187e]        # 0x140027180
   140025902:	jmp    QWORD PTR [rip+0x1870]        # 0x140027178
   140025908:	jmp    QWORD PTR [rip+0x1862]        # 0x140027170
   14002590e:	jmp    QWORD PTR [rip+0x1854]        # 0x140027168
   140025914:	jmp    QWORD PTR [rip+0x193e]        # 0x140027258
   14002591a:	jmp    QWORD PTR [rip+0x1838]        # 0x140027158
   140025920:	jmp    QWORD PTR [rip+0x182a]        # 0x140027150
   140025926:	jmp    QWORD PTR [rip+0x181c]        # 0x140027148
   14002592c:	jmp    QWORD PTR [rip+0x19a6]        # 0x1400272d8
   140025932:	int3   
   140025933:	int3   
   140025934:	rex push rbx
   140025936:	sub    rsp,0x30
   14002593a:	mov    r10,r9
   14002593d:	mov    ebx,ecx
   14002593f:	test   ecx,ecx
   140025941:	je     0x14002596d
   140025943:	cmp    ecx,edx
   140025945:	je     0x14002594c
   140025947:	cmp    ecx,r8d
   14002594a:	jne    0x14002596d
   14002594c:	mov    rax,QWORD PTR [rsp+0x78]
   140025951:	mov    r9d,DWORD PTR [rsp+0x70]
   140025956:	mov    r8,QWORD PTR [rsp+0x68]
   14002595b:	mov    rdx,QWORD PTR [rsp+0x60]
   140025960:	mov    rcx,r10
   140025963:	mov    QWORD PTR [rsp+0x20],rax
   140025968:	call   0x14000e350
   14002596d:	mov    eax,ebx
   14002596f:	add    rsp,0x30
   140025973:	pop    rbx
   140025974:	ret    
   140025975:	int3   
   140025976:	int3   
   140025977:	int3   
   140025978:	mov    QWORD PTR [rsp+0x8],rbx
   14002597d:	push   rdi
   14002597e:	sub    rsp,0x20
   140025982:	mov    rbx,rcx
   140025985:	xor    edi,edi
   140025987:	call   0x140012e10
   14002598c:	lea    rcx,[rax+0x1]
   140025990:	lea    edx,[rdi+0x1]
   140025993:	call   0x140012c6c
   140025998:	mov    r11,rax
   14002599b:	test   rax,rax
   14002599e:	je     0x1400259d4
   1400259a0:	mov    rcx,rax
   1400259a3:	mov    al,BYTE PTR [rbx]
   1400259a5:	test   al,al
   1400259a7:	je     0x1400259cf
   1400259a9:	cmp    al,0x22
   1400259ab:	jne    0x1400259b4
   1400259ad:	inc    rbx
   1400259b0:	inc    edi
   1400259b2:	jmp    0x1400259bd
   1400259b4:	mov    BYTE PTR [r11],al
   1400259b7:	inc    r11
   1400259ba:	inc    rbx
   1400259bd:	mov    al,BYTE PTR [rbx]
   1400259bf:	test   al,al
   1400259c1:	jne    0x1400259a9
   1400259c3:	test   edi,edi
   1400259c5:	je     0x1400259cf
   1400259c7:	mov    BYTE PTR [r11],al
   1400259ca:	mov    rax,rcx
   1400259cd:	jmp    0x1400259d6
   1400259cf:	call   0x1400098ac
   1400259d4:	xor    eax,eax
   1400259d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400259db:	add    rsp,0x20
   1400259df:	pop    rdi
   1400259e0:	ret    
   1400259e1:	int3   
   1400259e2:	int3   
   1400259e3:	int3   
   1400259e4:	mov    rax,rsp
   1400259e7:	mov    QWORD PTR [rax+0x8],rbx
   1400259eb:	mov    QWORD PTR [rax+0x10],rdi
   1400259ef:	mov    QWORD PTR [rax+0x20],r12
   1400259f3:	push   r13
   1400259f5:	push   r14
   1400259f7:	push   r15
   1400259f9:	sub    rsp,0x30
   1400259fd:	mov    r12,rdx
   140025a00:	mov    rbx,rcx
   140025a03:	xor    r15d,r15d
   140025a06:	and    QWORD PTR [rax+0x18],r15
   140025a0a:	lea    ecx,[r15+0x2]
   140025a0e:	call   0x1400132c0
   140025a13:	test   eax,eax
   140025a15:	jne    0x140025a1e
   140025a17:	xor    eax,eax
   140025a19:	jmp    0x140025c9a
   140025a1e:	lea    r8,[rip+0xa25b]        # 0x14002fc80
   140025a25:	xor    edx,edx
   140025a27:	lea    rcx,[rsp+0x60]
   140025a2c:	call   0x14001b230
   140025a31:	mov    edi,eax
   140025a33:	test   eax,eax
   140025a35:	je     0x140025a50
   140025a37:	cmp    eax,0x16
   140025a3a:	jne    0x140025a50
   140025a3c:	and    QWORD PTR [rsp+0x20],r15
   140025a41:	xor    r9d,r9d
   140025a44:	xor    r8d,r8d
   140025a47:	xor    edx,edx
   140025a49:	xor    ecx,ecx
   140025a4b:	call   0x14000e350
   140025a50:	test   edi,edi
   140025a52:	jne    0x140025a70
   140025a54:	mov    rcx,QWORD PTR [rsp+0x60]
   140025a59:	test   rcx,rcx
   140025a5c:	je     0x140025a70
   140025a5e:	xor    edx,edx
   140025a60:	call   0x140025e54
   140025a65:	test   eax,eax
   140025a67:	jne    0x140025a70
   140025a69:	mov    rbx,QWORD PTR [rsp+0x60]
   140025a6e:	jmp    0x140025aa5
   140025a70:	test   rbx,rbx
   140025a73:	je     0x140025a83
   140025a75:	xor    edx,edx
   140025a77:	mov    rcx,rbx
   140025a7a:	call   0x140025e54
   140025a7f:	test   eax,eax
   140025a81:	je     0x140025aa5
   140025a83:	xor    edx,edx
   140025a85:	lea    rcx,[rip+0x1c1c]        # 0x1400276a8
   140025a8c:	call   0x140025e54
   140025a91:	lea    rbx,[rip+0x1c10]        # 0x1400276a8
   140025a98:	lea    rcx,[rip+0x85d5]        # 0x14002e074
   140025a9f:	test   eax,eax
   140025aa1:	cmovne rbx,rcx
   140025aa5:	test   r12,r12
   140025aa8:	je     0x140025ab5
   140025aaa:	mov    rcx,r12
   140025aad:	call   0x140012e10
   140025ab2:	mov    r15,rax
   140025ab5:	mov    rcx,rbx
   140025ab8:	call   0x140012e10
   140025abd:	lea    ecx,[rax+r15*1+0xc]
   140025ac2:	mov    r14d,ecx
   140025ac5:	mov    edx,0x1
   140025aca:	call   0x140023d20
   140025acf:	mov    rdi,rax
   140025ad2:	test   rax,rax
   140025ad5:	je     0x140025c86
   140025adb:	mov    BYTE PTR [rax],0x0
   140025ade:	mov    r8,rbx
   140025ae1:	mov    rdx,r14
   140025ae4:	mov    rcx,rax
   140025ae7:	call   0x14001d1d8
   140025aec:	test   eax,eax
   140025aee:	je     0x140025b05
   140025af0:	and    QWORD PTR [rsp+0x20],0x0
   140025af6:	xor    r9d,r9d
   140025af9:	xor    r8d,r8d
   140025afc:	xor    edx,edx
   140025afe:	xor    ecx,ecx
   140025b00:	call   0x14000e350
   140025b05:	mov    rcx,rbx
   140025b08:	call   0x140012e10
   140025b0d:	lea    r13,[rax+rbx*1-0x1]
   140025b12:	mov    edx,0x5c
   140025b17:	cmp    BYTE PTR [r13+0x0],dl
   140025b1b:	jne    0x140025b57
   140025b1d:	mov    rcx,rbx
   140025b20:	call   0x140025e4c
   140025b25:	cmp    r13,rax
   140025b28:	je     0x140025b89
   140025b2a:	lea    r8,[rip+0x1b77]        # 0x1400276a8
   140025b31:	mov    rdx,r14
   140025b34:	mov    rcx,rdi
   140025b37:	call   0x14001d1d8
   140025b3c:	test   eax,eax
   140025b3e:	je     0x140025b89
   140025b40:	and    QWORD PTR [rsp+0x20],0x0
   140025b46:	xor    r9d,r9d
   140025b49:	xor    r8d,r8d
   140025b4c:	xor    edx,edx
   140025b4e:	xor    ecx,ecx
   140025b50:	call   0x14000e350
   140025b55:	jmp    0x140025b89
   140025b57:	cmp    BYTE PTR [r13+0x0],0x2f
   140025b5c:	je     0x140025b89
   140025b5e:	lea    r8,[rip+0x1b43]        # 0x1400276a8
   140025b65:	mov    rdx,r14
   140025b68:	mov    rcx,rdi
   140025b6b:	call   0x14001d1d8
   140025b70:	test   eax,eax
   140025b72:	je     0x140025b89
   140025b74:	and    QWORD PTR [rsp+0x20],0x0
   140025b7a:	xor    r9d,r9d
   140025b7d:	xor    r8d,r8d
   140025b80:	xor    edx,edx
   140025b82:	xor    ecx,ecx
   140025b84:	call   0x14000e350
   140025b89:	test   r12,r12
   140025b8c:	je     0x140025bb5
   140025b8e:	mov    r8,r12
   140025b91:	mov    rdx,r14
   140025b94:	mov    rcx,rdi
   140025b97:	call   0x14001d1d8
   140025b9c:	test   eax,eax
   140025b9e:	je     0x140025bb5
   140025ba0:	and    QWORD PTR [rsp+0x20],0x0
   140025ba6:	xor    r9d,r9d
   140025ba9:	xor    r8d,r8d
   140025bac:	xor    edx,edx
   140025bae:	xor    ecx,ecx
   140025bb0:	call   0x14000e350
   140025bb5:	mov    rcx,rdi
   140025bb8:	call   0x140012e10
   140025bbd:	lea    r13,[rdi+rax*1]
   140025bc1:	mov    ecx,0x2
   140025bc6:	call   0x1400133a8
   140025bcb:	nop
   140025bcc:	mov    r12d,DWORD PTR [rip+0xfbe9]        # 0x1400357bc
   140025bd3:	cmp    DWORD PTR [rip+0x10b2e],r15d        # 0x140036708
   140025bda:	mov    eax,0x1
   140025bdf:	cmovb  r12d,eax
   140025be3:	mov    DWORD PTR [rip+0xfbd2],r12d        # 0x1400357bc
   140025bea:	mov    DWORD PTR [rip+0x10b17],r15d        # 0x140036708
   140025bf1:	call   0x14000f574
   140025bf6:	mov    ebx,DWORD PTR [rax]
   140025bf8:	mov    ecx,DWORD PTR [rip+0xfbbe]        # 0x1400357bc
   140025bfe:	inc    ecx
   140025c00:	mov    DWORD PTR [rip+0xfbb6],ecx        # 0x1400357bc
   140025c06:	mov    eax,ecx
   140025c08:	sub    eax,r12d
   140025c0b:	cmp    eax,0x7fffffff
   140025c10:	jbe    0x140025c25
   140025c12:	call   0x14000f574
   140025c17:	mov    DWORD PTR [rax],ebx
   140025c19:	mov    rcx,rdi
   140025c1c:	call   0x1400098ac
   140025c21:	xor    edi,edi
   140025c23:	jmp    0x140025c7c
   140025c25:	mov    r8,r14
   140025c28:	sub    r8,r13
   140025c2b:	add    r8,rdi
   140025c2e:	mov    r9d,0xa
   140025c34:	mov    rdx,r13
   140025c37:	call   0x140024348
   140025c3c:	test   eax,eax
   140025c3e:	je     0x140025c55
   140025c40:	and    QWORD PTR [rsp+0x20],0x0
   140025c46:	xor    r9d,r9d
   140025c49:	xor    r8d,r8d
   140025c4c:	xor    edx,edx
   140025c4e:	xor    ecx,ecx
   140025c50:	call   0x14000e350
   140025c55:	call   0x14000f574
   140025c5a:	and    DWORD PTR [rax],0x0
   140025c5d:	xor    edx,edx
   140025c5f:	mov    rcx,rdi
   140025c62:	call   0x140025e54
   140025c67:	test   eax,eax
   140025c69:	je     0x140025bf8
   140025c6b:	call   0x14000f574
   140025c70:	cmp    DWORD PTR [rax],0xd
   140025c73:	je     0x140025bf8
   140025c75:	call   0x14000f574
   140025c7a:	mov    DWORD PTR [rax],ebx
   140025c7c:	mov    ecx,0x2
   140025c81:	call   0x140013288
   140025c86:	mov    rcx,QWORD PTR [rsp+0x60]
   140025c8b:	call   0x1400098ac
   140025c90:	xor    ecx,ecx
   140025c92:	call   0x1400098ac
   140025c97:	mov    rax,rdi
   140025c9a:	mov    rbx,QWORD PTR [rsp+0x50]
   140025c9f:	mov    rdi,QWORD PTR [rsp+0x58]
   140025ca4:	mov    r12,QWORD PTR [rsp+0x68]
   140025ca9:	add    rsp,0x30
   140025cad:	pop    r15
   140025caf:	pop    r14
   140025cb1:	pop    r13
   140025cb3:	ret    
   140025cb4:	mov    QWORD PTR [rsp+0x8],rsi
   140025cb9:	mov    QWORD PTR [rsp+0x10],rdi
   140025cbe:	push   r12
   140025cc0:	sub    rsp,0x30
   140025cc4:	xor    esi,esi
   140025cc6:	lea    ecx,[rsi+0x1]
   140025cc9:	call   0x1400133a8
   140025cce:	nop
   140025ccf:	xor    edi,edi
   140025cd1:	mov    DWORD PTR [rsp+0x20],edi
   140025cd5:	cmp    edi,DWORD PTR [rip+0x132e5]        # 0x140038fc0
   140025cdb:	jge    0x140025d3d
   140025cdd:	movsxd r12,edi
   140025ce0:	mov    rax,QWORD PTR [rip+0x122c1]        # 0x140037fa8
   140025ce7:	cmp    QWORD PTR [rax+r12*8],0x0
   140025cec:	je     0x140025d35
   140025cee:	mov    rdx,QWORD PTR [rax+r12*8]
   140025cf2:	test   BYTE PTR [rdx+0x18],0x83
   140025cf6:	je     0x140025d35
   140025cf8:	mov    ecx,edi
   140025cfa:	call   0x14000a524
   140025cff:	nop
   140025d00:	mov    rdx,QWORD PTR [rip+0x122a1]        # 0x140037fa8
   140025d07:	mov    rcx,QWORD PTR [rdx+r12*8]
   140025d0b:	test   BYTE PTR [rcx+0x18],0x83
   140025d0f:	je     0x140025d2a
   140025d11:	cmp    QWORD PTR [rcx+0x28],0x0
   140025d16:	je     0x140025d2a
   140025d18:	call   0x14000aa94
   140025d1d:	inc    esi
   140025d1f:	mov    DWORD PTR [rsp+0x24],esi
   140025d23:	mov    rdx,QWORD PTR [rip+0x1227e]        # 0x140037fa8
   140025d2a:	mov    rdx,QWORD PTR [rdx+r12*8]
   140025d2e:	mov    ecx,edi
   140025d30:	call   0x14000a5ac
   140025d35:	inc    edi
   140025d37:	mov    DWORD PTR [rsp+0x20],edi
   140025d3b:	jmp    0x140025cd5
   140025d3d:	mov    ecx,0x1
   140025d42:	call   0x140013288
   140025d47:	mov    eax,esi
   140025d49:	mov    rsi,QWORD PTR [rsp+0x40]
   140025d4e:	mov    rdi,QWORD PTR [rsp+0x48]
   140025d53:	add    rsp,0x30
   140025d57:	pop    r12
   140025d59:	ret    
   140025d5a:	int3   
   140025d5b:	int3   
   140025d5c:	mov    QWORD PTR [rsp+0x8],rbx
   140025d61:	mov    QWORD PTR [rsp+0x10],rsi
   140025d66:	push   rdi
   140025d67:	sub    rsp,0x50
   140025d6b:	mov    rbx,rcx
   140025d6e:	mov    esi,edx
   140025d70:	lea    rcx,[rsp+0x30]
   140025d75:	mov    rdx,r8
   140025d78:	xor    edi,edi
   140025d7a:	call   0x1400094b4
   140025d7f:	test   rbx,rbx
   140025d82:	jne    0x140025dba
   140025d84:	call   0x14000f574
   140025d89:	and    QWORD PTR [rsp+0x20],rdi
   140025d8e:	xor    r9d,r9d
   140025d91:	xor    r8d,r8d
   140025d94:	xor    edx,edx
   140025d96:	xor    ecx,ecx
   140025d98:	mov    DWORD PTR [rax],0x16
   140025d9e:	call   0x14000e4d8
   140025da3:	cmp    BYTE PTR [rsp+0x48],dil
   140025da8:	je     0x140025db6
   140025daa:	mov    rax,QWORD PTR [rsp+0x40]
   140025daf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140025db6:	xor    eax,eax
   140025db8:	jmp    0x140025e39
   140025dba:	mov    r8,QWORD PTR [rsp+0x38]
   140025dbf:	cmp    DWORD PTR [r8+0x8],edi
   140025dc3:	jne    0x140025de4
   140025dc5:	mov    edx,esi
   140025dc7:	mov    rcx,rbx
   140025dca:	call   0x14000a824
   140025dcf:	cmp    BYTE PTR [rsp+0x48],dil
   140025dd4:	je     0x140025e39
   140025dd6:	mov    rcx,QWORD PTR [rsp+0x40]
   140025ddb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025de2:	jmp    0x140025e39
   140025de4:	movzx  ecx,BYTE PTR [rbx]
   140025de7:	mov    rdx,rcx
   140025dea:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   140025df0:	je     0x140025e17
   140025df2:	inc    rbx
   140025df5:	mov    cl,BYTE PTR [rbx]
   140025df7:	test   cl,cl
   140025df9:	je     0x140025e0d
   140025dfb:	shl    edx,0x8
   140025dfe:	movzx  eax,cl
   140025e01:	or     edx,eax
   140025e03:	cmp    esi,edx
   140025e05:	jne    0x140025e1d
   140025e07:	lea    rdi,[rbx-0x1]
   140025e0b:	jmp    0x140025e1d
   140025e0d:	test   rdi,rdi
   140025e10:	jne    0x140025e1d
   140025e12:	mov    rdi,rbx
   140025e15:	jmp    0x140025e1d
   140025e17:	cmp    esi,ecx
   140025e19:	cmove  rdi,rbx
   140025e1d:	inc    rbx
   140025e20:	test   cl,cl
   140025e22:	jne    0x140025de4
   140025e24:	cmp    BYTE PTR [rsp+0x48],cl
   140025e28:	je     0x140025e36
   140025e2a:	mov    rcx,QWORD PTR [rsp+0x40]
   140025e2f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025e36:	mov    rax,rdi
   140025e39:	mov    rbx,QWORD PTR [rsp+0x60]
   140025e3e:	mov    rsi,QWORD PTR [rsp+0x68]
   140025e43:	add    rsp,0x50
   140025e47:	pop    rdi
   140025e48:	ret    
   140025e49:	int3   
   140025e4a:	int3   
   140025e4b:	int3   
   140025e4c:	xor    r8d,r8d
   140025e4f:	jmp    0x140025d5c
   140025e54:	rex push rbx
   140025e56:	sub    rsp,0x30
   140025e5a:	mov    ebx,edx
   140025e5c:	test   rcx,rcx
   140025e5f:	jne    0x140025e8e
   140025e61:	call   0x14000f594
   140025e66:	and    DWORD PTR [rax],0x0
   140025e69:	call   0x14000f574
   140025e6e:	and    QWORD PTR [rsp+0x20],0x0
   140025e74:	mov    ebx,0x16
   140025e79:	xor    r9d,r9d
   140025e7c:	xor    r8d,r8d
   140025e7f:	xor    edx,edx
   140025e81:	xor    ecx,ecx
   140025e83:	mov    DWORD PTR [rax],ebx
   140025e85:	call   0x14000e4d8
   140025e8a:	mov    eax,ebx
   140025e8c:	jmp    0x140025ede
   140025e8e:	test   edx,0xfffffff9
   140025e94:	jne    0x140025e61
   140025e96:	call   QWORD PTR [rip+0x1404]        # 0x1400272a0
   140025e9c:	cmp    eax,0xffffffff
   140025e9f:	jne    0x140025eb7
   140025ea1:	call   QWORD PTR [rip+0x13c9]        # 0x140027270
   140025ea7:	mov    ecx,eax
   140025ea9:	call   0x14000f5b4
   140025eae:	call   0x14000f574
   140025eb3:	mov    eax,DWORD PTR [rax]
   140025eb5:	jmp    0x140025ede
   140025eb7:	test   al,0x10
   140025eb9:	jne    0x140025edc
   140025ebb:	test   al,0x1
   140025ebd:	je     0x140025edc
   140025ebf:	test   bl,0x2
   140025ec2:	je     0x140025edc
   140025ec4:	call   0x14000f594
   140025ec9:	mov    DWORD PTR [rax],0x5
   140025ecf:	call   0x14000f574
   140025ed4:	mov    DWORD PTR [rax],0xd
   140025eda:	jmp    0x140025eae
   140025edc:	xor    eax,eax
   140025ede:	add    rsp,0x30
   140025ee2:	pop    rbx
   140025ee3:	ret    
   140025ee4:	sub    rsp,0x28
   140025ee8:	call   0x140025e54
   140025eed:	neg    eax
   140025eef:	sbb    eax,eax
   140025ef1:	add    rsp,0x28
   140025ef5:	ret    
   140025ef6:	int3   
   140025ef7:	int3   
   140025ef8:	int3   
   140025ef9:	int3   
   140025efa:	int3   
   140025efb:	int3   
   140025efc:	int3   
   140025efd:	int3   
   140025efe:	int3   
   140025eff:	int3   
   140025f00:	int3   
   140025f01:	int3   
   140025f02:	int3   
   140025f03:	int3   
   140025f04:	int3   
   140025f05:	int3   
   140025f06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025f10:	sub    rsp,0x10
   140025f14:	mov    QWORD PTR [rsp],r10
   140025f18:	mov    QWORD PTR [rsp+0x8],r11
   140025f1d:	xor    r11,r11
   140025f20:	lea    r10,[rsp+0x18]
   140025f25:	sub    r10,rax
   140025f28:	cmovb  r10,r11
   140025f2c:	mov    r11,QWORD PTR gs:0x10
   140025f35:	cmp    r10,r11
   140025f38:	jae    0x140025f50
   140025f3a:	and    r10w,0xf000
   140025f40:	lea    r11,[r11-0x1000]
   140025f47:	mov    BYTE PTR [r11],0x0
   140025f4b:	cmp    r10,r11
   140025f4e:	jne    0x140025f40
   140025f50:	mov    r10,QWORD PTR [rsp]
   140025f54:	mov    r11,QWORD PTR [rsp+0x8]
   140025f59:	add    rsp,0x10
   140025f5d:	ret    
   140025f5e:	int3   
   140025f5f:	int3   
   140025f60:	rex push rbp
   140025f62:	sub    rsp,0x20
   140025f66:	mov    rbp,rdx
   140025f69:	mov    ecx,0x7
   140025f6e:	call   0x140013288
   140025f73:	add    rsp,0x20
   140025f77:	pop    rbp
   140025f78:	ret    
   140025f79:	rex push rbp
   140025f7b:	sub    rsp,0x30
   140025f7f:	mov    rbp,rdx
   140025f82:	mov    ecx,0x7
   140025f87:	call   0x140013288
   140025f8c:	add    rsp,0x30
   140025f90:	pop    rbp
   140025f91:	ret    
   140025f92:	rex push rbp
   140025f94:	sub    rsp,0x40
   140025f98:	mov    rbp,rdx
   140025f9b:	mov    ecx,DWORD PTR [rbp+0xd0]
   140025fa1:	call   0x140013674
   140025fa6:	add    rsp,0x40
   140025faa:	pop    rbp
   140025fab:	ret    
   140025fac:	rex push rbp
   140025fae:	sub    rsp,0x30
   140025fb2:	mov    rbp,rdx
   140025fb5:	mov    rcx,QWORD PTR [rbp+0x60]
   140025fb9:	call   0x14000a554
   140025fbe:	add    rsp,0x30
   140025fc2:	pop    rbp
   140025fc3:	ret    
   140025fc4:	rex push rbp
   140025fc6:	sub    rsp,0x30
   140025fca:	mov    rbp,rdx
   140025fcd:	mov    rcx,QWORD PTR [rbp+0x40]
   140025fd1:	call   0x14000a554
   140025fd6:	add    rsp,0x30
   140025fda:	pop    rbp
   140025fdb:	ret    
   140025fdc:	rex push rbp
   140025fde:	sub    rsp,0x30
   140025fe2:	mov    rbp,rdx
   140025fe5:	mov    rcx,QWORD PTR [rbp+0x58]
   140025fe9:	call   0x14000a554
   140025fee:	add    rsp,0x30
   140025ff2:	pop    rbp
   140025ff3:	ret    
   140025ff4:	rex push rbp
   140025ff6:	sub    rsp,0x30
   140025ffa:	mov    rbp,rdx
   140025ffd:	mov    rcx,QWORD PTR [rbp+0x50]
   140026001:	call   0x14000a554
   140026006:	add    rsp,0x30
   14002600a:	pop    rbp
   14002600b:	ret    
   14002600c:	rex push rbp
   14002600e:	sub    rsp,0x30
   140026012:	mov    rbp,rdx
   140026015:	mov    rcx,QWORD PTR [rbp+0x88]
   14002601c:	call   0x14000a554
   140026021:	add    rsp,0x30
   140026025:	pop    rbp
   140026026:	ret    
   140026027:	rex push rbp
   140026029:	sub    rsp,0x20
   14002602d:	mov    rbp,rdx
   140026030:	cmp    DWORD PTR [rbp+0x80],0x0
   140026037:	je     0x140026043
   140026039:	mov    ecx,0x8
   14002603e:	call   0x140013288
   140026043:	add    rsp,0x20
   140026047:	pop    rbp
   140026048:	ret    
   140026049:	rex push rbp
   14002604b:	sub    rsp,0x20
   14002604f:	mov    rbp,rdx
   140026052:	mov    rax,QWORD PTR [rcx]
   140026055:	mov    rdx,rcx
   140026058:	mov    ecx,DWORD PTR [rax]
   14002605a:	call   0x140019938
   14002605f:	add    rsp,0x20
   140026063:	pop    rbp
   140026064:	ret    
   140026065:	rex push rbp
   140026067:	sub    rsp,0x40
   14002606b:	mov    rbp,rdx
   14002606e:	mov    ecx,0x7
   140026073:	call   0x140013288
   140026078:	add    rsp,0x40
   14002607c:	pop    rbp
   14002607d:	ret    
   14002607e:	rex push rbp
   140026080:	sub    rsp,0x20
   140026084:	mov    rbp,rdx
   140026087:	mov    ecx,0x6
   14002608c:	call   0x140013288
   140026091:	add    rsp,0x20
   140026095:	pop    rbp
   140026096:	ret    
   140026097:	rex push rbp
   140026099:	sub    rsp,0x20
   14002609d:	mov    rbp,rdx
   1400260a0:	mov    ecx,0x6
   1400260a5:	call   0x140013288
   1400260aa:	add    rsp,0x20
   1400260ae:	pop    rbp
   1400260af:	ret    
   1400260b0:	rex push rbp
   1400260b2:	sub    rsp,0x20
   1400260b6:	mov    rbp,rdx
   1400260b9:	mov    ecx,0x6
   1400260be:	call   0x140013288
   1400260c3:	add    rsp,0x20
   1400260c7:	pop    rbp
   1400260c8:	ret    
   1400260c9:	rex push rbp
   1400260cb:	sub    rsp,0x20
   1400260cf:	mov    rbp,rdx
   1400260d2:	mov    ecx,0xd
   1400260d7:	call   0x140013288
   1400260dc:	add    rsp,0x20
   1400260e0:	pop    rbp
   1400260e1:	ret    
   1400260e2:	rex push rbp
   1400260e4:	sub    rsp,0x20
   1400260e8:	mov    rbp,rdx
   1400260eb:	mov    ecx,0xd
   1400260f0:	call   0x140013288
   1400260f5:	add    rsp,0x20
   1400260f9:	pop    rbp
   1400260fa:	ret    
   1400260fb:	rex push rbp
   1400260fd:	sub    rsp,0x20
   140026101:	mov    rbp,rdx
   140026104:	mov    ecx,0xc
   140026109:	call   0x140013288
   14002610e:	add    rsp,0x20
   140026112:	pop    rbp
   140026113:	ret    
   140026114:	rex push rbp
   140026116:	sub    rsp,0x20
   14002611a:	mov    rbp,rdx
   14002611d:	mov    ecx,0xd
   140026122:	call   0x140013288
   140026127:	add    rsp,0x20
   14002612b:	pop    rbp
   14002612c:	ret    
   14002612d:	int3   
   14002612e:	int3   
   14002612f:	int3   
   140026130:	int3   
   140026131:	int3   
   140026132:	int3   
   140026133:	int3   
   140026134:	rex push rbp
   140026136:	sub    rsp,0x20
   14002613a:	mov    rbp,rdx
   14002613d:	mov    ecx,0xc
   140026142:	call   0x140013288
   140026147:	add    rsp,0x20
   14002614b:	pop    rbp
   14002614c:	ret    
   14002614d:	rex push rbp
   14002614f:	sub    rsp,0x20
   140026153:	mov    rbp,rdx
   140026156:	mov    ecx,0xc
   14002615b:	call   0x140013288
   140026160:	add    rsp,0x20
   140026164:	pop    rbp
   140026165:	ret    
   140026166:	int3   
   140026167:	int3   
   140026168:	int3   
   140026169:	int3   
   14002616a:	int3   
   14002616b:	int3   
   14002616c:	int3   
   14002616d:	rex push rbp
   14002616f:	sub    rsp,0x20
   140026173:	mov    rbp,rdx
   140026176:	mov    ecx,0xd
   14002617b:	call   0x140013288
   140026180:	add    rsp,0x20
   140026184:	pop    rbp
   140026185:	ret    
   140026186:	rex push rbp
   140026188:	sub    rsp,0x30
   14002618c:	mov    rbp,rdx
   14002618f:	mov    ecx,0xc
   140026194:	call   0x140013288
   140026199:	add    rsp,0x30
   14002619d:	pop    rbp
   14002619e:	ret    
   14002619f:	int3   
   1400261a0:	int3   
   1400261a1:	int3   
   1400261a2:	int3   
   1400261a3:	int3   
   1400261a4:	int3   
   1400261a5:	int3   
   1400261a6:	rex push rbp
   1400261a8:	sub    rsp,0x30
   1400261ac:	mov    rbp,rdx
   1400261af:	mov    ecx,0xc
   1400261b4:	call   0x140013288
   1400261b9:	add    rsp,0x30
   1400261bd:	pop    rbp
   1400261be:	ret    
   1400261bf:	int3   
   1400261c0:	int3   
   1400261c1:	int3   
   1400261c2:	int3   
   1400261c3:	int3   
   1400261c4:	int3   
   1400261c5:	int3   
   1400261c6:	rex push rbp
   1400261c8:	sub    rsp,0x30
   1400261cc:	mov    rbp,rdx
   1400261cf:	mov    rax,QWORD PTR [rbp+0x70]
   1400261d3:	and    DWORD PTR [rax+0xc8],0xffffffef
   1400261da:	add    rsp,0x30
   1400261de:	pop    rbp
   1400261df:	ret    
   1400261e0:	rex push rbp
   1400261e2:	sub    rsp,0x20
   1400261e6:	mov    rbp,rdx
   1400261e9:	mov    ecx,0xd
   1400261ee:	call   0x140013288
   1400261f3:	add    rsp,0x20
   1400261f7:	pop    rbp
   1400261f8:	ret    
   1400261f9:	int3   
   1400261fa:	int3   
   1400261fb:	int3   
   1400261fc:	int3   
   1400261fd:	int3   
   1400261fe:	int3   
   1400261ff:	int3   
   140026200:	rex push rbp
   140026202:	sub    rsp,0x20
   140026206:	mov    rbp,rdx
   140026209:	mov    ecx,0xc
   14002620e:	call   0x140013288
   140026213:	add    rsp,0x20
   140026217:	pop    rbp
   140026218:	ret    
   140026219:	rex push rbp
   14002621b:	sub    rsp,0x20
   14002621f:	mov    rbp,rdx
   140026222:	mov    ecx,0xd
   140026227:	call   0x140013288
   14002622c:	add    rsp,0x20
   140026230:	pop    rbp
   140026231:	ret    
   140026232:	int3   
   140026233:	int3   
   140026234:	int3   
   140026235:	int3   
   140026236:	int3   
   140026237:	int3   
   140026238:	int3   
   140026239:	rex push rbp
   14002623b:	sub    rsp,0x20
   14002623f:	mov    rbp,rdx
   140026242:	mov    ecx,0xc
   140026247:	call   0x140013288
   14002624c:	add    rsp,0x20
   140026250:	pop    rbp
   140026251:	ret    
   140026252:	rex push rbp
   140026254:	sub    rsp,0x20
   140026258:	mov    rbp,rdx
   14002625b:	mov    rcx,QWORD PTR [rip+0xf0be]        # 0x140035320
   140026262:	call   QWORD PTR [rip+0x10c8]        # 0x140027330
   140026268:	add    rsp,0x20
   14002626c:	pop    rbp
   14002626d:	ret    
   14002626e:	rex push rbp
   140026270:	sub    rsp,0x20
   140026274:	mov    rbp,rdx
   140026277:	mov    ecx,0xa
   14002627c:	call   0x140013288
   140026281:	add    rsp,0x20
   140026285:	pop    rbp
   140026286:	ret    
   140026287:	rex push rbp
   140026289:	sub    rsp,0x20
   14002628d:	mov    rbp,rdx
   140026290:	mov    ecx,0xa
   140026295:	call   0x140013288
   14002629a:	add    rsp,0x20
   14002629e:	pop    rbp
   14002629f:	ret    
   1400262a0:	int3   
   1400262a1:	int3   
   1400262a2:	int3   
   1400262a3:	int3   
   1400262a4:	int3   
   1400262a5:	int3   
   1400262a6:	int3   
   1400262a7:	rex push rbp
   1400262a9:	sub    rsp,0x20
   1400262ad:	mov    rbp,rdx
   1400262b0:	mov    ecx,0xb
   1400262b5:	call   0x140013288
   1400262ba:	add    rsp,0x20
   1400262be:	pop    rbp
   1400262bf:	ret    
   1400262c0:	rex push rbp
   1400262c2:	push   rdi
   1400262c3:	sub    rsp,0x28
   1400262c7:	mov    rbp,rdx
   1400262ca:	xor    edi,edi
   1400262cc:	cmp    DWORD PTR [rbp+0x20],edi
   1400262cf:	jne    0x1400262f8
   1400262d1:	movsxd rdx,DWORD PTR [rbp+0x48]
   1400262d5:	mov    rcx,rdx
   1400262d8:	mov    rax,rdx
   1400262db:	sar    rax,0x5
   1400262df:	lea    r8,[rip+0x11a7a]        # 0x140037d60
   1400262e6:	and    ecx,0x1f
   1400262e9:	imul   rcx,rcx,0x58
   1400262ed:	mov    rax,QWORD PTR [r8+rax*8]
   1400262f1:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400262f6:	jmp    0x1400262fb
   1400262f8:	mov    edx,DWORD PTR [rbp+0x48]
   1400262fb:	mov    ecx,edx
   1400262fd:	call   0x140013674
   140026302:	add    rsp,0x28
   140026306:	pop    rdi
   140026307:	pop    rbp
   140026308:	ret    
   140026309:	rex push rbp
   14002630b:	sub    rsp,0x30
   14002630f:	mov    rbp,rdx
   140026312:	mov    rcx,QWORD PTR [rbp+0x58]
   140026316:	call   0x14000a554
   14002631b:	add    rsp,0x30
   14002631f:	pop    rbp
   140026320:	ret    
   140026321:	rex push rbp
   140026323:	sub    rsp,0x20
   140026327:	mov    rbp,rdx
   14002632a:	mov    ecx,0x1
   14002632f:	call   0x140013288
   140026334:	add    rsp,0x20
   140026338:	pop    rbp
   140026339:	ret    
   14002633a:	rex push rbp
   14002633c:	sub    rsp,0x20
   140026340:	mov    rbp,rdx
   140026343:	movsxd rcx,DWORD PTR [rbp+0x20]
   140026347:	mov    rax,rcx
   14002634a:	mov    rdx,QWORD PTR [rip+0x11c57]        # 0x140037fa8
   140026351:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140026355:	call   0x14000a5ac
   14002635a:	add    rsp,0x20
   14002635e:	pop    rbp
   14002635f:	ret    
   140026360:	int3   
   140026361:	int3   
   140026362:	int3   
   140026363:	int3   
   140026364:	int3   
   140026365:	int3   
   140026366:	int3   
   140026367:	int3   
   140026368:	int3   
   140026369:	int3   
   14002636a:	rex push rbp
   14002636c:	sub    rsp,0x20
   140026370:	mov    rbp,rdx
   140026373:	mov    ecx,0x1
   140026378:	call   0x140013288
   14002637d:	add    rsp,0x20
   140026381:	pop    rbp
   140026382:	ret    
   140026383:	rex push rbp
   140026385:	sub    rsp,0x20
   140026389:	mov    rbp,rdx
   14002638c:	mov    rcx,QWORD PTR [rbp+0x30]
   140026390:	call   0x14000a554
   140026395:	add    rsp,0x20
   140026399:	pop    rbp
   14002639a:	ret    
   14002639b:	rex push rbp
   14002639d:	sub    rsp,0x30
   1400263a1:	mov    rbp,rdx
   1400263a4:	mov    ecx,DWORD PTR [rbp+0x50]
   1400263a7:	call   0x140013674
   1400263ac:	add    rsp,0x30
   1400263b0:	pop    rbp
   1400263b1:	ret    
   1400263b2:	rex push rbp
   1400263b4:	sub    rsp,0x30
   1400263b8:	mov    rbp,rdx
   1400263bb:	mov    ecx,DWORD PTR [rbp+0x60]
   1400263be:	call   0x140013674
   1400263c3:	add    rsp,0x30
   1400263c7:	pop    rbp
   1400263c8:	ret    
   1400263c9:	rex push rbp
   1400263cb:	sub    rsp,0x20
   1400263cf:	mov    rbp,rdx
   1400263d2:	mov    ecx,0x1
   1400263d7:	call   0x140013288
   1400263dc:	add    rsp,0x20
   1400263e0:	pop    rbp
   1400263e1:	ret    
   1400263e2:	rex push rbp
   1400263e4:	sub    rsp,0x20
   1400263e8:	mov    rbp,rdx
   1400263eb:	call   0x14000dbac
   1400263f0:	add    rsp,0x20
   1400263f4:	pop    rbp
   1400263f5:	ret    
   1400263f6:	int3   
   1400263f7:	int3   
   1400263f8:	int3   
   1400263f9:	int3   
   1400263fa:	int3   
   1400263fb:	int3   
   1400263fc:	int3   
   1400263fd:	int3   
   1400263fe:	int3   
   1400263ff:	int3   
   140026400:	rex push rbp
   140026402:	sub    rsp,0x20
   140026406:	mov    rbp,rdx
   140026409:	mov    rax,QWORD PTR [rcx]
   14002640c:	xor    ecx,ecx
   14002640e:	cmp    DWORD PTR [rax],0xc0000005
   140026414:	sete   cl
   140026417:	mov    eax,ecx
   140026419:	mov    eax,ecx
   14002641b:	add    rsp,0x20
   14002641f:	pop    rbp
   140026420:	ret    
   140026421:	rex push rbp
   140026423:	sub    rsp,0x20
   140026427:	mov    rbp,rdx
   14002642a:	xor    ecx,ecx
   14002642c:	call   0x140013288
   140026431:	add    rsp,0x20
   140026435:	pop    rbp
   140026436:	ret    
   140026437:	rex push rbp
   140026439:	sub    rsp,0x30
   14002643d:	mov    rbp,rdx
   140026440:	xor    ecx,ecx
   140026442:	call   0x140013288
   140026447:	add    rsp,0x30
   14002644b:	pop    rbp
   14002644c:	ret    
   14002644d:	rex push rbp
   14002644f:	sub    rsp,0x30
   140026453:	mov    rbp,rdx
   140026456:	cmp    DWORD PTR [rbp+0x70],0x0
   14002645a:	je     0x140026463
   14002645c:	xor    ecx,ecx
   14002645e:	call   0x140013288
   140026463:	add    rsp,0x30
   140026467:	pop    rbp
   140026468:	ret    
   140026469:	rex push rbp
   14002646b:	sub    rsp,0x20
   14002646f:	mov    rbp,rdx
   140026472:	mov    rax,QWORD PTR [rcx]
   140026475:	xor    r11d,r11d
   140026478:	cmp    DWORD PTR [rax],0xc0000017
   14002647e:	sete   r11b
   140026482:	mov    eax,r11d
   140026485:	add    rsp,0x20
   140026489:	pop    rbp
   14002648a:	ret    
   14002648b:	rex push rbp
   14002648d:	sub    rsp,0x30
   140026491:	mov    rbp,rdx
   140026494:	mov    ecx,0x7
   140026499:	call   0x140013288
   14002649e:	add    rsp,0x30
   1400264a2:	pop    rbp
   1400264a3:	ret    
   1400264a4:	rex push rbp
   1400264a6:	sub    rsp,0x30
   1400264aa:	mov    rbp,rdx
   1400264ad:	mov    ecx,0x7
   1400264b2:	call   0x140013288
   1400264b7:	add    rsp,0x30
   1400264bb:	pop    rbp
   1400264bc:	ret    
   1400264bd:	rex push rbp
   1400264bf:	sub    rsp,0x30
   1400264c3:	mov    rbp,rdx
   1400264c6:	mov    ecx,0x7
   1400264cb:	call   0x140013288
   1400264d0:	add    rsp,0x30
   1400264d4:	pop    rbp
   1400264d5:	ret    
   1400264d6:	rex push rbp
   1400264d8:	sub    rsp,0x30
   1400264dc:	mov    rbp,rdx
   1400264df:	call   0x14000a3b0
   1400264e4:	add    rax,0x30
   1400264e8:	mov    rdx,rax
   1400264eb:	mov    ecx,0x1
   1400264f0:	call   0x14000a5ac
   1400264f5:	add    rsp,0x30
   1400264f9:	pop    rbp
   1400264fa:	ret    
   1400264fb:	rex push rbp
   1400264fd:	sub    rsp,0x30
   140026501:	mov    rbp,rdx
   140026504:	mov    ecx,DWORD PTR [rbp+0x50]
   140026507:	call   0x140013674
   14002650c:	add    rsp,0x30
   140026510:	pop    rbp
   140026511:	ret    
   140026512:	rex push rbp
   140026514:	sub    rsp,0x30
   140026518:	mov    rbp,rdx
   14002651b:	mov    ecx,DWORD PTR [rbp+0x60]
   14002651e:	call   0x140013674
   140026523:	add    rsp,0x30
   140026527:	pop    rbp
   140026528:	ret    
   140026529:	rex push rbp
   14002652b:	sub    rsp,0x30
   14002652f:	mov    rbp,rdx
   140026532:	mov    rcx,QWORD PTR [rbp+0x48]
   140026536:	call   0x14000a554
   14002653b:	add    rsp,0x30
   14002653f:	pop    rbp
   140026540:	ret    
   140026541:	rex push rbp
   140026543:	sub    rsp,0x30
   140026547:	mov    rbp,rdx
   14002654a:	mov    ecx,0x3
   14002654f:	call   0x140013288
   140026554:	add    rsp,0x30
   140026558:	pop    rbp
   140026559:	ret    
   14002655a:	rex push rbp
   14002655c:	sub    rsp,0x20
   140026560:	mov    rbp,rdx
   140026563:	mov    ecx,0x3
   140026568:	call   0x140013288
   14002656d:	add    rsp,0x20
   140026571:	pop    rbp
   140026572:	ret    
   140026573:	rex push rbp
   140026575:	sub    rsp,0x40
   140026579:	mov    rbp,rdx
   14002657c:	cmp    DWORD PTR [rbp+0x44],0x0
   140026580:	je     0x1400265b9
   140026582:	cmp    DWORD PTR [rbp+0x48],0x0
   140026586:	je     0x1400265af
   140026588:	movsxd rdx,DWORD PTR [rbp+0x40]
   14002658c:	mov    rcx,rdx
   14002658f:	mov    rax,rdx
   140026592:	sar    rax,0x5
   140026596:	lea    r8,[rip+0x117c3]        # 0x140037d60
   14002659d:	and    ecx,0x1f
   1400265a0:	imul   rcx,rcx,0x58
   1400265a4:	mov    rax,QWORD PTR [r8+rax*8]
   1400265a8:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400265ad:	jmp    0x1400265b2
   1400265af:	mov    edx,DWORD PTR [rbp+0x40]
   1400265b2:	mov    ecx,edx
   1400265b4:	call   0x140013674
   1400265b9:	add    rsp,0x40
   1400265bd:	pop    rbp
   1400265be:	ret    
   1400265bf:	rex push rbp
   1400265c1:	sub    rsp,0x40
   1400265c5:	mov    rbp,rdx
   1400265c8:	cmp    DWORD PTR [rbp+0x40],0x0
   1400265cc:	je     0x14002660c
   1400265ce:	cmp    DWORD PTR [rbp+0x44],0x0
   1400265d2:	je     0x1400265fe
   1400265d4:	mov    rdx,QWORD PTR [rbp+0x80]
   1400265db:	movsxd rcx,DWORD PTR [rdx]
   1400265de:	mov    rax,rcx
   1400265e1:	sar    rax,0x5
   1400265e5:	lea    r8,[rip+0x11774]        # 0x140037d60
   1400265ec:	and    ecx,0x1f
   1400265ef:	imul   rcx,rcx,0x58
   1400265f3:	mov    rax,QWORD PTR [r8+rax*8]
   1400265f7:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400265fc:	jmp    0x140026605
   1400265fe:	mov    rdx,QWORD PTR [rbp+0x80]
   140026605:	mov    ecx,DWORD PTR [rdx]
   140026607:	call   0x140013674
   14002660c:	add    rsp,0x40
   140026610:	pop    rbp
   140026611:	ret    
   140026612:	rex push rbp
   140026614:	sub    rsp,0x30
   140026618:	mov    rbp,rdx
   14002661b:	mov    ecx,DWORD PTR [rbp+0x60]
   14002661e:	call   0x140013674
   140026623:	add    rsp,0x30
   140026627:	pop    rbp
   140026628:	ret    
   140026629:	rex push rbp
   14002662b:	sub    rsp,0x30
   14002662f:	mov    rbp,rdx
   140026632:	mov    rcx,QWORD PTR [rbp+0x58]
   140026636:	call   0x14000a554
   14002663b:	add    rsp,0x30
   14002663f:	pop    rbp
   140026640:	ret    
   140026641:	rex push rbp
   140026643:	sub    rsp,0x30
   140026647:	mov    rbp,rdx
   14002664a:	mov    ecx,DWORD PTR [rbp+0x50]
   14002664d:	call   0x140013674
   140026652:	add    rsp,0x30
   140026656:	pop    rbp
   140026657:	ret    
   140026658:	rex push rbp
   14002665a:	sub    rsp,0x30
   14002665e:	mov    rbp,rdx
   140026661:	mov    ecx,DWORD PTR [rbp+0x60]
   140026664:	call   0x140013674
   140026669:	add    rsp,0x30
   14002666d:	pop    rbp
   14002666e:	ret    
   14002666f:	rex push rbp
   140026671:	sub    rsp,0x30
   140026675:	mov    rbp,rdx
   140026678:	mov    ecx,DWORD PTR [rbp+0x50]
   14002667b:	call   0x140013674
   140026680:	add    rsp,0x30
   140026684:	pop    rbp
   140026685:	ret    
   140026686:	rex push rbp
   140026688:	sub    rsp,0x30
   14002668c:	mov    rbp,rdx
   14002668f:	mov    ecx,0x2
   140026694:	call   0x140013288
   140026699:	add    rsp,0x30
   14002669d:	pop    rbp
   14002669e:	ret    
   14002669f:	rex push rbp
   1400266a1:	sub    rsp,0x20
   1400266a5:	mov    rbp,rdx
   1400266a8:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400266ac:	mov    rax,rcx
   1400266af:	mov    rdx,QWORD PTR [rip+0x118f2]        # 0x140037fa8
   1400266b6:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400266ba:	call   0x14000a5ac
   1400266bf:	add    rsp,0x20
   1400266c3:	pop    rbp
   1400266c4:	ret    
   1400266c5:	int3   
   1400266c6:	int3   
   1400266c7:	int3   
   1400266c8:	int3   
   1400266c9:	int3   
   1400266ca:	int3   
   1400266cb:	int3   
   1400266cc:	int3   
   1400266cd:	int3   
   1400266ce:	int3   
   1400266cf:	rex push rbp
   1400266d1:	sub    rsp,0x20
   1400266d5:	mov    rbp,rdx
   1400266d8:	mov    ecx,0x1
   1400266dd:	call   0x140013288
   1400266e2:	add    rsp,0x20
   1400266e6:	pop    rbp
   1400266e7:	ret    
